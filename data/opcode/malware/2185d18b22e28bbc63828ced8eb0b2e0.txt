dec
xchg
adc
and
xor
xchg
ror
and
in
daa
imul
and
scas
icebp
mov
fs
outs
movs
cmps
pop
loope
shr
call
inc
mov
dec
or
mov
neg
imul
add
fdivr
xor
sub
add
xchg
sub
sbb
bound
cli
mov
mov
dec
add
mov
daa
or
jecxz
or
or
push
dec
fcomp
add
sbb
xor
(bad)
jno
cmp
int
lahf
cld
pop
inc
push
inc
pop
fcom
call
inc
add
xor
add
mov
loopne
dec
mov
aas
stos
sub
das
mov
mov
cdq
or
add
jns
jle
and
pop
out
or
stos
popa
repz
dec
push
cmps
pop
call
call
sub
icebp
daa
mov
inc
or
les
inc
aaa
cmp
xlat
imul
add
sbb
cmp
mov
shr
not
lds
pop
mov
sub
xor
xchg
in
lock
add
aad
cmp
mov
push
int3
xor
sub
rcl
shl
dec
loop
cmp
cmp
cmp
or
mov
and
dec
xchg
or
cmp
lock
fcomp
add
retf
push
push
jns
ins
inc
add
xor
mov
rcl
daa
adc
loopne
jmp
dec
movs
sahf
and
shr
sbb
mov
mov
ds
push
loope
loopne
in
or
cdq
mov
jb
pop
push
xor
mov
imul
je
mov
adc
pop
or
test
retf
xchg
fwait
dec
xchg
call
xchg
pop
call
sbb
addr16
or
ins
mov
fiadd
jecxz
push
add
retf
add
ja
push
mov
jb
mov
sti
adc
dec
(bad)
jbe
mov
cli
mov
test
dec
out
cli
sbb
bound
icebp
sub
fimul
inc
mov
and
jae
push
es
xchg
in
xor
outs
ficom
iret
adc
add
adc
aas
add
jge
xor
fist
sahf
cli
sbb
or
cmp
call
aas
pop
outs
daa
push
xchg
mov
mov
xchg
adc
jo
cmp
push
xchg
xchg
or
popa
pop
mov
mov
pop
icebp
fnstsw
pop
mov
rcl
(bad)
xor
outs
sub
fnsave
and
xlat
hlt
cli
xor
xchg
jo
int
call
enter
jl
hlt
mov
mov
popa
aas
cmps
cwde
in
push
stc
inc
mov
mov
cmps
test
call
add
sub
inc
xchg
xor
jmp
push
sbb
adc
daa
mul
jmp
(bad)
jmp
xchg
xor
(bad)
or
test
stos
xchg
pop
loope
pusha
and
fwait
inc
mov
jo
les
lahf
mov
sub
ficom
out
xor
dec
xchg
push
add
shl
imul
jecxz
push
cs
outs
loop
mov
mov
sbb
dec
repnz
cld
push
ins
and
and
and
xor
mov
ss
cmp
sbb
add
cli
jns
pop
mov
mov
add
loopne
adc
std
bound
sub
xor
and
xchg
cmp
not
mov
pop
xor
fidiv
mov
fcom
xor
add
jmp
push
mov
clc
push
jge
nop
les
jecxz
jo
cli
bound
adc
add
aad
cmp
fidiv
cmp
xor
pop
cmps
dec
in
fs
out
mov
sbb
std
mov
imul
call
xor
inc
icebp
inc
lds
cmp
call
shl
jns
inc
call
fwait
mov
loope
jecxz
neg
xor
xlat
rol
cmp
fs
mov
mov
(bad)
jecxz
inc
loope
mov
imul
pop
dec
adc
xor
iret
dec
sbb
fsub
scas
jp
jp
cdq
popa
sub
cwde
xor
nop
mov
mov
out
imul
push
dec
and
ffree
lahf
fisub
frstor
pop
mov
push
cmp
jp
out
sti
xchg
inc
sti
ret
test
fnstsw
cmp
aad
or
pop
lods
mov
or
inc
dec
loop
test
pop
cli
jl
push
push
push
bound
xchg
(bad)
out
cmps
inc
inc
sub
inc
stc
jae
push
dec
pop
adc
jne
dec
fldcw
je
fistp
pop
adc
inc
mov
loope
lods
retf
mov
push
mov
jae
mov
jae
push
jo
mov
les
jl
nop
cmp
mov
in
scas
imul
std
cmp
mov
jg
mov
hlt
cdq
xchg
sub
inc
stos
aad
out
(bad)
call
repnz
aas
out
inc
jb
mov
and
shl
mov
call
pop
leave
jle
outs
shl
xchg
out
xchg
mov
xchg
xor
and
cli
pop
inc
dec
mov
fld
lods
sbb
push
adc
xchg
sbb
push
dec
mov
popf
cdq
out
je
popf
fstp
push
inc
dec
es
jne
out
mov
ins
loopne
cmp
xchg
dec
mov
retf
xchg
aam
movs
mov
dec
and
lea
pop
dec
push
rol
std
jno
out
mov
popa
cmp
sbb
iret
mov
mov
inc
movs
pop
mov
add
jmp
inc
cdq
dec
push
pop
out
jbe
mov
add
mov
xchg
mov
adc
cmp
test
sub
outs
mov
fimul
cmps
dec
lea
lahf
sbb
mov
mov
add
loop
sub
mov
in
xchg
fnstcw
mov
fldenv
stc
mov
jo
adc
xor
stos
cmp
inc
inc
inc
xchg
and
sbb
mov
ret
cmp
adc
and
retf
adc
mov
inc
call
ja
cdq
loope
test
sub
(bad)
jo
repz
rcr
or
mov
icebp
in
push
adc
mov
fiadd
xor
mov
mov
mov
or
add
dec
adc
pop
ins
and
xor
xor
sahf
ins
jno
cmp
popa
outs
pop
es
es
xchg
and
ja
repnz
jg
jae
and
add
movs
pop
xor
cmp
dec
jae
sbb
jns
rep
sub
push
call
test
sbb
sbb
pop
ret
vmaxss
out
fdiv
inc
aam
arpl
sub
leave
pop
dec
or
test
jno
push
call
inc
shl
daa
inc
sbb
jg
xchg
sub
out
adc
adc
stos
call
pop
jmp
adc
mov
test
ss
fwait
and
mov
ficom
popf
out
mov
sub
push
mov
jmp
js
loop
pop
mov
data16
jbe
or
int
mov
dec
mov
imul
adc
fmul
mov
cmp
push
dec
sub
(bad)
fdiv
je
mov
pop
cmc
adc
int3
mov
xor
cmp
and
dec
(bad)
std
sub
int
in
add
jmp
sbb
in
sar
jge
fiadd
jb
cwde
inc
test
jne
ficomp
add
call
(bad)
adc
dec
sub
jecxz
rcr
xor
fisubr
pop
popf
sub
fmul
sub
cmp
pop
test
test
mov
mov
dec
push
out
pop
fstp
leave
arpl
cmp
sbb
pop
jne
pop
leave
(bad)
lods
push
cmps
sbb
jb
movs
and
sbb
inc
push
fs
pop
push
add
int3
or
retf
xchg
inc
imul
fidivr
mov
aam
retf
aam
in
fwait
mov
in
iret
inc
pop
or
add
repnz
xchg
dec
ror
ret
mov
add
push
mov
sub
nop
xor
(bad)
cmp
mov
or
cmp
imul
mov
adc
mov
xchg
jns
mov
or
in
arpl
add
es
fnstcw
and
jl
mov
sbb
push
xchg
icebp
(bad)
sub
and
enter
pop
push
clc
mov
sar
push
pop
mov
and
popa
arpl
jl
sbb
push
mov
ret
cmp
out
add
pop
cmp
out
leave
adc
xchg
aam
adc
xor
and
xchg
mov
lods
(bad)
test
add
jle
xchg
adc
in
ret
push
xor
jge
push
jns
cmp
push
psubd
inc
scas
outs
aad
mov
jg
cdq
push
dec
xchg
jecxz
pop
arpl
stos
rcl
mov
xchg
sar
into
dec
cs
cmp
and
sbb
nop
pop
jb
(bad)
or
jl
push
xor
lods
jbe
mov
xchg
mov
mov
add
out
xor
jno
popf
cmp
mov
pusha
mov
lds
stc
pop
pop
inc
push
pop
imul
add
jae
mov
jg
dec
icebp
mov
test
mov
pop
mov
push
push
movs
cmps
(bad)
gs
push
(bad)
fld
and
cmps
add
jle
imul
xchg
push
dec
ss
add
fimul
cs
pop
jne
sbb
xchg
cld
push
mov
lea
pop
into
push
xchg
push
sub
imul
out
and
mov
or
inc
xchg
ins
or
loop
and
pop
mov
inc
sti
rdmsr
bound
int
mov
and
jns
xor
ins
div
shl
jns
sub
repnz
or
test
dec
ins
push
mov
ja
push
(bad)
icebp
or
mov
xor
push
and
int
arpl
shl
mov
dec
ja
dec
in
jo
rcl
(bad)
adc
or
cmp
das
or
pop
adc
pushf
mov
adc
retf
inc
fdivp
in
divps
inc
mov
fdiv
rcr
cmp
pop
mov
sub
(bad)
sbb
adc
add
mov
or
mov
icebp
jnp
scas
gs
xor
xchg
shr
and
dec
xlat
sub
aas
cld
xchg
sar
(bad)
jge
sbb
loop
jnp
adc
jp
jmp
(bad)
repnz
(bad)
fnstenv
(bad)
(bad)
push
pop
js
ds
es
shl
inc
or
pop
ins
jbe
arpl
jle
popf
test
mov
sti
xchg
or
test
push
das
imul
das
mov
div
add
sub
cmp
mov
fs
loopne
mov
cmp
loop
je
pop
nop
add
scas
adc
test
push
adc
repnz
pop
sub
add
cmp
ror
jp
dec
scas
jmp
mov
sahf
data16
retf
or
aam
ret
into
sbb
fistp
pushf
sbb
pushf
push
pop
ins
mov
jmp
in
jnp
xlat
mov
jo
add
jecxz
sub
and
stos
out
push
jmp
ret
nop
std
push
das
icebp
push
mov
jmp
ins
popf
and
fisub
mov
cli
jns
pop
add
loopne
lea
pop
cmps
mov
shr
in
mov
scas
add
xor
(bad)
jmp
not
sub
xchg
movs
inc
dec
xor
repnz
in
(bad)
lock
ror
shl
xor
sub
dec
jnp
add
loop
jp
dec
adc
mov
retf
hlt
sub
scas
retf
or
pop
add
lock
add
test
push
scas
push
test
xchg
test
das
(bad)
stos
shr
enter
retf
movs
in
cmp
and
push
xchg
dec
xor
cwde
ins
push
cli
int
cmp
popf
cmp
hlt
jns
cdq
jl
mov
inc
fs
mov
mov
in
jo
jns
loopne
ror
mov
adc
jmp
imul
sub
and
ds
mov
mov
mov
test
push
in
sub
in
push
ret
or
(bad)
sub
mov
test
jbe
arpl
test
movs
scas
jmp
pop
fsubr
jb
mov
js
xchg
mov
fbstp
dec
jl
in
jg
cmps
mov
je
inc
pop
xchg
push
retf
sahf
call
aam
dec
mov
adc
sub
jae
mov
hlt
sbb
xchg
int
pop
or
into
ins
inc
push
enter
das
xor
push
ins
fwait
push
dec
and
mov
lock
ficomp
imul
je
cmp
fisubr
(bad)
test
call
xchg
int3
loop
push
std
jle
inc
ins
cmp
fs
cmc
add
test
and
adc
int
or
adc
inc
xchg
arpl
lods
adc
xor
pushf
call
aas
test
mov
jns
pop
fwait
jne
sub
cmp
cmp
mov
pusha
ja
adc
fstp
imul
loopne
mov
scas
add
mov
mov
daa
push
adc
fcomp
cli
cld
loop
ins
nop
and
dec
ret
je
dec
or
arpl
xor
int
cli
mov
mov
stc
leave
cmc
mov
mov
neg
lahf
push
loopne
out
xlat
mov
dec
and
std
inc
xor
and
ror
pop
out
cli
stc
dec
push
ins
call
ret
nop
sahf
int
push
loop
sub
inc
mov
scas
or
push
stc
ja
pop
dec
cli
das
push
cwde
push
aaa
sbb
pushf
dec
jp
sbb
outs
shl
call
push
fnsave
iret
inc
inc
gs
nop
out
sbb
fsub
pop
(bad)
cwde
je
mov
loop
out
dec
sbb
shl
clc
jp
or
pop
mov
jmp
loop
repnz
(bad)
shl
xor
outs
push
cmc
call
push
arpl
bound
retf
ds
cmps
inc
fwait
popf
dec
jnp
sahf
sub
adc
aad
inc
scas
dec
jno
xlat
(bad)
in
push
mov
test
dec
out
icebp
pop
out
stc
test
or
add
pop
(bad)
repnz
jecxz
rcr
(bad)
mov
out
test
jae
pop
mov
or
or
sub
pop
(bad)
rcr
xchg
adc
xor
mov
xchg
pop
popa
das
int
ficom
lods
jg
xchg
mov
retf
aaa
sub
(bad)
lods
adc
test
push
xchg
cmps
(bad)
bound
outs
xchg
sbb
bnd
test
sbb
inc
les
inc
stos
jo
xchg
mov
data16
ss
inc
loopne
fcmovnb
(bad)
sbb
push
sar
mov
and
rcl
jmp
mov
jl
dec
bound
cld
repz
or
fs
push
pop
push
push
retf
punpckldq
inc
pop
out
retf
mov
lahf
into
adc
or
pop
out
sbb
cmps
test
sbb
xchg
push
push
or
jp
push
xchg
mov
or
hlt
clc
and
add
loope
adc
in
sub
cdq
push
loopne
push
mov
cmp
or
mov
fst
adc
mov
out
fcomp
push
jge
fst
aam
ret
nop
or
loope
inc
push
mov
lods
mov
enter
arpl
mov
movs
xchg
outs
add
mov
ficom
lods
pusha
push
fisttp
jns
loop
movs
sub
push
(bad)
mov
stc
repnz
cmp
sub
sahf
inc
pop
test
xor
sahf
mov
push
movs
addr16
pop
cmp
push
mov
sub
call
mov
or
push
fild
jle
xchg
dec
in
mov
push
popa
lea
inc
jecxz
xchg
ins
std
and
mov
xor
jns
cdq
jecxz
cmp
push
das
ficom
ss
jle
mov
push
leave
dec
inc
ins
xchg
jge
sub
mov
dec
(bad)
dec
mov
dec
outs
fisttp
pushf
adc
lock
jge
cli
sub
and
or
xchg
inc
mov
pop
dec
stos
ins
scas
dec
jne
int
ret
and
imul
xchg
xchg
movzx
lods
and
xchg
scas
cli
loope
fsub
fst
mov
dec
add
add
int
lock
daa
lds
pop
pop
popa
test
cli
(bad)
jns
jecxz
mov
movs
sahf
xchg
or
(bad)
imul
call
ins
scas
and
or
push
mov
cmp
(bad)
dec
mov
xchg
aaa
ins
mov
pop
add
int
loopne
sar
ins
imul
inc
nop
push
jecxz
aaa
dec
adc
outs
pusha
inc
scas
jno
push
cmp
xor
out
test
cmp
add
mov
and
xchg
scas
push
cmps
jge
inc
cli
pop
(bad)
and
push
pop
or
scas
stos
cmp
cmp
repz
inc
or
movs
imul
sub
xchg
addr16
lds
movs
dec
jb
addr16
fdiv
retf
xchg
ficom
sub
or
xchg
jbe
cmp
mov
idiv
mov
sub
test
push
pop
(bad)
in
xchg
mov
es
lods
(bad)
mov
mov
lods
push
sti
sbb
xor
sub
call
bound
sbb
test
xor
sti
clc
outs
inc
mov
cli
data16
pop
out
fmul
fsubr
das
sub
push
test
popa
(bad)
sbb
fisubr
call
mov
add
mov
out
sbb
inc
icebp
jb
inc
adc
jmp
jns
dec
cmc
mov
fucomip
ins
push
push
imul
and
jmp
mov
jge
cmp
xchg
inc
add
shl
xrelease
push
jmp
retf
in
push
movs
ficomp
addr16
outs
add
fisubr
mov
es
sbb
xchg
out
fld
lods
mov
popf
bound
add
adc
mov
inc
sub
mov
ds
mov
push
cmp
icebp
and
int
jecxz
sahf
es
push
adc
sbb
and
in
cmp
dec
cmp
ret
xor
fs
inc
mov
(bad)
or
(bad)
xor
fs
pushf
xor
sbb
mov
fs
xor
popf
xor
cli
mov
push
shl
cmp
in
xlat
inc
neg
mov
or
inc
sub
ret
pusha
sub
cs
mov
lahf
in
jmp
or
ret
int
mov
pop
lods
in
int3
mov
fld
sub
xor
jnp
mov
and
or
jg
push
sub
out
cdq
xor
add
sub
enter
jp
pop
stos
mov
inc
jb
push
js
in
add
gs
mov
scas
push
mul
adc
data16
stos
lock
mov
jbe
shl
ss
lods
dec
fcomi
mov
sti
cs
xchg
popf
jp
jbe
leave
mov
outs
mov
push
or
xor
add
ss
movs
jbe
and
cmp
mov
add
mov
scas
adc
pop
ficomp
lods
adc
scas
pop
data16
leave
cmps
in
cmps
jb
inc
mov
retf
call
ja
inc
add
neg
push
cmp
fild
xchg
and
pushf
and
mov
adc
push
push
pushf
sbb
inc
frstor
jecxz
add
add
jle
jmp
adc
dec
mov
and
dec
test
in
lahf
out
icebp
sub
mov
adc
mov
lahf
fisub
jno
ds
mov
mov
arpl
push
inc
mov
and
dec
sar
and
je
nop
movs
mov
out
sahf
mov
shl
outs
mov
scas
movs
(bad)
lods
jo
cmp
mov
and
jo
cmp
sbb
or
push
jae
add
mov
mov
mov
xchg
aas
in
sub
inc
in
add
jmp
popa
jo
(bad)
adc
ja
lahf
or
fwait
mov
dec
idiv
mov
jns
leave
jmp
mov
sbb
jns
pop
arpl
rcr
and
sbb
or
mov
hlt
or
aaa
call
mov
sbb
mov
add
mov
test
xchg
imul
push
enter
xor
lds
xor
lahf
pop
cmp
sub
cmps
sbb
ins
xchg
adc
push
jg
loop
inc
pop
pop
lahf
dec
jne
ins
and
mov
xor
inc
loopne
mov
pop
lods
call
pop
fwait
mul
ja
int3
rcl
sub
push
jp
lods
push
mul
pop
xlat
add
loopne
lds
add
outs
xchg
loop
mov
popa
bound
push
jns
jg
rcr
ja
cmp
mov
dec
push
jbe
mov
inc
int
jbe
js
icebp
or
mov
and
add
pop
mov
cmps
and
les
pop
movs
lahf
mov
xor
test
pusha
sub
cwde
repnz
mov
mov
xor
or
adc
jae
push
pop
jb
mov
pusha
stos
dec
xchg
mov
outs
sti
mov
fisttp
mov
sub
in
loop
jecxz
cdq
jg
add
add
lods
and
cmps
push
mov
jmp
mov
xor
(bad)
das
or
shl
cmp
imul
adc
retf
inc
mov
push
bound
fistp
xchg
sbb
xor
leave
pushf
daa
fistp
mov
push
xchg
hlt
out
or
int
inc
imul
fisub
push
pushf
sub
out
jge
rcr
cdq
shl
jge
aas
jecxz
and
add
push
xchg
ret
jno
in
add
ffree
mov
addr16
gs
lock
push
mov
mov
movs
dec
mov
fsubrp
aad
in
iret
mov
in
mov
pop
add
imul
scas
xchg
add
rcl
nop
cmp
rol
pusha
sti
cs
rcl
mov
mov
pushf
cmp
add
push
pop
jae
push
mov
test
arpl
(bad)
fcom
or
ret
adc
pop
imul
js
enter
shr
mov
ja
cmp
xchg
test
outs
lods
dec
xor
fs
cmp
ins
dec
pusha
les
xchg
jp
out
ins
dec
xchg
clc
mov
push
adc
jbe
push
push
add
xchg
out
loope
sti
and
ret
xchg
dec
dec
sbb
or
loop
adc
mov
fadd
imul
movs
xor
shl
add
mov
cld
imul
pusha
add
fs
adc
les
fistp
(bad)
in
dec
mov
xlat
adc
aas
jmp
jecxz
stos
sbb
adc
mov
jne
rcr
mov
lods
in
fcmovnb
mov
sbb
inc
or
sbb
lahf
sub
cmp
xor
sub
sub
fcom
ret
jecxz
push
jno
push
push
inc
inc
aas
dec
push
outs
xchg
inc
loop
mov
in
cmp
fisttp
xchg
lahf
pushf
dec
cmp
adc
stos
mov
pop
or
jns
sub
pop
xor
imul
in
add
cld
sub
leave
aad
mov
add
jmp
adc
rol
(bad)
data16
test
int3
mov
lea
push
fdiv
jne
stos
add
je
mov
and
dec
pop
or
add
jg
push
cmp
jle
call
in
push
pushf
xchg
popa
mov
fwait
jno
repz
scas
xchg
xchg
inc
aas
nop
add
std
lock
jp
mov
in
dec
(bad)
push
in
retf
int
push
add
xchg
push
int3
aam
mov
push
or
xor
clc
out
loop
mov
fsub
popf
scas
es
and
jmp
idiv
call
push
in
push
xchg
add
shl
out
or
sar
inc
in
bound
leave
shl
rcr
rcl
jp
adc
int3
jae
dec
jne
inc
int
add
mov
leave
inc
adc
fucom
scas
loop
mov
(bad)
xor
adc
outs
mov
rcr
sbb
fisttp
add
pop
or
stc
pop
pop
clc
dec
xchg
stc
mov
aaa
push
int3
push
nop
mov
imul
xor
sub
imul
or
mov
jae
push
push
and
out
dec
mov
sub
xor
shl
mov
cmp
mov
dec
xchg
cmps
iret
out
mov
mov
mov
pusha
arpl
xor
xchg
adc
test
repnz
ins
mov
scas
mov
adc
test
retf
call
lahf
jle
enter
mov
jns
mov
mov
push
arpl
aam
test
sti
sbb
or
jecxz
in
cdq
icebp
iret
cs
jmp
popa
jg
add
repz
aas
jmp
pushf
and
rcr
xchg
and
sar
ret
cmp
xchg
daa
xor
add
xchg
mov
cli
int3
mov
into
lahf
hlt
inc
fisttp
movs
in
pop
jno
movs
xchg
daa
mov
outs
or
xor
inc
movs
stos
popf
xchg
ror
scas
sub
cld
jnp
cmp
retf
and
ror
adc
inc
call
or
xlat
lock
cs
mov
jbe
je
dec
sub
cmp
das
mov
sti
(bad)
leave
cs
icebp
or
dec
vmwrite
add
mov
mov
mov
cmp
adc
aaa
mov
adc
jns
lea
ins
sbb
sti
ret
into
scas
rcl
mov
mov
fcmovnu
aad
xor
dec
mov
std
mov
xor
icebp
adc
scas
mov
mov
pusha
test
pop
movs
adc
aad
lods
aaa
or
mov
cmp
enter
stc
clc
sub
(bad)
aas
ret
mov
cli
loop
dec
xchg
stos
out
sbb
out
pextrw
inc
cs
push
cwde
loop
mov
fwait
push
cwde
xchg
clc
add
or
sub
or
adc
jne
ins
pop
jo
test
aaa
or
cs
mov
scas
or
clc
mov
sar
or
es
arpl
push
je
cmp
ret
jmp
jns
mov
jecxz
dec
fs
sbb
imul
sub
ret
mov
aaa
daa
adc
add
jg
test
adc
mov
movs
not
dec
call
in
push
sbb
inc
cmc
cmp
inc
mov
and
add
inc
xchg
mov
rcr
lea
shr
jg
sub
add
mov
dec
ja
sub
or
repnz
fidivr
les
test
jno
xchg
pop
shl
cwde
lea
retf
pop
(bad)
and
cmp
in
add
stc
stos
pop
jmp
adc
and
cmp
(bad)
call
sbb
xor
clc
cmps
dec
push
mov
andps
pop
js
jge
xor
es
xchg
sub
jns
dec
imul
mov
stos
add
xchg
mov
sbb
mov
mov
jge
mov
(bad)
loope
mov
cmps
jmp
mov
cmps
je
fwait
push
mov
jecxz
pop
loope
imul
mov
mov
or
ins
or
retf
jbe
add
jp
mov
fcmovb
xlat
push
out
retf
push
inc
hlt
sbb
and
(bad)
sbb
xor
mov
jg
sub
loop
das
imul
popf
mov
loope
xchg
mov
in
(bad)
jecxz
jo
ins
ret
cmp
push
sbb
stos
mov
movs
sub
dec
add
cmp
sti
mov
scas
cli
dec
xchg
cmp
cdq
in
ret
inc
out
aam
dec
fs
fwait
(bad)
cmp
mov
out
sub
aam
fist
xchg
stos
ret
pop
fwait
mov
mov
cmp
xchg
repz
push
(bad)
mov
je
fdiv
lock
jecxz
add
pop
call
ja
push
xor
retf
lods
fimul
inc
jo
cmc
jecxz
push
xor
xchg
mov
push
add
inc
int
adc
add
out
jge
les
xor
jae
mov
and
mov
enter
shl
mov
mov
xor
sbb
sbb
mov
pop
cmps
xor
mov
cmps
scas
popf
iret
xchg
test
stc
sti
sub
cdq
test
(bad)
scas
aad
jbe
mov
jne
dec
xchg
sbb
or
lahf
lock
xor
jmp
(bad)
js
mov
in
ja
or
repz
pop
inc
ss
cmp
imul
or
inc
fmul
push
jcxz
mov
das
fdiv
test
inc
daa
jnp
xor
lahf
mov
rcr
mov
lahf
and
cmp
cmp
mov
cmc
xchg
jl
jbe
dec
lea
cli
(bad)
xor
dec
and
cmp
jecxz
ss
lea
fwait
jns
pop
jg
mov
xchg
mov
mov
test
xchg
test
dec
push
sub
pop
in
dec
mov
dec
jne
outs
repnz
jnp
push
xor
push
cs
lock
stc
cmp
imul
popf
pop
fstp
push
cmp
neg
call
aaa
and
jge
mov
cmp
ja
push
mov
push
xchg
imul
imul
pop
leave
dec
adc
push
dec
stos
ins
lahf
sub
call
xchg
jecxz
and
outs
fstp
test
jp
aad
sbb
popa
ret
fld
xchg
les
sbb
jns
add
cmp
shr
mov
inc
stos
test
popa
int
inc
pop
popf
nop
mov
arpl
push
pop
daa
or
hlt
clc
mov
movs
ins
sbb
or
in
in
mov
push
sbb
(bad)
jne
xchg
push
sbb
jecxz
mov
(bad)
in
pushf
dec
sbb
dec
mov
and
push
lahf
jg
ret
mov
in
hlt
or
iret
mov
outs
outs
mov
scas
mov
sar
cmp
xchg
add
jns
ja
imul
jne
pop
xchg
xchg
mov
xchg
jmp
(bad)
sti
and
in
ins
(bad)
ror
and
call
aaa
cdq
mov
mov
ins
mov
aas
dec
jp
inc
leave
or
leave
mov
outs
stos
push
sbb
jne
sahf
movs
cmps
ds
mov
loope
xchg
xor
lods
adc
jmp
aam
push
sahf
and
mov
and
test
das
(bad)
jge
sub
sbb
dec
pusha
sbb
adc
mov
out
pop
pop
dec
js
pop
sub
mov
jmp
movs
sub
call
pop
jne
jbe
shr
mov
popf
out
fistp
mov
cli
arpl
cmp
inc
adc
addr16
aam
mov
aad
aaa
rcr
cs
pop
pop
push
push
sbb
adc
mov
test
or
mov
jle
and
aaa
mov
(bad)
add
adc
or
(bad)
pop
scas
sbb
jno
xchg
mov
jbe
imul
mov
lods
mov
and
jno
fcom
pop
int3
ins
push
xor
sub
fstp
jle
sub
or
sub
push
mov
and
pop
ss
cmp
popa
dec
sti
leave
in
(bad)
js
popa
cmp
xor
xlat
sub
mov
or
(bad)
not
loope
xor
sub
stos
icebp
xchg
call
popa
xchg
mov
(bad)
mov
or
rcl
sbb
in
mov
sbb
and
or
push
and
inc
mov
loopne
mov
rol
test
jno
ror
fcmovnbe
sbb
xchg
adc
setp
outs
call
push
rcr
mov
enter
jmp
push
pop
jecxz
xor
xchg
push
push
jne
out
(bad)
and
mov
inc
add
mov
cmp
cmps
add
push
jle
mov
cli
push
inc
adc
push
aaa
or
(bad)
push
push
cld
hlt
add
data16
in
cmp
aam
cmp
inc
fisttp
int3
in
xor
jl
cmp
add
mov
xchg
mov
mov
dec
aam
push
div
and
ds
fwait
xor
or
aad
mov
push
scas
fimul
pop
popa
cli
sahf
aad
cmp
(bad)
out
inc
xchg
xchg
jmp
dec
inc
int
mov
repnz
add
mov
fist
aam
push
mov
pop
cmp
lahf
push
in
and
inc
mov
jl
push
jg
inc
add
jmp
(bad)
xchg
sub
retf
jmp
inc
bound
sub
mov
scas
and
mov
jmp
or
jp
in
mov
push
ret
dec
push
add
mov
and
shr
dec
(bad)
mov
outs
push
cmps
mov
xchg
outs
imul
mov
loopne
cmc
cdq
mov
test
(bad)
dec
pop
aaa
xor
mov
imul
sub
dec
aas
inc
hlt
adc
call
std
cmp
in
into
jge
mov
sbb
jae
mov
lock
or
dec
sub
cmp
les
add
mov
push
or
stos
test
push
js
add
fld
and
sbb
xor
lods
mov
jg
dec
dec
clc
xchg
jp
shr
pop
adc
pop
dec
pop
xchg
jmp
push
sbb
pushf
mov
addr16
xchg
or
sbb
xor
mov
lock
or
lahf
mov
xchg
test
mov
jmp
mov
xor
cmp
or
xlat
xor
mov
sbb
inc
inc
jle
pop
loop
(bad)
int
fdiv
(bad)
ss
push
das
mov
neg
fs
or
shl
mov
loop
in
or
sub
and
inc
add
imul
movs
sub
enter
mov
(bad)
push
jp
pop
push
retf
jp
jb
pop
daa
xor
inc
stos
(bad)
stc
(bad)
rcl
sbb
(bad)
hlt
inc
test
adc
out
jo
push
sbb
pop
mov
pop
jne
pop
fbld
mov
jl
adc
imul
fnstcw
jo
in
sbb
call
sub
cmp
aas
aad
xchg
pop
pop
pop
or
daa
inc
not
mov
leave
and
mov
jmp
and
gs
iret
adc
hlt
push
add
cmps
xchg
jmp
mov
cmp
inc
scas
pop
out
jnp
dec
mov
repnz
push
in
cmp
jp
neg
jg
xor
aas
in
icebp
mov
push
std
retf
xchg
inc
jp
test
inc
cli
xchg
lahf
ret
add
scas
push
scas
neg
js
adc
sub
add
xor
jb
add
ror
ds
xchg
in
dec
push
add
fcomp
out
rol
jge
adc
lahf
xor
cmp
push
(bad)
jg
xor
int
adc
mov
cmc
cmp
adc
lock
int3
mov
mov
mov
rcl
adc
inc
test
dec
sub
pop
jno
mov
repnz
je
test
push
loope
xchg
nop
jg
leave
jle
pop
inc
and
arpl
in
jmp
bound
iret
or
add
mov
sbb
shr
sub
pushf
imul
mov
mov
jge
ins
xor
out
fidivr
mov
push
and
(bad)
push
aad
adc
jae
cmp
xchg
hlt
repz
arpl
sbb
mov
and
std
lahf
mov
sbb
je
jmp
loope
int
jle
fiadd
xchg
mov
pop
dec
jle
fnstsw
pop
pop
inc
pushf
xchg
pop
pop
pop
call
pop
mov
pop
mov
ss
add
ins
jmp
dec
test
pop
pop
jecxz
cmp
jmp
lods
xchg
out
int3
dec
scas
repnz
cmp
cmovl
clc
dec
and
push
std
xchg
ss
loopne
mov
call
mov
mov
in
aas
retf
pop
aad
inc
pop
cmp
or
iret
arpl
cdq
sub
inc
(bad)
daa
sub
leave
dec
sbb
adc
mov
xchg
rcr
jg
jecxz
dec
rcr
mov
mov
mov
dec
out
jle
jp
es
adc
mov
int3
push
xchg
fs
out
xor
cmp
stos
ror
sub
shr
inc
jb
and
jecxz
push
(bad)
mov
pop
out
clc
js
cmps
rol
and
mov
ret
stc
mov
and
jnp
lds
adc
pop
fucomi
jno
icebp
xchg
jge
or
movs
sbb
repz
jle
lods
rcl
push
in
sbb
pop
jmp
xor
sub
ss
imul
loop
cmp
stos
mov
mov
mov
dec
rol
inc
(bad)
ficomp
mov
add
pop
in
int
ins
aas
and
das
cmc
rcl
pop
shr
icebp
mov
mov
fadd
cmps
or
dec
pop
fimul
fwait
adc
mov
push
xor
adc
xchg
ffree
shl
jo
mov
or
sbb
clc
popf
into
imul
ror
mov
jo
shr
sbb
dec
sub
(bad)
leave
jge
mov
add
mov
dec
test
sti
mov
push
xchg
mov
mov
cli
ins
ins
push
pop
enter
mov
jo
adc
push
dec
ins
push
and
lds
pop
jne
out
inc
iret
test
into
retf
push
ins
xor
mov
inc
jecxz
jecxz
dec
jmp
add
sbb
neg
ss
fstp
popa
int
add
xor
inc
jle
mov
adc
outs
sbb
loop
push
cmps
out
pop
cmp
cmp
jo
sbb
lahf
add
div
xor
jl
sub
cmc
mov
out
aaa
mov
fisub
adc
mov
or
push
gs
push
mov
repz
ret
call
sub
shl
inc
jno
dec
jbe
std
out
jnp
data16
mov
std
ins
mov
ds
cwde
cmps
xchg
fld
sub
pop
call
sbb
push
fadd
jge
push
cmp
es
aam
arpl
inc
inc
mov
mov
xor
(bad)
or
stc
call
inc
adc
and
and
sahf
add
(bad)
pop
inc
fsub
inc
jmp
in
mov
mul
loop
mov
mov
ins
adc
int3
mov
pop
and
clc
adc
ins
mov
xchg
in
(bad)
cli
icebp
movs
push
fst
cmp
iret
iret
mov
mov
std
sub
push
sbb
and
jecxz
in
(bad)
sbb
test
and
shl
pop
xor
sub
in
push
xor
sbb
push
jmp
add
push
push
sub
call
and
sub
cmp
in
outs
inc
rcr
or
mov
sbb
sub
shl
call
jl
sbb
les
pop
pop
sbb
cdq
and
call
push
movs
test
outs
pop
xor
cmp
or
pop
test
shl
jne
dec
add
in
pop
test
and
mov
imul
addr16
mov
push
lahf
inc
ss
pusha
sti
add
or
popa
or
(bad)
fild
mov
jae
lods
lock
jge
in
(bad)
dec
pop
xor
leave
das
xchg
sbb
cdq
(bad)
sub
pushf
ret
mov
cmp
in
and
mov
cmovl
repz
aaa
push
sub
pusha
aam
scas
add
adc
test
sbb
lahf
xor
fldenv
repnz
pop
fwait
stc
mov
mov
cmc
repnz
fucomi
mov
into
sub
xor
fsubr
imul
imul
add
retf
call
lahf
inc
mov
fist
stc
ins
inc
pop
dec
mov
lahf
ret
adc
stos
std
or
mov
jae
jl
retf
cmp
sbb
call
sbb
push
xchg
js
adc
(bad)
into
or
scas
jmp
push
pop
inc
or
push
(bad)
mov
(bad)
gs
pop
jmp
pop
sub
mov
xchg
sub
xor
mov
push
adc
mov
vucomisd
xor
arpl
not
mov
shr
pop
and
je
or
sar
add
test
fst
pushf
(bad)
jge
xchg
sub
out
sbb
sub
dec
les
mov
mov
stc
cmp
imul
pop
sbb
xchg
dec
test
jo
mov
dec
mov
mov
mov
cmp
cdq
repz
pop
mov
test
sub
adc
xchg
push
out
xor
int3
dec
push
jg
dec
loopne
retf
push
fisub
pop
mov
int3
or
dec
out
ds
das
jg
pop
mov
std
or
pop
(bad)
std
dec
xchg
dec
cli
je
out
call
and
cmp
add
lods
xchg
outs
inc
fcmovb
push
shl
js
jecxz
lds
ror
addr16
or
sar
lods
cmp
inc
jge
sub
(bad)
cmc
xor
push
push
adc
cli
jecxz
clc
xchg
fs
jae
inc
jmp
mov
lods
mov
fld
jbe
dec
cdq
add
xchg
mov
out
mov
cwde
and
mov
mov
lahf
mov
cwde
(bad)
pop
retf
jno
push
pusha
cmp
in
dec
fimul
push
call
sub
add
rcl
aas
sahf
mov
lahf
jbe
in
lods
fidiv
jns
je
xchg
dec
jnp
ss
xchg
push
fsubr
add
push
out
fiadd
cmova
push
jns
and
fnstenv
push
dec
xor
adc
cmp
sbb
cmc
sar
into
add
pop
pop
sub
mov
push
out
outs
push
cmc
inc
outs
pop
movs
hlt
ret
sbb
sub
cwde
nop
(bad)
pop
retf
out
(bad)
sub
jmp
jne
cmc
jmp
cli
push
cmps
and
out
psrld
imul
(bad)
mov
mov
inc
mov
pop
je
inc
outs
ret
imul
xchg
pop
mov
cli
mov
pop
xchg
pusha
scas
inc
dec
push
or
aam
push
(bad)
fcomp
repz
cmp
test
or
inc
(bad)
cmp
jmp
xchg
lods
out
adc
dec
and
scas
mov
fcmovnbe
add
rcl
xchg
fiadd
scas
push
mov
and
and
sbb
xchg
lea
imul
and
xor
xchg
lock
or
jnp
(bad)
dec
jo
mov
xor
mov
jns
stos
out
cmp
sub
aad
jg
xlat
aam
sub
push
nop
daa
sbb
dec
fwait
and
push
or
pop
mov
mov
fucomi
xchg
jo
sub
add
cmp
fidivr
sub
(bad)
shl
test
add
ins
pushf
push
mov
fsubr
inc
js
lds
fs
pushf
stos
mov
and
cli
adc
cmp
retf
in
cdq
fldenv
ret
add
mov
pop
in
fs
sar
clc
inc
pop
push
test
jmp
es
(bad)
ds
mov
xor
push
rcr
and
icebp
adc
aam
sbb
sub
rcr
mov
pusha
inc
out
int
pop
sub
leave
mov
icebp
sub
sub
cwde
jno
xor
imul
pop
outs
pushf
movs
stos
and
xchg
mov
aas
in
mov
cmps
repnz
repnz
or
outs
push
sub
pop
aad
jmp
inc
xor
xor
cmp
mov
ins
arpl
and
ds
clc
xor
nop
scas
dec
cmp
xor
in
sbb
aam
add
sbb
fadd
push
adc
mov
xchg
into
mov
lea
nop
mov
sub
mov
ss
iret
repz
mov
pusha
add
cli
push
hlt
jnp
iret
mov
pusha
push
out
scas
adc
push
cmp
ins
xlat
or
sti
mov
in
outs
push
and
stc
jmp
icebp
jne
jno
std
push
sub
cwde
outs
dec
cmp
mov
fnstenv
xor
fild
dec
outs
pop
(bad)
and
adc
jmp
pop
(bad)
retf
(bad)
xor
movs
mov
test
cld
aam
adc
push
stc
ins
xchg
adc
and
and
xchg
hlt
scas
in
xchg
call
cmps
inc
cmp
add
loop
xchg
fstp
mov
add
jg
fimul
cmc
cmp
outs
mov
and
int3
repnz
test
xchg
ja
dec
sti
sti
xor
jb
mov
pushf
mov
fidiv
popa
(bad)
jo
inc
mov
push
movs
out
adc
xor
cmp
and
out
fcomp
fmul
jmp
cmps
jl
or
adc
fisubr
xor
adc
sahf
xor
stos
or
aad
je
and
dec
mov
cmp
adc
aad
aaa
xchg
or
sub
xchg
jmp
jecxz
jo
retf
fild
pushf
test
add
add
mov
cwde
mov
jns
dec
push
std
pushf
sub
out
int3
cmp
sub
jmp
loopne
pop
inc
xchg
repz
xchg
sbb
mov
out
call
call
outs
arpl
mov
je
or
call
mov
xlat
ss
mov
ds
pop
add
xlat
ret
xchg
or
ja
rdmsr
and
mov
xor
mov
outs
add
aam
jns
(bad)
cmp
test
sbb
mov
gs
sahf
adc
test
mov
stos
pop
cld
cmps
pushf
stos
mov
jnp
fdivp
call
inc
loope
mov
inc
push
lds
test
xchg
mov
aad
push
rol
fcomp
and
nop
xchg
scas
push
or
fsub
sbb
bound
fild
int3
retf
addr16
xchg
and
cmp
mov
jmp
sub
mov
push
iret
and
enter
add
xchg
inc
push
inc
mov
and
pop
(bad)
xor
inc
mov
movs
test
fcomp
jmp
fs
aam
rcl
mov
fs
das
pop
cmp
push
stos
sbb
nop
fdivr
xchg
das
xchg
out
loope
ins
push
push
clc
inc
das
mov
push
sub
xor
repz
int3
add
lahf
ret
or
and
stos
mov
inc
cdq
mov
xchg
push
rol
and
mov
retf
mov
popa
mov
out
cs
add
adc
adc
or
push
mov
js
inc
push
xchg
sbb
sbb
or
repz
xor
iret
out
pop
lods
and
ja
and
ret
(bad)
fistp
rol
push
lods
jmp
and
xor
test
not
jmp
and
lea
mov
fcom
ret
cmc
mov
or
test
inc
mov
mov
mov
jmp
mov
lods
call
cmps
mov
outs
and
push
add
pushf
js
aam
loopne
sbb
(bad)
ins
lds
mov
retf
sar
sbb
sbb
xor
cmc
sahf
mov
jnp
fidiv
push
cmp
hlt
or
xor
mov
dec
mov
pop
xchg
pop
mov
fcomp
sar
fwait
repz
jp
adc
xor
fidiv
xor
jp
push
dec
inc
cld
les
xor
fwait
add
in
les
adc
and
shl
xchg
hlt
or
and
add
jbe
cmp
(bad)
in
sbb
mov
ins
xchg
loope
stc
mov
push
stos
sbb
int
rol
cmp
mov
mov
sar
jmp
outs
leave
mov
data16
(bad)
fstp
fwait
sub
lahf
push
pushf
pop
leave
or
add
fs
mov
xchg
lahf
sbb
mov
int3
imul
aam
rcr
jne
call
pop
jmp
sub
call
jmp
jo
xchg
outs
ret
add
pop
pop
pop
dec
dec
pop
rcl
fs
in
outs
inc
int
in
sbb
lods
ret
scas
(bad)
idiv
xor
sbb
mov
adc
icebp
pop
sub
(bad)
jae
xchg
sbb
je
stc
out
xchg
rol
leave
bound
arpl
pop
nop
inc
xchg
outs
popf
outs
mov
std
jp
jbe
repz
push
jmp
hlt
mov
sub
data16
adc
mov
es
movs
fidivr
js
ror
pop
in
cmps
cmp
push
test
outs
or
push
movs
js
xor
daa
add
das
or
out
test
arpl
shr
or
or
sar
int3
scas
or
shr
(bad)
(bad)
popa
adc
push
mov
xchg
loopne
ret
test
int3
stos
cmp
les
mov
scas
pushf
rcr
sti
sbb
adc
mov
mov
lods
call
out
ins
inc
clc
sub
dec
inc
sbb
cmp
pop
mov
cs
jp
sub
adc
sub
aad
xchg
dec
or
enter
fdiv
adc
out
xor
mov
sub
fiadd
addr16
push
les
dec
arpl
inc
test
jne
fist
adc
and
ds
xlat
xor
mov
lods
sar
shl
jl
pop
xchg
inc
loopne
test
sub
arpl
xchg
stos
inc
into
call
aaa
cwde
sbb
ret
rol
mov
iret
aaa
dec
sub
push
mov
push
cmc
(bad)
dec
fdiv
inc
mov
and
imul
ins
or
mov
idiv
fstp
inc
xchg
mov
jbe
adc
add
ja
loopne
stos
pop
dec
cmps
mov
cmp
add
pop
push
loopne
inc
jb
inc
(bad)
icebp
shl
pop
jo
add
jnp
rcr
ss
pop
pop
jo
rcl
mov
add
sar
mov
enter
mov
cld
xor
pop
scas
mov
add
(bad)
mov
ror
inc
dec
shl
sahf
cmp
sbb
mov
loopne
data16
es
mov
adc
cwde
sahf
sub
call
dec
sbb
mov
sub
in
mov
cwde
push
sbb
arpl
data16
or
test
mov
mov
jp
mov
outs
scas
inc
cmp
test
cmc
loopne
push
and
xchg
or
cmp
rol
scas
int
test
test
dec
adc
sub
xor
cmp
dec
loope
cmp
dec
mov
jl
or
jmp
xchg
pop
mov
dec
mov
pop
cmps
push
int
jp
fild
or
sbb
mov
adc
push
rol
gs
xlat
cdq
std
or
adc
cwde
or
jno
inc
je
in
inc
jp
xchg
leave
jae
call
jmp
and
push
pop
xchg
sub
xchg
(bad)
scas
xor
jo
jle
mov
cmp
jge
push
test
adc
sub
and
call
jno
adc
dec
jp
bound
fcom
mul
fbstp
out
cli
call
inc
stos
aas
xchg
and
arpl
int3
aas
pop
push
inc
fld
hlt
xchg
test
mov
out
call
xchg
outs
les
pushf
ins
lds
and
or
add
(bad)
dec
pop
adc
popf
retf
les
in
loope
xchg
mov
test
dec
je
and
test
xor
aad
imul
mov
dec
xchg
test
and
daa
sti
setle
xchg
jae
mov
je
jg
and
enter
test
stc
mov
xor
jge
xchg
pop
mov
stos
pop
pusha
pop
and
xlat
int3
mov
mov
push
in
xor
ja
ja
les
push
sub
mov
jge
aaa
lea
cwde
mov
mov
pop
mov
jp
rcr
xchg
xchg
mov
pop
xchg
add
pop
out
mov
call
pop
mov
(bad)
adc
xor
cs
push
arpl
rcl
mov
push
std
add
dec
jle
lods
sub
cmp
mov
add
push
pop
ret
icebp
test
shr
mov
test
fwait
lods
iret
jmp
aam
pop
mov
cmp
(bad)
push
or
mov
frstor
aad
js
lahf
adc
xchg
xchg
scas
xor
sbb
cdq
test
fisttp
and
test
mov
dec
adc
xor
loop
inc
das
addr16
cld
int3
xchg
sbb
in
adc
test
test
fs
movs
stc
xor
int3
shr
shl
mov
gs
jae
xchg
fistp
adc
mov
xchg
sbb
pop
div
cwde
imul
idiv
aam
jne
(bad)
and
and
dec
div
mov
xchg
cs
cli
in
rcr
sbb
inc
jl
pop
mov
(bad)
out
pop
pushf
adc
out
dec
(bad)
pop
adc
imul
sbb
add
cmp
shr
xchg
pusha
imul
das
and
add
mov
and
shr
cwde
sbb
adc
pop
cwde
add
fisubr
push
push
int3
xchg
push
xor
xor
xchg
jecxz
mov
pusha
adc
ins
ds
(bad)
sub
ret
dec
inc
stos
pop
sub
xchg
repz
outs
adc
adc
movs
(bad)
cwde
mov
push
xchg
iret
daa
add
int
adc
or
sub
sub
(bad)
inc
data16
(bad)
dec
jno
rcr
xchg
fs
mov
and
ins
jl
xchg
sub
ja
pusha
sbb
sub
lock
mov
dec
data16
adc
cli
push
or
xor
fs
sbb
sbb
dec
fs
push
sub
push
int
mov
or
jae
or
cmp
adc
sbb
adc
loope
adc
cmp
push
dec
pop
sbb
dec
outs
sbb
cmc
inc
xor
xor
(bad)
mov
sub
aaa
inc
int
jo
cwde
cmc
daa
dec
cmc
or
arpl
mov
sub
mov
outs
daa
add
into
pushf
add
sbb
mov
inc
pop
and
inc
mov
cmp
or
mov
outs
stos
add
lea
(bad)
(bad)
lods
out
xchg
test
add
add
sub
sub
test
pminsw
pop
out
add
les
mov
sub
jo
xlat
jo
push
xor
daa
sbb
fidiv
or
imul
add
leave
dec
pop
and
pop
sbb
leave
mov
loop
vprotb
xlat
sub
xchg
stos
xor
imul
xor
test
sti
dec
sub
js
in
shr
push
repz
sbb
cwde
bound
imul
cmc
sbb
cdq
movs
inc
cwde
lods
in
push
sti
lods
or
dec
dec
sub
(bad)
into
hlt
pop
out
loope
mov
mov
pop
mov
add
ja
add
inc
imul
clc
imul
fcomip
popf
mov
repnz
setl
(bad)
xchg
fld
dec
sbb
jecxz
jmp
mov
mov
daa
inc
fadd
pusha
adc
jb
jecxz
stc
scas
push
loopne
je
mov
sbb
and
iret
ficom
xor
push
mov
outs
mov
sbb
test
cdq
xor
ror
jnp
fidivr
enter
fxch
fcomp
je
xlat
sbb
cwde
outs
dec
jle
stos
retf
add
cmp
loopne
xor
dec
iret
inc
clc
push
sub
fcmove
fstp
cmps
or
aad
clc
lahf
sbb
sbb
stc
sbb
test
mov
outs
popa
add
dec
and
lock
daa
mov
xchg
mov
push
aam
jl
out
push
enter
dec
sub
lods
icebp
imul
mov
daa
mov
inc
xor
popa
lea
lea
test
sbb
add
jecxz
push
int
dec
add
(bad)
lock
and
arpl
inc
and
ficom
je
mov
pop
int3
icebp
je
gs
popf
movs
lock
lea
pop
out
pop
sbb
mov
daa
fs
(bad)
and
sbb
mov
(bad)
adc
loopne
mov
mov
pop
test
xor
pop
lahf
sub
xchg
jbe
inc
in
push
inc
xchg
pop
test
cmps
push
(bad)
mov
aad
bound
dec
xchg
imul
cwde
sub
mov
fadd
mov
das
test
push
xor
loope
xchg
adc
(bad)
imul
or
jne
mov
out
push
or
and
push
retf
outs
stc
fs
ret
das
clc
jp
or
push
cli
jns
idiv
jne
addr16
gs
lods
js
push
leave
sub
jae
xchg
hlt
jae
inc
or
ficom
cmps
es
jp
repz
adc
jbe
out
mov
pop
mov
int
xchg
and
sub
shr
gs
repz
and
push
push
sti
jmp
add
jg
cwde
cmp
mov
out
mov
xor
and
cmps
xchg
jnp
dec
dec
outs
outs
loope
and
ds
xor
inc
enter
pop
jle
jl
rol
test
mov
les
aad
in
inc
hlt
(bad)
sbb
and
and
xor
daa
(bad)
xchg
ja
and
leave
cdq
rol
jle
jmp
(bad)
cmc
push
push
cmp
int3
addr16
sub
mov
cmps
inc
dec
aaa
out
cmp
adc
pop
je
bound
popa
pop
mov
popa
pop
in
into
rol
and
js
dec
push
inc
add
and
fwait
sti
sbb
mov
xchg
outs
cmp
ins
adc
pop
sbb
jnp
mov
loopne
rcl
mov
fiadd
(bad)
cmc
jae
outs
push
mov
das
and
movs
(bad)
retf
jns
xor
and
sbb
movs
cwde
popf
ins
jle
test
cmps
lds
ret
(bad)
jno
mov
xchg
mov
pop
mov
mov
outs
mov
in
out
or
mul
pop
push
pop
jo
push
cmp
add
movs
inc
or
mov
out
jge
out
js
dec
adc
out
xor
xchg
jno
shl
mov
mov
mov
mov
add
dec
test
in
and
dec
xchg
cmp
jae
repz
or
mov
ins
or
mov
xchg
cmp
call
iret
and
xchg
mov
fwait
sbb
ins
test
cmps
or
xchg
ficomp
jge
dec
add
inc
(bad)
data16
hlt
les
mov
adc
std
lods
scas
mov
ins
rol
inc
and
repz
or
push
daa
call
add
out
scas
add
inc
mov
inc
lahf
movs
mov
jbe
add
das
push
mov
push
push
jmp
xchg
xor
mov
call
cmp
icebp
pop
test
add
inc
sbb
push
inc
cli
popf
lea
ins
adc
inc
call
jge
add
mov
clc
scas
mov
mov
mov
enter
cmp
xchg
ret
les
xchg
loopne
fsub
add
data16
jmp
dec
mov
mov
ja
xchg
(bad)
push
mov
mov
push
out
mov
cmp
and
jp
mov
daa
mov
cs
adc
add
into
push
scas
push
cmps
mov
icebp
cwde
mov
adc
xlat
in
add
hlt
aam
call
call
je
bound
pushf
jge
out
xor
addr16
dec
sub
xchg
mov
fwait
ja
and
xor
mov
jecxz
xchg
cdq
lahf
ret
mov
add
(bad)
sub
sahf
shl
mov
jnp
ret
xchg
stc
fs
fst
or
sub
jo
mov
push
fcom
ret
mov
(bad)
test
xor
sbb
in
adc
jp
push
add
stos
mov
rcl
cmp
sbb
gs
xchg
mov
pop
jnp
sub
ror
test
sub
add
shl
or
ins
outs
aaa
xlat
mov
addr16
stos
enter
xor
hlt
sub
das
dec
ret
jle
push
mov
out
test
mov
sahf
pop
fisub
lahf
sub
jbe
xor
fwait
push
stc
sub
mov
idiv
xor
push
adc
jne
fstp
mov
das
cmps
stc
popa
push
stos
add
mov
pop
ins
mov
data16
pop
fstp
mov
mov
les
mov
cmp
pushf
mov
xor
iret
ss
or
call
jnp
stos
out
sub
retf
ror
cmp
jb
cmps
push
call
call
rcl
sub
gs
push
sbb
fidivr
es
pop
ror
xchg
pop
retf
pop
pop
pop
xchg
push
sbb
and
jle
cmp
jecxz
cmp
and
test
movs
movs
or
int
mov
mov
inc
mov
enter
out
push
xchg
mov
imul
or
pop
fidivr
sbb
movs
cmp
push
aad
cmps
lss
xchg
push
imul
xor
in
push
sbb
push
push
les
adc
out
jo
mov
mov
sub
add
xchg
aam
in
jmp
pop
sahf
push
jge
test
ins
stc
jecxz
jg
cmc
xchg
out
sti
xchg
in
fcmovne
sbb
mov
retf
mov
dec
adc
retf
mov
and
(bad)
into
enter
push
xchg
xchg
add
sub
xchg
sbb
cmp
mov
in
mov
push
mov
cli
jno
push
cwde
clc
lahf
adc
and
aaa
jmp
bound
imul
pop
xor
push
pop
inc
repz
mov
or
stos
jae
stos
test
sbb
(bad)
xor
or
aam
xchg
sbb
outs
add
jmp
ja
test
retf
nop
jmp
add
test
out
push
cmp
adc
add
ja
sahf
cmp
std
add
mov
sub
sub
or
enter
xchg
cs
popa
push
xchg
ror
lds
imul
nop
out
push
push
cmp
cmc
imul
xor
(bad)
ds
popf
mov
hlt
and
push
sub
cmps
cwde
mov
test
dec
(bad)
cwde
cmp
das
fstp
shr
mov
arpl
mov
ret
jae
push
lock
or
mov
lea
mov
adc
jo
push
stos
mov
pop
adc
movs
cmps
xor
sub
push
(bad)
push
mov
fistp
xlat
add
aam
xor
push
push
and
(bad)
cli
leave
push
neg
push
lods
stos
pop
int
in
sub
pushf
xor
(bad)
les
inc
pop
punpckhdq
cdq
mov
movs
in
das
pop
hlt
jns
mov
mov
and
cmp
fdivrp
push
lahf
sub
les
mov
test
add
fistp
mov
dec
cmc
iret
push
dec
xchg
pop
adc
test
xor
add
add
jnp
out
or
popf
and
inc
sub
out
repnz
adc
stos
jl
je
mov
jp
or
not
jns
add
mov
sahf
xchg
xchg
mov
bound
inc
push
cmp
pop
xchg
inc
adc
popa
sub
in
leave
stos
std
or
pop
pushf
pop
and
jg
test
aam
in
mov
add
sbb
cmp
out
cmp
jae
out
jmp
out
jae
xchg
ret
pop
sub
lds
xor
nop
inc
inc
cmpxchg
add
pop
sti
mov
xor
fwait
in
rol
sbb
and
mov
call
push
hlt
pop
cmp
rcl
test
ret
add
xor
xor
movs
xlat
ret
jno
mov
jp
jmp
mov
push
push
push
out
icebp
lds
hlt
or
aad
jmp
fwait
bound
xchg
jp
jae
jmp
(bad)
loop
out
pop
cmp
sub
pop
sub
popa
addr16
sahf
out
sub
cmps
sbb
mov
jle
sahf
ror
mov
sbb
sub
div
pushf
push
push
test
pop
stos
fsubr
xchg
mov
dec
imul
in
int
push
int3
inc
xor
loopne
fisubr
clc
dec
inc
sar
jbe
out
mov
push
add
add
daa
cdq
push
jmp
cmp
and
dec
mov
dec
and
lds
mov
lods
xchg
cmps
mov
pop
loopne
out
dec
mov
retf
adc
into
das
mov
rcr
xchg
mov
fs
into
or
fwait
test
push
shl
(bad)
repnz
ds
jo
fnstenv
cmp
xchg
mov
mov
data16
addr16
inc
dec
xor
mov
push
lea
xchg
or
add
dec
cmp
mov
xchg
push
push
or
sar
cdq
je
popf
jnp
lahf
dec
jl
shr
cmp
inc
push
push
mov
retf
ret
(bad)
out
xchg
aaa
stos
lock
or
and
loope
leave
test
ja
sbb
mov
call
fnstsw
inc
xchg
sbb
adc
test
daa
jne
xlat
cmp
cmp
(bad)
sbb
adc
mov
fild
and
inc
out
popf
pop
adc
shl
xchg
and
inc
ret
mov
lods
and
in
mov
xor
cmp
movs
je
pop
int3
xor
dec
mov
aaa
lea
or
outs
mov
add
sbb
out
sbb
or
pop
sbb
sub
and
cmps
mov
cmc
aad
fs
pop
fstp
sbb
fnstsw
adc
mov
out
xor
cmp
lods
cs
inc
mov
cmp
in
jmp
push
xor
mov
psubd
pop
push
sub
xor
aas
pop
pop
pop
fld
es
add
je
sbb
xchg
sbb
mov
xor
std
adc
xchg
and
jae
ret
jp
push
call
and
sub
ss
mov
cmps
idiv
cli
and
retf
outs
jl
fsubr
aas
push
xchg
(bad)
mov
shld
dec
dec
jno
(bad)
xlat
xchg
adc
aam
sar
mov
mov
jno
call
dec
push
pop
bound
xor
pop
jmp
xor
inc
mov
dec
or
push
icebp
inc
dec
lods
dec
pop
add
loop
mov
rcr
xlat
dec
out
dec
sbb
push
int3
aas
or
call
jbe
mov
movs
retf
sub
dec
in
inc
mov
in
ss
mov
mov
push
sub
and
cmp
addr16
ds
test
mov
hlt
xchg
cmp
imul
hlt
fiadd
(bad)
outs
dec
rcr
pop
aaa
dec
cmc
je
arpl
jbe
jbe
jbe
dec
mov
push
mov
stc
add
pop
xchg
cld
inc
aad
adc
mov
pop
popf
cmp
add
test
retf
outs
test
add
and
mov
sbb
pop
fcomi
jnp
and
pushf
mov
not
jns
inc
cs
pop
mov
jmp
hlt
pop
mov
jae
in
mov
mov
pusha
xchg
mov
pop
ret
test
inc
test
dec
add
jle
xor
adc
jns
and
fsubr
out
out
xchg
or
push
jb
fstp
dec
pop
hlt
loop
push
inc
fsubr
stos
cli
in
cmc
ficomp
inc
xor
cli
imul
daa
push
mov
daa
or
(bad)
pop
pusha
fcomip
jns
out
dec
push
pusha
pop
das
lds
sahf
arpl
aam
shr
mov
xlat
cmp
mov
sub
test
mov
shl
adc
aaa
jae
pop
adc
or
test
movs
xchg
iret
iret
mov
sti
(bad)
cli
sub
or
pop
lds
push
int
mov
ret
test
pop
inc
(bad)
lods
rol
outs
(bad)
shr
out
dec
jno
sub
dec
inc
mov
out
iret
jns
or
call
push
icebp
push
(bad)
mov
aas
xor
ja
scas
fcomp
repnz
jo
movs
adc
sub
imul
or
adc
xchg
push
popf
aaa
bound
cs
stc
and
add
out
inc
mov
mov
adc
loope
mov
shl
jmp
imul
adc
and
ret
cmp
clc
(bad)
icebp
xor
(bad)
sub
jb
cli
mov
pop
aam
inc
not
dec
sub
cld
nop
dec
fcomp
inc
les
pop
xor
pop
push
call
jae
hlt
dec
inc
daa
xchg
xchg
addr16
retf
out
rol
mov
or
jg
cmp
fcom
push
pusha
dec
mov
dec
sahf
daa
aaa
jno
pop
jae
fdiv
inc
int3
imul
pop
rcr
js
jle
jmp
jbe
lds
rcl
push
mov
aad
cmps
add
dec
les
daa
mov
push
jns
mov
xchg
mov
call
fisubr
add
cmp
mov
pusha
dec
retf
nop
stos
dec
push
fisub
test
ins
retf
mov
mov
mov
icebp
jbe
push
loopne
mov
out
mov
jno
arpl
pop
ins
add
dec
retf
arpl
xchg
sub
xor
push
out
jmp
mov
sub
pop
int3
mov
enter
nop
outs
inc
push
xor
das
mov
inc
jl
(bad)
cli
xor
mov
out
rcl
imul
dec
dec
loop
mov
cmps
dec
jb
ret
push
and
pusha
push
mov
call
sti
adc
push
add
enter
mov
xor
ror
mov
mov
repnz
ds
out
mov
das
in
pop
pop
or
dec
call
mov
loop
push
cwde
add
push
fs
adc
outs
stc
pushf
call
je
and
cli
jb
js
or
push
mov
clc
jno
fs
pop
shr
arpl
jb
and
inc
mov
out
and
stos
pop
in
xor
add
mov
bound
aaa
pop
or
push
mov
jb
lods
jmp
pop
lock
arpl
shr
ds
add
jp
ins
cmp
mov
push
stos
out
mov
pusha
xor
fisttp
adc
lea
scas
enter
out
jne
dec
mov
xchg
cmp
or
test
push
mov
xchg
inc
test
mov
or
mov
fwait
sbb
cmc
test
iret
push
and
xor
mov
mov
xlat
movs
xor
and
addr16
aas
fistp
mov
jmp
jb
adc
sub
pop
or
mov
pop
cmps
mov
in
scas
inc
jmp
lahf
mov
adc
sub
sbb
rcr
push
ret
pop
sahf
jmp
sbb
inc
adc
fld
or
inc
out
sub
call
cli
add
dec
mov
mov
mov
dec
jmp
inc
mov
or
stos
pushf
scas
jecxz
or
lods
mov
mov
pop
loopne
(bad)
add
xchg
add
inc
stos
loope
mov
xchg
cdq
(bad)
pop
leave
fucomi
mov
loopne
and
(bad)
adc
lea
faddp
cmp
pop
sbb
jl
push
call
sbb
dec
imul
cmc
add
hlt
mov
fild
in
aaa
cmp
mov
mov
je
inc
neg
mov
push
scas
pop
repnz
jp
jno
sbb
mov
mov
inc
and
sti
mov
cs
adc
lea
jp
dec
jmp
(bad)
aaa
in
pushf
push
adc
mov
xchg
sbb
sbb
push
push
mov
cli
outs
cdq
gs
repz
adc
mov
adc
iret
fild
jns
movhps
in
and
les
aas
sub
pop
retf
xlat
or
push
ja
mov
or
inc
out
aas
and
mov
imul
mov
es
les
dec
aam
inc
adc
shl
jbe
nop
jno
cs
movs
jno
das
dec
cmps
dec
adc
dec
mov
add
push
imul
mov
mov
(bad)
push
and
repnz
and
xor
xchg
dec
push
sub
xchg
cwde
test
jae
or
xor
in
les
mov
cmp
pop
xor
and
push
and
mov
cld
adc
mov
cs
inc
dec
jns
cmp
les
xor
pop
sahf
cs
xchg
push
movs
daa
or
jecxz
inc
jg
ds
dec
jecxz
mov
(bad)
sbb
push
hlt
ds
(bad)
adc
mov
xchg
hlt
shl
loope
push
pop
(bad)
inc
arpl
inc
mov
jmp
inc
mov
inc
or
popf
lea
aam
mov
inc
mov
add
push
leave
push
xor
fld
mov
in
gs
push
fcom
ds
cmp
mov
jge
fstp
dec
mov
pushf
jecxz
call
cdq
and
test
cmp
loope
push
in
popf
dec
or
jg
adc
mov
mov
mov
or
cmps
jle
pop
sub
imul
mov
push
pop
and
popf
mov
addr16
xchg
xor
cmp
nop
fidiv
lahf
jmp
and
out
stc
iret
int3
aas
jns
test
outs
(bad)
sbb
lock
xlat
gs
movs
mov
jl
or
sbb
xchg
or
xor
sbb
xchg
xchg
pop
sub
ficomp
push
imul
and
inc
xchg
in
das
sbb
ror
call
scas
jae
or
sbb
push
test
xor
(bad)
jo
mov
sbb
out
push
mov
call
mov
nop
sub
fist
mov
and
xchg
mov
or
out
imul
dec
jmp
cs
bound
sahf
sub
jp
sbb
mov
cmps
ja
xchg
mov
ja
jecxz
nop
jl
leave
out
loop
inc
mov
or
jl
mov
scas
scas
xor
rol
dec
jmp
mov
cmps
cmps
iret
xor
sti
pop
dec
mov
es
adc
mov
cmp
into
mov
stos
cs
imul
pusha
cmp
out
inc
mov
push
sub
pop
mov
push
and
int3
mov
sub
call
nop
jmp
mov
(bad)
cmp
xchg
jbe
lods
sub
dec
add
jo
jecxz
pop
int
mov
sub
push
mov
mov
lods
jle
out
xchg
scas
jecxz
rcr
(bad)
hlt
sbb
cmp
sub
sub
or
dec
lods
sti
lods
lock
ss
mov
(bad)
call
fpatan
push
aad
sbb
jecxz
cmps
(bad)
jmp
stc
xor
jp
xor
fs
inc
push
cmps
dec
call
int3
pop
idiv
sbb
not
adc
stc
dec
dec
pop
(bad)
cmps
hlt
loop
xor
cwde
sub
pop
leave
jns
cs
retf
mov
das
and
je
cmps
int3
ins
push
push
jmp
or
mul
out
inc
fisttp
and
fcomp
cmp
jo
dec
mov
cwde
push
pop
mov
dec
lea
jmp
addr16
or
add
add
inc
cdq
(bad)
stc
div
jge
mov
add
and
cmp
jmp
call
jne
repnz
jmp
pop
or
ja
xor
js
jge
stos
jecxz
rcl
daa
sbb
push
dec
and
nop
mov
adc
loop
mov
push
pushf
inc
adc
icebp
push
push
inc
xor
arpl
cmp
push
imul
mov
inc
das
sub
lods
pusha
imul
bts
sti
clc
stos
cs
sbb
inc
push
add
sti
jae
mov
icebp
sbb
jmp
mov
or
xor
pop
sbb
int
(bad)
repnz
and
shl
mov
push
inc
int
into
cmp
out
or
cmp
movs
movs
push
(bad)
out
jns
adc
push
adc
and
dec
mov
mov
in
(bad)
enter
xchg
ret
mov
inc
add
xor
xchg
xor
jb
xchg
pushf
repnz
inc
mov
inc
inc
push
lods
inc
dec
ins
adc
push
mov
mov
pop
scas
imul
iret
mov
jl
cmps
xchg
bound
or
aam
push
cdq
cmp
(bad)
push
retf
mov
dec
enter
mov
lock
fdiv
inc
pop
cmp
inc
inc
stos
push
pop
bound
or
mov
mov
push
loop
push
xchg
iret
sub
mov
pop
scas
clc
rcr
test
or
add
xlat
stc
dec
add
mov
or
xchg
mov
repnz
neg
popa
fistp
and
sub
idiv
cmp
xchg
pop
and
lea
(bad)
out
outs
mov
inc
jmp
push
and
iret
add
ds
push
xor
pop
cdq
rcr
in
cmp
cdq
repnz
mov
inc
mov
sar
inc
mov
fidiv
adc
mov
pop
mov
add
jmp
cmps
mov
enter
xor
rol
jmp
mov
jge
sub
cs
add
cmp
pop
ins
cld
retf
aas
cld
movs
aad
add
push
arpl
mov
dec
cmp
loop
fldl2t
adc
inc
js
je
jmp
mov
jp
sub
jae
fiadd
repz
mov
fmul
(bad)
pushf
shr
sub
mov
xor
cmp
hlt
fwait
icebp
add
jmp
aaa
xchg
ret
sub
(bad)
ds
mov
fst
lea
in
ret
adc
push
cmp
mov
stc
cld
mov
push
arpl
ins
pushf
sbb
inc
ja
push
mov
int
(bad)
mov
add
ins
dec
add
test
in
adc
cmp
pusha
cmps
inc
dec
mov
cli
or
mov
lock
sbb
fisub
das
jecxz
xchg
pop
or
inc
pop
out
in
popa
pop
scas
arpl
mov
xlat
mov
jb
(bad)
jae
push
ficomp
add
fdiv
out
rol
aas
mov
outs
lods
or
adc
test
js
rcl
push
js
(bad)
(bad)
xor
jno
es
in
lds
adc
jge
sub
ss
and
add
movs
add
fld
dec
out
popa
lahf
push
cmps
loopne
mov
out
into
cmp
fimul
lahf
adc
inc
cli
stos
sub
inc
out
and
push
fbld
cmps
je
sar
retf
loopne
in
dec
mov
(bad)
imul
jle
push
(bad)
gs
test
push
pusha
rol
ins
sahf
iret
stos
pop
int3
(bad)
es
lahf
jne
xor
push
inc
mov
mov
cwde
inc
add
int3
jnp
push
ins
lds
cmps
xor
test
fmul
inc
jb
cmp
dec
jae
ror
call
test
mov
sahf
jmp
adc
cs
cdq
push
or
sbb
cmp
xchg
outs
xchg
pop
imul
rol
pop
das
call
aaa
add
jmp
mov
fucomi
mov
cs
inc
rcr
test
dec
shl
(bad)
call
pop
xor
dec
xlat
pusha
pop
ret
sbb
std
mov
add
push
pop
inc
test
imul
push
fidiv
inc
in
and
pop
and
sbb
push
out
arpl
test
or
cmps
call
in
cwde
jb
sahf
in
loopne
cmps
clc
jns
aaa
aam
retf
push
(bad)
(bad)
adc
mov
xchg
mov
sbb
jno
or
adc
int3
cmp
or
pop
dec
jne
or
ja
out
add
xchg
cmp
mov
dec
mov
or
daa
mov
arpl
cld
xchg
ins
(bad)
es
fwait
xchg
popa
and
and
push
ret
jl
push
inc
xchg
js
shl
mov
aad
popa
sbb
jmp
mov
mov
je
pushf
lods
jge
fs
imul
out
aam
add
mov
out
out
jg
fisub
mov
adc
jle
xchg
call
popf
pop
sub
sbb
or
dec
cmp
(bad)
adc
test
out
cli
pop
pop
and
xor
pop
mov
js
fbld
das
sbb
pusha
outs
mov
test
push
jl
ins
out
xor
sub
mov
pop
inc
jge
adc
mov
sbb
push
dec
jnp
mov
mov
mov
push
push
mov
int3
pop
sar
loopne
push
shl
jae
add
dec
and
pop
jne
pop
xor
mov
jg
push
xor
mov
jbe
mov
xor
mov
mov
pushf
xchg
jg
jp
xchg
enter
and
repnz
pop
and
into
add
adc
sub
(bad)
inc
and
mov
xchg
sub
(bad)
mov
adc
add
push
inc
gs
push
mov
mov
dec
mov
pusha
stos
jo
movs
inc
std
cdq
out
push
call
leave
inc
or
int
add
std
pop
mov
jp
cmp
pop
dec
call
jmp
pop
ret
dec
fwait
in
mov
addr16
xchg
arpl
sub
scas
mov
clc
sbb
sar
jb
push
push
add
in
inc
jmp
(bad)
imul
inc
enter
sar
xor
jb
sub
fcom
xchg
jge
ds
mov
leave
sbb
mov
inc
or
out
lea
sbb
loope
jmp
shl
(bad)
pop
ret
and
or
push
add
fwait
dec
jo
fisub
jcxz
aam
into
adc
(bad)
repnz
outs
daa
arpl
bound
adc
mov
ins
jbe
cmp
test
add
xchg
or
push
(bad)
fidiv
and
pop
and
cwde
mov
inc
repz
test
jae
(bad)
call
pop
dec
ficom
fwait
xchg
cmc
push
test
cmp
les
popf
and
mov
pop
jns
mov
mov
xchg
mul
inc
in
add
out
sbb
inc
pop
push
xor
inc
rol
and
jns
retf
mov
scas
jne
in
sbb
mov
jnp
or
test
fimul
xor
mov
cmps
cmp
mov
mov
cmp
and
pop
out
lahf
movs
jb
adc
bnd
push
je
or
std
jbe
and
sub
cmc
and
aas
in
mov
and
sub
cmp
add
cmp
cmp
sub
jl
jnp
xor
(bad)
hlt
bnd
xor
adc
test
dec
(bad)
mov
sbb
jbe
rcl
adc
retf
adc
pop
test
xchg
add
ins
sahf
ja
and
mov
mov
in
out
and
jl
jmp
out
lahf
outs
ja
in
test
lahf
and
inc
(bad)
fwait
dec
push
xchg
dec
(bad)
int
cli
test
mov
clc
movs
les
data16
call
or
pushf
arpl
fist
gs
popf
jb
inc
ss
inc
pop
or
cwde
mov
test
loop
pop
jecxz
adc
lods
push
movs
(bad)
cmp
clc
sbb
das
frstor
xor
sub
dec
push
(bad)
inc
mov
data16
inc
mov
dec
jno
xchg
xlat
pop
mov
repz
sub
test
retf
push
xchg
jno
inc
arpl
js
lods
jl
idiv
xor
sub
cdq
pop
rcr
mov
fisubr
mov
push
mov
jns
inc
movs
add
jbe
popf
data16
xor
pop
out
push
xlat
mov
pop
sub
adc
aad
inc
xchg
out
fxtract
outs
inc
aam
call
lock
mov
xor
jmp
xchg
and
ror
cli
loopne
aaa
leave
pop
xchg
es
cwde
es
push
dec
enter
popa
pop
cmps
in
(bad)
jmp
cmp
jo
scas
int3
scas
pop
or
pop
pushf
xchg
cdq
push
movs
jbe
push
out
mov
xor
aad
jbe
pop
imul
es
movs
sbb
fnstenv
push
ror
add
sub
aas
push
loope
cmp
mov
into
(bad)
mov
scas
(bad)
dec
inc
icebp
imul
inc
stos
int
jae
push
pop
outs
push
pop
cmp
cli
fldenv
icebp
jo
mov
jne
sbb
repz
add
push
addr16
mov
idiv
jno
push
fimul
imul
jbe
fidivr
loope
cmc
cld
push
jp
push
(bad)
sbb
mov
cmp
sbb
mov
cli
adc
adc
jbe
inc
aad
xor
int3
pop
scas
es
mov
mov
(bad)
(bad)
push
inc
mov
or
mov
xchg
pop
imul
scas
jno
cmp
fdivrp
mov
imul
ja
xchg
mov
xchg
lahf
lock
js
dec
jb
(bad)
or
imul
stos
jns
loope
inc
sub
pop
into
iret
sbb
hlt
jne
xchg
fld
inc
icebp
jne
test
fdiv
scas
sbb
push
scas
cmp
ins
push
fdivr
jp
shl
jecxz
out
mov
lahf
(bad)
lods
adc
out
pop
inc
jno
out
add
(bad)
pop
push
xchg
mov
fild
cmp
sbb
xchg
mov
sbb
addr16
sub
es
sub
ror
pop
xchg
bound
and
push
ds
push
mov
adc
push
(bad)
xchg
xchg
sbb
mov
inc
and
push
dec
dec
xchg
push
or
mov
cmp
call
mov
inc
mov
xchg
retf
gs
cmp
jb
cwde
mov
push
(bad)
stc
mov
add
test
or
les
aad
mov
ss
test
sbb
lock
sbb
pop
in
and
and
mov
bswap
pop
xchg
mov
pop
call
sbb
cli
je
dec
imul
sbb
jecxz
(bad)
mov
aam
out
xlat
jnp
call
cmc
add
cld
push
ss
in
cmp
lods
jmp
push
mov
add
das
jae
xor
loopne
mov
jae
sub
mov
mov
aaa
adc
(bad)
sub
jle
bound
xlat
je
mov
movs
mov
ret
push
pop
push
or
leave
xor
lea
cdq
jae
inc
cmp
popf
js
mov
xor
mov
push
push
inc
or
icebp
jae
inc
cmp
sbb
popa
hlt
sbb
cmp
inc
scas
mov
and
push
mov
inc
jl
mov
or
repnz
movs
jmp
movs
lock
out
sbb
mov
rcl
inc
mov
call
push
dec
cmp
mov
mov
das
test
push
push
adc
mov
dec
js
or
push
push
icebp
pop
imul
mov
pop
dec
pop
adc
lea
and
shl
add
jmp
push
ror
mov
out
sbb
dec
in
inc
popf
add
repnz
addr16
outs
xchg
cmps
dec
jecxz
in
pop
cmp
inc
call
in
dec
mov
adc
mov
adc
cmpxchg
jno
dec
sbb
popa
and
sub
iret
ins
mov
xlat
ins
pushf
out
fwait
jge
out
fst
sub
xor
pop
xchg
adc
js
jle
mov
cld
dec
push
xor
jmp
not
scas
fild
aaa
xchg
push
xor
stos
sub
and
cwde
cli
cmp
fld
mov
test
jg
stos
mov
push
test
hlt
call
xor
dec
aam
outs
or
mov
mov
sub
mov
pop
adc
xchg
loopne
cli
jge
mov
jecxz
and
ret
sbb
push
add
js
xchg
popa
hlt
jbe
push
(bad)
dec
fisubr
das
and
jno
push
rcr
(bad)
das
sahf
adc
mov
sub
jl
jge
in
test
and
mov
or
pop
jecxz
xchg
mov
lods
cmp
test
stos
int3
push
mov
push
movs
push
mov
(bad)
jbe
sbb
lods
shl
arpl
sub
(bad)
outs
mov
push
loope
and
sub
clc
jp
cdq
or
popf
sbb
clc
add
stc
out
enter
fdivrp
int3
int
cmp
(bad)
cld
xchg
mov
or
and
aaa
jecxz
loope
cmp
or
mov
jp
jno
jne
cmc
add
or
jle
mov
dec
mov
mov
jp
movs
and
mov
and
push
(bad)
shl
sti
add
add
fnstsw
aad
pop
dec
int
jns
icebp
mov
mov
pushf
aad
or
adc
lea
(bad)
fistp
xor
retf
mov
cmp
js
xor
leave
inc
enter
rcl
mov
aas
xor
jnp
jl
push
orps
lods
inc
sbb
movs
mov
iret
push
push
bswap
or
cmp
test
aam
ficom
test
ss
cld
xchg
mov
dec
pushf
les
scas
in
adc
(bad)
out
les
xchg
inc
mov
sub
dec
jge
shr
pop
inc
dec
aam
push
sbb
(bad)
cmp
call
lods
les
sub
into
dec
out
or
dec
or
mov
xchg
icebp
iret
cmps
out
cmc
lahf
ins
movs
in
lds
shl
(bad)
mov
cli
mov
mov
or
and
sahf
xchg
and
scas
xor
sub
addr16
ficomp
push
rcl
cld
add
cmps
lods
mov
push
xchg
jmp
mov
mov
call
sbb
push
repnz
mov
cld
jmp
bound
xchg
xchg
les
sub
and
sub
mov
xor
xchg
into
push
xor
fistp
mov
popa
mov
add
rcl
enter
and
nop
das
cmps
add
sbb
ss
sub
stos
push
out
mov
and
sub
hlt
cmp
std
shl
mov
mov
cmp
js
fnstsw
pusha
lock
adc
push
movs
sbb
and
out
jb
pop
jne
cmp
jb
prefetch
or
and
cli
and
xor
push
dec
xchg
sbb
aas
lods
or
repnz
or
ja
lods
sti
outs
stos
push
(bad)
aaa
sbb
cli
pop
imul
fbstp
daa
ds
int3
adc
push
or
lods
call
cmps
adc
mov
sub
cmp
aaa
cmp
dec
push
outs
icebp
xchg
test
mov
mov
lock
pop
pop
add
pop
movs
sub
cmps
jns
fdivrp
stc
scas
mov
push
sub
arpl
aad
addr16
rol
mov
jbe
gs
mov
inc
mov
data16
sbb
jg
jnp
pushf
ficomp
jb
je
sbb
jg
xor
xor
push
movs
and
or
sbb
sub
ss
dec
adc
scas
(bad)
dec
push
inc
in
clc
inc
je
xor
rol
pusha
out
xor
jmp
pop
mov
adc
sbb
push
sub
vpsubb
adc
or
ins
test
(bad)
clc
imul
pop
mov
mov
dec
mov
ins
adc
mov
repz
pop
cmc
lods
in
test
jecxz
add
xor
movs
cmps
aam
call
std
push
cmp
cdq
lea
out
enter
inc
mov
inc
xlat
mov
pushf
enter
dec
out
mov
idiv
and
or
dec
adc
gs
dec
push
loope
mov
movs
movs
int
lock
pop
jno
jo
mov
or
mov
mov
(bad)
stc
mov
pop
ins
mov
ss
ret
xchg
test
lea
or
add
xchg
xchg
add
jnp
ret
movs
xchg
int3
add
dec
sub
and
add
and
or
push
jae
jge
inc
cmp
jle
test
imul
jp
push
bound
mov
dec
imul
in
jbe
adc
pop
mov
mov
mov
ret
data16
cmp
js
jnp
add
adc
nop
push
or
movs
inc
sbb
jecxz
mov
jne
mov
pop
shl
into
sub
push
mov
lahf
jmp
mov
mov
sub
cli
pop
cmp
mov
jnp
pop
clc
ds
test
sbb
or
(bad)
clc
retf
mov
mov
dec
je
push
jge
mov
retf
mov
gs
inc
add
sbb
cmp
mov
mov
fxtract
add
push
cmp
pop
dec
inc
push
call
bound
or
cmps
jno
adc
icebp
fstp
cmp
dec
sub
aas
mov
scas
aaa
xor
(bad)
lds
test
jl
sahf
stos
jl
in
cmps
fwait
cmp
sahf
pop
call
fs
push
fcomp
add
pop
ret
xor
test
dec
or
cli
leave
adc
pop
mov
and
(bad)
les
jmp
icebp
adc
out
inc
fs
imul
add
sub
shr
aam
test
jo
test
dec
popa
ss
and
popa
and
movs
mov
add
(bad)
popa
mov
mov
pop
arpl
stc
sub
and
jg
jne
sti
mov
aas
test
repz
mov
jns
popa
ret
idiv
outs
xchg
xchg
fs
repz
call
dec
mov
push
rcr
sub
sbb
div
fdiv
call
sti
push
stos
lds
pop
lds
dec
fwait
outs
inc
push
xchg
data16
outs
lea
sbb
xor
pop
sar
and
ss
xchg
scas
mov
jp
std
adc
xchg
in
add
cwde
lock
mov
add
push
ds
sbb
sbb
iret
xchg
cld
cmp
dec
out
faddp
(bad)
push
leave
adc
cli
dec
cmp
shl
mov
loopne
mov
(bad)
jg
add
pop
stc
gs
mov
inc
xor
jo
cmc
add
inc
outs
sbb
neg
inc
ret
lock
test
sbb
dec
retf
inc
mov
jmp
shr
cmp
imul
mov
mov
pushf
pop
xor
inc
xchg
inc
mov
mov
and
jg
jo
cmps
jno
retf
adc
sbb
hlt
loop
and
ror
cmp
pop
ja
cmp
or
add
jmp
int
jmp
js
xor
loop
addr16
leave
sahf
sbb
hlt
or
xor
jne
inc
and
loope
or
mov
fst
test
sahf
test
das
aaa
call
mov
scas
shr
icebp
call
add
mov
jmp
cmp
outs
dec
push
cld
and
imul
mov
rcr
retf
or
(bad)
ja
adc
stc
icebp
sbb
outs
fsubr
adc
or
mov
add
fidivr
jno
mov
or
inc
sub
adc
icebp
cdq
outs
xor
inc
adc
push
js
es
pop
(bad)
cmp
dec
push
sub
xchg
pusha
xchg
das
pop
push
jo
mov
sub
jnp
gs
jns
repnz
mov
shl
call
add
push
mov
(bad)
or
xor
inc
dec
ret
add
leave
call
xor
cmp
push
sbb
sbb
xor
lods
jns
mov
in
fsub
xor
mov
cmps
imul
loope
es
retf
movs
jmp
in
stos
jbe
repz
push
int3
cmp
fimul
push
iret
or
cmp
dec
mov
int
cli
rol
mov
sub
outs
das
jmp
test
call
dec
mov
or
sbb
push
pusha
cs
sbb
push
dec
mov
in
pop
mov
add
xchg
and
rcr
mov
pop
aaa
sbb
pop
test
mov
or
and
loope
xchg
and
dec
push
or
(bad)
jmp
dec
push
dec
add
clc
out
sahf
outs
jmp
nop
dec
xlat
pop
sub
or
inc
lds
sbb
fld1
xchg
aad
jae
fisub
retf
mov
js
mov
cwde
pop
mov
scas
push
xchg
inc
mov
fwait
adc
pop
xchg
enter
jno
popf
sub
stc
sbb
cs
pop
mov
adc
(bad)
sar
pop
adc
jle
pop
dec
mov
push
hlt
jns
add
fstp
push
cmp
cmc
lea
and
mov
push
pop
xor
mov
xchg
xlat
dec
ds
or
jae
push
test
or
sub
or
daa
jnp
jecxz
mov
jmp
pusha
sbb
out
adc
add
lahf
aas
xchg
mov
push
cmp
lods
xchg
push
outs
mov
shl
xor
retf
cmc
cmp
(bad)
imul
mov
mov
push
aaa
mov
in
sbb
pop
sub
imul
test
cli
push
xchg
mov
sub
stos
movs
jmp
inc
add
adc
fs
mov
icebp
test
test
daa
in
(bad)
sbb
add
mov
cmp
aam
(bad)
rcr
mov
xchg
fcomi
xchg
pop
test
dec
mov
xor
pop
pushf
(bad)
(bad)
mov
fisttp
fadd
int
xchg
dec
retf
jb
jecxz
sub
adc
call
cs
adc
test
int3
xlat
xor
sbb
cld
gs
in
pop
sahf
push
icebp
sbb
cmp
div
mov
or
push
dec
mov
xor
xor
data16
sbb
icebp
imul
mov
fimul
enter
clc
push
dec
daa
cmp
cdq
lods
jg
retf
sbb
push
out
and
adc
stc
and
mov
not
push
sti
add
and
and
dec
sbb
push
rcr
add
loopne
mov
fidiv
sbb
out
xor
out
(bad)
ret
or
test
push
mov
retf
int3
sub
stos
out
sar
jp
(bad)
pop
push
add
lahf
stos
das
xchg
push
inc
loopne
sti
mov
sub
xor
das
int3
je
leave
enter
mov
xor
addr16
pusha
sbb
cdq
ss
xor
sub
or
add
inc
mov
movs
mov
cmp
rol
ja
dec
xor
or
push
cdq
test
ins
pop
les
push
aas
fwait
imul
ficom
mov
jg
loope
nop
inc
cmp
fs
xchg
cmp
xor
mov
xchg
shl
out
(bad)
in
sbb
(bad)
mov
dec
data16
fs
ffree
cmps
mov
add
jp
cmp
or
loop
ret
sub
and
push
add
sbb
call
mov
mov
jns
xor
(bad)
jb
jnp
cwde
cmp
lods
pop
es
cmps
adc
xor
sbb
pushf
cmp
sbb
xchg
addr16
sbb
stos
mov
loop
mov
shr
or
lods
int
sbb
jg
pop
jbe
cmps
mov
addr16
scas
test
addr16
call
jbe
mov
push
adc
jae
les
and
jl
movs
cmp
add
mov
inc
ret
pop
fdivp
jo
retf
test
sub
add
mov
sti
stos
fs
cmp
stos
jb
ss
in
xor
sti
mov
cmps
push
adc
cwde
ja
push
or
xor
mov
adc
jg
pop
xchg
push
mov
out
add
jge
loope
xchg
pop
lods
pop
push
lds
adc
je
push
ds
sbb
push
dec
clc
inc
into
fs
mov
xchg
aam
das
test
xchg
mov
fcomp
rcl
jmp
popf
dec
in
pusha
adc
push
movs
cmps
popa
mov
mov
cmp
xchg
mov
gs
mov
fdiv
rcl
push
in
dec
mov
popf
mov
popf
pop
out
push
and
call
mov
ja
and
fisub
sub
loopne
pop
stc
add
sub
fs
xor
aad
mov
xchg
mov
push
retf
mov
jns
neg
mov
into
shr
daa
cmp
mov
cmp
outs
es
jo
(bad)
dec
jno
sti
outs
ja
sub
aad
sar
in
push
jb
sbb
ss
pop
push
seto
mov
mov
mov
or
stos
cmp
xor
or
cs
jbe
adc
push
add
xchg
call
bound
hlt
adc
cmp
xchg
mov
gs
movs
adc
push
sub
jg
arpl
add
cli
sub
pop
xchg
cwde
loopne
xor
lods
test
pop
je
mov
mov
shl
ins
xchg
inc
outs
pop
inc
add
mov
imul
sti
xchg
stos
sub
les
dec
dec
add
mov
sub
fwait
or
mov
dec
fcomip
ins
popf
fdiv
or
es
mov
push
pop
fs
loope
ror
push
rcl
inc
les
and
pop
sub
out
ins
mov
cwde
pop
out
and
pop
dec
xchg
sahf
cld
sbb
arpl
mov
arpl
mov
pop
mov
out
in
sahf
adc
push
pop
ss
cmp
shl
xlat
pusha
mov
dec
push
das
stc
shl
jg
imul
jmp
cwde
jl
push
inc
xchg
sahf
lods
dec
jp
sar
mov
add
push
scas
movs
pop
pop
jne
idiv
out
fst
div
stos
out
jbe
ins
fadd
xchg
(bad)
mov
ficom
repz
cmps
call
out
mov
outs
loop
cmp
addr16
les
das
cdq
pop
cdq
(bad)
loopne
das
xor
pop
push
fiadd
push
popf
aas
icebp
sub
pop
mov
or
ins
jns
xchg
xchg
sub
jbe
or
mov
pushf
(bad)
jns
xor
fisttp
or
jbe
leave
jmp
inc
push
mov
stc
mov
scas
neg
inc
ret
inc
jns
xchg
repnz
mov
test
pop
mov
inc
hlt
(bad)
mov
mov
add
aam
sbb
int3
xchg
mov
add
mov
jno
xchg
xor
aad
push
cmp
push
je
mov
dec
push
movs
adc
(bad)
outs
xchg
push
scas
or
pop
push
jo
sbb
jnp
mov
add
pop
mov
popf
mov
push
imul
gs
push
sub
sahf
xor
pushf
push
mov
fnstsw
out
push
push
adc
pop
leave
loope
xchg
mov
cmp
das
cmps
ins
gs
call
cmp
loope
jne
das
bound
dec
jmp
inc
mov
jae
icebp
ss
mov
inc
jo
clc
pop
push
hlt
enter
push
mov
pop
(bad)
repnz
fucomi
pop
add
outs
jle
lahf
mov
xchg
dec
rcr
mov
mov
(bad)
and
jne
xor
icebp
pop
pop
or
das
data16
iret
or
xchg
movs
mov
arpl
pop
push
pop
inc
jae
mov
push
leave
aad
fdiv
cmp
push
lods
pop
sub
and
xchg
and
jno
or
mov
cdq
fsubr
and
cld
(bad)
jnp
shr
lea
push
mov
lods
mov
aam
push
jecxz
dec
mov
mov
push
jp
xlat
(bad)
jp
sub
sub
jne
sub
pop
pop
ret
dec
imul
and
or
ss
jp
(bad)
in
cwde
ret
es
push
ret
fdiv
sbb
mov
jne
scas
xchg
stos
inc
cmp
dec
push
mov
inc
test
lods
mov
fdivrp
pop
(bad)
in
ja
add
aaa
arpl
dec
jle
pop
lods
xlat
mov
mov
dec
fmul
xor
add
jmp
jg
shr
mov
retf
je
scas
int
jb
sub
(bad)
sbb
dec
dec
push
lock
mov
dec
inc
push
fstp
mov
cmps
xchg
jg
imul
mov
scas
aaa
or
loope
xchg
addr16
push
or
aad
jbe
bound
add
or
sbb
cmps
or
xor
fldcw
inc
lods
push
or
out
xchg
mov
repz
mov
pushf
ins
jo
xor
into
or
imul
(bad)
std
imul
dec
mov
jmp
pop
inc
or
inc
mov
xchg
lods
loop
jl
out
scas
inc
cmp
rcr
and
loopne
adc
std
push
push
leave
mov
nop
pop
push
(bad)
fisttp
xchg
scas
lahf
and
pushf
movs
dec
(bad)
outs
std
(bad)
sbb
dec
out
int3
loope
jmp
xchg
imul
shl
mov
es
inc
cmps
aaa
hlt
inc
inc
rcr
aam
adc
pop
mov
xchg
ret
add
mov
mov
adc
fdivr
int3
fs
sbb
jne
stos
xor
cwde
call
sub
in
imul
cmc
enter
mov
repnz
je
rcr
outs
inc
pop
push
add
out
fistp
and
aaa
loop
mov
jae
test
out
adc
shr
lods
popf
dec
xchg
daa
enter
pop
clc
(bad)
imul
out
mov
mov
retf
shl
or
jmp
mov
icebp
bound
in
or
ret
gs
rcl
test
dec
push
stos
sbb
pop
int3
push
push
cmp
ja
and
inc
cmp
test
sub
cmc
fisubr
push
or
mov
xchg
int3
mov
(bad)
hlt
inc
retf
cmps
ficomp
(bad)
sbb
ret
dec
fdiv
sub
jl
inc
cmps
sbb
fistp
dec
adc
mov
pusha
adc
cmp
arpl
int
fidivr
out
adc
ja
push
test
add
and
pop
xor
lds
rcr
cmp
fcom
test
or
inc
add
dec
fistp
in
mov
scas
jbe
popf
or
ss
test
call
inc
xchg
pop
iret
smsw
fdivr
stos
inc
in
xchg
pop
stos
inc
out
aaa
ss
movs
fs
jp
ret
or
fnstenv
lods
jb
hlt
(bad)
push
sub
aad
cmp
push
mov
and
and
imul
cmp
xchg
mov
fmul
pop
faddp
inc
lahf
sub
push
push
pushf
push
jg
sbb
mov
test
movsx
push
pop
stos
ret
shrd
cdq
push
cmp
out
dec
cld
lods
test
retf
inc
sub
fstp
sbb
cmp
fcmovnu
sub
pop
(bad)
les
sub
or
ins
dec
call
jmp
xchg
test
int
arpl
push
xchg
xchg
jnp
mov
enter
aas
add
int
or
aad
and
jo
pop
sub
dec
retf
xchg
pusha
fcomp
mov
xchg
inc
das
cmp
or
lahf
add
inc
dec
in
or
mov
into
fstp
ret
mov
shl
add
adc
mov
sbb
retf
push
fs
sub
movs
xchg
inc
mov
dec
sub
pop
shl
fsub
psubw
push
jnp
repnz
jg
(bad)
repz
out
hlt
adc
lds
push
or
fdivr
adc
dec
and
jo
push
nop
push
imul
adc
cmp
fidiv
sti
pop
jge
fadd
mov
jb
sar
push
or
aad
(bad)
push
shl
(bad)
sub
cmp
fsub
pop
scas
inc
xor
pop
mov
icebp
inc
in
xor
sbb
xchg
shl
mov
mov
dec
inc
mov
pop
xlat
push
popf
mov
je
jae
or
or
jo
sbb
sar
push
jo
xchg
adc
cmps
das
dec
jb
add
mul
inc
fst
adc
pop
adc
mov
inc
jp
or
icebp
(bad)
movs
rcr
push
inc
shl
cmps
ret
call
ja
sub
icebp
mov
mov
sub
inc
loopne
cmc
sbb
or
jo
addr16
adc
sahf
ss
pop
sub
in
lods
aad
movs
add
sbb
mov
ins
push
mov
push
popa
sub
xlat
dec
loop
sbb
mov
pop
fild
stos
call
aas
nop
es
leave
mov
inc
test
in
retf
nop
in
jp
jns
mov
push
bnd
test
jbe
shl
out
out
sti
aam
push
xchg
ins
into
mov
mov
push
cmp
punpckhbw
inc
adc
add
adc
or
dec
mov
lahf
stos
cdq
push
inc
mov
sbb
dec
inc
scas
outs
add
scas
mov
arpl
out
pop
mov
leave
adc
ins
xchg
dec
js
std
test
add
mov
push
push
mov
aaa
fisub
xchg
and
mov
mov
push
adc
retf
sbb
mov
push
movs
enter
mov
ja
sbb
(bad)
std
sar
das
xchg
repz
imul
lahf
push
xchg
shl
cmp
hlt
inc
push
call
mov
mov
xchg
ds
xchg
push
push
cwde
dec
cmp
pop
fidiv
stos
cmc
in
mov
xor
push
leave
and
adc
fist
jl
bound
fnstcw
sbb
mov
jle
mov
jp
or
call
xchg
outs
in
in
fnstenv
je
in
dec
sub
xchg
stos
jo
out
push
sahf
jbe
push
fdiv
sbb
lock
sbb
pop
mov
xor
aad
and
ud0
stos
mov
push
icebp
xchg
xchg
push
lods
je
mov
sub
and
add
cmp
retf
cld
loop
adc
stos
adc
push
in
sub
cmp
xchg
out
add
stos
add
ja
inc
ins
sub
mov
jb
fiadd
mov
jl
mov
cli
adc
aad
test
jmp
mov
ins
outs
xchg
mov
lods
inc
mov
sbb
and
jg
fcomp
out
dec
fld
xchg
pop
pop
jecxz
inc
push
dec
inc
popa
dec
mov
sub
ret
icebp
lods
sub
(bad)
fs
frstor
mov
inc
xchg
mov
xchg
pusha
ficomp
jmp
push
ins
xchg
sbb
ds
shr
std
adc
mov
out
mov
scas
xchg
inc
and
aad
xchg
push
sub
or
call
addr16
dec
repz
data16
sbb
and
and
sub
jmp
push
dec
lea
adc
aad
retf
sub
bound
mov
movs
cld
add
sahf
inc
sub
adc
setb
push
mov
pop
rcl
dec
daa
(bad)
shl
push
jmp
adc
in
mov
call
lods
push
and
cmp
jl
and
mov
jecxz
test
repz
pop
jecxz
call
daa
xchg
frstor
lahf
xchg
lock
movs
push
pop
aaa
and
aaa
retf
push
lahf
jns
fst
pop
ins
pop
push
sub
and
push
sub
sub
sbb
out
mov
jae
mov
enter
arpl
jl
popa
sub
sub
pop
xchg
xchg
fcmovb
rcr
jg
sub
retf
jp
adc
or
pushf
xchg
movs
cmps
pop
push
pop
push
add
jne
pop
xchg
inc
push
inc
mov
sbb
pop
or
fisubr
xor
xlat
pop
add
xor
push
aam
adc
sti
sub
dec
imul
or
mov
or
rcr
cmp
xchg
mov
or
jnp
jae
and
pusha
into
mov
sar
gs
scas
in
stc
adc
loopne
cwde
jno
and
in
test
call
cdq
cmp
jne
test
and
jl
or
pop
mov
je
add
inc
loopne
push
ins
xor
xor
dec
fidivr
pop
rol
leave
jno
fnstsw
xchg
fwait
pushf
pop
sbb
push
mov
cli
xchg
ret
ret
mov
out
aaa
in
sbb
sbb
push
test
mov
bound
and
pop
mov
dec
dec
and
fsub
lahf
in
push
cs
mov
ins
mov
cmp
mov
fisttp
ret
or
clc
xchg
loop
outs
or
inc
add
ss
ins
jmp
ins
push
mov
shl
(bad)
fstp
scas
inc
mov
mov
mov
pop
push
pop
js
nop
fs
call
xor
pop
push
shr
push
mov
add
sti
lock
clc
adc
mov
sbb
adc
pop
inc
fwait
sbb
(bad)
fistp
adc
icebp
dec
mov
jb
addr16
mov
dec
aaa
mov
inc
sbb
push
cmp
xor
mov
push
mov
xchg
ror
lods
mov
call
sub
outs
add
mov
int
and
retf
test
sub
pop
mov
cdq
dec
mov
jmp
cdq
pop
rol
xchg
jg
and
jo
ret
fcomp
push
push
mov
daa
sbb
test
xor
cmp
add
jno
cmp
mov
sbb
mov
dec
sub
jge
data16
xor
sbb
and
scas
pop
jbe
imul
inc
dec
stos
inc
sbb
stos
js
call
sbb
inc
adc
sub
dec
(bad)
jle
icebp
mov
push
mov
xor
add
fwait
jge
pop
mov
jmp
pop
lahf
les
int3
fst
(bad)
retf
add
xor
xor
xor
inc
mov
(bad)
xchg
movs
push
sub
adc
inc
out
inc
push
jnp
leave
in
jns
jae
enter
test
pusha
stc
ficomp
cmp
test
jge
jae
test
lahf
cmp
scas
xor
push
(bad)
push
sub
inc
adc
faddp
push
lahf
stos
mov
sar
cmps
add
mov
push
in
push
jnp
(bad)
adc
ja
(bad)
stc
fisttp
pop
or
sub
mov
xchg
sub
mov
mov
dec
aaa
adc
cmp
xchg
mov
out
pop
aaa
gs
aaa
mov
repz
push
sub
cwde
dec
(bad)
dec
dec
call
sbb
or
inc
outs
dec
cli
out
std
mov
push
leave
fistp
(bad)
fst
sti
sahf
pop
dec
dec
lahf
mov
repz
pop
add
pop
or
sbb
xor
xchg
retf
mov
adc
cmc
(bad)
push
dec
icebp
xchg
mov
sahf
or
or
or
inc
fstp
es
mov
pop
mov
sbb
fadd
cmc
mov
xor
inc
sbb
push
pop
cmp
and
push
(bad)
jbe
js
adc
jb
dec
and
or
cwde
dec
inc
shr
mov
xchg
lahf
dec
imul
mov
fidiv
inc
push
push
ror
(bad)
mov
mov
(bad)
aad
jmp
jle
add
xchg
test
inc
xor
add
push
sub
or
push
and
std
jg
int3
stos
cld
sbb
adc
xchg
sub
sbb
mov
addr16
sbb
popa
jge
mov
loop
aaa
jl
mov
pop
jecxz
cmp
imul
inc
ffree
jne
sub
sbb
xor
pop
stos
mov
pop
es
pop
fld
scas
(bad)
cmps
arpl
popf
xor
sub
loope
or
arpl
ja
push
into
ins
inc
xchg
inc
fnstsw
test
cmp
fstp
mov
out
mov
out
sbb
push
int
out
(bad)
push
gs
xor
std
dec
push
jns
retf
dec
and
mov
mov
add
xor
popf
push
fld
neg
enter
pusha
inc
push
cld
xor
cmc
aad
pop
pop
or
jg
xor
(bad)
cs
call
test
pop
xor
xor
adc
ins
push
xchg
push
test
outs
sub
xlat
(bad)
retf
dec
or
sbb
fist
(bad)
push
dec
call
fs
fidiv
enter
out
std
pusha
cmp
shr
int3
retf
cli
sub
dec
gs
js
enter
inc
fwait
hlt
sub
add
iret
mov
and
add
loope
mov
out
loopne
mov
push
add
mov
cmp
xor
xlat
cmp
xor
sti
and
xor
xor
movs
or
mov
xchg
int3
sub
scas
and
sbb
xchg
hlt
sub
and
xor
lock
xor
mov
cmp
(bad)
mov
and
sbb
ds
test
ins
ret
or
rcr
fsubrp
dec
pusha
dec
adc
fwait
(bad)
jmp
push
retf
cmp
addr16
(bad)
test
cmps
and
push
out
add
xchg
int
stos
mov
stos
sub
int
mov
inc
jae
push
lods
sbb
jb
pop
dec
mov
cmp
dec
mov
addr16
jae
adc
test
jno
or
rol
sub
(bad)
ins
ror
imul
push
mov
adc
add
jmp
int
jle
(bad)
jmp
push
cmp
jg
or
bound
dec
mov
imul
mov
dec
mov
jno
cld
scas
imul
ret
mov
je
fild
mov
cmp
fidivr
cmp
pop
mov
pop
call
adc
xor
lock
inc
cmp
leave
jecxz
out
jl
fwait
jle
xchg
lods
jle
xchg
dec
out
mov
add
inc
or
and
push
lods
in
cmp
iret
dec
nop
(bad)
xlat
sbb
dec
aaa
popf
and
xchg
outs
rol
push
xchg
mov
xor
mov
movs
cmps
fs
add
fbld
cmp
pop
ret
adc
xchg
inc
xor
int3
mov
aaa
mov
adc
enter
pop
sub
test
daa
dec
mov
loop
inc
mov
call
cmps
movs
sbb
xor
add
test
sbb
sub
pop
mov
sbb
fs
aas
stc
jns
stos
or
or
mov
sbb
cld
mov
cmps
and
stos
loopne
xor
(bad)
out
jae
stos
ss
jae
mov
test
js
cli
shl
sbb
fist
pop
xor
push
test
xchg
pop
movs
mov
xchg
mov
inc
mov
xchg
cmp
mov
sub
je
mov
retf
inc
imul
pop
sub
inc
sub
sub
or
sbb
retf
repnz
je
movs
ret
mov
jb
pop
jo
fldcw
ss
mov
rcl
je
pop
cdq
sti
inc
out
mov
or
out
cmp
cmp
sbb
pop
inc
pushf
rcl
adc
or
mov
aad
out
loop
sar
and
sahf
rcl
mov
or
add
push
mov
test
or
mov
add
stc
shl
(bad)
shl
mov
popa
mov
clc
iret
fcos
inc
mov
cmc
mov
add
adc
loope
idiv
mov
pushf
mov
jae
cmp
sbb
sbb
jbe
loopne
outs
xchg
mov
sub
xor
jp
fistp
jle
pop
pushf
jb
fstp
sahf
lea
pop
popa
shl
cmp
repz
mov
add
(bad)
cld
xchg
add
aaa
sub
jge
out
cmp
call
or
cmp
les
popa
sbb
test
jecxz
cmp
sti
ficomp
cmp
xor
cmp
jmp
fwait
(bad)
cmp
rcr
push
scas
das
shl
fucomi
jmp
jb
sbb
mov
fbstp
ja
cmps
xlat
and
dec
les
int3
cmc
sub
adc
mov
movs
sbb
push
add
cld
sub
or
xchg
fs
mov
dec
pop
cmp
or
or
retf
push
jl
lods
mov
xor
pop
push
cdq
outs
push
pop
cs
fild
nop
xor
xor
cdq
dec
xor
js
mov
sahf
mov
mov
cmovb
ficom
out
pop
lock
mov
or
(bad)
fcom
dec
or
scas
lock
pop
and
cli
push
mov
fwait
lea
xchg
sub
push
shl
sub
jbe
in
out
adc
lods
xchg
fwait
mov
mov
pop
mov
cmc
adc
shl
loope
ja
push
(bad)
lock
xchg
mov
mov
into
mov
aam
mov
lea
cli
popf
mov
mov
popa
xor
movs
fs
enter
leave
or
add
pop
loop
mov
and
(bad)
clc
fimul
jo
cmp
inc
aam
xchg
mov
shl
ret
pusha
lods
xchg
outs
sub
leave
xor
fbstp
call
mov
push
mov
outs
sbb
(bad)
or
js
mov
xchg
dec
sub
cmp
fimul
mov
adc
push
pop
push
xchg
push
movs
ja
scas
xchg
xchg
sub
fisubr
and
inc
add
pop
test
dec
retf
lea
pusha
dec
retf
push
inc
in
ror
dec
push
mov
daa
in
ins
movs
xchg
pop
or
sub
jnp
hlt
shl
push
and
(bad)
or
jae
ds
repnz
clc
sub
lods
sbb
xchg
sahf
push
inc
clc
jne
jns
ja
jns
mov
cmps
dec
test
prefetch
pop
add
div
neg
xlat
dec
adc
daa
mov
jb
in
movs
pop
pop
inc
sahf
je
jge
mov
ins
mov
test
aaa
pusha
cmp
mov
ins
mov
lods
xor
ins
loope
(bad)
xlat
jp
ficom
inc
je
sub
aaa
cmps
push
(bad)
aam
mov
dec
dec
cdq
enter
push
pop
fs
push
jo
repnz
xchg
sbb
inc
movs
push
cld
push
inc
das
aaa
jg
test
inc
mov
(bad)
xchg
and
(bad)
hlt
pop
mov
(bad)
mov
shr
pusha
dec
and
push
mov
fsub
adc
or
leave
cmp
cmp
shl
fdivr
inc
jmp
fsubr
in
jle
xchg
outs
cmps
ret
(bad)
adc
or
mov
nop
push
jne
pusha
addr16
sbb
and
cmps
pop
dec
hlt
cmp
sbb
mov
jp
lahf
lods
aaa
outs
stos
iret
mov
aaa
movs
clc
imul
dec
aam
sub
repnz
ror
(bad)
ficom
call
or
jbe
push
enter
aaa
xchg
das
sbb
mov
js
nop
scas
scas
jg
ins
and
adc
lods
in
add
call
push
fidivr
or
enter
cmps
xor
aaa
out
ret
mul
pop
aaa
or
bound
imul
lock
lds
add
js
fcom
push
popa
sub
loopne
cmps
dec
fcomp
hlt
sub
adc
aad
ret
or
retf
mov
mov
xlat
mov
neg
(bad)
repnz
mov
retf
jns
and
loope
loope
retf
cmc
movs
cs
adc
push
jns
mov
cld
pop
sbb
mov
adc
cmp
inc
jne
xor
loope
push
mov
mov
xchg
add
loop
mov
and
or
aaa
adc
shl
adc
scas
or
inc
ds
into
(bad)
mov
inc
scas
adc
test
(bad)
jle
popa
push
aas
and
ins
mov
mov
sbb
sbb
(bad)
xlat
(bad)
scas
shl
add
push
mov
enter
pop
jge
cmps
retf
sbb
aaa
sbb
dec
out
dec
add
jbe
jno
sbb
adc
mov
out
ins
lahf
inc
xchg
hlt
out
rcl
pop
repnz
hlt
and
nop
out
sbb
jle
fnstsw
nop
add
or
(bad)
test
stc
mov
fldcw
js
mov
fcmove
and
mov
adc
mov
in
inc
cmp
ja
push
test
mov
jl
mov
inc
ins
rcr
sub
adc
xchg
(bad)
int
lods
ins
sbb
mov
nop
add
or
jmp
ja
movs
std
test
sbb
fisttp
rcl
cmp
cmps
sbb
cmps
cmps
xor
push
cmp
xchg
sahf
cmp
fisubr
or
outs
xor
loop
sub
cs
xchg
mov
repnz
push
ret
gs
xor
mov
in
in
sub
out
xor
xor
and
adc
or
in
jle
pop
inc
scas
stos
jecxz
xor
xchg
data16
adc
mov
lock
xlat
add
clc
mov
sbb
sti
pop
test
jo
adc
adc
sub
movaps
scas
or
mov
sbb
fsubrp
lock
(bad)
mov
(bad)
movs
jae
and
neg
les
fidiv
(bad)
xor
movs
call
rcl
data16
and
xor
mov
in
out
dec
out
mov
and
in
mov
inc
lods
(bad)
jg
add
sti
sti
shr
inc
xchg
jle
mov
gs
fild
push
into
cwde
sbb
(bad)
mov
cmps
inc
stos
call
je
aad
xlat
aad
or
and
fst
ret
adc
mov
mov
idiv
and
push
mov
sub
inc
inc
int
cli
dec
jmp
push
xchg
add
dec
mov
js
cmp
inc
push
(bad)
shl
test
fcomp
dec
stos
mov
sar
jmp
out
dec
(bad)
jg
aaa
(bad)
pop
cmp
inc
push
out
add
dec
lods
jnp
fstp
jns
sub
fs
adc
mov
xlat
mov
pop
mov
bound
aad
dec
loop
or
popa
xchg
push
test
adc
(bad)
clc
mov
stos
fidiv
dec
arpl
lea
or
xchg
mov
jno
ret
and
std
popf
or
xchg
add
push
data16
inc
mov
jecxz
and
aaa
outs
repnz
sbb
add
mov
jecxz
mov
jo
and
sbb
mov
jne
ret
adc
push
outs
mov
loope
xor
pop
arpl
xlat
mov
and
bound
call
mov
dec
sbb
lahf
cmc
loopne
push
aad
lods
pop
mov
cmp
fisubr
dec
xchg
push
(bad)
fidivr
cmps
push
repz
xchg
jmp
dec
aaa
enter
into
adc
xchg
adc
xor
repnz
dec
mov
leave
or
mov
(bad)
inc
sbb
gs
nop
inc
mov
sbb
test
aaa
mov
or
pop
je
repnz
loopne
mov
fdiv
xchg
lahf
(bad)
push
loopne
inc
pusha
les
das
lock
dec
hlt
cmp
add
ins
nop
stos
xor
mov
rcr
pop
pop
push
mov
mov
add
invd
pop
adc
xchg
inc
cmp
ja
cdq
sbb
sbb
mov
cmps
mov
jbe
adc
stos
je
sti
mov
xchg
and
and
cmp
(bad)
jecxz
mov
hlt
test
mov
pop
retf
add
jge
pusha
int3
lods
fcomp
rol
push
jg
jae
xor
push
cmps
les
loopne
fadd
xchg
cmp
(bad)
pop
aaa
cmc
lock
fwait
mov
mov
cld
push
cmp
mov
jecxz
jo
mov
cmc
mov
push
imul
in
push
les
in
cli
std
fcom
push
outs
lds
mov
sbb
push
in
call
mov
mov
adc
or
inc
adc
pushw
out
gs
xchg
adc
or
sub
adc
push
leave
aaa
jbe
and
lods
mov
xor
daa
in
outs
mov
push
mov
cmp
cmps
dec
mov
or
cmc
int3
or
sbb
cmp
in
cmp
test
mov
in
cmp
mov
ror
jno
sbb
dec
jmp
jmp
mov
nop
mov
add
xor
add
push
mov
push
pop
push
inc
(bad)
(bad)
and
mov
inc
sub
mov
add
add
sahf
sbb
(bad)
jnp
jge
lds
inc
sub
and
mov
out
sbb
and
sub
mov
fisub
or
add
cli
and
sti
mov
(bad)
pusha
fdivr
pusha
or
mov
pushf
pusha
mov
out
aas
arpl
jb
add
mov
pop
xor
jmp
aaa
jle
data16
(bad)
jmp
(bad)
sub
dec
inc
and
xchg
or
in
or
dec
js
inc
xchg
jmp
(bad)
dec
test
fmul
out
push
xchg
fimul
inc
leave
xchg
in
jl
dec
sub
mov
mov
and
aad
xchg
pop
push
in
scas
xchg
mov
xchg
xor
xor
sbb
mov
xrelease
dec
aas
ror
mov
stos
pop
mov
xlat
test
aam
sub
loope
add
pop
xor
mov
jno
stos
push
mov
xor
retf
push
xchg
inc
and
rol
inc
lock
sti
int3
sbb
and
push
push
js
xchg
leave
ror
push
dec
or
cmp
dec
outs
and
and
retf
xor
or
fdiv
adc
in
push
jmp
cmp
sub
cmps
aad
dec
sub
ret
adc
dec
inc
test
xlat
jnp
push
pop
add
xchg
pushf
pop
cmps
inc
cmps
jmp
es
xchg
push
sbb
(bad)
fstp
jp
jno
adc
movs
sub
ret
mov
popf
push
and
aas
push
jp
push
lahf
mov
or
scas
(bad)
mov
add
lds
es
dec
xchg
mov
xor
in
aaa
mov
dec
aad
cmp
fimul
mov
push
xor
and
or
mov
hlt
rcl
sbb
xchg
lahf
(bad)
pop
adc
or
mov
push
(bad)
cli
xlat
mov
movs
scas
inc
scas
or
inc
mov
popa
xor
push
stc
aas
das
lods
xchg
repz
cli
mov
imul
xor
inc
jp
or
pop
imul
lods
jno
in
mov
enter
les
xchg
out
mov
pop
imul
hlt
jge
push
out
adc
pop
addr16
cmp
adc
mov
test
cdq
sbb
mov
out
fbstp
mov
mov
sub
add
out
loope
call
add
arpl
cmp
sub
inc
dec
pop
out
fs
je
sar
fild
pop
and
or
sbb
xchg
or
aam
mov
mov
pop
(bad)
int3
lahf
and
xchg
clc
jne
mov
int
mov
sbb
imul
jb
out
cmps
js
fdivr
(bad)
repnz
add
cmps
sub
cli
mov
imul
push
popf
or
fist
jnp
call
loop
shl
or
iret
xor
es
inc
mov
pop
push
jl
inc
jmp
adc
loop
imul
pop
dec
cwde
scas
fstp
sbb
cli
cld
arpl
es
scas
test
imul
dec
test
and
mov
inc
ja
stc
inc
retf
and
cmp
inc
je
aaa
arpl
cmp
push
(bad)
fild
xchg
push
dec
mov
aad
scas
scas
mov
test
or
jae
jecxz
fcomp
ror
cmp
push
and
mov
out
mov
stc
jmp
pop
jl
cmps
imul
scas
pusha
mov
adc
stos
loopne
int
and
std
cdq
sbb
out
lods
imul
daa
loopne
adc
inc
lods
or
dec
add
dec
pop
cmp
xchg
push
pusha
repz
pop
sar
jno
sti
mov
mov
pop
inc
sbb
outs
fst
pop
scas
loopne
leave
sbb
(bad)
shl
es
mov
push
hlt
repnz
xor
sti
add
add
les
ror
lods
aad
jg
sbb
fld
popf
adc
imul
or
add
enter
xor
xor
imul
xor
shr
popa
int
cmp
xor
cld
push
dec
adc
xor
dec
cmp
repnz
mov
push
fld
popf
scas
test
mov
daa
scas
mov
push
jmp
mov
pop
sub
xchg
add
cmp
or
sub
lahf
ret
inc
test
mov
sbb
dec
imul
xor
jbe
mov
dec
push
std
lea
or
pop
ins
push
popf
outs
push
cmp
pop
push
shr
stc
in
imul
sub
cmp
cmp
mov
fistp
lea
jnp
rcl
repz
jne
js
dec
jl
sub
cmps
inc
repnz
les
aad
je
imul
shl
push
dec
jle
cvtps2pd
mov
stos
and
movs
cmp
sub
mov
jno
popa
cmp
in
jo
mov
das
cmp
mov
push
or
adc
pusha
xor
imul
ret
push
pop
push
cwde
ins
test
cld
call
push
cmp
out
sub
inc
(bad)
shl
add
jg
ret
inc
mov
and
data16
xchg
sub
push
out
dec
enter
inc
inc
adc
(bad)
sub
add
cmp
dec
mov
lock
es
fisubr
push
jmp
xor
arpl
fisttp
cmc
repz
outs
mov
sbb
and
loopne
scas
xor
fwait
jnp
cmp
xchg
std
push
adc
mov
jmp
mov
xor
cmp
add
js
mov
pop
fwait
cmp
jmp
daa
cmps
shl
rcl
push
or
imul
mov
pop
jbe
or
cld
xor
inc
mov
add
inc
push
mov
lds
sub
(bad)
mov
mov
in
stos
mov
xor
out
dec
dec
mov
hlt
popa
jg
out
inc
rcl
nop
test
add
adc
loopne
les
push
jb
sub
cmp
adc
sub
and
push
mul
inc
les
lds
fdivr
inc
stos
aaa
hlt
cs
gs
add
pushf
test
xchg
jl
sbb
xor
mov
jmp
inc
dec
inc
cs
adc
xchg
dec
mov
clc
ret
cmps
push
aaa
sti
push
dec
fwait
movs
cmovg
dec
je
pop
fst
sub
dec
push
jg
out
sbb
aas
jb
sbb
enter
cli
test
add
into
jecxz
add
leave
and
outs
jl
and
pop
jge
test
pop
jo
into
js
dec
sub
je
push
sub
or
add
sbb
je
and
jns
mov
xchg
sbb
jg
je
mov
mov
loopne
loopne
mov
xchg
lea
lock
sub
sbb
cmp
ds
xchg
add
imul
jns
(bad)
outs
js
adc
sbb
into
push
sub
add
dec
jmp
and
cmps
repnz
xor
sub
pop
cmp
call
scas
dec
loope
add
mov
add
mov
retf
fst
mov
shl
aad
scas
icebp
call
sbb
push
xchg
aaa
add
in
mov
arpl
sub
movs
test
ds
sbb
adc
xor
push
sti
pusha
add
pop
nop
pop
fst
inc
mov
jecxz
mov
dec
aaa
out
cmp
(bad)
clc
add
push
aad
shl
ins
add
scas
rcr
jmp
fcom
xor
cs
push
bound
retf
fcomp
nop
adc
pusha
out
xor
pop
xor
mov
imul
cmps
jmp
or
xchg
fcom
xor
mov
repz
xor
sub
push
jle
cmp
cmp
das
inc
pop
mov
or
mov
inc
inc
out
(bad)
xor
xor
inc
mov
pushf
mov
fsubr
mov
call
ja
(bad)
fist
inc
push
push
std
lods
test
stos
aad
mov
push
cmps
sahf
mov
jl
adc
and
retf
dec
call
mov
ds
sub
jno
adc
repz
add
in
lds
lahf
sub
cli
clc
repnz
movs
in
lock
dec
mov
pop
mov
pop
add
pop
sbb
pop
inc
xchg
xor
shr
call
adc
fisttp
xchg
mov
mov
jns
lock
pop
bound
xchg
movs
xchg
pop
jl
dec
(bad)
enter
mov
xlat
call
xor
xchg
inc
int3
sub
mov
fcmovb
jmp
xor
ja
sub
imul
jg
fcmovb
inc
jb
mov
aam
in
or
xlat
xchg
xchg
sub
mov
mov
shl
loope
retf
or
push
pop
xchg
cmp
ret
in
sub
lods
fcom
sbb
mov
popf
daa
push
push
inc
mov
icebp
jo
in
es
inc
cmps
jmp
fstp
jb
adc
scas
mov
rcl
add
fnstcw
jl
push
pop
or
push
mov
leave
sti
fs
shl
mov
outs
aas
out
jmp
adc
daa
pop
xor
enter
xchg
mov
or
sbb
cdq
sub
imul
cmp
and
jbe
push
dec
adc
pop
inc
aad
jecxz
pop
ds
int
pop
loop
mov
sbb
push
jmp
jnp
fisub
stc
jns
mov
sar
push
int
mov
inc
jmp
jmp
nop
rcr
neg
add
push
jo
jnp
inc
fild
sbb
sbb
xor
icebp
js
jge
test
xlat
das
ficomp
(bad)
cmp
(bad)
seta
test
sub
sbb
pop
fs
sub
shl
jno
and
pop
jo
cli
pushf
shr
push
sbb
xor
xchg
int
pusha
aam
mov
inc
push
(bad)
out
outs
cmp
mov
out
aaa
mov
lock
inc
bnd
dec
jp
inc
stos
aad
push
lock
das
(bad)
(bad)
leave
sbb
mov
cli
and
int3
out
jbe
dec
and
mov
cmp
pusha
mov
jge
test
pop
and
sub
xor
fxch
jb
or
push
sbb
lds
into
pop
mov
lods
add
pushf
outs
xor
add
pop
mov
dec
out
jecxz
ins
es
pop
shl
xchg
outs
mov
inc
and
retf
mov
sti
sbb
xchg
retf
stos
pop
xlat
adc
adc
in
pop
int3
xchg
bnd
ficomp
out
lea
xchg
pop
dec
jge
inc
cmp
adc
push
jno
fwait
ret
daa
xchg
cdq
in
pop
ret
mov
mov
sar
repz
adc
fwait
lods
jae
mov
jmp
stc
xchg
leave
call
in
add
test
xor
push
mov
mov
sbb
mov
bound
iret
mov
push
aaa
adc
sbb
pop
push
sahf
loop
pop
pushf
loopne
fnstenv
xor
sbb
xor
data16
xchg
mov
push
enter
jns
dec
shl
rcl
push
jge
shr
popf
out
or
push
sti
ins
cmp
xchg
scas
retf
mov
div
mov
xor
mov
cwde
inc
inc
retf
fcomp
cmp
fisubr
sub
mov
mov
mov
out
mov
cmp
movups
pop
push
out
fdivr
inc
xchg
pop
jb
adc
(bad)
test
mov
je
test
loopne
sbb
push
rol
dec
addr16
dec
mov
ja
loopne
aad
fldenv
out
ror
cmp
lahf
bound
jl
dec
pop
rcl
mov
ja
popa
imul
retf
mov
push
pop
(bad)
jge
pop
mov
xor
xchg
retf
inc
sti
mov
push
or
or
sub
push
out
aaa
jae
or
cmc
sbb
(bad)
pushf
mov
or
jg
jns
xchg
mov
rcl
test
add
ret
cmp
loope
inc
ins
push
addr16
fs
cdq
pop
xor
add
nop
jle
(bad)
xchg
xor
mov
mov
(bad)
cmp
aas
mov
test
jmp
adc
add
xchg
inc
scas
sub
or
sar
add
push
push
mov
push
stos
jae
sub
movs
leave
imul
les
lahf
leave
mov
gs
push
jmp
lods
cli
and
xlat
fld
fidiv
lods
addr16
inc
mov
(bad)
mul
push
add
pop
cmp
test
(bad)
sbb
addr16
cmps
add
and
xchg
push
pop
loop
popa
scas
movs
and
in
pusha
lahf
adc
lods
xchg
cmps
cmp
mov
jg
popf
mov
push
mov
js
addr16
enter
dec
daa
xor
pop
sahf
fst
mov
mov
cwde
sbb
ret
adc
push
in
test
mov
jb
mov
dec
sti
cmp
or
add
sbb
or
imul
je
popa
sbb
je
sub
xchg
mov
push
mov
push
in
jno
push
dec
inc
lea
mov
mov
jecxz
sub
enter
dec
popf
push
cld
sub
add
push
jmp
ror
xlat
sahf
mov
or
push
into
lahf
mov
test
jbe
add
mov
les
pop
neg
addr16
or
mov
hlt
mov
add
int3
ins
int
xchg
scas
fstp
js
push
pusha
mov
cmps
mov
dec
jne
lock
cmp
nop
lods
dec
test
add
dec
jne
cli
call
sub
test
mov
adc
nop
cmp
ss
jle
imul
repnz
and
nop
dec
popa
movs
daa
cmp
xlat
pop
push
cmp
and
add
ss
and
imul
xor
bound
fwait
js
xlat
jo
mov
inc
rcl
mov
and
adc
in
inc
mov
popa
dec
and
leave
sbb
push
and
lock
imul
test
test
sub
es
lea
lahf
mov
and
push
push
pusha
xor
jp
push
xchg
movs
push
or
xchg
adc
xor
ins
push
jnp
cmp
fadd
in
xchg
add
(bad)
dec
pop
xchg
retf
neg
push
bound
(bad)
jbe
stc
mov
iret
sbb
inc
xor
ss
ins
mov
gs
and
xor
xchg
inc
ins
nop
add
stc
sbb
int3
or
xchg
xchg
aas
addr16
pop
push
jnp
mov
xor
and
xlat
or
mov
pop
mov
ja
test
lods
cmp
inc
or
fstenv
loope
jb
mov
call
ins
fistp
nop
mov
jmp
push
sub
mov
push
sub
pop
add
sti
(bad)
leave
pop
mov
sub
pop
inc
(bad)
inc
cli
sub
nop
repz
iret
mov
pusha
fimul
pop
mov
inc
enter
(bad)
clc
jg
and
mov
sub
int3
gs
in
div
sbb
in
pushf
or
pushf
xor
cmp
out
sbb
inc
fsub
jne
addr16
push
inc
push
das
mov
int
lods
arpl
scas
mov
pop
mov
fmul
push
lds
sub
dec
fldenv
das
add
call
sub
adc
out
push
fs
stos
mov
sbb
ficomp
(bad)
adc
sbb
cwde
popf
out
dec
cmp
fnstcw
add
push
adc
add
dec
call
retf
aam
(bad)
mov
in
cmps
(bad)
retf
lds
fsub
add
xchg
sahf
mov
lea
stos
push
mov
rcl
cmps
push
out
mov
lods
(bad)
stos
sub
sbb
in
repz
push
pop
xor
test
test
fwait
int3
or
jo
and
jo
or
call
sbb
leave
jo
sbb
xchg
cs
cld
ds
and
pop
in
dec
shl
sub
sub
jle
jle
adc
ins
pop
mov
int
lahf
scas
jg
jne
out
dec
xor
shl
retf
pop
not
into
mov
int3
or
xor
ror
or
sub
add
adc
jnp
cdq
jmp
aaa
cmp
adc
addr16
sub
inc
adc
movs
(bad)
mov
repz
dec
js
dec
loop
cli
or
inc
push
fs
and
pop
cld
sti
in
jp
loop
sbb
mov
cli
sar
daa
movs
and
push
jle
mov
and
test
aas
or
jge
add
lods
fwait
test
rol
stos
data16
shr
adc
aas
pushf
pop
adc
mov
cld
mov
mov
pop
mov
jae
sub
add
jne
enter
add
inc
inc
iret
jmp
sub
mov
js
call
pop
jo
mov
cmc
or
sub
pusha
icebp
sbb
mov
std
sbb
cmc
sub
or
sbb
sbb
cmps
push
pop
cmp
stos
sahf
xchg
call
test
rcl
mov
pop
or
test
sbb
push
or
push
in
movs
inc
lods
sbb
stos
shl
adc
jge
sbb
add
dec
sub
int
(bad)
push
inc
out
xor
add
(bad)
cmp
pop
mov
or
sub
aas
cs
adc
adc
outs
jno
cmp
cmp
mov
inc
pop
xchg
int3
jle
sbb
mov
scas
cli
aaa
idiv
aaa
adc
aam
bound
jno
cli
mov
and
mov
addr16
or
popf
in
xchg
mov
jnp
bound
sahf
jae
sbb
or
inc
dec
cmp
test
(bad)
mov
in
neg
xchg
outs
xchg
and
push
lock
out
and
dec
in
imul
inc
dec
mov
cmp
cwde
popa
xchg
sbb
inc
mov
and
aad
sub
dec
ja
pushf
loopne
lods
jecxz
(bad)
jecxz
pop
ins
xchg
jl
xchg
dec
rol
fld
sub
mov
dec
adc
push
rol
mov
and
into
xchg
cdq
push
push
sub
and
stos
push
lods
push
cmp
cwde
scas
sub
xchg
jns
jp
add
sar
movs
sar
lahf
inc
int
nop
adc
mov
xchg
out
lea
xchg
jmp
jp
rcr
into
xor
inc
test
int3
mov
jb
cmp
cmp
cmps
push
mov
mov
push
(bad)
movsx
adc
idiv
mov
jns
outs
movs
les
imul
popa
jmp
repnz
adc
adc
mov
mov
aad
das
hlt
inc
ret
lods
add
jmp
in
fiadd
or
push
js
outs
adc
jbe
mov
sub
push
inc
dec
pop
push
ret
xchg
sbb
test
dec
cmp
pop
or
fwait
mov
cmp
ds
jmp
add
inc
out
mov
pop
aaa
mov
ror
or
mov
jmp
mov
and
mov
pop
lods
xchg
loop
jbe
mov
sub
adc
sbb
movs
mov
in
dec
mov
push
fdivp
xchg
push
aad
or
retf
inc
pop
mov
(bad)
aas
mov
add
in
das
push
sub
sti
movs
jbe
add
pop
in
inc
lods
jbe
mov
xor
lea
lahf
adc
jo
push
add
out
lods
sar
jmp
add
(bad)
cld
loopne
xchg
or
sbb
test
cmp
ja
test
mov
pop
sbb
enter
lock
fadd
sbb
(bad)
int3
jno
jge
xor
das
mov
inc
data16
cmp
sub
fnstenv
dec
mov
(bad)
pop
adc
pop
pop
out
scas
mov
sbb
and
xchg
inc
cdq
inc
xchg
cmp
xchg
cmps
xor
dec
das
and
stos
jge
adc
xchg
xchg
adc
mov
js
xchg
ficom
retf
adc
cdq
imul
push
loope
ret
rcr
or
ss
fldcw
psubsw
rcr
mov
ds
push
in
push
test
test
inc
sbb
cmp
sbb
aam
and
(bad)
adc
jmp
add
jge
jnp
jnp
pop
aas
xor
mov
jb
mov
xor
xor
sbb
das
add
mov
or
icebp
add
cmp
or
mov
cmp
mov
pop
movs
(bad)
imul
jo
sub
rol
inc
mul
stos
jl
push
(bad)
(bad)
fwait
dec
push
push
ret
sbb
dec
in
stos
mov
xchg
call
cwde
sub
push
cld
rcr
imul
inc
mov
ret
add
dec
add
xor
xacquire
jle
pop
lods
mov
ret
ror
loop
ins
call
xor
adc
mov
(bad)
(bad)
int
push
repnz
inc
fld
mov
and
sub
xor
enter
or
out
scas
add
iret
cmp
gs
or
or
mov
sbb
lods
sub
inc
add
cmp
mov
cmp
cmp
pop
inc
cmovne
lock
xchg
arpl
jp
xor
retf
sbb
sbb
rcl
pop
xchg
gs
mov
inc
out
cdq
push
adc
loopne
icebp
std
fldcw
(bad)
repnz
test
jl
push
inc
aas
mov
or
add
in
out
call
jp
clc
or
imul
jb
pop
popa
or
jno
retf
outs
and
dec
lods
inc
xchg
(bad)
call
add
enter
add
test
lods
sbb
or
jbe
inc
sub
or
sti
cs
jmp
or
cmp
cmps
fcmovne
add
sbb
add
pop
imul
sahf
clc
ret
pop
daa
push
lods
(bad)
xor
mov
xchg
movs
xchg
cmps
push
dec
faddp
scas
pop
std
lds
cmp
outs
les
or
jbe
mov
xchg
inc
call
pop
mov
ret
pop
es
out
lock
nop
mov
fwait
mov
xor
sub
leave
sub
adc
in
fwait
sbb
int3
int
mov
jge
loope
sbb
push
repz
call
enter
(bad)
retf
test
or
sbb
ror
cli
adc
mov
xchg
push
(bad)
(bad)
fsubr
adc
push
mov
push
mov
or
pop
ret
icebp
push
dec
test
ds
sahf
arpl
xor
in
bound
inc
cmp
adc
xor
imul
pop
xor
aas
push
cmc
mov
jge
and
mov
pop
mov
shr
mov
icebp
inc
sub
icebp
dec
xchg
std
and
mov
fs
(bad)
popf
xlat
call
call
enter
lods
call
inc
mov
add
jae
mov
jle
(bad)
sbb
aas
retf
mov
outs
gs
fs
addr16
in
jbe
mov
xchg
mov
jmp
jae
jno
cmps
fist
add
pop
hlt
mov
mov
or
sub
out
cdq
xchg
push
cmp
rcr
ficom
aam
push
xchg
mov
stos
dec
(bad)
adc
fstp
daa
pushf
inc
xor
cwde
push
out
xor
jle
add
dec
pushf
idiv
xchg
xor
sahf
(bad)
movs
inc
adc
mov
mov
call
aad
scas
xchg
call
daa
aaa
int3
int3
sub
add
fdivp
push
pop
adc
je
repnz
push
(bad)
jb
sub
or
adc
fwait
mov
jnp
in
in
mov
inc
pop
or
enter
jae
dec
mov
inc
jns
fstp
sub
call
mov
sub
and
ud0
add
dec
ja
popf
in
sar
dec
mov
dec
div
test
loope
iret
(bad)
clc
and
pop
sbb
xor
bound
hlt
ret
sub
and
inc
addr16
push
add
cmps
or
jb
pop
imul
pop
xor
add
pusha
shl
push
dec
pop
stos
adc
in
pop
cmp
sub
sub
call
inc
test
imul
js
pop
aas
stos
add
nop
bound
js
dec
sbb
inc
ror
mov
aad
test
add
aad
stos
adc
xchg
bound
(bad)
rcr
mov
jno
(bad)
pop
movs
push
xor
out
or
int3
ds
ds
(bad)
gs
dec
and
(bad)
and
cmps
mov
aad
lahf
fs
add
cli
xchg
jmp
imul
mov
lea
push
push
ins
mov
xor
daa
fnstcw
mov
retf
rcr
inc
xlat
fs
jle
inc
xor
mov
enter
ja
pop
lea
or
mov
dec
mov
lds
aad
addr16
hlt
pop
dec
pop
out
mov
sbb
push
ret
jns
imul
aam
das
cmc
mov
fdiv
stc
int3
jne
std
shr
push
enter
xchg
js
ror
xchg
jbe
es
add
dec
paddb
cmps
add
or
call
add
repnz
(bad)
dec
add
dec
outs
pushf
cdq
mov
test
cdq
mov
in
ja
call
jns
push
dec
cs
test
push
stos
pop
cwde
mov
fsub
scas
jae
push
inc
out
das
int
push
and
repnz
in
cmps
out
mov
imul
add
mov
mov
ds
xchg
mov
mov
xor
les
loop
ss
sbb
xchg
int
arpl
sbb
push
and
dec
adc
mov
jp
and
jge
in
or
mov
push
fs
cmc
jae
popa
jle
nop
ficom
les
cdq
repz
lock
xor
push
in
pop
repnz
outs
hlt
lea
mov
and
inc
xchg
shr
sti
popa
pop
inc
fidivr
imul
imul
arpl
repnz
cmp
ins
enter
xchg
cmc
sahf
inc
ror
cld
xchg
lds
imul
ret
jp
sub
ret
ins
ins
aas
stos
adc
fwait
ds
mov
jge
mov
inc
or
test
cmp
lea
jb
xchg
inc
shl
mov
lods
ret
ficomp
jecxz
iret
push
test
retf
sub
jl
rol
adc
sub
mov
mov
add
sbb
cmp
xchg
(bad)
cdq
pop
out
stos
in
jp
push
hlt
mov
xor
xchg
mov
cmp
add
or
mov
mov
sar
or
jecxz
(bad)
(bad)
sbb
neg
and
test
pmulhuw
bound
cmp
xor
inc
cld
mov
iret
neg
pop
int3
or
aas
mov
int3
in
cmp
cmp
add
test
in
in
iret
fimul
pop
push
xor
aas
(bad)
adc
adc
adc
xchg
pop
imul
dec
(bad)
mov
push
pop
clc
nop
inc
mov
cmp
pop
stc
(bad)
outs
mov
or
shl
adc
push
mov
mov
mov
loopne
or
fcomp
je
arpl
push
mov
sbb
ja
cld
(bad)
je
fisttp
jp
test
(bad)
mov
xor
jl
lahf
repnz
sub
jl
push
ja
daa
fild
icebp
mov
ja
test
xor
sub
inc
sbb
and
repnz
mov
outs
fdiv
jbe
gs
cmps
rol
sbb
test
aas
imul
or
cmp
mov
rcl
clc
inc
jo
fmulp
ss
add
sub
jae
daa
movs
mov
xchg
pop
int3
fldcw
mov
aas
jmp
mov
sbb
adc
cmp
mov
scas
adc
cmps
xor
out
bound
xchg
sti
mov
dec
xor
mov
and
jae
(bad)
ins
out
mov
ja
test
clc
hlt
lds
in
jp
jmp
add
push
pop
mov
call
jns
pushf
mov
mov
inc
pop
sbb
stc
packsswb
call
pop
inc
or
gs
sar
paddsw
sbb
cli
cdq
shr
add
mov
sahf
mov
sbb
fidiv
mov
cmp
les
push
sbb
pusha
out
test
sub
cli
aad
or
pusha
ins
sbb
pop
mov
dec
pop
int3
(bad)
adc
lods
ins
(bad)
sbb
xor
movs
xor
push
pop
repz
cdq
sahf
sub
mov
fcomp
inc
xchg
add
push
and
aam
mov
shl
and
test
nop
cmc
call
cmps
mov
(bad)
es
(bad)
sub
aas
cmc
xor
inc
inc
(bad)
xor
callw
int3
dec
ja
movs
shl
(bad)
pop
mov
sub
and
xchg
and
test
sbb
inc
mov
aaa
sti
repz
lods
in
dec
sahf
add
xor
outs
push
pop
sub
adc
xchg
scas
xchg
imul
push
pop
retf
fdivr
out
or
sti
iret
imul
pop
hlt
inc
aaa
xor
pop
outs
add
adc
cwde
xor
fs
add
loope
std
push
xchg
xchg
inc
dec
pop
sub
add
mov
stos
ret
xchg
rol
mov
lock
or
cmp
in
push
iret
and
fnstenv
ffreep
fbld
adc
mov
or
push
add
jo
xchg
ja
jmp
mov
add
aam
push
jecxz
clc
(bad)
mov
or
ins
xlat
add
xlat
fisttp
int
stos
dec
push
dec
inc
xchg
pushf
or
sbb
(bad)
jo
and
aaa
lods
and
jecxz
aas
out
ror
or
sub
dec
pop
outs
imul
sbb
xor
rol
xchg
mov
dec
inc
cld
das
mov
in
or
pop
(bad)
or
imul
aaa
ret
xlat
pop
mov
enter
movs
jns
mov
ror
rol
(bad)
mov
psubq
mov
popa
pop
jg
jecxz
cmp
movs
sti
repnz
jmp
xchg
stc
stos
outs
lods
mov
fadd
test
ss
push
enter
xchg
push
ds
sahf
popf
sub
jecxz
(bad)
xchg
push
daa
inc
adc
stos
sar
ins
ds
inc
push
or
pop
xor
cwde
jl
es
fs
add
pop
(bad)
loope
hlt
js
test
sub
rcl
inc
mov
adc
add
mov
jne
mov
jg
loop
jae
fdiv
mov
(bad)
push
cmp
and
xchg
rcr
call
mov
test
je
ds
lea
icebp
dec
push
mov
mov
mov
adc
test
cmp
xchg
data16
mov
rcr
xchg
loope
adc
push
and
shl
adc
push
out
cli
ss
out
test
sbb
mov
icebp
xchg
jge
pop
sbb
fdiv
mov
or
dec
mov
lahf
mov
mov
xor
or
jns
je
push
vphsubbw
or
jp
sbb
xchg
test
push
(bad)
retf
pop
lea
cmps
mov
mov
mov
and
adc
adc
sub
lods
mov
fwait
in
adc
jl
push
test
aas
(bad)
push
jecxz
push
test
retf
test
cmp
in
dec
add
inc
movs
mov
or
fwait
sub
cmp
mov
inc
inc
jmp
dec
push
jno
stc
mov
mov
lock
xchg
mov
out
shl
mov
cmp
cld
jmp
pushf
mov
xor
jl
mov
stos
cli
xchg
dec
or
rcr
repnz
fs
mov
popf
into
dec
ficom
out
mov
xchg
mov
outs
add
and
push
xlat
daa
(bad)
cmp
stos
ja
mov
cld
rol
xlat
xor
ss
ror
mov
push
sub
lods
sbb
nop
cmp
add
test
cmp
rol
mov
shl
push
fs
ret
scas
int
fadd
in
outs
sub
inc
cs
dec
push
in
iret
push
jae
les
mov
xor
popa
sub
(bad)
mov
and
shl
repz
out
dec
or
and
into
ins
pop
mov
out
and
popa
pop
sbb
scas
stc
push
stc
add
or
fwait
mov
std
jo
push
clc
add
and
push
test
mov
imul
xchg
and
arpl
and
mov
cdq
je
popa
push
pushf
lds
mov
jg
data16
out
lods
pop
sbb
cli
rcr
xchg
xor
add
les
sbb
aad
dec
or
add
jmp
movs
sub
in
inc
mov
mov
iret
lds
sub
mov
cmc
adc
(bad)
in
sbb
jle
mov
mov
(bad)
sub
dec
out
sahf
pop
inc
sbb
out
imul
repnz
mov
pop
add
add
test
test
test
push
cmp
mov
sub
aam
sub
bound
popf
sbb
stc
xor
les
xchg
in
pop
adc
push
retf
ds
movs
dec
je
cmp
int3
mov
pop
xor
inc
xchg
fidiv
cmp
or
pushf
dec
add
mov
jp
out
mov
pushf
push
repz
fs
pop
fld
cmp
sub
jmp
mov
or
ja
daa
pop
push
cmp
jno
pop
sbb
ins
frstor
push
sub
mov
lea
cli
sub
inc
lock
leave
rcr
or
neg
ss
mov
imul
jnp
loopne
mov
mov
aaa
dec
xchg
js
(bad)
xchg
and
or
ins
not
(bad)
in
push
xor
pop
jle
and
ret
call
push
call
sbb
pop
xchg
das
ret
cmp
enter
xchg
enter
in
fs
into
mov
mov
mov
mov
les
mov
jno
dec
dec
mov
sbb
add
repz
call
mov
xor
popa
mov
push
sub
in
out
rol
mov
in
loop
clc
js
add
dec
pop
mov
sub
or
jg
mov
cmp
je
mov
jne
out
iret
lods
sbb
aaa
scas
xor
sub
out
hlt
cmp
inc
pop
or
jmp
xchg
mov
sub
sar
jle
sub
inc
xchg
movs
aaa
and
and
or
xlat
stos
push
push
(bad)
cmp
xchg
or
jbe
sbb
xor
arpl
rol
mov
fnstcw
fwait
int
xchg
jo
popa
pusha
(bad)
push
cmp
stc
adc
inc
xchg
push
lock
add
outs
fs
aam
shl
push
in
(bad)
mov
(bad)
lods
add
pop
jns
addr16
stos
cmp
push
push
jbe
lea
mov
pop
mov
enter
pushf
ret
rcl
stos
and
(bad)
fwait
addr16
or
lea
push
arpl
and
jo
out
mov
inc
nop
push
push
mov
push
mov
jl
jmp
adc
inc
in
or
xchg
popf
sub
cmp
sahf
fs
out
lock
mov
fwait
scas
mov
xchg
push
pop
ins
in
pop
inc
xor
int3
std
adc
xor
imul
pop
push
(bad)
ss
push
enter
or
test
(bad)
jg
sbb
jns
data16
jp
mov
inc
sbb
jne
mov
fstp
test
ror
jmp
aam
js
shr
ror
adc
dec
cmp
imul
and
xchg
add
fisttp
test
aam
pushf
cmc
xor
push
and
retf
push
xor
add
ror
jo
into
popa
jo
xor
jbe
add
or
add
test
mov
ss
mov
loop
push
repnz
stos
daa
cmp
jmp
mov
sti
movs
arpl
sbb
cwde
sti
retf
add
xchg
loop
sbb
add
jbe
dec
mov
jne
hlt
fist
int
sub
and
test
lods
pop
cwde
and
cmps
push
adc
pop
sbb
inc
pcmpeqw
fistp
or
mov
out
bound
daa
push
pop
cwde
leave
sub
mov
loop
pop
mov
inc
ds
sbb
push
jne
das
lods
pop
add
adc
ret
lds
xor
jge
sahf
kmovw
xor
cld
or
mov
out
mov
repz
jae
test
mov
pop
ins
loop
sbb
mov
ds
ret
popf
xchg
stc
into
bound
push
xchg
sahf
int
inc
push
dec
mov
lods
add
inc
add
mul
call
mov
enter
mov
outs
sbb
int
xchg
cmp
ficomp
test
pop
mov
xor
or
or
jg
lahf
outs
lock
(bad)
pop
fisubr
push
sbb
sbb
and
fmul
sub
sub
and
lock
jns
jg
(bad)
lahf
pop
cmp
lock
mov
inc
clc
aaa
scas
mov
imul
leave
dec
sbb
fadd
jmp
lods
mov
dec
call
xchg
sub
int3
mov
imul
ds
dec
movs
mov
fwait
addr16
jne
push
cwde
jmp
mov
pop
mov
jle
dec
aas
imul
adc
inc
xchg
and
mov
or
push
mov
mov
push
jecxz
cs
scas
push
add
ins
dec
std
mov
cli
in
ds
dec
icebp
mov
fisubr
mov
xchg
jmp
pop
rcr
xor
xchg
scas
fst
mov
xor
retf
jge
(bad)
sbb
and
popf
fcomp
inc
jl
adc
jge
push
inc
cwde
fcomp
and
xor
scas
cmp
xor
sti
retf
les
mov
(bad)
inc
xor
cmp
pop
sar
(bad)
fnstcw
ins
mov
mov
arpl
inc
scas
test
ficom
aas
mov
cmp
rcr
sub
(bad)
jmp
loope
dec
push
les
or
pop
sbb
outs
clc
xchg
mov
es
sti
mov
jno
mov
cdq
aam
push
sahf
out
ficom
pop
daa
and
and
test
push
(bad)
xor
sar
ret
xchg
push
adc
shl
and
aam
add
(bad)
retf
lahf
sahf
aas
lods
xor
xchg
in
clc
pop
push
out
mov
shl
sub
or
rol
add
mov
into
push
imul
cmp
addr16
pop
movs
and
enter
test
push
and
add
cmp
add
outs
imul
add
jns
ror
cmp
daa
lods
jmp
ret
leave
pusha
xchg
push
stos
vprotb
shr
dec
fisub
add
mov
mov
inc
jmp
int
inc
(bad)
xchg
mov
je
jb
dec
xchg
pop
adc
pushf
or
mov
(bad)
xor
mov
or
repz
or
cld
outs
sti
cs
add
icebp
pop
std
mov
jmp
loopne
pop
mov
in
dec
fidivr
addr16
push
into
cmc
add
mov
cmp
out
push
jmp
jp
and
lods
in
push
sub
(bad)
adc
test
(bad)
mov
lods
push
xchg
inc
cmp
lea
add
inc
cdq
sbb
les
inc
faddp
jmp
adc
pop
add
test
and
(bad)
cmp
xor
add
adc
pop
push
or
call
rol
ss
mov
push
inc
sub
cwde
push
(bad)
push
pushf
xchg
ret
push
ins
cwde
xor
jmp
adc
fs
sub
xchg
cs
jge
or
mov
(bad)
sti
mov
imul
retf
mul
cmps
imul
jge
jge
in
not
idiv
mov
cmp
(bad)
and
iret
mov
and
add
mov
scas
inc
or
jmp
pop
mov
jo
adc
sbb
mul
rcr
les
jle
dec
adc
in
jae
mov
mov
cdq
push
xchg
xchg
push
imul
sbb
iret
dec
pop
jns
push
and
xchg
sahf
cmp
jnp
lock
push
and
aam
ret
inc
jle
mov
sbb
clc
mov
mov
(bad)
fadd
add
shl
icebp
nop
push
xchg
jge
xlat
rcr
in
jmp
xor
ror
push
push
cmp
mov
into
hlt
movs
clc
adc
dec
(bad)
sbb
arpl
mov
push
call
leave
ja
das
pop
shr
aam
popa
jo
push
(bad)
xor
cdq
test
sub
sar
loop
push
inc
pop
mov
clc
or
out
cdq
ja
es
jle
(bad)
(bad)
(bad)
mov
jno
mov
daa
pop
jmp
or
cmp
xor
int
adc
jmp
out
lock
cmp
mov
pop
dec
movs
sbb
mov
ret
mov
retf
sbb
add
adc
sub
leave
add
in
movs
cmp
cmp
les
jle
push
sbb
jg
cwde
sub
add
xchg
xor
xor
enter
fld
or
div
out
jb
movs
inc
add
xchg
imul
in
add
neg
xor
pop
nop
call
out
xchg
gs
out
cmp
sar
adc
retf
ja
fisubr
pop
rol
push
sub
pushf
fisub
pop
fwait
ror
pop
mov
sbb
sti
or
mov
cmp
test
cli
(bad)
pop
in
xchg
sub
dec
fadd
xchg
lahf
inc
pop
push
xor
outs
push
pushf
ins
ret
jmp
arpl
push
pusha
mov
inc
or
stos
push
in
dec
es
cmps
repnz
and
rol
data16
loope
(bad)
sar
or
scas
inc
or
fucomi
ja
mov
call
in
aaa
ret
mov
ficom
push
push
retf
mov
sbb
sbb
shl
xor
or
adc
pop
sbb
xor
mov
xchg
test
icebp
mov
and
inc
mov
je
loopne
je
imul
add
je
add
gs
mov
popf
clc
in
popf
movs
pop
in
and
out
cmp
mov
inc
pop
ret
or
and
test
fild
adc
sub
jp
popa
mov
add
rol
inc
pop
ss
pop
or
push
xchg
call
clc
dec
inc
adc
addr16
lods
or
push
sub
jp
jno
or
cmp
shl
xor
loopne
and
mov
inc
mov
test
jb
arpl
push
in
in
and
lods
stos
mov
arpl
dec
js
std
neg
add
in
mov
xlat
fild
cmp
mov
push
pop
mov
xor
sbb
add
push
fistp
pop
pop
sbb
popa
ins
fs
aad
xlat
adc
mov
xchg
or
shl
inc
xchg
add
out
fistp
nop
jmp
(bad)
cli
xor
cmp
ret
into
icebp
pop
retf
jmp
imul
movs
push
lds
cmp
sbb
imul
fstp
dec
iret
in
and
in
sub
loope
pop
mov
push
cmp
vcvtps2pd
inc
mov
adc
js
mov
or
mov
pusha
add
js
scas
sahf
dec
cmps
repz
imul
mov
push
nop
mov
mov
cmp
adc
sub
clc
inc
mov
sbb
rol
cmp
mov
pop
in
fs
inc
mov
(bad)
scas
bound
xor
out
xchg
sub
mov
pop
loopne
in
and
and
outs
les
sar
push
jne
je
jnp
test
jo
push
or
adc
sahf
mov
sub
repnz
(bad)
push
lds
xor
fwait
shr
dec
movs
or
jp
das
mov
fiadd
inc
inc
or
dec
jg
mov
jae
call
aas
mov
adc
mov
xchg
push
adc
and
sub
arpl
stos
mov
pop
fmul
mov
add
add
(bad)
mov
loope
dec
clc
push
add
inc
cmp
mov
jecxz
(bad)
scas
sub
loope
pushf
es
sbb
int3
in
dec
cld
sub
dec
in
faddp
retf
xor
mov
movs
or
cdq
mov
cld
mov
loop
fxch
jecxz
rcr
mov
xor
push
call
sbb
in
jns
jle
dec
xchg
xor
jne
sbb
xor
and
lods
retf
push
loopne
mov
inc
outs
xchg
imul
mov
popa
enter
or
scas
aaa
neg
xor
xchg
and
sub
mov
adc
sbb
cwde
mov
les
retf
inc
in
je
mov
mov
lea
imul
mov
sbb
add
jo
push
pop
repz
cmp
hlt
inc
adc
push
imul
lahf
fdivr
pop
fs
sub
fldcw
and
and
mov
and
mov
push
daa
sbb
in
loop
lods
or
mov
pop
inc
inc
adc
loop
js
es
add
xchg
sbb
popf
xchg
cmps
pop
pop
push
in
movs
test
xor
call
cmc
pop
shr
dec
mov
data16
pop
pushf
call
outs
bound
in
adc
addr16
js
dec
xchg
jle
scas
sbb
add
add
xchg
or
and
test
or
adc
sbb
mov
lds
pusha
mov
xlat
mul
test
mov
and
push
jmp
gs
dec
int
lock
dec
enter
push
jns
jno
mov
push
mov
pop
aam
inc
pushf
cmp
jne
(bad)
not
inc
and
or
loope
jmp
xor
ficom
or
iret
or
sub
cmp
loopne
ds
pushf
repz
mov
popf
std
mov
ja
mov
push
jl
mov
cmp
ins
or
int
je
fild
and
popf
pop
add
dec
aad
dec
popa
not
adc
inc
mov
mov
hlt
pop
nop
dec
jb
fldcw
bound
sub
int
xor
and
pop
dec
xchg
scas
int
jmp
add
scas
outs
in
and
xchg
xor
lods
call
fs
push
mov
loop
outs
sbb
mov
dec
in
stos
stos
test
xor
push
add
fadd
int3
shl
out
shr
sbb
cs
adc
out
and
dec
xchg
dec
loop
test
cs
push
push
les
adc
dec
lock
xor
not
xchg
rol
and
loop
mov
loop
cdq
movs
cmp
ret
cmp
test
jmp
cmp
pop
addr16
mul
xchg
or
dec
popa
sti
inc
jle
arpl
nop
loopne
aad
sub
inc
push
pop
(bad)
dec
push
inc
adc
imul
mov
xchg
mov
push
sub
and
gs
fsubr
outs
mov
cmps
loop
sbb
or
cmps
cli
mov
or
aad
or
mov
sbb
sbb
cmp
hlt
xchg
ret
sub
je
mov
pop
add
jle
jae
pop
retf
inc
cmp
out
arpl
lods
fistp
test
push
out
xchg
ja
les
mov
mov
push
xchg
mov
push
cmp
outs
push
mov
(bad)
out
sahf
fucomp
xchg
shl
xor
lea
lods
add
xor
mov
and
test
mov
ja
xchg
dec
popf
lahf
aaa
mov
jl
adc
push
xchg
xor
out
sub
or
xchg
ror
lds
ins
adc
mov
sub
ret
js
pop
cmp
or
call
fldenv
mov
neg
cmp
pop
clc
gs
(bad)
rcr
mov
add
outs
inc
push
push
fild
sub
cmp
mov
(bad)
(bad)
xchg
in
popa
mov
cli
cmc
jne
cld
xor
and
repz
movs
cmps
xchg
shr
imul
jecxz
aaa
pop
jl
cmp
mov
add
sti
(bad)
adc
and
cmp
mov
push
jbe
call
fild
fistp
xchg
cmp
nop
xor
jo
and
mov
mov
popa
jno
mov
outs
pop
repnz
mov
addr16
(bad)
loop
fwait
jmp
repz
cmp
cli
ins
cli
adc
cmp
retf
push
shr
stos
stc
ja
cmps
mov
ins
mov
mov
push
cmp
mov
ret
scas
mov
or
into
loope
lea
sar
cmps
dec
leave
cmp
pop
push
in
imul
adc
mov
cli
jnp
jae
ret
mov
popf
fidiv
and
sub
inc
(bad)
aad
jl
cmps
clc
and
mov
in
aad
dec
fwait
push
inc
or
jp
cmp
jnp
inc
movs
mov
scas
js
and
ins
bound
in
les
xchg
cmp
sahf
mov
dec
dec
push
imul
clc
in
xchg
in
stos
imul
or
mov
mov
mov
in
(bad)
pusha
daa
xchg
lahf
or
sbb
mov
pushf
addr16
pop
mov
out
ficom
ins
pop
ret
adc
jnp
xor
fadd
pop
dec
cmp
sbb
enter
sbb
popa
pop
push
jno
dec
sub
pop
push
les
addr16
adc
inc
aam
mov
mov
(bad)
shl
fld
push
push
pusha
and
dec
sub
push
xchg
mov
in
repnz
adc
mov
enter
jbe
dec
sbb
xchg
outs
int
jl
out
arpl
pop
in
shl
inc
cmp
in
mov
sti
push
cdq
dec
sub
jnp
add
adc
mov
int3
cwde
in
jnp
je
mov
fwait
inc
lock
jne
(bad)
clc
dec
vphsubbw
movs
pop
dec
sub
js
xchg
xchg
pop
dec
rcl
outs
dec
daa
mov
adc
push
les
loop
shl
stos
jae
dec
push
in
pop
adc
or
xchg
and
rol
jnp
xchg
or
add
jb
in
mov
pop
loope
jns
cmp
add
jge
sbb
fwait
test
fsubrp
pop
pop
and
aam
retf
in
jecxz
pop
shr
and
clc
mov
and
cmp
dec
xor
add
sbb
adc
movs
mov
pop
mov
out
ret
adc
dec
(bad)
stc
cld
into
sbb
sar
pop
call
mov
loopne
iret
adc
mov
adc
dec
push
fucom
xor
jno
fsubr
mov
lds
jp
iret
mov
push
loop
ds
mov
xchg
xchg
jbe
jp
cmp
mul
xchg
fmul
inc
push
leave
inc
in
shr
and
dec
(bad)
lods
mov
jmp
xchg
in
call
lds
mov
in
dec
(bad)
cld
jl
jmp
mov
cld
push
adc
sub
mov
dec
shr
or
cs
inc
mov
(bad)
out
aam
sub
xchg
sub
adc
and
jae
mov
dec
cmps
adc
cmp
xchg
xchg
gs
dec
hlt
out
out
pushf
xor
scas
mov
sub
sbb
nop
jg
in
add
popf
loope
mov
imul
pop
cmp
call
mov
adc
cmp
dec
sar
push
mov
xor
add
sub
inc
sbb
mov
lock
clc
mov
push
xchg
adc
add
inc
mov
ror
inc
pop
inc
retf
push
mov
(bad)
cli
inc
pop
jl
jmp
jmp
push
outs
xor
dec
ficom
jg
xlat
rcl
jnp
push
sbb
xchg
in
int3
dec
mov
sub
and
aam
repnz
leave
stos
stos
les
lds
stc
add
shl
imul
in
sti
jnp
mov
inc
cli
lods
jl
repnz
stc
stos
in
pop
(bad)
loope
cmp
cmc
stos
scas
jns
add
scas
cmp
mov
test
in
fcom
sbb
inc
sbb
or
pop
lea
mov
or
(bad)
fistp
jb
or
repz
fs
ins
sbb
add
push
adc
(bad)
scas
inc
ja
inc
cmp
sub
lods
addr16
aas
mov
mov
push
mov
pusha
xchg
adc
xchg
push
dec
xchg
arpl
retf
xor
psllq
out
push
fwait
jmp
lods
xor
push
fidivr
cld
jno
mov
mov
mov
(bad)
fist
js
or
inc
cs
mov
push
ret
jbe
xchg
imul
xlat
mov
pop
sbb
xchg
pusha
cmp
xchg
jecxz
mov
push
pop
mov
sub
into
adc
xchg
mov
xchg
dec
fld
icebp
les
pop
(bad)
pop
mov
lea
cs
es
cmp
add
add
pop
and
int
cwde
cdq
and
add
or
stos
mov
js
pop
retf
jle
adc
mov
fistp
popf
cmc
das
mov
xor
and
imul
jp
lock
mov
jo
repnz
pop
dec
sbb
mov
ins
jae
iret
mov
jmp
pcmpeqb
inc
iret
stc
jp
jl
out
sti
popa
pusha
imul
pop
aaa
add
ficomp
sub
imul
push
inc
dec
popaw
into
xor
dec
xor
lods
dec
sbb
mov
std
stos
scas
std
dec
sub
jecxz
inc
bound
out
mov
imul
addr16
enter
jne
lods
dec
push
lea
lock
cmps
stos
ret
xchg
fsub
dec
(bad)
pop
aaa
xchg
mov
js
xor
lea
xchg
or
pop
mov
and
xlat
fisubr
les
call
loopne
push
(bad)
mov
cs
int3
add
movs
pop
mov
lods
out
xchg
xchg
call
cmp
push
dec
pop
(bad)
scas
mov
push
cmp
jo
pop
mov
repz
sub
xor
sub
cdq
xchg
clc
push
jb
sbb
and
mov
mov
test
mov
jg
pop
push
mov
movs
adc
pop
jecxz
jmp
add
test
cdq
dec
xchg
mov
jnp
xor
sbb
(bad)
push
and
lods
outs
sbb
cmp
mov
sar
test
add
mov
mov
fstp
in
pop
sub
sahf
jnp
xchg
fidivr
icebp
and
icebp
push
adc
clc
mov
sbb
stc
leave
mov
push
push
cmp
xadd
jmp
sub
sub
retf
ins
jmp
mov
fcmovu
push
outs
lea
shr
rcr
xor
popf
ins
aad
icebp
pop
pop
or
sar
xchg
mov
dec
imul
mov
adc
shr
inc
into
ins
aam
jmp
addr16
jl
bswap
ja
leave
retf
shl
xchg
ret
repz
xlat
inc
jno
out
loop
ins
fs
pop
mov
dec
inc
mov
fisubr
out
inc
mov
fld
jg
not
movs
cmp
push
mov
sub
cmp
adc
clc
leave
jne
jae
ror
sub
or
xor
pop
lahf
outs
outs
xlat
cwde
dec
sbb
push
int
idiv
xor
cdq
xlat
in
(bad)
mov
add
jmp
sub
and
xchg
adc
dec
jmp
and
adc
out
js
popf
pop
sub
pop
int
iret
pminub
test
fst
fwait
mov
and
ror
mov
clc
jb
or
push
push
stos
retf
rcr
ret
fld
mov
xchg
jno
cld
test
mov
sub
int
mov
outs
push
xchg
xor
and
ret
mov
dec
jl
cmp
fs
sbb
mov
inc
dec
int
mov
ins
es
sbb
xchg
out
call
call
add
shr
in
scas
fist
or
jae
dec
in
daa
jns
or
sub
mov
jns
dec
add
mov
cmp
jmp
cwde
cld
rol
mov
inc
mov
inc
aam
sbb
add
xchg
out
rcl
into
sbb
lods
adc
pop
loop
or
test
in
lods
jle
cmp
jns
outs
ret
adc
inc
repz
popf
mov
dec
sub
jp
js
add
jbe
shl
lahf
jecxz
jno
ret
sub
daa
pop
inc
pop
mov
adc
ror
sub
int
sub
jo
aaa
mov
fs
pop
repz
sbb
pushf
bsf
and
and
or
in
sbb
dec
jl
mov
out
cmc
stos
test
pushf
fisubr
mov
dec
loopne
or
inc
mov
fidivr
stos
fdivp
iret
dec
cmp
jg
inc
cli
pop
stos
cld
mov
xor
fild
out
cmp
fwait
and
mov
retf
jmp
push
test
dec
mov
(bad)
imul
xchg
inc
dec
cmps
cs
in
icebp
adc
pop
fucom
int3
sub
loop
pop
xchg
sub
lods
xlat
or
sti
sbb
ret
jns
pusha
addr16
xor
fs
sub
dec
call
mov
jle
mov
movs
adc
or
adc
inc
jg
sti
call
(bad)
push
mov
push
sbb
xor
pop
shr
in
(bad)
cmp
mov
retf
mov
jecxz
js
mov
mov
jecxz
sub
cmp
or
es
xor
cmp
ret
mov
hlt
into
in
in
outs
xor
xchg
fistp
push
into
call
scas
fs
ficom
(bad)
mov
pop
loope
retf
retf
gs
dec
cs
adc
rcr
jmp
push
adc
fcmovbe
test
xchg
mov
(bad)
retf
jl
mov
inc
mov
xchg
aad
cwde
jp
neg
in
or
dec
mov
mov
or
aaa
lea
sahf
dec
(bad)
mov
inc
adc
fs
ja
mov
xchg
push
pop
into
xchg
rcr
ins
sub
jno
jbe
sub
imul
int
pop
lods
cmc
xor
add
fcomp
out
mov
pop
cwde
adc
js
pop
dec
cdq
mov
(bad)
push
(bad)
int3
stos
jmp
adc
or
test
les
push
dec
mov
hlt
mov
mov
aaa
fidivr
pop
fxch
pushf
(bad)
pop
xchg
(bad)
jmp
movs
repnz
adc
jno
loop
retf
push
icebp
push
cmp
xchg
out
jnp
out
shr
cmps
adc
(bad)
cmps
xor
jb
fwait
xchg
mov
repnz
push
aad
popa
out
pop
push
shr
pop
cdq
cli
pop
push
pop
pop
pop
and
movs
test
ins
cli
arpl
dec
jecxz
push
xor
add
add
into
mov
pop
jnp
dec
ins
add
shl
xor
call
sar
sub
jmp
int
les
js
pop
imul
out
les
rcl
push
xor
and
or
cmc
fidiv
repnz
ror
int
add
or
loopne
cli
fbld
movs
sbb
je
cdq
cmp
ins
mov
arpl
clc
movs
pop
jmp
sahf
mov
loope
nop
mov
in
or
cld
test
mov
test
loop
adc
add
pop
fs
cmp
sub
push
add
daa
mov
xchg
sahf
imul
add
ss
mov
xor
push
mov
call
daa
call
imul
and
ret
xchg
and
inc
sbb
push
pop
in
call
in
pop
dec
lea
xchg
enter
push
aad
xor
jmp
shr
in
xlat
jecxz
jae
sbb
pop
fist
xchg
(bad)
sti
retf
mov
jmp
repnz
sbb
dec
jbe
jae
mov
push
lock
xor
xor
dec
jmp
mov
fsubr
xlat
repnz
repz
mov
pop
sbb
add
jmp
ret
lahf
and
not
mov
aad
inc
sbb
loop
jo
repz
fisttp
cmp
stos
imul
bound
sbb
or
xchg
push
ins
pusha
mov
pop
dec
aam
jns
(bad)
(bad)
xor
(bad)
or
cld
aaa
int
xchg
popf
push
gs
mov
inc
imul
xlat
dec
mov
push
xor
cmp
adc
xchg
pop
push
xlat
pop
cld
push
pop
inc
inc
rcl
jg
nop
jecxz
adc
sbb
adc
xchg
add
mov
fwait
daa
or
int3
sbb
inc
and
pusha
adc
movd
jne
ins
adc
cmp
jmp
adc
movs
mov
leave
xor
cmp
dec
pop
shl
xchg
fstp
add
pop
mov
inc
mov
cs
push
sbb
xchg
and
mov
mov
and
repz
outs
push
fnstenv
mov
add
xchg
mov
jns
stos
push
push
mov
sbb
loopne
pop
adc
and
aas
jge
popa
or
gs
shl
push
frstor
jge
gs
outs
fwait
push
out
gs
mov
and
les
test
jmp
std
adc
sub
mov
shl
xor
nop
xor
sar
lds
retf
xorps
or
call
inc
js
or
or
imul
push
pusha
fist
scas
xor
lods
imul
cli
loop
stos
popa
movs
jg
sub
cmp
cvttps2pi
jmp
test
inc
mov
sbb
mov
mov
pusha
sbb
push
cli
dec
fsubp
int3
dec
jg
das
add
(bad)
xor
xor
test
nop
dec
ja
and
adc
cwde
push
rcr
aam
and
es
clc
add
cs
retf
into
(bad)
sub
or
push
int3
ja
push
pop
mov
xor
add
adc
out
xchg
xchg
in
in
xor
mov
mov
sbb
mov
sbb
xchg
xor
clc
sub
pop
mov
adc
mov
fiadd
in
fiadd
and
xor
sbb
popa
es
jmp
movs
pushf
jg
call
and
cmp
cmp
(bad)
jge
cmp
xor
arpl
sub
ret
fcmovnu
scas
out
ret
push
or
pushf
mov
jno
add
mov
dec
xchg
or
mov
xor
sbb
mov
(bad)
ins
jnp
fmul
mov
outs
test
xor
imul
inc
rol
cmc
scas
stos
mov
fldenv
mov
pop
sub
and
sub
mov
setg
test
mov
lods
iret
mov
sbb
cmp
aaa
inc
out
or
lock
sub
add
js
mov
cs
js
push
mov
test
or
shl
jo
xor
mov
ret
cmps
dec
call
mov
movs
iret
xor
int3
dec
push
inc
dec
mov
addr16
es
jae
sbb
ds
das
scas
test
hlt
push
popf
(bad)
(bad)
fdiv
mov
pop
es
aas
or
std
daa
stos
pop
scas
test
(bad)
call
stos
fwait
bound
dec
cld
pop
popa
hlt
mov
or
cmps
hlt
mov
sub
xchg
jo
addr16
pmullw
dec
ret
dec
loope
pop
das
inc
and
xchg
rcl
or
scas
mov
inc
sub
fistp
movs
stos
imul
pop
push
pmullw
shl
(bad)
mov
icebp
retf
sbb
push
les
xchg
outs
sub
xor
inc
lahf
ficom
dec
clc
add
jl
inc
or
imul
mov
jb
fstp
iret
aas
sbb
cwde
adc
ins
hlt
lock
xor
fstp
push
adc
lahf
xchg
out
int
lock
rcl
jg
daa
jbe
out
pop
mov
scas
xor
pop
inc
cli
jmp
push
pop
(bad)
data16
push
jg
sbb
aaa
div
sub
std
jmp
lahf
popf
repz
lahf
mov
ss
popa
aam
xchg
repz
ret
clc
xchg
xor
or
les
dec
lods
or
retf
inc
cmp
popa
jle
scas
test
xchg
push
iret
mov
(bad)
dec
(bad)
mov
jp
jo
pop
ja
fcmovb
fsub
mov
fst
or
pop
retf
inc
test
and
push
loopne
(bad)
lds
push
pop
jns
xor
pop
sti
addr16
js
pop
mov
mov
push
lds
or
cmps
dec
mov
popa
sub
int
mov
xchg
jb
ret
sub
jmp
push
add
js
xchg
xchg
loop
sahf
or
sbb
pop
push
movs
out
push
data16
jne
adc
inc
fisub
shl
mov
call
dec
ror
aad
mov
popf
xchg
or
lock
cmp
rcr
ja
(bad)
aas
enter
outs
jle
pushf
dec
xchg
test
and
mov
sbb
mov
rcl
stos
test
sub
repnz
fs
into
push
mov
dec
leave
pop
aaa
call
sub
dec
lods
std
mov
(bad)
aas
inc
daa
dec
dec
dec
xchg
dec
int3
xchg
dec
scas
sbb
fs
aaa
dec
pusha
xor
fcomp
sti
inc
pushf
cmp
pop
das
pop
push
push
jmp
add
shl
dec
mov
push
in
push
pusha
adc
mov
fbld
pop
jae
inc
inc
mov
push
xchg
push
call
les
inc
xchg
mov
cmp
pop
push
jmp
xchg
xchg
dec
int3
xor
sbb
outs
mov
imul
sub
or
cdq
fwait
stc
xor
pop
stos
and
dec
cmp
aas
test
scas
push
rcl
ins
retf
int
inc
cwde
adc
loop
dec
xchg
(bad)
or
nop
adc
fidiv
cmp
ss
push
lods
in
leave
lahf
test
in
enter
or
sbb
inc
cs
ss
pop
push
jnp
or
daa
mov
ins
das
and
movups
xchg
mov
sub
js
jmp
xchg
xchg
dec
aaa
pushf
imul
leave
das
xor
ins
mov
mov
bound
inc
or
jbe
fst
loop
fimul
addr16
out
fcmovnbe
(bad)
sti
mov
push
push
call
daa
mov
inc
and
inc
inc
cwde
dec
(bad)
sbb
pusha
fst
movs
fbld
mov
(bad)
mov
(bad)
jp
or
sub
mov
rcl
sub
lahf
js
xchg
sbb
loope
repz
pop
pop
clc
fdiv
cwde
jb
js
push
add
outs
inc
fnstenv
mov
jns
lods
inc
aad
push
pusha
mov
mov
and
sbb
and
imul
push
push
xlat
(bad)
cmp
jnp
xor
pop
call
outs
cld
or
in
mov
inc
dec
mov
mov
nop
(bad)
in
mov
add
cld
fsubr
jl
adc
inc
lods
aad
sar
mov
adc
repz
adc
cmc
ins
mov
out
rcr
pop
iret
jmp
or
daa
repz
adc
call
or
cli
icebp
cmp
call
add
sbb
je
and
inc
push
push
cmp
push
mov
push
mov
pop
movs
cli
int
xor
iret
xchg
enter
sti
in
or
push
push
push
mov
mov
inc
stc
xchg
pop
jae
stc
mov
inc
lea
mov
push
mov
ss
adc
add
addr16
pop
es
popf
neg
cmp
ja
adc
idiv
jmp
push
and
add
je
das
idiv
push
ss
xchg
enter
pop
jg
dec
hlt
sbb
cmp
mov
addr16
popa
scas
fist
cmp
mov
out
int3
sbb
fadd
xchg
stos
out
movs
sbb
push
mov
inc
jb
add
jb
loopne
jp
mov
lea
or
or
pop
add
in
and
inc
mov
cli
(bad)
(bad)
jg
sub
mov
and
sub
mov
push
sbb
and
aad
fisttp
mov
xchg
popa
cmp
mov
not
xor
or
push
mov
jae
and
sub
push
lock
xor
mov
xor
pop
jns
mov
dec
popf
test
das
aaa
push
rcr
adc
lods
mov
outs
cmp
iret
fild
mov
fld
add
movq
addr16
sbb
and
js
or
cmc
adc
hlt
mov
es
xor
jmp
fsubr
xlat
mov
jae
(bad)
jp
jecxz
mov
adc
xchg
or
sub
shl
xor
gs
int
mov
mov
(bad)
call
loop
enter
or
aam
cli
add
pop
in
add
jne
ds
cmps
or
jmp
rcl
aam
movs
ins
mov
leave
jg
cmp
js
rcr
sbb
pusha
pop
mov
out
(bad)
test
pop
push
xor
xchg
faddp
fdiv
or
inc
mov
(bad)
jecxz
or
cmp
sbb
aas
mov
sbb
xor
mov
outs
jecxz
aaa
test
cmp
daa
sbb
bound
int3
mov
jbe
je
mov
loope
sub
push
and
inc
jns
int
call
outs
and
mov
sub
fmul
movs
neg
loopne
lea
sub
jae
mov
aas
pop
ja
mov
inc
mov
jge
fadd
mov
xchg
sub
jbe
xchg
movs
mov
and
adc
out
xor
fidiv
out
mov
jno
je
push
std
mov
cmp
mov
rcl
(bad)
mov
mov
push
mov
int3
pop
and
adc
adc
dec
pushf
adc
shl
retf
xor
iret
pop
adc
pop
iret
mov
loopne
lea
mov
mov
lar
gs
iret
and
(bad)
add
inc
xor
fistp
mov
pushf
stos
xor
hlt
xor
cbw
iret
xchg
mov
xor
sar
in
imul
dec
test
ds
lods
dec
xor
pop
and
ds
pusha
cmp
mov
fdivr
mov
cmp
jmp
cmp
jge
and
jg
jecxz
push
xchg
jne
out
cs
add
mov
mov
xchg
pop
inc
int3
outs
imul
js
fisub
ins
jno
pop
jmp
popf
or
into
inc
push
pusha
mov
and
add
je
dec
mov
add
sbb
rol
dec
imul
fnsave
xor
pop
out
enter
pushf
fs
lea
xchg
aas
mov
jae
in
sub
test
inc
dec
shr
(bad)
mov
inc
rcl
mov
cmps
mov
jmp
jmp
add
test
lahf
cmc
jecxz
fild
push
xor
mov
xchg
fcomp
and
push
cmp
outs
les
jae
push
dec
dec
inc
sahf
mov
std
mov
cmps
push
sbb
adc
inc
jmp
pop
loop
sbb
sbb
ins
push
shl
js
mov
or
jg
inc
dec
jne
sub
into
and
mul
xchg
lock
jmp
mov
cli
test
fbstp
cmp
sbb
jne
clc
mov
aaa
dec
sub
xor
outs
adc
push
xor
cwde
movs
test
enter
shl
jmp
mov
aaa
out
xchg
dec
mov
jnp
adc
pop
popa
outs
jne
adc
and
mov
add
cmps
(bad)
xor
mov
xchg
inc
ja
lahf
aaa
sbb
adc
outs
out
arpl
xchg
in
dec
fs
ja
enter
dec
or
mov
adc
test
dec
sti
data16
adc
imul
xor
add
(bad)
adc
in
jnp
pop
out
push
jnp
xchg
ror
jle
mov
pop
outs
pop
fs
sub
data16
add
jge
fbstp
dec
jne
mov
fdivr
push
repnz
or
mov
and
ret
test
shr
fsub
xor
aaa
in
addr16
fild
rol
sbb
xor
in
and
ficom
xor
aam
inc
jmp
adc
into
popf
sbb
aas
data16
dec
sbb
add
xor
je
arpl
pop
cs
rep
jp
xor
loope
lods
sub
fwait
mov
sub
(bad)
mov
jmp
out
sbb
xlat
lahf
mov
fdivr
mov
jle
popf
(bad)
jno
shr
(bad)
jo
sbb
cs
add
sub
test
loopne
ficom
scas
xor
push
dec
cmc
mov
aas
int3
popa
xor
pop
inc
sar
sbb
pop
in
outs
scas
lods
mov
add
push
outs
(bad)
push
push
dec
sbb
(bad)
shl
or
adc
mov
pop
cs
jo
std
sub
cmp
adc
(bad)
jno
xchg
lahf
call
movs
fisttp
sub
and
idiv
rcl
add
popf
out
push
lods
shl
dec
cmp
outs
dec
xor
mov
push
cmc
jae
cmp
mov
and
xchg
mov
inc
bound
or
test
mov
pop
pmaxsw
xchg
into
push
out
pop
pop
cmp
sub
mov
sahf
(bad)
retf
ins
inc
or
lock
pop
adc
sub
lds
push
push
(bad)
fbld
(bad)
popf
fadd
push
mov
or
mov
sbb
aad
push
test
xchg
neg
push
mov
addr16
cmp
mov
addr16
xchg
jns
add
sbb
sub
sub
std
cs
xlat
inc
and
push
clc
lods
ret
call
mov
cmp
mov
xor
mov
call
test
(bad)
fidiv
mov
leave
cld
popa
cmp
push
mov
bound
aam
push
out
ss
xor
jne
xchg
adc
imul
(bad)
neg
pop
push
dec
add
iret
push
sbb
mov
in
cmp
jl
leave
adc
pop
cmp
pop
cli
jo
mov
mov
test
in
xchg
imul
test
ja
clc
test
outs
fcmovne
xchg
mov
fmulp
dec
repnz
das
jae
cmp
jbe
pop
fdiv
ror
or
sub
push
and
hlt
dec
fwait
lahf
dec
add
dec
xor
out
scas
dec
lock
mov
pop
cmp
test
cmp
jge
fldenv
rcr
test
(bad)
mov
jb
dec
les
mov
shr
(bad)
adc
jg
inc
mov
mov
jae
push
pop
cmp
adc
arpl
cmps
jmp
bound
(bad)
sub
cmps
mov
outs
push
lahf
jle
data16
or
mov
les
mov
cwde
pop
inc
aam
icebp
cmp
scas
sub
xchg
xor
lods
pop
cld
outs
push
enter
jbe
add
inc
mov
retf
pop
or
add
add
push
pop
inc
cmp
dec
cdq
jo
(bad)
in
js
sahf
ficomp
ds
xchg
sar
mov
sbb
outs
pop
sbb
mov
test
loope
push
mov
dec
stc
mov
sub
loopne
cwde
xor
mov
cwde
gs
adc
adc
dec
mov
pop
retf
addr16
rcl
xchg
jg
cmp
lea
jmp
inc
push
cmp
stos
xchg
xor
aad
out
lahf
adc
in
cmp
or
and
mov
imul
popa
sub
or
mov
sub
out
fdivr
mov
xchg
fistp
or
sub
xchg
or
fidivr
mov
mov
nop
inc
aaa
push
sahf
daa
or
dec
sahf
xchg
inc
movs
out
mov
jp
mov
arpl
add
and
mov
dec
and
dec
sub
in
test
add
(bad)
mov
or
aad
add
test
push
mov
push
pusha
pop
ss
movs
test
push
cmc
lds
xchg
and
or
jle
clc
std
xchg
lock
ror
mov
stos
mov
and
xchg
mov
xchg
daa
push
fsub
dec
scas
mov
lahf
sub
popa
ins
mov
mov
push
(bad)
cmp
xor
mov
fidivr
mov
jcxz
push
out
sbb
je
mov
cmp
sub
adc
das
nop
jbe
loope
mov
enter
pop
imul
mov
push
push
cmp
xlat
xchg
mov
mov
stos
ja
(bad)
das
jg
into
pop
int
das
jmp
push
or
inc
stos
push
cmp
jnp
into
shr
sbb
cli
and
push
movs
jno
or
xor
dec
aad
mov
lock
rcl
fst
das
faddp
jns
dec
mov
rcl
push
cld
add
rcr
rol
icebp
push
push
push
push
mov
xor
lods
es
ja
pop
cmp
das
stos
mov
ja
or
stos
jmp
push
adc
lahf
(bad)
std
jmp
out
push
sub
es
push
sahf
enter
mov
movs
sbb
mov
xlat
nop
mov
out
mov
icebp
jmp
jnp
inc
push
and
cmp
cld
fadd
js
pop
mov
imul
xchg
je
(bad)
dec
cli
popa
push
lock
mov
into
retf
sti
xor
jmp
cdq
xor
jae
ret
imul
cmp
dec
test
pop
ins
outs
data16
add
mov
mov
popf
xchg
cdq
adc
int3
mov
sub
leave
call
adc
in
fisub
test
jb
ds
rol
dec
bound
jnp
dec
sahf
dec
push
dec
das
div
inc
or
ret
scas
mov
js
xchg
cdq
cmp
ins
loope
dec
dec
add
inc
mov
or
test
gs
and
scas
addr16
mov
jp
and
scas
mov
lods
lods
test
lock
pop
jbe
ins
inc
mov
xchg
mov
push
popa
inc
adc
adc
in
shl
std
ficomp
xchg
outs
push
ficomp
loope
add
dec
lock
div
enter
ret
mov
js
push
cdq
ja
not
fcom
sti
imul
out
push
sbb
mov
xchg
mov
cmc
cmp
xchg
mov
sub
daa
mov
sub
cmc
dec
xchg
inc
mov
add
or
cwde
jbe
test
iret
(bad)
push
sub
sbb
mov
loop
lahf
rol
xchg
stos
nop
outs
push
mov
in
movs
cli
mov
out
pop
mov
push
mov
inc
push
dec
ins
icebp
mov
push
add
mov
test
mov
cmc
dec
ja
(bad)
daa
lds
test
or
jae
ret
repnz
push
aad
pop
mov
dec
shr
lock
push
(bad)
movs
test
lahf
and
adc
push
or
or
cmc
fucomip
(bad)
movs
hlt
jmp
push
lahf
sub
pop
retf
mov
adc
pop
fdiv
dec
jb
test
add
jnp
mov
mov
ja
hlt
and
je
jmp
cmp
mov
ds
pop
dec
pushf
jo
sbb
clc
xlat
push
dec
and
inc
lods
fadd
add
inc
jp
(bad)
cmp
push
xchg
mov
push
sub
call
jmp
jnp
out
inc
shr
adc
test
dec
push
adc
or
not
clc
cwde
or
cwde
mov
mov
ror
jg
ret
(bad)
sbb
stos
push
das
or
inc
cmp
push
scas
shl
pop
movs
(bad)
cdq
mov
pop
gs
aas
pusha
out
jno
cmc
mov
out
fsub
fldcw
test
sbb
sbb
add
push
in
adc
or
retf
or
pop
pop
dec
imul
aad
pop
in
or
lahf
pop
ds
push
ficom
xor
int
movs
dec
cmps
adc
cmp
popf
pop
add
pop
sbb
popa
dec
cwde
mov
test
lods
inc
outs
test
mov
or
cmps
sub
sub
pop
jmp
pop
imul
ja
bound
ja
repz
xor
inc
call
loop
(bad)
fwait
or
les
mov
rol
jp
mov
xchg
cmps
shl
cmp
inc
fnstenv
imul
dec
sbb
into
mov
fwait
cli
lahf
arpl
sbb
and
(bad)
and
outs
sub
call
imul
jb
fdivr
mov
je
ret
sub
inc
mov
add
jmp
(bad)
sub
(bad)
adc
test
nop
loope
xor
stc
pushf
leave
js
mov
add
jecxz
push
and
fist
test
test
inc
jne
cmps
fld
movs
in
jo
cs
mov
inc
cmp
std
fdivr
jno
loop
cwde
sub
sub
call
jne
pop
jp
pop
sub
stc
mov
int3
push
scas
repz
retf
xchg
jno
pop
cmps
dec
mov
retf
popf
movs
ret
mov
gs
outs
sbb
sub
and
push
stos
jp
add
and
jmp
stos
les
pop
clc
int
or
xchg
pop
xchg
aaa
out
push
test
add
stos
push
xor
scas
loope
cmp
es
(bad)
push
int3
jbe
out
idiv
out
int3
std
ret
out
(bad)
xor
loope
pop
xchg
cld
or
adc
or
cmps
test
and
or
lods
adc
inc
dec
sub
cmp
pop
cmp
sub
mov
xchg
mov
call
lods
imul
inc
and
mov
int3
xor
sub
rol
sbb
dec
adc
cmp
dec
stos
push
jno
fsub
mov
movs
cmps
lea
inc
cld
fs
test
cmp
inc
dec
popfw
or
cmp
inc
add
in
push
jle
cmps
outs
sub
aam
mov
test
pop
cmp
lock
sub
xor
and
jb
loop
jns
add
add
push
mov
sub
mov
mov
scas
pop
adc
sar
loopne
adc
pop
mov
int
dec
xor
movs
int3
jg
dec
out
sbb
or
mov
mov
mov
inc
sub
and
(bad)
out
daa
into
(bad)
cmp
cmp
lock
cmp
scas
test
inc
stos
shl
call
ins
scas
dec
push
leave
inc
dec
add
mov
ret
mov
mov
jp
push
clc
push
int3
daa
lods
pop
and
jge
jbe
dec
lahf
es
mov
xor
(bad)
rcr
push
rcl
mov
imul
lahf
mov
xchg
push
xchg
dec
pop
ins
mov
adc
repz
test
mov
nop
sbb
sbb
mov
cwde
inc
mov
mov
popa
outs
call
(bad)
sti
cli
xchg
(bad)
sbb
movs
xchg
or
enter
or
ficom
jg
lea
(bad)
in
int3
sbb
(bad)
jl
add
pop
(bad)
frstor
and
sub
sub
mov
push
rol
add
int
xchg
ins
outs
test
fcmovnb
div
adc
aaa
popf
mov
outs
and
(bad)
push
(bad)
adc
add
icebp
popf
dec
rol
sbb
and
rol
or
add
adc
sahf
xor
push
rol
or
test
rcl
xchg
cmp
cmp
sti
and
hlt
push
xchg
outs
call
fdivr
aam
xchg
sub
xor
les
and
pop
scas
mov
mov
jg
jo
lds
push
pusha
loope
push
jl
add
in
mov
test
sbb
mov
aad
mov
push
(bad)
imul
xchg
fdivrp
neg
pushf
aam
call
test
pop
in
inc
jns
cmps
scas
lock
loop
inc
add
pop
push
push
sub
push
cmp
lods
test
sub
xor
jge
nop
add
sbb
jns
mov
xor
cmp
fldenv
repz
sti
das
fcomip
dec
sub
mov
in
push
lock
xor
call
mov
mov
rcl
outs
push
(bad)
mov
dec
jp
lahf
movs
ds
pop
aas
out
dec
pop
retf
dec
fnstsw
mov
(bad)
into
test
adc
pop
or
and
push
lods
xor
jae
ret
sbb
call
and
in
mov
repnz
in
shl
movs
aad
(bad)
mov
mov
xchg
jae
pop
inc
inc
cli
iret
fdiv
cld
test
mov
test
dec
and
jg
sub
je
push
out
dec
sub
adc
cmps
int3
xor
icebp
sub
call
sar
inc
scas
push
lods
jo
in
test
jl
mov
dec
xchg
dec
mov
popf
movs
adc
lds
jns
mov
dec
pop
imul
enter
or
stos
cmp
mov
lea
push
and
push
in
sbb
movs
push
dec
mov
cwde
xor
movs
pop
cmp
lea
lahf
push
icebp
les
cdq
in
pop
xor
sub
outs
cmp
out
cmp
jg
and
sti
retf
xor
sbb
vmread
add
vpsadbw
imul
(bad)
jbe
add
scas
mov
adc
in
in
mov
mov
(bad)
cmp
test
inc
dec
mov
pop
pop
dec
enter
addr16
add
repz
push
cld
aas
or
xor
sbb
loopne
dec
iret
int3
pop
js
push
inc
adc
adc
and
cmps
mov
mov
movs
mov
imul
dec
ins
inc
cmp
stos
fistp
repnz
pop
test
movs
or
test
push
mov
adc
and
call
in
or
test
mov
in
daa
sub
ret
sub
mov
push
shl
test
cdq
jl
jl
add
sbb
(bad)
int3
dec
sbb
sub
inc
jp
dec
push
daa
push
call
adc
adc
mov
mov
adc
inc
in
and
inc
adc
adc
dec
jb
dec
sti
sbb
repz
sub
jbe
sbb
pushf
dec
fisttp
loop
ret
les
mov
(bad)
sub
adc
test
aam
mov
mov
adc
call
test
arpl
fimul
scas
out
jp
inc
push
sub
cmp
jne
test
lods
out
or
add
jae
hlt
pop
sbb
sub
mov
ins
(bad)
pop
pusha
sub
aam
gs
fist
popa
imul
xlat
(bad)
repnz
iret
sbb
lea
jecxz
fisubr
shl
ins
or
jmp
shl
inc
lods
out
addr16
sbb
mov
jae
js
mov
std
repz
fnstcw
pop
(bad)
mov
dec
out
push
mov
enter
sub
test
jmp
jns
push
jmp
bound
test
and
or
jbe
and
int3
not
cmp
imul
xchg
ret
ret
stos
jmp
or
cdq
les
popa
mov
loopne
mov
mov
in
mov
ds
scas
fcomp
xchg
jne
in
and
out
jnp
lock
rcl
ds
popf
ins
pop
adc
loop
xor
add
mov
xchg
mov
sub
cmp
sti
loop
push
sub
push
call
and
push
outs
(bad)
jbe
lods
lea
retf
mov
jno
push
xor
jae
mov
push
fcom
mov
and
add
or
dec
pop
dec
mov
xor
dec
and
inc
cmp
(bad)
aam
dec
sub
ficom
repz
pop
jne
and
out
xor
xor
sahf
outs
push
shl
add
and
repnz
hlt
and
pusha
pop
mov
push
daa
scas
add
aas
or
jb
adc
cmp
popa
test
jp
gs
pop
push
ins
ss
popa
push
outs
and
push
or
bndstx
jle
ror
scas
jecxz
adc
ds
inc
test
clc
jmp
outs
jmp
mov
or
xchg
outs
loopne
ret
out
das
add
scas
cli
and
mov
fcom
lea
shl
inc
cmp
mov
xchg
and
or
jb
idiv
xor
bound
dec
pop
enter
inc
lea
pop
hlt
push
daa
ror
shr
xchg
cld
jl
call
pop
rcr
aam
inc
fcomp
arpl
push
mov
shl
shl
movs
jb
outs
mov
and
pop
push
inc
mov
ret
jbe
outs
inc
div
or
sbb
add
sbb
scas
in
cmc
xlat
cwde
and
pop
pop
jecxz
loope
sub
das
js
sbb
or
rcr
sbb
adc
rol
dec
inc
icebp
das
test
sub
dec
push
fmul
cli
mov
lea
add
cmp
dec
lea
adc
ds
or
inc
pop
sub
or
add
cmp
mov
jmp
ja
pop
jb
and
push
cmp
test
jo
mov
(bad)
mov
mov
push
into
mov
jmp
add
std
fidiv
add
imul
sub
imul
or
loopne
into
leave
pop
ret
jmp
sub
jecxz
hlt
mov
add
call
mov
enter
sbb
push
loop
push
(bad)
push
ss
xchg
aaa
pop
xor
mov
pop
push
imul
mov
xchg
cwde
movs
and
adc
retf
push
jg
mov
or
sub
loopne
fsubr
not
mov
mov
adc
xor
jp
movs
add
(bad)
mov
cmc
adc
xchg
xlat
push
xor
cmp
and
inc
aas
dec
jbe
jg
movs
cs
dec
pop
or
(bad)
lods
int3
ds
iret
in
inc
push
pushf
hlt
xor
mov
mov
xchg
in
dec
sbb
inc
aaa
or
movs
inc
cmp
imul
fst
leave
push
sub
mov
cmp
cli
ins
(bad)
cmps
(bad)
std
dec
addr16
aam
mov
sbb
mov
xchg
repnz
mov
sbb
jmp
jmp
addr16
cli
das
pop
pop
ret
lock
mov
jae
xor
cmp
rcl
inc
ins
cmp
mov
out
outs
xor
push
sbb
sahf
or
pop
sar
mov
stos
in
inc
popf
and
dec
mov
fst
loop
cs
mov
mov
push
xchg
mov
jecxz
pop
pop
and
mov
sbb
lods
jne
retf
rol
dec
xor
fisttp
leave
(bad)
add
cmp
in
loopne
idiv
popa
cmp
mov
pop
cmp
or
or
xor
out
mov
out
jle
outs
je
pop
paddq
leave
cs
pop
add
inc
adc
mov
cdq
jle
retf
cmp
adc
sti
inc
loop
ret
xchg
add
cmps
cmp
mov
sti
shl
(bad)
cld
loop
mov
stc
pop
cmp
jle
ret
cmc
movq
loop
jno
dec
sub
pop
sub
push
scas
retf
mov
pop
stc
iret
scas
mov
pop
ret
and
push
mov
ja
jmp
pusha
jl
cmp
stc
lea
push
mov
sub
shl
xchg
dec
push
push
lods
fwait
xlat
inc
popa
loope
retf
push
and
fs
(bad)
sub
mov
xchg
jb
push
std
in
or
inc
retf
leave
add
dec
and
sbb
stos
jecxz
jle
push
retf
pop
mov
inc
shr
cmp
nop
fmul
jae
hlt
vcvtsi2sd
test
mov
enter
pop
aas
das
call
add
jmp
push
xchg
push
pushf
nop
out
arpl
xor
sahf
(bad)
adc
jmp
scas
enter
mov
fsub
jle
pop
sub
out
jle
sbb
loop
popa
popa
xor
mov
aad
repnz
lahf
lds
jns
xor
pop
bound
cmps
jmp
sbb
popf
push
aam
not
ret
mov
pushf
jmp
enter
xor
push
outs
out
inc
pop
add
out
retf
mov
push
les
sbb
loope
ror
aas
push
(bad)
repnz
call
adc
inc
dec
aaa
mov
add
cmc
ret
lea
nop
ror
lock
or
cdq
aas
sub
iret
push
ss
mov
jecxz
jge
ficomp
loopne
or
scas
outs
test
mov
cmp
xchg
and
fimul
pop
inc
inc
mov
add
sub
sbb
dec
pop
add
and
push
dec
or
in
loope
in
lods
test
cmps
das
add
in
cmps
xchg
jl
out
and
neg
pop
mov
data16
dec
(bad)
jmp
jg
bound
cmp
mov
jge
add
jmp
out
jno
call
push
ror
ss
push
mov
sbb
stos
push
pop
adc
cli
push
retw
pusha
mov
dec
fild
or
add
jb
enter
loop
xor
(bad)
(bad)
dec
or
int
rcr
cmp
sub
mov
inc
jle
push
inc
sub
mov
sbb
push
out
rol
pop
cmp
lock
mov
dec
inc
adc
mov
push
xor
push
add
ret
mov
(bad)
pusha
(bad)
push
mov
jmp
add
push
rcr
mov
test
jbe
jle
or
dec
and
jnp
sbb
std
cld
arpl
inc
lea
cmps
jge
ffree
cmp
add
dec
add
sahf
lods
cmp
mov
je
retf
jne
mov
cdq
cwde
les
mov
pushf
(bad)
cmp
adc
mov
xor
imul
sub
or
jb
adc
mov
jae
mov
sar
and
idiv
aam
push
je
and
stos
and
cmps
mov
test
push
and
dec
scas
mov
in
cmps
sub
xor
cmp
push
scas
popf
cmp
jo
shl
in
xchg
test
and
enter
(bad)
inc
xor
scas
jge
push
js
or
push
dec
and
or
sub
bnd
sbb
aam
ss
test
inc
pop
fcomp
push
adc
rcr
fsub
sbb
dec
loope
dec
dec
out
cmc
jne
add
daa
adc
dec
mov
sub
cmps
sbb
mov
push
scas
fadd
fisubr
in
or
dec
and
cmp
clc
(bad)
ds
in
mov
mul
ret
cmp
retf
xchg
outs
or
popf
(bad)
lods
ja
cmp
mov
add
mov
inc
and
std
dec
cmps
mov
mov
inc
sar
mov
mov
inc
xchg
cmps
nop
mov
mov
out
ja
call
hlt
imul
mov
or
xchg
push
into
imul
cmp
cs
jl
bnd
adc
xchg
pushf
lea
mul
out
xlat
aas
mov
push
mov
jns
or
or
adc
push
xor
jae
arpl
sub
aas
add
cmc
dec
cmp
dec
cmp
shl
and
movs
inc
jo
add
aaa
lods
int
sbb
push
out
sahf
daa
sub
push
mov
cwde
call
adc
mov
mov
leave
push
stc
repz
mov
xor
jnp
inc
xor
in
sbb
lock
xor
xor
cmp
dec
cmp
ret
jmp
imul
xor
arpl
xchg
jns
cmps
das
and
inc
(bad)
dec
jmp
jnp
sub
in
std
ja
and
push
(bad)
pushf
sbb
into
ss
dec
cmps
mov
nop
mov
stos
jae
xlat
inc
icebp
xor
xchg
sub
inc
cmps
fdiv
sub
(bad)
iret
sbb
rcr
inc
cmp
mov
std
push
shr
mov
fimul
add
sub
cli
das
popa
xor
outs
inc
mov
xchg
jmp
mov
ja
daa
imul
push
call
xchg
xchg
add
xchg
dec
add
je
xchg
daa
jb
retf
mov
lahf
pop
pop
xlat
mov
je
out
enter
sub
sti
lock
push
mov
mov
ja
ss
dec
int
pop
gs
popa
ret
adc
aad
in
jmp
cmp
push
inc
sub
fstp
out
pop
mov
popf
pusha
aam
mov
leave
fsub
inc
push
stos
imul
test
mov
inc
cs
ret
push
clc
mov
daa
sbb
js
jmp
pop
xchg
cs
retf
cmp
inc
shr
lahf
fld
outs
mov
mov
repnz
in
lods
fcomp
push
xor
mov
fld
sub
pop
out
cmps
sbb
call
or
ins
or
mov
cmp
into
ret
mov
and
fild
mov
push
inc
pusha
test
cmps
(bad)
jno
test
inc
mov
fidivr
mov
call
cld
cld
daa
cmp
pusha
ins
rcl
mov
jecxz
mov
jno
ror
ficomp
call
out
xor
test
fcomp
cs
daa
jmp
jne
call
inc
push
dec
add
ds
and
mov
jbe
cmp
fwait
movs
and
sbb
or
dec
inc
mov
loopne
aas
into
add
loope
pop
mov
cmp
data16
or
std
sbb
jmp
stos
jmp
pop
and
popf
pop
xchg
inc
xchg
loopne
adc
in
pop
ret
test
dec
xchg
adc
outs
dec
and
xchg
int3
or
stos
mov
fxch
mov
sbb
stos
outs
cmc
fwait
lock
push
jp
mov
scas
in
les
cwde
push
scas
scas
mov
fist
ins
mov
shl
out
push
ror
inc
in
lahf
fs
add
xchg
cmp
fild
xor
sar
neg
jmp
lock
aad
or
loop
jb
nop
mov
and
imul
pop
pop
or
xchg
push
sub
sar
or
imul
fstp
cmps
ja
(bad)
fisub
dec
dec
or
adc
mov
adc
test
add
iret
cmp
adc
int
add
lods
jecxz
adc
or
pop
or
scas
jbe
test
fcmovbe
pop
jns
push
std
jo
mov
test
dec
aad
dec
or
xchg
jecxz
adc
dec
xchg
pop
cmp
hlt
out
punpckldq
cmc
fidiv
jns
mov
xor
sbb
cmc
adc
cmp
pop
jb
pop
hlt
jmp
retf
pop
movs
push
mov
ja
cmp
cmp
das
jmp
or
mov
add
adc
in
shr
and
xchg
push
in
mov
ds
mov
mov
push
or
shr
enter
fnstcw
mov
or
pushf
scas
cli
dec
mov
mov
xchg
popf
ja
mov
jecxz
cmps
ror
scas
ds
add
clc
std
and
mov
mov
movs
dec
xchg
cmps
lods
nop
pop
sar
dec
or
stos
iret
call
nop
hlt
dec
sub
aad
movs
mov
ss
rol
fmul
popf
out
std
pop
mov
jbe
dec
lods
out
pop
mov
or
mov
inc
or
push
bound
push
adc
fst
jbe
push
mov
arpl
pop
push
popa
mov
mov
inc
jae
pop
dec
jno
sbb
out
stc
gs
loope
pop
push
leave
sbb
mov
dec
adc
inc
mov
es
xor
cwde
outs
sub
push
cmp
mov
add
fcomp
je
mov
push
mov
jle
inc
int3
enter
jle
cmc
and
jmp
or
jnp
repnz
adc
mov
and
mov
xchg
fcom
push
pop
inc
sbb
add
test
std
xchg
enter
ins
lods
ds
dec
sar
scas
ja
loopne
xor
jo
sub
leave
add
and
in
inc
fcomp
test
jb
rol
or
mov
sbb
popf
ss
dec
cdq
in
mov
in
push
xchg
sbb
fidivr
out
pop
push
(bad)
je
mov
fdivr
out
push
das
retf
movs
add
sub
not
or
xchg
mov
sub
xchg
jmp
loope
call
jno
push
js
imul
dec
out
adc
lds
push
ret
pushf
aad
outs
sbb
ret
dec
inc
or
lahf
out
sqrtps
sbb
pop
sbb
push
sbb
push
in
ss
mov
xchg
pop
popf
mov
ret
or
pop
cmps
loop
cs
das
ins
xor
iret
(bad)
in
or
int3
lds
xchg
xlat
push
push
(bad)
scas
cmps
shl
movs
push
or
cmp
ret
test
pop
and
mov
push
inc
es
ja
pop
or
lock
aas
mov
mov
mov
rcr
or
movs
jl
jb
mov
or
push
xchg
rol
movs
into
neg
ss
fwait
cwde
mov
jg
jno
stc
add
dec
mov
xor
mov
loop
push
retf
and
in
mov
cmc
rol
cmp
(bad)
mov
mov
test
mov
lods
jge
add
or
or
or
lock
in
fs
add
pop
ins
js
push
fild
in
in
int3
rol
xchg
test
mov
aam
push
(bad)
cmp
pop
adc
inc
pop
pop
iret
lahf
sbb
pop
cmp
enter
sub
inc
imul
clc
mov
out
jl
mov
xchg
es
xchg
add
add
repnz
jnp
cmc
mov
push
mov
inc
adc
sbb
mov
and
add
(bad)
jecxz
adc
pop
mov
int
cmps
or
jbe
sbb
pop
xchg
push
pop
mov
xor
(bad)
(bad)
fcmovnb
rol
sub
add
cmp
(bad)
(bad)
cmp
and
loop
call
fmul
cmps
popf
mov
fs
xor
(bad)
outs
inc
int
mov
mov
shr
pop
scas
xchg
stc
jmp
push
and
test
les
dec
int
xor
cli
add
pop
sbb
or
fidivr
ror
push
inc
in
mov
dec
lods
push
imul
data16
and
add
pop
push
lods
xor
cmp
xlat
jle
xchg
js
(bad)
mov
cmp
jmp
or
jb
add
cld
enter
pop
fsub
push
movs
mov
daa
ret
adc
js
mov
mov
pop
inc
retf
sbb
cmps
loope
in
ds
xchg
jo
jecxz
jb
shr
sub
icebp
cmp
mov
xor
pop
mov
in
pop
fcomp
retf
xchg
xchg
cs
jg
out
rol
sub
add
popa
out
nop
jle
mov
mov
inc
mov
inc
cmp
outs
and
mov
ficomp
pop
lahf
dec
xchg
scas
test
ror
jb
test
ins
shl
ja
cmp
cwde
retf
outs
cs
lds
arpl
xchg
push
mov
pop
cmp
imul
inc
mov
sbb
push
movs
in
aad
adc
cmp
sahf
and
push
xor
jl
add
xor
mov
cmps
adc
inc
mov
cmp
aad
retf
pop
aaa
(bad)
mov
jl
jmp
sub
cmp
in
push
cmps
jno
xor
mov
aaa
movs
outs
push
repz
adc
mov
push
and
retf
and
or
fmul
adc
inc
push
mov
int
inc
mov
and
mov
loop
mov
je
popf
sbb
outs
enter
cmp
mov
xor
outs
ja
cmp
or
jb
inc
or
fmul
mov
ret
(bad)
cmp
mov
cmc
lea
icebp
lods
xchg
int
push
(bad)
mov
lahf
pop
cmc
cli
lods
add
mov
movs
sbb
and
mov
rcl
enter
adc
push
sub
addr16
out
aad
jge
or
jno
sar
mov
mov
pop
inc
(bad)
test
repnz
xor
daa
iret
pop
lea
mov
loope
fst
add
aad
pop
xchg
jb
add
aad
das
dec
sbb
jmp
xchg
jp
or
cmps
cdq
push
(bad)
int
or
(bad)
repz
mov
je
or
mov
mov
mov
and
enter
ret
inc
mov
inc
ss
outs
outs
push
fs
fidiv
shl
add
mov
jmp
xchg
sbb
mov
repnz
ins
xor
xchg
xchg
or
(bad)
sub
add
dec
add
dec
jae
repnz
jb
loope
push
aad
pop
jne
out
data16
jnp
dec
push
jecxz
jno
dec
imul
or
push
xor
xor
out
icebp
dec
add
ret
add
sub
or
inc
std
push
pop
push
(bad)
adc
mov
add
jnp
add
pop
fld
test
cmp
sub
add
and
dec
or
add
shl
mov
(bad)
or
scas
mov
popf
sub
and
nop
icebp
jmp
icebp
sub
call
leave
(bad)
mov
dec
rcl
mov
in
push
jo
scas
jno
adc
fwait
mov
addr16
ins
hlt
jo
mov
pop
push
jge
pop
mov
sti
shl
sub
aas
aam
xchg
test
es
(bad)
jbe
dec
data16
dec
ins
xchg
fmul
loop
jb
repnz
sbb
scas
ucomiss
jmp
sub
pop
in
mov
xchg
test
mov
int
imul
push
ins
retf
or
(bad)
clc
test
in
cmp
jecxz
in
add
push
retf
scas
and
jne
shl
push
fnstenv
ret
inc
pushf
div
jb
jns
and
mov
ja
push
xchg
mov
test
or
movs
mov
jge
xchg
ds
sub
jnp
inc
lds
xor
pop
imul
addr16
jmp
pop
mov
fsubrp
xchg
in
dec
repnz
daa
sub
call
mov
adc
cmp
xor
jp
cmp
mov
test
push
pop
xlat
sbb
add
iret
cmps
popf
mov
sbb
leave
mov
xchg
and
sahf
xor
jp
push
sub
cmp
(bad)
stos
push
push
dec
packuswb
jns
test
jb
and
(bad)
fwait
xor
dec
xlat
add
cdq
fisttp
sbb
push
adc
test
std
rol
(bad)
(bad)
dec
inc
cli
shl
pop
ss
aas
dec
xlat
inc
arpl
enter
mov
outs
rcl
lds
adc
dec
lea
mov
or
sbb
xchg
jmp
xor
dec
cld
jno
scas
je
test
movs
stc
enter
inc
int3
clc
push
outs
fiadd
xchg
mov
jns
stos
fcmove
rcr
cld
fwait
or
popf
and
inc
dec
sbb
push
push
add
xchg
outs
cmps
clc
shl
retf
fst
pushf
cmp
or
xchg
cmp
test
jns
pop
mov
imul
sti
xchg
push
mov
js
idiv
test
mov
adc
sahf
pop
dec
retf
ja
cmp
sar
bound
push
xchg
test
sti
mov
or
mov
call
cld
mov
nop
fidiv
xlat
mov
jp
jb
or
or
fs
jno
jmp
(bad)
leave
mov
or
xor
dec
sbb
and
fwait
(bad)
stc
jge
dec
clc
pop
dec
add
xor
mov
or
gs
inc
mov
shl
outs
mov
or
addr16
(bad)
sbb
repnz
xor
ret
cld
jp
das
fisubr
fstp
data16
mov
cmp
xor
ss
ins
fistp
dec
sahf
test
or
push
in
stos
and
stc
aam
push
jle
cld
mov
test
and
popf
cwde
sbb
std
lea
add
xlat
loopne
ds
xchg
nop
ret
xchg
dec
stc
fadd
aaa
push
repnz
mov
mov
cmp
mov
pop
cmps
std
jne
iret
cmp
mov
aam
xor
scas
or
sub
mov
js
adc
idiv
scas
sub
in
movs
pop
out
aam
or
dec
es
in
ja
jo
frstor
in
jae
stos
mov
dec
sub
xor
pop
aam
outs
mov
lahf
xor
test
jle
pop
pop
and
jb
or
pminub
mov
jmp
or
jg
xchg
and
(bad)
cmc
mov
aaa
fdivp
sahf
mov
pushf
sbb
test
mov
jecxz
mov
movs
or
push
aam
ins
pop
mov
pop
in
xchg
lods
movs
xor
rcl
les
fldcw
push
int
xor
xor
and
hlt
pushf
cmp
cmps
add
cmp
push
xchg
test
imul
pop
mov
movs
dec
mov
std
xor
ja
lock
hlt
mov
fidivr
lods
enter
add
in
xor
clc
lock
or
push
adc
or
mov
mov
push
mov
loop
popa
pop
rcr
(bad)
jecxz
aas
fmul
in
movs
dec
push
mov
mov
dec
nop
aaa
pop
clc
push
sbb
sub
mov
xchg
call
cmps
cwde
inc
add
ss
ret
(bad)
(bad)
aad
cmps
pop
push
push
mov
out
stc
add
and
mov
fs
fcom
stos
mov
aad
int
pop
inc
inc
call
sub
fld
inc
sub
icebp
push
pop
aaa
xor
shr
mov
popf
dec
int3
sub
add
imul
cmp
adc
es
(bad)
ins
sahf
push
movs
mov
push
sub
aas
mov
sti
mov
xchg
or
pop
sbb
out
jl
mov
or
fsubr
jnp
je
into
lea
and
movs
xor
mov
sub
add
ja
imul
sbb
int
rcr
mov
movs
adc
push
out
iret
pop
rol
jecxz
pop
and
adc
cmp
or
mov
cmc
xchg
int
dec
push
fs
xchg
xchg
out
push
fnop
int3
adc
xor
inc
(bad)
dec
xchg
cmc
dec
or
dec
(bad)
out
sub
mov
jmp
sub
pop
or
pop
dec
fdiv
popa
popf
add
jb
ror
pop
dec
fisub
stos
sub
(bad)
jecxz
mov
sbb
into
cmp
shl
push
dec
leave
mov
pop
das
mov
jne
js
sahf
imul
pop
out
jl
add
clc
lock
jmp
sub
dec
stc
jmp
arpl
dec
push
js
cs
jns
inc
mov
test
in
add
mov
popa
in
and
push
fucomp
mov
(bad)
dec
xor
xor
fwait
sub
mov
jb
mov
mov
ja
ds
or
or
dec
cmc
sub
jp
clc
push
xor
pop
(bad)
push
addr16
jl
mul
rcr
pop
scas
pop
test
sub
(bad)
adc
bound
or
or
cmc
in
push
push
inc
dec
jne
adc
dec
jecxz
xchg
mov
mov
push
outs
push
imul
cld
imul
push
or
mov
push
jmp
out
outs
js
xlat
into
pop
sbb
add
cmps
int3
xchg
test
jno
or
jbe
idiv
test
call
pop
pop
dec
je
mov
push
aad
loopne
sub
ins
bound
and
daa
outs
lea
xor
pop
xchg
mov
xor
je
jbe
mov
dec
les
mov
or
neg
fs
(bad)
js
inc
clc
mov
sub
cmc
cld
enter
cs
addr16
(bad)
xchg
dec
bound
push
inc
pop
fstp
inc
xchg
inc
adc
sahf
int3
cld
addr16
push
and
pop
sbb
push
mov
sti
clc
lods
mov
xchg
add
ror
shl
cmp
fcom
mov
sub
jbe
xchg
stc
xor
push
(bad)
in
out
xchg
sar
icebp
and
xchg
(bad)
ror
add
iret
fsub
push
push
aas
mov
xor
xchg
iret
push
and
sbb
mov
test
bound
add
jp
aaa
mov
mov
jl
sub
or
mov
jle
imul
push
jmp
and
ins
les
cli
inc
mov
(bad)
in
mov
xor
ds
ja
retf
mov
dec
jmp
test
(bad)
mov
out
ret
mov
push
sbb
push
sbb
cmps
loop
div
pop
rcl
fidivr
movs
xchg
sbb
dec
push
out
and
dec
fwait
ror
jmp
xchg
pop
add
xor
fwait
jns
cmp
push
neg
lock
rol
fld
xor
and
sub
pop
pushf
fbstp
mov
int3
mov
shl
add
dec
lahf
loope
or
push
hlt
sbb
jmp
lea
or
jno
sbb
jecxz
xor
and
pop
je
cmps
and
add
pop
jae
shr
and
leave
push
push
fadd
cli
push
inc
inc
push
retf
neg
add
je
adc
xlat
stos
ror
std
add
jne
push
test
jnp
cli
jo
add
jns
aad
fmul
loope
leave
out
mov
outs
push
sub
movs
push
inc
jnp
cmp
push
je
inc
xchg
fld
cmp
popa
dec
inc
cmp
sbb
jb
mov
xor
sti
pop
push
(bad)
test
nop
adc
inc
inc
jne
ficom
jb
xor
dec
push
jbe
add
cmp
addr16
repz
jbe
imul
xchg
mov
mov
ja
push
lods
xchg
mov
rcl
pop
push
adc
jmp
sbb
(bad)
dec
push
pop
sar
stc
add
and
inc
jmp
es
dec
sbb
pop
test
clc
push
dec
fcmovnbe
ficomp
lods
fnstenv
mov
aam
cld
popf
cmp
jmp
add
jl
jmp
(bad)
hlt
in
scas
pushf
out
dec
psubusw
aas
push
scas
test
xor
int3
ret
retf
scas
loope
das
and
in
imul
dec
sub
sub
dec
cmp
cmc
mov
pop
loopne
shl
out
pop
xlat
sub
pop
mov
ja
or
scas
aas
std
retf
mov
mov
push
xchg
scas
jo
fcomp
inc
int3
xchg
outs
inc
(bad)
push
pop
lods
lods
(bad)
jns
xor
or
addr16
jmp
in
in
ss
out
lea
je
fstp
addr16
sbb
std
push
dec
rcl
push
ret
fsubr
or
and
or
sub
cmc
xor
test
pop
mov
jge
add
icebp
ror
jae
in
cmps
push
fs
and
retf
test
cwde
fdivr
popa
or
pop
call
cmp
mov
jmp
xchg
loope
sub
fnstsw
iret
ret
fistp
fisttp
jl
dec
pushf
int3
dec
jle
fbstp
dec
gs
push
(bad)
xchg
loope
or
and
sbb
cmp
fnstsw
scas
sub
outs
push
popa
jl
test
inc
in
jecxz
movs
daa
shr
cmp
dec
xor
sar
pop
cli
mov
int3
loop
fidiv
inc
and
jne
push
movs
mov
adc
lods
mov
push
ins
dec
jp
jle
ja
cmp
popf
movs
scas
daa
mov
inc
ins
pop
and
push
pushf
lods
lds
jnp
call
test
or
(bad)
or
and
push
fwait
loop
pop
sub
xlat
jb
sub
test
shl
xor
xor
push
es
in
pop
into
mov
(bad)
dec
jl
xchg
inc
test
sahf
pop
mov
jns
pop
push
cmp
fcomip
inc
or
cmp
pop
adc
mov
mov
pushf
ins
cdq
out
mov
push
push
sbb
cld
mov
clc
leave
push
dec
sub
inc
shld
ja
mov
pop
push
daa
xchg
int
dec
xchg
jge
pop
or
rcr
adc
into
aam
mov
cmp
mov
cmp
mov
add
(bad)
loopne
pop
je
xor
fnsave
in
cs
std
mov
(bad)
adc
add
je
inc
mov
leave
je
cmp
gs
cmp
cmp
aad
movs
imul
stc
sub
fwait
xchg
(bad)
jne
div
jle
arpl
add
mov
add
inc
xchg
xchg
mov
arpl
pop
mov
adc
fisttp
call
mov
test
push
mov
mov
mov
cld
das
es
rcl
or
and
pop
sub
mov
jmp
mov
jmp
shl
adc
test
xor
mov
sti
inc
ja
lock
xlat
rol
jp
jnp
(bad)
mov
and
mov
inc
sbb
cmp
call
dec
dec
jg
or
(bad)
or
repnz
dec
jo
loopne
pop
add
loope
jnp
test
fld
shl
stos
aam
dec
add
lea
neg
mov
inc
mov
sub
adc
adc
push
into
dec
cmovl
inc
mov
or
clc
fdivr
push
loope
xchg
sub
repz
pushf
jge
jmp
xchg
mov
loope
stos
cmc
inc
sbb
adc
push
pop
aam
dec
cmp
aaa
stc
pop
mov
imul
cli
call
inc
cli
cmp
jae
pop
mov
xchg
mov
or
xchg
mov
out
pop
mov
add
sbb
rcl
sub
pusha
int
daa
lods
push
je
mov
push
ja
xor
pop
(bad)
xor
sub
movs
dec
loope
gs
popf
stos
sub
jnp
movs
sub
pop
iret
xchg
sahf
sub
mov
lahf
mov
fist
clc
adc
adc
into
mov
push
xor
fmul
push
push
or
push
cmovl
fcmovnu
out
call
dec
bound
inc
daa
and
or
repz
mov
mov
xor
sub
dec
call
mov
mov
cmp
jmp
sub
popa
outs
icebp
fistp
rcl
mov
data16
sti
dec
jmp
mov
push
adc
arpl
(bad)
es
(bad)
dec
inc
inc
mov
jo
enter
retf
ss
cmp
pop
sbb
add
inc
dec
xor
mov
mov
cmc
cmp
mov
outs
mov
enter
int3
mov
pop
push
xlat
frstor
push
mov
sub
enter
dec
pusha
xchg
xchg
ret
push
push
(bad)
mov
and
shl
pop
and
and
pop
push
xchg
pop
xor
nop
test
cmc
and
or
shl
jo
fcomp
lods
push
mov
js
pop
pop
jl
mov
fs
xchg
not
cmp
sbb
ss
or
xor
cmps
sub
adc
mov
xchg
fstp
lahf
gs
out
mov
inc
mov
xchg
(bad)
or
scas
jmp
inc
and
push
xchg
std
ret
sub
loope
add
dec
sub
lds
pop
inc
push
cmp
inc
xlat
(bad)
dec
push
add
repz
adc
fsub
cmps
mov
nop
or
out
retf
xor
aaa
rep
dec
add
stos
push
adc
push
or
mov
pop
cs
stos
movs
scas
jbe
cs
(bad)
dec
pop
aaa
div
sti
out
mov
lods
arpl
cmp
inc
stos
cmc
ins
cmp
xchg
adc
outs
shr
std
fdiv
sub
xchg
mov
dec
push
xchg
xchg
dec
push
mov
inc
and
mov
popf
stos
js
push
sbb
or
jp
adc
loopne
jg
push
(bad)
pop
test
into
mov
ret
mov
sbb
outs
imul
lahf
add
arpl
sbb
cmps
adc
adc
icebp
push
add
jno
cmp
mov
out
pop
shr
js
das
fdivp
mov
pop
test
push
das
cmp
xor
inc
jne
jg
sbb
mov
data16
push
loop
mov
fidiv
clc
ficom
(bad)
(bad)
test
ror
mov
icebp
test
cmp
sti
xlat
sbb
sub
and
in
sar
or
push
test
mov
aas
mov
fwait
adc
(bad)
out
xlat
sbb
cmp
add
aam
or
mov
fwait
inc
data16
sub
mov
ins
pop
jne
mov
sbb
mov
mov
stos
and
test
xchg
mov
ret
inc
test
push
add
outs
dec
stc
jg
xor
jno
xor
mov
sub
mov
jne
lods
jae
or
xchg
ins
cmp
loopne
push
and
loope
in
inc
add
push
jo
es
loope
in
push
sub
pop
mov
shr
push
adc
xchg
retf
call
mov
xchg
lahf
mov
xchg
and
xchg
lahf
mov
cmc
mov
dec
lods
add
jge
sub
lahf
inc
fidiv
repnz
lea
sub
xor
aas
mov
inc
ss
xor
rcr
rcr
das
pusha
adc
aas
in
jae
fs
jns
ret
xor
test
mov
adc
jbe
sbb
sahf
repnz
push
xchg
fldpi
int3
movs
fsub
jmp
inc
fnstenv
movs
push
into
call
sar
xchg
mov
xchg
dec
sbb
add
cmp
inc
mov
pop
test
xlat
movs
pop
pop
xor
or
add
pop
inc
imul
sti
inc
or
inc
dec
cmc
fnstenv
das
jmp
shl
mov
jns
outs
bound
enter
in
lds
test
fcmovnbe
push
fcomp
hlt
adc
in
adc
aad
mov
xchg
or
jbe
lods
fsub
enter
mov
jp
add
push
imul
dec
cmc
ret
inc
shl
xchg
std
std
ds
or
ja
mov
(bad)
dec
jae
xchg
push
push
bound
into
(bad)
and
(bad)
rcr
call
push
out
mov
mov
shl
push
xchg
lds
fsub
inc
retf
cmp
push
out
rol
iret
mov
std
inc
aad
push
ss
cmp
xchg
add
mov
call
dec
cmc
cmc
pop
pop
sub
sub
or
imul
inc
mov
ror
cld
or
rol
jp
xchg
(bad)
mov
dec
and
popa
adc
or
jecxz
mov
mov
add
mov
sbb
lahf
xor
mov
sbb
mov
add
mov
dec
in
clc
xor
stc
sbb
leave
cmp
dec
pop
pop
retf
jne
rcr
mov
mov
or
inc
inc
inc
mov
ficom
(bad)
(bad)
fs
mov
sub
and
jo
inc
outs
aam
jecxz
cs
add
lods
mov
add
arpl
and
and
push
push
cli
xchg
in
lea
fwait
dec
jnp
jne
test
pop
addr16
xor
div
mov
jmp
sub
mov
ins
mov
(bad)
arpl
fidiv
aam
jle
mov
mov
pop
or
inc
fldcw
jae
daa
icebp
or
cmc
mov
fsub
xor
dec
push
mov
jae
rcl
inc
xchg
idiv
ja
in
xchg
cmp
jp
jge
add
add
dec
jbe
shl
outs
sbb
loop
cwde
jl
or
cwde
adc
idiv
stos
enter
or
jmp
movs
xchg
cdq
pushf
in
retf
and
into
and
mov
cs
xchg
mov
adc
cmp
mov
call
dec
jbe
sbb
popf
aad
cdq
sti
in
(bad)
loopne
cmp
mov
rcl
jp
jp
clc
mov
and
xor
dec
xchg
or
push
int
mov
leave
jmp
stos
sbb
mov
mov
inc
mov
retf
in
xchg
mov
cmp
mov
sbb
stc
jnp
rcl
scas
push
jbe
jbe
mov
dec
mov
push
mov
nop
push
jb
das
les
pushf
xor
aam
data16
add
mov
ret
test
stos
mov
adc
sahf
fisub
not
add
mov
movs
or
and
in
xchg
pusha
rcr
sbb
je
or
and
mov
dec
pop
push
das
xchg
ds
xchg
pop
or
mov
jmp
dec
mov
jecxz
mov
mov
pop
lods
xchg
in
je
add
jbe
sub
jo
cmp
and
pop
fsubr
add
ds
ins
mov
int3
call
std
cdq
push
fwait
pop
lds
daa
cmps
mov
movs
dec
test
stc
test
fs
(bad)
xor
xchg
sbb
clc
jne
retf
aad
adc
test
xor
push
outs
(bad)
aam
mov
sbb
push
pusha
jne
mov
shl
mov
or
xor
shl
or
loop
cmp
test
lods
cmp
fidiv
mov
mov
shl
pusha
sub
add
mov
dec
addr16
and
xchg
push
inc
adc
pop
cmp
or
les
gs
aaa
scas
(bad)
xor
scas
add
sbb
cmc
(bad)
icebp
jmp
xor
out
xchg
fwait
sub
loop
sbb
adc
repnz
jns
cli
movs
ins
add
ret
stos
shl
sbb
add
hlt
adc
pop
test
mov
fmul
add
out
sbb
push
outs
or
outs
push
sbb
mov
int
push
mov
jne
test
out
stos
jns
sbb
popa
dec
cs
push
push
mov
mov
dec
mov
in
icebp
pop
xor
jmp
retf
mov
cmp
outs
xlat
inc
inc
add
(bad)
das
rcl
mov
neg
xchg
mov
iret
mov
call
vpunpckhdq
inc
jae
rcl
inc
sbb
out
vmaskmovpd
loope
cs
pop
adc
pop
adc
pop
cwde
idiv
push
mov
inc
inc
aam
push
or
adc
movs
lahf
sub
sub
ds
mov
and
rcl
adc
call
adc
ror
icebp
mov
arpl
fdivr
or
xor
adc
aam
jmp
test
test
and
jmp
adc
test
cs
sbb
and
addr16
repnz
aas
movs
mov
mov
movs
je
ss
ror
stc
or
jmp
jp
push
adc
sar
cmps
test
mov
xchg
inc
and
test
stos
and
push
shr
ror
push
popa
fld
test
xor
mov
cmp
add
inc
mov
inc
cmp
out
jecxz
retf
adc
test
pop
jge
neg
adc
sbb
add
lds
aaa
and
push
mov
xchg
dec
xor
fcmovnb
xor
adc
movs
ret
arpl
xchg
imul
dec
data16
push
cmp
push
and
xchg
push
add
sar
lods
dec
icebp
ins
jnp
je
cmc
or
jmp
inc
push
jno
(bad)
(bad)
jge
repz
rcr
bound
repnz
popf
outs
add
rcl
push
and
(bad)
repz
stc
call
adc
je
pusha
fnstcw
out
xchg
cdq
retf
cmp
sub
add
push
pop
js
movs
ret
and
mov
shr
pop
cmp
fdivr
cwde
and
xchg
data16
sub
out
repz
retf
(bad)
cwde
add
jl
xor
sub
loope
pop
int3
jmp
inc
pop
cmc
xchg
out
mov
cmp
mov
xchg
jge
scas
mov
add
xor
shl
pushf
sub
xor
dec
arpl
push
or
pop
xchg
sub
shl
mov
test
xchg
push
cwde
cmp
or
xor
loopne
lea
push
jp
(bad)
pop
nop
dec
movs
in
jnp
xor
call
jle
rcl
rol
mov
mov
mov
fs
sbb
xchg
aaa
lods
adc
js
pop
imul
call
push
fiadd
sti
std
sbb
sbb
fisttp
mov
or
mov
or
xor
cmp
sub
out
imul
pop
xchg
stos
add
or
jae
pusha
scas
dec
int3
push
cdq
mov
in
outs
popf
leave
and
xchg
push
(bad)
outs
dec
stos
cli
and
push
and
or
cdq
(bad)
in
dec
addr16
aad
mov
sti
mov
mov
outs
sub
div
jle
jl
or
xchg
es
and
and
iret
nop
aad
std
or
add
dec
dec
test
adc
push
les
cmps
add
xlat
cmp
push
aam
mov
add
mov
xor
addr16
cmp
mov
int3
(bad)
aam
xchg
call
std
push
xor
gs
inc
jo
call
loope
xchg
shl
(bad)
aad
mov
jge
mov
iret
dec
mov
dec
cs
push
mov
test
aas
push
inc
cs
push
lods
pop
and
sub
mov
add
sar
dec
sahf
pusha
sub
mov
inc
das
sar
dec
(bad)
sub
es
add
mov
jge
das
mov
adc
aaa
popa
imul
shl
shl
inc
cmp
(bad)
mov
mov
jnp
xor
push
mov
xor
mov
push
jae
bound
jne
ds
daa
inc
and
xchg
sbb
out
xchg
test
and
pushw
adc
shr
mov
daa
jo
pop
fnstcw
repz
jmp
pushf
dec
xchg
xor
push
arpl
mov
bound
cmps
pop
addr16
test
rcr
mov
loope
mov
jbe
sub
inc
clc
loop
push
cmp
shl
add
repz
mov
push
aam
push
hlt
xor
push
dec
dec
popf
cs
mov
push
mov
cmp
add
mov
mov
dec
jmp
scas
retf
fwait
mov
sbb
js
call
test
mov
bswap
xor
xlat
lods
sahf
das
mov
(bad)
imul
xchg
mov
mov
stos
fwait
scas
inc
repnz
rol
fcomp
cmp
add
sub
rol
ret
push
loope
cmc
test
mov
jb
or
loopne
sahf
xchg
adc
sbb
inc
push
pop
xchg
inc
add
psubq
sbb
mov
push
gs
ja
mov
lock
aaa
sub
imul
mov
leave
stc
lea
out
pop
fdivr
cmc
cmp
cld
add
add
clc
out
ficom
jae
ret
dec
mov
jne
call
push
ret
data16
je
scas
and
in
add
pop
into
hlt
or
div
pop
das
dec
mov
cdq
mov
sar
retf
shr
pop
scas
or
or
mov
lock
dec
xchg
out
stos
fild
dec
repz
dec
sti
cmp
(bad)
sti
das
mov
sti
cwde
jge
fidiv
es
mov
push
loopne
mov
aam
or
sbb
xchg
fadd
mov
mov
sahf
add
lods
pop
jl
outs
inc
div
sbb
arpl
xchg
js
xor
xor
push
sub
jns
popf
mov
mov
test
jbe
pushf
adc
test
xor
cmps
mov
cwde
or
(bad)
jge
mov
shr
mov
cmp
ins
mov
js
mov
fimul
fwait
test
xchg
out
imul
pop
add
sub
rcl
inc
inc
add
nop
or
jecxz
lods
test
push
out
scas
(bad)
jbe
jg
pop
cld
je
test
mov
icebp
lea
or
mov
mov
pusha
jle
cli
inc
cmc
sti
adc
sub
inc
(bad)
stc
fisub
sub
movs
pushf
or
repz
or
test
aaa
mov
inc
sub
xchg
addr16
mov
mov
int3
vmovss
iret
add
lea
rcl
daa
mov
pop
adc
in
cmp
outs
mov
dec
imul
and
in
jecxz
bound
shl
cld
sbb
pop
cmp
nop
hlt
out
shl
push
cwde
or
push
fidivr
dec
mov
cmp
adc
outs
lock
retf
mov
mov
in
and
lahf
jne
out
jns
daa
ss
fnstsw
inc
ins
sbb
mov
xchg
loope
ret
mov
outs
xchg
test
or
lahf
jae
imul
fdiv
(bad)
push
lds
cld
leave
dec
in
sub
mov
jns
sbb
or
jg
or
sar
push
and
mov
ss
dec
pushf
shl
add
rol
push
sub
sub
cmp
mov
pop
and
movs
or
stos
ror
or
sbb
and
test
sub
dec
test
mov
cmc
xchg
nop
inc
mov
shl
jnp
(bad)
stc
pop
ins
pop
stos
mov
ret
scas
out
mov
xor
push
push
scas
jns
mov
mov
cmp
xor
inc
pop
ss
and
xor
fstp
clc
sahf
mov
and
push
(bad)
jmp
cli
xor
xor
xor
mov
pop
(bad)
stos
retf
xor
mov
outs
inc
push
(bad)
mov
rol
gs
push
or
rol
add
xor
fidivr
mov
push
jbe
icebp
jmp
xchg
popf
dec
adc
and
nop
dec
adc
and
pop
cmp
arpl
cmp
fnstenv
neg
scas
jnp
pushf
fucom
jmp
adc
jae
test
icebp
push
or
(bad)
or
loop
add
pop
fistp
push
scas
scas
test
adc
and
jecxz
xor
xor
retf
mov
cmps
lods
sub
pusha
cmp
jbe
popf
mov
xchg
mov
mov
in
adc
xor
je
daa
sub
scas
sub
cs
or
mov
cmp
mov
cmps
(bad)
into
xor
and
or
out
pop
mov
xchg
xlat
sub
movs
cmc
bnd
jg
dec
lods
push
sbb
ss
mov
call
xchg
popa
aas
jno
movs
mov
and
ror
scas
pop
pop
out
in
out
inc
dec
mov
outs
jmp
mov
and
hlt
cs
and
cld
adc
lea
pop
lock
xlat
adc
push
aaa
(bad)
xor
mov
cmp
test
xchg
xchg
adc
retf
test
in
and
outs
push
es
inc
aas
mov
sub
pop
ror
jp
fst
sti
cmp
mov
fmul
and
out
jmp
and
sbb
out
push
jno
jno
test
jecxz
movs
aad
cdq
(bad)
mov
inc
cmc
dec
sti
sub
mov
fs
mov
jmp
jo
xor
fs
sub
mov
(bad)
or
push
and
stos
or
pop
(bad)
jmp
out
gs
lods
das
cmc
aam
jne
out
jns
fwait
(bad)
jmp
frstor
hlt
ins
icebp
cmp
push
out
add
mov
cdq
in
inc
jmp
or
jecxz
dec
arpl
add
mov
jnp
lea
fsubr
xchg
stos
nop
rcr
(bad)
pop
sub
repnz
cdq
(bad)
std
test
jp
jmp
pop
xor
push
mov
push
mov
jne
ja
aam
movs
xchg
xchg
xchg
push
mov
outs
cmp
adc
cmps
xor
inc
gs
jmp
popf
call
pop
mov
retf
fstp
xor
repnz
aam
ror
test
jns
add
shr
inc
dec
pop
xlat
dec
aad
inc
and
xchg
adc
iret
loope
inc
mov
in
dec
dec
shl
push
pop
outs
out
pop
mov
test
mov
int
retf
in
(bad)
mov
adc
ins
jmp
or
inc
mov
out
fild
(bad)
call
dec
stos
sub
sar
and
mov
arpl
fldl2e
jp
adc
or
or
stos
xor
sub
dec
add
dec
pop
jle
inc
mov
or
add
repz
sub
fcomp
call
or
lock
stc
cmp
sbb
jo
jb
icebp
mov
jmp
cmp
aas
sahf
pop
xor
xchg
aad
cdq
dec
js
repz
out
cs
mov
pop
es
les
add
mov
mov
stos
scas
jnp
loope
dec
out
mov
sbb
imul
inc
pop
dec
adc
enter
scas
cmps
je
xchg
sar
mov
scas
mov
add
inc
pop
das
imul
outs
pop
push
cmps
fdivr
(bad)
loope
jno
xor
in
clc
mov
cmps
and
lock
out
out
cmp
or
cmps
in
test
shl
ret
shl
dec
in
sbb
mov
in
mov
clc
test
cmc
mov
ins
jge
dec
aas
daa
sbb
mov
daa
ins
sub
lock
jecxz
xchg
cs
in
cli
or
ja
pop
jmp
sub
les
(bad)
xchg
mov
out
jns
jbe
pop
out
cwde
cli
pop
mov
aaa
repz
jge
inc
int3
out
push
jmp
xor
fimul
sub
sbb
add
xor
movs
mov
or
mov
out
daa
sub
clc
ss
jecxz
cli
in
call
lea
inc
adc
repnz
sti
int3
shl
in
mov
cmps
test
inc
dec
call
sub
mov
dec
(bad)
or
test
call
jns
leave
jns
shl
fcomi
cmp
(bad)
lods
or
jo
mov
adc
loopne
sub
xchg
push
jle
mov
push
jp
cmp
mov
out
cwde
jl
add
inc
es
push
fcomp
xchg
data16
es
imul
mov
out
bound
jno
add
or
adc
pop
xchg
les
jbe
xchg
mov
into
lahf
out
shl
loope
test
jecxz
fs
scas
lods
je
add
(bad)
loop
enter
mov
(bad)
(bad)
ins
mov
cmp
dec
xchg
inc
dec
or
inc
daa
jo
imul
pop
lahf
mov
inc
stos
push
icebp
and
shr
add
sub
sub
jl
push
mov
sbb
call
xchg
cdq
pop
(bad)
repnz
(bad)
repz
iret
fstp
loop
ja
lods
mov
pop
daa
(bad)
and
dec
cmp
dec
adc
test
out
jg
(bad)
stos
loopne
lods
push
xchg
mov
ja
cmp
jb
bound
jmp
mul
mov
(bad)
(bad)
or
mov
mov
mov
les
xchg
test
pop
sbb
mov
adc
js
sbb
xchg
dec
out
cmc
lahf
jmp
adc
outs
rcl
jno
cmps
fimul
push
jle
scas
int
sub
add
push
and
push
mov
call
add
stc
jo
retf
mov
jmp
data16
jne
lahf
sbb
sub
es
adc
enter
add
sar
ja
daa
movs
int
outs
pushf
ror
(bad)
data16
pop
iret
xor
mov
xchg
and
stc
rcl
and
dec
xchg
dec
push
pop
mov
xchg
aad
js
fwait
xchg
in
or
dec
sub
sti
stos
cld
icebp
mov
cld
shl
jmp
sub
test
call
(bad)
xchg
dec
and
aas
push
aaa
jno
jl
rcr
movs
dec
shl
inc
push
cmp
jb
stos
pusha
mov
mov
ret
xor
std
jo
jecxz
pop
adc
sbb
pop
xor
push
or
jae
stos
xchg
inc
rcr
ja
popa
pop
cwde
cmp
xor
test
inc
mov
pop
(bad)
js
pop
fbld
fs
cmps
lahf
popa
xlat
adc
pop
xor
call
pop
or
aaa
mov
aaa
xchg
dec
and
add
pop
and
xor
aam
pop
stos
outs
dec
shl
or
push
lea
cmps
push
inc
lahf
dec
mov
mov
push
push
cmp
jecxz
jo
adc
xchg
cmc
in
sub
or
stos
add
retf
daa
into
xchg
push
push
push
mov
std
add
loope
or
in
ret
xchg
fcom
(bad)
xchg
fdivr
jb
add
fimul
sbb
mov
fst
test
mov
cmp
in
pop
xor
lods
sbb
push
sbb
fild
shl
dec
icebp
mov
(bad)
(bad)
mov
test
xchg
sub
rcr
hlt
lods
xchg
xor
pop
stc
mov
and
out
retf
jge
test
pop
out
stc
cmps
xchg
in
push
test
xchg
push
mov
in
out
scas
and
xchg
retf
mov
jbe
imul
push
pop
iret
fidivr
(bad)
rcr
xchg
xchg
jae
je
inc
mov
movs
mov
ret
call
and
cmps
jg
pop
out
and
mov
xor
dec
test
ds
scas
push
adc
test
outs
inc
stc
imul
int
pop
mov
pop
mov
cmc
sbb
inc
jae
cwde
or
div
adc
jns
push
je
push
retf
xor
lock
and
bound
pop
stos
xor
or
inc
fcom
dec
or
lods
fucom
push
mov
mov
xchg
push
inc
pop
scas
dec
adc
fadd
ret
jle
xor
push
pop
push
xlat
cmps
jae
mov
xchg
out
push
(bad)
aam
jbe
sbb
push
and
ins
lods
and
(bad)
inc
(bad)
ficom
cmps
lods
mov
dec
stos
lock
sub
repz
adc
pop
sub
or
popf
fwait
pop
mov
sbb
xchg
jmp
in
mov
push
and
mov
ins
push
jp
or
(bad)
mov
mov
inc
xchg
mov
(bad)
std
xor
rcl
inc
lds
mov
push
push
iret
mov
loopne
mov
dec
ror
shr
jge
jmp
xchg
aas
lea
lods
xor
das
int
mov
jo
mov
xchg
stc
pop
(bad)
adc
xor
pushf
sbb
mov
inc
mov
les
lods
adc
pop
ret
xor
jmp
jno
lods
pushf
push
lods
adc
push
sahf
in
out
sub
xlat
xchg
sbb
cmp
jmp
pop
sub
cs
(bad)
jl
in
lds
pop
and
sbb
fs
imul
popa
punpckhdq
iret
je
(bad)
cld
mul
pop
(bad)
sbb
shl
imul
jecxz
and
paddd
out
push
or
iret
push
ffreep
and
or
push
jbe
std
sahf
or
je
adc
or
mov
popa
fs
scas
in
add
sar
scas
sbb
push
into
enter
and
(bad)
jg
mov
sti
(bad)
pop
hlt
div
and
fistp
dec
push
or
sti
cli
ret
jnp
mov
das
ret
movs
xchg
cld
enter
out
adc
jbe
adc
(bad)
(bad)
les
js
enter
in
pop
sahf
ja
sub
mov
cld
ss
aas
sti
mov
enter
call
gs
clc
push
shl
xchg
popf
lods
xor
mov
jmp
retfw
shr
push
add
mov
xor
stos
mov
add
add
std
fst
sub
jbe
or
sbb
dec
sub
sub
inc
fld
jb
push
prefetchnta
mov
mov
dec
gs
mov
cmps
xchg
adc
jno
rol
popa
outs
test
dec
sbb
and
mov
(bad)
jmp
je
fcmovnbe
outs
mov
js
sbb
dec
arpl
xor
cmp
aaa
sub
inc
sbb
sbb
add
mov
nop
popa
pop
test
add
push
fist
mov
lahf
or
mov
or
imul
lds
ds
jo
rol
(bad)
dec
pop
scas
imul
jns
adc
lahf
sbb
retf
inc
leave
jae
ror
out
cmp
test
repnz
xor
jb
push
jg
ret
mov
arpl
in
movs
xor
cmp
out
xor
retf
dec
mov
inc
sahf
fmul
lahf
dec
or
sbb
lods
sub
cdq
jge
cmc
test
mov
push
(bad)
jne
mov
cmp
xchg
call
sbb
call
call
call
aad
cld
(bad)
(bad)
dec
pusha
jne
ins
lods
and
out
outs
mov
inc
dec
add
retf
inc
cli
sub
mov
mov
xor
in
mov
jl
iret
inc
pop
xchg
adc
dec
xchg
jo
fisub
sub
mov
or
es
sub
cdq
xchg
test
jb
mov
jp
popf
add
fucomi
cmp
mov
psraw
test
mov
xor
repnz
enter
(bad)
daa
pusha
sub
xchg
pop
in
mov
out
cmps
pop
ret
fld
sub
xchg
dec
sbb
aas
data16
fincstp
lds
cmps
dec
mov
sbb
adc
test
fsub
lds
std
mov
cwde
sbb
xchg
pop
sub
shr
sub
jns
pop
cmp
ss
ds
fwait
pop
sbb
inc
add
mov
inc
cmp
sbb
lods
jl
and
inc
outs
sbb
or
mov
pop
sbb
jae
push
or
jno
call
jg
rcl
mov
lea
pushf
arpl
(bad)
mov
mov
scas
nop
and
pop
scas
cs
int3
lds
test
leave
pop
sub
jl
adc
(bad)
sub
mov
out
(bad)
cdq
jp
lods
mov
or
pop
xor
push
cld
sub
lock
sub
cmp
xor
(bad)
out
shl
or
out
call
mov
enter
test
pop
xchg
mov
jmp
test
jo
adc
cmp
inc
sbb
aas
(bad)
mov
shl
mov
sub
and
data16
and
movs
pop
or
xor
inc
mov
sbb
popf
pop
push
jmp
dec
push
cmp
out
std
xchg
out
cmps
sbb
add
inc
ret
cmc
pop
aaa
hlt
push
movs
(bad)
outs
and
fadd
push
adc
loop
dec
inc
pushf
dec
sbb
es
imul
dec
std
xchg
mov
dec
sub
xor
fcomp
fisttp
sbb
adc
pop
sbb
sti
pop
sub
retf
call
push
xchg
leave
mov
js
xor
movs
inc
call
gs
cmp
stos
popa
pmaxsw
aaa
pusha
mov
in
imul
ret
ja
add
mov
addr16
sbb
xchg
add
adc
lds
xchg
test
cld
add
dec
out
outs
(bad)
mov
cli
fadd
adc
add
addr16
add
or
mov
dec
fild
cli
and
(bad)
pop
inc
push
popa
dec
fwait
leave
xchg
popa
imul
hlt
int
fiadd
popf
sub
jge
jg
mov
mov
push
retf
mov
mov
int3
and
push
fs
inc
les
call
xor
dec
rcr
iret
pop
popf
cld
inc
sbb
sub
sub
jmp
lods
(bad)
push
jnp
(bad)
fwait
es
adc
into
dec
sbb
mov
add
sbb
rol
iret
push
hlt
xchg
ror
push
add
bound
movs
and
sbb
imul
jecxz
and
inc
sbb
sbb
or
dec
add
out
fidivr
or
push
imul
sub
scas
push
movs
adc
xlat
mov
in
inc
ror
mov
test
cmps
push
pushf
mov
cli
push
xchg
xchg
mov
or
out
ja
xchg
(bad)
jmp
inc
and
fs
outs
cmc
popf
push
push
stc
pop
sub
add
fwait
daa
rcl
ja
das
mov
xchg
sub
cwde
and
mov
adc
push
and
retf
ins
test
mov
dec
pop
daa
test
sub
jmp
fsub
rcr
xor
push
fwait
jle
push
bound
icebp
xor
(bad)
mov
ins
mov
js
cmp
add
movs
xchg
add
es
retf
es
ja
mov
sub
sub
js
xchg
(bad)
ja
adc
add
adc
dec
and
sti
pop
rcr
int3
jecxz
pop
xchg
cmp
xchg
ss
jg
rcl
xchg
push
and
mov
mov
dec
cld
cld
jle
mov
xor
rcr
sub
iret
ins
xor
arpl
in
push
call
hlt
daa
fiadd
cmp
mov
arpl
mov
mov
mov
xor
out
es
adc
pop
xor
mov
fwait
dec
pop
je
mov
shl
sub
jecxz
(bad)
adc
hlt
push
push
shl
pop
mov
mov
data16
lds
cmp
outs
inc
xor
and
lea
outs
xor
inc
pop
in
adc
xchg
retf
mov
mov
fs
test
push
pop
push
dec
stos
add
xlat
jl
ss
movs
(bad)
pusha
mov
imul
popf
jo
ins
inc
lods
jle
push
ins
push
or
xchg
add
jae
loop
add
ret
loop
dec
sti
rcl
push
es
sbb
push
call
and
int
ins
ins
jne
(bad)
cmp
add
inc
cld
pop
ins
fild
or
sbb
inc
dec
sbb
sahf
cmp
movs
pop
push
pop
out
push
mov
sbb
sub
scas
fs
jae
mov
imul
add
push
retf
clc
sbb
fbstp
movs
imul
adc
dec
dec
in
adc
mov
loope
sub
xor
jg
cmp
sbb
adc
inc
push
in
pop
pop
paddq
shr
mov
(bad)
sti
sub
mov
or
inc
(bad)
push
push
jecxz
sub
test
mov
inc
ins
ja
cmp
daa
inc
enter
mov
push
pop
xor
int
push
jmp
imul
ja
sbb
xchg
dec
lea
stc
rol
pop
jno
mov
xchg
push
cmp
mov
sbb
cmps
lods
cmp
loopne
les
fdiv
loope
mov
sub
outs
pop
or
push
adc
adc
repz
fld
pop
loop
push
pop
mov
pop
cmp
out
popf
std
aaa
sub
in
cmp
pop
inc
xchg
in
or
aad
add
(bad)
or
jbe
push
xchg
lods
dec
jl
sub
sub
fwait
and
inc
retf
hlt
pop
mov
ds
cli
out
sbb
xchg
add
push
icebp
push
and
or
cmp
fs
icebp
dec
cmp
add
push
into
pop
out
xlat
pop
push
sub
cmc
pop
shl
dec
jae
mov
ds
mov
cdq
sbb
add
jbe
mov
call
pop
adc
inc
jmp
imul
adc
inc
xchg
lea
dec
div
inc
push
aam
in
sbb
pop
nop
and
push
bound
daa
mov
outs
retf
cmp
icebp
mov
jge
cmc
add
into
leave
cli
nop
cmp
adc
mov
dec
call
lock
bound
ins
shr
adc
or
pop
mov
or
adc
scas
jmp
(bad)
mov
sbb
imul
scas
jns
mov
inc
adc
cdq
mov
and
dec
sbb
mov
xchg
outs
push
push
nop
pop
xor
push
ins
sbb
inc
jle
std
mov
les
dec
stc
loop
adc
js
adc
jge
pop
jne
push
cmp
ins
mov
sbb
push
push
sub
mov
sbb
jp
mov
jmp
sub
mov
mov
and
or
jmp
xchg
shl
in
or
sbb
push
jp
imul
xor
loope
xchg
cmc
aad
fst
xor
in
call
sub
ins
xchg
mov
xor
or
fsub
mov
rcr
inc
sbb
lds
loope
pop
add
div
mov
inc
jle
das
mov
mov
outs
sub
or
cmps
and
inc
mov
sbb
gs
jl
push
call
sub
loope
jae
cs
data16
mov
sbb
ret
mov
dec
mov
fs
sub
out
test
jnp
repnz
clc
jmp
or
leave
out
retf
push
xchg
mov
jb
les
push
ret
pop
loop
push
fdiv
fiadd
fldlg2
inc
mov
outs
mov
shl
mov
lea
imul
jbe
sbb
repz
repnz
int
sub
or
aas
imul
mov
stos
cmp
and
neg
pop
xchg
xchg
loop
push
test
fidivr
loopne
out
ja
push
sub
xor
rcr
jecxz
pop
icebp
std
jno
push
pusha
(bad)
fnsave
dec
(bad)
cli
mov
dec
xchg
retf
ret
xchg
lods
shl
mov
and
sar
loop
rol
pop
rep
test
es
js
sub
mov
inc
or
mov
jecxz
add
xchg
adc
push
or
push
pop
imul
or
das
clc
clc
inc
inc
or
loop
sbb
loop
pop
inc
sar
push
push
fsub
ficomp
pop
pop
sub
imul
int
xor
and
imul
push
push
sti
push
sbb
popf
mov
mov
retf
xlat
jmp
test
dec
mov
ins
xor
or
movs
cmp
sbb
adc
xor
je
add
fsub
push
mov
inc
cmps
push
cmp
push
jno
adc
mov
or
xor
fistp
fisubr
and
add
shl
add
push
mov
jbe
sbb
aam
out
sahf
push
pop
mov
push
pop
dec
sbb
ret
movs
add
pop
add
frstor
retf
fwait
cmc
jae
and
and
popa
sbb
pop
test
inc
cmp
dec
jae
add
jecxz
dec
mov
adc
call
sub
mov
test
mov
cli
je
mov
arpl
arpl
in
fmul
lods
mov
stc
cmps
add
iret
cdq
xor
shr
mov
add
mov
cmp
add
pop
fcmovu
jnp
int
jmp
xchg
xchg
lods
jb
push
test
fimul
push
adc
jne
dec
adc
clc
in
popf
mov
push
sub
int
(bad)
mov
xchg
int
repnz
inc
sbb
mov
mov
push
ret
cs
cmp
and
js
lahf
mov
push
aam
int3
cld
lahf
adc
push
add
mov
mov
inc
and
icebp
(bad)
jae
pop
pop
mov
lods
pop
sbb
icebp
lock
mov
aaa
cdq
inc
and
call
pop
and
je
mov
into
pop
inc
sbb
stos
in
jb
cdq
mov
ret
stos
inc
das
sub
adc
dec
mov
mov
jl
je
lea
shr
xlat
sub
out
mov
sahf
cmc
repnz
mov
lock
xor
mov
push
sub
stos
push
inc
fs
push
sti
mov
adc
and
rcr
rcl
ror
cmc
(bad)
into
stos
or
jbe
mov
daa
adc
scas
aad
adc
icebp
pop
out
lea
dec
lds
vrcpps
in
aad
mov
adc
jmp
cmp
jbe
cmp
(bad)
popf
shl
pop
stos
fisubr
add
adc
dec
add
mov
pop
arpl
or
call
or
mov
icebp
lods
jecxz
pop
stc
mov
call
lea
cwde
jmp
iret
xor
push
ins
push
and
mov
adc
or
mov
adc
mov
mov
movs
adc
cs
lods
mov
sar
cmp
inc
shr
fwait
xchg
leave
test
scas
mov
pop
test
mov
push
xchg
add
adc
jmp
ja
ins
inc
les
jb
pop
inc
mov
pushf
push
in
and
or
xchg
in
adc
out
repz
push
faddp
and
xor
aad
xchg
pushf
sub
sub
movs
dec
add
enter
ss
cmp
test
fcmovnbe
mov
jbe
(bad)
pop
rol
jne
outs
xchg
pop
jle
pop
push
arpl
dec
cmp
scas
add
mov
or
jge
ins
hlt
cmp
cmp
cmp
mov
int3
xor
sub
jae
in
push
pop
popf
xchg
stos
jno
push
push
cs
clc
or
push
cdq
mov
int
lock
or
inc
out
repz
jns
mov
retf
popf
out
pushf
add
mov
movs
and
xchg
xor
xchg
nop
shl
xchg
sbb
or
add
push
imul
cli
cmp
jl
sbb
in
mov
sbb
cmp
pop
push
pop
add
pop
test
jge
das
stc
stos
push
jns
xchg
xchg
(bad)
mov
test
jne
add
cmp
push
xor
int3
dec
dec
imul
xor
rol
push
cmps
arpl
iret
loopne
dec
pop
jo
iret
aad
iret
pop
and
adc
adc
ret
inc
daa
ret
es
mov
popa
xor
ins
and
into
in
mov
xchg
pop
cmps
and
mov
jbe
call
inc
or
movs
inc
or
mov
pmulhw
xchg
cld
repz
(bad)
fsub
xchg
cmc
scas
pop
in
call
fdiv
stos
inc
clc
lds
rcr
add
push
add
fild
xor
stc
scas
add
repz
cmc
jmp
loopne
adc
retf
xchg
push
xor
add
cwde
inc
and
sub
xor
inc
inc
push
pop
inc
xor
jle
fistp
and
jle
xor
mov
lea
xor
xor
cmc
mov
dec
es
psubd
xchg
(bad)
jmp
cdq
or
mov
out
jle
ds
xor
mov
shl
out
ds
jne
clc
dec
dec
cmp
scas
repz
sub
xlat
jecxz
mov
push
adc
out
clc
xor
jg
in
inc
sbb
in
cwde
jl
add
adc
int
push
mov
mov
sbb
pop
jo
dec
mov
push
sha256msg2
add
nop
out
jg
cdq
mov
adc
inc
mov
loope
retf
sbb
cmp
xor
(bad)
iret
test
stc
gs
dec
mov
cmp
xor
pop
cmp
mov
mov
xchg
pusha
in
jne
mov
je
sub
xchg
xchg
jecxz
push
daa
adc
or
lea
inc
jp
cmp
arpl
ins
call
add
or
or
or
xchg
rcr
in
mov
inc
push
test
in
out
mov
mov
test
mov
and
push
add
xchg
data16
data16
jmp
in
or
adc
sub
gs
jbe
or
cwde
fnstsw
push
mov
shl
pop
dec
sub
sbb
mov
inc
pop
mov
and
test
push
jbe
sbb
ins
aam
nop
in
inc
jns
call
mov
inc
call
jno
adc
jmp
and
cmp
movs
shl
sbb
pusha
clc
push
jge
lock
jp
inc
lock
lea
and
div
test
add
mov
adc
(bad)
(bad)
sub
pushf
push
(bad)
shr
cmc
or
add
sub
mov
out
out
xchg
pushf
or
scas
mov
mov
push
mov
xchg
jne
popa
sbb
hlt
dec
int
call
cmp
pushf
push
xchg
jp
gs
pop
fnsave
dec
loope
repz
aad
cmp
(bad)
movs
in
outs
std
je
push
mov
lds
(bad)
sbb
pushf
xchg
sahf
xchg
ret
int3
jo
cmp
inc
jmp
mov
popa
out
data16
std
fidivr
pop
dec
or
mov
cmc
inc
pusha
inc
daa
ins
pop
shl
cmp
retf
dec
push
xchg
xchg
hlt
jae
xchg
jg
scas
add
inc
fst
sub
cmps
rcl
and
jmp
loopne
push
inc
mov
adc
mov
aas
int3
es
sub
fwait
inc
push
adc
test
jle
sahf
pop
fucomip
out
test
inc
ror
sbb
cdq
aam
or
je
add
fxch
fild
dec
(bad)
sbb
ror
arpl
in
dec
imul
xchg
mov
xchg
mov
xchg
iret
sub
aas
mov
mov
ret
jo
call
int3
popa
and
mov
lods
lahf
xchg
inc
jns
jmp
stos
cmp
or
mov
js
enter
push
mov
jg
push
jmp
adc
push
pop
push
pop
sub
gs
pop
sbb
and
jp
mov
iret
int3
retw
adc
xchg
pop
mov
imul
xchg
pop
in
fwait
and
mov
mov
out
dec
and
adc
out
sahf
push
pop
gs
and
jg
push
mov
pop
add
jmp
ins
pusha
inc
fwait
cmps
loope
xchg
xchg
ds
push
les
push
mov
repnz
cmps
jmp
out
dec
dec
rol
cmp
pop
mov
scas
jae
adc
mov
lahf
mov
pushf
popf
and
popfw
xor
test
push
addr16
push
xchg
pop
mov
shl
(bad)
sbb
sub
mov
jne
outs
mov
pushf
popa
test
jae
fld
mov
fs
pushf
mov
retf
mov
call
inc
clc
xlat
xchg
ins
sub
mov
rcr
mov
loopne
in
pop
test
xchg
dec
addr16
(bad)
fisttp
or
add
sub
or
jp
add
retf
cdq
sub
xor
jmp
ins
rol
sbb
adc
ja
call
or
mov
mov
inc
rcl
gs
adc
cs
mov
pop
movs
jno
imul
lock
arpl
jmp
inc
stos
outs
popf
sbb
shl
mov
cmp
(bad)
in
jp
cmp
in
(bad)
call
dec
sti
bound
pop
cmp
stc
aaa
jecxz
mov
jge
push
push
jge
xchg
pop
mov
add
pop
neg
jne
cwde
pop
xlat
push
std
adc
cmp
cmp
inc
ja
xor
jmp
adc
push
out
cli
test
mov
sbb
shl
pop
ror
xchg
xor
mov
push
outs
inc
mov
iret
xchg
in
jp
sub
cmps
fistp
mov
enter
lea
jmp
jno
add
pushf
sub
inc
jmp
jo
cmp
out
adc
mov
dec
std
push
retf
or
icebp
mov
xchg
mov
pusha
xor
cs
test
mov
je
std
mov
imul
jae
fiadd
lods
ss
int
in
inc
imul
or
(bad)
adc
push
jp
jno
cs
mov
out
pop
cmp
xchg
call
(bad)
cmp
or
js
sbb
jp
retf
je
and
xchg
aam
fwait
mov
ror
xor
lds
mov
dec
ins
adc
xchg
adc
mov
jns
inc
inc
xchg
dec
shr
loop
(bad)
sahf
xchg
sahf
xlat
(bad)
loope
push
sub
add
push
gs
inc
out
popa
sbb
sub
fild
int3
fmul
mov
push
cmp
jno
les
repnz
add
inc
cs
cld
sbb
mov
in
adc
sbb
jp
(bad)
jne
shl
pop
je
push
inc
test
mov
xlat
add
xchg
xor
and
mov
into
mov
sub
mov
rcr
sub
(bad)
mov
or
pop
sub
call
loopne
movs
add
xor
cmp
cli
mov
pop
(bad)
cmp
(bad)
jnp
es
xor
sti
mov
test
xor
add
or
xchg
xor
mov
xchg
stc
cs
pop
jecxz
sub
fs
aad
sub
cmp
jg
add
sub
cmp
mov
cs
popf
dec
clc
push
add
xchg
mov
mov
mov
sbb
add
outs
dec
or
cmps
loop
mov
mov
xor
sahf
imul
ja
add
fwait
and
mov
lds
or
adc
or
jmp
(bad)
imul
arpl
adc
test
enter
mov
mov
in
mov
adc
or
iret
lahf
shl
sbb
pop
aad
cmp
xlat
and
dec
into
inc
inc
cmps
xchg
mov
neg
and
jl
inc
test
scas
inc
mov
and
add
call
(bad)
std
sub
sbb
adc
cmp
xor
pusha
jp
inc
adc
mov
sbb
or
jle
ja
pop
or
ds
ds
pop
ret
cmp
loope
pop
fstp
out
jp
sbb
fwait
push
add
xchg
push
and
sub
jbe
enter
jae
add
dec
pop
sub
das
add
or
jg
mov
pop
mov
lods
or
jg
loope
retf
idiv
jo
add
sahf
push
call
sub
nop
sar
sub
lahf
jae
push
jae
push
shl
mov
ds
fnstcw
pop
jecxz
jge
(bad)
(bad)
xlat
popf
pop
imul
jae
jno
cmc
dec
sbb
clc
inc
retf
ja
xchg
adc
outs
std
imul
aad
jae
test
pop
adc
repz
push
pop
sub
inc
fsubr
sar
test
jo
xchg
inc
in
jno
scas
in
push
inc
xor
cmps
or
inc
mov
cmp
fyl2x
test
mov
or
inc
es
and
call
mov
scas
mov
pop
dec
push
stos
cdq
out
cmp
mov
mov
ins
push
out
imul
mov
pop
push
pop
sub
aas
mov
jp
jns
fincstp
js
jl
(bad)
popa
mov
mov
data16
push
mov
xchg
dec
inc
dec
inc
jmp
pop
sbb
call
stos
fisttp
add
jns
jg
cmp
push
call
call
or
push
sub
cmp
sbb
cmps
mov
loop
or
pushf
or
xor
cmps
mov
pop
aas
cld
js
sbb
fild
test
and
xchg
pusha
mov
sbb
sub
daa
mov
sqrtps
or
mov
pop
mov
push
popa
test
retf
xor
push
sbb
ds
mov
in
dec
ss
bound
arpl
scas
or
cmp
xchg
adc
xor
adc
inc
(bad)
loope
loope
movs
dec
push
icebp
retf
xchg
mov
popa
neg
mov
jo
mov
cmp
lea
aas
add
cmp
push
int3
mov
jmp
pusha
or
xor
stos
jmp
inc
or
js
cmc
push
int3
and
xor
mov
pop
stos
pop
pop
test
sbb
mov
lahf
inc
add
mov
into
jmp
and
in
fisub
or
fmul
loop
dec
jg
movs
xor
pop
ficomp
pop
js
xor
xchg
fistp
rcr
or
mov
je
sub
test
lods
inc
adc
ret
std
xchg
or
mov
je
(bad)
inc
std
aad
rol
or
js
test
stc
shl
xlat
out
into
or
test
cwde
dec
cmc
mov
jg
aas
(bad)
mov
inc
cmc
clc
mov
test
(bad)
outs
popf
xchg
dec
jecxz
dec
push
cmp
test
inc
mov
out
adc
retf
leave
out
icebp
call
cmp
cmps
fisub
outs
das
test
int3
push
and
mov
mov
jmp
xchg
cmps
inc
sbb
gs
xor
out
das
loopne
aam
loopne
setae
sub
push
fild
dec
sub
ins
mov
(bad)
retf
pop
jbe
enter
out
ss
pushf
pusha
add
pop
sbb
pop
cmps
xchg
sub
scas
ds
dec
mov
jno
imul
jae
loope
cmps
cwde
mov
push
inc
mov
mov
jmp
dec
test
dec
imul
aad
fisubr
add
jle
and
call
push
xchg
retf
cwde
mov
cmps
mov
jno
mov
test
cmp
push
nop
cld
mov
and
mov
mov
mov
pop
ins
push
or
cld
hlt
xlat
sti
bound
cmps
imul
add
cli
xor
and
cmps
push
cmp
mov
fsubr
sub
jmp
jo
fidivr
xchg
push
lock
pop
imul
fcomp
leave
icebp
mov
add
pop
dec
out
fisttp
rep
sbb
icebp
stos
jnp
aam
enter
int3
add
add
popf
jmp
out
aam
jecxz
(bad)
cmp
ss
aaa
int
xor
int
sub
rcr
add
sti
add
ret
ror
xchg
add
jae
pop
jnp
aas
pusha
lods
pop
sbb
add
cmp
inc
or
test
xor
rol
push
popf
aad
jecxz
cli
ret
jbe
mov
xchg
jb
xchg
and
xor
inc
ss
mov
adc
sbb
movs
sbb
xchg
scas
xchg
jg
mov
rcr
dec
cmp
inc
cmp
dec
push
les
xchg
ret
xor
cmp
cmp
ret
cmp
cmp
xchg
mov
mov
push
or
and
sub
rcr
ja
imul
sti
pop
pop
adc
rol
ins
jns
addr16
call
xor
movs
push
iret
dec
lock
jmp
jl
stos
into
mov
in
scas
inc
pop
inc
(bad)
dec
push
mov
sbb
(bad)
shr
cmc
movs
inc
dec
push
inc
retf
int3
inc
arpl
and
mov
cmp
test
cmp
dec
fldenv
lahf
mov
jle
mov
stos
retf
jp
push
(bad)
and
and
lea
mov
mov
xchg
or
lea
mov
and
push
push
mov
pop
xchg
xor
push
ins
fsub
dec
add
or
push
(bad)
sub
popf
fwait
into
push
jmp
(bad)
arpl
into
shufps
xchg
pushf
inc
sbb
cld
retf
add
out
jmp
(bad)
mov
push
xor
adc
out
jg
or
xor
cmp
mov
jnp
or
pop
mov
mov
jmp
mov
cdq
sti
pop
mov
jecxz
scas
retf
dec
mov
rcl
cmp
mov
mov
mov
add
retf
jbe
sbb
pop
jmp
out
sub
fsub
fsubr
out
ret
(bad)
sub
(bad)
push
pop
stos
sub
jnp
mov
mov
shr
inc
mov
mov
xlat
dec
add
pop
mov
sub
mov
loope
dec
into
adc
lds
push
shr
sar
ficomp
ins
(bad)
aas
and
dec
scas
sub
call
scas
loopne
aad
pushf
icebp
push
inc
(bad)
not
ins
or
jo
adc
inc
or
and
ret
into
test
jno
outs
cmp
sbb
inc
cmp
(bad)
cmp
mov
cld
add
in
cli
loop
int
(bad)
loop
ds
fadd
push
lods
jno
inc
movs
sub
clc
adc
add
jle
sub
lock
stc
not
inc
jecxz
dec
push
fnstcw
cmp
inc
popa
push
js
popf
sbb
add
ins
fist
data16
mov
push
(bad)
cmp
cmp
in
or
adc
fchs
xchg
or
aad
or
mov
cmc
mov
dec
jecxz
(bad)
sbb
jl
scas
jno
push
xchg
test
cmc
xchg
repnz
in
cwde
and
hlt
out
loopne
xor
(bad)
fs
enter
outs
mov
ins
mov
sub
cmp
mov
fxrstor
lock
jo
push
lock
jbe
into
cmps
dec
mov
sub
add
dec
inc
out
aam
sbb
clc
cld
scas
aaa
and
fld
dec
add
dec
sti
fwait
push
or
sbb
xchg
gs
imul
xchg
mov
xchg
and
mov
ins
(bad)
(bad)
cmp
(bad)
retf
cmp
call
sbb
mov
pop
sub
xor
jb
add
sub
cld
mov
jmp
push
aas
push
jp
mov
loop
jae
loope
in
mov
ins
adc
mov
mov
cmp
sbb
sahf
cmps
cdq
and
mov
sub
repnz
dec
sub
loop
adc
cdq
inc
lods
addr16
mov
mov
push
fmul
dec
and
xchg
dec
push
jl
xor
sbb
std
push
push
test
jae
dec
fnstenv
gs
mov
(bad)
idiv
pop
inc
stc
mov
inc
mov
jns
clc
scas
or
inc
(bad)
mov
out
ficomp
leave
jns
loop
fst
mov
out
xchg
pop
xor
inc
and
ins
popa
cmps
call
sub
imul
clc
inc
ror
ret
mov
loopne
push
dec
rcl
das
push
jnp
enter
pop
adc
xor
jp
call
out
imul
test
sar
jns
clc
fs
and
xchg
xchg
mov
jl
aam
cmp
push
xchg
cmp
dec
lods
mov
scas
push
jl
cmp
push
inc
jmp
mov
push
xchg
or
outs
and
xchg
jl
jmp
cmp
dec
xor
or
mov
rol
sbb
cmps
ss
call
popa
cmp
mov
sub
call
ds
out
cmp
mov
or
ja
jg
cmp
adc
xor
mov
ret
mov
push
cmp
and
lea
dec
push
out
into
sbb
mov
ins
or
stos
shl
test
mov
jbe
mov
aad
stos
inc
cld
ret
(bad)
jbe
ret
fild
call
jmp
call
(bad)
push
adc
inc
(bad)
addr16
or
dec
(bad)
out
sti
xchg
(bad)
scas
inc
xor
cmp
push
iret
repz
je
push
mov
sub
imul
ficom
leave
popf
or
not
dec
in
loop
jo
sahf
mov
call
pop
rcl
jae
div
add
sub
gs
mov
daa
cwde
cmp
sahf
adc
sbb
rol
jmp
outs
adc
xor
js
repnz
mov
je
stc
xchg
jecxz
pop
movs
push
adc
adc
mov
pop
popa
fwait
out
push
or
mov
cwde
jb
mov
xchg
jbe
(bad)
xchg
add
clc
xor
pop
loope
mov
jno
movs
inc
mov
daa
out
xchg
nop
popa
cwde
in
inc
jb
push
cld
ja
int3
sti
sbb
add
adc
repnz
sub
aas
(bad)
test
add
pop
mov
dec
jae
mov
jge
outs
and
push
push
in
fs
xchg
cmp
dec
inc
in
pop
or
mov
or
je
push
lods
or
sub
test
fs
dec
sub
push
sahf
push
mov
test
mov
sub
rol
jl
mov
jp
aam
xchg
aas
push
je
dec
repnz
jmp
lea
cmp
mov
push
aas
mov
fsub
xor
or
dec
call
pop
cli
rcl
mov
jmp
pop
xchg
(bad)
(bad)
jae
pop
sbb
std
retf
ins
push
enter
ja
mov
mov
lods
out
(bad)
in
inc
push
js
jmp
ror
pop
cmp
adc
add
arpl
pop
xor
xor
ja
cmp
dec
lahf
cmps
pop
shl
ja
cwde
sbb
pop
dec
sub
push
cld
retf
push
sar
fstp
int3
adc
in
xchg
mov
pop
sub
addr16
fild
add
mov
test
retf
lds
or
dec
test
jmp
add
pop
and
icebp
dec
ins
mov
xchg
shr
data16
ror
xchg
fcmovnu
push
pop
in
lahf
xchg
leave
(bad)
fs
dec
das
adc
cmps
fucomp
inc
and
xchg
or
cmp
and
pop
fild
jmp
or
in
mov
leave
sub
mov
adc
mov
inc
das
popf
lods
pop
mov
xchg
jecxz
and
(bad)
or
fbld
push
cs
dec
pusha
mov
test
or
pop
popa
popf
cmp
dec
(bad)
cmove
mov
js
cmp
into
add
mov
cli
stos
jno
mov
or
push
push
xchg
mov
clc
outs
dec
sbb
sbb
sahf
or
imul
and
xor
adc
movs
dec
dec
adc
mov
jne
jne
hlt
pop
jmp
(bad)
ds
mov
xlat
sub
aad
sti
imul
mov
dec
or
repz
lea
or
add
xor
retf
push
nop
add
(bad)
neg
cmp
int3
jp
sbb
push
shr
(bad)
shr
lods
push
aad
pop
adc
imul
mov
movs
imul
test
mov
and
loope
pushf
test
int3
aam
dec
push
ja
pop
repz
mov
ret
ja
test
out
fwait
movd
mov
push
push
stos
pop
bound
lock
dec
or
aam
sti
push
sub
div
rcl
or
cmp
xor
mov
jle
cmc
mov
lock
mov
icebp
shr
sbb
mov
adc
std
dec
dec
dec
xchg
or
push
pop
sbb
retf
jg
scas
loopne
push
loope
sahf
(bad)
daa
push
sub
dec
in
mov
xchg
cmp
xchg
(bad)
sub
sbb
push
repnz
test
sbb
call
xor
pop
jecxz
pop
stos
shl
xchg
arpl
leave
out
lahf
rol
in
add
js
aam
out
nop
in
jb
add
pop
in
lds
jecxz
inc
loop
leave
pop
stos
shl
add
mov
mov
fcomp
cld
dec
scas
dec
leave
jg
sbb
imul
or
cmps
div
or
add
lods
sub
leavew
mov
pop
mov
fiadd
cdq
xchg
jbe
je
int3
out
jne
and
sbb
ins
lea
cmps
inc
dec
mov
pop
xchg
adc
hlt
xchg
js
out
mov
out
test
shr
dec
push
jmp
fidiv
mov
push
(bad)
adc
xchg
outs
cmp
push
movd
dec
in
adc
int3
cmps
add
popf
pusha
mov
push
jae
mov
or
out
popf
int3
push
shl
fsub
call
inc
xchg
xchg
jmp
retf
aad
jge
jnp
adc
pop
popf
or
and
xchg
clc
mov
clc
add
shl
xchg
jl
push
pop
mov
pop
pop
inc
jb
hlt
cmp
mov
pop
sub
sub
pop
xor
jb
mov
jge
lahf
xchg
mov
rcl
mov
jo
push
sub
(bad)
jbe
pop
and
pop
push
(bad)
in
add
xchg
pop
aad
xchg
dec
not
inc
jp
(bad)
outs
call
mov
or
mov
add
sti
fist
pusha
out
test
fwait
jp
cmp
xor
iret
arpl
cmp
imul
rcr
xchg
popa
and
adc
jge
in
loop
les
inc
movs
and
popf
jecxz
outs
cmps
and
inc
hlt
or
adc
leave
test
jno
fbstp
or
or
inc
ret
test
sbb
xchg
adc
cmps
cld
jmp
add
cmps
mov
pop
add
scas
mov
mov
adc
clc
sbb
mov
adc
aam
stos
repnz
dec
out
test
lahf
push
shl
shl
gs
ss
pop
outs
push
das
and
int
aad
pop
push
jne
lods
dec
repnz
pop
lods
stc
add
mov
not
jmp
push
and
loope
inc
fwait
and
out
push
pushf
xchg
sub
mov
mov
dec
outs
aas
in
pop
xchg
pop
cmp
pushf
pop
push
retf
push
test
in
pop
shl
(bad)
cmp
call
(bad)
cmc
movs
mov
push
mov
lea
test
cld
cmp
pop
add
push
dec
push
lea
les
aad
(bad)
cmp
out
cmp
inc
repnz
ret
inc
mov
mov
stc
lahf
test
mov
iret
mov
pop
stos
(bad)
fnsave
ja
movs
xlat
push
(bad)
pop
test
out
ja
mov
ret
in
mov
adc
xor
adc
push
inc
in
sti
mov
sbb
je
retf
add
ror
dec
shr
mov
test
add
xor
adc
mul
mov
mov
add
pop
mov
mov
xor
fsub
js
hlt
lods
jmp
nop
mov
lods
xchg
out
retf
mov
sbb
push
pusha
jecxz
sub
fwait
cs
inc
jne
adc
ror
pop
dec
loop
push
imul
je
jo
(bad)
adc
adc
aaa
shl
push
mov
ins
hlt
mov
stos
pop
cmps
push
fs
int3
pop
loopne
shl
mov
push
mov
arpl
ror
or
push
or
xor
mov
mov
add
or
scas
sub
mov
jbe
lods
or
retf
cmp
ja
push
das
adc
fistp
lock
push
dec
push
xor
icebp
push
adc
mov
jmp
adc
mov
xor
(bad)
fadd
jge
mov
push
cmps
stos
out
add
push
jg
lods
pop
dec
test
test
clc
loopne
cmps
or
push
in
and
sbb
push
shr
adc
add
and
cmp
mov
xor
cmpps
inc
das
sbb
xor
scas
xchg
adc
pop
enter
sbb
mov
outs
pop
jne
inc
sbb
popf
retf
adc
stos
and
mov
xor
add
xchg
int
cli
cmp
jo
out
jnp
fdiv
jle
add
jg
add
stos
push
gs
scas
ror
lea
pop
loop
mov
imul
pop
or
inc
mov
dec
xchg
adc
shl
jmp
fmul
es
in
std
mov
movs
mov
ret
jbe
mov
ins
inc
iret
mov
ss
clc
add
cwde
adc
adc
xchg
in
in
push
(bad)
and
and
cld
mov
pusha
aas
push
dec
jmp
popa
stc
or
xor
add
xor
adc
loopne
cmp
xchg
movs
cmps
pop
js
push
add
xchg
in
scas
int3
pop
jnp
cmp
sub
push
mov
retf
scas
cmp
push
nop
pop
sbb
pop
aas
add
add
cmp
pop
mov
test
mov
ins
or
gs
push
cmp
or
inc
dec
call
cmc
xchg
add
pop
adc
mov
mov
cmp
mov
sti
ret
sbb
xor
mov
repnz
mov
mov
retf
(bad)
cmp
mov
pop
gs
dec
call
mov
push
inc
pop
inc
jb
arpl
stos
in
sbb
ds
mov
and
xor
add
sub
mov
mov
lock
dec
inc
stos
add
fcmove
bound
idiv
pop
adc
cmp
push
xor
ret
mov
mov
lods
hlt
fimul
jmp
mov
jmp
loopne
scas
test
ret
cmp
outs
or
arpl
add
and
lahf
and
(bad)
cmp
push
xchg
push
mov
or
leave
pop
push
imul
jmp
jb
and
call
xor
inc
and
loop
dec
mov
in
or
or
cld
cwde
test
ror
cmps
fdivr
(bad)
in
rcr
add
nop
push
outs
gs
shr
sbb
clc
add
cmps
(bad)
push
push
jp
mov
jne
pusha
jbe
pusha
frstor
push
mov
dec
sub
push
and
call
cmp
sub
dec
jge
ret
mov
sbb
adc
rcl
cmp
clc
push
push
ret
sub
jmp
js
push
mov
outs
sbb
inc
dec
xchg
mov
sub
jne
outs
mov
leave
inc
imul
call
pop
add
push
in
fcmovne
and
dec
cmps
pop
jg
push
cmps
stos
mov
dec
push
shl
xor
jecxz
mov
stos
dec
inc
stos
es
inc
pop
cmp
push
dec
and
movs
fcomp
aam
test
push
mov
mov
xchg
and
std
leave
jmp
cs
repnz
repz
add
adc
pop
dec
cmp
sub
mov
adc
pop
scas
(bad)
test
retf
inc
cmps
mov
or
scas
push
mov
sub
ss
aaa
cmp
fs
fld
int3
jns
pop
pop
adc
sbb
imul
push
daa
push
mov
ret
prefetchnta
lahf
push
popa
daa
(bad)
push
adc
hlt
jnp
ror
outs
aaa
xchg
(bad)
xor
test
inc
int
pop
lds
movs
dec
xor
movs
jg
int3
std
push
mov
xlat
test
sar
pop
dec
(bad)
je
cld
fidiv
ficomp
push
or
(bad)
push
scas
pop
aas
outs
add
sub
or
scas
mov
mov
sahf
dec
cwde
ins
mov
arpl
dec
xchg
cdq
fmul
cmps
mov
add
xchg
dec
aaa
int
outs
pusha
mov
adc
loop
fisttp
js
and
lahf
test
int3
fst
sbb
dec
stc
sbb
test
jg
ret
sbb
les
pop
sahf
mov
stos
in
xor
jmp
ins
jle
test
xor
ss
lea
push
or
in
fcom
sub
jb
jge
sub
pop
stos
pop
push
push
or
rol
in
xor
jno
mov
adc
(bad)
mov
lock
fld
sbb
xor
loop
cmps
xchg
je
fucomip
pusha
xchg
add
arpl
push
stc
inc
gs
or
outs
(bad)
fldcw
push
jne
inc
or
or
div
pop
je
(bad)
movs
xchg
cmp
cmp
into
sbb
ja
rcr
inc
retf
clc
das
pusha
cmp
in
fnstsw
out
outs
test
sbb
inc
adc
mov
cmp
stos
mov
cmp
scas
jmp
cmp
sti
push
test
sub
adc
or
repnz
xchg
adc
mov
je
icebp
ins
adc
or
add
sbb
test
add
stos
cmp
adc
inc
jl
push
jl
aad
and
ja
ds
xchg
jns
or
sub
inc
push
dec
inc
gs
js
retf
test
je
mov
ds
mov
inc
ins
in
pop
(bad)
shl
push
mov
pop
cwde
cmp
pop
mov
enter
mov
mov
loopne
or
inc
cmp
pop
sbb
loop
cmc
es
push
xchg
inc
fldcw
mov
cmp
dec
and
mov
sub
int
retf
in
dec
daa
mov
xchg
adc
sbb
or
mov
pop
cmp
sahf
dec
lahf
fcomp
mov
hlt
cs
mov
push
dec
loop
clc
sbb
test
dec
ficom
push
in
dec
jns
push
sbb
sbb
fnsave
cdq
out
cmps
sti
or
data16
out
add
mov
push
sar
push
jb
xor
xchg
es
cdq
sbb
call
(bad)
xchg
rol
mov
(bad)
out
jae
pop
cmp
xchg
add
fist
xchg
popf
mov
es
cmps
out
shr
(bad)
sbb
sub
jbe
ins
xchg
cmp
cmp
add
xchg
xchg
mov
add
cmp
and
(bad)
es
add
mov
mov
ret
data16
jo
cwde
idiv
outs
jbe
push
loope
mov
(bad)
jp
rcr
fwait
jmp
js
and
jp
(bad)
jmp
nop
scas
mov
test
hlt
cmp
loop
sbb
xchg
push
lods
loop
adc
or
js
movs
inc
xchg
dec
inc
jb
test
pop
xchg
jmp
dec
ja
pop
lods
out
in
fstp
rol
dec
in
cmp
(bad)
cmp
cwde
xchg
jmp
repz
into
enter
pop
adc
loopne
sbb
test
or
push
jge
ret
jmp
(bad)
jne
pop
cmp
xchg
jno
cmp
xchg
xor
xchg
mov
push
push
loopne
xchg
data16
(bad)
sub
jmp
in
mov
add
add
cwde
leave
scas
mov
xchg
mov
sub
jmp
(bad)
rcl
not
or
xlat
enter
xchg
inc
std
movs
js
fild
out
je
adc
test
and
lods
dec
rcl
xlat
sbb
loop
jmp
fucomi
and
icebp
add
(bad)
in
or
stos
fnstcw
ret
adc
or
call
jg
xor
dec
push
ffreep
cmc
cmp
xor
or
out
icebp
push
in
push
dec
test
sub
adc
mov
rcr
or
dec
xor
dec
push
sar
(bad)
shl
sub
into
push
test
je
xor
addr16
cmp
lea
mov
sti
pop
mov
sub
dec
jno
jne
xor
fisub
xor
out
jle
imul
movs
xor
scas
and
adc
pop
daa
cld
fdiv
mov
pop
in
fcom
ss
inc
push
adc
clc
sub
push
imul
xor
pop
pop
xlat
push
mov
sbb
xor
jo
and
jle
pusha
xchg
(bad)
push
cmp
push
adc
add
lock
arpl
push
dec
mov
loop
shl
add
push
ins
jecxz
leave
or
test
ja
or
jmp
popf
mov
ficom
mov
dec
mov
xchg
pusha
mov
out
cld
jae
(bad)
pop
outs
nop
fcomi
hlt
xchg
inc
mov
inc
push
mov
pop
cmovo
mov
neg
dec
neg
mov
mov
cmps
je
dec
mov
fnstenv
out
out
xchg
add
cmc
dec
loop
mov
inc
cmp
sub
sub
push
xor
adc
mov
pushf
js
jl
imul
dec
jp
cmp
imul
enter
jnp
cmp
xor
adc
pop
les
or
mov
or
jmp
out
adc
add
nop
mov
jp
dec
js
mov
in
or
pop
mov
jmp
lock
mov
imul
imul
ret
ss
pop
add
ins
or
(bad)
loope
iret
outs
inc
pop
and
iret
push
imul
lods
nop
sub
jb
(bad)
test
je
ins
jl
lods
add
int
sub
or
sbb
test
push
mov
pop
jle
sar
cld
cmp
ins
outs
cmp
push
into
dec
leave
mov
test
and
adc
rcl
xchg
pop
daa
inc
std
clc
mov
nop
xchg
push
outs
xchg
shl
push
xchg
push
xchg
mov
add
jg
ins
loope
mov
xor
call
out
popa
rcl
xor
pusha
xor
(bad)
dec
mov
ror
adc
(bad)
bound
stos
(bad)
dec
dec
cmp
push
out
clc
jmp
loope
lock
not
add
rcr
repnz
mov
pop
loopne
adc
mov
gs
cmps
cdq
int
mov
mov
test
das
jmp
jns
ja
mov
movaps
(bad)
ins
mov
inc
and
xchg
out
out
(bad)
les
rcl
mov
leave
out
pop
inc
push
sbb
pop
sub
add
lock
adc
call
push
es
fwait
imul
in
addr16
inc
mov
inc
out
out
add
xchg
sub
leave
sbb
or
push
sbb
shl
dec
sbb
xchg
fisub
cwde
mov
in
pop
cmps
cdq
(bad)
aad
pop
arpl
lea
stos
(bad)
sti
arpl
mov
nop
fnsave
xor
into
mov
sbb
pop
cmc
aas
mov
sbb
sbb
jb
scas
lahf
fstp
xchg
mov
xor
pop
or
push
ss
mov
ins
xlat
lods
call
or
enter
fs
sub
pop
or
pushf
mov
sahf
sub
xor
cli
and
mov
mov
sbb
loop
xchg
jmp
retf
mov
cmc
dec
movs
sbb
xlat
shl
lahf
cmp
int
dec
jmp
or
data16
xchg
xor
fs
rol
(bad)
ins
push
add
xchg
ret
cdq
jmp
mov
jnp
pop
mov
fs
pushf
sar
fcomp
pop
je
scas
xchg
mov
test
and
leave
xchg
stc
sbb
in
mov
cmps
lock
sbb
std
push
sub
punpckhwd
mov
adc
jmp
push
mov
xchg
loopne
ret
aas
xchg
mov
outs
repnz
fsub
aaa
jne
cwde
inc
push
xor
mov
xchg
in
push
and
inc
fwait
int
pop
js
mov
push
lds
xchg
mov
cs
or
adc
inc
xor
sbb
imul
push
(bad)
xchg
fsub
push
daa
jge
into
movs
retf
callw
pop
jne
loope
mov
stc
hlt
mov
or
push
test
stos
fdivr
mov
push
pop
mov
icebp
fstp
js
lahf
aas
popa
sbb
aam
cdq
leave
stc
dec
sbb
jmp
shl
fst
ret
bound
dec
outs
sub
jb
je
add
push
js
sub
imul
aam
jmp
dec
data16
sub
div
adc
jge
aam
dec
(bad)
dec
hlt
jge
xchg
mov
cmp
mov
inc
inc
(bad)
sub
xchg
mov
(bad)
(bad)
and
mov
in
test
jp
cmp
jl
sub
sbb
mov
pusha
fidivr
cs
mov
jbe
stos
xchg
mov
adc
into
arpl
(bad)
xchg
mov
cs
mov
mov
call
adc
sub
xor
xor
les
div
and
cmp
push
mov
push
xchg
mov
scas
jp
ss
cmps
jmp
lods
or
push
cmp
adc
pop
xor
mov
movs
call
in
pop
cwde
cmp
dec
outs
push
adc
pop
or
mov
outs
call
jne
in
jmp
dec
ins
arpl
pusha
adc
mov
shl
and
mov
mov
es
push
mov
sahf
popa
sbb
inc
(bad)
retf
cmp
in
daa
mov
loop
push
call
push
xor
(bad)
in
sub
pop
inc
das
or
inc
mov
outs
leave
and
mov
mov
pop
jecxz
jmp
and
dec
in
clc
mov
xchg
xchg
and
nop
cmp
jmp
push
loopne
mov
fcomp
mov
sub
(bad)
aam
pop
imul
bound
pop
jne
std
mov
std
enter
add
sbb
jp
add
push
std
and
jecxz
cli
adc
out
sbb
adc
push
adc
mov
retf
sbb
fsubp
movs
fiadd
aam
gs
fs
and
xor
sub
jnp
das
mov
xchg
aaa
sub
fdiv
fiadd
cs
sbb
pop
mov
add
push
push
ja
je
jno
inc
xor
inc
adc
lock
cmp
retf
mov
pop
add
mov
add
mov
inc
sub
sbb
repnz
out
mov
sbb
dec
call
sub
jnp
xchg
mov
inc
mov
xchg
icebp
sahf
lahf
repz
iret
pop
push
scas
cmp
movs
dec
addr16
mov
(bad)
in
in
shl
sbb
xor
out
jg
lock
mov
jg
sub
mov
test
jle
jns
lds
test
cmps
ss
or
int
loop
popf
push
cmp
pusha
xchg
data16
pop
xchg
mov
mov
mov
cmp
pop
sub
nop
ins
enter
jno
push
imul
retf
rol
cmps
xor
push
mov
jp
das
repnz
iret
in
bound
test
and
mov
xor
sti
sbb
or
mov
pusha
push
or
jb
jns
(bad)
pop
pop
rcl
sbb
stos
xor
aaa
mov
xchg
shr
retf
in
fs
inc
push
aas
cli
push
dec
ret
add
retf
mov
out
shr
xor
push
pop
pop
xor
push
jo
ret
int3
mov
inc
jmp
shr
jecxz
lock
pop
hlt
xchg
push
mov
dec
call
gs
shl
clc
ins
je
ret
or
ja
popa
icebp
mov
adc
push
cwde
inc
jb
xchg
add
je
pop
mov
sbb
and
jmp
inc
jns
rcr
or
mov
loope
jo
mov
jno
add
dec
scas
mov
(bad)
jbe
sbb
pop
ficomp
jge
(bad)
mov
out
test
fild
push
stos
jne
push
ins
addr16
movs
add
dec
sub
bswap
cs
pop
or
mul
loop
and
mov
lods
cmp
xor
cdq
sbb
enter
(bad)
mov
adc
sub
sbb
rol
lds
ins
retf
adc
sub
mov
cmp
nop
imul
mov
mov
cmp
movs
sti
and
dec
sub
fld
mov
dec
add
push
push
(bad)
(bad)
mov
into
mov
je
xchg
ins
leave
push
das
sahf
xchg
movs
sub
xor
cmps
sub
or
push
hlt
inc
xlat
test
fstp
fwait
mov
xor
jg
sbb
fisubr
fadd
lahf
add
aaa
aaa
xlat
ins
outs
es
cdq
cmp
xchg
nop
sub
push
cmp
inc
jecxz
jae
ins
scas
mov
aam
or
add
or
jne
xchg
inc
retf
sbb
add
loopne
dec
adc
loopne
in
mov
inc
fwait
(bad)
icebp
pop
jg
cmp
lods
inc
jne
jle
inc
shr
adc
out
inc
jnp
xlat
push
mov
outs
scas
adc
xor
pusha
sahf
jne
jmp
jg
mov
pop
mov
mov
loop
movs
stc
cmps
aaa
gs
call
aam
leave
mov
jg
mov
mov
repz
mov
out
(bad)
push
or
dec
xor
mov
inc
hlt
loop
dec
and
(bad)
enter
cmps
fisttp
lea
pop
adc
ficomp
jecxz
sbb
dec
and
xchg
dec
out
mov
cs
mov
movs
out
lahf
xor
test
xchg
mov
and
call
dec
jg
in
sahf
shl
(bad)
imul
xchg
push
shl
and
push
mov
jp
and
xchg
mov
imul
xlat
ss
out
(bad)
(bad)
fdiv
xor
mov
cmp
or
rol
jecxz
or
jmp
push
test
popf
inc
xor
and
ja
fisttp
inc
cmc
add
add
(bad)
fs
in
adc
and
push
mov
xchg
push
jae
shr
push
mov
adc
loopne
int3
pop
lds
stos
pop
pop
add
loopne
adc
lds
jmp
iret
test
mov
in
xchg
ja
test
adc
dec
call
arpl
data16
mov
sti
mov
lahf
sbb
jns
sub
adc
xlat
xor
xchg
leave
mov
push
pop
bound
jg
lahf
jg
inc
and
adc
(bad)
std
xchg
sub
xchg
inc
jmp
mov
lds
mov
fwait
mov
or
cmc
sub
bound
mov
and
call
cmp
jmp
lods
cwde
cmp
pop
das
cmp
test
xchg
dec
mov
dec
or
inc
les
cmps
and
fiadd
retf
push
fiadd
adc
jae
push
cdq
xor
pop
cdq
cwde
sub
add
mov
sub
pop
jnp
mov
add
arpl
scas
pop
rol
ds
jne
test
push
mov
sbb
xchg
test
imul
pop
xchg
mov
push
push
mov
outs
sbb
fld
test
lock
and
cwde
or
pop
add
les
test
(bad)
repnz
inc
repz
and
xor
in
fst
mov
ret
test
pusha
or
sbb
push
pop
add
push
retf
movs
aad
lods
sub
es
call
or
mov
pop
sahf
(bad)
push
cmps
push
jg
or
bound
pop
dec
sub
mov
cmp
mov
and
out
cwde
shl
ds
lods
aaa
xchg
jge
xchg
test
sub
mov
test
scas
(bad)
cmp
es
rcl
sub
int3
and
adc
dec
pop
xchg
jo
inc
push
mov
dec
jnp
push
fisub
jmp
mov
in
cmps
sbb
jmp
hlt
cmps
xchg
nop
mov
adc
scas
inc
repnz
pop
data16
sbb
cmp
(bad)
ja
add
xchg
inc
cs
cli
xor
xor
inc
jbe
push
daa
add
jge
aad
inc
out
cmps
or
and
xor
cmp
loopne
stc
and
repz
mov
(bad)
out
retf
out
mov
jle
and
loope
outs
pushf
mov
(bad)
rcr
or
shl
dec
adc
pop
jo
pop
xchg
dec
xchg
xor
into
stos
call
rcl
cmps
or
rol
fs
in
arpl
mov
data16
popa
mov
dec
(bad)
loopne
add
add
shl
int
out
add
and
loope
addr16
ret
cmps
std
xchg
xcrypt-ecb
cmps
retf
stc
aad
popa
adc
out
sub
iret
cmp
pop
sbb
sub
loop
add
dec
fwait
sbb
test
cmp
shl
inc
push
xchg
sbb
jns
dec
(bad)
xchg
(bad)
clc
test
sahf
imul
adc
pop
mov
push
and
mov
aas
push
add
mov
lea
arpl
xchg
sub
retf
pushf
adc
xor
rol
out
dec
ret
or
adc
loope
scas
fmul
dec
inc
rcr
push
(bad)
in
or
retf
or
xor
sub
push
cmps
fistp
cmp
and
fwait
int3
data16
cmp
adc
cmp
shl
add
mov
popa
ins
mov
repz
imul
add
xor
jno
dec
sbb
jnp
mov
in
or
adc
sub
mov
(bad)
retf
xor
or
sbb
jns
add
cdq
ret
div
push
and
inc
je
fcomp
addr16
and
sbb
clc
fadd
(bad)
hlt
icebp
outs
mov
sub
gs
aad
in
push
dec
or
mov
cmp
je
and
ins
daa
loope
sub
daa
cli
push
std
cmc
dec
fcomp
dec
or
ja
repnz
stc
(bad)
adc
sar
mov
mov
inc
in
addr16
mov
jb
mov
loop
add
add
push
into
enter
aas
mov
add
adc
fwait
out
lods
adc
ins
mov
data16
mov
not
sub
mov
out
push
ret
call
push
aas
das
repnz
push
inc
out
(bad)
adc
pop
jno
repnz
xchg
xchg
adc
ins
pop
xor
out
icebp
test
imul
mov
pop
adc
dec
push
aas
fwait
dec
mov
mov
sbb
inc
dec
mov
stc
mov
jno
loop
enter
and
inc
mov
cli
stc
mov
xchg
pop
push
(bad)
and
jnp
add
or
repz
inc
out
repz
xchg
pop
js
inc
addr16
adc
(bad)
lods
mov
hlt
aam
out
aas
loopne
outs
mov
cmp
pop
hlt
add
hlt
lods
js
cmps
stos
pop
je
adc
out
or
rcr
cmp
xor
sub
in
cs
pop
cld
dec
les
sti
mov
push
mov
es
stos
sbb
cli
sub
inc
mov
lods
popf
and
ins
push
pop
mov
xor
push
fistp
fdiv
gs
xchg
mov
xchg
adc
or
jg
ins
dec
jg
(bad)
stos
(bad)
push
mov
in
and
clc
push
aam
sahf
imul
adc
dec
shl
dec
xor
daa
xor
call
cs
(bad)
mov
shl
fdivr
ret
xchg
add
ret
adc
pop
xor
push
push
div
scas
sbb
mov
mov
test
jp
jecxz
xor
aas
add
pop
into
jno
pop
inc
xchg
(bad)
sub
ror
jb
pop
pop
and
mov
mov
stos
fwait
mov
pushf
mov
or
push
rcr
sbb
push
ret
daa
cmp
pop
mov
and
je
cli
mov
inc
or
and
dec
retf
loopne
push
data16
test
push
scas
fsubr
add
lea
pushf
xchg
outs
xor
shl
ficom
aad
fwait
sbb
mov
repz
clc
inc
ss
cmp
sub
popa
outs
pop
or
xchg
sub
test
lea
add
test
enter
test
loope
int
mov
sar
pop
push
frstor
jg
xchg
jecxz
cmp
shl
cmps
mov
pushf
inc
fwait
jmp
adc
out
sbb
xchg
(bad)
jno
dec
repnz
add
popa
out
push
and
add
pop
test
push
dec
push
sub
jl
sahf
jmp
inc
jbe
sub
cmp
and
jo
popa
xchg
dec
loop
add
inc
int3
inc
enter
jae
ja
inc
xor
cmp
jecxz
mov
rcl
imul
cmp
cli
and
mov
enter
fnstcw
jle
jo
aaa
pop
nop
hlt
adc
(bad)
dec
adc
xor
pop
std
adc
pop
lds
(bad)
adc
into
adc
adc
cmp
in
stos
adc
(bad)
adc
or
pop
gs
sbb
cmp
fwait
jmp
mov
nop
add
pop
out
imul
ds
and
pop
mov
sub
loop
cmc
loopne
xlat
mov
cs
push
xor
js
push
ret
xchg
lahf
pop
jns
and
jb
leave
xchg
(bad)
adc
or
lock
dec
pop
mov
mov
mov
or
xchg
(bad)
pushf
push
xor
pop
jno
movs
xor
add
jno
inc
(bad)
jo
adc
cmp
sbb
lods
fidivr
in
std
test
mov
sar
scas
out
hlt
adc
mov
call
retf
out
in
mov
push
mov
and
adc
(bad)
fidiv
(bad)
xlat
push
lea
sti
jl
push
cmp
xor
fld
add
lds
fadd
getsec
jecxz
xchg
cs
xchg
jo
rdtsc
(bad)
arpl
jecxz
cs
pop
stos
add
cmp
jle
jno
sbb
adc
push
jo
repz
in
das
inc
inc
dec
sbb
je
mov
mov
mov
les
std
lock
mov
add
mov
jne
jne
xchg
mov
push
outs
je
cmp
adc
ret
pusha
stc
dec
adc
and
gs
jbe
sub
xchg
ds
jmp
mov
lds
popa
mov
or
mov
jbe
cmp
imul
cmp
xor
sbb
pop
mov
adc
sub
mov
mov
shl
shl
out
ins
pop
rcl
sbb
aas
aaa
in
push
movs
dec
lods
hlt
pushf
inc
inc
mov
cwde
cwde
add
xor
mov
shr
dec
lea
add
pop
and
dec
or
add
xchg
sbb
test
dec
dec
cmc
mov
test
xchg
into
aas
sar
sahf
inc
repnz
xor
mov
pop
or
sti
cmps
sbb
mov
neg
pushf
(bad)
jmp
jns
sbb
je
ffree
stos
push
inc
pushf
mov
inc
or
imul
pop
jecxz
movs
adc
mov
add
and
mov
cwde
dec
fidivr
jl
mov
js
movs
xchg
or
mov
imul
dec
mov
repz
add
cmp
mov
push
adc
dec
xchg
push
fstp
pusha
retf
xchg
inc
pop
inc
sub
xchg
pop
sbb
ret
and
(bad)
or
dec
cmp
daa
mov
xor
rol
fisubr
sub
in
mov
cmp
(bad)
movs
inc
fld
jmp
sub
cmp
bnd
mov
dec
jnp
cmp
mov
cmps
mov
xor
inc
jo
mov
cmp
aam
js
(bad)
xchg
sub
mov
inc
fsubr
jmp
(bad)
xor
mov
cs
out
sub
sbb
dec
pop
aaa
or
or
fs
ss
xchg
mov
inc
nop
xchg
fldenv
pop
repz
shl
mov
xor
dec
sub
outs
in
jecxz
ds
push
dec
int3
ret
pop
cmp
fsubp
mov
add
lods
mov
mov
mov
xor
jae
sub
call
daa
xchg
scas
aaa
mov
inc
es
dec
xchg
cmps
mov
add
shr
xchg
in
add
movs
cmp
dec
cmp
pop
(bad)
fucomi
or
xor
mov
xor
fsub
cld
jecxz
in
dec
jg
fadd
lods
jno
or
scas
sub
dec
add
pop
arpl
or
or
sahf
pop
mov
dec
jae
mov
pop
xchg
(bad)
mov
inc
cmp
mov
pop
cld
jmp
sar
scas
ss
mov
sar
enter
xor
mov
pop
add
sub
jbe
clc
das
xchg
jae
mov
and
loope
sub
mov
mov
in
in
daa
push
ficom
pop
sbb
or
outs
sahf
add
inc
mov
dec
push
(bad)
cs
sbb
and
inc
outs
mov
hlt
jge
pop
jnp
xchg
lds
add
mov
(bad)
dec
push
cmp
hlt
mov
idiv
sbb
jle
sbb
jg
add
test
mov
into
cmps
xor
and
ja
xor
jae
hlt
in
(bad)
add
xlat
ins
ror
dec
int
iret
pusha
pop
and
sub
and
enter
leave
(bad)
adc
and
cmp
and
mov
stc
mov
(bad)
lods
push
aam
(bad)
adc
cmps
xor
cdq
cmp
push
jne
and
xor
adc
(bad)
not
xor
sbb
(bad)
add
(bad)
push
and
pop
test
mov
mov
(bad)
test
leave
dec
retf
ja
stc
mov
call
xchg
dec
pop
push
cmps
movs
or
in
xor
int
js
add
inc
stos
dec
xchg
cwde
and
dec
mov
ror
jg
inc
sahf
push
sbb
sar
imul
add
nop
shr
fst
loope
inc
(bad)
add
pop
add
push
push
imul
mov
xchg
test
out
push
adc
pop
push
mov
ss
mov
pop
and
dec
shl
mov
push
mov
fwait
es
push
lock
je
push
aaa
mov
scas
and
mov
lods
xor
adc
jl
fcom
test
cs
push
cmc
sbb
push
add
std
push
cmp
pop
mov
adc
fcom
xchg
cmp
into
jecxz
add
sub
mov
pop
adc
stos
test
shr
jb
rcl
cmc
int3
out
mov
xor
xchg
adc
or
xchg
mov
out
cmp
jmp
les
retf
out
pop
sub
push
dec
test
xchg
mul
jb
aas
sub
jb
pusha
push
mov
fild
and
xor
mov
xchg
push
fwait
inc
or
sahf
xor
dec
push
imul
add
dec
ja
lods
add
mov
mov
(bad)
adc
std
(bad)
(bad)
fadd
fisubr
idiv
lods
pop
cmp
mov
or
jmp
dec
gs
cdq
aam
xchg
sub
jmp
(bad)
in
mov
fcom
adc
xor
cmps
imul
or
outs
(bad)
ret
adc
(bad)
xchg
xlat
popa
pop
iret
cmps
dec
sub
sub
xor
xor
jg
mov
sub
scas
gs
out
sbb
pop
mov
bound
loop
push
mov
pushf
push
call
dec
jnp
mov
sub
xchg
iret
push
add
pop
mov
test
mov
stc
imul
push
jmp
mov
cmp
push
pop
or
or
test
lahf
test
bound
(bad)
lods
in
xchg
loope
lea
daa
xchg
mov
mov
loopne
clc
sbb
mov
and
adc
ja
sub
push
cs
sti
mov
(bad)
in
cli
loope
sbb
ret
and
js
pop
gs
(bad)
lea
mov
dec
popf
adc
push
icebp
cmovo
pop
xor
or
dec
gs
push
es
je
shr
cs
in
mov
xchg
push
add
jge
pop
xchg
ret
rol
in
xlat
test
outs
daa
sbb
pop
ins
pusha
into
out
outs
or
mov
cmps
ret
setge
clc
inc
or
push
dec
and
cmp
(bad)
cmp
outs
ds
ins
mov
pop
leave
loope
inc
and
cmc
xlat
sar
aam
add
mov
fidivr
jg
in
(bad)
hlt
(bad)
(bad)
push
test
pusha
or
xchg
retf
mov
fwait
and
fsub
jecxz
aas
popa
nop
cwde
outs
cmp
add
pop
jge
and
ret
jg
mov
sub
push
mov
out
push
icebp
imul
jb
das
clc
pop
ins
int3
inc
add
and
mov
push
jge
xor
mov
ss
lea
cmp
scas
sbb
fsqrt
mov
jge
stc
inc
mov
(bad)
mov
and
ss
(bad)
aad
push
xlat
adc
push
imul
enter
popfw
xchg
jmp
call
cli
adc
shr
test
stos
(bad)
or
in
mov
jne
mov
jnp
mov
xchg
repz
shl
sti
push
dec
shl
je
cmps
jo
and
push
iret
nop
sub
xchg
mov
jp
sub
and
inc
test
push
lock
jg
add
jne
push
cmp
mov
jge
nop
pop
(bad)
jg
pop
int
mov
or
ds
xor
shr
dec
cmc
ds
sti
dec
mov
lods
shl
popa
stc
sbb
mov
gs
ins
push
repz
mov
(bad)
lea
push
xlat
and
jp
mov
pop
shr
xor
retf
push
sar
push
mov
mov
lock
lods
mov
and
cs
cld
and
mov
inc
stos
mov
mov
not
mov
cwde
add
mov
sub
adc
hlt
pinsrw
xchg
adc
sbb
ins
ins
jo
inc
push
or
inc
dec
inc
and
leave
adc
add
add
push
pushf
inc
div
add
dec
inc
cdq
cmp
dec
imul
fsub
push
sbb
xchg
out
jae
mov
push
push
pop
jge
or
adc
inc
stos
addr16
cmps
inc
into
shl
and
cs
push
dec
ins
fsub
sbb
lods
std
call
test
xchg
sub
fisubr
jmp
imul
in
movs
lods
sub
ins
jmp
nop
fs
dec
in
and
stc
xchg
lods
in
xor
mov
loope
pop
cmp
jne
test
xlat
mov
dec
xchg
sar
jne
push
lock
or
(bad)
sbb
dec
jecxz
mov
push
jns
fs
mov
ror
jecxz
inc
push
jmp
hlt
adc
jmp
fistp
enter
div
pop
inc
mov
push
or
outs
mov
or
shl
mov
ja
mov
enter
add
inc
mov
mov
push
mov
mov
mov
inc
adc
test
bound
loop
mov
fldcw
nop
mov
mov
inc
adc
scas
movs
xchg
jns
or
bound
or
push
ds
push
cmp
sahf
xor
cs
jge
inc
xchg
loope
pop
mov
push
std
repnz
fs
and
mov
add
mov
sbb
in
pop
xchg
sbb
lods
popa
leave
mov
sahf
(bad)
fldenv
out
leave
js
popa
mov
mov
xor
or
jge
mov
sub
xchg
cwde
pop
cmps
js
iret
adc
jb
add
jp
push
add
ficomp
add
(bad)
sti
xor
add
sbb
add
mov
xchg
(bad)
das
(bad)
jmp
call
cwde
retf
cmp
lea
push
cdq
mov
mov
mov
mov
xchg
lods
fisubr
rcl
dec
mov
sub
cmp
jmp
pop
fst
loopne
sub
mov
mov
cld
push
fisubr
sub
cmp
imul
xor
hlt
pusha
in
fbstp
cmps
or
es
shl
sbb
sub
sbb
je
sbb
fs
jne
cmp
mov
mov
push
enter
sub
add
xacquire
xchg
jl
jp
aad
loope
arpl
dec
(bad)
jg
call
mov
retf
or
cmp
ret
(bad)
mov
mov
pop
daa
push
pop
cmp
call
inc
sbb
retf
cmp
and
lock
or
mov
cwde
out
or
dec
push
and
in
xlat
pop
push
js
les
loop
daa
iret
pop
mov
mov
leave
xor
std
arpl
sub
xchg
shl
inc
mov
or
or
push
fwait
xchg
sahf
or
mov
leave
ss
pushf
push
into
mov
ret
dec
dec
aas
dec
dec
sub
jg
jmp
lods
repnz
fdiv
push
dec
adc
or
cmp
out
retf
push
xor
fadd
les
push
mov
pop
pop
loop
mov
xlat
popf
movntq
out
cmp
movs
in
lds
ror
cmp
(bad)
out
das
out
cmc
pop
jg
call
lea
xor
push
jne
inc
call
jns
ja
leave
dec
sbb
sub
push
cmc
sti
xor
movs
jl
cmp
mov
xchg
(bad)
xor
cdq
(bad)
push
or
lea
inc
pop
test
popa
aaa
cld
mov
mov
in
mov
fdivrp
lahf
lods
xchg
aas
ret
bnd
jecxz
add
and
retf
into
fdiv
jecxz
inc
inc
retf
xor
fcomp
xor
neg
adc
repz
xchg
aas
sub
or
pop
loop
xor
push
stos
push
and
sahf
cmp
mov
mov
ins
sub
call
shl
fwait
mov
xchg
ins
xchg
push
imul
enter
mov
scas
dec
or
xchg
out
data16
imul
push
pushf
test
and
inc
cli
push
push
mov
nop
xchg
stc
icebp
ins
dec
pop
mov
or
sub
icebp
sub
dec
lods
xchg
fist
sbb
test
or
out
loope
cmps
cs
xor
mov
mov
aas
fld
in
mov
pop
pop
scas
sub
xor
xor
xchg
out
dec
or
xchg
adc
add
(bad)
dec
adc
aad
xchg
(bad)
mov
jns
mov
mov
mov
loopne
cmc
out
mov
sbb
lea
inc
xchg
pushf
add
out
mov
outs
push
pop
mov
fsubr
fisubr
and
repnz
xor
pop
or
(bad)
lds
push
out
stos
cwde
lds
ds
pop
mov
outs
xchg
stos
outs
cmp
add
cmc
outs
cld
push
(bad)
or
popf
retf
xor
jbe
je
outs
mov
or
mov
in
sbb
inc
mov
bound
es
test
xchg
ins
cmp
sub
xor
enter
push
dec
dec
dec
inc
mov
leave
test
pop
or
popa
es
stc
nop
fisubr
sub
addr16
mov
sub
jmp
out
aas
ret
mov
nop
dec
movs
out
aad
or
jbe
icebp
pop
aas
inc
stos
lods
popf
xlat
jne
fisub
inc
ins
inc
icebp
lea
jecxz
mov
js
mov
dec
xchg
mov
sbb
lods
pop
inc
dec
movs
xchg
in
mov
fs
jle
test
mov
loopne
sub
jge
cld
cld
call
pop
call
(bad)
push
mov
push
gs
gs
sbb
dec
inc
scas
xor
add
(bad)
xor
imul
push
cmp
or
(bad)
sbb
mov
jmp
or
sar
mov
dec
inc
fiadd
xchg
and
dec
cdq
sbb
jge
inc
iret
inc
and
adc
(bad)
or
and
mov
push
xchg
xor
stos
test
xor
xchg
mov
movs
pop
adc
mov
adc
jmp
(bad)
sti
pop
cmp
cmps
mov
inc
test
jge
fisttp
pop
add
mov
push
or
lods
int
imul
imul
dec
out
xchg
push
out
pop
out
push
test
pop
sbb
push
mov
(bad)
ins
mov
push
xchg
cld
cmp
lahf
sub
cwde
mov
cmp
mov
dec
cdq
cwde
xchg
mov
ja
pop
mov
stos
(bad)
dec
das
outs
loope
inc
mov
ins
push
rol
lock
sahf
in
sub
inc
cmc
jecxz
push
push
mov
stc
inc
rcr
es
repz
adc
sbb
jb
push
push
and
cmp
jnp
dec
das
es
test
loopne
mov
hlt
das
das
fcmovb
cmps
in
cs
mov
dec
pop
mov
sbb
dec
pop
nop
into
jmp
mov
inc
add
push
cmps
jo
fldenv
daa
ret
cli
sahf
and
nop
jmp
cmp
je
xlat
mov
scas
pop
cmp
enter
jmp
dec
mov
(bad)
xchg
pop
fistp
loopne
xchg
sbb
pop
(bad)
in
push
ret
adc
sub
mov
aaa
dec
(bad)
mov
mov
cs
push
cmp
gs
ins
pop
pop
outs
mov
sub
sub
or
pop
imul
push
mov
es
das
pop
out
pop
cli
or
xor
push
xchg
sahf
push
movs
xor
lods
add
call
shl
and
mov
(bad)
xchg
aas
push
loop
xchg
mov
sti
int3
cwde
sbb
ins
out
push
data16
jne
mov
and
jnp
xchg
mov
stc
add
or
shl
and
mov
jb
jecxz
rcl
xchg
ss
cmp
lods
pop
pop
pusha
fcomp
aad
mov
sub
lea
dec
in
or
test
(bad)
mov
clc
imul
lds
add
dec
adc
pop
xor
pop
loop
sub
cmp
inc
ror
retf
jae
clc
cmp
push
es
outs
sub
adc
mov
push
mov
(bad)
mov
in
dec
jb
jp
cmp
xchg
or
sbb
fistp
in
rol
fwait
add
xchg
es
xor
pop
push
cmp
push
mov
addr16
cwde
inc
cdq
adc
sbb
jae
cmps
adc
push
or
jmp
in
dec
sub
sbb
push
nop
push
std
aad
cmp
jg
into
xor
cs
clc
ds
out
out
fsubr
mov
outs
push
dec
jge
adc
stos
ror
xchg
mov
ins
loopne
fcmovnu
or
loopne
jp
dec
stos
int
mov
and
mov
lahf
fnstcw
cmp
xchg
and
mov
inc
clc
nop
push
test
inc
es
pushf
pushf
fwait
cmp
pop
fstp
popf
jl
jae
fwait
scas
repnz
sbb
inc
inc
xchg
fcmove
or
sub
jnp
xor
sbb
dec
xchg
fidiv
mov
xchg
adc
adc
xchg
dec
xor
ins
fs
js
loopne
fwait
and
mov
cmps
cmp
aam
push
or
xor
inc
adc
sub
xlat
loope
neg
or
cwde
xor
xchg
repz
push
in
fdiv
pop
cmps
jp
gs
scas
pop
add
xor
or
jne
push
enter
cmps
pop
mov
xchg
test
or
xchg
or
loopne
sub
jp
popa
push
in
and
in
addr16
sbb
dec
xor
or
adc
jno
and
cld
movs
mov
pusha
push
movs
and
imul
jno
adc
ins
pop
dec
loopne
out
or
popa
xor
push
pop
sbb
(bad)
retf
and
mov
inc
jp
dec
out
lods
test
stos
adc
mov
movs
stos
mov
into
pusha
popf
jmp
pop
scas
add
(bad)
loop
retf
aas
(bad)
pushf
jmp
pop
stc
ror
mov
bound
and
mov
pop
mov
pop
enter
cmp
add
jne
pop
outs
out
mov
cmp
clc
aam
mov
push
test
cmp
daa
sbb
adc
pop
and
or
or
out
xor
call
sub
movs
xor
dec
lods
dec
bound
sar
lahf
retf
sahf
jno
dec
(bad)
and
outs
icebp
fcom
fwait
mov
mov
cmp
cs
scas
sbb
mov
ins
mov
ficom
das
outs
out
std
imul
jae
arpl
data16
addr16
rcl
lds
ins
push
mov
adc
xchg
fdiv
jb
xor
cmp
pusha
lods
bound
repnz
das
loope
call
scas
dec
push
ds
ret
mov
pop
fcomp
adc
jns
xchg
jl
dec
hlt
mov
jae
push
dec
adc
push
push
jge
mov
xchg
fmul
loopne
call
cmp
add
into
ret
sahf
adc
or
cwde
retf
xor
dec
adc
push
xchg
fs
inc
je
mov
mov
sub
mov
and
xor
out
mov
cmp
inc
test
cwde
inc
xchg
in
adc
inc
inc
sahf
fisub
movs
jl
ret
pop
nop
data16
gs
test
scas
ret
jg
mov
xchg
jecxz
stos
cmps
aad
out
mov
or
mov
xor
pushf
in
lea
gs
into
pushf
cmp
inc
cmps
das
adc
and
cmp
sub
das
mov
xchg
adc
pop
(bad)
xlat
sub
cmp
xchg
xor
pop
sub
mov
fistp
das
mov
fstp
(bad)
aas
and
cmp
adc
gs
xor
dec
mov
push
clc
int
hlt
lds
and
pushf
or
gs
mov
fsub
sub
and
or
int
jmp
retf
inc
rol
xor
fisub
jno
jnp
push
test
cs
pop
mov
int3
ret
call
and
popf
stc
cmps
push
pushf
mov
(bad)
push
xlat
and
fwait
sbb
out
mov
test
leave
pop
pop
rcr
dec
cmc
out
mov
mov
(bad)
es
sbb
add
imul
dec
jmp
mov
imul
popa
mov
sub
(bad)
pop
or
test
ins
out
jl
sbb
rcr
icebp
mov
aad
xor
shr
push
jg
enter
sbb
popf
(bad)
je
sub
push
in
pop
icebp
pop
movups
out
cs
test
lea
sar
jmp
seta
mov
cmp
xchg
pop
pop
test
cld
cmps
push
xor
(bad)
push
movs
stos
dec
pop
leave
sbb
cld
std
mov
add
mov
out
jb
(bad)
popf
mov
pop
cmps
dec
out
enter
aam
add
adc
jmp
fadd
imul
pop
lahf
outs
mov
stc
mov
cmp
aam
xor
jle
mov
xor
jle
adc
mov
ret
mov
test
inc
(bad)
stc
in
add
cmp
mov
cmps
shl
dec
(bad)
test
sub
stos
mov
mov
ins
cmp
sub
push
sar
cld
(bad)
push
out
pop
mov
es
seta
xor
inc
cld
enter
enter
dec
das
jl
mov
data16
in
xlat
jmp
popf
in
and
push
push
mov
jp
fstp
push
or
movs
jno
adc
aam
jp
sub
ret
js
aaa
mov
jbe
out
je
mov
mov
(bad)
je
sbb
jl
pop
mov
jno
dec
dec
shl
movs
shl
cmp
scas
push
shl
lds
(bad)
repnz
adc
lods
mov
adc
cmp
lods
call
xchg
nop
(bad)
or
lods
ds
push
ret
mov
int3
jne
fwait
cdq
push
push
loope
std
rcr
les
and
push
test
cmp
jmp
imul
js
sub
ficom
imul
xchg
(bad)
loope
loope
in
dec
add
nop
outs
mov
inc
sbb
movs
jge
mov
loopne
ret
cmp
mov
add
cmp
ss
push
inc
or
das
push
mov
data16
adc
mul
inc
pop
(bad)
outs
stos
cmp
fcomi
pop
sub
sub
(bad)
daa
hlt
inc
sar
or
(bad)
cmp
sub
popf
fimul
and
inc
jle
mov
push
ss
mov
sbb
cmp
aas
xchg
mov
push
xchg
cdq
outs
jmp
jb
mov
push
iret
mov
pushf
add
xor
cld
push
push
les
(bad)
lock
pop
jnp
dec
stc
out
pushf
ja
xchg
mov
jbe
mov
mov
imul
inc
sub
js
fstp
das
aad
out
test
mov
mov
and
pop
iret
xor
jecxz
mov
ror
adc
jmp
loope
shr
movs
lahf
xor
nop
lods
and
xchg
nop
sbb
mov
push
in
xor
call
sahf
cs
inc
jb
add
gs
(bad)
ret
xor
adc
cmp
push
push
sbb
mov
ds
jno
jno
jb
stc
cmp
jb
dec
push
out
movzx
inc
daa
repz
xchg
cdq
mov
inc
or
and
imul
or
jmp
mov
data16
or
push
push
mov
mov
sub
cmps
fimul
ret
call
push
dec
(bad)
outs
push
push
dec
leave
add
push
inc
cmp
jb
adc
jl
iret
xor
retf
mov
into
(bad)
pop
pop
xchg
adc
mov
dec
(bad)
mov
mov
fwait
pop
mov
and
jbe
xchg
repnz
inc
fsub
fidiv
mov
imul
mov
push
dec
(bad)
movs
sub
pop
xor
(bad)
push
mov
fidivr
fcomp
hlt
mov
test
xor
cmps
sub
hlt
xchg
xlat
or
mov
clc
pop
adc
sbb
leave
add
jae
cs
(bad)
ins
xchg
(bad)
nop
mov
sbb
mov
stc
ins
(bad)
jnp
adc
neg
sub
push
inc
push
retf
mov
imul
mov
mov
mov
lods
mov
xchg
sub
mov
js
rol
cmps
into
in
scas
enter
enter
mul
out
push
mov
test
rol
xor
jb
sbb
jmp
scas
pop
pop
mov
push
xor
popf
mov
pop
out
and
adc
xchg
dec
in
js
cs
fldenv
cmp
sub
adc
jecxz
or
mov
(bad)
jmp
jbe
cmps
outs
hlt
mov
push
cmp
sub
push
fidiv
lods
test
mov
mov
pop
xchg
out
movs
fdivr
in
fsubr
das
or
adc
lods
cmp
jae
ins
xor
lds
inc
aam
jle
mov
jnp
arpl
int
loop
mov
test
mov
les
popf
pusha
cli
xor
inc
pop
je
push
cdq
sub
jl
mov
mov
icebp
popa
push
pop
repnz
int
xor
adc
add
sub
sub
int
inc
dec
call
and
loope
xor
jge
xlat
inc
popf
fldenv
pop
jg
adc
fwait
sbb
fcmovne
into
lock
xor
mov
inc
jmp
bound
cli
scas
ja
sbb
or
jmp
inc
jg
in
pop
icebp
(bad)
mov
arpl
xchg
ret
call
xchg
(bad)
push
pop
ins
mov
gs
je
fbstp
push
push
sbb
push
xor
scas
mov
shr
imul
jb
adc
add
sbb
ds
sar
fs
mov
mov
(bad)
retf
or
and
sti
dec
sbb
loope
and
aad
gs
xchg
ror
test
je
inc
mov
push
pop
push
jns
dec
int
repnz
dec
out
xchg
xchg
mov
lahf
and
sub
shr
out
adc
ins
and
mov
jbe
xlat
loope
scas
ror
mov
jb
jne
add
jns
ret
int3
nop
xor
fisubr
lea
push
xor
or
push
in
xchg
cld
mov
cld
inc
lock
out
sbb
ds
or
hlt
inc
or
adc
enter
pop
sbb
or
or
xlat
js
fisubr
and
mov
jbe
daa
aad
add
pop
or
mov
stos
retf
cmc
lods
movups
aad
push
pushf
test
dec
int
sahf
jb
xchg
sub
rcr
push
sti
and
mov
dec
mov
fistp
repz
arpl
int
retf
es
jp
imul
cli
push
(bad)
fucomi
out
fisub
popf
fwait
mov
and
sub
mov
lea
(bad)
in
sahf
cmps
stc
in
dec
sub
loopne
fst
ds
fistp
call
dec
mov
adc
das
rcl
ins
inc
outs
jnp
(bad)
cmp
outs
and
rcl
lea
movs
add
shr
fsubr
ret
lds
and
in
int
arpl
mov
cmps
cmp
je
mov
stos
push
xor
(bad)
loop
xchg
push
clc
pop
test
sub
rcr
push
mov
aam
or
dec
push
test
(bad)
cli
cmps
(bad)
shr
shr
mov
mov
mov
jp
fs
mov
ins
ss
stos
push
bnd
aaa
cmp
gs
(bad)
or
repz
or
repnz
ror
icebp
not
std
pop
xor
aaa
hlt
jle
(bad)
shl
xchg
pop
dec
pop
imul
dec
push
lods
shl
mov
push
loopne
adc
mov
(bad)
push
pop
add
jmp
mov
sar
stc
adc
mov
mov
sbb
or
and
push
imul
xor
fstp
lea
mov
inc
iret
mov
adc
out
cmp
jo
out
mov
jmp
sub
fsub
(bad)
addr16
imul
cmp
in
sbb
fld
jno
gs
mov
add
js
js
or
mov
test
mov
sbb
sub
rcl
sti
dec
ins
mov
xor
adc
in
push
mov
dec
mov
or
jmp
mov
jo
mov
shr
xor
xchg
mov
in
scas
jne
loop
jecxz
inc
out
imul
add
push
shl
mov
mul
mov
scas
out
lahf
xchg
test
add
cmp
cwde
xchg
(bad)
cmc
test
xor
int3
(bad)
aas
lock
lea
fisttp
add
fmulp
inc
lods
or
push
mov
out
das
sub
cmps
and
lds
mov
cdq
xchg
cmps
jae
add
push
xchg
and
ror
icebp
dec
inc
bound
pop
aas
mov
fdivr
nop
enter
ret
ja
fidiv
mov
jmp
cmp
pop
loope
add
cmp
in
repz
push
inc
cdq
test
bound
cmps
xchg
and
and
sahf
imul
aaa
xor
fdiv
add
jbe
call
cmp
push
pop
cmc
sbb
cmp
hlt
push
xor
jb
pop
test
call
or
add
xchg
fwait
xchg
and
or
not
mov
enter
(bad)
(bad)
int
mov
add
lea
lfs
sbb
inc
pop
xchg
mov
xor
cmps
pop
jne
out
mov
mov
jno
dec
sub
push
(bad)
add
outs
mov
and
jbe
repnz
imul
mov
lea
jnp
out
xchg
(bad)
mov
imul
or
mov
lds
ins
aad
inc
mov
add
repz
xor
cli
rcl
xchg
and
push
loop
mov
inc
lock
bound
je
bound
sbb
push
push
xor
out
mov
pop
mov
pop
or
ror
pop
mov
out
ds
fistp
int3
xor
movs
xor
mov
sub
add
mov
sti
in
xchg
push
outs
std
shl
fdiv
sbb
movs
jle
in
mov
shl
jmp
es
iret
mov
test
movs
jne
cwde
add
add
retf
aam
xor
or
(bad)
add
push
cmp
mov
add
pop
mov
call
ret
dec
jo
int
ins
sub
nop
add
aam
sub
push
adc
and
ins
movs
jle
pop
cwde
popa
inc
xchg
mov
fs
in
jp
test
inc
and
lods
loopne
sub
xchg
push
cmps
arpl
mov
jl
out
sbb
push
(bad)
cmp
int3
ret
(bad)
cmp
or
pop
mov
shl
or
gs
and
pop
in
scas
mov
in
clc
add
addr16
(bad)
lea
je
data16
sbb
stos
fnstsw
cwde
scas
pop
imul
iret
and
mov
pop
dec
es
jb
fwait
in
jmp
lock
into
sbb
lahf
cmp
(bad)
(bad)
mov
fcomp
xchg
sbb
ret
push
cmp
sbb
pop
ret
movups
push
aaa
fisub
mov
les
xchg
push
cmp
cmp
mov
or
outs
xor
sahf
sbb
add
xor
fstp
or
ror
pop
clc
mov
adc
xchg
fist
test
out
mov
and
iret
(bad)
cmp
cmp
(bad)
push
cdq
jl
pop
pop
(bad)
test
dec
mov
fdivrp
sub
jl
push
(bad)
pop
clc
ret
add
add
jo
in
stc
(bad)
ror
sbb
jle
mov
mov
pop
hlt
call
fwait
inc
cmp
mov
std
cdq
sbb
popf
jne
push
fwait
xchg
out
imul
dec
adc
xchg
leave
repnz
mov
mov
and
jnp
jp
aad
mov
inc
mov
or
push
fs
iret
nop
pop
sub
mov
pop
pop
loopne
imul
xor
outs
out
sahf
sar
mov
pusha
test
adc
pop
pop
inc
out
mov
call
xchg
shl
xor
clc
jecxz
sbb
mov
mov
fisubr
shl
adc
popf
inc
xlat
mov
mov
jns
(bad)
mov
ds
ja
inc
aam
add
iret
in
push
loop
jae
mov
sub
dec
xchg
test
add
adc
ds
int
xlat
jno
inc
das
mov
or
xchg
cmp
mov
xchg
(bad)
in
icebp
pop
pop
sbb
das
or
fist
adc
das
aad
push
fsubr
call
cmp
pop
arpl
xchg
xchg
adc
inc
mov
add
imul
sti
add
sub
push
sub
shl
mov
in
retf
ret
jb
jp
sbb
sub
pop
sub
(bad)
jo
test
data16
lods
sbb
sbb
mov
mov
pop
out
ret
push
sahf
xchg
in
dec
in
arpl
jne
xor
pop
xor
mov
push
out
push
add
test
xchg
mov
aaa
ja
mov
mov
enter
leave
fsub
jle
inc
popf
sti
adc
mov
je
mov
stc
pushf
push
lock
loopne
inc
and
ins
fidiv
mov
fsub
pop
jnp
(bad)
bound
js
scas
gs
mov
loop
test
jb
(bad)
shl
mov
loope
pop
xchg
push
xchg
nop
cmp
jp
arpl
ins
in
cld
icebp
push
(bad)
xor
ror
stc
sub
inc
inc
ret
dec
jne
rol
pop
mov
xchg
inc
mov
xchg
mov
shr
jecxz
fistp
sbb
sti
pop
push
xchg
fsub
std
ds
scas
adc
pop
inc
mov
mov
dec
aad
pop
mov
cwde
adc
scas
jmp
out
push
sbb
cmp
jne
push
push
std
popa
xchg
adc
loop
lahf
scas
mov
test
popf
js
call
sub
sub
inc
mov
mov
xor
jnp
pusha
std
mov
rcl
sub
sub
cmps
push
mov
push
aas
test
mov
out
ins
cmp
adc
inc
or
dec
dec
scas
ss
aas
es
jecxz
in
pop
push
mov
xor
mov
mov
gs
test
stos
add
mov
sub
jmp
nop
(bad)
aad
out
stos
fistp
mov
cmp
jg
dec
and
cmp
adc
mov
shl
mov
mov
loopne
imul
adc
xchg
jns
sbb
fstp
mov
xor
in
xchg
cdq
sti
adc
in
cmp
sbb
fcmovnbe
xor
sbb
test
and
xor
fs
xor
cdq
pop
pop
sbb
inc
enter
arpl
in
or
adc
sbb
push
pop
jl
sbb
lods
les
ret
push
pop
inc
jae
xchg
ins
and
ds
sub
(bad)
mov
pop
xchg
mov
xchg
clc
mov
mov
lods
mov
loope
jo
call
or
xlat
push
cmp
jecxz
outs
push
int
shr
lahf
outs
sub
xor
sub
rcr
outs
and
push
lds
ds
xchg
mov
xor
xchg
push
pop
hlt
pusha
mov
sbb
sar
push
cmp
pushf
mov
mov
jns
mov
or
fidivr
test
clc
jno
adc
sar
or
pushf
popa
imul
jl
sbb
mov
test
movs
je
data16
sbb
data16
jns
fnsave
in
inc
fistp
je
in
jno
daa
gs
ss
pop
xchg
(bad)
pop
dec
pop
fidivr
mov
push
xchg
jae
mov
out
aad
jmp
jge
das
bswap
push
lock
and
scas
push
sbb
imul
mov
mov
or
cmp
inc
shl
jmp
sbb
mov
dec
pop
jbe
sub
xchg
loopne
jb
mov
or
mov
stos
mov
xchg
or
mov
adc
imul
mov
sbb
(bad)
jecxz
dec
scas
popa
inc
push
pop
mov
pop
xor
mov
push
ins
arpl
les
sbb
cs
mov
lds
sbb
out
add
cmp
std
push
ret
cld
movs
call
inc
imul
xor
iret
mov
mov
ja
add
fisubr
xchg
jge
xchg
ror
lods
xlat
daa
enter
movs
lea
fild
xchg
dec
call
add
push
les
pop
add
xchg
repnz
jg
add
add
fnstcw
dec
cwde
mov
sti
enter
add
call
bound
shl
inc
dec
and
mov
pushf
mov
mov
inc
stos
outs
and
retf
and
sbb
js
ror
das
add
sti
jne
out
ret
dec
xchg
xor
jmp
jl
out
inc
and
sub
cmp
stos
or
adc
inc
fiadd
dec
ins
mov
xor
jg
and
or
fcomp
test
add
(bad)
sub
int3
jl
sub
mov
inc
imul
xor
jmp
add
enter
mov
gs
lea
outs
mov
aas
jl
iret
cmps
jg
xor
ror
lock
test
cs
popa
xchg
xor
mov
adc
push
lahf
(bad)
pop
mov
sub
jp
outs
cmp
nop
(bad)
mov
fisubr
mov
test
pop
ror
outs
adc
pop
ret
inc
adc
xchg
jmp
nop
test
das
dec
call
mov
mov
adc
xchg
outs
inc
inc
iret
mov
and
xor
xchg
add
mov
mov
popf
loope
inc
(bad)
sub
(bad)
mov
jmp
jbe
les
cli
mov
inc
cwde
aam
inc
sub
add
repnz
inc
pop
test
test
repnz
sub
jne
std
fs
add
in
ficom
and
out
or
mov
int3
adc
and
dec
push
pop
lock
pop
mov
cld
mov
cmp
stos
add
sbb
data16
dec
add
(bad)
mov
in
xor
mov
sbb
test
adc
add
lahf
je
pop
inc
pushf
push
gs
and
cmps
adc
repnz
inc
jmp
or
in
bound
icebp
and
test
clc
(bad)
adc
clts
lea
adc
neg
out
sbb
jecxz
aam
clc
dec
dec
jbe
lea
or
iret
addr16
jmp
xlat
xchg
(bad)
(bad)
xlat
ins
jnp
cmp
push
loope
xlat
stos
ins
sar
aad
mov
jno
mov
pop
dec
int
sbb
sub
xchg
fs
retf
mov
jl
(bad)
push
lods
je
lds
inc
mov
cdq
mov
mov
call
stos
and
mov
xchg
mov
sbb
popa
cli
in
push
and
xor
pop
sub
xchg
jnp
xor
mov
scas
push
push
in
mov
mov
div
pop
fdiv
xchg
fxch
mov
out
or
jle
inc
push
idiv
das
dec
xchg
jge
movs
es
push
add
mov
pop
push
push
push
rcr
inc
xlat
fisttp
dec
lds
jmp
or
jmp
mov
mov
popf
imul
push
inc
mov
jo
ins
outs
adc
jl
adc
test
(bad)
mov
das
mov
sbb
xor
jb
sub
mov
or
xchg
sub
mov
outs
fild
xor
jno
mov
jecxz
aad
fidiv
dec
sbb
dec
mov
cwde
iret
mov
fmul
inc
sti
imul
es
dec
mov
push
jmp
mov
fbstp
test
stos
jmp
cmp
icebp
imul
test
and
int
jl
push
int3
lods
ins
add
and
push
jl
aam
dec
xchg
fadd
mov
push
ja
outs
dec
or
rol
outs
mov
in
add
mov
idiv
stc
pop
cmp
lea
fcomp
mov
scas
icebp
mov
or
je
jne
(bad)
push
sub
ins
fs
out
xchg
mov
add
adc
and
add
cld
cld
push
jne
hlt
mov
xchg
cmp
mov
inc
jge
and
cmp
cmp
lods
mov
pop
pop
cmp
inc
sbb
add
mov
mov
popa
in
test
das
cs
xchg
lods
mov
inc
test
dec
div
sub
push
ins
inc
into
mov
fwait
inc
aas
pop
push
mov
dec
add
adc
jp
or
fisubr
je
popf
cwde
outs
cdq
ret
push
aam
cli
inc
and
jmp
or
imul
mov
xlat
inc
ficomp
loope
ins
js
imul
xor
push
lahf
pop
repz
mov
cs
sbb
mov
jge
clc
add
and
ficomp
nop
mov
cmp
mov
or
loope
push
lea
add
pop
pop
sar
aad
pop
push
add
xor
mov
or
xchg
sbb
pushf
mov
dec
or
pop
xor
and
pop
mov
sub
cmp
jne
cmps
mov
out
cmp
loop
mov
jmp
ja
js
leave
(bad)
in
pop
mov
(bad)
rcr
push
fcomi
scas
shr
in
addr16
jle
in
jg
inc
fiadd
inc
push
in
xor
dec
push
mov
xor
in
mov
xchg
mov
mov
lea
push
sub
out
jge
jo
inc
sbb
mov
mov
cli
xor
and
pop
push
scas
(bad)
mov
ret
xor
sbb
test
push
or
add
fwait
xchg
cmp
movs
cmp
mov
jle
leave
jne
bts
jmp
dec
(bad)
push
sub
fs
jne
fisub
dec
mov
xchg
push
sub
dec
sbb
push
scas
imul
fiadd
pop
adc
data16
xchg
in
lock
fstp
cmp
pop
push
cmp
mov
xchg
sti
and
cli
jno
pop
sbb
enter
push
arpl
and
adc
push
call
in
fwait
cmp
cmps
push
(bad)
jb
popa
test
dec
mov
into
mov
cmp
aaa
jnp
or
jge
mov
add
hlt
and
or
jae
fsubr
aaa
xchg
fdivr
movs
pop
sbb
shl
scas
pop
inc
hlt
cwde
addr16
aas
mov
mov
loop
arpl
shr
mov
(bad)
cwde
push
jmp
mov
cwde
jmp
and
ins
out
movs
or
daa
mov
push
jle
fimul
fwait
ds
pop
pop
push
push
inc
sar
cmps
out
mov
or
popf
mov
sbb
cmps
and
sub
xchg
pop
clc
xlat
mov
iret
mov
xchg
clc
xor
mov
fldcw
fdiv
ss
leave
dec
sub
xchg
xchg
mov
inc
mov
xor
fnsave
test
(bad)
(bad)
mov
mov
or
xchg
jle
mov
enter
data16
scas
inc
dec
mov
dec
shl
adc
add
dec
inc
sub
loopne
scas
mov
push
xchg
adc
jne
dec
xor
or
shr
sub
sar
xor
mov
not
stos
sub
mov
gs
push
inc
(bad)
mov
ja
test
inc
pop
add
aaa
enter
imul
mov
mov
mov
nop
lea
aaa
pushf
lods
jmp
mov
call
into
cli
fwait
xor
sahf
mov
push
gs
iret
rcr
sbb
fs
jns
imul
dec
sbb
jo
xchg
test
pop
aas
mov
xchg
mov
pop
add
inc
imul
dec
mov
out
or
cld
enter
dec
jge
pop
clc
mov
xor
gs
repnz
dec
lahf
cmp
shr
push
iret
mov
push
test
in
scas
pop
push
jmp
cmp
sbb
add
pop
pop
aaa
and
mov
jo
push
mov
pop
daa
pop
inc
jge
mov
pusha
mov
dec
pusha
jne
pop
repnz
push
je
adc
push
mov
ficom
retfw
lds
or
sub
loop
dec
inc
add
mov
movs
sbb
ror
fadd
mov
and
pop
xor
addr16
lock
mov
xor
pop
add
or
xchg
ins
sub
call
add
xchg
sbb
dec
out
sbb
fs
pop
cmp
push
rcr
test
rcr
mov
mov
inc
adc
mov
lods
int3
movs
inc
mov
pushf
dec
mov
loop
je
mov
ins
dec
push
pop
mov
imul
dec
mov
xor
sbb
push
xchg
aas
sbb
fndisi(8087
lods
add
mov
ins
sbb
push
loopne
gs
clc
out
ds
es
pop
cmps
out
outs
or
ss
aad
add
jnp
and
shl
push
fld
add
add
div
mov
xor
std
push
pop
es
mov
mov
sahf
cmp
cmp
add
(bad)
or
push
xor
cmps
sub
xor
in
in
or
cwde
icebp
dec
sbb
sub
inc
lea
pop
xchg
mov
es
dec
mov
(bad)
jae
leave
stos
xchg
call
inc
cmp
cmp
or
imul
(bad)
and
das
mov
pop
out
bound
sbb
pop
cmps
in
into
push
loopne
mov
sbb
imul
mov
or
pop
or
cld
icebp
call
push
dec
int
test
aad
mov
xchg
xlat
mov
test
mov
shr
lds
inc
in
mov
sbb
pop
into
mov
xchg
(bad)
xor
sar
mov
dec
jl
das
xor
shl
test
dec
mov
xor
cmp
mov
in
jne
lea
movs
popa
xchg
cmp
mov
icebp
and
arpl
popa
sahf
pop
xor
(bad)
cdq
movs
dec
mov
jns
jnp
and
in
mov
mov
mov
mov
or
es
sub
mov
adc
jnp
fdivr
add
aas
popa
jb
sub
xor
xchg
ja
pop
pusha
xchg
test
ja
mov
ret
sub
add
inc
aas
xchg
mov
cmp
or
mov
or
dec
push
jb
les
mov
xor
adc
xchg
repnz
(bad)
sbb
loopne
rcl
gs
or
gs
pop
and
xchg
xchg
das
push
jnp
cmp
xor
adc
add
inc
stos
int3
xchg
call
inc
mov
imul
inc
stc
out
in
push
aam
ss
div
push
mov
clc
and
mov
cdq
sti
mov
int
add
enter
inc
jl
push
mov
cmp
js
addr16
adc
dec
jecxz
dec
push
or
dec
add
jmp
or
adc
retf
out
aad
mov
ins
out
adc
jnp
add
xor
mov
mov
mov
scas
jge
sahf
jp
dec
pop
sub
pop
out
xor
outs
pusha
push
mov
mov
jmp
inc
xor
mov
mov
gs
aam
imul
pop
leave
sub
fwait
dec
rcr
dec
sub
inc
scas
mov
xor
pusha
fdivr
fcmovb
stos
dec
ret
pop
cwde
dec
jmp
icebp
add
inc
sbb
sar
in
cld
out
xlat
sbb
mov
add
retf
mov
std
mov
or
int3
fsub
pop
(bad)
mov
jns
fwait
outs
sub
in
sbb
jne
cmp
jnp
int3
stc
(bad)
mov
pop
outs
jne
jae
dec
sub
in
and
int3
mov
cwde
arpl
mov
sar
mov
push
jge
out
cld
scas
jo
jmp
or
add
repz
or
cwde
adc
in
stc
or
sbb
inc
stos
jns
pushf
jmp
loope
je
neg
inc
bound
cwde
fcmove
sti
and
lods
mov
scas
(bad)
scas
xor
lods
les
int
and
(bad)
mov
push
iret
cmps
inc
cmp
(bad)
dec
xor
xor
jnp
into
push
(bad)
add
xchg
ss
push
or
cmps
int3
fs
dec
movs
fidivr
push
cmp
repnz
sar
adc
popa
aad
hlt
movs
cmp
push
and
out
xchg
dec
inc
dec
test
sahf
mov
movs
loope
in
inc
push
push
in
adc
mov
clc
cmps
lods
mov
adc
add
cmp
inc
dec
mov
sbb
sub
imul
test
imul
add
pop
dec
mov
xchg
test
test
and
xchg
movs
add
mov
inc
ror
xchg
add
sbb
iret
dec
xlat
jle
adc
sbb
mov
dec
or
xchg
das
imul
inc
jp
xor
sub
test
fidivr
pop
scas
in
fmul
imul
xor
sub
mov
pushf
(bad)
nop
sub
mov
xor
push
push
(bad)
or
dec
in
mov
out
outs
leave
cdq
pop
sub
sub
loopne
std
jle
sahf
cmps
dec
jne
in
push
mov
daa
outs
pop
cmps
js
das
jns
push
jge
pop
push
lea
es
fidivr
inc
lods
push
inc
mov
test
stos
lock
nop
dec
xor
test
retf
imul
push
fsub
or
pop
dec
gs
into
jmp
ds
in
jmp
int
and
add
and
sbb
xchg
loopne
mov
cmps
dec
das
dec
inc
xchg
or
psubusb
jb
pop
xor
repnz
ja
ins
test
xor
(bad)
jmp
mov
push
inc
arpl
jnp
mov
jae
xchg
sbb
dec
repnz
js
jp
cmp
push
loope
imul
retf
add
dec
cmp
stc
leave
stos
stos
mul
jmp
scas
and
addr16
lea
or
arpl
or
addr16
mov
add
mov
dec
adc
mov
call
cmc
xchg
pop
(bad)
xchg
sar
stc
test
or
popa
or
cmp
sub
mov
rcl
mov
add
cmps
retf
loope
fist
jmp
dec
test
sbb
inc
popf
seto
fsubr
adc
shr
fcomp
sti
dec
pop
cmp
xchg
xchg
test
fnsave
mov
clc
test
addr16
cmp
bound
aaa
ins
rol
loope
jnp
imul
lock
jae
xchg
mov
(bad)
rol
mov
(bad)
test
ins
pop
jbe
(bad)
and
push
mov
add
iret
and
pushf
push
(bad)
f2xm1
movs
das
gs
inc
cmp
ins
or
cmps
stos
es
cmps
cmp
pop
aam
cmp
call
sahf
add
inc
dec
adc
mov
sbb
push
fst
adc
aas
arpl
iret
and
adc
or
mov
cmc
sub
xor
popa
je
stos
jmp
call
inc
mov
or
sahf
inc
dec
cld
pushf
jb
push
jge
test
sub
push
mov
cmps
in
loop
mov
mov
mov
sbb
jg
out
xor
jle
xor
ss
movs
cmp
dec
xor
mov
sbb
aas
pop
or
fs
rol
sub
dec
lods
sub
popf
adc
bound
loop
test
or
xor
or
mov
mov
push
retf
pop
outs
ret
test
push
fdivr
fbstp
lock
mov
inc
cmp
adc
sbb
outs
sbb
xor
cmp
shl
adc
mov
push
scas
popa
sbb
and
or
sbb
inc
jns
adc
sub
dec
(bad)
ins
and
lea
fisubr
in
repnz
call
daa
sub
push
sbb
call
and
call
pop
xor
rcl
xor
sbb
pop
xchg
xchg
mov
fdivr
sub
push
adc
xchg
xor
(bad)
mov
dec
clc
or
adc
push
jecxz
and
ins
nop
mov
jge
pop
dec
add
je
or
mov
das
fwait
and
loope
ror
inc
stos
daa
loop
mov
mov
cmps
loop
sbb
cmp
pop
mov
sbb
xor
faddp
pop
sti
jnp
clc
mov
adc
push
ss
push
jb
dec
fmulp
repz
movs
sbb
ins
std
sub
adc
cmp
retf
jecxz
fdivr
sub
pop
or
push
mov
jmp
cwde
xchg
mov
das
jno
push
mov
inc
add
lahf
fistp
pop
repnz
cs
jp
mov
push
repz
pop
jno
pop
fild
test
xchg
in
movs
mov
dec
inc
js
movs
fcom
dec
push
cmp
repnz
in
jne
fidivr
mov
pop
cdq
cmp
out
in
jmp
pushf
or
adc
fcomp
pop
ror
aad
jmp
bound
out
stos
pop
popf
mov
inc
lds
sbb
dec
jno
stos
(bad)
clc
outs
hlt
jbe
dec
stc
adc
clc
stos
in
mov
dec
and
pop
neg
sbb
inc
jmp
cmp
xor
sbb
sbb
clc
fidivr
jmp
not
cdq
pop
les
mov
loope
pop
int
es
mov
jae
mov
in
mov
loop
aaa
mov
inc
add
call
ins
cmp
cld
mov
leave
jae
pop
adc
push
ins
shl
add
xor
into
cld
fsub
mov
repnz
into
in
cs
inc
sub
in
and
leave
pop
mov
shl
pop
sahf
dec
add
inc
mov
add
sub
dec
aaa
cmps
push
cmp
stos
aaa
push
pop
or
mov
or
or
(bad)
and
sub
shr
cmp
daa
lds
cmp
adc
in
pop
sbb
jae
mov
(bad)
push
test
int3
jno
dec
xor
mov
inc
movs
lods
(bad)
rol
aas
ja
pop
retf
push
inc
push
cdq
imul
cmps
dec
xor
inc
lods
call
je
mov
cmc
dec
je
aas
mov
and
ret
vpunpckhqdq
data16
bound
pop
sahf
cmps
iret
dec
(bad)
and
jne
mov
test
shl
push
adc
add
(bad)
das
rol
sti
jnp
jb
loope
jns
add
mov
mov
fsubr
fwait
push
aas
in
data16
test
fild
sbb
shr
pop
cmps
adc
aas
adc
xchg
test
mov
and
fldenv
sub
icebp
pop
cli
lds
pop
mov
push
enter
aas
icebp
cmp
dec
test
push
pusha
xor
and
in
dec
popf
and
int
arpl
(bad)
and
jl
(bad)
int3
fsubr
mov
clc
sbb
stos
scas
sar
cli
(bad)
sub
sub
mov
loopne
fsubr
and
push
jl
(bad)
test
jne
sub
cld
xchg
push
div
inc
shl
push
inc
cmp
retf
ss
into
and
inc
je
adc
dec
mov
stc
jbe
into
push
movs
jg
(bad)
int
cmp
fwait
std
inc
dec
or
push
fisttp
neg
mov
inc
movs
add
cs
mov
mov
adc
out
pusha
and
fnstenv
mov
pushf
jmp
dec
js
cmp
popf
lea
in
xchg
cs
cwde
rcr
movs
cld
movs
cwde
adc
out
push
cld
ss
cld
ror
movs
ret
clc
pop
xchg
pop
(bad)
in
addr16
popa
add
sbb
mov
aaa
or
push
into
cmp
loopne
mov
cwde
ret
push
clc
or
sub
hlt
adc
fbstp
in
sbb
xor
jle
mov
pop
mov
sbb
xchg
mov
pop
ret
gs
mov
add
cwde
and
lds
daa
out
mov
mov
sub
or
xor
stos
xlat
das
push
mov
push
add
mov
gs
mov
adc
jge
or
push
mov
inc
in
inc
push
ins
cmp
fstp
aaa
adc
adc
retf
movlhps
js
xlat
xor
or
mov
loopne
add
push
push
and
pushf
cmp
mov
stc
daa
adc
inc
ins
sub
lds
xlat
adc
jae
stc
(bad)
pop
sahf
or
xor
xor
fstp
sbb
frstor
push
sub
lock
mov
stc
push
jns
stos
loopne
adc
jmp
jb
sub
jmp
pop
push
aam
push
imul
aas
xchg
cmp
push
dec
jae
shl
push
adc
out
jp
ds
out
dec
cmp
cmp
mov
jne
mov
dec
mov
in
bound
jecxz
mov
mov
ret
pop
div
scas
adc
mov
addr16
inc
fld
mov
popa
ins
popf
dec
pop
xchg
jecxz
in
dec
out
cmp
mov
mov
loop
ins
dec
imul
sbb
in
adc
and
clc
inc
or
adc
popa
and
push
xlat
xor
cmp
test
ds
ret
outs
(bad)
(bad)
mov
pushf
cmp
push
cmp
add
fisubr
sbb
push
les
jmp
mov
inc
jge
mov
push
je
sub
sahf
push
movs
sub
fadd
jne
xor
popa
shr
jg
xor
mov
mov
adc
cdq
adc
mov
dec
pop
call
fwait
cmp
cwde
pop
aad
mov
in
fsubrp
dec
sub
push
arpl
(bad)
inc
imul
js
cmc
in
adc
or
sub
inc
xchg
mov
add
stos
xor
jno
sub
call
dec
add
jo
lock
ins
jno
fiadd
xor
out
test
mov
pcmpeqw
jecxz
lock
leave
std
or
psubusb
add
cmp
mov
sbb
xchg
fst
push
sub
and
je
and
js
sbb
out
pop
call
sbb
cmp
mov
xchg
icebp
lahf
push
xor
lods
mov
pop
and
sub
jo
xor
(bad)
xchg
jae
mov
mov
cmps
nop
leave
adc
sysenter
sti
into
in
add
scas
mov
int3
mov
sub
pop
ror
push
pop
outs
(bad)
fwait
pop
mov
pop
and
mov
jp
jle
and
adc
push
rcl
sbb
sbb
jno
jno
gs
jge
mov
dec
or
xchg
in
jmp
lods
adc
and
scas
sbb
sbb
inc
out
sbb
add
fiadd
stc
xchg
lock
in
hlt
call
cmp
lods
xchg
xor
repnz
popf
out
pop
mov
(bad)
neg
jo
ins
mov
shl
sub
push
sub
mov
mov
or
aam
mov
xlat
mov
xchg
mov
jbe
ficom
aas
test
mov
dec
(bad)
mul
rcr
jae
or
ret
push
cmp
stc
sahf
sub
imul
lods
lahf
std
xchg
add
test
jne
add
or
std
test
cmp
arpl
inc
stc
dec
retf
xchg
mov
dec
repnz
and
adc
lea
hlt
fistp
push
mov
xor
in
push
imul
scas
mov
je
sub
mov
fistp
ins
out
jmp
add
cdq
cmps
cmp
cmp
xchg
lea
clc
inc
daa
cmp
pop
sub
test
jnp
aad
sbb
pop
lods
push
shl
gs
ret
mov
es
pop
popf
in
jg
mov
nop
mov
sti
jge
or
sbb
out
out
sahf
cmp
mov
lahf
shl
scas
sbb
xor
xchg
add
outs
mov
test
jl
or
or
adc
jno
call
test
dec
iret
mov
call
xlat
sti
sets
in
or
sub
popw
cwde
aad
dec
cmp
mov
test
xchg
add
les
pushf
pushf
jle
hlt
xchg
popa
imul
out
cmp
iret
dec
xor
call
outs
cmp
call
mov
stos
popf
push
jmp
dec
jae
pop
fimul
mov
add
lahf
ins
mov
mov
cmc
popf
mov
pop
enter
cli
(bad)
cmp
(bad)
leave
push
mov
cmp
jo
jle
ja
dec
add
pop
push
fs
ja
adc
pusha
add
fistp
sub
pop
push
mov
adc
add
mov
adc
mov
pop
add
sbb
or
lods
sbb
bound
popa
fcmovu
mov
std
mov
(bad)
xor
sbb
test
xlat
cs
jae
in
push
sub
push
inc
in
and
sub
sub
jne
clc
(bad)
push
popf
clc
cmc
pop
xor
cmp
daa
and
addr16
sbb
and
daa
in
pop
ret
and
pop
jl
fs
mov
aam
dec
push
jmp
mov
pop
mov
mov
inc
daa
cmp
shl
sub
dec
or
or
pop
aas
out
sbb
(bad)
pop
push
scas
mov
push
push
dec
loopne
neg
adc
jmp
arpl
mov
mov
sub
jp
mov
jbe
aad
ins
retf
repnz
in
(bad)
lods
cmp
push
std
xor
inc
or
mov
dec
or
mov
imul
shr
ror
ja
pop
pop
icebp
bnd
adc
push
mov
sub
in
pop
shl
mov
xlat
ret
adc
mul
cld
outs
loope
and
mov
inc
mov
sub
xor
xor
pop
sub
gs
imul
inc
arpl
mov
cmp
pop
jae
movs
ins
cli
in
cmp
int
sti
adc
out
xlat
dec
sbb
adc
sub
pop
pop
test
push
and
push
pushf
sub
mov
je
jno
jno
jg
jbe
pop
dec
push
sti
div
test
and
popa
sbb
mov
nop
imul
jo
es
pop
sub
scas
jno
xchg
fst
call
jg
out
xlat
nop
leave
inc
xor
cmp
scas
cmp
jae
dec
cmp
push
jmp
aad
mov
adc
push
mov
hlt
add
loope
add
push
sub
das
fwait
jmp
pop
fimul
icebp
jns
mov
call
popf
clc
jnp
icebp
retf
dec
sub
(bad)
rcr
xchg
fdiv
lock
std
sub
ja
call
repz
xor
f2xm1
movs
jae
vmovdqa
and
sbb
retf
xor
lods
add
add
push
pop
cmp
aam
rol
push
mov
sbb
or
pop
push
push
out
cmp
dec
jae
mov
clc
sbb
mov
(bad)
adc
sbb
xchg
cmp
cmp
push
das
or
xchg
pop
inc
pop
push
sbb
cmp
sub
lds
pusha
sub
xor
mov
cmp
mov
jg
add
mov
jge
ins
(bad)
xchg
lods
xchg
test
test
dec
out
jnp
adc
rol
xchg
nop
push
fcomip
fs
cmps
mov
cmps
mov
sub
jbe
(bad)
xchg
aas
dec
mov
add
nop
fsub
and
(bad)
xchg
and
add
cli
push
(bad)
xor
pop
jp
jo
lea
pop
(bad)
aam
sub
adc
out
pop
dec
pop
cmp
sti
push
je
mov
sbb
retf
push
lods
sbb
dec
test
test
inc
dec
or
pop
inc
dec
scas
mov
mov
fild
lds
lods
mov
xchg
dec
and
mov
leave
push
and
(bad)
mov
pusha
test
es
adc
ja
cmp
rol
inc
pop
jp
stos
or
pop
push
or
lock
sub
hlt
dec
fwait
and
mov
cwde
jns
add
xor
int3
mov
add
or
cmp
mov
ja
push
fdiv
pop
sti
es
mov
es
loopne
xlat
or
ja
call
nop
or
adc
push
dec
fwait
(bad)
mov
mov
ror
jge
adc
xor
inc
in
pop
ins
inc
inc
add
inc
and
aas
mov
fsub
mov
pop
outs
cdq
adc
enter
out
fneni(8087
ds
int3
jge
mov
lds
into
in
pop
sbb
cmp
push
test
sti
scas
in
mov
int
outs
ficomp
push
xor
jmp
xor
mov
(bad)
jne
fisub
and
pop
dec
jb
xor
add
jns
mov
das
cmovno
jl
adc
jle
xchg
mov
imul
mov
adc
inc
inc
mov
cmp
jb
mov
or
stc
mov
dec
(bad)
repnz
cs
pop
mov
inc
ins
out
adc
in
pop
cmp
test
mov
lods
jle
and
not
push
in
lahf
inc
sahf
mov
and
pop
pop
xchg
sbb
outs
icebp
cdq
dec
repz
mov
inc
push
mov
out
or
pop
xchg
les
fdiv
add
test
in
out
and
call
aas
mov
addr16
in
inc
or
xor
dec
cs
jno
adc
push
xor
push
leave
cmps
mov
mov
arpl
xor
push
cwde
fs
fisub
sti
cmp
jo
enter
ror
loop
in
out
jecxz
dec
add
sti
dec
imul
fidivr
pop
inc
inc
fistp
pushf
jno
jo
sar
push
dec
shl
gs
push
aas
cmp
inc
mov
fcom
and
or
mov
jns
dec
push
add
mov
xchg
dec
mov
jnp
mov
enter
jmp
push
jecxz
xchg
retf
inc
les
pop
push
sbb
stos
mov
call
mov
lods
cmp
adc
add
js
pop
add
cli
mov
xor
jl
jle
je
and
mov
fcomp
cdq
test
jmp
fs
sub
xchg
imul
int
mov
and
fiadd
fisttp
pop
(bad)
mov
enter
test
je
push
cmp
mov
xchg
xchg
mov
push
sbb
adc
pop
and
jecxz
loopne
cmp
and
in
imul
call
test
int
mov
loop
cld
or
inc
mov
pop
jno
in
push
cli
pop
leave
pop
mov
ret
js
adc
mov
xchg
in
or
fidiv
adc
pushf
and
adc
adc
xchg
shr
add
cmp
jl
retf
fmul
push
into
sti
ret
push
and
mov
je
lahf
and
xchg
in
aad
adc
xor
loop
jnp
movs
bound
test
push
jb
mov
sub
sbb
adc
push
mov
cmp
das
xor
push
rcr
xchg
pushf
xchg
fimul
in
jg
inc
test
xchg
mov
and
sbb
pop
sub
out
push
aaa
int3
push
push
js
mov
aam
cmp
leave
pop
ss
pop
imul
jmp
aas
jns
fld
mov
cmp
cmp
mov
jp
iret
sub
xchg
mov
ds
cs
pop
sub
pop
xor
inc
pop
icebp
adc
xor
repz
mov
dec
fwait
xchg
mov
mov
arpl
out
or
aas
cdq
sub
pop
cmp
or
call
xor
inc
(bad)
sub
shl
aam
clc
xor
jmp
ja
push
out
jns
ja
pusha
jo
(bad)
xor
pop
adc
jo
lods
daa
inc
jb
gs
inc
mov
mov
push
cmp
sti
or
and
dec
in
cmp
icebp
stos
clc
loopne
addr16
add
pop
and
adc
push
(bad)
icebp
nop
movs
loop
and
icebp
mov
scas
popw
and
shl
mov
push
and
(bad)
sbb
adc
ds
mov
push
es
xor
pop
push
sub
scas
jp
imul
aaa
mov
ja
daa
or
imul
shr
pop
ss
pop
les
cmp
(bad)
retf
std
ret
xchg
mov
pusha
lea
cs
adc
(bad)
ins
out
ret
push
mov
lock
sar
mov
sbb
loopne
cdq
cld
adc
xchg
add
sub
mov
stc
bound
push
aad
out
retf
dec
pop
retf
mov
out
imul
iret
sti
push
inc
shl
daa
adc
sbb
or
das
cmps
ret
movs
sub
(bad)
inc
mov
mov
gs
mov
xchg
xor
in
ja
repz
aam
add
xor
inc
fstp
jbe
inc
(bad)
lods
gs
xor
mov
mov
push
out
add
mov
pop
lods
mov
push
fst
ret
dec
scas
cmc
jnp
jp
adc
or
and
mov
mov
cmp
push
and
scas
and
or
cvtdq2ps
adc
call
jbe
or
inc
adc
xlat
in
xchg
into
add
sub
sbb
dec
sub
mov
mov
jl
adc
mov
inc
sbb
int3
ror
outs
sub
push
test
mov
xchg
sub
xlat
aas
sar
das
hlt
xor
inc
popf
mov
mov
xchg
sub
jb
jl
mov
movq
mul
lea
stos
test
aam
sub
and
es
push
ja
sbb
push
stos
lahf
out
dec
jg
ds
sub
mov
(bad)
ds
ss
ficom
int
add
mov
adc
mov
dec
inc
(bad)
mov
adc
push
mov
cmp
(bad)
pop
push
movs
xor
jns
pop
push
xor
mov
mov
xor
xchg
nop
or
xchg
adc
sbb
pop
das
jge
jne
mov
xor
mov
xor
mov
cmp
inc
lds
sti
xor
out
adc
je
dec
ret
mov
into
js
cmp
idiv
loopne
xchg
mov
loop
ins
jmp
repz
mov
je
mov
fwait
inc
mov
dec
and
(bad)
adc
in
hlt
push
fmulp
loop
mov
addr16
jl
mov
inc
cs
dec
in
call
dec
popa
jp
cld
inc
dec
fnstenv
mov
shl
mov
retf
ins
mov
pop
mov
loop
loope
fidiv
mov
jno
mov
and
and
lahf
xchg
test
inc
imul
and
popf
cmp
jo
sub
lods
stos
jbe
jns
dec
neg
jo
(bad)
cli
outs
push
mov
adc
call
loopne
jle
bound
cmps
test
cmp
and
ds
retf
pop
or
inc
push
jmp
xor
adc
mov
scas
mov
rcr
adc
mov
cli
jnp
jno
nop
xor
test
scas
adc
stos
shl
xchg
or
jnp
mov
ss
fcmovb
jge
outs
mov
loop
pop
and
cmp
lods
cmps
mov
pop
sbb
push
stos
imul
outs
xor
in
or
hlt
int
(bad)
pop
dec
mov
cmp
jmp
sub
ffree
mov
repnz
hlt
jb
ret
outs
test
into
push
je
sbb
cmp
mov
xor
lea
dec
bswap
daa
jnp
mov
dec
cdq
push
cmp
movs
xor
mov
jecxz
cmp
push
outs
(bad)
mov
repz
nop
inc
stos
xor
jp
dec
cmp
aaa
leave
(bad)
neg
sub
ret
dec
jno
add
fstp
data16
cwde
stos
lahf
aad
(bad)
int3
xchg
inc
mov
mov
nop
mov
and
jmp
xchg
test
shr
jp
sub
sbb
adc
cs
and
inc
mov
inc
jb
push
daa
pop
dec
pop
data16
dec
out
jae
lea
pop
call
sub
jo
imul
jno
adc
sbb
shl
out
mov
pop
cmp
dec
adc
pushf
std
outs
pusha
mov
popf
xchg
xchg
aad
imul
sbb
and
xlat
mov
and
lods
jae
fadd
pushf
xor
(bad)
popa
xor
push
stos
adc
popa
sub
push
sbb
mov
ins
push
sbb
pop
pop
push
sbb
pop
leave
aas
push
data16
add
daa
lahf
lock
add
and
mov
mov
aas
jl
rcl
in
xchg
xor
inc
popf
aas
adc
jo
add
mov
(bad)
out
(bad)
loope
call
cmp
data16
mov
xlat
ins
and
sti
loope
icebp
sti
ret
mov
ss
push
iret
cmp
ins
pop
jl
adc
xor
pop
add
xchg
gs
retf
cmp
xor
imul
xchg
jecxz
jne
mov
test
std
push
sbb
lds
lds
int
cli
push
pop
js
jmp
add
(bad)
pop
ret
and
(bad)
xchg
dec
mov
pop
pop
inc
pop
mov
mov
push
mov
cmp
mov
mov
scas
cmp
adc
adc
stos
std
sbb
lods
xchg
imul
inc
leave
inc
and
or
mul
std
fidivr
sub
sar
and
mov
sahf
js
call
outs
movs
(bad)
enter
in
dec
and
mov
xchg
rol
cmp
repz
test
xor
daa
pop
add
ins
pop
push
xor
test
and
xchg
test
mov
pop
(bad)
add
add
fwait
dec
mov
ins
out
enter
repnz
aas
jg
ss
imul
cld
ret
cli
push
repnz
push
sbb
sar
stc
aad
add
mov
push
js
in
scas
dec
mov
add
es
push
out
push
imul
sub
ret
push
imul
out
sti
mov
cwde
arpl
shl
shl
ret
(bad)
aad
adc
(bad)
pop
lock
and
cmps
inc
aas
xor
add
fld
mov
xchg
mov
fisub
xchg
(bad)
jb
xlat
inc
and
mov
ds
cmps
sbb
push
lea
cli
movs
push
out
cmp
ds
inc
and
call
les
pop
adc
retf
pop
pop
pop
jecxz
xor
arpl
or
fbstp
ds
shr
dec
push
mov
jbe
xchg
xchg
sbb
mov
sbb
lods
jg
cmps
outs
and
adc
mov
adc
enter
in
mov
ja
mov
loop
mov
ins
mov
cmp
aam
mov
aaa
nop
sar
dec
sub
xchg
jo
aam
mov
mov
cmp
xor
fiadd
mov
leave
pop
mov
lds
icebp
ficomp
jp
(bad)
cld
xor
dec
lock
and
push
daa
fs
data16
dec
mov
pop
mov
push
pop
add
sub
ret
out
out
movs
(bad)
stos
push
call
popf
xchg
in
sub
dec
push
push
xchg
mov
(bad)
xor
mov
or
add
and
dec
jecxz
jecxz
or
rcl
fs
pop
(bad)
xor
adc
xor
push
sbb
mov
push
sub
hlt
push
and
loope
cld
rcl
iret
xchg
cmp
aas
mov
pusha
fucomip
pop
lods
fst
inc
ins
xchg
pop
cmps
cli
loop
pop
push
push
xlat
mov
adc
test
cmp
cmp
cmp
cmc
xchg
push
cmp
lahf
push
div
or
int
push
stc
push
div
jl
lea
das
add
lods
pop
(bad)
cmps
push
pop
imul
iret
xor
imul
mov
ret
push
jmp
lods
call
popf
inc
mov
nop
add
jnp
and
sbb
xor
(bad)
shr
adc
retf
test
adc
and
push
outs
xor
sar
or
or
outs
ficomp
ins
test
mov
ret
pop
adc
or
retf
mov
sbb
dec
cli
(bad)
and
mov
inc
jp
fdivr
sub
mov
loopne
push
jne
jnp
add
jmp
out
scas
in
cli
aas
shl
scas
loopne
int3
sub
ret
das
int
inc
loopne
push
pop
imul
out
call
or
icebp
mov
adc
fnstcw
lds
mov
in
leave
cs
xor
icebp
ins
inc
pop
and
push
aaa
adc
mov
add
ja
imul
ret
ss
fsqrt
or
cmps
adc
je
repz
inc
jbe
jnp
jl
mov
scas
or
movs
push
inc
ret
inc
adc
sbb
and
mov
loop
pushfw
mov
and
mov
dec
in
xchg
push
bound
pop
lahf
xor
add
pop
leave
in
xchg
pop
call
ins
rcr
leave
icebp
dec
test
call
fidivr
test
xchg
jg
push
test
add
sub
mov
and
fdiv
or
mul
(bad)
pop
aaa
(bad)
out
out
jg
or
gs
xchg
movs
lods
and
in
xor
mov
int
jecxz
add
movs
sbb
nop
mov
inc
sti
mov
pop
add
adc
lods
lods
pop
adc
cwde
out
mov
cwde
cmps
sub
mov
sahf
mov
gs
add
aam
mov
lock
call
dec
xor
jg
adc
inc
or
push
call
popf
inc
and
repz
or
pop
jmp
int3
dec
call
lods
iret
jbe
or
imul
popf
inc
(bad)
cdq
and
movs
sti
sub
cs
inc
inc
outs
mov
or
je
inc
aaa
sub
mov
pop
xchg
mov
mov
pop
outs
popa
inc
test
mov
fs
cmp
jle
xlat
(bad)
cmp
ficom
inc
and
fstp
rcr
mov
pop
sub
mov
push
pop
ds
inc
jb
mov
(bad)
pop
mov
push
inc
adc
xchg
test
inc
aas
mov
int
(bad)
out
mov
enter
xor
ret
mov
jne
or
jbe
cld
scas
rcr
xchg
jp
repz
in
sub
loop
lds
outs
or
or
icebp
add
clc
fnstenv
mov
cli
mov
mov
fmul
and
lods
pop
lahf
movs
loop
push
dec
dec
fwait
sub
lock
mov
addr16
mov
(bad)
mov
mov
ficomp
mov
xchg
mov
fldlg2
stos
scas
add
mov
adc
les
xchg
cmp
pushf
push
into
sub
(bad)
(bad)
test
cwde
add
mov
clc
pop
adc
jecxz
pop
sbb
xchg
inc
or
sbb
mov
sub
or
add
jle
test
repnz
jnp
retf
fidivr
mov
les
cld
test
inc
jb
(bad)
das
xchg
pop
call
mov
xchg
movs
cmps
fmul
adc
pop
mov
pop
test
data16
popf
sar
mov
sub
iret
add
test
jb
push
add
aad
mov
cs
test
adc
mov
fwait
sbb
sbb
push
xchg
(bad)
les
shr
(bad)
adc
jge
push
add
gs
sbb
movs
hlt
xor
cdq
js
xlat
xchg
sbb
xchg
mov
mov
stos
mov
xchg
out
call
mov
ret
cmp
dec
int
out
shl
pop
out
pop
mov
jnp
dec
loope
mov
adc
inc
mov
jg
loop
iret
mov
mov
sti
mov
jbe
sub
adc
or
mov
push
scas
retf
dec
dec
cmp
add
pop
adc
xor
(bad)
mov
loope
xor
enter
std
pop
mov
test
in
mov
das
and
dec
data16
mov
das
mov
adc
push
or
xor
pop
dec
mov
jg
jbe
pop
aam
cs
sbb
jmp
fmul
pop
retf
push
lock
cmp
jnp
jne
mov
(bad)
fidiv
call
lahf
mov
push
movs
push
fs
fcomp
outs
jb
lock
inc
repz
nop
and
cmp
push
fstp
out
jp
xor
pop
adc
in
push
pop
xchg
sbb
test
fild
mov
cdq
xor
and
jbe
pop
scas
or
cwde
mov
imul
lds
stos
repz
add
stos
mov
sbb
cmp
shl
or
clc
mov
and
jg
add
fdivp
xchg
sbb
cs
aam
cmps
cmps
cmc
js
mov
sub
push
pusha
push
std
mov
mov
pop
(bad)
cld
sbb
shr
mov
popf
and
fidiv
or
js
retf
ror
in
gs
into
mov
cli
adc
jmp
cmp
jo
sbb
loop
and
pushf
scas
in
xchg
cmps
dec
xchg
push
mov
ins
mov
mov
inc
retf
jne
adc
(bad)
ror
sbb
mov
jbe
das
(bad)
or
xchg
push
inc
stos
push
mov
outs
adc
adc
mov
inc
xor
inc
sbb
push
jecxz
mov
aad
push
and
in
pop
jae
push
aas
mov
xchg
xchg
jge
movs
clc
cmp
ins
leave
(bad)
iret
imul
pushf
sti
pop
dec
add
and
jne
stc
mov
sub
xor
pop
lea
adc
pop
fld
mov
xchg
pop
call
lea
add
sbb
fs
enter
(bad)
jmp
pop
push
inc
sub
fucomp
push
push
shl
pop
pop
sbb
xor
es
xchg
inc
mov
add
jg
xor
xor
(bad)
lods
sbb
in
fwait
mov
sub
std
call
jle
out
cwde
mov
dec
daa
jmp
movs
or
sbb
adc
mov
jnp
stos
inc
push
and
push
xchg
cmc
mov
test
inc
stos
jbe
sub
add
or
sti
add
mov
cmp
mov
sbb
int
push
jns
out
test
mov
int3
sbb
mov
mov
(bad)
es
adc
arpl
xor
mov
stc
aad
cmps
push
sahf
loope
outs
inc
jecxz
loop
cmp
(bad)
mov
sub
cdq
dec
mov
xchg
cli
jo
ss
outs
cmps
imul
loopne
pop
push
inc
adc
ror
mov
cmp
add
push
xor
fstp
js
fiadd
retf
fsubr
or
adc
adc
push
ins
movs
dec
push
add
push
xor
mov
push
popa
sub
pop
fild
xor
xor
movs
(bad)
stos
sar
jne
(bad)
jnp
pop
or
jmp
mov
sbb
xchg
pop
in
repz
das
shl
inc
mov
sub
sbb
sub
mov
cld
stc
call
stos
(bad)
outs
mov
and
cmp
rcl
call
mov
shr
call
mov
std
inc
jo
dec
xchg
cmps
ret
outs
mov
pop
and
fnstenv
ds
inc
stos
repz
dec
lea
fcomi
mov
sub
nop
ret
int
sbb
fcom
loop
std
enter
inc
adc
outs
outs
xchg
mov
sbb
cmps
js
jmp
xchg
mov
call
mov
call
stos
push
push
out
scas
adc
out
(bad)
int3
mov
popf
pop
aam
retf
pop
cli
or
cmp
cmps
pop
sub
xchg
aam
pushf
ret
sbb
icebp
mov
test
lfs
jl
dec
cmp
xchg
es
arpl
frstor
fisttp
add
dec
push
nop
fsub
jp
pop
movs
inc
jge
jb
pop
enter
or
or
xor
imul
cmp
repnz
jl
(bad)
not
mov
js
or
add
adc
mov
stos
js
dec
and
loop
pusha
add
inc
(bad)
dec
pop
or
mov
fild
push
sbb
sub
(bad)
pusha
ficom
shl
shl
jne
pop
mov
and
(bad)
loop
in
es
cmp
leave
xlat
int
outs
cmc
mov
xchg
xor
aad
sbb
mov
xchg
sub
push
(bad)
repnz
add
int
iret
cmc
js
ja
mov
mov
jecxz
mov
(bad)
aam
or
sbb
or
retf
adc
outs
mov
mov
dec
scas
inc
and
scas
sbb
aas
mov
sbb
adc
movs
into
inc
pusha
xlat
cmps
jp
setle
mov
jmp
xchg
push
pop
mov
and
dec
xor
mov
(bad)
outs
inc
daa
addr16
xor
ret
mov
leave
ds
stc
jecxz
shr
xor
xchg
cmps
fmul
movs
outs
mov
adc
sbb
mov
and
mov
(bad)
int3
or
bound
test
xchg
lods
(bad)
jae
push
das
dec
out
out
aad
sbb
lds
push
into
adc
scas
sti
jne
sbb
mov
call
mov
sub
mov
xchg
pop
or
xor
lock
loopne
mov
loop
mov
pop
scas
lds
(bad)
movs
add
mov
test
push
cmp
sbb
test
sti
jb
push
fld
inc
sub
stc
cmc
sub
adc
ss
ret
add
mov
(bad)
and
mov
aaa
addr16
(bad)
dec
cmp
pushf
in
jns
xlat
lods
adc
arpl
ja
mov
mov
mov
addr16
shl
ds
or
jg
sub
call
xchg
lods
add
cli
xchg
sub
movs
jo
arpl
fsubr
cmps
inc
cmp
sbb
jns
mov
idiv
or
jb
(bad)
xchg
cmp
les
leave
push
xlat
call
push
lahf
push
test
sub
retf
ja
sahf
(bad)
stc
loope
cmp
mov
xchg
adc
shl
jmp
jg
ss
or
cld
(bad)
adc
sub
imul
cmc
xchg
mov
imul
imul
and
xchg
mov
into
fsub
mov
mov
mov
xor
data16
(bad)
(bad)
aam
adc
mov
jg
pop
test
std
loop
jg
pop
popf
int
jae
mov
fdivr
stc
jg
shl
pushf
sbb
out
mov
std
cld
dec
cdq
out
test
xor
call
cmp
push
push
mov
add
rcr
shr
inc
cwde
retf
xchg
mov
sbb
cmp
mov
bound
sub
cmp
or
(bad)
(bad)
arpl
sub
fbld
sub
push
jg
stos
jl
ds
xchg
test
enter
mov
outs
sti
cmc
mov
jb
(bad)
scas
adc
ins
test
sahf
xlat
sub
stos
stos
cs
add
lds
push
fild
(bad)
jmp
test
xchg
inc
retf
arpl
int
and
repz
lahf
pop
push
cs
mov
scas
xchg
(bad)
mov
adc
mov
popa
imul
xlat
ins
jmp
mov
mov
cmp
adc
repnz
mov
into
and
test
pop
aad
adc
jno
push
int
sti
push
mov
test
xchg
mov
xlat
adc
ja
shl
arpl
pop
ins
iret
inc
sub
sub
rcr
mov
dec
pop
xor
sub
mov
push
adc
nop
mov
mov
fisub
mov
add
jecxz
cs
pop
rcr
cmp
repz
pop
pusha
mov
sbb
and
movs
jg
outs
fisub
sbb
xchg
gs
xchg
repnz
rol
mov
sub
adc
jno
mov
sbb
scas
xor
stc
and
jae
lock
(bad)
fidivr
loopne
leave
xor
in
in
fmul
mov
inc
xchg
cmp
push
pop
push
xchg
lods
sbb
sub
jecxz
mov
shr
push
stos
(bad)
push
jl
mov
pop
add
(bad)
retf
jl
loopne
imul
lods
fldpi
aad
push
ja
js
lahf
jbe
scas
inc
pop
mov
outs
scas
mov
lods
dec
xchg
ficom
ficomp
out
sar
ror
in
imul
test
jb
rol
adc
loop
cmc
ret
adc
(bad)
jmp
imul
pop
cli
pop
std
iret
xchg
cmp
and
dec
sub
xor
imul
dec
or
jle
mov
mov
out
retf
shl
jo
retf
push
cmps
jg
std
sbb
imul
(bad)
inc
adc
add
jno
fwait
dec
mov
test
or
das
les
push
dec
call
xchg
ret
mov
lahf
dec
out
or
test
ins
repz
clc
imul
fstp
mov
pushf
pop
xor
or
sar
sbb
into
dec
loope
cmovbe
addr16
mov
mov
mov
pusha
cli
test
das
mov
xchg
sbb
daa
div
push
mov
ret
pop
int3
mov
dec
bound
(bad)
in
pop
icebp
pop
leave
enter
xchg
push
call
ret
push
test
mov
call
sub
sahf
popf
mov
add
imul
pushf
repz
aas
enter
imul
jnp
std
push
addr16
sub
xchg
aam
sbb
sub
inc
std
retf
test
mov
sub
inc
adc
shl
cmps
hlt
xlat
and
or
sahf
sub
sahf
test
mov
(bad)
fsubr
xchg
sbb
xor
clc
mov
out
mov
push
pop
(bad)
dec
add
pop
repz
or
aas
pop
ds
cmc
adc
mov
jno
push
push
xchg
pusha
stos
fcmovb
das
ja
fdivr
adc
dec
jl
jmp
cmp
icebp
ins
xor
push
mov
xor
cmp
cld
in
shl
fcmove
pop
fimul
shl
outs
scas
and
std
pushf
imul
mov
aas
sti
js
xchg
or
clc
test
mov
pop
iret
gs
push
(bad)
into
mov
test
in
fcmovnbe
enter
popa
hlt
test
and
movs
sub
shl
xchg
fst
sbb
fsub
mov
xor
sbb
pop
dec
cmp
imul
mov
setp
int3
cmps
aam
inc
jecxz
push
jp
or
inc
sub
inc
mov
popf
pop
into
popf
mov
sar
adc
jnp
pshufw
aam
je
cmp
jecxz
shl
xchg
inc
pop
mov
mov
mov
dec
mov
push
xlat
mov
sbb
push
adc
mov
mov
push
shl
mov
jmp
iret
adc
mov
jg
cdq
ins
push
adc
popa
xor
dec
xor
daa
int
jne
fcom
mov
imul
ins
mov
mov
inc
push
or
sti
aaa
(bad)
xchg
(bad)
pushf
and
lods
mov
and
mov
imul
pop
lds
xor
mov
popf
jae
mov
mov
or
out
dec
mov
(bad)
jle
mov
imul
cmps
(bad)
in
push
addr16
fistp
outs
sub
pop
push
jb
add
not
sub
aas
mov
cmps
and
test
stos
pop
cmp
int
scas
adc
adc
xchg
xor
fstp
sbb
jmp
stos
xor
jge
aad
add
ja
pop
sti
add
xor
test
jne
cmp
xor
pusha
sub
les
jb
out
add
push
fisub
bnd
dec
mov
or
std
adc
aaa
dec
push
xchg
push
cdq
pop
out
dec
mov
cld
jb
jns
pop
add
jo
push
mov
mov
mov
gs
pushf
ins
xor
dec
and
aas
in
xchg
mov
(bad)
daa
adc
adc
xchg
dec
pop
xchg
sub
aas
mov
outs
xchg
cli
fsub
xchg
call
popf
ja
ins
xor
fsubr
push
xchg
dec
rol
jl
cmp
xchg
cmp
and
lods
inc
mov
js
cmps
push
sahf
arpl
call
mov
stc
add
fwait
scas
jle
int3
int3
xlat
push
xlat
add
ret
mov
mov
and
stos
loope
or
(bad)
mov
mov
xor
add
aaa
ins
jno
es
and
idiv
pop
je
xchg
inc
popf
fnop
add
aas
push
call
xchg
push
jnp
leave
cmp
pop
fcmovb
fdiv
mov
cwde
add
shl
retf
loop
cld
mov
clc
jbe
popf
add
jns
adc
and
adc
aam
addr16
xor
inc
cmp
lods
ja
push
pop
cdq
loope
cmp
add
mov
or
pop
push
xchg
xlat
retf
repz
jp
sub
push
andps
jp
jo
add
or
in
(bad)
mov
push
in
lock
dec
stc
xchg
sbb
sbb
mov
adc
rcr
aad
lods
aam
jge
test
xlat
sbb
mov
fisttp
rcl
lods
ret
cmp
and
lods
in
cs
dec
mov
pushf
iret
jno
pop
jg
xchg
mov
retf
adc
push
sti
mov
pop
mov
fistp
mov
mov
inc
aas
xchg
push
lahf
shl
cmc
std
push
xlat
xor
lea
pusha
test
pop
pop
cdq
sub
sub
lods
in
pop
lea
test
bound
ret
das
fcmovu
enter
mov
push
pop
add
ror
ds
jge
outs
ror
iret
push
jmp
pop
lods
je
xchg
stos
and
stos
fcom
mov
fisubr
mov
push
push
mov
cmps
push
pop
mov
or
mov
inc
cdq
call
sub
retf
pop
sub
mov
xor
dec
loop
add
enter
or
cmp
xor
push
or
push
jge
ss
or
sbb
sti
sbb
les
or
lods
rcl
enter
inc
xchg
stos
(bad)
push
pop
mov
pop
xchg
dec
xor
sbb
out
out
int3
repnz
cmp
out
sub
push
push
add
xchg
push
mov
dec
fisub
mov
dec
fdiv
ret
outs
ins
(bad)
shl
pop
repz
ret
sbb
frstor
xchg
push
fdivp
push
bswap
fnstenv
lahf
imul
sbb
cmc
add
daa
mov
test
daa
push
jl
or
push
and
fcom
dec
jecxz
adc
and
sub
cli
jae
ret
dec
jp
cmp
jns
mov
lods
hlt
and
call
sbb
dec
leave
daa
(bad)
fmul
into
retf
inc
and
mov
movs
push
repnz
mov
xchg
shl
(bad)
mov
jnp
sbb
mov
or
mov
mov
mov
adc
inc
call
fadd
adc
(bad)
sub
adc
inc
mov
addr16
pop
out
cld
adc
ret
jnp
movs
jb
fidivr
sub
cmps
pop
dec
xor
mul
sub
mov
push
aas
ret
or
hlt
popf
bound
stos
das
repz
add
mov
das
(bad)
rcr
pop
es
popa
push
pop
or
jo
cmp
scas
xor
push
pop
dec
(bad)
jb
or
and
jmp
mov
adc
in
imul
mov
mov
add
test
dec
(bad)
repz
popf
sbb
loop
sti
push
mov
add
sub
and
adc
repnz
fcomp
addr16
xchg
adc
and
mov
sub
add
daa
enter
mov
inc
aad
retf
(bad)
push
mov
int3
ins
out
cmps
clc
pop
jecxz
pop
jecxz
xchg
movs
mov
mov
or
pop
cs
test
retf
loope
and
dec
(bad)
pop
pop
mov
fld
mov
call
popf
lods
pop
inc
jge
push
jle
push
popa
(bad)
xchg
mov
fstp
addr16
mov
or
mov
xor
int
sbb
mov
mov
ret
aaa
pop
sbb
pop
ins
cmps
cmps
(bad)
inc
pop
push
imul
or
push
test
dec
or
xor
mov
les
mov
out
mov
int
out
data16
xor
test
or
adc
mov
xchg
cli
xchg
inc
pop
popf
hlt
jp
inc
rcr
sub
sbb
mov
stos
cmc
xor
(bad)
and
ret
mov
mov
push
xor
sub
and
sbb
or
xor
dec
les
jmp
pop
jne
(bad)
or
ror
idiv
jg
ins
dec
sbb
xchg
xor
pop
xchg
icebp
jmp
js
jecxz
mov
imul
aad
sbb
mov
adc
cmp
xor
mov
ds
movs
ins
mov
mov
pop
push
popa
pop
ins
and
pushf
lods
add
sbb
cli
add
inc
ds
xchg
(bad)
dec
fwait
or
and
lock
fcmovbe
cmps
jge
pop
out
pop
jnp
je
mov
shr
xor
and
inc
jb
or
push
sub
mov
int
(bad)
cmp
inc
sbb
hlt
loopne
daa
adc
lock
mov
sub
jmp
mov
dec
push
mov
lods
(bad)
in
in
push
ins
mov
dec
pushf
cmp
jnp
push
nop
mov
mov
iret
mov
call
xor
push
(bad)
xchg
gs
jae
or
sub
add
repz
xchg
ficom
sub
aas
test
mov
cld
mov
mov
lods
popa
xor
hlt
loope
outs
adc
jecxz
shr
jbe
clc
push
pop
cs
or
fidivr
movs
(bad)
jge
pop
fsub
outs
retf
mov
and
jno
cmps
hlt
ret
jnp
mov
cmp
retf
adc
ret
sub
cld
inc
push
adc
cmp
mov
in
push
mov
loop
(bad)
ss
rcr
std
nop
push
mov
jnp
sbb
xor
call
dec
pusha
mov
dec
fs
pop
or
add
adc
shr
mov
(bad)
push
pop
icebp
repnz
retf
jmp
fwait
out
mov
in
mov
(bad)
int3
xchg
ins
or
aas
rol
es
(bad)
mov
fidiv
pop
cmps
mov
mov
lahf
lea
fisub
addr16
cmps
int
push
test
sub
outs
aad
stos
bound
in
retf
mov
mov
xchg
mov
mov
(bad)
push
mov
adc
mov
dec
daa
xchg
frstor
iret
icebp
imul
cmps
jo
fmul
mov
mov
lds
js
mov
adc
sbb
gs
clc
or
xchg
ins
out
sub
loop
xor
clc
aam
push
cmp
mov
icebp
jecxz
gs
jp
and
repz
(bad)
xor
shl
cmc
push
arpl
cmc
or
(bad)
in
xchg
in
xchg
repz
stos
jne
sahf
push
add
and
mov
test
cmc
mov
ss
aam
sbb
or
mov
rol
mov
mov
mov
mov
pop
aas
mov
dec
cld
mov
test
jns
outs
call
or
jne
xchg
enter
cmps
or
push
scas
sub
ret
lds
jmp
jno
xlat
xchg
sub
xchg
outs
jno
push
mov
pop
sbb
pop
nop
and
rcl
and
(bad)
das
and
cmp
les
cdq
add
cmc
nop
das
xor
mov
aas
movs
jmp
xchg
loopne
cmp
add
aad
in
dec
jnp
ins
mov
mov
jl
aad
loop
call
mov
shl
adc
clc
cmp
adc
xor
iret
and
inc
push
cmp
cmp
(bad)
call
sbb
cwde
pop
loopne
mov
rcr
call
push
sbb
push
jae
shld
popf
sti
in
fimul
pop
push
cmp
popf
(bad)
xor
lock
ja
lds
jp
fs
jl
ja
in
pop
jno
or
mov
out
and
test
lods
cwde
inc
popa
add
rol
push
and
xor
imul
loop
call
clc
sub
outs
cmp
xor
jb
pop
xor
mov
cs
clc
aam
cmp
shl
cmc
mov
sub
aad
sub
pop
aaa
mov
stos
nop
ret
lds
jo
pop
loope
cmc
lods
lods
loope
int
or
mov
xor
add
cs
clc
outs
in
add
pop
aad
xchg
aaa
lods
rcl
popa
into
xchg
jecxz
sahf
mov
pop
xchg
xor
jae
cs
pop
retf
imul
(bad)
xchg
sbb
(bad)
cmp
or
cmp
pushf
cmp
(bad)
cli
push
js
scas
fstp
das
or
xchg
jne
ret
push
jno
xor
cmp
imul
fisubr
mov
jbe
mov
mov
aas
fiadd
sbb
xchg
inc
pop
lds
leave
test
scas
inc
dec
inc
js
shl
mov
jmp
(bad)
jno
(bad)
cdq
cmps
hlt
mov
rcl
arpl
arpl
cmc
sub
ss
push
retf
xor
fcmovne
jmp
rcr
movs
loopne
jns
fwait
pushf
cli
pop
repz
push
(bad)
jge
sbb
pop
sub
inc
(bad)
fdiv
xor
and
lahf
xor
stos
inc
sub
(bad)
ins
push
adc
jl
mov
aad
(bad)
mov
xor
mov
into
outs
aad
push
pusha
retf
push
sahf
(bad)
retf
hlt
adc
(bad)
lods
outs
push
outs
xchg
out
call
or
adc
inc
shr
mov
add
mov
in
cli
fs
or
adc
xchg
inc
sub
retw
adc
mul
xchg
aad
ret
mov
xchg
out
sbb
push
mov
outs
cmp
sbb
cwde
add
test
pop
sub
fwait
sub
bnd
inc
cwde
loope
mov
popa
stos
cs
sbb
(bad)
push
and
xchg
sbb
cmp
mov
mov
xchg
sbb
mov
jns
mov
idiv
aam
mov
das
mov
data16
mov
dec
fs
test
fcomp
or
push
inc
add
push
sub
sub
and
push
mov
inc
push
cmp
(bad)
(bad)
push
cmps
fs
dec
cmp
stos
out
xor
popa
mov
push
jg
push
push
scas
mov
jno
inc
push
sub
gs
cmp
jg
mov
xchg
pop
out
sbb
inc
cmp
add
retf
test
inc
popa
int3
mov
inc
pop
clc
ret
je
fiadd
pop
or
lods
(bad)
fsubr
scas
push
(bad)
or
ret
dec
cmp
adc
fnsave
inc
(bad)
or
ss
pusha
pandn
adc
ret
std
mov
cwde
int
call
test
ret
int3
jle
nop
cmps
or
xor
mov
int3
mov
out
test
push
test
cli
mov
addr16
adc
jmp
add
xor
inc
out
pop
ss
sub
mov
rcr
in
xchg
push
mov
jmp
ins
inc
cmp
adc
not
arpl
xchg
add
mov
add
pop
push
(bad)
fldenv
xchg
push
sbb
xchg
mov
adc
jp
ins
imul
pop
sub
and
hlt
stos
xchg
rcr
mov
cmp
push
adc
jo
ins
mov
ins
jmp
push
cmp
sub
sub
push
dec
mov
cld
mov
iretw
imul
dec
push
pushf
and
imul
mov
inc
in
loop
push
rcl
scas
cmp
and
dec
shl
rcl
ins
stos
mov
lods
out
mov
in
in
sub
fwait
mov
add
scas
hlt
test
sub
lods
and
cmps
jae
sbb
or
push
pop
ja
movs
add
sub
fsubrp
jmp
xchg
jo
stc
in
push
sub
js
fsub
cld
int3
mov
pop
push
test
bound
inc
sub
add
popf
outs
xchg
not
cmp
leave
movs
into
xor
ror
enter
(bad)
push
sub
pop
mov
xchg
jo
dec
push
mov
add
or
fistp
cmp
add
cli
iret
fcmovb
cwde
iret
loope
or
pusha
cwde
mov
xor
test
movs
sub
je
ficom
inc
sbb
add
and
in
in
mov
add
or
sbb
pop
lahf
imul
cli
mov
lods
pusha
push
jmp
hlt
sub
dec
add
stos
xlat
leave
nop
aad
nop
sbb
rol
push
outs
cld
fst
fdivr
(bad)
sar
dec
or
mov
in
movs
pop
clc
scas
mov
rol
mov
or
(bad)
lahf
jae
dec
cmps
mov
xlat
mov
out
lods
in
imul
iret
int3
inc
xlat
sub
mov
add
adc
add
lds
mov
addr16
jbe
in
aam
mov
std
mov
sti
sbb
sar
push
mov
(bad)
dec
lahf
mov
gs
pop
adc
jns
push
add
mov
cmp
mov
cmps
les
add
(bad)
popa
mov
and
sbb
ins
ss
cdq
rcl
or
add
ror
cwde
xchg
pop
pusha
sbb
sti
or
mov
dec
mov
icebp
add
or
mov
or
scas
ror
jne
je
add
(bad)
movs
in
in
jne
mov
mov
scas
pushf
aas
cmp
scas
in
retf
or
cmc
cmps
outs
in
jp
and
push
jle
sbb
inc
and
leave
push
pushf
rol
mov
mov
jmp
popa
dec
jmp
out
adc
mov
mov
ret
push
pop
push
dec
loop
xor
or
inc
push
xor
sbb
pop
pop
stc
mov
and
mov
jnp
cmps
lods
sub
lds
das
inc
cmps
pop
sub
sbb
xor
shr
push
add
sub
add
pop
mov
prefetch
or
jo
popf
stos
or
dec
(bad)
cs
outs
stos
aaa
sub
cmp
adc
daa
push
mov
push
test
aas
and
lock
sbb
cmp
xchg
or
jae
in
fsubr
push
fild
mov
fxam
adc
imul
mov
lea
aas
les
enter
loopne
and
outs
ds
mov
inc
enter
sbb
call
jnp
jno
sub
xor
xor
xor
inc
mov
ret
es
fcom
inc
repnz
or
jno
dec
inc
dec
add
jmp
sbb
cwde
cmp
fnstsw
xor
pop
xchg
push
mov
mov
lahf
les
pop
lea
js
jbe
adc
in
jo
push
fld
mov
repz
pusha
add
inc
cmc
mov
cmp
cdq
(bad)
push
stos
inc
adc
sti
iret
addr16
push
pop
aas
dec
mov
repnz
fist
dec
sub
add
mov
jp
test
sbb
data16
jno
push
lds
and
call
test
xchg
aam
loopne
cmp
mov
aad
xchg
fcmovb
sahf
daa
jno
fld
or
xchg
add
cmp
add
or
mov
lock
mov
sub
add
lods
jae
xor
dec
fisubr
xchg
jbe
aam
push
adc
loopne
test
jp
pop
dec
adc
in
aad
cmp
add
mov
pop
add
lahf
rcr
mov
ds
xchg
rcl
mov
or
mov
push
push
in
mov
add
pushf
sbb
(bad)
and
test
cli
jns
push
sahf
adc
xchg
into
pop
inc
fcomp
mov
cmc
bound
aam
push
sub
bound
mov
sbb
dec
push
mov
cld
inc
int
add
hlt
test
push
jbe
das
cmc
sbb
xchg
xor
mov
sub
adc
adc
xor
repnz
jb
jge
sbb
(bad)
scas
scas
jg
daa
push
loope
or
push
jne
cld
xor
add
pop
xchg
dec
popa
aas
imul
ss
mov
push
jmp
pop
add
pop
retf
or
aad
cmp
pop
jno
fcomp
pop
dec
inc
out
pop
jmp
loop
pop
sbb
mov
(bad)
fidivr
jmp
xor
cmps
or
out
lods
scas
dec
inc
mul
scas
and
mov
dec
retf
jl
int
out
push
dec
call
fild
pop
cmp
bound
push
fist
cmc
or
dec
push
adc
arpl
pusha
ins
cmp
adc
mov
mov
mov
outs
jns
js
clc
aad
xchg
or
sub
inc
cmp
cld
add
adc
cmp
fiadd
fs
fwait
xor
fistp
add
cli
mov
add
fdiv
push
mov
inc
xchg
loope
sbb
mov
cld
das
mov
push
pushf
xchg
das
inc
ja
retf
sbb
lods
ins
es
add
loopne
loope
xchg
adc
mov
int3
daa
sbb
push
jbe
ins
mov
arpl
or
inc
(bad)
lods
mov
imul
fbld
call
fstp
push
mov
fs
xlat
mov
mov
inc
stos
leave
test
xor
pop
mov
test
sub
stc
sbb
cmp
xor
mov
(bad)
jecxz
ret
loopne
jmp
add
pop
sbb
outs
jne
cld
dec
ins
xchg
xchg
push
dec
shl
push
cwde
imul
dec
jnp
js
mov
nop
movs
push
pop
frstor
stc
lods
jmp
mov
jp
das
sub
pop
adc
and
pop
and
dec
arpl
pop
inc
scas
jne
dec
sub
pusha
adc
cld
fadd
fsub
jecxz
vcmpsd
arpl
ror
(bad)
stos
out
aad
(bad)
inc
jb
fidivr
adc
bound
ins
cmps
xchg
push
inc
hlt
push
fs
sub
cmps
int
add
ret
xor
mov
sub
or
mov
push
add
dec
sub
sbb
cmp
mov
cmp
fistp
inc
iret
inc
ds
lods
xchg
adc
test
in
sub
and
test
add
sub
xchg
dec
into
dec
dec
popf
popa
cmps
adc
and
mov
jmp
mov
lds
loope
inc
mov
outs
arpl
push
xlat
pop
dec
jmp
mov
into
loope
out
loopne
pop
mov
inc
and
jo
cmp
xchg
mov
push
bound
repz
push
(bad)
dec
sar
ficom
inc
fcom
loope
inc
inc
in
sub
lea
or
xchg
cli
test
fadd
enter
lea
lock
stc
neg
add
shl
retf
push
add
cmp
out
int3
frstor
sub
aas
cmps
out
pop
repz
rol
mov
mov
loop
dec
cli
cmc
add
sub
sub
mov
xor
jp
jmp
div
test
dec
pop
add
bound
(bad)
sbb
mov
dec
retf
add
cmps
mov
fisubr
fdiv
add
xchg
cld
jno
call
xchg
sbb
cli
or
in
loope
sub
pop
sti
(bad)
out
fbld
(bad)
pop
dec
jecxz
mov
sbb
jbe
enter
xor
sti
loope
jge
mov
sbb
push
outs
xor
xchg
sar
adc
retf
inc
mov
lock
or
push
push
outs
neg
mov
push
mov
retf
fcom
repz
and
lods
jl
mov
retf
xchg
fimul
ret
push
aas
out
add
xor
mov
mov
add
mov
push
pop
jne
outs
gs
ror
jmp
daa
loop
mov
int
mov
fbstp
mov
pop
push
xchg
outs
setns
xchg
out
(bad)
shr
push
in
dec
xor
addr16
mov
pop
into
cmp
mov
adc
enter
ja
xchg
add
mov
add
int3
xchg
add
xor
adc
adc
and
push
add
adc
lock
jno
or
(bad)
pop
sub
ss
les
xor
fcomip
xor
add
xor
adc
(bad)
retf
adc
mov
test
or
cmp
sub
push
sbb
fs
dec
mov
jge
clc
ds
fst
sbb
pop
push
and
nop
jp
mov
jle
dec
jae
push
cld
(bad)
retf
pop
xchg
xchg
enter
sbb
and
nop
mov
jno
and
hlt
mov
mov
jne
and
jl
test
(bad)
fbstp
cmc
adc
bnd
popa
add
aaa
inc
loope
dec
nop
clc
or
pop
mov
movs
imul
jb
pop
sbb
shl
jns
vpsadbw
test
jmp
cmp
pop
xchg
call
xchg
aam
pop
push
push
inc
std
dec
loop
pop
cs
repnz
cmp
dec
fld
test
inc
cmc
movs
into
rcr
jne
jns
pusha
neg
sbb
jno
add
or
sbb
xor
out
xchg
lods
xchg
and
mov
(bad)
aas
mov
test
inc
les
jecxz
lock
imul
sbb
aam
jle
or
(bad)
or
out
xchg
xchg
fldenv
mov
leave
or
jbe
and
pusha
sahf
mov
inc
mov
mov
pop
xchg
mov
xor
in
adc
fadd
mov
fild
mov
jg
sub
sbb
call
fist
(bad)
into
xchg
and
pop
xchg
or
sub
in
js
sub
dec
dec
cmps
mov
pop
daa
jmp
cs
imul
xor
jae
push
sbb
fisubr
add
adc
jp
sbb
adc
or
mov
mov
cmps
stos
fisub
aam
add
push
adc
test
test
in
pop
(bad)
(bad)
mov
adc
and
rol
push
jecxz
sbb
jp
retf
std
jl
cmp
fnstsw
inc
enter
adc
in
cdq
hlt
sbb
jb
and
not
mov
dec
stc
ret
add
jl
adc
std
outs
stos
mov
jns
add
std
or
cdq
xor
sahf
mov
adc
inc
pusha
sbb
addr16
mov
mov
pop
repz
or
test
mov
jg
mov
cmp
cmp
sahf
ret
xor
repz
pop
aaa
sub
cld
xchg
mov
pushf
sub
add
test
jecxz
repnz
pop
fs
retf
and
inc
push
mov
push
xor
mov
into
xchg
sub
and
rcr
dec
dec
loopne
leave
pushf
lea
pop
add
cmc
add
sbb
mov
dec
sbb
loop
ins
jecxz
mov
mov
mov
imul
mov
clc
or
pop
fsubr
fisub
xor
sbb
rcl
fcomp
sahf
pop
ror
call
sub
xor
std
push
arpl
test
mov
add
ret
fwait
ins
cmc
cwde
lahf
sbb
lds
clc
into
mov
out
scas
jnp
ret
dec
sub
mov
add
mov
ret
out
pop
mov
sbb
jg
mov
dec
or
movs
sbb
push
cmp
icebp
pusha
xchg
inc
std
and
xchg
dec
adc
xor
push
or
dec
clc
push
mov
sbb
add
loopne
add
mov
hlt
adc
and
loope
or
mov
push
cmp
movs
jbe
pop
pop
and
sar
mov
sub
fst
dec
cli
pop
jg
(bad)
(bad)
adc
push
and
popf
mov
lds
rcr
int
rol
les
sbb
sbb
push
add
and
pop
or
pop
dec
sub
test
arpl
inc
push
das
jbe
xlat
int3
mov
fst
aad
or
inc
in
push
or
dec
mov
loopne
and
push
mov
loop
mov
xchg
(bad)
jl
stos
outs
out
aaa
jae
dec
sbb
and
dec
xchg
data16
add
gs
loopne
inc
bound
push
sbb
data16
sbb
fcom
sbb
mov
arpl
pop
outs
imul
pop
imul
mov
scas
es
xor
retf
nop
sbb
pop
jmp
mov
mov
lods
lea
cmp
fwait
sub
xor
mov
ret
fst
lea
stos
loopne
les
and
inc
arpl
mov
scas
adc
mov
popa
das
cdq
dec
or
test
aaa
les
sub
into
pop
sub
repz
or
adc
mov
fwait
mov
sbb
cmp
cmp
mov
test
outs
mov
test
test
xor
jmp
and
call
or
jl
mov
pop
ret
dec
inc
lds
push
hlt
call
pop
xlat
sbb
fdiv
push
pop
int3
je
in
xor
(bad)
in
movs
pop
mov
inc
jmp
stos
jnp
(bad)
xlat
test
and
add
shr
mov
cmp
int
xchg
mov
stc
leave
xor
xchg
cs
cld
outs
popa
mov
mov
jne
or
cmc
jno
(bad)
test
cmp
sub
(bad)
pop
xchg
das
jo
jmp
mov
pushf
sub
cli
mov
push
xchg
in
pop
add
lods
out
fwait
and
fdiv
xor
call
mov
jnp
in
repnz
mov
popa
(bad)
jmp
push
out
lahf
push
cmp
ret
aam
(bad)
cmp
aaa
pop
dec
outs
mov
mov
dec
pop
scas
iret
repz
loop
test
and
pushf
sti
retf
mov
lock
cmp
mov
fistp
retf
lods
push
pop
test
cmps
pop
adc
repz
in
ins
sub
xor
mov
push
cmc
stc
das
test
popf
dec
int3
cli
jo
or
ror
in
ins
(bad)
xchg
dec
out
movs
in
call
dec
or
xchg
test
call
xor
push
inc
lahf
(bad)
fbstp
xchg
das
in
sub
out
sub
rcr
repnz
in
pop
dec
aaa
push
int3
lea
popa
and
test
(bad)
cld
xchg
pop
jp
jnp
test
shl
mov
dec
(bad)
(bad)
or
add
inc
neg
pop
ret
icebp
inc
sahf
inc
cmps
sub
add
adc
push
inc
push
jns
fcom
push
pop
clc
dec
sahf
or
pop
rol
jbe
cmp
push
pop
mov
or
or
aas
jo
mov
imul
sti
dec
jecxz
push
fist
push
jbe
sub
popa
es
popa
bound
add
imul
call
imul
pop
xor
inc
aam
aaa
and
fild
mov
pop
or
popa
inc
xchg
add
adc
xor
stos
call
add
adc
fnstsw
out
mov
cmp
bound
mov
adc
call
sub
push
lahf
jl
inc
jno
imul
repnz
cdq
push
cli
clc
adc
mov
pop
scas
lea
push
neg
sub
(bad)
loop
dec
jl
shl
data16
es
mov
dec
(bad)
js
xchg
sbb
jl
dec
mov
jae
outs
dec
mov
mov
dec
pop
mov
or
xchg
dec
cmc
jmp
ja
inc
and
sbb
add
push
popf
sbb
or
enter
mov
inc
push
fidivr
fiadd
pop
cmp
rcr
jle
aad
shr
js
in
and
inc
sti
cld
push
shr
pop
test
or
xchg
or
stos
jp
outs
aas
sbb
jo
jae
and
or
xor
sbb
mov
adc
sbb
out
loopne
pop
movs
jne
mov
arpl
pop
push
mov
adc
mov
repz
out
pop
adc
(bad)
aam
dec
outs
in
shl
in
pop
mov
or
and
lock
into
stc
aad
mov
jno
lea
ins
mov
aam
ds
popa
jmp
or
xchg
and
outs
(bad)
pop
arpl
mov
xchg
scas
push
pop
fcomp
add
mov
jnp
cmp
xchg
lahf
mov
in
ja
loope
sub
lock
mov
mov
adc
jb
fxch
xchg
push
lock
rcl
jnp
ret
cmp
fwait
mov
sub
dec
pop
ds
idiv
inc
inc
or
in
mov
mov
pop
ret
dec
test
test
and
mov
test
ret
xchg
sbb
jb
mov
push
xchg
and
popf
xchg
push
repz
jmp
mov
sub
mov
or
sub
outs
stc
jno
ins
aaa
dec
mov
into
inc
iret
and
mov
mov
int
adc
dec
jmp
sub
dec
in
pop
stos
fcmove
sub
xor
clc
sub
sub
and
arpl
mov
int
in
pop
xor
mov
jb
sbb
mov
push
dec
cmp
lds
fs
jne
aas
sub
xor
mov
inc
call
mov
inc
iret
cmc
mov
repnz
aad
xchg
fild
clc
je
aad
mov
(bad)
add
cld
push
or
adc
mov
add
dec
dec
inc
scas
push
mov
test
pop
mov
outs
out
push
cld
mov
inc
enter
mov
call
sub
xchg
jae
inc
scas
inc
popf
inc
jno
add
and
inc
data16
adc
retf
mov
pop
or
jge
jbe
mov
cmp
in
dec
mov
xchg
sub
ins
cmp
pop
jmp
gs
repz
shl
popf
xchg
cmp
mov
and
xchg
pop
call
int
aad
sub
imul
pushf
push
je
call
inc
sub
dec
in
cmp
(bad)
jg
scas
push
adc
enter
jmp
fucomip
jbe
sbb
test
arpl
(bad)
pop
mov
les
dec
mov
cmc
sbb
xchg
pop
mov
(bad)
jo
add
out
xchg
mov
push
mov
jns
xor
cmp
pushf
ds
jne
in
lods
int
adc
or
pop
sar
or
or
sub
lea
mov
out
mov
sub
inc
adc
or
das
xor
cli
mov
hlt
adc
ret
xchg
mov
iret
xchg
xlat
fistp
inc
fwait
mov
(bad)
shl
mov
mov
out
(bad)
xor
and
push
(bad)
int
jnp
xchg
mov
xor
xchg
test
pop
mov
shr
inc
cmp
in
push
sti
sbb
inc
inc
mov
jmp
xchg
in
psubusb
adc
repnz
leave
mov
jmp
add
sbb
test
lds
sub
repnz
sub
mov
xabort
push
xor
out
mov
jne
xrelease
js
dec
out
sbb
test
mov
pop
div
sbb
int3
in
sub
sbb
ret
jo
sub
mov
jg
sub
cmp
cli
xchg
test
arpl
(bad)
sub
lods
das
jp
sahf
xchg
les
mov
popf
lods
push
fcomp
pop
stos
sub
inc
push
fisttp
mov
scas
fmul
or
ins
xchg
sub
mov
sbb
inc
out
jg
rol
(bad)
xor
ins
mov
arpl
in
mov
dec
loope
mov
loope
xor
pop
pop
int
outs
lock
cli
shr
in
les
dec
push
sub
mov
pop
sub
push
xor
(bad)
sub
popa
addr16
sub
lods
push
gs
hlt
sbb
fiadd
jmp
pop
mov
popf
test
loopne
stc
scas
pushf
and
pop
or
imul
dec
push
push
(bad)
push
test
loope
sbb
rcl
mov
cmc
ror
mov
and
add
sti
cmc
div
jge
mov
popf
mov
sub
adc
or
cld
jb
repz
push
dec
adc
adc
and
xor
add
imul
je
xor
jb
sub
add
aad
push
in
push
in
lods
pop
retf
call
scas
jmp
mov
nop
aam
inc
adc
test
xor
or
(bad)
int
test
popa
rcr
test
cmps
pop
mov
ror
xchg
in
idiv
dec
rcr
cli
cmp
cmp
push
and
test
add
pushf
outs
test
or
inc
and
pop
add
iret
fdivr
retf
ror
loopne
(bad)
jp
and
cmp
dec
pop
add
lea
adc
imul
mov
outs
and
jne
xor
push
lock
sbb
jl
or
xor
(bad)
mov
cli
out
mov
and
or
ds
test
shl
push
in
popf
ror
retf
ins
cmp
lea
pop
inc
add
rcl
mov
and
mov
out
mov
xor
sub
push
push
mov
dec
call
jp
mov
dec
mov
fidiv
test
jg
push
cs
shr
dec
jle
xchg
sub
sbb
cmps
mov
cmp
sbb
(bad)
sub
and
pop
scas
add
dec
lock
mov
xor
aas
rol
popf
and
pop
cmp
lods
dec
fmul
jne
xchg
adc
dec
pop
repz
aaa
outs
les
push
push
adc
adc
popf
clc
add
inc
mov
pop
(bad)
xchg
std
adc
fldenv
adc
jne
and
arpl
or
or
iret
jp
fldenv
int3
xchg
xchg
push
out
jle
dec
adc
adc
lods
repz
popa
jge
aas
or
data16
imul
sub
into
cs
mov
inc
scas
popf
or
cld
ret
add
test
pop
push
out
out
jo
div
jmp
ja
ret
xchg
pop
dec
or
ins
test
fiadd
mov
mov
daa
sub
push
mov
(bad)
cld
mov
loop
pop
xchg
mov
jp
dec
scas
push
sbb
adc
movs
xor
and
pop
push
and
adc
xchg
call
je
or
into
dec
ins
xchg
pop
aaa
jecxz
jne
cmp
mov
sbb
out
ds
dec
cmps
mov
pop
inc
ins
push
sub
mov
push
push
jmp
inc
jo
and
adc
jae
jle
mov
dec
mov
add
mov
std
sti
(bad)
xchg
jmp
retf
in
cdq
mov
icebp
xchg
add
lds
(bad)
sbb
jp
and
scas
iret
add
scas
outs
sahf
adc
inc
sbb
icebp
xchg
in
iret
(bad)
and
shr
rcl
dec
in
popf
sub
mov
scas
inc
and
adc
jmp
(bad)
mov
or
cld
cmp
pop
lock
fimul
push
bound
xchg
inc
pop
ror
and
mov
cmp
int
es
fidivr
cmp
pusha
inc
(bad)
inc
jmp
nop
fwait
repnz
push
pop
sub
ins
mov
fsub
pop
hlt
add
stos
out
mov
lahf
inc
pop
mov
jmp
ss
xchg
popf
mov
inc
test
(bad)
mov
mov
jmp
and
cmps
int3
out
add
(bad)
push
sbb
jbe
jne
arpl
add
mov
loop
lods
sbb
inc
sub
xor
addr16
push
and
rcr
xchg
push
sub
imul
inc
add
(bad)
popf
rcl
shr
scas
pushf
lea
arpl
test
fdiv
adc
call
xchg
fisttp
inc
mov
ds
(bad)
and
sahf
xor
imul
push
pop
das
ror
xor
push
push
js
addr16
rcl
jmp
out
enter
mov
in
enter
call
(bad)
mov
adc
lock
imul
and
cmps
aas
fwait
inc
call
xor
mov
adc
xor
cmps
movs
sub
jnp
jbe
adc
aaa
add
push
adc
bound
cmc
cmps
xchg
daa
or
cld
fidivr
xchg
dec
imul
mov
lahf
ins
mov
fwait
js
and
pop
cmps
lds
nop
(bad)
adc
xchg
pop
(bad)
retf
xchg
push
and
add
mov
arpl
mov
jmp
push
fisttp
jg
push
inc
in
in
mov
das
aas
test
loopne
fist
ficom
rcl
push
mov
test
pop
pushf
pop
call
scas
fisubr
mov
mov
dec
movs
sbb
popa
(bad)
jle
pushf
jle
push
fwait
push
popf
call
xchg
pop
jae
shr
enter
mov
popa
mov
cmp
inc
jmp
sub
(bad)
retf
int3
push
and
hlt
lods
retf
xor
push
enter
lds
dec
push
jne
mov
pop
xlat
movs
cmp
sahf
xor
dec
and
outs
mov
pop
lods
scas
jns
cmp
add
cdq
or
(bad)
hlt
pop
stc
into
and
les
ret
int3
sub
aam
jae
xlat
jmp
mov
call
into
jno
and
inc
fdiv
sbb
fsubr
or
xchg
or
scas
jge
push
scas
into
jg
pop
mov
iret
lea
and
push
xchg
aaa
sub
daa
jo
fldcw
icebp
loope
(bad)
(bad)
or
sub
dec
sub
mov
(bad)
xor
mov
int
loop
adc
gs
push
or
rol
dec
loop
pop
cwde
dec
ja
call
cld
stc
dec
push
mov
bound
mov
push
daa
cmp
aam
outs
(bad)
push
gs
pop
sbb
lods
out
loopne
aam
movs
sahf
cs
jns
imul
add
out
into
mov
clc
cmp
repnz
add
cmp
sub
inc
sub
shr
inc
add
xchg
fdivrp
outs
inc
cmp
cmps
xor
repnz
ds
jnp
repnz
out
dec
mov
(bad)
or
jno
ins
mov
fwait
or
pop
outs
push
inc
sti
fcomp
sub
mov
mov
frndint
ficomp
sbb
in
(bad)
repnz
push
push
inc
into
lods
std
add
call
push
popf
stos
xchg
or
les
jo
mov
add
pop
mov
mov
pop
sbb
push
xchg
push
ror
aaa
mov
xchg
ins
mov
jbe
scas
into
retf
(bad)
cmc
xchg
loopne
data16
mov
xor
fisub
lock
add
jle
mov
push
(bad)
push
loope
xchg
(bad)
inc
fild
xchg
gs
sar
inc
sbb
xchg
mov
push
dec
lods
loope
test
enter
push
fcom
ror
mov
call
mov
aaa
sbb
cmps
push
sbb
repz
sbb
mov
cmp
imul
pop
cmp
shr
adc
dec
and
push
jo
and
xlat
xchg
out
jno
iret
xlat
or
xlat
push
in
in
sub
stc
add
mov
fsubr
data16
inc
mov
in
les
mov
mov
inc
cmp
les
cmp
inc
icebp
imul
or
pop
test
jno
lds
push
xor
mov
dec
movs
cmp
enter
jmp
lahf
pushf
adc
clc
cdq
fwait
outs
push
popa
fcomp
idiv
sbb
inc
push
add
(bad)
je
sbb
mov
test
dec
jmp
popa
mov
out
(bad)
cmp
inc
add
(bad)
iret
lock
retf
add
enter
aaa
call
adc
xor
out
inc
(bad)
in
pop
pop
inc
push
inc
or
mov
cdq
xor
pop
in
pop
mov
inc
xchg
js
add
retf
cmp
cmp
xchg
sar
fnstcw
mov
inc
jmp
and
outs
pusha
xchg
jbe
es
sbb
jno
out
test
mov
nop
in
mov
aas
into
pusha
and
retf
sub
jecxz
inc
fcomi
xchg
cmp
push
fisub
xor
mov
fistp
sub
repz
shl
seto
cmps
test
xlat
ja
mov
pop
xchg
dec
push
bound
std
xor
inc
fld
int
jns
repnz
stc
sub
dec
bound
out
fs
sub
push
adc
and
rcr
mov
in
adc
push
in
mov
sub
jge
adc
pushf
xchg
outs
inc
and
mov
aaa
xchg
mov
sub
addr16
sub
clc
fist
fild
add
jle
lods
adc
(bad)
cmp
xchg
inc
mov
jnp
cmp
addr16
out
and
sahf
or
mov
xchg
jl
ret
je
(bad)
xor
test
mov
fistp
sbb
mov
jbe
pop
jae
push
mov
pop
ret
retf
xchg
out
fcom
and
xchg
mov
ins
lods
retf
sub
out
dec
sbb
out
jae
mov
shr
lea
fs
inc
frstor
inc
mov
xor
xor
sub
and
jle
loop
loope
out
xor
out
xchg
(bad)
ins
rcr
mov
nop
adc
xlat
mov
aas
or
add
gs
inc
cmp
int3
inc
adc
inc
mov
xchg
sbb
cmps
pop
and
pop
push
idiv
cmps
js
pop
cmc
mov
sbb
ss
or
mov
clc
repz
mov
pop
xchg
adc
jb
add
mov
xor
mov
sub
fisub
sbb
pop
jp
shl
mov
cdq
and
mov
int
xor
(bad)
mov
mov
cli
adc
jge
mov
adc
or
int
imul
std
ins
push
data16
inc
(bad)
push
rcl
lock
out
mov
call
lahf
(bad)
iret
dec
movs
sub
mov
imul
jae
mov
ret
pop
retf
push
aam
rol
ins
sbb
inc
jno
ja
push
sub
std
jo
add
mov
sbb
push
mov
bound
mov
mov
repz
ins
repnz
push
dec
ins
mov
pushf
push
jl
dec
and
shl
pop
push
sub
xchg
je
pop
test
jmp
and
jp
cli
dec
push
jb
push
mov
mov
sahf
outs
jp
movs
jge
lock
pushf
and
sub
out
jo
adc
data16
ja
arpl
mov
dec
mov
not
mov
mov
inc
std
in
outs
mov
rol
(bad)
test
mov
jmp
test
xchg
pop
pop
cmp
mov
jb
jge
stos
stos
outs
out
into
repnz
loopne
sti
jo
and
mov
mov
loopne
mov
or
xchg
pop
and
(bad)
(bad)
pop
push
or
sub
ret
inc
mov
enter
xlat
aam
pop
inc
or
leave
(bad)
or
ins
imul
jns
pushf
or
addr16
enter
mov
add
loop
and
sahf
ret
fisub
jl
clc
adc
in
aaa
iret
pop
lods
movs
dec
ror
in
mov
pop
cmp
div
sti
cli
inc
fmul
push
push
fdiv
mov
cmps
cli
add
lock
out
pop
aas
sub
(bad)
and
(bad)
mov
add
ds
lds
cli
pop
jmp
ret
call
push
pop
ja
aad
lds
cmp
inc
pop
jmp
sub
mov
jle
hlt
mov
push
mov
fs
jge
xor
xlat
scas
iret
ret
in
sub
cmp
(bad)
call
pop
aaa
sbb
pop
dec
inc
push
icebp
test
aad
and
out
sub
cmp
ds
push
popf
fwait
je
adc
aaa
fst
jns
sub
mov
and
bound
mov
jne
mov
pusha
outs
sbb
(bad)
fistp
inc
mov
mov
jne
arpl
xor
loopne
cmps
pop
jmp
test
and
out
push
mov
cmp
xchg
cmps
push
fdivr
lock
jbe
sub
or
xchg
rol
das
push
mov
inc
sub
jmp
mov
push
jmp
dec
inc
out
dec
int3
sbb
fist
(bad)
fbld
stc
adc
dec
cs
sahf
push
test
dec
rep
into
pop
(bad)
outs
jb
loop
jnp
leave
dec
(bad)
cmps
adc
in
mov
pop
call
clc
retf
stos
retf
xchg
div
add
xor
mov
cwde
push
dec
iret
loop
shl
dec
inc
cmp
fidiv
sbb
jecxz
jl
push
xor
push
out
add
out
in
(bad)
outs
es
leave
push
dec
in
dec
mov
jns
sti
imul
push
adc
int3
loopne
mov
xchg
ins
inc
enter
jns
sbb
fnstenv
mov
rcl
dec
mov
pop
test
(bad)
sbb
xlat
fs
sti
pop
call
(bad)
jnp
lds
mov
shr
sahf
adc
fcom
mov
jmp
jno
ins
mov
fadd
push
xchg
add
inc
mov
sahf
imul
sub
inc
test
mov
pop
ret
das
inc
or
mov
pop
push
dec
cmps
jae
aad
mov
or
and
cmpxchg
inc
jmp
prefetch
mov
fbld
je
mov
or
or
cmp
mov
sbb
push
push
mov
fs
dec
sbb
sub
add
or
inc
xchg
leave
push
or
jns
sub
pop
sub
fld
jae
mul
sbb
mov
gs
fadd
jo
jg
xor
add
retf
or
mov
jge
lea
or
out
mov
ja
jmp
ror
mov
mov
push
frstor
and
mov
xchg
dec
out
dec
xor
popf
movs
icebp
mov
xor
pop
arpl
push
imul
jl
mov
(bad)
jbe
jge
xchg
mov
adc
mov
aad
adc
rcl
sub
aad
(bad)
fidivr
bswap
int
adc
sbb
jmp
add
(bad)
(bad)
and
jle
push
mov
test
scas
push
test
fbld
cmps
sbb
adc
(bad)
popa
ja
inc
(bad)
adc
and
daa
imul
mov
les
mov
mov
(bad)
adc
add
fs
lahf
add
lock
(bad)
or
mov
aad
or
sbb
dec
mov
mov
cmp
mov
push
idiv
mov
mov
push
push
aas
mov
retf
stc
(bad)
cld
xchg
mov
orps
mov
jl
cli
stos
sub
jmp
js
jne
inc
cmp
aad
mov
sbb
das
xor
cmp
xchg
jmp
(bad)
popa
and
pop
clc
lods
dec
inc
int
pop
dec
and
mov
push
stc
and
(bad)
fnstsw
and
ret
sub
jmp
mov
shr
adc
cmp
mov
mov
popf
aam
(bad)
xchg
push
xchg
int3
outs
push
sbb
or
sbb
fs
sti
adc
xor
mov
pop
cmp
scas
xchg
xchg
ss
push
mov
es
sbb
cmp
xor
popa
loopne
retf
or
aam
jne
stos
mov
sahf
clc
xor
or
sub
mov
cmp
sub
mov
pushf
push
outs
cmc
(bad)
pop
ins
jnp
scas
std
arpl
clc
xor
in
shl
pusha
cmp
cmps
in
xor
pusha
pop
ins
pop
push
or
push
aam
test
xor
push
imul
jb
div
fdiv
mov
mul
imul
xchg
inc
cmp
cmp
adc
test
fsubr
and
fmul
fisttp
nop
xchg
imul
pop
iret
mov
ss
cmp
inc
stos
hlt
call
leave
push
xor
inc
add
adc
cli
jnp
gs
cld
xor
xchg
out
or
hlt
sbb
ds
dec
jns
int3
dec
icebp
dec
lods
lea
out
push
dec
xchg
aas
push
pop
jge
mov
sbb
inc
add
pusha
outs
xchg
data16
fnstsw
inc
cmp
dec
stos
shl
pop
ficomp
stos
mov
dec
cmp
out
dec
sbb
icebp
sub
inc
leave
jmp
and
movs
rol
fild
mov
les
push
test
sub
retf
xlat
pop
lods
sar
jmp
xor
cmp
cmp
fimul
call
mov
lahf
icebp
mov
xchg
lock
stos
dec
movs
and
pop
xor
mov
xor
imul
fisub
and
jp
stos
addr16
sub
cmp
mov
inc
cs
mov
(bad)
icebp
imul
cmps
xchg
push
int
pop
out
nop
aaa
sbb
cmps
add
clc
outs
popf
bound
mov
(bad)
loop
cdq
adc
stos
or
retf
pop
jmp
sub
fwait
pop
lock
lods
push
int
movs
xlat
sub
sbb
sbb
(bad)
sbb
adc
ins
push
rcr
dec
mov
clc
mov
jbe
cmp
sbb
and
loope
xor
movs
enter
pop
out
cdq
mov
out
jle
scas
cdq
imul
jae
das
fs
iret
fwait
xadd
fs
mov
dec
add
mov
ret
loop
sar
hlt
cmps
das
mov
xchg
int3
(bad)
sbb
rol
xor
jb
leave
pushf
(bad)
iret
outs
and
stc
mov
push
addr16
and
repnz
jmp
mov
call
mov
mov
out
cmp
jecxz
xchg
outs
push
sbb
(bad)
pop
mov
pushf
icebp
inc
outs
lods
std
pop
jmp
jno
imul
mov
dec
inc
inc
stc
(bad)
or
repz
mov
push
ja
inc
call
mov
add
pop
pop
mov
adc
cmp
dec
or
and
add
cdq
out
or
std
into
add
sub
mov
retf
(bad)
out
imul
fild
das
mul
xor
or
enter
jge
ja
inc
cld
das
daa
xchg
shl
sub
mov
std
in
cwde
out
rcr
xchg
lock
xchg
xchg
(bad)
fidiv
sbb
shl
ins
push
inc
movs
or
scas
pop
mov
mov
dec
retf
or
mov
das
xchg
jg
xchg
push
ror
int3
push
je
sub
cmp
sbb
push
inc
push
les
mov
pusha
inc
and
mov
nop
add
aas
ror
push
dec
shr
mov
add
(bad)
jp
test
ja
imul
fistp
hlt
mov
mov
retf
movs
push
ret
imul
dec
sub
daa
test
repz
adc
lods
popa
add
cwde
ja
mov
sub
mov
and
inc
and
clc
mov
inc
movs
je
add
in
dec
dec
outs
rep
cmps
cmp
in
imul
bound
js
lods
adc
std
mov
and
repnz
ret
imul
imul
(bad)
mov
aaa
test
daa
ins
mov
sbb
mov
xchg
retf
mov
pop
in
push
jmp
inc
mov
or
bound
cmp
push
and
cmps
int3
push
and
aas
dec
mov
jne
fst
inc
cmc
stc
fistp
aaa
mov
mov
xchg
xchg
or
popf
ja
(bad)
jmp
or
dec
lock
js
cmc
dec
push
or
push
jnp
cs
ins
sbb
mov
mov
adc
add
aad
dec
ja
mov
rcl
adc
frstor
jmp
cdq
add
not
popa
lock
mov
jmp
dec
repnz
(bad)
and
add
dec
xchg
mov
adc
aad
pop
inc
sbb
cmp
push
mov
pusha
lods
mov
loop
or
xlat
aaa
pusha
sub
jb
or
scas
test
(bad)
std
add
xchg
je
mov
and
push
push
jp
ret
sub
iret
cmp
adc
loope
ds
dec
jbe
ss
pusha
call
cmp
jmp
inc
push
jecxz
test
imul
iret
inc
add
inc
push
sbb
or
fld
xchg
repz
inc
ja
jbe
mov
(bad)
loop
pop
stos
cmp
popf
mov
mov
sub
pop
add
jp
shl
mov
lds
jae
rol
pop
cmp
mov
test
ins
or
pop
dec
mov
lea
retf
add
or
pop
inc
daa
add
mov
inc
mov
or
dec
dec
push
inc
adc
dec
jns
jae
sbb
jmp
cmp
jmp
add
fisttp
sbb
sub
(bad)
js
mov
sbb
clc
in
jg
jns
ins
in
add
sar
xor
movs
into
inc
cmp
mov
pop
or
inc
repz
loopne
xchg
or
adc
pop
mov
cld
ds
push
inc
icebp
out
(bad)
cmp
jno
loopne
add
push
js
push
lea
js
dec
arpl
inc
adc
jne
push
fist
fnstcw
(bad)
dec
aas
cmps
pop
mov
push
cmc
mov
dec
pop
pop
mov
mov
sub
pop
ss
cmps
mov
adc
push
pop
xlat
cmp
pop
xor
lock
bound
retf
push
out
xchg
inc
mov
addr16
dec
push
test
jmp
jb
jmp
mov
into
inc
push
mov
cmp
xchg
or
mov
call
inc
inc
mov
xor
ins
inc
push
les
mov
js
daa
lock
push
aaa
outs
xchg
cli
push
mov
js
push
outs
dec
mov
in
ror
daa
push
xor
pop
(bad)
ds
(bad)
adc
add
leave
sub
push
rcl
xlat
std
adc
data16
test
xchg
sbb
cld
sub
fwait
fs
jns
xchg
(bad)
mov
add
mov
out
repnz
mov
and
es
es
push
ret
inc
mov
push
(bad)
cs
jns
inc
mov
std
repz
inc
sbb
dec
cmp
jae
xor
cmps
dec
or
jl
cli
pop
daa
sub
cmp
call
cmps
xor
mov
push
stc
sub
mov
or
adc
ins
aam
lahf
fsubp
xchg
jo
xchg
cmp
xor
or
add
sub
imul
push
mov
fcom
mov
cmp
hlt
not
aaa
ret
or
push
or
cwde
xor
(bad)
ss
int
das
popf
and
(bad)
fstp
outs
xlat
xchg
push
in
pop
rcl
mov
pop
gs
push
sub
jno
dec
inc
ficomp
add
lods
xlat
adc
cld
cdq
sub
ret
les
imul
mov
lahf
bound
cmp
xor
scas
adc
and
adc
xchg
ret
jo
xchg
stos
loope
mov
cs
cmp
inc
jecxz
call
test
and
and
ja
sub
imul
xchg
ins
fdivrp
push
inc
cmovns
cmp
push
test
fild
int
test
sbb
sub
gs
ins
loopne
push
xchg
mov
ret
enter
push
test
sbb
int
sgdtd
or
mov
cmp
cs
mov
arpl
cmc
fdivr
jnp
ror
xor
xor
retf
int3
(bad)
fld
pop
clc
scas
mov
scas
clc
shl
loopne
mov
std
les
inc
retf
mov
jno
jns
sub
in
sub
fcmovnbe
ins
test
cmp
scas
xor
scas
sub
inc
icebp
jecxz
cmc
leave
movs
sti
push
inc
jno
je
or
into
mov
(bad)
xor
and
adc
aad
ins
push
emms
popf
add
in
push
es
pushf
adc
retf
lds
xchg
bound
xchg
xor
lds
adc
test
mov
jmp
adc
rcl
lods
(bad)
push
fdivr
mov
push
jb
adc
arpl
or
add
pop
xchg
inc
or
xchg
push
leave
adc
(bad)
pop
dec
retf
lahf
aad
repz
ret
mov
aad
in
shl
xchg
mov
xchg
rcr
xchg
pop
into
arpl
push
push
stc
jl
out
not
sub
sar
idiv
or
repnz
sub
dec
sbb
ins
ja
fld
in
mov
xor
cli
xor
fs
sbb
loop
dec
cwde
js
fdiv
imul
jo
mov
ret
shr
pop
fist
pusha
int
mov
jae
enter
pushf
xchg
retf
lahf
rcr
push
shl
add
push
out
or
std
add
pushf
jmp
mul
sbb
ficomp
xchg
jb
stos
xlat
and
push
std
data16
lea
pop
aas
loop
jns
xchg
xchg
add
jmp
dec
xchg
rcl
jle
stos
fldcw
enter
mov
inc
dec
jnp
lea
dec
or
aam
loop
xor
in
loopne
lea
mov
repz
xchg
pop
xchg
ins
or
shl
jo
push
mov
mov
push
sub
dec
repz
fisub
or
jae
aas
ja
adc
or
shl
out
push
jns
mov
xor
loope
jne
mov
xchg
in
xor
repz
push
pop
jmp
push
jo
(bad)
sub
pop
add
dec
sbb
mul
leave
imul
stos
pop
adc
inc
ja
lea
adc
inc
(bad)
jmp
xor
in
or
das
xor
jb
fidiv
ins
lea
out
mov
addr16
or
sbb
xchg
sbb
sahf
inc
xchg
daa
jno
ret
lahf
inc
cld
jo
aas
sub
cwde
fild
sub
mov
inc
xor
movs
sub
(bad)
bound
sub
push
enter
inc
ins
scas
xor
mov
push
mov
pop
mov
dec
xchg
jmp
dec
push
jg
in
jb
popa
cmp
int3
and
popw
xor
in
mov
dec
jnp
pusha
inc
jmp
call
and
pop
inc
fs
mov
ins
sub
outs
add
adc
enter
shl
push
sub
add
lea
(bad)
bound
(bad)
nop
stos
add
call
mov
pop
enter
inc
out
out
mov
xor
sub
enter
xchg
in
(bad)
or
or
rcl
pop
in
mov
dec
xchg
sub
mov
mov
fwait
push
mov
mov
xchg
rcr
push
in
call
lods
aas
or
dec
cmps
sar
jle
mov
sub
or
sub
ja
stos
xchg
imul
js
or
in
xlat
add
xor
in
mov
jbe
rcl
(bad)
ins
adc
dec
sbb
call
in
dec
xchg
push
adc
push
fsubr
sbb
pop
adc
jmp
aad
sbb
inc
das
sub
std
adc
cwde
or
push
sub
jne
fistp
imul
call
in
outs
outs
in
add
jmp
push
mov
and
fmul
movs
shl
xchg
pop
rcr
call
xchg
imul
adc
div
mov
lds
inc
aad
cmp
das
ss
cdq
adc
push
(bad)
call
inc
ss
popf
or
jl
and
adc
jp
imul
int
imul
fisubr
mov
jae
dec
iret
sahf
sub
subps
outs
out
inc
pop
mul
ins
iret
pop
outs
push
push
sahf
or
not
(bad)
shufps
shl
xor
push
cmp
dec
pop
jno
jmp
jmp
mov
loopne
xchg
dec
popa
cdq
cmps
push
sar
and
push
fimul
xchg
adc
sahf
loopne
cmp
sbb
pop
dec
arpl
lahf
les
pop
imul
outs
jp
dec
pop
(bad)
mov
sub
shl
int
out
enter
test
cld
sbb
xchg
mov
adc
popa
clc
clc
fist
pusha
xchg
or
jbe
loope
add
fisttp
cwde
ja
fstp
xor
fwait
cmp
out
sti
(bad)
repnz
jp
cmp
and
dec
mov
mov
pop
jmp
aam
scas
mov
loope
out
jg
fwait
jne
cmp
jno
sub
mov
mov
or
jmp
cld
repz
mov
mov
or
push
cmp
int
sub
add
imul
adc
inc
push
mov
pop
call
pop
lods
fwait
js
movs
or
pop
inc
sar
fiadd
and
jle
mov
xchg
cmp
inc
or
fild
fmul
out
out
daa
dec
push
fdivp
fdivr
sbb
jmp
adc
cli
ds
xor
inc
setnp
ins
add
inc
stc
scas
mov
adc
lahf
fbstp
push
add
jne
cmp
test
mov
push
scas
test
and
push
push
fwait
ins
push
retf
sbb
hlt
sbb
in
ficom
mov
shl
imul
movs
test
pop
mov
stos
inc
shl
pop
adc
and
jnp
cld
dec
lds
and
sub
iret
stos
ds
jl
inc
aad
retf
jle
add
xor
fwait
jnp
cmp
cld
lods
fs
pop
test
bound
cmps
xchg
mov
jne
out
movs
ja
std
ror
call
nop
mov
sub
int3
cmp
int
sub
popa
mov
pop
rcr
scas
push
push
add
nop
call
and
cmps
psubsb
sbb
xchg
and
(bad)
(bad)
fisttp
sbb
je
cmc
dec
xlat
jno
std
mov
stos
mov
xchg
icebp
sub
adc
outs
arpl
push
nop
inc
fisubr
mov
cli
ss
rcl
or
inc
jge
fwait
vpextrw
lds
fmul
in
lahf
daa
test
dec
sbb
and
jbe
fmul
push
icebp
das
out
in
xor
mov
jg
lds
or
dec
loopne
cld
sub
jae
or
xchg
outs
outs
das
jno
mov
call
ja
dec
arpl
enter
jo
mov
jge
es
xchg
scas
sub
(bad)
sub
mov
jl
xchg
push
add
jne
mov
ins
add
jbe
lods
inc
sub
xchg
neg
mov
and
adc
mov
dec
push
aas
mov
popf
(bad)
mov
dec
mov
ins
test
sub
pop
jmp
cbw
int3
aas
inc
call
or
jns
xlat
sbb
mov
sbb
sub
dec
in
scas
push
(bad)
mov
retf
pop
adc
call
dec
xor
xchg
push
add
xor
mov
in
adc
and
pop
push
adc
sti
ja
or
pop
test
cmc
push
inc
inc
jle
fcomp
iret
mov
jbe
das
nop
mov
jge
jne
sbb
or
mov
xchg
adc
sub
fs
out
adc
jns
fisubr
dec
sbb
jl
scas
push
in
mov
fisubr
test
mov
enter
loopne
loop
xchg
outs
movs
mov
mov
or
add
adc
sti
shl
es
inc
mov
sub
xor
cmc
pop
sti
cmps
cdq
push
imul
push
test
cmp
ds
into
mov
(bad)
retf
pop
call
push
mov
and
or
jmp
xchg
mov
dec
stc
adc
and
cmp
fsub
addr16
iret
pop
js
mov
mov
aad
sub
ins
add
jb
push
jmp
ins
icebp
in
aad
fwait
or
ffree
add
jge
scas
pop
out
in
pusha
lods
inc
push
or
ret
pusha
mov
rol
fldenv
or
ja
ret
sbb
cdq
fisttp
test
dec
dec
sbb
nop
xchg
pop
js
fld
inc
xor
out
(bad)
jp
not
shl
mov
jecxz
xchg
xchg
pop
sahf
les
cmps
ret
cmp
shr
out
jecxz
xchg
iret
in
mov
aas
inc
pop
xor
loop
jno
push
outs
test
fdivr
inc
mov
pop
test
inc
daa
mov
ds
add
icebp
sbb
iret
gs
imul
ins
adc
loope
or
inc
in
popf
mov
jnp
cdq
push
nop
jo
(bad)
loopne
call
jne
fwait
jge
dec
dec
test
mov
aaa
push
cmps
sub
ja
dec
mov
jl
(bad)
and
add
jo
inc
cmp
pop
add
and
cmp
cli
jb
mov
test
arpl
repz
or
mov
fucomp
fnsave
xchg
sub
and
outs
lock
mov
scas
inc
mov
sahf
xchg
dec
jp
ins
lods
pop
mov
and
adc
mov
aas
iret
rcl
inc
mov
or
jbe
cmp
sub
push
add
mov
imul
in
fimul
scas
mov
adc
mov
outs
mov
xor
adc
mov
sbb
or
aas
out
aam
rcr
aas
sbb
cmps
out
aaa
pop
aam
lahf
xchg
mov
dec
xchg
jne
mov
fxch
push
cdq
imul
shl
les
lahf
ins
mov
pop
loop
cwde
(bad)
sub
cmc
xor
je
mov
sti
push
imul
adc
inc
inc
pop
adc
mov
nop
stc
dec
jmp
outs
adc
dec
mov
adc
dec
or
cmps
and
add
cmp
jecxz
cmp
jp
mov
or
js
adc
test
xor
imul
clc
loop
dec
fwait
(bad)
fwait
aas
out
mov
xchg
pop
test
add
pop
cmp
inc
jmp
sub
mov
cmp
add
ret
push
add
test
xchg
add
in
jge
or
cmc
scas
push
stos
in
adc
movs
popf
and
sub
lahf
in
sti
and
fmul
lahf
mov
mov
push
cwde
movs
cmp
sbb
push
popa
cs
in
xchg
dec
fist
push
fistp
pop
mov
mov
and
ins
mov
ins
jecxz
sub
imul
pop
lea
out
add
and
fisttp
jb
cmp
pop
push
les
add
lock
movs
and
aad
sub
push
jge
popf
test
arpl
repnz
sbb
mov
push
es
mov
xor
clc
ds
popf
jnp
mov
mov
ja
nop
shr
add
pop
into
push
sbb
int
fldenv
cmp
js
or
add
mov
out
add
or
sub
sahf
inc
repnz
ins
mov
(bad)
dec
outs
neg
jb
je
cld
ds
xor
mov
daa
dec
add
mov
imul
dec
xchg
xchg
mov
add
lea
stc
fwait
cmp
jne
push
push
push
sub
aas
gs
jae
(bad)
iret
push
jle
pop
jp
xor
int
mov
cmc
dec
dec
xchg
push
sub
cs
jecxz
in
xor
shl
mov
adc
sub
dec
jle
cmps
push
out
aas
das
adc
push
xchg
add
les
mov
xchg
pusha
jnp
cmc
or
adc
in
cmps
mov
xor
les
imul
(bad)
cmp
mov
icebp
lods
(bad)
inc
mov
cmp
pop
popf
cmp
and
cli
or
dec
fisttp
or
aad
mov
outs
lds
add
int3
mov
inc
out
or
cmps
int3
mov
stos
nop
dec
daa
pop
dec
push
sahf
inc
inc
outs
jecxz
outs
add
loopne
fnstcw
xor
hlt
xchg
inc
xchg
dec
in
or
(bad)
push
mov
daa
push
fprem
sub
out
pop
sbb
repz
or
ror
mov
out
fstp
dec
sub
jl
std
xchg
adc
aas
aam
adc
fnsetpm(287
out
cmp
int
pop
dec
pop
sbb
cmp
sub
adc
pusha
jmp
and
stc
cmp
jl
fnsave
mov
adc
int3
in
mov
dec
mov
out
add
xor
je
aaa
lds
shl
(bad)
mov
dec
aas
sti
mov
push
sbb
std
movs
sub
or
jbe
rcl
aam
ss
(bad)
scas
dec
xchg
addr16
push
test
jno
(bad)
call
out
inc
enter
loop
dec
(bad)
sbb
push
jecxz
push
adc
xor
and
sub
cdq
fcmovnbe
iret
or
mov
pop
push
mov
pusha
and
or
nop
cmc
mov
hlt
nop
stos
jmp
sbb
out
add
xchg
xchg
jle
popf
mov
outs
xor
xchg
cmp
(bad)
ror
jl
mov
stc
mov
aaa
jmp
sbb
lds
or
mov
mov
ja
popa
jmp
jecxz
shr
lods
aaa
test
cmps
bswap
mov
cmp
pop
cmp
mov
aam
jae
sbb
jo
jns
dec
les
not
dec
out
xchg
inc
cs
cwde
movs
add
aam
popa
sbb
dec
mov
add
lods
mov
sub
dec
cmc
ss
pop
dec
ins
fwait
mov
popa
mov
jmp
pop
xor
sbb
push
dec
sbb
sub
out
loop
dec
dec
push
lahf
xor
ret
mov
dec
scas
out
arpl
inc
and
test
test
imul
sbb
fcmove
les
int
pop
xchg
pop
mov
push
adc
xchg
cmp
xor
and
mov
(bad)
and
add
ins
clc
xchg
test
sbb
jge
pop
inc
xor
jecxz
fidiv
push
test
cs
mov
pop
mov
dec
cmp
adc
dec
sub
push
test
sub
(bad)
ds
(bad)
fld
inc
mov
and
sbb
pop
inc
and
mov
loopne
dec
popa
push
push
leave
(bad)
dec
jne
xor
das
stos
xchg
cli
stc
not
popf
ds
into
popf
fs
dec
arpl
ret
and
sub
(bad)
lds
xor
sub
inc
sti
jle
pop
pushf
inc
js
push
fs
daa
xchg
or
cmp
or
cmps
repz
out
dec
movs
les
stos
sbb
mov
xchg
push
cli
xchg
and
in
ins
call
leave
pop
mov
sbb
retf
or
mov
add
mov
jmp
pop
xor
es
sbb
fstp
bound
push
dec
sbb
sub
add
mov
mov
fscale
sahf
call
and
xchg
push
lea
adc
fidivr
jb
dec
scas
pushf
mov
rcl
dec
jo
cli
push
mov
xor
mov
or
nop
or
mov
retf
mov
loopne
pushf
ret
dec
cmp
pusha
ret
pushf
jno
push
sub
or
ficomp
div
jb
leave
jae
mov
out
push
mov
out
lock
test
inc
jno
lea
mov
(bad)
or
xlat
and
lds
or
push
pop
ret
loop
jmp
icebp
lods
inc
jl
dec
daa
sbb
imul
xor
in
retf
mov
les
lods
test
pop
cmp
sbb
sbb
pop
std
ror
scas
lods
enter
cmp
imul
imul
cmp
cmp
cli
bound
push
and
ror
repz
xchg
and
ss
mov
fs
test
xchg
adc
mov
add
cmp
std
cmps
mov
fsubr
stos
fcmovu
out
in
xchg
sub
or
loopne
aam
inc
imul
aas
repz
fdiv
sbb
ja
mov
add
fdivr
push
xor
and
fs
pop
sbb
retf
sub
xchg
jg
in
add
test
in
loop
jae
mov
mov
fisttp
aas
mov
fdivr
lock
pop
lea
mov
fisubr
push
cmp
mov
sub
and
adc
xor
test
jmp
gs
push
mov
rol
dec
add
into
in
not
mov
movs
nop
mov
and
loope
jne
mov
(bad)
jl
arpl
lea
call
xlat
movs
jb
in
push
jecxz
pop
stos
cmp
xlat
(bad)
jmp
push
inc
jecxz
inc
push
pop
enter
xchg
fs
cmp
std
imul
jbe
out
sbb
jno
push
(bad)
pusha
bound
adc
scas
jecxz
repnz
mov
mov
not
in
scas
mov
xor
and
icebp
xchg
dec
aas
lock
push
dec
adc
xlat
loop
and
dec
dec
daa
or
xchg
mov
imul
out
jne
dec
or
jmp
cmps
jno
or
mov
gs
xchg
push
call
sbb
shl
shr
nop
test
jae
bound
or
adc
mov
adc
ret
and
add
cmp
xchg
je
in
pshufw
jmp
lea
ficomp
repz
mov
call
adc
and
scas
cli
(bad)
popf
jns
ret
sbb
sub
popf
inc
push
loope
sbb
push
jns
arpl
xor
repnz
push
push
mov
(bad)
into
int3
push
pop
mov
shl
xchg
pop
mov
frstorw
aam
mov
into
cmp
xor
adc
mov
and
jns
ret
lds
mov
js
xor
dec
xchg
outs
dec
sbb
add
imul
jl
into
gs
fs
pop
or
mov
fimul
js
dec
shl
fimul
inc
mov
inc
(bad)
ins
cmp
sub
or
or
or
xchg
inc
inc
or
retf
or
mov
sub
push
ja
stos
xor
adc
das
adc
ss
fucomip
jb
mov
push
add
or
xchg
mov
bound
push
rol
fs
adc
mov
or
push
or
mov
fcmovnbe
aam
cmc
call
imul
ds
(bad)
mov
add
out
data16
rol
mov
aas
dec
jp
scas
std
mov
add
jnp
enter
aam
push
push
js
(bad)
jno
enter
xchg
fpatan
pusha
jo
mov
stc
mov
and
fstp
sub
adc
push
lahf
jbe
scas
arpl
fdivr
(bad)
movs
dec
cmp
sub
scas
jo
and
add
mov
test
add
adc
pop
ficomp
cmp
fcomp
cmp
scas
ins
(bad)
xor
imul
cwde
retf
fsubr
gs
lds
dec
das
push
mov
stc
jns
loop
or
iret
addr16
cdq
push
loope
add
mov
cmp
into
mov
je
movntps
aas
jg
clc
pushf
retf
or
jbe
or
in
in
pop
jo
and
mov
xor
jecxz
and
sbb
jl
retf
aad
nop
sbb
popf
hlt
mov
popa
xor
dec
loopne
pusha
out
add
mov
test
and
movs
retf
mov
cmp
mov
xchg
bnd
mov
dec
in
mov
sahf
sbb
pop
out
scas
push
or
js
mov
jp
cdq
dec
pop
cli
pop
push
push
mov
jl
jbe
inc
jb
mov
push
lea
xchg
fnsave
jmp
ror
sbb
xchg
inc
dec
loopne
push
js
cmps
addr16
lahf
mov
inc
ins
add
cdq
lods
icebp
inc
fstp
pop
push
je
mov
cmp
mov
or
outs
adc
xchg
ss
jmp
and
push
cdq
push
cmp
jg
dec
xchg
inc
addr16
enter
gs
xchg
xchg
xchg
repz
cmp
adc
pushf
leave
cmp
lea
add
(bad)
lahf
arpl
xor
cmp
sub
jl
inc
xor
int3
popf
xchg
ins
and
adc
xor
arpl
sub
ja
mov
jae
mov
(bad)
movups
(bad)
fsubr
mov
js
mov
rcl
cmp
adc
xchg
outs
data16
test
pop
jns
push
add
xor
adc
push
(bad)
aad
sbb
sbb
pop
clc
fstp
xor
xlat
push
xchg
and
ja
into
dec
pop
add
pop
or
push
push
and
jne
les
(bad)
sbb
dec
jns
add
cmps
jbe
xchg
sub
jl
pop
cmps
cmp
xor
adc
and
adc
xchg
mov
mov
aad
cmp
inc
dec
push
adc
inc
jae
or
bound
shl
inc
xchg
mov
mov
or
fiadd
rcl
outs
out
retf
push
mov
add
in
fcomp
and
pop
mov
test
cli
sub
cwde
outs
fimul
jne
fmul
adc
mov
sbb
mov
mov
call
mov
mov
aaa
jmp
jne
int
push
out
clc
jecxz
inc
mov
push
stc
xchg
push
lods
mov
retf
adc
sub
dec
xchg
pushf
sbb
cmp
addr16
push
add
imul
aam
mov
enter
push
cmp
add
cmps
push
xchg
dec
or
stos
mov
fild
fwait
mov
mov
fcomi
icebp
in
(bad)
xor
mov
aad
shl
rcl
mov
cmps
rcr
push
(bad)
mov
leave
das
and
pop
mov
cmp
aad
cwde
outs
mov
nop
adc
sbb
call
rcr
ret
jb
out
out
dec
test
jb
ins
int3
mov
arpl
dec
(bad)
das
adc
(bad)
sub
test
hlt
ret
fisub
sbb
std
add
and
ret
push
dec
sbb
(bad)
out
xor
add
out
mov
enter
jae
mov
lea
pusha
fwait
mov
cli
out
(bad)
add
and
adc
or
out
retf
mov
int3
add
out
stc
pop
movs
jmp
sub
test
sub
add
fwait
sub
or
idiv
aad
sbb
pusha
push
jge
inc
fs
or
sbb
mov
jne
cwde
in
jns
cmc
jmp
ror
outs
fcmovnu
mov
cs
test
jmp
sbb
xchg
mov
cmps
xor
xchg
jo
int3
mov
fbstp
lea
je
(bad)
cmp
or
xor
loopne
pop
inc
lahf
mov
loopne
dec
xchg
dec
sub
int3
add
aaa
inc
outs
adc
mov
or
(bad)
pusha
push
rol
adc
and
data16
shr
mov
inc
xchg
sub
xchg
je
outs
and
dec
sbb
inc
(bad)
dec
out
clc
jno
mov
dec
imul
mov
sub
cmc
in
push
jle
cmp
retf
imul
sar
test
call
pop
inc
cmp
mov
push
in
mov
lods
fidivr
test
cmps
and
cmps
adc
dec
lahf
pop
nop
neg
mov
xor
cli
add
rol
push
out
dec
add
imul
aad
(bad)
pop
xor
pop
xlat
sbb
xchg
adc
fcomp
into
aad
je
xchg
psadbw
iret
xchg
sub
mov
cld
mov
cmps
aad
or
jno
push
cmp
ret
mov
add
lds
cdq
jb
neg
out
es
mov
(bad)
fmul
mov
in
adc
(bad)
in
add
mov
dec
out
mov
add
scas
ror
push
test
sar
adc
fld
mov
jg
mov
ret
inc
or
dec
mov
sub
mov
and
fchs
mov
fwait
jecxz
push
ja
jge
sbb
push
add
fcomp
xor
push
popf
ins
push
xchg
sbb
push
push
xor
xchg
aaa
xor
call
nop
push
icebp
mov
arpl
adc
jmp
jl
jle
xchg
cli
daa
movs
fistp
dec
call
jne
fmul
mov
push
dec
enter
pop
mov
sub
fnsetpm(287
sahf
mov
addr16
inc
push
fmul
mov
pop
jle
inc
xor
std
hlt
pop
stos
cmc
neg
or
or
pop
pop
aam
push
sti
ret
adc
cmp
jns
xor
ret
xchg
xchg
xor
mov
sti
ds
arpl
lock
add
and
sbb
mov
mov
in
data16
dec
pop
test
inc
pop
fisub
mov
dec
mov
imul
add
sar
add
jbe
mov
pop
push
in
les
or
std
lea
in
push
rol
fwait
pop
leave
push
or
ins
(bad)
int3
inc
add
in
cmp
(bad)
mov
jmp
clc
pusha
pop
mov
jns
popa
jns
mov
xchg
sbb
fs
pusha
mov
xor
push
inc
loope
sub
popa
sbb
xlat
mov
adc
jecxz
cmps
rcr
push
jns
test
not
push
xor
push
daa
xor
and
mov
jns
cmp
cdq
mov
push
sbb
data16
sub
je
cmp
or
inc
xchg
int
cwde
fwait
jmp
sbb
int3
jne
repz
ret
push
mov
stc
mov
sbb
xchg
out
ds
push
mov
int3
fisttp
jmp
or
cmp
js
int3
fcom
mov
xor
cmc
outs
stc
push
ffreep
int3
lods
sbb
sbb
dec
dec
dec
aaa
or
aaa
aam
or
aaa
mov
clc
stos
ss
(bad)
fcom
mov
imul
aaa
hlt
mov
sub
sti
sahf
inc
mov
je
inc
sahf
lods
push
in
or
adc
ficom
inc
fsub
adc
mov
push
push
repz
add
test
xchg
adc
dec
adc
data16
in
js
or
mov
and
push
nop
loopne
add
cmps
lock
cmp
xchg
fistp
jbe
mov
(bad)
int3
in
aam
push
ins
jge
mov
dec
dec
(bad)
xor
sub
xor
push
(bad)
dec
gs
cmp
adc
call
xchg
cdq
jge
and
xchg
mov
data16
cmp
(bad)
sub
aaa
sbb
outs
fcmovbe
jle
rcr
das
jp
fadd
mov
pusha
sbb
xlat
aaa
std
mov
mov
inc
push
dec
test
mov
xchg
adc
mov
(bad)
(bad)
ins
mov
and
mov
dec
(bad)
ror
cwde
inc
sbb
loopne
jg
popa
leave
mov
and
mov
pusha
jl
inc
or
pusha
dec
inc
push
lea
retf
mov
imul
mov
ret
sub
aam
and
outs
enter
icebp
jb
mov
pop
aad
test
mov
out
cmp
xchg
mov
loopne
push
xchg
int3
pushf
sbb
jmp
mov
call
sub
(bad)
and
sub
ds
sahf
mov
test
iret
jo
push
mov
jno
pushf
in
fwait
mov
push
mov
stc
mov
pop
arpl
push
out
(bad)
cmp
push
aas
scas
aad
ins
iret
enter
and
push
sbb
pop
imul
mov
cmp
movs
retf
imul
and
sub
mov
xchg
repz
cmp
imul
pop
loope
jmp
ds
call
in
std
pop
cli
das
imul
jne
xchg
or
dec
xor
jp
(bad)
and
lahf
jmp
mov
cmp
dec
xchg
push
sbb
in
(bad)
xor
sbb
adc
into
and
mov
lds
cli
dec
mov
or
mov
into
clc
cmp
mov
and
push
fsubr
out
or
push
popf
mov
inc
ins
mov
sbb
(bad)
out
mov
out
inc
xchg
in
fcomi
cmp
sub
fstp
cmp
popf
mov
std
in
je
sub
je
test
jb
outs
into
outs
das
push
loop
cwde
retf
add
fisttp
in
icebp
xlat
sbb
jbe
int
mov
les
out
xchg
std
shr
lock
push
mov
mov
fstp
cmp
repnz
out
ds
sub
jnp
mov
outs
les
or
popf
push
mov
stos
dec
outs
fidivr
outs
pusha
(bad)
dec
dec
inc
and
jns
inc
adc
int3
mov
inc
ins
sub
lds
daa
xchg
stc
jnp
adc
sub
pop
sbb
push
add
es
femms
lea
loopne
mov
xchg
cmp
in
bnd
xchg
xor
mov
dec
mov
pop
xchg
jp
and
sahf
shr
mov
and
lock
jbe
adc
xchg
jecxz
push
repnz
cwde
inc
rcl
icebp
or
jg
push
and
js
mov
sbb
pop
bound
adc
shl
mov
mov
pushf
cmp
ret
mov
out
sub
retf
popa
stos
cdq
int
xor
inc
enter
pop
nop
xchg
retf
and
push
ja
ins
lods
xrelease
jo
daa
cmp
clc
out
add
int3
xor
and
jmp
push
mov
xor
dec
push
jl
pop
ins
lock
test
xchg
scas
lea
jno
add
mov
lahf
fdivr
mov
add
fidiv
pop
sti
mov
loop
inc
adc
mov
test
arpl
cs
(bad)
fwait
mov
shr
(bad)
sbb
outs
neg
sbb
mov
pusha
add
cli
js
cdq
pop
lods
mov
out
fist
out
jb
mov
and
ds
mov
lods
push
aas
mov
fdivr
cmp
rol
cmp
mov
out
sub
pop
pop
aaa
dec
dec
lock
xor
retf
jl
retf
dec
cli
mov
adc
lods
aas
adc
fisttp
movs
fistp
cld
stos
xchg
lahf
xor
data16
clc
lahf
ins
mov
pop
mov
pop
fisttp
and
fidiv
ins
mov
push
push
ret
and
(bad)
fwait
inc
pop
or
add
adc
aaa
jmp
or
addr16
(bad)
ja
(bad)
loop
xlat
out
cmovge
adc
mov
or
xlat
hlt
jecxz
dec
pop
jae
mov
xor
mov
call
sbb
hlt
fst
jo
cmps
jmp
sub
mov
xor
mov
cmps
jg
push
mov
dec
gs
jmp
cmp
loop
push
mov
cmp
mov
push
rcr
pop
mov
stos
leave
jno
arpl
shl
inc
add
shl
jnp
jmp
sahf
call
mov
cmc
mov
mov
cmps
xchg
cmps
jnp
xchg
leave
adc
stos
and
lds
sub
sbb
jmp
mov
cli
(bad)
sbb
mov
push
test
pop
xchg
movs
push
or
out
mov
dec
mov
movs
inc
add
mov
pop
sub
int
das
dec
and
addr16
(bad)
pop
dec
cmp
adc
push
bswap
lahf
lock
push
pusha
mov
movs
aas
mov
sbb
mov
adc
(bad)
mov
fs
pop
repz
mov
add
outs
or
fistp
cmp
(bad)
jmp
cmp
js
movs
out
out
mov
sbb
push
aas
fcmovu
(bad)
fdiv
cmp
(bad)
in
mov
mov
cmps
das
xor
mov
inc
in
hlt
xchg
test
mov
jmp
jge
pop
popa
lock
cwde
push
sti
fnstsw
nop
fmul
lock
pop
jmp
sbb
sub
and
into
sbb
call
pop
jnp
inc
push
mov
je
daa
fild
sar
pop
mov
call
mov
push
lods
ret
inc
out
xor
call
mov
jno
(bad)
(bad)
rcl
popf
dec
xchg
add
cdq
aaa
fmul
(bad)
mov
dec
(bad)
enter
mov
xor
or
fadd
ret
inc
lock
mov
push
jno
outs
xlat
jl
jg
dec
mov
int3
cli
jae
xlat
cmp
(bad)
fsubr
mov
xchg
in
pop
inc
or
inc
std
inc
pop
fld
frstor
or
in
or
out
je
and
mov
pop
jge
addr16
jno
xchg
push
mov
cmp
sbb
mov
push
or
ins
imul
xchg
out
les
in
inc
and
pop
imul
in
out
sbb
inc
in
imul
(bad)
sub
int
fistp
xchg
cs
aad
cmps
hlt
and
test
cs
addr16
ss
aas
xchg
cmp
mov
pop
cmps
mov
cs
outs
push
ins
mov
test
rol
adc
dec
jmp
popa
clc
adc
ret
in
adc
adc
test
sub
pop
cmp
(bad)
xchg
push
jecxz
sub
bound
aam
adc
pushf
push
out
adc
inc
ja
xchg
or
xor
ins
iret
pusha
xchg
xchg
inc
rol
xchg
sub
or
jp
push
test
ror
lea
ret
shr
out
lods
sbb
sub
stc
lods
je
cdq
sub
mov
jnp
mov
xor
outs
in
leave
js
imul
adc
cs
fnstsw
cmps
inc
push
jp
ret
cmp
test
jp
and
outs
pop
xor
jp
mov
push
loope
push
push
adc
or
ret
cmp
int3
rcr
pop
aaa
fs
inc
sub
fmul
push
sbb
dec
es
jae
outs
out
daa
test
out
outs
cmc
pop
add
and
or
leave
out
jecxz
loope
jns
sub
mov
fwait
mov
mov
adc
cmp
mov
aam
jns
std
push
add
popf
out
je
jne
inc
xor
xchg
test
push
and
xchg
xor
mov
or
adc
repnz
and
xor
jecxz
(bad)
add
xchg
fisttp
sbb
aad
dec
and
mov
or
push
or
xchg
cmp
add
out
push
inc
dec
outs
(bad)
scas
xor
scas
icebp
jle
int3
and
push
addr16
mov
fsubr
adc
adc
sub
leave
js
jp
lea
retf
mov
sbb
cmps
pop
cmp
jb
inc
ficomp
nop
daa
cmc
mov
mov
dec
leave
je
push
push
jne
call
push
mov
push
mov
xchg
(bad)
inc
mov
dec
or
adc
or
leave
iret
push
or
add
cmps
cmp
jg
push
fsub
mov
std
cmp
dec
and
mov
sbb
or
sub
cld
jns
addr16
mov
pop
loop
xchg
sbb
jo
dec
pop
int
aam
cmp
and
pop
pop
imul
xor
xor
dec
mov
int3
jb
lahf
ret
xchg
icebp
adc
stos
jle
ror
push
inc
js
sbb
mov
push
data16
hlt
fdivrp
sbb
jle
xor
movs
add
jmp
and
fs
xchg
js
mov
nop
hlt
(bad)
iret
mov
adc
mov
fdiv
retf
fdivr
outs
in
jb
dec
sub
mov
pop
jne
push
and
mov
cs
push
shr
mov
xlat
fwait
test
pop
sbb
popa
adc
loope
inc
dec
mov
call
int3
je
push
push
(bad)
sub
enter
jne
dec
jge
int
(bad)
call
mov
sti
fucomp
cmp
or
jle
cmp
or
cmp
pushf
sbb
mov
or
push
cwde
mov
das
cmps
mov
mov
addr16
cmp
in
ret
push
popa
mov
in
les
push
in
imul
ja
mov
(bad)
cli
leave
jg
into
mov
rcr
jne
cwde
loope
pop
jbe
sub
push
pop
cs
jo
lds
dec
jb
mov
pop
loop
push
call
mov
retf
retf
pop
sti
outs
mov
pushf
push
mov
ja
js
pushf
std
sub
pop
in
shl
in
jg
pop
jne
and
shr
sbb
sub
shr
jbe
mov
mov
shl
aad
and
out
cwde
lea
push
mov
pop
cmp
push
mov
and
add
mov
pop
xlat
sbb
add
out
fstp
jl
jo
add
dec
mov
push
jge
mov
iret
or
data16
imul
dec
pop
xchg
enter
mov
mov
outs
xor
je
cmp
(bad)
dec
push
stc
or
or
retf
fucomi
and
adc
ins
addr16
pop
cmp
into
lods
sub
(bad)
mov
int3
rol
nop
sbb
cmps
sub
jl
sbb
push
adc
push
push
pop
mov
mov
lods
(bad)
jmp
sbb
dec
or
fs
jo
fcomp
pop
lods
iret
out
fs
jge
sbb
dec
sub
pop
mov
mov
div
inc
mov
imul
jo
sub
das
push
mov
sbb
adc
enter
fiadd
push
mov
mov
fisubr
cmc
and
movs
mov
fcom
shr
pop
sbb
push
in
xchg
in
jg
mov
and
es
cdq
jle
cmp
sub
aaa
cmp
adc
and
mov
mov
push
jbe
pushf
pop
hlt
imul
push
cmp
pop
pop
jmp
fist
inc
je
rep
icebp
and
push
mov
out
int3
popa
lahf
push
or
or
cmp
test
mov
adc
pop
mov
xchg
xchg
push
xor
pop
(bad)
(bad)
das
xchg
ss
ror
fiadd
out
movs
cmp
rol
dec
scas
push
sub
sbb
ins
mov
fisttp
jmp
inc
in
push
jl
scas
mov
in
imul
push
jnp
mov
push
xor
jl
ja
push
sbb
inc
pop
sub
icebp
cmp
(bad)
dec
hlt
je
repnz
or
add
les
cmp
repnz
jae
cmp
cs
jae
mov
cmc
xchg
jb
pop
iret
stc
jmp
es
jg
pop
mov
adc
fs
jl
ss
jmp
retw
and
cs
add
push
(bad)
mov
push
stos
jns
jp
mov
xor
pop
mov
fidivr
je
bound
pushf
call
and
mov
sub
sti
mov
mov
fdiv
call
xor
and
push
inc
and
cmp
les
sub
xchg
jmp
ds
scas
sub
(bad)
outs
rcl
mov
push
fwait
out
leave
call
dec
adc
jo
out
in
mov
outs
dec
repnz
pop
test
jno
(bad)
adc
mov
adc
sar
sbb
inc
daa
sub
test
pop
and
sub
rcl
xchg
pop
add
xchg
xchg
fs
movs
xchg
nop
je
inc
je
in
cmp
fldcw
jmp
pop
ss
adc
(bad)
mov
cs
bound
inc
lods
repz
cmp
in
(bad)
mov
add
inc
xlat
int3
xchg
cmp
imul
push
outs
pop
xor
mov
cmp
mov
rol
into
jne
mov
lock
cmp
add
adc
mul
pop
or
adc
ja
js
pop
lock
rcr
cli
pushf
inc
add
xor
in
sti
pop
popf
sbb
lods
mov
aas
pop
mov
jne
adc
fiadd
push
(bad)
fdivr
cmps
push
jo
cmps
sti
out
call
xchg
ins
icebp
xchg
sub
sbb
add
les
clc
dec
xor
mov
jne
or
add
data16
out
jge
or
test
aaa
or
or
and
dec
in
xchg
add
not
mov
gs
je
pop
out
enter
nop
push
int3
mul
(bad)
in
xchg
push
je
out
push
pop
movs
shl
cmp
cwde
cmp
add
cmp
retf
mov
mov
xchg
dec
movs
sbb
inc
jne
cwde
or
sbb
sbb
xbegin
pushf
xchg
jns
jecxz
sub
or
add
in
dec
inc
fild
fild
dec
(bad)
jbe
mov
adc
sub
imul
nop
aaa
mov
mov
dec
hlt
movs
shl
sub
movs
nop
jge
pop
dec
xchg
ja
jecxz
test
dec
inc
iret
dec
icebp
jmp
xor
bound
push
gs
cmps
xchg
mov
jno
xor
mov
test
adc
xor
xor
jge
test
pop
movs
add
inc
mov
adc
out
pop
push
cwde
nop
cmps
or
mov
adc
in
sub
cmp
std
ja
imul
inc
sbb
popw
or
push
outs
scas
jb
ficomp
retf
dec
rcr
mov
pop
add
cwde
push
or
or
imul
or
push
fcmovne
mov
call
hlt
scas
inc
adc
stos
pop
pop
fistp
xchg
sbb
mov
lods
jmp
and
rcr
jae
aad
xchg
pop
stc
arpl
cmp
(bad)
xlat
leave
movs
dec
adc
aas
mov
jl
out
xor
mov
retf
mov
xchg
imul
jne
xlat
clc
cwde
push
aas
pushf
sahf
cmps
pop
out
mov
push
ss
cmp
aad
enter
ds
push
adc
int
xor
ss
test
cwde
test
fld
ja
jmp
push
sub
inc
mov
adc
xor
and
cmp
or
cld
sub
mov
ins
mov
sub
xor
adc
push
and
add
sub
dec
xchg
rol
iret
rol
xchg
imul
aaa
out
jmp
in
cmp
mov
aad
ret
xor
inc
mov
rcr
push
xchg
pop
sbb
mov
mov
jp
xchg
mov
mov
div
addr16
and
cli
pushf
pop
add
sbb
inc
xor
dec
in
mul
push
lahf
mov
cmps
pop
test
xor
mov
pop
adc
not
push
jns
adc
dec
jle
mov
sahf
aas
repnz
jl
popa
or
dec
mov
dec
pop
retf
int3
mov
adc
or
mov
cmp
mov
sub
or
inc
data16
and
jl
gs
mov
dec
test
gs
loope
inc
sub
stos
or
(bad)
out
mov
cmp
shr
mov
out
cmp
push
jge
lahf
lds
jne
bound
adc
and
addr16
fbstp
cwde
out
nop
sub
add
sub
push
aad
add
test
sub
shl
sbb
or
fwait
loop
enter
pop
data16
dec
into
imul
xchg
retf
in
into
sub
repnz
adc
rcr
shl
cmp
xor
xchg
push
pop
(bad)
ficom
mov
nop
dec
mov
scas
addr16
mov
jecxz
dec
push
inc
mov
sbb
jle
dec
leave
cmp
mov
push
cwde
or
shr
shl
xor
xor
bnd
idiv
add
out
outs
loop
(bad)
xor
ficom
retf
daa
mov
push
ret
sub
ins
push
or
fwait
aaa
cmp
int3
lahf
call
ret
into
sar
fisttp
add
lea
cmps
xchg
push
dec
ja
pop
stc
cld
mov
mov
mov
inc
(bad)
xchg
inc
push
mov
push
xlat
sub
jbe
cmp
mov
dec
pop
fcmovb
sbb
in
and
ins
scas
cmp
mov
mov
sbb
or
cmp
mov
aas
sbb
(bad)
retf
xor
rol
mov
test
shl
jl
xor
jg
or
adc
fisub
sub
(bad)
sbb
inc
jno
pop
ror
dec
lock
sub
loopne
mov
les
add
fisub
cmc
shl
mov
push
jge
test
jle
and
arpl
loopne
lahf
push
ret
sub
test
lahf
ja
aas
cmps
test
xchg
sub
xchg
scas
fs
add
jno
push
jge
cmc
inc
rol
jno
fcomp
mov
retf
(bad)
test
and
mov
shl
push
pop
out
jae
js
leave
mov
sub
pop
cwde
add
push
mov
adc
mov
inc
xor
mov
jb
fs
ret
shl
imul
push
or
sub
push
outs
pop
fild
gs
or
pop
pop
pop
int3
pop
xor
aas
and
jg
mov
outs
sub
adc
ss
sbb
out
xor
pop
mov
hlt
in
sub
inc
aaa
or
ins
aam
sub
inc
lds
mov
nop
test
sub
test
lods
mov
pop
(bad)
lahf
add
pop
or
scas
dec
test
pop
adc
push
or
dec
xor
adc
jo
mov
push
sar
xchg
push
inc
and
ins
mov
sub
(bad)
cdq
ja
sub
test
fs
ja
inc
stos
rcr
dec
mov
(bad)
and
mov
out
adc
iret
into
cmc
es
xchg
xor
fmul
push
mov
pop
pop
jo
cmp
mov
ja
les
push
leave
mov
dec
pop
dec
or
pop
clc
mov
adc
push
pop
lock
out
mov
inc
jle
test
scas
dec
daa
into
jle
pop
inc
ds
xor
lea
jmp
jge
in
fndisi(8087
mov
pop
jmp
(bad)
repnz
xor
test
ret
sar
push
jmp
mov
mov
cs
cmp
int
cs
sbb
push
call
mov
mov
(bad)
popa
std
hlt
xchg
push
stos
inc
xor
lock
xor
push
jnp
test
ja
jp
adc
dec
mov
push
add
cdq
pop
push
fbld
in
sub
sbb
fadd
adc
mov
xchg
mul
out
pop
aad
xor
shl
ss
mov
push
or
add
repnz
sbb
std
cmc
xor
cmp
push
mov
mov
or
jne
pop
fwait
sbb
popa
mov
inc
xor
jg
push
cs
mov
dec
into
fimul
push
xor
add
xchg
movs
jae
mov
mov
xor
or
repnz
ja
sbb
jns
cdq
repnz
xchg
pusha
ror
cmp
pop
cdq
retf
fiadd
dec
js
shl
jmp
in
mov
out
test
jne
mov
dec
js
stos
jmp
cmp
mov
rcl
in
jle
imul
inc
add
fidiv
mov
pop
sti
addr16
in
repz
mov
ficomp
xchg
mov
lea
pop
retf
fcomp
loopne
or
pop
jo
push
xor
pop
jl
xor
jmp
cmc
lds
jle
fadd
neg
mov
push
das
cs
stc
adc
inc
sahf
mov
scas
(bad)
sub
cmps
cmps
in
dec
lods
push
ins
pushf
cwde
pop
or
into
out
jb
lea
inc
cld
test
xor
jae
ds
movntq
(bad)
add
gs
inc
repnz
lea
nop
jne
jnp
push
in
lds
icebp
xor
in
mov
daa
xchg
movs
mov
shr
jmp
mov
ror
mov
mov
test
leave
cli
cmp
cmp
mov
daa
or
xchg
cmp
test
inc
sub
mov
and
push
sub
fwait
sbb
jae
xor
shr
stos
ret
jae
add
clc
xor
mov
stos
dec
inc
xor
pusha
inc
mov
dec
not
push
dec
das
loop
in
mov
dec
pop
or
add
or
stos
cmp
mov
aad
jg
out
jae
xchg
fld
mov
xor
stos
fs
jmp
push
hlt
pop
(bad)
and
aas
jl
and
ins
push
jnp
xor
add
adc
push
add
fldcw
fcom
pop
mov
jb
movs
pop
or
inc
pusha
pop
cli
loop
push
retf
js
call
mov
pop
cmp
repnz
inc
dec
fistp
(bad)
cs
cmp
es
(bad)
aas
mov
pop
mov
shl
(bad)
int3
ins
cld
xor
movs
in
lds
push
and
push
setbe
das
push
jecxz
inc
mov
jle
push
pop
push
int3
mov
mov
and
push
gs
into
mov
stos
ror
ret
dec
cmc
or
out
jnp
cmp
or
subps
bound
inc
jmp
ja
aad
test
ror
std
jb
mov
(bad)
push
stos
push
fild
push
in
add
faddp
cld
jp
das
mov
xchg
js
pop
xor
sbb
add
out
jb
test
mov
lods
cld
popa
xor
outs
js
dec
add
loop
inc
pusha
jb
dec
movs
out
hlt
div
(bad)
lods
mul
add
movs
rdmsr
int3
test
inc
mov
dec
aam
out
dec
cmps
and
sbb
sbb
sahf
imul
les
sbb
mov
jp
sbb
cdq
jmp
ds
push
jecxz
mov
and
add
sbb
icebp
push
push
cmc
xor
scas
mov
idiv
add
js
sub
xchg
xchg
les
inc
jno
jecxz
push
int3
mov
aas
cmc
sbb
(bad)
inc
add
(bad)
mov
push
sub
cdq
mov
movs
mov
sbb
cwde
mov
mov
cs
xchg
push
stos
cdq
xchg
pusha
out
pop
pop
loope
out
jmp
cmp
inc
sub
xchg
(bad)
je
jge
xor
mov
jmp
fld
push
jmp
int
hlt
jmp
sbb
push
sahf
icebp
outs
pop
pop
add
in
or
popa
(bad)
sbb
lock
xchg
aad
sbb
fwait
ins
jge
jb
sbb
sbb
cmp
ret
push
adc
fld
out
add
mov
xor
retf
cld
iret
inc
dec
sbb
and
mov
mov
and
or
sub
dec
sbb
xchg
xor
push
nop
cmc
test
scas
lahf
cmp
popa
inc
cs
mov
cmp
data16
xlat
sysenter
xor
xchg
lods
shr
nop
mov
jmp
mul
or
loop
cmc
mov
cld
pop
and
inc
(bad)
xor
mov
in
jno
push
mov
loop
mov
rcl
inc
in
mov
and
xor
mov
add
dec
not
mov
sbb
dec
and
pusha
pop
call
jge
in
frstor
or
sub
sbb
aam
cmp
fs
cmp
lock
enter
pop
lods
int3
pop
xor
lock
iret
mov
test
gs
clc
leave
iret
popa
stos
ins
mov
xor
test
clc
loopne
sub
dec
leave
jg
cmp
loope
push
leave
aad
push
cmp
mov
add
push
xchg
pop
in
leave
int3
jae
lods
mov
out
lods
hlt
mov
and
leave
mov
add
test
aas
in
icebp
push
or
sbb
lahf
sub
(bad)
sbb
mov
fild
lds
ss
cdq
out
and
inc
test
imul
cs
mov
cmp
push
aaa
(bad)
call
mov
pop
push
dec
dec
setge
jmp
ds
jmp
sahf
in
movs
outs
pop
pop
push
push
push
jg
in
push
pop
pop
mov
stos
cmp
popf
mov
inc
fcmovnbe
cmp
outs
imul
(bad)
adc
ds
jne
bound
mov
xchg
dec
scas
out
inc
pop
push
mov
int3
in
adc
je
or
xor
call
nop
sbb
out
rcr
cmp
jne
dec
(bad)
ins
inc
data16
test
into
out
test
icebp
push
mov
mov
cli
(bad)
std
pushf
outs
loope
outs
inc
mov
xlat
arpl
shr
mov
pop
cmp
inc
adc
jae
lea
mov
dec
xchg
jg
xlat
jmp
stos
mov
in
adc
fwait
imul
test
xchg
retf
pop
sar
pcmpgtb
add
stos
dec
pop
in
scas
arpl
data16
pushf
pop
adc
repz
pop
std
fld
(bad)
or
xchg
jns
mov
xchg
add
fiadd
pop
mov
fbld
lea
fidivr
(bad)
mov
xchg
push
inc
outs
cmps
jns
adc
mov
or
movs
mov
or
pop
stos
out
xchg
add
mov
das
imul
lock
fsub
pop
and
dec
js
cdq
pop
add
mov
inc
rcl
pop
mov
xor
xor
mov
daa
mov
arpl
in
pop
test
bound
repnz
push
or
mov
outs
and
or
mov
sar
inc
pop
clc
sub
push
data16
icebp
lahf
push
test
jmp
fldenv
or
push
stos
fdivr
in
jl
aaa
in
cmc
mov
cmp
test
cmp
cwde
icebp
inc
(bad)
ins
movs
clc
scas
(bad)
adc
adc
mov
test
jmp
add
loopne
in
mov
pop
inc
(bad)
out
iret
mov
outs
iret
imul
mov
in
sbb
int3
popf
fld
in
dec
adc
and
mov
sbb
lods
ins
pop
or
push
aaa
cmp
add
sbb
pushf
mov
outs
ss
push
lea
cld
mov
in
or
ins
movs
inc
jne
mov
sub
test
gs
cli
jne
pop
leave
pop
xchg
test
or
mov
stc
jbe
movs
pop
rol
push
fld
call
jb
xor
mov
ret
fisubr
mov
push
mov
jae
test
pop
icebp
js
fld
hlt
pop
jno
int
ds
push
pushf
inc
jecxz
xchg
stc
ja
imul
dec
push
xchg
mov
jecxz
lds
ret
out
in
call
xchg
frstor
movs
sbb
hlt
sub
mov
mov
push
cmc
sbb
cmp
(bad)
jbe
xchg
mov
enter
cli
in
inc
mov
shl
and
fs
(bad)
nop
in
jbe
push
sbb
jne
shr
ja
inc
inc
mov
and
pop
xchg
lock
mov
lods
mov
mov
xchg
lods
fmul
add
fisubr
mov
out
leave
imul
inc
mov
leave
(bad)
mov
xor
xchg
jl
idiv
and
jnp
dec
shl
adc
sbb
les
(bad)
lods
test
mov
popa
mov
add
aas
out
imul
aam
add
sub
scas
jb
pusha
fwait
in
cmp
inc
push
sbb
movs
icebp
push
outs
aaa
add
pushf
inc
inc
ret
cmc
(bad)
nop
ss
out
adc
addr16
add
dec
icebp
adc
ror
sub
or
mov
dec
jmp
jno
bound
cwde
pop
sub
stc
lds
ror
int
movs
mov
sub
inc
les
clc
mov
outs
je
inc
pop
outs
(bad)
and
add
loop
push
dec
pop
jb
mov
loopne
mov
scas
sbb
sbb
arpl
adc
in
rcr
and
cwde
mov
jp
sbb
push
call
jp
dec
xchg
mov
dec
lods
inc
and
xor
dec
mov
jge
bound
test
xchg
pop
mov
fstp
popf
xor
(bad)
retf
push
mov
outs
stos
das
stc
movs
jmp
(bad)
scas
cdq
(bad)
sar
ja
jae
sbb
inc
mov
mov
dec
dec
jmp
adc
jo
stos
xchg
and
push
sti
mov
cdq
addr16
(bad)
hlt
out
movs
call
addr16
repz
fdiv
push
pop
popf
cld
movs
rep
out
scas
jle
and
xor
mov
jb
shr
xchg
(bad)
cmps
push
xchg
pushf
shl
popa
pop
or
cwde
push
imul
or
push
lock
popa
popa
call
cmp
dec
pop
jle
mov
pop
xchg
push
loope
mov
int
dec
xchg
xor
shl
push
jecxz
xchg
je
mov
fmul
mov
sub
cmp
sbb
(bad)
(bad)
movs
add
sbb
xor
movs
mov
mov
bound
sbb
ds
into
mov
mov
xchg
test
pop
inc
mov
sub
mov
inc
es
shr
inc
fcom
mov
pop
push
or
movs
pop
sub
test
push
leave
aad
dec
ja
mov
add
(bad)
ror
icebp
outs
fnsave
fs
push
mov
rcr
shl
add
jns
xor
and
sbb
ins
dec
arpl
jo
int
shl
clc
ficom
add
shl
xlat
es
sub
cld
addr16
mov
stos
fcomp
ficom
lock
cmp
test
add
dec
mov
pop
ja
mov
mov
push
pop
xor
nop
test
push
into
xlat
adc
and
add
add
fldenv
xchg
scas
imul
dec
sub
sub
outs
push
push
xlat
ja
std
xchg
dec
aad
inc
pushf
sub
int3
xchg
cmps
mov
adc
jmp
test
pop
jl
cmp
xor
push
jp
cwde
ja
aad
call
mov
pop
ret
or
leave
bound
xor
cmp
push
aaa
push
fidivr
int3
and
or
cdq
mov
jmp
inc
ins
mov
add
rol
fwait
jmp
mov
mov
mov
mov
cs
aaa
push
inc
das
gs
test
sbb
hlt
js
sti
out
shl
add
dec
das
jmp
inc
imul
shr
cld
mov
fcmovnu
pop
jno
jae
and
cmp
push
adc
pop
pop
jmp
daa
test
pusha
inc
inc
cmc
rcr
imul
or
loop
int
repz
in
add
sub
movs
mov
jl
cdq
movs
pop
cmc
mov
fisub
push
jae
dec
dec
loope
mov
(bad)
ret
fs
cmp
xor
jbe
add
xor
ins
pop
mov
jnp
imul
cmp
(bad)
iret
sahf
sahf
add
mov
push
rcl
push
shr
inc
mov
or
prefetch
ret
mov
mov
ftst
sub
mov
retf
loop
dec
lods
adc
or
inc
and
fld
into
jecxz
js
xor
leave
push
pop
cmp
adc
repz
inc
mov
mov
cdq
add
clc
loopne
push
fld
icebp
iret
aam
adc
int3
ror
loopne
dec
cmp
fsubp
mov
mov
stos
adc
xchg
test
in
cmps
rol
pop
mov
fisttp
scas
push
mov
scas
pop
cmc
mov
mov
test
jns
aad
repz
mov
fcomi
aad
sbb
mov
adc
cmps
outs
into
outs
mov
and
add
and
mov
push
inc
call
dec
shr
sbb
(bad)
push
daa
jmp
ds
and
inc
stos
in
push
mov
xor
es
jl
stos
inc
push
jmp
adc
adc
jp
test
mov
xchg
(bad)
out
cmp
xchg
stc
bound
push
ins
mov
push
sub
popa
dec
cmps
inc
mov
add
inc
inc
lock
cmp
test
xchg
sbb
icebp
dec
data16
jns
stos
push
jbe
fwait
sahf
test
adc
inc
scas
dec
pop
adc
adc
ret
xor
jne
cmp
scas
aad
dec
xlat
cmp
aad
xchg
adc
mov
xor
mov
icebp
add
and
jne
xchg
fsub
xor
repnz
(bad)
stc
adc
or
pop
test
or
dec
and
and
mov
mov
mov
lahf
jl
add
dec
jo
jl
push
pop
add
iret
push
jbe
push
inc
xor
pop
cmp
std
mov
pop
sub
cmps
push
xchg
xchg
xchg
push
pop
rcl
fidivr
lods
dec
push
pop
push
loop
mov
fisubr
dec
call
jno
mov
cmp
ret
mov
scas
out
std
or
pop
or
inc
mov
div
scas
iret
mov
mov
pop
ficom
adc
mov
in
and
pop
pusha
int
into
cld
dec
add
xchg
div
mov
stos
ret
sub
dec
xor
clc
sbb
(bad)
hlt
add
mov
inc
ja
push
imul
cs
add
data16
cli
cmps
mov
fs
sub
repnz
cmp
sbb
fisttp
or
jnp
not
imul
adc
or
xor
stc
call
fxtract
push
xlat
int3
pop
ror
test
jl
add
loope
pop
sbb
sbb
call
xchg
sub
adc
aad
repnz
popa
cmc
jle
xchg
sub
xlat
or
aaa
adc
add
add
or
(bad)
jmp
iret
add
mov
es
sti
push
inc
fwait
call
jb
cs
fs
cmp
pop
push
data16
and
mov
pop
sete
or
push
sbb
push
aam
sbb
pop
sub
mov
xor
sbb
(bad)
in
add
jl
shr
aad
sub
mov
sbb
xor
popa
mov
adc
sub
(bad)
mov
xor
cdq
loope
mov
dec
jbe
xor
jb
test
ret
pop
stc
loope
imul
js
lods
scas
lahf
or
sbb
jp
pusha
or
(bad)
std
sbb
and
push
pop
dec
es
xor
test
add
sub
arpl
stos
xor
mov
fs
outs
inc
test
cmp
dec
addr16
cmp
or
cli
(bad)
in
out
std
dec
cdq
add
jbe
out
ds
sub
jbe
add
xor
cli
mov
jne
mov
loope
div
mov
push
push
sub
aad
in
inc
adc
retf
retf
jmp
mov
pop
movs
push
jecxz
adc
daa
test
push
jle
imul
pop
into
xchg
nop
stos
mov
hlt
std
and
stos
rcr
push
add
pop
das
loopne
popf
or
gs
xor
hlt
mov
shl
or
adc
adc
scas
data16
ror
push
addr16
aad
mov
cmp
fisttp
mov
retf
jl
mov
sahf
fcomip
sbb
movs
pop
test
sbb
and
xchg
pop
test
stos
pop
and
(bad)
movs
or
stos
addr16
(bad)
std
push
and
push
cwde
mov
sub
mov
out
mov
mov
std
inc
lds
ds
push
mov
xchg
ins
jp
mov
test
fs
or
inc
jmp
out
jg
adc
xchg
call
push
jns
popa
xor
add
movs
xchg
mov
mov
pop
(bad)
out
fild
dec
pop
rcr
ror
mov
dec
data16
jp
mov
retf
sbb
scas
cmps
jo
mov
xlat
ret
sub
pop
push
cdq
mov
inc
das
aam
mov
dec
jne
jmp
pop
es
dec
in
sub
dec
pop
dec
in
or
jb
jge
mov
dec
xor
popa
push
sbb
pop
ret
push
cmp
outs
movs
jmp
int
sbb
sbb
mov
fmul
mov
movs
hlt
rol
xor
jbe
stos
retf
shr
dec
call
sbb
aad
(bad)
cs
sub
in
(bad)
mov
sbb
mov
out
shl
or
mov
cmp
inc
jl
das
xor
inc
or
lock
out
inc
fninit
pop
aaa
ja
in
sub
test
rcl
or
stos
and
(bad)
mov
add
clc
mov
cmovl
and
imul
push
or
iret
mov
sbb
out
mov
sub
sbb
sbb
xchg
sub
jno
dec
xor
jge
pushf
pop
xchg
xor
movs
stos
sbb
vmread
push
sub
push
dec
dec
aaa
cdq
mov
adc
es
dec
mov
scas
popa
sub
cmps
push
xchg
movups
push
stos
cmp
aaa
or
xchg
outs
mov
xor
and
jl
inc
aaa
test
mov
adc
nop
and
cld
mov
mov
jp
sub
xor
movs
cmp
(bad)
mov
mov
push
jmp
or
push
sbb
mov
mov
mov
pop
std
and
imul
mov
ins
(bad)
(bad)
mov
movs
in
ins
stos
ins
jo
(bad)
neg
jbe
and
data16
fnstenv
mul
(bad)
sub
inc
out
xor
push
xchg
lods
mov
xchg
scas
dec
popa
stc
jp
cld
xchg
idiv
outs
sbb
int
jl
push
aad
inc
push
jno
xor
lods
and
(bad)
pop
pop
push
inc
sbb
pop
mov
in
inc
add
js
fild
mov
and
mov
sti
movs
adc
jmp
iret
cli
int
outs
sbb
pushf
push
mov
adc
jl
xchg
inc
dec
adc
call
adc
sbb
test
pop
xor
ss
lahf
xchg
add
lds
ins
cs
fadd
cmp
pop
and
or
fpatan
mov
sbb
sub
mov
mov
in
fisubr
ss
jae
and
mov
xor
adc
mov
cmp
fldenv
cmp
and
clc
jg
sub
mov
inc
mov
push
jg
cmc
nop
sahf
mov
sbb
pop
cmp
sbb
lock
out
add
scas
inc
cmp
jo
xor
out
pop
push
push
out
in
lds
lea
aas
(bad)
pop
xchg
mov
or
or
push
sub
and
dec
lods
stc
xor
xchg
pushf
popf
jo
dec
(bad)
loope
add
cmps
or
loopne
sahf
push
gs
lods
imul
dec
or
js
dec
and
das
sti
inc
(bad)
cld
push
add
sbb
pop
loop
and
(bad)
fsubr
pop
pop
mov
jbe
pop
xor
cdq
mov
call
stos
movs
mov
or
das
xchg
xchg
enter
add
jg
pop
mov
int3
inc
in
dec
dec
dec
mul
(bad)
int
rol
ret
xor
inc
shr
xlat
adc
sbb
xchg
pop
test
in
(bad)
daa
fcom
mov
idiv
push
inc
mov
xor
inc
ins
adc
mov
retf
and
outs
add
ins
mov
popf
sbb
jb
scas
pop
clc
sub
(bad)
ror
ins
in
imul
push
add
cdq
mov
enter
xchg
jg
pop
bound
or
xor
xor
adc
hlt
data16
ins
aas
(bad)
dec
mov
stos
ins
jecxz
jge
sub
inc
retf
mov
mov
xor
jecxz
call
stc
xor
and
push
xchg
sub
jg
fs
add
loope
ss
mov
jnp
xchg
lods
rcl
mov
fmul
test
imul
xchg
call
add
xchg
mov
push
pop
repz
fucompp
fsubr
xor
pop
ins
jl
mov
xor
imul
or
xchg
sub
or
dec
das
test
pop
inc
sbb
loopne
push
rol
and
cwde
jo
jbe
push
mov
dec
inc
or
mov
sub
inc
and
cld
mul
and
xor
dec
sub
dec
(bad)
jns
cmp
das
pop
dec
lahf
and
(bad)
push
dec
and
mov
add
nop
inc
popa
outs
pop
jnp
das
sub
iret
mov
jp
jae
xor
jo
test
sbb
mov
leave
rcl
add
mov
clc
(bad)
bound
mov
in
sub
add
pop
lods
ds
pushf
mov
into
jnp
in
retf
outs
gs
jno
xchg
push
xor
sub
xlat
jo
shr
cmp
push
sub
dec
adc
scas
inc
push
out
retf
or
retf
xor
outs
sbb
in
lods
jmp
push
sbb
pop
sub
sar
xor
bound
dec
iret
ds
jp
inc
fisubr
mov
dec
fwait
and
fwait
imul
retf
sahf
nop
mov
lods
jecxz
and
test
add
lods
in
push
dec
ins
clc
mov
pusha
dec
push
aas
xor
push
pop
cwde
mov
es
inc
mov
ins
mov
out
lea
imul
and
xchg
gs
inc
lods
daa
sti
lds
xor
or
jo
mov
sub
mov
aaa
push
inc
push
xchg
adc
imul
fisttp
fwait
(bad)
jmp
or
inc
or
and
fwait
mov
out
xchg
push
retf
xchg
dec
cmp
movs
mov
(bad)
mov
jne
pop
daa
mov
mov
fcmovnu
mov
cmp
push
jb
sbb
mov
int3
movs
mov
fmul
movs
in
push
daa
xchg
mov
adc
call
ret
push
push
aad
lock
shr
and
ds
das
mov
dec
jg
ss
mov
inc
mov
cs
jge
in
les
pop
das
mov
dec
sub
out
xor
mov
pop
sub
inc
push
sbb
xchg
imul
xor
retf
ds
jne
shl
outs
add
sbb
push
fisub
mov
jp
in
jmp
fst
jmp
lods
les
int
inc
fsubr
jle
pop
(bad)
test
iret
je
ficom
imul
mov
sub
sbb
test
or
mov
cmps
out
aad
mov
adc
add
xchg
mov
shl
fs
fstp
mov
in
cmps
jecxz
ins
dec
test
test
mov
imul
jnp
cmp
add
add
mov
call
xor
repnz
aaa
xor
sbb
bound
rol
jno
int3
sti
jo
(bad)
mov
pop
pop
js
or
mov
or
mov
les
loopne
sbb
push
cmc
dec
outs
jb
xchg
outs
push
mov
sub
out
add
cmp
push
jbe
ror
aad
mov
push
lods
mov
call
retf
sbb
inc
in
and
in
mov
jecxz
(bad)
push
sbb
and
lea
xchg
repz
fcmovnbe
(bad)
jl
imul
in
test
outs
idiv
shr
add
jmp
(bad)
ja
or
xchg
int
lock
jne
enter
push
jecxz
(bad)
push
scas
adc
ins
and
sub
aaa
ror
data16
clc
test
shl
mov
xchg
mov
pop
sub
mov
dec
sub
mov
stos
loop
push
iret
xchg
fistp
mov
mov
mov
push
iret
inc
int
fsubr
retf
in
clc
mov
mov
arpl
inc
push
mov
jns
shl
lods
das
dec
mov
jmp
or
pop
sahf
cdq
rol
dec
lahf
jge
push
sbb
mov
ja
retf
jmp
int
mov
or
popw
mov
aas
sub
sub
inc
aas
xor
lods
mov
dec
sbb
dec
je
jle
sbb
popa
sbb
sub
pop
in
jno
(bad)
into
jno
fwait
cdq
push
mov
sub
mov
xor
sub
mov
cmp
popa
inc
retf
push
mov
push
add
loope
jns
inc
dec
cdq
cmp
pop
jbe
movs
out
mul
fadd
or
pop
imul
outs
inc
mov
or
cwde
push
pop
test
xchg
mov
js
stos
retf
in
jl
pop
sbb
jbe
(bad)
(bad)
dec
pusha
rcr
and
jmp
mov
arpl
or
in
mov
sub
retf
cmp
adc
jecxz
inc
loopne
xchg
repz
es
cmp
or
call
into
inc
jns
rcr
maskmovq
mul
push
xchg
xor
mov
cdq
mov
fs
mov
or
fs
add
pusha
cmp
icebp
shl
pushf
in
dec
rcr
cld
outs
xor
jecxz
out
push
mov
and
cmp
popa
jns
adc
pop
mov
add
dec
inc
xchg
ja
fldlg2
test
mov
push
fnstsw
pop
cmp
push
je
mov
icebp
test
add
xor
sub
cdq
sub
inc
loope
jl
fsubr
pop
pop
jmp
xor
mov
les
loopne
xor
ds
mov
jnp
test
xchg
js
ins
cld
cli
jnp
mov
test
or
call
stos
(bad)
repz
sbb
add
fcmovnb
inc
(bad)
in
push
mov
mov
fild
dec
sub
fidivr
push
lods
and
xor
inc
xor
icebp
enter
cwde
(bad)
out
push
loop
mov
xor
adc
cmps
in
push
pop
or
(bad)
sti
loop
mov
and
mov
xchg
push
repz
into
xchg
sbb
add
and
mov
jo
mov
mov
fistp
mov
sub
in
sbb
adc
dec
mov
add
sub
mov
enter
mov
rcl
xlat
cdq
je
pop
push
mov
ds
sub
push
mov
jg
jg
pop
xchg
movs
add
in
xchg
iret
xchg
ja
mov
sbb
int
aaa
shl
sbb
dec
push
sub
fcmovnu
int
jo
movs
push
push
push
or
ins
xor
jne
fwait
stos
retf
xchg
aaa
shl
inc
lock
adc
out
dec
mov
call
std
icebp
int
movs
pop
sbb
cmp
pop
xchg
adc
jl
enter
sub
sbb
test
and
stos
inc
(bad)
rcr
lods
mov
jecxz
dec
jg
inc
push
sub
in
bswap
push
pop
push
pop
push
jg
mov
jns
das
call
push
fistp
and
pop
movs
daa
fsubr
mov
cdq
cld
cwde
mov
xchg
enter
push
push
pop
cmp
adc
mov
mov
ds
xchg
xchg
popf
or
rcr
sub
add
sub
xchg
inc
rcr
jl
cmp
fs
mov
push
sub
lods
jne
popa
shl
xor
(bad)
xchg
lock
cmps
mov
cmp
push
push
in
es
jmp
aad
jmp
or
dec
inc
lock
fstp
xlat
dec
rcr
test
dec
stos
rol
sahf
pop
pop
add
xor
sti
jge
mov
mov
aad
(bad)
lods
xor
das
inc
push
in
(bad)
sbb
xchg
sub
inc
retf
mov
inc
out
mov
stc
ret
adc
pop
ins
xchg
dec
dec
sar
lods
out
xchg
(bad)
inc
int
and
mov
add
rep
cmp
xlat
data16
pop
sbb
mov
addr16
mov
scas
xor
fimul
in
cmps
push
std
fwait
add
pop
sbb
xlat
pop
cmps
iret
lea
movs
jbe
sub
out
add
mov
dec
dec
add
xchg
mov
mov
jb
(bad)
adc
dec
jno
neg
xor
and
add
test
or
(bad)
in
outs
sar
dec
ret
lods
(bad)
rcl
push
adc
popf
or
xor
loope
je
add
aaa
or
jp
mov
xchg
outs
scas
retf
pusha
aas
jnp
outs
xchg
adc
push
rcr
shl
mov
imul
xchg
fwait
outs
ja
repz
dec
leave
and
cmp
pop
add
sub
xchg
fild
dec
cwde
mov
mov
leave
cmc
and
mov
jb
sub
xor
out
loope
xchg
mov
das
ret
dec
ins
xchg
push
in
pushf
xchg
cld
jbe
push
add
hlt
inc
xchg
cdq
fs
lahf
add
aam
pop
mov
add
sub
fbstp
shl
js
push
cli
jae
lods
imul
push
and
mov
xor
inc
fnstenv
inc
outs
in
clc
sub
cmp
and
add
mov
imul
xlat
jl
xor
push
dec
shr
loopne
jmp
movs
aad
out
push
mov
or
inc
dec
xor
xchg
popa
rol
stos
ins
cmp
xchg
clc
push
inc
cmp
pushf
and
cwde
mov
in
push
(bad)
jmp
mov
push
fwait
mov
mov
ja
pop
mov
cmp
mov
cmp
bound
mov
into
test
jmp
cmps
push
and
hlt
adc
out
push
push
fld
xor
add
pushf
xchg
mov
(bad)
mov
lahf
mov
sbb
dec
cli
jle
and
out
scas
pop
mov
mov
scas
xor
push
xchg
mov
inc
xchg
outs
mov
adc
jnp
hlt
cdq
dec
ret
aam
inc
xchg
call
sbb
sar
ficom
adc
data16
ins
aad
stc
call
xor
mov
inc
(bad)
mov
lods
scas
pushf
retf
test
cmp
enter
in
out
mov
sbb
dec
imul
fwait
(bad)
ins
xchg
push
xchg
or
or
(bad)
pushf
cmp
aam
fucomip
cmp
cmp
sub
push
pusha
sub
in
inc
pop
cmp
xor
xchg
xchg
cwde
int3
out
inc
fwait
mov
lahf
mov
(bad)
sbb
lahf
das
mov
imul
fisttp
loope
xor
add
pop
repnz
stos
imul
mov
aad
mov
pop
(bad)
(bad)
sbb
pop
fucomip
leave
push
inc
and
movs
cdq
das
mov
arpl
sti
lea
repnz
jo
mov
dec
stc
mov
xor
imul
fwait
mov
adc
and
mov
scas
ficom
enter
cs
add
pop
mov
adc
gs
ret
scas
xor
fwait
dec
or
imul
addr16
inc
aaa
scas
popa
xor
or
loop
xchg
mov
outs
or
lahf
icebp
std
and
xchg
in
cmp
and
(bad)
cmp
rcr
out
popf
cs
mov
add
xor
push
push
lds
popa
fisubr
add
mov
das
sbb
push
cdq
jo
sub
hlt
outs
(bad)
mov
bound
in
cmps
mov
clc
jae
ins
in
in
or
idiv
bound
sub
inc
and
js
pop
push
and
mov
add
pushf
call
sub
or
movs
push
imul
fistp
popf
fimul
daa
sub
aas
popf
pop
iret
out
imul
scas
leave
out
push
stos
sub
mov
aad
xchg
cmp
mov
fst
dec
xchg
xor
mov
repz
push
push
in
ss
hlt
xchg
popf
lods
add
or
mov
std
xor
jnp
xchg
adc
cwde
xchg
dec
add
adc
jp
xor
dec
mov
ficom
push
jno
xor
dec
dec
and
test
popa
repz
jg
push
add
adc
add
sbb
adc
mov
into
sbb
pusha
mov
mov
ret
dec
rcl
xchg
aas
jbe
(bad)
xchg
cli
outs
mov
inc
sti
jne
sub
and
jo
dec
mov
inc
aam
push
lds
xchg
pushf
jp
fsub
(bad)
retf
jae
sub
(bad)
add
jl
push
les
dec
xchg
adc
jae
cdq
lock
jg
sub
add
add
repz
outs
sbb
mov
je
add
mov
xchg
mov
mov
jbe
sub
daa
mov
mov
cmp
pop
std
dec
outs
xchg
jge
adc
mul
cmps
mov
dec
and
pusha
cmp
xor
cmps
push
mov
dec
ret
dec
pop
out
pop
repnz
(bad)
icebp
std
out
mov
dec
aas
outs
adc
and
add
loopne
psllw
retf
cwde
xchg
mov
dec
mov
inc
mov
mov
lods
jmp
add
push
or
jo
fnsave
je
mov
stos
aad
icebp
sub
pop
xor
rep
(bad)
cli
mov
mov
dec
out
pop
shr
inc
sub
dec
adc
mov
sub
xchg
mov
enter
pop
fdiv
dec
shr
popa
xchg
mov
adc
inc
fidivr
iret
pusha
and
dec
cmps
imul
fdiv
sub
push
leave
fldcw
imul
push
imul
adc
das
cmp
in
out
fiadd
sub
(bad)
retf
push
sub
push
push
mov
pop
mov
inc
cmp
cmc
out
mov
adc
mov
hlt
je
fwait
and
and
hlt
aas
cmp
inc
rcl
sub
fcmovne
repz
repz
adc
mov
mov
lods
sub
popf
aas
outs
fiadd
(bad)
sub
add
adc
dec
fadd
pop
in
daa
sub
gs
mov
not
dec
sbb
jnp
rcr
cmp
movs
sahf
loop
jbe
(bad)
icebp
jb
ins
cmp
in
mov
scas
movs
inc
mov
xlat
mov
sub
dec
inc
(bad)
call
inc
test
sti
cmp
push
mov
add
pop
jbe
test
addr16
arpl
inc
mov
pop
std
(bad)
and
cmp
aad
jmp
push
mov
jmp
cdq
std
inc
jl
aas
and
not
addr16
adc
pop
clc
into
jge
mov
fmul
xor
ins
xchg
dec
xchg
cmp
rol
cli
das
sbb
push
or
pushf
sub
or
mov
xchg
xchg
cmp
inc
ret
daa
adc
mov
inc
jp
repnz
(bad)
pop
outs
sahf
test
xor
push
in
(bad)
xlat
xchg
inc
cli
mov
aam
pop
xchg
adc
call
and
cmp
sbb
dec
mov
and
popf
leave
std
xchg
cmps
mov
and
dec
mov
adc
adc
mov
repz
pusha
int3
js
or
fwait
(bad)
xchg
sbb
jp
cs
dec
and
mov
cmps
jbe
sbb
mov
xchg
out
jecxz
mov
dec
sbb
pop
and
push
push
dec
ret
mov
retf
inc
and
ja
mov
in
int
mov
popa
mov
inc
sub
enter
call
fstp
leave
dec
mov
sbb
iret
mov
stos
mov
(bad)
popa
js
xor
out
push
mov
jo
push
push
jmp
push
mov
pop
cmp
add
sbb
inc
ja
push
jecxz
loop
xchg
aad
and
mov
pop
push
inc
sub
or
inc
dec
lock
adc
(bad)
push
ins
int3
xor
xchg
sub
mov
inc
mov
ret
push
cmps
push
movs
add
sbb
popa
mov
out
jge
jns
call
sub
sub
mov
sar
cmp
outs
xchg
(bad)
cvttps2pi
call
out
test
jle
push
sbb
movs
sbb
(bad)
add
gs
shl
or
mov
les
cmps
xchg
loopne
ja
mul
cmp
cld
outs
loopne
xchg
push
mov
jmp
push
fisttp
pop
inc
lock
les
pushf
push
mov
sbb
push
inc
cmps
jnp
jb
das
push
jbe
cmp
mov
repnz
je
imul
adc
cmp
(bad)
mov
imul
hlt
pushf
mov
icebp
loopne
fiadd
jle
jo
sti
push
mov
xlat
fs
repz
outs
sbb
mov
mov
out
dec
inc
cmp
jo
fbld
aam
popf
sub
xchg
push
xchg
jb
rol
push
add
lods
mov
jae
push
pop
and
mov
pop
jge
adc
int3
mov
xchg
pop
ret
jb
pushf
pop
sbb
sahf
cmp
fucom
in
cmps
cld
cmp
(bad)
jge
mul
repz
std
sbb
addr16
cmp
popf
repz
and
mov
rol
into
movs
mov
and
sub
out
adc
outs
mov
lds
in
std
push
xor
or
and
sub
mov
pop
xor
or
jecxz
movs
jb
push
mov
jns
into
fwait
jle
cmp
and
mov
and
cmps
xchg
jae
pop
mov
push
in
sbb
push
push
jnp
mov
dec
and
data16
in
retf
popa
pop
outs
ret
xchg
dec
mov
sti
or
fld
mov
test
xor
bound
rcl
test
cmc
xchg
(bad)
xor
or
sub
and
jmp
mov
xchg
loopne
push
jmp
mov
xchg
pushf
inc
daa
sub
div
(bad)
cli
inc
mov
daa
outs
push
xchg
fmul
pop
rol
(bad)
mov
mov
mov
das
push
cmp
ss
(bad)
clc
into
xrelease
sub
retf
int3
test
test
jmp
xlat
int3
inc
push
or
dec
fdivr
hlt
and
dec
loope
pop
sbb
(bad)
(bad)
enter
push
retf
popa
pop
mov
mov
imul
mov
mov
mov
daa
mov
sbb
out
mov
jbe
lea
aam
jno
push
jns
sub
cmc
push
or
xor
push
pop
pushf
shr
test
pop
imul
mov
cmp
mov
sbb
out
cmp
mov
outs
jp
xchg
in
in
adc
addr16
adc
daa
adc
mov
mov
add
add
addr16
(bad)
cmp
int3
dec
in
cwde
push
cmps
xchg
dec
mov
(bad)
inc
xchg
lds
rcl
xor
inc
mov
or
pop
inc
adc
dec
inc
sub
push
jge
lods
cmp
mov
mov
sub
xchg
jmp
repnz
or
ins
push
ficom
jo
adc
push
dec
pminsw
mov
inc
scas
push
into
in
sti
mov
or
push
push
pop
inc
xor
cmovne
mov
in
into
push
push
add
xchg
sbb
push
add
out
push
mov
std
jle
leave
out
pop
out
mov
pop
add
cmp
mov
retf
jns
mov
out
sahf
mov
dec
adc
dec
adc
pop
cmp
retf
or
stc
cmp
mov
jo
int
mov
stc
cmp
ja
mov
rcl
cmp
xchg
dec
add
sub
and
mov
lods
lods
aaa
or
aas
pop
mov
add
sub
ss
jmp
adc
cmps
(bad)
add
fmul
ret
sti
sbb
gs
shl
in
test
mov
xchg
push
pop
pop
mov
adc
inc
imul
inc
data16
mov
outs
call
mov
pop
sub
je
sub
sbb
add
sbb
cmp
mov
ss
jle
mov
jbe
mov
mov
cmp
shr
adc
pop
cmp
lock
cld
adc
nop
and
pop
sahf
sbb
ret
inc
into
mov
fs
pop
inc
xchg
pop
popa
(bad)
stc
outs
je
mov
fcomi
mov
aaa
cld
cmp
adc
sub
xor
inc
(bad)
mov
sahf
cmp
stos
push
mov
and
stc
call
hlt
sbb
ret
dec
inc
leave
stc
lea
gs
rol
cmp
sbb
push
sbb
jmp
stos
add
bound
adc
cs
les
fst
sti
jp
and
and
sub
call
(bad)
aaa
leave
mov
sub
idiv
sub
aam
xlat
sub
dec
imul
or
test
(bad)
sbb
pop
repnz
mov
mov
repz
cmp
mov
rcl
mov
imul
add
and
jbe
enter
out
test
fucomp
mov
imul
aas
clc
sub
repz
outs
aad
or
pop
add
std
stos
das
out
xchg
nop
xchg
mov
sar
in
adc
add
les
mov
(bad)
pop
pop
fwait
mov
inc
(bad)
fild
jmp
and
rcl
jns
push
sbb
mov
loope
push
mov
xor
xchg
int
lahf
dec
in
push
sahf
fst
xor
int3
cmc
pop
les
mov
cs
dec
loope
out
xchg
cmp
rcl
test
ins
inc
mov
(bad)
jmp
aad
cmp
add
test
cmp
sub
dec
xlat
xor
cmps
xor
imul
adc
sbb
test
sub
fmul
sub
and
mov
mov
nop
xchg
dec
loopne
mov
adc
inc
aaa
bound
jg
jno
mov
sub
inc
gs
imul
cmp
jp
or
stos
pop
dec
movs
(bad)
jge
test
std
mov
leave
stos
mov
repnz
jmp
hlt
in
push
jbe
jle
mov
add
aas
pushf
sub
clc
push
push
mov
and
sbb
ss
arpl
fimul
and
xor
mov
and
push
ins
add
pop
push
clc
mov
inc
rol
cld
movs
test
dec
das
cmc
mov
dec
loope
cmp
add
pop
ds
add
(bad)
mov
pop
push
sbb
xchg
aam
sub
in
jmp
mov
sbb
jmp
and
mov
mov
add
mov
mov
push
je
sar
mov
xchg
sbb
ret
inc
leave
into
daa
clc
test
lds
push
mov
pop
cmp
lock
sub
(bad)
pop
sub
fidivr
popf
mov
(bad)
cwde
lea
add
mov
xchg
jne
shl
push
stos
sbb
xchg
mov
ins
and
(bad)
es
cs
fstp
shl
add
into
arpl
fistp
cmc
sbb
pop
mov
inc
mov
and
dec
iret
int
outs
inc
movs
into
js
mov
pop
cld
hlt
imul
lods
sbb
(bad)
das
fisubr
test
add
int
inc
xchg
mov
pop
pop
jne
push
gs
pop
xor
aas
ror
out
iret
lock
adc
cmp
aam
nop
jns
dec
cmp
aaa
push
and
or
push
jge
fsubr
cdq
lock
js
fisttp
mov
sub
or
test
dec
push
jp
popf
adc
jle
pop
jmp
imul
add
cmp
mov
loope
adc
mov
es
ins
xchg
test
ins
pop
sub
(bad)
in
in
mov
fcomp
xchg
gs
arpl
inc
icebp
call
inc
cmp
cli
pop
arpl
sub
mov
(bad)
sbb
xor
sub
mov
xchg
aas
xchg
imul
pop
push
test
test
cmps
movs
sbb
std
adc
retf
aam
mov
inc
(bad)
cli
test
retf
inc
loope
es
mov
sub
fmul
fcomp
daa
cmp
mov
sbb
repz
stos
repnz
imul
mov
sub
push
cli
sbb
call
mov
shr
inc
popa
jecxz
xchg
xor
or
inc
sbb
sub
push
in
stc
arpl
jne
push
xor
and
sub
jb
push
xor
xchg
das
sbb
dec
ss
rol
dec
loopne
xchg
xchg
jb
jmp
es
je
mov
mov
daa
push
retf
cwde
push
mov
xchg
test
add
and
ds
push
adc
and
movs
ror
mov
aad
mov
mov
push
not
xor
pop
and
dec
out
ins
xor
cmp
fild
icebp
and
fwait
pushf
lock
jle
jmp
pop
jg
fist
cmp
adc
xor
sub
dec
mov
inc
xchg
add
in
std
pop
mov
pusha
dec
(bad)
sbb
xchg
test
cmp
xor
arpl
dec
test
ja
push
cli
and
push
inc
push
cmp
pop
jp
xlat
data16
retf
movs
push
inc
mov
lds
dec
cld
out
xchg
lock
ret
aaa
or
cwde
and
mov
mov
mov
jo
jmp
add
pop
add
data16
sbb
mov
pop
imul
imul
jp
fnstsw
xor
and
jmp
xor
jnp
push
cs
and
lods
fst
sahf
adc
mov
mov
xchg
cmc
and
jns
in
push
sahf
out
int
sti
mov
jns
(bad)
pop
mov
push
push
sub
inc
push
sahf
in
lahf
mov
and
fild
test
and
inc
inc
ret
push
out
push
inc
shl
repz
add
sar
mov
bound
push
mov
fidiv
mov
int
ins
sbb
dec
std
fist
xlat
push
add
loope
mov
mov
pop
xchg
and
test
popa
xchg
rol
shl
jno
mov
sti
mov
int
push
cmp
sub
xchg
and
adc
inc
bound
jl
test
cmp
adc
outs
pop
adc
mov
(bad)
mov
sbb
hlt
les
and
jns
xor
xor
dec
je
push
xchg
adc
push
add
ficom
cmps
stc
jns
(bad)
cmc
dec
adc
and
adc
clc
mov
add
mov
and
popa
stos
sti
mov
ins
int3
nop
xchg
hlt
dec
mov
jns
retf
test
dec
stc
xor
arpl
sahf
dec
lahf
addr16
or
xchg
mov
xlat
imul
sub
pop
fld
nop
int3
stc
jg
test
push
mov
jp
push
aaa
and
adc
sub
out
and
push
sub
scas
fstp
sbb
mov
js
scas
out
and
repnz
les
mov
jno
test
or
outs
es
adc
gs
mov
not
xchg
mov
jbe
out
mov
inc
shl
imul
mov
xchg
pop
nop
(bad)
mov
mov
dec
and
lea
loope
es
push
and
aas
mov
or
mov
in
and
xchg
mov
cmp
div
pop
fidivr
nop
loope
adc
cmp
shl
cmc
test
sbb
mov
arpl
test
add
lock
repnz
mov
cmp
inc
into
mov
addr16
in
xchg
imul
scas
(bad)
das
mov
aaa
pop
xor
push
jne
pop
mov
dec
push
push
mov
jne
mov
popf
dec
xlat
in
pop
adc
jmp
pop
xchg
dec
and
inc
cmp
add
jg
movs
dec
xlat
fiadd
push
ret
xor
xchg
add
pusha
add
ja
mov
jl
pop
xchg
fisub
push
(bad)
hlt
inc
and
sbb
mov
cmc
hlt
hlt
dec
push
(bad)
push
and
xlat
xchg
pop
and
loop
(bad)
fild
std
dec
(bad)
test
xchg
lds
fstp
xor
arpl
pusha
aas
mov
dec
push
jge
test
mov
mov
jmp
and
add
mov
and
xor
(bad)
mov
shl
(bad)
fwait
je
jmp
fwait
mov
push
xor
retf
out
jge
(bad)
call
cmp
xchg
aam
jnp
int
les
add
jno
cmps
ins
xor
pop
in
mov
mov
iret
daa
jl
add
dec
and
jmp
jmp
jecxz
or
outs
fwait
mov
scas
(bad)
mov
add
fwait
sub
jb
add
push
sub
test
sub
pop
jb
inc
push
loope
pop
sub
xor
arpl
mov
pusha
fiadd
pop
aam
xchg
mov
ficom
das
sar
std
sbb
sub
aam
adc
xor
xchg
mov
repz
cld
call
out
out
ret
inc
jb
gs
push
div
cli
or
sub
sbb
imul
in
scas
out
repz
push
movs
push
mov
dec
adc
aas
or
clc
inc
and
cmp
popa
mov
pop
mov
out
sub
fdivr
xor
push
and
and
nop
xchg
xor
xor
ret
inc
dec
repnz
ret
vmaxps
psubq
sbb
mov
adc
imul
fild
pop
into
sbb
mov
pushf
mov
jnp
into
psubsb
arpl
or
lds
sub
nop
push
add
mov
mov
mov
cmc
loopne
jmp
shl
mov
ins
sbb
jno
dec
inc
test
scas
stos
int
push
hlt
pop
sub
mov
and
inc
inc
and
dec
test
sbb
es
pop
pop
and
jae
mov
rcl
and
push
xor
retf
out
jnp
or
les
xchg
pop
arpl
arpl
lahf
lahf
dec
cmp
sub
add
je
mov
stos
nop
xchg
cmc
iret
push
mov
xchg
test
imul
adc
loop
jns
adc
mul
push
jb
xlat
gs
in
das
jmp
pop
fs
ins
enter
ds
in
xchg
popf
mov
sbb
ds
shl
into
and
mov
mov
popa
mov
enter
sbb
push
out
mov
and
push
stos
xchg
inc
les
pop
(bad)
jae
xor
sub
jecxz
adc
adc
or
das
out
mov
jle
pushf
leave
jmp
daa
and
pop
(bad)
cmc
jns
jo
xor
mov
dec
arpl
push
sar
mov
lds
test
inc
fisttp
xor
fwait
mov
call
cmp
into
lock
pop
aam
inc
adc
fdivr
inc
or
push
mov
inc
push
je
push
push
jno
mov
sbb
psllw
jp
dec
dec
(bad)
lock
outs
in
popa
(bad)
push
push
jg
rcr
test
test
rcr
shr
adc
cmp
in
daa
clc
jge
cmps
sti
sbb
movs
mov
dec
fwait
mov
xor
and
push
push
add
mov
dec
push
rol
xchg
(bad)
(bad)
jns
pop
or
pop
and
aad
push
dec
daa
stos
sahf
mov
and
test
jne
inc
fstp
sub
retf
addr16
pop
jle
in
xor
retf
ret
enter
sbb
sbb
lock
repnz
int3
adc
gs
shl
cmp
pop
xchg
ins
sti
loope
nop
movs
out
imul
mov
mov
sbb
sar
push
mov
ret
out
jne
ja
fadd
je
ss
sar
inc
jae
sar
mov
add
scas
cli
xor
push
pop
lock
pop
rcl
jbe
dec
into
dec
xchg
push
or
xchg
repz
clc
dec
fwait
sub
test
mov
adc
int
mov
sbb
iret
int
inc
sub
inc
(bad)
stc
scas
mov
mov
pop
jb
dec
pop
and
inc
rol
jo
arpl
int3
fsubr
clc
nop
jbe
enter
jo
scas
outs
push
fs
ret
call
jmp
push
(bad)
xchg
inc
push
adc
mov
out
xchg
imul
jmp
out
add
(bad)
jne
(bad)
fwait
arpl
push
jae
jl
xchg
leave
call
pop
xor
xchg
arpl
outs
jle
xchg
add
push
adc
xchg
push
retf
add
xor
retf
daa
sub
push
pop
daa
cmp
ins
fcmovnu
cmp
ret
outs
push
repnz
stos
out
pop
jne
or
rol
push
mov
xchg
mov
sbb
dec
iret
or
inc
stc
movs
clc
mov
in
xor
cmc
(bad)
pop
pf2id
sbb
scas
icebp
inc
mov
shr
mov
pop
mov
cld
jl
lods
and
dec
lods
lds
sub
stos
cmp
xchg
and
fmul
dec
xor
imul
lahf
add
loopne
mov
cli
pop
cmps
clc
jne
sub
pop
test
fsubrp
xor
pop
lods
popa
clc
and
sub
push
js
mov
xor
jo
mov
add
push
in
inc
xchg
push
dec
dec
mov
(bad)
js
mov
mov
popf
dec
xchg
dec
sahf
sbb
sbb
xchg
fyl2xp1
xor
fnstenv
fsub
adc
pop
add
push
aaa
stc
retf
test
dec
sub
cmp
adc
pop
and
push
shl
mov
dec
jmp
rcr
adc
pop
mov
jge
jg
jl
dec
xor
push
loopne
ins
inc
inc
popf
hlt
mov
arpl
and
jge
in
(bad)
scas
scas
sub
cmp
repz
gs
add
lods
and
sub
(bad)
xor
lods
enter
or
add
ja
data16
ds
(bad)
and
jecxz
xchg
inc
cld
inc
(bad)
sbb
jmp
or
adc
mov
fnstsw
sti
adc
inc
outs
jmp
int3
sub
aam
sbb
daa
push
mov
fisubr
popa
pop
xor
mov
rcl
xchg
jmp
fist
or
aam
adc
push
mov
sahf
fwait
or
rcl
push
pop
(bad)
mov
xor
ja
xor
mov
mov
jbe
lock
cld
sub
jl
out
push
aaa
mov
or
jp
mov
rcl
inc
fst
clc
cmp
jp
scas
div
mov
xchg
inc
cmc
ret
fimul
in
inc
push
mov
xor
jp
inc
popa
rol
pop
in
pop
stc
jl
repnz
dec
adc
fsubr
nop
ins
ss
push
aam
cmp
mov
leave
inc
jecxz
pop
push
and
and
push
add
push
inc
mov
(bad)
cmps
dec
pop
iret
and
int
adc
addr16
fmul
jp
(bad)
rcl
jmp
fisubr
sub
inc
mov
mov
mov
sub
xor
inc
xchg
test
add
and
fldcw
pop
adc
je
stos
mov
test
inc
or
dec
xor
fcom
sahf
xor
rcl
pushf
push
lds
hlt
test
fcom
and
sub
dec
repnz
pop
fs
ds
(bad)
scas
mov
cld
daa
loope
cmp
mov
jmp
call
adc
cld
imul
iret
and
call
dec
rol
sub
mov
jno
pop
jecxz
clc
mov
in
push
inc
jmp
jmp
and
jne
mov
push
rcr
xlat
cmp
inc
pop
neg
call
aam
add
mov
(bad)
clc
sbb
mov
and
adc
xchg
add
retf
(bad)
inc
add
fld
xchg
xchg
fsubr
jg
pushf
sub
outs
sub
pop
add
jg
push
or
jmp
jmp
mov
add
ds
xchg
test
std
jmp
sbb
jnp
mov
inc
mov
cmp
jnp
daa
xchg
inc
test
icebp
push
push
adc
pop
stos
dec
jno
sahf
sub
(bad)
cdq
inc
mov
cs
and
jmp
pusha
push
mov
aaa
out
add
xchg
xchg
xchg
int3
push
pop
mov
pop
jmp
jmp
jo
sub
aas
dec
cmp
fs
or
push
cmps
add
xchg
scas
dec
jae
arpl
push
loope
xor
push
cwde
push
xchg
and
out
mov
dec
pop
das
mov
sub
mov
fcmovnb
out
dec
int3
inc
sub
and
arpl
lahf
je
rcr
loope
mov
fst
fwait
adc
retf
mov
addr16
(bad)
ret
push
cwde
inc
add
mov
pop
pop
jno
pop
fmul
cmps
lds
xor
dec
jne
movs
xchg
jecxz
shl
ror
loope
fiadd
inc
movs
xchg
sbb
addr16
rcr
test
push
jnp
retf
popf
sar
xchg
jnp
aaa
sti
inc
sti
es
push
ftst
mul
pop
xchg
jbe
ds
call
jp
mov
out
imul
lock
add
lock
xchg
dec
int3
add
sub
mov
pop
(bad)
fucomp
sub
add
add
jo
dec
add
jns
or
pop
pusha
in
ret
outs
jnp
xchg
pushf
shr
jnp
dec
ror
jb
inc
sbb
xlat
xchg
mov
jg
adc
xor
sar
jb
imul
and
mov
je
test
movs
arpl
in
pushf
xchg
outs
pusha
dec
test
mov
ss
cmc
sub
shr
shl
lahf
jns
xor
(bad)
into
sub
inc
inc
cmp
mov
(bad)
je
scas
lods
in
test
bound
cmc
cld
pop
dec
or
shr
add
or
ret
xchg
loopne
or
fcom
ins
sub
test
xchg
jmp
mov
lds
out
(bad)
jo
xchg
retf
pop
jle
sti
test
and
pop
test
hlt
inc
mov
jne
hlt
out
loopne
cmp
fsub
std
push
pop
cmps
or
fs
movs
or
enter
pop
cs
cwde
hlt
cld
sub
push
ret
test
and
mov
gs
not
inc
data16
xchg
sub
sub
xchg
fadd
int
add
fdivr
or
call
mov
or
sbb
xor
sbb
fadd
lods
call
popa
and
and
or
sbb
jns
mov
lea
ins
out
pop
mov
retf
pop
and
cld
cmp
outs
inc
fucom
or
scas
mov
xchg
fstp
cmp
jb
xchg
mov
lock
mov
popa
mov
cs
pop
sub
cmps
dec
and
sub
hlt
js
push
aad
in
in
test
or
repz
inc
lds
xor
cs
fst
retf
es
out
aas
inc
mov
pop
sbb
fst
dec
je
fs
xor
adc
or
js
adc
stos
in
shr
jb
addr16
cmc
push
jg
mov
and
fnstsw
les
data16
pop
fild
std
(bad)
mov
lods
(bad)
push
xchg
fisubr
ins
cli
in
mov
dec
pop
sti
or
ins
mov
in
jo
or
lahf
out
jmp
dec
sbb
jne
cs
and
cmp
cmp
(bad)
leave
jbe
dec
(bad)
pusha
jge
xchg
jp
dec
outs
in
popa
les
(bad)
xlat
outs
inc
lds
cmp
inc
mov
ja
push
lock
cdq
cmp
mov
adc
sbb
cmp
xchg
mov
cld
daa
nop
retf
xlat
mov
fld
adc
push
cld
mov
push
pop
mov
in
or
loope
das
es
xchg
sub
mov
mov
sbb
xchg
iret
(bad)
mov
adc
adc
arpl
push
jecxz
test
shl
inc
xchg
xor
sub
adc
fnsave
pop
fisubr
fcom
test
arpl
fcom
jno
sahf
and
sbb
in
pop
jp
or
scas
jbe
or
mov
stc
into
mov
(bad)
cmp
je
lods
push
jno
retf
movs
xchg
cmp
mov
fld
fcmovb
stc
ret
out
scas
dec
hlt
jg
pushf
(bad)
mov
rcl
cs
mov
test
dec
icebp
dec
push
ss
enter
lock
cmc
push
sub
inc
jo
adc
jns
loope
fistp
push
test
sbb
mov
sub
lock
loope
jle
lock
test
adc
(bad)
movs
les
push
aad
cld
dec
cmp
fs
fwait
daa
shl
and
adc
add
fst
jp
mov
int3
and
ja
push
pop
(bad)
sbb
mov
test
leave
loopne
mov
(bad)
jp
sti
xor
aas
dec
lods
pop
jge
adc
pop
fdivr
dec
pop
xor
mov
hlt
cmp
arpl
pop
bound
push
aaa
movs
fs
cmps
fisttp
push
adc
in
repnz
xchg
loopne
xchg
ja
pop
cmp
fs
daa
push
icebp
stos
xor
xchg
jne
mov
or
lods
sbb
adc
retf
icebp
jg
sbb
pop
loope
cli
cmp
or
sti
mov
(bad)
fld
clc
jg
(bad)
sbb
xor
mov
or
xor
js
jo
and
inc
(bad)
dec
cwde
xor
mov
stos
adc
sar
ret
sbb
(bad)
loopne
mov
xor
push
pop
mov
or
mov
pop
jecxz
inc
ss
out
retf
jae
or
imul
stc
and
arpl
cmp
movs
xadd
dec
sub
cmp
aaa
retf
xor
sti
mov
test
ss
push
lds
cdq
inc
pop
popa
fisub
pusha
stos
xlat
mov
mov
mov
scas
data16
cmp
(bad)
push
in
loopne
lahf
lods
jmp
daa
ins
test
adc
xor
fistp
jp
cmps
test
mov
(bad)
mov
mov
out
xchg
mov
ss
outs
xchg
sar
out
cmp
sub
aaa
add
sub
clc
fiadd
push
stos
jo
ret
or
loope
push
outs
inc
stc
int
cmc
adc
or
out
(bad)
sbb
(bad)
adc
gs
hlt
daa
mov
push
dec
(bad)
cmp
cwde
sbb
mov
fucomip
adc
les
and
cmps
and
xchg
test
dec
cmp
mov
test
sar
xor
jns
lea
pop
cmps
sub
or
sbb
inc
jo
mov
and
inc
popf
enter
fwait
movs
and
aad
rol
pop
loop
je
icebp
inc
shl
in
pop
in
jmp
icebp
cmp
xchg
mov
(bad)
scas
dec
aaa
stos
pop
add
ret
sbb
aaa
xor
fxch
fisttp
jae
icebp
jae
xor
cmp
cmp
and
in
pslld
imul
dec
(bad)
out
(bad)
cs
(bad)
arpl
or
fwait
pop
and
add
inc
cld
cli
es
mov
addr16
mov
dec
add
adc
inc
jecxz
scas
lahf
push
jg
push
mov
and
test
jmp
aam
pop
mov
xchg
and
(bad)
aad
imul
aam
add
cmp
mov
arpl
cmc
mov
ins
mov
dec
inc
out
xchg
loop
xor
fmul
push
mov
xor
fldcw
lahf
push
sbb
das
icebp
stos
leave
dec
in
add
jo
cmp
call
in
pop
mov
iret
inc
mov
pop
xchg
or
mov
call
aas
in
xor
xchg
pop
and
scas
retf
mov
dec
cli
orps
ss
mov
pop
mov
cld
jo
jbe
(bad)
in
gs
pextrw
fmulp
or
mov
add
xchg
mov
sub
in
jbe
out
pop
clc
in
js
sahf
ror
rol
mov
mov
test
mov
cmp
jnp
mov
cmp
ins
jecxz
outs
mov
or
adc
ja
loopne
out
inc
cs
push
cmps
imul
(bad)
jmp
add
ret
inc
jmp
mov
out
sub
mov
cmp
ins
push
adc
fs
xchg
inc
mov
pop
xor
sub
sub
fcom
jnp
and
mov
jecxz
sahf
xlat
popa
in
mov
sub
nop
mov
hlt
sbb
xchg
ins
out
jo
sbb
lea
clc
inc
jg
(bad)
mov
test
outs
clc
jno
sbb
fld
sub
push
and
jmp
neg
(bad)
push
call
adc
dec
rcr
pop
cs
mov
popf
mov
bound
push
sub
retf
sub
push
jb
clc
add
xor
cld
bound
mov
data16
inc
pop
jmp
dec
add
fs
cmp
push
sar
xor
stc
hlt
inc
mov
mov
cli
enter
dec
hlt
and
clc
mov
fdivr
push
std
cmc
in
dec
xchg
dec
into
out
jo
and
pop
adc
and
cs
sub
imul
mov
inc
xor
cwde
cmps
mov
adc
mov
cmc
pushf
aad
js
push
cdq
(bad)
push
adc
test
mov
push
or
push
idiv
dec
cmp
mov
push
sub
cld
scas
push
push
dec
pop
in
or
mov
popf
jmp
and
fdivp
test
std
test
jmp
les
adc
dec
fdivr
adc
sbb
enter
mov
adc
ins
lock
push
pop
push
mov
cwde
pop
adc
add
sti
test
das
imul
loope
add
lea
aam
pop
cmc
xchg
and
(bad)
push
loope
mov
or
adc
imul
mov
iret
mov
dec
mov
sub
sti
push
jmp
sub
dec
sub
out
mov
pop
scas
xlat
or
bound
mov
retf
ss
stc
mov
add
out
xchg
ds
js
mov
rcl
cld
andps
pop
gs
in
add
adc
adc
inc
mov
and
les
mov
retf
push
shl
sub
xor
inc
xor
(bad)
cli
jnp
pushf
movs
xor
mov
inc
mov
or
mov
call
and
xor
cmp
inc
jge
imul
ret
jecxz
dec
dec
pop
test
gs
xchg
mov
push
test
out
xchg
mov
daa
movs
adc
int3
dec
(bad)
xor
je
mov
fbstp
out
dec
imul
inc
xchg
xor
cmp
and
jae
dec
cmp
data16
push
xchg
mov
scas
sbb
mov
mov
in
jne
mov
div
push
cmp
shl
xor
dec
std
les
jle
call
sbb
out
sub
(bad)
(bad)
fsubr
and
xchg
adc
mov
int3
jg
xor
dec
hlt
into
clc
or
into
popa
add
jmp
popf
inc
add
sbb
sbb
xchg
aam
std
(bad)
xchg
sahf
test
lock
mov
fsub
ss
adc
xchg
(bad)
sub
xchg
not
push
(bad)
mov
dec
imul
jne
scas
repz
jmp
jp
pop
arpl
fs
xchg
test
call
jnp
jbe
jle
outs
mov
inc
sub
retf
ds
push
push
(bad)
cli
movs
push
test
dec
and
push
pop
das
xor
and
in
arpl
cmp
jno
xor
(bad)
inc
and
add
jle
call
ds
mov
adc
ror
stos
fcmovbe
imul
out
jle
inc
mov
jb
xor
fs
ret
xor
mov
add
inc
loopne
cs
mov
push
test
loope
add
pop
or
sub
pushf
xchg
in
mov
inc
movs
mov
adc
sbb
jg
xor
jmp
or
ror
nop
jne
loope
dec
pop
mov
jbe
push
nop
ja
in
pop
cmp
mov
ds
cmp
sti
movs
sbb
lods
dec
fld
cld
fsub
ror
mov
test
scas
ffreep
enter
cld
sub
xchg
lods
mov
sub
fiadd
xchg
mov
xchg
push
mov
stos
fwait
or
sub
adc
dec
stos
cmps
cmp
fsub
jo
fild
leave
or
loop
sub
inc
pop
pop
nop
xor
(bad)
rcl
iret
clc
jne
test
and
rol
js
xor
mov
or
es
rol
aaa
iret
pop
mov
sysenter
imul
bound
mov
es
pop
add
in
arpl
fisttp
je
inc
inc
int
pop
aas
inc
scas
retf
push
mov
jne
in
test
std
inc
jb
ss
fcomip
add
mov
lods
sbb
push
into
fimul
inc
jb
repnz
push
lods
add
mov
xor
inc
and
mov
fcomp
call
repnz
mov
fsubr
les
fimul
jl
and
jg
test
mov
leave
adc
cmc
xchg
inc
mov
pop
sub
inc
or
call
popf
sub
xchg
xlat
nop
bound
repnz
xchg
imul
add
push
jo
xlat
jp
std
fdivr
push
lods
jb
adc
or
xchg
inc
pop
clc
push
cld
mov
jnp
fisttp
cmps
dec
mov
xchg
popf
ja
inc
adc
xchg
jmp
fcom
mov
(bad)
pop
cmps
mov
retf
xchg
jp
out
arpl
add
push
rcr
scas
push
(bad)
clc
fistp
sbb
in
fwait
test
les
sub
js
pop
lods
aad
in
mov
push
mov
fsubr
and
je
lods
inc
xchg
mov
adc
mov
mov
stos
out
mov
add
in
pop
add
pop
push
test
leave
push
xor
cdq
lahf
neg
mov
mov
dec
mov
and
xor
mov
cwde
xchg
push
xor
mov
loope
ret
test
and
je
fiadd
mov
xchg
cmp
mov
xchg
in
xor
(bad)
pop
xchg
retf
sub
mov
mov
inc
xchg
leave
and
sub
shl
jno
fstp
mov
push
(bad)
jg
mov
add
mov
and
pop
arpl
mov
jl
cmp
adc
call
(bad)
push
sub
lods
sbb
bound
pop
xchg
add
inc
ins
sahf
shr
lock
add
and
scas
(bad)
loope
xor
add
ret
push
out
cmps
or
jp
cmp
xor
shl
push
mov
ins
icebp
push
test
dec
mov
inc
push
and
push
call
enter
out
ins
std
dec
push
in
xchg
xor
scas
xor
push
les
xchg
xor
ficom
in
ret
push
sbb
cmc
push
and
adc
leave
xor
dec
dec
jnp
cmc
jbe
mov
lahf
and
and
mov
jnp
(bad)
mov
inc
scas
repnz
les
sbb
adc
hlt
daa
(bad)
cmc
lahf
or
repnz
xor
repz
(bad)
loopne
iret
cmp
js
retf
stos
mov
ret
adc
inc
repnz
pop
or
pusha
fldz
es
data16
lods
lods
cvtps2pd
(bad)
fs
jno
(bad)
idiv
dec
out
and
loope
inc
cmp
scas
cdq
retf
sub
(bad)
stc
xor
add
pop
xchg
cmps
jmp
or
xor
jg
cmp
mov
mov
int3
push
mov
and
out
dec
cmp
adc
jmp
jb
outs
or
jns
dec
cmps
jg
pop
cmps
mov
fistp
cmp
fsubr
cld
cmps
movs
ror
lods
cld
ds
cmc
jb
clc
outs
aaa
xor
jge
jb
push
clc
cmps
mov
or
push
sbb
fst
jl
cmp
dec
fstp
and
xor
xor
and
shl
xchg
mov
add
xchg
lock
sub
cmc
dec
ror
cld
cmps
xchg
fnsave
xchg
cmp
daa
iret
adc
das
pop
add
fadd
(bad)
(bad)
sbb
or
idiv
jge
sbb
mov
jle
sbb
jmp
in
test
(bad)
cli
imul
sbb
pop
dec
pop
adc
adc
add
jp
mov
dec
jbe
leave
rcl
cld
call
xor
lahf
(bad)
lds
jne
xchg
icebp
ds
push
mov
(bad)
rol
sbb
inc
mov
stos
xchg
pop
push
push
xchg
push
push
mov
xchg
das
lea
retf
push
icebp
sbb
and
sti
ds
mov
lea
ficom
add
imul
rcr
cdq
call
inc
imul
pop
fsubr
int
sbb
push
popf
jbe
inc
outs
les
mov
lahf
loop
push
mov
inc
mov
popa
xor
xchg
jne
pop
dec
mov
push
aas
push
jge
retf
ins
js
pop
imul
pop
mov
xchg
inc
jmp
bsr
shr
inc
leave
arpl
dec
ja
sub
addr16
ds
sub
or
movs
pop
fcomip
imul
bound
xchg
xor
adc
(bad)
bound
fstp
in
jae
(bad)
movs
dec
imul
or
cmps
push
pushf
scas
call
pusha
xchg
xor
mov
mov
into
fs
lock
adc
adc
dec
lods
cdq
bnd
ins
scas
and
shr
cli
push
mov
mov
and
push
test
xlat
inc
jae
add
add
fnstcw
cmp
mov
push
mov
push
xchg
sub
push
movs
outs
icebp
adc
jge
sbb
repz
add
jae
popf
scas
jae
sbb
pop
(bad)
inc
cmps
aaa
rcl
or
into
mov
outs
adc
or
test
sbb
pop
mov
mul
or
stc
adc
mov
xor
(bad)
cld
mov
cmp
cwde
shl
int3
fist
jmp
pop
lods
(bad)
ficom
jbe
add
inc
ins
or
mov
mov
pop
loopne
mov
push
mov
jle
retf
jle
test
pop
ret
inc
sahf
cdq
fstp
repnz
popa
fdiv
add
aaa
call
fs
pusha
aad
out
mov
inc
or
(bad)
pmaddwd
xor
movs
leave
cmps
sbb
xchg
je
pop
xchg
or
xchg
lods
data16
sahf
cs
jnp
and
sub
and
std
pop
(bad)
out
sbb
mov
popf
das
int
fistp
cmp
push
cmp
das
pop
add
cwde
mov
out
call
sub
jae
cmp
daa
jnp
pop
rol
mov
mov
sub
out
dec
es
jg
outs
lds
inc
mov
add
pop
mov
fcmovnb
(bad)
pusha
pop
pop
(bad)
dec
dec
(bad)
xor
nop
fwait
in
jmp
gs
inc
repz
cld
inc
inc
imul
mov
add
cwde
cdq
loopne
cmp
push
es
jbe
outs
lahf
dec
stos
loop
mov
xchg
ja
pusha
dec
lods
mov
mov
sub
mov
in
jo
push
or
ins
dec
int3
sub
stos
mov
push
retf
js
frstor
mov
pop
aam
or
jge
xchg
and
pop
pop
xchg
pusha
icebp
sbb
daa
dec
lds
mov
sbb
cmp
mov
test
imul
movs
inc
jge
(bad)
clc
in
cwde
pusha
mov
sbb
aam
mul
mov
push
mov
jb
and
loop
add
mov
sbb
mov
fidivr
in
xor
mov
aam
in
inc
out
push
repnz
add
jns
pop
mov
das
(bad)
mov
and
call
push
or
(bad)
shr
ror
pusha
les
cdq
inc
cmp
(bad)
cmp
xor
mov
mov
jmp
imul
dec
jmp
xchg
inc
out
cmp
adc
fisubr
and
fisttp
nop
inc
aas
dec
and
movs
pusha
fld
sub
pop
dec
aaa
int
jne
adc
sbb
adc
add
cmps
mov
repz
dec
xor
(bad)
sbb
sbb
cmp
pop
outs
pop
mov
lods
inc
movs
adc
mov
push
nop
sbb
shrd
push
into
inc
pushf
mov
sub
inc
lock
adc
jle
xchg
cmp
bound
jg
icebp
cmovns
and
test
imul
pop
mov
sub
mov
xor
add
sub
mov
xlat
push
inc
in
jo
lahf
icebp
mov
jg
ins
mov
stos
cmp
cli
dec
pop
jl
lock
xlat
ja
fstp
lods
push
das
xchg
in
mov
jo
jl
leave
mov
xor
ins
xor
rcr
std
mov
mov
fadd
cli
cld
dec
adc
add
cmp
mov
enter
mov
in
mov
ss
xchg
pop
movs
gs
shl
fisub
test
mov
dec
sbb
movups
xor
fbstp
dec
mov
adc
pop
movs
adc
mov
cmp
xor
mov
adc
push
pop
inc
cmp
mov
mov
arpl
cmpxchg
sub
jmp
push
not
and
pop
and
cmp
rcr
mov
shr
xchg
pop
jo
adc
test
pop
adc
cs
leave
sub
or
push
test
loopne
ds
pop
push
cmp
dec
addr16
jmp
cmps
sub
sti
or
loope
repz
mov
sbb
pop
mov
ret
mov
inc
xchg
lds
(bad)
lds
pop
lods
sub
fldcw
sar
(bad)
loopne
add
or
inc
inc
push
std
adc
outs
xchg
outs
mov
add
add
and
sub
and
dec
jns
sbb
mov
inc
shl
shl
sbb
lahf
and
add
fild
es
sbb
push
or
mov
mov
enter
xchg
jg
mov
push
gs
das
dec
adc
mov
es
mov
ror
inc
pop
out
xor
sub
outs
cld
and
add
pop
and
call
cmp
sub
add
push
mov
fsub
xor
pop
out
fmul
inc
adc
xchg
pop
sti
mov
cmc
cli
cli
in
jg
movs
and
xchg
bound
mov
test
xchg
(bad)
dec
icebp
jl
and
adc
out
in
sbb
and
xchg
mov
das
repnz
fldz
loope
pop
ins
or
leave
enter
popf
loop
jl
aaa
push
das
cmp
int3
scas
pop
pop
pop
xor
inc
and
loop
call
pop
add
xor
dec
loop
cs
dec
or
sbb
push
xor
mov
mov
retf
nop
pop
lea
push
cmp
movs
adc
jo
inc
lds
jnp
int
ror
cs
call
shl
add
adc
ins
sub
push
sbb
lods
popf
jno
in
and
sub
mov
fadd
movs
jp
xor
cmp
cmp
vpsubq
mov
(bad)
adc
mov
das
mov
jmp
jmp
pusha
call
push
mov
into
jmp
and
daa
jmp
popf
jno
sub
mov
mov
lahf
loope
ret
or
mov
gs
pmuludq
push
aam
mov
shl
ss
mov
shr
call
jae
pusha
(bad)
cli
ror
scas
add
aam
(bad)
(bad)
inc
repz
dec
and
mov
iret
dec
repnz
xor
cli
scas
inc
dec
pop
pushw
mov
ins
popf
mov
mov
pop
hlt
aad
dec
pop
mov
jge
test
ror
push
test
add
pushf
xchg
test
adc
das
jmp
out
js
daa
sbb
xchg
fstp
mov
xor
loopne
cmp
in
dec
mov
xor
inc
add
loopne
and
push
xor
mov
aas
fist
sbb
movs
retf
arpl
xchg
xchg
test
rol
rol
cmp
in
push
jb
pop
xchg
loop
movs
push
xor
xor
mov
call
dec
icebp
retf
mov
mov
into
pop
int3
dec
iret
cmps
pop
mov
sbb
adc
mov
scas
inc
(bad)
mov
lods
jae
cmp
sub
paddsb
xchg
je
das
mov
push
enter
bnd
fisub
fs
pushf
fld
add
mov
int3
push
adc
and
in
jecxz
mov
pushf
sar
inc
pushf
inc
scas
pusha
sti
adc
sahf
das
lahf
xchg
xchg
retf
or
mov
pop
ficom
mov
push
inc
call
pop
sub
dec
mov
(bad)
cld
xor
dec
adc
mov
loope
mov
or
ins
jns
inc
sub
and
int3
or
stos
xor
jno
cmps
movs
in
jg
and
mov
pop
fcom
push
loope
fs
out
mov
add
jecxz
cs
xchg
add
or
aas
ror
sbb
enter
inc
sub
push
sahf
cmp
push
xor
(bad)
idiv
add
push
sub
or
xor
cmp
ins
xchg
popf
push
sbb
retf
into
lds
test
ins
(bad)
rol
jmp
push
jmp
jns
scas
sahf
lods
add
mov
in
jecxz
gs
jl
xor
scas
retf
cmp
add
inc
rcr
jae
into
inc
push
ret
scas
inc
mov
xor
pop
inc
push
cli
iret
mov
jle
push
xor
cdq
data16
pop
mov
cli
scas
or
and
enter
inc
dec
inc
inc
xchg
mov
(bad)
dec
ret
push
icebp
repz
arpl
loop
dec
mov
add
mov
pop
shl
mov
push
dec
mov
(bad)
inc
push
mov
imul
cwde
fistp
dec
retf
retf
pop
adc
jae
adc
inc
dec
mov
xchg
scas
pop
pop
enter
icebp
or
adc
cmp
push
xchg
sub
adc
add
sub
hlt
ds
test
cmps
mov
jbe
sbb
cs
repz
pushf
clc
aad
cmp
(bad)
jmp
or
inc
test
push
out
icebp
lock
jge
loope
sub
or
call
pop
ins
xor
ins
adc
loop
push
lea
adc
sahf
imul
(bad)
into
lea
div
retf
xchg
int3
bound
mov
sbb
push
data16
or
sub
cmp
loope
(bad)
and
jno
and
pop
or
xchg
dec
leave
es
movs
call
fistp
ret
add
adc
cmp
popf
lds
fsubr
(bad)
xchg
mov
pop
xor
fild
ins
add
int3
cmp
pop
cmp
outs
les
call
(bad)
ins
hlt
aaa
or
popa
mov
arpl
test
lock
adc
xchg
pop
push
test
daa
jno
leave
imul
mov
jns
std
inc
repz
mov
inc
mov
ret
loope
(bad)
dec
fwait
mov
dec
dec
cwde
repz
add
pop
leave
test
mov
loopne
cli
inc
mov
pop
dec
dec
inc
lock
movs
mov
cmc
cmp
push
push
enter
sbb
sub
cmp
sub
pop
(bad)
jnp
jg
pop
aaa
sub
jl
jnp
mov
test
cmp
xchg
dec
cmp
fwait
jl
cmps
jbe
or
add
dec
repz
pop
adc
loope
scas
retf
aad
(bad)
movs
imul
popf
int3
mov
ins
hlt
cwde
iret
xchg
das
mov
mov
movs
popa
dec
jns
jecxz
and
cld
xchg
and
xor
cmps
mov
mov
or
sbb
jecxz
xchg
adc
add
sub
mov
mov
int
sahf
push
jle
ror
lods
mov
adc
mov
inc
addr16
ins
and
out
mov
sub
dec
idiv
out
gs
and
pop
or
adc
mov
sbb
or
xor
sub
and
imul
xor
in
ss
inc
in
sahf
xchg
mov
leave
mov
dec
scas
ss
pop
mov
iret
(bad)
push
xor
dec
push
call
xor
or
lods
ror
daa
dec
push
xchg
lods
dec
push
jmp
icebp
lods
sar
jb
dec
mov
aam
ret
mov
or
call
popf
ret
test
sub
sub
sbb
out
jo
xor
xchg
rol
rcl
inc
in
inc
les
mov
fnstenv
rcr
pushf
mov
lods
inc
(bad)
ret
sbb
cmp
adc
mov
mov
jo
cmp
aas
aad
aad
out
xor
(bad)
(bad)
into
scas
push
mov
cdq
je
adc
cmp
(bad)
jmp
push
xchg
cmp
movs
mov
retf
mul
add
inc
ficomp
ror
dec
js
in
mov
in
enter
or
push
sti
enter
jae
aas
sbb
aaa
jg
xor
into
popf
jno
(bad)
arpl
sbb
jnp
outs
repz
outs
cmp
jmp
das
jns
(bad)
mov
xlat
push
ret
add
inc
into
scas
pushf
icebp
and
shr
adc
out
sub
xchg
pop
mov
pop
out
jo
cwde
jb
pop
cmps
pushf
fsub
inc
inc
stos
mov
scas
cld
mov
(bad)
ins
mov
retf
jmp
mov
stos
cs
xchg
and
mov
scas
test
rol
cmp
and
imul
push
stos
scas
les
and
add
cld
fwait
movs
call
pop
lahf
cli
mov
pop
push
adc
mov
mov
adc
cmps
fdivp
fnstsw
jg
fisubr
dec
pushf
ret
sub
sub
add
cmps
cwde
mov
pop
retf
rcr
clc
jnp
and
bt
xchg
ds
(bad)
call
not
mov
add
imul
cmp
sbb
data16
jge
test
loop
jb
and
jle
int
rcl
aad
push
dec
aad
jmp
adc
add
in
and
repnz
ret
dec
add
adc
retf
mov
sbb
cmc
and
mov
into
pop
jmp
xchg
test
std
outs
jecxz
test
sbb
xor
ins
adc
ficomp
ja
in
retf
sub
pop
xchg
mov
iret
cmps
sub
(bad)
shl
push
imul
jg
gs
jmp
xor
int3
push
ins
scas
mov
imul
sbb
scas
cmp
fimul
test
loope
in
xor
cwde
in
lahf
dec
add
pop
mov
sbb
mov
out
xchg
icebp
shr
aam
xchg
out
jmp
push
push
jnp
mul
stos
cmovl
or
ret
call
ss
gs
push
in
or
test
inc
out
pop
sahf
out
dec
jmp
aaa
xor
fidivr
sbb
ds
mov
hlt
pusha
pop
jno
into
arpl
(bad)
enter
inc
jecxz
je
in
nop
into
in
mov
int3
pop
call
es
inc
shr
sbb
sub
enter
dec
adc
cwde
xchg
idiv
cli
add
jmp
mov
inc
dec
cld
rcr
add
xchg
addr16
mov
sbb
cmp
je
sahf
dec
adc
cwde
mov
jmp
add
or
int
dec
je
jne
adc
jno
icebp
dec
cmp
test
pop
and
fs
adc
mov
aad
lock
pop
lds
ins
ret
fcmovbe
jns
sbb
les
cmps
out
cld
aas
in
mov
ret
jbe
ret
push
(bad)
mov
enter
pop
push
pushf
adc
pop
inc
and
int3
mul
ret
mov
xchg
in
das
nop
jp
pop
push
ret
mov
add
mov
pop
outs
xchg
(bad)
and
cdq
je
aad
xor
std
ror
and
inc
loope
sub
imul
mov
jne
popa
adc
inc
cmp
add
xchg
or
add
cmps
xchg
pusha
jbe
push
dec
ss
fimul
pop
sub
ins
aaa
out
in
nop
std
xchg
xchg
test
mov
(bad)
dec
adc
aas
xchg
adc
xor
(bad)
cs
popa
mov
sub
sub
and
cmc
xchg
mov
pop
mov
mov
or
cmps
addr16
mov
mov
pushf
xchg
adc
mov
cs
push
mov
adc
shl
or
jne
mov
mov
add
sbb
mov
out
mov
cmps
cmp
sbb
pop
clc
test
inc
or
pop
rcr
adc
cmps
stos
jle
pushf
xchg
pop
sbb
setbe
and
jno
mov
mov
js
push
fcmovne
jge
and
shr
ds
mov
adc
cmp
cli
cmp
jbe
inc
xor
fldenv
jmp
jo
mov
fisttp
mov
loop
add
mov
sub
mov
daa
iret
out
jo
cdq
cmp
ret
push
imul
or
invd
jl
push
xchg
pop
jbe
adc
jbe
jle
xor
ret
push
xchg
pusha
sti
ret
mov
mov
push
test
xchg
mov
add
xor
loope
xchg
xchg
iret
movs
jb
fidiv
aad
ror
sbb
mov
xor
popa
rcl
mov
icebp
add
pop
in
sbb
into
mov
xor
leave
dec
and
sbb
inc
or
pop
mov
gs
sub
je
lahf
(bad)
xchg
addr16
pop
outs
inc
xor
(bad)
mov
inc
pushf
fisttp
ss
pop
(bad)
repnz
mov
xor
or
rol
push
daa
not
jge
push
add
xchg
mul
and
add
cmc
out
xor
into
pusha
mov
cmp
add
icebp
mov
ror
sub
mov
adc
inc
sahf
inc
inc
(bad)
ficomp
dec
xor
in
xor
mov
push
xor
lods
cld
fimul
sub
sbb
out
sar
inc
fldcw
outs
or
mov
cmp
leave
scas
scas
std
fstp
popa
add
shl
leave
hlt
paddsb
mov
inc
xchg
add
leave
inc
sti
repz
pop
test
xor
(bad)
lock
xchg
push
stos
int
push
(bad)
jno
out
cs
mov
es
sbb
jne
inc
cmp
loop
push
in
aam
rcl
mov
out
add
mov
dec
lods
in
jge
dec
sub
and
or
push
mov
jnp
fs
arpl
cwde
scas
mov
xlat
sub
arpl
and
fwait
add
push
sub
shl
cmc
mov
stc
xor
adc
push
pop
and
rol
test
add
push
out
cmps
mov
pop
xor
sbb
cmp
push
push
inc
arpl
cmp
icebp
jecxz
jne
in
call
mov
into
test
add
mov
mov
out
neg
scas
adc
retf
and
and
mov
adc
adc
pop
sub
inc
(bad)
jle
retf
aaa
xor
sbb
aad
mov
mov
jnp
fsubr
cld
jge
adc
js
fs
ffreep
ins
gs
xchg
sbb
lods
in
add
retf
adc
add
js
push
pop
ins
neg
inc
mov
jo
mov
push
bound
in
call
ja
pop
leave
fisttp
mov
or
xchg
js
adc
stos
mov
rcr
inc
aas
cdq
out
mov
lds
lds
inc
(bad)
sub
push
addr16
push
imul
sub
shl
xchg
loop
iret
mov
iret
dec
retf
cdq
push
cmove
inc
mov
cli
call
stos
push
add
jmp
in
sbb
cs
jne
xor
mov
adc
add
ins
(bad)
retf
xor
imul
mov
mov
fxsave
and
add
je
shl
push
mov
retf
sub
scas
xchg
and
sbb
clc
mov
sub
mov
sub
ret
add
shl
jbe
add
xchg
sbb
out
cmps
jmp
out
test
mov
and
mov
fcom
(bad)
adc
xor
jecxz
mov
cmp
pop
sub
outs
les
(bad)
xor
inc
cs
fild
add
(bad)
fcomp
cs
cmp
dec
leave
loope
hlt
movs
loopne
or
lods
push
ins
jmp
inc
fild
pop
int3
lds
mov
and
add
jp
cmp
mov
cmp
lds
push
cmp
loop
fdivr
mov
dec
dec
cmp
outs
icebp
mov
inc
aaa
fstp
xor
mov
les
pusha
add
arpl
sub
movs
repnz
jmp
cdq
cs
popa
call
jbe
div
icebp
or
scas
lds
mov
in
cdq
les
jbe
clc
cs
xor
imul
cmp
movs
mov
scas
and
cmp
sub
jmp
cs
cdq
sbb
shl
inc
mov
dec
jbe
mov
jmp
inc
adc
popf
and
cvtpi2ps
sub
les
fwait
push
pop
inc
sub
xor
out
ror
aas
nop
(bad)
les
jmp
inc
jg
stos
push
mov
cwde
pop
push
mov
cmps
sti
xchg
popf
pop
push
inc
test
ret
adc
out
add
retf
fwait
std
sub
cmp
sbb
mov
aam
pop
stos
adc
mov
repz
cmp
pop
imul
push
jo
jge
outs
iret
jne
dec
sub
or
ret
sahf
ja
arpl
and
clc
(bad)
iret
mov
loope
xchg
lds
or
std
ins
mov
cmp
or
ret
mov
inc
outs
fcom
inc
adc
mov
cmp
cmc
mov
call
lahf
fs
out
cdq
push
add
pushf
sbb
push
fcomp
sub
inc
daa
push
xchg
retf
pop
shl
mov
sbb
nop
fmul
fisub
je
mov
jbe
test
test
pusha
ret
xor
or
and
sbb
jae
push
push
(bad)
aad
inc
ret
pop
adc
neg
mov
out
jb
and
pop
dec
xor
rol
test
adc
enter
jnp
stc
mov
pop
mov
aad
mov
pop
push
cdq
ror
sahf
pop
mov
dec
cs
inc
(bad)
and
jnp
clc
aaa
aaa
pop
cmp
inc
loope
(bad)
in
push
shr
stc
fs
dec
inc
and
pop
jmp
push
push
add
iret
cmp
test
popf
rcl
add
cmc
push
out
xchg
xchg
stos
and
fisubr
clc
lahf
jmp
mov
imul
arpl
addr16
jl
in
cmp
pop
jecxz
scas
mov
xor
inc
scas
or
add
push
adc
aad
(bad)
cld
mov
out
sti
sub
pop
xchg
fbld
push
mov
xchg
pop
ds
pop
mov
or
xchg
add
push
(bad)
mov
add
mov
sub
pmaddwd
jnp
ds
aaa
test
(bad)
pop
add
hlt
add
pop
es
sbb
add
pop
xchg
lods
and
inc
call
out
add
xchg
xchg
inc
fdivr
mov
call
aas
cmp
out
mov
pop
mov
aam
mov
sbb
jo
cmp
sar
lea
loopne
mov
(bad)
mov
adc
xor
add
das
stos
nop
cwde
add
pop
mov
(bad)
sbb
fisub
mov
fidivr
call
call
addr16
jmp
pop
sbb
dec
das
jmp
call
loopne
gs
rcl
das
lods
push
xor
inc
sub
mov
lock
fcomp
movs
xor
jecxz
sbb
arpl
cmp
cmc
int3
in
data16
repz
xor
shr
fwait
xchg
nop
mov
stos
cmps
shl
jecxz
scas
ins
das
dec
out
cmp
ret
nop
xor
jmp
aaa
jmp
sbb
mov
jno
pop
mov
and
outs
push
xchg
push
mov
xor
(bad)
jl
inc
or
push
inc
xchg
mov
push
stc
shr
cmp
call
xchg
leave
cmps
add
mov
xchg
or
adc
icebp
push
ins
neg
mov
inc
jge
cmp
stc
imul
ins
fsubp
(bad)
cwde
ss
fcomp
sti
mov
adc
jg
lods
pop
retf
or
pop
leave
cmps
ret
jecxz
add
out
stos
shr
jne
out
mov
hlt
cs
fnstsw
nop
add
cld
mov
sbb
push
inc
cmp
aaa
inc
adc
mov
jo
(bad)
sar
test
xchg
sub
out
(bad)
aad
test
pop
add
aam
jae
movs
cmp
dec
inc
jb
(bad)
out
fiadd
cmp
jmp
std
cs
dec
(bad)
mov
push
cmp
or
inc
ja
ins
cmc
xchg
mov
xchg
xor
sbb
lds
adc
xchg
or
(bad)
jns
inc
test
or
cdq
cmp
xchg
sbb
jo
sbb
pop
fld
mov
sbb
icebp
stos
mov
je
jle
into
iret
aas
inc
mov
mov
jl
inc
add
xchg
cmovl
popw
mov
mov
adc
sbb
pop
mov
enter
jns
in
add
mov
mov
lods
xchg
out
aam
mov
ins
loopne
aam
cli
mov
out
stos
jbe
fldenv
xor
imul
and
and
paddusb
pop
stc
mov
jecxz
int3
test
pop
std
pop
mov
xor
js
out
stc
xchg
fadd
bound
aaa
popf
push
cs
pop
mov
shl
fadd
stc
mov
pop
inc
movs
dec
dec
jnp
loop
mov
mov
and
push
(bad)
jae
ret
movs
fst
jmp
cdq
inc
(bad)
jmp
or
loopne
jb
ins
and
cmp
push
xor
adc
or
in
add
sbb
or
sti
jle
or
aad
div
lahf
pop
jno
push
inc
jnp
xlat
movs
pop
cmp
repnz
not
popa
adc
retf
add
mov
imul
lods
sub
add
pop
icebp
fmul
and
push
iret
rol
and
test
jmp
shl
pushf
bound
pushf
jp
inc
test
push
int3
xor
add
daa
jno
shr
mov
lea
maskmovq
mov
sahf
pop
and
mov
inc
inc
adc
and
sti
stos
popf
jo
stc
push
xor
adc
sub
cmp
sub
dec
out
xor
les
xor
cs
dec
addr16
xchg
fdivrp
repz
xchg
xor
jmp
lods
daa
xchg
sbb
adc
jp
jmp
mov
pop
(bad)
cmp
xchg
enter
pop
jnp
fist
inc
sbb
mov
je
movs
push
or
dec
rol
stos
xlat
cmp
jno
mov
js
cmp
jp
inc
push
push
add
rcr
xchg
cmp
add
push
sub
fist
sbb
mov
clc
int3
sbb
loopne
xor
pushf
xchg
repnz
lds
mov
leave
(bad)
adc
out
lods
xor
sahf
add
xchg
sar
adc
jl
ss
add
xchg
mov
xor
ret
cmp
xchg
mov
xchg
cmp
jo
(bad)
jmp
inc
arpl
xchg
dec
inc
sahf
in
sbb
jle
gs
adc
cwde
shr
mov
sti
mov
adc
and
sub
lock
and
mov
cwde
adc
sbb
cmc
pop
push
out
lods
lods
jo
xor
loope
pushf
hlt
das
loopne
xchg
jne
pop
xchg
jp
add
or
mov
sub
dec
sub
or
add
div
sbb
fst
jl
in
popa
adc
movs
dec
ret
push
adc
jmp
movs
xor
xchg
fdiv
mov
jp
jnp
retf
(bad)
in
xchg
inc
hlt
lahf
jmp
add
adc
add
xchg
mov
sar
int3
jno
pop
test
mov
mov
sub
xchg
dec
push
pop
in
call
mov
lods
lods
cmp
je
arpl
sub
js
jb
rcl
dec
mov
or
jge
fsubp
xor
in
mov
xchg
sahf
repnz
in
jp
bound
cmp
sbb
mov
pop
js
xor
mov
cdq
outs
popf
(bad)
sti
fstp
pop
mov
dec
or
jo
std
and
jae
cmps
mov
lods
test
(bad)
fimul
ficomp
fsubr
cmp
(bad)
mov
cld
fs
pop
(bad)
push
jecxz
xchg
imul
cmps
adc
mov
or
popa
add
xchg
mov
mov
lahf
or
fld
xchg
ins
stos
inc
sub
in
inc
jp
fmul
into
inc
scas
sbb
les
aad
adc
adc
and
inc
repnz
rol
jmp
push
rcr
int
dec
push
jns
data16
aam
sub
adc
inc
inc
sti
adc
xor
and
cmp
adc
dec
loop
out
jecxz
data16
dec
or
ins
mov
retf
aaa
and
xor
in
neg
int
clc
popf
leave
stos
push
xchg
mov
pop
ror
cmp
jmp
pop
aam
dec
mov
cdq
not
and
mov
daa
dec
xchg
or
xor
fs
adc
call
mov
push
sti
call
ins
sbb
fwait
daa
aaa
jb
enter
lods
adc
pop
sbb
mov
jl
inc
inc
cmps
(bad)
movs
call
push
mov
mov
inc
xchg
sbb
mov
push
mov
sub
mov
mov
jne
mov
(bad)
std
addr16
and
shl
ss
or
sbb
ret
in
mov
jmp
cmp
in
bound
rol
and
dec
inc
add
inc
xor
xchg
shr
dec
or
mov
(bad)
or
adc
aaa
mov
in
test
mov
retf
cmps
and
fiadd
inc
push
add
jb
jne
test
popa
pusha
(bad)
retf
sbb
inc
stos
mov
sbb
shr
jp
clc
or
pop
shl
call
xlat
sub
mov
pop
push
out
pop
lods
int3
aam
ja
inc
cmp
xchg
stos
loope
jmp
(bad)
push
jo
push
adc
jmp
sub
cmp
pop
mul
test
cld
mov
dec
mov
test
aad
ret
sbb
inc
retf
sbb
cmps
and
dec
cmp
jbe
jg
imul
jo
dec
adc
push
rol
(bad)
sbb
and
inc
aas
jae
pop
and
scas
add
push
lahf
cmp
xor
or
rcl
icebp
leave
pop
xor
or
adc
add
push
and
stc
xchg
inc
pop
and
mov
ret
test
les
fimul
loop
dec
add
repz
push
push
idiv
or
dec
adc
rep
ds
test
adc
xchg
lock
jge
mov
mov
jbe
scas
mov
add
pop
bound
mov
sbb
bound
loop
xor
jnp
add
and
jg
mov
jge
test
cmps
lea
out
jle
mov
pop
or
js
js
jle
sti
jp
cmp
pop
lods
jo
in
xchg
push
mov
outs
icebp
cli
push
dec
sub
mov
sub
push
dec
shl
ins
and
sbb
add
test
test
jnp
pop
push
and
(bad)
sub
retf
push
inc
dec
add
movs
test
cmc
add
push
mov
out
je
or
push
jb
jp
(bad)
lock
cmps
(bad)
jl
sahf
xchg
cli
sahf
daa
inc
mov
clc
hlt
jecxz
aaa
fcmovnbe
sbb
sub
mov
inc
inc
push
jecxz
into
test
daa
mov
add
repz
aad
sbb
fild
adc
and
fwait
int
retf
cdq
xor
fisttp
movs
retf
cmps
push
mov
cdq
ds
xchg
je
ret
clc
push
push
ror
fsubr
adc
js
sub
cmps
jae
jbe
add
pop
sbb
adc
jmp
popa
ror
aaa
jg
stos
out
adc
add
inc
mov
into
jbe
ins
cli
test
fst
xchg
add
add
(bad)
mov
in
xor
ja
xor
mov
in
or
das
fdivr
adc
iret
mov
icebp
adc
imul
loopne
mov
scas
cmp
lock
scas
int
daa
sub
js
xchg
add
pop
fmulp
idiv
repz
ins
sub
and
adc
fldlg2
outs
jl
lock
ficomp
jbe
mov
call
arpl
dec
inc
jae
nop
pop
xor
int
jbe
dec
mov
outs
jge
je
pop
sub
xchg
inc
cmps
in
and
dec
dec
outs
inc
loope
mov
scas
or
cli
enter
popa
call
gs
dec
scas
retf
enter
push
push
call
mov
popf
pop
mov
push
in
scas
adc
add
mov
mov
pop
fimul
xor
std
mov
jl
loopne
ds
icebp
lahf
jne
js
clc
pushf
retf
jne
out
jns
aad
pop
adc
lods
int3
mov
scas
xchg
inc
jne
dec
jecxz
jp
xchg
int
pop
sbb
loope
cmp
leave
lods
inc
adc
cvtps2pi
push
jno
push
push
test
mov
stc
fldcw
sbb
jmp
push
jmp
jo
sbb
adc
inc
jo
(bad)
add
nop
jg
adc
int
lea
lods
cld
dec
cli
retf
gs
inc
loopne
cdq
and
lea
mov
pop
out
push
mov
lock
and
popa
xchg
dec
sub
xchg
push
mov
xchg
rcr
test
dec
sti
loop
imul
inc
movs
loopne
(bad)
call
call
js
dec
push
ins
cdq
add
dec
sbb
cdq
push
xchg
shl
ret
push
lock
scas
aaa
inc
ret
sbb
fsub
mov
out
mov
les
aad
mov
lahf
call
mov
and
repz
es
add
cld
xchg
pop
stos
push
jg
popf
pusha
or
fnstcw
mov
mov
adc
repnz
sub
sbb
push
rcr
cmp
bndstx
cmp
nop
call
dec
jg
(bad)
jle
sti
pop
mov
mov
jle
imul
jno
xchg
cdq
and
loop
adc
test
xchg
and
call
bound
mov
(bad)
lods
xlat
ins
pop
dec
xchg
fist
push
jl
das
pop
xor
in
clc
mov
mov
les
mov
lds
pushf
jo
jecxz
bound
les
out
pop
push
popa
sub
push
push
jp
dec
adc
fidiv
(bad)
es
(bad)
dec
jnp
xchg
push
or
pop
(bad)
and
mov
sub
sub
push
mov
push
(bad)
addr16
stos
sbb
pop
cdq
in
jmp
jecxz
scas
xor
clc
sub
mov
outs
lock
stc
cmps
ins
pop
test
or
aaa
(bad)
(bad)
xor
(bad)
and
xchg
sub
adc
scas
rcr
xchg
sub
(bad)
adc
dec
push
push
jmp
out
sbb
push
lods
mov
int
lock
test
das
ret
sub
and
rcl
dec
lods
or
out
pop
addr16
push
lock
sti
and
cmp
call
xor
ds
jle
fs
popf
and
dec
mov
and
xchg
adc
and
in
jo
cmp
fild
pop
call
imul
fist
jmp
mov
xchg
add
imul
mov
(bad)
sete
pushf
out
std
daa
adc
pop
jle
dec
cld
fistp
cmc
mov
nop
cdq
dec
adc
rcr
xor
mov
cmp
fild
scas
inc
jmp
ja
lock
(bad)
xor
push
xchg
sbb
xchg
mov
popf
das
js
adc
sub
mov
ja
gs
or
ins
sbb
(bad)
and
sub
in
push
and
push
mov
ins
gs
lock
jne
in
das
pop
loopne
sbb
stos
aad
push
fisttp
rcl
xlat
cmp
xor
je
or
aam
(bad)
push
popa
or
loope
test
test
sub
cmp
xchg
sbb
dec
jmp
jmp
lock
jecxz
out
pop
mov
ins
shr
aad
leave
lahf
sub
mov
and
retf
dec
fs
xor
arpl
or
loope
cmp
inc
or
mov
enter
mov
bound
xor
addr16
pop
xor
adc
push
popf
sub
repnz
push
mov
xchg
inc
mov
mov
fstp
in
add
jmp
pop
add
mov
fsub
mov
inc
sub
int3
jno
cmp
lods
out
retf
mov
mov
into
inc
sub
jmp
fdivr
mov
fisubr
push
push
es
(bad)
mov
mov
pusha
dec
pushf
sbb
mov
out
pop
int3
push
test
std
cdq
or
add
lods
icebp
lods
loop
mov
dec
add
jno
xchg
stos
inc
hlt
sbb
inc
sub
int
pop
scas
ins
push
fimul
jns
mov
xor
arpl
or
jl
adc
sbb
and
add
inc
pop
daa
lock
out
fs
loop
sbb
mov
pop
jmp
rcr
shr
(bad)
scas
popa
xchg
inc
stos
sbb
jecxz
xchg
sar
sub
adc
cmc
or
(bad)
sbb
stos
xor
fld
mov
test
pop
push
push
mov
loope
xor
movs
xchg
xchg
mov
out
outs
in
cmp
ret
dec
inc
js
or
push
dec
(bad)
add
mov
outs
ror
jp
xchg
jp
and
mov
lock
jo
sub
dec
xor
push
ds
mov
daa
add
mov
aam
ds
inc
(bad)
loopne
nop
inc
cmp
sub
and
and
mov
stos
nop
mov
imul
lahf
retf
mov
lea
bound
popf
adc
and
xchg
pop
out
add
sub
sub
sahf
clc
add
adc
fwait
aaa
adc
inc
test
mov
adc
mov
dec
push
fimul
pop
dec
int3
test
stos
addr16
adc
inc
pop
xchg
or
cdq
fwait
repz
mov
pop
mov
lds
pop
xor
bound
mov
cmp
les
fisub
mov
cmovnp
adc
(bad)
rcl
stos
dec
cmp
push
push
pop
(bad)
xor
lea
jp
xchg
ret
sti
xlat
sbb
fiadd
test
mov
lds
fstp
mov
inc
adc
sub
es
mov
ins
dec
cdq
dec
and
cmc
and
and
lock
lea
aam
sbb
out
sbb
add
pop
pop
sbb
cmp
push
mov
shl
icebp
div
pop
xchg
pop
add
jg
and
cmp
sbb
test
jbe
dec
out
retf
dec
sbb
loope
or
in
arpl
stos
scas
push
imul
xchg
mov
fsub
inc
scas
xchg
fnstcw
stos
jmp
mov
scas
push
pop
inc
push
out
jns
fild
loop
or
lods
or
aam
retf
pusha
aaa
jns
rol
(bad)
sbb
xchg
(bad)
inc
xor
dec
aam
test
inc
cmp
mov
fmul
xchg
fnstenv
arpl
add
shl
sahf
int
xor
pusha
mov
int3
add
bound
xor
rcl
fild
mov
shr
sub
adc
push
xchg
pop
jmp
in
add
or
mov
mov
cmc
fldcw
mov
push
rcr
xlat
mov
outs
pop
sub
push
mov
or
adc
dec
inc
call
jae
imul
cmps
jmp
outs
bound
cmp
push
stos
jmp
movs
adc
fsub
mov
lahf
sub
add
jae
retf
sahf
les
pop
movs
aas
dec
test
stc
lahf
jmp
push
xchg
mov
mov
dec
in
inc
xor
pop
cdq
xor
jp
and
push
mov
dec
jge
adc
sbb
icebp
cmp
jnp
xchg
mov
and
ss
jl
call
(bad)
push
cli
xchg
jo
add
loopne
push
sbb
cdq
push
xor
scas
test
lds
test
cmp
lods
ins
inc
dec
cs
cmp
cmps
mov
call
adc
mov
xchg
outs
pop
out
mov
in
xor
xlat
sar
xchg
jae
cmp
in
add
cmp
lock
mov
pop
rol
mov
into
push
hlt
push
xchg
adc
bound
adc
jle
jnp
retf
push
retf
out
adc
cmp
push
scas
ret
xlat
or
clc
mov
mov
xchg
and
and
jl
xor
outs
stos
adc
loope
fcomp
test
or
dec
xchg
inc
adc
pop
sbb
in
mov
and
sub
mov
cmp
fbstp
cmps
push
sti
mov
sbb
cmp
fwait
stc
sbb
push
into
pop
adc
jns
sub
sahf
cmp
leave
cmp
xlat
test
add
mov
in
jns
syscall
pop
sub
fstp
shl
mov
sub
and
xlat
xor
bound
cmps
mov
xlat
or
mov
iret
inc
popf
add
sub
cmp
(bad)
hlt
jb
push
cmp
xor
mov
les
adc
icebp
imul
mov
mov
push
movs
rcl
xchg
lea
aaa
inc
movs
cmps
push
arpl
mov
popf
fimul
ds
xor
out
adc
mov
enter
push
les
inc
jmp
mov
aam
daa
mov
mov
push
xchg
and
ret
fs
shl
mov
out
push
pop
test
push
pop
lods
push
or
add
stc
in
mov
scas
ss
push
push
movs
jmp
sub
inc
arpl
and
out
xor
or
ja
cs
fiadd
nop
mul
push
icebp
push
orps
fdiv
jb
ffree
fwait
jge
(bad)
mov
inc
frstor
sub
pop
loopne
fst
push
xor
and
mov
outs
cmps
dec
push
pop
push
nop
cmp
push
popf
mov
mov
push
pop
outs
mov
lods
mov
mov
sti
inc
pop
std
in
repnz
jae
outs
pushf
push
popf
out
nop
mov
jns
lock
push
mov
add
add
sub
pop
fisub
daa
and
loop
fwait
pop
pop
test
mov
arpl
cmp
enter
mov
test
add
xchg
cmps
pop
jb
clc
add
icebp
mov
xor
sub
add
movs
pop
sbb
mov
or
pop
mov
add
mov
stos
fisub
cdq
cld
test
xchg
(bad)
xchg
fiadd
mov
mov
push
inc
cmp
pop
pop
sbb
nop
std
repz
cli
push
pusha
lods
dec
inc
(bad)
jg
(bad)
ficom
aam
retf
cmp
loope
add
mov
ror
into
pop
inc
inc
and
in
stos
jae
imul
xchg
fnstenv
daa
lds
out
cmp
enter
call
jl
popa
sub
or
rol
pushf
inc
sbb
out
lahf
sahf
push
push
jbe
push
imul
mov
jmp
xchg
mov
in
xchg
out
dec
mov
stos
lea
and
(bad)
mov
retf
xchg
retf
and
aad
mov
stos
cld
mov
xor
inc
sti
and
mov
movs
fwait
pushf
call
out
adc
and
or
push
dec
push
mov
(bad)
jmp
enter
inc
pop
push
dec
dec
or
int3
mov
xchg
shl
retf
outs
test
push
icebp
jp
jge
xchg
inc
pusha
data16
mov
or
mov
arpl
ja
pusha
or
(bad)
aad
or
inc
stos
jle
mov
jb
dec
hlt
rcr
mov
retf
pop
(bad)
cmp
sub
std
adc
jns
jmp
sbb
popf
into
or
test
out
fbld
jnp
stos
fisttp
xchg
mov
sbb
mov
mov
push
out
xchg
rcl
pop
leave
dec
mov
movs
adc
push
add
loopne
or
enter
ss
scas
call
cld
mov
out
sub
hlt
dec
cmp
jge
ins
sub
outs
mov
test
sub
sbb
and
mov
or
cwde
cmp
jb
mov
aad
sti
mov
dec
dec
xor
ja
push
shl
(bad)
jae
mov
inc
shl
and
mov
adc
adc
call
lods
aas
dec
rol
test
mov
cmps
pop
push
xchg
xchg
fdivrp
ret
sbb
dec
mov
push
ret
jg
out
pop
ret
pop
test
sahf
retf
ja
ss
lock
cmp
jl
inc
mov
ins
push
push
into
add
pminsw
test
in
mov
jno
ret
xchg
pcmpeqd
call
xor
jmp
stc
(bad)
and
sbb
sahf
cmp
push
adc
mov
dec
test
mov
jb
add
inc
(bad)
std
cmc
int
mov
fsub
test
(bad)
cmp
movs
push
dec
mov
jg
sub
fucom
adc
or
inc
xchg
sar
aaa
jl
imul
iret
ds
inc
ins
shl
xor
adc
cwde
addr16
shl
mul
add
jns
scas
xchg
add
jb
cmp
mov
ret
cmp
clc
and
(bad)
(bad)
movs
inc
nop
mov
mov
or
xchg
pushf
push
mov
mov
ffreep
pusha
cmp
loopne
sub
mov
lods
or
mov
push
(bad)
sahf
jne
or
jmp
(bad)
mov
scas
and
mov
mov
push
pop
dec
nop
sbb
push
repz
dec
cwde
or
scas
xchg
js
add
cmps
sbb
shl
push
pop
push
jg
mov
and
nop
xchg
cmps
pop
cwde
data16
retf
push
lock
(bad)
cld
sub
mov
mov
retf
jbe
pusha
mov
mov
mov
or
popa
arpl
and
psubsb
fimul
mov
cmp
dec
pop
cld
cmp
loop
in
adc
into
pop
ret
sar
ja
or
mov
mov
xor
mov
gs
push
outs
add
sbb
ret
out
sbb
sub
sar
retf
xor
xor
test
jno
cmp
mov
scas
pop
(bad)
cld
sbb
cwde
out
and
mov
aas
pop
in
push
das
push
xor
sub
dec
dec
xor
jo
bound
dec
mov
sub
int
test
add
cmps
xor
fs
je
sub
fmul
and
das
call
imul
movs
jg
inc
xchg
jne
js
mov
xor
mov
xchg
xor
les
out
jge
in
push
dec
imul
add
adc
cmp
lods
inc
and
push
(bad)
or
stos
addr16
arpl
add
dec
sbb
rcr
xor
jo
mov
mov
xor
ss
repz
sub
xor
retf
mov
lods
sbb
test
imul
sbb
pop
inc
icebp
jae
jmp
sub
mov
add
(bad)
loope
push
push
loope
mov
pop
in
sbb
and
aam
sar
xchg
sahf
movs
lea
or
sti
mov
mov
sbb
push
add
lea
outs
pop
mov
aaa
pusha
push
and
repnz
mov
mov
pop
add
dec
xor
test
inc
and
adc
cmps
(bad)
adc
sti
loopne
push
pop
outs
cdq
and
mov
jecxz
in
ror
(bad)
fwait
jle
ret
push
jmp
inc
retf
in
pop
sti
sbb
push
fwait
cmc
fldcw
das
lds
arpl
mov
inc
or
sub
adc
lods
cmp
xor
mov
and
pop
loopne
pop
clc
mov
repz
pop
mov
in
jg
sahf
mov
or
iret
cld
xchg
into
push
pop
cmc
jl
out
xlat
ja
push
inc
mov
dec
gs
movs
jecxz
add
repnz
call
sub
dec
inc
push
(bad)
or
or
push
jl
retf
lds
sbb
rcl
aas
loope
cmp
rep
cmp
jg
mov
fs
mov
jae
aam
cmp
int3
cdq
call
cmc
in
dec
cs
arpl
sub
push
fcom
dec
cmp
xchg
pop
test
and
ror
retf
ja
pop
mov
pushf
mov
push
cmps
leave
mov
push
mov
sub
jae
dec
mov
imul
jmp
in
dec
and
(bad)
inc
not
jb
push
stos
push
sbb
mov
jg
push
mov
sub
adc
mov
ss
pop
stc
push
out
es
sbb
je
dec
lds
or
not
bts
push
sub
in
mov
add
ficom
add
fs
push
ret
arpl
in
push
retf
xchg
jne
test
fidivr
and
data16
test
imul
add
aas
and
push
mov
cld
bound
(bad)
leave
sub
out
leave
in
adc
fcom
test
cmps
out
cld
mov
add
push
mov
out
mov
jo
lahf
xor
and
in
and
dec
loop
(bad)
stos
adc
lods
out
mov
imul
dec
jne
js
bound
pop
jmp
push
fucomi
dec
in
movs
fnstsw
sar
movs
xor
inc
mov
scas
inc
ror
mov
dec
or
jns
add
stos
cmps
adc
cli
xchg
aad
push
cld
fidivr
adc
push
aam
sahf
jp
cmps
neg
imul
or
in
pop
jle
lock
dec
cmc
ficomp
inc
imul
js
cmp
xchg
sub
or
cmp
sbb
sub
mov
scas
movs
pop
push
jle
idiv
adc
shr
jbe
call
xor
fistp
test
popf
dec
loop
push
adc
ins
xor
les
cmp
lock
xor
ins
cmp
xchg
(bad)
pop
cli
icebp
je
fld
mov
lods
imul
lahf
fdivp
mov
ret
call
mov
and
hlt
push
pop
mov
jns
mov
pop
repz
sbb
(bad)
loopne
gs
inc
into
mov
xchg
xor
cmps
sub
scas
scas
xchg
jmp
aaa
clc
jmp
mov
ins
push
mov
jmp
dec
ss
push
in
outs
mov
add
xor
(bad)
rcr
bound
pop
xor
and
xchg
push
xor
cmps
xor
cs
bnd
cmp
cdq
pop
mov
nop
mov
test
rol
push
out
fist
mov
fwait
retf
or
cmp
push
mov
arpl
push
push
addr16
jne
mov
sbb
(bad)
sbb
add
sub
and
dec
push
cmp
ins
jmp
inc
ret
xchg
and
sub
xlat
cld
mov
inc
int3
cmp
push
scas
mov
ficom
(bad)
cmp
bound
mov
pop
sub
dec
dec
rcl
and
pop
bound
pop
add
es
(bad)
and
aas
mov
fwait
fs
popf
in
lock
lock
movs
cmc
dec
fst
jmp
jecxz
push
and
out
int3
add
mov
lods
mov
bound
pop
jno
or
in
xchg
jg
push
xchg
(bad)
lock
mov
push
jne
sahf
push
das
daa
adc
ins
xor
mov
clc
cmps
(bad)
push
dec
std
mov
rcr
mov
arpl
xchg
push
pusha
jnp
add
ret
fdivr
and
push
pop
cmp
jne
lods
ret
lgs
fdivr
bound
or
sbb
jae
sar
mov
push
test
(bad)
psubd
adc
add
inc
or
fadd
or
mov
push
shl
jne
lahf
add
mov
jbe
push
jl
addr16
int3
pop
adc
jbe
dec
in
mov
mov
out
jmp
and
jmp
stos
add
mov
sbb
xor
and
adc
addr16
jae
fcom
int3
push
shr
pop
cmp
fwait
push
pop
inc
adc
inc
loopne
cwde
ret
neg
xrelease
xchg
dec
cmp
cwde
scas
aad
pop
pop
xchg
cmp
in
lock
add
sahf
sub
(bad)
jecxz
cmp
(bad)
leave
and
dec
ja
push
add
outs
mov
inc
loopne
pop
int3
inc
movs
adc
mov
push
inc
cmp
add
aaa
(bad)
xor
adc
mov
scas
arpl
sti
retf
adc
push
bound
lods
mov
stos
xchg
in
dec
lods
push
mov
xchg
pop
movs
push
(bad)
neg
mov
lahf
ss
jp
cmps
xor
jecxz
pop
add
pop
test
mov
or
add
repz
fistp
icebp
fwait
int
addr16
mov
shl
daa
aas
outs
xor
push
add
sti
jecxz
popf
pop
cmp
push
push
pusha
test
fisttp
cmp
mov
xor
dec
call
push
fs
push
ja
mov
rcr
xchg
stos
pop
sti
inc
push
in
in
mov
xchg
movs
xor
scas
add
sub
retf
and
and
jge
das
lds
movs
rol
jge
neg
jge
neg
jno
inc
lods
std
lock
test
cmp
fwait
(bad)
daa
adc
les
mov
mov
arpl
test
jne
stc
imul
mov
cli
xor
fdivr
mov
jbe
inc
and
xchg
xchg
mov
int
dec
add
sahf
add
hlt
movs
and
xor
mov
bound
scas
inc
pop
push
sbb
or
lahf
shr
fisubr
pop
add
pop
or
and
jl
xchg
jg
mov
or
jns
dec
cs
call
add
lods
inc
shl
addr16
ja
(bad)
mov
dec
ret
popf
inc
out
ret
xor
daa
jecxz
adc
pop
loope
adc
test
dec
loopne
and
ins
fdivr
cwde
cs
je
add
dec
ins
sbb
jno
xor
sub
enter
inc
mov
sbb
sub
mov
push
inc
pushf
bound
jmp
ja
inc
stos
cmp
aas
out
fs
pop
in
call
jl
sub
pop
mov
push
fistp
ja
hlt
jmp
or
and
adc
aam
jne
lods
stc
out
fwait
movs
cld
enter
cmp
ins
fidivr
mov
ins
in
jmp
and
neg
push
sub
cwde
sahf
cld
push
ins
mov
push
cmp
and
(bad)
aas
fistp
stos
aaa
rcr
sub
popf
inc
push
sbb
mov
imul
xchg
xor
mov
in
and
das
push
push
mov
inc
xor
adc
loope
push
xchg
out
repnz
mov
call
adc
and
cdq
mov
mov
aaa
sahf
mov
fild
add
es
cwde
sbb
and
shl
ret
mov
dec
jb
enter
pop
xchg
jno
gs
cmp
mov
les
fisubr
jae
enter
dec
mov
mov
bound
test
and
adc
enter
loopne
jae
scas
lea
xor
xor
aaa
jmp
xchg
enter
inc
call
mov
shl
into
jmpw
lahf
aad
(bad)
repnz
xchg
shl
add
aas
dec
dec
ds
jb
dec
add
call
repz
mov
jb
or
fidivr
in
loope
scas
adc
ins
mov
js
and
div
or
inc
retf
cmp
push
jae
movs
xchg
lea
jae
lock
cmovae
fstp
jo
cs
mov
cli
pusha
cmp
jmp
mov
adc
push
sub
mov
lods
or
es
pop
jo
xor
jg
in
in
loopne
in
sbb
and
sar
jle
lock
in
stos
ds
or
jge
nop
mov
or
mov
or
jnp
mov
stos
sbb
mov
xlat
jge
add
sub
clc
mov
popf
adc
dec
adc
clc
movs
cli
jo
fdivr
pushf
pushf
retf
fs
xchg
mov
std
add
in
add
ds
mov
retf
pop
and
ins
inc
adc
push
add
es
test
icebp
jmp
cli
nop
ds
fsubr
sbb
and
in
jbe
hlt
sbb
es
mov
pushf
test
pop
jb
mov
inc
je
xchg
push
ds
cdq
ja
mov
cmc
shl
mov
aas
dec
sub
mov
rcl
gs
call
xchg
xchg
cs
xchg
adc
imul
cmp
jb
rcl
or
jg
sti
xchg
call
adc
pop
push
cli
pop
adc
outs
adc
mov
mov
rcl
push
cmp
inc
out
add
popf
or
popa
jnp
iret
dec
outs
xor
lods
dec
jne
loopne
fistp
cli
add
lahf
cmp
adc
repz
jle
push
cmp
scas
xor
xor
dec
ins
nop
fbstp
test
sbb
jns
pop
jne
fistp
out
xor
mov
xchg
xor
dec
or
push
xchg
cmp
movs
lock
enter
cmp
test
pop
add
ret
fidivr
cmp
cli
jg
lock
adc
pop
fist
cmp
pop
stos
push
and
call
out
dec
push
rcr
adc
jmp
loop
fistp
xchg
pop
daa
pop
fadd
push
fs
inc
or
mov
cdq
cmp
xchg
(bad)
cs
fisub
call
cmp
mov
cli
push
int
cmp
push
shl
les
and
fbld
mov
jo
adc
mov
dec
adc
lods
mov
arpl
pop
cli
fmul
and
cmp
daa
pop
xchg
or
pop
pop
in
ret
sub
xchg
sub
sub
mov
pop
dec
test
fld
mov
out
mov
sub
call
sbb
std
cli
push
loopne
cmps
pop
sbb
dec
add
adc
inc
ror
sbb
add
sbb
ficom
imul
xchg
aas
push
mov
pop
fld
in
xchg
sub
jecxz
popf
cmps
dec
stos
mov
jo
int
cmp
or
outs
dec
jge
pop
ss
add
push
imul
mov
pop
dec
repz
ds
(bad)
pop
sbb
sbb
jg
ret
push
shl
mov
shr
fsub
sahf
aas
lahf
and
dec
aaa
mov
imul
cmc
push
in
nop
dec
enter
add
mov
imul
mov
movs
or
push
add
jmp
lea
(bad)
rol
loopne
sbb
inc
lahf
cs
add
add
xor
adc
je
sbb
das
lahf
nop
ret
pop
adc
fdiv
bnd
xchg
das
js
mov
push
dec
ret
shl
rcl
out
xchg
sar
hlt
sbb
int3
pop
shl
xor
loope
ja
pusha
mov
in
xchg
or
dec
in
xor
pop
jbe
(bad)
push
inc
adc
sar
mov
int3
loopne
loop
into
mov
je
dec
ss
mov
enter
shl
jo
add
push
mov
xor
popa
fist
pop
mov
mov
or
sbb
in
ror
or
fld
adc
jge
jmp
jmp
mov
xchg
call
adc
push
pop
push
inc
cli
mov
ds
pop
pop
xor
inc
test
scas
cmp
pop
pop
xor
loop
push
jae
fwait
test
in
mov
in
push
jb
test
ret
adc
lods
push
or
test
pop
cmp
std
pop
jno
mov
fdiv
aam
loope
dec
stc
mov
stc
pop
sbb
les
addr16
gs
adc
jecxz
(bad)
dec
nop
or
outs
neg
inc
adc
test
sub
push
stc
leave
xchg
add
or
sbb
setae
ror
jns
or
cld
cmp
jns
mov
mov
dec
out
or
shr
mov
ins
shl
mov
sub
xchg
xchg
sbb
pop
push
ins
ret
jmp
lock
inc
and
adc
pop
int
xor
ror
mov
sbb
pop
lahf
pushf
sbb
retf
stc
inc
sar
xchg
in
xchg
lods
adc
pop
dec
cmp
retf
push
test
inc
mov
cmp
push
xor
rcr
test
mov
fcom
sbb
jne
dec
aas
sbb
(bad)
ds
pushf
retf
sub
outs
pop
xor
into
lods
mov
movs
sbb
pop
loop
cmp
shl
push
(bad)
adc
mov
pop
xchg
and
dec
fsubr
mov
fwait
aaa
mov
add
adc
ins
and
cmp
add
pop
pop
push
pop
fisttp
cmps
adc
dec
xor
inc
sub
imul
pusha
sbb
jmp
mov
push
and
nop
sub
fisub
mov
mov
neg
stos
jmp
les
jmp
fpatan
aaa
jne
mov
pop
mov
pop
ds
cmp
cmp
loopne
sub
cmp
dec
sahf
dec
jo
mov
push
adc
sub
xchg
or
stc
mov
jne
dec
mov
test
dec
jg
ret
mov
jbe
mov
movs
cmps
add
pop
xchg
fdiv
ds
jg
sbb
call
ret
or
fmul
cmp
sbb
push
test
sub
push
std
std
gs
rcl
xor
pop
sar
aam
mov
test
push
scas
aad
dec
in
sar
and
sub
push
imul
stc
rol
push
(bad)
push
jo
dec
leave
repz
out
mov
mov
leave
mov
retf
mov
cwde
retf
call
push
addr16
adc
sub
neg
mov
xchg
push
enter
into
out
pop
and
cmp
xchg
pusha
les
jge
retf
inc
add
sahf
pop
mov
jmp
in
pusha
cmp
aas
add
repnz
loop
icebp
mov
dec
push
sbb
loopne
in
pop
out
push
cmp
ja
shl
mov
mov
movs
hlt
jmp
outs
dec
scas
mov
jbe
push
jmp
pop
lods
cmp
and
jl
popf
std
xlat
repnz
aad
push
cs
cli
cmps
sbb
cmp
xchg
push
sbb
in
adc
pop
rcr
pop
popa
pop
(bad)
sbb
nop
fbstp
cmp
sbb
and
ret
popa
push
dec
jp
cmp
jp
js
(bad)
mov
dec
jbe
push
leave
out
add
xchg
or
pop
sub
call
pusha
call
sbb
pushf
push
jbe
mov
jno
or
pop
ror
pushf
std
jae
ret
pop
cmps
mov
aam
and
adc
xchg
cmp
movs
pop
aas
cli
add
xor
sub
ret
movs
dec
stc
sti
xor
lock
xor
fst
and
fwait
lods
rcr
inc
sub
dec
jl
lock
inc
scas
fmul
adc
inc
sub
into
dec
cli
dec
loop
fidivr
js
mov
mov
movs
nop
cmp
into
mov
inc
les
push
pop
pop
into
adc
in
dec
pop
sar
mov
sub
sub
xchg
popa
cmps
push
(bad)
or
pop
jnp
repz
pop
mov
dec
loop
mov
arpl
lds
rcr
dec
and
xchg
mov
cld
inc
retf
add
dec
inc
leave
push
mov
std
inc
inc
push
hlt
dec
add
test
je
mov
dec
xchg
rcr
xor
ret
jmp
mov
retf
cmp
mov
call
stc
and
fadd
pop
inc
dec
adc
rcr
aam
pop
mov
test
xor
and
test
imul
movs
xor
sub
gs
sbb
cmp
xchg
and
mov
imul
fild
and
adc
jmp
jae
lock
sub
and
pop
jne
add
(bad)
in
or
pop
mov
dec
das
or
pop
pop
jns
push
adc
movs
fistp
adc
cmp
xchg
cmp
push
push
in
pop
(bad)
mov
enter
loope
retf
stos
mov
in
pop
loopne
cmp
mov
test
xchg
inc
push
pop
(bad)
or
aad
hlt
add
fidiv
or
repz
xchg
in
add
push
out
loopne
(bad)
mov
cmp
fimul
pop
aam
aad
add
and
push
dec
sahf
in
ret
and
sbb
loop
int
jmp
push
push
dec
push
(bad)
leave
loopne
pop
and
cmp
inc
test
jmp
(bad)
fs
inc
lock
imul
mov
and
(bad)
cmps
adc
xor
cwde
jns
leave
ret
cld
jecxz
jo
xchg
mov
sub
pop
jl
xor
int
ins
push
rcr
dec
popf
outs
shl
mov
aam
inc
mov
mov
adc
test
mov
outs
shl
and
pop
cmp
dec
cwde
sub
jge
mov
pop
pop
inc
mov
jl
cli
test
pop
cwde
lods
pop
sbb
in
jmp
aad
inc
push
jns
mov
(bad)
dec
xor
fdiv
and
inc
cmp
imul
push
mov
mov
stos
mov
and
mov
ret
push
outs
dec
nop
push
fstp
test
int
stc
jge
sbb
xor
icebp
imul
loop
ja
xor
popf
pop
jmp
push
popa
cmp
inc
hlt
imul
ret
and
sar
ins
mov
out
push
and
icebp
repz
and
sbb
xchg
arpl
pusha
cmp
loop
test
and
cs
loop
mov
adc
jl
cmp
mov
add
mov
iret
inc
cmp
movs
aad
sub
stos
and
jnp
shr
mov
cmps
sbb
pop
mov
test
cld
inc
test
inc
lahf
cmp
fcom
es
sar
ret
jno
pop
pop
std
leave
jo
xchg
lahf
sbb
inc
enter
in
fdiv
inc
int
fmul
jne
dec
movs
nop
mov
scas
arpl
mov
call
lods
out
sub
std
xor
in
mov
ins
cmp
adc
mov
or
mov
jecxz
fist
xlat
inc
adc
and
jg
pop
pop
call
je
scas
or
jecxz
popa
dec
sub
fst
fwait
sbb
fdivr
bound
and
popf
out
retf
inc
rcl
inc
dec
fs
mov
lods
aaa
and
js
mov
repnz
dec
xor
fwait
mov
enter
cmp
dec
push
mov
push
das
mov
inc
add
mov
xchg
mul
sbb
mov
std
retf
or
pop
mov
out
fld
int3
repnz
pop
adc
mov
stc
dec
les
sbb
(bad)
(bad)
stos
dec
imul
inc
push
jp
inc
mov
scas
stos
and
jnp
shl
movs
inc
inc
aaa
(bad)
pop
pop
mov
out
lahf
sub
leave
lahf
sub
js
ret
dec
sub
int
dec
ins
or
push
lea
mov
cdq
repz
xlat
push
and
push
sub
repz
ins
pusha
pop
jmp
call
jp
in
ins
stc
adc
clc
ror
jb
(bad)
cmp
clc
out
stos
(bad)
retf
push
(bad)
std
out
jg
mov
and
sbb
retf
fcmovb
push
test
adc
mov
loop
ins
or
jnp
test
inc
inc
xchg
cmps
mov
sahf
fisub
addr16
repz
add
sar
popa
add
fistp
cwde
idiv
jo
add
mov
adc
ins
cmps
xor
fidivr
pop
adc
loope
leave
cmp
rol
not
movs
pushf
xor
xchg
stos
cmp
shl
call
sub
pop
mov
cwde
push
inc
stos
sti
call
xor
or
xor
mov
inc
mov
seta
call
test
and
outs
mov
popa
jns
cmp
push
pcmpeqw
mov
(bad)
out
pop
or
sbb
mov
push
push
adc
and
xor
push
jne
and
sbb
adc
jns
cmp
pop
push
cmp
mov
fiadd
add
sub
dec
test
cli
cmp
daa
rol
adc
clc
dec
call
dec
scas
sub
mov
hlt
xlat
and
sbb
cmp
jnp
inc
and
int
jbe
in
bound
adc
mov
mov
cmc
aad
(bad)
shl
ror
(bad)
xchg
pop
loope
push
dec
cld
and
movs
out
das
aaa
add
not
lock
into
mov
scas
or
and
(bad)
and
mov
mov
adc
adc
call
cmp
and
push
push
jae
push
add
fst
out
in
mov
cld
std
xchg
ds
cmps
jmp
mov
gs
sbb
sbb
sub
mov
ja
cs
cmc
sar
daa
or
in
adc
outs
xchg
pop
idiv
ins
or
xlat
loope
ds
xchg
mov
retf
icebp
cs
lods
jmp
mov
out
pop
or
inc
icebp
push
mov
pusha
sahf
lea
jno
in
add
(bad)
adc
cmc
cs
fild
data16
dec
std
inc
sti
fcmovbe
xchg
push
ds
fiadd
stc
ins
inc
fiadd
mov
iret
mov
aaa
inc
and
shl
push
je
popf
push
inc
xchg
xchg
imul
push
sbb
xchg
sub
cmp
dec
ja
add
cmp
das
fwait
jl
dec
mov
sbb
xchg
sbb
cld
or
nop
dec
inc
outs
mov
add
add
std
enter
ja
in
add
xchg
cmc
lock
scas
sbb
sbb
repz
sub
dec
adc
cmp
xchg
cmps
popa
push
adc
jb
div
pop
(bad)
push
test
or
mov
cdq
div
sbb
mov
loopne
call
cmp
xor
lea
loope
mov
mov
pop
retf
mov
or
loopne
add
(bad)
ja
cmp
inc
clc
enter
in
(bad)
out
fs
ins
ins
push
and
add
or
call
inc
mov
pop
pop
xchg
sbb
mov
(bad)
lds
enter
aas
mov
pop
sub
add
and
retf
cmps
mov
sub
adc
sbb
add
and
cmp
push
ins
out
pop
xchg
cmps
scas
xchg
xchg
jg
repnz
lock
les
jg
loopne
mov
push
dec
ret
ss
adc
sbb
fwait
cmc
xchg
pushf
xor
fwait
jo
aas
or
adc
push
cli
xor
xor
mov
stos
imul
inc
push
stos
jne
cwde
popf
dec
mov
jbe
dec
jb
jg
jecxz
fcomp
(bad)
inc
fnstenv
sbb
test
pop
inc
xchg
call
pop
dec
call
movs
sbb
xchg
cmp
arpl
mov
ficomp
inc
fwait
pushf
mov
cmp
pop
adc
getsec
stos
neg
push
(bad)
ror
in
adc
push
dec
adc
loopne
pop
push
jo
xchg
xor
and
ret
aas
das
mov
cdq
inc
xchg
pop
xor
jne
and
xor
fisttp
xchg
add
add
ror
xor
aaa
sub
xchg
sbb
mov
sub
jecxz
xchg
sub
mov
movs
xchg
jnp
dec
mul
add
cmp
mov
push
jns
push
jb
(bad)
cmp
aaa
mov
xchg
outs
rcr
sbb
pop
push
mov
and
lods
into
pop
sub
xor
arpl
cmp
jnp
jmp
imul
or
dec
dec
pop
movs
cwde
jne
inc
cmp
stc
in
in
out
mov
jmp
or
mov
arpl
push
push
xor
fwait
jmp
inc
rcl
leave
or
and
push
dec
dec
adc
push
sbb
add
jge
clc
call
(bad)
aad
sbb
sahf
mov
lds
imul
or
xchg
into
outs
and
jae
mov
dec
sbb
and
jecxz
and
jecxz
jmp
das
xchg
inc
pop
cmps
mov
jbe
or
cmp
stc
gs
push
nop
cdq
mov
xchg
je
ds
(bad)
add
test
stos
loope
loopne
ins
sti
lock
sbb
inc
fs
fist
jae
add
aaa
pinsrw
xchg
jb
sub
and
adc
shr
sti
and
or
pop
fisubr
jae
inc
iret
jle
dec
sar
cmps
cmp
dec
out
movs
jne
sbb
in
mov
xchg
call
movs
pop
jns
xchg
ret
xor
ins
in
jnp
and
and
aaa
fiadd
sahf
inc
pop
mov
shl
jmp
jo
in
pop
mov
bnd
loope
cmp
push
mov
xchg
cs
bound
mov
push
mov
mov
pop
add
xchg
leave
retf
dec
sbb
mov
(bad)
cmps
(bad)
(bad)
push
ret
loope
push
and
rol
xchg
hlt
pop
into
daa
jge
hlt
in
xor
loopne
pop
or
hlt
ror
enter
dec
aas
pop
cmps
mov
inc
mov
loopne
mov
sub
jns
and
in
lea
shl
ins
sub
mov
cmps
inc
mov
or
out
mov
daa
sub
push
sbb
std
shl
shl
hlt
cmp
movs
mov
pop
jae
xchg
dec
xor
test
xchg
jmp
call
adc
xchg
inc
push
repz
jbe
ins
and
je
fs
dec
data16
repz
jns
push
xchg
dec
xor
xor
pop
jle
dec
pop
mov
mov
sub
sub
jmp
imul
lods
aas
jl
ds
and
(bad)
arpl
push
mul
dec
adc
xchg
enter
int3
scas
fdivr
fdiv
mov
rcl
cs
jmp
add
bound
std
movs
fild
data16
inc
xor
push
lods
and
mov
(bad)
dec
ins
enter
(bad)
push
and
cs
fnstsw
mul
test
add
xor
dec
mov
movs
xchg
int
jg
das
dec
jl
jnp
jge
(bad)
retf
push
pop
js
cmp
sbb
or
rol
mov
into
jge
lock
cdq
ins
(bad)
aam
add
imul
pop
sbb
retf
imul
mov
sbb
ins
jbe
js
cli
and
xchg
into
jecxz
push
cmps
add
xor
fsubr
sub
ins
or
test
stc
ins
jle
fwait
call
imul
shl
fcmovnb
cmp
jno
addr16
scas
dec
dec
adc
pop
sub
sar
pop
retf
ret
sbb
lock
aaa
jb
dec
test
or
pop
lods
js
and
inc
ficom
cmp
call
push
loope
xchg
xor
and
cld
mov
jp
mov
push
les
dec
scas
cdq
or
xchg
cmp
rcr
movs
inc
inc
fmul
mov
adc
push
mov
xchg
mov
leave
inc
cmp
sub
mov
fnstcw
cmps
aam
push
or
cmp
rol
jno
xchg
add
retf
ret
adc
and
daa
inc
ins
dec
adc
std
ret
jg
inc
adc
jbe
aad
les
pop
shr
xchg
xor
xchg
movs
mov
dec
out
ds
mov
jno
xchg
into
push
add
(bad)
fsubr
and
inc
ucomiss
mov
mov
inc
cld
or
ret
push
fwait
push
sbb
lds
in
pop
mov
and
mov
mov
push
mov
pusha
mov
push
sbb
cmps
(bad)
pop
inc
dec
mov
scas
and
and
fsub
and
outs
inc
push
or
push
sub
pusha
stos
call
mov
jge
pop
outs
lds
jae
in
inc
sub
push
mov
mov
adc
mov
stc
inc
out
mov
mov
repz
movs
movs
ins
xor
push
mov
and
imul
fnstsw
push
retf
pusha
in
fcomp
out
cld
lds
pop
mov
cli
cmp
aam
cli
sub
div
inc
mov
js
ja
mov
and
cmps
mov
cmp
mov
mov
xor
int3
cmc
push
ins
daa
sbb
push
faddp
aas
add
std
inc
or
test
or
mov
shl
sahf
mov
lock
in
mov
jmp
pcmpgtw
jns
shl
fld
retf
outs
cmc
(bad)
(bad)
push
xchg
inc
hlt
jecxz
test
and
mov
xchg
loopne
scas
jmp
cmp
push
ins
(bad)
mov
mov
xor
push
and
or
or
jl
jmp
call
mov
pop
stos
cmp
or
dec
mov
ss
cmp
push
dec
mov
adc
sub
mov
sub
int3
push
mov
rep
clc
bound
mov
loop
inc
sub
outs
inc
cmp
(bad)
sti
(bad)
movs
popf
or
shr
fcmovnu
dec
and
into
(bad)
loopne
fidivr
movs
push
mov
add
push
jmp
retf
xor
add
mov
js
lods
scas
cmp
adc
pop
xor
(bad)
add
clc
aaa
mov
mov
inc
aad
aad
inc
(bad)
lea
nop
or
adc
push
mov
xor
cmp
jle
add
and
into
in
add
add
icebp
test
popa
adc
xor
gs
test
repz
loop
jmp
inc
addr16
repnz
test
ror
js
push
inc
outs
sbb
stc
jno
push
pop
cmp
ins
xchg
inc
sub
xchg
ror
frstor
ficom
xor
ficom
push
mov
ret
icebp
mov
xlat
sbb
add
movnti
pop
mov
imul
dec
sbb
test
mov
jle
int3
add
aam
(bad)
xchg
mul
out
xchg
call
popf
push
xor
dec
pop
out
jmp
xchg
pop
push
(bad)
sub
sahf
or
add
mov
mov
daa
mov
les
(bad)
xchg
cmps
sbb
inc
pop
imul
div
mov
fnstenv
jo
lods
pop
sub
xlat
mov
mov
into
mov
add
xchg
mov
mov
cld
enter
inc
popf
repz
cmp
loope
lahf
repz
or
push
fsub
call
test
rcr
bound
neg
adc
mov
jmp
xchg
nop
xor
test
(bad)
inc
push
gs
sbb
xor
or
and
rol
psubd
jne
(bad)
sar
iret
mov
push
rol
shr
aad
mov
pop
mov
pusha
out
cmp
xchg
push
test
dec
(bad)
mov
nop
push
fwait
iret
aas
lea
xor
xchg
or
stos
clc
test
movs
add
aad
dec
push
pusha
int
aam
ret
ror
clc
cmp
add
sub
push
fidivr
js
aas
(bad)
cmp
inc
inc
data16
adc
lea
(bad)
pop
push
loopne
jmp
inc
daa
cmp
sub
inc
mov
mov
shl
dec
pop
mov
pop
loope
je
out
test
push
xor
(bad)
sbb
pop
inc
pop
call
outs
ja
stc
xchg
adc
push
mov
dec
jp
lods
jae
popf
sub
mov
dec
mov
rol
into
mov
inc
cmp
mov
or
movs
ror
cmp
or
inc
fldenv
sub
xchg
ret
pusha
leave
or
in
cdq
cmp
jmp
daa
mov
sub
call
hlt
cmp
mul
in
pushf
jae
inc
call
xor
shr
mov
std
es
inc
cmp
sub
test
pop
xor
add
int
xchg
je
add
mov
lods
sbb
out
push
fiadd
pushf
xchg
push
outs
cwde
push
ss
fisub
stos
pop
(bad)
sbb
sub
cwde
mov
mov
and
inc
out
jbe
test
pop
add
inc
jnp
mov
aas
push
mov
iret
adc
adc
and
retf
or
dec
adc
scas
mov
mov
daa
fst
aad
out
inc
cmp
scas
mov
push
and
push
sbb
push
out
dec
repnz
sahf
clc
fidivr
jge
cmp
fwait
inc
nop
jns
mov
movs
push
push
mov
pop
inc
pop
pop
fld
push
or
test
leave
test
or
sbb
fdivr
lods
jae
sbb
jns
inc
(bad)
cmp
icebp
jns
adc
add
fwait
ror
out
add
xchg
sbb
and
aas
inc
in
jne
and
scas
mov
adc
mov
pop
jmp
cld
push
out
pop
jmp
xchg
pop
mov
ret
pop
inc
and
stos
repz
(bad)
xchg
cmp
aam
gs
shl
or
mov
enter
popf
push
push
push
inc
mov
inc
neg
mov
ret
dec
add
scas
jae
call
jmp
cmp
pop
xor
dec
push
ja
adc
mov
adc
mov
mov
xchg
mov
(bad)
lods
(bad)
mov
jbe
xchg
jnp
cmc
xor
xor
jg
or
cld
xlat
loopne
fcomi
stc
clc
mov
adc
sti
rcl
and
sahf
mov
cmc
sub
mov
popf
aad
ret
rcl
push
out
addr16
sar
mov
vpsadbw
pop
sbb
add
add
push
or
cmc
aas
and
repnz
es
int3
mov
push
test
sbb
lahf
inc
fcmovnu
add
jmp
dec
daa
mov
dec
cdq
in
push
(bad)
cwde
jmp
into
mov
sub
iret
adc
imul
stos
mov
sbb
lock
jae
xor
push
leave
inc
cmps
fs
xlat
sbb
push
ds
pop
dec
jns
pop
mov
fld
clc
fistp
mov
mov
daa
push
jecxz
shl
add
push
jo
jo
pop
jl
push
rcl
call
nop
inc
std
bound
iret
mov
call
(bad)
arpl
ins
jg
mov
sbb
cld
icebp
pop
sub
add
je
retf
mov
(bad)
movs
xchg
adc
mov
loopne
cmp
inc
adc
jmp
add
mov
loop
adc
pop
sbb
ret
retf
fdivr
inc
adc
loopne
ret
pop
std
or
cmp
push
sbb
fidivr
data16
jmp
pusha
push
mov
movs
push
or
mov
mov
cmps
std
(bad)
sub
add
out
mov
dec
cmc
inc
pop
mov
shl
arpl
mov
icebp
test
add
sbb
jne
mov
jne
stos
cmps
push
and
inc
fsub
ret
sub
add
or
aam
(bad)
aaa
push
add
(bad)
mov
pop
jp
sub
xchg
jae
inc
iret
mov
gs
sahf
sti
sbb
lods
and
addr16
(bad)
in
push
lods
sub
push
adc
mov
ficom
mov
inc
adc
xchg
xchg
adc
dec
outs
(bad)
movs
rsqrtps
mov
sbb
ja
inc
dec
inc
jl
int
inc
and
cmp
adc
(bad)
addr16
inc
aam
lds
xchg
or
outs
jmp
push
scas
daa
jle
rcl
jmp
mov
cmp
xor
cdq
fbstp
ins
call
pop
(bad)
call
pop
xlat
fsub
mov
sbb
mov
dec
fucomi
test
mov
xchg
scas
xor
jmp
cmp
adc
dec
and
fs
xchg
out
mov
xor
iret
mov
cdq
mov
stos
mov
mov
mov
jle
add
(bad)
dec
push
fxch
cmps
pop
pop
js
pop
test
dec
jge
clc
jp
iret
cmps
or
dec
iret
dec
mov
lahf
sub
dec
pop
rol
sub
jmp
arpl
and
fild
stos
jb
jmp
aas
daa
push
ret
adc
clc
mov
push
dec
repnz
jecxz
lods
call
or
cld
mov
ds
add
push
add
cmp
xor
xor
fldcw
jp
or
add
lea
mov
add
mov
sar
xchg
sbb
push
cmp
jp
in
imul
push
xor
jmp
shl
mov
pop
(bad)
cld
xchg
xchg
xchg
xor
pop
jp
jl
stos
or
daa
fisub
scas
push
add
repz
movs
sub
fs
arpl
mov
pop
mov
mov
and
jl
pop
jmp
pop
clc
add
into
ror
bound
and
mov
inc
inc
adc
jnp
leave
mov
xchg
pop
xor
xor
sbb
jns
movs
test
sub
lahf
push
adc
sahf
jge
cmp
imul
sbb
mov
adc
ins
or
xchg
movs
pushf
push
xor
pop
push
aas
mov
cmp
ds
and
mov
dec
fld
mov
push
sbb
xor
mov
pop
mov
push
add
movs
dec
out
test
mov
sti
jle
in
(bad)
aas
dec
xchg
add
cmc
mov
adc
stos
mov
and
pop
dec
test
jns
xchg
les
xor
sti
push
jl
xchg
mov
and
hlt
or
mov
je
jne
jg
and
stos
stc
outs
outs
retf
and
pop
or
aad
xor
repnz
pusha
cli
adc
lea
or
xor
sub
add
push
ja
in
jo
fldcw
movs
mov
sbb
das
repz
xchg
cmp
pop
(bad)
dec
pop
(bad)
mov
jno
push
cli
push
imul
repz
sbb
pushf
pop
lock
clc
hlt
xor
adc
xchg
mov
pop
dec
inc
xchg
ret
push
neg
stos
imul
adc
mov
cmps
loop
cmps
dec
loop
jb
div
loopne
push
stos
repz
jge
mov
add
loopne
jo
push
dec
es
dec
div
sub
fst
mov
adc
dec
mov
and
adc
push
repnz
xlat
loope
imul
adc
test
or
(bad)
call
inc
outs
lods
push
lods
out
xor
jl
(bad)
movs
and
mov
call
push
jecxz
rol
sbb
aam
and
push
test
iret
test
cmp
dec
mov
pop
jb
jo
mov
in
int
les
sbb
pop
ins
cli
add
jg
ja
add
fadd
mov
cs
cmp
out
imul
xor
add
push
inc
sub
adc
mov
dec
cdq
lea
xlat
mov
cmp
pop
iret
mov
movs
pop
and
pop
mov
cdq
mov
or
mov
rcr
dec
mov
mov
ret
ins
fisubr
stc
pop
cld
test
and
ficomp
mov
cmp
sub
icebp
pop
and
mov
mov
jecxz
cmp
cmp
je
out
pushf
(bad)
push
scas
sbb
call
add
pop
jecxz
shl
push
xor
ret
push
mov
dec
sub
call
add
clc
pop
jb
xchg
mov
mov
xor
dec
bound
xor
loop
xchg
inc
push
out
fyl2x
xlat
inc
jne
dec
xchg
jp
xchg
pop
(bad)
and
outs
frstor
push
mov
pop
popf
push
jbe
call
jmp
jbe
push
push
inc
aad
dec
idiv
(bad)
in
mov
sub
in
(bad)
stc
int3
add
addr16
push
call
cli
mov
psubq
or
sbb
ror
aam
popa
dec
test
out
call
gs
loope
aad
sbb
pop
dec
jmp
xor
jb
add
xchg
dec
mov
stos
sbb
lahf
cmc
push
cdq
sub
jle
es
or
popf
pop
lahf
lahf
sbb
idiv
(bad)
dec
xchg
and
jmp
(bad)
jmp
mov
aas
es
inc
retf
xchg
loop
fwait
aad
fisub
test
enter
gs
pop
loopne
add
sbb
xor
sub
fstp
push
jg
dec
push
mov
std
xchg
pusha
sub
cmp
sbb
push
mov
ss
sbb
loope
fisub
adc
cmp
push
repz
or
stc
xchg
xor
cmc
ror
mov
jle
dec
inc
aam
mov
mov
enter
std
int
jmp
cmp
xchg
ret
es
xchg
test
(bad)
jl
jne
push
in
inc
arpl
lods
push
inc
shr
or
adc
mov
shl
leave
in
pusha
sub
mov
aam
jecxz
iret
push
loop
retf
(bad)
shl
adc
loop
sbb
out
pop
loope
(bad)
aam
lahf
js
push
ins
inc
cli
ret
mov
jle
shr
test
popa
popf
sbb
xor
xlat
movlps
inc
lds
(bad)
fisub
cli
push
pop
mov
dec
sub
ret
imul
test
pop
div
hlt
lock
cmps
(bad)
int
mov
lds
mov
iret
mov
imul
mov
push
mov
adc
sahf
sub
xchg
in
mov
and
pop
push
test
xchg
fwait
push
or
dec
lock
and
xor
out
or
mov
sub
mov
(bad)
cmps
rol
xor
out
mov
lea
(bad)
loope
call
(bad)
cli
and
add
lea
or
mov
dec
mov
push
pop
ret
mov
lods
(bad)
mov
clc
add
or
add
dec
sbb
add
fld
fimul
int3
retf
shl
rcl
fneni(8087
int
int
into
pmovmskb
jns
daa
fwait
arpl
inc
fs
pushf
fwait
leave
mov
in
and
pop
sub
ja
out
mov
lahf
popf
inc
out
sub
int3
or
movs
xchg
aad
mov
cmps
rcr
ins
jmp
mov
or
scas
cmps
xchg
cwde
dec
int3
int3
in
sti
jg
and
movs
push
sahf
sbb
push
sbb
xor
ins
sub
pop
std
jle
cmp
fst
dec
cmps
aas
sbb
dec
ds
les
test
repz
popf
pop
jl
lea
fidivr
ficom
lods
mov
aam
xchg
out
push
cmps
ins
cld
mov
sti
bound
or
pop
rcl
imul
push
add
cwde
stc
xchg
jae
std
(bad)
int
add
js
dec
das
inc
(bad)
in
(bad)
out
cdq
cli
bound
pusha
fdivr
adc
in
(bad)
(bad)
mov
inc
es
or
sbb
sar
mov
test
jbe
xchg
outs
add
(bad)
cli
lahf
mov
shr
xor
in
test
dec
fisttp
mov
retf
pop
cmps
cmps
shl
xchg
pop
push
int
(bad)
popf
pop
or
(bad)
mov
jge
inc
pusha
mov
lahf
lock
in
repz
hlt
js
lods
push
xchg
dec
sub
repnz
adc
shl
fimul
pusha
jecxz
sbb
movs
and
ins
adc
int
and
xchg
cmp
mov
ins
lods
inc
inc
cwde
sbb
test
mov
inc
xor
loop
mov
sbb
mov
mov
or
mov
ins
add
outs
jno
or
mov
cld
or
adc
(bad)
in
test
mov
in
shr
add
xchg
out
ficomp
cld
push
hlt
pop
icebp
dec
nop
push
xor
jno
xchg
pop
push
mov
test
ja
pop
cli
cs
adc
jmp
pusha
cmp
jg
pop
aad
add
outs
leave
pusha
(bad)
lock
mov
ins
xchg
push
mov
arpl
add
dec
arpl
fldl2e
aaa
mov
mov
pusha
test
xchg
ret
or
add
push
mov
inc
(bad)
xor
icebp
in
in
push
push
fcom
test
jnp
sub
std
cwde
push
pop
mov
mov
gs
cmp
pop
jle
inc
ja
xchg
cli
mov
pop
sub
jns
call
repz
cmp
stc
in
ja
jl
pop
xchg
fst
es
mov
xor
das
sbb
pop
inc
mov
loop
mov
dec
mov
or
xchg
cmp
aam
mov
std
not
dec
pop
scas
mov
pop
(bad)
loop
ret
mov
in
test
imul
lea
mov
jp
pop
adc
(bad)
pop
mov
jle
aam
outs
mov
jp
jg
add
sub
cmp
sub
in
(bad)
jmp
sub
ja
mov
enter
or
lock
sub
mov
fwait
icebp
ja
out
es
dec
cmps
iret
(bad)
icebp
loope
push
jnp
jnp
cli
and
in
mov
mov
xchg
arpl
int3
clc
mov
cmp
push
loop
shl
inc
dec
sbb
loop
ins
fidivr
setae
sahf
aam
adc
mov
push
je
mov
ret
fcomp
in
int
xchg
push
mov
pop
push
or
xor
stc
stc
push
sub
cmp
pusha
rcr
mov
out
sub
scas
cmp
jae
stc
imul
or
cs
xchg
test
and
shl
mov
cld
mov
xchg
push
sbb
jecxz
aas
jmp
not
inc
inc
mov
nop
sahf
adc
xchg
jg
movs
adc
mul
adc
add
cmp
mov
jno
mov
mov
jnp
mov
jmp
in
xor
std
sub
call
sbb
out
repz
push
ins
lahf
repnz
mov
lock
inc
jle
pop
mov
movs
cmp
mov
out
aaa
outs
and
mov
test
sub
mov
clc
sub
mov
out
cld
clc
(bad)
std
pop
aad
sbb
and
adc
movs
mov
push
mov
sar
retf
jmp
push
or
xor
push
dec
and
data16
loopne
push
movs
jge
adc
inc
ins
aas
pop
jae
stos
pop
adc
std
aam
sub
and
mov
repz
loope
jnp
call
inc
sbb
aam
sbb
jo
sub
clc
jnp
movs
sti
aas
mov
add
mov
inc
pop
push
ss
or
fild
cmps
out
mov
xor
fild
jo
stos
cmps
xchg
call
rol
dec
out
lea
add
shr
dec
sbb
in
pop
xchg
adc
fdiv
out
mov
ss
mov
sbb
inc
in
inc
mov
rol
ins
cmps
int
push
adc
mov
cld
mov
ror
inc
pop
sub
jmp
jmp
hlt
sbb
and
xchg
jae
dec
in
das
cmp
pop
pop
add
js
mov
repz
inc
sub
mov
and
sahf
add
xchg
sub
fxch
dec
fistp
ins
mov
sar
popf
cmc
aaa
std
pop
and
std
in
push
add
xor
not
stc
in
xor
mov
add
repz
xchg
in
and
jecxz
call
ins
js
jmp
push
imul
dec
sub
out
mov
cmp
inc
in
les
ja
jb
retf
adc
dec
jmp
push
add
bound
repz
adc
mov
das
pushf
iret
retf
pop
ins
mov
mov
jmp
stos
nop
xchg
imul
cmc
and
pop
add
mov
std
jg
sar
pop
loope
in
lods
cmp
out
cmp
js
mov
pop
clc
adc
test
sbb
mov
scas
nop
gs
push
mov
bnd
daa
lods
sti
movs
es
aam
(bad)
cli
mov
call
xchg
clc
xchg
push
push
jge
jns
fsubr
into
fcom
push
iret
mov
fs
jle
pop
aad
pop
mov
sub
and
or
ins
fwait
adc
xor
arpl
sbb
les
shl
xor
fwait
clc
pop
fdiv
(bad)
rcl
add
pop
mov
(bad)
jle
(bad)
jb
addr16
sbb
inc
das
loop
enter
jg
repnz
sar
retf
adc
mov
ja
fnstcw
or
lahf
add
or
cmp
movs
mov
xchg
movs
jmp
popf
or
icebp
inc
sti
push
push
daa
pminsw
add
ror
mov
push
xchg
mov
(bad)
mov
jl
push
jl
sar
call
sub
js
or
push
outs
or
dec
outs
mov
lahf
adc
ror
xor
jle
fiadd
int3
mov
jmp
call
mov
shl
push
jo
shl
push
push
in
cmps
sub
mov
dec
mov
in
push
push
lahf
sbb
jnp
mov
test
xor
ins
test
and
add
test
push
dec
sub
push
adc
cmp
jo
popf
cmps
sar
push
or
fadd
add
clc
pop
inc
cld
iret
mov
push
pop
gs
mov
pop
cmp
adc
jnp
inc
cmp
mov
scas
push
fdivr
ds
fs
in
mov
fst
ficom
jge
lock
or
and
push
(bad)
sahf
jne
sbb
adc
rcl
ret
test
(bad)
sbb
mov
add
movs
nop
hlt
or
iret
sub
sub
jne
test
xor
je
adc
cdq
push
adc
mov
xchg
retf
fistp
sbb
lods
xor
cmp
sub
iret
xchg
repnz
cli
test
test
(bad)
mov
push
adc
retf
test
and
sbb
cmc
call
daa
into
fsubp
push
mov
in
pop
push
sbb
aas
pop
retf
or
push
xchg
jmp
fdiv
sub
lea
gs
fnsave
ins
mov
in
push
add
jnp
lods
cmps
outs
test
out
test
mov
shl
aad
loopne
lods
int3
les
lahf
enter
add
jnp
add
inc
xchg
sbb
jmp
xor
mov
ins
mov
xchg
inc
mov
cli
cwde
mov
shl
mov
xor
and
dec
add
mov
mov
xchg
imul
sbb
pop
mov
bnd
mov
pop
jno
and
shr
call
test
ret
xchg
retf
xor
aas
imul
das
out
loop
add
iret
and
imul
mov
and
ins
or
mov
cmp
fst
pop
sbb
fcmovbe
dec
stc
sbb
inc
jno
push
pop
in
pushf
mov
mov
cmp
(bad)
or
jns
popf
stos
cmp
sahf
in
mov
mov
cmp
cmp
jno
cld
xchg
push
icebp
lods
sub
dec
int3
ss
test
test
pop
popf
pop
es
int3
das
sbb
dec
mov
(bad)
aas
jg
xchg
mov
cmp
imul
push
in
jo
loopne
mov
cmc
fldenv
mov
sbb
xchg
xor
push
bound
xchg
dec
xor
jae
xor
xchg
fmul
int
xchg
ss
ret
(bad)
jne
lods
jb
mov
sub
push
add
int3
mov
ins
pop
push
mov
lods
cmp
aad
test
sub
pop
adc
cwde
cli
ins
dec
loopne
and
dec
and
inc
cmp
mov
test
in
fwait
lock
cli
jnp
movs
ins
ror
aad
inc
in
push
pushf
ret
sar
outs
imul
movs
fimul
mov
push
jle
dec
mul
scas
loop
or
loopne
cmp
xor
push
pop
mov
mov
pusha
popa
xchg
es
add
movs
jp
dec
push
mov
add
out
mov
pop
rol
adc
fiadd
jno
jmp
push
jge
lds
and
retf
cli
scas
inc
ss
sub
fwait
test
dec
xchg
jmp
cmovae
int3
lahf
mov
mov
or
cdq
(bad)
mov
mov
les
mov
imul
ret
in
pop
cmc
pop
loop
add
pop
and
ins
jnp
add
mov
aaa
adc
inc
and
inc
jno
test
xchg
pop
shr
int3
inc
rol
rol
cmc
popw
or
xchg
xchg
sbb
inc
addr16
mov
pop
fcom
add
mov
inc
add
pcmpeqb
add
pop
ret
out
push
aaa
test
xchg
cld
sbb
jmp
pop
xor
pop
cmps
ficomp
das
les
out
dec
pop
(bad)
scas
or
mov
stos
jno
or
(bad)
pop
cmp
call
ins
jp
dec
daa
repz
jp
lods
sub
adc
and
jnp
push
fdiv
or
cmp
fldenv
sbb
sub
mov
dec
adc
pop
fnstenv
adc
mov
push
jns
xor
icebp
add
sub
fdivr
lods
arpl
or
add
retf
pushf
fwait
add
imul
inc
xchg
test
shl
scas
pop
fst
or
xchg
lods
mov
mov
sub
pop
mov
cmp
push
dec
repnz
test
mov
dec
stos
cmps
nop
inc
jle
add
icebp
and
sbb
cdq
clc
aas
pop
and
xor
daa
ins
int3
jns
imul
xchg
jno
mov
fstp
shr
imul
repnz
xchg
gs
xchg
movs
fstp
fcomp
push
mov
xchg
(bad)
mov
dec
movs
(bad)
jmp
dec
or
sub
jmp
fs
sar
push
xchg
push
fcom
jne
sahf
dec
ret
adc
push
outs
dec
mov
pop
ins
xlat
lock
arpl
add
xchg
xchg
pop
pop
cmp
les
jmp
jl
sahf
mov
sahf
(bad)
std
pusha
sub
adc
data16
clc
xchg
popf
js
cmp
or
pop
repnz
mov
cmp
adc
xchg
jb
jge
(bad)
xor
push
addr16
pop
(bad)
into
mov
mov
push
pushf
mov
outs
stos
pop
xor
sub
in
jg
pop
mov
push
cld
mov
call
lods
rcr
jno
sub
jne
push
mov
dec
add
repz
xlat
mov
inc
aad
adc
jl
xchg
adc
mov
fcmovnb
in
shl
cli
mov
push
mov
leave
adc
mov
gs
push
mov
clc
mov
add
pusha
(bad)
loopne
and
mov
out
adc
mov
push
test
inc
sub
jo
lahf
mov
jno
test
add
loop
loope
loop
test
adc
jle
ins
xor
adc
mov
cmps
and
adc
stos
push
rcl
mov
inc
mov
pop
dec
repz
cdq
aad
xchg
cwde
add
scas
cmp
jo
or
jns
(bad)
cli
mov
adc
adc
dec
iret
loope
sti
pop
cmp
sbb
xchg
enter
(bad)
mov
add
mov
sbb
mov
sub
stos
data16
adc
pop
sub
retf
int
jmp
or
jbe
mov
and
or
sbb
imul
out
inc
dec
(bad)
rcr
nop
xchg
stos
and
jo
sbb
je
data16
pop
jle
mov
mov
xor
popf
push
pop
call
sbb
fisub
fld
sbb
mov
push
jp
inc
icebp
dec
push
imul
jge
sub
out
cld
mov
sahf
add
leave
bound
xor
sub
je
js
test
fchs
ret
mov
cmp
test
mov
mov
jo
ror
and
out
push
xor
mov
and
call
fwait
repz
xor
loope
xor
and
mov
push
pop
or
mov
mov
std
sbb
ret
xchg
outs
ret
xchg
push
jnp
inc
rcl
(bad)
ins
es
cmp
cmps
dec
cmp
or
ud0
push
jmp
xor
and
fwait
rcr
icebp
jle
and
add
push
add
bound
mov
mov
sub
mov
jno
int3
add
repz
jbe
ret
hlt
test
pop
sub
aaa
mov
mov
out
lock
daa
loop
or
pop
dec
mov
inc
jns
cmp
ins
data16
stc
xchg
fcomp
xor
jae
les
push
stc
and
xchg
(bad)
and
push
sub
xchg
adc
js
stc
dec
pusha
sbb
shl
xchg
fucomip
jmp
jl
pop
loope
arpl
loopne
ins
test
fwait
clc
cld
and
retf
or
imul
enter
clc
jnp
jo
lock
fldenv
mov
mov
out
ss
and
mov
push
push
jns
pop
push
les
adc
(bad)
stos
in
bound
or
shr
dec
nop
sti
push
pop
add
loope
jo
mov
test
pusha
fisttp
inc
adc
out
cmps
sub
jo
shl
test
mov
push
mov
out
sub
mov
dec
neg
enter
nop
rcl
and
push
ins
ficomp
cmps
scas
bound
pop
pop
add
mov
fcomp
and
lods
mov
sti
mov
sub
ret
sub
jbe
push
and
outs
div
or
cmc
sti
mov
push
out
xchg
inc
jmp
lahf
add
dec
fimul
xchg
push
addr16
jo
icebp
pop
mov
in
push
loope
jmp
sar
idiv
mov
cs
ret
pop
mov
mov
mov
xchg
jge
sbb
add
shl
jne
int
int
push
stos
and
fld
retf
cmp
and
in
push
pop
mov
xor
imul
ficomp
cs
mov
dec
mov
xchg
inc
pop
and
mov
pop
mov
enter
fstenv
cmp
test
fwait
inc
cmc
xor
iret
xor
jl
jecxz
adc
adc
rol
jns
(bad)
ins
rol
jns
fisubr
mov
sar
push
sub
add
sbb
(bad)
daa
mov
add
scas
aaa
inc
in
mov
cmps
hlt
cmp
jmp
cmc
test
cmc
dec
cmps
mov
(bad)
in
imul
ja
mov
icebp
xchg
jb
sbb
aas
add
(bad)
std
xor
sar
add
loop
xor
xchg
jecxz
ror
gs
stos
mov
dec
cmc
mov
mov
lods
jmp
xor
pop
je
vmovddup
pop
xchg
push
movs
xchg
repz
retf
retf
jg
inc
movs
inc
pop
iret
sbb
jno
xchg
jmp
push
xchg
jmp
aad
icebp
rol
xchg
mov
call
or
or
or
add
sahf
xor
add
(bad)
or
std
call
ficom
jnp
nop
test
rcl
cs
in
mov
jo
test
push
xchg
xor
jl
les
pop
jp
lods
or
das
jo
fild
gs
aam
ja
sbb
popf
(bad)
cmc
cdq
mov
dec
cmc
gs
mov
daa
nop
push
dec
cmps
out
test
inc
jmp
adc
pop
ins
xchg
mov
aaa
mov
mov
(bad)
push
jp
ror
inc
sbb
stc
call
jae
cmp
jg
sbb
iret
xor
idiv
cmps
mov
mov
mov
fs
imul
bound
ret
pop
jge
jg
scas
mov
add
mov
in
mov
xor
sbb
sub
outs
xor
push
jae
(bad)
jmp
pop
xor
push
ss
fwait
cld
pop
pop
adc
es
mov
or
lods
push
mov
fist
cmp
test
jb
lock
out
and
shr
xor
mov
mov
sbb
ins
out
cmps
fs
cs
test
call
lds
pop
jp
xor
mov
push
mov
out
cmp
push
push
sbb
jmp
adc
xor
sbb
xor
aam
sbb
jbe
xor
movs
in
aaa
aad
jnp
retf
movs
in
mov
in
(bad)
xchg
mov
push
fabs
jne
(bad)
int3
push
pop
and
cs
mov
movs
(bad)
leave
mov
sub
pop
cld
inc
xchg
rol
test
(bad)
into
sub
rol
mov
or
imul
clc
adc
jmp
mov
cmp
mov
(bad)
mov
pop
out
in
jge
mov
jnp
cmps
(bad)
retf
fimul
jl
add
sub
call
push
test
lds
test
inc
mov
push
inc
out
arpl
dec
xchg
push
add
sub
div
mov
ss
imul
mov
(bad)
in
sub
fisub
iret
in
popf
add
sahf
rcr
stos
inc
popf
push
arpl
(bad)
call
lahf
clc
or
outs
rcl
pop
pop
dec
pop
sahf
in
pop
daa
fisub
cmp
mov
in
sub
and
lock
dec
mov
mov
push
mov
retf
or
fs
sbb
adc
jnp
cmc
pop
inc
xor
lock
pop
js
jns
nop
xor
cwde
xchg
sub
in
movs
sub
popf
pop
dec
pop
mov
push
cs
or
cmp
ss
cmp
push
push
not
pop
dec
movs
sub
addr16
mov
sub
sti
mov
(bad)
xor
arpl
xor
pop
jmp
movs
push
enter
imul
xchg
jno
popa
sub
scas
imul
dec
cmp
add
sub
adc
inc
mov
inc
cmps
cwde
or
jle
sahf
imul
or
inc
sbb
scas
fsubr
sub
pop
inc
mov
or
push
scas
add
jbe
jae
loopne
adc
mov
mov
popa
arpl
call
fdivr
jle
pop
push
xchg
out
adc
add
call
(bad)
pop
data16
cmps
cmp
out
pop
add
in
jle
jp
mul
and
dec
stos
ins
dec
outs
loopne
pop
inc
sub
(bad)
ins
push
xor
into
aaa
mov
jmp
(bad)
shr
fiadd
sbb
inc
ficomp
or
xchg
pushf
daa
mov
jnp
ins
nop
and
jno
(bad)
or
and
mov
hlt
dec
mov
lea
lods
cmps
fisub
or
mov
retf
add
(bad)
add
xor
and
and
push
jp
push
jne
mov
mov
mov
popa
pop
adc
dec
inc
or
fbstp
pop
outs
push
xor
dec
add
adc
push
mov
cmps
mov
das
push
rcr
push
mov
lea
mov
sbb
std
adc
inc
cmp
push
push
jae
(bad)
mov
cmp
adc
jno
aad
mov
aaa
cs
mov
and
jl
jg
cmp
pop
sub
sub
std
mov
pushf
inc
add
loopne
cmp
adc
pop
push
ret
cmp
nop
jl
mov
std
sub
pop
mov
jmp
loope
loopne
cmp
mov
call
gs
push
stos
or
add
jecxz
call
jmp
or
push
ins
or
pop
daa
mov
mov
outs
push
in
bound
js
call
stos
cmp
leave
vmovhps
mov
lds
clc
push
ins
in
jae
mov
loope
pop
pushf
jnp
push
movs
popa
dec
cdq
fstp
cmp
cmp
xor
and
loopne
popa
lahf
and
jecxz
icebp
movs
pushf
outs
push
stos
mov
scas
fldcw
iret
outs
and
sub
and
jmp
lea
lea
cwde
add
jmp
jbe
adc
jbe
imul
jns
sbb
cmp
pop
fcom
push
arpl
dec
(bad)
call
add
ror
fcomp
xchg
enter
fistp
(bad)
cmp
pusha
and
clc
ret
sub
dec
shr
pop
dec
in
les
stos
stos
(bad)
lods
inc
jb
fimul
inc
mov
jmp
add
lock
xor
aas
(bad)
movs
addr16
bound
xor
ret
push
mov
inc
sub
stc
les
movs
dec
test
out
leave
sbb
push
je
push
inc
adc
int3
in
xchg
call
adc
mov
pop
and
sbb
(bad)
mov
mov
jo
hlt
jnp
ins
int
movs
popf
xchg
sahf
(bad)
xor
jge
jp
dec
sbb
or
outs
sub
lea
sar
sti
mov
and
mov
(bad)
adc
out
fisttp
in
sbb
push
inc
adc
aam
adc
cmp
rol
inc
sub
out
adc
mov
enter
or
ja
adc
out
mov
hlt
cmp
mov
fisttp
arpl
ret
stc
sti
out
xchg
stc
adc
shr
or
xor
dec
jae
(bad)
shl
mov
xchg
xlat
inc
push
aaa
in
add
stos
add
xchg
(bad)
mov
ss
cmp
mov
lods
cs
mov
push
pop
jmp
movs
sbb
push
outs
mov
cmp
push
mov
scas
xor
(bad)
mov
ds
and
out
call
jl
outs
xchg
mov
xchg
jle
mov
ret
sub
mov
and
out
test
mov
mov
ret
and
add
push
clc
inc
paddusb
aas
mov
movs
icebp
(bad)
mov
inc
ret
jmp
sub
(bad)
iret
scas
jo
ret
adc
mov
pop
push
push
xor
push
jl
mov
stos
data16
cmp
test
cmps
add
and
test
stos
ins
out
in
pop
xchg
mov
pop
mov
mov
lahf
pop
sar
dec
or
paddd
mov
and
call
or
ins
xchg
rcl
loopne
jns
jne
sahf
pop
cdq
cs
in
leave
(bad)
cmps
into
push
mov
and
inc
mov
sbb
xchg
cli
repz
test
mov
addr16
inc
fs
jecxz
cli
cld
jae
push
adc
into
pop
aad
adc
outs
xor
lahf
in
push
and
add
ret
inc
dec
iret
jnp
pop
loop
scas
cli
mov
into
dec
xchg
shl
adc
add
out
inc
or
adc
jns
retf
jns
stos
cld
ins
xchg
or
push
push
cmp
je
pop
cmp
jmp
inc
mov
mov
pmullw
cdq
in
inc
xchg
fnsave
in
rcr
jmp
dec
sub
mov
push
mov
sub
lds
inc
inc
or
cmp
sub
(bad)
clc
pushf
or
xor
cs
xor
inc
test
retf
fild
sti
cmp
jnp
dec
lds
aam
ret
imul
hlt
sub
mov
rcl
daa
ds
lds
jae
inc
lds
lds
inc
adc
cmp
fisub
sbb
xchg
movs
icebp
mov
imul
aad
adc
xor
loope
mov
sbb
outs
xor
in
sbb
test
sub
xor
jmp
in
jae
out
das
retf
sub
push
xchg
shl
cmp
pop
add
adc
pop
(bad)
dec
mov
stos
sar
xchg
cmp
in
jae
(bad)
(bad)
out
xor
mov
test
inc
cmp
icebp
in
xchg
mov
mov
push
gs
test
lods
retf
cmp
ins
cmp
addr16
cs
xor
cmp
movs
fs
jo
mov
mov
ret
inc
leave
mov
push
pop
fstp
push
push
pop
adc
inc
lea
sti
ret
sbb
stos
test
adc
jle
fbstp
pop
outs
mov
jno
test
loope
or
leave
inc
shl
popf
adc
addr16
cmp
cmp
mov
add
int
into
repz
lahf
stos
cwde
das
sbb
ss
retf
pop
and
outs
lods
cmps
ins
adc
pop
mov
pop
js
sti
sbb
pop
cmp
mov
std
jnp
mov
push
mov
lods
inc
lahf
inc
pop
xchg
pop
push
cwde
sbb
pop
les
stc
mov
call
sub
cdq
cmps
adc
mov
sbb
movs
or
outs
es
adc
mov
imul
fldcw
out
dec
sbb
add
xchg
ja
in
add
mov
fwait
mov
add
shl
les
and
imul
inc
mov
cvttps2pi
jg
dec
icebp
imul
adc
pop
je
sbb
add
add
inc
dec
fs
ins
cmp
scas
fstp
into
xchg
xchg
(bad)
add
or
stos
int
pop
jp
fwait
sub
test
popa
cmovle
push
pusha
sub
aad
fisub
add
retf
dec
repz
push
pop
xchg
and
outs
movs
(bad)
xor
clc
inc
adc
aad
pop
mov
mov
mov
(bad)
lahf
movs
mov
hlt
pushf
clc
cld
daa
xor
xor
sub
or
mov
xchg
pop
stc
daa
rcl
xchg
addr16
xchg
nop
jl
lahf
ins
mov
pop
and
inc
lahf
push
mov
das
adc
rcl
inc
xchg
push
mov
mov
jge
sbb
push
xchg
push
cmp
adc
mov
and
inc
rol
dec
add
sbb
xor
mov
pop
push
mov
das
mov
fwait
cmp
mov
adc
mov
and
push
cmp
add
lds
dec
movs
data16
std
int
push
jb
mov
cmp
xchg
add
mov
and
jmp
pushf
mov
nop
mov
in
inc
xchg
or
adc
das
inc
mov
and
aam
mov
jo
out
ss
jle
loop
loop
cmp
sub
push
out
push
fsubr
js
or
or
sbb
pop
out
pop
fbld
retf
adc
inc
mov
clc
inc
clc
push
push
xor
mov
icebp
sbb
or
cmp
inc
pop
push
sti
add
int3
push
lock
ret
icebp
push
fscale
sbb
ds
cmp
mov
test
test
std
mov
jne
pusha
dec
mov
xor
je
dec
ret
leave
sub
jge
nop
cld
pop
clc
xor
in
cmps
lds
mov
mov
pop
dec
inc
mov
aaa
cmc
call
repz
arpl
xlat
sub
push
mov
add
neg
ins
jg
mov
cmp
lods
xchg
mul
popf
loop
push
mov
xchg
(bad)
fidiv
loope
sahf
mov
call
inc
enter
pop
mov
xor
mov
sbb
out
pop
pop
punpckhwd
stos
and
movq
out
test
cmp
xor
int
shl
repz
jecxz
sub
add
xchg
inc
rcl
jge
mov
add
cmp
int3
js
daa
jge
mov
rol
and
add
pop
lahf
fstp
out
nop
xlat
dec
sbb
call
addr16
inc
dec
int
cmp
mov
xor
out
xchg
call
add
and
add
dec
retf
xor
dec
scas
arpl
jno
fisttp
pop
mov
inc
out
jecxz
xchg
xchg
dec
xor
movs
or
jne
push
push
enter
jecxz
mov
cmp
sub
add
lods
jle
add
inc
lods
add
retf
jno
mov
jb
(bad)
jp
dec
sub
dec
mov
add
adc
jge
or
mov
mov
pop
ret
fadd
idiv
cmp
push
or
fs
imul
in
loope
shl
push
outs
cmc
jne
jns
fld
sub
mov
push
add
aaa
gs
stos
scas
jmp
mov
or
cdq
(bad)
aad
mov
std
push
xor
cwde
xchg
in
outs
out
js
cmp
add
cmc
jl
xchg
push
lea
and
cmps
sub
inc
or
adc
jb
dec
push
xor
jns
fsubp
retf
jecxz
movs
je
push
test
imul
dec
(bad)
mov
pop
cmp
and
lods
sbb
push
mov
fild
movs
and
jno
cmp
dec
iret
sub
les
dec
cmc
pop
mov
in
test
and
pop
pushf
pop
fs
push
popf
test
mov
rcr
aas
xchg
jnp
sbb
neg
lds
add
(bad)
ins
sub
xor
loopne
movs
add
inc
fldcw
lods
rcl
lock
js
sbb
pop
cmp
or
xchg
mov
ret
xor
push
movs
lods
pushf
and
jnp
dec
(bad)
out
(bad)
jno
push
out
jno
sub
lods
jne
pusha
test
jno
out
cmp
or
pop
ins
mov
inc
jge
icebp
mov
dec
jno
adc
xchg
mov
and
(bad)
out
mov
fist
out
sub
ins
xor
xchg
bound
test
xchg
mov
push
arpl
daa
repnz
xchg
(bad)
mov
lock
jl
(bad)
mov
and
push
jp
loope
loope
ins
gs
mov
dec
sbb
mov
and
dec
cmc
jne
stos
iret
popf
fucomip
lahf
lock
pop
sbb
or
jp
xchg
add
movs
inc
cmps
xchg
pop
ins
or
in
cmp
clc
xchg
jo
pushf
loope
je
test
xor
cmp
inc
cmps
sub
jg
fdivr
cld
mov
gs
xor
push
ja
cmp
(bad)
aam
dec
pop
mov
pop
adc
jne
jp
push
push
cmps
cmp
aas
xor
add
lock
in
xchg
int
arpl
test
xchg
fsin
jp
mov
mov
cmp
fistp
clc
jns
jmp
shld
iret
das
xchg
mov
or
push
(bad)
fmul
mov
cmp
sub
jl
mov
ret
cmp
in
xchg
xchg
ja
mov
pop
repnz
mov
push
cdq
pusha
cwde
rcr
mov
mov
jecxz
scas
mov
jmp
mov
out
push
fcomip
mov
(bad)
mov
inc
das
ss
frstor
jbe
jge
sub
mov
inc
inc
aam
ret
ror
jnp
jle
xor
adc
mov
mov
loope
popa
jnp
arpl
ret
in
outs
mov
push
ficomp
test
out
ja
inc
xchg
(bad)
in
and
test
mov
test
mov
adc
mov
stos
sbb
mov
mov
sub
mov
cld
fild
cs
pop
dec
lea
test
sbb
retf
mov
in
lock
je
adc
jecxz
xor
inc
(bad)
imul
sbb
xchg
(bad)
xchg
or
cmps
ss
push
ffree
aam
sbb
push
stos
xchg
mov
std
sub
sar
pop
std
popa
push
data16
nop
mov
push
inc
mov
push
mov
ins
nop
or
dec
loop
loop
mov
inc
and
cdq
pop
out
pop
sahf
call
mov
mov
dec
jmp
test
jecxz
je
mov
and
jl
xor
cmp
push
jo
scas
inc
das
outs
rcl
and
in
sbb
mov
not
push
enter
movs
add
fisubr
stc
dec
and
sbb
jmp
adc
add
dec
dec
cwde
test
aas
and
jne
sub
clc
push
jbe
into
xor
or
mov
dec
push
movs
mov
jbe
jecxz
out
push
cld
pop
cmp
sbb
cli
mov
sbb
outs
iret
inc
mov
fstp
retf
les
cdq
das
xor
aaa
xchg
inc
jg
mov
jecxz
(bad)
add
add
scas
ret
imul
popa
jbe
sbb
pop
lahf
xchg
pop
pop
leave
rcl
dec
je
nop
(bad)
xor
dec
xchg
inc
push
mov
ds
hlt
mov
sbb
adc
in
(bad)
ficom
mov
dec
and
mov
inc
inc
loop
inc
or
and
lea
fnstenv
xchg
nop
or
xchg
sbb
push
enter
xor
sub
scas
xor
adc
pop
ins
add
lea
add
outs
cmp
lods
(bad)
add
push
xor
xchg
inc
push
dec
test
add
jbe
into
jg
ret
test
(bad)
fsub
push
sbb
inc
pop
fld
and
sbb
xor
sbb
int3
aas
mov
dec
outs
adc
mov
js
retf
xchg
xchg
movs
mov
inc
xchg
stos
xor
dec
daa
mov
and
imul
xlat
nop
sub
enter
xchg
lods
xor
xor
inc
fistp
inc
call
mov
stos
inc
xchg
inc
dec
push
inc
loop
movs
and
inc
hlt
(bad)
imul
sti
fisub
int
stos
xchg
movs
cmps
pop
pop
pop
jl
pop
mov
push
mov
xchg
popa
add
test
fnclex
pop
pop
jno
mov
sti
in
mov
dec
push
sub
cmp
shr
mov
push
retf
hlt
cmp
add
sbb
lea
pop
ja
jmp
addr16
jge
ror
outs
je
xchg
pop
shl
or
mov
repz
xchg
push
jle
xchg
dec
push
push
inc
loope
sahf
push
lds
enter
test
arpl
pop
lea
enter
dec
loop
(bad)
(bad)
jns
test
sbb
sar
push
mov
lea
addr16
in
cmp
call
xchg
outs
jg
xor
jmp
aam
sahf
shl
icebp
ja
mov
fidiv
pop
loop
lods
out
fcom
mov
push
or
out
jo
jnp
pop
out
mov
mov
and
inc
test
adc
push
sbb
mov
pop
pushf
adc
cmp
pop
test
mov
in
pop
fwait
pushf
test
idiv
push
inc
std
mov
aam
xchg
jb
test
les
inc
retf
adc
sub
mov
daa
push
ror
mov
sub
iret
add
inc
jb
xchg
ret
add
sbb
fld
pusha
or
rol
gs
ss
mov
push
xchg
inc
inc
ror
fisubr
inc
and
add
mov
test
sub
jle
adc
cld
out
sub
push
mov
sub
test
mov
(bad)
inc
jecxz
(bad)
lock
iret
sbb
cli
adc
push
popf
mov
or
sahf
sti
xchg
xchg
shl
and
cmp
hlt
popa
(bad)
(bad)
push
fist
aaa
mov
adc
dec
xor
push
mov
push
sbb
popf
mov
xor
pop
es
add
and
stos
cmp
gs
fidiv
adc
(bad)
ins
test
std
pop
pop
pop
jg
or
bound
push
outs
imul
(bad)
jecxz
cmps
mov
aas
scas
add
and
push
pusha
cs
mov
hlt
cdq
jbe
outs
and
cmp
sti
ror
int
pop
mov
sbb
addr16
mov
bound
dec
mov
xchg
dec
in
loope
pop
fnsave
(bad)
in
inc
adc
into
add
repnz
out
dec
enter
inc
hlt
mov
mov
push
fst
out
mov
xchg
data16
dec
aas
ss
pop
out
mov
mov
jb
cmp
loopne
push
add
adc
inc
cs
fs
cwde
jb
inc
sbb
jge
cmp
push
retf
fbstp
pop
rcr
pop
out
das
mov
mov
mov
xchg
shr
or
jbe
test
lea
in
adc
xchg
les
mov
(bad)
fld
repnz
inc
push
xchg
loopne
cmp
and
lea
mov
mov
push
mov
push
std
pop
add
inc
popa
dec
gs
pop
popa
loope
shl
das
ins
and
adc
pop
sar
mov
inc
push
or
dec
ror
pop
xor
fld
dec
call
inc
pusha
call
inc
add
add
(bad)
dec
push
xchg
rol
sar
cmps
mov
xchg
fucomi
mov
and
xor
pop
or
xchg
idiv
shl
mov
fld
(bad)
test
out
fsub
sub
xchg
aas
adc
sbb
cmps
repnz
mov
pusha
push
push
xchg
cmps
(bad)
jp
iret
fnstcw
outs
adc
pop
popa
test
sub
inc
in
add
cmps
arpl
dec
loop
mul
push
mov
aam
pop
sbb
sbb
sbb
cs
sbb
js
test
fimul
push
xchg
rol
and
mov
lods
pop
inc
pop
pop
cwde
dec
scas
mov
bound
push
jge
aad
push
cli
or
icebp
ret
out
popf
sbb
loope
aad
xchg
mov
in
cmp
mov
shl
cld
add
xchg
std
cmp
inc
test
xchg
js
xchg
ret
mov
das
mov
bound
aaa
in
in
sub
bound
icebp
int3
ret
pop
je
sti
sub
clc
fnstcw
fdiv
enter
mov
hlt
sbb
neg
std
je
lds
iret
adc
adc
xchg
jne
test
ins
xchg
jg
fadd
dec
ins
retf
add
lock
loopne
out
mov
cmps
dec
or
and
retf
pushf
jl
pop
scas
push
in
out
xlat
in
pop
repz
sbb
pop
pop
ror
push
das
movs
add
dec
dec
sub
jmp
or
mov
(bad)
shl
arpl
hlt
pop
call
sbb
bound
mov
fdiv
sbb
icebp
adc
out
xchg
sbb
inc
dec
jl
mov
pop
(bad)
imul
xor
xlat
add
lock
jne
(bad)
ja
rcl
dec
inc
and
fst
pushf
or
pop
fnstcw
xchg
sub
add
cmp
shr
inc
mov
nop
gs
in
(bad)
ss
ss
lods
ret
fdiv
std
pop
stc
jmp
mov
js
icebp
fsub
sbb
push
ja
das
mov
imul
pop
retf
and
xor
or
mov
(bad)
dec
jmp
xlat
iret
in
cdq
mov
push
push
aam
int
jge
iret
jmp
test
xor
das
jnp
mov
mov
mov
inc
and
or
(bad)
cli
xchg
rcl
repz
repz
push
cmc
js
jge
add
add
push
mov
test
retf
movs
mov
inc
sub
gs
(bad)
cwde
out
sar
xor
imul
clc
scas
daa
(bad)
mov
or
xlat
adc
fisubr
loope
loopne
inc
pop
sbb
xchg
imul
enter
fistp
jecxz
shl
cmp
cli
xchg
and
adc
pop
adc
sti
bound
aam
xchg
pop
xlat
dec
fcom
mov
xchg
(bad)
ffreep
mov
inc
lods
mov
retf
fistp
dec
dec
sar
mov
adc
fadd
ret
lds
sbb
gs
int
xor
xlat
ins
fsubr
in
jl
inc
and
push
mov
cwde
nop
div
push
shr
jl
(bad)
xchg
mov
push
jge
jmp
cmp
scas
jl
mov
cmps
push
cmp
sub
mov
in
or
xor
addr16
sub
jmp
xchg
sbb
call
xchg
xchg
xchg
in
dec
fstp
mov
mov
mov
or
int3
cs
loope
fst
mov
mov
mov
cmp
stc
stos
xor
aad
pushf
jge
pop
call
lahf
es
sbb
push
cdq
lods
out
add
mov
mov
jle
stos
out
inc
loope
push
adc
mov
aas
cmp
jno
ds
jmp
ret
pop
shl
dec
xchg
rcl
xchg
mov
sar
mov
mov
jmp
lods
adc
xchg
in
jae
or
inc
mov
sub
sub
imul
dec
push
mov
shl
popf
outs
mov
lods
inc
std
mov
call
push
push
mov
(bad)
stos
add
fdiv
jecxz
stos
and
push
stos
test
sahf
jge
movs
jge
shr
jns
fcomp
in
cmp
jp
push
in
mov
adc
jbe
jbe
shl
pop
pop
out
bswap
or
clc
inc
jmp
jns
xchg
mov
icebp
mov
outs
or
js
push
popf
mov
out
call
mov
test
aas
mov
push
inc
xchg
dec
mov
sub
hlt
push
in
adc
sbb
mov
xor
dec
or
inc
in
mov
xchg
outs
pushw
mov
and
ficomp
aas
xchg
dec
dec
fstp
sub
xchg
jae
xchg
jl
pop
and
ret
stos
sti
das
loop
(bad)
mov
inc
out
jbe
adc
jle
inc
(bad)
test
ins
cmp
fistp
jbe
inc
in
or
icebp
ret
jns
repz
test
bound
mov
cmp
adc
ret
mov
push
xchg
hlt
mov
cmc
push
mov
xor
sti
dec
and
fdivr
iret
(bad)
dec
aaa
cmp
mov
pop
jae
add
jo
mov
aaa
push
bnd
ret
jo
imul
in
sbb
sub
in
jmp
dec
in
push
(bad)
mov
sbb
pop
sbb
mov
mov
(bad)
imul
pushf
add
inc
add
jno
xchg
mov
repz
(bad)
stos
mov
add
inc
jbe
adc
pusha
daa
pop
jg
push
mov
aam
retf
push
push
ja
jnp
jnp
xor
jns
inc
test
fcom
dec
add
xchg
je
sub
js
cmp
ficom
(bad)
ror
jb
psllq
dec
(bad)
cmp
jo
mov
rol
jnp
out
cli
popf
push
inc
jg
cmp
mov
sub
push
dec
or
pop
mov
sub
push
popa
xchg
scas
or
mul
lods
cdq
in
sbb
outs
(bad)
push
mov
fimul
ins
push
push
mov
push
loope
mov
enter
inc
in
push
nop
adc
repnz
or
pushw
mov
sar
or
inc
es
ror
jmp
push
pop
(bad)
xchg
pop
jle
icebp
scas
and
hlt
jne
inc
enter
out
(bad)
repnz
cmc
cwde
ins
adc
iret
jbe
ja
out
xchg
mov
(bad)
les
dec
mov
cmps
pushf
bound
pop
lods
add
jb
add
cli
into
pop
mov
nop
xchg
xchg
jl
dec
icebp
add
dec
add
inc
push
mov
push
scas
imul
call
mov
fisub
daa
jbe
pop
inc
mov
sbb
xchg
xchg
xlat
outs
mov
adc
jne
or
into
push
push
(bad)
pop
pop
push
inc
jnp
(bad)
loopne
and
push
mov
sbb
mov
mov
lods
imul
cld
add
ret
ficomp
sub
mov
sub
out
and
cwde
stc
xor
ret
push
retf
mov
ror
out
ins
or
jns
rcr
movs
repnz
mov
test
inc
int
imul
clc
sub
lods
bnd
popw
repz
pop
xor
rcl
push
sbb
mov
pop
je
inc
mov
std
retf
mov
xchg
aam
jecxz
sti
mov
mov
fisub
jle
fldcw
cs
mov
(bad)
mov
cli
push
je
push
lock
lds
push
dec
add
adc
stc
(bad)
or
add
mov
stc
inc
sub
cmp
jno
pop
xor
nop
fbld
mov
jns
mov
push
std
outs
and
xor
mov
fist
jmp
adc
xor
in
cmps
test
pop
push
mov
xchg
aas
adc
icebp
dec
jp
loopne
mov
gs
cs
mov
popf
push
(bad)
fiadd
test
cwde
sbb
inc
sbb
jae
sahf
and
stos
mov
inc
xor
mov
sbb
mov
and
pop
gs
out
or
in
inc
cdq
mov
mov
inc
mov
mov
jbe
jb
add
push
sub
lods
adc
scas
dec
in
outs
adc
int3
add
fs
push
ss
mov
outs
mov
adc
and
jp
adc
pusha
ret
out
xor
add
mov
inc
adc
test
push
xchg
int3
cmp
push
mov
movs
shl
pop
jmp
jl
pop
(bad)
xor
es
ins
jecxz
callw
mov
push
xlat
sbb
mov
xchg
xchg
push
mov
lea
cmps
int3
mov
fadd
cmp
addr16
ins
ins
add
sahf
and
dec
inc
lea
(bad)
dec
mov
je
and
adc
jge
(bad)
mov
or
outs
jb
stc
mov
inc
dec
jns
jmp
gs
mov
jne
add
scas
ds
jecxz
loopne
push
push
pop
mov
lds
mov
cmp
aaa
jge
fist
shl
dec
stc
xchg
rcr
pushf
cmp
dec
push
pop
lds
stos
rcr
iret
jp
pop
lock
sar
stos
test
into
jns
mov
ins
push
xchg
mov
jecxz
fwait
xor
dec
push
adc
jge
push
push
ficom
test
shl
xchg
add
sub
mov
jmp
int3
mov
sbb
iret
cld
fdivr
rol
inc
test
cli
aas
(bad)
push
stos
xor
xor
sbb
mov
cmp
xor
jmp
jp
ret
xor
cmp
add
into
mov
cld
add
mov
sub
xchg
mov
shr
int
sub
(bad)
pop
pop
mov
test
ja
inc
mov
addr16
aam
call
(bad)
push
cdq
sub
cs
clc
dec
popf
inc
and
dec
dec
cwde
(bad)
mov
repnz
and
pop
sbb
sbb
pop
aas
fxam
ins
pop
(bad)
cmp
out
adc
shl
clc
xchg
stos
or
add
lods
ds
or
and
in
cdq
mov
(bad)
popf
mov
aad
out
fiadd
dec
int3
out
mov
aaa
mov
sbb
cdq
imul
push
dec
addr16
or
cld
mov
sbb
xor
shl
nop
xchg
jbe
test
mov
mov
mov
dec
movs
mov
arpl
mov
mul
push
outs
outs
loopne
add
add
retf
sub
outs
mov
jg
jl
push
ds
pop
inc
xchg
lds
jl
push
xchg
and
cmp
push
adc
jmp
ins
mov
ret
ins
mov
aam
and
add
imul
imul
je
bound
cmc
fsub
sbb
fistp
sub
leave
sub
ss
mov
aad
mov
jmp
repz
pop
stc
inc
not
jmp
xchg
int
movs
mov
aad
fiadd
retf
jl
cmp
mov
xchg
pop
inc
in
inc
fnstenv
outs
iret
mov
stos
or
or
pop
mov
sub
or
mov
sbb
cdq
sbb
jp
and
das
adc
dec
ja
dec
jnp
xor
adc
dec
out
dec
mov
jns
stc
sbb
js
dec
add
jp
xlat
out
push
and
jb
ret
dec
test
sar
cwde
cmp
cmp
pop
cmps
aas
push
addr16
leave
mov
xchg
or
dec
push
stos
mov
adc
call
cmp
inc
test
outs
fild
shl
and
arpl
sub
mov
in
mov
mov
ins
aaa
adc
pop
pop
aaa
pop
fucomi
clc
std
add
addr16
mov
cli
or
push
mov
sar
repz
in
xor
(bad)
pop
dec
fs
sbb
jle
mov
push
dec
dec
ffreep
sub
xchg
inc
cld
movs
add
jno
pop
xlat
add
scas
cmp
imul
jne
aas
mov
cli
dec
pop
cdq
std
shl
enter
push
mov
mov
scas
or
jnp
lahf
inc
mov
shr
sbb
movs
sbb
pusha
fld
or
nop
sub
push
scas
imul
push
in
mov
add
and
rcl
(bad)
out
xor
pop
outs
add
xor
pusha
popa
movs
aaa
mov
pop
lahf
sbb
sub
jb
xor
jmp
cwde
mov
xor
adc
xchg
pop
pop
cmp
mov
fs
and
adc
and
imul
mov
out
rcr
rcl
and
jnp
out
das
retf
sub
popa
loopne
fisub
gs
sti
cwde
push
add
repnz
jmp
aad
ret
int
add
fdivr
xchg
das
loop
pusha
les
loopne
pushw
ret
jmp
mov
inc
loopne
pop
push
dec
bound
fstp
sub
imul
dec
lea
cmp
test
adc
add
mov
sbb
and
loopne
loopne
jo
jo
add
fbstp
sbb
adc
mov
stos
sbb
call
mov
cmps
bound
xchg
jne
dec
dec
cli
pop
das
je
outs
ror
nop
xchg
lds
stc
es
fidiv
ficom
or
(bad)
outs
jns
loope
dec
stos
mov
mov
out
jmp
sub
jmp
lods
cmp
dec
pop
bound
pop
jae
iret
dec
pop
data16
and
out
mov
jecxz
ins
jmp
cli
jb
sbb
ss
sahf
fsub
lock
push
inc
xor
call
jmp
push
pop
sub
movs
push
sbb
retf
je
movs
mov
jb
clc
imul
aam
stc
xchg
cwde
nop
inc
in
jmp
clc
adc
mov
xor
inc
mov
lea
and
xchg
mov
jb
js
adc
add
dec
out
outs
pop
cmp
mov
and
lds
mov
lds
jecxz
lds
popf
into
push
pop
dec
sbb
sbb
or
mov
loope
cld
fisubr
or
push
movs
mov
test
aam
inc
mov
cmps
mov
retf
mov
inc
xlat
inc
add
int
mov
(bad)
push
push
mov
sbb
inc
call
or
sti
lods
in
xchg
rcl
enter
xchg
add
mov
pushf
cmps
jge
data16
or
xchg
and
scas
cmp
ins
mov
das
retf
cld
or
pop
cmp
push
jge
push
mov
jmp
outs
jno
or
cmc
(bad)
ins
clc
push
test
add
inc
or
adc
push
hlt
test
sub
mov
mov
pop
test
mov
call
dec
xor
les
pusha
ins
sub
cdq
neg
sbb
ss
jnp
adc
add
push
aam
arpl
(bad)
mov
push
push
push
push
into
popa
mov
je
sbb
pusha
ror
ins
sub
inc
int3
jmp
lahf
or
call
les
and
test
push
pushf
ss
mov
addr16
mul
xor
dec
jnp
test
pop
mov
fwait
and
repnz
out
cld
das
push
or
mov
push
call
in
(bad)
sbb
fcmovu
sbb
fiadd
fst
imul
in
mov
mov
xchg
(bad)
into
cmp
or
lds
lods
into
(bad)
ds
xchg
inc
aad
test
mov
int
add
and
push
jp
lods
loopne
adc
push
pop
mov
popa
and
inc
pushf
inc
loop
(bad)
mov
pop
fxch
add
cli
loop
mov
xor
mov
sbb
in
clc
or
sbb
enter
add
pop
add
mov
xchg
and
test
scas
xor
pop
mov
out
push
pop
retf
mov
mov
(bad)
cmp
repz
mov
adc
or
pop
cmp
dec
pop
and
out
vhsubpd
ins
movs
inc
cli
sahf
add
test
mov
icebp
sti
mov
sub
cmp
ret
mov
or
push
sub
jg
add
sub
push
sti
add
push
xor
inc
cmp
cmp
mov
xor
and
mov
pop
sbb
fimul
sbb
inc
popf
cmp
lods
jo
stos
retf
ret
rcl
inc
inc
jle
aas
int
repz
dec
aad
push
test
mov
data16
mov
pop
(bad)
in
test
mov
cmps
test
add
sub
inc
xor
or
push
add
cmp
lods
test
int
pushf
pop
ins
ins
pop
inc
hlt
outs
bound
jne
lock
mov
sbb
call
pop
in
inc
retf
and
dec
inc
or
sub
inc
sti
inc
cmc
stc
in
mov
inc
push
adc
(bad)
jnp
mov
call
outs
and
xchg
sbb
fimul
jmp
in
cwde
add
dec
test
mov
mov
jmp
lds
sbb
dec
btr
ins
inc
rcr
xrelease
cmp
jmp
ret
xor
icebp
and
test
mov
ins
sahf
rcr
jge
in
xchg
nop
jle
fcomp
out
or
(bad)
push
xor
aad
je
rol
(bad)
in
stos
sbb
or
imul
mov
push
or
push
push
mov
movs
ret
mov
dec
mov
out
dec
push
mov
call
arpl
push
(bad)
call
sub
sbb
jmp
jp
call
sbb
xchg
mov
mov
adc
inc
ins
popa
rcl
sti
xchg
add
or
dec
cmp
lods
mov
xchg
js
xlat
or
dec
sti
inc
jbe
push
mov
sar
ret
fmul
or
int
dec
je
xor
sub
dec
loopne
pop
xchg
fwait
or
adc
xor
clc
cmp
mov
ins
lahf
jae
cmp
lods
jns
xchg
inc
add
adc
lds
inc
xor
dec
pop
mov
push
jmp
jecxz
xor
out
in
test
dec
jne
cdq
jns
retf
clc
push
mov
leave
fstp
pop
aad
mov
lds
paddw
lds
int
ret
movs
lock
bound
pop
jo
xchg
lods
leave
shl
(bad)
jmp
jo
cmp
rcl
sbb
out
ja
xchg
mov
cmp
cmp
popf
add
mov
adc
pop
movs
mov
rcr
xlat
js
sar
pop
inc
sub
xor
aaa
jno
pop
retf
or
(bad)
popa
sbb
fmulp
inc
mov
leave
addr16
(bad)
dec
fwait
inc
fsub
xor
mov
push
jle
jp
push
sub
aaa
sbb
gs
jp
std
mov
inc
out
push
(bad)
mov
or
js
pop
das
jns
or
xrelease
dec
sub
cmp
mov
sub
in
cmps
push
jns
loopne
mov
scas
outs
movs
xchg
push
add
sbb
mov
jle
dec
adc
cmp
jmp
jg
shr
mov
dec
adc
fwait
mov
push
jl
pusha
sub
fdivrp
mov
(bad)
lds
lahf
in
inc
and
adc
sahf
retf
inc
das
xchg
and
cli
addr16
pop
jb
std
jne
out
shl
out
lods
mov
(bad)
popa
or
es
and
clc
aam
mov
push
push
xchg
in
adc
push
or
icebp
pop
inc
vzeroall
sbb
xchg
fwait
push
sbb
inc
pop
in
stos
(bad)
xor
add
add
mov
out
xor
push
sub
push
pusha
pushf
stc
mov
and
bound
inc
mov
jne
fldcw
or
adc
pop
clc
dec
out
std
stc
add
int
inc
nop
in
push
jmp
add
bound
cwde
xchg
cmp
loopne
and
xor
shl
stc
aam
jp
push
call
add
out
mov
ror
cmc
std
(bad)
jle
clc
std
ss
stos
div
(bad)
fdivr
inc
xchg
adc
je
movs
xor
js
mov
xor
fiadd
sub
mov
cmp
pop
imul
sub
push
cmps
stc
xor
pop
shl
out
pop
ss
xchg
mov
mov
call
call
leave
scas
ret
rcr
push
movntq
inc
and
outs
repnz
fist
add
(bad)
aad
addr16
ins
scas
mov
cmp
mov
repz
int3
(bad)
mov
cdq
fsub
aas
test
inc
clc
xchg
mov
and
and
push
in
scas
xchg
push
pop
in
sub
inc
arpl
test
push
jbe
and
or
and
mov
aaa
xchg
test
leave
jg
lahf
ret
in
dec
and
sar
dec
ins
sub
sbb
arpl
cwde
sbb
imul
adc
mov
popa
outs
or
ja
test
dec
xchg
cli
out
pavgb
sahf
mov
(bad)
repz
push
mov
jae
mov
dec
fs
jne
pop
jp
dec
into
out
inc
je
push
pop
movq
xor
sbb
loop
inc
mov
and
jne
leave
push
dec
or
test
cmps
jo
xor
add
jno
dec
frstor
jbe
push
icebp
sahf
jae
fdiv
ds
cmp
sbb
push
jmp
neg
daa
inc
ins
and
arpl
ret
xchg
and
adc
and
fldenv
test
retf
push
push
add
mov
clc
xor
adc
popa
outs
rol
adc
mov
mov
aad
loop
inc
sar
jns
enter
call
sbb
dec
popf
cwde
mov
pop
dec
mov
or
jp
movs
outs
pop
xor
clc
ins
cmp
inc
mov
scas
jg
(bad)
mov
clc
not
(bad)
ja
adc
sub
sbb
jns
fnstsw
dec
bound
test
stos
imul
inc
iret
push
mov
mov
sbb
jae
stc
push
and
xchg
sbb
xor
or
xchg
ret
cmps
mov
fsubr
inc
(bad)
addr16
jecxz
mov
sub
popa
aad
js
icebp
pop
cmp
or
inc
inc
dec
sub
mov
ins
adc
scas
mov
pop
lea
cmc
adc
add
jno
sub
out
or
push
(bad)
mov
std
outs
push
setp
sbb
jno
cwde
outs
rol
fwait
imul
pop
mov
rcr
out
stc
fdivr
mov
pop
jle
in
add
inc
fsubrp
dec
or
call
and
cmps
mov
push
into
in
test
imul
out
pop
imul
pop
sbb
in
retf
push
and
cmps
sub
add
add
jecxz
lea
or
xchg
test
jmp
sbb
sbb
adc
popa
jne
ja
jl
sub
call
pusha
ret
cwde
lods
cmp
xchg
and
ret
adc
aas
mov
(bad)
xchg
test
push
or
pop
imul
xlat
cmp
icebp
adc
(bad)
fcomp
aad
inc
gs
es
aas
xlat
int3
push
fidiv
scas
movs
and
daa
add
xor
in
or
lods
inc
inc
inc
inc
cdq
and
push
push
mov
movs
ds
or
mov
pop
xchg
jp
aad
scas
mov
aas
mov
arpl
sbb
push
inc
xor
ss
xor
retf
test
sub
push
push
sar
xor
ret
add
mov
sar
stos
push
cmp
adc
pop
mov
push
sub
mov
jl
cmp
push
add
(bad)
or
js
or
cmp
scas
ss
jmp
push
and
ficom
inc
dec
aaa
imul
dec
xor
test
test
imul
push
mov
push
bound
inc
jnp
retf
cld
adc
push
icebp
sbb
push
xchg
jbe
sbb
lahf
push
xor
nop
fwait
mov
xor
retf
sbb
data16
xchg
stc
xchg
sahf
jmp
(bad)
imul
rcl
push
out
fcom
dec
dec
enter
xchg
mov
dec
std
inc
pop
mov
and
mov
test
dec
addr16
out
inc
(bad)
mov
cwde
or
push
dec
(bad)
and
sar
xchg
push
in
cmps
lock
and
mov
mov
and
aaa
lds
std
in
popf
push
stos
jbe
xchg
fbld
mov
push
mov
push
mov
or
or
aam
xchg
mov
data16
or
lods
lea
mov
inc
xor
jmp
sub
mov
(bad)
ja
scas
jbe
fcomp
or
cmp
stos
jecxz
das
sub
ins
inc
xor
push
dec
pop
lea
adc
push
and
ficomp
clc
cmps
(bad)
pop
loopne
je
mov
ins
inc
and
stos
mov
and
xchg
mov
adc
rcr
jmp
scas
mov
into
outs
lahf
ins
push
ret
add
inc
test
test
xor
das
ror
test
add
or
(bad)
clc
lods
sbb
mov
cmp
adc
pop
adc
popa
pop
pop
fsub
push
cwde
mov
retf
xchg
mov
aad
cld
jmp
mov
call
xchg
xchg
mov
idiv
mov
mov
aas
mov
xchg
jge
lods
pop
add
test
push
iret
adc
jo
fmul
ficomp
add
push
(bad)
cmps
mov
add
inc
jo
mov
mov
iret
pop
inc
and
lahf
inc
jl
cmp
mov
mov
and
lea
push
cwde
pop
clc
addr16
push
adc
(bad)
loopne
ret
shl
pusha
sub
mov
out
and
movs
push
adc
jmp
and
enter
out
inc
mov
popa
inc
xchg
push
(bad)
cmc
(bad)
shr
or
stos
cmp
fwait
into
xchg
xor
dec
test
mov
push
xlat
movs
retf
inc
or
dec
fist
pop
pop
mov
lahf
dec
call
and
out
mov
and
out
or
cwde
shr
adc
pop
mov
ins
ins
and
pop
cmps
popa
or
(bad)
adc
test
or
jle
es
mov
mov
out
xchg
iret
sbb
ja
pop
pop
add
push
push
or
(bad)
in
mov
or
jg
pusha
jns
push
repz
mov
fwait
arpl
clc
rol
enter
and
mov
test
mov
sub
inc
loopne
inc
scas
nop
icebp
int3
xor
test
xchg
ja
test
fistp
lods
ret
jge
pop
(bad)
mov
push
outs
ror
sub
sbb
mov
mov
vmovntps
outs
ror
mov
out
sbb
jbe
cmp
lea
fbstp
ins
clc
cmc
rcr
push
push
jle
pop
test
push
mov
mov
or
pop
ja
ficomp
in
loop
cmp
cwde
pop
jmp
call
push
or
daa
xor
xchg
xor
jns
adc
cdq
mov
sub
mov
fld
aam
mov
mov
jb
pop
popa
out
fadd
int
mov
fsubr
sbb
and
ins
div
cli
je
in
sbb
lea
inc
loope
jmp
xchg
mov
in
in
inc
cld
cmp
mov
xor
cmp
xchg
xchg
sbb
inc
dec
sbb
pop
je
xor
fdiv
dec
sti
mov
repz
jmp
adc
jae
outs
ins
nop
aad
sub
iret
pop
outs
(bad)
pusha
cmc
dec
out
bound
xor
cli
inc
test
mov
jbe
mov
fs
mov
fisubr
out
jecxz
(bad)
loopne
push
fistp
cli
out
enter
pushf
test
push
ja
dec
ret
gs
or
cmp
test
and
sub
add
in
shl
jo
leave
sub
mov
movs
mov
sub
sub
sti
xchg
adc
mov
and
call
leave
inc
std
ins
rcl
dec
repz
dec
test
inc
pop
push
adc
sbb
jb
test
fsubr
sahf
inc
into
retf
out
xchg
add
ins
jg
xor
retw
(bad)
stc
and
int3
shl
gs
mov
push
call
(bad)
gs
jne
fisub
dec
dec
and
dec
sub
scas
leave
and
jnp
push
or
stc
out
cmp
push
cmp
cmp
rcl
push
add
push
test
sbb
in
xchg
push
bound
(bad)
mov
mov
fnstenv
shl
mov
push
stc
in
into
jno
mov
dec
and
aad
fs
xchg
jl
mov
mov
pusha
rol
jne
stc
es
sbb
shr
jo
lea
xchg
inc
sbb
scas
mov
cmp
out
loop
pop
adc
ret
in
ja
clc
out
test
pop
cmp
fcomp
(bad)
ds
fidiv
jecxz
idiv
sub
outs
daa
jns
push
add
ror
test
(bad)
pop
mov
cmps
call
xchg
push
xchg
and
scas
pop
stos
and
imul
fwait
xor
bnd
scas
push
sti
scas
rol
loopne
cmc
xchg
and
xor
cmp
outs
cmp
jbe
cmc
imul
push
mov
jbe
jp
dec
(bad)
and
and
lock
scas
add
stc
sbb
mov
mov
add
dec
(bad)
(bad)
adc
jo
inc
dec
push
xor
loope
sbb
scas
sub
fnstenv
jmp
test
mov
mov
add
push
aam
jecxz
pop
jg
fiadd
push
out
push
sbb
sub
pusha
outs
cmc
das
test
adc
lods
xsaveopt
aad
(bad)
(bad)
loopne
std
mov
leave
cmp
cwde
das
std
and
pop
inc
push
mov
mov
push
mov
dec
fsub
pop
fld
mov
mov
leave
add
in
xor
iret
mov
cmp
jne
pop
aaa
jge
and
(bad)
daa
push
call
es
adc
adc
push
lds
jmp
or
leave
lock
fxch
or
hlt
xor
jle
mov
mov
mov
xchg
dec
push
mov
sbb
ins
jo
cmp
fnstcw
aad
adc
ror
loop
lds
fs
jle
sar
(bad)
mov
cmp
cmps
jne
fcomp
hlt
out
jl
mov
ficomp
(bad)
icebp
dec
adc
test
aaa
xor
in
pop
sub
int
dec
inc
in
inc
fild
outs
repz
cmp
fimul
es
mov
jno
and
jnp
or
or
xchg
pusha
and
inc
pop
pop
into
cmp
jg
int3
lods
push
cmp
inc
mov
pop
std
mov
popf
push
aaa
pop
and
inc
add
cmp
and
fwait
aaa
lods
xchg
jmp
and
pop
imul
fistp
sar
ss
call
pop
mov
div
sub
(bad)
pop
inc
jmp
sub
cmc
imul
jp
lock
cmps
pusha
mov
sub
in
xchg
jb
dec
jno
jo
mov
add
push
(bad)
ss
je
xor
ins
mov
mov
inc
cmp
(bad)
bnd
sbb
call
dec
aad
jb
(bad)
mov
sub
out
lods
push
imul
int3
je
movs
mov
cli
jp
inc
jae
stos
ja
jg
sahf
dec
sahf
or
cmp
dec
hlt
mov
jmp
cs
sub
int
shl
jmp
aas
jle
mov
pop
adc
add
(bad)
dec
sar
call
sbb
movs
lahf
mov
adc
sar
mov
xlat
popa
cmps
das
sub
dec
fild
pop
mov
inc
sbb
jge
add
stos
mov
xor
and
fisubr
inc
loope
pop
test
lods
sbb
ins
adc
in
pop
xor
scas
xor
push
mov
add
aad
push
sbb
add
retf
sbb
das
add
fstp
dec
xchg
imul
or
ret
and
std
mov
and
sub
xchg
add
push
sub
cwde
xor
in
jle
push
cmp
rcr
xchg
dec
aam
pop
xor
popa
push
inc
fdiv
push
stc
into
sbb
add
inc
mov
mov
out
les
dec
jmp
pop
jecxz
xchg
jnp
pop
mov
ror
clc
jmp
(bad)
scas
test
pop
sbb
inc
stos
push
ins
fdivr
out
sbb
xchg
xchg
cmps
lea
mov
test
dec
sbb
or
out
mov
loope
or
push
push
retf
pop
push
(bad)
jns
cmps
popa
stos
jle
cmp
rcl
xchg
stos
push
fstp
(bad)
repz
neg
pusha
dec
ss
mov
cmps
enter
int3
das
or
mov
in
cli
push
(bad)
mov
sti
jb
push
and
mov
xchg
movs
repz
and
lods
push
push
xchg
xor
mov
adc
je
ss
jne
out
xor
cmp
pop
sti
aad
das
(bad)
pop
sub
es
inc
mov
jmp
adc
adc
lds
shl
shl
pop
sbb
int3
and
or
je
xchg
ins
xchg
arpl
pop
mov
out
clc
xchg
(bad)
js
jp
sti
push
jl
outs
xchg
mul
adc
sbb
mov
xchg
stos
sbb
mov
rol
bound
scas
mov
pop
inc
in
xchg
xbegin
xor
sbb
xor
pusha
pop
call
or
xchg
push
cmc
jno
sbb
imul
js
sbb
loopne
mov
call
pop
jns
jmp
sbb
inc
jmp
rcr
fnstenv
push
push
cmps
call
pop
sub
mov
popa
aas
aad
mov
and
sub
xor
cmp
and
call
dec
fdivr
mov
sub
icebp
push
popa
movs
add
mov
dec
mov
push
xor
mov
addr16
mov
xchg
(bad)
sbb
xchg
add
jns
outs
enter
inc
push
call
sbb
inc
cli
add
jne
in
icebp
jmp
jp
pop
fucomp
adc
popa
ja
cmp
out
out
test
jae
arpl
shl
jp
js
jb
int
pusha
rol
pop
or
mov
in
xchg
sub
add
cmps
(bad)
in
enter
jg
int3
leave
xor
cmp
pop
mov
add
jbe
xor
out
sbb
add
test
xchg
mov
adc
hlt
dec
or
inc
js
scas
sub
push
jae
fstp
adc
jle
enter
add
stc
jmp
mov
leave
mov
out
cmp
inc
scas
faddp
xor
inc
jne
ja
add
scas
fdivr
inc
cmc
add
call
das
nop
mov
or
add
clc
cli
inc
out
pop
outs
out
and
sti
push
lods
xchg
cmp
xchg
xchg
in
aad
pop
jne
cmp
loopne
xor
or
retf
(bad)
out
inc
(bad)
or
mov
imul
cli
xor
loopne
or
outs
dec
push
dec
and
cdq
add
ins
inc
(bad)
jl
dec
pop
push
aaa
inc
push
xchg
mov
cmp
xor
xor
cli
stos
jmp
dec
pop
add
cli
ret
lahf
retf
pop
ret
mov
cmp
push
fwait
ret
repz
dec
bound
fimul
xchg
std
mov
mov
dec
icebp
sar
shl
mov
(bad)
dec
jno
sbb
mov
or
in
jecxz
lds
ja
cmc
xor
jge
xor
pop
or
hlt
repnz
lea
mov
retf
imul
or
sbb
mov
sub
cmps
dec
shl
in
in
xchg
aas
xchg
mov
cmp
mov
fsub
leave
push
push
cmp
pop
stos
push
jnp
adc
inc
arpl
adc
xchg
ja
sub
xor
outs
(bad)
mov
loope
rcr
out
jb
fisttp
jecxz
int3
jb
mov
cli
test
mov
and
ret
inc
(bad)
mov
push
out
mov
jle
(bad)
push
mov
dec
mov
jbe
mov
(bad)
or
repnz
pop
div
pushf
loopne
repz
push
(bad)
rcl
cmp
and
xor
jb
xchg
ds
pop
and
jecxz
lahf
sub
mov
sbb
clc
cmp
ins
xchg
sbb
jno
jmp
std
(bad)
ret
pop
lock
push
jno
sub
lds
add
or
add
push
push
jmp
mov
push
das
arpl
xor
mov
mov
inc
dec
outs
lods
lods
or
cmc
mov
inc
aas
test
fstp
mov
sbb
xchg
bound
cmps
push
or
rcr
les
adc
lock
ret
js
mov
jle
mov
and
lahf
outs
fld
inc
mov
mov
test
xlat
xchg
test
or
adc
movs
dec
push
inc
add
fimul
js
hlt
hlt
push
pop
aas
jecxz
mov
jmp
fiadd
adc
push
lea
jmp
push
jecxz
cmp
jg
jecxz
or
pinsrw
out
sahf
xor
ss
inc
cwde
lods
fsqrt
je
and
dec
shr
pop
popf
push
mov
das
shl
or
pop
ret
mov
mov
mov
retf
out
out
sub
ins
ss
mov
inc
arpl
in
stos
(bad)
fmul
fucomp
xchg
mov
mov
sahf
je
mov
daa
cli
mov
mov
cld
mul
int
or
neg
jp
push
push
and
pop
test
mov
jp
jmp
pop
xor
mov
cmc
pop
cli
cwde
stos
sub
push
call
rcl
ins
pop
or
mov
fdiv
mov
jnp
sub
jmp
dec
cmp
out
sbb
mov
sub
mov
and
push
lahf
les
and
jecxz
jne
outs
ins
xor
repnz
ret
and
rcl
out
cmp
inc
ja
je
iret
jns
in
mov
jae
das
cmp
repnz
fist
movs
sbb
pop
xchg
mov
sbb
push
and
sti
cs
add
test
sub
cmp
pop
jo
xchg
jae
jo
ret
jns
vlddqu
mov
push
mov
mov
xchg
imul
dec
sbb
std
test
dec
fild
popf
popa
inc
out
sar
cmp
imul
jno
aaa
push
les
fiadd
xchg
dec
pusha
mov
jo
pop
addr16
sub
sbb
mov
cmp
adc
ja
inc
cwde
dec
add
mov
mov
mov
ds
jg
fld
cmc
test
mov
dec
cmps
push
loop
(bad)
call
jmp
retf
out
je
and
lods
dec
vpsrlw
repz
(bad)
jo
into
out
pop
dec
or
fs
xlat
mov
mov
sar
sbb
jmp
imul
out
ds
leave
inc
mov
xor
into
sahf
dec
movs
and
imul
(bad)
or
dec
loopne
fld
mov
jg
adc
sub
in
retf
retf
push
into
or
mov
(bad)
dec
fisttp
push
xchg
les
jl
dec
jmp
push
adc
dec
mov
sub
or
cld
lods
sub
hlt
loopne
jg
push
rcl
ror
mov
je
loop
je
push
hlt
and
mov
pop
ja
dec
add
mov
sbb
js
cmp
xchg
adc
push
(bad)
dec
dec
push
aad
mov
cli
call
adc
test
or
jbe
shr
fxch
dec
cmp
rcl
adc
pop
into
cli
cmp
adc
jae
push
push
fadd
ret
call
xor
(bad)
xor
pop
pop
pusha
ds
add
cdq
dec
jle
in
push
clc
mov
fwait
mov
xchg
jg
div
add
xor
leave
mul
iret
adc
mov
push
push
pushf
gs
cmp
xor
bound
inc
je
cmp
in
and
outs
mov
bnd
int
push
pop
jnp
loope
sub
cmp
mov
daa
mov
sahf
popa
aad
pop
mov
call
int3
jne
jmp
out
push
inc
in
(bad)
pushf
imul
neg
(bad)
mov
xor
icebp
stc
pusha
(bad)
je
sub
inc
leave
shr
test
push
adc
fs
popf
pop
adc
cmps
pop
lahf
sahf
rcl
hlt
sbb
xor
jbe
pop
jg
fbstp
call
int3
fldenv
dec
fnstenv
imul
pusha
adc
pop
push
loopne
inc
pop
pop
enter
jae
dec
mov
or
bound
pushf
cmc
ins
or
(bad)
xor
aam
jmp
rcr
xor
mov
rcl
jge
add
push
or
dec
xor
jl
imul
outs
es
mov
push
div
bound
sub
push
cli
mov
aas
xor
mov
cdq
lods
xor
imul
sbb
mov
or
not
pop
ss
mov
mov
popf
lock
pop
stos
mov
aaa
xor
ds
retf
pop
xor
mov
add
push
dec
xor
call
cmp
mov
aad
das
sub
mov
sub
sub
out
(bad)
fadd
fidiv
mov
cmp
je
popf
gs
mov
or
scas
or
rcr
sahf
xor
les
dec
xchg
stc
movs
ds
cmps
imul
add
std
lods
cwde
cmp
mov
fst
xor
push
mov
jns
retf
fnstenv
jp
pop
ret
inc
or
call
xor
call
xor
push
lods
jnp
ins
inc
sbb
sub
(bad)
jl
fiadd
sub
and
jno
push
pusha
lods
sbb
jb
mov
pop
jno
(bad)
daa
mov
loope
dec
mov
jmp
pop
xor
aad
fild
pop
adc
dec
repz
aad
xor
jnp
pop
cmps
xchg
xor
sbb
enter
mov
sbb
mov
mov
adc
neg
sahf
ja
iret
popf
int
mov
cld
push
out
mov
popf
out
leave
popf
and
repz
repnz
stos
mov
add
adc
iret
loope
rcr
out
es
inc
xchg
lods
pop
int3
pop
xor
xchg
(bad)
dec
dec
daa
ficom
cmps
inc
ins
rol
mov
mov
add
cmp
mov
cdq
es
mov
enter
mov
rcl
sub
push
pop
mov
fisub
mov
daa
pop
enter
jg
adc
fiadd
push
or
rol
adc
mov
mov
xor
scas
xor
cmp
rol
push
fdivr
jns
iret
xor
add
mov
xchg
movs
and
out
(bad)
jg
inc
scas
(bad)
push
push
rcr
cmp
pop
mov
(bad)
mov
mov
mov
mov
daa
ins
mov
push
mov
mov
jge
in
push
scas
lods
fcom
fwait
test
leave
cmp
popa
out
cmp
in
lahf
mov
jnp
jge
push
or
mov
rcl
mov
mov
sub
add
jge
int
fdiv
xchg
js
cmp
mov
retf
scas
mov
mov
les
aad
into
jne
cwde
xor
in
inc
lods
mov
in
sar
stos
jge
idiv
xor
sar
jg
xchg
gs
adc
push
int3
inc
arpl
cmp
sub
ret
in
xchg
xor
xlat
add
out
inc
sar
ficomp
mov
sub
add
stos
call
xlat
jmp
mov
lea
lahf
jae
test
ins
mov
pop
hlt
je
dec
dec
movs
into
sub
mov
movs
scas
inc
ja
jecxz
ins
stos
lahf
and
sbb
outs
movs
inc
fdiv
jae
cmc
add
adc
cmp
imul
add
sbb
sbb
jne
ret
cmp
sahf
adc
xchg
sbb
xor
adc
ins
leave
jno
js
aam
dec
mov
pop
cwde
jmp
pop
add
sbb
pop
inc
xor
test
dec
int3
pop
jp
adc
mov
cmp
push
pop
loopne
ret
ins
ins
mov
nop
push
imul
fwait
sbb
ret
or
add
mov
add
dec
int3
inc
cmp
cmps
call
das
dec
(bad)
mul
pop
dec
rcl
sub
fndisi(8087
add
jle
fisubr
inc
test
cmp
test
xchg
dec
sahf
popf
test
fidivr
int3
shl
adc
fwait
push
xor
(bad)
into
push
leave
push
xchg
and
push
test
pusha
or
bound
inc
(bad)
cdq
or
stc
inc
xchg
mov
adc
pop
ss
in
outs
inc
aad
or
add
mov
or
ja
dec
jle
dec
in
movs
jp
mov
mul
inc
inc
mov
or
or
in
adc
sbb
mov
dec
lock
cmps
sbb
xchg
add
(bad)
out
add
aas
inc
aas
mov
lahf
adc
jbe
push
xor
mov
or
std
sahf
push
sti
jle
into
(bad)
dec
pop
add
ret
add
add
fwait
lods
fs
mov
push
aas
jmp
jns
inc
push
jne
jmp
(bad)
fwait
sub
test
mov
lahf
jmp
cmp
or
cmp
and
out
call
mov
fist
adc
cmc
int
enter
and
popf
xchg
cmps
ror
cld
mov
sub
imul
xor
shr
mov
or
mov
call
mov
push
outs
sbb
sbb
pop
jne
or
push
cmps
fistp
hlt
jecxz
imul
dec
(bad)
pop
rol
sbb
and
jecxz
aam
ret
movs
dec
call
data16
and
ja
stos
enter
and
dec
gs
sub
sub
mov
inc
dec
fild
jecxz
jg
sub
mov
dec
retf
cmc
push
aad
and
jmp
dec
xor
sbb
fidiv
retf
cmp
sahf
mov
sbb
ds
dec
jae
adc
cmp
dec
icebp
add
push
cmp
jbe
hlt
aaa
pop
jmp
and
ins
xor
or
xor
mov
shr
imul
hlt
sbb
mov
shr
sub
imul
sbb
inc
add
ins
xor
xor
sbb
pop
mov
and
in
outs
shl
ror
mov
push
mov
mov
or
push
pop
xor
test
add
xor
pushf
retf
bound
dec
xlat
mov
xchg
mov
hlt
dec
(bad)
xchg
mov
cmp
fbstp
aaa
call
pop
and
fiadd
dec
gs
cwde
pusha
push
mov
adc
sub
lock
jns
jle
lds
jmp
jmp
out
sub
push
mov
dec
sub
cmp
jmp
xor
shl
(bad)
out
(bad)
dec
add
es
add
(bad)
dec
add
dec
loope
mov
dec
daa
pop
and
(bad)
psrld
add
in
call
xchg
cdq
push
push
aaa
fisttp
lahf
lods
aam
cmp
(bad)
imul
sbb
ins
push
adc
shl
add
test
or
shr
leave
or
mov
std
jge
jmp
xor
xchg
pop
mov
int3
or
jb
test
and
popf
pusha
push
mov
mov
push
cmp
jl
mov
cld
outs
bound
or
jae
adc
jns
mov
es
add
lods
dec
mov
out
mov
push
pop
xchg
add
dec
fimul
jl
xor
int3
xchg
(bad)
and
mov
imul
mov
(bad)
fdiv
fsub
push
jno
mov
jmp
imul
push
jne
into
sbb
fiadd
cmp
push
pusha
xchg
pop
in
pop
cmp
loop
ss
ja
(bad)
xchg
popf
jp
xchg
hlt
int3
push
aas
loopne
xlat
popf
dec
dec
std
cmp
push
mov
test
jecxz
mov
inc
adc
ja
mov
ins
std
fs
lods
repz
sub
movs
jno
jmp
hlt
cmp
add
pop
lahf
ins
sub
neg
scas
loopne
stos
fld
pusha
loopne
sub
dec
in
fcmovb
jg
das
out
pop
or
mov
xchg
test
out
(bad)
ins
and
pop
enter
adc
adc
cdq
neg
cmp
cld
inc
xchg
inc
cmps
shl
(bad)
fst
out
add
push
ror
adc
jmp
test
mov
(bad)
ds
xchg
dec
sub
or
xchg
sti
stos
mov
pushf
cmp
jle
ret
jp
inc
cmps
xchg
cmp
inc
mov
iret
mov
pop
jg
mov
add
push
pusha
gs
lea
add
(bad)
or
int
imul
fistp
test
jo
scas
test
repnz
into
jmp
jbe
pop
sbb
movs
sbb
fnstenv
push
jmp
cmp
cmp
inc
sub
lea
xchg
push
xchg
dec
cmps
mov
cmp
mov
inc
repz
and
out
dec
push
shl
add
pop
aaa
ss
inc
mov
add
dec
pop
(bad)
mov
loope
adc
data16
pop
loop
enter
icebp
mov
test
hlt
aaa
dec
js
jge
nop
pusha
call
and
pop
jl
push
mov
cli
dec
pop
lahf
pop
in
pop
mov
cmps
data16
arpl
repz
iret
and
out
ror
clc
dec
jo
xchg
arpl
mov
push
es
inc
mov
sub
inc
mov
outs
mov
sub
adc
cdq
fwait
out
in
cmp
cmp
sahf
call
das
outs
adc
test
pop
xchg
in
sbb
imul
pop
sub
(bad)
ror
xchg
fisttp
xchg
inc
data16
popf
nop
add
mov
bound
push
sbb
call
cmps
cmps
pop
push
movs
cmps
js
addr16
aam
jmp
imul
test
sub
mov
mov
retf
adc
pop
xor
push
out
out
xor
pop
hlt
cmps
clc
cmps
jg
xchg
daa
jp
out
shl
xor
js
sbb
jmp
cld
shl
jo
dec
mov
pop
mov
inc
paddsb
hlt
pop
aam
fstp
and
mov
sbb
sub
out
std
xlat
je
mov
addr16
scas
call
test
mov
sub
xchg
idiv
iret
mov
inc
mov
xchg
data16
iret
cmp
jb
out
jmp
add
push
call
shl
sbb
arpl
pop
scas
test
mov
and
std
mov
into
das
sub
inc
daa
test
ret
jne
inc
dec
repz
stos
push
loope
cmp
lods
inc
mov
or
and
call
mov
leave
addr16
sbb
sbb
sub
sahf
and
mov
add
fstp
test
imul
dec
add
mov
(bad)
scas
call
call
sahf
dec
pop
call
aaa
and
or
fidivr
imul
mov
cld
les
push
aaa
mov
or
out
cmps
pop
call
stos
jecxz
jecxz
jne
je
retf
jecxz
jno
and
add
cli
cmp
and
add
mov
pop
aas
adc
mov
lock
xor
or
call
xor
inc
pushf
call
mov
fld
fild
pop
push
dec
sbb
lahf
loop
aas
mov
dec
jbe
adc
pop
fistp
fldcw
add
push
enter
sub
sbb
nop
stc
ror
leave
mov
adc
test
dec
and
pop
cdq
mov
dec
call
test
push
je
(bad)
je
retf
adc
aam
cdq
mov
popf
stos
or
fstp
mov
xor
mov
inc
gs
or
mov
push
arpl
mov
bound
lods
cmp
outs
xchg
std
mov
inc
push
fwait
int
cmp
xchg
cmps
and
frstor
or
clc
dec
stos
and
(bad)
retf
lock
adc
mov
add
dec
mov
cmc
lea
lds
fiadd
xor
loopne
dec
mov
inc
es
scas
cmp
adc
scas
xchg
mov
(bad)
sti
(bad)
jnp
push
mov
test
(bad)
aas
jl
dec
sub
outs
shr
xchg
xchg
int3
hlt
and
mov
sub
div
in
out
mov
aaa
clc
adc
xchg
outs
cmp
aad
pop
pop
fadd
daa
add
ds
dec
neg
sbb
mov
dec
push
add
inc
mov
repz
add
add
(bad)
cdq
jmp
out
std
push
scas
repnz
xor
fldenv
ffree
push
mov
rcl
add
xchg
(bad)
shr
xor
or
hlt
or
inc
pop
mov
sbb
adc
cmp
mov
in
jp
mov
sti
popf
shl
jmp
ret
neg
lahf
or
repz
scas
ins
xchg
mov
out
call
jl
mov
call
add
test
cmc
aam
and
sar
adc
std
mov
jno
iret
sti
mov
add
sub
in
aam
cwde
gs
sbb
push
sbb
sub
mov
add
fcmovnb
fild
dec
cmp
sbb
in
adc
call
mov
xchg
cmp
cwde
and
add
jg
popa
add
pop
inc
mul
nop
jne
cmp
(bad)
push
and
pop
ret
(bad)
and
stc
sar
or
inc
cmps
in
dec
sub
arpl
fidiv
jo
ret
fwait
pop
loope
mov
add
rol
icebp
imul
jle
adc
xchg
fcmovnbe
adc
mov
aam
cdq
add
fldenv
scas
mov
inc
cmp
sub
stos
sbb
sub
mov
daa
loop
fsub
ja
dec
push
or
imul
push
inc
jae
cmc
mov
(bad)
in
lea
call
mov
push
cmc
add
inc
push
retf
xchg
pop
cmc
sub
xor
ins
mov
ret
pushf
stos
mov
int3
in
loopne
inc
cmp
or
(bad)
and
cmp
(bad)
lahf
mov
dec
xlat
nop
pop
retf
outs
xor
call
add
(bad)
out
es
add
xlat
imul
xchg
push
xchg
inc
xor
push
mov
and
xor
add
cld
(bad)
movs
hlt
lods
sbb
scas
inc
push
push
xchg
pushf
(bad)
jmp
aas
js
xchg
jb
(bad)
jl
dec
sti
rcr
mov
mov
sar
lds
jg
movs
cwde
outs
add
dec
ins
jmp
ja
mov
push
push
out
ins
rol
jle
pop
pop
cwde
jno
mov
xor
in
inc
sub
(bad)
movs
sbb
sub
das
test
mov
jnp
push
aas
adc
div
jge
call
movs
icebp
daa
mov
ins
addr16
(bad)
mov
outs
fdivr
mov
mov
jmp
mov
and
dec
jge
xchg
or
mov
mov
mov
mov
dec
outs
or
dec
mov
mov
test
adc
xchg
pop
cmp
mov
stc
or
iret
movs
ja
and
lods
ret
jb
dec
addr16
std
loopne
arpl
lea
pop
icebp
add
jo
mov
add
popf
(bad)
push
sub
inc
mov
imul
neg
mul
ins
scas
div
outs
sahf
mov
sbb
xchg
push
fisub
jne
popa
fwait
mov
scas
ss
and
xor
cli
push
push
(bad)
cs
cmp
or
sub
push
xchg
movs
(bad)
lds
cli
(bad)
cmp
pop
or
sti
ror
sbb
push
xchg
call
nop
cmp
jmp
(bad)
imul
loope
sbb
shl
sub
and
out
xchg
loop
adc
add
arpl
add
dec
(bad)
cmp
aam
test
push
rol
jnp
mov
icebp
push
lahf
mov
(bad)
fdivr
adc
js
popa
jnp
inc
add
mov
repnz
mov
xor
add
js
clc
mov
popa
sbb
movs
mov
(bad)
test
(bad)
jnp
jge
(bad)
mov
int
lock
and
cmp
adc
lods
or
cmps
(bad)
fwait
push
scas
cmp
pop
or
std
in
popf
ss
sti
mov
dec
lea
icebp
sbb
sbb
dec
pop
popf
dec
cmp
cdq
sbb
adc
fcmovnbe
or
test
shr
pushf
fs
and
adc
mov
(bad)
mov
icebp
pop
and
test
pop
(bad)
fs
iret
(bad)
lods
leave
loope
mov
dec
inc
(bad)
arpl
xchg
sbb
aad
pop
lds
movs
xor
iret
xchg
(bad)
fndisi(8087
xchg
inc
call
jb
(bad)
pop
or
lahf
pmullw
(bad)
jle
mov
mov
jmp
xchg
sbb
inc
xor
pop
std
xchg
mov
loopne
shl
xor
pop
jae
in
int3
mov
and
shl
out
push
out
cs
cli
xchg
mov
add
popf
mov
test
leave
xlat
add
add
xchg
clc
rol
ins
sub
pushf
xor
shl
sbb
add
scas
sbb
loopne
jle
jo
ficomp
(bad)
fldenv
xor
out
ja
fistp
popf
lods
movs
adc
mov
fld1
data16
das
bound
hlt
addr16
repz
jmp
sbb
add
jmp
in
inc
inc
pushf
sti
fadd
mov
xchg
lods
stc
xor
outs
jecxz
add
cs
scas
fmul
out
test
in
in
jecxz
outs
vpackssdw
retf
xchg
fisttp
sbb
sub
and
jl
push
leave
out
js
xor
(bad)
(bad)
mov
sti
leave
mov
sub
cmp
sub
jle
sbb
dec
out
xchg
cmp
fadd
(bad)
push
dec
pop
sbb
jmp
sahf
(bad)
inc
fld
cdq
jmp
aaa
adc
xor
sbb
xchg
cdq
push
test
fistp
jae
stos
xlat
int
xor
adc
popa
rcr
mov
sbb
cwde
xor
(bad)
mov
scas
(bad)
fstp
leave
movs
stc
enter
popf
jl
xchg
int
mov
jp
dec
fs
test
and
or
movs
pusha
xchg
inc
icebp
aam
retf
or
add
sbb
or
sub
xor
mov
gs
ret
fadd
add
test
rol
xchg
jp
mov
jnp
push
in
loope
dec
push
aas
pusha
inc
lods
sar
mov
div
inc
je
inc
push
dec
aaa
das
bswap
sub
dec
mov
and
or
aaa
jbe
cmps
xchg
xchg
mov
push
imul
movs
pop
test
js
mov
cli
dec
neg
pop
add
stos
pop
cwde
cld
push
adc
movs
arpl
mov
sub
pop
xor
std
dec
fcmovb
pop
lahf
int3
inc
mov
or
lods
sub
outs
sbb
hlt
or
push
dec
popf
mov
cdq
or
cli
test
fild
pop
add
cdq
mov
xor
push
aam
inc
lock
call
mov
jo
or
jg
cmp
pusha
mov
in
push
in
loopne
arpl
push
icebp
cmp
pop
adc
cwde
call
mov
xchg
and
add
push
minps
cs
jmp
push
add
xlat
aam
in
nop
sub
outs
xor
jmp
movs
int3
fistp
xor
jl
push
aad
(bad)
das
inc
test
fist
xor
jcxz
pusha
les
in
cmp
mov
mov
imul
clc
es
push
mov
(bad)
jbe
rol
daa
cmp
aas
stos
addr16
sub
mov
xor
or
mov
jmp
sub
popf
retf
inc
(bad)
loope
dec
dec
stc
es
leave
xchg
inc
nop
imul
cmps
popf
sub
pop
movs
adc
sub
sub
stc
sbb
int
mov
mov
aaa
add
mov
outs
mov
xor
push
or
dec
or
test
cmps
sub
sar
adc
xor
fmul
push
mov
adc
in
mov
dec
xor
or
aas
mov
lock
cmp
inc
add
sub
fwait
pop
or
aaa
mov
outs
fldenv
out
movs
inc
sbb
sub
adc
push
daa
int
dec
inc
inc
ins
jo
sti
sub
mov
or
call
add
ja
ficomp
aad
pusha
jno
sar
sub
mov
out
pop
sub
imul
movs
test
mov
add
cli
inc
cmp
test
or
in
and
sbb
cld
mov
mov
and
(bad)
adc
popf
jmp
mov
sahf
cmp
adc
jg
outs
push
cmp
mov
cwde
out
outs
and
(bad)
cld
call
push
jmp
aaa
ja
push
call
add
dec
dec
cs
jbe
fld
sbb
pusha
stos
sub
mov
adc
loopne
mov
fadd
mov
shl
fimul
mov
retf
js
sbb
sbb
mov
shr
sub
mov
push
stc
out
aaa
ret
out
dec
jg
fstenv
pop
mov
gs
scas
mov
mov
or
fisttp
ds
jl
mov
loopne
es
movs
pop
ret
std
fisub
loopne
(bad)
cld
mov
fsubp
jmp
adc
pop
sub
imul
(bad)
scas
sub
adc
sti
frstor
xor
jae
loope
xchg
in
mov
jmp
int3
jo
or
push
in
addr16
es
xchg
mov
sub
push
out
push
push
jns
scas
mov
jg
mov
and
clc
inc
adc
add
and
fistp
scas
aaa
push
(bad)
add
lahf
aaa
xchg
pushf
icebp
jmp
or
mov
pusha
and
cmp
hlt
mov
mov
add
hlt
xchg
jne
mov
lods
clc
push
pop
lea
in
add
xor
lea
fnstsw
test
shr
sbb
sub
mov
xchg
cmp
xor
cmps
mov
sub
push
lds
and
scas
int
inc
cmp
out
xchg
jmp
lea
sbb
xor
mov
push
test
jmp
ret
dec
pop
pop
clc
inc
shr
or
add
mov
ja
jno
jnp
mov
sub
and
popa
je
mov
inc
inc
cmp
test
adc
outs
call
push
mov
js
mov
aaa
cmps
stos
add
sub
inc
pop
jnp
call
jnp
movs
sbb
mov
mov
les
iret
jo
jbe
sbb
push
or
fdivr
imul
dec
pusha
or
fsubr
inc
mov
or
call
dec
mov
jne
or
push
clc
jbe
es
inc
xchg
xchg
test
xchg
je
fs
ret
cmps
xchg
fisub
cld
adc
je
xchg
test
fadd
imul
cmps
repnz
sbb
(bad)
out
js
ins
dec
ja
hlt
in
lods
aam
sub
popa
imul
push
cmp
xchg
jno
(bad)
lock
js
sub
daa
and
dec
fs
retf
jb
or
aaa
das
mov
inc
sbb
imul
dec
mov
jmp
sbb
cmp
and
jg
fbld
pop
and
push
add
and
sbb
inc
pop
jecxz
je
jg
cmp
and
xor
(bad)
inc
lds
loopne
add
fcmovnb
fwait
add
mov
fwait
cmp
fdivr
shl
lods
jmp
shl
fwait
jmp
pop
loop
mov
call
jns
xor
gs
and
mov
dec
ja
adc
add
in
outs
ss
dec
xlat
cmp
repz
ds
shl
jmp
xor
xchg
mov
and
sub
jne
cmc
cld
in
push
xchg
js
push
je
jl
clc
dec
mov
out
(bad)
mov
ret
pop
add
les
call
clc
addr16
rcl
pushf
sub
imul
mov
rol
lods
add
mov
(bad)
and
retf
test
movs
xor
(bad)
fmul
adc
div
push
add
push
mov
add
adc
jbe
mov
dec
cmp
fsqrt
or
test
sahf
retf
cmps
lods
xchg
(bad)
or
(bad)
fdivr
mov
dec
ins
test
sbb
hlt
xor
dec
dec
or
cmc
lods
mov
add
fxam
neg
fiadd
mov
dec
ret
pop
and
inc
fdiv
(bad)
lea
loop
cmp
adc
hlt
movs
jo
mov
xchg
iret
repz
cmp
adc
xlat
cs
xchg
ins
jne
push
sub
in
shl
push
das
mov
mov
push
or
xchg
lods
and
stos
cmp
std
xchg
xchg
dec
cdq
mov
mov
inc
in
(bad)
xchg
stos
inc
xor
cmps
test
dec
stos
jns
push
fld
hlt
add
test
xchg
scas
int3
outs
mov
push
mov
popf
rol
pop
xor
ja
mov
pop
mov
es
inc
addr16
jnp
mov
mov
in
inc
jp
jb
fild
repnz
popa
sbb
xchg
jl
inc
call
mov
jp
or
push
mov
cmps
icebp
mov
pushf
lock
xchg
(bad)
jnp
mov
xchg
cdq
stc
mov
and
xor
int
pop
push
adc
in
data16
(bad)
cld
aam
sub
mov
outs
pop
or
jnp
fwait
sbb
xchg
sub
ja
mov
idiv
and
sbb
(bad)
fmul
dec
lods
cli
movs
ret
aam
scas
xchg
push
xor
rcl
cwde
jno
xor
hlt
xor
mov
sbb
mov
mov
ficomp
aaa
or
enter
fcmovnu
add
mov
pop
lock
aad
mov
sub
cmp
xchg
jae
pop
inc
aad
clc
dec
lods
jae
and
adc
pop
adc
mov
add
ins
cmps
inc
jae
dec
ss
cli
(bad)
enter
sti
int3
adc
mov
movs
or
dec
add
pop
ss
outs
aaa
pop
dec
dec
fcom
shl
and
cwde
push
mov
rcr
xchg
xchg
jnp
mov
mov
cmps
pop
push
pop
das
mov
inc
xor
fs
sub
sbb
inc
arpl
adc
or
mov
es
mov
xor
mov
fstp
cmp
dec
pop
dec
ss
inc
call
mov
aas
mov
jbe
mov
mov
xchg
mov
xchg
outs
shl
dec
or
dec
ror
mov
frstor
stos
jge
daa
movs
leave
out
addr16
pop
lods
sub
add
into
movq
and
adc
mov
movs
pop
leave
adc
sbb
xchg
push
pop
aad
mov
or
push
cmp
mov
mov
xchg
fbld
pusha
jnp
aad
pushf
add
dec
mov
loope
jmp
popa
jg
push
repz
push
test
dec
jns
add
sbb
inc
(bad)
stc
push
mov
movs
add
out
(bad)
std
adc
test
sahf
jl
xor
add
push
add
stos
inc
mov
push
ins
sti
inc
and
pop
ss
xchg
fcmove
scas
test
jmp
or
push
push
jge
movs
(bad)
sbb
scas
mov
mov
aaa
daa
jg
jbe
pop
or
loop
sub
repz
mov
sbb
test
push
mov
das
cmp
test
je
fs
dec
loope
adc
add
adc
push
mul
in
mov
push
outs
push
aad
cli
sti
add
sub
jmp
shl
mov
inc
jecxz
xor
push
fs
fwait
adc
rcl
pop
mov
ss
iret
fist
cmp
outs
stos
ss
cmc
jnp
jns
in
and
and
and
or
pusha
daa
pop
or
leave
ror
sub
pop
int3
mov
stc
mov
add
cmp
mov
and
js
(bad)
cmps
cmp
(bad)
lahf
sub
nop
and
repnz
out
cmp
adc
and
ror
arpl
inc
mov
xor
imul
xor
xchg
or
fadd
cld
dec
popf
ficom
jmp
push
xchg
xchg
mov
mov
inc
mov
xor
jp
ss
dec
cmps
push
cld
gs
inc
push
push
push
jecxz
pop
std
mov
(bad)
sub
test
retf
movs
or
add
mov
jl
xlat
jl
shr
jo
in
pop
repnz
or
pop
xlat
inc
das
(bad)
mov
and
sub
xchg
shl
mov
outs
inc
dec
push
data16
retf
push
sti
fyl2xp1
mov
cmp
shr
adc
mov
mov
push
out
imul
mov
das
test
call
push
mov
mov
sbb
xchg
pop
mov
mov
daa
frstor
jns
out
iret
ss
icebp
fisttp
out
and
das
cdq
or
scas
sahf
mov
shl
push
adc
in
mov
or
mov
xchg
dec
iret
inc
xor
sbb
push
xchg
xchg
fucom
in
dec
inc
or
cmp
sub
sbb
sub
or
xchg
jae
add
repz
jb
sti
imul
mov
call
test
inc
jecxz
cmps
call
or
es
push
outs
cmp
or
cmc
rcr
rol
pushf
bnd
sbb
mov
xor
ins
or
jb
push
rol
push
dec
jle
push
mov
xor
dec
jge
movs
imul
in
stos
sbb
in
adc
jns
adc
or
adc
jl
repnz
ds
rcr
xor
sbb
movs
xlat
outs
mov
xchg
int3
xchg
jecxz
or
aad
push
inc
fisttp
pop
adc
inc
sub
aas
cmp
mov
cmp
pop
popf
adc
jp
sub
dec
popa
pop
fisubr
mul
aaa
pushf
iret
jb
cs
push
shl
stc
jg
push
sbb
je
push
cs
xchg
push
add
mov
dec
aaa
cmp
xlat
mov
push
dec
test
mov
pop
cmp
jecxz
mov
dec
(bad)
sbb
ins
xor
test
add
mov
push
xchg
repz
lods
cmp
dec
adc
sar
push
pusha
push
sti
inc
sub
mov
mov
scas
(bad)
retf
jmp
std
mov
or
test
and
mov
scas
pop
cmp
add
ss
fincstp
mov
push
cmc
outs
dec
lea
mov
xchg
lahf
js
push
das
or
in
mov
retf
or
jnp
push
sbb
adc
dec
retf
ss
lahf
scas
(bad)
mov
push
in
add
test
rcl
sub
ficomp
nop
add
mov
aaa
imul
or
(bad)
stc
xor
add
sbb
add
jmp
loop
mov
out
cld
inc
mov
pop
out
adc
outs
repz
xchg
mov
mov
(bad)
mov
mov
xor
pop
mov
icebp
neg
jecxz
les
and
inc
cmp
retf
push
dec
jge
aaa
test
mov
lock
jmp
jnp
add
(bad)
adc
dec
inc
mov
jnp
sub
in
rcr
mov
imul
sub
shr
pop
xchg
cmps
(bad)
in
stos
aaa
enter
lahf
cdq
sbb
jle
fisttp
sbb
push
push
inc
xor
dec
inc
aas
xor
fcom
pusha
scas
mov
rol
icebp
mov
sahf
lahf
(bad)
cmp
or
jmp
cmp
iret
lods
loope
add
dec
fsubrp
mov
add
sub
sub
stos
out
ss
sahf
fadd
out
loop
inc
rcr
jnp
sahf
leave
inc
std
dec
sub
xchg
xor
push
js
ds
push
cmp
repnz
cs
nop
mov
jmp
stc
xor
xchg
inc
int
add
and
mov
mov
mov
cdq
in
inc
iret
je
dec
(bad)
aam
test
std
inc
stos
xchg
cmc
fwait
ds
(bad)
xchg
daa
inc
push
mov
daa
arpl
nop
jge
lds
out
mov
jae
inc
gs
push
jg
repnz
push
aas
aam
pop
dec
sbb
aas
and
test
sbb
in
xor
or
cmp
jmp
imul
sahf
test
cwde
pop
jae
inc
sub
cmc
mov
in
pop
push
jns
les
not
and
jecxz
mov
(bad)
adc
xor
std
into
push
mov
push
inc
xor
les
arpl
ficomp
xor
shl
scas
test
inc
bnd
test
call
and
mov
shr
retf
mov
lock
lods
retf
fs
lds
pop
mov
out
scas
mov
shl
dec
(bad)
sub
inc
(bad)
adc
ret
hlt
leave
mov
dec
(bad)
mov
xlat
cmp
out
and
mov
xchg
pop
sub
sub
(bad)
out
dec
fisttp
sub
aam
fnstsw
xor
fadd
stos
sub
xchg
sub
mov
ret
pop
in
lea
test
pop
dec
jle
or
jmp
loope
adc
pop
add
mov
cmp
mov
repz
cmc
pop
or
pop
xor
push
or
mov
sti
in
sub
jg
(bad)
sub
pop
jmp
sub
xor
push
adc
dec
mov
push
out
pop
leave
mov
mov
jmp
dec
mov
ins
rcl
stos
aad
push
jp
lods
(bad)
jns
ja
push
xor
loop
stc
(bad)
mov
jecxz
and
aas
call
(bad)
les
mov
in
and
addr16
and
scas
cld
out
jns
push
adc
ds
ret
mov
push
mov
pop
xor
test
adc
clc
ret
out
mov
xor
imul
pavgw
jmp
imul
div
retf
cs
das
push
xchg
loopne
sbb
cmc
xor
retf
or
and
inc
scas
lahf
push
fsub
jae
add
jmp
ror
mov
(bad)
cli
ror
mov
xor
loopne
xor
pop
or
sub
push
cmp
sbb
add
push
es
dec
int
xor
sbb
loope
mov
(bad)
imul
push
retf
push
bnd
jb
mov
inc
in
addr16
mov
outs
cdq
jecxz
dec
and
sbb
mov
rcl
gs
je
sub
shl
and
in
pop
ins
fnstcw
ss
scas
dec
test
push
ja
mov
and
cmp
sti
clc
je
adc
pop
push
call
aad
hlt
cmp
cmp
bound
outs
retf
int3
ror
mov
lods
outs
and
js
xor
mov
dec
xchg
pop
or
sbb
(bad)
mov
mov
sbb
and
add
daa
inc
sbb
nop
cdq
in
mov
in
loopne
out
dec
popf
cmp
xchg
xchg
xor
mov
gs
and
loopne
jge
lods
addr16
push
xchg
fsub
arpl
mov
mov
lods
sbb
popf
loopne
test
mov
mov
js
inc
pusha
sub
mov
jno
mul
adc
xor
jmp
outs
fadd
popf
adc
popa
imul
xchg
hlt
inc
xchg
shr
data16
pushf
dec
adc
pop
mov
cmp
mov
mov
inc
cdq
ins
gs
push
clc
pop
add
fwait
jb
sub
jp
jge
xchg
sahf
fnclex
lods
xchg
in
xor
mov
in
push
fwait
outs
nop
(bad)
outs
retf
(bad)
sbb
sub
dec
pop
or
push
out
dec
scas
sbb
mov
cmp
xor
aam
mov
neg
(bad)
retf
xor
fcom
and
mov
call
pop
iret
sbb
das
lea
pop
push
in
push
loopne
xor
ror
adc
jo
fild
pushf
sub
outs
lds
jmp
push
std
shl
mov
jo
hlt
or
imul
in
aas
add
dec
into
lock
retf
fs
mov
jg
(bad)
sbb
mov
retf
fdiv
addr16
jno
mov
dec
test
xchg
ja
xlat
jns
aaa
mov
xchg
aam
adc
xlat
mov
xchg
pop
sub
dec
add
mov
hlt
stos
(bad)
push
mov
inc
test
call
cdq
mov
add
ja
out
pop
adc
xor
aaa
fisttp
gs
xchg
imul
call
arpl
sti
xor
add
inc
ror
rcl
dec
xchg
inc
mov
mov
jbe
pop
jmp
test
sbb
cmp
adc
sbb
aam
sbb
hlt
mov
call
les
arpl
aam
inc
je
mov
cmp
int3
out
cld
adc
jmp
out
mov
xchg
push
pop
mov
xchg
cmp
in
push
jmp
repz
pusha
mov
cmp
push
mov
mov
int3
shr
popf
mov
out
es
jae
js
fstp
call
outs
mov
mov
and
sub
stos
xor
ja
and
inc
xchg
icebp
adc
mov
(bad)
sbb
or
inc
aaa
pop
add
ret
and
out
rol
and
sub
in
fld
xchg
push
mov
push
call
icebp
outs
or
ins
mov
xor
and
cmp
std
icebp
clc
(bad)
sbb
out
fstp
ja
inc
out
push
retf
std
jg
nop
push
and
retf
test
(bad)
dec
sbb
xor
loop
clc
sub
or
dec
pusha
push
out
iret
cdq
mov
xchg
push
fwait
cmp
inc
sbb
call
cmp
sub
sbb
cmp
aaa
cmp
inc
jo
dec
cld
mov
xchg
icebp
out
adc
daa
and
popa
mov
jle
inc
inc
jo
add
xor
and
clc
jno
adc
int3
sbb
pop
repz
pop
in
test
es
adc
bound
mov
das
test
push
movs
cmp
in
repz
mov
pop
mov
cmp
sbb
sub
dec
inc
and
mov
loop
lds
pushf
xor
add
shl
add
inc
or
pusha
mov
ins
addr16
mov
mov
int
mov
loopne
jne
enter
retf
mov
push
test
in
movs
out
enter
lds
xchg
sbb
out
pusha
std
dec
xor
hlt
pop
mov
arpl
sahf
pop
add
adc
fimul
mov
pop
jg
pop
jl
pop
cmp
iret
arpl
fdivr
stos
push
sbb
stc
lock
push
pop
sub
sbb
std
fidiv
jg
jns
js
retf
cmps
loope
lds
shr
inc
ds
aaa
mov
and
lahf
ds
mov
adc
fisttp
js
jl
cld
xchg
jbe
inc
pop
fst
loope
bound
popa
(bad)
outs
fidiv
shl
and
pop
add
ficomp
jb
pop
les
push
out
dec
pop
sub
or
sbb
sti
dec
out
cmp
push
cmp
in
out
mov
xor
sub
push
push
sbb
ret
xor
hlt
in
adc
fwait
or
rcr
adc
bound
mov
pop
jg
fild
cmp
or
mov
shr
nop
jecxz
aas
inc
add
mov
aad
or
push
push
es
push
mov
pcmpeqb
call
push
sbb
adc
iret
je
xchg
inc
pusha
retf
sub
inc
leave
mov
(bad)
jmp
dec
rcr
lock
sub
cmc
xor
sbb
jmp
clc
cmp
das
push
in
inc
es
(bad)
inc
daa
or
aam
xchg
cmps
sbb
ins
pop
out
iret
xchg
pop
jo
push
or
dec
fmul
sub
idiv
aad
repz
daa
lock
sbb
inc
pop
cmp
movs
or
or
adc
dec
cmp
xchg
and
mov
inc
out
inc
sbb
(bad)
jnp
pop
stos
cmps
jmp
mov
(bad)
xchg
repz
cmps
push
pop
fwait
aam
cmp
loope
out
jmp
lock
and
adc
in
mov
ret
push
inc
push
mov
mov
pop
pushf
std
inc
ret
cwde
aam
or
loop
icebp
rcl
std
lock
dec
cmps
mov
enter
push
add
jge
retf
xchg
or
add
push
aam
es
or
int
js
aaa
mov
lahf
cmova
sbb
mov
xchg
mov
add
add
ds
pop
cs
sub
or
js
cdq
pop
fstp
nop
inc
push
and
lods
push
(bad)
mov
cmp
mov
adc
sub
push
jl
jl
ror
stc
in
push
adc
mov
ja
loopne
iret
xchg
test
or
fidivr
and
push
mov
stos
stos
mov
dec
sbb
dec
pop
push
mov
outs
inc
ret
(bad)
xchg
hlt
mov
js
call
in
out
sub
test
jbe
pushf
sub
sbb
rcr
popf
push
and
mov
jbe
nop
mov
sub
mov
xor
cmps
inc
fadd
mov
sub
mov
xchg
jne
push
lahf
dec
aaa
int3
pop
add
(bad)
pop
fidivr
(bad)
xlat
inc
and
jns
mov
push
pop
in
xchg
add
mov
popa
repnz
sub
pop
lea
mov
push
arpl
xchg
rcr
sbb
jmp
jns
(bad)
cmc
push
ss
dec
xchg
sub
and
add
sti
shr
inc
dec
call
fwait
jns
inc
test
mov
or
inc
jnp
int
mov
repz
jne
mov
cmp
shr
inc
cs
sub
fdivp
pop
aad
jp
fmul
mov
dec
in
pop
popf
or
cdq
fst
aas
cmc
fmul
add
icebp
out
les
mov
movs
lods
lods
out
and
jo
add
jnp
mov
sub
fmul
adc
je
dec
pop
and
xchg
fdivr
rcr
cwde
xchg
xchg
cli
retf
loope
mov
je
jo
pop
lea
pop
out
popf
push
jg
dec
rol
jne
(bad)
cmp
dec
inc
xchg
mov
cmps
repz
xor
xor
not
popf
test
mov
iret
mov
mov
xchg
dec
jnp
cmps
mov
lods
or
hlt
sbb
pop
xor
mov
cmp
repnz
inc
and
and
outs
mov
shl
fucomip
or
dec
and
lea
cmp
dec
pusha
pop
pop
push
shr
mov
sub
mov
cwde
mov
mov
jnp
dec
cli
inc
cmp
call
sub
jae
xor
loop
pop
xor
and
push
jnp
adc
loope
sub
(bad)
loopne
leave
in
fs
pop
arpl
adc
(bad)
repz
add
adc
pop
ror
xor
lahf
mov
test
test
lea
or
or
mov
call
add
pop
dec
xor
push
dec
xor
jecxz
xor
jmp
nop
cli
les
push
arpl
or
lods
pandn
xchg
stos
rcl
test
cli
neg
xor
mov
addr16
out
sbb
pop
or
and
xchg
dec
jne
mov
test
sbb
mov
loop
mov
cdq
xchg
clc
inc
add
dec
sahf
jbe
add
mov
popa
ror
or
(bad)
repnz
out
arpl
or
ds
lods
add
sbb
imul
add
ins
dec
or
shr
enter
pop
stos
inc
mov
dec
dec
fild
or
mov
mov
dec
add
jg
push
jg
cmp
push
leave
in
int
pusha
stc
shl
sar
sub
and
and
xchg
jbe
lock
call
(bad)
out
retf
hlt
(bad)
stos
sub
(bad)
leave
mov
dec
dec
call
cmp
jns
test
cs
adc
neg
jl
push
es
jge
sbb
in
sub
retf
mov
and
ins
xchg
pop
inc
fdivrp
cli
test
out
test
and
add
fild
push
cmc
xchg
inc
or
test
cmps
mov
pop
in
arpl
xor
or
xchg
sub
call
pop
iret
test
ficom
push
int3
jnp
mov
or
mov
rcl
in
sbb
imul
stc
sub
jmp
sti
mov
lahf
xlat
icebp
imul
cs
add
popa
sub
and
xor
popa
je
mov
in
sub
mov
and
test
rcl
in
fild
ins
jecxz
aam
shl
das
or
cmp
ficom
dec
push
dec
mov
inc
mov
(bad)
and
add
xor
mov
mov
fst
(bad)
xor
dec
xor
adc
sbb
adc
aad
jge
pop
xchg
push
gs
dec
retf
scas
sub
pop
loope
push
je
je
fnstenv
jne
pop
sub
and
cmps
mov
xor
mov
rol
pop
daa
inc
or
jl
or
mov
sbb
mov
inc
mov
inc
sub
test
test
jne
cmp
push
mov
add
loop
cmp
jno
lock
mov
push
call
cli
in
inc
fiadd
retf
adc
sub
rcr
call
mov
sub
xchg
not
retf
js
adc
jle
rol
mov
fs
pop
dec
loope
into
out
je
(bad)
jns
in
sbb
sub
adc
sbb
test
mov
xchg
das
popf
ds
movs
xchg
sbb
add
imul
jecxz
jl
out
adc
sbb
js
jmp
mov
push
jg
imul
xchg
add
call
jae
or
pop
sbb
mov
add
xor
movs
mov
add
mov
int
jp
rcr
scas
cmps
jne
jecxz
fdivr
imul
mov
pusha
mov
xchg
cmp
jge
sbb
pop
or
sub
imul
pop
test
jnp
inc
movs
mov
retf
mov
jmp
jne
dec
(bad)
xor
out
leave
dec
cdq
movs
lahf
enter
cmp
lods
jae
jg
fdivr
shl
jno
pop
push
(bad)
gs
pop
arpl
or
gs
pop
push
jl
push
out
lods
cmps
pop
(bad)
pop
mov
mov
adc
xchg
sbb
add
xchg
sub
popf
jno
imul
mov
sub
aas
out
dec
mov
inc
mov
pop
cld
mov
lock
push
cwde
test
pop
cmp
popa
fsubr
xor
cwde
frstor
mov
pusha
aam
sbb
popf
popf
dec
add
pop
out
jne
dec
jns
dec
or
leave
push
xchg
add
arpl
cwde
das
adc
pushf
movs
inc
sti
mov
bound
hlt
daa
inc
mov
pop
scas
push
xor
ret
outs
js
mov
xor
ja
add
inc
push
mov
loope
inc
mov
sbb
es
sar
sub
test
adc
dec
cmp
ret
xchg
lods
sbb
jnp
mov
movs
add
les
xchg
(bad)
push
(bad)
xor
pop
push
cmp
xor
pop
adc
push
aad
sub
inc
out
sub
lods
aas
in
push
cmp
scas
jecxz
call
shl
fdiv
into
mov
adc
or
outs
test
lods
rol
test
gs
test
jae
or
test
cmp
stos
adc
xchg
pop
pop
pop
test
pop
pop
js
jae
pop
lods
mov
retf
add
inc
cmp
mov
retf
mov
(bad)
mov
mov
xchg
dec
sub
icebp
inc
sti
fwait
je
aas
ftst
(bad)
cmp
fbld
nop
push
movs
dec
lods
fs
jns
mov
or
inc
test
dec
inc
cmp
inc
push
add
and
sbb
fisubr
loopne
call
jecxz
movs
cdq
in
stos
je
inc
mov
ror
scas
jne
add
lods
call
rcr
mov
loopne
push
pop
stc
dec
sub
std
gs
fldcw
sub
adc
arpl
mov
sbb
loop
add
inc
mov
or
xchg
sub
ins
and
cmp
retf
jno
jno
inc
fimul
xchg
mov
add
inc
cmp
sub
enter
aad
sbb
inc
das
call
jp
mov
sub
nop
jmp
cmp
inc
rcl
fwait
cmp
cmps
cld
push
inc
mov
adc
rol
jae
lock
cmp
int3
dec
mov
xchg
les
cmps
pop
int
cld
mov
cmp
pop
push
mov
and
pop
(bad)
push
fstp
addr16
adc
call
gs
jbe
jb
lahf
xchg
jecxz
scas
add
retf
mov
out
inc
xlat
add
push
popf
ret
mov
(bad)
inc
out
xchg
loope
stc
out
inc
scas
push
add
sub
sub
jmp
pushf
pop
sbb
jne
stc
xchg
fbld
shr
stc
fnsetpm(287
jg
or
jb
pusha
mov
and
push
cli
push
xor
dec
jnp
jb
or
pop
pop
inc
shr
jnp
loopne
pop
and
sub
or
adc
mov
inc
pop
jbe
add
fstp
cld
and
mov
leave
mov
pop
scas
out
push
daa
jge
outs
mov
xor
pop
mov
(bad)
loopne
xor
sahf
adc
dec
push
ds
jne
xchg
imul
xchg
mov
loop
cmps
xchg
inc
or
xlat
nop
mov
test
push
pushf
call
fwait
xor
jmp
imul
or
fwait
pusha
mov
imul
sbb
mov
push
nop
xchg
sub
sar
lea
int3
xor
imul
add
test
jge
fldcw
stc
(bad)
cmp
nop
or
jo
sub
cmp
pop
mov
adc
sbb
dec
lahf
cmc
pusha
int3
int
jmp
push
adc
xchg
or
or
ja
adc
loopne
mov
(bad)
cmp
xchg
pop
in
xchg
fidivr
cmc
rcr
cmps
mov
sbb
shr
fs
jb
mov
mov
sar
sub
outs
inc
into
jbe
pop
(bad)
shl
pop
mov
adc
push
cmp
(bad)
int3
sub
xchg
xlat
or
xchg
int
pop
xchg
(bad)
mov
mov
loope
xor
jmp
ds
ins
and
push
add
add
sub
or
jl
mov
jecxz
cmovae
arpl
or
lods
xor
sub
adc
push
out
sbb
mov
pop
(bad)
loopne
mov
mov
adc
addr16
mov
sar
iret
stc
mov
pop
in
mov
mov
imul
lds
jmp
jmp
aam
adc
out
cmp
sbb
push
call
mov
rcl
lahf
add
aad
dec
adc
out
adc
rcr
outs
stos
ins
xor
xchg
and
dec
clc
pop
inc
loop
adc
lods
adc
sbb
jge
popa
mov
movs
sahf
mov
retf
cmps
adc
popf
icebp
mov
sub
add
das
int3
mov
xchg
das
ss
imul
inc
pusha
xchg
call
lock
inc
clc
bound
int
dec
in
xchg
or
pop
ror
sub
mov
daa
inc
das
fdivr
push
pusha
repnz
xchg
dec
in
mov
mov
repnz
push
(bad)
aad
lahf
(bad)
add
call
or
inc
adc
sub
or
ja
ins
fwait
push
lods
test
cmp
mov
out
mov
dec
call
sub
sub
inc
jns
aad
sub
mov
xchg
sbb
cmp
and
and
sub
sti
sbb
dec
add
scas
cmp
rcl
xor
clc
or
lods
aaa
push
repnz
mov
xchg
cld
xor
jecxz
adc
pop
fcmovbe
sbb
sbb
pop
repz
retf
nop
ficom
sbb
jecxz
nop
out
sahf
fcom
sti
cld
mov
cmp
add
popf
jo
mov
jno
movs
leave
ror
test
lea
mov
lock
and
ins
sub
mov
test
adc
and
mov
add
mov
cmps
leave
xchg
(bad)
cmovne
pop
or
sub
dec
pop
lods
or
mov
mov
cmp
idiv
xlat
add
cmps
push
cmps
loopne
gs
xlat
mov
les
ins
cwde
les
sbb
or
dec
mov
sbb
repz
lea
jbe
(bad)
les
jbe
pop
or
dec
mov
cmp
inc
jecxz
pop
or
fsub
mov
mov
push
mov
add
popa
xchg
and
sbb
sub
push
xchg
ins
mov
call
cmps
int
fucom
push
scas
pushf
cs
out
sub
xor
push
out
pop
xchg
or
and
xchg
std
sbb
out
cmp
in
hlt
mul
jae
adc
outs
scas
jle
pushf
in
int3
stc
ds
sub
(bad)
dec
jmp
cmp
jns
bound
cmp
cmp
xchg
retf
ja
hlt
push
sti
je
mov
dec
mov
pop
sbb
mov
xlat
test
dec
jle
sub
adc
into
loopne
stos
lds
add
int
retf
(bad)
repnz
jl
inc
xor
xchg
inc
mov
sti
mov
scas
shl
shr
or
jbe
push
sbb
dec
sbb
sbb
imul
and
dec
loope
xchg
pop
imul
inc
lea
repz
les
in
stos
jb
pop
test
jns
into
lods
out
mov
mov
in
add
retf
pop
adc
ins
inc
pop
pop
push
sbb
cmps
cmp
adc
push
dec
inc
dec
xchg
push
ins
ins
stc
movs
dec
ret
inc
jbe
(bad)
movs
adc
dec
jmp
lods
(bad)
lods
xor
clc
rcr
(bad)
fbstp
cmps
movs
icebp
push
sbb
pushf
xor
sub
xor
ret
test
cmp
push
xchg
(bad)
lods
fs
sub
iret
sub
or
push
add
pushf
xor
mov
mov
adc
cmp
int3
inc
mov
and
jp
mov
in
retf
lahf
cmp
push
mov
xlat
stos
mov
sub
jp
pop
push
imul
bnd
jg
stos
push
or
imul
or
push
cmp
push
xchg
mov
call
hlt
pop
dec
retf
dec
std
cmc
sahf
xchg
fadd
in
cwde
fisub
lock
(bad)
fistp
mov
test
cwde
pop
and
loop
xor
adc
adc
imul
jg
and
push
lea
rcl
mov
cmp
das
(bad)
push
das
std
push
scas
test
mov
cmp
mov
fnstsw
out
in
call
ins
enter
pop
mov
jmp
push
cmc
jae
popa
fs
fs
lods
pusha
jle
js
shr
pop
sub
push
pop
mov
xor
int3
xor
jecxz
in
mov
mov
xor
inc
pop
and
fs
mov
fcom
lea
adc
aad
sbb
push
adc
mov
cli
add
js
lds
xchg
je
rol
and
xlat
jnp
test
mov
xor
pop
sahf
jb
ds
fisttp
lock
leave
cld
sub
dec
ss
fidiv
mov
add
add
and
and
into
or
push
stos
fs
out
movs
mov
enter
push
jecxz
scas
aad
sbb
pop
sbb
out
sub
pop
mov
fst
pop
xlat
mov
add
push
ss
in
in
adc
mov
cmps
fmul
ficomp
outs
adc
mov
(bad)
daa
mov
push
loopne
and
inc
xchg
js
leave
jnp
out
or
sub
sbb
cmps
icebp
clc
push
popa
jle
mov
mov
and
ja
das
sar
jg
inc
and
jno
mov
sbb
repnz
adc
cmp
and
hlt
lds
dec
mov
dec
aas
dec
push
sub
test
aad
ja
popa
pop
mov
sahf
push
leave
fcomp
mov
mov
lahf
cmps
cdq
fmulp
mov
pop
aaa
lock
push
enter
sti
mov
cmp
inc
dec
shr
jns
ins
push
lahf
out
cmp
push
mov
mov
ss
xchg
pop
mov
mov
lods
bound
fs
jecxz
xchg
adc
mov
fistp
cli
outs
aas
sbb
aam
loop
push
sub
dec
sbb
rol
inc
sahf
retf
mov
hlt
cmp
in
call
fstsw
inc
mov
in
hlt
pop
inc
std
in
adc
test
xchg
js
jbe
mov
push
aas
into
or
sub
sahf
icebp
cdq
(bad)
push
lahf
xor
addr16
hlt
aam
inc
adc
jmp
sub
inc
add
loop
mov
call
aam
sub
mov
outs
jg
je
jecxz
fucomi
cmp
ss
cli
jecxz
mov
daa
stc
xchg
adc
movs
leave
mov
and
out
push
pop
out
jnp
icebp
ins
mov
adc
mov
test
(bad)
rep
stos
inc
lock
dec
nop
movs
mov
stc
xchg
test
scas
fild
cmp
lock
xor
aam
sub
pop
add
inc
out
mov
adc
aas
mov
inc
in
and
fnstsw
sbb
fwait
(bad)
adc
mov
hlt
dec
add
jae
pop
or
(bad)
in
jae
push
inc
daa
jecxz
sub
inc
imul
push
mov
js
cmp
(bad)
ss
jbe
push
int3
movs
xlat
je
clc
mov
push
mul
sub
cmc
jnp
shr
inc
repz
sub
in
imul
dec
jecxz
fstp
out
sub
fwait
lahf
punpcklwd
jbe
mov
fdivr
clc
xchg
sbb
sbb
pop
inc
jb
push
rcr
cli
into
mov
ror
push
or
lahf
inc
push
adc
retf
daa
shr
ins
pop
clc
cdq
or
pause
imul
repz
cli
mov
and
ins
imul
out
fcmovnbe
fwait
pop
xchg
test
inc
jne
lock
(bad)
das
clc
scas
cmp
xor
pushf
shl
xchg
aaa
mov
sub
popf
add
jg
push
and
test
in
or
ja
jge
inc
repnz
fs
shl
outs
mov
pop
inc
out
rol
(bad)
aaa
jnp
dec
in
inc
popf
sub
pop
jmp
mov
push
ss
and
push
inc
cmps
mov
dec
jle
add
or
and
and
mov
jno
ret
cmps
(bad)
pusha
dec
or
jl
mov
popf
imul
jae
lods
push
push
add
mov
out
retf
and
das
out
fs
xchg
mov
je
push
cmp
(bad)
pop
(bad)
cwde
scas
inc
cmp
fnstsw
jmp
les
xchg
es
inc
jmp
ins
stc
sbb
test
xchg
ror
adc
sbb
sahf
aam
test
pop
adc
test
(bad)
jbe
jecxz
or
adc
adc
bound
popa
mov
xchg
cs
sub
jg
mov
ret
aam
into
adc
mov
xor
or
mov
cmp
xor
fnstsw
dec
pop
inc
cmc
xor
test
jge
lds
mov
arpl
int3
push
lock
dec
rcl
test
ficom
mov
out
ret
mov
dec
inc
dec
cwde
lods
fdivr
cmp
dec
add
or
imul
xchg
ret
leave
cld
cdq
inc
xchg
mov
das
sub
inc
pop
aam
aas
sbb
and
in
lds
mov
add
cli
in
in
scas
add
ja
inc
cli
sub
jmp
push
les
jp
and
dec
ret
scas
cli
push
xchg
mov
imul
xchg
and
test
jle
xchg
stos
jmp
dec
dec
dec
mov
pop
aam
jo
es
test
out
push
fild
mov
call
fld
pusha
(bad)
lds
(bad)
mov
mov
mov
loopne
test
inc
ret
retf
push
lahf
adc
out
aas
repnz
test
jb
sub
out
sub
jne
pop
lds
sahf
scas
xchg
fcmovnb
cmp
sti
xor
movs
sbb
pop
mov
jp
or
xchg
out
rol
inc
fst
enter
xchg
dec
sub
jge
xchg
in
test
inc
je
popa
sbb
mov
pop
xlat
les
push
add
loop
loope
jbe
dec
stos
enter
sub
ins
repz
xor
jmp
int3
dec
jo
int3
call
es
mov
and
mov
imul
test
sub
scas
xchg
imul
ffree
repnz
sub
cwde
inc
loope
mov
sub
xchg
shl
xor
xlat
xor
cmps
in
aad
std
mov
adc
adc
sbb
cli
daa
popf
jns
or
sbb
sub
scas
es
aam
inc
test
stos
mov
push
jne
mov
adc
push
pop
pusha
dec
enter
fdivr
ja
pop
movs
pop
add
inc
das
loop
fnsave
or
jo
mov
mov
jmp
loope
test
mov
sbb
mov
cmp
jbe
push
add
cwde
jo
xchg
jle
jp
ficom
push
test
xor
or
jae
dec
push
data16
ss
outs
stos
jecxz
ins
add
call
hlt
xchg
outs
mov
mov
cmp
test
jnp
arpl
xor
pop
(bad)
xlat
inc
pop
loop
and
mov
mov
popa
mov
out
push
mov
outs
mov
push
push
aas
test
and
pop
mov
retf
es
cmp
scas
out
mov
movs
push
push
loope
fwait
out
or
mov
data16
sbb
sti
cmp
cmps
push
push
sbb
or
ins
popa
jl
sub
cmp
xchg
push
adc
pop
imul
out
(bad)
sub
fs
popa
push
icebp
out
push
stos
arpl
inc
sbb
inc
or
out
inc
mov
push
inc
sbb
jbe
xor
jge
movs
add
mov
daa
add
push
jge
fdivr
push
pop
je
popa
mov
sub
enter
stos
ror
push
dec
inc
and
mov
push
jle
or
pop
es
repz
cmp
dec
xor
inc
in
lds
aad
cmp
(bad)
fwait
sub
push
ds
out
jle
aaa
icebp
adc
mov
addr16
xor
push
push
sub
mov
sbb
leave
movs
push
xor
jo
inc
add
loop
mov
sbb
push
sahf
std
pslld
push
jp
jne
add
gs
out
outs
mov
add
gs
sbb
aas
adc
fsub
es
fimul
and
scas
out
je
sbb
cmp
popf
test
(bad)
ins
je
and
or
inc
(bad)
fidiv
push
jae
dec
scas
xchg
adc
in
stc
xchg
fnstsw
and
pop
sbb
mov
adc
fsub
push
hlt
mov
shl
and
mov
and
mov
xchg
aas
add
aam
inc
cmc
adc
inc
jecxz
and
(bad)
cmc
ss
out
in
popa
push
out
cmp
and
inc
mov
add
sbb
popa
xchg
push
stos
xchg
jno
jnp
sbb
sbb
push
cmp
mov
or
cmp
fdivr
and
sti
enter
adc
hlt
cld
dec
pop
jp
imul
fs
xchg
inc
push
xlat
not
mov
ret
(bad)
stos
adc
push
inc
add
push
add
cmp
mov
cmp
in
push
in
rol
pop
mov
int3
jp
lds
je
enter
in
or
fcmovne
inc
or
ret
adc
call
add
rcr
jmp
and
sbb
dec
ja
cmc
mov
out
jmp
out
jns
cli
xlat
jmp
loope
jmp
sbb
cmp
in
lock
icebp
and
(bad)
mov
les
cli
in
pop
push
ficomp
and
cdq
jmp
sbb
mov
std
stos
pop
pop
out
pop
pop
pusha
adc
dec
push
mov
data16
in
popa
mov
(bad)
dec
push
jns
or
and
jbe
aaa
inc
mov
mov
or
xchg
into
(bad)
xchg
push
pusha
fistp
fisub
sbb
shl
xlat
in
mov
test
jmp
scas
sbb
call
js
xor
and
movs
es
or
dec
xchg
jp
push
adc
movs
arpl
pop
lea
or
rcl
dec
nop
arpl
pop
pusha
push
iret
loopne
push
retf
add
arpl
pop
aam
mov
je
sahf
das
jbe
ss
leave
jbe
jge
(bad)
call
leave
inc
popa
or
inc
(bad)
jnp
ins
dec
ss
push
les
ja
mov
stos
imul
or
outs
fwait
lahf
adc
in
std
xchg
stos
leave
shl
adc
mov
cld
stos
shr
int
sar
xor
xor
inc
and
push
dec
mov
mov
inc
stos
enter
dec
stos
daa
jg
push
jle
inc
loop
push
xor
mov
mov
scas
mov
enter
aad
or
nop
movs
inc
jmp
retf
mov
in
gs
xchg
sbb
fld
or
scas
scas
inc
lahf
jg
push
xchg
popf
test
jl
inc
cdq
int
pop
(bad)
cmp
sti
add
pop
jmp
fisub
sahf
fdivrp
jmp
push
xchg
lea
call
loope
pop
or
inc
(bad)
fcom
pop
call
bound
jno
out
leave
pop
div
(bad)
fdivr
popf
jmp
cmp
fdiv
add
inc
ror
cmc
push
fdiv
inc
lods
repz
scas
jne
out
xchg
std
in
jp
mov
inc
fdivr
or
xor
in
maskmovq
out
mov
adc
rcl
push
xor
lods
repz
ss
(bad)
cmp
cmp
out
lock
hlt
repnz
ss
push
push
imul
sbb
lahf
jp
out
mov
in
lods
jae
or
ins
js
lds
adc
xor
pop
movs
inc
test
mov
inc
and
xchg
mov
ds
xchg
(bad)
push
sbb
pop
xor
fld1
push
cmp
xor
ins
jp
xor
dec
outs
xchg
dec
push
mov
lahf
pushf
dec
push
fsub
cdq
ficomp
aaa
not
add
je
sub
pusha
xlat
enter
mov
jmp
sar
dec
in
xor
xchg
mov
pop
clc
lods
and
mov
scas
and
pusha
pop
sbb
fsub
(bad)
fist
aas
outs
jns
jle
aas
(bad)
out
aad
add
lods
xchg
aas
les
jns
dec
and
rcr
inc
shl
or
jecxz
add
mov
mov
jmp
pop
jp
(bad)
pop
mov
push
repz
rol
push
stos
or
mov
cmp
ror
xor
xor
mov
das
push
xchg
jl
test
dec
stc
inc
imul
xor
dec
fadd
xor
push
arpl
inc
push
xchg
add
jle
ret
mov
(bad)
jp
push
imul
adc
ja
inc
movs
jle
mov
mov
sub
cmps
inc
push
xlat
mov
mov
out
xchg
inc
stos
sbb
mov
cld
out
inc
push
stos
mov
or
mov
sub
dec
icebp
xchg
push
adc
leave
mov
repnz
jb
test
push
repnz
pushf
clc
test
out
cmc
repz
cmps
cwde
pop
nop
addr16
pop
xor
jl
call
ins
cmc
dec
push
inc
pop
inc
dec
dec
test
dec
rcl
imul
add
(bad)
loopne
xchg
add
pop
and
sub
mov
ins
ja
dec
int
push
js
pop
inc
test
fisub
ds
jo
mov
mov
ror
ror
xchg
fnstsw
or
test
mov
mov
sbb
js
push
jae
stc
ins
pop
ds
dec
pop
std
pop
ret
dec
jbe
push
movs
imul
pop
xchg
jne
in
hlt
cmp
fsubr
xor
jle
or
cmp
ficom
nop
mov
in
mov
adc
pop
lds
sbb
cwde
mov
int3
rcr
or
lds
sbb
hlt
xlat
or
mov
popa
mov
inc
mov
inc
sar
add
xlat
mov
cmps
js
neg
fwait
xor
xchg
inc
push
addr16
cmp
ins
mov
mov
inc
sub
xor
nop
sub
ret
out
push
out
pop
pop
pop
cmp
movs
xchg
push
fild
or
jbe
(bad)
lahf
xlat
fisubr
push
inc
push
(bad)
add
scas
inc
ret
call
mov
dec
mov
in
sub
lock
inc
cmp
adc
xchg
ds
mov
xor
rol
cmp
out
sbb
or
ins
xchg
into
jb
fsubr
xchg
xchg
mov
pop
lock
pop
fisttp
sahf
fnstcw
xchg
xchg
mov
xchg
scas
sub
outs
retf
push
xor
in
stos
inc
fld
push
imul
fwait
iret
mov
xor
jbe
mov
inc
in
std
lds
sub
jbe
into
xor
jno
adc
and
pop
mov
fs
adc
dec
fimul
ds
xor
ins
cmp
cmp
push
js
pusha
mov
in
std
xor
pop
jmp
mov
mov
pop
hlt
(bad)
ins
jnp
icebp
inc
mov
jmp
xchg
lahf
and
xor
sbb
sti
in
ins
adc
sub
sahf
ja
mov
adc
adc
mov
shl
ins
sbb
push
outs
movs
or
cmp
mov
cmp
adc
cmp
movs
push
xchg
xchg
push
jl
clc
out
add
cmp
jbe
test
push
repz
dec
pop
push
dec
outs
inc
cmp
jmp
rol
cmp
ret
add
ins
pushf
ins
mov
cmp
cs
call
jl
nop
retf
pop
adc
mov
ret
lods
cli
and
pop
(bad)
mov
add
neg
test
stos
jmp
cmps
pop
or
ret
jg
es
je
popf
ins
aas
aad
fdiv
int
sub
push
jmp
add
inc
pop
dec
xchg
inc
fsub
mov
dec
hlt
or
adc
pop
es
arpl
mov
jnp
aad
jno
pop
inc
mov
movs
or
shr
test
or
cld
arpl
sub
mov
fsubr
sahf
imul
jnp
sub
mov
ficom
add
pop
and
shr
sbb
mov
aad
fild
out
lea
pop
es
jns
mov
xchg
cmps
cmps
dec
ret
out
fst
out
movs
add
push
repz
ret
cmp
enter
daa
dec
int
xor
lea
add
mov
lods
xor
xchg
adc
sbb
fild
in
mov
jmp
dec
lahf
adc
test
fistp
ret
pop
sbb
push
mov
jge
leave
add
mov
push
add
xchg
mov
ret
sub
xor
(bad)
(bad)
mov
test
and
sub
mov
xchg
lock
popa
outs
mov
shl
mov
jmp
mov
jne
add
sahf
xor
outs
mov
cmps
mov
dec
mov
mov
fisttp
xchg
ss
inc
arpl
and
shr
adc
cli
cli
mov
repz
dec
into
test
mov
int3
in
cmp
xchg
pop
sub
push
ror
jne
loopne
jne
sbb
test
dec
test
scas
push
pop
and
jnp
xor
pop
xchg
sbb
xchg
cld
or
xchg
mov
push
test
add
xor
lock
iret
ss
aaa
stos
inc
pusha
hlt
cmp
add
loopne
sbb
mov
and
int3
push
xlat
xor
mov
push
mov
in
dec
int3
bound
sub
cmp
or
add
pop
adc
mov
cmps
or
out
ficom
mov
fstp
(bad)
fstp
dec
or
sahf
in
pop
daa
or
movs
mov
mov
shl
mov
enter
cmps
inc
push
dec
pop
push
mov
dec
ds
sbb
cli
pop
or
mov
movs
sbb
xchg
stc
movs
rol
lahf
leave
(bad)
aas
mov
rol
xchg
xchg
ins
mov
test
call
push
mov
(bad)
loop
retf
xchg
clc
pop
int3
int3
adc
push
das
cmps
dec
lds
xor
clc
cld
shl
push
in
loop
movs
or
or
(bad)
mov
cs
mov
and
mov
jle
cmp
shl
sar
pop
sbb
and
leave
sbb
aad
sub
maxss
mov
shl
jmp
mov
add
nop
lods
push
(bad)
jmp
dec
pop
lds
sbb
call
cs
shl
or
ret
cmp
mov
stos
fidiv
div
cmp
stc
or
stos
scas
cmp
nop
scas
mov
mov
shl
pop
fist
pop
pusha
stos
stc
ret
pop
pop
mov
sbb
or
push
or
std
icebp
das
mov
ins
dec
popa
or
adc
inc
popf
adc
sub
pop
push
sub
(bad)
mov
push
das
pop
mov
nop
scas
push
pusha
dec
xchg
add
push
xchg
jecxz
sub
out
punpcklbw
cs
rol
pop
fld
enter
mov
out
mov
addr16
dec
pop
mov
fcomp
pop
push
jo
and
inc
mov
jne
in
cmp
or
adc
bound
out
out
mov
sahf
sub
and
js
dec
mov
mov
inc
test
xchg
movs
xchg
mov
and
mov
jp
shl
call
jmp
rol
stos
xor
jp
fist
shl
mov
nop
lahf
inc
and
mov
xchg
stc
mov
out
fnsave
inc
pop
in
sbb
jb
in
pop
lods
inc
retf
push
push
mul
cmp
adc
xor
jp
clc
xor
xchg
push
mov
hlt
rol
nop
call
test
xchg
stos
lea
xchg
inc
aad
sti
cwde
ffree
clc
sahf
adc
jns
fld
mov
lock
jno
jbe
and
jns
mov
adc
shl
movs
cmp
(bad)
xchg
gs
jnp
mov
retf
out
mov
cli
mov
xchg
ja
leave
cmp
inc
mov
sbb
sbb
out
or
mov
fild
in
stos
inc
sahf
inc
shl
enter
sub
cli
sub
dec
lds
cmp
push
mov
ss
cmp
loope
stc
nop
outs
stos
enter
adc
push
fcomi
jne
push
push
inc
xchg
ja
inc
and
add
mov
dec
mov
jge
xchg
jmp
out
stos
xlat
fisttp
cmp
aas
arpl
sti
bound
scas
fidivr
leave
and
and
lods
jmp
cmps
test
sub
mov
xchg
mov
and
jbe
sahf
adc
mov
push
mov
fadd
mov
mov
sbb
push
dec
cs
lods
repz
mov
inc
ja
fdivr
stos
int
mov
(bad)
jge
push
ins
jo
ret
mov
in
xlat
sbb
and
cmps
(bad)
pop
mov
out
(bad)
adc
push
neg
hlt
sub
inc
mov
clc
cmps
out
mov
jge
mov
aas
call
pop
popa
popf
push
fld
jno
addr16
out
ja
push
movs
rcr
mov
inc
jbe
imul
fild
sbb
jle
jg
daa
xor
ret
hlt
(bad)
mov
aam
pop
pop
mov
cwde
jmp
ss
cwde
movs
push
jb
cmp
jne
sti
cmp
inc
sbb
sti
pushf
cmp
ja
movs
(bad)
jmp
ins
cli
fldl2t
mov
js
and
dec
dec
and
ins
pushf
(bad)
imul
xor
dec
repnz
sbb
(bad)
call
mov
mov
js
test
xchg
ffreep
xor
(bad)
leave
cdq
test
stos
ds
enter
movs
bound
movs
pop
lods
push
nop
sub
sahf
jbe
aaa
fwait
clc
mov
test
jp
mov
(bad)
push
add
cld
js
sar
push
pop
ds
push
repnz
jle
sbb
stc
mov
mov
int
adc
test
jnp
jmp
cmp
fs
jnp
push
push
xor
les
test
sbb
lds
dec
adc
ds
cmps
out
mov
mov
fcmovbe
lds
movs
jbe
fdivr
jno
inc
dec
sub
repz
adc
test
jns
and
pop
cmps
shr
stos
push
inc
dec
aad
jmp
mov
rol
scas
mov
pop
push
cmp
clc
test
add
sub
push
cmp
popa
jno
pop
sti
test
sbb
fwait
push
dec
sbb
stc
not
add
inc
test
pop
fimul
and
cmc
mov
add
ds
loope
outs
jns
stc
xchg
mov
xchg
ins
dec
mov
push
int3
add
lods
test
je
and
xor
jbe
lds
mov
push
cmp
sub
adc
push
js
aaa
pop
repnz
inc
sbb
mov
pop
mov
sub
add
mov
mov
hlt
mov
shl
lods
int
push
pop
mov
movs
aaa
cmp
sbb
ja
xchg
cmp
add
mov
imul
sar
and
pop
mov
pusha
inc
mov
push
fdivr
jp
and
test
inc
retf
xor
cwde
pop
and
ins
sub
jno
test
mov
or
out
jge
aaa
or
or
stos
sti
mov
inc
cwde
inc
lods
mov
out
(bad)
idiv
push
mov
repnz
mov
jmp
ss
dec
lods
or
or
aad
jl
mov
sbb
inc
into
mov
je
stos
popf
cmps
pop
dec
xchg
jge
in
pushf
mov
adc
lods
pop
call
out
mov
inc
(bad)
call
or
xchg
xchg
sub
push
lock
mov
jo
sub
adc
cmp
mov
jecxz
loope
mov
arpl
shl
and
out
jmp
adc
push
xchg
mov
xchg
in
ja
add
push
inc
(bad)
repz
xchg
jl
aas
outs
cmps
pop
inc
ret
icebp
push
enter
mov
scas
repz
aam
mov
sbb
xchg
fs
inc
fbstp
lods
mov
push
jne
add
dec
jae
out
jns
and
cmp
push
mov
mov
cmps
pusha
jle
(bad)
ror
sbb
(bad)
dec
dec
mov
cmps
inc
push
ror
push
add
and
cmp
xchg
cmp
pop
jecxz
fucomip
imul
jo
jae
js
mov
faddp
shl
idiv
mov
movs
popf
addr16
sar
or
loope
push
fcmovb
inc
fs
rcl
push
test
fcomp
cmp
mov
push
and
mov
aad
sti
push
inc
inc
xor
shl
daa
sub
retf
fucom
ja
repz
cdq
cwde
push
add
out
imul
jmp
jnp
adc
dec
pop
bound
mov
das
cmp
cmp
inc
je
sub
stc
push
leave
movs
daa
push
nop
sbb
xor
test
aaa
jo
cs
sbb
add
adc
jne
mov
cmp
sub
sti
das
cdq
mov
dec
out
cmp
add
sbb
adc
scas
pushf
jp
retf
pop
and
or
arpl
or
xlat
loopne
inc
iret
ds
cmc
adc
push
mov
sbb
cld
and
sub
daa
fcom
outs
sub
fbld
in
jns
hlt
inc
fs
loop
out
inc
push
bound
add
stos
repnz
out
pop
pushf
daa
push
scas
repz
mov
pop
xchg
jo
aas
test
push
dec
(bad)
shl
jno
dec
ret
mov
sub
scas
loop
mov
int
ds
scas
sbb
jecxz
mov
adc
mov
scas
xchg
fsub
pop
(bad)
clc
inc
dec
and
sar
pmulhuw
out
adc
cdq
fst
jnp
stc
push
das
fs
mov
cmp
pop
scas
xlat
(bad)
leave
enter
mov
mov
inc
jbe
mov
jns
dec
mov
icebp
into
loopne
(bad)
shl
pop
push
add
push
xor
in
mov
jge
mov
shl
dec
(bad)
xchg
inc
into
retf
cld
test
out
clc
fimul
dec
xchg
lahf
mov
fstp
or
idiv
(bad)
adc
clc
jns
jle
sar
mov
xchg
inc
dec
cmp
and
dec
enter
pusha
test
fbstp
jmp
xchg
fld
hlt
inc
jne
push
push
(bad)
fadd
adc
mov
jecxz
inc
mov
inc
sbb
popa
mov
push
(bad)
mov
(bad)
pop
push
in
sti
(bad)
retf
jne
mov
mov
rcl
dec
xchg
xchg
out
jno
cdq
stos
or
cld
(bad)
loop
cmc
mov
in
daa
sub
push
or
cmp
hlt
cmps
ss
mov
push
sub
and
mov
mov
(bad)
sub
and
xor
or
sbb
fwait
pop
sar
push
jge
lods
jmp
es
rcl
mov
les
push
cmps
loope
arpl
mov
ds
xlat
and
in
or
int
inc
arpl
push
adc
aam
dec
in
mov
mov
or
mov
lock
out
daa
xor
test
jo
add
mov
shl
lods
rcl
mov
fs
shl
pushf
mul
ds
jp
stos
sbb
cs
pop
call
xchg
sub
retf
fist
cwde
mov
jbe
or
pop
pop
or
adc
scas
or
inc
and
mov
sbb
adc
popa
inc
pop
inc
pop
add
xchg
lods
jnp
sub
(bad)
in
dec
adc
sub
mov
push
push
adc
adc
pop
xchg
pop
push
pop
sbb
add
xor
mov
in
jbe
sub
cmps
jmp
mov
int3
enter
clc
ret
inc
ins
mov
pop
mov
inc
xchg
mov
ret
push
icebp
pop
inc
in
hlt
adc
mov
pop
mov
sahf
push
adc
fwait
mov
inc
test
test
pusha
add
push
jmp
or
mov
cmp
pop
out
aas
mov
ds
js
lock
aas
push
(bad)
(bad)
pop
xchg
xlat
jns
dec
out
push
or
sbb
test
in
mov
xchg
arpl
call
xchg
sar
fwait
test
pusha
sub
xchg
(bad)
rcr
movs
cld
xchg
mov
fild
inc
ds
jmp
push
mov
push
dec
iret
cli
dec
(bad)
adc
adc
inc
sar
sbb
and
xor
rol
and
mov
call
bsf
in
adc
rcl
fcomp
daa
dec
xor
lods
mov
cs
ja
add
mov
call
je
daa
sbb
aaa
rep
sbb
frstor
push
adc
push
ret
cmp
sbb
mov
add
or
mov
fsubr
inc
and
out
jae
fistp
imul
dec
je
fdivrp
cwde
or
add
jmp
add
test
inc
pusha
push
mov
in
lds
(bad)
in
mov
pop
int
sahf
xor
pop
ss
jle
pop
movs
retf
arpl
inc
dec
ret
pop
stos
jge
call
cmps
data16
sub
inc
jo
nop
cmps
es
pusha
push
inc
enter
(bad)
repnz
js
daa
mov
movs
fistp
xchg
mov
ins
ret
and
pop
add
(bad)
out
call
test
sbb
call
jns
cli
inc
cwde
fxch
inc
adc
in
push
in
mov
cmovg
jbe
lock
cmp
dec
cmp
push
lods
mov
bound
cmp
retf
mov
push
xchg
jnp
cmc
or
adc
int
adc
mov
add
leave
mov
(bad)
xlat
push
sbb
xchg
into
mov
hlt
inc
outs
xor
loopne
xchg
rol
lods
ficomp
xor
jb
das
imul
mov
enter
sbb
mov
out
mov
mov
popf
adc
push
div
push
(bad)
psubq
outs
ja
mov
jnp
in
daa
jbe
add
mov
inc
inc
jle
outs
fucomip
adc
in
aad
push
mov
test
retf
adc
push
fdivr
movs
mov
xchg
inc
add
pop
push
sub
pop
xor
mov
pop
cdq
pop
movs
pop
ret
add
mov
sbb
sbb
mov
fisttp
ror
xor
dec
pop
mov
cdq
adc
in
sbb
pushf
std
pushf
daa
scas
sbb
loopne
and
sbb
mov
cmp
mov
or
sahf
jno
push
stos
dec
pop
push
cmc
lds
loope
arpl
pop
push
test
adc
in
mov
daa
fisttp
hlt
and
hlt
and
scas
cmps
mov
jns
loope
mov
sub
outs
xchg
sbb
adc
in
jo
scas
inc
in
outs
xor
and
push
mov
sub
ja
push
jp
xchg
mov
push
fisub
pop
mov
ds
pop
ins
cmp
shr
cmc
or
pop
inc
dec
popf
add
jl
dec
xor
sub
jle
pop
lea
mov
mov
(bad)
or
push
and
aas
into
lods
mov
(bad)
sti
and
les
push
clc
out
mov
dec
mov
ins
fnstsw
cs
int
sub
or
mov
in
call
push
cmps
outs
jo
in
cwde
dec
push
fadd
sahf
fstp
cs
push
imul
sub
jmp
pop
sub
stc
movs
je
(bad)
ret
pop
ds
xchg
push
add
icebp
pushf
out
movs
cmp
xlat
or
push
pop
and
xor
outs
aaa
and
push
adc
jle
mov
cmps
push
(bad)
and
push
shl
sar
into
test
and
jge
js
test
cmps
les
in
dec
and
in
xchg
jae
(bad)
pop
aas
jp
xor
xchg
fist
push
loopne
out
bound
loop
mov
add
push
jno
int3
sub
ja
je
xchg
pop
out
retf
or
cmps
ret
inc
lods
or
adc
cmp
cmp
aam
cmp
hlt
sub
pop
das
mov
sub
dec
out
sub
jge
cmp
mov
mov
ja
fdivr
outs
adc
lods
int3
call
cmp
cmp
push
push
bound
fisttp
out
sar
xor
daa
clc
nop
or
jge
add
dec
sbb
outs
dec
cdq
popf
add
retf
xlat
mov
pop
ret
jmp
push
mov
rol
cs
jo
xchg
pop
sbb
cmps
mov
push
fst
add
jmp
fistp
jmp
movs
inc
es
out
std
ds
(bad)
scas
pop
fadd
int3
sub
push
mov
cmp
neg
adc
mov
xor
jb
adc
push
sbb
jmp
or
sub
push
lea
(bad)
adc
cmp
lods
imul
(bad)
cmps
aas
cs
loopne
fnsave
int
test
sbb
daa
loop
xchg
jno
imul
in
fsub
sub
cmp
push
rcl
jbe
add
or
dec
fidiv
in
out
jp
fcomp
out
adc
mov
ja
aam
out
pusha
or
xor
push
add
in
sub
test
(bad)
cmps
pop
dec
mov
mov
inc
out
inc
mov
cmps
xchg
iret
jecxz
dec
loopne
jb
mov
dec
add
dec
lea
lods
es
mov
mov
cmp
outs
jae
fbld
sbb
test
rcr
fistp
xlat
aad
or
mov
cs
mov
sbb
xchg
arpl
push
(bad)
sbb
push
sub
mov
mov
loope
xchg
sti
inc
inc
adc
push
sub
shl
sub
test
sbb
inc
inc
das
imul
dec
loope
cmp
in
jle
mov
out
mov
daa
mov
mov
and
pop
cmc
sahf
fstp
push
jns
or
push
fisttp
jle
and
neg
and
mov
push
repnz
pushf
loop
jns
in
push
sbb
xchg
test
xchg
loopne
or
jmp
repnz
pop
imul
push
frstor
or
fwait
imul
jne
ds
rol
mov
ret
mov
addr16
stos
or
ss
test
outs
sbb
idiv
movs
and
sub
pop
into
fstp
lahf
xor
mov
sti
movq
(bad)
fst
jae
mov
popa
sahf
cs
sahf
adc
loop
inc
lods
jg
mov
xchg
add
retf
shl
jecxz
xor
repnz
test
mov
mov
xchg
inc
inc
push
daa
cmc
test
sti
fst
xchg
xlat
mov
test
clc
iret
test
xchg
push
lods
lock
fdiv
lods
push
enter
(bad)
ins
mov
mov
mov
cmc
call
in
lods
inc
push
cmp
js
jne
cdq
xchg
cmp
sbb
jecxz
fst
xchg
push
jmp
movs
mov
bound
jmp
sbb
mov
push
fisttp
dec
sub
add
jb
shl
mov
fisubr
xchg
xor
movs
or
ins
jmp
pop
aaa
jecxz
jmp
push
scas
dec
jp
(bad)
(bad)
mov
std
xchg
xchg
sbb
repnz
cmp
xchg
addr16
(bad)
sub
pushf
(bad)
push
xchg
sub
dec
push
xchg
cmp
jge
or
xchg
xchg
jmp
pushf
jno
les
adc
aam
sbb
inc
mov
cmp
xchg
stos
xchg
mov
add
dec
push
cmp
je
and
or
push
std
outs
mov
movs
xor
mov
mov
popf
ds
pop
mov
pop
push
jns
cmp
les
sbb
push
fst
mov
std
mov
fcmovnb
xor
sub
push
cmc
push
xor
jmp
adc
add
int3
shl
nop
pop
ret
test
jmp
fld
mov
inc
std
gs
mov
pop
(bad)
dec
lock
inc
or
ss
sbb
push
gs
out
dec
xchg
cmp
arpl
out
cwde
push
sub
into
inc
in
inc
add
xchg
push
jo
retf
popa
sbb
pop
xchg
inc
mov
cmp
(bad)
jmp
sbb
setb
sbb
and
jp
aaa
mov
cmps
test
push
push
outs
pop
fsubr
ret
dec
out
jo
push
daa
pmullw
arpl
movs
loop
sar
je
rol
jp
pop
add
mov
jl
inc
mov
fiadd
fild
pop
pop
cmp
pusha
xchg
dec
mov
mov
pop
jecxz
inc
mov
scas
xchg
dec
sahf
aaa
mov
(bad)
xchg
xchg
loope
and
inc
xchg
inc
dec
dec
aas
movs
add
sub
out
les
inc
mov
int3
sub
test
inc
mov
jmp
stos
fcomp
dec
add
pop
hlt
jnp
pop
in
sub
mov
imul
mov
out
out
or
inc
mov
ficomp
push
xlat
mov
movs
aam
mov
aad
inc
push
inc
in
lods
mov
pusha
cs
jb
and
xchg
dec
mov
mov
(bad)
push
cmps
iret
jge
dec
adc
dec
imul
push
mov
movs
cmp
sbb
ror
nop
out
xchg
adc
push
cmp
jae
imul
mov
pop
sub
js
mov
aaa
and
repz
je
xchg
out
cmp
fcom
mov
scas
cdq
adc
xor
or
jmp
in
cmp
scas
enter
das
mov
adc
and
fisubr
les
mov
lock
jge
cdq
mov
xchg
scas
(bad)
and
adc
aaa
mov
xchg
or
enter
cmp
out
leave
mov
push
mov
std
pushf
cmp
cwde
sti
mov
repz
shr
loopne
cmp
push
inc
jo
jbe
scas
jmp
pushf
or
ret
jmp
out
cwde
aam
sbb
loop
or
div
aas
xor
shl
(bad)
sar
sub
test
adc
bts
jecxz
jl
add
pop
jne
push
cmc
adc
sub
inc
add
rcl
and
mov
repnz
in
ret
std
push
xchg
inc
sub
inc
sbb
inc
xchg
dec
dec
fidiv
inc
pop
mov
xor
mov
xor
imul
pop
cwde
test
add
fwait
inc
adc
mov
xchg
outs
cmp
movs
xchg
lds
sbb
(bad)
jnp
call
fidiv
aad
dec
iret
out
sbb
cmp
icebp
ds
in
in
sbb
add
pop
test
add
adc
cmp
jg
cmp
sbb
or
mov
mov
push
push
push
idiv
dec
ins
leave
imul
jmp
in
inc
ret
xor
cmps
data16
mov
aaa
movs
pop
and
push
aam
mul
lods
popa
mov
inc
fild
outs
seto
fs
pop
out
icebp
mov
(bad)
fcomip
imul
sahf
out
(bad)
xchg
fcmovu
mov
mov
icebp
sbb
and
sub
or
jo
mov
ret
and
adc
sbb
test
dec
mov
pop
cld
adc
daa
adc
mov
je
adc
(bad)
jmp
add
cmp
addr16
in
sbb
add
es
int3
inc
sbb
fcmovne
jno
movs
sub
mov
cmp
mov
xchg
adc
and
cmp
in
dec
push
or
xor
push
mov
dec
mov
xor
xchg
add
adc
mov
adc
ror
dec
in
popa
test
pushf
in
fs
in
jge
and
pop
ja
jmp
push
jo
push
shl
inc
xchg
cld
addr16
adc
jno
mov
int3
mov
pusha
xchg
sbb
inc
dec
inc
sub
pop
icebp
cmp
sahf
sahf
retf
jmp
pop
push
fdivr
push
cmp
nop
pop
mov
mov
jb
add
dec
and
fincstp
imul
jnp
int3
cwde
xchg
cld
call
and
pop
cmp
pop
aam
enter
movs
scas
lahf
jl
test
dec
push
leave
retf
outs
(bad)
repnz
add
in
adc
scas
lahf
fs
and
cld
jmp
mov
cwde
push
arpl
ret
mov
inc
fst
scas
xchg
(bad)
imul
jno
jo
sub
mov
sahf
fsubp
cmp
inc
aas
xchg
or
dec
jmp
mov
sub
out
sbb
xor
(bad)
loope
mov
imul
jns
sti
mov
mov
push
inc
inc
mov
or
pusha
dec
shl
cmp
movs
add
fwait
mov
das
push
jg
add
inc
xchg
call
call
in
out
dec
push
dec
and
in
mov
xchg
mov
cmp
cmp
out
(bad)
pop
mov
fimul
inc
xor
mov
pop
es
mov
sub
cli
sub
adc
xor
fucom
bound
hlt
mov
ss
fdivr
dec
shl
push
frndint
rcr
xchg
mov
nop
bound
inc
mov
fs
xchg
movs
sbb
es
jge
pop
iretw
bound
jo
cs
xor
push
dec
imul
xchg
lods
lahf
jne
data16
scas
cmp
xchg
push
mov
jmp
shr
imul
lock
xchg
inc
cmps
les
popf
loope
(bad)
les
xor
shr
cmp
or
mov
(bad)
xor
lock
and
ins
das
xor
sub
ret
out
add
mov
cwde
cmps
call
cmc
pop
out
xlat
je
and
clc
jge
cmp
mov
fdivr
pusha
push
mov
aam
imul
into
int3
(bad)
adc
mov
dec
mov
xchg
dec
pop
shl
dec
mov
mov
mov
mov
test
fnsave
jne
jb
aam
test
mov
sbb
sub
xchg
loopne
inc
out
(bad)
jge
adc
stos
xchg
fidivr
dec
sbb
pushf
inc
xchg
inc
out
jmp
jnp
xchg
lea
outs
pop
jno
jmp
xor
leave
mov
add
sbb
jp
pop
and
sub
mov
mov
test
jmp
push
aam
call
mov
arpl
lods
push
movs
cmp
nop
pop
cli
and
repz
cmp
pop
fwait
jns
pop
into
arpl
bnd
and
call
xchg
cli
sbb
scas
dec
sti
repnz
movaps
xor
shr
call
stc
jmp
fwait
in
mov
dec
int
vaddpd
push
iret
cmp
or
xchg
pcmpeqd
data16
sbb
or
lock
sub
dec
stos
(bad)
hlt
stos
jno
das
scas
push
push
out
movs
lods
cmps
sub
jl
mov
adc
cmp
fidivr
adc
ins
rcr
inc
outs
xchg
das
mov
jmp
adc
xchg
jge
and
loopne
add
or
sbb
stos
cwde
adc
pop
mov
sbb
sti
fld
mov
mov
add
jg
sbb
jmp
es
pop
repz
fadd
lock
and
rcl
ja
add
mov
jl
nop
xchg
jecxz
mov
outs
push
jns
js
ds
mov
jne
aad
pop
div
mov
and
mov
pop
ins
mov
adc
test
and
test
mov
bt
add
sbb
push
sahf
or
int
jge
loop
pop
mov
loope
sub
das
ins
fidivr
sub
sti
ret
jge
jmp
xor
push
xor
or
or
jne
xchg
mov
call
xchg
cmp
mov
shl
jns
pop
jmp
mov
adc
push
ins
mov
jmp
(bad)
outs
lods
adc
jbe
inc
lahf
jo
push
(bad)
mov
jp
popa
or
repz
call
fist
sub
cmps
xchg
add
sub
jecxz
xor
push
call
adc
(bad)
jns
into
ss
mov
addr16
push
push
jnp
mov
sbb
jnp
ret
sti
xchg
lods
fisub
loopne
scas
adc
lods
jecxz
int
jecxz
shr
fcom
add
retf
mov
xchg
mov
pusha
int3
jecxz
movs
je
mov
fild
adc
dec
pop
daa
jne
cmps
inc
push
mov
addr16
scas
(bad)
xor
mov
push
fs
scas
mov
shr
adc
fmul
jge
or
xchg
jmp
out
pop
fs
mov
mov
lods
imul
ins
push
test
cmc
add
clc
xor
mov
add
mov
outs
sub
pop
adc
mov
mov
mov
arpl
dec
mov
jmp
daa
(bad)
push
scas
sbb
push
sub
jo
int
loope
pop
pop
sbb
sti
jb
ret
pop
popa
les
jno
repz
ret
jns
push
repnz
push
and
jp
sbb
stos
inc
sar
loopne
jl
and
push
add
mov
bound
ss
test
pusha
in
fcom
cmps
test
and
loope
add
push
jmp
mov
jns
mov
js
das
mov
outs
(bad)
jnp
repz
fwait
mov
scas
or
dec
push
push
mov
mov
cmp
sbb
call
out
mov
xchg
push
repnz
jp
dec
das
mov
mov
fxch
sub
cmp
call
dec
push
pop
imul
cmc
or
jne
or
cmps
sbb
fidivr
pop
mov
or
mov
imul
ret
push
in
das
push
cmp
or
test
cdq
je
dec
out
daa
aam
xchg
push
or
sub
outs
mov
xor
mov
(bad)
(bad)
mul
aad
out
pop
or
mov
pop
pop
into
aam
rcl
pop
jl
pop
outs
test
dec
cli
mov
js
jmp
dec
pusha
(bad)
pop
and
hlt
sub
dec
jb
in
cmp
out
mov
or
int3
jl
lods
(bad)
nop
inc
mov
rol
cwde
mov
cld
(bad)
out
vphsubwd
pop
sbb
loope
(bad)
icebp
inc
and
dec
shr
mov
sti
and
push
int3
xchg
movs
jle
xchg
test
push
retf
jnp
inc
or
rcl
outs
jnp
inc
ror
sar
div
stos
aaa
push
ror
inc
mov
or
mov
std
call
mov
addr16
mov
hlt
jo
pop
cdq
push
fisttp
int3
or
lods
sub
out
aad
mov
xchg
sbb
outs
xchg
and
jle
mov
call
xchg
xchg
aam
aas
(bad)
fdiv
cli
loopne
push
jmp
cmp
cli
repz
jb
idiv
sbb
(bad)
(bad)
jl
sti
mov
clc
push
lea
jg
nop
mov
jp
mov
xor
shr
leave
cli
test
cdq
imul
iret
or
push
cmp
xchg
pop
push
retf
xor
fs
xor
xchg
jae
ja
pushf
xor
movs
add
call
dec
add
punpckldq
cmps
pop
mov
cmp
sub
mov
outs
and
adc
mov
jp
mov
popa
add
int3
lea
mov
and
(bad)
icebp
push
xchg
daa
sbb
hlt
xor
rcl
stc
xor
inc
ins
ror
cmc
imul
lahf
mov
fwait
mov
xchg
jno
or
pop
stos
push
and
jp
out
fisttp
movs
xchg
enter
xchg
inc
fnstsw
jl
mov
sbb
mov
imul
repz
inc
lock
mov
jmp
imul
ficomp
cmps
fstp
mov
retf
xor
mov
stc
sub
jne
cmp
mov
retf
pushf
xchg
xchg
cld
mov
fdivr
ins
jl
into
sbb
repz
and
add
cmp
and
nop
div
inc
out
rcr
lods
adc
jmp
call
xchg
std
leave
push
sbb
stos
cmp
fwait
push
add
jmp
stos
mov
push
pop
aaa
mov
pop
push
jne
fs
add
dec
clc
ss
pop
mov
in
shl
mul
or
mov
add
inc
adc
retf
dec
xor
jne
mov
lods
fisubr
bound
cdq
movs
mov
adc
mov
adc
fs
fucom
sub
lahf
test
add
pop
push
ss
inc
push
sub
outs
or
fbld
inc
bound
out
scas
mov
fadd
aas
repz
push
fbld
push
mov
cmp
pop
shr
data16
daa
add
outs
sti
scas
and
pop
outs
sahf
xchg
push
sbb
(bad)
out
shl
sub
jp
loopne
and
mov
imul
pop
cmp
stos
enter
dec
fucomi
inc
shl
shr
mov
movs
xchg
sbb
jno
jb
pop
push
ss
lock
mov
mov
or
into
xchg
cli
fwait
loopne
(bad)
cmps
pop
cmp
or
out
jno
and
mov
sub
mov
pop
ficom
push
scas
dec
push
or
inc
or
into
sahf
mov
je
push
fs
test
ds
sub
mov
stos
and
sbb
pop
mov
push
loopne
les
mov
pop
mov
jo
inc
xor
mov
hlt
dec
in
jno
jne
repz
pop
pop
fwait
add
shl
xor
mov
add
mov
mov
add
push
into
scas
stos
mov
outs
les
mov
sar
push
xchg
sub
mov
imul
sbb
inc
stc
mov
ss
les
fs
dec
inc
jbe
mov
hlt
out
jae
gs
test
cmps
pop
pop
aam
or
mov
xchg
xor
fcom
pop
test
inc
mov
aad
xchg
int3
shl
str
loopne
js
xchg
dec
adc
stos
ror
xchg
arpl
aam
addr16
mov
shr
in
mov
sub
dec
jg
jle
push
sub
pop
xchg
cmps
mov
fist
sbb
aas
mov
push
das
pop
mov
add
jnp
lods
cwde
jb
xchg
outs
in
les
(bad)
aaa
pop
xchg
cdq
lahf
rcr
sub
xor
fwait
out
add
mov
mov
jl
pop
outs
inc
ror
mov
cli
repz
xlat
(bad)
imul
dec
push
and
sub
or
or
movs
inc
ret
setnp
pusha
shl
(bad)
push
jne
movs
mov
scas
jno
test
xor
scas
loop
jne
shl
call
js
inc
add
xchg
das
adc
ds
(bad)
cmp
sub
imul
mov
je
jl
dec
(bad)
mov
jl
cmp
es
fstp
outs
ds
in
outs
mov
mov
das
xchg
sbb
inc
and
shl
cld
adc
div
xchg
jmp
cmp
ins
push
mov
(bad)
and
sbb
pop
lock
or
arpl
mul
fidiv
mov
mov
pusha
jmp
add
xchg
cmp
push
dec
xchg
loope
imul
(bad)
jmp
mov
dec
jns
fcmove
dec
jo
dec
shr
dec
dec
mov
jl
repnz
comiss
or
push
in
sbb
movs
cmc
inc
scas
sbb
out
dec
mov
and
(bad)
outs
push
lds
jae
out
jle
pop
int
pop
inc
(bad)
xchg
pop
xchg
aaa
fstp
pop
call
adc
fdiv
cmp
and
mov
int3
lock
push
(bad)
adc
in
xchg
shl
push
mov
ss
xlat
dec
xchg
aaa
cmps
push
xchg
and
scas
push
outs
daa
dec
(bad)
(bad)
shl
pop
rcl
shl
sbb
xchg
cs
out
mov
out
sbb
pop
fwait
mov
(bad)
cmp
ret
and
mov
and
inc
inc
ja
imul
ss
mov
push
adc
xchg
xor
jns
imul
inc
pop
out
cmp
(bad)
cmp
and
push
push
mov
clc
adc
mov
inc
push
in
or
test
mov
mov
clc
retf
sub
lods
dec
movs
fidivr
js
push
pop
lea
jg
adc
adc
xor
push
sub
adc
test
ja
lahf
cmp
std
or
in
cld
stos
sbb
ins
mov
mov
js
daa
lock
retf
das
out
retf
sbb
mov
push
dec
lods
lods
movs
ja
je
fst
fldenv
inc
mov
call
sti
test
pop
push
jp
sbb
nop
retf
movs
mov
lahf
xor
jp
fwait
mov
mov
and
jae
cmc
ds
sti
retf
cmps
stos
xchg
adc
arpl
jg
jae
jecxz
stos
pop
push
(bad)
dec
scas
into
or
adc
dec
sub
xchg
call
sub
je
arpl
jp
jp
cdq
add
fdivr
cwde
jecxz
sti
xor
in
loope
fbstp
fstp
xchg
ins
retf
repnz
not
cli
mov
xor
popf
shl
ins
push
repz
adc
addr16
mov
xor
mov
push
mov
inc
addr16
fldcw
pop
or
xchg
push
jmp
jle
inc
pop
dec
mov
pop
out
call
mov
xchg
sbb
sbb
out
sub
mov
and
mov
xchg
add
aas
sahf
xchg
sbb
into
fisub
outs
or
pop
xchg
cli
gs
push
mov
in
cmp
add
add
neg
xchg
jle
(bad)
out
cs
addr16
icebp
lahf
and
sbb
adc
or
test
cld
mov
out
outs
imul
mov
mov
in
xchg
and
loopne
(bad)
xor
mov
inc
fiadd
iret
dec
dec
cld
outs
daa
push
ds
pop
pop
test
push
sub
push
xchg
sti
pop
cmp
cli
add
movs
mov
jbe
rcr
ja
imul
ror
xchg
sub
imul
or
mov
jnp
dec
push
adc
mov
int
mov
imul
data16
(bad)
mov
dec
shl
xchg
and
into
push
ins
addr16
pop
sbb
std
inc
popf
ins
mov
sbb
rcr
(bad)
hlt
xor
sub
pop
sub
jmp
dec
xor
mov
jmp
inc
(bad)
pop
mov
cwde
lds
out
outs
add
jp
daa
dec
mov
jl
push
(bad)
in
jae
inc
call
cmp
xchg
movs
mov
aam
cmp
loop
outs
pushf
pusha
sub
out
ss
shr
mov
imul
ss
sbb
jns
inc
dec
sub
sub
xchg
fidiv
xchg
sub
mov
xchg
popa
jae
push
scas
inc
push
in
mov
adc
mov
pop
nop
in
mov
mov
adc
dec
iret
stc
cmp
xchg
cdq
xchg
cmp
in
mov
add
mov
test
iret
mov
sub
enter
ja
test
push
dec
dec
and
outs
push
mov
mov
loop
mov
mov
int3
bound
int3
inc
dec
fbld
xchg
outs
mov
aaa
inc
mov
and
pop
call
jmp
jns
dec
mov
mov
outs
xchg
push
aas
push
add
or
or
jbe
cmp
shl
int
nop
pusha
push
aaa
jo
mov
push
mov
stc
(bad)
jo
push
jo
mov
(bad)
das
pop
add
jne
jmp
lock
cmp
or
and
mov
gs
jo
std
adc
or
enter
inc
adc
push
add
pop
(bad)
jne
in
leave
adc
(bad)
xor
sbb
mov
aas
xchg
ffree
sub
inc
daa
std
fbld
jge
call
jp
sbb
ror
arpl
sub
xchg
add
cmp
scas
sbb
cmp
xor
push
sub
stc
jle
sbb
fcmovb
and
popa
xchg
cmc
int3
push
mov
sbb
fwait
dec
fadd
mov
sbb
push
jge
fld
shl
imul
(bad)
and
(bad)
mov
jmp
pop
or
cmp
aam
out
mov
into
popa
dec
aas
mov
lds
ins
cmp
jmp
add
cmp
lea
int
shl
outs
cmps
pop
test
or
neg
lea
out
std
bound
adc
pop
adc
and
mov
into
daa
in
and
sub
jnp
daa
sbb
shl
inc
push
pop
and
es
call
pop
enter
or
imul
or
sbb
xor
gs
push
mov
retf
jno
push
sbb
or
imul
jg
(bad)
shr
add
sub
loop
out
xlat
xor
pop
int3
jae
(bad)
cmps
jp
data16
cmps
dec
mov
hlt
test
cmp
retf
push
pop
loop
xchg
and
loope
xchg
xchg
xor
(bad)
mov
in
stos
int3
push
aas
loop
cli
jb
data16
sub
outs
outs
test
inc
mov
xchg
mov
pop
rol
pop
push
dec
gs
xor
jg
push
mov
mov
add
ror
test
mov
aaa
mov
stos
mov
mov
clc
jle
nop
mov
xor
sub
jmp
sbb
dec
ror
mov
sub
or
jle
cmp
outs
mov
iret
js
push
add
jg
pop
pop
jns
jne
inc
cmp
pop
ins
ret
or
push
jecxz
jo
inc
sbb
dec
in
mov
call
pop
jo
cmp
or
mov
clc
inc
lea
div
sbb
jle
mov
sub
ficom
pop
cmp
out
mov
push
add
loope
pop
cmp
mov
or
jmp
sbb
dec
frstor
(bad)
cmp
mov
adc
das
pop
movs
loopne
jmp
push
or
mov
push
sbb
dec
ins
dec
rcl
mov
push
mov
lods
mov
inc
jbe
stos
mov
retf
push
or
jne
cs
fs
daa
add
and
jbe
sub
retf
sti
jmp
retf
bswap
(bad)
mov
ret
and
adc
push
cmp
mov
loope
cmp
jnp
(bad)
daa
add
mov
mov
pop
push
xchg
push
mov
jb
jbe
push
ins
dec
mov
inc
(bad)
clc
cmp
pop
test
sahf
push
stos
dec
push
stos
jbe
rcr
cwde
and
dec
push
cmc
mov
test
push
gs
leave
pushf
mov
popf
cld
mov
jmp
icebp
and
xor
pop
dec
out
retf
(bad)
sub
inc
mov
and
jae
repnz
adc
pushf
mov
pop
adc
inc
xchg
or
push
jge
lods
das
fmul
xchg
cli
stos
mov
push
pop
jl
jo
in
push
and
jno
jmp
(bad)
out
sbb
nop
retf
add
lods
lock
push
xchg
dec
test
jne
ins
imul
sbb
lods
enter
sub
pushf
ret
je
mov
in
adc
fcomi
and
xchg
cmp
loopne
neg
cbw
shl
xor
pop
ins
sbb
push
cmps
test
fstp
fidiv
xchg
mov
fwait
test
outs
push
lds
sahf
scas
and
out
xchg
jns
test
test
addr16
aam
inc
int
out
cmp
pop
(bad)
mov
jg
test
sub
cli
sub
rcl
mov
mov
cmps
jle
mov
add
call
mov
(bad)
jp
ins
out
outs
repz
push
ret
inc
add
jg
outs
jp
push
mov
test
pop
imul
loop
adc
sub
in
inc
sub
mov
fidivr
xchg
ins
dec
sbb
inc
outs
inc
sbb
mov
popf
sub
das
js
xchg
inc
fcmovne
mov
cmp
adc
popa
loopne
inc
mov
mov
push
sahf
inc
aad
jle
jbe
(bad)
pop
or
jb
jne
push
sbb
mul
mov
stc
test
rol
or
mov
test
daa
add
hlt
inc
outs
stos
test
ret
inc
call
mov
dec
int
gs
repz
cmp
cli
jmp
sbb
xchg
mov
jl
and
xor
jne
and
scas
aam
cs
iret
xchg
movs
jmp
sar
mov
mov
inc
into
mov
into
hlt
ins
nop
adc
xor
adc
mov
xor
mov
cmps
fidiv
in
push
call
sbb
push
mov
out
xchg
aad
fst
loop
fstp
(bad)
fs
push
pop
pushf
lods
push
out
pop
add
add
push
mov
lods
push
add
inc
ds
jmp
ret
jne
loopne
pusha
ins
dec
ret
xchg
add
jl
dec
lods
jle
pop
dec
jb
cmp
(bad)
mov
hlt
push
bound
nop
pop
jb
xchg
jns
fstp
cmp
retf
jbe
push
rol
and
bound
jbe
cmp
inc
je
cmp
dec
sbb
out
out
rol
arpl
jnp
pop
adc
hlt
mov
jmp
sbb
gs
(bad)
cmp
sahf
dec
shr
scas
scas
mov
(bad)
jne
mov
sbb
pop
add
sbb
ja
sub
sbb
rol
mov
gs
outs
or
jge
aad
rcr
xchg
retf
dec
jne
adc
or
or
stos
inc
cmp
imul
imul
ficom
xchg
popf
dec
push
enter
cmp
lods
cmp
or
mov
pop
pextrw
push
sub
inc
rcl
pop
dec
cmp
and
sub
ret
fistp
xor
inc
pop
jno
inc
test
lods
mov
fwait
jns
sbb
ret
repnz
mov
cmp
iret
pop
push
stc
neg
jg
ficom
repnz
js
imul
xchg
pop
lock
retf
mov
sar
push
xchg
lods
dec
movs
inc
sub
sub
or
into
loop
cld
jne
xchg
les
out
pop
fcomp
mov
ret
ret
clc
inc
call
retf
dec
fidivr
mov
retf
jmp
bound
push
dec
les
nop
addr16
rol
push
mov
pop
inc
push
inc
lods
test
xchg
and
push
xor
fst
cli
sub
cmp
adc
mov
xor
xor
xchg
cmc
add
fwait
mov
cmps
pop
dec
(bad)
cwde
shl
or
mov
mov
pop
aam
adc
jmp
retf
sbb
sbb
(bad)
or
popa
sbb
sub
ret
sar
out
push
pop
bound
call
ins
jnp
in
fiadd
stos
and
inc
retf
mov
pop
mov
push
outs
mov
cld
mov
push
jmp
mov
xor
pop
(bad)
push
adc
and
lock
mov
loopne
popa
mov
daa
jl
jmp
loope
xor
dec
xchg
test
mov
xor
stos
mov
cmp
imul
push
mov
arpl
mov
aad
std
lock
jne
xor
mov
arpl
jmp
xlat
pop
adc
cld
aam
out
push
push
test
sbb
jae
daa
mov
mov
ds
inc
cmc
jbe
or
lea
push
or
cmp
in
cmps
xchg
lds
ficom
add
(bad)
std
(bad)
lahf
mov
pop
dec
dec
mov
jbe
in
mov
stos
aam
loope
sbb
jno
add
retf
(bad)
in
daa
xchg
add
sahf
in
(bad)
push
ds
imul
stos
ror
dec
int
sub
test
movs
(bad)
push
ds
push
jb
nop
mov
pop
popa
cvttps2pi
ins
mov
ret
adc
jp
mov
xchg
daa
inc
call
icebp
or
and
push
imul
iret
in
mov
sub
jl
mov
pop
mov
push
inc
pushf
les
lahf
cmp
and
or
(bad)
xor
(bad)
jp
inc
mov
in
mov
aam
(bad)
sar
or
sti
ror
icebp
dec
aad
and
cmps
mov
stc
movs
outs
mov
nop
movs
jno
mov
popf
scas
dec
lods
(bad)
mov
mov
js
loopne
jl
loopne
cwde
or
daa
xchg
bound
shl
imul
jnp
dec
pop
enter
test
pop
repz
iret
dec
dec
adc
js
jmp
push
loope
xor
xchg
das
or
mov
mov
or
xchg
or
mov
jp
pop
popf
jp
shl
mov
xor
jle
push
cmps
xor
sbb
jg
retf
and
jbe
and
inc
mov
cdq
punpcklwd
mov
dec
add
inc
popf
test
(bad)
je
mov
pop
iret
ror
pop
xlat
(bad)
mov
xchg
xor
mov
into
in
outs
dec
sbb
shr
or
pop
add
imul
out
jmp
mov
push
mov
mov
jb
pop
jbe
test
jmp
xor
mov
dec
xlat
loopne
mov
cmc
push
(bad)
hlt
jg
mov
and
mov
xor
pop
jmp
dec
dec
xchg
mov
inc
mov
retf
nop
outs
inc
lds
push
icebp
sub
mov
ds
aam
push
push
cmc
pop
xchg
fucomi
cmp
mov
sar
mov
pop
aad
sar
dec
inc
dec
dec
pop
mov
xchg
std
adc
ds
xchg
sbb
xchg
ds
mov
mov
xlat
ds
xchg
cmp
mov
and
int3
dec
outs
add
fwait
xchg
mov
jmp
push
sub
(bad)
mov
imul
xchg
cmp
in
imul
adc
cmps
movs
cmp
and
stos
inc
mov
aad
xor
add
sbb
pop
(bad)
pop
clc
mov
mov
adc
jbe
sub
nop
lea
cmp
jge
and
loopne
cmp
sbb
out
retf
sbb
in
ret
jmp
jns
mov
div
or
ja
xor
xchg
fst
clc
adc
push
stos
les
jnp
push
inc
jge
ror
enter
mov
jmp
pop
mov
sbb
test
cmp
push
loop
and
addr16
sub
movs
xor
cmp
adc
adc
cwde
psubd
mov
nop
outs
retf
fsubrp
outs
pushw
inc
and
sbb
das
mov
pop
push
(bad)
xchg
shl
sbb
push
push
lahf
jle
test
cmp
cld
je
push
out
retf
cmp
lods
mov
out
xlat
push
fs
mov
cmp
cli
mov
imul
aad
ror
into
cmc
xchg
stc
or
fs
pop
xor
outs
aad
inc
in
pop
loop
ret
jb
pushf
pusha
dec
push
sbb
out
add
push
mov
xchg
or
xchg
inc
pop
rcr
lea
xor
sahf
xchg
sub
push
jl
jne
inc
mov
lock
cmp
(bad)
lods
and
sbb
fstp
mov
lea
dec
xchg
jle
mov
pop
in
int3
xchg
sti
mov
cmp
fadd
sub
jl
js
and
sti
cmp
movsx
fstp
cmc
add
pop
inc
addr16
inc
aam
mov
add
inc
dec
ret
int
jb
xor
ss
mov
shr
xor
mov
loop
inc
or
fcomp
add
and
mov
(bad)
mov
add
(bad)
push
dec
mov
mov
push
mov
sub
rcl
mov
mov
xchg
scas
push
pop
pop
push
repz
push
outs
sub
or
jmp
jne
lds
xchg
cmp
movs
push
imul
outs
sbb
out
sbb
mov
mov
enter
dec
jmp
pop
sbb
stos
out
mov
lods
cmps
in
inc
es
sub
jne
adc
sahf
pop
inc
push
mov
leave
sbb
mov
mov
xchg
gs
push
mov
ja
mov
mov
icebp
clc
leave
pop
adc
and
xor
leave
test
outs
sub
call
leave
lock
jl
imul
push
pop
jmp
lahf
xchg
pop
test
jmp
mov
aaa
mov
addr16
in
inc
and
push
pop
adc
pop
dec
inc
cmp
cli
outs
neg
xchg
adc
push
pop
aad
jp
pop
aad
shl
add
lds
leave
sbb
push
mov
or
mov
jno
mov
cmp
sbb
(bad)
or
jle
popf
mov
lahf
popa
xchg
add
pop
xchg
in
sti
mov
jne
mov
call
push
add
pop
icebp
xchg
jmp
mov
es
imul
sbb
or
add
mov
cdq
mov
push
xchg
ins
or
sahf
mov
in
dec
mov
outs
mov
xor
ins
and
xor
repnz
and
fwait
cld
aaa
out
not
mov
jp
je
push
mov
addr16
hlt
pusha
popf
sub
and
or
cli
xor
adc
xor
pop
out
inc
add
fldenv
mov
jecxz
popf
sbb
hlt
or
push
lds
imul
mov
fidiv
cwde
ret
mov
push
fistp
loope
xchg
fbstp
fwait
sbb
push
cld
loop
mov
jecxz
sub
mov
cmp
push
repz
lock
test
mov
imul
fistp
mov
mov
adc
fisttp
ss
sti
sub
pop
sub
push
call
mov
div
adc
jle
inc
sbb
imul
les
inc
lods
dec
pop
dec
je
xchg
and
into
sbb
(bad)
repnz
mov
push
adc
jl
rcl
dec
int3
xchg
sub
in
mov
push
cmp
lahf
dec
inc
ss
sub
push
jmp
adc
sahf
jae
jnp
arpl
dec
adc
in
sbb
pop
push
loope
cld
xchg
clc
sbb
jnp
mov
rcl
in
retf
jae
dec
shr
outs
test
cmps
fadd
mov
add
out
dec
xchg
icebp
sub
pushf
cs
cmp
fisttp
std
(bad)
(bad)
cmp
ror
inc
out
cmp
mov
cli
dec
loope
xchg
xor
jne
mov
popf
inc
ss
ins
test
pop
inc
ret
and
cmc
(bad)
jo
mov
fisub
out
outs
not
ds
xor
pusha
push
test
mov
jle
aas
adc
mov
sbb
loop
cmp
and
add
xchg
pop
ins
inc
mov
pushf
ins
push
push
loope
imul
jmp
push
xor
pop
pop
pop
and
jmp
xor
sub
movs
stos
dec
jl
add
leave
dec
out
stos
pop
and
sub
push
sbb
call
sbb
lods
std
pop
mov
addr16
shr
call
cmp
mov
pop
sub
arpl
mov
stc
pop
cdq
adc
cmp
lock
inc
mov
push
mov
mov
jl
adc
ins
jg
(bad)
jmp
loopne
xchg
fnstcw
jecxz
lods
sub
pop
jmp
js
dec
xor
shl
stos
mov
bound
push
fwait
rcl
popa
add
cmps
mov
mov
(bad)
jno
push
cmp
mov
jmp
data16
xchg
das
and
mov
push
mov
aas
fbstp
jl
cmp
call
daa
inc
in
cmc
push
and
mov
jae
pop
push
test
pop
lock
xor
xchg
mov
inc
fprem1
fnstsw
and
popf
sub
clc
outs
ror
or
xchg
ret
and
pop
push
mov
xchg
fcom
call
clc
sbb
inc
xor
xchg
std
(bad)
push
add
pop
jno
inc
sbb
mov
les
sbb
(bad)
xor
pop
lock
xor
movs
rcl
test
ficomp
sti
cmc
clc
call
test
and
les
in
cmp
imul
add
lods
push
adc
sub
sub
xlat
(bad)
mov
push
lds
ds
scas
(bad)
popa
(bad)
mov
loope
cmp
adc
sbb
or
popa
test
bound
xchg
fucom
retf
jp
pop
jge
adc
or
jo
repz
xchg
sbb
pop
mov
xor
jmp
call
movs
add
inc
add
xchg
arpl
stos
lods
ret
gs
pop
mov
stos
imul
aas
sbb
add
loop
xor
paddusb
test
loop
mov
inc
(bad)
pop
inc
dec
or
stos
add
mov
fs
adc
mov
or
popf
int3
adc
ss
adc
jne
push
jmp
lods
mov
ds
push
mov
mov
movs
pop
mov
xor
pushf
out
adc
out
adc
test
sub
xchg
inc
sbb
xor
cmp
gs
imul
dec
jnp
push
call
or
ret
xor
or
jmp
mov
cmp
fs
mov
shl
sbb
add
outs
js
sbb
push
pop
ret
rcr
or
mov
sub
pop
shr
push
inc
ret
xchg
and
xchg
fcmovnb
out
cli
or
retf
shr
movs
jb
xor
aad
es
jg
in
xor
cmc
loope
or
jl
outs
dec
adc
fidiv
dec
cwde
xor
inc
sbb
lods
jbe
add
jp
cmp
nop
dec
lea
mov
movmskps
mov
push
aas
mov
repnz
add
(bad)
js
add
dec
out
jmp
dec
imul
sbb
xchg
popf
mov
and
sbb
fistp
inc
cmc
xor
xlat
push
fld
xchg
(bad)
push
shl
pushf
push
cmps
out
jle
and
sub
out
adc
mov
jg
inc
(bad)
mov
mov
test
mov
mov
jnp
push
mov
es
or
xchg
cmp
lock
cwde
ja
shl
cdq
jne
popa
not
mov
dec
jg
mov
idiv
cdq
mov
sub
div
out
xor
fld
stos
cmp
jb
repz
xlat
jmp
iret
mov
repnz
mov
ja
cmps
mov
xchg
scas
sahf
pop
mov
sub
push
pusha
loope
sub
stos
cli
sahf
shr
xor
sub
fwait
push
loop
jmp
adc
loopne
jbe
mov
in
dec
div
dec
das
jp
inc
lahf
sbb
and
addr16
in
add
push
lods
adc
add
jl
das
test
shr
dec
cwde
ficomp
mov
mov
in
dec
push
cs
pop
dec
in
pop
add
inc
loopne
sbb
jmp
cmp
or
cmps
data16
mov
into
inc
ret
cmp
idiv
adc
ins
imul
out
xchg
mov
cmp
lods
push
push
das
pop
mov
sbb
enter
or
lods
js
sahf
xchg
popa
aaa
sbb
jns
daa
add
cli
cmovne
repz
fld
or
rcl
xchg
sahf
mov
cmp
out
pop
out
enter
sahf
je
sbb
cmp
cmp
rcr
jg
das
add
cmps
mov
sub
adc
sub
mov
inc
inc
(bad)
jbe
outs
daa
add
retf
mov
xchg
sbb
movs
aad
and
mov
push
std
ins
mov
mov
mov
pop
sbb
and
mov
das
jae
aad
fisubr
test
ds
clc
out
shl
dec
stos
js
sub
dec
(bad)
int
cmp
std
adc
jae
pop
enter
rcr
rol
mov
xor
inc
aas
mov
inc
sbb
mov
sbb
(bad)
jno
add
sub
arpl
adc
sub
pop
inc
psubq
mov
cdq
cmc
in
cwde
cmp
pop
out
jge
(bad)
scas
dec
xchg
fwait
stc
xor
or
leave
mov
mov
inc
sbb
push
xor
pop
push
rol
sub
push
daa
pushf
and
scas
sbb
cld
sti
test
sbb
clc
push
mov
pop
push
(bad)
mov
addr16
outs
dec
sbb
sbb
int
xchg
push
call
push
adc
les
stos
jecxz
push
jo
pop
ins
pop
mov
pop
cmc
push
shr
cmp
xchg
xor
xor
nop
dec
aas
dec
ret
xchg
imul
jno
call
data16
(bad)
rol
mov
stos
lods
sub
out
or
jmp
lods
(bad)
addr16
or
cmp
ja
sub
fild
or
lea
sub
imul
jl
pop
jae
(bad)
lea
jmp
in
cmp
and
call
xchg
arpl
push
in
fiadd
cmp
loop
dec
adc
mov
dec
and
fs
repz
jmp
bound
ret
or
xchg
cmc
adc
xchg
dec
jmp
push
cwde
ret
loop
adc
fld
sbb
cmp
inc
push
int
sub
push
add
sub
int3
jmp
mov
pop
popf
cmps
adc
das
icebp
(bad)
clc
(bad)
je
sbb
mov
xchg
mov
fistp
push
or
shl
xor
stos
jmp
or
dec
daa
loop
and
cmp
add
loope
(bad)
dec
sbb
fdiv
ror
mov
call
fsubr
jg
outs
mov
dec
and
cwde
enter
mov
int
push
in
neg
mov
les
cli
mov
fbld
add
jmp
or
loopne
neg
test
jmp
aad
add
cli
aas
mov
out
cmps
jno
je
mov
jp
aam
test
pop
dec
mov
jnp
mov
mov
pop
sub
xchg
ret
ins
cld
in
xchg
daa
cdq
data16
cmc
std
hlt
shl
sub
cmp
cdq
mov
or
cmps
pop
dec
(bad)
mov
(bad)
es
retf
popa
lock
mov
cli
cmc
lods
jb
jmp
cmp
xlat
mov
arpl
lods
ret
mov
add
xchg
sub
add
mov
stos
add
pop
mov
or
push
dec
cmp
sub
out
(bad)
movs
inc
push
fs
inc
aas
lods
push
movs
inc
test
or
out
xor
int3
xlat
dec
lds
loop
rol
inc
mov
fwait
lahf
rcl
mov
rcl
xor
and
inc
and
dec
ds
iret
daa
stos
push
push
ins
sub
outs
push
in
jp
jl
ret
sar
pop
ins
xchg
pop
inc
adc
cmp
pop
popa
and
sbb
inc
jno
ret
in
inc
xor
into
or
cmp
js
push
stos
xor
and
aad
or
adc
sbb
aas
or
inc
xchg
mov
mov
jge
scas
adc
(bad)
lock
mov
mov
call
dec
std
nop
mov
jb
jo
out
add
test
stc
scas
test
pop
mov
sbb
cmp
pop
adc
imul
pop
add
dec
and
movs
jnp
push
lods
add
pop
xchg
ins
dec
out
jecxz
inc
fld
rcr
mov
out
out
inc
cdq
xchg
hlt
inc
inc
adc
jg
xor
mov
or
jp
cmp
call
mov
dec
push
shl
add
or
lea
mov
xchg
cmp
repnz
mov
jmp
cmp
adc
xlat
mov
aam
mov
hlt
pop
stc
jmp
xchg
dec
rcr
adc
push
add
(bad)
or
mov
mov
(bad)
dec
ret
cmps
arpl
sbb
mov
jb
test
retf
mov
jno
or
cmps
xor
loopne
cdq
push
add
jl
cs
out
mov
and
(bad)
jl
jb
nop
lods
ret
xchg
inc
leave
stos
or
and
cmp
std
xor
call
lahf
jb
adc
jb
jle
lahf
ja
test
cmp
mov
or
and
pop
icebp
mov
sub
lea
outs
cmp
sbb
outs
dec
mov
leave
test
hlt
sub
xor
outs
pop
mov
sbb
in
cdq
jmp
mov
add
ins
stos
mov
(bad)
imul
inc
inc
ja
fdiv
out
mov
or
lea
sub
lds
xchg
lods
sar
pushf
test
js
and
shl
push
test
test
sub
cmp
mov
sub
(bad)
push
das
rol
ror
dec
xor
sub
imul
test
mov
jl
xor
lahf
jbe
jmp
cmp
es
cmps
imul
inc
pop
adc
mov
enter
jmp
int
adc
inc
fnstsw
sbb
or
push
pusha
dec
xchg
fisubr
in
inc
stos
loopne
jb
inc
not
daa
sbb
jnp
or
das
fadd
cld
fwait
pop
xor
stos
mov
int3
mov
dec
push
push
fs
sub
loop
pop
icebp
jl
iret
(bad)
jg
xchg
aaa
cmp
xchg
hlt
xor
(bad)
leave
dec
sub
inc
shr
push
(bad)
fstp
iret
outs
das
cwde
mov
das
movs
push
add
dec
mov
lock
adc
popf
xchg
mov
xor
cmc
mov
test
mov
cmp
xor
ret
dec
mov
adc
jnp
gs
lahf
mov
test
or
outs
adc
loopne
mov
and
movs
pop
xchg
mov
pop
into
sub
sahf
adc
adc
loop
addr16
enterw
mov
mov
sbb
lods
pop
xor
mov
fild
jmp
jmp
mov
arpl
mov
mov
pop
out
cmp
and
jns
cwde
in
xor
retf
shr
jns
cmc
mov
in
stc
pop
xchg
(bad)
movs
(bad)
jbe
call
addr16
lea
loope
xor
bound
(bad)
mov
imul
sbb
jne
xor
das
out
cmp
mov
adc
popa
(bad)
pop
push
into
ds
xor
mov
sub
jecxz
mov
ins
imul
dec
out
push
xor
shl
xchg
leave
in
adc
push
loope
leave
mov
in
hlt
das
mov
jl
out
fild
sbb
ins
jmp
(bad)
and
ret
pop
fisttp
sub
retf
out
pop
dec
add
scas
or
pop
sub
aaa
lods
stc
cs
fild
cli
jbe
add
and
mov
mov
sbb
push
addr16
icebp
push
lea
adc
sbb
sbb
inc
into
test
inc
rcl
pop
loopne
add
fadd
add
xchg
test
fist
ins
xchg
xchg
mov
inc
loopne
jl
mov
fdiv
push
movs
scas
shl
xchg
jg
xor
xor
pop
xchg
xor
cli
push
jne
lahf
push
fsub
lea
inc
add
jae
sub
push
mov
or
(bad)
push
cmps
and
call
loopne
into
mov
sub
in
popa
mov
mov
push
push
mov
mov
out
jmp
xchg
adc
call
mov
shrd
jmp
retf
mov
xor
and
jecxz
pop
gs
stos
lods
mov
dec
pop
inc
pop
lahf
iret
xor
sub
adc
pop
sti
aam
xor
sar
sub
cmp
lock
mov
push
ret
leave
cmp
ficomp
xor
push
loopne
arpl
test
jle
ds
jmp
cmp
and
lock
xor
sub
das
dec
jecxz
repnz
(bad)
jne
rol
(bad)
sub
mov
(bad)
xor
ins
repnz
jecxz
hlt
in
retf
ret
mov
jl
mov
retf
push
cmps
jno
adc
or
call
add
xchg
cs
fcom
(bad)
stc
ret
adc
and
cwde
push
mov
lods
jo
mov
mov
inc
cs
mov
cmp
repnz
ret
test
push
xor
hlt
retf
mov
(bad)
lds
ret
add
pop
out
dec
jmp
push
mov
pushf
fwait
and
mov
(bad)
loop
adc
mov
mov
jg
fsubr
cmp
jmp
gs
fmul
push
jb
mov
or
mov
xchg
xor
lea
push
pop
pop
fild
xchg
rcl
or
iret
ds
cmp
lds
mov
dec
out
idiv
sub
lea
retf
stos
out
mov
adc
push
pushf
pop
push
loope
call
xchg
test
idiv
std
mov
xchg
add
popa
retf
leave
ret
and
adc
call
stos
sahf
mov
push
dec
pop
inc
push
stos
push
idiv
sub
and
or
dec
rol
pop
mov
push
xor
mov
out
pop
xor
jl
add
gs
inc
ds
inc
cmp
ds
xor
add
leave
or
fldln2
popf
add
cmp
aam
mov
pop
mov
sbb
lods
das
pop
push
mov
imul
(bad)
dec
sbb
jo
into
xlat
fwait
mov
icebp
dec
jmp
popa
or
daa
enter
sub
repz
(bad)
repz
mov
popa
pop
std
pop
bound
lea
(bad)
inc
dec
lahf
jns
daa
pusha
idiv
icebp
sar
aas
(bad)
mov
stos
and
icebp
jmp
ss
popa
mov
iret
(bad)
jmp
mov
and
xor
or
mov
dec
jns
scas
fwait
add
lock
call
out
push
add
pop
mov
fnstcw
sahf
push
push
dec
jp
mov
inc
std
shl
mov
lds
sub
mov
adc
and
mov
imul
test
sbb
and
jl
nop
mov
cwde
add
shl
jae
mov
enter
in
(bad)
xchg
add
or
(bad)
cli
sbb
(bad)
retf
sub
and
mov
fs
mov
popa
jecxz
add
ja
call
or
inc
shr
pop
jp
sub
pop
(bad)
cmp
push
pop
loop
xchg
dec
mov
test
cli
mov
iret
pop
dec
jno
mov
mov
scas
mov
lea
lea
leave
xchg
sbb
cmps
loopne
stos
int
div
js
test
fstp
add
test
sar
pop
jb
jbe
jae
hlt
jmp
inc
data16
add
mov
popa
cmp
push
loopne
jo
rol
push
lods
cld
out
into
into
div
add
mov
repnz
or
push
xor
in
push
scas
push
(bad)
(bad)
addr16
push
(bad)
and
sbb
sub
jle
sbb
mov
loope
inc
xchg
jmp
sbb
sbb
addr16
ja
xchg
pop
arpl
push
lahf
sbb
dec
mov
sub
sub
sbb
sub
and
lahf
hlt
in
jge
mov
gs
mov
out
mov
test
jbe
and
(bad)
pop
stc
or
ins
or
aas
sbb
and
sahf
call
jmp
ret
mov
or
lods
sbb
jo
outs
es
mov
enter
adc
inc
add
mov
test
xchg
rcl
pop
mov
outs
mov
lods
popa
fidiv
sbb
sub
(bad)
retf
mov
jns
ret
jle
leave
xor
call
call
fsub
retf
cmp
or
cmp
sub
pop
fbld
dec
cmp
jmp
loopne
adc
xchg
fcomp
cmps
mov
sahf
jecxz
call
push
xlat
pop
cmp
clc
ins
jp
or
adc
mov
jecxz
jns
inc
sub
(bad)
iret
and
mov
outs
cwde
adc
xor
jmp
mov
mov
call
jle
nop
cdq
xchg
mov
lahf
test
fmul
fnstcw
ficom
sub
dec
xor
cs
test
(bad)
sbb
push
(bad)
retf
adc
mov
xchg
ins
sbb
lods
in
jo
popf
push
test
outs
or
out
mov
loop
push
mov
sbb
or
fisub
into
dec
xchg
sbb
pop
cmc
cmp
xchg
jnp
xlat
xchg
cs
dec
sub
cmps
outs
mov
inc
mov
mov
sbb
mov
shl
dec
pop
fldcw
mov
pop
cld
nop
cld
dec
out
or
fwait
aam
xor
xor
xchg
sub
stos
fwait
cli
movs
(bad)
loopne
xchg
pop
iret
fidiv
fistp
fsubr
stos
imul
enter
pusha
ret
loopne
add
mov
ins
sbb
dec
btc
pop
pop
mov
pop
in
jmp
fnstenv
mov
pop
cmc
jmp
cmp
mov
push
push
leave
push
pop
mov
mov
or
neg
jmp
movs
fist
test
fwait
add
mov
inc
data16
scas
or
icebp
mov
sti
sbb
aam
mov
aam
sar
inc
jl
retf
xlat
add
or
xchg
mov
mov
mov
es
pop
loop
ss
xchg
jge
jmp
cmp
or
enter
mov
leave
add
jecxz
push
mov
fisttp
movs
sti
pushf
pop
sti
mov
mov
ret
call
lock
cs
push
add
pop
int
rcl
std
or
cmp
jmp
mov
bound
scas
push
mov
push
nop
in
xchg
dec
adc
pop
and
fwait
cmp
out
scas
adc
call
push
fsub
mov
fsub
jo
lock
pop
stc
push
in
and
(bad)
popf
test
xor
jns
sub
cmc
rol
fdivr
mov
inc
inc
movs
mov
dec
pop
dec
xor
jge
sub
xchg
add
and
ret
dec
in
fdivr
push
xchg
jnp
inc
or
add
iret
cmps
dec
jmp
shl
xchg
or
jmp
ins
dec
movs
out
iret
or
(bad)
mov
pop
jae
jg
xor
retf
movs
mov
xchg
xor
mul
xor
mov
movs
xchg
dec
adc
adc
movs
inc
ja
sbb
jno
out
cdq
mov
call
xor
pushf
mul
push
or
mov
mov
(bad)
mov
xchg
ins
cmp
bound
jbe
push
stc
ins
retf
inc
xlat
inc
jecxz
movs
pusha
iret
jb
test
repnz
adc
pop
leave
adc
cld
mov
icebp
xchg
outs
hlt
popf
mov
mov
test
cmps
mov
out
sub
clc
jo
dec
ja
icebp
jbe
jno
mov
cmp
out
xchg
push
mov
ins
mov
lds
fisubr
dec
jo
cmp
cmp
mov
pop
outs
lods
adc
dec
pushf
xchg
test
inc
inc
clc
addr16
dec
and
sub
pop
enter
fbstp
xor
int3
or
pop
aad
and
out
pop
cmp
leave
jne
adc
in
dec
push
jecxz
in
fabs
ret
dec
sbb
ja
mov
pop
(bad)
and
adc
pop
bnd
or
mov
sbb
movs
icebp
(bad)
test
mov
fdivp
nop
xchg
mov
add
into
mov
and
fsubp
add
ins
jb
movs
adc
fwait
mov
lds
mov
pop
and
cmps
arpl
test
cmp
mov
mov
and
mov
fstp
cmp
mov
jecxz
adc
imul
aas
imul
lds
fisubr
rol
xchg
dec
ret
push
arpl
(bad)
cmc
ins
pop
mov
outs
ror
dec
call
push
cmc
in
xchg
inc
repz
repz
gs
xor
push
arpl
(bad)
vprotd
jmp
sbb
ss
mov
adc
jmp
(bad)
sub
cdq
das
xchg
iret
or
jae
jmp
sar
leave
push
jbe
cmp
xchg
out
xchg
or
mov
xchg
xchg
xor
(bad)
iret
push
pusha
xor
je
int
pop
push
pop
pop
ds
adc
es
jo
xchg
jmp
xor
cdq
xchg
sbb
mov
xsha1
cmps
or
push
shr
lahf
jo
mov
es
rcr
inc
pop
mov
imul
imul
inc
jmp
dec
outs
xchg
out
rcr
inc
lock
pusha
cmp
aam
inc
(bad)
mov
dec
pop
sbb
pop
mov
lods
ret
rcr
mov
adc
mov
mov
lods
pop
cmp
inc
jg
aam
or
adc
outs
jle
fisubr
cmp
into
fld
loop
rcl
mov
and
loop
loope
nop
sub
jae
call
pop
and
sbb
js
scas
add
jmp
jg
test
jb
mov
call
lods
mov
movs
movs
movs
mov
mov
jns
add
inc
das
mov
push
adc
ja
add
stos
mov
rcl
xor
imul
jge
fld
pop
in
aad
xor
push
lock
inc
cli
stc
push
mov
mov
jo
(bad)
clc
jmp
adc
sahf
xor
lahf
jge
loop
call
loopne
mov
in
retf
popf
ficom
pop
sub
sub
cmps
into
cmps
in
mov
sar
or
xchg
and
mov
sbb
push
dec
cmp
sti
xchg
pusha
outs
int3
push
fild
stc
cld
arpl
clc
outs
inc
xor
add
push
lea
cld
cwde
cmp
aas
enter
test
sub
test
not
fs
jno
or
mov
(bad)
mov
shl
mov
neg
mov
movs
mov
cmps
mov
mov
add
adc
inc
cmps
in
ret
push
jb
dec
sbb
test
inc
test
or
loope
push
in
dec
mov
sub
and
shl
mov
not
fwait
pop
ror
mov
es
pop
xor
aad
dec
sbb
adc
adc
jmp
dec
mov
sub
cmp
and
or
out
and
nop
ja
pop
jmp
pop
mov
jg
push
movs
mov
mov
mov
jmp
and
fcom
popa
sahf
and
ins
or
and
inc
or
cwde
rcr
xor
or
pop
jl
fcmove
(bad)
fistp
and
sub
call
inc
scas
adc
or
ss
aaa
pop
shl
(bad)
sub
fadd
fcmovbe
xor
(bad)
stos
inc
mov
push
cmp
dec
repnz
and
push
into
popa
jnp
adc
mov
sbb
sti
xor
cmp
inc
cmp
dec
neg
pusha
dec
push
imul
sbb
and
mov
dec
bound
cmps
mov
cmp
and
lahf
xor
xlat
push
xchg
pop
xor
movs
or
pop
cmps
jns
push
dec
push
adc
cmp
pop
or
(bad)
in
and
(bad)
jecxz
fs
out
aad
addr16
pop
aaa
std
iret
fistp
xchg
jge
cmc
daa
jp
(bad)
shl
int3
jecxz
sbb
loopne
pop
(bad)
xchg
retf
je
pop
mov
push
addr16
lds
mov
loopne
rcl
cmc
jbe
shr
icebp
push
not
cmp
adc
and
(bad)
pop
push
mov
xlat
pop
xor
mov
cmc
cli
imul
ins
stc
les
mov
popa
sar
shr
jbe
iret
out
dec
adc
out
mov
outs
(bad)
mov
lock
sub
cmp
(bad)
shl
sti
stos
push
das
mov
adc
retf
mov
retf
data16
pop
adc
sbb
(bad)
cli
or
dec
jmp
mov
sbb
xchg
repz
hlt
pop
test
bound
lods
cwde
jne
pop
pushf
(bad)
jmp
shl
xor
retf
jbe
pushf
imul
mov
jmp
lahf
mov
mov
inc
inc
mov
data16
fcomp
das
pop
arpl
dec
mov
mov
mov
sub
or
sub
xor
call
inc
enter
jge
cs
add
mov
add
std
(bad)
lea
pop
ror
pop
inc
shl
test
inc
sbb
jno
sub
adc
ret
pop
pop
std
cmc
xchg
ja
jp
out
jbe
ret
cmp
ret
pop
stc
mov
cs
sbb
ret
mov
out
mov
mov
jg
daa
or
(bad)
jge
inc
and
push
adc
movs
push
mov
hlt
or
sub
ins
fisttp
jp
ficomp
iret
add
xor
mov
das
fmul
fs
xor
hlt
pop
test
add
push
inc
or
mov
sar
xor
popf
xor
jmp
pop
aaa
mov
sbb
ins
test
fbstp
add
xor
enter
pop
std
xchg
jno
mov
fsub
mov
cdq
(bad)
push
mov
dec
ss
xor
lods
fcmovnb
mov
addr16
call
aas
adc
sahf
sbb
shr
mov
mov
xor
in
leave
bound
jns
outs
mov
fsub
(bad)
int
mov
cmps
outs
sub
fdivr
mov
leave
jns
pop
cwde
mov
retf
ins
dec
dec
(bad)
movs
jmp
ret
cmp
jecxz
jmp
mov
and
js
in
rcl
movs
push
xchg
add
popf
xchg
pop
fcom
xor
xchg
shl
inc
les
xchg
imul
add
jecxz
test
leave
je
daa
fistp
cmp
popf
jne
(bad)
test
dec
mov
sub
retf
push
aad
push
data16
hlt
mov
stos
mov
push
cmp
out
repnz
shr
leave
cmp
inc
or
push
xchg
inc
ret
push
cdq
lds
and
enter
ret
jae
ret
sub
stos
ror
adc
data16
outs
pop
shr
xchg
sub
xchg
mov
sub
out
movs
(bad)
mov
pop
std
mov
xor
mov
jmp
lahf
jecxz
pop
dec
aas
adc
inc
or
int
jg
jmp
xor
je
pushf
mov
push
cmps
push
xchg
aad
push
stc
jo
add
sbb
sub
ret
or
pop
test
pop
adc
xchg
xor
loopne
or
dec
mov
inc
mov
dec
mov
or
test
repnz
mov
inc
ja
or
rol
arpl
cwde
xchg
cmp
leave
icebp
stos
push
pop
push
jno
adc
iret
stc
aas
nop
rol
inc
xchg
mov
dec
and
jg
mov
add
xchg
imul
aam
pop
imul
shl
and
arpl
xchg
or
sar
mov
lods
ss
inc
loopne
movs
ror
cmp
jmp
enter
and
(bad)
(bad)
outs
loop
fstp
in
test
dec
push
imul
shl
adc
pop
call
cwde
cs
mov
pop
mov
retf
cmps
mov
mov
mov
loopne
sbb
pushf
in
xchg
retf
js
add
mov
ins
sar
jecxz
stos
cmp
clc
push
push
push
push
inc
xor
retf
int3
mov
pusha
mov
inc
les
mov
sar
retf
pop
ds
xor
ret
sbb
mov
jno
and
scas
call
mov
inc
xor
mov
push
das
dec
repz
loopne
jp
out
sub
es
adc
clc
and
test
hlt
in
mov
ins
mov
pusha
inc
retf
imul
and
ins
shl
daa
pop
cmp
scas
ins
xor
test
sbb
fnsave
dec
fistp
or
or
je
pop
jge
mov
(bad)
dec
pop
or
aad
pop
test
jns
sub
cmp
push
cs
lahf
pushf
mov
lods
add
jmp
imul
mov
lock
test
gs
push
ret
test
mov
jno
pop
mov
fst
lods
nop
sar
inc
push
mov
lahf
(bad)
jp
div
add
adc
adc
ret
rcr
cmps
adc
ja
daa
cmp
pop
fcmovnbe
xchg
repnz
sti
pushf
scas
cmc
addr16
push
add
std
xor
rol
aaa
fmul
sbb
test
cwde
fbld
xchg
cmp
not
mov
push
cmp
pavgw
ins
pop
and
hlt
dec
mov
add
cmp
mov
imul
jae
std
nop
aad
pop
dec
pop
icebp
xor
sar
js
shr
push
scas
je
jecxz
jne
retf
cwde
loopne
dec
sar
mov
fwait
mov
popf
or
clc
mov
clts
dec
and
add
or
dec
pop
inc
fsub
mov
push
inc
movs
sti
sub
mov
add
shr
push
push
sbb
stc
out
scas
and
int
enter
aas
outs
pop
mov
or
scas
cmp
xlat
jecxz
sar
and
sar
lock
(bad)
retf
repz
repz
lods
jmp
jae
lock
push
pop
movs
sub
scas
mov
xchg
xor
or
push
sub
cld
nop
adc
into
inc
test
sub
stos
inc
xor
sbb
loopne
scas
mov
dec
mov
pop
sbb
dec
aad
dec
jge
scas
ds
adc
cmp
sub
and
lods
imul
xchg
lea
mov
adc
leave
mov
dec
or
loopne
push
mov
xchg
xor
fidiv
jmp
stos
test
push
dec
xchg
lock
jnp
test
data16
bound
jecxz
add
mov
and
dec
pop
out
ja
leave
fistp
jl
jne
aad
aam
mov
or
push
and
call
dec
inc
mov
xchg
add
jae
jp
mov
and
ss
xlat
shl
sub
fisubr
addr16
dec
push
jecxz
push
(bad)
inc
imul
mov
test
inc
jbe
adc
add
and
mov
outs
or
jmp
lock
push
idiv
scas
popa
leave
jge
mov
cdq
std
sbb
and
cli
inc
ficom
xlat
push
loopne
test
mov
out
sbb
pop
mov
loopne
xchg
inc
or
ins
cli
cmp
pop
cmc
or
push
sbb
popf
aas
sbb
loop
jno
arpl
pop
pop
add
call
pop
(bad)
out
push
mov
test
cmps
jne
sub
xchg
adc
sub
cdq
xor
aaa
js
sti
xchg
push
xor
inc
loop
test
aas
mov
jl
(bad)
jmp
imul
js
neg
stos
ds
aad
jle
dec
das
sub
les
xor
retf
jl
cmc
rcl
and
cdq
addr16
sub
scas
lods
test
pop
sbb
pop
ds
ss
sbb
sahf
mov
xchg
jmp
fyl2xp1
out
popf
test
ja
pop
lods
es
pop
mov
mov
out
sahf
mov
cmps
data16
mov
inc
shl
icebp
jg
loopne
and
jo
xor
pop
add
jge
xor
fwait
repz
ret
and
ss
add
leave
dec
aad
cmps
fstp
dec
in
cmp
into
add
dec
in
jne
les
inc
push
cli
sti
mov
mul
fcmovu
adc
add
and
push
sub
fwait
jns
iret
pop
or
mov
xchg
loope
test
pop
neg
aaa
pop
pop
dec
and
pop
pop
xor
push
ins
adc
mov
mov
sbb
ds
jle
out
cli
jae
int
dec
xchg
xchg
mov
sti
mov
bsf
push
lock
adc
mov
pushf
stos
scas
sbb
xor
sbb
or
ror
xchg
mov
sub
jmp
out
gs
xor
or
or
test
pop
je
xchg
sub
dec
sub
add
dec
dec
mov
in
pop
imul
pop
push
jb
es
jmp
fidiv
mov
mov
and
mov
inc
fnstsw
gs
pop
out
jmp
sbb
out
dec
retf
xchg
ds
push
or
push
mov
movs
push
pop
mov
leave
xor
movs
push
int
or
test
dec
mov
(bad)
xlat
nop
pop
sub
mov
retf
and
pop
and
pop
loop
out
ins
push
jp
in
sahf
loope
(bad)
lock
or
mov
push
jmp
psrld
xchg
add
fwait
push
xor
jne
retf
in
cmp
and
jl
mov
leave
ds
fnop
mov
push
dec
outs
push
lods
and
xchg
or
or
scas
add
movs
cli
pop
jne
scas
sub
or
lds
test
icebp
jle
add
cdq
or
xor
xchg
add
sbb
int3
ret
adc
jne
adc
icebp
jnp
dec
dec
mov
clc
mov
mov
inc
xchg
mov
in
fistp
sbb
pop
mov
fs
xchg
mov
jecxz
xor
jbe
dec
ret
mov
(bad)
repnz
ins
cli
iret
enter
bound
call
movs
sti
cdq
mov
lock
pop
and
jno
or
cmps
lahf
out
js
(bad)
in
mov
loop
(bad)
jmp
aas
int
imul
jmp
push
jno
cmp
adc
mov
mov
call
cmp
jmp
arpl
xor
es
addr16
loope
cmc
cmp
and
lods
iret
mov
pop
mov
push
js
vxorps
mov
ds
dec
movs
retf
cmp
pop
adc
xchg
cmp
lods
pop
xchg
xchg
add
retf
add
stc
out
movq
mov
xchg
xor
xlat
push
div
iret
jns
pushf
cmc
shl
jbe
inc
mov
push
stos
push
jle
call
(bad)
es
and
pop
dec
retf
cmp
das
mov
mov
retf
mov
ret
mov
xchg
shl
scas
jns
leave
xchg
and
jne
call
neg
test
xor
ins
cs
or
test
cmp
scas
outs
mov
(bad)
jecxz
xor
mov
lods
jg
mov
mov
fsub
int
or
cdq
adc
push
xchg
mov
xor
bound
cli
add
(bad)
mov
jno
in
mov
push
lods
mov
scas
test
add
xchg
push
fld
pop
nop
xor
cmp
int3
xor
mov
mov
mov
rol
jne
mov
pop
loop
cmps
pop
data16
xor
mov
cmps
aam
cmp
aaa
test
mov
fbld
or
cdq
inc
fstp
ror
inc
int
cmps
xchg
mov
rol
into
retf
je
xchg
push
add
not
mov
rcr
dec
xor
or
out
fisub
jge
mov
push
(bad)
sbb
add
out
jp
dec
pop
test
lahf
pop
cwde
jnp
ss
xchg
dec
test
hlt
arpl
xchg
pop
jge
push
js
sbb
icebp
popa
je
xchg
push
mov
lods
xchg
jle
fsubr
call
mov
dec
mov
mov
mov
int
inc
aaa
push
jge
adc
fisttp
fld
hlt
fst
xlat
xchg
ins
stos
ja
test
test
cmp
mov
pop
(bad)
push
scas
bnd
xchg
bound
jnp
mov
jle
mov
idiv
shr
frstor
sub
mov
xchg
loop
sub
out
sub
cmp
mov
test
out
shl
mov
std
shr
enter
jbe
adc
xor
push
movs
xchg
pop
rcr
add
xor
push
xor
in
xor
repz
in
cmp
hlt
add
nop
retf
cmp
dec
cmps
call
outs
(bad)
lds
dec
leave
int
arpl
inc
xor
mov
ins
sar
mov
fcom
mov
jo
jmp
daa
(bad)
fimul
call
pop
inc
dec
hlt
arpl
push
imul
shl
or
or
pop
pop
adc
pop
stos
xor
pop
add
xor
pop
xchg
and
fistp
aaa
pusha
hlt
movs
or
mov
(bad)
jp
retf
sbb
mov
mov
cwde
or
mov
cmps
jmp
in
adc
mov
push
lock
or
inc
xchg
add
bound
xor
xor
dec
(bad)
jg
sub
lods
push
dec
fwait
cmp
inc
(bad)
out
test
push
(bad)
pop
cmp
push
cmps
or
in
shl
cli
xchg
add
je
add
test
add
mov
ret
imul
push
push
(bad)
loop
mov
mov
repnz
adc
add
xor
popf
(bad)
imul
pop
sar
jns
les
mov
push
jge
xor
cmp
inc
xor
in
jns
(bad)
outs
loope
clc
jnp
clc
cs
mov
xchg
inc
xor
gs
fild
jmp
sbb
fsubr
int
xor
mov
push
cmp
das
ds
pop
(bad)
mov
or
outs
nop
push
in
or
test
mov
xchg
imul
sub
fadd
rcr
dec
(bad)
xor
push
mov
(bad)
xchg
neg
push
push
sbb
and
cmp
dec
sub
rol
mov
dec
adc
mov
or
loop
inc
fmul
mov
sbb
movs
or
and
fwait
sahf
retf
imul
jmp
mov
cmps
cmp
jmp
gs
ret
push
ret
sub
add
jbe
mov
shl
jno
fs
call
and
out
push
mov
inc
mov
mov
(bad)
les
or
cwde
xor
call
sti
xor
pushf
popa
scas
aam
or
shl
fidiv
fst
iret
and
ror
mov
test
push
loopne
mov
call
sahf
fs
(bad)
nop
sub
ret
adc
cld
sub
scas
movs
jmp
pop
out
or
in
and
int
inc
xchg
loopne
les
xor
aaa
call
aam
fdivr
cmc
xor
or
stos
pop
or
stos
repnz
icebp
(bad)
mov
mov
adc
loop
retf
xchg
pop
pusha
in
push
cld
rol
adc
inc
sti
iret
push
pop
jp
imul
jno
out
les
stc
jmp
mov
bound
in
cli
ins
add
int3
(bad)
out
pushf
ror
jo
loop
jmp
xchg
mov
ins
push
pop
xchg
xor
sbb
add
sbb
mov
stos
dec
loopne
pop
xor
sub
seto
loope
bndldx
js
in
push
mov
sahf
test
xor
test
movs
sbb
dec
cs
pop
sbb
int
mov
mov
sub
mov
cmp
daa
inc
add
mov
cmp
test
(bad)
mov
push
dec
iret
aas
or
fwait
arpl
jmp
add
add
aam
mov
and
cmc
clc
pop
inc
sub
fs
rcr
aas
cmp
jmp
pusha
dec
and
mov
int
sub
xchg
leave
leave
outs
mov
mov
fs
rcl
aas
jae
jmp
pop
mov
int3
int
xor
or
add
sub
push
mov
xchg
addr16
pop
dec
int
int
nop
imul
pop
pop
mov
rol
aam
pop
mov
retf
sti
dec
inc
ss
xchg
cmc
ficomp
or
cmp
xchg
stc
mov
ret
enter
sub
push
stos
retf
rcl
fcmovnbe
push
lods
jp
cli
test
aad
push
sbb
or
enter
adc
out
stos
jle
std
adc
stos
dec
pop
or
cdq
push
sbb
and
or
dec
stos
mov
cdq
fisubr
mov
inc
jbe
pop
cmp
popa
sbb
mov
mov
mov
mov
int3
(bad)
jmp
mov
ret
pop
neg
pand
js
xchg
pop
lock
iret
cmc
jb
loop
fiadd
je
push
pushw
jmp
je
icebp
retf
xchg
pop
(bad)
(bad)
and
data16
inc
sbb
repnz
ret
xchg
jne
fs
adc
adc
mov
dec
mov
rcr
(bad)
add
inc
xchg
movs
jp
xor
sahf
xor
push
scas
xor
test
pushf
or
test
aaa
scas
outs
ja
mov
iret
lods
sbb
es
sub
push
int
lds
call
sbb
cld
jnp
mov
dec
xchg
nop
cli
pop
jne
shl
push
xor
lds
scas
pop
mov
add
call
xchg
jmp
or
nop
jge
iret
xchg
data16
(bad)
ficomp
in
sub
fisub
lods
xor
rcr
mov
jns
or
lahf
aas
je
into
inc
sub
jno
ss
nop
mov
shr
dec
bound
xchg
pop
cld
retf
mov
ret
push
cmp
cmps
or
xor
repnz
pop
and
add
shl
inc
mov
js
pop
pop
mov
push
fisubr
adc
stos
pusha
inc
or
retf
pop
inc
pop
jge
jmp
add
in
xchg
and
xchg
aad
pop
out
imul
dec
cmp
jnp
call
pusha
jb
or
lock
jecxz
test
inc
movs
xor
dec
les
mov
push
mov
scas
je
cmc
cmp
mov
or
cmp
pop
dec
xchg
ins
jmp
and
retf
jg
inc
fldcw
dec
jae
jnp
inc
xor
pop
or
mov
jns
adc
jp
enter
lods
jbe
leave
jo
sbb
fcomp
add
(bad)
inc
imul
cmps
push
pop
jmp
jbe
pusha
stc
dec
xchg
jo
sbb
not
adc
sbb
push
or
sbb
test
cld
imul
call
fild
into
mov
dec
repz
dec
fs
push
mov
(bad)
mov
adc
shl
sub
js
mov
fisttp
gs
cmp
or
pushf
mov
movs
adc
pop
jne
dec
push
cwde
cmp
sub
shr
test
cmp
into
pop
(bad)
popa
clc
inc
mov
mov
mov
aad
vpminsw
mov
or
push
gs
lods
jno
movs
int3
retf
push
pop
push
arpl
push
sub
jb
imul
mov
out
mov
jle
fdiv
or
xor
aas
and
add
or
mov
iret
mov
sti
pop
mov
jns
or
xchg
jg
xor
dec
out
xchg
ss
aaa
aam
or
add
dec
(bad)
mov
dec
aam
mov
les
imul
retf
pop
jno
not
dec
jge
xchg
sar
ins
fwait
call
retf
pusha
bound
ret
inc
push
addr16
scas
mov
sbb
xchg
push
add
bound
dec
xor
cmps
outs
and
out
sar
cmp
mov
in
repz
push
test
call
data16
sar
cli
cmovnp
sbb
lock
and
cli
xor
hlt
push
cmp
xchg
xor
(bad)
xor
inc
pop
popa
inc
in
pop
xor
aad
out
pusha
push
iret
xchg
lahf
retf
cs
shl
loop
ret
pop
outs
xchg
pop
jb
std
jge
inc
gs
jecxz
fbstp
loope
xor
outs
xor
inc
int
sti
stos
dec
push
mov
dec
outs
dec
pushf
xchg
es
out
mov
or
in
shl
ins
jns
mov
cmps
push
or
aad
imul
sub
sahf
leave
and
inc
jne
pop
sti
pushf
add
or
hlt
jle
push
sahf
test
xlat
and
jae
push
test
inc
xchg
fldcw
sar
scas
stc
mov
pop
cmp
int3
add
enter
loopne
sahf
mov
mov
loope
out
jg
movs
pop
hlt
mov
xchg
lahf
jo
iret
inc
clc
sub
(bad)
xchg
scas
inc
pop
mov
pop
push
mov
in
cld
jne
loope
jg
(bad)
fisubr
mov
ins
sti
mov
rcl
aad
mov
sbb
dec
popa
cli
rcr
jno
sti
into
pusha
clts
or
es
jecxz
xor
pusha
xlat
aam
fcomp
imul
dec
xchg
les
sub
fwait
push
aad
arpl
mov
push
(bad)
xchg
fs
cmp
xor
fcmovbe
xchg
adc
pop
adc
iret
(bad)
push
xor
sub
push
sub
cdq
inc
ror
jne
js
aaa
cmp
fcom
or
mov
mov
adc
loopne
dec
jae
ror
retf
push
shl
call
mov
push
push
jnp
add
mov
xchg
pop
xchg
mov
sar
xchg
mov
push
popa
mov
and
cmp
xor
mov
jecxz
clc
or
jb
mov
test
sub
jg
push
push
and
mov
push
sbb
xchg
push
xchg
xor
inc
dec
aaa
ss
cmp
ret
das
hlt
jge
jmp
push
jns
jnp
pop
out
ss
lock
xor
and
cmc
xor
popf
add
fld
jge
hlt
inc
cmp
aad
mov
mov
(bad)
mov
sbb
sbb
cmp
sar
sbb
test
or
ret
mov
fdivr
cs
icebp
jb
mov
cmp
dec
gs
pop
enter
(bad)
je
pop
xor
jl
xor
add
imul
adc
das
shl
lods
scas
cdq
adc
mov
in
sbb
adc
and
outs
shr
and
(bad)
mov
movs
mov
add
int
xchg
sub
stos
lods
push
and
jae
test
xchg
out
inc
jle
push
inc
outs
jecxz
xchg
add
sub
test
push
in
mov
loope
xor
loope
adc
icebp
jnp
cmps
mov
push
outs
lea
lock
inc
mov
jno
iret
mov
fmul
sti
jp
mov
retf
lahf
in
jns
push
ss
mov
dec
lock
cwde
adc
retf
mov
cmp
sub
push
add
xlat
nop
jle
cmp
fidivr
(bad)
cs
sbb
(bad)
lds
retf
mov
sbb
loop
jae
push
movs
mov
out
push
xchg
outs
inc
jmp
(bad)
mov
imul
pushf
jecxz
aaa
cdq
in
mov
out
jb
mov
push
into
and
jbe
fsub
imul
inc
jg
xchg
and
rol
sub
popa
je
pop
scas
add
cmps
cmps
mov
xchg
lea
bound
xor
pushf
loopne
xor
xchg
mov
mov
push
in
jecxz
and
(bad)
test
aaa
xchg
push
mov
xor
call
push
or
arpl
add
adc
cli
(bad)
xchg
imul
repz
icebp
push
or
mov
test
test
push
out
sahf
retf
jle
fstp
inc
cmps
and
call
cmp
ds
lea
rcl
or
movs
jne
in
adc
int
sbb
and
add
xchg
cmc
dec
fdiv
jns
arpl
loopne
lock
xor
xchg
ins
dec
fstp
sub
pop
fcmovu
or
and
sahf
ins
dec
repnz
enter
clc
enter
jp
cmps
inc
or
push
sbb
sbb
mov
data16
jl
repz
mov
in
movs
arpl
jno
add
mov
icebp
fcomp
jae
pop
sbb
mov
cmp
repz
push
lock
sbb
stc
jecxz
fwait
movs
(bad)
nop
mov
data16
inc
jl
push
jle
idiv
sbb
mov
addr16
lds
xor
mov
sub
xchg
xor
lock
pop
lods
push
add
sub
hlt
repnz
inc
and
jecxz
xlat
cld
adc
aas
inc
retf
fwait
aam
pop
push
xchg
cmps
adc
mov
cld
xchg
(bad)
iret
cmp
push
cwde
cwde
add
fucomip
mov
jmp
mov
les
and
push
stos
sub
fild
fwait
into
repnz
or
popf
imul
out
mov
out
js
or
push
mov
dec
ins
test
xchg
ror
aad
cmp
push
sub
and
cs
popf
and
je
outs
repz
adc
nop
call
mov
add
mov
and
pushf
out
adc
sahf
cmp
sub
xchg
sbb
test
xchg
jecxz
xor
aad
test
rcl
scas
dec
jmp
jge
cwde
mov
(bad)
jo
dec
xchg
adc
sub
mov
in
push
rcl
cs
pop
mov
cs
xor
sbb
cmps
cdq
xor
loop
lods
aaa
mov
or
jae
cdq
ins
iret
jle
mov
xchg
xor
fidiv
xor
sub
loope
loop
xchg
cmp
daa
loopne
push
iret
push
mov
xchg
daa
stos
jg
das
xchg
or
std
je
add
int
les
push
popa
dec
push
lock
add
int3
dec
fisttp
adc
jae
jmp
mov
sbb
add
cmp
daa
pop
pop
shr
push
dec
fdivp
sahf
dec
in
imul
mov
inc
inc
mov
adc
push
push
shl
clc
cmp
inc
sbb
loopne
push
retf
xchg
stos
(bad)
sbb
adc
push
loope
stos
inc
cli
addr16
(bad)
sti
leave
sbb
mov
lds
mov
cli
pop
stos
call
gs
or
(bad)
data16
adc
cli
loop
push
pop
inc
ins
push
shl
mov
sub
out
sub
pop
adc
push
inc
adc
mov
xor
mov
mov
sub
call
fnstcw
sbb
outs
not
aad
jl
test
and
dec
add
cmp
in
retf
stc
push
outs
or
jmp
xor
xor
mov
pop
fwait
xlat
sbb
mov
in
xchg
push
in
ret
jb
jae
and
jp
outs
jb
loop
xor
pop
mov
mov
jp
in
mov
jb
jns
test
push
or
cmp
mov
jb
xor
push
test
stc
inc
movs
mov
and
popf
fs
inc
loopne
les
jns
cmp
rol
(bad)
repz
mov
and
clc
imul
cli
adc
or
iret
xchg
repnz
sub
pusha
aam
and
lods
jp
in
cmp
xor
dec
stc
sub
aam
paddd
rol
rcl
sub
inc
jmp
aaa
add
sar
loop
jp
mov
cmp
dec
(bad)
(bad)
les
cmp
sbb
ss
inc
ins
(bad)
sub
xlat
and
or
inc
pop
rcr
sub
add
repnz
push
and
add
adc
jg
cwde
xchg
xor
pop
(bad)
outs
pop
jmp
ins
fdivr
pop
dec
into
and
sub
mov
mov
mov
cld
mov
stos
test
inc
ret
or
push
pop
in
(bad)
jmp
(bad)
dec
movs
shl
pushf
lea
mov
sub
aam
stos
pop
inc
es
xchg
adc
inc
mov
pop
call
mov
sub
popf
into
inc
pop
stos
xlat
test
sar
js
loopne
sbb
repz
jbe
enter
loope
dec
sbb
repnz
mov
mov
stos
inc
or
inc
les
inc
add
test
movs
adc
xor
mov
outs
or
cmps
ds
aad
stos
adc
dec
mov
cmp
dec
xor
push
mov
mov
popa
sahf
mov
aaa
mov
mul
hlt
cmps
push
movs
add
sar
mov
lahf
and
or
ret
ror
mov
jns
call
and
or
loop
or
in
adc
xchg
inc
push
add
sub
ror
mov
and
mov
or
or
ret
(bad)
mov
jo
in
sub
mov
push
cli
sbb
or
inc
imul
lods
xor
int
cmp
inc
adc
out
sub
mov
cmp
call
sar
js
mov
pop
outs
pushf
aaa
cmp
push
mov
push
cmp
jl
mov
pusha
inc
rcr
mov
in
leave
mov
xchg
rcl
adc
add
cli
aaa
xor
jg
jecxz
fisubr
imul
pusha
pop
sub
sub
push
popa
out
jns
mov
inc
scas
jecxz
push
sub
rcr
cdq
pop
ret
fsubr
push
xor
jo
arpl
pop
jo
inc
lods
out
or
push
sbb
mov
and
jno
mov
and
sbb
(bad)
pop
in
inc
jbe
je
bound
inc
ret
adc
int3
repnz
fs
sub
into
cmp
push
fldcw
push
aad
shr
xchg
inc
outs
xchg
pop
xor
mov
fld
xchg
mov
popa
xorps
aas
ror
out
and
or
ins
add
sti
jmp
outs
fisub
xor
cs
bound
mov
fidivr
repz
mov
inc
xlat
xchg
and
aam
cld
ins
dec
and
xchg
mov
jmp
ins
sub
popa
xlat
dec
mov
cmp
sbb
add
xchg
jb
and
out
inc
in
dec
loopne
je
mov
adc
cli
pop
xchg
cmp
mov
(bad)
dec
mov
lds
enter
ins
sbb
inc
test
cwde
cdq
adc
icebp
inc
mov
js
es
adc
sub
sbb
out
xchg
jnp
scas
dec
(bad)
imul
cmp
imul
and
mov
(bad)
(bad)
enter
in
mov
test
pop
popf
xor
rcl
jp
loop
adc
test
cmps
cmp
shl
in
ret
mov
adc
dec
mov
mov
enter
dec
pop
loop
in
movs
fwait
add
fisttp
xchg
aam
pop
cs
fwait
push
std
lahf
lock
test
inc
mov
lock
inc
pusha
enter
gs
jp
ss
push
adc
int3
xor
inc
add
mov
adc
retf
adc
mov
mov
push
pop
test
test
sahf
and
and
pop
pop
add
out
call
lds
dec
setnp
and
or
(bad)
jo
comiss
movs
cld
sub
sbb
dec
mov
sbb
mov
aas
nop
lock
cmp
mov
push
sbb
and
and
pop
fcmovu
loope
jnp
push
pop
mov
nop
mov
es
in
mov
adc
jbe
lods
xchg
int
fcomp
aas
xchg
in
mov
mov
mov
outs
lods
test
ds
dec
adc
iret
cwde
inc
sahf
(bad)
mov
xchg
jns
mov
movs
or
add
(bad)
pop
sub
and
push
jne
inc
out
push
dec
mov
cwde
fisub
push
adc
and
test
ins
pop
ja
mov
shr
dec
aaa
ret
mov
je
adc
call
je
cmp
jbe
mov
jmp
mov
add
fcmovnbe
mov
push
cld
int
call
add
jmp
mov
mov
fsubr
mov
arpl
jg
jo
jecxz
lahf
jo
shr
nop
daa
int
mov
mov
imul
push
mov
mov
lea
jns
inc
mov
mov
xor
lods
and
data16
mov
mov
mov
aad
pop
rol
mov
push
cmp
das
jno
mov
pop
pop
(bad)
call
xchg
arpl
cmp
test
mov
mov
mov
loope
jbe
loope
push
pop
fild
add
pushf
adc
sub
pop
shr
pop
jg
lods
and
mov
test
xchg
rcl
fimul
adc
add
mov
dec
mov
cmps
adc
aaa
gs
xchg
(bad)
stos
lahf
and
test
(bad)
sbb
fdiv
jl
push
fimul
arpl
outs
lods
cmp
stos
cmp
imul
cmc
add
lods
popa
add
out
sub
xchg
push
out
add
iret
lods
push
push
rol
jg
scas
inc
ror
add
in
xchg
cmp
ret
or
jmp
push
scas
test
adc
retf
xchg
add
and
jecxz
add
mov
sub
call
cmp
js
hlt
jbe
push
and
inc
adc
leave
push
test
lahf
cmp
cmc
inc
sub
cmps
jge
push
out
mov
mov
sbb
sub
pop
ret
dec
ror
fwait
jmp
loopne
(bad)
lods
das
cmp
mov
fnstenv
cmps
sub
leave
lahf
les
sbb
pop
enter
inc
push
dec
push
out
stos
mov
iret
mov
xchg
nop
jle
dec
test
movs
test
jb
cmp
xchg
pop
mov
outs
cmp
sbb
cmps
push
sub
add
pop
fwait
adc
mov
adc
xor
cmp
cmps
xor
jg
mov
mov
rcl
sbb
clc
cdq
jle
adc
xchg
jae
mov
xor
bnd
scas
arpl
pushf
fs
xor
inc
stos
sbb
mov
mov
pop
int
or
fucomip
(bad)
adc
inc
mov
(bad)
in
jl
cmps
mov
or
mov
sbb
sub
pop
jae
jp
dec
ret
loop
push
sub
pop
sbb
(bad)
dec
inc
jnp
xor
outs
mov
mov
cmp
(bad)
rep
iret
push
retf
lahf
cmp
add
aam
cmp
pusha
call
push
rcr
cld
mov
jo
mov
xchg
pop
mov
fisttp
dec
(bad)
adc
ins
sub
adc
loope
mov
and
jbe
adc
(bad)
loope
fst
retf
sub
mov
cmp
popf
sbb
ja
cwde
aas
gs
push
mov
jg
mov
dec
xchg
or
fwait
aas
add
ret
cmp
(bad)
mov
xchg
int
mov
mov
stos
jns
or
jecxz
jne
pop
push
sub
imul
mov
add
lods
ins
adc
into
cli
int3
push
xchg
sub
out
or
jle
mov
add
pushf
ret
push
pop
aaa
mov
lds
sub
push
push
mov
push
push
lods
sub
hlt
mov
rcl
push
jnp
mov
daa
or
lock
dec
stos
cmp
xchg
dec
daa
and
pop
add
test
adc
sbb
inc
inc
in
xor
mov
movs
xchg
sbb
loope
pop
and
mov
(bad)
hlt
call
or
add
rcr
jmp
jnp
xor
mov
loopne
in
lock
push
int
pop
fldenv
dec
add
mov
mov
pop
mov
bound
retf
mov
pop
jmp
mov
lods
hlt
push
mov
jle
push
and
out
inc
mov
push
int3
xor
and
push
out
push
out
stos
cli
jno
adc
(bad)
xor
and
rol
push
jbe
adc
or
retf
dec
sbb
das
rol
pop
std
ror
mov
or
sbb
cmp
sub
jmp
xor
inc
mov
dec
int
aad
outs
fist
cdq
pop
mov
pop
loopne
outs
mov
mov
push
lds
sbb
cli
mov
fld
fwait
retf
xor
aas
scas
aam
daa
mov
sbb
jmp
loope
mov
sub
push
pop
popa
jle
leave
sub
sbb
cld
jmp
push
mov
mov
das
mov
add
movs
adc
lds
pop
add
gs
add
les
xor
dec
jl
cmp
sar
call
ja
sbb
hlt
loop
cmps
cmp
pop
rol
lock
fnstenv
mov
std
adc
xlat
inc
push
inc
mov
jmp
adc
mov
rol
cmp
xor
lods
inc
dec
div
xlat
clc
push
mov
call
leave
xchg
leave
xchg
loopne
push
mov
aas
cmp
push
inc
sub
aad
std
sbb
int
xor
cld
cmp
pop
adc
fdivr
inc
adc
dec
cmp
ret
gs
cli
mov
mov
repnz
sub
aad
xchg
(bad)
test
mov
cmp
pop
div
and
mov
in
popf
jmp
les
test
je
pop
sbb
add
fidiv
fadd
push
iret
out
pusha
or
push
in
std
jne
lods
push
lods
ror
cmp
jnp
mov
clc
xor
dec
sub
loop
or
and
xchg
add
cmc
popa
(bad)
fimul
in
dec
mov
adc
test
cmp
sbb
sub
xor
or
sti
push
xchg
(bad)
xor
imul
test
sbb
loop
js
pop
push
and
cmp
mov
std
sbb
aas
cwde
lods
je
retf
xchg
shl
in
int
cmp
call
cld
xor
idiv
fisttp
in
and
xchg
or
js
loop
mov
xor
stos
cmp
call
sbb
(bad)
and
jae
je
in
dec
and
fptan
jbe
sbb
sbb
adc
jge
stos
fwait
nop
and
or
inc
fstp
jbe
mov
es
and
or
inc
mov
cs
add
cmp
jmp
sbb
loope
sbb
pop
cmps
cmp
jle
repnz
cs
jo
cld
adc
jge
out
lahf
xchg
mov
call
mov
loopne
cmp
shl
enter
fdivp
(bad)
xchg
cs
and
rol
mov
and
imul
mov
loop
retf
mov
sub
in
jp
and
push
fs
push
sub
bnd
nop
dec
pop
lea
pop
test
adc
push
mov
and
add
test
arpl
arpl
inc
jmp
mov
rcr
sbb
clc
in
mov
out
daa
jle
jl
pop
push
push
aam
fdivr
sub
ins
leave
push
sbb
inc
and
add
mov
loop
mov
sbb
imul
inc
xrelease
or
push
test
dec
xchg
xchg
sub
pop
inc
mov
push
jb
mov
fidivr
pusha
outs
cmp
pop
cmp
adc
mov
test
cld
add
imul
das
mov
add
sbb
les
ret
lea
fist
pop
aad
xchg
sti
xor
cmp
fisttp
add
or
pop
test
loop
pop
and
jmp
xor
xchg
inc
and
adc
call
dec
bound
inc
jno
sub
gs
and
dec
and
clc
add
and
pop
add
mov
fcomp
gs
mov
or
pop
icebp
out
movs
out
test
loop
mov
pop
fmul
inc
aaa
xchg
xchg
adc
pop
jmp
addr16
stos
mov
cwde
and
sub
mov
sbb
movs
add
push
repz
adc
xor
jecxz
das
lods
jg
movs
cs
mov
pop
inc
sub
popf
loope
cmp
sub
test
das
pop
rol
add
xchg
add
pop
arpl
(bad)
out
clc
pmuludq
xchg
pop
daa
outs
test
in
icebp
cmp
sahf
sbb
out
jo
xor
jg
jmp
mov
fs
(bad)
mov
push
xchg
popa
pop
popf
jmp
stc
call
popa
in
add
mov
dec
inc
xor
mov
xchg
push
xchg
adc
pop
and
test
mov
xor
fst
add
rol
das
imul
cmp
inc
xchg
lea
push
pusha
ins
int
add
sub
retf
shr
push
xor
sbb
dec
xchg
inc
sub
leave
shl
or
mov
jl
repnz
sbb
push
pop
push
mov
push
jmp
mov
sbb
add
or
and
les
ins
mov
mov
xor
movs
push
aam
test
xor
push
dec
fst
lds
in
push
imul
(bad)
cmp
loopne
jge
cmp
xchg
mov
leave
pushf
cmp
inc
or
inc
push
test
outs
fidivr
shl
adc
jle
jl
and
outs
sahf
in
add
sub
sub
int
fwait
adc
pop
outs
or
bound
xor
sbb
nop
push
icebp
enter
out
add
mov
mov
(bad)
push
xlat
inc
fs
das
ins
mov
in
(bad)
mov
gs
pop
or
mov
sbb
repnz
stos
mov
in
leave
popf
or
je
mov
xor
out
jbe
in
lahf
jge
gs
jbe
xchg
jg
xchg
sbb
mov
xor
pop
stos
imul
xor
movs
in
or
setp
add
and
push
into
arpl
sbb
pop
sub
aad
cmp
aam
sbb
mov
mov
or
jle
xchg
ret
mov
dec
xchg
(bad)
push
mov
adc
out
dec
loope
movs
je
mov
adc
mov
mov
xchg
retf
shl
leave
fwait
outs
inc
ja
(bad)
xchg
inc
test
fsub
fbstp
pop
mov
dec
imul
stos
or
push
enter
mov
inc
pop
pop
popf
cmp
mov
cmp
pop
cwde
pop
fsubr
jge
fwait
(bad)
xchg
xor
lods
shl
jb
in
in
cli
aaa
(bad)
xor
jmp
in
xor
mov
pop
mov
movs
ins
adc
mov
popf
push
pop
daa
cmc
ja
std
adc
sbb
cmp
call
mov
mov
mov
icebp
cs
jns
lods
jns
xchg
repnz
pop
jmp
fcomp
cmc
sbb
movs
jne
lock
and
mov
mov
daa
sub
ja
dec
push
cmp
lods
jmp
mov
inc
leave
and
jmp
push
stos
adc
jbe
add
pop
and
inc
into
lods
jl
imul
or
cs
scas
push
outs
push
pop
fiadd
xor
xchg
jmp
xor
mov
xor
stc
cld
fs
shr
outs
outs
ds
inc
std
in
in
mov
mov
int3
pushf
cmp
add
imul
fs
gs
outs
xchg
push
fwait
xchg
add
push
xor
cmp
jle
mov
pop
cmps
adc
movs
inc
push
pop
popf
jmp
add
movs
inc
outs
in
push
loop
outs
push
out
mov
not
push
inc
aad
sub
xor
inc
push
jecxz
fwait
fwait
outs
jge
out
or
mov
mov
push
fistp
jns
and
jmp
inc
stos
jns
sbb
push
repnz
icebp
push
movs
js
mov
shr
loope
addr16
lahf
outs
pusha
fiadd
ror
dec
cmp
push
pop
call
rcl
xchg
xor
xor
xchg
shl
pop
sbb
mov
rcl
push
pushf
popf
cmp
push
popf
movs
int3
add
pop
dec
cmp
leave
imul
xchg
mov
add
cmp
lea
loopne
out
mov
mov
cwde
xlat
loop
dec
jmp
xor
add
stc
les
push
xchg
popa
xor
or
jp
cmp
sbb
xchg
dec
mov
xor
jo
ret
xchg
(bad)
and
push
sbb
dec
bnd
fstp
ror
push
inc
(bad)
ins
sbb
movs
xchg
scas
sub
test
cmp
mov
dec
test
je
scas
pop
out
shr
fisub
push
mov
es
(bad)
out
inc
call
xor
push
scas
jle
xchg
dec
loop
dec
push
(bad)
mov
jmp
outs
cld
or
inc
sti
retf
rcr
and
xchg
fild
or
cmp
sub
xchg
xchg
cmps
sbb
cmc
js
or
into
ins
mov
and
cld
aad
lds
iret
jle
outs
sbb
test
outs
mov
add
xor
scas
dec
iret
add
in
jmp
cmp
data16
nop
sahf
xchg
adc
stos
jmp
adc
mov
lods
mov
jmp
and
rep
and
xchg
mov
xchg
iret
sahf
mov
ror
gs
imul
jno
mov
das
dec
std
jg
or
sbb
cld
pop
mov
leave
sbb
test
das
inc
fadd
es
mov
shl
push
sbb
out
xchg
cmp
jg
jns
add
cdq
mov
add
outs
xlat
ret
ror
popf
in
cmp
dec
sub
sub
std
sub
mov
dec
mov
pop
dec
cmp
push
inc
stc
mov
js
cmp
ror
ins
adc
fcom
repz
push
inc
adc
movs
jns
in
jo
in
popf
jg
mov
fs
jmp
lahf
xor
mov
daa
jecxz
mov
fs
mov
das
fcmovbe
pop
popf
fbld
sbb
xor
cmp
lods
jp
xor
jae
xlat
dec
fst
out
push
cmp
stos
loop
test
out
adc
aaa
out
sbb
push
fstp
add
and
sub
sbb
pushf
adc
xchg
pop
jno
lods
loopne
aam
div
mov
rol
popf
mov
out
daa
call
inc
inc
add
cmps
sub
sub
mov
add
sub
pop
dec
xchg
call
arpl
and
out
test
cwde
jns
adc
(bad)
jl
cdq
sub
stos
push
aas
sub
inc
dec
pop
pop
ds
jmp
addr16
and
data16
jl
dec
mov
dec
mov
add
into
mov
sub
xchg
cmp
(bad)
adc
pop
in
gs
xchg
in
popf
mov
inc
adc
rep
leave
stos
inc
lock
mov
in
adc
fmul
stos
inc
push
aas
cmps
call
js
test
mov
push
(bad)
jle
sbb
and
or
icebp
mov
imul
push
xor
cmp
into
mov
cmp
cwde
add
cwde
lea
into
adc
or
xlat
int
jp
test
push
scas
sub
mov
data16
imul
iret
scas
push
adc
jecxz
ins
in
push
imul
test
shr
and
shr
out
xchg
mov
test
mov
sahf
pop
fs
(bad)
fs
pop
and
test
xchg
fcomi
xlat
out
dec
push
rcl
jecxz
cdq
stos
(bad)
shl
das
arpl
mov
in
(bad)
xor
nop
sub
cmp
or
sbb
int
add
or
push
les
je
jno
inc
shl
popa
ss
out
pop
out
ins
or
or
xchg
clc
in
sbb
xchg
and
and
push
jnp
or
shl
push
cmps
and
rcl
daa
das
fcomp
push
in
mov
dec
fadd
scas
sub
loop
aad
mov
jne
sub
mov
sub
mov
jb
lods
ds
jbe
dec
inc
int
pushf
dec
inc
dec
cld
in
arpl
(bad)
xchg
mov
lea
repnz
and
pop
cld
sbb
stc
dec
sub
jae
mov
out
inc
xor
xchg
iret
(bad)
or
inc
cmps
push
std
fdivr
jbe
shr
mov
dec
rcl
or
out
movs
sub
adc
jmp
xor
test
mov
aam
or
lea
mov
dec
repz
jns
dec
enter
data16
cli
or
and
inc
push
fs
out
jbe
push
addr16
fcom
inc
outs
bound
pop
inc
fld
stc
xchg
push
xor
add
mov
call
dec
pop
scas
push
pop
repz
dec
mov
test
jecxz
(bad)
xor
clc
or
repnz
jmp
or
loop
int3
scas
movs
cmp
sbb
ds
addr16
push
sbb
nop
sub
mov
mov
aas
sbb
dec
and
push
hlt
sub
inc
adc
xchg
or
push
sbb
iret
rcr
shl
popf
jl
leave
xchg
xchg
pusha
cmps
dec
ins
add
jmp
repz
sub
mov
dec
loop
sub
push
or
pop
mov
iret
cmps
sub
push
pop
xchg
in
out
dec
aaa
mov
push
je
adc
dec
mov
dec
mov
jnp
sub
mov
or
ss
outs
retf
fsubr
add
scas
out
xlat
mov
(bad)
stos
sub
or
pop
push
sbb
cmp
fucom
pop
adc
push
loopne
pop
ins
out
mov
pop
cmp
scas
inc
cmps
pop
mov
pop
(bad)
not
shr
movs
cld
mov
cli
je
aad
pusha
ins
mov
jno
adc
xchg
cmp
mov
or
mov
mov
jne
test
sub
int
fild
in
shl
push
pop
or
mov
xchg
ror
push
or
push
popa
hlt
aaa
sub
mov
(bad)
pusha
push
or
add
mov
mov
push
ror
xor
mov
xor
cmps
ja
cmp
out
jmp
dec
aam
add
test
sbb
cmps
in
in
pop
mov
sub
and
(bad)
adc
outs
rep
sbb
dec
dec
ror
xor
push
inc
lahf
mov
sti
ficom
sti
push
sbb
add
in
sbb
sub
hlt
das
push
jo
push
jge
jecxz
xchg
push
cli
popa
or
sub
adc
mov
cdq
retf
pop
dec
and
mov
call
push
retf
je
daa
xchg
cs
xor
inc
or
dec
stos
popa
mov
xchg
add
inc
jg
adc
sbb
cdq
aad
test
sar
xchg
repz
lea
div
mov
fld
pop
or
dec
das
adc
or
mov
int
call
dec
or
leave
or
and
not
pop
xor
jae
(bad)
sbb
dec
pop
aaa
cli
mov
xchg
addr16
dec
into
xor
jns
jae
xchg
pushf
cmovne
sub
sbb
fimul
mov
pop
mov
xchg
sti
gs
mov
scas
(bad)
sub
sbb
outs
in
sub
push
and
cmp
dec
stos
xor
mov
cli
mov
out
and
push
lahf
test
je
popf
add
(bad)
adc
lods
mov
adc
aad
sbb
adc
push
pop
push
outs
adc
mov
sub
neg
or
test
fidivr
or
dec
mov
cmp
sub
push
dec
and
(bad)
pop
lods
xor
daa
adc
sbb
scas
pop
rol
movs
popa
scas
jl
adc
aad
mov
sub
scas
push
mov
int
das
jnp
cmp
mov
les
and
dec
retf
in
dec
push
ins
mov
sub
test
imul
sbb
adc
lods
ss
loopne
adc
enter
out
sbb
add
mov
mov
cdq
cdq
scas
cmp
ja
outs
push
mov
call
dec
xor
jne
push
mov
inc
and
shl
retf
imul
cwde
icebp
sub
pop
adc
push
pop
ror
stc
adc
sbb
xor
mov
popf
stc
cmps
mov
inc
push
fst
arpl
les
(bad)
shl
mov
mov
push
pop
cld
jne
mov
push
and
icebp
ins
sub
repnz
push
rcr
movs
jg
mov
mov
jmp
push
sbb
mov
inc
mov
xchg
fwait
add
push
pop
arpl
cdq
push
add
jb
xchg
icebp
fcomp
(bad)
fcmovb
adc
je
and
ret
inc
ds
sbb
pop
xchg
es
mov
adc
adc
jbe
mov
retf
test
shl
jo
div
mov
push
retf
popa
cmps
nop
stc
jnp
call
in
mov
out
and
xchg
xor
mov
push
nop
cmp
mov
pusha
out
push
xor
ret
pop
not
test
in
into
popf
dec
adc
or
mov
popa
stos
outs
cmp
push
inc
scas
sub
sub
popa
or
or
xchg
mov
cdq
ror
fstp
sub
(bad)
out
sbb
add
xor
retf
loop
sbb
sub
jo
mov
jmp
out
(bad)
sub
loopne
sbb
(bad)
xchg
pop
mov
add
jne
sbb
mov
cs
int
sub
cli
push
jne
pop
mov
vandnps
int3
add
pop
popa
lahf
bswap
adc
fs
jnp
mov
icebp
movs
rcl
fnstenv
ins
movs
es
aam
jp
lods
das
xchg
and
cmc
pop
fnsave
aam
xchg
js
cdq
out
mov
jnp
ret
div
dec
fsubr
fcom
hlt
adc
xor
pop
mov
sub
fldenv
inc
push
mov
pop
push
mov
and
xchg
jp
call
add
test
ds
std
dec
iret
arpl
stos
(bad)
ret
pusha
cmps
mov
aaa
gs
mov
push
or
dec
mov
mov
jg
cmp
hlt
les
je
icebp
add
imul
test
pop
outs
mov
fwait
aad
and
sbb
iret
loope
mov
cld
test
movs
int
cmp
retf
(bad)
push
in
movs
mov
ret
mov
xchg
push
jo
adc
push
nop
movs
sbb
inc
pop
adc
mov
into
xchg
clc
data16
xchg
inc
sti
adc
es
mov
scas
pusha
stos
popf
cmp
inc
cmp
xchg
nop
push
mov
xchg
daa
test
adc
mov
scas
daa
xchg
sbb
sbb
mov
jno
popa
adc
icebp
and
imul
popf
shl
loop
sahf
ret
ficomp
fmulp
repz
sahf
inc
aam
test
lods
iret
pop
fimul
cmp
cwde
repnz
outs
sub
add
pop
pop
outs
xor
clc
cdq
pop
jnp
xchg
call
or
push
or
sbb
pop
jo
loope
fld
sbb
cli
call
add
mov
mov
out
leave
and
fwait
or
fcom
pop
mov
sbb
in
dec
lods
popa
pop
dec
jecxz
in
clc
call
clc
(bad)
mov
mov
sbb
jmp
mov
pop
cdq
retf
pop
popf
mov
aam
adc
ins
and
mov
or
inc
push
mov
add
sbb
pop
mov
ja
in
inc
stos
sub
js
pop
cld
adc
mov
push
test
mov
jl
xor
out
mov
xor
cdq
ret
pop
sbb
pop
mov
mov
mov
in
xor
aaa
sub
cmp
sar
push
push
in
(bad)
sti
or
xchg
lock
push
xchg
cld
arpl
in
(bad)
jg
sbb
cmps
cmps
jo
gs
mov
or
out
dec
and
jmp
(bad)
push
cmp
sub
lds
mov
mov
mov
or
imul
aas
pushf
mov
inc
aas
jmp
cmp
jne
push
ror
subps
mov
int3
mov
sar
sti
pop
mov
xchg
dec
out
sbb
aam
ja
mov
adc
and
cmp
push
mov
xchg
adc
dec
in
adc
dec
cdq
neg
or
test
add
mov
adc
fdivr
aam
mov
mov
xchg
stc
call
iret
fwait
add
cmps
pop
arpl
xchg
xor
jmp
jae
ss
xor
retf
lock
mov
mov
repz
call
jae
mov
cmc
mov
jae
jge
dec
dec
xchg
cmc
inc
xchg
(bad)
jmp
out
push
mov
jmp
outs
push
ss
xchg
out
lock
lods
add
shl
jno
fimul
clc
sbb
dec
fst
push
call
nop
mov
pushf
data16
jp
es
sbb
mov
int
(bad)
loop
push
mov
arpl
push
dec
xchg
je
xor
cs
daa
pop
and
(bad)
and
jb
cli
fimul
retf
inc
xchg
mov
aam
mov
in
jg
out
inc
rol
pop
stos
or
lahf
ja
mov
add
or
(bad)
enter
fsubr
dec
pushf
inc
sbb
cmp
sti
mov
or
fcomip
dec
sub
or
outs
mov
idiv
push
mov
adc
jno
repz
scas
pop
push
adc
aas
mov
jb
rcr
mov
jno
adc
push
mov
add
adc
lea
mov
mov
js
cwde
adc
stos
mov
pop
std
add
loop
xor
outs
imul
add
xchg
mov
xchg
adc
jns
sbb
xchg
movd
cdq
inc
gs
xchg
mov
xchg
mov
pop
ja
add
leave
ds
ret
inc
out
test
xchg
pop
jmp
js
pop
push
mov
inc
div
xor
in
hlt
dec
frstor
sar
es
inc
jmp
out
fisttp
push
jnp
pop
loop
sbb
test
aas
mov
push
bound
mov
adc
cwde
sahf
mov
lods
pop
icebp
imul
and
mov
xor
dec
scas
inc
jmp
data16
out
adc
jmp
cmp
test
mov
cmps
sub
jmp
add
sbb
ret
xchg
sub
mov
mov
add
xchg
xchg
mov
and
enter
(bad)
pop
xchg
test
sub
in
adc
dec
cmc
mov
xchg
das
jmp
sbb
jno
mov
jle
arpl
inc
cmp
ja
mov
xor
push
sahf
sbb
cmps
fisub
cld
in
lods
data16
imul
xor
dec
loopne
outs
mov
jecxz
jecxz
loope
pop
mov
mov
(bad)
or
push
cmp
aam
pushf
nop
jo
pop
push
and
ja
xor
adc
mov
call
(bad)
sub
test
rol
(bad)
aam
pop
imul
dec
stos
xchg
fcmovbe
(bad)
std
push
cld
aad
fsubr
(bad)
mov
inc
sti
jge
das
jae
or
sbb
push
aas
nop
jle
and
add
jbe
jge
or
lea
das
movs
pop
popa
mov
repz
ror
jo
jo
xor
mov
cmp
sar
dec
pushf
xor
xchg
fimul
icebp
nop
icebp
call
sahf
(bad)
jmp
lods
jb
fs
rcr
fst
jecxz
cmps
call
sub
xchg
jle
mov
scas
add
jle
std
test
out
daa
inc
std
frstor
pop
call
out
and
clc
or
sub
sbb
pop
ins
leave
or
scas
sub
shr
inc
pop
in
inc
add
repz
inc
cmp
repz
sbb
xor
sub
dec
jne
sbb
sub
xchg
dec
xor
jge
inc
inc
sub
call
mov
ficom
mov
mov
lods
adc
aaa
loope
xor
push
adc
xchg
gs
sbb
pop
popf
sub
cmp
or
loopne
cmp
(bad)
imul
adc
cmp
clc
mov
cmp
cli
mov
movs
(bad)
popf
retf
push
aad
push
push
lods
xchg
in
scas
shr
aas
jne
ja
pop
sahf
movs
(bad)
repnz
jns
mov
(bad)
sbb
int3
xchg
fwait
sbb
out
fisub
cmps
bound
adc
sbb
sbb
push
xor
das
dec
push
pop
fadd
mov
fwait
scas
push
mov
repz
xchg
pushf
mov
lds
jne
js
cmp
neg
and
dec
psrad
dec
cdq
call
fsubr
test
jae
pop
retf
xor
cmc
mov
push
retf
sbb
adc
xchg
pop
mov
enter
mov
adc
add
adc
xchg
and
outs
leave
ret
and
cmp
js
inc
imul
lods
movs
aas
call
mov
into
cmp
inc
cmc
cld
jp
out
xlat
je
fiadd
out
jge
lods
mov
mov
daa
xor
pop
adc
xchg
mov
loope
cmp
and
xchg
jbe
adc
adc
lock
jge
xor
jge
loop
outs
test
(bad)
jl
jl
sbb
rcr
je
mov
movs
dec
dec
jno
push
mov
shl
push
push
int
sub
test
loopne
lods
xchg
test
jp
cli
nop
push
jp
shl
adc
jb
mov
aas
sub
dec
retf
and
rol
retf
mov
sti
cmp
outs
sbb
pop
lea
pop
push
dec
mov
sbb
cmps
fnstsw
nop
ins
addps
mov
test
fmul
inc
cmp
popf
jl
inc
aaa
xlat
mov
xchg
fld
push
retf
push
mov
xchg
xchg
mov
fidivr
inc
jns
and
movs
std
out
clc
lods
stos
xor
xchg
movs
or
pop
pop
push
stos
sbb
sbb
inc
pop
xchg
sbb
or
inc
jno
push
xchg
daa
sbb
sar
adc
fist
sahf
outs
xor
ds
sbb
loop
sub
dec
add
xlat
push
xchg
add
(bad)
popa
aad
pusha
jmp
ss
pop
dec
popa
and
in
pop
mov
adc
sbb
cmp
pop
test
int
xor
or
xchg
jo
mov
push
jp
in
popa
aad
mov
imul
push
mov
adc
leave
inc
push
data16
xchg
jnp
mov
add
jne
pop
(bad)
lock
in
push
cdq
call
enter
jo
sub
(bad)
adc
fisubr
sub
xchg
fs
add
leave
lahf
dec
fs
in
xchg
inc
dec
enter
pop
(bad)
pop
add
(bad)
pop
popa
into
movs
sub
rol
jo
jno
jns
jmp
aas
das
nop
imul
push
jg
jl
ficom
ins
jnp
push
dec
into
lods
scas
mov
ins
xchg
jbe
jne
retf
push
std
push
rol
pop
mov
push
out
cmps
xor
test
dec
call
stc
inc
fwait
aad
enter
(bad)
push
xor
ret
push
lods
jmp
xchg
not
div
dec
ins
xor
push
rcl
idiv
dec
scas
out
and
into
jo
jo
add
cdq
mov
mov
cmp
fnstsw
jmp
sbb
es
xchg
mov
adc
addr16
cmp
mov
xchg
jmp
mov
test
push
xor
xor
push
xchg
neg
cmps
test
movs
xor
aas
call
mov
cmp
(bad)
loop
pop
mov
cmp
loope
add
lock
rcr
xor
jo
nop
mov
fdivrp
sub
sbb
inc
sub
xor
or
int3
out
test
lods
or
mov
xor
in
test
mov
push
xchg
fcom
js
into
push
cwde
loope
cmp
pop
adc
or
sbb
ret
dec
and
sbb
push
mov
lods
sub
or
push
xor
shl
push
pusha
ins
jmp
sbb
(bad)
stc
cmp
stos
(bad)
dec
into
test
jle
imul
fild
ins
iret
sbb
xchg
out
movs
in
xchg
cmps
adc
ror
mov
movs
ret
(bad)
out
rcr
lods
inc
test
adc
pop
adc
popf
jecxz
rcl
sbb
ss
fidivr
stos
ins
push
pop
cwde
test
(bad)
pushf
mov
js
fist
jge
in
inc
mov
sub
iret
push
push
or
repz
clc
test
shl
and
fsubr
cdq
repz
(bad)
rol
ror
pop
icebp
mov
add
xor
push
xlat
mov
and
mov
push
pusha
adc
dec
sub
sar
lods
arpl
and
dec
(bad)
mov
call
pop
mov
pop
sbb
jnp
xchg
cmp
mov
fstp
cld
hlt
adc
add
jl
into
and
pop
pop
aad
dec
mov
cmp
(bad)
cmp
mov
call
mov
pop
and
mul
lahf
and
mov
or
arpl
div
outs
lds
int3
and
ret
pop
pusha
xor
push
addr16
jl
mov
ror
cmp
xor
push
pusha
push
jg
mov
cmc
ds
(bad)
or
test
sbb
clc
stos
fdivrp
jmp
lods
sub
mov
icebp
test
sbb
outs
jnp
lods
je
(bad)
push
lahf
or
out
stos
in
inc
inc
fwait
add
test
mov
mov
cmps
sbb
loop
outs
fs
sub
das
jbe
out
sub
jg
ret
movs
cld
xchg
pop
jmp
mov
aas
(bad)
cmp
xchg
loop
and
xchg
push
in
or
loope
daa
loopne
push
dec
outs
in
ret
imul
cld
iret
pop
adc
test
or
xor
pop
inc
fdiv
loop
add
fidiv
out
clc
aam
stc
cmps
xchg
inc
mov
fcmovnu
icebp
pop
ret
add
imul
cmp
imul
(bad)
lahf
retf
fnstsw
test
dec
adc
fistp
scas
repnz
(bad)
jo
inc
adc
ins
dec
mov
shr
lahf
push
ficomp
sub
aaa
jmp
inc
clc
or
xchg
popf
xchg
(bad)
mov
pushf
mov
or
movs
movs
xlat
pop
in
xor
jle
xchg
movs
pop
movs
jb
aad
stos
out
ret
ss
inc
cmp
int3
(bad)
into
or
or
cmp
cmps
jnp
adc
inc
mov
into
popa
jae
enter
jbe
(bad)
jge
les
xchg
push
mov
arpl
test
mov
inc
mov
mov
fxch
ss
mov
push
jb
sbb
push
or
ja
pop
movs
arpl
data16
movs
add
add
mov
loop
xor
sbb
pusha
les
jge
stos
(bad)
out
fstp
mov
jp
xor
mov
cmps
ucomiss
mov
lods
jecxz
pop
cwde
ja
inc
sub
movs
call
mov
xchg
sub
hlt
jl
cmps
or
pop
mov
xor
jg
pop
and
mov
int3
rcl
add
sub
mov
iret
push
sub
push
iret
ins
dec
dec
jo
adc
nop
lea
ins
xor
inc
inc
pushf
mov
pop
fidivr
aaa
mov
stos
lods
in
xchg
pop
push
sbb
or
btr
mov
or
std
cwde
inc
fstp
xchg
sub
fld
push
dec
faddp
call
push
dec
retf
ficomp
mov
sub
rol
xchg
push
outs
bound
cli
xor
popf
xchg
movs
sub
xchg
sub
dec
inc
add
das
add
sti
aam
hlt
shl
inc
std
xor
sub
clc
sahf
sbb
adc
xor
xchg
and
sub
add
cwde
getsec
adc
pushf
fild
xchg
jbe
mov
pop
mov
mov
xor
and
scas
adc
hlt
gs
push
cmp
scas
pop
mov
imul
test
xor
(bad)
fidivr
gs
mov
cs
ds
add
xor
jle
xor
push
inc
out
xor
xor
jo
mov
add
popa
pop
ins
lods
aas
xchg
sar
loopne
int3
mov
je
lahf
mov
sti
push
sbb
hlt
add
movs
out
stos
imul
imul
xchg
cmp
or
or
xchg
push
fld
or
jnp
push
cli
mov
pop
movs
ud0
cs
sbb
iret
test
push
lods
std
push
mov
pop
sti
adc
cdq
mov
mov
popf
aad
or
out
std
sbb
lods
add
cmc
push
movs
dec
fs
adc
fwait
in
fdivrp
push
(bad)
shl
out
dec
dec
mov
and
inc
iret
or
cmp
cmps
and
iret
inc
shl
je
mov
pusha
mov
and
and
and
rep
pusha
mov
cwde
(bad)
ds
iret
jo
or
ss
aaa
scas
push
mov
dec
outs
fstp
fld
push
std
inc
xlat
push
lds
mov
push
and
lods
neg
sub
das
bound
xchg
xchg
loopne
test
out
sahf
leave
mov
xchg
xor
and
mov
out
outs
cmp
dec
xlat
mov
into
adc
jne
aaa
mov
out
dec
std
jg
dec
pop
push
rcl
ss
gs
(bad)
repnz
in
js
cs
inc
loop
into
fadd
cmp
es
loope
out
push
inc
(bad)
add
cmp
ja
rol
sbb
or
dec
cmp
dec
adc
inc
mov
out
ds
or
push
outs
rol
sahf
ss
cwde
cwde
lahf
mov
ret
mov
mov
jl
(bad)
adc
(bad)
mov
clc
add
cli
sbb
mov
push
int3
pop
sahf
xchg
dec
mov
jmp
out
in
ror
inc
inc
mov
bound
shl
gs
xor
add
(bad)
(bad)
xchg
jo
ror
jle
clc
in
ss
fisubr
fadd
imul
je
icebp
lods
fimul
jno
fsubr
ja
sbb
outs
enter
pop
test
pusha
and
push
sar
icebp
jnp
or
je
(bad)
ins
push
imul
mov
lahf
mov
jne
cmp
xchg
sub
mov
cdq
mov
mov
cmp
ja
jle
pusha
pop
pop
dec
jmp
push
jl
lea
sahf
call
lock
hlt
fs
lods
mov
push
cmp
icebp
aad
out
leave
jo
mov
jecxz
aas
add
daa
sub
lds
popa
cmp
fmul
sbb
shr
jge
fstp
add
lock
mov
jl
fild
addr16
mov
rol
jae
(bad)
fcmovb
sub
arpl
jae
out
stc
dec
scas
cmp
cmps
xlat
mov
adc
cmps
push
xchg
and
fcomip
fmul
fidivr
pusha
icebp
pushf
fs
and
jns
int3
(bad)
pop
push
jae
jbe
jo
xor
jecxz
(bad)
cld
(bad)
mov
rcr
ret
mov
out
pop
jae
adc
clc
test
jg
(bad)
and
mov
shl
and
jnp
pop
xchg
push
nop
enter
mov
enter
jnp
(bad)
loop
and
retf
pop
inc
mov
cmp
out
(bad)
fiadd
into
mov
shl
imul
loopne
sahf
push
cli
add
dec
pop
inc
(bad)
xor
hlt
sbb
pushf
daa
dec
ss
int
hlt
jbe
sbb
inc
not
es
int3
in
js
mov
mov
out
fldenv
push
ds
cdq
rol
xor
sub
ins
xor
mov
mov
inc
pusha
das
aas
add
sub
xor
in
outs
push
jmp
stos
mov
pop
pop
jo
daa
jp
jl
or
test
(bad)
sbb
imul
fnstenv
lds
sbb
xchg
jae
test
sub
clc
add
std
loopne
ds
sub
push
push
xlat
xchg
loop
push
pushf
cld
add
stos
cmp
dec
cmp
mov
popf
rcr
int3
mov
aad
ins
fidiv
test
xor
jl
loopne
pop
or
pop
(bad)
shr
mov
sub
cld
jbe
inc
ret
dec
loope
retf
jbe
mov
jp
fisubr
adc
cmp
lock
mov
mov
mov
dec
xor
mov
inc
xor
push
add
(bad)
mov
dec
jns
imul
sbb
mov
mov
and
sar
ret
daa
push
add
int3
xor
fcom
adc
push
jns
inc
dec
push
push
xor
imul
sbb
dec
repnz
test
pop
inc
mov
or
mov
rcr
out
xchg
or
push
lock
pop
and
pop
shr
jo
push
adc
sbb
imul
ffreep
push
sbb
std
cmps
aas
xchg
dec
stos
pop
inc
jl
imul
xchg
or
xlat
(bad)
mov
and
jle
lock
push
sbb
mov
or
ror
loope
push
imul
add
mov
loop
push
pop
repnz
mov
dec
and
aas
mov
cmp
cmp
jo
lds
sub
fbstp
repz
into
pop
xor
out
jmp
jl
test
scas
push
out
push
jmp
cmp
jmp
das
imul
push
or
cmps
retf
daa
call
mov
mov
lock
shr
js
dec
sub
mov
or
push
add
out
cmp
or
or
sbb
pop
iret
pop
jae
das
mov
call
push
cli
jno
fistp
dec
int3
jae
mov
fidiv
and
aad
inc
inc
jle
pop
dec
shl
xchg
adc
mov
pop
inc
sub
sbb
dec
int
mov
sub
cmp
ror
aad
out
and
retf
xor
inc
xor
inc
mov
scas
push
pop
sbb
sbb
cs
mov
inc
push
mov
or
xor
jbe
dec
mov
pop
adc
aas
ss
mov
ror
mov
mov
and
ret
cmp
rcr
aam
int
in
aaa
fadd
lds
out
and
adc
aam
in
or
sub
pmulhw
fisubr
cmp
shr
or
sbb
xchg
xchg
mov
out
(bad)
ror
dec
loopne
enter
pop
push
jmp
loop
aam
cli
sbb
fimul
rcl
jmp
jbe
sbb
mov
mov
(bad)
pop
and
pushf
test
or
jl
dec
dec
sub
adc
add
ins
xchg
adc
inc
lods
xor
sub
outs
add
add
(bad)
mov
cld
js
mov
mov
mov
mov
mov
int3
sar
dec
scas
pop
fs
mov
or
mov
jns
ficom
push
cdq
dec
stos
mov
imul
mov
inc
add
imul
xchg
aas
cmp
jb
mov
fninit
in
xchg
lds
mov
pop
adc
push
sbb
sbb
aas
or
add
sbb
fsubr
and
xchg
adc
push
jo
xchg
nop
inc
jnp
aas
movs
fisub
cmc
fisubr
add
pop
sbb
cmps
jne
xor
xchg
inc
fstp
push
xchg
loop
mov
fisttp
pop
or
cmp
push
adc
fxch
fstp
xchg
lods
mov
dec
push
iret
lods
jmp
std
dec
sub
(bad)
pop
or
xchg
clc
jg
pop
add
inc
or
cmp
cmc
mov
movs
dec
cmp
popa
xchg
push
stc
sub
mov
xchg
daa
or
(bad)
jmp
lods
enter
js
and
shr
and
js
in
sbb
test
sub
leave
jge
mov
mov
shr
das
ret
inc
pop
(bad)
je
push
mov
aas
wbinvd
arpl
pop
cmps
sbb
(bad)
std
sbb
outs
mov
mov
adc
push
outs
test
dec
xchg
call
mov
sar
add
xor
sub
sub
(bad)
adc
das
imul
mov
mov
sub
add
int3
lods
and
ins
xchg
push
daa
inc
xchg
push
xor
sar
and
shr
loopne
in
fstp
mov
fsubr
leave
ja
push
xchg
xor
(bad)
jno
add
xchg
sub
pop
pop
mov
sub
and
adc
cmp
mov
int
sbb
pop
gs
repz
pusha
or
push
mov
mov
jb
pop
mov
xchg
xor
aam
stos
xor
push
xor
out
mov
into
jecxz
in
test
fistp
jmp
xor
mov
fldcw
dec
cmp
cvttps2pi
scas
xchg
jbe
enter
jno
pop
sbb
xor
or
pusha
cmp
mov
shr
enter
lds
int3
(bad)
jp
or
inc
(bad)
jle
movs
(bad)
mov
outs
out
js
dec
xchg
jo
fwait
jb
xor
(bad)
out
dec
out
std
xchg
lods
add
inc
addr16
adc
out
mov
pop
bnd
sahf
push
xor
sub
aaa
int
jge
gs
push
sub
loop
jle
mov
push
push
test
pop
mov
ins
inc
xor
adc
jo
or
pop
fwait
inc
leave
push
lea
sbb
cdq
shl
bound
cmp
movs
ins
pushf
mov
mov
jo
push
cmc
call
pop
cmps
lahf
fiadd
pop
std
je
(bad)
scas
sti
mov
add
sbb
shr
jp
call
test
or
mov
aaa
inc
imul
out
adc
mov
pusha
sub
dec
push
add
out
ds
sub
pop
gs
jns
je
dec
ins
popa
js
fnstcw
push
outs
mov
stos
jle
xchg
call
pop
xchg
out
inc
popa
push
pusha
push
xor
(bad)
sub
sub
nop
out
push
(bad)
and
xchg
test
sbb
test
imul
jae
inc
ins
cmps
jle
push
loopne
jle
call
in
out
xchg
inc
jnp
push
lock
jmp
rcl
call
jge
sbb
or
push
xchg
test
mov
cmp
and
in
add
adc
rcl
adc
and
pop
jbe
iret
mov
pop
jge
mov
mov
imul
mov
mov
test
in
jl
rep
fabs
jo
add
dec
fild
ret
sti
addr16
xchg
mov
xor
shl
dec
repnz
call
jo
shl
jmp
popa
icebp
movs
imul
push
inc
repnz
cmps
sub
xchg
imul
repz
sahf
pop
inc
xor
sub
inc
popf
or
inc
xchg
adc
cmps
xchg
cmp
je
or
imul
add
xchg
push
xchg
cmp
mov
push
mov
pop
imul
jno
mov
arpl
xor
mov
mov
mov
cmp
int
xor
xchg
push
pop
jg
push
sub
enter
mov
into
call
cmp
push
bound
xor
hlt
adc
pop
leave
lds
shl
mov
test
mov
in
adc
(bad)
mov
adc
and
mov
fs
fdiv
iret
mov
or
adc
sbb
pop
inc
mov
push
inc
cmps
movs
retf
mov
test
arpl
addr16
jb
or
add
and
pushw
pop
movs
cmp
div
or
push
and
test
into
fwait
pop
xchg
sbb
out
in
loopne
in
pop
pop
(bad)
fs
mov
inc
ror
mov
popa
fadd
arpl
cmp
cmp
pop
rcr
les
mov
outs
int
lock
icebp
pop
dec
add
push
or
test
aad
retf
inc
pusha
mov
shr
ja
neg
fisttp
pop
mov
inc
inc
mov
sbb
cmp
or
ins
mov
dec
(bad)
dec
fmul
ror
in
sbb
jo
cli
aas
int
(bad)
mov
adc
jge
adc
xchg
pop
pop
jg
aam
xchg
scas
or
hlt
pop
gs
scas
mov
inc
cmp
aas
add
jge
pop
push
dec
xchg
outs
outs
sbb
pop
nop
xor
fcomp
cmps
mov
add
dec
nop
xchg
rcl
inc
jl
mov
push
push
das
xchg
pop
sbb
xor
mov
jle
shl
xchg
mov
inc
sbb
mov
cmps
lea
out
push
xor
and
push
stos
and
push
pusha
push
inc
sbb
pop
sub
push
inc
loop
add
hlt
push
mov
sub
call
neg
lods
loopne
sti
pop
cwde
out
popf
push
sub
pop
shr
not
push
stc
ret
cmp
pop
iret
push
cmp
cwde
fcmovb
mov
pop
or
shl
ror
add
hlt
push
addr16
int3
jns
shl
and
fcmove
js
sbb
dec
ret
loop
jle
sbb
add
xchg
fst
adc
sub
sti
xchg
lds
aaa
out
cmp
jb
pop
and
push
out
mov
xchg
iret
inc
nop
lahf
or
icebp
mov
test
mov
stos
mov
stos
cdq
jg
cmp
mov
jo
mov
dec
dec
js
mov
mov
fisttp
jns
pop
(bad)
loope
pop
mov
pop
jmp
test
mov
mov
test
sbb
icebp
nop
imul
add
sub
(bad)
loopne
imul
lea
cmp
xor
mov
addr16
or
pop
in
jle
sbb
push
pop
inc
jge
sbb
scas
adc
dec
ja
inc
jo
cmp
ins
pop
div
jle
pop
and
sub
into
mov
cmc
call
xor
mov
fbld
sbb
mov
sbb
cdq
dec
inc
test
jne
mov
adc
jg
mov
imul
outs
sub
fist
in
sbb
inc
bound
hlt
icebp
add
jge
fimul
xlat
push
rol
jne
add
rol
retf
mov
cwde
(bad)
jp
xor
xchg
add
mov
jmp
out
mov
lea
and
jl
fiadd
ss
pop
imul
out
std
and
int
xor
aas
lock
es
and
mov
test
in
jecxz
test
mov
add
mov
inc
and
xchg
outs
shl
fcomip
adc
or
cwde
sahf
aad
std
xor
xor
cmp
into
fsubp
fsub
add
xchg
fwait
mov
xor
pop
out
cmp
(bad)
xchg
in
lods
(bad)
jb
and
sbb
adc
popa
dec
cmp
dec
sub
jp
jb
out
rol
(bad)
jg
movs
je
jg
mov
jne
pushf
pushf
pop
out
xchg
into
mov
call
cli
jg
adc
mov
cmc
in
call
and
(bad)
aaa
arpl
add
fcmovnbe
int3
mov
jb
call
push
out
sahf
cmp
repnz
popa
xchg
nop
sbb
neg
rcl
and
sbb
adc
sub
daa
clc
fsub
adc
lahf
pop
or
cmp
sbb
cmps
push
inc
stc
sbb
or
lahf
add
or
adc
mov
shr
pop
jg
mov
and
sbb
shr
scas
cmp
xchg
xchg
jle
mov
cld
(bad)
mov
enter
(bad)
push
or
inc
dec
in
call
das
inc
or
dec
xchg
xchg
adc
in
cmp
(bad)
sub
gs
pop
(bad)
push
cmp
cmp
cmc
stos
in
cld
push
jns
add
mov
sub
add
jmp
mov
xchg
or
pushf
(bad)
mov
pop
outs
jp
mov
imul
cs
cmp
daa
push
cmp
xchg
aad
outs
xor
fcomi
ret
xor
xchg
call
cmps
lods
push
fneni(8087
dec
mov
jo
nop
dec
daa
(bad)
mov
shl
test
retf
sub
sub
data16
out
test
call
mov
xlat
dec
mov
aas
mov
push
sbb
cs
push
sti
push
xlat
mov
int
ins
daa
mov
adc
sub
retf
fdivrp
jae
mov
and
lds
rcr
xchg
out
xchg
mov
pop
adc
out
mov
mov
fs
mov
sbb
cli
imul
or
cmps
in
pop
pop
test
int3
mov
rol
pop
movs
movs
cmc
das
inc
push
int3
mov
call
xor
rol
mov
xor
(bad)
ss
mov
xchg
push
jnp
daa
mov
add
pop
mov
mov
inc
stos
cmp
(bad)
jnp
sub
xchg
pushf
xor
cmp
imul
sar
jle
enter
nop
jp
pop
jecxz
xor
sub
(bad)
int
sbb
dec
mov
neg
lods
xchg
adc
push
shr
ss
imul
inc
jae
repnz
adc
fcmovnbe
jmp
scas
std
xor
xchg
push
imul
test
jmp
movs
inc
idiv
test
bound
mov
leave
mov
stos
jne
mov
test
movs
jae
pop
jge
xlat
xchg
(bad)
xchg
mov
add
push
pop
xor
imul
popa
sbb
adc
push
(bad)
iret
and
pop
bound
ret
jo
daa
pop
aad
popa
ss
mov
leave
mov
(bad)
out
(bad)
lods
xchg
test
fcomp
mov
sti
and
dec
int3
and
push
cwde
sbb
jl
mov
out
cmp
scas
retf
sub
push
or
pop
xchg
fwait
add
movs
lahf
jecxz
sti
in
(bad)
dec
push
cmp
js
xor
dec
push
push
push
sbb
les
pushf
pop
nop
fldenv
pop
pop
cmp
cwde
adc
mov
cmp
push
loop
mov
fwait
add
cmp
lods
inc
lods
pop
add
jae
sti
mov
es
cmp
mov
jecxz
inc
sub
hlt
out
hlt
cmc
cdq
adc
scas
lock
xor
xor
xchg
loop
mov
gs
mov
mov
int3
sbb
retf
jp
int3
je
jmp
xor
outs
popf
adc
call
aaa
xchg
jmp
push
add
arpl
retf
les
sub
jb
mov
or
add
scas
jae
mov
out
lods
popf
and
push
sub
and
mov
push
mov
jne
scas
test
push
lods
pushf
inc
mov
int3
data16
int3
repnz
dec
sar
pop
out
stos
fimul
(bad)
mov
aad
xor
je
arpl
jecxz
xchg
mov
pusha
pusha
push
adc
aas
jmp
es
mov
int
(bad)
and
(bad)
push
loopne
daa
xchg
add
xor
adc
jne
fld
lea
jmp
xchg
inc
cmps
or
sub
gs
setno
sbb
dec
cmc
push
cld
jg
inc
mov
cmps
sar
push
das
push
mov
lock
popa
pop
data16
and
pop
dec
sub
out
pop
jecxz
inc
fisttp
cmps
in
mov
push
jl
jnp
shl
loope
lods
mov
adc
fisttp
fwait
bound
fisttp
out
rol
xor
jle
out
cmp
gs
ja
and
mov
add
mov
jmp
scas
and
lods
pop
dec
add
push
cs
xchg
dec
dec
pop
add
int
mov
shl
push
ins
sbb
ds
jae
dec
lock
add
pushf
push
sub
int3
ins
mov
inc
cwde
ss
sbb
jne
mov
or
add
push
sub
enter
adc
jg
das
jl
push
mov
inc
dec
test
ss
inc
(bad)
or
(bad)
cmp
out
std
int
sub
aad
out
or
neg
and
lea
add
(bad)
fnsave
adc
in
test
data16
outs
fwait
lods
outs
mov
push
pop
mov
dec
pop
shl
fwait
in
sar
mov
enter
add
cmp
mov
lahf
xchg
jnp
cmp
mov
and
jmp
mov
shl
pop
or
clc
rcl
cmp
outs
sbb
pop
mov
dec
dec
mov
xor
mov
shl
cmps
xchg
add
aas
repnz
pop
fld
in
outs
out
cdq
mov
stos
das
fist
xchg
lods
outs
pusha
sub
iret
sub
out
jmp
icebp
xchg
call
cs
jl
sbb
mov
test
xor
pusha
cmp
add
nop
ss
mov
(bad)
sbb
mov
add
pusha
jno
push
jp
jno
je
and
push
jge
sar
aaa
fidivr
in
pop
inc
mov
xor
and
mov
mov
xchg
cld
sbb
popa
xchg
hlt
sub
adc
xor
add
cmp
pusha
call
xchg
clc
cmp
std
mov
add
ss
jae
and
pop
inc
xor
mov
add
sbb
pop
add
lea
call
loope
adc
data16
fs
adc
add
nop
jecxz
inc
jno
outs
xor
aam
cmps
test
aas
adc
mov
mov
and
push
push
jp
loopne
clc
dec
retf
popa
adc
fwait
adc
pinsrw
fidivr
and
jae
gs
push
iret
cdq
add
xchg
sti
aas
cmp
fs
iret
aam
ficomp
test
dec
mov
and
(bad)
js
sbb
mov
jmp
outs
jp
aaa
inc
jnp
mov
call
sbb
xchg
movs
fadd
loopne
pop
arpl
mov
mov
jg
out
outs
cli
push
cmc
adc
out
and
cwde
jnp
jmp
ds
dec
cmp
adc
inc
jl
sahf
jl
pop
cmc
add
loopne
and
(bad)
xchg
sub
stc
data16
mov
test
outs
cmp
dec
pop
fisttp
mov
jmp
loop
inc
and
mov
mov
stos
inc
inc
xor
xchg
inc
sbb
dec
(bad)
in
les
cli
add
div
es
inc
pop
jg
es
push
push
ss
jns
mov
adc
mov
add
inc
(bad)
fisub
fiadd
mov
sub
cmp
loopne
retf
mov
into
xchg
add
pop
adc
test
lods
movs
mov
dec
ja
mov
pop
rcl
mov
mov
ins
imul
(bad)
xchg
fisttp
out
mov
mov
or
xor
and
sbb
xor
mov
and
or
jge
outs
cmc
dec
cmps
push
sahf
jp
adc
adc
(bad)
mov
mov
ins
ficomp
xor
popf
shr
test
pop
pop
ret
imul
sub
push
imul
movs
fdecstp
mov
cmp
dec
into
loope
or
xor
out
xchg
push
cmp
out
sar
or
stos
cmp
inc
iret
fwait
dec
fidiv
and
mov
into
pop
xchg
pop
fimul
leave
push
cmps
sbb
loope
pop
inc
loop
mov
faddp
push
test
repz
jno
xchg
sub
and
add
push
push
sub
adc
push
fbstp
ja
adc
sub
aam
mov
mov
stos
sub
adc
call
outs
int3
imul
lea
cli
cmp
jnp
pusha
sub
and
jns
out
lahf
cld
ss
push
sbb
push
aas
or
mov
or
mov
sbb
xor
popa
adc
dec
retf
outs
push
lods
(bad)
iret
scas
pop
test
pusha
pop
dec
imul
cwde
or
pop
sbb
inc
sub
add
ret
test
jge
addr16
xor
hlt
test
mov
mov
loope
lds
lods
sbb
push
mov
adc
fmul
jmp
fild
out
fist
add
xchg
push
pop
imul
mov
ret
mov
push
test
loopne
jns
int3
push
add
push
xchg
sub
sbb
(bad)
xor
loop
in
call
adc
call
add
std
mov
push
adc
nop
or
daa
add
adc
cmps
sub
mov
mov
les
jno
retf
imul
popf
sub
clc
icebp
pop
mov
js
adc
sbb
or
test
sahf
addr16
sub
outs
add
nop
and
sub
push
jp
cmp
push
arpl
cmp
push
mov
arpl
add
stos
sub
jg
adc
pop
dec
leave
adc
into
into
mov
xchg
fcomp
cwde
dec
(bad)
sbb
xchg
xchg
lods
(bad)
add
sbb
or
xchg
jecxz
movs
mov
shl
adc
loop
loope
push
call
pop
cmp
jmp
mov
jno
mov
idiv
pop
std
pop
add
sub
das
xchg
mov
xlat
dec
dec
pop
out
sub
int
jmp
imul
push
(bad)
push
mov
dec
add
nop
adc
mov
out
mov
nop
xor
push
(bad)
jnp
push
sbb
stc
inc
adc
pop
mov
fld
fisub
jo
movs
(bad)
hlt
inc
jg
fwait
push
mov
fdiv
shrd
cmps
pop
into
iret
and
(bad)
cs
add
or
(bad)
into
hlt
mov
aam
idiv
rcl
lahf
(bad)
mov
lods
xchg
out
mov
jmp
pop
mov
imul
push
jno
jbe
addr16
popa
or
pusha
dec
xor
jmp
in
lock
push
xchg
add
xchg
mov
inc
adc
mov
adc
cs
pop
jl
fist
nop
les
adc
jmp
aad
fwait
dec
mov
stc
inc
clc
imul
inc
ja
xchg
rcr
and
push
inc
sub
xchg
inc
lock
mov
pop
aas
pop
and
jp
and
out
mov
repz
mov
or
loopne
fbld
inc
push
into
xor
or
retf
inc
outs
push
mov
shl
xchg
cmp
sub
pop
jbe
in
aad
leave
push
dec
test
inc
(bad)
std
add
xchg
retf
xor
and
mov
(bad)
jno
mov
aad
add
hlt
lock
cwde
fisubr
loope
mov
add
mov
call
xor
scas
mov
shr
inc
cs
xor
sbb
lds
mov
mov
jl
inc
icebp
adc
aaa
loope
cs
mov
pop
or
mov
jge
jae
dec
pop
jl
add
ss
adc
and
test
or
inc
dec
fidiv
fdiv
inc
push
push
sub
xchg
xchg
movs
or
jno
sub
fcom
pop
repz
xor
pop
jo
std
jb
test
xor
pop
xchg
mov
in
mov
hlt
sub
mov
or
inc
inc
leave
jecxz
inc
cmp
cmp
cdq
mov
jbe
jb
mov
out
mov
pop
cmp
pop
cmc
cld
push
rol
lahf
loope
push
dec
pop
cwde
xor
int
pop
jg
je
in
cli
stos
mov
fadd
ins
mov
and
and
sbb
ss
sub
outs
movs
or
rol
test
cmc
inc
jg
mov
mov
movs
aas
push
(bad)
and
pop
inc
sub
jp
jecxz
retf
fld
pop
int
add
test
adc
lahf
lea
pop
call
or
cmps
loop
mov
call
pop
xor
out
add
xor
fldcw
and
and
fnstenv
jmp
call
sbb
sub
jae
iret
sub
cmps
in
(bad)
jl
(bad)
and
mov
sub
push
xor
test
and
mov
mov
es
push
scas
lds
dec
mov
push
dec
es
sar
adc
push
inc
cld
push
push
or
popa
or
inc
dec
(bad)
or
fdivr
pop
lea
inc
cdq
pop
mov
js
mov
hlt
sbb
inc
js
inc
dec
int
stos
sti
test
jno
add
or
out
adc
xchg
xor
aad
rol
adc
xor
adc
push
mov
icebp
fidiv
jb
daa
loopne
call
or
jno
push
mov
jno
retf
cmps
cmp
jge
xchg
stc
(bad)
inc
popa
dec
xchg
int3
mov
mov
(bad)
adc
pop
arpl
shl
sub
adc
int
clc
and
sub
ret
jmp
and
cmp
sub
or
ins
fiadd
mov
mov
xchg
mov
dec
fistp
jne
jmp
repz
jnp
mov
gs
(bad)
repnz
cmp
arpl
repz
inc
shr
add
cmp
mov
adc
(bad)
xchg
mov
rcr
mov
nop
jl
popf
xchg
add
xor
fld
adc
xchg
mov
dec
ret
pop
leave
rcl
out
outs
inc
test
dec
adc
push
push
push
ins
jae
mov
sbb
xchg
(bad)
mov
jne
nop
and
int3
xor
ss
sub
test
sti
and
clc
mov
jp
xchg
loope
loopne
or
and
arpl
cdq
ds
adc
cmp
sbb
sbb
xor
mov
test
sbb
hlt
sbb
cmp
and
ins
or
out
les
out
mov
mov
jno
or
popa
loope
mov
pusha
arpl
rol
sbb
retf
icebp
push
in
int3
or
mov
nop
dec
cdq
mov
mov
loope
cmps
cs
push
xor
sub
loope
inc
pop
mov
and
pushf
adc
mov
pop
(bad)
add
xor
ja
pop
inc
sahf
ds
scas
(bad)
inc
in
stc
push
cmps
jecxz
pop
jp
rol
sub
mov
stc
xor
adc
movs
xchg
loop
sbb
loop
cmc
xor
aam
inc
enter
jmp
mov
jge
mov
sbb
pop
mov
mov
aam
ror
mov
pop
mov
clc
fwait
aad
bnd
scas
int3
repz
fdivp
and
xor
sbb
fist
call
sub
pop
fidivr
out
shl
lock
jb
cmps
fnstcw
add
jno
mov
sub
dec
sbb
inc
jmp
push
out
(bad)
in
movs
jbe
(bad)
data16
push
pop
aad
(bad)
outs
or
and
mov
lock
fisttp
bound
lahf
jno
add
test
vshufps
pop
jns
mov
lods
sar
jne
inc
ja
push
and
nop
fadd
fst
and
dec
jmp
push
outs
jae
sbb
push
lds
jns
fistp
jae
ins
and
sub
xchg
sbb
pop
cs
or
js
mov
cmp
push
sbb
(bad)
stc
rol
or
push
sub
lds
cmps
cld
sti
pop
push
and
mov
inc
iret
ins
adc
(bad)
cmp
inc
in
pop
retf
enter
and
outs
(bad)
mov
test
data16
imul
jge
or
test
(bad)
gs
enter
mov
cmp
jg
add
int
ret
(bad)
mov
mov
pop
pop
add
mov
and
add
inc
sar
jb
aaa
jb
lahf
mov
imul
adc
popa
push
jle
aaa
and
sti
out
adc
(bad)
outs
xlat
cwde
retf
pushf
sub
std
jl
jnp
rol
mov
js
mov
sahf
mov
push
push
cmc
(bad)
pop
test
fcomp
mov
(bad)
xchg
popf
ins
mov
outs
xchg
pop
scas
sbb
pusha
dec
leave
clc
fcomip
ds
xchg
(bad)
fsub
sbb
lahf
(bad)
in
xchg
xor
mov
mov
or
push
dec
sahf
imul
add
mov
into
inc
inc
dec
pop
rcr
push
jp
cwde
and
movs
ret
adc
inc
mov
sub
mov
or
or
push
mov
add
inc
or
outs
(bad)
lods
leave
add
pop
inc
int3
lock
inc
adc
aaa
inc
in
pop
mov
xlat
add
push
ret
ins
or
mov
push
mov
push
stos
(bad)
jmp
and
call
xchg
add
sahf
faddp
inc
hlt
stos
mov
out
pop
in
imul
les
xchg
push
frstor
add
mov
(bad)
movs
scas
std
outs
icebp
jecxz
pop
div
xchg
fld
pop
jne
adc
push
push
je
repnz
sar
iret
push
popa
jae
dec
xchg
hlt
int3
dec
fucom
xchg
pop
mov
rcl
gs
ds
mov
cli
(bad)
int3
or
into
stos
dec
(bad)
jp
in
popa
mov
retf
in
or
dec
cmp
mov
dec
mov
mov
test
xchg
sbb
and
retf
test
ret
sahf
mov
adc
aam
int3
(bad)
mov
cmp
dec
stos
fs
or
or
mov
jnp
retf
inc
xchg
or
test
jmp
mov
repnz
cmp
ins
adc
repnz
and
cmps
aad
mul
mov
xchg
pop
clc
add
mov
cld
mov
pop
mov
sub
dec
xchg
fstp
dec
dec
fist
cmp
xchg
aad
mov
mov
add
adc
rol
rcl
in
hlt
mov
les
xchg
xor
adc
mov
rcpps
imul
adc
add
mov
dec
ret
cmp
imul
or
data16
jnp
ficom
jp
iret
fsubr
sbb
cmp
jg
aas
nop
lds
add
and
rcr
fnstenv
jne
mov
(bad)
mov
pop
scas
movs
mov
sub
test
jecxz
cmp
sbb
or
out
add
pop
lods
imul
push
jne
rol
sbb
das
jmp
movs
int3
les
fs
out
das
in
cmps
adc
xor
mov
cwde
lods
cmc
test
gs
out
adc
cmp
pop
push
int3
push
xchg
mov
lea
repz
push
mov
es
ret
std
call
int3
push
push
popf
loope
into
push
sti
lock
jecxz
stos
push
retf
movs
push
cs
icebp
mov
and
fstp
xor
adc
or
add
ret
ret
hlt
xchg
pop
aam
xchg
pushf
into
mov
in
jp
inc
xor
cmp
ja
adc
push
pop
xchg
pop
mov
outs
jmp
scas
hlt
fucomp
cmps
fwait
mov
shl
xor
mov
aad
xchg
sub
mov
ins
mov
sub
mov
retf
push
inc
pop
xor
add
inc
push
fisub
mov
loope
jp
stos
push
popa
xlat
addr16
add
mov
push
(bad)
xchg
aam
popa
ins
fnstenv
cmps
push
dec
bound
mov
mov
sti
pop
mov
pop
adc
jmp
lods
(bad)
xchg
adc
div
rol
mov
ja
xor
xchg
xor
push
inc
lds
retf
push
sti
mov
inc
jp
in
cld
(bad)
mov
and
or
pusha
dec
fwait
jmp
cmps
stc
jecxz
cmc
call
cmps
popf
cs
or
jge
imul
lahf
lock
ror
imul
fs
push
js
lea
mov
test
je
aam
push
inc
ja
and
fidiv
jb
sbb
jmp
popf
dec
pop
ds
daa
das
xor
ds
adc
call
(bad)
das
ss
push
pop
inc
addr16
shl
push
div
inc
pop
mov
cmp
out
fs
inc
cmp
or
retf
popa
adc
xor
aas
xlat
and
in
gs
push
mov
sbb
push
(bad)
mov
rol
pop
outs
xchg
cdq
js
sahf
daa
jmp
mov
add
inc
out
mov
or
imul
or
dec
inc
mov
pop
push
loope
int
push
mov
loope
jno
(bad)
fmul
mov
inc
add
cli
jb
scas
pop
cdq
mov
mov
push
pusha
mov
push
scas
pop
retf
and
sub
bound
cwde
push
dec
int
add
popf
gs
sar
fsub
jb
push
popa
xchg
adc
xchg
add
ret
or
ret
cmps
xchg
(bad)
cmps
mov
in
lods
sub
leave
ins
mov
test
and
jae
inc
inc
cmp
jp
push
push
mov
(bad)
imul
cwde
fadd
dec
mov
ins
scas
adc
arpl
lock
cmc
sub
xor
push
adc
cmc
jae
sahf
inc
sar
jl
fwait
and
push
push
sbb
cmp
popa
push
push
shl
scas
loope
sahf
fwait
mov
in
adc
repnz
pop
jns
or
mov
pop
call
xchg
imul
or
mov
jle
pop
fiadd
ins
nop
jmp
loop
add
and
cld
and
mov
das
pop
sbb
dec
pop
pop
mov
pop
push
in
and
inc
mov
push
jmp
xchg
or
je
fs
jle
jnp
sbb
dec
jp
and
sti
jmp
sti
ins
mov
icebp
test
xor
cmp
(bad)
scas
sub
int3
jmp
in
xchg
and
or
inc
jl
mov
inc
sbb
add
fldenv
sar
not
mov
mov
bound
ss
(bad)
out
out
xchg
xchg
out
inc
clts
push
sub
(bad)
push
add
sbb
lock
inc
dec
mov
jecxz
push
test
pushf
add
mov
mov
sub
inc
push
xchg
(bad)
arpl
push
jne
and
loope
adc
adc
pop
jp
sti
ret
xchg
js
pop
lods
test
ds
mov
mov
jae
cld
dec
jp
mov
(bad)
add
mov
xchg
push
mov
xchg
push
adc
xchg
test
scas
stc
mov
xchg
mov
mov
cli
mov
pushf
push
fwait
mov
or
(bad)
pop
cmp
fldcw
xchg
inc
adc
fcomp
or
pop
jg
inc
jne
adc
rcr
dec
std
xchg
xchg
js
jp
jmp
loop
scas
out
popa
gs
fwait
out
int
lods
fwait
es
cmp
push
adc
repnz
mov
pop
mov
jmp
pop
cmps
push
adc
push
push
mov
mov
mov
xchg
pushf
adc
pop
cs
mov
fdiv
inc
xor
stos
mov
mov
push
jns
cld
inc
dec
rcl
push
out
popa
fcomp
repz
push
fmul
dec
add
cmp
and
adc
retf
bound
(bad)
icebp
inc
fwait
sbb
push
jl
add
sub
ror
call
test
pop
(bad)
dec
iret
xor
push
cmp
mov
mov
cmp
jle
pop
jmp
aad
and
test
mov
lock
int3
mov
xor
ins
push
movs
aaa
stc
inc
hlt
cmp
rcr
cmc
mov
stos
and
(bad)
mov
sahf
test
cmps
sub
mov
mov
shl
shr
mov
add
xchg
mov
lock
add
das
lock
push
dec
adc
mov
add
mov
imul
and
jae
aas
mov
add
and
mov
xor
mov
jecxz
cmp
data16
jbe
push
out
xor
push
push
cmp
pop
out
cmp
jns
in
mov
jle
outs
add
push
ja
scas
dec
dec
jg
sub
pop
loope
mov
xor
xchg
mov
sub
outs
imul
sub
adc
pop
out
fwait
push
add
inc
data16
xchg
mov
sar
stc
or
add
test
mov
fstp
ins
add
xchg
movs
adc
out
jbe
int
pop
mov
sbb
(bad)
fdivp
ins
or
fsub
inc
lods
lods
inc
jmp
hlt
or
mov
xor
push
retf
xor
jb
call
mov
jb
fcomi
outs
inc
in
ds
add
cmc
cmp
mov
inc
jl
rcl
xchg
fistp
xchg
pop
int
test
fsub
(bad)
push
jecxz
push
ins
test
loope
adc
mov
lods
call
pop
or
xlat
mov
inc
jle
imul
dec
push
cli
sub
adc
sbb
clc
mov
shl
adc
outs
xlat
popa
sbb
mov
mov
jo
inc
in
mov
inc
std
aad
push
ins
std
xchg
mov
xor
inc
or
sub
ds
lock
mov
retf
clc
xor
mov
xchg
sbb
outs
mov
jno
mov
aam
int3
mov
sbb
cs
cmp
add
jbe
cld
mov
inc
or
fcomp
pop
aad
outs
mov
mov
adc
cmp
push
es
sbb
stos
ficomp
loope
repz
and
jl
aad
or
adc
movs
out
scas
mov
dec
sub
shl
cld
ja
ja
nop
jle
mov
in
mov
mov
test
cli
mov
popw
mov
fmul
and
add
push
jo
add
nop
xchg
pop
xchg
daa
inc
mov
out
out
sub
and
jg
test
pop
mov
(bad)
xchg
ret
inc
add
aas
xchg
pop
dec
movs
data16
jnp
pop
inc
inc
popf
inc
push
cmc
sbb
inc
mov
in
mov
xor
retf
and
xchg
mov
cmp
or
inc
and
stos
icebp
mov
or
inc
mov
mov
mov
inc
addr16
jno
add
ds
into
sbb
cli
mov
pop
out
inc
ss
pop
adc
(bad)
into
jne
call
add
mov
test
fs
gs
scas
sbb
js
inc
les
mov
leave
cmps
iret
loopne
ret
sbb
add
pop
enter
mov
test
or
int
(bad)
cmps
or
mov
xor
mov
(bad)
cmp
adc
ds
add
fisubr
jb
sti
pop
and
fidivr
(bad)
jl
js
gs
jmp
mov
or
cli
push
je
adc
inc
push
cli
aam
jmp
inc
push
cmps
push
(bad)
les
and
and
mov
ins
adc
pop
icebp
std
rcl
nop
and
test
mov
xor
cmp
in
out
daa
pop
dec
jno
sti
or
fsub
mov
add
ins
mov
adc
stc
or
lds
mov
test
ss
out
(bad)
mov
add
dec
ja
pop
push
ror
mov
movs
xor
mov
mov
aaa
in
mov
outs
lahf
rol
sahf
out
push
pop
hlt
(bad)
popf
ds
mov
cli
pop
cmc
call
or
std
or
ror
test
sub
lea
hlt
dec
xor
ja
cmp
cld
xor
into
aad
cmp
popa
mov
lock
jmp
lea
hlt
aaa
sub
mov
cld
mov
sbb
jmp
or
mov
(bad)
les
xchg
jnp
mov
cdq
dec
cmps
pop
add
xchg
sub
sahf
or
pop
and
jmp
and
stos
movs
mov
data16
cmps
mov
dec
(bad)
and
mov
icebp
jb
or
leave
pusha
ins
xor
cld
xor
inc
loop
sidtd
adc
sub
push
xlat
xchg
es
fld
push
mov
mov
mov
cdq
adc
aad
cmps
and
les
push
pop
cmp
mov
xchg
daa
pushf
shl
cmps
cmp
mov
mov
cmovno
inc
sbb
jo
mov
add
pop
sar
push
mov
xchg
sbb
mov
jne
xchg
ds
cld
mov
or
xor
cdq
retf
retf
add
not
cld
fadd
sub
inc
xor
sbb
inc
je
push
lahf
data16
pop
movs
push
and
(bad)
push
xchg
jns
nop
dec
addr16
call
dec
fnsave
les
in
adc
inc
xor
mov
mov
outs
xor
and
fnstsw
int
xchg
neg
lods
push
jge
add
retf
sbb
shl
test
in
(bad)
arpl
xchg
pop
ret
push
ins
adc
xlat
jg
cmp
pop
imul
addr16
shl
cdq
dec
in
jo
add
popa
pop
out
out
push
inc
pushf
addr16
fild
(bad)
jb
add
pop
add
shr
sbb
jbe
sbb
je
and
jmp
inc
scas
mov
enter
lods
shl
dec
dec
lahf
in
cld
xchg
xor
dec
jg
das
iret
xchg
sub
mov
loopne
xor
rcr
xchg
sbb
cwde
fdivr
stc
in
push
cwde
xchg
mov
dec
push
cmc
pop
les
sbb
lods
cmps
pop
cwde
push
and
push
jge
mov
and
add
jno
mov
jae
push
and
(bad)
icebp
mov
int3
xchg
mov
loopne
jg
movs
mov
(bad)
es
repz
pushf
(bad)
rcr
lds
out
test
or
or
xor
inc
or
mov
popf
sbb
imul
leave
inc
lock
inc
clc
imul
xchg
pop
(bad)
fcom
inc
mov
loope
repz
dec
xchg
fwait
sub
lahf
arpl
pushf
repz
sbb
mov
dec
ss
jne
sub
out
sub
outs
push
xor
cli
sub
adc
fwait
jb
cld
jg
cmp
mov
ret
inc
adc
icebp
xor
jmp
or
push
inc
cmc
jno
push
sbb
lock
push
dec
ds
xchg
loopne
adc
je
xor
ins
adc
dec
mov
pusha
mul
cmp
mov
fsubr
cmp
daa
mov
repnz
enter
xchg
pushf
mov
push
pop
(bad)
jle
mov
dec
dec
dec
mov
fdiv
and
mov
pop
clc
ja
adc
nop
pushf
fadd
(bad)
cmps
push
cmp
std
push
mov
ins
mov
sub
lahf
mov
xor
hlt
(bad)
pushf
add
adc
lods
inc
ret
jnp
ins
lea
in
jmp
or
lods
mov
cld
inc
popa
inc
add
or
hlt
jecxz
movs
jns
stos
jg
pop
call
test
fwait
mov
sbb
mov
add
ja
jmp
xor
sar
aam
mov
sbb
sti
rcl
ja
or
or
cmps
sti
xchg
popa
movs
push
mov
stc
data16
or
or
mov
fwait
cdq
iret
cmc
add
lea
test
pop
ret
pop
pop
nop
xor
jmp
jbe
pop
add
ror
pushf
and
aaa
push
aad
mov
aad
out
icebp
pop
aam
mov
pop
retf
sub
test
add
movs
jno
add
idiv
js
pop
jae
ins
cmc
popf
mov
mov
xchg
mov
xchg
and
sahf
push
fadd
cmp
leave
aaa
popa
shr
push
lea
xor
add
jecxz
mov
or
xchg
sub
xchg
mov
(bad)
ins
and
jmp
fsubr
lea
adc
xchg
inc
push
adc
bound
xchg
lock
(bad)
loope
cmp
dec
inc
lds
sti
sar
dec
popf
outs
rol
loopne
adc
clc
mov
push
mov
jge
push
data16
jno
dec
mov
sar
js
enter
mov
mov
aam
or
pushf
into
addr16
fadd
and
sub
jge
xor
lock
call
mov
push
add
repnz
jae
mov
ror
ja
call
mov
add
jp
scas
xchg
fisub
dec
or
push
mov
sbb
adc
add
mov
jge
sbb
fisub
loopne
gs
iret
inc
push
(bad)
mov
data16
sub
push
jno
cdq
mov
push
sti
sub
cdq
inc
push
sbb
lock
nop
cld
adc
mov
cmps
ja
sbb
(bad)
dec
data16
jns
or
pop
lahf
stos
jns
mov
fs
cmp
ins
ror
push
xchg
push
push
inc
jmp
sbb
rcr
add
cmps
ins
lahf
sbb
pop
add
nop
push
cmp
sbb
pop
idiv
mov
stc
pop
cmps
neg
mov
mov
call
or
or
jecxz
pop
test
enter
jne
mov
mov
out
sbb
dec
sbb
cmps
ror
es
ss
sub
mov
cmp
pop
xchg
jae
jns
js
ins
jo
pusha
pop
stos
rcl
sub
mov
xchg
push
push
cmc
xchg
mov
shl
push
(bad)
push
rcr
cmps
push
pop
adc
jb
mov
mov
scas
out
sub
iret
cmp
add
aas
push
movs
mov
mov
stos
pop
push
adc
adc
fild
push
fmul
add
aad
pusha
clc
or
in
mov
lahf
or
cmp
mov
mov
cmc
and
arpl
add
fucomp
pop
mov
mov
adc
adc
ret
push
mov
mov
ss
arpl
adc
pop
adc
pop
inc
out
xor
cs
push
cmp
mov
fs
les
sub
das
sub
movlhps
jb
push
dec
add
pushf
shl
ins
push
xor
popf
jp
imul
outs
in
cmp
inc
lock
enter
add
je
and
pop
cmps
jge
sub
mov
jo
sub
and
stos
cdq
push
and
ss
lea
imul
sbb
jbe
fadd
rol
neg
sub
rcr
jbe
xor
popf
in
xor
pop
cld
dec
lods
retf
cmp
ret
pop
dec
ss
sub
enter
cmc
sahf
es
movs
fwait
pop
les
lock
ja
mov
test
sub
call
adc
not
jl
dec
push
(bad)
pop
dec
xchg
and
call
jns
retf
or
add
cmc
xor
push
stos
icebp
cmps
sub
xor
data16
lds
sbb
cmc
mov
out
mov
ror
es
das
nop
jl
enter
pop
in
xchg
retf
icebp
ror
retf
and
jmp
cmc
shl
lea
ins
push
push
sysenter
dec
xor
xchg
sbb
fisttp
jmp
rol
test
mov
xchg
or
jb
test
shl
fdivr
inc
imul
mov
aas
xchg
mov
outs
inc
cmp
mov
cmp
push
xor
or
mov
and
and
mov
mov
xor
(bad)
jl
dec
push
ins
loope
mov
lock
fsub
xchg
daa
out
adc
dec
and
jne
test
adc
lea
mov
xor
mul
repz
lds
push
push
test
add
mov
xor
xchg
xor
(bad)
jnp
mov
push
(bad)
(bad)
out
cmp
jp
jmp
add
push
std
mov
(bad)
(bad)
dec
cmc
mov
push
jo
(bad)
into
or
xchg
push
mov
sbb
push
nop
and
pop
jb
adc
cli
pushf
dec
mul
jmp
pusha
loope
xchg
adc
out
mov
jbe
call
(bad)
shl
sub
in
xor
in
xlat
outs
retf
mov
inc
bound
cli
mov
fcmovb
mov
cmp
add
cmc
push
sbb
add
ret
mov
(bad)
pop
inc
mov
jns
inc
jo
movs
out
fdivr
push
in
jle
data16
push
retf
icebp
mov
or
xor
add
sub
(bad)
call
push
or
rcr
inc
popf
mov
xor
lds
xchg
imul
ds
ins
pop
aam
retf
ret
int3
iret
shl
cmp
mov
retf
stos
into
inc
or
xchg
mov
jbe
push
(bad)
cmp
stc
mov
sbb
mov
push
outs
(bad)
aaa
test
mov
out
fs
mov
(bad)
cs
xchg
fcmovnb
in
inc
push
not
les
mov
xor
jmp
mov
pop
and
cmp
push
scas
jns
sbb
rcr
inc
inc
loope
inc
pop
jne
mov
push
movntq
mov
mov
sub
aas
ins
out
xor
pop
xchg
scas
(bad)
sub
add
push
jge
push
fcom
in
in
jo
lea
jp
mov
stc
mov
bound
push
cli
es
xchg
(bad)
es
cdq
jg
nop
stc
or
jl
sub
lds
(bad)
ror
call
adc
and
dec
and
push
loopne
dec
stos
cmps
pop
std
xchg
xchg
mov
stc
retf
or
pop
out
dec
in
fistp
cmps
push
daa
and
cmp
inc
xchg
int3
xlat
mov
das
mov
lods
movs
cmp
jns
mov
data16
dec
add
fmul
dec
dec
std
retf
jmp
pop
clc
xchg
fst
in
ins
xchg
fisttp
inc
xchg
jmp
xchg
fisttp
cmc
mov
push
jne
xor
mov
adc
cmps
and
xor
ror
dec
sub
adc
pop
aaa
movs
leave
mov
fnstsw
push
stos
push
cmc
dec
push
mov
or
or
jecxz
lods
sahf
out
pop
sbb
out
mov
pop
(bad)
out
aad
lahf
push
push
xor
out
push
inc
lock
dec
mov
loope
mov
hlt
inc
cli
mov
les
mov
sti
repnz
jmp
push
fisttp
mov
push
sub
ret
out
(bad)
adc
cmp
cmps
cdq
test
stc
repz
dec
mov
add
sub
test
imul
in
movs
out
jg
push
ins
pop
jns
and
fisub
mov
test
in
sbb
shl
repnz
mov
or
repz
dec
mov
xchg
lods
stos
out
jne
ja
cmp
call
push
inc
rol
jp
mov
push
and
pusha
cs
cld
lds
cwde
popf
int
sahf
pop
in
mov
fdiv
adc
jnp
inc
jbe
(bad)
fst
test
jmp
out
pop
jl
daa
inc
inc
test
jecxz
or
adc
dec
and
mov
adc
enter
dec
dec
sub
hlt
(bad)
xchg
inc
not
jno
test
outs
mov
mov
push
sahf
adc
cs
push
idiv
(bad)
xchg
vmread
cmp
punpcklwd
sub
xor
xor
pop
inc
mov
in
and
sar
xchg
mov
int
jp
je
sbb
and
jge
adc
ins
pop
mov
int
dec
xor
inc
out
loopne
(bad)
shr
daa
xchg
xor
cmp
mov
jne
adc
jns
(bad)
push
cld
inc
in
dec
bound
mov
cmc
fstp
or
jno
das
adc
jae
jp
loopne
jno
push
into
ss
jp
mov
jge
jl
in
fnstenv
add
jge
jecxz
cmc
cmp
sub
ins
inc
add
mov
push
call
pop
movs
lock
cmps
(bad)
xor
mov
rol
in
int
fdiv
das
mov
push
pop
dec
inc
fs
inc
and
(bad)
aad
rcl
mov
sub
loop
sub
std
and
jmp
jp
push
and
in
jmp
jbe
(bad)
lock
or
call
leave
mov
dec
lock
sub
int
ds
fimul
xor
pop
(bad)
push
sbb
fistp
scas
add
xchg
push
enter
daa
ds
dec
mov
ror
mov
mov
xchg
enter
mov
dec
pop
mov
fmulp
xor
je
les
ss
cdq
(bad)
das
push
xchg
sti
fwait
pop
add
mov
in
int
adc
fisubr
retf
cdq
lock
mov
retf
fnstcw
retf
push
ds
out
push
mov
lods
das
pop
cmp
sahf
in
jp
scas
cmp
and
pop
pusha
je
ds
push
pop
ret
xchg
popf
das
cmps
jae
test
mov
aam
repnz
fisub
leave
mov
xchg
add
sar
push
sbb
push
movs
push
pop
or
(bad)
jp
rol
sbb
jnp
mov
into
fsubp
aad
mov
es
fimul
out
ins
sbb
out
xor
xchg
sub
jae
push
ins
adc
ret
repz
xchg
fbld
enter
dec
dec
not
cmps
push
aad
(bad)
mov
arpl
cmps
cmp
aas
(bad)
or
je
mov
mov
add
out
and
lock
ficomp
pop
sbb
int
mov
cmp
pop
pop
cmp
adc
mov
jle
sub
movs
scas
xlat
imul
rcr
mov
cmps
cmp
js
jb
test
ds
jnp
sbb
daa
cmp
lods
mov
mov
sbb
sub
and
jp
loope
icebp
xor
mov
inc
fs
inc
pushf
add
cmp
retf
push
(bad)
mov
mov
stos
cdq
or
jl
ud0
cld
adc
clc
pop
retf
cmp
dec
pop
and
enter
daa
shr
fisubr
pop
push
dec
inc
pop
dec
and
mov
test
jp
xor
inc
mov
fadd
add
rol
pop
xor
jno
adc
pop
dec
jl
sbb
mov
push
dec
mov
inc
out
outs
sbb
neg
aas
sbb
adc
pop
pop
call
or
js
aaa
aaa
stos
fld
rol
mov
xor
lods
and
stos
out
lods
jns
add
pop
hlt
cmc
in
sbb
adc
test
fbstp
jecxz
out
xchg
jecxz
cmp
lods
(bad)
xchg
test
lock
mov
adc
cmp
cmp
dec
shr
ja
sub
mov
fldenv
jecxz
mov
repnz
push
fstp
dec
xor
gs
aas
fadd
dec
mov
popa
neg
dec
pop
sti
pop
(bad)
out
mov
inc
or
mov
sti
cmp
dec
(bad)
hlt
repnz
cs
cmp
xchg
loope
adc
fs
xor
(bad)
in
dec
jecxz
fadd
movs
mov
adc
push
xor
enter
cmc
add
mov
push
inc
stos
fwait
cmps
jmp
dec
mov
sbb
fsub
xchg
out
xor
out
rcl
fldcw
jmp
mov
lahf
pop
fsub
inc
sbb
xor
imul
and
mov
int
cmp
and
jo
add
jle
ss
xlat
shl
sub
daa
jmp
lahf
fld
in
xchg
xchg
inc
mov
cld
ret
and
fwait
scas
add
inc
arpl
test
test
jbe
sub
enter
xchg
sub
leave
repnz
cli
sbb
add
mov
es
cmp
mov
into
inc
adc
sub
inc
push
mov
xor
pop
int3
stos
sahf
daa
push
cmp
into
adc
mov
xchg
cmp
mov
arpl
inc
add
(bad)
jp
aam
aaa
sub
fs
and
and
jnp
sahf
xor
ins
shl
aaa
fist
icebp
add
iret
aas
clc
mov
pop
in
push
ja
pop
(bad)
or
stos
mov
cmps
cmp
push
inc
or
pop
lods
lea
push
or
ret
mov
pop
ret
cmp
xchg
pop
xchg
mov
ins
xor
inc
ss
cdq
test
sub
icebp
dec
lods
loope
retf
sbb
call
mov
call
fisttp
out
aaa
cmp
test
mov
push
xchg
out
cmps
jns
cli
and
nop
xchg
mov
or
mov
(bad)
mov
in
push
shl
cmc
dec
xor
jmp
sub
call
adc
icebp
push
add
add
or
lds
ja
jb
mov
sub
jle
jle
adc
popa
das
jmp
pushf
jmp
jnp
pop
pop
fld
test
cmps
jmp
sub
imul
js
push
enter
jne
loopne
int
frstor
(bad)
cmc
pushf
mov
retf
sbb
repz
icebp
loop
cmp
mov
call
push
xchg
inc
and
pop
das
sub
add
inc
loope
xchg
out
aad
loope
mov
mov
ss
mov
imul
das
dec
ss
out
ins
pop
arpl
arpl
into
es
push
mov
hlt
pushf
pop
pop
and
xchg
sbb
push
xlat
sbb
leave
or
lods
ins
cli
(bad)
pushf
adc
cmp
jbe
ins
test
dec
loopne
mov
outs
cdq
add
popf
push
(bad)
int3
xlat
loopne
lea
call
addr16
mov
and
rcr
fs
test
push
cmp
outs
movs
xchg
jecxz
fsubr
xor
loop
sbb
mov
mul
addr16
xchg
neg
imul
fs
shl
aam
cs
sbb
adc
sti
dec
mov
leave
bsr
pop
xor
jecxz
push
dec
ins
push
cmp
scas
nop
or
sar
push
push
sub
pop
jle
cmc
and
and
or
xor
jl
cmp
test
xor
sbb
test
add
retf
test
movs
jmp
popa
cmp
bound
lea
xor
jnp
not
icebp
adc
loopne
lods
sub
xchg
mov
pop
fs
add
adc
and
mov
hlt
xlat
xchg
test
mov
push
inc
inc
jbe
in
ins
loope
mov
loopne
sub
inc
mov
repz
loopne
cmp
pop
popf
loope
int
pop
ficom
xor
dec
icebp
mov
in
jecxz
mov
loope
test
ins
adc
jb
xchg
aaa
add
neg
or
xchg
popa
arpl
out
cmp
(bad)
jge
mov
or
outs
mov
or
stos
int
bnd
fiadd
pusha
jle
(bad)
movs
adc
dec
test
out
fstp
leave
bound
push
stc
mov
imul
push
cli
inc
inc
inc
les
mov
in
cs
rcl
test
inc
and
jmp
xor
nop
add
xchg
cmps
(bad)
in
xor
mov
mov
inc
aaa
fdivrp
xchg
lock
aaa
sbb
popa
(bad)
adc
(bad)
add
sbb
mov
out
clc
xor
pop
mov
dec
lods
clc
sbb
pop
sub
inc
repnz
lds
imul
mov
xlat
xchg
add
xor
hlt
pusha
jno
mov
into
dec
arpl
fist
out
push
jne
(bad)
loope
ins
sbb
bound
loope
repnz
ins
lods
idiv
test
ins
dec
sbb
sbb
mov
pusha
pop
in
pop
mov
jmp
cdq
enter
mov
cmc
mov
in
dec
lds
jae
push
jle
xchg
mov
inc
nop
add
stos
int
mov
sbb
cwde
push
xchg
ja
and
sub
mov
movs
pop
jmp
sahf
bound
int3
pop
sti
retw
outs
adc
in
mov
mov
or
push
push
push
mov
loop
xchg
clc
dec
retf
dec
addr16
push
sbb
neg
(bad)
in
pop
stc
cmps
cmp
add
test
push
(bad)
xchg
(bad)
repz
in
mov
cmp
in
cmc
(bad)
shl
cmp
jbe
ss
aad
mov
sahf
ss
outs
pushf
mov
jl
inc
sub
shl
adc
out
out
dec
iret
add
mov
or
push
jbe
adc
xchg
loope
cld
mov
stos
and
xor
jb
jl
mov
sahf
pminub
or
jne
xchg
sub
in
sbb
sbb
movs
mov
sub
pop
(bad)
mov
cmp
add
out
jmp
xor
test
xchg
sbb
gs
push
pop
aaa
inc
fmulp
pop
add
arpl
lds
add
xlat
and
dec
jmp
xchg
arpl
test
sbb
pushw
and
push
push
sbb
daa
push
hlt
cmp
loop
fist
dec
pop
outs
imul
in
jne
inc
adc
cmps
sbb
or
sbb
cmp
push
je
xchg
cmps
int
mov
ja
in
sub
jno
mov
and
cmp
sti
(bad)
aaa
or
xor
mov
jecxz
mov
cmp
mov
popa
pop
in
pop
fs
les
lods
dec
mov
outs
test
ins
sar
int
fisubr
cmc
push
mov
xchg
jle
rol
(bad)
pop
es
mov
xchg
loopne
leave
push
add
sub
outs
mov
adc
sub
jmp
push
add
cmp
pop
ins
repz
(bad)
aam
aas
fiadd
cdq
inc
xchg
leave
xchg
sbb
xchg
xchg
les
or
cmps
mov
lds
and
pushf
scas
stos
cmc
sub
mov
jg
popa
xor
rol
in
sbb
mov
loop
test
jg
sub
data16
push
or
sub
das
test
xchg
xchg
fwait
jnp
xchg
mov
imul
push
fcmovb
neg
or
popa
ss
adc
in
into
pop
bound
aaa
jns
movs
lock
dec
mov
shr
pop
xlat
dec
add
fist
hlt
nop
fs
nop
dec
addr16
and
adc
stc
pusha
xlat
mov
inc
jge
dec
dec
jne
or
cmps
xchg
and
mov
adc
std
loope
mov
xchg
es
jmp
jae
aam
stos
sti
hlt
retf
popf
and
dec
mov
inc
dec
push
outs
sub
and
into
mov
jmp
ds
pcmpgtb
mov
das
lods
or
(bad)
ins
bound
cli
clc
xchg
add
inc
call
mov
push
ss
inc
test
outs
movs
xchg
cmp
stos
sbb
jb
outs
sbb
or
stos
cs
cmps
mov
test
dec
cmps
inc
mov
pop
mov
cmp
repz
sub
jl
jae
fidivr
jp
fcom
fdivr
mov
jbe
jns
mov
inc
lods
mov
dec
push
rcl
cmps
shl
popf
call
pushf
inc
in
outs
aaa
jmp
pop
test
out
pop
cmps
aad
mov
pop
sub
das
sbb
jb
shr
push
out
out
lock
mov
xchg
dec
add
push
and
int3
mov
mov
and
mov
xchg
out
fs
cmp
push
jne
xchg
repnz
add
sahf
mov
sbb
add
test
mov
add
cmp
sbb
cs
aaa
popa
in
inc
dec
sti
sar
mov
fdiv
mov
mov
pop
fisubr
mov
fucompp
lods
cmp
add
cdq
sbb
ficom
mov
aaa
cmp
sub
jb
mov
jbe
data16
jge
mov
ror
xor
jnp
fldcw
cmp
ins
mov
call
or
xor
data16
ins
ror
xor
dec
jecxz
dec
mov
sbb
cmp
(bad)
cli
push
test
mov
jl
je
pop
in
push
push
cmp
pop
cmp
cld
jb
outs
jns
pop
mov
inc
inc
test
and
repz
add
imul
fisttp
out
clc
mov
ret
sub
lods
pop
xlat
jg
in
or
daa
jg
jmp
das
jle
arpl
sbb
pushf
cmp
sbb
sub
xchg
or
fcomp
mov
scas
int
add
fdivr
in
test
mov
sbb
shl
jg
mov
jle
inc
cwde
mov
js
xor
jo
loope
pop
sub
int3
sub
not
ins
fcomp
cdq
loopne
cmp
(bad)
rol
fs
jbe
fwait
jae
adc
inc
mov
inc
sbb
jne
adc
adc
adc
loop
add
cmps
cwde
adc
pop
sub
loopne
repz
push
add
dec
mov
or
xor
cmp
(bad)
call
adc
gs
mov
std
aam
jecxz
daa
xor
xchg
xchg
sti
popf
mov
sbb
mov
xchg
ret
push
js
mov
test
int3
mov
or
nop
adc
mov
xor
jmp
xchg
pop
mov
add
dec
sub
push
cld
push
jle
or
lds
sub
ret
xor
push
jbe
mov
sbb
(bad)
pop
cmp
rcl
jo
loopne
xchg
mov
push
nop
jo
add
dec
sbb
sub
mov
je
cmp
ins
movs
test
xor
add
dec
sub
mov
shr
int
aad
push
test
mov
push
call
nop
dec
xchg
fistp
mov
arpl
movs
dec
loopne
bound
iret
into
push
shl
mov
adc
sbb
mov
jbe
test
adc
push
sub
xchg
fisubr
jbe
(bad)
fiadd
call
aaa
jnp
mov
sub
sbb
sub
test
aam
xor
das
xchg
xor
and
push
cmp
push
jae
jo
mov
jae
mov
stc
sahf
test
in
push
je
ins
xor
loopne
or
and
jns
rcr
std
jmp
sub
outs
cdq
dec
dec
jl
int
test
out
iret
xchg
leave
mov
ret
jg
popa
cmps
cmp
mov
(bad)
adc
jge
pushf
jecxz
push
and
and
mov
aam
mov
loopne
push
sti
xor
push
xor
cwde
xor
or
dec
loop
int3
jmp
les
mov
outs
adc
out
ss
push
xchg
fnstsw
cwde
out
fst
mov
push
stos
icebp
cmp
push
stos
mov
popf
jle
test
mov
pop
pop
or
repz
icebp
mov
mov
repnz
jmp
fxch
std
dec
je
jne
test
dec
jg
aad
leave
fmul
(bad)
ds
sti
add
inc
out
in
add
pop
push
jo
add
add
ins
inc
mov
sbb
sbb
and
outs
and
mov
sub
pop
test
push
std
jp
mov
aas
and
mov
xchg
cli
jb
test
(bad)
ins
add
in
shr
pop
pop
cmp
dec
icebp
sub
shr
sti
xor
movs
rcl
daa
sti
mov
dec
pusha
push
pushf
movs
pop
pop
mov
ins
frstor
into
or
or
push
mov
pop
rcr
mov
mov
xlat
lahf
ds
xchg
push
movs
dec
js
adc
enter
outs
xchg
xchg
int
mov
jns
pop
mov
or
mov
movs
cmp
dec
dec
and
in
ja
ins
dec
cmps
(bad)
inc
or
nop
lock
cmps
rcl
cmps
lock
out
push
in
dec
aaa
outs
add
outs
or
add
inc
xchg
shl
xchg
call
sbb
jnp
push
push
xor
sub
imul
add
mov
and
xchg
inc
stos
mov
inc
addr16
jbe
fcom
cmps
retf
mov
mov
in
in
mov
push
das
cdq
call
(bad)
mov
(bad)
and
push
rcr
icebp
and
sub
mov
add
in
inc
loopne
sbb
adc
adc
sbb
dec
inc
add
fwait
mov
inc
and
jno
push
ins
sti
xor
dec
lea
sbb
jmp
int
scas
xor
nop
add
jge
mov
data16
(bad)
lock
mov
mov
outs
call
cwde
cmps
mov
(bad)
ss
pop
sbb
push
jns
and
push
out
dec
sub
push
pushf
enter
adc
cmps
jne
scas
dec
xor
retf
mov
fcom
push
or
add
push
cmp
xchg
call
or
call
pushf
mov
ss
outs
xchg
ins
jecxz
cmp
mov
push
out
mov
in
fdivr
rcr
push
mov
into
movs
or
sbb
mov
sub
pop
jno
aad
pop
fs
and
ret
fild
cli
xchg
fdiv
test
das
neg
ret
jge
jno
pop
fucomp
push
cmps
(bad)
mov
and
cmp
jmp
enter
test
pop
aam
inc
shl
mov
jge
or
in
dec
pop
xor
int
push
push
aam
lock
aam
lods
hlt
pop
mov
push
dec
lds
adc
jbe
cmc
push
dec
int3
inc
test
mov
mov
pop
mov
push
mov
xor
loope
or
ins
cmp
push
mov
push
stos
cmps
bnd
dec
xor
lea
cmp
(bad)
je
sbb
push
jmp
ins
jmp
and
jge
je
mov
rcr
les
fadd
leave
push
retf
and
inc
stc
inc
or
imul
mov
inc
test
cmps
ror
sub
ja
mov
mov
dec
repnz
jl
push
jns
cld
fcom
cmp
scas
inc
stc
shr
lods
test
jl
inc
cmp
adc
xchg
(bad)
or
loop
leave
mov
pop
movsx
mov
cs
outs
xchg
stos
(bad)
mov
pusha
inc
pop
mov
popa
int
jbe
cmp
or
push
shl
xlat
sub
or
inc
scas
xchg
and
setno
mov
mov
fisubr
xchg
je
ja
aad
aad
dec
minps
xor
push
stos
scas
sti
leave
cmp
(bad)
sub
adc
(bad)
(bad)
and
movs
lock
repnz
daa
fcmovb
retf
or
dec
mov
mov
fsub
ins
(bad)
or
pop
mov
and
xchg
into
frstor
xor
data16
pop
mov
mov
or
add
(bad)
jbe
fld
jl
retf
push
lock
lahf
jbe
cmc
dec
fsub
sub
outs
xor
(bad)
dec
xlat
mov
scas
dec
inc
jle
les
stos
test
sbb
sahf
stc
repnz
jge
jecxz
xchg
cs
test
or
lea
ret
test
push
int3
jno
movs
stos
shl
fs
xchg
jae
add
mov
mov
popa
loop
cmp
jp
xor
jb
push
dec
pop
popf
add
pop
dec
cmps
dec
adc
or
scas
arpl
and
add
test
mov
pop
jb
popa
mov
jnp
mov
cmp
and
leave
bound
iretw
mov
cmp
jg
or
jge
and
xchg
inc
jg
lock
sub
cmp
xchg
push
retf
jb
sub
mov
lock
push
stos
popa
xor
scas
das
xor
cmp
xchg
scas
gs
es
retf
cmp
xchg
sbb
lahf
fcom
cs
outs
fisub
aas
test
movs
adc
push
xor
bound
inc
push
test
fchs
ror
push
mov
fdivr
cmp
ror
div
mov
jo
outs
sbb
dec
(bad)
mov
push
sbb
cmp
pushf
xchg
in
loop
sub
lods
adc
sahf
cmps
out
jo
lods
cld
or
imul
imul
out
inc
es
lock
push
xor
popf
and
inc
adc
jno
sbb
mov
jb
dec
loop
inc
rol
jb
and
les
inc
not
mov
mov
(bad)
mov
add
jge
add
bound
xor
and
lods
push
ret
and
pop
lahf
adc
call
dec
push
cmp
call
aad
mov
test
test
or
daa
dec
add
js
xchg
mov
sbb
dec
out
xor
cmp
cmp
loopne
adc
push
icebp
cmpps
stos
stc
test
and
sbb
pusha
and
cmps
das
fild
adc
or
pop
jnp
sbb
ficom
or
leave
mov
pushf
test
test
loope
imul
mov
xor
xor
into
or
sub
js
mov
imul
sbb
push
pop
stos
pusha
movs
or
cli
or
repnz
sub
mov
inc
sbb
mov
into
add
imul
cmp
and
mov
mov
lahf
es
rol
pop
cli
sar
mov
pop
jge
pop
aam
adc
dec
xor
shld
and
dec
js
ja
stc
nop
fdiv
add
mov
das
retf
sub
in
jle
cmps
inc
jg
xlat
add
jno
push
stos
push
xchg
repz
mov
xor
es
ret
test
neg
bound
or
(bad)
cmp
or
add
pop
jmp
jmp
fdiv
mov
push
mov
mov
fdiv
addr16
mov
hlt
int
in
xchg
add
mov
cmp
inc
inc
cmp
dec
inc
cmp
cli
fwait
cmp
call
nop
daa
or
fadd
mov
add
daa
or
inc
fdiv
dec
add
push
repnz
mov
jecxz
ret
stos
data16
mov
cs
leave
les
inc
fild
lods
cmp
shr
retf
dec
push
rcl
movs
mov
push
push
hlt
and
sbb
adc
cmps
mov
inc
inc
iret
jo
jno
pop
xchg
sti
bnd
retf
mov
fcom
jmp
test
or
sbb
sbb
daa
fsubr
iret
mov
jmp
sub
sar
lock
(bad)
sbb
add
inc
jo
jns
div
and
ja
mov
rcr
ds
adc
dec
push
and
inc
mov
cld
js
xor
in
xor
jb
jmp
jecxz
repz
ins
call
ins
imul
mov
adc
xor
jno
data16
test
cmc
por
mov
fld
sub
daa
enter
xor
add
xchg
jp
jno
or
sbb
jle
out
lock
inc
dec
xor
shl
scas
in
imul
add
fldcw
cmp
inc
fcmovne
pop
sub
or
popa
xchg
dec
sbb
mov
outs
or
(bad)
mov
ins
jmp
push
add
pop
in
dec
gs
scas
mov
push
mov
fdivr
adc
cmp
push
xlat
xor
pop
add
xlat
cdq
(bad)
jb
jne
in
mov
(bad)
loop
pop
cmp
and
jae
(bad)
retf
jno
lods
xchg
xor
mov
ja
mov
das
sbb
add
mov
sbb
out
dec
jmp
sahf
pop
jmp
mov
adc
mov
ror
test
adc
outs
push
and
fbstp
pushf
push
mov
call
pop
icebp
sbb
mov
push
data16
sub
jbe
rol
mov
jp
jae
daa
in
cwde
jg
out
dec
hlt
push
aas
aam
ret
jb
inc
je
mov
mov
shl
shl
pop
adc
loop
jo
mov
add
in
lods
sbb
add
push
ror
idiv
inc
jns
inc
inc
mov
mov
mul
aam
jmp
fidiv
push
addr16
les
xchg
div
stos
loop
bound
jmp
push
xchg
sub
sub
adc
add
jmp
rol
xchg
jmp
sahf
ss
ja
adc
cmp
repz
or
inc
mov
retf
mov
sbb
xor
pop
(bad)
addr16
enter
push
into
loop
movs
or
xchg
cmp
bound
and
(bad)
aad
fimul
jne
fdivp
into
or
mov
push
ret
mov
out
hlt
fnstenv
out
add
sbb
mov
mov
and
je
add
adc
aad
fs
pop
(bad)
sub
ror
dec
gs
js
out
sahf
jmp
or
int
retf
xor
fadd
retf
jge
repnz
adc
ss
out
loop
jg
fcmovnbe
iret
nop
xor
jno
dec
dec
retf
sbb
add
ret
call
xsha256
cmps
adc
inc
cli
jp
rol
pop
xor
jmp
push
cli
out
and
imul
sub
int3
test
out
(bad)
add
xchg
adc
into
vphsubwd
iret
cmp
pop
sar
ins
mov
sub
inc
out
jmp
and
clc
add
dec
jne
push
ret
mov
jmp
out
dec
add
and
push
popa
inc
cmp
stos
push
leave
push
repnz
jmp
mov
mov
xchg
mov
sub
loop
cli
inc
add
jmp
jnp
sub
test
push
pop
out
mov
jbe
and
std
loop
or
sahf
dec
imul
mov
(bad)
lods
inc
dec
jbe
rol
aam
out
sti
inc
mov
push
push
mov
inc
ja
and
jo
sbb
std
sbb
mov
in
(bad)
scas
je
pop
jp
jmp
dec
push
sbb
push
cmp
sbb
sub
shr
popa
cmp
loopne
adc
xor
jp
sbb
add
xchg
shl
add
aaa
mov
xchg
xor
jnp
adc
sub
mov
sub
pop
shl
retf
push
js
jno
aad
dec
jecxz
adc
daa
or
or
out
push
cld
sar
push
test
xor
lds
cmp
inc
arpl
xchg
cld
xor
mov
test
sbb
pop
or
sbb
sar
and
pop
adc
cmp
sub
(bad)
jmp
int3
fwait
mov
mov
dec
mov
dec
bound
xor
sbb
pop
fbstp
loopne
out
stc
dec
stc
push
xchg
les
xor
pop
daa
lods
push
ja
int
lods
dec
and
adc
aam
sub
fs
pop
or
add
sub
aas
retf
imul
mov
neg
shl
mul
push
cmps
mov
das
inc
scas
mov
xchg
movs
jg
jmp
jmp
test
and
popf
in
jecxz
sub
pop
out
xchg
lods
retf
leave
popf
cmp
cmp
cmp
daa
jecxz
adc
and
stos
in
add
shl
dec
ret
fsub
std
mov
retf
out
pop
mov
imul
adc
jnp
push
ins
es
lods
sahf
mov
es
mov
add
scas
xor
sbb
(bad)
fwait
(bad)
(bad)
loopne
pop
out
mov
ins
rol
clc
pop
outs
mov
pushf
jecxz
mov
arpl
test
das
sbb
test
xor
leave
pusha
scas
or
xchg
pusha
out
push
or
mov
pop
pop
xor
jge
cmp
mov
xor
pop
xor
dec
ja
sbb
cli
mov
lds
in
(bad)
pop
data16
pop
das
xchg
stos
jne
xchg
jae
imul
add
test
mov
iret
in
cmp
pop
add
repnz
xchg
add
mov
outs
pop
rol
fs
add
sbb
nop
imul
sub
out
xor
mov
out
push
imul
(bad)
cmps
adc
js
pop
adc
cmp
cmp
fld
cmp
mov
test
fwait
sbb
es
mov
pop
inc
add
mov
and
push
xchg
cmp
call
push
pop
repnz
jl
dec
es
fmul
loopne
fs
fisttp
cmp
(bad)
mov
xor
sub
dec
ret
or
sub
(bad)
nop
mov
sub
(bad)
fild
je
push
mov
cld
jp
mov
or
xchg
sahf
jl
pusha
and
sahf
cdq
paddusb
pusha
mov
or
jl
jmp
inc
inc
das
inc
cmp
icebp
pop
or
shl
int
and
aam
push
dec
or
(bad)
push
jg
pop
sbb
iret
xor
std
and
jae
addr16
xor
lods
into
xor
mov
and
in
sbb
sub
pop
data16
xor
movs
cmp
cmp
cmp
push
popf
sahf
xor
sub
mov
aaa
retf
pop
mov
or
pop
mov
jecxz
sahf
and
in
aad
push
jb
mov
or
fwait
jge
pusha
addr16
cmp
inc
fs
sti
int3
mov
rcl
sahf
adc
bound
jp
inc
stos
jmp
out
mov
push
ins
jne
out
mov
clc
cdq
stos
pop
mov
sub
add
fiadd
jp
dec
sbb
inc
xchg
clc
or
add
daa
out
xchg
fwait
mov
sub
jo
cmc
adc
dec
int3
ss
mov
dec
ins
stos
jp
(bad)
test
mov
jecxz
jl
js
pop
test
imul
push
ins
sbb
dec
sbb
loope
call
iret
ds
rol
cli
cmp
je
mov
and
dec
pop
mov
cli
and
enter
addr16
add
mov
rcl
in
movs
pusha
add
mov
pop
inc
dec
push
mul
pop
sub
adc
test
pop
adc
xchg
lahf
and
(bad)
cmc
cmp
rol
xor
xchg
aad
pop
mov
nop
fdivr
add
(bad)
jmp
fadd
push
in
adc
repz
xchg
rol
jae
cld
rol
in
push
mov
retf
jle
dec
out
ins
mov
adc
jo
add
popa
imul
inc
pop
data16
add
clc
add
mov
and
inc
in
test
jmp
or
int
adc
enter
loope
xchg
inc
or
daa
fisub
fisub
push
push
inc
in
imul
or
ret
push
mov
dec
cmp
(bad)
jb
xlat
inc
cdq
hlt
sub
movs
mov
std
scas
pop
xlat
data16
jnp
rcl
mov
lea
mov
ret
scas
sbb
shr
aam
out
imul
test
dec
icebp
xchg
sub
fwait
lods
xchg
loope
lock
push
iret
call
mov
imul
adc
or
mov
daa
dec
sbb
test
inc
push
push
fld
fisttp
cmp
add
sbb
dec
fs
mov
jmp
xor
cwde
in
ss
ins
sbb
(bad)
pop
sub
hlt
mov
clc
repz
add
test
cmp
fs
(bad)
push
push
pop
jmp
jo
pop
jmp
lea
sbb
dec
(bad)
and
js
xlat
aaa
push
dec
push
mov
push
and
das
push
fiadd
bound
lahf
scas
add
mov
rol
retf
mov
mov
iret
cmp
ins
scas
xor
enter
inc
or
repz
dec
pop
mov
ds
add
add
test
cld
push
daa
call
out
sub
enter
jo
mov
adc
adc
fistp
push
inc
jp
in
fidivr
in
icebp
jns
bound
adc
inc
adc
cli
jnp
xlat
ins
pop
int3
adc
jae
and
clc
jno
retf
xor
xor
and
test
push
inc
or
xor
jae
mov
add
and
std
hlt
push
cmp
add
in
rcr
and
neg
arpl
leave
in
jg
xchg
or
std
(bad)
es
add
adc
mov
mov
mov
fild
enter
jno
adc
(bad)
out
pop
mov
jle
cmp
xor
popf
mov
movs
das
clc
(bad)
adc
mov
popf
loop
sub
add
cmp
popa
jae
retf
lock
into
cld
pop
les
mov
add
std
icebp
ret
inc
push
(bad)
arpl
mov
nop
dec
aas
sub
cmc
push
outs
cmc
mov
(bad)
jmp
data16
adc
jmp
adc
(bad)
stc
out
inc
and
dec
dec
jne
lds
mov
jb
and
and
adc
popf
xor
js
cmp
pusha
add
xchg
jno
xchg
xchg
xchg
popa
xchg
bound
(bad)
outs
push
movs
or
(bad)
pop
test
add
cmp
and
xlat
pop
or
push
jmp
push
xchg
push
gs
cmps
jb
fidiv
xor
test
mov
cmp
nop
jnp
cmp
xchg
ror
out
pop
xchg
push
push
es
in
xor
imul
xchg
pop
(bad)
repz
inc
aaa
pop
mov
test
xchg
and
bound
mov
aas
out
idiv
popf
jmp
movs
test
imul
sahf
out
vorps
or
aam
mov
jnp
cs
lock
xchg
fs
mov
fmulp
mov
cld
dec
(bad)
out
xchg
enter
nop
int3
lds
push
mov
adc
hlt
or
mov
(bad)
call
rcr
das
xlat
adc
cmp
mov
test
lods
fidiv
retf
pop
jp
in
add
xchg
mov
inc
aas
xchg
data16
data16
out
mov
dec
(bad)
retf
pop
inc
jns
push
and
cmp
loope
jp
js
push
sti
mov
pushf
cmp
scas
test
jnp
jle
aam
iret
xbegin
fidivr
out
(bad)
addr16
jmp
jne
jno
loopne
jb
dec
adc
addr16
push
daa
bound
imul
jle
mov
sbb
and
ss
mov
xchg
and
pusha
in
dec
xchg
in
popf
inc
fild
fwait
arpl
jbe
push
mov
add
jmp
aas
jbe
(bad)
sub
xchg
rcl
mov
movs
adc
hlt
cdq
loop
or
cmp
std
jno
or
jmp
pop
sbb
mov
and
out
popa
lahf
hlt
inc
or
stos
(bad)
ja
outs
pop
lods
fistp
out
das
(bad)
sub
mov
jo
xchg
addr16
jae
ret
daa
mov
fwait
dec
mov
pop
mov
adc
fmul
int3
loopne
shl
xchg
xlat
or
jmp
ret
daa
adc
mov
lods
outs
fld
nop
out
sti
and
jg
js
inc
mov
push
mov
add
push
xlat
push
adc
ins
cmps
mov
cld
out
lock
xor
sti
and
jge
stos
mov
add
xor
rcr
(bad)
iret
jns
add
clc
mov
mov
test
mov
xor
push
pop
push
push
hlt
sub
fild
xchg
push
sub
ret
pop
sahf
pushf
or
mov
addr16
imul
mov
add
in
xor
or
mov
xchg
sub
push
push
ja
or
adc
ja
jno
pop
cmp
mov
mov
cmps
sub
jae
ret
int3
movs
add
inc
scas
mov
in
xchg
loop
jge
test
mov
xchg
cmp
mov
cmp
jne
lock
dec
(bad)
add
jmp
aam
ins
dec
mov
xor
jg
xchg
and
cmp
out
ins
and
and
pop
sub
ret
cmps
sahf
lahf
pop
push
sbb
add
pop
gs
mov
add
loop
sar
inc
adc
jmp
daa
mov
or
push
shl
ss
call
lahf
mov
les
xlat
sub
bnd
pop
aas
pop
stc
popf
adc
stos
shl
popf
repnz
adc
mov
out
outs
adc
push
mov
das
sub
aaa
mov
mov
stc
fiadd
jl
jnp
imul
loop
idiv
rcl
xor
sbb
stos
ds
mov
std
xor
jle
adc
or
add
(bad)
fdiv
mov
or
test
aam
xchg
rcr
popf
sub
fnstsw
mov
add
xchg
dec
rcl
aaa
dec
enter
mov
mov
or
cli
mov
test
dec
aad
or
aam
jbe
jmp
push
out
stos
jecxz
js
and
mov
xchg
test
and
mov
inc
in
bound
nop
aad
adc
mov
mov
ror
or
imul
jp
push
mov
sub
pop
fwait
cld
daa
sar
mov
jnp
imul
test
add
imul
stc
or
sub
popa
dec
push
fs
nop
bndldx
xchg
dec
dec
pop
fstp
mov
mov
mov
adc
sar
int3
lods
int3
mov
es
pop
adc
jmp
adc
in
mov
rcl
mov
not
movs
movs
adc
fdiv
lea
hlt
enter
jecxz
nop
inc
mov
mov
ret
pop
mov
out
outs
nop
lock
test
xor
sub
push
inc
fist
adc
xchg
hlt
mov
sub
mov
nop
dec
cmp
and
add
int3
shl
mov
mov
jecxz
daa
add
or
mov
icebp
cmp
in
and
loopne
loope
xchg
sbb
clc
mov
and
add
mov
cmpps
jae
sub
xor
in
push
int3
popf
jg
stc
xor
sbb
xlat
fistp
jb
cmp
add
bound
fistp
dec
aam
push
lea
jl
test
imul
dec
pop
ror
xchg
mov
aaa
mov
lea
mov
ffreep
and
push
xor
gs
inc
jae
dec
test
jns
push
pop
cmp
sti
mov
inc
xor
aas
sub
nop
mov
cs
test
cmpps
retf
mov
push
imul
lahf
mov
xchg
sbb
out
mov
mov
in
mov
popa
clc
add
lock
inc
jg
push
xor
or
ret
mov
in
les
arpl
stc
push
jbe
fxtract
stos
adc
adc
loope
xor
or
and
mov
mov
popa
mov
mov
(bad)
imul
add
fld
xchg
ret
hlt
shl
or
pop
iret
test
fdivr
dec
inc
push
int
and
jb
xchg
mov
mov
jecxz
jp
mov
jle
jg
call
icebp
in
mov
jle
rcl
leave
xchg
test
add
mov
lock
fadd
nop
mov
and
xor
inc
leave
inc
sbb
push
pop
mov
or
shl
adc
push
jbe
int
(bad)
pop
or
inc
push
mov
add
xchg
int
call
xchg
(bad)
fwait
rcr
repz
mov
imul
cmp
popf
jmp
fcom
ja
or
mov
shl
dec
iret
bound
sbb
int
cmp
mov
ret
xchg
lods
pop
jmp
(bad)
scas
(bad)
cdq
int
scas
test
sbb
sbb
and
cmp
fdivr
inc
daa
jnp
add
arpl
sub
jne
mov
jg
jecxz
jp
jle
in
(bad)
adc
add
mov
push
jmp
cmps
movsx
sub
cmp
(bad)
push
sti
sbb
jbe
inc
inc
lods
push
mov
jne
call
xor
outs
push
(bad)
jno
mov
mov
xchg
sub
cld
ret
test
add
js
fistp
lds
dec
xor
int
sbb
outs
adc
outs
push
xchg
mov
out
rcr
es
add
mul
mov
mov
scas
mov
daa
mov
sbb
and
in
pop
rol
and
pop
imul
or
inc
push
gs
inc
jl
scas
xchg
xor
sti
mov
sbb
ss
iret
xor
movs
cld
jb
inc
repnz
inc
sbb
ret
sbb
shr
in
adc
or
and
shl
push
inc
adc
push
mov
fstp
das
pushf
fcomp
shl
test
mov
ficom
ja
pop
jmp
xor
and
inc
cmps
idiv
mov
and
and
lahf
aaa
push
enter
jl
adc
sbb
or
cmps
sbb
fadd
mov
fcomip
jb
aaa
std
lahf
pusha
gs
and
repz
jl
ins
popf
push
in
ins
inc
sbb
sub
aaa
test
rol
pop
add
pop
imul
mov
or
cdq
leave
leave
cmp
sub
test
out
movs
jmp
lahf
xchg
aaa
push
outs
hlt
jne
repz
fs
inc
ins
fild
and
xor
fiadd
or
push
cmp
add
cmps
or
sub
xchg
sbb
adc
daa
shr
enter
sub
sub
jecxz
ret
pop
pushf
adc
mov
dec
pop
or
inc
add
mov
pop
fwait
dec
xor
pushf
jecxz
or
push
stos
add
dec
imul
dec
jl
cmp
mov
pop
pop
leave
push
xchg
rcr
repz
test
lahf
pop
and
ret
mov
imul
mov
pushf
or
dec
out
rol
cli
mov
aad
out
mov
fs
push
adc
xor
adc
sar
ror
and
test
push
mov
(bad)
dec
sti
push
xor
jo
adc
clts
lods
out
(bad)
(bad)
arpl
adc
pop
test
ror
hlt
(bad)
lds
mov
stos
sbb
arpl
retf
fnstenv
repz
mov
ss
ficom
sbb
popa
popa
(bad)
repz
repz
out
adc
jmp
enter
dec
mov
fcmovnu
loope
in
pop
icebp
push
mov
jno
ins
mov
sbb
lds
pop
mov
mov
movs
lods
and
add
or
retf
sbb
jge
fwait
call
cdq
cs
pop
mov
popf
(bad)
and
leave
pop
test
push
sti
shl
add
int
add
xchg
and
repz
mov
pop
es
mov
outs
or
pusha
inc
scas
(bad)
fs
in
adc
adc
push
aad
jl
test
cdq
jne
fild
pop
fdiv
push
fcmovu
cs
in
xlat
xor
pusha
icebp
fst
lods
pop
jne
cmp
push
jmp
or
daa
jp
shr
repnz
loopne
test
daa
lods
js
adc
push
aaa
add
sub
loop
fild
jnp
icebp
(bad)
int3
mov
jae
icebp
stc
jge
in
cmps
call
arpl
xor
pop
and
xchg
dec
dec
xchg
icebp
pop
mov
jne
into
push
(bad)
in
push
cs
leave
leave
push
adc
dec
int3
dec
shr
mov
bound
mov
mov
outs
in
jnp
rcr
add
and
mov
and
xor
jle
les
pop
mov
aad
ret
pop
cli
hlt
fwait
pop
xchg
mov
pop
add
sbb
sti
pop
aaa
jecxz
jae
inc
mov
dec
pop
call
jae
movs
xor
scas
bound
aam
jge
xchg
mov
push
mov
cwde
std
inc
jmp
test
test
xchg
loopne
loopne
loop
and
bound
fs
shr
ja
dec
es
ss
in
pop
pop
jb
adc
jle
mov
inc
push
sub
jno
and
aas
retf
iret
addr16
add
dec
pop
dec
mov
(bad)
(bad)
mov
cmp
push
aaa
add
test
movs
and
and
cld
dec
stos
int3
test
xor
ret
push
shl
sub
adc
mov
or
repnz
pop
and
and
sbb
add
xchg
aas
xchg
pusha
ret
into
push
enter
inc
xchg
lock
xor
fistp
push
xchg
inc
imul
mov
xchg
sbb
push
mov
sub
cmc
(bad)
jmp
(bad)
push
or
outs
clc
icebp
int3
inc
inc
push
neg
jmp
ret
mov
inc
pushf
add
pop
cmps
or
cmc
mov
cs
mov
lods
movs
add
cmp
push
cdq
retf
pop
adc
jbe
sub
mov
es
pop
cmp
sbb
ja
fld
pop
test
push
scas
cmp
into
mov
sub
rol
push
adc
shl
add
lea
shl
stos
aas
jbe
mov
idiv
clc
push
mov
loop
je
mov
frstor
pop
mov
shr
lock
mov
xor
fcomi
retw
jp
push
inc
mov
gs
mov
jno
xchg
sar
add
ss
movs
pop
add
popf
(bad)
cmp
mov
jmp
mov
cmp
add
shr
ret
or
loopne
mov
dec
in
jg
add
sub
scas
inc
mov
push
push
or
fcom
add
and
dec
aaa
in
adc
xor
test
int
test
jno
or
push
xor
jl
xchg
js
sub
outs
pop
push
dec
add
call
ficomp
aam
jmp
hlt
mov
cmp
or
aaa
outs
rcl
mov
inc
add
test
lock
xor
xor
neg
add
inc
xor
cdq
icebp
and
adc
xlat
shr
(bad)
movs
(bad)
dec
push
ficomp
leave
cli
test
dec
lahf
leave
pop
xor
inc
jmp
dec
hlt
je
loopne
and
xchg
lods
adc
ror
and
les
mov
add
sbb
(bad)
cwde
nop
pop
les
dec
pop
mov
or
test
or
daa
shr
inc
mov
sbb
adc
ret
cmps
jmp
xchg
pushf
or
push
mov
fsub
loope
int
dec
dec
addr16
imul
add
xor
(bad)
stos
push
xchg
push
mov
xchg
jmp
movs
sub
fcmovu
add
cmc
(bad)
(bad)
sbb
mov
dec
shl
cmp
outs
lds
scas
shr
rcl
sbb
cmp
mov
pop
cmp
mov
arpl
add
ss
adc
xor
es
out
jns
dec
iret
sbb
xor
test
pop
sahf
inc
mov
outs
or
jmp
xor
ror
loope
mov
xor
mov
adc
out
xchg
ret
adc
addr16
sti
adc
mov
jecxz
cmp
cli
fsub
mov
neg
(bad)
ror
cmp
jne
mov
clc
ds
mov
xor
push
popf
sub
lahf
out
pop
hlt
sahf
imul
pop
pop
sub
mov
cmps
jae
sub
sub
mov
dec
jecxz
xor
dec
scas
mov
jns
imul
jae
jmp
fnstsw
in
les
movs
fadd
xchg
pop
daa
stc
fcmove
lea
or
sub
pop
call
test
jmp
jbe
jmp
mov
jecxz
into
test
sub
fldcw
and
push
loopne
fsubr
add
out
ror
xor
dec
mov
mov
inc
xor
mov
jge
adc
cmps
mov
sbb
cld
or
aam
push
xor
pop
sbb
icebp
sbb
xor
or
sub
iret
dec
mov
scas
mov
xchg
xor
imul
outs
pop
sbb
xor
cwde
sub
fcomp
mov
test
inc
dec
jl
and
and
mov
push
in
xlat
jno
xor
inc
pop
cmp
and
inc
pushf
push
test
iret
xchg
into
aad
lds
hlt
mov
sub
ss
or
hlt
mov
sub
mov
arpl
mov
hlt
push
into
dec
leave
jmp
test
cmp
xor
cmc
sbb
jns
mov
cmp
lahf
or
xor
pop
ins
fnsave
jno
sahf
jb
icebp
daa
and
dec
fiadd
gs
xor
call
das
xchg
scas
leave
scas
or
cli
lods
mov
dec
(bad)
mov
sub
cmp
(bad)
into
cs
fucomi
mov
jge
je
mov
in
pop
push
lods
push
mov
das
sub
xchg
inc
mov
add
cmp
ins
add
mov
mov
jg
int
pop
pop
xchg
aad
ret
xlat
pop
pop
mov
mov
std
lds
xchg
or
test
(bad)
fistp
lahf
inc
or
repnz
fwait
call
xchg
xchg
fist
lock
int
and
not
or
lea
outs
add
mov
sbb
cmp
call
clc
and
dec
out
mov
scas
xchg
jmp
add
sbb
sub
sub
push
inc
sbb
out
pop
pop
mov
xchg
scas
imul
jl
xor
mov
fstp
xor
daa
shl
xchg
jg
js
hlt
adc
pop
pop
inc
push
sub
rol
cmp
retf
movs
sbb
fiadd
mov
push
pop
push
cmps
loope
repz
or
ins
adc
aam
sub
cmp
adc
int
imul
scas
pop
or
std
cmp
imul
mov
xchg
out
mov
xchg
cld
mov
pop
enter
sub
jne
sub
xor
dec
sbb
imul
jo
push
push
pop
and
sti
mov
xor
jae
dec
add
aad
outs
inc
or
test
pushf
pop
jb
cmp
cmp
jbe
or
inc
push
mov
lods
xchg
mov
jmp
cld
mov
push
cmp
sti
(bad)
sbb
xor
jbe
cmp
clc
xor
inc
add
inc
cli
pusha
adc
ins
inc
cmp
aas
xor
pop
mov
loop
mov
jb
mov
gs
shl
sub
cmps
or
in
outs
mov
add
out
mov
lock
out
xchg
mov
xchg
inc
fidivr
push
popf
fld
dec
fcmovnb
mov
mov
std
or
stos
ja
jnp
mov
dec
pop
or
sub
sub
mov
lds
and
sbb
fs
fdiv
stos
in
cmp
dec
jp
and
mov
push
fs
call
cmp
sbb
adc
jo
cmp
xchg
cmp
xor
adc
dec
out
iret
data16
je
cld
xchg
inc
imul
retf
fistp
ins
sub
cmp
dec
lea
lea
aam
cs
mov
mov
jmp
das
push
int
mov
sbb
xchg
mov
mov
fcmovu
repnz
ins
xchg
(bad)
mov
fistp
add
sub
push
sbb
js
hlt
in
aam
and
xor
cmp
mov
xchg
jno
ins
dec
ins
push
push
mov
and
retf
outs
(bad)
into
xchg
push
lea
cmp
mov
dec
jbe
jbe
jo
jno
into
cs
xchg
movs
and
jl
sbb
fs
jmp
ror
sbb
mov
inc
cmp
mov
movs
push
mov
ins
ja
inc
adc
imul
cs
shr
(bad)
fucomip
fisub
sti
jb
repnz
fst
fs
push
mov
xor
sub
pop
icebp
inc
xchg
out
push
fdivrp
test
push
test
or
cmp
or
lea
cmp
movs
or
sti
sub
repz
repz
in
sbb
ret
imul
mov
sbb
inc
jo
sar
cdq
repz
scas
inc
mov
(bad)
out
add
sub
loope
inc
xchg
push
adc
jae
add
push
rol
aas
push
test
or
cmp
push
and
stc
pop
or
aad
push
push
jge
iret
aaa
icebp
hlt
jo
mov
mov
sub
cli
pop
pop
into
call
out
stc
sbb
xor
and
dec
movs
sub
jbe
cwde
cmp
(bad)
push
jge
adc
outs
sub
mov
sahf
xchg
and
inc
jmp
pop
mov
xchg
rol
or
retf
pushf
rcl
ret
jmp
or
sub
in
aam
sub
mov
cmps
xchg
mov
dec
jmp
and
push
scas
cmp
jmp
arpl
cli
adc
rcr
mov
loop
ins
pop
movs
or
xchg
clc
out
ret
inc
jae
jl
in
repz
cmp
outs
aam
add
lock
das
cmps
arpl
stos
into
cmps
mov
rcl
add
inc
push
scas
add
(bad)
shl
aas
and
pop
jno
dec
pop
(bad)
dec
push
dec
push
shl
jbe
les
xchg
imul
maxps
std
outs
cmp
das
inc
popf
jno
xor
sbb
lods
adc
int3
not
and
sbb
ffree
sub
add
mov
imul
adc
mov
nop
and
adc
fist
push
xor
mov
ins
cmps
int3
xchg
push
fidivr
out
leave
adc
in
pop
or
icebp
pop
leave
loop
and
(bad)
call
mov
lahf
aad
outs
fs
push
push
cs
dec
or
ret
xchg
sbb
or
xor
ss
(bad)
jnp
add
sar
int3
or
lea
cmp
and
dec
mov
(bad)
cli
dec
out
xor
nop
mov
addr16
adc
pushf
pop
icebp
(bad)
fcomp
das
addr16
fisttp
pusha
call
test
adc
sub
mov
nop
push
mov
mov
dec
jbe
pushf
sub
in
xchg
shl
out
jns
aad
inc
fcmove
jb
mov
shl
cmps
in
in
cmps
push
(bad)
or
mov
ds
lods
test
arpl
push
das
xor
out
push
mov
sti
xor
and
push
push
mov
xchg
sbb
ret
test
test
or
jno
sbb
shl
inc
ds
out
ss
fstp
mov
sbb
jle
iret
hlt
xchg
fild
adc
mov
scas
cmp
test
or
ins
push
mov
dec
stos
iret
dec
stos
add
mov
add
aas
sub
cs
cli
cmps
add
ret
mov
sar
mov
test
xchg
mov
pop
pushf
sub
mov
sub
and
lock
mov
sub
xchg
add
mov
and
mov
cwde
jmp
mov
sub
or
pop
mov
adc
lahf
retf
xor
xchg
lahf
ss
cdq
imul
sub
push
and
sub
sub
shr
mov
and
int3
pop
outs
mov
arpl
fwait
das
(bad)
sahf
jmp
fwait
icebp
dec
jmp
stc
mov
or
(bad)
xor
mov
pop
loop
xchg
xor
lods
test
sbb
xchg
stos
gs
xor
mov
xlat
add
jmp
fs
inc
jmp
aam
adc
xor
sub
mov
jae
cmp
mov
call
mov
cdq
jmp
cmp
jne
sti
loope
std
movs
fistp
xchg
inc
pop
dec
(bad)
retf
test
fdiv
repnz
sbb
repnz
imul
sti
pop
mov
montmul
cmps
(bad)
adc
xchg
mov
and
and
fstp
and
inc
cmp
mov
xor
xor
inc
fnsave
adc
dec
rcl
out
hlt
popf
pop
pusha
mov
pushf
or
mov
jle
cmc
ret
jbe
int
sub
rol
jl
or
mov
mov
jae
add
xchg
in
loopne
push
push
pop
mov
imul
jmp
dec
and
outs
repnz
mov
test
fs
adc
mov
(bad)
mov
in
mov
int
mov
cdq
jo
mov
leave
mov
aad
mov
into
daa
(bad)
js
xor
add
cdq
jge
cwde
inc
sub
cmc
mov
cwde
adc
jecxz
in
aad
dec
jno
push
mov
xchg
xchg
(bad)
push
cmp
sahf
add
daa
into
and
pop
push
add
data16
rcl
stos
cmc
cmp
imul
iret
scas
add
addr16
jo
pop
lods
jae
cld
cmps
jmp
cmp
jg
hlt
sub
inc
xchg
shl
or
(bad)
fidiv
mov
sub
cli
xchg
in
xor
out
mov
lea
dec
xor
stos
inc
push
fldpi
fucomip
mov
test
mov
imul
imul
inc
into
sbb
jnp
out
xchg
mov
fld
xchg
dec
push
inc
jns
(bad)
je
lock
cmp
leave
imul
pushf
pushf
arpl
fadd
aad
dec
cmc
xchg
add
mov
cmp
data16
cmp
in
(bad)
aad
lds
dec
xchg
test
cld
fcmovu
push
dec
and
scas
and
stc
jae
jecxz
nop
mov
inc
ja
sub
jns
and
add
add
imul
jecxz
data16
fidivr
xor
and
fld
jno
cmp
jp
cs
(bad)
retf
scas
inc
sti
inc
jl
adc
test
cli
(bad)
call
push
sub
pushf
cmp
push
xor
push
or
in
arpl
push
jle
inc
sar
sub
pusha
std
in
fs
cmps
xchg
jno
adc
lods
and
int3
jo
leave
shr
ret
mov
push
hlt
push
les
inc
lea
dec
imul
inc
push
jge
fnstenv
adc
mov
dec
clc
repz
movs
sbb
scas
or
adc
and
pop
pop
xor
(bad)
mov
std
sub
jno
ja
ins
mov
out
or
jno
mov
jnp
out
rol
and
dec
cmp
iret
xchg
push
aam
outs
out
stos
in
mov
dec
xchg
jo
mov
leave
dec
test
mov
mov
inc
jle
js
cdq
push
mov
pop
aam
scas
cdq
aad
pop
aas
inc
lds
and
mov
xor
call
sub
outs
inc
add
xchg
repnz
ss
or
daa
adc
and
fnstenv
or
in
test
fs
arpl
inc
popf
xlat
outs
test
test
and
arpl
(bad)
cmp
xor
and
or
dec
or
cmp
sbb
inc
inc
xor
pop
jge
pextrw
add
gs
aad
test
ja
ror
push
imul
repz
pop
push
hlt
iret
push
sbb
fsub
jmp
xor
cli
cmp
jo
pop
sub
mov
xlat
mov
in
ret
and
ss
stos
or
(bad)
(bad)
mov
xchg
add
out
out
shl
scas
mov
icebp
mov
sysexit
fmul
(bad)
or
or
push
ins
dec
loop
les
addr16
push
ins
clc
sub
mov
stos
adc
xchg
pop
cmp
int
ret
cmc
adc
mov
cmc
imul
in
loopne
pop
imul
xchg
lock
pop
add
gs
or
lds
mov
pop
and
shl
loopne
cs
and
mov
inc
sti
lea
sbb
dec
sub
in
aas
mov
xchg
add
fdivr
pop
mov
or
add
push
jg
inc
fdiv
out
push
xor
jg
ins
push
sbb
das
adc
scas
cmps
mov
xchg
not
pop
je
inc
mov
cwde
les
and
or
icebp
dec
cmp
pop
sbb
dec
pusha
ins
nop
mov
out
pushf
adc
lods
stc
ds
sub
pushf
(bad)
pop
add
js
inc
xchg
nop
retf
or
pop
add
test
gs
or
stos
dec
fwait
sbb
adc
xor
nop
cmp
fstp
das
push
ss
imul
sar
push
jp
std
jl
jle
push
mov
stc
cmp
dec
lods
out
out
imul
nop
dec
outs
mov
pop
gs
repz
or
xchg
sub
pop
add
adc
shr
jp
dec
inc
in
fwait
jae
or
lods
adc
mov
retf
repz
out
push
hlt
scas
lods
sbb
clc
leave
cmp
fistp
aas
mov
xchg
jae
xchg
(bad)
pop
add
int3
push
and
nop
scas
cdq
or
(bad)
and
(bad)
dec
ret
pop
(bad)
sub
or
(bad)
xchg
push
inc
cmp
sbb
cli
mov
arpl
jle
ret
retf
sub
lods
dec
call
or
mov
or
jbe
pop
or
pop
out
pop
cs
jmp
jns
add
not
test
lea
push
mov
arpl
shl
addr16
cmp
push
dec
xor
jg
leave
stc
sub
sub
jecxz
add
pop
push
lods
leave
jge
pop
hlt
cmp
mul
dec
inc
(bad)
jmp
(bad)
push
sbb
and
lods
retf
inc
stc
and
xchg
dec
xchg
test
mov
ins
dec
cmp
outs
(bad)
fisttp
xor
es
popa
stc
inc
je
in
mov
or
aaa
xchg
sub
sub
and
test
out
push
xchg
push
(bad)
pop
loopne
shl
adc
data16
inc
cmps
mov
in
bound
jp
je
jge
ss
push
scas
mov
or
fimul
and
in
or
fs
sar
retf
out
lds
inc
mov
inc
xlat
sbb
dec
cmp
push
fsubr
sub
lods
xor
mov
mov
fbstp
dec
dec
aaa
in
and
dec
rol
inc
in
push
arpl
out
mov
into
jmp
rcr
push
ret
aas
add
sbb
mov
ret
hlt
xor
ins
xchg
push
push
jp
adc
pop
fs
xor
rep
fistp
inc
xchg
clc
dec
xchg
or
jne
ret
outs
cmps
jecxz
in
mov
iret
pop
mov
pop
icebp
rcr
retf
iret
sbb
sbb
(bad)
cmp
sar
adc
jle
clc
mov
pop
inc
loop
cli
adc
movs
test
sbb
ins
jg
outs
fdivr
aam
sub
add
aas
call
inc
sbb
cmp
fdivr
sbb
leave
(bad)
pop
int
pusha
adc
jo
sbb
sbb
outs
ret
jg
dec
mov
repz
push
push
sysenter
mov
jecxz
dec
and
sub
sub
stos
or
inc
jnp
add
sub
xor
push
add
test
dec
mov
test
jbe
ins
xchg
and
idiv
aas
mov
mov
xchg
and
push
ds
dec
ss
es
add
daa
push
das
fst
ja
int
cmps
ret
pop
ficom
sub
and
adc
adc
pop
sbb
or
jp
in
clc
push
and
mov
repnz
sub
dec
jge
add
add
sbb
(bad)
cmp
push
js
cdq
jb
push
mov
mov
jmp
xchg
pop
sub
pop
mov
pop
sub
call
or
xor
mov
in
fst
fsubr
clc
sub
jno
nop
xor
mov
push
cwde
push
push
aas
adc
inc
adc
pop
pop
xor
mov
test
fistp
rol
repnz
or
cmp
push
jmp
mov
gs
sbb
jge
xchg
loopne
xchg
xchg
add
retf
push
push
(bad)
cli
cld
bnd
leave
lea
in
xchg
sub
pop
mov
adc
fsubp
jne
jno
jecxz
into
mov
cli
aaa
iret
dec
xor
dec
sub
lea
cld
cmps
fadd
push
mov
dec
enter
popf
cli
pushf
jge
scas
les
jo
sbb
and
mov
push
xor
dec
pop
outs
fstp
adc
call
push
pop
xor
iret
xchg
mov
sub
push
push
or
adc
add
je
mov
shr
pop
push
adc
cmp
push
bound
into
inc
not
push
adc
xor
mov
cmp
rcl
mov
adc
shl
scas
dec
test
sub
inc
add
jb
add
imul
or
xchg
fidiv
clc
jle
es
fild
mov
mov
and
push
pop
aaa
cld
sbb
ins
out
scas
dec
loope
xchg
xchg
push
push
je
add
inc
inc
xchg
es
enter
jo
mov
adc
lea
sub
adc
and
push
fcomip
icebp
inc
fwait
push
pop
aaa
pop
repz
pop
mov
xchg
inc
inc
js
shr
(bad)
pop
imul
lds
scas
pop
pop
movs
sti
sbb
pop
mov
jl
jne
fdivp
(bad)
js
fadd
pop
sbb
hlt
out
out
out
jl
jne
aas
gs
lods
cdq
les
sar
cmp
shr
mov
je
sub
add
mov
mov
mov
add
not
outs
mov
lods
test
dec
scas
fnstenv
rcr
mov
or
xchg
test
push
or
rcl
iret
daa
les
shl
(bad)
or
xor
or
push
mov
cli
sub
rol
xchg
mov
pop
sub
xchg
fwait
cli
fdiv
inc
pop
fst
(bad)
ins
inc
movs
adc
mov
lods
cmovge
xchg
push
imul
mov
and
(bad)
cmp
ror
repnz
mov
xor
lahf
inc
sti
repz
daa
dec
and
sbb
addr16
dec
jle
je
fiadd
inc
leave
lods
xchg
mov
add
lods
mov
loope
std
add
sbb
stos
(bad)
push
mov
mov
jae
repz
adc
repz
adc
inc
into
hlt
inc
pop
ror
test
add
adc
push
inc
not
in
xchg
data16
mov
out
scas
ret
out
aam
nop
dec
pop
mov
int
sub
leave
fstp
pop
out
mov
push
rol
inc
sbb
leave
sbb
mov
in
cmp
cmp
cmps
aad
or
pop
xchg
fs
cli
(bad)
arpl
dec
stc
stos
int3
sub
sbb
inc
es
rol
aaa
lods
cmp
mov
xlat
jno
push
pop
push
test
fdiv
jecxz
mov
or
mov
xor
sub
(bad)
jge
pushf
sub
sub
mov
dec
in
imul
sbb
jae
popf
adc
cmp
rcr
imul
push
lahf
aam
cmp
je
loope
inc
push
scas
fisub
push
(bad)
or
adc
cmp
add
sub
and
nop
inc
sub
jns
mov
and
inc
retf
ss
(bad)
pop
inc
pop
mov
outs
das
adc
out
retf
jo
outs
aas
enter
inc
scas
xchg
mov
pop
adc
aad
scas
pop
lods
adc
mov
or
dec
call
jno
xchg
sbb
xchg
add
push
stos
xchg
sbb
xchg
push
rol
out
add
xor
dec
repz
and
xor
in
and
xor
int
mov
(bad)
std
jmp
das
push
push
xchg
mov
aaa
jae
and
xchg
cmp
cmp
xor
adc
test
daa
dec
adc
lods
mov
shr
or
sti
icebp
dec
scas
out
or
sbb
es
push
sti
dec
xchg
dec
jb
fucomi
nop
cmp
call
mov
and
add
sub
jp
xchg
mov
sub
(bad)
aad
dec
push
loope
das
fild
repnz
inc
mov
push
(bad)
sub
xlat
push
xor
(bad)
gs
xchg
dec
fdivr
outs
inc
jo
fcmovu
cdq
xchg
pop
mov
test
test
retf
aam
sahf
pop
mov
dec
sbb
jae
adc
sbb
cmps
jle
xchg
and
int3
mov
movs
mov
mov
ins
retf
stos
stos
enter
sub
test
cmp
enter
int3
pop
add
push
inc
sub
pop
add
sbb
xor
xchg
(bad)
aaa
xchg
shl
enter
movs
jae
(bad)
dec
or
xchg
retf
mov
or
xchg
inc
in
sub
sbb
cmps
retf
out
cli
pop
adc
mov
mov
add
push
clc
mov
xor
add
push
and
cdq
enter
rcl
and
jbe
sbb
adc
adc
push
xchg
jno
sbb
out
inc
scas
push
jg
pop
stos
in
test
mov
mov
popf
push
leave
rol
jmp
sub
loop
pop
lea
push
inc
(bad)
loope
sub
pop
pop
in
pusha
adc
and
or
add
stos
outs
es
ja
daa
sub
lods
lsl
and
clc
jge
xor
bound
adc
xchg
fiadd
dec
cmp
or
lods
fadd
es
out
xchg
out
dec
sub
das
jnp
in
cs
mov
out
lds
addr16
sbb
mov
call
and
inc
test
stos
es
call
inc
jbe
cs
or
jns
jecxz
and
(bad)
lods
adc
sbb
cli
mov
movs
mov
ja
stos
dec
test
leave
fwait
push
fnsave
push
ja
lock
xchg
push
or
adc
dec
sbb
fdivr
loopne
rcr
(bad)
xor
adc
sub
and
xchg
cmp
(bad)
pop
test
xchg
push
cmp
ror
in
cmp
leave
sbb
or
jb
test
das
fild
je
push
sbb
ss
xor
addr16
jp
push
inc
jns
cwde
xchg
je
xchg
out
mov
loop
sbb
or
iret
int
sti
test
in
ret
cmp
and
int
push
(bad)
jmp
scas
pop
xchg
aaa
fld
call
or
enter
repnz
add
pop
push
adc
and
fist
sar
(bad)
push
ret
dec
or
test
mov
mov
test
inc
jmp
inc
dec
sub
push
std
and
adc
adc
mov
and
mov
cs
jb
aaa
dec
sub
test
arpl
pop
mov
cld
icebp
or
cli
jg
fidivr
mov
mov
iret
xor
adc
das
lods
aaa
inc
push
and
xor
mov
ss
cdq
cmp
in
cld
mov
dec
mov
sti
js
pop
and
or
pop
mov
into
mov
lahf
push
out
jbe
jmp
inc
adc
adc
ss
push
or
enter
mov
das
and
and
aaa
(bad)
arpl
add
adc
stos
iret
loopne
in
add
fisttp
adc
inc
or
cs
push
xchg
in
scas
push
jo
cmp
inc
xor
stos
rol
jo
addr16
pop
js
test
sub
sub
ss
inc
add
mov
pop
shl
retf
mov
call
test
mov
(bad)
iret
and
iret
sub
fst
int3
test
sub
xchg
add
adc
and
enter
popf
loopne
in
xor
add
fs
mov
popf
and
and
in
rol
mov
mov
mul
stos
push
push
cmp
ret
data16
fbstp
stos
mov
push
dec
imul
stc
daa
or
popa
fsin
adc
cmp
data16
in
push
js
xchg
test
mov
mov
int
bound
sub
xor
les
xor
(bad)
sub
cli
jne
cmp
and
dec
jae
sahf
sub
push
imul
adc
inc
xchg
outs
or
por
adc
cmp
cmp
loop
cs
aaa
and
push
ret
jp
hlt
ret
pop
stc
out
mov
jo
xchg
push
jne
sub
mov
dec
mov
(bad)
int
dec
xchg
xor
retf
xor
mov
int3
stos
cs
pop
outs
inc
int3
mov
ins
fwait
pusha
push
jns
fidiv
ss
std
ins
push
outs
lds
test
jnp
sahf
push
popa
ror
adc
cwde
mov
mov
push
je
dec
ins
clc
aaa
inc
stos
cld
sahf
mov
shl
mov
xlat
(bad)
cmp
(bad)
movntps
retf
movs
jmp
and
scas
mov
adc
xchg
mov
ins
add
(bad)
jb
out
ret
aam
pop
movs
js
fcomp
pop
int3
(bad)
xor
sti
push
fwait
pop
es
dec
cdq
push
add
pop
mov
gs
(bad)
sti
mov
ret
pushf
mov
shr
add
retf
imul
iret
xor
pop
mov
cwde
jnp
imul
cmp
add
dec
aam
or
add
push
int
pop
ret
shl
(bad)
adc
sti
fist
adc
or
mov
adc
out
sar
xor
add
fbld
mov
mov
and
dec
div
push
jb
sub
or
or
repnz
xlat
in
xchg
imul
jno
fdiv
jmp
jb
pop
mov
or
pop
popf
sub
mov
or
idiv
dec
into
xchg
mov
hlt
mov
(bad)
call
fnstenv
xchg
and
xor
jae
call
ins
movs
cmp
lods
sahf
push
or
outs
pop
push
sub
mov
sbb
jecxz
adc
cld
sar
arpl
mov
push
fldenv
sub
xchg
pop
pop
hlt
mov
imul
mov
bound
out
loop
arpl
push
pop
sub
cwde
js
gs
mov
rcr
into
ret
mov
and
mov
daa
fs
in
add
dec
push
xor
jbe
repz
adc
out
lock
test
ret
and
cmp
mov
jecxz
bnd
inc
mov
fwait
push
jl
fdiv
ret
pop
or
ror
int
addr16
stc
add
xor
(bad)
enter
xor
(bad)
shr
dec
(bad)
xor
push
jle
lds
pusha
ret
adc
popf
outs
jecxz
into
cli
sub
mov
jae
xlat
mov
push
add
sar
mov
adc
cmovb
sub
dec
loope
cmps
das
imul
aam
add
das
and
es
sbb
arpl
adc
std
mov
push
pop
movs
pop
aaa
les
or
or
dec
in
sbb
xchg
sbb
pop
xor
arpl
fmul
xchg
nop
ss
jmp
hlt
outs
arpl
sub
push
and
jmp
inc
hlt
add
fild
call
leave
aam
sub
in
leave
imul
sub
shl
arpl
push
into
retf
out
fadd
dec
jnp
mov
shl
push
mov
stos
(bad)
add
cmp
lea
repnz
inc
pmaddwd
sbb
or
pop
fucom
lea
and
jo
or
test
stos
cli
repz
imul
jg
sti
sbb
and
mov
inc
push
mov
in
mov
repnz
dec
or
ret
arpl
mov
sbb
sub
jae
inc
iret
sbb
adc
(bad)
mov
add
outs
cmp
cli
adc
imul
fsubr
pushf
inc
outs
pop
cmp
lods
fwait
hlt
cli
test
mov
outs
in
push
test
das
movs
mov
enter
std
pop
mov
xchg
dec
cmp
xchg
sub
pop
mov
jns
push
fs
into
je
inc
mov
and
movs
aad
test
aam
cmps
sahf
inc
ins
jbe
into
push
jne
push
sti
imul
xchg
mov
repz
fdivr
es
or
aam
jo
or
xchg
loopne
sahf
call
adc
lods
sbb
fsubr
push
sub
push
enter
inc
retf
pop
je
hlt
rol
mov
lods
out
push
retf
test
xor
or
test
push
aaa
loope
mov
push
push
fsubr
shl
shr
push
(bad)
loopne
push
xor
and
icebp
mov
dec
(bad)
cld
outs
leave
jmp
or
sbb
xor
jmp
mov
and
push
mov
leave
jp
iret
shl
xchg
fs
ds
jo
enter
mov
cmps
inc
fstp
or
mov
pop
inc
mov
fcomp
xor
sub
pop
adc
xchg
cmps
xchg
and
mov
popf
cwde
aam
mul
xor
sbb
push
mov
rcl
out
lock
and
test
fnstsw
xchg
jl
ficomp
mov
popf
pop
dec
push
inc
movs
in
mov
popf
icebp
cmp
mov
mov
ins
xor
mov
repz
jae
xor
inc
fdivr
cli
mov
dec
inc
out
pop
mov
sbb
nop
addr16
loopne
adc
cmp
rol
out
inc
mov
jg
add
jo
test
shr
pop
xor
int
dec
add
inc
inc
mov
lods
retf
pop
xor
lock
out
int3
xchg
fisttp
and
sti
scas
es
lfs
sub
push
or
xchg
and
repz
xor
call
setle
xlat
imul
sbb
inc
lods
sub
mov
pop
std
cmps
push
lods
fcomip
jle
popf
mov
shl
call
cmp
xor
add
pop
adc
js
jo
dec
jb
sbb
dec
(bad)
push
cmp
mov
cmp
icebp
call
in
scas
div
push
pop
and
popa
or
retf
int3
out
pop
arpl
fsubr
mov
lock
leave
pop
jp
mov
xchg
lods
inc
(bad)
and
cdq
push
sub
retf
repz
mov
xchg
sbb
fidiv
xchg
retf
mov
mov
retf
outs
pop
repz
jp
stos
add
stos
dec
out
inc
call
or
add
add
out
xor
pop
pop
add
and
jp
les
jo
in
sbb
push
pop
lahf
inc
ds
push
adc
movs
gs
push
adc
dec
inc
sbb
sti
in
inc
int
jle
mov
mov
push
push
sti
call
xor
and
loope
rcl
push
es
into
outs
(bad)
retf
repnz
add
and
jmp
mov
stos
(bad)
jno
in
jle
xlat
ds
or
ds
pop
popf
cwde
lock
(bad)
cmp
pop
sub
popa
inc
jg
cmp
stos
arpl
lea
ins
mov
mov
xchg
mov
ret
push
pop
mov
les
adc
and
mov
in
push
out
mov
mov
aam
sub
jge
jl
ins
out
sbb
ins
xchg
ss
les
add
or
mov
jno
mov
pop
pop
pop
leave
mov
test
xor
adc
mov
jae
pop
jle
call
adc
outs
add
xchg
cmp
xlat
(bad)
cld
les
cmp
mov
jb
pop
xchg
pop
add
push
mov
pop
(bad)
shr
sahf
adc
(bad)
or
mov
es
adc
repnz
xchg
inc
mov
cmp
push
and
idiv
xor
aaa
movs
push
and
and
inc
div
inc
lods
cmp
sub
ins
inc
inc
fdiv
xchg
cwde
cmp
jb
ret
sub
shr
push
pop
mov
sbb
cld
jp
dec
movs
pop
ins
scas
add
scas
sbb
mov
cmp
sub
or
sub
loope
std
xor
sahf
inc
call
xor
mov
retf
or
cld
pop
pop
repnz
push
sub
std
loopne
outs
jl
sbb
ret
mov
inc
or
mov
aad
adc
addr16
and
aas
repz
pop
inc
cmp
outs
mov
xchg
in
mov
mov
mov
mov
cmp
inc
fsub
push
dec
jle
retf
cmps
in
shl
jnp
aam
(bad)
(bad)
cld
push
das
mov
xchg
fucomip
pop
mov
mov
out
retf
push
jnp
jg
pminub
xor
pop
sub
ret
(bad)
xchg
aam
sbb
sqrtps
scas
add
mov
push
xor
jge
dec
popf
sbb
pop
scas
call
cdq
data16
aas
loope
fistp
repnz
jbe
and
xlat
xchg
pop
repnz
mov
lods
pop
test
lea
fstp
(bad)
ss
into
sti
xlat
mov
in
out
fwait
or
mov
pop
push
jo
sub
xor
int3
test
in
inc
push
push
int3
jg
mov
ror
pop
nop
fcom
stos
dec
dec
lock
inc
and
pop
bound
mov
imul
mov
pusha
adc
xchg
int
xchg
aad
daa
pop
into
jnp
sub
lds
iret
fiadd
mov
cs
sbb
xchg
pushf
arpl
jge
dec
ret
sub
in
out
cmps
lahf
xchg
test
fld
and
pop
or
aaa
adc
scas
int
pusha
sbb
test
ja
ins
stos
repnz
mov
sub
pop
or
movs
aaa
pop
icebp
xor
bound
retf
push
dec
adc
icebp
fnstsw
retf
jg
mov
adc
mov
lahf
and
cmps
mov
arpl
lea
test
jge
fstp
xchg
jne
dec
ins
ins
lods
sub
rcl
out
push
mov
pop
ret
sbb
sub
ret
xchg
and
sbb
aas
and
inc
add
push
sbb
ins
mov
push
inc
lds
adc
cmp
jmp
pushw
mov
push
mov
jb
mov
mov
mov
xchg
(bad)
pushf
loop
js
dec
sbb
push
(bad)
pop
imul
aad
pop
jb
stos
out
sbb
rcl
iret
push
cmp
jge
test
leave
jns
std
test
fisub
and
add
mov
inc
je
jmp
adc
mov
or
lea
or
add
mov
mov
sbb
inc
sbb
jno
pop
adc
call
mov
inc
mov
mov
push
jecxz
push
mov
pop
mul
and
mov
inc
adc
aad
mov
int3
sub
push
sub
cmp
fwait
repz
call
jmp
test
sub
push
mov
mov
or
mov
call
jne
out
xlat
into
pop
and
mov
aas
ins
or
mov
lods
seta
aaa
ret
js
ds
sahf
adc
fs
mov
mov
mov
xchg
mov
sub
mov
and
and
scas
adc
sti
cmps
sahf
mov
pop
jl
cdq
adc
ds
stos
jg
hlt
or
fisub
pop
call
mov
mov
fisttp
pop
outs
movs
xor
jg
repnz
ins
sub
jns
out
cmps
add
fsubr
pop
mov
adc
ds
cmp
(bad)
in
push
mov
out
js
sbb
clc
enter
test
xor
or
mov
clc
pop
xchg
mov
ins
dec
pop
xchg
mov
adc
xor
cld
movs
fidivr
aad
sahf
cmp
mov
pop
cmc
mov
pop
push
cld
sub
push
int3
inc
push
lock
das
fcomp
and
sbb
gs
imul
mov
push
retf
jbe
repnz
dec
addr16
or
repz
stos
pop
xchg
in
add
push
movsx
aam
jecxz
xlat
sbb
loope
push
repnz
pop
ficom
pop
jmp
cmps
push
dec
xor
sub
adc
and
aas
pop
cwde
cmps
xlat
mov
adc
outs
or
iret
pop
push
into
jns
and
push
call
enter
add
pop
std
je
push
sub
dec
fwait
loop
in
add
sub
mov
jmp
adc
or
sbb
adc
fstp
jmp
dec
and
and
(bad)
and
(bad)
ret
sub
clc
dec
sbb
leave
adc
lahf
mov
inc
into
pop
retf
xchg
inc
lea
xchg
mov
imul
mov
scas
xor
mov
loop
mov
sub
pop
popf
mov
shl
add
xor
pand
out
(bad)
sbb
inc
adc
or
cmc
mov
loope
gs
jl
in
push
leave
pop
in
inc
addr16
daa
shl
fisub
jae
mov
ret
jne
cmc
int
fisttp
push
shl
pop
retf
push
pop
sar
xor
cmp
inc
jno
repnz
les
sbb
call
retf
sti
jae
cwde
cmp
push
mov
pop
test
mov
stos
popf
rol
fdiv
daa
mov
fwait
rcl
xchg
xchg
jnp
mov
jl
lds
xchg
cmp
test
mov
fmul
push
cmp
xchg
or
rcr
and
lea
sbb
rcl
mov
mov
pop
sub
sbb
sub
out
pushf
and
(bad)
and
jp
out
fcom
lock
fsub
(bad)
push
loope
fdivr
in
and
and
shr
nop
and
cld
aas
mov
ins
or
mov
mov
adc
sub
xchg
sbb
shl
sbb
pop
sub
xlat
js
fadd
xor
mov
or
cmps
call
shl
dec
push
dec
xlat
(bad)
std
cmp
cmc
add
and
or
aaa
adc
aaa
sbb
xor
jno
pushf
mov
or
out
and
xchg
mov
fisttp
sbb
mov
ror
xchg
mov
or
int
ret
jne
sbb
cli
and
movs
loop
lea
into
xor
mov
aas
xchg
sub
pop
pop
pop
cmp
xchg
mov
retf
adc
test
or
aam
jnp
cmp
adc
pop
mov
sub
lds
ins
mov
or
outs
inc
mov
scas
push
sbb
stc
jns
fst
movs
sbb
daa
mov
mov
jb
cli
adc
pop
mov
mov
enter
jo
adc
mov
cmp
cmp
cwde
push
mov
cmc
pushf
cdq
xchg
nop
mov
xor
lods
adc
scas
cmp
(bad)
jecxz
sub
fsub
cli
adc
popf
adc
mov
add
jg
or
inc
push
out
lahf
jo
pop
test
sub
jl
leave
pop
jbe
inc
(bad)
jge
xchg
xchg
(bad)
fsubr
ss
icebp
mov
pop
xchg
stos
jg
(bad)
popa
aad
stc
xchg
sub
jp
ret
retf
dec
inc
jg
int
push
stc
or
xor
xlat
jge
mov
pop
or
pop
ficomp
sahf
retf
and
mov
mov
sbb
mov
lahf
(bad)
cdq
ds
and
fnstsw
pop
mov
cmp
xchg
out
push
jmp
sub
test
test
js
xchg
sbb
and
adc
cmp
imul
cmc
jle
lock
cmp
stos
pop
cmps
(bad)
jecxz
imul
pushf
or
shl
sbb
nop
jle
push
pop
(bad)
int
add
cld
or
shl
mov
sbb
mov
gs
ds
retf
mov
jg
and
lods
cmc
mov
lods
retf
or
push
int3
cmp
mov
jne
sbb
inc
aad
push
mov
xchg
push
hlt
add
jmp
add
rol
add
ror
sub
pop
and
ins
or
and
mov
stos
stos
push
xor
out
dec
mov
aas
xchg
cdq
call
or
mov
cmc
dec
call
popf
add
mov
inc
clc
xor
(bad)
sub
jle
xchg
mov
fidiv
xchg
pop
push
sbb
xchg
jo
xor
ret
xor
test
jmp
call
add
cld
test
add
push
pop
pop
jne
jmp
mov
fbld
test
daa
out
xchg
rol
push
icebp
pushf
dec
push
enter
(bad)
adc
jns
movs
mov
add
out
inc
in
push
test
and
xchg
mov
inc
sbb
outs
push
add
loop
adc
dec
lods
pop
out
out
push
mov
jge
in
cmp
add
je
pop
mov
out
inc
cwde
aad
ror
jmp
fsubr
outs
fisttp
sub
pop
inc
xchg
adc
push
pop
ret
(bad)
ss
jmp
pusha
fadd
imul
xor
test
in
mov
lock
sub
loop
sbb
sub
cmc
inc
call
popf
inc
cmps
out
jne
mov
pop
ret
sub
daa
jb
push
sub
mov
mov
xor
mov
fstp
cli
sar
mov
mov
sbb
jne
pop
stos
xchg
push
neg
pop
jl
retf
stos
push
mov
clc
xor
xor
sub
jl
fxch
xor
xchg
fild
sub
scas
xor
clc
cmp
pop
clc
sti
scas
and
mov
icebp
adc
pop
jae
add
inc
cmc
loop
jo
ins
out
bnd
pop
aam
dec
or
gs
test
cmps
das
sti
aaa
lahf
dec
inc
mov
adc
xor
add
sbb
and
sbb
add
lods
lods
inc
jecxz
fdiv
xlat
mov
or
xor
aad
cmps
mov
mov
into
popf
pushf
xchg
cmp
mov
out
mov
je
and
xor
or
jb
(bad)
iret
shl
ja
inc
push
enter
(bad)
(bad)
out
add
pop
movs
test
lea
jns
mov
adc
iret
into
push
mov
cmp
test
push
stos
sbb
cmp
and
sub
pop
dec
inc
test
jnp
repz
or
scas
outs
enter
lods
ror
addr16
mov
call
fs
out
lds
iret
fst
sbb
push
enter
inc
imul
sbb
psrlq
sub
push
mov
fst
fldenv
jmp
or
and
cwde
push
xchg
push
sbb
jns
(bad)
out
loope
dec
inc
mov
in
xchg
aas
daa
cmp
sbb
cwde
es
dec
pop
jnp
push
fist
fistp
scas
mov
stos
loope
cmc
xlat
ins
inc
femms
lea
leave
sub
fdiv
popf
jg
int
sti
or
mov
mov
out
fld
lock
or
xchg
and
xor
mov
dec
sar
loope
jle
adc
test
pop
or
push
and
in
out
ror
mov
retf
jae
lock
movs
les
imul
mov
pop
mov
pusha
sbb
sbb
addr16
(bad)
movs
int3
and
xchg
pop
sub
repz
dec
out
sub
clc
sub
retf
adc
xor
stos
cwde
jbe
mov
xor
push
cmp
xchg
mov
and
(bad)
sti
repnz
test
and
xchg
dec
mov
pop
cwde
xor
jns
or
sub
mov
xor
jne
test
cmps
arpl
xchg
add
mov
out
sti
leave
mov
inc
pop
call
scas
pop
(bad)
mov
add
sub
mov
loope
retf
ror
and
xor
mov
cmc
cmc
and
retf
out
addr16
adc
outs
xlat
mov
ror
leave
outs
(bad)
enter
mov
mov
cmp
fsubrp
lock
push
sub
adc
daa
mov
(bad)
push
int
mov
push
jno
sub
cmc
je
or
ret
aaa
pop
repnz
and
push
pop
sub
cs
add
push
pop
cmp
lahf
lods
lea
dec
(bad)
adc
into
mov
lods
shl
stos
icebp
pop
or
aad
fsub
das
sbb
test
adc
sub
ret
cmp
ins
mov
out
idiv
cmp
popf
mov
mov
mov
mov
pusha
mov
xchg
xchg
mov
pop
jmp
imul
int3
or
test
adc
dec
adc
lea
or
xchg
jg
jmp
pop
movs
ret
test
fld
(bad)
aas
fisttp
inc
jno
xor
cdq
jns
pop
mov
shr
inc
mov
loopne
mov
add
(bad)
or
and
push
dec
jl
aaa
cmp
jp
adc
pop
mov
not
div
aad
pop
pop
xor
mov
sbb
mov
daa
fimul
jb
jae
test
push
jge
cmp
out
mov
pop
nop
sub
mov
call
inc
ret
iret
out
and
ss
xchg
mov
mov
clc
lods
loop
test
sbb
jge
movs
mov
popf
mov
shl
loope
sub
or
je
adc
mov
push
xchg
daa
ret
pop
dec
mov
push
xchg
adc
and
out
outs
jl
out
sbb
iret
(bad)
test
ret
add
aas
in
jge
dec
dec
jle
fidiv
xlat
xchg
mov
les
add
jmp
iret
and
in
mov
js
les
push
cmps
rcr
xor
aaa
addr16
in
(bad)
mov
imul
jp
xchg
push
fstp
pop
retf
nop
call
sbb
out
sbb
add
ret
sbb
xchg
ds
jno
imul
jno
(bad)
scas
pushf
inc
pop
inc
jmp
add
fcmovne
fisubr
inc
mov
pusha
push
dec
add
adc
pushf
daa
not
xchg
lea
(bad)
adc
adc
inc
mov
repnz
adc
mov
inc
ja
out
movs
les
adc
push
lods
push
mov
clc
adc
in
and
xchg
xlat
inc
pop
in
push
arpl
add
fucomip
jno
aam
mov
cs
hlt
pop
jo
out
xchg
aas
dec
or
dec
imul
push
bound
test
aam
aaa
mov
inc
lahf
aam
adc
into
sub
inc
sahf
push
push
push
pusha
loop
int3
sub
sub
stc
call
push
jne
lods
std
ds
adc
dec
push
(bad)
push
ret
pop
sbb
or
xor
mov
and
pop
pop
pop
cmp
xchg
dec
and
mov
mov
jle
pop
mov
xor
dec
call
cmp
mov
cmp
mov
mov
ds
jb
rcl
or
xchg
sub
push
adc
leave
call
aaa
and
inc
push
(bad)
fs
xchg
xchg
in
pop
pop
sbb
cdq
mov
stc
cld
(bad)
fsub
faddp
popa
fs
inc
jne
cmp
(bad)
mov
jne
cmp
mov
fild
mov
mov
push
and
xlat
dec
mov
enter
mov
xchg
retf
inc
fnstsw
js
adc
sbb
adc
cmp
bound
xchg
fstp
mov
or
test
pop
leave
test
imul
xchg
cmp
dec
jecxz
in
dec
shr
xor
push
pop
sub
aam
cmps
ss
add
mov
pop
pop
dec
ins
xchg
clc
or
aad
je
hlt
icebp
ins
test
sub
scas
ins
cmp
mov
xor
int3
mov
adc
and
call
xchg
js
lds
rcr
add
lods
sbb
into
(bad)
sar
sub
pop
jae
jae
mov
ret
jle
dec
xchg
std
xor
lods
daa
and
je
lahf
jo
in
and
pop
and
call
outs
push
jno
pushf
fisubr
(bad)
aaa
cmp
mov
pusha
gs
mov
test
cmc
inc
pop
sbb
fs
dec
popf
and
mov
pop
mov
outs
loop
xchg
xchg
inc
fnstsw
bound
cld
xor
out
pop
push
test
into
push
test
jbe
jge
pop
cwde
push
and
inc
call
lahf
rcr
xchg
(bad)
mov
xchg
int3
clc
fsubr
mov
int
and
imul
xchg
cmc
dec
jmp
or
dec
fwait
inc
fsubr
add
mov
in
pop
jns
popa
adc
pop
cmp
xchg
inc
mov
dec
inc
jno
mov
add
mov
xchg
shl
aad
or
cmp
cld
stc
mov
push
lahf
xchg
test
cmc
xor
dec
add
in
mov
cmps
sub
jmp
and
fsub
in
cmp
jo
mov
xchg
not
and
sub
loop
xor
jl
jecxz
aad
cmp
add
xor
xchg
test
mov
inc
xchg
lods
repnz
nop
pop
sub
arpl
mov
xor
int
add
add
std
jl
popf
mov
sbb
jb
cmp
in
jg
dec
jno
mov
mov
mov
pop
mov
inc
sub
jbe
adc
inc
sahf
mov
call
js
push
jl
mov
aam
cmp
ss
call
xchg
addr16
xlat
push
mov
retf
push
jae
sbb
jne
(bad)
aas
cmp
cmp
push
ret
cmps
add
out
ror
je
mov
or
(bad)
adc
fcom
pusha
shr
fnstsw
mov
and
out
retf
push
cwde
call
push
outs
inc
aas
sub
mov
(bad)
(bad)
(bad)
in
jp
inc
arpl
inc
lods
sub
pushf
xor
int
push
sub
popa
cs
mov
or
mov
jmp
into
add
inc
lea
push
sub
ffree
mov
repnz
sbb
test
loop
or
retf
imul
(bad)
stc
xlat
mov
fwait
add
adc
mov
jns
xor
cmc
scas
mov
xchg
fwait
cmp
mov
xchg
dec
jecxz
div
add
push
mov
mov
and
sbb
xchg
inc
clc
adc
mov
call
xchg
mov
adc
xor
adc
loop
cmp
(bad)
movs
loop
cmps
sbb
and
inc
jle
mov
shl
push
dec
mov
into
inc
imul
sub
inc
lock
fldenv
pop
iret
retf
lahf
push
movs
imul
push
fistp
or
dec
int3
pop
ss
es
sbb
cdq
jae
xor
mov
sar
jmp
add
push
test
outs
jns
mov
bound
adc
sahf
les
das
sub
mov
aad
test
jp
arpl
loop
mov
mov
not
and
and
ins
cmc
faddp
add
fs
inc
mov
aas
shl
dec
jge
mov
addr16
and
jmp
adc
pop
clc
int
add
ror
outs
hlt
push
test
push
(bad)
jecxz
int3
adc
cmp
cmps
mov
mov
leave
pop
sahf
mov
(bad)
push
jns
out
jp
dec
cmp
cmp
in
prefetch
jb
lods
push
sbb
pop
push
movd
sbb
sbb
pop
arpl
cmp
fwait
pop
idiv
jae
int3
pop
add
out
sahf
addr16
xor
pop
ja
jne
jecxz
nop
xchg
fdivr
xchg
sbb
sbb
(bad)
fidiv
add
add
loopne
cdq
dec
xor
in
xchg
fld
(bad)
ja
push
iret
es
fs
mov
popf
inc
pushf
out
jl
mov
out
mov
ret
mov
imul
lods
not
retf
bnd
cmp
mov
xchg
lock
ror
fild
gs
push
jbe
pop
push
sub
xor
jae
mov
mov
cmp
lds
loopne
jne
or
or
push
in
cld
inc
mov
pop
hlt
sub
adc
mov
lods
adc
xchg
cmp
and
ds
xchg
repz
xor
in
cmp
jge
movs
pop
xchg
outs
dec
push
imul
je
jb
adc
clc
fwait
cdq
add
mov
pop
jg
jge
fistp
fwait
xor
stos
sub
sbb
test
repnz
and
nop
and
add
in
mov
mov
cmp
js
dec
pop
xchg
or
sub
out
jmp
or
retf
push
jnp
ret
jecxz
add
enter
ss
jg
mov
push
jo
daa
sub
sub
sub
xor
jae
(bad)
push
cmp
sub
adc
add
scas
mov
fstp
in
push
push
sahf
nop
jle
push
in
jmp
xor
mov
mov
nop
nop
in
lea
push
mov
xor
bound
jae
pop
pop
dec
js
pop
jnp
jo
mov
fcompp
sub
dec
sbb
inc
rcr
hlt
sub
cmovb
push
inc
imul
or
imul
xor
mov
push
idiv
cmp
inc
aas
and
dec
pop
cwde
and
dec
mov
push
xor
push
test
arpl
call
sbb
outs
daa
cld
call
in
es
adc
mov
retf
ss
pop
aaa
pop
hlt
inc
dec
xor
pusha
cwde
pop
sub
adc
or
fcom
sbb
or
lock
adc
sbb
test
movs
int3
push
jmp
fsubr
sub
fcom
jb
pop
pop
test
push
les
mov
aas
dec
adc
gs
mov
xchg
repnz
lods
mov
(bad)
cld
shl
in
idiv
(bad)
mov
adc
ror
popa
ds
scas
xchg
mov
sub
repnz
mov
stos
sbb
xor
fnsave
and
outs
sub
sub
inc
adc
loopne
(bad)
stc
push
mov
gs
ds
movs
(bad)
xor
mov
xor
xchg
sbb
cld
in
push
inc
aaa
xor
loop
and
mov
adc
in
add
push
pop
int
dec
mov
imul
and
jns
jmp
in
or
js
test
lock
gs
gs
mov
(bad)
mul
dec
das
stos
lds
xor
fld
dec
pop
cmp
mov
out
cdq
je
pop
sub
xchg
push
or
jb
xchg
inc
push
pop
and
jl
sub
das
xchg
jnp
mov
xchg
push
jae
stos
stos
dec
cmp
pop
outs
call
das
xchg
pop
dec
adc
jp
(bad)
imul
add
jle
out
clc
(bad)
xlat
sub
arpl
or
mov
mov
xlat
mov
cli
or
test
int
lods
in
pop
xor
mov
jno
mov
pop
lds
push
pop
sti
adc
mov
and
out
dec
mov
jnp
or
cmp
frstor
jae
outs
imul
mov
mov
xchg
repnz
stos
adc
mov
outs
fisttp
fs
aad
cmp
mov
mov
int
fnsave
push
mov
and
push
(bad)
stos
push
int
mov
and
pop
in
sbb
mov
and
mov
test
mov
pop
pop
mov
push
mov
push
lods
and
sbb
sbb
ins
sar
mov
xchg
in
sub
or
jmp
shl
imul
lods
jne
sub
jl
add
mov
add
mov
es
arpl
call
sub
test
imul
fucomp
(bad)
out
adc
ins
push
adc
scas
adc
call
cdq
inc
fwait
mov
call
push
ret
sub
push
xor
ret
mov
push
retf
into
mov
mov
add
int
test
ret
inc
jg
jl
push
scas
stc
inc
adc
xchg
sub
leave
retf
mov
cmp
jae
add
imul
cmps
xor
sub
outs
leave
mov
fdivr
push
mov
jle
adc
ds
push
sbb
int3
push
loop
rcr
push
mov
lds
or
test
inc
sysret
aam
cli
inc
call
xchg
inc
imul
pusha
push
push
shl
cmp
mov
cmps
adc
fiadd
fwait
xlat
fistp
inc
add
dec
repz
fwait
jg
pop
mov
push
mov
xor
sbb
loop
sbb
movs
mov
push
ds
push
fdivr
sti
fdivr
sti
clc
pop
sahf
enter
sbb
mov
jbe
imul
add
xor
adc
cld
scas
cdq
ja
cwde
and
call
mov
pop
xchg
ins
gs
ffreep
jp
jl
sbb
push
xor
adc
cdq
and
mov
cwde
cmp
(bad)
fwait
cmc
and
call
(bad)
push
(bad)
jno
mov
adc
push
fcmovne
push
dec
and
ror
leave
xchg
fdivp
pop
bound
(bad)
repz
or
jno
out
xor
pop
push
adc
cmps
push
push
cmp
push
push
mov
mov
daa
sub
and
jmp
cmp
xchg
cmp
mov
and
push
lahf
inc
js
(bad)
lods
int
xchg
fstp
mov
sbb
push
bound
inc
sahf
xor
push
mov
jnp
ins
dec
test
cmp
jo
jmp
mov
icebp
pop
pop
outs
and
push
add
cmp
push
sti
mov
jmp
mov
imul
inc
clc
xchg
fldcw
lock
fs
lods
sub
adc
and
arpl
mov
mov
hlt
call
jmp
cli
sub
pusha
cli
stos
test
mov
add
inc
hlt
test
pop
jbe
(bad)
aam
inc
(bad)
jle
cdq
outs
out
daa
dec
xor
mov
ret
cmp
stc
push
in
adc
or
lahf
pop
mov
xchg
xchg
mov
cs
(bad)
repz
shr
mov
aam
iret
pop
xlat
pop
mov
pop
push
cld
dec
out
sbb
pop
xchg
pop
jae
aam
popa
call
loop
jne
mov
jae
sub
sub
leave
(bad)
jecxz
sub
jb
aaa
js
push
sbb
xor
dec
sbb
call
cmp
push
fwait
enter
sub
mov
inc
outs
jmp
ss
sub
pop
sbb
(bad)
lods
outs
lahf
jmp
push
cmp
ss
mov
scas
dec
adc
and
pop
addr16
out
out
out
stos
xor
mov
addr16
push
cmp
mov
cmp
call
lock
mov
sbb
pop
imul
ins
int3
repz
push
pusha
fstp
leave
int
xchg
mov
nop
je
mov
lea
mov
fld
inc
mov
adc
jno
jp
out
adc
outs
enter
jg
xchg
adc
icebp
and
adc
cmp
ficomp
add
imul
cmp
js
jnp
(bad)
pop
fcmovb
and
mov
leave
outs
cmp
sub
or
add
push
pop
jmp
cmp
ss
rcl
push
cmp
cmc
adc
data16
jge
jmp
push
not
out
jp
aas
dec
daa
add
push
rcr
or
xor
daa
mov
xchg
es
rcl
dec
inc
add
push
fld
mov
ds
sub
push
pop
sahf
mov
adc
cdq
out
pop
outs
(bad)
pop
mov
js
mov
in
pop
pop
fld
popf
mov
clc
cs
mov
ret
dec
xchg
dec
xchg
mov
jmp
sub
in
out
dec
(bad)
cli
xchg
inc
mov
sbb
je
pop
adc
fcom
dec
push
fld
jbe
(bad)
and
mov
out
das
jmp
add
dec
inc
shl
add
xlat
inc
je
cmp
jmp
hlt
in
mov
fdiv
sahf
(bad)
mov
lock
daa
mov
imul
push
pop
sub
retf
lds
mov
push
push
retf
mov
rcr
imul
pop
not
sbb
stos
jg
jb
nop
loop
sbb
ret
xor
mov
mov
mov
add
pop
sbb
enter
ret
call
adc
cmc
inc
sub
jge
icebp
xchg
cmp
aam
mov
mov
and
lods
pop
stc
pop
push
xchg
add
pop
imul
stc
cld
sbb
mov
jmp
and
or
js
xlat
je
shr
stos
cmps
dec
mov
pop
shr
add
(bad)
mov
es
or
mov
inc
ss
jecxz
aad
xor
dec
(bad)
icebp
test
jle
adc
mov
retf
movs
mov
scas
add
icebp
sbb
mov
iret
and
push
shl
adc
popf
cmp
mov
cmps
push
cmp
and
and
retf
pop
xchg
call
pop
inc
push
cmc
into
mov
mov
loopne
mov
jge
xchg
inc
sub
int
lods
pushf
xlat
nop
fist
fidiv
fsub
push
inc
div
and
push
and
or
mov
mov
and
jo
and
cld
test
aas
pop
outs
ret
fnstcw
xchg
xchg
rcl
sahf
xchg
cmp
fbstp
xchg
iretw
(bad)
jmp
pop
loopne
rcr
push
sub
out
ins
mov
xchg
jl
sub
or
fucomi
push
retf
pop
and
dec
stc
loope
cmp
pop
in
lea
mov
mov
xor
xchg
cli
mov
aam
lods
xchg
movs
test
je
pop
ins
sbb
mov
xor
jecxz
std
xor
adc
inc
sbb
fnsave
sbb
aam
dec
cmp
arpl
push
loopne
dec
sbb
dec
push
jp
mov
scas
mov
test
ret
into
jb
ja
pop
outs
in
std
xor
and
jmp
rcl
xor
cld
jmp
shl
stos
jbe
pop
or
mov
lock
cmps
inc
mov
movs
in
xlat
pop
in
sub
jmp
out
mov
sahf
loope
ss
mov
cmp
add
stos
sbb
push
aaa
jmp
cmp
jle
pop
aaa
pop
call
jmp
retf
iret
iret
jg
adc
and
add
cli
jl
lds
pop
loope
mov
aam
sub
sub
jb
call
cmp
lods
mov
sbb
movs
xor
inc
dec
in
push
test
sar
in
adc
in
dec
pop
les
and
mov
in
cwde
cld
pop
pop
xchg
and
clc
sbb
lea
add
iret
movs
dec
sbb
gs
push
int3
push
pop
and
mov
(bad)
outs
dec
mov
popf
jb
mov
push
out
xor
int3
mov
out
push
pop
xor
xor
jno
shl
stc
mov
add
mov
dec
sbb
arpl
push
inc
adc
mov
inc
jmp
jg
rcr
mov
call
hlt
xor
loope
popa
mov
(bad)
jle
adc
xor
pop
jnp
jne
int
sahf
out
iret
lods
shl
sbb
test
loope
sub
mov
jnp
cwde
cmp
test
out
int
xor
mov
mov
xchg
push
je
out
jno
or
(bad)
sub
or
inc
popa
xchg
and
xor
jg
daa
outs
mov
inc
add
cwde
sbb
imul
xchg
pop
icebp
ret
mov
xor
sub
jle
ret
popf
movs
imul
mov
mov
and
inc
popf
add
daa
push
out
nop
mov
inc
pusha
sub
js
ret
aaa
imul
mov
push
sbb
pop
push
mov
out
out
jle
push
int
(bad)
lea
mov
stos
(bad)
js
retf
mov
inc
sbb
(bad)
sbb
mov
or
aad
fistp
xlat
mov
loop
popa
inc
fild
lods
mov
and
(bad)
cli
lea
sub
test
mov
mov
cmp
pop
xor
repnz
fdiv
adc
sti
test
push
sahf
outs
mov
mov
inc
jmp
shr
out
cmps
mov
shl
test
cld
cdq
jecxz
cmps
and
gs
or
inc
jnp
out
cmp
leave
add
jg
out
inc
mov
mov
jmp
repz
jns
mov
push
inc
jnp
mov
pop
rcl
mov
xchg
and
add
mov
ins
movs
cmp
aaa
mov
mov
clc
sbb
push
cmp
aad
sahf
iret
scas
push
jns
push
and
or
stos
fwait
push
mov
lahf
and
ins
stc
(bad)
xor
outs
mov
stos
jns
je
mov
or
xchg
les
xlat
fnstcw
imul
inc
push
imul
push
sbb
fstp
cmp
jns
dec
push
mov
inc
sub
lahf
cli
or
sbb
int3
bound
jle
clc
jp
mov
out
loopne
pushf
jg
jae
mov
push
mov
pop
sbb
div
outs
je
jecxz
pusha
cwde
retf
jle
scas
int3
out
jae
cld
jge
cdq
call
popf
les
aas
and
imul
aaa
iret
mov
pop
xlat
xor
jno
shl
mov
and
push
mov
push
push
jl
and
mov
cdq
jle
sti
stos
mov
inc
sahf
xchg
mov
xchg
jbe
or
movs
outs
add
mov
cs
push
fsub
cmp
and
mov
dec
fnstsw
sbb
test
or
mov
movs
jecxz
sub
push
cmc
mov
mov
nop
ins
pop
adc
ins
imul
fstp
outs
push
mov
sbb
cmp
push
ret
or
dec
pop
repnz
xor
dec
dec
lods
mov
enter
sub
sbb
jnp
push
pushf
pusha
fwait
pop
jnp
shl
neg
dec
and
js
mov
jmp
push
cmc
xchg
outs
dec
mov
and
int3
xchg
cmp
jae
cmp
mov
xlat
and
push
shl
imul
jg
fsubr
pop
stos
jb
hlt
mov
mov
jl
popa
mov
test
mov
inc
mov
pushf
lds
daa
loop
adc
call
ret
iret
xor
test
mov
sbb
sbb
fsub
xor
addr16
cmp
pusha
cmp
nop
jns
push
mov
clc
pop
pusha
loope
cmpxchg
add
lods
pop
jnp
arpl
cmp
mov
inc
in
loop
adc
sub
aad
loop
mov
fdiv
xor
call
or
ss
mov
adc
sub
jle
cmp
into
leave
jge
xlat
mov
movs
or
ror
sub
pop
and
sub
pop
mov
gs
pop
out
push
aas
les
mov
mov
jp
cmp
jno
(bad)
mov
cmps
fisubr
dec
mov
lods
aad
inc
ror
ins
cli
lock
out
sar
fisubr
adc
ror
rcl
cld
popa
jmp
inc
mov
adc
mov
xchg
mov
sub
in
or
out
ins
sar
mov
add
add
xchg
dec
mov
dec
push
cmp
int
sbb
push
mov
and
ret
pop
stos
mov
enter
cmc
ror
scas
push
cld
push
cmp
out
pop
and
in
push
push
idiv
push
(bad)
popf
sbb
inc
and
shl
call
jnp
lea
test
jns
ss
call
push
jg
lock
cmp
ror
push
xor
retf
aad
xor
sub
stos
mov
(bad)
fldenv
(bad)
cmp
mov
cld
dec
not
aam
adc
adc
fcomip
cmps
(bad)
iret
(bad)
aas
pop
inc
mov
cmp
pop
(bad)
lock
mov
js
inc
add
sub
push
pop
mov
nop
mov
popf
push
add
aas
sbb
jl
ret
iret
cmp
loope
add
mov
div
int3
pop
cmps
push
sbb
add
xor
pop
push
cmp
inc
or
xor
out
add
int
(bad)
out
out
xchg
xor
pop
add
scas
cmp
pop
aas
mov
sub
jo
ds
push
mov
cmc
mov
cvtdq2ps
add
push
pop
adc
inc
in
iret
sbb
jmp
enter
mov
and
(bad)
cmps
out
inc
adc
inc
stc
cdq
xchg
sti
sub
imul
cwde
jmp
daa
sub
and
mov
das
gs
jl
add
repz
xchg
pop
lds
pop
lock
shr
jmp
outs
dec
push
cmp
mov
enter
inc
push
stos
aaa
mov
push
aam
ss
mov
inc
fst
int3
in
jl
mov
dec
mov
push
pop
adc
lods
sub
ja
pop
mov
xchg
or
das
fcom
stos
retf
dec
sub
aad
leave
sub
jmp
ret
xor
cmps
shl
cmp
or
hlt
fld
jmp
js
mov
lds
xchg
imul
test
inc
js
sti
(bad)
stos
jns
fcomp
(bad)
push
and
popa
fstp
cmps
pop
inc
cmp
mov
sub
mov
fild
cs
cmps
ins
call
push
imul
cmps
leave
mov
call
pop
add
cdq
rol
mov
retf
xchg
mov
adc
inc
lock
mov
fcmovb
or
pop
rcr
ror
in
lea
int
or
rcr
daa
gs
jecxz
loopne
cmp
cmps
(bad)
outs
mov
leave
mov
jg
add
(bad)
xchg
jmp
mov
mov
mov
ins
mov
outs
pop
test
cmps
mov
or
stc
test
adc
psllw
mov
imul
lahf
out
or
push
push
hlt
mov
push
cmp
jle
fcmovnbe
cs
out
mov
add
xchg
push
cmp
sbb
stc
sub
mov
sub
lahf
pushf
mov
enter
lods
das
jge
sar
push
std
xchg
daa
and
stos
push
xor
mov
ret
cmps
or
mov
aaa
add
rcl
jmp
test
and
popf
mov
adc
in
nop
movs
adc
ja
aas
pop
mov
ins
or
sub
push
out
stos
test
fist
dec
mov
pop
je
xor
imul
out
das
push
cmp
hlt
xor
push
(bad)
sbb
push
les
mov
jmp
pusha
sub
shl
mov
mov
adc
cmp
xchg
cwde
ja
es
les
aam
lods
sbb
pop
push
stc
(bad)
enter
xchg
sbb
pop
push
sbb
adc
addr16
sti
nop
mov
fsubr
mov
dec
mov
fbstp
shl
fild
push
outs
add
(bad)
ficomp
jp
sbb
(bad)
mov
mov
and
in
add
xchg
mov
rcl
rcl
aaa
iret
int
ins
mov
imul
nop
mov
push
mov
imul
or
xchg
inc
fwait
and
pop
pop
push
mov
xchg
icebp
fsubr
xor
inc
push
arpl
mov
jge
adc
fwait
dec
mov
das
add
jae
aam
out
mov
test
adc
or
or
jb
int
jmp
aam
jnp
xor
jle
mov
push
jl
lods
inc
data16
mov
dec
lods
xchg
inc
sub
push
pop
inc
out
push
loopne
xor
sub
fs
idiv
dec
xchg
les
pop
mov
pop
cmp
push
mov
mov
jle
ret
xchg
jb
xor
imul
lahf
xor
inc
in
fcom
push
rol
inc
pop
or
mov
push
repnz
cmps
retf
jp
cmp
cli
inc
cmps
aas
add
cmps
jb
sahf
push
aaa
adc
xor
jge
js
sub
and
sbb
mov
cdq
xor
frstor
iret
mov
push
mov
pop
cld
lea
leave
dec
jg
call
ret
xor
aas
and
push
xchg
push
sub
ds
xchg
ds
jnp
loope
stos
xchg
push
leave
loope
ret
xchg
and
mov
ds
bound
pop
fimul
or
push
jb
aaa
and
mov
adc
out
pop
xchg
call
in
xor
cmp
push
aam
add
fs
loopne
push
test
ret
mov
jle
pushw
fistp
loopne
sub
push
adc
cld
aam
ins
cmp
cdq
clc
mov
mov
sahf
test
in
in
xchg
and
add
dec
jle
call
aam
aam
mov
stos
or
jo
es
out
push
imul
(bad)
cmp
xor
out
outs
jmp
mov
inc
bound
mov
cs
test
sub
fcmovb
add
ret
in
mov
or
(bad)
lods
adc
sar
pop
in
inc
add
inc
jno
and
xor
icebp
pop
repnz
jg
lods
jl
cmp
call
add
stos
repz
mov
movs
cdq
pop
rcr
add
mov
daa
aas
adc
outs
jae
out
pop
fnstcw
xor
ret
xchg
test
and
jno
jl
xor
in
sub
pop
popf
dec
push
mov
jge
inc
mov
sub
xor
dec
retf
int3
not
pusha
in
in
push
dec
cdq
mov
out
inc
je
dec
test
push
sub
mov
xchg
mov
inc
ror
sbb
pop
in
jbe
sbb
or
addr16
mov
outs
sub
or
pop
pop
sbb
nop
sbb
sbb
dec
cmp
in
das
add
popa
pop
je
inc
popa
(bad)
ret
or
mov
cmp
pop
jns
dec
jae
retf
retf
mov
sub
ins
movs
mov
inc
xor
sbb
jb
add
addr16
xchg
jmp
add
or
pop
adc
mov
and
in
cmp
popf
pop
fs
fisttp
aaa
inc
sub
dec
sbb
xchg
inc
and
sub
mov
jbe
aam
add
out
pushf
jmp
not
daa
jae
jle
fdivr
cmp
push
jo
test
in
xchg
mov
sub
fstp
jge
fisubr
pop
pop
add
mov
dec
inc
adc
and
inc
push
mov
daa
dec
lea
sahf
mov
fs
jp
push
lods
into
cmps
stos
shl
sub
and
inc
push
adc
mov
lods
jp
push
bound
clc
rcl
mov
dec
and
pop
(bad)
jo
(bad)
ret
pusha
aam
(bad)
xchg
fcomip
inc
out
mov
lods
xor
cmp
adc
push
lock
pop
aaa
daa
jp
mov
jno
mov
popa
adc
addr16
jp
mov
cmp
sti
mov
mov
dec
ss
adc
out
mov
jle
sti
fucomip
xchg
mov
xor
push
sbb
sub
(bad)
imul
sub
jle
jp
pop
adc
mov
xchg
retf
js
movs
aam
and
push
add
addr16
or
cmps
xlat
movs
repnz
cdq
enter
shl
mov
js
into
mov
pop
add
fist
into
add
fsub
loope
mov
movs
popf
pop
clc
mov
in
cs
shl
imul
or
sub
inc
jg
out
xchg
nop
push
shr
sub
into
push
push
jl
adc
(bad)
stos
sbb
inc
cmp
xor
test
fidivr
jmp
adc
mov
loopne
jbe
sbb
(bad)
jle
sub
js
sub
cmp
outs
jle
dec
hlt
add
retf
sbb
out
dec
in
mov
inc
push
in
mov
imul
push
pop
(bad)
cmp
jbe
test
pop
in
cmp
add
xchg
je
inc
xor
jbe
fsub
inc
pushf
stc
psubd
sar
or
or
xor
pop
mov
iret
push
outs
std
jmp
pop
cmp
push
sbb
jp
dec
iret
sub
pop
cs
fstp
adc
imul
or
adc
or
fisubr
pop
clc
adc
inc
xor
lods
mov
lea
movs
scas
dec
or
pop
lds
fs
jbe
sar
jbe
sti
aaa
movs
jg
add
fisttp
dec
leave
(bad)
test
jno
cs
rol
xchg
jmp
dec
sbb
rcr
push
mov
xchg
mov
ja
ins
rol
(bad)
in
jl
inc
xchg
jnp
or
loop
ins
sub
mov
cmp
add
jns
cmp
jne
sbb
dec
adc
enter
es
add
aad
adc
or
jnp
jbe
push
cmc
out
sti
aam
pop
cmpxchg
cmc
push
or
sahf
hlt
std
and
sub
or
mov
out
mov
aad
push
inc
pop
jo
jmp
inc
pop
pop
jmp
ins
xchg
shr
sbb
jae
lds
or
push
pop
jg
mov
push
mov
jno
dec
adc
aaa
sahf
sbb
mov
loop
lahf
mov
xor
mov
add
mov
cdq
std
cmp
cmp
pop
sbb
xchg
adc
dec
inc
add
push
and
and
push
pop
js
jmp
js
sahf
xchg
or
jge
pop
arpl
cli
ret
jl
cmp
out
xor
push
sbb
push
std
out
add
xchg
mov
dec
push
adc
adc
(bad)
dec
adc
gs
(bad)
xor
mov
pop
jne
je
iret
test
inc
push
fs
(bad)
cld
rol
movs
sbb
rcl
sbb
add
das
inc
unpckhps
out
dec
test
retf
ins
mov
dec
mov
and
sub
add
inc
cmp
stc
imul
cmp
outs
adc
dec
cmp
cmps
mov
cmp
pop
loopne
mov
or
cmp
dec
xchg
not
inc
add
in
fwait
js
mov
pusha
and
ret
je
mov
dec
mov
jne
push
pop
(bad)
in
and
fwait
sbb
add
loope
lahf
data16
outs
std
jmp
add
mov
dec
mov
fadd
test
mov
ds
pop
leave
bound
sbb
scas
inc
adc
stc
and
jb
ret
adc
jmp
fiadd
into
xchg
cwde
sbb
sub
cmp
ror
in
rol
popa
ss
mov
pushf
mov
dec
aas
add
push
pop
adc
pop
mov
push
adc
jmp
iret
addr16
push
addr16
mov
sbb
mov
jnp
fwait
call
pop
inc
out
pop
psrlq
bound
xchg
jg
pop
ret
cmp
xor
into
sbb
(bad)
rcl
push
adc
retf
push
or
add
clc
push
mov
aas
aad
pop
xchg
loop
test
out
nop
push
mov
test
inc
pop
ficomp
mov
ja
leave
stos
or
in
jne
or
into
mov
ja
je
jno
sub
pop
daa
inc
add
jl
sub
and
inc
sub
cmovo
jmp
fstp
in
nop
mov
xchg
and
cmp
ins
sbb
jg
jmp
icebp
jecxz
dec
(bad)
and
pop
stos
ret
sub
push
std
sub
and
popf
jecxz
or
lds
mov
scas
fld
fwait
retf
cmp
pop
mov
outs
int
mov
shl
dec
xor
and
pop
jg
fwait
push
push
mov
fnstcw
aam
inc
sbb
pop
test
aaa
outs
cs
(bad)
inc
int3
mov
fnstcw
sbb
stos
out
cwde
or
data16
mov
pop
out
test
cli
mov
pusha
sbb
hlt
push
xor
mov
dec
cld
sub
cmp
data16
mov
out
jno
dec
dec
xchg
dec
xor
adc
out
iret
push
dec
push
sub
xchg
and
mov
and
push
cmp
pop
dec
jno
mov
call
int3
mov
or
mov
loopne
sbb
mov
xchg
pop
sti
jo
pop
jne
mov
loop
ror
outs
out
xchg
pop
jae
ds
int
mov
adc
mov
add
or
and
shl
pop
cld
loop
mov
ret
inc
ja
add
and
leave
sti
das
daa
sub
pop
data16
dec
adc
sub
sbb
call
add
push
gs
pop
iret
imul
mov
(bad)
jmp
or
lahf
sbb
mov
jmp
stos
enter
sub
and
daa
gs
fnstcw
adc
ja
movs
and
repz
inc
pop
cmp
test
pop
jecxz
dec
stc
mov
cli
movs
mov
xchg
jb
(bad)
call
clc
xor
mov
call
cld
add
das
fs
pop
push
fsubr
or
add
and
jle
jo
adc
cmp
stc
ins
pop
(bad)
fidivr
iret
adc
cmps
lods
test
push
sbb
lds
push
pop
(bad)
in
mov
xchg
xlat
and
lods
out
pop
inc
loopne
retf
or
mov
imul
xor
dec
fsubrp
jns
sub
call
xchg
adc
pop
call
add
xchg
sub
dec
jnp
xchg
faddp
mov
into
add
add
popf
xor
pop
imul
repz
imul
adc
ror
test
cmp
adc
xor
nop
mov
sti
push
inc
xlat
adc
and
jns
and
jp
movs
xchg
push
sub
mov
int3
js
idiv
mov
or
int3
aas
mov
push
ror
in
mov
das
push
(bad)
das
cdq
add
jbe
jmp
adc
loopne
outs
sbb
sbb
mov
cmps
pop
push
rcr
sbb
rcl
data16
mov
arpl
ret
iret
mov
(bad)
retf
test
inc
mov
repz
push
std
xchg
pop
or
fstp
repnz
cmp
test
dec
adc
fld
xor
cmps
mov
shl
dec
and
(bad)
pop
and
cld
call
push
jge
aad
mov
outs
mov
(bad)
push
icebp
pop
inc
imul
jmp
mov
mov
mov
mov
push
xor
ret
dec
dec
shr
cld
scas
scas
fimul
sbb
xchg
imul
daa
loopne
repz
lds
push
rol
add
or
js
popf
pinsrw
jmp
fwait
aam
pop
mov
or
jb
sub
sbb
and
retf
repz
popfw
aam
out
loope
xchg
int
fdivr
inc
and
enter
cmps
or
aas
and
or
sbb
out
scas
fsubrp
sbb
pop
cmp
or
out
adc
cmp
or
ret
cmc
xor
rcr
test
leave
adc
push
imul
into
ror
adc
cmp
or
mov
and
fdivrp
push
in
out
cmps
(bad)
pop
xor
add
cdq
pop
fdivr
call
loop
std
loop
clc
fmul
scas
xchg
xchg
xchg
sti
pop
cwde
inc
fidiv
and
adc
fdivr
inc
lea
or
arpl
idiv
push
jmp
std
add
std
add
dec
jns
out
cmp
sbb
jge
cmp
in
loopne
lahf
dec
lock
into
dec
mov
pop
repnz
(bad)
xchg
push
stos
stc
js
xchg
mov
xchg
(bad)
lods
mov
call
xchg
stos
push
outs
jns
sbb
push
int
scas
cmp
xchg
push
or
adc
movs
adc
imul
push
push
cmp
out
int
or
mov
mov
mov
jnp
ins
dec
sub
cdq
fst
pop
push
or
pusha
adc
xchg
cmp
inc
fldcw
clc
ins
repnz
jmp
test
inc
js
push
push
inc
mov
or
mov
xchg
shl
pop
mov
xchg
out
or
lock
enterw
fistp
xchg
pop
ror
iret
fnstcw
loope
mov
cld
push
aas
arpl
loop
or
jno
ja
mov
sti
inc
pop
es
sar
jp
dec
rcl
out
mov
pop
sub
fsubr
leave
dec
fst
pop
and
jns
sub
or
aad
sbb
sub
scas
fist
sub
jp
cmp
and
xor
mul
(bad)
mov
xchg
stos
ins
lahf
out
out
dec
sahf
scas
or
ss
adc
and
xor
sub
pop
jns
push
stc
movaps
std
adc
jg
or
mov
out
aad
daa
push
outs
ss
in
sbb
mov
mov
or
aam
in
mov
xchg
stos
fs
and
leave
out
adc
arpl
dec
retf
sub
sbb
xchg
popf
cmp
xor
and
imul
add
push
inc
pop
ret
cmps
rol
push
or
mov
test
mov
loope
ret
popa
jg
mov
sbb
sub
cmc
clc
dec
mov
add
jns
iret
lods
stc
mov
leave
out
cmp
jg
js
adc
into
add
xor
adc
xor
jnp
leave
(bad)
es
fimul
in
xchg
add
cmp
adc
into
ins
bound
xchg
repz
call
emms
push
cdq
std
aad
pop
inc
shl
mov
mov
(bad)
in
add
data16
cmp
cmp
ror
pop
fst
ret
sbb
aaa
sbb
test
out
jno
and
scas
fsub
xchg
out
pop
(bad)
dec
or
dec
pop
cmp
ins
push
sbb
lahf
push
add
adc
pop
push
or
in
push
dec
xchg
sahf
popf
jecxz
popf
test
pop
lea
mov
int3
retf
and
sbb
cmp
jl
sysret
cli
add
out
ret
and
add
sbb
fist
cmp
lea
dec
mov
daa
adc
push
mov
mov
jnp
and
fwait
cmp
xchg
cdq
cmp
jne
cdq
jnp
mov
ror
xor
mov
std
jp
xchg
cmp
add
pop
pop
dec
jbe
(bad)
mov
dec
std
mov
xchg
sar
jb
and
inc
in
mov
sub
inc
dec
dec
bound
scas
sbb
movs
lock
in
retf
jnp
sbb
aas
add
int3
mov
pop
sbb
sti
mov
popf
imul
dec
inc
cmp
adc
xchg
sbb
jg
stc
jns
je
(bad)
fwait
or
jbe
cmovl
bound
dec
hlt
pop
pop
push
call
jae
lds
cwde
ds
mov
(bad)
sti
stos
sbb
mov
sti
in
ds
in
aam
sbb
(bad)
cmc
ja
adc
ret
mov
cmp
mov
es
int3
mov
out
jmp
sbb
rol
or
pop
ss
mov
loop
int
pop
sar
dec
sub
dec
push
ds
push
mov
sbb
cmp
sbb
mov
in
sahf
cmps
xor
and
pop
ja
mov
pusha
push
or
add
into
int3
jbe
add
xchg
sbb
shl
xchg
and
ss
jp
jno
mov
pusha
xor
xor
scas
fiadd
pop
stos
nop
in
cmp
sti
into
mov
in
pop
xchg
inc
push
enter
pop
add
add
pushf
mov
mov
adc
xor
leave
xor
xor
jge
adc
dec
dec
sub
push
push
dec
push
mov
loopne
dec
pop
jbe
mov
lods
aas
cld
repnz
or
inc
add
mov
adc
mov
ret
mov
clc
add
push
sub
mov
sbb
fadd
cmps
push
sub
stc
dec
jnp
mov
ds
xchg
rcl
dec
(bad)
out
inc
repz
out
jne
loopne
ja
mov
ret
cmp
add
retf
cmp
sbb
dec
shr
lds
leave
dec
je
test
xchg
mov
mov
sbb
push
mov
(bad)
push
mov
push
inc
ret
test
mov
pop
das
cmp
push
add
int3
pop
pop
(bad)
xlat
(bad)
bound
into
mov
dec
mov
xchg
jecxz
test
mov
int
pop
out
repnz
push
or
push
dec
mov
sbb
dec
mov
repz
das
mov
adc
repnz
out
imul
xchg
dec
mov
or
je
ins
and
push
js
out
jmp
ins
mov
cdq
imul
jbe
mov
bound
out
xor
add
aad
fistp
dec
outs
int
dec
or
inc
mov
inc
(bad)
mov
pop
push
(bad)
jb
mov
mov
dec
sti
lods
repnz
or
adc
fbld
mov
push
sbb
inc
test
pop
push
test
mov
cwde
jns
mov
xchg
xchg
sub
test
pop
jne
mov
lea
lock
in
scas
and
shr
out
cmp
jge
ss
test
out
sub
mov
xor
mov
add
aad
dec
dec
or
and
(bad)
sti
cmps
rol
or
adc
xor
sub
push
out
adc
retf
mov
jbe
les
jns
xchg
xchg
cmp
mov
lods
mov
jns
scas
lock
pushf
je
inc
sbb
fbstp
and
dec
cs
xchg
lods
push
shr
jg
rol
or
(bad)
aas
dec
jge
mov
sbb
mov
and
and
push
sub
mov
fdivr
pop
fwait
sub
sub
gs
aaa
lock
mov
int3
sub
xchg
add
mov
test
out
mov
call
mov
inc
sbb
jbe
mov
xor
retf
in
mov
pop
xchg
push
mov
call
adc
or
pop
les
outs
outs
cmps
outs
retf
push
cld
fnstcw
cli
or
pop
out
mov
shr
imul
(bad)
or
hlt
movs
dec
jl
retf
pop
and
jo
xor
leave
das
lods
pop
adc
push
add
aaa
sub
jns
dec
arpl
out
push
fwait
adc
xor
stc
out
xchg
cmove
pusha
nop
mov
and
ins
xor
mov
jns
pusha
rcl
in
sbb
clc
test
pop
pop
lods
and
sub
adc
call
pop
jb
(bad)
push
ret
cmp
scas
jo
and
and
out
dec
or
cwde
loop
push
mov
test
xchg
fsubr
ror
stc
mov
adc
cld
daa
and
jmp
jbe
cmp
scas
popf
jle
mov
ss
cwde
cmp
jb
inc
xor
stc
in
lahf
test
aam
ins
pop
mov
inc
test
dec
sbb
dec
cmp
pop
sbb
jl
(bad)
sbb
aam
ins
mov
fnstsw
rcl
mov
jecxz
enter
repnz
inc
ds
jno
xchg
pop
sahf
jg
int
shr
bnd
not
jle
jl
dec
push
dec
bound
cmp
mov
mov
jmp
test
sbb
pop
(bad)
jecxz
sub
jmp
(bad)
xor
das
icebp
xchg
sbb
stc
pop
(bad)
xor
dec
in
shl
(bad)
jb
ins
cmp
xchg
dec
pop
int
test
je
call
std
lahf
xor
lock
xchg
mov
into
ret
or
cwde
and
xor
fcmovnu
xor
mov
ss
shl
int
test
mov
jns
popf
inc
fnstenv
call
call
mov
mov
mov
arpl
xchg
popf
lods
inc
in
mov
add
fadd
pop
inc
sub
sub
mov
leave
mov
clc
mov
cmps
mov
aas
mov
test
cmp
call
movups
fdiv
lods
shrd
mov
jbe
sbb
in
xchg
(bad)
ret
push
mov
and
aaa
dec
cli
mov
mov
imul
lods
jp
call
dec
or
clc
das
jg
xchg
das
aaa
(bad)
mov
xchg
sbb
xor
popf
movq
ins
or
cmp
(bad)
fadd
or
sbb
jne
fsubp
pusha
sbb
outs
in
inc
jo
dec
test
loopne
(bad)
faddp
jl
fmul
cdq
shl
xchg
pop
mov
popf
mov
cmc
out
adc
and
push
aas
dec
cmp
cmps
iret
jns
and
cld
call
(bad)
loopne
jle
lods
add
ds
fcmovbe
dec
(bad)
ja
jbe
in
push
push
inc
mov
cmc
repz
mov
rcl
xchg
inc
hlt
imul
jb
mov
push
adc
pop
fmul
jp
sub
cli
shl
iret
mov
outs
jno
sti
test
shl
movs
inc
dec
jnp
sub
xor
dec
ins
cmp
dec
mov
push
stc
lods
jno
pusha
inc
test
shr
mov
xchg
comiss
ins
sub
mov
pop
dec
call
pop
jno
mov
dec
push
adc
mov
test
adc
sbb
inc
das
dec
jnp
push
pop
or
mov
xchg
leave
inc
into
es
adc
push
cld
int3
stos
push
and
div
push
jns
mov
enter
pop
ins
inc
(bad)
(bad)
mov
std
xor
jmp
mov
sbb
or
pop
in
icebp
and
or
jno
jb
sti
xchg
jge
pop
cmc
push
cmp
push
mov
(bad)
xchg
sbb
cmp
pop
jg
push
js
push
popf
ja
push
shr
data16
and
shl
push
xchg
and
ins
mov
repnz
test
lods
jl
in
xchg
adc
fisubr
bound
cmp
jg
add
dec
ret
pop
jb
ins
and
mov
dec
push
inc
push
imul
add
sbb
call
jne
cmc
cmps
arpl
fdivp
out
xchg
pop
hlt
mov
jns
cmps
push
mov
and
sbb
mov
clc
(bad)
cmc
imul
inc
jnp
div
mov
mov
inc
adc
jl
jp
scas
mov
add
or
jb
(bad)
or
jae
int
fdiv
mov
rcl
(bad)
call
retf
push
popf
inc
sbb
or
shr
jecxz
fwait
mov
pop
ret
(bad)
xchg
jno
jns
mov
push
std
iret
ins
inc
out
in
shr
xor
dec
into
out
test
inc
add
inc
sub
xchg
les
lock
mov
pop
fist
push
jo
push
pop
cmc
xor
cmps
pop
xor
into
retf
push
cmp
pop
(bad)
pushf
sbb
test
scas
inc
xlat
fbld
sbb
stos
test
imul
inc
sub
sbb
jno
leave
ret
ret
jge
aas
ror
and
pop
push
mov
sahf
test
fist
ins
test
mov
sahf
inc
ret
lods
cmp
out
sub
push
lods
iret
adc
sahf
xchg
mov
mov
shr
jecxz
pushf
ret
jae
xchg
imul
and
leave
adc
dec
iret
or
movs
loopne
mov
add
mov
xchg
outs
dec
add
rcl
or
out
pushf
jmp
and
icebp
ss
inc
popa
add
ins
icebp
mov
arpl
sbb
pop
dec
in
repz
cmp
jecxz
rol
rol
imul
das
popf
int
adc
ins
pop
or
push
jecxz
push
sbb
hlt
test
rol
dec
mov
or
pop
jno
inc
xor
pop
gs
push
cmp
sti
cdq
xchg
add
test
cld
mov
or
icebp
mov
or
adc
cmc
loope
mov
xchg
out
enter
(bad)
cmp
jmp
or
inc
push
cmc
dec
fs
pusha
or
cmp
mov
fimul
stos
in
cli
sub
ins
push
adc
pop
stos
push
adc
sub
out
std
adc
sbb
mov
call
pop
test
nop
and
sub
aaa
lods
jle
mov
mov
out
xor
xchg
ret
sti
lock
mov
enter
rcr
jl
addr16
call
xchg
sub
xchg
dec
jl
add
imul
mov
sbb
int3
ss
sbb
nop
mov
outs
jno
daa
inc
sbb
add
in
jo
and
mov
cld
pop
cli
addr16
sub
inc
mov
push
mov
cmp
and
fwait
sahf
(bad)
lock
xchg
pop
mov
push
shl
or
sub
fwait
bound
(bad)
daa
mov
nop
or
imul
data16
frstor
mov
mov
xchg
movs
das
push
push
mov
inc
mov
fnstcw
mov
(bad)
jb
movs
mov
(bad)
or
mov
pop
or
jb
pop
in
push
in
int
fcos
popa
sub
lock
in
inc
pop
mov
sti
hlt
push
outs
out
scas
scas
imul
cmp
(bad)
or
(bad)
xchg
mov
mov
bound
in
push
sbb
jb
test
push
(bad)
sub
cmp
pop
out
and
(bad)
std
pusha
mov
stos
mov
shr
adc
in
nop
daa
scas
mov
stos
mov
sbb
sbb
sar
and
rcr
div
ins
mov
pusha
cli
outs
dec
les
pusha
jmp
push
sub
(bad)
sbb
xchg
push
mov
out
les
jp
push
cmps
push
test
inc
cdq
lock
pop
pop
int
sbb
or
hlt
mov
sbb
shl
sub
into
dec
and
push
mov
in
xor
in
pop
mov
int
and
dec
sub
inc
shl
cmp
mov
(bad)
je
gs
paddd
iret
add
je
sub
pop
je
dec
mov
mov
jbe
sub
push
jbe
mov
ficomp
sbb
pop
sub
or
add
adc
popf
mov
in
fnstenv
xchg
mov
sub
add
jmp
jo
push
inc
movs
inc
ret
push
xchg
xchg
xor
lea
mov
pop
scas
xchg
lds
lock
call
mov
je
in
add
enter
stc
pop
push
pop
fstp
(bad)
cli
mov
inc
add
fs
and
push
pop
js
or
xchg
jp
mov
pop
cdq
test
addr16
js
inc
nop
adc
fldcw
adc
jle
jmp
out
and
push
add
or
(bad)
push
mov
mov
imul
xchg
ins
ja
adc
(bad)
mov
inc
or
add
xchg
hlt
push
pop
ja
test
sti
and
jb
sbb
inc
inc
fwait
adc
out
jmp
mov
int3
jl
mov
fstp
sub
push
ja
mov
pop
gs
ins
rol
and
aas
jne
outs
aam
add
iret
in
xchg
cli
push
jnp
push
loopne
or
and
pop
add
(bad)
or
mov
dec
or
inc
cmp
xlat
xor
jbe
cmp
xchg
inc
std
lock
pop
fcom
adc
das
cwde
sahf
leave
(bad)
lock
sahf
cmps
mov
out
(bad)
(bad)
std
push
xor
adc
dec
sub
ror
mov
jl
mov
pop
jns
jb
rol
scas
push
gs
push
or
repnz
fld
ficom
adc
fwait
mov
repnz
rcl
inc
adc
push
jae
lods
jge
or
add
xchg
cmp
(bad)
jmp
enter
(bad)
mov
and
lea
test
xchg
adc
stc
rcl
mov
jno
clc
popa
dec
js
sbb
out
iret
jmp
or
(bad)
in
popf
stos
js
xchg
mov
(bad)
xor
dec
shl
stos
mov
fimul
xor
sahf
in
scas
ret
sub
xchg
cmp
xchg
jb
adc
mov
cmp
push
in
test
dec
mov
jns
jns
cmp
pop
sub
xchg
cmps
xchg
test
sbb
and
loopne
lea
push
sbb
ja
in
push
in
loopne
mov
cmp
(bad)
jo
and
or
dec
inc
loop
xor
mov
shl
dec
jg
xchg
ret
and
cld
pop
mov
sbb
(bad)
call
add
mov
xor
push
push
push
sbb
shr
adc
sub
out
jnp
jge
mov
cmps
mov
dec
cmp
inc
inc
cmp
dec
or
sar
mov
xor
mov
addr16
test
sub
aam
aaa
jle
(bad)
mov
mov
push
fs
and
mov
cmc
enter
cdq
sbb
dec
popa
pop
mov
jmp
cdq
stos
pop
jle
jge
test
jg
jmp
xor
and
inc
inc
sti
(bad)
(bad)
ja
jnp
mov
fdiv
rol
dec
int3
inc
loop
les
mov
outs
pusha
shr
mov
sub
std
mov
das
push
icebp
fisttp
xlat
push
imul
and
retf
and
std
add
dec
sub
push
inc
pop
vpaddsw
(bad)
ss
jl
inc
or
cmps
push
jge
lock
cmp
int3
dec
pop
jecxz
fs
xor
jp
inc
xchg
jg
add
clc
push
bound
loopne
mov
clc
lea
cmp
or
call
ss
inc
xchg
xchg
js
in
jg
sub
dec
xchg
mov
cmps
fwait
hlt
dec
pusha
rol
sub
sub
pop
ret
cmp
in
stos
xor
add
sbb
sbb
sar
ins
xor
mov
cdq
ror
daa
mov
pushf
mov
add
test
sbb
fnstsw
mov
out
retf
(bad)
retf
mov
rol
cdq
push
imul
add
imul
aad
inc
stc
xchg
or
jo
scas
add
sub
scas
cmp
stos
sub
push
lea
out
ror
test
dec
jl
sahf
jns
cmp
aaa
jbe
std
or
or
lea
or
add
pop
mov
(bad)
adc
pop
mov
std
imul
jp
cmp
test
push
cmp
cmp
movs
lea
inc
stc
int
test
out
aaa
mov
aad
(bad)
cld
inc
lea
sahf
xor
jbe
mov
or
call
or
int
mov
pushf
xor
and
push
and
or
inc
ins
add
cmps
cmc
retf
jnp
adc
nop
inc
inc
int
fisub
sub
add
pop
or
nop
movs
or
mov
ds
xchg
pop
(bad)
fimul
popa
xlat
and
xchg
nop
stos
push
cli
clc
das
popf
cmp
adc
xchg
push
pop
fiadd
add
jno
lea
ret
es
aas
push
mov
cmps
dec
sub
dec
sub
popa
je
cmp
cld
push
pop
inc
pop
pusha
xchg
cmp
mov
(bad)
je
jmp
(bad)
xlat
movs
or
cmps
cs
push
dec
mov
push
pop
sbb
jb
ins
fwait
int3
cwde
sbb
mov
add
jp
stc
test
xchg
pop
jb
xchg
push
fiadd
jmp
add
mov
in
repz
dec
xlat
ds
imul
and
xchg
or
pop
aad
mov
xor
repnz
loopne
cld
jmp
mov
xchg
les
mov
mov
push
xor
jno
fstp
xor
push
fsub
cmp
xchg
es
cdq
retf
cmovl
pop
idiv
fst
mov
jecxz
fcomp
push
sub
imul
sub
pop
cmps
push
pop
add
inc
out
nop
xlat
or
and
arpl
movs
scas
popa
(bad)
fiadd
mov
adc
stos
in
or
xor
cmp
push
neg
ins
arpl
jbe
xchg
mov
sbb
adc
sub
aas
sbb
(bad)
ret
lods
xor
fwait
dec
sti
adc
cmc
mov
sbb
jne
cmc
push
fcom
adc
cmovs
sub
(bad)
mov
mov
push
outs
dec
xchg
push
aas
(bad)
mov
cwde
pusha
jb
push
dec
push
jo
jecxz
xor
je
push
mov
sub
sbb
cld
ret
cld
add
cli
cdq
jb
or
js
jmp
popa
pop
outs
pop
push
xlat
pop
inc
iret
pusha
sbb
aas
push
into
or
ins
aas
sub
and
pop
ss
mov
inc
pop
mov
lods
adc
shl
outs
inc
dec
scas
ret
or
sbb
pushf
fistp
pushf
sub
imul
mov
cmp
jg
pop
repz
sub
ret
outs
mov
fidiv
cmps
xlat
imul
or
movs
or
sbb
xchg
cmp
in
in
shr
fst
aaa
(bad)
jno
mov
stos
sbb
pop
fchs
push
movs
jle
and
mov
add
dec
call
bound
std
xchg
cmp
add
mov
mov
rol
enter
sbb
and
sub
mov
xlat
dec
or
(bad)
out
sub
pop
xchg
pop
mov
and
mov
fcmovbe
inc
rcr
or
aas
repnz
add
dec
ins
popf
rcl
fisttp
(bad)
jns
push
lds
pushw
mov
xchg
or
and
ja
in
inc
jecxz
stos
fwait
add
mov
cdq
mov
mov
nop
inc
call
stos
rol
ss
call
xchg
out
aaa
bound
adc
into
es
loop
sti
add
sub
hlt
sbb
adc
inc
and
mov
mov
sbb
rcr
add
data16
push
jno
add
jmp
and
shr
or
ror
jp
sbb
rcl
push
dec
pop
inc
and
retf
sbb
rol
fwait
lea
cmp
inc
mov
cmp
aas
pushf
shl
scas
or
int3
lahf
sbb
stc
sbb
dec
sahf
push
lds
mov
fnop
inc
aam
cmc
aam
sub
jg
inc
cld
pop
mov
xchg
adc
inc
rcl
push
inc
inc
mov
ins
(bad)
icebp
push
std
push
cmps
leave
sub
and
(bad)
xchg
sub
lds
sbb
pop
xor
sbb
adc
mov
in
push
movs
mov
mov
mov
shl
popf
xlat
scas
sti
pop
xchg
dec
inc
aas
add
imul
retf
dec
mov
pop
push
inc
adc
sbb
loope
lock
hlt
pop
push
and
test
jp
mov
scas
test
fbstp
fcomp
inc
or
into
cmp
jle
inc
mov
adc
push
sub
and
aas
shr
mov
adc
sbb
jge
pop
pop
push
sub
xor
pop
sti
inc
shl
shl
xchg
dec
xor
loop
sub
xchg
inc
pop
out
js
or
stos
cmp
mov
out
out
adc
test
in
or
adc
push
push
push
lahf
jecxz
ja
jns
(bad)
test
stos
push
shr
popa
icebp
(bad)
fimul
mov
cmc
movs
adc
push
inc
fdiv
dec
repz
cwde
lock
movs
dec
and
in
dec
leave
mov
or
sti
dec
mov
xchg
xchg
leave
jp
xchg
inc
or
mov
adc
ins
mov
and
ret
push
repz
mov
jae
pop
mov
clc
pop
pop
test
xlat
rcr
mov
fnsave
or
xor
stc
push
cmp
int
icebp
inc
jmp
daa
loope
inc
ret
cli
into
adc
sti
dec
cmp
ret
ss
scas
pop
sub
xchg
jecxz
and
mov
(bad)
mov
push
mov
addr16
sbb
nop
xor
lahf
lock
loope
push
in
xor
mov
test
xor
cli
push
mov
xchg
jp
cmps
test
mov
cs
inc
mov
mov
retf
jmp
lods
in
add
aad
(bad)
push
mov
popa
xchg
retf
push
xchg
lahf
in
mov
and
arpl
imul
sub
psubusb
jge
mov
pop
add
pop
push
stc
cld
(bad)
mov
cld
aam
jge
out
jnp
movs
popa
jne
dec
mov
dec
enter
xor
adc
(bad)
dec
push
out
data16
mov
aam
je
call
xor
test
inc
pop
out
mov
dec
mov
pusha
cdq
stc
sub
sub
cdq
retf
(bad)
push
iret
inc
dec
pop
mov
int3
sar
and
xchg
push
retf
jmp
pop
pop
leave
add
mov
jecxz
mov
and
or
mov
jo
js
mov
test
xlat
iret
jle
ret
push
xchg
jae
icebp
mov
mov
sbb
jbe
xor
in
or
icebp
pop
in
in
xor
push
loop
ret
imul
jmp
and
prefetchwt1
jae
hlt
add
inc
sbb
std
jne
icebp
mov
mov
pop
(bad)
neg
adc
in
call
aas
push
and
in
ret
call
ins
nop
and
out
scas
call
imul
pop
fnsave
push
lahf
ret
dec
retf
sbb
retf
loope
xor
test
movs
push
(bad)
loopne
jbe
xor
mov
mov
ins
jmp
jbe
adc
push
pop
std
push
shl
pop
xchg
jae
mov
movhps
out
mov
inc
push
cmp
das
mov
ins
or
xchg
dec
call
pop
cmps
adc
stc
sub
pop
dec
pop
mov
dec
pop
mov
inc
(bad)
stc
mov
xor
push
mov
ja
iret
cmps
sahf
sub
ja
xchg
(bad)
in
pop
fild
imul
cmp
stos
sbb
mov
ins
pop
jl
mov
dec
xor
test
pop
cmp
ss
push
xchg
sar
or
out
lds
cmps
sub
inc
add
loope
mov
sbb
xchg
pop
sub
inc
add
sbb
outs
and
pop
ins
sbb
aad
push
les
jmp
ds
sahf
clc
xor
imul
mov
and
popf
sbb
xchg
outs
fld
adc
and
mov
pushf
inc
pushf
daa
mov
fs
cli
sub
inc
mov
cmp
adc
repz
retf
xor
mov
and
xor
cli
xor
mov
movs
push
cmp
or
ror
popa
push
mov
(bad)
mov
idiv
cmps
jmp
fwait
push
pop
adc
popa
mov
and
fs
sbb
xor
add
push
xor
(bad)
aad
jmp
cmp
shr
in
mov
sub
int3
(bad)
rcr
mov
sub
dec
stos
pop
(bad)
or
lods
int3
xchg
jae
push
dec
scas
or
clc
sub
in
add
adc
sti
mov
cld
icebp
cmp
add
jg
cmp
adc
loop
mov
push
cld
or
lock
sub
xlat
mov
mov
cmp
jge
stos
lods
push
and
and
std
cld
push
and
imul
ins
in
mov
mov
xor
xchg
pop
enter
call
mov
mov
mov
inc
pop
test
sbb
(bad)
or
mov
cmp
cmp
lock
shl
xchg
pop
outs
jmp
leave
test
cmp
rol
push
les
push
mov
or
(bad)
mov
pop
push
cmc
je
jge
outs
pop
push
lods
(bad)
in
cwde
aam
lahf
push
test
mov
aad
loopne
mov
shl
mov
sbb
ss
push
dec
sub
inc
and
jmp
ja
jle
out
idiv
adc
sbb
inc
jo
jg
mov
loope
movs
stc
cmc
inc
push
mov
xor
pop
movs
dec
cdq
jg
dec
jne
pop
imul
lds
adc
in
stos
retf
jecxz
call
pop
nop
loope
sbb
daa
cld
jne
jnp
sbb
sahf
xchg
fmul
iret
add
out
and
lods
cwde
cwde
clc
mov
sti
aaa
cmp
inc
jb
cmc
xor
dec
icebp
ret
icebp
lods
inc
inc
or
fs
mov
push
dec
sti
adc
xchg
adc
aad
cwde
retf
cmc
jae
cs
lds
xor
mov
mov
push
mov
or
adc
jg
mov
mov
and
or
in
rcl
pop
movs
or
loope
jle
and
sub
add
mov
movnti
test
jb
dec
adc
sbb
xor
inc
jne
push
xor
dec
pop
fnsave
mov
xor
cs
and
mov
hlt
(bad)
jo
sub
inc
jge
adc
movs
call
cmps
mov
gs
and
test
inc
nop
adc
jmp
(bad)
enter
test
push
leave
mov
fwait
xchg
add
xor
cmp
pop
mov
inc
mov
cld
pop
je
stc
sbb
in
ds
inc
lea
lds
div
sub
mov
imul
push
inc
xor
rol
push
xlat
push
mov
sbb
mov
or
push
and
and
or
loop
cdq
adc
xor
dec
aas
push
sbb
xchg
dec
and
(bad)
(bad)
inc
ins
aam
pop
sub
jae
mov
stos
add
xor
popa
sbb
nop
push
xor
push
jns
(bad)
shr
push
popa
ds
xor
dec
push
xchg
sahf
dec
and
lds
and
mov
enter
aas
xchg
cmp
push
pop
pop
dec
xchg
sub
jg
push
push
and
stos
and
or
les
mov
and
mov
das
mov
pop
xchg
adc
fild
and
ja
jb
sbb
jle
mov
jne
scas
ficom
in
add
fwait
leave
pop
jmp
into
push
inc
mov
jns
xchg
jle
bound
sub
clc
sti
adc
sub
or
fst
sbb
ins
lahf
mov
aam
into
imul
ret
loopne
jle
ret
js
xor
mov
cdq
add
pusha
mov
jo
inc
mov
cs
stc
out
pusha
cli
out
sahf
retf
xor
pop
loop
add
lods
lods
mov
or
hlt
movs
(bad)
push
mov
arpl
dec
scas
fstp
cdq
jnp
rol
nop
das
fstp
in
jg
jmp
add
clc
or
gs
test
mov
hlt
clc
push
push
lea
mov
jnp
(bad)
xor
movs
repnz
sahf
pop
loopne
ficomp
and
les
sbb
adc
ret
jnp
int3
shl
leave
ja
sub
xchg
xchg
adc
xchg
sub
jne
jns
mov
lods
xor
shl
sar
(bad)
cmp
cvtps2pd
in
stc
push
inc
push
mov
ja
pop
push
pop
jno
adc
jge
jecxz
mov
(bad)
and
icebp
cwde
js
pop
aaa
push
call
test
test
imul
cmc
mov
arpl
js
mov
jg
mov
xchg
sub
or
cmps
xor
inc
mov
xor
or
icebp
mov
cmc
(bad)
cld
and
sti
mov
or
jge
bound
jg
test
push
and
adc
and
cmc
and
sub
mov
adc
into
mov
test
mov
jg
jmp
sahf
pop
loope
js
loope
adc
mov
dec
shl
mul
mov
lock
mov
movs
ins
ins
out
push
lock
div
or
rol
add
mov
mov
mov
mov
outs
add
gs
and
push
mov
cmp
and
fucomp
mov
dec
add
push
cmp
in
cmps
sub
adc
in
(bad)
adc
loopne
fmul
xor
shl
add
rol
jb
mov
test
fsubr
add
cld
fcomp
pop
sahf
or
xor
lods
es
mov
and
jnp
in
gs
inc
es
inc
sub
jecxz
in
sbb
loopne
les
hlt
and
cmp
xchg
sbb
xchg
xchg
xchg
mul
push
fcomp
add
stos
mov
cwde
adc
dec
sbb
call
adc
pop
popa
jp
scas
add
(bad)
sbb
sub
push
lea
sub
adc
ds
cli
aas
xor
push
ja
loopne
in
pop
pop
xor
ins
and
iret
push
scas
sub
or
iret
enter
mov
rcl
add
sbb
pop
push
addr16
mov
jg
call
dec
mov
cld
fwait
js
jl
vpmulhuw
std
cmc
and
aas
ret
jle
push
and
push
mov
jg
dec
(bad)
jecxz
ja
mov
mov
mov
ror
pop
add
cmp
pop
inc
int
inc
jmp
mov
movs
dec
adc
(bad)
and
(bad)
jnp
test
xchg
xor
outs
xor
mov
add
mov
out
loop
fiadd
adc
jmp
jl
aas
mov
xchg
add
mov
cdq
push
sti
enter
iret
adc
ins
xor
lea
xchg
dec
cli
xchg
mov
ret
inc
rcr
ins
aad
adc
sbb
bound
inc
fcmovu
jmp
dec
push
and
dec
cmp
xchg
mov
jo
push
clc
and
add
or
(bad)
xchg
mov
lds
inc
aam
icebp
rol
test
addr16
sahf
lods
outs
pop
retf
lahf
push
cmps
(bad)
cli
movs
stc
push
leave
dec
mov
jmp
outs
or
out
dec
adc
pop
stc
(bad)
xchg
or
imul
dec
mov
jnp
push
test
pop
aad
mov
sbb
test
jle
push
sahf
adc
xor
popa
pop
sbb
jns
out
loop
fcomp
jne
and
scas
sub
cmps
and
fsub
lock
push
loop
xor
in
aas
nop
bound
inc
inc
xor
pop
fmul
nop
mov
sti
movs
mov
inc
aad
repz
(bad)
cmc
fsubr
je
enter
stc
cli
pop
mov
jmp
fild
nop
(bad)
retf
call
nop
fnstcw
ss
sar
or
retf
xchg
and
add
inc
push
into
push
inc
in
nop
mov
sbb
pop
sbb
xchg
and
push
xor
cmp
mov
mov
addr16
stos
or
dec
jecxz
test
ror
mov
popf
ins
pop
dec
push
adc
stc
inc
cmp
sub
cld
div
ret
int3
dec
dec
mov
das
cmps
adc
jb
push
sub
call
pop
imul
lock
xor
or
jo
jne
ret
fbstp
add
xchg
leave
int
dec
cmp
lahf
xor
mov
nop
test
into
pop
or
or
jo
imul
pop
outs
and
outs
leave
cmps
hlt
cdq
sbb
shr
pop
or
ficom
outs
sbb
dec
sbb
jne
cli
loopne
mov
clc
sub
jge
cs
imul
fdiv
(bad)
push
std
into
ja
xor
adc
aaa
sbb
mov
jae
adc
lds
sbb
(bad)
mov
and
sbb
test
inc
dec
or
adc
nop
(bad)
rcl
jmp
adc
fiadd
xchg
data16
sub
sti
jae
mov
or
mov
out
in
ds
lea
ins
sub
mul
pop
push
cmps
add
mov
mov
movs
pop
mov
mov
sub
cld
clc
cwde
into
mov
mov
pop
dec
outs
ret
movs
mov
adc
jo
sahf
jge
sbb
cmc
mov
add
ret
xor
add
popw
dec
and
stos
aam
stos
movs
cld
sub
mov
xchg
pop
mov
pop
mov
inc
clc
push
xchg
popf
ins
dec
sub
(bad)
cld
mov
popf
cmps
xor
fldenv
or
mov
sub
cmp
cmp
cmp
imul
inc
mov
pop
ins
jno
jecxz
mov
popf
sbb
xor
test
aad
ficom
pop
pop
pop
and
inc
push
js
sub
outs
test
fsubr
push
mov
mov
push
addr16
mov
sbb
fcom
ret
sub
sbb
xor
pop
inc
xchg
punpcklbw
mul
cmp
mov
arpl
mov
add
adc
xor
jp
sbb
mov
pop
stos
aas
jge
inc
sub
je
loop
jp
repnz
cmp
adc
lods
mov
sbb
ret
loope
ins
add
cmc
data16
inc
or
stos
gs
in
scas
cld
pop
sub
cmp
fsub
out
jo
hlt
sub
(bad)
int
cwde
add
push
xor
add
cmps
or
xchg
or
jmp
scas
ins
(bad)
jp
mov
xor
and
mov
pop
(bad)
dec
dec
fistp
bound
jb
ins
loope
scas
inc
adc
sbb
out
add
mov
pop
(bad)
arpl
imul
mov
pusha
fistp
int
pusha
cld
sbb
loope
cmp
and
jns
cdq
rcl
dec
int3
add
rcr
cmp
jl
dec
loop
or
push
adc
jno
mov
test
and
shl
pop
adc
jmp
mov
aad
or
and
jo
fild
icebp
mov
clc
xor
stc
out
icebp
mov
data16
sub
adc
fcos
mov
jl
icebp
mov
push
xchg
das
push
cmp
mov
retf
shl
pop
mov
adc
xor
popf
jmp
ds
(bad)
arpl
or
arpl
jmp
into
out
sbb
dec
jmp
ds
mov
popa
pop
rol
out
movs
and
push
jae
and
jg
fstp
or
sub
cwde
fimul
mov
pop
mov
or
rcl
pop
xchg
jns
xor
mov
adc
jnp
aad
loopne
adc
xchg
and
call
retf
mov
mov
mov
pushf
cmp
add
call
(bad)
mov
mov
je
xchg
jnp
pop
test
jmp
daa
push
jecxz
gs
inc
jmp
mov
mov
popf
mov
dec
cmc
jmp
cwde
das
sbb
push
mov
(bad)
jmp
pop
cmp
ds
out
lock
movs
xor
pop
iret
push
xchg
fldz
mov
cmp
mov
icebp
cmps
or
movs
movs
jmp
mov
cmp
jbe
pop
xor
push
or
mov
jp
add
jg
cmp
jmp
(bad)
fdivr
std
hlt
fnstenv
outs
fwait
mov
jmp
xchg
pop
pushf
bnd
adc
add
daa
push
mov
ret
dec
fdiv
sbb
push
jmp
std
aaa
mov
sub
cdq
adc
jb
mov
(bad)
leave
nop
mov
pop
sub
sub
jp
test
xchg
(bad)
jp
xor
sub
xor
pop
mov
xlat
pop
jno
sub
push
mov
push
push
mov
std
sbb
pop
aas
push
lds
mov
cld
sub
mov
adc
mov
mov
ror
pop
lock
call
lea
cmp
mov
jmp
push
fadd
pop
test
mov
cmps
xor
dec
add
sbb
pop
repnz
push
jbe
bound
ja
cdq
or
gs
in
adc
outs
or
call
and
int3
push
inc
in
xor
cli
ss
xchg
js
sar
ins
or
push
mov
fcom
xchg
push
cmp
sub
push
pop
aam
cmp
movs
es
sbb
push
xchg
jmp
aaa
add
cs
cmp
push
dec
outs
adc
mov
cld
cmp
retf
mov
adc
lds
xor
cmp
call
ins
daa
nop
call
lds
mov
stos
sub
scas
(bad)
push
add
cmp
rcr
shl
repz
nop
std
gs
outs
lods
ss
call
fstp
hlt
fwait
push
mov
add
cli
cmc
mov
data16
push
xchg
jns
mov
mov
dec
jnp
jmp
stos
sub
leave
or
pusha
mov
xor
test
mov
clc
dec
dec
cmp
mov
adc
push
pushf
arpl
aad
mov
push
add
mov
and
mov
(bad)
outs
js
mov
cmp
and
aaa
neg
inc
xchg
adc
rcr
sub
in
not
les
pushf
pop
jae
ret
push
fadd
pop
sbb
xchg
aad
mov
outs
or
in
jo
rcl
cs
inc
sub
mov
lea
mov
cmp
std
fld
cmc
ja
ja
mov
dec
ja
in
mov
sti
aaa
inc
dec
sub
fmul
fs
test
sub
pop
cmps
push
inc
ja
fnstenv
add
adc
lds
jb
lods
leave
rol
pop
das
cdq
clc
ins
cli
xchg
daa
fst
adc
in
stos
or
dec
push
(bad)
jno
cmc
shr
mov
sbb
jg
add
mulps
cmps
sbb
xchg
mov
in
and
hlt
leave
pop
test
scas
jmp
mov
cli
das
lods
dec
mov
and
shl
adc
mov
sub
jg
and
cmp
repz
scas
sahf
jg
adc
popa
call
pop
mov
lea
lock
xlat
inc
jae
push
inc
je
jmp
ja
loope
pushf
inc
imul
sti
mov
lock
lods
bound
or
push
popf
push
aas
stc
ret
xor
cmps
or
jl
loope
pop
mov
mov
lods
mov
rol
loopne
int
in
cmc
push
das
pop
push
dec
leave
lods
outs
and
outs
jmp
leave
ss
(bad)
out
lods
sti
push
mov
mov
ins
cmp
test
dec
or
stos
movs
mov
inc
add
mov
idiv
push
dec
(bad)
pop
xchg
arpl
jp
cli
inc
imul
jmp
inc
xchg
pushf
test
ins
enter
and
push
inc
sub
out
cmps
jb
aaa
shl
pop
test
inc
mov
jns
push
jle
out
retf
(bad)
mov
mov
mov
rcr
xor
jl
ins
shl
sbb
out
(bad)
jg
retf
and
mov
cmps
aam
mov
mov
mov
lea
mov
psubq
cli
push
pop
stos
movs
inc
pop
iret
imul
jg
jmp
add
repnz
repnz
mov
jnp
jg
sub
xchg
add
movs
push
dec
push
dec
(bad)
adc
loope
jbe
jmp
das
xchg
cmp
(bad)
out
add
popa
push
sbb
loop
hlt
lods
inc
sbb
add
and
cmp
(bad)
scas
dec
sub
mov
jle
and
push
mov
das
dec
jecxz
cmp
fnstenv
sbb
call
push
fnsave
jg
call
cmp
scas
cmp
(bad)
sahf
ins
inc
cli
mov
pop
inc
mov
cmp
fidivr
mul
dec
cmp
cli
lds
pop
in
fstp
cs
outs
mov
das
retf
rcr
retf
jl
and
inc
add
loope
or
call
(bad)
xor
mov
xor
outs
scas
sbb
push
push
aas
int3
and
push
call
cmps
mov
in
sbb
ficomp
(bad)
shr
das
sub
sub
pop
xor
inc
jle
call
or
in
xchg
dec
xchg
sbb
mov
inc
inc
mov
inc
and
int
out
sub
fwait
cld
sub
pop
(bad)
xchg
xor
and
lock
int3
ins
fstp
in
and
jne
aaa
mov
(bad)
push
xchg
dec
dec
mov
add
pop
pusha
(bad)
sahf
push
mov
shl
or
jne
pop
dec
mov
adc
push
ins
lods
pop
ret
idiv
addr16
ins
(bad)
rol
sub
out
mov
ss
lods
mov
movs
push
iret
lock
(bad)
aaa
xchg
jmp
cmps
mov
(bad)
ret
mov
xchg
fcomp
les
or
(bad)
and
scas
and
ins
lahf
push
or
pop
jnp
ins
rcl
xor
add
adc
inc
push
mov
mov
add
pop
iret
push
pop
inc
cmc
lds
adc
(bad)
pusha
int
push
cmp
push
ja
or
leave
std
fidivr
pop
jb
cmp
ins
fwait
sbb
int3
inc
inc
popa
mov
and
pop
ja
xchg
and
jl
mov
bswap
sub
adc
int3
sbb
and
inc
xchg
xchg
aad
xchg
inc
in
inc
shl
mov
ins
and
push
xor
mov
add
pusha
sub
neg
mov
mov
into
jmp
les
xor
and
into
or
cdq
xchg
lahf
clc
mov
cs
sbb
mov
jns
rcl
js
(bad)
and
movs
pop
mov
repz
mov
movs
aad
sbb
sbb
lahf
ins
(bad)
push
and
loopne
adc
mov
rcl
cli
push
jne
adc
jo
xchg
xchg
in
js
pop
push
add
push
dec
pop
not
push
xchg
cs
pop
xor
aam
sbb
jmp
not
mov
repnz
mov
adc
adc
xchg
jle
fwait
imul
test
pop
or
cmp
mov
mov
das
imul
mov
pop
and
and
sub
jge
call
xor
adc
arpl
adc
jle
aad
dec
jecxz
xor
stos
adc
rcr
loope
push
test
xchg
or
pop
jb
mov
leave
retf
sbb
xchg
lds
repz
fdivr
inc
mov
or
push
inc
xor
(bad)
and
call
xor
jne
imul
ror
dec
xchg
retf
and
in
push
mov
mov
jno
test
pop
cmps
fwait
mov
scas
imul
xlat
loopne
push
jne
call
xchg
fnsave
sbb
es
enterw
(bad)
pop
addr16
icebp
test
push
sub
ins
aam
shl
xchg
add
push
hlt
sbb
mov
jle
and
xchg
xor
jmp
jae
push
push
stos
add
out
fcomp
mov
add
cmps
and
mov
int3
test
div
push
jnp
sub
or
nop
add
jne
call
push
test
ret
sub
pop
sahf
mov
adc
xchg
xor
pop
mov
mov
scas
popa
or
adc
and
mov
inc
adc
fwait
push
imul
ret
mov
repnz
nop
cli
mov
shl
mov
fidivr
mov
mov
test
movs
cdq
fidivr
call
gs
mov
xor
xor
adc
xchg
mov
dec
fsubrp
mov
ror
lock
cmova
xchg
add
mov
aas
pop
cwde
pop
aad
add
or
push
fsubrp
inc
inc
push
push
sahf
ror
lods
shl
mov
and
xchg
lahf
mov
jp
adc
push
push
int3
scas
mov
pop
cmp
push
call
neg
fst
and
add
fistp
stc
mov
sub
mov
mov
mov
jbe
push
adc
retf
jbe
popf
pop
cmp
push
ret
es
ins
cs
ins
xor
data16
fs
daa
cmp
jno
in
bound
adc
adc
popf
and
cmps
inc
int3
jecxz
xchg
pop
les
push
mov
jno
fadd
(bad)
push
xchg
or
dec
and
ins
xor
jae
pop
rcl
mov
imul
mov
mov
pop
jg
or
imul
mov
sub
movs
fsub
pop
fisubr
pop
aad
jl
cli
cmp
iret
mov
leave
or
fadd
jbe
push
xchg
push
and
cmp
cmps
jmp
fisubr
lock
pop
mov
xor
sub
aad
enter
sbb
and
jnp
jl
fmul
mov
ret
push
cmc
in
ja
pop
jecxz
jecxz
outs
adc
or
inc
and
pop
sbb
adc
test
repz
je
fxch
jmp
cmp
mov
push
mov
(bad)
arpl
push
sbb
retw
mov
dec
rol
xor
inc
retf
mov
push
add
bswap
stos
retf
int3
cs
rcl
fwait
loopne
daa
mov
sti
xchg
popf
cmp
jg
and
nop
adc
out
stos
mov
nop
stos
imul
int3
mov
xchg
lods
inc
ins
dec
jb
sub
mov
and
push
cmc
scas
dec
test
repnz
push
dec
xor
fistp
out
cmp
ds
(bad)
mov
dec
mov
out
pop
xchg
mov
inc
repnz
aas
std
out
adc
lock
(bad)
iret
out
retf
in
mov
pop
out
pop
lahf
js
pop
movs
in
test
push
sub
gs
(bad)
mov
ret
sbb
mov
xchg
mov
addr16
(bad)
jmp
jl
out
dec
add
pop
push
cmps
or
mov
(bad)
cdq
rol
repz
ds
xchg
aad
fldenv
in
dec
fsubr
loope
(bad)
dec
xlat
sub
add
sub
test
cmc
pop
test
pop
iret
outs
dec
pop
or
jecxz
out
mov
mov
fild
xchg
hlt
xchg
add
cs
add
ret
aaa
in
cmp
inc
push
bound
std
ds
gs
mov
adc
es
in
into
test
mov
jle
out
mov
iret
retf
pop
inc
aad
pop
in
stos
loopne
sti
sub
dec
pop
mov
dec
adc
mov
into
inc
das
aaa
jmp
mov
out
sbb
pop
mov
in
cmp
cmp
dec
das
int3
mov
cmp
sbb
fdiv
scas
arpl
and
jg
adc
adc
mov
sub
push
call
cli
imul
or
cmps
inc
xchg
std
outs
int3
pop
push
test
loope
test
repnz
jge
adc
mov
add
sbb
jp
xchg
fidiv
pop
dec
repnz
mov
pop
fadd
dec
clc
hlt
out
add
loop
les
sbb
mov
and
jbe
leave
por
mov
adc
adc
pop
sub
je
mov
dec
int3
fidivr
dec
or
test
mov
mov
icebp
mov
aaa
icebp
iret
test
xor
push
in
inc
mov
sar
adc
daa
pushf
loope
mov
and
jle
shr
int
mov
adc
fldenv
cmps
add
(bad)
xor
adc
add
cmps
jecxz
xor
sub
fbstp
repz
pop
or
mov
add
aad
jmp
nop
ror
and
aam
mov
sar
pop
fimul
xor
test
or
pop
adc
cs
es
dec
xor
in
and
rol
push
dec
ficomp
add
in
into
adc
ror
outs
arpl
inc
out
sbb
cs
cdq
pop
pop
add
pop
xchg
repnz
mov
cld
rep
gs
pop
fimul
lods
es
mov
inc
sbb
ja
xor
sbb
dec
cs
(bad)
adc
mov
imul
fabs
or
cmp
addr16
mov
js
mov
jne
dec
dec
ret
test
mov
mov
ret
mov
add
call
fs
(bad)
fcom
push
rcl
popa
ret
cmp
fcom
sub
stc
fild
and
(bad)
xchg
(bad)
stos
iret
ret
push
and
adc
xchg
jo
mov
jno
fisubr
aaa
mov
add
rol
sub
jno
in
cmp
mov
push
mov
inc
outs
imul
and
hlt
jge
popf
adc
in
mov
sub
jg
adc
pop
ja
or
outs
pop
cmp
mov
ret
pop
sub
outs
inc
mov
xchg
inc
mov
out
lds
out
xor
ror
inc
bnd
lea
ror
sub
inc
jae
cmps
cld
fistp
xchg
jmp
pop
adc
mov
ror
lods
dec
dec
stc
push
sub
ja
in
sahf
in
pop
xchg
pop
push
jb
(bad)
loopne
push
icebp
sub
ret
cmps
xchg
jge
pop
mov
sub
cmp
dec
fsubr
clc
mov
inc
fpatan
mov
pop
adc
ret
lods
mov
sub
mov
xor
inc
xchg
dec
push
sbb
mov
mov
and
paddb
push
push
mov
inc
push
ja
and
dec
in
mov
ja
pop
lar
cmp
mov
push
scas
aad
adc
movs
popf
rcr
clc
(bad)
jne
movs
imul
xchg
retf
pop
jecxz
loopne
ins
push
jecxz
cld
adc
cmp
popf
(bad)
add
int3
mov
sbb
push
pop
sahf
loop
outs
xchg
es
pop
dec
push
std
adc
adc
loope
fldenv
add
movs
sbb
cmp
retf
retf
sbb
mov
(bad)
leave
pop
xor
mov
hlt
ror
shl
sbb
add
test
xchg
or
sbb
mov
lods
aam
(bad)
les
sub
into
mov
imul
dec
xchg
add
movs
add
arpl
pop
add
aad
xor
std
loopne
imul
jle
sbb
xchg
jns
and
push
add
popf
add
inc
mov
xchg
pop
dec
pop
jnp
or
stos
addr16
xchg
mov
sti
jecxz
lods
inc
or
jge
lods
cld
call
test
add
ins
f2xm1
mov
add
add
fbld
cdq
and
out
and
or
imul
inc
cmps
sbb
mov
pop
mov
leave
cbw
add
and
push
fnstenv
sbb
ss
xchg
and
outs
std
sub
fld
cmc
into
pop
loope
sbb
jmp
push
stc
mov
cmc
fisub
jno
mov
mov
shl
clc
mov
push
dec
imul
scas
test
test
xchg
sbb
(bad)
fwait
repnz
add
push
sti
dec
movs
cmc
outs
dec
rcr
xchg
lods
mov
sub
inc
adc
mov
cdq
xchg
das
in
(bad)
ds
add
enter
add
retf
dec
or
pop
sub
jmp
fidivr
bound
stos
mov
push
loopne
pop
sbb
jb
movs
xor
mov
xor
mov
loope
mov
pop
sbb
sbb
pushf
daa
(bad)
imul
pop
mov
mov
push
rcr
xor
mov
and
inc
mov
adc
repz
fwait
push
sub
push
call
cmp
out
xor
stos
ins
push
push
xchg
push
adc
jns
ja
jp
jns
pop
sahf
pop
and
inc
pop
mov
aas
cmps
std
and
jo
fnstsw
call
push
adc
jecxz
rcl
lods
push
sub
dec
jecxz
adc
add
les
int3
adc
lea
fbstp
cdq
add
fcmovnb
mov
les
sahf
into
scas
icebp
loope
ins
fs
mov
ja
(bad)
xor
add
mov
mov
out
dec
and
fisub
sti
outs
sub
lock
hlt
leave
inc
jo
popa
inc
cmps
aaa
in
retf
imul
frstor
test
push
jge
dec
int
mov
outs
lds
pushf
clc
adc
stos
movs
loopne
sar
mov
add
or
nop
cmc
xor
add
pop
and
sub
stos
movs
mov
inc
in
sub
lock
add
fsubrp
test
inc
xor
jp
sub
into
or
mov
dec
push
fcmovb
mov
es
xchg
dec
test
mov
adc
mov
aaa
add
and
xor
cmp
pop
push
inc
shl
(bad)
fisubr
lahf
(bad)
push
sti
xor
lds
push
mov
jg
imul
cwde
addr16
pop
pop
mov
movs
mov
jnp
loope
xor
dec
aad
sub
cmp
fs
sahf
test
movs
in
nop
xor
xor
push
in
add
cmc
mov
xchg
inc
jnp
in
adc
cmp
enter
stos
xor
bound
add
inc
(bad)
pop
xor
cmc
int
cdq
mov
stc
and
retf
repnz
mov
bound
xor
pushf
or
or
cmp
add
sbb
sub
adc
pushf
movs
(bad)
pushf
adc
add
and
xor
mov
enter
cmp
nop
call
test
adc
jne
hlt
mov
popa
cmps
jb
cmp
sbb
xchg
push
mov
jp
stos
cmps
scas
push
neg
jbe
sbb
stc
cdq
mov
(bad)
jecxz
adc
loope
push
aad
retf
movs
xchg
jle
inc
mov
(bad)
mov
push
(bad)
adc
lods
fcom
fnstcw
(bad)
rcr
push
sub
cmps
popa
idiv
mov
and
sbb
imul
fistp
add
mov
dec
movs
ret
push
iret
push
sti
dec
enter
retf
push
jbe
sbb
add
neg
loop
shl
inc
(bad)
cli
movs
adc
mov
imul
int
mov
cmp
loopne
jmp
xor
lods
xchg
xor
pusha
cmp
mov
mov
sbb
cmc
ins
test
push
retf
outs
mov
push
movs
movs
xchg
int3
mov
mov
pop
aaa
sti
mov
(bad)
js
xchg
call
sub
xchg
xchg
mov
aad
test
adc
xchg
adc
jle
pop
pop
cdq
ins
push
mov
dec
cmps
inc
cmp
inc
sbb
fwait
pop
jp
or
mov
push
lock
sub
aas
mov
jbe
xor
lea
in
rcl
sub
or
ins
psrld
(bad)
push
sub
xor
jae
inc
inc
out
pop
jge
pop
call
(bad)
into
ret
hlt
add
mov
je
add
ret
inc
xor
pop
(bad)
in
(bad)
rol
out
ret
iret
adc
dec
retf
shr
xor
out
(bad)
movs
ins
mov
pop
mov
jg
mov
call
notrack
push
adc
repnz
cli
gs
cmp
repz
xor
mov
popa
sub
in
pop
int
cmp
push
pusha
xor
pop
mov
hlt
pop
dec
push
mov
inc
sti
push
retf
pop
push
dec
add
shl
sub
xor
or
mov
fisubr
sti
mov
shl
lock
sub
das
mov
addr16
icebp
mov
adc
adc
lock
leave
cmp
ret
or
sub
dec
pop
pop
rcr
in
dec
enter
jbe
gs
dec
ficom
mov
stos
push
xchg
popf
pop
rol
adc
arpl
lds
sub
cdq
xchg
ficom
ss
int3
scas
and
and
mov
sbb
jmp
pop
sub
fcomp
sbb
add
dec
jb
jo
sub
movs
into
xor
xchg
mov
dec
and
sbb
(bad)
push
add
dec
pop
outs
cwde
movs
cmps
shr
jbe
daa
xchg
out
dec
or
pop
cs
pushf
cmp
popf
neg
sub
(bad)
rcr
leave
push
inc
aas
mov
sub
fsub
and
or
mov
fnstcw
xchg
imul
ins
cmp
inc
adc
hlt
stos
inc
pop
shl
rcr
adc
ror
xor
in
and
inc
ins
mov
push
xchg
arpl
jmp
cmps
outs
inc
ret
mov
rcr
jmp
call
mov
pop
inc
bound
call
inc
jge
sbb
jmp
jne
pop
fldcw
imul
stos
loope
imul
jno
lea
xchg
lds
cmp
stos
fwait
pop
mov
jns
shr
js
and
sub
jmp
push
push
ficomp
or
sub
add
scas
mul
and
jle
popf
scas
sbb
stos
pop
xor
add
jb
fdivrp
mov
enter
pop
pop
pop
push
mov
in
mov
and
and
data16
pop
mov
stc
dec
add
and
mov
sbb
lods
add
retf
outs
nop
cmp
scas
(bad)
fst
jbe
pushf
addr16
call
gs
lds
xlat
jp
in
rcl
loopne
sub
xor
pop
fistp
jl
jmp
rcl
call
jnp
mov
js
jns
in
mov
push
test
dec
pop
mov
mov
xchg
sbb
xchg
cld
jne
rcl
int3
or
into
cli
push
add
sbb
cdq
arpl
mov
inc
inc
loopne
in
fild
data16
or
stos
shl
xor
mov
mov
mov
ss
jnp
push
xlat
adc
rol
xchg
xchg
enter
sbb
mov
lds
bound
cmp
add
clc
mov
fcom
inc
(bad)
ret
cmp
mov
fidiv
cmps
in
jecxz
cwde
(bad)
sbb
adc
sub
enter
ins
mov
xlat
fcom
sub
push
icebp
ror
and
xchg
cmp
addr16
or
cdq
push
call
into
sbb
(bad)
pop
push
outs
mov
jmp
out
push
and
mov
fcomi
xor
in
arpl
sub
neg
mov
mov
jecxz
adc
and
inc
dec
mov
push
int3
repz
push
jecxz
iret
(bad)
aad
retf
xchg
lea
nop
in
adc
push
push
pop
fs
inc
xor
bound
fimul
pop
(bad)
das
in
(bad)
mov
xchg
retf
fnstcw
inc
mov
inc
mov
mov
gs
lock
repnz
outs
cs
das
sub
imul
xchg
dec
ret
inc
xor
cs
inc
or
mov
jmp
(bad)
test
rcr
xchg
movs
out
cmc
push
sbb
jmp
ret
push
pop
xor
aas
test
aaa
movs
mov
minps
imul
push
fist
mov
cmp
inc
fwait
xor
xchg
ins
cdq
jb
lahf
or
sub
sub
cld
push
push
jecxz
pop
pop
pop
int
dec
jg
scas
add
leave
mov
lods
test
je
test
rcl
imul
shr
push
and
sbb
mov
nop
and
sbb
pushf
lds
sub
adc
lahf
or
pushf
xchg
addr16
mov
jp
pop
(bad)
mul
scas
sub
bound
icebp
mov
movs
xchg
mov
outs
arpl
cmp
pop
inc
xchg
inc
pop
jno
stos
adc
popf
xor
clc
loopne
or
call
test
in
aad
push
and
sar
jbe
add
outs
jmp
mov
xchg
movs
pusha
mov
out
adc
retf
sbb
xor
loope
push
outs
ins
js
sahf
aam
xor
jmp
jle
mov
xchg
imul
pop
push
mov
jo
xchg
jne
cwde
dec
stc
(bad)
and
shl
or
ror
test
dec
jge
add
aam
push
dec
cwde
pop
mov
jle
loope
cmp
push
xchg
je
xlat
fwait
test
movs
dec
test
out
ror
fs
call
std
retf
sbb
outs
push
push
repnz
cdq
(bad)
icebp
ja
push
xchg
js
popa
test
add
mov
or
add
adc
mov
xor
ss
cmp
out
pop
pop
xor
adc
mov
test
in
jb
sbb
jbe
push
retf
(bad)
arpl
mov
mov
pop
ins
ins
aad
fst
call
sbb
out
movsx
mov
rcl
sbb
dec
shl
mov
jg
imul
ds
mov
cmps
or
pop
cmp
push
cmp
sub
xor
je
pushf
jae
sub
pop
xchg
out
dec
imul
mov
push
dec
addr16
xor
icebp
jbe
xor
out
cs
dec
sub
cmp
scas
push
ins
xchg
fidiv
xchg
and
mov
movs
push
inc
add
adc
shl
arpl
(bad)
sub
call
jl
(bad)
cmps
les
retf
fwait
push
pop
push
mov
push
push
mov
js
arpl
cmps
mov
adc
adc
and
push
inc
inc
(bad)
out
dec
cmps
xchg
not
or
call
jmp
jg
js
lds
mov
outs
adc
retf
jnp
and
aas
jmp
test
pop
shl
cmp
push
jno
or
push
sub
cmp
jecxz
gs
sar
push
or
jl
xchg
pop
inc
pop
sub
call
cmp
mov
outs
adc
es
mov
xchg
div
xor
mov
loopne
shr
fcom
outs
xchg
mov
cmp
shl
int
xchg
out
pusha
xlat
rcr
leave
xor
leave
std
mov
jbe
test
cmc
or
imul
inc
inc
popa
xchg
push
call
mov
aad
js
add
enter
sub
and
sbb
sub
test
pop
and
shl
xlat
mov
test
retf
das
jb
xchg
aaa
pop
(bad)
push
int
inc
test
imul
pop
mov
xchg
imul
xor
mov
jbe
xor
mov
or
and
mov
jo
bound
outs
sub
clc
enter
sahf
(bad)
sbb
imul
out
int3
and
sub
dec
enter
mov
cli
jb
sbb
cld
inc
and
sub
push
inc
dec
jle
push
test
outs
xor
rcr
int
aam
pop
sub
out
jmp
xchg
ds
inc
xchg
pop
inc
repnz
and
push
add
or
test
add
(bad)
sbb
and
clc
mov
push
xchg
and
inc
add
jne
sub
add
lahf
adc
inc
or
add
test
pop
inc
push
pop
fisttp
pop
xchg
inc
pop
(bad)
xor
and
enter
mov
scas
xchg
xchg
and
adc
fst
cwde
stos
shl
pop
push
(bad)
mov
adc
push
xlat
and
push
pop
dec
test
jae
sbb
or
or
adc
out
or
pop
mov
lock
adc
repnz
sub
das
push
dec
push
into
outs
xor
and
stos
pop
cmp
mov
mov
rcr
arpl
push
pop
rcl
sbb
popa
pop
dec
into
int3
(bad)
es
mov
jmp
jge
inc
out
mov
es
call
mov
ins
push
test
les
push
jnp
mov
xlat
scas
adc
mov
popa
add
loope
dec
jnp
mov
pop
jg
(bad)
(bad)
jmp
and
loope
pop
out
mov
mov
pop
cwde
mov
mov
clc
dec
mov
out
cmc
sub
push
add
pusha
xchg
adc
cmp
push
bound
stos
retf
retf
mov
and
popa
bound
mov
test
sub
push
stos
mov
jae
inc
and
ret
mov
mov
mov
stc
push
popa
call
push
push
lock
je
push
lea
daa
shl
dec
adc
pusha
sbb
fcomp
sbb
cmp
call
jge
add
pusha
fadd
push
addr16
and
out
cmp
shl
xchg
add
pop
fnstcw
pop
ja
pushf
or
mov
push
mov
jno
jo
mov
cdq
sub
and
out
test
into
xor
mov
and
mov
dec
fldcw
retf
or
and
das
push
call
and
adc
pop
icebp
inc
push
xchg
cmp
adc
bound
mov
lods
cs
scas
neg
and
icebp
(bad)
fsubr
sbb
addr16
push
cmp
popa
sub
xchg
bound
test
fdivr
xor
and
int
(bad)
into
int3
fcmovne
mov
dec
xchg
pop
pop
int3
(bad)
mov
div
inc
data16
jle
mov
add
sbb
call
xchg
adc
push
fstp
(bad)
jp
xchg
lahf
cmp
outs
jne
repz
pop
dec
jnp
mov
gs
mov
test
push
inc
mov
daa
js
outs
mov
jg
mov
push
pop
mov
xchg
ret
push
inc
hlt
retf
ds
or
or
push
xor
push
rol
sbb
cmp
(bad)
sub
imul
test
xchg
mov
nop
xchg
adc
add
mov
jmp
mov
push
pop
xchg
sub
mov
pop
(bad)
(bad)
cmp
iret
xchg
es
sub
leave
pop
in
pop
in
jne
lahf
int
jp
dec
mov
add
(bad)
enter
outs
ds
adc
push
inc
mov
pusha
(bad)
out
js
pop
ja
(bad)
imul
dec
mov
out
aaa
cmp
fsub
fs
das
test
pop
adc
push
push
outs
int
jnp
pop
sti
sub
scas
mov
inc
push
dec
push
loope
pop
pop
xchg
mov
loope
aas
mov
arpl
dec
jmp
dec
ss
aad
test
mov
push
retf
ffreep
test
xchg
xor
popf
(bad)
loop
cmp
xchg
out
int
add
popf
in
lahf
retf
stos
pop
mov
(bad)
xchg
xor
jno
and
aam
jo
and
stc
movs
dec
cmc
inc
inc
aas
stc
(bad)
sub
test
xlat
fsub
jg
inc
mov
push
xor
push
cmp
loopne
(bad)
(bad)
sbb
push
mov
xchg
mul
sahf
pop
lock
in
sub
sti
popf
ds
pushf
test
xchg
sbb
cld
mov
or
fmul
and
pop
push
push
push
je
lds
push
or
inc
imul
loop
jge
loope
daa
repnz
ins
jle
pop
out
popf
jmp
jl
mov
jmp
push
mov
xlat
add
add
xchg
aam
jecxz
jmp
in
pop
(bad)
ret
lds
aad
test
inc
shl
iret
test
call
fisttp
call
pop
test
xchg
dec
inc
sbb
je
pop
ds
fwait
inc
pusha
scas
jbe
cmp
cmp
scas
call
stos
dec
lds
std
xor
sbb
mov
lds
dec
aaa
pop
mov
popf
fsub
js
aad
pop
popf
sar
xchg
out
mov
sbb
pushf
xchg
movs
cdq
jno
push
imul
mov
repnz
cmp
sub
pop
sbb
(bad)
jmp
arpl
cmp
sbb
idiv
mov
mov
arpl
test
jmp
je
icebp
es
test
mov
push
aam
repnz
pop
mov
sbb
ins
xchg
xsavec
push
mov
sub
pop
cmc
in
test
mov
ss
cli
jl
outs
loopne
jne
sbb
xchg
mov
add
xchg
push
sbb
fucom
aas
inc
push
pop
mov
dec
cmp
and
or
cwde
sbb
jb
adc
test
pop
and
xchg
pusha
nop
leave
fidiv
ror
add
mov
ret
pop
pop
mov
dec
(bad)
or
gs
pop
mov
mov
add
fistp
add
xor
sbb
sti
(bad)
cld
ret
fisubr
mov
hlt
xor
xchg
inc
and
and
ds
test
dec
fld
dec
rcl
jmp
(bad)
(bad)
enter
cmp
push
xchg
mov
cmp
sub
add
inc
aad
mov
pop
jecxz
jl
sbb
paddd
mov
and
mov
jne
mov
sub
jns
dec
movs
or
out
lods
sar
out
xor
add
jp
(bad)
cmps
(bad)
push
and
lds
iret
loope
cmc
enter
add
xchg
mov
dec
arpl
cmps
dec
das
ret
and
les
or
ss
sbb
jno
dec
cdq
sbb
rcr
adc
fsub
and
arpl
dec
cmp
out
push
and
rol
cli
movs
mov
and
sahf
jp
add
pop
dec
fxch
push
aas
rcl
hlt
adc
xchg
mov
retf
xor
cmp
arpl
repnz
cdq
ja
add
mov
out
mov
aas
cmp
push
inc
pusha
jmp
add
jb
gs
dec
mov
inc
inc
cli
rcr
ins
xor
sbb
xchg
icebp
mov
int
mov
or
xchg
mov
jmp
mov
pushf
and
pop
movs
shl
popa
push
inc
jmp
mov
fisubr
jo
repz
clc
sub
shr
xchg
xchg
cs
jp
pop
sti
fistp
lds
les
add
in
xor
sub
(bad)
xor
adc
and
mov
pusha
cmp
std
loop
jo
call
lahf
test
xchg
test
mov
(bad)
into
stos
jle
mov
xchg
jmp
cmc
inc
loop
pop
sub
sub
loope
jo
jbe
mov
ins
fnstcw
out
push
mov
xchg
mov
adc
add
retf
inc
cld
mov
sub
mov
fsubr
push
cmc
mov
sub
ret
adc
and
push
pop
and
xor
push
fwait
dec
xchg
lahf
outs
pop
imul
dec
add
mov
out
push
and
aas
call
jns
pop
inc
je
sbb
or
pop
(bad)
adc
out
and
pop
stc
sub
xchg
je
pop
shl
clc
imul
push
xor
mov
push
mov
push
data16
sbb
mov
out
inc
imul
or
or
adc
movs
inc
es
pop
rol
cmp
mov
repnz
cmovbe
adc
mov
rcl
cmps
mov
rol
adc
fmulp
pop
int
dec
mov
iret
jp
add
xchg
js
sub
lock
xor
ud0
cmp
enter
mov
push
sub
scas
cli
inc
rcr
push
adc
scas
in
ret
jp
or
stc
pusha
lock
movs
xor
mov
(bad)
inc
ret
sub
fistp
(bad)
xor
sbb
pop
jp
xchg
ins
push
add
test
popf
inc
pop
bound
pop
or
adc
or
lahf
into
ror
mov
call
sub
pop
mov
cmp
add
aas
cmp
lahf
sbb
adc
and
mov
fistp
push
sti
add
add
mov
jecxz
jo
xchg
nop
icebp
rcl
fcom
call
test
mov
loopne
aas
ror
jg
jle
out
ror
(bad)
ins
xlat
pop
addr16
retf
jbe
push
ins
in
xchg
mov
lahf
outs
xor
rol
jbe
stc
std
adc
pop
es
push
pusha
popa
mov
stos
inc
not
je
pop
imul
shl
ins
xor
xchg
jmp
outs
aam
mov
stos
xor
sub
fwait
loope
mov
sahf
outs
xchg
jmp
add
ret
dec
outs
shr
fs
cmp
or
lahf
add
push
add
add
daa
jne
iret
fwait
inc
fwait
daa
xchg
aaa
fild
lods
cmc
add
repz
or
cmp
mov
mov
cs
test
xchg
imul
dec
push
add
push
xor
mov
jae
lds
push
out
int3
sbb
fcomp
ret
dec
sub
mov
pop
clc
rol
pop
mov
inc
jmp
imul
mov
push
jp
(bad)
sahf
jl
jb
mov
jno
inc
jno
aam
sub
shl
arpl
fucom
sub
cmp
xchg
mov
sub
lea
mov
xor
inc
pop
xlat
out
popf
out
mov
sub
and
aam
or
rcl
xor
mov
repz
sub
mov
cmp
xchg
loopne
sti
les
push
cmps
cld
mov
pop
pop
inc
xor
dec
mov
mov
inc
loope
mov
adc
mov
out
xchg
adc
call
hlt
sbb
aas
cwde
xchg
call
xor
(bad)
test
jp
xchg
not
and
push
pushf
movs
inc
int3
sub
outs
pop
sbb
movs
int3
or
popf
mul
loop
xchg
dec
int
xchg
push
mov
rol
sbb
lahf
inc
aaa
movs
mov
ja
lahf
mov
loop
sar
inc
es
lds
mov
mov
mov
fimul
sar
mov
jo
retf
jmp
jmp
addr16
movs
mov
mov
enter
sahf
dec
into
div
enter
add
sbb
mov
stos
repz
ret
push
sar
or
pop
mov
fst
dec
add
imul
out
aas
add
pusha
and
jmp
jb
mov
jo
add
mov
and
push
inc
pushf
inc
and
lods
int
(bad)
push
mov
call
retf
jne
xlat
pop
adc
out
mov
mov
pusha
adc
aaa
pop
stc
inc
xchg
pop
pop
in
sar
mov
cwde
lahf
sub
xchg
dec
jbe
push
add
out
mov
mul
(bad)
outs
jp
ret
das
jno
fild
pop
daa
inc
test
ret
scas
cmps
xchg
jnp
loopne
call
sbb
js
leave
movs
xchg
mov
(bad)
fisubr
jecxz
into
jecxz
rcr
lods
cmp
pop
dec
out
cmp
mov
dec
push
mov
ror
push
dec
adc
cmp
sbb
int
out
mov
jl
cmovl
test
(bad)
xlat
ja
xor
adc
cmc
inc
xchg
jl
jnp
sar
in
call
test
mov
mov
popa
aaa
inc
arpl
add
scas
fisttp
push
jne
lods
mov
std
xor
out
mov
aam
add
call
inc
xchg
(bad)
lods
shrd
xlat
pusha
jmp
lods
inc
or
ins
test
(bad)
adc
out
repnz
lahf
jg
add
(bad)
jmp
fidivr
imul
add
cmps
out
sbb
(bad)
std
stc
retf
in
fs
mov
sub
sub
adc
mov
sti
ss
rol
popa
(bad)
int3
xor
pop
je
push
pop
fild
pop
adc
dec
ret
xchg
mov
jmp
sbb
dec
lea
int
daa
mov
sub
pop
xchg
jbe
xchg
ret
pusha
scas
hlt
lea
imul
setno
fs
ret
inc
ins
icebp
jge
les
push
call
or
inc
pop
dec
outs
aaa
adc
mov
out
loop
inc
cmp
or
cmp
scas
ins
test
mov
cmps
popa
dec
xchg
rcl
cmp
out
(bad)
sbb
sub
jbe
push
call
sbb
outs
mul
or
in
inc
xor
(bad)
pop
lahf
xor
mov
adc
pop
imul
daa
or
and
lock
cmps
in
mov
call
add
fsub
inc
mov
xchg
mov
mov
ret
ds
mov
jp
push
mov
daa
fcomp
xchg
and
xor
xchg
stos
fsubr
sub
ret
push
fstp
neg
and
add
enter
rcl
ret
inc
xlat
and
dec
cdq
push
(bad)
out
into
jno
cwde
scas
adc
mov
adc
pop
mov
and
fcmovbe
daa
int
cmp
std
hlt
and
call
cld
ss
push
aad
test
push
test
or
sbb
mov
fnstcw
or
repz
hlt
xchg
push
xor
stos
mov
fdivr
in
ret
sbb
loopne
popf
or
movs
fs
sbb
movs
or
inc
dec
icebp
je
sub
push
pop
xchg
(bad)
js
cmp
jno
push
xchg
inc
int
mov
jno
adc
outs
and
aad
mov
ja
or
adc
cmp
inc
mov
data16
or
xlat
test
arpl
jno
cmp
adc
xor
sub
xor
and
push
inc
cmp
sbb
adc
scas
movs
dec
icebp
es
sub
fist
dec
push
imul
cld
mov
ret
fwait
iret
cwde
push
jne
inc
mov
das
sbb
jp
out
enter
add
ror
js
xor
dec
mov
fst
imul
enter
leave
mov
scas
pop
inc
dec
fiadd
xor
(bad)
addr16
aam
je
pop
and
mov
xlat
fidiv
xchg
jns
push
mov
inc
jns
adc
mov
stos
out
fsubr
or
and
cmp
stos
out
jb
inc
icebp
dec
in
add
and
pop
outs
cmp
popf
or
push
stos
shl
jbe
popf
shl
inc
dec
fnsave
pop
sub
in
jle
xlat
adc
mov
pop
loopne
or
aad
lods
int
push
sub
adc
cmps
push
mov
pop
xchg
add
fist
ss
std
pop
mov
cmc
stos
xor
arpl
leave
jg
sbb
test
mov
scas
xlat
add
dec
ror
shl
cmp
and
or
pop
cmp
pop
fdiv
lea
adc
push
mov
and
clc
jmp
mov
or
xchg
mov
mov
pusha
adc
or
aas
(bad)
dec
adc
addr16
mov
mov
push
mov
xor
loope
or
push
call
std
inc
xchg
addr16
mov
ror
outs
stos
inc
shrd
cs
fwait
cmovp
or
fcmovu
(bad)
xchg
or
(bad)
pop
arpl
adc
and
(bad)
retf
mov
inc
mov
push
je
xor
outs
add
push
push
add
adc
xchg
fstp
in
adc
test
add
cmc
(bad)
hlt
(bad)
dec
add
movs
xlat
sbb
ror
mov
push
fsubr
push
pop
add
adc
jne
jae
fiadd
xchg
jmp
jg
or
mov
and
cli
movs
scas
xor
retf
mov
cmps
mov
jnp
push
repz
pop
pop
stos
std
enter
sti
mov
fnstcw
pop
out
jae
mov
fsubp
sbb
push
jg
loopne
lahf
mov
popf
xchg
loope
cmp
lahf
jl
out
ret
(bad)
outs
sub
je
fs
and
jbe
ins
xchg
sti
xchg
push
sahf
sbb
fstp
(bad)
push
cmp
jecxz
das
cmovns
(bad)
loop
mov
cmp
dec
data16
jb
clc
and
mov
shl
cmp
ror
pushf
dec
cmps
jecxz
shr
rol
scas
jnp
jl
sahf
out
xchg
mov
sub
je
or
call
aaa
das
mov
popa
dec
add
ds
jo
shr
dec
test
lods
push
movs
sti
fadd
in
fnstenv
and
cmp
sar
retf
adc
pop
push
dec
dec
ins
add
jle
mov
call
int3
ret
xor
idiv
xor
mov
movs
sbb
inc
sar
xchg
add
imul
call
loop
cmp
or
cmc
cmp
mov
repnz
xchg
or
push
ins
mov
add
jge
adc
cli
lds
fstp
adc
dec
sub
mov
mov
rcl
dec
std
mov
lods
mov
scas
ds
cli
enter
or
(bad)
repnz
fldcw
adc
add
test
jecxz
jo
xchg
or
popw
xchg
rol
rcl
scas
lea
and
jle
xor
mov
ss
jns
scas
dec
js
stos
adc
mov
mov
xchg
ficom
pop
add
lds
inc
not
mov
inc
test
stc
mov
mov
mov
sub
push
jmp
lahf
scas
pusha
rcl
js
pop
js
and
jae
mov
ret
pop
and
add
mov
je
ret
fcomp
rcl
out
imul
mov
add
xchg
imul
jge
inc
retf
and
jg
shl
shr
xlat
test
(bad)
and
cli
mov
dec
jge
push
mov
xchg
adc
cmp
mov
stos
mov
jae
popf
outs
loope
shl
or
jmp
dec
mov
mov
out
lds
cli
or
jmp
mov
fld
xchg
lds
mov
and
xlat
daa
outs
cmp
lods
inc
mov
mov
in
jbe
(bad)
fcomp
dec
int3
adc
sar
jmp
loopne
or
into
(bad)
ds
jne
mov
mov
pop
enter
xchg
imul
call
rol
pop
push
(bad)
mul
ss
cmp
sbb
inc
mov
bound
loop
cmp
ret
cdq
xor
adc
mov
test
in
enter
fcom
retf
shr
sti
std
push
mov
lods
mov
hlt
lods
mov
int3
(bad)
jge
pop
int
imul
stc
jns
mov
fiadd
adc
out
sub
cld
pushw
addr16
jp
sbb
(bad)
dec
xchg
fwait
cld
dec
int
xor
or
adc
cli
xor
ss
adc
sbb
dec
cmps
add
lea
icebp
loopne
mov
xor
xchg
enter
mov
lahf
shl
adc
push
xlat
or
in
scas
mov
les
stc
cmp
push
test
add
xchg
mov
imul
lock
call
mov
dec
mov
adc
imul
xor
or
dec
push
shl
inc
sahf
(bad)
cmps
rcl
jl
add
push
lods
or
bound
test
dec
or
sub
lea
sub
jne
shl
inc
mov
stc
mov
rol
mov
add
inc
repnz
mov
or
and
and
rcr
adc
and
push
add
xchg
call
push
stos
and
dec
lods
mov
push
popa
aaa
ins
test
and
jne
and
(bad)
jno
add
lock
mov
xchg
add
cmps
out
in
push
shl
clc
(bad)
push
cmps
sbb
or
and
sub
std
or
les
in
sbb
cmp
cdq
push
inc
mov
repnz
mov
jns
dec
test
mov
xor
idiv
rcr
cmp
xor
test
fst
loope
imul
pop
stos
lock
cli
js
mov
in
cmp
sub
test
adc
call
inc
inc
mov
les
jge
icebp
mov
and
loop
rol
or
jno
in
jo
sahf
leave
fdiv
cli
jne
shl
dec
cmps
and
ss
sub
or
(bad)
push
mov
test
cmp
push
and
pop
shl
int3
repnz
in
pop
xor
pop
iret
pop
cmp
push
dec
mov
mov
in
sbb
(bad)
jl
or
cli
xchg
xor
test
pop
mov
push
xor
pop
loope
jp
xor
jp
hlt
(bad)
repnz
xchg
push
inc
jae
mov
sub
pop
iret
push
retf
test
fild
inc
dec
pop
or
adc
retf
inc
sub
shr
mov
mov
cmp
cmp
leave
es
and
in
fdiv
iret
in
cmp
repz
cmp
mov
outs
mov
fmul
push
(bad)
in
mov
and
call
pop
(bad)
(bad)
out
adc
mov
out
hlt
xchg
adc
jmp
ss
push
out
cld
cwde
ror
loopne
or
gs
xor
cmp
adc
gs
aaa
pop
pop
fisttp
sbb
dec
and
cmps
data16
mov
test
sbb
dec
xchg
pop
cld
mov
cmp
js
stos
pop
call
sbb
retf
jmp
test
lods
cmp
std
dec
loop
mov
inc
xchg
xchg
jo
inc
(bad)
adc
rol
jnp
adc
ror
retf
cmp
mov
push
cmps
add
sahf
push
out
inc
idiv
cmp
dec
cli
dec
inc
lea
imul
ins
sbb
fwait
sub
xor
data16
popf
into
les
and
push
and
and
mov
dec
aas
pop
or
rcr
ins
fidiv
les
dec
repnz
test
std
lods
push
pop
imul
scas
mov
js
bound
mov
xor
jge
mov
adc
pop
(bad)
in
shl
jmp
data16
sbb
cmc
shr
ret
xchg
dec
scas
(bad)
jl
in
jl
scas
es
cmc
dec
or
sub
or
xchg
xor
sbb
add
in
fcomp
leave
out
dec
shl
scas
ja
jnp
jns
or
push
loop
out
cmp
mov
pop
adc
out
je
test
jbe
dec
mov
add
xchg
push
add
scas
in
inc
es
xchg
retf
retf
add
ds
outs
addr16
fimul
push
arpl
inc
leave
pop
(bad)
xlat
push
fxch
or
xchg
and
xor
call
push
xor
loope
xchg
pop
js
jae
call
mov
arpl
push
sti
fisubr
jo
js
and
idiv
jno
ss
(bad)
and
push
jmp
ss
and
mov
sbb
sub
daa
xchg
repnz
mov
int3
ficom
mov
sub
sub
fwait
scas
dec
dec
test
sub
pop
shl
xchg
clts
add
fs
es
add
cmps
sub
js
in
push
cmps
retf
or
mov
cmp
mov
pop
adc
or
mov
jbe
and
lods
push
movs
ds
dec
and
mov
push
test
pop
in
mov
repnz
scas
mov
dec
sub
jp
dec
out
ret
lods
xchg
add
fs
imul
cmp
loopne
std
scas
int
ins
inc
call
mov
dec
dec
int
xor
cli
nop
cmps
fwait
pushf
fbstp
sub
mov
pcmpeqw
retf
jp
pop
shl
xchg
dec
pop
(bad)
jmp
imul
iret
and
outs
push
stos
xor
jbe
es
ds
push
adc
adc
pop
pushf
out
movs
inc
mov
push
sahf
hlt
mov
adc
pop
dec
sti
cwde
cld
outs
mov
mov
and
lds
and
xchg
adc
sub
icebp
popf
repnz
xlat
jmp
rcr
inc
or
add
or
or
enter
mov
popa
dec
xor
jnp
push
dec
arpl
and
mov
push
repnz
add
sub
add
adc
call
mov
popa
mov
jbe
outs
fldcw
cmp
pushf
add
lds
pop
sbb
xchg
idiv
inc
xor
lock
movs
adc
push
adc
movs
mov
cs
popf
sbb
sub
cmp
cwde
rcr
xchg
iret
out
int3
or
sub
push
mov
xchg
(bad)
mov
imul
sbb
push
dec
arpl
sahf
adc
loop
dec
cmc
mov
shl
lea
int3
ins
test
es
or
push
pop
mov
outs
push
pop
sub
push
xchg
je
fstp
fwait
movs
lea
rdrand
lods
lea
sbb
sub
shl
or
in
ficom
cmps
sbb
hlt
jno
rcl
dec
ja
mov
jns
jb
push
mov
in
inc
aam
in
icebp
pusha
mov
cli
daa
outs
xor
inc
pop
retf
loop
xor
out
cmp
and
xchg
mov
add
cmp
adc
ror
sub
popf
lahf
pop
and
mov
fiadd
dec
push
push
inc
shl
mov
(bad)
mov
lods
dec
mov
dec
dec
cmp
or
ins
mov
mov
fist
test
mov
dec
adc
(bad)
or
adc
shr
dec
test
inc
aad
xchg
xchg
div
ins
dec
mov
ror
dec
mov
jae
pop
push
push
cdq
add
jl
adc
cdq
js
in
(bad)
jg
rol
mov
cmc
cli
jmp
imul
lea
add
xor
mov
jno
(bad)
cmp
iret
ds
sbb
pop
fisub
lock
dec
inc
dec
mov
pop
pop
xlat
outs
inc
xor
fld
sbb
cdq
(bad)
pop
mov
jl
inc
jne
call
movs
repnz
mov
or
xchg
mov
arpl
movs
fs
and
test
(bad)
or
in
or
push
scas
stc
popa
jno
dec
fwait
sbb
mov
pop
jbe
ret
sbb
into
lods
adc
es
xor
add
popa
clc
cld
inc
ret
cmps
pop
mov
cmps
arpl
shr
mov
sar
test
(bad)
ret
jnp
fldcw
das
push
std
cdq
fistp
push
xchg
inc
out
sbb
shl
popa
mov
dec
pop
sbb
or
push
lahf
cmp
adc
mov
bound
xor
lods
adc
jbe
and
xchg
and
pop
dec
fsubr
push
sti
push
push
add
lods
pusha
or
cmp
mov
fadd
in
push
xor
mov
adc
fidivr
mov
outs
xor
sbb
sbb
fcomp
les
(bad)
imul
or
cmp
dec
pop
in
aad
inc
rol
inc
dec
pop
mov
mov
(bad)
pusha
sub
loopne
add
jnp
shl
jno
fld
ins
cmp
and
push
sbb
and
push
aam
imul
mov
cmp
lea
pop
in
fadd
xchg
push
cli
cmp
adc
pop
loop
into
xchg
lds
out
pop
add
mov
ss
dec
mov
jne
or
movs
cmp
sbb
dec
popf
mov
xor
xor
ja
mov
data16
aad
xchg
inc
mov
dec
aaa
inc
push
push
cmp
xchg
jl
data16
retf
mov
dec
xchg
das
fs
loopne
iret
not
push
pop
add
dec
dec
push
cld
(bad)
outs
lahf
sub
in
xchg
jae
imul
je
jbe
scas
xchg
adc
xchg
iret
sti
adc
cmps
adc
retf
mul
sahf
sti
test
jecxz
mov
pop
loopne
mov
movs
pop
cmp
loope
pop
jmp
stc
in
push
repz
into
ret
call
scas
out
lods
lahf
mov
out
mov
cmc
inc
dec
sbb
xor
adc
sub
or
stos
push
icebp
push
xlat
rol
ret
scas
or
call
jg
cmp
test
inc
inc
ds
mov
daa
cmps
(bad)
push
(bad)
in
lock
cli
cmp
sbb
call
sub
pop
fwait
scas
ja
ss
in
mov
and
mov
xlat
pop
or
mov
retf
loopne
test
nop
or
xor
pop
pop
xchg
les
pop
ret
arpl
jbe
call
faddp
fldenv
and
or
pop
jmp
and
xchg
xor
imul
mov
sub
data16
nop
cmp
dec
aad
jae
push
add
lods
dec
fwait
cs
int3
in
cmps
add
int
pop
sbb
hlt
jmp
mov
test
movs
out
cmp
jl
fdivr
push
mov
lea
repz
cmp
mov
shr
icebp
ja
in
out
stc
int
repz
sahf
ds
gs
mov
pop
sub
addr16
push
dec
jno
mov
pop
enter
inc
fmul
mov
xchg
jmp
popa
dec
cwde
pusha
mov
jns
mov
jmp
mov
shl
cli
pop
jl
inc
xlat
aas
les
mov
test
and
jl
nop
and
inc
(bad)
stc
test
cdq
repz
xor
int3
adc
inc
add
add
mov
adc
mov
loopne
fcmovbe
adc
sbb
(bad)
retf
or
and
and
xchg
mov
scas
dec
jne
(bad)
leave
lock
aaa
mov
xor
and
mov
mov
imul
jl
jl
mov
or
or
arpl
ror
push
push
mov
sbb
jg
out
mov
(bad)
imul
repnz
(bad)
aas
ins
xor
ins
arpl
test
lds
retf
adc
mov
inc
js
pusha
(bad)
ins
inc
mov
iret
loop
enter
arpl
mov
mov
push
(bad)
jecxz
inc
inc
dec
pop
pop
loope
xchg
aaa
mov
and
mov
popa
mov
mov
into
xor
scas
xchg
aad
xor
inc
in
dec
pop
call
push
int3
ret
fmul
dec
les
cmps
in
jno
dec
ins
fsub
jb
aaa
mov
xor
xchg
lds
adc
stos
(bad)
pop
jns
call
popf
xchg
sbb
rol
pop
and
adc
mov
enter
xchg
push
pop
dec
push
dec
jb
mov
push
dec
movs
mov
push
jo
ret
dec
test
pop
inc
lahf
ins
es
test
push
pop
mov
xor
enter
loope
stos
xor
aaa
popf
iret
std
(bad)
adc
push
and
scas
rcr
ret
rcr
jmp
xchg
clc
leave
pusha
xchg
pop
push
push
sbb
mov
mov
in
in
ret
mov
add
mov
sti
out
test
popf
pop
push
add
push
les
inc
lods
out
imul
je
out
or
inc
retf
ins
cmc
adc
xchg
or
arpl
lea
pop
sub
hlt
adc
enter
mov
in
jmp
push
imul
fwait
ja
call
jle
cmp
imul
cli
inc
gs
or
cmp
inc
mov
jbe
ins
ffree
stos
bound
icebp
jns
stc
xor
mov
retf
mov
std
pop
repz
xchg
enter
push
inc
aad
cmps
fwait
in
popa
scas
and
fnstsw
test
mov
dec
sub
cmp
outs
test
xchg
(bad)
or
cmp
mov
xlat
jo
fsub
out
mov
lods
sbb
les
ins
mov
and
stos
inc
jbe
daa
jnp
fimul
repz
dec
in
xchg
ds
mov
jg
jbe
or
test
jmp
(bad)
das
jnp
inc
sbb
ds
cmps
test
mov
fcom
cmc
retf
(bad)
call
icebp
dec
adc
and
pop
shl
inc
pop
arpl
fist
daa
mov
dec
(bad)
test
dec
push
dec
jecxz
xor
inc
sub
dec
xlat
in
sub
test
fstp
mov
xor
into
mov
out
loopne
xchg
sahf
(bad)
xchg
pusha
xchg
cmps
or
jp
ins
xor
push
mov
cmp
or
stc
stos
in
cmps
jo
inc
jo
add
inc
mov
sbb
pusha
xchg
cmp
jne
arpl
inc
push
xchg
(bad)
cmp
lock
sub
sbb
mov
repz
aam
jo
test
add
stos
xlat
push
ror
cs
pushf
and
push
loopne
adc
hlt
pop
and
fbstp
pop
sub
int3
sub
fimul
shr
shl
sbb
mov
dec
rcr
pop
ret
outs
(bad)
jae
pop
jmp
sti
cli
jg
cld
repnz
push
mov
dec
jle
lods
jle
adc
mov
jecxz
jo
mov
xchg
clc
in
jbe
stos
xor
inc
add
in
inc
dec
inc
out
mov
cmc
add
retf
outs
repz
pushf
pusha
in
pop
ss
or
hlt
sbb
and
xchg
scas
and
push
pop
pop
cmps
pop
mov
cmp
and
mov
adc
arpl
cmp
mov
inc
cwde
(bad)
addr16
and
mov
repz
sbb
sbb
xchg
mov
push
sbb
inc
or
inc
dec
pusha
pop
mov
xchg
adc
int3
out
jg
push
call
dec
out
mov
and
jno
cli
ss
cmp
xchg
movs
pop
pop
fisttp
ror
push
idiv
movs
out
nop
sbb
dec
mov
iret
loope
sub
pop
fild
fld
dec
sbb
shl
es
cmp
cmc
add
add
mov
sbb
xchg
add
mov
data16
mov
mov
cmc
mov
jg
cdq
hlt
jnp
or
dec
out
mov
div
cmp
movs
imul
xlat
pop
les
cs
loope
push
in
pusha
fsubp
xchg
(bad)
hlt
out
jnp
xchg
int3
repnz
push
dec
mov
pop
xchg
sar
jne
jg
xor
adc
push
and
dec
sbb
cmp
mov
lahf
mov
push
imul
push
adc
ret
xchg
ror
jno
pop
ret
popf
dec
inc
iret
test
sahf
push
call
push
xor
inc
xchg
pop
mov
mov
xor
sub
out
popf
xchg
cmp
ret
(bad)
aaa
lock
push
xor
xor
es
sub
mov
adc
popa
test
push
out
pop
inc
lahf
fidiv
daa
mov
xchg
outs
lea
sub
dec
mov
out
js
fst
pop
xchg
or
mov
mov
out
push
push
pop
clc
and
mov
xor
jo
lods
loop
push
inc
test
sahf
scas
movs
mov
jno
pushf
inc
and
xor
stc
sub
or
in
ret
mov
mov
scas
fild
stos
retf
adc
mov
jne
add
cmp
std
repnz
ds
jae
jmp
fcomp
test
pop
cld
int
xchg
inc
xlat
mov
push
mov
daa
push
push
xchg
ins
jmp
ja
xor
and
cmp
push
cmp
shl
xlat
in
jmp
add
pop
inc
pop
mov
ret
in
inc
adc
mov
inc
idiv
push
pop
xchg
jno
xor
out
ja
ret
sub
xchg
jae
(bad)
mov
mov
jg
std
push
fnstenv
add
xor
xchg
call
and
imul
jg
cld
jg
pushf
sbb
outs
leave
cmp
mov
jne
xchg
xor
add
ror
fwait
mov
and
mov
fdivrp
or
jno
cmp
sub
push
jae
inc
jg
mov
cli
mov
add
jge
push
repz
dec
(bad)
sub
popf
jmp
movs
mov
popf
dec
mov
(bad)
jl
scas
sti
adc
aam
test
stc
pop
xchg
repnz
fs
call
int
pop
das
jb
loopne
loopne
xchg
push
add
cmp
fistp
pushf
add
(bad)
loope
sbb
pop
push
xchg
popf
mov
jns
inc
xor
into
neg
dec
ret
pop
iret
std
xor
jmp
jno
test
xchg
out
pop
or
or
adc
and
push
test
jae
scas
mov
out
dec
out
dec
jae
ins
mov
jg
in
stos
ds
adc
sbb
jl
sbb
pop
fdiv
leave
xor
add
test
mov
xchg
retf
mov
dec
pop
add
xchg
fimul
outs
loop
fs
out
cdq
lahf
xlat
retf
sti
test
imul
xor
in
(bad)
fisttp
fisub
xchg
sbb
jmp
sbb
xor
add
out
jae
jg
pop
inc
xchg
mov
pop
push
sub
add
cmp
cmp
mov
popa
and
aas
pusha
fisttp
neg
cmp
or
ret
imul
cli
mov
push
repz
jne
mov
and
and
cmp
jg
aad
into
inc
jo
fisub
shr
dec
ret
or
mov
std
in
sbb
inc
inc
push
jle
idiv
inc
push
sbb
std
not
and
add
xor
lock
inc
add
bound
dec
jge
popf
or
enter
dec
cmp
outs
aad
jnp
push
pop
pop
dec
xchg
sbb
sbb
jno
inc
cli
jno
lds
outs
hlt
sbb
cdq
arpl
sub
lds
push
repz
cwde
inc
mov
shl
jg
cmp
cs
pop
cmp
inc
(bad)
in
das
test
pop
xchg
or
test
mov
lods
cs
push
movs
mov
xor
rcr
add
ins
ss
fdiv
cmp
inc
(bad)
cmc
jnp
addps
xor
pop
jne
cmp
pop
(bad)
std
sub
push
jg
fwait
push
aad
ins
ja
dec
push
mov
xor
mov
(bad)
imul
stos
push
pop
jmp
pop
ds
mov
add
jg
dec
jg
pop
xchg
jmp
sbb
xor
adc
xlat
xchg
pop
ret
mov
jnp
fcomi
sbb
icebp
arpl
dec
mov
rsm
imul
(bad)
xor
aam
sub
or
and
retf
cmp
xor
out
jbe
mov
add
cmps
(bad)
jge
cmc
test
dec
sar
shl
outs
(bad)
cwde
fdivr
(bad)
sbb
jp
and
inc
pop
clc
pop
xchg
imul
lods
arpl
sub
mov
or
les
cmc
and
ret
popf
data16
sbb
jge
loopne
jnp
sub
adc
xchg
ins
fist
add
add
aas
inc
ret
call
and
pop
jmp
push
imul
xchg
mov
push
sub
jmp
jmp
mov
mov
inc
fsubr
lea
xor
sbb
xchg
stc
jg
sub
arpl
push
push
hlt
ss
mov
bound
pop
mov
xor
ins
cld
repz
mov
dec
aad
ins
inc
test
mov
mov
mov
mov
sub
test
das
sti
into
jno
mov
pushf
cmp
dec
(bad)
pop
mov
inc
or
cmps
jg
shr
jmp
test
sbb
loopne
mov
(bad)
fcom
nop
dec
shr
call
bound
add
out
cmp
dec
pop
push
mov
rcr
mov
imul
inc
mov
push
jns
jle
shl
xchg
outs
push
rcr
fdiv
daa
test
movs
lock
fdivr
xor
jp
push
cmp
adc
adc
call
add
inc
cmps
fsubp
(bad)
(bad)
fldcw
out
and
push
in
sbb
(bad)
or
jp
pop
fiadd
pop
jbe
adc
test
push
adc
(bad)
lahf
add
xchg
xlat
or
sahf
addr16
ins
inc
dec
les
fcmovb
lahf
inc
fxtract
test
iret
add
iret
sub
cmp
xchg
pop
xchg
fs
xor
and
dec
addr16
push
add
inc
jns
retf
adc
or
adc
outs
or
mov
xor
mov
xchg
jbe
push
push
repz
push
iret
jp
ins
inc
adc
jo
lahf
aam
ss
nop
clc
das
scas
dec
and
xchg
sbb
popa
push
and
call
out
push
sbb
mov
xor
std
jo
sbb
ffree
jne
pop
sub
leave
xor
inc
rcr
xlat
cmps
mov
ss
adc
sahf
popa
aas
lock
sub
fdiv
cmp
xor
sub
jge
or
pop
pusha
popa
jle
int
pop
adc
push
xchg
fnstcw
jg
mov
call
dec
jmp
pop
jle
mov
jo
fwait
gs
int3
shl
cwde
push
mov
jecxz
les
push
add
push
mov
sub
je
sbb
mov
jno
or
pop
mov
jecxz
rcr
dec
stos
jns
sbb
sbb
scas
jno
or
lods
pushf
adc
xchg
mov
aaa
ins
cmp
hlt
jecxz
cld
add
or
repnz
pushf
inc
mov
ja
push
and
(bad)
xor
mov
out
pop
int
xchg
enter
pop
sti
add
(bad)
popa
popa
push
inc
mov
and
shr
outs
cmp
ins
ret
scas
int
add
adc
out
mov
pop
ficom
sbb
fldcw
hlt
sub
xchg
(bad)
jmp
test
mov
jmp
lock
adc
sub
mov
xchg
es
pop
jnp
arpl
mov
sub
std
jo
or
lock
push
xor
push
ret
mov
aam
mov
add
mov
dec
aaa
into
test
cli
test
inc
rcr
ja
outs
neg
in
loop
aam
out
sub
add
dec
div
jbe
mov
push
xchg
pop
or
push
in
stos
dec
push
mov
fidiv
jg
ins
in
retf
sub
mov
dec
inc
icebp
pop
cmc
fs
push
pop
out
test
dec
mov
fistp
loopne
js
retf
sub
pop
xlat
sub
add
jp
in
enter
jo
cs
inc
shr
std
out
cmps
inc
addr16
jmp
push
(bad)
shr
outs
mov
int
enter
xchg
mov
push
mov
and
push
jb
cmp
cmc
adc
nop
mov
mov
fucomp
mov
ins
je
push
enter
inc
push
cs
pop
jge
outs
push
jmp
mov
movs
call
mov
out
mov
add
dec
inc
jmp
imul
lods
test
dec
xchg
cmp
cmps
adc
xchg
inc
push
push
lods
mov
cwde
pop
ficom
enter
push
mov
cdq
adc
xor
add
dec
push
movs
and
into
fdivp
or
enter
retf
sar
mov
stc
or
dec
and
adc
ss
xlat
push
xor
fwait
pop
mov
dec
mov
pop
jmp
int
inc
jmp
in
xchg
mov
mov
add
jnp
mov
inc
pushf
pusha
or
adc
pop
jb
pop
add
xlat
outs
ret
mov
mov
(bad)
fisttp
xlat
mov
iret
les
enter
popf
ins
stos
jmp
cmp
cdq
inc
ss
push
adc
add
pop
stc
mov
adc
outs
dec
sub
xor
shr
mov
xor
ss
dec
pop
ins
es
hlt
xchg
retf
(bad)
rcl
pushf
dec
dec
dec
cmps
loop
ret
add
mov
mov
add
dec
xor
out
jle
loopne
iret
int3
mov
mov
xor
imul
mov
dec
(bad)
arpl
cmp
sbb
sub
lods
aad
mov
inc
repz
cmp
mov
lahf
stos
icebp
inc
addr16
icebp
jb
inc
inc
cmp
mov
mov
push
inc
ss
sbb
dec
les
push
push
loope
inc
sub
nop
dec
mov
add
loope
loopne
inc
cs
js
repnz
out
push
sbb
loopne
out
jle
js
mov
aaa
pop
mov
ds
clc
inc
add
push
jno
je
push
jbe
aam
lods
and
xchg
test
nop
call
adc
mov
sub
or
xor
xchg
push
sbb
jmp
inc
lods
out
bound
lock
xor
js
inc
xchg
xor
mov
cmp
jecxz
rol
sbb
adc
daa
mov
and
push
push
xor
aaa
push
mov
inc
movs
les
mov
sahf
sbb
ins
and
sub
push
cmp
mov
jne
scas
inc
push
cwde
dec
push
jp
aad
mov
shr
sub
cdq
fidiv
fmul
add
and
ret
sbb
movs
outs
jo
pop
repnz
mov
in
jne
div
sbb
mov
pop
dec
js
xor
lea
cmp
mov
mov
jns
xchg
bound
sahf
(bad)
cmp
fistp
sbb
and
sbb
imul
jnp
add
outs
sbb
cmps
jmp
pop
shl
inc
xchg
push
rcr
sub
arpl
and
jne
or
sti
xchg
(bad)
sub
jb
sbb
xor
(bad)
shr
xor
nop
shl
(bad)
mov
add
sub
xchg
(bad)
sbb
cmps
dec
xchg
mov
pop
hlt
push
icebp
dec
cld
sub
jmp
sub
push
fwait
popa
(bad)
push
jo
mov
xlat
ins
sbb
push
push
leave
xchg
xchg
shl
adc
adc
sub
fadd
aas
popf
fidiv
imul
movs
xor
jo
test
sahf
stos
cmp
jne
scas
imul
icebp
dec
repnz
sahf
push
lds
jle
xor
jno
and
(bad)
mov
push
mov
pop
mov
dec
les
jnp
xchg
jg
(bad)
fistp
push
mov
jle
rol
int3
xlat
sahf
lock
adc
and
test
mov
mov
pop
mov
lahf
mov
cwde
repz
outs
xor
or
jg
jecxz
fsubr
pop
xchg
call
enter
retf
pop
add
ja
dec
xchg
mov
rol
(bad)
mov
lea
xchg
push
and
packuswb
int
cmps
push
xor
mov
sahf
dec
add
arpl
scas
jle
outs
and
xchg
retf
mov
sbb
jno
in
shr
xlat
das
in
dec
and
mov
mov
jnp
sbb
mov
xor
(bad)
aas
sub
mov
inc
mov
push
and
and
xchg
push
mov
xchg
mov
mov
jne
inc
adc
inc
push
or
xchg
out
fist
mov
or
aam
adc
mov
jno
repz
test
outs
dec
nop
xchg
jmp
or
xchg
lahf
int3
mov
and
xchg
iret
xchg
sub
jno
pushf
(bad)
push
cmps
xor
imul
and
cmp
push
pop
scas
repnz
xor
in
xor
push
adc
mov
adc
cmc
or
mov
inc
out
or
or
call
shr
leave
mov
movs
cs
push
rcl
lea
jecxz
xchg
or
cmps
cmp
daa
pop
adc
ins
cmp
(bad)
fstp
and
mov
jns
mov
aam
aam
sbb
aam
add
stos
push
int
les
out
out
or
scas
sbb
cwde
jp
loope
gs
pushf
pop
mov
idiv
xchg
ins
xchg
jecxz
repz
mov
mov
aam
and
(bad)
adc
pusha
mov
clc
add
cs
(bad)
push
in
outs
cld
das
sbb
enter
add
push
imul
out
xor
xor
mov
push
mul
sbb
xchg
ror
jmp
mov
cmp
adc
jl
fwait
movs
rol
les
dec
sub
call
push
mov
jge
mov
add
aas
dec
xchg
rcl
in
xor
sub
adc
sbb
push
cmc
jp
and
outs
pop
sub
je
push
lea
mov
add
(bad)
in
cmp
pop
pop
mov
in
xor
js
sub
sti
aaa
mov
or
aas
pop
idiv
jns
out
lock
mov
xchg
pop
mov
shl
xor
int3
outs
(bad)
shl
pop
test
shl
into
out
repnz
loop
xchg
jecxz
mov
lea
xor
and
or
dec
xor
and
sub
xchg
js
mov
cmp
cmp
and
add
pusha
lock
jbe
mov
jg
lods
xchg
daa
je
adc
xchg
mov
mov
arpl
ins
test
inc
std
sub
add
mov
lea
leave
jne
add
test
jno
and
add
cmp
leave
jmp
adc
out
jmp
sub
adc
mov
jl
push
fst
pop
inc
mov
ins
pop
mov
xchg
push
sbb
cmc
cmps
push
fmul
repz
idiv
cmp
loopne
pop
sbb
and
lahf
lds
mov
out
scas
lock
dec
push
outs
sbb
pop
aas
addr16
cmp
call
int
jae
jae
cwde
movs
addr16
icebp
retf
mov
cwde
sar
xor
imul
and
ret
pop
ds
sar
stos
mov
icebp
sub
retf
into
cdq
cmp
ffree
sbb
mov
mov
pop
sbb
sub
test
jbe
test
mov
movs
mov
shl
inc
fwait
(bad)
mov
mov
add
lock
imul
jbe
sbb
cmp
mov
and
sbb
fild
aas
popf
mov
xchg
sbb
movs
cdq
sbb
sbb
pop
pop
les
fwait
cld
fnstsw
cmp
mov
std
out
lock
jbe
mov
pop
test
movs
arpl
push
xor
pop
mov
or
dec
jns
nop
sub
xchg
xor
xor
sbb
and
(bad)
das
test
pop
xor
jae
jg
pop
lahf
shr
mov
repz
xor
outs
mov
pop
int3
mov
jmp
push
shl
push
int
hlt
sub
xchg
outs
(bad)
das
out
rcr
add
(bad)
idiv
and
inc
aaa
mov
mov
arpl
out
adc
add
fidivr
add
xor
jmp
inc
idiv
mov
or
jno
and
xchg
es
clc
dec
jns
test
add
sub
(bad)
loopne
adc
adc
(bad)
pop
mov
pushf
xor
jns
fs
xor
and
mov
push
mov
xchg
call
out
add
push
in
pop
mov
cmp
adc
(bad)
movs
shr
(bad)
aaa
push
jne
mov
push
pop
jae
(bad)
test
push
xlat
mov
sti
dec
rcl
and
xor
out
adc
dec
cmps
xchg
inc
outs
iret
inc
gs
sar
push
mov
lea
dec
jno
jg
test
sbb
jge
xchg
jmp
mov
inc
les
test
push
xchg
addr16
and
push
into
mov
inc
inc
xor
je
lea
bound
sbb
cdq
ror
test
dec
outs
sbb
and
add
inc
daa
movs
pop
mov
pop
xor
in
(bad)
and
rcr
ins
jmp
lock
jp
push
pop
jecxz
inc
jmp
pop
pushf
pop
rol
sub
adc
fst
addr16
mov
movs
test
and
inc
mov
adc
jno
in
jne
jne
inc
push
cmps
sub
cwde
pop
push
sub
dec
(bad)
es
sbb
dec
fidivr
push
pop
or
fild
aam
add
lea
push
jae
or
mov
enter
push
xchg
jecxz
sbb
lds
cmps
dec
fbstp
sub
(bad)
call
mov
cmp
pusha
movs
lods
sbb
aaa
push
aas
and
adc
mov
shr
mul
cwde
mov
mov
sar
xlat
xor
and
pop
mov
mov
cwde
not
out
sub
test
jmp
mov
iret
mov
dec
stos
dec
jge
or
out
(bad)
bound
ret
add
jo
add
loopne
inc
lock
dec
push
lods
sbb
push
jge
pop
or
dec
push
jle
stos
mov
jne
xchg
cli
dec
aad
mov
popf
add
scas
sbb
push
in
loopne
fdiv
scas
test
cli
imul
and
cmps
dec
or
jg
mul
mov
pop
push
jl
outs
ror
outs
inc
or
dec
fcomp
test
out
mov
mov
int
out
and
jmp
cs
xor
cs
js
stc
rcr
imul
and
jb
rcl
test
mov
rcl
add
aaa
pop
cwde
jne
test
cmc
into
mov
xor
dec
mov
xchg
imul
jle
add
mov
hlt
or
sub
or
mov
push
cmp
(bad)
pop
arpl
leave
jo
and
aas
xor
jne
sbb
cmp
pushf
outs
retf
imul
aad
cld
out
scas
jecxz
mov
in
shl
outs
sub
scas
adc
sbb
pushf
das
inc
xchg
pushf
jae
mov
cmp
add
pop
pop
cmp
cmps
call
pop
retf
jo
mov
xlat
stos
(bad)
xor
fs
push
dec
data16
add
lahf
ins
or
fsub
pop
jle
add
ret
lahf
sub
loop
xchg
daa
cmp
call
dec
mov
and
fisttp
add
arpl
jg
ds
mov
loop
cld
pop
daa
rol
icebp
jns
ins
jp
sbb
sub
fs
outs
fisttp
xchg
out
push
aas
mov
out
not
movs
pop
push
push
not
xchg
fstp
or
cmp
retf
arpl
pop
xchg
pop
in
sub
retf
into
cwde
jge
rol
mov
mov
pop
mov
das
xchg
adc
loope
repz
or
iret
ds
ret
mov
mov
sub
pop
(bad)
jl
push
in
test
and
mov
lahf
adc
jmp
mov
pop
ins
dec
ss
pop
mov
dec
inc
sbb
fcomp
xchg
data16
and
pop
push
(bad)
cmp
pop
jae
pop
push
in
pop
pushf
cmps
(bad)
mov
pop
mov
(bad)
loope
aam
sbb
(bad)
in
aaa
adc
iret
mov
dec
mov
jbe
sbb
outs
adc
adc
fld
add
loopne
(bad)
cs
mov
jl
or
push
mov
mov
mov
test
dec
sahf
inc
adc
data16
or
inc
ja
cld
mov
sub
imul
aad
adc
ds
loope
push
inc
push
xchg
mov
mov
fs
lahf
inc
(bad)
(bad)
cs
in
je
lods
lea
mov
pop
aas
les
mov
iret
mov
addr16
jno
call
aaa
pop
je
sbb
mov
in
xchg
xor
cld
outs
cmc
and
ss
test
enter
add
repz
fimul
jecxz
push
dec
ror
ss
jno
arpl
push
mov
or
push
into
ror
(bad)
jns
(bad)
hlt
aam
out
mov
aas
dec
mov
ja
xor
pop
mov
mov
fcomp
jle
add
push
cwde
frstor
call
outs
movs
daa
pusha
imul
stc
dec
or
movs
or
mov
mov
jg
jb
scas
movs
pusha
jbe
xchg
dec
mov
mov
loopne
mov
aam
mov
mov
push
ret
test
sahf
ret
popa
retf
shr
js
and
or
add
dec
mov
ja
test
int
cmps
je
push
push
cmp
shl
es
jmp
push
jae
mov
rcr
sub
repz
adc
sub
xor
push
sub
pop
repnz
outs
jg
dec
adc
iret
nop
(bad)
in
call
xor
dec
inc
ins
dec
xor
lods
fdivrp
hlt
leave
inc
xchg
repz
stc
fistp
sbb
movs
ficom
mov
fcom
dec
and
xchg
sbb
adc
pop
add
or
sub
hlt
pop
(bad)
cmp
add
mov
xchg
test
push
out
outs
mov
push
call
loope
push
mov
sbb
jb
lds
xchg
push
jecxz
add
jmp
icebp
xor
sub
add
and
push
inc
and
xor
ret
xchg
fdivr
icebp
xchg
push
jp
mov
or
dec
pop
inc
lods
mov
fnstsw
test
cmp
ja
ret
bound
pusha
outs
mov
push
ins
pop
add
xchg
push
in
and
and
sti
repnz
jmp
(bad)
sub
cdq
jmp
sbb
ds
inc
stc
cdq
ret
mov
sbb
std
bound
jne
jle
cmps
dec
pop
pushf
and
test
pop
mov
arpl
dec
jmp
leave
or
jecxz
fcmovne
arpl
adc
in
jbe
add
cmp
pusha
addr16
jae
jl
cmc
rol
addr16
iret
jecxz
xor
mov
mov
stos
enter
add
push
rcr
pop
div
and
inc
inc
cmp
test
fs
or
push
pop
test
ins
js
stc
ficomp
ja
aaa
loop
adc
mov
xchg
sbb
and
or
mov
lods
push
dec
out
cmp
cmp
aaa
fistp
or
mov
sub
inc
jno
xor
dec
xchg
std
cmp
adc
cli
push
repnz
adc
aas
popa
jo
imul
pop
cmc
jne
es
dec
adc
xor
dec
mov
je
scas
daa
xor
or
jge
push
or
popf
xchg
ins
adc
in
nop
icebp
push
ds
inc
add
xchg
imul
sbb
xchg
cmp
mov
xchg
lock
push
mov
or
pop
je
mov
push
push
ins
dec
and
out
aad
add
pusha
mov
gs
lds
lods
xor
jle
leave
aam
(bad)
jge
xor
cld
cmp
call
repz
das
inc
int3
push
add
dec
inc
jnp
push
sub
mov
xchg
std
fldenv
dec
cwde
in
or
(bad)
sbb
das
jl
ins
leave
jg
rol
dec
cmp
mov
repnz
lods
inc
int3
jae
rcr
scas
sub
lods
fmul
gs
minps
mov
fadd
call
fwait
call
out
(bad)
jecxz
mov
(bad)
fcomp
aam
enter
std
push
and
push
adc
inc
push
outs
and
mov
push
dec
sbb
mov
lods
cmp
dec
xor
dec
mov
add
jg
jg
push
rol
cmp
sub
outs
and
jle
mov
xlat
nop
scas
dec
or
jnp
adc
inc
outs
mov
mov
bound
loop
push
gs
jle
push
dec
and
jno
out
and
dec
xchg
call
js
frstor
or
fucomip
push
(bad)
call
rol
(bad)
das
inc
dec
popf
mov
cmps
call
addr16
add
sbb
addr16
arpl
dec
cmp
in
sub
adc
movs
enter
sbb
aaa
push
mov
or
cld
adc
or
nop
sbb
addr16
xor
mov
xchg
xlat
aam
adc
fs
test
inc
inc
aaa
pop
mov
cmps
in
or
(bad)
loop
mov
xor
hlt
push
mov
xor
jne
jle
add
repnz
mov
rcr
scas
fwait
sar
sub
iret
cmp
in
idiv
mov
out
xor
xchg
cmc
int
push
jp
pop
mov
retf
clc
stc
mov
and
push
jo
mov
test
push
and
test
dec
mov
xchg
(bad)
xlat
mov
sahf
imul
or
aaa
jnp
add
(bad)
movs
movs
stos
adc
pop
mov
js
xor
mul
out
pop
cmp
jne
gs
icebp
sub
or
or
jae
mov
adc
cmc
jp
add
fmul
imul
add
(bad)
jg
push
das
and
shl
sub
inc
add
mov
pop
push
sub
cmp
mov
add
xchg
out
std
add
mov
iret
or
adc
addr16
sbb
shl
and
icebp
(bad)
pusha
sub
scas
or
jmp
(bad)
jmp
dec
ret
push
xor
push
daa
dec
mov
int
sub
xchg
sub
out
adc
jae
outs
adc
sub
and
or
arpl
mov
jl
cs
test
(bad)
push
jp
sub
xor
push
or
mov
pop
popf
mul
in
add
aas
xchg
sahf
cmps
sub
dec
push
stos
test
mov
(bad)
lds
loop
movs
arpl
nop
and
es
xor
int
push
in
xor
idiv
(bad)
xlat
add
jo
fcmovbe
xor
xor
cmps
in
add
dec
jmp
scas
push
mov
sbb
dec
movs
es
(bad)
xbegin
fld
(bad)
sub
(bad)
cmps
mov
inc
arpl
inc
loopne
test
cmp
mov
test
into
mov
or
lea
jmp
aam
call
aaa
ins
(bad)
mov
pop
or
(bad)
aaa
add
push
shr
popf
pop
shr
dec
loope
stos
mov
loope
jb
jp
xor
push
inc
movs
lock
pop
stos
jae
jge
mov
hlt
pop
fiadd
stos
push
adc
sahf
push
push
push
dec
sub
js
cmp
xor
add
nop
add
pop
push
sub
push
div
inc
add
ins
mov
push
push
adc
adc
xchg
lahf
xor
xchg
xchg
ss
rcr
fs
cwde
sub
lods
shr
dec
(bad)
sbb
ins
add
jne
sub
scas
js
cdq
lds
cmp
mov
aas
imul
push
inc
xlat
mov
push
xchg
popa
dec
add
pop
push
cmps
lods
in
xchg
adc
test
or
data16
dec
mov
std
in
jecxz
out
ins
je
or
std
jb
xor
and
inc
or
pop
hlt
icebp
xchg
aam
push
dec
mov
mov
and
ja
retf
scas
mov
xor
mov
fmul
xchg
jo
jg
(bad)
mov
ins
lea
jne
or
sub
movs
cmp
adc
jae
(bad)
std
jnp
and
and
enter
pop
cmc
inc
and
mov
out
mov
add
dec
inc
lods
in
jb
pop
dec
pop
ja
loop
mov
pop
mov
lds
ret
push
into
enter
cmc
std
jmp
dec
fiadd
call
jle
in
popa
mov
in
xchg
adc
jle
leave
cmp
and
mov
xor
adc
push
scas
fsubr
fsub
mov
and
xor
or
std
xchg
xor
fs
push
jo
test
idiv
push
jnp
out
pop
scas
and
or
dec
pop
inc
int3
fstp
jmp
cdq
jo
adc
inc
inc
cmc
sub
fwait
cld
push
ja
sbb
and
adc
adc
in
sbb
cmps
jbe
out
aam
mov
inc
push
rcl
jne
mov
daa
arpl
mov
push
dec
and
(bad)
mov
rcl
stos
rcl
dec
mov
adc
cmove
pop
cwde
xor
xor
mov
cmp
xlat
xadd
jne
mov
mov
arpl
push
int3
and
loopne
daa
ret
cmp
jmp
jg
shl
jo
fild
sar
repz
or
fpatan
adc
out
jmp
inc
call
test
push
bound
mov
push
adc
in
jbe
dec
fild
clc
(bad)
inc
xchg
fwait
xlat
scas
or
loope
shl
inc
int3
outs
push
icebp
(bad)
cmp
stos
jo
xor
fdiv
out
fisubr
nop
movs
scas
lods
push
scas
adc
sahf
jmp
dec
loopne
xor
xchg
jmp
cmp
jbe
hlt
neg
daa
push
shl
xchg
cmp
test
fldcw
add
(bad)
adc
(bad)
ficomp
retf
inc
(bad)
adc
xchg
cmp
xchg
mov
xor
xchg
pusha
test
stos
fiadd
out
inc
sbb
aam
cmp
mov
pop
and
aam
push
lea
inc
cmp
test
repz
sbb
mov
dec
jns
sbb
jmp
xor
int3
ins
sbb
jno
retf
inc
cmc
mov
dec
jl
cmp
xor
loope
mov
lods
in
daa
mov
mov
push
aad
dec
sbb
lods
aaa
push
and
nop
add
jne
sub
leave
adc
push
dec
mov
cmp
out
or
jae
add
test
pushf
test
adc
adc
jmp
xor
pop
pop
ds
in
mov
(bad)
mov
add
pop
ins
or
add
cmp
xchg
cli
pop
push
jl
ret
les
outs
dec
(bad)
stc
ja
jae
xor
jnp
inc
hlt
jp
(bad)
push
push
shl
rcr
mov
sbb
stos
sbb
repz
and
add
inc
mov
xor
stos
in
add
(bad)
pop
(bad)
xor
test
out
div
push
jmp
lods
xchg
cmp
push
(bad)
xchg
and
push
movs
arpl
inc
inc
test
(bad)
mov
or
sbb
jns
sti
je
retf
fs
adc
addr16
lock
adc
out
arpl
jmp
or
jns
clc
push
jmp
sub
mov
call
fisub
inc
sbb
aad
ror
or
loop
jmp
gs
shr
adc
int3
(bad)
clc
ins
sbb
ret
cld
aaa
(bad)
inc
dec
scas
cdq
fisub
sti
div
movs
sbb
out
cdq
sbb
mov
or
arpl
sub
cmp
and
xchg
sbb
pop
fild
adc
dec
rcl
(bad)
jge
sub
fwait
push
in
in
jg
or
cmp
mov
jns
or
gs
jmp
retf
pop
es
jb
out
pusha
mov
dec
(bad)
and
pop
dec
inc
pop
ret
aad
sub
daa
enter
xchg
out
shr
mov
mov
pop
outs
mov
test
inc
jmp
(bad)
rcr
and
push
ja
fdiv
sbb
push
sub
mov
sbb
mov
mov
add
inc
push
sub
mov
sub
fcomp
adc
out
(bad)
je
pop
and
xlat
mov
mov
xchg
push
addr16
adc
mov
ins
fbstp
add
outs
add
pop
call
push
jp
into
std
rol
inc
je
and
clc
xchg
add
sub
popf
sbb
pop
push
pushf
hlt
cmp
aaa
das
call
inc
push
popa
mov
mov
scas
aas
test
(bad)
repnz
imul
push
add
adc
mov
jmp
mov
stos
inc
or
mov
push
ret
dec
add
outs
call
(bad)
push
dec
nop
ror
mov
js
gs
xchg
and
cdq
jl
jge
data16
jecxz
movs
cmp
icebp
push
rcl
sub
fcom
sub
pop
mov
jnp
xchg
dec
sbb
pop
lods
inc
mov
fcom
inc
int3
stc
repz
add
push
pop
cmp
jmp
ss
hlt
xor
pusha
imul
popa
into
xchg
test
int3
sub
or
add
shl
test
push
(bad)
in
ds
arpl
ret
shl
in
fdiv
cld
repnz
mov
shl
sub
fdivr
fidiv
jnp
in
mov
enter
outs
jg
(bad)
popf
shr
sub
(bad)
sbb
push
sub
leave
jp
int
push
(bad)
and
jp
scas
sar
das
inc
or
and
mov
xchg
and
and
and
fcmovbe
xchg
lea
and
xchg
mov
adc
mov
loop
mov
jp
test
cmps
sahf
or
arpl
das
inc
mov
(bad)
adc
adc
(bad)
lea
or
repz
shl
stc
scas
cld
fisub
add
pop
sub
stos
push
pushf
add
cmp
xor
push
sub
in
push
scas
sub
cwde
inc
cmp
pop
ss
and
outs
out
sbb
jle
push
push
mov
lods
sbb
stc
cmps
(bad)
addr16
xor
data16
xor
mov
pushf
push
and
push
and
sub
cmp
xchg
mov
push
mov
sub
inc
xchg
xchg
daa
jmp
sub
or
lods
sbb
cmps
pop
xchg
out
mov
sub
fcmovnbe
and
inc
and
in
xchg
push
rol
xchg
push
mov
jb
lds
jle
retf
fwait
xchg
mov
dec
sub
call
and
jb
ret
mov
icebp
(bad)
sahf
(bad)
leave
pop
or
inc
inc
pop
dec
stos
add
hlt
xchg
jp
inc
cli
test
xor
out
int3
scas
rcr
inc
stc
cwde
pushf
fnstsw
sub
cwde
dec
mov
inc
adc
in
out
in
dec
ds
pop
mov
outs
daa
mov
jecxz
(bad)
das
repnz
or
mov
mov
sub
jns
push
lds
ret
mov
sbb
inc
lock
sbb
pop
sti
cmovge
psrad
inc
test
loope
stos
jae
popa
jmp
pop
jmp
pop
test
xchg
cmp
xchg
mov
xchg
jmp
push
ds
mov
sub
cmp
or
sub
jb
push
adc
xor
movs
mov
in
retf
mov
cmc
sti
sub
cmova
enter
cmc
add
xchg
or
push
or
dec
stos
std
aam
imul
pop
test
rcr
call
into
repz
das
pop
fcmovnu
bound
in
bound
cs
inc
add
mov
shr
pop
(bad)
jge
mov
imul
(bad)
(bad)
in
stos
xchg
lds
jb
rol
sub
aaa
xor
xor
call
fmul
icebp
inc
test
stc
les
jae
jle
pop
xchg
in
stos
xchg
test
mov
(bad)
in
loop
inc
xchg
test
and
in
inc
ds
das
test
mov
xor
cmp
dec
cmp
test
ins
xchg
inc
dec
cmp
cmp
out
retf
mov
jge
aaa
ins
mov
addr16
xor
jl
cmps
jo
int
and
xchg
hlt
(bad)
xchg
fild
aad
dec
data16
sahf
(bad)
and
jmp
icebp
xor
jbe
bound
outs
mov
test
call
or
or
add
iret
xlat
fwait
jg
inc
ud2
mov
jle
or
aas
out
(bad)
das
repnz
jg
or
sub
mov
pusha
mov
dec
(bad)
dec
pushf
not
or
daa
cmc
movs
xchg
ret
ret
sbb
cmp
pop
fsub
into
movs
jp
adc
int
pop
icebp
inc
or
ss
add
fiadd
add
push
cmps
inc
jmp
mov
xor
sti
inc
ss
inc
mov
pop
ins
mov
fwait
and
mov
add
test
iret
mov
(bad)
jne
cmp
xor
push
sbb
sub
imul
iret
iret
cmp
jnp
pop
push
ss
xchg
pop
imul
mov
cdq
enter
mov
pusha
xor
repnz
sbb
push
xor
add
and
fcomp
cmp
fst
xor
sub
and
retf
rcr
(bad)
cld
add
pop
pop
outs
imul
push
add
pop
sub
cmp
xchg
xchg
pop
jmp
mov
ret
fcmovne
sbb
mov
dec
push
addr16
loopne
jl
or
or
mov
test
and
fwait
lahf
movs
sti
mov
and
dec
pop
retf
clc
mov
arpl
push
mov
pop
out
ins
jne
ins
pusha
and
arpl
or
mov
adc
jl
leave
jno
sub
popa
dec
movs
shl
int3
sahf
adc
cmps
mov
and
mov
or
ds
jbe
xchg
xchg
push
repz
outs
pop
mov
lods
retf
dec
icebp
push
test
adc
test
dec
inc
retf
pop
xor
out
mov
sbb
test
in
adc
sbb
add
pusha
dec
gs
in
sti
mov
push
lods
mov
imul
in
(bad)
adc
rcr
push
icebp
js
sub
mov
adc
mov
retf
clc
xchg
aaa
scas
in
adc
inc
test
or
sbb
jbe
cmps
test
into
xor
popa
xor
das
pop
ins
push
jnp
fisub
out
cwde
xchg
ret
add
push
and
mov
sbb
mov
outs
mov
fs
and
mov
mov
xchg
lods
cmps
outs
sbb
dec
scas
pop
jmp
ret
(bad)
je
ss
neg
dec
inc
jmp
dec
repnz
xchg
cwde
xor
das
add
hlt
repz
gs
mov
lock
sub
fwait
mov
sbb
sub
pop
ins
cmps
sub
xchg
fld
pop
inc
je
jb
ror
mov
inc
mov
xchg
fdivrp
xchg
imul
inc
cmp
test
sub
dec
shr
ins
or
and
xlat
int
mov
xor
je
sbb
jns
mov
adc
fadd
(bad)
lock
aaa
sbb
cmp
int
and
sub
lods
dec
aaa
jnp
movs
mov
adc
out
or
or
and
pop
jb
sti
bound
push
and
movs
sbb
sub
push
mov
loope
bound
and
pop
adc
(bad)
xchg
add
mov
push
test
mov
js
rol
cmps
lods
pop
out
out
pusha
mov
jmp
inc
mov
mov
mov
adc
lahf
cmc
sub
retf
xor
mov
inc
cmp
in
ins
xor
dec
and
adc
ss
cmp
cld
xchg
mov
adc
in
dec
and
sub
icebp
ret
xchg
cmp
std
sub
sahf
xchg
cmp
fisttp
loopne
cmps
test
pop
lahf
dec
push
(bad)
jnp
aaa
lock
loop
imul
popf
enter
inc
imul
pop
js
add
and
inc
out
mov
leave
xlat
push
addr16
lods
dec
jmp
mov
es
test
fcom
imul
call
clc
pushf
sbb
pusha
retf
(bad)
pusha
pop
test
push
test
mov
add
sahf
mov
loopne
je
add
sar
sar
jbe
loope
leave
sub
sbb
in
add
cmp
push
in
sub
mov
or
pop
sar
cdq
and
imul
dec
sub
aam
imul
out
push
imul
pop
push
aad
int
jnp
cdq
test
xor
jmp
mov
pop
js
jg
adc
mov
mov
and
inc
jo
mov
push
pop
arpl
shl
mov
std
aaa
cmp
ds
aad
lahf
or
fsubr
cmps
dec
push
cmp
pop
mov
or
retf
pushf
shl
xor
cmc
cld
ret
adc
or
call
sub
pop
cwde
sbb
sbb
int
sbb
xchg
es
and
and
mov
ds
fisub
sbb
mov
mov
or
mov
jmp
ficom
lahf
dec
ds
xor
push
mov
adc
retf
cmp
rcr
cmp
icebp
or
jmp
lock
adc
movsx
mov
ret
out
pop
mov
push
ffree
sub
loop
jmp
jg
mov
retf
push
mov
enter
pop
jb
xchg
(bad)
shl
out
ins
arpl
in
in
mov
sbb
scas
in
cmp
xchg
cld
shl
mov
not
scas
mov
or
movs
sub
push
mov
dec
jnp
or
out
pop
pop
sbb
clc
int
pop
je
add
jp
add
push
into
jmp
fnstcw
addr16
inc
lds
xchg
aaa
dec
jns
popa
add
inc
retf
inc
mov
cmps
adc
push
inc
and
adc
inc
into
push
cmp
push
outs
mov
aad
mov
sub
pop
sub
dec
or
push
int3
int
call
push
xchg
or
hlt
jno
lds
ds
adc
cmp
sar
jecxz
inc
pop
jne
out
lods
mov
call
push
inc
inc
mov
pop
xor
nop
push
push
fadd
ror
aas
adc
hlt
mov
call
pop
aas
mov
and
xor
mov
mov
ja
mov
mov
sub
shl
loopne
das
or
mov
or
jge
add
sub
mov
push
fs
(bad)
dec
fs
mov
scas
test
cld
test
mov
adc
mov
stc
dec
jno
loop
outs
aaa
jo
lahf
enter
cld
push
test
pop
mov
pop
pop
out
ds
xchg
mov
inc
jl
loope
fs
scas
push
dec
sbb
test
mov
xor
mov
mov
jmp
xchg
push
sub
in
neg
adc
fiadd
imul
call
jle
cdq
shl
in
imul
jb
pushf
es
imul
jmp
jo
iret
sub
cmps
pop
jnp
xor
mov
mov
jmp
adc
test
dec
push
call
inc
adc
dec
xor
xchg
mov
mov
push
mov
mov
cmps
(bad)
or
dec
cs
pop
sub
(bad)
fld
adc
and
xchg
mov
cmps
out
xchg
pop
xchg
mov
icebp
jmp
stos
outs
xlat
jmp
xchg
jnp
test
arpl
jae
xchg
pop
mov
lahf
or
enter
or
addr16
adc
leave
scas
adc
mov
cmp
cmp
sbb
or
xor
inc
push
test
pop
pop
push
data16
jmp
gs
mov
mov
cmp
pop
mov
into
lock
inc
sub
inc
(bad)
loope
mov
test
dec
fld
retf
jnp
jp
lods
je
jp
call
stos
call
sub
cmp
fadd
sub
lods
daa
push
mov
lock
(bad)
les
sbb
sub
or
fadd
ror
sti
mov
jecxz
jge
mov
lock
sbb
popf
pop
out
sbb
rcl
mov
cmp
sbb
into
push
ins
ins
add
pop
inc
ret
scas
dec
(bad)
sbb
shl
in
fidiv
es
xor
mov
mov
push
or
aam
sbb
in
pop
scas
(bad)
nop
jae
(bad)
aad
fisttp
aad
mov
test
jbe
jb
mov
add
cld
movs
mov
ins
clc
pushf
jecxz
int
add
(bad)
xchg
sub
dec
jne
retf
fwait
cmp
push
ret
cmp
dec
aas
mov
lds
mov
sbb
icebp
jb
jne
dec
jnp
adc
data16
stos
cmc
iret
stc
shl
fisubr
sub
jb
pushf
mov
shl
adc
fistp
inc
ja
adc
dec
test
jg
div
jl
ins
adc
cli
mov
push
mov
xor
lods
mov
jo
cs
xchg
pop
or
xor
dec
mov
jecxz
fistp
push
test
frstor
pusha
pushf
xor
sbb
enter
mov
jae
mov
jle
cld
mov
jmp
fistp
dec
jp
add
addr16
ret
mov
push
adc
push
fbld
movs
lahf
popa
data16
and
jno
in
mov
dec
enter
sahf
iret
int
(bad)
mov
inc
outs
fld
xchg
sar
and
inc
dec
or
jmp
jo
call
fild
pop
mov
imul
adc
cli
out
lahf
jg
loopne
inc
and
push
push
aas
stos
push
add
xchg
int
push
or
push
lahf
pop
movs
and
fsubr
sbb
push
mov
inc
xchg
add
dec
pop
imul
xchg
jg
cld
xor
imul
lahf
cld
cmp
or
xchg
xor
jbe
mov
and
pop
mov
cmp
in
jns
or
das
sbb
jl
cmp
pop
(bad)
outs
in
xor
arpl
push
out
push
mov
mov
sub
enter
test
dec
in
push
pop
popf
int3
retf
push
movs
and
mov
sbb
cmp
test
fsubr
int3
aaa
ficomp
sar
es
adc
pop
loop
popa
data16
out
mov
xchg
sub
push
pop
mov
xor
pop
mov
sbb
sub
std
add
ja
jnp
aad
pop
xchg
adc
in
mulps
pop
int3
cmp
xor
fwait
stos
pushf
ret
mov
nop
outs
push
out
enter
push
js
out
out
mov
xlat
xchg
sbb
sti
div
mov
ror
jecxz
sbb
lock
xor
(bad)
xchg
inc
iret
ret
mov
jecxz
sbb
push
inc
stos
iret
dec
outs
jo
mov
inc
push
push
int
pop
xlat
add
fcom
cmc
out
dec
mov
adc
sbb
pop
icebp
cld
dec
dec
cmp
int
xor
loopne
inc
je
adc
cmp
pop
and
js
mov
jmp
sahf
push
xor
mov
sar
loope
xor
cs
cdq
nop
dec
jmp
lock
and
ret
push
fs
adc
sub
mov
outs
dec
pop
cwde
mov
add
rcl
inc
movs
inc
and
mov
adc
hlt
pmuludq
mov
jp
mov
jbe
cli
pop
xor
imul
ins
xor
dec
shl
or
and
fmul
jo
sbb
sub
mov
sbb
aas
dec
pop
jns
js
cld
lock
sbb
mov
(bad)
xlat
cmp
push
jmp
xchg
stc
repz
xor
mov
inc
jo
loop
push
aam
fst
popa
xor
loope
les
(bad)
lock
outs
loop
mov
stos
mov
out
in
pop
inc
inc
imul
(bad)
mov
out
jae
dec
inc
xchg
pop
cmc
mov
mul
push
push
add
xchg
aaa
int3
sbb
mov
mov
leave
imul
inc
jmp
push
in
xor
(bad)
repz
jp
add
ins
sbb
cmp
mov
dec
cmp
inc
cmps
add
dec
arpl
test
movs
cmp
jo
lds
push
(bad)
fdivr
push
jle
movs
stos
int
stos
hlt
out
mov
aas
ret
xor
enter
out
jns
jne
xchg
es
outs
or
jmp
pop
push
push
fst
push
repz
push
mov
sbb
or
gs
pop
cmp
clc
cwde
gs
push
lahf
push
push
ret
gs
sbb
jae
retf
xor
std
adc
out
push
sbb
add
iret
push
scas
or
or
cdq
cwde
stc
cwde
popa
cld
add
mov
cmc
jb
add
xor
jb
cmps
xor
test
fadd
mov
test
retf
(bad)
popa
ret
call
jmp
fnstsw
pop
idiv
pop
jbe
jno
jno
mov
and
popa
or
pop
mov
pop
and
mov
xchg
jmp
jns
pop
mov
dec
and
adc
ins
ret
xor
popf
push
test
fisttp
dec
imul
dec
div
cld
inc
iret
ds
sub
test
test
sbb
int3
cli
pop
arpl
dec
nop
movzx
add
adc
icebp
adc
pop
pushf
inc
push
stos
pop
mov
ffreep
dec
jmp
jo
stos
(bad)
test
add
mov
dec
cdq
ret
xchg
jge
push
add
push
xor
arpl
jmp
push
fdivr
into
jmp
inc
jp
xchg
ja
mov
(bad)
loop
imul
jns
push
maskmovq
lea
xor
pop
nop
jp
rcl
or
add
int
push
call
push
hlt
in
dec
pop
jge
repnz
mov
mov
or
jae
aad
(bad)
in
lahf
dec
push
mov
and
(bad)
sub
sbb
popa
(bad)
rcr
add
or
push
cmc
cmp
ins
mov
cmps
es
add
rol
dec
and
je
pop
add
dec
sti
(bad)
or
adc
aas
cwde
jo
mov
mov
push
cld
xor
push
pop
jmp
lods
inc
aas
mov
inc
(bad)
xor
jge
popf
data16
push
test
jp
cmp
xor
fsubr
xor
imul
pop
cmp
or
cmc
ftst
popa
jnp
ins
call
adc
jmp
popf
push
(bad)
cmp
push
xchg
jmp
pushf
(bad)
test
mov
test
mov
mov
ret
and
mov
inc
popa
mov
call
push
xchg
(bad)
rcr
push
xchg
stos
mov
push
loope
shr
mov
mov
call
push
push
out
jecxz
xor
(bad)
sar
jne
in
(bad)
not
push
xchg
lods
mov
ja
into
in
or
or
lock
in
xor
js
mov
cmps
mov
sti
sbb
pop
clc
dec
out
popf
gs
les
jp
push
xchg
adc
leave
lods
adc
stos
xchg
xor
aam
dec
lods
jae
lea
lods
xlat
stos
imul
in
ss
mov
mov
test
jp
bound
adc
mov
jmp
int
dec
xchg
(bad)
push
xor
mov
inc
pusha
mov
jbe
push
push
dec
popf
test
imul
idiv
fisub
mov
push
xchg
or
or
add
ja
adc
dec
ds
shl
push
mov
sub
shr
add
sub
or
sub
xchg
sahf
enter
mov
dec
push
lock
fst
add
mov
ins
or
mov
mov
movs
cmc
sub
fisub
ja
mov
pushf
arpl
pop
or
aas
pop
cmps
xchg
sub
outs
adc
sbb
out
and
retf
push
into
mov
gs
cmp
pop
lahf
sub
fistp
sbb
repz
(bad)
stos
sahf
xchg
loop
mov
inc
inc
add
cmp
add
pop
movs
fisttp
sbb
out
pop
fimul
xor
das
inc
xor
mov
rcl
test
cmp
sar
push
repz
imul
adc
cmp
ss
repnz
dec
mov
pop
sbb
icebp
outs
adc
jg
test
lea
inc
int3
mov
pop
mov
pop
fmul
add
cmp
iret
cmp
and
aam
data16
push
dec
and
cmps
int
push
into
pop
push
hlt
sub
or
jecxz
jge
(bad)
sbb
or
mov
mov
(bad)
retf
xlat
fadd
call
pop
data16
jecxz
(bad)
jb
mov
daa
adc
test
loop
shr
and
push
mov
addr16
inc
sbb
pop
adc
iret
or
push
clc
xchg
sub
imul
jmp
sahf
pop
push
jo
adc
pop
stc
push
mov
xor
mov
jle
shr
sbb
adc
out
cli
push
rcr
push
xor
and
mov
push
fsubr
inc
xchg
or
in
in
fcom
sti
cld
push
movs
add
cmc
cmp
and
mov
mov
(bad)
movs
xor
mov
xor
pop
addr16
pop
xor
pop
sahf
stos
pushf
ret
mov
add
and
and
jmp
dec
mov
aam
ror
jno
jmp
ret
stos
add
jle
push
sbb
lods
xchg
inc
fwait
in
pusha
jbe
or
sti
stos
jnp
ja
bound
add
cdq
xchg
in
sbb
lea
mov
sbb
mov
outs
popf
scas
push
cs
fbstp
pop
scas
sub
and
daa
push
xor
jmp
mov
ins
add
push
mov
mov
imul
cmps
pop
loop
xchg
inc
scas
das
jmp
ins
aad
sbb
in
dec
inc
rcr
jae
xchg
loopne
int3
xor
not
fimul
xor
cs
mov
(bad)
stos
xor
sbb
and
xor
inc
ja
test
add
shr
imul
jge
out
mov
leave
in
fcmovne
jno
adc
into
and
in
jmp
adc
adc
pop
xor
sbb
mov
adc
sub
push
sahf
test
daa
mov
mov
jnp
mov
repnz
dec
cmp
movs
cmp
xchg
push
inc
mov
mov
rcl
into
retf
xchg
push
pop
mov
dec
lods
push
shr
jne
sbb
mov
dec
pop
xchg
test
mov
js
(bad)
fs
jmp
push
dec
popa
loop
js
mov
cmp
sti
sbb
push
pusha
xlat
mov
loope
retf
xchg
cmp
fwait
dec
pop
ds
rcl
pop
repz
addr16
cmps
add
mov
jp
in
out
mov
bound
jnp
rcl
mov
dec
sub
xor
xor
aas
lods
fisubr
lea
sti
push
(bad)
push
cmp
cs
cmps
(bad)
into
out
(bad)
fnsave
inc
jns
scas
loopne
push
push
or
loopne
mov
aas
ret
sbb
pop
jmp
adc
push
scas
pop
in
inc
push
lods
sub
sub
or
cwde
adc
lahf
jns
mov
fs
idiv
dec
rcl
cmp
leave
dec
jne
mov
xor
push
and
je
icebp
stos
in
imul
int3
xor
fwait
xchg
call
lods
pushf
mov
xor
test
add
and
and
mov
xchg
sbb
call
test
xchg
in
movs
xor
jne
push
cwde
sbb
push
movs
dec
or
retf
push
xchg
lahf
xor
sbb
jae
pop
push
mov
int
loop
and
jl
mul
adc
fiadd
adc
mov
jbe
popa
cmp
mul
add
mov
xchg
xor
out
dec
nop
jb
xor
(bad)
arpl
aam
mov
adc
pop
mov
test
adc
shl
(bad)
pop
ins
in
jl
adc
dec
add
xchg
jmp
xor
popf
repz
shl
rcr
xor
inc
rcl
cmp
int3
inc
add
stos
popa
out
push
mov
or
(bad)
push
jns
repz
int3
pop
push
enter
jbe
icebp
mov
xor
mov
in
jle
movs
loopne
mov
mov
fisttp
js
shl
jae
test
and
cmp
retf
js
add
jne
fimul
or
push
cmp
and
xchg
dec
dec
sub
mov
mov
outs
jne
dec
jbe
add
add
ds
jbe
mov
pushf
(bad)
(bad)
cld
mov
lea
pop
jmp
fcomip
jmp
mov
xor
xchg
imul
stc
mov
int
out
push
pop
loope
sbb
push
push
stc
adc
mov
or
es
in
push
or
cwde
xchg
imul
mov
ss
push
adc
ud2
xchg
ins
test
xchg
jo
or
and
xchg
add
sub
mov
repnz
jne
aad
inc
cld
fbstp
add
mov
adc
sub
dec
cli
(bad)
dec
sub
arpl
fst
xchg
out
fild
pop
retf
(bad)
jmp
bnd
sbb
mov
sbb
and
jle
iret
cmp
adc
gs
mov
enter
mov
push
xlat
mov
sub
ror
(bad)
mov
dec
stos
les
sbb
sbb
xchg
in
imul
add
stos
mov
lea
jo
mov
fs
pop
in
or
dec
mov
movs
test
add
cdq
aad
and
ficomp
es
aad
sbb
mov
into
sub
(bad)
sahf
ins
adc
cmp
cmp
(bad)
add
jle
xchg
mov
les
test
add
adc
jo
hlt
scas
sub
in
scas
sbb
cmps
retf
cmp
push
push
mov
sub
dec
es
enter
push
out
mov
iret
mov
dec
or
xchg
xor
mov
out
sub
mov
ins
ins
aam
test
jo
ret
cli
and
and
call
inc
fldcw
push
jb
inc
mov
or
pusha
lahf
mov
pop
fcmovb
in
mov
pusha
jns
xchg
or
test
scas
add
fiadd
scas
cs
or
out
ins
or
mov
sbb
sbb
loopne
imul
or
jnp
cmp
inc
xchg
mov
daa
adc
lods
fwait
ds
aas
xchg
stos
(bad)
sbb
leave
mov
xor
shr
lods
cs
inc
popa
mov
stos
jmp
fucomp
lds
rcr
xchg
nop
cwde
fisub
pop
int3
or
pop
cld
aam
or
shr
lods
das
push
inc
jg
(bad)
sub
into
movs
aam
and
mov
cli
(bad)
sub
fiadd
(bad)
jge
push
ins
jnp
push
sbb
retf
push
icebp
add
cmp
loope
(bad)
sub
mov
sahf
adc
pusha
fsubr
jl
(bad)
in
mov
(bad)
mov
lds
sar
adc
(bad)
fnsave
jle
push
addr16
pushf
and
mov
out
clc
dec
repnz
add
test
adc
xor
ja
mov
fiadd
cmp
jne
(bad)
jno
push
out
loop
jp
sub
jmp
pop
and
xor
lods
or
sbb
rol
jo
sbb
sbb
add
aas
xchg
sti
jmp
cs
pop
leave
mov
hlt
mov
xchg
jno
xor
lods
xchg
pop
in
imul
outs
pop
sbb
leave
sub
es
ja
push
in
bnd
inc
cs
sbb
lods
inc
mov
mov
rcr
mov
cli
jb
pop
dec
push
in
mov
push
pop
imul
ret
idiv
and
adc
xor
push
loopne
push
sub
mov
and
add
mov
jecxz
ds
aaa
ret
fwait
pop
mov
add
and
arpl
adc
pop
lahf
(bad)
pop
add
repz
inc
push
mov
push
and
mov
inc
mov
mov
scas
retf
jne
loopne
daa
jmp
sbb
push
aas
loope
cwde
(bad)
mov
xchg
out
popa
xchg
in
push
repz
sub
cmps
imul
jecxz
jo
push
jbe
cmovb
outs
jb
pop
in
sbb
jmp
(bad)
pusha
imul
addr16
sahf
(bad)
jnp
iret
push
es
jmp
(bad)
jmp
test
xor
push
mov
lahf
push
test
jg
repnz
icebp
pop
jecxz
stos
fisttp
jg
and
pop
(bad)
daa
lahf
and
dec
jne
xchg
jb
scas
mov
scas
out
inc
(bad)
fldenv
aaa
pusha
adc
jge
jp
sub
dec
pop
nop
popf
ror
mov
mov
mov
adc
pusha
sub
aas
inc
jmp
ror
mov
add
or
fist
dec
inc
push
shl
dec
jnp
ja
daa
push
mov
out
inc
add
inc
jo
idiv
xor
add
popf
dec
push
loope
cwde
clc
pusha
xor
push
dec
push
mov
dec
loopne
push
nop
and
cmc
inc
pop
dec
cmps
lods
popa
xchg
clc
fidiv
or
mov
xchg
or
aaa
inc
sbb
mov
pop
add
xor
add
xlat
(bad)
pop
pop
xchg
stc
xor
bsf
and
sub
push
dec
popf
mov
xchg
mov
rol
push
ror
fs
aas
cmp
pop
or
mov
cmp
imul
sub
mov
pop
xchg
xlat
adc
mov
lock
xor
idiv
mov
mov
dec
jno
sub
test
mov
inc
test
dec
xchg
sub
fisttp
cmc
sub
mov
jmp
mov
jae
xor
pop
pop
sbb
mov
lock
mov
loop
mov
test
pop
test
ret
pusha
in
clc
push
mov
fist
dec
in
fcmovu
sub
out
xchg
sbb
jmp
jle
call
retf
rcr
push
xor
ret
sbb
lds
xlat
pop
and
pushf
ror
sbb
in
fadd
mov
movs
jp
or
aam
inc
inc
into
retf
aam
dec
aas
test
ss
sbb
pushf
xchg
je
test
push
test
dec
adc
xor
ficom
ret
cmps
rcr
lods
dec
dec
jle
clc
pop
aad
xchg
test
cmp
dec
pop
sub
test
outs
repnz
jne
aas
dec
les
cmp
and
cwde
pop
pop
scas
imul
dec
mov
in
ss
mov
addr16
add
push
mov
outs
cs
xor
or
pop
cs
push
lds
aaa
mov
loop
fnstsw
in
(bad)
stc
fdivr
and
stc
adc
(bad)
dec
xor
and
mov
jae
loope
dec
ja
mov
dec
mov
adc
xor
enter
push
cmp
push
cmc
imul
repz
and
imul
test
xchg
daa
mov
fmul
(bad)
mov
xor
cs
pop
retf
stos
in
or
and
jae
cli
js
push
mov
mov
push
lahf
xor
push
jecxz
sti
sbb
ss
mov
mov
(bad)
sub
adc
xlat
jno
dec
in
push
adc
cmp
ret
rcr
fwait
or
ret
sub
inc
(bad)
movs
push
enter
outs
pop
push
inc
xchg
jecxz
mov
mov
cmc
(bad)
jnp
int3
mov
cli
push
lahf
sbb
push
xor
mov
or
in
mov
xor
and
mov
add
inc
inc
bound
mov
add
pop
mul
push
jne
(bad)
lods
jo
or
mov
adc
xchg
and
push
push
adc
call
imul
mov
ret
mov
inc
loope
pop
dec
popf
mov
enter
stc
mov
leave
loope
repz
mov
sahf
sub
scas
cmp
ins
xor
sub
popf
mov
test
pop
js
pop
and
mov
jg
mov
mov
xchg
test
out
test
movs
mov
bound
jmp
dec
clc
or
gs
and
mov
fbld
inc
test
mov
push
ja
inc
mov
(bad)
jmp
push
adc
inc
icebp
ins
mov
mov
fld
push
pop
adc
add
xchg
xor
mov
into
pop
dec
popa
push
xchg
adc
mov
outs
push
jne
repnz
mov
push
ret
dec
std
test
push
je
mov
lds
cld
aam
call
and
hlt
xchg
mov
pop
retf
imul
aaa
mov
push
ret
mov
jnp
jmp
dec
jne
mov
aam
stc
out
into
fidiv
iret
not
mov
lock
xchg
cmps
in
xor
dec
fwait
sbb
jbe
iret
pop
aas
xchg
add
sbb
sbb
xor
movs
mov
(bad)
out
jmp
(bad)
mov
fwait
(bad)
fisttp
imul
movs
mov
ds
pop
jae
fstp
cmp
push
in
outs
lahf
jp
pusha
cdq
and
mov
jno
dec
fisubr
xor
and
lds
cs
fbld
pop
sahf
rcl
ss
ins
mov
push
dec
es
sbb
ss
pop
cmp
icebp
outs
sti
xchg
cmp
adc
and
add
dec
sub
dec
mov
scas
cmp
fucomi
pop
inc
jbe
call
repz
pop
or
xor
cmp
xor
stos
(bad)
leave
sbb
adc
jo
dec
ds
js
popa
dec
adc
int
mov
push
lods
movs
jecxz
push
or
std
es
lahf
sub
mov
je
mov
pushf
jno
(bad)
pop
popf
mov
mov
std
call
xor
iret
stc
in
cmp
inc
cmp
push
mov
retf
mov
clc
mov
mov
pop
clc
mov
fst
inc
adc
mov
int3
push
mov
push
fwait
mov
in
test
cmps
out
lea
stc
mov
jae
cli
cmp
jb
adc
fcomp
push
call
rcr
pushf
sbb
(bad)
inc
sbb
rep
ins
xor
in
mov
inc
lds
push
inc
outs
ins
call
std
hlt
std
ss
call
aad
inc
xchg
scas
cmp
cmps
xchg
or
mov
fiadd
outs
or
hlt
push
test
mov
out
push
sub
jb
shl
push
mov
mov
xor
idiv
(bad)
retf
jge
pop
mov
fild
shl
cmp
jae
push
(bad)
out
xchg
xchg
add
sti
mov
push
jne
pop
sbb
in
rcl
sub
fisubr
mov
aad
push
movs
pop
pop
(bad)
or
lods
ins
stos
stos
push
enter
and
div
aas
loopne
mov
js
sub
cdq
push
sbb
mov
out
fisttp
or
push
pop
out
cmp
add
mov
fcom
push
pop
les
stos
pop
(bad)
nop
int3
add
data16
clc
dec
jmp
add
and
push
xchg
in
int3
jae
xchg
in
loope
lock
mov
ins
sub
sbb
sbb
int3
sub
or
xlat
in
ret
inc
ftst
ret
sbb
sub
jns
call
add
jne
outs
push
mov
ins
dec
jne
cmp
mov
ss
add
sbb
(bad)
int3
jb
or
pop
pop
xor
xlat
cmp
mov
jbe
clc
pop
push
lds
cld
stos
push
xchg
add
cmp
adc
jno
ins
sub
jge
and
cmp
fcmovnbe
icebp
jb
retf
sub
mov
out
adc
push
fsubr
aam
push
pop
jg
cmp
cs
test
adc
mov
xchg
cwde
icebp
push
and
mov
sub
loope
mov
sub
push
test
retf
outs
sar
call
leave
adc
int
pop
in
jne
test
in
xchg
repz
cmps
inc
fs
retf
test
stos
xchg
retf
fnstenv
and
sub
aam
inc
cli
add
xchg
jge
popa
mov
mov
adc
push
jecxz
mov
js
inc
mov
shr
es
fdivr
push
jge
ret
pop
jo
push
mov
and
fdivr
jno
inc
sbb
xchg
jns
xchg
sub
jae
jns
fdivr
lea
pop
push
inc
retf
or
sti
imul
mov
daa
or
jne
test
jecxz
push
ret
cmp
jp
xor
sar
pop
dec
ja
mov
ins
ret
push
pop
inc
or
sub
pop
xchg
fadd
std
mov
hlt
pop
loop
mov
int
cli
outs
call
mov
jmp
xchg
adc
and
or
jmp
push
fadd
hlt
aas
sbb
xlat
outs
dec
cld
fcmovu
mov
adc
add
adc
or
rcr
lds
aam
add
mov
mov
loop
fbld
push
inc
pop
jp
mov
bound
pop
and
icebp
repnz
dec
enter
jns
cwde
adc
sbb
icebp
mov
(bad)
xchg
imul
out
cmc
mov
pop
or
inc
xor
je
movs
rcl
jns
dec
fcmovnu
adc
jne
or
jmp
xor
xchg
fwait
cwde
and
fst
xchg
stos
sbb
daa
jg
jmp
popf
inc
hlt
jae
stos
cmp
mov
fmul
inc
xchg
test
test
test
push
nop
mov
cmp
outs
xor
stc
xchg
xchg
loope
pop
jno
mov
xor
jg
adc
sub
imul
add
xor
test
mov
test
inc
call
leave
adc
xchg
test
fisttp
pop
pop
push
je
es
dec
out
jg
pop
dec
movs
sbb
jmp
je
pushf
(bad)
dec
loope
sti
into
mov
stos
daa
pop
sub
popa
xchg
fmulp
fimul
add
movs
gs
ins
push
test
push
adc
sub
js
sbb
arpl
das
mov
(bad)
bound
jg
or
jns
bnd
inc
xor
fchs
sbb
data16
lea
(bad)
in
dec
repnz
or
call
push
imul
jnp
or
leave
push
jmp
leave
aad
pop
adc
sub
xor
mov
bound
addr16
adc
les
pop
mov
push
(bad)
in
sbb
sub
loope
sbb
repnz
cdq
nop
jns
jne
aas
rol
lea
add
or
retf
and
push
jnp
jmp
movs
pop
lds
in
push
out
pop
push
push
mov
cs
or
mov
ficom
push
pop
mov
mov
imul
or
jmp
fdiv
sbb
adc
mov
mov
leave
loope
icebp
jbe
jle
and
inc
ror
call
rol
out
push
fild
(bad)
fidivr
loop
dec
push
and
add
jmp
test
or
in
loope
test
js
sub
scas
push
fcomip
fs
mov
pop
rcl
sti
mov
jo
fdiv
jmp
pop
int
loop
out
mov
xor
push
retf
out
mov
jnp
jge
mov
arpl
cmp
jo
call
stos
movs
ins
xor
xchg
cmps
test
adc
sbb
hlt
fs
ja
movs
loopne
inc
(bad)
hlt
test
push
sub
inc
cli
mov
cmp
adc
sub
cmp
mov
xor
fstp
xchg
sbb
adc
cmp
addr16
dec
xchg
mov
xor
shl
mov
pop
cld
jl
test
clc
imul
ds
jae
jno
jl
jmp
and
aam
or
js
cli
or
cmps
cmp
ret
movs
aaa
xor
int
neg
(bad)
sub
outs
and
xor
fsubr
jg
sti
jmp
sbb
lahf
inc
test
test
jle
inc
jno
or
loope
inc
pushf
ins
in
jmp
les
or
std
mov
add
fsubrp
call
les
test
in
jl
in
inc
xor
cmp
cmp
push
sbb
jle
setnp
shr
and
(bad)
clc
je
pop
xchg
(bad)
cs
loope
or
mov
test
adc
nop
xchg
data16
mov
push
cmp
in
mov
mov
or
pop
jmp
pop
frstor
push
adc
test
retf
mov
cmp
cmp
add
test
dec
daa
idiv
adc
(bad)
add
out
enter
ins
iret
add
push
pusha
vmaxsd
cld
cmps
shl
in
int3
rcl
adc
rol
das
and
call
mov
gs
imul
push
sti
or
pop
sti
add
nop
jecxz
repz
lods
adc
mov
es
xchg
int
jno
imul
(bad)
(bad)
(bad)
jb
xchg
rcr
sbb
xchg
add
movs
push
in
xchg
(bad)
xchg
sti
ret
and
loop
cs
mov
xchg
pusha
gs
sbb
pop
cmp
sub
cmp
mov
psubb
fadd
jle
out
lds
inc
or
mov
call
and
pop
pushf
rcl
xchg
dec
jle
enter
cmp
ror
and
pop
jp
jmp
movs
xchg
adc
xchg
inc
pop
test
jns
xchg
test
cld
sub
pusha
adc
lahf
jmp
or
icebp
in
dec
xchg
dec
dec
pop
into
in
push
adc
retf
sbb
out
sbb
test
sbb
cwde
repnz
inc
rol
or
outs
pop
leave
jbe
xchg
inc
(bad)
pop
xchg
cmp
movs
(bad)
sub
(bad)
xor
push
rcl
sahf
sub
xlat
jnp
iret
or
adc
pop
lock
inc
fimul
and
or
and
pop
sub
sbb
popf
aas
inc
mov
dec
sub
mov
in
pop
pop
adc
dec
xor
push
cmps
ret
xchg
out
mov
mov
cmp
mov
xchg
fistp
or
jl
cmp
or
stos
push
push
call
inc
mov
mov
(bad)
data16
mov
pop
mov
inc
jl
mov
mov
inc
mov
pop
xchg
and
jne
sub
test
or
add
fdivr
pop
mov
mov
pop
jbe
xchg
cmp
daa
mov
mov
sbb
daa
aam
ret
leave
jecxz
enter
popf
ss
cmps
int3
mov
mov
test
dec
fwait
rol
jg
iret
data16
cmps
(bad)
cmp
ds
cmp
stos
sbb
mov
fiadd
cmp
sbb
movs
sar
jo
aaa
dec
sbb
gs
test
sub
push
(bad)
push
inc
dec
in
xlat
or
rcr
test
ror
jl
push
jb
sar
fisttp
xor
cmp
aam
shr
(bad)
fsub
jnp
int
mov
rcl
fcomp
inc
dec
push
inc
xor
ret
pop
loop
sub
mov
int3
fxtract
(bad)
mov
pop
popa
mov
jns
pop
fs
push
adc
pop
push
adc
cmp
cmp
push
lds
mov
jmp
jne
fisttp
(bad)
jmp
lods
inc
adc
mov
retf
jae
pusha
mov
dec
fcomp
stos
xchg
jge
pusha
add
adc
ins
gs
adc
popf
xor
and
jns
aad
repnz
jle
xchg
mov
lods
dec
fist
add
xchg
fld
call
push
retf
repnz
sub
pop
jmp
fcmovne
mov
jl
pusha
sub
test
fisttp
shr
scas
push
jl
inc
mov
loope
repnz
dec
inc
pushf
test
(bad)
fimul
clc
in
or
adc
jle
add
pop
lock
dec
mov
and
jb
xchg
push
shl
fs
retf
adc
sbb
push
xor
push
pushf
clc
call
xchg
ret
inc
mov
lock
sbb
hlt
mov
sti
lahf
and
mov
in
add
arpl
xor
stos
(bad)
cmp
fild
dec
cmp
test
test
repz
push
jo
and
sbb
icebp
ret
adc
and
mov
inc
dec
rcr
ret
clc
xor
sar
aas
push
jne
gs
mov
xchg
inc
and
in
jl
mov
pop
stos
call
iret
cmp
xchg
pop
push
push
aam
inc
icebp
mov
into
push
leave
jmp
jnp
mov
dec
dec
in
aad
jp
fwait
jle
inc
je
sbb
push
mov
(bad)
or
inc
add
enter
push
stos
xor
mov
icebp
inc
pop
fbld
(bad)
dec
pop
mov
loope
push
nop
pop
push
cmps
aaa
sbb
in
push
fs
int
daa
mov
jb
sti
sub
pop
repnz
jecxz
jnp
in
pop
adc
push
or
cli
imul
daa
repnz
dec
sbb
lahf
mov
arpl
std
adc
outs
mov
sbb
test
out
fisub
mov
in
popf
test
dec
dec
jne
mov
push
outs
xor
xor
mov
mov
stc
mov
out
xchg
pop
cli
out
and
js
ret
gs
daa
jmp
rcl
mov
cmp
fs
pop
dec
pop
(bad)
fist
mov
movs
fisubr
mov
sbb
std
mov
inc
sub
cmp
in
mov
pop
dec
pop
pop
sub
cmc
shl
jb
add
xchg
adc
retf
or
or
push
mov
jne
data16
jge
pop
cmp
mov
xchg
mov
dec
mov
add
jmp
out
pusha
(bad)
std
call
mov
outs
ret
(bad)
aaa
mov
sub
jmp
xlat
cmps
lahf
pop
popf
pop
cmp
cmp
out
xchg
jns
xchg
push
add
je
in
lahf
pop
(bad)
in
test
shl
jl
cmp
pop
mov
jbe
mov
(bad)
mov
mov
push
out
jo
test
call
adc
pop
cmp
adc
fdiv
pop
inc
lods
mov
mov
arpl
hlt
sbb
aaa
sti
mov
stos
sbb
inc
pop
lods
sub
cs
xor
add
jmp
lds
sub
mov
inc
in
into
rcr
sbb
aas
(bad)
add
and
push
fwait
jo
cmp
icebp
sbb
pop
xor
pop
setg
pop
call
push
ins
push
and
sbb
imul
iret
sub
dec
adc
imul
fstp
push
cdq
ins
push
clc
push
iret
cmp
and
loopne
push
hlt
test
out
sub
into
push
in
add
jge
test
push
lods
jg
shr
sub
cmps
mov
push
das
mov
shr
pop
ja
bound
lahf
push
fmul
(bad)
enter
les
xchg
lock
push
mov
rol
dec
or
sti
add
mov
jecxz
pushf
mov
jnp
lea
pop
scas
sbb
add
xchg
in
(bad)
xchg
stc
mov
loope
aad
call
(bad)
int
jmp
sub
xchg
cs
push
stc
jno
in
rcr
(bad)
sbb
xchg
clc
popa
bound
cmp
pop
sbb
sbb
cli
retf
jo
inc
test
mov
retf
lds
mov
inc
inc
push
adc
dec
push
dec
outs
cwde
or
add
ja
adc
push
das
xor
loopne
xchg
push
imul
mov
jge
sub
xchg
or
xor
je
ds
cld
mov
cld
(bad)
cmp
in
lahf
xchg
and
lea
mov
cmp
xchg
dec
adc
or
add
push
sub
push
mov
mov
mov
ja
pop
or
push
test
rcr
mov
xor
or
ror
mov
mov
cmps
xor
jle
sub
sbb
dec
ret
inc
sbb
test
or
push
adc
mov
imul
cmp
mov
test
(bad)
cli
pop
test
lods
mov
cmp
mov
aas
call
jne
inc
shl
arpl
xchg
sub
shl
fstp
in
inc
cmp
inc
mov
arpl
xchg
xchg
and
jns
mov
test
aaa
lods
jo
pop
(bad)
imul
cmp
pop
pop
lahf
sahf
imul
neg
pop
(bad)
fild
sub
pop
mov
push
div
add
cmp
sar
mov
mov
lods
and
arpl
dec
jmp
cmps
out
inc
dec
push
popa
popa
cs
mov
lock
les
sub
mov
add
lods
fs
fdiv
mov
pop
int3
add
(bad)
dec
into
push
(bad)
fisubr
xor
mov
lock
shr
pop
xchg
jecxz
xchg
and
cmp
jle
jg
pop
outs
lock
adc
jmp
fsubr
mulps
jmp
shl
add
sar
xchg
int
sahf
or
jecxz
enter
dec
loope
iret
repnz
aas
jmp
pop
leave
sbb
(bad)
(bad)
rcl
jbe
je
mov
call
mov
fistp
(bad)
in
mov
sar
dec
adc
and
fidivr
jp
dec
add
in
loopne
add
jmp
push
ins
neg
push
mov
int
push
push
clc
pop
gs
and
cwde
dec
aas
cmp
int3
adc
dec
stos
push
or
and
lea
xor
mov
fcomip
xor
out
pop
imul
popf
sbb
(bad)
jnp
xchg
fcomp
push
inc
add
inc
pop
(bad)
ins
stos
xchg
out
xor
bound
inc
dec
hlt
inc
push
dec
ffree
or
sahf
xchg
mov
dec
int
push
aaa
inc
xor
fist
test
and
test
fwait
dec
sbb
out
aam
sub
inc
pop
nop
or
xor
add
add
imul
jbe
cli
push
xchg
and
adc
pop
mov
pop
or
sub
sti
add
pop
dec
ins
test
cld
xor
loop
mov
or
fidiv
push
shl
xchg
inc
je
and
(bad)
jp
rol
cmc
mov
pop
jno
jge
test
arpl
icebp
mov
lods
pop
or
or
or
inc
or
add
sub
jns
xor
je
mov
(bad)
dec
fs
pop
add
sahf
in
das
mov
jmp
adc
add
sbb
and
popf
dec
adc
adc
cmp
fstp
sti
shl
add
(bad)
pop
jne
xchg
pop
dec
sar
cmp
pop
jne
gs
out
mov
mov
or
xor
xor
push
dec
push
aad
jmp
scas
adc
xchg
push
push
dec
ins
ins
call
inc
mov
or
or
sbb
sbb
aad
push
inc
and
and
dec
shr
xor
iret
data16
cmp
push
push
jbe
mov
ins
enter
jmp
mov
sbb
aad
push
(bad)
mov
adc
dec
jp
ror
lds
dec
xlat
mov
arpl
adc
pop
dec
adc
pop
jns
sbb
inc
mov
popa
add
sbb
leave
leave
popf
int3
shr
dec
mov
push
jl
mov
xchg
xchg
fwait
cmp
outs
fisubr
sahf
fstp
mov
push
popa
fisub
enter
add
adc
das
bound
fstp
js
jge
and
mov
lock
xor
shl
aam
out
mov
(bad)
push
xchg
or
ins
nop
pushf
ds
outs
mov
jecxz
fimul
enter
xor
jae
sub
(bad)
loope
mov
and
or
cmp
ror
ins
and
pusha
mov
js
jg
sbb
je
inc
call
jmp
pusha
retf
call
adc
out
cmp
scas
cwde
lds
sub
push
mov
adc
inc
outs
pop
mov
sub
dec
mov
pop
xchg
xchg
(bad)
out
push
leave
jle
mov
and
in
out
push
cs
adc
ins
and
xchg
xor
sub
stos
lods
scas
out
sub
adc
push
sub
mov
or
mov
mov
adc
or
pop
xor
inc
popf
inc
ret
sub
dec
les
sbb
jmp
or
xchg
out
outs
mov
or
retf
push
into
out
pop
je
pop
ror
lahf
pop
retf
call
pop
jge
cdq
les
out
out
push
pusha
pushf
das
pop
mov
leave
xor
test
in
jle
dec
shl
retf
cmps
or
mov
jns
pop
test
fild
inc
popf
cs
cmp
xor
xchg
xor
jmp
sub
mov
jg
cmp
stos
add
pop
ror
push
hlt
jno
enter
(bad)
jmp
fistp
cwde
dec
cwde
xchg
or
in
mov
push
ficomp
fnsave
xlat
mov
mov
add
pop
rol
push
pop
xchg
jmp
xchg
(bad)
mov
cmp
inc
popw
popa
stos
inc
mov
sub
cmps
sbb
mov
mov
mov
loopne
and
lds
fstp
sub
js
mov
jmp
sub
ss
sbb
out
push
jp
adc
jg
daa
into
pop
and
cld
stc
ins
or
jns
pop
mov
jp
adc
mov
fdivr
loop
aaa
jb
cmp
int
enter
jge
jnp
jmp
mov
and
mov
jmp
icebp
out
push
rcr
(bad)
test
jp
mov
cmp
mov
loope
test
push
jno
cmp
lea
cdq
mov
dec
int3
push
sar
cmps
inc
cli
iret
ret
push
mov
adc
aam
addr16
pop
push
adc
fwait
test
(bad)
(bad)
adc
retf
dec
je
out
mov
dec
inc
sbb
pop
mov
mov
adc
xor
sub
sti
lahf
stos
fld
or
loope
(bad)
mov
aaa
push
mov
pop
add
add
fbstp
fist
outs
jle
es
lds
xchg
das
jnp
jae
hlt
cmp
push
pop
pop
cmp
test
jmp
das
xchg
gs
fld
sbb
dec
sub
mov
aas
dec
jne
mov
aaa
test
jle
sbb
add
and
loopne
in
inc
idiv
bound
lods
ret
js
scas
fs
iret
add
mov
jl
les
and
inc
inc
stos
loopne
inc
adc
xchg
push
sub
push
jnp
stc
pop
sar
imul
pop
(bad)
or
nop
mov
jno
(bad)
scas
xor
lds
jmp
add
dec
mov
lods
gs
add
adc
aas
jae
sub
xor
mov
and
punpckldq
mov
dec
adc
sbb
test
call
iret
dec
imul
ficomp
adc
mov
mov
adc
xchg
jmp
xchg
cmps
ret
mov
ja
xchg
xor
push
out
lahf
arpl
popa
xchg
fmul
mov
inc
inc
xor
xchg
(bad)
adc
pop
movs
mov
sti
xchg
adc
and
ja
gs
and
aad
inc
imul
xchg
in
aam
mov
(bad)
mov
mov
xor
push
gs
loop
das
stos
clc
or
cdq
cmp
fsub
call
pop
mov
mov
je
popa
push
jno
adc
push
push
inc
sar
stc
pop
cwde
cmp
adc
jb
jecxz
push
jle
jae
in
lods
mov
push
or
push
loop
mov
fnsave
lahf
icebp
add
js
adc
mov
pusha
jle
stc
in
icebp
imul
mov
adc
xchg
cmp
pop
clc
mov
loope
(bad)
xchg
dec
in
out
pop
push
int
mov
test
and
sbb
call
jle
push
inc
pop
iret
mov
mov
mov
nop
or
inc
sub
hlt
popa
adc
xor
js
(bad)
and
shr
(bad)
out
aam
and
(bad)
ja
mov
pop
cmps
mov
mov
cmp
ins
mov
lods
jns
mov
add
retf
mov
cld
or
jmp
and
jne
(bad)
loop
dec
jecxz
jmp
cmp
inc
data16
xchg
mov
cmp
xor
push
cmp
je
imul
jle
cmps
dec
inc
jne
(bad)
out
ja
ret
xor
or
out
out
mov
je
(bad)
into
popf
pop
lahf
movs
fadd
mov
mov
adc
push
addr16
lds
adc
xor
push
mov
in
iret
pop
test
mov
inc
mov
mov
inc
jne
lock
xor
inc
fnstcw
stos
fistp
jmp
add
jle
mov
jmp
cmps
push
icebp
inc
ja
lods
jno
sar
ret
jae
jae
ins
jb
add
in
mov
xchg
pop
mov
xor
jae
ret
das
inc
lods
mov
inc
mov
sub
in
mov
cdq
inc
bound
dec
jmp
aaa
es
test
pop
jbe
jg
pop
loope
icebp
jae
jns
out
(bad)
shr
loop
push
stos
or
call
sub
mov
lds
daa
mov
out
in
stos
pop
and
sti
mov
mov
popf
lods
push
cli
pop
ins
in
push
call
cmp
fwait
in
sub
xlat
movs
je
mov
mov
add
daa
(bad)
xor
mov
js
jnp
push
shl
pop
add
je
pop
sbb
or
(bad)
xor
sub
fwait
jmp
mov
jmp
pop
jmp
mov
shr
cmp
loope
sbb
test
cmp
fisub
cmps
iret
das
cmps
adc
pop
cli
(bad)
ins
add
mov
in
cmps
in
repnz
rol
adc
stc
jo
xchg
xor
jne
dec
mov
inc
cld
adc
cmp
jmp
test
hlt
cmp
cld
mov
gs
cs
xchg
addr16
push
arpl
shr
or
push
in
data16
out
movs
pop
in
or
sar
arpl
or
aad
push
adc
shl
ss
jl
iret
adc
std
push
xor
rcr
mov
pop
call
add
pop
xchg
xor
and
xchg
aam
adc
push
dec
dec
push
sbb
pop
rcl
pop
outs
inc
test
cmp
or
sbb
out
mov
ret
mov
cmp
(bad)
loop
ds
adc
hlt
mov
retf
lds
and
ret
pop
push
in
bound
and
in
add
push
nop
(bad)
pop
rcr
fstp
inc
bound
pop
ja
sbb
push
(bad)
mov
xchg
add
retf
jo
sahf
push
mov
stos
or
mov
mov
ficomp
jp
add
and
xor
mov
inc
pop
dec
aad
sbb
xchg
xor
push
(bad)
xor
cmp
mov
jne
jb
daa
or
rcr
aam
pushf
mov
sar
je
in
xlat
adc
(bad)
fnstenv
loopne
movs
sbb
in
xchg
std
leave
jae
fnstenv
test
sbb
push
push
push
ret
mov
inc
(bad)
rol
mov
out
sbb
adc
lock
dec
or
inc
add
ins
in
sbb
stos
sub
sbb
data16
int
nop
ins
int3
push
jnp
nop
inc
jle
mov
lock
test
icebp
push
xor
and
ret
sub
enter
adc
div
ror
dec
(bad)
jge
xchg
gs
push
add
push
clc
sahf
xchg
cld
cmps
sub
ror
rcl
pop
dec
out
clc
shl
dec
cmps
dec
(bad)
mov
inc
pop
cmp
mov
jb
push
fs
imul
cmp
adc
cmp
scas
jo
inc
cmp
add
leave
imul
cmp
pop
add
clc
(bad)
cs
in
sub
xchg
pop
xchg
and
or
and
and
xor
(bad)
xchg
leave
push
add
jns
imul
out
cmp
inc
loop
sahf
mov
pop
jecxz
sbb
daa
gs
push
pop
bnd
and
mov
push
adc
pusha
inc
in
rol
mov
bnd
mov
inc
mov
out
add
rcl
sbb
mov
xchg
fisub
mov
fucomi
ror
dec
mov
fisttp
or
pop
clc
and
ss
shr
jge
out
fnsave
inc
adc
mov
push
or
add
push
sub
pop
xchg
jne
sti
pop
push
push
xchg
mov
dec
sub
sbb
mov
pandn
jge
stos
cmp
popa
es
(bad)
push
push
hlt
push
inc
xor
pop
fisttp
pop
pop
push
or
std
add
bnd
jp
or
fwait
nop
retf
out
nop
test
pop
(bad)
jb
pop
jmp
fcomp
pop
les
rcl
dec
fsubr
(bad)
out
xor
pushf
es
aad
fmul
sub
inc
xor
and
bnd
cmp
mov
pop
cmps
dec
inc
adc
cmps
sbb
add
out
jg
or
sub
add
push
cmp
or
les
and
mov
test
add
ins
mov
and
mov
sub
jnp
push
inc
push
pop
xchg
mov
pop
out
ins
arpl
adc
pusha
cmps
inc
es
adc
bound
aas
retf
shl
and
enter
popf
xchg
movs
dec
movs
mov
cmp
jne
jg
lock
data16
push
addr16
sbb
fild
gs
inc
and
pop
int3
push
fdivr
jmp
push
mov
popa
jecxz
or
nop
and
jl
lea
arpl
fnsetpm(287
ss
mov
mov
loop
enter
or
push
out
(bad)
adc
movs
or
xor
cdq
pop
push
pushf
sbb
inc
cmps
(bad)
in
mov
xchg
rol
adc
push
or
or
dec
mov
sub
push
nop
xchg
sbb
sbb
add
adc
ja
push
mov
jo
add
imul
cld
cmp
push
xchg
xchg
rol
mov
in
xchg
iret
cdq
(bad)
push
push
je
cmp
sbb
outs
addr16
out
cmp
fcomp
jl
pushf
fld
adc
mul
pop
dec
xor
add
test
push
inc
pusha
test
mov
dec
es
mov
lds
dec
mov
lods
dec
xchg
mov
sbb
(bad)
cmc
scas
sub
pushf
mov
shl
xchg
dec
fist
push
sbb
das
mov
stos
add
or
cmc
sti
out
sub
iret
setle
mov
jb
jg
sbb
rcr
xor
cmps
in
mov
sti
scas
push
fsubr
sar
jnp
or
add
mov
jns
push
fsubr
pop
js
pop
inc
mov
outs
hlt
aam
sub
add
rcl
adc
mov
fs
lock
mov
sbb
cmc
adc
push
inc
mov
dec
add
test
ror
aaa
push
das
inc
sub
mov
jo
rcr
mov
mov
cwde
dec
and
nop
lods
test
cmps
add
xchg
mov
test
pop
cmp
or
movs
popa
pop
adc
dec
mov
data16
jbe
cli
pop
test
push
mov
mov
or
adc
in
sti
test
push
mov
cmp
dec
xlat
cmp
jb
out
xor
mov
jle
pop
ror
retf
outs
and
xor
stos
sub
pop
shl
test
hlt
inc
sbb
cmp
iret
dec
or
into
mov
test
mov
pop
xchg
mov
add
out
push
and
mov
push
pop
jecxz
xchg
dec
mov
adc
ret
ret
lods
test
loopne
cli
gs
pop
fistp
pop
mov
inc
movs
cmp
mov
sahf
add
adc
push
pop
add
mov
in
loop
mov
sti
ret
int
scas
out
stos
addr16
or
inc
mov
arpl
rcl
add
add
dec
cmp
pop
xchg
and
mov
push
lahf
mov
sbb
pop
mov
or
xor
push
popf
xor
lods
shl
pop
scas
stos
jle
pop
jno
sar
jno
in
add
mov
aaa
cmp
gs
mov
data16
inc
loop
inc
xchg
test
lock
sar
lock
sbb
inc
mov
mov
and
mov
mov
arpl
movs
clc
loope
addr16
jge
in
loop
mov
add
push
dec
and
adc
nop
cmp
aaa
out
pop
mov
add
in
add
imul
fwait
rol
fiadd
(bad)
ds
scas
mov
ins
cdq
pop
stc
mov
repz
push
mov
and
shl
lods
les
add
retf
sub
loope
repnz
push
and
or
mov
retf
ds
jle
mov
test
cld
jae
adc
jle
jno
pop
push
push
stos
dec
pop
stos
mov
cmp
jg
(bad)
addr16
fcmovnbe
push
sar
sbb
push
mov
cdq
and
in
dec
std
add
add
pusha
cld
aam
repz
cmp
fadd
enter
repnz
loopne
je
pop
cmp
stc
pop
(bad)
ja
xchg
xchg
scas
nop
das
pop
ja
pop
mov
fidiv
inc
icebp
ds
cmp
xchg
sub
fimul
fimul
adc
adc
cmp
and
(bad)
push
mov
out
fmul
adc
push
xchg
ja
pop
ja
push
scas
retf
sub
xchg
movs
jae
cwde
pop
pop
push
xchg
push
cdq
jne
pop
pop
in
daa
retf
xor
das
jg
fs
shl
pusha
out
add
cmc
outs
and
int
sahf
cmp
iret
push
loop
retf
sub
retf
ret
jecxz
stos
fcom
mov
jge
sub
mov
fs
add
stos
pushf
mov
pop
push
pushf
lahf
movs
xchg
aam
cmp
ficom
and
jp
add
jmp
jmp
aas
mov
loope
inc
mov
jle
inc
add
mov
xchg
or
and
pop
mov
test
sub
adc
sub
cmp
ss
mov
int
ret
sar
test
fisttp
xchg
movs
push
imul
and
out
or
sbb
xchg
adc
scas
mov
xchg
sub
mov
pop
xlat
in
mov
fcomp
pusha
(bad)
mov
jp
adc
into
jmp
add
xchg
push
dec
adc
cdq
sbb
dec
pop
popf
mov
stos
movs
sub
push
scas
pop
push
xchg
inc
ficomp
mov
add
aaa
leave
test
mov
adc
in
(bad)
adc
jno
mov
mov
cdq
sub
(bad)
mov
cmc
(bad)
cli
mov
push
push
nop
sbb
pop
sbb
repz
mov
fwait
repz
icebp
jb
cmp
push
lahf
or
sahf
adc
push
push
rcl
enter
daa
jns
test
mov
mov
adc
pop
inc
jb
push
shr
sub
xchg
jns
call
sub
adc
fxch
repz
mov
jle
add
sbb
adc
cwde
jae
repnz
push
shr
inc
inc
shl
out
shr
outs
pop
std
sub
sub
call
mov
or
and
iret
inc
jbe
adc
push
cmp
retf
or
xchg
loopne
xchg
xor
ins
aad
lock
mov
loop
xchg
or
adc
cwde
inc
mov
(bad)
jmp
mov
shl
pop
pop
loope
imul
sbb
mov
pop
scas
(bad)
sbb
cs
in
bound
(bad)
mov
stos
loopne
xor
inc
shl
or
in
nop
adc
xor
push
out
adc
cmps
ret
jno
inc
jl
ins
pushf
jge
test
xor
clc
fs
fdivrp
mov
sbb
nop
mov
sub
and
jp
stc
lods
cmps
cdq
push
aam
sahf
adc
iret
popa
scas
sahf
sub
loopne
(bad)
dec
push
bswap
stos
lods
mov
jg
push
scas
hlt
sub
in
sbb
loopne
in
xor
cwde
fs
add
inc
or
pop
sub
cmps
xchg
pop
shl
cld
cwde
movs
cli
pop
jno
jae
shr
pusha
mov
dec
scas
in
(bad)
sbb
sahf
inc
pop
and
addr16
jmp
shr
pop
cmp
icebp
test
xchg
push
lahf
(bad)
mov
sti
mov
(bad)
mov
push
cmp
inc
ret
pop
push
push
mov
hlt
or
int3
push
dec
outs
out
mov
mov
inc
add
scas
call
int
add
call
dec
xchg
inc
or
cld
add
add
sub
pushf
inc
xchg
push
xchg
sbb
add
sub
cmp
cs
xadd
stos
addr16
cmps
les
pop
mov
popf
push
cmp
add
aad
adc
sub
or
(bad)
sahf
fstp
jmp
ret
jbe
call
push
loopne
jnp
stc
and
aad
and
mov
into
in
icebp
repz
bound
(bad)
shl
mov
xor
jle
mov
cdq
dec
ror
sub
cwde
mov
pop
mov
inc
pop
cmps
jge
call
or
add
cmp
dec
out
sbb
fidiv
aas
into
dec
shl
ss
push
es
mov
dec
idiv
dec
sub
out
aaa
(bad)
icebp
or
sar
(bad)
mov
fs
pop
mov
cmp
out
fild
fist
mov
call
cmp
mov
shr
aam
lahf
add
imul
sub
sub
outs
stos
xchg
mov
cmp
pusha
pop
add
test
in
add
sub
jecxz
push
out
cmp
add
cs
out
outs
push
in
pusha
push
cmp
fsubr
sub
das
fs
hlt
jle
cld
fdiv
sbb
sbb
in
add
(bad)
fst
add
test
sub
fld
sbb
fist
jmp
fwait
mov
jecxz
gs
shr
push
and
inc
mov
pusha
in
js
bound
mov
test
lods
inc
fild
add
cs
and
add
adc
ret
ret
int3
cmp
retf
inc
lods
(bad)
jg
jl
inc
add
int
dec
mov
popa
in
and
pop
cmps
xchg
xchg
sub
or
sbb
add
daa
cmp
inc
xchg
(bad)
cmp
mov
mov
repz
sbb
xchg
mov
xlat
stos
sub
cmp
into
(bad)
push
nop
dec
or
in
or
bound
shr
pushf
std
and
test
lahf
(bad)
repnz
dec
fs
mov
mov
nop
stos
fwait
scas
jmp
daa
sbb
sub
ror
fistp
(bad)
es
cli
(bad)
xchg
sub
fadd
cwde
pop
mov
mov
jp
adc
imul
sti
mov
xor
mov
dec
jns
mov
stc
xor
out
std
inc
mov
adc
pop
ret
jno
jp
mov
adc
fistp
sti
shl
loope
je
scas
adc
loope
cmp
xchg
jne
mov
in
adc
shr
int3
mov
sti
movs
jae
dec
mov
push
les
add
sbb
xor
dec
pop
(bad)
ins
sub
mov
sub
test
ret
std
in
xor
xchg
mov
fild
sub
inc
pop
xor
mov
cmp
scas
xor
sbb
test
shl
adc
or
ret
push
or
adc
pop
das
stos
sbb
retf
cmp
shr
sub
fldenv
mov
xor
xchg
pop
out
sbb
push
ins
cmps
or
test
call
movs
inc
mov
bound
jmp
movs
mov
adc
or
lahf
cmc
outs
sbb
xlat
mov
and
xor
adc
fisub
pop
jae
sahf
mov
cmp
xchg
sbb
mov
movs
push
xor
clc
add
jae
aas
dec
dec
pop
inc
repz
stc
mov
sub
jp
sub
aaa
cli
adc
mov
aaa
jo
add
shr
nop
mov
pop
sub
out
mov
leave
inc
das
popa
into
stos
mov
test
push
(bad)
push
xchg
xchg
pop
(bad)
fsubp
pop
pop
mov
movs
mov
call
add
retf
loope
sysexit
retf
sbb
rol
xchg
imul
into
jmp
mov
jne
call
sub
repnz
mov
xor
sub
sti
adc
adc
int
or
cmp
xchg
mov
or
pop
push
xchg
fwait
push
retf
retf
mov
inc
pop
scas
rcr
jno
inc
xor
aas
div
clc
or
cli
mul
lods
add
sbb
popa
mov
(bad)
aad
xor
stos
pop
mov
sar
adc
shl
loope
movs
out
repnz
popf
mov
pop
inc
lea
cld
iretw
scas
int
daa
int3
daa
add
fmul
jno
sbb
push
fs
es
sti
push
adc
loopne
imul
xchg
mov
cmp
(bad)
loop
je
xchg
stos
lods
mov
scas
and
fxch
xor
outs
(bad)
pop
mov
add
fsub
sub
mov
sbb
cmp
sbb
and
xchg
adc
fadd
or
jmp
out
cmp
xor
call
push
sub
mov
cmp
js
sti
jne
in
sbb
int
aad
inc
mov
out
daa
ret
mov
add
mov
and
mov
sub
sbb
push
sar
lahf
inc
mov
ss
mov
into
mov
pop
adc
and
lods
push
pusha
ror
xor
push
cwde
lods
dec
shl
mov
push
and
xchg
nop
das
push
sbb
mov
jle
mov
mov
scas
ins
push
icebp
fidivr
jnp
xor
mov
bound
cld
inc
inc
xor
std
sbb
adc
test
fstp
sbb
cmc
inc
das
rcr
add
(bad)
jmp
nop
inc
in
adc
imul
sbb
in
jecxz
daa
(bad)
gs
push
hlt
pusha
sahf
jmp
mov
sub
and
cwde
hlt
pop
and
lods
out
pop
mov
or
lods
cmps
test
fimul
mov
mov
outs
test
in
inc
or
or
ins
cmp
push
shl
jae
dec
aam
xchg
inc
repz
cmp
shl
inc
inc
adc
sub
or
mov
ins
icebp
xor
(bad)
jbe
jae
push
jo
and
sar
mov
push
out
aaa
pop
mov
fbstp
sub
inc
sub
inc
and
scas
or
pop
leave
rcr
jp
push
add
ror
(bad)
retf
hlt
add
dec
push
test
sbb
jb
and
loopne
mov
ins
retf
sub
push
rcl
sbb
and
push
fisub
adc
inc
cmp
lds
shl
ja
and
mov
adc
leave
jle
xchg
(bad)
mov
xchg
outs
xchg
xor
mov
and
test
add
inc
(bad)
fisttp
loop
popa
cmp
imul
xchg
mov
sbb
nop
push
imul
cmp
dec
leave
jne
int
addr16
jecxz
xchg
cld
xchg
xchg
lods
stos
sbb
fld
or
mov
and
jae
sbb
inc
inc
pop
pop
(bad)
hlt
mov
push
sbb
inc
and
xchg
push
jae
xchg
pop
or
add
jb
xchg
mov
stc
xchg
popa
push
test
fcomi
dec
int3
or
mov
repz
pop
sub
ins
push
mov
adc
jns
mov
sbb
aas
adc
xchg
addr16
sub
stos
push
sti
mov
out
shr
sbb
push
outs
or
cli
bound
inc
adc
xor
push
mov
sahf
pop
(bad)
aad
dec
sub
out
mov
cld
ja
xor
mov
arpl
add
out
test
mov
xlat
lods
mov
sar
push
cmps
sbb
cdq
dec
jecxz
rol
les
jl
fnstcw
jmp
jne
sbb
xor
mov
xor
ret
sbb
je
aas
lods
adc
mov
cmp
inc
pop
int3
sbb
sub
dec
or
and
in
mov
leave
inc
dec
ja
(bad)
or
adc
aas
inc
jl
mov
shr
lods
inc
pop
sbb
cli
pop
sub
add
icebp
push
add
(bad)
push
outs
repz
and
stc
sub
mov
inc
sti
popf
imul
pop
ja
popa
mov
loop
cmp
fsubr
imul
movs
mov
cmps
add
adc
shr
xor
in
aas
mov
es
mov
bound
into
pop
jmp
ins
jmp
pop
fs
pop
pusha
or
push
out
(bad)
push
inc
inc
jmp
outs
sbb
outs
pushf
aam
cmps
lock
ja
imul
push
xchg
xchg
dec
add
jae
sub
movs
cld
std
ins
aad
pop
mov
xor
push
shl
cmp
iret
and
pop
inc
xor
data16
mov
gs
pop
popf
shr
arpl
add
out
adc
push
aaa
cmp
das
rcr
xchg
jae
mov
pusha
mov
enter
dec
xor
pop
and
adc
jmp
inc
ret
call
scas
shl
jl
and
push
jb
out
js
aam
or
mov
sub
std
xchg
sub
cmc
mov
stos
dec
scas
dec
inc
xor
mov
into
pop
loope
mov
aad
daa
stos
xchg
add
adc
inc
push
sub
hlt
sbb
or
mov
xchg
mov
je
xchg
inc
aas
add
scas
arpl
popa
inc
inc
mov
sbb
mov
xor
lahf
and
or
xchg
outs
out
imul
dec
std
jmp
pop
std
std
adc
adc
push
fsubr
sbb
pop
mov
jo
aam
(bad)
xlat
add
adc
push
mov
mov
es
out
scas
push
imul
sti
sbb
outs
cmps
mov
xlat
and
sub
arpl
aam
inc
lods
xor
daa
cwde
jo
mov
jecxz
xor
lods
fnstcw
push
data16
ret
aam
or
xchg
sbb
out
scas
call
aaa
xor
test
mov
jns
and
jmp
or
cmp
lahf
push
inc
or
gs
xor
xchg
js
or
rol
ins
dec
cmp
arpl
inc
jp
mov
xchg
rcl
cmc
xchg
out
int
mov
outs
fisubr
inc
xchg
dec
sub
mov
xor
jecxz
xor
or
int
popa
jno
fadd
stc
xor
ins
xchg
push
and
inc
es
push
xchg
push
adc
jl
cld
nop
mov
push
sbb
lds
cmc
les
rcr
push
test
out
cmp
data16
sbb
dec
aad
ja
ins
loope
xchg
or
sbb
rcl
ja
and
daa
lods
in
ror
sbb
inc
movs
cmp
les
icebp
sbb
adc
(bad)
jnp
or
add
and
ret
push
repnz
mov
ds
xchg
mov
lahf
lock
mov
jecxz
add
mov
into
lods
xchg
retf
cmp
or
inc
mov
and
ja
sbb
test
mov
rol
out
inc
jmp
shr
ja
inc
enter
inc
neg
dec
je
xchg
mov
mov
dec
pop
cmp
loope
movs
ins
mov
jnp
outs
cmp
stc
(bad)
int
pop
cmp
lods
mov
jmp
cmp
add
in
rcr
repz
jge
add
pop
ins
dec
es
fstp
push
sub
fcom
rcr
push
mov
xchg
jecxz
and
mov
retf
mov
add
xchg
xchg
inc
xchg
and
cs
sbb
fsave
into
mov
dec
fbld
or
mov
inc
(bad)
jae
jmp
adc
loope
fbstp
scas
pop
mov
ret
inc
stc
inc
mov
lahf
in
rcr
cli
pop
and
or
int3
test
ja
add
adc
je
xchg
xchg
popf
rcr
mov
sbb
call
out
lahf
sar
out
pop
je
pop
pop
hlt
test
add
cmp
(bad)
shl
mov
dec
(bad)
es
and
dec
sbb
fucom
call
movs
xor
jno
xor
mov
ret
xchg
or
addr16
mov
out
sbb
pop
xor
dec
pushf
(bad)
(bad)
jbe
cmp
dec
int3
fs
pop
stos
loopne
sti
pop
push
cmp
push
lahf
rol
or
push
pop
pop
push
adc
iret
mov
jle
push
cmp
call
jmp
mov
cld
out
push
dec
addr16
sbb
jle
add
or
mov
inc
and
mov
pop
mov
arpl
ror
cmp
mov
movs
or
jmp
(bad)
cli
repz
mov
lods
icebp
mov
mov
add
push
and
shl
cld
dec
and
fsub
in
lahf
xchg
mov
ret
add
sub
dec
inc
popa
cs
(bad)
lods
inc
inc
push
mov
jge
idiv
sti
xchg
data16
sbb
pop
jno
and
sbb
(bad)
add
inc
or
cdq
xchg
xor
daa
mov
pop
nop
sub
fild
cmp
test
idiv
sub
dec
je
push
fs
jns
pop
call
(bad)
or
dec
in
mov
pusha
std
sti
ss
mov
and
sub
push
(bad)
rcr
not
mov
shl
or
dec
xchg
icebp
(bad)
mov
and
clc
mov
ss
outs
inc
popf
dec
inc
dec
adc
push
jbe
lods
jg
setns
(bad)
int
(bad)
xchg
dec
data16
inc
inc
test
jmp
inc
jbe
mov
fld
mov
dec
push
loopne
push
repz
xor
add
lock
gs
loope
sub
aad
aam
fwait
or
fnstenv
dec
push
cld
add
addr16
(bad)
retf
mov
adc
jnp
stos
pusha
aaa
jnp
loopne
scas
sti
inc
ror
icebp
jo
sbb
xchg
idiv
add
inc
push
pushf
xor
(bad)
out
popa
cmp
in
lea
mov
in
fimul
push
ins
rol
es
mov
stos
mov
cmp
mov
call
mov
gs
cmps
sub
data16
sub
push
inc
ja
add
lds
push
jbe
add
int
lods
and
ficomp
mov
xchg
dec
(bad)
mov
(bad)
rcl
mov
push
jbe
movs
ret
add
pop
dec
push
and
pop
daa
push
pop
loope
jmp
inc
mov
push
in
add
(bad)
jmp
loope
jmp
call
pop
or
push
pop
ins
xor
inc
push
mov
ds
adc
faddp
(bad)
test
pop
lods
aam
stos
or
xor
push
(bad)
lods
(bad)
cdq
jp
in
fcomp
jge
hlt
xchg
xor
popa
mov
bound
push
ret
(bad)
stc
sbb
xor
or
adc
and
stc
or
cmp
dec
jg
and
dec
je
cmps
lock
sub
and
rol
outs
mov
xlat
fisub
and
or
out
test
mov
std
aad
(bad)
sar
nop
shr
test
dec
cwde
pop
lahf
sub
nop
aas
aad
pop
retf
jns
sbb
jl
inc
das
mov
jle
xchg
ret
xor
es
and
cdq
inc
mov
and
ret
mov
cmp
mov
movs
out
ret
jno
dec
repnz
movs
je
rcr
nop
dec
cwde
std
nop
mov
fidivr
jge
add
add
fsubr
pop
mov
sbb
or
jmp
cdq
rcl
and
mov
popa
js
add
jp
inc
(bad)
mov
cli
add
rcr
push
inc
push
loope
movs
and
and
push
retf
xchg
les
daa
repnz
sub
popa
fist
sbb
sub
rcl
xchg
aaa
pop
dec
sar
into
dec
frstor
xlat
jns
jg
cmp
fnstenv
mov
out
rcl
jno
bound
adc
xchg
adc
or
adc
test
dec
out
cmp
es
(bad)
push
ins
push
push
jp
ds
or
mov
inc
add
pusha
outs
adc
mov
sbb
out
add
lea
sub
cmp
in
aas
pavgw
or
mov
jmp
pop
sub
mov
repnz
into
popf
daa
push
iret
push
in
outs
jno
(bad)
test
loope
and
cld
xor
lock
mov
sub
fidiv
loope
jle
bound
(bad)
pop
cmps
dec
mov
jbe
xor
sbb
mov
jbe
icebp
es
or
jno
add
stos
mov
add
popa
loopne
scas
enter
push
lahf
enter
or
xor
or
cdq
imul
and
xlat
cwde
mov
and
(bad)
leave
shr
mov
ror
sub
cwde
mov
lahf
sub
jae
sahf
pop
dec
push
mov
pop
movs
cmp
lea
and
xor
inc
xchg
dec
push
test
je
sbb
sar
jg
rcl
fwait
push
je
push
out
jne
sub
mov
cwde
fild
out
bound
push
mov
gs
add
fsubr
mov
and
stos
sbb
jp
ret
call
adc
pop
pop
cmps
push
sbb
xor
rol
xor
push
add
cvtpi2ps
or
aas
test
lods
test
lahf
mov
jmp
(bad)
pop
dec
xor
sub
call
mov
jmp
pop
(bad)
mov
sub
(bad)
dec
mov
ja
fwait
call
xchg
push
cld
cmps
pop
movs
(bad)
xchg
pop
out
xchg
sub
ret
and
and
xlat
adc
ja
shl
push
scas
outs
add
icebp
jp
push
mov
fidivr
in
std
mov
cmp
jl
and
fild
jecxz
int3
mov
mov
add
outs
xlat
adc
cli
mov
dec
and
and
movs
ss
mov
and
xchg
dec
stc
clc
mov
cmps
pop
cmp
out
ins
ins
cmp
je
ins
or
xor
cld
dec
mov
add
stc
cwde
leave
pop
pop
(bad)
pop
inc
mov
push
cli
lods
push
movs
pop
jns
les
xchg
aam
cmp
cmps
push
jb
dec
out
rcl
int3
aam
adc
fidiv
sti
int
sub
lods
shr
xor
inc
clc
jb
je
inc
pusha
adc
xor
inc
mov
jnp
cmp
adc
xor
inc
leave
fild
inc
aaa
mov
xor
mov
test
test
pop
mov
clc
ja
push
and
bound
jne
out
push
cli
jecxz
lds
dec
sbb
lea
mov
inc
loop
sahf
(bad)
sti
xchg
je
cld
cwde
and
inc
and
jb
mov
fistp
wbinvd
fwait
pcmpgtd
iret
lahf
or
aaa
fs
mov
loop
cmp
or
cs
sub
jg
mov
adc
lea
sbb
adc
test
loopne
pop
mov
popa
add
add
inc
stos
jne
lock
ins
cmp
sub
cld
sti
loope
scas
mov
or
and
test
mov
aaa
xchg
sub
das
icebp
stos
mov
xchg
sub
xor
cmp
cmp
int
mov
inc
in
icebp
test
xor
mov
dec
cmp
push
or
das
dec
test
lods
mov
add
and
pop
inc
leave
std
nop
mov
adc
inc
mov
inc
push
mov
mov
push
mov
stos
adc
loopne
push
adc
sub
and
repz
jmp
cmps
(bad)
cli
jmp
push
push
jmp
(bad)
hlt
lea
mov
xchg
or
jnp
xor
aas
sti
ss
sub
in
push
mov
ds
and
cmp
lock
pop
mov
inc
jnp
cli
fldcw
push
data16
jb
push
aaa
fsub
mov
test
bound
xor
jo
call
pop
retf
stos
ror
pop
test
sub
mov
jae
fld
(bad)
bound
imul
andnps
jecxz
mov
mov
cli
xor
ins
cmc
mov
pop
mov
(bad)
cmp
mov
bound
shl
xchg
jmp
or
add
adc
adc
nop
xlat
arpl
xchg
pop
cmp
push
shl
and
int3
es
push
xchg
mov
arpl
pop
pop
cmc
sbb
inc
rcl
repz
push
pop
pop
inc
gs
pop
xchg
stc
stos
shr
push
test
xchg
mov
lods
push
mov
jmp
inc
leave
dec
fild
loop
sub
es
fdiv
push
xchg
arpl
jno
aad
pop
jge
jne
in
sub
les
sbb
ds
ds
mov
push
sti
inc
add
adc
inc
(bad)
hlt
pop
cmp
imul
std
pop
pop
gs
je
fistp
mov
iret
lds
bound
jo
test
and
jmp
push
sub
cmp
pop
or
(bad)
pop
pop
fadd
jo
mov
and
fucomi
add
test
dec
std
sbb
mov
jp
xchg
and
jmp
fwait
int
cmp
call
ret
inc
(bad)
xor
imul
and
fisub
sbb
aas
mov
sbb
jnp
fdivr
mov
movs
ins
test
sbb
dec
stos
xchg
push
sbb
inc
add
outs
rcl
fld
xchg
cwde
xor
cmp
cmp
jmp
fisttp
ret
imul
aas
retf
retf
push
xchg
mov
fnstcw
add
fnsave
test
fs
aaa
imul
cdq
push
out
jge
ins
test
call
cld
adc
cmp
outs
loope
add
leave
xchg
pop
lahf
icebp
push
dec
pop
jge
(bad)
xlat
pop
xchg
and
shl
sar
out
cmp
inc
cmps
lahf
lock
cmp
mov
push
sti
lods
into
add
outs
and
xchg
adc
(bad)
pop
jle
push
push
sbb
inc
jp
sahf
cli
jmp
cmps
(bad)
push
inc
mov
sub
pop
xor
clc
add
cmp
jmp
jmp
stos
cli
mov
jb
test
daa
mov
nop
aam
in
daa
fisubr
jb
xlat
xchg
jno
inc
cmp
repz
gs
mov
mov
mov
lds
dec
or
push
push
in
and
das
loope
fisttp
dec
pop
sbb
int
push
lock
mov
in
out
cmps
test
fdivr
enter
test
ja
cmc
inc
js
cli
pop
popa
sbb
mov
push
inc
mov
jb
test
pop
jns
fcom
das
loop
or
or
cmp
jae
das
fimul
push
(bad)
pop
das
or
scas
xor
mov
pop
test
pusha
mov
cmp
out
cmp
sbb
(bad)
fwait
cmp
data16
add
sar
call
mov
enter
sbb
xor
fisttp
push
dec
mov
cmp
mov
icebp
idiv
mov
sub
xchg
repnz
xchg
inc
ret
push
ret
mov
and
mov
inc
lods
pushf
jg
jle
pop
and
xor
repnz
sub
mov
push
(bad)
fldpi
inc
adc
sbb
addr16
sub
xchg
(bad)
fistp
lds
xor
inc
aam
cwde
je
outs
imul
ficomp
add
dec
xor
jnp
outs
int
popa
fstp
les
push
addr16
pop
cs
jne
mov
push
sub
lahf
in
lods
xchg
ss
loop
jg
xor
cmc
mov
inc
and
inc
pop
sub
cmp
mov
cmp
fld
sbb
sbb
gs
push
and
scas
(bad)
clc
cdq
inc
and
mov
loope
push
xor
out
fsubr
and
ins
bound
or
cmps
cmp
clc
int3
mov
aas
xor
pop
and
push
mov
or
repnz
in
push
dec
mov
dec
rol
out
and
ret
ds
(bad)
call
sub
dec
imul
mov
ds
sahf
dec
add
retf
inc
mov
mov
clc
xor
ins
movs
sbb
fs
cmp
std
enter
xchg
fsubr
push
mov
sub
mov
sub
fldenv
cmp
push
pop
cmps
xor
out
add
pop
aaa
test
push
mov
mov
mov
jge
push
add
jmp
sub
push
jne
ds
dec
out
push
scas
cmp
stos
outs
jl
int3
ret
mov
xor
xor
stos
adc
mov
cmp
inc
(bad)
loope
into
mov
lds
mov
lods
clc
inc
cli
xor
aaa
push
cmc
inc
sbb
in
dec
std
cmp
xchg
(bad)
jae
in
and
cli
les
loopne
stos
aas
jg
adc
cmp
inc
push
(bad)
jo
movs
(bad)
adc
cmp
add
mul
xor
popf
sub
arpl
nop
stos
stc
pop
aas
sbb
inc
jge
add
(bad)
out
jp
inc
push
pop
mov
cmps
lds
out
adc
into
adc
inc
adc
jl
test
aam
push
dec
ins
iret
fdiv
rcl
mov
mov
fisttp
inc
pop
dec
scas
(bad)
sbb
add
js
call
ja
jno
mov
sahf
loopne
pop
ficomp
dec
xchg
push
jne
mov
pusha
mov
fcmovbe
pushf
cmp
sahf
loope
add
in
repnz
sbb
aad
loop
xor
adc
mov
jp
mov
stos
in
push
adc
leave
movs
mov
ja
cwde
inc
push
push
sub
test
enter
fwait
cld
test
xlat
popa
sub
outs
or
ins
(bad)
xor
rcl
xor
mov
out
test
in
adc
ret
or
imul
(bad)
sub
cmc
mov
jle
repnz
dec
lock
jne
adc
shr
loop
and
fdivr
mov
stos
dec
mov
jp
fsubr
mov
and
enter
mov
inc
sbb
pop
push
fs
loope
lock
push
xchg
std
push
push
fwait
loop
popf
jge
dec
les
mov
push
cmps
fmul
bound
adc
cdq
jns
sbb
(bad)
int
int3
call
mov
lods
shl
test
cmps
mov
iret
lds
pop
shl
imul
mov
inc
retf
jmp
test
sbb
es
cmp
xor
mov
fs
scas
out
gs
jge
jno
mov
add
push
test
in
(bad)
adc
push
mov
adc
cmps
mov
pushf
xchg
cld
dec
aas
dec
cmp
inc
imul
adc
leave
cmp
into
mov
mov
stc
or
or
sbb
std
xor
mov
neg
cs
ret
loopne
aas
adc
aad
ret
(bad)
adc
mov
jno
ret
xchg
jo
lahf
(bad)
or
in
stos
ins
pop
xor
stos
inc
stos
dec
stos
mov
cs
xor
jno
sbb
push
cmc
lock
sbb
imul
jge
add
or
mov
pusha
push
iret
dec
fsub
outs
loop
or
in
or
hlt
in
pop
mov
sti
sub
add
cmc
ret
push
vpsubsb
sbb
sub
stc
pop
int3
test
(bad)
sbb
ret
sub
inc
push
push
and
add
cwde
or
ss
mov
and
xchg
mov
popa
movs
mov
and
jb
inc
xchg
call
aam
daa
rcr
mov
fisubr
lea
sub
or
push
or
dec
fisubr
jge
sar
fisttp
mov
and
int
in
push
je
xor
aas
sahf
push
jl
sub
cmp
inc
sub
imul
jle
pop
sub
adc
cmp
test
mov
imul
outs
jns
mov
push
dec
call
ins
push
adc
adc
out
xchg
cmp
leave
sub
popa
je
add
jmp
cmps
into
mov
retf
bswap
jle
cmps
icebp
icebp
cli
int3
or
push
cld
mov
ret
hlt
push
jmp
inc
test
push
xor
(bad)
jmp
mov
sbb
into
cmps
adc
pop
fdivr
jge
shr
(bad)
pop
fmul
mov
movs
xor
mov
cdq
sub
pop
loop
shrd
sub
mov
xlat
pop
jle
jecxz
pop
outs
mov
ds
inc
jbe
into
inc
jae
test
jno
(bad)
jmp
mov
mov
leave
and
jecxz
ds
jnp
adc
cmc
xor
call
cmc
sub
xorps
(bad)
mov
scas
ja
cmp
pop
pop
out
cmp
int
jns
test
out
scas
ss
lea
jecxz
cmp
imul
push
add
mov
push
jns
stc
mov
(bad)
das
or
fild
dec
repnz
sbb
arpl
jne
into
sbb
cmp
inc
pop
rol
popf
scas
aam
retf
sar
adc
jg
push
cmp
(bad)
leave
mov
div
imul
inc
das
pop
mov
add
loope
or
xlat
shl
cwde
xchg
jnp
ror
into
mov
dec
jecxz
out
or
rol
fiadd
xchg
jo
scas
cmc
scas
or
int
jmp
push
inc
bswap
arpl
jle
adc
movs
jmp
(bad)
pop
sbb
and
hlt
bound
jo
out
out
dec
popa
shr
adc
out
mov
jge
cmp
push
mov
jl
xlat
mov
add
jmp
dec
adc
scas
ret
mul
loope
imul
and
or
in
mov
mov
sahf
loope
ficomp
push
mov
cmp
xchg
movs
inc
and
bound
call
xor
sbb
add
mov
push
std
pop
(bad)
fldenv
pop
mov
jle
jno
ss
je
sub
mov
int
push
adc
pop
and
dec
mov
dec
sbb
(bad)
pop
xchg
fisttp
int
repz
dec
fnstsw
in
scas
jmp
mov
adc
pop
push
sub
mov
sti
inc
mov
push
adc
adc
push
xlat
mov
sub
sar
pop
cmps
and
sar
cwde
sub
jbe
fst
arpl
sub
sbb
mov
sub
jg
test
sub
pop
cli
movs
xchg
or
sbb
out
aaa
push
imul
mov
dec
call
inc
std
fmul
int
lock
jmp
cmp
xchg
call
or
ret
sbb
test
les
aaa
xor
fcom
mov
out
xor
scas
sub
and
outs
mov
adc
jl
inc
jg
ja
fdivr
sub
iret
popa
cmp
push
lahf
jmp
ss
xor
cmc
lahf
add
test
pop
jecxz
mov
mov
pop
push
adc
jmp
jno
or
dec
ds
lock
xchg
bound
adc
mov
jo
pop
and
lea
leave
adc
gs
mov
es
pop
dec
cld
js
mov
mov
xchg
outs
stc
div
mov
in
aaa
les
mov
mov
xchg
popf
(bad)
pop
push
sbb
mov
xchg
jge
outs
test
in
nop
push
sub
mov
cli
dec
gs
ror
push
pop
fnstsw
in
push
scas
jns
mov
shl
stos
(bad)
pop
leave
test
pop
hlt
leave
scas
mov
(bad)
pusha
shl
pop
jmp
xchg
jp
aam
js
sti
mov
nop
add
dec
add
push
(bad)
mov
pop
out
sbb
loop
scas
push
lock
jo
nop
sbb
pusha
and
cs
xchg
frstor
sub
or
test
scas
inc
dec
pop
inc
popa
dec
jbe
xchg
adc
cmc
fimul
out
sbb
cld
ret
adc
imul
or
leave
mov
push
loopne
fstp
pop
ds
or
or
mov
sbb
fst
(bad)
and
ja
push
mov
inc
imul
or
popf
icebp
or
pop
out
mov
or
push
mov
fcomp
inc
mov
test
jmp
test
rol
cmp
arpl
cmp
xlat
sbb
gs
fcom
ds
adc
cmp
cmp
sub
sbb
retf
or
xor
or
ret
mov
test
sub
add
push
(bad)
rcl
iret
and
pop
test
in
jns
jns
(bad)
fmul
cmc
sahf
pushf
xchg
pushf
ja
retf
cmp
sbb
in
pop
cmp
int3
lea
xor
adc
test
cmp
rcr
loop
adc
(bad)
adc
retf
gs
in
shr
ins
pop
sub
sub
je
in
pop
out
cwde
imul
daa
int3
xchg
bound
cmc
push
shl
push
enter
sbb
pusha
xor
push
in
mov
mov
xbegin
ret
(bad)
je
call
xchg
jae
jecxz
in
pop
cmp
xor
daa
lods
clc
adc
push
mov
sbb
outs
jp
ror
xor
sub
ins
mov
dec
cmps
(bad)
xchg
xor
add
jp
inc
cmp
xor
ins
or
mov
mov
cli
xchg
cs
out
sbb
cmp
call
sti
lock
stc
xchg
out
cmc
(bad)
mov
mov
jo
mov
xchg
sub
retf
pop
sbb
int
lahf
mov
scas
inc
jae
fcmovu
leave
jg
jmp
cmp
xor
pop
or
push
pop
cmps
mov
sahf
push
lods
daa
or
push
dec
(bad)
cli
dec
outs
or
call
sub
pop
leave
push
mov
retf
je
adc
push
add
pop
int3
pop
cld
jne
pop
jne
(bad)
xchg
xor
hlt
add
daa
aas
lds
inc
movs
in
add
fldcw
stos
pop
das
sub
mov
dec
push
xchg
daa
aas
and
(bad)
mov
mov
nop
mov
je
popa
dec
or
shl
inc
icebp
mov
jno
xor
ins
fsub
push
jl
mov
jae
std
data16
xor
imul
mov
adc
push
iret
jno
cdq
mov
imul
push
int
or
iret
data16
(bad)
(bad)
cmc
test
mov
loope
retf
xor
repnz
sbb
sbb
cmc
iret
push
or
je
jl
je
push
and
frstor
or
cmp
(bad)
jmp
push
inc
inc
sar
pop
sahf
ins
push
xor
mov
xor
ja
mov
push
repz
add
int
mov
xchg
aam
and
repz
adc
jo
movs
aad
test
inc
add
jg
enter
sar
push
(bad)
idiv
mov
inc
xor
popa
les
retf
test
or
stc
ret
pop
loopne
stos
or
ins
daa
stc
add
stos
and
sub
pop
call
mov
adc
adc
xchg
jb
pop
jg
in
into
jge
js
sar
rep
or
xchg
mov
inc
jle
scas
cmps
aaa
pop
sti
int
aas
fidiv
mov
stc
dec
pop
aad
or
dec
and
mov
cld
push
pop
arpl
inc
jno
aad
cmp
xchg
push
jle
shl
(bad)
fbstp
mov
mov
mov
cli
dec
and
add
aas
xor
fld
lods
loopne
imul
popa
cmp
cmp
push
jnp
pop
xchg
cmc
ins
pop
sbb
mov
pop
inc
stc
call
and
mov
arpl
push
cmp
cwde
loope
cwde
sub
cmp
cdq
daa
or
xchg
xchg
xlat
mov
cmps
in
dec
push
pop
push
ret
and
mov
cmp
test
inc
dec
imul
dec
(bad)
cmc
repz
nop
outs
(bad)
shl
mov
dec
out
mov
mov
pop
sbb
lahf
pop
ins
(bad)
ds
and
ret
aas
pop
inc
nop
int
adc
fmul
dec
mov
loop
adc
cmc
xlat
push
aaa
imul
sbb
and
(bad)
movs
std
push
js
pop
xchg
outs
ins
movs
shr
(bad)
aas
fcom
ret
adc
jg
or
mov
sbb
xor
sbb
jmp
int3
xor
daa
in
mov
cmp
xchg
cmps
jb
sbb
dec
lock
das
clc
adc
rcl
jl
push
xor
inc
cmps
loope
xchg
cmp
cmp
add
popa
into
popf
sub
inc
shl
xor
mov
es
rol
or
in
data16
int3
cmp
les
daa
(bad)
rcr
nop
push
push
or
shl
mov
pandn
sbb
lods
(bad)
jge
xchg
ins
dec
sbb
jno
test
or
and
add
enter
mov
and
mov
adc
add
xor
adc
fxch
push
out
arpl
jmp
xor
clc
mov
lds
iret
out
addr16
pop
or
xchg
adc
jae
jne
jecxz
mov
xor
mov
ins
std
or
cmps
(bad)
ds
gs
into
pop
sbb
mov
cmp
xlat
nop
push
xchg
xchg
sahf
sbb
outs
rcr
(bad)
push
int3
sub
xchg
adc
(bad)
cmp
cmp
cli
adc
mov
adc
xchg
scas
xchg
sub
jecxz
mov
or
movs
xor
(bad)
xor
sub
into
push
adc
pop
fidiv
fimul
jecxz
fcomp
jmp
push
test
add
mov
push
stos
pusha
iret
jnp
js
pop
pop
mov
neg
not
mov
in
mov
jo
adc
repz
xchg
push
outs
jp
jbe
mov
sub
xlat
jg
sub
and
sub
inc
in
int
dec
shl
clc
adc
bsf
popa
dec
dec
mov
dec
xchg
(bad)
push
ficom
push
and
push
or
mov
aas
fs
cli
or
cmp
pop
rcl
daa
in
push
pop
aam
dec
cmp
or
inc
inc
jno
fstp
fisub
jnp
sahf
aam
loope
pushf
ins
cmp
dec
xor
mov
int3
push
imul
cmp
fisttp
mul
inc
in
js
fbld
lock
and
ficomp
js
movs
pop
mov
in
gs
mov
loop
iret
popa
retf
dec
jmp
ins
jno
mov
fst
fisubr
jbe
pop
(bad)
sti
outs
lea
(bad)
cmp
xchg
mov
push
fcomp
mov
(bad)
fdiv
sti
or
movs
pusha
jo
hlt
(bad)
movs
je
jg
and
jae
shl
sbb
sbb
das
lods
call
fmul
pop
lods
enter
jo
push
hlt
push
xchg
inc
dec
add
xor
jecxz
cs
les
pop
mov
mov
mov
ins
cmp
xor
fcom
jb
inc
dec
mov
int
aam
and
cmp
data16
dec
imul
cmp
stos
arpl
sbb
push
repnz
mov
push
mov
shr
popf
jge
mov
in
loop
out
inc
mov
stc
adc
mov
or
sbb
cmp
imul
popfw
call
cli
fs
loopne
or
clc
jns
pop
aam
inc
cmp
cld
sbb
mov
(bad)
mov
jle
stos
fld
add
fwait
and
das
fcomi
sbb
in
test
mov
mov
rcr
jae
out
int3
sub
(bad)
outs
inc
dec
fnstsw
xor
adc
icebp
out
jl
ret
mov
adc
sub
mov
mov
data16
cmp
and
hlt
mov
mov
and
ins
test
add
inc
mov
mov
mov
or
in
xchg
scas
fist
fmulp
shl
sbb
loop
pusha
fxch
sar
cmps
int
push
fdivr
adc
cmp
xor
aam
rcl
cmp
and
loop
aad
(bad)
leave
test
xchg
push
imul
xor
fdiv
jecxz
inc
adc
jno
xchg
xor
push
fs
aaa
push
jg
test
clc
or
cli
sar
xchg
xor
mov
and
jnp
frstor
das
movs
popa
fdivrp
fst
leave
test
fnsave
mov
jecxz
xchg
cli
add
mov
shr
pop
call
fdivr
icebp
imul
iret
lahf
push
jne
addr16
cs
out
cmps
neg
jp
push
or
jnp
(bad)
enter
add
test
push
xor
sbb
pop
xchg
int
fwait
(bad)
mov
mov
mov
scas
sub
mov
adc
adc
cmp
dec
outs
mov
mov
push
xchg
icebp
jmp
hlt
or
rcl
repnz
cmp
repz
movs
sbb
cmp
aaa
(bad)
push
mov
pop
inc
repz
jno
cmp
inc
fnstcw
xor
dec
scas
ins
dec
and
cmc
(bad)
jecxz
xor
ret
dec
repnz
out
ja
daa
xchg
out
(bad)
test
cdq
and
std
mov
leave
lods
cli
sbb
(bad)
outs
and
ror
sub
fcmovu
and
jno
sbb
xchg
shl
js
xlat
inc
cmp
out
aaa
repnz
into
loop
push
mov
push
adc
pop
fidiv
pop
sub
push
add
std
icebp
cmp
mov
lods
pop
mov
aam
jp
dec
addr16
loopne
outs
sbb
jmp
and
ja
das
lods
pop
add
stos
lea
mov
cmp
shl
xchg
mov
inc
mov
cmp
inc
inc
aaa
xor
leave
addr16
jns
mov
inc
push
pop
pop
xchg
mov
mov
aaa
xor
pop
cmp
jp
js
jnp
sbb
cdq
sar
sub
jge
xchg
das
movs
add
call
bswap
or
das
pop
sub
xor
add
adc
(bad)
jp
xchg
inc
aaa
je
mov
xchg
repnz
mov
mov
aad
nop
cld
aam
je
aaa
or
out
std
ret
jnp
pop
stc
mov
ror
sbb
popa
loope
into
xor
cmp
scas
xlat
or
dec
push
ins
int3
repnz
fs
pop
ret
mov
pop
mov
leave
xchg
mov
jp
inc
pop
fwait
dec
push
sub
push
aas
xchg
iret
add
test
int
fistp
std
dec
out
repz
pushf
imul
pop
adc
and
rol
sub
lods
mov
into
xor
adc
lock
(bad)
out
cmp
or
cmps
push
jmp
push
adc
cmp
xchg
push
pusha
or
popf
xor
sub
ins
xchg
inc
out
stos
or
mov
out
lahf
cdq
loop
(bad)
mov
xchg
fsubr
dec
or
clc
dec
pop
xchg
inc
pop
xchg
adc
fld
adc
test
and
test
test
add
jmp
sbb
and
push
nop
xchg
popa
(bad)
jle
push
dec
rol
sbb
push
push
push
ins
(bad)
hlt
and
in
daa
pusha
cmp
jecxz
cmps
pop
and
bnd
lahf
das
and
ficom
aam
push
scas
xchg
jb
mov
stos
jae
(bad)
mov
dec
jno
add
rcr
xchg
adc
lods
add
xor
lods
int3
mov
mov
jle
out
or
pop
mov
or
nop
add
or
ror
add
ret
rcl
jbe
ret
test
mov
or
pop
and
pop
jg
bound
push
mov
es
inc
pop
out
jmp
or
push
outs
clc
jbe
dec
pop
cdq
adc
and
(bad)
js
jb
arpl
xchg
lods
aad
jbe
jecxz
jae
outs
and
xchg
sub
adc
jp
mov
cmp
stos
add
cmp
jg
dec
lahf
jp
cmp
test
retf
adc
push
shr
adc
je
push
shl
scas
dec
popa
xor
xor
cmps
add
mov
(bad)
mov
call
stc
ficom
movnti
popa
enter
add
cmp
lahf
aaa
mov
ficom
retf
or
mov
sub
inc
sahf
scas
dec
enter
stos
mov
imul
ss
xchg
inc
mov
dec
mov
fist
cmps
xor
xchg
inc
out
jbe
cmp
cmp
loopne
cmp
shl
xchg
jb
xor
(bad)
aaa
(bad)
cli
push
ret
in
xchg
add
loop
mov
mov
(bad)
mov
(bad)
icebp
ret
inc
jo
add
mov
outs
add
std
cmp
out
mov
cli
repnz
pop
movs
or
test
lock
dec
sti
in
mov
mov
xor
out
xor
pop
mov
das
push
enter
push
(bad)
out
jp
es
repz
jmp
push
dec
call
js
add
sub
xor
rcr
pop
sbb
call
fs
and
(bad)
movs
dec
dec
inc
fstp
xchg
xchg
add
fbld
jne
cmp
(bad)
mov
fist
push
push
es
fs
stos
(bad)
and
push
add
outs
or
aam
js
rcl
push
add
in
addr16
jmp
fstp
ud1
xor
daa
fidiv
jmp
daa
cdq
sbb
je
cdq
mov
test
add
in
ins
leave
out
and
xchg
sahf
cmp
shl
mov
les
fisubr
dec
rcl
xor
cmp
cmp
aaa
loopne
cmp
xchg
(bad)
dec
pop
loop
jle
push
mov
int3
xchg
xor
inc
adc
add
gs
aam
sub
popf
push
shl
dec
xor
daa
sub
fild
jns
stos
jl
pop
es
push
rcl
xor
mov
stos
and
xchg
es
pusha
inc
jecxz
sbb
rcl
pop
outs
jb
xor
push
mov
push
ins
adc
cdq
pushf
stos
push
mov
idiv
std
mov
inc
mov
std
iret
jnp
js
repnz
popf
cmp
stc
push
or
les
push
xchg
jne
adc
enter
ins
(bad)
sahf
sub
(bad)
dec
fcmovne
dec
pop
add
je
repnz
sbb
xchg
mov
or
outs
lods
sbb
enter
int
popa
push
(bad)
mov
and
jge
cmps
mov
mov
vpminsd
sar
inc
and
ficomp
lahf
mov
mov
dec
imul
pusha
dec
pop
adc
cmp
mov
cmp
pop
adc
loop
js
repz
cmp
mov
push
in
jae
not
dec
mov
xchg
icebp
rcr
adc
dec
sti
cmps
ins
adc
adc
sub
arpl
sub
inc
jbe
fsubr
repz
fld
mov
dec
add
sar
jl
dec
mov
push
and
in
jmp
jge
push
pop
xchg
std
lahf
shr
das
sub
aas
scas
mov
xor
jl
lea
or
(bad)
ss
les
bound
add
jmp
fprem
lock
pop
mov
push
outs
test
cmp
ftst
mov
push
clc
or
adc
pop
sahf
sbb
cmp
jno
sub
fld
mov
xchg
data16
pop
and
jge
mov
xlat
out
icebp
jmp
lds
add
mov
jp
mov
xchg
ins
in
ud0
mov
movs
mov
rcl
loop
scas
inc
iret
dec
in
outs
test
shl
add
mov
loopne
(bad)
pop
arpl
jmp
sbb
mov
dec
fs
scas
or
sbb
ins
xchg
adc
cmps
sub
std
or
mov
xchg
mov
ret
jns
cmc
push
mov
mov
or
jg
and
jp
sar
addr16
add
mov
add
inc
cmps
mov
pop
cmp
sbb
sub
fldenv
lds
movs
xchg
jo
rol
mov
xor
and
adc
cmc
movs
popa
out
div
xchg
mov
jno
mov
lea
inc
jae
sub
push
dec
or
scas
adc
outs
mov
and
aas
jno
ja
mov
mov
inc
inc
or
sar
dec
test
retf
cmps
push
cdq
data16
scas
movs
rol
je
popf
dec
fsub
std
add
imul
adc
xlat
push
hlt
jecxz
jecxz
das
out
pop
in
xchg
sub
and
jmp
jno
or
cld
outs
mov
pushf
fcompp
aam
outs
mov
js
adc
xlat
jge
fimul
rcl
xor
add
adc
imul
out
call
pop
das
mov
rol
scas
lods
cdq
xchg
(bad)
std
dec
add
jmp
jg
xor
add
test
xchg
mov
inc
not
cmc
mov
xchg
jmp
daa
dec
lock
repz
xchg
push
dec
call
mov
ins
aas
xchg
or
and
ret
imul
lea
nop
push
cmp
push
mov
fisttp
inc
sbb
movs
repz
and
push
lahf
aam
cwde
dec
jmp
pop
dec
cmp
jle
or
in
mov
test
and
sub
adc
inc
jno
and
cwde
sub
loop
xchg
xchg
adc
jmp
xchg
sbb
fmul
mov
adc
sbb
push
cwde
pop
sti
cmp
leave
xor
test
xchg
cmp
xor
lds
cdq
push
out
sti
(bad)
fnstenv
addr16
or
sub
stc
push
cmp
mov
aas
xor
cmp
mov
inc
clc
fadd
popa
pop
xadd
adc
mov
dec
adc
icebp
lock
dec
xor
jl
xor
push
xchg
or
out
lock
sbb
adc
jo
mov
sub
push
inc
push
pop
rcl
(bad)
stc
test
gs
ins
sub
inc
dec
ficom
mov
ins
push
and
out
mov
pop
xchg
add
sbb
and
mov
fdiv
movs
(bad)
push
pop
add
cmp
scas
fwait
scas
repnz
add
fsub
loop
aaa
fsubr
sahf
out
fld
mov
sbb
jp
cwde
in
jno
jge
xchg
sbb
and
iret
add
ret
xchg
mov
je
mov
call
out
aaa
push
leave
mov
adc
test
mul
ins
dec
add
adc
shl
aad
fwait
ror
addr16
stc
push
frstor
mov
pop
out
movs
lods
in
jno
(bad)
mov
adc
add
mov
fcomp
sbb
jnp
ficomp
mov
cmps
cld
test
aas
mov
inc
push
popa
cdq
xor
mov
xor
test
rol
dec
loop
inc
push
je
pop
loop
xchg
fbld
or
test
fs
outs
mov
pop
mov
fidiv
dec
std
mov
arpl
fild
ds
dec
not
call
push
add
and
int
cmps
xchg
jbe
pop
xchg
sub
retf
adc
fistp
sbb
loope
lahf
xor
jp
or
mov
ja
mov
adc
retf
shr
xchg
lods
clc
ret
outs
jae
push
xchg
(bad)
loopne
ss
repz
mov
ja
inc
adc
pop
mov
pop
inc
xor
jae
lods
pusha
lahf
aas
addr16
pop
mov
push
fbld
sti
retf
clc
cmp
(bad)
mov
mov
fst
inc
popa
xchg
into
scas
pop
imul
jge
mov
add
adc
mov
out
call
cmp
rcr
xor
stos
jae
fwait
ror
imul
cmp
call
cmps
cs
push
jmp
push
into
(bad)
pop
jg
jae
cs
mov
(bad)
xor
fmulp
jo
xor
shr
mov
xlat
sbb
es
icebp
jmp
in
clc
jmp
ins
lods
ror
call
mov
inc
mov
cmp
imul
les
mov
jo
jb
lds
cdq
daa
(bad)
jae
test
(bad)
cmps
and
out
repz
in
lods
mov
pop
mov
aaa
inc
fld
sub
shr
cmp
mov
in
arpl
(bad)
test
sub
retf
jp
retf
dec
pop
mov
xchg
or
xchg
sub
jmp
and
cmps
mov
xchg
cld
mov
lds
xor
xor
mov
push
push
(bad)
jle
mov
xor
pop
sbb
jbe
iret
xchg
call
cmps
(bad)
out
fisubr
adc
shr
shl
mov
cmp
cli
mov
icebp
scas
mov
fstp
retf
sti
inc
cdq
xor
dec
movs
cmc
mov
mov
xchg
fild
sbb
push
jbe
mov
xor
or
push
jmp
pop
ds
mul
xlat
icebp
cwde
aam
pusha
clc
bound
stc
fdiv
xchg
bound
mov
in
inc
push
adc
dec
mov
sub
lods
and
sar
sub
inc
std
das
pop
sbb
(bad)
sar
daa
inc
rcl
neg
add
(bad)
mov
pop
cmp
inc
movs
cld
add
loop
in
sub
fmul
dec
mov
cmc
ret
fcmovu
or
mov
repnz
stc
and
sub
aaa
(bad)
dec
int
aas
fstp
xchg
or
cmp
push
les
fld
xchg
push
jge
inc
mov
mov
scas
test
push
lea
mov
jne
push
jle
pop
sub
or
imul
add
mov
push
cld
jbe
aas
rcl
cld
adc
add
mul
fimul
movd
mov
fstp
inc
mov
popf
and
push
mov
idiv
lods
outs
sub
aas
jno
add
add
stc
push
add
inc
iret
jno
cmc
pop
jne
xlat
cmp
aad
fwait
loopne
push
sbb
das
arpl
out
in
clc
movs
jge
ins
out
sbb
data16
sbb
mov
and
inc
jmp
xchg
aad
dec
inc
pop
movs
cs
or
and
rol
arpl
icebp
aaa
scas
and
push
adc
xchg
mov
enter
mov
pop
jecxz
inc
imul
and
int
outs
outs
add
enter
jbe
cdq
push
xchg
mov
push
cmp
xor
dec
push
xor
loopne
cdq
mov
sub
cmp
loopne
test
jae
stos
lods
test
mov
jp
mov
movs
aas
mov
int3
mov
inc
pop
enter
ja
outs
and
jle
or
xchg
sbb
xor
mov
addr16
mov
add
add
xor
fcmove
out
xchg
xchg
lds
cmc
ret
mov
or
mov
dec
shr
pop
cld
cmc
(bad)
mov
inc
jge
adc
sbb
(bad)
mov
xor
xlat
test
xchg
sbb
in
rcr
aad
mov
pop
int3
stos
xchg
out
addr16
popa
push
cmp
into
xor
or
xchg
es
sub
mov
ret
sbb
and
push
dec
test
(bad)
mov
cli
lahf
push
outs
xchg
pop
mov
add
call
xor
jbe
lods
outs
sahf
fsin
in
and
(bad)
adc
sbb
push
pop
les
aaa
push
out
fcomp
or
xlat
mov
test
sub
cwde
neg
loopne
rol
mov
or
jecxz
push
test
jg
dec
aam
out
dec
lock
int3
push
shl
dec
pop
lahf
loop
sbb
out
fnstenv
fsubp
and
push
push
(bad)
mov
dec
sub
(bad)
stos
jmp
jge
mov
sbb
mov
sbb
retf
lods
jl
pop
dec
cli
mov
pop
test
icebp
hlt
pop
rol
sahf
test
lahf
mov
and
test
pop
push
mov
inc
ins
jmp
inc
scas
dec
jae
jbe
cmp
addr16
or
sbb
mov
iret
in
jno
outs
sub
in
dec
adc
call
mov
jo
je
and
jbe
popf
aaa
inc
sbb
mov
mov
mov
pushf
push
add
popa
sbb
inc
dec
out
and
jbe
inc
cmc
mov
pop
aas
scas
or
aad
cmc
and
xor
popf
or
nop
cmp
sbb
sub
cmp
nop
scas
inc
jbe
loopne
arpl
push
fs
ret
mov
sub
adc
(bad)
mov
or
mov
mov
div
dec
or
pusha
push
add
cmp
push
sub
cdq
jge
sub
pop
int3
test
fbstp
xlat
sub
adc
push
cli
or
not
sub
lea
xchg
repz
mov
ror
mov
jne
icebp
inc
cs
das
add
in
mov
in
jae
xor
xchg
lods
scas
xchg
mov
out
mov
pop
aad
xchg
outs
cwde
das
std
je
(bad)
bound
mov
pop
add
into
test
lahf
jne
retf
iret
arpl
mov
je
cmp
out
push
add
stos
test
(bad)
bound
cmp
mov
lock
xchg
xor
(bad)
into
inc
mov
mov
pop
ins
jbe
mov
inc
in
jno
jg
mul
addr16
imul
adc
pop
dec
fsubr
inc
(bad)
adc
cmps
push
mov
loop
clc
into
aad
inc
mov
(bad)
adc
mov
inc
test
test
push
icebp
aas
mov
and
mov
xor
cmp
jg
push
mov
sti
pop
out
gs
sub
cld
int
cmp
xchg
ret
scas
sbb
xchg
add
cdq
and
in
icebp
and
and
push
pop
jns
nop
add
pop
test
dec
sub
mov
lods
mov
xchg
and
cmp
push
js
sbb
aas
xchg
js
add
inc
fcomp
mov
cmps
lods
js
sbb
ja
jne
imul
bound
int3
add
jno
mov
add
add
xor
outs
call
cmp
dec
and
push
int
sub
push
mov
sub
mov
jae
not
(bad)
cmp
pusha
imul
mov
out
lds
adc
sub
cld
xor
inc
cmp
add
lds
fxch
sbb
mov
jmp
(bad)
adc
inc
mov
bound
add
retf
jnp
lods
add
mov
cmp
pop
sub
mov
lock
push
out
arpl
pop
in
les
mov
or
mov
sbb
xchg
in
cld
movs
add
(bad)
daa
jbe
cmp
fdivr
cmc
or
jbe
mov
and
lahf
xchg
in
mov
out
add
inc
call
pusha
(bad)
into
dec
inc
scas
sbb
in
dec
pop
daa
add
mov
cli
icebp
das
push
jmp
std
shl
fdivr
xchg
sub
dec
movs
push
(bad)
lock
fsub
sbb
lea
gs
jecxz
xlat
shr
bound
sahf
adc
mov
stos
test
xor
in
jbe
and
js
xchg
cmc
shr
enter
sbb
outs
pop
cld
or
imul
cmp
mov
mov
mov
cmp
lds
dec
jb
fisttp
pop
jmp
les
push
dec
inc
stos
and
leave
push
push
add
lock
call
loopne
dec
mov
or
pop
dec
out
add
jmp
xchg
call
mov
mov
sbb
jmp
pop
sbb
cli
dec
shl
aaa
out
in
jno
or
cmp
mov
cld
aas
mov
push
cli
loopne
jae
pop
in
cmc
sub
leave
cmp
retf
inc
hlt
push
(bad)
aaa
test
scas
dec
xchg
inc
mov
mov
cmp
stos
xchg
pop
sti
inc
pushf
aam
jmp
pop
jecxz
clc
test
retf
xchg
pop
inc
lods
imul
and
test
fisttp
mov
xchg
stos
mov
push
cmp
je
add
mov
jnp
mov
jle
imul
push
xchg
fcom
in
movs
cmp
dec
pop
push
cmps
jg
pop
mov
mov
pushf
or
movs
(bad)
outs
and
push
xchg
mov
repnz
and
pop
aaa
int3
lea
mov
or
test
jge
mov
dec
fsubp
or
out
test
inc
xor
xchg
mov
jg
xor
sbb
cli
sbb
jns
movs
mov
shr
xchg
dec
pop
push
mov
xor
inc
sub
push
fs
adc
mov
int3
(bad)
add
mov
xor
cdq
dec
adc
jo
sub
mov
nop
gs
loop
or
ror
mov
scas
(bad)
in
scas
sbb
inc
(bad)
fsubr
mov
add
pop
and
push
pop
ins
movs
xchg
mov
fbstp
repnz
rol
loop
push
cdq
les
mov
into
je
inc
xor
inc
mov
stos
cmp
dec
sbb
pop
mov
dec
jne
fidiv
sti
pop
mov
call
mov
cmp
(bad)
lock
movs
data16
cmps
sub
(bad)
vcvtpd2dq
jo
mov
out
in
test
ins
in
imul
jge
int3
vpmacssdd
cmp
jo
bound
cmp
fdivr
test
cmp
sub
and
(bad)
pusha
push
mov
in
or
adc
(bad)
aam
ss
mov
jnp
ins
push
push
repnz
jl
mov
sub
jecxz
mov
ja
std
add
arpl
jo
out
xor
add
sub
jge
test
xor
mov
jge
jmp
into
dec
sub
jp
lods
inc
fwait
adc
push
pushf
xchg
cmp
xchg
xchg
pop
rol
add
jp
mov
enter
mov
into
xchg
enter
jae
daa
pop
ds
mov
and
fld
and
cmp
cdq
std
add
push
data16
mov
neg
imul
sbb
mov
push
icebp
sti
mov
sub
(bad)
ret
cmp
sbb
je
adc
sub
rol
inc
outs
pop
mov
mov
scas
jnp
adc
mov
std
pop
add
inc
sti
sub
adc
je
cmps
repnz
clc
js
movs
inc
pop
push
mov
icebp
cmp
outs
outs
pop
adc
jle
imul
dec
sbb
loop
test
push
repz
imul
mov
push
retf
jbe
dec
fist
xchg
mov
mov
cwde
dec
call
icebp
lock
test
push
inc
mov
test
imul
mov
pusha
xlat
pop
cmp
xor
jmp
push
and
rol
inc
mov
es
push
sub
je
xchg
cli
aad
les
stc
stos
pop
cmps
dec
sbb
xlat
mov
dec
cmp
ss
add
jo
adc
inc
call
das
inc
pop
stos
push
mov
add
shr
cdq
cmp
sub
or
(bad)
test
mov
jge
into
inc
pop
cwde
mov
repnz
cmp
xor
ss
pushf
clc
adc
jle
ss
lea
inc
mov
dec
pop
aas
xor
dec
(bad)
jns
xor
xchg
mov
or
pop
scas
int3
mov
test
aad
sub
pop
neg
mov
push
add
lahf
sub
sub
div
test
addr16
fstp
sub
xchg
cld
adc
push
(bad)
jge
shr
push
bound
push
ins
inc
test
xchg
add
movs
and
sbb
movs
test
cmp
mov
mov
sbb
iret
sti
pop
mov
add
fdiv
out
sahf
out
aam
(bad)
mov
mov
inc
adc
pop
test
mov
and
ds
inc
cmp
push
xchg
add
(bad)
mov
pop
xor
xor
xlat
push
push
adc
dec
mov
inc
stos
sub
adc
or
adc
mov
rol
dec
jmp
pop
mov
and
add
xlat
jp
scas
cs
push
or
clc
add
jae
inc
or
mov
lea
iret
ja
call
into
xchg
jmp
(bad)
or
xchg
mov
sbb
mov
fs
js
loope
leave
mov
dec
outs
mov
ficom
mov
shl
call
in
in
mov
aaa
jno
pop
(bad)
cli
push
mov
scas
sbb
jnp
(bad)
enter
adc
sub
lods
pushf
ins
mov
inc
out
lods
push
pop
shl
lds
sbb
stc
adc
popa
ret
cld
mov
hlt
je
cmc
inc
pushf
fdivrp
cmps
pop
cmp
mov
adc
aad
ret
dec
out
mov
add
into
js
and
mov
push
jg
xchg
sti
in
adc
jo
cmp
jae
scas
inc
jb
mov
es
mov
sar
loop
test
add
jno
xchg
lods
fld
cmp
addr16
cld
inc
and
mov
xor
sub
fs
repz
lea
ret
stos
mov
adc
xor
loop
jl
(bad)
(bad)
outs
sahf
push
data16
mov
sub
xchg
cmps
mov
add
movs
sub
fist
(bad)
cmp
mov
mov
sub
leave
rol
sbb
mov
int3
test
cmp
enter
jb
push
add
jns
fwait
les
jmp
adc
popf
cmp
dec
test
mov
in
pop
into
icebp
shl
cmp
inc
mov
xchg
(bad)
mov
push
ss
jbe
(bad)
xor
or
cmp
inc
js
(bad)
mov
int3
mov
cmp
addr16
out
nop
stos
jae
push
sbb
enter
aas
dec
mov
sub
in
in
(bad)
imul
jp
cmp
call
in
aaa
xor
push
scas
cmp
or
movs
xchg
lods
add
js
enter
xor
add
sub
in
(bad)
(bad)
outs
hlt
add
std
test
xor
pop
mov
mov
(bad)
icebp
pop
jmp
in
call
retf
and
iret
fisubr
iret
mov
xor
xor
jmp
repz
mov
ins
loope
or
addr16
cli
xor
jecxz
xchg
or
mov
mov
test
mov
(bad)
mov
and
pop
mov
jnp
xchg
out
test
jecxz
pop
mov
xchg
push
cs
out
adc
in
xchg
mov
fisubr
sbb
and
nop
mov
sub
and
out
lock
add
neg
scas
js
ja
mov
mov
loopne
inc
lea
pop
jnp
xlat
ficom
add
dec
inc
xchg
dec
xchg
adc
ins
xchg
bound
inc
loope
add
test
xor
push
sbb
push
xchg
add
xchg
push
inc
pop
jge
add
inc
adc
gs
add
loopne
fsub
int
cmp
sub
push
lea
add
jl
add
fld
jecxz
movs
xor
xchg
ret
jg
int3
(bad)
(bad)
fnstcw
enter
push
mov
jp
stos
aas
inc
repz
xchg
repnz
xor
push
popf
push
dec
push
imul
ins
addr16
mov
in
jo
mov
sub
sbb
aas
addr16
fld
div
xor
rcr
clc
add
out
test
or
push
cld
pop
push
repnz
clc
pop
stc
lahf
xchg
addr16
jo
jno
out
enter
out
inc
push
xchg
sar
mov
dec
xor
das
icebp
cmps
test
xor
or
mov
push
fsub
mov
xchg
xor
xor
loop
mov
(bad)
call
sar
fld
loop
loop
pusha
repnz
in
loopne
jns
add
mov
in
xchg
in
test
cdq
cld
sub
in
adc
inc
adc
fld
and
push
fnstenv
dec
jmp
cmp
les
add
aas
xchg
mul
mov
ja
adc
mov
aad
sbb
xor
js
pop
adc
jmp
push
sub
add
pop
mov
daa
dec
sbb
outs
push
pop
or
sbb
fs
sar
add
imul
push
icebp
nop
pop
add
call
add
cmp
rcl
out
dec
mov
jnp
inc
loope
fstp
retf
inc
or
ins
sar
jb
sahf
push
cdq
std
repnz
mov
mov
imul
fsub
mov
icebp
mov
addr16
cmc
and
push
mov
sahf
and
icebp
icebp
sub
scas
push
xchg
add
cli
ror
push
addr16
inc
adc
(bad)
inc
inc
mov
pusha
imul
js
cmps
loopne
sbb
mov
dec
movs
xchg
popf
(bad)
mov
out
inc
pop
(bad)
jb
repz
bound
shr
cmc
push
fcomp
les
cli
outs
nop
jns
dec
dec
xlat
jmp
sbb
popf
(bad)
xrelease
les
or
retf
sub
cdq
in
nop
push
xor
dec
stos
dec
std
mov
inc
ins
pop
popa
bound
loope
inc
push
lock
pusha
lods
lods
stos
sbb
call
cmp
dec
mov
cmps
icebp
mov
fst
sti
(bad)
call
xchg
mov
jne
into
jmp
and
mov
pop
btr
js
out
or
xchg
or
aad
movs
sub
jb
ja
stos
sub
xor
mov
sub
push
cvtpi2ps
es
mov
repz
mov
jmp
jmp
cwde
jl
jmp
jmp
(bad)
cli
xchg
jb
in
enter
mov
cld
sub
mov
push
rol
aaa
shr
clc
movs
mov
fidiv
ror
dec
pop
sbb
out
mov
xor
mov
mov
iret
movs
push
xchg
outs
fidivr
(bad)
out
pop
daa
movs
das
mov
ds
and
or
fild
sub
test
movs
xchg
imul
cmp
sub
sahf
mov
data16
jb
shl
jp
xlat
into
adc
(bad)
lods
xchg
mov
mov
sbb
out
or
loopne
popf
cmp
jge
clc
and
inc
xchg
js
dec
int
lods
pop
test
inc
repz
retf
mov
mov
ins
sbb
or
test
lahf
jb
pusha
out
pop
sahf
mov
inc
imul
mov
shr
gs
cs
cs
xchg
out
ja
pop
mov
call
aas
stos
mov
aad
das
cmp
(bad)
xchg
add
dec
int
out
das
sub
sbb
mov
leave
xchg
pushf
jmp
test
mov
mov
outs
imul
xor
ja
sub
xor
cli
lods
sbb
sahf
cs
xor
imul
jl
inc
mov
in
xor
cmc
or
shl
and
sub
data16
std
xor
mov
sbb
push
scas
mov
jmp
push
dec
sbb
add
iret
cmps
jl
sub
push
cs
aas
xchg
xchg
jmp
jb
xchg
ret
cmp
cmp
push
xchg
adc
imul
mov
jbe
mov
mov
es
stos
das
add
les
popa
gs
dec
(bad)
or
ret
add
inc
xlat
cwde
and
mov
add
adc
sub
jne
sbb
cwde
scas
inc
(bad)
and
fs
test
add
push
imul
adc
and
pop
pop
inc
shl
or
dec
push
int3
lds
mov
and
dec
cli
loope
pop
jg
mov
push
mov
mov
mov
mov
in
dec
mov
or
popf
xor
fs
mov
mov
sbb
inc
cmp
push
mov
fsubr
outs
fwait
xor
fwait
jecxz
and
aas
cmps
mov
and
pop
inc
or
sub
aam
add
in
mov
inc
pop
jno
xchg
clc
imul
sub
jp
or
or
push
cld
lods
xchg
stos
or
lods
int
sub
popf
and
xchg
mov
jb
mov
ret
inc
dec
add
and
pop
xlat
mov
arpl
xchg
adc
push
fisubr
jp
pop
mov
push
or
add
test
loopne
mov
test
cld
retf
mov
pop
hlt
jge
xor
add
rcr
mov
es
(bad)
inc
(bad)
cdq
mov
mov
jmp
sbb
lods
fadd
xchg
jl
daa
sbb
pop
scas
js
jmp
sub
mov
cmp
lock
jno
out
repnz
pop
dec
xlat
lahf
enter
das
shl
cmp
push
inc
ss
mov
mov
fcom
and
or
and
inc
js
sub
sbb
dec
inc
sbb
aaa
ja
aas
mov
mov
cmp
cmp
div
loope
push
sub
in
mov
or
add
dec
mov
outs
sbb
fimul
sub
out
es
push
and
and
cli
aas
jle
pusha
jle
arpl
mov
dec
ss
or
jl
repz
pop
out
sbb
lock
push
sar
dec
mov
test
xchg
ds
add
adc
(bad)
inc
(bad)
call
(bad)
ror
pop
shr
dec
ds
xchg
test
sbb
lea
adc
and
adc
je
inc
pop
jp
movs
dec
inc
pop
pop
out
lea
xor
shl
outs
das
lods
cmp
inc
dec
loop
addr16
data16
arpl
xchg
(bad)
cmp
test
xchg
and
outs
jae
xlat
add
cmp
ds
pop
call
lds
inc
in
(bad)
out
jno
mov
push
xchg
adc
nop
mov
add
xor
ror
int3
dec
fwait
jo
mov
leave
inc
sti
sbb
mov
mov
outs
shr
pop
jle
aaa
dec
sahf
cdq
cld
inc
mov
or
xor
jne
mov
adc
test
test
add
and
(bad)
jmp
out
or
stc
cmp
(bad)
mov
pop
adc
cld
push
(bad)
sbb
push
stos
mov
push
inc
js
movs
pop
aas
scas
sbb
fild
xchg
pop
fidiv
inc
jo
std
mov
loop
ficomp
test
inc
lods
ins
loope
jnp
outs
dec
lods
ss
inc
sbb
xchg
addr16
js
call
aad
retf
mov
outs
stc
test
pop
pop
xchg
test
cmp
adc
push
add
sbb
rol
jns
jecxz
bnd
pop
mov
ficomp
(bad)
fbstp
test
and
or
push
test
(bad)
jg
xor
or
or
dec
jl
fist
mov
lods
loope
icebp
test
fs
dec
add
loope
sahf
dec
(bad)
jo
sti
xlat
sub
pop
push
dec
dec
in
gs
push
enter
pop
pop
xor
and
aaa
bound
lea
pop
loopne
cmp
inc
jbe
out
jmp
xchg
(bad)
mov
mov
lods
ins
movs
ret
movs
ins
add
pop
jae
pop
stos
add
retf
pop
pop
push
dec
std
push
or
or
cmps
add
mov
stc
nop
mov
jno
out
pop
push
push
or
imul
sub
dec
xchg
test
leave
bound
pop
scas
and
in
mov
ins
push
mov
ins
mov
cmp
mov
lahf
or
ins
push
in
push
or
lahf
pop
dec
(bad)
pop
pop
inc
push
(bad)
outs
mov
pop
test
scas
add
xor
movs
popa
shl
mov
test
out
mov
sbb
add
and
(bad)
push
pop
inc
jecxz
cld
add
arpl
movs
sar
call
(bad)
pop
jmp
xchg
cmp
add
je
movs
shr
mov
loopne
(bad)
cs
xor
or
sub
jp
mov
and
mov
xchg
push
mov
outs
sbb
cmps
pop
push
sti
jmp
arpl
call
mov
adc
sub
ret
mov
add
xor
fs
lods
test
imul
lea
cmps
iret
pop
test
enter
jg
les
and
sbb
mov
cs
xchg
lods
and
cwde
pop
movs
popf
lods
test
cmp
push
shl
adc
out
and
cmp
clc
pop
lea
push
mov
mov
xor
int
mov
nop
mov
dec
mov
dec
iret
cmp
mov
cmp
pop
test
pop
sahf
dec
mov
call
pop
inc
call
dec
pop
push
idiv
ficom
sub
gs
cmp
ds
ret
sbb
cmp
jge
dec
cwde
test
xchg
sbb
jns
retf
or
push
mov
out
push
ins
cmp
ds
mov
pusha
icebp
or
sub
loop
repz
shl
retf
hlt
adc
cmps
inc
mov
mov
ret
stos
sti
sbb
ret
sub
and
pop
cmps
inc
inc
push
es
ret
out
push
sar
je
lock
fdivr
cmps
popa
jmp
adc
(bad)
and
ja
xchg
adc
dec
ja
push
call
or
inc
hlt
xchg
loope
mov
or
call
push
mov
jmp
push
inc
sbb
sbb
mov
or
outs
pop
and
stos
shl
jmp
and
mov
xlat
jecxz
jmp
outs
push
cmp
add
es
inc
pop
mov
shl
stos
fwait
imul
in
sbb
add
cmp
jmp
pop
sbb
cld
mov
or
jb
(bad)
(bad)
fld
xor
push
xor
push
pop
pop
cmps
daa
push
xor
mov
xchg
adc
push
inc
mov
cld
push
sub
lea
jno
sti
jl
push
(bad)
sar
sub
repnz
js
retf
cmp
cli
adc
lds
fdiv
(bad)
das
loope
inc
test
mov
cdq
(bad)
mov
and
loope
fisttp
fiadd
mov
imul
fld
sub
lods
dec
icebp
and
pop
(bad)
(bad)
outs
cmp
(bad)
xchg
popf
sub
js
jnp
enter
pop
pushf
mov
mov
push
and
or
stos
mov
fld
je
push
cmp
sbb
dec
les
pop
adc
push
xor
sti
cmps
aaa
lods
xchg
xchg
push
mov
aad
push
push
mov
ss
xchg
sar
cmp
cmp
adc
retf
stos
pop
sbb
mov
es
ins
ror
jns
ror
and
fs
mov
pop
jne
jle
fstp
mov
add
call
ret
retf
sbb
xor
mov
and
imul
cs
lock
adc
mov
ret
xlat
mov
mov
sahf
push
push
jae
out
xchg
mov
dec
sub
add
pop
xor
pop
xchg
dec
jg
mov
cmp
jge
mov
push
adc
dec
inc
xchg
fadd
pop
fs
jmp
outs
stc
leave
xor
ja
jbe
push
jge
jle
ja
cmc
adc
jp
pushaw
sti
or
gs
or
icebp
jno
pop
mov
mov
push
dec
vpackuswb
mov
cmp
mov
in
scas
mov
aam
jmp
popf
ficom
dec
mov
and
jecxz
sub
mov
xlat
mov
or
jmp
push
outs
loope
mov
(bad)
jno
fist
loop
adc
ss
inc
pop
mov
add
in
repz
xor
jno
scas
mov
pop
in
jmp
add
and
sbb
add
inc
adc
dec
call
in
and
and
add
cmc
call
push
mov
(bad)
not
in
outs
stc
mov
popf
das
fs
xor
xchg
sti
push
gs
jbe
push
or
xchg
leave
sub
leave
sahf
ret
and
test
push
cmp
jns
aaa
test
bound
mov
mov
test
int
cmp
scas
clc
push
cld
cmp
outs
inc
push
lea
sahf
mov
cmps
push
movs
cmps
cmp
and
push
jecxz
shl
pop
cwde
sbb
pop
in
mov
fmul
push
ins
pavgw
dec
setns
mov
mov
xchg
pop
cwde
add
mov
test
addr16
mov
mov
sti
neg
retf
out
dec
fmul
test
test
dec
test
mov
add
pop
mov
mov
cli
faddp
inc
xchg
cwde
inc
xchg
adc
sahf
sub
jae
mov
cmc
cmc
pop
or
imul
jno
ret
pusha
das
js
cmp
push
jge
add
xchg
cmp
into
jno
enter
daa
and
xchg
add
fst
mov
mov
mov
lock
add
shr
or
jo
mov
adc
outs
adc
sbb
aam
dec
lods
cmp
retf
hlt
mov
jnp
pop
cli
pop
(bad)
lock
aad
pop
cmc
pop
sar
pop
mov
jecxz
aaa
loope
icebp
pop
pop
mov
cmp
and
xchg
xlat
popa
or
(bad)
inc
mov
movs
xor
add
jg
ret
out
inc
mov
sahf
ins
and
pop
ror
cmp
addr16
out
icebp
fsub
cmp
jbe
xor
xor
call
lds
mov
jne
arpl
push
ins
jecxz
(bad)
shr
daa
in
jl
cmps
adc
pop
and
mov
push
sub
push
fs
nop
cmp
ror
add
js
sub
jge
xchg
aas
dec
and
cld
mov
push
call
xchg
div
out
addr16
fwait
das
clc
and
pop
push
loope
addr16
mov
jae
and
xor
sub
mov
or
jmp
sti
inc
inc
dec
aas
loope
jecxz
out
xor
in
mov
shl
or
es
stc
push
nop
std
adc
add
ja
xchg
xchg
dec
xor
cmp
(bad)
mov
adc
stc
loop
fs
xor
into
mov
pop
and
add
cmps
dec
xchg
sub
jg
mov
and
bound
cmp
lea
cmp
jno
pop
scas
add
sub
jmp
ins
cmc
mov
lahf
pop
shl
or
xor
bts
ficom
rcr
xor
std
jmp
fadd
popa
mov
jmp
aaa
repnz
xchg
jno
or
cdq
cmp
call
xlat
or
shl
mov
sbb
in
(bad)
mov
inc
in
sbb
sub
push
cdq
int
inc
inc
mov
fs
xchg
or
mov
lds
loopne
cmps
sbb
lock
int
adc
add
pop
adc
int
cli
pop
fwait
mov
popa
xor
pop
pop
jp
imul
mov
sub
push
add
sti
iret
aas
out
lock
cmp
pop
(bad)
add
ficomp
adc
or
fsubrp
dec
xor
dec
mov
jge
ret
sbb
(bad)
lahf
jns
xor
cwde
loopne
mov
lods
jl
jge
sub
int
jl
jae
push
(bad)
(bad)
or
cmc
jl
mov
jbe
retf
sbb
es
mov
cmp
icebp
jp
or
test
sahf
add
sub
xor
xchg
or
fwait
sbb
fimul
icebp
sbb
mov
push
xor
pop
sub
mov
out
aas
dec
or
xor
(bad)
in
jo
push
mov
inc
mov
pop
xchg
cmp
js
xchg
xor
mov
xor
call
movs
push
ret
push
ins
rcr
call
push
inc
sbb
jg
sub
xor
sub
out
inc
jmp
mov
xchg
loope
test
push
add
pushf
mov
inc
cmp
ret
cmp
cmp
sub
pop
cld
movs
retf
mov
push
stos
pop
les
loopne
ret
in
retf
lea
movs
stos
push
xchg
xchg
and
repnz
and
mov
outs
xchg
push
cmp
mov
out
cvttps2pi
mov
seta
shl
jbe
cmp
cmp
iret
cli
pop
pop
cdq
push
push
popa
not
sub
xchg
mov
addr16
dec
ds
inc
call
mov
mov
pop
mov
mov
pop
push
mov
call
pushf
mov
repz
movs
push
icebp
mov
push
je
add
outs
lods
xor
retf
das
rcr
jnp
push
jbe
jo
retf
pop
lock
movs
rol
test
fist
mov
sbb
fnstcw
mov
test
add
push
or
cs
push
jmp
mov
arpl
xor
mov
ror
pop
nop
je
lock
sub
xchg
or
lods
in
mov
test
out
idiv
xor
test
cwde
inc
(bad)
std
movs
fdiv
vmovddup
shl
dec
xor
into
in
retf
in
or
test
or
jl
scas
aas
and
xchg
rol
dec
enter
ja
cmc
push
and
jne
in
out
ret
in
inc
jmp
idiv
mov
test
xchg
jbe
pop
jnp
adc
aad
pop
imul
outs
sar
add
jmp
or
scas
cdq
fdivr
sub
sub
es
movs
xchg
pop
mov
inc
test
pushf
push
outs
mov
push
mov
bound
ffree
jmp
sti
pushf
movs
jno
scas
lods
inc
sbb
xlat
fisubr
je
and
sbb
push
pop
(bad)
adc
lahf
arpl
pmullw
(bad)
stos
xor
xor
mov
(bad)
and
dec
jecxz
in
pop
cmp
test
cli
mov
adc
aaa
cmp
push
ficom
in
imul
xor
xor
scas
inc
ja
call
sub
dec
adc
mov
cmp
out
popa
or
outs
cdq
xor
xchg
pop
sub
(bad)
not
ror
test
and
outs
test
mov
dec
scas
sbb
dec
mov
or
leave
push
sub
push
test
and
loopne
sbb
xor
inc
arpl
mov
stos
xchg
in
add
scas
or
int3
pop
repz
xlat
shl
xchg
jns
cmps
push
xchg
call
fcom
iret
lods
sbb
xchg
add
pop
idiv
mov
sub
sbb
mov
jnp
push
ins
mov
arpl
cdq
dec
xchg
sub
jl
sbb
push
loope
test
ret
shl
jge
sbb
aam
hlt
sub
mov
jne
mov
add
xchg
fwait
xor
cdq
adc
out
imul
cmp
lods
jle
jmp
arpl
jae
cdq
sbb
pop
std
mov
and
neg
add
lods
jmp
in
sub
sbb
fs
stc
addr16
adc
ds
je
push
popa
mov
cmps
dec
(bad)
mov
lods
daa
xchg
not
add
inc
jo
(bad)
fist
ret
mov
dec
jno
aad
or
mov
test
jbe
jo
cmp
jp
jge
inc
shl
ret
ja
and
jmp
jns
adc
loop
aam
mov
cwde
retf
fwait
cli
dec
data16
mov
adc
cmp
push
pop
neg
int3
loope
jno
ret
jne
mov
sbb
scas
push
mov
mov
mov
(bad)
imul
je
push
mov
imul
xor
dec
dec
arpl
int3
in
push
sub
lahf
stos
push
ror
mov
ja
stc
sub
or
sbb
aad
jns
and
gs
nop
push
ja
ficom
sub
cld
push
pop
adc
push
out
in
sbb
aam
cdq
mov
out
sub
mov
or
xor
xchg
clc
loop
mov
cmp
ret
ja
(bad)
(bad)
lock
inc
enter
mov
imul
add
xchg
cmps
dec
ins
sub
mov
addr16
dec
sbb
mov
mov
add
sub
sub
sbb
in
lods
sahf
xchg
lods
xor
jecxz
inc
sbb
cmc
ins
mov
add
sub
mov
or
out
or
mov
loope
jle
in
xor
sub
cmp
aas
std
ret
test
mov
lds
mov
(bad)
adc
add
jo
sbb
jl
in
xor
lock
xchg
mov
and
jmp
push
cmc
ds
jne
xchg
xor
inc
xchg
mov
dec
push
pop
dec
adc
int3
mov
cdq
dec
pop
(bad)
jnp
in
fist
repz
mov
push
lods
(bad)
cmovo
add
rep
or
sub
xor
push
cwde
lock
inc
cli
mov
cld
jp
je
dec
dec
sbb
cmp
clc
jmp
fst
push
cdq
xlat
push
fs
sub
and
ret
cmps
pushf
xchg
push
jo
jne
outs
jo
inc
mov
lods
inc
jl
dec
fcmovnb
popa
ss
jbe
xchg
js
inc
xor
pop
cmp
cmp
and
cld
movs
and
jnp
enter
xor
xchg
test
sbb
pop
movs
js
and
out
mov
(bad)
call
je
cmp
ss
(bad)
mul
lods
dec
push
sbb
test
lahf
popa
sub
push
imul
or
ds
out
cld
add
mov
pop
jle
cmp
ins
jmp
jg
push
mov
cmps
pushf
cmps
push
jo
cmc
data16
aas
lea
inc
out
jecxz
enter
xor
or
xor
lea
retf
hlt
pop
xor
add
je
fisubr
leave
sbb
cmp
inc
iret
mov
mov
loopne
mov
lds
stc
pop
outs
fmul
js
mov
and
call
jo
addr16
iret
ror
sar
jp
(bad)
aad
scas
scas
ror
das
add
pusha
adc
and
js
or
jne
in
icebp
int3
mov
sub
or
stc
jns
xor
ja
jmp
or
jmp
xchg
lea
push
les
int
mov
xlat
call
lds
js
cmps
sbb
or
aad
les
loop
jg
scas
in
fucomip
mov
sbb
add
cmp
jbe
add
data16
pop
(bad)
mov
fild
int
push
cmc
stos
es
dec
sbb
xor
arpl
xchg
dec
xor
mov
xchg
add
adc
sub
adc
lods
pop
push
pop
mov
call
test
rcr
and
cmps
mov
push
pop
les
inc
and
repz
jnp
jae
ins
xor
xchg
adc
xchg
lods
fcomi
setne
ret
enter
sub
jae
cmc
or
xchg
mov
add
inc
pop
xor
out
(bad)
dec
xlat
adc
xchg
pop
stos
(bad)
clc
mov
and
fwait
out
outs
push
sub
sbb
ds
cmp
ror
outs
mov
div
jg
add
mov
sbb
adc
data16
dec
fs
pop
jmp
and
cwde
lea
(bad)
sbb
jbe
sub
xor
or
hlt
movs
push
push
xor
gs
cmp
mov
push
pushf
adc
dec
outs
shr
cmp
jno
push
and
js
scas
dec
ins
cli
lds
mov
jmp
addr16
sar
enter
pop
jnp
std
ficomp
or
xchg
jb
dec
xor
mov
inc
bound
cwde
fs
aam
pop
jle
data16
dec
add
mov
jb
or
fwait
xchg
test
dec
cmp
int3
jl
in
mov
mov
mov
push
(bad)
clc
mov
or
movs
mov
inc
push
pop
lods
push
mov
or
loope
retf
fidivr
sbb
cwde
mov
shl
push
repz
cmps
test
out
sub
cmps
mov
jle
mov
xor
outs
xchg
jp
stc
xor
call
add
ds
nop
movs
dec
xchg
push
bound
dec
fnstenv
(bad)
gs
lock
sub
loopne
arpl
inc
or
mov
pusha
mov
retf
pop
fwait
lods
push
addr16
in
dec
in
loop
xor
pop
cld
sub
jns
out
std
cmp
mov
sbb
ins
test
leave
ja
push
mov
mov
std
test
sar
aaa
call
cli
les
ins
pop
ja
stos
push
pop
cmp
cmp
mov
jno
adc
outs
imul
jb
jno
std
xchg
mov
jmp
mov
pushf
xchg
cmps
or
lahf
jno
fmul
fldenv
mov
mov
into
adc
push
mov
jmp
cdq
ins
pop
cwde
inc
call
jecxz
cmp
jl
aad
add
in
pop
clc
sbb
gs
sub
jae
jae
sar
js
inc
mov
xchg
sub
xchg
outs
or
in
mov
dec
xchg
ss
iret
dec
sbb
aaa
shl
call
ds
push
aas
into
xor
inc
fs
mov
ror
in
sub
xor
sbb
mov
addr16
out
pop
adc
push
lds
shr
dec
aam
jmp
das
fcmove
push
outs
sub
xchg
aas
inc
jae
outs
jmp
mov
(bad)
jg
(bad)
call
gs
pop
int
cmp
out
mov
outs
mov
jmp
cmc
dec
pop
or
cdq
retf
inc
shl
add
repnz
mov
and
mov
xchg
adc
add
shl
xor
jno
in
xchg
hlt
jns
psllw
xor
cmp
test
icebp
cmc
cdq
add
std
inc
inc
mov
push
sub
mov
cmp
or
retf
lods
fs
ins
fdiv
ja
and
mov
leave
jne
sub
call
les
xor
pop
xchg
push
outs
push
inc
dec
repz
mov
inc
lock
add
cmp
and
and
push
mov
jmp
sahf
nop
shl
in
ror
sub
push
leave
adc
pop
push
out
div
lods
inc
jmp
aaa
gs
xchg
add
lea
je
(bad)
fidivr
mov
movs
(bad)
iret
ror
js
in
jl
inc
fdiv
inc
adc
call
gs
aad
repz
ins
nop
dec
(bad)
or
dec
ds
push
jns
push
ret
and
pop
cmp
lea
not
ins
mov
in
mov
or
loopne
sub
aam
int3
cli
cli
jbe
dec
out
cmp
rcr
jae
xchg
xor
pop
xchg
jb
rcr
inc
sbb
fadd
arpl
inc
jnp
ds
cmps
jl
mov
imul
cmp
jae
inc
out
popa
fs
shl
punpcklwd
jecxz
sbb
or
mov
icebp
adc
pusha
inc
shl
fist
rol
inc
arpl
and
enter
cmps
sbb
test
in
scas
add
into
cmc
sbb
sar
push
ins
push
push
cli
mov
sbb
or
pop
jo
and
sar
scas
and
(bad)
jnp
mov
ins
dec
hlt
xor
pop
and
shr
jno
fimul
sub
pop
xor
xchg
push
cld
lods
cdq
inc
cmp
imul
and
lahf
ret
dec
out
pop
mov
xor
loopne
xchg
ss
mov
inc
add
icebp
push
fmulp
fs
dec
or
test
lock
dec
out
in
inc
sub
movs
out
cld
movs
into
mov
cmp
push
and
(bad)
adc
aaa
jl
cmp
sbb
iret
dec
ins
inc
add
(bad)
mov
hlt
mov
or
xchg
cmp
je
and
push
lea
xchg
cmp
xchg
add
ror
cwde
fs
cs
sub
mov
js
inc
fsubr
pop
mov
mov
es
pop
popf
hlt
mov
or
rcr
cmp
cli
mov
jbe
mul
mov
pop
cmp
mov
mov
or
fcomp
movs
sahf
mov
add
pop
rcr
(bad)
fucomip
cs
ins
stc
in
jge
imul
xor
sub
xchg
stos
mov
dec
jne
push
popa
icebp
out
jno
js
div
out
pushf
cld
pop
fsubr
add
rdmsr
inc
mov
xchg
push
mov
cmp
fisub
inc
jl
dec
daa
ret
lods
in
xchg
dec
push
gs
pushf
test
mov
add
ins
into
mul
sbb
daa
xor
cld
scas
pop
icebp
xor
fwait
xchg
fs
pop
cmp
lock
shl
mov
ins
ds
addr16
ret
retf
or
push
in
mov
les
pop
pushf
add
call
or
mov
adc
xchg
fmul
push
or
sub
xor
lds
cmps
fucomi
jge
push
icebp
idiv
push
sub
fwait
jne
and
ja
daa
xchg
call
das
dec
adc
lods
mov
(bad)
loope
fsub
mov
repnz
fiadd
add
add
pushf
fs
aam
retf
jb
pusha
jmp
jmp
into
setg
add
adc
push
push
or
pop
scas
cwde
cmp
push
add
lahf
sbb
or
push
lods
inc
add
mov
sub
mov
mov
pushf
dec
inc
add
movs
mov
loope
jl
stos
shl
cmps
mov
mov
or
mov
stos
fs
mov
inc
or
cwde
or
sub
jb
fldenv
xor
jmp
mov
jle
imul
out
adc
push
movs
and
das
sub
mov
sbb
sub
arpl
out
jnp
call
sub
inc
(bad)
out
add
jge
sbb
adc
or
repz
and
test
push
cwde
test
icebp
push
xor
stc
imul
addr16
aam
into
out
adc
pop
outs
jnp
sub
shl
xchg
pop
scas
dec
and
push
xor
jg
iret
les
sub
xor
adc
loope
int3
cmps
lds
xchg
pop
or
lock
int
push
mov
xchg
aam
in
arpl
out
and
cld
dec
dec
jl
pop
scas
and
push
sub
jmp
shl
shl
mov
retf
mov
xor
mov
sbb
jg
or
(bad)
js
neg
fs
sti
add
movs
add
js
xchg
push
hlt
pop
mov
mov
movs
mov
or
and
mov
aad
and
test
inc
popa
pop
retf
js
pop
dec
xor
and
adc
mov
cmp
(bad)
and
(bad)
stos
sub
xchg
and
cs
repz
shr
or
scas
adc
push
je
(bad)
test
hlt
mov
ret
ja
jge
mov
sub
ret
fist
popf
mov
in
jp
sbb
add
or
mov
outs
pop
adc
inc
cmp
inc
push
stos
sub
outs
sti
xor
push
add
data16
loope
pop
fist
jnp
add
sbb
and
or
mov
xchg
outs
out
mov
dec
popa
pushf
icebp
mov
inc
ret
stos
lea
pop
cmp
in
lahf
das
cmp
ss
in
scas
mov
and
addr16
add
jmp
adc
cwde
fs
and
je
inc
xchg
cmp
pushf
xor
iret
jo
daa
daa
shl
sahf
les
or
dec
push
push
mov
inc
in
movs
lock
sub
push
mov
in
push
and
shr
cmp
push
and
inc
je
iret
push
iret
jo
mov
jno
fs
fnstenv
into
adc
icebp
lods
pusha
pop
fistp
icebp
loope
imul
idiv
out
shl
imul
iret
(bad)
enter
ret
add
mov
lock
mov
sub
das
and
mov
and
and
push
mov
mov
sbb
sbb
xchg
mov
call
ret
movs
call
frstor
sub
jge
dec
outs
in
or
outs
cmp
mov
or
dec
enter
sbb
sahf
popa
mov
jb
loope
mov
lods
jge
aad
mov
push
xchg
ret
pusha
adc
in
stos
dec
adc
push
and
nop
ds
(bad)
ins
push
inc
or
mov
je
aam
cmp
mov
xchg
movs
inc
data16
mov
cdq
cdq
das
mov
jns
and
push
dec
shl
hlt
ins
fist
push
sar
add
data16
mov
mov
inc
leave
pop
leave
cdq
aad
icebp
mov
jno
aad
sbb
cmps
inc
hlt
lock
test
adc
mov
or
sub
push
std
and
add
sbb
pop
movs
cmp
call
clc
inc
add
pop
dec
das
inc
mov
dec
xchg
mov
enter
cmp
retf
push
mov
push
hlt
out
nop
jae
add
push
fisubr
enter
adc
inc
mov
enter
lock
jnp
jge
loopne
dec
fidiv
xor
dec
test
in
xor
fld
mov
jo
iret
aad
jae
and
imul
sub
ins
inc
rcr
std
fsubr
xor
out
mov
enter
dec
sub
call
add
or
fs
xor
ja
and
jne
(bad)
jge
cmp
mov
adc
sub
pop
mov
jmp
in
cmp
or
push
and
imul
and
fdiv
repnz
loop
(bad)
sub
ins
in
nop
retf
mov
push
mov
cmp
cdq
xor
cmp
mov
mov
jmp
imul
push
xchg
jp
sub
out
outs
or
adc
cli
bound
fiadd
out
jmp
cmp
xchg
jle
out
mov
sbb
lea
xor
push
out
es
fcmovb
sahf
lods
or
lea
icebp
test
ret
xchg
ds
sbb
cmc
hlt
xlat
out
out
inc
and
adc
sbb
inc
fucomi
sbb
sub
into
dec
test
leave
hlt
mov
dec
cdq
mov
out
mov
sub
call
push
std
sbb
or
clc
mov
popf
add
in
je
ret
mov
cwde
jnp
xor
cmp
mov
je
mov
retf
lds
add
pushf
ds
js
dec
fstp
stc
mov
jmp
cs
fbstp
arpl
dec
lods
xchg
push
fstp
clc
outs
(bad)
push
neg
nop
icebp
jbe
ret
shr
inc
jmp
mov
(bad)
popf
dec
test
cmp
gs
xchg
jle
mov
(bad)
mov
pop
iret
xor
scas
mov
add
cdq
xlat
pop
dec
mov
cmp
mov
into
jb
test
test
cmp
jb
data16
jmp
sub
fsubr
lods
jbe
cdq
loope
jns
mov
mov
pop
inc
mov
fwait
add
icebp
sub
cmp
sbb
jp
test
nop
popa
adc
xchg
nop
pop
jne
test
(bad)
jg
loopne
ins
sbb
cmp
ins
jl
movs
xlat
test
pop
data16
std
sbb
(bad)
fnstenv
add
xchg
xchg
aas
mov
jmp
ds
or
popa
jg
test
xchg
loopne
mov
js
mov
arpl
xlat
call
push
outs
inc
mov
sub
dec
mov
xor
mov
in
and
or
cmp
lock
xchg
sub
in
or
gs
jmp
jo
int
dec
push
int
aaa
(bad)
cmp
cmps
xor
mov
les
adc
js
cmp
xchg
(bad)
push
cmp
adc
and
loop
(bad)
cmp
int3
jecxz
xchg
inc
xchg
and
xchg
data16
mov
nop
scas
je
shl
imul
aam
les
jnp
push
push
fbstp
add
retf
mov
test
gs
push
sbb
or
movs
inc
dec
(bad)
icebp
jecxz
or
dec
pop
out
jmp
ins
add
pop
(bad)
xlat
xor
mov
sub
sti
jno
pushf
outs
cmp
cdq
mov
jmp
push
fnstenv
ins
dec
fwait
mov
push
jnp
nop
mov
test
sahf
lods
ja
scas
cmp
jge
stc
dec
or
cdq
push
cmp
mov
jecxz
dec
jo
sbb
mov
call
daa
ss
pushf
sti
xchg
pop
(bad)
jmp
inc
in
pop
mov
fldcw
das
pop
out
dec
cwde
xor
mov
test
dec
and
xor
mov
sahf
fisttp
dec
xchg
int
and
mov
loopne
das
ret
xlat
inc
repz
sbb
loope
(bad)
and
mov
retf
xchg
in
gs
jo
and
add
cmps
and
xor
(bad)
xchg
cmc
inc
shl
mov
repz
pop
leave
sub
gs
mov
mov
fcom
lods
jne
xchg
enter
daa
clc
jo
pop
add
out
fwait
sub
test
pop
test
jp
(bad)
mov
out
cmp
into
mov
sahf
les
xchg
mov
dec
or
push
jo
jmp
cmc
lds
cmps
or
loopne
test
leave
jecxz
fild
(bad)
mov
xchg
jl
gs
imul
jb
fstp
pop
sub
and
push
mov
ds
xchg
call
mov
dec
hlt
add
push
xchg
jno
aas
ins
and
mov
shr
nop
mov
das
or
cmp
mov
or
shr
mov
aad
mov
sub
clc
xchg
rcl
les
adc
mov
mov
mov
mov
popa
or
push
xchg
stc
mov
in
dec
jne
sbb
enter
push
ins
fadd
push
mov
test
inc
dec
lahf
mov
xor
aad
daa
popa
test
xchg
ds
out
hlt
cmps
in
js
sbb
inc
shl
xchg
jnp
dec
ins
push
stos
or
mul
dec
dec
cmc
(bad)
pop
xchg
xor
mov
mov
jae
and
fwait
shr
jmp
add
mov
dec
into
push
lahf
mov
enter
dec
add
cmp
lock
in
in
adc
cmp
mov
fisttp
or
dec
test
push
shl
sbb
dec
test
and
ins
xor
mov
mov
push
cmps
lock
outs
inc
xchg
cmp
mov
repnz
sub
ins
inc
in
sbb
push
mov
pop
and
mov
jl
aam
inc
je
and
pop
mov
and
call
repnz
jae
cmp
iret
push
jo
and
lock
dec
imul
add
loopne
or
lods
add
push
or
nop
aam
jnp
mov
dec
mov
push
cmps
jne
pop
js
stos
fstp
mov
rcl
xchg
or
gs
add
pop
out
jp
pop
call
xchg
inc
pop
mov
pop
sar
aad
inc
fnsave
ins
fs
xchg
jae
xchg
mov
push
lea
sub
push
adc
dec
push
and
cmp
rcr
(bad)
mov
push
jb
sbb
dec
shr
xchg
push
add
(bad)
cdq
fstp
mov
fstp
ds
outs
dec
jbe
pop
xor
pop
push
adc
pop
push
test
xchg
dec
je
fild
push
int
push
cmp
dec
xchg
js
int3
inc
(bad)
shr
ins
arpl
scas
fs
pop
sbb
icebp
sbb
jns
jecxz
pop
xchg
push
dec
push
nop
inc
imul
add
xor
in
and
and
sub
push
sbb
mov
pop
dec
lods
enter
jge
ja
xor
push
out
jmp
scas
div
inc
test
xor
int3
cwde
or
and
mov
je
inc
adc
cli
push
pushf
lds
les
push
in
xchg
sub
mov
nop
xchg
add
lds
lods
in
popf
mov
cmc
jmp
imul
cmc
pusha
jns
ret
mov
movs
mov
stos
add
push
jnp
inc
mov
inc
jno
dec
pop
es
add
scas
std
aas
repnz
and
mov
mov
dec
jo
rcr
je
cmps
jnp
jb
fs
jge
jmp
jnp
pop
fsubr
fstp
jecxz
mov
gs
mov
and
add
aaa
(bad)
das
outs
loope
out
outs
(bad)
jle
(bad)
cmps
loopne
mov
or
jp
dec
gs
lds
adc
mov
std
xchg
mov
sub
in
lods
das
test
push
out
pop
cdq
ret
pop
(bad)
dec
add
outs
add
idiv
mov
(bad)
gs
push
cmp
ins
push
mov
(bad)
and
mov
cmp
ss
std
bound
dec
push
inc
jae
xor
push
aas
jmp
push
hlt
shr
jg
and
mov
data16
(bad)
ins
xor
jbe
or
dec
or
adc
lods
push
stos
xchg
fwait
movs
push
popf
and
cmp
dec
add
sbb
mov
scas
mov
rol
push
retf
outs
outs
shl
push
mov
test
leave
cli
xchg
je
sbb
or
pop
jmp
push
ret
jecxz
gs
dec
xchg
cmps
adc
add
pop
mov
mov
push
pop
xchg
add
xchg
fwait
mov
jmp
sbb
pop
mov
rcl
xor
sub
test
aad
cdq
and
fs
or
pop
lea
push
jns
or
mov
gs
call
adc
push
mov
mov
fld
push
retf
jne
or
js
out
imul
cmp
push
add
scas
and
imul
xchg
scas
call
pop
dec
cld
pop
fnstsw
mov
shl
sar
std
mov
mov
inc
aad
dec
cmp
shl
stos
xchg
aaa
or
xchg
adc
or
fisubr
jmp
ins
or
out
addr16
nop
push
ins
retf
pop
lods
ficomp
scas
adc
(bad)
jmp
sbb
fst
or
adc
ror
pop
or
inc
mov
cdq
bound
dec
lea
ja
fldenv
jl
movs
or
push
mov
inc
mov
test
fadd
cmp
mov
mov
xchg
ds
bound
dec
pop
cmp
loope
daa
fwait
and
mov
or
inc
mov
pop
jmp
int
adc
clc
iret
(bad)
imul
adc
cmps
mov
jnp
and
mov
loope
cmp
and
cld
loope
aaa
cmps
push
scas
shl
stos
mov
pop
test
icebp
xlat
mov
sub
stos
cmp
dec
sub
mov
xchg
dec
sub
dec
loopne
mov
sbb
les
les
jl
mov
adc
(bad)
jle
pop
sub
pushf
dec
loop
adc
push
cmps
push
mov
xchg
and
mov
jg
int
int
into
pushf
retf
and
loop
mov
jecxz
hlt
push
inc
pushf
ins
(bad)
jns
dec
ret
and
inc
out
push
outs
add
pop
std
faddp
sub
jae
jbe
rcr
ins
adc
aad
cmps
les
jne
ja
mov
add
std
inc
das
in
adc
mov
out
cmp
test
fs
push
jmp
pminub
inc
pop
adc
aas
sbb
and
xchg
test
sub
(bad)
mov
leave
into
cmps
test
ret
js
out
sub
mov
pop
lock
enter
pop
jnp
jns
cmc
inc
int
push
(bad)
cld
mov
test
mov
or
pop
or
and
hlt
xor
cmp
jnp
aad
adc
sti
fsubr
js
mov
sbb
(bad)
fucomi
daa
mov
jns
lods
gs
in
jbe
xchg
inc
rol
sub
add
push
jnp
ins
aas
mov
pop
mov
jge
test
loopne
pusha
sbb
cmp
test
add
in
in
(bad)
and
cmp
sbb
mov
cmps
pushf
inc
mov
enter
(bad)
aas
xchg
call
mov
stos
in
(bad)
pop
inc
repnz
mov
sub
stos
rol
xor
std
and
loope
xor
call
sbb
or
adc
inc
(bad)
inc
or
jg
ret
test
(bad)
sub
ror
add
xor
aam
mov
(bad)
jp
xor
jp
xchg
stos
adc
and
lds
jo
movs
imul
in
dec
aam
(bad)
test
shl
mov
adc
fldenv
pop
xchg
(bad)
push
paddq
cmp
call
dec
popa
dec
icebp
scas
shr
push
and
je
loop
stc
or
sbb
inc
adc
pop
jne
je
xchg
test
das
fwait
push
add
jle
mov
pop
dec
jb
cmp
(bad)
fadd
xor
popa
cli
into
test
div
mov
cmps
aaa
and
push
loopne
out
sahf
push
fidiv
inc
mov
ins
imul
mov
outs
fs
retf
pushf
mov
mov
jae
mov
add
mov
mov
dec
pop
or
int
cld
cmp
retf
jbe
les
rol
test
repz
cwde
scas
cmp
test
pop
adc
bnd
add
add
retf
jle
stc
sbb
fnstcw
test
shl
sbb
(bad)
jnp
ins
imul
outs
fwait
inc
jnp
cdq
ja
cmp
mov
popa
mov
ds
or
iret
hlt
nop
push
mov
push
ins
js
hlt
imul
cli
outs
retf
js
(bad)
lods
add
xor
adc
sub
pushf
push
rol
aas
jb
sub
push
fsub
sbb
push
dec
test
inc
(bad)
punpcklwd
bound
test
stos
retf
fisubr
cmps
mov
inc
ins
xchg
loope
cwde
scas
loop
dec
mov
div
sbb
test
push
in
jo
out
retf
cmp
fdivr
sub
retf
sti
fcmovu
arpl
lds
pop
xchg
add
or
call
out
adc
adc
into
inc
fbld
scas
repnz
inc
jb
(bad)
not
cmp
adc
movs
lea
pop
mov
inc
xchg
dec
ror
(bad)
std
int
cmp
dec
push
inc
in
enter
cmps
or
cli
movs
dec
fcomp
in
xor
xchg
imul
sar
cmp
ror
test
sbb
lock
mov
push
sub
gs
in
sub
hlt
ror
ret
cmc
aaa
cld
mov
inc
and
xor
xchg
mov
lahf
retf
rcl
adc
out
lahf
push
int
adc
(bad)
sbb
(bad)
push
pop
mov
cdq
fadd
dec
stos
jns
iret
or
xchg
scas
les
dec
jb
add
mov
lock
mov
test
bswap
sbb
iret
sub
cdq
cmp
rcl
or
es
mov
jnp
mov
dec
cmps
mov
jno
inc
sahf
cmp
ror
mov
and
sar
cmp
jae
call
jmp
ror
imul
pop
cmp
mov
add
xor
mov
idiv
and
cli
inc
add
dec
mov
loop
add
xor
ror
mov
out
xchg
(bad)
out
or
mov
cmp
popf
sub
es
jno
sub
fild
repnz
dec
mov
popf
popa
xchg
dec
ins
out
push
inc
mov
push
jle
ficom
xchg
cmp
aad
cmp
rol
jg
iret
js
scas
out
in
fsubr
retf
push
mov
or
jge
sbb
out
scas
lods
mov
jmp
rcr
and
add
mov
jl
out
aad
mov
pop
lods
shl
sub
les
push
jge
or
mov
lock
pop
imul
call
(bad)
daa
ins
mov
pop
jns
or
jne
in
lds
out
pop
ficomp
xchg
sub
inc
mov
push
and
mov
dec
loopne
enter
sub
cmp
mov
inc
test
xchg
sub
scas
repz
jge
adc
test
ss
in
mov
mov
or
sbb
sub
and
ss
stc
push
cmp
sub
jle
dec
sub
jo
dec
shl
div
cli
out
ins
mov
add
jl
into
in
or
call
mov
push
inc
hlt
or
mov
jns
mov
inc
rol
jbe
jb
bound
xlat
in
push
push
adc
cli
les
dec
addr16
xor
(bad)
nop
push
fucomi
and
imul
dec
adc
xchg
fsincos
not
mov
lods
push
adc
aad
fs
cmps
and
cli
pop
in
ret
pusha
cmc
push
jae
pop
xlat
(bad)
(bad)
pop
jg
xchg
sbb
add
add
pop
shl
mov
pusha
sub
cmp
or
jl
dec
test
fcom
jo
xor
dec
add
ret
inc
pop
iret
and
lds
or
cmp
pushf
or
div
mov
xchg
mov
mov
outs
and
fld
test
xor
nop
cld
aad
mov
out
hlt
mov
lahf
mov
jnp
push
or
xchg
mov
xchg
ror
xor
outs
nop
jo
cli
push
addr16
jl
ret
(bad)
cmc
stos
leave
jbe
(bad)
outs
cs
cmp
inc
add
outs
addr16
ret
and
rcr
(bad)
test
dec
pop
mov
test
out
xchg
inc
dec
pop
lods
ret
outs
pop
push
push
enter
aam
add
cmovo
xor
push
addr16
test
fwait
neg
pop
out
loopne
xchg
add
jb
xor
push
in
mov
xor
mov
out
or
cmc
push
add
pop
imul
cwde
xchg
bound
add
cmps
in
fcmove
mov
jo
sbb
or
cmc
cmp
into
inc
mov
hlt
cmp
push
(bad)
fcomp
out
push
mov
push
test
das
jl
test
dec
mov
push
mov
push
add
or
inc
jmp
add
mov
repnz
cmps
and
mov
cmp
retf
lahf
nop
daa
aad
lods
inc
jmp
std
inc
xchg
es
xchg
loopne
je
mov
pop
stc
cmc
sub
inc
jns
jp
dec
mov
stos
test
or
add
adc
ins
rcl
test
mov
icebp
lea
mov
xor
sbb
rcr
call
mov
ds
ins
jp
cli
das
cli
in
pop
addr16
movs
jne
out
in
and
std
jae
sti
and
xchg
xchg
(bad)
ss
sar
jnp
mov
jl
push
inc
int
sbb
adc
aam
stos
lahf
pop
ret
push
stos
pop
cmp
(bad)
jnp
lods
pop
movs
mov
ret
mov
mov
enter
popa
sub
xchg
out
stos
mov
xlat
addr16
pop
mov
into
mov
(bad)
fistp
mov
sub
mov
mov
jmp
pop
sub
in
fwait
xchg
in
sbb
stos
test
dec
jl
cmp
jp
adc
fwait
(bad)
ins
(bad)
dec
mov
std
hlt
push
sub
outs
adc
adc
cmps
jno
daa
enter
mov
xor
int3
(bad)
fbstp
mov
cmps
loope
push
xor
xlat
jge
loopne
push
add
cmps
mov
ret
cli
fcomp
adc
adc
sbb
jo
ret
and
jno
in
fmul
pusha
cmp
lods
mov
xor
(bad)
int3
fisubr
fucomip
sub
arpl
xor
not
mov
xchg
mov
dec
mov
dec
add
rcl
ja
or
and
mov
jle
fnsave
ins
ins
fsubr
mov
sbb
sti
out
jno
xlat
loopne
push
in
inc
test
imul
jle
(bad)
adc
sbb
mov
pop
mov
mov
out
shl
cmps
jo
pop
shl
add
cmp
mov
xor
call
pop
mov
xchg
dec
dec
fadd
dec
jne
retf
inc
pop
rcl
pop
jle
sbb
lahf
les
cmp
lods
clc
or
jne
and
call
push
icebp
sub
jmp
arpl
fst
repz
daa
cmps
mov
xchg
mov
mov
push
(bad)
fild
pop
aam
movs
cmps
push
leave
add
popf
or
js
popf
and
jle
(bad)
fisttp
(bad)
cmp
and
ja
xor
adc
pop
push
inc
mov
cmovne
xchg
jp
sbb
int3
adc
outs
ss
mov
cmp
fldcw
les
test
push
mov
dec
in
push
xor
sbb
push
outs
lods
adc
jg
inc
sub
and
xchg
ins
xor
fisttp
xchg
test
jne
xchg
retw
retf
or
gs
mov
mov
mov
jne
outs
cmp
and
xchg
ins
hlt
and
or
ror
mov
int3
or
mov
xor
add
(bad)
ss
std
in
iret
xlat
adc
inc
std
jmp
stos
mov
call
not
shr
dec
gs
hlt
nop
push
addr16
test
(bad)
imul
test
popf
mov
pop
nop
(bad)
lock
(bad)
dec
ins
pop
arpl
push
mov
jo
stos
nop
pop
ds
jno
xor
pusha
fnstenv
push
mov
sub
outs
mov
or
and
imul
retf
push
out
dec
scas
mov
mov
fucom
mul
sbb
cmp
int
lods
fldcw
pop
xor
outs
js
mov
mov
push
js
dec
sub
mov
pcmpgtb
mov
mov
rcl
or
mov
inc
add
sti
jle
sbb
cmc
sub
add
dec
xchg
loop
xchg
fistp
icebp
fs
dec
mov
fisttp
in
nop
nop
rcr
jno
sbb
xchg
sti
push
adc
je
ss
dec
sub
adc
pop
mov
ins
in
movs
cmp
adc
adc
jecxz
pusha
cs
mov
pop
sti
arpl
shl
xor
mov
ins
stos
mov
sbb
cmp
jge
aaa
push
and
stc
cdq
mov
movs
sub
loop
jnp
xor
push
xchg
lahf
pop
sub
mov
lds
mov
push
push
test
shr
std
rol
lock
sbb
shl
into
xchg
ja
xchg
push
cdq
cmp
retf
fisubr
pop
in
xor
sbb
sub
dec
mov
popf
mov
mov
cmp
nop
shl
xlat
inc
xor
push
std
sahf
cmp
stos
out
add
loopne
mov
dec
(bad)
ss
(bad)
test
out
repz
mov
daa
movs
rol
jp
mov
pop
mov
dec
into
in
dec
imul
test
jl
mov
cdq
dec
ret
mov
sahf
cmp
pop
rep
or
or
xchg
shl
adc
and
sub
loope
sub
jmp
push
adc
rcr
cs
div
stos
fucomp
stos
push
cmp
loopne
mov
(bad)
dec
adc
test
cmp
(bad)
mov
xchg
aaa
movs
or
stos
push
out
or
sub
mov
inc
cld
dec
jecxz
fstp
aaa
lods
and
jp
sub
mov
scas
adc
repnz
jo
daa
pop
imul
jbe
into
outs
inc
push
jecxz
and
xor
addr16
dec
or
xchg
jnp
jg
pop
adc
js
loope
lahf
push
inc
mov
popa
cmp
lds
outs
fwait
retf
mov
adc
xchg
xchg
loop
mov
mov
aaa
inc
iret
or
movs
mov
loope
push
lock
hlt
in
fld
cmp
data16
jnp
add
in
pop
out
pop
sar
and
or
inc
add
lahf
dec
adc
cmp
add
bound
mov
xchg
scas
jge
std
call
push
fstp
xor
stos
mov
fild
sub
push
jg
call
sub
xor
in
test
stos
shl
mov
(bad)
fdivr
call
jmp
pop
push
rcl
popf
out
das
(bad)
push
out
dec
inc
xchg
ret
retf
mov
dec
ror
xchg
and
scas
mov
push
mov
jb
daa
out
sub
aas
outs
shr
int3
push
rol
mov
leave
mov
fcom
std
outs
fs
test
movs
xchg
dec
data16
clc
popa
test
sbb
sbb
ins
mov
daa
je
out
in
rol
dec
aas
mov
dec
shl
add
xchg
movs
inc
out
ins
or
pop
test
(bad)
out
cmp
daa
shl
and
mov
mov
imul
in
pop
pop
int
pop
xor
adc
adc
in
pop
push
mov
and
mov
out
test
in
dec
lods
test
jae
mov
into
lahf
push
sub
jnp
xchg
(bad)
xchg
mov
mov
imul
lods
sbb
xchg
jg
f2xm1
(bad)
inc
call
cmps
jge
pop
imul
sbb
mov
into
sbb
mov
sbb
sub
adc
sub
mov
nop
cmp
call
sbb
data16
movs
push
jle
and
cmps
sub
mov
xchg
rcl
pushf
in
adc
jb
add
xchg
dec
mov
cmp
shr
mov
in
out
push
popa
popf
sub
inc
sub
cli
and
mov
adc
(bad)
mov
test
daa
adc
jbe
test
sub
and
(bad)
dec
jecxz
push
ror
sub
arpl
mov
sbb
rcr
pop
adc
sbb
sub
jge
pop
pop
push
xor
fsubr
xor
fnstsw
cmps
and
js
mov
add
xchg
out
ins
push
ins
jg
adc
call
cmp
jmp
mov
cmps
adc
call
loopne
outs
xchg
retf
aaa
fdiv
or
push
mov
add
push
into
inc
jecxz
test
cwde
jo
imul
in
js
fsub
(bad)
push
xor
mov
test
scas
(bad)
cld
(bad)
out
sub
jb
dec
add
addr16
in
(bad)
jle
lods
test
jb
in
pop
pop
and
inc
mov
inc
or
cmp
or
fidiv
push
cdq
dec
jns
addr16
inc
xchg
or
outs
sbb
dec
jle
and
xchg
push
repnz
cli
cwde
mov
in
fdiv
(bad)
cmp
mov
pop
inc
push
shl
or
outs
xor
pop
or
popa
push
xchg
jmp
jne
or
inc
adc
loop
fist
cmps
jns
es
jne
xchg
pop
daa
jle
fstp
mov
stos
bnd
dec
inc
xchg
movs
call
out
jae
push
sbb
daa
fidivr
mov
mov
lock
gs
aaa
sub
fist
sbb
add
call
gs
push
jl
nop
mov
mov
fcmovnb
sub
mov
popa
xor
inc
push
bound
xor
sbb
icebp
stos
cld
sbb
jb
inc
out
cmps
cwde
or
fst
cmps
loop
mov
aad
mov
xlat
mov
sti
push
mov
push
retf
mov
aad
mov
or
cwde
mov
inc
sub
shr
out
cmp
js
mov
pusha
mov
sbb
repz
loop
js
add
or
mov
lods
scas
jnp
dec
xchg
rol
and
test
xor
mov
jbe
sub
push
sbb
mov
mov
(bad)
scas
gs
mov
jecxz
jp
xchg
fs
cmps
jle
jp
(bad)
lods
icebp
push
imul
js
add
dec
jb
jecxz
add
inc
push
xor
add
sub
loop
and
ins
ret
dec
mov
push
mov
mov
xor
or
cmc
test
jno
fs
add
xor
js
mov
dec
movs
inc
mov
jb
fisubr
jp
addr16
jne
pandn
stc
pop
cmp
mov
cmp
sub
popf
into
(bad)
cwde
jmp
xchg
test
bnd
adc
imul
daa
aas
dec
jmp
jae
mov
scas
mov
cmps
in
call
ins
mov
pop
into
xchg
push
outs
int
mov
adc
repnz
fcom
dec
adc
push
sub
sbb
mov
sub
lahf
cmp
xchg
pusha
or
mov
ret
xchg
xchg
push
stos
pop
rcr
and
scas
dec
pop
or
xchg
imul
dec
fs
pop
cmc
neg
inc
mov
data16
lea
dec
lods
and
xchg
xor
dec
out
push
adc
jge
mov
jno
add
xor
ins
int
jne
fcomip
(bad)
mov
(bad)
pusha
sub
je
addr16
or
data16
sbb
pushf
test
mov
clc
push
pop
xchg
or
imul
inc
inc
push
out
sub
push
xor
outs
dec
mul
xor
inc
mov
pop
out
add
fisub
cdq
jl
fcom
pop
adc
popf
in
xchg
arpl
out
add
fld
aas
inc
jge
test
div
jae
daa
mov
retf
mov
test
test
hlt
adc
lods
cmp
fnstcw
fcmovnu
jo
out
sbb
call
xchg
mov
cmp
sar
push
shr
paddsb
push
scas
jecxz
sub
push
sbb
and
fstp
test
(bad)
mov
and
pop
mov
mov
aad
cmc
pop
jne
pop
mov
xchg
pop
jmp
iret
and
pop
inc
sbb
movs
adc
mov
push
outs
mov
add
xor
(bad)
dec
add
xor
lahf
inc
in
and
int3
lods
dec
cdq
mov
xor
(bad)
ins
stos
xchg
jecxz
pop
adc
shr
add
jecxz
les
dec
test
xor
mov
iret
xchg
sbb
out
lahf
nop
ds
push
lahf
jmp
push
les
je
xor
push
ds
in
mov
xchg
hlt
fsubr
push
ins
mov
and
mov
leavew
out
jp
es
xlat
loope
xor
mov
pop
jecxz
sbb
cwde
cmp
jb
mov
mov
sbb
ror
sbb
or
pop
loopne
fld
ss
sti
or
icebp
xlat
cmp
xchg
ss
cmps
adc
(bad)
cmp
xor
(bad)
rol
dec
dec
jecxz
mov
popa
leavew
fmul
jb
and
sbb
xchg
adc
cmp
mov
int
or
js
jg
cmps
call
cmps
inc
rcl
out
mov
arpl
out
outs
mov
and
cli
inc
mov
adc
(bad)
or
add
xor
fst
test
mov
(bad)
or
mov
test
js
movs
in
inc
pop
jne
pop
xchg
ins
mov
mov
inc
jo
mov
cld
pushf
sbb
pop
xchg
jmp
nop
enter
call
loope
mul
jecxz
and
cmp
or
mov
mov
pusha
sub
ds
add
idiv
add
out
push
or
imul
mov
jmp
scas
int
and
(bad)
push
push
popa
and
imul
data16
or
adc
and
push
js
pusha
jecxz
dec
xchg
loopne
and
iret
lea
dec
pop
das
call
or
sub
jb
jmp
inc
out
in
jmp
lock
popa
cdq
ss
xchg
in
stos
outs
shl
inc
dec
les
fistp
mov
and
mov
(bad)
pop
cli
pop
mov
lock
popf
mov
jle
repz
pop
imul
test
int3
push
inc
iret
ins
cmps
das
je
cmps
fistp
sbb
jo
leave
jns
mov
xchg
addr16
mov
or
mov
add
shl
jp
mov
pop
dec
cmc
dec
add
imul
test
outs
jno
push
xor
repnz
fwait
aaa
xor
pusha
ret
(bad)
fnstsw
ror
jmp
pop
push
pusha
bound
push
add
mov
cs
and
ficom
xor
add
xor
mov
retf
ds
xchg
or
clc
retf
xor
mov
sbb
add
cmp
pop
push
push
cmps
push
stos
loop
push
adc
movs
sub
inc
add
inc
loop
pop
mov
int3
jo
(bad)
jne
xor
stos
push
dec
push
push
addr16
mov
cmps
sbb
int
xor
xor
inc
mov
stc
pop
and
adc
das
cmp
mov
sbb
out
mov
sub
fsubrp
jne
fwait
mov
jns
rcl
pop
cmp
mov
(bad)
adc
xchg
or
iret
push
push
mov
xor
mov
mov
lock
out
add
pushf
pop
inc
outs
int
fiadd
jge
or
adc
mov
sbb
pop
data16
or
mov
(bad)
sub
mov
popf
sbb
into
mov
jp
sub
pushf
jecxz
fidivr
add
mov
iret
push
mov
mov
int3
aaa
and
xchg
and
sbb
js
iret
or
rcr
call
fisub
sub
jp
(bad)
jns
sbb
dec
adc
and
(bad)
jge
or
sbb
ficom
rcl
int3
push
popa
out
add
lahf
div
or
imul
popa
or
and
aas
loope
pop
or
movs
cwde
inc
retf
push
sbb
mov
fldcw
sbb
pop
test
sbb
lahf
add
jnp
add
mov
cs
ja
int3
or
loopne
push
in
rcr
rcl
dec
xchg
sub
mov
dec
retw
or
inc
or
jbe
mov
dec
cwde
pop
shr
ror
adc
lahf
xchg
lods
mov
xlat
test
enter
pop
pop
pop
xchg
ja
es
sar
xchg
mov
push
ret
retf
stos
cmp
push
lds
xchg
mov
test
and
(bad)
pop
loop
mov
data16
push
pusha
mov
stc
jecxz
test
enter
retf
jl
fnsave
loop
xchg
lods
pop
int3
pop
push
test
push
(bad)
cmp
add
cmps
das
test
fistp
int3
into
inc
ret
xor
xchg
iret
mov
daa
stos
ror
cs
mov
add
out
inc
xchg
inc
lods
sbb
inc
and
mov
ret
add
mov
jbe
cwde
mov
je
push
int3
in
shr
fstp
sbb
cmps
jg
(bad)
fnstsw
mov
repz
stc
imul
test
push
push
bound
cmp
jne
dec
jmp
cmps
push
popf
fs
shr
xchg
push
(bad)
jno
fisttp
scas
loopne
jns
xchg
push
repz
adc
loopne
out
cmp
(bad)
js
dec
mov
jmp
mov
push
das
es
iret
xchg
mov
or
adc
iret
in
in
and
repnz
jnp
inc
dec
jno
(bad)
(bad)
jge
cmp
pop
inc
cmp
mov
pusha
fsubr
or
xchg
sub
stos
popa
cdq
shl
add
lahf
lods
sub
mov
ja
cmc
fs
jp
in
sbb
into
fimul
scas
or
xchg
pop
test
sub
pop
push
data16
pop
and
pushf
shl
cmp
idiv
scas
into
inc
fcom
adc
cmp
out
lea
mov
sub
lods
sub
enter
icebp
(bad)
cld
mov
out
cmp
into
dec
sahf
inc
pop
jecxz
jmp
clc
adc
or
repnz
es
cs
into
dec
mov
(bad)
cmc
loop
add
mov
or
or
jg
and
stos
cdq
mov
pop
dec
dec
dec
mov
mov
std
jg
xor
out
pop
adc
popa
xchg
jmp
in
loopne
mov
pushf
xchg
cmp
cmp
sti
jbe
sub
sub
mov
dec
xchg
mov
xor
add
scas
frstor
xchg
test
imul
or
push
push
ror
mov
lahf
mov
ror
repz
(bad)
push
mov
fdivr
push
mov
xor
xchg
dec
shl
in
pop
js
mov
mov
xor
push
pop
mov
sti
jge
cmp
sub
or
adc
aaa
(bad)
arpl
mov
xchg
sbb
fcom
jns
dec
pop
out
sub
in
retf
xchg
movs
aad
adc
xchg
popa
mov
lds
inc
popa
dec
add
mov
mov
adc
out
jmp
cmps
retf
sub
push
sub
sub
cmp
shl
int3
outs
push
out
jnp
dec
or
and
test
adc
int
les
ss
adc
movs
jb
jbe
mov
pop
ss
sti
push
mov
daa
xchg
inc
xlat
out
and
mov
mov
pop
ds
sbb
xchg
ja
mov
jmp
rcl
xor
mov
adc
push
xor
xchg
ins
and
and
or
data16
pop
(bad)
ficom
xlat
popa
daa
ins
es
mov
cmp
icebp
push
add
lahf
jl
in
sub
xchg
(bad)
out
cli
cdq
adc
pop
jae
mov
adc
lock
leave
mov
stc
in
leave
push
ins
xchg
push
push
inc
jns
pop
clc
mov
cmp
jo
mov
sub
push
ds
mov
out
push
mov
fadd
jmp
inc
dec
push
mov
leave
(bad)
jg
jnp
fcmovu
out
mov
xor
sub
mov
xchg
test
xor
jnp
outs
cmc
fs
(bad)
shr
leave
cmp
or
push
pop
and
mov
cdq
pop
jns
xor
and
pop
call
xchg
xor
cmc
add
lahf
pop
inc
adc
jne
js
push
push
sbb
test
jns
rol
or
fidiv
mov
jb
push
lods
add
fld
inc
or
mov
mov
xchg
add
and
fdiv
int3
jo
xchg
pop
retf
movs
mov
ins
xchg
pop
add
in
push
push
faddp
sbb
jbe
fild
cmp
fucomip
fld
sti
ins
xor
ds
sub
xor
cld
push
ss
inc
movs
repnz
gs
inc
sub
test
pop
inc
xor
mov
jge
sub
or
jp
add
mov
push
and
bound
std
movs
dec
and
xchg
pusha
lock
aaa
movs
sti
sbb
sbb
pop
xor
outs
(bad)
xor
or
cs
inc
push
dec
stos
mov
mov
and
out
leave
jnp
std
push
sbb
xchg
addr16
mov
daa
stos
push
mov
jbe
data16
imul
push
sbb
and
cmp
aas
or
mov
pop
push
int3
add
outs
int3
cmps
mov
xchg
jb
dec
xchg
mov
hlt
xchg
std
inc
cmp
retf
adc
push
aad
inc
push
pop
call
sbb
enter
push
inc
xchg
cld
mov
add
pop
adc
in
jnp
and
shl
jle
mov
fwait
movs
mov
stc
jo
pushf
push
popf
push
dec
sub
push
xor
adc
add
fisubr
xchg
push
inc
iret
or
shl
std
xor
jmp
inc
shl
shl
in
loope
movs
lahf
pusha
ins
call
aam
daa
or
sar
out
sub
ret
jecxz
and
inc
aaa
mov
popa
mov
mov
push
iret
sar
fild
add
sub
fstp
mov
xor
js
clc
lahf
push
test
mov
jne
sub
push
xchg
mov
jge
adc
mov
push
push
retf
pop
ret
mov
push
pop
xor
dec
aam
ret
into
mov
enter
dec
jno
in
mov
aaa
ja
sub
pop
xor
jg
jnp
lock
xor
xlat
mov
sbb
jbe
aaa
icebp
push
test
dec
cdq
xchg
inc
aaa
gs
popf
and
sub
jle
(bad)
shr
push
bound
sbb
daa
aaa
bound
xor
adc
aas
or
dec
ror
jecxz
fist
xchg
(bad)
lahf
leave
dec
out
daa
dec
or
adc
sbb
ins
fcmovu
sbb
into
movs
ror
push
lds
les
sub
js
das
pop
in
inc
clc
lods
add
or
ins
xchg
ficom
adc
jae
jle
or
out
pop
in
arpl
adc
call
movs
or
loope
cmps
pop
icebp
adc
fldlg2
in
nop
sub
dec
push
ins
jns
push
cmp
or
push
outs
inc
pop
push
imul
sbb
scas
dec
repz
adc
inc
mov
cmp
or
movs
test
xchg
xor
ret
jns
or
std
inc
sub
test
mov
test
in
mov
and
push
add
sbb
cmc
mov
retf
mov
add
dec
inc
sub
sub
movs
pop
add
retf
mov
call
jmp
jbe
scas
push
ja
sbb
hlt
xchg
jg
retf
daa
fs
jbe
sub
sti
int3
inc
mov
mov
shl
in
xor
mov
cmp
jno
(bad)
pop
inc
ret
adc
ds
fld
and
and
sbb
hlt
dec
retf
jp
sub
jl
imul
call
pop
adc
xor
jle
jg
cmp
and
pop
push
adc
jle
enter
popw
push
add
repnz
test
std
lahf
out
dec
push
inc
mov
aad
mov
mov
cld
in
stos
mov
push
call
sti
bt
lock
(bad)
dec
add
aam
cs
sub
outs
xchg
jl
add
pop
or
or
(bad)
iret
pop
ins
sub
cmp
sub
call
arpl
popf
push
dec
call
sbb
cmp
push
add
push
and
fmul
and
loopne
out
rcr
hlt
clc
popf
jmp
jecxz
gs
xchg
lock
bound
add
lods
(bad)
idiv
fwait
ins
inc
or
test
mov
test
mov
xchg
stos
cwde
adc
retf
jl
push
cmp
lock
call
sub
push
ficomp
sbb
jbe
popf
sbb
mov
mov
xchg
lock
pushf
mov
and
ja
or
in
jae
cmp
mov
in
push
push
ret
ja
add
adc
cmp
or
pop
test
xchg
test
mov
imul
and
ficomp
(bad)
dec
sub
out
pop
call
mov
jb
stc
mov
lods
aaa
test
push
aaa
sub
js
xor
data16
push
movs
shr
daa
rol
test
cmp
test
mov
sbb
scas
pop
test
add
inc
xor
push
loop
ins
xor
cli
out
fsubr
sti
pop
xchg
sub
loope
mov
addr16
ins
and
sbb
and
or
inc
leave
enter
inc
add
cmp
pop
daa
dec
add
sar
out
sbb
mov
jne
cdq
mov
sub
inc
dec
ins
dec
aaa
add
and
and
ror
shl
push
(bad)
xor
cs
cdq
inc
test
imul
xchg
outs
mov
fwait
mov
adc
cmp
and
or
stc
jmp
jmp
lods
mov
je
int
push
in
lea
ret
xor
mov
mov
mov
xchg
dec
imul
mov
dec
xor
sub
push
and
mov
cmc
imul
retf
cmp
add
mov
cs
mov
sub
les
inc
inc
pop
push
mov
jle
imul
push
xor
scas
push
sti
mov
or
sahf
aaa
test
and
test
cmp
adc
in
push
xchg
jecxz
pop
mov
mov
add
sbb
pop
std
xor
cld
mov
mov
sbb
cmp
loopne
outs
or
fs
aas
gs
adc
push
gs
mov
std
cmps
aam
or
xchg
cmp
mov
ret
adc
xchg
(bad)
ins
mov
cmps
fmul
sub
xor
jmp
ret
mov
loope
mov
jb
aam
(bad)
push
das
leave
leave
movs
dec
lea
or
inc
and
shl
lds
rol
mov
jo
lods
xchg
mov
or
out
jmp
in
cwde
add
sbb
or
jo
or
lock
call
(bad)
xchg
jnp
outs
outs
or
cli
inc
dec
add
jmp
mov
sub
test
cmp
dec
imul
or
pop
push
cmps
stos
addr16
mov
es
aad
jno
inc
and
cli
pop
stos
int
out
dec
call
mov
lods
mov
jle
pop
lock
stc
cmc
out
add
push
repnz
ret
inc
push
xchg
pop
inc
push
inc
clc
adc
add
out
xchg
rcr
dec
jecxz
adc
add
in
dec
mov
mov
rcl
push
add
(bad)
sar
shl
mov
push
test
cmps
sbb
jo
jae
retf
sub
jne
ss
add
retf
lahf
je
mov
mov
mov
sbb
fmul
adc
jb
jle
sub
sar
add
inc
loopne
outs
jns
aaa
retf
fbstp
test
outs
shl
xchg
stc
fsubr
or
loop
dec
neg
jnp
xchg
mov
adc
in
aam
out
cmc
sbb
retf
(bad)
pop
jae
pop
xchg
mov
xlat
int3
jp
cli
(bad)
inc
clc
retf
js
imul
add
dec
pop
sahf
bound
xchg
pop
or
sub
call
sbb
inc
movs
iret
lds
sbb
icebp
stos
loope
lahf
outs
loopne
nop
add
and
mov
loope
sahf
mov
mov
mov
dec
xor
or
cmp
mov
(bad)
jge
jnp
cmp
mov
fsubp
inc
icebp
cdq
cmps
inc
push
nop
adc
sub
in
aaa
int3
adc
fadd
cmps
std
push
lock
ret
dec
fs
or
add
iret
xchg
or
arpl
mov
dec
pop
push
sbb
cmc
(bad)
addr16
shl
jbe
dec
pop
int
inc
cmp
fmul
imul
lock
sahf
nop
ds
stos
outs
popa
push
sbb
pop
and
aas
sub
fst
add
pop
sti
sub
inc
mov
gs
jge
or
into
push
int3
sub
(bad)
sub
stos
jbe
push
jnp
stos
aaa
(bad)
pop
ret
and
mov
mov
dec
in
push
popf
ja
mov
(bad)
enter
int3
(bad)
or
in
add
(bad)
imul
jge
adc
call
push
xor
(bad)
(bad)
out
push
push
and
xchg
scas
cld
rcl
jno
mov
lea
and
lock
cmp
mov
rcl
les
sub
out
mov
stc
mov
test
cld
xchg
mov
cmp
stos
add
jb
mov
cwde
adc
outs
xchg
jb
(bad)
fidiv
add
push
dec
sbb
adc
or
dec
xor
or
pop
(bad)
or
xor
dec
adc
dec
(bad)
sbb
repnz
leave
div
push
sub
(bad)
enter
mul
out
adc
jne
inc
and
and
mov
jle
mov
mov
mov
(bad)
(bad)
pop
sbb
or
mov
cld
jnp
push
cmps
add
ror
xor
mov
fld
mov
adc
sti
retf
jle
stos
inc
pushf
dec
pop
imul
add
sub
(bad)
cwde
fadd
mov
jae
aaa
popf
retf
or
ficomp
jmp
jge
jge
shl
les
sub
jno
fldcw
pushf
lods
repnz
icebp
and
mov
xor
jmp
push
(bad)
in
ret
add
sub
jnp
call
cmp
into
movs
jmp
mov
clc
imul
jae
inc
push
jecxz
sbb
(bad)
fnstcw
addr16
call
(bad)
lods
retf
shl
fs
cwde
or
retf
out
or
jle
and
fsub
sti
mov
dec
rcl
and
movups
adc
lock
int
fiadd
push
inc
(bad)
inc
fisub
adc
cmp
sbb
cmp
imul
push
pop
xchg
in
sbb
pminsw
clc
add
cwde
retf
inc
fadd
in
cmp
xor
pusha
xchg
jge
and
or
popf
ror
test
jo
inc
nop
daa
call
fnstcw
mov
mov
imul
jge
lods
cld
mov
loope
pop
adc
push
rcr
jle
sbb
pop
jmp
mov
add
and
sub
leave
push
movs
outs
jmp
or
retf
adc
addr16
sub
cmc
jg
pop
and
mov
jp
sub
jmp
dec
jno
ins
mov
sub
stos
cmp
cmp
inc
mov
dec
gs
mov
dec
pop
repnz
shl
aad
imul
addr16
or
mov
pop
sbb
mov
add
mov
stos
dec
xlat
call
out
jecxz
fidiv
jnp
adc
jmp
jbe
sub
mov
mov
adc
(bad)
(bad)
sbb
cmp
and
mov
push
jbe
cmp
fstp
jl
add
sbb
imul
imul
fsubr
pop
push
cmp
ss
pop
std
shl
mov
xchg
mov
and
(bad)
dec
mov
loop
loope
xchg
or
sbb
mov
(bad)
sbb
pop
test
cmp
mov
scas
std
rol
mov
ds
cmp
sar
xchg
xchg
mov
nop
lods
fisubr
jmp
fdivr
mov
mov
xor
iret
hlt
xor
push
jae
xchg
sub
inc
pop
aam
iret
div
jmp
inc
ret
idiv
retf
ficom
mov
inc
mov
mov
mov
shr
mov
jns
lods
fsubr
shr
sub
lods
bound
dec
sub
jb
rol
mov
aas
ds
das
or
dec
mov
rcl
pop
fsub
lahf
xlat
or
xchg
fidivr
mov
push
or
xlat
into
mov
sub
pop
js
push
add
sub
fwait
(bad)
stos
scas
mov
icebp
pop
cmp
or
mov
sub
push
bound
push
adc
xor
lods
mov
adc
retf
xchg
jne
push
pop
sbb
int
frstor
retf
les
gs
jbe
pop
cmp
push
xlat
mov
pop
lods
push
push
push
jmp
cdq
ins
loop
es
int3
mov
xor
sbb
sbb
add
fwait
popa
mov
hlt
push
and
ins
ret
jmp
mov
and
fsubr
jae
hlt
xchg
daa
push
jmp
pop
ror
inc
fsubr
imul
(bad)
fcomp
jmp
ret
sbb
(bad)
stc
sbb
sub
ins
jl
push
cdq
xlat
call
inc
mov
out
mov
cmps
xchg
retf
mov
movs
arpl
and
inc
mov
xlat
mov
adc
pop
imul
jmp
mov
jno
xchg
add
fadd
div
xor
pop
mov
inc
retf
clc
jo
jmp
inc
in
cmps
out
cmp
popa
shl
rol
pop
inc
iret
test
mov
(bad)
sub
(bad)
stc
(bad)
es
dec
mov
test
mov
loopne
fsubr
cwde
movs
stos
mov
push
sub
xor
in
xchg
call
hlt
iret
mov
scas
popa
inc
mov
in
pop
retf
adc
stos
es
hlt
imul
test
out
xchg
mov
xlat
sbb
adc
loop
outs
loop
fadd
xor
sub
es
sub
add
ret
sub
ds
ja
jnp
aad
hlt
jne
cmp
outs
movs
xor
mov
loop
sahf
cdq
xor
inc
mov
jle
jbe
pop
xchg
push
imul
shr
mov
cmp
jg
push
mov
mov
movs
add
cmp
scas
pop
ds
adc
lahf
shl
scas
mov
jecxz
push
aaa
dec
mov
or
xchg
push
dec
sbb
cdq
pusha
imul
mov
je
fsub
mov
mov
pop
cmp
jne
mov
(bad)
mov
push
pop
sbb
(bad)
int3
test
adc
ss
push
shr
mov
les
shl
dec
sub
jnp
call
ja
pop
stos
repz
loopne
inc
mov
inc
stc
xchg
shr
xchg
sub
or
sti
test
lea
loop
push
push
mov
dec
aam
js
mov
leave
push
jmp
mov
pop
dec
push
jl
dec
xchg
sbb
iret
inc
sub
(bad)
fucomp
dec
mov
inc
xchg
cli
adc
dec
adc
dec
mov
sub
dec
addr16
pop
mov
(bad)
push
cmps
dec
mov
xchg
inc
adc
in
and
push
jae
shl
mov
sahf
hlt
add
add
jbe
dec
jb
or
out
popf
outs
out
mov
cmovbe
push
ror
or
jecxz
pop
and
mov
push
rol
and
mov
jae
cmc
inc
aad
or
pop
outs
dec
mov
mov
inc
mov
cwde
dec
outs
cmp
icebp
adc
inc
xchg
sahf
pop
sub
push
idiv
pop
jne
xchg
je
pop
dec
sbb
sbb
adc
or
sub
and
jg
inc
leave
jg
out
ficom
clc
and
popf
call
stc
xor
xchg
loop
push
mov
cmp
xor
xor
std
pop
sbb
mov
sbb
(bad)
cmp
inc
aas
sub
in
cmps
dec
mov
lea
out
pop
or
mov
add
jno
adc
mov
int
mov
inc
sbb
xchg
imul
fistp
mov
xchg
arpl
test
dec
sahf
jbe
out
xor
mov
mov
sub
xchg
js
rcr
xor
out
pop
cmp
adc
in
pop
mov
lock
jb
xor
stos
mov
and
movs
popf
es
add
adc
jl
call
jno
push
push
dec
jb
mov
add
pop
push
ins
gs
add
jns
xchg
dec
or
fs
ja
mov
je
(bad)
or
push
call
mov
sti
pusha
add
cmps
and
lods
pop
addr16
pop
xchg
pop
icebp
jecxz
mov
push
in
iret
imul
cmp
jecxz
sbb
int3
ins
xor
idiv
fcomp
and
mov
out
xchg
cs
adc
cli
sbb
daa
scas
int
pop
jecxz
adc
in
(bad)
aaa
test
int3
leave
leave
sub
fisttp
pop
and
(bad)
lea
push
arpl
sbb
xor
xchg
sbb
inc
lods
pop
int3
out
rcl
(bad)
jns
cmps
jmp
out
scas
dec
loopne
sti
pusha
push
cli
retf
dec
pop
cld
pop
stos
add
jo
cmp
dec
or
in
shl
xor
int3
xchg
push
ret
lahf
cli
pop
sbb
cmp
sbb
test
daa
jg
ret
fnstcw
jp
leave
adc
jbe
xor
fimul
pop
or
jb
push
xor
or
add
sbb
outs
adc
retf
adc
imul
js
inc
lds
clc
xchg
lahf
sub
jnp
test
and
inc
sbb
mov
xor
(bad)
dec
(bad)
push
and
adc
(bad)
scas
ja
jp
mov
xchg
stc
xchg
fwait
xchg
mov
sub
daa
cmp
fild
scas
mov
addr16
in
add
jbe
fistp
(bad)
pop
icebp
adc
ja
cmps
or
(bad)
outs
mov
gs
xchg
adc
ja
addr16
sub
call
test
je
dec
xor
into
jmp
mov
mov
mov
xor
shl
mov
dec
enter
add
push
push
pop
js
mov
out
xchg
scas
retf
mov
rol
sbb
ror
or
jl
(bad)
xchg
gs
fcomp
xor
ss
inc
sub
aaa
es
push
xlat
das
mov
mov
movs
out
cmp
fidivr
ror
jg
dec
jmp
outs
jo
js
cmp
stc
mov
call
pop
cld
sub
retf
jae
repz
outs
or
test
std
cld
and
das
in
mov
xchg
into
sbb
ret
add
outs
lods
sti
scas
push
(bad)
fistp
mov
adc
mov
add
fadd
test
shl
jb
retf
inc
inc
pop
mov
xor
mov
fsubr
sbb
popf
and
ficomp
jae
push
pushf
repnz
sbb
jg
cmp
ret
cmp
repnz
out
(bad)
cld
inc
clc
rol
test
xchg
daa
mov
pop
jo
lods
out
call
imul
mov
dec
or
fild
shl
movs
cmp
xor
pop
fidiv
jmp
repnz
mov
cdq
inc
mov
sub
push
sub
push
add
test
loopne
push
enter
popf
in
mov
push
mov
pop
xor
inc
or
pop
cmps
cmp
out
rol
or
inc
jo
cmp
in
mul
inc
ret
sub
fadd
sub
lea
push
mov
popa
and
jge
into
loopne
sbb
dec
rcr
mov
cmp
jbe
cmp
adc
cmps
add
push
xor
pop
mov
icebp
neg
aad
pop
mov
sub
into
movs
retf
jle
inc
sbb
fwait
mov
mov
out
xor
arpl
je
ins
je
pop
inc
add
mov
sbb
not
scas
cmp
cli
imul
(bad)
fsub
gs
test
jbe
inc
out
cmp
iret
ret
sbb
inc
rcr
cld
loopne
aas
lea
sbb
imul
push
ins
hlt
sbb
fsubr
adc
js
imul
xor
(bad)
push
loope
sub
lods
xchg
shl
imul
cmc
or
movs
push
sbb
clc
fs
jns
dec
mul
ror
mov
movs
push
test
push
and
sahf
mov
dec
add
jmp
outs
stc
jle
imul
cmp
jae
es
pop
ds
pushf
xor
(bad)
test
scas
jns
shl
mov
loopne
push
cmps
mov
mov
pop
rol
ss
(bad)
mov
es
mov
scas
aas
test
retf
call
ins
and
aaa
cwde
and
jle
push
dec
data16
loop
jno
push
shl
daa
dec
loope
in
shl
xlat
mov
cmps
aad
gs
imul
and
das
and
mov
into
mov
movs
jb
mov
fstp
std
stos
jp
cmc
and
pop
iret
sbb
jmp
aad
mov
mov
pop
ret
dec
push
clc
popa
mov
inc
xor
cli
sbb
xor
or
ror
cmps
fisubr
ja
ins
or
mov
adc
data16
push
outs
cmp
mov
lods
in
(bad)
jo
ss
push
cmp
pop
in
lock
mov
sub
fidivr
test
je
adc
mov
dec
jo
jno
leave
xlat
cmp
test
jmp
lods
jb
jecxz
cmp
clc
pop
mov
push
and
addr16
and
shr
jp
push
xchg
pop
frstor
push
xchg
push
ror
add
or
sub
xlat
sub
hlt
inc
pop
inc
loop
iret
sbb
nop
hlt
shl
rcr
std
outs
fs
(bad)
lahf
or
aas
push
jmp
(bad)
lods
(bad)
xchg
pop
test
inc
xchg
cmps
pop
or
repnz
jle
lods
push
or
jmp
or
and
pop
pop
aad
gs
jae
jecxz
iret
jge
pop
stos
(bad)
mov
sub
aam
dec
scas
sar
push
pop
aas
aad
dec
adc
(bad)
not
out
jne
jle
(bad)
mov
je
mov
mov
xlat
adc
test
shl
push
fstp
out
inc
in
dec
dec
mov
fisubr
cmp
dec
mov
std
and
add
js
inc
sbb
pop
jl
(bad)
int
fadd
dec
cmps
add
pushf
inc
mov
sahf
fstp
into
xchg
xor
push
repz
add
mov
fdivr
mov
inc
fdiv
pop
cmps
cli
icebp
stc
and
jne
or
fsub
push
sbb
pop
xchg
mov
imul
(bad)
push
sbb
je
jae
int3
enter
xchg
inc
jne
and
or
push
jg
fs
fmul
jne
out
(bad)
in
push
cmp
cld
adc
jecxz
retf
into
enter
mov
dec
mov
lods
(bad)
xor
cmp
cmp
dec
stos
and
inc
push
add
jle
pop
jo
mov
adc
and
mov
jle
(bad)
mov
loope
push
ss
in
int
pop
xor
ret
cmp
movs
or
inc
jnp
aam
mov
enter
adc
inc
inc
xchg
fdiv
add
sub
xchg
js
mov
mov
mov
cli
fs
pop
stos
or
int3
or
in
xchg
dec
dec
call
mov
lds
ret
nop
fs
dec
mov
mov
add
pop
and
loop
movs
fwait
mov
xor
mov
mov
sub
xchg
data16
xchg
loopne
inc
cmps
push
and
out
movs
int
jp
add
rcl
in
cdq
fwait
push
push
mov
inc
ret
push
inc
mov
mov
loopne
dec
cmp
or
push
es
add
mov
push
ins
in
cmp
mov
xchg
in
test
notrack
mov
arpl
(bad)
or
int
and
jo
ror
in
and
push
fsubr
cmp
stos
add
mov
jbe
mov
push
outs
jg
ror
xchg
mov
or
pop
sbb
sar
lods
jne
mov
movs
cmps
push
sbb
mov
test
setl
repz
xlat
loopne
mov
sbb
jo
cwde
std
std
inc
jae
(bad)
mov
and
addr16
into
xor
stos
sub
sti
sub
inc
outs
imul
sbb
not
dec
lods
xor
ret
mov
mov
ins
scas
cmps
popa
in
adc
mov
jno
and
out
jb
stos
fidivr
pushf
jo
push
pushf
jmp
or
jb
test
bound
movhps
xor
or
xchg
sub
pop
(bad)
outs
fwait
ret
cdq
dec
ins
clc
iret
add
inc
adc
hlt
lahf
aam
jmp
pop
push
aaa
pop
xchg
das
add
fist
push
repz
dec
xlat
ficomp
icebp
outs
or
daa
cmps
mov
jbe
lods
aas
imul
and
stc
jbe
fs
je
inc
inc
icebp
mov
sbb
ficom
dec
adc
sbb
js
or
int
fs
xor
sub
je
repz
fidivr
cmps
mov
in
scas
mov
dec
pop
jno
test
sahf
and
test
(bad)
jmp
or
(bad)
jb
push
sub
adc
mov
mov
fadd
int3
lods
je
hlt
in
pop
xlat
repnz
stos
or
sahf
inc
mov
mov
or
push
mov
in
fsub
adc
shl
pop
xchg
jmp
nop
in
dec
shld
fiadd
xchg
mov
test
icebp
test
icebp
mov
stc
sub
pop
movs
sbb
push
stos
xchg
iret
pop
daa
dec
mov
xor
add
mov
jge
test
push
cli
retf
fnstsw
scas
adc
mov
hlt
jo
pop
sbb
mov
lahf
inc
(bad)
cdq
and
rcl
test
jb
dec
arpl
pushf
ror
adc
cmp
add
clc
sub
icebp
cmc
stc
(bad)
push
shl
mov
pop
pop
sbb
stc
fiadd
aad
std
sti
fs
push
addr16
fistp
outs
mov
mov
clc
ficom
push
nop
and
pop
data16
outs
jbe
enter
cs
xor
ret
stc
mov
add
mov
push
inc
sub
mov
inc
push
jmp
or
(bad)
out
sti
xchg
out
fnstsw
movs
adc
sub
ja
push
push
imul
xchg
or
mov
bound
jbe
and
pop
popa
call
adc
mov
dec
jne
pop
adc
call
outs
sbb
pusha
push
daa
jns
jno
pop
xchg
xlat
jne
push
gs
adc
cmps
loope
les
mov
fild
call
scas
sub
imul
mov
mov
out
call
mov
not
shl
add
clc
jmp
mov
ret
xor
or
icebp
rol
scas
ss
mov
test
mov
das
mov
adc
jp
mov
push
or
or
mov
pop
fwait
pop
leave
push
push
into
inc
loope
mov
vunpckhps
adc
pop
mov
cwde
push
inc
hlt
sahf
pop
not
inc
jmp
cdq
add
mov
jmp
aaa
mov
cli
push
ss
outs
scas
enter
add
cmp
adc
cmp
out
ins
push
sbb
fiadd
sahf
cmp
(bad)
jmp
fst
jno
cmp
popa
and
xor
adc
into
dec
and
popf
test
push
mov
sbb
or
pop
fild
push
test
mov
cmp
adc
cmc
mov
xor
je
aam
mov
das
inc
int
push
xlat
xchg
fdivr
jnp
dec
and
cmp
out
cmp
xchg
movs
jo
xor
and
mov
sbb
xchg
or
cli
js
shr
(bad)
jl
mov
jb
and
pop
out
push
inc
outs
dec
jge
push
daa
and
adc
(bad)
ins
ins
mov
repnz
test
jp
or
adc
mov
inc
mov
test
or
ret
pop
into
repz
in
pop
fisubr
out
xchg
push
jo
mov
add
loopne
movs
mov
dec
out
fwait
add
cmps
dec
fwait
jle
scas
adc
adc
add
enter
sub
or
mov
xor
aas
cli
mov
fcomp
out
jle
rcr
inc
push
(bad)
rcl
int3
out
ret
and
dec
sahf
mov
dec
mov
in
dec
mov
cmp
adc
pop
rcl
and
push
lahf
sub
pusha
lahf
shr
jo
test
mov
enter
add
jg
mov
cs
(bad)
push
imul
jnp
sahf
in
or
out
pop
icebp
cmps
cli
test
inc
gs
cmp
and
in
push
sbb
mov
sub
imul
push
rol
std
pop
shrd
enter
fsub
mov
jnp
test
je
mov
iret
repnz
outs
push
add
daa
mov
or
sbb
es
pop
fild
pop
lds
or
dec
xchg
imul
movs
ja
loopne
xor
popa
mov
stos
sbb
sub
out
imul
loop
pop
xchg
loopne
cmp
imul
cmp
test
movs
cmp
or
pop
rcl
bound
mov
js
aam
push
push
cmp
aaa
sbb
lock
or
fwait
inc
inc
mov
jb
pushf
cmp
xor
jb
mov
jns
pop
and
hlt
gs
loope
add
fnstenv
jg
(bad)
adc
fld
cli
xor
mov
arpl
repnz
inc
(bad)
adc
inc
sbb
imul
(bad)
out
movs
mov
xchg
fisttp
jl
in
xor
xchg
cmps
sub
mov
mov
sbb
lods
adc
icebp
sub
retf
fisttp
xlat
sbb
sbb
jo
jl
jmp
cdq
sbb
imul
popf
pop
jmp
pop
mov
xor
int
mov
adc
ret
rol
ficomp
pop
(bad)
mov
mov
inc
sub
repnz
pop
jp
out
lods
pop
test
arpl
add
pop
imul
clc
mov
leave
shl
inc
out
mov
and
mov
mov
fisttp
cmp
outs
push
dec
jbe
dec
iret
loopne
dec
adc
loope
mov
push
aas
mov
cmps
push
mov
or
xor
vcvtss2si
movs
imul
pop
inc
jno
dec
push
cmp
jns
cdq
xor
imul
add
and
xchg
push
and
bound
sahf
add
cdq
leave
push
test
(bad)
pop
out
dec
call
fwait
dec
sbb
nop
daa
xor
jg
lods
je
mov
mov
(bad)
or
cmp
(bad)
popa
ret
pop
mov
xchg
int3
xchg
call
je
adc
fs
lahf
(bad)
cmp
mov
loope
pop
(bad)
mov
and
mov
push
xchg
call
leave
mov
lds
xor
sbb
xchg
fistp
dec
pop
jmp
ret
lea
out
repnz
xor
(bad)
jb
jno
shr
adc
aad
pop
lods
jb
(bad)
inc
mov
dec
mov
adc
in
cld
and
adc
dec
sahf
retf
mov
retf
into
fucomip
das
nop
stos
push
adc
data16
sti
popa
loope
cmp
pop
jb
mov
mov
jne
inc
sub
inc
jmp
xchg
lock
aam
push
adc
iret
popa
cmp
aam
inc
mov
sbb
adc
addr16
push
lock
into
jmp
add
bound
xor
add
aas
inc
test
ret
mov
mov
mov
(bad)
or
repz
pop
cs
in
pop
ror
punpcklbw
jl
sbb
(bad)
sub
xchg
das
test
push
sub
jge
js
cvtps2pi
push
mov
add
sub
push
ins
in
cmp
js
dec
fdiv
sbb
fsubp
(bad)
iret
push
neg
pop
sub
cli
ficomp
mov
fcomp
std
(bad)
test
jle
push
pop
adc
adc
mov
sub
repnz
les
sbb
test
jo
sub
ins
iret
cmp
bound
sbb
mov
popf
adc
std
in
hlt
pop
repz
cli
dec
icebp
mov
data16
pop
sbb
inc
pop
scas
test
test
jne
add
sub
jmp
call
out
xchg
cdq
mov
jle
push
inc
ja
cmps
mov
jp
jo
fiadd
adc
aaa
in
movs
ret
xchg
adc
pop
(bad)
adc
fcmovnbe
aad
repz
test
popf
push
and
rol
(bad)
xchg
pop
loop
pop
or
lahf
sub
sub
test
fld
push
mov
mov
fistp
fldcw
mov
mov
sub
adc
cmp
jmp
jge
jns
pop
sub
xor
sbb
and
test
ficom
xchg
sub
sbb
outs
ficomp
stos
mov
sub
or
and
xor
inc
jl
dec
jmp
retf
sbb
fidiv
into
inc
inc
fwait
movs
xor
mov
push
mov
adc
test
inc
cmp
fs
cwde
inc
and
jle
mov
mov
lahf
mov
imul
xchg
add
nop
fcom
out
adc
and
mov
scas
push
add
dec
out
ja
xchg
out
add
push
push
cmps
movs
inc
xchg
or
cmp
sbb
adc
and
std
add
xchg
sbb
retf
jne
adc
fmul
ret
fisub
xchg
leave
push
cld
lahf
iret
jmp
nop
js
and
cmps
dec
and
or
lock
push
jb
or
inc
ja
push
sub
push
add
jg
retf
xchg
or
xchg
xchg
xor
and
add
fs
cmp
jnp
mov
jmp
jmp
es
push
jae
cdq
fldcw
dec
lock
mov
cs
arpl
sub
mov
xchg
xor
aaa
dec
test
sar
(bad)
lods
mov
jae
cmp
imul
mov
mov
and
movs
in
sbb
adc
and
cmp
xchg
dec
nop
js
xor
sub
cmp
jne
jae
cmps
daa
pop
jb
or
icebp
xchg
jg
mov
pop
and
xor
mov
adc
inc
dec
mov
xchg
in
test
jno
not
jmp
es
mov
inc
push
out
dec
sbb
pop
ss
(bad)
mov
xchg
bound
push
sahf
pushf
mov
xor
iret
repnz
int
cmps
sub
jge
test
addr16
out
mov
ror
(bad)
lock
inc
leave
xor
mov
pop
jno
add
loopne
adc
imul
mov
push
jge
repnz
or
xchg
(bad)
lods
rol
push
stos
test
fadd
adc
int3
push
push
fcmovnbe
test
cmc
pushf
or
mov
mov
fdiv
addr16
movs
out
adc
das
into
popa
adc
xor
mov
sbb
std
pop
(bad)
mov
sti
stc
clc
in
sub
push
gs
shr
xor
daa
out
sbb
(bad)
jmp
out
dec
lods
(bad)
fst
xchg
imul
aam
mov
lds
cmp
xchg
std
jp
cli
aam
mov
inc
dec
cmc
loop
call
xchg
(bad)
retf
sub
mov
jmp
xor
mov
arpl
and
pop
(bad)
fmul
adc
test
ja
jmp
and
mov
(bad)
ja
cmps
jae
inc
push
ret
jns
sar
movs
(bad)
push
sub
xor
xchg
mov
aaa
push
xchg
pop
fist
pop
push
dec
push
mov
sti
retf
push
mov
loopne
arpl
sub
and
sub
adc
and
imul
fild
jb
xlat
mov
shl
shl
inc
or
jg
adc
jne
lahf
aaa
xor
mov
jmp
fidivr
jl
sti
ss
pop
pushf
and
jg
and
push
out
(bad)
jmp
mov
(bad)
clc
stc
rcl
movnti
push
adc
and
int
dec
jae
adc
movs
adc
lock
fstp
pop
fnstcw
pop
rcl
fcomp
jne
push
push
fsub
fstp
daa
mov
xchg
mov
stc
retf
nop
inc
retf
rcl
push
fld
jge
mov
xor
jno
push
lock
mov
nop
push
push
int3
xlat
jmp
dec
xchg
jbe
or
gs
gs
add
inc
fimul
std
pop
or
jns
jg
cs
jne
in
imul
mov
sar
retf
ja
sub
inc
pop
ret
or
test
xor
push
inc
mov
loopne
inc
mov
xchg
ret
(bad)
pop
mov
xor
in
fwait
cdq
mov
xchg
lods
clc
test
jnp
mov
std
call
jp
and
ds
out
arpl
int
mov
in
or
repnz
je
jp
imul
maxps
add
mov
and
cs
aaa
add
dec
sub
dec
dec
cmp
stos
dec
mov
jae
out
shl
and
push
(bad)
and
neg
pop
inc
mov
fisubr
xor
lds
adc
push
mov
push
mov
stos
pop
jl
xor
dec
push
sub
dec
lea
jg
test
jmp
push
or
push
retf
push
add
jns
jbe
lea
xchg
les
mul
jmp
mov
push
xor
add
int3
xor
xchg
daa
mov
sbb
iret
push
js
xlat
add
add
xchg
ret
rol
adc
out
hlt
sti
push
add
arpl
and
jmp
lods
jmp
dec
xor
mov
fcom
sub
mov
fcom
pop
xchg
test
sub
jmp
fwait
jmp
jl
sub
fisubr
test
pop
sub
ud0
mov
cmp
(bad)
fmul
jmp
cli
and
add
inc
dec
sbb
ret
repz
pop
push
cmp
push
sbb
cmp
fwait
and
ss
mov
sub
mov
popf
jnp
pop
rcl
cdq
lds
cmp
or
sub
mov
and
out
or
add
add
sbb
fmul
loop
mov
(bad)
fimul
(bad)
fdiv
lock
pop
icebp
xchg
mov
aaa
lods
fdivr
and
or
push
loop
mov
sbb
clc
test
and
xlat
scas
jo
das
jbe
stos
dec
movs
retf
dec
loopne
mov
add
pushf
test
das
je
mov
mov
add
xor
jbe
add
sub
push
movs
sub
sbb
pop
push
imul
inc
arpl
inc
ret
inc
adc
in
mov
sub
into
int3
push
or
jg
arpl
out
jb
ins
les
imul
sub
aam
sub
stc
mov
and
movs
xor
retf
ret
aad
and
mov
mov
xchg
fiadd
xchg
imul
xor
mov
xchg
rol
and
adc
ins
or
push
and
cmc
jno
pop
div
mov
mov
mov
sub
mov
dec
lock
xor
mov
inc
sbb
xchg
mov
fst
movs
std
xor
xchg
(bad)
in
dec
test
inc
ror
sbb
xchg
jmp
pop
mov
dec
ret
inc
sbb
(bad)
loop
adc
scas
lea
jae
ja
jl
sti
pop
jo
mov
cmp
fdivr
scas
imul
cmps
sub
test
inc
jbe
popf
gs
and
popa
int
lods
rol
jl
mov
pop
adc
add
fnstcw
repz
scas
gs
cmp
lock
inc
movs
sub
fisttp
test
lahf
lds
jmp
cmp
jle
mov
jl
in
xor
fiadd
stc
inc
xchg
inc
push
xor
ins
ds
(bad)
sub
push
sbb
out
push
push
xor
(bad)
mul
les
icebp
inc
rol
in
mov
aaa
xchg
mov
mov
sub
xchg
lds
or
sub
fwait
and
jns
dec
xchg
dec
movs
ret
mov
fldcw
das
cmc
push
paddb
dec
lds
clc
ja
jno
inc
sbb
mov
mov
adc
adc
std
aam
sbb
push
movs
xchg
jne
jne
popf
add
xlat
jge
sub
in
add
sahf
in
ret
sub
ds
iret
pop
fucom
push
loop
loope
pop
mov
push
dec
iret
pusha
ficom
add
aas
(bad)
loop
lea
arpl
and
out
jbe
mov
or
cmp
ficom
fst
ror
jl
ret
jb
pop
mov
mov
push
sbb
sti
push
add
fnstcw
dec
adc
in
xchg
retf
add
into
icebp
test
mov
dec
mov
jo
xchg
pop
jge
xor
push
mov
ret
sub
push
push
pop
mov
xor
sti
add
mov
cmp
adc
je
mov
add
outs
xlat
loope
in
push
cmp
jmp
adc
pop
neg
add
daa
inc
xchg
das
jno
pop
popf
add
push
(bad)
aaa
addr16
shl
sahf
xchg
pop
dec
jmp
push
sub
sub
mov
loop
(bad)
push
call
sbb
(bad)
mov
(bad)
cmp
add
mov
call
or
pop
adc
int3
(bad)
cmp
test
push
lods
push
ins
mov
dec
lods
dec
and
adc
(bad)
out
sub
add
adc
add
adc
out
xor
xchg
xor
shl
push
adc
inc
fsub
and
mov
(bad)
cmps
fistp
lds
aas
inc
sub
test
xlat
in
jno
xor
adc
sub
(bad)
adc
cmp
add
mov
add
cmps
data16
dec
addr16
gs
hlt
xor
inc
mov
pushf
xchg
xor
mov
retf
dec
mov
test
cdq
lods
mov
arpl
mov
push
fisttp
sbb
jbe
dec
xchg
sar
push
sub
in
hlt
sub
push
test
les
stc
dec
pop
int
cmp
jae
dec
test
icebp
xchg
in
jb
jb
xchg
mov
cwde
icebp
push
stos
icebp
dec
scas
or
fwait
(bad)
cwde
sub
cli
gs
les
inc
dec
ja
inc
(bad)
jg
dec
xor
daa
add
aad
fsubr
call
jmp
sub
test
jmp
int
mul
jmp
jnp
mov
inc
test
mov
xchg
cmp
ins
enter
fld
push
mov
(bad)
dec
add
xchg
lahf
icebp
test
nop
test
add
pop
lods
or
inc
or
popa
jb
mov
aam
in
xor
in
push
jns
inc
into
mov
addr16
dec
bound
mov
inc
sbb
adc
or
dec
jbe
ret
lahf
xlat
or
ss
jb
fs
jne
(bad)
(bad)
in
xchg
sahf
mov
sbb
mov
pop
add
cmc
test
jmp
aaa
idiv
pop
add
repz
cmp
lea
jecxz
jb
add
out
outs
xor
sbb
imul
pop
(bad)
out
pop
es
xor
mov
or
sahf
xchg
xor
mov
ret
retf
aad
xor
sub
cli
ss
(bad)
fadd
jmp
xor
sub
fisttp
retf
ja
imul
loope
sti
push
sti
mov
outs
icebp
rcr
and
jae
movs
and
sbb
pop
ins
adc
push
std
neg
mov
ja
scas
movs
div
or
in
out
and
sbb
movs
loope
xlat
cmp
jbe
fild
mov
call
mov
(bad)
xor
repnz
jecxz
push
xchg
push
mov
add
popf
sbb
mov
call
(bad)
popf
xor
sbb
jge
repnz
clc
mov
fcomi
stos
test
push
pushf
gs
dec
add
xbegin
mov
loop
outs
in
shl
or
ins
std
ja
test
sar
xor
std
pushf
push
dec
mov
aam
lahf
das
and
jns
les
sub
cmp
and
aas
mov
mov
cmp
xchg
mov
out
or
jmp
dec
leave
sahf
dec
and
dec
push
cs
imul
mov
xchg
bound
out
aas
hlt
hlt
test
jbe
cli
inc
xchg
jle
aaa
sbb
inc
and
xor
dec
push
mov
out
movlps
cmps
ret
jmp
jb
mov
in
push
ds
add
mov
push
xchg
add
jo
pand
cmp
ins
lds
dec
fwait
std
cld
fstp
xor
dec
fwait
xlat
ins
call
sbb
aad
push
xor
xchg
xchg
cmps
dec
fsub
in
jmp
popa
shl
jl
pop
movs
and
out
jp
and
inc
ins
and
fcom
(bad)
cmps
pop
add
add
idiv
xchg
out
imul
sub
xchg
scas
jl
jmp
jecxz
in
mov
mov
dec
arpl
movs
leave
xchg
loopne
cmp
nop
(bad)
xor
push
clc
jnp
xchg
in
std
xchg
or
imul
out
and
sti
inc
jmp
add
xchg
cmps
(bad)
lds
mov
mov
sbb
mov
lods
ja
sub
push
mov
rcl
mov
lods
pop
push
jnp
jmp
dec
inc
and
inc
xor
xor
fiadd
(bad)
movs
mov
pop
pop
sahf
(bad)
mov
cmp
sbb
ret
inc
call
cmc
int
inc
mov
hlt
push
xchg
test
jmp
iret
sbb
sahf
imul
add
pop
mov
pop
jmp
mov
adc
bound
rcl
mov
inc
(bad)
(bad)
mov
ins
je
mov
popa
cmp
xchg
out
cld
stos
push
dec
xabort
mov
fstp
aad
mov
dec
fnstenv
mov
sub
lea
out
cwde
and
out
dec
lock
sub
in
dec
out
(bad)
or
rcr
cmp
xor
mul
pop
std
iret
or
push
sar
push
pop
retf
cmp
cmove
jb
dec
retf
pop
xchg
mov
inc
xchg
in
scas
xchg
cmc
fst
sub
mov
push
int
mov
pop
adc
int
push
sub
jl
xlat
xor
xor
push
dec
jb
push
test
mov
add
dec
imul
loop
xchg
mov
(bad)
je
pop
jb
mul
aaa
jl
pop
not
div
(bad)
cmp
xchg
dec
imul
sbb
out
cmps
jns
jne
inc
movs
or
pop
mov
mov
mov
sbb
sub
rcr
enter
aam
idiv
add
je
iret
mov
mov
cmp
cmps
xchg
adc
mov
shl
dec
out
into
mov
shr
std
data16
mov
pop
stos
xlat
retf
fs
cmc
mov
cs
into
shr
jge
lods
movs
mov
sti
retf
or
and
mul
xchg
pushf
add
xchg
xor
stos
es
fs
mov
sbb
es
push
sti
lods
shl
mov
lods
pop
cmp
test
lods
or
sub
jbe
stos
test
mov
mov
call
cld
push
adc
adc
imul
adc
jnp
sbb
mov
aas
mov
pop
and
jb
(bad)
dec
or
dec
cmps
dec
adc
inc
sbb
cmp
sahf
push
in
nop
sar
dec
inc
imul
test
vmptrst
sub
cmp
shl
imul
fimul
push
xchg
push
dec
pop
adc
dec
mov
lock
ss
out
das
lock
(bad)
xchg
fsubr
ins
inc
sub
jecxz
outs
inc
popf
push
(bad)
fisttp
movs
dec
pop
or
mov
dec
loope
retf
xchg
int
das
jmp
mov
pop
dec
mov
mov
std
(bad)
call
cmp
lea
test
inc
(bad)
repnz
jmp
mov
inc
mov
test
dec
daa
test
in
pop
leave
pop
add
xlat
sbb
stos
add
mov
fisubr
hlt
dec
dec
dec
popa
les
xchg
xor
(bad)
jge
inc
add
dec
cmp
inc
xchg
iret
jmp
sub
addr16
and
pop
and
push
inc
xchg
add
mov
xor
gs
push
loope
mov
retf
(bad)
adc
push
mul
and
cmp
sub
scas
push
nop
pusha
and
mov
div
rcl
int
push
inc
inc
outs
ds
(bad)
in
jnp
loope
xlat
mov
xor
jp
call
ret
add
cmc
hlt
ins
push
xchg
xlat
out
xlat
or
sbb
into
mov
xchg
cmp
sar
add
xchg
les
jge
push
jmp
in
popf
push
les
das
addr16
mov
jbe
dec
adc
mov
pop
ror
xchg
shl
mov
sub
jmp
in
jle
scas
retf
cmp
js
cs
out
data16
ss
out
mov
dec
xor
sbb
stos
ins
xchg
push
jmp
es
inc
push
in
or
push
(bad)
pop
jo
cmp
aam
cli
mov
ins
imul
fbld
fist
ins
push
adc
jle
mov
lahf
mul
add
pop
lods
cwde
jo
or
pop
bound
mov
pop
and
(bad)
push
and
push
xchg
jns
ss
fs
ins
push
jmp
and
jmp
bound
push
out
ins
loopne
bound
cmps
fimul
pop
(bad)
call
cmps
call
das
addr16
fist
push
inc
cmps
pop
daa
mov
sahf
cmp
scas
inc
jo
push
pmulhw
mov
fisubr
es
mov
add
dec
aas
jmp
fnstenv
inc
or
sub
pusha
sbb
mov
mov
fwait
repz
mov
std
dec
dec
xor
mov
dec
jno
mov
test
sub
push
out
pop
ja
pop
bound
gs
ds
test
xchg
in
loop
and
xchg
mov
pop
xor
retf
cmps
(bad)
mov
cmp
fild
movs
in
gs
sbb
rol
xor
cmp
inc
fiadd
xchg
ins
cmp
inc
sbb
inc
push
enter
mov
and
pop
lock
sbb
push
xor
std
mov
out
sbb
xor
sbb
outs
xor
push
sti
pushf
push
xchg
sub
cmps
pop
xchg
xor
imul
mov
aas
leave
retf
shl
out
mov
das
xor
jmp
bound
cmps
dec
adc
fmul
cwde
xor
movs
xchg
inc
adc
cdq
mov
popf
rcl
mov
push
add
shr
movs
int
adc
push
out
popf
idiv
dec
out
cli
cmp
adc
lahf
ret
adc
mov
mov
xlat
inc
retf
xchg
push
jb
stos
xchg
lock
mov
fstp
add
popf
push
jae
arpl
sub
sbb
inc
or
jo
sub
mov
jecxz
je
iret
cmp
dec
stc
fisubr
rol
ret
les
stos
scas
popf
lods
fild
rol
test
shl
inc
sbb
pop
rcr
adc
movs
mov
push
rcr
add
in
adc
sti
dec
xor
and
and
mov
inc
rcl
jecxz
dec
adc
loopne
mov
outs
mov
pop
(bad)
pusha
call
movs
cli
lods
push
xchg
push
xchg
dec
in
sub
adc
pop
(bad)
cdq
inc
jno
xchg
jb
scas
int
and
inc
cmc
in
clc
and
aam
mov
mov
leave
push
sub
cmps
into
test
popf
mov
mov
add
repz
push
imul
pop
rcr
mov
xchg
jb
aam
xchg
xor
mov
je
pusha
and
jle
push
mov
push
popf
(bad)
sti
or
cmps
aad
ret
ss
ret
gs
mov
jl
jl
jle
jge
xchg
lock
mov
fcmovbe
pop
cmps
pusha
es
cwde
fdivp
stc
pop
mov
(bad)
and
cmp
xchg
outs
inc
mov
inc
xor
push
loopne
add
aad
pop
and
test
add
push
jmp
push
cmps
mov
icebp
jecxz
mov
add
pushf
enter
xor
mov
sbb
mov
xor
mov
jle
dec
or
retf
(bad)
xchg
pop
mov
in
jmp
jae
or
mov
mov
out
wbinvd
mov
std
sub
xchg
mov
iret
popa
mov
ins
sar
mov
and
pop
neg
mov
addr16
mov
adc
daa
fs
adc
or
dec
(bad)
inc
test
lahf
outs
pusha
mov
push
shl
test
or
or
out
and
sub
sbb
aas
cmp
jo
mov
add
lods
xchg
mov
add
jae
xlat
outs
daa
jnp
push
xlat
xor
cdq
(bad)
sbb
push
shl
cmps
adc
sub
and
jmp
fmul
(bad)
mov
mov
push
das
or
jnp
scas
mov
sbb
jns
xor
test
mov
mov
fld
push
cmp
pop
mov
push
dec
pop
(bad)
imul
ret
(bad)
in
sbb
loop
jmp
add
cmp
cmps
fistp
push
push
mov
push
aas
sub
sub
fstp
retf
xchg
aaa
lods
ins
cmp
and
pop
sbb
jmp
ins
push
aam
mov
jne
jp
sbb
and
loope
adc
sub
neg
pop
mov
sti
mov
popf
in
aaa
mov
je
in
iret
jmp
sbb
mov
call
out
cmp
xor
sub
loope
cmp
fiadd
jo
or
(bad)
pop
fst
pop
xchg
jecxz
sub
fcom
jbe
sbb
int3
add
lea
xchg
push
(bad)
fld
xor
ins
cmp
cmc
cld
leave
cmps
or
pop
mov
sbb
outs
sbb
loop
push
and
push
mov
jmp
pop
mov
outs
call
test
adc
mov
lods
mov
shl
adc
pop
in
mov
jmp
inc
jae
pop
lock
jns
pop
pop
cmp
pop
dec
xchg
mov
pop
adc
lods
cwde
pushf
mov
pop
rol
xor
mov
cmps
cmp
xchg
aam
retf
jp
xchg
sub
test
mov
push
imul
sbb
cdq
out
and
in
sbb
push
jmp
mov
pusha
hlt
popf
test
outs
call
mov
bound
dec
scas
mov
add
inc
add
lods
xchg
push
(bad)
mov
rol
sbb
ds
xor
jbe
imul
(bad)
lahf
jae
jmp
jl
ret
call
out
mov
sub
mov
lods
dec
sbb
xor
loopne
fsubr
cs
mov
je
mov
in
xchg
lods
mov
retf
pop
mov
mov
cmp
in
pop
mov
les
ror
into
sbb
fdiv
or
or
pop
movs
xchg
cwde
and
mov
mov
jmp
inc
nop
inc
lock
sub
(bad)
adc
aaa
mov
add
test
pop
and
xor
dec
lahf
les
and
stos
nop
hlt
into
xchg
cwde
pop
sahf
pop
xchg
sub
aas
aaa
dec
adc
popf
shr
sub
pop
test
mov
clc
mov
aas
jno
dec
dec
pop
jns
inc
inc
mul
mov
neg
pusha
jp
add
out
dec
adc
fsubr
jno
lahf
sbb
das
or
push
call
lahf
retf
inc
fwait
sub
ret
sahf
sub
stos
arpl
xchg
out
mov
(bad)
xor
outs
imul
push
ret
fbstp
adc
dec
dec
and
loope
repnz
xor
mov
test
pop
stos
clc
inc
cmp
enter
in
shr
sub
cmps
jno
mov
cmp
outs
stos
sub
aaa
repnz
sar
xor
jo
popf
fwait
dec
dec
cld
popa
daa
loope
mov
dec
inc
or
jbe
mov
xor
or
add
into
clc
jl
xlat
jns
push
mov
hlt
dec
dec
push
xor
mov
out
rcr
push
pop
enter
xchg
fidiv
mov
ja
xor
mov
enter
xor
ss
mov
test
mov
and
cmc
cmps
cld
sub
and
lods
sub
test
sar
scas
aam
lods
dec
adc
jno
stos
adc
fistp
inc
sbb
es
scas
cmps
and
or
cli
or
cwde
pop
ins
cmc
cmp
call
pop
sbb
inc
adc
xchg
sbb
mov
(bad)
mov
pop
inc
imul
xchg
stos
out
mov
add
or
cwde
jb
mov
out
inc
sub
adc
in
mov
or
push
js
in
fmul
pop
ror
inc
dec
popf
int3
pop
aam
fcom
or
xchg
hlt
jge
iret
(bad)
lods
mov
sbb
in
inc
mov
mov
jecxz
pop
out
movs
imul
mov
popa
xor
cdq
cwde
sbb
jmp
dec
cli
fiadd
dec
push
xchg
cmp
lock
inc
pop
pop
(bad)
nop
leave
shr
in
jle
stc
jb
aas
xchg
out
xlat
dec
ins
fs
sbb
push
loop
in
cmps
pusha
jae
cmp
and
and
sbb
pop
or
mov
sbb
push
mov
xchg
fiadd
(bad)
leave
nop
mov
mov
mov
aas
sub
cld
movs
mov
(bad)
in
push
call
xchg
xchg
inc
mov
pusha
adc
mul
cmps
retf
add
push
movs
mov
jne
lds
lods
call
fwait
dec
hlt
inc
add
xchg
or
pop
or
psubw
pushf
mov
sbb
int3
xchg
xor
inc
dec
stc
sbb
add
retf
loope
inc
mov
xor
pop
in
bound
outs
fs
jecxz
in
ss
(bad)
cmps
push
sub
ds
jge
and
mov
xchg
das
pop
scas
mov
pusha
movs
and
mov
adc
xor
push
lock
pop
nop
mov
lahf
dec
mov
cs
push
les
adc
(bad)
in
push
arpl
mov
repnz
js
add
push
imul
sub
loopne
ins
push
xchg
pop
js
mov
shr
dec
or
mov
sahf
and
aad
dec
enter
jge
mov
sbb
scas
ja
outs
call
movs
mov
and
cmc
div
out
packsswb
sbb
test
inc
gs
sub
fwait
jp
fsubr
inc
add
adc
lahf
fwait
push
jge
neg
xchg
(bad)
jecxz
pop
xchg
cmc
inc
xchg
in
and
sub
and
mov
jnp
jne
fnstcw
retf
inc
mov
(bad)
data16
retf
ret
aam
and
ja
(bad)
xchg
xchg
push
pop
dec
out
inc
pushf
jg
not
dec
sub
and
and
aam
lea
out
cmp
lahf
jno
sub
sbb
(bad)
mov
aad
add
arpl
pop
inc
jle
call
arpl
out
fild
mov
xor
dec
cmp
ss
jge
xchg
jb
adc
clc
sbb
add
es
mov
fdivr
(bad)
and
movs
aaa
mov
dec
add
adc
xchg
out
xor
test
adc
cmp
ins
adc
mov
ret
das
cwde
sbb
xchg
or
aam
test
adc
add
pop
cmp
push
pop
icebp
xchg
xchg
adc
mov
je
xor
mov
adc
mov
js
dec
mov
in
mov
pop
cmovno
imul
pop
cdq
nop
ss
or
xchg
std
mov
cmp
pop
mov
ja
fwait
in
dec
xor
gs
fadd
pop
aas
mov
pop
mov
test
jmp
jne
in
xchg
pop
(bad)
out
retf
pop
pop
arpl
mov
cld
sub
daa
out
sar
mov
pop
hlt
mov
mov
and
inc
sbb
xchg
mov
(bad)
cwde
or
aaa
out
and
cmc
in
mov
lock
cmps
or
inc
add
adc
jle
add
jne
and
ret
sbb
sbb
mov
stos
pop
mov
ins
adc
cs
test
mov
retf
mov
push
das
in
push
dec
push
or
in
ins
clc
lds
ret
mov
and
pop
mov
adc
or
cmps
(bad)
sbb
leave
fcmovnu
jbe
push
xor
ror
mov
mov
pushf
imul
retf
add
gs
test
test
jmp
das
add
repz
test
daa
jle
add
dec
fwait
push
lods
pop
xor
jecxz
jae
or
(bad)
(bad)
out
mov
mov
icebp
sub
out
repz
jb
xchg
gs
movs
adc
lock
js
jmp
aam
sbb
jnp
dec
out
and
and
aam
jl
sub
sub
test
jp
and
(bad)
xor
cmc
popa
movs
or
cmp
jmp
mov
ins
test
push
mov
daa
push
inc
pop
ret
iret
lds
xchg
adc
in
data16
cdq
and
dec
sbb
imul
aam
lea
add
out
mov
aad
mov
imul
mov
pop
sub
mov
jecxz
test
outs
adc
dec
in
dec
mov
pusha
mov
dec
not
js
imul
push
pushf
pusha
xor
ret
fadd
jb
sub
and
enter
ds
pop
lea
scas
call
dec
stos
xchg
push
cli
mov
xchg
ror
push
sub
pop
rcr
das
push
out
and
fld
sti
mov
lods
mov
lods
sti
push
inc
outs
xor
pop
imul
mov
daa
cmp
(bad)
or
enter
fdivr
adc
repnz
push
xchg
pop
(bad)
outs
lods
lods
rcr
into
jae
mov
lods
or
call
sahf
ins
loopne
or
sbb
retf
imul
and
out
mov
cmp
mov
dec
add
add
and
test
mov
and
fbstp
scas
idiv
inc
or
adc
(bad)
jg
push
and
test
mov
push
and
int3
es
iret
sub
iret
in
movs
hlt
or
sub
mov
nop
adc
sub
movs
dec
adc
mov
add
inc
mov
(bad)
fdivp
in
dec
test
or
jnp
pop
inc
enter
sbb
fscale
loopne
pop
or
mov
pop
in
or
adc
cmp
xor
and
sbb
daa
mov
mov
mov
pop
fidivr
dec
fsub
iret
adc
inc
ret
loop
add
xor
loopne
sbb
jbe
ficom
sub
(bad)
fdiv
pushf
enter
inc
fsub
dec
add
das
pop
loope
sbb
pop
stos
dec
push
pop
dec
add
adc
lahf
jno
sub
fldcw
jo
mov
push
dec
inc
sbb
inc
xchg
out
mov
add
pop
aaa
sar
je
jge
mov
mov
into
inc
pop
gs
push
and
or
mov
cmps
push
adc
mov
xor
call
xchg
aam
push
sub
inc
outs
inc
sbb
inc
add
and
push
pop
adc
les
ficomp
js
fldenv
call
mov
inc
xlat
scas
dec
mov
aas
push
mov
inc
sub
mov
jecxz
or
imul
xchg
fs
and
rcr
jne
loopne
rcr
aad
jle
inc
mov
xchg
sbb
adc
(bad)
ins
cli
mov
inc
add
push
mov
in
arpl
push
cwde
test
push
pusha
pop
mov
pop
mov
cmp
mov
outs
clc
xor
mov
(bad)
adc
mov
out
jle
mov
pop
jo
xor
mov
fistp
sub
or
pop
mov
call
rcl
mov
mov
push
shl
mov
mov
mov
sub
inc
inc
call
not
test
js
lahf
in
xor
jnp
jno
ins
pop
call
sti
fdivr
adc
pop
cdq
scas
cmp
rcr
xor
pop
pushf
pop
jo
xchg
and
daa
cmps
push
or
retf
dec
cmp
jmp
sub
loopne
xchg
cmps
xchg
cld
cld
addr16
and
pop
mov
iret
xor
add
jecxz
aaa
jge
dec
test
in
movs
ret
push
push
out
jecxz
inc
mov
clc
std
adc
or
adc
sub
pop
inc
mov
dec
daa
jnp
sub
shl
mov
inc
pop
sar
and
ja
jmp
mov
mov
mov
mov
in
in
daa
imul
push
or
jg
adc
jecxz
mov
inc
iret
loope
cli
push
addr16
cwde
ret
inc
mov
inc
mov
shl
lea
sub
lahf
jb
pop
and
outs
dec
sub
es
call
inc
daa
(bad)
jg
jg
pop
adc
inc
out
int
push
retf
xlat
jno
rcr
inc
imul
mov
lods
cmps
mov
jecxz
icebp
jmp
adc
or
mov
in
(bad)
push
lods
or
sbb
pop
dec
sub
mov
xchg
int
cdq
adc
repnz
push
adc
ror
cmp
movs
lds
sub
ins
jne
xor
jg
push
sbb
add
clc
xchg
jmp
mov
fmul
ss
fwait
pop
iret
xchg
sub
sbb
in
ja
and
mov
sub
stc
in
ins
xchg
or
movs
push
call
in
cdq
stos
jecxz
jecxz
loopne
xchg
jp
sahf
push
out
sub
lods
mov
aas
enter
push
xchg
das
loop
mov
dec
ror
mov
push
and
cmp
fbld
cmp
mov
cmps
or
or
jnp
lds
test
add
pusha
mov
add
jecxz
inc
lods
jb
and
jmp
pop
dec
test
mov
int
loopne
nop
movs
retf
jle
aaa
xlat
daa
out
ret
cdq
ss
in
ja
jno
or
jge
sbb
xchg
xchg
out
inc
push
in
bound
mov
jmp
js
push
add
xor
push
ds
inc
test
enter
cmp
call
sbb
pop
dec
jecxz
addr16
mov
mov
out
lds
dec
mov
test
pusha
fsub
out
mov
or
jb
xchg
jp
sbb
imul
adc
push
inc
and
aaa
pop
ror
(bad)
inc
in
push
xchg
jle
aas
in
dec
fucomp
xor
push
cmovg
ds
and
xor
sub
pcmpgtd
popf
jns
pusha
cmp
retf
xchg
pusha
xchg
or
dec
dec
sti
inc
daa
outs
(bad)
mov
cmps
ins
idiv
movs
dec
mov
outs
pop
in
mov
daa
dec
sbb
mov
xchg
iret
mov
sub
xchg
and
mov
or
ffree
mov
cmps
popf
gs
arpl
or
mov
inc
mov
jae
sub
scas
aad
push
push
or
inc
sahf
adc
cmps
aad
pop
xchg
cmp
ins
xchg
dec
mov
fbld
inc
jle
mov
icebp
arpl
fnsavew
sub
jmp
dec
xchg
mov
and
sub
sub
sbb
jecxz
leave
call
or
in
add
jmp
push
mov
(bad)
xlat
ret
pop
out
loope
dec
mov
hlt
popa
jns
sbb
outs
and
pop
in
iret
xchg
pushf
repz
jmp
and
dec
aam
data16
mov
xor
in
(bad)
int3
mov
sbb
call
ficom
or
fidiv
fwait
push
adc
inc
js
cdq
pop
scas
mov
pop
pop
inc
ins
xchg
out
fxch
fist
fwait
pop
pop
xchg
pop
or
out
and
sar
dec
shr
fisttp
xchg
ffree
lods
add
mov
sub
pop
retf
out
xor
or
retf
out
jmp
sub
jmp
push
into
sbb
out
loopne
mov
cwde
test
push
das
loope
cwde
cmp
aaa
das
push
adc
add
sbb
pop
push
sub
icebp
dec
mov
sar
push
fadd
popf
xor
jnp
push
cld
in
call
mov
int3
or
mov
in
movs
(bad)
pop
dec
in
je
xor
xlat
ins
inc
and
inc
(bad)
mov
scas
es
(bad)
cmp
cmp
pop
in
fsubr
aas
rcl
add
fidiv
sub
jno
mov
ret
jbe
cmp
in
loop
loopne
aam
loope
mul
push
aad
push
inc
jle
and
scas
shl
mov
sahf
aas
paddsw
mov
dec
jae
lea
jno
cmps
jo
adc
xor
adc
jg
cmp
and
lods
mov
out
in
adc
repz
mov
sahf
push
(bad)
pop
pop
repnz
movs
xchg
cdq
les
push
xchg
arpl
arpl
iret
loop
int3
dec
test
into
repnz
jecxz
stos
push
sub
stos
retf
jmp
cld
add
inc
mov
mov
pop
lods
mov
sbb
sbb
xchg
inc
adc
xchg
(bad)
sbb
cmp
jno
jmp
or
ja
inc
out
sbb
pop
and
cwde
fs
sbb
enter
sti
mov
pusha
ret
stc
xchg
add
inc
pop
cmc
jno
or
sbb
jns
fidiv
jg
out
fist
ret
or
daa
pop
cmp
je
fsubr
out
xchg
inc
push
dec
js
push
or
xor
jno
jmp
fcom
lods
mov
jle
lea
xor
mov
in
dec
mov
fdiv
add
and
sub
lock
cwde
addr16
pop
repnz
out
or
aaa
enter
or
fisttp
or
sbb
adc
dec
inc
mov
add
fdivr
cmc
fwait
ins
dec
sbb
sbb
fist
fbstp
push
data16
sahf
scas
cmp
inc
mov
in
lock
push
mov
mov
ds
jl
mov
lock
adc
jns
mov
xchg
or
xchg
xchg
and
shl
jle
(bad)
cmp
movs
jmp
(bad)
in
jo
lods
sbb
add
dec
xor
jbe
or
sub
fist
lods
push
mov
lods
jmp
add
push
mov
int3
xor
or
and
pop
sar
das
hlt
xchg
in
inc
jp
add
adc
push
pop
xchg
sub
(bad)
xor
mov
pop
cli
rol
loope
cmp
adc
xchg
mov
sar
push
cmp
mov
mov
std
movs
nop
adc
push
xchg
mov
out
pop
inc
push
or
adc
sub
pop
xchg
(bad)
sub
mov
mov
mov
sar
inc
push
sbb
xor
icebp
fs
outs
sub
sahf
push
and
out
shl
pop
in
or
adc
cmp
stos
arpl
mov
xor
fdiv
inc
pushf
sub
shl
aas
pop
lods
cmps
xor
and
lds
push
mov
push
(bad)
(bad)
cdq
mov
popa
mov
push
ja
pop
lds
ins
cmp
push
ins
ins
rcl
(bad)
hlt
push
bound
mov
mov
dec
jle
popf
add
nop
mov
mov
mov
shl
push
in
sbb
adc
shl
dec
js
cmp
fild
or
pop
and
push
mov
jo
dec
cmps
retf
or
xor
push
mov
outs
in
out
adc
imul
in
cmps
mov
sub
xor
push
call
cmp
jno
push
(bad)
in
test
mov
mov
bound
into
push
popf
sbb
je
pushf
xchg
fmul
adc
sub
cmps
inc
(bad)
not
xchg
cmp
push
xchg
fidiv
retf
ja
sar
xchg
loope
mov
es
mov
les
push
lock
es
pop
retf
fist
jnp
mov
lods
call
push
push
adc
retf
sbb
pop
push
gs
sbb
(bad)
sub
std
stos
mov
push
cld
mov
inc
fnstenv
xchg
and
xor
lock
outs
imul
clc
cld
and
adc
jl
nop
xor
inc
pop
std
jge
pop
sbb
push
add
adc
xlat
sbb
pop
outs
fimul
cdq
inc
(bad)
sbb
push
stos
sbb
push
rcr
cmp
shl
bound
xor
xchg
ret
sub
cmp
hlt
mov
and
cmp
mov
test
push
cpuid
addr16
mov
outs
(bad)
jg
sti
mov
and
adc
sub
mov
ds
push
cwde
cmp
es
mov
call
sbb
js
fst
xor
(bad)
gs
and
xor
inc
jb
cmp
push
and
icebp
pushf
fcomp
ds
jns
mov
cli
hlt
xchg
out
sahf
lds
sbb
inc
sbb
dec
cmps
cmps
nop
das
ret
inc
(bad)
mov
dec
mov
fninit
mov
fsubr
mov
(bad)
fisub
arpl
pop
cmp
mul
sbb
mov
ja
lds
(bad)
in
ret
data16
clc
int
cmp
movs
(bad)
fist
ja
sbb
cmps
(bad)
bound
leave
xor
cmps
push
inc
leave
in
cmp
pop
lahf
xchg
and
cmovg
push
jl
stos
out
mov
mov
cmc
push
inc
mov
jmp
adc
pop
add
movs
aam
adc
cld
in
xchg
push
jecxz
mov
sbb
inc
pop
movs
test
or
sub
sbb
or
jg
lock
push
movs
pop
lods
mov
mov
mov
loop
or
sub
inc
call
sub
nop
cmp
imul
nop
(bad)
les
inc
retf
aad
add
add
ds
sti
retf
xor
or
push
mov
cs
pop
and
and
xor
mov
fidivr
rol
cmp
lahf
fs
or
push
pop
mov
fld
mov
mov
rol
and
jmp
mov
test
pop
xchg
jmp
mov
cmp
fsubrp
icebp
pop
rol
sar
rcr
shl
rcr
mov
push
mov
loope
mov
fldenv
and
cmp
jmp
add
cmps
shr
cmps
sub
lds
xor
pop
push
sahf
lahf
(bad)
ss
scas
adc
mov
mov
cmp
(bad)
add
fistp
dec
fild
jmp
push
xchg
mov
ins
test
xor
into
sbb
inc
xchg
bswap
test
dec
adc
mov
mov
and
sbb
xchg
xchg
data16
sbb
xchg
sti
fsubr
jmp
and
ds
dec
sahf
jmp
adc
lock
mov
and
retf
shr
inc
xor
dec
dec
shr
cmp
scas
fstp
mov
jo
mov
pop
mov
xchg
ss
repz
jmp
or
and
cli
cmp
call
xchg
nop
mov
sahf
dec
ja
or
mov
or
aam
mov
dec
out
xor
outs
ror
add
in
add
pop
mov
(bad)
push
movs
mov
lods
aaa
fisttp
sub
and
ins
cmp
call
je
(bad)
xchg
cs
outs
or
mov
test
mov
xchg
mov
imul
sahf
dec
dec
cdq
and
cmps
jbe
hlt
in
inc
fs
mov
in
jae
sub
loope
inc
imul
gs
cmp
inc
push
mov
std
ret
dec
sbb
jecxz
dec
inc
aaa
retf
fsub
or
retf
inc
jo
adc
cmc
and
cmp
xchg
mov
lods
stos
or
or
ins
adc
retf
fcmovnu
dec
adc
leave
ins
xchg
stos
xchg
mov
mov
lds
cwde
shrd
adc
mov
lahf
xchg
sbb
(bad)
mov
stc
movs
shl
ret
ret
jge
cmp
mov
mov
mov
pop
inc
imul
arpl
pop
les
outs
stos
fs
pop
cmp
mov
jg
fistp
dec
pop
outs
push
mov
cmp
sub
inc
jecxz
inc
fistp
test
ins
fisubr
sub
fild
mov
xor
jne
es
arpl
enter
or
cmp
dec
dec
popa
push
jmp
mov
imul
(bad)
mov
dec
or
jae
mov
push
xor
pop
dec
in
mul
xchg
jecxz
je
mov
xor
sub
pop
push
ror
pop
outs
jle
mov
and
xchg
adc
test
popf
aas
push
and
pop
daa
adc
jge
xor
rcr
adc
xor
jl
rcr
(bad)
fmul
div
js
xchg
in
jle
push
jo
repnz
imul
sbb
mov
sub
sub
inc
in
call
fst
cmc
shr
in
push
leave
retf
xor
retf
xor
mov
popa
(bad)
aas
aad
adc
cmp
popa
and
mov
out
adc
xchg
and
rcr
movs
mov
xor
hlt
add
aad
pop
ins
xor
fdiv
ds
pop
dec
push
es
jmp
sbb
pop
in
adc
ret
mov
imul
and
stos
push
mov
das
test
(bad)
call
or
pusha
fsub
mov
mov
cmovge
mov
and
mov
(bad)
and
into
push
ja
or
adc
lea
loop
jae
mov
cdq
mov
lods
add
mov
(bad)
ins
pushf
mov
xchg
mov
or
cmp
lahf
out
imul
fiadd
in
out
fnstenv
outs
add
aam
test
pop
cmp
xchg
mov
jne
jl
mov
call
aaa
push
push
js
mov
mov
or
pop
mov
mov
sbb
push
xchg
daa
fnstsw
rcl
add
retf
and
ja
into
loope
cmp
pop
loope
mov
cmps
jae
pushf
out
xchg
push
pop
nop
rcr
imul
cmp
dec
and
cmp
sub
or
jnp
cmps
add
push
int
add
in
mov
cmp
loop
cmps
or
mov
mov
jbe
dec
(bad)
sub
popf
dec
sahf
retf
and
dec
xchg
mov
sbb
push
repnz
xor
or
dec
adc
sbb
mov
or
mov
push
sub
sbb
mov
sbb
xor
cmp
loopne
in
imul
sub
retf
jae
rcl
test
push
std
repz
cmp
fmul
in
dec
push
jmp
fist
in
xchg
std
xchg
iret
ret
loop
int3
rol
call
js
fldenv
out
mov
int3
mov
dec
jl
cli
mov
icebp
pop
mov
push
push
test
mov
mov
pop
mov
inc
add
cmp
imul
stos
enter
pop
push
aam
pushf
inc
aas
cmps
jbe
cdq
adc
and
adc
sub
inc
cmps
(bad)
pminub
cmps
in
or
sub
lods
stc
pop
push
and
xor
xlat
stos
fisttp
and
xchg
lods
and
pop
out
and
or
retf
pop
cmc
jg
or
fwait
cmp
jb
jns
sbb
adc
ret
sub
lock
sbb
add
ja
xchg
mov
jge
clc
fist
or
or
icebp
inc
jne
pop
xchg
out
jp
jbe
and
int3
inc
iret
std
inc
ins
movs
adc
pop
das
xor
mov
je
xchg
retf
(bad)
xlat
lahf
test
gs
mov
cmps
and
(bad)
sub
pop
mov
popa
and
pop
sbb
mov
and
dec
imul
jns
add
add
jl
push
and
cmps
sbb
mov
xor
call
jbe
jmp
jmp
aam
scas
fs
dec
adc
mov
ret
pop
and
cmps
jb
out
lock
(bad)
(bad)
(bad)
mov
jne
mov
jae
rcl
jnp
loopne
adc
fisttp
mov
and
lods
push
dec
ret
outs
out
mov
push
jle
inc
and
xchg
xor
bnd
push
outs
out
ret
sbb
xchg
sbb
ss
mov
inc
xor
cs
sbb
pop
(bad)
sub
xchg
les
lds
cmps
sub
mov
jg
xchg
add
rcr
cmps
push
mov
lock
pop
loop
inc
sub
repnz
aaa
sub
pop
add
adc
es
cdq
aas
into
outs
mov
cmp
sub
lahf
sub
pop
loop
sbb
dec
jge
adc
push
or
fnstcw
xchg
jbe
push
pop
push
ds
out
lods
ret
xchg
pop
jno
pushf
mov
popa
push
mov
jmp
popf
push
es
pop
dec
cdq
mov
jae
mov
dec
xchg
jge
in
mov
shl
fwait
mov
inc
lods
aas
fidivr
ins
xchg
sub
call
clc
in
loop
sbb
cwde
mov
sub
or
int3
enter
sbb
sbb
push
mov
push
xchg
aad
out
and
adc
inc
sar
hlt
fidiv
inc
jne
jecxz
inc
mov
jcxz
enter
out
das
imul
jo
and
cmp
fxch
xor
loop
data16
stc
repnz
mov
ror
stos
push
xchg
inc
enter
inc
call
and
scas
iret
cmp
xor
xor
mov
cs
mov
ins
xchg
mov
and
inc
out
mul
loop
and
call
call
out
test
retf
test
push
shl
add
lods
sbb
jnp
pop
pop
cmp
int3
adc
into
cdq
cmp
inc
adc
ss
ss
xchg
je
retf
sbb
std
dec
mov
inc
jae
sbb
mov
jecxz
aam
test
adc
jge
int3
sbb
fs
ins
ja
div
gs
jmp
repnz
and
pop
not
pop
or
or
add
and
cwde
not
fcomp
push
xchg
mov
push
out
in
pop
sbb
rol
mov
xchg
outs
stc
retf
cmp
cmps
lahf
neg
fidiv
addr16
mov
in
add
aam
cmp
sub
xchg
push
shr
sbb
pop
sub
jnp
aam
shl
mov
xor
sub
stc
test
ja
call
mov
cmc
test
dec
sar
cmps
xchg
lods
sbb
dec
mov
gs
jmp
mov
sbb
stos
sti
retf
aad
and
iret
ja
ja
jno
call
dec
sti
nop
sbb
lahf
rcl
mov
outs
push
pop
mov
div
mov
adc
dec
stos
test
lds
outs
in
pop
mov
pop
mov
sbb
sub
lds
xchg
xchg
or
dec
dec
mov
fwait
cdq
mov
mov
jmp
in
stos
inc
push
push
xchg
shr
in
xchg
sti
sysret
(bad)
mov
retf
mov
rcr
call
jge
nop
and
out
push
cmp
mov
xchg
add
das
push
cmp
cmps
rol
sbb
std
inc
sbb
in
add
pop
fwait
sub
adc
cwde
jg
mov
sbb
and
fs
test
jg
xor
push
movs
jmp
ret
mov
lahf
xchg
fs
pop
adc
mov
bound
lds
andnps
jns
mov
and
sahf
jmp
clc
loop
push
dec
ss
sbb
fld
stc
out
cmps
inc
(bad)
jmp
(bad)
pop
inc
ins
aas
or
or
mov
push
sub
jmp
and
mov
xchg
inc
shl
push
retf
nop
cli
lea
mov
addr16
or
std
mov
clc
pop
fs
adc
and
inc
mov
or
dec
stos
pop
sub
jge
fcom
add
icebp
inc
xor
mov
mov
mov
jo
icebp
movs
pop
sub
mov
fsubr
std
ror
dec
mov
test
and
leave
push
call
loopne
sar
sub
mov
cmp
(bad)
cmp
fisubr
ja
aaa
loopne
retf
repnz
fcomp
(bad)
(bad)
mov
sub
xor
dec
scas
jge
push
fs
xchg
mov
cmps
adc
push
pop
inc
mov
adc
mov
test
ins
int
ret
mov
fcomp
or
xchg
dec
jns
push
xchg
fwait
dec
mov
mov
and
dec
(bad)
fst
add
stos
cmc
repz
pop
cmp
sbb
push
mov
int3
lahf
inc
xor
ins
sub
inc
aam
cli
cmp
xchg
adc
inc
lea
xchg
mov
loopne
neg
addr16
test
mov
dec
int
jnp
(bad)
cwde
lds
inc
js
dec
fiadd
add
mov
push
aam
pop
aaa
cli
xchg
or
pop
dec
dec
and
repnz
fdiv
imul
mov
sub
bound
fist
inc
and
mov
ins
shl
push
(bad)
jb
pop
and
and
sbb
mov
lea
dec
dec
out
out
call
ret
cmps
xor
and
in
xor
test
(bad)
jmp
inc
(bad)
and
cld
inc
jecxz
sbb
pop
test
and
jne
sub
cmp
cmps
dec
adc
cmp
sub
xchg
push
jmp
sti
push
hlt
out
repnz
push
dec
pop
mov
dec
cld
in
push
icebp
fld
push
xor
xchg
cwde
jae
mov
cmps
cmc
push
lods
ds
cwde
cmp
sbb
leave
mov
cmp
push
dec
ja
mov
mov
xchg
into
adc
loopne
in
cmp
mov
lock
clc
xchg
cmps
or
les
lods
inc
data16
stc
fmul
mov
cmp
call
fadd
dec
(bad)
sub
or
(bad)
in
int
imul
nop
imul
aaa
in
fiadd
xchg
mov
jne
sub
mov
mov
mov
stos
or
rol
das
rcr
cmp
in
mov
pop
sbb
(bad)
div
or
or
and
pop
imul
sub
mov
in
push
bound
das
sub
push
je
and
mov
xchg
push
mov
jge
imul
or
adc
shr
add
das
fild
daa
push
pop
adc
sub
loope
xor
lock
mov
push
(bad)
mov
sub
push
(bad)
xchg
ins
inc
inc
movs
imul
inc
ins
test
jno
repnz
inc
add
inc
adc
dec
sub
xchg
dec
iret
jmp
(bad)
ret
dec
rcr
or
mov
out
(bad)
lods
ja
mov
int3
stos
je
sti
jg
ret
(bad)
enter
js
sub
call
movs
mov
lock
mov
shl
call
jp
addr16
xchg
into
mov
retf
test
leave
call
adc
sbb
stos
push
fnstsw
in
cs
and
rol
sub
dec
push
bound
xor
loop
or
xchg
retf
out
lods
jnp
pop
push
adc
les
dec
sub
sub
mov
mov
push
pusha
jne
js
shr
add
and
icebp
out
xor
lods
dec
test
aaa
inc
cmp
add
mov
loope
sar
out
mov
pop
inc
fwait
mov
gs
ins
shl
scas
in
in
xor
sub
int3
or
fnstcw
dec
dec
push
xchg
sbb
repz
daa
test
mov
fild
xchg
xchg
and
jecxz
shr
in
pushf
lahf
add
inc
(bad)
jmp
pop
mov
dec
inc
mov
xchg
sbb
je
sub
int
and
and
mov
inc
sti
rcr
xchg
iret
or
or
mov
pop
cs
jne
or
sbb
rcl
sub
mov
in
sub
push
cmps
mov
mov
jmp
dec
jecxz
ins
jae
sub
mov
cmp
xor
call
sbb
test
mov
dec
(bad)
inc
or
sbb
sbb
xor
cmp
push
and
dec
aam
fcomp
xor
inc
aad
adc
lea
aas
sahf
jle
pop
sbb
lahf
imul
loopne
and
mov
mov
movs
test
inc
cmp
stos
mov
xor
sar
lds
jle
fcom
sbb
aas
jg
pop
movs
daa
cmc
nop
je
or
rcr
and
ins
pusha
out
das
xchg
cmp
loop
stc
je
adc
aam
sub
out
sti
rcr
fmul
(bad)
fcmovne
sahf
jmp
xor
aas
rol
add
mov
and
imul
xchg
mov
ins
ins
sbb
xor
and
test
push
inc
or
mov
sub
jle
xor
jmp
aam
retf
inc
cmp
push
cmp
bound
adc
ror
pop
or
cmp
jl
loope
in
test
xchg
pop
inc
push
push
pusha
ret
inc
test
jae
shl
push
push
xor
jl
ja
scas
and
cli
sub
in
and
push
jno
sub
push
cmp
in
mov
mov
add
xor
call
add
inc
nop
or
sti
dec
in
add
push
(bad)
xchg
fadd
pop
test
jmp
loopne
jno
outs
xor
fwait
neg
mov
push
sub
mov
pop
mov
aad
and
pop
adc
fsubr
(bad)
mov
rcl
loop
into
stos
sbb
into
test
dec
jb
pop
cld
(bad)
sub
push
aas
sbb
inc
(bad)
sbb
std
sub
repz
jnp
inc
push
rol
lds
dec
adc
dec
shr
bound
mov
jp
dec
add
mov
sbb
sub
push
sbb
sub
pop
cwde
mov
inc
mov
or
mov
in
jle
jno
mov
mov
loope
inc
dec
or
je
lock
cmp
into
pop
sbb
rcl
stc
in
(bad)
in
mov
mov
pop
lahf
and
xchg
add
inc
pop
in
push
mov
(bad)
mov
test
or
popf
adc
shr
ds
arpl
es
and
sbb
and
sbb
adc
pop
jne
retf
movs
sbb
outs
sbb
ret
jae
call
fisubr
pop
call
mov
out
inc
xchg
or
dec
jne
loopne
cmp
cdq
add
ins
mov
shl
aam
fsqrt
test
push
lds
or
jp
pop
call
add
fdivrp
das
js
and
cmp
stos
frstor
mov
or
jmp
adc
(bad)
add
jno
aam
xchg
or
out
xchg
mov
cwde
sub
mov
nop
(bad)
arpl
rcr
mov
dec
test
fnstcw
mov
das
cdq
mov
dec
hlt
test
lds
mov
jmp
pop
les
mov
xor
scas
xchg
adc
ds
out
and
mov
pop
add
and
mov
aad
cmp
mov
dec
aam
jmp
xchg
adc
out
outs
pop
jge
jns
mov
xchg
cdq
sbb
push
pop
dec
xchg
mov
jbe
cmc
cmp
xor
or
and
std
add
mov
jbe
and
outs
ds
adc
mov
jns
stos
jnp
jae
adc
sbb
xchg
mov
pop
sbb
cmps
pop
sub
pop
out
push
cmps
ret
loope
loope
xor
idiv
xchg
add
cmps
jno
sub
cld
not
push
dec
adc
inc
ss
sub
push
out
jns
xchg
fstp
cmp
xchg
mov
sbb
aad
ds
xchg
xor
add
jo
add
and
outs
pop
jae
je
adc
push
div
sub
dec
jns
pop
scas
and
in
xor
sbb
or
enter
mov
adc
into
mov
inc
mov
pusha
mov
and
lods
mov
ror
or
(bad)
xlat
cmps
daa
lods
mov
out
clc
push
inc
mov
popa
data16
pop
fsubr
mov
sbb
dec
jnp
pusha
jnp
xor
out
call
xor
xor
rcl
dec
mov
xchg
je
outs
jae
push
pavgw
dec
fdiv
jo
out
pop
and
scas
hlt
cs
out
retf
(bad)
jnp
(bad)
jg
xchg
das
cmp
and
out
mov
in
jecxz
and
jno
push
retf
and
adc
std
pop
add
shl
sahf
pop
and
les
push
in
add
sahf
repz
in
dec
sbb
xor
adc
loop
jg
js
ret
push
cmp
cmp
daa
or
pop
push
daa
cmp
or
hlt
cwde
pusha
mov
les
mov
jecxz
imul
sbb
pop
mov
sub
push
dec
cs
and
mov
push
sub
mov
adc
les
stos
jno
mov
or
mov
sub
pop
es
add
(bad)
dec
push
inc
add
outs
mov
adc
int
push
or
pop
mov
sbb
jmp
les
dec
pop
bound
xchg
mov
add
mov
fs
cs
xor
not
imul
sub
sub
push
or
push
loope
adc
fwait
add
mov
stos
jecxz
sub
push
xchg
cmc
dec
cmp
fistp
push
imul
jecxz
iret
hlt
fwait
lock
sub
test
mov
mov
iret
scas
into
adc
jmp
adc
cmp
loope
add
mov
iret
add
jge
push
mov
or
call
es
int3
call
push
cmps
adc
loop
sbb
lock
fmul
adc
(bad)
and
ret
push
(bad)
repz
shr
(bad)
jns
sti
std
inc
stc
pop
ds
fcmovu
jecxz
pop
pop
out
mov
test
mov
pop
pop
add
pop
cli
add
dec
sub
stos
stos
or
adc
fucomip
or
add
pop
add
hlt
aam
das
mov
ret
inc
adc
sti
mov
mov
inc
xchg
push
or
sub
int3
xchg
inc
ins
adc
movs
es
cs
mov
in
add
cdq
fwait
dec
fisub
xchg
sub
ror
xchg
adc
jbe
ss
xchg
xbegin
outs
xchg
mov
repz
clc
push
popf
rcr
icebp
pmulhw
push
sub
inc
or
sbb
push
lods
fadd
(bad)
push
or
(bad)
loop
fdivr
add
adc
ret
pop
mov
push
mov
out
xlat
out
out
sbb
cs
ins
cmp
movs
pop
es
stos
jecxz
xchg
shl
(bad)
xor
lods
or
ds
fs
stos
pop
arpl
pusha
stos
jmp
cmp
std
loopne
fidiv
cld
ror
outs
pop
mov
cmp
push
mov
mov
mov
fldenv
in
inc
push
shr
pusha
mov
push
neg
add
in
pop
or
test
jo
adc
mov
ret
xor
and
cwde
push
or
or
int
sub
mov
and
xor
mov
jns
ins
cmp
call
dec
aas
lds
jl
mov
jmp
mov
out
mov
adc
retf
or
shl
xlat
or
dec
(bad)
loopne
add
or
jg
lock
aad
cli
sbb
bound
shr
in
xchg
shr
xor
int3
mov
out
les
das
into
sub
sbb
push
xor
push
sbb
dec
inc
enter
sbb
jno
push
push
out
pop
loopne
mov
in
sbb
pop
int3
pop
mov
stc
fsubr
in
lods
sub
call
rcl
in
mov
pop
ja
xlat
push
jnp
jbe
lds
pop
ds
popa
mov
cmps
pop
xor
bound
pop
test
leave
inc
loopne
out
sbb
pop
fcomp
mov
mov
inc
jae
loope
fcomp
fistp
or
sbb
jne
pop
inc
jge
(bad)
loopne
mov
push
sar
lahf
xchg
jne
jne
cmps
add
dec
sbb
cli
in
int
xor
mov
xchg
outs
mov
mov
imul
jno
outs
mov
mov
xor
xchg
push
sub
mov
retf
ins
pop
or
add
ret
gs
in
xlat
lods
push
cmps
rcl
or
ror
leave
mov
xchg
pusha
mov
and
xor
adc
jae
popf
lods
lods
int
xor
add
add
push
xchg
inc
jp
dec
es
cmps
mov
add
ins
movs
jl
test
dec
mov
int3
test
sbb
dec
or
pop
cmp
stc
test
push
pop
call
shl
jmp
aaa
stos
in
jl
(bad)
push
mov
xchg
imul
movs
pop
sbb
dec
dec
loopne
ds
aad
jmp
or
dec
mov
in
or
jno
inc
jl
call
inc
movs
adc
pop
call
std
imul
mov
std
aam
repz
cld
cdq
jb
mov
ret
pop
std
adc
gs
stos
lock
ret
adc
xor
pop
dec
xchg
xchg
or
and
push
cdq
popa
jno
mov
mov
ins
(bad)
in
cdq
dec
or
sar
jae
xchg
cmp
dec
or
pop
loopne
pop
pop
fisubr
xchg
rcl
cmps
out
sbb
dec
push
ror
mov
cmps
test
pop
pushf
call
in
pop
mov
imul
or
sbb
xchg
enter
in
dec
iret
je
adc
inc
xchg
out
push
jmp
adc
sti
ret
xor
xchg
cmp
std
pop
pop
pop
pop
jno
jle
sub
xor
mov
dec
mov
aam
mov
cmc
jmp
pusha
jmp
loope
addr16
and
cmp
mov
iret
nop
or
mov
xchg
or
pop
xor
inc
icebp
cmc
cmp
std
int
ficom
jle
hlt
data16
dec
mov
pop
imul
jne
out
xchg
and
dec
iret
mov
dec
pop
inc
sar
pop
add
adc
add
nop
mov
in
bound
mov
ins
and
rol
test
jecxz
rol
jg
pop
cmp
and
mov
mov
or
pop
mov
(bad)
sub
out
or
dec
adc
xor
add
dec
repnz
(bad)
ins
push
and
cmp
lds
mov
cmp
sbb
dec
dec
push
lahf
jae
movs
xbegin
cwde
int
sbb
jb
adc
sbb
loope
in
test
cmc
mov
mov
and
test
addr16
int
ret
mov
cld
and
mov
call
fidiv
sbb
pop
or
xlat
inc
mov
inc
mov
or
shl
cmps
mov
in
dec
(bad)
adc
push
fs
sbb
or
push
rol
jl
jb
and
inc
mov
notrack
or
add
pop
loop
cmp
out
pop
lods
mov
daa
data16
fxch
leave
xchg
pushf
and
adc
mov
out
movs
sub
xchg
hlt
mov
mov
test
adc
sbb
ret
daa
fmul
addr16
loopne
xchg
xor
or
or
and
mov
in
jo
jecxz
cmp
scas
sbb
add
iret
stc
add
fs
cmps
dec
cmps
fnsave
pushf
das
inc
aad
jno
sahf
aas
cmp
mov
inc
dec
int3
xchg
aas
xchg
rcl
fld
mov
mov
mov
pop
push
es
(bad)
mov
jecxz
ins
lahf
dec
movs
adc
mov
adc
inc
push
jmp
pop
in
mov
sub
retf
mov
sbb
lea
les
xor
in
xchg
stos
lods
nop
mov
push
sbb
push
mov
cmp
imul
xor
xor
movnti
aas
loopne
mov
ds
sub
and
in
add
into
stc
cmp
aaa
cmp
and
imul
ds
fisubr
mov
shl
xchg
daa
sub
push
jmp
jne
adc
cwde
push
clc
ja
push
not
movs
movs
aad
pop
mov
dec
frstor
adc
les
fild
jno
jns
loop
rol
adc
shl
aas
movs
lahf
fwait
loop
ret
sysenter
gs
sbb
jl
push
push
mov
sub
mov
cmps
outs
and
ja
pop
xor
sub
jecxz
and
leave
lock
or
scas
loop
mov
inc
jp
cld
push
jge
add
out
cld
push
mov
add
out
es
pop
pop
or
leave
inc
mov
add
pop
adc
cmp
out
mov
add
pop
test
or
dec
jmp
out
call
lods
ja
jge
mov
or
dec
aaa
test
loop
push
outs
jns
pusha
mov
cwde
sub
and
ror
gs
out
lods
xor
adc
fdivr
inc
push
lods
xchg
(bad)
ror
mov
jb
out
mov
inc
cmp
mov
mov
out
jb
and
adc
and
rcl
loop
les
out
les
aad
inc
add
cdq
pop
sbb
fild
es
repnz
scas
aaa
sbb
sub
mov
inc
test
push
add
cs
jne
pop
lods
movs
cmp
addr16
sbb
not
into
lods
ret
enter
sti
rcr
or
rcl
mov
push
inc
or
pop
jp
enter
movs
and
cli
mov
adc
mov
loop
stc
iret
push
mov
adc
jl
leave
cmp
fstp
mov
inc
adc
push
int
sub
cmp
call
or
xor
pop
std
neg
rcl
push
fisttp
xchg
fimul
mov
and
pop
nop
test
cmovl
aaa
mov
xchg
leave
adc
in
cmp
mov
push
fs
and
std
outs
out
sub
js
js
mov
pop
xchg
inc
test
or
inc
adc
test
cmp
aad
xchg
pop
gs
aam
add
ffree
add
(bad)
pop
pop
xchg
xchg
dec
xor
sbb
sbb
and
push
fcmovnbe
push
push
mov
pusha
mov
jns
mov
xchg
aaa
into
sub
cld
ss
in
cmp
adc
dec
movs
pop
out
dec
and
fild
push
jg
loop
xor
mov
(bad)
push
test
rcr
jne
adc
adc
push
push
dec
jl
or
(bad)
pop
leave
aaa
mov
idiv
xor
or
hlt
and
psrlq
in
ins
scas
pop
cli
fstp
jns
sbb
sbb
jns
cmp
ffree
jmp
mov
pop
and
and
xor
icebp
adc
push
push
ja
xor
cdq
cmp
scas
(bad)
fs
(bad)
jle
xor
arpl
fiadd
jl
dec
fcomp
aam
es
in
fisubr
pusha
or
int
inc
mov
and
mov
cld
shr
inc
xchg
adc
jge
xchg
in
lods
adc
idiv
fistp
jbe
dec
pop
inc
cdq
aad
sbb
or
inc
ss
push
cld
bound
adc
xor
fistp
loop
pop
add
push
adc
push
mov
pop
push
jbe
xor
ja
push
push
sbb
mov
push
rep
fwait
dec
cmp
sbb
rcr
mov
gs
adc
lea
adc
sub
mov
cwde
mov
mov
ins
fdivr
or
push
add
call
jmp
jmp
aas
jp
push
push
pusha
push
in
movs
push
rcl
aam
out
lods
aam
and
out
pop
sub
push
iret
push
(bad)
push
and
iret
pushf
jp
scas
lds
push
icebp
add
xor
enter
jo
xor
cdq
fstp
fadd
call
stos
push
mov
xor
bound
retf
stos
fcom
adc
in
popf
cmp
retf
cwde
jb
in
cs
aad
jl
jns
rol
pop
adc
loop
cmps
sub
adc
xor
adc
scas
rcr
lea
lods
mov
or
inc
xor
xlat
dec
movs
repz
add
mov
xor
mov
xchg
jl
cmp
or
xor
enter
push
mov
test
mov
cmps
mov
pushf
sahf
pop
mov
mov
push
fwait
cmc
adc
mov
xchg
sbb
je
bound
mov
xlat
pop
test
jle
mov
out
test
ror
leave
loope
test
adc
icebp
mov
cmp
(bad)
mov
add
es
inc
pop
add
xchg
jecxz
movs
inc
jns
sbb
test
cmp
cmp
inc
ss
push
sar
or
add
push
loopne
dec
rcr
mov
and
aas
cmp
push
test
cli
aas
popa
push
aaa
push
sub
mov
popf
inc
pop
ins
sub
or
inc
mov
lea
adc
dec
jl
or
sbb
push
fldcw
and
xor
scas
cli
sub
ja
(bad)
rcr
fldenv
lock
outs
daa
shr
and
cmp
push
stos
js
xor
ds
icebp
dec
xchg
cmp
push
sbb
shr
jne
jmp
mov
movs
mov
push
shl
ficomp
mov
pushf
add
popf
xlat
mov
xchg
mov
xlat
push
xchg
adc
sahf
out
in
push
mov
mov
and
daa
outs
inc
std
and
retf
(bad)
aaa
mov
adc
push
(bad)
addr16
cmp
pop
fisub
push
add
pop
pop
(bad)
jmp
xchg
mov
cmp
push
dec
xchg
aam
mov
sub
(bad)
adc
inc
icebp
sti
push
pop
addr16
or
and
mov
out
sub
pop
or
dec
hlt
in
xor
mov
outs
and
push
xchg
sbb
fdivrp
adc
mov
sbb
sub
xchg
pusha
add
push
adc
push
dec
and
lds
fsub
pop
inc
das
call
add
imul
in
icebp
ins
pop
fldenv
les
mov
sti
pop
leave
out
dec
pushf
rcr
sbb
xchg
add
cmp
(bad)
xlat
inc
sti
cmps
test
ds
mov
push
pop
sub
cmps
add
xor
pop
les
imul
ins
and
repnz
xchg
ins
add
adc
add
mov
cld
sbb
cld
xchg
arpl
test
mul
loope
cmps
pop
pop
sub
xchg
or
cld
xlat
les
inc
call
fcomp
jae
outs
enter
(bad)
dec
data16
sbb
test
jle
mov
(bad)
sar
push
mov
pop
clc
adc
cmps
mov
mov
xchg
and
and
js
add
retf
and
jo
sbb
mov
mov
jnp
jnp
dec
imul
or
ficomp
and
xchg
imul
iret
cli
call
idiv
nop
adc
cmp
dec
arpl
sbb
jbe
mov
cmps
(bad)
jg
lea
and
jmp
jp
dec
es
cdq
loopne
xor
mov
xlat
sbb
and
test
pop
mov
test
loope
dec
sub
cmp
imul
xor
fdivr
cwde
retf
inc
adc
test
js
sbb
jge
jne
cmp
jl
xchg
call
pop
push
cmc
push
push
and
int
jne
xor
lods
mov
or
add
and
and
mov
sbb
jmp
adc
pop
dec
fs
ins
inc
cmp
fwait
stos
cmp
adc
or
lock
sar
je
ja
push
and
(bad)
push
sbb
xor
fsubr
stc
aas
cwde
cs
int
and
sbb
inc
bound
pusha
fisub
jmp
vfrczss
repnz
mov
mov
xchg
or
jb
adc
sub
add
sub
dec
cwde
push
jno
push
mov
(bad)
pusha
loope
xor
inc
sar
lods
xor
(bad)
stos
int3
fisttp
ret
jno
mov
out
mov
mov
mov
ret
xchg
pop
adc
add
sub
jp
pop
mov
out
pop
pop
clc
movs
fiadd
ins
mov
ror
sbb
test
xor
inc
mov
mov
mov
jmp
xchg
addr16
mov
pop
push
stos
xor
fwait
or
push
imul
xchg
dec
in
xor
mov
mov
pusha
xor
mov
cdq
cmp
into
sub
xchg
int
in
add
out
push
mov
cmps
mov
adc
in
sub
and
imul
mov
xchg
cmp
pop
repnz
movs
push
add
sahf
cpuid
and
mov
sbb
cmp
or
imul
aad
fnsave
fldenv
mov
cmp
xlat
jne
and
or
inc
dec
shl
pop
loopne
test
pop
fstp
stos
and
mov
mov
push
inc
push
js
and
dec
out
aaa
fidivr
jbe
jne
fstp
jl
fnstenv
add
mov
mov
out
sahf
fidiv
std
push
cmps
(bad)
cdq
mov
rcl
js
sub
xchg
fsub
loop
mov
dec
sub
rcl
addr16
(bad)
ins
repnz
mov
and
xor
jbe
sbb
aam
or
lds
add
jno
into
js
ds
call
ret
cmps
jle
stos
and
fs
jno
jmp
sub
add
push
in
mov
xor
sbb
loopne
push
dec
add
mov
cs
cmc
sbb
ins
push
nop
sbb
cmp
mov
nop
xchg
jmp
in
repz
sbb
inc
jno
sub
fidiv
test
cmp
sub
adc
test
xchg
(bad)
shl
mov
mov
call
rcl
and
jmp
and
(bad)
push
sbb
hlt
cld
pop
xlat
ins
mov
fdivr
mov
jnp
pop
add
xlat
dec
into
pushf
push
test
popf
ret
inc
movs
xchg
adc
shl
add
jno
into
jb
cmp
inc
mov
push
lock
mov
mov
test
fcmovu
ret
cmp
mov
sub
jp
or
in
mov
xlat
adc
outs
dec
push
push
add
retf
and
ja
sub
xchg
dec
mov
cmp
and
out
and
inc
pop
jo
test
js
dec
push
cs
(bad)
aad
xor
fsubr
in
sti
xchg
add
push
push
cmp
push
mov
fmul
pop
movs
mov
xor
sahf
lods
add
jmp
in
pop
cdq
xchg
mov
xchg
arpl
mov
jmp
mov
cdq
ins
sbb
ror
neg
aas
xchg
sbb
(bad)
or
sub
in
mov
mov
or
loope
cmp
jno
xor
std
jbe
pop
pop
sbb
in
ja
test
arpl
and
das
adc
cmp
push
test
data16
jl
fldcw
stos
and
jb
repz
hlt
cmps
mov
add
jecxz
retf
popf
or
retf
mov
dec
enter
int
adc
mov
cld
mov
mov
cli
ret
call
imul
js
cwde
add
adc
add
(bad)
repz
push
inc
int
ror
dec
cwde
test
push
mov
mov
add
add
fisubr
xchg
ret
and
sub
aad
or
jne
das
sub
jecxz
jle
int
sbb
xor
jecxz
pop
dec
sti
fldenv
clc
bound
dec
mov
sbb
iret
movs
pop
inc
mov
mov
cmc
ja
push
cmp
ficom
sti
mov
movs
fsub
mov
xchg
sbb
jno
ins
sbb
clc
(bad)
mov
or
or
test
lods
sub
rcl
dec
xchg
pop
inc
(bad)
ss
adc
jne
jmp
mov
loopne
add
test
dec
pop
sar
hlt
mov
gs
or
sti
fsub
lahf
sub
scas
inc
(bad)
es
inc
nop
imul
rol
mov
push
iret
leave
dec
jae
imul
bound
jp
nop
out
push
in
xlat
jp
add
push
nop
outs
cdq
ins
or
int3
cdq
xchg
(bad)
div
inc
mov
adc
inc
mov
stos
add
cmp
xchg
mov
add
or
cs
push
add
sub
(bad)
je
shl
jmp
mov
jbe
add
repnz
movs
jne
push
adc
pop
dec
ucomiss
aaa
mov
sub
mov
test
add
jnp
enter
jmp
fwait
in
cmps
retf
aaa
retf
sub
aam
jo
sbb
or
imul
imul
add
push
inc
sub
das
push
mov
xchg
pop
rsqrtps
enter
pmaddwd
jno
pop
sbb
xor
shl
imul
int
leave
inc
jl
ret
ins
fisttp
xor
fist
dec
lds
push
(bad)
jl
cmp
fsub
and
call
mov
stos
leave
mov
add
lods
jmp
dec
inc
push
xchg
and
inc
mov
rol
mov
and
sbb
fistp
call
xor
mov
inc
and
inc
dec
cmps
sub
gs
hlt
shl
jl
cmp
ins
outs
int3
iret
es
push
xor
pop
shl
mov
cmp
and
int
sbb
movs
push
adc
stos
ret
mov
jnp
ret
mov
xchg
push
shl
aad
(bad)
dec
popf
(bad)
dec
jbe
sbb
and
fisub
sbb
dec
sub
(bad)
es
lods
xor
ins
fsub
cwde
in
mov
ins
add
push
dec
mov
cmp
into
mov
jno
jecxz
lahf
mov
pushf
cs
push
out
xchg
or
sbb
(bad)
std
cmp
mov
add
sub
pop
jmp
cmp
inc
pop
cmps
cmp
sti
outs
scas
xchg
int
and
repnz
imul
xchg
and
push
ss
(bad)
pusha
(bad)
shr
out
adc
add
jg
ret
xchg
stos
mov
sbb
movs
sbb
imul
repz
jl
lea
fmul
and
pop
ret
sbb
mov
retf
movs
test
ds
xchg
jl
ss
dec
sahf
pop
popf
xor
call
dec
out
xor
fist
lea
popa
add
push
mov
xlat
push
mov
push
xor
inc
adc
repz
loop
je
mov
and
jp
mov
dec
pop
mov
pop
jo
dec
add
dec
xor
jnp
dec
sub
sub
popa
(bad)
ds
jle
dec
popa
mov
popa
jo
cmp
aad
movs
xchg
bnd
cmp
clc
xchg
popf
adc
(bad)
xlat
pop
sbb
jns
(bad)
neg
cmp
push
pop
std
cmp
mov
out
cmc
aaa
mov
and
test
mov
jg
xor
xchg
push
std
inc
outs
mov
scas
inc
add
lods
xlat
ss
adc
fbld
push
loop
popf
mov
outs
inc
inc
dec
pop
lock
mov
mov
sbb
pop
add
scas
and
or
cmp
add
push
cmc
pop
retf
je
shl
out
fidivr
or
add
adc
push
push
and
mov
jae
aam
ss
repz
nop
dec
or
sbb
inc
jmp
inc
js
(bad)
call
inc
not
fcomip
popa
jg
adc
ins
add
mov
xor
push
jp
fwait
ror
test
bound
iret
cld
stos
cmp
pop
sbb
loope
mov
outs
fadd
ficomp
(bad)
cmp
aaa
pop
mov
clc
xor
or
adc
inc
cmp
loop
mov
mov
fst
ret
xor
sbb
jmp
sbb
mov
loop
mov
idiv
and
lea
gs
je
cmp
and
test
pop
and
sbb
xchg
fldcw
sbb
xor
mov
sbb
push
or
cmp
jp
cmp
dec
icebp
nop
neg
pop
sub
shr
push
xchg
adc
push
outs
sbb
jbe
xlat
pop
add
inc
xlat
jno
in
sbb
or
aam
outs
xchg
or
pop
push
xor
push
mov
cmps
dec
div
enter
fwait
mov
ror
jl
aaa
(bad)
mov
mov
or
call
dec
pop
les
repnz
ins
aad
nop
or
imul
inc
(bad)
out
retf
push
push
mov
mov
jg
not
clc
cmp
jecxz
imul
int
add
mov
mov
add
sti
push
cmp
shr
mov
sbb
(bad)
int
(bad)
fadd
std
xchg
sbb
pop
add
dec
mov
xchg
jecxz
jae
dec
cli
fstp
inc
leave
sub
xchg
outs
or
test
xor
imul
adc
mov
cmp
shl
pop
ds
add
pop
pop
sbb
xor
xlat
dec
ins
mov
int3
outs
repnz
and
lea
std
fdiv
int3
icebp
add
mov
rcl
push
xchg
sbb
add
test
pop
loope
shl
mov
shl
js
fstp
daa
cmovle
inc
sahf
and
add
dec
jne
cmc
pop
les
pop
sub
bound
aas
xchg
gs
and
mov
sbb
js
arpl
xor
idiv
dec
and
mov
cmps
imul
sub
clc
aas
rcr
and
scas
push
inc
jbe
and
mov
mov
in
jb
adc
in
jmp
mov
mov
jno
adc
cwde
ins
xchg
and
mov
jmp
add
push
iret
mov
jb
pop
mov
xchg
cmp
inc
jb
int3
push
jnp
jno
or
aam
push
fcom
lahf
or
movs
mov
mov
mov
scas
mov
sub
je
mov
inc
jmp
dec
js
fwait
adc
sub
mov
cld
mov
ja
ja
sub
sbb
scas
and
xchg
shl
idiv
imul
mov
xchg
popf
push
out
mov
sub
cmp
nop
push
enter
cmp
pusha
popa
dec
outs
xchg
les
jle
xchg
xchg
mov
dec
(bad)
mov
cmc
jns
icebp
leave
cmp
lahf
jb
cmps
inc
pop
ins
or
arpl
push
ret
add
mov
dec
jno
sahf
dec
and
xor
ret
mov
dec
sahf
mov
pop
rcl
dec
dec
jp
push
shl
xchg
stos
daa
push
rol
ins
dec
test
out
and
dec
sbb
loop
ins
addr16
inc
mov
jecxz
call
nop
sbb
mov
sub
(bad)
lea
rcl
dec
repnz
inc
push
sub
adc
sbb
jmp
sti
data16
dec
jg
add
jl
cmp
retf
and
xor
mov
out
dec
pop
out
les
sbb
shr
imul
xchg
sbb
cli
jne
out
fisttp
retf
push
pushf
mov
int3
sbb
fnstcw
dec
jnp
(bad)
fisub
dec
mov
inc
xchg
mov
inc
sbb
fsubr
jbe
es
push
xlat
and
aad
lock
aad
(bad)
imul
jbe
push
cmp
dec
pop
push
and
sub
xchg
push
fsubr
inc
scas
xchg
addr16
stc
cmp
pop
cmp
aaa
dec
mov
sub
fiadd
js
in
mov
cmp
out
in
sub
inc
mov
mov
xchg
in
or
add
inc
cmps
stos
add
in
mov
pop
jle
mov
in
repz
lea
mov
inc
xchg
xchg
fdiv
mov
adc
inc
and
inc
mov
push
mov
ds
shl
not
sub
daa
jl
jnp
pop
jmp
mov
std
in
fsub
push
mov
push
adc
push
or
enter
sub
push
fwait
loop
fwait
adc
xor
pop
stos
mov
jl
mov
cmps
sub
sbb
nop
ds
mov
mov
(bad)
dec
jp
loope
dec
xchg
movs
xchg
jge
scas
aaa
adc
xchg
xchg
push
add
test
jnp
sub
mov
les
xor
jp
mov
in
adc
adc
fisub
and
xor
pop
lahf
mov
and
xchg
es
daa
push
(bad)
shr
jecxz
mov
repz
loopne
pop
xchg
ret
inc
rcl
jno
mov
cmps
cwde
fst
and
xchg
jg
inc
jb
aad
ja
pop
popf
push
fimul
or
ins
movs
push
int3
not
mov
imul
hlt
out
fsub
push
mov
jns
ins
test
mov
aam
imul
mov
out
mov
cmp
mov
mov
test
retf
push
pop
pop
push
inc
lods
pop
adc
les
dec
out
cli
aad
mov
mov
jg
lea
arpl
adc
cmp
push
pop
js
outs
pop
cwde
(bad)
out
rcr
lds
imul
iret
push
(bad)
in
pop
cld
or
(bad)
stos
lods
pop
xchg
sub
pop
inc
leave
out
or
mov
repnz
jge
add
pop
adc
into
and
std
in
loopne
push
or
pushf
retf
add
sub
mov
not
mov
xor
push
repz
push
pop
xor
loop
in
out
loopne
sub
(bad)
fnsave
pop
nop
jo
xchg
xor
jecxz
xor
movs
or
sub
mov
cld
stos
(bad)
out
jg
nop
js
call
call
rcl
add
cmps
or
mov
dec
pop
inc
(bad)
out
sub
pop
pop
aas
adc
fisubr
pusha
and
push
sub
outs
pop
add
adc
xlat
pop
sbb
push
repnz
xor
dec
(bad)
sti
ret
ins
inc
cmps
xor
cs
lahf
jmp
mov
out
xor
mul
mov
dec
inc
jno
jge
pop
ret
inc
sbb
jmp
loope
mov
cmps
cmp
adc
mov
mov
cmps
cmps
lock
mov
jmp
clc
push
movs
cmp
retf
les
cmp
adc
test
pop
int3
mov
int3
dec
xor
jnp
mov
movs
mov
add
mov
iret
jbe
cmp
adc
push
pop
icebp
scas
dec
in
outs
ins
mov
mov
and
mov
xchg
push
xchg
inc
out
not
mov
inc
mov
imul
je
mov
gs
or
fdivr
jecxz
das
ret
inc
repnz
stos
push
cmc
test
push
fwait
and
pop
adc
inc
fld
jnp
das
xchg
xchg
sbb
xchg
sub
sahf
sbb
mov
xor
xor
jl
iret
call
fisubr
sub
shl
inc
cmp
jb
mov
loope
mov
cld
xchg
icebp
adc
scas
pop
fadd
lahf
ss
pushf
push
inc
xchg
xor
push
fprem
adc
std
repz
cs
pushw
or
fdiv
inc
mov
jb
adc
push
inc
aaa
sub
gs
push
and
daa
lds
and
popf
mov
movs
mov
mov
cmp
cmp
stos
sub
mov
je
mov
icebp
mov
cs
mov
js
cmps
jmp
cdq
or
mov
mov
or
das
sbb
inc
sti
(bad)
stc
loop
cmps
mov
jb
xchg
add
dec
inc
enter
push
loope
mov
mov
mov
add
aas
inc
jecxz
fsubr
jbe
ins
xchg
sbb
push
ss
ds
imul
jmp
xor
pushf
or
movs
ret
and
dec
sahf
xor
pop
data16
pop
dec
std
or
(bad)
lods
mov
int3
xchg
sbb
ins
repnz
(bad)
push
in
stc
shl
sub
push
rcr
push
pop
jo
or
rcl
aas
jmp
pop
add
imul
out
add
pop
sbb
ds
cmps
mov
pshufw
stos
xchg
movq
jmp
mov
shr
pop
scas
mov
fcom
scas
movs
push
leave
adc
cmp
cmp
mov
dec
sbb
ss
fxch
dec
mov
mov
cmp
mov
mov
inc
cli
inc
adc
popa
imul
loopne
(bad)
repnz
ss
shr
cdq
in
adc
and
and
scas
(bad)
xchg
push
or
arpl
mov
push
xor
(bad)
loope
mov
pop
add
xor
rcr
pop
int3
je
pop
add
xchg
scas
popf
mov
imul
cwde
and
or
or
push
fdiv
sub
push
mov
dec
add
adc
cmps
cmps
stc
inc
mov
fs
cmp
push
retf
mov
and
jbe
in
xor
pop
add
or
jb
mov
sbb
shl
mov
bound
sbb
(bad)
jge
in
mov
out
js
pop
ins
adc
test
push
fwait
cmc
inc
popa
pop
(bad)
mov
adc
ins
movs
mov
out
daa
in
or
pop
xor
fist
iret
aaa
mov
mov
retf
xlat
into
popf
hlt
addr16
cmp
jae
test
and
inc
iret
inc
push
call
mov
fst
xor
pop
fisttp
sbb
or
lea
out
scas
mov
add
mov
and
mov
add
out
out
(bad)
push
call
jno
addr16
add
cld
loope
mov
pop
sbb
and
pop
jne
in
sub
stc
xchg
mov
jo
test
loope
mov
inc
xchg
ins
xor
pop
or
push
jl
(bad)
int3
push
xchg
lock
lahf
sbb
das
jnp
in
pop
jl
push
or
or
sbb
xchg
lds
sahf
repz
fisub
ins
xchg
retf
xor
shr
xor
(bad)
or
and
inc
inc
pusha
jne
pcmpgtd
repz
stos
test
mov
in
test
mov
jno
cli
adc
pusha
or
hlt
pop
fidivr
adc
test
adc
jnp
in
push
sub
pusha
push
dec
je
mov
cmc
xchg
adc
lods
push
push
pop
push
jnp
sbb
aam
adc
pop
mov
cmp
ja
not
xlat
popf
inc
inc
sar
fidiv
(bad)
cli
int
or
mov
mov
sbb
movs
sub
mov
jmp
inc
repz
adc
mov
xor
sub
push
mov
(bad)
int
ret
sub
push
and
(bad)
push
inc
push
mov
(bad)
hlt
out
or
int
sub
sahf
push
ds
idiv
fmul
ja
dec
retf
out
xor
adc
push
and
mov
mov
in
call
sbb
aas
cli
stos
pushf
push
mov
ins
(bad)
lods
mov
shl
pop
popa
inc
leave
xchg
ins
pushf
(bad)
mov
ds
imul
in
pop
pop
fidiv
mov
jmp
rcr
xchg
pop
pop
jecxz
xchg
or
scas
sbb
dec
movs
mov
dec
and
jecxz
cmp
jg
in
or
sbb
sbb
movs
std
sbb
mov
lahf
lds
je
shl
xchg
mov
push
mov
fstp
sub
fild
sub
sbb
test
ret
int3
push
mov
jl
loopne
push
pop
(bad)
out
sub
push
js
dec
mov
and
cwde
pop
or
xlat
mov
mov
inc
fist
in
fst
pop
cmp
mov
cmc
jl
(bad)
adc
fld
mov
xchg
xchg
out
or
stos
push
adc
pop
lahf
mov
fnstenv
jmp
mov
xchg
fcomp
lods
ja
push
fisubr
(bad)
rcl
imul
bound
mov
movs
cmc
sbb
jmp
cmp
iret
jecxz
sub
xchg
and
arpl
cmps
pop
dec
sbb
retf
jle
(bad)
out
push
stc
jl
push
add
sar
stc
cmp
dec
pop
call
test
cmp
je
es
push
or
cmp
ror
retf
inc
push
repnz
adc
sbb
mov
retf
pop
jmp
sbb
xchg
dec
cmps
jnp
loope
(bad)
scas
push
vpsubq
cmc
(bad)
push
iret
inc
mov
xor
in
push
inc
xor
push
push
stc
jg
sti
dec
inc
fstp
sub
xchg
movs
and
cdq
pop
push
lock
fsub
aaa
jg
and
pop
mov
cmp
int3
jne
test
cmp
push
or
sub
jl
shr
sbb
xchg
shl
rcl
shr
loop
shl
repnz
inc
and
inc
sub
mov
out
(bad)
xor
(bad)
jb
movs
das
scas
push
xchg
or
fidivr
push
push
fwait
call
aam
xchg
jmp
sti
fadd
inc
cld
and
stos
test
fst
adc
loope
(bad)
sahf
jle
sub
inc
stos
cmp
jb
std
pop
jp
test
add
mov
daa
and
push
mov
sbb
xchg
and
cmp
ins
aam
push
pop
dec
push
dec
in
sub
inc
dec
inc
xor
int
shl
popf
mov
or
jp
push
dec
icebp
iret
xchg
xlat
add
sub
cwde
push
mov
in
out
jle
pop
add
popa
pop
or
or
add
ja
cli
in
cwde
out
bound
dec
sbb
adc
fidivr
out
mov
push
adc
(bad)
mov
inc
inc
fiadd
adc
enter
out
iret
mov
mov
int3
jo
scas
add
aad
ret
stos
in
cmp
loope
add
in
ss
mov
lahf
fild
fdiv
cdq
adc
data16
add
int
pop
pop
or
rol
jb
mov
xchg
and
movs
xor
shr
(bad)
cdq
in
(bad)
repnz
ds
inc
sar
call
loope
jo
ret
mov
xor
je
jne
es
in
cmps
mov
mov
xor
adc
pusha
xchg
xlat
jbe
jno
pop
adc
pop
dec
mov
sti
mov
retf
into
adc
lods
pop
cmp
adc
push
or
outs
dec
movs
lock
pop
loope
(bad)
sar
rcr
jae
ret
loopne
int
pop
jecxz
inc
pop
xor
in
hlt
(bad)
dec
xchg
aad
mov
pop
dec
loop
lock
jo
jne
inc
mov
call
int
add
mov
cwde
push
or
popf
mov
mov
add
adc
and
call
cmp
mov
fdivr
rcl
ss
popa
cmp
xchg
clc
sub
mov
pushf
mov
inc
pop
in
jmp
add
xlat
cmps
dec
das
adc
inc
nop
sub
cld
or
mov
call
lods
add
pop
mov
outs
frstor
push
dec
mov
mov
adc
dec
out
lea
mov
and
cmp
add
xlat
daa
add
push
pop
js
xlat
pushf
ror
push
fistp
ja
(bad)
jg
out
or
stos
inc
mov
jnp
jbe
sahf
mov
stc
adc
rcpps
call
sti
add
fst
add
pop
mov
cmp
out
cld
cli
out
rol
es
sbb
mov
fidivr
leave
sar
or
daa
stos
sub
ds
std
(bad)
dec
sar
aas
cld
sbb
(bad)
stos
lea
cmp
loope
push
iret
bound
xor
mov
jg
loop
adc
pop
stos
pop
fmul
xchg
in
retf
test
mov
je
jno
pop
add
outs
lea
sub
(bad)
aam
(bad)
xor
xchg
lahf
enter
cmp
popa
addr16
xchg
in
xor
retf
jle
mov
jmp
popf
aad
pop
or
jne
xorps
test
out
and
cdq
ss
out
cld
das
push
mov
pop
adc
xor
(bad)
jbe
scas
lods
sub
jp
int
imul
push
inc
ret
mov
test
jmp
leave
pop
cmps
sub
sar
retf
jne
adc
les
dec
xchg
(bad)
sbb
jmp
pushf
cmc
lods
sbb
lds
popa
and
push
xor
pusha
cs
icebp
sbb
jp
call
out
rcr
push
mov
daa
and
loope
sbb
add
add
dec
or
pop
cmp
repz
fcomp
mov
enter
cwde
ret
mov
add
sbb
scas
jmp
jmp
xchg
adc
int3
mov
loop
xor
dec
sub
mov
xor
dec
lods
mov
sar
mul
sub
xor
sbb
push
sbb
data16
pusha
push
jl
xchg
jmp
aas
sub
or
into
sbb
push
sbb
neg
ja
push
or
outs
mov
xchg
repz
arpl
int3
shl
xor
retf
aaa
pushf
pop
hlt
or
sub
jecxz
or
xchg
mov
mov
inc
out
inc
or
bound
adc
int3
repz
aas
in
ret
xchg
pop
or
stos
out
push
or
jle
xchg
outs
pop
inc
int
(bad)
cmp
pop
mov
sub
xchg
pushf
and
sbb
stos
enter
sbb
mov
and
and
popa
leave
xor
inc
gs
cmp
and
fcom
and
fild
lea
outs
mov
pop
ja
fisub
add
or
mov
daa
dec
call
repnz
sbb
js
or
mov
ret
imul
mov
retf
mov
jl
outs
xor
(bad)
cs
mov
sbb
sbb
cmc
rol
dec
cwde
and
jl
push
pop
mov
xor
mov
or
cmc
push
mov
push
fisttp
shl
or
frstor
pop
or
ret
lds
scas
inc
test
cmc
lods
enter
in
or
add
(bad)
jns
in
inc
mov
sub
push
sbb
int3
shl
retf
and
dec
in
pop
jmp
push
outs
(bad)
jmp
(bad)
mov
xor
(bad)
sbb
or
mov
mov
mov
dec
idiv
cmp
sub
iret
xchg
aam
inc
(bad)
sbb
mov
clc
sub
jae
scas
push
pop
outs
jb
mov
jbe
dec
pop
push
out
or
xchg
iret
fistp
inc
shr
scas
out
xchg
or
mov
lods
or
shr
sti
xor
cli
lods
pop
cdq
mov
movs
dec
sbb
stos
sbb
adc
push
sti
pop
add
or
add
jle
leave
test
popf
out
(bad)
xchg
and
outs
cmps
cli
mov
cld
cmp
jno
repz
arpl
sbb
mov
cmp
jle
sub
dec
sbb
add
pusha
or
xchg
retf
jnp
push
stc
cmp
test
jo
rol
hlt
xchg
test
pop
or
sbb
inc
lea
nop
jno
mul
fnstcw
cld
mov
movs
mov
mov
sbb
mov
dec
fld
mov
adc
xchg
pop
test
loopne
and
(bad)
mov
xor
ds
ins
(bad)
ret
inc
mov
dec
mov
addr16
test
or
daa
mov
movs
sub
js
adc
cli
(bad)
push
ss
repnz
(bad)
mov
and
and
inc
and
ins
mov
add
and
fwait
inc
pushf
fadd
push
and
dec
xchg
mov
xchg
leave
add
jmp
scas
pop
pop
ja
mov
mov
dec
inc
xchg
jne
jecxz
jmp
pop
ret
cdq
shl
xchg
inc
adc
dec
push
jnp
enter
jp
inc
sbb
je
rcr
xor
add
jno
dec
imul
loope
cwde
stc
lock
mov
inc
jge
push
xlat
(bad)
add
bound
arpl
neg
stos
sti
inc
neg
ret
push
xor
lods
add
add
loope
shl
ret
mov
imul
mov
pop
dec
popa
mov
jecxz
add
popa
cmovl
pusha
clc
fdiv
retf
ja
pop
mov
or
into
lahf
inc
pop
cmps
xchg
push
jbe
jnp
push
imul
pop
pop
sub
push
cli
adc
jb
jp
movs
fwait
pushf
hlt
or
xor
shl
adc
ins
jae
inc
adc
mov
shl
push
(bad)
sub
and
imul
mov
dec
pop
mov
outs
lock
(bad)
jns
fidivr
imul
shr
mov
mov
xor
rcl
ins
dec
std
cmp
lds
inc
test
test
div
stos
gs
and
jp
(bad)
js
pop
jae
or
lock
jle
jl
lahf
inc
imul
xchg
mov
push
mov
in
mov
sub
sub
pop
in
xchg
mov
outs
pop
out
xor
inc
mov
inc
add
push
adc
(bad)
std
icebp
dec
mov
sar
into
add
sub
jne
add
add
hlt
pushf
outs
mov
xchg
ins
cmps
and
pop
callw
cmp
popa
or
adc
or
aam
mov
cmp
jne
sbb
and
pop
int
xor
jg
std
add
xchg
mov
mov
adc
sti
pop
pop
mov
(bad)
int
adc
pop
das
das
bound
and
jmp
jne
and
shl
cwde
mov
xchg
xchg
adc
(bad)
jns
sub
push
sbb
cmp
sub
ja
mov
nop
int
adc
inc
and
dec
ret
mov
das
xchg
pop
xor
push
sahf
cmp
jnp
hlt
ror
jbe
dec
push
mov
xor
xor
retf
or
mov
xchg
ret
ds
push
mov
xor
mov
popa
pop
mov
aas
sub
ja
jmp
das
je
inc
or
cmp
(bad)
ror
xchg
inc
or
aaa
mov
loop
std
out
sti
inc
push
xor
jge
mov
int3
adc
xlat
or
stos
cmps
shr
cmps
pop
inc
adc
movs
add
pop
fdivp
in
add
outs
sbb
jns
mov
jecxz
aam
lock
push
push
into
jle
pop
add
movs
fldenv
and
jecxz
mov
pop
js
sub
cld
ds
hlt
fisttp
shl
mov
mov
(bad)
cmp
mov
cmp
aad
fdiv
leave
inc
dec
ja
jnp
nop
cld
or
cmp
cmp
(bad)
jl
ss
push
int
sub
cmp
outs
xor
nop
dec
cmp
or
mov
test
fadd
aam
adc
or
push
inc
jno
inc
pop
mov
lock
cwde
loope
fmul
adc
scas
loopne
enter
ins
ret
in
cmp
retf
push
or
add
fnstenv
and
add
xor
rcr
call
or
ficom
xchg
cdq
jl
fstp
js
jo
mov
sbb
cmp
and
push
push
stc
cmp
cmp
pop
push
or
pop
add
or
arpl
mov
outs
push
leave
adc
lds
cmps
jno
jb
pushf
sub
ins
or
stos
ins
or
ret
call
xchg
add
sbb
cmp
and
pop
outs
push
mov
sbb
mov
mov
or
cmps
sub
hlt
jns
xchg
sahf
es
lock
inc
scas
jnp
add
mov
lods
enter
loopne
xchg
push
inc
ins
xor
pop
push
push
outs
rol
dec
pop
inc
dec
mov
cmp
xor
push
cmp
nop
or
mov
movnti
in
outs
add
leave
inc
or
xchg
xchg
aam
inc
lea
outs
in
sbb
mov
das
loop
xlat
in
mov
or
(bad)
data16
xor
add
mov
lds
fiadd
pusha
mov
int
sahf
mov
add
xchg
dec
xor
paddusb
cld
xchg
(bad)
gs
cmps
icebp
neg
push
sbb
xchg
xor
fistp
jle
xchg
imul
sub
cmp
fnstenv
scas
xchg
xchg
mov
xlat
push
cs
rol
enter
stos
push
xlat
loope
sub
imul
mov
scas
jb
jno
xchg
jne
bound
mov
aaa
test
mov
popf
rol
cdq
push
in
push
sub
lods
rol
(bad)
fidiv
xlat
in
fisubr
cwde
ret
retf
dec
fimul
jns
daa
sub
ficom
(bad)
pop
in
fsub
add
adc
sbb
gs
pop
stc
ins
pop
pop
cmps
sahf
je
icebp
or
gs
inc
imul
pop
mov
jmp
jg
mov
fcomp
pop
lock
ror
and
xor
cs
shl
imul
or
mov
xor
jae
loope
popf
adc
jp
xlat
aas
add
ins
fisttp
and
and
dec
in
mov
push
(bad)
cmp
xor
xor
daa
pop
xchg
jb
aaa
mov
dec
cld
sub
test
or
sbb
xor
add
fsubr
or
mov
out
div
sbb
dec
dec
mov
daa
dec
cmps
mov
mov
lock
mov
les
cdq
mov
add
push
sub
xchg
and
(bad)
and
jae
dec
pop
out
xchg
fwait
sub
sub
pop
(bad)
imul
jge
lea
repz
(bad)
fadd
sbb
fs
xor
inc
and
js
sub
cmc
repnz
outs
and
and
mov
jecxz
xor
cmp
pushf
xchg
cmps
int3
test
cmp
ret
sub
cld
inc
enter
bound
pusha
push
lods
and
dec
lods
dec
icebp
test
les
scas
dec
mov
add
cs
bound
or
es
inc
imul
neg
add
in
test
in
popf
add
(bad)
cwde
dec
outs
inc
xlat
aaa
xchg
pop
mov
and
xchg
dec
mov
adc
inc
and
xor
dec
jnp
test
sub
inc
xchg
adc
fstp
sbb
cmp
loopne
int3
adc
mov
mov
mov
mov
cmp
in
or
xchg
sbb
jbe
jbe
mov
push
popf
lea
stos
arpl
xchg
xchg
nop
ret
jne
popa
sar
mov
gs
or
in
sub
in
ret
mov
(bad)
test
ins
fcomp
mov
es
pop
loope
sub
mov
sbb
ins
jb
sub
xor
mov
mov
dec
cmp
xor
std
fcmovnu
push
stos
sti
sub
sub
add
ret
mov
mov
jae
xor
inc
ret
scas
mov
imul
mov
push
sbb
fisub
(bad)
shr
cdq
cmp
and
sar
ror
lods
lock
outs
xlat
retf
imul
pop
(bad)
sbb
in
repz
mov
retf
lea
shr
push
dec
in
pop
or
pop
cmc
cwde
fidiv
push
and
cmc
adc
pushf
pop
cmp
rcr
sar
mov
inc
push
xor
neg
test
lods
add
das
fadd
pop
push
xchg
scas
int
and
loop
cli
idiv
fbstp
pop
push
cmp
test
bound
pop
aaa
mov
or
out
mov
loopne
fsubr
out
out
xor
and
xchg
sbb
aad
xchg
arpl
mov
outs
aas
cld
stos
dec
packsswb
mov
jge
sub
pop
leave
and
mov
mov
mov
ja
fdiv
jg
in
sbb
mov
push
mov
dec
in
push
fimul
inc
dec
aam
pop
cmps
enter
cmc
xor
js
sbb
out
outs
adc
(bad)
into
lahf
ret
dec
mov
jns
mov
mov
sub
add
sbb
pop
ins
das
push
cmp
jns
xchg
mov
mov
cli
pop
icebp
cld
jno
mov
call
mov
fsubr
and
cmp
xchg
pop
sub
retf
mov
aaa
and
lahf
mov
push
rcl
sbb
es
sbb
adc
dec
movs
pop
fdivr
popf
outs
sub
jne
gs
push
pop
pop
pusha
or
pop
lds
idiv
loop
ret
(bad)
std
xor
or
mov
fwait
daa
push
jl
jbe
xlat
leave
imul
dec
imul
sar
jne
xchg
leave
(bad)
jg
outs
push
rcl
ins
fisttp
sar
cmp
imul
cmps
pop
pop
mov
xor
xor
jo
outs
out
and
icebp
mov
dec
(bad)
mov
pop
js
sub
loope
stos
sbb
lods
sub
movs
retf
add
mov
xchg
je
xchg
addr16
lahf
mov
xor
cmps
in
leave
jg
mov
inc
fcom
dec
test
add
imul
fnstsw
push
fwait
je
jno
movs
cli
xchg
mov
test
repz
cmp
xor
stc
sub
xor
jae
push
arpl
out
popa
test
imul
hlt
dec
(bad)
xor
pusha
sbb
dec
sub
mov
add
popw
xor
jb
sbb
jge
mov
push
pop
jge
test
xchg
cmps
ret
in
xchg
pop
pushf
lock
fcom
repnz
adc
push
cld
cmps
jbe
push
and
mov
adc
ins
cmp
xchg
fwait
nop
and
fs
mov
jb
cmp
xchg
sbb
loopne
dec
sbb
mov
cmps
shl
dec
adc
push
shl
fisttp
(bad)
fild
nop
call
aaa
adc
jmp
and
dec
aam
das
inc
in
pop
repnz
inc
stos
retf
retf
xchg
or
fistp
xchg
adc
jo
call
in
xchg
jl
fdivr
mov
cmps
arpl
int3
cwde
xor
cmp
mov
cmp
in
pop
sbb
ret
loopne
les
dec
mov
int3
cmp
cmps
daa
sbb
dec
aaa
test
repnz
mov
mov
xor
or
and
mov
sub
cmps
stos
sbb
mov
imul
mov
xchg
mov
add
push
(bad)
mov
push
call
enter
jno
in
(bad)
xchg
jp
adc
stc
or
fld
mov
retf
gs
test
mov
cmovo
jecxz
lods
scas
dec
xchg
and
jbe
stc
inc
nop
pop
pop
pop
ins
(bad)
inc
pop
mov
dec
dec
xlat
mov
cmc
mov
pop
movs
stc
addr16
es
and
idiv
xchg
hlt
repnz
stc
push
mov
or
cdq
push
mov
enter
psrld
in
xchg
pop
imul
fwait
daa
dec
les
loopne
jmp
adc
mov
dec
int3
inc
mov
enter
sub
push
data16
shr
retf
xor
adc
sub
inc
icebp
jmp
adc
shr
dec
jmp
sti
mov
loope
rcl
es
mov
(bad)
test
mov
imul
cs
neg
test
les
jecxz
add
mov
mov
jg
mov
cmp
out
aaa
xor
retf
rcr
xor
popf
test
mov
xor
sub
es
sbb
mov
imul
pop
dec
test
retf
icebp
jmp
dec
pop
lea
out
ret
add
iretw
jl
sbb
adc
imul
fild
je
mov
lahf
pop
sbb
push
vpslld
pop
cmp
dec
fsubrp
cmps
jmp
int3
mov
inc
addr16
or
adc
mov
fidiv
nop
jle
mov
scas
mov
hlt
movs
movs
ins
sbb
cmps
lods
xor
xor
out
mov
ja
dec
test
jnp
sbb
mov
or
lds
(bad)
pop
push
xchg
inc
out
ins
std
and
mov
mov
sbb
add
scas
mov
in
and
inc
mov
pop
pop
das
bound
popf
lahf
scas
dec
into
mov
adc
cmps
and
out
mov
out
es
test
xor
add
sahf
test
or
dec
ror
cmpxchg
(bad)
aaa
inc
jno
dec
xor
pop
jge
dec
pop
pop
push
std
xor
dec
cmp
push
add
fadd
cmp
cmps
scas
fistp
push
xchg
adc
adc
dec
jo
jle
js
mov
cvttps2pi
icebp
icebp
pop
ins
fadd
mov
pop
jmp
jbe
mov
xor
(bad)
pop
mov
js
popa
xor
inc
mov
popf
dec
rcl
pusha
jb
push
cmp
sar
sti
jb
scas
xor
int
ret
inc
and
outs
fwait
ret
mov
gs
xchg
cmp
dec
scas
pusha
inc
add
ins
dec
pop
and
and
jb
jne
outs
loop
test
lock
and
push
les
aad
cdq
rol
or
adc
adc
sub
idiv
add
cdq
dec
neg
enter
cmpxchg
test
jb
ror
imul
stc
fsub
xor
or
enter
xor
ror
sub
pop
cmp
xor
push
mov
call
xor
xor
mov
xchg
pop
lock
and
out
pushf
dec
xchg
sub
mov
inc
xor
push
push
sub
pop
fnsave
xchg
inc
push
or
pop
fadd
fs
adc
stos
xchg
arpl
int
and
std
pusha
mov
hlt
adc
call
xor
xchg
fadd
sub
pushf
mov
test
pusha
test
std
add
cdq
jp
in
stos
(bad)
mov
(bad)
or
mov
fdiv
jbe
pushf
shr
inc
movs
xor
test
in
dec
jno
sahf
cmps
pushf
(bad)
push
ficomp
xchg
outs
sbb
stc
icebp
mov
sbb
mov
push
repnz
daa
xor
mov
das
(bad)
into
rol
push
neg
cs
call
push
fisub
mov
in
and
rol
or
mov
aad
add
mov
outs
add
imul
js
fs
popf
repz
dec
cmp
cs
fisttp
and
repnz
mov
inc
pminsw
stc
ret
dec
div
ss
cmps
in
dec
fisttp
xchg
xchg
gs
jle
dec
pop
int3
add
ret
pop
enter
jnp
mov
adc
rcl
xor
stos
out
xor
jns
mov
and
mov
movs
nop
push
push
ss
xlat
jo
mov
sub
dec
jo
sbb
pop
xor
or
(bad)
loop
fs
adc
xchg
pop
dec
cmp
fstp
loope
jmp
int3
call
loope
xchg
mov
into
popa
rol
les
jo
sbb
inc
and
and
sub
pop
or
mov
mov
cmps
push
hlt
aam
inc
stc
loopne
fistp
fadd
or
lods
add
push
or
outs
pop
jecxz
stos
xchg
xchg
sub
popa
cmp
retf
aaa
and
mov
and
xchg
push
and
push
mov
add
cmps
mov
and
adc
mov
xchg
leave
xor
in
pop
pop
add
out
push
call
jp
cmp
inc
and
aad
add
lock
stos
dec
sub
aam
pop
xor
or
idiv
test
pop
xor
inc
cmp
int
sbb
aad
ins
mov
cmc
not
loope
adc
sbb
mov
mov
dec
stos
pop
mov
call
dec
xor
daa
in
pop
push
arpl
and
fild
mov
ja
adc
dec
outs
loopne
scas
pop
div
addr16
fadd
cmc
mov
lods
xor
and
inc
out
inc
sub
rcl
or
int3
arpl
in
das
mov
xor
les
jno
sub
popf
mov
jg
jnp
add
mov
jb
sahf
mov
push
retf
imul
cmp
pop
inc
mul
(bad)
push
cmc
loop
out
addr16
push
retf
mov
jae
or
push
int3
mov
lock
movs
in
int
inc
mov
sub
jge
jecxz
mov
in
sub
jne
sar
and
jno
pushf
push
or
or
retf
fmul
add
enter
ds
outs
and
fld
movaps
xor
add
in
xchg
inc
mov
imul
or
mov
rcr
sub
dec
jp
popa
sbb
in
sub
in
retf
ret
cmp
fdiv
xor
mov
fisubr
mul
xor
xchg
mov
mov
pop
(bad)
mov
add
leave
out
pop
xchg
sub
adc
test
sub
or
xor
sub
cmp
ret
stos
push
inc
cmp
ins
add
dec
cmp
add
shl
enter
push
cmp
iret
push
xor
lods
pop
sub
or
push
int
fdivr
(bad)
mov
in
loopne
aaa
or
test
int3
imul
pop
sbb
repnz
mov
ret
stc
dec
test
or
mov
pop
sbb
int3
inc
dec
dec
jnp
push
jecxz
jno
xor
jne
push
fistp
adc
dec
aad
lds
xchg
sub
cmps
out
add
or
loopne
sub
mov
push
xor
push
into
cs
dec
lds
dec
push
mov
icebp
add
lods
dec
and
mov
test
cdq
xor
xchg
scas
mov
retf
adc
sub
or
ins
adc
and
adc
mov
mov
sbb
popf
call
gs
mov
repz
pop
fst
(bad)
(bad)
dec
movs
enter
sub
push
ins
xchg
in
xchg
rol
cmps
mov
call
dec
cmp
pop
test
adc
mov
sbb
sub
inc
xor
popf
jno
or
sahf
les
into
push
or
iret
xchg
mov
xchg
push
popf
fld
xor
jae
push
outs
mov
sub
sbb
cs
popa
push
pop
inc
push
ins
fist
fdivr
imul
lock
add
mov
into
std
out
sub
test
movs
push
popf
js
mov
jae
popf
inc
or
not
mov
or
scas
(bad)
int3
sub
cmp
ror
in
mov
push
in
stos
mov
push
shr
push
jno
or
dec
dec
sub
aad
sar
mov
imul
xor
sbb
sbb
push
loope
cmp
push
push
add
sub
add
and
mov
ds
push
mov
mov
mov
sar
popf
push
in
or
dec
outs
gs
push
adc
iret
stos
mov
cdq
cmc
push
inc
cmps
seto
mov
(bad)
push
cmp
pusha
shr
pushf
push
jge
push
mov
in
scas
cmp
jl
ins
xchg
jnp
sub
paddd
idiv
call
cmp
inc
mov
xchg
pcmpeqw
and
push
or
push
or
and
pusha
cmc
in
cmp
mov
sub
les
mov
ffree
push
ror
push
add
inc
adc
out
inc
hlt
xor
xchg
int
mov
pushf
xchg
mov
es
cdq
jmp
fwait
adc
aad
bound
xor
inc
pop
xor
out
cdq
loopne
push
(bad)
mov
xlat
mov
push
pop
in
lods
jge
dec
jle
mov
push
stc
fmulp
popf
adc
dec
pop
adc
jmp
data16
test
jb
sti
xchg
jo
adc
and
adc
inc
or
test
sub
jg
mov
js
sub
xchg
mov
retf
xor
cwde
push
sti
jns
jmp
sub
push
aam
xchg
scas
stc
nop
rol
je
jbe
mov
sub
div
mov
push
(bad)
jmp
dec
test
int
or
dec
and
mov
enter
aaa
mov
das
sti
ins
jnp
and
mov
rcl
cdq
adc
add
fwait
cmp
les
adc
jle
imul
gs
stos
jo
ds
neg
fxch
lahf
mov
pop
cld
cmp
lock
mov
je
retf
push
cdq
in
(bad)
leave
jecxz
lea
out
stos
jo
sti
and
cmc
and
test
pop
dec
push
push
mov
xor
call
in
inc
push
pop
push
pop
out
push
or
xchg
bound
sbb
jnp
and
out
push
sbb
rol
outs
inc
or
jnp
cmc
stos
mov
jmp
sbb
pop
sub
dec
xor
and
imul
pop
adc
out
bound
aas
popa
add
lods
stos
fadd
(bad)
cs
inc
sub
jg
sbb
add
sar
enter
push
pop
mov
(bad)
aam
sub
or
test
mov
mov
loopne
int
push
jns
std
loopne
frstor
dec
rol
lock
xchg
add
jmp
cmp
ret
(bad)
mov
mov
xchg
mov
cs
add
jmp
lds
mov
mov
add
jl
aas
rep
inc
xchg
jno
pmulhuw
add
loope
inc
retf
lea
and
call
push
enter
(bad)
jl
xchg
add
repz
mov
aad
xor
out
pop
mov
push
xchg
fs
cmp
lods
inc
mov
lock
or
adc
fstp
sbb
dec
cmp
dec
call
shl
adc
and
mov
cmp
cmp
(bad)
adc
mov
ins
(bad)
movs
mov
add
xor
or
iret
out
or
mov
imul
iret
xor
push
pop
dec
test
sbb
push
retf
sub
pusha
int
inc
pop
sub
int
mov
test
mov
mov
sub
xchg
out
mov
popa
sub
jne
cmp
xor
sub
bound
fwait
add
(bad)
sub
jle
and
add
mov
ror
outs
jmp
cld
cmc
dec
xchg
setb
es
pop
jmp
push
dec
outs
cmps
sahf
push
ins
call
jge
movs
shl
sub
dec
jo
stos
inc
sti
push
cs
jp
sub
arpl
shl
adc
lea
mov
aas
push
push
ds
xor
or
fcomp
push
xchg
mov
sub
mov
jns
add
fs
mov
jo
push
mov
das
sti
jg
xor
mov
inc
cmp
cmp
dec
mov
ss
inc
xchg
out
dec
popa
fs
das
aad
mov
jge
mov
fwait
or
sbb
xor
sahf
add
dec
retf
push
xlat
loope
lea
or
adc
popa
dec
add
movs
push
mov
add
sbb
fsub
cmp
mov
icebp
aas
out
sub
shr
dec
retf
sar
cmp
jmp
adc
test
mov
mov
xor
mov
jbe
push
ins
loop
mov
aam
std
in
xchg
adc
fld
sti
call
shr
add
inc
leave
imul
xor
shl
add
scas
dec
add
xchg
sar
js
mov
ret
push
pop
jmp
lds
add
mul
push
std
into
push
and
add
push
push
sbb
push
call
cmp
pop
in
mov
(bad)
mov
jbe
dec
xchg
cmc
ret
mov
xchg
stos
lods
ror
xchg
xlat
repz
fwait
sub
scas
cmc
and
stos
xlat
imul
iret
jb
into
adc
or
xchg
out
push
call
in
inc
ficomp
cmc
pop
or
xor
pop
dec
in
call
mov
dec
mov
js
call
ins
fs
retf
pop
daa
push
push
xor
xor
jbe
xchg
rcl
inc
cmp
sbb
ja
add
dec
mov
inc
ins
cmp
enter
test
sbb
jge
mov
gs
sbb
pop
mov
shl
lock
stos
ins
mov
sbb
dec
scas
pop
xor
add
inc
lds
jbe
fnsave
jecxz
mov
pop
mov
lahf
in
fstp
cmp
xlat
into
xchg
repz
push
fwait
es
test
adc
lock
xchg
push
cmp
jp
jno
jp
enter
xlat
xor
adc
ret
and
ror
and
adc
sbb
js
loope
or
adc
push
push
jl
(bad)
mov
sbb
repnz
inc
mov
outs
cmp
(bad)
or
jae
jno
(bad)
push
xchg
mov
daa
mov
jbe
push
xor
xchg
test
or
out
push
fimul
(bad)
pop
xlat
add
fistp
mov
ss
mov
cdq
js
inc
jo
push
mov
es
jae
and
sahf
addr16
and
xchg
leave
hlt
jmp
push
and
daa
dec
int3
mov
or
xor
or
outs
jno
push
ffreep
mov
inc
pop
scas
std
pop
je
bnd
sub
push
mov
(bad)
jmp
fld
sub
mov
sbb
ret
sbb
add
xchg
pop
lea
sar
xchg
cdq
cmp
fld
inc
(bad)
xor
sahf
ret
div
outs
call
out
jp
mov
leave
bound
cmp
and
push
xchg
ret
pop
mov
xor
jl
mov
pop
cmp
clc
and
stos
cmps
int
movs
xchg
rcr
push
fyl2xp1
cmp
les
inc
dec
and
rcl
pop
cmc
daa
mov
sbb
and
jb
xchg
add
push
mov
std
in
jge
(bad)
aam
sub
movs
ds
cwde
and
inc
pusha
lock
imul
call
push
lock
sub
or
add
dec
or
push
scas
push
cmps
push
or
xchg
mov
push
mov
mov
out
add
add
and
neg
xor
cmp
(bad)
mov
das
test
in
test
lea
rcr
sub
movs
idiv
test
shl
mov
loop
int
(bad)
push
or
cmp
add
inc
add
ins
popa
mov
fcmove
in
pop
push
(bad)
pop
add
aaa
mul
and
scas
lahf
adc
mov
adc
mov
inc
into
mov
mov
cmp
pop
xor
(bad)
into
pushf
ins
stos
sub
pop
out
(bad)
sub
in
mov
cmp
xchg
cld
pop
arpl
jb
add
(bad)
into
jge
mov
cmp
aam
push
jns
mov
cs
mov
mov
int3
movs
push
pop
icebp
arpl
sbb
sub
movs
enter
dec
dec
sbb
mov
mov
test
pop
bound
sub
call
not
jno
xchg
push
daa
jb
sbb
cwde
and
mov
daa
mov
sub
fidivr
dec
inc
dec
fidivr
aas
cmp
mov
in
inc
je
push
ret
sub
cmp
add
mov
lds
sbb
sbb
adc
inc
mov
add
out
(bad)
mov
pop
adc
jae
aaa
enter
loop
pop
dec
jle
sub
push
or
or
ins
dec
shl
aad
cmc
in
inc
aad
sub
outs
(bad)
jg
imul
adc
pop
cmp
sbb
mov
mov
xor
and
fxch
push
rcl
pop
pusha
jns
sub
stos
enter
pop
out
test
pop
add
pop
repnz
iret
lahf
mov
int
stc
retf
mov
fimul
xchg
xor
push
mov
push
inc
mov
ins
xor
es
pusha
ins
pop
push
in
jg
and
inc
mov
mov
cmp
cmc
movs
test
mov
std
xchg
jnp
pusha
fdivr
cmps
sar
sbb
mov
pop
hlt
mov
sub
sbb
ds
test
push
stos
or
adc
adc
cld
mov
pop
test
popa
xchg
pop
push
mov
push
jmp
adc
(bad)
(bad)
and
stc
cmp
outs
out
adc
mov
rol
dec
jl
into
ins
and
mov
mov
test
(bad)
cld
push
inc
mov
xchg
cdq
mov
fsubrp
ins
adc
ficomp
adc
dec
mov
jno
xchg
and
sub
xor
inc
and
pop
xlat
mov
pop
pop
and
mov
jne
lock
adc
pop
inc
repnz
sbb
iret
repz
pop
sti
call
(bad)
neg
xor
and
push
cmp
jb
fmul
inc
aaa
mov
addr16
pop
arpl
adc
jns
dec
test
shl
shl
loop
jge
xor
pusha
mov
inc
jg
dec
mov
push
push
sbb
mov
std
pcmpeqb
mov
popa
pop
ret
xor
jb
xchg
inc
clc
add
shl
inc
jg
push
adc
xor
cmp
xchg
test
ja
(bad)
jge
fisubr
mov
popa
or
cmc
cmp
int
adc
arpl
retf
enter
sub
jecxz
jp
xor
mov
ror
mov
add
stc
mov
rol
dec
and
push
ins
push
retf
pusha
mov
loop
in
out
addr16
cmp
loopne
jae
mov
bound
jbe
adc
mov
(bad)
retf
mov
and
(bad)
(bad)
(bad)
xchg
lock
daa
mov
addr16
test
cmp
bound
adc
sub
sub
(bad)
int
or
push
mov
leave
ror
xor
and
push
ds
mul
popa
xchg
pop
and
mov
retf
ret
(bad)
xchg
push
jo
sar
test
jecxz
jp
pop
cmp
fwait
loop
sbb
cmp
movs
sub
retf
rcl
mov
sbb
ja
stos
cld
jle
inc
mov
sub
jae
fwait
dec
mov
sub
call
and
cmp
fcmovbe
mov
adc
jecxz
in
aas
test
cld
call
movs
push
push
ret
outs
fild
mov
in
repnz
imul
jmp
push
retf
mov
daa
shr
js
(bad)
mov
dec
(bad)
adc
out
dec
scas
idiv
mov
pop
jge
inc
(bad)
fstp
jo
sar
fld
(bad)
jg
int3
jno
sbb
sbb
pop
es
cmp
push
pop
sub
jle
in
cmps
xchg
cmps
rcr
clc
shl
mov
push
out
clc
mov
arpl
inc
mov
and
xor
in
add
dec
dec
das
cmp
popf
dec
dec
mov
addr16
lods
xor
and
jmp
jmp
loope
std
dec
out
leave
mov
push
mov
add
loop
jno
dec
add
(bad)
cmc
scas
popa
mov
loop
fimul
mov
fsub
xchg
and
pop
sbb
pop
out
or
add
pop
xchg
and
jp
ja
(bad)
gs
neg
inc
push
out
ror
jne
xchg
cmps
outs
cld
mov
or
xor
daa
imul
inc
cwde
data16
shr
xchg
inc
stc
jnp
dec
dec
popa
mov
fisubr
mov
fcomp
cs
inc
pushf
in
sahf
add
test
js
cmp
rcr
and
mov
sub
jnp
push
fnsave
push
mov
(bad)
adc
cmp
gs
adc
xor
nop
mov
and
pop
cmp
mov
pop
mov
(bad)
loopne
jmp
cli
retf
fdivr
lods
iret
and
xor
cdq
ss
es
dec
jge
mov
gs
ss
and
sub
mul
repnz
inc
cmp
xchg
aas
xchg
add
ror
ja
loope
mov
mov
dec
adc
outs
pop
push
mov
fwait
outs
stos
sub
inc
mov
xor
cmp
pop
fld
sub
std
mov
sbb
inc
push
sbb
inc
stos
xchg
test
cs
push
ss
enter
test
jecxz
pushf
imul
and
int
fisttp
fisttp
dec
out
pop
inc
aad
mov
inc
test
cmp
rcr
pop
xchg
pop
mov
sub
aam
pushf
xchg
xchg
out
sahf
add
(bad)
pusha
shr
iret
mov
jae
jl
fld
push
xlat
fild
add
jge
jg
fcomip
xchg
std
ja
in
jne
xor
inc
jge
sub
pop
(bad)
fcomp
ja
sub
popf
inc
int
mov
jl
and
lods
in
in
push
enter
fld
test
cwde
sub
cwde
out
mov
jne
mov
mov
add
xor
inc
sbb
mov
mov
out
inc
stc
xchg
repnz
jp
into
pushf
sar
add
ret
cdq
in
inc
aad
add
call
jp
push
movlps
and
pop
pop
addr16
call
test
mov
nop
mov
dec
sbb
retf
sbb
jne
fistp
imul
into
pusha
loopne
mov
pop
mov
mov
in
pop
fcom
xor
jb
jle
pop
lods
rol
dec
fstp
dec
stos
sub
mov
ins
pop
and
sbb
push
fld
add
mov
adc
loopne
int
dec
mov
inc
fcom
loope
and
sub
or
sbb
imul
adc
(bad)
or
pusha
or
fldenv
jmp
stc
ror
imul
or
aad
movs
dec
xchg
mov
sub
adc
push
adc
inc
loop
loopne
shl
dec
mov
xchg
push
(bad)
jge
es
sub
sub
adc
inc
retf
xor
icebp
jp
sbb
ss
daa
xor
push
test
std
push
jle
lea
cli
cmp
into
xchg
xchg
retf
(bad)
or
bound
jl
mov
int
xchg
mov
cmps
inc
rol
mov
out
sub
jle
scas
ins
popf
bound
jb
rcr
cli
and
ret
scas
fdivrp
int
mov
icebp
adc
cmp
sbb
dec
lods
test
sbb
out
inc
ret
jns
pop
popa
mov
adc
inc
fucomip
pop
out
out
jle
inc
push
and
and
mov
repz
outs
adc
(bad)
mov
imul
lods
jne
adc
pop
loop
mov
mov
mov
xor
les
push
fmul
imul
call
jae
(bad)
repz
loopne
cmp
ja
cmp
xchg
nop
out
mov
and
clc
popa
maskmovq
neg
psllw
adc
cwde
scas
mov
fcmove
cld
dec
in
cmc
xchg
ds
dec
push
xchg
mov
inc
cmp
sbb
cmp
add
mov
dec
or
out
mov
and
aaa
cdq
pop
stos
movs
ss
sbb
(bad)
aas
pushf
(bad)
push
or
adc
div
cmc
(bad)
in
fwait
les
sahf
ja
sar
push
scas
icebp
fwait
pop
xlat
out
gs
(bad)
pop
(bad)
pushf
cmp
mov
sahf
xor
xor
sbb
loop
movs
xor
cdq
xchg
bound
(bad)
out
lods
xchg
(bad)
xor
sbb
pop
ins
sbb
adc
jle
sbb
imul
mov
push
enter
out
mov
ss
in
inc
loop
ins
idiv
sbb
rcl
push
dec
mov
push
sub
add
adc
pop
dec
dec
imul
sar
mov
mov
sahf
inc
ret
adc
mov
cmps
sbb
fstp
fucom
js
add
push
mov
iret
loopne
cmp
xchg
lods
hlt
sbb
jmp
fwait
(bad)
mov
pusha
inc
xchg
js
sub
add
dec
dec
sbb
clc
hlt
mov
jge
(bad)
jb
cdq
sub
cmp
gs
xlat
mov
sbb
and
cdq
popa
(bad)
shl
xor
inc
mov
pop
fidiv
rcl
loop
movs
into
test
cmp
xchg
xchg
push
mov
aad
mov
mov
popa
arpl
ins
xor
sti
jg
mov
outs
addr16
pop
and
pop
pushf
pop
xor
xor
or
sahf
out
xor
fisub
in
jecxz
lds
adc
jno
mov
dec
cdq
inc
inc
xchg
dec
int3
test
cdq
sbb
xchg
inc
sbb
pop
pop
push
push
sbb
inc
mov
int3
dec
inc
xchg
xchg
ins
or
cmps
fldenv
xor
test
fwait
xchg
push
and
adc
fsubr
out
cmc
adc
js
sbb
fsub
fadd
mov
lods
sar
sub
mov
and
popa
fidivr
aad
sbb
adc
sbb
adc
adc
mov
int3
jb
pop
push
inc
jno
ret
adc
test
adc
test
pop
inc
mov
loope
(bad)
cdq
inc
sti
fnsave
lods
ret
lods
pop
iret
sub
pop
push
test
lods
daa
xor
cdq
mov
cwde
out
(bad)
cs
cmps
loope
inc
(bad)
or
int
push
dec
adc
mov
lods
aam
js
adc
rcl
ds
out
aaa
xor
cmp
lods
mov
xchg
jge
jg
push
sbb
retf
retf
pop
daa
out
inc
pop
jl
sbb
fs
sbb
and
aam
stos
sar
ins
js
cmc
dec
clc
push
test
imul
ins
loope
sub
bound
(bad)
adc
fs
je
test
xchg
push
bound
cdq
outs
arpl
data16
add
call
repnz
frstor
fnsave
adc
jnp
push
cmp
add
mov
mov
xchg
inc
out
xor
jae
xlat
ror
loope
ja
les
lahf
retf
sbb
je
xor
jnp
out
adc
div
pop
jbe
popf
sub
int
push
rcl
jb
add
hlt
sti
ins
xor
stos
jne
push
mov
(bad)
in
mov
(bad)
dec
sub
dec
gs
cdq
jmp
jmp
inc
stos
shl
fcomp
add
bound
xchg
cwde
jb
in
test
imul
sbb
dec
cwde
mov
ss
mov
loop
ins
xor
and
jmp
arpl
pop
aam
sbb
jno
fisub
cmp
add
rcl
ja
mov
adc
mov
mov
push
pop
lods
pmaddwd
retf
push
test
cmp
and
inc
or
adc
nop
mov
lds
mov
(bad)
iret
xchg
scas
xchg
push
imul
fadd
(bad)
ret
aad
lock
cdq
inc
mov
loopne
add
mov
sbb
inc
mov
add
add
jb
in
bt
sub
xchg
cmp
adc
mov
arpl
push
xor
cs
gs
lds
sub
rcl
call
ins
mov
inc
sub
fdivr
fwait
xlat
mov
not
(bad)
dec
sbb
mov
jns
hlt
ror
loop
and
out
fcmovbe
pop
(bad)
dec
and
mov
dec
push
in
inc
jae
push
push
bound
mov
jno
xchg
fprem1
pop
fs
loopne
sar
push
neg
and
mov
ins
inc
add
pop
mov
loope
das
in
push
sbb
xor
mov
fcmovne
in
pop
call
adc
mov
dec
jmp
cdq
xchg
sub
pop
adc
and
cdq
rcr
mov
scas
es
inc
les
dec
jmp
inc
cmps
mov
fcmovu
and
or
rol
sbb
sub
push
popf
test
jg
cmps
jmp
add
in
dec
sub
fs
jns
sbb
adc
or
pop
cmps
inc
pop
inc
pusha
xchg
test
cwde
pop
dec
and
rcr
call
dec
pop
retf
shl
xor
jg
aaa
sbb
jnp
push
fs
push
ror
mov
ret
or
jmp
movs
and
xchg
stos
rcr
jp
mov
aad
push
mov
mov
iret
jecxz
pop
mov
outs
fidivr
push
inc
xchg
movs
mov
and
mov
aas
lds
jecxz
sub
fistp
je
jbe
push
mov
jp
mov
and
bound
mov
xchg
into
mov
bound
inc
add
push
and
lds
(bad)
pop
out
add
arpl
nop
mov
jne
ret
lods
mov
jno
movs
stc
and
xchg
mov
lods
jge
mov
stos
xchg
xchg
fist
rcl
dec
das
jp
cld
mov
mov
imul
mov
(bad)
mov
jne
mov
out
pusha
mov
and
cmc
xchg
mov
and
mov
cmp
adc
nop
(bad)
jnp
and
pminsw
out
xchg
adc
call
int
sub
jb
enter
rol
loope
addr16
scas
jns
enter
pop
out
adc
inc
xor
mov
(bad)
imul
je
jl
cld
fimul
cmps
and
pop
push
fnstsw
cmp
xor
out
scas
imul
movs
jle
push
fmul
fmul
sub
out
cs
mov
nop
pop
clc
lock
fwait
and
popa
or
mov
pusha
sub
popf
leave
jmp
sar
pop
inc
arpl
ds
mov
mov
dec
jmp
mov
jno
ret
lock
lds
ss
(bad)
cmp
xchg
fld
add
mov
out
stc
inc
mov
inc
fcmovbe
fidivr
adc
ret
retf
retf
ins
fs
fs
mov
out
sbb
(bad)
pushf
fist
jge
das
not
sbb
sub
adc
fisttp
cwde
es
jmp
xchg
js
popa
rol
mov
inc
ins
adc
mov
bound
out
adc
fsub
stos
xor
fnstsw
mov
lds
or
daa
xor
neg
inc
adc
inc
mov
sub
push
mov
add
imul
(bad)
hlt
test
mov
jmp
or
push
shl
retf
mov
jbe
mov
stos
adc
xchg
mov
fldenv
jns
fisttp
les
sub
jno
mov
dec
inc
stc
adc
jmp
dec
pop
push
jbe
jns
add
(bad)
mov
clc
inc
fidiv
cmp
adc
mov
in
sbb
sbb
push
icebp
sub
jae
inc
pop
or
mov
push
mov
leave
mov
jmp
and
dec
mov
jnp
retf
cmp
jmp
in
sbb
pop
sar
call
popf
mov
cmps
out
(bad)
cmp
shl
adc
jmp
test
addr16
push
cmp
(bad)
aad
movs
outs
xor
pop
sub
jns
push
ret
cs
ja
sub
aaa
call
inc
sub
test
movs
pop
pop
mov
xor
pop
jb
add
repz
ret
dec
push
(bad)
adc
das
loop
push
dec
and
and
push
or
(bad)
cmp
lahf
jecxz
or
xor
dec
cmp
xchg
mov
jo
push
pop
pusha
lods
jmp
cmp
faddp
push
jecxz
sbb
or
xor
loop
pop
mov
push
inc
push
jmp
movs
adc
lods
cmp
xchg
or
les
lock
cwde
icebp
(bad)
mov
or
repnz
cmp
lods
adc
jge
mov
stos
cwde
popf
pop
sahf
popa
icebp
mov
mov
lods
and
adc
in
lock
push
pusha
push
adc
xor
fwait
xor
lods
mov
sub
and
sub
and
cli
mov
std
pop
mov
mov
(bad)
movs
add
fs
iret
push
mov
cmp
in
mov
pop
test
test
ds
xor
push
mov
fabs
mov
mov
test
pop
push
xor
push
mov
and
ret
and
(bad)
cmp
dec
lods
dec
adc
mov
sbb
arpl
fs
ret
cmp
jg
mov
and
xchg
outs
dec
xor
dec
push
inc
inc
neg
mov
pop
int
movs
push
scas
mov
add
xor
xchg
jle
jl
push
fidiv
jae
sar
dec
mov
inc
inc
xor
xchg
mov
pop
inc
mov
stos
jge
push
jne
pop
pop
mov
sbb
push
push
fnsave
test
fwait
(bad)
cmps
jmp
addr16
cmc
out
jb
jb
sbb
test
mov
stos
in
fwait
inc
sub
rcr
cmp
sbb
lods
sub
out
pop
(bad)
pop
jp
jl
mov
test
jecxz
push
cmp
int
push
adc
or
jbe
push
cdq
xchg
fnstenv
call
xor
add
push
in
dec
arpl
mov
or
sub
pop
mov
sti
ja
xor
xchg
in
bnd
mov
mov
into
fdiv
(bad)
gs
or
imul
mov
test
jno
(bad)
jp
popa
(bad)
iret
sub
fadd
mov
out
or
jl
js
enter
(bad)
jbe
(bad)
jecxz
int3
call
test
ret
adc
push
sub
mov
add
jne
push
scas
nop
mov
ss
xchg
cwde
test
adc
sbb
int
or
mov
bound
add
dec
sbb
aam
stos
mov
jl
bound
mov
pop
daa
or
(bad)
jbe
cli
mov
aad
dec
mov
cmp
pop
mov
retf
stc
jbe
jle
jge
jmp
push
les
mov
xchg
movq
cdq
fmul
in
out
or
(bad)
xchg
pop
cmp
jle
loope
and
xor
sub
pop
hlt
sbb
sub
mov
jp
cli
mov
sbb
and
dec
out
xor
jmp
pop
(bad)
in
repz
stos
cli
pop
enter
cmp
sub
mov
test
(bad)
fs
jecxz
push
daa
clc
sar
lods
add
xor
std
cmp
(bad)
int
mov
(bad)
imul
out
enter
sub
xchg
cmp
or
ret
in
fnstenv
push
sub
pop
jle
push
sar
sbb
loop
mov
aaa
jne
adc
mov
xor
mov
jmp
cmc
loop
xchg
jmp
movs
add
mov
sub
test
cmp
fiadd
pop
fdivr
cmps
mov
ins
xchg
adc
ror
cli
loope
cmc
sahf
addr16
xchg
(bad)
jo
push
and
stos
imul
xchg
adc
mov
das
in
dec
push
push
pop
mov
xchg
xor
sbb
mov
mov
mov
xor
mov
ds
mov
adc
out
ins
cmps
sbb
call
aad
xor
push
fwait
daa
sbb
out
pop
jecxz
xchg
push
imul
or
movs
out
cmp
mov
xor
mov
mov
jp
repz
sbb
loop
mov
inc
aas
pop
push
movs
lods
into
scas
cwde
push
inc
call
jg
lahf
leave
jecxz
test
push
cmp
xchg
or
sbb
push
ret
pop
arpl
jbe
rcr
sahf
ficomp
pusha
je
imul
mov
cmp
imul
rol
cmps
and
add
sub
mov
shr
inc
xchg
cmp
movs
out
mov
mov
mov
jbe
leave
push
dec
sbb
jns
sbb
imul
push
jnp
(bad)
or
add
and
out
mov
push
cmps
jns
mov
bound
stc
js
mov
rol
xor
aad
std
lahf
cmp
push
mov
inc
lock
repnz
lea
icebp
nop
dec
sbb
mov
test
inc
leave
jae
pop
dec
dec
add
mov
repz
hlt
inc
dec
cmp
dec
push
xor
xor
mov
daa
pop
cmp
sub
je
adc
jle
in
imul
gs
add
jle
inc
fstp
jo
fidivr
mov
mov
or
push
data16
jecxz
jmp
xor
(bad)
fdivr
pop
sbb
gs
in
cmp
aaa
hlt
push
jne
jmp
jne
shr
dec
inc
popa
bound
outs
xchg
xchg
sbb
add
inc
test
imul
sbb
push
add
inc
hlt
pop
rcr
push
pop
aaa
jmp
jmp
add
std
(bad)
popa
cmc
jecxz
push
sub
test
addr16
xchg
scas
scas
imul
add
aaa
loop
adc
sub
jge
(bad)
(bad)
pop
mov
enter
aad
cmp
rcl
dec
jb
jp
in
cmp
cmp
nop
loop
popa
add
int
leave
fdiv
or
sub
pop
pusha
popf
mov
dec
mov
sub
cmps
retf
mov
xchg
adc
cmp
add
jecxz
and
pop
inc
fs
mov
ss
shr
imul
in
jmp
push
imul
xor
enter
ret
fild
adc
adc
mov
rcl
pop
inc
pushf
loop
(bad)
jle
je
xchg
add
(bad)
cmp
stos
in
in
and
not
xchg
mov
loop
mov
fldcw
das
xchg
cmp
dec
jge
sub
add
jmp
fistp
xor
lock
(bad)
div
fwait
and
cdq
pop
addr16
loope
mov
cmp
loopne
in
adc
out
push
xchg
and
or
jne
nop
xchg
imul
and
fstp
jne
mov
fdivrp
mov
xor
mov
dec
jb
inc
test
pop
push
rol
sub
inc
xchg
int3
popa
add
push
hlt
jmp
cmp
jne
bound
or
mov
(bad)
test
xchg
and
push
fsub
xchg
rol
lahf
push
push
test
mov
nop
icebp
cmp
mov
dec
sub
pop
mov
adc
lds
xchg
mov
jle
jecxz
outs
pop
(bad)
sbb
mov
arpl
sbb
(bad)
(bad)
(bad)
jg
cmp
popa
pop
sbb
xor
xlat
dec
and
cwde
addr16
inc
xchg
(bad)
call
add
dec
mov
popf
push
out
popa
push
jb
push
lahf
scas
jmp
mov
fadd
mov
stos
stos
or
outs
inc
and
push
adc
mov
cdq
fidivr
fucomip
sbb
mov
scas
ins
fiadd
pop
inc
imul
js
push
sub
mov
sbb
push
xor
shl
out
mov
jno
mov
test
idiv
jp
jecxz
inc
xor
int
mov
or
lds
call
mov
push
adc
outs
ret
lahf
xchg
adc
mov
sbb
or
leave
inc
test
and
push
loop
movs
mov
mov
sub
imul
or
outs
or
shl
xor
xchg
adc
hlt
mov
mov
and
pop
int
rol
and
xchg
dec
inc
mov
mov
out
mov
add
push
movs
dec
scas
mov
dec
jb
aaa
add
xor
rcl
push
jno
pop
pop
dec
adc
sub
stos
ins
(bad)
sub
aam
repnz
ja
fs
inc
imul
fidiv
adc
addr16
mov
mov
fist
js
repz
pop
shl
popf
sbb
mov
das
mov
mov
in
mov
adc
retf
rol
popa
inc
fdiv
lods
leave
cmp
pop
xor
sbb
jp
cmps
jmp
mov
and
jnp
mov
inc
push
dec
mov
retf
cld
xchg
xor
imul
imul
fnstsw
dec
xor
test
xor
fmul
and
test
inc
retf
rcl
aaa
jns
iret
movs
jp
adc
mov
daa
xchg
or
ds
fstp
(bad)
iret
or
jmp
iret
jns
jnp
jns
pushf
ficomp
cmp
mov
mov
jb
(bad)
mov
addr16
xchg
in
mov
inc
xor
xor
jo
loope
fidiv
in
div
sbb
cdq
fmul
es
push
pop
scas
cli
or
aam
inc
push
mov
or
or
push
or
js
mov
ja
jmp
sbb
sub
pop
add
add
or
or
sar
fsub
ret
pop
jp
es
push
and
ret
push
jmp
das
enter
push
inc
rcr
and
pop
rcr
in
ins
dec
mov
pop
cmp
or
loop
clc
xor
jmp
pop
cmc
dec
sbb
outs
cmp
mov
and
mov
les
fmul
repnz
xor
cmps
cmps
fwait
int3
mov
mov
adc
stos
xor
cmp
adc
inc
leave
idiv
sub
cdq
cdq
pop
lock
and
jo
imul
mov
int3
lods
cli
repnz
mov
pop
xor
pop
ror
repnz
or
cmps
fstp
jbe
jp
loop
cmp
mov
leave
sbb
cld
inc
imul
mov
leave
das
push
sbb
and
mov
(bad)
int
mov
push
mov
xchg
jl
add
mov
cmp
(bad)
adc
movs
das
outs
xor
or
(bad)
cld
aam
lods
jecxz
dec
ja
push
dec
retf
ret
mov
jno
mov
xchg
outs
cmp
(bad)
ror
and
xor
neg
mov
scas
aaa
pop
pusha
loope
pop
call
jbe
xchg
cmp
dec
das
xor
dec
or
je
es
fwait
arpl
push
sub
push
xlat
test
adc
movs
(bad)
and
push
lahf
jnp
or
push
sub
retf
addr16
xchg
xor
jo
retf
cmp
mov
push
jmp
and
aad
out
mov
pop
arpl
push
push
movs
jmp
rcr
pushf
stos
(bad)
sti
cdq
and
xchg
jp
call
jns
out
sub
(bad)
lods
inc
mov
mov
repz
add
xchg
push
not
inc
ins
jno
std
sbb
jmp
stos
mov
sar
aaa
adc
retf
xchg
xchg
cld
xor
mov
aas
shr
lods
imul
in
dec
(bad)
dec
cmp
cli
popa
xchg
pop
in
jne
jns
push
and
jns
out
inc
daa
add
xor
jecxz
push
std
push
in
mov
gs
sbb
arpl
leave
ret
xchg
cmp
popf
or
jae
jo
lea
and
push
jae
fsubrp
xchg
fs
jo
clc
mov
cmp
push
neg
lahf
leave
mov
(bad)
fldenv
xor
mov
mov
cmp
dec
aaa
repnz
and
or
lods
dec
loopne
cli
loop
adc
jo
push
test
cmp
arpl
adc
aas
xchg
inc
push
xor
lock
outs
xchg
scas
cdq
in
add
test
pop
iret
outs
jbe
xchg
in
add
push
lock
sub
mov
sbb
aaa
mov
fwait
gs
xchg
popa
xor
xchg
dec
dec
loop
jae
(bad)
cmc
or
and
popf
or
fcomp
sub
popa
stc
mov
ret
call
stc
xchg
add
and
inc
mov
data16
leave
push
test
mov
and
cmp
pop
aaa
sbb
sbb
mov
xchg
adc
retf
aad
push
fsubr
cli
imul
cmp
dec
ror
jg
repz
imul
test
mov
rcr
and
das
or
dec
mov
lods
jg
jmp
inc
out
out
jne
pop
aaa
adc
mov
movs
in
cmp
pusha
sti
and
cmp
xor
test
gs
ins
push
xchg
push
lds
push
jns
loop
jne
mov
add
aam
adc
mov
mov
lock
test
cmc
data16
(bad)
mov
dec
dec
leave
mov
push
leave
jge
sub
mov
jmp
pminub
fcomp
sar
sbb
push
repz
or
pop
sbb
cs
jne
mov
mov
xchg
inc
lds
dec
lahf
mov
js
lds
div
lahf
out
jle
sbb
inc
(bad)
mov
std
lds
fisttp
pop
cmp
jp
sub
inc
call
(bad)
jns
inc
mov
aaa
xchg
inc
pop
test
loopne
mov
add
ror
movs
sub
sub
jge
hlt
fdiv
mov
cld
cmp
push
data16
pusha
mov
dec
fistp
xchg
lea
movs
daa
in
and
jecxz
ret
push
or
in
adc
adc
adc
ror
je
jns
cmp
sbb
retf
out
ret
sub
fdivrp
mov
icebp
out
stos
outs
test
scas
je
rcl
call
ds
pop
add
cli
scas
gs
push
pop
add
loop
fptan
add
in
or
mov
loope
out
xchg
sti
dec
js
xchg
xlat
repz
arpl
ds
lods
ret
xchg
and
mov
dec
into
lds
cmp
sub
or
pop
nop
sub
ror
cmp
push
aas
pop
sub
jmp
xchg
sbb
cmps
fld
xchg
sub
cmps
std
je
add
push
jmp
ret
sbb
sub
dec
shr
movs
adc
retf
retf
dec
add
add
and
sbb
aaa
push
sub
arpl
push
mov
fwait
pop
jg
sti
data16
je
fisubr
arpl
fsub
and
popa
mov
or
jmp
jp
in
mov
jno
inc
or
(bad)
push
dec
mov
mov
adc
ret
jno
mov
call
xchg
iret
cmp
outs
jne
mov
or
mov
ror
and
arpl
mov
scas
pop
repnz
inc
pushf
movhps
sub
add
retf
aad
aas
outs
lahf
pop
push
scas
cmc
aas
movs
test
sub
out
and
fild
sub
test
rcl
jge
cmp
add
xchg
add
dec
sbb
arpl
test
ja
das
or
pop
fcomp
push
inc
jmp
aam
add
aas
ret
std
dec
popf
fwait
inc
mov
shl
stos
test
sub
pusha
push
sbb
ss
push
fstp
xchg
mov
inc
repnz
mov
mov
stos
outs
std
sbb
cmp
adc
and
arpl
pop
mov
test
cmc
loop
cdq
mov
bound
or
cmps
or
call
jmp
daa
cmp
jne
push
xor
out
rcl
xlat
jbe
push
jno
mov
lahf
push
ret
mov
sub
dec
add
jns
or
mov
add
(bad)
mov
jnp
adc
rcl
xchg
(bad)
sub
rcl
out
test
int
push
scas
mov
mov
rcr
or
aad
mov
int3
add
stos
push
pop
aaa
sbb
dec
cmp
mov
retf
pop
inc
inc
lds
inc
pop
mov
das
mov
fist
out
xlat
add
outs
xchg
je
ins
mov
fldenv
cmp
bound
fmul
and
jmp
dec
xchg
ret
fwait
imul
xchg
cmc
xchg
xor
hlt
stos
mov
cdq
call
jge
lea
push
(bad)
sbb
push
setne
ins
and
and
aas
dec
mov
xor
out
cmp
push
cs
jp
dec
in
rcr
jp
cmp
ins
repz
mov
dec
jo
sub
jbe
pop
sbb
and
xchg
push
cmp
jle
pop
aaa
mov
movs
pop
mov
mov
scas
mov
sbb
inc
pop
xor
hlt
dec
rcl
dec
fsin
call
mov
call
dec
shr
cmp
add
fild
push
mov
loopne
dec
retf
dec
mov
iret
aam
add
or
popa
fst
mov
jecxz
sub
mov
leave
mov
jae
cmps
lds
sub
pop
pop
jno
nop
lock
adc
adc
mov
push
in
int
repnz
ret
movs
jbe
pop
call
jmp
pop
cmp
(bad)
out
jg
pop
iret
mov
dec
in
cmp
test
fbstp
mov
mov
loop
inc
in
add
out
pop
in
hlt
mov
sbb
or
cld
add
shl
ds
sbb
mov
pushf
cmc
jb
jmp
sbb
inc
shl
out
in
lds
into
lea
outs
xor
ror
out
dec
inc
ins
out
sub
out
mov
pop
pusha
pop
ins
inc
jo
retf
sahf
jge
add
fcmovu
out
pop
jo
mov
mov
push
inc
pop
jge
cmp
lds
les
repnz
xchg
and
jnp
stc
pop
xchg
sbb
or
out
(bad)
xchg
addr16
fimul
fmul
in
xchg
call
jl
jo
pusha
pop
pop
add
lods
mov
les
adc
mov
add
mov
aaa
lahf
push
cli
pusha
shr
pop
jae
(bad)
into
call
(bad)
loop
test
ds
cmp
aaa
into
cwde
or
sub
pushf
xlat
push
jno
mov
in
fnstcw
xor
sub
fst
int
int
sbb
push
cmps
aaa
sti
push
add
arpl
adc
adc
je
ret
lods
or
cmp
sub
mov
pop
cmp
cmc
adc
lea
xchg
outs
lds
jo
push
xor
jge
push
or
and
mov
mov
sub
jne
xchg
xor
les
sbb
mov
mov
dec
sub
mov
and
pop
mov
cli
nop
ret
cmp
(bad)
mov
xor
jge
inc
xor
jmp
xchg
je
mov
mov
repz
fidivr
inc
mov
mov
je
mov
jle
pop
loop
(bad)
nop
mov
aas
stc
jmp
arpl
adc
mov
sbb
out
xchg
lds
jp
fcomp
cmc
jae
leave
iret
and
sbb
retf
add
(bad)
in
sbb
push
adc
xor
in
aad
icebp
mov
push
mov
sti
adc
aam
sub
cmp
adc
cmps
outs
adc
mov
push
inc
inc
int3
repz
push
xchg
push
or
out
into
inc
xchg
aaa
fild
(bad)
mov
nop
hlt
push
pop
bound
jb
ins
jo
stc
nop
pop
pop
adc
push
mov
push
pop
push
jmp
mov
pusha
sti
pushf
std
test
addr16
mov
jae
cmps
icebp
icebp
sub
mov
cmc
jle
bound
in
pop
jae
(bad)
cmps
sub
xchg
or
adc
mov
std
call
inc
pop
push
cdq
adc
adc
mul
cdq
fcmovnbe
movs
mov
push
stos
js
push
dec
pop
jno
cmp
hlt
in
adc
jno
loope
lds
cld
gs
cmp
add
inc
cmc
push
sbb
adc
or
mov
pop
pop
movs
rol
jge
imul
jno
adc
jmp
call
rol
jb
pushf
mov
inc
adc
cld
fwait
movs
inc
dec
mov
shl
les
dec
fs
sub
addr16
lods
dec
cmp
cmp
lods
mov
popf
movs
inc
clc
or
fstp
rcr
jae
into
cdq
or
es
int
mov
aad
lds
loope
jnp
nop
mov
push
add
ins
mov
mov
or
and
mov
hlt
nop
adc
push
and
xor
pop
retf
(bad)
jns
jne
pop
and
and
stos
ficomp
pop
(bad)
in
cli
push
out
adc
mov
adc
adc
test
adc
xor
(bad)
jl
cmp
mov
fistp
daa
dec
mov
dec
jae
inc
xchg
push
push
pop
lock
ja
lahf
mov
setbe
int
retf
inc
pop
add
repz
inc
push
cdq
add
push
leave
mov
ss
loopne
pop
jg
stc
cmp
dec
pop
retf
cmps
dec
adc
sub
test
xlat
adc
pop
leave
sar
jg
fist
data16
jecxz
add
cmp
cmc
out
pushf
cwde
xor
imul
jb
(bad)
scas
sub
ror
and
mov
push
push
adc
lea
push
inc
xchg
loop
stc
sbb
and
leave
jnp
dec
sbb
or
loop
dec
xlat
div
imul
xchg
int3
mov
mov
xchg
push
jmp
jle
inc
call
lock
je
int
and
(bad)
sub
cmps
pop
test
xor
add
ror
sub
xchg
inc
test
nop
mov
test
sub
(bad)
and
inc
retf
and
ins
or
ret
ins
xchg
adc
mov
(bad)
mov
inc
cmp
xchg
push
inc
test
xor
popa
cmps
add
shl
retf
clc
and
int
mov
bound
push
mov
int
(bad)
out
push
cwde
adc
retf
lea
push
adc
fsub
shr
mov
daa
fbld
sub
inc
add
or
mov
or
jae
mov
shl
push
fisttp
xcrypt-cfb
cmps
mov
pshufw
mov
xor
lds
sbb
int3
and
sahf
int3
leave
xchg
push
jge
push
dec
jmp
or
sbb
iret
lahf
jp
jbe
sub
fist
rcl
cmp
inc
ret
cmp
jno
push
fcmovb
xlat
mov
or
pusha
outs
jnp
loop
jns
nop
xchg
mov
pop
sub
outs
push
jge
ror
fistp
mov
enter
and
inc
in
add
clc
or
aam
test
push
mov
jge
adc
sti
fst
cld
xchg
jmp
clc
dec
or
cmp
adc
sub
repnz
in
and
adc
mov
fsubr
cmp
add
into
jp
mov
add
jmp
bound
aas
xor
jle
add
scas
lods
sub
mov
xor
cmp
mov
shr
mov
aaa
jno
fs
pop
mov
into
mov
push
dec
in
adc
ret
add
test
ds
mov
jecxz
out
mov
pop
test
punpckhdq
and
jnp
ror
jnp
mov
clc
and
push
fcmove
je
sti
rcr
push
xchg
dec
or
sbb
out
push
xchg
rcr
dec
shr
popf
mov
das
loopne
fxam
mov
pop
mov
icebp
enter
pop
sub
and
out
push
into
aam
ficom
or
sbb
mov
push
lahf
pop
daa
push
data16
inc
fiadd
cmc
shr
mov
fmul
mov
int3
stos
mov
sbb
xchg
adc
pop
les
rcl
mov
jmp
inc
jo
enter
push
push
cmp
jge
movs
or
dec
dec
sahf
mov
outs
or
and
movs
dec
jne
jle
sbb
clc
std
cmc
jmp
(bad)
test
stos
push
div
sbb
test
inc
ror
inc
dec
xchg
pop
pop
pop
adc
mov
repnz
lods
add
not
adc
dec
cs
sub
retf
adc
cdq
js
jmp
jp
inc
add
pop
xor
nop
jb
ss
sbb
push
add
mov
in
xchg
ja
cwde
dec
cmp
cdq
mov
mov
(bad)
jecxz
popa
jmp
popa
pop
rol
lock
loope
pop
aaa
jge
pusha
push
repnz
es
daa
(bad)
sti
jmp
icebp
ins
adc
push
(bad)
nop
pop
push
idiv
pop
dec
popa
call
push
pop
fdivr
jmp
xchg
scas
pusha
cdq
add
dec
xchg
test
mov
aas
jb
mov
add
pop
xchg
aas
outs
pop
div
pop
aas
sub
add
xchg
test
pop
dec
cmp
jge
mov
xchg
mov
movs
bound
push
in
xor
pop
dec
popa
mov
cld
fsubr
mov
(bad)
xor
jge
dec
and
fldcw
cmp
mov
jecxz
fs
sub
pop
leave
cli
retf
push
int3
xchg
clc
xor
fild
mov
imul
jne
push
mov
iret
lock
adc
jns
dec
(bad)
fsubr
push
call
dec
jo
lock
jnp
cwde
inc
std
pop
jo
pop
pusha
mov
cdq
ja
shr
inc
scas
popf
push
(bad)
(bad)
or
dec
add
movs
mov
push
mov
mov
cwde
cmp
sbb
mov
in
mov
mov
(bad)
adc
arpl
dec
jne
lock
cdq
aad
xchg
pop
jnp
mov
inc
xchg
push
adc
jmp
test
and
pop
jmp
pop
sub
loop
inc
push
cmp
ja
inc
mov
in
daa
out
add
and
and
rcl
inc
jle
mov
(bad)
cmc
loop
les
sub
xchg
adc
mov
aas
add
test
jnp
stos
loop
and
cmp
fldcw
pop
ss
ret
sub
inc
jg
popa
aaa
fmul
or
sbb
les
adc
add
bound
out
push
addr16
mov
sbb
jb
jle
adc
push
ror
xchg
mov
sti
icebp
test
and
sbb
pop
daa
xchg
add
(bad)
loop
mov
cmps
js
add
nop
cmps
mov
movs
cmp
pop
mov
mov
jae
test
cmp
pop
xor
popa
mov
xchg
mov
cmps
aaa
mov
rcl
pop
and
dec
pop
cmps
adc
mov
sti
pop
jmp
test
enter
les
daa
retf
push
sub
inc
gs
sbb
fcom
leave
mov
fcomp
adc
lea
maskmovq
neg
loop
adc
ror
retf
sbb
retf
cwde
add
xor
push
inc
jecxz
sbb
xchg
add
cwde
inc
pop
pop
data16
jne
fdiv
xchg
sub
(bad)
cmp
sub
push
rcl
mov
arpl
int3
adc
out
js
jbe
and
mov
ret
add
dec
jg
popf
jmp
xor
fstp
lods
push
inc
xchg
cmp
or
xor
sahf
cmc
dec
popa
retf
int
movs
ret
mov
sub
cld
cs
pop
lock
push
xchg
dec
add
jb
xor
js
popa
pop
jns
pop
mov
xor
xlat
xor
jl
mov
mov
out
pop
push
adc
xor
retf
movs
or
repnz
ss
repnz
fdivr
adc
jle
push
mov
ins
arpl
jmp
leave
jl
stos
jp
push
hlt
sub
lods
cmp
add
xchg
sbb
pop
das
je
loopne
dec
mov
sub
add
adc
cli
rol
aad
fild
mov
mov
std
adc
jl
inc
and
or
sysenter
jnp
jmp
push
push
cdq
jmp
mov
neg
scas
out
fisubr
xchg
push
push
inc
push
sti
cmp
out
cmovg
dec
cli
push
(bad)
test
xchg
jecxz
les
in
movs
inc
push
mov
mov
cmp
sbb
data16
push
jge
add
loop
(bad)
jo
aas
mov
mov
fbld
xchg
int3
fidivr
lds
mov
mov
lods
xor
mov
mov
fcomip
and
jmp
pop
jns
fstp
pusha
xchg
sub
out
cmps
inc
std
aad
aas
push
lock
xor
rcr
mov
gs
mov
push
add
loopne
add
outs
push
mov
(bad)
outs
ins
ret
out
dec
ins
xor
mov
ins
jnp
fdiv
pop
push
rcl
xchg
call
xchg
mov
xchg
daa
daa
pushf
push
stos
lea
outs
mov
pop
inc
jecxz
mov
dec
push
cs
pushf
ffreep
xchg
div
scas
(bad)
jnp
test
fs
out
aaa
pop
jg
ror
sub
inc
aas
data16
pop
test
(bad)
and
mov
mov
mov
mov
xchg
shl
push
sbb
gs
jo
into
(bad)
xchg
aad
or
push
fcomp
pop
fimul
test
maskmovq
neg
pop
or
cmp
inc
jg
icebp
outs
jp
in
pop
mov
push
popa
mov
pop
and
adc
jae
rol
inc
jnp
sub
into
imul
std
test
enter
add
in
mov
lods
int
dec
mov
fs
rol
or
dec
pop
add
pop
addr16
rol
pop
jno
pop
xchg
ret
shl
fnstsw
cmps
into
jb
fist
jge
sbb
call
adc
and
fadd
add
mov
rcr
sub
pop
dec
(bad)
or
ds
sbb
mov
std
gs
sub
daa
cmps
ds
(bad)
aam
sub
mov
int
mov
xor
ins
lds
arpl
popa
lea
mov
cmc
out
icebp
dec
cdq
sbb
mov
fstp
inc
int
out
dec
push
dec
mov
ss
mov
adc
imul
stos
lock
xchg
lds
sti
jne
lods
lock
nop
test
iret
ret
fnstenv
sub
je
and
push
sub
lock
adc
into
pop
cmp
mov
jmp
js
cmps
pop
nop
fwait
pop
movs
pop
(bad)
bound
dec
test
(bad)
je
fs
inc
outs
mov
js
xchg
xchg
sbb
mov
cdq
dec
inc
stc
and
retf
call
out
inc
inc
mov
push
xchg
push
sahf
dec
pop
es
fdivr
test
jmp
loop
(bad)
(bad)
xor
dec
fwait
mov
jge
inc
jmp
fidiv
push
ret
jne
ds
cmps
add
pop
pop
jbe
mov
dec
push
xchg
cmp
fistp
push
mov
icebp
push
cmp
cmps
jle
pop
dec
sar
mov
fild
adc
out
pop
push
lods
and
and
retf
fmulp
aam
sub
out
cmps
adc
ins
test
mov
or
fisttp
sub
dec
adc
mov
das
cmps
sub
inc
mov
(bad)
fcompp
sub
xchg
jno
inc
neg
jns
jmp
mov
and
sub
mov
std
sbb
mov
cmp
movaps
adc
and
dec
push
jo
cmps
repnz
out
adc
xor
into
sbb
jle
mov
fimul
test
lea
test
hlt
lahf
cli
cmp
arpl
cmps
loopne
dec
pop
or
cwde
sub
mov
sub
movs
fdiv
std
ret
pop
xchg
pop
sahf
sahf
sub
xchg
(bad)
shr
add
stos
(bad)
out
xor
mov
jle
xchg
repz
jmp
mov
js
retf
push
mov
cmp
mov
(bad)
(bad)
push
cmc
stc
inc
mov
adc
stc
and
sti
fisubr
sub
sub
push
dec
imul
inc
sahf
add
push
pop
movs
xlat
xor
imul
pop
lds
push
in
lahf
fbld
xor
jno
dec
sbb
or
jns
test
mov
or
adc
inc
adc
inc
call
ins
mov
rcl
sbb
(bad)
jl
popa
mov
das
xor
mov
int3
(bad)
(bad)
outs
mov
in
sbb
std
xor
pop
xchg
push
sub
ins
jmp
cwde
stc
lahf
jmp
push
aas
enter
add
mov
add
pop
pop
inc
shl
nop
nop
jo
shl
test
imul
inc
pop
sub
or
cmp
aam
inc
scas
mov
cmp
sbb
loopne
mov
add
enter
aam
jle
pop
call
cli
fs
test
mov
rcl
adc
jo
push
xchg
pop
ins
jg
sub
mov
cmp
pushf
test
les
push
fld
sbb
call
sbb
sbb
inc
sahf
stc
mov
ins
cmc
ins
test
xor
add
sbb
or
xchg
sub
sub
mov
int
mov
sbb
repz
fsubr
pop
aad
popf
test
add
loopne
jae
inc
(bad)
out
scas
push
out
pop
pop
leave
pop
retf
jg
mov
outs
sub
inc
sub
scas
inc
add
daa
jae
mov
retf
push
push
je
sub
or
pop
dec
cmps
es
inc
out
inc
and
jns
jae
test
mov
xchg
jnp
jbe
ret
xchg
lods
pop
jmp
jne
jb
clc
call
cs
add
pop
pop
mov
and
and
jmp
mov
es
add
aad
adc
cmp
gs
mov
dec
mov
shl
call
cwde
loop
test
lods
adc
mov
pop
cmp
pop
in
jbe
inc
out
leave
test
sub
setg
or
inc
pop
push
test
jl
mov
loope
fs
mov
add
stos
inc
cmp
and
and
jl
in
xor
ret
cli
add
xor
xor
jmp
jnp
in
into
xor
or
jmp
push
push
mov
imul
pop
or
push
inc
call
(bad)
inc
or
sbb
inc
sub
imul
mov
inc
mov
loop
mov
pop
bound
mov
and
add
jno
push
push
fistp
pop
mov
cld
xchg
adc
xchg
dec
jecxz
test
sub
rcl
(bad)
push
push
push
ret
arpl
popa
sub
pushf
xor
mov
pop
das
pusha
jne
xor
pop
mov
test
(bad)
(bad)
jp
adc
mov
add
dec
inc
cmp
retf
mov
inc
retf
fsubr
lahf
push
jns
jnp
or
pusha
movs
push
fnstcw
sbb
pop
mov
shr
xlat
addr16
mov
cmp
push
mov
mov
es
add
xor
jmp
mov
mov
inc
sub
mov
sar
xchg
sbb
(bad)
fiadd
mov
out
mov
or
imul
sub
nop
nop
adc
dec
mov
jp
and
or
ins
fimul
dec
loope
xor
lods
adc
push
les
sub
add
push
mov
in
inc
je
cmp
aas
push
(bad)
jns
sbb
cmp
mov
push
in
lods
jne
mov
mov
mov
pop
pop
add
bt
out
or
xlat
jmp
pushf
inc
pop
pop
adc
pop
cmp
mov
pop
and
lods
mov
lahf
mov
repz
in
(bad)
push
fmul
cdq
lds
(bad)
cwde
(bad)
sbb
mov
test
je
call
lods
loope
push
stos
mov
iret
fisub
jae
icebp
mov
mul
fcmovnbe
ret
(bad)
sti
cmp
push
sar
add
(bad)
sbb
sub
xor
mov
call
loope
icebp
js
fwait
mov
push
jge
push
mov
dec
xchg
enter
lahf
mov
dec
cmp
pushf
jb
dec
xor
jb
rol
movs
hlt
pop
mov
sub
gs
dec
rcl
push
fcmovbe
in
prefetchwt1
sub
mov
out
mov
cmp
out
mov
scas
mov
sbb
js
cs
push
movs
jle
add
retf
xchg
int3
in
adc
outs
add
sub
xor
pxor
cmp
mov
cmp
xor
mov
sub
leave
fcomp
adc
mov
push
movs
inc
sbb
adc
sar
xor
sub
mov
bound
repz
mov
pop
sbb
out
ds
es
pop
mov
and
lods
and
(bad)
cmp
dec
ds
lahf
not
addr16
iret
sbb
fld
call
ss
dec
sub
cmps
xchg
loop
sar
push
mov
sti
ins
jmp
retf
retf
cmps
mov
mov
lds
into
ret
aam
xor
ret
cmps
fldcw
fidiv
shl
pop
dec
adc
inc
jg
sub
mov
xchg
les
stos
aad
in
and
xor
or
jae
in
push
std
test
cmp
lods
jnp
inc
jo
sub
dec
arpl
test
aaa
outs
into
adc
popf
push
in
pop
mov
sbb
jno
push
jb
out
test
out
xor
into
imul
cmps
ja
aad
mov
jp
and
ss
int
inc
sbb
adc
dec
in
add
sti
push
pushf
test
jo
or
fmul
fsub
xchg
xchg
cwde
xchg
pushf
inc
xor
loopne
or
and
pop
imul
sbb
pop
pop
imul
dec
movs
mov
cs
xor
push
mov
pop
aaa
cmps
cdq
stc
sub
in
cmps
mov
rcl
add
mov
jp
pusha
or
adc
jb
lods
lods
xchg
or
xchg
leave
fild
dec
popf
shl
cmp
pop
mov
loopne
dec
or
call
push
in
jge
sbb
jl
or
adc
rcr
dec
inc
dec
scas
ret
xor
cmps
mov
es
pushf
fwait
push
adc
movs
addr16
jle
cmp
in
ins
daa
cmp
(bad)
mov
ins
jmp
sahf
adc
add
dec
das
loope
sbb
stos
or
sub
mov
lds
popa
or
lods
sub
jle
enter
mov
xchg
jbe
sbb
shr
test
(bad)
mov
lods
mov
jp
push
movs
test
bound
mov
push
xor
fldenv
clc
loop
rcr
ret
das
fwait
mov
lahf
retf
jge
pop
jbe
inc
xchg
lahf
jg
in
mov
add
pop
mov
icebp
push
jo
test
ret
mov
xor
mov
rcl
(bad)
hlt
inc
paddq
inc
addr16
mov
mov
push
adc
adc
push
or
inc
mov
sub
pop
mov
xchg
sbb
fstp
adc
mov
inc
(bad)
adc
iret
jnp
lock
pusha
ins
loope
stos
fistp
jmp
cmp
stc
retf
fnstenv
std
repz
movs
mov
inc
cmp
aad
adc
fld
sub
aam
mov
adc
pop
out
and
je
les
xor
push
dec
push
movs
push
mov
cld
and
mov
imul
adc
mov
sub
jno
hlt
cwde
or
add
push
cmp
arpl
xchg
fs
repz
or
in
jb
int
jmp
mov
mov
fnstsw
and
test
int3
xchg
out
add
adc
pop
jns
jno
xor
or
mov
iret
out
(bad)
xchg
mov
dec
xchg
in
xchg
add
jo
pop
arpl
adc
sub
jp
daa
imul
xchg
mov
jmp
(bad)
fwait
adc
inc
lahf
div
loope
and
add
sti
daa
(bad)
ss
pop
jg
movs
(bad)
jmp
test
mov
pop
outs
call
add
aad
popa
sbb
mov
lea
xor
and
enter
dec
dec
ins
and
es
jle
pop
ss
mov
imul
or
stos
loop
fdivr
push
pop
jb
lahf
and
imul
fstp
and
mov
fnstcw
sahf
cs
ficomp
popf
xchg
call
pop
(bad)
and
push
and
xchg
xchg
aas
push
test
add
mov
movs
inc
aaa
test
clc
inc
pusha
mov
push
pushf
push
mov
dec
sub
(bad)
das
inc
mov
add
adc
xchg
lods
adc
pushf
add
push
test
imul
inc
push
xor
and
jb
jnp
jmp
sbb
mov
lods
mov
fbstp
xchg
inc
(bad)
outs
mov
inc
add
addr16
sbb
call
jg
stc
imul
out
clc
fisubr
jecxz
mov
adc
or
sub
or
push
add
hlt
test
cmc
add
push
dec
push
add
mov
popf
push
les
stc
inc
aas
enter
sti
xchg
jecxz
push
mov
push
push
mov
xchg
stos
xchg
jg
or
mov
push
mov
jne
aas
enter
aaa
sar
in
int
mov
or
pusha
arpl
inc
xchg
ror
mov
retf
jl
dec
loop
cdq
ins
pop
dec
mov
xor
mov
ss
rcr
cdq
movs
push
test
pop
imul
int3
push
out
jnp
sub
sub
das
jmp
cmc
in
enter
leave
mov
mov
adc
mov
push
shr
cmp
adc
jge
dec
cmp
cld
or
adc
sti
mov
sbb
lock
neg
(bad)
sub
dec
cwde
clc
cli
test
enter
mov
test
sub
in
arpl
arpl
stos
push
mov
mov
aam
cmp
mov
dec
iret
pop
inc
out
daa
into
lea
adc
aas
lods
retf
cmp
push
push
retf
xchg
add
sbb
mov
jecxz
jns
or
lods
jl
nop
xor
or
jmp
lahf
loope
cmp
shl
mov
push
neg
daa
inc
aam
inc
sbb
adc
pop
pop
push
push
adc
fsubr
test
add
pop
add
xchg
dec
xchg
arpl
push
xchg
imul
sub
icebp
sbb
call
mov
sbb
fs
scas
repnz
pop
adc
mov
xchg
sub
push
sub
test
arpl
xor
sub
adc
jmp
sbb
mov
dec
dec
cmps
rol
xchg
pop
jne
(bad)
jbe
inc
jecxz
out
cmp
retf
frstor
or
dec
addr16
fild
fst
mov
mov
clc
movs
fmulp
in
shl
push
or
repnz
cld
add
and
mov
jge
mov
mov
add
cmp
inc
sbb
adc
pop
cdq
and
pop
neg
cld
sub
or
loope
(bad)
aad
out
mov
out
pop
mov
cs
xor
cli
jmp
dec
inc
lock
xchg
mov
push
jbe
push
dec
pop
and
push
outs
dec
mov
adc
sbb
leave
push
sti
icebp
mov
pushf
adc
or
or
fsub
int3
dec
jp
dec
and
mov
cmp
cmps
arpl
dec
clc
pop
es
das
out
mov
mov
dec
rcl
inc
sbb
push
sahf
(bad)
pop
adc
lods
neg
fldlg2
ins
stos
and
idiv
popa
push
pusha
add
mov
cli
loop
ins
jmp
mov
adc
movs
or
repz
mov
out
int
es
not
pop
jns
ds
gs
ss
mov
jb
push
dec
xor
(bad)
fbld
push
mov
inc
je
dec
pop
hlt
lock
jnp
mov
gs
sub
ja
ins
and
adc
ret
loope
fsub
mov
xor
sub
jno
mov
stos
xor
arpl
push
xchg
jnp
out
sahf
adc
(bad)
xor
sar
adc
pop
int
loopne
push
repz
mov
test
mov
pop
in
pushf
xchg
movs
pop
out
add
stos
outs
inc
xor
bound
xor
fnstsw
leave
mov
and
push
ror
jmp
mov
or
fbstp
inc
sub
daa
jge
int3
push
dec
push
mov
arpl
cld
inc
sub
(bad)
lds
add
je
push
mov
push
pop
jno
xor
xor
je
inc
movs
js
cli
xchg
loope
call
pop
clc
js
mov
mov
add
pusha
mov
adc
stos
mov
jmp
and
leave
(bad)
popf
jne
mov
mov
jmp
xchg
(bad)
dec
mov
mov
fisttp
std
xchg
div
sub
push
pop
into
lahf
dec
retf
in
mov
xor
stos
loopne
push
clc
inc
test
sbb
scas
dec
test
rol
popf
mov
mov
and
test
sti
cli
inc
sar
in
adc
test
push
lea
(bad)
or
or
mov
out
inc
(bad)
retf
cmp
daa
jo
pop
out
fwait
sbb
(bad)
bound
inc
pop
xchg
imul
sub
ins
xchg
or
rcr
add
sbb
xchg
into
and
icebp
jne
cmp
mov
pop
jge
fimul
push
jmp
mov
mov
jp
data16
int
xor
push
adc
in
add
mov
(bad)
scas
inc
cmps
dec
scas
mov
out
mov
push
push
push
mov
xchg
fs
add
icebp
add
add
int
xchg
mov
jge
dec
push
fs
add
stos
out
lea
push
dec
(bad)
(bad)
pop
push
lods
imul
sbb
fs
loopne
in
sub
jo
rcr
test
fild
les
sbb
inc
repz
cmps
call
mov
test
mov
(bad)
jecxz
and
cmp
and
jne
inc
add
inc
adc
aas
sti
nop
(bad)
fmul
je
jmp
and
repnz
adc
gs
dec
sbb
popf
in
sbb
jae
mov
xor
fnstenv
push
or
gs
repnz
jl
push
lods
xchg
loopne
push
outs
mov
fiadd
add
lahf
js
ss
push
mov
and
jno
pop
std
inc
imul
mov
sub
inc
int
mov
(bad)
dec
jbe
mov
aas
test
xor
fisubr
enter
rcl
adc
ror
sub
adc
int
jp
mov
push
ficom
add
popf
add
out
jmp
xchg
leave
mov
pop
mov
test
mov
inc
inc
jmp
out
lock
add
xchg
xor
mov
stos
cmp
mov
lds
daa
sbb
hlt
clc
scas
sti
jnp
and
jmp
jmp
sti
adc
loop
in
cmp
dec
lods
mov
daa
les
mov
or
mov
push
sbb
ret
test
scas
aas
test
repz
jp
mov
dec
rcr
xchg
std
xor
cmps
cmp
pop
in
imul
dec
movs
inc
mov
push
int
push
mov
or
xor
call
dec
fbld
repz
iret
pop
outs
icebp
movs
xor
xchg
daa
sub
or
loope
loop
push
jnp
aaa
dec
lds
int3
mov
and
lea
sub
mov
cmps
fs
lock
dec
je
jbe
sub
or
xor
adc
or
dec
aad
or
not
and
outs
jnp
push
xor
xor
inc
lds
rsqrtps
lock
dec
ss
fst
pusha
nop
movs
jg
sub
dec
outs
imul
dec
(bad)
int3
lods
mov
dec
mov
test
lahf
cmp
jo
sbb
stos
adc
inc
jge
dec
mov
fnsave
sti
hlt
add
mov
jp
inc
jne
out
or
jae
pushf
or
xchg
dec
cmp
(bad)
sub
and
push
mov
in
cwde
dec
inc
pop
push
ret
mov
jle
cmp
or
fbstp
inc
jle
and
adc
cmp
or
sub
ret
enter
jl
or
js
in
call
dec
scas
js
jb
inc
pusha
and
bswap
push
sahf
cli
call
and
mov
add
fdiv
shr
(bad)
bound
mov
pop
test
or
ret
jno
jp
sub
and
into
pop
xchg
push
addr16
ret
loop
pop
sbb
pop
outs
jl
lea
rol
pop
dec
ret
test
adc
or
test
aas
cdq
out
clc
repz
or
mov
add
(bad)
retf
aam
inc
dec
mov
fnstenv
idiv
and
out
mov
jae
pushw
call
jb
out
dec
imul
test
test
enter
(bad)
sub
sub
push
pop
js
xor
adc
inc
cmp
pushf
(bad)
in
rcr
pop
shr
mov
inc
and
and
pop
jecxz
je
ss
mov
sub
stos
inc
(bad)
jne
jae
xor
pushf
inc
popf
mov
or
je
iret
xor
add
xor
test
loopne
inc
sub
jp
bound
ret
push
dec
mov
inc
ja
lea
int
mov
(bad)
icebp
into
pushf
outs
jae
pop
call
cmp
push
inc
ja
(bad)
xchg
or
dec
cmp
pop
inc
sbb
test
mov
xchg
loopne
out
inc
pop
add
jp
and
xor
popf
cmp
xor
in
std
xlat
fsubr
mov
aas
push
pop
mov
dec
inc
lods
out
or
ror
or
enter
jecxz
dec
fsub
call
jle
mov
inc
and
aam
pop
pusha
lahf
mov
or
xchg
cmc
adc
cli
mov
icebp
push
push
pop
mov
xlat
nop
addr16
cmp
adc
xchg
add
stos
xchg
stos
push
pop
and
and
aam
hlt
xchg
mov
push
(bad)
sbb
cmps
xor
inc
inc
div
jmp
jp
xor
cmp
imul
sub
mov
jnp
jge
stc
shl
or
cs
sbb
mov
push
shl
in
retf
mov
cmc
loope
jg
cmp
std
adc
pop
cmps
mov
lods
test
(bad)
not
xor
jecxz
addr16
push
lods
push
and
xor
mov
cld
push
shl
pop
jp
repz
fdivr
aaa
rcr
idiv
in
xchg
dec
pop
or
xchg
xchg
jmp
push
fidivr
sar
hlt
adc
inc
in
shr
jb
test
jecxz
pop
scas
xor
inc
sbb
and
test
test
push
jmp
cmp
mov
cdq
cmps
in
sti
mov
pop
xor
cmp
and
cmp
fnstenv
xchg
gs
lahf
and
imul
fisttp
repnz
jno
jmp
in
push
adc
sub
sbb
dec
mov
ret
aad
jae
mov
shr
sbb
ret
inc
lock
xchg
mov
inc
ja
xor
test
in
inc
imul
push
cld
or
nop
push
es
out
xchg
lock
(bad)
sbb
loope
mov
mov
(bad)
ds
je
inc
xchg
xlat
push
and
xor
cmp
or
sahf
mov
out
aad
mov
test
test
movs
scas
imul
pop
adc
jne
xchg
xor
and
ins
nop
and
aad
rol
xor
add
(bad)
push
fbstp
out
enter
(bad)
push
push
out
cmp
js
push
xchg
aam
xor
sbb
dec
sahf
iret
stos
mov
pop
daa
dec
mov
cwde
jmp
xchg
fadd
adc
xor
scas
aad
sub
pop
pop
push
(bad)
adc
outs
mov
inc
or
mov
cmp
fs
in
stos
adc
and
aam
stc
ins
pusha
(bad)
and
rcr
push
mov
fld
pushf
shr
jmp
rcl
aad
adc
xchg
mov
jg
inc
mov
and
clc
stos
cs
and
out
push
adc
inc
test
aas
jmp
aas
and
jne
enter
mov
lods
cmp
dec
addr16
mov
jae
std
mov
cmps
jne
mov
adc
cli
jecxz
pop
adc
icebp
fisubr
and
push
cli
dec
fwait
cmp
jbe
jns
sar
jmp
mov
mov
cli
xchg
mov
or
jp
dec
xchg
int3
(bad)
(bad)
nop
(bad)
xchg
daa
test
inc
les
add
neg
js
sar
scas
push
jl
adc
sti
pop
pop
(bad)
mov
fwait
mov
stc
scas
imul
iret
bnd
mov
div
push
daa
xor
pusha
in
jo
pop
loopne
sub
inc
fwait
mov
xchg
pop
cmp
xlat
cmps
jle
sbb
pop
push
rcr
stos
in
rcr
and
bound
outs
jle
mov
(bad)
push
inc
or
jl
frstor
sub
mov
ja
cmc
das
popa
mov
je
test
stos
jle
retf
adc
xor
jo
push
adc
aaa
mov
inc
(bad)
test
loopne
movs
jp
cmp
sbb
mov
xchg
(bad)
mov
sub
loope
outs
shl
or
add
bound
xor
cmp
(bad)
mov
mov
add
mov
(bad)
sti
xlat
stos
dec
mov
sub
out
inc
lea
pop
(bad)
arpl
fild
xchg
mov
sbb
pop
sti
into
arpl
xchg
xchg
push
dec
pop
xchg
shl
leave
jmp
mov
fdiv
inc
jmp
in
jmp
pop
out
xor
in
popa
das
aas
sub
(bad)
scas
and
push
mov
clc
xlat
std
ja
arpl
adc
jo
mov
fisttp
push
mov
pop
or
scas
pop
mov
adc
ja
xchg
jecxz
out
movs
add
and
xchg
xchg
enter
lods
mov
jne
mov
mov
movs
mov
es
push
pushw
jge
ret
add
mov
mov
sbb
in
pop
jae
retf
and
hlt
push
and
int3
xor
int3
movnti
repz
sar
pop
ss
mov
sbb
fnstenv
and
jge
jge
inc
nop
mov
sbb
mov
cmp
adc
xchg
push
ss
js
dec
sub
movs
xchg
adc
test
std
pop
movs
and
pop
ffreep
cmp
scas
inc
inc
jle
movs
out
add
leave
fnsave
dec
leave
out
and
mov
fstp
push
mov
aas
mov
les
mov
fs
inc
lods
mov
aas
jns
sbb
pop
pop
ret
or
ret
in
cli
scas
dec
movs
push
sti
sti
nop
test
lahf
fistp
out
add
cwde
(bad)
popa
adc
inc
iret
fcmovb
jmp
add
(bad)
fucom
push
sbb
xor
dec
sub
jmp
mov
retf
sbb
aam
pop
mov
mov
or
and
addr16
dec
gs
jp
push
mov
jmp
dec
adc
fld
fwait
inc
fcomp
and
scas
pop
jp
cmp
pop
pop
dec
dec
cmp
and
loop
and
repnz
(bad)
out
fwait
xor
push
or
and
ss
sub
mov
cmps
lea
adc
hlt
int3
pushf
lahf
or
aad
add
aad
clc
cli
cmc
pushf
test
(bad)
test
xlat
stos
(bad)
rol
cmp
xchg
cld
xor
jp
lahf
call
mov
jbe
aad
xor
dec
and
ret
sbb
xchg
sbb
sar
inc
retf
and
outs
inc
leave
cmp
dec
into
cli
(bad)
lods
js
rol
loopne
add
jnp
addr16
lods
sahf
push
cmp
bswap
dec
les
lock
in
sbb
xchg
xor
outs
enter
out
pushf
repnz
fadd
jae
mov
pop
cmp
les
movs
xchg
stc
inc
jmp
lea
pop
pop
and
jmp
scas
jmp
popf
rcl
push
or
push
in
fadd
or
push
or
jg
mov
inc
mov
jb
adc
add
jge
stos
or
adc
icebp
dec
adc
mov
aas
lds
retf
mov
into
xchg
cmps
inc
popf
cmp
and
lods
push
adc
jnp
cli
dec
rol
les
std
xor
(bad)
fnsave
imul
mov
retf
xchg
repz
scas
(bad)
aaa
rcr
sub
mov
in
scas
sub
test
aas
mov
imul
xchg
das
mov
pop
mov
out
add
adc
inc
outs
or
cmp
push
imul
cdq
dec
in
mov
in
mov
cmp
jbe
cmc
sti
call
sbb
adc
jae
dec
mov
sbb
sbb
fldl2t
imul
push
mov
pop
xchg
out
inc
lods
aas
rol
les
push
jmp
xor
bound
ins
movs
cmps
sahf
gs
aad
xchg
mov
ret
push
stos
cmp
call
enter
dec
adc
add
jno
and
and
sub
mov
stos
inc
mov
xchg
cmp
xchg
(bad)
cmc
imul
aas
mov
outs
mov
pop
add
fisub
jmp
xor
scas
(bad)
push
mov
bound
cld
repnz
cli
pop
in
add
ins
sbb
ret
mov
scas
xor
pushf
and
push
sub
pmullw
repz
cmp
inc
dec
adc
in
into
mov
jmp
push
dec
cmps
cmp
cs
psubsb
in
addr16
xor
stos
cdq
dec
repnz
(bad)
dec
xor
inc
xor
add
fiadd
or
push
pop
imul
sbb
pop
and
lds
or
cmp
sbb
fabs
pop
out
inc
clc
dec
mov
in
fdivr
mov
push
push
je
div
mov
cwde
aad
pop
inc
xor
xchg
int
dec
arpl
lds
loopne
cmp
add
or
pop
or
xor
add
scas
retf
rcl
imul
aaa
mov
fs
test
gs
retf
scas
mov
repz
pop
stos
sub
jp
mov
pop
fisubr
sub
outs
aaa
push
cmp
icebp
or
adc
aas
ror
mov
js
and
out
daa
jo
adc
push
icebp
test
sub
fbld
or
retf
in
and
in
xor
neg
mov
pop
hlt
sar
enter
or
ins
dec
int
gs
xor
cmp
sbb
(bad)
out
jg
scas
shl
imul
(bad)
jae
call
icebp
clc
mov
mov
jmp
fist
push
adc
pusha
dec
(bad)
push
mov
jne
xor
xchg
in
sbb
jge
sbb
ret
ss
mov
imul
and
lea
ss
push
loope
cdq
in
sub
outs
jb
jbe
enter
jge
shr
fsub
inc
dec
mov
xchg
test
add
adc
scas
sahf
xor
adc
and
imul
dec
pop
es
adc
dec
or
mov
loop
xor
mov
jbe
adc
ins
test
mov
(bad)
sar
fadd
push
xchg
int3
inc
mov
jp
and
mov
repz
push
adc
ret
(bad)
bound
mov
cmps
retf
fst
dec
sbb
xchg
movs
dec
movs
dec
sbb
sbb
push
sub
fs
(bad)
push
add
and
inc
shl
hlt
cmc
mov
and
imul
enter
pushf
sti
dec
fs
mov
scas
or
sti
mov
push
mov
out
xchg
or
xchg
add
jl
pop
jo
push
or
sbb
(bad)
jmp
mov
ins
or
std
test
in
(bad)
dec
pusha
cmp
imul
add
push
push
jge
or
cs
xor
jae
sub
(bad)
fidiv
mov
cmp
stos
adc
xor
pop
mov
sbb
inc
ds
or
pop
xchg
retf
xor
repz
pusha
test
cmp
mov
(bad)
jle
push
es
call
mov
or
hlt
lahf
jecxz
pop
jb
call
lea
xor
pop
enter
sbb
xor
mov
or
test
aas
mov
mov
fs
cmps
scas
xchg
xchg
xor
jmp
not
mov
sahf
jl
dec
xor
jge
sti
js
sbb
add
xor
mov
hlt
jae
repnz
dec
push
jno
stos
sub
out
cmc
xchg
inc
mov
gs
sub
popf
shl
repnz
not
dec
popa
clc
aam
jecxz
or
cs
stos
dec
loope
and
ret
popa
les
ret
imul
adc
jbe
push
adc
push
repnz
js
pop
pop
mov
ret
jnp
rcr
lahf
xor
cmp
push
inc
push
dec
arpl
loopne
aas
and
inc
dec
pop
cmp
sub
jecxz
cmp
int
sbb
push
cmc
cs
test
xchg
int
rcr
xchg
xchg
cmp
sbb
jl
cmp
push
add
mov
adc
repz
sub
pop
out
xchg
push
jo
mov
xor
jnp
jne
add
into
ss
dec
ficom
sub
jmp
sub
das
cs
sub
jecxz
jbe
es
daa
pop
push
pop
call
ret
stc
(bad)
fcomp
es
or
adc
sub
(bad)
mov
push
push
mov
movs
adc
div
xor
sbb
jns
inc
pop
jmp
xchg
or
adc
xor
sbb
or
dec
sbb
scas
pop
(bad)
add
lock
into
arpl
xchg
xor
ret
mov
addr16
fdiv
fld
ja
cmp
xor
mov
pushf
mov
ror
loopne
push
test
dec
push
in
jge
shl
lds
sub
in
push
aad
pop
fdivr
js
add
test
out
sub
add
cwde
lods
sub
in
je
pop
mov
call
add
xchg
pop
cdq
test
adc
adc
xor
dec
dec
add
cmps
push
mov
cli
cmp
stos
jecxz
aam
ficomp
pop
jnp
mov
add
jb
pop
fld
adc
sub
movs
push
xchg
shl
pop
xchg
adc
jns
mov
sbb
xor
xor
pushf
fwait
and
cdq
pop
mov
push
inc
dec
cwde
clc
in
sbb
retf
iret
push
pop
mov
inc
xchg
lods
test
jo
xchg
movs
fld
fadd
xchg
and
xor
mov
dec
jmp
push
jnp
push
(bad)
mov
sub
jmp
popa
ss
clc
and
mov
int3
and
add
or
cmp
in
mov
lahf
push
adc
sub
retf
or
dec
je
dec
pop
pusha
adc
mov
int3
mul
lock
inc
push
sbb
sub
int
and
lds
cmp
inc
dec
sbb
pop
lock
test
in
iret
(bad)
sahf
jb
sbb
movs
inc
dec
call
sbb
dec
or
loope
mov
mov
jmp
xchg
(bad)
pop
repz
adc
js
ficomp
fnsave
ja
test
repz
gs
jo
sub
sbb
sub
mov
enter
and
push
je
stc
aaa
test
add
mov
repz
pushf
out
sub
repnz
ins
xchg
push
bswap
and
cmp
sub
or
pop
and
mov
xchg
outs
jo
sub
fmul
mov
adc
loop
das
imul
sub
xchg
fwait
sub
ins
movs
or
and
gs
test
mov
add
test
mov
retf
mov
cmp
or
add
mov
movs
mov
scas
sub
or
xor
ficom
jmp
adc
xchg
adc
jg
test
dec
inc
lea
inc
mov
jle
outs
scas
jae
(bad)
out
lea
or
adc
xchg
mov
push
sbb
pop
mov
out
fadd
and
repnz
retf
xchg
jbe
dec
xchg
xor
jo
shr
int
pop
loopne
out
push
jbe
cmp
mov
and
or
cs
and
fst
repz
loope
add
mov
std
cld
push
leave
ins
lock
sbb
jae
mov
aas
or
jp
xchg
retf
mov
xchg
pextrw
das
icebp
pop
xor
xchg
sbb
dec
imul
sub
jecxz
xor
call
cwde
fmul
or
jge
mov
dec
(bad)
cmp
inc
push
dec
dec
cli
add
sahf
leave
data16
lods
and
cld
sub
mov
aad
jecxz
cmc
cld
jge
nop
jge
add
shr
push
xor
dec
push
leave
bound
ret
push
and
fisttp
cwde
inc
dec
jl
xor
ror
adc
retf
push
dec
adc
std
inc
movs
icebp
(bad)
out
inc
sbb
inc
push
sub
adc
cmps
adc
pop
add
mov
test
lahf
cmp
and
jb
nop
out
je
ins
jns
inc
add
lods
xchg
and
and
cdq
outs
fdecstp
dec
and
sub
push
mov
fstp
sbb
jge
jnp
dec
into
ficomp
cmc
push
pop
pop
(bad)
call
js
push
ficom
fst
les
cmp
or
add
add
aad
data16
rcl
or
int3
jge
ret
call
repz
and
dec
push
xor
sub
jp
mov
push
and
clc
fs
xchg
jbe
int3
mov
inc
retf
inc
cmp
int
mov
cli
push
mov
jns
shl
mov
xchg
scas
imul
mov
rcr
dec
and
add
push
(bad)
fidivr
sar
dec
jmp
iret
pop
sbb
int
cmps
scas
idiv
add
retf
push
jnp
aas
adc
icebp
pop
pop
in
mov
xchg
inc
fiadd
jg
mov
int3
fdivr
cmp
push
aaa
jecxz
mov
pop
scas
int3
stos
or
fist
adc
not
xor
rcr
push
xor
or
and
loope
pop
pop
cdq
popa
shl
xchg
aaa
test
ins
jno
scas
add
push
push
imul
mov
loop
mov
pop
xor
ins
call
lods
shl
jmp
cwde
imul
and
movs
cmp
shl
hlt
retf
add
jmp
sbb
outs
loope
adc
pop
outs
sub
push
push
test
and
ror
mov
push
rol
pop
(bad)
pop
jmpw
push
popa
push
mov
and
push
sub
mov
push
push
into
rcl
add
xchg
stos
pusha
add
ror
xchg
cmp
in
pop
mul
add
cmp
(bad)
out
jb
pop
inc
and
popf
loop
push
sbb
mov
dec
(bad)
mov
pop
adc
loopne
mov
sti
nop
inc
lds
stos
in
int
into
sub
ds
xor
in
xlat
or
popf
sub
repz
xchg
and
dec
push
pushf
dec
dec
cli
retf
adc
xor
ds
inc
adc
loop
and
(bad)
jno
push
mov
add
movs
inc
push
or
cmp
mov
dec
imul
test
mov
in
sbb
xchg
inc
xchg
lea
test
dec
fidivr
es
add
and
fcom
rol
dec
jge
xchg
test
jae
aad
jnp
jo
out
clc
cmp
push
mov
add
cmps
add
push
aaa
push
mov
test
ja
add
jno
stos
das
mov
sub
pusha
sub
std
jl
cwde
push
lock
sub
cld
or
int
shl
dec
sbb
push
in
pushf
inc
into
and
fnstenv
cmp
and
retf
cmp
fadd
int
mov
push
jbe
dec
js
mov
push
mov
(bad)
movs
call
pop
pop
xor
lods
ds
mov
ret
jmp
xchg
sub
cmovno
cmps
push
dec
aad
mov
dec
cs
int
fisttp
sti
in
mov
(bad)
fisttp
or
sub
lds
call
sbb
xor
es
(bad)
enter
inc
(bad)
xchg
ins
pop
lahf
loop
out
(bad)
cdq
cdq
jnp
data16
push
lea
push
repnz
in
sub
or
add
imul
jnp
jecxz
out
ficomp
pop
je
add
dec
lods
sbb
inc
dec
mov
lods
into
add
fisttp
(bad)
adc
inc
ficomp
clc
jg
pusha
mov
mov
mov
push
pop
and
adc
and
cmp
mov
pop
sbb
loopne
pop
cmc
inc
cmps
mov
imul
aas
js
scas
inc
push
popa
shl
ret
ss
popa
push
fisub
popf
or
mov
inc
scas
and
and
pop
cmp
sbb
loopne
jbe
mov
pop
and
add
ins
add
inc
ss
xchg
test
aam
jns
xor
test
pop
or
aad
mov
cmp
aam
mov
jp
and
cmp
test
mov
adc
mov
jo
and
adc
dec
aam
pop
xor
test
mov
bnd
das
aam
cmp
adc
nop
(bad)
add
and
mov
xchg
sbb
mov
int
jb
cli
in
jg
or
or
cpuid
cmp
loope
out
lock
sbb
out
inc
ud1
adc
inc
dec
fcmovb
jo
hlt
push
dec
int3
iret
sub
mov
mov
inc
(bad)
and
fidiv
and
sub
rcl
and
sub
stc
loope
scas
jbe
sbb
sar
retf
popa
pop
sbb
pop
and
xchg
aam
dec
mov
sub
sti
les
neg
pop
sahf
xchg
mov
lahf
pop
mov
xor
jbe
cmp
dec
sti
jmp
(bad)
fadd
jmp
das
into
mov
dec
lea
xchg
bound
push
cmp
push
stc
pushf
loop
or
imul
jne
stc
movs
xchg
mov
push
mov
jge
push
test
cwde
sub
jp
aaa
xor
cmc
lea
cmp
sbb
cwde
(bad)
adc
xor
or
jne
retf
cmpps
push
test
cmc
nop
daa
adc
pop
aas
sub
mov
loope
or
dec
mov
dec
add
push
mov
jnp
scas
mov
es
pushf
or
js
sbb
mov
repz
dec
push
inc
cmp
dec
and
dec
mov
outs
sub
sub
fimul
loope
shl
mov
mov
and
jne
mov
mov
add
(bad)
ss
aas
movs
fwait
ror
add
cmp
fmul
fist
and
in
fsubr
sub
xor
das
xor
bound
push
adc
lock
fisubr
xchg
adc
xchg
enter
jecxz
ins
jo
nop
cmps
cli
aam
jmp
mov
ins
(bad)
adc
rcl
or
js
inc
mov
(bad)
mov
cmp
aad
ins
mov
sar
pushf
dec
(bad)
mov
xor
sub
cmc
mov
in
in
jmp
movlps
cmp
jo
sbb
jns
xchg
mov
xor
inc
mov
and
pop
mov
adc
(bad)
ja
xor
stos
aas
out
jmp
stos
cmp
shr
test
ja
or
cmps
test
pop
jnp
jne
jae
push
scas
and
adc
mov
mov
inc
sub
push
jmp
ds
xchg
(bad)
mov
fcom
js
push
rol
mov
test
xchg
inc
dec
mov
rcl
pop
div
retf
push
xchg
outs
jb
jp
and
nop
xor
popf
bound
shl
mov
enter
fisubr
dec
(bad)
out
jl
cli
dec
cmp
jne
xor
out
aas
jmp
je
lods
lahf
dec
adc
daa
repz
mov
(bad)
cmp
or
scas
xor
ret
nop
xchg
inc
inc
cwde
aam
add
shr
shl
inc
scas
cld
inc
mov
fdiv
movs
loopne
rcl
shl
jnp
cmp
add
(bad)
jae
jmp
push
cmc
pop
shr
sbb
mov
pushf
or
xlat
and
int
cmp
fadd
ret
mov
push
dec
or
pop
xchg
push
std
imul
mov
dec
imul
es
(bad)
mov
addr16
mov
cmp
add
mov
or
xor
pop
mov
mov
and
ret
xor
gs
fwait
push
mov
xchg
shr
(bad)
xchg
or
(bad)
out
cmp
std
sbb
repz
call
sub
pop
xchg
push
sahf
cmc
push
mov
pop
mov
daa
xchg
push
int
pop
mov
cli
jno
mov
jnp
mov
and
faddp
push
add
int
test
bound
les
outs
in
adc
or
xlat
call
xchg
and
pop
cmp
push
sbb
jbe
xchg
mov
pop
pusha
mov
addr16
mov
rol
jb
sahf
out
or
xchg
cmc
call
mov
cld
int
test
mov
mov
sti
mov
and
dec
jecxz
es
inc
in
push
neg
adc
add
(bad)
inc
jno
push
dec
xchg
or
fcom
cmc
lock
dec
stos
pop
hlt
push
cmp
shr
scas
mov
test
mov
dec
or
cdq
es
cmc
or
(bad)
pop
cmc
mov
inc
out
push
sub
(bad)
scas
in
sbb
and
(bad)
mov
jns
mov
jb
dec
out
push
push
jp
mov
fsubp
sub
arpl
fst
and
das
add
xor
jns
fsubp
mov
int3
inc
lods
sub
push
adc
fcmovne
fs
mov
cmp
fxch
fcomp
out
push
jns
hlt
je
test
ins
out
sti
outs
js
mov
out
pop
cmp
sbb
shl
push
push
rol
mov
xchg
leave
iret
sub
js
(bad)
xor
add
mov
test
cmp
popa
aas
push
in
fbstp
jg
fistp
shl
and
mov
loopne
and
ds
sbb
xor
sub
and
xchg
cmp
imul
sbb
dec
movs
mov
aaa
fdiv
adc
mov
je
adc
mov
dec
inc
lock
xchg
arpl
or
xchg
leave
mov
cwde
xchg
jg
xchg
aas
inc
jmp
cli
xchg
in
retf
pop
(bad)
jno
add
cmp
inc
adc
clc
iret
xchg
addr16
and
daa
xor
std
xor
xor
jl
or
push
call
mov
jl
imul
xor
popa
push
rol
iret
inc
inc
xor
sti
call
mov
mov
jmp
mov
stc
or
or
mov
(bad)
pop
cdq
xchg
dec
fs
call
neg
leave
jmp
sub
or
mov
enter
ret
clc
pop
in
or
push
cli
imul
jp
cdq
sahf
xor
mov
dec
std
sub
mov
test
mov
fist
icebp
or
ins
push
push
push
mov
jns
xor
jae
mov
clc
fisubr
mov
cmp
adc
xor
pop
fadd
cs
dec
int3
sbb
sub
xchg
add
(bad)
(bad)
xchg
repz
imul
or
sub
lock
je
mov
aaa
push
out
or
lds
mov
cld
and
mov
mov
xchg
xor
adc
sar
mov
dec
arpl
adc
xchg
out
pop
in
mov
in
mov
sbb
pop
jp
mov
fisttp
dec
or
js
stos
pop
xor
xchg
mov
jmp
(bad)
mov
adc
mov
jmp
sbb
xchg
inc
mov
clc
retf
jo
push
imul
das
scas
push
sbb
movs
sbb
pop
add
out
(bad)
cwde
sbb
add
xlat
ret
dec
add
or
mov
add
and
mov
stc
sar
sbb
mov
in
arpl
xchg
into
in
rcl
in
inc
retf
test
or
repz
xchg
mov
int3
arpl
cmp
and
inc
iret
(bad)
loop
cmc
imul
sub
fsub
add
xor
fistp
gs
sbb
push
ret
ret
push
hlt
dec
pop
(bad)
loop
sbb
outs
mov
enter
inc
repz
dec
xchg
mov
xchg
xchg
dec
call
sti
sub
xchg
jmp
adc
or
xchg
or
ret
sub
and
push
mov
fstp
les
(bad)
fld
push
test
push
in
in
ja
push
push
movs
out
jne
mov
aas
mov
mov
mov
adc
xor
das
push
popa
sar
je
mov
aaa
popa
retf
(bad)
ficom
scas
mov
add
aaa
lea
cmp
add
cmp
in
movs
push
cmp
or
lahf
stc
bound
jo
xor
mov
stos
scas
jb
sbb
std
push
popa
aam
sub
sahf
pop
and
sbb
mov
or
cmp
data16
xor
xchg
jnp
inc
ret
inc
outs
loope
add
fist
mov
nop
jbe
mov
push
call
add
adc
add
mov
cli
std
push
and
pop
pop
sti
call
dec
fld
or
jbe
push
mov
fidivr
neg
mov
(bad)
sbb
retf
sub
mov
nop
and
dec
stos
popf
mov
sahf
sbb
adc
aad
call
xchg
mov
cmp
movs
ror
push
ficomp
cmp
dec
movs
in
xor
loope
lock
jbe
xchg
or
(bad)
push
push
pop
push
aas
popa
or
jbe
or
pop
mov
in
sbb
mov
or
fst
enter
add
repnz
push
rcr
pop
jl
xchg
stos
fdivr
add
retf
jg
(bad)
in
inc
mov
jmp
pop
push
dec
xlat
movq
les
mov
pop
cmp
pop
mov
fucom
or
(bad)
mov
ret
add
in
adc
out
(bad)
repnz
inc
mov
xchg
clc
ss
xchg
idiv
push
dec
adc
add
or
push
mov
inc
jne
dec
adc
pop
dec
mov
pop
fsub
sahf
push
(bad)
lock
sub
pop
bound
(bad)
cmp
enter
push
dec
cmp
kandnw
mov
push
sbb
sub
out
fadd
cmps
mov
jle
push
and
or
add
cld
adc
and
in
ret
fiadd
lods
and
inc
mov
mov
int3
dec
jae
stc
jnp
cmp
idiv
mov
lds
lahf
sbb
je
das
enter
ins
jmp
sub
inc
ss
jmp
xor
pop
test
hlt
pusha
fwait
add
and
sahf
mov
pop
ror
addr16
stos
jnp
push
adc
mov
scas
cmp
fs
cmp
dec
aam
icebp
mov
dec
outs
pop
(bad)
fisub
ds
jno
(bad)
test
lahf
add
dec
aaa
dec
test
ds
ret
retf
add
mov
jo
scas
or
repz
mov
(bad)
push
mov
mov
jnp
sub
jae
popa
dec
cmp
pop
mov
test
into
mov
push
dec
xchg
out
or
jp
lock
mov
jne
(bad)
outs
inc
jle
pop
sub
push
pop
ror
cld
iret
out
add
jb
sub
lock
stc
xor
sub
movs
add
xchg
cmp
out
sbb
inc
lods
loope
movs
and
mov
int
ja
jg
xchg
test
into
inc
xchg
and
pop
stos
mov
jne
mul
inc
out
mov
loopne
mov
jbe
or
iret
stos
mov
mov
mov
mov
xlat
es
pop
mov
in
int
adc
sar
push
xchg
push
mov
sub
mov
mov
ja
push
je
sbb
mov
inc
mov
mov
or
inc
adc
sar
cmp
xchg
movs
outs
xchg
daa
int3
aam
dec
movs
jne
mov
adc
fdiv
mov
movs
cs
retf
hlt
add
daa
jnp
loop
aad
ret
mov
pop
pop
xor
ins
cmp
out
jno
push
(bad)
sahf
push
xor
into
xchg
pop
ret
jmp
stc
mov
ss
adc
sub
sbb
pop
pop
pop
data16
cmps
mov
adc
inc
mov
bound
repnz
es
sub
sbb
test
ins
adc
lods
jne
sbb
dec
sbb
movs
sub
jnp
pop
popa
mov
data16
inc
retf
add
fcmove
ss
les
add
jecxz
adc
adc
in
adc
mov
xor
cmc
shl
jmp
fs
mov
pop
jne
gs
or
repz
pop
push
lods
add
add
aas
dec
or
dec
or
xchg
pusha
bnd
and
inc
data16
arpl
mov
mov
push
lock
pop
arpl
xlat
and
mov
call
fs
scas
or
jae
mov
idiv
sub
rcr
retf
sbb
pop
jne
daa
out
je
cmps
lods
mov
repnz
(bad)
sbb
dec
pop
in
out
adc
cmp
sbb
sub
fsub
lods
cmps
cld
pop
and
cs
das
mov
xchg
jle
xor
sub
push
inc
scas
pop
jp
icebp
repnz
retf
jp
test
shl
jg
ss
gs
ret
mov
sbb
pusha
inc
dec
inc
mov
xchg
out
xchg
dec
sbb
ror
popa
lea
lods
rcl
cmps
and
inc
pop
jae
push
gs
dec
xchg
jb
pop
jecxz
mov
jecxz
loope
imul
daa
fdivr
sub
mov
icebp
jne
je
xor
cmp
sub
ja
inc
leave
mov
popa
in
fnstenv
or
ret
mov
pop
jmp
or
jl
mov
pusha
pusha
(bad)
cmp
adc
dec
popa
xlat
cmc
fwait
cmp
stos
adc
test
fwait
push
call
loop
or
mov
jmp
xor
adc
shl
xchg
ss
jp
out
mov
jp
call
mov
and
mov
mov
out
imul
out
retf
jp
mov
or
(bad)
rol
xchg
xor
pop
xor
out
jo
in
or
sbb
or
inc
lods
stos
xchg
or
daa
mov
mov
adc
push
inc
add
adc
fcomp
imul
lods
adc
test
loope
ret
(bad)
cli
in
(bad)
adc
in
jne
aam
xchg
push
ins
mov
mov
setbe
loope
and
(bad)
sub
mov
fimul
mov
mov
call
pusha
xor
jmp
mov
adc
int
mov
imul
cmp
por
cwde
xchg
push
loope
hlt
xchg
enter
mov
mov
and
dec
imul
pop
cs
inc
ret
ficom
inc
dec
inc
push
dec
js
sub
mov
inc
dec
scas
jbe
push
popf
test
add
mov
ficomp
xor
rcr
xchg
jmp
gs
(bad)
mov
bnd
xchg
mov
or
mov
movs
add
push
xor
pushf
ficomp
dec
dec
dec
inc
loopne
movs
std
aas
mov
fldcw
(bad)
cli
sub
ror
xchg
movs
dec
sti
adc
cmp
aas
inc
ret
out
call
pop
mov
push
retf
sub
arpl
xchg
mov
pop
add
mov
dec
sub
cs
aaa
aas
movs
ret
gs
stos
or
mov
push
jecxz
jl
jmp
and
std
pop
mov
fisttp
out
xor
scas
cld
jl
xchg
pushf
dec
push
(bad)
clc
xor
lods
push
mov
call
out
mov
jp
and
mov
xchg
in
jne
sbb
mov
std
ins
cmp
add
loope
mov
pop
mov
xchg
test
pop
adc
js
lahf
mov
rcl
and
dec
adc
sbb
arpl
mov
movs
jae
mov
test
lahf
std
icebp
movs
sub
inc
xchg
jb
cwde
(bad)
sub
jl
std
jle
dec
jno
inc
mov
stos
test
and
in
lock
in
add
call
jne
call
stos
mov
icebp
cmp
ins
ret
cmp
jb
cmp
div
or
sub
ss
add
je
imul
fwait
mov
jmp
hlt
fdiv
xchg
xor
mov
cli
jl
in
cdq
ret
lds
sbb
repnz
inc
inc
cwde
add
push
stc
inc
popf
cmp
mov
ins
xor
ss
sub
and
adc
loope
aaa
push
in
retf
adc
push
cwde
jge
cmp
fidiv
sub
or
or
test
cli
cmp
ret
popf
retf
jbe
jg
fwait
and
add
pop
ret
xchg
mov
mov
rcr
std
add
cmp
(bad)
call
bound
pop
jmp
out
(bad)
xchg
mov
mov
adc
adc
stc
jecxz
out
sub
popa
push
add
mov
dec
add
test
and
leave
sub
mov
iret
into
mov
(bad)
and
xchg
lock
add
xor
sbb
push
mov
aam
rol
out
jecxz
sbb
or
test
inc
adc
iret
stc
cmp
mov
mov
pop
sub
(bad)
push
aad
push
adc
(bad)
out
push
pop
icebp
xchg
dec
inc
sbb
mov
leave
daa
repnz
sti
dec
mov
ss
xor
pop
inc
popa
arpl
es
push
(bad)
pop
leave
or
add
xchg
popa
dec
inc
call
push
sbb
or
jg
adc
jp
jl
or
xor
ror
sbb
cmp
mov
call
stos
call
mov
ins
test
adc
cmp
sti
cdq
dec
or
push
xchg
in
arpl
xchg
adc
fnstcw
std
clc
jl
fldenv
xor
mov
pop
pusha
mov
pop
shl
xor
adc
jp
jmp
inc
and
add
adc
adc
cdq
inc
mov
loopne
arpl
pop
ret
xchg
retf
(bad)
ret
loope
enter
int
dec
sbb
mov
test
cmp
dec
cmp
int
mov
test
popa
sub
in
lahf
ret
jmp
adc
addr16
add
cdq
sbb
push
add
push
pushf
adc
jl
xchg
adc
adc
scas
fstp
neg
xchg
adc
loop
push
shr
test
mov
or
xor
jmp
or
shl
mov
lock
je
out
sub
ins
lds
popf
xchg
out
inc
pop
mov
pop
hlt
int
addr16
in
movs
std
sti
cmp
or
mov
mov
xchg
mov
iret
and
jno
je
pop
cmps
frstor
clc
push
enter
add
adc
ror
xor
mul
push
in
out
call
xchg
jbe
cwde
push
hlt
pop
fild
scas
xchg
push
fstp
fiadd
xor
je
int3
cwde
push
loopne
(bad)
xchg
shr
xchg
mov
ret
sti
mov
aam
or
mov
mov
jb
mov
cmps
add
fsub
cdq
rcr
adc
fisttp
pusha
jns
add
xor
(bad)
fistp
or
addr16
fistp
push
call
fcomi
and
das
xchg
jns
pop
adc
das
cli
fisttp
add
mov
adc
das
jae
jg
xor
pushf
test
aam
dec
pop
sbb
fisttp
pop
mov
inc
out
hlt
cdq
adc
(bad)
dec
test
mov
xor
and
aam
jmp
rcl
pop
iret
es
jo
(bad)
cmp
pop
mov
and
int3
ret
push
cmp
xchg
in
mov
mov
(bad)
rol
jmp
gs
scas
stos
dec
lods
xchg
adc
popf
cwde
stc
mov
mov
test
bound
or
mov
mov
icebp
and
data16
jmp
xlat
out
xlat
outs
aas
xchg
fidiv
in
adc
outs
jecxz
(bad)
retf
dec
dec
rcr
jp
cs
xchg
sbb
xchg
fsubp
jns
adc
jb
dec
sub
xchg
out
std
inc
adc
sbb
push
mov
shr
mov
sbb
fnstenv
pop
and
ins
mov
dec
pop
out
xchg
cmp
(bad)
jl
ins
push
ins
push
jnp
add
inc
mov
xchg
js
inc
daa
scas
xchg
fstp
jl
xor
xchg
(bad)
mov
inc
in
and
xor
add
mov
aaa
iret
xor
sub
or
mov
xor
hlt
imul
xchg
xor
push
jle
fist
sub
sub
xchg
sbb
mov
scas
je
aas
and
mov
mov
xchg
scas
(bad)
xor
dec
dec
movs
mov
test
fldenv
fst
push
jmp
sub
push
or
fdivrp
test
hlt
add
xor
outs
push
(bad)
fcomp
aam
xor
xchg
jnp
icebp
out
or
daa
lea
popf
pop
ror
repz
pop
repz
enter
ret
pop
or
cs
cs
adc
mov
push
xchg
scas
add
gs
(bad)
jg
int
mov
sub
push
pop
dec
or
es
or
ss
stc
inc
cdq
daa
(bad)
xor
stos
fmul
loop
fdivr
xor
ds
adc
hlt
retf
adc
stos
push
push
or
cmp
das
xchg
jb
adc
loope
pushf
test
out
dec
jb
xchg
stos
xor
cmp
dec
inc
out
jnp
cld
inc
add
sahf
or
sbb
adc
loop
outs
pop
ss
pop
pop
push
mov
pop
cmp
out
xor
add
cmp
cli
mov
(bad)
jnp
push
add
fisttp
and
sar
mov
dec
test
fcmovu
xchg
fwait
in
dec
add
or
cdq
sub
xchg
adc
or
xor
push
retf
addr16
aam
scas
mov
sbb
xchg
cmc
adc
cmp
lea
shr
xchg
sub
sbb
das
jmp
imul
mov
dec
cmps
outs
enter
out
es
adc
cmps
jo
outs
mov
loop
mov
stc
ds
xor
push
pop
std
inc
lods
iret
test
or
jb
out
add
paddd
data16
inc
xchg
add
mov
sbb
dec
pop
sbb
hlt
lods
ficomp
movs
push
inc
push
xchg
jae
lods
xchg
fbld
mov
test
popf
das
lods
xchg
aaa
call
lock
and
xchg
or
sub
je
cdq
inc
mov
shl
or
jecxz
aam
sbb
call
ret
jl
loop
mov
neg
mov
xchg
cmp
cmps
outs
sub
jl
out
push
jmp
ror
addr16
ins
inc
mov
imul
mov
(bad)
idiv
int
dec
mov
adc
push
jecxz
mov
push
into
xchg
push
add
sub
dec
pop
(bad)
clc
mov
imul
fstp
push
jo
cmc
inc
je
dec
and
shl
mov
mov
xor
loopne
cwde
in
pop
shl
and
xchg
or
stos
dec
or
cli
jae
in
sahf
xchg
xchg
fiadd
sub
and
inc
das
int3
outs
out
pop
push
popf
loope
pop
retf
call
movs
push
dec
fadd
and
cmp
popa
sub
mov
mov
xchg
mov
dec
jne
xchg
(bad)
cmp
and
inc
pop
pop
in
sahf
(bad)
mov
outs
inc
push
add
push
jb
jo
shl
arpl
in
fidivr
cmp
mov
dec
test
pop
fld
cdq
sbb
bound
dec
test
outs
mov
lea
mov
sar
mov
jecxz
adc
pop
in
(bad)
jns
fs
in
xor
outs
and
imul
or
int3
mov
std
sub
xchg
dec
mov
sahf
mov
add
in
pushf
xchg
sbb
stc
sbb
stos
lock
mov
mov
dec
lock
sti
xor
mov
popf
push
fidiv
test
sub
movs
sbb
imul
inc
rcr
leave
das
and
and
int
mov
and
fxch
mov
int3
jecxz
xlat
mov
test
loopne
pop
sub
call
pop
cwde
xor
inc
les
test
fstp
xchg
cmp
mov
inc
xchg
(bad)
xor
jnp
xchg
mov
pop
xor
adc
pop
pop
sub
jbe
dec
and
adc
adc
cmp
cmps
mov
std
push
and
not
lahf
mov
push
cld
movs
imul
mov
mov
dec
mov
aad
or
push
js
xchg
push
fdivrp
and
xchg
aad
fnstcw
cmp
xor
pop
addr16
jb
sahf
addr16
xor
push
leave
ja
jne
sub
and
les
std
scas
repz
jmp
inc
xchg
pop
adc
test
xlat
(bad)
and
std
pop
mov
xchg
push
mov
mov
adc
imul
jo
xor
add
sub
adc
fisub
and
dec
repnz
shl
sti
inc
xchg
popfw
bound
pusha
stos
mov
mov
lea
out
push
sub
mov
fwait
push
xor
std
into
add
pop
inc
sar
xor
pop
mov
(bad)
call
fs
pop
jecxz
(bad)
adc
and
add
imul
stos
loopne
stc
outs
mov
dec
das
das
dec
sti
mov
cs
inc
mov
mov
les
sti
mov
mov
(bad)
push
in
mov
push
out
shl
jo
pop
and
push
cmp
in
retf
and
or
mov
add
(bad)
das
push
mov
scas
lahf
cwde
inc
sbb
fwait
cmp
mov
ja
or
xor
ins
mov
dec
pop
mov
cmp
mov
xor
dec
ror
mov
mov
test
ds
scas
aas
fsub
sub
ficom
cmp
cmps
int3
aam
inc
and
ins
mov
dec
jp
push
pushf
jecxz
not
mov
repz
test
sbb
and
ret
jno
fmul
mov
sbb
cwde
rcl
push
cmp
or
jnp
clc
pop
dec
out
ss
mov
out
xchg
xchg
out
pop
add
ret
pushf
aaa
leave
cmp
push
jo
repz
jp
adc
mov
pop
imul
mov
jnp
ficomp
cmp
or
leave
inc
dec
neg
jl
lahf
inc
push
sub
jl
push
div
cwde
mov
jns
loop
faddp
stos
aad
jnp
fidivr
inc
dec
push
add
sahf
jl
xchg
mov
ret
xchg
adc
rol
(bad)
cmc
pop
retf
sbb
int
pusha
mov
(bad)
mov
jbe
sbb
les
inc
push
std
inc
jle
sbb
and
jp
add
push
pusha
sbb
fsubr
xor
push
or
bound
js
aas
mov
pop
or
jle
sbb
arpl
leave
pop
mov
sub
xor
inc
(bad)
stc
sub
fadd
aaa
xlat
(bad)
dec
dec
adc
sub
dec
ret
ficom
dec
cmp
push
and
in
test
arpl
in
or
push
pop
cmp
icebp
cli
pop
lock
cmp
inc
mov
inc
cdq
stos
fwait
lds
push
push
rol
pop
ret
pop
mov
scas
or
push
out
call
add
pop
push
xlat
and
addr16
mov
sbb
inc
or
(bad)
pop
inc
push
mov
sub
test
or
in
fs
aam
je
shl
sub
sbb
jb
inc
push
xor
inc
inc
fisub
cmp
test
test
mov
lods
adc
arpl
sub
sbb
jle
inc
into
hlt
call
cli
call
aas
(bad)
mov
push
jmp
hlt
retf
jecxz
leave
fiadd
aas
shl
cmc
inc
ror
mov
js
aam
xor
les
shl
outs
mov
(bad)
push
add
add
aas
aaa
js
hlt
push
les
test
mov
fild
in
not
scas
or
ss
ja
xchg
jg
jae
and
add
mov
not
fiadd
xchg
xchg
add
mov
sub
(bad)
jle
nop
imul
or
cmc
fcom
ret
enter
mov
mov
jo
xor
ins
add
stc
add
punpckhwd
inc
or
or
cli
cwde
cmps
loope
xor
sbb
hlt
out
jg
out
test
rcl
xor
mov
sub
adc
mov
(bad)
int3
fmul
mov
mov
adc
js
ror
dec
xor
inc
xor
sub
xchg
jnp
and
push
(bad)
lahf
fwait
push
clc
inc
xchg
call
xchg
dec
in
push
arpl
inc
mov
cmps
push
sub
shl
stos
outs
add
(bad)
scas
sbb
out
mov
xchg
in
loopne
movs
cmps
loopne
fistp
cmp
adc
mov
rcr
call
push
pop
daa
mov
mov
mov
(bad)
test
mov
(bad)
mov
adc
inc
mov
int3
mov
mov
xchg
js
pop
dec
sar
imul
test
popf
xchg
add
cmp
ja
mov
lods
jge
retf
pop
cmp
inc
je
es
cmp
xor
pop
clc
push
sub
dec
out
lahf
adc
jecxz
xor
sbb
add
inc
pop
(bad)
(bad)
jb
jo
imul
mov
mov
ins
inc
pop
scas
cmp
ins
sub
xchg
add
mov
and
cdq
leave
jae
lahf
xchg
jp
pop
and
push
push
js
mov
sbb
xchg
cld
mov
test
jl
jle
lods
setge
dec
mov
or
in
fst
outs
inc
sub
sti
or
cmps
and
push
and
xchg
xor
leave
lea
add
mov
jmp
mov
add
ja
cs
add
pop
loope
fsubr
dec
mov
das
call
call
jbe
mov
pop
movs
push
mov
adc
push
out
shl
sub
fld
mov
sbb
int3
aam
cs
dec
jge
(bad)
stc
xchg
cmp
xchg
xlat
pop
add
adc
lock
out
clc
sbb
shr
adc
pop
outs
clc
and
pushf
dec
jl
push
aas
mov
adc
mov
test
aam
mov
add
ins
xor
mov
sbb
mov
push
adc
xchg
dec
xchg
push
cmp
jb
sti
cmps
dec
push
push
jnp
mov
jg
les
mov
ds
sub
dec
test
dec
inc
cld
cli
sub
ja
jmp
fsubr
and
inc
stos
jecxz
adc
fcomi
mov
push
cmps
push
xor
mov
or
push
mov
mov
mov
sbb
movs
sub
or
repnz
or
mov
inc
push
jecxz
add
ds
(bad)
mov
loope
retf
and
es
push
cmps
(bad)
retf
mov
add
xchg
or
push
xchg
and
loop
fidivr
jns
push
call
cmp
and
and
pop
pop
push
fcomp
movs
cmp
data16
(bad)
fsub
push
add
mov
or
push
adc
ins
fwait
scas
js
pop
jno
adc
aad
xchg
sahf
fprem
pop
enter
pop
rol
fdivr
and
pop
mov
mov
pop
mov
imul
pop
and
mov
stos
push
cmp
setne
sub
fimul
cmp
add
fst
fcomp
ror
xchg
sub
sar
dec
adc
loopne
rol
daa
ror
js
fcomp
outs
mov
aaa
stc
stos
mov
js
xchg
sub
rcr
imul
push
and
and
jge
inc
mov
sbb
sub
mov
xchg
cwde
mov
push
dec
shr
test
push
ss
or
stos
fist
push
lahf
pop
sbb
mov
or
stos
aam
ror
cmp
push
imul
pop
retf
cld
inc
shl
sub
inc
cmps
jnp
cmp
outs
push
aad
lods
pop
add
xor
push
fprem
or
rcl
inc
adc
pop
adc
ror
enter
pushf
fwait
mov
lahf
stc
out
jmp
xor
xchg
add
mov
out
pop
or
cmp
lods
sar
mov
loop
ja
sahf
or
add
and
or
cmp
pop
push
xor
mov
repnz
lods
mov
cmps
cli
sbb
pop
sub
fdivr
xchg
xor
test
fdivr
jle
and
push
adc
lds
popf
out
test
sub
inc
or
clc
into
push
in
int3
xchg
jnp
lea
jae
push
js
stc
sbb
outs
push
ja
adc
inc
mov
mov
aaa
jmp
in
mov
mov
sub
pop
push
shl
daa
jp
or
movs
cmp
jle
fwait
adc
push
pop
sub
cmps
mov
push
xchg
lahf
bound
jae
mov
repnz
gs
sub
(bad)
in
mov
push
dec
out
outs
pushf
ins
xor
adc
or
add
scas
inc
fstp
int3
lods
xchg
fsub
pop
fld
mov
dec
movs
adc
cli
ret
movs
outs
push
scas
xchg
das
fdiv
jp
gs
add
mov
inc
bound
jl
fcomp
lods
mov
or
stos
sar
dec
cwde
xor
iret
sbb
mov
int
cmp
aaa
push
clc
ins
loop
icebp
push
imul
pop
(bad)
sbb
aam
sbb
ret
shl
cmc
push
mov
jmp
add
xor
jg
idiv
repnz
cmp
int3
jge
popf
aaa
stc
mov
inc
adc
and
int
pop
jns
cld
lods
out
cmp
or
mov
jbe
inc
fadd
imul
and
retf
daa
and
mov
repz
xchg
jmp
sti
mov
pop
imul
pop
lods
jnp
cmp
cmp
enter
stos
lods
mov
jns
shr
(bad)
fisub
sbb
(bad)
push
sub
xor
repnz
cli
fnstsw
mov
mov
or
pop
in
loope
lods
cdq
in
xlat
mov
test
xlat
and
add
pop
jp
icebp
(bad)
add
mov
pusha
out
pop
arpl
arpl
xchg
inc
or
cmp
jb
sub
ins
dec
mov
xchg
cmps
(bad)
xchg
sub
add
neg
int
call
or
mov
icebp
rcr
sar
in
xlat
adc
pushf
(bad)
mov
ja
inc
(bad)
mov
inc
iret
in
mov
push
call
jb
xor
mov
adc
test
push
in
not
dec
push
cmps
in
sbb
mov
fcom
pop
test
cs
jbe
mov
cdq
xchg
cdq
mov
jge
dec
imul
shl
das
shl
dec
mov
ret
push
test
out
movs
std
mov
out
daa
loop
sahf
push
mov
xchg
(bad)
jnp
adc
push
sbb
push
daa
arpl
psrad
add
adc
(bad)
int
xchg
(bad)
(bad)
repnz
les
mov
imul
sub
repnz
jb
popa
mov
movs
xchg
or
xor
and
jmp
nop
sub
sti
pop
icebp
sbb
ins
jge
mov
push
jno
out
ins
stos
(bad)
fst
jb
add
mov
jno
sub
imul
sbb
or
xchg
loopne
arpl
cmc
(bad)
push
jmp
sbb
(bad)
cmc
sbb
outs
fdiv
cmp
jmp
sub
jnp
mov
jb
inc
in
xor
mov
mov
out
xor
or
shl
cmp
bound
in
je
aaa
into
mov
cli
mov
sbb
daa
adc
xlat
pop
adc
and
cmp
jae
pop
mov
jno
sbb
int
inc
pop
jmp
jnp
adc
pop
or
adc
push
sbb
jmp
call
push
xor
ins
push
mov
cmps
cmp
loop
fld1
aaa
imul
xor
mov
std
xor
popa
rcl
jo
mov
push
bound
ret
mov
push
test
jb
mov
pop
nop
xor
fmulp
scas
jl
rol
mov
inc
jl
mov
adc
or
and
push
enter
xchg
in
jns
fild
aam
imul
pop
cmp
add
mov
pop
sub
lods
aaa
sub
sub
inc
xchg
pop
out
cmp
push
xchg
adc
push
test
gs
aad
(bad)
(bad)
mov
dec
push
popa
(bad)
iret
and
inc
test
push
cmp
sub
pop
mov
loopne
cmp
adc
dec
cmp
cwde
aas
pop
push
xchg
cld
mov
xor
mov
adc
jb
shl
jne
pushf
xor
repnz
mov
cmp
adc
adc
sbb
jmp
fistp
in
cs
pop
xor
cld
into
push
ja
pop
sub
(bad)
xchg
mov
adc
cmps
or
je
lods
mov
sbb
imul
xor
cmp
(bad)
int
lds
xchg
scas
popa
xchg
pop
ror
shl
xor
or
cmp
sbb
fisub
mov
movs
xchg
in
jae
out
ins
cmc
div
outs
pop
mov
mov
pop
mov
add
push
enter
leave
sbb
mov
mov
and
dec
cli
js
ja
stc
mov
nop
movs
aaa
or
fwait
push
mov
aas
mov
xor
add
inc
outs
shl
jp
xor
in
cmp
mov
adc
mov
rcl
shr
xlat
stos
stc
fcmovnb
sbb
sub
dec
inc
jae
aad
inc
xor
jmp
mov
xchg
pop
call
mov
cmc
mov
stos
jg
ins
shl
aad
push
xor
sar
jb
in
retf
sbb
xchg
(bad)
and
(bad)
mov
xchg
push
test
cdq
sbb
imul
add
mov
inc
lea
cmp
mov
or
push
es
xchg
mov
psllq
mov
sbb
mov
or
arpl
loop
inc
inc
adc
cdq
out
dec
jp
fild
jmp
out
sbb
in
add
and
jmp
jno
ins
retf
cwde
jmp
and
mov
xchg
(bad)
and
xchg
adc
mov
cwde
pop
dec
out
in
push
ss
dec
shl
cld
push
into
aas
inc
and
call
inc
out
scas
loop
popa
sbb
ds
dec
push
inc
lahf
fisubr
xchg
aaa
iret
bound
std
xchg
and
xchg
jo
mov
leave
push
test
test
fidiv
nop
ins
arpl
inc
pop
leave
pushw
addr16
retf
add
xchg
cmc
rcr
scas
cmc
and
cwde
sti
es
ja
inc
cmc
mov
inc
sub
ficom
cwde
clc
sub
cs
clc
out
sahf
dec
xchg
inc
fsub
cli
mov
dec
xchg
xlat
sub
cmp
imul
ret
lods
les
popf
xor
push
pop
mul
imul
xchg
jmp
mov
jg
es
mov
imul
inc
sbb
jns
(bad)
cmp
ja
and
mov
rcr
sub
sub
xor
int3
ds
pop
push
pop
or
sub
ins
or
test
mov
xchg
cdq
out
sbb
repnz
sub
retf
fisubr
cli
aaa
mov
mov
pop
mov
faddp
inc
jmp
or
fcomp
ins
int
add
and
aad
cmp
movs
ja
jno
cdq
ret
ins
mov
push
dec
call
jecxz
or
jo
(bad)
loop
mov
popa
inc
hlt
cmps
ror
stos
sbb
call
bound
push
mov
retf
jnp
addr16
ret
sub
xor
jmp
fwait
enter
cmps
(bad)
retf
dec
(bad)
lods
or
fucomip
jmp
mov
stos
sbb
mov
cmp
adc
inc
sbb
pusha
push
inc
push
and
jmp
rol
add
mov
jp
push
xor
inc
daa
push
inc
or
das
jb
dec
adc
data16
jmp
mov
scas
es
(bad)
push
lock
(bad)
mov
pop
jmp
xchg
fistp
add
inc
cmc
xor
fld
push
push
mov
out
jae
sbb
mov
cld
cmp
outs
sub
dec
mov
mov
popa
pop
rcl
jl
enter
xchg
aas
das
jbe
sbb
push
inc
adc
dec
dec
fwait
inc
or
mov
rol
pop
inc
mov
les
ficomp
lds
ins
jle
and
ror
cs
xchg
xor
std
and
pop
inc
call
stc
xor
retf
adc
mov
inc
lock
sbb
xor
(bad)
int3
in
jecxz
add
test
int3
xor
cwde
fisttp
mov
pop
xchg
cld
push
pop
movs
(bad)
test
test
(bad)
call
pusha
je
scas
dec
cmp
rol
mov
fwait
sahf
adc
test
call
dec
lods
lds
or
inc
idiv
xchg
test
(bad)
lock
xchg
inc
shr
sbb
gs
in
dec
pop
jnp
mov
xchg
gs
xlat
jae
mov
stos
jmp
pop
push
sbb
aas
inc
aam
ret
clc
inc
test
xor
sbb
rcl
rol
je
movs
(bad)
out
adc
push
sub
mov
mov
ds
mov
jae
jecxz
dec
test
xor
ins
ds
call
adc
fstp
aam
xchg
fcmovnu
ds
xchg
add
or
lock
scas
push
lods
xor
inc
fwait
test
mov
repz
jae
aam
cli
sti
jp
mov
outs
xchg
shr
in
sub
bound
push
push
in
int3
int3
and
jbe
out
xor
lods
mov
out
(bad)
(bad)
js
push
mov
cmc
fxtract
jae
add
xchg
lods
mov
xchg
stos
inc
adc
adc
jbe
mov
push
ja
mov
pushf
jmp
jnp
(bad)
ins
inc
sbb
ds
aaa
mov
scas
push
shl
push
loop
inc
add
aaa
lods
lahf
call
cmp
hlt
mov
fs
out
repnz
cmps
cli
and
push
xor
enter
inc
and
or
pop
add
mul
add
ins
(bad)
cwde
lds
pop
sbb
fild
xchg
or
mov
push
mov
dec
(bad)
sbb
mov
and
add
xor
jo
imul
fcmovnb
push
lods
or
movs
xor
inc
mov
push
pop
arpl
sub
stc
add
adc
lods
test
mov
icebp
cmp
or
shl
cmps
and
repnz
test
mov
adc
push
and
dec
jnp
dec
fdivr
xchg
adc
not
xor
sti
ins
outs
push
jns
dec
or
mov
in
mov
cmps
mov
xchg
icebp
pop
inc
int
mov
(bad)
mov
push
xor
and
jecxz
in
loopne
outs
or
jle
out
dec
loop
into
pop
cdq
adc
cmp
or
cmps
bound
repz
lods
jns
sub
push
jbe
arpl
lahf
mov
repnz
dec
inc
inc
inc
(bad)
ds
popf
loopne
js
dec
dec
cmps
mov
fimul
aad
adc
inc
jne
adc
punpckhbw
jle
aas
push
adc
inc
sbb
mov
jns
dec
xlat
retf
mov
mov
test
mov
outs
inc
mov
mov
or
lds
iret
push
fwait
loopne
out
sbb
call
pusha
shr
iret
mov
call
adc
outs
jno
or
fnstcw
xchg
xor
jb
fmul
cmps
ja
repnz
(bad)
sub
inc
lds
mov
aad
loop
push
jne
scas
test
sbb
or
xor
push
pop
sub
icebp
xor
out
aam
inc
fsubr
sub
fimul
xchg
scas
stc
stc
push
pop
lahf
pop
test
rcl
mov
int
mov
stos
mov
dec
arpl
ds
pop
idiv
mov
or
mov
out
(bad)
sub
pop
dec
fwait
xchg
xlat
fcom
icebp
xchg
or
aaa
jmp
fwait
ret
xor
dec
mov
leave
int3
and
fistp
push
jns
dec
inc
imul
ret
ds
sub
test
pop
cmc
fist
inc
mov
adc
rol
es
daa
dec
addr16
cmp
pop
sub
inc
shl
add
mov
call
dec
mov
pop
cmp
jbe
ja
pop
ja
mov
cmc
inc
int3
adc
xor
aam
or
cli
xchg
clc
nop
(bad)
out
sub
daa
jns
pop
out
aam
push
push
scas
pop
inc
inc
push
sbb
mov
fs
bound
jne
daa
cmc
movs
dec
mov
(bad)
mov
fidiv
mov
sbb
cmp
cwde
mov
mov
fdiv
int3
xor
mov
and
mov
mov
adc
out
into
jnp
jne
or
sub
dec
repz
jo
sub
pop
jl
xchg
push
jp
cwde
rol
or
call
loopne
pop
mov
dec
out
daa
mov
mov
lahf
cdq
xchg
stc
outs
int3
xor
out
add
cmp
add
arpl
inc
scas
retf
jae
out
test
gs
sar
and
repnz
fldcw
pop
add
adc
sbb
adc
mov
int
push
add
stos
jecxz
jge
shl
shl
mov
dec
xor
push
imul
cld
or
dec
inc
imul
mov
call
mov
jne
mov
daa
mov
cmp
mov
arpl
mov
cmp
adc
pop
fdivr
fisubr
enter
mov
or
mov
cmps
stc
fwait
inc
jmp
ins
fcomp
out
pusha
rcr
pop
cmp
cmps
push
or
inc
(bad)
adc
(bad)
cmp
dec
xchg
or
movs
jge
jb
idiv
push
xchg
ss
retf
push
popa
sbb
neg
jg
inc
sub
aad
xchg
sub
iret
out
ror
fisub
inc
mov
and
cwde
in
icebp
sbb
xchg
or
or
je
xchg
sbb
push
into
shl
cli
and
push
lds
sbb
imul
(bad)
mov
dec
add
outs
mov
jnp
lods
xor
cmps
gs
inc
cmc
popa
jnp
(bad)
mov
or
push
mov
mov
xchg
test
adc
lods
movs
js
add
sbb
inc
shl
out
xor
sbb
outs
ret
jo
leave
test
shl
cli
xor
fidivr
test
cmp
push
inc
pop
push
add
xlat
mov
inc
pop
jno
call
int3
add
mov
cmp
scas
mov
cmp
mov
les
ja
fld
rol
xlat
mov
jg
es
int3
cmps
inc
and
daa
push
jmp
int3
inc
sub
(bad)
les
in
xchg
pop
fnsave
or
div
aaa
lods
sbb
jp
or
data16
sar
mov
xchg
dec
xchg
out
xchg
dec
into
push
xchg
jne
adc
iret
dec
dec
add
imul
into
icebp
or
sbb
xchg
adc
movs
push
mov
imul
lea
inc
mov
sbb
int
fucom
stos
lods
cmp
dec
xor
lahf
ja
mov
cmps
mov
sub
in
push
push
sbb
gs
addr16
lahf
movs
ror
pop
dec
add
and
retf
ss
mov
adc
enter
scas
iret
mov
shl
hlt
scas
jb
repnz
pop
xor
dec
mov
xor
and
arpl
jecxz
shl
dec
pop
enter
mov
xchg
das
cmps
in
pop
or
(bad)
or
sahf
xlat
mov
and
mov
pop
mov
jge
ret
adc
xchg
mov
outs
sub
mov
stos
mov
xor
jmp
jle
add
rol
imul
sar
out
cld
inc
ins
cmc
loopne
mov
imul
xchg
retf
jecxz
mov
les
sbb
call
sbb
in
sub
inc
leave
lds
mov
inc
jne
(bad)
sub
inc
mov
cld
nop
mov
adc
jno
cli
inc
(bad)
test
mov
mov
push
lea
xor
aas
jo
adc
jae
imul
push
test
movs
out
dec
jns
repz
push
(bad)
dec
loopne
mov
sti
sub
sbb
xor
inc
and
sub
add
dec
adc
les
nop
dec
aaa
std
test
rol
jns
pminub
mov
jns
imul
jle
mov
jg
ds
jmp
or
adc
mov
add
bound
aam
setp
xchg
in
jmp
shl
out
and
pop
cmp
sbb
adc
into
mov
mov
mov
stc
mov
and
pop
and
dec
ss
inc
inc
neg
push
mov
mov
gs
sub
je
sub
lock
je
dec
push
outs
jb
(bad)
in
pop
and
xor
not
test
push
jno
stc
(bad)
xor
int3
loop
ja
call
adc
outs
cdq
lds
or
aaa
xor
pop
jno
cwde
int
cmp
into
int3
dec
jae
and
adc
out
(bad)
(bad)
call
dec
and
aad
mov
std
test
cmp
mov
(bad)
mov
push
inc
jle
das
adc
adc
std
cld
xor
mov
leave
cmp
retf
sbb
(bad)
adc
jne
cdq
sar
cmc
jo
jae
fadd
(bad)
push
xchg
int
inc
mov
loope
sahf
dec
add
(bad)
lods
cmp
add
shr
push
mov
jmp
(bad)
ss
out
(bad)
into
(bad)
imul
dec
jo
lods
lods
(bad)
dec
mov
scas
cmps
cmovo
aad
adc
push
bound
dec
cli
cmps
add
cmp
fild
cmc
ja
xor
popf
imul
pushf
shl
aad
xor
sahf
fstp
xor
xor
pop
jmp
cmp
cmp
fcomi
adc
clc
lds
mov
dec
sub
mov
cmps
ins
pop
in
sub
movs
stos
jecxz
inc
mov
aas
hlt
inc
push
dec
push
add
inc
in
adc
and
xchg
add
fsub
inc
xchg
cs
out
imul
jno
fs
add
sub
popf
push
cdq
dec
in
or
scas
mov
dec
sbb
jo
aam
pop
test
call
jecxz
mov
sbb
mov
ret
adc
ins
dec
pop
pushf
stc
fs
jge
xchg
sbb
fisttp
mov
in
inc
fidiv
sub
enter
(bad)
push
sub
out
xor
mov
test
fstp
(bad)
bound
jecxz
fild
daa
mov
pushf
cmp
fisubr
mov
mov
test
dec
jae
icebp
and
and
fs
xchg
fwait
shl
push
or
and
jmp
ja
adc
pop
xchg
ins
sbb
loop
mov
adc
addr16
or
mov
es
rcl
pop
push
push
inc
add
scas
pop
inc
into
push
dec
int
cdq
xor
add
xchg
scas
mov
dec
add
mov
aam
pop
iret
mov
(bad)
sti
fdivr
jmp
sbb
popf
jo
mov
cs
jmp
inc
test
adc
outs
cdq
add
js
(bad)
and
leave
sub
data16
xor
mov
retf
popa
push
jns
into
(bad)
stc
or
inc
sub
ss
add
and
imul
inc
enter
call
jmp
cld
and
cmp
(bad)
retf
dec
pop
cmp
dec
aaa
and
fild
add
int
mov
aaa
inc
cwde
mov
test
iret
sbb
outs
pop
and
stos
das
adc
ror
cmc
je
cwde
pop
mov
(bad)
cmps
pop
pop
cli
xchg
out
out
adc
es
mov
cwde
cmp
add
add
stc
les
or
fwait
mov
jge
xchg
(bad)
jbe
add
xor
xchg
ret
jmp
lods
ss
ja
push
and
dec
out
into
lahf
cmp
sub
call
pop
popf
out
and
xchg
hlt
enter
mov
dec
mov
aas
fisttp
push
ins
lds
mov
and
test
aas
call
in
sbb
stos
rol
pop
retf
add
pusha
mov
je
xor
adc
inc
adc
movs
test
call
pop
sbb
and
mov
rcr
lahf
movd
ss
add
rcr
mov
call
repnz
enter
jae
mov
test
imul
cmp
xchg
enter
or
xchg
xor
fnstcw
aam
into
xor
aam
jns
int3
push
pop
mov
mov
cmc
xchg
mov
(bad)
pop
pop
(bad)
push
les
and
inc
addr16
jge
in
shl
sub
mov
cmc
jle
lock
inc
loope
xchg
adc
xchg
(bad)
mov
mov
fnstsw
imul
sbb
jnp
cmp
and
push
cli
inc
dec
into
xor
in
sahf
test
and
cmp
(bad)
pop
ret
gs
neg
dec
in
sub
cmp
out
adc
adc
out
jmp
sub
mov
or
movs
les
mov
xchg
jno
inc
pop
lahf
in
call
mov
push
jp
int
sbb
movs
or
xchg
mov
sbb
xor
aad
movs
es
std
popf
ja
add
cmp
sbb
lods
ret
cmp
dec
sub
shl
out
inc
push
fxch
clc
xor
arpl
xlat
add
fisub
pop
js
in
imul
pop
xchg
jge
call
and
xchg
push
fisubr
ins
cmp
mov
and
cmp
or
xchg
icebp
jg
lods
lods
in
(bad)
ins
fadd
(bad)
aas
scas
ret
movs
mov
test
dec
lea
loope
xor
cmps
mov
aam
mov
sti
sub
mov
aas
std
gs
movs
in
movs
sub
or
jmp
mov
retf
mov
dec
and
sbb
fwait
sub
cmp
push
dec
les
je
cdq
xchg
jbe
add
sbb
(bad)
jbe
mov
es
lods
jl
cmc
xor
dec
mov
inc
jo
sti
sub
xlat
adc
gs
cdq
sbb
fwait
inc
aas
call
loop
rol
pop
xor
xchg
call
scas
ret
mov
leave
xchg
mov
push
dec
adc
pop
sbb
aad
jne
mov
imul
inc
call
data16
test
lods
in
fs
in
adc
sub
mov
rcr
or
mov
rol
test
mov
mul
aad
iret
movs
mov
repz
loopne
or
in
imul
shl
pop
in
jp
es
xor
test
push
push
lock
jae
xchg
xchg
lahf
xor
jmp
mov
cmps
or
mov
pop
loope
loopne
adc
or
iret
xchg
xor
lods
inc
jmp
mov
ror
dec
dec
add
pop
jecxz
hlt
push
not
aam
sbb
int3
dec
mov
div
sbb
out
xchg
and
into
push
jmp
shl
pop
(bad)
(bad)
(bad)
xchg
and
mov
jle
or
mov
outs
xor
ja
add
and
dec
xlat
mov
sbb
in
add
or
sbb
lds
mov
fwait
fs
mov
mov
add
hlt
mov
mov
jae
cmps
mov
test
sub
repnz
push
pop
lods
add
mov
xchg
cmp
xchg
dec
into
or
fstp
xchg
mov
sbb
retf
and
ret
cmps
adc
je
mov
cmps
gs
dec
xchg
add
adc
xlat
xor
jge
test
jmp
mov
sbb
push
sub
xchg
dec
push
push
lss
(bad)
aas
arpl
or
fimul
push
jp
(bad)
cmps
lods
shl
mov
push
inc
sti
jmp
jnp
aas
lock
pop
cmc
mov
sbb
push
imul
sbb
cmp
adc
bound
pushf
popa
mov
xlat
ins
leave
(bad)
int
xchg
add
je
lds
cmc
sbb
call
aaa
push
xchg
jo
jl
jp
sahf
sub
imul
sti
xchg
jge
push
fs
cmp
xor
aaa
jmp
xchg
sub
sbb
frstor
mov
mov
jnp
xchg
hlt
jnp
cmp
sar
or
out
ret
jae
jnp
mov
lods
push
movs
dec
jns
cmp
dec
cwde
jmp
(bad)
loop
(bad)
imul
push
movs
and
mov
jl
into
popa
xlat
aas
pop
xor
adc
mov
(bad)
scas
stc
xchg
cmp
lahf
loopne
xor
pop
mov
mov
or
xor
pop
icebp
sbb
pushf
stos
cld
enter
mov
daa
jle
mov
retf
in
in
xchg
xor
jl
pusha
push
ficomp
dec
sub
push
hlt
fdivr
adc
sahf
outs
push
pop
out
sub
xchg
dec
cmp
dec
mov
call
mov
in
cld
jg
sub
scas
jp
sbb
test
add
test
sbb
and
leave
xchg
mov
sar
mov
dec
dec
(bad)
fwait
or
pop
and
out
in
(bad)
or
or
mov
push
(bad)
adc
in
xor
inc
push
les
push
sti
sbb
inc
adc
sbb
fcmovnbe
mov
push
mov
int3
push
test
test
and
sbb
and
ss
jne
retf
into
jmp
(bad)
mov
inc
fwait
(bad)
sub
jecxz
fild
test
sahf
nop
xor
imul
popa
dec
int
sbb
aad
scas
test
icebp
out
pop
pinsrw
push
pop
test
inc
lock
dec
int3
add
pusha
repnz
cmp
ror
aam
mov
or
mov
or
sub
cmp
jbe
test
or
mov
dec
pop
ins
xor
int
mov
fistp
add
push
dec
xor
dec
ja
sbb
retf
adc
ds
mul
mov
iret
fistp
cmp
mov
mov
dec
or
aas
ins
int
ja
dec
inc
(bad)
jmp
es
rcl
jnp
cmp
add
std
into
push
xchg
cmps
retf
and
dec
xchg
in
xchg
cmp
or
mov
push
sbb
add
je
pop
std
xor
add
loope
scas
mov
mov
rcr
lods
dec
jmp
sub
(bad)
mov
pop
adc
mov
cmp
inc
mov
ins
pusha
push
aas
pop
ins
shl
inc
lock
lods
pop
sub
cmp
dec
sub
data16
mov
add
jp
cmp
push
out
mov
jecxz
shl
or
mov
mov
call
sbb
rcr
inc
popf
sub
cmp
mov
popa
mov
sub
or
movs
jmp
or
push
xor
mov
pop
xchg
xchg
add
mov
shl
cmc
je
dec
cwde
jbe
int3
and
pop
test
rcl
pop
mov
repz
mov
mov
clc
leave
mov
mov
add
std
or
and
or
jmp
pop
retf
xchg
or
adc
push
xchg
mov
dec
nop
push
sbb
inc
jnp
in
(bad)
test
push
cmp
sahf
mov
out
push
xor
ins
mov
cdq
pop
test
lahf
ds
ret
shl
arpl
jno
and
pop
xchg
imul
jg
popa
jle
mov
or
ja
jge
push
cwde
fldenv
sbb
outs
cmp
xor
push
sub
jge
hlt
mov
mov
push
jb
and
xor
lds
ja
sbb
fcom
je
stos
pop
(bad)
push
aam
or
mov
jle
or
push
cli
xor
add
sbb
arpl
mov
xchg
mov
addr16
mov
mov
lods
std
inc
jbe
mov
or
out
(bad)
jne
pop
push
push
pop
lods
sub
add
ss
int3
cmp
aas
push
dec
xlat
inc
repz
jno
sbb
mov
pop
jae
jecxz
mov
sahf
push
jno
das
mov
xchg
cmps
and
xchg
iret
gs
iret
retf
mov
ds
cmp
ret
push
clc
fdivr
sti
inc
in
cmp
jle
dec
and
in
out
jle
inc
(bad)
sti
sub
push
int
and
sti
fidiv
stc
cmp
test
push
out
lahf
push
jle
into
leave
imul
mov
jecxz
scas
(bad)
adc
ins
lds
jns
sub
movhps
fmul
xchg
inc
pop
enter
test
mov
mov
xlat
and
fwait
mov
ffree
push
add
dec
mov
jl
fwait
pop
xchg
aaa
inc
sbb
aas
adc
leave
or
adc
mov
xchg
adc
jecxz
adc
jmp
mov
test
lods
loope
popa
cmp
mov
(bad)
aas
pusha
neg
sbb
xor
add
aas
scas
int
push
lods
jae
cdq
test
je
idiv
cmp
lahf
enter
jecxz
lods
iret
test
jb
repnz
mov
push
fs
sub
scas
pop
and
(bad)
lods
push
and
into
adc
mov
or
push
fcom
inc
aas
add
mov
sub
into
lods
mov
dec
ret
push
call
aaa
jmp
mov
frndint
jbe
fstp
inc
xchg
int
pop
fnstenv
lock
dec
sti
aaa
fcomp
push
push
add
(bad)
outs
loope
mov
test
mov
xor
sub
retf
rcl
ret
jl
dec
jae
lock
repz
dec
test
mov
jp
popf
call
push
adc
lds
jae
inc
test
dec
in
fldenv
and
or
in
and
pop
aam
ret
mov
sub
out
add
fs
mov
(bad)
pop
bound
mov
pop
lock
xor
test
mov
or
es
loopne
sbb
and
push
movs
push
retf
test
dec
imul
push
(bad)
push
cwde
dec
inc
jne
xchg
dec
inc
dec
or
xchg
int
xchg
jmp
sbb
push
loope
pusha
into
push
push
(bad)
sub
and
mov
pop
test
cld
or
sbb
outs
mov
cmp
inc
call
jl
in
shr
mov
mov
lea
out
test
xlat
pusha
xlat
test
sub
out
push
lods
in
pop
fwait
dec
xchg
jle
sar
xor
mov
mov
rol
or
inc
inc
dec
jecxz
mov
push
adc
lods
xor
and
push
jmp
lea
stos
(bad)
sub
(bad)
jo
sahf
push
lock
jae
push
and
movs
loop
cmp
jge
fwait
pop
js
loopne
xchg
mov
cmc
adc
jmp
repz
ss
and
out
cmp
lahf
push
outs
mov
cdq
neg
cwde
data16
add
mov
xchg
shl
in
or
es
inc
and
jg
jae
pop
test
jle
(bad)
aad
push
popf
pop
es
xchg
daa
es
popf
jmp
scas
dec
cmps
fistp
test
loope
sbb
cmp
iret
jnp
in
data16
push
pop
push
pmaddwd
test
daa
inc
and
sub
jae
data16
mov
mov
xor
jns
adc
sub
jbe
cmps
mov
mov
(bad)
jge
retf
aaa
inc
sbb
int3
icebp
lods
or
pop
sub
out
sbb
adc
mov
xchg
jnp
jge
outs
ds
cmps
mov
daa
mov
sbb
cmp
fimul
inc
cmc
ins
mov
cs
jae
add
(bad)
mov
xchg
imul
aad
out
xor
sbb
push
adc
arpl
in
ror
(bad)
fdivr
(bad)
inc
jbe
sub
sub
xor
adc
imul
in
xor
xchg
xor
test
ffreep
push
pop
cmp
sti
xchg
mov
clc
pop
xchg
leave
not
push
mov
jl
sbb
repz
ret
ins
outs
mov
loop
cmp
cdq
pop
adc
push
pop
dec
xor
and
movs
nop
push
xlat
inc
retf
rcl
push
loope
js
test
je
loop
adc
xchg
pop
(bad)
jnp
data16
push
std
jnp
std
jo
into
and
test
mov
dec
xor
or
(bad)
cdq
xlat
pop
out
cmp
cmps
mov
(bad)
in
mov
sbb
mov
and
ins
dec
xor
outs
pop
sub
push
inc
imul
outs
mov
out
into
jg
mov
xchg
lods
push
fmul
in
lods
pop
sti
jae
jp
sbb
sahf
xor
sub
inc
imul
xchg
dec
das
dec
push
add
inc
add
lea
cmp
push
sub
jmp
mov
dec
cmps
repnz
jmp
retf
call
pop
xor
pop
adc
jne
and
push
pop
mov
xchg
movs
sar
rol
push
xchg
jecxz
inc
faddp
es
fiadd
add
outs
mov
imul
pop
adc
ss
adc
mov
jp
out
pusha
cmp
bswap
push
fsubr
mov
xor
int
jp
movs
mov
stos
jmp
and
(bad)
pop
inc
and
jg
mov
cld
mov
lahf
sub
inc
push
mov
jge
push
(bad)
ins
sub
dec
aam
adc
mov
loop
cmovle
aaa
inc
sub
and
js
push
xchg
movs
adc
psadbw
lock
aaa
rep
cmp
aam
in
into
sub
movs
cmp
jecxz
inc
test
ja
and
push
lds
adc
aas
jp
es
fwait
jecxz
jae
ins
and
int
(bad)
repnz
jp
inc
sbb
dec
pop
jle
inc
mov
mov
(bad)
lock
movs
xor
or
xlat
push
out
push
out
int
dec
pop
sbb
adc
loope
mov
(bad)
sar
xor
jge
mov
adc
lock
dec
movs
lods
(bad)
es
mov
pop
fwait
sub
aas
test
sub
sar
push
adc
int
and
(bad)
rcr
cmp
pop
retf
lea
mov
mov
mov
mov
and
add
cmp
into
push
cdq
(bad)
shr
rcl
ja
cmp
adc
mov
fwait
cmps
dec
aam
setae
dec
or
sti
add
push
dec
pop
sub
mov
jmp
add
push
add
ffree
sar
stc
sahf
in
(bad)
pop
dec
xor
dec
in
xor
pushf
dec
add
call
cmp
xor
adc
mov
xor
add
jbe
sub
cwde
fist
fsubr
lea
adc
scas
xlat
push
mov
in
add
in
adc
sahf
std
inc
pusha
lock
test
mov
jo
sar
inc
lds
add
repz
in
mov
out
pop
mov
jg
mov
sub
aam
xchg
and
adc
jp
adc
aas
xor
inc
fiadd
xchg
nop
xor
mov
inc
xor
mov
jbe
push
push
out
shl
sub
(bad)
push
xlat
sbb
cmp
cdq
je
gs
test
xor
push
aas
das
mov
xlat
adc
shr
add
shr
rcl
popf
or
retf
and
rol
dec
into
iret
push
adc
and
fiadd
mov
test
sub
push
and
leave
cmp
sub
jae
repnz
mov
dec
es
push
sub
es
arpl
sbb
ja
cli
xchg
sti
or
or
cmp
and
pop
push
sbb
xor
fidivr
xchg
dec
rol
push
je
das
push
xor
adc
sbb
xor
pushf
repnz
ret
iret
pop
pop
adc
sub
rcl
sti
xchg
dec
sti
and
fiadd
test
(bad)
sahf
cmp
sub
shl
inc
push
fdivr
xchg
sar
mov
dec
dec
add
push
(bad)
mov
jb
push
xor
xchg
jmp
push
stc
lds
mov
pop
xlat
stos
cwde
not
fwait
cmp
sbb
lea
fisub
call
lods
fsubr
mov
mov
push
sub
fbld
mov
js
sti
pop
loope
not
push
or
std
out
mov
arpl
xchg
mov
add
sub
fbstp
shr
mov
adc
bound
int
and
stos
cmp
movs
sub
jno
aaa
pop
or
or
mov
ret
repnz
and
and
inc
aas
sub
add
pop
out
or
fisttp
aad
out
and
fnsave
rol
in
add
rcl
xchg
push
pusha
jmp
and
outs
mov
mov
in
mov
cwde
stos
mov
mov
iret
xchg
scas
mov
cld
and
add
dec
fild
gs
and
ret
repz
in
mov
test
shr
pop
mov
jmp
dec
ins
jb
pop
stc
pop
push
sbb
push
jbe
loopne
inc
pop
sub
mov
enter
cmp
sbb
aam
cmp
arpl
jae
push
mov
neg
or
jmp
jecxz
xchg
xor
movs
mov
movs
jne
mov
push
mov
aaa
sbb
retf
test
mov
sub
imul
dec
pop
sti
pop
push
fnstenv
xchg
or
and
leave
into
es
xor
ins
inc
rol
test
inc
dec
int3
gs
jg
jmp
mov
push
fwait
xor
mov
pop
es
rcr
(bad)
div
movs
add
lock
int
movs
daa
sub
outs
jb
popa
add
inc
or
js
in
in
popf
lock
(bad)
and
sbb
retf
ss
mov
mov
xor
imul
lahf
or
pop
aas
mov
retf
enter
mov
outs
mov
mov
fs
sub
cmp
out
sub
cmp
test
clc
loop
or
or
pop
aas
into
call
bound
cmp
mov
in
(bad)
pop
les
fidivr
mov
loope
call
stc
iret
jg
pop
loopne
sbb
mov
ror
(bad)
mov
ret
push
mov
adc
out
mov
jb
cmps
daa
inc
mov
pop
enter
mov
pop
retf
xor
sub
movs
inc
xor
aas
punpckldq
sbb
adc
xchg
cmc
imul
mov
mov
sub
mov
xchg
enter
mov
dec
arpl
sub
lods
test
in
addr16
mov
in
bound
jl
mov
dec
(bad)
lock
push
xor
adc
cmp
into
pop
jp
fistp
mov
div
retf
mov
pop
out
push
sub
jmp
push
retf
aad
outs
hlt
(bad)
aam
xor
cmp
stos
repz
sub
(bad)
(bad)
jp
(bad)
fmul
cmp
mov
fcmove
daa
sbb
pop
or
aas
into
std
pop
fsub
mov
std
jmp
aaa
out
out
iret
in
loope
mov
pop
cmp
addr16
push
inc
jmp
sbb
fs
(bad)
sub
and
dec
in
ja
push
mov
or
adc
adc
adc
pop
in
in
int
jnp
mov
loop
aaa
add
sbb
mov
cs
aam
mov
out
ror
lods
jge
jne
xchg
stc
jmp
gs
cmp
call
scas
mov
test
iret
xchg
jns
add
js
push
mul
mov
add
ins
div
sbb
or
popf
test
aas
repnz
repz
cmp
rcr
pop
or
sub
dec
idiv
mov
dec
cs
popf
jbe
std
es
or
push
pushf
adc
fs
iret
mov
jp
cld
push
push
out
mov
cli
ins
jecxz
mov
mov
jns
mov
jmp
cs
push
cmps
xchg
pop
loopne
mov
push
jae
ror
xor
inc
fcmovu
cmp
aad
lahf
inc
(bad)
rcl
push
jmp
inc
sub
out
push
jno
cmp
lods
movs
call
pop
iret
and
ret
cmp
enter
pop
ds
sub
scas
pop
mov
daa
inc
iret
aaa
and
test
push
xor
rol
jmp
cld
(bad)
fcom
push
mov
int3
jp
scas
jnp
mov
xchg
jbe
adc
mov
jecxz
ss
out
(bad)
adc
mov
ins
push
in
or
and
ss
test
mul
xor
loopne
test
cwde
shl
mov
(bad)
cmp
and
jecxz
jmp
or
xchg
push
dec
adc
js
not
sub
xchg
in
leave
inc
push
in
(bad)
cmp
neg
nop
adc
test
test
push
js
xchg
movs
(bad)
and
pop
add
mov
sub
repz
int3
fcomp
shl
clc
call
or
mov
cwde
arpl
xchg
mov
jecxz
fucomip
push
repnz
or
int
mov
aam
(bad)
repz
into
fprem
jg
cmp
inc
es
iret
div
stos
xor
cmc
in
inc
sti
and
imul
in
or
ss
ins
pop
popf
mov
mov
and
in
mov
pushf
push
inc
sar
ds
xchg
pushf
das
adc
mov
xor
xchg
push
jbe
cmps
call
leave
imul
xchg
dec
stos
iret
out
in
mov
jl
or
jns
jo
ss
xlat
shl
pop
test
ret
xchg
test
nop
inc
(bad)
cmps
xchg
fst
fisttp
or
push
enter
test
and
pop
xor
push
out
cs
movs
push
adc
adc
cmp
dec
inc
mov
call
loop
scas
and
jle
and
inc
add
adc
mov
sbb
mov
mov
shr
add
pop
push
push
and
inc
mov
sub
iret
mov
push
pop
movs
test
fwait
retf
mov
or
sbb
xlat
ret
gs
add
adc
inc
imul
and
or
inc
in
jmp
xor
adc
gs
mov
jp
xchg
pop
cmp
xchg
rol
lahf
imul
loop
stc
sbb
lea
sti
sbb
(bad)
stos
stos
clc
pop
jo
idiv
or
scas
and
test
int3
pop
add
inc
adc
retf
gs
adc
pop
cmp
pop
push
lds
mov
xchg
sbb
cmp
jg
pop
jecxz
loopne
cmps
jae
jg
adc
andnps
shl
jns
jo
iret
imul
std
jmp
sbb
les
test
js
xlat
mov
jno
sub
hlt
out
jmp
cmc
mov
movs
mov
sub
inc
test
sub
out
sub
dec
add
cmps
repnz
mov
mov
pop
add
ds
out
lea
inc
icebp
icebp
sbb
fadd
clc
repnz
jmp
push
xchg
in
xor
mov
ins
and
sub
movs
cmp
xor
mov
push
retf
mov
and
fstp
sbb
sub
push
xchg
dec
in
retf
mov
jno
mov
test
in
mov
adc
mov
sub
sub
es
push
fimul
jae
stos
push
xlat
popa
pop
cwde
popa
push
(bad)
cli
push
sti
stos
push
out
rol
mov
mov
cli
xchg
xchg
ret
(bad)
push
stos
stc
push
xchg
cmp
addr16
aad
cmp
xlat
call
fmul
xor
mov
aaa
test
(bad)
and
mov
into
or
or
dec
dec
call
ucomiss
push
mov
retf
jle
(bad)
cli
mov
push
and
xchg
pop
pusha
push
lock
int3
jae
push
xor
pop
pop
lods
jl
jo
out
mov
fs
rcr
addr16
test
clc
in
int3
xlat
xchg
and
aad
imul
xor
pop
test
push
in
outs
inc
movs
arpl
cli
inc
xchg
mov
mov
pop
sbb
xchg
inc
scas
ret
ja
xchg
mov
xor
(bad)
dec
in
add
dec
sub
ret
cwde
jmp
gs
bnd
xor
ret
in
(bad)
loope
xchg
idiv
xor
(bad)
iret
jmp
inc
xor
dec
sub
loop
or
dec
aam
pop
cmp
enter
mov
dec
jle
mov
sbb
movs
or
les
mov
int
clc
mov
adc
xor
xor
sbb
mov
jmp
mov
add
dec
(bad)
scas
inc
call
dec
push
enter
xchg
or
pop
inc
xor
mul
mov
les
mov
jmp
cmps
outs
sub
jne
stc
in
xchg
dec
cvtdq2ps
adc
int
jae
hlt
fistp
sub
loope
xlat
(bad)
(bad)
xchg
cld
sbb
cdq
adc
(bad)
(bad)
push
outs
sub
addr16
jecxz
pop
push
jl
(bad)
popf
rcl
inc
jl
cs
push
xor
mov
push
movs
sahf
enter
mov
xlat
mov
jno
scas
cmps
xor
pusha
iret
jecxz
xor
les
icebp
test
call
into
in
ret
fld
mov
add
sub
lods
dec
cli
inc
lds
pop
xlat
push
push
cmps
imul
shl
(bad)
loopne
mov
dec
cmp
ror
clc
or
mov
rcl
rol
xchg
sti
mov
xchg
mov
pop
aam
mov
add
or
dec
push
(bad)
icebp
scas
lods
jmp
adc
xor
into
and
sbb
mov
rcr
mov
add
ins
xchg
mov
jge
xor
hlt
aas
inc
pop
xchg
test
mov
and
cmp
inc
push
sbb
(bad)
xor
xchg
xchg
add
inc
ss
sbb
cmc
dec
jmp
xor
data16
and
jl
mov
adc
ror
idiv
add
mov
adc
mov
inc
test
or
inc
inc
sub
outs
out
enter
push
cmp
mov
xlat
sti
fistp
pop
fld
pusha
or
rcr
push
sahf
imul
pop
popf
iret
sub
cwde
mov
lds
or
dec
jmp
sub
(bad)
mov
mul
jg
or
lds
sar
dec
or
mov
lea
push
add
addr16
mov
scas
rcl
mov
pusha
pop
xor
iret
js
adc
mov
xchg
jno
inc
(bad)
xlat
sub
pop
xor
mov
pushf
scas
pushf
test
sti
push
aad
mov
lahf
test
popa
xchg
xchg
cmps
xchg
or
cmp
outs
push
cli
icebp
xor
stos
adc
pop
(bad)
jl
cwde
ss
pop
and
push
fdiv
mov
dec
sbb
mov
cmc
xor
xor
xchg
in
mov
and
lods
pop
adc
sbb
mov
push
jp
mov
out
add
cmp
out
pop
push
inc
(bad)
and
pop
inc
xchg
popf
sub
sub
rol
rcr
add
sti
ret
mov
mov
dec
and
mov
jbe
add
call
cld
clc
jns
outs
scas
or
nop
jp
pop
ret
jmp
and
fistp
daa
mov
lods
addr16
dec
xchg
add
stc
mov
mov
nop
mov
xchg
xlat
adc
mov
cmc
mov
mov
stc
movs
cmps
ins
pop
lock
repnz
mov
fadd
jmp
movs
cmp
add
pop
cdq
mov
retf
adc
fimul
jmp
sti
or
mov
sahf
cwde
sub
jne
bound
in
sub
push
int
jmp
jno
cmp
bound
add
mov
fs
pop
pop
loopne
imul
sub
mov
mov
fiadd
in
xchg
ins
pop
dec
adc
lds
inc
movs
jle
cmp
popa
rcl
jo
gs
stc
aam
add
ins
cwde
lock
lock
or
arpl
scas
fldcw
sbb
mov
xchg
fistp
mov
adc
movs
mov
outs
std
dec
sub
imul
push
jne
jbe
xchg
mov
push
push
mov
mov
cmp
(bad)
in
dec
add
and
test
pop
cld
push
ror
shr
pop
inc
xchg
mov
lea
stos
and
push
xor
push
cmp
pusha
mov
(bad)
jno
pusha
sahf
mov
loope
lock
(bad)
or
ror
rcr
scas
imul
loop
adc
jns
add
jo
loopne
call
imul
ja
cdq
sbb
push
inc
jl
pop
das
jecxz
push
mov
cdq
sar
mov
das
repz
repnz
and
les
jnp
or
pop
mov
push
test
mov
cmp
outs
xlat
test
push
xchg
xchg
mov
mov
pop
xchg
das
cmc
jno
stos
dec
scas
movs
dec
mov
retf
in
loope
loop
mov
mov
cmp
scas
jae
mov
fnstenv
and
cwde
inc
jl
adc
ss
jb
jle
xlat
xchg
jmp
movs
loopne
add
and
mov
mov
add
sub
mov
out
pop
lea
stc
stos
ret
(bad)
rol
xchg
imul
into
mov
pusha
and
shr
dec
sub
sbb
pushf
and
fstp
xor
pushf
jmp
jae
pop
ds
xchg
jb
mov
inc
(bad)
inc
(bad)
fild
mov
mul
into
cld
dec
out
xchg
jmp
pop
cli
sbb
imul
jns
enter
push
jg
stos
cmp
adc
shl
push
push
xor
push
ret
stos
inc
mov
enter
lods
adc
loope
jmp
sbb
repnz
push
test
ds
adc
in
mov
xor
shr
int3
or
movs
std
sub
mov
in
call
shr
pop
and
jo
sahf
ss
iret
push
cmp
(bad)
repnz
cmp
mov
jnp
inc
mov
adc
adc
in
retf
(bad)
sti
(bad)
jbe
leave
sub
inc
aam
mov
or
mov
les
shl
mov
or
fnstcw
pop
or
inc
push
les
test
(bad)
mov
pop
out
cmc
and
jbe
repz
adc
imul
mov
cli
shl
xor
ins
or
pop
mov
push
xchg
ret
(bad)
outs
bound
cmc
(bad)
and
fs
push
shl
dec
push
xor
dec
test
ja
bound
mov
in
sbb
repz
xor
mov
cmps
jg
xor
dec
dec
or
pop
sub
jb
xchg
sub
(bad)
rcl
inc
mov
gs
call
arpl
inc
cmps
cmp
imul
sbb
in
xor
enter
fwait
pop
add
fsubr
nop
les
nop
xor
int
fsub
inc
test
imul
ins
fbld
out
jecxz
test
sbb
in
mov
js
mov
lahf
cmp
add
ret
jae
mov
cs
ss
xor
inc
test
pusha
pop
pop
inc
and
ficom
fiadd
in
push
cmp
xchg
ret
inc
and
inc
xchg
lock
das
cmp
loope
push
jae
shl
call
shl
pop
test
pop
es
imul
nop
mov
mul
mov
ror
fisubr
dec
jmp
repnz
(bad)
cli
fstp
push
pop
outs
inc
cmp
dec
sbb
sar
mov
and
add
inc
adc
retf
mov
sub
mov
push
dec
mov
fisttp
div
dec
mov
inc
inc
pushf
aad
mov
lock
pop
popf
(bad)
lods
xor
ins
frndint
cmp
leave
out
addr16
inc
outs
xlat
aam
mov
dec
or
push
jmp
jnp
and
push
sar
cs
or
adc
arpl
data16
iret
sub
and
bound
imul
addr16
mov
mov
test
push
cmps
push
fcom
int3
mov
cld
adc
div
retf
sub
inc
movs
or
hlt
adc
aas
push
clc
mov
data16
shl
clc
sbb
or
push
mov
out
in
sub
mov
dec
add
jmp
jmp
stos
xchg
and
xchg
or
hlt
mov
and
inc
lods
push
sub
sub
in
jp
and
test
shr
(bad)
push
mov
(bad)
mov
dec
ss
call
inc
test
cmp
mov
std
mov
repnz
cld
sub
jbe
push
inc
pop
add
lods
fwait
push
or
mov
aad
push
mov
inc
test
fsub
je
or
fld
mov
add
mov
ins
int3
sbb
xchg
mov
ror
mov
push
retf
dec
out
or
ficom
xor
adc
retf
mov
test
arpl
jmp
mov
xor
adc
jne
mov
rol
and
mov
and
imul
xor
rcr
out
popf
mov
adc
loop
test
adc
lea
sub
mov
sbb
push
cmp
lods
jnp
pop
call
pop
test
cmp
scas
mov
jns
inc
test
mov
cmc
xchg
dec
inc
fild
shl
sbb
mov
sub
popa
je
cmps
add
sbb
in
xor
test
and
neg
test
ja
test
xchg
push
jle
xor
mov
lods
fcomp
loope
retf
call
call
mov
mov
jg
call
xor
test
xor
adc
scas
pushf
(bad)
push
push
in
mov
stos
ror
sub
jmp
jae
mov
outs
sbb
and
gs
loopne
sub
int3
xchg
iret
fdiv
pop
stos
inc
pop
pop
movs
lods
push
leave
mov
and
and
fiadd
clc
retf
outs
jno
push
test
adc
jbe
arpl
push
(bad)
sub
scas
jb
cli
loopne
xchg
dec
ficom
fisubr
ins
jmp
and
in
push
push
aam
adc
xchg
dec
mov
mov
jmp
sub
mov
xchg
push
xor
(bad)
in
cmp
mov
push
sub
xor
lods
mov
ds
js
mov
sbb
and
add
fild
xchg
es
mov
mov
fcom
lods
dec
sub
fistp
xor
cld
add
jp
push
mov
mov
aaa
aam
pop
jge
ds
ins
pop
cs
lea
mov
scas
lods
fwait
mov
add
mov
jmp
outs
fsub
mov
fmul
and
dec
dec
push
je
stc
or
adc
test
call
and
mov
(bad)
daa
mov
aas
nop
in
add
cmc
addr16
lds
in
sub
outs
cmp
and
adc
jmp
cmps
aaa
addps
in
mov
repz
js
jmp
mov
test
loope
jmp
gs
shl
mov
ds
es
adc
ficomp
sbb
cmps
push
fwait
inc
test
popa
push
or
es
add
int3
xchg
loope
mov
or
xor
xchg
or
add
mov
cdq
jle
cld
outs
mov
and
adc
xor
add
mov
cmp
arpl
test
xlat
repnz
test
jg
pushf
mov
mov
imul
push
cmc
and
jp
les
adc
out
ss
test
loop
sti
das
mov
pop
in
scas
jp
mov
mov
jmp
in
pop
dec
rcr
scas
xor
test
imul
movs
jo
loope
xor
cdq
jo
movs
mov
sub
pop
cs
call
adc
or
ins
pop
test
gs
cmp
dec
and
in
nop
jns
es
dec
mov
xor
mov
dec
ret
jecxz
lea
jb
(bad)
or
inc
mov
mov
fistp
mov
mov
add
mov
in
mov
fwait
mov
push
inc
outs
sub
or
dec
aad
pop
out
cs
jne
jmp
cmps
inc
add
sub
leave
jmp
cmp
xchg
in
add
(bad)
int3
xor
stos
int
mov
jo
test
mov
aad
push
icebp
jbe
push
push
dec
adc
cs
pop
jmp
aad
pop
nop
dec
push
stos
cmp
mov
mov
and
xor
add
sub
xchg
xchg
push
push
(bad)
xor
jmp
jge
mov
nop
mov
lahf
inc
dec
mov
cmc
push
test
cmp
push
rol
js
inc
pop
fwait
outs
(bad)
xchg
fidiv
(bad)
das
adc
mov
jg
xlat
jmp
inc
mov
xlat
out
xchg
dec
pusha
or
ds
daa
aaa
loopne
jne
call
push
call
addr16
ret
adc
fist
add
sbb
lea
jmp
add
xor
mov
shl
xchg
addr16
ins
jns
mov
shl
test
or
aaa
mov
iret
ins
fstp
rol
xor
daa
(bad)
retf
jmp
mov
fldcw
cmc
add
fisub
call
and
dec
inc
ror
ret
cmp
or
pop
aas
scas
dec
jae
div
adc
pop
jecxz
xlat
mov
xchg
arpl
mov
xchg
nop
loop
and
fisub
loopne
add
repnz
ins
push
xor
jnp
fisub
mov
mov
inc
mov
add
xchg
xor
adc
or
leave
int
ret
inc
pop
xchg
(bad)
enter
dec
pop
dec
movs
add
jb
sbb
gs
out
jecxz
outs
inc
test
pusha
(bad)
loop
and
clc
xchg
cmp
pop
(bad)
cmp
dec
repnz
sub
imul
add
mov
lahf
imul
shl
cdq
jnp
push
retf
dec
jle
out
mov
cld
sbb
scas
lahf
and
mov
outs
fld
adc
ins
xor
xor
sahf
int
fsubr
loope
(bad)
pop
inc
cmp
data16
cmp
or
dec
ror
jns
sti
shr
jle
test
js
inc
jecxz
cmps
xor
(bad)
xor
inc
das
jne
cmc
mov
and
(bad)
and
adc
div
inc
lods
shl
sub
int
inc
xchg
mov
xchg
mov
sbb
out
mov
mov
and
xor
cmp
fbstp
dec
stos
imul
cmp
mov
mov
ja
loop
out
pshufw
push
data16
inc
adc
pop
lods
pop
inc
loope
loop
mov
xor
sub
(bad)
es
cld
in
fild
cs
push
pop
pop
sbb
mov
or
fwait
dec
push
shl
sbb
icebp
std
sub
stos
mov
pop
xor
jae
adc
pop
out
data16
fprem1
test
mov
inc
shl
add
outs
push
inc
shl
xor
cmc
lahf
mov
push
(bad)
jp
movs
and
cmp
test
imul
push
jmp
iret
jp
inc
mov
repz
pop
sbb
jmp
pop
or
mov
or
in
pop
cmps
mov
dec
hlt
in
mov
push
popa
mov
and
adc
sahf
cmps
xor
lds
cmp
ret
add
xor
cmc
psubw
aas
fld
or
mov
sbb
retf
mov
es
dec
cmc
mov
xor
movs
adc
popf
mov
cmps
jne
jge
xchg
(bad)
idiv
sub
cmp
push
and
or
inc
mov
test
popa
frstor
or
scas
retf
das
loope
and
cmp
or
xchg
popf
aam
jns
test
xchg
cmp
mov
inc
(bad)
sti
mov
adc
pop
sbb
dec
push
in
popf
xlat
cmps
adc
xchg
daa
or
inc
sbb
pop
retf
mov
and
pop
rcl
cmp
fdivr
adc
daa
inc
add
cdq
jbe
icebp
jae
mov
add
lods
shl
addr16
or
pop
sub
pop
xor
(bad)
mov
add
fsubr
mov
push
jmp
test
cld
imul
mov
stos
in
fwait
fs
pop
test
pusha
mov
mov
test
popf
add
pushf
push
cmp
gs
mov
xor
dec
adc
pop
jg
xchg
outs
xchg
sub
shr
push
mov
mov
xor
pop
mov
sbb
(bad)
loop
or
mov
loopne
mov
sub
mov
mov
xchg
and
scas
cdq
movs
lds
fld
out
icebp
mov
xchg
cwde
popa
dec
push
loop
ins
mov
pop
fwait
sti
(bad)
hlt
movs
shr
inc
jnp
es
cmp
push
cmp
rcl
pusha
mov
pop
bound
adc
sbb
adc
add
mov
mov
loopne
mov
enter
mov
repnz
mov
add
pop
ss
out
xor
add
and
pop
fstp
jp
jmp
shl
cmp
or
(bad)
clc
xchg
enter
jbe
call
dec
push
scas
in
imul
pusha
sbb
mov
mov
sbb
icebp
mov
(bad)
popf
mov
pop
xchg
or
dec
pop
dec
lea
jnp
gs
fs
or
mov
jae
cmp
pop
popf
and
xchg
push
sbb
cmc
mov
int3
adc
aad
sbb
push
inc
push
ds
mov
mov
add
call
fsub
adc
aas
push
lds
pop
in
jmp
push
jle
sar
imul
cmps
sbb
fnsave
dec
stos
mov
add
push
cmp
rcr
pop
push
(bad)
push
push
fcom
pop
xchg
sub
jne
lds
sbb
fdivr
adc
or
pop
dec
push
xor
mov
setl
test
in
adc
test
xchg
sbb
mov
pop
loop
es
push
and
inc
fsubr
imul
jecxz
jmp
inc
mov
retf
loopne
jg
outs
mov
push
xchg
adc
inc
and
cld
clc
jae
xor
lea
mov
mov
mov
adc
pop
std
dec
out
pop
push
in
or
push
cld
adc
outs
inc
mov
jb
pusha
sbb
adc
push
pop
jg
jmp
sub
mov
jnp
js
enter
iret
or
sbb
ror
call
xlat
or
out
movs
call
cwde
and
enter
or
imul
mov
mov
sub
push
and
mov
xor
inc
pop
cmp
push
cmp
mov
jecxz
les
ror
mov
retf
mov
jno
ret
iret
test
inc
sar
dec
es
scas
mov
pop
or
dec
gs
loope
fsubr
neg
loop
fwait
or
add
js
mov
ror
test
ins
jmp
jb
pop
push
push
iret
(bad)
lods
dec
push
pop
lods
cmps
pop
xor
mov
add
cli
hlt
std
cmp
add
and
add
xchg
lds
cs
adc
add
cwde
inc
mov
mov
in
add
cmp
jb
pusha
pop
(bad)
push
data16
inc
leave
cmp
sbb
imul
std
mov
imul
addr16
jle
mov
rol
xor
mov
xchg
cmc
and
xchg
push
pushf
mov
pop
xchg
sub
test
mov
adc
stos
xor
push
mov
push
in
sbb
sub
xchg
popa
aam
test
or
movs
shr
inc
lock
fld
ret
xchg
or
and
pop
aaa
(bad)
xchg
rcl
test
pop
je
(bad)
jnp
imul
jne
sbb
das
mov
inc
pop
lock
sbb
pop
int
call
jne
imul
xchg
dec
mov
loope
dec
adc
repnz
mov
push
(bad)
mov
jo
mov
mov
cmp
iret
out
adc
ja
pop
stos
dec
pop
(bad)
lods
cdq
mov
xor
mov
dec
hlt
std
and
mov
je
retf
cmp
push
sub
pop
leave
shr
aas
retf
mov
retf
mov
sahf
mov
sub
jns
and
pop
loopne
push
cwde
jnp
xchg
jb
cmp
leave
push
cmp
stos
xchg
mov
stc
jmp
loopne
imul
pop
sub
jl
(bad)
mov
pop
enter
inc
sti
cwde
add
fwait
adc
arpl
sbb
xchg
in
xchg
push
mov
jo
cmc
sbb
aaa
fld
xchg
mov
push
stc
or
or
(bad)
aaa
pop
out
hlt
shl
adc
aad
pushf
sbb
ins
aaa
inc
xchg
mov
mov
xor
mov
rcl
fsubr
repz
mov
sub
out
retf
(bad)
retf
(bad)
lock
aaa
shr
xlat
daa
adc
in
add
and
cmps
push
movs
ja
sub
retf
out
in
cli
fwait
mov
push
jge
add
cmp
and
jmp
sahf
cmps
or
outs
ds
mov
not
(bad)
aas
int
mov
stc
in
and
(bad)
sti
cmps
jno
shr
das
push
mov
or
sbb
adc
ins
mov
xchg
push
sti
cmp
std
mov
aas
in
push
sbb
fsub
inc
xchg
add
sub
jl
push
aaa
pop
add
retf
or
loope
aad
inc
scas
mov
ins
into
mulps
push
repnz
or
sbb
dec
js
nop
sub
push
aad
xlat
test
mov
bound
mov
int3
call
dec
test
mov
xor
inc
sub
and
and
lahf
mov
adc
jp
push
jno
das
inc
add
cmp
mov
pop
and
and
mov
cmp
adc
and
dec
pop
(bad)
in
cdq
scas
pop
mov
pop
idiv
cwde
hlt
push
add
lea
dec
add
fwait
adc
or
or
xchg
add
dec
xor
mov
popa
fwait
mov
mov
pop
outs
jecxz
xor
sar
cmps
iret
loope
mov
xchg
dec
pop
jne
and
arpl
out
ins
push
sub
sub
outs
(bad)
dec
push
sub
in
scas
jns
jne
or
xor
fs
inc
stos
lds
xchg
icebp
loopne
mov
lahf
ins
sahf
popf
das
mov
sbb
mov
into
cmc
das
inc
mov
fnstsw
scas
jne
mov
jae
in
pushf
popa
cmp
cli
std
xlat
(bad)
mov
dec
jo
pop
std
outs
xchg
and
adc
xchg
or
lds
xor
clc
xor
in
daa
outs
in
pop
outs
push
mov
dec
pop
repnz
lods
cmp
sahf
pop
cmp
jne
das
leave
mov
imul
push
sub
jge
ret
cmps
and
xor
ss
int
test
sbb
sbb
je
inc
mov
jns
mov
mov
xchg
rol
xor
jl
mov
enter
mov
retf
jge
sbb
pop
mov
in
(bad)
cmps
test
and
and
mov
ficom
push
mov
cdq
movs
xor
xchg
dec
je
int3
push
shl
sub
into
cmps
dec
sub
push
xor
stc
pusha
scas
pop
lea
cmc
shr
push
div
cmp
sbb
or
test
mov
popf
inc
movs
test
xchg
cmp
pop
xor
push
add
das
imul
loop
scas
mov
mov
in
sbb
iret
daa
sub
ss
add
cli
inc
stos
push
push
rol
xchg
add
popf
jne
data16
mov
sub
fmul
hlt
ficomp
add
lods
or
loopne
sub
out
aaa
imul
jge
jge
sbb
cmp
leave
neg
or
into
xchg
mov
dec
ins
sub
mov
push
dec
sub
xor
xor
xchg
cmp
addr16
cwde
fcomp
mov
in
xchg
sbb
mov
mov
jle
mov
aad
out
mov
mov
jns
pusha
mov
or
xchg
shl
das
jno
je
pop
jb
push
test
pop
or
shr
and
jae
and
add
mov
(bad)
hlt
add
cdq
pushf
mov
jmp
push
in
sub
cwde
enter
addr16
xlat
adc
push
outs
retf
popa
fdiv
or
je
cdq
mov
js
or
xchg
ins
mov
pop
into
add
test
sahf
push
inc
cld
out
mov
bound
inc
loope
iret
mov
jmp
cmp
or
fimul
adc
sar
stc
sbb
(bad)
and
add
pop
popf
pop
daa
cmp
mov
mov
leave
das
pop
or
and
pmaxsw
loop
int3
xchg
sub
addr16
mov
(bad)
movs
pop
add
mov
dec
pop
xor
out
call
push
aas
(bad)
xor
movs
adc
aad
mov
or
loope
mov
rcl
das
fistp
cs
mov
mov
dec
(bad)
cli
or
xchg
pop
jecxz
sbb
push
pop
cmps
jmp
jmp
icebp
push
inc
xchg
jmp
mov
mov
test
call
(bad)
xchg
cmp
add
mov
outs
les
push
hlt
push
mov
adc
icebp
stos
in
inc
dec
das
aam
(bad)
cmp
sbb
sbb
mov
and
rol
jmp
add
lahf
push
sub
sti
inc
cwde
mov
fcom
int3
sub
sbb
mov
scas
test
inc
pop
adc
jmp
test
call
or
ins
mov
(bad)
in
cwde
(bad)
jmp
leave
sub
sub
or
jo
sbb
ror
pushf
mov
popf
pop
cmp
into
pop
cs
cmp
stos
sbb
imul
fisubr
addr16
mov
aaa
push
sbb
xlat
hlt
jmp
aas
mov
dec
sub
mov
xor
pop
add
rep
(bad)
call
fsub
shl
jbe
add
adc
push
mov
xor
and
dec
cld
add
lods
aas
nop
jg
mov
inc
or
xchg
pushf
dec
in
clc
mov
aam
add
sbb
mov
add
imul
jecxz
nop
jbe
push
xchg
sete
shl
ss
mov
mov
shl
xor
aad
xchg
adc
inc
loope
call
xchg
(bad)
js
popf
mov
push
jns
pushf
mov
in
pusha
mov
push
jbe
aaa
push
loope
cmps
test
adc
or
mov
inc
mov
xlat
xchg
ficomp
fmul
call
and
pop
inc
adc
pop
cmp
inc
clc
je
jne
push
mov
push
mov
rep
in
mov
int
jecxz
js
mov
push
addr16
test
ret
xor
(bad)
(bad)
jne
(bad)
out
aas
dec
adc
jae
loop
jb
imul
data16
stc
push
or
retf
xchg
mov
not
cmp
enter
mov
pusha
in
mov
pop
dec
add
sbb
adc
and
and
gs
mov
mov
jns
(bad)
fsub
test
outs
ins
dec
dec
lods
and
(bad)
daa
add
adc
fist
sub
aas
jg
movs
push
cmp
cdq
and
push
dec
lods
xchg
sbb
aas
dec
fild
or
cld
inc
ss
sub
add
mov
ins
idiv
mov
fldenv
add
push
mov
into
test
loop
addr16
sbb
outs
sub
mov
mov
mov
cmp
pop
mov
adc
or
and
les
clc
pop
addr16
je
call
mov
fisub
mov
in
das
int3
pop
jne
push
sbb
cmp
mov
scas
cmp
pop
fsub
jge
sahf
sbb
test
leave
outs
jmp
inc
and
cmp
nop
cwde
inc
jo
adc
in
rcr
dec
cs
leave
inc
mov
ret
push
gs
xchg
add
and
popf
jle
in
inc
mov
in
in
pop
and
sub
cmp
dec
push
popa
loop
mov
pop
inc
sub
xchg
sbb
jne
cmp
ror
add
jb
in
icebp
aas
sbb
sub
sti
daa
in
xor
jp
mov
push
faddp
xor
sbb
call
jge
adc
xchg
pop
dec
ja
jle
jb
mov
sbb
ja
in
popf
rcr
dec
mov
adc
dec
xor
push
les
inc
mov
push
les
pop
fptan
fdivr
int3
addr16
xchg
shl
jle
clc
out
pop
call
inc
xchg
inc
pop
scas
lds
sub
fcom
out
cmps
or
mov
push
mov
(bad)
test
imul
in
out
xor
xor
in
push
arpl
cli
xchg
mov
pusha
mov
adc
jmp
dec
sbb
cli
(bad)
mov
pop
push
stos
cmc
push
arpl
test
jl
lock
(bad)
push
adc
jno
mov
or
fild
jp
adc
(bad)
stos
add
js
popa
xchg
bound
mov
dec
push
push
ret
mov
fadd
(bad)
jb
test
les
mov
fcomp
leave
mov
cld
push
aam
aad
mov
jno
pop
dec
adc
out
xor
stc
shl
cwde
mov
adc
inc
pop
xchg
xor
cwde
add
mov
out
sar
clts
out
dec
test
shr
rcl
pop
dec
sub
rol
xchg
ins
fs
stos
add
adc
mov
outs
and
out
iret
pop
push
ins
push
in
repz
mov
jne
mov
adc
(bad)
sub
shl
inc
sub
jns
ja
out
and
shl
pop
(bad)
int3
xchg
xor
mov
ror
pop
cmps
xchg
cdq
adc
cld
jae
inc
das
sar
pop
(bad)
test
daa
ins
cmp
pop
inc
jno
sti
in
cmp
into
jle
cmp
(bad)
gs
rol
lock
or
xlat
out
xchg
push
xor
fmul
in
js
dec
and
cwde
cwde
sub
pop
data16
adc
jg
dec
mov
xchg
das
lock
dec
xchg
adc
into
rol
frstor
push
push
inc
push
sub
mov
cs
test
fbstp
push
int3
cmp
out
(bad)
jecxz
in
mov
popa
js
jg
stos
fist
cmps
loop
(bad)
dec
xor
sbb
(bad)
dec
xor
stos
sbb
arpl
stc
inc
movs
cmp
adc
xor
jmp
pop
mov
ror
jmp
(bad)
sahf
(bad)
ins
cmp
sti
sbb
mov
mov
sub
ja
inc
ins
int3
mov
shl
sub
push
xchg
ins
and
lahf
enter
pop
or
dec
sar
jnp
jbe
bound
dec
and
sub
fdiv
dec
jo
addr16
xor
ret
mov
repnz
test
loop
adc
jno
clc
pop
test
leave
fs
and
inc
clc
scas
push
fdivr
shl
loope
jp
push
push
(bad)
(bad)
inc
scas
stos
and
mov
pop
rcl
push
ins
mov
ja
mov
xor
push
and
das
fwait
repnz
sbb
js
and
xchg
fs
cmp
jmp
rcr
inc
adc
cmps
imul
push
and
leave
or
xchg
or
imul
mov
aam
add
jge
mov
or
imul
or
sbb
mov
lea
test
jns
mov
add
std
loop
inc
push
ds
(bad)
retf
mov
(bad)
stos
mov
push
adc
pop
aam
pop
test
cvttps2pi
ss
mov
jb
mov
pop
or
jnp
inc
and
sahf
mov
loopne
push
and
xlat
scas
push
push
adc
imul
(bad)
jmp
cmp
xchg
hlt
das
lock
cmc
push
jecxz
add
inc
mov
mov
in
inc
mov
xchg
into
dec
sbb
ficom
test
leave
adc
cmp
mov
test
or
out
inc
mov
inc
or
aas
aad
call
push
out
dec
inc
xchg
stos
aam
jns
mov
fcomp
xlat
aad
adc
pushf
jp
std
js
pop
adc
cmp
cld
in
mov
mov
xchg
dec
arpl
les
xor
ffreep
(bad)
cld
inc
jmp
test
div
cmp
aaa
xchg
cmp
test
push
fbstp
xlat
mov
or
adc
xor
out
fwait
xor
inc
(bad)
mov
push
dec
mov
cwde
gs
scas
inc
(bad)
neg
jle
mov
dec
shl
not
aaa
jecxz
movs
sbb
and
jno
mov
pushf
sbb
push
push
(bad)
sub
imul
add
push
int
sub
pop
mov
data16
les
in
sar
idiv
push
fiadd
stos
stos
imul
iret
test
fistp
daa
js
icebp
test
mov
jmp
std
in
cdq
aad
sbb
push
and
ja
cld
aas
cmp
mov
jbe
push
xchg
ins
jle
and
loope
fwait
stos
mov
imul
iret
mov
inc
xchg
or
inc
xchg
mov
rcr
cli
pusha
lahf
dec
scas
out
xor
cmp
enter
iret
push
les
hlt
xor
sub
mul
cmps
outs
and
inc
pop
adc
cs
pop
je
sar
test
dec
push
imul
std
ror
dec
enter
fnstsw
mov
gs
shr
xchg
ins
jmp
mov
shl
cwde
mov
add
clc
test
ficomp
push
dec
fisubr
xchg
pop
ret
ins
jne
movs
mov
sbb
push
push
dec
or
xchg
mov
or
aaa
push
mov
mov
out
imul
xchg
push
addr16
jmp
jge
enter
in
call
add
lds
xchg
xchg
test
out
add
cwde
sbb
mov
jnp
sbb
mov
mov
lds
jl
push
xchg
pop
aas
out
shl
stos
repnz
pop
arpl
sbb
add
lock
push
jae
pop
ins
xchg
cmp
call
call
pop
data16
jmp
mov
enter
push
xor
outs
push
push
jnp
add
or
ret
iret
mov
mov
out
cmp
bound
rcl
movs
xchg
(bad)
fisttp
inc
dec
fwait
mov
loopne
inc
mov
pop
js
cli
sub
out
pushf
addr16
cld
add
xchg
retf
sbb
adc
adc
dec
pop
adc
add
or
aaa
dec
pop
popa
shl
(bad)
dec
mov
or
movs
xchg
shl
jns
cmp
(bad)
clc
fsubr
aaa
xchg
add
pop
loopne
ss
mov
push
jle
mov
scas
xchg
(bad)
(bad)
or
or
adc
outs
dec
mov
inc
rcr
jae
sbb
jle
adc
mov
or
inc
mov
sbb
mov
jmp
dec
sub
aaa
sbb
mov
mov
in
int3
shr
andnps
iret
ins
sub
mul
jle
inc
mov
cwde
addr16
mov
xor
mov
xchg
adc
jp
inc
xor
(bad)
repnz
loope
pop
mov
jge
adc
cli
loopne
dec
ds
out
pop
pop
movs
sbb
imul
jecxz
jle
in
jns
xlat
and
jbe
or
xchg
mov
stc
adc
cli
pop
add
dec
sub
hlt
mov
jg
js
ja
jp
jnp
mov
aad
lock
movs
or
aad
pop
cmp
gs
loope
rol
or
jecxz
push
jge
hlt
cmp
nop
cmps
into
sahf
jle
ret
pop
ss
fucomp
ins
retf
out
push
or
adc
bound
push
repz
inc
aaa
mov
lock
jg
mov
pusha
jno
icebp
shr
xor
mov
dec
mov
sub
mov
shl
arpl
mov
mov
push
mov
inc
loopne
out
add
out
bnd
fst
sar
sbb
nop
adc
mov
test
dec
jmp
int
add
pop
mov
aaa
(bad)
arpl
mov
xlat
xchg
je
cmp
push
jmp
(bad)
out
push
adc
dec
sbb
clc
(bad)
pushf
cmp
aad
xor
xor
fldl2t
mov
or
(bad)
js
xchg
in
dec
xchg
lea
xchg
mov
fstp
icebp
push
hlt
lods
out
lock
cli
call
xchg
int
popa
push
jl
mov
mov
xchg
jmp
dec
out
push
xchg
mov
push
int
shl
jmp
(bad)
retf
(bad)
adc
add
lock
js
pop
pop
ins
add
das
into
add
mov
or
sbb
inc
ins
fwait
dec
or
sbb
push
aam
arpl
les
mov
jmp
(bad)
fldenv
jecxz
(bad)
out
fadd
dec
(bad)
jmp
jl
add
lfs
xchg
inc
add
js
pop
or
and
mov
clc
nop
adc
mov
aad
sbb
lahf
fcmovne
enter
jmp
add
dec
xchg
in
fs
popa
ret
and
push
in
xchg
ja
movs
jae
push
rcr
push
test
je
xor
lahf
push
add
ins
mov
jge
ret
movs
cmp
dec
call
sbb
mov
dec
inc
sub
pop
neg
mov
js
cmps
adc
and
test
fld
sub
push
ss
shl
pop
stc
in
sub
cmp
scas
sub
adc
icebp
cmp
inc
dec
(bad)
repnz
dec
call
add
cmp
mov
sbb
pop
cmps
or
and
lahf
cdq
add
add
xchg
ret
pop
pusha
mov
bound
jae
(bad)
arpl
jge
cwde
dec
jae
and
repz
dec
xor
ret
cs
jmp
sbb
sub
jmp
dec
cmp
dec
fstp
cmp
xor
jo
jne
inc
and
xor
jmp
add
pop
outs
xor
jnp
mov
sub
or
fdivr
or
imul
xchg
or
jg
int
jmp
inc
mov
icebp
adc
jo
cmps
in
or
push
cmc
xchg
mov
adc
add
adc
or
mov
cmp
fs
(bad)
inc
ins
xor
xchg
xor
cld
mov
into
pop
ja
jmp
and
and
cs
out
dec
sub
inc
shl
enter
pushf
imul
iret
in
es
or
sub
sbb
add
mov
in
add
aam
(bad)
push
sub
sbb
fdiv
shr
clc
bound
leave
retf
fbld
out
xchg
jp
jnp
pop
and
ja
xlat
cli
mov
(bad)
outs
adc
jp
or
outs
std
fmul
pushf
idiv
inc
jmp
lds
xchg
(bad)
fsub
ja
mov
xchg
imul
or
ret
aaa
or
call
imul
pop
mov
imul
push
aad
test
jns
cmp
ja
add
pop
ds
push
sub
lods
aad
dec
inc
lahf
xor
push
nop
ret
(bad)
jns
shl
test
rcr
xor
ficomp
inc
dec
aam
and
and
ficomp
aam
push
retf
dec
loope
leave
lahf
or
iret
cmps
add
sbb
mov
daa
shl
mov
loope
rcl
xchg
xor
clc
xchg
out
mov
xor
js
lds
in
fwait
xchg
(bad)
cwde
jle
dec
jl
cmp
xor
cmp
jb
jge
pop
jmp
pop
sbb
sub
push
stos
mov
push
outs
aas
dec
mov
or
scas
mov
std
das
movs
jle
push
xchg
out
mov
jmp
xchg
or
movs
(bad)
xchg
mov
add
and
or
cmp
icebp
fcom
fcomip
in
cld
and
add
mov
sbb
inc
lods
inc
dec
inc
push
jbe
jnp
idiv
idiv
inc
sbb
xor
fs
bound
xor
cmps
mov
or
rcr
xchg
mov
mov
cmp
push
sub
sbb
pop
pusha
jl
jns
(bad)
inc
leave
push
fdivr
xor
inc
dec
add
cmp
dec
cmc
adc
inc
ss
cmp
fstp
mov
or
pop
jne
sbb
mov
cs
inc
sub
ss
lds
mov
and
push
daa
ss
iret
sub
iret
sub
cmp
jbe
sar
mov
das
fidivr
and
out
adc
test
popa
ds
adc
inc
and
lea
je
lds
std
sti
in
jecxz
lahf
xor
jecxz
push
pop
ins
cmc
(bad)
pop
push
mov
cmp
sub
xchg
neg
outs
jbe
cmp
imul
sub
imul
mov
push
mov
fdivr
shr
dec
mov
repz
fist
jle
xlat
mov
add
cmp
in
mov
stc
xchg
mov
xor
into
or
cmp
dec
jecxz
jmp
sub
ins
sub
dec
jmp
loop
mov
fnstenv
xor
repz
out
push
mov
test
jno
mov
xor
ret
(bad)
adc
clc
ja
cmp
popf
out
or
dec
add
daa
mov
and
pop
xor
outs
mov
pushf
mov
shl
repnz
lods
add
retf
mov
nop
inc
push
loop
cmp
mov
mov
or
arpl
call
dec
add
cli
xchg
and
sub
test
and
mov
push
xor
jmp
cmp
xchg
xor
push
pop
sbb
push
mov
cmp
inc
inc
xchg
out
mov
loop
cmps
sti
jno
add
mov
xor
fnsave
pop
(bad)
mov
sbb
je
popa
mov
addr16
jl
cwde
(bad)
jo
ret
jno
and
add
xlat
mov
pushf
daa
sbb
div
mov
neg
dec
pop
adc
xchg
fnstenv
cmp
sub
jl
jge
ret
pop
and
dec
add
js
sub
scas
inc
std
scas
push
cs
rcr
jmp
ret
mov
xchg
xchg
ss
sub
jg
or
cmp
popf
jl
mov
popf
xchg
cmps
sub
das
push
add
push
sub
in
sbb
xor
push
inc
adc
add
sbb
sub
repnz
inc
add
mov
out
mov
int
add
xchg
(bad)
fucomp
lock
inc
jg
or
jno
or
hlt
stc
push
rol
mov
mov
aaa
cld
push
mov
jns
mov
sub
ror
cmc
mov
fcomp
ds
pop
popf
cmps
inc
or
dec
mov
inc
xor
and
mov
add
dec
mov
lock
pop
imul
mov
dec
pop
(bad)
gs
mov
data16
mov
call
xchg
outs
test
je
fs
sub
push
xchg
pop
mov
int
jmp
sbb
jp
pop
or
jge
inc
push
pop
jecxz
sbb
jmp
pop
push
xchg
cs
shr
dec
cmp
ds
xchg
scas
sbb
stc
inc
nop
xor
and
enter
sub
fs
xchg
mov
out
dec
stos
movs
rol
shl
cs
call
adc
mov
mov
mov
add
or
ret
cdq
add
retf
add
fadd
add
lds
mov
mov
out
jae
call
jbe
pushf
retf
jnp
mov
pop
imul
mov
scas
jne
sbb
jge
test
psubd
call
xchg
mov
pop
ds
add
push
lock
dec
pop
push
jl
adc
addr16
loop
or
test
call
aam
inc
sub
mul
dec
ds
cmps
stc
mov
das
xchg
jp
or
bound
mov
inc
dec
cmc
data16
ja
mov
call
sub
icebp
rcl
and
dec
sti
outs
push
pop
stos
fst
aad
imul
sbb
test
hlt
xlat
ret
(bad)
mov
sub
push
movs
pop
sub
in
into
sub
test
sub
cmp
rcr
ret
or
add
sbb
pop
ds
mov
jle
jmp
mov
div
lods
sbb
lods
push
mov
idiv
js
cwde
or
cdq
jl
sub
cmp
mov
adc
push
es
and
jno
ror
inc
sub
xchg
sti
xor
xchg
push
push
mov
push
jmp
rcl
cs
jg
mov
shr
icebp
bound
xor
push
nop
inc
sub
or
lods
mov
scas
fs
inc
sti
dec
sbb
adc
push
cmp
pop
dec
and
shr
pop
inc
(bad)
sub
nop
sub
(bad)
fld
cdq
je
popa
mov
pop
sub
inc
fist
pop
test
rol
in
pop
bound
or
xchg
(bad)
retf
adc
inc
inc
rcl
rol
call
ja
adc
loop
jne
sti
push
out
stos
xchg
mov
fild
mov
sbb
(bad)
daa
xor
not
pop
push
pop
push
and
(bad)
sbb
ja
aam
jo
les
jg
fisub
mov
sti
push
out
push
or
hlt
push
jge
mov
xor
iret
pushf
push
push
sbb
mov
cmpxchg
mov
push
cmp
pop
xor
mov
fnsave
mov
inc
icebp
jne
inc
jo
cmc
mov
ins
xchg
mov
jp
cmp
sub
int3
jo
ror
es
pop
es
adc
or
retf
popa
push
dec
push
cmps
jp
sbb
xor
push
and
aam
cmp
ror
adc
rcl
push
sub
xlat
push
pop
ret
nop
adc
jnp
sub
(bad)
leave
(bad)
xchg
mov
arpl
lahf
mov
loopne
mov
clc
xlat
inc
shl
sbb
retf
pusha
cld
add
retf
mov
dec
icebp
fnsave
push
adc
test
and
adc
push
inc
add
pop
cli
push
inc
loope
(bad)
stos
dec
adc
pop
lahf
loopne
pop
in
test
cmp
push
mov
scas
fdiv
cmp
fdivr
sbb
fst
lods
loop
push
stos
das
les
add
push
mov
adc
sti
(bad)
ins
sub
fs
ret
into
cmp
stos
pop
test
dec
dec
call
jmp
cs
and
or
xchg
ret
call
in
pop
lock
popf
jno
repz
retf
pop
xchg
jb
out
sar
out
retf
dec
scas
gs
movs
mov
xchg
and
mov
push
sahf
mov
cmp
in
cmp
pop
scas
fwait
push
pop
out
jp
and
jge
mul
test
or
inc
add
ja
cs
jmp
in
(bad)
inc
xor
or
mov
pop
jmp
inc
mov
push
pop
mov
add
or
ret
or
sub
mov
or
xor
les
movs
cs
xor
imul
gs
or
push
ja
scas
xchg
jecxz
ss
jae
or
jb
loope
dec
adc
mov
push
add
xchg
cmps
ja
test
mov
sbb
cli
lahf
ret
add
mov
push
arpl
mov
sub
scas
ds
aaa
inc
fisttp
jb
addr16
xchg
es
gs
ret
fld
dec
jnp
inc
adc
jnp
lea
lahf
mov
fidivr
dec
out
(bad)
fcom
mov
sub
pop
arpl
mov
ss
mov
outs
pop
mov
imul
cmps
and
les
(bad)
iret
cwde
scas
aad
call
mov
cs
test
stos
inc
mov
mov
test
jmp
es
cmp
sub
jns
inc
or
gs
movs
xor
push
loope
inc
call
std
push
push
retf
mov
inc
loop
sbb
in
test
xchg
lods
int
lock
jbe
shl
xchg
dec
jnp
pop
dec
mov
enter
shr
cmp
xor
and
shr
stos
or
pop
data16
mov
jge
dec
nop
mov
mov
mov
sbb
mov
popa
ins
aad
scas
js
rcr
xchg
push
adc
int3
ss
push
push
pop
mov
sub
inc
mov
jbe
and
(bad)
das
add
push
mov
mov
rcl
xor
jge
xor
add
bound
sub
(bad)
adc
iret
dec
dec
pop
arpl
sbb
repnz
test
call
(bad)
stc
jns
hlt
popa
cmc
jmp
xlat
movs
dec
aam
xor
stos
mov
xchg
xlat
mov
xchg
adc
ins
sbb
xlat
mov
xchg
jp
std
loope
sti
(bad)
mov
push
aam
sbb
imul
jbe
aas
add
or
sbb
js
cmps
scas
sub
jecxz
(bad)
loopne
mov
ret
sar
into
mov
mul
and
mov
(bad)
xor
ins
retf
jbe
cmp
sbb
inc
rol
dec
popf
adc
pop
les
fsubr
movs
arpl
jo
adc
(bad)
fcmovnbe
mov
aam
scas
add
in
fldcw
enter
or
and
icebp
push
pop
test
xchg
retf
icebp
or
aam
in
aam
xor
mov
adc
shl
adc
fdiv
dec
jbe
imul
mov
dec
sbb
cmc
aad
pop
xchg
or
sub
xor
cmps
gs
inc
loopne
jns
leave
mov
inc
dec
xchg
out
scas
pop
dec
(bad)
push
ror
sbb
stos
test
mov
loope
mov
dec
xor
pop
aas
and
dec
movs
(bad)
mov
xor
jge
stos
sbb
fstp
aaa
out
jne
cmp
arpl
bnd
mov
out
mov
daa
or
xor
into
out
test
loopne
imul
dec
shr
mov
fwait
xchg
in
sub
ja
push
add
jo
mov
(bad)
in
jmp
icebp
int3
pop
or
add
cmp
in
loope
out
xor
aad
(bad)
mov
sahf
je
rol
aas
je
fisttp
mov
fst
sar
mov
shr
push
pop
cmp
and
xor
fs
or
xchg
xchg
clc
xor
mov
ds
fst
jae
cmp
jmp
dec
and
and
cld
and
test
xor
(bad)
xlat
std
add
sbb
mov
dec
xchg
sbb
dec
pushf
and
pop
les
jne
div
neg
mov
outs
out
push
fdivr
mov
ret
sub
or
xchg
xor
das
jbe
repnz
cmp
arpl
jl
jne
(bad)
jecxz
js
mov
dec
pop
mov
mov
sub
jne
sar
outs
lea
cmp
jae
xchg
pop
ins
movs
mov
dec
out
repnz
ret
sbb
(bad)
jge
sbb
sbb
mov
or
(bad)
rcr
(bad)
lods
les
or
movs
lods
cmp
fld
sahf
mov
jb
mov
cdq
outs
retf
clc
data16
and
or
push
add
ss
add
jmp
rcr
loop
data16
inc
dec
cli
mov
(bad)
(bad)
ins
jne
mov
call
push
fsub
mov
and
inc
mov
clc
and
popf
sbb
jmp
pop
push
mov
test
ja
out
pop
xor
adc
push
and
shl
and
xor
pop
fdivr
stc
inc
jle
adc
jb
ret
hlt
arpl
cmp
fwait
sbb
push
mov
pop
ins
pushf
into
cli
rcr
movs
sbb
jmp
push
hlt
mov
mov
dec
test
add
jecxz
bound
fstp
mov
aas
icebp
pop
loopne
xchg
loope
jmp
mov
movs
mov
sub
test
test
dec
gs
jp
(bad)
mov
imul
ror
sbb
stc
retf
dec
pop
icebp
mov
push
mov
jbe
popa
lock
pop
test
add
arpl
out
or
inc
into
in
sub
mov
adc
in
loopne
sbb
push
scas
icebp
repnz
jle
xlat
mov
xchg
and
mov
loope
mov
fst
sar
repz
popf
or
jns
sar
outs
(bad)
out
adc
inc
imul
enter
das
out
ficomp
pop
pop
aas
fcmovne
stc
xor
jnp
popa
adc
xor
out
sbb
(bad)
(bad)
xchg
jns
xor
pusha
outs
retf
xchg
mov
and
(bad)
xchg
sbb
(bad)
cmps
xchg
ud1
and
adc
mov
loop
sbb
out
cdq
push
or
shr
adc
ins
mov
leave
or
mov
push
lds
ss
mov
mov
push
sbb
inc
dec
lahf
dec
rcl
popf
ins
push
vmwrite
mov
das
scas
push
cld
push
or
(bad)
xchg
call
mov
test
gs
push
push
add
mov
call
xlat
cld
pop
ds
inc
sub
imul
movs
or
inc
mov
(bad)
jne
xchg
pusha
dec
dec
pusha
leave
or
sbb
ret
mov
loop
jo
mov
xor
loopne
hlt
inc
icebp
sub
mov
std
jecxz
mov
sub
stos
xchg
sbb
dec
xchg
jno
jle
cs
jmp
stos
sahf
les
fdiv
xor
mov
clc
sub
pop
out
out
and
jnp
pop
movs
push
(bad)
(bad)
int3
and
jno
popa
mov
mov
sahf
push
loopne
in
lock
int3
sbb
out
or
and
jge
add
xchg
xor
nop
adc
xchg
xchg
leave
or
cmp
push
dec
push
cmp
sub
xor
mov
xlat
bound
dec
sub
outs
aas
stos
cmps
retf
push
fcomip
cmp
retf
daa
xor
mov
jmp
mov
ins
mov
cs
xor
fdivr
call
je
mov
sbb
jae
test
and
mov
push
add
(bad)
out
pushf
out
sbb
push
movs
inc
or
add
icebp
cld
jbe
sar
inc
sub
dec
jp
add
jb
push
mov
cmc
test
popf
and
cld
fwait
movs
jle
mov
push
jg
div
sbb
repz
in
jns
daa
dec
inc
or
fidivr
or
xor
xlat
mov
pop
mov
mov
push
fistp
or
jae
shl
push
das
into
(bad)
fsubr
int
je
gs
les
in
xor
add
inc
inc
pop
rcr
sub
cmps
aad
push
lahf
iret
sbb
sub
das
ins
mov
dec
add
je
mov
and
sub
(bad)
jmp
xchg
adc
jg
stos
add
adc
push
fcmovnb
jmp
jb
xlat
imul
ins
das
mov
dec
call
xchg
rcr
mov
push
dec
in
out
stc
aas
retf
or
neg
dec
rol
movs
in
(bad)
xchg
inc
call
sub
jbe
pop
adc
mov
fst
add
rcl
jecxz
jle
mov
mov
sub
push
mov
jle
mov
push
jmp
inc
pop
push
bound
sbb
add
cmps
ret
outs
adc
lods
aam
sti
mov
jae
sbb
lock
call
je
push
nop
mov
das
clc
test
lahf
inc
xchg
pop
rcr
xchg
pushf
mov
mov
push
xor
mov
loope
sbb
mov
inc
outs
aad
or
xor
or
std
test
repnz
mov
cmps
test
xchg
jl
xchg
mov
out
mov
mov
shl
jo
mov
pop
movs
bound
(bad)
adc
and
fidiv
shr
aad
stos
inc
jno
daa
fidiv
mov
je
retf
cmp
add
aaa
in
lods
sbb
cmp
sub
xor
and
dec
mov
dec
adc
inc
push
or
sar
push
(bad)
jecxz
push
push
das
fisub
(bad)
push
sbb
cs
data16
sbb
xor
cmps
(bad)
fmul
or
sbb
add
sub
ins
xor
js
mov
sub
aad
int3
or
jecxz
repnz
xchg
mov
retf
ja
shr
jb
push
fnstcw
(bad)
fdivr
std
fcomip
shr
or
xchg
js
pop
add
leave
loopne
sbb
test
outs
mov
xor
imul
or
ror
cs
and
jl
cld
lods
push
sub
jecxz
sub
sub
shl
push
adc
push
sbb
call
xor
push
out
movs
mov
jg
push
adc
stos
xchg
xchg
sar
retf
jbe
mov
push
push
adc
sbb
adc
mov
movs
inc
sub
imul
dec
out
retf
mov
call
sub
ret
outs
aaa
push
mov
ss
inc
sbb
les
loop
ja
mov
mov
dec
jmp
es
test
and
dec
int
and
daa
jp
into
mov
test
stc
adc
add
mov
pop
cmp
and
xchg
shr
mov
jecxz
lds
in
aaa
pusha
pop
xchg
bound
cmc
push
mov
ds
mov
enter
jno
dec
in
movs
scas
jnp
push
pop
cmps
shr
cmp
inc
add
and
fisubr
scas
push
stc
jg
into
mov
sbb
cmp
mov
fidivr
dec
popf
xchg
pushf
lock
pop
inc
add
xor
cmp
into
inc
dec
jns
mov
shl
cmp
repnz
jle
frstor
mov
sub
in
scas
xor
or
pop
sbb
vpavgb
push
outs
out
ret
jnp
imul
rcl
jae
or
fwait
sbb
jb
add
or
es
aas
or
jo
or
js
add
lahf
cmps
gs
pop
xchg
push
add
pop
and
and
mov
fst
jmp
add
(bad)
fistp
push
daa
loope
xor
das
mov
pop
push
jae
xor
cld
sbb
shl
scas
inc
inc
test
adc
int
aas
aam
adc
dec
sti
out
test
xchg
xchg
mov
mov
enter
mov
(bad)
ja
xchg
and
mov
out
jmp
mov
cmp
loop
mov
push
test
stos
mov
push
and
or
inc
mov
fs
aaa
ins
xchg
sub
xchg
inc
pop
mov
repz
icebp
cmps
mov
xor
sbb
mov
sbb
fnstenv
stos
lock
fsubrp
(bad)
out
sub
push
in
pusha
dec
dec
sbb
and
std
add
add
push
and
popa
inc
lods
xor
or
dec
test
dec
push
push
xchg
adc
jb
cmp
add
test
push
pop
and
sbb
ret
push
cmp
mov
cmp
int3
jbe
pusha
mov
repz
fwait
and
cdq
pop
js
stos
push
dec
sub
test
mov
sub
and
imul
(bad)
retf
inc
xchg
jmp
cdq
push
in
daa
push
adc
jb
outs
int
fdivr
adc
icebp
push
mov
fstp
sub
jnp
cdq
mov
dec
push
pop
outs
sti
sbb
push
mov
(bad)
lock
retf
into
dec
cmp
lea
mov
xor
les
scas
nop
adc
add
ret
add
and
sbb
aaa
imul
rcl
or
pop
xchg
ins
mov
imul
adc
(bad)
out
mov
push
mov
mov
mov
nop
ficom
(bad)
repnz
push
xchg
cmp
aam
repnz
imul
sub
inc
pusha
test
sti
fcmovnbe
or
hlt
mov
mov
nop
jle
call
nop
mov
shl
in
rcr
popa
sub
push
mov
loop
jbe
rcl
fcomp
pusha
mov
pop
nop
ins
pop
imul
dec
stc
test
add
loope
lods
push
mov
xchg
adc
mov
jmp
scas
adc
lods
clc
fnstenv
xchg
in
std
push
mov
sbb
fwait
sbb
mov
adc
fwait
inc
add
sti
call
add
data16
cwde
mov
movs
cld
dec
lea
add
fcomp
inc
push
or
push
out
dec
push
inc
mov
and
mov
dec
sub
pop
popa
pop
sbb
pop
popf
(bad)
cmps
jecxz
mov
pop
leave
inc
xor
lods
and
jmp
lods
call
dec
call
call
jp
shl
and
xor
mov
outs
test
sbb
aas
mov
leave
and
cmp
add
popf
fmul
mov
jne
test
pop
jne
pop
mov
cmp
mov
inc
(bad)
mov
sub
call
imul
arpl
pop
sub
in
xlat
fisub
push
ffree
icebp
xchg
retf
cmc
fisttp
pop
fwait
scas
jne
ror
sub
lock
inc
ja
mov
hlt
enter
ret
imul
pop
test
jmp
outs
sbb
pop
and
and
dec
inc
adc
jmp
xchg
sahf
push
xchg
sbb
out
xchg
and
mov
retf
push
lds
push
mov
call
or
movs
push
push
mov
mov
add
in
fs
js
frstor
add
and
loope
call
cdq
jmp
push
sahf
in
cli
sbb
or
adc
push
sbb
scas
nop
xor
mov
mov
adc
les
adc
or
cmps
lahf
mov
and
icebp
sbb
int
sub
out
les
jo
ja
pop
xor
ds
mov
xor
in
push
adc
jmp
shl
jmp
cs
sahf
push
cmp
push
xchg
cmps
mov
inc
pop
push
mov
xor
or
push
faddp
shr
popf
jmp
test
(bad)
pusha
out
xor
adc
cdq
lahf
lahf
repz
repz
adc
loope
retf
jmp
dec
push
les
jnp
cmp
fisttp
xor
adc
push
dec
aaa
bound
xor
pop
mov
fcmovbe
push
push
or
pop
cmps
rcl
in
push
dec
or
jae
push
fdiv
retf
cmp
retf
dec
sub
add
fnstcw
call
inc
sub
cmp
jl
(bad)
jae
dec
addr16
cld
xlat
add
into
int
cli
xor
dec
xor
pop
and
fist
dec
add
cmp
pop
sbb
mov
cmp
sub
jp
(bad)
int
inc
clc
sub
test
movs
and
loop
lods
and
or
fstp
hlt
jge
popa
arpl
ror
add
pop
scas
fidivr
fild
push
call
dec
sbb
adc
in
rcl
mov
ins
fwait
or
test
sub
mov
mov
daa
outs
ret
fdiv
retf
mov
data16
out
retf
cld
mov
inc
pop
popa
pop
loope
cmp
paddsw
mov
push
nop
dec
in
call
jle
mov
mov
in
in
repnz
adc
call
aad
pop
sub
test
adc
ficom
shr
loope
in
xlat
test
add
sub
inc
(bad)
out
loope
addr16
cmp
inc
sub
loop
pop
ret
repz
ins
addr16
fmul
test
adc
call
fist
jmp
js
add
out
xor
xlat
cdq
xor
and
fdiv
scas
dec
push
inc
xor
pop
aam
add
or
int3
(bad)
lock
inc
repz
popa
or
sbb
add
mov
cwde
inc
ret
mov
aas
xchg
dec
div
cmps
push
pop
adc
aaa
icebp
out
mov
inc
ret
or
sub
adc
and
jmp
(bad)
gs
retf
daa
dec
inc
adc
popf
or
mov
lds
in
mov
ins
add
pop
jmp
cmp
cld
fsub
out
pusha
xor
(bad)
push
inc
cmp
dec
add
iret
ret
pushf
xchg
or
sti
daa
call
inc
call
push
push
add
adc
repnz
or
mov
dec
fldenv
cmps
cs
shl
push
std
inc
rcl
jns
xchg
xor
imul
mov
jle
pop
pop
loope
jmp
pop
(bad)
out
cmp
jl
pop
jle
xchg
ror
repz
push
jl
loopne
addr16
inc
fst
inc
jbe
bound
retf
adc
jne
enter
(bad)
mov
add
rol
aas
pop
aaa
shr
ins
mov
mov
sbb
or
sub
mov
call
adc
mov
sub
les
jbe
fidivr
or
out
or
not
push
push
sub
xchg
pop
cli
in
xchg
(bad)
in
test
pop
mov
test
out
inc
mov
jmp
cmps
pop
repnz
hlt
mov
imul
push
pusha
xor
pop
or
inc
cld
outs
repnz
lds
ror
jge
push
mov
cmp
cli
ss
out
test
mov
mov
fidivr
add
iret
mov
jns
mov
inc
inc
sar
out
mov
aaa
sub
mov
addr16
ror
sbb
gs
jbe
scas
cs
bound
outs
mov
pop
retf
push
jge
inc
mov
test
test
lods
cld
push
jp
sub
dec
(bad)
adc
mov
int
enter
and
xchg
adc
pop
mov
sub
mov
into
mov
add
or
retf
fldcw
or
push
xchg
xchg
call
jo
jmp
and
mov
not
and
mov
xor
jecxz
jmp
(bad)
mov
and
mov
jecxz
add
xchg
mov
or
add
and
cdq
sub
imul
addr16
mov
sar
pushf
mov
sub
pusha
test
mov
test
clc
push
push
fsubr
add
jecxz
mul
pushf
test
movs
fstp
sub
inc
fadd
pop
cmp
sub
mov
lds
(bad)
hlt
mov
lods
xchg
pop
xchg
iret
shr
inc
in
xor
je
cmp
pop
ins
loope
adc
(bad)
and
mov
or
or
cmp
sbb
inc
imul
adc
out
mov
jecxz
sub
dec
pop
leave
pop
xchg
mov
inc
enter
mov
inc
aad
ja
xchg
pop
cmps
test
enter
popa
adc
xor
popf
popa
cs
xor
leave
and
popa
pushf
xor
daa
dec
sub
(bad)
sbb
pop
push
sbb
pop
gs
sub
pop
mov
mov
(bad)
inc
xor
push
sub
cmps
jbe
push
loop
push
fwait
jnp
push
cmp
ds
gs
fldenv
popa
sub
mov
mov
push
add
retf
jne
inc
inc
mov
(bad)
mov
cli
pop
mov
pusha
call
ja
or
(bad)
enter
mov
enter
sbb
call
leave
jp
addr16
mov
popf
stos
push
leave
xlat
call
cmp
jno
adc
aas
cmp
in
sar
pop
(bad)
aam
outs
dec
pop
dec
std
frstor
xchg
cmp
mov
xchg
sbb
cli
ds
js
pop
(bad)
bound
repz
jno
dec
hlt
aas
ss
mov
pop
mul
mov
jg
and
sbb
cmp
or
cmp
les
push
lahf
verw
outs
aad
jb
sub
xchg
popa
clc
shld
xlat
cmps
addr16
lea
xchg
out
sub
bound
test
pop
mov
shl
rcr
enter
or
ins
dec
pop
call
xor
pop
fwait
inc
jnp
jno
(bad)
cli
xor
sbb
jmp
mov
out
scas
icebp
push
xchg
rol
add
xlat
ficom
lea
fsubr
bound
jne
pop
arpl
push
mov
iret
cs
sar
rol
cld
inc
push
fs
mov
stos
jae
xchg
sbb
popf
mov
adc
add
pop
fnstsw
in
gs
inc
jo
in
inc
push
je
push
movs
pop
inc
int
stc
daa
int
cmp
push
mov
mov
cmp
mov
dec
push
pop
push
push
sar
popf
int
sbb
mov
jno
mov
or
pop
pop
or
scas
mov
mov
dec
jp
mov
mov
xchg
into
jg
fbstp
int
loope
mov
popf
fnsave
rcr
inc
ins
dec
dec
(bad)
xchg
stos
sbb
xor
add
xor
scas
adc
loope
enter
test
sti
cmp
mov
rcl
inc
call
hlt
xchg
pop
or
dec
in
mov
loopne
rcr
jmp
cmp
stc
xor
mov
or
push
cmp
jmp
mov
sahf
mov
int
adc
pop
inc
fmul
dec
jmp
push
xor
jl
pop
mul
mov
push
pop
popa
shl
cwde
aad
xchg
sahf
outs
sbb
dec
call
pusha
pop
sti
(bad)
pop
scas
xor
mov
(bad)
in
mov
add
int
mov
popf
bound
out
call
test
les
loopne
(bad)
push
mov
push
popa
cs
aad
fnstenv
sub
xchg
fdivr
mov
iret
aam
sar
jle
mov
inc
loope
ins
mov
inc
mov
(bad)
xchg
out
pop
mov
xor
cmp
hlt
(bad)
dec
jp
jno
cs
int
cli
and
dec
xchg
int3
es
int
fwait
sub
(bad)
jge
jge
sub
jecxz
cli
push
and
in
enter
mov
ins
dec
cmp
sub
pop
loop
cwde
inc
lds
mov
pop
jecxz
movs
sub
jbe
outs
test
mov
push
fwait
cmps
mov
movs
push
pop
call
sub
and
(bad)
cdq
movs
xchg
cmp
mov
sar
repnz
add
inc
ss
sar
jl
dec
xchg
in
cmps
sbb
movs
lea
out
ret
push
sti
jmp
jle
repz
mov
cmp
xor
sub
or
xchg
imul
nop
fnstsw
pusha
xlat
pop
adc
mov
je
pushf
cmp
inc
daa
xor
xor
push
(bad)
mov
jne
pop
mov
cmp
xchg
adc
enter
scas
mov
push
push
hlt
call
xor
dec
ret
cdq
adc
push
cdq
add
pushf
xchg
mov
movs
xchg
mov
cmps
js
jae
retf
xchg
addr16
cmp
xlat
psubw
popa
push
daa
xchg
enter
pop
push
jl
pop
scas
add
gs
xchg
in
fcomp
adc
repz
inc
xchg
(bad)
cwde
add
jl
mov
inc
lods
dec
fld
xchg
sbb
and
fld
inc
mov
pushf
cwde
sbb
dec
sar
shl
jb
and
inc
xchg
sbb
dec
sub
das
scas
jge
lods
call
popa
gs
pop
movs
enter
mov
lds
add
push
sbb
daa
out
adc
aaa
push
cli
mov
pop
xchg
dec
add
sub
shl
dec
div
sbb
cmp
mov
add
xor
and
xchg
mov
jnp
lahf
adc
mov
sahf
cmp
inc
pop
sbb
loopne
inc
fidivr
push
xor
mov
gs
mov
jcxz
dec
fisubr
aad
jbe
mov
push
inc
js
movs
mov
inc
pop
cmp
pop
mov
gs
aaa
adc
cmp
or
dec
clc
jle
mov
ret
out
rcr
pop
lods
mov
mov
sub
imul
in
mov
lods
mov
pop
enterw
mov
cmp
arpl
mov
cmp
inc
stos
mov
dec
pop
push
es
fs
data16
add
outs
pop
aad
in
int3
dec
adc
pop
(bad)
pop
dec
repz
xor
(bad)
jl
fldenv
cwde
inc
adc
inc
sub
mov
dec
cli
mov
aad
pop
fisubr
shl
inc
retf
ret
inc
xlat
xchg
cmp
mov
push
out
shl
movs
fstp
jae
xchg
pop
popf
ja
jl
retf
or
mov
call
inc
test
fwait
adc
idiv
jp
add
rcl
stos
dec
and
dec
or
movs
pop
ror
daa
adc
dec
cmps
in
out
dec
sbb
or
mov
push
mov
mov
int3
fbstp
sbb
(bad)
and
lods
jg
cdq
inc
push
outs
ins
in
out
mov
dec
inc
push
bnd
xor
sbb
mov
push
in
in
cmps
add
test
xchg
ret
fmulp
cli
push
sbb
inc
test
outs
and
leave
idiv
dec
cmp
(bad)
push
mov
cmp
push
aaa
sub
add
test
xor
and
push
ins
mov
std
cmp
add
jno
(bad)
aas
das
pop
bound
sub
in
push
or
mov
and
test
mov
pop
mov
mov
sub
fmul
pop
inc
mov
add
xor
fcomp
leave
bound
add
lods
js
retf
test
add
int
cmp
sahf
or
jae
scas
mov
and
leave
movs
dec
dec
dec
jl
push
movs
push
push
mov
aad
dec
lods
cmc
inc
pop
stc
xchg
mov
dec
cmp
mov
jmp
sub
jg
mov
add
xchg
call
aad
rcl
pop
or
inc
pop
mov
clc
mov
lahf
rcl
xchg
pop
jns
int3
jl
test
xlat
aaa
out
mov
stos
dec
jmp
call
pop
test
mov
push
test
retf
in
sbb
fisub
pop
imul
loopne
sub
aas
icebp
push
push
mov
lahf
data16
aad
fist
pop
pusha
repnz
jmp
mov
sub
popa
ret
gs
daa
mov
fst
sub
dec
or
enter
and
loop
cdq
je
xor
(bad)
mov
stc
pop
fs
lahf
lahf
pushf
or
pushf
and
cmp
sbb
dec
loopne
stc
sbb
div
ja
xor
aaa
mov
mov
lds
popa
cwde
add
xchg
add
and
imul
dec
cmp
aaa
test
add
dec
xchg
and
cdq
test
inc
xchg
loop
inc
xchg
inc
sbb
or
test
inc
xor
not
cli
jmp
les
out
fisubr
(bad)
dec
xor
push
xchg
adc
shl
cmp
adc
push
mov
pusha
aas
call
dec
jmp
out
fdivr
lods
cld
dec
lock
dec
ins
mov
stc
dec
dec
les
mov
fs
cdq
jmp
pop
aaa
xchg
sub
popf
ins
(bad)
mov
scas
sbb
dec
mov
cld
sub
inc
stc
sub
push
(bad)
mov
sbb
(bad)
std
test
scas
mov
add
jnp
xchg
repnz
stos
iret
mov
and
(bad)
call
clc
sub
mov
repnz
cmps
sbb
out
pop
push
xchg
dec
inc
rol
out
xchg
mov
push
mov
cmps
popf
adc
dec
in
addr16
push
test
adc
neg
retf
iret
ret
sar
lahf
test
fs
fist
jns
pop
call
and
mov
mov
test
out
xchg
sbb
loope
add
inc
mov
xor
xor
add
mov
adc
mov
lahf
inc
pop
aas
(bad)
jbe
in
addr16
mov
cli
dec
or
sub
test
and
jbe
mov
leave
xor
out
and
fdivrp
test
mov
fld
scas
pop
std
stc
sub
cmp
hlt
fnstenv
dec
add
push
cmp
repz
adc
ret
or
adc
adc
js
pop
add
(bad)
arpl
pusha
les
dec
mov
pop
mov
hlt
test
stc
fistp
arpl
or
call
scas
push
jl
xor
dec
mov
ret
retf
ja
mov
out
pop
xchg
sbb
sbb
cmp
sar
inc
arpl
cld
mov
lds
mov
enter
dec
and
out
mov
bound
cs
ret
mov
cmp
add
xchg
adc
or
ret
mov
push
add
retf
jns
inc
sar
xor
xchg
cmc
pop
mov
inc
fs
retf
pop
mov
push
popa
xor
inc
neg
adc
jp
or
dec
sbb
push
push
stos
pusha
leave
push
(bad)
cmps
jg
dec
pop
pop
mov
adc
push
push
into
and
or
inc
jns
jne
mov
add
leave
sub
lock
in
or
cmc
cdq
jl
mov
xchg
cmps
ficom
jge
scas
mov
sbb
clc
dec
pop
in
imul
inc
jns
xor
sub
rcl
test
aas
add
xchg
mov
cmp
pop
or
ins
pop
adc
pop
fiadd
loopne
stos
mov
mov
xchg
mov
mov
sbb
jno
xchg
mov
inc
sbb
adc
add
(bad)
push
cld
retf
lea
loope
xchg
sub
jbe
mov
or
inc
cmp
mov
(bad)
mov
test
jge
sbb
mov
(bad)
lea
cmp
imul
jmp
xlat
cs
enter
popf
ret
xor
in
and
fld
mov
lock
repnz
or
inc
aaa
loope
add
cmp
pop
mov
stos
mov
push
aas
or
stos
push
dec
mov
lock
std
sub
mov
lods
in
test
add
mov
or
minps
out
cwde
fdivr
inc
xor
mov
fadd
fwait
and
mov
cmp
inc
xor
push
dec
(bad)
sbb
movs
and
mov
push
jmp
mov
dec
adc
and
lahf
mov
cmp
inc
aam
sar
mov
clc
gs
push
outs
jns
sbb
xchg
xchg
cs
adc
sub
mov
and
int3
psrlq
pop
add
jecxz
add
dec
stos
or
data16
test
movs
cmps
dec
jb
ins
add
stc
push
out
jmp
outs
mov
adc
jp
stc
ins
iret
mov
mov
hlt
jns
xchg
or
and
ss
arpl
jmp
pop
inc
gs
cmps
jno
push
ins
push
adc
sub
push
sbb
jge
(bad)
and
out
inc
in
jns
push
stos
fdiv
rol
ins
call
push
push
sahf
push
xlat
sbb
aaa
pusha
movs
xlat
rol
mov
aad
out
jbe
xchg
jecxz
leave
cmps
mov
call
pop
mov
pop
inc
outs
push
in
aad
pop
sbb
push
adc
dec
mov
xor
sar
mov
inc
enter
pop
pop
push
push
fadd
rol
inc
jmp
jmp
sbb
sbb
xor
add
sub
out
fwait
pop
nop
cmp
sub
(bad)
in
inc
jmp
cmps
xor
adc
shl
test
scas
mov
jae
dec
push
or
daa
popa
iret
les
jno
sub
ret
ror
mov
data16
repz
sbb
addr16
mov
fcom
push
icebp
aad
lods
push
(bad)
cli
psubb
pop
(bad)
popa
adc
sbb
leave
or
xor
repz
mov
mov
mov
mov
movs
mov
mov
inc
and
call
push
hlt
mov
(bad)
mov
loop
sbb
in
push
loope
mov
aas
popf
sub
jmp
aaa
mov
rcl
aas
daa
aaa
inc
out
loopne
sub
xlat
push
enter
xor
sar
jbe
lahf
and
xor
inc
iret
pop
cmp
stc
js
fld1
mov
xor
adc
and
lea
xor
pop
sbb
adc
shl
movs
push
jae
inc
xchg
pop
das
sub
push
jecxz
inc
fdivrp
and
stos
stc
retf
inc
popa
sbb
cmc
int
outs
push
sub
out
js
int
stos
pushf
hlt
adc
pusha
adc
icebp
test
add
dec
call
mov
stos
inc
mov
pushf
scas
icebp
xor
fdiv
adc
ds
ror
push
iret
shr
or
sub
(bad)
adc
pop
retf
call
sbb
rcl
xor
dec
cmc
shl
xor
outs
sahf
call
dec
pop
arpl
inc
mov
mov
call
sbb
scas
xor
addr16
jmp
mov
lods
inc
clc
cmps
or
cmps
mov
dec
test
dec
mov
popa
loopne
add
jl
or
jmp
stc
add
and
pop
and
pusha
sti
add
into
and
arpl
cmc
mov
jb
xor
movs
fisubr
je
mov
data16
(bad)
jne
mov
cmp
rcr
shr
mov
mov
iret
dec
je
pop
mov
sbb
or
in
test
pop
popa
das
bswap
jb
pop
aaa
adc
sti
push
sub
mov
xor
int
push
dec
rol
fiadd
iret
movs
sbb
jmp
js
adc
arpl
fdiv
popa
adc
ret
cmp
push
ret
xchg
stc
jae
ja
xchg
push
das
jp
or
and
pusha
push
push
cmp
dec
repnz
xchg
div
retf
sahf
jmp
(bad)
pop
and
mov
mov
sar
ins
jp
dec
retf
sub
inc
fstp
push
push
mov
jae
ror
push
pop
test
(bad)
out
cmp
pop
(bad)
iret
ins
aad
fisubr
xchg
outs
xchg
test
std
sub
cmp
jl
std
jmp
push
mov
mov
xor
inc
sbb
(bad)
lods
and
fs
bound
outs
shl
(bad)
lods
out
outs
aas
call
je
pop
push
adc
outs
cmps
les
inc
mov
ins
jle
push
outs
movs
mov
outs
xchg
in
push
pusha
std
jmp
xchg
pop
pop
in
into
fs
in
or
mov
mov
mov
cmps
dec
pop
add
push
cmp
mov
mov
sbb
fld
movnti
in
mov
mov
cdq
cmps
inc
jle
ja
jo
mov
cmp
fbstp
addr16
push
pop
jno
add
mov
sbb
jp
push
jge
test
mov
lods
cld
shr
fsubr
loopne
mov
mov
ins
jne
pop
aad
jbe
ret
fcomp
pushf
inc
add
jl
(bad)
imul
and
(bad)
leave
sar
xor
dec
pop
pop
dec
nop
push
daa
shr
cwde
jnp
pop
and
stos
dec
cmp
push
fwait
pushf
cmps
pop
inc
stc
pop
out
add
and
into
sub
inc
or
add
xchg
or
dec
pop
pusha
xchg
outs
lahf
arpl
pop
xor
add
cli
sti
mov
adc
push
imul
test
jmp
(bad)
pop
into
xor
dec
mov
scas
mov
xchg
pop
jns
and
nop
pop
xchg
add
jge
cwde
in
jnp
(bad)
retf
mov
retf
clc
and
dec
fs
mov
xor
cwde
mov
pop
fldcw
or
jg
pop
das
(bad)
sbb
and
aaa
sar
scas
bswap
cmp
cmp
pusha
jg
out
(bad)
or
mov
das
mov
sbb
sar
xchg
lods
xchg
paddusb
inc
fsub
push
mov
loop
push
and
inc
cwde
out
cwde
xor
adc
mov
out
sbb
xor
push
and
bound
fldenv
xor
jae
push
call
(bad)
mov
mov
sbb
push
cmp
ror
sub
(bad)
mov
out
sbb
sbb
ret
bound
sub
nop
add
imul
mov
icebp
or
stos
lods
dec
sub
mov
adc
mov
mov
cmp
mov
retf
adc
shl
(bad)
xchg
sub
rcr
arpl
packuswb
retf
jl
mov
inc
lods
cmps
ja
stc
stc
ret
and
aas
xor
pop
jmp
mul
lock
cli
lods
inc
lea
stos
(bad)
hlt
shl
sbb
mov
jecxz
cmp
(bad)
(bad)
hlt
in
dec
out
data16
jle
or
xchg
xchg
sub
je
fwait
mov
call
add
repnz
mov
adc
ret
pop
aad
adc
ret
add
mov
push
(bad)
lock
ds
mov
rep
add
or
xor
dec
dec
int
mov
sub
adc
in
vzeroupper
mov
loope
in
sub
sub
sbb
inc
xchg
xchg
hlt
cmps
sub
dec
in
cmp
pop
cmp
xor
sub
jge
pop
pop
(bad)
and
jbe
xchg
push
push
loopne
mov
nop
or
fild
fbstp
daa
js
mov
jle
daa
sbb
push
push
outs
or
xor
das
fdiv
loopne
jnp
cmp
xor
mov
xchg
mov
popf
fcom
ret
cmc
js
rcl
mov
add
push
mov
jno
enter
sti
jge
cmp
and
cli
pop
cmp
mov
push
xchg
push
xor
xor
xor
mov
push
adc
inc
mov
dec
push
jge
mov
ins
lea
out
xchg
add
jmp
pop
imul
out
or
outs
ins
pop
push
inc
cli
sbb
(bad)
xchg
xchg
les
mov
xchg
and
bound
mov
pop
push
int3
cs
in
lock
mov
mov
adc
jae
aam
aaa
pop
cli
mov
jmp
inc
adc
in
mov
cmps
test
dec
pop
out
inc
popa
pop
stos
lldt
sub
shl
jge
lock
sbb
movs
add
dec
in
(bad)
jmp
ret
ficomp
call
loop
push
inc
dec
in
mov
shl
sti
or
lods
movs
adc
inc
fist
fisttp
retf
scas
or
pop
jnp
pop
jae
inc
outs
xor
inc
push
cmp
test
adc
ror
(bad)
aas
sbb
cld
xchg
xor
fisub
inc
sub
push
jno
pop
js
sbb
inc
adc
retf
pop
add
lods
mov
xor
dec
push
and
out
pop
cs
mov
push
add
sbb
jl
in
fisttp
call
rcl
pop
icebp
ror
sub
test
mov
pop
mov
retf
mov
push
std
xor
jp
cmp
mov
pop
cwde
dec
cdq
repnz
add
movs
fwait
sub
cdq
retf
sbb
adc
pop
xchg
lods
mov
mov
out
jg
pop
sbb
ins
jns
in
je
lods
dec
xchg
push
push
jb
test
test
jg
dec
jne
movs
clc
call
adc
lea
cdq
and
or
or
(bad)
fldcw
and
mov
mov
pop
cmps
jne
adc
pop
pop
in
add
mov
cmp
daa
stos
in
sub
or
ss
pop
rol
(bad)
cs
lock
and
cmp
inc
cmps
in
jbe
mov
jno
cld
inc
jo
out
fsub
das
and
xor
sbb
lea
push
mul
lods
jae
sti
sub
add
mov
mov
xor
ins
mov
jns
inc
retf
and
(bad)
push
xchg
pop
movs
(bad)
daa
dec
fnsave
int
mov
std
push
out
mov
pop
and
dec
lods
gs
stos
mov
sbb
and
mov
out
sti
fbstp
cs
cmps
mov
ja
les
cdq
call
push
cmc
xlat
mov
dec
xor
aaa
(bad)
cmc
popf
push
push
mov
int
aas
(bad)
in
inc
ss
jne
pop
sub
stos
xchg
shr
rcl
data16
scas
sbb
repz
adc
xchg
mov
aad
mov
add
mov
inc
fdiv
les
icebp
xchg
and
ror
mov
mov
xor
adc
mov
jnp
scas
mov
aaa
test
mov
clc
out
inc
sbb
pop
jo
call
or
jmp
pop
inc
pop
push
loopne
sti
js
lds
xor
push
sub
pop
test
push
mov
push
add
push
(bad)
js
inc
sbb
sahf
std
neg
mov
mov
dec
cli
and
sbb
pop
sar
add
jnp
psllq
mul
in
push
jnp
cs
dec
imul
dec
inc
mov
inc
pop
call
jae
aaa
dec
jno
inc
xor
inc
(bad)
sti
aad
inc
inc
clc
in
dec
mov
push
cmp
add
push
xor
inc
bound
adc
inc
pop
xchg
mov
cdq
jl
or
pop
adc
imul
push
xor
inc
imul
mov
pusha
mov
ss
(bad)
imul
test
ins
cs
pop
sbb
retf
adc
mov
jle
push
cmp
rcl
stos
sbb
pop
inc
bnd
int
mov
mov
mov
sbb
leave
xchg
mov
mov
mov
or
retf
sub
int
in
aas
dec
jmp
fisub
iret
adc
loope
mov
fstp
mov
nop
or
xlat
adc
mov
stos
nop
ret
cmps
(bad)
xchg
add
add
loop
(bad)
pushf
push
lods
jbe
aas
cmp
mov
arpl
dec
lods
(bad)
(bad)
(bad)
pop
jae
lods
push
pusha
push
inc
outs
aas
sub
xchg
dec
jmp
mov
or
sbb
jmp
pushf
fimul
jmp
ficomp
and
cwde
push
inc
xor
sahf
adc
data16
xor
out
sahf
xchg
mov
fisub
dec
dec
xor
and
test
(bad)
popf
push
xchg
call
enter
rcl
adc
and
div
(bad)
call
aam
scas
(bad)
xchg
into
jbe
cdq
pop
imul
das
mov
idiv
push
push
sbb
scas
add
mov
pop
loopne
out
imul
lock
ds
ins
out
sbb
pop
mov
call
xchg
or
out
gs
sub
std
mov
sbb
lods
push
add
outs
add
pushf
push
ror
iret
mov
test
jb
out
fxch
daa
xchg
int
cmp
xchg
sub
and
pop
in
(bad)
dec
mov
rcr
sub
shr
xchg
bound
sti
idiv
movs
jbe
push
in
jnp
fbld
aas
adc
mov
lock
pop
test
mov
outs
push
mov
iret
jge
outs
push
hlt
and
add
inc
sti
jp
inc
bound
fild
xor
lds
in
(bad)
enter
cmp
cmp
pushf
retf
and
push
lea
fsub
ja
test
inc
sbb
gs
repnz
mov
adc
scas
sbb
in
jmp
fs
push
adc
mov
loopne
push
jge
adc
nop
add
inc
and
neg
jnp
mov
(bad)
sub
xchg
in
sub
dec
inc
aaa
push
add
aam
mov
mov
push
or
hlt
mov
bound
add
xor
sbb
pop
jns
cmp
arpl
mov
and
pop
outs
pop
enter
les
and
icebp
shl
out
mov
addr16
adc
add
dec
xchg
jmp
sbb
aas
data16
in
in
or
sbb
retf
jno
or
mov
or
sub
fist
fstp
mov
dec
ja
out
lods
mul
dec
mul
ficom
movs
xchg
mov
clc
aaa
js
out
dec
jae
adc
cmp
clc
dec
faddp
leave
inc
sbb
push
ret
aam
clc
fadd
and
jb
loope
dec
loopne
mov
pop
push
mov
outs
leave
(bad)
mov
mov
(bad)
and
pop
addr16
test
push
test
mov
in
shl
ins
adc
sub
(bad)
call
in
hlt
mov
sub
jmp
cmp
jp
push
std
or
adc
iret
ret
stos
dec
scas
(bad)
lods
int
movs
sar
mov
jb
mov
push
hlt
test
inc
cmp
add
shl
mov
repz
xor
mov
xlat
mov
gs
inc
pop
iret
xchg
jno
in
sbb
cmp
mov
aas
sbb
and
dec
adc
xor
pop
stos
adc
ins
fwait
and
pop
div
test
ins
or
mov
add
loope
dec
std
jmp
jbe
inc
push
inc
add
push
imul
mov
cmps
push
(bad)
lods
cld
push
push
xor
es
loopne
and
mov
lea
lods
inc
dec
mov
inc
jne
sar
push
xlat
(bad)
popa
dec
out
cwde
pop
mov
stos
dec
sub
stos
mov
rcr
push
or
push
dec
xor
push
test
mov
mov
sub
dec
loopne
ror
lahf
inc
dec
shl
loope
adc
xlat
(bad)
mov
cmp
mov
hlt
push
jge
or
inc
ficom
cmc
fldenv
retf
mov
movs
cld
outs
xor
xchg
adc
push
mov
sbb
(bad)
aas
cwde
sbb
jl
xchg
loope
je
pop
sub
push
sbb
push
pop
clts
shl
std
sbb
and
rcl
adc
jno
pusha
arpl
cld
out
cmp
sbb
cld
repnz
sar
jmp
ins
push
leave
movs
dec
scas
lods
in
mov
sahf
fcomp
pop
adc
xor
cdq
inc
in
dec
jbe
xor
cdq
jmp
shl
inc
in
jne
rol
add
sub
sbb
call
inc
pop
test
les
lahf
adc
cmp
jnp
dec
pop
out
out
xchg
sub
cmp
popa
std
icebp
or
test
gs
into
jnp
ds
jmp
push
cmps
dec
and
shr
add
movs
cli
mov
in
add
leave
dec
sbb
imul
mov
mov
popf
outs
iret
push
shr
enter
out
or
into
rcl
gs
push
cmp
test
ret
pop
cmp
pop
cmp
jbe
lock
dec
sub
cwde
stos
imul
push
pop
jg
ret
pop
mov
push
push
mov
or
push
sti
fmulp
(bad)
in
adc
test
outs
shl
jge
sbb
cmp
out
pop
push
cld
retf
and
in
sahf
out
and
xchg
xchg
or
cmp
sti
test
sahf
and
(bad)
aad
jl
xchg
push
and
pushf
push
adc
pop
sbb
sahf
mov
loope
or
retf
pop
retf
(bad)
js
cmp
test
nop
mov
scas
enter
ss
cli
sti
(bad)
in
addr16
mov
or
cmps
test
retf
mov
in
mov
in
lea
fiadd
fisttp
xchg
imul
push
icebp
test
or
inc
and
add
loopne
hlt
inc
stc
mov
jmp
and
sbb
ds
stc
stos
nop
and
add
xor
retfw
and
mov
popf
fild
mov
mov
jp
out
push
pop
mov
in
shl
ret
bound
inc
sub
sub
sub
(bad)
push
mov
cmp
(bad)
adc
xchg
inc
retf
push
sahf
or
dec
push
mov
xor
nop
fwait
mov
out
push
pop
cmp
int3
fs
pop
das
adc
inc
add
inc
pop
adc
shl
retf
(bad)
pop
cld
lods
pop
std
add
je
mov
out
pop
arpl
aam
mov
ds
jmp
dec
or
add
xchg
jno
in
cld
pop
sub
aam
in
das
clc
mov
lods
mov
mov
cs
lods
mov
xchg
cmp
idiv
mov
int3
popa
ss
cmps
cmp
iret
inc
dec
hlt
scas
aaa
cld
adc
aam
pop
cmc
mov
or
cmp
cmc
push
sbb
push
or
xchg
or
in
aam
nop
stos
adc
loopne
inc
mov
clc
mov
or
mov
mov
lea
xchg
mov
cmp
dec
daa
into
sub
sub
lock
sbb
inc
cmp
lahf
leave
push
jns
shr
jmp
test
inc
lods
xchg
imul
fst
sbb
dec
into
mov
aas
and
je
cmp
or
into
jmp
(bad)
cwde
imul
fisub
stc
and
adc
xor
adc
mov
(bad)
outs
lock
cmp
xor
fdivr
test
es
dec
jmp
je
push
imul
rcr
scas
data16
jmp
and
adc
mov
cmc
sbb
(bad)
cmp
push
ss
xchg
gs
mov
mov
stc
aam
jmp
mov
cdq
aam
addr16
cmp
dec
jmp
xchg
jge
arpl
and
jae
dec
mov
xchg
xchg
cwde
push
cmp
pop
or
mov
adc
push
repz
and
cmp
xlat
push
mov
fidiv
loope
jmp
mov
add
jecxz
cmp
jle
neg
or
aaa
mov
rol
gs
test
or
out
aam
push
xor
(bad)
push
cmps
mov
add
daa
xchg
in
nop
repz
sub
hlt
cdq
jbe
shl
inc
inc
or
sar
mov
js
ret
adc
jp
pop
push
sbb
adc
(bad)
fnstcw
sbb
pop
xchg
jae
dec
adc
mov
loop
cmps
xchg
jne
xor
pop
mov
pop
jge
ret
inc
aaa
sub
test
sar
mov
add
jmp
pop
xchg
push
aad
xchg
push
mov
(bad)
and
popf
test
loope
mov
frstor
sbb
push
out
lods
push
jne
sub
jle
push
xchg
clc
test
retf
and
mov
adc
lods
or
cli
cmp
jno
add
and
dec
xor
add
add
lahf
adc
inc
dec
xchg
add
hlt
sbb
cwde
call
mov
pop
fcmovne
pop
rcl
cld
std
jno
or
pop
mov
mov
xchg
into
shl
jecxz
ja
push
movs
shl
adc
and
dec
addr16
fsub
push
fisubr
outs
rcl
adc
mov
rol
mov
pop
in
lahf
mov
call
retf
js
das
mov
int
inc
imul
div
push
and
dec
xchg
test
jmp
sub
out
scas
js
ja
and
jb
loopne
xchg
call
jg
add
outs
inc
xlat
cs
inc
sti
pusha
and
xor
mov
cmc
cmp
sbb
fs
xchg
fdivrp
test
shl
push
jbe
dec
xchg
pop
out
jl
lock
xor
mov
call
in
out
push
cmp
adc
dec
lods
adc
inc
mov
ret
jne
push
xor
ss
enter
mov
sbb
ds
or
(bad)
cmp
pop
xchg
push
call
pop
mov
xor
pop
or
call
stc
mov
pop
add
(bad)
cs
xor
jne
pop
loope
lahf
cmp
pop
retf
cmp
ret
fcmovne
pop
pushf
ss
dec
mov
out
xor
pop
stos
aaa
aaa
cmp
pop
jae
shl
sbb
sbb
shr
mov
mov
out
ret
ds
lahf
pop
dec
cs
xchg
pop
or
cmc
xchg
ins
jns
fwait
test
adc
push
retf
cdq
jge
xchg
lock
jg
test
in
retf
icebp
adc
fnstcw
(bad)
out
add
cwde
xchg
in
inc
mov
cmps
out
ins
cli
and
xor
pop
inc
mov
lods
icebp
pop
jmp
adc
aaa
add
dec
(bad)
stos
xchg
mov
loop
test
ror
adc
out
push
push
jo
shl
add
mov
sahf
mov
xor
or
into
inc
dec
push
xor
adc
adc
fdivp
inc
add
into
jecxz
loop
mov
imul
jbe
dec
fiadd
cmp
gs
fnstcw
adc
mov
cdq
mov
lods
mov
cdq
mov
fld
jb
push
mov
fs
pop
mov
xchg
fimul
push
add
mov
dec
rcr
repz
fistp
stc
mov
(bad)
movs
and
cmps
test
pop
mov
jb
mov
cmp
nop
mov
add
jp
or
stos
imul
mov
je
push
daa
xor
retf
jl
scas
aas
cmp
fdiv
xor
jmp
sbb
jae
out
movs
xchg
or
sub
push
iret
cmp
dec
mov
mov
das
xlat
mov
inc
xchg
fnstsw
sub
pop
pop
scas
test
repnz
inc
and
cmp
push
cwde
and
or
pop
jge
rol
mov
inc
and
out
cs
cwde
mov
cmps
push
js
mov
adc
retf
mov
test
mov
(bad)
(bad)
cmc
sbb
fsub
cs
std
xor
popf
pushf
out
adc
outs
js
mov
(bad)
cmp
mov
dec
mov
add
mov
shr
lds
mov
mov
adc
push
jae
mov
jb
enter
stc
or
repz
fdivr
add
in
inc
or
pushf
shl
call
mov
or
test
inc
xor
xor
cmps
dec
clc
fisttp
or
mov
and
jnp
rol
cmc
idiv
cmp
cmp
mov
push
xchg
imul
pcmpgtw
call
adc
retf
cld
es
out
out
mov
dec
cld
hlt
fidiv
xchg
mov
movs
mov
test
adc
jp
or
push
mov
out
stos
mov
lods
push
jmp
xchg
in
dec
shl
(bad)
neg
test
xchg
fs
xor
in
(bad)
js
mov
mov
(bad)
fistp
adc
push
jae
adc
shl
icebp
out
xor
push
hlt
mov
ja
punpckhbw
sub
seto
scas
or
add
xchg
test
stc
mov
test
pop
mov
call
push
pop
jle
mov
outs
shl
inc
or
mov
sbb
js
js
mov
cmp
in
dec
and
sub
cmp
sub
jb
pop
and
leave
aaa
iret
inc
inc
pop
add
std
mov
leave
imul
push
(bad)
adc
push
cmps
outs
ss
cmps
and
aaa
lahf
test
mov
test
mov
or
cdq
aam
imul
add
jae
sub
push
jbe
std
cwde
mov
mov
jp
sub
xchg
cmps
adc
shr
js
cmp
xchg
pop
adc
cmp
inc
stc
icebp
xor
jno
ret
add
jbe
jne
inc
push
pop
pop
jnp
movs
rol
test
xor
pop
out
cmovbe
fs
and
adc
jne
ret
lock
arpl
jmp
xor
mov
pusha
push
stos
lods
jns
xchg
mov
(bad)
in
sub
scas
pop
dec
jmp
or
jns
imul
sbb
call
retf
enter
sub
fldcw
es
rcr
add
mov
mov
in
aas
out
iret
stc
jp
popf
cmps
aaa
xchg
jmp
ins
fcom
ret
xor
and
movs
jo
fdiv
enter
repz
cmps
push
daa
xchg
xor
adc
pop
inc
add
ficomp
repnz
or
inc
mov
pop
mov
mov
push
leave
jo
loop
in
test
retf
pop
fisttp
pop
lahf
adc
add
out
out
out
jp
adc
push
addr16
stc
lods
fist
inc
sar
jg
adc
cdq
lea
outs
fwait
mov
push
(bad)
sahf
ins
mov
cmc
pop
ror
cmp
xchg
sbb
lea
dec
das
test
xchg
in
add
rcl
ss
push
mov
fdivr
cwde
cmp
sbb
daa
pop
and
call
dec
inc
inc
jb
fst
sbb
xchg
mov
fistp
mov
test
pusha
bound
ret
test
lods
lock
push
jp
mov
xor
fwait
pop
dec
loopne
jg
les
mov
adc
jp
mov
stc
jno
jmp
dec
sub
inc
xor
sbb
xlat
outs
jg
fwait
jae
push
iret
or
sbb
jecxz
out
mov
adc
cmp
loope
sar
bound
icebp
es
test
mov
pop
popf
test
out
ins
dec
xlat
dec
call
pushf
or
in
dec
mov
xchg
xchg
add
mov
xchg
dec
aas
pop
jmp
aad
out
pusha
mov
dec
loope
sbb
inc
mov
inc
cmp
sub
mov
sahf
xor
fwait
xchg
sub
xchg
mov
fidivr
jp
bsf
ja
retf
ret
lods
cld
push
xor
dec
adc
jns
aas
ror
xor
les
inc
inc
or
xor
out
and
mov
div
jmp
pop
rcl
or
stos
add
shl
mov
ss
jb
lds
mov
add
shl
lods
cld
fmul
dec
dec
push
adc
into
icebp
sahf
daa
sub
mov
lea
mov
or
and
jl
and
jl
xlat
add
imul
and
cs
cmp
test
pop
add
ins
ror
pop
stos
sub
std
in
outs
or
sbb
in
scas
sub
loope
pop
imul
mov
xchg
movs
add
mov
sar
lea
fidivr
and
adc
inc
out
int
lods
add
in
pop
cwde
cmp
sub
mov
xchg
ficomp
icebp
jae
sbb
dec
jbe
nop
neg
adc
push
iret
mov
neg
jp
cmp
sub
imul
sahf
ret
push
xchg
push
or
(bad)
xchg
pop
xor
fidivr
sub
push
xor
scas
mov
and
cmp
test
or
movs
jns
mov
scas
inc
or
mov
push
sbb
mov
xchg
push
inc
xchg
scas
inc
mov
sub
int
repz
inc
cmp
aas
mov
xchg
aad
cmp
outs
into
ret
pushf
sbb
mov
(bad)
jnp
pop
div
int
cmp
dec
fld
aas
mov
je
jp
jo
cmp
cmp
imul
sbb
push
sbb
lods
dec
das
push
cmc
mul
sub
mov
pop
loope
pop
pop
test
dec
jae
sbb
lods
nop
xchg
retf
jl
loopne
loopne
or
out
dec
pop
and
stc
or
ror
retf
es
jle
jg
xlat
sbb
xchg
scas
jmp
in
mov
lods
cmp
or
movs
adc
jae
cmp
xchg
mov
sbb
lahf
pop
push
sti
mov
or
rcl
mov
shl
cmp
push
cmps
aaa
into
pop
adc
and
push
cmp
(bad)
in
retf
mov
mov
mov
aaa
push
xlat
mov
mov
(bad)
mov
dec
xor
push
adc
add
jle
adc
or
stos
and
adc
push
(bad)
xor
popa
inc
cmp
rcr
shr
test
call
pop
inc
mov
mov
stc
and
sub
add
out
cmp
call
dec
neg
int
sar
push
adc
lahf
adc
mov
cs
cmc
dec
nop
sbb
stos
mov
bound
data16
dec
push
test
ds
dec
shl
push
jmp
stc
sub
dec
adc
into
xchg
in
jge
(bad)
mov
pusha
stos
and
ret
lods
mov
mov
dec
pop
sbb
test
dec
aam
dec
gs
(bad)
sub
shr
sbb
mov
adc
push
aam
xor
loopne
lods
aad
jecxz
push
popa
(bad)
and
lds
or
enter
icebp
into
retf
stos
dec
popf
fwait
(bad)
mov
jnp
sbb
mov
fidivr
shl
sub
or
lds
ret
sbb
mov
xor
fwait
or
lock
cmc
mov
(bad)
or
scas
shl
pop
push
psrad
mov
sar
ror
dec
dec
arpl
push
ins
loopne
push
add
xchg
jb
adc
add
int
or
pop
arpl
mov
xor
jne
hlt
jmp
push
or
pushf
out
pop
inc
sub
outs
cmp
mov
sbb
call
stos
sub
jecxz
jmp
test
clc
cmc
sbb
sub
pop
shl
outs
xchg
int
dec
adc
pusha
out
cdq
cdq
fnstcw
popf
mov
pop
shl
adc
xor
inc
inc
push
mov
mov
stos
pushf
sbb
sbb
ret
sbb
repz
es
std
sub
and
in
mov
loop
(bad)
push
jl
cli
pop
or
xchg
xchg
jmp
les
mov
rol
sbb
mov
outs
or
(bad)
add
jns
repz
fisub
call
cmp
aaa
repz
jmp
ins
int3
pop
popa
rcl
pop
lea
sbb
and
scas
jle
mov
push
adc
xor
pop
push
test
push
xchg
adc
dec
xor
nop
shl
jle
sbb
imul
dec
adc
call
lahf
push
fisubr
fild
(bad)
xor
xchg
in
scas
dec
out
iret
(bad)
stos
mov
mov
bound
stos
hlt
aaa
add
add
add
sahf
and
iret
pop
cli
mov
sub
mov
daa
xchg
cli
push
or
loop
jmp
jmp
pusha
(bad)
inc
inc
test
das
mov
mov
sbb
add
push
adc
inc
adc
test
sub
add
xor
pop
mov
dec
mov
adc
gs
xor
push
jge
call
test
dec
rcr
cmp
rol
fist
sub
sub
inc
movs
xchg
lock
stc
dec
xchg
and
mov
lock
(bad)
jbe
sbb
xor
sbb
pop
test
dec
retw
lds
daa
push
inc
ss
imul
pop
push
adc
fstp
dec
pop
pop
call
push
int
jg
push
and
mov
xchg
mov
or
mov
stos
dec
and
adc
pop
push
cmc
xchg
outs
lds
cwde
jbe
outs
jns
aad
push
movs
pop
fs
fadd
loope
sub
ins
int
shr
(bad)
scas
int
out
adc
pop
stos
movs
pop
pop
es
mov
fild
xchg
cmps
add
fld
(bad)
out
sahf
adc
popa
(bad)
fimul
ja
sbb
pop
ret
outs
fld
fimul
pop
(bad)
aam
mov
fisubr
dec
daa
xor
cmp
sbb
sbb
cmp
shl
xlat
leave
lock
imul
add
dec
out
mov
sub
adc
xchg
test
push
and
xchg
hlt
cli
aam
gs
mov
push
lods
sbb
mov
push
aam
mov
test
test
(bad)
(bad)
call
ss
dec
inc
outs
js
gs
mov
dec
call
not
call
stc
das
push
mov
ds
pop
xor
cmp
push
pop
xchg
arpl
cdq
sbb
push
jnp
iret
out
cdq
into
mov
imul
imul
mov
sub
jl
fiadd
js
jo
cmp
sub
or
mov
jmp
push
stos
mov
js
push
sahf
xchg
push
call
or
stc
outs
clc
data16
sbb
aam
push
(bad)
(bad)
sti
retf
push
aaa
ja
stc
adc
sti
out
push
xor
ss
mov
int3
and
pop
mov
xchg
leave
in
out
sub
jmp
std
dec
mov
push
xor
jne
ficomp
pusha
mov
mov
xor
nop
mov
mov
and
push
(bad)
or
sti
hlt
loop
cli
je
std
call
imul
arpl
js
push
aaa
(bad)
jmp
pop
inc
lds
(bad)
in
movs
loopne
movs
fwait
xor
cli
mov
ror
cs
aam
push
shl
dec
and
loope
into
sub
dec
and
cdq
dec
fidivr
lods
(bad)
push
es
mov
mov
int3
xor
cwde
je
aam
push
sub
inc
imul
xor
push
mov
das
mov
pop
cmps
xor
xchg
lock
leave
jbe
aam
dec
aam
pop
jp
add
mov
add
push
ins
clc
mov
not
adc
(bad)
push
cs
xchg
push
pop
jb
and
enter
inc
fucomp
and
cld
xchg
add
test
lods
jne
xchg
cmp
test
jne
sbb
add
mov
push
repz
jg
int
shr
push
pop
mov
push
in
test
es
int3
dec
and
in
ins
jmp
push
sbb
movs
inc
ins
nop
icebp
pop
gs
inc
jns
jno
fnstsw
inc
mov
cmp
mov
cmp
ins
imul
inc
xchg
adc
add
sub
xor
xor
adc
fld
cmp
sbb
daa
clc
add
scas
cmp
pop
cmps
sahf
pop
xchg
ror
add
jb
inc
push
mov
cld
stos
sub
imul
ret
mov
jae
cwde
popa
scas
or
dec
aaa
call
push
lahf
dec
in
jl
ds
movs
stc
shl
cmp
adc
jmp
js
inc
rcl
push
pop
xor
sub
int3
or
ficomp
add
mov
(bad)
mov
ds
out
mov
imul
test
stos
movs
pop
sub
fistp
out
xchg
or
xor
shl
push
mov
retf
push
mov
test
pushf
push
hlt
push
outs
in
cmp
mov
pop
add
xchg
pop
ret
adc
mov
lea
jmp
rol
or
lahf
test
xchg
or
je
push
or
in
add
mov
fwait
or
dec
mov
dec
lea
fisub
jmp
and
cmc
sub
call
fnstenv
mov
shr
nop
mov
scas
cmps
cmc
call
mov
ja
pop
aam
ret
adc
push
pushf
test
inc
scas
in
imul
fnstcw
mov
xchg
js
add
xchg
out
xlat
(bad)
outs
push
xchg
outs
mov
(bad)
cli
xor
inc
js
sub
cmps
sar
idiv
popf
out
aam
stc
jno
rcr
mov
(bad)
push
fadd
mov
sub
dec
add
mov
jmp
push
scas
dec
jp
jns
mov
mov
cmp
mov
sub
clc
retf
cmp
pop
cmp
sub
pop
outs
loopne
ss
mov
getsec
fisub
std
pop
mov
dec
fldenv
mov
and
mov
xlat
cmp
pushf
sbb
push
jp
(bad)
icebp
jo
sbb
add
mov
push
push
or
mov
jne
mov
xor
or
or
xchg
cmps
enter
sahf
scas
loop
outs
sub
ret
pop
cmps
mov
mov
mov
pushf
leave
cmp
mov
lahf
jae
inc
pop
cmp
nop
xor
mov
push
aaa
scas
js
mov
jo
cmp
cmp
xlat
add
jecxz
cmp
into
ret
rcr
xor
sahf
ss
loop
test
sar
adc
fcomp
mov
cld
out
jb
pop
add
sahf
sbb
jmp
mov
push
lock
loop
adc
pop
mov
stos
pusha
movs
sbb
push
outs
in
jae
mov
outs
mov
jl
lea
pop
jns
pop
enter
push
pushf
les
mov
xchg
mov
aaa
fisub
call
mov
not
outs
je
out
dec
push
out
cmps
lahf
scas
cmc
dec
or
cmp
shl
cmps
mov
jne
inc
cmp
mov
pushf
vmread
mov
ret
xchg
sub
inc
adc
pop
or
cmp
test
mov
je
arpl
sbb
push
jb
sbb
jle
or
lods
into
dec
es
loopne
or
and
retf
rcl
fwait
adc
das
sbb
inc
inc
pop
sbb
push
xchg
jo
scas
xchg
in
cmps
pop
(bad)
lds
push
or
iret
inc
adc
outs
sub
call
xchg
out
jle
push
test
(bad)
mov
mov
adc
mov
mov
sbb
es
xchg
push
pop
mov
or
mov
jge
cmp
mov
push
outs
jnp
and
popa
pop
in
jnp
pop
jl
sbb
push
outs
mov
sbb
or
mov
push
xor
mov
shl
sbb
std
pop
rol
sub
or
inc
adc
call
fistp
mov
mov
fbld
jle
cmc
add
cld
xchg
bound
int
add
and
fmul
(bad)
cwde
mov
shl
xchg
adc
mov
arpl
jmp
or
xor
xchg
pop
sbb
pop
cdq
sti
enter
bnd
cli
outs
test
not
mov
push
add
mov
mov
test
or
push
inc
xor
mov
mov
and
out
mov
sub
cwde
dec
cmp
cmps
adc
fs
xchg
mov
fs
mov
les
adc
imul
xchg
mov
xor
mov
dec
xchg
rol
sbb
sahf
lods
movs
cmp
sbb
mov
mov
xchg
xchg
mov
push
setae
(bad)
mul
mov
das
sbb
xchg
div
stos
cmp
nop
push
dec
adc
pop
xchg
sti
daa
xchg
stos
in
jmp
mov
stc
sub
mov
(bad)
and
ficomp
xchg
mov
mov
out
jb
or
js
mov
in
test
pop
cmps
retf
jge
lods
cdq
adc
ins
mov
xchg
mov
and
xor
xchg
dec
sbb
push
iret
sbb
sub
xlat
test
inc
sbb
mov
jg
sub
gs
scas
and
scas
dec
sbb
mov
and
xchg
das
mul
ret
pop
xchg
add
xor
je
jno
sub
icebp
ret
(bad)
jne
jmp
push
in
outs
fld
rol
jbe
ror
into
and
clc
ficom
xchg
aam
ret
xlat
xor
ret
lahf
xchg
add
inc
mov
int3
data16
cmps
imul
xchg
test
jp
retf
movs
mov
call
js
test
sub
shr
ins
push
icebp
pop
xlat
(bad)
loopne
(bad)
je
in
push
jbe
xchg
ret
mov
add
ins
sbb
(bad)
mov
jle
sub
retf
push
movs
aad
mov
dec
cs
loop
loop
pop
shl
sbb
push
mov
mov
or
xor
or
sub
jge
dec
mov
add
lock
lods
and
les
std
adc
in
adc
xor
ret
jno
std
inc
sahf
arpl
push
fisubr
jns
cmp
jae
sub
cmp
xchg
pop
cmps
mov
xchg
push
jb
fld
push
add
gs
cmp
lods
sbb
out
push
fisttp
fldcw
(bad)
out
test
sti
and
lods
mov
dec
dec
inc
dec
lods
sub
int
inc
std
leave
and
add
ds
jmp
jne
mov
pusha
xor
push
dec
jno
lea
push
mul
mov
out
test
shl
retf
adc
jle
or
out
imul
xchg
js
mov
xchg
outs
ror
push
sub
sbb
push
rcr
dec
nop
pop
adc
arpl
push
inc
add
mov
jo
leave
adc
test
dec
xchg
and
sub
cmps
fst
fwait
adc
and
loop
rcr
push
sub
shl
and
aas
sub
push
sub
dec
ds
cmp
test
add
lock
xlat
les
push
inc
call
sbb
sub
mov
call
in
jo
test
std
sub
add
push
je
int
inc
popf
lods
(bad)
fist
test
inc
mov
xor
dec
sub
pushf
or
mov
or
or
dec
ja
push
pop
in
xor
pop
cld
mov
mov
xor
xchg
mov
mov
mov
fstp
add
adc
inc
movs
stos
loop
xor
dec
pop
pop
ret
adc
int3
pop
pusha
dec
fstp
stc
dec
enter
call
gs
cmps
loop
rol
sti
mov
jno
dec
mov
push
jl
and
cmp
call
call
(bad)
mov
fs
sbb
pop
mov
inc
jns
and
push
sahf
mov
jne
add
out
rcl
jnp
dec
push
sub
push
pop
or
and
pop
dec
out
scas
sbb
and
xchg
ins
cdq
nop
scas
int3
lds
mov
into
fcom
mov
scas
movs
add
sbb
sub
lods
push
mov
daa
pop
inc
iret
mov
push
cmp
ficomp
das
popf
inc
ret
adc
aad
imul
stc
jnp
dec
xor
or
xchg
popa
xchg
push
nop
aam
xor
jo
mov
push
ficomp
cwde
jae
lea
mov
in
fisubr
test
sahf
int3
imul
lods
add
ins
(bad)
push
add
nop
dec
int
push
sbb
xor
and
dec
ror
mov
cmps
dec
and
or
jne
xor
inc
lock
xor
repz
(bad)
loope
not
adc
retf
jbe
loopne
or
movs
call
pushf
push
xchg
arpl
push
int
test
inc
aaa
jae
dec
test
inc
pop
jbe
test
push
mov
xchg
mov
mov
add
or
cmp
idiv
jmp
or
mov
xchg
iret
pop
mov
pop
xor
aad
aas
cs
test
les
bound
inc
xchg
nop
in
sub
cld
int
fidivr
adc
mov
xchg
mov
scas
les
aaa
xchg
jo
mov
inc
jecxz
push
pop
pop
das
cmps
cli
ja
data16
sub
jecxz
nop
data16
repz
or
xchg
and
pop
dec
jmp
pop
data16
retf
add
leave
idiv
test
or
mov
fwait
adc
inc
int3
int3
(bad)
in
push
daa
xor
or
mov
gs
cmp
lock
and
add
ret
xchg
cld
mov
xchg
cli
movs
arpl
(bad)
aad
aam
outs
cmp
inc
test
mov
(bad)
shl
sar
pop
adc
push
mov
pop
retf
sub
dec
dec
rcr
push
adc
leave
fbstp
movs
rsm
adc
sub
call
icebp
arpl
enter
xchg
rol
and
ret
inc
fmul
cmps
jmp
xor
loop
inc
mov
in
icebp
push
not
dec
mov
icebp
xchg
pop
xlat
daa
into
sti
pop
and
pop
pushw
mov
out
fnstenv
mov
mov
xchg
outs
pop
mov
jg
push
push
sub
mov
sub
call
xchg
sub
xchg
and
clc
dec
call
adc
sub
(bad)
mov
inc
int
sub
das
push
jnp
xor
in
into
pushf
and
sbb
call
(bad)
fdiv
push
(bad)
fsubr
icebp
lods
jl
pop
push
xchg
test
and
mov
ss
mov
mov
mov
imul
cwde
cmp
ja
mov
mov
mov
imul
dec
loopne
mov
hlt
ja
adc
jne
mov
pop
(bad)
sbb
inc
clc
mov
sbb
add
fimul
mov
inc
mov
mov
jns
rol
pop
sbb
int
nop
in
gs
mul
add
sbb
adc
mov
loope
cmp
ret
mov
mov
and
adc
fisttp
mov
mov
je
or
popf
cmpxchg
dec
xchg
sub
rol
push
movs
pop
lock
dec
mov
fwait
jno
adc
int3
fs
adc
xor
and
add
cmps
xor
pop
add
fimul
jmp
into
lods
hlt
add
aad
cmp
xchg
aaa
add
push
xchg
push
xor
xlat
jno
clc
mov
xor
pop
fcmovbe
(bad)
ss
pop
cmps
gs
push
das
xchg
es
mov
sub
or
test
push
outs
(bad)
bsf
test
jge
aas
jns
popa
push
jns
in
and
add
fwait
daa
sbb
dec
imul
mov
adc
mov
or
xchg
aad
(bad)
jbe
inc
iret
mov
mov
out
mov
mov
jle
cmp
sub
cwde
xchg
jge
sub
sahf
add
xchg
adc
pop
mov
jg
or
jecxz
fdivp
ret
pop
adc
adc
sbb
xchg
mov
pop
fist
xchg
jmp
in
cmps
xchg
jo
test
jbe
xchg
xor
data16
adc
ret
push
push
bound
stc
lods
jg
(bad)
mov
fidiv
push
xchg
loopne
gs
int3
test
jbe
cli
lock
outs
jge
cdq
repz
shl
sbb
xchg
xchg
mov
je
outs
mov
sbb
idiv
and
out
inc
ret
cld
push
mov
mov
lea
(bad)
mov
xchg
cwde
xchg
sub
rcr
sahf
dec
push
jle
gs
or
in
jb
push
mov
gs
in
clc
add
data16
push
cmp
cs
xor
aas
inc
test
mov
adc
cld
and
retf
mov
cmp
loopne
jns
cmp
jp
aaa
out
mov
test
or
xchg
stos
mov
pop
int
xor
inc
test
call
sbb
mov
jl
data16
pusha
cmp
inc
dec
iret
xor
mov
scas
out
sar
sbb
fnsave
outs
jle
fcmovnu
es
pop
pop
mov
loope
or
in
popf
dec
(bad)
mov
push
pushf
mov
mov
and
enter
mov
cmp
lods
movs
xor
xlat
(bad)
in
int
pop
cmp
and
(bad)
cmp
jecxz
lds
xor
sub
outs
push
xor
repz
ficomp
outs
mov
add
pop
cmc
dec
push
mov
cmp
inc
pop
outs
or
shr
lds
adc
test
jno
movs
jae
push
test
mov
pop
lahf
jle
stc
ins
dec
and
aaa
pop
(bad)
xchg
scas
inc
pop
mov
xchg
add
rcl
inc
push
int
imul
pushf
(bad)
aaa
push
test
adc
jmp
pop
jg
mov
into
sar
shufps
js
nop
pop
test
pop
sbb
dec
mov
into
inc
sbb
hlt
jb
bsr
cmp
sub
bound
sahf
(bad)
pop
or
call
mov
xor
pop
mov
repnz
inc
neg
movs
les
sahf
jecxz
ror
push
nop
sar
sar
repnz
loop
mov
push
mov
pop
leave
sbb
(bad)
lds
outs
jge
mov
cmp
add
jb
stc
xlat
push
ss
inc
cld
mov
outs
mov
js
rol
sub
mov
enter
inc
ret
ja
mov
and
call
mov
push
jbe
int
ds
sti
test
xor
pushf
xchg
mov
dec
frstor
push
pop
cmp
add
cmp
(bad)
call
jmp
sbb
mov
and
xor
cdq
inc
imul
push
xor
fmul
jb
in
xchg
into
mov
cmp
mov
ret
dec
mov
jmp
mov
jecxz
mov
inc
outs
sbb
hlt
jae
sbb
jmp
mov
jns
mov
dec
adc
mul
fidiv
dec
in
and
sbb
movs
loop
dec
loopne
rcr
push
mov
call
clc
jno
lea
mov
fmul
dec
clc
mov
adc
cmp
add
dec
sbb
dec
stos
pop
hlt
inc
push
cs
jmp
fcmovu
mov
inc
push
stc
push
adc
pop
fisttp
cmp
sbb
iret
pop
les
mov
arpl
pop
pop
mov
das
mov
lea
out
scas
call
lea
das
imul
xchg
mov
neg
or
cmps
out
dec
int
jb
mov
(bad)
das
lock
inc
pop
pop
xor
sbb
inc
movs
stos
cmp
add
and
sar
mov
pop
aas
and
adc
mov
lods
mov
repz
lock
popa
pusha
mov
add
jbe
push
jle
mov
lock
mov
adc
mov
jp
inc
or
jae
aad
sbb
out
cmp
pop
inc
imul
outs
ds
leave
int
cmp
sub
jae
push
inc
mov
adc
repz
adc
jae
imul
xchg
in
frstor
mul
aad
mov
dec
sbb
adc
jae
add
dec
cdq
adc
sti
push
lods
pop
test
dec
xchg
or
retf
inc
lahf
es
stos
outs
fcomp
adc
jne
js
mov
xor
fstp
push
push
outs
sbb
ja
sub
mov
fsubr
test
iret
call
sbb
xchg
cmp
fiadd
enter
and
push
fs
dec
add
nop
ja
leave
xchg
jbe
mov
inc
in
pop
fucomi
adc
pop
sti
out
loop
test
xor
dec
lods
xor
cdq
cld
push
cmp
cs
daa
mov
xchg
aas
sbb
push
sbb
pop
inc
bndldx
test
test
data16
hlt
cs
(bad)
scas
push
scas
adc
in
mov
xor
jbe
loopne
(bad)
sbb
push
(bad)
or
jl
push
dec
repnz
shl
jmp
jnp
das
cmps
or
lods
loopne
sub
dec
add
in
ja
sbb
sbb
xchg
xchg
pop
fild
push
into
mov
gs
xor
lea
fdiv
dec
mul
xor
dec
pop
mov
mov
push
push
xchg
xchg
(bad)
xchg
mov
push
jbe
hlt
jl
test
cmp
cmp
xchg
adc
cmp
clc
mov
jne
push
adc
dec
xchg
mov
mov
or
push
jp
sahf
sbb
cdq
cmp
pushf
cdq
sbb
cli
mov
mov
sbb
(bad)
sub
cwde
imul
loopne
mov
jmp
imul
or
inc
mov
(bad)
jg
aam
test
mov
scas
cwde
mov
daa
lds
sbb
sub
fild
(bad)
scas
jnp
pop
inc
adc
nop
jl
mov
ins
es
sbb
cmps
daa
loopne
lds
dec
pusha
es
repnz
retf
cmp
arpl
pop
push
push
outs
cmps
sub
inc
cmp
push
stc
sub
cmp
sbb
aad
cmp
mov
push
push
push
not
leave
pop
xchg
dec
push
and
mov
cmc
jle
mov
and
stos
jl
mov
int
iret
rcl
jmp
stc
jo
popf
loopne
dec
fwait
loop
cmps
mov
xor
fwait
push
arpl
movs
mov
pop
cmc
xchg
test
stos
or
inc
cmp
jl
out
out
test
dec
xchg
call
pop
pop
pop
sbb
add
xor
pop
mov
push
fidiv
sbb
sbb
in
mov
popf
std
int
rol
or
add
shl
add
mov
and
cmps
test
and
aaa
call
out
shl
fadd
or
sbb
adc
cli
cli
xor
call
push
xor
ret
rcr
aas
inc
movs
les
or
fadd
push
sbb
jbe
rcl
retf
retf
enter
test
mov
sub
jle
xor
retf
add
push
(bad)
push
push
sub
enter
mov
outs
inc
push
daa
call
adc
mov
xchg
mov
jp
sub
mov
adc
fwait
sahf
ror
mov
shl
sub
pop
xchg
div
or
fwait
cld
ficomp
add
call
xchg
sahf
xchg
lods
add
adc
outs
dec
enter
lds
loop
outs
pusha
xlat
mov
cmp
xor
dec
lea
std
jmp
push
cmps
lea
or
inc
int3
test
lods
mov
sbb
retf
push
mov
sub
sub
mov
cmp
add
sub
xlat
pop
ds
mov
into
dec
cs
sub
cwde
dec
xchg
sbb
inc
pop
bnd
fimul
dec
fild
push
sbb
int3
loop
dec
and
add
sbb
adc
jge
inc
jmp
push
in
shl
inc
cmp
lods
mov
dec
add
push
mov
imul
lods
imul
dec
test
push
arpl
movs
test
mov
lods
jge
cmp
hlt
mov
hlt
int3
push
jg
adc
cmp
ror
mov
ds
cli
xchg
cmp
(bad)
ja
sbb
scas
mov
vaddsubps
and
repnz
jnp
adc
adc
adc
sbb
(bad)
int3
mov
dec
imul
in
jg
pop
les
cdq
adc
and
xchg
cld
in
leave
jmp
fwait
dec
cmp
ffree
jbe
cmp
mov
push
cmp
aaa
nop
sub
lock
push
push
scas
imul
clc
adc
imul
daa
and
adc
mov
sub
leave
push
xlat
aam
jp
ror
dec
dec
popa
(bad)
cmp
bts
lock
loopne
stc
mov
mov
mov
into
ret
jle
hlt
mov
or
cmp
retf
pusha
or
sub
mov
inc
mov
mov
jl
das
xchg
mov
mov
daa
into
repnz
das
xchg
sti
aam
aad
call
cli
out
sbb
lods
xchg
xchg
xor
test
icebp
jbe
cs
loopne
xor
and
push
enter
or
push
sti
push
mov
push
sbb
cmp
push
and
icebp
dec
or
mov
jmp
imul
imul
pop
adc
aad
out
xlat
and
lock
into
xlat
ror
xor
mov
add
pop
(bad)
lock
fnstcw
or
aam
xchg
push
icebp
repnz
mov
out
sti
push
ins
jnp
test
in
pushf
push
cmc
or
ret
push
rol
cwde
std
mov
and
inc
jmp
mov
aam
push
adc
cmp
fidivr
jg
rcl
sbb
test
call
dec
cld
repz
and
pop
adc
cld
inc
and
ret
mov
xor
repz
add
(bad)
mov
xor
sbb
leave
xor
fiadd
ins
pop
xchg
lods
cmp
rcr
fist
and
sbb
inc
push
jle
lods
cld
dec
mov
jge
inc
xor
mov
ja
cmc
in
xchg
jno
or
std
jecxz
xchg
push
dec
sub
cmp
fdivr
and
jnp
add
cmp
les
dec
sbb
repnz
jno
bound
ds
mov
xor
or
ficomp
xlat
cmps
leave
sti
sub
xor
pop
dec
jge
jg
or
sub
fdiv
inc
imul
and
adc
and
(bad)
adc
mov
pop
int3
or
fdiv
shl
sbb
in
(bad)
ror
jnp
shr
dec
inc
mov
icebp
xchg
std
mov
lds
xchg
jb
bound
(bad)
pop
mov
xor
pop
out
outs
and
lock
xlat
sahf
scas
cs
xor
retf
in
pop
fsubr
jno
fnstenv
jbe
(bad)
mov
mov
mov
fcmovnu
push
repnz
retf
movs
dec
ins
add
out
fnsave
pop
ret
(bad)
xor
mov
addr16
shr
sbb
mov
stos
rol
xor
adc
rcr
repnz
inc
cs
cli
and
pop
mov
aad
pop
cmp
arpl
dec
mov
or
jge
pop
jge
dec
popf
inc
cdq
pushf
test
cmp
and
add
xor
xchg
pop
test
int3
outs
pop
es
(bad)
mov
and
dec
mov
aam
(bad)
mov
dec
sub
adc
and
clc
lea
movs
ror
push
sbb
or
in
mov
repz
xchg
mov
into
in
data16
mov
add
cmps
fwait
shl
mov
out
outs
or
jle
retf
fist
test
ss
push
inc
or
shr
cld
sbb
or
test
addr16
(bad)
gs
push
xor
sub
test
rol
jno
jmp
cmp
int3
dec
scas
jb
mov
pcmpeqd
jno
pop
sbb
xchg
and
les
xlat
fcom
not
fild
jne
mov
add
std
jns
ret
dec
(bad)
retf
lods
outs
inc
dec
dec
xchg
mov
push
cmp
xor
ret
imul
iret
test
xor
push
in
jb
sbb
xchg
jl
fwait
idiv
push
adc
lahf
cmps
into
shl
push
inc
scas
popf
cmps
pop
icebp
clc
(bad)
(bad)
mov
dec
inc
mov
add
bound
xchg
mov
or
imul
xor
aam
mov
cli
imul
push
(bad)
pop
mov
inc
imul
mov
shr
fs
(bad)
push
inc
dec
das
and
cdq
push
xchg
das
lea
(bad)
popa
adc
mov
shr
in
mov
add
stos
outs
nop
(bad)
jecxz
cld
pushf
retf
std
pushf
sbb
and
mov
test
inc
inc
push
mov
sub
fwait
jmp
popf
xchg
push
and
hlt
cmp
dec
xchg
add
es
(bad)
push
dec
repz
fcom
cmps
imul
call
mov
jl
lods
xchg
jae
push
pushf
imul
or
das
les
and
test
scas
ins
mov
mov
and
aas
imul
test
retf
js
in
inc
push
xchg
add
test
repnz
fld
stos
(bad)
sbb
and
shr
hlt
and
sub
cmps
ds
add
arpl
mov
and
xor
test
out
aam
or
inc
fwait
xor
jae
pushf
scas
xor
iret
cs
xlat
sbb
sbb
and
xor
mov
xchg
shr
lods
fidiv
movs
and
adc
and
addr16
fs
dec
xor
pop
leave
out
jno
dec
xor
out
ins
sub
clc
adc
nop
ja
loop
mov
inc
ds
fisttp
jmp
cmp
push
pop
cvtpi2ps
xor
mov
rol
cmc
cwde
iret
shr
es
gs
or
dec
xor
jmp
mov
imul
loop
(bad)
ror
mov
sbb
mov
or
ss
and
mov
adc
stc
je
inc
xchg
sub
fisub
fimul
inc
dec
adc
imul
das
mov
mov
adc
lods
dec
xchg
xor
dec
dec
mov
add
push
push
out
cs
imul
retf
shl
scas
addr16
xchg
pop
xor
xor
(bad)
or
jae
jmp
or
cwde
push
loopne
stos
dec
sbb
jmp
in
not
add
(bad)
dec
and
out
sar
call
rcl
xchg
rol
dec
add
dec
addr16
pop
inc
sbb
xchg
ins
or
push
and
mov
loopne
push
pop
add
fidivr
test
mov
sub
fs
push
sub
call
push
sub
aad
(bad)
paddsw
or
and
stos
sbb
int3
mov
mov
inc
repz
and
test
adc
sub
push
mov
inc
rcr
call
fisubr
bound
push
(bad)
push
cmp
push
pop
dec
mov
and
sbb
xor
jl
ds
jge
push
jmp
adc
cld
mov
out
in
dec
add
jle
lahf
or
jl
xor
movlps
jae
ss
ret
push
shr
fs
cmp
lahf
mov
pop
xchg
sbb
(bad)
(bad)
add
shl
hlt
rcr
ror
pop
lahf
cmp
sub
add
adc
and
cwde
std
adc
les
or
sbb
pop
sub
mov
jbe
data16
test
push
loopne
or
fwait
pop
(bad)
add
mov
or
xchg
jmp
imul
js
shl
lods
inc
add
ja
imul
and
xor
xchg
mov
out
dec
mov
xchg
(bad)
xor
out
and
mov
loop
cwde
mov
add
test
mov
xor
vmread
xlat
push
fimul
inc
dec
mov
xor
push
push
add
(bad)
push
cwde
jmp
inc
shl
push
sbb
aas
dec
xchg
leave
mov
push
pop
and
cmp
xor
jo
inc
test
cmp
into
push
xchg
push
outs
adc
popa
mov
arpl
cs
sahf
nop
or
je
jle
daa
stc
mov
xchg
pop
cmps
je
inc
mov
adc
in
cli
enter
test
pop
inc
retf
mov
adc
pop
shl
mov
das
or
cmp
cmps
(bad)
jns
rcr
sahf
mov
pusha
jg
test
mov
in
dec
shr
call
inc
mov
adc
cmp
stc
sbb
xor
sbb
in
push
leave
pop
in
dec
cwde
pop
add
enter
push
aam
hlt
jo
loope
sub
arpl
leave
mov
xor
ins
sub
inc
out
nop
jmp
out
not
inc
stc
repnz
push
sub
jo
call
ror
xchg
les
xlat
inc
mov
xchg
js
cmp
rep
retf
int
sub
jmp
add
sahf
xchg
addr16
push
in
sub
inc
fimul
retf
movs
je
clc
jge
inc
add
add
out
xchg
jns
aas
aaa
jno
push
mov
ret
lahf
pop
ja
mov
and
push
mov
jno
mov
test
scas
push
xor
loop
pop
dec
aad
push
pop
test
or
clc
(bad)
shl
mov
push
sbb
and
xor
fs
sbb
sti
cmp
or
dec
add
sub
dec
dec
fwait
xchg
(bad)
cld
les
stos
pusha
jb
fadd
jmp
inc
push
popa
retf
(bad)
and
lahf
sub
jae
test
mov
dec
int
mov
iret
sub
retf
pusha
shl
cmp
hlt
(bad)
data16
pop
pusha
push
jb
sbb
xchg
ins
push
mov
mov
inc
cmp
xchg
sti
clc
jns
fmul
sub
inc
sub
pop
or
push
cmp
lahf
je
add
jb
jg
lds
mov
fcmovb
jne
xchg
cmp
pop
inc
dec
les
je
imul
mov
xor
and
pop
pushf
adc
and
popa
cmps
imul
sbb
je
pop
dec
and
and
or
fmul
stos
ret
es
dec
push
jle
xchg
repz
cdq
cwde
daa
xor
movs
cmc
hlt
(bad)
jmp
repnz
xchg
xchg
pop
mov
aas
push
push
pop
sub
xchg
cmp
fdivr
std
pop
repz
test
sbb
mov
(bad)
rcl
retf
inc
push
outs
xor
xchg
push
xchg
push
jae
mov
sbb
rcr
pop
dec
(bad)
mov
sub
out
mov
fdiv
pop
push
pop
pop
inc
inc
aaa
jmp
dec
sbb
xor
rol
mov
daa
xor
sti
inc
adc
mov
out
dec
lahf
dec
enter
lods
shl
sub
or
dec
push
and
mov
(bad)
aad
shl
sub
bound
pop
dec
dec
jns
ds
pop
cmp
mov
mov
div
fsubr
std
and
pop
iret
or
neg
xor
mov
mov
sub
ffreep
or
popf
arpl
push
mov
adc
jge
adc
xchg
and
dec
push
pop
shr
je
mov
lods
icebp
out
push
mov
inc
clc
xor
mov
sbb
lods
ror
pop
jle
out
shl
mov
or
fbstp
jne
cmp
test
xchg
fcomp
xchg
pop
ret
je
cld
cmp
fmul
or
inc
cmp
or
jge
sub
shr
adc
push
div
mov
xchg
adc
in
sbb
addr16
je
stos
repnz
out
xchg
stc
pop
mov
out
loope
mov
mov
in
retf
xchg
je
ret
stos
jp
shl
pop
adc
hlt
enter
stc
add
jmp
mov
mov
sbb
popa
mov
push
xchg
scas
jnp
pop
jp
test
mov
(bad)
aad
retf
sbb
xlat
cmp
stc
sti
nop
aas
pushf
sbb
pop
lea
dec
push
pop
jmp
stos
mov
mov
das
sbb
inc
mov
mov
iret
inc
sub
push
xchg
mov
sub
leave
jmp
sahf
and
out
jg
push
loopne
push
vmovsldup
in
stc
popa
dec
fsubr
jb
es
jmp
test
xor
adc
fst
pop
cmps
hlt
dec
pop
cmps
jbe
add
out
inc
cdq
ins
test
jle
fistp
daa
loop
cld
jo
jae
mov
mov
push
pop
scas
scas
sub
jl
call
fst
xchg
jmp
sbb
cmp
(bad)
mov
loop
jge
push
xchg
lods
in
push
sti
cmps
jae
and
or
cmps
scas
jnp
aaa
adc
in
inc
sub
test
pop
icebp
nop
sub
mov
xchg
xor
imul
jge
xor
jbe
jae
lods
imul
or
fld
mov
icebp
add
ds
popa
in
sahf
(bad)
jno
jle
nop
out
cdq
movups
pop
js
jmp
out
dec
in
outs
xchg
jecxz
mov
pop
fidiv
lods
fdivr
mov
sbb
or
add
lods
cmps
fnstenv
inc
out
in
dec
mov
sahf
cmc
int
addr16
fild
rcl
outs
cmp
movs
adc
(bad)
and
xchg
mov
pop
xor
loope
mov
icebp
dec
fistp
daa
fistp
or
dec
and
mov
out
jg
(bad)
xor
rcr
sub
test
mov
pop
out
sbb
(bad)
pop
jecxz
xchg
pop
xchg
arpl
popa
out
add
and
adc
jb
and
or
cmp
stos
push
and
cli
out
cld
jo
pop
into
inc
call
(bad)
in
cmps
das
stc
(bad)
dec
ret
enter
je
cdq
xchg
fst
je
adc
addr16
pop
cdq
xor
cld
les
cmc
cmp
cmc
mov
push
ins
ret
fidivr
pop
daa
icebp
ss
jg
cdq
loope
(bad)
sub
or
dec
or
pop
push
jle
sub
iret
jns
or
dec
inc
cli
movs
lahf
clc
mov
aad
stc
call
dec
mov
jbe
je
mov
inc
shl
push
xchg
lds
stos
cmp
ins
ins
push
aas
cmp
outs
sub
mov
or
sbb
sti
adc
dec
mov
inc
(bad)
xchg
aam
movs
sbb
inc
shl
lods
ret
in
(bad)
out
and
cld
xchg
(bad)
jmp
mov
mov
(bad)
pop
xor
pop
into
(bad)
push
ds
out
pushf
sub
mov
xor
xchg
pop
and
push
movs
scas
cmp
jnp
push
push
(bad)
pop
sub
cmp
ins
cmp
aad
test
lock
or
es
fiadd
sbb
and
mov
int3
inc
mov
ret
pop
cwde
cmp
dec
rcr
aad
movs
inc
pop
pop
mov
mov
fwait
loope
jns
sub
movs
mov
xchg
mov
pop
scas
xlat
call
or
shl
jle
inc
into
adc
inc
and
(bad)
adc
out
hlt
ja
mov
lock
cmp
imul
ret
stos
add
stos
iret
cmp
dec
sub
xchg
out
lock
cmps
int
aaa
aas
cli
data16
sbb
mov
mov
dec
icebp
jmp
jae
movs
sbb
adc
movs
pop
sub
xchg
fcos
fcom
mov
sar
dec
xchg
pop
fdiv
test
retf
ja
push
xchg
(bad)
mov
cdq
loopne
rcl
adc
arpl
xor
std
and
push
into
mov
mov
mov
enter
outs
lods
add
dec
add
pop
inc
fdivrp
je
xchg
push
cdq
mov
sbb
add
and
fsub
outs
add
jae
or
retf
mov
cmp
ss
adc
pop
pushf
test
retf
xor
or
pmulhuw
neg
mov
mov
mov
or
call
fstp
out
add
adc
pushf
add
pop
jne
or
jne
fidiv
fwait
sub
out
pushf
mov
cmp
mov
and
inc
fwait
movs
xor
mov
xor
jo
adc
mov
inc
sbb
xor
mov
fs
inc
movs
and
inc
adc
and
or
xor
lods
aad
mov
popf
inc
sub
push
test
das
jo
in
fnstenv
clc
or
pop
cmps
xor
adc
mov
adc
or
push
push
mov
dec
out
clc
sub
retf
(bad)
loopne
retf
iret
ja
leave
push
mov
mov
cmp
pcmpeqw
or
fstp
call
mov
lea
sbb
pushf
inc
xchg
leave
cmps
rcr
rcr
push
dec
xchg
adc
idiv
jns
xor
mov
sti
out
bound
sub
or
cmps
in
jg
cmps
shl
mov
push
repz
cwde
jge
ret
cmps
test
dec
mov
add
xchg
test
ins
es
xor
mov
push
push
xchg
rcl
adc
mov
int
fbstp
jne
mov
adc
xor
xor
inc
add
dec
push
jle
sbb
outs
jb
sub
pop
imul
sahf
dec
jns
xchg
add
aas
sub
inc
movs
jecxz
fbld
jge
mov
movs
fcomip
jnp
and
mov
mov
push
ret
dec
mov
push
push
push
aas
repnz
(bad)
jbe
pop
enter
xchg
xor
adc
adc
fsubr
loopne
je
pop
add
mov
ja
aaa
pop
or
jne
jmp
sub
push
dec
jp
sub
push
pop
and
fs
pusha
dec
cmps
inc
push
xor
add
cs
xchg
jp
sbb
pop
outs
data16
jecxz
cmps
mov
(bad)
jo
pop
sub
mov
and
mov
jg
xchg
sbb
daa
mov
push
sbb
and
add
into
js
aas
mov
push
test
fwait
xchg
cmp
es
outs
adc
and
xor
mov
cmp
jae
or
in
aad
inc
mov
pop
xlat
stc
gs
push
stos
or
cmp
and
sub
test
test
jae
pop
adc
adc
sub
ret
xor
jmp
ins
jnp
rcl
push
inc
mov
jp
sub
das
mov
mov
outs
sbb
jne
xchg
jne
mov
mov
cmps
addr16
pusha
(bad)
pushaw
lods
xlat
movs
pop
jge
cwde
inc
mov
test
repz
cli
cdq
sub
sahf
push
xchg
in
ret
mov
repnz
out
call
mov
add
in
sbb
mov
int
(bad)
(bad)
mov
push
out
mov
pop
sub
xor
movs
hlt
stos
or
push
sti
(bad)
pop
or
lods
push
outs
ds
push
mov
ja
rcl
ffree
pop
test
push
inc
mov
cmp
mov
jg
jmp
into
jns
push
pop
or
cdq
(bad)
cmps
jmp
por
clc
sub
out
fcomp
std
int
mov
xchg
test
lds
pop
push
jmp
jmp
xchg
nop
jmp
mov
jbe
call
stos
xor
mov
stc
cmp
and
pop
int
push
jb
sub
jae
push
adc
dec
mov
xor
push
shr
std
bound
out
fisubr
mov
in
mov
ds
daa
repnz
xor
mov
(bad)
lock
in
into
xor
mov
dec
test
pusha
xchg
sub
fimul
(bad)
popa
mov
dec
or
ds
push
mov
mov
jecxz
fnstcw
sbb
(bad)
mov
pop
push
sti
cmc
and
push
sub
das
scas
add
sar
in
shr
push
ins
add
or
sbb
mov
(bad)
cdq
mov
fcom
pop
jmp
ret
adc
cmc
gs
test
fisub
sahf
jg
aad
mul
xchg
scas
fwait
xchg
pop
mov
or
test
mov
jmp
dec
es
and
adc
jmp
inc
fmul
cmp
xor
mov
cmps
add
aad
push
out
or
dec
cmps
and
xchg
xchg
and
or
ret
out
cmc
les
lock
retf
cmps
sti
pop
dec
(bad)
ins
mov
iret
pop
in
jecxz
aad
dec
call
adc
jmp
mov
sub
pusha
pusha
pushf
push
out
xor
jmp
mov
jno
or
loopne
inc
rcl
lods
imul
cs
xor
nop
aam
mov
fmul
push
mov
fcomp
fistp
pop
or
cld
pushf
adc
jnp
and
out
push
aas
je
cmp
and
repz
mov
(bad)
aam
(bad)
inc
fs
in
test
mov
mov
or
jne
jmp
or
loope
or
pusha
test
(bad)
cwde
mov
jle
adc
lods
xchg
xrelease
jmp
mov
mov
pop
add
dec
or
jne
mov
in
xchg
pop
jne
sbb
gs
loope
mov
jmp
out
int
pushf
aaa
and
cmp
jmp
push
cmps
jp
mov
hlt
jl
pop
cdq
cwde
in
call
pmuludq
push
(bad)
cmp
ficom
fdivr
jno
imul
loope
sub
mul
sbb
data16
fwait
mov
inc
xchg
xor
movs
adc
xchg
xor
jbe
or
fwait
daa
fwait
or
rcr
rol
mov
xor
dec
mov
adc
stc
or
cmps
pop
mov
nop
dec
sbb
xchg
mov
and
jnp
aad
(bad)
jns
movs
inc
xchg
jg
jmp
xor
push
sub
xchg
(bad)
mov
inc
pop
inc
mov
out
push
popf
shr
push
repnz
lods
and
mov
push
fsubr
iret
mov
and
xor
push
or
pop
xor
out
jle
out
adc
inc
dec
dec
mov
ja
fadd
jno
cmp
pusha
cli
mov
push
push
(bad)
xchg
test
push
lock
mov
movs
jmp
stos
sbb
push
xor
xor
mov
jae
(bad)
or
dec
scas
test
lods
cwde
loopne
cmc
xchg
movs
int3
outs
xchg
inc
cmc
sar
test
push
and
jmp
mov
cmp
pop
mov
fmul
dec
inc
add
es
push
inc
mov
pop
fcom
xchg
jne
loop
sub
in
cld
je
ins
imul
pop
stc
test
jle
pop
fldenv
lods
sbb
scas
arpl
clc
xchg
push
icebp
jecxz
pop
push
hlt
xor
push
mov
movs
pop
aas
sar
retf
clc
(bad)
out
in
dec
outs
ins
cmp
cwd
cmp
pop
(bad)
out
gs
pop
cmp
cmp
push
xchg
test
out
inc
das
push
jge
neg
sar
mov
cmp
aam
retf
fstp
nop
in
sub
outs
push
xor
scas
jbe
and
and
aas
mov
push
(bad)
(bad)
rol
std
cmc
dec
mov
add
and
aad
fwait
in
pop
xchg
cwde
outs
or
or
test
mov
in
adc
out
sub
ins
test
mov
jo
fild
push
cli
ins
lods
pop
cmp
shl
pop
mov
mov
test
fldcw
pop
imul
lods
popa
emms
push
(bad)
fdivr
and
xor
je
or
dec
scas
retfw
push
or
ret
adc
push
sar
xchg
cmp
daa
mov
dec
mov
add
repz
aaa
push
xchg
in
leave
scas
test
xchg
jg
and
mov
ret
push
xor
shl
or
jnp
mov
out
invd
inc
aas
lahf
mov
xchg
stc
mul
pushf
xchg
and
mov
inc
out
pop
mov
std
jo
push
fwait
arpl
sub
jle
xor
and
out
sub
cmp
movs
jmp
out
mov
sub
(bad)
sete
rcl
arpl
xor
push
js
aam
in
cmp
retf
sbb
stc
repnz
pop
and
addr16
dec
add
jae
pop
ss
jne
cmp
xlat
and
aam
cdq
fcmove
js
sbb
fwait
push
arpl
mov
adc
scas
sub
in
mov
push
data16
cmp
dec
mov
fdiv
fbld
xchg
(bad)
fild
ds
fild
ins
mov
cwde
add
ins
pop
shl
sti
jnp
mov
popf
int
sti
ret
mov
inc
push
cld
mov
add
sub
std
push
jo
jnp
xchg
push
rcr
cmp
clc
pop
mov
push
pop
dec
xchg
mov
sti
and
mov
ds
xor
fs
jb
fsubr
dec
jno
in
and
add
sbb
inc
pop
sbb
sub
xor
call
push
add
pop
xor
xchg
lahf
pop
mov
rcl
inc
cdq
add
ss
fldcw
lods
jl
bound
lahf
adc
adc
sub
int
clc
jae
ins
and
stos
add
test
inc
sub
push
sub
jns
mov
push
add
in
mov
sar
movs
mov
fsub
ret
xchg
leave
and
mul
mov
mov
fisub
leave
dec
push
int
mov
xchg
mov
mov
addr16
fist
jmp
outs
pop
rol
out
mov
fild
je
sbb
adc
jge
rol
push
popa
inc
in
iret
sub
shl
in
cs
mov
ret
loopne
sbb
fs
repz
jb
jae
xchg
sbb
pop
sub
fs
mov
mov
test
stos
into
mov
pushf
dec
push
mov
add
pushf
push
xchg
jnp
add
fld
fimul
adc
jl
inc
daa
adc
jnp
push
dec
mov
inc
ja
push
dec
jae
jb
xlat
mov
sbb
mov
jmp
aas
aaa
mov
inc
gs
loop
rcl
ret
outs
mov
sbb
fbstp
popa
sbb
fcmovb
retf
imul
cwde
sub
ins
aas
mul
and
push
sub
aam
(bad)
loop
div
int
mov
enter
xchg
mov
repz
aas
mov
cmp
in
jb
data16
aad
(bad)
jl
push
cmps
into
jl
dec
lods
shl
dec
js
arpl
popa
daa
adc
scas
cmp
sar
inc
xor
mov
sub
sti
pop
mov
inc
mov
dec
ror
dec
rcr
mov
mov
sub
popf
xchg
mov
pop
enter
lock
in
(bad)
sti
loopne
rol
jns
dec
shl
shl
ss
les
cdq
jl
mov
mov
rol
sub
and
mov
pop
int3
xor
sub
sahf
xor
mov
fnstcw
arpl
push
dec
daa
lods
push
sub
xchg
lods
clc
sub
sbb
dec
sub
dec
dec
mov
movs
jl
sbb
(bad)
mov
shr
sbb
adc
pop
test
dec
jmp
mov
stos
dec
mov
inc
dec
xchg
add
adc
fidiv
ds
(bad)
jmp
test
retf
aaa
jmp
popa
das
popa
add
aam
rol
cdq
leave
imul
adc
faddp
or
cmp
loopne
aas
adc
gs
jg
push
pop
retf
pop
std
jge
jae
add
ud0
xlat
jecxz
outs
(bad)
and
fnstcw
fwait
push
js
enter
hlt
fisub
dec
sub
xchg
daa
jl
enter
loopne
rcl
push
gs
out
xchg
mov
cwde
mov
sub
sbb
pop
(bad)
(bad)
repnz
je
mov
xchg
xor
lods
inc
xchg
cmp
xor
sbb
arpl
out
stos
jle
xchg
xchg
or
(bad)
sub
inc
mov
adc
xor
loopne
not
dec
fstp
fld
dec
push
jg
leave
xchg
pushf
sub
mov
push
int3
(bad)
xor
icebp
into
out
les
or
stc
push
imul
outs
jb
scas
ins
xchg
bnd
inc
and
mov
mov
outs
or
xchg
add
sbb
rcr
ret
xchg
clc
ins
imul
mov
or
sbb
jbe
pop
ins
or
lock
loop
pop
push
adc
add
mov
js
add
pop
mov
call
dec
(bad)
(bad)
push
jp
cmp
cmp
cdq
or
mov
in
out
repz
sbb
es
pop
add
mov
mov
xor
mov
push
mov
mov
out
pop
stos
sbb
xchg
clc
psrlq
fwait
nop
and
sbb
cmc
rep
bound
xor
ins
stos
pop
lds
pop
loope
adc
repz
add
rcl
xor
mov
bound
sbb
out
add
mov
and
sti
lods
(bad)
push
push
xlat
fnstenv
sub
or
ins
icebp
pop
push
sub
iret
scas
sub
push
mov
mov
stc
(bad)
mov
stos
push
ss
(bad)
loopne
push
in
dec
jne
cmps
pop
mov
in
bound
sahf
jnp
mov
cmps
mov
sub
aas
pop
fisubr
repz
dec
pop
test
mov
lock
fild
fsubr
call
sub
lods
xchg
sub
jge
fadd
mov
fcmovnu
sub
js
xor
xchg
dec
repnz
fcmovnu
out
mov
sbb
out
dec
sub
shl
and
jae
or
pop
(bad)
sbb
mov
inc
inc
jae
leave
in
adc
add
stc
imul
in
retf
cli
add
add
outs
fs
push
stos
push
pop
sub
mov
sbb
xchg
clc
imul
jns
mov
xchg
inc
mov
sub
fistp
inc
cmc
movs
call
mov
dec
inc
(bad)
cmp
fmul
dec
fst
jg
cmovp
mov
push
sub
not
push
mov
inc
xchg
adc
mov
retf
popa
ror
push
push
pop
cmp
int
faddp
loopne
jne
mov
xchg
popa
mov
or
cmp
sub
dec
push
fdivr
out
popa
mov
test
push
(bad)
mov
add
sbb
mov
mov
mov
enter
(bad)
cmc
iret
mov
lahf
stos
stos
jecxz
fld
mov
ds
daa
add
outs
outs
shr
or
cmovne
push
aas
inc
jl
jnp
mov
dec
cmp
xor
rcr
dec
xor
and
into
cmps
cmp
jns
sbb
test
xchg
jae
fwait
xchg
loop
aad
push
pusha
xor
cmp
loopne
and
mov
in
cdq
pop
and
sbb
xlat
inc
in
cmp
jmp
sbb
leave
mov
shr
mov
cmp
call
ss
mov
and
das
je
cmps
imul
mov
loope
xlat
repz
push
jmp
test
sbb
pop
dec
lods
jge
adc
test
mov
pop
mov
pop
and
mov
sti
jns
ins
or
in
cs
mov
lea
add
jmp
cmp
sbb
jmp
aas
int
mov
inc
mov
jne
pop
pop
mov
lds
sbb
movs
retf
pop
xchg
cmp
push
inc
sub
lock
sub
out
shl
cmp
pushf
fstp
fcom
mov
sub
add
add
syscall
mov
adc
or
push
jno
lahf
lea
mov
dec
js
dec
in
adc
inc
mov
xor
dec
stc
fucomp
xor
mov
sbb
jg
stos
xchg
xchg
dec
ins
add
push
(bad)
cli
inc
hlt
or
data16
mov
movs
mov
mov
sub
cs
(bad)
mov
or
cmp
sbb
jmp
retf
jae
and
(bad)
lds
lods
xor
(bad)
ins
scas
pop
add
sbb
push
fsub
and
xor
cmp
mov
jae
lods
sbb
iret
sbb
push
aad
(bad)
inc
pop
jle
inc
leave
rol
sub
mov
adc
dec
pop
call
std
bound
out
not
push
push
add
cmc
cmp
in
dec
adc
add
ds
dec
test
xchg
iret
lods
repnz
sti
pop
pusha
pop
jmp
popa
retf
push
cmps
cmps
push
mov
cmp
dec
push
stc
out
jecxz
popf
mov
leave
and
xor
dec
repz
dec
mov
pmaxub
jo
mov
inc
cmp
mov
fcom
push
into
adc
aam
(bad)
push
push
adc
daa
shr
retf
cli
xchg
pop
mov
adc
out
adc
push
add
jecxz
sub
ins
mov
jg
stos
cmps
shl
stos
sub
clc
mov
cmp
repz
mov
add
in
inc
xchg
cdq
fwait
push
lahf
mov
mov
push
arpl
push
into
pusha
xacquire
stos
(bad)
dec
adc
jbe
push
fnsave
adc
outs
add
lods
jmp
xchg
push
jge
mov
mov
cmp
sub
mov
sub
push
pop
push
or
sub
stos
std
imul
sbb
in
or
pop
test
ja
clc
xchg
push
cmp
fisubr
ds
(bad)
(bad)
rcr
xor
jo
cli
push
cmp
pusha
fwait
repnz
dec
test
loopne
faddp
xchg
outs
jmp
shl
and
fsub
sbb
mov
lahf
sbb
ins
retf
test
fs
xor
jecxz
aas
adc
popa
scas
inc
pop
jp
enter
sbb
dec
retf
das
loope
out
sahf
mov
scas
mov
pusha
push
or
mov
push
cwde
dec
mov
xchg
push
pop
lahf
and
movs
pop
sub
cmp
test
adc
mov
outs
xor
sub
add
(bad)
push
push
jmp
lods
push
cmovp
mov
jno
rcr
bound
jo
mov
nop
ins
pop
sahf
js
cmp
in
jmp
scas
add
out
movs
pop
or
add
je
loope
in
mov
in
inc
int3
lea
fidiv
repz
pop
inc
into
div
mov
out
scas
adc
jae
pop
sub
and
enter
fldlg2
dec
inc
ins
push
jno
sbb
mov
jne
dec
call
cmps
repz
pop
add
dec
in
sti
cld
iret
jno
repz
aad
xchg
sub
sbb
add
fs
stc
xchg
dec
inc
dec
inc
test
ficomp
xchg
rcr
push
std
mov
push
mov
call
pop
in
sbb
push
jnp
xchg
mov
out
call
dec
cmp
jae
add
movs
xchg
mov
mov
scas
imul
xlat
sahf
in
lea
inc
stos
fmul
mov
mov
xchg
push
add
push
dec
sbb
cdq
fisubr
sbb
stos
jmp
(bad)
cli
(bad)
push
push
sar
inc
call
mov
cli
aas
push
out
aam
sub
cmps
pushf
inc
xchg
adc
dec
retfw
xor
xor
or
cwde
call
push
jmp
sbb
sbb
jecxz
nop
lds
xor
jno
dec
dec
pop
push
and
pop
cmps
mov
and
fild
inc
shl
inc
adc
cmps
xchg
and
in
dec
jo
adc
add
sub
icebp
call
aaa
dec
or
adc
mov
movs
sub
cmp
mov
jl
push
cs
mov
loop
sbb
cmps
shl
sbb
sbb
ret
add
lds
out
in
lods
scas
sub
out
pop
add
dec
sub
stos
jp
fsubr
ins
ror
xor
push
(bad)
fst
(bad)
cld
sti
push
scas
arpl
and
test
ins
cmp
sbb
enter
or
and
loope
aam
in
mov
sbb
pop
stos
xchg
fisubr
add
gs
fadd
inc
jle
(bad)
lea
lods
jmp
adc
fidivr
and
popf
pop
mov
dec
pop
pop
cmp
push
xor
mov
fs
sbb
cmp
retf
mov
ret
js
ins
lods
gs
adc
lea
sbb
pop
or
fst
lock
inc
push
(bad)
jl
psllw
repz
inc
pop
lods
mov
(bad)
shr
add
retf
mov
rcl
lods
jne
adc
mov
mov
mov
(bad)
xchg
clc
mov
shl
cmc
lods
loopne
add
jbe
fbld
pop
das
loope
(bad)
xchg
pop
test
(bad)
jb
lea
imul
sbb
outs
(bad)
fwait
push
popf
inc
and
mov
lea
stc
pop
clc
ja
or
int
xchg
je
adc
dec
sbb
test
or
fs
jg
mov
mov
pop
add
sbb
shr
sbb
enter
sub
inc
fisub
adc
std
loope
test
mov
dec
jecxz
inc
inc
mov
outs
sar
pop
fistp
xchg
or
sahf
add
aam
outs
cmps
daa
or
mov
mov
ins
push
xchg
and
mov
ret
fbstp
sub
(bad)
lock
sub
and
mov
cmp
and
push
call
mov
dec
pop
jo
repz
dec
push
jb
rcr
shl
rol
sbb
or
inc
ret
adc
out
and
and
mov
dec
das
push
popa
dec
loopne
jbe
pop
xor
imul
(bad)
mov
fiadd
pop
jg
dec
inc
cli
fdivr
lock
fcmovu
test
inc
fbstp
out
cs
rcl
cmp
(bad)
jmp
jge
retf
jp
in
xchg
out
fnstsw
xchg
dec
mov
ss
inc
mov
loope
add
pusha
mov
xor
and
mov
movd
push
ret
scas
mov
lods
sbb
popa
mov
inc
pop
jecxz
repnz
int3
mov
(bad)
or
xchg
popf
push
sub
outs
jmp
xor
mov
dec
and
pop
or
leave
mov
scas
xor
je
clc
nop
shr
outs
ja
mov
inc
push
arpl
push
mov
rol
add
pusha
pop
scas
lock
(bad)
pushf
fwait
cmp
adc
test
pushf
sub
js
cmp
mov
jno
xcrypt-cfb
cmps
mov
inc
or
ss
into
das
cwde
daa
mov
ror
ss
in
lahf
(bad)
ja
mov
hlt
(bad)
mov
cmc
(bad)
std
add
pop
inc
pushf
dec
movs
scas
pusha
cmp
cmp
sub
jo
sti
dec
mov
jo
xchg
std
or
neg
nop
js
adc
xchg
mov
lods
test
cmp
mov
test
mov
mov
mov
xchg
mov
mov
jb
or
sub
or
sub
push
shl
into
sub
daa
cmp
sbb
add
or
rol
inc
push
aas
jnp
fs
retf
add
jge
push
add
mov
mov
cmp
mov
xchg
shl
inc
jecxz
xchg
cmp
jge
fwait
fwait
dec
and
jmp
movs
inc
outs
dec
shl
xor
xor
xchg
iret
cli
xchg
inc
(bad)
daa
cmps
pop
enter
ins
cli
cmps
lds
(bad)
out
mov
sbb
loopne
stos
cmp
or
mov
pushf
addr16
xchg
jmp
int3
or
pop
int
addr16
ins
cdq
inc
sub
pop
pop
neg
jbe
call
sub
pop
out
push
push
ret
dec
jb
movs
jb
rcl
(bad)
pop
dec
cwde
xor
cmp
xor
aaa
cmc
xchg
pusha
mov
movs
popa
mov
dec
test
sbb
in
ror
popf
dec
add
inc
cmp
cwde
xlat
pop
dec
out
or
test
xor
shr
mov
nop
pushf
int3
(bad)
or
mov
fiadd
test
mov
bound
nop
fucomi
hlt
mov
or
fwait
jecxz
cmc
ret
xor
and
sbb
pop
or
les
mov
mov
stc
add
jmp
dec
scas
inc
mov
cdq
and
les
or
adc
xchg
movs
loope
(bad)
int3
dec
retf
mov
pop
cmps
adc
je
jae
jmp
repz
cli
lods
sbb
cdq
je
jbe
fsubr
(bad)
and
add
clc
add
das
add
out
ja
xchg
jecxz
nop
lods
mov
arpl
mov
pop
int
xchg
test
jecxz
dec
fidiv
xor
lock
or
and
leave
pushf
popf
sahf
jo
inc
jb
or
jmp
fst
adc
mov
xlat
and
out
add
pop
xor
bound
inc
mov
out
ss
ds
(bad)
jns
mov
push
lsl
adc
inc
mov
fsubr
cmp
inc
dec
popa
fild
test
dec
or
dec
cmp
and
stos
and
dec
enter
out
lds
adc
inc
xchg
fucomp
and
das
in
aam
lock
stc
mov
jmp
mov
sub
xchg
mov
inc
sbb
mov
xchg
jp
dec
pop
std
add
test
cmp
aaa
mov
int
mov
clc
rcr
mov
in
rol
and
adc
mov
pop
idiv
adc
sbb
iret
enter
loope
mov
nop
movs
cli
cwde
push
rcl
push
out
addr16
jne
mov
loop
loopne
mov
sbb
ins
scas
mov
cld
jecxz
pusha
cmp
scas
fldenv
mov
mov
adc
xchg
shl
jns
stos
out
dec
repz
mov
xchg
dec
adc
mov
mov
(bad)
or
xchg
sub
out
cmc
mov
(bad)
pop
xor
sbb
sbb
xchg
fisubr
pop
dec
push
int3
inc
add
sbb
jle
shl
sub
mov
cmp
imul
and
out
jp
sub
pop
lods
std
push
add
out
cld
add
paddd
(bad)
jecxz
cmc
adc
popa
xor
(bad)
jmp
test
shl
cmp
in
nop
mov
push
repz
xchg
sub
(bad)
inc
dec
jns
mov
fsub
dec
in
add
jno
cs
dec
cmp
mov
sub
rol
mov
pop
or
push
ret
movs
pop
xlat
mov
in
ja
xchg
lods
les
fcomp
pop
inc
mov
arpl
out
gs
movs
ja
ds
(bad)
and
cmp
push
push
movs
add
repnz
dec
pusha
or
mov
and
cmp
movs
test
ja
outs
jmp
xlat
pop
and
sar
shl
dec
nop
pop
pop
jbe
and
imul
ja
or
push
call
mov
mov
and
or
(bad)
push
mov
cdq
in
dec
dec
movs
pop
cmp
jne
push
push
punpckhdq
sub
xchg
dec
jp
ret
in
es
sbb
out
repnz
mov
ror
repz
fmulp
fnsave
mov
xchg
or
lahf
aas
pop
pop
or
inc
cld
push
fst
sbb
sbb
(bad)
rcr
(bad)
push
push
fnstcw
jg
mov
pop
pop
dec
mov
adc
(bad)
and
ror
jge
pop
mov
jne
mov
xchg
pusha
ret
callw
mov
clc
ss
sub
mov
int3
int3
sub
loopne
jbe
inc
mov
or
(bad)
std
aad
mov
imul
mov
retf
jnp
test
mov
cmps
pop
(bad)
lock
inc
add
(bad)
stos
mov
xor
shl
fsub
xor
or
rol
mov
xchg
fiadd
adc
outs
fisubr
clc
retf
adc
cwde
movs
mov
test
or
sbb
and
imul
or
mov
sub
push
xor
cmp
call
ja
scas
in
push
(bad)
int
mov
pop
sub
dec
adc
add
jno
iret
ret
mov
add
(bad)
mov
push
xchg
xchg
sar
mov
call
pop
icebp
loope
inc
pop
aas
mov
cmp
or
mov
push
and
ins
inc
hlt
jmp
add
jmp
or
test
sar
pop
lods
jnp
bound
mov
jae
cld
mov
fwait
imul
mov
mov
fsub
sub
cmp
mov
mov
push
jmp
adc
or
cwde
dec
mov
(bad)
sub
test
fisubr
ret
sub
xchg
sahf
and
and
mov
jmp
push
lds
mov
outs
mov
mov
leave
retf
and
adc
cs
jae
outs
mov
cmps
outs
add
adc
push
and
test
cmp
jmp
add
xchg
pop
fwait
cmp
les
(bad)
cld
cmp
nop
cmp
pop
add
popa
dec
xor
ja
xlat
inc
mov
mov
mov
xor
sar
ret
repz
data16
xor
dec
pop
jle
mov
lahf
push
enter
jnp
out
push
inc
jne
mov
bound
ins
je
hlt
out
es
outs
(bad)
lods
mov
imul
cmp
xlat
jp
adc
into
fs
sahf
jno
mov
sbb
jge
push
xchg
repnz
mov
add
push
adc
and
mov
fisttp
fild
outs
dec
jecxz
mov
ds
jmp
jl
fiadd
inc
xor
pop
sar
mov
adc
mov
aas
mov
sub
cmp
sar
nop
pop
jle
pop
mov
scas
inc
adc
sbb
lods
pop
lock
stos
mov
dec
or
xor
mov
adc
icebp
mov
sbb
jl
mov
aas
xor
movs
test
inc
sbb
aaa
mov
adc
cmp
inc
sub
pop
std
push
xor
xchg
fsubr
add
add
repnz
mov
sub
jl
cli
(bad)
and
cli
push
ret
sbb
mov
ja
popf
stos
add
xor
mov
pop
cli
in
xchg
retf
jnp
aaa
sub
xchg
xchg
(bad)
xchg
icebp
test
cdq
sub
mov
iret
jge
add
adc
iret
xchg
pop
adc
(bad)
jecxz
jg
mov
pop
inc
pop
shr
ret
and
cmp
xor
sub
inc
dec
stos
stc
jmp
xchg
push
ret
outs
retf
push
retf
(bad)
dec
mov
mov
pop
sbb
inc
sub
scas
and
push
ins
aad
nop
push
loop
push
mov
mov
adc
(bad)
mov
mov
xor
adc
xchg
pusha
jbe
cmp
pushf
in
in
inc
cmp
jne
clc
adc
mov
mov
sbb
les
or
lock
sbb
mov
cmp
ror
push
xor
cli
mov
mov
movs
leave
imul
cmp
mov
jae
mov
push
cld
fisttp
jecxz
mov
out
mov
sub
adc
lock
push
push
jg
or
imul
call
in
cmps
cmp
dec
mov
cmp
dec
xchg
mul
cmp
jae
xchg
sbb
sbb
cmp
add
push
rol
idiv
mov
(bad)
cs
add
cmps
pop
push
pop
sahf
mov
cwde
mov
(bad)
popf
add
je
(bad)
cmp
imul
fs
sub
mov
jle
xchg
inc
sub
lods
xor
sbb
adc
inc
sti
ins
pop
jb
add
popa
sar
es
xchg
and
mov
or
inc
dec
stos
ret
mov
movs
adc
xchg
pop
sbb
cwde
jo
outs
es
xchg
test
call
test
jne
jmp
mov
xchg
loope
push
not
push
mov
stos
xchg
je
mov
std
xchg
jbe
fidivr
fld
sub
fadd
mov
xchg
pop
call
push
pop
xchg
inc
sbb
(bad)
fsub
data16
pop
hlt
inc
outs
movs
loopne
jmp
das
sub
xchg
lods
sub
inc
cmp
data16
jle
cmp
sub
push
lea
xchg
int3
and
xchg
cli
push
pop
inc
cmp
xchg
jmp
arpl
cld
push
leave
pop
sbb
out
lahf
lods
or
in
push
imul
push
add
mov
mov
dec
and
lahf
xchg
jo
mov
add
mov
or
add
dec
nop
adc
mov
(bad)
dec
mov
mov
dec
push
idiv
movs
pop
fld
cmps
inc
mov
pop
push
aaa
imul
sahf
(bad)
mov
imul
xor
sahf
mov
stos
pop
cli
pop
leave
out
push
fcmovnbe
cmp
dec
or
pop
(bad)
xchg
lock
ss
inc
inc
dec
sub
and
mov
mov
in
ror
nop
sub
ss
inc
pop
xchg
fadd
jae
int3
test
mov
inc
pop
aaa
dec
and
xchg
arpl
cdq
add
mov
add
and
jns
push
xchg
xchg
cmc
test
es
es
in
movs
push
mov
into
push
xlat
test
fs
(bad)
jnp
add
dec
addr16
xor
mov
pop
(bad)
ret
jmp
or
push
sbb
in
cmp
xor
push
pop
pop
addr16
pusha
data16
out
shl
mov
xchg
(bad)
in
(bad)
iret
cld
xor
jg
aad
(bad)
dec
add
push
cld
or
ret
sub
fstp
out
and
dec
mov
cmp
fnsave
not
adc
cld
jmp
out
icebp
inc
outs
fwait
or
mov
das
lods
test
imul
ret
sub
adc
imul
and
hlt
ficom
add
fnstenv
jo
lds
jo
rol
rol
(bad)
not
and
fisubr
sti
pushf
xor
lea
mov
in
dec
(bad)
(bad)
jno
into
pop
add
pop
and
rdpmc
dec
cmps
add
mov
hlt
js
and
xchg
int3
cmc
jge
push
mov
iret
sbb
movs
mov
fstp
jae
repnz
xor
pop
jns
ins
mov
das
clc
cmp
fdiv
repz
jne
cmp
cli
aad
mov
cdq
xor
popf
xor
test
clc
loop
xchg
and
loop
std
(bad)
movs
shl
test
xchg
push
(bad)
fs
xchg
push
cdq
or
sar
jp
aad
mov
lahf
out
das
in
inc
aas
or
push
or
mov
outs
loop
add
and
add
sub
adc
xor
mov
jge
add
cmps
mov
ins
or
daa
ins
jmp
shl
pop
stos
(bad)
sbb
scas
pop
xchg
int
rcr
in
jno
enter
popa
sbb
out
or
(bad)
stc
outs
or
inc
mov
ret
dec
adc
push
inc
xor
test
jge
xchg
inc
dec
cmps
pop
jecxz
in
mov
in
mov
in
loop
stos
ds
mov
movs
inc
fnsave
bound
gs
clc
scas
or
xor
shl
call
sbb
ins
add
add
sub
daa
sub
addr16
jne
fdivr
or
aas
mov
xchg
mov
js
mov
mov
std
in
cmps
add
fdiv
sbb
test
xchg
mov
push
outs
cmc
out
fnstcw
jmp
sub
adc
dec
mov
xor
add
fcom
ret
inc
inc
dec
es
xchg
mov
mov
mov
and
mov
adc
adc
test
mov
cs
jmp
mov
ja
add
das
sub
adc
mov
fadd
xor
mov
xchg
test
std
and
sub
std
jp
iret
cmps
test
and
addr16
aam
push
inc
dec
cmp
mov
xchg
jg
ret
jmp
jmp
and
jmp
jne
ins
jbe
or
inc
idiv
dec
mov
repz
iret
popa
mov
sbb
push
movs
push
jbe
add
imul
fdivrp
(bad)
nop
xor
jp
dec
ss
fisttp
jnp
xchg
xlat
iret
mov
rcl
fmul
or
les
icebp
lods
not
call
ins
inc
mov
push
mov
loope
outs
mov
mov
cs
xor
cmp
cmp
dec
mov
repnz
pop
mov
dec
mov
dec
inc
sbb
lds
icebp
inc
stc
xrelease
xchg
sti
sub
inc
lock
push
cmp
dec
in
pop
and
push
jbe
and
clc
aas
mov
movzx
dec
call
push
mov
(bad)
div
mov
mov
outs
aaa
push
push
mov
xor
mov
in
sub
xor
inc
mov
imul
test
or
or
scas
repnz
scas
adc
ds
jp
imul
mov
push
sbb
pop
or
or
loop
sub
push
(bad)
sti
std
jbe
pop
xor
cmp
out
fwait
pop
in
sbb
retf
or
jne
mov
mov
ret
mov
mov
ss
adc
out
mov
add
jg
or
adc
jbe
aad
ins
(bad)
sti
xor
add
shr
ret
pop
enter
mov
jmp
push
xchg
sbb
ret
cmp
retf
sbb
sub
aas
test
call
and
retf
stc
add
and
mov
or
add
rol
cmp
or
and
cs
cli
loope
sbb
into
gs
dec
cmp
push
push
(bad)
aas
iret
mov
or
dec
sbb
xchg
hlt
pop
jae
or
movs
ja
leave
xor
sub
push
mov
inc
loopne
jge
pop
mov
mov
loop
gs
sbb
push
and
mov
fldcw
xor
outs
ds
mov
fadd
cmp
aaa
sub
enter
iret
xchg
clc
push
add
test
cld
jnp
mov
mov
cmps
icebp
movs
bound
dec
dec
pop
inc
jl
in
in
ins
inc
dec
push
add
imul
or
xchg
(bad)
rcr
jns
sbb
pop
sub
div
and
sub
push
into
cmps
mov
mov
mov
mov
les
mov
push
mov
mov
mov
pop
mov
das
loopne
adc
hlt
mov
mov
lock
lds
inc
mov
push
cmc
fcomip
mov
lock
ror
mov
retf
lahf
or
lahf
dec
fbstp
adc
mov
leave
inc
(bad)
jnp
rcl
std
out
inc
dec
xchg
push
stos
inc
test
shr
mov
or
pop
test
pop
mov
mov
add
(bad)
add
or
sbb
mov
xor
pop
pop
ins
inc
pop
dec
and
retf
push
call
je
cmc
jbe
push
or
xchg
mov
or
and
test
aas
sub
and
enter
ficom
gs
shl
mov
cmp
mov
(bad)
outs
cmp
lahf
fsub
nop
jmp
es
xchg
bound
bound
popf
stc
clc
sahf
xchg
push
rcl
xchg
popa
cmp
sub
aam
add
mov
movs
icebp
rol
push
xchg
sub
ret
and
or
cmp
sbb
out
xlat
int
sub
sub
ror
pop
ds
mov
cmp
mov
iret
mov
xor
cli
scas
xor
cmp
ins
inc
jo
mov
sbb
jge
pop
mov
clc
cmps
repnz
mov
aaa
fucomp
mul
nop
sub
fnstsw
pop
aaa
adc
sbb
add
add
or
dec
mov
mov
repnz
inc
aaa
jle
inc
pusha
mov
out
je
lods
cmp
sub
lds
dec
inc
mov
add
shl
fimul
pop
xor
pop
call
sub
icebp
mov
stc
pop
jg
mov
mov
xchg
je
ins
mov
jno
call
mov
dec
push
mov
push
ds
cpuid
pop
fsubr
shl
mov
ins
jg
add
xchg
mov
cmp
mov
(bad)
call
fwait
pop
xor
mov
xchg
xchg
leave
mov
stos
or
aas
pop
xor
jp
pusha
rol
fst
sub
icebp
cli
jmp
nop
popa
cld
popa
adc
std
shl
clc
pop
cmps
dec
pop
adc
adc
shr
jns
(bad)
and
or
mov
(bad)
cmc
or
retf
and
nop
loop
es
jne
out
jl
or
dec
xchg
repz
mov
daa
jns
outs
xchg
xchg
pusha
xchg
fst
push
imul
dec
addr16
sbb
push
jno
push
pop
and
lds
push
fs
adc
mov
hlt
xchg
xchg
in
das
jmp
xchg
gs
test
and
arpl
sub
fbld
in
jne
sub
or
xlat
das
jl
fdivr
jns
cs
(bad)
cmp
dec
cmp
scas
adc
scas
lahf
jae
popf
dec
dec
cmp
dec
loopne
cmp
fs
mov
dec
rcr
jmp
pop
push
xchg
push
outs
lahf
sahf
pop
ficom
add
pop
sub
stos
fisubr
ss
push
pop
ja
push
(bad)
cmc
jge
add
lods
jbe
cli
pop
mov
mov
xor
jnp
cmp
push
and
and
pop
punpckhdq
xchg
mov
sti
retf
inc
imul
cmp
out
xor
shl
rol
scas
pop
inc
mov
in
and
js
dec
loope
arpl
call
pushf
sub
ret
dec
mov
in
dec
leave
clc
imul
stos
push
ins
mov
stos
jo
mov
call
ins
xlat
adc
pop
pop
cmp
frstor
inc
icebp
retf
dec
ja
(bad)
cld
hlt
pop
js
(bad)
sbb
mov
in
xchg
or
movs
enter
mov
mov
jb
jg
ret
pop
and
mov
les
sbb
and
out
into
outs
inc
gs
fwait
sahf
into
or
sub
(bad)
in
adc
pop
rcl
enter
daa
cmps
cmp
addr16
bound
and
sbb
ins
mov
or
sub
pop
les
cld
sbb
in
sub
mov
scas
mov
mov
add
lds
sbb
shl
cmc
imul
je
inc
mov
loop
or
(bad)
shl
push
push
ins
mov
jb
add
icebp
push
adc
xchg
nop
pop
or
xor
mov
ja
sub
sbb
imul
push
aam
mov
es
aad
rcl
or
(bad)
sar
inc
je
jnp
test
push
push
inc
mov
cmp
inc
and
clc
fild
cwde
out
jbe
add
push
sbb
out
shl
jp
stos
loope
(bad)
repnz
dec
gs
and
call
popf
outs
fisubr
xor
sbb
mov
in
and
and
fnsave
cld
mov
call
ins
jnp
jo
in
jbe
test
sub
mov
mov
cmp
cmp
fcomp
jb
sub
inc
mov
cmps
icebp
sub
(bad)
cmp
jnp
mov
fnstcw
into
test
into
mov
mov
(bad)
xor
aas
cmp
sbb
jno
push
jmp
into
js
in
fs
sbb
out
add
div
fwait
adc
test
adc
and
jg
cmp
push
add
jno
sub
pop
daa
add
and
(bad)
push
inc
pop
scas
call
xchg
mov
call
push
jnp
ror
mov
ins
dec
and
pop
cld
popa
gs
sbb
xor
shl
and
cmp
xchg
xchg
stc
dec
push
pop
cmc
ds
mov
xchg
add
pop
lods
(bad)
or
sti
sub
and
xor
inc
sub
mov
pop
js
fadd
sub
adc
inc
jecxz
lahf
xchg
aaa
push
mov
xor
call
inc
mov
jb
stc
out
(bad)
xlat
adc
or
ss
adc
jle
sub
and
and
arpl
xor
setb
and
mov
out
push
icebp
mov
(bad)
shr
ss
mov
add
xor
imul
loop
pop
fs
adc
test
jge
lods
lds
call
sub
mov
add
pop
aam
sbb
jecxz
in
inc
fnstsw
dec
add
or
(bad)
dec
mov
add
add
js
es
push
cmps
aad
pop
ss
movs
arpl
or
mov
dec
(bad)
mov
xchg
jmp
shl
cs
add
cwde
cdq
mov
ret
xchg
int3
mov
inc
cs
xchg
mov
(bad)
cwde
push
(bad)
mov
cmp
dec
xchg
fucomp
cs
sbb
mov
add
fbstp
sub
addr16
mov
mov
jmp
enter
imul
jae
xchg
test
shl
sbb
ss
(bad)
stos
in
push
jbe
sbb
or
nop
or
ins
dec
inc
pop
xchg
push
jmp
inc
mov
xchg
jg
push
cmps
push
(bad)
pop
jle
pop
jg
(bad)
ds
arpl
(bad)
jnp
xchg
cmp
inc
mov
dec
or
(bad)
dec
sbb
aas
inc
mov
xchg
stc
popa
in
and
inc
cmp
ret
jl
sbb
stc
adc
arpl
pusha
ret
psrld
jnp
jo
repz
cwde
sbb
addr16
jl
add
cmp
into
loopne
js
jns
mov
xor
stos
std
jns
cli
xchg
stc
addr16
sti
shl
js
leave
cld
sub
jmp
shr
jne
out
jge
sahf
or
out
int
sbb
or
sub
xchg
dec
lock
jle
mov
pop
into
jns
sub
adc
pop
ret
add
outs
outs
sahf
rcl
push
aaa
pop
adc
ror
add
bound
hlt
or
adc
fist
call
les
push
cwde
pop
jmp
(bad)
push
and
cmps
and
outs
push
cwde
je
cmp
ja
add
add
jnp
push
jbe
ins
mov
mov
inc
daa
jbe
dec
push
xchg
or
pop
jns
mov
fistp
mov
into
xlat
cmp
lods
imul
cmps
sub
dec
enter
outs
cdq
das
or
pop
mov
cmp
call
and
cs
fmul
mov
ret
aad
daa
(bad)
pusha
arpl
xlat
rol
cmp
pusha
cs
test
or
into
xor
movs
stos
sbb
sub
repz
jae
sbb
push
add
xor
jmp
jb
cmp
xchg
add
sbb
jb
sub
sbb
rol
jne
xor
xor
jge
fild
xchg
fwait
inc
pushw
fstp
adc
loopne
(bad)
fimul
mov
retf
xchg
call
in
fnsave
add
jae
ficom
dec
fnstsw
add
mov
shl
imul
pop
mov
sub
add
push
jo
int3
daa
and
xchg
sub
sti
iret
stc
inc
push
push
stos
(bad)
sti
jns
fadd
adc
dec
hlt
push
in
xlat
(bad)
xor
bound
dec
dec
mov
sahf
addr16
and
mov
xlat
mov
mov
push
movntps
int3
fcmovnb
add
lea
stos
xchg
lods
out
cld
ret
test
add
scas
jno
cdq
mov
push
(bad)
push
xor
dec
fisttp
mov
and
sub
aas
clc
or
mov
pop
add
popa
sbb
cmc
shr
sti
or
lods
sub
push
dec
cmp
jg
xchg
popf
inc
dec
sbb
jb
sbb
and
xchg
pop
sbb
lahf
adc
xchg
mov
add
jno
test
xchg
cmp
ret
scas
pop
idiv
push
adc
jo
push
or
cld
sbb
into
mov
and
sub
ret
sbb
xchg
pop
call
cs
shr
pop
popf
ins
gs
rsqrtps
jmp
mov
dec
(bad)
jbe
lods
aaa
mov
in
sbb
mov
movs
adc
cs
dec
lods
add
xor
jb
call
mov
stos
pop
js
nop
mov
xlat
aad
xor
mov
sti
ret
push
push
mov
fcom
add
xchg
mov
pusha
call
movs
outs
aam
movs
js
test
and
xor
xor
movs
push
into
add
jae
sbb
mov
sbb
fs
(bad)
fld
or
sub
inc
rol
scas
xchg
sbb
fs
mov
add
lock
or
daa
jle
mov
scas
mov
test
jns
mov
(bad)
pop
jp
jne
aaa
add
mov
mov
inc
int3
pop
mov
xchg
add
cmp
cmp
xchg
ja
scas
test
pop
cmp
dec
fild
xor
push
pop
push
xchg
sbb
mov
xlat
mov
mov
lahf
lds
pop
cmp
push
adc
test
xchg
retf
data16
dec
pushf
neg
ret
test
and
loopne
ins
add
and
jge
call
bound
movs
data16
push
inc
cmps
or
cmps
(bad)
loop
mov
sbb
cdq
jp
movs
cld
pop
sub
shr
mov
add
shl
stos
(bad)
xlat
mov
push
or
pop
mov
enter
pop
in
movs
push
push
loopne
jo
mov
repnz
jg
ins
cmp
loope
outs
cmps
stc
mov
outs
loop
mov
mov
sub
or
pop
adc
ins
outs
loop
add
xchg
call
outs
xchg
shl
jb
sbb
repnz
ja
cs
mov
leave
inc
divps
lods
das
pop
pop
in
mov
push
dec
jl
xor
xor
aaa
shl
sbb
stos
and
push
xor
xor
cmp
dec
push
sar
enter
jbe
out
mov
pop
add
xlat
jns
lods
sti
adc
aas
in
fiadd
inc
ds
scas
sbb
mov
mov
std
cmps
dec
mov
sbb
push
push
ret
and
in
mov
fxch
fidiv
inc
retf
jg
jg
pop
in
lahf
push
jo
mov
lahf
cmc
dec
enter
scas
in
arpl
mul
fsub
mov
loope
sbb
add
cmps
ins
bnd
aaa
sahf
jo
or
sbb
inc
dec
xor
imul
jl
inc
fs
xlat
mov
fucomp
div
adc
cmc
adc
mov
int
cmc
mov
ss
push
stos
sbb
out
mov
xor
mov
sub
js
xor
or
(bad)
adc
test
mov
or
pop
loope
xchg
bound
call
(bad)
jecxz
out
sub
jbe
imul
popf
je
leave
aas
add
imul
stos
push
sub
outs
xchg
fadd
pop
mov
lock
sbb
jg
mov
push
inc
or
lahf
rcr
and
pop
xchg
imul
sti
sti
(bad)
adc
or
shl
mov
outs
scas
or
inc
jbe
(bad)
mov
ror
repnz
inc
add
aas
out
pop
cli
sub
pop
ss
call
aam
out
mov
mov
sub
pop
add
imul
pop
stos
sub
rcl
int
or
inc
sub
out
mov
in
sbb
call
nop
repnz
mov
shr
mov
cmps
jb
sub
xchg
sti
movs
sbb
pop
dec
jns
hlt
idiv
mov
cs
in
sbb
xor
jmp
cmc
stc
lods
out
sbb
popa
mov
mov
pusha
xchg
mov
cdq
into
cld
mov
pusha
push
sbb
jno
adc
imul
add
cwde
adc
inc
cli
jne
js
inc
lds
inc
shr
and
inc
lods
mov
dec
lock
cmp
sub
movs
cmp
int3
leave
pop
push
pop
sub
pop
cmp
test
jp
pushf
jle
jo
pop
inc
test
xlat
aaa
sahf
out
xchg
xor
fdiv
adc
stos
shl
pushf
test
inc
in
dec
lock
fwait
mov
jb
push
sar
sbb
mov
xchg
mov
inc
mov
jns
pop
jb
call
call
sbb
pop
mov
xor
and
shl
adc
push
push
popf
add
xchg
out
loope
xor
lods
rol
fmul
cmp
xchg
sbb
xchg
sub
sbb
test
icebp
or
pop
push
jb
sbb
int
mov
daa
xor
or
retf
leave
cmp
cmps
lea
(bad)
movs
arpl
imul
test
mov
or
cld
jno
push
gs
(bad)
imul
sub
repnz
lock
imul
mov
xlat
push
jp
xchg
jns
mov
sbb
rol
inc
sbb
jno
sti
dec
push
inc
cmps
inc
jp
loop
dec
ds
sub
sub
and
mov
or
int3
and
add
jl
popa
dec
ja
int3
and
test
inc
lar
push
int3
out
xchg
retf
sahf
or
push
dec
sbb
imul
or
xchg
ret
adc
mov
aam
jnp
mov
mov
sub
cmps
js
loopne
call
cmp
inc
lods
jge
(bad)
cli
jge
or
leave
mov
inc
dec
push
xlat
fcomp
xor
jecxz
mov
adc
(bad)
dec
ss
fiadd
sbb
cmp
cld
inc
les
ja
mov
mov
push
scas
mov
in
jmp
mov
in
mov
add
jecxz
dec
push
jnp
ins
add
push
mov
xor
sbb
test
cmps
push
sub
jnp
mov
sub
ins
lods
or
jle
arpl
xor
arpl
(bad)
sub
jecxz
and
(bad)
jnp
add
neg
jmp
and
cmpxchg
mov
sub
scas
out
mov
movaps
out
xchg
dec
(bad)
mov
sbb
adc
push
push
push
pop
aam
lods
xor
sbb
ja
sub
fwait
mov
daa
cmps
enter
mov
sbb
jb
pop
mov
inc
fdivr
xor
retf
sahf
stc
inc
cmps
ins
call
idiv
jmp
pop
imul
pop
mov
shr
adc
mov
not
sub
iret
in
rcr
jg
or
(bad)
mov
test
sahf
jg
movs
mov
or
mov
push
xor
es
xchg
mov
jmp
inc
rcr
aam
adc
dec
and
ficom
adc
cmps
retf
sbb
mov
iret
(bad)
jecxz
cmps
loop
inc
dec
ret
fst
push
repnz
push
call
mov
sub
jns
ss
xchg
test
fs
mov
jns
imul
jmp
icebp
cli
rcl
mov
cld
xor
fistp
fldenv
xor
cmc
jge
ins
sub
jmp
out
xlat
xchg
in
mov
pop
add
push
addr16
push
lahf
cld
dec
xchg
jo
shr
jo
pop
xchg
ins
xlat
sbb
call
push
fwait
mov
icebp
aas
mov
lods
test
loopne
dec
dec
je
jmp
repnz
jecxz
mov
adc
add
mov
mov
outs
and
fdivr
ret
lea
dec
pop
adc
cmps
xchg
jecxz
dec
sub
in
dec
sub
outs
fimul
(bad)
popa
mov
stos
mov
jp
push
repnz
push
cdq
ja
imul
lea
lea
ds
inc
mov
fsub
adc
dec
mov
jp
addr16
in
icebp
sbb
aaa
adc
and
xchg
sti
push
cdq
add
xchg
cmp
xor
xchg
ins
(bad)
push
or
lahf
add
addr16
push
in
jb
mov
pop
ret
je
pop
inc
dec
sbb
adc
and
lahf
sub
(bad)
fdiv
or
add
pop
fwait
jo
rcr
iret
mov
out
test
or
jle
pop
pop
mov
(bad)
sbb
sub
int3
pushf
les
pop
das
cld
ficom
pop
popa
jg
mov
dec
adc
iret
add
or
cmp
jmp
lds
jnp
jo
push
or
mov
push
shr
mov
fadd
in
cs
xor
imul
punpckhbw
mov
loope
push
mov
rcl
or
sub
sub
sbb
and
jle
movs
adc
mov
and
mov
lea
sbb
clc
pop
jmp
scas
in
ret
sbb
sub
std
test
(bad)
aam
ins
pop
jae
xchg
int
das
loopne
cmp
cmps
frstor
hlt
addr16
dec
and
repz
inc
or
out
or
stos
mov
jb
and
xor
gs
cmp
xchg
cwde
mov
sub
movs
retf
and
cs
(bad)
sti
pop
int
shl
mov
xchg
inc
(bad)
push
push
adc
xor
mov
mov
and
or
shl
jl
leave
int3
scas
dec
pop
data16
out
mov
or
mov
pop
jl
shl
cli
sub
mov
jl
hlt
sti
push
jge
stc
fdiv
or
jmp
jecxz
sahf
ss
adc
cmp
ret
pushf
mov
leave
xchg
cmp
xor
inc
hlt
fwait
sub
ds
inc
and
pop
jmp
pop
imul
in
aad
out
dec
pushf
fidivr
jne
test
nop
cmp
cli
xchg
shr
and
ret
xor
hlt
sbb
repnz
or
fisttp
xor
mov
dec
xchg
repnz
(bad)
repz
adc
or
mov
cmc
mov
mov
mov
je
addr16
pushf
fnstcw
sub
lahf
cs
stc
mov
out
push
mov
jne
fsubr
cmp
mov
pop
push
sahf
mov
(bad)
cmps
sar
cdq
adc
gs
jg
movs
push
or
or
popf
inc
imul
test
fcmovne
call
mov
mov
aad
xchg
fild
rcl
fsubr
fisub
mov
iret
out
dec
or
lods
aas
mov
sub
jae
test
movs
aaa
or
lahf
daa
dec
mov
xchg
fst
pop
sub
cmc
not
fdivr
leave
inc
pop
dec
sti
scas
mov
into
jnp
sbb
fidiv
bound
mov
dec
pop
xchg
cmc
or
mov
out
loop
push
mov
fs
jp
aam
les
int
xor
retf
jg
sbb
jmp
in
xor
push
popf
jecxz
jmp
fwait
sbb
jmp
sbb
jecxz
ret
das
xlat
add
and
in
pop
pop
jge
or
(bad)
jmp
jae
cmp
mov
(bad)
sbb
jle
imul
repz
je
and
cmc
or
push
jecxz
leave
cmp
adc
pop
scas
cli
inc
inc
pop
aaa
dec
jno
je
mov
adc
xlat
neg
aam
popa
mov
dec
adc
push
in
or
cmp
out
ins
fwait
int
adc
sub
push
mov
inc
xchg
push
or
jb
shl
out
mov
(bad)
sbb
lods
mov
and
xor
fistp
add
sub
cmps
and
cmps
cld
inc
adc
aad
inc
mov
int3
lock
inc
push
es
mov
scas
inc
out
xor
xchg
sahf
add
xchg
les
sbb
jnp
xchg
(bad)
add
adc
nop
and
mov
lds
mov
pop
ss
fidiv
clc
in
hlt
int
imul
push
cmps
std
sbb
and
lds
mov
clc
shl
or
scas
and
mov
cmp
sub
out
daa
inc
mov
jo
sub
into
xor
sub
leave
push
es
in
jecxz
iret
xor
ficomp
jmp
or
xor
add
dec
adc
pop
dec
out
das
sbb
mov
sti
or
movs
rol
test
jp
pushf
(bad)
cmp
sbb
cmps
push
push
jecxz
cwde
das
fistp
daa
mov
outs
test
sahf
jle
ret
loope
ss
shl
xor
jae
mov
push
inc
jge
xlat
cld
dec
mov
and
mov
fimul
aaa
in
shr
mov
leave
loop
aam
sub
jecxz
in
cld
inc
pop
mov
cld
sub
mov
xchg
mov
and
sub
outs
lods
or
pop
and
or
(bad)
std
adc
mov
xor
jmp
push
xlat
or
inc
xor
inc
jmp
(bad)
push
dec
sbb
mov
pop
cli
cli
xchg
sub
cdq
movs
aad
mov
int
sub
popf
jbe
adc
inc
mov
mov
mov
data16
cld
mov
dec
dec
pusha
xor
fild
js
cmc
cmp
out
out
push
lds
xchg
push
icebp
push
dec
mov
cmp
adc
adc
aad
test
retf
mov
jmp
dec
inc
push
fwait
(bad)
jae
rcl
fisubr
fmul
(bad)
out
imul
pop
or
sub
adc
xchg
clc
xor
xchg
xchg
sbb
sub
sbb
inc
loop
adc
pop
push
pop
cmp
outs
sbb
pusha
and
stos
pop
(bad)
in
xor
adc
sub
pushf
dec
test
fild
adc
mov
adc
pop
(bad)
dec
xchg
imul
hlt
pop
cmps
xor
mov
movs
pop
cmp
xor
fwait
aad
pop
scas
lea
(bad)
xor
fild
cli
pusha
pop
ds
rol
pop
lods
lds
je
fwait
sub
cdq
inc
loop
or
jnp
stos
and
fwait
lods
dec
add
fstp
xor
pop
dec
mov
push
lods
xchg
gs
iret
sub
xchg
add
retf
inc
mov
dec
or
les
xchg
add
jmp
jae
stos
mov
aas
call
test
or
cmp
inc
xor
clc
retf
push
jmp
in
mov
xchg
inc
and
fsubr
add
pushf
movs
or
or
loopne
mov
mov
pop
push
repnz
out
jg
test
in
les
push
jmp
mov
jle
add
mov
cmp
out
pushf
stos
ss
ret
lsl
js
call
inc
xlat
sti
mov
movs
mov
cli
or
push
idiv
fdiv
add
adc
ja
sbb
xchg
shl
mov
lods
and
imul
mov
sub
mov
in
add
rcl
inc
aad
in
out
gs
test
mov
cmp
outs
out
pop
inc
mov
test
push
out
sar
cli
xor
mov
sub
pop
push
push
das
test
jmp
cmp
lods
mov
lds
sti
sbb
adc
sar
fucomip
push
in
mov
and
add
mov
push
sub
cmp
mov
fnstenv
js
push
gs
pusha
data16
fsubr
js
mov
add
mov
sub
sbb
dec
inc
mov
push
xor
outs
add
inc
js
mov
rcr
sbb
ins
adc
and
dec
inc
mov
sar
data16
pop
and
rsm
push
hlt
dec
xor
add
dec
sub
inc
clc
sahf
sbb
pop
int
dec
pop
out
sbb
cmc
xchg
fdivr
fwait
into
test
das
inc
fdivr
mov
addr16
dec
adc
neg
sub
and
es
call
cwde
dec
jmp
add
mov
and
mov
retf
repnz
push
pusha
dec
mov
xchg
aaa
div
fld
loopne
shl
dec
xchg
ss
add
mov
or
dec
add
(bad)
push
xor
pop
and
mov
jnp
jno
xlat
jg
push
sbb
aad
ins
push
fist
cmp
test
xrstor
cld
pushf
ja
in
je
mov
outs
(bad)
mov
mov
ins
pop
jmp
shr
mov
inc
std
xchg
jl
ror
lods
add
dec
dec
cmp
scas
jnp
mov
dec
add
rol
xor
mov
or
call
aas
sub
push
pop
add
xchg
push
stos
mov
sub
xchg
stos
dec
dec
xchg
loopne
cmp
mov
lahf
xor
mov
dec
call
jecxz
stos
dec
mov
sbb
in
and
push
xchg
or
data16
pop
ror
add
iret
push
mov
das
dec
gs
and
mov
std
or
xor
and
shr
cmp
and
mov
loopne
in
sbb
mul
mov
test
lea
or
jmp
sbb
test
repz
or
div
nop
xor
arpl
inc
into
pusha
xchg
sbb
jnp
std
and
ja
int3
int
cmps
jbe
jo
jno
add
movs
test
call
ja
jns
adc
cmp
fild
mov
sbb
xor
iret
les
xor
(bad)
dec
sub
je
pop
mov
sbb
mov
add
movs
mov
ss
ins
cs
cdq
ret
adc
fidiv
sub
and
rcr
mov
mov
ins
sub
xor
call
adc
popa
mov
fwait
or
push
inc
adc
inc
mov
dec
ins
mov
inc
xor
and
push
aaa
xchg
jmp
shl
retf
pusha
xor
inc
je
ss
cmp
sbb
push
shl
cmp
into
xchg
mov
fsubr
push
mov
mov
sbb
mov
dec
hlt
jae
add
mov
scas
or
xchg
lods
clc
fs
lods
shl
movs
mov
pop
ret
jae
mov
adc
das
bound
stc
aad
gs
ror
ins
ret
add
pop
xchg
pushf
mov
stos
loope
mov
enter
daa
xor
fs
imul
pop
pusha
sbb
outs
ds
push
out
imul
cmp
aam
in
sti
fld
xor
cmc
retf
dec
push
jo
shl
mov
adc
loopne
sbb
mov
ret
mov
mov
mov
cmp
test
(bad)
jno
sub
sti
jns
adc
lods
pop
lds
adc
inc
dec
mov
add
cmp
xchg
test
(bad)
rcr
adc
mov
std
pop
or
adc
rcl
sbb
(bad)
aam
ficom
call
mov
fadd
mov
aaa
jb
and
xchg
pusha
xor
ins
jno
daa
jns
sti
mov
sbb
inc
stos
push
xchg
push
daa
stc
jns
jmp
(bad)
aad
into
gs
mov
sub
or
and
shr
sbb
lods
xor
test
xor
inc
xchg
js
fsub
sub
pop
sub
xlat
jg
jb
lods
mov
outs
aas
xchg
push
mov
mov
or
cmp
sar
xor
sti
mov
xor
jg
or
push
cmps
mov
cmp
neg
jnp
rol
add
add
mov
jns
in
imul
adc
jne
mov
addr16
cld
sub
stos
leave
js
div
repz
leave
lahf
movs
retf
jo
mov
enter
push
sar
jg
inc
sub
sub
pop
icebp
mov
xchg
mov
adc
cs
add
dec
cld
pusha
adc
(bad)
aam
aam
mov
stc
mov
movs
les
sub
mov
mov
push
ja
pop
shr
(bad)
bound
pop
lods
fs
jmp
mov
fsubrp
bound
xchg
push
call
lods
xchg
ss
push
mov
ficom
mov
leave
das
mov
xor
maxps
(bad)
push
mov
cli
adc
pop
aaa
xor
mov
test
pop
fild
daa
ins
and
ins
lds
fnstsw
add
mov
scas
xor
dec
loope
imul
stos
pop
mov
pusha
or
pop
sbb
mov
sbb
aam
and
jle
scas
leave
scas
mov
movs
inc
sahf
mov
ins
fimul
sbb
sub
push
fbstp
xchg
adc
add
test
clc
xchg
dec
lods
jnp
pusha
test
popa
sub
xchg
out
sbb
push
xor
dec
shl
cmp
inc
mov
or
dec
jmp
jne
fldenv
mov
int
mov
les
lds
fmul
xchg
ret
pop
cmp
sbb
sar
push
daa
or
inc
mov
cmps
outs
jp
sbb
popf
dec
cmp
aas
mov
(bad)
test
retf
test
mov
cmp
stos
stos
nop
into
sub
ror
cmps
inc
jbe
sbb
scas
sub
mov
mov
dec
dec
clc
repnz
mov
(bad)
shl
jp
ror
add
aam
xchg
popa
dec
inc
mov
add
ret
call
scas
push
loope
and
sub
xor
dec
(bad)
mov
lock
dec
bound
jl
ja
movs
out
stos
add
xor
xor
pop
retf
stc
aaa
in
(bad)
xor
cmp
sub
(bad)
pop
push
sbb
sbb
(bad)
pop
dec
shl
mov
stos
outs
dec
adc
test
cmc
mov
shl
(bad)
std
cmp
mov
xchg
mov
icebp
call
ret
push
adc
sub
out
retfw
pop
rcr
stos
sbb
add
int
imul
pop
xor
leave
loope
jmp
inc
loopne
add
call
push
sbb
in
add
or
jo
push
es
popf
push
jp
rcr
mov
mulps
dec
dec
out
repz
xor
fs
dec
fstp
(bad)
sub
sub
loop
pop
adc
cmp
cld
inc
mov
cmc
jne
rcr
mov
aaa
sbb
sti
sbb
in
xor
loope
and
call
data16
pop
stc
xchg
aaa
push
cmp
scas
pushf
xor
jbe
(bad)
fldcw
sbb
cmp
and
daa
sbb
ror
dec
test
and
iret
bsf
inc
push
xchg
jle
push
ja
mov
sbb
adc
(bad)
push
sbb
movs
retf
out
mov
inc
and
push
mov
xor
sub
shl
mov
mov
jle
or
in
xor
xchg
mov
mov
pusha
out
sub
sub
fstp
inc
shl
jg
push
push
fsubp
jns
or
loope
ds
jns
popa
fwait
adc
adc
adc
int
rol
mov
xchg
xchg
test
imul
ds
jb
popa
test
loop
leave
les
cwde
xor
nop
jae
cmp
inc
aad
push
xchg
aas
or
mov
cdq
jmp
(bad)
mov
add
dec
repnz
std
imul
mov
arpl
add
ds
jns
sahf
test
ds
push
test
dec
or
push
jnp
sbb
dec
jb
ficom
neg
mov
cmps
xlat
inc
daa
push
push
dec
pop
mov
aaa
shl
daa
pxor
inc
sbb
shl
push
pushf
fldcw
lahf
shl
out
pop
aas
jg
cmp
mov
pop
shl
push
xchg
dec
outs
xchg
inc
int
inc
and
test
stos
add
test
out
clc
dec
pop
dec
loop
and
leave
sbb
movs
or
jp
xor
or
dec
and
add
pop
xor
in
repz
pop
cmp
out
fst
sar
jge
push
add
adc
push
popf
in
xchg
int
pop
shl
ins
adc
loopne
movs
or
neg
aam
inc
sbb
movs
sub
sub
mov
aam
leave
mov
in
pop
into
push
mov
xor
(bad)
mov
cli
std
rcr
iret
clc
repnz
adc
leave
(bad)
cwde
jno
into
inc
adc
inc
loop
test
sub
sbb
test
sub
dec
out
mov
mov
cmp
pusha
xchg
test
pop
rcr
je
xor
push
inc
retf
cmps
mov
(bad)
cld
jmp
out
dec
push
std
je
mov
add
stc
imul
fild
arpl
shl
xchg
fcom
ins
ret
mov
imul
mov
add
mov
call
(bad)
outs
or
sub
aaa
xchg
fucom
lea
pop
shr
(bad)
addr16
and
mov
mov
ins
xchg
popf
(bad)
lods
aaa
clc
retf
jmp
mov
in
mov
lock
fnsave
jp
test
aaa
and
je
cmp
mov
mov
addr16
inc
stos
mov
or
mov
ss
mov
xlat
and
inc
pop
fidiv
leave
std
cmps
dec
jb
mov
test
out
xchg
add
mul
(bad)
push
cmp
fiadd
xor
lods
and
mov
loope
or
fidivr
out
jp
lods
add
int3
cmp
les
dec
sti
out
mov
mov
xor
daa
(bad)
jmp
out
jns
aas
mov
repz
ja
xchg
fldcw
(bad)
into
icebp
gs
mov
cld
popf
pop
(bad)
xchg
inc
fstp
jno
in
xchg
jle
stc
enter
rol
psrad
movs
popf
(bad)
shr
dec
cmp
arpl
dec
repz
mov
mov
pop
jnp
aaa
push
sti
xchg
jae
cli
pop
jp
shl
repnz
in
jne
fild
cmp
shl
bound
add
mov
enter
mov
or
cmp
(bad)
jg
out
aam
jo
inc
and
push
cmps
sub
pop
mul
pusha
lods
inc
cwde
cmc
pop
jmp
dec
mov
ins
(bad)
mov
out
test
jp
adc
pushf
in
xor
repz
adc
jmp
lock
xlat
push
idiv
jmp
test
out
and
mov
xchg
cmp
or
dec
xlat
pop
movs
fwait
iret
sbb
test
and
and
loop
mov
cmp
ja
xor
push
fsub
adc
sub
dec
pusha
push
cmc
sub
xor
push
imul
cli
mov
sub
fdivr
int3
addr16
adc
mov
movs
adc
ror
sbb
dec
xor
popf
xor
outs
jns
pop
or
cs
jne
mov
sar
xchg
(bad)
and
add
mov
stos
iret
into
shl
fnstsw
push
cmp
fisttp
or
mov
push
jns
shl
push
xchg
mov
popf
sbb
mov
adc
inc
das
cmp
xchg
jecxz
add
jle
shl
inc
mov
adc
push
cmp
imul
mov
push
int
movs
lahf
mov
shl
mov
inc
out
cmp
das
and
pop
fdivr
js
cmp
mov
inc
(bad)
retf
mov
sub
inc
xchg
std
pushf
in
mov
jp
movs
push
fwait
bound
in
out
push
and
dec
xlat
adc
pop
cs
mov
and
into
xchg
push
mov
mov
test
mov
cmps
inc
mov
shl
push
dec
rcr
dec
xchg
pop
mov
lods
xchg
jo
inc
sub
pop
xchg
cmp
ja
xor
inc
adc
icebp
sbb
xchg
nop
jmp
jmp
mov
xlat
cmp
pushf
ja
push
clc
and
cmp
mov
push
xor
xchg
jae
out
dec
jmp
outs
stc
inc
jl
xlat
loopne
lea
hlt
aam
push
pop
sub
sub
xor
xchg
je
fdivr
icebp
arpl
loopne
retf
jecxz
movs
lods
pop
push
leave
out
cmp
or
or
xor
cli
pusha
jno
adc
sbb
inc
mov
(bad)
lea
retf
mov
jmp
cmps
push
rdpmc
xor
mov
das
inc
and
inc
scas
ss
dec
mov
leave
pop
inc
stos
mov
xor
call
or
fdivr
rcr
sbb
ror
mov
fild
test
sub
repnz
fcom
mov
adc
mov
jg
shr
jbe
icebp
xor
jmp
mov
fsub
cmp
popf
push
cmp
mov
(bad)
mov
fadd
sar
xor
adc
adc
xchg
jmp
cmp
jecxz
fnstsw
mov
pop
out
push
jne
iret
sbb
lods
lods
mov
call
mov
and
jge
scas
cld
unpcklps
cmc
mov
mov
adc
inc
jl
imul
adc
into
popa
cmp
ss
outs
ror
call
and
or
push
sub
scas
xchg
fldenv
push
cmps
dec
mov
fwait
cdq
rcr
jge
or
add
outs
xor
mov
std
pop
and
and
test
test
or
pop
(bad)
repnz
push
and
hlt
inc
or
push
xchg
jae
mov
enter
xchg
mov
or
aaa
sub
ret
ret
mov
stos
sbb
xchg
or
jno
xchg
push
pop
push
mov
cmp
push
xor
mov
clc
mov
dec
call
or
fstp
pop
ss
xchg
outs
call
retf
or
pop
retf
fwait
lods
movs
inc
jl
es
ins
sub
mov
ins
dec
out
mov
adc
inc
push
popa
jmp
repz
ja
push
out
adc
inc
mov
icebp
jns
into
ins
pop
pop
cld
mov
pushf
pop
in
in
pop
in
and
push
jp
lahf
add
jb
cmp
mov
inc
and
push
and
fsub
push
je
fld
call
mov
es
enter
mov
int
xchg
xor
repz
pop
xchg
pop
lock
push
push
sti
aas
xlat
int
jg
shl
cmp
scas
jbe
inc
pop
push
cld
aam
jmp
scas
or
stos
fistp
je
stos
fwait
push
stos
ret
fs
sub
jo
ja
and
dec
movs
mov
xor
jnp
fdivr
or
outs
cmps
bound
mov
xor
mov
adc
gs
mov
xchg
xor
sbb
jmp
mov
mov
out
cli
popf
inc
in
xchg
sbb
and
mov
leave
jbe
xchg
icebp
and
dec
add
movs
popa
xchg
inc
adc
sub
jne
sub
push
out
ret
mov
inc
push
xchg
sub
mov
imul
pop
scas
inc
retf
or
mov
push
push
loopne
jg
sti
inc
test
fisttp
adc
ins
sbb
nop
in
call
(bad)
jle
xchg
xor
arpl
sbb
push
jmp
push
mov
inc
out
cmp
in
jo
mov
mov
inc
push
mov
mov
mov
cmp
es
add
ror
mov
shl
inc
xor
mov
ss
shl
loope
cdq
sub
movs
ss
xchg
retf
aam
dec
movs
imul
sub
jne
and
ror
fwait
les
out
or
mov
xor
adc
iret
fsub
dec
xlat
cmp
mov
cmp
test
sar
push
rcl
lods
(bad)
adc
test
sub
inc
hlt
bound
retf
pushf
leave
inc
mov
dec
pop
xchg
clc
jmp
and
push
retf
pop
popa
xchg
xchg
(bad)
fsub
cmps
jae
mov
je
lea
adc
sub
push
xor
jns
data16
mov
pop
inc
arpl
(bad)
mov
jmp
mov
dec
xchg
in
pop
idiv
in
fcomp
test
in
sbb
fs
lock
xchg
dec
pop
xchg
sub
push
shl
mov
or
mov
ds
in
mov
xor
in
das
sub
nop
mov
ins
jmp
in
fs
cmp
inc
je
int3
out
xor
rcr
or
mov
push
in
inc
pop
(bad)
not
es
out
rcr
loop
pop
rol
loope
or
aaa
movs
hlt
sbb
jg
(bad)
mov
lock
popf
fwait
loopne
movs
mov
imul
cmp
(bad)
push
push
xchg
inc
pop
cs
rcr
mov
outs
mov
inc
addps
add
and
dec
sbb
aaa
cmp
or
cmp
test
aas
and
sub
inc
xor
mov
aas
cli
movs
mov
xchg
out
jns
and
push
ds
pop
and
cwde
ror
mov
pop
mov
shl
in
mov
push
fistp
pop
repz
leave
sub
dec
add
mov
outs
ja
and
ins
cmp
aas
xchg
clc
and
(bad)
push
or
(bad)
mov
test
fdiv
(bad)
test
lahf
cmp
push
pop
add
(bad)
add
jecxz
popa
or
cmp
fsub
hlt
aaa
xor
mov
aaa
or
aas
mov
mul
lock
pushf
iret
cmp
mov
push
mov
push
aas
xchg
fild
pop
enter
jae
mov
adc
pop
icebp
mov
cmp
mov
and
out
loopne
dec
(bad)
ins
loopne
cwde
out
out
in
rol
jecxz
test
dec
cli
pusha
js
and
fwait
cmc
ret
adc
mov
cmp
mov
inc
push
inc
repz
xchg
push
int
out
nop
fidivr
fld
out
sar
jp
dec
jl
adc
jle
retf
cwde
fcom
xchg
xor
and
and
test
fidivr
scas
jle
jg
rcl
xor
lahf
xor
in
lods
and
xchg
loope
(bad)
fbld
mov
repnz
pop
jb
les
pushf
data16
sar
push
cs
adc
test
(bad)
cdq
call
and
mov
not
cld
test
ss
outs
inc
mov
cmp
pop
xchg
das
or
pop
outs
dec
ins
adc
mov
jmp
les
mov
(bad)
out
push
add
sub
pop
std
pop
cmp
mov
mov
mov
mov
pop
inc
scas
repz
out
lods
xchg
call
and
ins
sbb
pop
pop
pop
inc
inc
pop
inc
ror
sahf
mov
cs
and
mov
shl
sub
loop
pop
addr16
loopne
fwait
dec
popa
add
adc
stc
dec
outs
or
add
in
das
jmp
retf
jle
dec
fld
xor
xlat
mov
jp
add
retf
or
rcr
out
sbb
xchg
jns
push
pop
(bad)
jns
(bad)
in
or
xor
dec
out
inc
jns
pop
lock
ds
je
mov
adc
sbb
ds
psubd
sub
mov
inc
pusha
repz
inc
stos
test
fsub
cmps
dec
xchg
and
mov
jne
call
sub
pop
nop
mov
(bad)
in
pushf
pusha
pop
add
aaa
pop
in
xchg
or
addr16
lea
ds
aas
aaa
inc
fwait
pushw
mov
mov
je
fsubr
test
xchg
xor
dec
aam
leave
ds
arpl
add
add
xor
fs
sahf
fwait
jmp
xchg
jmp
shr
scas
pop
xchg
pop
cwde
inc
or
inc
lock
and
and
xor
and
stos
(bad)
in
fsub
jmp
jmp
scas
imul
shl
xchg
in
xchg
sahf
sub
out
nop
aam
iret
fsubr
aaa
and
stc
mov
and
test
lock
into
pop
pop
xchg
in
jmp
outs
rcl
sbb
and
inc
add
and
jno
push
cdq
popf
out
clc
sbb
add
push
pushf
cld
mov
mov
push
cmp
inc
pushf
mov
stc
sub
jo
xchg
sub
aas
sbb
bound
jae
mov
push
cs
out
xchg
push
xor
mov
repz
adc
dec
(bad)
pop
aaa
cwde
mov
stos
jnp
mov
rol
jne
adc
int
into
sub
mov
dec
pop
xor
ins
mov
xor
cs
or
ins
mov
sub
sbb
mov
fild
or
mov
push
dec
int3
jae
sub
aam
inc
push
or
jbe
std
xchg
mov
dec
adc
sbb
jl
xor
dec
ret
lods
jg
jp
lea
call
popf
push
in
fidivr
mov
adc
in
imul
retf
jb
xor
sbb
adc
in
dec
mov
add
stc
mov
ror
mov
fwait
imul
dec
sub
jb
fnstenv
adc
cmp
loop
(bad)
enter
jmp
inc
mov
inc
jo
xchg
or
and
jl
push
cmp
jp
popf
popa
mov
in
ins
cld
add
mov
loopne
xor
xchg
and
ja
jmp
mov
xor
gs
(bad)
retf
xlat
pushf
sbb
lahf
cdq
cli
int3
lds
add
jp
inc
mov
lahf
and
inc
jmp
inc
jl
and
test
xor
adc
test
mov
mov
adc
and
dec
sub
jno
dec
adc
mov
mov
jnp
adc
mov
pop
in
jg
and
shr
arpl
jl
lds
movs
test
lds
xchg
dec
leave
cmc
cmp
cld
test
ins
or
inc
dec
ins
movs
sub
fld
mov
or
cli
ret
test
mov
cld
ret
vcomiss
jae
es
sbb
xchg
popf
mov
jle
cmp
mov
sar
and
lods
movs
pop
cmp
mov
js
push
mov
xchg
add
enter
(bad)
or
test
pop
movs
jb
jl
push
mov
add
outs
ss
push
repz
cld
inc
out
and
mov
mov
adc
int
ja
out
repnz
jl
sbb
popfw
popf
lea
mov
outs
inc
(bad)
js
xchg
mov
cli
or
and
mov
inc
jno
ds
push
or
jae
cmp
mov
mov
sbb
rol
xchg
stos
jl
test
js
popf
fistp
jne
inc
jecxz
and
fucomi
xor
out
mov
lock
ret
xor
out
mov
ds
cmps
mov
jmp
or
imul
mov
mov
and
mov
lahf
push
sbb
adc
fwait
xchg
add
loope
sub
xor
mov
(bad)
aas
cmp
and
jnp
pop
popf
scas
fiadd
inc
loopne
mov
push
mov
fiadd
ja
aad
fwait
or
aam
xor
dec
dec
pop
cmc
leave
sbb
mov
test
fbld
cwde
adc
nop
ds
rol
sbb
dec
or
mov
fs
cwde
sub
mov
and
sub
add
lea
retf
jo
into
jne
fmul
pop
cmp
lods
jnp
rcr
push
sub
jl
xchg
in
repz
dec
repnz
popf
lock
and
pusha
js
mov
pop
fisub
clc
nop
mov
cs
mov
(bad)
sbb
rol
mov
xor
punpcklbw
fimul
jmp
sahf
push
pop
fmul
fcom
out
mov
mov
hlt
jmp
add
movs
mov
out
in
jb
jle
push
sar
mov
xchg
inc
and
fisubr
mov
push
and
movs
cli
ror
in
pop
dec
mov
rcr
push
ds
mov
push
stos
mov
push
pushf
jp
movs
je
or
pusha
imul
lahf
rol
and
imul
cwde
aaa
inc
arpl
out
test
jae
push
or
dec
jl
inc
lods
cmp
aaa
out
or
inc
sub
cmc
cmp
out
in
ret
mov
add
inc
or
sub
inc
inc
mov
inc
sti
rcr
jo
ins
adc
push
in
lods
push
jne
cli
sub
(bad)
push
hlt
xlat
fwait
int3
fwait
mov
aad
(bad)
leave
rcr
sub
push
ins
xchg
cld
cmp
lahf
bound
or
adc
rcl
int
cmp
inc
push
(bad)
jns
jl
pop
mov
mov
jge
pop
jno
pop
push
jp
xor
stc
loope
call
inc
sti
sbb
cmp
mov
cmp
cmps
inc
or
mov
(bad)
xchg
cmovbe
adc
test
jb
add
(bad)
in
sub
mov
out
add
lods
xchg
xchg
loopne
push
xor
std
scas
xor
(bad)
cs
ret
das
imul
push
imul
add
add
push
jl
outs
xor
or
pop
or
(bad)
mov
cdq
pop
sub
sub
push
mov
pop
lock
pop
and
push
inc
test
pop
mov
xchg
movs
out
test
loop
mov
sbb
mov
out
ror
jbe
jbe
je
and
xchg
cdq
inc
(bad)
or
jmp
ror
pushf
movs
jbe
mov
cmc
ret
outs
and
scas
lds
in
mov
(bad)
shl
gs
xchg
enter
lea
lods
sahf
cmp
adc
in
aaa
mov
aaa
mov
push
push
into
stc
dec
pop
mov
inc
dec
cmp
sub
stc
jne
mov
jmp
xor
call
in
adc
arpl
outs
mov
movs
popf
fbstp
imul
cmps
int
jmp
jmp
movs
inc
shl
call
mov
fsub
pop
adc
out
xor
outs
ret
test
or
rcr
sbb
inc
out
(bad)
cmps
dec
jge
adc
push
in
mov
(bad)
les
retf
xchg
fcom
or
mov
retf
pop
dec
xchg
fnsave
dec
xor
(bad)
sbb
cmp
lods
pop
ins
sar
test
out
mov
mov
sub
imul
and
aas
nop
dec
mov
or
shr
fnstsw
pop
outs
cmc
xor
call
inc
sub
add
call
push
xchg
xlat
pop
imul
inc
jmp
outs
xor
cmp
xor
sub
cmp
push
xor
adc
je
call
popa
out
inc
pop
pop
fiadd
push
mov
shr
lods
lods
popa
sbb
(bad)
sbb
int
pop
adc
cmps
sub
inc
fwait
in
xchg
pop
dec
dec
or
sbb
test
mov
rol
or
imul
push
lock
xchg
xor
jbe
(bad)
dec
sbb
xchg
adc
add
out
aad
dec
pop
push
adc
leave
mov
pop
push
shl
les
mov
rcr
mov
imul
js
adc
scas
sub
xor
je
cdq
sbb
fadd
mov
push
mov
jmp
cmp
mov
mov
mov
sar
sbb
mov
xchg
sub
or
int
lahf
xlat
sub
add
test
fsubp
clc
shl
push
dec
jle
repnz
pop
xchg
sbb
je
mov
out
cmc
aas
dec
gs
mul
or
jmp
add
sbb
and
call
loope
pop
jne
adc
stos
xchg
dec
(bad)
das
out
div
fdivrp
add
addr16
test
out
in
add
jl
xor
jnp
ja
(bad)
xor
out
jge
sbb
rol
inc
and
and
in
pop
mov
test
movs
and
clc
xor
xchg
mov
jb
and
xchg
inc
xor
in
xor
addr16
pop
jl
xchg
es
cmp
mov
push
dec
or
adc
xor
inc
jmp
jmp
pop
js
mov
mov
outs
jp
and
fldcw
sub
inc
ret
and
adc
or
mul
jg
in
hlt
lahf
push
and
call
xlat
clc
adc
scas
lods
cmp
sbb
retf
mov
(bad)
das
pop
xchg
stos
mov
repz
or
pushf
cs
into
adc
lahf
and
dec
in
cli
aad
inc
int
xchg
movs
retf
xchg
inc
enter
push
sub
repnz
fdivr
call
push
mov
jp
bound
js
xor
mov
push
sti
cmp
call
jmp
xchg
(bad)
ja
jp
sub
mov
adc
lods
(bad)
pop
pop
or
das
js
cmp
dec
or
aaa
dec
and
jne
loope
xchg
retw
inc
inc
jno
(bad)
cli
jp
sbb
sahf
sbb
out
cmp
mov
fst
mov
or
add
int
or
cmp
pusha
ss
mov
push
daa
and
and
mov
rcr
(bad)
test
add
jecxz
(bad)
into
arpl
test
push
dec
cmp
ror
xchg
ficomp
push
jnp
inc
mov
xor
or
xchg
or
outs
xchg
mov
cmp
jmp
int3
ds
inc
push
cmps
xchg
xchg
push
mov
dec
mov
xor
dec
es
jnp
sub
mov
and
xchg
pushf
mov
and
and
xchg
cmp
xchg
cmp
push
or
jp
push
into
jle
(bad)
imul
jmp
add
jbe
cmp
sbb
mov
mov
iret
(bad)
dec
ins
xchg
xor
movs
bound
jl
pop
scas
xchg
lock
(bad)
sahf
in
xor
jle
in
lods
imul
gs
push
sbb
stos
je
push
ficomp
inc
jmp
sbb
xchg
adc
jbe
jns
scas
fisttp
call
(bad)
mov
pop
out
ins
test
test
or
mov
icebp
xor
loop
in
data16
push
xchg
xor
ds
ret
cmps
test
aad
mov
sbb
mov
push
adc
push
and
jns
stos
push
mov
push
out
sub
or
push
nop
jnp
mov
xchg
push
inc
clc
std
dec
adc
xlat
aam
leave
inc
outs
mov
and
ins
div
test
mov
sub
outs
or
pop
js
inc
mov
or
inc
mov
jo
je
test
dec
lds
loop
and
sbb
mov
pop
sbb
xor
mov
ins
std
test
popa
aad
add
mov
pushf
fidivr
pushf
mov
fnsave
in
test
sar
xchg
arpl
sbb
mov
push
or
jp
dec
add
repz
stos
(bad)
dec
sti
outs
dec
call
inc
shl
jo
pushf
scas
ss
add
aas
xchg
test
imul
xlat
push
pop
or
dec
imul
cmp
popf
mov
dec
jecxz
cdq
sbb
in
retf
imul
jl
out
or
pop
or
fldenv
jge
aad
xor
nop
mov
cmp
aas
lods
and
(bad)
pop
(bad)
out
into
arpl
lea
or
xor
sub
adc
fadd
out
push
add
(bad)
dec
push
out
repnz
add
enter
xchg
and
fldcw
loopne
or
cmp
add
jp
push
repz
(bad)
and
inc
loop
xor
sbb
mov
jecxz
out
mov
push
mov
std
outs
dec
stos
imul
adc
shld
xchg
(bad)
xchg
xchg
push
and
jge
and
inc
cmp
jno
add
aad
xchg
out
mov
into
ret
adc
mov
lods
cmp
js
cmp
pop
mov
hlt
stos
push
push
sbb
adc
aad
jnp
ret
loope
adc
scas
mov
lock
inc
int3
pop
push
jmp
mov
pop
push
jns
adc
shl
push
and
xchg
or
mul
cmps
inc
fs
lods
das
aam
push
push
(bad)
and
and
push
push
in
cmp
cmp
jmp
adc
push
mov
adc
xchg
fwait
mov
pushf
xor
fs
je
mov
add
jae
adc
push
sub
xor
and
sub
mov
pop
sub
ss
out
and
aam
jae
cli
shl
pop
call
xor
dec
jnp
test
mov
adc
cli
push
call
ss
mov
dec
sub
(bad)
mov
je
inc
arpl
dec
mov
fcom
and
inc
retf
push
stc
neg
cli
push
cli
sub
dec
sbb
sbb
cs
add
sbb
sbb
adc
mov
jle
aaa
pop
mov
scas
je
sub
pop
xlat
into
int3
cmp
xor
push
stc
xor
bound
mov
fisttp
jg
fwait
add
sti
jl
cwde
sbb
cdq
mov
mov
imul
pop
push
xchg
(bad)
(bad)
sti
(bad)
cmps
dec
fwait
jge
stos
aaa
dec
aad
sahf
sub
sahf
sub
out
sbb
lods
enter
sar
mov
pop
jnp
or
add
jle
add
pop
in
fdecstp
mov
pop
shr
ins
push
sub
retf
clc
lock
ret
rol
sub
xchg
sbb
int3
mov
test
cmc
mov
fsub
fs
pop
xor
or
jae
jmp
adc
dec
add
sbb
outs
(bad)
mov
loop
aad
mov
push
xor
inc
push
mov
mov
mov
(bad)
cmp
sub
fisubr
test
dec
icebp
and
xchg
pop
lea
lods
lahf
test
bound
loopne
je
sbb
cmp
(bad)
ins
jno
xchg
leave
jp
pop
cld
ja
mul
sti
in
or
sahf
sub
pop
arpl
push
jge
mov
jp
not
inc
jg
arpl
push
xor
cld
sbb
fld
pushf
or
cwde
stc
cld
cmp
fs
pop
sub
mov
repnz
icebp
jmp
test
loope
pusha
push
(bad)
in
jno
push
and
mov
imul
repz
(bad)
cvttps2pi
lock
(bad)
outs
in
adc
pop
cmps
test
loop
lahf
rol
push
lds
mov
mov
sub
mov
mov
or
pop
adc
fldcw
mov
ins
int3
das
inc
pop
lds
loopne
adc
jns
jp
iret
pop
xchg
lods
fisttp
repnz
imul
xchg
jl
lahf
sbb
mov
mov
icebp
dec
movs
clc
int3
mov
sub
xchg
call
mov
cmp
xor
sbb
xor
jg
pop
imul
(bad)
jmp
xor
or
sbb
mov
pusha
xchg
add
arpl
push
fnstenv
daa
lods
ins
push
mov
inc
push
xor
sbb
fimul
jnp
mov
pop
xchg
(bad)
in
outs
dec
jg
inc
adc
aam
push
add
cdq
fwait
add
mov
repz
jl
add
pusha
jb
push
pop
cmps
rcl
pop
xor
mov
sub
jno
jge
push
popf
xchg
stos
(bad)
lods
push
or
mov
fidiv
mov
mov
cdq
add
push
hlt
into
xchg
leave
sar
dec
dec
sub
inc
cdq
shl
add
(bad)
pop
jmp
cdq
mov
dec
xchg
sub
retf
(bad)
jnp
repnz
popf
dec
pushf
cmp
inc
push
aad
inc
mov
(bad)
push
add
adc
test
mov
out
cld
or
sar
jbe
fbld
xchg
xchg
jmp
xchg
ret
out
push
sbb
xor
sbb
jbe
call
ret
xchg
arpl
nop
add
aaa
xchg
xor
mov
add
data16
scas
lds
inc
hlt
jmp
adc
(bad)
push
push
into
je
mov
xor
add
dec
loope
add
ds
xchg
jno
loopne
aam
or
pop
lea
mov
pop
pop
sub
mov
rcr
sbb
mov
adc
jle
dec
add
xchg
add
in
xchg
call
pop
retf
je
push
shl
dec
and
dec
div
stos
ins
in
jo
dec
std
aas
add
mov
and
gs
cs
gs
and
out
mov
jp
loop
call
ret
or
cs
dec
sbb
adc
jae
(bad)
push
adc
fadd
sub
shl
retf
mov
aam
inc
pushf
xchg
ins
fs
xchg
cmp
mov
jle
ss
dec
xchg
(bad)
and
jnp
pop
jecxz
cs
mov
js
cmps
shr
sub
scas
aas
mov
pop
jecxz
push
mov
xchg
rcl
push
std
loopne
adc
push
gs
or
daa
mov
jnp
add
aas
into
shl
in
jne
iret
push
outs
xor
in
mov
jo
in
mov
dec
out
adc
cmp
ret
pop
cmp
jbe
push
sar
xchg
dec
xor
mov
push
xchg
lods
hlt
call
mov
cmp
ja
dec
mov
jp
hlt
out
mov
mov
jl
std
xchg
sub
ret
add
ret
jle
lds
or
pop
mov
cwde
cmp
and
(bad)
cdq
rcl
into
adc
cmp
and
call
inc
dec
jmp
movs
cmps
and
out
xor
in
mov
sbb
add
xchg
aaa
repz
mov
xchg
mov
dec
in
fld
cmps
xchg
push
mov
rcr
xchg
jmp
cmc
(bad)
adc
fcomip
cs
dec
lds
jp
xor
pop
dec
dec
push
enter
inc
push
xchg
and
sbb
or
lock
jle
xchg
push
jp
and
add
adc
or
push
in
adc
data16
mul
and
cld
cli
aad
test
movs
movs
sbb
mov
ficom
mov
add
sbb
xor
jne
pop
test
or
mov
movs
inc
dec
(bad)
mul
cmp
movs
add
sbb
mov
aas
pushf
jl
sbb
jno
jne
arpl
sub
xchg
mov
pop
adc
arpl
arpl
retf
adc
mov
arpl
cmova
fld
pop
js
push
sub
mul
or
stos
ds
jmp
ret
mov
xor
(bad)
dec
sbb
loope
test
and
xor
imul
and
xor
pop
(bad)
xchg
arpl
retf
and
dec
hlt
call
popf
ficomp
int
and
adc
sbb
repz
and
mov
mov
inc
sub
call
and
in
call
ror
xor
mov
faddp
dec
lods
and
and
and
sar
add
or
mov
fnstcw
call
aaa
push
fld
mov
dec
inc
adc
xchg
(bad)
test
mov
and
pop
pop
sub
pop
jl
and
dec
popf
icebp
mov
fs
jl
js
sbb
stos
idiv
or
and
xor
pushf
repnz
aas
fwait
xchg
mov
jle
xchg
inc
add
cmp
popf
add
inc
pop
sub
sub
(bad)
jmp
test
xor
mov
out
icebp
jno
stos
xor
xlat
or
or
sbb
mov
adc
outs
and
mov
scas
dec
cwde
or
mov
mov
mov
lea
add
rcr
fucomp
test
cmc
popf
je
sub
fnstcw
mov
ficomp
cs
fdivr
or
fmul
out
ret
sahf
or
pop
mov
pop
retf
clc
daa
jmp
fldcw
mov
popf
adc
imul
enter
(bad)
cmp
jmp
ja
sti
and
aad
mov
sub
imul
ja
pop
pop
jl
jne
cmp
add
sbb
cmp
cmc
mov
add
in
push
test
(bad)
cdq
mov
mov
sub
pop
cdq
mov
out
sub
adc
cmp
loope
dec
add
add
loop
loopne
jae
sub
xchg
rcr
and
in
inc
out
dec
in
mov
pop
hlt
adc
imul
adc
mov
cmp
jne
add
repnz
mov
push
scas
shl
push
(bad)
int3
xchg
adc
test
popf
ds
and
popa
cmp
jb
fidivr
mov
ret
dec
arpl
dec
cs
into
pop
mov
push
retf
add
xchg
repnz
call
and
dec
xchg
jns
ret
mov
rcr
js
shl
sbb
lods
adc
fisub
ficom
add
addr16
jb
mov
xor
mov
adc
push
rol
aaa
xchg
or
push
enter
fdivp
and
pop
xor
push
and
call
in
mov
dec
xor
neg
xchg
ret
xchg
jb
mov
push
shr
sub
jae
test
add
sub
cli
ds
in
test
sub
pop
cdq
xchg
cli
xchg
push
jge
add
mov
hlt
xchg
jo
and
mov
cmc
or
inc
pop
xchg
mov
jbe
scas
(bad)
std
into
scas
es
aas
cmp
push
inc
int
or
cmp
cmps
lods
test
mov
repnz
or
int3
int
fisttp
inc
pop
gs
pop
inc
fisttp
push
jecxz
xchg
nop
fisttp
jmp
stc
push
or
lahf
aad
pop
inc
inc
repnz
or
xor
ja
lock
hlt
test
mov
int3
and
dec
fs
mov
jle
cwde
inc
xchg
rcl
addr16
inc
add
or
sahf
and
mov
shl
in
cli
jmp
and
fcomp
add
xor
imul
adc
lds
das
push
data16
iret
and
not
xor
xchg
sub
jmp
dec
loope
mov
inc
sub
cmp
jmp
gs
out
or
push
loope
outs
out
clc
(bad)
shl
lock
or
(bad)
adc
int3
mov
leave
test
pusha
lods
nop
(bad)
xchg
in
mov
add
clc
jo
cmp
cmp
xor
cmp
sub
fadd
test
jge
mov
call
inc
or
jg
push
mov
push
cmp
in
fnstsw
daa
or
mov
jl
test
add
imul
or
ds
dec
xor
dec
aam
xor
mov
mov
shr
sti
push
in
test
push
int
daa
adc
dec
cmp
inc
sub
mov
and
out
or
shl
push
mul
mov
xchg
(bad)
sti
in
push
lock
retf
std
shr
mov
mov
jecxz
cdq
sbb
cld
pop
inc
push
dec
test
xor
retf
in
out
out
and
movs
cmp
pop
enter
and
inc
jmp
in
push
cmps
xor
dec
mov
dec
cdq
pop
and
and
das
cmps
fstp
mov
xor
out
cmp
xchg
repz
dec
xchg
jmp
and
addr16
lds
jg
adc
dec
in
nop
cmp
xchg
movs
xchg
ds
mov
xor
jo
pop
jle
xor
mov
mov
movs
lods
retf
repnz
jb
fmul
imul
mov
pop
jne
mov
jp
mov
adc
mov
rcl
lock
aaa
retf
arpl
cmps
repnz
jmp
mov
adc
mov
ss
in
xlat
cs
jmp
inc
jg
mov
lock
xchg
mov
es
add
(bad)
les
cmp
sub
mov
out
movs
sub
mov
dec
adc
in
ficomp
hlt
movs
adc
mov
cmps
aad
jp
cli
aam
test
loop
mov
adc
in
and
jae
or
cmp
cmp
push
repz
push
packsswb
jl
xchg
addr16
fsubr
mov
fdiv
cmp
fldcw
cmp
aaa
sbb
lds
cmps
mov
aaa
(bad)
mov
pop
jmp
sub
mov
push
stos
enter
and
mov
jne
sub
xor
jae
mov
mov
adc
ret
stc
dec
pop
lds
fdivr
(bad)
adc
mov
jp
cli
mov
jbe
scas
or
and
lea
fs
jae
or
bound
sub
sub
addr16
jo
jp
stc
and
or
and
shr
xor
(bad)
test
test
xchg
jo
in
and
rcr
adc
add
shl
test
sbb
sub
sub
lods
jecxz
das
rcl
xor
int
sbb
push
push
sar
or
sahf
scas
cli
jmp
jle
ss
stc
mov
cli
js
mov
ins
push
retf
stos
cld
repnz
fs
iret
sub
jl
loopne
pop
rcr
neg
mov
pop
jnp
mov
lea
push
shl
(bad)
sbb
mov
and
push
mov
ins
outs
imul
push
imul
and
aad
mov
xchg
mov
pop
pop
push
test
mov
cld
xor
add
movs
xchg
ins
(bad)
imul
and
imul
xor
fisttp
clc
mov
jecxz
sbb
mov
dec
iret
retf
daa
xchg
loope
sub
push
fld
lock
fdivr
add
mov
enter
push
(bad)
sub
fs
mov
sub
sub
or
stos
sahf
push
push
loope
sbb
int3
fistp
push
push
cli
pop
mov
adc
mov
out
add
aad
adc
mov
mov
and
sub
adc
cld
outs
pusha
test
inc
scas
retf
fidivr
sbb
adc
xchg
jle
frstor
push
cmp
(bad)
sbb
(bad)
int3
out
sti
add
out
jnp
ret
sbb
aas
imul
pop
push
iret
mov
ss
(bad)
sti
into
pop
add
and
jle
push
push
into
in
cmps
sahf
jb
mov
add
xor
sub
push
stos
pop
or
(bad)
sti
ss
mov
sbb
leave
imul
cmp
lods
add
stos
and
pop
movs
adc
hlt
(bad)
(bad)
outs
in
ret
cdq
retf
mov
fidiv
fcmove
cli
movs
loope
retf
ins
movs
div
loope
popa
xchg
mov
xchg
pop
xchg
inc
js
and
cmp
dec
mov
or
cmp
add
loopne
pop
(bad)
push
jns
(bad)
addr16
cmps
outs
jb
jmp
mov
mov
sub
popf
push
into
and
jecxz
xor
or
cmc
dec
das
pushf
jp
mov
add
mov
addr16
add
xor
inc
sub
mov
dec
mov
push
aad
mov
xor
(bad)
std
cmp
push
push
in
inc
jb
xchg
add
add
add
xchg
sub
hlt
mov
xchg
lds
xchg
iret
ins
sbb
mov
test
inc
push
pop
inc
mov
jae
push
jg
das
pop
push
sbb
ja
daa
enter
and
mov
(bad)
mov
add
rcr
test
das
int3
push
rcr
push
push
pop
dec
mov
and
lods
push
lahf
mov
mov
xchg
iret
aaa
ret
mov
dec
inc
dec
xchg
movs
pop
icebp
jmp
pop
xchg
enter
outs
pop
mov
scas
bound
adc
retf
movs
and
fst
pop
mov
cmp
and
sub
movs
js
enter
sbb
push
cmp
fimul
ja
out
jge
jnp
lock
cdq
repnz
(bad)
loop
inc
icebp
cmp
jno
add
call
inc
jne
outs
loopne
int3
mov
mov
(bad)
mov
or
test
fs
dec
pop
mov
retf
jmp
adc
in
lahf
jp
mov
out
push
adc
and
clc
jne
iret
stos
adc
imul
pop
dec
sbb
mov
int
dec
pop
pushf
pop
jns
add
ds
jl
sbb
scas
or
fs
aas
dec
test
pop
adc
jbe
fwait
add
inc
sub
stc
test
mov
sub
bound
push
sbb
cmp
xchg
dec
push
or
jo
cmc
mul
push
pusha
leave
adc
(bad)
bnd
stc
xchg
sbb
imul
xchg
sbb
jne
inc
lock
jge
mov
mov
jecxz
enter
or
pop
cmp
mov
into
xchg
addsubpd
inc
cdq
cmps
and
push
ins
arpl
pop
xor
dec
cli
mov
fs
jb
push
jmp
icebp
xor
cmp
cli
mov
cdq
fnstcw
mov
xor
arpl
pop
(bad)
mov
xchg
push
sub
ja
popa
push
adc
addr16
mov
lock
nop
(bad)
mov
inc
sub
cmp
test
sbb
inc
into
pop
sbb
xchg
imul
mov
cld
outs
daa
ins
aam
xchg
xor
mov
(bad)
jno
pop
push
dec
add
sbb
and
mov
cwde
or
jae
or
dec
ficom
arpl
cdq
sbb
jno
jae
xchg
outs
mov
data16
(bad)
popa
xchg
repnz
mov
mov
and
jbe
or
clc
push
aam
and
cmp
mov
sub
sahf
imul
add
xchg
xchg
js
clc
inc
dec
test
iret
pop
inc
xchg
jl
xchg
int
inc
stos
jecxz
push
sbb
or
fnsetpm(287
mov
xor
loope
ss
retf
mov
test
ror
enter
cmp
ffreep
cld
mov
mov
xor
mov
xchg
pop
xor
sub
pop
mov
push
les
retf
sbb
xchg
ins
jb
leave
lods
mov
imul
fimul
repnz
mov
adc
and
mov
adc
inc
jge
rcr
dec
fstp
adc
jnp
scas
stos
arpl
dec
enter
mov
push
jns
daa
mov
cmc
aam
call
out
inc
imul
adc
mov
mov
or
pop
xor
loope
daa
bound
sbb
mov
pop
inc
jmp
inc
hlt
das
jnp
xchg
xor
lahf
dec
daa
mov
mov
add
pop
js
adc
mov
push
xchg
jns
cmp
fild
cmps
cmps
push
xchg
pop
idiv
call
ret
loopne
sbb
ja
pop
leave
or
fdiv
jle
adc
movs
mov
fild
sub
ret
ja
jnp
addr16
mov
pop
in
aas
in
or
ror
(bad)
xor
rol
jne
mov
xor
add
iret
lahf
add
xchg
mov
xor
leave
movs
shl
lahf
(bad)
in
push
movs
sti
ins
xlat
mov
push
std
sbb
xor
sub
or
mov
fs
loopne
and
in
pop
jbe
fnsave
hlt
mov
test
adc
ret
xchg
pushf
loope
jg
mov
xchg
aas
and
popf
fcmove
pop
pop
lea
push
push
adc
jne
push
inc
mov
ficom
cmp
cmp
xchg
or
cmp
cmp
push
jp
mov
(bad)
pop
inc
aad
xchg
shr
lea
test
enter
mov
adc
dec
iret
cld
cmp
pop
sbb
loopne
xchg
arpl
aas
int
push
sub
aas
sub
pop
sbb
mov
push
lods
pop
and
pop
mov
lock
loop
sub
push
push
out
clc
adc
cmc
mov
inc
(bad)
adc
loopne
cmp
mov
dec
pop
addr16
inc
into
iret
inc
mov
push
rcr
rcr
and
iret
sbb
(bad)
xchg
scas
cdq
sar
shr
lock
(bad)
or
push
sar
mov
leave
jb
and
(bad)
mov
(bad)
jecxz
mov
loope
and
das
or
dec
es
cmp
mov
popf
jae
lods
fdiv
(bad)
jp
jbe
mov
test
movs
fiadd
mov
call
push
mov
push
into
pop
or
imul
aas
loop
or
stos
adc
bound
pop
dec
jl
push
xor
loop
or
dec
std
mov
sub
sti
or
sub
sti
jecxz
mov
sub
and
adc
xor
int
add
dec
lds
addr16
and
shr
add
fsubr
in
movs
fcom
dec
mov
mov
shl
leave
inc
xchg
sbb
popa
xor
retf
or
xchg
and
je
mul
stos
pop
out
xor
sbb
ds
dec
js
jmp
sbb
repz
pop
or
adc
and
mov
mov
xchg
and
sbb
mov
mov
jne
dec
xchg
pop
and
repz
(bad)
in
xor
retf
xor
rcl
mov
call
sbb
jmp
fdiv
jo
cdq
or
mov
inc
retf
outs
push
scas
xor
xor
loopne
fild
stos
clc
sub
adc
not
and
push
lds
pop
cmps
scas
cmp
shl
push
fadd
adc
inc
cmp
dec
or
fstp
mov
add
out
mov
add
repz
sub
fcmovne
pop
push
xor
jge
movs
push
aas
cli
lds
outs
sbb
pushf
or
cmps
push
mov
scas
mov
test
ins
push
adc
(bad)
test
inc
xchg
repz
das
pop
mov
sub
dec
movs
seta
inc
(bad)
les
pop
jecxz
outs
clc
mov
xchg
cwde
cld
cld
pop
sbb
fst
aas
jg
dec
sbb
mov
cmp
cdq
push
fistp
pop
sub
test
jmp
test
test
mov
and
fdiv
xlat
scas
or
push
lods
inc
xchg
sub
lods
or
xor
daa
rcl
nop
outs
xchg
fidivr
mov
mov
arpl
cmp
hlt
mov
in
aaa
(bad)
jecxz
push
and
push
ds
das
xor
pop
cmc
repz
call
std
mov
sti
xor
enter
inc
arpl
push
mov
stos
inc
mov
push
dec
(bad)
or
aad
gs
jp
cmps
sbb
and
mov
(bad)
xlat
mov
mov
js
pop
out
imul
add
sub
cmp
xchg
cli
jns
std
lods
arpl
jg
mov
scas
inc
mov
xor
push
jmp
pcmpeqd
jb
jmp
pop
ret
scas
xor
iret
ficomp
daa
mov
in
pop
fnsave
aas
inc
jge
add
cmps
jo
xor
push
jne
fdivrp
fidivr
cmc
sbb
push
xor
add
jns
xchg
fimul
and
fimul
call
jne
in
mov
scas
xchg
ret
mov
les
enter
in
jo
mov
in
sbb
mov
mov
sub
cmp
mov
mov
hlt
dec
xor
jae
jge
js
push
sbb
jo
jns
cmp
test
mov
push
mov
hlt
or
pop
int3
je
(bad)
pop
pop
adc
cli
outs
adc
aaa
loope
dec
mov
idiv
fmul
mov
and
dec
jmp
mov
(bad)
jb
aad
std
dec
add
push
js
pushf
pusha
test
stos
in
add
dec
inc
add
test
ss
clc
lahf
mov
or
push
cmp
sbb
jecxz
and
fild
pop
inc
fstp
cmp
daa
popa
or
sub
loop
adc
arpl
and
arpl
and
cld
les
mov
jmp
bound
in
adc
fidivr
shr
shl
ss
push
push
aad
add
mov
lods
add
mov
sbb
in
xchg
sub
out
push
std
xchg
popf
mov
jmp
or
mov
adc
jno
mov
and
dec
sub
mov
sub
stos
mov
lods
mov
rol
pop
inc
addr16
imul
fs
lea
int
push
rcl
mov
mov
retf
int3
daa
movs
je
dec
fsubr
sub
xchg
sti
mov
and
sbb
cmps
mov
xchg
mov
and
shl
data16
jnp
mov
mov
mov
mov
mov
bound
add
loop
test
es
or
mov
repnz
arpl
push
lea
stos
sbb
pop
xchg
out
fld
mov
aam
repnz
xchg
push
mov
push
or
ja
adc
push
mov
dec
add
mov
jno
(bad)
scas
sub
(bad)
lock
mov
cmp
stos
dec
iret
and
stc
mov
push
and
(bad)
es
add
push
loop
ret
xor
popa
nop
mov
into
lahf
adc
push
or
outs
inc
mov
addr16
pop
sti
jmp
adc
sbb
adc
fs
in
fcomp
cmp
xchg
mov
cmps
fbstp
loope
adc
sub
fsubrp
mov
out
inc
les
push
inc
mov
lods
add
push
cwde
adc
mov
and
and
movs
xor
sub
in
push
sub
jnp
outs
push
div
bound
fwait
retf
scas
xlat
fidiv
add
push
jns
test
imul
jmp
hlt
and
mov
test
std
mov
mov
popf
and
out
scas
push
xchg
pop
push
or
xchg
jns
mov
mov
and
pop
mov
cmp
and
aas
inc
push
jle
shr
mov
jl
jge
jne
mov
inc
xchg
dec
mov
inc
add
retf
jmp
mov
(bad)
inc
and
mov
mov
lock
xchg
push
in
outs
pusha
in
jae
(bad)
jo
mov
jb
mov
mov
pop
fdivrp
shr
popa
jg
sbb
imul
cvtpi2ps
pop
dec
mov
in
push
cmp
inc
stc
adc
xor
mov
sub
test
fs
push
data16
loope
shl
adc
aam
fwait
dec
popf
sbb
loope
ins
scas
pop
or
jne
mov
fmul
sub
sbb
movs
popf
sub
jmp
xor
in
or
xchg
jb
sbb
cmps
std
push
dec
aas
mov
cmp
or
into
dec
ret
add
fwait
mov
outs
mov
dec
in
call
mov
in
(bad)
aam
scas
in
jecxz
pop
xor
push
mov
pop
mov
dec
xchg
mov
lahf
(bad)
sahf
dec
xchg
push
out
push
mov
add
in
pop
test
pop
ins
sub
leave
imul
popa
mov
(bad)
std
outs
adc
retf
jmp
lods
pop
in
mov
xor
sub
jg
jae
lods
bnd
retf
inc
outs
or
xchg
push
dec
mov
imul
push
xchg
fsubr
out
test
jb
inc
retf
(bad)
ja
das
test
mov
popa
sub
mov
mov
and
inc
ror
hlt
dec
push
outs
inc
xor
mov
or
scas
and
inc
jecxz
sub
xchg
inc
dec
std
test
movs
mov
stos
push
jp
ins
adc
imul
xor
push
mov
fs
push
jg
jnp
or
add
mov
cmp
rcl
add
inc
xchg
lods
(bad)
out
inc
or
jl
push
cs
std
xchg
jp
sbb
mov
mov
dec
scas
in
sbb
adc
jg
in
pop
dec
cmp
ss
xchg
pop
daa
sbb
mov
cmps
rol
fs
loope
out
cmp
jmp
xchg
call
mov
adc
push
pop
pop
ds
mov
push
call
mov
inc
inc
std
int3
fdiv
lahf
xchg
or
xchg
xor
loope
movs
movs
aad
int3
jae
mov
into
out
lahf
dec
xchg
iret
push
js
cmc
repnz
xchg
hlt
xlat
imul
hlt
push
adc
lods
push
mov
add
popa
mov
add
mov
and
mov
imul
fisub
sub
fcmovnb
cmc
jne
xchg
jl
mov
(bad)
mov
mov
fbstp
push
loopne
ficom
mov
add
mov
(bad)
dec
xchg
dec
test
push
and
jecxz
scas
ffree
sbb
push
xor
dec
outs
ds
clc
and
dec
imul
jl
and
icebp
stos
jo
xchg
ins
sbb
xchg
mov
inc
rol
push
mov
cld
stc
jle
push
out
ja
cmp
dec
xchg
xor
mov
mov
sbb
or
inc
add
pusha
and
dec
cwde
test
call
and
pop
mov
mov
inc
pop
inc
inc
mov
(bad)
(bad)
outs
mov
and
fcom
mov
cdq
push
jecxz
mov
repz
shr
xchg
add
std
stos
adc
out
push
movs
subps
inc
(bad)
data16
xlat
mov
jl
fs
mov
(bad)
hlt
mov
adc
xchg
sub
leave
inc
clc
arpl
inc
add
jmp
mov
enter
aam
js
sbb
das
aaa
inc
mov
jmp
call
dec
test
push
ds
cmp
sub
xor
imul
mov
sti
(bad)
cmp
out
sbb
push
pop
mov
(bad)
in
leave
jo
cmp
loop
rol
cmp
cmova
in
push
test
(bad)
mov
(bad)
sbb
sbb
mov
push
je
xchg
adc
or
cmp
out
lds
add
jns
pushf
clc
push
sbb
hlt
test
stc
std
repnz
nop
test
je
jg
cmp
(bad)
pop
aad
xchg
test
xor
push
mov
loope
jmp
inc
lds
xchg
sbb
dec
smsw
or
scas
iret
rol
gs
ret
dec
lods
(bad)
test
cmp
mov
mul
out
dec
mov
mov
cmc
fsincos
icebp
or
das
or
gs
scas
aam
and
xor
and
and
jo
cmp
enter
xchg
mov
jg
out
dec
gs
xchg
cdq
xor
scas
lahf
xchg
push
pop
scas
add
inc
mov
ins
dec
fild
cmp
inc
lahf
call
jecxz
sub
loopne
xchg
addr16
les
xor
jle
and
adc
xor
daa
xchg
std
out
ret
stc
jmp
rol
xor
mov
pop
test
jo
sar
adc
lahf
jns
or
int3
fisubr
mov
fstp
dec
or
sbb
sbb
sbb
into
mov
and
dec
fild
mul
or
cli
cmp
inc
sbb
inc
rcl
nop
sar
xor
aam
in
dec
les
dec
dec
ja
inc
repz
adc
dec
ret
cld
mov
frstor
scas
rol
cs
fwait
int3
in
inc
jb
(bad)
ins
mov
enter
mov
jle
mov
xchg
or
mov
dec
mov
xchg
stos
cwde
push
mov
xchg
lods
addr16
repz
or
jb
xor
dec
mov
das
(bad)
imul
pop
cs
enter
out
adc
jp
mov
int3
push
rcr
sbb
shl
and
push
(bad)
shl
ret
or
xor
retf
stc
imul
popf
lea
pusha
pushf
xchg
sub
or
retf
or
rol
fst
adc
outs
xchg
loope
mov
sub
mov
jecxz
sahf
or
popf
add
xor
imul
outs
push
sbb
jns
(bad)
ins
dec
aam
jnp
mov
cld
and
aaa
add
jbe
inc
popa
loope
cs
fbstp
aam
pop
jo
jo
push
test
div
xor
sub
sub
push
push
fisub
scas
je
jg
rol
jmp
jecxz
cmp
fidiv
je
sahf
lods
and
mov
outs
dec
jl
daa
add
call
hlt
lock
cdq
stos
add
pcmpgtw
into
out
mov
mov
shl
xchg
jl
retf
inc
mov
jbe
(bad)
mov
sub
dec
or
add
in
stos
outs
cmp
mov
retf
stos
into
rcr
sub
xchg
jp
repnz
mov
das
cmp
pushf
ror
jae
inc
mov
pusha
push
cmp
dec
xchg
mov
jecxz
cmp
gs
xchg
adc
outs
add
adc
das
xor
and
inc
es
push
popf
mov
add
stc
scas
or
xchg
and
add
xchg
cmps
mov
xchg
arpl
ins
xchg
bound
idiv
lods
xlat
test
cmps
mov
fmul
inc
sub
pusha
jb
cdq
stc
mov
rcr
loopne
je
mov
cdq
js
mov
cmp
rol
lds
pop
cdq
ret
in
dec
add
adc
push
xor
mov
mov
outs
jmp
mov
shl
and
enter
cmp
and
sbb
xchg
pop
add
jg
pop
cmp
mov
and
xor
mov
sub
ret
inc
xchg
stc
xor
fsubr
and
loope
imul
daa
push
jno
dec
popa
imul
jne
mov
hlt
pop
lds
mov
mov
and
js
or
(bad)
fnstcw
mov
xchg
dec
sar
das
jg
cmp
cmps
jecxz
push
jmp
lahf
jle
sbb
xor
adc
or
ins
and
(bad)
push
xor
sbb
arpl
mov
or
add
pop
mov
mov
push
mov
test
out
mov
jbe
outs
(bad)
lea
cmp
mov
lds
or
pushf
add
adc
mov
in
mov
push
std
xchg
push
push
adc
push
stos
mov
jg
xchg
mov
add
push
and
inc
xor
cmp
xchg
rcl
inc
cs
add
push
ret
ficom
jmp
arpl
sub
or
bound
mov
pop
cmp
adc
add
clc
das
and
in
outs
call
mov
(bad)
dec
pusha
xor
mov
sub
cmp
movs
add
ret
xchg
lods
jge
les
(bad)
push
xchg
pusha
pop
or
add
pop
adc
mov
jle
pop
cmp
leave
int3
clc
push
fs
or
push
test
rcr
inc
lods
mov
int3
push
push
add
jmp
or
rcl
or
push
push
push
sbb
mov
mov
add
add
lods
pop
xchg
ror
mov
jp
dec
xchg
lock
xchg
sbb
push
out
repnz
pop
xor
nop
push
mov
jmp
jnp
pushf
inc
xor
add
jnp
sub
int3
das
je
ins
lods
mov
daa
or
pop
mov
mov
les
mov
scas
scas
or
mov
call
sbb
cmp
scas
mov
pop
adc
push
ds
jno
fdiv
pop
cdq
mov
cmp
sub
or
xchg
dec
sbb
(bad)
les
out
mov
jnp
and
push
scas
sahf
sbb
fwait
mov
popf
in
mov
or
(bad)
aad
jne
push
popf
add
add
sbb
ins
push
aaa
sbb
mov
and
jmp
sub
ja
sbb
in
push
adc
ds
push
int3
(bad)
fbld
xlat
xor
sbb
fadd
xchg
mov
mov
pop
sbb
mov
jge
dec
(bad)
nop
xor
add
cmp
sbb
mov
adc
sti
sub
shr
fs
fs
in
jg
into
ss
adc
icebp
pop
scas
push
dec
sub
cld
push
xchg
push
dec
icebp
push
clc
sub
(bad)
dec
inc
pushf
xor
push
push
xor
sub
movs
inc
(bad)
xor
out
fst
sbb
and
xor
jo
pushf
sahf
pop
call
dec
dec
xor
lods
xchg
data16
les
push
sti
fcom
push
sbb
sbb
andnps
out
outs
inc
fisttp
mov
push
sti
mov
fcom
leave
into
lea
retf
gs
fldenv
push
aad
fs
(bad)
loope
and
mov
movs
jns
nop
mov
dec
mov
sbb
cmp
daa
mov
mov
dec
test
sub
das
xor
dec
dec
daa
ficom
inc
mov
dec
movs
pop
sbb
daa
out
repnz
out
sbb
pop
rcr
adc
dec
and
jbe
fiadd
das
and
fs
xchg
jo
adc
inc
cmps
ins
ja
inc
sub
clc
mov
in
mov
outs
push
pop
pop
pusha
ds
in
bound
inc
mov
loopne
retf
repz
inc
cmp
push
dec
(bad)
aam
xchg
xlat
in
das
mov
clc
frstor
test
or
or
inc
hlt
scas
add
add
test
jne
jle
shr
jmp
mov
push
push
and
int
mov
inc
and
imul
icebp
test
add
xor
imul
adc
pop
movs
jnp
pop
int3
inc
call
js
push
push
movs
lock
jae
dec
xor
sbb
stos
frstor
ficom
xchg
arpl
sbb
fisttp
jnp
sub
ret
lods
or
xchg
jo
push
push
scas
and
xor
in
test
cdq
pop
fbstp
pop
dec
inc
sub
xchg
repz
mov
push
sub
movs
pop
dec
add
pop
add
rol
in
icebp
adc
shl
or
bound
inc
daa
pop
stos
jmp
sbb
(bad)
mov
inc
sti
shl
jg
jmp
nop
sub
fdiv
ja
lock
xchg
jo
xor
loope
dec
out
outs
aad
aaa
add
mov
inc
or
xchg
jp
xor
fsub
dec
add
out
dec
jnp
jmp
call
in
cli
push
mov
xchg
int
mov
das
test
ins
add
iret
pusha
ds
(bad)
xor
push
jo
mov
fcomp
sub
into
push
xlat
mov
and
jne
mov
dec
fisubr
sub
fcomp
adc
hlt
popa
xchg
and
inc
enter
aaa
pop
push
dec
shl
mov
jmp
xlat
and
call
out
inc
stos
fstp
test
(bad)
int3
and
shl
and
gs
test
pop
retf
repnz
push
stc
sbb
and
dec
push
mov
sbb
fsubr
frstor
rcl
adc
push
fs
mov
movs
pop
pop
shl
adc
cmp
out
sbb
xchg
xor
xchg
push
xchg
cmp
xor
out
scas
xchg
pop
mov
js
sbb
pushf
bound
inc
in
push
xlat
lahf
xor
mov
xchg
pop
aad
adc
push
repz
sub
jb
sub
shl
dec
mov
mov
adc
xchg
cs
or
fstp
inc
xchg
mov
rcl
mov
sub
mov
jle
and
lea
pusha
test
push
inc
jnp
in
pop
int3
add
xor
mov
mov
ss
sub
fdiv
add
leave
retf
inc
xchg
(bad)
dec
add
jmp
hlt
ins
sub
data16
popf
dec
xchg
das
ja
sub
add
test
rcl
test
jo
hlt
pop
ret
loop
lods
test
(bad)
adc
xchg
imul
inc
cmp
cmc
inc
sub
and
adc
shl
ficom
push
cmp
pushf
lods
ret
pop
pop
test
push
ja
scas
add
das
and
mov
sub
nop
inc
mov
add
pop
xor
aas
sbb
out
dec
stc
or
scas
rcl
mov
push
cmps
hlt
icebp
in
cli
les
jg
leave
out
sti
in
cmp
in
jle
icebp
sbb
aam
fcom
jne
test
(bad)
repnz
push
nop
mov
add
in
fidiv
mov
out
arpl
add
or
jbe
mov
pop
or
(bad)
iret
test
jae
jnp
arpl
test
adc
inc
test
retf
xchg
retf
shl
dec
xor
or
repz
mov
daa
sbb
inc
fistp
pop
mov
push
mov
add
adc
mov
loop
push
mov
adc
mov
jnp
add
sar
loope
lods
inc
and
adc
push
and
pop
mov
jnp
ins
pop
ret
daa
shl
xor
push
mov
fidivr
add
pop
xor
cmps
loopne
stos
sub
rol
pusha
jb
call
ret
popf
popa
stc
mov
inc
jb
sbb
imul
add
aaa
pop
and
or
test
pop
imul
scas
ret
add
add
in
xor
jo
jo
or
daa
sbb
xor
xchg
(bad)
repnz
leave
fwait
inc
ss
icebp
out
(bad)
dec
cmps
pusha
xchg
mov
sbb
lock
add
push
cmps
jle
imul
scas
jmp
std
dec
xchg
dec
sub
je
or
push
fldenv
sbb
or
and
xor
mov
sub
jmp
inc
inc
inc
call
push
xor
jle
push
hlt
ror
mov
push
mov
retf
dec
dec
add
inc
push
jo
pop
adc
jg
(bad)
jecxz
jno
cwde
test
jno
(bad)
adc
or
fild
sub
adc
lock
int3
cmps
jo
and
(bad)
dec
and
fidiv
sbb
fstp
int3
jb
out
jne
xor
jae
cmp
lds
outs
add
push
or
popf
inc
daa
jge
jp
and
pop
pusha
and
push
jg
xchg
popf
mov
bound
mov
jecxz
pop
std
inc
mov
fisubr
pop
adc
sbb
sub
mov
(bad)
sub
sbb
inc
(bad)
ret
gs
inc
jb
dec
and
outs
fsubrp
out
inc
popa
dec
pop
int
lods
push
lods
cli
mov
(bad)
aaa
and
inc
mov
das
and
call
cld
lea
es
inc
xchg
addr16
(bad)
push
or
lods
repnz
test
sbb
jns
push
inc
cs
mov
inc
jecxz
jg
pop
cmp
jl
rcl
and
jns
not
in
aad
sub
loopne
cmp
in
movs
pop
mov
stos
inc
push
add
jo
inc
pushw
pop
ret
sub
test
mov
mov
adc
cmp
push
jle
and
data16
nop
sbb
mov
inc
mov
sub
lock
sbb
leave
popa
xor
ja
cmp
mov
adc
add
mov
fs
scas
push
mov
and
(bad)
and
dec
popa
jge
jno
jecxz
sahf
popf
dec
xor
cs
repnz
sti
pop
inc
pop
scas
or
jl
call
pop
in
cmc
outs
and
pop
mov
dec
add
or
sti
inc
add
mov
sub
mov
pop
jmp
pop
mov
cmps
int3
and
sub
pop
idiv
push
ja
shl
hlt
push
xchg
lea
test
xchg
mov
mov
mov
mov
adc
jmp
pop
jecxz
ss
mov
enter
sub
inc
(bad)
(bad)
retf
cmc
or
aad
xor
fwait
sub
jmp
pop
pop
lock
dec
adc
mov
mov
mov
loope
aaa
sub
ret
push
jno
sub
push
sahf
loope
ins
out
cs
mov
leave
xor
popf
xchg
data16
sbb
lock
aam
jne
add
in
cs
rcr
sub
popa
test
dec
movs
aas
mov
retf
mov
pop
mov
ins
or
jb
mov
cmp
inc
pushf
sbb
mov
sti
dec
pop
and
and
pop
popf
das
pop
js
(bad)
xor
aam
dec
lahf
jecxz
add
pusha
mov
sbb
stc
jne
cmp
loope
jmp
xchg
sbb
inc
cli
push
push
jmp
inc
ja
pop
and
xor
mov
out
enter
mov
pop
inc
sub
and
call
or
sbb
push
push
in
sub
mov
mov
ss
shl
movs
jl
inc
test
ret
cwde
dec
fwait
fs
(bad)
sar
inc
mov
pop
pop
and
fwait
xor
imul
sahf
scas
je
mov
(bad)
adc
sbb
lods
sbb
hlt
push
add
jb
cs
pushf
adc
not
das
dec
xchg
push
mov
retf
adc
xor
push
mov
jo
and
lods
stos
push
push
adc
je
iret
int
mov
jbe
add
sub
jo
test
stc
fisub
clc
fstp
and
test
adc
mov
and
aaa
lods
or
test
adc
(bad)
cmp
push
mov
ret
pop
push
in
test
adc
ds
cmc
(bad)
in
and
jns
call
jg
inc
das
mov
cmp
repnz
jg
or
jns
loop
sbb
in
in
es
je
and
mov
jns
push
lds
sub
rcr
or
or
mov
add
mov
loopne
daa
lds
lea
sbb
test
add
loopne
lods
jmp
inc
xor
jecxz
mov
les
into
pop
mov
or
mov
mov
pop
ins
sub
shl
mov
call
mov
pop
push
jle
enter
adc
xchg
sbb
(bad)
scas
js
les
rcl
stc
mov
call
dec
(bad)
xchg
mov
mov
mov
ja
add
push
pop
xor
popf
ror
or
nop
cdq
js
add
mov
in
pop
(bad)
fsubr
xor
sub
cmp
mov
or
push
(bad)
outs
cli
inc
inc
xchg
mov
mov
and
xchg
imul
in
not
pusha
xchg
pop
movs
es
pop
ins
mov
mov
mov
call
jno
cmp
movs
or
mov
sub
and
dec
mov
jmp
sbb
jle
jmp
les
pusha
cmps
pop
sub
xchg
inc
lods
les
mul
mov
rcl
(bad)
cmp
sar
je
cmp
cmc
ins
and
pop
shl
call
xor
dec
imul
inc
sbb
in
ins
jge
xchg
(bad)
pop
pop
adc
and
fwait
mov
aas
into
xchg
jecxz
push
rcr
outs
retf
and
push
push
mov
xchg
push
jmp
loop
adc
and
pop
cdq
xor
jo
push
lock
arpl
iret
out
jnp
sub
ins
call
ins
xchg
jmp
scas
out
pop
pop
pusha
mov
jo
sahf
ret
jnp
push
push
xchg
mov
aam
push
push
mov
xchg
jo
hlt
mov
addr16
retf
jo
int3
pop
sub
(bad)
fcomi
push
xchg
cli
data16
shl
div
fidiv
hlt
dec
idiv
in
out
jmp
ret
retf
les
repnz
adc
and
ret
push
sbb
rcr
push
cmp
daa
pop
test
int3
pop
mov
ror
jmp
(bad)
and
test
pop
cmp
test
rcr
mov
xchg
in
mov
ss
sbb
jns
cmp
imul
mov
pop
adc
fmulp
imul
xchg
mov
or
inc
xchg
jge
in
div
ror
imul
pcmpgtd
cmp
or
add
push
scas
jnp
ss
add
mov
dec
dec
inc
sbb
dec
xor
xchg
mov
mov
int
xchg
jmp
cmp
jne
push
mul
pop
cmp
mov
repnz
or
pop
cs
retw
arpl
(bad)
jb
jbe
loope
sub
push
ffree
sub
lahf
jmp
sub
cwde
mov
test
mov
pop
ret
pop
push
cmp
fwait
dec
pop
jne
fsub
mov
repnz
ror
adc
pop
test
retf
clc
retf
imul
pop
push
mov
and
mov
dec
inc
xor
push
shl
sub
pop
sbb
sbb
jecxz
mov
fdivr
jno
nop
imul
adc
mov
add
jmp
xchg
test
int3
inc
ss
(bad)
scas
imul
push
add
dec
lods
add
pop
les
clc
retf
loop
add
xor
xor
mov
or
push
inc
add
cmp
sbb
sbb
add
ja
or
xchg
pop
fcom
add
xchg
call
mov
dec
xchg
movs
dec
in
mov
and
je
out
data16
push
push
pop
sbb
jmp
jge
sti
sbb
bound
dec
push
cmp
in
fild
sbb
fwait
lods
dec
repz
mov
xchg
arpl
sub
cmp
mov
xlat
jle
les
les
pop
cs
adc
dec
scas
pop
mov
or
or
aas
call
inc
cwde
mov
ret
test
sub
out
aam
or
mov
and
into
jae
mov
xor
push
fsubr
xor
inc
push
mov
sbb
fwait
cmc
int3
and
push
jge
je
pusha
jnp
jg
mov
or
ds
cmp
jmp
mov
into
int3
cmp
sub
call
and
es
out
cmp
mov
inc
rep
test
(bad)
mov
mov
daa
in
or
ins
xchg
ret
fisub
cli
test
das
fwait
push
std
xchg
and
fstp
mov
int
imul
xor
xchg
pop
adc
pop
pop
and
mov
pop
in
sub
inc
add
or
or
test
shl
dec
cmc
in
stc
push
cmps
loope
sub
dec
inc
jl
rep
jmp
xor
xchg
lds
stos
add
jle
fdiv
push
mov
or
(bad)
sub
jno
lahf
cld
adc
inc
mov
add
retf
jno
pop
push
fs
bound
inc
push
in
mov
mov
sub
sbb
movs
add
push
sub
scas
in
mov
das
pop
xor
jo
aam
xchg
retf
lods
mov
jg
dec
(bad)
cs
xchg
lods
jle
pop
jecxz
data16
cmp
(bad)
xor
adc
jne
repz
add
dec
inc
enter
mov
daa
fild
sysexit
aas
imul
push
inc
mov
test
mov
xor
xchg
in
xchg
jmp
data16
jbe
ror
sahf
repz
aad
sub
pusha
and
retf
and
lock
stos
ret
pop
iret
mov
in
and
sub
and
xor
rcr
sub
add
inc
sub
xor
adc
mov
bound
iret
fldenv
xor
pop
mov
mov
psraw
xor
cmp
or
pop
mov
je
mov
jo
inc
push
or
push
xor
push
or
nop
out
or
add
aas
(bad)
pop
cdq
fisub
and
retf
loopne
sti
push
cs
cmp
xor
pop
dec
mov
aam
clc
cs
pop
fadd
jbe
pop
jg
jle
sti
push
(bad)
clc
sub
std
mov
(bad)
cld
xchg
sti
ret
mov
adc
mov
mov
mov
mov
ret
enter
mov
mov
cmp
mov
and
xchg
lds
adc
retf
mov
mov
daa
push
ins
pop
enter
mov
clc
lds
mov
outs
pop
mov
das
add
out
leave
jns
dec
add
ins
and
loopne
lods
retf
and
cld
xchg
or
sbb
mov
xor
lds
(bad)
pop
fcmovu
ins
fsubrp
std
movs
mov
mov
sti
and
mov
dec
xchg
movs
and
mov
adc
xchg
jl
shl
xlat
and
test
cld
lods
mov
cli
inc
ja
and
adc
and
sti
das
push
pop
cdq
push
cmps
iret
fcom
push
jle
cmps
jae
lock
ret
sub
aad
dec
mov
int3
sahf
adc
xchg
out
cmp
sub
sti
ins
js
mov
mov
mov
pop
push
cmps
dec
adc
jbe
inc
mov
cmp
or
xor
dec
in
sub
les
pushf
int
push
rcr
dec
push
push
mov
stc
cli
out
dec
or
and
call
jle
cmps
scas
retf
movs
repnz
dec
ins
push
hlt
pop
test
pop
retf
add
movs
loope
ins
ja
jno
jbe
jle
call
inc
(bad)
mul
call
pop
mov
adc
mov
mov
aad
or
jg
inc
popf
pop
sub
lods
push
xor
stc
inc
adc
shl
push
shl
or
nop
jns
inc
int
push
sbb
jmp
leave
pop
xchg
inc
cmc
test
xor
cld
loopne
aad
ror
mov
and
pop
mov
loope
call
pushf
dec
pusha
xchg
(bad)
retf
mov
aad
mov
scas
movs
add
loopne
lahf
adc
in
cli
mov
sub
dec
adc
jnp
xchg
cld
and
inc
or
xchg
sbb
(bad)
(bad)
(bad)
dec
mov
push
and
push
cmps
pop
xchg
loop
je
push
retf
js
xchg
mov
mov
pop
loop
sbb
inc
aaa
mov
fsubr
adc
cmp
fsub
ret
idiv
ret
call
mov
aad
mov
add
cmp
into
fist
clc
gs
jo
mov
ins
sub
inc
or
push
push
shl
(bad)
jge
ret
xor
mov
adc
mov
adc
imul
xchg
lods
jle
cmps
lea
add
push
arpl
ins
out
cwde
and
pop
sub
ret
inc
cli
mov
xchg
push
mov
push
iret
mov
jno
xchg
pop
test
jnp
mov
sub
dec
(bad)
sub
iret
pop
dec
imul
retf
pop
sbb
pop
pop
outs
cmp
sti
arpl
pop
and
sbb
inc
scas
in
mov
cmps
add
cwde
adc
mov
int3
xchg
sbb
add
adc
je
lea
cmp
xor
sbb
pop
mov
pop
imul
cdq
mov
xlat
scas
jp
push
or
mov
xchg
jb
int
push
push
enter
ins
fwait
popf
test
sub
or
sub
or
dec
ss
adc
stos
cmp
mov
mov
mov
xor
inc
add
test
shl
bsr
leave
jp
das
add
shr
add
retf
fiadd
shl
adc
loop
and
add
stc
cmp
inc
dec
fwait
xchg
mov
xchg
call
xor
(bad)
(bad)
popa
mov
push
shl
push
sbb
(bad)
(bad)
dec
inc
mov
mov
clc
inc
cmp
repnz
pop
lods
shl
inc
or
pop
sbb
mov
nop
mov
mov
adc
cmp
pop
and
cmp
xchg
(bad)
pop
pop
sbb
pop
xor
or
aaa
xchg
or
mov
lods
lea
mov
fisub
add
xchg
ror
jno
in
stos
jbe
in
sub
mov
fs
mov
int
scas
enter
cmps
mov
jo
test
call
shl
iret
mov
mov
sbb
aas
adc
push
push
adc
clc
xchg
stc
mov
mov
adc
les
ror
or
sbb
mov
jp
xor
cmps
(bad)
fisub
adc
push
das
inc
movs
out
xor
inc
adc
cmovge
lock
push
scas
adc
add
xor
mov
cmp
mov
push
repz
jb
sbb
mov
leave
aaa
mov
cmp
into
mov
loop
scas
sub
push
outs
(bad)
cdq
test
or
cs
dec
ja
adc
sub
rcr
pop
and
dec
adc
loopne
inc
cld
mov
mov
inc
jns
ret
(bad)
sbb
pop
ret
ss
fsubp
call
fst
push
mov
cmp
xchg
lods
addr16
ja
dec
addr16
adc
jo
inc
or
in
cmps
pop
popf
int3
aam
xlat
and
(bad)
test
or
outs
jns
addr16
outs
fist
sbb
int
ds
retf
pop
pop
inc
inc
push
add
push
or
(bad)
cdq
sub
icebp
fcmovnu
cdq
push
(bad)
sub
inc
dec
ret
icebp
pop
inc
or
inc
cmp
push
inc
and
(bad)
lds
imul
mov
and
push
bound
clc
inc
mov
rol
mov
into
adc
ss
daa
inc
adc
mov
fldcw
popf
push
and
loop
out
hlt
cmp
sbb
loop
pushf
sub
jae
mov
sbb
lods
inc
xor
dec
jg
(bad)
pop
shl
call
movs
dec
jmp
mov
rol
test
mov
in
mov
loope
imul
je
mov
cmp
dec
lea
movs
shl
dec
ret
jle
pop
cmp
mov
leave
push
pop
xchg
inc
push
daa
inc
imul
mov
mov
xor
loope
pslld
push
pop
and
fs
mov
mov
dec
shld
jb
cdq
lds
scas
add
or
add
out
add
ja
pop
adc
cmp
xchg
push
xchg
push
mov
mov
ret
ja
daa
xchg
adc
(bad)
jns
jns
gs
movs
leave
mov
jl
test
dec
or
bound
loopne
cmp
mov
xor
and
sbb
pop
aam
js
jge
into
push
add
and
mov
add
mov
push
sbb
push
call
mov
pop
sar
loopne
xor
mov
and
ror
out
and
dec
lock
mov
fxch
pop
pop
les
jecxz
jmp
fild
fdivrp
out
dec
retf
pop
ds
retf
in
lods
jne
(bad)
jp
or
in
fs
in
mov
lods
xor
pop
out
test
cwde
adc
retf
push
in
repz
sbb
jb
ja
adc
pop
xchg
out
pop
lock
xchg
repz
ror
mov
lock
mov
cmp
clc
loopne
add
out
xor
and
xchg
cmp
scas
dec
push
in
mov
aad
scas
sar
bound
(bad)
jg
push
jmp
dec
mov
fmul
stc
push
test
pop
push
sub
or
inc
and
enter
arpl
lods
aas
js
stos
mov
push
push
inc
loope
imul
imul
ror
mov
sub
xor
leave
cmp
popf
leave
mov
icebp
call
shl
test
sbb
or
ds
jecxz
sub
pop
cwde
or
ret
addr16
retf
push
pop
pushw
pop
mov
adc
cmps
cmp
movs
js
or
pop
lds
mov
inc
in
shl
std
ja
inc
cmp
dec
or
cmp
jne
add
scas
sti
pop
das
mov
push
int3
movs
lahf
popa
or
ror
lock
push
xchg
sbb
push
inc
cs
mov
push
ins
lea
(bad)
out
out
inc
jb
imul
xor
mov
mov
mov
dec
jp
call
pop
and
push
push
mov
ret
into
cmp
pop
lods
in
enter
loope
jbe
(bad)
push
or
jp
xor
loop
loope
in
pop
or
ja
ss
lea
jg
ds
daa
xchg
xor
cdq
mov
aad
sbb
sub
xchg
test
xor
scas
movs
fs
ss
js
test
jno
ror
mov
xor
mov
in
sub
movs
and
dec
(bad)
mov
in
gs
enter
push
jg
pop
mov
cli
jecxz
jl
les
fistp
pop
cmps
test
dec
inc
test
push
push
xor
push
push
cmps
mov
out
cmps
repz
data16
in
nop
test
retf
pusha
push
add
test
inc
out
ja
out
stos
jmp
rcr
(bad)
repnz
in
rcr
pop
mov
adc
stos
jmp
jbe
(bad)
inc
push
lods
add
xchg
jns
imul
fimul
mov
in
and
retf
xor
jmp
fmul
aas
adc
jns
xchg
and
imul
sbb
in
int3
cmc
stos
xchg
fdiv
push
loop
push
test
xor
sbb
or
bound
ins
shl
and
mov
adc
div
call
xchg
cmc
test
fiadd
lds
sbb
pop
ds
cwde
test
cmps
xchg
xor
pop
add
adc
in
mov
stos
scas
add
fild
out
(bad)
es
push
cmc
jecxz
data16
jp
outs
jmp
sbb
and
cmp
mov
mov
cli
call
inc
mov
and
daa
ja
sbb
cmps
pop
push
daa
mov
fmul
cmp
in
lds
adc
loop
call
aam
xor
pop
xchg
jne
jmp
pushf
inc
xor
sub
inc
xchg
sar
dec
jmp
cmp
das
or
repnz
fs
addr16
je
loope
push
stos
pop
in
dec
jl
adc
ja
pusha
movs
stos
sub
xchg
(bad)
retf
xchg
(bad)
lods
add
hlt
sbb
push
pop
jl
cmps
pop
pop
shl
push
fcom
sbb
stos
xor
cmp
sbb
and
and
or
jnp
stc
jmp
(bad)
push
adc
cmp
std
fwait
les
std
push
stos
int3
in
cmp
mul
pop
lahf
shr
sub
or
sub
push
cdq
enter
sub
mov
jmp
inc
mov
push
xor
mov
dec
and
mov
test
adc
cmc
jne
xor
mov
xchg
dec
loop
movs
cwde
icebp
test
inc
inc
mov
mov
cdq
arpl
leave
jecxz
pop
lahf
in
ficom
repz
pop
scas
scas
jo
loope
fisttp
jb
jl
adc
mov
add
scas
xchg
faddp
retf
mov
cmp
int3
sub
xchg
cld
leave
mov
sbb
pop
cmp
lods
push
popa
adc
push
jecxz
fnsave
daa
jnp
dec
inc
popa
add
xchg
daa
or
test
xchg
je
rcl
inc
sub
xchg
mov
scas
adc
cmps
sub
sub
pusha
lahf
add
push
cmp
xchg
cdq
sahf
pop
nop
movs
dec
mov
rol
scas
dec
adc
std
pop
xor
in
jmp
(bad)
add
leave
fidivr
call
push
mov
int
jmp
movs
(bad)
sbb
cs
mov
rcl
xchg
cmp
adc
ja
(bad)
mov
test
or
out
jp
mov
jne
jecxz
inc
out
inc
mov
ins
call
dec
imul
or
popf
xor
in
rol
xlat
stos
mov
dec
ins
imul
mov
(bad)
fmul
in
mov
test
pop
sti
push
xor
cli
push
fstp
dec
outs
jb
or
(bad)
loope
bound
(bad)
mov
jmp
fst
fst
jp
mov
lds
movs
in
pop
push
adc
clc
sbb
enter
data16
fdiv
mov
addr16
or
xchg
jo
jl
sahf
push
retf
sub
mov
popf
cmp
js
pop
mov
fsubr
sub
push
sbb
sub
jo
test
pop
xchg
lahf
(bad)
or
sbb
(bad)
dec
mov
pop
mov
sbb
xchg
pop
rol
xchg
and
inc
pusha
and
cs
enter
push
sub
xor
hlt
mov
rcl
push
mov
enterw
clc
xor
xor
pop
out
arpl
outs
pop
imul
xchg
mov
jnp
add
sub
test
push
rol
inc
stos
dec
lods
mov
mov
fucomi
mov
adc
cld
mov
es
inc
fldenv
fbstp
rcr
xchg
out
rdmsr
into
jmp
mov
xchg
adc
or
pop
fistp
ret
pop
push
(bad)
mov
outs
sbb
mov
push
and
test
inc
pop
mov
std
mov
rol
sti
int
add
je
jmp
fidivr
rcl
jecxz
cmps
addr16
jbe
fwait
jae
jae
sub
mov
or
push
aam
div
xor
jge
dec
push
cmp
in
add
sub
mov
mov
push
ins
pop
xchg
inc
mov
and
dec
in
shr
test
ror
cwde
aas
aad
clc
and
xor
mov
arpl
pushf
xor
push
dec
aas
neg
imul
cmc
pushf
rol
dec
cmp
ror
sub
cmp
data16
push
jp
lds
xchg
mov
jnp
inc
les
dec
cmp
test
or
ins
and
(bad)
aas
or
adc
push
inc
fdivr
or
xchg
sbb
and
jmp
jp
lahf
add
sbb
dec
lods
xor
mov
scas
mov
jl
pop
xor
mov
lea
jg
add
xor
sub
jmp
mul
sar
jns
scas
pop
adc
xchg
pushf
push
lods
lock
jae
inc
pop
sub
jmp
and
mov
pushf
cmp
cli
push
mov
dec
loopne
xor
and
cli
cmps
jecxz
bound
dec
xchg
xchg
dec
fbstp
adc
or
fnstsw
pop
and
mov
mov
sbb
add
push
movs
inc
push
push
mov
jnp
in
call
cs
js
lds
mov
(bad)
or
js
xchg
push
push
loope
test
jo
xlat
mov
out
or
(bad)
dec
es
adc
mov
sahf
jmp
leave
(bad)
mov
in
xchg
cmp
(bad)
jg
pop
not
pop
(bad)
jmp
dec
adc
ss
inc
add
lods
pusha
mov
jmp
fwait
jmp
mov
stc
stc
bound
inc
inc
out
mov
lock
xor
ins
sbb
les
cwde
(bad)
xor
(bad)
in
jbe
jb
fisttp
iret
jae
push
and
inc
jl
push
addr16
adc
retf
test
pop
movs
dec
jae
lahf
out
sahf
test
dec
cmps
mov
or
jne
ss
mov
fnstenv
lahf
jbe
mov
out
ficom
push
mov
repnz
xchg
xchg
ins
inc
loope
imul
movs
je
cwde
jae
pop
mov
push
lods
out
inc
sar
(bad)
lea
clc
push
mov
adc
aas
adc
mov
dec
mov
pop
ror
cld
add
or
jg
sub
lea
sub
or
pop
or
aas
add
or
(bad)
iret
das
add
pop
movs
sub
pop
daa
ret
add
inc
cmps
js
inc
pop
and
add
(bad)
pusha
inc
sub
fsubp
add
clc
sub
push
adc
lods
inc
and
retf
int3
sbb
jg
aaa
xabort
cmp
jne
in
into
dec
jo
(bad)
cmp
adc
retf
inc
movs
out
mov
push
inc
out
xchg
sti
inc
lods
adc
xchg
xlat
fwait
gs
js
push
adc
shl
mov
fcomp
adc
push
fs
mov
daa
(bad)
mov
inc
out
fldenv
cmc
pop
push
mov
xor
or
fsub
mov
repz
enter
xor
mov
xor
mov
dec
sbb
mov
ror
mov
fldcw
xlat
sub
loope
stos
mov
mov
mov
cmc
inc
xchg
mov
xchg
sbb
dec
ss
sub
add
lock
mov
call
call
jge
and
test
push
imul
xadd
movs
rcr
xchg
ror
pop
gs
out
jno
ins
inc
ins
test
sub
and
iret
test
fldcw
push
pop
shr
in
popf
cmc
js
lods
(bad)
pop
popa
imul
jno
add
push
lds
sub
or
(bad)
pop
push
or
pop
ds
and
push
in
inc
xchg
dec
adc
sbb
sar
outs
dec
mov
movs
lods
sbb
aas
outs
cmps
fwait
lods
pushf
cmp
retf
ins
shr
test
push
xchg
mov
pop
shl
fcomp
sub
push
adc
sahf
fadd
mov
call
ds
jmp
xor
add
lods
pop
push
xchg
jae
gs
dec
test
fcomi
sub
mov
pop
sub
inc
stc
into
pop
stos
sbb
hlt
loop
jmp
loopne
imul
sub
arpl
or
xchg
out
(bad)
cmp
in
daa
into
inc
ja
fnstenv
mov
imul
lahf
push
inc
pop
leave
add
inc
sbb
xor
outs
sbb
fcmovb
dec
addr16
mov
push
and
lock
retf
sbb
shl
rol
jno
mov
cmps
scas
jle
scas
(bad)
scas
fild
adc
rcl
ret
or
out
in
es
pop
add
scas
push
cmp
dec
xchg
add
mov
mov
fs
dec
mov
fwait
retf
sbb
fstp
imul
mov
mov
inc
bound
adc
mov
lods
je
clc
push
xchg
(bad)
hlt
xor
jg
xchg
popa
cdq
mov
xor
shr
xor
dec
sbb
popf
imul
or
and
push
adc
or
lds
or
mov
and
inc
push
mov
xchg
jns
mov
sub
or
mov
aad
femms
inc
outs
repnz
mov
cmp
adc
inc
jge
jno
add
adc
ins
sbb
dec
sbb
(bad)
lods
mov
pop
ja
fdivp
test
lock
psrad
adc
mov
(bad)
mov
popa
loopne
pop
out
jbe
mov
lods
gs
sub
daa
ror
aas
out
mov
adc
mov
les
ret
cld
jmp
mov
mov
fwait
int3
shl
fcom
jmp
jle
pop
jo
pop
aad
push
or
push
(bad)
jecxz
clc
mov
jo
(bad)
lock
fnsave
dec
push
mov
jb
lods
push
outs
xchg
retf
xchg
jecxz
pop
in
shl
and
pop
mov
push
pusha
pop
add
sub
mov
jmp
cmp
rcr
cld
ficomp
loope
or
dec
loopne
xchg
mov
pop
rcl
inc
jg
dec
push
dec
ds
shl
jle
xchg
fistp
mov
repz
lds
enter
push
call
aaa
scas
(bad)
cmp
arpl
test
arpl
int
das
fcmovnbe
ror
in
or
ret
(bad)
lods
call
fwait
test
idiv
loop
and
jmp
and
out
and
jmp
fdivr
addr16
and
repnz
inc
ret
or
in
test
cld
fwait
nop
sbb
inc
sub
mov
cmps
and
in
neg
jnp
(bad)
mov
add
(bad)
ja
daa
mov
cwde
arpl
ins
lea
test
xor
lock
loope
test
movs
pop
enter
jle
fnstcw
fiadd
cmps
ins
mov
mov
(bad)
jmp
jmp
xchg
push
cmc
bound
ror
jg
cmps
ds
bound
in
mov
and
push
xchg
adc
xor
jl
cmc
popa
movs
je
scas
jne
lods
pop
mov
inc
mov
(bad)
cli
sbb
loopne
idiv
out
stos
ins
iret
pop
push
(bad)
fdiv
xor
jne
enter
je
add
fisttp
push
int3
xor
pop
inc
jp
inc
int3
cs
pushf
(bad)
mov
out
icebp
pop
fisub
iret
push
mov
push
lods
ss
push
aad
xchg
xchg
sbb
fwait
mov
mov
in
cmc
inc
imul
add
xchg
stc
dec
and
nop
jno
scas
jnp
mov
aas
mov
nop
lea
push
sub
mov
std
add
rcr
dec
jae
aas
popf
inc
push
cdq
push
mov
call
pop
and
out
mov
out
xchg
xor
sub
mov
sub
sbb
or
sbb
(bad)
hlt
scas
sar
jg
mov
jl
ins
retf
sub
dec
popf
mov
sub
loopne
push
cs
std
pop
push
loop
cmp
dec
sbb
xor
and
daa
shr
popa
sub
test
pop
fild
shl
mov
neg
push
neg
cdq
movs
ror
retf
jecxz
mov
pushf
or
dec
or
sub
xor
cmp
cmp
daa
mov
add
jg
push
jno
scas
into
dec
adc
js
pop
sub
sbb
xchg
jl
(bad)
xchg
inc
pop
(bad)
hlt
shl
iret
lds
int
leave
sahf
mov
jmp
pop
cdq
xor
and
dec
pop
add
pusha
enter
adc
mov
xor
or
inc
test
daa
cld
jg
cmps
add
out
iret
sbb
jl
xchg
push
ss
stos
aam
pushf
out
hlt
into
xchg
dec
scas
adc
xchg
dec
mov
jno
bound
mov
fst
add
jnp
sbb
xchg
add
or
pop
lock
mov
jp
ficom
fucomp
cmp
sbb
mov
fdiv
test
test
leave
sbb
pop
(bad)
sub
cs
retf
call
add
repnz
jl
out
xchg
ds
cmp
out
cmps
repnz
es
out
mov
mov
inc
outs
jnp
nop
pop
movs
mov
cwde
imul
aad
shr
inc
and
mov
push
jmp
jge
xlat
mov
adc
jg
in
ins
test
js
and
cdq
push
mov
int
xor
mov
mov
jne
dec
scas
pop
pop
jne
adc
into
mov
sbb
add
sbb
cmp
(bad)
cwde
fcomp
jle
jp
lock
jnp
push
sub
sub
cmp
add
dec
neg
and
dec
jmp
mov
and
mov
outs
(bad)
jne
call
push
imul
and
dec
add
fwait
adc
inc
inc
push
mov
push
inc
out
inc
out
neg
das
cmps
ins
adc
sub
bound
mov
into
push
fldenv
sub
clc
repz
cmp
xlat
sbb
push
ins
mov
pop
in
sbb
jge
and
and
aam
retf
shl
push
xor
(bad)
push
xchg
inc
sbb
xor
into
xchg
cmp
xchg
imul
jmp
jl
xchg
out
mov
(bad)
sbb
jb
std
or
cmp
outs
push
lahf
adc
(bad)
loop
imul
(bad)
in
push
dec
out
cdq
dec
or
cmp
jg
loopne
adc
pop
outs
mov
ins
shl
mov
sub
leave
pop
movs
lock
push
aam
imul
retf
cmps
mov
scas
scas
fwait
add
data16
push
xor
inc
mov
dec
sub
mov
stos
(bad)
inc
or
ins
pop
xchg
test
test
xchg
sub
retf
aad
inc
mov
sbb
jbe
imul
pop
xor
sub
push
lahf
mov
cmps
dec
mov
js
in
test
push
aam
push
lods
les
stos
or
adc
ror
pop
sub
pop
jmp
add
push
push
call
aam
jl
or
xor
je
add
mov
mov
cmc
test
arpl
stos
xchg
es
mov
xchg
test
repnz
(bad)
adc
ret
shl
jmp
shr
aad
or
mov
call
in
push
jne
js
jo
push
out
pop
push
and
stos
fwait
test
bound
mov
fsub
movs
jmp
data16
push
outs
add
mov
inc
cmp
pop
out
loope
inc
mov
neg
(bad)
jl
push
icebp
dec
jo
mov
jae
xor
inc
dec
push
retf
cmps
ja
das
pusha
mov
xor
pop
cli
iret
gs
jb
inc
pushaw
out
dec
mov
mov
dec
jl
xchg
test
test
imul
fstp
scas
cli
daa
not
rcl
mov
int
sub
xor
fadd
mov
shl
out
in
cmps
xor
and
addr16
mov
push
into
mov
(bad)
icebp
jmp
xchg
inc
repz
loop
ret
dec
bound
mov
lods
pop
mov
outs
sbb
inc
test
call
adc
nop
loope
and
xchg
shr
dec
dec
inc
imul
inc
pop
cmp
in
ror
bound
cli
cmp
mov
xlat
or
dec
fmul
in
std
les
mov
test
mov
add
imul
jnp
mov
mov
and
push
push
pop
xor
sbb
pop
cmp
jns
push
adc
xor
cs
retf
shl
cdq
xchg
outs
sbb
jo
jno
stos
stos
and
imul
outs
inc
imul
pop
xchg
and
sub
lods
nop
mov
sbb
inc
cwde
ret
cmp
mov
add
retf
into
mov
xor
add
lea
push
ins
ins
scas
adc
cmp
xlat
jmp
repnz
sub
xchg
pop
pop
in
inc
pop
test
xlat
call
pusha
xchg
fs
mov
inc
cmps
enter
lea
cmp
fnsave
cmps
scas
jns
mov
(bad)
scas
jecxz
xchg
stos
bt
add
jp
loop
pop
in
in
mov
leave
nop
add
retf
mov
and
lock
mov
dec
(bad)
xor
je
stos
ins
cmps
push
sub
fwait
jb
xor
dec
jle
ror
cmp
les
(bad)
aaa
ins
push
div
cmp
cmp
cmp
nop
mov
sbb
stos
aas
jmp
push
mov
mov
xor
xchg
out
rcr
in
mov
leave
pop
lods
inc
mov
adc
fisttp
(bad)
add
and
jbe
call
jg
je
loopne
jmp
inc
mov
cmp
xchg
push
jp
mov
ss
ror
fnstcw
fincstp
add
cmp
shr
repz
daa
inc
mov
jae
xchg
push
pmaxsw
das
lods
std
test
mov
mov
pop
jmp
sub
jbe
or
mov
mov
mov
nop
mov
call
add
push
leave
dec
lds
pop
inc
jp
pushf
scas
stc
cmp
fs
(bad)
push
popf
test
dec
sbb
push
mov
data16
or
stos
push
pop
push
dec
je
jo
cwde
shr
shl
test
xor
lods
and
dec
sub
xchg
call
cmps
cmc
inc
push
out
popf
jg
test
retf
lahf
push
and
scas
test
shl
xchg
push
xor
dec
adc
add
mov
out
gs
loope
iret
fstp
and
or
adc
mov
daa
popa
xor
jnp
mov
shl
push
cmc
adc
popf
cwde
xchg
adc
xor
stos
shr
pop
or
out
sbb
clc
mov
adc
mov
retf
test
loopne
aam
bound
cmp
sbb
pop
test
outs
push
inc
lock
mov
dec
lock
jp
(bad)
je
ror
mov
movs
push
adc
in
xlat
sbb
or
popf
mov
pop
ins
cmc
pop
std
iret
adc
arpl
mov
ja
and
cmps
rcl
jecxz
retf
sbb
adc
pop
xchg
(bad)
cs
ins
ins
ss
cmc
sub
fst
pop
push
js
and
faddp
dec
sar
inc
cld
je
cmp
and
push
xor
push
ja
sub
addr16
and
mov
neg
mov
ja
and
push
push
dec
fsubr
into
lods
imul
cmp
and
mov
push
popf
jae
inc
aas
into
jb
in
daa
mov
cli
xchg
lea
sti
sub
test
pushf
loopne
sbb
popf
mov
lods
xor
sub
rcl
pop
cmp
sbb
pop
add
fcom
push
ret
out
sbb
xor
loope
mov
jns
lods
mov
or
dec
xor
push
movs
pop
in
icebp
pop
imul
jo
leave
dec
sbb
lods
mov
std
loopne
sti
and
push
jne
fiadd
or
sub
fadd
sub
dec
jl
xlat
jg
mov
pop
daa
lahf
add
cmp
mov
ins
aam
cmp
outs
jne
mov
hlt
pop
in
xor
push
lods
push
sub
cmps
pop
mov
pushf
sub
xor
sub
inc
add
test
(bad)
fisub
pop
std
sbb
psrlq
aaa
or
sbb
push
lods
dec
pusha
loop
in
div
jbe
ins
xor
popf
and
jmp
fiadd
fidivr
sbb
sub
mov
push
into
push
mov
cmc
and
ins
fisubr
xchg
inc
jae
push
outs
pop
xor
imul
rcr
cld
fdivr
mov
daa
popf
in
add
out
xor
or
or
pop
shr
aas
xchg
sbb
xor
inc
adc
dec
call
jo
and
sbb
into
stc
push
mov
or
mov
push
ret
push
leave
sub
or
mov
inc
dec
xchg
mov
icebp
mov
leave
fnstcw
fs
neg
push
(bad)
jmp
mov
pop
jns
sub
test
or
scas
push
sub
xchg
js
pop
cmp
ss
or
stc
fwait
outs
hlt
cmp
and
pop
xchg
sub
cwde
jg
adc
movs
ja
mov
xchg
xor
sar
out
out
mov
jg
loop
xor
cwde
jae
call
scas
adc
add
xchg
int
or
and
jecxz
xchg
test
frstor
push
(bad)
pop
(bad)
jg
inc
or
clc
push
ud2
dec
jge
ret
jle
pop
cld
jne
dec
(bad)
fwait
lods
test
cpuid
fdiv
dec
adc
push
shl
adc
test
sbb
add
mov
div
pusha
xor
dec
xchg
mov
(bad)
lock
adc
daa
sub
ins
into
pop
push
push
fcom
adc
int
and
mov
mov
dec
mov
sar
adc
or
push
or
adc
gs
fcomip
push
into
pop
fnclex
stc
mov
cmps
lock
jbe
pop
sub
fcomp
jmp
xchg
loop
js
mov
cwde
or
dec
jb
cli
(bad)
sahf
fld
nop
ins
sahf
pusha
imul
js
mov
or
cmc
stos
adc
ret
leave
add
or
jnp
inc
call
dec
gs
and
gs
pop
push
jp
(bad)
mov
cmp
sti
repz
lea
imul
idiv
leave
stos
push
loope
fdivr
add
jbe
loop
into
arpl
aas
pop
test
fld
retf
fwait
call
pop
ja
lods
rol
xchg
mov
fwait
cmps
mov
dec
mov
mov
mov
or
dec
jle
cmps
jl
mov
pop
movs
sub
mov
xchg
js
fisttp
add
mov
repz
mov
mov
out
popa
jge
adc
cmp
jnp
mov
and
xchg
data16
add
adc
mov
shl
rol
mov
or
add
rcl
loopne
xor
out
test
mov
xor
cmps
iret
jge
les
jbe
add
add
xor
mov
mov
cmp
enter
leave
retf
sar
iret
add
lock
and
push
add
sub
mov
lock
dec
inc
sbb
add
or
jg
adc
and
loopne
cmps
push
or
stc
scas
sbb
sar
mov
inc
add
push
fnstenv
das
add
sub
imul
inc
and
jae
xchg
or
cmps
inc
sbb
into
mov
outs
jge
push
fild
lods
pop
(bad)
ins
mov
les
retf
lock
int
and
pop
adc
fstp
fidiv
into
sbb
mov
mov
push
pop
cli
mov
mov
outs
fidiv
push
xor
test
dec
mov
or
pop
push
cmps
xor
gs
aam
(bad)
out
lods
or
(bad)
aam
lods
and
mov
and
loop
(bad)
push
mov
and
mov
loop
xor
adc
and
jb
mov
adc
cli
mov
mov
xchg
rol
loope
inc
jecxz
xchg
ja
inc
sbb
aas
push
mov
arpl
ins
mov
xlat
inc
adc
or
jl
push
femms
mov
jne
popf
pop
mov
outs
mov
sub
and
scas
mov
xor
call
xor
(bad)
mov
pop
imul
je
test
mov
and
mov
jb
cmp
dec
scas
pusha
cmp
sti
imul
sub
pushf
pop
jl
mov
xchg
lods
fldenv
jle
mov
sbb
mov
lock
adc
fstp
fdivr
outs
jb
fwait
stos
fwait
xchg
add
cmp
repnz
iret
aas
in
add
call
inc
xor
dec
fs
lods
lock
xchg
mov
mov
mov
inc
loopne
cdq
fwait
retf
fild
pop
ins
je
sti
aam
loop
shl
js
lds
out
test
mov
jle
push
or
aaa
out
lds
mov
shl
fdivr
push
sub
fcomp
fld
push
xchg
iret
(bad)
fs
retf
ror
bound
rol
xor
mov
in
sbb
mov
call
or
rcl
cmc
jle
aas
icebp
out
test
call
in
add
mov
arpl
mov
xchg
pop
or
xor
jle
sbb
fiadd
mov
push
xchg
jae
icebp
(bad)
cmps
xor
aaa
cwde
mov
jno
mov
jns
sub
jle
dec
and
lds
xchg
dec
aaa
mov
or
cmc
ins
stos
mov
jo
pop
sub
xor
fldenv
push
out
jo
adc
je
sbb
sub
in
or
mov
or
(bad)
sbb
(bad)
mov
mov
sbb
push
loop
mov
pop
sbb
jno
mov
jg
repz
sub
and
sub
sbb
aaa
outs
inc
rcl
mov
cmp
cmp
push
addr16
xchg
push
cmp
rcr
retf
leave
test
jecxz
xor
repz
outs
and
popf
or
mov
jbe
shr
or
loopne
mov
fs
cmp
jo
mov
enter
loopne
jne
je
mov
or
cmp
neg
nop
sbb
mov
push
sti
add
and
arpl
jo
outs
adc
clc
out
int3
(bad)
push
ja
std
xchg
retf
cwde
fsub
retf
dec
cli
pop
sar
push
les
retf
or
and
clc
popa
ror
add
mov
mov
xchg
push
lds
ret
outs
sbb
add
(bad)
imul
(bad)
mov
nop
mov
icebp
mov
fdivr
inc
pop
jg
jecxz
jmp
sbb
sub
cmp
xor
and
push
and
cmp
dec
jnp
mov
stc
pop
sti
sbb
out
jp
stos
or
xor
sub
add
popa
fcmovbe
ins
mov
(bad)
dec
stos
pop
leave
xchg
ficom
ret
xchg
xor
fidivr
cmp
xchg
call
xchg
jo
and
aaa
inc
adc
inc
or
xchg
push
movaps
pop
sbb
js
ret
xchg
cmp
dec
out
shl
lods
mov
ins
and
cmp
pusha
jecxz
mov
sbb
cs
sbb
xor
retf
adc
fidivr
jge
movs
and
sbb
jne
cdq
sbb
popf
mov
and
aaa
cmp
sub
cmc
shr
inc
sahf
leavew
inc
int
push
fst
xchg
enter
mov
test
pop
adc
cmps
out
sub
aaa
push
in
data16
cs
(bad)
std
adc
ror
add
jnp
mov
lds
xor
dec
vsubps
aad
in
clc
stc
(bad)
xlat
jae
fwait
aam
sub
in
aad
das
(bad)
jmp
popf
cld
jne
ret
mov
repz
neg
adc
shr
mov
sti
and
iret
mov
ficomp
push
fstp
hlt
push
sbb
shl
sti
fldcw
lahf
adc
aad
push
mov
gs
loope
rcl
pushf
int
rcl
or
(bad)
and
sbb
jp
imul
jle
dec
xchg
sbb
mov
jo
test
in
push
rol
fnstenv
and
imul
mov
cmp
sub
push
push
dec
shl
lock
dec
enterw
ret
dec
into
addr16
mov
outs
retf
ret
sti
call
cdq
sub
dec
push
mov
mov
movsx
mov
aam
mov
int
dec
pop
add
mov
dec
test
adc
lods
cmp
mov
clc
cmps
xor
out
cmp
icebp
cmc
jo
and
jmp
cmp
stos
pushf
std
jno
pop
pop
or
movs
lock
in
mov
(bad)
mov
jg
loope
jmp
aaa
ja
dec
push
push
outs
xor
(bad)
data16
(bad)
pop
add
jl
into
hlt
add
sti
inc
push
test
jae
cmp
shl
mov
dec
cwde
add
adc
xchg
and
call
cmp
pop
jle
(bad)
imul
dec
out
jbe
dec
cli
rol
call
xor
mov
mov
inc
xchg
mov
mov
inc
push
mov
lds
mov
scas
xlat
jmp
inc
aaa
or
mov
push
rcr
pop
mov
sbb
adc
pusha
js
jecxz
retf
xchg
xor
or
out
jns
xor
jno
loop
xor
dec
pop
xchg
dec
dec
cmp
or
sub
sar
push
mov
call
(bad)
xor
sbb
dec
sbb
stos
mov
test
sub
lods
(bad)
or
mov
jnp
cmp
les
or
cmps
push
arpl
sub
sbb
xchg
ret
ret
sub
into
stc
xchg
(bad)
sbb
mov
cmps
test
out
sub
data16
mov
sub
pop
push
ror
mov
shr
mov
inc
adc
je
mov
xchg
adc
jl
sar
jg
fmul
mov
inc
xchg
xchg
icebp
sbb
adc
jns
xor
inc
dec
out
inc
out
mov
cmps
sub
sti
jnp
cdq
ds
cmps
add
bnd
imul
pop
cmp
jns
icebp
into
mov
jmp
int3
repz
jns
inc
dec
inc
xchg
aad
cmp
les
mov
test
pop
out
mov
dec
and
and
dec
nop
gs
jb
xlat
xlat
sbb
push
inc
mov
add
and
and
mov
int
dec
push
leave
jl
mov
in
mov
jl
mov
movs
clc
inc
push
jg
pop
out
xchg
inc
sub
retf
aas
scas
xchg
xchg
push
mov
sub
sub
sbb
into
aam
out
push
lea
push
clc
popf
lahf
sub
ins
cmps
mov
lea
mov
lds
jl
push
cmp
popf
dec
imul
mov
jmp
xchg
add
add
div
mov
out
fcomp
jle
mov
mov
or
mov
mov
push
add
repnz
into
adc
add
jmp
test
add
xlat
pop
mov
inc
jmp
ins
push
cs
pusha
sbb
rcr
dec
movs
dec
mov
(bad)
imul
jge
ja
inc
popa
dec
dec
add
and
cmps
sub
mov
mov
fadd
test
and
ret
xchg
jecxz
mov
pop
and
imul
sub
push
xor
mov
aas
pop
mov
mov
sub
bound
dec
test
jle
push
xor
ins
nop
addr16
dec
mov
(bad)
and
dec
enter
and
ja
shr
sahf
test
ss
or
aam
in
imul
jp
inc
mov
cmp
aad
add
mov
cli
or
mov
(bad)
outs
jmp
in
cmc
imul
js
mov
jg
retf
mov
sub
outs
pop
sub
sub
or
rcr
xchg
rcr
mov
stc
les
sbb
neg
in
mov
pop
mov
call
(bad)
jmp
or
mov
jl
push
std
ins
clc
dec
jae
fstp
adc
dec
ins
shl
pcmpeqb
aad
dec
dec
fsubr
iret
pop
(bad)
frstor
je
test
into
movs
fs
push
push
xor
mov
push
xchg
push
inc
repnz
jne
mov
cs
fimul
(bad)
pop
jmp
xchg
int
scas
rcl
ja
and
sub
aad
or
adc
or
pop
je
sub
loope
fsubr
test
fisttp
pop
dec
lds
sbb
mov
push
sbb
scas
jbe
aas
xor
jns
pushf
jnp
lods
dec
in
in
enter
repnz
dec
nop
(bad)
sbb
xchg
lods
in
add
xchg
cdq
test
sbb
lods
xor
dec
rcr
pop
sbb
mov
in
dec
test
lea
push
mov
mov
push
rol
adc
ins
dec
frstor
mov
cmp
add
cmp
sbb
lock
call
popf
mov
jmp
add
movs
cmp
les
inc
pop
sahf
jg
jnp
pop
mov
fmul
or
xchg
sbb
sbb
enter
rcl
ret
push
add
mov
dec
xacquire
stc
mov
(bad)
dec
inc
mov
fld
repz
push
pop
mov
ror
std
mov
ins
retf
sbb
mov
loopne
pop
fstp
xchg
and
mov
rcr
aad
fsub
movs
fcomp
or
test
sbb
mov
push
imul
xor
pop
pop
sub
mov
pop
pop
dec
leave
mov
mov
add
adc
adc
das
cmp
out
xlat
lock
jae
inc
adc
in
mov
dec
aam
push
lods
int3
mov
bnd
stc
out
and
ss
(bad)
aas
cmp
sbb
or
sbb
popa
lods
inc
xor
stos
mov
lahf
and
jmp
jl
data16
jge
xchg
and
push
fucom
cmp
push
fwait
call
repz
add
add
enter
mov
cmp
retf
or
and
adc
sbb
sub
jb
int
mov
sbb
inc
repnz
push
in
mov
pop
pop
add
fidivr
xor
push
adc
xchg
mov
out
cmp
loopne
push
dec
xor
cmp
aaa
clc
fnclex
xor
cmc
jp
push
es
dec
jle
sbb
ret
js
sysexit
or
lock
(bad)
cmp
xchg
push
push
enter
fstp
popf
mov
jge
std
enter
jp
mov
das
stos
int3
jge
jno
pop
jb
int3
js
out
sar
xchg
lods
push
xchg
pop
mov
cld
and
push
sub
pop
mov
outs
out
xchg
inc
push
ror
ss
pop
xor
es
fist
push
push
mov
movs
std
stc
pop
mov
(bad)
pop
sar
xchg
out
sbb
jo
stos
push
push
das
repnz
jb
sbb
adc
sahf
mov
inc
out
xchg
and
adc
xchg
pop
jno
jae
adc
test
and
call
arpl
push
fidiv
mov
mov
dec
sbb
or
out
pop
xchg
fnstcw
ret
sub
add
jno
cmp
sti
sub
pop
les
shl
sbb
outs
jge
addr16
push
adc
ror
ss
sbb
icebp
or
push
sahf
movs
and
push
cmps
or
xchg
sub
fstp
(bad)
ins
push
repz
imul
dec
pop
cmp
rol
les
cmp
jnp
int
add
and
push
test
pusha
aaa
jg
ret
xchg
jno
loopne
cs
mov
icebp
cmp
popf
mov
mov
dec
aam
iret
mov
pushf
or
fnstcw
movs
fidiv
cmps
retf
cmps
or
push
jae
cld
in
jmp
push
ss
cmps
xlat
iret
sbb
push
test
mov
loope
add
mov
jp
and
add
(bad)
retf
neg
pop
inc
pop
cmp
int
imul
pop
mov
adc
inc
cmp
and
xor
and
aad
adc
mov
out
xchg
lahf
fsubrp
jg
leave
aas
mov
push
ins
sub
adc
outs
js
adc
jno
add
cmp
pop
jnp
call
(bad)
mov
adc
adc
test
popa
pop
shr
rcr
call
add
mov
out
mov
inc
dec
pop
add
mov
sub
ret
retf
xchg
cld
xchg
jecxz
into
call
cmp
fwait
int
push
pop
lahf
mov
js
jl
rcl
cwde
xor
out
or
cli
enter
pop
mov
add
cwde
jbe
cmp
lock
fadd
inc
movs
xchg
sub
pop
mov
mov
sbb
xor
pop
sbb
mov
jae
mov
add
cmp
sbb
daa
(bad)
push
jne
outs
inc
inc
cwde
loope
outs
mov
icebp
in
retf
lahf
call
int3
pop
jp
pushf
pop
ss
mov
icebp
dec
adc
mov
clc
call
mov
jne
(bad)
aaa
pop
and
not
lods
and
imul
aad
data16
cmp
xchg
mov
sbb
in
mov
fcom
aas
dec
cwde
add
mov
xor
or
icebp
xlat
pop
jle
fidivr
inc
jge
ins
push
pop
mov
retf
rdtsc
add
adc
test
lds
xlat
sbb
repz
cmps
lahf
pop
imul
cmp
rcr
xor
cmp
jmp
ins
xor
mov
adc
inc
stos
stos
loope
fsubr
push
fiadd
(bad)
(bad)
jbe
cmp
or
test
loop
out
cmps
pop
push
inc
push
inc
dec
or
faddp
in
jbe
mov
mov
adc
jo
addr16
pop
(bad)
pushf
xchg
mov
addr16
cmp
pop
imul
jle
mov
adc
xchg
fwait
stos
add
je
and
fsub
dec
inc
test
imul
clc
cmps
cmp
push
mov
(bad)
sbb
sbb
mov
cmp
(bad)
adc
sti
sub
(bad)
cmp
(bad)
out
jnp
xlat
hlt
arpl
fwait
bound
(bad)
jmp
sub
ja
push
(bad)
addr16
fisubr
fsub
adc
out
rcl
mov
js
push
addr16
adc
mov
mov
pop
dec
loop
ins
rol
sbb
mov
jg
pop
sti
mov
push
pusha
mov
add
push
mov
mov
movs
ins
cli
add
gs
push
lea
(bad)
xor
nop
cli
loopne
adc
mov
mov
or
nop
mov
in
push
pop
ins
jb
test
retf
das
adc
cmps
dec
and
xchg
imul
and
out
sbb
cwde
(bad)
aaa
mov
aam
fmul
call
xchg
jb
jg
sbb
icebp
jmp
jle
or
icebp
adc
dec
int
ret
aad
mov
in
out
cs
pop
push
stos
pushf
js
mov
lods
xchg
fld
fstp
mov
hlt
mov
pushf
pusha
or
mov
scas
mov
add
mov
into
out
adc
mov
aaa
rol
adc
cli
daa
cmp
sbb
sub
int
mov
lahf
sahf
retf
enter
mov
test
add
adc
pop
xor
add
pop
and
ss
dec
(bad)
inc
pop
mov
push
mov
cmp
ror
popf
sub
or
popf
pop
and
sbb
inc
dec
xchg
aad
dec
(bad)
outs
inc
mov
xor
test
repz
sub
outs
cmc
fstp
fxch
cmps
push
or
call
xchg
push
outs
sbb
mov
dec
inc
cdq
ds
adc
inc
mov
pop
movs
fild
dec
sbb
inc
fwait
push
or
jno
pop
ror
ret
push
imul
ja
in
jae
hlt
mov
sbb
cmps
cmp
mov
mov
jae
(bad)
sub
in
cmp
shl
fdivr
fidivr
xchg
leave
and
push
pusha
dec
add
movs
sub
fisubr
dec
mov
jne
xchg
sahf
std
addr16
cdq
outs
data16
add
js
je
addr16
mov
loop
int
arpl
sbb
ror
fwait
sbb
ret
push
pop
lahf
mov
sub
xor
jnp
dec
dec
ret
sbb
add
lods
and
push
fcmovbe
or
push
lea
jmp
xlat
or
mov
shl
rol
cdq
mov
shl
push
ins
and
aad
sar
inc
dec
push
pop
loopne
cli
cmp
sub
mov
push
mov
mov
out
lods
jne
pop
mov
pop
push
in
ret
dec
je
xor
jmp
pop
ficomp
ins
adc
movs
test
inc
int
(bad)
shr
inc
aad
loopne
add
ds
stc
push
push
int3
repnz
inc
adc
xor
or
cmps
sbb
mov
and
xchg
push
mov
into
movs
adc
cmp
jle
ja
ins
(bad)
adc
sti
(bad)
stos
movs
or
lods
daa
xchg
ja
mov
cdq
(bad)
das
repnz
cmp
lods
dec
inc
sub
dec
xor
push
outs
sbb
mov
and
movs
inc
cdq
adc
inc
and
fld
fistp
push
xchg
sbb
lsl
dec
js
(bad)
mov
lods
in
jmp
pop
cmp
jae
jl
aas
pop
mov
loope
mov
sbb
daa
mov
out
shl
into
xor
data16
sub
dec
fistp
cmps
mov
xchg
cs
popa
pop
adc
shr
sub
push
and
jl
adc
mov
ja
mov
adc
lahf
ins
xchg
enter
inc
fidiv
clc
jbe
adc
out
adc
xchg
jbe
clc
mov
dec
repz
cmp
inc
aas
lahf
movs
adc
pushf
aas
add
fs
test
push
push
pop
mov
mov
mov
pop
enter
inc
xor
shl
xchg
sub
call
push
xchg
inc
in
dec
adc
fidiv
xchg
mov
(bad)
mul
add
and
bound
inc
out
or
scas
and
mov
frstor
xchg
jns
pop
das
push
push
das
xchg
aad
outs
out
cs
stos
in
lods
sbb
imul
sbb
pop
cwde
shl
(bad)
xchg
jne
fwait
pop
xor
fwait
test
test
out
sbb
inc
sbb
rol
std
adc
out
xor
out
gs
pop
jns
loop
or
call
jge
icebp
fist
and
xor
lock
daa
in
outs
lock
add
xor
inc
outs
jns
inc
mov
std
outs
jg
ror
mov
cwde
push
xor
popa
and
adc
cmp
mov
idiv
xor
test
and
sbb
dec
jle
fimul
mov
clc
jmp
leave
mov
jmp
cmp
mov
xchg
inc
outs
mov
jge
ret
fstp
push
push
test
(bad)
out
mov
inc
add
bound
shl
inc
call
add
mov
stos
neg
dec
xor
loop
mov
inc
in
inc
jl
stos
mov
mov
(bad)
out
outs
jmp
sbb
imul
fcmovb
into
gs
sub
mov
add
sub
xchg
fisttp
add
unpcklps
mov
outs
xor
popf
inc
out
fsubr
push
out
loop
in
jle
(bad)
cwde
xchg
div
push
ins
jle
outs
sbb
xor
jno
inc
leave
dec
(bad)
aas
pusha
mov
outs
in
xor
out
pop
outs
popf
test
mov
push
dec
jno
into
dec
sub
popf
jbe
xor
mov
and
out
in
call
sbb
pop
mov
std
add
repz
(bad)
out
inc
mov
call
call
adc
gs
repz
push
inc
jl
sahf
pusha
ds
sbb
int
inc
add
shl
adc
jmp
push
scas
mov
ja
cmp
std
xlat
xor
inc
push
and
ror
xchg
sub
xchg
(bad)
pop
add
in
push
loope
neg
mov
pop
mov
push
aad
jmp
pop
shr
pushf
mov
neg
cmp
jmp
shl
cmps
arpl
imul
(bad)
pop
lods
(bad)
shr
fcomp
or
mov
pop
dec
stc
dec
inc
test
add
mov
lahf
out
or
call
cwde
xchg
sbb
aas
mov
add
xor
adc
lea
ja
fwait
test
test
xchg
pop
arpl
rcr
outs
adc
hlt
in
xor
push
xchg
cmc
lock
xlat
clc
out
jno
ret
std
xchg
cmc
jne
sbb
in
sub
(bad)
xor
mov
shl
dec
push
popf
fistp
call
icebp
sbb
xchg
inc
mov
imul
movs
and
imul
dec
cmps
rcl
dec
imul
mov
add
or
add
cmc
shl
nop
pop
push
in
sub
je
cdq
mov
mov
sbb
repz
jno
ins
push
sbb
scas
in
add
mov
aad
dec
or
lea
fdiv
rol
hlt
pop
adc
mov
jbe
fnstcw
push
or
ficom
dec
and
cmp
inc
mov
or
mov
jbe
stos
aaa
sub
and
test
jle
mov
adc
push
push
and
pop
xchg
cmp
add
iret
imul
inc
test
push
sbb
pop
and
sub
adc
hlt
icebp
or
cmp
jne
or
xor
mov
jbe
mov
test
inc
jle
push
fstp
ss
or
xor
push
rol
ss
nop
mov
jmp
inc
push
jmp
xchg
sbb
mov
into
fsub
sbb
adc
in
mov
icebp
mov
enter
mov
repnz
cmc
adc
jb
(bad)
test
dec
sbb
jecxz
sub
cld
aad
aad
cmp
dec
cmp
push
xor
cdq
(bad)
enter
cmc
in
adc
(bad)
jae
ror
cs
push
or
cmc
cmp
jp
mov
call
and
mov
jle
cli
lock
(bad)
cmp
push
mov
inc
mov
push
nop
(bad)
add
imul
inc
mov
and
cmp
(bad)
ss
pop
add
jge
mov
sahf
and
in
lea
jb
ss
jecxz
(bad)
jmp
push
add
pop
ins
add
add
mov
cld
nop
fild
mov
sub
std
cmp
rcr
pusha
int3
mov
mov
ret
cld
(bad)
out
push
mov
iret
or
jmp
imul
mov
fs
fnstcw
push
stos
push
mov
pop
xor
sbb
mov
gs
ins
pop
sub
mov
mov
(bad)
aam
add
sub
jae
outs
mov
cmp
cmps
shr
mov
es
pop
cmp
or
inc
test
movs
mov
xchg
fstp
pop
xlat
fwait
stos
(bad)
ss
rcr
add
out
xlat
cld
fs
mov
mov
daa
xchg
gs
mov
cwde
movs
xchg
(bad)
not
fbld
jno
dec
dec
push
pop
cmp
xlat
jae
cmps
mov
mov
shl
outs
mov
sbb
icebp
outs
mov
in
add
ja
popa
rol
xor
inc
and
in
gs
mov
sub
cli
test
popf
imul
pop
loopne
fisttp
adc
aas
xchg
mov
data16
cmps
les
imul
in
call
ja
ja
mov
mov
mov
push
lods
lods
add
aaa
lock
into
pop
shl
js
or
xlat
or
aaa
cli
mov
xor
mov
jbe
sub
fiadd
popf
pop
fst
mov
jae
or
jns
nop
and
outs
mov
fld
xor
sub
push
mov
gs
jne
sbb
xor
lds
test
jge
inc
mov
xchg
push
iret
int3
mov
ins
fwait
or
sub
lock
rcl
jmp
inc
sahf
cmp
dec
inc
xchg
pop
rol
int
pop
das
loope
inc
adc
mov
stos
xor
aas
jl
imul
or
pop
push
fdivr
pop
dec
or
inc
jecxz
inc
cli
and
std
stos
int
ins
xchg
or
test
sub
add
xchg
and
inc
jnp
loop
jae
retf
push
(bad)
or
popa
jge
sbb
sar
cld
adc
cmp
es
inc
xor
pop
fwait
int
add
adc
dec
and
mov
loopne
test
stos
mov
mov
mov
cmp
pop
push
sub
cmps
sbb
out
sbb
icebp
cmp
lea
pop
pop
adc
bound
dec
gs
pusha
pop
mov
test
pop
frstor
inc
arpl
lahf
jmp
adc
retf
in
mov
xchg
aad
mov
jb
stc
jp
lahf
push
push
cmp
ret
dec
ds
cmp
push
and
js
push
jnp
imul
jnp
fisttp
sbb
and
add
fldcw
cs
push
shl
sub
xchg
add
adc
sbb
lock
sub
dec
sbb
outs
mov
inc
jle
test
out
out
mov
pop
aam
add
movs
scas
int3
and
jae
inc
push
add
call
mov
dec
outs
jl
mov
lahf
adc
fstp
cmp
jle
stos
lea
in
push
call
int3
push
test
or
inc
pusha
sbb
fcomp
scas
(bad)
sbb
mov
inc
adc
retf
sbb
adc
in
pop
mov
cmc
jl
adc
icebp
mov
ret
xor
dec
mov
int3
aaa
cmp
bound
iret
and
lods
pop
das
inc
je
jns
cmp
or
stc
adc
pop
push
push
fcomp
inc
fidiv
int
fs
hlt
pushf
pop
xlat
aam
or
jge
bound
push
ins
arpl
sbb
nop
sti
(bad)
pop
or
dec
xchg
jg
gs
or
mov
aam
xchg
sbb
pop
inc
jmp
push
les
les
jno
inc
shl
xor
jp
inc
jnp
mov
int3
add
push
icebp
mov
(bad)
test
js
leave
stc
mov
push
inc
mov
call
fistp
out
in
cmps
push
or
pop
arpl
retf
sub
dec
fwait
pop
mov
das
test
adc
dec
jge
mov
(bad)
or
rcl
shl
and
imul
mov
outs
leave
std
push
and
out
pop
or
cmps
push
mov
inc
(bad)
pop
repnz
pop
xchg
inc
xor
inc
mov
es
icebp
rol
mov
cmps
sub
in
cmp
mov
lea
mov
ins
mov
xchg
fdivr
inc
fisubr
adc
push
inc
(bad)
xor
enter
pop
lds
and
mov
(bad)
les
in
test
mov
mov
lahf
shr
les
pusha
and
(bad)
pop
mov
test
rcr
push
leave
std
ins
pushf
inc
fst
jl
mov
pop
aas
push
sub
(bad)
or
arpl
aam
cmp
jl
dec
in
arpl
(bad)
xor
fsubr
cmp
rcr
mov
jmp
std
pop
mov
sti
repnz
(bad)
inc
cmc
sbb
lea
aas
fidivr
pusha
mov
aas
(bad)
je
mov
cwde
hlt
mov
pushf
push
stc
imul
mov
shr
fist
sar
stos
mov
xor
inc
mov
or
lock
aad
aas
rol
push
popa
fwait
xchg
pop
mov
cmp
stc
test
add
mov
ja
pop
and
mov
add
and
jb
arpl
adc
popa
data16
sub
sbb
xchg
cli
popa
and
xor
xchg
dec
out
jmp
mov
jmp
out
push
in
sbb
add
push
jno
jo
push
and
ret
aas
mov
popf
xor
test
push
mov
and
jne
test
cmp
pop
xchg
adc
push
lahf
xchg
jae
out
push
sar
and
ins
movs
sbb
fst
push
or
imul
xchg
xchg
icebp
pop
(bad)
mov
test
mov
test
or
cmp
popa
push
adc
xchg
adc
and
push
sar
or
int3
cmc
cmp
addr16
xor
icebp
nop
imul
(bad)
loop
mov
and
iret
scas
adc
push
push
dec
in
(bad)
pop
iret
pop
sub
push
fldenv
or
push
mov
js
adc
mov
add
or
xchg
ss
pop
loop
setb
fbstp
push
sub
xchg
enter
add
mov
rcr
ror
sbb
xchg
out
mov
mov
scas
arpl
sub
cmp
outs
cmp
loop
lock
pop
push
fnstenv
add
retf
add
push
mov
popa
cmp
mov
sti
push
dec
icebp
add
or
inc
mov
mov
jecxz
jecxz
adc
dec
cmp
cmp
shl
cmps
cs
adc
daa
adc
movs
xchg
jmp
lahf
aam
stos
mov
out
add
sub
lock
outs
stos
push
push
xchg
pop
iret
ficomp
mov
(bad)
imul
(bad)
sbb
call
jl
cmp
fsubr
in
test
mov
sbb
or
stos
out
xchg
lock
fld
xchg
mov
inc
mov
mov
mov
stc
add
(bad)
cdq
cmp
popa
sbb
sbb
(bad)
sub
sub
call
call
les
jae
sbb
mov
gs
and
inc
fcmovb
or
ret
pop
jne
icebp
in
mov
bound
jp
add
mov
mov
pop
adc
jne
(bad)
fucomi
imul
push
adc
jl
dec
mov
jns
xor
dec
cwde
das
test
addr16
dec
in
jbe
pop
outs
cmc
mov
addr16
mov
or
sbb
in
jp
sbb
fiadd
add
loop
je
adc
shr
ficom
fucom
xor
inc
ins
jg
push
mov
push
sub
mov
lds
mov
or
xchg
xlat
add
dec
xchg
mov
ss
cmc
test
adc
or
div
shl
pop
jbe
cmp
movs
movs
jl
mov
mov
(bad)
std
inc
sbb
ret
cwde
jl
xor
(bad)
test
cmps
in
adc
pop
mov
pop
aas
imul
sub
lahf
jp
aam
jmp
cmc
or
popa
mov
sbb
and
rcl
dec
xor
lahf
or
repnz
or
push
sbb
jp
das
jae
adc
pushf
retf
fucomi
xchg
enter
xlat
adc
shl
scas
xchg
ins
test
ins
cdq
cli
cld
(bad)
and
fidivr
mov
adc
xchg
inc
iret
dec
not
adc
or
mov
vmptrst
cmp
call
outs
jnp
nop
fiadd
or
int
imul
(bad)
fild
mov
jmp
cmp
xor
ret
(bad)
and
xlat
dec
cli
push
aaa
xlat
into
test
jl
fild
rcr
aad
xor
cwde
mov
outs
inc
cmp
add
repz
mov
pop
ret
in
cmps
movs
xchg
(bad)
retf
jmp
jno
loop
daa
jb
stos
leave
cmc
retf
(bad)
mov
sub
push
fld
pop
popf
xchg
aaa
xor
in
add
sbb
ins
ret
cmp
ret
pop
push
jo
dec
add
sbb
mov
inc
pusha
scas
add
sub
pop
add
in
mov
push
outs
and
inc
ret
or
jns
popa
iret
(bad)
jae
sub
push
loopne
scas
sub
(bad)
fiadd
and
push
jb
(bad)
ret
pcmpeqd
ss
cmp
dec
sub
ins
sar
pop
inc
cdq
in
push
sbb
pop
out
lds
icebp
clc
dec
aad
push
mov
ja
aam
arpl
adc
add
xor
fisttp
cmp
dec
mov
ja
xchg
push
cmps
arpl
xchg
shr
retf
push
stos
xor
jb
movs
xor
stos
inc
pop
push
enter
test
stos
xor
push
jl
outs
js
push
fucomip
cmp
inc
imul
repnz
ss
jge
mov
sbb
iret
push
fist
inc
clc
int
fmul
in
jae
pop
mov
pop
pop
jnp
dec
shl
mov
and
in
xor
cli
cld
cmp
mov
cmc
clc
pop
pop
aas
sbb
pop
popf
jp
(bad)
loope
sub
cmp
xor
ins
cmc
out
inc
jmp
jge
xchg
jo
mov
pusha
push
pop
dec
sbb
push
push
mov
add
pop
mov
lods
rol
mov
imul
and
std
dec
test
cmp
pop
mov
movs
dec
popf
js
push
inc
rcr
mov
mul
loop
xchg
call
or
jb
push
dec
out
jecxz
or
mov
jmp
jmp
xlat
inc
cdq
test
inc
test
aas
inc
jp
and
mov
call
xchg
leave
mov
not
or
or
(bad)
mov
pop
inc
fnsave
jp
and
adc
aam
mov
jl
sub
push
jmp
pop
es
or
iret
inc
pop
jnp
sub
inc
inc
stos
je
mov
shr
jmp
push
or
push
jecxz
push
shr
xor
mov
pop
jmp
mov
ja
lea
neg
mov
(bad)
or
les
mov
add
out
dec
scas
cmc
jbe
gs
jo
ret
push
mov
inc
mov
test
push
cwde
or
jecxz
loopne
inc
jnp
fiadd
add
adc
out
stc
ss
movs
mov
es
add
add
dec
add
sub
jno
popf
inc
xchg
xor
xor
(bad)
lods
adc
bound
div
jp
mov
fcmovne
and
fcom
inc
(bad)
fist
mov
dec
in
movs
pop
mov
inc
dec
scas
fdivr
adc
xchg
push
lods
xor
bnd
mov
push
pop
adc
xor
or
adc
popf
xor
and
xchg
outs
stos
adc
stos
imul
(bad)
jge
pop
jge
aas
adc
dec
or
loopne
xchg
call
sbb
popa
inc
xchg
mov
hlt
mov
imul
jo
les
ds
pop
lods
xchg
mov
sbb
(bad)
(bad)
rcl
mov
xlat
push
xchg
fxtract
mov
out
inc
lea
fsub
jbe
idiv
jo
movs
ss
mov
cmp
push
cli
cmp
(bad)
lock
cdq
aaa
pop
adc
sahf
sbb
jo
mov
pop
cmps
cmps
fcmovb
out
and
sahf
or
data16
pusha
adc
inc
(bad)
fdivr
xchg
or
retf
ins
mov
adc
sbb
mov
test
in
sbb
mov
push
mov
or
lmsw
and
ins
shr
mov
data16
js
popa
sbb
push
xor
and
movs
es
sub
stc
add
pop
or
out
mov
sub
xchg
mulps
out
pop
dec
ss
mov
mov
sub
mov
add
(bad)
and
fistp
inc
movs
lods
xchg
jmp
sub
jp
add
xchg
ins
div
dec
inc
dec
jne
inc
jl
mov
mov
xchg
and
mov
or
jl
repnz
sub
ror
cwde
jno
out
xor
mov
and
mov
dec
jo
xchg
xchg
add
sbb
cmp
xchg
xchg
adc
add
icebp
cdq
inc
push
jmp
nop
jae
jmp
mov
push
pop
out
cld
lds
mov
sub
retf
fdivr
adc
xor
and
sub
fwait
ins
sar
push
dec
dec
push
sub
aas
jbe
ror
enter
outs
mov
dec
inc
mov
xchg
rol
mov
pop
fdivrp
dec
gs
shl
ds
fmul
sub
aad
xchg
dec
mov
push
ret
and
lsl
add
or
adc
xor
(bad)
ins
push
push
pop
lock
mov
jbe
xchg
dec
sub
int
mov
out
(bad)
ins
xchg
dec
and
push
sti
jp
mov
mov
mov
stc
imul
push
adc
nop
mov
in
out
fist
nop
jle
mov
(bad)
jl
dec
mov
jae
sub
mov
dec
adc
push
lods
sub
mov
adc
jo
pop
mov
lods
xchg
mov
cli
sbb
jmp
iret
loopne
(bad)
cmp
mov
xor
push
pop
out
jmp
xchg
test
ror
pop
cmp
test
in
scas
xchg
mov
es
fld
call
jns
ja
xchg
add
inc
xchg
stos
and
fs
pushf
mov
hlt
sbb
inc
xor
push
jo
xor
pop
ds
xor
add
pop
rcl
push
js
mov
inc
clc
aam
add
push
cwde
push
pushf
rol
(bad)
pop
lods
(bad)
scas
(bad)
cdq
jmp
popf
test
jnp
(bad)
popa
inc
inc
test
repz
dec
pop
sar
cmp
mov
xor
inc
(bad)
lods
les
and
aad
push
and
mov
xlat
mov
and
cmc
lods
movs
sub
inc
fisttp
xchg
xchg
xor
cmp
inc
mov
push
mov
inc
cld
out
and
adc
push
aas
ret
loope
adc
cmp
mov
jl
add
mov
loope
push
out
jge
sbb
int
xor
neg
dec
scas
fwait
jg
call
adc
push
cli
loope
lds
adc
(bad)
shl
arpl
imul
test
jnp
scas
fs
mov
dec
mov
data16
cmp
pop
lea
pop
mov
frstor
addr16
mov
mov
sub
pop
popf
or
test
push
int
dec
pop
and
jo
popf
add
ds
push
cwde
sbb
test
pusha
mov
pop
add
push
mov
cmp
pop
xor
jb
cmp
lock
add
inc
(bad)
pop
cli
add
es
leave
push
mov
sbb
out
inc
adc
test
in
pop
pusha
stos
push
pop
inc
push
cmc
popa
xchg
jp
(bad)
mov
outs
or
inc
jmp
in
or
mov
cwde
ss
mov
mov
xchg
adc
jmp
add
xchg
and
(bad)
in
div
and
push
sbb
inc
or
enter
push
and
je
or
mov
inc
adc
push
cmps
imul
ins
and
mov
int3
lods
dec
xlat
std
xchg
mov
mov
sub
inc
(bad)
mov
xchg
mov
sub
sbb
adc
cmps
nop
jmp
add
pop
ins
xor
inc
push
inc
shr
mov
fst
out
mov
jmp
out
xor
sbb
mov
dec
sub
sbb
in
retf
mov
lahf
fsubr
and
retf
mov
(bad)
scas
adc
js
test
mov
or
jbe
sub
lea
fsubrp
into
lahf
xor
fdiv
xchg
lods
cmp
sub
imul
pop
inc
xchg
jmp
mov
push
imul
mov
call
dec
adc
mov
dec
add
rcr
es
mov
add
mov
fistp
lahf
sbb
fdivr
sub
push
sub
sub
mov
xchg
ins
sar
ds
popa
ins
add
pop
or
jge
sbb
pop
retf
push
jecxz
call
fimul
into
add
gs
cmp
mov
test
push
adc
scas
mov
test
not
ja
ins
adc
sub
shl
mov
inc
push
mov
or
ja
sbb
mov
jl
mov
scas
repz
jae
jmp
repnz
mov
sub
scas
mov
repnz
out
add
xor
fisttp
aas
fbstp
loop
xor
push
cli
pop
pop
arpl
sub
sub
dec
in
popa
pop
pop
ins
xchg
sbb
sbb
inc
push
repnz
cmps
push
test
sbb
addr16
not
test
sbb
enter
addr16
and
xor
lahf
sti
(bad)
pop
mov
xchg
mov
pushf
inc
(bad)
mov
iret
cmp
jbe
xchg
fcmovbe
inc
xor
dec
jmp
int3
icebp
fcmovb
jbe
loopne
jae
pop
add
sub
xor
inc
aam
nop
adc
aas
and
sbb
and
xor
aaa
or
mov
push
or
je
cs
mov
mov
sub
push
jg
add
mov
xor
ror
fnsave
(bad)
mov
(bad)
fs
xchg
push
cmp
mov
cdq
pusha
xor
jo
shl
jb
dec
xchg
xchg
pop
xchg
sub
les
loopne
adc
mov
xchg
stos
ins
aad
adc
xor
mov
shl
push
pusha
fs
mov
push
jbe
push
xchg
cmp
add
push
aaa
dec
adc
push
pop
dec
loopne
and
cli
xchg
xchg
push
cs
cli
inc
jns
add
push
xor
leave
ror
or
or
push
push
jmp
pop
bnd
push
inc
pusha
clc
leave
retf
xchg
jnp
stos
popf
pop
mov
repnz
dec
jmp
outs
sbb
cmp
add
mov
inc
mov
rcl
pop
pop
imul
push
enter
xchg
mov
ins
xor
mov
xlat
xor
imul
pusha
jmp
xor
mov
dec
mov
cmp
xor
loop
jmp
repnz
test
(bad)
dec
xlat
jecxz
dec
das
xchg
xor
push
imul
add
xor
pop
adc
inc
sub
in
or
lea
add
mov
pop
mov
pop
pop
out
aam
aas
and
xchg
xchg
repz
or
pushf
scas
xor
arpl
jmp
scas
cli
dec
aam
repz
test
mov
jmp
mov
pop
sub
loopne
ds
or
add
push
(bad)
stc
jle
sbb
mov
in
sub
mov
int3
or
js
mov
rcl
sub
pop
or
aaa
lods
(bad)
adc
in
mov
mov
stos
(bad)
loop
jmp
(bad)
inc
bound
std
xchg
xor
fs
pusha
pop
(bad)
mov
sar
inc
mov
ret
je
mov
out
cld
pop
xlat
mov
xchg
jp
cmp
mov
mov
stos
dec
das
sub
jge
fcom
out
xchg
mov
add
in
cmc
xchg
adc
arpl
jecxz
loop
inc
out
cmps
clc
int
sbb
lock
daa
and
pushw
sbb
or
mov
mov
cmp
dec
fidivr
ss
sbb
adc
pop
mov
jb
rcl
push
push
cli
mov
jbe
push
push
and
popa
fnstcw
mov
call
push
cmp
adc
inc
fild
cmp
jmp
ret
jmp
scas
or
scas
(bad)
cld
sbb
pop
hlt
movs
mov
arpl
xchg
inc
add
jmp
jecxz
int
mov
cli
jl
mov
inc
fisubr
and
pop
frndint
mov
mov
sahf
repnz
cmp
push
movs
daa
mov
dec
imul
dec
stos
call
js
pop
or
dec
mov
mov
mov
ds
out
dec
in
jmp
das
mov
call
mov
dec
adc
cwde
push
or
mov
imul
lods
popf
xchg
test
cmps
mov
or
push
outs
imul
cmp
mov
ror
adc
dec
dec
or
or
inc
int
pusha
or
clc
inc
call
(bad)
dec
mov
scas
retf
dec
cdq
(bad)
lods
(bad)
cld
mov
movs
int3
sti
push
aad
ins
sub
das
inc
in
push
sub
into
or
repz
push
jnp
mov
hlt
fwait
into
mov
std
jnp
iret
(bad)
mov
and
xor
rcr
addr16
out
in
push
shl
fst
rcr
icebp
sub
stos
js
cmp
repnz
push
test
scas
mov
dec
call
sbb
mov
loop
jge
xchg
(bad)
sbb
pusha
out
test
arpl
dec
outs
cmp
ret
sub
cmp
or
mov
test
call
retf
mov
push
sbb
and
mov
pop
in
in
call
gs
xchg
retf
push
mov
sbb
cmc
mov
sahf
in
in
movs
mov
pop
cmps
add
repz
fs
mov
fidiv
(bad)
out
adc
stos
ins
inc
ja
dec
dec
pop
call
mov
xchg
gs
mov
les
int3
mov
clc
es
outs
pop
dec
stc
les
sub
jmp
add
cmp
jge
sub
arpl
aad
mov
push
push
jno
inc
mov
into
and
mov
push
cli
inc
lea
jbe
fisub
(bad)
hlt
shl
stos
iret
loopne
xor
(bad)
push
xchg
ror
xor
mov
icebp
sub
sti
jnp
jb
adc
mov
aad
mov
scas
mov
js
adc
in
push
and
jge
sbb
or
repz
ss
clc
popa
jb
push
es
into
ret
pop
add
adc
iret
(bad)
fisub
cmp
mov
jae
arpl
or
aaa
rcl
mov
xchg
mov
push
jg
pop
push
outs
aam
jbe
in
fsub
xor
add
lods
xor
jo
jo
jl
fs
(bad)
repnz
out
or
imul
push
dec
mov
test
(bad)
sub
test
and
aam
mov
jae
ret
fisubr
call
mov
fild
mov
leave
cwde
std
loope
imul
sub
stc
stc
mov
mov
test
nop
out
mov
xchg
and
mov
pushf
hlt
out
sub
cmps
jns
imul
test
inc
sbb
xor
ror
pushf
or
in
adc
or
adc
mov
cmp
mov
stos
cdq
pop
(bad)
inc
pop
cmps
iret
pop
mov
cmps
mov
jg
ss
aas
cdq
mov
sbb
jae
jbe
js
mov
hlt
das
mov
jno
xchg
inc
mov
mov
mov
and
push
dec
fnstsw
lods
jl
add
imul
sub
jbe
mov
pop
xor
ret
out
sbb
enter
mov
inc
addr16
enter
enter
in
lahf
push
scas
and
stos
xchg
popa
jp
jge
cdq
sbb
sar
ror
loopne
hlt
call
in
add
jle
jmp
push
daa
fidiv
adc
adc
push
(bad)
into
inc
retf
ret
in
je
sbb
sub
in
stos
fwait
ja
scas
mov
add
pop
das
out
ins
push
xchg
mov
sbb
adc
fild
movs
inc
out
out
mov
add
clc
mov
sahf
arpl
or
in
mov
sbb
cmps
add
pop
or
in
pusha
or
imul
xchg
sub
dec
jae
loop
and
lods
dec
xor
adc
or
fild
mov
inc
jo
int3
mov
cmp
inc
jo
test
out
dec
xor
mov
pusha
dec
inc
xor
fcomp
(bad)
das
xor
ja
pop
jno
pop
fist
add
cwde
inc
or
mov
mov
out
xor
mov
pusha
jle
dec
outs
jmp
mov
pop
adc
sub
jns
pop
mov
xchg
mov
cmp
add
xor
fcomip
inc
xchg
cmp
xor
stos
push
pusha
adc
test
and
inc
dec
mov
add
push
in
push
push
cs
jle
pop
push
add
or
outs
(bad)
cmc
sbb
test
pop
fprem
dec
add
imul
je
out
dec
add
xor
sbb
mov
hlt
jns
xchg
data16
sti
or
jb
cmc
cwde
push
movs
mov
lahf
adc
push
mov
adc
add
push
int
inc
adc
out
(bad)
stc
inc
lock
rcr
sub
fcom
mov
mov
into
out
ins
out
xchg
int
adc
mov
fwait
sub
in
into
mov
xor
mov
xchg
cmp
repnz
sub
mov
add
mov
pop
out
lds
into
push
cmp
adc
add
loop
pop
loopne
xchg
or
dec
lea
in
(bad)
outs
popa
fadd
sbb
shr
cmps
push
mov
call
add
xor
pop
fstp
lods
pop
daa
inc
add
sub
pop
aam
jno
inc
sbb
ror
fimul
cmps
dec
xor
in
mov
ds
lea
aad
dec
and
test
aaa
aad
dec
cdq
sti
mov
sub
pop
call
scas
rcl
ja
mov
mov
add
fwait
in
lods
inc
(bad)
in
int
jecxz
inc
pop
and
icebp
push
imul
mov
pop
cmp
inc
scas
popf
add
(bad)
jg
or
inc
pop
cmp
repz
xchg
daa
and
push
mov
hlt
loop
jbe
xchg
fdivr
sbb
and
xchg
push
and
mov
xor
mov
ret
and
jbe
mov
ds
std
pop
push
dec
xchg
cwde
gs
mov
enter
retf
dec
pop
hlt
or
dec
push
ret
mov
stc
dec
adc
xor
out
sar
or
cs
outs
in
ret
mov
inc
xchg
pop
sahf
lea
mov
loope
retf
ds
push
lahf
push
lds
cmp
out
pop
sub
js
repnz
jo
lock
or
test
loope
ficomp
inc
mov
popf
test
arpl
jmp
or
shl
inc
je
push
cmp
stos
movs
stos
in
into
xor
push
add
cmp
push
hlt
xor
cmp
and
call
pop
jl
mov
sbb
jno
retf
adc
pop
fld
inc
jecxz
sub
ret
leave
jl
xor
(bad)
dec
icebp
ss
jp
jp
sbb
test
movs
es
repnz
adc
push
cmps
xchg
jmp
fdiv
mov
mov
push
pushf
and
sti
in
call
(bad)
pusha
push
cmp
push
loopne
xor
inc
inc
push
ins
movs
fcmovb
sub
push
rcl
push
dec
mov
int
and
sub
push
push
xchg
sbb
mov
inc
pop
lahf
les
jnp
mov
cmc
add
loop
ds
inc
fst
rol
inc
(bad)
aam
in
or
idiv
mov
outs
xchg
aas
std
pop
call
mov
cmp
jb
cmp
adc
enter
lods
loope
clc
mov
cld
pop
in
and
lock
cmp
test
xchg
xor
ja
mov
lds
(bad)
loopne
out
inc
retf
jp
shl
ret
call
cmp
int3
fldenv
data16
mov
mov
pop
ror
dec
test
mov
imul
mov
cmps
dec
and
loopne
and
retf
ins
inc
div
jbe
mov
fwait
popa
mov
imul
cmp
push
xchg
jg
inc
push
(bad)
xor
outs
xchg
push
xchg
(bad)
ror
jle
out
scas
pop
in
mov
adc
into
or
mov
adc
dec
imul
leave
push
(bad)
mov
mov
jp
jnp
add
dec
or
mov
fmul
mov
std
pop
and
and
ins
sbb
xchg
sbb
and
push
jp
cs
enter
xchg
cmps
test
(bad)
sahf
fld
mov
adc
pop
mov
cmp
int
pusha
das
cdq
jnp
mov
cs
mov
jmp
shl
sar
cvtps2pd
push
inc
cdq
sbb
push
cld
or
cs
mov
sbb
jle
push
aam
mov
inc
les
sbb
mov
out
stos
aaa
(bad)
aaa
jp
in
dec
jb
sub
push
aam
cmp
lods
repz
push
mov
or
inc
popf
addr16
scas
jmp
pop
call
mov
(bad)
or
scas
and
sbb
sub
call
dec
jle
cld
or
add
xchg
retf
sub
mov
jnp
stc
scas
mov
sub
fisub
add
les
sbb
jp
fdivr
dec
or
test
jle
shr
cmc
xchg
ins
push
pop
push
jo
push
lock
mov
adc
jb
and
dec
stc
fst
push
inc
jge
adc
jnp
xchg
stc
lahf
lods
jb
sbb
xchg
repz
jp
call
xchg
inc
clc
nop
sub
and
mov
add
pop
in
scas
ret
out
push
popa
aas
xor
push
add
pextrw
adc
mov
adc
jmp
push
or
nop
inc
idiv
adc
dec
fild
cmps
loope
cdq
push
dec
mov
adc
mov
dec
nop
xchg
xor
inc
imul
iret
int
pop
cmp
xor
rcl
aaa
gs
(bad)
xchg
cwde
xchg
inc
in
ret
push
add
adc
or
jle
adc
cmps
dec
add
mov
or
fstp
ss
cwde
jge
inc
pavgb
jb
int3
xor
jnp
cmps
pop
test
inc
sub
jne
push
cmps
or
pop
out
test
loop
ins
or
mov
nop
clc
cld
xchg
lock
jmp
and
lods
cmps
or
call
inc
cs
sti
jne
loopne
push
or
push
jmp
in
sbb
push
xlat
and
test
shl
aas
cmp
pushf
(bad)
jb
and
shl
gs
mov
pop
xchg
mov
xchg
mov
dec
push
add
pop
out
or
mov
or
fidivr
xor
adc
push
push
dec
jo
imul
cs
fisubr
ins
in
in
inc
or
lahf
inc
test
js
sti
outs
sub
aad
test
mov
jmp
or
dec
sbb
jp
pop
sub
mov
shr
and
jmp
je
add
xchg
out
call
int3
pop
icebp
mov
dec
in
add
ja
mov
dec
bound
jb
jmp
add
fbstp
pop
cmp
push
loopne
pusha
xor
jmp
mov
icebp
into
or
add
cli
jae
stc
add
lods
arpl
into
es
scas
call
loope
pop
dec
icebp
mov
adc
cmp
inc
in
xor
popa
jg
dec
sbb
mov
inc
xlat
daa
pop
xor
dec
(bad)
fld
fnstsw
lock
hlt
push
mov
dec
xchg
in
rcl
sub
bound
mov
and
and
icebp
pushf
inc
cmp
jmp
repz
xchg
push
sub
sub
mov
and
mov
and
jae
dec
arpl
inc
add
dec
fnop
je
adc
pop
mov
pop
jl
jecxz
ret
push
hlt
imul
add
and
cdq
dec
xchg
hlt
retf
sub
jg
pop
into
cmp
mov
push
jne
cmp
sbb
mov
and
rol
(bad)
je
fwait
int
pusha
into
pop
xchg
sti
pop
mov
mov
mov
and
mov
adc
mov
xor
(bad)
xor
mov
dec
jae
sti
jbe
lods
outs
scas
fbld
adc
test
ror
or
ins
test
pop
jmp
sub
scas
add
pop
mov
sub
fild
mov
push
jmp
jecxz
dec
clc
sub
pop
addr16
inc
xchg
nop
daa
mov
call
sub
stos
or
or
dec
adc
sub
mov
lock
(bad)
pop
jp
mov
inc
push
mov
pop
ja
clc
inc
shl
iret
iret
mov
(bad)
jp
movs
jg
mov
loope
mov
hlt
daa
mov
jno
mov
cmc
das
das
aam
xor
fcmovnbe
push
mov
out
rcl
test
adc
jge
push
cs
mov
outs
cmp
clc
aas
xor
mov
retf
lods
push
iret
adc
mov
aad
bound
sbb
fild
sbb
lock
mov
ins
in
dec
pop
inc
jle
ret
mov
mov
cld
mov
jl
xor
inc
jecxz
cs
xor
mov
les
call
sbb
mov
xor
iret
xchg
push
je
mov
and
jmp
sub
hlt
dec
inc
out
repz
fmul
push
jmp
lahf
std
mov
ror
push
xchg
lods
je
in
cs
pop
popf
push
or
mov
in
leave
mov
jmp
xchg
mov
cmp
mov
cmp
fisttp
sub
adc
mov
mov
dec
movs
lds
dec
arpl
jbe
push
les
xor
mov
xchg
bound
(bad)
cmp
(bad)
lahf
inc
mov
sbb
pop
jb
inc
fild
mov
outs
or
dec
fnstenv
mov
test
or
shl
movs
jo
call
(bad)
in
pop
dec
add
push
lods
stos
sbb
mov
mov
cmp
xchg
pop
dec
mov
pop
ss
inc
push
push
mov
(bad)
sub
add
shl
mov
std
inc
scas
ins
sbb
cli
or
dec
(bad)
(bad)
lods
jo
mov
adc
shl
out
ins
or
clc
ss
xor
and
xchg
mov
mov
clc
mov
int
sti
dec
mov
dec
dec
jmp
ja
pushf
add
add
pop
sbb
call
lods
fiadd
cmp
ja
cli
and
lahf
out
outs
mov
sbb
mov
push
pop
popa
imul
mov
xchg
sub
retf
jmp
cmp
sahf
data16
xchg
ror
test
jg
xor
mov
popf
dec
in
dec
mov
push
mov
jb
scas
lea
fwait
pop
icebp
in
arpl
xor
stos
pop
sbb
xlat
inc
mov
add
div
xor
jne
xlat
ss
mov
pop
mov
push
in
iret
out
(bad)
xchg
mov
and
(bad)
jge
lock
inc
test
gs
pop
cmps
and
or
cmc
mov
stos
repz
mov
mov
(bad)
fstp
or
sahf
inc
mov
pop
lock
gs
or
and
mov
iret
mov
mov
mov
(bad)
mov
pop
mov
mov
loop
fisub
dec
sbb
cld
xchg
lods
scas
ret
inc
out
xor
mov
das
dec
cmp
je
shl
xor
imul
pop
xchg
push
mov
pop
adc
out
lahf
jnp
and
stos
jp
mov
mov
ss
(bad)
sbb
cmp
fnsave
xchg
(bad)
cmp
fsubr
mov
pop
mov
xor
mov
cmp
stos
push
mov
push
arpl
(bad)
and
pop
push
fist
aaa
inc
mov
movs
pop
or
jle
xchg
adc
pop
mov
xchg
ins
sbb
xchg
cmp
imul
inc
push
xor
pop
popf
or
cdq
mov
push
jb
mov
mov
popa
je
cmp
push
retf
xor
fwait
jo
pop
loopne
nop
inc
push
jmp
ror
mov
pop
adc
mov
dec
xchg
shl
repz
(bad)
or
cmp
fwait
mov
dec
ret
mov
stos
xchg
test
sti
stos
push
push
xchg
cs
cmp
sbb
cmp
leave
loope
or
inc
hlt
sub
retf
add
xchg
mov
arpl
and
test
add
sbb
inc
jl
dec
and
fistp
mov
or
popf
pushf
leave
dec
test
nop
sub
and
and
jno
ds
cld
mov
or
fst
je
aam
pushf
dec
mov
cmp
dec
mov
fsubr
jge
cmp
mov
jle
psrad
int3
push
popf
mov
xor
adc
daa
addr16
adc
into
xor
push
mov
mov
dec
pop
cmps
sub
mov
push
clc
and
mov
xchg
repz
mov
and
mov
xor
and
jne
int
sub
(bad)
xlat
or
in
retf
retf
popf
daa
stos
out
aas
lock
hlt
daa
mov
mov
mov
(bad)
xchg
adc
mov
lods
imul
mov
je
xor
int3
mov
xchg
ins
jmp
and
jb
mov
sub
dec
or
and
dec
movs
mov
das
adc
dec
test
push
lahf
and
mov
test
xchg
xchg
fwait
mov
mov
(bad)
outs
mov
in
js
jbe
loope
push
mov
mov
into
xor
ret
stos
sub
inc
jge
sbb
lds
test
ja
scas
sub
sbb
adc
jge
push
push
dec
in
movs
(bad)
retf
sub
or
das
clc
loope
mov
cmp
hlt
ficom
pop
std
push
inc
lock
lods
(bad)
jbe
sub
div
adc
mov
loope
ins
loopne
cmps
jae
cmp
xor
in
in
lea
(bad)
scas
addr16
mov
inc
cmp
xlat
(bad)
jmp
sub
add
and
jb
dec
push
mul
movs
xchg
cmp
icebp
not
or
xchg
fdivr
sbb
inc
(bad)
cmc
(bad)
dec
mov
lock
dec
push
jmp
cmp
sar
loop
pushf
mov
scas
inc
xor
cli
shr
int
add
sbb
and
jge
in
mov
pop
xchg
sar
jg
pcmpgtw
xchg
pushf
ror
push
add
inc
jecxz
xor
shr
xor
mov
push
jle
(bad)
push
push
mov
pop
popa
sbb
(bad)
cmp
stc
pop
into
mov
mov
sub
jae
das
out
xor
xchg
push
mov
xor
mov
pop
fmul
imul
cwde
xor
std
in
or
mov
js
fcomi
add
hlt
popf
dec
sub
idiv
sbb
sbb
push
xor
movs
dec
fnstsw
ja
inc
add
pusha
ret
lods
(bad)
cmp
inc
adc
cwde
xchg
push
sar
inc
pusha
mov
jge
jmp
add
cs
jmp
mov
cli
mov
ja
out
aam
lds
mov
test
int3
jbe
imul
adc
jne
cmp
xchg
add
icebp
iret
iret
(bad)
clc
and
test
ret
bound
ret
jbe
xchg
imul
hlt
lods
js
lahf
xchg
and
aaa
sbb
or
jmp
bound
add
or
test
(bad)
fnstsw
call
jae
sbb
or
xchg
sub
jge
into
mov
aaa
cmp
ins
out
fucomi
mov
cmp
jns
push
outs
xor
out
sbb
ja
or
cmp
add
mov
imul
adc
adc
(bad)
daa
adc
lock
(bad)
retf
sub
push
test
sbb
pop
xchg
dec
cmp
add
mov
or
mov
mov
push
inc
aad
std
inc
mov
pushf
mov
xchg
addr16
outs
outs
add
and
pop
pop
pop
add
inc
add
inc
xchg
das
cmps
test
outs
loopne
test
xchg
pushf
ds
aam
inc
leave
dec
icebp
mov
adc
adc
mov
test
shl
mov
add
cdq
sub
jecxz
fsubr
sbb
mov
and
inc
cs
mov
push
cld
aaa
stc
test
xor
pushf
xor
je
in
inc
repz
sub
xor
adc
inc
pop
jl
into
jbe
ins
jg
out
test
call
js
push
test
push
xor
cmps
dec
jmp
pusha
jae
inc
jne
push
hlt
mov
lods
mov
leave
xor
xor
lds
adc
jns
ds
sbb
and
int
cmp
fdivr
adc
sub
cmps
lock
push
mov
cmp
(bad)
adc
and
jbe
rcr
ja
mov
mov
add
mov
push
dec
loop
mov
hlt
cmp
loope
add
xor
mov
push
cli
xor
mov
jl
jmp
imul
gs
cmp
lahf
xor
jb
jmp
aaa
jb
dec
ret
(bad)
les
dec
es
icebp
adc
fcomp
xor
add
imul
dec
movs
mov
jmp
mov
jg
xchg
cmp
loop
dec
mov
fdiv
inc
mov
sub
sbb
sahf
and
js
xchg
inc
cmovnp
mov
shr
inc
pusha
mov
iret
fmul
pop
int3
cmp
xor
push
fsubrp
xchg
xchg
adc
fsubr
xchg
xchg
sub
cs
out
in
pop
cmps
jecxz
push
add
cmp
push
sbb
test
dec
pop
ror
xor
cs
add
dec
fsub
jmp
adc
or
mov
jmp
mov
xchg
xchg
test
mov
jns
js
dec
ror
bound
push
fist
pop
dec
or
js
xlat
loope
jo
aas
(bad)
int3
loope
push
add
sbb
fwait
sbb
test
and
pop
or
lods
rcr
mov
retf
movs
shl
xor
push
rep
fidiv
dec
jg
xchg
enter
rcl
cmp
mov
dec
add
jae
loopne
repz
mov
bound
sbb
fistp
jmp
lahf
adc
icebp
jp
test
mov
add
mov
push
inc
cmp
push
fadd
popa
(bad)
cld
ds
adc
es
out
inc
fsub
lea
lds
mov
ds
outs
jno
imul
cmp
cmp
and
mov
fiadd
leave
mov
jo
mov
cwde
(bad)
retf
sbb
rcr
add
sub
sub
enter
test
mov
and
int3
xchg
mov
inc
xor
inc
sub
mov
sbb
xor
add
dec
xchg
lock
fs
inc
movs
xchg
sbb
and
inc
pop
(bad)
mov
movs
push
test
mov
cmps
jb
lea
ror
dec
dec
scas
aas
mov
fistp
cmps
push
xor
ficom
fsub
mov
mov
pop
nop
jge
mov
pop
push
outs
test
mov
das
sar
ins
sbb
retf
mov
mov
adc
xor
dec
inc
xlat
add
stos
shr
ret
jl
cdq
clc
mov
mov
xchg
scas
(bad)
mov
mov
(bad)
push
add
mov
sbb
shl
repz
add
push
or
xlat
in
mov
inc
inc
pushw
mov
or
push
mov
cmp
add
push
jg
push
xor
aam
mov
out
or
test
pop
cmps
push
push
inc
mov
ret
and
shr
stc
xor
icebp
pop
aas
pop
inc
imul
sub
inc
in
out
call
sahf
(bad)
cmps
std
and
les
mov
or
push
mov
jnp
outs
(bad)
aam
arpl
es
sub
outs
data16
mov
or
adc
icebp
es
inc
pusha
adc
in
inc
jmp
jmp
mov
mov
sub
lods
xor
pop
jne
jb
dec
fcom
std
scas
loope
jg
dec
repnz
add
lahf
xchg
mov
jmp
sbb
mov
cmp
add
loop
(bad)
jmp
sbb
mov
push
push
out
(bad)
div
jp
daa
mov
ficomp
add
inc
cmps
fidiv
cmp
pop
pop
call
aad
iret
int3
dec
dec
sbb
add
pop
adc
fmulp
sub
mov
test
push
xor
(bad)
sub
fimul
ins
stc
adc
mov
sub
add
sub
mov
mov
sub
add
ret
or
loop
loop
push
lock
shr
xchg
(bad)
ja
in
out
in
rep
movs
je
ds
or
ja
rcr
loop
pop
sahf
sbb
mov
call
sbb
xor
leave
sahf
cwde
adc
pop
daa
aad
xchg
pop
sbb
xchg
mov
jb
dec
jl
rol
in
pop
pop
cli
pop
adc
stos
cmp
call
es
sbb
(bad)
sbb
fdivr
aas
sub
outs
loope
xor
mov
(bad)
xchg
or
(bad)
mov
ret
fadd
mov
pushf
or
add
je
xchg
into
sbb
mov
ja
fnstsw
scas
jg
fstp
mov
mov
mov
aas
test
jo
cmp
mov
fsubrp
leave
out
movs
xchg
xlat
or
push
and
scas
mov
(bad)
jmp
jnp
push
push
and
mov
lea
mov
sbb
xlat
jns
pusha
pop
aam
aad
mov
mov
nop
retf
pop
or
xor
retf
ret
pmaxub
mov
ins
sub
xchg
cmp
movs
fild
cmps
sub
push
fnstsw
adc
out
or
stos
sbb
jo
sahf
mov
movs
dec
fmul
call
push
mov
xor
(bad)
mov
jne
xor
cli
popa
sub
adc
adc
and
arpl
fcom
outs
out
adc
test
sub
push
jnp
pusha
outs
jmp
imul
mov
arpl
lods
fsubr
loope
loopne
dec
or
add
(bad)
addr16
fcom
and
or
shl
adc
cs
sti
out
or
in
dec
popf
fisub
in
sbb
cdq
push
inc
ret
fld
sbb
scas
cs
jge
xchg
in
mov
sub
addr16
ret
out
and
out
mov
(bad)
cmp
mov
dec
push
push
and
sub
cli
fdiv
cmc
sbb
and
ret
xchg
retf
aad
push
sbb
push
cli
xchg
mov
iret
pop
mov
sub
and
pushf
in
jae
pushf
mov
push
es
aad
fs
push
pop
sbb
pop
sub
rol
idiv
push
sti
outs
hlt
push
push
and
xor
ds
mov
imul
nop
fistp
das
ret
mov
imul
mov
xor
into
ss
lds
movs
add
or
push
jmp
xchg
push
add
frstor
jecxz
mov
cli
xchg
inc
push
hlt
push
into
int
dec
cmp
pop
push
dec
mov
fcomp
int
int
inc
or
(bad)
mov
es
pop
xchg
sbb
push
(bad)
xlat
dec
sar
sub
jo
xchg
mov
push
add
and
mov
frstor
mov
cmp
outs
jne
jge
test
and
or
jo
xor
div
je
adc
pushf
shl
dec
jge
leave
jge
mov
(bad)
jle
mov
jge
push
fcmovnu
add
aas
jno
pushf
cmp
lock
cmp
adc
and
scas
fdivr
out
aam
xchg
cmp
add
stc
sub
inc
pop
xor
jbe
lea
(bad)
mov
outs
sbb
sbb
cmp
mov
lods
aaa
mov
and
ja
sahf
adc
cmp
mov
inc
mov
ins
aam
mov
push
and
pushw
push
repz
out
hlt
ror
xor
and
imul
inc
stc
xchg
jae
mov
jmp
fild
test
clc
shl
sbb
xchg
(bad)
iret
and
add
mov
mov
xchg
ret
(bad)
outs
mov
stc
xor
add
xchg
neg
add
jmp
mov
or
or
push
xchg
xor
ja
xchg
or
sti
add
ins
xor
sub
(bad)
dec
xchg
ins
cmp
mov
idiv
mov
xchg
cmp
jp
rol
cmp
adc
cmp
cdq
add
sti
sbb
sub
dec
inc
(bad)
cmps
dec
xor
in
inc
setbe
dec
les
mov
daa
adc
jb
jmp
inc
cld
retf
or
ror
inc
adc
(bad)
(bad)
lods
jge
add
cs
mov
das
call
movs
shl
jno
push
push
xchg
sbb
mov
ret
imul
cmp
cmp
jo
in
jge
add
add
(bad)
aam
neg
sub
cmps
inc
fstp
and
in
mov
pop
pop
mov
mov
lods
loope
pop
(bad)
call
leave
nop
stos
cld
xchg
(bad)
scas
adc
mov
cmp
mov
mov
jp
xor
mov
fisub
ins
add
mov
adc
and
popf
iret
(bad)
jmp
test
dec
cmps
push
cmps
pop
push
es
lock
pop
stc
(bad)
xor
push
fimul
mov
test
sub
mov
in
sbb
jge
mov
out
std
fs
push
jmp
into
ss
sub
jae
adc
jmp
pop
sar
adc
sbb
call
scas
jo
pop
inc
mov
stc
mov
adc
mov
sbb
mov
sub
pop
frstor
sbb
jbe
dec
and
lds
cld
int
jne
mov
not
cmps
mov
push
imul
fwait
cld
scas
inc
inc
js
fstp
test
dec
mov
mov
pop
scas
sbb
adc
inc
push
xchg
movs
(bad)
jmp
pop
dec
mov
xchg
inc
mov
cmps
leave
sub
fisub
or
int3
pushf
fucomip
mov
(bad)
je
repz
test
adc
aad
cwde
adc
gs
inc
or
xchg
(bad)
dec
dec
test
mov
inc
popf
pop
rol
or
and
cmp
adc
dec
sbb
add
inc
(bad)
inc
shl
pop
ins
pop
sbb
add
sbb
outs
pusha
mov
and
inc
cmc
add
int3
daa
pop
jo
ins
mov
dec
fistp
xchg
dec
repnz
inc
(bad)
mov
jp
cmp
in
daa
xchg
clc
das
out
mov
hlt
jmp
(bad)
adc
mov
icebp
std
xchg
lds
stc
push
cmps
sbb
xor
sub
mov
pop
jecxz
inc
sub
push
sub
sbb
movs
xchg
jae
jg
shl
lahf
push
outs
jl
mov
js
jmp
sub
in
sbb
loop
sbb
repnz
mov
test
jbe
mov
test
fsub
cmp
or
add
cmp
(bad)
cld
xchg
sbb
fisubr
gs
xchg
pop
xor
inc
pop
outs
sub
adc
cli
cmp
sbb
push
inc
and
lock
in
fisubr
or
pop
or
int3
(bad)
push
ja
xchg
push
aaa
xchg
inc
sbb
cmps
pop
retf
repnz
jle
lea
inc
pop
xchg
repnz
std
sub
mov
push
test
xor
outs
cmp
jmp
jmp
cmp
add
jmp
mov
cli
pop
adc
stc
pop
xlat
adc
lea
(bad)
mov
pop
inc
fwait
cli
sub
dec
out
sub
out
cmp
pop
retf
sub
mov
imul
punpcklbw
sbb
pushf
jae
pop
add
inc
jns
in
jg
outs
ja
lods
jecxz
and
pop
fisttp
ins
inc
push
inc
xor
add
call
imul
shl
xchg
xor
push
test
shl
adc
xchg
cmp
and
das
iret
lds
in
mov
push
iret
add
pop
retf
(bad)
sub
adc
lahf
retf
adc
out
mov
or
(bad)
and
lds
sub
xor
scas
pop
stc
daa
imul
pop
pushf
or
fdivr
or
(bad)
movs
or
jmp
jns
mov
sbb
daa
sbb
mov
loope
dec
jl
not
div
fs
mov
fstp
ret
lahf
enter
retf
mov
sbb
movs
dec
add
cld
cmps
sbb
arpl
daa
adc
dec
int3
(bad)
popa
add
gs
push
xor
or
ror
in
push
mov
adc
inc
mov
lods
int3
cmps
aaa
ds
ja
dec
fwait
add
push
cs
dec
sar
jbe
ins
ret
outs
lea
jl
sbb
(bad)
cmc
ins
xchg
mov
adc
pop
cmc
pop
rol
push
ror
dec
mov
out
sar
call
jnp
mov
les
jbe
and
and
push
adc
mov
mov
sub
sub
pop
int
arpl
dec
fwait
sub
out
xor
test
cwde
bound
sub
cmp
sub
stos
cdq
and
dec
cld
add
cmp
xlat
mov
dec
ins
dec
pop
jnp
sub
pop
sbb
fild
mov
pusha
or
popf
leave
push
push
lods
pop
inc
inc
mov
mov
push
jns
mov
shr
inc
test
(bad)
jo
cli
jge
push
add
stos
push
dec
repnz
je
fcom
mov
pop
pop
dec
or
in
iret
add
xchg
fwait
pop
mov
pop
xchg
pop
mov
mov
ds
mov
xchg
and
inc
in
and
add
push
pop
push
mov
fsub
mov
adc
sub
sbb
cmp
aas
sub
sub
or
fs
ret
jg
mov
mov
cmp
mov
movs
or
pop
aad
xchg
sub
xlat
icebp
mov
sbb
ss
dec
int
lahf
out
adc
dec
das
int3
(bad)
adc
push
les
(bad)
jnp
lds
clc
(bad)
rcl
fwait
xchg
sub
mov
js
or
dec
adc
add
jge
enter
cmp
les
js
xor
fstp
sahf
cld
add
das
clc
mov
das
cmp
mov
call
inc
(bad)
in
push
rcl
mov
test
js
adc
cmp
mov
or
int
ror
jp
mov
ficomp
xor
mov
out
cmps
cmp
xor
sub
add
rol
xor
mov
xor
sbb
add
popf
aaa
push
jb
out
retf
push
aam
out
stc
mov
ficom
(bad)
mov
jbe
mul
cwde
pop
push
nop
int
das
les
in
mov
ret
loope
jg
mov
jae
push
pop
cli
jo
mov
xor
push
iret
cmp
or
(bad)
fs
call
popa
aam
mov
fild
sub
jb
imul
dec
iret
jnp
or
(bad)
sti
xor
and
hlt
inc
icebp
outs
and
mov
loopne
xor
imul
xchg
or
jmp
sub
outs
in
jmp
pop
ss
(bad)
(bad)
test
pop
sub
call
push
jno
and
out
pop
dec
rol
rcr
sub
call
mov
or
mov
pop
out
inc
or
push
fs
jb
into
adc
(bad)
inc
sahf
push
outs
test
pop
(bad)
cmp
jmp
in
rol
jnp
adc
(bad)
pusha
sbb
shl
mov
fnstenv
fxch
jp
cwde
push
enter
dec
adc
adc
mov
or
xlat
mov
pop
rol
sti
sbb
shr
(bad)
xchg
push
pop
mov
sar
pop
test
mov
mov
mov
jmp
and
push
xor
dec
stos
fdivr
loope
mov
in
xlat
mov
mov
cmp
jae
adc
aaa
sbb
retf
pop
pop
into
(bad)
(bad)
stos
sub
or
lods
cmp
inc
mov
dec
jo
xor
mov
push
push
loop
ret
xlat
sahf
fild
mov
cmp
or
mov
jns
fwait
sbb
out
sahf
daa
mov
in
jb
call
jmp
push
das
mov
shl
cmps
xor
test
mov
push
jnp
mov
push
jae
or
test
add
mov
pop
xor
fnstenv
in
stc
inc
pushf
jne
cmc
push
adc
inc
mov
ins
shr
ss
movs
rcr
leave
in
pop
call
jl
mov
(bad)
addr16
retf
(bad)
push
mov
push
mov
test
nop
or
test
cmps
idiv
jmp
push
ror
sub
mov
inc
int3
out
in
push
lods
and
test
cs
xor
adc
push
xchg
ja
or
int3
sbb
xchg
add
lods
std
fsubr
jge
jl
enter
dec
repz
test
or
outs
dec
adc
mov
cmc
mov
fsubr
stos
aaa
jp
movs
movs
add
jge
xor
adc
xor
test
pop
push
jmp
cmp
jge
enter
les
call
ds
aam
and
call
jns
jo
loop
(bad)
mov
and
push
dec
cld
imul
test
enter
xor
sub
adc
cwde
stos
daa
(bad)
jge
out
aaa
in
dec
adc
dec
out
cmp
in
clc
(bad)
scas
test
jmp
hlt
and
sti
(bad)
or
jne
pusha
pop
imul
cmp
js
adc
jecxz
or
test
cwde
jne
outs
in
cs
jecxz
fwait
mov
(bad)
int3
aaa
sbb
enter
dec
stos
jnp
(bad)
fldenv
jp
jp
out
or
push
adc
icebp
fbld
dec
jmp
into
mov
mov
inc
add
xchg
cmp
sub
data16
pop
dec
mov
das
call
inc
pushf
out
lods
(bad)
or
adc
fcomp
add
jle
in
dec
ja
push
into
enter
stos
popf
icebp
in
fs
scas
jne
mov
aas
jmp
dec
retf
out
mov
jns
lahf
popf
test
test
adc
out
pop
lods
dec
sbb
push
pop
jmp
mov
dec
xor
mov
push
xor
lods
lock
ins
push
pushf
xchg
std
mov
inc
std
dec
out
cmps
pop
leave
xor
pop
xchg
data16
pop
cld
aad
mov
ffreep
iret
mov
loopne
(bad)
pop
cld
out
sub
mov
out
pop
or
xor
push
je
mov
adc
out
jp
dec
es
mov
(bad)
push
mov
adc
pop
(bad)
dec
sbb
mov
out
std
inc
aas
pop
push
jbe
shl
jnp
nop
or
loop
(bad)
jmp
je
inc
stc
test
ss
push
dec
push
lock
xor
ficom
xor
sub
rcr
ja
mov
xchg
jbe
jl
and
fld
jmp
adc
imul
inc
adc
sbb
jnp
push
inc
sbb
cmp
cmp
xchg
adc
sbb
not
pop
inc
sub
fwait
lods
fistp
lds
fnsave
mov
retf
xor
into
cmc
cmps
mov
adc
sbb
ds
and
ins
push
repz
ins
fist
icebp
ja
mov
push
enter
xor
jb
mov
hlt
(bad)
adc
outs
(bad)
sub
cmp
loopne
sub
cmp
add
std
stos
dec
add
cmps
sbb
jo
xchg
push
jae
into
out
push
adc
pop
push
lds
sahf
xchg
mov
fwait
xchg
gs
dec
adc
(bad)
enter
fidivr
mov
dec
pop
xor
dec
in
ja
mov
xchg
ds
nop
xor
jl
(bad)
sub
cmp
stos
jg
push
jp
xchg
fdiv
pop
hlt
jno
test
xor
xchg
std
adc
adc
fidiv
arpl
sub
adc
shl
sub
xchg
adc
sbb
fidiv
mov
jl
lock
fisubr
jecxz
mov
out
add
or
je
mov
jae
repnz
fstp
pop
pushf
xchg
and
into
call
push
mov
fstp
sbb
dec
test
push
pop
jmp
xchg
fldz
neg
and
cmp
icebp
into
aam
jo
push
pop
jae
imul
dec
pushf
sbb
inc
rol
sar
pop
popf
mov
push
ins
pop
cld
int3
push
movs
(bad)
jge
cwde
daa
and
in
mov
test
aaa
(bad)
jmp
mov
jecxz
fucom
iret
jle
or
je
push
in
push
sub
(bad)
in
push
pop
adc
xor
sub
adc
jg
ficom
nop
push
jbe
std
mov
pop
leave
jnp
int
out
data16
mov
add
mov
mov
xchg
sti
mov
aad
jno
in
(bad)
dec
push
(bad)
inc
inc
test
or
les
xor
inc
mov
and
cmp
outs
jmp
cmps
pop
mov
pop
jmp
inc
xchg
in
cmp
dec
jmp
cwde
jecxz
(bad)
mov
mov
push
and
(bad)
into
xlat
push
push
mov
fist
test
scas
xchg
push
and
xlat
pushf
adc
pushf
mov
ins
loopne
nop
rcr
add
xlat
cs
xor
call
or
inc
test
jno
adc
cmp
xchg
push
jg
cmp
mov
ins
xor
ror
shl
les
pop
retf
shr
mov
mov
mov
dec
cli
mov
mov
out
jne
bnd
sub
(bad)
mov
fld
dec
push
mov
adc
clc
pop
add
mov
adc
mov
mov
cmp
dec
int
test
fsub
sub
push
retf
pop
push
cmp
or
adc
pop
ss
inc
or
push
pop
es
aam
stos
addr16
and
dec
push
add
das
nop
imul
pop
push
lods
imul
in
call
and
sub
mov
retf
mov
(bad)
inc
call
adc
shr
jmp
inc
ret
sub
pop
cwde
xchg
int
sub
fwait
or
dec
jg
(bad)
lds
push
mov
sub
pop
enter
and
dec
shl
aad
and
adc
fisub
sub
test
inc
mov
mov
push
add
outs
cdq
pop
(bad)
fadd
inc
lahf
scas
add
mov
je
inc
ins
xchg
jge
dec
dec
mov
out
cmp
mov
cmps
jp
popf
pop
or
jmp
in
jnp
loop
mov
loop
les
test
xor
dec
(bad)
(bad)
adc
or
and
push
adc
or
jns
dec
mov
cmp
and
mov
dec
cmps
sbb
test
sub
lea
adc
jbe
push
hlt
(bad)
not
mov
mov
jecxz
sub
dec
xchg
and
leave
jp
jns
xor
imul
stc
jb
dec
rcl
adc
jno
mov
push
sub
inc
in
and
clc
test
sub
mov
and
add
add
xchg
(bad)
push
dec
pushf
rcl
xchg
cmp
test
retf
lods
inc
icebp
add
xchg
clc
mov
fcmovbe
arpl
(bad)
jae
test
arpl
scas
xchg
into
in
ins
cmc
mov
aas
retf
lock
add
xlat
test
jp
mov
aad
or
xchg
sbb
rcr
jmp
add
xlat
adc
lock
sub
sub
scas
mov
nop
sub
(bad)
movs
xor
lds
or
leave
rcr
and
push
xchg
xchg
mov
popf
jge
(bad)
in
adc
lahf
mov
popa
aas
pop
xor
add
sub
adc
lea
push
jge
xchg
aad
ror
push
xchg
aaa
xchg
pusha
push
jmp
xor
call
jl
jne
pop
stos
(bad)
jmp
call
push
jmp
add
pusha
addr16
and
lods
fs
sbb
int3
mov
test
cs
push
imul
sbb
cld
test
or
in
out
in
or
mov
sbb
out
stos
sub
(bad)
jne
lahf
mov
cbw
imul
js
cli
movs
mov
cmp
shl
arpl
mov
int3
push
in
mov
or
fwait
sub
inc
inc
jle
mov
into
xor
fadd
not
cmc
add
ins
inc
add
ret
push
sub
out
sbb
fistp
xchg
add
sbb
inc
test
xchg
hlt
mov
in
mov
icebp
xor
jne
inc
and
mov
pushw
xchg
bound
adc
pop
div
addr16
rol
call
ds
or
clc
daa
ret
inc
cli
jmp
xchg
xchg
fsubr
das
or
dec
or
dec
jne
sbb
retf
mov
jp
hlt
out
xchg
mov
clc
sti
sbb
add
push
mov
mov
sbb
and
cs
mov
hlt
cs
rol
rcr
hlt
cmp
nop
call
test
call
shl
in
cmp
(bad)
lock
loop
inc
popa
aam
fmul
or
je
cwde
cmps
xchg
fmul
mov
mov
imul
jb
int
pop
in
or
add
jno
in
jbe
dec
pop
mov
in
sub
inc
xor
sub
popa
pushf
popa
dec
icebp
cmps
xchg
inc
shr
inc
pop
adc
dec
pop
js
jne
add
mov
into
push
bound
push
push
mov
scas
pop
outs
sbb
inc
push
xor
shr
dec
jl
std
sbb
push
mov
dec
imul
clc
inc
push
mov
mov
adc
loop
cmp
sub
fst
daa
jno
or
in
(bad)
mov
jnp
iret
mov
or
or
iret
push
ror
sub
jne
aam
adc
icebp
dec
scas
mov
mov
mov
mov
adc
jno
and
cmp
mov
mov
pop
mov
in
enter
pop
jne
pop
ins
ja
xor
mov
add
aaa
xlat
xchg
jle
xor
sub
jns
pop
dec
xchg
sub
neg
add
cmp
pop
pop
dec
inc
and
es
jo
(bad)
xchg
(bad)
and
or
push
push
mov
jl
mov
dec
push
mov
(bad)
sahf
dec
lea
xchg
and
or
xor
dec
aad
popf
xchg
into
dec
add
call
cld
xor
add
out
cmps
dec
jno
sub
call
xchg
scas
test
fst
jbe
scas
sbb
sub
data16
fs
test
inc
push
ss
xor
xchg
or
mov
sti
sub
inc
xor
jmp
xor
loope
mov
scas
cmp
xor
sbb
bound
xlat
int
ds
pop
mov
add
sbb
mov
jne
mov
mov
ins
sbb
add
fild
add
adc
dec
hlt
mov
cmp
rol
jno
pushf
push
sub
mov
sbb
shl
rep
imul
dec
jb
add
clc
push
add
ret
out
fldenv
cmc
cmp
leave
jl
or
xlat
sbb
add
lahf
cld
pop
dec
or
cwde
hlt
iret
jb
outs
rcr
add
repnz
xor
shr
sub
imul
outs
rcr
push
push
imul
jnp
xor
test
les
cmp
mov
jle
and
sbb
loope
inc
lods
or
lods
aas
mov
cli
test
out
pop
mov
and
mov
and
inc
pop
adc
jno
aad
stc
xlat
clc
mov
lea
xchg
jne
jno
xor
mov
out
xor
imul
ja
adc
sub
xor
xchg
mov
adc
mov
data16
pop
jmp
cmps
cmp
test
fist
mov
lods
and
ja
cmc
dec
mov
dec
and
in
and
ins
lods
sub
xor
pop
lds
into
lock
inc
lods
leave
dec
pop
sbb
pop
mov
cmp
js
pop
stc
in
shr
ins
loopne
syscall
loope
mov
jmp
mov
bswap
mov
sub
sub
fisttp
scas
xor
dec
jo
xchg
mov
inc
and
popa
imul
test
nop
and
(bad)
push
mov
dec
pop
push
mov
jns
push
adc
fisub
and
pop
pusha
inc
retf
or
adc
xchg
add
inc
jno
in
pusha
mul
mov
pop
fisub
cmp
scas
mov
jg
cmp
dec
arpl
movs
es
dec
enter
mov
push
and
cmp
das
mov
daa
fyl2x
mov
shl
lahf
hlt
push
mov
loope
mov
dec
outs
sbb
cli
sub
leave
loope
push
sub
sbb
jg
xchg
pop
pushf
or
lahf
or
cwde
(bad)
popf
jp
push
dec
mov
pop
popa
icebp
fimul
pop
cmp
pop
mov
cdq
dec
aaa
aas
jmp
test
inc
rol
call
jl
push
loope
mov
out
xor
xchg
popa
scas
add
fwait
xlat
scas
or
mov
jmp
mov
and
inc
mov
jns
imul
test
pop
es
and
out
ret
test
xchg
mov
in
int
jnp
jg
cmc
adc
and
push
or
lods
adc
jae
xor
add
rcl
mov
or
jl
dec
adc
push
mov
push
jmp
xchg
aam
in
jg
fisttp
sub
ret
cmp
stos
and
xor
out
shr
stos
cmp
dec
push
frstor
(bad)
pop
cwde
cmps
pop
inc
outs
xor
sub
push
mov
(bad)
push
in
push
aaa
inc
test
mov
inc
sbb
push
lods
inc
retf
dec
pop
ss
mov
inc
push
pusha
(bad)
fidivr
das
jo
test
les
mov
popa
mov
or
fsubr
xchg
fisttp
shr
xchg
nop
shl
inc
sbb
push
push
mov
add
aad
les
jno
fst
or
jle
ds
mov
mov
test
mov
or
neg
test
(bad)
mov
mov
and
lock
inc
mov
or
mov
mov
(bad)
pop
sar
fild
in
(bad)
mov
push
mov
cs
scas
aaa
and
test
shl
inc
leave
xlat
and
jb
mov
jmp
adc
ds
mov
and
mov
or
mov
or
(bad)
int
mov
pop
mul
rol
aas
cmp
fisubr
cli
lahf
mov
sbb
ins
pop
push
or
or
or
mov
dec
mov
data16
rcl
pop
sahf
lock
push
iret
icebp
fcomp
sub
lahf
dec
add
inc
fsubr
xchg
fidivr
aas
loope
mov
shl
mov
mov
and
xchg
jo
stos
adc
push
xchg
out
push
jle
scas
sbb
les
inc
shl
push
cmc
stos
bndldx
inc
mov
mov
jecxz
mov
rol
(bad)
push
ss
daa
push
xor
popf
mov
pop
cmp
test
add
arpl
js
mul
shr
and
push
sub
xchg
cmp
adc
fs
jg
mov
cwde
pop
jg
add
aas
sbb
add
daa
hlt
dec
nop
xor
sar
and
dec
aaa
xchg
retf
push
xor
daa
dec
stos
pop
in
add
sar
pop
push
jne
into
sub
jne
inc
push
adc
loop
(bad)
out
add
mov
addr16
scas
mov
pop
in
mov
in
inc
mov
leave
(bad)
popa
(bad)
cmp
test
aaa
inc
rcl
jbe
mov
scas
in
mov
adc
ret
adc
mov
arpl
out
lds
iret
xchg
loope
jmp
sub
sbb
das
jle
loop
mov
jmp
jmp
in
aam
sti
ja
imul
adc
rol
cmp
or
inc
movs
int3
cwde
inc
movs
mov
and
nop
adc
cmp
popa
stos
les
cmp
push
push
lahf
stos
in
xlat
inc
nop
jle
jmp
mov
jecxz
sbb
cld
adc
sahf
ret
arpl
cli
push
js
shl
cmp
fnstsw
xor
dec
inc
dec
jecxz
and
add
fisttp
in
pop
xchg
aad
lea
lods
rol
data16
inc
adc
fidiv
(bad)
fdiv
sub
sub
daa
scas
std
mov
mov
mov
setae
inc
adc
adc
dec
push
cmp
call
mov
dec
enter
test
lea
pushf
into
jg
in
mov
and
into
mov
mov
or
mov
and
add
jp
mov
out
xchg
jo
xchg
jb
mov
jno
pushf
cdq
pusha
(bad)
jp
adc
loop
mov
sbb
mov
cmp
popf
out
mov
cmp
mov
test
inc
cmps
fwait
jnp
mov
jp
fnsave
out
push
add
xor
shr
(bad)
lock
test
jne
sar
pop
xor
in
cmp
pusha
cmp
scas
jp
gs
and
and
xchg
jp
(bad)
repz
sbb
retf
ror
cwde
stos
fs
cwde
pop
or
mov
sbb
push
and
test
cli
push
adc
xor
push
and
cdq
ss
inc
push
mov
out
mov
or
mov
pop
adc
jae
push
aad
dec
inc
test
cmp
in
lods
cmp
repnz
shl
nop
push
inc
pop
jbe
mov
lods
adc
push
pmullw
movs
hlt
cmp
cdq
pop
sbb
shl
bound
nop
stos
push
outs
dec
xlat
fadd
fwait
mov
push
jae
jne
ins
mov
pop
icebp
mov
adc
xchg
cli
and
ret
mov
mov
mov
in
outs
loop
add
es
in
ss
bound
ds
cmp
jmp
arpl
mov
gs
sub
jno
repz
test
lock
mov
retf
jmp
cmps
xchg
jg
mov
xchg
xchg
jb
mov
pop
adc
loop
fdiv
adc
pop
jl
stos
into
adc
ret
pop
adc
(bad)
sbb
cld
cdq
sbb
stc
sahf
and
cwde
jecxz
sbb
jle
das
jo
mov
(bad)
outs
adc
dec
std
sbb
fsubr
sub
jnp
leave
popa
inc
xor
popf
rcl
push
jl
pop
movs
aaa
sbb
mov
xchg
mov
(bad)
sbb
mov
retf
and
daa
(bad)
pop
fwait
and
dec
inc
pop
retf
mov
mov
cmp
mov
in
jo
ss
fst
pop
xchg
lods
adc
pop
mov
pop
xor
seto
fld
fdiv
(bad)
mov
push
jecxz
(bad)
je
and
fsubr
or
test
popa
dec
jo
mov
shl
ins
sub
fwait
cmps
iret
outs
jo
imul
xchg
jmp
mov
jns
jmp
js
sub
ss
(bad)
daa
(bad)
lods
in
cmp
cmc
in
pop
add
push
adc
in
and
and
and
mov
retf
inc
push
(bad)
push
pop
out
xchg
(bad)
dec
jge
jle
clc
mov
fs
fstp
fistp
mov
cmc
(bad)
popa
sahf
dec
push
push
inc
ds
clc
outs
push
loope
xchg
fsub
add
xchg
ja
xor
mov
je
push
mul
pop
in
fimul
pushf
mov
shl
cmp
xor
add
mov
xchg
(bad)
lods
cmp
cdq
lods
icebp
dec
cmp
stos
aad
lods
sub
jo
movs
cmps
and
sub
(bad)
mov
ficomp
loope
(bad)
in
lds
gs
mov
add
and
les
push
dec
scas
fistp
loop
enter
mov
mov
xor
sub
into
jne
and
test
xor
loope
mov
jp
adc
ins
pop
aaa
or
scas
jmp
mov
bound
imul
xchg
cs
add
loopne
mov
sub
and
adc
cmp
jle
adc
mov
aaa
pusha
sub
dec
xor
pop
jno
pop
push
push
pop
cs
jo
pushf
inc
or
sub
ins
pop
add
inc
jg
shl
push
ds
and
xchg
sub
xchg
fsubr
mov
sbb
mov
push
or
sub
stos
jge
ret
imul
xor
call
cld
mov
xchg
js
push
add
repnz
xchg
out
loopne
or
xor
xchg
jmp
mov
dec
and
icebp
cs
pop
push
and
sub
retf
xor
ja
sbb
mov
inc
mov
movs
sbb
jmp
dec
inc
movs
pop
sub
and
xchg
ins
add
out
lods
jl
in
test
pop
sbb
fldenv
retf
sbb
fwait
daa
adc
add
adc
icebp
push
xchg
lods
pop
mov
loope
das
sbb
mov
xor
scas
jns
inc
add
sub
sti
int3
iret
sbb
pusha
xor
pop
faddp
in
inc
rcr
call
iret
scas
inc
mov
push
scas
xchg
jge
pop
cld
pop
nop
pop
jl
push
cs
inc
shl
push
loopne
mov
aas
les
jl
out
retf
and
xor
pop
lea
sub
out
xor
jg
fadd
jp
xor
cmps
in
mov
mov
lahf
add
push
mov
test
not
or
push
rcr
test
and
push
shl
mov
dec
cs
jno
mov
lods
add
add
adc
scas
sub
mov
mov
and
rcr
mov
mov
mov
xchg
clc
inc
in
out
jmp
fs
cmp
sbb
add
mov
adc
cli
jnp
or
pop
add
dec
dec
stc
shr
mov
mov
dec
xor
pop
jnp
xchg
sub
xchg
jg
fidivr
xor
adc
retf
in
pop
fsubrp
xchg
mov
mov
rol
mov
rcl
add
sbb
pop
mov
stos
rol
test
fimul
push
xor
inc
or
stos
stos
rcl
test
and
mov
lods
adc
pop
jns
fnstcw
inc
hlt
inc
fcomp
loopne
rol
aas
push
xor
push
movs
xchg
rcr
sub
mov
les
dec
sub
mov
xor
xchg
in
sbb
jno
mov
sub
xor
repnz
rol
mov
jl
lds
mov
or
pushf
sub
pop
dec
lds
cmp
stos
sbb
(bad)
(bad)
int3
das
sub
lahf
mov
sbb
mul
xchg
xchg
mov
fstp
jmp
and
out
xor
in
push
retf
cmp
call
and
icebp
mov
movs
test
popf
mov
add
jno
leave
lock
les
retf
and
xchg
aam
cmp
rep
cld
push
mov
dec
fs
dec
push
ins
lock
jbe
jno
(bad)
enter
dec
stos
mov
ret
adc
aas
push
fs
hlt
out
clc
and
jg
xor
inc
jmp
in
push
mov
in
loope
xor
adc
pop
add
and
shl
loope
sub
mov
inc
fs
int3
dec
jae
sub
inc
sbb
fadd
add
jmp
addr16
inc
push
inc
cmp
popa
mov
add
outs
popa
cmps
mov
mov
mov
cli
jmp
add
repz
mov
and
sahf
cwde
jmp
adc
mov
popf
add
data16
push
sub
nop
cmp
sbb
es
pop
inc
pop
pop
mov
inc
retf
dec
retf
pop
sbb
sbb
stos
xor
pop
stos
and
aam
cs
xchg
in
adc
cmp
mov
aam
jns
mov
std
sbb
xor
shl
pop
sub
jbe
test
icebp
jle
jmp
xor
icebp
and
pop
dec
pop
sub
fbld
mov
out
add
loop
pop
jnp
cli
adc
mov
(bad)
shl
pop
lock
xor
xlat
xor
sbb
test
pop
inc
in
inc
cmps
mov
dec
out
not
ja
xchg
int
pop
and
push
scas
mov
pop
jmp
dec
lahf
xlat
int3
aaa
out
scas
cmp
aad
jg
test
xor
scas
mov
inc
push
mov
not
inc
ins
sbb
jmp
push
jmp
mov
push
test
mov
je
lea
xor
mov
stos
or
push
addr16
leave
(bad)
outs
push
and
and
out
popf
in
inc
mov
loopne
push
enter
adc
fdivp
retf
clc
mov
inc
sub
(bad)
adc
pop
mov
lods
jb
stos
jns
mov
mov
fcomp
mov
das
stc
ja
lock
add
push
mov
push
mov
push
sbb
dec
movs
scas
jne
push
fs
pop
mov
movs
in
jecxz
sbb
xchg
cdq
ret
mov
loop
js
xchg
pop
fidiv
jmp
sete
push
push
or
lods
fwait
and
mov
lea
mov
in
rcl
mov
bnd
stos
mov
jbe
and
push
add
mov
das
or
push
mov
retf
outs
pop
ins
std
in
int3
int
add
mov
push
mov
cld
mov
(bad)
in
pop
add
xor
mov
int3
call
cmp
ret
retf
add
mov
adc
dec
fdivr
outs
outs
test
mov
push
mov
cmps
popa
(bad)
fdivr
inc
pop
outs
leave
sbb
in
dec
push
ins
ror
out
or
neg
inc
cmp
fstp
(bad)
data16
mov
lock
mov
lea
cmp
cld
adc
cmc
sub
lea
mov
add
sub
xchg
clc
push
out
mov
sub
ins
jb
jb
cld
and
mov
mul
loop
and
xchg
out
(bad)
pop
outs
xchg
int
ins
adc
adc
add
call
stos
mov
add
ret
not
stc
jns
popf
cmp
and
adc
and
cld
lods
outs
pop
pusha
lds
mov
dec
jl
pusha
cmps
ja
cmc
pop
idiv
adc
jmp
mov
add
scas
mov
cmp
jbe
xchg
lods
push
jge
aaa
ins
ret
push
jmp
ins
retf
loop
cs
dec
mov
inc
in
pop
add
je
movs
icebp
aas
cdq
cmp
fisttp
das
cmc
mov
ins
sbb
sub
ja
ficom
(bad)
aam
mov
mov
sub
mov
xor
cwde
fisttp
enter
shl
inc
lds
loop
adc
ror
mov
mov
daa
ins
sbb
cmp
cmps
out
iret
xchg
sbb
mov
rol
pusha
jns
sbb
push
or
shl
in
push
in
fwait
movs
adc
mov
mov
shl
cs
sub
jle
mov
adc
test
sahf
call
outs
test
xchg
(bad)
jp
jmp
(bad)
mov
mov
fcom
bound
add
jmp
or
fldcw
ror
push
mov
aam
test
ss
jns
lock
sbb
ja
ret
inc
(bad)
rep
lds
out
cmp
dec
adc
mov
jmp
mov
in
aad
mov
pop
scas
ins
and
cmp
add
jnp
pop
test
(bad)
pop
and
cdq
or
stos
add
mov
xor
lods
inc
sub
outs
in
test
xchg
cwde
inc
mov
leave
(bad)
sbb
test
jmp
fld
mov
stos
or
outs
mov
lds
popa
xor
xor
jno
iret
push
call
mov
jp
sbb
cld
jmp
pop
adc
imul
fst
pusha
rep
jmp
xchg
cmp
pop
in
xchg
inc
sub
adc
test
and
(bad)
stc
out
and
ss
and
out
movs
dec
pop
pushf
add
retf
xor
or
in
jns
push
repz
jle
add
scas
(bad)
xlat
les
shufps
movs
jmp
sbb
push
push
cmp
inc
in
out
mov
test
movs
rcl
push
pop
push
cli
lods
add
fmul
xor
dec
ins
cli
mov
imul
adc
sub
cmp
jns
mov
mov
jno
push
pop
cmc
inc
gs
push
fmul
loop
pop
xor
sti
mov
adc
push
sbb
aas
aas
push
jmp
enter
sbb
mov
fldenv
mov
rcr
mov
add
cmp
aam
fisub
mov
mov
daa
(bad)
mov
cmp
push
les
mov
aas
cmp
pop
mov
sbb
cs
xchg
dec
(bad)
icebp
or
out
test
push
mov
pop
punpckhbw
jo
xor
mov
push
sbb
cmp
mov
mov
push
les
ret
xchg
mov
inc
es
xor
retf
lea
rcr
shl
ss
mov
sub
pop
sub
(bad)
cmp
jle
mov
xor
hlt
fs
push
adc
xor
sub
js
jb
in
sub
jmp
out
or
in
stos
jmp
dec
dec
push
outs
shl
mov
mov
movs
es
shr
test
test
pop
ror
add
mov
and
test
cmp
jle
std
(bad)
mov
or
adc
retf
scas
mov
in
cmp
fcomi
movs
push
fimul
ret
mov
(bad)
sbb
dec
imul
dec
outs
sbb
xchg
cs
sub
jb
or
mov
(bad)
scas
pusha
push
cmp
lods
inc
int
ja
and
div
dec
mov
inc
mov
(bad)
div
or
int
jo
loope
(bad)
in
inc
gs
sub
call
dec
lahf
sti
xchg
cmp
outs
or
mov
lods
xchg
push
add
xor
call
add
xchg
xchg
pop
xchg
xchg
ins
popa
shl
std
push
inc
repnz
mov
pop
push
sahf
pop
lods
mov
mov
cmp
test
jb
mov
jae
call
ja
mov
dec
out
ficomp
push
mov
add
pop
push
out
sub
pop
push
cmps
jbe
ss
fnstenv
movs
iret
cmc
test
(bad)
xor
imul
int3
mov
(bad)
loope
jnp
add
mov
mov
mov
push
aaa
pop
les
pop
mov
jl
cdq
das
cld
cmps
xor
inc
or
out
inc
mov
cli
jp
cmp
push
imul
lea
out
mov
mov
fs
xor
stos
popf
adc
and
jge
fild
fst
jge
jmp
add
neg
mov
in
xchg
fcomip
(bad)
test
ins
inc
mov
jge
fs
das
add
loop
mov
mov
jl
mov
xor
adc
add
pop
mov
mov
sbb
dec
push
and
inc
dec
push
xchg
enter
dec
pop
lock
or
out
jmp
dec
imul
push
mov
dec
sub
stc
mov
jno
inc
int
mov
test
cmp
popf
test
push
loop
dec
loopne
xchg
pop
clc
jae
das
ror
mov
cmp
arpl
out
mov
xchg
mov
jne
sub
lods
or
sti
sub
les
adc
xchg
stos
cmc
or
movs
ret
mov
dec
inc
aam
movs
jmp
pop
popa
(bad)
jg
jbe
repnz
retf
pop
leave
out
out
les
(bad)
aas
ds
sti
dec
movs
jge
push
call
fdivr
dec
jmp
mov
push
mov
xor
retf
pop
scas
vpandn
lods
mov
xor
jb
push
mov
or
dec
mov
jle
seto
mov
lds
sub
inc
cli
(bad)
jb
enter
mov
mov
push
test
movs
lods
add
sbb
test
cmp
jmp
and
mov
inc
fimul
inc
cmp
push
add
sbb
push
xchg
push
outs
pop
mov
in
in
push
fld
jg
adc
inc
addr16
test
sar
sahf
ror
xor
pop
loope
push
add
push
mov
jmp
(bad)
fidivr
push
in
pop
inc
mov
inc
test
cwde
or
mov
mov
dec
xchg
enter
push
mov
cmp
adc
jp
jmp
push
push
pop
ss
jns
fisub
bound
dec
inc
scas
jg
out
push
ret
inc
and
ret
push
fcomp
psubd
leave
jmp
cld
ror
pop
out
jno
push
cld
mov
push
inc
test
scas
push
lds
or
mov
dec
pop
xor
adc
xor
enter
outs
pop
out
dec
in
mov
push
adc
or
inc
daa
mov
pop
rcl
(bad)
pusha
sar
sbb
push
ret
jnp
shr
out
jno
and
and
and
imul
repz
sub
sti
pop
cmp
pop
xor
loopne
cmp
pushf
add
loope
test
mov
repnz
cmp
fsubr
jmp
xor
sbb
fisub
or
inc
mov
mov
dec
mov
es
push
ds
dec
shl
xor
mov
das
add
leave
cmp
sti
clc
hlt
and
repnz
cmps
imul
xchg
mov
push
dec
xchg
inc
call
xchg
repz
adc
sbb
jp
comiss
push
mov
dec
scas
sti
mov
push
das
stc
in
popf
stc
push
hlt
dec
sub
cmp
enter
sub
popa
dec
nop
sbb
loop
or
(bad)
mov
add
fist
fnstenv
dec
add
pop
sbb
mov
jno
pop
mov
inc
mov
popa
inc
scas
adc
ret
jns
mov
ins
inc
or
aas
jg
xchg
lods
jmp
xlat
mov
xchg
sub
cmp
(bad)
repnz
out
push
dec
cmp
sbb
jae
add
sub
xor
add
scas
jecxz
cmp
inc
in
popf
jnp
fcmovnbe
sub
jo
adc
sbb
lea
ins
popf
in
ja
inc
adc
jnp
dec
push
enter
xchg
xor
xchg
add
cmp
call
push
repnz
fistp
sbb
xor
push
movs
or
inc
enter
and
scas
scas
mov
xor
xor
cli
or
bound
movs
popa
sub
xchg
pop
sbb
fs
test
js
mov
test
in
fist
push
sbb
call
mov
ss
out
or
cmc
or
test
cmp
mov
or
ins
aam
dec
test
hlt
push
scas
pop
lods
sbb
retf
xor
into
inc
shl
jo
retf
mov
mov
mov
ror
dec
mov
cmp
push
and
imul
adc
(bad)
(bad)
cmp
cmp
and
pop
sub
test
inc
push
inc
nop
mov
sub
push
pushf
xchg
cmps
nop
jg
mov
inc
cmc
jae
imul
dec
jno
xchg
in
cmps
inc
jmp
and
mov
loopne
push
sbb
pushf
(bad)
fnstenv
adc
jne
stos
jl
pop
stos
mov
aam
or
cmps
sub
and
jno
push
imul
cmp
dec
jp
add
out
out
xchg
cmp
js
or
xchg
movs
mov
outs
jecxz
std
dec
dec
inc
cwde
hlt
cld
jne
aad
(bad)
ja
in
out
or
push
and
or
mov
nop
lea
or
fcom
movnti
cmp
dec
inc
add
cmps
arpl
iret
retf
and
dec
arpl
cld
arpl
cmc
pop
push
cmp
push
ins
xchg
jecxz
in
mov
jmp
mov
shl
mov
mov
popa
mov
dec
in
test
mov
(bad)
(bad)
dec
rcr
dec
and
and
dec
jmp
inc
dec
or
jp
mov
pushw
movs
jnp
sub
xchg
add
fmul
repz
lea
out
mov
mov
push
mov
les
sbb
call
scas
in
adc
in
and
mov
cmp
jbe
mov
jp
rcr
mov
int3
cs
xchg
xchg
pop
aaa
pop
dec
mov
jecxz
dec
mov
add
jb
outs
jns
cmp
sub
mov
add
dec
cmp
dec
and
call
sahf
in
(bad)
sub
dec
xor
test
mov
jb
adc
jg
pop
aas
out
sub
and
sbb
inc
sbb
hlt
dec
adc
repnz
cwde
xlat
lods
and
sar
popa
arpl
push
fisub
push
nop
fmul
sub
jb
push
fdiv
pop
loope
icebp
add
sar
pop
push
ret
adc
test
mov
sbb
inc
ret
pop
loope
sbb
jmp
fs
mov
(bad)
xchg
xchg
adc
mov
fmul
nop
xchg
out
lea
stos
push
cli
sahf
mov
add
jb
movs
mov
sub
movs
push
dec
mov
(bad)
inc
ret
xchg
and
mov
fnstenv
pop
sub
fidiv
or
pop
or
xchg
jns
loopne
cmp
fs
mov
shl
inc
xchg
ror
sub
outs
das
daa
jae
push
mov
or
aaa
aaa
aas
or
cmc
enter
push
mov
nop
adc
cmp
or
push
enter
fld
(bad)
jne
int
add
in
jb
sbb
or
sub
xor
mov
xchg
adc
sub
fcmovb
loope
push
(bad)
(bad)
enter
jge
jbe
fcmovnb
cwde
clc
cmp
push
and
dec
push
sub
call
vpunpckhwd
push
das
push
out
add
(bad)
jge
(bad)
xchg
push
ret
pop
sub
push
fimul
mov
adc
rol
lea
and
mov
aam
out
out
xor
repnz
and
xchg
gs
push
fwait
ins
sub
ror
mov
inc
add
imul
jp
push
xlat
mov
and
jb
stos
fcmovu
or
leave
leave
add
es
nop
mov
push
mov
jp
mov
sti
pop
imul
mov
inc
call
and
or
adc
and
inc
int3
sbb
inc
int
lea
pushf
or
add
retf
adc
or
and
xor
pop
jmp
jp
mov
sbb
jno
cmp
ds
lock
add
lods
push
int
ins
xor
cmps
cmp
inc
gs
or
inc
adc
mul
lahf
mov
add
xchg
push
push
fwait
ins
add
or
add
sar
jbe
add
punpckhdq
aad
xchg
inc
nop
jp
add
sub
fsubr
xor
jmp
push
sub
nop
xlat
push
inc
sub
cli
jbe
mov
dec
xchg
inc
mov
dec
mov
test
add
arpl
pop
out
or
mov
daa
mov
test
pop
push
test
sub
pusha
int
mov
out
dec
push
mov
pop
(bad)
and
je
adc
mov
sub
adc
xchg
push
inc
jl
repz
adc
(bad)
adc
leave
sub
inc
(bad)
fsubr
sub
jl
or
enter
popa
jno
push
mov
addr16
lea
cmc
ins
mov
fs
cs
test
sub
adc
lds
sub
(bad)
pop
in
cld
rol
inc
test
(bad)
pop
cmp
and
cmps
pop
xor
test
cwde
into
fldenv
rol
push
adc
xchg
test
clc
inc
pop
dec
jns
mov
(bad)
mov
sbb
(bad)
mov
repz
cli
mov
loop
sub
das
test
test
outs
pop
push
aam
test
mov
test
mov
mov
sbb
rcl
jnp
push
jp
or
ret
inc
retf
mov
and
inc
pop
push
in
mov
enter
xchg
mov
mov
push
imul
addr16
jg
sbb
jne
das
fnstcw
stos
outs
lahf
movs
(bad)
xor
and
add
inc
dec
and
mov
lods
cwde
sub
jp
mov
mov
mov
nop
adc
add
(bad)
popf
jmp
repz
dec
cmp
sbb
stos
test
xchg
cmp
cmp
xchg
(bad)
push
ss
out
loopne
inc
lods
adc
fcmovbe
inc
jae
ins
jns
ds
std
repnz
dec
data16
mov
fistp
mov
fs
clc
jl
cs
fstp
ficomp
pop
or
enter
sar
or
mov
and
arpl
dec
stc
addr16
push
cmc
jg
mov
sub
lea
inc
xor
adc
and
mov
xor
repnz
push
stos
imul
dec
outs
out
mov
aam
jno
cmc
and
adc
and
lahf
push
movs
push
adc
mov
loop
iret
or
mov
retf
(bad)
popa
in
cmp
cli
aam
int3
mov
mov
mov
mov
fnstenv
in
mov
arpl
call
les
shl
pop
mov
es
mov
cwde
mov
addr16
int3
push
cmp
(bad)
call
sbb
mov
lods
daa
nop
arpl
je
mov
out
cs
jg
movs
xor
(bad)
shl
lods
nop
pop
ret
call
ds
fisttp
(bad)
ror
push
dec
fimul
rcl
push
repz
stc
sub
mov
pop
es
lods
push
mov
cmc
jg
imul
scas
aas
mov
sbb
cmp
push
xchg
(bad)
cmp
jmp
inc
sbb
adc
mov
(bad)
nop
gs
dec
or
sub
or
sbb
out
daa
sbb
in
sbb
out
adc
aaa
add
push
js
dec
retf
mov
or
jl
add
retf
pop
aad
dec
jecxz
fst
neg
cmps
and
and
or
repz
adc
sbb
add
sahf
scas
mov
mov
inc
push
push
popa
xlat
xchg
xor
ds
sbb
sub
cmps
dec
outs
xchg
les
(bad)
cmp
pop
out
dec
shl
ss
mov
sti
mov
and
frstor
out
fscale
outs
out
pushf
cwde
(bad)
shl
inc
in
mov
cmp
lods
in
sub
shl
movs
push
repnz
outs
xchg
push
xchg
faddp
pop
ins
test
sub
jb
sar
data16
test
test
rcr
mov
icebp
je
xchg
sub
(bad)
add
movs
fisubr
call
push
retf
sub
sbb
mov
cld
or
and
push
mov
shl
(bad)
cld
and
xchg
loopne
inc
mov
or
pop
and
and
je
push
and
into
ror
daa
pushf
xchg
jl
adc
fadd
xor
rcr
out
cmp
leave
sar
push
inc
sub
xor
aad
leave
sbb
ret
test
pop
ret
dec
mov
std
push
dec
mov
pop
sbb
aas
lock
jnp
mov
out
sub
mov
scas
iret
pop
or
jp
xchg
mov
mov
xor
sar
lds
push
mov
(bad)
cmps
stos
mov
mov
pop
jo
mov
scas
mov
mov
push
ds
inc
xor
push
das
push
push
lea
or
mov
out
test
add
ja
adc
aad
fidiv
xor
mov
ror
add
das
ins
pop
rcl
dec
mov
rol
or
push
sub
jge
test
sti
adc
pop
jmp
push
add
pop
xchg
imul
sbb
mov
aam
push
dec
add
ffree
inc
(bad)
aaa
js
out
mov
mov
nop
imul
loopne
lods
int3
bound
cdq
pop
and
cvtpi2ps
das
pop
or
shr
or
add
stos
jbe
neg
xchg
int3
cli
xchg
pop
nop
and
pop
fs
in
add
push
mov
data16
daa
inc
lods
adc
and
pop
fwait
ins
dec
xor
cmp
adc
jp
mov
sar
call
mov
mov
xchg
movs
data16
gs
test
retf
jmp
inc
dec
mov
inc
sub
xchg
cmp
push
in
daa
push
hlt
stos
push
xor
mov
jmp
and
mov
dec
xchg
and
je
inc
add
movs
xor
ins
mov
sub
adc
outs
jb
jecxz
lds
sub
shl
mov
mov
xor
mov
jb
iret
lods
lahf
jecxz
and
sti
popa
or
dec
push
mov
or
xlat
out
pop
es
push
cwde
sahf
mov
pop
inc
and
inc
xchg
jmp
mov
stc
imul
ss
clc
xchg
mov
push
xchg
inc
mov
test
call
movs
call
loope
outs
ficomp
cmp
xor
jp
cmc
mov
aas
cmp
push
and
mov
in
shl
xchg
(bad)
test
bnd
dec
add
inc
inc
sets
test
movs
pusha
sti
cs
add
sbb
aam
dec
push
call
jne
jp
sbb
add
mov
fcmovb
sbb
mov
xchg
stc
test
pushf
inc
movs
retf
pop
stc
cmps
xlat
xchg
popa
push
mov
mov
imul
retf
and
push
outs
and
pop
lea
dec
loopne
cmp
aad
inc
add
mov
std
add
sbb
bound
vandnps
rcl
jg
imul
inc
shl
inc
sbb
adc
sbb
scas
pop
push
imul
pop
inc
icebp
and
daa
stos
shl
addr16
dec
ret
jge
jb
std
add
retf
pop
popa
xor
in
add
pop
pop
xchg
fisttp
fwait
xor
xor
jge
jg
push
shl
xor
bound
jno
fs
int
xchg
jne
adc
jle
jmp
mov
ds
int3
je
jae
or
pusha
and
stos
mov
(bad)
xor
xchg
shr
test
xchg
retf
lods
test
inc
xchg
test
cs
pusha
movs
xchg
cmps
mov
into
cmps
dec
(bad)
(bad)
arpl
mov
adc
mov
test
push
ins
(bad)
pop
add
cli
sub
retf
jge
sbb
fwait
loop
and
jle
shl
push
enter
iret
xchg
inc
je
rol
mov
mov
push
pop
push
cwde
(bad)
cld
jbe
out
stos
inc
fdiv
mov
pop
cmp
fs
cmp
sub
push
sti
jns
adc
xchg
dec
popa
imul
or
ss
lock
adc
jg
stc
nop
out
scas
pushf
jb
into
sbb
cmp
jmp
jae
pop
out
inc
adc
mov
push
mov
mov
lea
xchg
icebp
mov
pop
ds
jnp
bound
out
in
inc
pop
jne
jmp
xchg
sbb
outs
mov
mov
fs
add
ins
inc
call
sub
add
and
or
xchg
push
xor
jb
out
retf
xor
popa
xlat
(bad)
pop
out
mov
mov
xchg
mov
(bad)
mov
(bad)
cmp
sbb
xchg
pushf
xor
hlt
clc
int3
push
loop
pop
adc
sbb
mov
daa
inc
sbb
cmc
sbb
push
xor
inc
xchg
or
push
push
mov
xchg
fbld
stos
ds
cs
adc
cdq
call
adc
mov
dec
xchg
pop
sti
xchg
imul
shl
push
movs
push
pushf
adc
or
sbb
sahf
push
mov
scas
push
test
jb
pop
loope
(bad)
icebp
dec
mov
and
mov
call
imul
ror
inc
int3
add
push
adc
mov
xchg
mov
out
xor
sbb
ss
fld
rsm
cdq
fld
and
mov
mov
jb
cmpxchg
(bad)
jb
ret
jecxz
inc
pusha
lock
inc
mov
(bad)
enter
mov
adc
xchg
jmp
div
and
or
sub
int
ds
ja
mov
aad
movs
sub
sahf
sbb
sub
adc
mov
mov
mov
cmp
add
loope
mov
ins
xchg
jno
fist
xchg
call
fwait
(bad)
add
test
ins
push
ins
cwde
fimul
aaa
fist
test
push
stos
je
pop
popa
mov
or
xchg
cmp
enter
xor
pushf
sbb
xchg
cmc
sbb
es
sub
(bad)
imul
mov
pop
ret
push
call
fisttp
hlt
call
ja
dec
stos
mov
pop
iret
or
fcmovnu
adc
mov
rol
lahf
jle
mov
dec
cmp
mov
cmp
pop
add
lods
push
jp
mov
mov
bound
push
dec
or
mov
int
sbb
mov
push
jp
adc
inc
mov
push
fdiv
xor
jle
xchg
int
out
jb
xor
retf
mov
sub
into
outs
cmp
adc
in
and
stos
xor
std
add
sub
lods
push
pop
dec
shl
imul
sbb
ja
push
xor
fwait
add
leave
adc
(bad)
in
xchg
sbb
jnp
xchg
pushf
lock
or
pop
js
inc
iret
(bad)
adc
adc
cdq
aas
imul
jmp
sub
push
jnp
aam
shr
jbe
mov
fcom
fdivr
es
cs
push
lods
loopne
push
js
mov
adc
sbb
lods
mov
mov
add
sub
jns
(bad)
cwde
push
(bad)
fisttp
cmp
cmp
push
push
gs
into
xor
or
js
lock
fs
leave
sbb
fidiv
(bad)
mov
pop
scas
call
sbb
push
sbb
xor
pop
cmps
adc
push
stc
pop
out
mov
jbe
push
ins
sti
nop
mov
xchg
push
fnstcw
cmc
xor
dec
mov
or
sar
dec
mov
leave
rcr
pop
call
jb
mov
adc
xlat
cwde
xchg
dec
loopne
scas
bound
jbe
cmps
jge
cmp
inc
neg
adc
test
nop
sub
outs
jns
imul
ja
aaa
ins
and
or
mov
cmp
and
mov
push
stos
mov
outs
mov
aas
arpl
adc
rcr
retf
add
mov
cmp
push
cmps
scas
sub
mov
in
call
cmp
leave
ja
xor
test
imul
jns
xchg
xchg
dec
pop
push
add
cmp
dec
add
neg
fstp
fisub
ss
xor
adc
or
dec
jnp
int3
repnz
mov
(bad)
pop
xchg
cmp
imul
push
movs
std
scas
or
inc
cmps
push
mov
push
ds
jmp
dec
aaa
dec
(bad)
daa
test
into
ret
call
sub
in
push
hlt
xor
jo
adc
sti
fadd
mov
adc
mov
push
xlat
jge
je
pushf
sub
mov
retf
mov
icebp
mov
xchg
and
mov
pop
xchg
xor
leave
(bad)
jp
sahf
adc
and
mov
mov
and
fisub
sub
dec
pop
add
xor
scas
outs
sub
pushf
mov
mov
sar
int3
sar
xor
(bad)
fadd
ja
fnstsw
cmc
pop
aad
mov
mov
aas
jne
cwde
(bad)
xor
shl
xchg
enter
test
fcmovne
pop
adc
mov
out
aas
call
loopne
retf
adc
or
bnd
lds
movs
or
fldenv
push
mov
or
adc
inc
cmp
iret
add
fs
in
(bad)
ds
js
xor
leave
sahf
jmp
push
jo
aaa
rol
cmp
(bad)
adc
fcom
xor
mov
out
pop
jne
cmc
jne
jp
cwde
lock
pop
add
hlt
enter
sbb
and
mov
pop
(bad)
leave
jo
out
scas
jne
movs
inc
jge
xlat
jo
adc
(bad)
div
mov
fsub
gs
add
cmps
adc
sbb
sbb
sub
shr
pop
push
mov
popa
sbb
jge
imul
fsubp
pushf
jp
ins
xor
ret
pop
push
adc
call
jno
lods
fistp
cmp
cwde
pop
adc
mov
out
xchg
adc
and
shl
jmp
jmp
xchg
inc
adc
dec
pop
stos
jbe
or
and
(bad)
loopne
call
rsqrtps
iret
jecxz
(bad)
arpl
cmp
retf
inc
(bad)
pop
ds
shr
(bad)
pop
mov
imul
(bad)
in
and
mov
fmulp
fisttp
cwde
ror
sbb
or
pop
jl
mov
fild
add
sbb
loop
or
(bad)
(bad)
into
lea
cmp
mov
inc
push
scas
ja
out
int
jl
pusha
popf
sub
(bad)
std
loopne
xchg
xchg
stc
mov
mov
and
sbb
jnp
and
add
scas
fucomp
cmps
cwde
stos
bound
outs
push
sahf
loope
xor
mov
(bad)
jp
ja
scas
out
inc
mov
loop
loop
jmp
pushw
adc
call
mov
cmp
cmp
xchg
dec
pop
pop
inc
xchg
(bad)
int3
pop
jns
paddusb
repz
bound
mov
popf
nop
or
and
xchg
stc
iret
inc
imul
fs
dec
pop
dec
pusha
je
retf
mov
push
lock
push
test
mov
dec
int
xor
adc
in
dec
cmc
xchg
scas
or
push
nop
pop
mov
jmp
mov
aam
jae
int3
cmp
jmp
mov
jns
xor
std
mov
adc
inc
mov
or
lock
arpl
loopne
push
sbb
into
(bad)
ror
std
jns
xchg
pop
outs
xchg
adc
ja
sbb
int
mov
and
xor
(bad)
sbb
mov
or
fst
fistp
sbb
sbb
adc
loopne
out
and
outs
cmp
aas
xchg
data16
imul
mul
push
aas
xchg
mov
push
aad
cmp
movs
push
xor
pop
adc
fldcw
fwait
inc
fld
dec
xchg
jmp
adc
push
mov
inc
mov
popf
(bad)
xchg
ins
or
enter
mov
cmp
inc
cdq
movs
push
inc
aad
mov
shl
lds
adc
mov
sti
or
xchg
cmp
(bad)
and
pop
pop
inc
aas
inc
jle
jle
enter
adc
out
jno
cli
loop
jle
cmp
push
mov
jg
jg
test
(bad)
sbb
and
xchg
xor
mov
mov
cwde
rcr
popf
ret
fsubr
inc
cmp
ja
mov
(bad)
pop
push
cmps
mov
jb
lock
xchg
bound
inc
mov
xchg
popf
loop
jmp
xchg
pop
xchg
jnp
pop
arpl
dec
push
xor
stc
add
cmc
mov
push
fild
xor
lods
push
call
stc
or
ins
mov
mov
movs
sub
dec
adc
lahf
icebp
pop
xchg
stos
push
gs
arpl
bound
in
push
pop
movs
dec
daa
xchg
retf
xlat
mov
fs
mov
sub
jb
pop
jnp
sbb
ror
sbb
loopne
xor
dec
out
push
icebp
inc
inc
sub
inc
jp
mov
jl
xchg
push
std
xor
adc
lods
jg
stc
and
add
add
mov
cli
push
dec
sar
inc
in
(bad)
sahf
or
add
xchg
gs
adc
pop
push
in
jne
fdiv
sbb
dec
inc
push
pop
fadd
icebp
call
mov
push
(bad)
fsub
aam
pop
mov
retf
je
sar
cs
dec
test
mov
xor
(bad)
test
cmp
xchg
(bad)
and
(bad)
loopne
imul
xor
or
dec
pusha
shrd
jg
adc
cmp
ret
mov
mov
or
adc
shl
cli
xor
push
leave
jp
xchg
lahf
push
push
inc
cmp
mov
mov
daa
ret
(bad)
rcr
mov
xchg
sahf
sub
dec
sub
xchg
loope
or
pop
xchg
in
xchg
mov
in
es
stos
and
ficomp
cmp
adc
cmp
jbe
mov
addr16
imul
es
retf
out
lea
sub
jnp
call
in
imul
mov
xor
push
or
loop
gs
dec
pusha
popf
daa
iret
popa
(bad)
and
in
push
push
pop
ret
push
sub
out
xor
sub
adc
bound
cmc
lods
into
lds
imul
test
(bad)
loopne
mov
jecxz
cwde
push
or
scas
and
jge
popa
ret
pop
popf
mov
sbb
xchg
jno
sub
pushf
xchg
mov
call
popa
aas
jns
xchg
mov
in
and
es
stos
ins
jg
out
inc
data16
push
into
lahf
jno
xor
lea
sub
adc
dec
cmp
movs
(bad)
fimul
je
in
mov
xor
fbstp
pusha
test
dec
lock
mov
xor
cli
jle
push
xchg
pop
cmps
mov
shl
inc
or
std
shl
or
mov
or
test
sub
inc
test
div
aaa
xor
xchg
imul
out
shl
cmps
jle
(bad)
inc
fs
sbb
sub
ins
inc
push
call
cmp
inc
jge
je
xchg
ja
sahf
inc
out
call
push
out
pop
mov
scas
in
sbb
aam
dec
int3
rcr
adc
and
mov
cmps
outs
or
push
sahf
jb
pop
dec
das
jbe
lods
das
xchg
xchg
stos
shr
nop
jle
mov
imul
mov
jl
mov
aad
mov
mov
xor
popa
adc
pop
xchg
inc
scas
mov
mov
(bad)
retf
shl
and
call
loop
xchg
xchg
daa
dec
movs
jbe
mov
jmp
xchg
and
dec
pop
and
adc
ds
inc
(bad)
loop
movs
xchg
mov
and
mov
dec
sub
or
cmps
mov
mov
mov
cmp
and
mov
fbld
dec
push
or
xchg
imul
sub
add
jae
lock
mov
mov
dec
stc
sbb
scas
push
(bad)
or
dec
jmp
add
test
push
adc
sub
sub
mov
xor
xor
mov
daa
pop
xchg
(bad)
into
fstp
or
jo
(bad)
stos
enter
hlt
dec
out
fs
call
jnp
ror
(bad)
pop
cmp
push
sahf
mov
jp
xor
inc
lods
loope
or
push
jecxz
xor
xchg
jmp
sub
outs
add
popf
hlt
jns
or
test
xor
inc
pop
add
js
sar
push
jmp
mov
popa
jne
in
(bad)
xchg
dec
(bad)
xchg
sub
(bad)
pop
cmp
sbb
inc
lock
cmp
inc
leave
mov
rol
add
sub
pop
jnp
hlt
pop
xchg
dec
mov
and
inc
popa
cmp
aaa
pop
jbe
add
imul
inc
adc
clc
ins
jmp
adc
arpl
fxam
ret
test
jge
in
cmp
dec
pop
pop
repnz
add
jmp
sbb
push
inc
das
adc
xor
pop
out
or
jge
jl
(bad)
or
mov
mov
and
jmp
mov
sub
nop
mov
pop
pop
out
jle
add
xor
or
ror
sub
call
into
stos
cmp
mov
lods
fmul
pushf
adc
jo
(bad)
loope
loopne
pop
aaa
lahf
dec
aaa
mov
dec
jge
in
add
mov
int3
fwait
imul
cmps
adc
mov
jg
and
xor
mov
jne
mov
sub
and
ins
lahf
out
xchg
leave
sbb
test
lods
stc
fstp
lds
jbe
mov
jno
ficomp
mov
into
cs
push
xchg
std
mov
call
jo
mov
addr16
push
mov
lds
scas
add
jp
mov
sbb
ret
mov
mov
cmc
inc
call
shr
mov
jge
inc
xor
and
adc
xchg
gs
mov
je
push
mov
push
sbb
mov
arpl
jb
data16
jle
das
xchg
pusha
xchg
out
jmp
push
and
mov
sbb
jne
add
adc
dec
xchg
push
pop
rol
cmp
cld
adc
cdq
retf
loope
das
add
js
jns
repnz
jae
fadd
enter
aad
jmp
dec
gs
shr
or
pop
int3
fcom
sbb
loopne
movs
mov
and
lea
arpl
sub
in
mov
cmp
xchg
popa
xor
mov
cmp
movs
sbb
dec
ss
add
push
mov
pop
lods
mov
fidiv
push
cmp
sar
add
jbe
pop
call
in
mov
cld
test
mov
mov
lock
imul
fsub
(bad)
cmc
mov
dec
aaa
mov
jnp
aam
test
jg
lahf
push
ins
ja
inc
jmp
inc
inc
xchg
jg
fs
pusha
cmp
add
in
fst
(bad)
je
daa
add
jns
and
mov
das
imul
aaa
mov
(bad)
sbb
jae
jo
sbb
adc
out
jle
fst
jge
xor
ss
dec
(bad)
sti
mov
retf
scas
pop
dec
pushf
scas
xchg
pop
ins
or
pop
clc
dec
lds
xlat
push
xchg
xor
or
das
in
xor
pop
not
lock
sbb
pushf
neg
cmc
movs
repnz
in
cwde
aas
test
pop
and
not
adc
int
fs
(bad)
jmp
iret
inc
fadd
mov
(bad)
fimul
ja
enter
dec
mov
popf
js
jg
xchg
out
sahf
pop
xor
cdq
shr
xchg
and
sbb
ud1
or
cmp
xlat
pop
fadd
mov
cmps
loopne
jbe
push
cmp
(bad)
shr
sbb
pop
xchg
add
inc
(bad)
jmp
call
inc
jno
outs
sub
test
enter
fs
dec
aas
pop
jbe
call
fdiv
bound
push
retf
in
loop
sar
pop
aaa
das
clc
or
dec
mov
sbb
dec
into
mov
jg
xchg
test
popw
push
inc
inc
xchg
cdq
sub
lods
wrmsr
cmp
(bad)
jns
mov
push
(bad)
xor
arpl
pop
call
mov
int3
div
(bad)
push
adc
lods
xlat
adc
outs
push
add
dec
push
sub
cmc
push
scas
mov
fdiv
cs
dec
in
add
(bad)
jo
adc
pop
mov
jmp
call
mov
test
sub
hlt
inc
and
inc
pop
imul
xor
call
mov
(bad)
ds
xchg
inc
lods
cwde
sbb
clc
cmp
iret
mov
mov
pop
inc
inc
xchg
jb
mov
in
push
rcr
mov
jl
adc
jmp
jbe
stos
dec
(bad)
mov
in
clc
outs
lahf
in
or
jl
xor
icebp
addr16
xchg
stc
ret
ret
xor
xor
cmp
mov
xor
and
ja
pusha
(bad)
fcom
bound
iret
scas
xlat
iret
mov
add
push
(bad)
call
adc
idiv
es
hlt
cdq
enter
std
das
leave
dec
mov
pop
sahf
fst
loop
loop
inc
je
cli
ins
xchg
lea
fwait
out
int3
imul
mov
jge
or
mov
inc
nop
fdiv
sbb
push
push
imul
lods
(bad)
lock
jo
jnp
cwde
inc
jl
leave
pop
pop
inc
mov
popa
test
bound
sti
sbb
fst
shl
xchg
daa
mov
add
je
sub
in
ror
clc
sbb
jbe
adc
adc
call
fstp
gs
or
mov
sbb
mov
aaa
cwde
shr
or
add
std
daa
dec
jmp
div
test
or
fsubrp
xor
mov
repz
test
sbb
cmp
cwde
dec
dec
pop
cmpxchg
iret
add
dec
jne
jecxz
push
jne
jp
jno
xor
push
mov
jl
aam
cs
mov
lods
aad
pop
rcl
add
sbb
push
out
add
push
and
ret
or
leave
test
add
pop
adc
in
dec
dec
mov
and
pop
(bad)
or
add
pop
mov
xchg
xchg
push
mov
sbb
out
inc
test
(bad)
test
or
pop
cmp
(bad)
test
outs
xor
gs
shl
xor
mov
jae
aam
arpl
dec
das
bound
js
stc
call
pop
leave
stos
xlat
enter
test
dec
dec
dec
aad
and
call
sti
jno
xchg
mov
loope
inc
mov
mov
jno
push
fdivr
inc
icebp
sub
push
hlt
mov
adc
inc
xchg
jne
push
(bad)
adc
sub
dec
imul
push
pop
xchg
aam
xor
cmps
icebp
sub
cwde
std
adc
inc
icebp
xchg
sbb
inc
retf
cmps
xchg
call
mov
movs
xchg
xor
mov
mov
mov
xchg
cmovns
fwait
or
adc
test
jg
mov
sub
shl
adc
sti
mov
fs
(bad)
call
push
aaa
std
xor
(bad)
mov
or
push
fs
adc
fdiv
jle
retf
stos
icebp
pop
jmp
inc
neg
lods
call
xchg
retf
add
int
adc
mov
cwde
jecxz
jmp
cmp
stos
jmp
pop
(bad)
add
push
out
jle
stos
cmp
aas
sbb
cmove
pusha
cmc
fdiv
call
rcr
psubusw
(bad)
jb
push
cmc
jecxz
repnz
jbe
jmp
loopne
inc
in
out
sub
push
push
aad
dec
adc
xchg
inc
popa
ret
ins
nop
mov
and
mov
jae
cmp
lds
mov
adc
push
shr
test
nop
add
fild
jecxz
fldcw
inc
xchg
mov
pop
push
lods
xor
js
mov
frstor
pop
stos
mov
adc
inc
push
enter
mov
mov
ja
inc
fmul
mov
dec
sbb
xor
mov
pop
mov
mov
in
mov
cmp
add
sbb
add
popa
xor
retf
push
leave
mov
aas
or
daa
adc
mov
(bad)
push
xlat
push
stos
mov
mov
in
dec
cld
out
clc
cs
push
cmp
xchg
imul
popf
jp
(bad)
test
rcr
jae
paddusw
and
popa
call
and
loopne
icebp
xor
jnp
dec
pop
sahf
sbb
dec
les
adc
call
aas
mov
addr16
ficom
hlt
fs
fsub
sub
jmp
ror
and
sub
dec
popa
or
cmp
call
mov
cmp
aam
pushf
mov
sub
fisubr
dec
pop
pusha
dec
(bad)
jmp
into
sub
mov
add
test
push
retf
adc
inc
adc
shl
rcl
shl
out
(bad)
std
out
xor
push
cmp
xchg
sub
mov
ss
les
nop
xor
lea
rcl
ret
or
scas
test
jl
fs
sbb
sbb
xchg
inc
add
shr
and
push
rol
adc
and
push
cdq
xor
mov
arpl
fsub
and
sbb
daa
ret
jno
cmp
loope
fisubr
jae
mov
repz
rol
fst
jl
pop
and
xchg
sub
xor
pusha
test
aad
mov
mov
sub
and
xor
xchg
clc
mov
xchg
mov
aaa
cmp
jo
xchg
jmp
dec
popa
sar
dec
jg
mov
ret
inc
mov
rcr
or
int3
loopne
xor
call
and
dec
sbb
jmp
mov
push
pop
jp
dec
xchg
cmps
cmps
dec
in
imul
arpl
xlat
or
inc
pop
jg
jl
daa
add
lods
int
jg
jmp
mov
into
sub
push
or
cld
out
fidivr
movs
inc
sub
lds
gs
jge
addr16
scas
push
cmp
adc
jno
mov
jge
xchg
addr16
popa
push
pushf
push
adc
pop
loopne
xor
push
sub
sbb
test
js
xor
popf
in
ret
mov
sbb
sub
add
sub
mov
stos
pop
(bad)
sub
sbb
mov
sbb
out
leave
and
mov
mov
in
push
je
jne
(bad)
mov
xchg
cmp
xchg
pop
xor
mov
das
sub
add
aaa
mov
mov
loopne
into
xor
repnz
pavgb
add
inc
mov
ror
cmp
mov
in
xchg
cmp
and
pop
or
xchg
pop
pop
call
sub
mov
mov
dec
cmp
fstp
dec
icebp
pop
pusha
mov
data16
in
mov
lds
stos
(bad)
in
stc
sbb
inc
add
mov
cmp
stos
ds
mov
cmp
mov
dec
dec
imul
mov
cmp
imul
sub
xor
lods
jb
sbb
jmp
inc
lods
push
mov
mov
and
in
or
scas
call
xchg
out
pop
pop
sub
in
(bad)
imul
cmp
jmp
nop
cmc
mov
inc
adc
stos
and
pop
in
jge
mov
jmp
ret
dec
sub
imul
scas
jns
adc
push
and
sub
mov
aaa
push
iret
loopne
add
mov
out
ja
mov
mov
std
std
xchg
jp
jo
dec
cdq
pop
add
xchg
dec
sbb
mov
out
push
out
es
cli
jae
mov
in
pop
call
xchg
aad
xor
mov
adc
push
mov
(bad)
das
mov
and
cli
sub
mov
xchg
das
push
in
jg
(bad)
ss
ins
movs
xor
mov
or
cwde
sub
mov
(bad)
data16
lea
aam
fist
jecxz
or
dec
cmp
mov
out
add
adc
jbe
cmps
and
cli
inc
sbb
or
lods
push
dec
stc
je
(bad)
jo
sbb
xchg
push
pop
push
repz
das
jecxz
sbb
in
pop
fmul
je
or
sbb
ja
ret
movs
push
jle
xor
or
fcomp
inc
mov
je
cmp
cmc
add
test
lock
push
pop
add
add
add
add
jnp
push
pusha
retf
je
test
jne
pop
cmp
ret
jmp
xchg
xor
mov
and
jl
xchg
pop
jne
mov
cmp
je
fist
gs
jbe
enter
pop
push
popa
imul
imul
out
iret
ret
lahf
and
pop
rcr
loop
cmp
nop
lods
cwde
add
jno
pusha
popa
xor
xchg
sub
arpl
mov
cld
test
mov
xor
and
mov
dec
dec
stc
test
xor
ss
xchg
cdq
add
xchg
pop
or
add
cmp
and
mov
dec
inc
sub
sub
vmovdqu
xchg
enter
inc
enter
sbb
rcr
sub
lea
loop
mov
retf
mov
and
mov
rol
adc
jmp
mov
mov
sbb
dec
dec
test
int
ret
jnp
push
cmps
and
jecxz
jp
sar
sub
retf
cs
inc
sub
mov
jnp
inc
mov
sub
jmp
inc
out
jne
test
jae
push
daa
mov
jnp
shl
and
dec
sbb
mov
retf
jge
dec
cmp
add
cmps
xchg
je
inc
mov
xchg
xor
sub
or
jo
push
loope
test
imul
mov
movs
mov
xchg
icebp
outs
std
push
jns
shr
cmp
mov
jl
out
pop
mov
fmul
xor
inc
push
adc
sub
xor
add
mov
mov
adc
dec
ja
pop
or
push
xor
outs
cdq
div
imul
xor
cli
movs
mov
inc
adc
cwde
xchg
sti
aam
int
je
mov
je
jp
cmp
push
mov
jl
xchg
push
cmp
jge
inc
rcr
scas
in
les
ret
jmp
and
iret
rcr
inc
leave
mov
cmp
pop
mov
(bad)
dec
aam
inc
dec
nop
bsr
pop
out
mov
inc
retf
outs
das
dec
in
cmp
xor
or
add
and
mov
mov
pop
push
push
vmovlps
push
sbb
out
xor
mov
and
inc
inc
dec
inc
xchg
int
add
(bad)
ja
fbld
or
mov
pop
stc
outs
sub
in
or
dec
rcl
or
inc
add
pop
mov
loope
xor
stos
aaa
push
dec
gs
cdq
xor
int
cli
ja
lahf
je
repnz
xchg
push
rol
cli
mov
hlt
add
xchg
add
in
shr
pop
icebp
xchg
mov
jno
hlt
dec
lea
pop
(bad)
call
shl
int
pop
dec
xchg
scas
pushf
or
lock
sbb
xchg
outs
cmp
push
int3
dec
scas
gs
mov
pop
arpl
mov
mov
iret
popa
repnz
adc
cmps
fdivr
into
neg
jge
scas
sub
add
lods
adc
inc
and
ffreep
lds
lahf
jmp
fstp
inc
inc
fsubp
(bad)
ss
jo
shl
dec
adc
test
ror
cmp
adc
pop
call
or
(bad)
sti
fidiv
mov
dec
or
pop
fwait
pop
sbb
adc
xlat
and
aas
jmp
dec
adc
fwait
sub
in
repz
xchg
cmp
cmc
lea
pop
cwde
dec
pop
xchg
gs
push
into
mov
loopne
cmp
sbb
xchg
cwde
pop
cmp
pop
xor
std
mov
sti
adc
or
mov
push
ds
mov
sbb
adc
mov
rcl
sub
xchg
in
add
cmp
mov
test
dec
and
push
cmp
ss
xor
or
ffree
xor
mov
mov
(bad)
jmp
xor
fwait
xor
cli
inc
fsub
aam
mov
dec
add
or
push
xor
outs
mov
cdq
test
test
inc
push
xor
xchg
ja
xor
mov
adc
pop
loopne
leave
push
add
sbb
shl
sahf
adc
mov
mov
mov
dec
ds
sbb
hlt
sar
int3
sub
fmul
sbb
mov
dec
(bad)
xchg
jl
push
adc
jns
mov
rcl
adc
in
pop
inc
jne
aas
mov
gs
ins
dec
add
stos
shl
ror
test
mov
(bad)
jmp
imul
push
add
jge
xor
sbb
in
push
and
repnz
push
add
or
loopne
shl
add
xor
push
ret
mul
das
push
ins
ror
(bad)
retf
mov
call
add
xchg
(bad)
xchg
push
xchg
aas
inc
add
or
and
leave
xchg
mov
(bad)
xchg
mov
je
std
(bad)
xchg
cmp
pop
inc
enter
popf
loopne
aam
or
jno
jne
jle
retf
les
adc
and
mul
daa
fild
aad
xchg
fsubr
enter
jns
mov
stos
sar
ret
leave
mov
ret
add
sub
imul
in
xchg
mov
stc
add
jl
lds
pop
addr16
pop
mov
sbb
call
inc
or
out
movs
(bad)
aam
pop
sub
out
jmp
loopne
sub
cwde
mov
jbe
xor
mov
cmps
repz
sbb
dec
or
push
iret
cmp
retf
rcr
cmp
xor
scas
add
mov
iret
sti
inc
dec
in
sub
jg
fstp
mov
push
mov
cmps
mov
retf
mov
test
sbb
in
ins
test
pusha
xchg
lock
inc
xlat
into
mov
add
movs
xor
xchg
icebp
or
jg
pushf
xchg
cmp
ds
and
jp
(bad)
sub
in
out
cmp
fcom
add
mov
jp
jns
cmps
shr
fcom
dec
and
add
sbb
sub
xor
cwde
pop
call
cwde
cmps
addr16
jge
imul
jmp
push
ja
adc
stc
xchg
pop
and
stos
and
and
cmps
pop
mov
xlat
sahf
clc
dec
sar
ja
in
pop
mov
add
cmp
mov
(bad)
push
lock
xor
dec
pop
(bad)
lahf
push
and
stos
dec
xor
mov
cmc
aam
inc
enter
cmc
add
add
cmp
jmp
test
(bad)
inc
mov
push
out
pop
fdiv
adc
test
or
jecxz
push
mov
dec
imul
mov
jnp
test
ds
into
lds
mov
fldcw
mov
add
ficom
test
xchg
jge
adc
dec
add
in
out
push
push
int3
pop
or
out
mov
pop
or
scas
jns
xchg
dec
sbb
inc
loop
and
xlat
inc
addr16
xor
call
mov
dec
icebp
inc
scas
(bad)
aaa
dec
repnz
inc
fstp
outs
clc
or
div
data16
addr16
sub
pop
ret
cli
out
sbb
mov
add
imul
scas
dec
iret
xchg
movs
sbb
xchg
jle
sbb
cmps
inc
cmp
dec
dec
pushf
test
xchg
mov
jp
mov
test
ret
push
inc
fdiv
scas
push
fs
dec
push
xchg
in
xlat
stos
je
into
pushf
add
outs
push
out
daa
push
mov
(bad)
repz
mov
and
outs
mov
xchg
daa
and
push
cs
sub
sbb
mov
jo
push
pop
movs
popf
movs
jmp
retf
adc
addr16
xchg
cmp
xor
and
js
jb
test
sub
hlt
mov
out
icebp
mov
jg
add
or
mov
mov
pop
xor
fld
pop
sti
daa
mov
push
jmp
ins
xchg
xlat
sar
sahf
push
mov
inc
shr
push
jns
cmp
pop
mov
xor
and
fcmovb
push
xchg
push
enter
or
loop
add
scas
and
or
xchg
push
jmp
cmc
jp
sbb
(bad)
retf
or
js
push
cmp
and
repnz
rcl
mov
aad
icebp
push
fisttp
hlt
mov
push
fisubr
das
cmp
clc
ins
movs
pop
enter
sbb
and
fidiv
jo
loopne
cld
out
test
and
and
fistp
push
call
mov
mov
mov
cmp
(bad)
out
test
enter
fs
call
mov
out
out
fwait
xchg
ffree
out
mov
(bad)
pop
xor
cmp
(bad)
cmp
bound
pop
add
pop
dec
mov
les
push
or
cmp
dec
sub
fstp
xchg
and
ds
jo
pop
neg
dec
sub
jle
pop
das
gs
nop
push
pop
retf
and
xchg
addr16
jo
scas
sahf
push
je
sar
fbld
imul
pop
popf
mov
pop
fisub
dec
xor
pop
pand
lea
pop
mov
xor
retf
nop
mov
push
aaa
pop
push
mov
cmp
mov
(bad)
jge
popf
(bad)
(bad)
cmp
add
inc
sbb
(bad)
sbb
cs
adc
fs
bound
xchg
add
loope
mov
sub
add
outs
xor
or
cmp
push
push
dec
cmc
push
or
ss
lods
push
mov
jmp
fs
dec
push
in
stos
add
pop
adc
(bad)
(bad)
lods
sti
mov
movs
scas
(bad)
popa
and
mov
cmc
outs
imul
lahf
sub
rcr
popa
sbb
mov
push
fisubr
push
cmps
pushf
in
inc
fwait
aad
ds
ss
fst
pop
outs
ss
aad
mov
outs
jae
mov
add
ret
jecxz
pop
arpl
push
or
pusha
out
(bad)
stc
xor
adc
or
sub
mov
stos
fcomp
pop
int
xchg
movs
xchg
test
cmc
mov
jnp
push
xor
jle
jmp
icebp
mov
ins
ret
mov
xor
pop
and
xor
xchg
mov
test
cmps
rcr
xlat
xchg
fcom
push
ror
test
push
pop
mov
xor
lock
add
xchg
sub
xchg
popf
xor
daa
aaa
test
imul
mov
xchg
or
(bad)
sti
(bad)
pop
fsubr
scas
je
adc
jb
(bad)
stc
sub
jg
sbb
lock
mov
mov
ficomp
dec
jmp
std
out
jmp
push
ffreep
push
xor
dec
pop
addr16
(bad)
idiv
in
add
add
sbb
daa
movs
fcmovnb
lea
in
xchg
ins
mov
(bad)
repz
xchg
pop
mov
cld
call
mov
mov
int3
nop
test
fcmovu
adc
cmc
xchg
mov
ins
cmp
adc
mov
cmp
pusha
call
rol
loope
in
add
call
test
push
outs
mov
cmp
(bad)
pop
xor
inc
(bad)
or
(bad)
jno
xchg
pop
mov
pop
ss
jb
xchg
pop
test
cmp
xchg
push
into
arpl
imul
cmc
arpl
xchg
popa
mov
mov
mov
sub
pop
ja
sbb
mov
jg
mov
sti
into
push
or
stos
xchg
and
dec
mov
dec
test
jp
fistp
xchg
out
jecxz
sbb
sbb
(bad)
loopne
pop
xor
add
inc
test
movs
xor
or
jb
clc
cmp
in
dec
rcr
sbb
out
repnz
enter
lods
scas
cmp
aaa
jecxz
pushf
push
retf
sbb
sbb
inc
sahf
shl
dec
cmp
ins
loope
xchg
inc
stos
jp
je
push
movs
mov
push
mov
cmps
je
mov
movs
fistp
jle
or
jl
stos
cmp
mov
retf
movs
jp
push
rcl
(bad)
sub
add
adc
push
out
mov
loope
rcr
sbb
mov
and
in
jbe
pop
stos
or
and
into
lods
xor
and
data16
movs
and
pop
shl
int
addr16
lock
sub
(bad)
(bad)
push
imul
lods
sbb
xchg
sbb
add
repz
ficomp
mov
push
xchg
mov
pop
(bad)
cmp
clc
mov
shr
std
(bad)
jmp
mov
ins
mov
lds
push
xchg
mov
fs
push
inc
fmul
mov
push
lods
cmp
mov
dec
cmp
enter
xlat
pop
or
sar
test
in
aad
frstor
js
inc
inc
out
std
add
dec
clc
fs
adc
mov
cmps
jbe
fld
ins
sub
jle
or
push
test
push
lea
sub
hlt
(bad)
ror
fstp
(bad)
cmc
sub
cli
movs
cmp
out
jne
adc
mov
test
mov
dec
out
add
jg
mov
fs
add
shl
neg
mov
cmps
xchg
jb
stos
dec
push
int3
xlat
or
xchg
dec
and
add
and
push
inc
iret
jno
inc
cdq
inc
lds
pop
ficom
sbb
xchg
jo
test
mov
sbb
dec
pop
scas
pop
sti
adc
xor
cmps
fiadd
mov
outs
pop
out
ret
leave
xor
jmp
mov
jecxz
cdq
iret
jne
(bad)
mov
movs
out
dec
gs
push
aad
xchg
dec
test
xchg
iret
mov
mov
test
fwait
test
ret
mov
xor
pop
lods
xor
xchg
sub
xchg
mov
cmps
dec
sbb
xchg
adc
pop
clc
add
inc
jg
sbb
(bad)
pop
clc
clc
ret
lea
or
and
ficom
call
dec
sbb
cdq
pop
inc
sub
fld
dec
js
fmul
mov
ss
pop
pop
add
xchg
ds
fs
lahf
int3
sub
fsubr
xor
xchg
jmp
out
mov
sbb
jo
jg
cmps
inc
(bad)
push
mov
mov
jp
imul
fidiv
popa
cmp
cmp
jb
mov
xor
int3
test
in
scas
sbb
rol
test
adc
sbb
mov
pusha
jnp
fdiv
out
push
loop
xchg
test
adc
and
xor
jp
outs
pop
push
adc
lahf
(bad)
jno
mov
jno
cmp
cmps
inc
retf
inc
mov
xor
mov
mov
call
cli
or
pushf
adc
into
ins
adc
fcomp
or
gs
pop
xchg
mov
aad
pop
sti
mov
cld
aaa
es
add
mov
dec
or
scas
push
adc
(bad)
mov
loop
mov
scas
imul
adc
xor
stc
xor
(bad)
adc
and
inc
pop
or
popf
adc
fsub
adc
or
fimul
int
(bad)
cmp
pop
jmp
mov
mov
jge
inc
sbb
xor
js
lods
cld
jnp
fcomp
loope
xchg
adc
fs
adc
push
addr16
js
(bad)
icebp
sbb
xchg
inc
cs
inc
or
pop
and
test
push
inc
aad
das
fiadd
xchg
pop
dec
dec
or
pop
sbb
add
jne
mov
mov
jns
and
int
cmp
std
or
iret
fistp
jns
(bad)
fs
add
retf
(bad)
fdivr
ffreep
or
(bad)
sbb
push
addr16
cmp
cmp
enter
cmp
xchg
or
es
sub
or
xor
outs
mov
xchg
adc
jg
and
jl
jecxz
jge
dec
jecxz
in
and
out
xlat
and
in
shr
je
outs
push
das
imul
mov
push
pop
mov
hlt
data16
xchg
push
out
mov
fmul
leave
fisubr
mov
dec
cmp
(bad)
dec
xor
adc
in
dec
std
adc
push
repz
icebp
cmp
frstor
xor
in
(bad)
fld
xchg
imul
icebp
xchg
(bad)
scas
(bad)
cdq
push
cwde
je
ins
mov
imul
repnz
not
aaa
mov
adc
push
nop
cmc
out
(bad)
retf
je
pop
lea
cmps
mov
xor
call
jbe
add
or
xor
push
and
add
rcl
inc
push
popa
in
push
mov
shld
or
stos
jo
inc
pop
push
scas
jl
cmp
(bad)
push
xchg
sbb
xlat
xchg
dec
dec
repnz
retf
test
jecxz
cmp
and
and
in
mov
cmp
push
xor
mov
ins
lds
xor
dec
outs
xor
mov
mov
inc
mov
push
dec
cs
shl
aas
int3
ja
in
les
(bad)
and
and
add
stos
sar
mov
in
inc
aaa
or
fidivr
add
push
dec
in
add
aaa
leave
ret
mov
mov
sub
pushf
jae
or
(bad)
fld
fwait
pusha
push
(bad)
jl
mov
sub
out
sbb
xor
push
sbb
arpl
mov
xchg
pop
mov
les
retf
aas
mov
jno
cs
loop
jae
lock
fdiv
and
xor
addr16
add
mov
xor
sbb
push
jle
loope
es
push
cmps
popa
cmp
add
mov
and
and
push
xchg
xlat
or
push
add
enter
in
(bad)
inc
fwait
or
scas
psrlq
jl
jne
loope
mov
mov
pop
inc
mov
sub
inc
mov
cmp
sub
xlat
pop
mov
dec
xchg
dec
sbb
mov
repnz
out
dec
lds
sub
dec
mov
ds
sbb
sbb
jg
sahf
jle
push
shl
mov
outs
fmul
add
aad
push
(bad)
in
push
and
into
(bad)
cdq
dec
add
push
sub
dec
inc
in
xor
inc
cmp
sub
aad
xor
and
pop
jno
jns
call
fcomp
adc
and
ret
xor
pop
jecxz
gs
xchg
jg
psubusw
pop
call
clc
sbb
xor
cmp
cdq
inc
loopne
inc
pop
repnz
sub
scas
mov
test
sub
scas
sti
mov
movs
leave
iret
push
in
in
cmp
fisubr
call
cmp
dec
das
and
test
out
adc
or
clc
pop
and
add
test
leave
std
not
adc
inc
pop
or
nop
fisttp
inc
pusha
push
scas
cwde
jl
pop
dec
jmp
les
and
jnp
outs
or
jae
in
sub
mov
pop
mov
adc
inc
push
inc
adc
aas
adc
ret
and
out
hlt
xor
mov
xchg
(bad)
xchg
push
cmps
out
fdivr
sub
ret
repnz
xchg
adc
idiv
in
call
pop
mov
or
cdq
pop
stos
adc
xchg
pop
push
cwde
(bad)
fst
jb
aaa
aad
xchg
push
mov
movs
clc
js
mov
(bad)
inc
outs
(bad)
push
mov
cmp
lahf
dec
xor
dec
ja
sti
mov
and
icebp
pop
jne
aad
retf
scas
cmp
repnz
int
fs
enter
xchg
or
ret
sub
lea
lock
push
(bad)
out
loop
adc
ds
sbb
cwde
mov
mov
xor
(bad)
clc
jmp
sub
sub
xor
xchg
mov
push
hlt
lahf
pop
xchg
cmp
jmp
ficomp
sub
loope
inc
(bad)
clc
jmp
sub
sbb
out
mov
test
add
fdiv
pop
lds
adc
mov
push
mov
mov
inc
pop
add
cli
rcl
sti
mov
cmp
clc
cmp
cmp
call
ret
test
add
xchg
pop
aam
xor
lahf
cmp
push
push
fnstcw
or
pinsrw
(bad)
mov
cmps
data16
into
rol
push
xchg
pop
dec
mov
fcom
fucomp
dec
(bad)
fld
push
dec
dec
cmp
cdq
js
enter
(bad)
test
jb
outs
sub
cdq
pop
ret
sub
pop
jns
xor
imul
push
fild
in
xchg
lods
in
popf
jne
sbb
les
loope
cmp
cmp
outs
pop
icebp
adc
or
rcr
push
test
or
sbb
shl
in
repz
mov
je
sbb
xor
mov
jb
sbb
mov
lds
hlt
mov
arpl
mov
(bad)
mov
imul
inc
popa
fdivr
and
xlat
ins
and
push
push
xchg
mov
adc
out
out
arpl
int
imul
xchg
adc
inc
pop
jg
js
mov
sbb
aas
jbe
hlt
ficom
fs
xchg
call
nop
pop
cmc
loope
imul
jmp
cdq
test
xchg
call
xchg
jp
jp
inc
and
sub
(bad)
call
inc
fwait
sbb
stos
mov
cmp
dec
call
sahf
inc
xor
test
cmc
in
cmp
ja
pop
mov
loop
jbe
retf
outs
test
in
mov
mov
dec
mov
dec
out
xor
int3
iret
stc
and
enter
ds
xchg
inc
addr16
shl
push
iret
(bad)
or
test
imul
cmps
mov
mov
add
jbe
push
js
shl
xor
add
inc
ja
xchg
jecxz
pushf
mov
mov
dec
dec
mov
fidivr
out
add
out
mov
frstor
subps
pop
popf
mov
push
mov
mov
test
dec
test
inc
and
cmp
or
shr
fwait
movs
shr
mov
jl
imul
inc
jbe
mov
sbb
pop
ja
sub
dec
mov
movs
mov
xor
jo
(bad)
in
out
pop
std
into
xor
es
sbb
in
lds
cmps
jg
pop
in
push
call
jbe
fwait
cmps
inc
pop
retf
nop
gs
imul
jle
ret
mov
loope
ret
cmp
retf
xchg
pusha
cmc
das
jae
pop
das
add
lods
scas
lock
enter
or
retf
xchg
sub
or
cmp
push
jge
sub
(bad)
call
stos
and
(bad)
es
mov
push
mov
xchg
and
js
aad
or
into
ins
call
jo
add
pushf
add
xchg
je
push
xchg
push
jae
mov
loop
stos
and
fwait
mov
or
pushf
mov
icebp
inc
sub
ins
inc
xchg
test
popa
aaa
or
sti
out
or
jno
pop
retf
dec
inc
xchg
sbb
sub
pop
popa
adc
dec
sbb
out
dec
stos
dec
xchg
inc
stos
dec
pusha
outs
jo
jb
test
call
addr16
loope
and
sub
cmps
les
lock
outs
xchg
mov
and
mov
iret
inc
mov
out
sahf
pop
push
mov
inc
and
mov
dec
xor
outs
sub
sub
nop
hlt
data16
sbb
aam
and
or
adc
push
fidivr
icebp
ss
jae
add
xor
adc
sub
popa
xor
sbb
and
add
out
xchg
ins
repz
mov
sbb
cmp
sbb
lds
dec
inc
cs
sbb
vpor
mov
lock
cmps
push
cmp
scas
test
xor
cmp
das
ret
sub
jb
add
push
cld
dec
mov
retf
rep
sbb
mov
lea
add
cmp
add
sbb
adc
mov
or
(bad)
push
stc
out
mov
dec
rcl
dec
fstp
repnz
mov
and
jecxz
jg
sub
test
out
sbb
cwde
das
idiv
sub
adc
and
mov
mov
ret
gs
mov
ins
push
or
mov
add
and
mov
ss
mov
int3
push
shl
mov
fiadd
and
icebp
adc
and
sbb
mov
int
push
repz
stos
mov
enter
ror
jl
inc
stos
push
push
jo
sti
outs
fdiv
jle
sub
jo
and
or
stos
imul
shr
inc
mov
into
or
xor
lods
aad
mov
int3
out
pop
mov
ss
push
lea
push
push
or
pop
fmul
push
pop
xchg
adc
push
mov
mov
enter
aam
mov
cmps
shl
pop
enter
dec
push
retf
mov
inc
addr16
scas
ret
add
fild
rol
fcomi
call
cli
imul
movs
repz
mov
inc
repz
jmp
mov
xor
movs
pop
(bad)
fs
mov
test
cmp
mov
xchg
inc
mov
jno
fxtract
stos
mov
(bad)
mov
inc
out
inc
out
pop
stc
addr16
add
je
xlat
dec
clc
mov
pop
xchg
pop
mov
and
jp
out
enter
lock
push
adc
xchg
loopne
daa
(bad)
data16
int
xlat
lea
dec
cmc
sbb
movs
mov
enter
jbe
out
push
dec
out
jo
add
sub
jmp
fld
sar
xchg
fidiv
clc
pop
jno
fwait
push
sub
inc
sbb
mov
stos
sbb
ins
xchg
prefetch
cmp
outs
cwde
mov
into
pop
and
ret
inc
dec
and
mov
ins
mov
jecxz
ins
adc
or
test
jp
or
mov
push
in
add
dec
outs
inc
(bad)
mov
push
repnz
mov
lahf
aaa
repnz
arpl
and
jl
push
push
in
or
clc
or
and
sbb
(bad)
cmp
and
scas
jge
sub
aad
pop
pusha
mov
jmp
andps
fs
jle
fsubrp
out
push
jl
cmp
sar
add
lock
retf
mov
mov
or
or
pop
outs
adc
push
and
pop
jae
xchg
mov
or
ss
ds
fnstcw
stos
cs
fsubr
fstp
retf
mov
sar
popf
jne
adc
jg
repz
mov
fisub
dec
fld1
push
lods
mov
push
test
mov
mov
sub
xchg
xor
aaa
push
les
jns
sub
cmp
push
sbb
add
inc
fdivr
xchg
sbb
aad
fnstcw
in
test
xor
xor
cmp
mov
(bad)
adc
outs
(bad)
(bad)
cmp
out
repnz
movs
and
push
int3
mov
fldcw
push
mov
rol
jg
and
je
add
jns
push
push
adc
adc
adc
xchg
sub
vmread
dec
xchg
or
cmp
fwait
add
add
mov
(bad)
pop
cs
pop
add
repnz
test
in
cs
jns
iret
enter
gs
pop
repnz
mov
hlt
mov
shl
add
pop
cmp
into
pop
sbb
sbb
push
sbb
or
inc
push
mov
lock
fisub
rcr
jmp
retf
les
pop
(bad)
scas
shr
adc
dec
adc
sbb
xchg
dec
sti
fs
xor
jecxz
push
or
xchg
push
jns
sub
pop
push
pop
xchg
fisttp
ret
jmp
push
jge
xor
jo
lods
mov
arpl
mov
cmp
sub
call
jbe
arpl
mov
pop
out
call
shr
cmc
(bad)
xor
movsx
inc
jmp
loop
or
cmp
adc
mov
pop
or
scas
(bad)
jns
xchg
mov
inc
cmp
and
inc
gs
add
in
cdq
pushf
(bad)
dec
imul
dec
mov
into
cmp
test
add
jb
pushf
adc
in
sbb
loopne
int3
loopne
xor
dec
lahf
jno
push
into
lods
push
icebp
sbb
test
jmp
test
cld
mov
jnp
fld
out
xlat
sub
(bad)
dec
out
cmp
popf
adc
fld
icebp
in
pop
clc
fldz
sbb
mov
mov
sub
xchg
ins
aas
shl
push
cmp
add
inc
test
rol
adc
cmp
and
mov
pop
mov
mov
stos
out
dec
or
jnp
adc
mov
jge
dec
and
jge
or
pop
lds
jmp
mov
add
inc
cmc
inc
(bad)
mov
push
pop
mov
rcl
and
sbb
out
inc
mov
xchg
outs
fcom
cmp
je
pop
(bad)
retf
pop
or
sar
inc
mov
stos
cmp
push
movs
push
and
add
sub
sbb
pop
test
jno
paddd
push
js
mov
sbb
mov
pop
mov
sub
stos
mov
add
fs
test
jp
imul
mov
adc
(bad)
fdiv
xchg
sub
cmp
jbe
in
adc
enter
and
lds
mov
xchg
clc
ret
fiadd
jp
les
retf
cwde
std
enter
fidiv
mov
xchg
sbb
adc
cld
push
and
pop
and
in
push
mov
in
sub
rol
pop
jae
adc
clc
inc
imul
pop
mov
sub
(bad)
cmc
pop
shr
cld
mov
iret
ins
imul
inc
cmp
scas
xor
cmps
mov
sti
inc
add
rcr
push
jg
pop
aas
add
inc
aam
mov
sbb
movs
inc
gs
fstp
pusha
mov
imul
push
push
ja
(bad)
aas
inc
sub
xor
into
das
xor
jnp
in
test
jge
cmc
mul
mov
das
sbb
mov
jne
add
mov
mov
push
imul
xchg
xchg
xchg
aas
sbb
mov
lods
push
fldenv
loop
push
push
sbb
aaa
jnp
and
jae
push
int
and
and
les
mov
retf
add
adc
mov
retf
jb
pop
int
and
sti
mov
movs
out
xchg
jne
gs
inc
sub
cmp
scas
shl
(bad)
jmp
or
(bad)
jnp
mov
or
cld
pop
mov
hlt
sar
sti
inc
or
daa
dec
sbb
mov
lds
jnp
mov
daa
test
mov
stos
fsub
inc
cmp
icebp
jmp
xor
pop
fdivrp
pop
fisubr
xchg
pop
retf
xchg
and
fdivr
mov
loope
mov
cmps
rcr
mov
cmp
pop
xor
lds
loope
int3
push
xor
fld
mov
out
xor
cmp
not
test
inc
jno
dec
aas
add
cld
lea
or
mov
jl
xor
lods
and
add
cmp
jne
xor
ret
ds
mov
ficomp
shl
adc
aam
pop
inc
push
test
data16
sahf
cmps
cwde
mov
je
push
jecxz
dec
hlt
or
clc
stos
sbb
push
mov
and
mov
pop
sahf
push
es
mov
fadd
shl
idiv
shr
sub
mov
aas
test
mov
and
and
out
dec
into
addr16
(bad)
sub
fwait
ins
mov
dec
(bad)
in
mov
scas
inc
retf
mov
or
out
push
xchg
std
loop
mov
push
mov
jecxz
das
aas
jae
xchg
cdq
or
mov
(bad)
jle
inc
in
inc
loope
mov
sub
push
add
sub
xchg
push
div
loope
jmp
repnz
xor
sub
sub
jae
mov
jecxz
shl
jae
cli
out
cld
das
ja
movs
mov
mov
adc
ret
adc
outs
scas
and
jecxz
outs
sbb
mov
pop
shl
repz
fs
xchg
adc
pop
and
mov
mov
xchg
ficom
(bad)
sti
loope
out
or
les
lea
mov
xchg
mov
imul
shr
jmp
test
scas
lahf
pop
aam
scas
jmp
dec
push
nop
cld
mov
fst
imul
addr16
dec
add
pop
fstp
dec
inc
sub
jne
test
ret
enter
test
and
or
test
sti
mov
retf
in
pushf
jno
mov
adc
test
adc
mov
imul
sbb
mov
inc
inc
jns
lods
pop
daa
mov
add
mov
jl
fdiv
sub
add
icebp
(bad)
mov
sbb
xchg
in
js
stos
dec
lods
je
xor
xchg
dec
jg
out
push
imul
rdmsr
jb
sbb
loopne
xor
xor
mov
or
pop
iret
fild
nop
outs
adc
sub
xchg
aad
cwde
lea
jb
dec
addr16
mov
out
xor
inc
pop
lods
add
mov
add
dec
sbb
pop
inc
push
push
fnsetpm(287
cdq
sub
pop
clc
ror
retf
inc
loop
jle
inc
xchg
xor
call
cmp
pop
mov
xchg
popf
push
mov
mov
mov
outs
or
stos
data16
push
adc
pushf
pop
xor
xchg
aaa
cmps
pop
sbb
adc
sbb
xchg
xor
or
xor
push
xchg
jb
push
mov
push
pop
mov
mov
stos
fbstp
test
mov
es
mov
out
pushf
lea
push
adc
test
scas
inc
cdq
jo
mov
ret
xchg
pusha
gs
test
xchg
fisttp
out
or
jb
lods
push
sbb
inc
sar
cmp
retf
rol
inc
call
nop
mov
ss
inc
pop
data16
jmp
xchg
dec
leave
inc
sbb
out
shl
cmp
xchg
xor
out
mov
aam
out
dec
dec
sbb
pop
es
cmc
mov
xor
jl
or
inc
jnp
test
pop
hlt
mov
ret
xchg
sub
jg
outs
pop
(bad)
jbe
push
dec
mov
cdq
jmp
mov
jg
scas
adc
aad
pop
jb
fld
xchg
mov
xor
dec
add
inc
cld
fisttp
mov
sbb
inc
shl
push
out
loope
push
and
jns
in
loope
push
pop
jne
movs
test
imul
daa
or
out
fcom
test
mov
xchg
retf
push
xchg
xchg
icebp
sub
iret
or
inc
or
or
cmc
or
das
scas
pop
xchg
xor
push
fwait
pop
or
fisttp
mov
add
ds
cmps
movs
aad
call
xchg
mov
xchg
in
mov
add
jae
jo
scas
js
add
pop
fild
sar
call
sar
push
daa
jle
nop
push
push
jmp
adc
leave
dec
ret
inc
mov
jo
ins
ins
and
push
push
in
shl
bnd
sub
push
scas
loope
mov
aam
xchg
mov
fsub
jmp
mov
(bad)
push
add
in
xchg
dec
xchg
adc
cmp
loope
in
jg
imul
daa
cmp
call
and
rcr
jge
lahf
dec
fst
(bad)
icebp
dec
dec
push
out
popa
daa
push
popa
xchg
or
push
(bad)
sub
fiadd
lods
test
popf
mov
dec
mov
loope
ins
cli
cmps
adc
bound
jns
pop
mov
add
test
sbb
xchg
sar
pop
mov
ins
cmc
or
jno
out
sub
and
ja
sahf
or
mov
adc
jne
sar
adc
or
xor
mov
pushf
icebp
mov
scas
and
fadd
cmp
xchg
pop
inc
and
dec
mov
shr
and
movs
xor
push
sub
push
cmp
inc
sbb
int3
pop
inc
mov
in
jne
dec
lods
out
push
lock
pop
sbb
in
sub
or
ds
sti
nop
enter
ins
movs
add
inc
in
and
mov
dec
xor
dec
out
inc
mov
movs
push
outs
dec
psrlq
jmp
int3
out
cld
inc
loopne
nop
add
out
aas
loope
xor
cmp
jne
mov
aam
jnp
xor
pop
inc
pop
loopne
jmp
mov
add
cdq
call
push
out
push
mov
sub
sbb
adc
pop
and
inc
fs
xchg
arpl
inc
and
call
mov
aaa
gs
aaa
inc
ror
dec
mov
nop
out
or
jge
shr
fnstsw
jg
cdq
sahf
xchg
cmp
xchg
cdq
sbb
(bad)
dec
and
xchg
xchg
adc
inc
(bad)
in
mov
sub
test
mov
test
mov
retf
inc
mov
jno
cmps
mov
cmp
pop
and
sti
jmp
pop
call
xor
jg
sti
pop
cmc
movs
jmp
cdq
popa
and
ficom
aad
fbld
add
adc
aam
mov
popf
inc
fs
push
es
pop
out
mov
add
loopne
push
rcr
push
mov
or
int
aaa
(bad)
sub
cli
mov
repz
cmp
dec
aas
fadd
or
movs
jp
rcl
mov
mov
adc
loop
xor
xchg
shr
mov
les
jecxz
inc
xchg
xor
xchg
sub
sbb
out
cli
adc
lock
(bad)
push
jno
cmps
jge
shl
push
clc
dec
jg
mov
jne
cmp
and
repnz
shr
pop
outs
loopne
mov
scas
inc
mov
cmp
loop
in
ret
adc
mov
jno
scas
mov
xchg
xchg
pop
hlt
mov
cmp
repnz
ret
int
shr
mov
cmp
aas
ret
mov
inc
ror
or
mov
movs
pop
add
jb
in
sub
and
push
xchg
or
and
test
pop
jmp
add
jge
int3
or
or
add
jb
cmp
and
(bad)
aam
out
pusha
fistp
sub
mov
lods
or
push
sbb
or
xor
inc
pop
shl
test
pop
cmp
jbe
test
leave
push
xchg
cmp
test
mov
test
and
fadd
xchg
aad
pop
xor
imul
ins
sub
dec
cli
bound
dec
inc
popa
dec
mov
inc
jecxz
fwait
js
stc
lock
lahf
mov
lock
push
inc
add
sti
sbb
add
call
cwde
fcomp
repz
cli
call
pop
fldcw
repz
mov
mov
stos
xchg
aaa
jne
mov
mov
fmul
jmp
pop
test
loop
les
sub
cdq
add
xchg
in
cmp
xchg
add
int
lahf
inc
mov
lods
dec
stos
mov
cmp
ret
vmaxpd
shr
inc
inc
jbe
inc
dec
aaa
xchg
jbe
loope
push
daa
sbb
add
or
jns
(bad)
jg
clc
cmc
sub
adc
clc
ins
out
xor
pop
and
mov
outs
pop
jbe
mov
mov
mov
ins
arpl
daa
and
adc
cli
repnz
dec
jp
sbb
iret
and
add
dec
sub
pusha
ficomp
push
(bad)
push
xchg
dec
stos
mov
out
test
js
aaa
dec
mov
mov
xor
adc
inc
cli
test
movs
enter
inc
popf
ja
jge
pop
cmp
xchg
or
push
adc
in
test
out
clc
mov
clc
xchg
in
mov
retf
sub
stos
sti
pushf
outs
jg
ja
popa
mov
inc
inc
(bad)
nop
dec
lods
fwait
xlat
fidivr
mov
js
sbb
cmovae
or
inc
icebp
test
inc
push
stc
call
out
pop
lock
push
cmp
and
push
adc
push
mov
fs
sti
(bad)
jle
sub
or
stc
inc
call
test
mov
aaa
cmps
mov
jle
test
push
sub
sub
inc
shr
sbb
test
test
aaa
add
js
add
or
adc
cmps
jne
mov
mov
rcl
addr16
dec
push
test
push
sti
cdq
xchg
in
xchg
(bad)
fnstcw
xchg
dec
adc
or
std
mov
pop
jecxz
test
sub
loope
retf
not
mov
aam
loope
das
jle
jo
enter
aaa
cmps
rcr
xchg
fadd
cdq
xlat
jnp
push
push
jmp
xchg
scas
stos
and
cs
dec
addr16
adc
sbb
jne
sub
aas
jge
fisttp
fdivr
pusha
mov
std
dec
push
scas
shl
clc
inc
js
int
xor
ins
jo
mov
popa
pop
int3
jmp
or
retf
in
retf
ret
leave
(bad)
pop
sahf
push
ds
call
inc
xchg
movs
test
pop
xchg
int3
imul
mov
es
inc
aam
popa
mov
(bad)
push
pop
mov
dec
mov
sbb
sub
sub
push
hlt
int3
pop
jmp
mov
fisubr
aam
and
imul
loop
aas
cmp
dec
jp
stos
jns
gs
push
clc
xlat
dec
call
(bad)
cmp
mov
mov
mov
test
icebp
arpl
fisub
xor
inc
hlt
into
(bad)
mov
jne
(bad)
or
sbb
scas
xchg
push
mov
jo
retf
(bad)
sbb
cmp
adc
pop
inc
or
pop
dec
inc
clc
and
pushf
outs
dec
xor
sub
bound
cmp
sbb
retf
movs
xor
es
mov
fcmovb
add
adc
lods
fbld
adc
jmp
jae
push
call
jmp
push
xchg
dec
sbb
or
mov
mov
int3
cwde
cs
outs
std
mov
cmc
cmp
xor
jb
cs
xlat
jecxz
sbb
popf
ds
or
imul
mov
dec
mov
xchg
stc
dec
cli
pop
test
mov
or
jbe
mov
push
js
scas
xchg
jg
std
inc
call
pop
sub
pop
inc
hlt
mov
stos
dec
dec
xor
bound
sbb
arpl
or
cmps
xchg
adc
lods
mov
popa
push
std
push
in
xchg
or
mov
add
bound
fstp
stos
adc
cmp
int
pop
int3
icebp
sbb
imul
outs
movs
xchg
ds
inc
in
or
cmp
shl
sar
(bad)
cwde
cmps
mov
sub
mov
and
pavgb
xchg
hlt
loop
sbb
push
pusha
bound
xor
dec
(bad)
popf
jns
dec
pop
aaa
out
nop
xchg
or
cmps
retf
mov
les
lea
cdq
mov
test
bound
in
xchg
sub
mov
repnz
lock
sbb
mov
(bad)
sbb
jns
xchg
cmp
aas
leave
mov
pop
push
shl
push
or
jns
pop
cdq
popf
pop
jg
iret
les
and
in
fadd
mul
cmps
mov
push
fld
xor
cmp
pop
call
mov
jns
int3
sub
cmp
fidiv
fld
cmp
popf
fadd
adc
dec
lea
nop
movs
or
adc
mov
hlt
dec
xchg
jecxz
or
test
rcr
xor
ja
fstp
dec
mov
popf
dec
add
xchg
pusha
out
add
jno
cdq
push
inc
xchg
pusha
mov
dec
jo
leave
jmp
xchg
push
xchg
xchg
fptan
mov
push
in
stos
inc
jge
and
mov
fisubr
scas
adc
push
cwde
sub
pop
js
xor
push
sub
fmul
shl
and
push
xchg
adc
xchg
and
ss
mov
retf
push
leave
add
jo
ror
cmp
cli
fild
sbb
push
jmp
sub
jmp
fcomp
outs
and
cmp
push
adc
jmp
std
mov
jo
in
movs
(bad)
aad
sub
xor
jb
dec
sub
mov
jecxz
js
psrld
xchg
inc
out
rol
or
rol
mov
push
push
cld
iret
push
int
or
pop
push
jle
dec
sar
sbb
xlat
out
aam
add
add
push
es
leave
xor
dec
inc
ja
xchg
sub
pop
sbb
pop
xor
loopne
xchg
xchg
stos
in
inc
inc
aam
cmps
mov
test
(bad)
int3
inc
cmp
fstp
xor
push
leave
movs
lods
pop
into
sar
(bad)
mov
mov
jmp
shl
xor
aaa
dec
ins
leave
sar
push
aad
lea
(bad)
out
scas
push
fprem1
xor
mov
mov
jmp
push
mov
sub
cmp
aad
lahf
xor
cmp
pop
mov
in
pop
std
iret
ins
mov
mov
lock
out
call
repz
out
retf
cmp
fstp
pop
pop
sbb
and
scas
mov
leave
outs
mul
jbe
mov
dec
lock
shr
in
(bad)
fist
mov
les
xor
or
fcmovnu
jb
(bad)
dec
(bad)
cmp
jmp
pop
scas
ret
test
nop
int
out
outs
sbb
in
aam
cmp
lds
mov
jecxz
gs
add
jmp
stc
jnp
jne
nop
add
mov
(bad)
jp
xchg
add
jge
outs
inc
sar
mov
rcr
mov
loopne
mov
adc
xor
mov
mov
arpl
jge
pushf
fisub
sbb
adc
adc
push
es
retf
dec
pusha
fcmovnu
jne
jnp
cmp
cmp
test
xchg
mov
jb
inc
pop
daa
mov
loope
push
test
push
mov
stos
call
or
popa
pop
cmc
cdq
daa
js
jmp
sub
test
mov
or
out
sbb
popa
fnstcw
mov
xor
movs
xchg
jns
sbb
push
ror
fst
sbb
mov
loop
cwde
inc
repz
adc
les
pop
dec
aaa
sti
in
stos
xchg
add
sar
cmp
push
fistp
fistp
cmp
push
mov
test
sub
fild
sub
ficom
loop
sbb
sbb
pop
jb
stos
(bad)
imul
jno
push
xor
cld
adc
jp
cmp
cmp
sub
shl
pop
jb
dec
movs
in
add
add
(bad)
retf
fs
xor
xor
stos
jne
in
dec
xchg
push
cmp
lahf
fldenv
cmps
adc
rcr
mov
sub
in
push
adc
push
dec
jbe
inc
hlt
neg
sbb
xor
sbb
mov
push
mov
dec
push
dec
pop
das
sbb
or
sub
pop
cmp
pop
xor
dec
into
adc
(bad)
mov
pop
push
xchg
bound
imul
mov
push
in
mov
or
(bad)
inc
jl
adc
and
sub
test
xor
not
inc
cmp
popf
mov
sub
pop
out
sbb
pop
(bad)
jecxz
les
sar
pushw
jecxz
inc
mov
pop
out
cmps
jg
push
add
jge
add
(bad)
xchg
mov
dec
shr
call
dec
pop
dec
cld
add
mov
cmps
in
and
mov
jno
and
mov
repz
pop
ret
mov
xor
stc
push
pop
xor
gs
ret
xchg
addr16
sti
es
jbe
outs
add
or
mov
es
fwait
mov
cmp
inc
fcmovnbe
add
or
xor
popf
sbb
bound
bound
clc
mov
jns
outs
es
mov
(bad)
in
into
jbe
in
sbb
sbb
xor
popf
pop
mov
mov
dec
stos
and
push
pushf
jecxz
add
lods
cs
fcom
fdiv
sar
xor
push
xchg
sbb
push
and
add
mov
inc
rcl
mov
xor
das
xor
mov
add
push
push
jns
test
retf
test
pop
sbb
pop
push
jne
cmp
push
push
pop
and
lahf
test
test
ret
mov
inc
push
sub
fcmovbe
aas
xchg
push
pop
push
push
ins
xor
outs
jl
cmc
jne
mov
mov
push
adc
jmp
push
and
into
js
inc
cmp
push
pop
nop
sahf
js
jecxz
mov
arpl
mov
ins
xlat
xlat
mov
pop
mov
sub
stos
push
fwait
in
fwait
pop
lds
es
(bad)
jns
aad
adc
cmp
adc
or
pop
pusha
(bad)
cmps
mov
ss
jmp
test
cli
retf
adc
fdiv
mov
out
(bad)
and
sub
out
mov
(bad)
xchg
jmp
cdq
call
push
cmc
(bad)
jne
movs
arpl
out
jbe
sbb
mov
daa
jae
movs
xor
outs
mov
je
cdq
(bad)
enter
lahf
rcl
outs
(bad)
int
sub
fidiv
addr16
stos
cmc
dec
repnz
arpl
clc
stc
push
popf
or
or
pop
push
in
cmps
push
xlat
in
adc
jge
push
sbb
pop
mov
mov
cmc
mov
push
mov
rcl
repnz
popa
mov
mov
jbe
mov
mov
push
jb
pop
push
cmp
jae
mov
cwde
into
mov
das
push
sahf
gs
inc
jp
dec
and
add
iret
pop
mov
xor
shr
xchg
or
scas
gs
mov
mov
in
xor
cli
sahf
(bad)
dec
mov
sbb
out
xor
aaa
sbb
mov
push
adc
inc
or
call
rcr
sub
jge
addr16
xor
cmps
fmul
push
test
xchg
cmps
xor
jb
or
push
imul
scas
mov
xor
adc
pop
sub
mov
inc
and
or
cmp
das
mov
in
push
mov
scas
mov
xchg
dec
xchg
imul
loop
lods
test
xchg
test
imul
test
push
and
mov
and
data16
cmps
loop
sub
je
jp
inc
xlat
(bad)
sub
inc
jnp
mov
mov
into
js
movs
push
mov
cmps
in
sub
lahf
pop
cmp
sub
adc
dec
(bad)
ror
retf
push
jg
mov
leave
xor
xor
cmp
jge
xlat
sub
imul
ins
mov
lock
or
ins
sub
ret
movs
sti
xchg
mov
nop
stos
pop
mov
inc
dec
jnp
xor
jb
mov
or
stos
popa
rcr
dec
mov
cwde
and
pop
cmp
dec
adc
dec
sbb
lea
shl
xor
call
std
sahf
mov
loopne
jae
sbb
lock
pop
jb
imul
dec
jge
not
mov
jb
pop
sbb
out
mov
movs
inc
xchg
fucomi
imul
sar
inc
or
cmp
mov
popa
jb
xchg
imul
shl
lahf
jmp
push
push
retf
jb
out
dec
in
lock
in
pop
mov
mov
aas
popf
in
pop
xor
gs
cmc
mov
fnsave
cli
data16
ret
jae
push
sbb
cmp
sbb
add
add
aas
xchg
out
inc
push
pop
mov
xor
imul
mov
leave
loope
cmp
clc
jnp
pushf
daa
push
std
dec
mov
call
(bad)
scas
add
jle
push
jo
or
add
arpl
or
call
xor
lahf
ins
xor
xchg
xor
retf
dec
mov
shl
movs
jl
inc
mov
push
fs
xor
loopne
mov
fstp
jae
or
repz
faddp
adc
sub
dec
add
dec
idiv
sbb
push
ror
out
mov
enter
jp
pop
cmp
mov
addr16
cld
aad
(bad)
mov
movs
mov
out
scas
call
mov
std
call
inc
inc
jecxz
jle
int
cmp
imul
lea
ins
lock
popa
or
mov
ja
les
icebp
jae
cmp
jle
or
mov
xor
das
out
inc
cmp
pop
push
imul
add
and
hlt
call
repnz
xor
jp
out
out
(bad)
cwde
dec
fstp
mov
popa
sbb
dec
or
sbb
stos
out
pop
in
cmps
and
mov
mov
adc
pop
mov
mov
sub
out
fisub
retf
mov
inc
imul
sbb
aam
inc
leave
adc
loop
cmp
mov
sbb
mov
hlt
jg
inc
jmp
mov
mov
mov
and
or
loope
call
enter
pop
rol
dec
inc
bound
sar
enter
loope
sahf
xchg
dec
movs
fisttp
jg
popf
retf
scas
inc
adc
push
out
add
(bad)
dec
out
addr16
add
jg
sbb
dec
xchg
mov
aad
cwde
mov
dec
mov
inc
xchg
nop
dec
dec
popa
int
and
mov
ror
jmp
cld
xor
xor
mov
rcr
mov
mov
lock
xchg
lock
xor
add
stos
push
or
popf
int
aad
add
out
dec
add
inc
jmp
inc
dec
rol
test
dec
xor
in
jp
dec
mov
pushf
sti
xchg
jmp
loopne
cmps
in
jns
add
iret
in
clc
(bad)
fnstcw
or
dec
xor
jl
or
inc
adc
xchg
and
add
idiv
dec
jmp
mov
test
test
add
arpl
xor
pop
mov
fdiv
gs
dec
idiv
push
je
ret
outs
cmp
mov
retf
(bad)
rcl
inc
adc
imul
mov
iret
leave
mov
xor
xor
fs
jecxz
mov
jo
fsub
or
gs
add
and
push
aad
popf
or
sub
mov
xchg
xchg
pop
dec
shr
and
xchg
push
sbb
cmp
and
std
and
out
daa
xchg
int
jb
inc
mov
neg
and
adc
jmp
push
aas
xor
loope
(bad)
add
pop
je
inc
inc
cmps
movs
push
bound
fcomp
mov
fst
call
icebp
cmp
and
stos
test
imul
cmps
jmp
hlt
mov
(bad)
scas
ret
xlat
dec
fisttp
sub
mov
dec
sahf
out
and
fwait
je
sahf
xor
and
jo
xchg
nop
(bad)
nop
jns
movs
cdq
push
(bad)
in
xchg
popf
dec
or
push
add
pop
daa
rol
mov
js
aam
arpl
mul
mov
(bad)
retf
or
aad
inc
add
nop
(bad)
add
push
mov
add
cmp
movs
imul
stos
push
dec
lock
int3
cwde
leave
push
aam
mov
or
xor
and
sbb
pop
cmp
shl
xor
arpl
and
and
ss
gs
shl
dec
ror
xchg
jae
aad
dec
xor
jbe
js
cdq
inc
add
cmp
adc
ror
in
cwde
cdq
int3
(bad)
scas
mov
sbb
(bad)
ret
xchg
bound
addr16
xor
jns
rcl
xor
(bad)
int3
into
mov
inc
aad
jnp
test
pop
sbb
int
pop
lods
es
jnp
frstor
clc
out
retf
push
les
loop
rol
dec
sbb
int
add
jb
nop
add
repnz
jp
ins
adc
enter
jmp
movs
lahf
shl
movs
inc
jbe
xchg
jnp
dec
cmp
push
inc
mov
cwde
jle
push
js
push
popa
or
and
pop
cmp
and
sbb
jg
mov
loope
inc
and
loopne
rcr
mov
add
cmc
sti
xor
jmp
mov
inc
int3
dec
jno
push
(bad)
sub
fstp
enter
adc
mov
adc
mov
cmp
aad
inc
pop
icebp
push
retf
adc
sub
mov
push
mov
jp
mov
jp
cmps
xlat
lahf
icebp
mov
add
mov
fbld
ffree
mov
sbb
mov
pop
dec
dec
sbb
call
sub
movs
dec
jbe
inc
adc
int
pop
adc
sbb
inc
xchg
in
pop
xchg
bound
fimul
std
cmp
and
loopne
and
pusha
mov
cmc
fisttp
scas
out
mov
xchg
adc
pop
cwde
pop
mov
loop
or
pop
adc
les
push
mov
inc
jnp
out
neg
mov
fmulp
mov
scas
sahf
daa
jb
mov
xor
adc
cmp
out
cli
xor
dec
jbe
fs
dec
jg
ins
sbb
stos
cmps
lahf
xor
pop
mov
call
(bad)
xchg
fsub
ror
and
inc
in
popf
dec
mov
ss
push
jecxz
(bad)
(bad)
push
sub
aas
inc
popf
scas
xlat
mov
xlat
mov
(bad)
sar
pop
mov
movs
fs
add
cmp
gs
shl
in
test
arpl
sub
pop
(bad)
mov
arpl
xor
inc
leave
loope
mov
shl
xor
(bad)
les
mov
int
add
mov
xchg
fcomp
inc
cmp
mov
xor
mov
cmp
jg
lea
jmp
(bad)
lahf
add
mov
xor
test
ret
and
sti
jbe
sti
push
mov
jne
adc
sahf
and
ja
mov
out
in
mov
sbb
cmp
in
cmp
daa
push
fsubr
add
adc
jmp
dec
shl
push
in
sbb
in
cdq
in
scas
in
jl
cmp
cmp
push
mov
mov
int3
call
dec
pop
outs
test
arpl
mov
mov
push
cmp
fnsave
mov
inc
ss
xchg
sti
jmp
push
mov
lods
jge
popf
inc
mov
mov
mov
jae
aas
adc
dec
and
sub
jl
add
cmp
out
jae
adc
cmps
and
out
rol
sbb
lock
jmp
fmul
hlt
ficomp
mov
jne
(bad)
repz
push
repz
call
inc
push
dec
mov
jmp
mov
aas
jle
jle
pop
rcr
mov
inc
pop
jbe
pusha
repnz
scas
dec
cmp
fbstp
mov
xlat
mov
(bad)
sub
jge
(bad)
push
lea
jnp
mov
add
(bad)
xlat
int3
(bad)
(bad)
repz
cmp
push
pusha
popa
dec
jne
shl
js
hlt
pop
or
pusha
iret
sbb
ins
and
xchg
or
lods
add
call
popa
aam
jmp
xacquire
sar
daa
xor
mov
jnp
test
add
fimul
aaa
sbb
movs
neg
or
mov
(bad)
cmp
pop
lea
sub
scas
jno
jg
jns
retf
push
cmc
xchg
jmp
inc
jo
or
fbld
loopne
dec
fidivr
jle
(bad)
in
add
sbb
cmp
(bad)
inc
shr
and
inc
inc
out
adc
xchg
push
dec
scas
je
add
sti
pop
mov
jb
mov
cmc
xor
jmp
cmp
fldenv
lods
mov
aad
adc
sub
xchg
mov
sub
jae
in
cli
(bad)
xchg
xor
jmp
fsub
dec
adc
mov
mov
enter
mov
xchg
dec
dec
cmp
cmc
sub
xchg
fstp
pop
addr16
lods
(bad)
dec
es
jl
jle
inc
stos
call
mov
call
dec
pushf
sbb
retf
stos
add
pop
std
loop
mov
imul
push
xor
in
jl
adc
inc
jne
push
inc
(bad)
and
mov
gs
mov
cmp
daa
mov
jmp
sub
mov
loope
cs
mov
pop
iret
push
jnp
(bad)
pop
sbb
ja
sub
and
rcl
add
inc
lea
aam
dec
jbe
adc
js
fsub
clc
cmps
imul
into
cmp
clc
xor
jae
movs
daa
pop
stos
xchg
scas
mov
sar
push
lahf
inc
mov
or
sahf
cmp
push
sti
sti
cmps
xchg
imul
inc
inc
jecxz
jo
mov
jno
pop
fwait
(bad)
retf
sbb
xchg
std
mov
(bad)
inc
fst
dec
lahf
mov
ror
retf
cmp
cmp
or
repnz
cmp
pop
(bad)
push
call
cmp
cmp
rcr
mov
mov
inc
leave
pop
ret
push
ja
cmps
mov
cmp
add
or
in
out
pop
push
cmp
jno
mov
cwde
mov
inc
fstp
and
cmp
outs
pop
pusha
movs
gs
or
pop
and
popa
or
enter
fdiv
xchg
jmp
xchg
int
jmp
pop
lods
fld
out
fld
jmp
int
mov
jge
jg
ds
lahf
movs
cmc
cmp
clc
cwde
outs
jmp
mov
call
mov
dec
adc
or
push
jnp
fdiv
add
push
iret
sbb
jmp
imul
movs
inc
jbe
add
pop
shr
outs
or
daa
cld
into
shl
arpl
fstp
cld
pop
xor
fxam
cdq
cmp
int
mov
mov
push
xor
dec
pop
(bad)
add
jle
cli
mov
call
adc
push
dec
adc
mov
(bad)
mov
inc
xchg
inc
loop
inc
fwait
das
push
scas
daa
scas
cmps
int3
out
lock
(bad)
movs
in
inc
fdivr
mov
mov
mov
rcr
xchg
pop
add
xor
or
stc
ins
xchg
mov
dec
ins
adc
push
icebp
cmp
dec
add
test
inc
(bad)
loope
xor
xor
pusha
cmp
out
fdiv
xor
xchg
test
jmp
xchg
push
push
(bad)
cmps
push
fs
fcmovb
aam
mov
mov
in
and
inc
mov
push
cmc
cmp
dec
mov
cld
mov
sbb
lahf
sbb
rep
stos
out
call
mov
adc
cmp
int
xchg
dec
out
adc
xchg
clc
push
add
cmp
scas
mov
jl
pop
addr16
add
push
cmp
or
jno
adc
out
ja
repz
push
jns
inc
inc
clc
inc
outs
imul
nop
sar
nop
stos
cmp
hlt
movaps
cmp
cmp
xor
es
mov
or
(bad)
pop
pop
scas
or
jo
cmp
or
sbb
lods
jge
out
cld
jbe
(bad)
xchg
test
aad
push
shl
(bad)
je
(bad)
jmp
test
jno
jns
and
pop
dec
dec
cmp
and
and
sub
mov
fcomip
inc
xchg
pop
in
add
sbb
ret
into
in
mov
out
sahf
xchg
dec
shl
rcl
js
fwait
xor
xchg
loope
jno
xor
and
xchg
jecxz
test
jne
and
les
leave
call
dec
dec
cs
cmp
in
jne
pop
push
and
cmp
xor
loope
neg
and
enter
repnz
push
mov
les
xchg
imul
jg
mov
pop
xchg
pop
pop
sub
push
call
fld
(bad)
push
fnsave
pop
inc
push
int3
jno
mov
and
adc
pop
mov
lock
push
xchg
into
push
int
push
enter
out
rcl
test
xchg
and
ja
dec
mov
jae
jb
outs
cwde
mov
add
bnd
inc
mov
xchg
int
neg
sar
or
mov
ret
not
sar
imul
pusha
mov
add
ins
adc
jecxz
pop
pop
es
cmp
xchg
(bad)
sahf
sar
lods
stc
mov
xor
cmp
iret
loopne
lea
pop
into
cmp
and
fistp
inc
jmp
int
jge
mov
jne
shl
jmp
scas
daa
adc
dec
pop
jno
xchg
(bad)
call
movs
push
adc
pop
ror
mov
push
sbb
mov
ficomp
jg
ret
pop
int3
adc
xor
ds
fistp
fs
and
into
push
push
push
mov
push
fcom
push
aam
inc
or
mov
mov
jle
pop
lods
aas
repz
daa
sbb
xor
sub
outs
icebp
cmp
adc
mov
clc
(bad)
and
repz
jnp
dec
inc
mov
mov
(bad)
jecxz
xor
bound
repz
ret
jp
mov
(bad)
fld
rcr
sbb
pushf
mov
push
add
cmp
fadd
push
loop
push
sbb
xor
xchg
jg
cmc
and
repz
call
xchg
fnstsw
xchg
shr
jmp
jae
imul
adc
fld
addr16
xor
leave
call
jle
mov
cmp
cmp
mov
jmp
mov
xchg
repnz
inc
mov
jle
ror
inc
js
and
je
and
loope
shl
inc
mov
sbb
jle
xlat
fistp
(bad)
(bad)
je
or
retf
and
push
mov
cmps
or
sbb
jno
mov
cmp
scas
sahf
dec
sbb
lahf
retf
addr16
es
cld
xchg
fmul
clts
arpl
in
xchg
dec
fdiv
cdq
shl
addr16
jnp
xchg
mov
pop
lods
inc
cli
jns
adc
jl
fist
cmp
std
xchg
jl
fcom
push
add
push
dec
rol
scas
cli
or
out
mov
std
cmp
cld
push
outs
jle
mov
or
imul
outs
cmc
lods
cwde
sub
js
loope
mov
clc
pushf
cmp
add
and
pop
or
loop
mov
push
nop
js
ret
imul
xchg
fcomi
push
inc
xchg
fist
pminub
pop
jle
inc
fstp
and
cmps
adc
jecxz
mov
mov
jge
or
lods
enter
inc
sbb
adc
ins
mov
mov
shl
and
or
jns
pop
push
in
psadbw
test
rcr
lods
inc
neg
pop
and
push
add
mov
mov
jl
pushf
xlat
add
adc
add
and
(bad)
mul
out
mov
or
push
sar
cdq
(bad)
xchg
out
in
in
arpl
push
fwait
pop
jl
in
ficomp
jmp
push
sbb
fcmovb
leave
cmps
jecxz
sar
or
call
jmp
jns
or
xchg
xor
ss
cld
ret
loopne
cmp
add
jmp
sbb
call
jmp
sbb
pop
dec
leave
push
sbb
mov
dec
cmps
jns
sbb
xchg
daa
or
xchg
daa
adc
cli
fadd
mov
jb
cmp
mov
repnz
retf
hlt
mov
mov
push
pop
sub
test
outs
adc
xchg
fild
stos
mov
fld
fild
leave
fs
push
and
lds
(bad)
jl
lea
js
out
imul
sahf
pop
ror
and
outs
movs
or
dec
mov
loopne
push
fsubr
inc
cdq
scas
adc
arpl
ret
lods
fnstenv
or
jecxz
sub
pusha
retf
or
ret
mov
icebp
push
dec
cwde
in
aaa
clc
js
pop
cmps
icebp
call
aaa
pop
mov
jae
jecxz
sbb
pop
sbb
movs
jmp
add
popf
cmp
dec
pop
and
std
xor
jne
xor
jbe
sbb
mov
lods
shl
jnp
xlat
cmc
xchg
or
(bad)
out
movs
(bad)
and
jmp
cmps
push
neg
mov
pop
dec
enter
inc
adc
dec
call
mov
outs
ret
std
mov
iret
fisub
cmp
cmp
dec
test
(bad)
mov
lea
xor
clc
cmc
stos
or
push
xchg
cmps
sub
and
pushf
dec
mov
dec
rol
lahf
jle
dec
nop
mov
or
out
outs
mov
cmp
jecxz
enter
aad
mov
or
mov
mov
push
aas
mov
sbb
ret
mov
les
jl
cli
ins
mov
rol
ja
sub
and
sub
jecxz
loop
frstor
cmp
or
arpl
pushf
popf
inc
in
leave
div
in
nop
mov
add
dec
mov
jns
adc
add
lahf
test
dec
pop
gs
mov
xchg
fld
lea
jge
xchg
enter
pop
stos
push
push
stos
std
leave
sub
(bad)
test
mov
xor
inc
jns
mov
in
fnstcw
arpl
jle
pushf
cmp
ds
mov
(bad)
fisubr
cmp
ins
inc
ret
mov
fsubr
sahf
scas
idiv
mov
or
rcl
jmp
or
jmp
sbb
jno
out
xor
push
repz
push
adc
add
mov
imul
or
dec
stc
in
dec
and
add
in
push
sub
enter
cmp
add
out
sbb
(bad)
jmp
and
nop
aad
dec
nop
stc
xor
rcr
arpl
fbld
leave
sub
(bad)
cmp
movs
stc
stos
sub
test
or
cmp
xchg
mov
jno
(bad)
jo
or
cmp
xor
xchg
lods
aam
lea
pop
push
aad
pop
fistp
repnz
xchg
mov
or
(bad)
leave
ss
xchg
xlat
imul
ret
xchg
push
ss
mov
xor
enter
sub
arpl
mov
push
scas
jo
xor
test
lods
in
jle
jge
repnz
mov
adc
or
pop
retf
lds
xchg
aad
es
cmp
pop
sahf
sub
fnstsw
pop
pop
js
or
pop
pushf
mov
scas
mov
jae
add
cmp
pop
arpl
test
data16
mov
xlat
stos
leave
in
repnz
faddp
cwde
xchg
neg
sub
icebp
jbe
adc
cmp
jbe
mov
popf
pop
jne
mov
out
push
retf
inc
add
pop
push
mov
jl
mov
cmp
inc
sub
mov
sar
xchg
xchg
xor
xchg
dec
dec
sub
cli
pop
lods
(bad)
sub
pop
bound
jns
pop
mov
dec
(bad)
fcomi
xor
dec
mov
xchg
int3
hlt
sbb
dec
inc
sbb
ror
out
jl
es
push
ret
jg
js
imul
fidivr
jbe
enter
add
sub
retf
repnz
shr
add
popf
in
popa
cmp
dec
push
or
adc
sbb
cli
sbb
add
clc
int3
in
(bad)
cmc
test
je
jb
call
outs
ret
ret
or
(bad)
sub
mov
rcr
sbb
push
loope
in
shr
mov
adc
pop
inc
add
mov
push
mov
pusha
dec
out
xchg
aaa
enter
or
sbb
push
mov
push
and
ja
and
add
or
cmp
jb
int3
mov
cmp
pop
jmp
add
adc
pop
inc
cmp
(bad)
dec
out
pop
aad
test
jmp
fdiv
in
push
fwait
cmps
adc
in
push
cmp
xor
jmp
xor
inc
cmp
pusha
sub
mov
push
fst
mov
lahf
add
ins
cmp
xlat
pop
and
mov
mov
push
(bad)
adc
int3
adc
push
ficom
jp
js
arpl
add
mov
inc
inc
push
sub
(bad)
mov
push
cmp
in
fild
mov
mov
mov
mov
repnz
mov
pushf
std
jae
arpl
add
(bad)
xchg
jns
inc
lock
mov
into
js
ficomp
jb
cmp
(bad)
adc
dec
shr
loop
push
dec
cmps
movs
mov
xchg
jo
jbe
mov
test
add
(bad)
or
jne
mov
leave
pop
test
ror
mov
xor
(bad)
pop
ins
dec
mov
add
ret
in
ret
jecxz
ficom
xchg
ror
lea
xchg
jnp
add
inc
test
movs
daa
lods
jb
aas
add
push
mov
mov
mov
adc
leave
sub
jae
nop
test
pop
pop
out
iret
sti
jne
pop
dec
dec
pop
data16
mov
out
xchg
fprem1
nop
xor
outs
fild
stos
mov
ss
add
aas
add
pop
pop
repnz
rcl
fist
cmps
add
loope
pop
jno
in
fwait
add
dec
movs
sahf
call
stc
xchg
lods
dec
cwde
dec
ret
rcl
sbb
mov
(bad)
sub
stos
icebp
sub
pusha
and
jno
inc
add
mov
out
or
out
sar
gs
(bad)
pusha
push
or
rcr
sub
inc
(bad)
jp
and
sbb
icebp
std
cli
sbb
dec
pop
inc
sub
js
pusha
cmp
(bad)
icebp
ficomp
cdq
jecxz
fiadd
test
dec
adc
clc
fbstp
rol
xchg
cmp
xor
in
add
pop
jp
nop
loop
xchg
pop
in
dec
scas
jmp
mov
(bad)
sbb
loopne
das
mul
fadd
adc
imul
cmps
jmp
push
popf
push
push
mov
js
adc
pop
pop
sub
movs
adc
hlt
xor
mov
mov
out
push
(bad)
jae
dec
dec
mov
xor
repz
jno
(bad)
retf
stc
ret
arpl
push
lahf
xchg
xor
xor
pop
popf
mov
or
sbb
ss
pop
pop
cmp
test
inc
sahf
jno
add
dec
mov
pop
sub
out
jno
adc
ss
or
fnstcw
(bad)
mov
cmp
fist
cmp
add
jmp
bound
xor
mov
scas
add
aas
cmc
int
sbb
sbb
mov
mov
dec
push
mov
cmps
cmc
retf
in
pop
add
mov
mov
jge
mov
mov
cmp
dec
ss
scas
jg
movs
cmc
daa
push
jne
inc
(bad)
jo
inc
lahf
rcl
xchg
pop
jecxz
add
mov
jae
dec
dec
out
ds
sub
aas
mov
xor
pop
mov
mov
(bad)
std
daa
aaa
push
ss
push
cmp
into
push
pop
pushw
stc
jp
mov
pop
sar
mov
mov
lahf
pop
mov
fisttp
sub
je
pop
sub
pop
jno
pushf
sub
sub
iret
js
popf
fist
push
cmp
push
pop
xchg
clc
mov
xlat
fchs
js
loop
js
and
pop
mov
sbb
int
and
mov
rol
add
mov
(bad)
push
pop
jbe
or
popf
les
adc
pop
mov
(bad)
jns
idiv
shl
sub
and
push
out
hlt
cwde
cmp
fild
cli
cmc
pop
push
call
add
sahf
ror
(bad)
(bad)
in
lods
xor
cmp
stos
sub
loop
push
pop
xchg
out
int3
les
adc
sub
outs
xor
dec
bound
sub
loop
jecxz
popa
cld
ja
int3
dec
mov
scas
add
push
retf
mov
inc
mov
or
lea
jmp
and
add
add
aas
cdq
(bad)
sbb
mov
add
dec
and
addr16
(bad)
aas
pop
outs
bound
add
adc
sbb
test
pop
fsubr
lea
dec
pop
or
mov
push
xor
xlat
jle
and
retf
xor
sahf
sbb
adc
or
out
and
sub
and
or
inc
fcmovb
or
add
push
int3
loop
lahf
fild
fiadd
cmp
sbb
(bad)
in
sar
repnz
sub
in
mov
icebp
test
(bad)
ret
cmp
and
or
push
xchg
out
ins
inc
into
ror
xchg
imul
ins
inc
or
fiadd
dec
iret
mov
lahf
and
sbb
or
fistp
inc
in
fst
call
adc
jmp
sbb
jno
outs
leave
ror
inc
mov
xchg
push
sbb
or
lock
pop
in
mov
in
imul
lds
add
xor
xor
jmp
lock
adc
stos
jnp
pop
add
in
lock
dec
(bad)
fistp
hlt
push
fisttp
and
cmp
xchg
sub
mov
mov
and
pop
xor
push
push
sub
(bad)
scas
inc
and
ret
outs
jle
push
retf
sar
xchg
popa
jg
cli
lds
pop
retf
adc
stos
loope
ja
and
aas
adc
pop
(bad)
scas
mov
inc
jb
imul
pop
ret
arpl
cmps
mov
idiv
shl
rcr
inc
mov
or
or
sti
sahf
std
xchg
ins
pop
mov
lock
mov
leave
mov
shr
sub
push
fisttp
jg
push
xor
imul
xor
imul
sahf
gs
lock
or
sbb
xor
not
add
mov
imul
cmp
test
cmc
adc
add
xor
fst
and
bound
xor
(bad)
mov
push
leave
jne
sub
adc
xor
test
jge
dec
pop
jle
mov
mov
jge
push
ret
ror
jmp
or
xchg
cmp
(bad)
jg
popa
retf
pusha
pushf
jae
test
clc
sbb
mov
adc
inc
pusha
jmp
fld
cmp
fnstenv
ss
into
clc
and
inc
mov
mov
push
pusha
adc
movs
jl
in
sti
aaa
(bad)
cmp
jmp
jno
inc
rcl
jecxz
mov
push
cmps
mov
int3
jg
pusha
rcl
add
mov
scas
test
adc
stos
(bad)
in
clc
dec
addr16
cmp
ss
call
mov
mov
mov
lahf
push
xchg
sbb
dec
das
cmp
adc
sub
in
cmps
daa
push
cmp
mov
jge
rcl
jmp
icebp
or
sahf
mov
and
stos
cmp
inc
inc
mov
(bad)
jge
jns
call
sbb
lds
mov
stos
mov
loope
scas
test
mov
jmp
ins
push
dec
cli
xor
inc
and
shl
jecxz
retf
mov
das
sub
cmp
sub
scas
adc
push
sbb
and
xchg
add
add
out
in
xor
cs
in
pop
lock
mov
pand
mov
in
mov
mov
xchg
loop
or
and
gs
sbb
in
cmp
clc
mov
lock
movs
adc
mov
aad
sbb
xor
mov
xchg
cli
lods
in
mov
or
retf
and
xchg
(bad)
out
ret
cmps
add
shl
xor
push
pop
neg
pavgw
repnz
jle
jb
test
sti
dec
cwde
data16
cli
data16
cs
popf
leave
jne
mov
sbb
pop
add
ja
push
pop
mov
enter
in
aas
call
nop
cmp
mov
mov
scas
mov
mov
into
pop
fidiv
inc
sar
add
(bad)
clc
push
sbb
rcl
xor
dec
cli
mov
mov
sbb
enter
lock
loopne
mov
data16
mul
mov
loop
mov
cmc
shl
jecxz
stos
push
dec
fiadd
pop
dec
stos
shr
adc
mov
or
jg
ror
daa
dec
cmps
call
bswap
call
mov
adc
repz
jl
lock
adc
and
aas
ret
cmp
and
push
add
push
push
pushf
cmp
jne
fwait
inc
jae
call
jmp
push
add
push
jbe
ret
and
xor
and
add
daa
test
and
outs
cmp
xchg
adc
outs
or
inc
daa
mov
bound
push
jp
inc
and
inc
popf
and
repz
hlt
out
test
mov
adc
push
pop
add
repz
pop
push
sar
aad
(bad)
(bad)
adc
mov
(bad)
push
imul
sbb
mov
jmp
or
sahf
fnstenv
iret
push
xor
cmps
jmp
mov
pop
out
jecxz
inc
push
jo
aam
(bad)
daa
cli
push
xor
add
xor
bound
div
inc
sub
xchg
xor
jmp
fstp
push
test
ins
xchg
icebp
leave
and
push
jno
push
mov
xor
push
call
dec
loopne
sub
cmp
add
test
sti
mov
stc
push
imul
xor
cs
call
add
and
rol
aad
sbb
pop
loopne
jecxz
mov
xor
xchg
shl
and
ret
adc
scas
push
(bad)
test
adc
mov
rcr
in
std
neg
iret
mov
sbb
sub
sbb
call
mov
sbb
or
and
aas
xchg
pop
popf
sub
cmp
add
cmp
cmp
sti
ins
adc
nop
add
outs
sub
pop
pop
adc
dec
(bad)
xchg
mov
cmp
push
push
adc
adc
xchg
test
fistp
inc
out
push
fsub
and
adc
add
das
imul
sbb
cmp
cmps
std
and
mov
jg
dec
lock
pop
inc
or
outs
pushf
stc
je
cmp
pop
sub
add
retf
(bad)
cmps
dec
jns
jg
aaa
test
sbb
cld
and
pop
es
cdq
sar
out
imul
ret
test
bound
rol
ja
inc
shl
fidiv
out
div
dec
mov
call
mov
in
pop
jb
sub
or
imul
pop
call
cli
adc
jmp
sub
jb
or
cmps
sub
xor
xchg
das
or
arpl
or
dec
sbb
imul
fst
shl
dec
mov
mov
fs
pop
into
adc
in
ret
jge
and
xchg
pop
fcom
cmc
arpl
mov
push
jle
jne
scas
push
fimul
clc
stos
(bad)
dec
mov
loope
xor
out
ins
mov
in
pop
adc
push
cmps
jns
hlt
cwde
dec
cmp
jae
mov
aam
jge
loopne
out
int3
inc
popa
pop
inc
cdq
add
ins
scas
imul
mov
fbld
rcr
jbe
cmc
es
cmps
arpl
fmulp
sub
mov
cs
retf
adc
scas
cmp
pop
add
sbb
pop
or
arpl
repz
out
inc
ds
and
mov
test
cmp
repz
xchg
fsub
sbb
xor
mov
sar
push
or
and
mov
jmp
(bad)
rol
das
(bad)
in
pop
gs
mov
dec
mov
lods
ret
sbb
mov
(bad)
pushf
mov
jecxz
test
jns
mov
xchg
fwait
pop
add
mov
lods
sbb
js
clc
fstp
cld
or
pop
addr16
icebp
dec
dec
daa
xchg
or
mov
or
pop
jbe
mov
cmp
das
push
in
leave
call
jnp
in
add
jg
in
adc
inc
pop
adc
inc
imul
pusha
cwde
xchg
inc
daa
add
call
push
shl
or
inc
(bad)
fsub
inc
inc
cmps
data16
xchg
sub
sub
retf
(bad)
push
stc
and
pop
jecxz
mov
adc
xchg
clc
adc
sbb
add
jmp
out
pop
push
jnp
push
popf
dec
out
sahf
fmul
aaa
push
add
xchg
fmul
mov
fwait
(bad)
aam
and
imul
dec
push
shr
sbb
into
imul
adc
shl
sti
ficomp
adc
push
sub
pop
addr16
sbb
loop
iret
jo
sub
mov
in
in
fbstp
xchg
push
fstp
add
repz
pop
mov
scas
test
xor
mov
cmp
movs
iret
mov
test
and
outs
mov
xor
xor
mov
js
adc
cmp
(bad)
aaa
add
(bad)
sub
pop
mov
not
xor
lds
ins
xchg
push
dec
cmp
gs
out
push
lock
or
(bad)
push
outs
jb
pop
enter
je
xor
loopne
xchg
out
inc
add
push
das
stos
xor
mov
outs
cmp
scas
ret
jmp
inc
in
aam
movs
leave
mov
in
xchg
(bad)
sti
mov
icebp
inc
sbb
jp
pop
adc
mov
dec
cmp
in
test
lahf
fistp
cmp
adc
jne
sub
repnz
lock
or
daa
push
and
stos
cmp
push
cmp
adc
(bad)
xchg
(bad)
ret
dec
jnp
fisttp
push
(bad)
bnd
cmp
movs
push
dec
or
lods
lods
repnz
aas
xor
enter
add
shl
pop
xchg
jo
jmp
loop
cmps
sti
and
(bad)
cld
imul
mov
push
jmp
adc
sub
push
pop
jle
jmp
and
mov
scas
mov
xlat
imul
push
pop
push
cwde
and
dec
mul
push
nop
ins
jb
lea
inc
lock
add
mov
cdq
mov
out
push
lea
div
jp
daa
or
inc
in
sbb
mov
into
mul
sub
std
xchg
cli
cmp
or
aam
push
fmul
inc
ret
dec
sub
adc
or
dec
test
movs
jb
jo
sahf
push
(bad)
mov
and
adc
xchg
pop
je
pop
ds
fnstsw
cmp
aad
out
xchg
rcl
nop
(bad)
imul
(bad)
nop
add
ds
sub
pop
cli
push
aam
outs
sub
add
xchg
fs
mov
rcr
sub
sbb
outs
std
cli
data16
sbb
mov
push
scas
push
and
xlat
fcomp
(bad)
push
ror
add
add
inc
das
dec
inc
and
dec
xchg
or
push
jno
inc
push
loop
jmp
sbb
imul
sbb
xlat
fmul
test
jecxz
enter
fwait
imul
fidiv
inc
xlat
cmp
and
imul
jno
dec
ret
xchg
cmps
icebp
pop
push
scas
std
mov
push
sbb
data16
scas
cmp
mov
call
pop
test
adc
xchg
sahf
das
add
ret
pop
shr
rcr
lds
ret
jne
jbe
nop/reserved
push
and
arpl
sub
xchg
ins
popf
add
imul
fmul
not
fidiv
dec
add
rol
push
inc
loope
jle
mov
push
in
inc
icebp
inc
mov
je
pop
mov
cdq
cmp
lahf
pop
sub
arpl
mov
jl
cmp
shld
outs
dec
mov
push
xor
mov
pusha
out
mov
outs
or
inc
shl
pop
mov
inc
rcr
mov
cs
sahf
ss
sti
ret
mov
mov
xchg
mov
mov
rcl
jg
or
dec
sub
mov
cmp
bound
push
or
fnstenv
inc
push
mov
jbe
push
inc
pop
enter
xlat
add
test
inc
sar
xchg
(bad)
enter
cwde
inc
mov
pop
jbe
clc
mov
outs
pop
adc
sbb
in
fbstp
and
sbb
js
inc
sahf
cmc
inc
adc
jno
data16
pop
popa
aad
xchg
out
jbe
sbb
rcl
push
bound
push
into
or
push
aad
enter
call
(bad)
xor
add
sbb
aas
hlt
rcl
adc
bound
sbb
inc
dec
fdiv
sahf
push
fdivp
in
addr16
pop
cmps
es
dec
ds
out
add
xor
jo
or
mov
sar
mov
cmps
cmp
push
mov
sbb
push
and
les
sar
jo
cmp
push
dec
ror
jl
xchg
or
inc
mov
cdq
mov
out
icebp
jb
(bad)
sbb
cmp
pop
push
and
lahf
xchg
and
push
sub
and
retf
std
div
xchg
test
pushf
addr16
jae
stos
push
mov
add
sbb
pop
xor
or
dec
and
pop
icebp
test
ds
lods
mov
inc
or
add
into
pop
pop
addr16
add
(bad)
fsubp
add
lods
aaa
push
in
fiadd
lahf
jnp
mov
adc
jnp
sub
mov
pop
sbb
std
lods
push
jl
cmp
sub
xchg
mov
jge
jecxz
xor
(bad)
mov
adc
ss
push
cmp
cmp
es
cli
add
(bad)
iret
stc
and
sbb
in
in
sahf
mov
sbb
int
cmp
loope
and
out
xor
cli
retf
push
inc
xchg
jecxz
ja
mov
pop
std
repz
push
add
je
jbe
xchg
xchg
dec
push
or
cmp
push
fadd
add
push
dec
mov
scas
mov
add
sar
retf
jle
jmp
fcmovnb
adc
pop
mov
or
outs
dec
mov
and
jbe
enter
cwde
out
pop
(bad)
mov
sbb
int
pop
mov
pusha
jo
sub
inc
dec
clc
test
cmps
out
jl
xor
and
adc
adc
int
frstor
mov
cli
sub
sbb
jo
movs
mov
cmps
sbb
and
pop
popf
call
cmp
jnp
or
push
stos
lods
(bad)
or
inc
in
or
(bad)
addr16
mul
or
out
in
(bad)
das
cmp
nop
xchg
cwde
push
pop
adc
lock
(bad)
int
pop
out
fnsave
sbb
loopne
repz
add
cmc
outs
lds
cmp
or
sbb
jnp
xor
push
pop
imul
and
mov
or
sub
mov
push
cmp
jo
xor
sbb
push
mov
adc
test
imul
cli
pop
inc
sbb
inc
js
add
mov
fs
clc
sahf
fisttp
mov
jns
out
addr16
gs
pop
sbb
and
pop
repnz
(bad)
(bad)
test
dec
dec
xor
push
push
cs
pop
outs
inc
out
(bad)
cmp
xor
jle
ret
shl
pop
icebp
stc
(bad)
mov
gs
cmp
popa
cmp
sbb
mov
push
out
bound
mov
or
dec
call
add
fisttp
leave
ret
shr
push
and
lahf
inc
inc
jle
fsub
sbb
push
mov
jge
xor
push
and
mov
mov
xor
ficomp
(bad)
out
add
arpl
add
in
scas
inc
push
jge
mov
adc
hlt
or
pop
inc
pop
arpl
sub
ins
cdq
dec
or
pop
adc
hlt
stos
dec
adc
inc
xlat
mov
std
pop
outs
xchg
sbb
sbb
jp
cmp
jo
pop
out
sbb
xchg
daa
sub
pop
mov
js
hlt
cmp
jl
rcr
(bad)
cmps
mov
push
push
jge
enter
sqrtps
in
mov
fs
sahf
xchg
pop
sub
call
mov
jae
push
sub
xchg
jbe
xchg
scas
daa
and
sti
cmps
out
push
jno
pop
sbb
aad
loopne
dec
sub
and
adc
cmp
ja
sbb
hlt
cld
scas
cmp
xor
stos
pop
cmp
jnp
push
mov
fist
lods
loope
cld
stos
(bad)
sub
cmps
inc
mov
pop
mov
cwde
lds
jp
stos
or
clc
dec
cli
mov
adc
push
inc
xchg
shl
mov
int
pop
aas
push
ja
jo
das
mov
xchg
sub
xor
ret
cmps
imul
cwde
lds
call
es
call
dec
ret
push
jbe
pop
sbb
lods
imul
add
sbb
imul
pop
addr16
jmp
call
imul
xchg
neg
dec
aaa
adc
mov
ror
dec
call
fs
mov
fsubrp
addr16
pop
inc
adc
cmp
lods
scas
xchg
add
dec
std
inc
ret
sbb
out
mov
mov
mov
dec
xchg
inc
xchg
stos
hlt
jecxz
movs
mov
lea
cli
inc
das
adc
mov
xchg
in
sub
nop
imul
or
or
dec
in
mov
in
cmps
aam
pop
jnp
mov
mov
stos
inc
inc
push
scas
adc
or
or
(bad)
out
mov
fimul
bswap
hlt
xor
xchg
shl
cmp
pop
cmp
pusha
lock
sub
fstp
test
sub
pusha
call
pop
imul
xor
das
adc
das
bound
outs
and
lods
mov
xchg
stos
adc
std
xor
(bad)
fsubrp
pop
xchg
fld
and
inc
mov
ror
mov
xchg
ror
lahf
push
jmp
scas
cld
test
jecxz
xchg
add
lahf
movs
mov
add
gs
xlat
jae
outs
retf
fwait
add
out
xchg
jne
shl
leave
or
inc
cwde
cmp
call
stc
sub
dec
fdivr
mov
iret
cli
xor
sub
inc
enter
addr16
cdq
mov
xor
mov
dec
pop
mov
adc
clc
mov
mov
call
sbb
add
repz
and
loopne
inc
and
mov
fcmovu
sub
in
mov
mov
xchg
pop
inc
adc
repz
std
mov
(bad)
data16
and
or
ins
rol
cs
(bad)
rcr
pop
aam
(bad)
dec
fsubr
lock
jae
mov
or
xchg
mov
dec
cwde
aaa
cmp
sub
test
and
ret
dec
add
mov
sub
sar
adc
es
cmp
ficomp
ins
xchg
icebp
stos
rol
mov
or
jmp
test
loope
loop
pop
inc
fs
shl
pop
push
jge
out
int3
rcr
sbb
sub
jle
xor
dec
out
cld
mov
sbb
push
arpl
sbb
sbb
jo
xor
mov
mov
dec
pop
imul
sub
jae
call
mov
xchg
(bad)
or
sub
xchg
loop
ins
repz
fadd
lods
push
push
dec
in
loopne
aad
aaa
adc
fiadd
xchg
sub
cwde
iret
xchg
in
cmc
jae
movs
inc
push
rcr
push
mov
sub
sub
shl
jl
mov
scas
dec
add
jns
loope
mov
pop
outs
and
ret
sbb
or
test
hlt
test
clc
pop
inc
(bad)
dec
pop
fsub
sbb
repnz
xchg
pop
dec
cmps
out
imul
outs
vmovd
stc
or
fcmovnbe
push
jbe
sub
sub
test
mov
and
imul
mov
and
test
ret
test
cmp
into
ret
aaa
retf
test
mov
clc
push
mov
mov
jbe
stc
jl
sbb
pop
into
push
mov
sar
or
cmc
movs
dec
inc
pushf
arpl
xchg
mov
inc
test
ret
daa
loop
mov
mov
xchg
sbb
clc
pushf
push
je
std
sbb
scas
adc
cwde
pop
xchg
sbb
mov
les
icebp
xlat
lock
and
dec
jecxz
mov
test
xor
push
sbb
call
pop
sbb
stos
shl
out
outs
test
pop
loopne
inc
push
and
xor
mov
xor
xor
cld
jne
fsubr
imul
cmp
imul
pop
and
hlt
lea
or
movs
fild
aaa
aaa
cs
fisttp
adc
fst
ret
call
inc
add
aad
arpl
mov
mov
push
ins
xchg
fstp
fldenv
mov
jle
inc
mov
movs
rcl
sub
ins
push
xor
adc
fs
mov
pop
mov
mov
mov
ret
(bad)
push
outs
xor
cs
jmp
jae
scas
stc
mov
mov
or
lods
pushf
add
popf
mov
out
xor
mov
cmc
cwde
jbe
ds
jecxz
aaa
mov
mov
push
pop
in
sbb
jge
xor
inc
in
lods
(bad)
je
cli
(bad)
(bad)
xor
jae
hlt
xchg
jnp
or
or
inc
leave
adc
or
cmp
rol
inc
shr
dec
sar
and
mov
pop
or
daa
mov
xchg
adc
push
in
dec
retf
fisub
imul
ret
push
mov
aaa
ror
mov
jb
out
mov
mov
xor
sbb
rdmsr
mov
xchg
mov
cmp
pop
sbb
out
push
xor
pop
xor
scas
ret
pop
inc
mov
jae
cmp
jmp
das
mov
mov
push
aaa
push
fld
adc
sub
mov
popa
das
stos
jmp
dec
repnz
jl
sub
repz
scas
repz
xor
shr
jmp
push
fwait
pop
test
retf
and
scas
lea
mov
and
xlat
test
into
pop
mov
ins
pop
outs
inc
loope
js
stos
add
icebp
inc
pop
ins
mov
jg
push
je
or
(bad)
and
or
adc
fisttp
dec
neg
in
add
mov
jle
ss
cmp
call
mov
into
data16
outs
jge
dec
mov
pop
xchg
jmp
loop
or
inc
or
xchg
jp
aad
jne
xchg
push
push
dec
aad
popa
(bad)
fistp
jmp
cdq
inc
cli
leave
dec
adc
inc
cmp
mov
push
ror
es
sbb
sti
test
jp
test
mov
xchg
call
test
add
sub
mov
push
imul
test
and
xchg
cmp
pusha
or
or
pop
mov
ins
cdq
rcpps
imul
mov
xor
adc
imul
or
jmp
call
jg
inc
es
or
mov
ja
jno
pop
jecxz
mov
jg
call
and
fcomp
pop
lea
retf
scas
xor
mov
inc
mov
or
pop
mov
dec
and
add
inc
xor
cmp
xchg
dec
dec
mov
fwait
and
and
gs
jle
call
push
sbb
test
mov
pushf
cmp
or
jae
pop
jmp
rcl
movs
aas
cmp
leave
inc
into
mov
xor
(bad)
in
into
test
mov
stos
xlat
mov
test
outs
inc
std
or
int
int3
jo
aad
xor
fimul
cs
jns
and
dec
(bad)
cmps
icebp
jmp
jb
mov
stos
mov
cld
in
sbb
(bad)
out
stos
jge
shl
cdq
in
xchg
add
cmps
add
mov
les
mov
xchg
pop
adc
loope
xchg
sbb
ffree
nop
xchg
cs
dec
pop
sahf
jg
pop
cld
scas
fwait
inc
xchg
add
je
(bad)
(bad)
mov
int3
dec
popa
outs
stc
psubb
mov
or
adc
sar
or
repnz
sbb
call
push
shr
mov
or
push
adc
inc
icebp
dec
and
fsubr
hlt
aaa
push
shl
pop
or
mov
mov
push
fadd
pop
sub
popa
mov
mov
imul
stos
push
dec
iret
pop
xchg
jmp
test
pop
mov
mov
sub
int
jl
outs
aam
js
retf
lods
adc
xor
add
xchg
es
xor
jecxz
movs
xor
xchg
cmps
and
sbb
cmp
pop
mov
or
xchg
pop
call
xchg
adc
gs
mov
push
mov
hlt
and
(bad)
leave
dec
clc
add
retf
mov
inc
gs
mov
and
jecxz
jnp
mov
movs
xchg
xchg
stos
dec
scas
arpl
fsubr
sti
sbb
xchg
adc
xor
mov
pop
into
call
sub
adc
dec
mov
jle
test
imul
push
mov
adc
xchg
or
pop
vpmaxsw
imul
ss
jo
sbb
mov
mov
call
mov
loop
push
mov
cmp
and
sbb
dec
frstor
call
jnp
mov
xor
mov
rcr
popf
sti
sahf
fidivr
clc
mov
xchg
ror
pop
and
aas
fwait
jecxz
loope
add
cli
div
(bad)
mov
imul
xchg
test
push
pop
div
cmp
sub
add
imul
cmp
loope
add
jp
mov
icebp
mov
cdq
shl
sbb
cli
gs
sub
inc
dec
in
jmp
and
inc
or
sub
rcr
gs
mov
cmp
xchg
test
int3
aaa
xor
loop
inc
pop
and
mov
push
add
xlat
std
or
les
inc
setae
or
push
(bad)
mov
movs
popf
mov
mov
stc
stos
adc
pop
mov
mov
sbb
cmps
pusha
les
in
mov
arpl
mov
js
pop
sbb
mov
scas
mov
xchg
sbb
mov
emms
push
stos
lods
push
fistp
dec
push
xchg
lahf
je
stos
xor
xlat
imul
std
cmp
(bad)
ds
mov
mov
jnp
and
jnp
xor
pop
add
stc
es
inc
pushf
mov
imul
and
push
repnz
jno
movs
addr16
enter
sub
sbb
adc
daa
add
popa
pop
pop
sbb
push
jae
stos
xor
les
jg
lds
push
call
mov
(bad)
cmp
xchg
jne
inc
mov
sub
lock
dec
loopne
retf
jbe
sbb
ds
(bad)
fld
inc
call
xchg
out
call
movs
clc
outs
icebp
inc
sbb
pop
inc
aam
test
jle
repz
and
bound
xor
out
pop
add
sub
xchg
xor
mov
sbb
xchg
enter
pop
cmp
and
cwde
icebp
add
je
test
icebp
fstp
sti
sub
and
jecxz
and
fmul
aaa
jo
xor
or
fstp
call
sub
mov
push
or
fbstp
mov
dec
pop
push
push
xchg
sbb
dec
imul
cwde
call
mov
sti
and
adc
mul
cli
adc
or
ja
push
xchg
sub
cli
push
daa
dec
dec
xor
fbstp
jle
sbb
xchg
(bad)
xchg
aaa
jmp
in
out
jo
imul
retf
ja
xor
call
jmp
xor
(bad)
pop
push
mov
xor
mov
jge
push
pop
daa
pop
stos
jge
clc
ret
in
in
pmullw
inc
push
icebp
jg
(bad)
cmps
xchg
dec
fidivr
lahf
mov
push
and
cdq
mov
jl
xor
hlt
ror
push
call
(bad)
shr
pop
out
sbb
add
push
(bad)
popf
mov
xor
xchg
cmps
test
movs
fdiv
out
(bad)
or
sbb
into
pop
es
lahf
pop
lods
pop
ficomp
mov
push
mov
fld
mov
loop
pop
push
fs
call
pop
(bad)
es
pop
xchg
outs
cwde
add
hlt
mov
mov
cmc
(bad)
cdq
sahf
arpl
dec
sbb
lods
xchg
jns
imul
not
adc
sub
mov
pop
call
pop
add
mov
js
movs
jno
mov
cmc
ins
data16
icebp
adc
js
xchg
aad
data16
outs
icebp
xor
push
sbb
nop
xor
or
fadd
xor
arpl
cmc
iret
jmp
mov
(bad)
cmp
int3
mov
jg
mov
or
jae
mov
sbb
inc
and
mov
mov
das
adc
xor
adc
mov
push
(bad)
clc
imul
xchg
add
xor
dec
cld
jp
sbb
add
sbb
dec
popf
aad
call
les
mov
dec
aas
pop
cmp
jmp
ror
sahf
cmp
les
sahf
jp
sbb
clc
push
cld
xor
std
and
push
add
push
sub
cmp
xor
mov
ds
cmp
jne
les
icebp
aas
loop
lahf
sub
xchg
mov
cdq
and
lods
clc
mov
aas
ror
aad
pop
pop
pushf
mov
stos
sbb
aaa
dec
sbb
xor
lods
mov
add
mov
in
fdiv
mov
ja
lods
mov
cdq
outs
add
push
dec
stc
sbb
dec
jns
xchg
mov
add
fsubr
pop
push
push
sbb
inc
pop
das
push
pop
push
sbb
movs
mov
mov
adc
loop
mov
cdq
addr16
push
jo
shl
jmp
add
(bad)
ds
popf
les
inc
xchg
fwait
inc
xor
push
pop
cmps
in
(bad)
sbb
or
cmp
add
mov
les
mov
stos
mov
fld
sub
dec
andnps
fs
sbb
push
xchg
addr16
sbb
ins
test
stos
ficomp
mov
loope
std
loopne
popf
jp
fdivp
js
cmps
lods
push
das
and
test
fisubr
xor
jns
loop
mov
stos
add
ins
and
aaa
data16
pop
mov
push
(bad)
inc
out
push
mov
in
or
scas
mov
outs
cmp
addr16
gs
shl
imul
inc
fndisi(8087
fcom
test
add
xor
sbb
loope
in
out
(bad)
or
adc
sub
add
pop
mov
xchg
outs
inc
sbb
movs
pop
test
stc
pop
sbb
xchg
scas
jno
popf
and
mov
mov
xor
dec
into
cmp
rol
xchg
movs
mov
jp
inc
cmp
or
das
and
dec
sar
in
fstp
test
or
js
jmp
add
add
cld
jnp
shl
cwde
dec
add
ins
inc
sbb
ja
out
les
lahf
mov
jecxz
mov
jne
popf
jo
cmp
test
test
adc
jg
adc
shl
push
pop
mov
and
mov
cmc
mov
mov
jmp
sbb
mov
pop
fwait
add
cdq
pop
xchg
mov
outs
sub
fisubr
dec
in
aam
dec
mov
in
xchg
or
data16
lahf
test
sbb
adc
daa
sub
pop
mov
(bad)
cmc
arpl
ja
sbb
(bad)
mov
out
inc
fmul
fstp
inc
lds
shl
pusha
pusha
mov
cmp
pop
ins
fwait
push
xlat
lahf
or
mov
test
cld
cmp
call
mov
lds
fnstsw
pushf
adc
fwait
and
pop
jl
or
mov
sbb
dec
ror
jae
in
sbb
push
out
mov
mov
push
cli
mov
sbb
shl
inc
jns
imul
push
lods
aam
retf
mov
dec
push
(bad)
std
ja
pusha
fimul
les
sub
sbb
test
loop
pop
mov
out
and
push
rol
adc
ret
cmps
fidiv
jmp
xchg
xchg
add
pop
cmps
sbb
and
stos
outs
and
popf
mov
fist
mov
cdq
jne
aad
ds
xor
push
dec
push
not
add
cmps
xor
or
ds
mov
cmp
(bad)
push
push
mov
inc
cmc
mov
leave
mov
js
push
jb
mov
dec
repz
jl
xor
xor
push
sti
mov
popf
cmps
not
pop
fadd
je
pmaxub
out
sbb
(bad)
(bad)
push
fmul
inc
(bad)
lea
jmp
enter
or
(bad)
cli
xor
add
xchg
shl
addr16
lea
or
cdq
inc
sub
aad
xchg
jns
inc
xchg
sbb
gs
daa
dec
adc
adc
cmp
add
or
inc
add
cmp
dec
es
shr
and
sbb
(bad)
sbb
cwde
inc
xchg
js
aad
cmp
ins
mov
jno
ins
add
adc
and
add
adc
inc
mov
sbb
outs
cmp
pop
xor
loopne
cld
mov
jno
ret
pop
in
xchg
ds
sbb
out
mov
imul
jecxz
jmp
inc
(bad)
push
jno
xchg
cs
mov
out
in
adc
mov
mov
js
call
bound
add
lea
in
push
dec
add
dec
add
push
jmp
or
test
ins
pusha
leave
ss
cmp
dec
cmp
sbb
sbb
mov
jl
test
stos
scas
ss
mov
mov
stc
lock
(bad)
cmp
xchg
addr16
outs
(bad)
aam
pop
sub
sahf
push
or
(bad)
clc
add
fistp
mov
hlt
jno
bound
int
xchg
mov
pop
or
fdiv
test
mov
retf
cli
mov
mov
out
loope
aad
push
jg
mov
xor
cmp
mov
lock
push
jmp
cli
and
gs
(bad)
jns
inc
push
retf
adc
lods
pusha
pusha
gs
sbb
mov
dec
add
xor
lods
pusha
push
cmp
sbb
mov
sub
push
jp
out
push
arpl
mov
outs
sbb
nop
cmp
int
mov
pop
sbb
in
and
lahf
pop
lock
jnp
jmp
push
add
ret
fwait
mul
xchg
and
nop
cmp
(bad)
sub
inc
test
inc
mov
scas
sub
mov
lds
mov
lea
and
movs
iret
lock
int
inc
add
(bad)
xchg
aam
cld
xor
fld
in
push
xchg
neg
jp
inc
adc
jecxz
in
dec
mov
dec
ins
dec
cmp
jl
xor
push
and
xchg
mov
(bad)
mov
inc
sub
adc
imul
retf
ror
jbe
rol
dec
leave
pop
aam
sbb
icebp
push
pop
loope
mov
xor
and
(bad)
sub
jbe
cmp
cmp
dec
int
and
ror
sbb
mov
(bad)
pop
xor
repnz
dec
ret
loop
mov
loope
push
push
cmp
sub
lds
add
xor
xor
jbe
ss
lds
rcl
inc
cmp
dec
cmp
jle
out
repnz
or
xor
jmp
daa
hlt
pop
lock
fsub
mov
cld
cdq
mov
call
data16
fiadd
fadd
(bad)
fwait
(bad)
pop
popa
cmp
std
inc
stc
adc
push
jle
mov
pop
mov
xchg
pop
push
stc
push
movs
push
push
dec
loope
jnp
loope
fmul
lds
dec
adc
adc
call
mov
int3
mov
popf
mov
mov
ss
xchg
repz
js
jnp
lea
scas
mov
inc
sub
data16
push
sti
pop
mov
sti
hlt
fimul
in
fild
pop
push
xchg
mov
sbb
arpl
mov
or
cmps
mov
sub
xor
mov
arpl
jmp
fidiv
loopne
arpl
pop
mov
push
out
jo
in
into
adc
in
icebp
sti
leave
ret
jno
pushfw
jmp
mov
bound
add
cli
cwde
mov
pop
adc
xchg
add
je
imul
adc
(bad)
mov
or
fdiv
cwde
fistp
fsubr
jge
(bad)
fnstcw
mov
jb
stc
or
stos
repnz
scas
pop
jnp
sub
or
test
jmp
ja
cs
rcl
stc
pop
adc
gs
pop
push
shl
rol
ins
aaa
jl
call
imul
and
sahf
push
(bad)
cmp
inc
xchg
arpl
sahf
add
int3
in
sub
xchg
aaa
sar
and
xchg
fnstcw
outs
sub
ss
dec
inc
dec
adc
xor
loopne
scas
das
and
or
pop
jo
mov
repnz
movs
push
sbb
arpl
in
lds
retf
loop
jp
inc
je
lock
std
aas
data16
fstp
pop
call
mov
adc
retf
sar
sbb
mov
adc
dec
push
and
aas
or
inc
sbb
xor
or
lahf
add
jg
ror
lahf
cld
push
jb
push
movs
out
jno
jns
out
add
(bad)
and
xchg
adc
add
in
fdiv
into
sbb
into
es
dec
mov
xor
xor
in
(bad)
aam
aad
xchg
dec
jge
mov
sbb
xchg
push
jae
loop
les
pusha
ja
mov
and
sub
bound
into
jl
lods
aad
dec
push
inc
mov
xchg
push
popa
ins
ja
cmp
sti
in
cmp
push
xor
add
xor
cmps
or
push
lods
add
(bad)
mov
jo
push
sub
dec
ret
cmp
loopne
sbb
ror
lods
jmp
or
scas
das
pop
call
fstp
movs
adc
pop
in
test
(bad)
jo
dec
push
cmp
cld
dec
loop
addr16
cmc
sbb
jns
lds
loop
scas
mov
aam
shr
aaa
iret
mov
ds
sahf
repnz
jae
mov
test
cmp
sbb
dec
mov
jnp
jmp
in
into
or
aaa
pop
(bad)
repz
inc
leave
int3
pop
loopne
movs
bnd
pop
js
stc
(bad)
hlt
pop
cmc
out
cmp
pop
push
mov
imul
mov
mov
or
lahf
jo
xchg
and
mov
test
xchg
cmp
cmp
xchg
jo
rcr
jl
fwait
sahf
ret
pop
mov
sbb
adc
repnz
inc
sbb
xor
dec
and
xor
cdq
retf
pop
mov
repnz
push
or
mov
into
inc
ror
test
pop
mov
sar
fld
and
in
lods
cdq
test
or
js
js
out
pusha
lods
push
xchg
mov
cmp
mov
(bad)
and
mov
(bad)
in
das
pop
mov
pusha
outs
dec
aas
stos
xor
sbb
xlat
dec
sub
mov
mov
lahf
les
jb
mov
mov
jae
xor
cmp
loop
cmp
inc
push
push
loope
dec
ja
pop
mov
out
jmp
stos
sahf
fbld
inc
xchg
inc
stos
dec
cmps
xor
nop
loopne
(bad)
mov
cs
and
outs
dec
dec
and
pop
jnp
mov
je
inc
add
xchg
xor
fistp
ss
or
add
out
test
and
in
jae
add
adc
pop
std
adc
out
jecxz
push
les
dec
pop
mov
push
fld
out
lock
icebp
or
(bad)
jl
xor
lds
bnd
add
cmps
xchg
pop
out
add
pop
cmp
test
sub
pop
shl
jmp
or
mov
jl
mov
popf
pop
ja
(bad)
mov
repnz
mov
sub
aas
or
call
jecxz
sahf
sbb
mov
sbb
sub
sbb
add
mov
cmp
xchg
inc
sub
xor
push
dec
or
mov
das
ret
add
cs
adc
gs
xor
dec
nop
clc
pop
in
inc
icebp
ret
rcl
popf
mov
jo
adc
pop
xlat
daa
sub
test
stos
popf
cli
or
jle
test
xchg
fisttp
test
mov
xchg
mov
in
pop
mov
cmp
gs
sti
mov
mov
push
sbb
dec
ja
movs
mov
adc
ja
pop
int
sub
(bad)
sub
mov
mov
and
dec
xlat
ins
cmp
inc
mov
repnz
(bad)
mov
inc
ret
pushf
mov
and
jb
in
and
dec
xchg
std
sbb
je
and
inc
push
(bad)
(bad)
imul
loope
mov
daa
mov
rcl
inc
sub
xor
xchg
stos
dec
cmps
inc
mov
push
pop
sbb
sub
inc
aas
pop
cmp
popf
pusha
lods
xadd
xchg
data16
dec
add
pop
and
sub
push
sub
dec
dec
push
push
sub
add
jbe
adc
xchg
sbb
sbb
out
enter
call
(bad)
jmp
enter
and
movs
xchg
neg
das
mov
in
xor
jae
jge
mov
les
loopne
pop
leave
push
sahf
mov
dec
gs
popf
pop
xor
mov
call
inc
adc
aam
mov
and
leave
mov
xchg
movs
and
jle
jns
add
sbb
xchg
stos
add
(bad)
in
jo
jl
or
(bad)
push
loopne
and
or
xor
mov
stos
inc
stc
daa
inc
jmp
pop
mov
or
mov
sbb
in
outs
aad
add
out
xchg
mov
dec
mov
ja
jecxz
jnp
mov
xchg
push
test
es
fldcw
mov
cmp
push
retf
dec
mov
sub
stc
mov
sti
popa
test
sbb
jb
cld
popf
mov
int3
mov
cmp
stos
ret
std
push
je
cmp
jmp
retf
not
adc
pop
(bad)
cmp
cmp
jno
xor
shl
xlat
adc
push
xor
lods
addr16
aam
je
mov
icebp
mov
dec
push
ds
or
sbb
aad
adc
fistp
test
push
call
dec
adc
sbb
aam
lea
xor
xchg
and
jp
aam
arpl
xor
cmc
pop
sbb
adc
es
mov
lahf
stc
mov
push
fadd
fdiv
push
jo
inc
xchg
jb
cmp
fist
and
mov
cmp
jo
test
jle
mov
ret
push
fcmovnbe
and
in
add
adc
mov
jge
int
sti
dec
retf
dec
test
pop
pop
loope
fistp
sub
cmp
loop
test
iret
mov
icebp
mov
add
call
add
scas
ja
add
sub
mov
int3
leave
inc
mov
cmp
pushf
xchg
in
xchg
fisttp
cmp
(bad)
push
adc
aam
jle
jb
clc
ds
and
mov
xchg
ss
xor
mov
out
mov
mov
loope
retf
ret
retf
fstp
xchg
sub
icebp
fistp
xchg
push
mov
inc
ins
movs
mov
out
(bad)
daa
mov
jae
mov
leave
mov
push
outs
test
cs
clc
js
sub
retf
push
popf
and
adc
add
loop
repz
sub
mov
test
cmc
xchg
adc
jecxz
push
hlt
rcl
sub
mov
xor
stos
xchg
mov
(bad)
call
pop
mov
inc
cs
sar
pushf
(bad)
leave
outs
push
jno
repnz
int3
pop
fcmovnu
inc
std
popf
test
in
xlat
mov
gs
push
mov
xchg
push
rcl
sbb
pushf
(bad)
in
test
pop
(bad)
(bad)
gs
pop
in
inc
loope
das
adc
jmp
les
jp
mov
adc
sti
xchg
movs
aaa
sbb
aas
push
(bad)
ins
and
in
(bad)
pusha
das
or
leave
push
and
ror
mov
mov
inc
push
int3
dec
sub
jbe
enter
xor
or
icebp
and
xchg
lods
stos
mov
(bad)
adc
iret
fcomp
fistp
call
dec
jns
and
xchg
pop
xor
push
dec
push
scas
pop
add
push
outs
dec
(bad)
fisttp
mov
rol
xor
pop
ins
(bad)
pop
push
mov
cmp
aas
xchg
clc
jl
scas
(bad)
dec
lea
pop
dec
adc
adc
add
stos
repnz
xor
xchg
sub
mov
es
into
call
xchg
xor
mov
rcr
adc
(bad)
loope
js
mov
sub
sbb
or
inc
mov
sti
or
push
fsubr
push
cld
cmp
pop
jmp
mov
out
in
pusha
or
mov
arpl
sub
lea
mov
rcl
lock
push
mov
test
ja
add
mov
sub
adc
jecxz
hlt
inc
jg
je
xchg
xor
push
jno
jp
xchg
inc
xchg
int3
test
stc
add
pop
push
les
dec
test
sub
nop
mov
outs
mov
or
mov
enter
stc
movs
and
xchg
cli
mov
push
push
adc
xchg
jmp
enter
into
or
stos
xor
rcr
je
sti
cmps
scas
jecxz
int3
cdq
div
mov
push
xchg
mov
icebp
out
pop
sub
xchg
push
int
add
inc
ror
and
sub
push
call
adc
jae
jo
dec
xchg
pop
inc
and
pusha
mov
jb
aas
cmps
aad
mov
sahf
xchg
cmp
push
hlt
lea
sub
push
lahf
mov
retf
push
mov
adc
mov
test
mov
popa
cwde
fwait
ins
dec
and
cmp
cmps
not
adc
std
fst
aas
jmp
std
(bad)
xor
add
test
scas
icebp
test
out
and
push
pushw
fidivr
sbb
pop
ds
mov
dec
xor
inc
(bad)
lods
sub
in
inc
pop
fdivr
test
iret
inc
rcl
sbb
vpmacssdd
dec
fnstsw
lods
popf
int
imul
xor
sahf
pop
out
push
jmp
jge
pop
mov
dec
jbe
sbb
push
pop
push
sub
pop
cmc
stc
out
add
mov
mov
pop
or
fwait
mov
data16
push
dec
push
call
xor
push
push
and
fdivr
mov
mov
int3
sub
ret
mov
mov
stc
cmp
mov
movs
inc
mov
jmp
mov
sub
test
cmp
imul
outs
inc
mov
addr16
call
mov
lahf
cmp
arpl
fdiv
jns
sub
pop
imul
cmp
pop
dec
bound
mov
mov
pop
imul
les
mov
(bad)
fnstenv
neg
idiv
lods
cmp
sbb
div
in
out
out
jbe
dec
lea
scas
cs
push
cmp
or
jnp
rcl
mov
(bad)
loope
push
jg
aaa
and
jl
das
cmp
xchg
mov
xor
ret
inc
in
arpl
mov
rol
sbb
sbb
cmp
jo
(bad)
xchg
aam
(bad)
(bad)
loopne
jne
ins
cld
xchg
pusha
call
or
adc
sar
test
or
jg
xchg
fcomp
addr16
and
and
sub
test
sbb
sysexit
push
xor
inc
xor
mov
add
pop
mov
push
jg
inc
lock
jb
add
(bad)
aam
ror
psubw
xchg
sub
addr16
jo
and
out
(bad)
add
clc
push
xchg
cmps
push
fcmovnb
clc
test
sti
pop
add
std
sub
arpl
pushf
jge
hlt
sbb
add
mov
jbe
dec
iret
dec
pop
add
ss
mov
test
push
xor
in
pop
mov
pop
adc
gs
call
js
sub
or
lds
aaa
loope
inc
fistp
sbb
push
push
cmp
or
call
data16
out
adc
stos
jecxz
push
fcomp
mov
dec
test
(bad)
(bad)
xchg
or
pop
push
push
pop
adc
dec
ret
lods
(bad)
adc
ins
push
or
cmp
xchg
stos
push
out
adc
clc
loopne
inc
pop
pop
fwait
js
loope
fisubr
jmp
cli
and
dec
cmc
add
xor
ins
push
and
stc
push
mov
add
(bad)
cmc
icebp
push
pusha
sbb
xor
xchg
and
xchg
iret
xor
adc
fld
addr16
xor
push
cdq
lods
shr
sub
pop
cmc
xlat
pop
push
mov
out
sub
xor
jae
xor
retf
ins
and
call
popf
pop
mov
dec
mov
div
mov
or
lods
inc
shl
or
and
inc
mov
mov
or
xlat
out
cli
or
sub
lods
outs
clc
in
bound
fdivr
hlt
mov
jecxz
test
jmp
loope
lds
retf
or
jae
mov
loop
xchg
jge
inc
cmp
jo
dec
aaa
into
jecxz
sbb
pop
fld
fucomi
push
pop
arpl
mov
test
sbb
imul
sahf
(bad)
or
fnstcw
cmps
test
cs
jno
not
je
jge
pop
in
loopne
ins
push
xchg
mov
fdivr
xor
(bad)
nop
fstp
fwait
jb
(bad)
cmp
retf
(bad)
push
jl
and
xchg
pop
repnz
xchg
adc
in
jbe
fsubr
leave
sub
sub
or
scas
mov
mov
cmp
nop
sbb
sbb
mov
xor
sub
cmp
xor
pop
pushf
mov
sub
aad
cli
or
ja
xor
adc
jge
push
sahf
(bad)
scas
mov
mov
inc
xor
inc
xor
add
fcom
repnz
fidiv
mov
adc
add
cwde
xor
add
lods
jg
ins
mov
jge
popf
mov
(bad)
enter
mov
out
add
adc
das
jp
mov
pop
jp
cmp
es
in
jp
repnz
out
adc
cmp
aas
popf
sbb
xchg
pop
pusha
mov
adc
sbb
xchg
ud0
clc
pop
pushf
mov
pushf
adc
mov
pusha
sub
call
push
sbb
mov
outs
(bad)
daa
mov
arpl
dec
sub
aaa
dec
mov
imul
mov
xchg
pop
jo
jmp
movs
out
in
dec
cmp
adc
into
fst
(bad)
jb
mov
imul
mov
push
sbb
pop
adc
pushf
rol
mov
mov
sub
int
and
mov
mov
test
and
xchg
cdq
shr
dec
adc
xor
mov
inc
(bad)
mov
sbb
test
(bad)
add
std
cwde
and
fyl2xp1
fwait
sbb
adc
and
xchg
sti
loope
call
mov
in
push
cmp
movs
xchg
out
int3
mov
imul
xchg
jge
sub
outs
mov
or
or
dec
(bad)
fisttp
mov
mov
into
mov
in
mov
dec
ja
(bad)
out
jmp
push
popf
mov
popf
test
fbstp
ja
ss
outs
mov
icebp
and
mov
mov
test
mov
test
mov
aas
outs
int
fild
fnstenv
test
stos
int3
sar
lds
dec
mov
cdq
adc
add
outs
ret
test
sbb
(bad)
add
outs
addr16
mov
cli
inc
cs
enter
imul
mov
cmp
and
inc
fisub
leave
inc
and
xchg
shl
retf
cli
call
sub
sub
pushf
push
shl
jge
or
pop
fimul
std
mov
fstp
cmps
jne
mov
not
or
fbstp
ja
pop
xchg
neg
xchg
loope
jb
sub
mov
push
and
sbb
mov
dec
enter
sbb
push
je
push
aad
pop
dec
rcr
int
cmp
(bad)
mov
jle
jle
pushw
retf
sub
adc
xchg
jb
lea
inc
icebp
fdiv
mov
aad
jne
jge
mov
mov
lods
(bad)
rcr
and
aad
add
enter
dec
in
test
nop
popf
jp
ds
mov
jle
sub
pop
pop
and
mov
or
das
dec
adc
int3
xor
movs
push
xor
xchg
scas
imul
push
sub
xchg
mov
sbb
test
test
sub
fiadd
cmp
je
(bad)
sub
lods
ss
(bad)
ret
add
imul
push
sahf
ins
push
xor
cmp
sahf
xor
movs
repz
mov
in
dec
mov
or
jl
push
in
add
sub
mov
mov
xchg
ins
lds
pop
cs
and
dec
and
imul
(bad)
pushf
sub
xchg
in
adc
cs
pop
mov
sbb
iret
mov
test
retf
scas
xlat
dec
fnstenv
or
int3
in
fbld
push
or
xor
xor
js
and
test
addr16
fidivr
and
fiadd
mov
xlat
inc
mov
ret
mov
pusha
pop
sbb
enter
jp
xchg
lods
lea
test
out
jns
into
pop
shl
pop
fwait
push
mov
outs
or
ins
or
mov
add
dec
test
test
xor
test
ins
and
or
xor
in
sahf
sbb
sub
push
cmp
add
and
mov
sahf
fiadd
repnz
cmps
xchg
xchg
test
xchg
add
mov
out
cmp
popf
add
idiv
repz
inc
pop
imul
jmp
push
loopne
jl
mov
clc
push
mov
and
jl
xor
add
dec
cmp
sub
ficomp
push
ror
adc
jp
cld
push
mov
xor
xchg
dec
loop
sahf
inc
pop
stc
fs
aad
add
jne
movs
stc
ins
dec
add
pop
pusha
cmp
js
loope
call
das
lods
je
inc
adc
push
scas
rol
add
test
test
(bad)
push
inc
inc
xor
jnp
pop
mov
mov
xchg
das
dec
dec
(bad)
mov
adc
pop
pop
dec
fs
xchg
xchg
xor
cmps
push
xchg
sbb
xor
pop
mov
jmp
retf
(bad)
outs
adc
fstp
movs
aas
jecxz
sbb
xchg
idiv
sbb
imul
fistp
pop
jnp
fs
add
call
adc
in
and
stc
push
mov
sub
or
stos
out
sti
cld
cli
add
addr16
xlat
in
in
xchg
add
ds
(bad)
lds
not
fadd
xchg
push
add
in
das
aam
or
push
outs
mov
inc
(bad)
fbld
(bad)
sbb
into
mov
in
cmp
and
mul
dec
mov
xor
xor
fst
retf
lock
mov
sub
das
adc
inc
dec
ins
add
aad
js
inc
cmps
rcl
mov
fnsave
and
lahf
sub
sbb
std
and
mov
fucomip
mov
pop
adc
sar
adc
mov
sub
cmp
push
sub
ret
mov
shl
shl
mov
lods
mov
dec
mov
inc
sahf
in
jnp
ds
loope
adc
(bad)
enter
and
call
into
scas
call
loop
retf
xchg
test
push
inc
das
sbb
pop
sub
inc
lds
retf
loope
aad
xchg
inc
and
push
pop
lods
and
pop
out
dec
out
(bad)
dec
xchg
xlat
mov
jl
outs
imul
mov
push
pop
fstp
jbe
nop
sub
data16
gs
dec
es
loopne
fistp
pop
cmp
sbb
pop
aad
lods
inc
test
not
pop
dec
xor
jg
sub
jns
jns
mov
popa
ins
scas
test
addr16
sub
in
mov
mov
add
ss
jmp
les
cmp
(bad)
lods
xchg
add
clc
fsubr
mov
call
mov
sbb
aas
je
fistp
pop
jp
push
je
(bad)
jl
add
push
and
outs
test
icebp
mov
test
fnstcw
mov
sbb
cs
xchg
inc
sti
inc
out
cmp
dec
sub
pop
xor
js
or
rcl
out
xchg
out
outs
push
mov
or
and
je
sbb
es
ror
sbb
xor
mov
mov
nop
repz
sahf
or
movs
xchg
pop
in
mov
dec
sub
clc
add
movs
jmp
stos
mov
mov
jmp
mul
outs
outs
push
fs
dec
and
dec
lds
mov
cs
add
test
cmp
(bad)
shl
xchg
xchg
and
xchg
jle
push
cdq
jmp
dec
iret
(bad)
fcmovb
dec
mov
leave
adc
pop
in
sar
mov
out
fld
cmp
mov
into
pop
scas
add
pop
rcl
push
push
cld
mov
and
push
in
mov
js
inc
mov
retf
pushf
cmc
sub
and
js
add
push
and
xchg
inc
loope
enter
les
adc
mov
mov
pusha
push
std
jbe
pop
test
lock
pop
xchg
sbb
xor
test
mov
retf
fsub
mov
pop
jb
push
lock
mov
inc
inc
pop
sbb
dec
stc
jle
xchg
add
push
stos
daa
push
jmp
sbb
sti
outs
xor
gs
test
dec
fcmovne
inc
ins
push
mov
xchg
js
sti
data16
lods
cmp
jp
mov
mov
aas
in
xchg
xlat
jns
gs
dec
inc
and
pop
sub
int
jmp
adc
dec
repz
out
inc
jle
cld
xor
(bad)
add
cmp
push
test
add
fadd
stos
movs
fs
jne
jl
lods
xor
jmp
cmp
ja
jae
mov
inc
adc
dec
xchg
xchg
scas
jae
jno
int3
cmp
push
sbb
mov
push
fisttp
popf
cmp
inc
dec
mov
xchg
ret
push
or
pop
inc
jnp
fdiv
dec
or
push
out
ja
dec
pop
out
enter
or
push
mov
pop
adc
fnsave
test
xchg
jne
call
aas
and
and
(bad)
cmps
jmp
inc
xor
fldenv
cmps
scas
enter
sub
std
dec
hlt
push
(bad)
repz
xor
pop
jmp
push
add
leave
or
pop
in
and
cmp
mov
je
adc
sbb
push
shl
mov
fmul
jg
add
aas
jmp
test
fdivr
pop
and
inc
or
retf
adc
or
and
sahf
jg
xchg
repnz
in
add
aad
mov
dec
cmp
cmp
jg
xchg
int
cmp
xor
ss
mov
mov
dec
leave
mov
ror
xor
ja
fdiv
mov
out
cmps
and
and
call
mov
icebp
jae
sub
outs
pop
add
shl
and
ret
fs
sbb
xor
xchg
ror
jnp
pop
xchg
push
sub
js
aad
pop
adc
add
xchg
test
outs
aad
jmp
nop
outs
fistp
mov
ss
pop
pop
ja
xor
movs
pop
inc
in
sbb
dec
jl
data16
pop
or
and
fadd
add
in
push
stos
into
in
ret
adc
ret
jnp
sahf
imul
enter
repz
enterw
sar
aaa
adc
sub
test
sub
bound
std
xchg
cmc
mov
pusha
ret
xchg
and
adc
mov
imul
push
and
popaw
inc
sbb
inc
mov
push
stc
xchg
imul
scas
push
push
imul
pusha
imul
icebp
out
pop
xor
les
mov
push
stos
movs
std
xchg
std
sbb
or
mov
data16
or
jnp
adc
ins
enter
sar
xor
aaa
mov
jae
fadd
adc
addr16
xor
xchg
mov
sub
(bad)
sbb
fdivrp
jns
psllq
and
xchg
adc
or
in
inc
ds
clc
push
cdq
pop
dec
in
mov
sub
sahf
mov
ss
cmp
inc
cmp
add
mov
pushf
sbb
int
shl
pop
pop
mov
mov
rcr
xchg
out
push
mov
cmps
mov
cmc
jae
(bad)
jne
aad
in
push
and
leave
stos
add
mov
std
sbb
or
mov
scas
xor
mov
xor
inc
movs
sub
inc
dec
or
test
es
mov
in
inc
adc
(bad)
imul
jb
lods
jnp
dec
jl
pop
adc
lods
sbb
push
add
mov
(bad)
lock
loop
inc
sbb
xor
dec
mov
adc
jmp
mov
lds
into
ins
sub
mov
mov
adc
xlat
jnp
mov
lea
cmps
jae
mov
clc
mov
fisub
loop
push
shl
sub
dec
neg
xlat
pop
push
rol
hlt
cmps
xchg
xor
inc
push
leave
add
repnz
mov
das
xor
mov
lds
icebp
or
movs
aam
leave
(bad)
in
cdq
push
or
xchg
mov
dec
pop
int3
xor
movs
jo
dec
xchg
das
shr
inc
jg
stos
ret
xchg
jae
(bad)
or
call
adc
xor
mov
cmp
js
fnstenv
xchg
bound
ss
push
lods
rcl
(bad)
sub
mov
push
xor
mov
cwde
call
add
push
mov
enterw
jecxz
jbe
in
jne
mul
std
test
ss
push
in
mov
mov
sar
outs
addr16
inc
test
test
out
mov
add
jns
mov
mov
mov
sahf
and
xor
or
jbe
int
mov
fdivp
dec
rol
xchg
jge
push
stc
stos
repz
cmps
nop
repz
sbb
push
push
sub
adc
or
(bad)
not
dec
jg
mov
lock
ja
fmul
push
jp
sbb
mov
dec
mov
iret
popf
lods
mov
gs
sbb
sti
fisttp
cmc
jmp
out
pusha
fnsetpm(287
cdq
fwait
sub
and
out
dec
mov
outs
call
jb
sub
cmps
pop
shr
and
inc
sahf
rol
sahf
mov
jle
jmp
sub
and
or
nop
jae
jl
mov
push
mov
ja
mov
leave
push
inc
inc
mov
es
adc
sub
add
cdq
or
mov
pop
clc
outs
nop
mov
sub
inc
movs
addr16
nop
xlat
repnz
jmp
loope
push
mov
adc
imul
enter
jecxz
fwait
xor
dec
and
sub
addr16
push
cli
jbe
call
mov
mov
and
je
add
push
js
push
jns
sub
mov
loopne
rol
in
shl
retf
mov
sbb
inc
xor
and
lock
lods
mov
cmps
adc
xchg
jb
iret
dec
or
jge
das
xchg
xchg
ja
pop
mov
push
ds
nop
mov
dec
xchg
(bad)
inc
xchg
pop
lods
sub
inc
push
xlat
push
dec
outs
mov
dec
jbe
push
in
js
bound
popa
and
push
mov
inc
sbb
add
xor
push
ret
pop
(bad)
adc
clc
inc
iret
int3
sub
imul
sub
jne
push
sbb
mov
add
push
fidivr
mov
pop
fbstp
out
imul
dec
mov
pusha
out
mov
sub
ret
or
scas
adc
mov
sub
mov
sbb
add
outs
jne
popa
test
cs
pop
mov
pop
ss
mov
repnz
adc
mov
out
push
int
retf
test
mov
and
mov
retf
cs
push
stos
rcr
shl
sti
int3
aas
fisubr
dec
shl
sbb
rcl
inc
dec
adc
mov
dec
inc
enter
in
stos
jmp
ds
movhps
pop
xchg
cmc
push
adc
pop
test
scas
mov
les
mov
int
shl
jecxz
mov
pop
mov
xor
sub
test
test
or
mov
repnz
add
es
or
mov
pop
cwde
xchg
test
rcr
push
lea
int
and
aaa
pop
jle
rol
dec
shl
jg
cmp
cmps
jbe
repnz
test
sbb
sbb
mov
push
scas
fsubr
fstp
int3
xor
cmps
pop
jno
pop
jne
fisttp
xor
push
jmp
cld
lahf
in
int3
das
pop
dec
(bad)
js
inc
jne
mov
gs
scas
add
xchg
das
mov
dec
ret
adc
and
scas
fsubr
sbb
inc
fild
pop
fld
inc
bound
jmp
pop
or
jmp
hlt
sub
mov
nop
add
in
sar
jl
mov
stos
fnstcw
jecxz
imul
mov
add
push
jmp
and
inc
sub
imul
inc
pop
adc
dec
pusha
xchg
mov
mov
dec
loop
imul
push
popf
imul
push
out
jl
push
mov
lock
clc
test
or
ret
retf
test
outs
sub
push
fsub
cmps
dec
sbb
mov
mov
add
pop
cli
inc
mov
push
bound
cmp
mov
jmp
retf
stos
jl
sub
test
jl
loop
inc
lds
adc
xor
xor
xchg
mov
arpl
daa
mov
xchg
lds
xor
out
out
call
or
mov
xchg
test
push
pop
call
mov
je
movs
dec
sbb
(bad)
call
jmp
movs
gs
je
sub
neg
fwait
neg
shr
xor
aaa
sub
adc
in
(bad)
fstp
pusha
retf
push
shl
adc
lea
fs
inc
mov
sbb
sub
ret
inc
sub
jae
add
in
(bad)
jae
sub
sub
imul
mov
mov
out
cmps
dec
and
std
int
jl
syscall
add
push
adc
mov
shl
inc
mov
repnz
dec
xor
mov
mov
(bad)
(bad)
mov
xor
not
stos
ret
cwde
fucomp
adc
inc
outs
push
xchg
ret
js
sub
test
daa
sbb
push
fstp
std
sbb
sti
inc
cmp
jno
and
pop
dec
dec
adc
lahf
es
adc
xchg
psubusb
sti
fs
jae
jo
mov
jae
pop
popa
add
dec
mov
out
aad
mov
jno
mov
push
cmps
(bad)
mov
cli
ret
call
push
clc
push
jl
push
add
lea
cmp
movs
or
and
push
mov
les
stos
into
shr
inc
in
pop
sbb
mov
(bad)
inc
shl
sub
xor
pop
ds
test
xchg
lds
(bad)
mov
xor
push
xlat
js
jg
pusha
cli
rol
nop
mov
arpl
xor
sbb
je
adc
sbb
fsub
mov
arpl
mov
jle
adc
jg
pop
xchg
out
rcl
adc
mov
fcom
mov
les
jns
popf
cs
pusha
push
loope
leave
xchg
inc
out
dec
gs
dec
bnd
sub
push
shr
rcl
xchg
mov
js
mov
xchg
sub
jbe
fmul
add
ss
mov
jl
stos
pop
mov
dec
outs
pop
outs
or
sbb
arpl
adc
cld
iret
jp
adc
xchg
jmp
add
or
mov
pop
jmp
add
jbe
imul
or
sub
xchg
cdq
movs
add
gs
aam
lock
xchg
xchg
xor
pusha
dec
enter
push
dec
iret
ror
xchg
push
xchg
dec
mov
and
mov
adc
or
or
(bad)
sbb
jb
and
or
ins
fiadd
pop
xchg
sbb
add
cli
mov
push
pop
aas
jmp
add
out
and
dec
sti
aaa
(bad)
in
out
xor
hlt
add
mov
jge
pop
ror
jno
loope
stos
xchg
mov
fimul
pop
sbb
(bad)
sbb
test
push
xor
xor
add
nop
dec
repnz
dec
movs
es
add
dec
(bad)
xchg
aam
xchg
mov
pop
push
mov
stos
sbb
sbb
(bad)
jmp
adc
jae
push
mov
or
xlat
add
out
repz
jle
cwde
add
mov
push
mov
out
jmp
out
dec
nop
add
mov
xor
add
cmps
fldcw
push
stos
lds
mov
pop
movs
mov
lods
or
ret
or
test
cwde
(bad)
xchg
sbb
ins
push
gs
sahf
sbb
adc
xor
add
aam
cmp
mov
mov
cmp
pop
cmc
loope
jmp
adc
or
sub
fidiv
imul
shl
cmp
retf
mov
ret
cdq
clc
cmp
(bad)
inc
inc
mov
imul
(bad)
push
ret
push
popa
pop
inc
mov
sbb
cmps
push
shr
or
lods
inc
jp
scas
mov
or
xchg
jae
(bad)
repz
jmp
pop
xchg
jo
pop
add
xor
push
rol
lds
neg
sub
adc
adc
xor
jmp
cmp
retf
xor
sti
jl
sahf
test
sbb
aad
repz
ret
pop
hlt
sbb
sahf
jle
jae
cmp
jne
jns
lods
fistp
xor
loop
stc
call
movs
xchg
pop
mov
dec
jmp
lods
out
mov
sbb
pop
sub
push
jge
arpl
dec
cmp
retf
rcl
add
ins
dec
push
cmp
cmc
movs
bound
scas
arpl
xchg
jecxz
cmp
mov
(bad)
rcl
cmp
sti
outs
dec
or
jp
inc
inc
pop
inc
call
jl
jg
into
outs
inc
jae
aaa
push
mov
data16
rdmsr
inc
retf
cmp
xchg
in
outs
in
wbinvd
ins
fisubr
push
xchg
das
shl
push
nop
iret
aaa
imul
fidivr
scas
cmp
stc
mov
loop
sub
and
push
(bad)
std
xchg
adc
add
push
xchg
push
movs
pusha
pusha
mov
mov
cmp
push
inc
mov
jge
sub
jo
xchg
adc
out
imul
add
pop
or
enter
pop
arpl
int
into
mov
rcl
aam
popa
xchg
rol
mov
movs
adc
or
call
dec
and
dec
jbe
fsub
xchg
ds
jecxz
lock
addr16
shl
lock
sbb
lahf
fstp
dec
test
and
(bad)
imul
xor
out
adc
lock
mov
nop
pop
stos
out
jg
pop
in
hlt
leave
add
pop
fimul
push
jno
addr16
and
jbe
jecxz
adc
test
out
cmp
mov
mov
call
addr16
inc
jp
imul
fadd
jb
mov
or
adc
jbe
mov
js
in
pop
je
sub
hlt
push
call
test
pop
xchg
sub
les
mov
lahf
into
sbb
shl
dec
add
add
inc
inc
jp
mov
cwde
push
jecxz
jo
sbb
scas
sbb
sub
pop
push
out
test
hlt
sbb
mov
mov
loop
xor
setbe
daa
pop
adc
(bad)
fidivr
xchg
cli
pushf
and
call
lds
adc
loope
xor
in
dec
sub
xchg
call
into
jmp
adc
sbb
or
sti
sbb
and
push
mov
lods
(bad)
adc
lds
aas
mov
movs
jb
sbb
lods
xchg
push
rcl
outs
sahf
dec
outs
mov
sahf
mov
push
addr16
sbb
pop
xchg
adc
loope
push
(bad)
push
ss
xchg
mov
out
test
fst
(bad)
cmp
mov
(bad)
jl
mov
sub
cmp
fmul
scas
mov
jo
dec
or
outs
or
(bad)
cmp
xchg
and
nop
stc
pop
adc
inc
pop
mov
lods
and
dec
mov
gs
fistp
mov
push
fsub
stos
jl
daa
aaa
pop
jecxz
fs
fwait
nop
dec
int
cld
mov
mov
and
jne
pop
fcom
push
enter
push
dec
leave
add
(bad)
les
mov
mov
or
pop
push
jae
retf
pop
mov
daa
cmp
mov
add
icebp
lods
inc
loopne
pop
les
or
mov
nop
cdq
add
push
(bad)
xchg
lds
or
jnp
add
pop
pop
or
lahf
xor
in
xchg
jge
gs
sub
push
rcl
sahf
jo
stos
sbb
(bad)
test
(bad)
mov
adc
mov
in
sbb
imul
sahf
psllq
pop
dec
dec
sub
push
jg
adc
mov
mov
sbb
cmps
movs
daa
xchg
jg
mov
ret
in
cmp
inc
inc
pop
mov
dec
fwait
test
loopne
repz
call
and
ss
xchg
dec
ror
pusha
(bad)
loop
or
scas
pop
xor
sbb
pushf
sbb
call
push
lods
cmp
je
and
mov
lock
dec
rol
or
gs
xor
cld
int3
mov
cmps
mov
xchg
(bad)
call
icebp
mov
sbb
fadd
xchg
jecxz
xor
inc
pop
js
mov
leave
shl
stos
pop
jno
pop
sub
jo
imul
or
add
inc
movs
shr
(bad)
fisub
retf
mov
mov
pushf
sbb
stos
fsub
stc
adc
mov
outs
xchg
sub
dec
js
xcrypt-ecb
cmps
lea
mov
(bad)
mov
pop
and
or
(bad)
pop
cmp
cwde
cdq
and
push
push
add
lea
cmp
jno
adc
adc
das
pop
or
mov
(bad)
inc
jno
sub
jecxz
inc
ret
int3
jb
mov
mov
xor
lock
(bad)
mov
cmp
pop
mov
mov
arpl
adc
std
push
push
pushf
jo
ficom
(bad)
arpl
fld
adc
add
inc
lahf
dec
mov
ins
cmp
inc
je
nop
imul
stc
fs
add
sbb
fdivr
popa
in
aaa
cmp
out
(bad)
ror
fsin
xchg
mov
ja
out
xchg
daa
inc
aam
into
pop
movs
jmp
pusha
shr
loopne
stos
or
jp
jo
mov
aaa
cs
jmp
mov
xlat
sahf
jb
(bad)
jg
imul
fisubr
adc
mov
jbe
mov
pop
pop
cmps
adc
cli
xchg
adc
xor
jge
ins
lds
(bad)
jo
mov
lea
mov
movs
add
mov
pop
daa
pushf
pop
dec
xchg
hlt
jle
mov
loopne
call
mov
shl
and
loopne
pushf
in
and
sub
cmc
neg
mov
or
ficom
mov
dec
jp
fmul
mov
not
stos
fcomp
jb
daa
jge
ins
mov
into
repnz
pop
js
sub
sbb
push
ficom
rcr
jbe
cld
pop
push
pop
inc
dec
and
push
jle
or
div
jmp
repnz
sar
push
push
inc
outs
mov
gs
add
pop
iret
jmp
push
and
sub
ret
ja
(bad)
dec
ss
jae
enter
dec
push
sar
sbb
xor
and
jb
int3
dec
ret
into
and
(bad)
jp
pusha
mov
jmp
sbb
jle
dec
jg
sbb
pop
push
call
xchg
daa
movs
add
mov
test
push
jne
(bad)
xlat
jmp
test
cdq
int
(bad)
in
pusha
jbe
jo
jecxz
and
sbb
cmps
inc
xor
fcmove
sbb
pop
xor
idiv
inc
pop
ss
xor
sbb
rcr
pop
les
cmps
scas
aas
neg
jle
fcomp
push
mov
dec
adc
cmp
and
sbb
xchg
popa
stos
sub
sub
popa
gs
mov
out
xor
dec
nop
sub
mov
das
fstp
stos
call
ins
cli
xor
ds
xchg
(bad)
dec
(bad)
fdiv
jb
fwait
adc
push
(bad)
push
call
sbb
stc
mov
enter
fisubr
mov
pop
sbb
daa
cwde
dec
movs
sub
inc
ret
lds
cli
jmp
sub
stc
(bad)
mov
ror
leave
sbb
and
sub
dec
loop
daa
add
sub
shr
push
loope
jo
jb
push
(bad)
mov
fist
xchg
or
outs
ja
push
pusha
scas
inc
lock
popf
fistp
mov
push
mov
and
aad
addr16
sub
(bad)
push
mov
sub
jae
push
cmps
mov
scas
jnp
int3
leave
imul
adc
inc
mov
sub
inc
xchg
jno
or
repz
jbe
inc
repnz
push
inc
mov
xor
and
dec
mov
bound
iret
cwde
popf
cwde
push
aaa
js
call
shl
inc
lahf
aaa
add
xchg
shr
cmp
mov
or
jb
pop
cmp
push
sub
(bad)
xchg
lods
and
call
cmp
fsub
push
jmp
and
aaa
cwde
push
pop
fwait
les
sbb
sub
idiv
retf
adc
mov
xchg
ins
leave
sub
shr
inc
push
mov
pop
loopne
cli
adc
inc
add
jmp
xchg
bound
mov
jecxz
das
js
sti
mov
les
stc
fild
mov
les
neg
rcl
aas
sbb
call
dec
push
pusha
in
pop
pop
clc
push
sbb
pop
cmpps
fsubr
xor
daa
rcr
sti
sub
push
add
jno
jp
dec
loope
pop
jo
pop
out
mov
xlat
mov
stc
cmps
mov
xor
xor
adc
movs
pop
shl
jnp
mov
xchg
addr16
cmp
sub
vphsubbw
mov
mov
mov
sbb
mov
cs
popa
cmp
inc
cmp
push
mov
scas
mov
pop
fild
into
sbb
sub
test
addr16
inc
movs
mov
pop
inc
movs
xchg
popf
ror
dec
jns
inc
dec
mov
int3
imul
scas
imul
xor
pop
or
dec
mul
sub
out
pop
movs
jb
mov
cmc
movs
test
fisttp
das
cdq
add
push
fiadd
mov
push
jge
jo
or
jl
sbb
sar
in
inc
dec
imul
lds
dec
out
and
cmp
jmp
jg
push
mul
lock
in
pop
mov
pop
adc
mov
popa
or
push
mov
cld
aas
jp
push
sbb
shl
inc
or
(bad)
dec
jbe
mov
test
shr
arpl
dec
cli
inc
hlt
sbb
hlt
add
pusha
cmp
nop
and
ficom
fst
or
loopne
fmul
dec
sti
imul
adc
cmp
hlt
xor
xchg
dec
popa
pop
nop
arpl
clc
jo
sub
push
out
or
outs
fistp
call
pop
xor
iret
(bad)
push
push
jns
push
adc
popa
repnz
adc
popa
mov
dec
stos
pop
gs
push
jle
xor
pop
add
ret
mov
add
add
or
out
(bad)
jb
addr16
fcomp
popf
jb
sbb
push
jge
mov
or
repz
mov
ret
dec
jecxz
iret
in
cmp
addr16
(bad)
out
push
push
add
pop
sub
das
in
push
out
push
mov
(bad)
stos
dec
lods
(bad)
aaa
fwait
cmps
sub
push
and
push
mov
lds
pop
mov
shl
xor
xor
(bad)
jmp
mov
scas
adc
push
pop
cli
test
xchg
xor
adc
imul
gs
jns
sar
pop
nop
push
xchg
xor
mov
pop
loope
out
pop
jnp
push
sbb
inc
pop
(bad)
adc
mov
test
and
jmp
inc
ret
add
jae
jmp
scas
mov
jle
gs
sub
leave
shl
cmps
ja
lds
pop
cmp
cmp
pop
gs
pushf
es
repz
test
fistp
add
ss
or
jmp
add
popf
sub
jmp
push
movs
es
add
loopne
mov
js
repz
jle
sti
sar
loope
push
xor
mov
pop
push
lea
test
ins
dec
arpl
mov
int3
jns
sbb
loope
retf
(bad)
icebp
fcmovnbe
fsubr
sbb
cmp
adc
cmps
adc
cmps
ins
pop
jge
aaa
adc
adc
mov
stos
arpl
xor
xchg
mov
xchg
fld
pop
std
xor
in
int3
fwait
test
xor
or
in
(bad)
or
gs
dec
add
jg
push
std
jae
mov
mov
sbb
lock
xchg
and
add
jmp
or
pop
jnp
sub
mov
jbe
push
pinsrw
call
jne
jno
xor
and
clc
div
shl
mov
or
cwde
pushf
jg
xor
mov
inc
scas
outs
loop
xchg
ja
fist
pop
clc
dec
(bad)
int
pop
scas
xchg
sbb
mov
push
and
(bad)
jl
lock
mov
xchg
cmp
and
int3
div
pop
add
push
ja
xchg
push
out
mov
push
xor
int
out
sub
and
and
pop
pop
xor
sub
mov
add
(bad)
hlt
mov
xchg
int3
xor
out
mov
or
mov
lods
repz
aas
repnz
push
iret
xchg
pushf
cdq
clc
test
fist
inc
loope
sub
in
cmp
popa
inc
mov
xchg
sbb
cmc
sub
sahf
sub
push
and
jae
bound
and
int
sbb
push
sahf
sahf
sbb
(bad)
sbb
stos
dec
jle
sbb
add
pop
popa
sbb
aaa
push
xor
inc
mov
aad
bound
mov
mov
fwait
push
std
js
aad
and
in
test
shl
int3
cmps
mov
(bad)
in
movs
and
push
mov
jp
test
fidivr
jns
popf
push
jecxz
ror
sar
je
and
gs
cmp
aam
jmp
rcr
pop
retw
call
(bad)
cmp
xchg
xor
inc
arpl
dec
add
sub
lods
sbb
mov
jns
sub
lds
jp
(bad)
repnz
add
inc
dec
adc
adc
mov
sub
test
inc
mov
loopne
mov
push
test
sub
push
adc
test
mov
add
jle
xor
xchg
sti
pusha
test
ret
cmp
pop
mov
xor
xchg
enter
xchg
jg
(bad)
jmp
mov
test
lods
adc
jecxz
or
scas
pop
inc
shl
inc
int3
pop
inc
jge
pusha
(bad)
sub
dec
push
adc
outs
loope
jns
dec
mov
int
jp
movs
mov
push
outs
mov
add
aaa
daa
ss
xchg
in
and
rcr
push
pop
pop
in
cmps
pop
mov
adc
or
adc
js
fdiv
in
jmp
pop
ds
mov
stos
inc
sub
retf
mov
ins
sub
xor
jle
pop
or
ja
es
push
push
cmps
xchg
lock
fisub
cmp
push
in
push
jo
add
cmp
mov
mov
gs
lahf
ret
mov
ins
sbb
stos
(bad)
sub
out
outs
dec
rcr
clc
inc
mov
xor
int
mov
arpl
push
ss
mov
cmp
push
icebp
adc
adc
or
cli
arpl
dec
or
adc
inc
jecxz
adc
retf
adc
ret
jge
icebp
jbe
and
(bad)
sbb
rcr
repnz
in
jl
lea
cmps
ret
ja
(bad)
outs
pop
cdq
ja
sbb
push
(bad)
lds
movs
int3
dec
mov
popa
mov
ror
out
mov
pop
sub
(bad)
lods
(bad)
aad
cli
in
dec
sbb
xchg
inc
lahf
mov
ds
(bad)
jmp
xchg
adc
cmps
fsubr
xor
xchg
mov
push
jge
rol
sub
add
frstor
cmp
je
aam
mov
pop
dec
arpl
popa
ins
pop
sub
mov
data16
mov
add
mov
jmp
jmp
xchg
pusha
bound
stos
mov
jg
dec
xchg
(bad)
pop
lods
loope
mov
jne
mov
dec
cld
sub
mov
mov
adc
lds
fbstp
fstp
mov
ror
fiadd
cmp
(bad)
rol
inc
in
es
jmp
test
inc
lds
sahf
fidivr
fiadd
mov
sahf
mov
jae
fidiv
cmp
iret
jecxz
mov
pusha
xor
dec
xor
pop
pop
loopne
cmp
sbb
dec
or
pop
iret
or
int3
fcom
aad
dec
retf
les
fidivr
call
out
std
sbb
jp
add
outs
dec
push
data16
jne
les
inc
(bad)
cmp
push
xchg
loopne
sti
sti
jmp
enter
dec
pop
int3
xchg
or
xchg
inc
cmp
cmc
ins
mov
sub
inc
mov
test
mov
add
xchg
mov
adc
jg
mov
rcl
dec
shl
sub
test
pop
or
jecxz
add
cmp
and
mov
sbb
push
mov
outs
sbb
push
adc
push
popa
xchg
fs
fild
jg
(bad)
loop
jmp
jg
ss
(bad)
in
xchg
push
push
das
xlat
mov
xchg
call
pop
sub
push
pop
jns
inc
pop
push
jno
das
cmp
mov
xlat
push
ret
push
lds
pop
out
fdiv
(bad)
js
sbb
xchg
js
sbb
aam
cmp
adc
aad
mov
add
cld
adc
pop
jmp
sbb
sub
nop
popa
mov
fwait
sbb
je
mov
int3
or
and
test
dec
aaa
jno
std
aas
mov
xchg
add
adc
stc
or
dec
or
mov
retf
and
in
imul
xlat
lea
fwait
pop
aas
shr
int
cmp
xor
pop
adc
dec
mov
mov
adc
and
sub
pop
lahf
rcr
in
pushf
mov
rol
hlt
loopne
xor
jo
jmp
in
push
jns
outs
lods
scas
mov
call
nop
outs
out
enter
jae
fwait
mov
or
push
jl
jge
dec
enter
cmp
mov
push
test
adc
fstp
out
pop
add
dec
add
or
and
lfs
xor
mov
int
(bad)
call
push
cmp
push
push
dec
pop
push
push
sbb
or
popa
jecxz
scas
ins
adc
pop
dec
add
adc
adc
fst
xchg
cli
mov
cli
stos
aaa
call
in
mov
add
jmp
xor
scas
daa
mov
movs
dec
inc
push
adc
push
pop
stos
pop
push
fcom
xor
fnsave
jns
test
and
out
nop
xor
sub
sub
loope
or
mov
arpl
imul
mov
sbb
fdivrp
xchg
cmps
mov
xchg
(bad)
int3
mov
gs
and
scas
loopne
movs
scas
sub
les
xor
xor
jnp
hlt
dec
push
add
add
idiv
ds
fs
xlat
adc
fistp
sbb
sbb
in
jae
loopne
enter
repnz
inc
fmul
out
sub
lock
out
mov
mov
mov
adc
movs
mov
dec
arpl
jp
push
les
pop
movs
mov
rcl
pop
cmp
in
(bad)
cmp
aas
and
(bad)
jns
sub
dec
not
mov
push
dec
fidivr
movs
aad
push
mov
cmp
xor
push
hlt
movs
pushf
sub
or
leave
sbb
sub
in
pop
mov
int3
xchg
(bad)
push
ffree
and
retf
cs
fidiv
sub
psubusw
inc
mov
hlt
dec
daa
test
or
lock
xchg
pop
xchg
shr
inc
lods
loope
jns
jecxz
mov
pop
mov
or
jecxz
jns
push
xchg
rcr
idiv
or
mov
add
mov
test
jbe
hlt
mov
cdq
int3
jmp
xor
xchg
xchg
cmp
pop
pusha
sbb
add
mov
fwait
sbb
js
out
icebp
jge
loop
dec
inc
or
cmp
or
outs
jg
jne
cmp
adc
pop
fmul
fsubr
lds
dec
popa
fcmovne
loopne
mov
push
aaa
loopne
mov
rol
cld
inc
mov
pop
push
dec
mov
and
adc
push
pop
add
arpl
test
(bad)
loop
jecxz
mov
retf
out
fild
ja
stos
dec
dec
mov
or
pop
mov
and
scas
sbb
push
fs
ret
aaa
xlat
lds
push
xchg
xchg
push
cmps
inc
sub
call
popa
mov
loope
sbb
push
(bad)
scas
xchg
mov
xchg
ja
repnz
in
adc
movs
jno
inc
add
fcmovne
and
cld
mov
sahf
push
in
stos
ret
xchg
frstor
ds
xchg
cmp
adc
mov
and
imul
push
aam
fsubrp
or
adc
xlat
inc
popf
jle
dec
add
cmp
sahf
js
pop
and
out
mov
mov
jne
pop
mov
rcr
lods
dec
test
mov
cs
fbld
outs
aaa
dec
xchg
out
jle
enter
mov
clc
cli
fsubr
jae
daa
enter
cmp
add
or
movs
retf
push
and
mov
sub
and
jne
fnstsw
(bad)
into
aam
xor
pop
jbe
push
test
daa
cmp
jns
pop
(bad)
cli
or
movs
hlt
cmp
pop
xor
fwait
ds
mov
les
sub
jmp
jo
lea
pop
cmp
nop
adc
mov
push
jnp
cmps
(bad)
cwde
pushf
push
xchg
fstp
fcomp
xchg
leave
sbb
push
in
dec
arpl
mov
(bad)
repz
inc
jne
pop
in
push
and
cmp
retf
movs
mov
out
hlt
sbb
call
pop
mov
test
ins
xchg
sbb
cmp
xchg
fwait
push
aas
into
retf
mov
dec
sbb
add
iret
add
(bad)
xor
dec
inc
aad
and
mov
das
and
pop
sub
fdiv
in
adc
pop
inc
es
xor
in
mov
pop
jae
mov
xor
pop
dec
mov
jbe
push
popf
ror
scas
int
and
shl
mov
pop
add
and
pushf
push
in
dec
add
jmp
arpl
jle
and
xor
popf
lods
rcl
cmp
fistp
lods
aad
inc
jno
loopne
test
pop
sub
stc
push
sub
ficomp
lds
cli
sub
aad
xor
push
add
repz
fst
jecxz
or
in
ins
inc
cmp
or
and
xor
div
dec
jl
xchg
(bad)
ins
dec
xchg
fwait
and
dec
xchg
adc
mov
dec
xor
shr
cmp
sbb
in
fs
test
xor
scas
pop
inc
int
inc
test
add
aaa
mov
cld
pop
mov
das
popa
sbb
in
mov
dec
mov
cs
and
das
cmp
xlat
popa
lods
test
(bad)
je
add
leave
movs
jmp
pusha
mov
movs
and
lods
push
fistp
pushf
dec
cmp
jno
fwait
or
cmp
inc
std
dec
xor
sar
std
xchg
dec
addr16
xor
leave
stc
pop
retf
leave
dec
push
adc
mov
pop
push
loopne
pop
or
(bad)
sar
jle
pop
and
not
cs
xor
mov
test
inc
jmp
(bad)
rol
pushf
mov
mov
pop
popf
xor
lods
xor
in
test
mov
push
sti
ins
loope
mov
push
lods
std
loop
push
cmc
cwde
jge
xor
std
adc
gs
pushf
das
mov
rcr
add
mov
aaa
add
int3
test
in
leave
sbb
pop
jg
inc
sbb
mov
repnz
hlt
jns
rcl
adc
xchg
sbb
mov
int3
xchg
xchg
in
mov
cmp
sub
or
sub
lock
(bad)
in
sbb
dec
inc
data16
(bad)
pushf
pop
dec
rcr
gs
push
xchg
das
movs
cmps
cmps
and
mov
jnp
es
cmc
leave
xchg
cmp
push
ins
pop
xchg
aad
xchg
or
lods
test
pop
pop
pop
inc
sbb
jmp
and
inc
dec
leave
cpuid
nop
jp
push
gs
imul
scas
pop
inc
cmp
and
adc
clc
pop
es
cs
add
or
test
pop
loopne
xchg
jg
mov
(bad)
repnz
sahf
cdq
pop
cwde
fsubr
dec
outs
cmp
das
mov
out
ficom
out
and
aas
push
mov
xor
add
mov
into
cmp
out
mov
add
adc
xor
aam
lea
add
retf
fist
sbb
(bad)
loop
push
es
or
cmp
in
cmps
mov
leave
mov
xchg
jnp
sahf
je
(bad)
daa
cwde
movs
cmp
jne
mov
xor
or
fwait
or
push
xchg
jae
adc
ficomp
out
lock
retf
mov
into
in
jle
xchg
adc
inc
cmp
hlt
(bad)
fist
jne
div
push
retf
pop
icebp
jmp
cli
xchg
(bad)
pop
or
and
inc
ret
pop
jns
lds
mov
iret
push
sbb
xchg
add
fisubr
(bad)
or
jge
sbb
fldenv
pop
int3
sub
mov
adc
test
loope
pusha
in
out
repz
aaa
outs
ins
mov
(bad)
mov
fcomip
arpl
cmp
retf
mov
(bad)
rcl
data16
push
push
mov
jbe
mov
add
jb
shr
dec
pop
loope
or
or
dec
pop
lock
xor
in
sub
xor
shr
fnstenv
dec
jne
ins
dec
pop
lahf
loopne
jle
sub
fbstp
add
cmps
cmp
out
mov
adc
or
clc
push
jge
mov
fs
nop
jnp
repz
add
loop
arpl
leave
mov
aam
cmp
cmp
fnsave
push
(bad)
rol
jb
fwait
sub
mov
in
sbb
stos
cmc
pushw
mov
xchg
imul
push
cli
cwde
xor
and
xchg
mov
pushf
icebp
push
pop
sub
sahf
cmps
adc
and
sbb
and
fdiv
and
loopne
add
lods
gs
fisttp
imul
pop
mov
jns
fucomip
ins
push
add
push
sbb
out
cmc
ja
jg
popf
cdq
xor
dec
sub
pusha
push
push
shr
inc
pop
fstp
add
cli
xchg
cs
cmp
lea
ins
jge
das
out
cli
lahf
adc
pop
aam
inc
in
pop
mov
pop
and
call
lock
cmc
inc
mov
or
mov
pop
mov
pop
inc
shr
repnz
sub
pop
xor
sub
cmp
fnstsw
mov
bound
dec
or
sbb
out
loope
pusha
shl
push
pusha
jmp
call
in
lods
xchg
and
cdq
fistp
xchg
movs
sti
cmps
pop
in
and
int3
sub
mov
jg
cmps
adc
inc
inc
or
enter
aas
loop
cmp
sbb
in
mov
in
cli
mov
adc
stc
hlt
(bad)
jecxz
int3
or
sub
clc
dec
scas
mov
or
sti
repnz
repnz
popf
sub
into
stos
das
shl
cmps
inc
xor
pop
sub
clc
(bad)
jle
or
aas
xchg
mov
add
pop
jmp
(bad)
not
shl
xchg
and
inc
sbb
xchg
sbb
fisttp
xor
cmp
lock
push
dec
inc
pop
cld
or
(bad)
out
pop
pop
sbb
lock
cmp
addr16
enter
jmp
pop
add
shr
in
js
push
sub
cmc
jns
mov
adc
mov
mov
adc
sub
mov
and
xchg
das
shl
sub
jno
fsubr
(bad)
sub
rol
gs
pop
ret
vpminsw
push
test
fnstsw
(bad)
sti
cmp
push
pop
(bad)
push
push
push
mov
or
out
mov
and
mov
xor
mov
xchg
mov
sub
scas
sub
cmp
fs
cmp
pop
(bad)
and
int
adc
and
loop
push
add
js
jmp
iret
icebp
dec
jns
bound
hlt
pop
ins
popa
outs
pop
rcr
add
loop
pop
inc
stc
mov
std
stc
fdiv
shl
pusha
push
xchg
pop
clc
dec
sbb
sub
into
outs
fwait
mov
mov
mov
sub
jmp
aam
(bad)
and
dec
and
xor
pop
bound
out
cs
add
cld
xchg
loopne
stc
mov
ja
mov
repz
mov
mov
lods
push
sbb
push
shl
out
lds
dec
dec
les
jge
or
dec
lods
out
pusha
in
cdq
push
mov
adc
cld
dec
(bad)
ror
lds
mov
(bad)
jmp
xchg
les
loope
inc
shr
push
push
mov
sub
xor
jb
call
mov
cmps
dec
push
sbb
sub
sub
out
xor
xchg
pop
js
adc
jno
fsubr
inc
sub
jg
into
mov
cmp
push
ret
rcr
xchg
or
repz
push
cmp
mov
dec
jecxz
add
dec
fistp
gs
xchg
push
sar
fdivr
sar
pop
and
pop
fistp
fcmove
outs
push
mov
xchg
aaa
repz
dec
and
mov
ja
cmp
inc
imul
lods
mov
mov
std
or
(bad)
lahf
in
cmp
or
add
in
in
mov
movs
adc
(bad)
int
mov
aad
mov
xor
pusha
dec
mov
cdq
sub
pop
and
repz
or
mov
mov
outs
and
inc
sbb
int3
jae
sub
xor
push
or
aaa
jo
test
mov
or
push
ret
shr
pop
pop
loopne
sub
ins
pop
push
cs
push
in
push
add
fdivr
outs
inc
jl
dec
test
and
mov
in
add
xchg
dec
or
inc
ret
fisubr
(bad)
dec
stc
pop
dec
mov
jb
inc
cmp
pusha
adc
std
fs
(bad)
cmp
fwait
pop
adc
inc
inc
cmp
sar
and
fmul
push
aaa
pop
sub
pop
(bad)
jp
test
int
stc
lds
sti
pop
std
sbb
cmp
jmp
xlat
stos
adc
sbb
aaa
pop
jecxz
mov
mov
pop
daa
(bad)
stos
out
in
sar
lods
push
sbb
shl
fld
dec
(bad)
aas
loopne
in
in
and
pop
pop
xchg
and
(bad)
out
push
cmps
fcom
cmp
and
push
ror
inc
mov
out
adc
aam
mov
cmps
stos
jecxz
xchg
mov
inc
mov
jmp
test
ja
push
pop
pop
int3
pop
hlt
mov
bound
loope
shr
fwait
sbb
pushw
and
lea
leave
test
mov
mov
dec
push
and
mov
ss
jg
push
pop
ret
pop
sbb
cld
or
mov
or
jg
ss
fwait
fwait
(bad)
shr
sbb
js
imul
gs
xor
xchg
mov
xchg
scas
out
in
enter
xchg
lahf
mov
pop
jp
les
clc
fcom
sub
pop
ins
sbb
into
aam
jns
mul
enter
push
mov
xchg
fcomip
inc
clc
cmp
adc
jae
pop
popf
out
and
repnz
mov
out
pop
adc
adc
sar
cmps
in
lods
imul
xor
cwde
cmp
sahf
inc
(bad)
xor
mov
mov
out
mov
cmp
mov
adc
cmp
ins
(bad)
add
outs
(bad)
fucomip
retf
cwde
add
jns
sub
mov
add
pusha
retf
push
aas
xor
jle
out
dec
cmp
add
retf
addr16
scas
in
xlat
pop
psadbw
aad
xchg
push
inc
cmp
jo
fs
mov
push
sbb
scas
and
pop
outs
jmp
jbe
sbb
and
and
fucomp
pop
les
push
add
jnp
sti
aaa
and
or
jge
pop
gs
xchg
pusha
fcom
cs
imul
cmp
dec
sub
fisttp
cmp
imul
sub
xchg
int
cmps
jne
xchg
outs
popf
fidiv
aas
int3
push
dec
lea
movs
outs
sub
mov
popa
jl
mov
push
movs
pop
in
pop
mov
(bad)
cmp
stos
ret
cdq
mov
jb
pusha
pushf
bound
pop
or
cmps
bound
repz
cdq
push
xor
lods
push
scas
xchg
jmp
fs
test
int3
aaa
push
push
adc
and
test
dec
sub
ins
test
mov
sub
cmp
fwait
jb
mov
mov
icebp
(bad)
jnp
adc
lock
lock
lock
mov
mov
cdq
outs
sub
cmp
jl
xor
ins
mov
clc
jmp
cwde
lea
dec
push
mov
jp
jnp
out
imul
fbld
adc
cs
or
push
fstp
iret
pop
xchg
daa
fbstp
fmul
ss
out
div
push
xchg
shr
pop
mov
(bad)
jb
cli
mov
cdq
pop
mov
jmp
add
mov
sub
jg
std
pop
jle
push
jbe
leave
rcpps
out
ss
shl
jl
dec
mov
dec
rcl
mov
inc
sub
jno
ins
xor
adc
fdivr
shl
sti
sub
aad
js
es
inc
add
fisubr
stos
xor
outs
sub
jb
clc
mov
add
inc
push
cs
xor
fst
cwde
ja
dec
xor
rcl
ds
(bad)
pop
ficom
mov
cmps
cld
mov
aas
dec
jmp
jecxz
xchg
pushf
mov
stos
out
add
dec
rcl
jmp
cmp
mov
sub
repz
data16
leave
add
rol
and
cmps
adc
test
mov
(bad)
into
sub
arpl
outs
jle
mov
loopne
push
pop
loopne
seta
lahf
mov
mov
mov
pop
pop
hlt
imul
push
in
mov
nop
and
sbb
jle
aam
bound
mov
add
cmp
push
and
daa
inc
mov
(bad)
fidiv
rol
xchg
(bad)
cdq
mov
fist
add
add
(bad)
dec
mov
adc
sub
mov
hlt
sbb
enter
fist
hlt
xor
(bad)
iret
call
fs
fmul
movs
pop
add
jmp
xor
mov
xor
or
dec
jns
sahf
jmp
imul
add
mov
jne
int3
pavgw
sub
jl
push
push
adc
icebp
movs
test
add
outs
inc
retf
fimul
add
call
push
test
cmp
cmc
jo
fs
outs
cmp
and
fsubp
and
out
dec
cmps
rcr
pop
cmp
add
cmp
es
aas
aaa
push
mov
push
mov
(bad)
jge
call
mov
jae
sub
repz
fwait
test
xor
cmp
mov
xlat
push
lahf
std
ret
cld
stc
push
sub
popw
mov
enter
inc
jge
iret
out
ins
outs
jecxz
xchg
(bad)
aam
sub
test
adc
jns
mov
imul
push
call
cmp
dec
arpl
nop
xor
repnz
xor
inc
sbb
and
jmp
push
test
nop
mov
sub
mov
call
adc
sbb
ins
sub
push
(bad)
pop
and
daa
jp
sbb
add
out
jbe
pop
add
test
xchg
sbb
sub
sar
sbb
xchg
jecxz
jbe
lea
or
push
push
fild
rol
mov
cs
(bad)
call
ds
in
test
mov
pop
out
adc
push
mov
icebp
ss
stc
ja
mov
add
test
fwait
pop
mov
call
or
mov
or
xchg
daa
mov
add
sti
xor
lea
jge
fnstenv
jnp
mul
sub
or
call
or
push
sti
adc
mov
sahf
jl
fnstsw
fdiv
push
cwde
mov
pop
pop
inc
(bad)
(bad)
lods
jb
xchg
dec
ret
movs
xchg
jo
jo
add
xchg
lods
fst
mov
sar
push
rcr
pop
(bad)
mov
mov
dec
mov
add
repnz
jbe
mov
mov
mov
or
ins
push
mov
js
inc
xor
xlat
sub
jo
mov
loope
test
pop
sub
jae
jnp
sub
pop
xchg
sbb
sbb
xor
or
inc
push
mov
mov
push
scas
jne
inc
push
or
push
add
test
cmc
dec
ins
mov
pusha
test
mov
loopne
dec
retf
jbe
or
je
mov
or
in
jge
push
out
inc
and
rol
adc
dec
inc
sub
fmulp
or
sub
psrlw
mov
gs
in
lods
fmul
sti
push
sti
test
xchg
movs
scas
fnstsw
and
mov
aam
add
in
jge
mov
jae
lods
xchg
xor
sbb
dec
test
jp
and
cmp
or
jne
inc
into
xor
mov
push
push
push
div
dec
popa
add
and
lods
sub
cmps
adc
sti
aas
iret
fist
mov
mov
pop
stos
in
je
cmp
(bad)
sbb
popa
retf
or
adc
(bad)
mov
sar
(bad)
je
cmp
cmp
jle
hlt
out
cmp
es
push
cmp
int
xor
outs
mov
cmps
retf
mov
outs
mov
out
stos
in
fs
cmps
lods
adc
pop
inc
xchg
std
pop
(bad)
add
cmp
cwde
out
adc
jb
pop
xor
add
imul
fcom
inc
call
adc
retf
cmp
fsub
push
dec
shl
imul
mov
call
repnz
mov
mov
sbb
fistp
imul
xchg
or
inc
rcl
ja
cmp
pushf
mov
in
ja
pop
xor
jp
adc
adc
mov
lea
retf
jl
ss
sahf
pop
out
and
sub
ffree
jle
ret
mov
sub
out
ins
inc
jae
inc
jns
(bad)
cmp
shl
ds
ins
jg
in
xchg
mov
sti
mov
jmp
mov
cmp
push
data16
std
inc
dec
mov
mov
sar
test
mov
or
jp
fistp
es
pop
cmps
std
pop
fsqrt
pop
repnz
(bad)
frstor
jne
dec
sub
scas
iret
sbb
ss
jo
js
mov
jbe
jno
dec
mov
loop
jle
jp
push
dec
xor
fwait
lds
int3
xor
clc
mov
(bad)
jnp
jne
adc
fsubr
mov
xor
cmp
adc
fild
je
std
cdq
add
mov
cmp
sti
js
aam
adc
mov
int
mov
sub
loop
(bad)
sub
icebp
xor
stc
mov
jp
adc
mov
mov
test
xor
ret
or
jmp
inc
out
cmps
xchg
fidiv
in
stos
sar
jecxz
cli
loop
dec
fsubr
aad
lea
or
aad
leave
mov
mov
sub
scas
xor
fcomp
in
and
push
and
mov
aam
fucomi
pop
cmp
addr16
ficomp
xchg
loope
push
jg
(bad)
(bad)
mov
inc
mov
(bad)
shr
sti
lods
pop
dec
test
test
idiv
mov
int
retf
mov
mov
gs
rol
repnz
pushf
jp
and
mov
mov
sbb
and
dec
jle
xor
pop
mov
int
sahf
xchg
ins
call
pop
cld
stos
mov
scas
(bad)
clc
nop
ins
inc
jmp
mov
lds
icebp
jo
xor
cdq
rol
icebp
sub
push
(bad)
test
movs
add
xor
jne
jno
jo
ror
mul
es
mov
mov
mov
pushf
push
jg
jnp
(bad)
aas
fwait
adc
clc
jbe
sti
icebp
(bad)
sub
cdq
or
fmul
jle
je
pop
adc
and
xchg
stos
mov
icebp
not
cdq
aam
call
es
or
mov
aam
xor
shl
push
xchg
pop
movs
fmul
(bad)
xchg
repnz
fld
icebp
loop
test
mov
jae
call
loopne
fild
push
loope
fld
jo
cmp
mov
into
jne
push
dec
test
dec
stc
push
sbb
jae
xchg
xchg
scas
push
out
retf
repnz
int3
mov
aam
adc
test
mov
popa
popa
bound
(bad)
aam
or
push
nop
addr16
sub
mov
jbe
pop
or
pop
lods
fdivp
or
pop
jo
leave
arpl
lds
retf
test
jge
rcl
mov
sbb
xor
jle
adc
aaa
push
pushf
ret
or
mov
stos
xchg
das
pop
sbb
mov
push
jg
(bad)
shr
and
add
adc
lock
xchg
sar
add
enter
mov
int3
or
hlt
sbb
or
loope
repz
outs
xchg
or
inc
xor
fisub
inc
repz
cmp
xchg
sub
out
xchg
retf
test
or
scas
inc
leave
mov
mov
inc
test
adc
les
std
iret
or
test
scas
mov
jns
scas
sahf
xchg
std
xchg
xor
and
leave
adc
sub
sub
(bad)
aad
ja
xor
push
test
and
out
xlat
aad
sbb
jmp
xor
pop
sar
jae
out
sub
shl
xchg
push
pop
rcr
adc
jge
inc
add
mov
mov
xor
sbb
dec
or
in
mov
je
dec
mov
call
jb
add
or
jmp
dec
into
adc
outs
dec
xchg
inc
jl
jg
xchg
push
xor
ss
push
pop
sub
mov
cmps
sbb
popf
push
jo
aaa
adc
test
mov
shl
ficomp
cmp
adc
push
inc
mov
jo
push
inc
xchg
lds
mov
fdiv
push
and
mov
cmp
jns
arpl
fdiv
inc
call
mov
ret
mov
dec
stos
sbb
aas
mov
loop
call
test
ss
mov
lahf
dec
jge
adc
jmp
cmps
sahf
jbe
and
dec
mov
nop
pusha
push
int
cwde
call
das
push
jg
fidiv
bound
clc
xchg
xor
xchg
mov
jg
xchg
test
push
xchg
cmp
sub
xor
add
lods
mov
mov
add
imul
pop
sub
iret
test
or
rcr
test
add
jle
in
mov
push
adc
xchg
gs
sar
or
(bad)
sub
rol
rcr
mov
sbb
xor
es
or
shl
add
xor
fisub
jmp
mov
cdq
shl
in
es
js
add
add
pop
inc
(bad)
pop
or
xchg
test
mov
push
sbb
push
mov
std
les
je
pop
jnp
xchg
stos
mov
test
int3
inc
enter
in
dec
push
push
call
add
inc
push
jae
pop
mov
and
es
add
sar
xchg
std
loopne
inc
in
fwait
aam
mov
arpl
jg
shl
or
mov
mov
mov
(bad)
xor
pushf
sbb
fld
push
jmp
mov
and
xchg
dec
imul
xchg
js
push
and
sar
ret
mov
or
xchg
mov
nop
dec
inc
pop
jg
xor
das
push
sub
sub
xchg
mov
lahf
ror
test
jno
push
dec
jmp
rcr
repz
in
pop
pop
les
pop
sar
mov
pop
add
imul
sbb
sub
mov
xchg
sbb
cdq
add
movs
lea
and
mov
test
rol
popf
xor
jge
mov
mov
xor
sti
test
adc
or
call
cmp
inc
sub
mov
retf
fsub
pushf
(bad)
adc
dec
outs
lds
hlt
mov
arpl
jae
pop
mov
ficomp
test
dec
push
jge
adc
mov
retf
adc
mov
sbb
inc
xor
inc
ret
jnp
cmp
fadd
inc
nop
adc
call
xchg
jecxz
pop
ret
out
jns
push
push
les
mov
xor
int3
sbb
test
fsub
retf
sbb
call
ret
and
pop
pop
stos
bound
mov
mul
ss
pop
or
lds
push
stos
sub
cmps
dec
repz
ja
imul
pop
jbe
dec
aas
mov
out
test
fdiv
and
outs
inc
sub
mov
fsubp
outs
(bad)
iret
push
and
sub
lds
jnp
pushf
xchg
dec
mov
xchg
cmp
lds
fcmovnb
push
cmp
push
enter
mov
jmp
cwde
xor
sub
pop
aas
adc
xchg
add
cmps
cmps
dec
mov
push
daa
mov
lock
push
adc
mov
imul
shl
pop
lock
cld
ret
fnstcw
or
clc
(bad)
pop
dec
sub
cmp
mov
movs
outs
cs
loopne
std
(bad)
inc
xor
pop
pop
ss
mov
jne
push
pop
data16
imul
sti
sub
xchg
cmp
jae
je
shl
mov
dec
leave
ficomp
in
cmp
jmp
inc
lods
mov
pop
add
lds
popf
movs
jmp
shl
cli
inc
dec
das
daa
std
and
in
sub
jb
movs
push
mov
or
(bad)
cmc
ret
add
outs
jb
cmp
out
out
arpl
out
add
cmps
xchg
in
out
ret
push
or
pop
sub
pop
dec
mov
mov
xchg
icebp
add
arpl
outs
mov
js
mov
shl
scas
mov
dec
add
test
aaa
pop
leave
lea
adc
in
sub
into
sbb
movs
and
and
ss
sar
jecxz
inc
out
in
daa
test
and
shr
ret
repz
sbb
inc
mov
shl
mov
dec
xchg
mov
mov
ret
pop
movs
movs
mov
jbe
sub
xchg
add
sar
sahf
pop
and
scas
xchg
pop
mov
stc
cmps
push
and
int
mov
popf
jnp
mov
inc
outs
psrlw
ret
sub
das
mov
loop
data16
pop
jo
je
xchg
cmp
mov
and
fst
dec
out
in
mov
or
mov
mov
sar
pushf
stc
sbb
leave
mov
mov
mov
mov
fisubr
fldcw
jmp
cmps
out
dec
pop
push
pop
sbb
sbb
ds
ret
jmp
daa
sbb
push
lods
dec
pusha
mov
push
ffreep
jbe
pusha
loopne
xchg
inc
repz
out
inc
xchg
test
mov
mov
mov
out
fwait
leave
shl
cmp
cmp
or
cmps
loope
cmp
sbb
mov
cdq
fist
dec
jmp
add
inc
dec
or
lahf
nop
and
xchg
nop
push
and
retf
mov
rcl
and
ins
jb
push
pop
lahf
and
stos
or
jns
outs
add
or
aam
call
cmps
jp
movs
jge
pop
pop
mov
inc
pop
xor
add
ins
xchg
mov
and
outs
or
pop
adc
pop
adc
lock
cwde
fidiv
add
mov
jecxz
test
and
lea
data16
or
ret
mov
stos
imul
cmp
dec
imul
or
mov
mov
ret
or
xor
sub
xor
imul
fnsave
ja
mov
mov
mov
lea
adc
imul
in
outs
cmp
and
cmp
bound
mov
mov
add
jns
jno
cli
scas
cld
arpl
jmp
cdq
add
pop
in
adc
ins
or
sbb
xlat
mov
pop
in
cmc
stos
call
repz
pop
jg
mov
loope
sbb
stc
adc
ret
cmp
dec
pop
or
loop
lock
push
sbb
xor
je
lea
mov
dec
push
xchg
sbb
je
dec
fist
out
and
or
xor
int3
xchg
imul
aas
mov
lea
mov
test
mov
aad
sti
cmp
shl
dec
push
sbb
fistp
cmc
push
rol
add
sar
mov
dec
pop
rcr
mov
jne
fild
sti
ins
aam
clc
pop
sub
out
or
xchg
pop
lods
push
push
(bad)
mov
pop
lahf
push
cdq
(bad)
xchg
out
or
(bad)
mov
enter
dec
jmp
mov
mov
lds
dec
fstp
mov
and
and
inc
cmps
sbb
xchg
in
pop
xor
je
(bad)
adc
mov
fwait
shl
retf
cmps
xchg
sti
loopne
fiadd
and
mov
add
loop
add
(bad)
aad
ficomp
sbb
sub
xor
ret
je
jmp
test
rol
daa
stos
retf
shl
sbb
ds
leave
push
lahf
shr
sub
scas
fs
sbb
and
retf
xchg
and
fisttp
xor
pop
mov
aad
mov
pushf
adc
cdq
jo
dec
mov
dec
js
xor
mov
in
mov
leave
mov
xor
pusha
xchg
jge
shl
xchg
inc
inc
call
mov
mov
jp
xchg
sbb
mov
fwait
mov
mov
mov
(bad)
cli
mov
cmp
imul
adc
ins
xchg
inc
push
sub
pop
and
dec
and
or
int
mov
std
into
fwait
jmp
int
add
aad
mov
mov
fstp
ror
in
leave
push
gs
out
pushf
inc
cmp
(bad)
push
jmp
jns
inc
push
cdq
shl
dec
imul
push
jmp
fiadd
mov
outs
sub
inc
leave
or
cmp
outs
sti
stos
ret
fucom
cmps
in
out
repnz
movs
cmp
data16
xor
aam
xlat
daa
js
sub
sbb
stos
pop
leave
cmp
in
(bad)
loopne
stos
push
in
pop
push
arpl
jl
adc
mov
(bad)
fs
rol
movs
push
add
ins
shl
xor
push
aas
lock
js
sbb
retf
fs
arpl
fwait
popa
add
mov
cmc
xchg
cmp
imul
adc
bound
ds
add
push
or
mov
mov
pop
mov
add
inc
icebp
adc
adc
test
push
scas
jle
mov
pop
inc
ds
jo
das
dec
in
jo
ja
dec
jmp
popw
mov
mov
jle
inc
test
mov
adc
test
mov
call
aad
popf
in
dec
xchg
dec
retf
mov
dec
mov
xchg
das
jmp
out
push
(bad)
stos
ret
mov
test
inc
xchg
clc
sub
sar
pop
fwait
test
add
or
pop
ja
and
int3
xor
call
mov
sub
dec
out
retf
leave
ja
out
add
pop
movs
cli
push
test
mov
push
pop
mov
adc
aad
dec
adc
xchg
xlat
dec
(bad)
or
ficomp
ffreep
nop
jg
rol
int
fdiv
lods
ret
ret
pop
jbe
out
mov
cmp
imul
sbb
(bad)
call
pushf
fisttp
cwde
das
mov
cmp
(bad)
sub
push
xor
push
jnp
push
outs
add
pop
cmps
mov
dec
adc
add
icebp
pusha
popf
inc
cmps
aaa
push
add
aad
xchg
jnp
jae
je
std
es
mov
cmp
push
pop
retf
pop
sbb
jb
jo
mov
scas
pop
inc
js
in
and
es
dec
inc
mov
xchg
hlt
mov
dec
mov
int3
push
dec
leave
es
(bad)
inc
dec
cmps
xor
xor
mov
add
sub
imul
(bad)
(bad)
nop
out
stos
jnp
jmp
sbb
(bad)
jbe
lahf
pop
jnp
mov
add
fdivr
jl
mov
fbstp
xchg
cld
adc
outs
push
jae
pop
pop
inc
jns
and
sub
out
sbb
sbb
dec
mov
xor
adc
scas
int
and
and
shl
adc
jmp
mov
repz
push
xor
sbb
call
enter
cmc
push
loop
jo
pop
scas
push
cmp
in
(bad)
bnd
(bad)
pop
and
aad
les
stc
pop
movs
sub
cmp
ja
mov
xchg
mov
inc
pop
(bad)
mov
daa
xor
inc
inc
fnsave
cmp
es
push
pop
mov
sub
xor
mov
(bad)
pushf
and
push
stos
xor
stos
jmp
arpl
dec
std
add
setl
pop
aad
cmp
shl
(bad)
in
fisttp
jae
and
daa
sti
add
inc
repnz
pop
jb
pop
call
and
movs
out
stos
in
shr
pop
push
mov
inc
push
mov
mov
test
and
lahf
push
xchg
push
xor
pop
adc
scas
clc
inc
push
add
cmp
pop
cmc
cs
sub
(bad)
aam
add
dec
mov
repnz
repnz
cmc
daa
std
es
daa
jg
pop
lahf
xchg
jns
loope
dec
jp
xchg
xchg
in
sahf
in
je
fld
and
sbb
lahf
dec
in
adc
sbb
lods
sar
sub
xchg
retf
dec
aam
shl
aad
dec
mov
pop
std
mov
test
in
adc
mov
lea
inc
mov
mov
mov
adc
pop
dec
dec
dec
add
loopne
xchg
(bad)
mov
jmp
mov
and
lods
gs
and
push
in
lea
push
inc
mov
sahf
mov
ret
rol
cmp
loop
ja
cmp
icebp
addr16
xchg
push
cmp
cmp
dec
popf
push
arpl
or
(bad)
jb
cmps
pop
push
loope
out
cwde
mov
cmps
push
dec
leave
popf
adc
xor
cs
xchg
push
outs
mov
add
test
in
stos
sbb
bndldx
cwde
mov
cmp
dec
inc
mov
fdiv
cmp
lahf
adc
pusha
mov
imul
in
test
fwait
call
mov
nop
or
lods
sbb
jnp
dec
pop
sbb
stos
sub
mov
xchg
sbb
stos
popf
div
adc
pop
pop
mov
and
jo
dec
sahf
mov
mov
shl
inc
hlt
test
xchg
aaa
mov
cdq
and
(bad)
and
xor
pop
scas
and
scas
xchg
hlt
sti
sbb
jbe
xchg
loop
js
int3
jns
cmp
xchg
jmp
repnz
jns
push
arpl
mov
pushf
jno
jle
dec
mov
mov
shl
cmp
jne
shr
jb
jae
jmp
loop
jl
movs
pop
sbb
clc
dec
mov
int
lods
outs
xchg
sbb
xchg
pop
arpl
inc
add
std
sahf
sub
pusha
pop
rcr
inc
loope
dec
bound
mov
(bad)
mov
mov
or
xor
mov
push
mov
dec
or
push
mov
push
rol
(bad)
xor
je
dec
inc
cmp
jle
jmp
rcr
or
mov
push
sbb
ret
jl
outs
(bad)
and
bound
lods
dec
xchg
sar
in
gs
push
and
pop
inc
sbb
aam
adc
push
retf
popf
mov
pop
lds
push
mov
int3
inc
add
jo
xchg
(bad)
mov
bound
cmps
leavew
xchg
cli
mov
inc
loope
outs
mov
mov
sub
fmulp
lahf
fisttp
cwde
addr16
cmp
xor
jbe
shl
sbb
jae
jno
sub
push
hlt
loopne
mov
enter
loope
and
(bad)
cmp
js
inc
push
or
aad
pop
add
cwde
adc
xlat
inc
repz
xchg
mov
mov
int
inc
mov
inc
ret
jmp
cdq
mov
movs
mov
lods
fst
es
push
cmp
and
cld
movs
xor
outs
cmp
mov
jmp
retf
mov
sbb
fdivr
sub
test
xchg
push
and
arpl
mov
cwde
sub
pop
cdq
scas
cmp
stos
loop
dec
out
clc
xor
sbb
push
push
pushf
test
movs
addr16
pop
mov
jecxz
jp
or
lds
cmps
cmps
test
mov
push
mov
arpl
mul
(bad)
xlat
(bad)
mov
or
push
adc
mov
xchg
outs
int
or
push
push
dec
sub
(bad)
out
popf
stos
pop
movs
mov
xchg
sub
pushf
mov
jo
clc
pushf
shl
push
xor
mov
add
push
ror
add
xchg
xor
retf
or
pop
xlat
sahf
repz
sub
in
fstp
mov
inc
adc
mov
push
shl
or
pop
mov
iret
xchg
shr
dec
inc
call
stc
push
ins
xor
loope
out
xchg
push
int3
jbe
cli
sub
je
scas
fst
xor
mov
xchg
movs
and
movs
(bad)
and
loopne
adc
xor
fs
mov
and
push
or
pop
adc
(bad)
jle
xchg
mov
je
or
lock
mov
xchg
adc
mov
xor
mov
add
xor
push
inc
or
aas
mov
enter
jo
pop
jg
int3
(bad)
xchg
mul
test
cmp
pushf
(bad)
not
cli
ins
mov
scas
out
mov
shl
or
mov
pop
retf
test
jge
and
jg
ja
daa
in
xchg
adc
sub
sub
retf
and
stos
adc
mov
dec
or
ret
push
dec
enter
pop
pop
or
aas
(bad)
(bad)
call
es
pop
test
xor
inc
pop
xor
dec
or
cmps
add
arpl
scas
xchg
outs
jmp
dec
div
mov
out
pop
sub
pcmpeqd
outs
pushf
add
ins
cmps
and
je
add
dec
neg
sar
jle
das
pop
fidivr
fcomi
and
enter
dec
sahf
stc
jge
push
add
xor
shr
dec
xchg
test
into
jle
mov
ja
loopne
dec
xchg
aam
in
or
adc
bound
mov
push
fisttp
clc
out
aad
inc
or
nop
retf
pop
mov
pop
xchg
cwde
inc
repnz
xor
dec
adc
in
xor
imul
sub
in
push
xchg
sbb
mov
pop
xchg
push
daa
test
loopne
jg
cld
jo
mov
mov
sar
imul
push
jp
mov
mov
mov
push
ret
clc
pop
out
mov
loop
jle
cld
sahf
push
add
je
sbb
das
push
cmp
cmp
in
jae
test
jmp
call
fisubr
aam
scas
test
or
and
cwde
jmp
jecxz
dec
das
adc
sbb
sbb
sub
and
paddusw
inc
bound
adc
dec
mov
mov
out
out
push
pop
push
add
sub
cmp
outs
addr16
push
inc
cmc
mov
jge
add
ss
jns
sbb
xor
sub
bound
dec
xchg
sbb
repz
pop
xchg
xchg
outs
push
jnp
jecxz
fstp
mov
ret
dec
enter
rcl
loop
xor
adc
dec
fdivr
enter
sub
jo
jge
inc
sbb
pop
add
inc
cmp
xchg
or
push
in
push
enter
test
mov
out
xor
adc
mov
outs
loopne
sahf
sbb
mov
xlat
shld
and
mov
aam
jl
ret
mov
cmp
rcr
icebp
cmc
or
pop
push
js
std
xchg
mov
xor
jmp
es
or
adc
push
iret
sbb
outs
test
into
pop
sub
adc
stc
shl
push
adc
push
loopne
inc
jns
inc
inc
dec
mov
and
push
not
ret
jnp
cwde
dec
lds
push
aaa
sbb
push
lds
and
xchg
cmp
dec
ins
or
xor
mov
and
in
mov
and
in
inc
cmc
and
adc
push
push
scas
and
and
adc
inc
fild
sti
cwde
call
xor
sub
scas
dec
xor
adc
jp
enter
sbb
inc
push
imul
retf
xchg
test
repz
xchg
gs
xchg
int
jl
ja
loop
mov
or
test
xlat
cld
ret
in
loope
add
inc
gs
inc
std
mov
imul
sub
in
ror
pop
push
fidivr
inc
and
cs
stc
or
(bad)
in
ja
mov
aad
pop
imul
out
in
pushf
jb
mov
xlat
cmp
arpl
inc
icebp
sub
jl
inc
inc
out
or
and
frstor
sbb
mov
pop
mov
clc
xchg
call
xchg
cmps
leave
cwde
fdivr
outs
sub
std
xchg
and
push
inc
(bad)
out
push
lds
sub
pop
mov
and
gs
rcl
jl
lods
and
add
sbb
mov
mov
xchg
adc
push
popf
jmp
movs
mov
hlt
sbb
lds
out
(bad)
xor
repnz
inc
xor
mov
xor
pop
sub
cld
enter
sbb
call
jae
add
mov
stos
sub
stos
pop
lods
and
mov
xchg
test
mov
cld
mov
call
dec
and
jbe
push
rol
pop
xor
fimul
loop
jl
jmp
push
popa
jp
scas
mov
or
mov
arpl
mov
push
enter
push
comiss
and
push
addr16
cmp
sub
xchg
push
add
dec
and
add
jmp
push
dec
mov
mul
or
pop
inc
int
xchg
mov
sar
adc
xor
add
ret
pop
sar
mov
dec
mov
test
sbb
mov
ffree
dec
out
mov
xor
sbb
xchg
xchg
div
sbb
inc
in
jge
adc
arpl
sbb
dec
repz
jmp
mov
repz
xor
mov
call
adc
push
aas
xor
or
ds
mov
in
inc
sbb
pop
xchg
(bad)
ss
xchg
and
sub
inc
sbb
pusha
xlat
rcr
adc
cmp
(bad)
and
stc
dec
jb
jo
jae
dec
stos
sub
push
push
(bad)
sbb
mov
push
or
sahf
push
test
repnz
test
jge
fwait
in
and
pusha
xor
daa
out
and
lods
sub
or
pop
call
xchg
pop
dec
dec
pop
lds
or
popf
sbb
jo
dec
sub
xlat
mov
inc
nop
xor
outs
mov
and
xor
pusha
mov
add
in
mov
pop
pop
add
jo
stos
stos
test
jg
jnp
mov
mov
add
xchg
fucomip
fisub
fcomp
into
popf
and
mov
dec
mov
pop
mov
sub
fmul
push
adc
xchg
cmp
dec
jmp
add
sub
ret
jmp
xor
pop
(bad)
adc
dec
fwait
into
jge
pushf
jge
mov
jg
cmp
xor
mov
jecxz
pop
add
jbe
add
lods
mov
dec
aad
or
mov
mov
and
dec
adc
in
sbb
stos
repnz
loopne
pop
mov
(bad)
push
lock
pop
xchg
dec
add
cdq
cmp
psubd
sahf
pop
inc
mov
mov
or
div
hlt
cmps
pop
mov
pushf
or
jae
xchg
and
jmp
in
sub
cmp
jge
xchg
popa
pop
mov
in
retf
xor
sub
cmp
lock
rcl
push
(bad)
mov
add
call
(bad)
and
out
sub
lock
popf
imul
jnp
dec
mov
hlt
mov
aam
es
mov
les
hlt
push
xchg
dec
ss
(bad)
fld
imul
fidiv
popa
or
xchg
push
cmp
sbb
inc
(bad)
mov
adc
out
addr16
or
mov
loop
popa
mov
ficomp
lods
push
adc
mov
inc
and
mov
sub
jns
(bad)
test
xor
(bad)
retf
jb
test
xchg
imul
mov
call
xchg
push
xor
or
ds
jno
in
jo
jns
sahf
in
and
xchg
clc
ret
sbb
imul
sub
aad
push
mov
push
push
icebp
dec
pop
icebp
int
inc
imul
and
in
xor
push
xor
inc
dec
mov
clc
xchg
movs
xchg
push
fild
sbb
add
movs
mov
xor
movs
dec
inc
fsubr
retf
xchg
adc
jne
jg
cmp
call
xor
pop
add
movs
lea
adc
push
cmp
cld
pop
rol
ror
nop
imul
mov
sub
cmp
ins
popa
in
or
or
cmp
in
shl
add
pop
cmp
(bad)
cmp
ins
push
cmps
xchg
sub
lea
fst
xor
out
cmp
ret
sbb
xchg
leave
mov
sahf
sbb
(bad)
scas
je
das
cmp
jne
jmp
fcomp
loop
push
jno
mov
sbb
into
ficom
rcl
and
pop
mov
mov
popa
js
xchg
popf
or
sub
push
inc
xchg
push
or
mov
jae
pop
mov
dec
jmp
xchg
mov
xor
mov
or
das
add
fwait
lods
mov
sbb
sbb
push
ficom
into
xor
ret
mov
and
sar
jg
add
push
push
outs
out
xchg
inc
push
cmp
mov
cmp
xchg
push
xchg
or
inc
or
ret
fwait
movs
mov
push
ds
sbb
out
leave
xchg
inc
aaa
cmp
xchg
(bad)
scas
ss
push
mov
shl
inc
and
cwde
inc
rol
cmps
inc
lds
int3
add
movs
out
push
scas
mov
stos
push
jb
lds
int3
ret
popa
lods
pop
dec
sbb
jo
inc
mov
xchg
test
dec
push
dec
cmps
xor
and
mov
shr
dec
daa
cmp
push
test
(bad)
mov
shr
cs
cmovge
rcl
cmc
lahf
and
lods
adc
xor
xor
xchg
loope
push
sub
or
ficomp
int
and
retf
loopne
sbb
aad
mov
push
jge
dec
xchg
inc
and
mov
mov
pop
push
int
sub
or
cmp
xchg
sahf
jnp
movs
pop
add
push
imul
(bad)
lods
xchg
inc
or
jbe
pop
add
mov
(bad)
in
ret
push
mul
aad
popa
mov
mov
mov
loop
test
adc
jl
loop
push
repz
idiv
out
sbb
aad
cmp
ds
sub
inc
je
mov
jbe
dec
jb
add
ds
sub
pop
call
(bad)
retf
mov
mulps
mov
outs
pop
dec
repz
dec
or
repnz
mov
fs
sbb
adc
and
lds
sar
scas
scas
imul
sub
inc
sub
dec
leave
mov
call
adc
mov
sahf
inc
ins
jl
push
dec
or
js
sub
mov
gs
imul
mov
sub
movs
cmp
(bad)
add
ss
sub
and
cdq
neg
sahf
in
cs
ss
inc
iret
jae
icebp
jnp
sahf
add
aas
es
rcl
and
call
in
loop
dec
xor
stos
pop
or
(bad)
jp
jne
cdq
dec
or
mov
inc
dec
movs
sub
push
ret
sub
xor
mov
stos
jb
push
mov
(bad)
inc
dec
(bad)
jp
scas
xor
cld
dec
jo
fstp
test
cmp
xchg
sub
mov
sub
ret
inc
imul
movs
xchg
movs
fisubr
in
mov
fs
fisub
cdq
dec
mov
sub
or
aaa
mov
jmp
jne
(bad)
fld
xchg
test
movs
cmps
jecxz
and
cdq
pop
faddp
xor
ins
mov
sbb
xchg
loop
add
int3
dec
daa
sub
mov
cmp
(bad)
stc
std
in
cmc
mov
xchg
inc
scas
jecxz
sub
add
ins
inc
cmps
jbe
addr16
mov
sub
add
(bad)
or
ss
add
mov
pushf
sub
nop
retf
addr16
dec
mov
xor
push
sbb
loope
jl
xchg
loope
cli
or
test
les
jmp
jecxz
dec
cmp
(bad)
jbe
test
xchg
sbb
mov
jbe
mov
lock
in
(bad)
jno
push
and
das
mov
jp
addr16
repnz
jb
lahf
fisttp
arpl
xlat
out
idiv
cli
or
inc
js
mov
int3
aad
jp
jno
das
das
sahf
rol
adc
mov
or
lods
sbb
and
pop
(bad)
sti
push
mov
push
sbb
mov
jle
push
jge
mov
in
loopne
and
mov
sbb
pop
push
ins
in
adc
repz
rcl
inc
mov
stc
xor
inc
xchg
add
push
fcmove
sbb
iret
jb
inc
aam
std
test
fisubr
das
mov
or
stos
cwde
cmps
mov
adc
mov
inc
and
cmp
imul
sub
mov
or
xchg
cmps
arpl
push
sbb
(bad)
or
push
mov
xlat
push
mov
inc
or
xor
retf
mov
dec
add
jle
push
mov
jmp
adc
adc
push
mov
push
mov
test
movs
in
xor
pop
fcom
sbb
aaa
nop
cmps
and
repz
test
dec
mov
jmp
outs
mov
ret
ss
pop
mov
jmp
mov
outs
xchg
test
sub
mov
ins
mov
movs
jl
shl
call
ds
mov
pop
or
jle
push
stc
push
mov
jmp
sub
cdq
lahf
jae
xchg
outs
(bad)
in
hlt
add
inc
retf
add
xor
test
dec
jbe
inc
jmp
add
sub
mov
pmuludq
test
leave
inc
(bad)
jecxz
push
xor
and
(bad)
xor
push
pop
xchg
push
sar
loopne
and
icebp
ss
retf
int3
xchg
jae
mov
(bad)
xor
stos
add
leave
mov
cmp
rol
clc
push
fcom
call
jge
add
and
or
dec
push
les
stc
mov
jmp
fisttp
mov
jae
retf
out
jge
(bad)
jle
inc
pop
in
gs
lods
imul
movs
or
dec
xchg
cld
cmp
ficomp
or
dec
sahf
sbb
and
xchg
aad
nop
mov
popa
jp
hlt
rcl
mov
jg
adc
ins
cmp
xor
lds
dec
and
popf
add
ret
loope
fwait
jecxz
sub
add
ror
adc
fcomp
jne
repnz
or
ds
push
inc
in
mov
xor
test
aad
push
push
imul
mov
adc
retf
loope
dec
inc
out
test
shl
cwde
mov
pop
pusha
and
stc
cmc
mov
dec
push
push
and
cmc
push
mov
cli
and
mov
rcr
push
repz
mov
push
pop
cmp
dec
xor
add
adc
(bad)
pop
xchg
and
inc
bswap
and
add
mov
sti
or
add
add
cmps
mov
das
xchg
pop
addr16
stos
push
punpcklbw
dec
js
bswap
aam
adc
jb
mov
daa
nop
repnz
out
lea
cmp
lahf
(bad)
lods
nop
sub
sbb
mov
cdq
pusha
outs
jge
adc
jae
imul
or
add
pop
mov
cmc
jno
mov
pop
adc
aas
inc
stos
bound
in
mov
fld
add
call
dec
jne
in
je
push
or
ins
or
fucomp
push
jle
add
jp
test
sahf
sti
dec
fist
push
loop
xlat
(bad)
btc
mov
shl
das
into
mov
adc
cmp
fsub
stos
jg
inc
inc
inc
inc
dec
sbb
inc
push
lea
in
jmp
jno
pop
xor
call
inc
inc
out
bound
dec
mov
jns
xchg
test
adc
inc
stos
xchg
aad
push
fstp
loope
out
or
jl
popa
and
out
adc
mov
sti
les
inc
push
pop
nop
in
dec
jns
mov
jg
adc
xchg
and
xchg
inc
shl
xlat
into
mov
into
mov
jmp
jnp
mov
test
(bad)
jle
pop
arpl
into
out
mov
rol
pop
repnz
push
movs
xchg
in
cdq
mov
popa
and
push
out
into
cmp
pop
jle
addr16
mov
add
outs
pop
mov
mov
mov
sub
and
jmp
sbb
inc
cmp
retw
or
into
xor
pusha
ds
pop
mov
mov
sbb
out
or
les
(bad)
lods
pop
aam
mov
(bad)
jmp
mov
dec
xchg
jne
adc
xchg
cmp
js
fwait
jno
adc
shl
inc
mov
iret
xor
cmp
xlat
mov
jg
sub
sbb
pop
int3
mov
imul
inc
loopne
xor
dec
hlt
(bad)
daa
xchg
xlat
push
js
sub
jns
sub
shr
dec
mov
fdivr
sti
sbb
push
sar
push
sets
lea
jne
and
daa
(bad)
jns
(bad)
aad
sub
mov
sub
xchg
xchg
mov
xor
test
pop
bound
push
mov
mov
jp
mov
sub
daa
sub
std
daa
sbb
test
add
pop
shl
inc
and
and
and
std
pop
data16
neg
icebp
dec
popf
into
mov
dec
dec
in
jae
mov
rol
out
and
fisubr
aam
dec
clc
dec
inc
std
xor
sub
push
jmp
popf
(bad)
popf
dec
cmc
bound
stos
and
mov
push
mov
pop
mov
adc
mov
cmps
jmp
(bad)
dec
sub
and
ficom
jmp
fcmovnb
jne
xor
iret
call
sahf
aam
push
mov
xor
xchg
mov
or
retf
sar
addr16
and
call
fs
(bad)
cli
sahf
jge
jecxz
arpl
cmp
(bad)
xor
dec
or
loope
jae
(bad)
test
sbb
adc
dec
pushf
mov
bound
iret
pop
out
jmp
pop
les
pushf
mov
and
popa
dec
test
inc
pop
into
mov
pop
push
into
das
xor
gs
cmps
and
pop
stos
mov
sbb
cli
adc
pop
iret
mov
jp
(bad)
sahf
(bad)
mov
jp
jnp
mov
mov
and
cs
adc
scas
test
cwde
jle
sbb
mov
mov
inc
aad
cdq
dec
outs
push
mov
sbb
inc
popf
stc
cli
mov
cmp
(bad)
adc
add
stos
mov
out
into
ds
in
sub
xchg
clc
lock
gs
sbb
cmp
ss
or
rcr
mov
das
and
pop
outs
nop
fwait
mov
ins
je
shl
(bad)
imul
adc
out
adc
movs
clc
inc
nop
inc
clc
or
xchg
sub
dec
inc
mov
sub
mov
neg
in
mov
lahf
pop
inc
pop
and
push
mov
int
(bad)
ins
cmps
fst
rcl
mov
jg
jbe
cld
mov
test
mov
mov
sar
test
in
add
mov
mov
xchg
es
mov
rcr
mov
add
adc
dec
sub
lock
mov
in
pop
mov
(bad)
ror
imul
int
mov
cmp
ror
lea
popa
lods
aas
gs
sub
je
out
icebp
push
pop
scas
xor
aam
data16
loop
xchg
xor
inc
dec
lea
(bad)
push
jmp
outs
into
sbb
pushf
shl
enter
adc
xchg
sub
inc
mov
bound
enter
iret
jae
sbb
out
and
xchg
ins
ja
xlat
rol
shr
inc
jp
in
(bad)
mov
xor
mov
fs
aaa
cmp
repz
mov
cmp
sbb
mov
push
jp
repnz
dec
pop
in
adc
ds
xchg
and
xchg
fldcw
pop
lock
cmp
mov
pusha
or
pop
cs
mov
mov
push
and
xchg
xchg
sbb
lea
mov
and
dec
(bad)
or
icebp
hlt
rcl
pop
stos
pop
cmps
xchg
jge
jmp
and
cmp
jne
pop
loop
xchg
or
mov
aam
mov
nop
outs
mov
sbb
fmul
mov
cmp
mov
lds
xchg
pop
out
dec
lds
iret
pop
adc
scas
xlat
or
inc
scas
sbb
fcom
inc
add
(bad)
xchg
and
repz
enter
gs
mov
dec
cmc
arpl
xchg
packsswb
add
pushf
sbb
pop
(bad)
mov
pop
and
push
lds
mov
cmp
test
loop
data16
pop
or
jno
ret
lods
iret
mov
mov
jno
mov
cmp
add
pop
mov
sub
jns
scas
int3
outs
push
and
push
or
test
inc
stos
outs
or
scas
mov
rcr
xor
shl
sbb
and
mov
adc
cmp
mov
pop
les
mov
fldenv
test
test
adc
fld
jmp
fwait
adc
hlt
add
add
les
ds
std
mov
add
lock
and
pushf
addr16
push
ss
or
and
mov
jecxz
adc
push
push
retf
mov
sbb
mov
jge
or
cdq
iret
pop
or
push
out
nop
ja
std
loop
lock
test
sbb
jbe
jb
in
mov
sti
pop
push
xor
mov
jbe
sub
inc
(bad)
adc
cmp
outs
jmp
mov
pusha
aas
or
inc
mov
push
loopne
or
jb
dec
cwde
call
adc
rcl
in
out
adc
repnz
or
loop
ds
and
aaa
and
lahf
scas
stos
xchg
inc
movs
sub
sbb
xchg
adc
sbb
and
ja
cmp
jns
ja
(bad)
retf
int3
leave
fimul
pop
jmp
test
leave
push
push
sub
dec
jae
icebp
cdq
out
call
jmp
add
inc
add
xor
adc
(bad)
adc
mov
lea
dec
xchg
iret
sub
test
pop
aam
xchg
les
pop
push
mov
rcr
shl
fmul
outs
outs
and
retf
jmp
dec
rcr
(bad)
imul
inc
sub
jg
mov
dec
in
data16
sub
xchg
push
and
mov
pop
sub
pop
push
mov
sbb
mov
pop
dec
cmp
xchg
test
xchg
movs
ja
mov
mov
inc
push
lods
ja
test
xchg
jne
sahf
xchg
popf
sbb
xor
mov
xchg
and
push
lsl
pop
fdivp
mov
movs
sbb
mov
add
jmp
cmp
je
cmc
mov
icebp
push
push
xor
and
pop
jle
pop
add
sbb
or
inc
shl
and
mov
fld
sbb
mov
or
adc
push
mov
push
in
mov
pop
adc
jb
add
cwde
fmul
adc
into
lea
pop
mov
jmp
mov
xor
xchg
out
jge
xor
cmp
ror
or
test
sub
fld
mov
add
dec
ins
push
mov
xor
in
push
into
jne
clc
and
aaa
inc
mov
mov
push
mov
out
int3
cdq
movs
in
loopne
jns
mov
sbb
fs
mov
mov
or
pop
loopne
jmp
or
xchg
jmp
stos
cmps
out
push
(bad)
sti
xchg
aas
rol
repnz
aad
sub
and
push
sub
out
inc
push
sub
cmp
push
aam
jne
push
fs
sar
sub
fiadd
loope
and
daa
cdq
fdiv
push
in
sub
js
or
add
retf
sti
sti
sbb
test
or
mov
push
sub
mov
sub
lahf
or
mov
jg
fld
mov
lahf
mov
movs
outs
(bad)
jnp
je
shr
mov
outs
mov
aaa
xchg
pop
idiv
out
test
pop
sti
mov
cmp
jns
add
push
push
mov
mov
xlat
out
lds
hlt
call
fwait
das
adc
xchg
fstp
sub
pop
inc
scas
and
mov
jge
mov
dec
pop
jo
xchg
mov
mov
(bad)
stc
mov
je
rol
cmps
push
sub
xor
repnz
sbb
mov
mov
lea
adc
and
sbb
push
enterw
push
mov
pop
add
ds
loop
outs
lods
push
int
pop
mov
xchg
lds
stos
cmps
nop
shr
fst
mov
addr16
pop
add
mov
and
dec
fidiv
jl
jne
and
mov
(bad)
sbb
pop
pop
mul
pop
cmp
ret
test
pop
or
xor
cli
(bad)
ror
sbb
xor
sbb
aam
pop
imul
hlt
stc
and
xchg
sbb
pop
mov
retf
pop
bound
in
push
xor
sbb
xor
or
frstor
push
jne
dec
imul
jl
pushf
movs
push
pushf
add
mov
not
sub
icebp
(bad)
push
int
movs
aam
retf
stc
push
cli
mov
add
sub
or
out
mov
jl
xlat
movs
cmp
leave
sub
repz
adc
cmp
cmps
dec
mov
call
test
sub
leave
xchg
inc
or
pop
aas
aas
or
leave
fisubr
ret
add
lods
xchg
mov
les
nop
lods
xchg
push
mov
into
cmp
push
sti
in
mov
ret
push
jmp
and
jne
ret
cmp
mov
dec
sub
(bad)
jns
xor
sbb
push
mov
call
pop
jp
jnp
mov
mov
clc
pop
loope
dec
mov
cli
mov
mov
jno
push
js
sub
int3
retf
mov
xchg
in
pop
(bad)
rol
repz
adc
dec
cmp
sub
addr16
jp
add
dec
shr
push
cli
pop
or
imul
xchg
lock
in
cdq
mov
pop
rol
(bad)
in
dec
fs
(bad)
(bad)
addr16
jmp
repz
aad
cdq
jb
je
cmps
and
sbb
fwait
ins
cli
mov
cmp
sar
hlt
jmp
movs
je
adc
jmp
mov
cmp
in
rol
push
xchg
in
shl
test
test
cli
xchg
ds
aas
out
or
mov
fcmove
nop
int
addr16
mov
sbb
or
pop
mov
pop
ss
jo
jmp
rcl
mov
enter
add
addr16
sbb
das
fdiv
jp
pushw
movs
push
inc
cmc
and
stc
outs
rcl
imul
movs
adc
bnd
sar
test
inc
mov
stc
push
xchg
push
sub
jmp
push
jb
sub
adc
cmp
in
in
jnp
pop
ror
rcr
or
sub
push
cs
mov
not
jecxz
sub
lods
pop
mov
inc
xchg
xchg
in
mov
aas
popf
std
mov
pop
in
sbb
in
or
cmps
test
iret
xor
or
(bad)
pop
scas
jg
rcl
cmps
jl
sub
into
hlt
test
inc
add
inc
outs
fdiv
mov
or
sub
push
or
adc
mov
cmp
or
movs
shr
and
xchg
push
cmp
xor
jmp
push
mov
or
(bad)
repz
arpl
mov
cld
mov
and
inc
repnz
aam
call
cmp
pop
mov
scas
xchg
mov
mov
sub
in
std
mov
jmp
dec
hlt
push
mov
mov
pop
ret
mov
dec
cdq
not
jnp
loope
cdq
inc
test
int
inc
pop
mov
cdq
sahf
jnp
mov
stos
add
inc
stc
inc
(bad)
fmul
mov
add
hlt
xor
and
hlt
push
pop
push
ins
add
push
dec
pop
or
ret
push
arpl
cli
dec
leave
mov
or
sbb
cmp
jg
hlt
add
cmp
popf
call
jns
lea
mov
or
sub
aas
loop
jl
xchg
adc
pop
addr16
jo
daa
cmp
cs
loope
daa
sub
lods
pushf
ins
repz
(bad)
test
iret
inc
(bad)
fsub
xor
or
or
cmp
cmp
(bad)
shl
sbb
push
mov
cs
gs
rcr
lock
mov
pop
pop
mov
adc
ins
cmp
push
add
call
jns
cmc
mov
stos
sbb
push
dec
sbb
in
cmp
adc
push
push
mov
sbb
sbb
mov
or
(bad)
in
imul
in
jl
repnz
lods
popa
sbb
add
dec
pop
or
pop
jle
xor
or
pop
das
cdq
sub
mov
sar
and
push
cmp
hlt
(bad)
sahf
xchg
rcr
jp
jo
and
popa
ror
jne
test
(bad)
clc
lods
and
add
xchg
lahf
leave
inc
fbld
jmp
popf
mov
(bad)
into
sti
cmps
mov
mov
sbb
inc
mov
idiv
rcr
jg
sub
xlat
ins
pushf
aam
sub
mov
adc
and
imul
inc
(bad)
out
and
shl
or
nop
es
sbb
nop
push
retf
leave
ja
in
adc
push
cwde
pop
(bad)
dec
xchg
pop
inc
mov
mov
pushf
xor
and
push
lods
mov
mov
mov
xchg
into
xor
fidivr
lods
aad
dec
imul
or
data16
inc
in
mov
xor
nop
aas
xchg
adc
push
mov
cmp
jae
add
pop
shl
xor
jmp
sbb
loop
cmps
dec
push
fadd
ins
(bad)
push
movs
fdecstp
xor
lock
pop
cwde
sub
movs
popf
aad
inc
call
popf
je
imul
int3
push
pop
or
stos
jb
inc
push
jno
inc
lock
fstp
jmp
ret
push
ret
add
loop
mov
in
mov
test
jp
sub
xor
mov
sub
ja
sbb
lods
jno
xor
fiadd
pop
mov
leave
retf
sub
sbb
mov
int3
cmp
mov
loopne
dec
lea
cmps
out
push
int
outs
nop
jb
pop
cwde
push
test
sub
lahf
popa
sbb
mov
pop
int3
sti
sub
mov
and
cli
test
scas
cmp
std
pop
push
pop
sti
cmp
pop
(bad)
outs
mov
jl
adc
xor
pop
or
adc
push
cmp
(bad)
xchg
push
leave
ds
scas
sub
sbb
lea
jp
mov
jmp
sub
jbe
push
test
fsub
mov
and
mov
daa
cmp
pop
sbb
adc
gs
or
call
dec
pop
(bad)
retf
dec
gs
call
xor
(bad)
sbb
push
dec
(bad)
pop
jmp
sub
lea
jbe
xor
aad
mov
cmp
or
xor
mov
daa
sahf
sub
adc
stc
xlat
pop
movs
or
sub
lock
lahf
aas
dec
call
push
pop
stc
sti
lods
jg
dec
jge
cwde
dec
pop
mov
jp
std
outs
shl
into
and
stc
cwde
dec
push
fcom
hlt
dec
xchg
push
and
mov
fsub
mov
inc
mov
ins
movs
pop
push
dec
stos
and
cmps
mov
adc
jnp
js
in
jbe
jg
pop
mov
mov
push
pop
and
les
pusha
pop
jbe
loope
out
das
stos
inc
(bad)
clc
int
pop
push
iret
pop
jns
add
call
jl
sub
pop
push
clc
movs
dec
sti
test
adc
mov
push
ins
bound
call
out
lahf
jo
repz
imul
xor
add
ret
cmp
pop
int
sub
aaa
test
daa
pusha
das
call
jae
xchg
test
xchg
pop
pushf
ror
out
push
pop
xchg
sbb
int
(bad)
and
xlat
nop
xor
fs
in
cdq
addr16
int3
movs
mov
cmp
sbb
adc
shr
cmps
cmp
mov
mov
jbe
jmp
cmp
sub
lahf
mov
and
inc
aas
call
in
out
dec
test
jge
add
test
push
ret
in
jmp
xor
dec
cmp
out
cmp
je
lea
je
mov
mov
xor
cmp
and
xchg
cmp
std
adc
rcl
jmp
icebp
pop
(bad)
cmp
push
out
mov
das
or
xlat
adc
shl
cli
in
mov
push
fld
in
call
popfw
loope
(bad)
and
adc
sub
mov
and
cmp
and
add
ror
out
push
cwde
pop
jne
fcomp
inc
xchg
cdq
cmc
xchg
cmps
or
orps
pushf
out
jo
dec
push
adc
push
sbb
call
jno
push
scas
sbb
test
sub
sbb
jmp
clc
enter
mov
sti
mov
pop
jl
fnstenv
mov
xor
sub
dec
sbb
pop
add
xor
pop
sub
jb
out
mov
pop
jg
pop
xor
jnp
mov
sbb
push
sbb
inc
idiv
xor
push
movs
cwde
daa
rcr
add
mov
xor
(bad)
adc
push
adc
add
movs
shr
push
jge
pop
or
cmp
xor
(bad)
xchg
cmps
pop
call
fnstenv
jne
mov
leave
rol
inc
loopne
sub
fdivr
xor
dec
or
jno
test
stc
test
das
dec
adc
inc
add
ror
std
out
imul
and
stos
cmp
mov
xlat
fcmovbe
xor
xor
xchg
sub
loope
std
mov
mov
dec
aad
fmul
pop
test
cmp
mov
xchg
sbb
popf
or
fadd
sub
or
loope
data16
retf
(bad)
popa
and
mov
mov
cli
outs
jo
fadd
jmp
xchg
mov
in
test
mov
int3
xor
xchg
sbb
arpl
and
and
push
mov
pushf
sbb
mov
iret
pop
inc
push
lods
(bad)
pop
sub
imul
push
jne
test
mov
out
ss
cmps
ds
call
arpl
mov
data16
rcr
jae
push
les
in
xor
cmp
dec
sub
fcmovnu
push
ret
stc
cmps
fisub
adc
add
dec
push
sbb
sub
ins
xchg
cmp
(bad)
cs
mov
push
mov
bound
stos
ret
cli
cdq
dec
inc
cwde
or
test
in
pop
sub
cmp
inc
jg
and
hlt
pop
popf
bound
xor
les
push
jmp
(bad)
cmps
jecxz
sub
fistp
jecxz
js
xchg
push
les
inc
add
jle
(bad)
fidiv
je
push
cmps
aas
les
aaa
aam
xor
inc
fsincos
outs
fcmovnbe
dec
add
push
pop
sub
inc
mov
out
call
imul
arpl
jo
adc
push
(bad)
stc
sbb
pop
mov
frstor
pop
push
aaa
in
aaa
call
push
pop
fisttp
add
sbb
mov
xchg
adc
push
xchg
add
adc
sub
je
fild
(bad)
push
cmp
icebp
jp
jecxz
sub
or
gs
in
mov
push
pushw
and
inc
jg
lahf
retf
jg
out
test
jmp
jne
inc
cmc
mov
das
inc
mov
jne
adc
inc
xor
loop
pop
je
mov
pop
out
sbb
scas
xchg
rcr
iret
into
(bad)
fld
call
fs
sbb
mov
movs
cmp
adc
xchg
stos
stos
pop
pop
mov
outs
jle
aas
sbb
mov
mov
(bad)
cs
sub
add
push
xchg
or
add
(bad)
cli
sbb
xchg
jo
hlt
jno
push
mov
pop
or
test
cmps
stc
enter
aaa
ins
std
ds
add
loope
lea
inc
dec
out
mov
int
outs
xor
inc
(bad)
cmc
nop
mov
add
cli
push
jb
push
xchg
or
jnp
frstor
outs
cdq
fs
pop
push
jecxz
jl
js
adc
jno
push
fcomp
outs
xor
jae
in
mov
xchg
mov
hlt
lods
jmp
clc
fwait
push
imul
hlt
repz
mov
stos
fiadd
push
jo
pop
les
xchg
mov
in
sub
push
mov
cmp
scas
mov
call
sti
jnp
pop
outs
sub
call
push
cmp
add
inc
into
inc
shl
jno
and
push
mov
enter
int
enter
cmp
in
test
push
and
adc
cwde
mov
test
ins
cmp
lods
adc
xchg
imul
stos
ds
inc
xor
mov
test
sbb
lods
push
mov
mov
xchg
shl
aaa
and
mov
mov
adc
or
test
repz
sub
repnz
push
outs
mov
xor
adc
xchg
inc
cld
scas
adc
lods
push
sbb
scas
mov
nop
cmp
ja
mov
sbb
rol
jecxz
loop
mov
dec
scas
inc
fcom
(bad)
mov
mov
jae
cs
adc
jecxz
mov
jb
add
das
jne
rol
arpl
mov
push
ins
das
cmc
mov
inc
cmps
xor
test
outs
fldcw
xor
gs
hlt
aas
inc
fwait
xchg
into
or
and
movs
imul
ja
fbld
and
xor
sub
add
scas
repnz
test
or
dec
jno
hlt
lock
cwde
ja
mov
inc
add
sub
xor
mov
pusha
mov
(bad)
das
ret
retf
add
or
ss
sbb
mov
lea
adc
aad
inc
mov
or
adc
test
sbb
jns
xchg
leave
adc
pusha
lahf
xor
dec
hlt
cmp
push
mov
ret
out
fdiv
in
rcr
add
jle
push
inc
jnp
adc
test
mov
cdq
inc
mov
(bad)
xlat
sub
ja
sub
mov
lea
dec
xor
cmp
cmp
rcr
mov
(bad)
out
sahf
jo
ins
mov
cmps
inc
fdiv
dec
shl
push
cmp
out
adc
ins
mov
push
ja
or
or
pop
loop
and
mov
mov
(bad)
rdseed
lahf
mov
cmps
call
fdivr
mov
(bad)
lds
mov
jne
lahf
xchg
rol
lods
jne
jmp
adc
loope
cmp
dec
mov
add
or
inc
jle
dec
imul
push
cmp
adc
push
(bad)
sbb
arpl
inc
pop
das
mov
lods
add
mov
mov
push
ins
lock
call
xchg
pusha
jecxz
ins
and
(bad)
ror
mov
add
aas
cli
sub
inc
(bad)
leave
outs
ret
stos
je
dec
lods
stc
sbb
inc
(bad)
jle
or
xchg
jo
pop
sub
in
and
aaa
ficom
ret
loopne
and
pop
or
adc
push
xlat
rol
mov
and
icebp
inc
adc
mov
(bad)
xchg
mov
jne
or
ins
ja
lock
dec
jo
jle
or
call
nop
in
jmp
fsub
add
in
in
inc
ja
mov
test
xor
jg
mov
lods
cdq
xor
pop
test
das
mov
das
sbb
sub
dec
out
inc
fwait
scas
out
test
jno
and
ins
push
scas
xor
and
test
sahf
inc
ja
dec
inc
test
daa
hlt
aad
fld
scas
in
stos
jnp
jo
out
xchg
movs
push
ins
shl
pop
fwait
mov
call
pop
pop
jo
shl
xchg
fmul
mov
mov
or
aam
xor
sbb
xchg
in
(bad)
retf
ja
jle
xchg
ins
stc
and
jecxz
aaa
test
push
push
inc
leave
mov
(bad)
mov
call
xlat
and
mov
push
pop
add
jmp
jmp
fdiv
xchg
inc
movs
ja
lods
mov
mov
push
cmps
outs
or
xchg
in
pop
mov
cmp
mov
mov
cmp
or
fs
adc
scas
mov
or
pop
icebp
aad
or
bswap
or
push
lock
sub
clc
not
dec
jmp
mov
cmps
cmp
xchg
ins
sub
daa
and
mov
adc
push
imul
shr
inc
add
or
jo
cwde
sbb
inc
mov
call
adc
fnstcw
gs
jo
add
jmp
adc
jbe
fsubrp
mov
ins
jmp
add
or
cmps
pop
mov
(bad)
or
ds
add
pop
(bad)
xor
push
pushf
mov
in
jl
fwait
int
fst
aad
imul
jne
and
add
sti
pop
test
adc
into
(bad)
shl
mov
mov
(bad)
cmc
cmps
popf
push
iret
dec
punpckhdq
movs
fldcw
(bad)
call
and
test
and
dec
mov
repnz
mov
enter
je
pushf
dec
pop
xchg
or
(bad)
push
pushf
cmp
inc
in
cmp
jp
adc
stos
inc
xchg
sbb
pop
inc
xchg
dec
out
push
adc
popa
iret
out
(bad)
clc
sub
sbb
mov
aad
les
das
imul
daa
daa
inc
sub
clc
mov
xor
inc
dec
out
hlt
push
cmps
mov
je
jnp
mov
in
ins
add
push
adc
stos
xor
neg
ror
rol
mov
adc
out
and
cmp
or
inc
shl
fiadd
imul
mov
movs
(bad)
or
jge
enter
jge
inc
cwde
or
sub
dec
mov
(bad)
std
xchg
fwait
cwde
mov
and
movs
test
lods
ins
out
sub
ss
outs
in
clc
sub
sar
mov
add
dec
or
icebp
or
gs
sub
lea
dec
sbb
test
xchg
sub
stc
pop
int3
aam
or
in
dec
push
and
lods
mov
xchg
jge
adc
or
fwait
and
inc
inc
shl
outs
pop
cmp
je
mov
push
or
out
jecxz
cmp
and
pushf
stc
sbb
mov
inc
mov
mov
cmp
cmp
dec
push
jecxz
sbb
int
ja
mov
cdq
in
or
cmp
out
lea
jle
xor
jmp
fisttp
mov
sbb
scas
and
sub
cmp
jno
cmp
sti
scas
push
(bad)
fld
jnp
xchg
imul
inc
fsubrp
jmp
sbb
mov
jns
cli
cmps
cmp
mov
(bad)
js
es
scas
int
rcr
shr
inc
sub
xor
and
mov
mov
adc
not
inc
add
or
fcomp
inc
add
(bad)
adc
loop
sbb
jmp
or
pop
mov
cmps
mov
loopne
(bad)
enter
aad
xchg
ins
pop
or
cs
in
cmps
jg
push
sbb
test
sti
loopne
jo
cmp
push
jp
adc
bound
std
(bad)
sbb
or
ss
dec
or
mov
add
jae
mul
and
sbb
scas
test
or
in
in
(bad)
fsubr
out
adc
push
imul
jo
ret
inc
jne
inc
fisttp
sbb
cmp
inc
lahf
loopne
pushf
lmsw
sbb
aam
adc
push
lods
push
push
outs
jp
out
adc
lds
xchg
outs
das
adc
shl
cmp
and
std
stc
fstp
(bad)
int
aam
dec
mov
or
cmp
outs
and
and
mov
jno
iret
mov
test
adc
aaa
shr
sub
mov
push
xchg
ror
div
add
enter
fldcw
stos
aas
in
idiv
repz
ficom
mov
inc
dec
mov
pop
xchg
mov
outs
sbb
jmp
shl
lods
in
mov
xchg
mov
mov
xor
dec
mov
out
jo
ss
xor
arpl
mov
cs
jl
jnp
cmp
sahf
and
adc
xchg
mov
rcr
js
aad
gs
push
adc
fcmovbe
es
xor
enter
pop
cmp
mov
jmp
cmp
cmc
aad
sub
sub
push
cli
inc
jmp
xor
and
inc
xchg
les
cdq
jmp
push
jp
in
xchg
out
sbb
xor
pop
adc
dec
xor
(bad)
and
movs
daa
ss
fstp
sub
movs
jo
jl
jle
cmp
popf
xlat
enter
sbb
aas
mov
xchg
dec
paddw
movs
rcr
pop
xor
pop
rcr
sub
mov
sbb
mov
and
cmps
jp
outs
push
cli
add
ins
test
ror
daa
cmp
add
jge
push
pop
out
das
mov
test
add
sub
ror
and
lds
push
call
out
add
mov
(bad)
adc
or
jg
repz
outs
xor
fwait
adc
std
dec
addr16
adc
ds
data16
xchg
xchg
push
sbb
jno
mov
(bad)
and
jge
aam
mov
sub
ins
mov
fimul
lds
mov
push
adc
fld
test
ss
icebp
sbb
xor
or
mov
dec
xor
je
psrad
mov
test
adc
jl
push
jnp
enter
icebp
xchg
ror
or
mov
je
iret
das
inc
je
jne
fmul
mov
and
xor
mov
push
mov
lds
retf
jae
pop
inc
mov
imul
shr
dec
jmp
jg
inc
imul
stos
cld
jmp
mov
jnp
pop
pop
movs
inc
test
sub
mov
test
cmp
mov
shl
retf
adc
inc
(bad)
mov
push
xchg
icebp
sub
int
stos
xor
and
test
lea
loopne
cmp
sbb
sbb
pop
(bad)
fcom
scas
sub
jmp
out
mov
push
mov
sbb
mov
lock
mov
ss
push
scas
sub
mov
xchg
addr16
scas
test
adc
adc
jmp
int3
or
xchg
push
mov
xchg
inc
lds
cwde
movs
adc
jmp
fs
sub
sahf
cs
nop
cmc
jbe
cwde
clts
sub
movsx
mov
cmp
inc
repz
mov
movs
arpl
shl
or
inc
sub
mov
mov
pusha
pop
jecxz
cld
xor
inc
add
shr
add
scas
sub
and
jmp
iret
jmp
test
pop
jb
int
shl
loope
movs
leave
dec
ds
push
cmps
lock
popf
out
fdiv
push
es
xchg
xchg
(bad)
int3
sbb
ret
popf
das
int
in
or
stos
shl
xchg
outs
pop
jns
cmp
sub
pop
call
ror
adc
mov
push
popf
fdivr
mov
sbb
ins
xchg
cmp
dec
stos
in
jns
loope
jnp
dec
dec
mov
sub
xor
adc
sbb
fimul
xor
or
xor
sbb
lock
movs
imul
sbb
pop
hlt
mov
mov
xlat
or
hlt
and
mov
pusha
outs
test
gs
cmp
leave
inc
lea
lods
retf
mov
or
shr
lea
add
cmp
loope
dec
call
outs
xchg
or
adc
mov
or
rcl
ret
push
cmps
cmps
adc
and
ss
xchg
or
(bad)
sub
imul
mov
lock
daa
jnp
sbb
iret
imul
popa
and
in
data16
push
test
ins
jg
ret
cld
fwait
retf
mov
mov
dec
shr
lahf
sub
out
push
retf
xchg
or
xchg
test
push
fist
add
rcr
rcr
push
in
loopne
aas
fs
ret
pop
gs
adc
push
lahf
shl
and
fisubr
in
fmul
(bad)
(bad)
adc
int
xchg
mov
adc
cmp
push
dec
or
pop
pop
and
outs
and
mov
jmp
cmp
sub
xlat
adc
lahf
pop
sbb
cmp
xlat
and
mov
adc
loope
sub
ds
ss
mov
and
cdq
jnp
fidiv
fucomi
dec
test
fisttp
test
mov
dec
inc
call
dec
out
dec
cli
cmp
cmp
(bad)
dec
pop
sahf
or
in
adc
mov
daa
frstor
mov
pop
in
enter
mov
xor
ficom
xor
(bad)
(bad)
cld
pop
lods
add
lea
(bad)
idiv
ret
cmc
mov
das
xor
fcomp
sub
bound
sub
xor
aaa
and
dec
jo
test
das
jmp
cdq
shl
arpl
jb
adc
retf
push
inc
pop
jmp
sub
in
js
mov
jge
push
shr
mov
fsub
ret
dec
daa
fld
xchg
mov
(bad)
pop
mov
loop
jo
lods
sahf
xor
movs
cmps
push
jp
daa
sbb
in
sbb
gs
out
push
jae
sti
add
sbb
cmps
dec
cmp
test
dec
xor
or
pop
or
pop
add
add
push
js
fisubr
mov
ret
xor
or
shl
add
ds
add
adc
(bad)
movs
in
into
lds
dec
out
and
scas
or
adc
jae
push
ins
mov
in
sti
jle
cmp
sbb
fs
(bad)
push
jecxz
imul
mov
int3
mov
das
cmp
outs
or
mov
mov
std
or
xlat
pop
mov
mov
xor
or
add
fisub
out
cmp
and
and
mov
retf
and
jne
mov
mov
pop
icebp
cmp
imul
and
in
inc
add
mov
push
add
or
pop
stc
mov
cmp
pop
repz
adc
lds
(bad)
jns
xchg
sub
bswap
push
test
add
hlt
ds
not
push
jl
repnz
inc
cmps
inc
pop
(bad)
push
ja
push
inc
xor
pushf
and
xor
mov
imul
ror
jmp
pushf
jbe
dec
movs
sbb
cdq
xor
jno
and
mov
add
push
pop
jle
xor
push
push
daa
cmps
adc
popa
scas
cld
jne
mov
rcr
push
pop
sbb
popf
pop
das
mov
ror
test
xchg
cdq
push
iret
repnz
cmps
shr
repz
pop
jle
in
inc
dec
test
inc
cs
enter
dec
js
mov
jle
frstor
sub
vzeroupper
mov
out
fwait
out
xor
dec
stos
jno
rcr
or
scas
xor
pop
sti
push
nop
mov
xchg
lods
push
pusha
push
add
sbb
pop
xchg
jae
aad
push
jg
movs
xchg
gs
outs
std
jae
add
push
sub
xchg
pop
ins
sbb
call
leave
mov
dec
sbb
xlat
in
inc
dec
fsub
(bad)
cmp
sahf
xchg
retf
cmp
jmp
cmp
add
imul
mov
pop
outs
sbb
test
scas
add
ja
push
nop
cli
pushf
dec
or
out
push
imul
push
mov
inc
hlt
mov
and
mov
mov
ins
cmp
frstor
test
xchg
pop
clc
dec
or
or
(bad)
jl
add
and
fwait
icebp
ror
or
popf
fidiv
push
retf
enter
popf
call
out
fst
adc
in
ja
je
es
mov
xor
add
sub
cmp
loope
repz
fsub
mov
add
mov
mov
sub
ins
sub
loopne
push
cdq
pusha
jle
movs
jmp
loope
mov
js
push
mov
dec
ret
sbb
and
mov
dec
dec
and
hlt
xchg
repnz
push
hlt
stos
sti
mov
xchg
push
xchg
inc
mov
iret
push
jmp
scas
aas
stos
inc
test
jns
mov
fisttp
pop
pop
loop
aas
and
mov
xor
mov
fs
adc
les
out
out
mov
popa
(bad)
loop
xor
sahf
jno
into
mov
imul
jl
jb
pop
jns
adc
fs
push
icebp
jno
sub
clc
icebp
pop
xor
mov
pop
aaa
push
adc
aad
xor
popf
inc
test
hlt
jnp
lahf
das
(bad)
adc
sti
cmp
inc
sub
(bad)
movs
iret
jns
mov
mov
mov
cmp
inc
mov
mov
dec
retf
xor
clc
aam
sbb
jmp
lods
loopne
(bad)
ficom
push
jo
fs
shl
pop
xchg
mov
movs
xor
adc
cmps
bound
popf
shl
gs
fisub
push
and
and
daa
jecxz
nop
inc
cmp
mov
aaa
dec
ret
fdiv
mov
add
mov
or
xchg
daa
hlt
shl
jecxz
jb
test
dec
hlt
dec
xchg
or
mov
or
shl
iret
nop
aas
pusha
jae
inc
cli
push
jl
xchg
adc
push
jno
(bad)
in
cmp
push
xor
les
(bad)
retf
(bad)
(bad)
sub
xchg
push
adc
mov
sub
dec
jae
jp
push
ret
retf
mov
push
(bad)
stos
add
test
fs
mov
jle
xchg
ja
mov
pop
imul
jecxz
push
jg
call
xchg
and
cmps
out
pop
leave
pop
icebp
in
(bad)
outs
fs
xchg
fcomp
cwde
rcr
lds
popfw
shl
repz
lods
(bad)
test
int3
jmp
fst
in
inc
shr
ret
mov
fst
nop
pop
or
mov
xlat
jb
in
sar
cmp
cmp
scas
retf
pop
aaa
shr
mov
mov
outs
sub
scas
or
mov
bound
push
imul
int3
lea
mov
aam
mov
in
xchg
cmp
sbb
arpl
adc
fcmovbe
lds
xor
and
int3
icebp
int3
sahf
push
mov
punpckhdq
iret
jp
ficom
mov
push
jmp
cmps
sahf
imul
fs
cmp
and
cmovge
jbe
test
js
inc
and
out
inc
push
js
int3
aas
jecxz
push
xchg
adc
fidiv
mov
and
hlt
xlat
xchg
and
(bad)
mul
or
test
retf
jle
jns
sbb
ja
cmps
test
fld
jle
sub
scas
jmp
jne
in
test
dec
adc
sbb
cmp
xor
sbb
std
loop
repz
adc
sub
pop
out
test
dec
mov
push
mov
aad
(bad)
push
mov
sub
aas
dec
lods
fxch
and
dec
xchg
outs
fisubr
cli
cs
cmp
or
sub
and
mov
ret
out
hlt
mov
(bad)
pop
mov
mov
out
add
sbb
sub
mov
and
outs
jle
loope
xor
xor
xchg
add
push
fucomip
(bad)
sti
pop
out
mov
rcr
mov
(bad)
out
loope
jl
cmp
sub
sar
adc
pushf
cmp
cmc
sub
sub
fs
and
xor
mov
test
add
test
jb
pop
jbe
popf
loopne
int3
ja
in
leave
jb
stos
dec
sub
jnp
jae
inc
out
fldcw
jbe
ds
sahf
cmp
pop
dec
out
(bad)
or
call
pop
add
stos
pop
data16
adc
(bad)
scas
or
je
cwde
stos
push
jo
xchg
aaa
repz
or
jmp
in
ret
call
rcl
jl
fisub
adc
jp
push
xchg
add
shl
add
adc
jae
cmc
add
xor
pop
shl
(bad)
xchg
or
inc
push
xchg
jp
push
icebp
and
sub
pop
cmp
dec
cmp
aaa
push
fsub
repz
aad
mov
xor
pop
push
gs
sub
xchg
(bad)
data16
or
push
mov
dec
movs
enter
xchg
idiv
ftst
imul
out
jle
in
gs
popf
jmp
cmp
movs
cmp
inc
push
jo
sub
gs
xchg
push
stos
mov
sub
pop
xchg
push
and
test
adc
xchg
aam
fst
lods
icebp
inc
das
xchg
push
imul
outs
out
scas
rcr
jl
es
aaa
in
je
aas
and
add
or
ret
sar
push
sbb
addr16
scas
aaa
adc
aas
repnz
cdq
xchg
inc
mov
jp
es
jno
sub
aaa
mov
cli
sub
mov
(bad)
add
mov
push
bound
and
clc
and
xor
popf
jle
mov
pop
pop
sbb
sbb
mov
cmp
sbb
sbb
repz
sub
lahf
push
hlt
es
mov
mov
icebp
fs
mov
and
sbb
clc
inc
xor
out
addr16
ss
mov
cmp
aaa
js
aad
jnp
push
add
sub
cld
lds
sub
lahf
cld
jmp
sar
scas
daa
sub
xor
add
mov
mov
retf
xor
out
inc
inc
push
lods
scas
outs
sahf
jp
or
int
fcmovne
das
push
loopne
add
jae
repz
adc
js
adc
sbb
pushf
lock
hlt
xor
pop
iret
dec
push
mov
jp
mov
push
daa
cmp
xor
rcr
ja
enter
mov
stos
repz
mov
mov
push
or
test
fs
xchg
retf
std
xchg
xor
sub
movs
mov
mov
imul
pusha
xlat
mov
scas
stos
sahf
jmp
and
mov
fdivp
jmp
add
popa
cs
shr
sbb
sbb
sub
jno
les
mov
inc
jb
mov
mov
jnp
gs
push
shl
inc
and
and
and
enter
rol
stc
mov
arpl
sahf
movs
xchg
test
imul
or
int3
addr16
icebp
inc
jmp
adc
pop
jbe
sbb
out
mov
hlt
mov
rcr
(bad)
movs
dec
or
mov
mov
sbb
cmps
cmp
popa
mov
ins
sbb
mov
inc
add
pushf
sub
mov
push
xchg
adc
(bad)
das
(bad)
dec
arpl
iret
lods
scas
or
jmp
mov
nop
mov
shr
mov
cmp
mov
fsub
mov
push
sti
jmp
add
sbb
dec
sbb
push
imul
dec
pop
test
add
mov
xor
inc
cmc
jge
xchg
stos
and
push
mov
rcr
xchg
cmp
js
stos
enter
fbld
cmp
popa
test
sbb
jp
and
push
or
mov
rcl
dec
ret
jl
mov
out
aas
or
(bad)
cmc
add
ja
cmp
mov
sub
pop
stos
fild
sub
dec
mov
jecxz
imul
aas
aas
jae
xor
sbb
or
call
sbb
popa
xchg
mov
retf
retf
sbb
mov
dec
movs
bound
push
mov
cmps
mov
in
jp
addr16
jmp
test
cdq
(bad)
aaa
cmps
movs
pop
mov
ficomp
out
inc
rcl
lods
out
jge
lods
mov
sti
in
loopne
outs
dec
jp
cmp
sub
loope
mov
push
mov
xor
aas
fdiv
cld
jo
lea
adc
inc
mov
add
jl
movs
dec
inc
(bad)
iret
es
jns
imul
jb
xor
or
pop
shr
lds
outs
imul
cmps
jb
sub
or
cmp
cmps
dec
dec
add
adc
xor
int3
pop
mov
aad
xchg
inc
push
pop
scas
jnp
jo
push
xchg
cmps
cmps
aaa
push
sti
(bad)
pop
retf
push
loopne
in
cdq
out
shl
push
iret
inc
gs
push
pop
in
mov
mov
dec
das
test
shl
jne
(bad)
add
pop
in
mov
jne
mov
inc
jo
in
call
xchg
fist
sub
retf
mov
fbstp
cmp
cld
mov
push
fist
aas
mov
fadd
das
jns
xchg
xor
or
retf
xlat
loopne
inc
imul
add
and
inc
pushf
nop
sub
inc
sub
sub
rcr
mov
pop
icebp
pushf
iret
aam
clc
add
ja
imul
loop
les
cdq
or
icebp
out
cwde
cmp
int3
leave
cmps
lods
push
jbe
mov
dec
cwde
xor
nop
in
imul
lods
sub
cmp
lea
cmp
adc
repz
iret
aas
and
jbe
pop
cmps
shl
mov
call
mov
add
lea
mov
fist
sar
out
in
out
mov
cld
out
and
jl
repnz
dec
fwait
(bad)
push
xor
mov
mov
or
mov
imul
lods
sti
popf
pop
movs
jmp
cli
(bad)
repz
dec
das
xchg
test
xchg
xor
xor
or
fwait
pushf
cmp
cmp
std
dec
jo
pop
sbb
rol
jge
or
push
push
mov
push
push
jmp
mov
daa
sub
cwde
or
psrld
ins
js
pop
mov
das
jns
outs
mov
adc
sbb
push
adc
dec
mov
mov
jmp
add
push
push
sbb
xlat
gs
dec
mov
push
and
xchg
or
push
popa
mov
es
fucomp
cmp
fstp
leave
add
popa
sahf
outs
push
ja
push
imul
mov
cmps
int
outs
jae
pop
add
(bad)
push
movs
mov
mov
sub
mov
sar
scas
bound
add
adc
push
inc
jno
inc
pop
(bad)
leave
ret
outs
sub
xor
add
push
xchg
sub
mov
adc
loop
sbb
js
mov
mov
out
lods
or
shr
imul
retf
adc
test
(bad)
scas
fdiv
frstor
pop
test
cs
push
test
mov
sbb
jp
dec
push
push
cvtpi2ps
mov
mov
or
cmp
mov
test
pop
mov
sbb
shr
out
pusha
mov
shr
inc
xor
nop
mov
mov
ins
(bad)
or
sbb
push
icebp
or
pop
xor
or
push
jp
xchg
sar
enter
cmp
jge
sbb
ror
xor
dec
movs
nop
sub
(bad)
inc
dec
rcl
(bad)
rcr
mov
clc
xchg
fwait
xchg
mov
push
fwait
loope
test
fwait
jp
shl
lahf
mov
fucomip
test
mov
mov
das
dec
ins
xchg
stc
hlt
sub
mov
mov
cli
repz
scas
or
loop
cs
(bad)
in
test
inc
sub
jmp
adc
aaa
and
mov
mov
ja
fsub
bound
stc
push
sbb
mov
mov
pop
not
jecxz
iret
in
mov
mov
aas
add
pop
sub
mov
pop
in
rdpmc
fucomi
push
pop
imul
jno
test
leave
xchg
or
out
push
pop
add
aaa
popf
pop
je
pop
call
xor
dec
aas
or
aaa
cli
and
and
call
std
push
push
mov
mov
sti
add
or
lea
cdq
out
fld
sbb
mov
ins
mov
xchg
dec
jo
sti
aas
mov
pop
jo
cmp
and
mov
(bad)
int3
adc
inc
repnz
pop
js
xor
daa
sub
mov
cmp
jns
xchg
ins
mov
daa
shr
mov
sub
push
mov
in
adc
sbb
xchg
cdq
adc
jp
or
jnp
xchg
pop
ins
inc
and
test
daa
push
movs
or
pop
jl
ins
dec
xor
sbb
push
or
imul
xchg
fs
push
loop
pop
inc
popf
not
mov
mov
scas
int
dec
sbb
lahf
xchg
sub
jno
ds
xor
fwait
pop
leave
aas
pop
xchg
cwde
test
int
fcmovnu
das
std
ret
shr
popf
dec
push
dec
rol
push
or
(bad)
jae
cmp
mov
jmp
push
inc
mov
inc
stos
imul
test
and
push
(bad)
sti
stc
mov
sub
xchg
fdivr
mov
call
sahf
jbe
dec
jmp
jne
sbb
clc
xor
das
in
or
push
push
scas
imul
imul
jno
test
pop
into
push
jmp
mov
sbb
clc
mov
sbb
enter
jmp
cli
gs
clc
movsx
pop
aas
mov
push
cmp
jp
mov
(bad)
std
jl
out
inc
push
pusha
cli
or
inc
dec
scas
pop
and
cs
fld
js
or
jo
dec
fild
aad
inc
sbb
stos
and
imul
jae
retf
jo
jne
jae
jae
add
ins
inc
mov
xchg
(bad)
cmps
cmp
shl
test
test
xchg
sub
lods
push
fdivp
in
data16
(bad)
enter
jo
arpl
test
jne
(bad)
xor
mov
sbb
in
add
gs
call
(bad)
push
push
mov
test
mov
test
loop
movs
sti
aad
xlat
pop
add
(bad)
jne
jbe
add
push
out
xor
les
pop
xor
inc
call
pusha
cmc
jmp
js
repz
or
pop
sahf
das
scas
lahf
ja
xor
pop
push
aas
xchg
aas
rol
jns
dec
mov
lods
mov
scas
mov
mov
adc
bswap
add
cmp
ss
movs
jp
repz
outs
xor
les
mov
fucomip
and
jmp
bound
add
jmp
add
int
add
jmp
sbb
push
adc
xor
frstor
es
add
or
mov
adc
jae
dec
and
jae
das
pop
arpl
push
and
jb
jmp
sub
jl
push
bnd
jmp
lods
cmp
clc
sub
cmc
cwde
dec
sar
popf
pop
ja
dec
sub
dec
aaa
pop
mov
jmp
xchg
jle
ficomp
fisub
jno
cdq
loopne
jecxz
les
icebp
ss
xchg
mov
out
rcr
mov
mov
push
ror
cmps
mov
mov
adc
jae
clc
push
cmp
jle
rol
or
les
stc
adc
loopne
mov
jg
rcr
sub
daa
cld
xchg
adc
sub
sub
xchg
test
outs
inc
dec
dec
mov
mov
cmps
and
xchg
inc
scas
data16
or
xor
leave
call
jg
xor
xlat
mov
in
jg
call
call
xor
pop
in
inc
xor
mov
push
adc
jmp
pop
add
addr16
jo
daa
outs
retf
xchg
sbb
scas
iret
adc
xchg
dec
or
add
xchg
xor
lds
lea
pop
sar
jmp
int3
sbb
sbb
push
mov
aas
loope
pop
enter
lahf
cmps
lock
fild
ret
cdq
ds
jb
mov
push
cld
mov
push
iret
movs
mov
ret
inc
sbb
adc
sbb
mov
fldenv
std
push
pop
(bad)
fsub
inc
lahf
dec
ret
js
and
inc
xchg
cwde
pop
out
in
pop
fld
gs
push
in
lea
push
pop
jns
lea
(bad)
daa
mov
mov
inc
in
and
mov
push
test
pop
dec
jecxz
iret
js
xchg
sbb
fcomp
das
mov
jge
inc
dec
push
pop
push
fcmovb
add
sbb
iret
cmp
pop
leave
jae
test
bound
bound
and
leave
loopne
les
neg
push
ds
mov
fucomip
mov
ret
jge
xchg
cmc
xchg
imul
sub
dec
mov
int
xchg
and
ret
jno
pop
xchg
xchg
push
retf
aaa
retf
xor
mov
inc
mov
mov
das
inc
(bad)
or
mov
lods
test
pop
or
je
gs
mov
std
stos
jl
xchg
ficom
(bad)
cmp
nop
push
sub
xlat
hlt
push
test
xor
mov
outs
popf
sbb
cmp
ror
add
addr16
push
push
ins
lock
lea
jno
cmp
cli
ds
mov
aam
mov
mov
aaa
ja
test
fimul
leave
mov
add
jns
jo
fwait
push
mov
out
dec
test
cmp
push
in
pop
xor
sbb
pop
imul
mov
fwait
jge
lods
lods
mov
mov
cmc
jne
sbb
mov
sub
mov
add
jmp
mul
ds
das
push
jbe
xor
cwde
mov
js
adc
retf
in
push
scas
or
sbb
lea
loope
(bad)
out
sar
inc
(bad)
xchg
adc
xor
movs
sub
jecxz
shl
add
jae
mov
mov
lods
ins
mov
pop
movs
mov
(bad)
push
outs
jne
sbb
lods
or
fs
jg
icebp
lds
and
jmp
popf
jmp
pop
jae
adc
out
xchg
lods
and
ins
jmp
cwde
inc
out
push
daa
push
jecxz
pop
lock
sbb
cmp
push
lea
fistp
sar
lahf
pop
adc
pop
inc
push
dec
test
mov
jge
mov
sub
fcom
and
mul
ficomp
and
frstor
mov
(bad)
out
and
aas
loopne
cmps
cmc
xchg
mov
sahf
pop
cmp
iret
xor
lods
arpl
push
pushf
in
mov
cmps
jge
addr16
pop
and
enter
cmp
stc
xor
fcom
cmp
pop
in
sub
hlt
mov
enter
pop
popa
clc
cmp
mul
adc
push
pop
cld
dec
ins
pop
cmp
jl
add
pop
outs
and
(bad)
icebp
push
cmp
movs
mov
das
lock
jmp
inc
sahf
xchg
not
sub
mov
call
test
inc
push
pop
jecxz
popa
sar
sbb
sbb
push
in
pop
pop
popa
mov
push
dec
retf
push
mov
ins
mov
or
sub
mov
mov
pop
mov
rcr
imul
cmp
dec
fnstenv
or
out
push
arpl
push
arpl
pop
or
pop
mov
pop
repz
loop
jns
xchg
mov
mov
inc
cmp
and
sahf
retf
into
push
pop
push
inc
cmp
add
xor
(bad)
mov
not
mov
cmc
lds
mov
inc
and
sub
scas
mov
mov
xor
fcom
retf
xchg
mov
xchg
adc
xor
test
pop
inc
jg
xchg
push
aas
cli
shl
push
push
shr
pushf
(bad)
sbb
add
movs
or
xchg
and
push
out
xor
into
sar
mov
aaa
ins
enter
add
into
push
push
imul
lock
xlat
push
or
movs
rcr
mov
aad
mov
into
sub
(bad)
iret
adc
out
mov
movs
and
pusha
or
pop
jg
jmp
test
sbb
and
jbe
imul
adc
and
sbb
add
push
xchg
dec
mov
call
movs
push
add
es
xchg
dec
dec
pop
test
not
inc
push
or
cs
add
mov
lods
mov
popa
push
out
outs
sbb
test
sbb
mov
int
clc
cmp
and
fwait
in
inc
pop
inc
retf
mov
test
xchg
cwde
or
mov
adc
inc
loopne
dec
push
mov
dec
cmp
ins
leave
rol
push
sub
xchg
mov
mov
out
scas
pushf
fdivr
sbb
jo
in
stos
gs
popa
adc
pop
(bad)
bound
(bad)
dec
das
addr16
mov
xchg
ffreep
imul
adc
scas
sub
cmp
add
scas
pop
push
(bad)
sub
xchg
test
jge
scas
fidiv
(bad)
nop
mov
pop
ja
pop
cmp
pusha
and
sbb
pop
je
push
into
mov
repnz
fcomp
call
scas
dec
js
out
inc
mov
aas
pushf
push
jg
and
jb
inc
ffreep
fnsave
std
(bad)
frstor
mov
push
xchg
sbb
xor
sbb
(bad)
rcr
jbe
xor
add
push
jge
xchg
ds
fstp
repnz
xchg
pop
xchg
fnstcw
jo
loope
jle
cld
sbb
xchg
stc
sti
cmps
pop
repz
cmps
fs
dec
or
mov
xlat
mov
imul
frstor
stos
mov
imul
popf
jbe
(bad)
xchg
pop
lds
sbb
lea
adc
fs
dec
jmp
or
xor
pop
cmp
xor
push
mov
dec
xor
rcr
outs
push
or
fcmovnb
mov
push
or
jl
loopne
mov
ins
xchg
inc
pushf
repnz
or
pop
or
(bad)
mov
push
mov
out
fs
push
repnz
std
loopne
popf
mov
call
jo
push
in
test
(bad)
fidiv
and
or
xor
adc
adc
jecxz
inc
mov
mov
add
neg
test
test
mul
aad
dec
(bad)
int3
data16
(bad)
xchg
inc
xor
jg
lock
dec
fisttp
jno
mov
je
and
adc
sbb
lahf
imul
in
xchg
stos
jmp
inc
data16
jne
ss
xchg
or
inc
push
jle
add
popa
xchg
bound
adc
repnz
nop
xor
xlat
leave
push
ins
sub
sbb
or
adc
jno
mov
in
imul
js
and
bound
es
mov
push
push
push
out
add
lds
xlat
inc
mov
stos
adc
and
cli
pop
int3
aaa
test
movnti
addr16
pop
js
mov
(bad)
ja
fstp
add
or
retf
mov
rsm
adc
call
xchg
(bad)
jg
push
into
or
(bad)
stc
mov
xor
leave
xor
cdq
mov
dec
jo
cmp
push
add
push
aaa
and
pop
scas
adc
xchg
and
mov
aad
shl
push
inc
sub
std
adc
rol
dec
push
fs
cmp
fdiv
mov
xor
cmps
xchg
push
rcl
or
push
pushf
stc
out
imul
rol
mov
push
push
ror
inc
cmps
in
dec
adc
out
es
bound
test
cmp
dec
mov
(bad)
dec
jg
(bad)
cmps
inc
imul
rol
sbb
mov
pop
inc
mov
xor
call
int3
push
out
mov
add
adc
jae
gs
jecxz
sar
ins
in
mov
xor
outs
popa
pcmpeqb
and
mov
add
xor
push
mov
jge
(bad)
sbb
outs
(bad)
ffreep
in
fist
jbe
mov
inc
dec
out
hlt
dec
xor
add
sbb
mov
jp
sbb
pop
add
shr
cmp
xchg
mov
cli
leave
and
in
in
scas
mov
in
inc
cdq
jns
pop
ins
out
or
jp
and
and
push
sbb
add
pop
dec
mov
mov
cmps
jecxz
je
(bad)
ret
inc
cmp
push
in
jo
repz
fdiv
xor
cmps
jne
mov
pop
and
pop
dec
push
stc
lods
call
xor
(bad)
cld
jecxz
enter
out
mov
stos
mov
cmps
xlat
cmps
add
jg
leave
aam
mov
je
ficomp
mov
inc
ins
push
mov
nop
mov
ss
xchg
(bad)
mov
jmp
pop
mov
sbb
cwde
adc
lods
movs
xor
dec
fsub
mov
or
dec
jmp
inc
popf
push
push
call
daa
inc
jg
xchg
(bad)
and
fimul
retf
jbe
jg
ja
shr
imul
stos
sub
in
popf
mov
sahf
pop
adc
fsubr
push
iret
and
in
(bad)
ss
mov
nop
mov
mov
ja
pop
cwde
xor
les
rol
mov
jl
push
iret
lods
pop
mov
pop
not
sbb
sub
outs
aaa
sbb
sbb
mov
test
and
add
cmp
xor
jo
rcl
imul
movs
ror
add
mov
adc
es
fmul
sahf
retf
sbb
xor
cmp
aad
test
ror
sti
pop
neg
neg
adc
aas
xchg
push
lea
ins
ret
dec
mov
adc
push
xor
cmp
inc
jmp
sub
in
pop
shr
int3
cmc
mov
sub
data16
(bad)
push
add
dec
inc
pop
jb
add
fnstcw
loop
cld
sbb
ret
in
jle
mov
sbb
test
and
sbb
pop
sbb
push
pop
in
retf
xchg
and
mov
sti
cmp
add
into
pop
push
mov
outs
jno
mov
add
movs
shl
and
jb
sub
pop
jecxz
push
adc
outs
jle
mov
jg
ins
push
mov
lods
pop
or
cmp
sbb
imul
stc
mov
mov
mov
jno
test
adc
movs
ins
ret
test
and
iret
sbb
dec
inc
(bad)
cli
xchg
scas
test
sub
jae
test
and
pop
je
mov
mov
and
or
mov
push
in
add
sub
and
sahf
mov
cmp
stos
sub
ja
add
lock
mov
inc
hlt
cli
dec
repz
bound
fdivr
imul
scas
push
icebp
push
(bad)
aas
rcr
or
jbe
cmp
sbb
push
std
retf
mov
pop
jne
retf
mov
and
lds
test
xor
dec
in
or
fadd
push
push
jp
add
aam
pushf
bound
fsub
pop
rcl
movs
bound
fdiv
xor
clc
cmp
cli
pop
daa
xor
xchg
or
xlat
fdivrp
xchg
cmps
mov
xor
shl
fadd
push
cmps
or
pop
aam
lds
aad
pop
or
mov
sar
jnp
ret
jmp
push
ja
rol
in
aas
sahf
mov
(bad)
shl
aam
rol
adc
in
jne
test
xchg
push
or
popa
mov
and
adc
mov
inc
push
test
mov
(bad)
in
repz
pop
inc
ja
ret
in
sar
repz
out
rcr
xor
test
push
mov
xor
pop
inc
xchg
mov
es
sbb
imul
mov
in
pop
add
mov
push
pop
sub
icebp
daa
xchg
cmps
fdiv
ds
lds
outs
jmp
and
aam
jnp
jmp
mov
fstp
ficom
stc
sub
inc
jmp
scas
jl
in
outs
jl
popa
push
jae
dec
pop
std
sub
jmp
mov
cmp
jns
adc
cmp
sbb
pop
sbb
mov
mov
call
sbb
rcr
sub
sbb
pop
cmc
iret
scas
or
mov
retf
and
mov
pop
int3
or
lock
les
and
cdq
repz
leave
adc
mov
and
out
xchg
xchg
ret
aas
inc
mov
push
push
imul
clc
aam
adc
fistp
call
in
int
push
icebp
mov
outs
mov
mov
clc
pop
push
mov
dec
mov
psadbw
sbb
popf
not
push
into
hlt
push
cld
push
inc
or
push
aad
arpl
iret
xchg
frstor
lahf
mov
aaa
loopne
inc
lea
sbb
sar
loopne
jmp
ss
cmp
mov
js
mov
daa
dec
push
dec
xchg
movs
pop
mov
inc
rcr
xchg
(bad)
pop
mov
pop
(bad)
sbb
popa
xor
jmp
push
mov
inc
int3
xor
bound
cmps
cmp
outs
adc
fwait
out
int3
daa
inc
jmp
mov
fisttp
retf
push
push
or
ret
mov
mov
mov
xor
mov
int3
sar
cmp
retf
(bad)
jno
mov
imul
pop
cmp
sbb
jle
push
jae
jmp
mov
mov
inc
daa
sub
cli
int3
movs
add
lahf
cmp
inc
push
lahf
pop
fisttp
push
mov
jno
aaa
loopne
dec
push
int
sbb
pop
mov
xchg
in
out
cs
add
inc
scas
rcl
dec
mov
sub
push
inc
adc
adc
add
mov
movs
cmp
adc
pop
xchg
lods
xchg
dec
shr
dec
push
pop
jg
out
out
outs
(bad)
dec
jge
out
imul
pop
sub
repnz
pop
lock
jns
call
popf
pop
sbb
loopne
add
pop
imul
test
xlat
pop
jg
call
xchg
adc
scas
fsub
jmp
jecxz
inc
mov
adc
sti
jae
sub
jae
sahf
loopne
xchg
adc
imul
inc
fist
sbb
nop
cmps
mov
mov
scas
or
gs
jne
jecxz
rcr
xlat
pop
cmp
test
jmp
cmp
je
mov
jbe
pop
and
daa
mov
add
not
enter
cmp
xchg
ret
sbb
and
cwde
gs
or
inc
mov
sahf
pop
xor
jle
bound
scas
push
movs
mov
stc
pop
xlat
pushf
pop
adc
fs
push
push
movs
push
jo
xchg
add
out
xchg
or
pop
adc
and
xchg
inc
inc
add
mov
lds
sub
mov
in
je
loopne
jo
sti
inc
push
xchg
lods
sbb
mov
aas
jno
push
aad
mov
aas
xor
or
adc
aas
fs
aas
arpl
push
adc
int3
pop
push
je
je
push
loop
mov
or
hlt
in
push
loopne
dec
mov
pop
push
and
mov
mov
fld
mov
and
mov
sbb
aam
inc
pop
fcom
xor
js
pop
inc
in
mov
adc
xchg
mov
into
ins
inc
inc
add
cmc
cmp
inc
add
not
stc
jmp
push
loope
sbb
vmovntpd
add
lods
jmp
(bad)
sub
push
bound
leave
data16
adc
mov
push
in
test
add
xor
out
call
leave
icebp
cdq
mov
fldenv
mov
jb
popf
test
or
aam
inc
push
repz
lea
sub
cld
shr
add
das
xchg
or
mov
xchg
pop
pop
fistp
dec
add
xchg
fcomp
rcr
adc
or
lods
sbb
jle
and
in
jecxz
jmp
outs
fidivr
jp
or
push
loope
mov
dec
nop
add
inc
mov
mov
mov
pusha
(bad)
loop
or
dec
and
rcr
push
and
add
ins
out
stc
out
jge
sbb
xor
sub
mov
cmp
pop
pop
dec
out
push
arpl
cmp
loop
or
outs
outs
adc
repz
stos
fldcw
dec
shl
es
das
inc
ret
cmps
addr16
mov
xchg
leave
add
add
imul
(bad)
inc
out
rol
sbb
inc
lock
inc
mov
fsincos
pop
repnz
popf
mov
jmp
xlat
ret
loop
xchg
pop
push
and
dec
sub
sub
push
pop
aas
in
mov
popf
mov
std
mov
stos
mov
pop
test
imul
mov
cmp
push
adc
daa
add
cmp
xchg
ja
bt
mov
and
scas
xlat
(bad)
fild
fst
fld
sbb
adc
loope
pop
push
cmp
leave
jmp
(bad)
int
rcr
retf
call
ret
pop
jns
adc
pop
fcmovnbe
leave
adc
xchg
add
and
ds
jmp
jg
imul
mov
sub
pushf
test
imul
scas
mov
jp
popf
push
or
or
and
pushf
mov
sbb
clc
and
test
repnz
jle
ins
stc
xchg
inc
push
inc
ds
dec
aad
mov
retf
loope
jae
adc
jb
xchg
(bad)
aad
sub
pop
fisubr
pop
jne
ds
lea
neg
mov
cld
push
js
mov
xor
lods
pop
mov
sbb
xor
mov
aad
pop
repz
addr16
jmp
sbb
adc
xchg
sub
out
and
cmp
imul
imul
sbb
cmp
fild
xlat
daa
jp
sbb
dec
gs
lods
inc
idiv
push
jne
cmps
mov
mov
in
push
loopne
or
and
sub
enter
adc
xchg
es
pop
cli
lahf
sti
jl
shr
inc
xchg
les
xor
and
xor
clc
sbb
loope
cdq
out
mov
imul
mov
movq
aad
inc
daa
push
fs
adc
push
in
jmp
and
rol
xchg
ins
int
add
fistp
jo
ss
clc
hlt
and
sahf
nop
bound
pop
stc
aas
ja
or
lods
inc
mov
sub
call
mov
idiv
repnz
mov
pusha
in
mov
(bad)
xlat
add
pop
dec
scas
(bad)
aad
clc
xchg
add
(bad)
test
mov
inc
mov
mov
inc
jge
xchg
data16
int3
or
adc
test
int3
mov
ja
in
sti
inc
pop
mov
dec
sub
mov
outs
mov
(bad)
loope
mov
loop
out
mov
shr
(bad)
addr16
je
leave
jae
jmp
push
movs
cmps
and
and
inc
aaa
iret
pop
sbb
idiv
lahf
xor
dec
push
stos
aas
(bad)
out
dec
sub
out
call
repz
and
mov
push
cmp
repnz
xor
retf
pop
(bad)
sub
xor
dec
push
push
add
fstp
push
retf
mov
xchg
das
or
clc
fcom
mov
push
fisttp
mov
int
fs
xchg
push
iret
ds
into
fsubr
mov
push
ret
scas
xchg
push
es
dec
and
fwait
into
jecxz
dec
jns
movs
jmp
stos
mov
and
mov
push
pop
lds
push
xchg
sub
xor
jmp
jne
mov
push
sub
cmp
pop
sbb
cs
xchg
push
cmovg
adc
or
stc
movs
mov
mov
addr16
mov
mov
pusha
es
stos
and
ja
sar
jg
icebp
lods
mov
sub
js
imul
pop
and
mov
xchg
(bad)
out
addr16
mov
jno
call
ins
push
adc
outs
or
arpl
shr
push
adc
jmp
and
call
mov
sar
in
mov
push
mov
mov
xchg
loopne
pop
ds
sbb
imul
xor
jle
je
movs
mov
or
xor
sub
into
adc
mov
mul
ffreep
sub
mov
(bad)
xor
pop
xor
or
pushf
cmp
pop
test
fidivr
out
or
hlt
in
xchg
mov
push
add
(bad)
repz
cli
jl
adc
ins
push
dec
or
push
in
push
sbb
gs
call
mov
sub
inc
shl
aas
sbb
sub
add
test
sub
jecxz
dec
or
movs
jecxz
inc
sub
add
rcr
push
xor
jmp
adc
xchg
aas
or
cmp
iret
push
jl
sbb
aad
fbld
adc
not
(bad)
je
adc
imul
cmp
and
pop
test
mov
xchg
lea
push
ret
cld
outs
(bad)
mov
add
mov
in
mov
cld
dec
mov
jae
push
xchg
xchg
dec
sub
push
sub
test
jmp
inc
xlat
sbb
and
inc
pop
ror
pop
(bad)
adc
mov
inc
mov
out
addr16
(bad)
push
imul
(bad)
je
cmp
aaa
inc
mov
loop
loopne
jns
xor
call
test
in
xchg
out
idiv
out
adc
jne
xor
inc
mov
xchg
mov
pop
js
jbe
push
test
xchg
xlat
mov
mov
mov
test
dec
push
scas
pop
cs
jp
mov
ds
imul
mov
or
scas
jecxz
fmul
ror
jo
mov
xchg
push
pop
and
push
xchg
dec
jno
xlat
cmp
leave
les
rcr
adc
pop
sub
outs
mov
xchg
fstp
mov
adc
test
sbb
mov
mov
mov
out
or
retf
dec
sahf
xchg
mov
popa
pop
jge
mov
mov
xchg
cwde
push
mov
nop
mov
fmul
xchg
push
(bad)
fidiv
(bad)
add
push
out
cli
mov
cld
lahf
aaa
aas
jge
or
xor
add
cld
icebp
xchg
imul
add
cmp
retf
pop
or
bound
mov
add
pop
cs
nop
imul
push
add
in
inc
(bad)
das
add
clc
bound
sbb
cmp
int
(bad)
rcr
mov
fidiv
in
nop
adc
jae
dec
mov
loop
std
imul
inc
(bad)
jecxz
shl
pop
jne
stos
xchg
arpl
cmp
and
pop
jno
cmp
(bad)
outs
push
fstp
lods
fidiv
sahf
sahf
loopne
les
ret
dec
sub
sub
inc
ja
mov
push
call
jle
fxch
push
loop
cmp
sub
or
sti
pop
push
jmp
ins
mov
stos
stos
and
and
sti
xchg
aaa
iret
or
mov
mov
xor
mov
pop
(bad)
and
sbb
or
pop
cwde
retf
js
pop
mov
(bad)
scas
sub
cli
bound
ja
in
mov
xor
adc
push
dec
xor
inc
mov
add
mov
(bad)
cmp
cwde
pop
sub
mov
icebp
cli
xchg
enter
stos
xchg
inc
sti
mov
lods
pop
rcr
rcr
in
jbe
mov
cmp
cmp
jns
inc
imul
pusha
inc
stos
ins
mov
xor
mov
ins
ss
cld
mov
push
dec
dec
imul
jmp
cdq
rcl
sbb
mov
mov
cli
out
cmp
mul
sbb
mov
mov
mov
idiv
fs
dec
dec
push
fucomip
sub
sar
in
ret
adc
dec
aad
jmp
scas
icebp
js
in
outs
sti
push
rol
ins
xchg
ror
inc
inc
xchg
mov
and
xor
jmp
cmps
sub
jnp
jns
cmp
clc
mov
and
dec
loop
push
jle
push
add
sub
mov
cmc
stos
sbb
(bad)
pop
lods
push
imul
cwde
sahf
jae
sbb
idiv
test
inc
int3
push
sbb
js
sub
int
pop
dec
outs
dec
(bad)
sbb
scas
jb
xchg
inc
sbb
arpl
in
push
mov
ss
sbb
jecxz
pop
cmp
je
clc
fsubr
fld
call
nop
fisubr
dec
test
xchg
adc
repz
or
sbb
xchg
jae
ret
outs
add
sub
push
mov
inc
test
or
mov
mov
adc
adc
adc
add
sub
fstp
repnz
(bad)
je
rcl
cwde
popa
movs
inc
fs
cmp
aas
mov
pusha
ins
das
fild
ss
add
in
movs
jg
cmc
test
movs
out
pop
cmp
jl
xchg
imul
mov
cmp
xor
stc
push
jmp
adc
sub
dec
cli
mov
test
add
fwait
push
shl
mov
mov
jecxz
push
cmp
shl
xchg
stos
push
shl
push
cmp
pop
or
lahf
loope
(bad)
xchg
idiv
in
mov
jnp
les
xor
mov
imul
scas
bound
pushf
enter
addr16
shr
mov
ins
mov
xor
cs
(bad)
imul
and
xor
test
iret
loopne
and
or
loope
inc
arpl
pop
scas
cli
sahf
xchg
and
je
data16
out
aad
enter
popa
dec
push
adc
clc
repnz
sub
fmulp
pop
mov
or
push
add
shr
add
dec
ret
leave
arpl
nop
push
pop
imul
lahf
ret
cmp
push
test
shl
retf
cmp
jmp
test
mov
pop
pop
or
in
das
sbb
daa
mov
out
bnd
pop
xlat
jmp
lods
xor
aaa
pop
cmc
pop
push
out
or
mov
dec
ins
jl
fdiv
(bad)
out
add
ins
sbb
push
jae
adc
mov
or
push
dec
bound
xor
fdiv
fild
in
out
mov
(bad)
and
pop
mov
sub
mov
jns
sahf
je
retf
cmp
pop
loope
fidivr
cmovns
push
int3
mov
xchg
repnz
xor
inc
popa
rcl
scas
mov
out
mov
out
clc
dec
mov
adc
push
cs
pop
sub
or
sub
xor
pop
repnz
adc
or
lds
cmps
leave
inc
sar
lds
sub
lock
test
pushf
mov
pop
sahf
push
aaa
outs
in
scas
ret
push
rcl
test
mov
dec
dec
dec
pop
loope
outs
imul
jmp
push
pop
jne
push
mov
xchg
sub
fidiv
xor
xor
mov
imul
mov
add
scas
cld
loop
mov
mov
(bad)
and
idiv
cmp
mov
int3
xchg
mov
xor
test
imul
dec
out
mov
and
mov
sbb
(bad)
sahf
jae
movs
lock
aad
inc
adc
pop
adc
add
fcom
scas
ror
jae
ret
xor
movs
rol
in
les
(bad)
dec
jge
push
lods
adc
xchg
(bad)
outs
jg
fdivr
rcl
iret
mov
shl
jbe
retf
dec
cmp
iret
mov
inc
add
inc
icebp
ins
mov
add
les
pop
inc
out
pusha
and
mov
xlat
arpl
in
mov
sub
aam
fs
push
or
fdiv
in
pushf
fild
inc
inc
pop
ds
cmc
out
xor
cdq
xor
xor
fdivr
gs
out
and
pop
or
jae
out
adc
adc
dec
nop
push
push
mov
movs
and
mov
test
scas
cmc
xor
mov
xor
pop
aad
aam
pop
scas
mov
add
push
add
retf
movs
scas
mov
gs
les
push
inc
mov
sbb
cmp
adc
mov
mov
jmp
pop
add
scas
xor
pextrw
mov
jbe
addr16
cmp
cmp
in
jp
in
sub
mov
mov
inc
xor
mov
xchg
cmp
mov
ds
mov
lea
push
and
sbb
int
push
sub
lea
out
add
cwde
mov
lock
mov
pop
jno
xor
pop
ins
xchg
mov
push
inc
add
lods
call
fidiv
or
test
enter
out
imul
mov
mov
scas
sub
nop
xchg
stos
sub
icebp
mov
mov
push
xchg
mov
movs
add
mov
sub
test
add
mov
pop
push
fidivr
push
test
cmp
jecxz
adc
ins
sub
cld
sbb
(bad)
fcom
(bad)
ds
nop
inc
adc
push
jo
fstp
scas
lahf
dec
cwde
nop
scas
mov
mov
addr16
cli
sbb
ret
add
push
pop
jle
push
scas
xchg
shr
lock
test
and
(bad)
sub
fadd
push
cdq
fimul
push
sub
test
sbb
push
and
xchg
stc
stos
push
xor
jo
(bad)
out
jg
mov
push
sti
or
std
xor
cdq
add
mov
dec
rcl
cmp
dec
xchg
(bad)
mov
mov
inc
clc
ret
pop
bound
loopne
hlt
dec
enter
test
lds
aaa
or
mul
aam
bound
(bad)
xchg
rcr
jle
cmp
outs
and
in
pop
jo
mov
xchg
xchg
ins
xchg
sub
mov
and
xor
fstp
repnz
or
jb
cmps
mov
hlt
mov
das
shl
sar
jbe
lock
mov
push
out
jg
out
dec
xchg
fistp
cld
pop
mov
fstp
dec
sub
and
dec
jmp
sbb
xchg
xor
inc
jmp
sub
mov
ret
xor
push
iret
inc
mov
loopne
rcr
movs
or
adc
and
je
inc
jbe
cmc
in
add
mov
addr16
inc
bound
shr
pop
sbb
in
cmps
outs
out
jmp
mov
call
cmp
(bad)
mov
icebp
cmp
lock
mov
xchg
in
cmp
jbe
xchg
mov
or
sbb
test
jnp
or
js
push
jmp
out
inc
jmp
imul
pop
pop
arpl
jmp
sub
sbb
div
dec
out
push
jns
cmp
cld
push
jmp
mov
dec
sub
cmp
loope
pop
int
cwde
and
mov
gs
inc
push
stos
mov
xchg
sbb
fisub
mov
sbb
into
aas
mov
int3
and
inc
lds
mov
fcmovbe
add
jge
jns
cmps
rcl
loopne
ds
adc
(bad)
outs
out
jecxz
push
cmp
rol
sahf
sbb
leave
mov
cmp
jle
iret
mul
push
in
push
addr16
cmp
fwait
jg
out
mov
pop
into
push
adc
mov
or
out
repz
add
sahf
jle
popf
js
push
aas
dec
xor
push
mov
cmp
test
and
dec
push
push
jecxz
adc
and
fsub
pop
into
mov
in
mov
mov
fidiv
xor
and
sbb
jo
int3
sub
test
mov
add
popa
mov
add
sar
hlt
retf
push
mov
aas
retf
fsubr
push
retf
aaa
mov
cmp
fcom
mul
xchg
cmp
fidiv
loopne
and
jle
or
or
sbb
pop
dec
xor
ret
lods
scas
dec
cmc
ja
cdq
pop
out
inc
out
jg
mov
cwde
fidiv
dec
fs
inc
mov
(bad)
mov
cmp
outs
push
ret
test
cs
mov
push
pop
repnz
inc
shr
cs
inc
jne
push
mov
ret
daa
aaa
mov
imul
dec
test
lds
push
stos
shl
mov
jge
jae
idiv
lods
mov
dec
mov
lods
sti
mov
sub
add
or
loope
push
stos
xor
lds
(bad)
fdiv
adc
stos
push
mov
rol
xor
aam
(bad)
arpl
jns
movs
(bad)
adc
push
add
aaa
aas
dec
sub
cmp
add
stos
mov
sbb
and
je
sub
mov
or
push
imul
mov
clc
aam
ds
loop
jg
inc
or
dec
xor
lods
adc
shl
pop
int3
xor
pop
lods
fwait
or
repz
loop
shl
xlat
or
mov
out
push
cs
in
(bad)
hlt
add
test
call
stc
cmp
pop
popf
and
xchg
shr
mov
adc
mov
loop
popa
pop
adc
stos
sbb
fstp
fwait
loope
lock
dec
fsub
jge
into
adc
cmp
jmp
cmp
jge
jns
xchg
adc
cmp
cmp
adc
enter
jl
mov
imul
xchg
mov
lahf
jge
jl
psubw
das
sbb
or
mov
mov
inc
(bad)
cmp
pop
adc
aam
in
aad
mov
jecxz
sub
mov
dec
sbb
movs
sbb
aaa
(bad)
outs
fistp
hlt
xor
imul
adc
lock
mov
add
mov
pop
pop
jb
retf
je
sahf
and
shr
sbb
iret
cwde
leave
dec
inc
std
mov
mov
popa
add
scas
and
in
ins
inc
adc
xchg
xchg
shl
dec
test
repnz
(bad)
pusha
pop
push
gs
(bad)
xchg
add
push
inc
loop
je
cmps
fisubr
jle
mov
push
cmp
or
push
aam
fadd
enter
push
cwde
sete
call
and
retf
out
sub
cmp
push
jg
mov
lods
hlt
inc
pop
xchg
pop
idiv
mov
push
ret
push
pop
ss
inc
add
xchg
xor
test
pusha
push
pop
xchg
push
int3
out
ins
inc
xchg
and
jo
ret
jnp
inc
add
mov
cmp
push
push
sbb
mov
mov
loop
jbe
clc
mov
mov
stos
retf
dec
or
xchg
sti
leave
movs
sub
sub
jmp
imul
dec
push
stc
inc
xlat
hlt
adc
push
test
cmp
adc
scas
jp
cmp
in
sub
call
(bad)
mov
out
adc
daa
add
loopne
jne
(bad)
cld
xlat
popf
cmp
jl
fmul
and
jb
stos
outs
xor
in
aaa
add
mov
pop
xchg
das
xor
jp
sub
dec
pushf
jmp
and
sbb
cvtps2pi
fsqrt
push
clc
fcomp
sub
(bad)
fisub
push
loop
mov
aas
mov
cmc
daa
and
add
pop
push
ja
stc
inc
sub
mov
call
outs
imul
cmp
dec
sub
jl
mov
jae
or
cdq
add
or
dec
ins
dec
fistp
inc
cs
das
cmp
inc
out
inc
xchg
into
mov
arpl
jno
adc
mov
and
lods
add
and
fadd
int
shr
std
stos
xor
ins
or
add
push
inc
xor
(bad)
jg
(bad)
xchg
repz
mov
push
cmp
cs
out
push
and
pop
cmp
cmp
hlt
mov
mov
movs
jns
mov
std
ret
rol
pop
sbb
xchg
or
push
stos
mov
out
dec
adc
push
nop
loop
xchg
out
cmp
das
cmp
sub
add
mov
xlat
loop
bound
cli
test
sbb
jmp
cmps
xchg
sti
pop
or
push
mov
cmp
push
sub
mov
mov
fild
inc
and
lods
jmp
aam
push
stos
lock
push
add
fsubr
retf
out
jmp
push
aas
nop
dec
lods
psubq
xchg
fild
enter
pand
shl
jmp
loopne
repnz
ins
xor
ret
xchg
inc
outs
jecxz
xchg
pop
inc
xchg
mov
mov
mov
loop
add
jbe
lock
dec
fldenv
mov
xor
add
push
dec
int
xchg
pusha
push
sub
sahf
mov
imul
js
jecxz
sti
scas
fadd
loope
jmp
fimul
inc
outs
sbb
in
pop
lahf
or
push
pop
add
push
add
push
cli
imul
mov
loop
sbb
and
cli
inc
xor
cdq
bound
repz
push
rol
jb
outs
mov
shr
clc
mov
in
xor
pop
sahf
imul
addr16
pop
mov
loope
js
cmp
call
rcl
stos
fcomp
retf
mov
mov
add
fisubr
popa
xchg
sub
(bad)
cs
nop
(bad)
loopne
ds
hlt
add
clc
mov
pop
or
(bad)
gs
pop
test
cli
sbb
or
repz
sbb
jae
push
dec
ror
xchg
and
xor
call
stos
ret
inc
and
or
(bad)
fndisi(8087
jnp
(bad)
ds
iret
movs
cmp
rol
push
adc
out
jo
fst
add
loope
stos
adc
or
dec
dec
dec
dec
shr
repz
mov
push
adc
jne
xchg
out
xchg
jnp
(bad)
mov
aas
pop
loop
xchg
mov
aaa
jno
nop
(bad)
push
sub
aas
mov
or
xor
(bad)
shr
pop
(bad)
mov
jmp
jl
dec
sub
mov
push
cmp
mov
pop
cld
push
fadd
(bad)
xlat
push
loope
mov
rcr
adc
dec
and
stc
stos
ds
pavgb
cmp
mov
js
sub
jl
test
mov
xchg
push
cmp
retf
sub
lahf
mov
dec
adc
push
and
adc
inc
add
sbb
sbb
ds
xchg
inc
pop
movs
cmps
cdq
or
push
and
jmp
in
xchg
aas
jns
rcl
ins
sahf
out
mov
jecxz
mov
jg
dec
mov
loop
push
shl
fwait
adc
bound
ja
out
and
loop
jae
inc
fwait
outs
mov
sub
or
mov
fisttp
mov
jecxz
sub
inc
pop
mov
jnp
pop
das
stos
sbb
add
dec
out
mov
xchg
dec
push
sbb
sbb
(bad)
push
xchg
int
cmp
pop
imul
test
mov
outs
pop
pop
imul
push
or
lds
pop
xchg
ds
dec
add
jmp
push
pop
push
add
sub
stos
das
and
(bad)
in
fbstp
ss
ins
mov
cli
and
jae
popa
ins
sbb
out
xchg
cdq
xor
lods
xchg
adc
mov
dec
ret
jns
cmp
retf
adc
test
push
dec
sub
out
(bad)
loopne
jp
test
gs
bound
mov
mov
(bad)
loope
mov
cmp
cmp
dec
cmp
cmp
cmps
test
cdq
cmp
fs
pop
adc
sbb
push
out
ds
sti
loope
bound
adc
movs
push
fisttp
pop
cmps
fidiv
jo
or
icebp
or
mov
sub
inc
fiadd
xor
dec
ss
jnp
fwait
pop
or
inc
lods
shl
xchg
and
and
sub
xchg
pop
cmp
pop
inc
call
cdq
pop
push
aaa
or
pushf
sbb
dec
ret
dec
sub
mov
adc
or
lahf
adc
movs
ret
out
cmp
imul
outs
sbb
or
sahf
pop
mov
repz
sbb
push
jmp
ss
aam
xchg
or
stc
sbb
adc
pop
inc
jle
fwait
out
rcr
(bad)
mov
mov
sahf
push
pop
push
mov
jl
mov
gs
jne
pop
push
movs
scas
scas
aad
add
pusha
jmp
cmc
and
adc
inc
fist
jnp
xor
lods
xor
adc
pushf
xor
jae
adc
xchg
and
jle
xor
shr
lods
sub
inc
enter
in
stos
nop
scas
fist
or
pop
pop
adc
outs
fistp
hlt
adc
mov
pop
and
in
xchg
dec
aaa
sub
add
mov
call
loopne
mov
das
and
scas
(bad)
jle
(bad)
or
(bad)
cmp
mov
js
sbb
cs
mov
xor
shld
mov
inc
dec
xor
and
ret
lahf
mov
mov
aaa
xor
sbb
js
sbb
inc
sbb
xchg
data16
push
mov
std
push
mov
popa
in
mov
inc
loop
pop
cmc
scas
call
xchg
lods
and
loope
dec
rcl
sub
(bad)
jnp
dec
jmp
push
fsub
jns
jl
lahf
add
rep
mov
jmp
(bad)
and
inc
pop
and
(bad)
scas
(bad)
ret
push
out
cdq
mov
arpl
dec
cs
jmp
fstp
sbb
iret
adc
test
xchg
pop
cdq
outs
inc
and
jb
jge
add
stos
cmp
mov
out
push
inc
adc
ja
out
movs
inc
sbb
cmp
push
(bad)
pop
retf
push
jns
jbe
xor
or
push
push
(bad)
out
aad
iret
dec
mov
ret
sub
cli
push
xor
jl
inc
or
mov
outs
test
xchg
push
jecxz
imul
neg
dec
or
outs
in
les
ror
inc
clc
inc
dec
fs
loopne
dec
sub
bound
inc
mov
pop
movs
xchg
and
psrad
add
mov
daa
icebp
fnstsw
cmp
jns
fld
outs
call
outs
hlt
scas
xchg
xor
mov
pop
ja
(bad)
inc
outs
lock
and
out
nop
cmp
mov
dec
add
and
or
rol
xchg
mov
xor
loop
adc
and
jmp
xor
cld
push
addr16
pop
das
mov
mov
js
shr
and
(bad)
fscale
fadd
ss
or
loope
jmp
mov
jb
ret
(bad)
or
std
loope
mov
adc
or
cmps
repz
dec
add
imul
push
movs
je
movs
xchg
mov
or
mov
std
mov
jl
repz
in
push
add
rcl
call
xor
retf
jo
ror
fmulp
test
push
push
xchg
lahf
jge
add
xchg
pusha
sbb
cmp
pop
stos
daa
add
into
push
out
jno
jecxz
mov
ss
and
shl
sbb
jg
sbb
mov
les
(bad)
fild
lds
and
adc
es
jb
iret
int
adc
iret
pop
gs
push
cwde
jae
ss
cmp
retf
sbb
scas
(bad)
add
popf
(bad)
fisttp
and
div
gs
inc
cs
push
lods
xor
push
ss
aas
jbe
repz
adc
and
xlat
sbb
mov
xchg
fisub
(bad)
std
sbb
mov
push
mov
sub
out
pop
mov
cmp
clc
pop
test
mov
fwait
mov
cmp
in
dec
cmc
gs
(bad)
mov
into
pop
jmp
nop
data16
cmp
addr16
mov
and
call
cmp
xor
sbb
imul
into
pop
mov
retf
fld
dec
loope
pop
mov
aas
pop
xchg
hlt
fist
push
inc
je
ins
cmp
push
dec
popa
sbb
test
pop
repnz
pop
cmp
mov
mov
fisub
cdq
mov
add
std
and
mov
pop
sub
(bad)
bound
lods
lahf
push
retf
push
rcr
push
jnp
(bad)
and
cmp
out
stos
pop
sub
lds
std
leave
hlt
ja
movs
cmp
or
test
xchg
out
fsub
inc
fild
and
sbb
mov
ret
xchg
or
jmp
mov
cmc
mov
sbb
xchg
mov
jg
outs
lock
mov
adc
jno
ret
mov
mov
mov
mov
into
jno
or
sub
enter
(bad)
push
push
shr
enter
(bad)
jb
sbb
pop
mov
out
adc
and
fstp
sbb
sub
lock
pop
mov
inc
repnz
pop
outs
jp
outs
xor
shr
ret
jp
push
mov
data16
xchg
cmp
xor
fld
loop
sbb
mov
cs
or
fidiv
dec
mov
cmp
sbb
jmp
xchg
lods
or
sub
(bad)
idiv
sub
sbb
fcmovnu
sahf
dec
mov
inc
ins
test
mov
and
inc
mov
scas
mov
icebp
ss
sub
lds
and
enter
jnp
jle
jae
movs
ss
push
and
(bad)
xlat
pop
dec
push
mov
lods
fiadd
mov
cli
or
lea
sar
push
rcr
jg
cmp
rcl
retf
call
mov
xchg
popa
dec
cwde
fst
pop
mov
sar
(bad)
mov
cmc
xor
aam
xchg
push
(bad)
add
push
xchg
mov
in
dec
stc
(bad)
mov
popa
jnp
outs
dec
cmc
adc
xor
pop
mov
clc
adc
xchg
ret
out
cmps
or
mov
and
retf
std
or
cmp
ror
mov
in
jg
dec
ins
fist
imul
cdq
lods
push
push
stos
aas
inc
cmp
inc
lds
inc
adc
adc
mov
mov
push
outs
sbb
adc
inc
jno
ss
push
mov
jmp
mov
icebp
lds
lea
pop
jne
cmp
inc
es
es
or
rcl
out
xchg
pop
cli
outs
in
lods
mov
push
jae
leave
pop
add
stc
mov
stos
pop
ins
and
or
pop
and
out
jb
pushf
mov
cmc
adc
cmc
fmul
pop
dec
push
cmps
jb
xchg
cs
inc
call
pushf
xlat
jecxz
jns
sbb
pop
jmp
fld
retf
imul
pop
mov
imul
cmp
mov
pop
xchg
push
or
sub
sbb
xor
ffree
lock
adc
add
jp
std
adc
xor
stos
js
add
mov
pop
xor
cmp
cmp
sbb
add
mov
and
scas
and
push
ja
movs
pop
inc
(bad)
jg
dec
inc
jl
test
mov
xchg
jl
cmp
retf
jno
sbb
cmp
dec
loope
out
jno
ds
in
sub
inc
shr
inc
sub
adc
ins
jmp
cmp
mov
push
leave
shr
mov
dec
jecxz
mov
lock
idiv
pop
push
lds
arpl
rcl
rol
add
(bad)
fwait
mov
popa
in
cmp
mov
mov
fs
fild
push
add
mov
cs
sub
xchg
xor
xor
mov
xchg
cdq
jecxz
mov
das
mov
cmp
inc
loopne
fwait
add
push
inc
sub
inc
cwde
fs
sbb
call
cs
xor
xchg
(bad)
or
inc
inc
jmp
xchg
inc
sbb
pop
dec
push
pop
(bad)
pop
or
nop
out
push
mov
add
and
ins
or
(bad)
outs
or
mov
out
(bad)
outs
jo
lods
das
or
les
test
jmp
enter
nop
cwde
repz
hlt
movs
mov
imul
lahf
dec
xor
mov
dec
es
arpl
pop
jg
add
sar
xor
xor
and
lock
ror
fisub
fisttp
popf
inc
fisttp
dec
sub
jo
ds
clc
or
mov
inc
add
sbb
push
in
adc
aaa
stos
mov
push
lods
push
movs
adc
or
data16
ins
sub
lds
lock
sub
(bad)
fiadd
fs
xchg
xchg
popa
jp
fidiv
push
xor
or
dec
fwait
inc
sub
mov
sbb
fisttp
cs
cdq
in
jmp
or
shl
jecxz
mov
and
jmp
mov
inc
pop
and
outs
aas
in
stos
fmul
mov
hlt
cmp
ins
xor
popa
sub
mov
mov
lahf
in
std
pushf
retf
neg
out
sbb
into
(bad)
push
xchg
xchg
(bad)
mov
pop
das
out
rcr
(bad)
(bad)
fimul
sbb
xchg
aad
lods
loopne
cs
or
cmc
sbb
pop
and
aam
ja
out
mov
(bad)
jmp
sub
shr
mov
icebp
mov
push
out
adc
push
outs
dec
jg
dec
jl
cmps
sub
add
rcl
dec
fnstenv
mov
add
inc
xchg
scas
sar
pop
shl
test
adc
pop
test
xchg
cwde
or
xchg
add
adc
repz
repz
out
outs
popa
fld
dec
outs
rcl
push
xchg
jmp
xor
xor
shr
or
ss
adc
in
sub
aam
sbb
int3
fstp
sub
xchg
jne
mov
inc
add
cmp
popa
aaa
sub
fwait
pop
ret
lods
cmp
sbb
ficomp
push
cmps
js
add
xchg
xchg
inc
(bad)
call
jbe
pop
sbb
dec
xchg
dec
(bad)
sahf
icebp
xchg
movs
cmp
dec
xchg
mov
and
in
not
stc
je
ss
scas
fidiv
sahf
lds
test
pushf
outs
lods
xor
into
in
cmp
lock
and
out
aad
sub
or
jg
fwait
pop
(bad)
pushf
fcmovb
cmp
int
mov
ror
ja
(bad)
je
sti
outs
loope
mov
mov
lock
lock
mov
retf
faddp
inc
sub
out
pop
dec
nop
push
xor
int3
and
aad
push
dec
out
rcr
dec
lods
or
push
imul
fild
cdq
movs
cdq
or
movs
aaa
dec
ins
popf
(bad)
loop
mov
lods
dec
mov
push
mov
repz
sub
arpl
outs
ds
adc
xrelease
push
sbb
lahf
loop
repnz
cmp
shr
add
sub
cdq
sbb
icebp
(bad)
or
std
inc
bound
(bad)
in
dec
shl
stc
xor
(bad)
xchg
push
cwde
inc
sar
loop
xchg
pop
cmp
dec
pop
sbb
movs
xor
gs
jmp
icebp
out
std
lds
or
shr
(bad)
icebp
push
add
adc
retf
das
mov
xor
mov
arpl
in
cdq
cld
out
pop
scas
jns
jo
in
fistp
popf
mov
push
aas
sbb
push
xor
out
sub
fild
out
sti
test
add
lods
sub
pop
cmp
pop
jae
mov
les
popa
push
frstor
inc
rcr
inc
sub
pop
std
rol
test
add
fldenv
push
pusha
enter
cmp
lea
dec
into
push
or
mov
xor
stos
add
mov
inc
popa
jne
sub
mov
js
mov
add
jmp
loopne
push
cmp
mov
mov
loop
mov
rol
dec
in
cmc
ins
fldenv
mov
dec
inc
(bad)
aaa
dec
lds
xchg
dec
cld
dec
mov
mov
aam
adc
call
dec
scas
jo
pop
loop
fnstcw
dec
pop
adc
(bad)
or
jg
add
ja
pop
dec
into
stos
mov
ins
cmp
mov
mov
mov
clc
mov
mov
fs
inc
inc
loopne
lock
retf
mov
pop
jnp
cmp
mov
sahf
inc
mov
pop
xchg
lock
sub
pop
xchg
sbb
or
push
inc
movs
push
scas
fimul
imul
or
retf
dec
outs
js
push
sbb
not
pop
push
adc
mov
popa
push
dec
dec
(bad)
jl
sub
jne
cmps
jae
add
pusha
retf
pop
div
sbb
xor
in
sub
sahf
jg
pop
push
jp
inc
dec
cmp
ds
sub
cld
into
cmp
(bad)
mov
push
imul
fist
pop
cmps
in
jl
inc
in
test
out
movs
call
sub
loope
push
cmps
xchg
fidiv
jns
addr16
xchg
fimul
adc
test
je
sbb
push
inc
(bad)
in
mov
sti
rol
into
push
imul
(bad)
les
sub
adc
mov
xor
sbb
push
shr
push
sub
(bad)
std
xchg
mov
enter
adc
push
xchg
clc
adc
rcl
adc
mov
and
(bad)
imul
mov
test
jmp
movlps
mov
aad
std
jl
and
adc
fadd
xchg
test
inc
mov
push
int3
inc
dec
inc
mov
idiv
add
sbb
sahf
out
popf
jle
ins
jae
jp
outs
(bad)
and
mov
inc
retf
and
mov
pop
not
loopne
push
jl
mov
mov
stos
scas
sub
adc
push
sub
sti
stos
mov
sbb
mov
outs
into
daa
stc
(bad)
cli
push
ins
pop
loopne
mov
jl
and
cmp
jp
pand
sub
push
imul
clc
loopne
cld
retf
jle
outs
out
mov
fimul
jecxz
mov
jnp
lods
das
sbb
push
pusha
inc
leave
mov
add
(bad)
mov
and
div
out
jp
out
xchg
xor
sub
xchg
or
jge
lods
jns
fisubr
pop
(bad)
jecxz
stos
mov
jg
mov
iret
retf
dec
and
sbb
adc
dec
jl
ins
ins
xchg
mov
jns
mov
into
into
imul
xchg
dec
pop
pusha
mov
mov
(bad)
call
sub
push
into
pop
shl
icebp
xchg
cmp
pop
mov
xchg
stos
lock
mov
retf
and
stos
or
outs
sub
sysexit
in
aaa
jl
inc
rol
mov
mov
mov
out
lock
fist
jg
fdiv
repnz
pop
pop
mov
or
lods
lahf
js
sub
pop
add
popf
sbb
adc
cmps
mov
(bad)
dec
mov
mov
out
mov
mov
jecxz
mov
test
mov
or
push
push
aaa
jp
xor
rcl
stc
adc
add
jmp
lods
shl
out
and
add
jecxz
cmp
fild
adc
and
or
mov
ror
mov
xor
loop
push
pop
pop
push
jbe
fs
das
cmp
dec
inc
and
add
mov
gs
mov
cmps
dec
or
xchg
and
cmps
out
push
call
sbb
mov
addr16
cli
outs
inc
adc
add
xor
es
retf
cmp
shr
cmp
mov
or
jns
call
xor
retf
(bad)
jne
dec
fistp
push
adc
shr
mov
sahf
leavew
jnp
mov
jmp
je
inc
test
cmp
adc
test
cld
mov
adc
mov
or
mov
fld
or
not
push
mov
inc
scas
or
jmp
dec
call
inc
loop
fimul
pop
mov
jg
sub
jecxz
leave
ret
test
out
fisub
rol
ja
push
(bad)
nop
repnz
push
sbb
xor
pop
xor
stos
div
ins
cmp
(bad)
fxam
mov
ss
dec
add
jns
xchg
add
xchg
(bad)
sub
sub
mov
int3
pop
mov
ret
dec
sbb
popf
mov
(bad)
push
and
retf
inc
mov
or
dec
data16
add
clc
lea
xchg
mov
(bad)
mov
imul
xor
or
cs
xor
or
and
out
xor
aas
xchg
iret
sbb
jbe
pushf
pop
lods
stos
dec
mov
jmp
out
icebp
arpl
adc
sbb
mov
adc
inc
gs
aaa
(bad)
call
std
ret
adc
pusha
xlat
push
in
call
cmp
and
dec
cwde
adc
sbb
or
scas
movs
inc
sbb
push
inc
inc
push
add
mov
mov
retf
pop
icebp
adc
outs
add
bound
retf
xchg
jns
push
(bad)
jl
xchg
shl
cmp
icebp
arpl
cli
(bad)
les
xchg
mov
ins
inc
and
mov
mov
pushf
dec
inc
test
stos
(bad)
ror
daa
pusha
push
inc
cmp
mov
bound
sub
adc
mov
sti
dec
cld
mov
lods
cmc
cmp
and
shl
outs
or
mov
push
out
adc
daa
sub
push
in
jbe
aas
ret
push
add
mov
inc
scas
call
mov
imul
ror
or
dec
push
outs
mov
std
add
xor
ficom
repz
or
lock
mov
or
daa
add
cmps
jb
jae
mov
repnz
mov
rol
pop
sahf
jle
leave
sbb
jns
mov
les
jecxz
ins
adc
sub
sbb
adc
add
fadd
mov
jbe
push
repnz
jo
cmp
mov
fidiv
mov
imul
add
cld
ja
cmp
mov
cwde
daa
rcl
add
xchg
stc
sbb
lds
cmp
int
stos
rcl
cld
sub
aaa
mov
in
(bad)
popa
mov
jl
shl
sbb
outs
or
and
push
or
stc
sti
ins
sbb
pop
xor
jge
hlt
sbb
pop
add
pop
pop
sar
sbb
adc
sub
iret
lds
test
aam
or
mov
popa
add
jbe
or
scas
fsub
push
call
pop
pusha
lahf
cmp
xchg
mov
adc
push
cmp
in
cmp
pop
outs
frstor
es
call
mov
popf
jmp
pushf
mov
ins
mov
mov
xor
sahf
loop
fild
push
add
or
lahf
jg
daa
rcr
sti
test
sub
rcr
stos
cwde
pop
add
sbb
es
xchg
xchg
mov
or
and
int
and
jmp
sub
test
jl
lods
adc
adc
and
xchg
leave
fcomp
inc
xchg
xlat
sub
inc
xor
cmp
xchg
test
aam
(bad)
fcmove
shr
sbb
jo
(bad)
scas
inc
and
es
dec
clc
aaa
mov
mov
aam
mov
jge
stos
aad
and
sar
repnz
mov
xchg
fwait
sar
sub
push
mov
(bad)
popa
ins
and
push
push
xlat
jnp
mov
test
mov
loopne
jge
dec
rcl
fist
push
movs
sbb
(bad)
daa
mov
cmps
adc
test
cmps
std
lea
sbb
jmp
mov
lods
daa
and
stos
push
cmp
pushf
(bad)
mov
push
aaa
int3
lods
lods
fcom
add
and
rcl
pop
pop
mov
movs
pop
mov
shl
xlat
ja
pop
adc
and
(bad)
mul
inc
test
pop
pop
mov
cmp
push
inc
in
out
cwde
scas
outs
mov
iret
pusha
addr16
mov
hlt
and
hlt
push
ret
sbb
inc
push
lahf
jmp
das
add
xor
fbld
popa
inc
aam
outs
sub
scas
add
sar
adc
sbb
rcl
sub
inc
fsubp
aad
and
call
mov
mov
into
inc
repnz
xchg
xchg
mov
mov
mov
push
int
mov
out
mov
cmc
push
int3
int3
int3
frstor
push
(bad)
call
jmp
cld
jne
ret
or
test
mov
and
gs
rol
hlt
test
scas
xor
push
lea
popf
push
loope
xchg
mov
mov
es
(bad)
and
in
mov
imul
arpl
sbb
sub
pop
std
cmp
ins
mul
inc
xchg
cmp
xor
int
jns
mov
xchg
(bad)
stc
sbb
loopne
push
add
or
lds
repnz
add
popf
cmps
push
jmp
xor
or
jp
test
fst
fdivrp
pop
mov
xchg
(bad)
mov
popf
mov
push
sbb
and
push
push
fadd
add
mov
pop
mov
dec
call
stc
test
std
popf
mov
add
enter
(bad)
cld
rol
jae
cwde
stc
push
push
and
push
sahf
std
adc
cmp
mov
ss
pop
ret
in
sahf
add
out
icebp
js
(bad)
mov
add
shl
mov
sub
aam
iret
lock
xor
stc
stos
bnd
sbb
retf
or
sub
cmp
inc
sbb
outs
std
sbb
cdq
xor
mov
or
add
fdiv
sub
mov
rcr
xlat
pop
retf
aam
xchg
push
loope
sbb
xor
xchg
jno
movs
std
call
fbstp
and
mov
mov
inc
repnz
(bad)
xor
inc
sahf
ror
cmc
xchg
shl
pop
push
fisubr
cmps
ins
sub
adc
lahf
es
loopne
fnstenv
pop
adc
repz
inc
sub
mov
fild
int
lea
(bad)
in
mov
push
adc
(bad)
int3
add
cmc
pushf
es
cmc
inc
add
push
lea
ins
jl
popf
inc
mov
adc
jae
(bad)
mov
pop
mov
inc
loopne
dec
add
out
or
aam
retf
stc
xchg
repz
inc
mov
xor
or
icebp
in
dec
es
pop
(bad)
sti
dec
pop
cmp
lds
mov
test
in
push
stos
pushf
and
push
out
cld
dec
jecxz
rcr
or
xor
xor
push
or
lods
mov
push
movs
imul
jge
add
ss
push
jns
inc
jbe
xor
xchg
loopne
jle
test
push
ficomp
ins
in
fdiv
adc
mov
icebp
arpl
mov
push
push
mov
out
sub
lods
addr16
cs
cs
pop
push
shl
sub
je
aam
shl
aas
pop
stc
dec
ret
addr16
cmp
mov
xchg
dec
adc
mov
fldcw
in
aad
push
fsubr
add
mov
inc
inc
lahf
out
mov
and
ret
retf
dec
pop
(bad)
xchg
rol
and
inc
mov
adc
cmps
pop
or
cmc
mov
cli
mov
div
scas
repz
mov
dec
push
arpl
cmp
jge
les
cwde
mov
mov
pop
mov
sub
cmp
out
inc
jge
jno
or
test
stc
lods
hlt
jmp
clc
mov
lods
in
adc
sbb
lock
or
fbstp
mov
dec
fsub
sub
sbb
sbb
adc
sbb
mov
cmc
inc
into
mov
inc
dec
enter
cmp
pop
push
add
xor
or
fadd
int3
cmp
jl
mov
pop
(bad)
movs
add
sar
mov
xor
jle
and
or
or
(bad)
adc
jecxz
leave
push
sahf
leave
add
or
jle
ins
call
data16
les
sbb
adc
jl
jge
outs
(bad)
leave
adc
pop
push
jmp
or
or
jmp
popf
in
mov
dec
call
div
cmc
push
retf
pop
fdivp
fld
dec
mov
loopne
fnsave
je
data16
(bad)
aam
pop
lods
(bad)
mul
cmp
mov
or
dec
or
bound
mov
cmp
lds
or
jge
fisttp
xchg
rol
in
hlt
stos
inc
pop
xchg
jo
push
sbb
push
fild
fmul
adc
sbb
dec
pop
inc
mov
ret
mov
nop
lods
fld
aas
aam
mov
sbb
dec
aam
loopne
mov
shl
or
sub
repz
shl
aam
dec
push
in
mov
jmp
fdiv
inc
clc
(bad)
adc
push
xchg
xor
jns
popf
add
xor
xchg
sti
pop
sbb
mov
and
or
ret
or
inc
push
fsub
test
dec
ins
pop
fwait
xchg
es
dec
stos
adc
dec
aam
loope
lea
aam
xchg
in
out
push
adc
rcl
mov
adc
(bad)
sub
mov
test
ds
add
xchg
sbb
inc
or
dec
mul
dec
mov
pop
sbb
mov
mov
mov
sbb
inc
cli
push
push
add
mov
inc
jp
jecxz
jmp
inc
push
adc
ss
cmp
cmp
aam
dec
xchg
mov
jne
test
stos
jl
sub
dec
test
dec
ja
adc
sbb
cmc
aam
mov
enter
pop
sti
ror
xor
adc
int3
shl
popf
jnp
jnp
fwait
idiv
aad
scas
sub
mov
and
inc
shr
retf
and
jno
test
cmp
je
aas
out
fisub
mov
mov
mov
std
sbb
sbb
out
pop
inc
fisttp
add
nop
and
popa
pop
bound
popf
sbb
pusha
test
push
mov
jmp
or
inc
fst
(bad)
sub
mov
test
pop
sub
cmp
jbe
addr16
jge
lods
fdiv
in
mov
and
out
mov
sti
imul
add
mov
mov
imul
jb
out
push
imul
imul
pop
pop
or
mov
out
out
mov
ins
or
mov
jg
daa
mov
aaa
lods
and
clc
jge
pusha
xchg
mov
aaa
retf
inc
pop
mov
shl
xchg
jmp
std
fsub
adc
mov
jl
stos
inc
or
cmp
mov
inc
test
(bad)
pop
xchg
sub
xor
xor
out
pusha
int
loope
lods
jnp
inc
dec
pop
mov
test
pop
mov
gs
jae
bsr
cmp
mov
cmp
adc
scas
cld
xchg
cmp
inc
or
cld
movs
les
sbb
dec
mov
mov
iret
cmps
pusha
xchg
jge
jg
pop
sub
xchg
push
push
es
sti
(bad)
imul
(bad)
xor
dec
arpl
lods
jo
int
sbb
sahf
pop
loop
imul
sbb
fcomp
inc
aaa
or
and
add
popf
xchg
std
stos
sbb
lahf
shl
push
out
adc
cli
es
dec
outs
mul
mov
cmp
jae
call
xor
sbb
std
arpl
push
xchg
imul
movs
shl
iret
xor
mov
stc
dec
movs
scas
push
in
lods
jno
xchg
mov
sub
sub
sbb
iret
bound
xchg
(bad)
xor
mov
push
cmp
xor
clc
dec
or
and
scas
sbb
out
and
dec
inc
stc
jmp
shr
leave
pushf
and
div
pop
add
inc
inc
aad
push
cld
out
ss
jb
push
cmp
inc
(bad)
mov
push
push
jne
jl
cdq
out
(bad)
pop
push
sbb
scas
pop
sahf
xchg
retf
mul
sbb
cld
bound
jmp
ds
push
fcmovne
inc
shl
push
inc
sub
or
ds
sbb
push
add
mov
sbb
push
push
adc
ss
cmp
xlat
popa
jmp
mov
mov
aad
or
repz
push
ins
scas
popf
ds
repnz
xchg
ins
(bad)
mov
nop
lds
mov
and
pusha
popf
mov
fcmovb
xchg
iret
adc
jg
jns
mov
outs
lods
into
in
ret
scas
xchg
push
xchg
adc
ins
(bad)
mov
xchg
ds
aam
mov
push
jmp
les
pop
mov
cmp
mov
gs
hlt
pop
pushf
js
pop
fstp
pop
out
lods
inc
pop
fs
xchg
mov
push
fisubr
repnz
adc
retf
cvttps2pi
cmp
cmp
or
xlat
sub
in
or
sub
pop
in
or
cmps
int
jbe
into
adc
pop
xchg
pop
jns
push
sti
xor
inc
pop
add
or
ret
inc
movs
ins
enter
push
in
adc
or
movs
movs
push
aam
xor
dec
jns
shl
mov
cmp
pop
sbb
fdiv
pop
adc
jbe
sub
sub
mov
sar
xor
fs
ret
mov
movs
sbb
or
fmul
push
mov
push
into
pop
shl
aas
scas
sub
pop
dec
and
and
in
(bad)
je
test
adc
inc
gs
push
stos
and
dec
cmps
jb
cs
mov
pop
add
push
iret
imul
mov
hlt
dec
scas
mov
and
xchg
mov
scas
arpl
ins
adc
pop
push
popa
push
and
mov
jns
push
xor
dec
xchg
inc
mov
sub
and
and
sub
xchg
les
cld
and
adc
mov
nop
das
mov
shr
xchg
stos
pushf
mov
mov
movs
out
add
jo
cs
data16
je
out
fadd
sub
(bad)
movs
in
retf
ret
test
sub
sbb
sbb
jl
stos
dec
test
lods
inc
fs
mov
push
add
scas
test
inc
jbe
div
cdq
xor
pop
or
fxch
cdq
mov
add
ret
imul
push
cwde
push
dec
mov
xchg
mov
stos
stos
sbb
push
cmp
mov
pop
ins
inc
jo
pop
inc
aaa
or
mov
stc
call
dec
leave
mov
dec
sub
ffree
push
dec
fstp
xor
jmp
and
test
es
ficomp
test
and
loop
sub
jo
or
sub
sub
push
into
jmp
scas
sub
pop
pop
cs
scas
aas
call
jmp
cwde
(bad)
icebp
test
enter
mov
mov
sub
hlt
pop
push
addr16
ins
aam
cwde
loope
adc
xor
sbb
mov
pop
call
dec
jns
cmc
xchg
sti
lods
sbb
mov
ja
and
test
xor
je
jno
pop
mov
call
sbb
pop
popf
sub
mov
std
adc
outs
sbb
(bad)
push
mov
mov
test
jne
lock
push
add
xchg
add
sub
xchg
outs
bound
lahf
ret
(bad)
jle
out
mul
in
jecxz
in
in
mov
scas
xor
call
xchg
push
pop
dec
inc
(bad)
push
inc
mov
ins
std
push
scas
sub
sbb
jl
mov
test
call
jb
hlt
inc
dec
movs
stos
cwde
test
xchg
stos
dec
shl
xchg
sub
xchg
jno
jp
aaa
sbb
(bad)
adc
mov
lods
mov
movs
in
jne
(bad)
lds
aam
mov
xchg
jno
rcr
jo
loop
sahf
hlt
icebp
imul
pop
push
xor
(bad)
push
popa
pop
xchg
mov
mov
pop
ins
jo
push
xchg
rcl
jmp
outs
cmp
sbb
jmp
adc
inc
je
(bad)
dec
jl
gs
dec
or
aam
adc
nop
into
add
adc
ja
test
cli
pop
xchg
les
or
inc
mov
inc
idiv
gs
mov
xor
mov
mov
mov
jbe
inc
inc
sbb
mov
rcl
sbb
xchg
loope
test
es
adc
or
add
push
mov
cwde
cwde
fistp
xor
pop
popa
and
es
inc
pop
icebp
inc
push
push
push
popf
mov
aas
dec
jnp
mov
jl
mov
movs
(bad)
cld
or
rcl
(bad)
sbb
ror
inc
mov
rcpps
sbb
push
ret
ja
pop
leave
xor
fbstp
ret
inc
jmp
jo
loopne
rol
sub
enter
xchg
test
gs
(bad)
clc
inc
ja
xchg
aas
push
movs
movs
in
adc
sub
(bad)
mov
pushf
repz
sbb
aam
arpl
cwde
adc
and
rcl
in
mov
jecxz
mov
idiv
mov
aad
push
mov
mov
push
imul
(bad)
mov
ss
push
inc
inc
imul
aaa
movs
jae
aam
movs
mov
fisub
jle
pop
sbb
add
pop
xor
call
ficomp
sub
pusha
or
inc
movs
xor
mov
cmp
add
push
jp
mov
sbb
cmp
adc
ss
dec
cmc
fwait
shr
ja
or
pop
xor
jle
ds
xchg
jmp
leave
fild
gs
push
push
mov
jns
mov
loopne
sub
test
sub
(bad)
idiv
mov
push
cmc
sti
out
xor
xchg
in
bswap
loop
sbb
jp
jl
repnz
or
sub
push
mov
loop
push
adc
(bad)
popf
icebp
or
or
lods
rcl
fisub
cmp
jne
sub
or
mov
cli
out
test
dec
xor
sbb
into
pop
sub
imul
cmp
xlat
add
sub
out
pop
sar
je
test
ins
cmc
jge
cmps
mov
lahf
jge
lods
cmps
inc
inc
pop
xchg
pop
sbb
and
cs
movs
std
mov
ds
cmp
enter
push
call
in
jb
faddp
les
mov
cmp
add
cmp
xor
xor
jb
mov
aad
or
call
shl
inc
(bad)
xor
mov
int
jge
sub
ret
pop
loopne
repnz
dec
lods
push
movs
jbe
cmps
and
xor
push
js
iret
push
outs
adc
cmps
inc
push
or
cvtpi2ps
jno
not
rol
pop
jmp
jo
jle
cs
lds
jl
clc
mov
jb
test
(bad)
in
fmul
sbb
pop
inc
jge
mov
idiv
push
mov
pop
push
sub
test
(bad)
and
dec
mov
ret
cli
xor
xchg
add
mov
ret
or
xor
jp
nop
in
sbb
dec
or
ja
jle
jo
mov
mov
mov
push
sar
mov
cmp
xchg
cld
retf
retf
cmp
jns
adc
jno
xchg
push
mov
movs
test
stos
dec
xchg
push
pop
cld
xchg
mov
xor
loop
inc
mov
daa
js
jp
outs
mov
arpl
mov
cdq
inc
(bad)
pop
sti
inc
mov
push
movs
(bad)
fwait
mov
inc
mov
stos
and
std
xor
push
push
sbb
repz
and
cli
sahf
in
test
retf
or
inc
xor
push
data16
push
push
sbb
sti
ret
loope
mov
mov
pop
adc
js
inc
jge
in
hlt
pop
loopne
(bad)
movbe
lods
es
xchg
jle
jno
jns
call
popa
fisttp
lds
add
inc
xor
and
imul
dec
xchg
jg
icebp
xchg
pop
or
test
ins
leave
xor
adc
xor
push
pusha
pop
push
movs
mov
loope
cdq
add
mov
xchg
jo
sbb
(bad)
sub
or
sbb
sub
cmp
jp
mov
adc
(bad)
push
xor
xchg
loope
or
sub
dec
rol
pop
movs
push
imul
leave
mov
and
(bad)
mov
clc
xor
test
push
sbb
mov
pop
repnz
jmp
mov
punpckldq
not
inc
es
stos
dec
ss
es
vcvtdq2ps
rcl
pop
mov
xchg
retf
rol
mov
xchg
xchg
mov
adc
xchg
jmp
inc
add
in
cmps
sbb
test
scas
jmp
je
nop
cdq
sub
arpl
repz
(bad)
dec
adc
mov
sbb
mov
loop
pop
cwde
test
bound
xor
rol
inc
jmp
out
jle
mov
fwait
pushf
shl
jmp
lea
xchg
aaa
ds
pop
imul
push
dec
(bad)
les
loopne
js
jmp
fiadd
push
(bad)
(bad)
stos
gs
aad
push
add
movs
mov
pop
adc
aas
or
adc
cmc
cmps
pop
aaa
data16
jmp
lods
mov
mov
inc
dec
cmp
pop
daa
mov
in
dec
dec
xchg
loopne
cmp
push
pop
inc
jbe
pop
add
aas
out
shl
retf
cmp
and
inc
mov
xchg
fwait
cmps
sbb
jecxz
adc
pop
loopne
fmul
mov
fst
jnp
xchg
sub
or
xchg
push
jb
inc
cmp
out
push
repnz
fs
hlt
(bad)
pop
or
xchg
ins
jno
outs
(bad)
mov
cld
fsubr
cmps
ins
xchg
push
and
add
cmps
push
xchg
and
retf
and
test
lods
or
push
adc
aas
mov
pop
pusha
jmp
mov
stos
pop
lock
iret
cwde
in
xchg
mov
ja
into
fcmovnu
mov
dec
outs
loop
push
fld
push
dec
jl
sub
sub
leave
dec
std
fmul
jl
setns
adc
mov
xchg
add
or
mov
in
push
jmp
movs
movs
movs
xlat
mov
jae
cwde
cdq
inc
(bad)
sub
jmp
iret
test
xchg
ret
push
xchg
sbb
inc
xor
jg
dec
es
add
call
sub
jp
add
call
movzx
xchg
es
ficomp
aas
xchg
test
xor
pop
xchg
aad
ret
add
push
scas
ret
lahf
push
(bad)
sub
xlat
mov
mov
inc
mov
fst
repnz
mov
or
cld
(bad)
mov
pop
dec
adc
out
or
jb
int
aas
and
aad
stos
dec
adc
leave
and
lahf
call
or
in
das
dec
call
pop
mov
das
xor
add
and
aam
jecxz
mov
in
in
xchg
ret
sub
mov
repnz
or
ins
bound
lods
movnti
xor
dec
mov
cli
xchg
xor
stos
popf
jmp
das
stos
dec
mov
dec
add
lea
iret
sub
cmc
movs
or
mov
jmp
jle
mov
sub
das
add
out
movs
xor
out
xchg
clc
mov
es
clc
dec
mov
loop
aad
adc
repz
imul
or
fild
gs
cmp
test
iret
into
cmp
(bad)
pop
xchg
mov
cmp
pop
es
cld
adc
stc
lods
loop
pop
mov
mov
jg
test
pop
lock
or
(bad)
idiv
shr
push
adc
repnz
mov
dec
int
outs
outs
mov
psllw
jnp
mov
lahf
jb
clc
lods
xchg
std
call
jo
out
push
test
test
retf
push
out
and
jl
jns
add
test
call
loope
or
mov
jp
dec
in
stos
xor
jp
pop
stos
sbb
mov
inc
mov
or
or
push
lds
inc
(bad)
loop
pushf
das
es
pushf
in
fs
imul
in
loope
ins
jg
and
xchg
pop
loope
and
fld
inc
mov
sbb
ss
data16
cld
fbstp
fstp
pop
mov
and
nop
sub
jo
adc
jns
sbb
enter
js
ds
jle
jecxz
es
and
data16
imul
dec
arpl
retf
dec
push
adc
lds
mov
inc
rcl
addr16
pusha
(bad)
les
addr16
rcr
jmp
add
ficom
outs
xchg
rol
push
add
sbb
lods
lods
push
inc
xor
mov
or
xchg
fld
sub
bound
ffree
sub
dec
lahf
idiv
loope
call
pop
push
and
mov
mov
in
or
test
out
fcom
mov
rcl
xor
cwde
les
icebp
(bad)
xor
add
addr16
add
mov
shl
loop
pop
xlat
sbb
add
jp
jmp
mov
cld
shl
mov
fist
in
jmp
add
mov
inc
loope
inc
mov
inc
mov
jge
mov
sar
cli
arpl
fdiv
rol
mov
retf
adc
inc
clc
push
push
aam
mov
pop
adc
mov
and
repnz
clc
fwait
sar
mov
aam
js
retf
mov
test
mov
pop
dec
aam
push
xor
gs
retf
imul
adc
mov
mov
imul
into
sbb
cmp
mov
or
add
sub
out
aad
mov
ds
into
mov
rol
xor
push
in
add
scas
mov
jne
add
or
test
ja
ins
enter
(bad)
loopne
std
jmp
pop
repnz
sub
lods
loopne
shl
pop
aad
dec
lds
push
movs
out
retf
pop
adc
or
cmp
repnz
pop
xor
daa
push
mov
or
xor
xor
inc
sub
mov
cmp
or
mov
lea
inc
scas
and
pop
push
stos
and
repnz
jmp
cdq
lods
jge
sbb
imul
in
inc
push
sar
cld
cmp
clc
xor
aas
dec
sbb
sub
inc
aad
xchg
xor
rcl
mov
in
inc
pop
je
aam
je
rcr
and
out
int3
mov
dec
(bad)
mul
push
ss
adc
(bad)
jmp
loopne
or
xor
or
out
or
fdiv
mov
leave
adc
nop
and
rol
or
mov
dec
inc
mov
pop
xlat
sub
push
(bad)
mov
mov
ss
push
arpl
mov
retf
or
(bad)
pop
pop
mov
in
sti
pop
pop
and
pop
(bad)
std
cwde
inc
xchg
nop
ja
dec
sbb
xchg
into
test
adc
xchg
ins
push
idiv
aas
add
in
pop
push
mov
push
sub
push
mov
mov
adc
sbb
dec
and
mov
shr
cs
test
mov
inc
mov
in
jno
push
add
and
retf
cmp
mov
adc
and
aam
scas
pop
jno
dec
movs
mov
lods
push
ins
adc
repz
mov
out
in
fistp
dec
(bad)
in
daa
cmp
push
sub
hlt
add
dec
xchg
mov
or
fild
repz
test
loop
(bad)
les
cmp
mov
xchg
cmp
lods
push
pusha
sub
nop
sbb
(bad)
aas
mov
or
push
and
rcr
mov
or
sub
cli
scas
pop
jl
in
(bad)
out
hlt
scas
popa
lods
cmp
and
outs
inc
fldenv
cmp
push
xor
dec
out
mov
xor
cmp
mov
cmc
adc
push
or
jle
mov
cmp
fcom
outs
jno
sub
daa
push
outs
pusha
add
cmp
aaa
inc
mov
ret
xor
pop
sbb
mov
and
mov
push
enter
cmp
out
imul
sub
xchg
lock
jl
jmp
in
xor
aad
mov
xchg
(bad)
or
test
pop
(bad)
jl
push
mov
inc
pop
and
jb
push
scas
inc
and
mov
and
xchg
push
aad
and
mov
push
sbb
enter
pop
sub
inc
and
enter
cmp
aam
js
xor
cmp
mov
out
(bad)
out
xor
sar
fcom
or
mov
jne
scas
das
imul
rcl
dec
xchg
cld
mov
add
sub
and
xadd
dec
mov
retf
pop
dec
sub
sub
or
test
xor
lea
mov
inc
sbb
mov
(bad)
push
jno
pop
xchg
lds
ficom
push
cmp
fbld
out
mov
xor
cmp
mov
mov
cwde
and
mov
test
add
int3
fs
js
jo
mov
lods
xor
retf
call
jmp
and
push
les
bound
jmp
mov
xor
pop
inc
hlt
jecxz
mov
imul
adc
repnz
dec
xor
sti
out
xor
ins
mov
mov
into
retf
mov
cdq
xor
pop
popf
test
adc
enter
iret
retf
loope
ins
pop
add
and
repz
hlt
pop
cdq
xchg
jne
or
sub
xchg
jb
popf
(bad)
inc
pop
push
xchg
in
sub
mov
(bad)
jg
ins
xchg
xchg
sbb
jle
cwde
xor
test
pushf
mov
sti
inc
lods
pop
icebp
sbb
jmp
fist
call
test
cmps
mov
sub
xchg
xor
mov
lods
jg
mov
push
mov
add
mov
repz
push
lods
pop
jg
cmps
pop
push
data16
or
jno
stc
sti
xor
icebp
cmps
and
mov
nop
mov
jns
xchg
lods
lock
pop
cmp
movs
fnstsw
in
inc
mov
mov
inc
jmp
ret
sbb
sar
jns
fyl2x
pop
in
dec
idiv
lds
hlt
icebp
movs
and
xchg
mov
ret
mov
pop
sahf
loopne
mov
pop
js
dec
mov
and
jle
jl
ror
in
sub
fwait
jp
mov
jp
in
xchg
mov
jnp
and
out
mov
clc
out
mov
call
xor
xor
out
fs
sbb
xchg
xor
jg
adc
ret
mov
pop
(bad)
ret
cmps
cmp
adc
in
fidivr
add
cdq
test
(bad)
adc
sub
leave
jb
dec
mov
cmps
jnp
jnp
cmp
xor
push
add
cmp
xchg
retf
scas
push
sub
and
ja
adc
mov
mov
push
sub
add
cmp
leave
add
mov
push
(bad)
test
xor
mov
jp
fwait
inc
jp
stc
mov
(bad)
icebp
add
lea
dec
and
ja
mov
pop
dec
jo
adc
(bad)
mov
jnp
out
adc
mov
out
push
add
mov
scas
addr16
int3
aad
mov
movs
imul
jl
aad
push
out
cmps
test
dec
sbb
and
lods
syscall
iret
and
pop
dec
cmc
shl
daa
cwde
call
cmp
or
out
call
jmp
add
ins
add
clc
or
adc
and
sbb
push
loope
lods
xor
jae
sbb
(bad)
push
movs
push
mov
icebp
cmp
stos
(bad)
xor
fidivr
mov
nop
movs
mul
hlt
sti
jns
mov
imul
or
inc
jo
imul
xor
hlt
(bad)
sub
jbe
in
mov
jl
mov
xchg
stos
cmp
imul
push
and
and
or
push
jmp
nop
fwait
cmp
sub
aad
mov
into
push
enter
fwait
add
dec
xchg
pop
ror
inc
outs
xlat
dec
mov
arpl
sub
addr16
jecxz
sbb
loopne
jl
mov
pop
stos
dec
xchg
push
idiv
jmp
pop
dec
inc
add
xchg
pop
aam
fidiv
adc
mov
push
loopne
xor
cmc
mov
and
jnp
adc
or
(bad)
test
lods
das
sub
mov
popf
ret
iret
leave
mov
mov
xor
adc
push
inc
test
sub
test
jge
sbb
cmp
out
pusha
scas
nop
mov
(bad)
movs
jne
test
fidivr
jno
dec
fsincos
movs
mov
mov
dec
push
inc
dec
lods
out
mov
mov
hlt
xchg
pop
or
mov
scas
movs
add
mov
fnstenv
fdiv
dec
mov
mov
out
cmp
mov
repz
xor
jae
jle
sub
jnp
mov
mov
xor
loope
and
push
sbb
jo
xchg
xchg
inc
and
add
and
mov
push
imul
jle
aad
sbb
outs
sbb
stc
xor
mov
push
xchg
je
lods
mov
pusha
fadd
loope
lods
sub
iret
mov
push
movs
daa
sub
dec
nop
pop
scas
jmp
sbb
jb
and
mov
imul
pop
lahf
add
cmp
xchg
cmp
mov
rol
pop
push
or
mov
sbb
stos
in
push
xor
and
dec
xchg
mov
add
mov
not
mov
jecxz
jno
and
loope
and
out
pop
mov
out
int3
and
pop
jne
jbe
mov
jle
add
jge
or
push
or
add
mov
sbb
imul
inc
sub
mov
xchg
(bad)
cmps
mov
cmp
fld
add
push
in
fnstsw
icebp
push
repz
dec
pusha
xchg
mov
add
(bad)
mov
test
inc
jmp
xchg
dec
mov
(bad)
push
ja
popa
jnp
(bad)
cmp
aad
push
add
imul
adc
int
cwde
popf
or
push
test
push
out
rcl
inc
fcomp
fs
test
cmps
lds
or
cli
pop
mov
pop
xor
sti
repnz
cmps
mov
es
adc
lea
pop
jmp
mov
push
fwait
jecxz
dec
sbb
jnp
sar
imul
test
mov
pop
cs
or
dec
mov
ds
mov
mov
stos
inc
inc
pop
inc
scas
imul
imul
mov
mov
push
or
in
and
stc
xlat
fcmovnu
or
sbb
ins
xchg
lds
mov
aaa
mov
call
pop
in
sbb
in
popf
xor
sbb
sar
jno
frstor
adc
xchg
adc
mov
pop
dec
and
xlat
mov
pop
pushf
mov
or
pop
sar
push
bound
add
sbb
rcr
test
lods
and
push
cmc
rcr
add
je
dec
loopne
xchg
dec
lea
adc
cmp
jecxz
sub
iret
dec
(bad)
sbb
mov
iret
leave
push
lea
fstp
mov
mov
aad
les
aad
fadd
mov
sub
dec
fld
xlat
cmp
and
jno
scas
cmp
and
shl
or
jl
push
imul
call
and
and
inc
in
lahf
inc
mov
cmp
and
push
jnp
test
mov
pop
call
adc
(bad)
pop
(bad)
loop
fdiv
push
call
leave
push
out
sar
sahf
mov
pop
xor
in
loop
mov
add
out
daa
pop
movs
mov
rol
retf
sub
out
sbb
loopne
inc
cdq
cli
sbb
push
xlat
add
mov
add
enter
add
cmp
test
fstp
fild
mov
jno
mov
push
xchg
fdivr
dec
pop
add
loopne
fisttp
mov
aam
xchg
sbb
in
or
ret
mov
fnstcw
lea
xor
outs
jmp
jns
cs
lock
ficomp
adc
push
jnp
ror
addr16
xor
fld
fs
call
ret
mov
sub
mov
or
mov
ss
retf
cmp
(bad)
test
add
inc
and
lds
dec
mov
call
movs
loopne
or
(bad)
cdq
jne
pushf
or
sbb
mov
aad
pminsw
cmp
cmps
add
inc
out
iret
sub
inc
rcr
jle
test
iret
(bad)
push
add
movs
movs
mov
test
jge
mov
push
retf
js
lods
test
in
dec
sub
daa
push
sbb
and
ds
(bad)
xor
(bad)
mov
dec
mov
out
(bad)
sahf
adc
test
cs
cs
push
punpckhbw
mov
sub
repz
and
movs
nop
test
mov
inc
neg
das
add
cmps
push
fs
pop
pushf
stc
ins
push
pop
test
jnp
xchg
shr
test
cmps
xor
adc
pop
and
dec
popa
xchg
and
movs
and
out
dec
add
stos
cmp
adc
cwde
add
(bad)
mov
mov
add
in
sub
clc
sub
out
sbb
leave
mov
xchg
loop
jnp
cmp
ficomp
pop
cmp
hlt
push
rcl
xchg
rol
stc
sub
and
jmp
sub
xchg
das
jo
imul
adc
adc
sar
std
jmp
(bad)
retf
nop
pop
sub
mov
fucomi
and
or
mov
sti
mov
retf
cmp
mov
fwait
out
cmp
outs
dec
pop
test
push
jne
popa
mov
stos
in
mov
fldpi
cmp
cmp
push
push
in
(bad)
mov
mov
pop
fs
xor
ret
imul
lds
push
fmul
es
inc
lods
stos
pop
and
sti
push
ret
in
push
out
jbe
fsubr
cmp
repnz
push
pop
jae
call
pop
and
cmp
stos
inc
retf
jae
mov
fldcw
adc
push
add
imul
test
and
inc
(bad)
fisttp
imul
loope
jae
and
fnstsw
cmp
jl
data16
mov
aas
adc
lods
ficomp
out
mov
std
(bad)
xchg
out
xor
frstor
jae
mov
inc
sub
mov
outs
lds
ror
or
fsub
add
gs
and
and
dec
jbe
pop
add
lods
js
jp
test
imul
pop
cmp
mov
cwde
outs
cmp
test
xchg
adc
pop
sti
std
enter
pop
mov
jle
daa
pusha
xchg
cmp
cwde
in
sub
xlat
hlt
cli
xchg
pop
mov
pop
out
mov
std
jp
in
jmp
xor
hlt
data16
movs
add
cld
dec
lahf
sbb
std
mov
scas
mov
adc
mov
cmp
in
pop
ins
mov
nop
imul
xchg
sub
(bad)
cmps
pop
add
iret
xor
adc
jl
scas
aad
outs
(bad)
jns
mov
jp
jle
jle
mov
mov
dec
clc
(bad)
hlt
ret
(bad)
iret
xchg
(bad)
fild
(bad)
push
mov
mov
and
cs
daa
ins
push
stos
sbb
jno
push
pop
mov
es
pop
scas
outs
das
mov
cmps
xor
fs
mov
inc
mov
xor
inc
cmps
xchg
sub
stos
enter
pop
lock
sbb
push
jmp
imul
in
sub
aas
jle
shr
addr16
gs
lds
movs
inc
mov
xor
jno
test
nop
inc
pushf
fldenv
imul
lea
call
mov
rcl
sti
xor
xlat
dec
stc
add
inc
xchg
cmp
out
repnz
shl
inc
push
and
inc
call
repnz
inc
adc
std
mov
cs
xchg
and
std
jmp
pushf
addr16
call
mov
jecxz
xchg
mov
mov
js
in
je
add
sbb
push
adc
mov
xor
and
pop
jb
mov
mov
sti
aas
out
inc
xor
loope
inc
or
xor
adc
jmp
lfs
pop
rcr
(bad)
(bad)
rcl
cmp
loop
push
push
cld
push
xchg
popf
mov
aam
jl
mov
in
xor
pop
cdq
push
int
xchg
inc
pop
and
imul
retf
sub
push
sub
hlt
and
cmp
in
and
arpl
cmp
gs
(bad)
bound
sbb
sub
aas
jno
retf
(bad)
cwde
call
jl
stos
rol
in
mov
dec
add
sbb
out
xor
inc
es
stos
(bad)
jb
sub
test
jne
push
ja
pop
mov
mov
jb
cld
cmps
(bad)
xor
jl
sub
addr16
scas
xlat
repnz
push
ret
xchg
adc
and
and
fs
popa
(bad)
scas
arpl
mov
cdq
push
fwait
mov
jecxz
xchg
mov
cli
fiadd
mov
mov
mov
cmp
pop
lods
sub
adc
xlat
jbe
pop
cdq
push
lahf
or
jns
(bad)
dec
pop
push
mov
sub
add
popf
sbb
in
clc
cmc
into
pop
mov
mov
sbb
sbb
outs
dec
ret
adc
imul
add
push
pop
cmps
mov
xchg
test
outs
ins
sbb
sub
stc
mov
lds
arpl
mov
dec
push
mov
jecxz
push
jge
jge
inc
lds
inc
add
mov
jbe
lock
pop
mov
lods
mov
mov
repz
cli
jmp
fs
out
popa
aam
inc
inc
das
pop
add
idiv
test
or
cmp
and
rcl
push
shl
pop
adc
adc
loope
hlt
ret
dec
sub
mov
cld
mov
scas
mov
call
jmp
(bad)
xor
jl
sbb
outs
sbb
gs
inc
icebp
lahf
mov
mov
test
and
jo
mov
movs
jnp
xor
cmp
sbb
mov
shl
enter
(bad)
cmp
xor
rcl
lahf
jecxz
fmul
jecxz
cdq
mov
popa
in
mov
pop
add
shl
(bad)
ins
shld
push
loope
add
pop
sub
fwait
rcr
push
js
int3
push
arpl
inc
popa
shr
mov
mov
inc
cmp
pushf
inc
sub
pop
fs
aas
xor
retf
pop
xor
call
push
out
daa
pop
jecxz
enter
je
dec
fsub
pop
xchg
dec
scas
push
inc
int3
sbb
jns
pop
mov
mov
jmp
fst
xor
or
pop
ins
xor
dec
cwde
xor
xchg
or
xchg
push
es
lea
mov
bnd
sub
daa
je
push
mov
mov
adc
or
loope
sahf
pushf
and
rcl
xchg
das
test
cmp
fbstp
jmp
push
(bad)
sub
cmps
inc
push
jge
xor
enter
adc
dec
cmp
imul
enter
shr
dec
jns
aas
xor
movs
pushw
mov
adc
ror
sub
mov
cmp
xor
es
sbb
jge
mov
add
xchg
pop
or
iret
mov
in
push
xchg
xor
push
mov
call
out
int3
and
jle
xchg
mul
out
cmc
jmp
mov
pop
mov
enter
loopne
push
xchg
out
sbb
mov
ds
pusha
sub
pop
dec
std
mov
je
add
repz
mov
(bad)
jo
clc
cmp
and
lods
aam
push
in
icebp
and
ret
sub
mov
pop
lds
pop
call
push
push
jp
jnp
shl
cs
pop
stc
mov
xlat
sbb
aaa
mov
mov
(bad)
jmp
pop
in
adc
xor
add
repnz
mul
mov
clc
outs
jne
sbb
jno
mov
sti
loop
inc
sub
aaa
fild
lock
sbb
adc
jns
xor
push
dec
shl
inc
cdq
add
mov
inc
xchg
stc
lahf
adc
scas
in
ins
dec
lock
je
xchg
shr
jnp
jle
in
pop
push
pop
fucom
or
adc
sub
cs
rol
into
sub
stos
jl
sbb
sahf
mov
or
push
pop
loopne
je
pop
add
ret
mov
xor
mov
adc
xor
js
ds
adc
mov
add
shl
mov
pop
js
(bad)
rol
es
fcmovnb
in
test
dec
xchg
sub
test
fist
out
push
mov
repnz
sti
adc
xchg
or
inc
mov
push
dec
and
out
push
xor
dec
movs
xchg
cmp
lea
cwde
jecxz
out
lock
imul
push
pop
fstp
jle
xor
pop
add
jo
fisttp
cmp
xchg
fwait
(bad)
das
mov
mov
mov
sbb
stos
xchg
xor
es
and
inc
pushf
loopne
in
fisubr
pop
pop
ret
fidivr
push
xor
jecxz
sub
test
and
xchg
xchg
and
sub
push
xor
ins
mov
xchg
push
sub
dec
into
inc
retf
das
(bad)
dec
rcr
mov
push
add
adc
pop
jge
aaa
xor
bound
lock
jmp
test
jmp
xchg
or
mov
or
or
inc
stc
inc
push
push
add
xchg
mov
inc
in
push
(bad)
retf
jb
scas
repz
xchg
push
fstp
xchg
jg
loope
sbb
mov
and
mov
xchg
popa
mov
push
loopne
test
es
jecxz
idiv
jle
jne
dec
lods
mov
inc
pop
mov
test
fld
ret
and
dec
cmp
and
rsm
gs
cmp
mov
fist
shl
hlt
inc
mov
jo
and
or
hlt
add
push
out
scas
scas
inc
pusha
dec
jns
in
dec
(bad)
inc
mov
jo
aam
jmp
and
ret
cmp
inc
outs
cmps
mov
mov
pop
shl
add
add
jno
ja
mov
add
test
cmps
push
aam
mov
mov
test
pop
aad
mov
or
movs
push
retf
mov
pop
push
xchg
inc
push
jl
and
push
pusha
fild
mov
gs
repz
loopne
loope
pusha
(bad)
in
mov
dec
jae
xor
pop
hlt
pop
jle
jmp
call
mov
sub
test
sub
fld
(bad)
aad
or
push
xlat
(bad)
or
mov
mov
fiadd
dec
aaa
ins
jne
cmc
cs
int
bnd
sbb
fs
dec
je
cdq
repz
xchg
cli
adc
inc
inc
jo
sub
jle
sti
test
dec
mov
sbb
inc
mov
mov
jo
pop
in
jno
or
cmps
dec
sub
(bad)
retf
inc
adc
push
inc
fs
mul
mov
sbb
jnp
add
(bad)
icebp
push
sbb
pop
sub
lods
fdivr
add
sbb
pop
sbb
sbb
mov
push
ja
xchg
ins
loope
inc
sbb
das
mov
imul
std
pop
add
mov
sub
std
xor
(bad)
dec
stos
pusha
add
pop
cmp
and
mov
mov
cmps
mov
pop
adc
in
pop
xlat
stos
scas
sub
stc
in
out
jbe
xchg
or
inc
sbb
cmp
addr16
in
or
jno
push
dec
pop
cmps
xor
shr
push
jns
add
arpl
adc
sub
jb
and
bound
push
test
clc
mov
push
fsubr
pop
jae
test
fst
aaa
pop
iret
popf
jle
adc
inc
push
mov
fst
dec
pop
bound
mov
js
outs
inc
adc
aam
xor
outs
inc
jecxz
sbb
shl
jmp
std
mov
loope
call
neg
sub
clc
and
jg
pop
push
inc
cs
jmp
loop
mov
psubusw
add
loopne
ret
pop
hlt
and
cdq
clc
mov
test
jb
sbb
jg
(bad)
mov
dec
push
loop
and
pop
mov
mov
push
sbb
sub
mov
mov
movs
jmp
inc
sbb
or
sub
cld
jmp
xchg
loope
cmp
hlt
test
pushf
cmps
xchg
xlat
ins
nop
dec
lahf
jno
add
movaps
add
pop
jp
daa
(bad)
sbb
mov
xchg
pop
fcmovu
sbb
ret
jmp
aam
aad
pop
push
leave
sbb
test
test
cmp
jae
mov
sbb
cmp
mov
xchg
dec
inc
dec
jno
not
imul
outs
add
inc
ds
aad
push
fidiv
mov
or
mov
add
mov
daa
icebp
mov
clc
sub
or
xchg
sbb
ins
test
xchg
cmp
adc
cmp
xor
fisubr
add
out
mov
cmc
add
push
or
adc
pop
cdq
pop
ret
push
stos
imul
and
sub
cmp
pusha
cwde
ins
push
pop
inc
mov
int3
idiv
popa
cmp
push
inc
lock
in
push
jp
mov
loope
(bad)
in
adc
and
lods
and
or
jmp
pop
and
xor
xchg
call
shr
sbb
add
cld
lds
test
mov
(bad)
clc
sub
lock
imul
call
pop
retf
data16
dec
rcr
cmp
enter
mov
cmp
lea
in
mov
push
push
or
sub
cmp
inc
or
lock
outs
inc
add
add
les
neg
push
std
mov
hlt
pop
push
mov
pop
adc
xor
lock
xchg
sub
or
scas
shl
jp
mov
and
imul
mov
cmps
test
shr
test
pop
out
leave
mov
xor
dec
idiv
add
dec
repz
ja
ret
mov
jns
add
es
or
out
gs
dec
popf
aas
xlat
dec
out
imul
cmp
mov
mov
xor
fdivr
and
add
mov
retf
jae
jge
pushf
aaa
xchg
xchg
mov
xlat
cli
jb
std
xchg
xor
jmp
repnz
mov
xchg
popf
and
mov
mov
lock
mov
xchg
fldcw
xor
out
pop
pusha
ret
nop
jnp
push
shl
scas
and
mov
xor
(bad)
retf
(bad)
add
add
cmp
imul
xor
and
(bad)
jnp
push
pop
fwait
push
mov
inc
scas
scas
adc
pop
mov
xor
mov
sub
test
xchg
push
jge
mov
(bad)
and
movs
xchg
xor
es
imul
xor
stc
jp
dec
fucomp
in
ret
xor
scas
mov
sbb
mov
dec
adc
loop
push
pusha
ds
xchg
cmp
jae
lock
sub
dec
dec
movs
or
in
and
cwde
fwait
xor
fs
pop
out
mov
and
pop
xlat
rol
push
ficomp
stos
and
ficomp
sub
enter
adc
shr
cmps
sub
lods
mov
les
inc
test
outs
aad
mov
sbb
jb
lahf
sbb
nop
es
push
adc
int
inc
call
je
cwde
jnp
pop
inc
push
gs
pop
in
shl
pop
mov
stos
lock
pop
jae
cdq
out
mov
js
stos
outs
and
lds
pop
jge
add
xchg
in
mov
push
cdq
and
(bad)
int
clc
in
daa
push
js
push
loopne
cli
je
repnz
iret
enter
or
add
and
add
ds
adc
scas
jl
movs
ja
mov
adc
sbb
sbb
movs
mov
sub
stc
test
sub
shl
mov
call
fstp
inc
scas
mov
aam
stos
xor
push
pusha
daa
mov
xor
xor
ja
outs
sub
push
add
mov
das
sbb
int3
dec
sub
dec
das
lds
test
in
ror
dec
push
jo
xor
pusha
call
push
add
push
add
ret
pop
xor
push
popa
jae
sbb
push
push
js
pop
jecxz
pop
pop
fs
int3
in
sti
fmul
icebp
cmc
int
push
repz
cld
jmp
mov
cwde
add
dec
cdq
and
push
repnz
test
mov
or
pop
into
xor
mov
mov
test
jnp
repz
nop
or
cdq
jae
stos
stos
xchg
cs
sub
pushf
int
inc
arpl
das
ret
repz
mov
js
and
mov
pop
mov
cld
fisub
pushf
(bad)
aam
fxch
enter
aaa
dec
sub
out
sbb
xchg
inc
and
pop
mov
pop
cmc
push
xchg
inc
mov
scas
push
push
stos
test
dec
jne
out
push
sbb
inc
push
and
add
mov
clc
lock
fsub
push
mov
or
stos
ficom
stc
and
in
cmps
repz
mov
sub
push
lahf
jo
cmp
vunpckhps
dec
and
stos
cmp
mov
pop
or
aas
imul
xrelease
sbb
jle
add
aaa
inc
fbld
mov
cmp
call
sbb
aaa
pushf
out
xchg
daa
mov
cwde
dec
jg
hlt
test
xor
lahf
adc
push
sbb
push
cmp
mov
stc
cmp
xchg
div
pop
xchg
retf
adc
out
xchg
clc
in
idiv
push
cmp
sbb
pushf
jae
mov
xor
daa
mov
mov
out
jnp
into
out
mov
pop
retf
inc
out
and
js
je
in
lea
iret
gs
scas
cld
fnstenv
mov
test
inc
cmps
push
repz
cmc
adc
and
push
sub
xor
mov
cwde
iret
test
fadd
popa
pop
sbb
sub
loop
cmp
mov
jno
ret
mov
xor
loop
into
repnz
ins
fadd
cmp
inc
mov
sbb
sub
and
xor
push
mov
cmp
mov
rcl
(bad)
push
test
nop
push
(bad)
shl
sbb
sar
pushf
jl
call
icebp
retf
xchg
sub
add
sbb
stc
xchg
frstpm(287
and
dec
mov
push
cmp
pushf
xor
cmps
cld
pop
push
mov
add
sub
fimul
or
push
pop
rcl
jmp
add
fmul
test
jp
pop
dec
out
mov
test
loopne
push
jmp
mov
fisubr
and
loop
add
ss
push
lock
shl
inc
xrelease
mov
and
fs
dec
cmps
mov
jmp
aam
loope
(bad)
jmp
sub
pusha
bswap
pop
mov
in
fwait
jl
repnz
fimul
cmp
ss
mov
jno
adc
jp
sbb
cmp
inc
loop
call
es
das
cmp
add
or
dec
mov
xchg
aaa
iret
frstor
cdq
scas
push
in
mov
fisttp
mov
fsub
ins
jae
xor
inc
lock
push
jmp
adc
jp
stos
push
jmp
jne
pop
adc
or
enter
adc
aaa
ins
movs
fsubr
jecxz
pop
fadd
test
push
inc
pushf
out
sar
imul
inc
imul
test
mov
push
jge
mov
jmp
data16
cmp
xor
mov
in
add
xor
loop
js
and
sub
xchg
ss
pop
leave
push
add
jo
xchg
outs
leave
fdivr
les
jae
adc
sub
(bad)
aas
push
fwait
aaa
repz
pushf
aam
jl
or
pop
xor
in
ja
mov
mov
xor
rol
ret
adc
fnstenv
xchg
adc
mov
aam
push
repnz
lahf
pop
add
enter
gs
mov
lahf
and
xchg
inc
pmaxub
adc
add
pop
iret
and
cmp
test
jp
pop
add
ret
shr
(bad)
jge
inc
repz
enter
stos
ds
fsub
cld
cmp
add
cmp
mov
fisttp
in
pusha
mov
sbb
(bad)
(bad)
inc
add
mov
push
dec
xchg
mov
clc
cmps
cmps
and
xlat
or
shl
in
adc
popf
dec
mov
and
dec
clc
push
sbb
es
xor
mov
pop
invd
jecxz
in
or
fadd
inc
arpl
imul
daa
test
repz
mov
addr16
das
jno
cld
loopne
cmp
push
je
mov
pop
scas
aad
int
clc
and
dec
mov
in
jecxz
(bad)
fadd
jg
sub
and
mov
mov
mov
cmp
sbb
inc
icebp
or
pop
int3
cmp
ficom
imul
inc
sahf
dec
leave
sub
loopne
sbb
sbb
fsub
xor
jmp
mov
dec
jle
adc
ss
push
popf
popa
ds
loop
je
jb
pop
por
in
retf
sar
xchg
adc
repz
enter
rcl
jge
outs
jo
ret
pushf
xchg
stos
adc
addr16
or
xor
adc
adc
out
aaa
mov
jp
and
sub
inc
mov
xchg
adc
mov
int
mov
ret
in
in
int
add
repnz
(bad)
test
loope
push
rol
cli
add
xlat
or
mov
xor
daa
jne
push
rol
shl
stc
mov
cmp
mov
xchg
into
push
mov
ss
out
jbe
enter
push
or
xor
clc
in
aas
lahf
dec
push
hlt
cdq
cmp
call
or
(bad)
cld
cmps
push
sbb
sub
scas
add
adc
adc
movs
pop
sub
or
lods
sub
push
add
dec
dec
dec
mov
and
add
in
sbb
pop
or
sbb
xchg
fadd
mov
aas
mov
push
iret
mov
fmul
sub
aaa
jg
jns
paddsb
push
pop
sti
lea
out
(bad)
hlt
sub
cmp
or
pushf
lds
ret
das
and
sbb
test
add
jmp
inc
out
mov
inc
dec
sub
les
sbb
(bad)
cmp
into
xchg
nop
push
lock
not
test
pop
inc
or
cmps
nop
xchg
ins
popfw
xor
es
leave
retf
sbb
mov
mov
adc
jno
(bad)
adc
push
movq
and
fld
or
cmp
mov
push
sbb
cld
pop
movs
or
test
iret
mov
je
icebp
sbb
xchg
sbb
mov
mov
(bad)
jmp
in
mov
xchg
aam
and
mov
inc
nop
and
add
gs
add
mov
jns
mov
adc
retf
and
repnz
and
idiv
gs
xchg
out
repz
and
fimul
rol
xlat
sar
jo
cmps
add
xor
paddw
dec
sub
imul
add
fisubr
add
aam
scas
aaa
push
push
mov
push
add
push
enter
lods
pusha
jge
pop
xchg
(bad)
out
adc
inc
or
test
xor
div
sub
xchg
jp
repz
xchg
and
sub
stc
pop
xchg
(bad)
xchg
cmps
mov
scas
iret
call
push
pop
imul
dec
mov
(bad)
add
sub
fst
mov
mov
xchg
sub
xor
add
dec
add
mov
adc
mov
popa
leave
movs
mov
popf
and
or
push
(bad)
xor
mov
push
dec
and
sti
cmps
(bad)
retf
aam
add
jns
out
enter
push
das
mov
add
add
pusha
aas
in
sub
push
fwait
dec
xchg
lods
sub
push
inc
sub
mov
adc
cmp
mov
mov
mov
cmp
std
shl
pop
inc
ror
jp
mov
cli
in
mov
jecxz
and
fwait
cs
adc
ss
cmp
lahf
xor
pop
loopne
arpl
and
push
inc
xchg
repnz
or
shl
cdq
repz
xor
add
es
aaa
mov
stc
mov
jae
bound
out
(bad)
xchg
jmp
das
mov
mov
stc
mov
jae
dec
cdq
icebp
jne
loop
cwde
sub
pusha
cmp
(bad)
imul
pusha
dec
sbb
push
inc
out
mov
(bad)
out
cs
cwde
sbb
ss
push
popw
shr
popa
or
sti
stos
add
push
jmp
jg
mov
inc
dec
mov
xor
mov
cwde
out
mov
add
cmps
cs
mov
mov
ja
mov
add
shr
adc
call
xchg
mov
mov
mov
mov
push
sub
ret
mov
jg
in
jno
push
cwde
test
imul
push
dec
xor
sbb
outs
adc
mov
and
test
push
push
fisub
das
repnz
pop
mov
scas
or
sub
(bad)
fdiv
scas
mov
add
xchg
mov
cmp
cli
push
cmp
mov
and
jnp
lock
xor
and
dec
jecxz
lock
xchg
and
or
retf
add
fiadd
mov
fisubr
stos
out
mov
aas
jno
push
pop
push
xchg
adc
sti
add
(bad)
addr16
push
arpl
and
sbb
cmps
ins
in
data16
fistp
cmp
lock
aaa
rcr
push
push
int3
jecxz
retf
popa
adc
int
xor
loopne
xchg
or
cwd
aaa
iret
sti
inc
mov
adc
and
xchg
jno
sbb
and
mov
mov
out
add
sbb
mov
lods
out
dec
out
bsr
push
sub
test
xor
test
add
(bad)
jp
sbb
mov
adc
sbb
scas
ret
or
lds
mov
leave
fld
lods
(bad)
mov
inc
(bad)
data16
inc
mov
dec
push
mov
lahf
imul
mov
out
sbb
clc
push
lds
dec
enter
in
cwde
push
iret
clc
inc
call
movs
or
push
popf
jge
pop
push
cmp
sub
mov
jb
ror
and
pop
in
pushf
imul
push
ficom
icebp
adc
jecxz
retf
pop
rol
std
sahf
pushf
gs
mov
jmp
mov
add
add
xchg
jno
movs
adc
pop
cmp
or
fstp
dec
add
dec
(bad)
mov
fs
dec
retf
sbb
(bad)
dec
pop
ins
and
(bad)
dec
popa
(bad)
aad
xchg
push
adc
xchg
adc
xchg
push
enter
aad
sub
and
sub
adc
mov
stc
inc
lahf
test
sbb
sar
neg
scas
int3
aam
scas
jne
rol
mov
push
dec
jecxz
sub
rcl
ror
cmps
cmc
arpl
inc
out
jns
add
sahf
cli
mov
mov
pushf
ret
mov
les
adc
pop
outs
mov
fwait
sbb
pusha
data16
out
push
xor
add
mov
inc
adc
pusha
das
push
les
int
popa
or
ficomp
xor
mov
sahf
iret
cmps
add
retf
sub
cmp
cmc
cmp
ins
lea
out
and
sti
cli
imul
outs
lods
adc
mov
lods
sub
mov
mov
add
sub
shr
sub
add
adc
je
push
adc
icebp
lahf
cmc
jp
dec
retf
mov
std
sub
pop
dec
sub
dec
aas
repnz
xor
lock
fistp
and
bound
xlat
adc
adc
and
(bad)
pop
rcr
gs
mov
leave
jae
push
inc
xchg
mov
dec
addr16
jl
push
sahf
cmp
inc
xchg
les
push
dec
(bad)
lahf
cmc
xor
(bad)
shr
outs
pop
cmps
cmp
enter
cs
xchg
mov
ret
inc
sub
fidiv
sub
out
jne
dec
xor
xchg
jmp
inc
aam
scas
push
arpl
xor
xchg
fld
xor
push
mov
cdq
sbb
adc
stos
xchg
mov
inc
sahf
mov
retf
(bad)
mov
fs
lds
cld
sbb
add
out
pop
jecxz
daa
add
pusha
test
(bad)
out
nop
mov
mov
xlat
in
retf
xchg
cmc
cmps
inc
pop
cmp
repz
push
inc
jg
stos
mov
pop
iret
ds
xchg
push
mov
jno
adc
imul
js
les
adc
pop
das
aad
inc
inc
xor
jmp
inc
iret
std
jae
or
fild
push
les
sbb
repnz
sub
fld
call
pop
mov
or
pop
out
outs
in
push
mov
int3
ret
je
mov
mov
sub
add
and
retf
and
fidivr
or
addr16
mov
ss
(bad)
sub
or
mov
imul
ds
les
xor
sbb
xor
jns
sbb
les
adc
dec
add
jnp
dec
daa
mov
inc
xlat
sbb
jge
jecxz
push
push
jp
sar
in
xchg
repz
gs
pop
cmp
mov
mov
shr
sub
(bad)
push
clc
cli
mov
xchg
push
xchg
mov
sbb
inc
jp
or
ss
pushf
mov
retf
fsub
adc
xchg
xor
aaa
sbb
mov
fisttp
xchg
pop
or
popf
ds
das
jno
xor
cmps
dec
mov
js
dec
imul
sub
mov
cmps
leave
es
jne
clc
push
arpl
fisttp
or
dec
dec
adc
add
lods
adc
and
mov
xor
xchg
and
psrad
movs
dec
cmovp
mul
inc
shr
cmp
inc
jmp
mov
mov
stos
sti
(bad)
jp
jnp
(bad)
neg
add
div
ror
jns
dec
test
push
lea
lods
retf
xchg
or
fldenv
xchg
inc
pop
mov
sub
dec
mov
pop
ja
adc
push
rol
sub
xchg
imul
in
aaa
repz
(bad)
push
sub
mov
dec
js
jns
jae
lea
cmc
add
sbb
cmps
test
add
ret
(bad)
sub
call
cwde
ins
xchg
push
mov
rol
xor
jns
fisubr
sub
sub
jb
in
js
sbb
mov
pop
daa
movs
jbe
xchg
iret
pop
sbb
adc
jne
add
mov
clc
lea
push
ds
inc
ins
sbb
in
es
popa
jmp
popa
push
cs
scas
cli
sub
lds
in
dec
(bad)
leave
out
jg
call
dec
shr
clc
jns
ret
or
popf
sbb
nop
xor
mov
push
repz
sub
push
push
ins
or
mov
inc
aad
jecxz
jne
arpl
das
nop
mov
mov
jecxz
mul
cld
push
jge
xchg
or
daa
int3
push
sbb
jmp
shl
mov
adc
faddp
stos
inc
shl
aaa
hlt
sahf
dec
retf
fwait
or
in
aaa
xchg
and
(bad)
mov
pop
ins
test
addr16
xlat
jmp
jmp
in
jb
retf
ret
pusha
push
lahf
(bad)
xor
xchg
mov
ins
pushf
aaa
xchg
int3
int3
out
retf
popa
mov
int
jmp
movs
inc
test
and
xchg
es
mov
push
sbb
dec
xor
aas
push
xchg
jo
leave
das
mov
arpl
(bad)
repnz
lahf
sahf
test
fisubr
jne
test
sbb
ins
mov
mov
sub
mov
jmp
and
xchg
js
mov
ret
inc
scas
mov
cmp
pop
mov
mov
sbb
xchg
xor
pop
lea
cmp
jg
rcl
aad
push
call
sub
and
add
mov
mov
mov
loop
dec
retf
jecxz
and
call
out
mov
lods
scas
adc
lods
fdiv
inc
jns
mov
cmp
push
mov
cs
sbb
cdq
(bad)
fsubr
test
xchg
fcomp
push
int3
icebp
jno
jmp
sub
mov
gs
lds
repz
mov
out
dec
xchg
enter
add
pop
mov
rcl
pop
in
icebp
dec
(bad)
aas
mov
hlt
rol
shl
mov
rol
jle
lahf
enter
sahf
pusha
mov
push
cmp
mov
test
int
pop
inc
jno
mov
and
(bad)
aad
pop
jge
sahf
cmp
shr
add
xchg
ret
sbb
pop
sbb
stos
fisubr
aaa
xchg
std
shr
iret
mov
cmps
jno
xor
dec
jmp
js
pop
pop
aam
inc
push
in
xchg
sbb
aaa
pop
stos
jecxz
test
rcr
jb
xchg
(bad)
outs
leave
inc
enter
sbb
add
push
jl
push
hlt
imul
das
stos
mov
stc
mov
dec
repnz
pushf
xor
sub
call
pop
jns
and
arpl
push
fadd
in
dec
jge
mov
mov
inc
fdiv
and
mov
adc
sbb
aaa
cmps
dec
retf
jl
cmp
push
mov
ret
and
jmp
mov
mov
mov
dec
push
push
xchg
inc
enter
imul
xlat
sahf
inc
mov
into
addr16
push
fcmovu
mov
mov
inc
adc
in
mov
pop
dec
add
mov
stos
mov
sub
stos
push
mov
mov
pop
sbb
out
sub
scas
pusha
mov
imul
mov
fs
and
(bad)
pop
(bad)
mov
rol
sub
mov
data16
mov
stos
sti
retf
sub
repnz
data16
mov
pusha
push
xor
add
cmp
push
adc
sub
mov
dec
fstp
xchg
dec
ftst
dec
push
adc
enter
jmp
test
jnp
lds
inc
push
fdivr
addr16
cmp
gs
xor
repnz
lahf
popf
dec
hlt
jns
pop
shl
jne
lods
or
fst
push
dec
cmp
jne
in
adc
std
xor
sti
and
inc
das
jle
retf
inc
jnp
mov
addr16
ins
out
and
mov
adc
(bad)
jo
push
inc
pop
(bad)
mov
sub
mov
loop
sbb
iret
std
sbb
int3
mov
mov
xchg
fisub
mov
std
pop
fdiv
leave
call
mov
(bad)
aam
sbb
(bad)
mov
cmp
cmp
xchg
(bad)
(bad)
jecxz
xor
sub
mov
sub
mov
cmc
jbe
push
sub
push
ror
push
nop
jns
imul
mov
stc
std
jecxz
xor
stos
mov
in
or
push
mov
icebp
mov
shl
fs
aam
mov
imul
adc
icebp
test
or
repnz
shl
ret
push
(bad)
jge
call
mov
bound
mov
pusha
sub
imul
jnp
ja
mov
in
test
cmp
lock
jo
sbb
nop
cmps
fisttp
test
call
lea
or
inc
sbb
(bad)
in
or
cmp
pushf
dec
mov
mov
pusha
call
sub
adc
xchg
in
and
aaa
mov
scas
out
in
cmp
test
lahf
jb
and
lahf
retf
ins
not
mov
and
adc
fstp
mov
xchg
adc
or
mov
mov
int
push
xor
rcr
sub
retf
inc
ret
dec
xor
fs
jmp
dec
jp
jle
fisttp
or
sub
ja
jle
xchg
add
sub
bound
cwde
pop
test
jmp
aam
arpl
aad
sti
ds
jae
fdivr
dec
stos
cmp
fiadd
jmp
add
mov
jle
inc
and
pop
inc
test
add
daa
cdq
cmp
add
aaa
sahf
daa
xor
loopne
test
frstor
aad
jne
repz
icebp
pop
shl
loop
xchg
mov
stos
mov
add
cmp
in
xchg
cdq
(bad)
cmp
mov
cwde
(bad)
push
mov
mov
ffreep
inc
xchg
ret
icebp
imul
movs
mov
jno
mov
mov
je
bound
cmp
jp
lods
push
mov
(bad)
mov
add
push
repnz
push
dec
sbb
mov
bound
lea
in
lock
or
fnstsw
xlat
xchg
sub
adc
jne
pusha
adc
mov
fidivr
mov
xor
retf
adc
dec
scas
lds
test
mov
add
bound
mov
cwde
sub
aas
dec
and
mov
int
popf
mov
sbb
cmp
jo
dec
scas
xor
mov
sbb
call
call
xor
and
aam
(bad)
dec
rcl
mov
pop
int3
push
xlat
clc
mov
cld
std
mov
cmp
fiadd
cmc
sar
scas
shr
push
inc
mov
push
lahf
sub
xor
nop
in
(bad)
mov
push
fs
push
xchg
cmps
call
popf
pop
mov
sbb
inc
jmp
push
dec
sub
mov
imul
es
xchg
repz
gs
mov
sub
addr16
jno
push
jnp
ins
test
pop
dec
dec
sbb
std
enter
call
int3
scas
cmp
or
mov
push
aaa
pop
inc
pop
dec
in
sbb
jg
es
jno
xchg
jp
(bad)
jg
lock
pop
in
nop
out
xchg
push
cmp
loope
inc
test
jl
pop
dec
aad
leave
mov
xchg
repz
shl
lods
ret
ror
and
scas
out
push
movs
test
jns
xor
sub
push
add
lods
cli
int3
sub
mov
std
lods
mov
push
adc
pop
lods
jle
or
lea
mov
pop
xchg
inc
jmp
ins
add
pop
stos
push
ds
push
das
inc
aas
scas
sub
inc
std
stos
dec
xor
push
jne
jmp
cmp
add
call
and
stos
mov
test
dec
in
jmp
pop
cld
cmp
out
retf
jbe
xchg
loopne
ins
xchg
enter
test
dec
test
fsub
ins
cmp
push
and
and
cmp
rcr
cdq
push
fwait
jae
mov
ss
loope
idiv
and
mov
cmp
fistp
shl
fwait
stos
cmps
add
add
ins
push
inc
(bad)
mov
jmp
fsub
xlat
push
fadd
ret
push
add
add
mov
jl
or
adc
pushf
xchg
retf
sub
mul
jl
push
pop
test
in
cs
retf
daa
scas
push
mov
imul
(bad)
pop
xor
ja
retf
xchg
test
dec
ror
xchg
mov
sub
xor
cli
cmp
mov
dec
call
pop
xchg
mov
push
mov
inc
cdq
inc
xchg
inc
mov
stos
fnstsw
cmp
popf
or
mov
sti
daa
add
xchg
xchg
mov
pop
cmp
or
or
xchg
rol
jmp
cmps
dec
sub
sti
cmps
fisttp
xchg
pop
mov
pop
dec
mov
jo
push
xchg
mov
out
ret
pop
outs
push
popa
outs
cmp
cmps
xor
adc
int
retf
(bad)
cs
ficom
jge
push
push
shl
stos
icebp
neg
in
pop
mov
sbb
icebp
ss
rcr
inc
cmp
shr
sub
(bad)
jecxz
mov
repnz
into
lahf
call
add
data16
in
add
fimul
add
push
jo
fnclex
dec
and
mov
lods
cmp
sub
lock
jmp
mov
add
mov
pop
inc
or
jae
mov
cmps
lahf
jmp
jnp
ror
cmps
jl
mov
rol
aaa
aad
test
pop
cmps
and
enterw
ss
in
in
loopne
adc
cli
sbb
push
mov
or
xor
pusha
pop
or
adc
cmp
fcom
xchg
inc
fnstcw
add
adc
pop
cs
adc
(bad)
(bad)
xchg
adc
pop
jmp
sbb
cmp
fucomip
call
rol
or
push
xor
inc
lea
stos
and
cmp
test
jno
sub
ds
pushf
out
xchg
xor
div
dec
int3
jp
xor
pop
jns
daa
pusha
pop
lods
sub
movs
pop
icebp
mov
mov
mov
xor
hlt
sub
aad
and
push
inc
mov
lds
cli
dec
mov
push
add
mov
pop
jbe
retf
bound
(bad)
or
mov
retf
jl
popf
push
adc
lods
dec
daa
addr16
fist
jbe
sbb
jmp
les
add
pushf
jmp
mov
ja
dec
sbb
popa
sahf
jl
add
(bad)
xchg
push
push
fs
(bad)
mov
add
sub
xchg
pop
pop
or
xchg
push
cmps
jnp
push
push
test
push
addr16
in
pop
sbb
rcr
iret
clc
add
fistp
cwde
arpl
jl
adc
test
rol
in
out
xchg
ds
or
adc
mov
leave
adc
in
sbb
in
mov
pop
dec
sub
jno
iret
popf
mov
fbstp
repnz
nop
test
gs
add
into
mov
int
xor
adc
pop
push
jno
xchg
add
push
into
mov
push
rcr
(bad)
jmp
adc
xor
xor
gs
into
mov
or
push
or
lods
add
imul
bound
ss
icebp
adc
sbb
movs
fsubp
fdiv
mov
movs
sbb
fistp
call
or
stos
xlat
xlat
add
arpl
push
pop
mov
jmp
imul
dec
lods
mov
out
sub
jle
jno
push
aaa
enter
shl
mov
push
add
and
and
into
push
outs
push
scas
push
bound
pop
xchg
cmp
push
movs
push
pop
sub
out
push
popw
or
jb
push
arpl
scas
xchg
out
inc
lods
fild
mov
mov
cli
adc
leave
cmp
dec
scas
or
sbb
loop
icebp
mov
stos
sbb
mov
fdiv
fsubr
nop
adc
pusha
dec
mov
lahf
xchg
xchg
lods
(bad)
sub
addr16
pop
mov
push
inc
and
dec
pusha
or
dec
adc
scas
retf
adc
add
push
xor
jb
icebp
fld
outs
bound
add
pop
cdq
imul
mov
mov
dec
dec
sbb
stc
inc
ins
inc
mov
cwde
jg
js
push
sbb
pop
test
xchg
out
mov
xchg
push
mov
jmp
bound
mov
test
pop
cmp
addr16
jnp
ret
xchg
mov
cmp
sbb
jnp
mov
retf
fwait
sbb
mov
jb
mov
inc
sub
xchg
mov
aad
outs
xchg
or
popf
add
fcom
inc
mov
cmps
or
cli
jb
not
repnz
dec
jge
sbb
scas
int
sar
addr16
sub
fsubr
push
mov
shr
pop
(bad)
pop
lea
fsubrp
xor
fist
lods
mov
add
mov
cmps
jae
mov
jg
inc
jns
mov
push
sub
inc
pop
push
into
ins
cdq
or
sub
push
adc
out
inc
or
pop
adc
and
xchg
sahf
test
call
idiv
mov
clc
dec
jae
jp
test
xchg
fldcw
stos
int
nop
out
fimul
or
je
mov
loope
sbb
stos
lahf
cmps
add
lods
popf
not
in
jecxz
imul
cdq
mov
loope
mov
fmul
xchg
push
stc
xchg
out
das
pop
pusha
mov
or
adc
test
sbb
aad
or
rol
sbb
(bad)
pop
aas
xchg
mov
inc
jne
add
jb
adc
(bad)
mov
mov
sbb
lds
movs
or
mov
adc
xchg
ss
mov
push
cmp
lahf
pusha
pop
mov
hlt
jge
add
lahf
in
xchg
out
js
scas
movs
mov
in
pand
push
or
push
dec
jae
adc
scas
sub
(bad)
std
fwait
mov
fst
stc
std
sbb
jmp
cmp
push
push
inc
call
dec
sti
outs
mov
sub
test
dec
ret
push
(bad)
hlt
mov
or
cmc
dec
sub
(bad)
cmps
(bad)
or
fldenv
cdq
sbb
xchg
jg
sbb
stos
test
jb
cmp
int
mov
sbb
fstp
mov
lahf
push
sbb
and
cmps
cmps
inc
push
shl
mov
dec
jmp
push
sub
sbb
ret
pushf
outs
and
and
xor
popf
push
shr
or
cmps
jbe
adc
push
popf
aaa
retf
xchg
int3
fcomip
retf
mov
or
xor
out
jb
push
xchg
stc
fisubr
retf
mov
inc
sbb
jp
stos
dec
sbb
repnz
inc
push
frndint
and
xchg
dec
call
jecxz
jg
fs
dec
or
call
sub
jo
xchg
and
pusha
jae
loopne
push
lds
mov
xor
addr16
xor
enter
add
fisub
jmp
cmp
pop
repnz
mov
mov
sub
mov
imul
popa
adc
mov
push
push
(bad)
dec
jmp
call
cmp
add
test
repnz
imul
pop
push
adc
xchg
aam
popa
cdq
test
sahf
inc
xor
cmc
push
pop
call
pop
pop
dec
xchg
bound
scas
mov
push
int3
inc
xor
mov
mov
xchg
mov
or
mov
clc
jmp
out
push
scas
lods
jle
inc
sbb
pop
cmp
dec
stos
nop
jg
movs
mov
(bad)
jae
movs
xchg
pop
push
inc
mov
mov
add
sti
sbb
in
das
sub
das
jmp
mov
jbe
jmp
or
dec
adc
jp
retf
adc
or
mov
jnp
repz
and
imul
cmp
add
hlt
(bad)
jl
dec
jg
imul
les
or
fmulp
push
fwait
nop
jae
sbb
ret
xor
push
aas
push
xlat
cmp
dec
mov
gs
mov
sub
dec
jae
(bad)
in
outs
(bad)
pop
arpl
pop
adc
aad
je
gs
lahf
das
inc
add
loope
mov
inc
mov
jno
add
mov
sub
mov
sub
mov
cmps
or
or
movs
sub
out
das
pop
shr
daa
ret
test
jl
(bad)
adc
les
adc
test
stc
stc
or
adc
sbb
add
pop
mov
in
loope
jg
add
dec
ins
xchg
mov
push
in
jo
pop
stos
imul
js
pushf
stc
je
xchg
dec
shr
nop
sar
inc
(bad)
sbb
pop
popa
jp
cmp
ficomp
ss
jne
ja
jecxz
cmp
fld
mov
daa
sbb
into
retf
or
sbb
xchg
test
pop
not
mov
add
scas
sbb
inc
out
shl
js
or
lods
mov
mov
rol
sub
mov
jo
and
inc
ins
lahf
xor
adc
push
adc
sub
pop
hlt
into
aam
mov
jmp
and
cdq
pop
fnstenv
mov
jae
(bad)
ret
jo
lock
add
mov
pop
test
test
enter
pop
stos
cdq
(bad)
sub
out
out
lea
sar
ins
imul
add
or
jmp
frstor
xlat
pop
push
push
test
sub
sub
dec
stc
es
(bad)
neg
sbb
xor
test
adc
aaa
out
pop
in
cmps
push
test
mov
cmps
out
jbe
jb
gs
ficomp
xlat
repnz
push
ins
out
test
jnp
imul
sub
cmp
(bad)
loop
push
hlt
jp
scas
test
stos
mov
mov
xor
mov
call
inc
ret
cmps
bound
fcmovb
adc
mov
ror
xor
rcl
in
es
xor
push
(bad)
push
push
das
xor
sahf
aad
fild
mov
or
fdivr
out
pushf
pop
jg
mov
or
stos
pop
mov
mov
add
(bad)
push
jle
pop
popa
fdivr
arpl
imul
shl
dec
adc
xchg
adc
or
mov
in
mov
jmp
aaa
cmc
lds
cmp
in
mov
nop
aad
or
out
test
gs
pop
pop
push
sub
retf
fisttp
mov
push
mov
pop
fiadd
(bad)
jnp
dec
(bad)
cdq
pushf
jg
test
sub
(bad)
hlt
fcmove
inc
mov
dec
test
jb
and
inc
jle
fcmovne
mov
mov
movs
and
mov
inc
lahf
cdq
jge
mov
cld
xlat
xchg
jge
call
sub
inc
fnstenv
pusha
push
or
mov
daa
pop
hlt
sahf
jno
scas
jbe
in
scas
iret
rcl
xchg
cmps
push
cli
adc
jne
jo
nop
sbb
repnz
inc
and
cdq
xchg
psrad
and
add
jl
ins
inc
movs
sbb
or
daa
xor
inc
add
(bad)
pop
jmp
adc
sbb
fbld
pop
int3
pop
xor
xor
jmp
fisub
dec
sbb
cmps
sti
idiv
(bad)
aad
icebp
dec
adc
dec
push
mov
jb
pop
nop
cmp
dec
adc
daa
push
aas
sub
je
mov
push
rcl
adc
(bad)
fidivr
bound
jl
push
add
or
sub
pop
std
in
retf
cmp
in
ja
mov
mov
sbb
ds
fdiv
fadd
mov
arpl
loopne
mov
push
add
dec
sub
mov
jns
fist
push
mov
adc
lock
pop
retf
xchg
jle
(bad)
mov
cmp
(bad)
pop
xchg
xor
pop
or
bnd
(bad)
fwait
cmove
adc
addr16
dec
dec
push
sub
jb
adc
fucomi
jae
push
adc
xor
cmp
add
adc
pop
inc
sub
and
xor
loopne
sub
mov
xchg
push
aam
clc
rol
dec
cmc
dec
cmps
jne
(bad)
push
push
mov
cmps
or
sbb
cmp
scas
and
xor
xchg
pushf
lods
js
fwait
xor
jl
jns
rcr
imul
lods
adc
lds
add
pushf
mov
sbb
sub
es
mov
dec
out
sub
cmc
bound
mov
iret
sti
sar
clc
cmps
in
pop
xor
sbb
shl
outs
ins
xchg
push
jg
jne
test
and
add
jle
(bad)
scas
xchg
pop
cs
imul
sub
gs
test
into
sahf
mov
dec
sbb
inc
sub
cld
clc
push
pop
sbb
jmp
aaa
xchg
fsub
in
ror
jge
and
push
jg
xor
jle
(bad)
or
mov
dec
or
or
jb
pop
je
cmps
pop
xchg
mov
stos
xor
mov
sub
not
mov
jne
sbb
jg
fucomi
bndstx
gs
pop
dec
jne
push
stos
aad
popa
repnz
pop
push
pop
int
loope
inc
std
out
test
inc
jp
sub
and
jnp
xchg
jno
ja
mov
adc
cmp
jae
add
or
repnz
and
in
popf
and
out
les
adc
mov
fiadd
or
xor
fistp
int3
pop
stc
mov
mov
inc
adc
mov
xchg
push
push
nop
mov
popa
cmc
mov
std
call
test
jo
mov
inc
ror
call
mov
mov
je
sar
and
in
pop
and
sbb
mov
cld
int3
jae
pop
clc
jp
rcl
call
mov
(bad)
cmps
and
sahf
jl
push
add
repz
xor
jne
(bad)
or
or
(bad)
outs
ins
fadd
(bad)
xlat
pop
jnp
mov
lds
pop
sbb
adc
sahf
scas
arpl
cld
fstp
leave
lods
in
lock
nop
pop
adc
or
mov
int3
(bad)
xor
adc
jnp
pop
mov
test
xchg
fidivr
mov
hlt
movs
cmps
sar
add
mov
mov
mov
loope
pop
ja
es
pop
add
mov
dec
mov
cld
jmp
rcl
add
adc
(bad)
pop
fidiv
or
clc
cmp
jnp
xchg
xchg
lock
xor
addr16
cmps
dec
mov
call
(bad)
sbb
loopne
push
cli
mov
stos
pop
mov
xchg
jecxz
movs
dec
inc
xchg
mov
xor
(bad)
fwait
xchg
pop
fcmovbe
mov
ins
or
(bad)
and
mov
cmp
cmp
(bad)
lods
mov
loop
add
movs
popf
clc
add
dec
test
push
xchg
lods
xlat
es
cmp
pushf
mov
push
jo
retf
mov
adc
pop
mov
or
xchg
xor
enter
inc
mov
into
inc
pop
imul
dec
lods
add
mov
mov
cmp
(bad)
cld
add
adc
pop
(bad)
retf
jno
jno
shl
jne
pusha
xchg
adc
shl
pop
mul
sahf
mov
mov
repz
dec
int
xchg
push
and
cmc
outs
clc
ret
movs
sub
dec
cdq
pop
fiadd
jmp
repz
jne
xor
mov
jg
dec
lods
dec
sbb
and
div
lods
ficom
and
ins
lea
mov
jb
movs
sar
add
rcl
mov
cmp
cmp
and
adc
int3
stc
rcl
rcr
inc
repnz
or
cmps
cmp
stos
xchg
ins
sar
mov
pop
jne
mov
push
mov
js
push
sbb
lods
sub
mov
in
sub
add
jle
(bad)
pop
jno
sbb
jno
mov
not
ficom
imul
mov
xchg
rcl
clc
js
sub
sbb
addr16
mov
addr16
sub
xchg
aas
dec
pop
ficomp
pop
ds
sti
adc
icebp
cwde
pop
(bad)
mov
mov
ins
data16
ret
out
ftst
jae
aaa
(bad)
loopne
sub
jmp
das
gs
das
mov
xchg
sub
jb
vandnps
popa
int
sbb
ins
rcr
xchg
jns
call
rol
lock
mov
daa
cmp
xor
push
cmps
call
inc
unpckhps
jp
nop
outs
pop
shr
add
movs
jne
mov
fsub
cli
inc
movs
mov
lahf
repnz
test
add
adc
or
xor
repnz
sub
call
shr
aad
data16
pop
sbb
xor
or
aam
jp
scas
dec
push
(bad)
adc
ficom
mov
mov
pop
cmp
push
xchg
cmp
xchg
mov
aad
add
cmp
mov
(bad)
ja
popa
in
test
lock
jl
fmul
mov
ins
outs
fadd
outs
and
arpl
inc
and
aaa
repnz
mov
out
mov
sahf
mov
dec
mov
mov
dec
inc
xor
pop
sub
sbb
inc
outs
push
arpl
clc
sbb
adc
inc
mov
mov
pushf
mov
pop
(bad)
data16
jbe
cmp
mov
push
fcomp
pop
pop
daa
xor
pop
hlt
pop
lods
add
sbb
not
mov
pop
repnz
cmp
dec
imul
xor
gs
sbb
scas
in
fist
sbb
das
sbb
bound
lods
sub
mov
cs
repnz
arpl
jo
xor
movs
repnz
adc
scas
and
xchg
dec
imul
(bad)
sub
fwait
xor
pusha
adc
scas
add
ins
out
dec
lock
xlat
pop
pop
mov
mov
push
pusha
and
das
gs
push
sahf
add
nop
mov
les
or
cli
lock
out
out
mov
sbb
sub
sti
arpl
popf
pop
jl
retf
ds
in
jl
sahf
pop
pushf
push
pop
sbb
in
and
out
pop
sbb
add
je
push
imul
int3
fcomp
gs
add
and
dec
xchg
retf
adc
pop
daa
enter
fild
orps
jecxz
jnp
xchg
add
pop
cmc
add
into
loope
ss
in
and
push
adc
jmp
je
pop
inc
ins
aas
sub
sub
dec
mov
adc
jne
jmp
pop
lea
push
sub
pop
mov
pusha
fnstsw
push
(bad)
jle
test
pop
movs
rdtsc
adc
jbe
rcl
aas
sbb
mov
dec
gs
cmp
ss
push
mov
push
lods
add
and
mov
(bad)
cs
pop
call
cmps
pop
pop
cli
pop
xchg
in
ja
add
mov
pop
or
push
fwait
arpl
inc
cmp
mov
mov
push
mov
and
xor
cmp
jne
lahf
in
jbe
jns
das
sbb
in
jl
ds
jno
jg
inc
icebp
rol
or
aad
xchg
push
fst
lods
sub
xor
shl
xchg
mov
jg
xchg
(bad)
lock
fwait
jl
mov
movs
add
in
popf
(bad)
jmp
out
push
lods
retf
sti
add
ja
(bad)
into
push
call
jg
jl
sbb
bound
ror
lods
jp
or
into
mov
loope
inc
pop
mov
mov
mov
and
repnz
pop
arpl
and
popf
outs
sahf
outs
cmps
push
data16
std
std
mov
fcomp
adc
push
movs
mov
jbe
pusha
stc
mov
inc
sbb
outs
xor
push
cmp
add
aam
mov
or
add
mov
hlt
xchg
ds
mov
mov
pop
inc
adc
mov
and
xor
sar
ss
lea
std
adc
dec
ret
mov
iret
mov
dec
or
enter
xchg
add
dec
dec
dec
mov
into
mov
push
pop
cdq
(bad)
push
imul
rcl
leave
xor
pop
mov
mov
mov
cld
xor
test
push
lock
dec
bound
mov
push
out
mov
stos
aam
lahf
clc
in
xor
pop
test
rcl
sub
scas
mov
test
inc
retf
push
js
mov
fs
jg
push
add
leave
mov
push
ja
jl
and
xor
add
fnsave
adc
imul
nop
and
lods
call
fidiv
idiv
jmp
xor
jl
dec
pop
rol
pop
sbb
cmp
loope
sub
movs
cmp
je
jns
mov
xor
sbb
icebp
and
or
jmp
sub
mov
add
pushw
xor
and
jecxz
inc
test
popf
cmp
mov
and
xor
dec
mov
pop
movs
out
scas
jle
inc
lds
sbb
mov
xor
jge
adc
lock
jo
rcr
cmp
lock
stos
popf
test
inc
dec
adc
xchg
xor
and
jb
inc
aad
repnz
mov
add
loopne
outs
pop
les
out
ins
and
sbb
mov
mov
fadd
lea
or
xor
call
pop
sub
inc
push
or
cmp
(bad)
outs
jno
push
adc
xor
test
(bad)
jbe
jns
cs
pop
jno
ror
test
sahf
inc
cmps
ror
cdq
push
lods
push
mov
jno
neg
sub
inc
cmc
lods
mov
fld
aad
leavew
pop
or
inc
test
add
aam
or
ret
inc
rcl
adc
add
retf
repnz
jl
lds
(bad)
out
mov
sub
ds
pop
(bad)
loop
dec
call
sbb
push
adc
cli
(bad)
jecxz
in
test
dec
pusha
push
inc
enter
add
xchg
out
lahf
scas
mov
xor
movs
fcomp
jmp
jno
sbb
mov
rol
sbb
fidivr
mov
mov
data16
je
into
jb
call
sbb
scas
and
(bad)
mov
retf
rcr
fdiv
mov
jbe
sbb
mov
cmp
or
daa
jno
nop
sti
shl
mov
dec
adc
xorps
leave
add
outs
sub
jnp
sub
adc
inc
and
mov
mov
sbb
adc
aas
mov
adc
retf
add
mov
xor
sbb
pop
inc
xchg
stc
dec
dec
ret
or
mov
mov
push
adc
ss
cmp
xor
jbe
push
mov
adc
inc
out
mov
sti
into
add
in
ret
into
out
dec
jl
cld
lds
(bad)
mov
pop
in
xor
adc
add
inc
cld
scas
dec
mov
xor
arpl
lds
sti
push
das
adc
sbb
mov
inc
cmp
pop
jle
adc
xor
rcr
(bad)
jnp
dec
or
mov
inc
push
push
icebp
cmp
ss
aas
nop
adc
push
imul
inc
loop
aad
(bad)
push
xchg
push
in
psllq
dec
and
nop
out
sub
retf
adc
dec
mov
mov
sbb
mov
rcl
ds
loope
jecxz
jl
fwait
aaa
mov
cmp
or
mov
les
loopne
or
jbe
pushf
inc
xor
adc
xchg
xchg
outs
cmps
pop
lock
sbb
pop
shl
test
ret
(bad)
adc
xchg
cwde
push
pop
call
add
jg
adc
jmp
add
out
cmps
jb
cmp
mov
pop
ins
std
ja
mov
sub
loope
icebp
js
aam
xchg
scas
cld
jmp
push
fcom
xor
sub
inc
ins
and
pop
stc
inc
ss
or
jmpw
outs
es
or
fwait
add
xchg
aas
dec
adc
xlat
call
mov
aam
pop
cmp
mov
push
xchg
aam
mov
aam
mov
mov
jne
(bad)
xor
test
lods
jmp
sub
add
es
jae
sub
xchg
adc
iret
test
ds
imul
pop
mov
cmp
inc
mov
dec
stos
push
aaa
inc
test
mov
retf
popf
add
add
cld
test
mov
sahf
sbb
movs
stc
adc
sbb
add
xchg
lahf
pop
jo
cmp
xchg
mov
pop
or
enter
movs
inc
daa
add
cmps
push
sbb
jbe
loope
xchg
aam
adc
mov
fidivr
scas
inc
sbb
cdq
mov
movs
sub
in
inc
pop
jnp
pop
les
pop
dec
ret
mov
jno
adc
out
xlat
cld
cld
pushf
mov
fwait
mov
dec
sti
(bad)
dec
call
jmp
call
and
outs
pop
and
or
inc
sbb
lea
mov
fsub
push
adc
jnp
loope
push
cmps
cli
jecxz
nop
lock
cli
mov
adc
pop
out
std
mov
mov
mov
sbb
pop
or
adc
test
jg
ss
jecxz
fs
mov
pop
push
cmp
adc
mov
loope
add
stc
or
push
or
xchg
cmp
cmp
push
dec
or
popf
push
jne
cmp
lock
mov
mov
(bad)
in
cmp
lds
cmps
ins
push
jnp
mov
or
push
xor
mov
adc
aam
and
sbb
mov
push
test
aas
hlt
lds
jno
sub
inc
(bad)
cmp
dec
sub
not
cmp
push
ins
dec
out
in
das
pop
cmc
and
out
fwait
rcr
imul
lea
jmp
and
dec
int
add
xor
movs
jg
pop
push
pop
ret
mov
sub
mov
fistp
mov
sahf
or
outs
retf
xchg
xor
stos
dec
or
mov
mov
mov
and
mov
mov
cmp
mov
cli
inc
int3
sub
xor
loope
mov
fsub
jmp
push
mov
fbld
inc
add
xchg
jo
dec
cmp
fwait
inc
or
adc
jbe
xor
loop
mov
or
dec
in
push
daa
xchg
js
push
sbb
out
xor
popa
int3
xor
ins
enter
outs
aas
mov
jecxz
inc
ds
pop
les
mov
movs
mov
scas
rol
test
in
pop
push
jge
(bad)
not
fst
cmp
arpl
jmp
jmp
mov
jmp
shl
adc
push
out
mov
xor
dec
xchg
adc
jo
push
aaa
sbb
es
daa
jg
nop
out
or
fidiv
lea
mov
dec
retf
ficom
jge
mov
cli
out
fcom
outs
iret
les
or
push
dec
mov
xor
out
mov
(bad)
repz
mov
icebp
test
adc
out
inc
cwde
dec
push
movs
and
stc
and
enter
popf
das
out
xlat
neg
push
outs
push
dec
cdq
out
into
sbb
jb
inc
fcmovnb
lods
inc
xchg
add
and
sbb
xlat
loopne
pop
add
rcl
lea
pop
pop
inc
push
mov
fcmovu
(bad)
ror
push
sbb
and
adc
movs
or
(bad)
mov
mov
xchg
int3
xor
and
retf
lods
xlat
inc
or
push
xchg
fsubr
mov
iret
push
push
jb
or
pop
jae
loope
adc
adc
popa
stc
repnz
enter
int3
stos
mov
jmp
and
mov
das
mov
xchg
inc
sbb
fs
dec
frstor
mov
add
xchg
adc
popa
add
xchg
bound
xor
adc
test
inc
cmp
out
div
and
jl
les
gs
mov
pop
jmp
push
cdq
xchg
xor
dec
inc
inc
add
xchg
push
push
repz
sub
dec
stos
dec
jmp
out
popf
xchg
jp
nop
mov
in
inc
outs
mov
lds
lea
rol
lods
xchg
nop
jnp
jns
push
ds
in
lods
dec
hlt
cmps
or
ret
cwde
and
jns
cmp
out
mov
inc
push
pop
rcl
fsub
test
mov
jecxz
out
add
push
sub
cmp
fcomp
jne
enter
es
mov
cmp
das
push
lahf
cmp
add
call
sbb
inc
(bad)
cld
popf
push
push
jge
inc
arpl
les
cdq
dec
lods
test
movs
fs
jne
cmp
cmp
icebp
jae
outs
xor
fucomp
mov
seta
and
fdiv
mov
cmp
cmp
gs
(bad)
jmp
mov
pushf
jbe
xor
pop
and
stos
data16
out
mov
sbb
mov
mov
mov
outs
retf
rol
mov
into
push
inc
mov
push
jmp
xchg
sbb
leave
add
data16
(bad)
jge
pop
dec
je
bound
sub
ins
cmp
sbb
cwde
mov
push
sbb
les
xchg
ins
outs
std
mov
int3
inc
mov
icebp
fldenv
jle
mov
movs
lods
sub
dec
fsub
mov
dec
lods
inc
(bad)
nop
dec
loopne
sub
fcomip
repnz
dec
and
cli
ret
loop
mov
das
inc
and
pop
clc
fidiv
sbb
lea
ja
jne
mov
retf
cmps
call
dec
xor
repz
ins
xchg
cmps
mov
pusha
add
mov
xchg
or
xor
push
ja
retf
test
adc
sub
xor
pusha
cld
adc
stc
iret
mov
sub
pop
mov
icebp
mov
sub
mov
mov
outs
sub
mov
daa
dec
adc
inc
cwde
mov
test
(bad)
int
cmps
(bad)
data16
loop
push
dec
mov
nop
adc
mov
push
pusha
int3
loopne
idiv
popf
(bad)
mov
jle
cmp
retf
icebp
fbld
adc
in
mov
outs
xor
fiadd
mov
xchg
mov
mov
popf
test
dec
pop
mov
add
sbb
ficomp
xchg
fwait
jnp
cmp
mov
stos
mov
into
pop
int3
mov
xor
dec
mov
mov
call
jo
movs
test
cmps
lods
sbb
(bad)
jle
dec
jo
repz
jl
add
call
ret
retf
cmp
push
cmp
loopne
(bad)
enter
sbb
or
loope
xor
dec
outs
mul
inc
punpckhwd
inc
mov
call
pop
repnz
jmp
fcos
cmp
mov
xor
fs
ss
fs
movs
repnz
pop
das
(bad)
(bad)
cmps
xchg
loopne
shr
fiadd
ins
dec
je
jp
push
mov
add
imul
pop
dec
or
int
mov
xchg
or
(bad)
cmp
lds
ja
out
aam
pop
mov
stos
daa
jg
movs
scas
dec
jl
rep
jmp
push
outs
pop
xor
fs
mov
dec
ret
lea
push
scas
pop
xchg
mov
inc
sub
and
pop
inc
mov
or
ror
jae
cmc
dec
push
pop
mov
sbb
shl
out
and
dec
in
mov
mov
push
jecxz
mov
add
push
test
adc
cli
jecxz
mov
(bad)
xlat
aas
adc
mov
out
ja
int3
xor
adc
fsubp
inc
cmp
lods
lock
cmp
push
xchg
iret
dec
xchg
jg
jns
and
pushf
cwde
sub
ret
adc
mov
dec
jmp
retf
xchg
mov
xchg
pusha
test
aaa
ins
and
(bad)
mov
push
xchg
mov
jns
dec
push
mov
iret
mov
aaa
scas
addr16
loopne
cmp
mov
out
jnp
mov
add
outs
push
sahf
frstor
xor
sub
mov
stc
push
xor
adc
and
cmp
in
xchg
repz
(bad)
sub
out
fndisi(8087
scas
sub
cdq
xchg
push
test
hlt
(bad)
ret
pop
sbb
cmp
inc
leave
push
pop
add
pop
pop
call
outs
call
push
dec
shr
xor
js
stc
pop
out
(bad)
(bad)
imul
cwde
cmp
in
add
aaa
sbb
add
dec
cmp
fsubr
jb
rcr
loopne
js
add
imul
sub
xor
idiv
loopne
mov
mov
aaa
in
out
aad
dec
mov
cmp
jmp
call
sub
je
dec
and
js
push
jmp
rcl
fcmovnbe
push
xchg
in
pop
(bad)
into
inc
add
and
lock
mov
ss
pmaxsw
repz
shl
mov
or
and
xchg
cmp
add
(bad)
pop
retf
mov
adc
adc
or
pop
sub
xlat
test
shr
xchg
gs
mov
test
div
stos
xlat
repnz
ffree
pop
arpl
adc
retf
cld
xor
loop
call
add
aam
jbe
pop
jp
sbb
push
cld
push
cwde
jl
mov
adc
cmp
add
mov
out
or
stos
or
add
icebp
xor
push
and
mov
and
call
inc
mov
retf
aad
ret
rol
loop
xchg
mov
inc
mov
push
(bad)
retf
sbb
jge
nop
ins
loop
sbb
stc
jb
nop
scas
call
push
push
jne
sti
in
into
xchg
js
xlat
mov
mov
mov
mov
and
dec
mov
cmc
mov
xor
cld
js
dec
(bad)
cmps
aaa
(bad)
jne
clc
fnsave
arpl
xchg
jo
mov
dec
push
(bad)
jp
and
jo
dec
movs
sbb
sbb
add
inc
sub
inc
inc
mov
ins
scas
dec
mov
push
popf
cwde
loopne
scas
jp
mov
push
in
call
xor
jl
mov
or
outs
mov
daa
pop
mov
jne
sub
into
ins
test
int
mov
push
fucomp
inc
sub
push
sar
xchg
or
fnsave
xor
out
xchg
sahf
fist
scas
in
add
jnp
cmps
adc
sbb
aaa
nop
mov
or
fwait
retf
aad
sbb
inc
retf
push
stos
cmp
push
dec
add
dec
or
xor
inc
mov
push
stos
out
cmp
pusha
ins
xor
scas
movs
cmp
out
mov
adc
and
punpcklwd
pop
retf
mov
cs
(bad)
movs
scas
into
xchg
fist
mov
scas
fdiv
inc
ja
stos
mov
popf
imul
cdq
test
jns
mov
(bad)
or
xchg
sbb
and
xchg
jl
popf
ins
sub
adc
retf
sub
out
cmp
cmps
mov
or
dec
imul
push
mov
gs
push
mov
push
shl
popf
cli
mov
mov
aaa
inc
ret
jne
push
lds
inc
mov
sbb
jl
das
or
jb
xlat
pop
cmp
xor
fs
test
jmp
les
jle
xchg
sbb
loope
cmp
pop
rol
adc
ja
xchg
push
xor
mov
inc
pop
sar
out
sub
(bad)
ins
cmc
jl
jae
mov
xchg
test
ja
inc
jnp
cmp
lods
ins
icebp
rcr
in
inc
inc
jp
mov
or
push
(bad)
test
xor
mov
int
or
fsubr
cmp
dec
push
mov
(bad)
es
jmp
stc
push
adc
push
add
scas
test
icebp
into
jne
jmp
call
jl
and
clc
lds
and
sahf
aam
mov
inc
cmp
outs
or
scas
(bad)
test
mov
in
gs
cmp
out
mov
js
pop
sbb
cli
pop
cs
mov
sub
mov
setae
sub
pop
test
cdq
(bad)
cmc
je
out
out
popf
jecxz
mov
out
leave
mov
fs
mov
xchg
mov
(bad)
cli
jbe
fdivr
dec
xor
and
add
test
mov
loop
aam
mov
add
lea
push
loope
stos
in
or
hlt
and
push
outs
loopne
xor
call
outs
loope
push
jae
pop
div
test
into
cld
test
xlat
das
dec
fldlg2
adc
adc
out
jno
(bad)
mov
call
popf
outs
xchg
cmp
imul
aaa
adc
gs
mov
and
adc
inc
nop
fwait
rcl
or
add
sub
into
mov
fldenv
data16
push
pop
iret
ret
jo
retf
out
dec
inc
lock
xor
aaa
xor
pop
std
or
push
call
push
jl
mov
dec
icebp
xchg
loopne
mov
push
inc
cmp
mov
add
stc
(bad)
fcmovb
call
fcomp
lahf
jmp
ins
outs
sbb
(bad)
xlat
push
push
mov
es
(bad)
out
or
inc
xor
mov
adc
sub
retf
bound
xchg
xor
int3
mov
fiadd
cdq
enter
cli
jbe
cld
aas
adc
add
ins
push
ss
mov
arpl
jbe
inc
in
sub
fs
mov
repnz
iret
scas
(bad)
call
cmp
(bad)
fidiv
cld
fwait
xor
loop
mov
mov
inc
cmp
jecxz
xor
test
ins
les
cli
(bad)
cmp
div
push
mov
call
popa
cs
call
xchg
cs
mov
inc
fild
xchg
mov
outs
arpl
sub
jne
mov
call
inc
cmp
sub
sbb
cwde
in
cmp
mov
loope
adc
jmp
cmp
mov
dec
fs
movs
mov
aaa
movs
mov
and
gs
cwde
inc
sub
test
ins
ds
js
jge
and
mov
mov
fdiv
dec
dec
mov
xor
inc
lahf
outs
and
(bad)
lock
stc
dec
retf
or
hlt
jle
xchg
stos
or
aad
sub
fs
int
stc
mov
repz
mov
inc
out
(bad)
jne
jbe
jle
int3
or
pop
call
cmp
sbb
call
(bad)
mov
and
inc
mov
das
scas
test
aad
mov
mov
ds
aaa
rol
cmps
loopne
lahf
sub
idiv
adc
test
ret
inc
jle
fwait
xchg
cld
push
xor
test
mov
xchg
inc
adc
popa
sbb
out
adc
inc
ja
add
sub
fld
mov
gs
sub
(bad)
dec
repz
cmc
scas
call
ret
mov
enter
imul
push
or
jb
pop
jge
loope
fisttp
pop
pop
mov
xor
fadd
xchg
fwait
int3
out
bound
js
aaa
lods
mov
daa
retf
inc
pop
adc
dec
retf
not
jnp
jmp
and
stc
mov
mov
je
in
sbb
arpl
outs
stc
sbb
xchg
pop
lds
pop
aam
push
xchg
cwde
mov
jg
push
ret
cdq
fadd
jne
jmp
jl
or
cmp
ror
xor
and
repz
in
mov
pushf
stos
scas
in
push
push
shl
and
or
leave
cwde
xor
sahf
dec
sbb
pop
jne
iret
and
adc
leave
xor
fisub
rol
pop
out
adc
ret
pop
aad
inc
in
xor
and
adc
repz
jmp
cmps
xor
sti
div
pop
cld
push
bound
retf
xor
cli
mov
sub
add
inc
retf
test
movs
cmp
lahf
lods
fld
bound
mov
xor
adc
jae
mov
mov
hlt
mov
outs
fcmovne
inc
push
jmp
or
jns
dec
sub
js
fstp
sub
loopne
push
push
ror
xchg
nop
call
out
mov
pop
jmp
daa
jg
ja
push
push
sub
(bad)
push
or
mov
adc
int3
and
call
push
leave
add
adc
and
fisubr
push
std
inc
jl
jno
imul
cmp
sub
jo
cmp
xchg
push
out
ret
rol
test
inc
xchg
mov
bound
lahf
mov
push
sti
adc
lods
ror
loopne
scas
stc
dec
mov
add
leave
test
mov
mov
movs
daa
mul
xchg
retf
push
xchg
mov
dec
ret
les
fs
pop
cmp
adc
or
repnz
dec
or
dec
fwait
ucomiss
push
pop
dec
leave
xor
dec
shl
call
in
addr16
lea
sbb
mov
push
cmp
leave
pop
xchg
stos
mov
add
mov
sub
dec
ret
adc
fidivr
adc
sbb
push
xchg
imul
das
cld
dec
pop
scas
adc
sbb
sbb
pop
or
fmulp
push
xchg
adc
or
lods
cdq
imul
add
mov
xor
cmp
sub
mov
in
cmp
in
mov
call
outs
test
vpcmpeqw
xchg
jne
jge
rcl
xor
jle
xchg
lods
and
cmp
xor
xor
mov
movs
sbb
cdq
sbb
xor
outs
movs
mov
ret
push
push
mov
js
hlt
loop
xchg
mov
xchg
push
pop
mov
inc
bound
xchg
fcmovnb
scas
xor
cmps
ds
push
sti
test
mov
(bad)
movs
out
dec
ror
push
retf
mov
push
sahf
(bad)
pushf
push
dec
test
icebp
push
or
fidiv
in
not
imul
fwait
pop
scas
sahf
push
in
jmp
aas
in
push
cmp
sub
out
jns
nop
cli
in
scas
mov
ret
mov
ror
arpl
nop
lea
imul
inc
mov
pop
(bad)
adc
vmwrite
xor
cli
add
lea
dec
cmp
pop
sbb
das
popa
test
xchg
fsubr
xchg
(bad)
xchg
in
or
or
mov
jp
lahf
push
adc
xchg
repz
xlat
mul
aas
add
fdiv
cmp
sar
gs
jmp
sbb
nop
push
movs
and
xchg
aas
test
test
pop
(bad)
jl
mov
jns
or
adc
cmp
std
mov
(bad)
cld
cmp
arpl
jecxz
push
adc
js
in
stos
pop
xlat
sbb
dec
add
jno
rcl
xor
mov
test
mov
mov
sahf
fld
repnz
cmps
add
dec
dec
push
push
xchg
pop
xor
sar
adc
ja
jb
jns
xlat
adc
out
cmp
xchg
jns
jle
xchg
inc
stc
xor
out
add
repz
stc
pop
outs
scas
sub
aaa
sub
adc
repnz
(bad)
rol
sbb
stos
add
rcl
pusha
add
cmps
into
mul
push
jne
repz
iret
inc
jo
inc
enter
test
rcl
aaa
push
pop
mov
in
stc
iret
test
mov
pop
cli
sbb
retf
jmp
imul
add
retf
out
rcl
mov
dec
loop
enter
into
inc
jmp
cmc
leave
add
sbb
stc
fcom
stc
(bad)
cmps
xchg
mov
jmp
out
lahf
jns
adc
dec
jmp
daa
jne
lds
jb
in
dec
dec
aad
inc
mov
adc
mov
pop
neg
or
mov
loopne
jmp
or
lods
mov
adc
jg
cmp
cmp
pop
jnp
mov
jmp
push
ds
addr16
push
stos
mov
push
rol
ins
cmp
stos
or
xor
sub
sub
and
add
mov
lock
jmp
pop
jb
call
cs
cmp
jp
add
mov
mov
dec
mov
jl
push
pop
ss
push
out
mov
pop
retf
xor
enter
mov
inc
jo
add
push
pop
xor
pop
pop
mov
mov
mov
pop
and
stos
out
scas
pop
xor
lods
sbb
ins
sbb
mov
jb
scas
retf
inc
adc
test
ret
retf
sub
test
push
mov
mov
push
sbb
lods
pop
fsubp
lods
ins
mov
cmp
jae
xor
stc
loope
jne
mov
int3
add
jnp
popf
(bad)
std
ins
shl
sub
push
ja
add
fs
outs
inc
jb
sub
xchg
cmc
cdq
push
and
cmps
aaa
aas
pop
pop
pop
ss
test
adc
movs
ret
xor
dec
mov
in
mov
ins
push
test
inc
sahf
imul
sub
push
xor
les
call
mov
adc
xchg
pop
push
mov
imul
ror
lods
add
retf
inc
sbb
mov
dec
sahf
jno
repz
mov
adc
pop
push
mov
test
add
(bad)
out
xchg
in
mov
rcr
xchg
jmp
adc
jg
sub
mov
arpl
mov
mov
xchg
push
and
and
aad
adc
mov
xor
daa
xchg
and
test
lea
test
gs
ror
aas
iret
mov
pop
out
sbb
outs
repnz
fs
mov
aaa
sahf
jl
pop
sub
push
lds
popa
push
push
repnz
mov
shr
test
mov
shl
repz
jecxz
(bad)
ret
mov
fcomp
pushf
mov
test
push
loope
add
push
mov
das
xchg
pop
icebp
js
push
out
aad
in
bound
jg
mov
xor
xchg
jl
rcr
pop
mov
lods
pop
adc
mov
movs
inc
mov
mov
stos
cmp
mov
cmp
push
sub
(bad)
xchg
fiadd
pop
imul
stos
mul
sub
push
push
and
pop
mov
push
adc
test
ret
jae
mov
mov
cwde
mov
fcmovnu
sub
mov
lods
xor
rcl
lahf
pop
shl
in
(bad)
mov
ret
mov
aas
push
fldcw
dec
out
nop
repz
xchg
dec
leave
mov
sar
dec
push
fcmovne
ss
inc
pop
mov
rol
push
fwait
mov
lds
push
push
sub
cmp
fwait
cmp
mov
push
cld
movs
xchg
xor
push
pop
push
cdq
call
pop
or
mov
jg
test
push
stos
rcr
outs
sub
adc
inc
ret
into
mov
div
in
out
cmp
adc
arpl
repz
in
dec
add
cmp
or
jns
push
adc
lods
pop
cmp
push
cld
pop
in
mov
xor
ror
jbe
das
sub
adc
lods
in
mov
rol
add
jge
aaa
inc
pop
bsf
fild
jnp
mov
jnp
or
push
pop
jg
in
loop
hlt
lds
adc
dec
repz
sbb
xor
sbb
(bad)
cs
xlat
pop
xor
scas
jo
fs
jnp
jg
int3
add
mov
jp
adc
loopne
dec
mov
je
xchg
out
mov
js
inc
xor
enter
repnz
icebp
mov
mov
cmp
in
fadd
les
ins
mov
add
jmp
inc
xlat
int
int
aas
daa
cwde
aam
stc
ja
sub
mov
and
sti
popf
pop
jae
mul
dec
outs
or
aaa
test
jno
mov
mov
push
shl
mov
jl
adc
add
sbb
shr
push
es
dec
and
cmp
mov
test
dec
xor
dec
inc
stc
add
pop
sub
ror
lock
es
mov
adc
sbb
jp
mov
xchg
cmp
out
adc
fwait
data16
jp
mov
popf
mov
push
add
sub
sar
rsqrtps
xor
pop
data16
jb
mov
push
dec
dec
push
popa
sbb
mov
pop
fwait
std
shr
fisttp
sub
(bad)
out
xor
adc
pop
(bad)
dec
pop
inc
pop
ficomp
mov
gs
xchg
and
lods
adc
sti
jo
icebp
or
scas
add
cmp
test
inc
or
xor
cwde
jmp
nop
dec
sbb
inc
inc
or
ror
aad
and
mov
pop
es
cld
add
adc
xor
mov
int3
jnp
cmp
or
ins
stc
cdq
jl
cli
xor
retf
jp
out
mov
inc
add
call
cmp
add
lods
xchg
pusha
(bad)
cmp
mov
daa
mov
jno
jecxz
jns
mov
push
pushf
or
mov
jg
loopne
pop
out
cdq
and
pop
cmp
shl
cmp
call
sub
(bad)
fnstcw
mov
adc
(bad)
inc
mov
mov
mov
loope
fdivr
sbb
push
inc
retf
lds
jmp
or
js
(bad)
jp
or
(bad)
fisubr
mov
jb
jp
inc
inc
and
adc
jns
icebp
and
cld
call
pop
jp
mov
xchg
pop
aaa
lods
jp
xor
scas
xchg
mov
sbb
xchg
xlat
nop
js
dec
and
pop
push
push
into
mov
rcl
ret
pop
pushf
xchg
aas
retf
push
inc
inc
xchg
movs
or
xor
fwait
imul
gs
cld
push
push
mov
jge
mov
and
psubsw
mov
das
call
xor
xchg
or
sub
shr
sub
sbb
stos
sub
xor
sbb
movs
jmp
es
popa
clc
cmp
cmp
test
fstp
idiv
cmp
ss
or
pop
mov
fnstsw
out
imul
or
fild
pop
cli
movs
sub
cwde
cmps
lods
mov
sti
pop
rcl
cmps
fwait
push
les
mov
stos
out
push
push
or
lds
pop
popf
test
(bad)
push
ins
lahf
or
adc
cmp
pop
cwde
icebp
cdq
adc
xor
push
loope
mov
mov
mov
aam
gs
dec
xchg
fdivrp
int
sub
in
pop
push
fstp
ret
lahf
mov
int3
jg
jbe
(bad)
mov
pop
in
mov
xor
hlt
int3
(bad)
jmp
enter
mov
inc
lods
mov
xor
mov
cmps
or
arpl
adc
mov
dec
movs
xchg
or
inc
push
cmp
push
ins
jae
aas
shr
jns
jp
pushf
sub
sbb
in
pop
jo
push
and
nop
push
out
out
jo
push
sub
ins
and
or
xchg
mov
lds
dec
ss
mov
outs
pop
add
sbb
adc
cmc
jne
push
iret
out
xchg
push
adc
and
popa
push
xor
mov
sbb
outs
or
jbe
out
or
jl
test
add
jo
outs
push
jo
xchg
outs
gs
rcr
push
dec
daa
fst
movs
xlat
adc
add
ins
mov
pushf
xchg
xor
mov
cld
mov
out
rep
or
sub
cmp
pop
mov
fisubr
cmp
mov
sub
xchg
cmc
inc
inc
loopne
push
fldcw
inc
add
mov
addr16
mov
pushf
or
pop
cmp
jno
pushf
dec
cmc
nop
mov
and
outs
imul
and
aam
ins
pinsrw
stos
cmps
jecxz
(bad)
push
(bad)
xchg
xchg
push
sbb
cld
cdq
pop
cmp
daa
pop
add
inc
sub
lahf
push
xchg
js
neg
xchg
cmp
mov
clc
shl
mov
or
fs
movs
leave
call
mov
cli
out
sbb
ss
(bad)
gs
enter
lea
mov
ret
(bad)
shl
outs
mov
hlt
xchg
test
nop
sbb
das
fwait
data16
mov
dec
(bad)
pop
repnz
push
jl
or
sbb
outs
es
pop
sbb
dec
mov
add
and
or
cmps
or
pop
mov
fidivr
push
push
test
xchg
mov
movs
push
dec
sub
not
add
xchg
mov
sbb
pushf
hlt
dec
fstp
jecxz
fstp
add
xchg
das
test
add
cwde
ret
movs
iret
dec
push
mov
repnz
inc
retf
mov
fcomp
ficomp
mov
stc
je
jg
aam
addr16
ret
push
ds
sahf
jb
and
pop
pop
fadd
mov
xchg
or
mov
mov
repnz
(bad)
push
xor
pop
lock
sub
mov
ins
cmps
mov
(bad)
icebp
in
jecxz
das
in
sbb
ffreep
or
mov
xor
clc
ror
mov
dec
dec
stos
or
inc
imul
pop
lea
sub
int
mov
out
inc
aad
xchg
movs
shl
push
push
xor
rcr
nop
aam
inc
dec
jns
daa
es
push
call
cmps
outs
push
inc
into
pop
xor
adc
xchg
div
(bad)
mov
push
scas
sub
cmp
stc
(bad)
and
out
repnz
xor
sbb
ins
not
inc
add
dec
sar
cmc
dec
jns
out
(bad)
or
test
pop
xchg
jle
mov
mov
mov
dec
xchg
popf
pop
xor
jmp
mul
mul
pop
ja
bnd
call
add
sbb
and
clc
pop
and
pusha
outs
xor
mov
stos
inc
pop
mov
push
push
mov
aas
push
lods
push
xor
adc
and
adc
call
cs
sub
nop
aas
jl
sub
mov
jns
retf
jge
mov
xchg
jl
push
and
int
inc
gs
in
das
inc
push
in
call
sahf
jne
sub
in
mov
sti
test
push
out
xchg
sar
dec
sub
call
inc
adc
retf
je
outs
xchg
or
cmp
aad
clc
jb
or
(bad)
push
outs
jmp
ret
test
sbb
sbb
fadd
arpl
inc
and
xchg
and
dec
cmp
(bad)
jmp
(bad)
(bad)
lahf
cmp
cmp
mov
xor
leave
xor
xchg
mov
sub
mov
aam
dec
pop
dec
mov
mov
pop
mov
cmp
push
(bad)
sti
(bad)
fld
mov
push
sub
ins
mov
push
movs
xchg
adc
and
pop
adc
add
mov
sbb
lods
xchg
cdq
loope
xchg
dec
cdq
push
push
and
push
mov
push
cli
inc
or
xchg
mov
repnz
cmp
into
or
repz
inc
mov
xlat
mov
in
mov
in
lahf
jge
(bad)
dec
sbb
mov
jmp
je
sbb
xor
pop
xlat
push
mov
and
pop
inc
jnp
mov
fisub
push
push
add
aaa
or
sub
pop
push
or
xchg
lahf
pop
ret
pop
mov
jmp
lock
pop
jecxz
sbb
orps
adc
mov
inc
dec
call
jge
div
(bad)
fldcw
stos
push
dec
div
cli
rol
pop
mov
mov
in
out
cmp
daa
inc
xor
mov
mov
mov
test
push
addr16
das
mov
stos
data16
popf
(bad)
aas
mov
sub
fwait
aaa
out
test
or
adc
(bad)
sub
sub
jns
sub
and
adc
dec
int3
bound
xchg
shr
int3
inc
pop
daa
pop
jnp
push
dec
pop
jmp
pushf
pop
xor
pushf
inc
and
ins
lods
jle
fst
aam
and
test
pop
xor
and
loop
retf
into
fild
fcomip
mov
add
xor
nop
bound
xchg
(bad)
mov
push
cmp
ins
retf
mov
shl
add
pop
out
jmp
jmp
mov
int
ret
mov
inc
rol
mov
mov
push
aas
cmps
adc
ds
retf
jecxz
test
adc
sbb
dec
jmp
adc
jne
out
inc
ins
inc
out
xor
daa
pop
pop
sbb
jg
xchg
dec
mov
jp
sbb
outs
pop
push
pop
jle
inc
mov
add
pop
jae
mov
sar
inc
test
inc
add
sub
das
int3
cwde
scas
aaa
jae
js
cdq
daa
xor
out
xor
cdq
rol
sub
gs
mov
sbb
cli
xor
xor
or
fadd
cmp
pushf
lods
sbb
pop
sbb
push
xchg
push
shl
sbb
mov
test
inc
pop
cmps
out
cmp
dec
fisub
inc
cmp
push
push
sub
icebp
arpl
loopne
adc
jecxz
out
(bad)
ins
femms
fisub
arpl
or
imul
fnstcw
call
mov
cmps
jns
retf
mov
pop
pop
mov
ret
and
data16
mov
in
xor
lods
jmp
int
or
and
xor
bound
aad
or
dec
xor
fwait
jmp
push
fnstenv
mov
push
icebp
and
jno
pop
or
mov
loop
push
mov
sub
cmp
ins
out
xor
push
pop
gs
mov
jns
les
icebp
mov
rcr
adc
mov
cmp
lds
mov
mov
jbe
xor
ins
stc
pop
daa
fwait
xor
mov
lods
lock
in
cmps
sahf
(bad)
xchg
jecxz
rcr
push
cmc
test
shl
(bad)
mov
pop
add
(bad)
lock
inc
addr16
xchg
sahf
mov
add
push
push
mov
push
push
ins
pop
pop
dec
add
inc
std
ficom
and
cmps
cwde
add
push
mov
pop
pop
mov
dec
sub
outs
in
mov
xchg
(bad)
mov
out
mov
add
mov
int
in
and
push
xor
xchg
rcr
sbb
sbb
sub
aaa
mov
push
pop
stos
into
mov
or
jl
fimul
or
mov
cld
dec
jne
dec
sbb
sub
xor
mov
js
adc
push
sub
and
jge
call
sar
push
retf
push
ja
xchg
stos
adc
adc
call
sbb
(bad)
(bad)
nop
(bad)
sub
(bad)
loop
shl
ins
cs
sbb
int
call
ret
call
inc
mov
and
adc
push
inc
inc
mov
mov
jmp
dec
mov
and
scas
inc
loopne
push
scas
or
jmp
jo
or
xor
xor
mov
lahf
hlt
add
jae
(bad)
xor
inc
lds
jge
and
jp
mov
mov
cdq
retf
sub
aaa
call
test
or
or
cmp
jne
add
(bad)
mov
jmp
outs
push
xor
dec
pop
test
add
scas
adc
js
mov
sbb
popf
or
push
(bad)
cmp
sub
jmp
nop
pop
inc
leave
outs
rcl
das
pop
inc
pop
inc
inc
sbb
add
adc
mov
cwde
es
lods
pop
dec
mov
jmp
fcmovb
inc
jg
ins
sub
(bad)
psraw
sbb
adc
shl
lods
dec
dec
cmp
in
push
jns
cmp
je
add
sub
setns
xchg
push
sub
mov
pop
fmul
dec
mov
cdq
scas
pop
xchg
lahf
push
out
(bad)
pop
into
les
push
out
add
out
pop
(bad)
(bad)
js
mov
mov
jns
push
enter
sub
sub
push
xor
scas
push
inc
and
adc
mov
cmp
imul
into
xchg
lods
inc
mov
loop
aad
in
loopne
push
arpl
shr
arpl
jp
push
push
fidiv
push
mov
jbe
popa
jmp
sub
sbb
outs
push
mov
stos
jnp
mov
sbb
shl
in
or
and
add
jge
cmp
add
xchg
inc
or
mov
sub
in
jnp
pusha
enter
inc
mov
jl
pop
and
mov
in
jge
es
mov
pop
mov
pop
push
sbb
jo
pushf
jnp
imul
jae
aad
out
fucom
shl
fwait
movs
les
pop
call
fisubr
pop
cmp
aas
jno
mov
xchg
aam
ins
jbe
shl
mov
fld
dec
xlat
sahf
mov
popa
das
sbb
mov
push
mov
stos
fwait
jns
cmp
xlat
mov
add
lds
stc
es
inc
mov
or
fbstp
arpl
fild
cmps
adc
call
xor
sbb
fs
sbb
cmp
jge
test
pop
and
shl
out
xor
gs
jg
dec
ss
pop
hlt
mov
loopne
sbb
faddp
add
add
sub
cmp
xchg
sub
repz
push
xor
lahf
inc
adc
fiadd
cmp
mov
push
addr16
int
push
xchg
shl
adc
pop
mov
js
pop
loopne
jno
loop
(bad)
clc
test
push
sar
xchg
popa
sbb
and
scas
and
mov
ja
mov
aas
js
mov
scas
sub
sub
sar
push
les
movs
sub
or
retf
and
jp
stos
outs
repnz
(bad)
jp
fdivr
and
scas
ss
mov
mov
jnp
pop
add
iret
repz
mov
jae
mov
cmps
mov
mov
iret
mov
pop
and
xor
sbb
mov
push
stc
shl
icebp
push
mov
xor
fsub
ss
idiv
lds
mov
cmc
arpl
js
pusha
aaa
lods
ins
fsubr
mov
xor
adc
shr
ret
cwde
add
or
inc
add
iret
mov
in
jle
retf
xor
xchg
push
nop
sub
push
pop
repnz
adc
das
and
mov
sar
adc
inc
or
add
mov
adc
call
inc
cwde
cmp
push
pop
div
sbb
or
(bad)
inc
lea
(bad)
jg
mov
out
stos
loopne
dec
sti
jnp
push
rcr
add
sub
cmp
push
cmp
lods
sbb
test
stos
retf
xchg
xlat
xor
or
xchg
cdq
adc
scas
dec
or
mov
cdq
ror
xchg
xor
pop
or
cmp
out
rol
imul
ret
jne
jmp
jae
dec
pop
into
inc
rcr
or
fst
in
push
imul
out
lods
mov
add
push
inc
push
out
add
ja
jno
sub
jmp
xchg
xchg
push
jae
sahf
ret
xor
ror
popa
mov
cmp
mov
icebp
inc
fwait
cmp
or
nop
mov
daa
or
xchg
jle
xchg
xchg
std
inc
jecxz
iret
repz
outs
fidiv
pushf
xor
and
and
(bad)
cmps
pop
adc
mov
sbb
in
js
xchg
mov
repz
dec
cmc
fsubr
mov
xor
jmp
pop
push
jecxz
pop
in
inc
icebp
gs
popa
ins
js
push
push
test
add
lods
xchg
ds
adc
cli
cli
pop
jecxz
call
cmp
push
iret
retf
push
dec
adc
and
jmp
and
mov
loop
loop
dec
fisubr
loopne
sub
or
or
lds
cwde
or
sub
loop
pop
adc
(bad)
call
scas
push
cld
jle
xchg
sub
push
mov
pop
hlt
mov
add
call
or
dec
or
sbb
gs
ja
jecxz
sub
pop
retf
test
push
cwde
scas
sbb
sub
test
mov
add
pop
jle
arpl
dec
mov
icebp
xor
scas
aam
adc
enter
jae
cmps
pop
imul
sahf
mov
mov
in
inc
movs
cmp
adc
mov
out
aam
pop
movs
call
push
jns
lods
arpl
ficom
gs
and
add
shr
xor
fsubr
in
pop
xchg
ins
imul
fiadd
cmp
xchg
leave
fbld
into
and
ja
or
or
hlt
mov
data16
push
inc
and
mov
ret
cdq
sar
repz
into
sti
xchg
cwde
fnsave
and
add
mov
pop
pusha
ficom
mov
cmp
lods
fild
(bad)
and
sbb
xor
pop
add
pop
lods
(bad)
jl
adc
jg
pop
bound
call
mov
jb
pop
imul
stc
call
lahf
xchg
sbb
lds
mov
(bad)
xor
sbb
retf
int3
jg
in
cmp
cmp
push
into
es
cmp
mov
dec
xor
jp
pop
push
pop
xchg
pop
fucomip
pop
loopne
pop
and
out
pushf
(bad)
sbb
out
aaa
jb
call
imul
sbb
outs
xor
pop
cmp
div
xchg
test
call
loop
lock
sahf
and
ret
jmp
dec
cmp
xchg
inc
cli
pop
test
jne
aaa
add
loop
sbb
not
stos
mov
and
dec
call
and
dec
clc
and
les
adc
(bad)
pop
sbb
cmps
rcr
int
or
retf
inc
daa
pop
(bad)
fiadd
fwait
jge
cdq
mov
fdivr
xchg
lods
dec
adc
mov
lea
jmp
(bad)
iret
dec
add
nop
stos
lds
jb
cmp
loope
jno
sahf
and
jo
xor
outs
stos
test
sub
xor
mov
jo
out
dec
es
sub
jg
or
scas
cli
sub
stos
jecxz
aam
mov
jnp
jp
push
stos
pop
xor
and
dec
xchg
jecxz
pop
in
rcl
pop
pop
or
mov
jmp
ret
xchg
jecxz
pop
mov
inc
stos
lds
fs
jmp
pop
mov
(bad)
lea
aaa
xchg
mov
mov
sete
fcmovbe
mov
sub
jb
xor
shr
aaa
inc
test
mov
ffreep
gs
fistp
fs
sbb
inc
test
gs
xor
xchg
loop
dec
out
add
ss
add
mov
jb
jge
lods
sub
sub
xchg
jo
push
and
sub
out
cs
icebp
shl
cmp
mov
and
je
fimul
jecxz
in
dec
fisub
cmc
push
mov
(bad)
sti
xor
rcr
stos
pop
sub
fidivr
clc
clc
push
int3
add
rcr
xor
and
push
inc
cmp
repnz
mov
fnstenv
sub
stos
adc
mov
jle
fistp
mov
in
dec
jns
sbb
add
sbb
and
add
ret
xchg
vshufps
fdiv
jns
cs
pop
adc
push
jns
stos
xor
loope
push
movs
pushf
fcomp
xchg
int3
mov
mov
pusha
das
out
test
mov
ret
add
(bad)
retf
xor
shl
call
jae
out
pop
into
sti
loopne
ret
mov
dec
jns
pop
adc
push
push
xchg
jne
jl
mov
ins
xor
xchg
adc
pusha
xchg
inc
je
fs
pop
inc
pop
jmp
cmp
scas
pusha
xchg
lea
stc
pop
hlt
jno
and
rcr
and
pop
jg
lds
cmps
mov
xlat
xor
add
scas
sbb
idiv
push
leave
mov
sub
adc
iret
push
out
pop
sar
loopne
mov
outs
dec
jo
sub
retf
adc
jge
jno
cmps
dec
pop
gs
sti
repz
mov
inc
es
fwait
dec
and
test
cmp
and
fistp
into
sub
stc
pop
adc
adc
mov
inc
mov
mov
fidiv
jmp
jg
mov
cmp
loop
add
cmp
inc
(bad)
jp
out
(bad)
rcr
sbb
dec
dec
push
or
inc
into
test
push
and
mov
jmp
and
outs
sti
cmp
mov
dec
or
test
outs
pop
call
or
mov
mov
mov
fst
add
inc
pop
jnp
in
cwde
jbe
cmps
daa
fidiv
inc
outs
cmp
push
mov
ror
cmp
pop
xor
retf
push
ds
stos
or
mov
add
mov
mov
enter
jo
dec
shr
and
div
rcl
into
outs
sub
(bad)
xchg
(bad)
jmp
sub
aam
or
cs
fwait
adc
inc
xor
mov
out
in
inc
sub
je
mov
xchg
push
mov
das
popf
sub
icebp
out
pop
push
out
pop
dec
adc
jecxz
jb
push
inc
inc
ror
jnp
fcomp
into
or
scas
das
lods
mov
xor
(bad)
clc
xor
xchg
lods
push
fsubrp
int
(bad)
mov
vmovdqu
dec
xchg
mov
push
and
xor
das
xor
test
jg
fcomp
mov
push
pop
or
jmp
cmp
(bad)
aad
jnp
dec
dec
cli
loopne
(bad)
jb
sbb
or
push
push
es
dec
inc
test
enter
push
cmps
mov
pop
or
cmp
add
sti
xor
push
mov
push
mov
int
loop
aaa
loop
ja
std
jno
retf
aad
add
cwde
dec
cmps
lods
mov
xor
inc
and
repz
dec
inc
fsub
(bad)
sub
ins
xchg
pop
cmp
inc
sub
cmp
sbb
and
fild
jbe
aas
dec
fwait
sbb
scas
push
mov
pop
repz
mov
das
jle
ja
std
test
mov
test
test
xchg
in
adc
sub
push
mov
jmp
push
jno
or
xchg
ficom
popa
sbb
shr
imul
outs
iret
dec
ret
jg
and
xchg
scas
add
inc
fidivr
sbb
loopne
adc
les
imul
lea
xchg
lds
rcr
jb
cmp
add
ret
sbb
dec
add
jle
test
adc
cli
nop
ret
push
movs
es
add
lds
aam
dec
loop
adc
cmps
push
into
les
ins
inc
cmp
mov
xor
mov
cdq
inc
test
inc
or
scas
push
mov
sti
(bad)
icebp
jle
stc
ror
jmp
retf
es
cmps
pop
shl
inc
mov
int
push
lea
xor
mov
ret
pop
cdq
jae
cwde
cmovl
shr
movs
or
loop
cmp
jmp
cmp
adc
push
rol
sbb
inc
out
dec
int
xlat
mov
add
cmp
push
xchg
jae
pusha
cdq
xor
mov
movs
shl
mov
in
sub
jp
or
clc
(bad)
ror
(bad)
xor
(bad)
mov
push
out
arpl
xlat
into
pop
mov
push
xor
xchg
xor
das
dec
int
fldcw
aam
sub
and
mov
mov
in
mov
data16
ret
push
cmp
mov
push
xor
loopne
rcl
mov
add
lea
fdivr
jae
ss
mov
push
fmul
inc
int
mov
xchg
out
sub
dec
mov
ds
and
movs
pop
sar
dec
jp
mov
push
add
ins
pushf
repz
shr
adc
xchg
fisubr
(bad)
cdq
(bad)
jmp
inc
inc
aam
in
iret
ja
pop
clc
repz
icebp
jo
cmp
shr
push
call
xchg
cs
dec
loopne
fisub
call
adc
sar
dec
in
test
xchg
mov
daa
loopne
cwde
call
xchg
mov
aad
loopne
retf
nop
xchg
ss
aad
and
or
xor
daa
int3
jnp
cmp
adc
mov
ss
mov
scas
xchg
cmc
pop
cmp
lods
leave
mov
xlat
fs
xchg
xor
adc
dec
mov
and
cmc
sbb
jge
fwait
enter
hlt
ds
daa
shl
and
popa
push
fild
jecxz
out
out
jae
inc
sub
pushf
mov
add
add
mov
ret
mov
mov
mov
daa
adc
dec
iret
jnp
lds
cmp
iret
mov
(bad)
out
jl
or
xchg
mov
sbb
movs
xchg
mul
cdq
jmp
pop
mov
jmp
or
sbb
cmp
push
jnp
fstp
xchg
iret
cmp
mov
cwde
js
in
(bad)
pop
out
lods
add
add
lahf
inc
imul
aad
pop
in
inc
and
inc
ror
js
sbb
add
outs
outs
jb
add
(bad)
cmp
ja
cmps
push
lds
adc
adc
repnz
mov
cmp
xchg
and
dec
mov
adc
xchg
pusha
in
ins
fnstsw
pop
daa
xlat
adc
and
imul
push
cmps
int
dec
cmc
mov
inc
inc
xchg
add
bnd
clc
inc
stc
jo
mov
bound
lea
xchg
bound
popf
arpl
jecxz
cmp
xor
or
pop
aad
pop
pop
repz
fiadd
mov
adc
xor
(bad)
ins
dec
mov
sti
pusha
xlat
icebp
xchg
xor
shl
cmp
push
test
daa
push
mov
xchg
nop
jo
mov
(bad)
push
mov
mov
clc
xchg
int3
fbstp
sub
mov
pop
pop
aaa
mov
mul
rcl
shld
push
cmps
(bad)
popf
jnp
jo
push
push
out
cmp
out
iret
cwde
(bad)
nop
and
(bad)
fild
sub
mov
and
int3
dec
sbb
cmps
repnz
fcmove
rcl
cmps
mov
ja
sub
in
jo
pop
dec
ret
ss
mov
add
jae
adc
push
add
cmps
jbe
pop
clc
outs
jno
mov
mov
call
je
test
push
cmp
add
call
stos
inc
retf
mov
cmc
xor
xchg
movs
test
test
fwait
mov
ror
scas
aas
clc
jnp
mov
push
sbb
sbb
mov
mov
pusha
jg
fs
repz
jno
push
push
adc
pushf
mov
or
pop
lea
pusha
xchg
pusha
shl
jl
fldenv
rcl
sub
and
and
sar
cmc
mov
jns
ss
or
sub
add
xchg
mov
mul
and
ds
mov
retf
dec
xchg
aam
and
out
push
mov
dec
sub
pushf
outs
popf
inc
xor
mov
xor
outs
lods
cld
adc
es
lock
fwait
shr
pop
mov
jg
xor
jno
push
push
adc
mov
push
je
pop
in
je
add
sbb
aaa
inc
push
js
jg
jmp
es
sbb
dec
popf
rcl
pusha
xor
or
sbb
and
or
lahf
fldcw
inc
test
sub
popf
shr
add
lahf
dec
mov
pop
call
mov
add
xchg
mov
addr16
stos
and
fwait
int3
aad
test
test
sub
sti
test
int3
cwde
add
dec
mov
cli
outs
or
sub
mov
clc
jo
or
ins
inc
cli
xchg
sub
mov
cmp
sbb
mov
stc
sti
sub
das
(bad)
cmp
push
jb
popf
jecxz
mov
jmp
jp
mov
or
mov
inc
or
repz
mov
out
sub
inc
cld
scas
pop
popf
sub
dec
sub
mov
(bad)
lods
test
sbb
jne
jbe
test
push
hlt
adc
or
aaa
mov
mov
shr
xchg
jmp
push
mov
pop
scas
call
int3
inc
loope
popf
retf
loopne
popf
hlt
xchg
fisub
aas
push
pop
int
push
pusha
ror
movs
es
sbb
add
cmp
fs
ins
xchg
sub
leave
(bad)
imul
mov
adc
das
pop
lock
popa
lds
lods
cmps
cmp
(bad)
inc
lods
mov
adc
push
sub
cmp
jmp
out
in
adc
and
adc
dec
cdq
add
imul
lods
dec
xchg
jle
sbb
div
arpl
jmp
pmulhw
aaa
fld
hlt
mov
push
mov
aad
loop
lods
adc
loope
movs
inc
fwait
jne
sbb
push
mov
jns
scas
vminpd
or
int
int
inc
xchg
fbld
jo
(bad)
stos
xor
bound
into
outs
xor
pop
movs
mov
daa
adc
clc
sub
mov
inc
loop
push
inc
or
clc
jge
mov
lds
loope
inc
jno
adc
repnz
cmps
sub
push
es
adc
ror
push
push
lds
inc
int3
pop
inc
dec
mov
ss
and
pop
adc
jecxz
dec
jge
into
outs
outs
cmps
inc
and
push
jmp
mov
outs
xor
cmp
jmp
mov
jp
pusha
push
inc
aad
das
mov
int
out
pop
cld
int3
and
or
jns
popa
inc
fisubr
mov
mov
dec
sbb
ret
inc
inc
pop
jno
nop
jbe
jns
loop
xor
loopne
cmps
mov
daa
inc
pop
xchg
pop
and
push
imul
std
jmp
or
inc
lods
int
dec
sub
cmps
mov
icebp
and
sahf
fimul
dec
shr
neg
leave
in
sti
xchg
xchg
cmp
xchg
test
and
push
jle
ret
jne
pop
add
jp
stc
out
sub
ja
jb
ss
or
add
jmp
(bad)
and
sub
pop
loope
mov
out
dec
adc
loop
cdq
add
push
pushf
jl
inc
(bad)
xchg
mov
aaa
mov
data16
fsubr
and
and
movs
lock
mov
pop
(bad)
mov
jle
jmp
jae
mul
pop
lods
(bad)
dec
and
and
mov
(bad)
cmc
out
js
mov
mov
jmp
xchg
and
and
fimul
mov
mov
mov
in
call
aam
jae
rol
or
repz
and
stos
jg
push
inc
inc
xchg
sbb
mov
lea
add
adc
cmp
mov
jnp
out
push
cli
repz
imul
mov
fs
sbb
xor
cmps
mov
cmp
mov
dec
sub
jmp
(bad)
lds
scas
mov
cmp
sub
stos
or
adc
gs
outs
scas
jns
sbb
fdiv
inc
ins
out
in
idiv
xor
inc
(bad)
xor
pop
lods
xor
jmp
mov
inc
jne
xor
fisubr
loopne
sbb
pusha
or
or
mov
push
ins
test
dec
push
fisttp
xor
xor
and
xchg
sbb
je
dec
cmp
mov
adc
sub
dec
and
or
ins
pop
mov
into
rcl
pop
les
and
les
and
shl
icebp
les
add
adc
inc
fldenv
out
stos
int
test
xor
pslld
sbb
and
cmp
mov
mov
cdq
mov
push
ror
xlat
arpl
cmp
and
sbb
test
xor
mov
in
push
cli
lods
dec
test
pop
adc
fiadd
push
outs
fdivr
push
inc
sub
sahf
jb
sub
lea
push
inc
data16
sbb
inc
dec
sbb
mov
outs
or
das
xchg
mov
dec
and
push
(bad)
fild
retf
out
and
iret
mov
loopne
in
int3
push
in
xchg
enter
sub
retf
cmc
pop
pop
and
sahf
into
dec
shr
(bad)
shl
mov
ret
inc
mov
jb
popf
lds
xchg
stos
dec
mov
or
mov
scas
int
or
inc
pushf
pop
mov
sub
mov
sahf
aas
stos
rcr
(bad)
stos
cld
out
sbb
mov
xchg
sub
mov
jle
lock
outs
inc
mov
fcomp
sbb
cmp
inc
sub
jo
hlt
pop
daa
cmc
ret
and
jmp
pop
test
arpl
pop
sahf
mov
mov
push
daa
(bad)
iret
int
mov
out
jae
push
sub
movs
test
sbb
xchg
dec
jmp
add
push
mov
ret
ret
adc
xor
xchg
fwait
rcr
xchg
add
(bad)
mov
data16
clc
cld
cmp
ret
dec
ret
xchg
clc
pop
ins
aam
scas
xor
xor
push
(bad)
xor
mov
ror
sbb
(bad)
cmc
imul
mov
dec
imul
in
daa
and
out
mov
add
ror
adc
daa
push
push
jb
int3
xchg
(bad)
fld
faddp
pop
in
pop
and
loope
sbb
test
pop
pop
clc
in
je
ret
loopne
aas
jl
add
sub
das
xchg
aas
adc
out
adc
push
retf
test
xor
cmps
add
cs
out
daa
pop
call
stos
fisubr
inc
pop
mov
sbb
sar
inc
push
outs
push
xor
jle
cmp
mov
fst
xchg
jge
add
(bad)
push
and
and
push
(bad)
repz
nop
(bad)
popf
arpl
ins
lods
iret
aad
add
mov
aaa
lea
or
cmc
repz
cli
data16
push
lock
dec
js
pop
xchg
mov
inc
ret
mov
xchg
cmp
and
jne
and
in
add
or
pop
push
cli
je
stos
cdq
add
cs
and
ret
mov
mov
sbb
popa
nop
dec
or
jne
dec
adc
xor
ins
push
cli
jne
out
shl
pop
repnz
xor
sbb
mov
push
xchg
nop
imul
add
(bad)
mov
(bad)
push
xchg
lock
and
stc
mov
fsub
mov
and
out
xor
cld
loopne
test
mov
mov
jp
pop
stos
outs
(bad)
or
ror
add
scas
fdiv
daa
jo
aad
pop
mov
ja
inc
pop
dec
inc
rcr
sbb
mov
dec
test
sub
mov
ficom
(bad)
dec
cmc
mov
out
(bad)
adc
call
mov
in
xchg
mov
daa
xor
push
in
cmps
(bad)
xor
xor
adc
xchg
xchg
cs
repz
and
xchg
mov
les
sbb
fs
mov
xchg
ins
int
sbb
scas
jo
popf
loopne
sub
xchg
test
add
add
ins
push
mov
retf
fstp
ret
lods
cmp
mov
sbb
push
ins
mov
sbb
idiv
mov
push
ret
lahf
shl
cmp
pop
pop
in
jbe
mov
add
xor
cmp
mov
adc
retf
jns
into
mov
stos
repnz
enter
dec
ja
mov
push
push
jae
mov
jl
or
jl
(bad)
int3
inc
clc
xchg
jle
xchg
mov
ds
xor
dec
fist
ret
movs
add
and
xchg
push
rcl
(bad)
das
adc
jmp
lds
imul
mov
arpl
dec
mov
pop
imul
mov
mov
push
cmp
or
test
rcl
mov
or
jecxz
xor
mov
pop
sub
aad
sbb
dec
loopne
jecxz
xor
mov
pop
stc
mov
or
imul
cmp
cmp
mov
or
pop
or
iret
dec
or
sbb
inc
inc
and
jle
or
int
idiv
aaa
lods
xor
adc
ins
cmp
rcr
mov
sbb
sbb
and
out
xchg
pop
mov
aad
xor
fdiv
xchg
in
inc
jle
cmps
fld
mov
push
popf
in
(bad)
sahf
mov
inc
shl
adc
push
mov
gs
arpl
adc
retf
inc
cmc
in
test
and
cdq
xor
and
jne
jmp
or
(bad)
into
aad
or
movs
mov
arpl
mov
jmp
nop
or
shr
and
fadd
hlt
mov
mov
mov
(bad)
or
shl
pushf
mov
test
dec
pushf
mov
adc
xchg
cld
push
mov
sub
lahf
and
jae
outs
and
aas
jno
xchg
xchg
aas
xor
jb
neg
adc
imul
pop
mov
sbb
shl
mov
int
sub
or
and
call
mov
nop
js
xor
sub
jl
not
jmp
int
ror
mov
repnz
dec
dec
inc
and
mov
imul
pop
sub
jbe
aad
and
out
cmp
inc
lods
sbb
pop
mov
loope
sar
inc
xchg
jl
push
loop
and
add
into
bndldx
push
jg
sbb
dec
and
xchg
sub
nop
adc
push
pop
iret
cwde
pop
rcl
cmp
lods
pcmpeqw
xor
test
aaa
jecxz
or
sbb
xor
or
mov
arpl
pop
mov
xchg
aam
jmp
xchg
jl
shr
xchg
mov
mov
jno
push
push
aad
pop
dec
jmp
in
jmp
pusha
xor
aaa
ss
neg
test
pop
rcl
out
rol
push
lods
xchg
add
cdq
add
push
cmp
push
dec
push
inc
or
push
jmp
push
xor
pop
xadd
pop
jmp
lock
sub
sub
pop
xlat
sbb
fld
fdivrp
mov
dec
cmps
ret
inc
mov
lods
je
pop
mov
fucom
test
jl
mov
xchg
pop
cmp
mov
jnp
and
call
mov
sbb
xchg
(bad)
jb
cmp
js
test
jmp
jle
lods
cmpxchg8b
(bad)
int
fdiv
rcr
pop
xor
push
loopne
movs
fistp
add
cs
xor
(bad)
cmp
ret
inc
jnp
test
fdiv
sub
(bad)
pop
push
je
mov
add
jmp
jmp
in
mov
ss
jbe
and
push
and
nop
cmps
imul
push
daa
inc
popf
sbb
xor
push
aad
jmp
jno
add
or
pushf
outs
mov
enter
cld
pop
sbb
ds
call
inc
mov
inc
cmp
xor
add
mov
fnstenv
jp
xor
scas
and
cli
add
dec
add
sar
rcr
in
pop
cmc
mov
ret
gs
movs
scas
or
out
imul
lock
mov
add
mov
push
adc
clc
es
xor
out
add
aam
(bad)
lock
jmp
xor
sbb
xlat
sbb
hlt
lea
sbb
imul
fsubp
or
gs
cmp
bound
ss
sbb
xchg
and
imul
mov
test
push
outs
jnp
out
dec
mov
ds
ss
mov
clc
sbb
fcmovnu
es
inc
shr
repz
and
popa
mov
nop
sbb
pusha
jg
aas
or
push
jmp
scas
push
into
jne
cmp
inc
(bad)
mov
test
push
jae
ret
jne
xchg
and
sub
xchg
hlt
push
call
xor
inc
inc
imul
dec
jecxz
lods
test
xor
loope
or
inc
rcr
pop
pop
jg
sub
hlt
lock
sbb
cmc
jns
das
stc
cli
fld
int3
or
mov
pop
jp
dec
push
or
addr16
mov
jno
dec
add
and
cld
lahf
sahf
lahf
sub
adc
cmp
scas
xlat
fld
jno
ret
dec
clc
sub
and
popa
je
jecxz
inc
inc
imul
ror
sub
mov
sub
or
int3
dec
int
inc
cmc
jl
pop
loope
out
mov
lds
test
cmps
jmp
movs
fild
sahf
push
mov
mov
adc
stos
(bad)
cmp
sbb
rcl
mov
fisttp
cmp
and
and
repz
sti
lods
mov
mov
mov
jmp
jns
and
hlt
ins
pop
xor
add
repz
mov
cs
movs
(bad)
adc
push
cmp
test
push
jecxz
popf
cmps
lock
jae
loopne
push
std
call
xor
pop
pusha
jae
jp
adc
xor
cmps
lock
or
je
pushf
and
icebp
or
ins
lea
or
dec
jbe
mov
jae
or
jae
movs
js
mov
jne
adc
inc
mov
sbb
lock
sar
inc
(bad)
in
aad
pop
mov
inc
and
jmp
test
cs
(bad)
arpl
loope
adc
and
xor
xor
fidivr
(bad)
iret
rcr
(bad)
mov
pop
shl
(bad)
mov
cli
iret
sbb
mov
dec
mov
fcmovnu
rcl
add
std
mov
fwait
aad
jmp
outs
fld
(bad)
and
xchg
fistp
mov
ins
pop
repnz
pusha
add
lods
add
out
push
popa
push
cmps
outs
out
xchg
sub
cmp
fs
imul
clc
cmp
out
jmp
fldenv
es
xchg
cmp
sbb
jge
data16
push
int3
adc
push
aad
xor
test
pop
jmp
mov
fist
aaa
mov
mov
pop
dec
js
mov
scas
clc
cmp
fmul
repz
outs
ins
stc
inc
push
mov
and
ret
xchg
movs
push
daa
enter
into
sar
add
aas
xchg
jl
out
or
mov
mov
xor
push
jb
dec
in
arpl
enter
inc
dec
adc
cdq
movs
cmp
jns
not
push
movsx
xchg
sub
cmps
into
ds
loopne
xchg
ror
cdq
dec
retf
fmul
or
call
dec
lods
mov
daa
push
adc
inc
jno
scas
call
outs
retf
lock
arpl
xor
pop
push
js
inc
cmp
les
cmp
dec
jnp
pop
xor
push
je
adc
cwde
push
cmp
mov
gs
add
shl
leave
(bad)
dec
dec
imul
pusha
mov
pop
push
out
xchg
aad
jno
dec
xchg
jns
dec
xor
out
add
scas
int
cmp
jne
cdq
push
jge
outs
lods
sbb
xor
aaa
je
ins
mov
jb
cdq
sub
xor
inc
ja
mov
mov
adc
push
std
mov
push
test
stos
mov
arpl
(bad)
dec
pop
out
push
jnp
push
mov
xor
mov
cmp
ins
mov
mov
(bad)
xor
sub
out
mov
push
outs
out
pop
ret
push
pop
jmp
mov
into
int
pop
mov
push
ror
mov
cld
jge
fsubr
mov
push
stos
call
int3
inc
cmps
jp
push
xor
inc
mov
jne
jp
push
push
adc
mov
mov
int
stos
pushf
dec
pushf
jp
and
mov
ret
cmp
gs
test
nop
test
jle
sub
inc
cdq
cmp
xor
shl
push
cwde
mov
scas
dec
cmp
cmps
mov
das
cmp
pop
jnp
in
cs
xchg
mov
stos
fisttp
imul
inc
std
idiv
xchg
push
call
inc
push
or
jecxz
cmp
inc
test
xor
mov
aas
xchg
fild
xor
into
idiv
push
and
xor
xchg
int
jge
pop
adc
loope
and
lods
(bad)
fwait
adc
inc
sbb
loopne
add
push
sub
jbe
and
xor
hlt
in
xor
xchg
adc
add
add
enter
mov
and
and
inc
je
test
(bad)
pop
or
clc
jbe
jmp
dec
das
inc
mul
hlt
into
jae
push
mov
xor
ror
lahf
or
inc
inc
clc
test
test
lods
fistp
frstor
aad
xor
jmp
sbb
add
pusha
scas
fiadd
inc
xchg
push
xlat
mov
arpl
imul
(bad)
cmps
leave
in
adc
xlat
xchg
rcr
sub
add
test
inc
call
xor
or
cwde
into
call
mov
add
cmp
shr
jle
sbb
mov
outs
adc
loope
mov
iret
cli
cmps
xchg
data16
add
mov
fwait
push
call
je
xchg
sub
xchg
loop
stc
pop
lock
jge
jecxz
push
fdivrp
sbb
mov
mov
mov
mov
or
dec
pop
mov
scas
or
cmp
ds
cli
shr
(bad)
dec
cmp
fnstenv
xchg
dec
mov
cld
push
push
jmp
rcl
inc
sbb
inc
cmp
aas
mov
dec
cli
add
leave
and
xrelease
sti
xchg
ret
xchg
arpl
fmulp
add
pop
sub
and
sbb
pop
leave
aam
arpl
ficomp
aaa
mov
push
pop
fs
vmovdqa
cld
(bad)
sar
lds
push
retf
scas
dec
jo
fnstsw
lods
arpl
mov
mov
popf
inc
pop
(bad)
data16
jmp
ja
and
push
sahf
or
mov
and
stos
dec
jnp
je
mov
ret
adc
cmps
repnz
test
mov
xchg
cmp
sbb
dec
xchg
dec
daa
mov
mov
pusha
outs
lock
fcmovnb
push
and
retf
and
sar
xchg
mov
pop
pop
ja
loope
fistp
int3
das
dec
jns
mov
cwde
int
jmp
adc
repnz
popa
inc
test
in
aad
pop
and
or
sub
jnp
dec
imul
sub
in
mov
push
push
fld
stc
cmps
shl
inc
fbstp
dec
sahf
dec
cmovo
mov
or
adc
mov
adc
data16
stos
ror
sub
ss
xchg
xor
ja
xor
imul
test
stc
lock
and
push
es
(bad)
cmp
ss
out
mov
push
ficomp
xchg
mov
push
add
inc
mov
jge
lods
sub
pop
ja
and
mov
(bad)
cs
mov
pop
or
bound
or
pop
mov
lock
xchg
jle
fmul
dec
je
in
add
mov
jne
sahf
(bad)
xchg
jecxz
imul
aam
mov
jmp
lahf
bound
inc
daa
outs
xchg
ret
and
movs
jl
movs
adc
clc
ss
inc
mov
(bad)
sahf
cmc
sub
popa
jae
adc
or
dec
ret
xor
cmp
dec
scas
aas
lock
outs
fiadd
test
jecxz
push
(bad)
and
stos
cli
imul
mov
fldcw
aad
xor
add
dec
push
xchg
mov
maskmovq
not
xchg
jno
test
ja
push
mov
fistp
cmps
cmps
loope
mov
pop
(bad)
dec
add
inc
jmp
movs
mov
dec
add
mov
sub
xlat
lods
fsub
inc
or
mov
inc
mov
jbe
xor
sub
xor
jo
lock
shl
or
mov
push
sbb
pop
sbb
mov
xchg
push
mov
sbb
pop
gs
jae
pop
xchg
mov
push
sbb
jmp
and
jne
ja
lds
dec
push
xor
sar
lahf
fistp
(bad)
xchg
mov
jle
add
loop
mov
call
gs
push
mov
retf
mov
jp
fnstsw
test
pusha
iret
push
add
push
in
fbld
mov
inc
jns
mov
jge
dec
sub
mov
xchg
sar
xor
imul
jl
sahf
repnz
ins
cmps
ds
popa
repz
pusha
inc
push
rcr
and
inc
enter
int
into
add
jmp
scas
sub
lds
pop
fcom
sub
jae
jecxz
movs
mov
push
jecxz
push
cmp
(bad)
popf
or
outs
inc
repnz
loopne
sbb
lods
push
pop
cmps
mov
mov
jl
or
rdmsr
mov
mov
call
pop
or
in
and
mov
movs
outs
stos
lds
xchg
jge
sti
fld
jbe
das
sub
xor
test
data16
out
pop
push
cwde
jo
mov
fdivr
fistp
push
fcomp
call
int3
fsub
bound
adc
and
int3
xchg
call
pushf
xchg
or
jle
mov
bound
cmp
or
fbld
jp
(bad)
xor
(bad)
aam
lods
pop
jnp
jbe
push
or
rcl
mov
push
jne
cwde
add
aaa
cmc
mov
cld
stos
xchg
jno
lahf
lahf
stos
imul
mov
dec
dec
xchg
inc
sub
shr
not
inc
sbb
or
fdiv
and
jns
loopne
fistp
lods
mov
cwde
js
hlt
push
stos
mov
cmp
rcr
ins
sub
into
jne
pop
inc
dec
cld
popf
out
es
dec
je
jne
in
movs
push
pop
cmc
(bad)
inc
jl
cld
mov
aam
lds
inc
mov
jmp
loopne
lahf
add
cmp
jp
xchg
sbb
cwde
int3
call
cld
xchg
dec
jbe
out
jecxz
ret
scas
rcl
push
lods
cmps
movs
or
fmul
inc
bound
(bad)
cdq
xor
lea
leave
cmp
ja
(bad)
fcomp
fisttp
and
ret
add
cmps
jb
loop
jnp
ins
xchg
xor
out
(bad)
push
ins
clc
mov
mov
mov
nop
mov
sub
cmp
stos
adc
lods
or
cmp
test
int
in
arpl
inc
mov
imul
ret
sub
leave
mov
sahf
(bad)
in
mov
lahf
fist
rcr
jmp
push
mov
out
nop
leave
and
dec
ss
cdq
mov
and
sbb
pop
or
pop
xor
dec
cli
push
inc
lahf
daa
loop
sbb
(bad)
sbb
pusha
cmc
popf
test
mov
mov
loop
sbb
gs
ja
push
fcom
lock
stos
xchg
push
jns
loope
icebp
mov
test
or
push
pop
cmp
mov
shr
inc
xor
loop
loop
adc
ror
arpl
ja
fldcw
mov
inc
addr16
lahf
push
(bad)
out
add
(bad)
mov
and
mov
sbb
popf
xchg
inc
mov
xor
outs
stc
loopne
cmp
retf
ror
ds
push
push
xchg
mov
cmps
pop
push
mov
imul
sbb
retf
xchg
inc
sub
push
inc
rcr
inc
fwait
in
adc
or
add
loope
xchg
je
retf
jmp
jno
push
clc
fadd
xor
add
aaa
leave
cmp
sbb
dec
popf
xchg
xchg
pop
test
ret
daa
fsubr
push
dec
icebp
adc
pop
push
or
movs
mov
daa
fs
adc
sub
jno
gs
cmp
xor
loopne
inc
daa
cmp
push
mov
cmps
sbb
sub
sbb
push
jnp
mov
enter
cli
imul
xchg
xlat
jne
jae
mov
mov
xchg
pop
cli
stos
jg
adc
sbb
adc
sub
out
enter
push
ror
push
dec
cmp
int
jo
sbb
popa
sahf
dec
cmp
and
jmp
sbb
jae
loop
inc
ss
sub
push
(bad)
mov
mov
adc
movs
iret
in
icebp
mov
mov
jmp
inc
out
lea
push
mov
loop
mov
cmp
push
cmps
add
push
retf
not
push
loopne
sbb
jnp
adc
icebp
xor
mov
fstp
je
pop
ss
(bad)
or
aaa
aaa
mov
fidivr
fucom
das
xchg
(bad)
ja
cmp
xchg
fisub
test
jg
nop
out
cdq
mov
fcomp
or
mov
outs
fs
imul
lods
adc
std
loope
push
push
or
das
out
push
and
(bad)
xor
dec
cmp
xor
add
repz
(bad)
(bad)
daa
pop
jns
sub
outs
ss
and
pushf
sub
and
movs
mov
pop
mov
mov
ret
fnstenv
mov
pop
jae
scas
jo
sub
ins
fisttp
in
inc
mov
jecxz
shr
adc
cdq
lods
out
push
out
and
jmp
jmp
sub
fdivrp
sahf
adc
ret
jb
and
repz
test
(bad)
sub
in
loop
sub
(bad)
loope
mov
push
cmp
add
xchg
sub
xor
js
fistp
xor
int
aaa
mov
test
hlt
faddp
push
add
pushf
pop
test
addr16
xchg
gs
mov
(bad)
fiadd
push
test
dec
loop
repnz
popa
inc
push
aas
cmp
ror
sub
mov
outs
(bad)
jb
(bad)
dec
inc
mov
or
std
fldcw
loope
mov
xor
push
pop
jp
mov
or
clc
mov
add
mov
push
ss
xchg
aam
dec
cmps
mov
lods
icebp
mov
out
sub
shl
in
or
pop
push
fldenv
mov
push
fs
mov
iret
mov
pop
aas
popa
mov
pop
cmps
in
push
scas
xchg
or
add
dec
jmp
push
mov
inc
inc
imul
pop
in
(bad)
mov
loop
in
arpl
mov
nop
adc
adc
adc
add
(bad)
test
mov
retf
pop
mov
div
jl
push
jne
shl
pop
mov
mov
mov
imul
retf
cmp
push
push
cmp
pop
fcomip
out
es
or
movs
shl
pop
adc
inc
mov
(bad)
add
test
je
xchg
sbb
sbb
ds
aam
popa
(bad)
sbb
test
into
inc
sub
pushf
outs
inc
pop
imul
sbb
dec
imul
mul
push
or
jmp
cmp
vmread
dec
xor
sbb
sbb
xchg
push
or
jno
xchg
jae
in
xchg
ds
inc
dec
loope
outs
mov
and
out
loop
dec
push
xchg
mov
nop
stc
mov
loope
jb
jl
std
mov
cmp
mov
adc
jg
xchg
jp
loope
mov
out
cld
jb
adc
(bad)
bound
sub
jmp
cld
in
jnp
dec
mov
inc
es
sbb
dec
pop
adc
xlat
mov
jne
adc
jle
cli
mov
inc
or
inc
xchg
add
mov
out
movs
outs
test
fld
sti
fs
and
mov
and
dec
or
xchg
ffreep
repnz
js
cmp
test
lods
inc
mov
xchg
xchg
call
inc
pop
or
inc
push
(bad)
inc
mov
jno
in
dec
into
lahf
nop
cmps
mov
and
mov
out
sbb
out
call
or
leave
out
jo
inc
push
or
jmp
sbb
leave
and
imul
(bad)
pop
js
jbe
outs
jmp
xor
lahf
dec
retf
jge
cmp
mov
stos
adc
jmp
mov
push
add
dec
xchg
lock
adc
mov
cmp
ds
mov
add
fsub
(bad)
cmps
(bad)
jo
pusha
and
cmp
push
lods
das
test
xchg
mov
ds
mov
popa
mov
sti
sti
jne
out
popa
jo
cmp
cmp
push
out
and
xor
retf
lds
aaa
push
push
(bad)
fcmove
repnz
ja
mov
ret
pushf
sar
inc
mov
hlt
test
jne
mov
retf
xchg
cmp
cmps
neg
push
cmp
retf
icebp
aam
sbb
jnp
pusha
xchg
mov
out
in
sar
or
call
aam
jp
mov
(bad)
int
adc
cmp
or
add
xchg
sub
out
or
jns
int
add
adc
add
out
das
shl
adc
arpl
pop
xor
jmp
pop
xchg
cld
leave
aam
sbb
jbe
mov
jns
aaa
fstp
push
idiv
xor
and
pop
jnp
cmp
inc
inc
movs
(bad)
test
call
ret
fidiv
hlt
data16
mov
xchg
mov
sbb
rcl
int3
dec
mov
mov
cdq
xchg
enter
sbb
sbb
aas
sbb
repz
pop
push
add
cmps
shl
jae
int3
mov
pusha
test
rcl
xchg
xchg
cmp
inc
xchg
inc
xor
add
or
ss
movs
jne
push
jb
stos
(bad)
mov
xchg
pop
xor
push
mov
(bad)
cmp
push
mov
jo
lods
out
push
pop
call
jmp
xchg
jb
push
push
je
cs
pop
cmp
cmovp
jg
pop
dec
and
dec
jno
mov
dec
iret
(bad)
hlt
jp
jmp
sub
pushf
stc
and
cmp
out
sti
jl
out
mov
and
popf
jbe
int
cmp
movs
push
cwde
std
imul
jae
inc
arpl
loop
fldcw
mov
mov
sti
dec
jbe
pop
and
sbb
and
jl
stos
fst
iret
in
xchg
push
inc
movs
cmp
in
mov
out
xor
inc
call
push
xchg
(bad)
ret
cmc
fwait
push
test
mov
out
jae
in
outs
je
mov
and
push
mov
mov
movs
shr
pop
cmp
push
jne
scas
sub
(bad)
inc
jge
ja
sub
aam
ret
dec
inc
dec
pop
xor
scas
test
pop
mov
jge
xchg
or
cmp
inc
mov
sahf
or
xchg
call
stc
ins
dec
retf
(bad)
dec
push
pop
push
in
xor
mov
test
int3
ror
stos
test
pop
mov
fadd
push
xlat
jbe
adc
out
pop
shr
loop
icebp
cld
nop
cmps
mov
in
rol
gs
repnz
push
cli
lods
inc
pop
popf
push
xor
cmp
cdq
xor
cmp
sahf
mov
sahf
sar
mov
jb
and
or
rol
jmp
and
sub
push
push
ret
mov
ins
add
inc
mov
div
in
pop
loope
jae
js
push
out
jnp
mov
stos
nop
push
jmp
mov
(bad)
push
movups
add
in
(bad)
xchg
(bad)
sbb
in
fisttp
stos
or
out
mov
repnz
inc
sub
out
adc
add
call
fdivr
retf
jle
adc
push
xchg
push
ins
enter
cmc
retf
add
pop
movs
push
call
loope
add
xchg
sbb
stc
inc
enter
and
out
fisub
retf
(bad)
adc
jbe
fld
in
xchg
dec
jecxz
mov
cmp
jbe
out
mov
arpl
sub
jmp
ds
or
sub
fisttp
adc
fsub
ret
test
fs
ins
add
or
add
(bad)
addr16
nop
xor
scas
dec
aaa
mov
in
cmps
cmp
push
ja
in
js
sti
test
and
ds
ins
cwde
mov
out
and
or
call
fistp
je
mov
adc
pop
mov
cmp
push
(bad)
movs
arpl
cmp
jno
xor
jecxz
dec
pusha
call
inc
pop
xchg
cmp
sbb
sbb
mov
icebp
add
out
sbb
js
mov
xchg
pusha
fisub
cmp
xchg
in
pop
sti
jbe
pop
pushf
aad
cmp
lea
dec
mov
mov
xor
aam
sar
adc
bound
shl
(bad)
xchg
push
xchg
aam
xor
cmps
imul
jecxz
popf
xchg
jo
adc
out
mov
and
shl
sbb
mov
in
and
xor
xor
cmp
loop
mov
push
pop
pop
repz
shl
push
jns
and
inc
repz
js
push
mov
cmp
and
jle
mov
(bad)
mov
shl
push
out
mov
(bad)
fisub
imul
in
aaa
mov
mov
xchg
push
sub
cmp
lods
das
mov
sahf
test
jmp
and
pop
ins
lahf
jle
enter
inc
les
push
jp
adc
xchg
loope
cs
inc
jp
pop
pop
push
retf
and
fcomp
mov
adc
xchg
push
inc
jno
sub
shr
cmp
(bad)
cmp
pop
lock
jl
push
cdq
sahf
xchg
fdivr
mov
outs
iret
cmps
cld
mov
inc
push
dec
retf
hlt
loopne
into
adc
pop
lods
stos
out
jge
xlat
jo
nop
jno
dec
in
xchg
mov
imul
dec
xchg
jns
mov
jno
scas
stc
or
sti
push
aad
xor
xor
push
add
mov
sub
inc
or
(bad)
daa
stos
in
test
pop
ret
(bad)
xor
mov
push
dec
jp
jno
mov
cmps
cmp
mov
fsub
inc
add
(bad)
cwde
in
cmovp
(bad)
push
cmp
(bad)
adc
lods
sbb
mov
sub
loopne
xlat
test
in
sbb
loop
cld
out
fwait
xchg
stc
mov
pop
sub
das
data16
and
xlat
aas
lods
cmps
pop
mov
div
push
inc
enter
xchg
cmc
mov
sub
sti
test
pop
pop
popf
inc
mov
dec
stos
(bad)
imul
loopne
pop
int
mov
ds
(bad)
jecxz
cli
bound
addr16
mov
mov
mov
adc
fwait
sub
adc
cwde
cmp
push
or
sbb
arpl
icebp
mov
iret
sahf
push
dec
icebp
pop
and
mov
(bad)
push
mov
add
inc
or
and
mov
inc
imul
mov
push
jg
std
cmp
iret
icebp
test
mov
lock
into
inc
pop
stc
jb
inc
loopne
or
inc
cld
cmps
icebp
(bad)
into
add
jb
out
ror
cli
jbe
mov
pop
lahf
(bad)
aas
or
cmp
add
sti
sar
(bad)
mov
fidiv
mov
stos
xor
or
cmp
ins
xchg
ret
sub
push
sub
mov
xchg
mov
fist
ret
xchg
mov
pop
adc
adc
fild
or
dec
fstp
popa
repnz
inc
push
and
lahf
pop
mov
into
sub
in
and
sub
push
sbb
jp
xchg
loope
imul
out
(bad)
and
repz
imul
test
ins
cmp
mov
push
add
sbb
jle
scas
push
adc
mov
jmp
lods
out
cli
rsm
sar
push
int
and
repnz
mov
out
cmp
scas
loop
mov
popa
mov
jmp
test
jo
in
sar
mov
ror
imul
dec
jg
cwde
cmps
in
clc
aam
mov
mov
setns
cmp
pop
xor
repz
mov
outs
stos
cmp
jmp
pop
fldcw
ret
movs
xchg
xchg
mov
sub
out
leave
mov
rol
add
scas
leave
mov
dec
aas
xlat
leave
in
mov
mov
xor
push
mov
mov
es
lds
cmp
jns
mov
jmp
mov
mov
or
mov
add
jmp
test
scas
mov
sbb
mov
jno
aas
jo
xchg
stos
mov
add
cmp
rol
inc
mov
xchg
push
or
add
adc
sub
mov
push
fsub
lods
or
xchg
pop
or
shl
and
inc
push
push
sbb
iret
sbb
(bad)
pop
jge
(bad)
repz
scas
mov
or
ror
dec
mov
mov
popa
adc
(bad)
iret
jae
popf
stos
dec
sahf
xchg
test
mov
fsubp
pop
cmps
fcomi
sbb
xor
jne
test
scas
div
mov
(bad)
lea
pop
sahf
stos
stos
and
not
push
push
adc
and
stos
push
je
out
mov
dec
jbe
mov
cmps
jecxz
movlps
xchg
scas
cli
test
loopne
retf
movs
sti
(bad)
mov
out
cmp
cmp
fs
call
ret
pop
inc
fdivr
call
pop
add
jl
int
mov
dec
push
xor
jg
add
mov
fucomi
movs
pop
fistp
and
jmp
scas
aad
mov
xchg
sbb
adc
pop
repz
inc
inc
out
sbb
mov
xor
sub
jb
xor
jecxz
daa
add
mov
jnp
jecxz
mov
xor
cmp
jmp
outs
lock
jb
call
mov
xor
pop
mov
xchg
jbe
and
aaa
mov
f2xm1
retf
fneni(8087
adc
cdq
neg
imul
jo
mov
std
pop
out
inc
cmp
cs
and
aas
dec
fisub
test
inc
inc
jbe
cmps
and
push
push
jmp
add
add
and
prefetch
or
and
or
push
xor
add
dec
mov
sahf
lea
push
cs
push
inc
loopne
mov
xchg
ret
dec
pop
pop
adc
inc
scas
cmp
mov
sbb
dec
fnsave
xchg
mov
dec
cmp
or
ficomp
mov
leave
scas
ror
rcl
test
loope
mov
xchg
aas
add
shl
(bad)
sub
ja
repz
or
inc
in
in
pop
mov
mov
or
aas
adc
sub
in
bound
dec
repz
es
outs
push
imul
mov
push
in
(bad)
xchg
cmp
rcr
test
push
les
pop
stos
scas
pop
lock
adc
jo
xchg
mov
test
xlat
dec
jnp
pop
stc
push
out
mov
cmp
pop
popf
imul
leave
sbb
add
fdivrp
aaa
inc
mov
js
mov
rcl
mov
pop
(bad)
lahf
pop
xor
mov
pushf
push
popa
xchg
sar
(bad)
fild
or
cmp
sub
cs
(bad)
repz
or
sub
sbb
xchg
int
aad
xchg
xor
jp
les
push
mov
adc
xchg
cmp
(bad)
jnp
cmp
mov
cmp
loopne
inc
loop
fwait
imul
cmp
das
ins
es
jbe
lea
stc
xlat
icebp
dec
mov
test
pop
adc
push
rcl
pushf
sbb
hlt
dec
ds
enter
or
std
loop
int
in
push
xchg
ror
mov
jmp
inc
clc
cmp
hlt
hlt
mov
aaa
loopne
pop
scas
test
cmp
inc
add
push
mov
mov
popa
iret
inc
mov
dec
adc
in
stos
cmps
cvttps2pi
mov
xchg
mov
and
pop
xor
movs
cmc
dec
push
fld
mov
in
bound
mov
int3
mov
popa
aad
dec
adc
lahf
fild
in
in
xchg
in
bound
jae
push
and
pushf
ret
ja
in
loope
pop
jl
cwde
xchg
fnstsw
pop
push
mov
inc
cmp
repnz
and
dec
mov
and
sub
sub
or
dec
jl
or
xchg
mov
fistp
adc
in
(bad)
push
jns
sbb
dec
inc
data16
push
adc
fdiv
jno
sbb
mov
cmp
rcl
xor
es
leave
inc
cs
rol
in
pop
adc
jmp
retf
cmps
aam
arpl
add
sub
xor
adc
icebp
popa
in
div
lds
push
cwde
mov
inc
test
xor
adc
or
adc
out
push
hlt
jnp
(bad)
and
aas
call
add
lahf
lods
retf
xor
and
xor
jmp
lods
call
sahf
add
push
lods
pop
in
cdq
mov
fbld
pop
or
sar
call
addr16
xchg
scas
mov
push
(bad)
enter
cmps
inc
(bad)
stc
(bad)
cmp
xor
(bad)
shl
xchg
cmp
in
hlt
pop
jno
dec
(bad)
xor
scas
xchg
das
sub
arpl
xor
or
ins
xchg
and
sbb
push
ins
es
(bad)
sti
mov
mov
adc
sub
(bad)
repz
sub
cld
pop
xchg
inc
aad
pop
push
call
or
cli
mov
movs
call
ret
aaa
inc
xor
mov
jnp
test
dec
imul
inc
mov
call
sahf
pusha
dec
(bad)
xor
sbb
les
dec
outs
cld
pop
jmp
pop
add
sbb
pop
imul
sbb
xor
xchg
sub
cmp
dec
mov
sub
sahf
cmp
data16
mov
cdq
shl
clc
cmp
(bad)
ret
cmp
nop
(bad)
and
mov
xchg
ss
jl
fmul
(bad)
and
out
int
cmp
test
fs
xchg
xor
push
xchg
pop
test
push
jl
and
inc
test
jge
sub
adc
je
pop
xor
sti
sti
(bad)
icebp
inc
cdq
test
fimul
(bad)
pop
xchg
outs
add
(bad)
and
pusha
push
push
mov
mov
xchg
int3
add
dec
nop
sub
mov
push
inc
mov
xor
popf
adc
jge
js
or
loop
xor
jno
js
push
push
test
fwait
or
jno
(bad)
mov
inc
cs
test
jp
div
xchg
sub
movs
inc
in
inc
push
int
call
call
mov
ret
scas
jne
adc
retf
push
fistp
mov
sbb
sbb
or
das
sbb
push
(bad)
fldenv
test
ret
in
scas
arpl
mov
mov
push
fmul
lahf
fwait
sbb
xor
xchg
mov
jb
movs
shr
mov
push
fsub
and
inc
sub
mov
std
ret
mov
xlat
cwde
cli
gs
das
dec
jne
pop
popf
cld
rol
cmp
data16
xor
mov
adc
xchg
sub
or
mov
jecxz
in
push
inc
mov
adc
gs
sub
jecxz
mov
xor
sub
xchg
cmp
leave
sbb
xor
(bad)
or
jbe
xor
jecxz
jle
add
ds
and
into
shl
gs
inc
cmps
fnstcw
pushf
dec
enter
pushf
call
movs
pop
dec
stos
dec
lea
xor
fnstsw
push
fwait
xchg
xchg
pop
xor
or
movs
push
scas
imul
stos
in
and
xor
fs
aaa
lahf
repz
sub
push
cmp
ret
(bad)
pop
stos
pop
movs
into
jge
int3
and
mov
outs
mov
ins
cmps
cmps
adc
mov
jb
cli
push
enter
jae
retf
ds
xor
fsubr
and
cmps
adc
mov
push
call
and
sbb
mov
cmp
push
cmps
jb
xor
movs
leave
cdq
lods
in
stc
repz
mov
jp
hlt
out
inc
sbb
mov
mov
ds
xchg
jno
cmps
test
cmp
cs
cmps
inc
jg
or
cli
mov
aas
arpl
les
mov
sbb
adc
dec
enter
push
dec
movs
mov
sub
xlat
iret
mov
mov
cli
lahf
sub
test
in
sbb
rcr
and
push
mov
or
mov
in
and
es
hlt
in
in
cmp
jo
rcl
call
and
xchg
ins
jo
mov
sbb
icebp
sbb
mov
int3
sbb
data16
movs
mov
test
mov
jnp
adc
cmp
and
call
mov
pop
in
mov
mov
inc
clc
dec
cmp
mov
fild
mov
aaa
js
mov
loope
pop
in
popa
(bad)
mov
cmp
stos
cmc
retf
imul
ss
fs
xor
sbb
xor
dec
or
mov
dec
loopne
xor
popa
sub
fucomi
std
add
dec
mov
cmp
dec
call
sar
pop
sub
jge
ja
ret
mov
ror
sbb
(bad)
cli
cdq
jg
xchg
icebp
fwait
adc
sbb
adc
loope
and
jmp
sub
xor
inc
das
lock
xchg
sub
rcl
adc
das
sub
jmp
loopne
push
inc
imul
add
out
(bad)
xor
pop
push
cmp
pop
push
pop
hlt
add
std
and
push
jecxz
sbb
pop
mov
mov
jmp
mov
xor
pop
jne
hlt
push
mov
sub
sbb
push
xchg
test
mov
out
aam
xlat
or
xor
add
mov
dec
dec
dec
sub
ins
and
out
sbb
cmp
test
xor
push
shr
daa
cld
mov
stos
push
sti
xor
jg
lods
xor
xor
xchg
dec
pusha
out
xor
and
aam
aam
test
jae
and
push
leave
enter
scas
mov
sahf
sub
push
mov
mov
test
dec
and
dec
add
call
in
xchg
mov
xor
dec
sub
xchg
mov
ficom
cmp
mov
std
out
je
int
or
adc
jmp
ins
push
jp
scas
jg
scas
lods
or
and
sahf
sub
ins
cld
mov
fld
test
cmp
sahf
sbb
int
pop
xchg
nop
add
cld
ins
ficom
mov
dec
jbe
repz
push
xchg
(bad)
jcxz
mov
adc
mov
pop
cmp
adc
xor
push
adc
mov
rol
sbb
cmp
pop
call
inc
inc
ja
push
push
call
aam
scas
lock
dec
scas
addr16
push
jae
loop
mov
sub
daa
xchg
loop
enter
adc
dec
add
dec
arpl
imul
or
add
dec
aas
push
scas
rol
leave
inc
shl
push
arpl
call
iret
jae
jmp
call
jg
mov
push
mov
lahf
(bad)
lahf
sbb
ins
mov
scas
push
in
dec
push
jae
dec
(bad)
ret
adc
jp
sbb
mov
outs
dec
movs
dec
pop
out
rcr
imul
es
cs
and
or
mov
bound
lods
mov
xchg
loopne
sub
pop
xor
fnstsw
leave
lds
fbld
loope
jne
or
fucomi
fwait
ret
jmp
dec
sub
fcos
or
dec
push
sub
sub
scas
fdiv
mov
mov
lahf
xor
xor
pop
mov
test
xor
and
add
inc
mov
clc
outs
add
push
test
imul
xchg
sbb
and
imul
push
xchg
xor
mov
and
add
xor
lods
sub
data16
js
test
fcom
mov
adc
mov
shr
sub
xchg
xchg
adc
lahf
pop
mov
lods
add
mov
movs
call
cmps
xchg
and
xor
xchg
mov
inc
fiadd
cwde
stos
xchg
movs
mov
mov
cmp
cmp
mov
or
adc
js
or
add
mov
stos
mov
cmp
xchg
aad
cld
jg
je
jg
popf
popf
cmp
mov
or
push
adc
into
(bad)
fst
movs
sar
and
mov
mov
and
mov
cdq
stc
and
jge
stc
add
pop
lahf
js
lods
dec
jecxz
js
push
fisubr
out
imul
out
fcmovnbe
add
inc
inc
in
or
sub
inc
sbb
cmp
sbb
cs
mov
xor
out
push
sbb
(bad)
je
les
inc
call
xor
les
scas
js
add
or
lea
inc
out
or
fmul
scas
test
push
fild
in
pop
jp
gs
rcr
jl
inc
cmp
dec
daa
ficom
xor
jb
sub
sbb
jp
push
(bad)
inc
bnd
(bad)
push
jl
pop
out
mov
lock
outs
loopne
(bad)
mov
xchg
stos
inc
xor
fisubr
mov
fiadd
test
enter
sahf
imul
sub
pop
xchg
shl
fdivp
in
ins
fwait
cld
xor
lock
pop
jo
xor
rol
movs
inc
dec
(bad)
dec
inc
sbb
dec
xchg
xor
int
pop
enter
xchg
clc
lods
jae
and
xlat
cmps
or
aaa
xor
dec
push
scas
pop
adc
js
add
shl
pop
in
mov
(bad)
pop
neg
jno
test
xchg
cwde
cmp
ins
sub
sti
mov
inc
(bad)
repnz
sar
fneni(8087
push
push
shl
js
mov
xor
int
or
add
repz
rcl
clc
ret
ret
mov
(bad)
sub
add
pop
mov
or
push
aad
shl
mov
out
xchg
jp
dec
int
sbb
std
jo
mov
mov
add
lea
fistp
jbe
and
icebp
mov
jbe
outs
sbb
fild
ja
pop
xchg
xchg
cld
in
add
pusha
mov
adc
push
arpl
inc
jle
data16
ins
ret
and
scas
(bad)
adc
pop
cs
idiv
pop
je
clc
(bad)
adc
leave
sub
cmp
scas
mov
mov
jae
adc
xor
call
in
add
xchg
cdq
repz
xchg
xchg
inc
dec
mov
icebp
popf
ret
in
retf
inc
add
lds
in
lock
js
imul
pop
xchg
pusha
fmul
mov
inc
popf
outs
cmp
mov
lock
jmp
xchg
inc
pusha
push
iret
mov
jbe
out
mov
les
aaa
test
cmp
xchg
jne
xchg
xchg
sbb
(bad)
ficom
push
pop
test
dec
daa
popf
je
sbb
cmp
fisubr
push
jmp
xor
lea
xor
jecxz
(bad)
jmp
mov
sbb
push
jp
test
jge
pop
fbstp
pop
adc
pop
mov
aam
push
jmpw
rcl
push
inc
dec
pop
add
addr16
enter
xchg
cdq
jnp
xlat
push
mov
cmps
adc
pop
pop
pmulhw
jp
xchg
cmp
inc
outs
xchg
and
jns
sbb
xor
pop
push
or
mov
test
xchg
movs
mov
mov
(bad)
test
sahf
pop
add
lods
and
repnz
cs
inc
push
cmp
and
adc
js
push
sbb
clc
mov
int
or
xor
pop
mov
sbb
retf
es
cmp
loopne
les
dec
jae
popf
fild
loope
cmps
sbb
test
cmp
popw
les
push
inc
pop
pop
cmp
xor
cld
and
cmc
mov
cwde
test
sub
jbe
push
push
cmp
in
push
leave
retf
and
sub
aaa
pop
mov
mov
mov
or
and
mov
cmp
rol
mov
sbb
scas
adc
jle
or
mov
adc
loop
push
jge
or
sbb
mov
aam
loopne
loop
in
es
add
sub
pop
pop
jbe
mov
adc
sub
or
(bad)
pusha
jl
or
push
add
xlat
xor
test
retf
out
test
aam
jno
(bad)
mov
push
test
(bad)
in
mov
lods
sub
mov
push
xchg
mov
bound
outs
or
sub
cmc
mov
imul
fsubr
dec
mov
(bad)
lea
test
push
sti
cld
sub
mov
cmps
sub
in
stos
push
fsub
inc
aam
push
sub
ja
ror
sbb
repz
mov
add
(bad)
out
or
inc
std
enter
pushf
xchg
enter
and
mov
outs
das
daa
mov
fs
cmp
js
jle
call
jnp
sub
sbb
jl
xor
aaa
inc
adc
ficom
or
or
loop
inc
inc
or
inc
cmp
jae
cmp
add
xor
xlat
mov
fisub
mov
dec
xor
pop
xchg
mov
sbb
xor
data16
fcom
sbb
sbb
mov
adc
shr
push
rol
mov
mov
and
jp
test
mov
outs
icebp
cmp
dec
mov
lods
pop
fidivr
sahf
ins
cmp
lods
jg
mov
iret
add
addr16
and
shr
not
out
std
popf
push
fwait
push
in
add
inc
(bad)
imul
icebp
outs
xor
pop
ins
xchg
fld
inc
pop
mov
jae
dec
popf
fstp
pop
jmp
outs
pop
lods
mov
ins
frstor
inc
cli
inc
movs
ror
addr16
popa
(bad)
stos
push
(bad)
push
repnz
test
(bad)
or
outs
pushf
and
and
pop
dec
pop
test
call
jae
pusha
pusha
sbb
iret
dec
or
ror
rol
lock
mov
movs
in
xor
repz
add
jns
mov
frstor
sbb
dec
dec
pop
jmp
xchg
sub
xor
xchg
icebp
add
enter
out
daa
jae
adc
ins
dec
sahf
ins
push
cs
movs
xchg
lds
xor
sbb
inc
sub
push
out
cs
mov
dec
sub
cmp
mov
xchg
adc
inc
sbb
test
xchg
or
xchg
sub
xchg
int
or
hlt
jge
ins
mov
retf
mov
rol
or
sub
sub
stos
jge
push
adc
or
movs
cdq
xor
push
lods
shl
mov
cdq
push
bound
xchg
bound
lea
mov
dec
sbb
push
mov
mov
cmp
dec
cmps
(bad)
(bad)
mov
shl
test
fistp
sub
sub
add
out
cs
pop
sub
cmp
stos
dec
inc
ficomp
push
cmp
push
sar
stos
xchg
pop
cmp
and
sub
mov
xor
mov
or
sbb
xchg
mov
jge
lea
cmc
inc
jns
cmp
mov
ds
icebp
loope
adc
push
dec
loop
jg
pop
ror
xor
das
cs
mov
jns
mov
cmps
icebp
int3
icebp
ds
cmc
xchg
pop
mov
mov
ror
inc
cld
rcl
jge
inc
les
ficom
add
xchg
mov
rol
lock
sti
add
iret
jmp
or
inc
pop
pop
inc
cs
ficomp
cs
jg
das
cmp
(bad)
loop
mov
pop
leave
test
jg
mov
cmp
mov
jp
inc
leave
rol
fnstsw
sub
(bad)
in
test
add
or
inc
cmp
fcomp
mov
sub
stos
cs
push
es
std
rol
fxch
test
(bad)
pop
jl
popa
cmp
or
retf
xchg
sub
sub
mov
sbb
rcl
jb
jp
enter
gs
int
rcl
push
call
jo
loope
repz
(bad)
push
retf
repz
add
cs
or
jno
dec
hlt
add
inc
sub
or
retf
fs
test
xor
jo
add
ins
and
pop
repz
mov
fsub
inc
adc
mov
adc
and
je
mov
daa
xchg
pop
mov
aaa
xchg
xchg
push
adc
xor
jmp
fimul
cmp
add
xchg
addr16
(bad)
enter
push
scas
scas
mov
inc
or
jecxz
les
and
mov
or
nop
or
pop
sbb
loop
(bad)
cld
imul
shr
jl
mov
xor
sub
fidivr
daa
js
fstp
fdivr
xor
aaa
add
mov
xchg
pushf
retf
or
jae
and
out
mov
shr
out
adc
test
dec
sbb
lock
adc
cmp
cdq
jl
pop
jnp
add
pop
or
(bad)
out
dec
dec
mov
cmc
dec
dec
out
rol
adc
loop
mov
jmp
dec
push
add
xchg
inc
retf
dec
hlt
xchg
fs
pop
lea
stos
popf
jnp
das
jmp
cwde
cmp
inc
jg
dec
or
jmp
sub
imul
mov
jo
sbb
in
jnp
(bad)
adc
ds
xchg
fidiv
mov
gs
inc
xor
or
or
shl
fdiv
into
mov
dec
cmps
and
jnp
push
and
addr16
mov
mov
ret
cmp
adc
dec
shl
fdivr
xchg
mov
cdq
call
test
add
out
xchg
mov
(bad)
xor
push
mov
lock
(bad)
cmp
and
std
test
mov
aam
pop
aas
inc
mov
or
inc
aaa
ret
into
mov
xor
jns
mov
mov
add
in
lods
mov
icebp
push
add
sbb
mov
aaa
mov
pop
scas
push
mov
push
stc
mov
push
ja
scas
dec
pop
aam
dec
fs
pop
add
jne
in
data16
push
pusha
and
push
fld
in
adc
jnp
dec
or
jle
(bad)
lahf
ficom
dec
pop
mov
push
mov
test
xchg
xchg
ret
mov
aad
lods
sub
jae
cmps
movs
inc
xor
jb
into
xor
jae
pop
dec
loopne
aam
mov
and
or
jmp
mov
mov
add
(bad)
and
adc
(bad)
xchg
je
and
fidiv
push
scas
adc
mov
lahf
pop
pop
sub
inc
jb
sbb
in
mov
repnz
movs
(bad)
sahf
js
push
inc
push
out
and
enter
and
scas
(bad)
cmp
in
or
pushf
cmps
and
lock
mov
pop
add
xchg
retf
pop
cmc
mov
sub
and
(bad)
sti
mov
sbb
dec
cmp
ja
(bad)
fld
inc
jle
push
mov
pop
cmps
cmp
(bad)
sbb
scas
stc
cmps
in
jecxz
hlt
aas
aas
aad
fmul
sub
mov
hlt
cmp
(bad)
cmp
dec
add
lods
jno
iret
sti
push
call
rcr
mov
scas
(bad)
mov
shr
or
sub
add
add
and
xor
push
xor
sbb
sub
mov
sbb
sbb
inc
mov
int3
and
(bad)
jecxz
in
add
cmp
xchg
mov
sbb
pop
push
fsub
jle
and
loope
mov
sbb
inc
adc
(bad)
cwde
sub
mov
loopne
pop
jno
test
or
idiv
arpl
jb
leave
and
leave
es
xchg
das
hlt
(bad)
jns
cmps
js
rep
push
push
aaa
test
out
imul
mov
(bad)
push
xor
jns
ss
mov
mov
mov
sub
fadd
push
scas
adc
or
sbb
into
icebp
addr16
ins
push
xor
stc
addr16
cmps
pop
ja
jnp
or
mov
adc
inc
iret
arpl
mov
jg
push
adc
cmp
mov
not
dec
mov
adc
cmc
or
arpl
mov
jmp
pop
cmp
adc
jp
jns
mov
or
pushf
jne
push
ror
dec
movs
mov
push
jl
retf
mov
out
or
mov
dec
repz
mov
cmp
sbb
mov
add
aad
enter
mov
movs
pop
add
mov
fld
cwde
bound
mov
daa
dec
push
push
ja
cli
jg
add
aaa
jp
push
add
jno
add
aaa
sub
pusha
(bad)
clc
mov
(bad)
mov
xor
leave
lods
int
xor
in
dec
push
je
mov
mov
call
jns
mov
jno
repz
dec
into
clc
xor
mov
push
or
jmp
cmp
sar
sub
aas
xchg
jp
sar
mov
push
xchg
dec
sub
xor
repz
inc
jmp
sub
mov
sub
pop
push
dec
push
cmovs
jno
xchg
ret
add
adc
jmp
push
mov
mov
adc
inc
dec
lods
add
push
push
repz
and
das
cwde
adc
and
adc
push
sbb
loopne
into
cmc
add
cmp
and
mov
test
mov
jns
aas
pop
dec
mov
mov
pop
xchg
cmps
adc
scas
xor
inc
movs
sbb
(bad)
or
jecxz
lds
or
aaa
dec
xor
jl
popf
popf
add
dec
mov
repnz
xor
inc
push
movs
(bad)
adc
add
push
cmp
xchg
dec
jmp
fwait
and
movs
repnz
repnz
jne
cmp
push
dec
mov
pop
xor
sub
cld
inc
xor
int
fadd
sub
push
scas
(bad)
jmp
lods
out
mov
das
in
in
rol
mov
jnp
jbe
int3
push
sbb
mov
sti
adc
outs
test
mov
out
xchg
lahf
pop
and
add
mov
mov
retf
or
call
mov
(bad)
sub
ret
or
aaa
rcr
xchg
xchg
mov
out
iret
xchg
xchg
aaa
mov
push
shr
sub
cmp
ds
fistp
lods
mov
dec
in
mov
jo
mov
ins
and
ja
jle
xchg
cs
jno
or
mov
test
test
imul
and
imul
adc
and
int
mov
lods
add
sub
dec
leave
leave
int3
push
sbb
xor
aas
bound
jmp
dec
cwde
nop
sahf
jmp
mov
je
cmps
sbb
cwde
jl
mov
sub
bound
pop
or
gs
repz
jo
leave
rcr
pop
ficomp
sub
daa
movs
jo
xor
in
mov
dec
push
movs
mov
mov
inc
clc
div
pop
je
in
(bad)
movs
sbb
ss
(bad)
jl
mov
mov
sub
xor
js
add
push
fdiv
addr16
dec
or
jecxz
pandn
jnp
inc
shl
call
or
call
sbb
push
mov
loop
sti
sub
xlat
jge
gs
xor
or
sub
js
out
add
or
sub
xchg
data16
je
add
fwait
nop
or
clc
mov
inc
rep
jo
ins
shl
fdiv
gs
out
push
inc
sub
loope
mov
push
mov
psadbw
dec
das
mov
dec
(bad)
cmps
ins
retf
test
xor
pop
das
xchg
push
mov
pop
cmps
dec
ss
dec
sub
out
scas
inc
shl
push
call
dec
repz
jecxz
xchg
sbb
loope
push
test
(bad)
outs
xor
inc
adc
out
push
xor
aas
test
mov
push
leave
jle
cwde
les
cmps
sub
mov
inc
jp
or
cmp
sahf
xchg
in
pop
ret
ss
xchg
out
push
mov
or
sub
outs
int
call
clc
sub
cs
dec
jmp
mov
leave
loopne
jns
outs
xchg
mov
adc
push
fild
mov
cmp
dec
mov
inc
fisubr
sub
jnp
loopne
bound
push
ror
stos
(bad)
ds
gs
lea
pop
pop
int
jl
ret
or
push
xchg
mov
rcl
sbb
fs
mov
dec
or
cmp
push
xchg
jno
cmp
cmps
lea
add
cmp
ins
cmp
xchg
aam
push
lods
push
jno
call
ret
add
xchg
icebp
jno
addr16
fsub
xor
ins
ja
jo
adc
out
std
ss
call
xchg
jp
mov
mov
pop
sub
pop
push
dec
jnp
out
mov
xchg
jl
jmp
cld
(bad)
mov
retf
adc
jg
jns
int
adc
(bad)
loope
lods
adc
sti
mov
shl
push
les
or
pusha
inc
out
mov
fwait
cld
push
mov
jle
or
add
xchg
jo
call
xor
and
arpl
push
ds
cmp
les
add
dec
test
(bad)
sub
es
lahf
xchg
push
mov
je
jo
xor
or
jle
sub
mov
outs
push
mov
xor
dec
sti
leave
dec
cmp
icebp
mov
das
cmp
adc
push
push
inc
fwait
mov
jl
mov
sahf
mov
out
push
or
icebp
jns
jmp
jmp
push
mul
and
mov
jg
adc
push
in
mov
or
jg
fs
das
jl
cmp
ret
(bad)
jnp
mov
ret
mov
cmp
in
imul
push
or
icebp
jb
ds
(bad)
or
fsub
in
pop
arpl
xchg
mov
stos
or
in
mov
movs
prefetchw
fisub
js
dec
and
call
jmp
mov
loop
jno
call
jle
pop
les
inc
cs
and
push
add
icebp
icebp
loope
xchg
cli
or
lahf
bound
into
mov
mov
pop
sbb
test
loop
jns
or
pusha
shl
(bad)
push
sbb
sbb
(bad)
cmp
(bad)
or
sub
mov
inc
mov
ja
xchg
es
adc
or
cmp
xor
mov
cmp
(bad)
int
repnz
dec
pop
call
sub
pop
cmp
fild
sub
sbb
je
cli
and
daa
xlat
push
jbe
test
or
mov
jae
(bad)
push
ds
lea
push
repz
pop
loopne
outs
movs
jl
or
daa
pushf
pop
push
inc
mov
sbb
(bad)
shl
and
or
xor
sbb
sbb
adc
and
pop
aam
sub
ins
outs
cs
nop
lds
data16
dec
mov
jo
mov
inc
and
aad
mov
dec
sbb
std
adc
xor
dec
mov
inc
(bad)
imul
fnstcw
fnsave
or
or
cmp
outs
bound
add
test
lock
mov
sub
mov
gs
sub
or
push
pop
add
mov
clc
das
repnz
test
push
mov
xor
loope
mov
fld
inc
cwde
cmps
ds
mov
push
scas
cwde
gs
lds
mov
ins
rcl
push
sub
pop
pop
add
xchg
dec
mov
ret
hlt
outs
mov
movs
adc
pop
scas
push
popf
(bad)
lock
dec
and
inc
or
add
sub
add
js
and
lea
mov
cmc
and
sbb
lahf
push
in
loopne
inc
dec
lock
xchg
fidiv
xor
aam
xlat
sbb
fisub
mov
(bad)
in
pop
mov
xchg
loop
cwde
pop
add
out
mov
adc
mov
mov
or
pop
cmp
cmp
and
adc
sbb
cmps
push
sub
rcl
pop
popf
outs
dec
mov
test
xchg
ins
push
add
push
mov
jle
and
scas
sbb
dec
jle
jno
lock
push
repnz
scas
sub
icebp
lods
pushf
(bad)
in
fwait
push
push
iret
mov
aas
aas
mov
inc
xchg
push
movs
cli
ins
push
jmp
mov
pop
ret
and
lea
adc
fimul
aaa
daa
mov
xchg
inc
data16
push
mov
xor
and
add
rol
clc
sar
shr
loop
xchg
pop
or
or
hlt
mov
cmp
mov
push
pop
or
fcom
mov
outs
cmp
and
in
jae
inc
cmp
mov
xor
call
repz
xor
mov
icebp
jnp
cmc
outs
push
pop
sti
cmp
push
lds
push
mov
and
push
xchg
mov
shr
sbb
sti
xor
ins
(bad)
outs
push
jmp
aaa
lock
nop
es
mov
cmps
mov
push
xchg
dec
mul
xchg
or
pop
or
push
test
cmp
int
sar
lahf
in
pop
inc
test
cmp
(bad)
cmp
cmp
repz
sub
mov
or
or
xchg
push
push
adc
pop
pop
dec
xor
jmp
cmp
adc
bound
lods
ins
push
push
das
mov
xor
xchg
pop
add
mul
mov
sub
pop
les
pop
add
js
mov
push
aas
pop
cmp
in
xchg
sub
xor
cmp
mov
jae
push
outs
jg
push
xor
inc
scas
adc
popf
clc
push
push
pushf
icebp
pop
je
mov
or
adc
pop
mov
leave
les
js
movs
inc
pavgw
and
xor
cmp
dec
or
shl
fwait
imul
sub
mov
add
sbb
or
xor
aas
pop
into
or
ror
cmp
sbb
push
cmps
push
jb
add
repnz
mov
pop
jecxz
mov
sbb
out
repnz
xor
fistp
nop
outs
stos
xchg
mov
xchg
mov
jae
mov
jge
push
xchg
test
fidivr
adc
cmp
cmp
jp
test
mul
jg
js
imul
daa
mov
xchg
mov
test
lahf
cmp
and
pop
(bad)
arpl
nop
jl
in
mov
mul
mov
lahf
push
test
stos
push
out
dec
mov
idiv
ins
in
stc
xor
xchg
mov
pop
cdq
and
pminub
shr
cmc
pop
jecxz
mov
jno
mov
dec
in
push
sub
pop
dec
cmp
cmps
push
push
scas
and
sahf
pop
stc
call
fucomi
xor
jbe
push
scas
xchg
mov
test
push
pop
mov
fldcw
jno
pop
repz
push
mov
int
jns
jmp
cmp
hlt
lds
mov
dec
sbb
mov
jp
mov
test
xor
aaa
cmps
mov
retf
into
push
xlat
(bad)
lea
or
(bad)
retf
sbb
cmp
cmc
hlt
mov
and
ins
mov
mov
dec
repz
mov
mov
jb
int
dec
dec
repnz
ror
retf
retf
adc
inc
inc
xlat
cmp
fdivr
cli
and
daa
mov
pusha
gs
aas
lahf
iret
mov
js
inc
cmp
mov
test
test
cmp
xchg
mov
and
lods
xchg
out
ret
jecxz
cmp
sbb
cmp
mov
mov
pop
mov
(bad)
push
mov
pop
xchg
movs
test
(bad)
(bad)
sbb
mov
sub
lods
(bad)
push
(bad)
js
in
cmp
lods
nop
cmp
fadd
pop
mov
adc
int3
cmp
inc
sub
les
pop
pop
fwait
(bad)
shr
mov
inc
ret
sti
sahf
or
sbb
fidiv
cmc
pushf
mov
push
sub
jo
aad
dec
add
cmp
inc
add
movs
loopne
jnp
or
jbe
xchg
push
inc
dec
mov
test
mov
inc
push
stc
outs
ror
adc
xchg
push
nop
and
add
push
ins
sahf
mov
scas
mov
mov
in
xor
in
and
mov
pop
call
adc
mov
jmp
mov
inc
jno
out
xor
out
popf
add
add
scas
or
jmp
mov
(bad)
retf
jo
aaa
call
mov
(bad)
enter
cwde
push
mov
sub
test
mov
or
push
mov
pop
cmp
cmps
adc
pop
dec
xor
test
dec
popa
test
icebp
pop
loop
outs
dec
dec
aad
stos
mov
sub
in
xchg
(bad)
stos
daa
int3
clc
sub
loop
jb
cmc
jmp
cs
sbb
jnp
fwait
sti
test
repnz
sar
sub
neg
ja
(bad)
mov
loop
inc
mov
movs
sub
rcr
jge
mov
sbb
leave
sub
mov
push
fsub
xchg
cmp
adc
movs
lods
or
mov
xchg
imul
outs
repz
fidivr
sahf
and
enter
cmps
push
fmul
sbb
pop
leave
mov
arpl
push
cwde
cmp
inc
scas
(bad)
ror
test
das
pop
add
adc
sub
call
pop
jnp
cmps
jbe
mov
pop
ror
mov
sti
pop
ins
push
(bad)
jle
or
xchg
sub
jle
pusha
hlt
(bad)
dec
popa
or
(bad)
pushf
xor
mov
sbb
push
jle
leave
pushf
add
das
aas
les
mov
adc
adc
out
aas
(bad)
mov
push
aaa
pop
fnstcw
xchg
and
stos
imul
adc
mov
push
mov
stc
scas
mul
jle
sub
dec
mov
and
xchg
pop
bswap
cmp
push
push
bound
into
test
xchg
adc
mov
and
mov
mov
sbb
xchg
scas
(bad)
add
fsubr
dec
scas
xor
push
std
mov
cld
and
jmp
cmc
imul
fld
sbb
dec
xlat
xlat
jge
in
sbb
fild
pop
cmp
or
fmul
dec
jno
aas
jl
sub
test
add
jae
inc
outs
and
sub
stc
shl
outs
fcomp
cmp
neg
sub
pop
mov
out
adc
data16
mov
leave
dec
inc
xchg
xor
and
in
push
xchg
xchg
adc
hlt
add
movs
xchg
cs
mov
(bad)
out
xchg
out
mov
sub
pop
enter
jmp
jl
cmc
xor
(bad)
cmp
cld
rol
sbb
cmp
xchg
out
cs
add
cmp
lods
cld
sbb
mov
pop
push
push
stc
pop
cmc
sbb
inc
or
test
cmps
sbb
inc
in
add
mov
cmc
mov
cmp
popa
dec
or
iret
je
ficom
and
sar
or
mov
push
mov
loope
call
xchg
cmp
mov
cld
lea
mov
mul
call
(bad)
xlat
or
(bad)
xchg
jge
inc
and
int
sbb
mov
ja
cmp
mov
stos
push
mov
sub
inc
adc
aas
test
and
mov
scas
addr16
jns
sub
pop
lods
rcl
inc
inc
jg
mov
pop
or
push
add
xor
lea
push
add
xchg
(bad)
iret
mov
sub
std
jne
or
jp
and
popa
xchg
pop
jmp
sub
mov
push
inc
out
adc
inc
pop
enter
inc
mov
fist
ins
mov
(bad)
popa
push
out
in
hlt
adc
adc
adc
inc
xor
hlt
mov
pop
wrmsr
ja
mov
cmp
xlat
into
inc
aas
jb
sti
jnp
lahf
inc
dec
pop
dec
fimul
push
adc
adc
aaa
gs
cmp
add
sub
pushf
add
cs
call
sbb
fld
cmp
cdq
clc
pop
cmp
push
dec
bound
pop
ja
in
in
in
addr16
pop
or
xchg
movs
mov
dec
scas
rol
aas
aas
or
cli
cmp
sub
(bad)
cli
jl
sub
sbb
les
jnp
stos
cdq
or
lods
ror
mov
ret
into
and
arpl
std
scas
stos
mov
push
xor
pop
cwde
and
loope
or
aaa
cmp
or
pop
mov
adc
mov
cmp
mov
popf
add
jp
xchg
hlt
mov
pop
mov
ins
es
ja
jmp
xlat
cli
data16
sbb
iret
retf
mov
mov
retf
stos
mov
push
clc
jge
leave
fimul
cli
nop
add
xchg
mov
test
dec
daa
shl
sbb
dec
pop
(bad)
movs
adc
nop
jne
lods
xchg
cli
icebp
loop
jne
pop
loope
ss
fwait
stos
clc
sbb
(bad)
dec
sub
mov
xor
pushf
movs
jbe
cmc
mov
daa
dec
add
arpl
mov
cwde
xor
pop
sub
mov
add
out
fldcw
xchg
dec
inc
adc
sub
pcmpeqw
iret
out
pop
cmc
out
in
sbb
arpl
mov
mov
sbb
sar
psubusw
jae
(bad)
out
push
pop
(bad)
jmp
mov
pop
cmps
add
loopne
jne
js
pop
int3
shl
mov
add
lahf
pusha
mov
push
ja
lea
or
out
arpl
xor
push
lock
fdiv
ret
aaa
and
retf
sbb
cmps
mov
cmp
arpl
in
hlt
mov
mov
imul
jnp
push
das
fisttp
mov
sahf
(bad)
sbb
aas
idiv
jb
(bad)
retf
and
movs
dec
jmp
and
mov
cmps
js
cwde
add
clc
cli
scas
cmp
xchg
or
jb
mov
jg
lea
or
lahf
fistp
(bad)
push
out
or
call
mov
dec
sub
mov
outs
iret
(bad)
lock
cmc
jle
push
scas
xchg
lock
mov
pop
jge
mov
ins
fwait
add
jecxz
add
idiv
hlt
leave
nop
addr16
jae
mov
push
retf
call
adc
pop
shr
cmp
jne
stos
rol
jns
mov
fs
cdq
push
mov
mov
mov
xor
ins
and
dec
mov
sbb
pop
sbb
dec
jl
daa
loopne
out
jns
jle
call
adc
mov
fmul
pusha
sub
(bad)
or
dec
test
nop
(bad)
sbb
mov
shr
mov
or
cwde
ret
iret
fdivp
xchg
rcr
fadd
jl
pop
repz
aas
xchg
push
mov
int3
mov
dec
dec
dec
mov
sbb
cdq
sbb
mov
jl
mov
icebp
ror
cmp
xor
xchg
dec
add
sub
test
sbb
mov
outs
mov
pusha
xor
add
push
outs
mov
loope
sub
cmp
ficom
push
(bad)
dec
mov
pop
mov
push
shl
mov
dec
out
dec
add
imul
xor
into
rcl
inc
mov
sbb
sahf
xchg
or
leave
adc
jg
arpl
leave
push
or
pusha
lods
test
push
iret
outs
dec
or
cmp
call
enter
into
and
movs
push
mov
call
xor
inc
jmp
lea
movs
push
popf
loopne
in
mov
(bad)
push
pop
xbegin
jg
(bad)
cmp
call
cmc
cmc
sub
xchg
scas
addr16
dec
jecxz
je
push
les
icebp
jg
out
sub
dec
in
push
sub
xchg
call
cli
adc
(bad)
aas
repz
xor
jmp
ss
mov
and
pop
cmp
int3
ror
jmp
je
pop
pop
sbb
inc
test
test
neg
xchg
jo
adc
cdq
imul
mov
outs
cmp
jp
movs
popa
loope
jmp
call
jbe
push
popa
or
shl
cmp
cld
nop
scas
jo
sub
es
fdiv
hlt
js
pop
retf
xchg
stc
inc
js
(bad)
arpl
inc
mov
cmp
pop
mov
or
push
and
(bad)
jmp
push
jmp
cmp
test
dec
scas
cmp
jno
js
jnp
aas
enter
in
inc
inc
stos
cmp
iret
sar
stos
nop
jb
jbe
pop
movs
adc
sub
pop
fs
sub
sbb
xchg
leave
stos
xchg
lahf
cmps
les
in
fs
xor
jge
push
or
lods
repz
fild
hlt
adc
push
adc
and
pop
ja
fstp
icebp
adc
sub
dec
push
pop
jne
out
jne
imul
(bad)
int
add
data16
shr
fsub
add
ja
cmp
and
xor
js
mov
dec
inc
fdivr
xchg
cs
dec
or
pop
or
sbb
data16
in
mov
adc
(bad)
pop
jo
loop
add
icebp
jnp
push
cmp
jbe
xchg
stos
sbb
mov
ins
aad
out
dec
mov
push
pusha
shl
jb
in
rcl
dec
sub
push
clc
retf
xchg
adc
cwde
mov
not
and
jnp
adc
scas
pop
pop
pusha
stc
das
aam
jg
push
ins
pop
lods
or
in
and
(bad)
cmp
idiv
mov
pop
push
test
and
jb
pop
dec
aad
or
(bad)
aam
mov
out
push
pop
fst
gs
stc
xchg
ficom
loopne
jbe
out
sub
mov
movs
mov
dec
mov
std
call
xor
(bad)
fwait
hlt
inc
pop
icebp
hlt
and
divps
mov
call
push
mov
xchg
xchg
mov
sub
(bad)
dec
enter
cmp
mov
or
cmovno
push
call
mov
push
out
fwait
pop
(bad)
out
out
nop
mov
xlat
call
adc
jle
inc
cmp
test
lds
adc
and
daa
add
and
outs
inc
icebp
cdq
mov
repnz
dec
mov
lock
jge
mov
dec
je
or
popf
xchg
sbb
popa
frstor
mov
add
mov
int
jle
cwde
sbb
jbe
daa
lods
and
or
dec
mov
inc
sti
mov
adc
test
inc
rcr
jmp
cmp
sub
pop
je
pop
xor
add
enter
xor
shl
fcomi
jno
shl
int
push
sbb
jo
cmp
leave
cmps
scas
add
adc
data16
or
scas
les
daa
pop
inc
cmp
imul
dec
gs
cdq
and
inc
sbb
push
cdq
int
call
mov
bound
mov
int3
push
pushf
mov
iret
test
xor
mov
mov
fcmovb
adc
push
inc
rol
loopne
add
jge
pop
jp
leave
sbb
push
push
push
xchg
and
push
push
stos
adc
sub
mov
or
xor
dec
das
cmp
mov
mov
arpl
loope
cwde
or
sub
out
or
aad
jnp
mov
and
mov
sub
in
mov
xor
ret
mov
dec
(bad)
pop
fld
mov
inc
xchg
xor
inc
push
mov
jbe
mov
mov
add
sbb
into
pop
cmps
adc
cmc
pop
sbb
pop
pop
xchg
mov
xchg
mov
mov
and
push
or
jb
push
mov
sar
mov
mov
sub
(bad)
(bad)
fucomp
inc
push
(bad)
in
adc
mov
and
das
mov
test
or
adc
(bad)
in
rol
mov
retf
sbb
cli
mov
mov
enter
iret
dec
rcr
jmp
(bad)
fimul
clc
lahf
idiv
iret
jns
aad
imul
shr
xor
lods
xor
call
cmps
jecxz
sbb
ss
test
pusha
sub
dec
sub
pop
mov
mov
ins
outs
or
ss
cdq
push
aam
fcom
mov
std
loope
pop
xor
into
xchg
cmc
out
test
push
lds
jmp
inc
sahf
cmps
jg
js
js
(bad)
xchg
in
lods
pop
dec
pop
push
cmc
dec
rcr
jbe
inc
scas
je
mov
xchg
adc
(bad)
movs
pop
or
xchg
jge
fsub
out
jg
scas
sti
out
jns
pop
and
xchg
test
or
fild
add
(bad)
push
into
data16
aas
xor
push
ss
mov
mov
cwde
into
add
add
mov
sub
push
shr
dec
pop
fisub
xor
add
add
fs
fldcw
adc
pusha
sbb
dec
mov
push
xchg
arpl
sbb
(bad)
sti
xor
imul
dec
ins
leave
outs
adc
dec
mov
inc
popa
jmp
xor
int3
(bad)
xor
sub
stc
pop
xchg
lds
sti
mov
data16
and
mov
out
sub
mov
mov
in
mov
loopne
sub
call
movs
push
add
jp
in
xor
repnz
lahf
mov
inc
scas
(bad)
push
(bad)
jl
sub
push
sub
in
pop
fist
or
test
pushf
ret
mov
or
add
jecxz
add
dec
(bad)
hlt
mov
sahf
sar
or
push
popa
inc
pop
dec
dec
je
cs
cwde
mov
xchg
stc
xchg
sub
mov
and
pop
les
jl
jno
dec
stos
jbe
cmp
adc
xor
(bad)
movs
leave
pop
mov
das
lea
fnstcw
and
pop
pop
xor
test
add
out
test
pop
add
dec
hlt
mul
mov
xchg
push
out
xchg
scas
(bad)
or
mov
das
lods
xor
push
pop
pop
xchg
retf
mov
adc
add
sahf
imul
adc
lods
(bad)
retf
(bad)
out
adc
ds
add
aad
xor
pop
in
push
mov
cs
test
stos
and
cmc
hlt
test
jl
test
call
test
add
mov
xor
xor
std
and
pop
adc
inc
pop
xchg
or
cmps
out
xor
outs
out
push
jo
pop
lds
mov
mov
icebp
(bad)
movs
movs
sahf
test
movs
inc
inc
dec
mov
ret
jp
inc
(bad)
inc
in
test
out
inc
sbb
repz
mov
adc
retf
stos
and
pop
inc
jo
pusha
test
nop
mov
stos
or
pop
inc
shl
out
inc
cmp
mov
and
ret
cmp
stos
call
sub
and
in
cwde
sbb
dec
out
sub
add
rcpps
in
lahf
xchg
hlt
jecxz
pop
jg
lea
movs
mov
push
jl
ror
mov
add
cld
sub
sub
lods
sbb
and
sub
add
loope
add
das
sub
add
xor
adc
mov
push
dec
aam
lahf
fiadd
add
jo
mov
movs
test
pop
push
leave
in
push
fstp
pop
push
or
push
mov
stc
mov
jns
jecxz
(bad)
dec
and
repz
xor
bound
jo
div
pushf
aad
inc
repz
xlat
add
test
sub
mov
dec
sbb
sbb
popa
jp
inc
mov
cmp
mov
jo
pop
push
push
pop
jmp
test
fwait
jle
pop
jmp
aaa
call
mov
mov
jns
push
ret
and
cld
cdq
imul
dec
fadd
pop
mov
push
cmc
outs
adc
iret
add
push
imul
pop
(bad)
pop
pop
add
mov
dec
cmc
(bad)
and
dec
mov
mov
cmps
aad
mov
iret
jp
call
mov
push
jb
fistp
out
cli
add
xchg
leave
cdq
dec
sub
jmp
adc
cli
fwait
push
pop
jmp
cmp
fwait
int3
and
fldcw
sub
mov
push
sub
jo
scas
retf
bswap
fucomi
sbb
test
fcom
rol
or
movs
add
inc
test
push
je
lea
jnp
je
dec
les
cmc
and
mov
lock
mov
das
fs
test
shl
addr16
addr16
push
sub
or
or
mov
xor
xchg
cmp
jo
mov
sti
ja
sbb
in
push
mov
inc
sub
inc
mov
loop
sbb
pop
sbb
cmps
mov
(bad)
retf
add
arpl
ror
lods
inc
xchg
add
pop
loopne
push
jl
pushw
xchg
(bad)
js
mov
ret
ja
ror
stos
cmp
mov
in
xchg
and
call
shl
add
cmps
(bad)
cmps
cmp
mov
and
fwait
sub
and
xchg
les
daa
or
cli
fisttp
jno
or
popa
push
fsubr
xchg
call
cmps
cmps
dec
imul
jbe
(bad)
in
mov
mov
sbb
(bad)
push
adc
add
add
cmc
(bad)
jg
inc
mov
(bad)
daa
add
xchg
add
sbb
and
les
push
xor
add
or
mov
stos
sub
dec
jmp
pop
push
xchg
push
add
pop
add
ror
ins
mov
stos
xchg
jo
cld
lahf
or
inc
out
jns
pop
jecxz
(bad)
fcmovnb
jecxz
int3
and
leave
jle
adc
lahf
push
inc
adc
ror
cmp
hlt
sar
in
adc
int3
pop
xchg
cmp
icebp
mov
pop
aam
adc
test
fld
mov
out
push
sbb
and
push
jbe
ficom
mov
xchg
jmp
stos
mov
xchg
adc
dec
icebp
mov
pop
add
call
xchg
jo
pop
add
movs
pop
and
(bad)
cld
ds
shl
and
sub
adc
jmp
dec
mov
arpl
repz
loope
les
cmp
fimul
in
mov
push
push
(bad)
icebp
add
xor
cmp
mov
(bad)
mul
jb
push
in
pop
cmps
mov
or
(bad)
cli
data16
cmc
shr
ja
call
mov
int3
shl
xor
inc
ret
xor
jns
dec
out
adc
lods
mov
jae
add
call
idiv
add
loopne
push
mov
xchg
add
xlat
loop
fcomp
push
jnp
aas
and
icebp
mov
dec
mov
dec
sub
xchg
dec
stc
(bad)
cld
popf
rcl
outs
mov
cmp
mov
test
out
inc
stc
sar
cmp
xchg
push
ins
int
mov
lea
lahf
or
ds
into
pop
outs
jno
jb
mov
neg
adc
cmc
fwait
pop
(bad)
mov
push
movs
mov
add
fsub
sahf
pop
pushf
cmp
mov
jg
daa
pop
pop
stc
xchg
mov
pushf
xchg
and
int
mov
sub
mov
or
das
rcr
mov
or
pop
std
sub
ret
jbe
and
pop
in
push
and
dec
pop
dec
inc
std
mov
es
loop
cmp
mov
xchg
std
scas
loop
push
stos
mov
cdq
cmp
dec
push
mov
and
xchg
rsqrtps
adc
and
inc
lahf
mov
fucomi
push
push
dec
cmp
xor
dec
or
ret
ror
repnz
mov
es
xlat
pop
push
cdq
pop
jle
in
lods
cmp
imul
cmp
clc
ss
in
out
dec
and
aas
outs
pop
mov
push
stos
clc
jnp
add
or
mov
or
mov
(bad)
bound
pop
inc
xchg
nop
in
fild
mov
stos
repz
adc
sbb
mov
jne
fcmovne
out
add
xlat
add
mov
push
sbb
mov
ficomp
test
dec
xlat
(bad)
daa
test
std
cmc
cmp
pop
je
jmp
or
fwait
or
les
test
fs
jle
xlat
cld
cmp
loope
cmps
adc
retf
das
jns
add
mov
lock
stos
dec
cmp
push
jl
jno
div
js
cwde
sti
fstp
xor
repz
inc
adc
jns
(bad)
xchg
arpl
rcr
and
(bad)
mov
mov
mov
stos
sub
adc
popf
push
ds
cmp
ds
xchg
inc
dec
(bad)
or
push
std
xchg
test
xchg
fdivr
xor
pop
fnstenv
xchg
cdq
or
pop
ror
cmp
jle
stc
add
shl
les
(bad)
ins
mov
test
add
mov
imul
or
xor
out
cs
scas
repnz
dec
sbb
mov
push
jmp
fld
add
shl
aam
in
xlat
clc
mov
xchg
sahf
(bad)
cmp
sub
pop
bnd
std
(bad)
cmp
pop
add
mov
jo
inc
mov
push
fidivr
mov
inc
jne
fcmovnbe
sti
std
jmp
test
and
mov
and
retf
mov
loopne
repnz
bnd
into
dec
scas
pop
ret
push
fs
xchg
fdiv
mov
jecxz
mov
movs
ins
std
fsub
(bad)
pushf
mov
out
movs
and
push
xor
es
adc
mov
paddsb
hlt
adc
xchg
fld
inc
div
in
xchg
push
xor
mov
es
and
mov
mov
ret
mov
sub
enter
mov
ja
popa
or
and
push
inc
pop
div
(bad)
mov
add
sahf
aas
push
pop
pop
sub
adc
ins
pop
jmp
push
jmp
or
xchg
test
cwde
push
mov
xchg
ins
stc
mov
jle
jo
mov
(bad)
cdq
inc
inc
inc
and
pop
mov
fistp
shl
fbstp
test
cmp
push
add
xchg
xor
aaa
pop
stos
icebp
retf
inc
mov
int3
int3
push
leave
mov
mov
xor
cmp
loope
pop
cli
cmps
jg
inc
cmp
dec
cmp
pop
clc
(bad)
scas
inc
or
lock
mov
mov
in
sbb
dec
test
pop
cmp
clc
std
pop
sbb
fwait
fwait
adc
inc
ins
dec
cmp
test
std
dec
cmps
pop
stos
ficomp
mov
gs
pop
push
nop
or
out
cmc
(bad)
xor
dec
mov
div
sbb
pop
in
mov
(bad)
push
sbb
jo
xchg
jbe
in
pop
mov
sbb
inc
inc
call
arpl
mov
int
adc
inc
jp
(bad)
mov
pop
adc
in
add
fwait
sbb
adc
ins
outs
pusha
inc
jo
mov
dec
mov
std
mov
fbld
or
sbb
push
fwait
in
xor
inc
lds
pop
and
mov
movs
mov
pop
jo
fisub
push
shl
push
mov
push
push
repz
clc
fst
inc
xlat
dec
mov
mov
popa
dec
mov
test
jae
(bad)
push
das
mov
dec
lds
sub
in
enter
jmp
mov
cdq
mov
bound
and
or
lods
in
in
das
push
(bad)
and
dec
cmps
clc
mov
dec
addr16
lahf
ror
clc
retf
cmp
cwde
mov
dec
cld
push
in
inc
pop
cmp
cmc
imul
psubd
push
sbb
sbb
and
rcl
movs
fdiv
sbb
jp
xor
ret
cmp
push
aaa
ffreep
or
adc
out
jo
push
and
pop
cld
outs
pop
adc
aam
popa
dec
sbb
sbb
nop
in
pop
mov
push
add
rol
mov
mov
jbe
or
fdivr
cmp
sbb
sbb
or
cs
popa
inc
(bad)
fcmove
mov
inc
sbb
xor
cld
mov
dec
lea
or
add
jge
adc
mov
outs
scas
data16
(bad)
pop
jo
stos
retf
cmp
leave
inc
add
dec
cli
pop
mov
cld
dec
cmp
sub
fnclex
in
xchg
mov
jg
xchg
mov
repz
pop
retf
inc
add
xchg
adc
adc
es
scas
push
jbe
cmp
rcr
or
ret
xor
cmp
push
popf
cmp
add
mov
sbb
xlat
gs
sti
cmp
mov
xchg
das
mov
cmp
adc
xchg
stos
inc
and
(bad)
rcl
dec
mov
pop
leave
movs
in
and
sub
dec
pop
and
fwait
xor
inc
or
jmp
inc
lea
inc
jmp
xor
ret
lods
dec
mov
pop
scas
and
dec
cmc
stos
push
sub
cwde
sbb
outs
inc
jle
lods
in
xchg
push
sub
dec
cwde
xchg
fcomp
mov
cmp
imul
mov
rcl
push
mov
jo
ds
dec
or
jb
cmp
mov
inc
mov
and
sbb
fdivrp
scas
movs
cld
inc
add
mov
cmp
fsub
out
inc
scas
push
push
les
pop
into
inc
dec
test
xor
mov
sbb
lock
mov
std
xor
or
sbb
sbb
(bad)
xchg
sti
xchg
repnz
cmp
jg
aas
test
fldpi
sahf
xchg
leave
sbb
xchg
inc
jne
icebp
sbb
push
mov
ins
jg
sahf
jl
dec
fcomi
loopne
xor
pop
jns
iret
ret
pop
test
fistp
xchg
call
dec
sub
sbb
and
adc
les
push
out
movs
lea
cmc
adc
rol
jmp
cmp
jnp
icebp
outs
or
lods
cmps
ret
mov
push
clc
rcl
mov
pop
dec
iret
xor
into
mov
psrad
pop
push
imul
cmps
mov
xchg
fnsave
leave
aam
out
dec
inc
(bad)
xlat
dec
jne
retf
adc
pop
or
sub
mov
dec
retf
fistp
movs
cdq
pop
(bad)
iret
mov
push
pop
jae
xchg
shr
fs
mov
cmps
mov
movs
dec
mov
bts
pop
(bad)
(bad)
int3
stos
cmps
cli
dec
sbb
inc
gs
pop
into
mov
push
pop
inc
pop
and
mov
dec
mov
cmp
out
mov
xchg
pop
push
dec
shl
cmp
mov
cmp
repz
push
js
fcom
aaa
dec
jmp
pop
cmc
xchg
aad
add
sub
out
mov
cmp
rcr
int3
aas
adc
test
sahf
pop
cld
sbb
or
sub
ficom
cwde
ins
cmp
xor
push
movs
jbe
retf
sbb
in
mov
jg
add
outs
or
stos
ss
clc
sub
mov
int
xchg
in
cmp
cmps
(bad)
clc
out
mov
cmp
push
xor
pop
rol
pop
mov
(bad)
add
sti
mov
test
push
in
je
xor
loopne
std
dec
mov
inc
xchg
or
mov
push
and
mov
sub
add
aad
cld
xchg
jbe
mov
sar
cdq
xchg
sahf
mul
lahf
xchg
(bad)
adc
and
inc
lods
add
push
aam
sub
push
(bad)
movs
adc
sub
stos
mov
mov
mov
(bad)
ret
adc
fs
pop
aad
fld
aam
dec
retf
sub
jecxz
xchg
push
stos
dec
add
in
ret
and
nop
push
dec
shl
movs
dec
or
inc
lea
fwait
(bad)
leave
call
xchg
mov
les
cmp
add
mov
or
mov
(bad)
xchg
or
cdq
jb
mov
and
and
pop
mov
mov
mov
mov
pop
shr
(bad)
out
mov
xor
xlat
push
data16
fst
xchg
adc
pusha
mov
or
xchg
xchg
mov
or
aam
xor
add
pop
push
mov
inc
inc
pop
jge
mov
mov
scas
push
fwait
test
adc
dec
adc
cmp
or
imul
jo
push
fimul
or
aam
scas
sub
pop
cmp
add
sub
daa
je
and
and
dec
gs
pop
test
shr
fisubr
mov
dec
imul
mov
push
(bad)
xor
push
sbb
xor
inc
sbb
leave
int3
xor
out
jmp
in
pop
xor
out
into
xor
sub
add
adc
dec
aam
dec
and
daa
and
cwde
inc
int
pop
ud2
aam
lods
xor
pushf
pop
mov
jmp
lds
add
jnp
out
ds
les
cmc
cwde
sbb
xchg
(bad)
sbb
sbb
lods
dec
dec
leave
xor
repnz
xchg
add
(bad)
and
sub
daa
mov
xor
cld
sahf
aam
mov
inc
fs
fidiv
cmp
pop
jecxz
sti
(bad)
scas
dec
adc
xlat
push
jmp
adc
sar
ret
scas
mov
pop
(bad)
int3
cmp
rol
ja
cmp
pop
es
jge
ret
sar
daa
nop
mov
aaa
mov
add
inc
bound
add
pop
outs
inc
mov
dec
xchg
pusha
leave
fsub
add
jl
jmp
das
stos
jb
mov
lea
jmp
jb
mov
cld
movs
pop
mov
mov
and
inc
cmp
aas
pop
test
add
fdiv
add
jno
hlt
sbb
sti
cli
ins
dec
mov
sbb
data16
iret
dec
mov
fisttp
mov
pop
inc
movs
pop
mov
sub
push
pop
jns
adc
(bad)
mov
mov
fbstp
xor
and
mov
push
fadd
cdq
mov
fist
jge
out
rcr
popa
inc
cmps
cwde
retf
sahf
push
push
pop
dec
inc
lock
fidivr
mov
mov
jbe
sub
xor
jl
loop
fimul
cli
add
xor
ins
into
test
or
dec
dec
out
popa
and
mov
pop
ins
ror
and
cmp
lahf
jae
jo
xchg
mov
cmp
stos
fmul
bound
out
cmp
(bad)
push
adc
mov
pop
inc
dec
(bad)
mov
xor
mov
push
scas
sbb
mov
fst
xchg
xchg
das
push
xchg
inc
in
adc
fdivr
jmp
jle
push
inc
push
xchg
cmp
jns
mov
jbe
dec
(bad)
retf
daa
jmp
lds
aad
xor
sbb
inc
mov
into
repz
shl
or
and
inc
add
pop
(bad)
popa
out
gs
imul
out
test
or
push
inc
(bad)
call
aad
mov
loop
ror
dec
jbe
frstor
push
inc
jo
sbb
es
adc
retf
(bad)
std
mul
lods
in
loope
cmps
int
mov
push
loope
int3
mov
out
sbb
dec
fadd
mov
in
or
xchg
call
neg
sti
je
arpl
ret
sub
jae
inc
inc
dec
xchg
in
popf
fimul
mov
sar
xor
mov
cmps
xchg
aam
adc
sti
and
jbe
adc
(bad)
pop
retf
pop
sti
leave
repz
mov
adc
push
sub
cmp
in
or
pop
sub
clc
sub
cmp
lahf
and
xchg
das
mov
js
mov
movs
dec
cmps
call
neg
inc
or
gs
hlt
and
lds
sahf
adc
aam
or
jns
sbb
inc
jg
sub
pop
or
lock
lds
inc
mov
xchg
pop
add
in
repnz
or
push
call
out
pop
shr
cmp
pusha
scas
and
cmp
jne
in
sti
and
sub
inc
in
popa
adc
nop
sbb
clc
fcmovne
fwait
rcr
jmp
add
int3
mov
loop
fwait
xchg
mov
int3
pop
gs
inc
mov
das
cmps
fdivr
adc
or
dec
int3
adc
mov
xchg
mov
sub
jae
mov
ins
sti
cs
cwde
jns
jg
neg
fistp
sub
mov
fcom
inc
dec
pop
ficom
push
cmp
adc
xchg
sbb
sbb
cmp
in
ss
or
dec
mov
mov
push
mov
lock
xlat
sub
xchg
out
dec
xchg
pusha
push
fidiv
or
jne
rol
or
inc
loopne
stos
cdq
imul
fcomip
(bad)
test
cmp
cmp
push
jecxz
dec
pop
push
dec
sbb
push
cdq
(bad)
push
adc
ins
mov
xor
pop
call
mov
aad
test
mov
mov
dec
cmp
(bad)
lods
mov
pop
mov
pushf
inc
cmp
pop
cmp
test
je
inc
jbe
mov
or
push
jge
inc
pop
ror
mov
add
data16
sub
test
es
ror
xlat
cmc
inc
sub
fwait
sbb
sub
xchg
or
ror
cdq
pusha
out
dec
pop
addr16
jnp
outs
xor
arpl
sbb
stos
or
cs
cmps
dec
xor
pop
stc
(bad)
cmp
sbb
or
dec
call
xor
into
icebp
jae
and
neg
js
and
rcl
fnstcw
aaa
popa
ss
(bad)
mov
lahf
mov
std
sbb
cmp
loop
dec
inc
out
ret
pop
retf
inc
iret
movs
ret
pushf
xor
out
sbb
pop
or
mov
mov
daa
pop
fwait
test
sbb
jecxz
and
pop
out
shr
pop
push
cmp
push
je
mov
pop
scas
pop
out
adc
jne
inc
bnd
imul
mov
inc
scas
addr16
cmp
popa
dec
sub
pop
xor
pandn
fidivr
(bad)
imul
or
sub
sbb
out
and
adc
dec
jmp
mov
push
int
test
fisubr
clc
xchg
jmp
ficomp
mov
into
cmps
scas
add
ret
and
loope
stc
iret
fsubr
test
jb
push
jmp
gs
arpl
xchg
fsub
add
adc
(bad)
leave
mov
ins
das
call
inc
push
xchg
ret
add
sub
movs
push
mov
jbe
inc
std
dec
cmc
jp
stc
dec
xor
test
bnd
les
add
push
cmps
pop
adc
mov
ja
cmp
jmp
lock
push
cli
xor
mov
push
out
std
add
cli
out
(bad)
mov
cwde
ins
es
movs
sbb
div
loopne
test
push
mov
shl
add
adc
popa
add
xchg
jbe
ja
jae
ficom
into
ds
loop
das
xchg
sbb
ret
fwait
push
push
sub
(bad)
mov
add
push
xchg
sbb
jb
(bad)
mov
(bad)
int3
clc
and
xor
test
xchg
pop
xchg
pop
sbb
xchg
and
loopne
dec
add
bound
fidivr
int3
outs
lahf
shr
jae
pop
xchg
dec
adc
xchg
jmp
sti
pop
arpl
adc
ror
cmp
and
jge
xor
and
or
jns
int
daa
aas
js
test
loopne
adc
add
xchg
aas
data16
cdq
retf
cld
xchg
cmps
(bad)
stos
mov
mov
es
xor
xchg
fisub
inc
shr
jmp
cwde
mov
cmp
ret
jecxz
mov
scas
xor
lods
das
mov
fisttp
dec
inc
scas
xchg
inc
sub
out
pop
test
call
sar
arpl
test
mov
dec
ins
push
mov
sbb
pop
mov
scas
cmp
sub
sbb
hlt
inc
xor
leave
cmps
mov
jbe
xchg
sub
xor
ins
xchg
pop
xchg
mov
cmp
or
cs
and
xchg
movs
push
gs
xor
push
aaa
mov
out
ss
test
and
test
call
test
push
fsubr
xchg
test
test
loop
pop
mov
xchg
lods
dec
sub
out
fsub
jae
xchg
dec
je
and
mov
(bad)
sub
jmp
out
int
and
out
xor
jle
push
stos
cmp
test
dec
pusha
or
call
addr16
jae
movs
nop
(bad)
(bad)
(bad)
push
push
clc
jno
(bad)
int
pop
jg
add
xchg
imul
pop
in
add
xor
pop
cmps
xchg
mov
adc
bound
test
inc
pop
inc
xchg
sti
mov
sar
scas
fistp
aam
xchg
pop
xchg
shl
fs
ja
dec
cdq
out
mov
mov
jbe
push
or
adc
sub
sbb
adc
add
ror
ror
push
outs
cmp
add
cmp
inc
cwde
or
das
sub
add
cmp
jle
fs
inc
push
add
fist
cdq
push
jl
adc
shl
jmp
mov
or
psrad
call
push
or
mov
sahf
mov
pop
xor
sub
mov
sbb
ja
adc
sbb
outs
mov
ret
mov
cmp
mov
cwde
lahf
mov
pop
ficomp
icebp
in
add
xchg
in
icebp
push
ret
adc
sub
xor
push
lods
cmp
push
xor
rcl
aaa
ficom
jl
aad
push
cmps
sbb
outs
jno
ror
add
jmp
inc
mov
push
daa
cli
sub
ror
pop
ins
dec
push
cmp
jmp
rol
sub
xchg
test
xchg
add
push
sahf
jmp
cmps
pop
xchg
mov
fcomp
jae
jb
mov
add
adc
aam
(bad)
mov
hlt
test
scas
jnp
scas
call
xor
lea
mov
inc
jmp
popf
cmp
sahf
adc
mov
jl
in
adc
(bad)
hlt
mov
add
popa
(bad)
call
pushf
xor
xor
mov
inc
popa
retf
rcr
xlat
push
div
jo
cs
loop
nop
das
adc
add
mov
xchg
ret
jae
inc
imul
cmps
push
retf
push
jb
cmp
fs
xor
push
xchg
clc
dec
jb
xrelease
cli
mov
and
cld
ins
inc
cmp
mov
mov
cld
pop
out
lods
gs
adc
out
in
add
jmp
jmp
push
ret
xchg
inc
(bad)
mov
aad
outs
adc
adc
lock
jecxz
clc
pushf
(bad)
in
js
mov
aad
test
pop
inc
fdivr
sub
test
in
rcl
mov
test
sub
out
mov
and
ss
pop
add
mov
std
jge
cli
mov
sub
xor
xor
xchg
dec
pop
in
fnstcw
inc
je
or
in
sbb
data16
loopne
cmc
mov
pop
mov
jno
mov
push
in
shl
cmp
jns
mov
mov
lods
mov
or
xor
cli
sub
fidivr
fsincos
jecxz
arpl
sahf
xchg
fisubr
icebp
nop
sub
mov
repz
and
jmp
jno
outs
mov
fwait
inc
lahf
mov
push
mov
push
outs
fwait
icebp
out
inc
int
sbb
cmp
jp
mov
js
and
mov
inc
mov
mov
push
sub
push
retf
fcmove
mov
pop
es
stos
shl
adc
and
inc
(bad)
mov
nop
in
jle
(bad)
mov
arpl
outs
push
xor
fwait
sub
cmps
xor
out
scas
in
mov
pop
idiv
dec
ss
addr16
push
ficomp
shl
mov
mov
je
stos
or
outs
stc
retf
add
jge
jg
popf
jnp
movs
and
aas
daa
lahf
cdq
cmp
popf
loopne
aas
fidiv
mov
sub
inc
ins
mov
mov
adc
mov
xchg
mov
sbb
ret
imul
ss
pop
fcomp
push
ror
dec
sbb
lsl
inc
(bad)
xchg
or
jno
push
push
xchg
jae
xor
dec
js
ja
aad
(bad)
mov
out
xor
mov
xor
add
fld
hlt
sub
test
cmp
lahf
jecxz
push
(bad)
sbb
in
js
movs
repz
jg
mov
sbb
mov
sbb
lahf
cmps
pushf
mov
mov
add
test
jl
xlat
test
or
pop
jmp
jp
lea
pusha
or
cmc
mov
cmp
lods
fcmovnbe
sahf
out
cmp
pop
dec
push
aad
inc
inc
inc
dec
jnp
add
popa
xor
pop
loop
adc
dec
adc
inc
popa
sbb
or
in
stos
loope
outs
scas
loopne
in
mov
data16
push
(bad)
pop
movs
cli
push
adc
call
jne
sub
add
addr16
aaa
xchg
push
jge
cli
fimul
push
inc
pop
pusha
xor
cmp
out
mov
mov
mov
fisub
test
adc
pop
ss
jae
fsubr
mov
xor
mov
test
add
mov
cmp
cs
xchg
sbb
ficom
nop
add
adc
test
shrd
add
test
pop
xor
mov
sbb
xor
add
fidiv
ss
push
ins
xchg
shr
pop
retf
push
in
jnp
fbstp
repnz
add
call
arpl
jle
cmps
cmp
scas
ja
and
xchg
xchg
and
pop
xchg
lds
xchg
xchg
pop
add
pop
xor
call
adc
lahf
test
ins
and
push
sbb
mov
push
mov
pop
aas
lahf
and
sbb
repnz
mov
rol
push
in
aaa
icebp
xchg
daa
mov
call
mov
dec
fwait
stos
std
mov
aad
leave
add
fdivrp
cdq
es
ja
retf
xlat
in
cli
sub
stc
imul
stos
enter
cwde
pop
inc
repnz
retf
call
add
pop
pop
push
push
dec
in
retf
adc
fidiv
ss
cmp
test
sbb
mov
cmp
idiv
mov
neg
add
out
pop
dec
xchg
cld
jge
inc
mov
ret
and
call
ds
aam
in
popf
fnstcw
imul
aaa
mov
fistp
dec
mov
xor
mov
fimul
das
adc
cmp
cmp
cmps
xor
or
leave
repz
pusha
cdq
jnp
xor
lea
data16
out
or
aad
icebp
or
mov
mov
jle
push
bound
jge
xor
outs
sub
mul
enter
cmp
mov
ret
mov
push
xchg
jle
push
mov
xor
loope
mov
cmps
add
fs
or
push
inc
stos
or
(bad)
imul
inc
sbb
ss
ins
out
xchg
mov
outs
xchg
imul
pushw
sub
loop
fidiv
sbb
(bad)
ins
cmp
dec
ficom
ret
pop
ins
push
aad
stos
test
cs
ret
xchg
retf
jmp
in
jo
imul
inc
leave
cli
sahf
aam
(bad)
ins
adc
adc
ins
mov
ret
out
xchg
inc
shl
adc
and
loopne
xchg
pop
(bad)
xchg
pop
test
cli
and
push
frstor
nop
inc
sbb
lahf
loopne
sbb
jle
adc
iret
or
push
nop
or
cmp
test
cmp
fcmovu
icebp
outs
push
pusha
ror
mov
rcl
aaa
movs
psubq
es
(bad)
or
test
imul
imul
mov
push
adc
mov
mov
(bad)
gs
mov
bnd
enter
or
sub
sbb
sub
(bad)
(bad)
pop
inc
push
jns
or
push
dec
jl
sbb
cli
sub
add
loope
popf
xchg
adc
push
fdivr
cmp
fistp
sbb
(bad)
lods
mov
lahf
arpl
cmc
fisttp
mov
jmp
inc
adc
cmp
mov
mov
xlat
sahf
dec
mov
lock
mov
pop
cmp
push
imul
inc
test
fist
xchg
(bad)
dec
pop
xor
mov
or
gs
cmp
fs
ficom
xchg
ret
lods
shl
jb
sahf
imul
mov
push
jp
aaa
(bad)
adc
xor
inc
sbb
adc
add
fdiv
and
pop
cdq
imul
push
jge
stc
sub
cmp
push
iret
sub
(bad)
mov
cmps
mov
adc
mov
jnp
and
mov
popa
sub
(bad)
out
mov
mov
imul
add
mov
xor
loope
retf
push
dec
and
adc
ins
jle
push
pop
out
add
push
ja
push
inc
dec
mov
in
sbb
adc
jnp
mov
addr16
dec
cmc
outs
mov
push
sar
mov
jno
pop
xor
(bad)
mov
gs
sub
push
pop
jmp
mov
sbb
adc
mov
arpl
cdq
ficomp
xchg
pop
mov
adc
test
and
mov
les
mov
add
repnz
jmp
lods
adc
ins
and
cmp
stc
inc
inc
cmp
inc
mov
out
pop
xchg
gs
test
dec
mov
cdq
pop
mov
ins
and
inc
or
cmp
mov
xor
sbb
(bad)
bound
stos
adc
sub
pop
shl
call
ja
inc
sub
das
fild
xchg
repnz
push
mov
sahf
mov
(bad)
cmps
fnstsw
mov
test
pusha
rcr
pop
bound
out
adc
test
push
push
(bad)
shr
pusha
push
mov
mov
dec
fisubr
push
inc
call
aaa
or
scas
jmp
and
sbb
sub
ret
stos
sbb
pop
enter
push
sti
pushf
jo
pandn
xchg
dec
cmp
xlat
into
xor
dec
or
in
dec
imul
push
add
adc
and
sub
in
movs
mov
adc
sub
push
bound
(bad)
pop
leave
pop
xchg
sar
jbe
push
int3
std
ss
sbb
shr
mov
add
(bad)
sahf
push
loope
sti
and
sti
add
xchg
add
xchg
cmp
pop
jmp
cmc
mov
mov
repz
push
jp
jmp
xor
pop
jp
outs
aaa
mov
rcl
rol
pop
in
fstp
adc
nop
pop
enter
retf
jge
movs
push
shr
movntps
nop
or
bound
or
mov
jmp
in
in
cmc
div
inc
jle
out
pop
movs
repz
test
arpl
jae
push
mov
jns
add
xchg
jbe
aad
lods
jmp
or
xchg
out
pop
fs
pop
out
call
mov
xor
test
je
scas
mov
aas
dec
ror
fistp
mov
es
repnz
or
ret
mov
add
shl
xchg
data16
dec
inc
ds
xchg
cwde
dec
jmp
outs
inc
dec
jg
imul
sbb
test
xor
mov
mov
into
jecxz
arpl
pop
pushf
cmc
sbb
out
dec
das
sub
and
push
mov
mov
cmp
push
fiadd
push
into
sbb
(bad)
fisubr
push
sbb
pop
hlt
mov
in
push
sbb
aam
or
jns
test
push
aaa
test
jmp
mov
sti
adc
rcl
cwde
outs
xor
mov
stos
jmp
cmp
xor
mov
ficomp
movs
or
or
dec
in
and
sbb
push
out
cwde
and
les
dec
fisttp
fcmovnu
ss
xchg
int
mov
xchg
jne
std
iret
and
or
shl
sub
push
div
sbb
inc
jne
jl
jnp
(bad)
adc
or
popa
scas
jne
lock
mov
enter
pop
fnop
in
adc
int3
(bad)
call
dec
and
push
sbb
cwde
or
pop
movs
sub
xor
scas
jmp
movs
icebp
jae
cmp
xor
xor
cld
int
and
mov
fdiv
in
dec
cmp
jl
sub
xchg
mov
xlat
fs
les
retf
arpl
cmc
add
or
xor
xchg
inc
push
lods
mov
mov
sbb
sub
add
inc
xchg
lods
or
push
mov
mov
sub
fwait
pop
test
mov
loopne
cdq
test
into
stos
imul
hlt
mov
fcmovb
in
loop
test
arpl
test
imul
jbe
mov
dec
lods
sub
cmps
mov
je
mov
in
cdq
ja
pop
adc
adc
rcr
mov
(bad)
bound
and
and
sbb
jmp
adc
out
test
leave
sbb
or
arpl
add
xor
pop
scas
cmp
xlat
mov
rcl
sbb
xor
repz
sub
pushf
daa
dec
mov
rcr
lock
enter
or
sbb
lahf
ret
dec
ins
sbb
lods
sub
push
jnp
mov
neg
adc
push
test
js
outs
pop
inc
xchg
addr16
mov
or
jae
addr16
fs
out
loope
adc
retf
xor
inc
adc
stos
xor
pop
ficomp
test
xchg
jecxz
push
movs
sub
call
(bad)
jnp
xor
dec
push
lods
add
mov
stc
pusha
mov
scas
and
clc
add
mov
sbb
scas
add
mov
xchg
jno
jle
cmp
xchg
pop
dec
lods
jmp
jo
(bad)
outs
out
nop
call
dec
jae
xlat
int
stc
inc
pop
mov
add
mov
pop
(bad)
fisttp
mov
in
push
lock
in
push
or
(bad)
outs
arpl
fisubr
jle
ret
mov
pushf
out
sub
popa
sti
les
ror
ins
cdq
mov
jne
mov
push
pop
xor
adc
mov
jmp
mov
call
xchg
dec
loope
pushf
call
test
ret
and
stos
cmp
(bad)
call
xchg
push
sub
dec
xor
adc
into
stos
aam
rol
fsubr
add
jno
xchg
nop
inc
fild
cs
cmc
gs
cmp
sub
outs
mov
mov
sub
jne
nop
pop
shr
cmp
sahf
adc
fcomp
jmp
repz
bound
nop
add
lock
dec
(bad)
and
aaa
repnz
js
push
dec
sahf
retf
shr
jge
pop
jg
mov
fistp
or
sub
bound
pop
pop
and
dec
movs
cmps
pop
xchg
jbe
xchg
dec
or
loope
jle
out
test
ror
das
test
jle
dec
dec
sub
fs
inc
cmp
iret
mov
pop
cmps
push
push
dec
pop
jecxz
xchg
jge
cdq
pop
cwde
cdq
pop
(bad)
fisttp
mov
cwde
cmp
lahf
xchg
sub
or
or
ror
add
mov
aaa
mov
leave
add
(bad)
test
mov
ficomp
bound
or
out
or
lods
push
cmp
cmp
xchg
pop
retf
jge
sbb
adc
in
movs
mov
xchg
iret
popf
mov
dec
out
or
push
je
shr
test
mov
jle
push
xor
pop
xchg
out
int
xor
mov
pusha
lds
mov
sub
and
add
in
push
cld
xchg
adc
xor
(bad)
mov
inc
push
ins
ret
in
push
pop
or
mov
fstp
sbb
enter
dec
and
jo
dec
xchg
and
dec
mov
or
or
sub
andps
pop
repz
jnp
sahf
pop
inc
(bad)
mov
lods
icebp
adc
xchg
adc
(bad)
aam
fidiv
jge
out
daa
and
add
das
lahf
dec
ret
mov
cmp
dec
popa
ins
in
xor
mov
inc
xor
loop
jo
fist
mov
xchg
movs
imul
popa
pop
dec
inc
pop
jae
xchg
inc
bound
call
pop
cmps
sub
fs
push
mov
adc
je
imul
push
xor
jp
push
push
xor
fadd
stos
test
cmps
(bad)
bound
or
add
cdq
(bad)
ins
stos
xchg
mov
jecxz
dec
ins
push
mov
jns
pushf
mov
dec
pop
dec
sbb
lock
xchg
shl
fs
loop
and
mov
into
mov
jecxz
cmp
dec
sahf
sahf
sub
(bad)
(bad)
mov
and
mov
shl
ja
xor
mov
mov
push
das
pop
(bad)
push
push
or
mov
lock
mov
aad
(bad)
push
jge
jbe
add
les
pop
test
jp
sub
aas
jl
xor
or
loope
push
sar
mov
jb
cs
fcom
in
sbb
cmp
rcr
jns
addr16
das
(bad)
and
xchg
jnp
mul
loope
int
mov
out
je
dec
mov
std
cmps
dec
jl
lahf
mov
mov
mov
mov
out
xor
fcomi
xchg
xchg
xor
popa
mov
mov
or
jmp
and
jo
dec
add
xchg
mov
jmp
xor
loopne
fwait
xchg
pop
std
jl
pop
mov
mov
pop
out
pop
gs
jl
mov
mov
je
bnd
inc
mov
cli
nop
retf
repz
call
jge
sub
cdq
sbb
push
push
clc
pop
add
in
cmps
gs
in
mov
cmp
push
bound
dec
jecxz
outs
icebp
cmp
or
adc
jle
mov
add
fcmovnbe
adc
and
xchg
mov
add
retf
stos
xor
mov
add
aas
mov
lds
repnz
pushf
aaa
imul
jb
(bad)
gs
sahf
ins
jns
aam
outs
add
adc
aas
adc
push
ins
push
add
or
jo
jbe
mov
movs
pushf
shr
imul
fmul
jp
retf
pop
dec
cdq
loop
sti
jl
loopne
and
stos
pop
mov
cmp
repz
call
xor
or
pop
inc
inc
pop
pop
es
jmp
gs
inc
cmp
(bad)
xor
out
mov
and
es
cdq
xchg
or
mov
loopne
out
mov
adc
jbe
xchg
test
and
js
test
push
xchg
mov
push
retf
or
add
call
push
iret
push
xchg
scas
push
jne
lods
add
stc
test
fadd
lahf
pop
jns
in
in
jo
popa
popf
xchg
xor
xchg
mov
cmp
xchg
mov
mov
sahf
pop
or
popf
cmp
dec
jecxz
or
pop
in
int3
cmp
cmc
mov
jns
mov
sbb
in
das
lods
xor
popf
neg
jle
movs
movs
mov
sbb
fdiv
sub
cmps
mov
cmps
or
inc
push
sahf
lea
mov
cmc
cmp
out
clc
bound
push
add
mov
mov
popf
popf
scas
aaa
inc
push
pop
inc
add
cmp
cmp
pushf
call
jecxz
call
inc
push
shl
cmps
pop
stos
out
test
test
adc
lods
out
add
es
jp
sbb
out
inc
adc
jmp
js
pop
sub
xor
inc
pop
dec
sti
adc
shl
ins
jg
xlat
xor
pop
jmp
and
stos
das
stos
or
cmc
xchg
cwde
add
leave
mov
mov
inc
test
or
push
xchg
mov
sbb
add
adc
mov
jecxz
pop
(bad)
movs
push
movs
(bad)
adc
push
mov
and
mov
push
mov
fisttp
jg
out
test
and
adc
in
inc
add
lock
xor
cli
and
(bad)
jno
sbb
ja
dec
cs
mov
dec
ins
mov
out
and
xor
test
and
cmp
cmps
in
nop
gs
in
daa
call
movs
jecxz
add
inc
mov
xor
daa
mov
inc
and
xchg
push
dec
mov
cmp
sub
and
xchg
test
mov
cmp
mov
in
aad
pop
fnsave
lods
js
lds
setnp
sbb
push
imul
adc
call
jo
jg
sbb
sub
(bad)
cmp
mov
sbb
(bad)
in
(bad)
clc
hlt
cmp
out
(bad)
pop
pop
inc
repz
idiv
scas
push
cmp
cmp
out
int
mov
xor
pop
mov
in
test
in
sub
mov
rcr
test
xor
xor
jp
mov
int
ret
jle
retf
sub
mov
lods
fucomip
xchg
loopne
stos
mov
ss
push
dec
int3
fwait
pop
xor
int
xchg
push
push
out
mov
pop
adc
sub
call
jo
jmp
pop
lods
out
sti
inc
out
js
pop
push
and
sub
and
dec
gs
aaa
call
jb
xchg
mov
xor
pop
push
pop
xchg
std
mov
cwde
outs
push
ss
popf
outs
repnz
jns
das
movs
cmp
jle
cmp
bound
retf
pop
mov
ja
and
jp
fdivr
mov
popa
lods
(bad)
js
clc
xchg
in
push
jge
movs
pop
xor
mov
jae
push
add
fdiv
out
in
stc
scas
leave
pop
push
push
inc
dec
pop
xor
fchs
and
pop
xor
mov
mov
loop
std
inc
mov
jbe
push
loop
or
call
push
cmp
fistp
mov
ins
dec
inc
xor
xor
push
mov
inc
ins
xor
xor
pop
in
xor
adc
lods
inc
fstp
lods
pop
leave
lahf
mov
movs
test
out
mov
push
mov
out
xchg
jns
mov
rcr
out
jp
loope
in
add
mov
ret
mov
pop
shl
addr16
fiadd
xchg
push
add
inc
xchg
jnp
fldenv
pop
dec
or
xchg
fidivr
dec
lahf
mov
mov
push
outs
fnstsw
ja
cld
dec
leave
fisttp
in
mov
xchg
rcr
jle
cmps
sbb
movs
out
lods
test
int
cwde
push
xchg
xchg
call
lods
and
pop
or
aam
sbb
adc
jg
inc
aas
ins
xchg
cmps
cdq
dec
stos
cli
inc
mov
jg
pop
jns
jmp
inc
mov
in
sub
(bad)
add
bound
rol
xor
outs
nop
mov
fcomp
les
mov
mov
fs
in
push
mov
aaa
or
js
dec
mov
(bad)
xor
push
repz
cli
shr
jne
adc
add
mov
les
mov
add
call
into
shr
xchg
loope
fwait
sbb
das
add
repz
fwait
lea
mov
dec
add
retf
int
pop
movs
fs
popa
sub
add
pop
push
pop
inc
es
enter
adc
jb
dec
jle
jb
pushf
movs
stc
js
icebp
jge
cs
push
pop
pop
cmp
jb
or
nop
xchg
mov
or
inc
pop
jno
sahf
add
in
(bad)
and
mov
and
in
int3
call
sub
retf
adc
ret
aas
test
xor
cmps
aam
cmp
bound
mov
mov
(bad)
cmp
pop
pop
jnp
ret
out
jmp
jne
inc
mov
rep
js
test
stos
ja
mov
add
dec
cmp
fcom
ss
adc
xor
(bad)
xor
xlat
test
adc
lahf
sub
shl
jmp
jne
cmp
leave
xor
sub
repz
cli
cmp
jge
in
mov
aaa
mov
push
mov
dec
jmp
sub
jne
call
dec
pop
int
mov
hlt
and
jnp
aad
sbb
add
jo
sbb
inc
inc
popf
(bad)
ret
mov
test
mov
push
and
mov
add
das
mov
push
lds
jne
and
(bad)
push
inc
mov
scas
rcl
pop
pop
add
cmp
mov
mov
jnp
in
gs
pop
add
enter
and
fld
lock
xor
or
and
data16
js
or
(bad)
pop
xor
repz
fs
mov
add
in
adc
adc
outs
xor
popf
push
fild
mov
pop
hlt
cmc
enter
inc
pop
and
and
rcr
int
in
sbb
fist
loop
pop
and
sbb
(bad)
or
add
movs
and
xor
xchg
mov
sub
pop
sti
les
fs
loop
int
int3
push
and
popf
push
icebp
cmp
not
dec
out
pop
inc
popf
mov
cmp
repz
nop
cli
leave
cwde
push
sub
lea
ror
or
stc
test
push
mov
xchg
ss
clc
(bad)
js
je
in
enter
stc
xchg
shl
adc
(bad)
sti
adc
mov
call
push
call
sub
jg
mov
sub
sbb
out
xor
mov
addr16
and
sbb
xchg
aas
push
jbe
cmp
js
test
std
mov
ins
push
mov
pop
das
or
les
push
dec
fcom
inc
inc
cmp
push
or
inc
(bad)
add
or
movs
dec
or
dec
ret
int
jno
imul
inc
sub
cmps
in
and
out
sub
cmp
add
call
clc
push
add
mov
fidivr
test
shr
and
jnp
fwait
pop
jmp
xchg
or
dec
sar
add
inc
mov
or
push
arpl
sub
and
lahf
jge
mov
aaa
sahf
sahf
jle
loop
daa
dec
movs
test
scas
inc
jle
je
ja
cmp
xor
mul
sbb
mov
rcr
nop
(bad)
aam
adc
or
mov
sbb
in
cmp
mov
dec
mov
fld
shl
fstp
fild
nop
cmps
(bad)
fcomp
jae
add
jno
pop
int3
dec
jl
jle
and
lds
mov
sbb
loope
aaa
push
push
inc
cwde
dec
das
add
and
aaa
stc
mov
ja
in
ja
sbb
jbe
pop
cmps
movs
call
lea
pushf
push
fcom
mov
ret
pop
movs
stos
mov
and
xchg
mov
leave
sbb
push
and
mov
jbe
in
sub
and
imul
sti
jne
sub
push
test
aaa
loope
std
jbe
rol
push
cmp
pop
aad
mov
sub
leave
mov
add
mov
das
mov
adc
pop
inc
retf
test
frstor
ins
test
(bad)
sbb
call
ret
dec
ret
push
das
stos
jb
aam
pop
mov
aaa
jae
pop
je
push
(bad)
bound
push
sub
scas
pop
fld
repnz
add
and
fwait
jb
adc
mov
push
jmp
mov
ja
shl
or
(bad)
daa
mov
jne
xor
and
gs
push
sbb
push
int3
fcom
inc
inc
pusha
lock
cmp
pop
sub
or
dec
cmp
jge
ret
pop
lods
(bad)
cmp
in
or
lods
or
shl
mov
loop
add
cli
jne
sub
das
aad
sub
das
pop
bound
jecxz
rcr
in
and
popf
popa
xor
mov
push
out
ds
pop
ss
xchg
mov
or
outs
stos
retf
jp
adc
jge
pop
xor
xchg
add
sub
scas
loope
xor
cmp
popf
cmp
push
inc
cs
fisubr
scas
adc
lock
loopne
push
loopne
and
repz
cmps
ds
mov
xchg
mov
mov
pushf
inc
xlat
push
cmps
pop
and
scas
(bad)
(bad)
inc
adc
or
stos
xchg
out
mov
inc
sbb
sub
xchg
inc
les
sar
addr16
jg
int3
mov
in
cmp
cmovl
outs
in
cmp
retf
jmp
retf
(bad)
adc
xchg
mov
mov
loop
(bad)
sahf
or
cmc
sub
gs
cwde
(bad)
stos
leave
sub
mov
xchg
pop
(bad)
outs
sbb
scas
sbb
jbe
mov
dec
inc
(bad)
mov
outs
pop
add
dec
push
xchg
adc
dec
iret
into
dec
cmp
jl
cmp
ins
push
lock
in
fcmovb
(bad)
iret
sub
push
mov
out
sub
ins
jbe
gs
out
hlt
xchg
pop
jns
push
scas
leave
add
sub
mov
enter
sti
mov
dec
fidivr
mul
mov
push
mov
imul
jno
enter
mov
pop
and
sub
cmp
fwait
iret
call
inc
mov
addr16
mov
push
aaa
cmp
loope
dec
cmp
rol
shl
jecxz
js
adc
iret
xchg
out
dec
push
sar
sub
xchg
add
idiv
out
jae
idiv
sbb
mov
mov
inc
ret
ja
clc
leave
ret
sub
push
ins
dec
mov
sbb
mov
retf
iret
in
movs
xchg
jns
sbb
daa
bound
mov
int
shl
jl
shl
int
push
cld
cwde
or
add
cmp
aas
push
and
sub
pop
mov
daa
in
jp
cmp
add
and
in
xor
adc
jns
shr
loopne
mov
imul
stos
(bad)
imul
cdq
sub
adc
imul
sbb
jecxz
std
retf
rol
and
mov
dec
and
xchg
jmp
jecxz
int3
jno
jl
push
adc
adc
mov
shl
sbb
cmp
jge
push
push
leave
ret
cmp
out
dec
hlt
xor
add
test
bound
clc
cmp
ins
test
mov
mov
jne
or
inc
pushf
cmp
popa
pushf
mov
pop
inc
mov
inc
xor
ror
rcr
fs
mov
pop
inc
push
jns
cwde
mov
sub
push
adc
loop
adc
pop
dec
ret
mov
inc
(bad)
aas
adc
mov
pop
clc
cld
fild
ins
repnz
(bad)
pop
(bad)
lock
sub
and
cdq
xor
into
push
cmc
cli
test
adc
or
sub
and
add
imul
test
xchg
mov
sar
mov
pushf
arpl
ret
test
lods
(bad)
loope
lods
or
sub
ins
fistp
jl
push
fldenv
ins
mov
jl
dec
pop
push
xchg
bound
pop
add
aam
jae
ret
xchg
sub
push
out
stos
loopne
cdq
jae
into
mov
repz
repz
dec
(bad)
mov
popa
xor
sbb
push
ds
pop
pop
stc
mov
xlat
adc
ins
adc
xor
(bad)
jge
(bad)
retf
out
xchg
cs
rcr
loopne
aam
in
test
dec
ins
inc
aam
ja
arpl
iret
dec
add
pop
push
call
in
lods
(bad)
sub
adc
pop
dec
dec
fcmovu
pop
cmps
sti
push
mov
and
int3
inc
sub
push
add
jmp
jl
into
(bad)
shl
push
mov
push
ret
fwait
adc
scas
ins
clc
scas
add
push
cmp
or
popa
add
(bad)
push
cmp
sub
sar
or
shr
jno
sbb
pop
xor
mov
pop
and
add
nop
add
mov
sub
pop
xchg
adc
jmp
xchg
mov
jmp
add
aaa
inc
aas
fstp
dec
adc
mov
retf
and
sar
(bad)
call
adc
cld
adc
lods
mov
mov
in
cdq
cwde
and
neg
cmp
sahf
(bad)
popa
jp
dec
fisubr
lock
out
inc
push
pushf
inc
js
lods
inc
mov
in
(bad)
fisubr
mul
xor
cs
inc
jmp
pop
mov
in
jb
pop
aas
jmp
mov
inc
xchg
jne
icebp
or
push
add
fidivr
adc
adc
lds
push
push
cmps
jge
sbb
mov
enter
ja
imul
int
nop
aam
inc
loopne
repnz
mov
mov
ins
idiv
jno
push
dec
add
aad
aam
repz
sub
jge
nop
call
mov
adc
paddusb
mov
inc
inc
cli
sbb
mov
sbb
xor
fisttp
cld
call
adc
mov
in
push
mov
hlt
fs
xor
sub
xlat
repnz
call
push
push
mov
js
jne
aaa
loopne
xor
fdiv
xchg
mov
pop
adc
(bad)
not
loop
mov
lahf
out
push
(bad)
dec
retf
lods
cmps
fdiv
fs
push
jmp
push
lds
hlt
push
sar
push
xchg
(bad)
fsubr
shr
mov
test
add
jno
push
mov
mov
mov
shl
dec
nop
cmp
aam
adc
sti
sbb
add
inc
pop
shr
fcmovnbe
dec
cmp
int
dec
jmp
scas
(bad)
cdq
fdivr
mov
je
adc
xchg
inc
mov
inc
call
xor
or
ins
add
cmp
jno
scas
mov
sbb
cmp
retf
mov
inc
faddp
adc
mov
add
mov
xchg
outs
(bad)
lea
fwait
daa
xchg
lds
movsx
shr
dec
fmul
ins
fsub
mov
repnz
add
mov
sub
cmp
ss
push
and
inc
loope
jns
int3
out
sbb
mov
popf
and
xchg
lock
add
mov
mov
mov
sbb
jl
cld
shl
push
xchg
jecxz
(bad)
rcr
cmp
test
addr16
dec
std
pop
mov
rcr
pusha
test
xor
dec
out
sti
add
jbe
add
cmp
inc
ss
daa
lods
jo
or
add
imul
ss
not
bound
dec
(bad)
xor
pop
sbb
inc
fwait
aad
sub
cmp
test
cmp
jae
call
mov
mov
jno
xchg
mov
int
sub
xchg
(bad)
cli
fiadd
pop
push
or
xor
xor
xchg
xchg
and
xchg
adc
imul
out
icebp
scas
jae
in
or
ret
movs
fiadd
inc
push
rcr
call
jl
neg
inc
cmp
out
ret
xchg
push
or
imul
ficomp
mov
mov
cmps
mov
push
bound
sub
xchg
and
sub
xchg
out
test
mov
mov
adc
test
push
sbb
cli
clc
rcr
pushf
cs
test
xchg
das
js
push
in
jmp
push
xchg
bound
mov
dec
or
cmps
cs
call
outs
call
adc
call
adc
xor
dec
adc
cmp
adc
or
(bad)
lea
inc
inc
(bad)
and
fimul
out
adc
dec
dec
jne
sbb
ret
sub
out
jmp
fcmovnbe
jge
aam
ror
pop
inc
repnz
mov
ficom
outs
int3
or
mov
ins
cmp
xchg
jo
cli
ret
vcomiss
fimul
mov
xor
cmc
pop
jo
std
inc
xchg
stos
loopne
mov
or
mov
loopne
retf
outs
pop
xchg
loope
inc
(bad)
shr
stc
ds
mov
jno
and
mov
xchg
cmc
loope
stos
das
sbb
iret
(bad)
das
cmps
jl
xor
adc
retf
add
bound
mov
imul
jno
xchg
and
(bad)
add
dec
shr
mov
cmp
push
inc
daa
aam
adc
sub
mov
add
rcl
xchg
dec
cmp
daa
sub
fcos
pop
outs
push
jmp
clc
pop
xchg
jge
iret
scas
sub
lock
dec
push
mov
or
(bad)
jo
repnz
loop
sub
cld
(bad)
loopne
call
and
les
pop
jnp
xor
mov
mov
sbb
mov
enter
(bad)
push
mov
pushf
add
es
sbb
jp
out
add
lds
xchg
pushf
push
pusha
sub
pop
cwde
pop
jne
std
lods
cmps
mov
push
mov
aaa
fisttp
std
mov
ret
and
jnp
(bad)
inc
dec
mov
ja
clc
leave
inc
iret
int3
cli
std
xor
cmp
cs
jb
outs
mov
mov
cmp
lea
iret
sub
jns
in
fild
data16
adc
imul
call
dec
dec
cmp
gs
ds
or
mov
ins
push
or
fyl2xp1
aad
outs
stc
retf
mov
push
ins
push
pop
sahf
cld
in
(bad)
add
push
in
pop
jno
div
lods
or
shl
mov
mov
fcomp
call
sbb
xchg
jp
test
aas
add
dec
cmp
clc
inc
push
mov
push
xchg
fisub
cmc
cli
cmp
div
mov
aaa
out
out
in
and
add
mov
imul
xchg
out
daa
xor
lods
mov
jp
fimul
int3
dec
repz
or
pop
cmp
into
stos
mov
(bad)
in
add
adc
test
xchg
or
mov
movs
rcr
js
sub
cmp
mov
stc
inc
repnz
clc
xchg
popa
cli
jbe
pop
add
mov
imul
xchg
mov
movs
mov
aaa
out
leave
(bad)
ins
retf
xchg
adc
aad
movs
pop
add
add
jg
out
mov
mov
adc
retf
sbb
inc
ret
in
ins
and
adc
and
mov
xor
outs
lods
js
int3
push
stos
dec
retf
mov
xor
jno
pop
pop
mov
mov
xchg
jg
adc
nop
out
cld
call
add
pop
pusha
cs
pushf
pop
mov
into
imul
lea
and
mov
imul
fisubr
cdq
mov
dec
cmps
fsub
ss
fcmovu
fbstp
push
pop
daa
mov
xor
mov
imul
int3
outs
push
inc
fild
cwde
or
cdq
and
cmp
sbb
jmp
and
lock
(bad)
inc
aaa
sti
nop
and
into
cs
or
add
dec
test
xlat
adc
jle
div
mov
add
xchg
rcl
mov
push
mov
push
rcr
or
sar
movs
cmove
push
into
ffreep
mov
mov
loop
xchg
xchg
push
xchg
add
div
jne
cmp
pushf
lods
pop
in
loopne
and
scas
shl
stos
pop
adc
repnz
add
jmp
adc
je
cdq
fs
push
add
xchg
daa
daa
and
sub
inc
jp
add
push
cmp
mov
add
rol
adc
in
pop
(bad)
or
rcr
or
mov
and
pop
iret
fdiv
mov
in
or
cdq
shr
enter
hlt
aam
xor
into
nop
sub
xor
loopne
nop
jl
push
std
or
retf
popf
mov
test
pop
shl
sbb
fnstcw
in
mov
or
iret
pop
push
cdq
mov
popa
lea
ds
out
mov
adc
mov
fldenv
js
cmp
nop
mov
mov
lea
adc
int
sbb
int
(bad)
pushf
ja
icebp
mov
jns
dec
sub
fincstp
mov
ss
jle
popa
popa
fld
add
push
sub
adc
jae
inc
jle
add
jb
stc
cs
cwde
cmc
mov
pop
mov
push
mov
xlat
std
sti
cmps
outs
sbb
cmp
fld
call
push
push
leave
cmp
push
sysenter
inc
stos
ret
and
loope
fs
out
std
push
stos
(bad)
out
mov
pop
mov
(bad)
cmps
xchg
xchg
imul
adc
xchg
xor
push
cli
ficomp
not
mov
inc
aad
retf
mov
call
lods
movs
fcomp
test
mov
and
sub
adc
movs
cs
div
jmp
add
jae
aaa
(bad)
lea
fisub
and
cs
mov
add
ret
pop
ret
pushf
mov
les
push
dec
mov
mov
addr16
(bad)
jne
push
sbb
adc
xchg
adc
jnp
mov
adc
xchg
add
pushf
aaa
scas
pop
dec
mov
fadd
push
out
sbb
fs
jbe
sar
bound
push
fisub
jecxz
adc
mov
mov
outs
inc
es
mov
in
sbb
or
xchg
icebp
push
mov
sbb
adc
add
shl
movs
xchg
test
dec
inc
adc
mov
cli
ret
inc
scas
sbb
movs
jno
dec
sbb
xor
mov
mov
jp
out
shl
imul
sbb
les
and
push
retf
js
add
dec
es
std
movzx
push
sbb
(bad)
and
mov
imul
push
ins
fcmovnbe
(bad)
push
aam
add
push
repz
test
arpl
pop
jo
sbb
push
jecxz
jae
and
in
mov
lods
test
cmp
or
sbb
sbb
inc
ds
push
movs
fdiv
xor
(bad)
jbe
les
push
mov
or
pop
jmp
add
dec
xor
in
and
scas
add
in
jo
les
adc
outs
rcr
and
aad
push
or
cmp
push
fld
or
in
pop
or
sbb
cmp
xchg
dec
mov
out
xor
fmul
inc
or
test
mov
mov
mov
sti
pop
(bad)
xor
in
or
neg
push
inc
jmp
call
cdq
shr
mov
jg
add
and
jnp
add
lods
fldcw
(bad)
mov
sbb
xchg
ret
imul
sbb
ss
rol
inc
cld
(bad)
mov
sub
cdq
push
or
stos
xor
mov
sub
dec
and
or
mov
mov
pusha
pop
(bad)
(bad)
imul
xor
cld
data16
aam
in
ins
sub
fld
jecxz
iret
xchg
and
jle
sahf
dec
dec
popf
inc
mov
pop
ins
inc
movs
or
push
test
daa
adc
sbb
xor
(bad)
lods
xchg
jle
xchg
movs
shl
fisub
pop
and
repnz
jecxz
jns
mov
mov
sti
mov
leave
into
fiadd
xchg
fs
ret
movs
std
cdq
mov
nop
lods
dec
mov
push
enter
mov
clc
ins
lods
pop
icebp
sar
sbb
xchg
inc
xchg
inc
(bad)
adc
xor
out
pop
jmp
push
mov
push
mov
mov
daa
in
sbb
sub
and
cmp
xchg
lahf
in
sub
mov
mov
es
mov
inc
xchg
aam
inc
mov
xchg
rol
pop
cdq
and
mov
jg
mov
jge
fs
in
add
bound
gs
(bad)
pop
pop
xor
in
mov
repnz
pop
dec
mov
repnz
cs
mov
ja
cmps
pop
adc
cmp
adc
mov
pop
loop
mov
call
lods
and
jmp
popf
inc
or
mov
jg
mov
inc
push
mov
xor
xchg
cmps
popa
push
mov
or
pop
jae
add
out
xor
push
out
movs
(bad)
cli
out
cmp
xor
(bad)
mov
xor
xlat
cwde
out
je
mov
mov
adc
pop
xor
mov
popa
dec
push
adc
shl
sub
pop
mov
jb
mov
or
movnti
or
or
test
mov
mov
mov
adc
pop
add
push
mov
dec
(bad)
cmp
sub
inc
movs
cmp
inc
xchg
data16
(bad)
repz
fild
mov
dec
(bad)
scas
mov
(bad)
jl
icebp
mov
gs
pushf
jno
sub
test
call
arpl
xchg
ror
xchg
mov
shl
mov
cwde
nop
dec
ret
xchg
mov
mov
mov
xor
bound
fsubr
call
adc
jb
into
xchg
cld
mov
(bad)
int
ss
xchg
mov
fs
shr
enter
push
mov
and
stc
push
mov
iret
xchg
or
sub
adc
adc
rcl
mov
pop
xor
nop
mov
mov
into
out
idiv
push
xlat
addr16
mov
dec
rcr
inc
aad
xor
pop
inc
lahf
jmp
pop
int
sbb
sub
pop
aas
mov
push
dec
movs
retf
mul
and
push
sbb
in
push
ret
test
mov
jb
push
dec
ja
mov
and
icebp
outs
mov
dec
xchg
stc
sub
mov
pop
cdq
fistp
(bad)
out
sub
mov
test
leave
loope
dec
sub
test
sbb
retf
dec
cmp
test
pop
mov
das
sbb
adc
inc
add
xchg
cmp
cdq
and
or
mov
xchg
mov
out
call
push
aam
call
adc
sbb
jb
unpckhps
mov
repnz
sbb
or
or
cmp
pop
mov
inc
cmp
sbb
(bad)
fist
ror
stos
out
add
push
sbb
xor
into
and
lods
adc
mov
xor
add
fs
js
fwait
pusha
in
push
push
es
ins
xchg
xor
adc
jge
shl
sbb
mov
cmps
add
in
imul
inc
cs
inc
in
test
(bad)
in
pop
xor
sub
stos
mov
and
aaa
xchg
jp
cwde
and
mov
aam
adc
pop
jo
cmps
daa
daa
jnp
cmp
outs
adc
jmp
fild
push
mov
ret
movs
and
std
mov
enter
test
ja
pop
inc
push
xor
(bad)
adc
repz
mov
mov
mul
xor
sbb
mov
add
nop
bound
add
mov
call
inc
iret
out
jl
aaa
fnsave
jne
pop
sahf
test
aas
mov
bound
sbb
jl
cmps
sbb
pop
ret
clc
imul
fldcw
xlat
retf
cli
stc
fxtract
push
jecxz
jne
cmp
iret
in
pop
cwde
arpl
xor
sbb
inc
xchg
daa
xchg
cmps
sub
add
dec
dec
or
dec
sub
sbb
inc
or
fstp
jl
adc
dec
hlt
(bad)
sub
call
or
pop
or
xor
(bad)
jmp
fsub
rcl
mov
in
push
sbb
mov
jg
leave
jb
pusha
loope
scas
mov
mov
pusha
cwde
mov
nop
mov
and
sbb
push
enter
mov
pop
(bad)
arpl
push
(bad)
(bad)
jmp
outs
outs
je
inc
sub
or
sub
test
rcr
sbb
ror
mov
sti
dec
mov
retf
repz
pop
fisttp
sbb
cmps
jmp
sahf
mov
aam
push
int3
stos
inc
bound
pop
and
sbb
jp
pusha
inc
dec
int
jge
push
mov
imul
mov
imul
jae
sbb
and
dec
inc
push
out
jl
or
cmc
sbb
iret
test
movs
lahf
ins
inc
xor
mov
cmps
dec
(bad)
(bad)
xor
adc
push
pop
int3
fsub
into
pop
cld
xor
xchg
out
or
into
push
push
xchg
jnp
ja
ss
addr16
fnstenv
mov
push
js
and
mov
jge
repnz
pmaxsw
sbb
mov
imul
mov
xor
ja
mov
and
push
aam
pop
aas
aam
jp
shl
mov
and
sub
loopne
sub
cli
adc
dec
(bad)
ret
data16
pop
je
sbb
call
mov
jo
stos
repz
xor
adc
lock
jno
jge
fsubr
mov
loopne
fld
jmp
div
cli
mov
cmp
inc
out
popf
mov
fwait
xlat
sbb
xchg
xchg
(bad)
lock
jae
fwait
push
xchg
pop
pop
add
dec
lock
sub
frstor
mov
mov
dec
in
jle
mov
lahf
call
jecxz
add
add
cmp
ins
pop
jns
sbb
js
dec
rcr
fwait
leave
enter
pop
and
call
cs
pop
cs
mov
clc
and
mov
call
xor
lods
or
test
mov
mov
into
ret
sbb
push
data16
jl
je
je
or
ins
or
xchg
jnp
pop
jmp
add
mov
cs
fisubr
ins
jnp
inc
and
inc
cmp
mov
inc
or
mov
push
mov
pop
call
shr
sub
aaa
loopne
inc
loop
cld
inc
inc
add
or
sbb
sub
(bad)
dec
scas
lea
cmp
or
repnz
pop
outs
shl
lock
push
pushf
push
xchg
pop
shl
outs
pusha
outs
cwde
repnz
dec
test
push
xchg
xchg
fst
xchg
out
or
push
sub
loopne
xchg
cmp
and
je
call
add
or
xchg
dec
lods
(bad)
loope
in
dec
jnp
inc
icebp
push
and
stc
cwde
ret
xor
and
xchg
cs
add
(bad)
aad
outs
lods
mov
jle
cli
xchg
pusha
sbb
inc
sbb
(bad)
jg
rcl
cmp
leave
in
ret
out
clc
rcl
pop
lea
xchg
or
inc
add
shl
adc
jne
or
jnp
sahf
mov
mov
aaa
xchg
xor
xor
repz
cdq
mov
outs
sbb
out
add
and
mov
push
jmp
xchg
mov
xchg
in
shl
inc
cmp
pop
xor
out
imul
mov
and
in
scas
fiadd
(bad)
xchg
sbb
loope
stos
and
scas
or
cmp
fisttp
out
fimul
icebp
add
ret
or
mov
fdiv
pushf
(bad)
in
inc
test
cdq
adc
outs
jg
cmps
sub
mov
xchg
push
retf
jl
popf
inc
mov
aad
pop
lea
repz
and
add
dec
sbb
sub
dec
pop
adc
into
cli
inc
push
pop
(bad)
rcl
xor
(bad)
cmc
pusha
ret
mov
xor
and
mov
clc
sub
add
cwde
dec
jb
mov
push
stc
mov
jecxz
and
push
sbb
fld
pop
int
imul
jmp
shl
(bad)
sbb
addr16
cld
adc
inc
jo
or
inc
cmp
repnz
(bad)
not
fwait
add
cmp
jae
mov
repnz
pop
xor
stos
stos
sub
repnz
loope
out
call
add
lahf
push
mov
test
jle
sar
add
push
push
or
popf
pop
push
in
cmp
cmps
push
sub
inc
jp
pop
sahf
jbe
push
mov
scas
outs
loopne
mov
pushf
xlat
jge
stos
loope
add
sbb
mov
push
fs
mov
pop
in
mov
cdq
dec
sbb
push
adc
pop
pop
jae
jne
sub
int
popf
rcr
add
fistp
rcr
xchg
push
and
ins
dec
mov
cmp
xchg
sar
shl
mov
int
std
jns
xor
mov
cs
push
stos
xor
lea
mov
jne
add
xchg
hlt
packssdw
dec
xor
ds
push
movs
test
(bad)
repz
mov
(bad)
repz
adc
and
into
ror
cld
mov
xchg
cmp
pop
arpl
xor
or
push
jmp
jbe
push
jg
or
adc
mov
sti
add
mov
fnstcw
test
pop
adc
or
(bad)
(bad)
ret
(bad)
mov
xchg
mov
or
or
fisubr
rol
(bad)
shl
outs
inc
out
ret
imul
adc
sbb
adc
and
ds
sub
push
pop
iret
sbb
pop
inc
xor
fwait
jl
(bad)
adc
pop
xchg
cmps
(bad)
lods
push
dec
into
cwde
clc
aad
dec
in
loopne
pop
mov
cmps
jae
inc
push
pop
cmc
inc
dec
loopne
adc
neg
out
mov
push
cmps
les
mov
add
js
sbb
int3
(bad)
int3
jnp
test
movs
push
call
cmp
test
xlat
and
in
push
add
cli
push
xchg
mov
or
xchg
aaa
push
push
mov
fs
jle
retf
out
cdq
jae
ret
inc
mov
pop
and
iret
das
mov
push
scas
jle
dec
inc
xor
xchg
fsub
mov
fild
into
icebp
add
xchg
fmul
add
mov
jle
jbe
dec
mov
xchg
sbb
jnp
mov
push
pop
movs
cmp
lock
or
adc
enter
mov
and
imul
sub
mov
jl
cdq
test
push
sub
data16
aad
imul
add
fcmovnb
pop
mov
push
int3
mov
xchg
add
inc
addr16
sub
daa
dec
or
sbb
scas
iret
adc
fld
jmp
dec
cmp
pop
pop
xor
jnp
adc
pushf
mov
pop
lds
cmp
cmps
(bad)
pop
cwde
pop
movs
cdq
fucomp
movs
pop
xor
nop
je
shr
xchg
push
cwde
xchg
nop
sub
cmc
addr16
sub
pushf
clc
add
rcr
mov
jp
sub
(bad)
int
xor
in
or
cmps
dec
xchg
and
dec
mov
cmps
pushf
push
push
leave
sar
out
inc
jne
mov
stos
jae
cmp
stos
add
stos
fbstp
lods
xchg
aam
daa
std
in
movs
mov
xchg
aad
into
movs
fiadd
cmc
sub
ins
dec
shr
je
int3
adc
movs
mov
retf
xlat
xor
push
xchg
in
scas
out
aam
xor
mov
jae
les
pop
add
inc
and
rcl
sub
mov
add
or
test
mov
sbb
ins
inc
scas
inc
push
iret
stos
adc
xchg
mov
lea
leave
push
jecxz
pusha
push
fsubr
sub
loope
add
jnp
and
add
cld
mov
test
stos
xchg
mov
jnp
pop
ret
xchg
mov
das
add
and
daa
mov
xor
enter
add
push
pop
out
push
push
arpl
mov
jp
arpl
loopne
jge
fwait
es
je
fisub
jecxz
movs
inc
pushf
les
imul
(bad)
xchg
push
aas
cdq
xchg
or
daa
xor
mov
jg
in
pop
pop
dec
sub
test
jp
loopne
aas
pop
aaa
nop
sub
gs
lock
xor
jle
sub
outs
aaa
js
push
fbstp
pop
sbb
sub
push
pop
(bad)
and
or
fcom
inc
ret
into
rep
jmp
jbe
mov
lods
dec
inc
sti
mov
cli
xchg
mov
mov
cmp
pushf
mov
adc
cdq
add
sub
or
in
lds
shl
fwait
dec
(bad)
push
add
in
gs
xor
jnp
shr
xchg
je
add
aas
sbb
loop
and
and
repz
call
call
outs
cs
pushw
stos
cwde
push
loop
xchg
leave
mov
sub
ja
sbb
repz
test
jmp
(bad)
repnz
dec
cmps
addr16
(bad)
push
in
xchg
inc
jo
cmp
or
xor
cmps
fcomp
and
ins
mov
xor
(bad)
sbb
inc
dec
inc
sahf
movs
mov
nop
es
int
push
pop
adc
(bad)
xchg
ins
jns
imul
les
dec
push
dec
ret
rcr
jne
jmp
(bad)
jmp
jb
adc
sbb
mov
jne
movs
jl
xchg
xchg
(bad)
jmp
mov
frstor
xor
(bad)
outs
loope
dec
add
inc
sbb
xchg
pop
mov
movhps
ror
dec
in
pushf
leave
xchg
inc
mov
icebp
test
loopne
mov
adc
pop
xchg
sub
cmc
imul
in
pop
movs
fucomp
ss
(bad)
in
pop
mov
outs
out
pop
or
adc
repz
push
sbb
push
in
sub
cwde
dec
push
mov
jo
hlt
xchg
and
or
push
or
into
cmp
bound
cld
les
inc
jg
in
stos
adc
inc
dec
adc
xchg
xchg
add
sub
dec
xchg
popf
or
call
cmp
add
mov
test
pop
xchg
pop
fadd
loopne
mov
adc
lds
stos
sbb
into
ins
stos
push
retf
jnp
es
pop
mov
mov
in
sbb
or
cld
and
bnd
pop
push
jo
inc
xchg
test
jbe
mov
or
mov
xchg
aas
push
xchg
ret
repz
stos
aam
xchg
test
sub
jp
test
out
adc
jg
dec
fs
ds
or
jmp
add
loopne
add
icebp
dec
push
push
or
leave
in
ins
int3
into
in
sub
int
fcomp
push
add
xchg
mov
test
loopne
mov
sti
pop
hlt
in
mov
push
sbb
and
xor
out
sub
pusha
mov
stos
xchg
inc
(bad)
iret
out
and
or
pop
fcmovnbe
aad
sub
lods
cmps
inc
inc
int3
ret
test
xor
fwait
xchg
shl
mov
pushf
out
push
or
rcr
ffreep
or
mov
xchg
fnstsw
sbb
rcl
test
and
mov
cmp
xor
xlat
call
xchg
cmc
sbb
test
mov
jne
mov
lock
ss
repz
(bad)
cmp
popa
pop
stc
inc
xchg
movs
aad
add
imul
mov
cmps
push
out
pop
and
out
movs
mov
jmp
and
shr
ss
sub
sub
xor
lea
icebp
push
inc
test
(bad)
ror
pop
inc
xor
dec
retf
mov
or
jg
movs
jns
and
rol
inc
add
jnp
xchg
add
push
ins
loop
cld
jecxz
pop
pop
pop
jle
or
lods
fst
push
adc
mov
jmp
mov
pop
arpl
out
adc
(bad)
lahf
retf
(bad)
or
out
ds
push
call
mov
mov
xor
dec
push
repnz
sbb
mov
sub
enter
xchg
adc
out
aam
mov
kmovw
cmc
sbb
test
loop
pop
sbb
mov
mov
sub
and
adc
mov
cmps
push
jne
ins
inc
jae
cmp
es
jbe
dec
test
cli
cmp
icebp
adc
lahf
mov
jmp
mov
retf
lock
add
and
shl
pop
add
ret
cmp
aaa
pop
dec
lea
aas
mov
js
pop
cmc
out
movs
out
(bad)
jmp
inc
adc
adc
mov
out
mov
adc
inc
and
sbb
fisttp
repnz
xchg
inc
xchg
rcl
jmp
or
test
or
in
stc
imul
je
cmp
add
enter
jo
out
dec
jnp
inc
in
test
outs
push
sti
sbb
mov
mov
or
rcr
jmp
cld
pop
mov
jo
push
cmp
mov
adc
js
push
add
push
fcmovbe
outs
xchg
inc
mov
inc
das
and
push
pop
data16
jg
cmc
and
sbb
test
fbstp
imul
or
les
out
pop
inc
sub
test
dec
out
sbb
inc
add
push
cmp
loope
std
add
inc
lea
adc
cmp
out
and
pop
mov
mov
mov
mov
out
adc
sbb
mov
test
test
mov
cmp
xchg
or
cwde
fnsave
movs
and
scas
push
jmp
xchg
clc
sub
and
ja
icebp
pop
fdiv
stc
pop
cld
pusha
jge
sub
outs
and
mov
ja
rcr
popf
sbb
jmp
or
fs
and
xchg
gs
pop
add
sbb
sub
sahf
adc
(bad)
sbb
imul
push
fsub
or
dec
pop
push
iret
pop
push
popf
fidiv
cmps
adc
or
jnp
cmp
sub
jae
cmp
lods
mov
cli
mov
xchg
aad
into
ror
mov
push
mov
add
mov
in
xchg
mov
inc
push
call
call
je
cli
mov
repz
pop
cmp
les
lahf
mov
pop
mov
or
(bad)
sub
cmp
push
dec
mov
adc
cmc
sbb
adc
test
jg
shl
pop
xchg
jp
in
pop
cmps
stc
shl
mov
inc
dec
(bad)
xor
js
repz
into
xchg
ins
es
mov
xchg
(bad)
push
in
pop
jl
mov
cmp
sahf
sub
pop
xlat
leave
cmp
push
xchg
iret
jno
lock
das
cmp
imul
inc
fisttp
retf
fsubr
dec
push
sub
mov
repz
adc
clc
ror
movs
nop
jle
ror
jge
repz
sbb
pop
movs
jmp
fldcw
loope
scas
in
or
xor
xchg
push
mov
xor
adc
mov
adc
popf
xchg
xchg
nop
mov
cmp
push
cmp
mov
or
cdq
cld
dec
push
sbb
sahf
and
leave
fs
(bad)
xchg
ins
mov
stos
cmp
mov
retf
jne
inc
or
mov
mov
jp
or
push
loop
jae
outs
jmp
fidivr
pop
adc
jp
cli
fisttp
pop
dec
jae
nop
es
push
xchg
out
mov
test
push
fs
pop
not
cwde
cs
sbb
dec
dec
jle
adc
iret
ins
es
pop
pop
test
push
test
cdq
mov
push
cmps
xchg
aas
in
pushf
aad
mov
xchg
lds
fidivr
inc
pop
mov
xor
(bad)
jno
sub
retf
or
mov
into
sti
xor
mov
xchg
sub
ret
cmc
mov
sbb
and
iret
xchg
popf
xchg
xor
mov
jl
ins
sub
es
xor
dec
jge
mov
add
push
and
push
imul
gs
mov
cmp
mov
pop
cmp
(bad)
aas
xor
das
jbe
adc
dec
push
rol
cmp
imul
cdq
sbb
jne
sbb
mov
imul
xlat
inc
mov
stos
out
int
gs
sub
mov
shl
repnz
sub
xchg
jle
push
leave
movs
fs
adc
mov
ins
adc
rol
adc
cwde
neg
add
fcom
jecxz
cmp
cli
and
xor
sub
sub
or
fidiv
mov
mov
shl
out
(bad)
fnsave
mov
cmp
cmp
outs
iret
xor
inc
in
cmp
retf
and
enter
xchg
fcom
mov
inc
push
mov
xchg
jg
push
fcomp
sub
jmp
sub
inc
cmp
xor
(bad)
sbb
movs
xchg
push
jo
fndisi(8087
pop
repnz
sbb
imul
jbe
push
add
adc
cmps
neg
cmp
or
sbb
clc
xlat
bnd
scas
out
inc
xor
fcomp
mov
repz
push
stc
cmp
(bad)
and
and
aam
out
nop
inc
cmc
adc
inc
dec
jp
jmp
mov
inc
pop
or
fnsave
push
and
movs
push
ror
and
mov
add
fcomp
push
cmp
and
fisub
(bad)
aam
sahf
sub
xor
xor
pop
push
cmps
shr
pop
inc
push
inc
les
xchg
sbb
ret
xor
sbb
push
or
cmps
mov
(bad)
mov
ds
mov
adc
dec
inc
inc
loopne
pop
mov
jge
jp
and
adc
dec
pop
jb
mov
cld
and
addr16
sub
jl
push
pop
mov
inc
jp
cmp
lods
sahf
mul
xchg
or
rcl
xchg
outs
sbb
mov
loopne
(bad)
jp
fidivr
test
stos
or
or
inc
int
ds
adc
neg
push
gs
or
and
test
pop
add
mov
arpl
ret
and
push
pop
cmp
stos
cld
and
sbb
jge
mov
out
enter
addr16
xchg
add
sub
(bad)
cmp
mov
mov
mov
push
cmp
pop
jg
adc
scas
sub
fldcw
(bad)
aas
pop
sub
sub
jmp
sahf
dec
test
call
call
imul
ret
sahf
popa
lods
cmp
mov
jle
int
ins
and
mov
adc
lea
nop
pop
in
inc
sti
push
push
or
push
shl
adc
add
mov
rcl
aad
fwait
pop
in
jae
and
jae
cmps
jno
mov
jg
mov
cmp
out
or
add
push
jge
daa
jmp
(bad)
aas
xor
lock
push
xchg
dec
call
ds
rcr
mov
sbb
dec
in
movs
pusha
lock
and
sub
call
mov
fcomp
mov
inc
lods
sbb
lods
rol
(bad)
aas
mov
sub
inc
lds
mov
mov
push
mov
sub
test
pusha
test
add
inc
sbb
hlt
sbb
pop
add
aaa
sub
sahf
es
or
pop
je
mov
mov
or
leave
adc
pop
add
inc
dec
jns
mov
xchg
inc
out
mov
and
ins
ins
inc
and
aad
and
mov
sub
sbb
jp
aam
push
cmp
jecxz
pusha
cmp
enter
and
jmp
add
add
adc
xor
and
push
sbb
mul
(bad)
push
dec
out
retf
mov
lock
retf
test
lods
adc
sbb
dec
jmp
aad
jmp
aas
dec
xchg
div
jae
mov
push
cld
push
push
lahf
jl
and
mov
pop
adc
shl
xchg
imul
int
mov
push
retf
arpl
dec
mov
sbb
xor
movs
(bad)
xchg
cdq
push
dec
jg
xchg
jno
scas
scas
inc
mov
mov
mov
les
inc
xor
sub
jp
jle
cmp
fild
daa
xchg
in
fldcw
das
je
retf
mov
jmp
mov
mov
xor
icebp
pop
jnp
sub
(bad)
or
repnz
faddp
das
mov
add
cmc
cmp
sbb
je
jno
sti
push
push
cmps
or
fs
mov
in
sar
jecxz
loope
cdq
icebp
xchg
xchg
arpl
inc
adc
out
mov
test
aad
cmc
ins
xor
imul
push
jmp
fidivr
fidiv
cmps
loop
xor
mov
lods
pusha
cmps
div
push
les
or
pop
xchg
cmp
adc
jle
add
add
jmp
jbe
mov
inc
enter
cmp
push
loop
test
test
in
add
cmp
pop
mov
ins
sub
mov
cmp
test
dec
sub
pop
mov
les
test
pop
cmps
jp
push
repz
out
pop
inc
adc
out
into
jo
(bad)
out
ds
xor
or
jno
ror
(bad)
mul
sbb
repnz
test
cmps
into
test
add
and
(bad)
mov
retf
jae
push
cmps
mov
mov
xor
inc
mov
or
aaa
data16
dec
loopne
sbb
adc
jbe
mov
scas
lea
xor
push
cmps
mov
jno
jo
jecxz
fld
inc
aaa
repnz
push
pop
int3
mov
mov
dec
and
cmp
aaa
or
retf
xchg
cmp
shr
push
scas
jb
and
push
inc
mov
mov
arpl
mov
push
add
mov
push
sbb
xor
pop
call
imul
or
loope
or
mov
sbb
sahf
jle
mov
cld
jmp
and
jae
mov
stos
dec
xchg
mov
lods
loopne
add
xor
mov
push
xor
add
cmp
jecxz
scas
mov
mov
inc
sbb
cmc
pop
pop
movs
cmp
xchg
jno
movs
popa
imul
mov
sti
dec
rcl
jbe
sbb
(bad)
sbb
adc
mov
inc
stos
and
or
mov
push
jb
mov
(bad)
iret
jne
retf
dec
pop
(bad)
sbb
cmp
outs
xchg
sub
jne
movs
dec
movs
jb
sahf
in
ds
loopne
mov
iret
btr
das
fidiv
cmp
pop
dec
outs
push
mov
dec
pop
or
jl
lock
call
xor
lea
je
ss
mov
mov
push
sub
int
push
pop
push
test
adc
xor
mov
ins
xor
ret
mov
jecxz
xchg
out
jae
sub
int
and
push
xchg
or
scas
cs
lock
jae
aas
cmp
mov
repnz
ins
mov
fidiv
cmp
add
lds
in
out
hlt
shl
mov
push
jmp
and
inc
ret
ret
out
(bad)
daa
adc
lods
shl
dec
fwait
sub
imul
mov
pop
cmp
add
out
pop
hlt
push
inc
rcr
imul
aam
ror
ret
adc
mov
call
js
jae
push
sbb
and
stos
mov
inc
popf
(bad)
out
dec
jb
out
fwait
out
push
lahf
push
jnp
jbe
call
mov
shl
or
xchg
iret
repz
in
int3
cdq
sub
aas
pop
pop
imul
xor
icebp
inc
arpl
aaa
adc
dec
jne
adc
pop
(bad)
and
adc
mov
push
mov
mov
sub
cmp
sub
push
push
iret
mov
cmc
stos
loop
or
xchg
mov
or
repnz
fcomp
adc
jp
fld
cld
(bad)
mov
stos
test
push
ret
(bad)
stos
(bad)
fstp
jl
mov
loop
pop
and
loopne
shl
(bad)
aas
pop
cmp
mov
rcl
pop
xchg
ror
jne
xchg
dec
jo
test
add
outs
mov
mov
ret
enter
repz
pop
cmp
std
adc
fcmovnb
add
frstor
out
(bad)
mov
icebp
sbb
ret
ret
sub
mov
in
sbb
ins
outs
leave
into
jg
mov
inc
sbb
pop
dec
std
lea
or
dec
adc
in
jle
xchg
outs
fucomi
fsubr
pop
mov
std
enter
imul
pop
push
pop
mov
sbb
xchg
fdivr
iret
cwde
neg
mov
sbb
iret
dec
cmp
mov
inc
xor
ss
cli
and
add
imul
loop
xor
push
ret
fs
popa
(bad)
jmp
inc
dec
push
pop
int3
xor
(bad)
scas
xchg
jl
mov
jmp
leave
mov
and
mov
jle
push
xor
ins
fiadd
mov
mov
(bad)
pop
(bad)
push
ins
add
mov
pop
fld
in
mov
and
shl
cwde
mov
jmp
lods
pop
sbb
mov
and
(bad)
cmps
mov
in
push
mulps
pop
xor
ins
cs
xchg
(bad)
sub
mov
push
ret
xor
mov
sub
popa
inc
es
movs
add
pop
jno
clc
add
mov
lock
std
enter
pop
mov
nop
and
dec
xchg
and
dec
dec
inc
int
fcom
jp
mov
shr
add
sbb
aas
jnp
loope
mov
jecxz
mov
out
xor
rcr
scas
stos
daa
outs
das
bswap
sbb
aas
sbb
add
mov
xor
or
(bad)
fwait
js
inc
cmp
stos
ficomp
outs
cmp
xchg
mov
stc
inc
jmp
adc
in
dec
jns
addr16
sub
fnsave
cmp
shr
push
(bad)
lea
xchg
mov
loope
push
mov
stos
imul
mov
pop
test
dec
mov
out
mov
pop
push
dec
repnz
and
lods
adc
adc
stc
sbb
sahf
dec
mov
mov
add
aas
xlat
adc
pop
jb
jns
inc
sbb
fisubr
repz
mov
mov
cmp
fbld
pushf
(bad)
pop
sub
lea
out
push
pop
push
lods
rcl
xchg
inc
popf
je
inc
xchg
cmp
out
test
jecxz
fwait
mov
jnp
sti
jnp
jle
inc
lods
jl
xchg
mov
arpl
ror
sbb
in
or
pop
mov
push
adc
push
mov
sbb
or
loop
es
out
sub
into
shl
mov
enter
aas
mov
aaa
sub
cmp
mov
push
push
push
or
push
jle
xchg
dec
in
stc
repz
pushf
xor
cs
(bad)
cs
sbb
xchg
repnz
dec
or
arpl
movs
popf
daa
adc
pop
add
mov
sub
fisubr
add
sbb
data16
dec
arpl
sbb
enter
pop
jmp
mov
sbb
fisub
fs
jmp
fs
pusha
sub
adc
lea
sar
iret
add
rol
inc
inc
aad
out
or
fistp
or
call
lsl
mov
push
movs
jecxz
ret
mov
das
call
sub
dec
dec
sbb
aaa
xor
or
mov
sub
jl
xchg
inc
in
ins
enter
push
push
xchg
ret
pop
sbb
fsubr
int3
add
mov
mov
clc
mov
lods
fadd
sub
and
mov
adc
dec
jno
cmp
aam
cmps
mov
sahf
mov
gs
cmp
add
fisubr
xchg
(bad)
mov
test
or
mov
call
xchg
adc
ds
mov
pusha
mov
cdq
rol
xlat
std
jno
mov
sub
xor
add
scas
inc
repz
xor
pop
into
je
sub
cmp
aam
dec
push
fsub
dec
shl
xchg
xchg
dec
loop
sbb
adc
dec
pop
mov
stos
push
jle
inc
test
xchg
cmp
xor
loopne
push
sub
mov
fstp
or
scas
das
jge
cmp
mov
or
push
dec
fsubr
(bad)
shr
mov
stos
inc
test
jbe
(bad)
out
sub
inc
sbb
hlt
fiadd
inc
adc
jmp
add
inc
xchg
push
ror
sar
pop
sbb
data16
jnp
addr16
adc
jno
pop
into
xchg
mul
mov
rcl
wrmsr
test
or
hlt
xor
cwde
mov
enter
mov
inc
lds
jp
cmp
add
std
xchg
into
cmp
inc
xor
pop
pop
outs
push
push
mov
mov
mov
repnz
test
jmp
mov
rcl
dec
xlat
cmp
call
mov
ror
pusha
stos
sub
je
enter
inc
jecxz
out
lds
push
fisttp
sub
or
pop
mov
call
sbb
sub
lea
cmp
push
fcmove
(bad)
adc
cmp
outs
pop
stos
push
lock
inc
ins
das
and
cwde
lea
jge
xor
push
test
push
cmps
cmp
mov
test
lock
fisttp
fdivr
adc
popf
out
popa
jmp
outs
inc
jnp
addr16
mov
dec
xchg
xor
inc
and
jp
loopne
fnstenv
xchg
push
inc
aam
in
cmc
push
pop
dec
sub
mov
and
nop
sub
ficom
retf
and
sbb
jno
aam
xchg
cdq
sti
mov
test
inc
sub
hlt
jmp
or
adc
dec
inc
movs
mov
xor
xchg
pushf
mov
and
(bad)
push
loop
push
dec
pop
dec
fbstp
xchg
clc
scas
and
mov
cs
bound
or
(bad)
mov
sub
push
inc
outs
inc
add
mov
int
pop
and
xor
adc
inc
jne
scas
sub
div
dec
jle
sbb
xchg
in
cwde
add
inc
sub
lods
xchg
jecxz
add
and
pop
pusha
push
test
inc
clc
test
sub
mov
aas
cmp
sbb
ds
or
pop
pop
lea
(bad)
push
mov
add
dec
dec
push
xchg
ror
and
inc
dec
test
std
fbld
sub
ror
mov
xor
mov
jl
adc
pop
xchg
push
clc
mov
(bad)
sbb
into
or
xchg
iret
dec
ins
adc
imul
outs
fild
jno
mov
ret
push
mov
es
enter
lea
cdq
ret
xchg
(bad)
movs
hlt
inc
sbb
mov
gs
je
int3
je
xchg
add
loopne
or
dec
movs
pop
popf
aaa
xchg
mov
xor
cmp
cmp
xor
(bad)
pop
xor
addr16
mov
inc
(bad)
sahf
add
xchg
mov
adc
mov
pop
and
ret
mov
das
movs
sub
aas
add
imul
(bad)
jp
hlt
jno
inc
std
movs
das
xor
sub
(bad)
push
cmp
jns
cmps
inc
cld
sub
retf
das
jg
cmp
nop
and
jb
mov
sub
ins
xchg
mov
std
jne
loope
cmp
push
imul
sub
push
pop
dec
sbb
dec
or
fxch
sub
sub
add
scas
pop
ss
push
and
push
test
add
or
add
add
hlt
inc
push
and
(bad)
stos
push
sar
ja
jae
ficomp
imul
push
es
rol
int
leave
arpl
not
sbb
outs
mul
jmp
mov
or
outs
push
loopne
jb
ja
cmp
cmc
inc
jmp
or
mov
nop
pop
pop
pop
mov
cmp
xchg
stc
repnz
jbe
cdq
adc
dec
fmul
xlat
cmc
push
jle
add
dec
pop
jbe
outs
cmc
dec
(bad)
inc
sub
cdq
iret
push
inc
jmp
push
adc
fmul
scas
mov
sbb
mov
lahf
jmp
cmp
and
jnp
ds
aad
cdq
jecxz
xor
push
retf
ror
cmp
test
shl
scas
sub
in
jnp
loop
xor
in
jecxz
or
outs
shl
pop
test
addr16
mov
in
push
fisubr
jmp
mov
pop
sub
dec
outs
jl
sub
in
aam
pop
ss
pop
lock
(bad)
lods
nop
jno
mov
adc
mov
cmc
sbb
sub
cmp
xchg
adc
arpl
outs
sub
jae
lea
cmp
in
sti
add
inc
pop
(bad)
ds
pusha
and
test
loopne
xchg
add
test
mov
(bad)
sub
je
and
ficomp
mov
stc
outs
jae
js
jg
arpl
adc
loopne
sub
out
pop
mov
cmps
mov
sub
movs
mov
neg
shl
adc
xor
inc
push
je
stc
jo
cmp
int
adc
(bad)
aam
and
push
jbe
dec
(bad)
mov
in
fld
retf
retf
retf
call
pop
in
pop
push
push
or
adc
mov
scas
clc
addr16
and
adc
iret
sar
lods
or
loop
lahf
cld
enter
dec
fwait
or
dec
mov
lock
and
leave
imul
and
hlt
into
out
loope
xor
pop
aad
les
add
adc
repz
ror
inc
leave
xchg
leave
jne
data16
push
fstp
mov
retf
stos
fcomp
pop
and
push
jmp
cmp
es
jb
cdq
mov
inc
scas
and
and
lods
in
dec
retf
or
leave
mov
sbb
hlt
lahf
or
or
xchg
jo
jns
ret
arpl
repz
adc
inc
sub
mov
test
lds
stc
iret
ds
jno
loop
pop
mov
scas
shl
dec
inc
pop
shr
push
adc
jo
scas
jne
lahf
lahf
aad
(bad)
nop
outs
aam
jl
cmp
push
mov
xor
xor
ror
sbb
imul
pusha
cmp
leave
cmps
in
push
mov
or
lods
mov
cwde
test
loopne
sub
je
adc
dec
inc
xchg
sub
mov
mov
sub
pop
je
cmp
and
fidiv
inc
(bad)
dec
mov
xchg
adc
in
loopne
shl
in
dec
test
test
or
cmp
ja
xchg
lods
dec
dec
loop
xchg
mov
add
ins
xchg
and
arpl
inc
dec
cmps
sahf
or
(bad)
xlat
shl
cmps
cwde
push
std
or
je
fs
xor
xchg
or
cs
loopne
lods
push
(bad)
popa
jp
daa
jb
jne
leave
mov
sar
or
shl
dec
inc
sub
push
clc
lods
call
cmp
into
movs
popf
sbb
lds
ja
in
mov
outs
cmp
inc
jb
sub
push
shufps
xor
mov
mov
push
adc
and
jnp
or
mov
adc
(bad)
dec
fld
neg
cmp
pop
std
(bad)
pop
sahf
jle
daa
stos
call
cmp
stos
inc
xchg
and
xchg
outs
out
enter
xor
icebp
push
cmps
mov
push
mov
ins
bound
or
fisttp
aas
inc
sbb
mov
inc
mov
push
sub
shr
test
push
fs
add
inc
xchg
jmp
jmp
std
cmp
sbb
(bad)
jmp
fbstp
rcl
out
xchg
outs
xchg
fdiv
cwde
cmp
ins
sub
push
div
out
sar
mov
mov
call
or
sub
enterw
(bad)
jmp
scas
or
push
mov
fcomp
mov
pop
clc
enter
sub
xor
std
std
xor
inc
xchg
and
jmp
stc
test
push
or
xor
fisttp
mov
ffreep
sub
into
sub
cmc
and
pop
lock
adc
add
aas
pop
mov
int3
(bad)
lea
cwde
xor
xchg
mov
dec
sub
loope
mov
adc
push
mov
or
dec
shr
daa
mov
sbb
stos
cs
xor
xor
cwde
xchg
inc
xlat
dec
jne
loopne
addr16
es
icebp
leave
imul
bndstx
dec
(bad)
xchg
rcl
pop
idiv
inc
xchg
ret
lock
dec
or
fisub
or
jbe
jb
and
or
cli
cmps
ficomp
jl
movs
and
mov
stos
(bad)
neg
iret
mov
mov
mov
call
push
sub
movs
mov
mov
movs
mov
movs
push
fisub
sub
popa
push
aaa
mov
add
adc
movs
push
(bad)
mov
lods
retf
enter
xchg
retf
nop
and
push
jge
ss
mov
lds
push
cs
xchg
cmp
ret
cwde
(bad)
lock
add
cmp
enter
call
test
lds
rcl
jne
xchg
fst
leave
cmps
call
(bad)
icebp
sub
int3
or
adc
mov
fwait
int3
imul
loopne
jo
movs
sub
pop
push
mov
add
xchg
jbe
jnp
je
in
fmul
jl
jb
mov
xlat
mov
jmp
sbb
(bad)
outs
fdiv
imul
adc
leave
and
jle
jl
xor
mov
add
mov
inc
add
push
bound
hlt
cmp
adc
mov
or
test
aas
or
hlt
push
sar
sbb
and
pop
xchg
dec
push
mov
ss
pop
dec
cmps
cmc
stos
fcomi
mov
xchg
mov
clc
fild
and
xchg
sub
and
pushf
xor
xchg
loopne
sub
cmp
arpl
add
test
and
jnp
call
scas
lods
out
pop
mov
mov
call
mov
les
rcl
pop
mulps
or
pop
imul
pop
aaa
push
enter
imul
push
int
pop
sbb
(bad)
mov
les
adc
loope
cmc
jmp
adc
gs
fsub
sub
inc
sbb
jg
mov
pop
stos
push
call
sbb
test
inc
outs
adc
fsubr
jg
pop
inc
mov
push
ins
jae
repz
daa
mov
push
test
in
(bad)
stc
xchg
jbe
fild
sti
dec
and
mov
pop
or
cmp
adc
aad
psubw
imul
retf
or
inc
jne
push
xchg
and
aas
add
pop
(bad)
jbe
div
(bad)
pop
sti
repnz
cmc
xor
jl
mov
scas
pop
or
loopne
out
shl
sub
xor
jmp
push
xchg
lock
sbb
and
mov
jns
test
jnp
inc
mov
sub
xor
inc
mov
sahf
aam
add
xchg
into
add
add
or
imul
lahf
adc
and
pop
jbe
mov
mul
xchg
sbb
sti
xchg
(bad)
push
addr16
std
mov
mov
imul
sbb
js
fiadd
xlat
pop
and
dec
mov
cmc
push
adc
and
cmp
mov
or
xchg
test
adc
test
cmp
movs
or
jmp
lahf
xor
sub
icebp
xchg
aas
mov
fucomi
nop
dec
push
fcomp
jbe
sub
push
nop
jl
jb
in
(bad)
mov
sbb
mov
jg
out
in
rol
push
jmp
rol
and
std
pop
rol
rcl
cli
sbb
xchg
xchg
cmp
dec
xchg
shl
sbb
and
dec
lock
retf
scas
js
out
pop
cmp
mov
mov
bound
inc
add
and
cmp
adc
add
loopne
dec
fdivr
push
ud2
ins
mov
idiv
sub
fwait
leave
das
or
pusha
lock
(bad)
test
inc
push
mov
adc
adc
add
mov
pop
or
(bad)
lock
mov
fdivr
inc
dec
mov
mov
xchg
cmp
je
xchg
jp
xor
ja
fxch
xor
fs
shr
arpl
mov
adc
jns
mov
(bad)
retf
cmc
pop
js
ja
shl
jmp
fild
mov
lods
out
sbb
(bad)
and
push
mov
inc
add
jle
xchg
lock
popa
push
cwde
movs
outs
push
lahf
sahf
imul
xor
push
es
sub
mov
test
aas
push
fisttp
adc
shl
or
push
dec
fcomp
sahf
xor
dec
sti
shl
adc
cmp
sbb
call
cld
out
call
cmp
mov
stc
or
xchg
je
(bad)
loopne
mov
jp
ret
dec
stos
aas
cmps
daa
icebp
adc
mov
pop
sub
movs
leave
outs
clc
lock
push
push
push
and
mov
sahf
(bad)
js
cmp
mov
nop
data16
jl
sub
imul
icebp
sbb
fst
(bad)
shr
rol
test
add
ss
add
add
test
popa
sbb
mov
fst
rol
stc
xlat
xor
add
loop
jmp
dec
rcr
jne
dec
ss
sbb
mov
push
daa
popa
inc
add
movs
outs
add
mov
inc
adc
fld
stos
mov
mov
js
movs
retf
pop
dec
and
addr16
call
mov
(bad)
bound
cwde
xchg
inc
and
popf
jbe
sub
repnz
das
adc
inc
shl
lahf
(bad)
enter
sti
imul
pop
mov
retf
sub
xchg
(bad)
data16
xchg
xchg
add
pop
movs
(bad)
sub
adc
(bad)
jge
cmp
sbb
cmp
pushf
ins
int3
sbb
xchg
inc
add
cmps
les
and
retf
cmp
sbb
ja
xchg
fdiv
xor
cld
ins
sbb
jmp
add
sub
sub
data16
stos
inc
in
and
adc
ffree
pop
xchg
movs
stos
dec
pop
mov
and
cmp
mov
adc
jno
dec
jg
sub
mov
(bad)
cmp
sbb
mov
pop
mov
fwait
int3
add
add
shl
movs
mov
outs
cmp
pop
mov
aam
push
mov
inc
mov
push
fs
sub
push
es
xor
cmp
jmp
push
das
jecxz
mov
sahf
mov
mov
mov
or
fsub
jl
movs
inc
in
call
outs
out
in
pusha
(bad)
add
mov
arpl
or
inc
xor
pop
add
xlat
mov
loop
inc
mov
mov
jmp
cs
add
mov
dec
mov
push
push
out
ficomp
xor
mov
push
shr
outs
push
sub
or
aas
add
jmp
or
mov
aas
pop
js
pushf
shl
cmp
cmp
mov
xchg
(bad)
mov
sub
cmp
ds
cmp
adc
mov
sbb
mov
ja
sub
in
loop
cmp
sbb
ins
call
mov
out
inc
xor
ds
shr
aad
cmp
pop
addr16
cmp
and
fnstsw
mov
push
mov
jnp
xor
mov
cmps
ins
mov
retf
cmc
into
adc
and
call
lea
cmp
dec
mov
push
push
fild
movs
xchg
sbb
ins
icebp
fucomp
loope
ret
xor
sbb
sub
fidiv
mov
pop
add
gs
scas
dec
cmc
out
ss
dec
rcl
pop
mov
xor
adc
cmps
nop
retf
adc
xor
ror
xchg
(bad)
movs
lea
test
sbb
jae
adc
inc
cdq
push
mov
mov
ins
sub
jae
fisub
sbb
sub
call
or
xchg
int
or
ss
or
jmp
sbb
out
fisub
inc
rcr
xor
cmp
loope
ret
xchg
xor
inc
mov
or
out
sbb
inc
xor
(bad)
push
cld
das
outs
sub
stc
pop
outs
sbb
mov
mov
lds
inc
pop
repnz
or
in
pop
pop
jns
fwait
(bad)
(bad)
sahf
jp
and
pop
mul
jle
hlt
(bad)
xchg
fwait
pop
jle
test
sub
adc
xor
add
or
es
lods
js
cmp
push
clc
aaa
scas
call
push
test
(bad)
cld
add
fst
sahf
dec
mov
in
push
ja
jmp
sahf
int3
push
ins
mov
jp
lds
jge
loope
push
lods
and
mov
xlat
aam
inc
repnz
inc
out
call
nop
push
lods
fdiv
mov
fs
cmc
inc
mov
pop
repz
adc
(bad)
push
jns
nop
and
(bad)
mov
cmp
aas
(bad)
xchg
cmp
xchg
add
jne
push
mov
cmp
jmp
das
mov
sbb
popa
xchg
shl
push
or
lahf
outs
mov
jp
and
sub
pop
push
inc
rcl
cmp
pop
neg
pop
popf
or
xchg
and
jmp
mov
stc
into
fild
fld
icebp
pushf
imul
aam
fisub
adc
js
retf
jge
fwait
mov
add
fild
lds
mov
shl
fst
pop
out
cmp
aad
inc
data16
loop
pusha
push
ror
fwait
mov
in
lods
enter
or
xchg
or
fstp
aaa
jge
cmp
stos
clc
inc
not
add
ss
pop
pop
daa
add
jge
loope
rcr
xchg
lods
cmp
sbb
cmp
pcmpeqb
mov
bound
adc
cmp
addr16
aad
leave
pop
lods
ja
mov
fwait
retf
lea
jne
stc
arpl
cmp
arpl
clc
jle
or
cdq
repz
push
fsubp
idiv
les
lock
popa
sar
xor
int
pop
and
jecxz
mov
adc
add
or
pop
add
add
inc
scas
cs
sar
jnp
push
cmc
cs
xor
out
push
out
push
mov
pop
(bad)
adc
stc
jl
xor
dec
and
sahf
rcr
mov
aam
daa
std
push
(bad)
(bad)
or
out
ins
das
push
and
sti
cld
mov
sar
xlat
stos
mov
test
(bad)
ficomp
call
pop
jnp
aaa
repnz
inc
xor
pop
loope
arpl
xchg
shl
inc
jns
sbb
in
sti
pop
push
sar
add
fild
jne
and
adc
and
mov
into
sbb
scas
jbe
mov
sub
add
sub
jl
mov
and
jecxz
ftst
(bad)
sti
stos
stos
lds
not
add
mov
fldcw
jne
and
mov
cmp
jp
adc
adc
imul
and
fild
retf
jp
jne
mov
mov
imul
scas
out
arpl
fsubr
test
scas
retf
sahf
mov
xlat
loopne
adc
aam
(bad)
push
bound
in
fmul
les
scas
sbb
pop
lods
test
lods
lock
jae
push
std
adc
test
jb
mov
xchg
aam
sbb
inc
clc
jnp
push
pop
test
imul
sub
les
xor
test
adc
jo
jne
adc
ficom
jge
repz
in
push
cmps
push
nop
aam
ins
out
lods
stos
xor
int3
call
(bad)
pop
lods
sbb
mov
popa
pushf
fdivr
xor
or
sti
push
inc
cwde
movs
ds
loopne
mov
pop
pop
cmp
push
aam
call
adc
jmp
std
ss
mov
mov
mov
add
sub
mov
pop
enter
xor
scas
fidiv
test
and
lahf
and
mov
cwde
adc
in
shr
or
push
sub
or
icebp
xchg
mov
int3
and
out
mov
jg
sub
ret
inc
pop
int3
in
(bad)
fist
cwde
add
lock
in
sbb
ret
jge
cmp
sbb
stc
jnp
inc
(bad)
mov
jbe
je
sbb
sar
repz
dec
jo
push
sbb
shl
in
daa
retf
int
fadd
fdiv
stc
xor
je
jmp
and
popa
mov
add
cmps
cld
cmp
scas
inc
test
(bad)
or
push
cmp
inc
stos
pop
mov
in
sub
repnz
fsub
mov
hlt
retf
inc
jmp
mov
(bad)
out
sbb
icebp
dec
pop
iret
sbb
int3
iret
sbb
push
faddp
test
dec
mov
cmp
ror
jle
fnsave
push
sub
scas
or
sub
push
test
pop
cmp
loope
out
jbe
fsub
add
xor
adc
pop
test
fs
int
nop
sti
cmps
arpl
xor
lods
ins
jge
cmp
pop
div
inc
mov
fsub
jmp
dec
popf
fadd
push
call
cmp
cmp
mov
inc
shl
pushf
xchg
push
cmps
xchg
sahf
mov
call
sub
stos
fldcw
adc
enter
outs
inc
stos
fdivr
outs
fsubr
inc
dec
cmp
ja
movs
or
jl
inc
or
loopne
nop
stc
call
xchg
xor
or
test
push
gs
sub
xor
adc
fimul
aaa
mov
mov
jno
mov
mov
sbb
mov
and
mov
xor
and
in
xlat
loope
mov
popf
or
int3
lea
sub
nop
mov
std
pop
pop
mov
pop
dec
sbb
jge
push
cmp
mov
sbb
dec
mov
inc
inc
arpl
sub
inc
dec
xor
test
dec
arpl
retf
xor
inc
lods
inc
xor
xchg
jp
adc
pusha
icebp
scas
sbb
xchg
add
repz
xchg
mov
(bad)
iret
dec
mov
fimul
mov
xor
lods
test
arpl
test
push
adc
xor
push
test
nop
mov
mov
mov
inc
mov
dec
pop
lea
cmps
inc
mov
push
das
push
jbe
loop
lods
hlt
out
push
mov
push
mov
inc
cmp
cmp
enter
pop
addr16
movs
pop
int
add
adc
cmp
(bad)
data16
inc
or
std
push
sbb
ins
ins
pop
(bad)
jno
pop
scas
stc
xchg
dec
pop
sbb
mov
inc
and
mov
dec
outs
sahf
retf
cmc
add
pop
or
fwait
dec
add
out
mov
xor
xchg
aam
arpl
mov
mov
rcr
xor
or
loop
push
cmovge
sub
std
ds
pushf
fldpi
fst
and
popf
popa
ret
mov
dec
fmul
dec
xlat
ins
mov
daa
pop
mov
inc
inc
mov
js
out
pop
inc
inc
adc
jge
clc
int3
fadd
add
cmp
mov
mov
aaa
xor
sbb
mov
sub
adc
push
push
mov
jle
inc
lods
not
lods
push
movs
shl
outs
dec
push
stos
sbb
test
ds
mov
(bad)
in
jle
jecxz
lods
push
popa
mov
aas
call
dec
dec
add
jge
inc
dec
adc
push
arpl
lahf
outs
push
shl
or
add
call
mov
mov
retf
and
in
jp
xchg
sub
mul
movs
jb
(bad)
xor
cmp
jecxz
mov
popf
imul
push
call
sbb
inc
icebp
test
(bad)
pop
xchg
ret
repnz
jne
jno
aaa
pop
adc
and
leave
inc
arpl
fimul
cmp
dec
adc
loopne
jg
mov
push
dec
and
mov
stos
sti
shl
jne
fidivr
pop
ja
add
test
and
iret
in
inc
in
lahf
jmp
sbb
sti
in
fiadd
or
outs
in
call
(bad)
aad
stos
mov
sub
fwait
in
cmp
popa
movs
sub
push
int3
inc
sbb
loop
ret
das
mov
daa
sbb
and
mov
pop
ss
pop
xchg
jns
dec
idiv
in
aas
lods
or
popa
cmp
cmps
sar
loope
mov
add
inc
and
je
sbb
icebp
adc
leave
sbb
(bad)
stc
lock
cld
jp
xor
rcl
push
sti
into
and
fs
test
dec
and
inc
xchg
rol
and
pop
rol
aaa
mov
xor
dec
ins
mov
push
push
or
cmps
cli
cmc
pop
pop
mov
mov
dec
xchg
mov
dec
mov
dec
repnz
jb
jg
jmp
fldenv
sti
add
pop
mov
sbb
sbb
pop
sbb
lea
ror
push
pop
jl
test
test
jnp
cmps
loop
and
into
push
dec
sbb
lea
jo
nop
and
sbb
sub
adc
pop
lods
jp
mov
sahf
not
in
mov
nop
sbb
fist
in
repz
fdivr
pop
mov
dec
es
cmp
push
pop
dec
je
(bad)
lock
dec
xchg
bound
daa
stos
push
push
sbb
cmp
sahf
add
int3
jne
mov
jge
cli
loop
in
aad
and
aas
test
sbb
sar
dec
mov
xlat
mov
fcmovnu
out
data16
ficom
sar
jne
pop
test
fild
icebp
or
enter
ins
mov
(bad)
jo
push
ror
push
xor
mov
enter
(bad)
pusha
clc
pop
retf
push
sbb
aam
push
xchg
sub
(bad)
dec
push
push
ds
and
mov
sub
pusha
sub
inc
push
or
(bad)
mov
leave
aad
cld
in
movs
sub
mov
loopne
push
xchg
sub
mov
push
or
punpckhbw
dec
mov
cmp
add
inc
dec
sub
(bad)
outs
mov
inc
xchg
mov
or
enter
pop
cmp
pop
inc
cmovge
fdivp
xchg
adc
xor
jl
outs
xchg
aas
or
stc
adc
adc
fs
and
mov
sub
pop
ret
jecxz
shl
ja
sbb
test
xchg
daa
sbb
popa
bound
xlat
inc
push
jge
lds
jl
dec
sbb
ja
jbe
inc
int3
and
aad
cmps
loope
dec
nop
gs
mov
inc
sbb
sub
jnp
out
arpl
pop
sbb
cmps
mov
movs
mov
std
jbe
xor
sbb
shl
shl
out
xchg
push
mov
daa
(bad)
out
cs
fidiv
inc
jmp
push
and
repz
add
fdiv
xchg
and
sti
xor
or
adc
jno
pop
cmps
clc
cmp
test
mov
mov
out
pop
pop
jo
cdq
lea
adc
add
jmp
mov
push
or
(bad)
mov
pop
mov
xchg
mov
pushf
mov
xchg
scas
loope
sub
sub
mov
jno
in
xchg
lods
cmp
mov
shl
sub
pop
sbb
mov
inc
loope
int
pop
dec
jle
and
repz
or
adc
imul
sbb
ret
sbb
rol
add
nop
inc
jl
jns
pop
sar
cmp
mov
shl
shl
xor
retf
fst
ret
push
add
lods
jns
in
dec
mov
loope
enter
cmp
inc
sbb
mov
pop
fimul
mov
xchg
ret
add
sbb
inc
xor
dec
ret
push
push
mov
add
pop
jmp
lods
jae
fdiv
or
bound
stos
into
push
test
xchg
fnstcw
dec
mov
loop
xchg
adc
sbb
or
shl
out
mov
jno
xchg
(bad)
test
add
int
jno
int3
(bad)
loope
or
or
stos
int3
sti
daa
jmp
sbb
stos
rcl
inc
mov
mov
adc
inc
adc
mov
mov
jae
inc
mov
sbb
inc
gs
adc
jbe
mov
adc
jecxz
mov
push
fcmovnu
js
pop
push
enter
mov
je
shl
pop
adc
fwait
ins
pop
cmp
xor
and
xor
jae
xchg
dec
and
ins
cmpps
inc
inc
rcr
pop
sub
in
cdq
inc
dec
(bad)
retf
mov
icebp
int
or
out
adc
xchg
inc
scas
cmp
sub
and
cmp
js
sbb
addr16
loopne
sbb
xchg
lock
repz
(bad)
sbb
jns
sahf
xchg
sub
mov
not
ja
pop
movs
pop
sbb
nop
push
(bad)
mov
fist
sub
jo
sub
mov
add
repz
cld
imul
in
mov
inc
sub
loope
jbe
fbld
cli
es
jbe
xchg
into
jmp
mov
cmp
mov
xor
xlat
ja
xchg
cmp
mov
xor
lock
imul
mov
push
sbb
aad
int3
ds
adc
cdq
prefetch
xor
pop
outs
mov
lods
neg
push
adc
mov
or
lahf
pop
mov
fisub
jae
xor
fnsetpm(287
push
scas
cmp
pop
dec
pop
outs
mov
inc
mov
jmp
adc
test
dec
push
inc
arpl
imul
lds
fs
push
push
mov
push
int3
cmps
dec
push
mov
adc
mov
mov
vpshufd
mov
jmp
mov
icebp
sub
jae
leave
jmp
or
mov
inc
push
mov
adc
mov
xchg
push
and
add
inc
ror
jne
cmp
inc
shl
cmps
repz
lea
xlat
push
std
sub
sub
rol
xchg
sbb
inc
dec
mov
mov
adc
and
test
fcmovnbe
test
and
mov
sbb
out
imul
jmp
in
in
pop
jmp
je
and
jl
retf
ret
xchg
shl
cdq
test
ret
mov
xor
mov
mov
and
arpl
test
adc
clc
in
pushf
xchg
add
push
fisubr
cmps
xor
jmp
xor
add
(bad)
jg
lods
(bad)
test
and
cmc
test
dec
inc
mov
icebp
stos
imul
ror
adc
test
jmp
xor
out
cmp
test
fild
pop
dec
add
loopne
mov
add
jae
fnstsw
test
dec
loopne
mov
inc
cmc
(bad)
mov
mov
enter
adc
retf
jge
sub
loopne
ja
inc
pop
jb
sbb
fst
xor
lds
dec
cli
daa
mov
sar
mov
xchg
mov
lods
jg
lea
jo
rcr
outs
test
push
push
pop
push
ja
mov
or
dec
mov
sahf
(bad)
cmps
add
mov
lods
repnz
call
sar
xchg
mov
xchg
ret
retf
pop
hlt
sub
sbb
mov
das
ds
jle
push
xor
pop
adc
cmps
fmul
(bad)
push
adc
pop
jno
adc
push
mov
mov
cmc
rol
dec
mov
cdq
mov
mov
enter
push
mov
lahf
fist
adc
scas
scas
adc
inc
bound
bound
in
inc
sbb
jbe
mov
cmp
cmp
pop
xor
lds
outs
mov
and
jae
mov
pop
xchg
adc
lods
xor
ret
mov
sbb
mov
dec
mov
adc
outs
push
aam
aad
and
add
xor
lea
and
addr16
inc
sbb
dec
hlt
test
loope
mov
jecxz
cld
cmps
push
fild
outs
or
fcomip
popf
cmp
adc
mov
xchg
stc
(bad)
xor
mov
hlt
lock
push
mov
sbb
xor
movs
xchg
scas
push
out
(bad)
repz
or
sbb
shl
aas
int3
push
data16
lahf
mov
cmp
call
mov
mov
pop
add
jns
lock
pop
lahf
lahf
add
cmp
and
test
mov
arpl
pop
mov
mov
loop
sbb
call
pop
xor
pushf
int
ss
push
in
pushf
stos
(bad)
repz
lods
sbb
and
mov
(bad)
js
stc
sub
mov
adc
push
add
ja
cmc
pop
scas
jo
je
cmp
mov
inc
out
or
xor
das
xchg
add
imul
stc
pop
aad
mov
cli
add
fadd
cmps
in
sub
push
rep
es
popf
xlat
adc
es
es
mov
es
inc
cmps
cmc
loope
pop
inc
jle
outs
je
mov
sub
in
pop
sub
xchg
sbb
xchg
dec
push
(bad)
pop
mov
shl
adc
ins
fdiv
xor
pop
sbb
ret
out
int
ins
rcl
and
fdivr
pop
add
das
mov
cdq
push
rcl
mov
and
lock
xchg
imul
stos
cmps
and
std
sbb
mov
int
js
add
(bad)
sbb
stos
sub
fist
inc
dec
aam
jp
and
push
sub
jl
push
hlt
dec
adc
inc
push
pusha
arpl
loopne
rcr
adc
pop
push
clc
outs
inc
push
cdq
xchg
mov
mov
mov
mov
cli
push
out
lahf
sub
cmp
pop
scas
out
idiv
adc
pop
fs
mov
rcr
(bad)
mov
fst
add
jae
fld
adc
jecxz
xchg
and
push
dec
fmul
js
dec
pusha
sub
xchg
push
mov
fsub
push
dec
retf
cmps
xor
iret
into
push
jo
lea
int
push
or
movs
pop
and
rcl
sbb
and
mov
adc
mov
cmp
mov
push
jo
jecxz
adc
adc
lock
lds
sahf
call
mov
mov
push
xchg
ss
int3
add
pushf
nop
mov
retf
scas
outs
(bad)
adc
push
mov
call
retf
xchg
imul
cs
or
leave
mov
loop
sbb
mov
mov
mov
mov
ja
jo
jb
dec
mov
ins
cmp
fisttp
push
mov
call
sbb
jne
add
sub
imul
cmc
sub
lea
mov
in
mov
call
inc
xor
aaa
xchg
sub
(bad)
jecxz
mov
data16
sub
test
test
inc
add
inc
push
(bad)
adc
es
cli
cs
hlt
xor
stos
loop
(bad)
and
mov
repz
mov
mov
out
jg
cdq
mov
inc
cmps
call
je
jl
xchg
ja
xchg
push
mov
cmp
clc
add
xor
mov
(bad)
leave
in
outs
jo
mov
sub
aam
cmps
push
outs
aaa
sbb
add
(bad)
mov
ins
push
add
jp
cmc
rcl
ret
lea
loopne
xchg
jno
cmp
pop
nop
cmps
or
pop
imul
or
cmp
aam
xchg
push
fsub
(bad)
data16
rcl
xor
push
add
(bad)
int3
add
cmp
shr
les
retf
arpl
xchg
adc
scas
mov
mov
test
push
jge
sub
or
ins
xor
(bad)
aaa
push
mov
or
xor
xchg
xor
aad
cmp
push
xor
add
addr16
scas
(bad)
xor
xchg
das
popa
mov
fild
jo
sub
jg
pop
call
dec
fsub
sbb
in
out
and
(bad)
push
retf
push
lods
jmp
xor
mov
pop
fnsetpm(287
jne
fwait
outs
push
jo
and
mul
xor
and
push
loopne
mov
aad
pop
mov
push
xlat
adc
pop
add
push
mov
add
loop
jge
jl
int
daa
cmps
xchg
inc
jle
mov
aam
loopne
stos
sub
(bad)
lock
dec
xchg
fs
ret
xchg
mov
int
mov
in
push
and
sbb
mov
movs
imul
jg
(bad)
sub
push
ins
ret
jle
add
mov
daa
and
cmc
xlat
iret
dec
and
push
and
jno
bswap
sbb
rcr
lock
ins
and
dec
out
cmps
jecxz
push
sub
pop
idiv
xor
fbld
lea
adc
test
jae
or
xchg
and
int
inc
retf
mov
inc
jne
hlt
rdseed
xchg
add
sub
push
fcmovbe
data16
es
aad
xor
out
movs
add
and
jbe
mov
imul
mov
aaa
dec
neg
scas
ret
adc
pop
call
sbb
cmps
cmps
test
cmp
jbe
xchg
retf
aam
inc
aas
iret
stc
shl
pop
rcl
les
pop
into
cmp
dec
shr
aaa
mov
push
xor
add
das
xchg
retf
mov
mov
xor
inc
call
fucomp
aas
adc
inc
cmp
mov
push
retf
xchg
js
lods
pop
jns
pop
loopne
pop
adc
in
aad
test
(bad)
loope
and
in
into
jmp
dec
push
xor
pop
sub
loope
stos
xor
mov
add
and
and
dec
test
push
scas
out
jmp
cmp
mov
aad
ja
sub
aas
test
inc
stc
addr16
push
stos
or
or
mov
push
arpl
or
hlt
mov
aas
and
retf
and
add
pop
scas
cmp
jmp
int3
sbb
sahf
inc
(bad)
jge
and
xchg
dec
sbb
in
pop
shr
xchg
and
add
pop
movs
xor
mov
ficomp
push
and
into
xor
ret
jg
push
add
mov
jecxz
jbe
dec
pop
and
or
jbe
js
cld
xchg
cmp
rol
sub
(bad)
jmp
mov
xchg
iret
push
jne
test
repnz
push
out
xchg
sbb
dec
std
mov
cdq
xor
aas
out
cdq
inc
movs
aaa
lock
in
jg
push
lods
xchg
xchg
imul
push
pop
xor
cmps
jecxz
mov
movs
cwde
xchg
mov
setb
cmc
mov
fnstenv
dec
arpl
inc
pop
or
test
les
xchg
xchg
push
fs
add
dec
std
sub
imul
es
test
push
int
movs
popf
dec
pusha
dec
inc
rcl
in
and
xor
iret
stc
cdq
outs
and
imul
or
sti
sahf
(bad)
shr
add
cmp
mul
cmp
out
repz
(bad)
jl
jge
or
outs
rcr
ins
sbb
xor
ins
add
xor
ins
mov
push
dec
push
cli
and
sub
in
sahf
push
sbb
mov
loop
xchg
out
out
call
lea
call
xor
ret
sbb
push
fcom
pop
test
hlt
mov
repnz
scas
cmp
lds
dec
stos
cmc
jb
mul
cmp
or
mov
push
push
push
cmp
icebp
dec
push
pop
cmps
mov
loopne
fdivr
xor
ret
mov
mov
(bad)
loop
lods
mov
les
mov
je
fistp
mov
in
xchg
fwait
mov
sbb
aaa
mov
fwait
adc
ret
test
pop
das
xchg
lahf
dec
push
scas
movs
jb
cmp
pop
stos
(bad)
mov
push
lods
(bad)
into
icebp
dec
retf
mov
retf
and
stc
in
pop
mov
add
or
mov
fst
cli
mov
sbb
test
push
xchg
sub
je
pop
cmp
push
mov
push
add
pop
lds
xchg
mov
mov
ins
lods
push
imul
jecxz
cmp
push
pop
mov
cmc
fistp
fsub
fld
(bad)
mov
out
and
inc
(bad)
mov
mov
sahf
sub
dec
mov
mov
movs
aaa
repz
cmp
xchg
cmp
cmps
sbb
sub
cmp
fdivr
mov
add
push
cmp
int
add
inc
xor
sahf
stos
pop
retf
daa
(bad)
inc
popa
sub
sub
pop
ss
or
mov
add
inc
inc
das
(bad)
repnz
sbb
loope
cs
retf
into
aad
push
es
xor
push
mov
adc
add
adc
xor
fisttp
xor
or
ret
pop
icebp
jb
cld
mov
fmul
mov
or
mov
inc
xlat
sbb
fs
out
sbb
mov
pusha
lock
pop
cmp
cld
mov
fs
sub
iret
dec
sub
fwait
push
cwde
aaa
ror
and
lock
push
les
bound
movs
lods
imul
shl
lods
mov
cld
and
sti
jb
dec
adc
sbb
jg
and
test
imul
mov
pushf
in
mov
mov
xchg
mov
mov
cmp
push
shl
push
adc
movs
cmp
inc
test
mov
push
dec
aam
sbb
pop
push
loop
push
push
mov
ja
shl
cmp
mov
add
dec
xor
int
aas
out
add
(bad)
mov
or
iret
mov
sbb
push
jno
in
xchg
mov
ss
in
mov
and
repnz
retf
popf
add
loop
out
mov
or
std
stos
xchg
add
in
fild
add
pop
add
fdivr
ins
(bad)
(bad)
mov
aas
out
and
ret
shr
mov
popf
js
popf
test
jns
sbb
pop
dec
xor
rcl
mov
push
fmul
clc
xor
cmp
cdq
imul
mov
imul
mov
mov
mov
dec
mov
pop
aad
ret
xchg
or
fisub
xadd
mov
push
lds
in
fidivr
push
inc
jno
xchg
add
mov
dec
pop
jb
movs
mov
mov
(bad)
lahf
aad
retf
xchg
ins
mov
sub
jp
cdq
ds
mov
push
cli
xchg
cmp
pop
test
mov
sub
std
add
add
call
push
gs
push
sub
in
push
ret
movs
sbb
dec
mov
xor
das
mov
in
xchg
inc
cmp
xor
adc
jl
mov
mov
mov
mov
xor
(bad)
adc
add
jp
pmulhw
dec
fwait
rol
mov
mov
xor
repnz
repnz
or
lock
mov
add
jmp
sbb
pushf
clc
pop
es
(bad)
xor
xor
int
mov
scas
xor
mov
fadd
sbb
aad
push
adc
push
mov
imul
and
push
outs
fild
sbb
movs
xor
cmp
fistp
jmp
or
xchg
or
cmp
into
jmp
shr
fcom
or
rcl
fistp
dec
daa
cmp
stc
push
mov
sbb
push
dec
mov
aad
in
lods
fwait
ror
jnp
test
fistp
and
jmp
bound
dec
and
adc
inc
mov
cmp
pop
sti
es
scas
fstp
sub
lock
mov
movs
(bad)
mov
pop
mov
xchg
call
sbb
pop
nop
adc
mov
or
and
add
fxch
jp
dec
imul
shr
dec
fdiv
bound
nop
xchg
and
ret
movs
adc
xor
(bad)
mov
cmp
or
inc
nop
popa
and
mov
add
mov
aam
retf
sub
mov
lea
jecxz
push
repnz
jmp
sub
mov
jae
add
xor
xor
jg
push
push
adc
mov
(bad)
push
or
pop
dec
dec
push
xchg
push
cwde
xchg
xchg
cmp
stos
test
or
test
arpl
cmps
xchg
lds
mov
retf
inc
or
out
xchg
and
ss
sbb
pop
stos
ror
leave
lahf
push
fptan
fsubr
cmp
mov
pmulhuw
popf
xor
fadd
mov
(bad)
jmp
cmp
add
cs
aam
lds
ins
or
dec
fidivr
hlt
sbb
cmp
push
or
mov
sar
pusha
adc
out
adc
movs
leave
cmp
mov
(bad)
ja
fadd
call
dec
add
mov
dec
sahf
movs
out
xor
jmp
mov
lock
sub
adc
mov
inc
out
mov
push
ds
scas
mov
mov
mov
test
icebp
or
and
adc
gs
loopne
js
and
out
mov
not
fcom
in
jmp
loop
mov
daa
inc
test
mov
pop
push
jnp
daa
icebp
maxps
sbb
sbb
add
in
inc
xor
push
or
cmp
outs
bound
enter
daa
shr
in
pop
jae
icebp
fucomip
aam
test
popa
test
pop
sbb
pusha
les
nop
mov
out
daa
scas
scas
jb
and
rcr
in
xor
fsub
repz
add
mov
mov
or
lahf
call
and
aam
pop
into
fst
mov
pushf
sbb
fild
ret
jae
pop
int3
loope
adc
out
inc
int3
push
ins
push
(bad)
pop
jecxz
lds
jb
out
inc
aas
mov
je
in
mov
sub
add
js
mov
adc
mov
push
mov
push
xchg
add
retf
dec
xor
sbb
out
or
mov
push
cmps
pushf
mov
mov
fcomp
pop
push
jge
(bad)
js
(bad)
int
shl
xor
pop
xor
sub
imul
sti
push
rol
cmc
xchg
retf
(bad)
jge
cwde
nop
fsubr
sub
mov
pop
(bad)
inc
outs
data16
and
test
ja
popa
in
and
push
pop
out
in
hlt
push
lds
pushf
bnd
sbb
mul
out
outs
shr
xor
rcr
adc
mov
ret
inc
das
cmps
pusha
mov
popf
sbb
bound
or
mov
mov
add
cdq
mov
leave
adc
mov
arpl
xor
mov
adc
fsubr
sbb
add
cmp
push
sti
les
lds
push
mov
mov
out
out
je
loope
xor
ja
arpl
(bad)
(bad)
jp
push
repz
lds
frstor
in
adc
mov
inc
mov
cmp
or
into
cmps
dec
mov
call
out
jb
xchg
(bad)
aaa
mul
dec
add
inc
sti
sbb
aas
add
mov
inc
lahf
hlt
sbb
scas
out
pop
out
mov
popa
pop
xchg
add
stos
repnz
daa
iret
and
fwait
(bad)
mov
and
xchg
cmp
aas
jnp
and
movs
xchg
and
cmp
jl
jmp
cdq
push
adc
and
cs
inc
adc
xchg
test
or
into
xchg
cwde
stc
out
imul
xchg
pop
inc
dec
xor
adc
(bad)
mov
retf
into
test
stos
stos
inc
pop
add
xchg
leave
imul
shl
popf
ret
out
loope
(bad)
shr
mov
fst
push
movs
stc
jl
cld
mov
xor
fcom
adc
pop
jge
enter
retf
xchg
js
sub
jae
call
stos
fwait
into
and
gs
push
and
jg
push
push
cmps
and
cmp
mov
ja
stc
xchg
out
ret
fadd
aad
scas
mov
xchg
cli
daa
stos
cwde
push
dec
or
sub
jmp
pop
jl
pop
mov
imul
cli
iret
sub
(bad)
je
inc
push
mov
mov
fsub
(bad)
cmp
add
(bad)
je
mov
cli
push
fsubr
inc
pop
cmc
cmps
xchg
jecxz
push
loope
push
fcomp
xor
dec
push
rcr
xchg
popf
jp
sbb
fdiv
sti
inc
xlat
(bad)
dec
cdq
je
sub
hlt
sahf
xor
dec
jne
jb
shl
sbb
mov
push
adc
xor
adc
and
out
mov
sahf
imul
mov
js
ret
jecxz
xor
ds
mov
jne
pop
ret
mov
mov
mov
cs
sbb
adc
cdq
cmp
outs
lds
es
mov
xchg
fstp
fbld
push
pop
or
loope
and
shr
pushf
retf
cmp
and
movups
xor
mov
test
(bad)
aad
pop
jle
arpl
movs
ins
mov
sti
test
outs
xchg
lahf
push
pop
jmp
inc
pop
imul
(bad)
bnd
dec
push
mov
hlt
popa
ffreep
adc
frstor
fstp
gs
stos
mov
(bad)
(bad)
jne
jne
cmp
or
mov
cmp
or
add
jo
ror
mov
aam
lods
outs
rcr
sub
push
jmp
(bad)
lock
inc
out
popa
(bad)
and
jg
imul
pop
cdq
mov
add
ja
in
cmp
fild
push
cmps
add
jae
stos
mov
pusha
pop
ins
add
inc
jne
fs
aam
aas
sub
mov
and
push
or
sbb
push
and
pop
jne
mov
mov
push
and
repz
jmp
mov
or
sub
inc
sub
push
enter
(bad)
fcmovnb
loop
movs
cmp
and
sub
(bad)
cmp
inc
adc
jne
jbe
mov
sbb
outs
neg
int
ins
in
add
lods
repnz
push
cwde
cld
add
imul
shl
push
add
arpl
xchg
je
jecxz
inc
cmp
(bad)
mov
out
jne
jle
lods
push
push
scas
jbe
into
scas
stos
ss
or
icebp
test
fcomp
xchg
arpl
movs
jmp
rcr
lock
push
not
or
mov
int3
or
mov
xlat
stos
daa
popa
cld
jae
jo
ja
cmps
cli
sbb
imul
cwde
imul
out
mov
dec
inc
call
sbb
xchg
mov
cmp
jecxz
cmps
or
stos
data16
int3
inc
inc
outs
or
js
iret
jle
add
call
mov
sbb
out
fistp
pcmpeqb
adc
sbb
ins
adc
mov
ins
add
test
mov
pusha
in
xlat
fs
jne
dec
in
jp
add
ss
out
xchg
inc
out
and
(bad)
xor
mov
arpl
inc
dec
fucomi
xor
dec
test
adc
xchg
div
repnz
adc
test
mov
jno
jle
jnp
das
mov
xlat
rol
fisttp
dec
shr
sbb
arpl
rcl
outs
(bad)
arpl
mov
(bad)
dec
out
inc
in
cmp
and
data16
jae
cmp
retf
sub
pop
mov
sub
(bad)
arpl
cmp
sbb
dec
add
mov
xor
cmp
out
sbb
mov
inc
sub
mov
xchg
xor
mov
xchg
loope
or
pop
gs
lock
std
int3
ror
xchg
ret
push
in
ret
mov
aam
fsubr
lea
mov
jb
mov
dec
mov
add
xchg
jno
fxch
sub
cmp
push
xchg
sub
inc
out
and
sub
mov
inc
adc
mov
ret
mov
push
cmp
mov
push
adc
add
stos
adc
(bad)
jo
(bad)
call
inc
lods
fisubr
lahf
imul
int3
sub
mov
xor
push
jg
push
adc
bound
inc
not
pop
mov
rcl
aam
dec
jnp
dec
fnstsw
jmp
mov
cmp
sbb
pop
sahf
and
pop
or
call
cld
pop
mov
das
cmp
cwde
xchg
cs
adc
icebp
ss
es
cmp
push
stc
shl
adc
arpl
jno
mov
iret
cdq
xor
xchg
and
push
mov
cdq
arpl
mov
mov
mov
jno
cmp
jmp
jg
mov
push
jmp
sbb
pushf
repz
dec
scas
outs
loope
dec
dec
mov
ds
pop
jge
sahf
push
aas
ds
fs
push
lea
xchg
push
pop
jo
add
jb
mov
inc
pop
inc
mov
fwait
std
lods
adc
inc
enter
jle
pop
mov
movs
lds
cmp
jge
cdq
loop
jl
mov
cmp
mov
cmp
jbe
push
or
mov
mov
movs
jecxz
ficom
pop
retf
addr16
(bad)
fldcw
xor
test
mov
mov
pop
popa
or
mov
xor
iret
jg
daa
int
ins
lods
stos
fnstsw
cmp
push
mov
xor
cmp
js
iret
jge
test
test
dec
cwde
cmp
sbb
dec
sub
aaa
out
jge
inc
sub
inc
call
sbb
pop
retf
mov
push
xchg
inc
aaa
movs
jg
mov
(bad)
fstp
xor
pusha
push
mov
les
xor
xor
inc
xchg
mov
scas
fst
leave
xor
jge
sbb
fsubr
xchg
loop
mov
xchg
mov
pop
(bad)
fcmovb
xchg
scas
(bad)
mov
pop
or
cli
dec
ja
lds
jecxz
or
mov
pop
ret
aaa
fist
or
and
jb
scas
pop
jae
mov
hlt
mov
sti
xchg
pop
mov
or
stos
jne
jge
adc
(bad)
pop
pop
ret
adc
push
in
xor
mov
out
and
add
push
adc
das
adc
pop
mov
stos
or
sar
out
(bad)
mov
popa
ret
fmul
xchg
repz
pop
push
stos
push
out
dec
cmp
sar
xchg
in
popa
mov
add
fsubr
jb
mov
(bad)
adc
stc
imul
test
push
outs
xchg
lods
push
add
push
or
xchg
xchg
and
(bad)
cs
mov
aas
pop
pusha
jmp
retf
scas
dec
push
inc
movs
arpl
ror
dec
(bad)
aad
sbb
ds
sub
inc
mov
clc
sbb
mov
icebp
mov
jbe
pop
xchg
jne
std
mov
mov
js
mov
jle
dec
data16
jno
mov
jp
jmp
lock
and
mov
retf
in
int3
or
pop
sub
dec
xor
addr16
pusha
jno
lock
call
add
in
pop
jmp
fwait
dec
inc
das
mov
mov
lea
xor
jbe
sub
mov
adc
in
inc
jb
sub
cmp
inc
pushf
jne
mov
xlat
bound
into
add
aas
aad
fcomp
push
adc
push
cs
clc
shl
out
bound
jg
stos
and
ficom
push
outs
add
enter
jnp
data16
not
ficom
(bad)
mov
imul
es
push
or
jle
in
pop
sub
push
jmp
xor
jge
ss
add
mov
jecxz
dec
scas
inc
int
mov
cmp
mov
cmp
int
push
push
(bad)
cld
out
fild
mov
mov
push
js
pop
fld
dec
dec
jae
dec
outs
pop
loopne
js
outs
dec
int3
and
jns
cwde
cmp
jnp
pop
cld
ins
inc
in
gs
mov
cmps
inc
lock
out
fwait
xchg
clc
sahf
imul
sbb
jmp
mov
int3
inc
mov
inc
add
imul
adc
sbb
mov
jp
dec
into
cs
mov
jns
popf
int3
enter
dec
dec
xor
ret
bound
and
mov
cld
lds
push
or
stos
jb
sbb
sub
pop
popa
sub
xor
rdtsc
xlat
sbb
inc
ror
idiv
xor
out
mov
mov
arpl
or
jnp
out
pop
mov
mov
adc
xchg
into
movs
outs
sbb
sub
inc
pop
nop
inc
inc
add
ucomiss
sbb
add
or
cdq
movs
or
cmp
add
sar
dec
add
arpl
pusha
mov
sub
test
pop
rcl
pop
idiv
sbb
mov
stc
push
(bad)
fstp
fisubr
jmp
sti
push
and
xor
sar
and
pushf
mov
xchg
fld
and
mov
rol
int3
cmps
sbb
cmp
fiadd
nop
inc
scas
lods
sbb
jno
mov
sub
lock
sbb
pop
or
or
mov
cld
push
ins
pop
and
adc
call
cmp
pop
add
xor
mov
mov
pop
jge
fwait
adc
repz
xor
cmp
xchg
push
test
mov
mov
add
push
and
jp
push
sbb
and
xlat
add
mov
mov
mov
inc
pop
popa
xor
add
mov
mov
rol
sub
out
jne
lahf
sub
cmp
sbb
retf
push
sti
cmps
mov
dec
inc
out
gs
dec
jno
sbb
test
sahf
call
jae
and
push
adc
xor
ja
pusha
xor
cld
div
sub
clc
daa
aam
mov
fs
dec
scas
rcl
lahf
icebp
mov
sub
pop
jmp
xchg
lods
ins
mov
out
std
(bad)
lods
push
imul
repnz
pop
add
(bad)
xor
pop
les
ins
shr
fisttp
pop
cmp
inc
sbb
xor
ret
and
daa
jl
inc
stos
shr
or
fdivr
in
(bad)
fs
repz
sahf
and
fwait
out
adc
arpl
pop
mov
std
test
and
and
ins
mov
and
stc
jo
scas
mov
or
mov
nop
pusha
mov
push
sti
popa
(bad)
rol
pushf
add
mov
(bad)
inc
mov
mov
add
pop
cmp
stos
pop
mov
sub
fmul
and
jae
xchg
aaa
ins
inc
xor
pop
loop
outs
mov
xor
mov
imul
sbb
mov
mov
rcr
aad
cmp
arpl
and
cmp
mov
inc
jge
or
loop
test
in
sahf
push
push
shr
push
loop
mov
sbb
push
aam
popf
dec
stos
cmp
jo
das
das
out
sub
mov
popf
pop
bound
push
idiv
sub
fs
push
fdiv
adc
test
cmp
pop
mov
sub
leave
pop
js
xor
std
div
daa
push
ds
fdivr
inc
push
jge
xchg
je
test
pop
shl
xchg
jmp
pop
aad
adc
movs
add
int
and
inc
sub
mov
aad
into
push
icebp
pop
dec
loop
push
pop
xchg
jo
xor
inc
and
repz
mov
mov
and
dec
push
enter
cmp
cmp
or
movs
sbb
out
push
jl
outs
pop
sub
rcl
aas
xchg
pop
sub
femms
pop
xchg
pop
aad
jmp
sub
add
imul
add
sbb
cwde
test
push
jae
pop
lahf
mov
jle
loopne
aad
scas
inc
or
pop
pusha
stos
mov
shr
nop
dec
sahf
sti
sti
pop
pop
fild
loop
mov
jne
int
fstp
mov
paddw
mov
mov
data16
push
icebp
mov
ja
push
mov
fadd
test
fdiv
mov
cmp
and
dec
push
movs
into
and
pop
inc
or
push
jae
fld
dec
retf
inc
jl
mov
movs
lock
add
dec
test
shl
mov
mov
pop
pop
push
xor
and
popa
and
or
mov
int3
jg
fidivr
ja
xchg
xchg
inc
popa
cmp
and
ja
sbb
and
imul
test
xchg
fisttp
add
scas
or
push
in
xor
push
cwde
mov
fsubr
ror
fs
pop
xor
in
fcmovnb
gs
retf
shl
out
cmp
fdiv
lods
push
sub
call
xchg
outs
pusha
ds
cmp
loope
std
repz
adc
push
sbb
jbe
idiv
(bad)
imul
cmp
pop
cmp
push
sbb
add
xor
pop
call
add
mov
rcr
and
lea
repnz
into
sbb
nop
dec
sti
clc
loopne
cmp
addr16
jo
repnz
aas
push
sub
sub
sbb
rol
mov
add
xor
pop
push
adc
mov
std
out
in
xor
out
enter
mov
dec
imul
out
cld
mov
mov
or
jmp
les
push
push
div
cmp
mov
pop
pushf
mov
or
adc
int3
and
pop
dec
jle
mov
test
xor
sub
and
push
iret
adc
pop
mov
movs
mov
fstp
call
test
add
push
outs
fwait
mov
cli
aas
adc
cmp
dec
mov
js
push
and
push
adc
stos
sbb
hlt
adc
int
mov
push
neg
mov
push
mov
jle
xchg
push
aas
mov
or
lock
cmc
scas
mov
popa
(bad)
mov
and
(bad)
and
jnp
jecxz
popa
mov
push
pusha
pop
clc
push
inc
mov
popf
in
repnz
mov
div
pop
or
in
add
pop
mov
pop
sub
jbe
fsub
xchg
inc
and
sub
stos
mov
pusha
cmp
aaa
in
js
aas
pop
stc
movs
(bad)
jmp
aam
inc
inc
fbld
jg
jbe
out
int
aad
adc
inc
lea
sti
jmp
loope
add
or
dec
int
jmp
cmp
lea
test
(bad)
jno
(bad)
cmps
mov
mov
xor
pop
mov
scas
sbb
add
and
ins
fild
mov
cld
arpl
adc
xor
or
mov
sbb
fistp
movs
cmp
aaa
inc
cdq
mov
mov
mov
retf
push
jp
(bad)
in
or
stos
retf
das
loop
mov
iret
mov
aas
push
inc
sbb
sub
test
cmps
add
mov
mov
test
xchg
cld
jmp
movs
cmc
inc
dec
sub
in
loop
pushf
inc
movs
pop
and
movs
sub
sub
test
xchg
rcl
popf
(bad)
mov
out
(bad)
mov
(bad)
dec
inc
mov
push
and
mov
xor
mov
movs
gs
jp
sub
and
or
loopne
(bad)
sti
or
mov
daa
int
cmps
xchg
sahf
add
xor
ffree
test
fstp
mov
movs
or
inc
mov
jge
push
push
push
adc
adc
sbb
lods
out
jl
ficomp
cmp
mov
call
add
daa
mov
aas
jecxz
ins
jmp
pop
cmp
push
adc
mov
arpl
pop
daa
ret
jae
and
adc
icebp
sbb
pop
and
cmp
loopne
add
ja
fist
mov
jbe
lahf
push
mov
in
pusha
push
adc
mov
mov
outs
test
push
cmps
xchg
aas
loop
lea
mov
dec
cwde
cmp
jnp
xchg
sub
push
arpl
sbb
cli
test
or
fmul
shr
fistp
and
not
mov
out
fmul
int3
cli
arpl
aad
movs
push
sub
iret
xor
je
cdq
fs
sub
loope
into
loopne
(bad)
out
cmp
sbb
mov
pop
rcl
hlt
pushf
rcr
(bad)
cmp
cmps
pushf
jo
xlat
fbld
pop
ror
push
fadd
or
sbb
scas
retf
aaa
cld
lds
mov
dec
mov
and
cmps
imul
mov
push
popf
cdq
push
stc
or
pop
dec
mov
stc
aad
push
(bad)
out
je
(bad)
mov
xor
cmp
loopne
test
cmp
in
mov
lods
imul
and
add
cmps
sbb
xor
movs
mov
jb
and
sub
and
arpl
mov
sti
int
repz
outs
pop
jb
add
out
ins
pop
adc
test
jp
dec
jp
int
pop
popf
push
inc
rcr
(bad)
aas
adc
adc
xchg
inc
push
je
mov
aas
(bad)
scas
cmp
mov
pop
push
or
push
push
sub
cmp
imul
ds
mov
add
sub
out
adc
xor
movzx
fst
pop
sub
mov
cmp
jnp
dec
inc
jb
fcom
push
aaa
mov
cmp
inc
sbb
fmulp
mov
es
pop
pop
loopne
and
dec
xor
dec
adc
mov
mov
lods
sub
inc
les
or
add
cmp
xor
leave
sbb
xchg
es
test
jns
push
inc
mov
imul
adc
add
push
mov
repnz
loope
(bad)
mov
call
mov
jge
xchg
pop
xor
sbb
xchg
and
repnz
xchg
push
inc
adc
in
mov
xchg
inc
ss
jp
mov
pop
movs
adc
fs
or
cli
adc
mov
ret
(bad)
das
call
mov
pop
mov
push
movs
or
pop
aas
pop
mov
int3
(bad)
jmp
fistp
aad
mov
mov
mov
adc
leave
out
call
pop
test
or
les
push
(bad)
arpl
inc
out
(bad)
jb
jecxz
div
fimul
imul
fiadd
and
dec
mov
push
aam
pop
and
cmp
jno
mov
inc
pop
inc
and
inc
xor
psubsb
sub
mov
or
fiadd
shl
mov
mov
sbb
inc
jmp
add
stos
mov
mov
popf
dec
xchg
or
fsub
sub
mov
clc
jge
int
cmp
fsub
push
ds
inc
sbb
pop
or
jg
and
gs
leave
aam
sbb
add
jp
mov
adc
pusha
cmp
mov
xchg
cmp
xchg
sub
mov
das
jl
aad
pop
inc
(bad)
xchg
dec
aas
push
test
std
mov
fistp
jns
mov
movs
lea
std
into
or
add
mov
in
lds
fistp
in
ja
pop
xchg
ficom
hlt
daa
dec
sub
xchg
push
mov
fucomi
jmp
es
mov
pop
mov
add
cld
inc
daa
das
inc
sbb
or
xor
aad
cmp
mov
mov
ds
push
xor
sub
jmp
inc
repnz
out
jo
popa
in
es
or
lods
and
inc
push
pop
ins
mov
push
dec
aad
xchg
imul
jge
dec
or
into
std
aaa
das
and
xchg
in
jl
pop
jmp
pop
sbb
inc
outs
mov
mov
cmp
fs
sbb
jl
push
sahf
movs
or
cli
sbb
or
loope
and
retf
mov
mov
sub
and
adc
pop
xchg
mov
(bad)
gs
out
cli
xchg
addr16
jmp
sub
add
xchg
das
fnsave
fwait
pop
mov
jg
int
dec
dec
mov
dec
test
push
(bad)
or
ja
neg
loopne
mov
sbb
loopne
xchg
or
mov
in
xchg
test
dec
inc
cmp
clc
push
(bad)
int
cmp
cmp
scas
sbb
iret
mov
adc
fisubr
(bad)
mov
and
lods
mov
ret
or
popf
pushf
cld
cmp
inc
lods
in
(bad)
jmp
addr16
nop
jbe
(bad)
imul
jo
lea
cmp
fs
mov
sti
mov
mov
mov
or
or
dec
mov
dec
out
mov
int3
je
stos
in
in
lods
cmp
rcl
cmc
jne
imul
mov
rcr
cmp
and
dec
adc
pop
mov
sbb
cmp
jle
jne
dec
cli
aad
fcomi
aam
imul
repnz
retf
xchg
imul
adc
lahf
adc
jecxz
pusha
inc
and
inc
inc
aas
xor
lea
dec
xchg
mov
arpl
in
cmp
xchg
vcvtss2sd
adc
xchg
push
inc
push
sub
adc
dec
popf
inc
loopne
test
std
pop
jns
test
pop
jmp
je
mov
in
js
icebp
mov
jmp
imul
jae
(bad)
mov
mov
xchg
mov
add
push
sub
sub
out
xor
mov
and
jp
and
or
adc
rcl
xlat
mov
xor
cmp
addr16
outs
or
repz
dec
(bad)
cmps
test
bound
test
es
jne
mov
out
les
xchg
lea
rcl
test
add
shl
mov
jecxz
std
dec
cmp
push
jne
mov
mov
mov
xchg
loop
dec
stos
ins
scas
lahf
call
cmp
ret
push
xor
xchg
sub
clc
out
addr16
sti
xchg
out
dec
sbb
push
popf
enter
div
jmp
sbb
push
sahf
out
cmc
dec
je
cmp
add
rcl
jns
fprem
add
ins
ja
imul
push
call
push
xchg
mov
loope
rcl
cmp
push
int3
xor
movs
mov
fwait
clc
jl
cmp
(bad)
jnp
mov
leave
leave
mov
imul
cs
adc
cwde
xchg
nop
es
mov
push
adc
xor
mov
cli
addr16
sbb
imul
jl
mov
sbb
outs
pop
stc
dec
(bad)
cld
hlt
xor
je
out
cmp
mov
adc
adc
or
push
fisttp
push
mov
jmp
adc
mov
pop
push
test
dec
push
test
add
js
or
cmp
in
lea
out
sub
test
cs
sbb
das
shr
push
lds
jl
int
cmp
cld
enter
sub
jno
popa
(bad)
scas
cmp
pop
jp
(bad)
pop
add
sub
mov
cli
push
leave
fisub
jo
push
cmp
ret
je
dec
sbb
xchg
mov
or
fistp
xlat
pop
imul
mov
jne
ret
jb
push
mov
xor
stos
xor
cmp
sbb
sub
lock
xchg
out
das
mov
aas
or
cmp
or
cmps
sbb
addr16
mov
das
sub
cmp
lds
fld
dec
das
clc
stos
inc
pusha
les
lahf
(bad)
sahf
adc
mov
pop
pop
inc
(bad)
jmp
cmp
in
ud0
or
call
test
stos
popa
sub
xchg
mov
and
xchg
inc
sahf
mov
push
mov
pop
mov
cmc
mov
lods
dec
test
pusha
jmp
sbb
pop
dec
cmp
loope
adc
or
mov
repnz
adc
sar
mov
pop
inc
loope
outs
xor
pop
inc
cmp
jge
sub
in
imul
inc
cld
sti
jmp
in
dec
(bad)
mov
popa
mov
push
lods
mov
jns
fiadd
dec
xchg
into
inc
mov
lods
adc
mov
or
jns
jae
jg
pop
jp
imul
xor
adc
xor
push
call
fistp
nop
dec
std
inc
mov
dec
pop
sbb
jmp
in
lock
push
imul
dec
xchg
test
jmp
push
out
aas
adc
dec
iret
fnstenv
(bad)
jmp
xchg
xor
pusha
mov
out
es
test
nop
adc
inc
stc
add
add
repz
test
(bad)
add
test
fbstp
dec
push
jmp
jecxz
leave
dec
in
fcmovu
je
in
adc
and
cmp
sub
or
sub
mov
sar
pop
xor
clc
jmp
out
xchg
xchg
jae
daa
dec
jecxz
xor
and
dec
sti
(bad)
and
(bad)
sti
sub
xchg
jmp
mov
sbb
mov
dec
dec
jno
and
sub
cmc
rcr
test
test
xor
and
popf
push
(bad)
sbb
fsubr
hlt
(bad)
int
sbb
popa
fcomp
jbe
mov
pop
aad
stos
dec
cmp
dec
dec
hlt
fstp
push
aam
test
stos
stos
push
inc
test
add
xchg
aas
cwde
or
daa
ret
and
aaa
in
add
push
mov
sub
pop
push
test
push
pop
ja
jae
es
pop
pop
mov
or
add
ret
add
pop
or
sbb
cmp
test
pop
jns
icebp
cmps
fcmovnu
inc
pop
xor
test
jo
fstp
cmp
sbb
dec
pop
test
(bad)
rcl
add
sub
inc
imul
out
mov
dec
pop
mul
ds
xchg
or
fisubr
mov
(bad)
xor
inc
dec
push
adc
enter
xor
in
pushf
or
clc
cmp
test
cmps
adc
sbb
stc
retf
mov
aam
mov
stc
retf
mov
sti
fidivr
iret
mov
cmp
in
xchg
cmps
pop
xlat
mov
into
ror
sbb
fsubr
sub
xchg
loope
pop
repnz
push
daa
loop
adc
pusha
lods
push
inc
fcomp
in
scas
idiv
pop
adc
push
xor
icebp
jae
mov
movs
mov
mov
ins
repnz
dec
jae
dec
jb
in
bound
mov
aas
lods
cmp
xlat
pop
add
or
sbb
fcmovbe
add
xchg
jbe
mov
or
cmp
cmc
fsub
in
add
xchg
call
test
sub
adc
inc
out
push
bound
inc
lods
push
retf
jns
pop
loopne
outs
ror
iret
repnz
aas
dec
dec
pop
fs
push
les
pushf
rcl
bnd
leave
pop
pop
out
(bad)
iret
idiv
push
mov
js
mov
mov
retf
shl
xchg
pop
and
jno
xor
jmp
push
dec
retf
sbb
inc
add
push
adc
mov
inc
pop
test
inc
add
sub
xchg
sub
aas
sub
cmp
mov
mov
adc
mov
push
pop
sub
rep
pop
ret
in
pop
and
push
mov
mov
push
clc
pop
jp
pop
mov
cmp
xchg
jecxz
rcl
dec
call
cwde
(bad)
mov
mov
je
jge
aaa
cmp
adc
and
pop
fstp
test
sbb
xor
rol
mov
jg
fistp
retf
pop
mov
in
fistp
jmp
mov
and
pusha
add
xor
sub
cwde
shl
es
xor
push
adc
pop
retf
xchg
(bad)
sbb
add
mov
ins
xchg
adc
scas
cmp
pop
add
loope
push
rcr
int
fistp
test
adc
retf
sbb
mov
in
inc
xchg
push
outs
imul
daa
xchg
push
xchg
sti
(bad)
sbb
shr
or
sbb
shl
sub
loopne
sbb
daa
sti
cmps
push
and
movs
cmp
add
add
sub
cmp
and
fistp
mov
jmp
fisttp
test
push
cmp
in
inc
dec
icebp
mov
mov
cmp
sub
push
fs
(bad)
inc
fwait
or
call
cmc
mov
push
pop
stc
adc
push
test
iret
in
out
sti
sub
push
ins
pusha
data16
loope
mov
sbb
popf
xchg
stc
in
mov
js
push
aaa
jne
push
cmp
js
cmp
aad
je
je
movs
dec
xchg
sti
stos
pushf
sar
in
out
lods
cwde
add
in
mov
pop
cmp
in
jnp
add
or
push
stos
sahf
aaa
xchg
adc
retf
push
sti
clc
dec
and
adc
mov
bound
sub
in
stc
stc
(bad)
loopne
ja
cmp
(bad)
std
mov
lds
push
sub
dec
push
aad
push
and
aad
jmp
pop
mov
dec
pusha
les
and
aad
xlat
sub
jnp
jno
iret
jb
dec
or
add
push
clc
add
retf
cld
adc
mov
pop
dec
lock
fadd
adc
addr16
in
lods
sbb
inc
cs
adc
pop
pushf
mov
test
add
mov
cld
sbb
or
(bad)
popa
mov
cwde
imul
sub
mov
sub
les
imul
jmp
cs
scas
leave
jmp
ds
icebp
cmp
arpl
cmp
cdq
(bad)
jne
push
push
or
hlt
outs
lods
dec
sub
jp
cdq
(bad)
adc
loopne
fwait
jne
cmp
mov
dec
push
pop
and
rcr
retf
(bad)
push
dec
or
add
xchg
adc
bnd
jl
gs
push
mov
mov
push
test
into
(bad)
lea
sbb
aad
push
fwait
push
mov
mov
sub
es
movs
cmp
mov
inc
pop
rcl
scas
xchg
int3
popa
sub
jb
leave
js
or
inc
xor
jmp
sub
sbb
mov
mov
mov
mov
fnstcw
pop
and
cs
clc
fiadd
std
imul
ror
mov
sub
in
xchg
sbb
jns
mov
imul
mov
loop
push
mov
cld
outs
add
loop
dec
test
mov
cdq
or
enter
mov
mov
xchg
cmc
xchg
scas
mov
cmps
cmovs
cmp
test
sbb
pop
out
js
sti
mov
aas
das
call
push
mov
jmp
ret
jge
mov
dec
fcmove
imul
pop
xchg
stc
xchg
je
push
or
cmp
mov
ficomp
ds
imul
repz
mov
scas
xchg
mov
mov
repz
test
movs
xchg
pop
pop
iret
push
pop
inc
xchg
bound
mov
mov
xchg
cmp
mov
ds
daa
arpl
mov
scas
imul
retf
nop
add
call
xor
mov
jge
pop
cmovle
sar
fwait
shl
inc
inc
push
lods
sti
test
aas
pop
rol
cmp
sub
das
in
sbb
add
movs
cmp
aas
out
int3
push
data16
mov
mov
aam
push
sbb
cmp
inc
sbb
in
xor
push
xchg
sar
mov
adc
pop
mov
jo
xchg
test
jmp
int
and
test
mov
add
dec
push
mov
add
fwait
mov
sub
add
aas
stos
and
fisubr
in
cmp
ds
mov
inc
in
addr16
dec
jnp
add
and
in
or
bound
adc
retf
push
(bad)
dec
dec
jo
mov
xor
sub
je
xlat
out
repnz
mov
xor
push
or
push
fimul
inc
xor
pushf
dec
sar
adc
adc
xchg
sub
sub
aad
nop
cmp
xor
icebp
mov
fcomip
mov
inc
adc
ins
(bad)
and
outs
mov
in
movs
lea
scas
std
xchg
cmp
mov
movs
ins
add
ins
arpl
(bad)
xor
int3
mov
fwait
xchg
and
xor
push
ret
jecxz
sub
jecxz
inc
cmc
mov
mov
jecxz
xchg
push
xchg
push
movs
pop
xchg
test
div
sub
mov
pop
jecxz
jl
ins
xchg
iret
adc
dec
sub
jnp
ds
rol
int3
lds
cmp
leave
ins
adc
or
inc
push
inc
mov
fisub
xchg
arpl
xchg
adc
add
test
fdiv
jle
add
dec
inc
xchg
pop
pop
add
dec
fisubr
mov
call
fimul
add
mov
icebp
pushf
nop
jmp
(bad)
das
aas
sub
mov
cdq
cmp
push
jmp
inc
icebp
call
cwde
cmp
cdq
sub
push
cdq
shr
outs
mov
aam
movs
adc
jge
in
imul
sar
cmc
add
popf
or
mov
aas
enter
cmps
cmp
cmp
fdivr
xchg
mov
cdq
repnz
js
ret
and
inc
xor
fisttp
leave
or
jns
jns
movs
pushaw
(bad)
in
test
jns
lods
push
mov
cmp
lods
or
repnz
sar
xchg
mov
out
add
or
out
not
aad
sbb
(bad)
imul
hlt
out
sub
rcl
jp
je
loop
in
adc
adc
mul
add
jle
nop
jg
popa
arpl
mov
fstp
test
xor
int
jne
jmp
xor
js
mov
mov
xchg
dec
mov
clc
pop
retf
out
jns
xchg
pop
lods
ds
(bad)
xor
mov
out
push
ret
sbb
jbe
mov
imul
add
adc
movs
out
jmp
pop
mov
add
adc
test
mov
adc
mov
mov
pop
sbb
xchg
leave
inc
jmp
or
pop
sahf
cmp
sbb
into
and
adc
das
out
push
mov
cli
xchg
in
retf
enter
cmps
call
rol
xchg
out
addr16
enter
inc
dec
popf
dec
lahf
cld
sub
(bad)
xchg
js
lea
retf
jle
xchg
in
ins
inc
addr16
xor
mov
fst
stos
add
into
int3
and
inc
scas
test
call
xlat
rol
mov
ret
(bad)
(bad)
cmp
mov
inc
jmp
xchg
xchg
or
jge
dec
outs
test
jo
mov
sub
add
idiv
jns
sbb
xchg
jp
outs
push
xor
addr16
sbb
idiv
clc
push
out
jb
or
push
mov
sub
ficomp
pop
sub
pop
pop
mov
mov
test
(bad)
push
leave
inc
sbb
cwde
lods
int3
cdq
cli
das
push
dec
mov
xor
into
adc
mov
retf
sbb
aad
in
jp
das
mov
scas
add
rol
rcl
popf
xchg
jecxz
xchg
push
or
rcl
sbb
repz
ja
cmp
sbb
xor
fwait
sbb
call
inc
cmps
stos
inc
scas
xchg
clc
mov
adc
push
in
sbb
shl
push
push
imul
cmc
int3
dec
fmul
cdq
push
push
sub
and
ficom
or
xor
inc
arpl
bound
icebp
add
cmp
es
pop
add
push
cli
ret
loop
jmp
(bad)
jb
fwait
cwde
mov
cmp
sub
or
test
jle
pushf
xchg
or
xchg
and
je
mov
movs
mov
push
push
cmp
cmp
add
mov
in
gs
jl
jo
call
pop
jmp
adc
shl
cli
push
fcomp
push
in
sub
add
int
pop
mov
push
scas
out
outs
mov
dec
inc
cmp
loope
fcom
in
lfs
scas
sub
adc
js
jbe
inc
in
cmps
dec
mov
aas
inc
mov
mov
inc
pop
mov
push
jg
lds
cwde
fwait
xchg
or
and
les
or
push
js
adc
xchg
outs
jg
sub
or
cmp
icebp
or
sub
jae
cdq
and
call
push
add
push
(bad)
rol
dec
add
inc
pusha
dec
popa
xor
pop
mov
sub
stos
shl
icebp
push
push
or
ins
dec
mov
mov
test
pop
movs
icebp
cmc
js
retf
add
pop
or
fmul
mov
cdq
fistp
fwait
test
jecxz
mov
mov
in
ret
mov
ficom
scas
xchg
jno
and
fwait
rcl
arpl
outs
(bad)
aad
rcr
movs
in
adc
jl
or
sub
rcr
stos
loop
adc
nop
ret
aas
dec
cwde
xchg
loope
jl
xchg
(bad)
test
fisub
test
inc
lods
ds
fld
sub
lahf
jmp
xchg
outs
scas
outs
pop
xor
jno
aam
fidivr
mov
push
movs
mov
mov
pop
outs
mov
mov
push
cmps
push
or
mov
cmps
ret
iret
inc
loope
push
and
ret
and
ret
outs
push
and
fstp
loop
inc
hlt
jns
xchg
in
out
xchg
cwde
retf
cmp
rol
dec
fisttp
add
mov
or
test
cmp
jno
fstp
fidivr
popf
ja
ss
outs
xchg
(bad)
push
add
mov
fist
jmp
sbb
xor
mov
mov
rcl
in
adc
sbb
sbb
mov
mov
dec
mov
popa
ror
dec
and
out
sahf
data16
in
out
or
adc
iret
popf
sub
push
jno
frstor
pop
dec
stos
aas
mov
sbb
dec
jp
mov
inc
test
dec
pop
bound
xchg
pop
sti
stos
inc
push
(bad)
and
mov
popa
cwde
push
pop
repnz
sbb
mov
mov
sbb
jmp
pop
cmp
add
push
sbb
adc
jle
call
clc
into
lahf
shl
das
mov
xchg
sub
inc
xchg
test
cmc
jge
xor
sub
mov
push
push
popa
add
in
out
inc
out
rcl
out
jl
mov
lock
test
rol
lods
jecxz
inc
gs
out
clc
popf
inc
fld
(bad)
mov
xchg
lods
jg
inc
fisubr
mov
mov
cwde
cmp
inc
stos
sbb
inc
cmp
xchg
xlat
and
fdiv
sbb
pop
gs
cmp
popa
xchg
daa
xor
imul
dec
ins
outs
sbb
mov
lahf
cmps
jno
mov
jo
xlat
mov
inc
mov
cdq
int
loope
adc
jg
sbb
dec
xchg
pop
sti
push
adc
or
clc
loope
mov
popf
cmp
stos
ins
in
pop
xor
fsub
lds
pop
xor
mov
scas
sub
cld
pushf
pushf
dec
sub
(bad)
cwde
sub
nop
rcr
mov
jg
jne
imul
xchg
fadd
pop
shl
ja
mov
jle
add
fcom
push
pop
adc
push
push
xchg
lea
ffree
ds
cmp
(bad)
mov
fild
les
sub
out
jb
push
gs
jb
xchg
pop
ja
popf
je
and
lods
test
sbb
aam
aaa
sbb
cld
in
retf
cmps
iret
mov
cs
lea
push
out
aad
loope
adc
aad
repnz
cmps
fisubr
loopne
pop
dec
icebp
push
inc
das
push
sbb
movs
popf
out
in
jmp
or
js
mov
and
call
clc
inc
into
inc
scas
loopne
dec
push
pop
push
ds
js
add
mov
mov
and
ds
jb
popf
nop
mov
(bad)
fisttp
or
pop
jae
(bad)
and
sar
push
adc
dec
cmps
or
or
lahf
movs
add
lods
ins
cmps
xor
mov
(bad)
adc
bound
rcl
xchg
and
data16
shl
test
test
lock
ds
add
pop
inc
mov
movs
out
aad
test
sti
push
mov
ret
call
cmp
jge
jge
aaa
pop
jns
xchg
js
popf
test
fstp
and
jae
stos
scas
daa
rol
lea
adc
cmp
icebp
iret
stos
xlat
fs
push
enter
neg
stos
inc
pop
mov
call
out
mov
pop
jmp
jle
push
dec
stos
push
das
fadd
xlat
inc
inc
adc
das
mov
je
adc
jp
dec
ficom
out
in
call
or
cmps
leave
or
std
lock
xor
dec
jge
ror
fxch
dec
outs
shl
jge
hlt
lock
aaa
pop
fnstcw
inc
add
out
mov
xlat
cmc
or
sbb
dec
sbb
pop
jg
pop
iret
xchg
lds
aad
or
gs
push
pop
add
xor
js
call
and
pop
out
sti
dec
push
arpl
dec
add
cmp
mov
mov
pop
and
in
loopne
xor
mov
mov
(bad)
xor
fs
xchg
adc
mov
les
daa
add
push
mov
fdivr
mov
sub
sbb
movs
sub
out
inc
or
out
fsub
aaa
push
mov
add
pushf
add
pop
jns
fcom
mov
(bad)
pop
lahf
sbb
aaa
in
pop
or
fiadd
or
lea
pop
or
or
mov
out
inc
xchg
sti
pop
xor
rol
inc
sbb
mov
rcr
call
ror
ret
es
inc
mul
jae
sahf
loopne
inc
dec
dec
sub
in
fsubr
xor
mov
ror
(bad)
out
fcomp
sub
adc
inc
imul
les
cli
outs
fisub
cmp
dec
call
inc
jb
jg
jns
lahf
popf
add
enter
or
fwait
in
mov
mov
out
mov
pop
mov
std
pop
das
mov
and
cmp
pop
out
mov
jo
rcl
jmp
fdivp
jae
arpl
shl
hlt
call
(bad)
je
add
add
les
push
ja
ins
adc
sti
jb
sar
fadd
xchg
ins
jmp
scas
xor
pop
cmc
adc
repz
mov
or
ret
pop
mov
loop
push
cmp
in
fcmovnbe
(bad)
push
dec
sti
jl
call
and
push
sub
pop
add
add
in
mov
test
or
xchg
call
xor
loop
add
xor
cld
cli
sub
aas
imul
push
jo
dec
test
mov
adc
mov
add
jg
cmps
rcl
cmp
or
push
cli
rol
mov
xor
ficom
leave
in
es
and
inc
sub
pop
jmp
sahf
aas
and
call
mov
mov
xor
sbb
pop
pop
pop
fsub
push
sbb
cmps
aaa
pop
imul
mov
push
mov
inc
sbb
test
mov
mov
test
ficom
push
movs
jne
push
add
cdq
mov
push
pop
mov
pop
adc
fist
xor
xor
sahf
out
jp
push
push
inc
push
mov
mov
or
out
add
cmp
xchg
adc
sub
fs
call
dec
xor
movs
inc
loope
mov
ret
xchg
mov
lds
dec
mov
push
lods
and
std
dec
mov
pusha
das
jle
push
jmp
(bad)
push
movs
fmul
data16
jb
iret
pop
inc
dec
xor
inc
(bad)
in
xlat
scas
cmps
or
pop
jmp
and
xor
test
add
xor
cld
std
mov
xchg
or
push
pop
retf
cmps
push
scas
popf
out
retf
fcomp
aam
daa
dec
icebp
icebp
push
jmp
out
add
in
sub
mov
mov
outs
pusha
or
popf
fidiv
add
movs
xchg
cmps
xchg
fist
fcomp
addr16
xchg
mov
sete
xor
push
xchg
lods
or
xlat
sbb
sub
(bad)
daa
sti
fisub
cmp
shl
les
xchg
xacquire
cmp
sbb
dec
pop
aad
adc
cli
imul
or
ret
xchg
pop
fwait
pop
adc
pop
movs
jmp
test
jae
mov
or
lock
xor
add
ret
lock
movs
(bad)
out
test
imul
addr16
and
into
or
xchg
dec
xor
and
dec
cmps
outs
mov
(bad)
jmp
pop
jge
and
(bad)
xor
stos
mov
stc
sub
mov
repnz
cmp
mov
stc
ret
(bad)
loopne
jecxz
adc
inc
cmps
es
inc
out
pushf
cmp
retf
add
js
jge
jo
adc
sub
mov
std
ror
cmps
fs
inc
inc
cmp
add
xor
sub
add
inc
mov
data16
daa
sbb
shr
iret
jns
shl
das
out
stos
mov
mov
gs
rol
mov
push
test
fadd
inc
ins
xchg
pop
jnp
jae
ds
jae
mov
scas
dec
test
add
enter
movs
(bad)
mov
out
pop
inc
into
cmps
out
jl
dec
push
es
pop
mov
cwde
pushf
xchg
mov
loopne
(bad)
xor
stos
xchg
mov
imul
(bad)
retf
fnstenv
xchg
scas
jbe
loope
pop
jmp
xlat
in
mov
dec
inc
imul
mov
fs
mov
fdiv
fwait
or
xor
dec
xlat
ja
jbe
icebp
cmps
hlt
xchg
cli
retf
add
jmp
icebp
or
jmp
loop
push
push
loope
ficom
jne
or
adc
shr
jecxz
add
jmp
scas
stc
pop
pop
nop
dec
mov
inc
mov
js
loop
mov
mov
fstp
jb
mov
rcl
sub
movs
(bad)
jmp
jmp
scas
idiv
push
shl
xchg
test
or
outs
ss
mov
and
xlat
mov
xor
mov
adc
dec
loopne
in
cmp
pop
das
push
out
sbb
sbb
mov
cvtps2pi
or
mov
int
outs
dec
popf
shl
sbb
mov
fadd
lea
xor
sub
loope
ss
sbb
fld
out
int
ins
out
inc
stos
mov
xchg
and
sub
mov
and
sub
cmp
jnp
imul
dec
inc
das
xor
add
xchg
shl
sbb
loop
cld
fistp
push
out
xor
outs
mov
retf
ret
call
push
in
mov
fcmovb
hlt
test
xchg
imul
sub
lea
adc
imul
in
movs
and
(bad)
fstp
(bad)
ins
out
sub
jg
fidiv
and
addr16
and
inc
sub
outs
outs
test
mov
sbb
sub
xor
mov
outs
pop
and
fwait
or
add
jp
sub
inc
sahf
stc
pop
push
daa
add
xchg
fcomp
adc
std
jle
mov
push
or
or
cmps
hlt
jge
loopne
leave
cli
aaa
test
repz
fst
repnz
int3
push
inc
adc
mov
in
and
push
movs
lahf
sbb
lods
cmps
lods
mov
mov
push
mov
xor
mov
jl
and
scas
cmps
inc
jnp
sbb
sar
nop
stc
adc
fld
loopne
sub
jge
add
sar
cmps
das
ins
dec
rol
push
cwde
mov
movs
add
sub
ja
dec
inc
das
cmp
arpl
mov
xchg
mov
sbb
sbb
pop
and
test
and
jle
repz
xlat
cmp
adc
sbb
sub
inc
pop
jmp
mul
loope
pop
minps
outs
lods
enter
icebp
mov
cli
sbb
ins
pop
xchg
(bad)
lea
mov
stos
jb
dec
lock
ret
adc
jb
aam
in
cld
push
movs
add
mov
fwait
loopne
mov
scas
ret
mov
jnp
sub
and
stos
imul
add
cmp
and
jae
cmp
in
push
repnz
and
mov
inc
repz
add
add
mov
fdivr
inc
test
jge
neg
out
mov
fld
sti
sbb
push
sbb
pop
cmp
hlt
sar
add
lods
stos
cmps
scas
jo
mov
sub
pop
inc
mov
out
or
fbstp
stc
sub
mov
jae
(bad)
(bad)
pop
jne
inc
loopne
dec
add
jge
jl
shr
mov
mov
pop
mov
mov
rcl
jbe
not
xor
ins
aaa
or
movs
loop
mov
or
popa
pop
jb
loop
xor
std
mov
dec
pop
inc
in
pop
xor
xlat
shl
dec
(bad)
cmc
dec
pop
sub
xchg
fbstp
xchg
cs
sbb
sbb
pushf
test
sub
es
xchg
mov
fwait
test
jbe
sbb
addr16
sar
jae
fimul
out
test
arpl
xchg
cwde
push
and
fs
mov
dec
dec
popa
fcom
xchg
and
sub
mov
or
mov
repz
call
dec
(bad)
jb
add
adc
xor
out
ficom
adc
lods
jmp
in
mov
addr16
clc
std
inc
or
push
rcl
arpl
test
int3
(bad)
lock
in
dec
cmps
mov
cmp
sbb
(bad)
call
mov
or
popf
sbb
mov
movs
cmp
sub
loopne
rcr
into
mov
push
jmp
hlt
sti
(bad)
and
repnz
cwde
mov
mov
loope
scas
cmp
(bad)
and
ret
sub
and
add
(bad)
xchg
sub
lods
cmp
cmp
pop
mov
cmps
or
xor
pop
jge
adc
hlt
inc
jo
mov
xor
sbb
mov
jno
pop
aad
out
push
inc
mov
ss
inc
fist
mov
jmp
mov
mov
or
fisub
mov
mov
sbb
cmps
aas
addr16
daa
or
mov
loop
stc
xchg
(bad)
cli
fist
test
cmc
arpl
sub
cmp
lods
push
mov
mov
and
call
push
jns
test
jo
xor
(bad)
shl
js
mov
loopne
xchg
js
push
mov
cdq
cmp
sub
lock
mov
jle
push
int3
popf
jecxz
add
shr
mov
mov
rol
repnz
cld
mov
mov
mov
xchg
outs
mov
test
in
sbb
test
push
cwde
sub
lock
xchg
call
stos
into
add
mov
jns
cmc
cwde
xchg
addr16
adc
pop
mov
out
cmp
aad
fs
(bad)
test
sub
js
mov
push
sub
pop
jl
xchg
inc
(bad)
ficom
ins
daa
xor
sub
sbb
inc
(bad)
pop
adc
push
sti
mov
jae
inc
shr
xor
ja
sar
xor
jmp
mov
cmc
mov
in
or
push
dec
xor
jmp
pop
fld
jmp
call
dec
push
sbb
scas
inc
push
dec
loope
xor
mov
xor
jno
jg
leave
xchg
stos
sub
pushf
jno
retf
pop
xor
ror
outs
mov
fst
test
lea
fwait
push
(bad)
mov
adc
or
mov
xor
jg
loope
test
jp
adc
dec
ins
mov
sub
sbb
retf
jg
push
and
push
out
xchg
mov
cwde
in
jb
test
daa
jns
pushf
nop
out
inc
shl
sti
dec
sub
pop
fnsave
lods
dec
xor
xor
push
pop
push
lds
xchg
xchg
test
jo
ja
and
fucomip
js
ror
push
cmp
mov
mov
push
xchg
ins
cmps
mov
test
mov
inc
and
test
fiadd
xor
lahf
jmp
inc
call
fisttp
inc
lock
mov
push
dec
add
test
out
mov
sbb
xchg
jno
xor
das
mov
or
or
push
adc
inc
pop
add
pop
ins
pop
test
fist
mov
test
lods
sub
shl
jp
or
(bad)
mov
lods
sub
mov
jne
adc
push
fcomp
mov
rcl
cmp
cld
and
mov
sti
sbb
jge
xchg
xlat
dec
sub
sub
movs
fdivrp
push
inc
cmp
daa
addr16
or
push
outs
mov
sub
push
adc
ds
clc
push
mov
imul
and
adc
inc
xchg
adc
mov
xchg
mov
add
(bad)
fimul
push
mov
mov
int3
sub
jg
inc
fld
ret
outs
xchg
leave
push
ss
xor
and
mov
shl
mov
hlt
call
push
and
dec
mov
or
pop
mov
aaa
cmps
push
loopne
pop
mov
xchg
fisub
mov
add
stos
lds
out
scas
test
mov
xor
test
mov
rcr
(bad)
mov
sbb
jo
sar
outs
not
add
popf
or
mov
jg
test
xchg
stc
fist
je
xchg
ds
fcmovnu
(bad)
repnz
ins
mov
jno
add
adc
cmp
mov
sti
pop
jl
popf
test
adc
mov
cmps
fxtract
cmp
sti
loopne
mov
rcr
xchg
lock
pop
ficom
fisttp
fwait
data16
fwait
(bad)
(bad)
and
movs
rcr
sahf
pop
pop
sub
arpl
mov
test
clc
in
les
or
sub
add
mov
add
xchg
out
cld
mov
std
xor
dec
jmp
or
xchg
adc
inc
mov
xchg
jae
sti
mov
or
add
test
mov
mov
sub
or
int3
loop
adc
cmp
inc
and
push
mov
(bad)
out
fidivr
daa
jge
repnz
mov
jle
or
js
push
mov
rcr
mov
out
dec
add
mov
lods
add
test
mov
clc
pop
call
fwait
bnd
test
push
sub
add
fucomi
in
and
std
sbb
cmp
leave
adc
popf
in
adc
out
data16
push
xchg
push
shl
mov
sar
jge
pushf
add
out
(bad)
loope
pop
pop
dec
clc
repnz
sub
jmp
cmc
add
jbe
fmul
daa
jg
sbb
push
stos
mov
scas
sbb
push
adc
add
dec
xor
xchg
lahf
cdq
movs
in
xor
push
cdq
push
and
adc
inc
sar
xor
fld
ror
xor
dec
cmps
mov
xor
inc
jp
lods
imul
scas
mov
scas
xor
mul
loope
daa
out
jmp
pushf
cmp
lahf
inc
dec
jo
pusha
fcmovb
clc
sahf
call
clc
mov
inc
fistp
fcomp
jge
in
sub
cdq
mov
add
xchg
inc
mov
icebp
aaa
sbb
das
cmp
pop
jmp
mov
bnd
push
nop
jo
jno
imul
leave
mov
jb
inc
test
sub
sub
cs
xlat
ja
es
mov
sti
ret
out
push
or
fadd
lds
xchg
test
jae
in
pop
mov
fist
xchg
popf
cmp
pop
je
movs
add
pop
jmp
mov
mov
jbe
ret
jp
test
add
jmp
xor
fs
in
pop
test
mov
icebp
(bad)
adc
pop
sub
aad
jno
enter
hlt
movs
mov
xor
mov
int3
and
pop
inc
jle
xor
adc
lods
fsubr
sti
mov
ds
sbb
dec
xlat
lea
push
sbb
xchg
lahf
xchg
xlat
push
sbb
call
xor
pop
mov
(bad)
data16
push
lock
fwait
enter
and
cmps
push
fs
and
out
sub
push
dec
jnp
push
xchg
rol
pop
(bad)
xchg
scas
cmp
iret
sbb
sub
sub
sub
shr
add
mov
dec
lods
pop
ret
jmp
lods
mov
pop
sbb
shl
fld
stos
cmps
and
popf
xchg
ins
pop
idiv
cmp
or
cmp
setae
lea
push
dec
repz
popa
gs
sub
adc
sbb
in
xchg
cmp
rcl
and
inc
retf
sbb
repz
std
and
push
jl
and
or
xchg
and
pop
pop
pop
sub
or
dec
retf
stos
movs
loope
in
(bad)
push
xchg
sbb
fs
sub
push
mov
add
sahf
ds
popf
icebp
cli
add
pop
pop
fdiv
jne
imul
aad
adc
retf
push
jmp
fs
iret
push
xor
mov
lea
mov
sbb
mov
test
push
ja
mov
outs
push
in
outs
test
cmps
adc
push
add
mov
push
and
or
mov
add
pop
test
dec
sbb
movs
rol
fs
xlat
jo
xor
jg
pop
stos
mov
adc
xchg
call
xor
pop
xor
hlt
mov
mov
in
rol
cmps
add
or
out
imul
mov
mov
rcl
add
jg
add
ja
adc
clc
inc
mov
push
lds
push
inc
aaa
pop
pushf
mov
xor
inc
nop
or
add
(bad)
jecxz
xchg
push
mov
ret
lock
mov
(bad)
out
xor
mov
mov
fnsave
sbb
cmp
mov
ss
sbb
cmp
pop
aaa
add
mov
mov
retf
mov
jg
cli
pop
fs
loope
cmps
sbb
cmp
or
mov
add
cs
push
xor
xchg
aad
aad
data16
sub
mov
outs
addr16
sbb
xor
inc
aam
push
mov
repz
mov
ret
js
ret
and
sub
jle
xor
sbb
loop
and
sbb
cwde
dec
stc
adc
not
jl
jge
in
or
push
(bad)
out
mov
pop
jmp
retf
not
cmc
ret
test
(bad)
fisttp
or
ins
lock
mov
int
imul
add
and
rcl
jnp
(bad)
pinsrw
cs
dec
or
fstp
test
fwait
mov
add
xchg
(bad)
shr
movs
dec
dec
add
or
scas
mov
mov
cdq
sahf
fwait
sub
adc
jg
sbb
ret
lds
pop
cmp
bound
or
pop
push
push
pop
and
arpl
lahf
mov
out
jb
mov
daa
adc
sub
sbb
retf
mov
pop
arpl
stos
retf
popf
xchg
sub
sbb
xor
jmp
retf
or
bound
jno
or
sub
mov
fisttp
mov
or
xchg
iret
sub
push
add
mov
dec
lods
mov
inc
add
jbe
test
mov
sbb
(bad)
dec
jl
cld
rol
xor
ds
call
je
shl
pushf
adc
(bad)
adc
mov
mov
xchg
in
stos
ficomp
ins
ja
sahf
sub
fistp
sub
test
adc
push
dec
mov
cld
ins
sub
ror
pop
jle
mov
adc
je
jmp
jne
fstp
adc
hlt
adc
and
(bad)
adc
aam
out
mov
movs
push
push
jp
mov
fs
mov
out
xchg
mov
stos
mov
dec
dec
mov
(bad)
xor
hlt
leave
in
and
adc
push
fild
in
sbb
cdq
cmp
cmps
mov
ror
out
cwde
sbb
xor
cs
mov
inc
and
rcl
jp
cld
add
fmul
iret
mov
xchg
xchg
add
pop
(bad)
out
add
sbb
jl
stos
add
sahf
and
inc
jns
test
popa
pop
aad
inc
sbb
in
ret
sbb
iret
cmc
mov
push
ss
je
cmp
repz
imul
enter
out
pop
xchg
aaa
hlt
push
outs
retf
repnz
cmps
scas
or
cwde
daa
jo
leave
retf
aas
ins
rcl
outs
pop
and
jb
xor
xchg
les
mov
call
call
mov
js
pop
push
inc
dec
cmps
add
xchg
and
pusha
and
dec
out
push
out
test
int
mov
aam
scas
cmps
lods
clc
jnp
movs
xor
ins
xchg
inc
in
cmp
rol
hlt
enter
inc
sub
xor
out
and
mov
cmps
jg
loope
mov
xchg
xchg
out
mov
xor
cmps
inc
mov
xchg
retf
in
push
outs
mov
imul
push
inc
pop
add
fld
aam
fst
rcl
not
out
cli
xor
data16
or
mov
jp
pop
test
jecxz
addr16
scas
test
sub
pop
sbb
inc
lahf
sbb
test
pop
test
jmp
popa
movs
dec
adc
mov
fidivr
sbb
jg
inc
into
daa
inc
aaa
xlat
in
movs
push
mov
mov
stc
xchg
ins
enter
pop
pushf
ss
cld
aad
call
mov
repz
shl
leave
ins
jmp
call
out
dec
enter
fucomip
mov
xchg
ds
xlat
pop
stos
shl
lock
retf
nop
pushf
pop
xchg
sub
and
and
cs
push
mov
push
dec
movs
inc
pop
xchg
movs
xor
rcl
sets
mov
fwait
lahf
cmc
mov
jo
mov
cmps
fwait
mov
add
add
not
push
sub
inc
dec
mov
sbb
clc
mov
push
mov
inc
loope
jno
out
push
inc
push
push
sub
popa
out
in
inc
dec
jl
pop
lsl
and
jl
dec
sahf
mov
int
in
pop
cmps
mov
mov
addr16
pop
addr16
sbb
and
mov
int3
(bad)
js
dec
arpl
jmp
cdq
mov
or
cmp
or
(bad)
pop
sbb
je
cli
push
daa
out
outs
mov
popf
jnp
pop
mov
adc
loopne
mov
and
push
retf
leave
mov
pop
cmps
in
fldz
test
aas
push
and
lahf
push
jne
cmps
dec
sbb
cmps
mov
mov
xor
test
fdivr
cmp
adc
pop
mov
push
shr
in
ja
adc
aad
inc
push
mov
add
cmp
mov
hlt
enter
xchg
imul
or
imul
sbb
pop
out
out
xor
pop
cmc
push
or
in
adc
div
or
lahf
cmp
data16
test
dec
pop
stos
push
mov
mov
mov
outs
sbb
mov
test
fdivr
(bad)
cmp
pop
sub
add
sub
pop
cmps
hlt
mov
dec
sbb
pushf
jg
daa
mov
enter
push
outs
repnz
aas
cwde
adc
popa
nop
push
mov
or
inc
sbb
jbe
pop
(bad)
push
les
fidivr
jecxz
ss
sahf
arpl
push
sbb
ins
outs
or
pop
or
xor
xchg
jbe
xchg
mov
ret
(bad)
cmp
icebp
dec
or
test
mov
sbb
push
push
inc
pop
test
pop
or
cwde
mov
fnsave
xor
fisttp
retf
div
mov
push
xchg
xchg
mov
mov
ds
iret
mov
sub
loope
and
fisttp
push
aas
fwait
shr
add
movs
xor
inc
jnp
call
das
not
mov
xor
repnz
pop
lea
dec
dec
shl
pop
mov
mov
imul
seta
and
fyl2x
or
scas
xchg
(bad)
lods
mov
add
pop
push
mov
mov
inc
cmps
jmp
mov
jmp
out
pop
pop
pop
push
in
pop
jns
or
int3
test
pop
pop
xchg
sub
stos
scas
xchg
and
and
int3
iret
mov
xor
jge
push
and
rcr
lods
inc
pusha
lods
pop
mov
out
stc
jecxz
int
add
pop
frstor
and
popf
mov
call
push
inc
test
pop
ds
inc
mov
mov
mov
mov
dec
pushf
arpl
inc
sbb
fwait
add
ja
loopne
out
test
inc
mov
dec
xchg
mov
push
add
add
push
push
ss
cmp
mov
cld
xchg
adc
pop
adc
xchg
pop
add
es
sbb
lods
dec
sbb
cmp
jg
jmp
sbb
sub
mov
add
test
jle
mov
(bad)
sub
movs
xor
(bad)
and
mov
cmp
dec
mov
xchg
or
ja
rcr
dec
sub
not
cmp
inc
jge
ja
mov
repnz
hlt
iret
or
leave
mov
jge
fadd
aaa
dec
jecxz
push
mov
mov
inc
addr16
xor
mov
xchg
sub
mov
mov
out
dec
(bad)
mov
push
stos
lods
and
cmp
mov
(bad)
scas
retf
pop
jbe
sub
push
sbb
mov
aaa
stos
rcl
jg
xchg
add
test
lods
jo
clc
mov
lds
loop
les
daa
push
mov
sbb
xchg
push
cmp
aam
push
sti
cmp
pop
arpl
xlat
and
xor
movs
out
cli
hlt
cmp
test
cs
dec
inc
add
mov
lods
lahf
xchg
loopne
or
xchg
dec
adc
cs
jno
lahf
mov
jns
fisub
jg
xor
cwde
xor
pop
jg
xor
xchg
pop
dec
xor
and
(bad)
inc
loop
ret
cdq
mov
sbb
xchg
mov
adc
mov
cld
sub
loop
dec
fistp
pop
loop
movhps
or
lods
stos
pop
dec
pop
jbe
fisubr
cli
mov
cld
loop
cmp
in
movs
es
inc
test
sub
push
or
in
add
shr
movs
stos
inc
mov
mov
xor
imul
aas
retf
push
int
ret
icebp
ss
xor
movs
or
in
add
mov
inc
xor
fnstenv
jo
mov
dec
xor
je
add
mov
adc
cdq
data16
xchg
dec
rcr
push
and
or
mov
pop
mov
mov
add
aaa
dec
int3
dec
jnp
pop
jl
dec
(bad)
in
leave
out
xchg
jne
mov
adc
test
lahf
xor
fldcw
enter
pop
dec
push
das
push
test
repz
cmp
stc
add
or
add
or
ret
lds
lds
imul
mov
mov
je
(bad)
jbe
push
xchg
and
in
sbb
test
je
mov
mov
int3
fistp
and
cmp
fsub
mov
stos
out
ja
xor
or
dec
sub
jns
inc
mov
push
into
push
mov
cwde
or
in
sub
cdq
cwde
movs
jle
cmp
fsubr
aam
jbe
sub
call
sbb
out
div
loop
movs
enter
fisttp
push
cmp
fabs
cmp
sub
pushf
lods
imul
leave
test
daa
xor
test
div
leave
inc
int
leave
adc
inc
gs
idiv
lds
ins
pop
dec
rcl
aaa
sbb
ins
gs
and
push
(bad)
dec
jp
mov
loope
imul
enter
loope
push
neg
add
adc
pop
cmps
mov
(bad)
pop
mov
int3
jae
jb
nop
push
sar
inc
cmps
jl
out
jge
fnstsw
xchg
mov
mov
in
aas
aaa
push
fcomp
cli
mov
fdivr
iret
sub
sub
test
cdq
xchg
xchg
dec
je
pop
bound
jecxz
add
jge
cdq
dec
imul
cmp
arpl
add
(bad)
pop
js
push
clc
movs
xchg
jle
stos
mov
outs
sti
aas
or
or
cli
xor
shl
sbb
xchg
repz
fistp
dec
(bad)
mov
sub
or
jbe
add
adc
cmc
jg
lahf
mov
imul
aam
xchg
sub
mov
dec
out
xchg
push
adc
int
lods
out
fild
adc
sub
out
mov
adc
in
jp
mov
xor
push
iret
iret
arpl
xchg
sbb
xor
mov
cmc
dec
ss
mov
push
jl
lds
xor
add
mov
cmp
(bad)
and
push
cmp
sahf
mov
cmp
in
retf
out
es
adc
jp
test
dec
daa
jecxz
ins
push
fs
loope
(bad)
inc
clc
mov
lea
call
pop
repnz
or
in
mov
retf
shl
ins
xor
xchg
fmul
and
scas
inc
dec
ds
loope
loopne
pop
cmp
push
mov
xchg
push
(bad)
into
cmp
mov
jnp
xor
jnp
inc
push
mov
std
cli
fs
sbb
out
pop
aam
push
lahf
xchg
ss
pminub
pop
sbb
mov
or
fld
call
in
add
sub
dec
inc
sbb
fld
pusha
mov
ds
jmp
lods
inc
cmp
add
jecxz
cli
out
add
div
stos
add
pop
js
(bad)
iret
jno
stos
stos
stos
and
cld
pop
lea
jl
movs
pop
test
dec
out
sub
adc
into
pop
or
loopne
call
pop
cmps
add
push
mov
or
adc
ins
nop
(bad)
xchg
icebp
and
xchg
and
jbe
test
cmp
xor
xchg
or
or
add
jae
movs
or
or
or
sub
mov
add
pop
or
data16
aaa
or
adc
arpl
push
nop
mov
dec
popf
into
mov
jno
push
in
cmc
cwde
fcmovne
(bad)
mov
xor
and
add
rdseed
(bad)
mov
test
add
pop
inc
outs
mov
push
push
cmp
ja
stos
mov
jnp
stc
jne
aaa
lds
mov
lods
rcl
in
mov
pop
add
std
lea
enter
xchg
lods
gs
mov
dec
jno
xor
fnstenv
dec
sbb
mov
fnstcw
das
js
arpl
(bad)
jns
outs
add
jnp
sahf
adc
or
scas
xchg
in
pop
rcl
mov
shl
sbb
push
outs
push
test
xchg
jmp
es
xor
push
ss
and
cmps
lds
inc
xor
sub
ds
mov
call
iret
sbb
sub
sub
xchg
pop
sbb
pushf
push
mov
call
pop
shl
xchg
test
sbb
mov
adc
xor
mov
mov
jno
add
lahf
adc
rcl
push
adc
inc
ins
jecxz
ret
loope
add
inc
mov
xchg
(bad)
sti
mov
xchg
jo
mov
inc
adc
jge
or
cmps
xor
addr16
stos
test
cmpps
ds
vpmulhuw
adc
add
aam
xchg
(bad)
mov
es
sub
mov
les
sub
xchg
clc
loope
ss
out
xchg
mov
inc
push
jmp
inc
pusha
test
loop
outs
push
jge
inc
jae
jb
pop
xlat
dec
mov
pusha
xchg
mov
inc
add
pushf
call
mov
int
jns
sbb
push
push
imul
cmc
mov
rcr
dec
test
push
mov
inc
cmp
lahf
sar
mov
push
xchg
stos
arpl
push
test
pop
add
xor
fbstp
pop
xlat
cmc
push
ret
mov
in
lea
daa
fcomp
stos
clc
sahf
outs
push
mov
sbb
scas
sub
mov
fst
jo
sbb
int
call
mov
adc
sbb
sbb
mov
adc
sub
jo
push
or
cmp
xchg
loopne
push
push
inc
inc
inc
and
inc
mov
xor
in
xchg
xchg
or
into
mov
call
inc
xchg
jle
add
mov
out
mov
out
arpl
(bad)
push
mov
in
lods
movs
imul
pop
inc
icebp
mov
inc
movs
push
je
pop
pop
shl
cld
std
idiv
fsubr
cmps
or
gs
adc
pop
mov
outs
gs
(bad)
std
xchg
int
xchg
data16
xor
push
outs
inc
mov
bnd
jecxz
pop
fcomp
jl
retf
pop
int
xchg
pop
aas
cmc
mov
pop
jo
push
pop
fstp
es
push
aaa
hlt
or
and
in
js
pop
lds
add
inc
xor
push
test
stos
test
and
(bad)
jmp
(bad)
xchg
or
inc
sar
pop
and
lds
nop
dec
cmp
jecxz
push
pushf
imul
inc
mov
lock
sub
inc
fstp
cmp
fnstcw
frstor
test
outs
push
enter
adc
fld
cmc
mov
push
les
les
jo
sub
ret
clc
popa
mov
jbe
jmp
arpl
sub
fst
jnp
sub
sahf
mov
aam
mov
adc
fwait
sub
xchg
sub
ret
inc
and
xchg
lods
xor
pop
ror
(bad)
fst
mov
push
mov
lock
mov
fnstenv
inc
stos
imul
imul
xor
jmp
add
rcr
push
or
mov
inc
or
sbb
mov
push
and
mov
hlt
cmp
push
add
add
(bad)
fs
xchg
push
(bad)
sub
mov
jb
jle
jl
scas
or
sub
add
call
mov
int
gs
std
hlt
jecxz
ins
mov
mov
call
sub
(bad)
xchg
xor
pop
sub
lds
push
pop
int3
cwde
cmps
xchg
retf
mov
ss
jne
leave
jmp
ds
pop
push
and
fcom
(bad)
ds
cld
mov
das
xor
cmp
lods
outs
gs
repnz
in
adc
jp
cmps
push
popf
dec
shl
leave
lods
and
sub
cmp
div
pop
pop
pop
mov
mov
test
xor
fs
popa
xchg
xor
cmps
sub
leave
(bad)
push
mov
mov
idiv
and
lods
xor
jbe
cmps
pop
sbb
ja
leave
and
inc
dec
pushf
push
xor
clc
fldcw
lods
(bad)
outs
pop
lahf
in
icebp
and
mov
jmp
fimul
(bad)
mov
cmp
dec
mov
stc
test
push
aas
xor
lods
mov
call
pop
jmp
inc
bound
cmc
inc
jmp
jbe
jno
pop
leave
inc
fcmovbe
pop
jns
xor
and
inc
leave
lds
pop
adc
js
mov
xor
mov
es
data16
cvttps2pi
imul
dec
sahf
stos
iret
(bad)
mov
leave
adc
mov
enter
shl
adc
pop
test
or
mov
and
mov
jecxz
aad
inc
ss
stos
push
jl
arpl
jmp
fdivr
cmp
into
test
jne
mov
push
add
fnsave
add
in
shl
inc
add
sbb
fisub
call
scas
add
xlat
int3
rol
mov
or
add
add
adc
mov
dec
fwait
mov
xor
dec
xlat
and
mov
inc
mov
inc
sub
aad
cmp
jbe
test
or
out
aad
mov
sbb
popf
lahf
shr
sub
push
pop
scas
(bad)
cmp
cmp
mul
test
mov
cmp
daa
push
cmp
pop
movs
mov
dec
je
repnz
test
pop
js
pushf
fwait
adc
je
sub
pop
ret
das
lea
mov
inc
xchg
or
daa
mov
xchg
xor
fisttp
test
lea
in
test
sub
inc
in
and
mov
jmp
movs
adc
clc
(bad)
jp
cmp
fs
inc
push
push
fwait
std
es
loope
pop
(bad)
or
lock
push
(bad)
shl
popa
xor
cmp
sbb
(bad)
scas
pop
ins
fbstp
and
fld
(bad)
jecxz
xlat
lods
test
xor
sbb
sti
xchg
(bad)
movs
data16
icebp
or
jb
jae
add
dec
push
aam
sbb
sub
xchg
ins
push
push
push
(bad)
int3
inc
out
sbb
push
cmps
pop
movs
push
pop
and
sub
dec
mov
push
xlat
cmps
mulps
push
or
push
(bad)
and
paddsb
(bad)
push
nop
mov
sub
mov
jp
ins
and
sub
enter
xchg
jecxz
inc
clc
mov
push
fsub
dec
pop
(bad)
imul
test
adc
mov
call
ja
rol
sbb
jmp
sub
stc
jb
ret
fwait
outs
pop
call
mov
aaa
popf
es
add
fsubr
es
mov
stos
addr16
ret
(bad)
fld
adc
lock
pop
dec
std
in
cmp
outs
sbb
jge
and
mov
push
adc
dec
clc
dec
jns
add
and
and
mov
fwait
movs
fwait
sbb
mov
pop
into
cmp
inc
in
ins
cmp
es
js
inc
or
cmps
ja
(bad)
mov
std
imul
jns
mov
and
jmp
mov
cmc
xchg
icebp
dec
cmps
add
cdq
jno
fistp
pop
and
not
pop
out
inc
inc
(bad)
pop
and
ret
mov
xchg
aad
mov
xor
rcl
inc
or
xchg
pop
sbb
cmp
fstp
loopne
ins
je
rol
inc
xlat
aas
or
jae
fwait
test
dec
popf
ret
adc
push
mov
mov
cmp
inc
nop
gs
jae
mov
dec
pushf
leave
pop
push
(bad)
sbb
jmp
and
cmp
xchg
fstp
out
jle
iret
dec
cwde
push
add
js
fld
stos
jp
movs
stos
lods
lods
sbb
(bad)
adc
cdq
push
sbb
sub
movs
mov
push
iret
mov
xlat
cmp
and
cmp
fidivr
pop
stc
fwait
dec
ins
test
popa
mov
retf
mov
fs
sti
inc
inc
cdq
dec
shl
icebp
mov
enter
add
das
jne
movs
xchg
inc
daa
lahf
stc
std
into
sbb
add
movs
add
scas
lock
push
mov
cmp
in
mov
bound
cmp
loope
enter
out
inc
inc
bound
push
xchg
aad
pop
push
inc
stos
les
fbstp
push
ret
push
and
push
pop
xchg
mov
repz
push
jae
in
shl
mov
enter
adc
call
add
and
jge
movs
out
pushf
cmp
fisub
out
jmp
enter
or
test
loopne
push
mov
stos
ret
fimul
xchg
jge
hlt
movs
dec
js
and
aam
and
rcl
dec
out
pop
sub
fisttp
popa
lock
sbb
mov
retf
in
jmp
shr
int
mov
sub
hlt
mov
and
or
sbb
movs
xchg
push
cli
std
retf
lock
ret
adc
pop
xor
adc
cdq
jns
in
bnd
mov
or
and
mov
in
scas
icebp
xor
pop
push
fdiv
xchg
mov
fild
fwait
push
aad
(bad)
in
test
add
add
scas
popf
cwde
sbb
dec
test
gs
mov
dec
test
inc
inc
aam
xor
cmp
es
add
data16
push
adc
jle
out
daa
pop
and
cmp
int
sub
push
lock
pop
xor
jb
xchg
pushf
cmp
sub
popa
in
xor
cmp
or
(bad)
mov
pop
cmp
mov
mov
cmp
inc
xchg
dec
xor
(bad)
int
adc
in
mov
ja
and
bound
scas
sub
lods
je
cs
ja
sbb
mov
push
cdq
shl
bound
jno
jmp
test
mov
leave
ins
frstor
xchg
int3
jle
cmp
add
in
pop
inc
mov
jb
cmp
(bad)
push
push
test
push
sbb
ins
xor
mov
mov
aam
(bad)
test
loop
sub
inc
repnz
sub
scas
sahf
fcom
pop
inc
sbb
(bad)
not
cmps
fidivr
or
cmp
xchg
iret
xchg
ficom
ror
push
and
pop
inc
das
pop
int3
frstor
ds
repnz
mov
mov
push
in
xor
xchg
mov
push
mov
js
mov
mov
or
cli
lahf
inc
sub
jl
fcomp
xor
cdq
push
sub
jne
ins
or
test
mov
pop
loopne
in
adc
mov
inc
popa
mov
sub
ins
adc
in
mov
xchg
loopne
adc
pop
fnsave
imul
(bad)
xor
out
mov
or
xlat
gs
aam
cwde
pop
or
jecxz
lds
mov
cmp
pop
and
mov
and
in
mov
push
in
add
mov
es
into
in
mov
stc
and
pop
sbb
pop
pop
sar
call
(bad)
pop
push
cmp
mov
cmp
adc
inc
hlt
pop
jecxz
clc
inc
cwde
jp
mov
mov
dec
pop
lock
sub
cs
and
pop
dec
ret
nop
jo
pusha
inc
cld
mov
lea
(bad)
cmp
xchg
hlt
and
fs
and
jmp
(bad)
ins
(bad)
pop
xor
sbb
push
(bad)
mov
dec
lods
nop
int3
(bad)
sbb
push
into
inc
mov
push
dec
int
fstp
(bad)
mov
sub
inc
sbb
aaa
pop
sbb
out
inc
int3
lea
mov
leave
xchg
in
shr
xor
mov
inc
(bad)
hlt
fstp
pop
int
lods
push
aam
pop
call
jl
clc
cld
push
lock
rol
sub
xchg
fdivrp
add
mov
loopne
in
jns
sub
loope
popa
cmp
xchg
lahf
dec
xchg
add
rcr
int3
xchg
xor
test
lgs
pop
sbb
xchg
into
jp
ret
adc
pop
sub
ins
and
retf
test
lock
add
pop
mov
add
jle
sti
call
das
mov
cmp
ins
pop
icebp
(bad)
mov
int
stos
mov
ror
jns
mov
xor
std
test
aad
cmp
mov
pop
adc
xor
test
adc
int
inc
and
pop
mov
lock
dec
sbb
dec
mov
inc
ins
mov
add
sub
adc
xor
mov
iret
cmp
aad
(bad)
cwde
adc
mov
(bad)
test
xchg
dec
out
pop
cmp
outs
cwde
mov
push
push
(bad)
(bad)
call
repz
push
sbb
mov
dec
mov
pop
lahf
push
clc
aas
imul
mov
jp
popa
mul
cwde
cmp
aas
fsub
sbb
enter
out
and
repz
into
cli
push
cmp
retf
push
xchg
mov
cmp
mov
lds
shl
fmul
call
sbb
cmp
or
or
cmc
jg
iret
dec
and
adc
xor
and
or
dec
add
add
sbb
aam
or
jecxz
jecxz
shr
stos
push
push
add
in
call
in
out
or
mov
cmp
and
cmp
and
add
pop
pop
mov
mov
adc
inc
aam
pusha
sbb
leave
nop
fstp
or
stos
mov
ja
call
inc
mov
(bad)
scas
cmc
repz
(bad)
cmp
push
inc
inc
les
push
pop
cmp
aam
or
mov
gs
sub
inc
and
pop
adc
fstp
cdq
dec
iret
mov
cmp
adc
out
xchg
ret
imul
pop
mov
hlt
leave
es
fild
push
cmp
dec
lahf
xor
sub
imul
inc
dec
mov
sbb
sti
(bad)
sub
push
ds
int3
push
(bad)
sub
jmp
popf
nop
lea
adc
add
mov
call
cmps
xchg
fadd
mov
lea
pop
cmp
jo
dec
popf
jge
mov
add
xchg
icebp
sub
inc
cs
shr
lahf
sub
ror
cmp
jmp
nop
call
cmp
not
ins
pusha
or
xchg
cmps
inc
in
loopne
cmps
mov
pop
mov
cmps
pop
lods
cmc
and
sbb
and
mov
pop
sub
cdq
in
jmp
xor
xchg
mov
(bad)
lods
stos
movs
dec
push
and
stc
loope
pop
lea
inc
xchg
aad
mov
imul
call
pusha
mov
arpl
arpl
xchg
ficomp
call
addr16
cmp
shl
aas
jb
mov
push
loopne
ins
gs
mov
inc
ins
pushf
mov
shr
add
ficomp
jnp
ins
dec
push
aaa
mov
test
dec
or
sub
fidivr
cmc
inc
mov
or
or
mov
adc
int3
test
fisub
ds
push
adc
mov
lahf
pop
or
dec
pop
ror
and
retf
neg
fsubr
int3
and
push
sbb
(bad)
int
xchg
cmp
jb
inc
ins
sub
sbb
xchg
leave
fimul
fmul
and
pop
shl
pop
and
and
cmp
jmp
mov
cmps
div
push
jmp
call
push
retf
dec
repz
daa
and
sub
xor
rol
cmps
inc
push
aaa
aaa
rcr
xchg
or
call
jg
push
pop
push
xchg
pop
mov
cli
movs
sbb
adc
inc
jo
xor
test
or
jmp
mov
leave
mov
adc
inc
aas
add
xchg
sub
inc
shl
cdq
ret
in
(bad)
in
push
cld
std
data16
xor
out
or
adc
ret
std
mov
fsub
mov
daa
pushw
shl
retf
fistp
icebp
ret
stos
aaa
ror
aad
into
stos
or
jne
sub
test
mov
in
sub
or
nop
loopne
mov
push
and
cld
cmps
sub
imul
fisub
and
ficomp
cmp
sbb
cmp
test
add
push
out
loopne
dec
ret
sbb
inc
mov
scas
xor
cdq
sub
pushf
cs
(bad)
je
inc
sub
push
mov
fyl2xp1
mov
cs
pop
mov
sbb
mov
nop
mov
(bad)
jmp
(bad)
in
mov
out
jp
je
mov
xchg
jle
add
pop
jge
cwde
in
fimul
fs
mov
ins
adc
inc
sub
dec
dec
pop
sbb
inc
add
shr
aam
out
idiv
push
nop
xchg
sar
jo
inc
loop
cmp
leave
push
out
pop
test
js
test
pop
xchg
pop
imul
adc
enter
call
add
lods
jp
pop
icebp
xor
jns
imul
test
sub
(bad)
xor
rol
pop
mov
test
inc
jmp
xor
mov
inc
lds
inc
bound
fdiv
rcl
sbb
pop
mov
sahf
out
push
mov
adc
in
sub
fwait
and
cld
aam
(bad)
mov
dec
adc
xor
jbe
adc
sti
test
push
shl
xor
xchg
mov
out
fwait
(bad)
pop
nop
cmp
jbe
add
mov
cmp
data16
int
xchg
adc
mov
add
pop
pop
push
jns
sbb
(bad)
fnstsw
mov
fcomip
and
or
cwde
jo
dec
(bad)
fbstp
dec
jmp
jl
jmp
ins
out
daa
mov
xor
call
fidivr
not
xchg
push
cdq
jp
sahf
nop
iret
fmul
jns
pop
mov
jl
push
lds
mov
mov
lahf
cmps
push
push
mov
jmp
retf
out
ja
jno
fcom
nop
or
in
cmc
jle
push
mov
xchg
sti
sub
push
movs
xchg
dec
jmp
sahf
test
cmc
fist
push
dec
sti
mov
push
bound
jmp
dec
jg
push
test
mov
pop
jne
mov
mov
mov
mov
push
jnp
xlat
icebp
sub
xchg
div
push
adc
and
mov
and
lock
mov
xchg
jmp
les
test
xchg
and
mov
stos
aas
xchg
call
or
sahf
jecxz
inc
mov
dec
clc
inc
add
lods
sbb
push
jo
fimul
out
inc
push
add
lods
out
sbb
adc
lods
cmc
shl
out
cmp
and
fist
js
in
mov
das
fdivr
sub
rcr
shl
cmps
jns
sub
clc
sti
popf
mov
outs
push
and
add
addr16
retf
sbb
pop
adc
xchg
push
and
mov
jecxz
in
xchg
jle
jo
cmp
fs
in
je
or
imul
pop
add
pop
enter
mov
mov
(bad)
or
lea
shr
cmp
jle
push
and
xchg
pop
push
retf
in
rcr
jno
cmp
mov
mov
jns
sub
push
mov
fcmove
pusha
mov
leave
xchg
data16
das
call
sbb
push
xor
jno
pop
pop
repz
mov
aam
mov
arpl
daa
jo
test
jns
dec
adc
sub
in
aaa
mov
add
sti
jo
fisub
ret
or
dec
sbb
mov
mov
scas
xchg
cmc
jbe
daa
add
hlt
push
jge
dec
ja
mov
dec
xor
sbb
rcl
mov
movs
xor
rcl
mov
or
lahf
dec
cdq
loop
shr
mov
adc
add
mov
xor
cwde
pop
(bad)
je
or
and
repz
std
out
leave
shl
aam
and
popf
and
fiadd
push
inc
dec
sub
pushf
push
jmp
and
pop
or
mov
mov
sbb
test
push
or
add
dec
ds
loop
cld
cli
ins
psubsb
jle
xlat
and
adc
(bad)
leave
stc
mov
dec
ss
pop
ins
pop
xor
jne
and
mov
sbb
inc
das
retf
push
and
adc
pop
addr16
ret
mov
adc
add
cmp
pop
mov
and
fnstsw
movs
jns
loope
pop
xchg
cld
dec
bound
dec
imul
inc
in
mov
outs
icebp
push
mov
xchg
sub
lods
je
inc
iret
(bad)
jle
dec
leave
loope
mov
ret
test
sub
cmovns
xlat
mov
pop
push
(bad)
imul
fdiv
loope
jmp
dec
dec
(bad)
push
(bad)
fucomi
jbe
pop
mov
pop
cmp
ins
arpl
mov
mov
popa
fcom
repz
in
ja
cmp
xor
dec
aam
rol
sbb
push
inc
cmp
dec
add
mov
jl
rcr
and
push
and
retf
cmp
test
in
arpl
mov
ins
cli
jl
test
dec
sbb
mov
test
sub
jge
sbb
push
(bad)
adc
(bad)
in
sbb
pusha
mov
mov
add
(bad)
dec
jae
mov
loope
cmp
fisttp
in
jmp
scas
and
lods
push
cld
(bad)
ins
push
or
aaa
dec
fdivr
inc
imul
inc
jmp
cmp
fdivr
cmp
out
xor
(bad)
push
pusha
fld
push
int3
jl
ret
and
and
adc
loopne
mov
dec
sahf
mov
mov
fmul
xchg
and
outs
xor
sahf
outs
xchg
iret
mov
loopne
call
cmp
mov
mov
jbe
jle
stos
dec
outs
push
mov
and
fdiv
sbb
cld
pusha
imul
test
daa
loop
pop
cmp
sbb
or
fs
sti
mov
out
repz
gs
shl
stos
sbb
es
push
(bad)
fldenv
push
test
scas
retf
aad
and
sbb
je
sub
mov
add
add
loope
popa
and
xchg
or
test
mov
and
mov
in
xor
xchg
(bad)
xchg
shl
adc
xchg
hlt
test
add
adc
sbb
sub
xchg
adc
or
push
daa
add
sub
icebp
sbb
push
adc
rcr
sbb
sub
adc
pop
loope
out
inc
xor
adc
shl
add
and
iret
inc
in
sahf
loop
(bad)
cmps
test
mov
sub
sahf
adc
add
mov
rcl
xchg
inc
lods
js
es
and
cmp
les
or
mov
xor
sbb
aad
loop
shr
into
aas
arpl
mov
sti
add
sbb
push
fwait
retf
and
clc
test
ret
fmul
rcl
scas
lods
scas
inc
cmc
add
inc
dec
and
cmp
rcr
push
es
in
add
cmps
ss
test
or
imul
inc
and
aaa
neg
ucomiss
lods
pushf
(bad)
push
fmul
jae
pop
aaa
enter
imul
mov
(bad)
fild
test
je
push
inc
gs
or
lahf
fwait
cmps
jno
leave
sub
jns
mov
adc
imul
sar
or
add
retf
lea
stc
jl
inc
rcl
int
(bad)
call
(bad)
js
or
xchg
test
int3
xchg
cwde
js
icebp
cwde
xchg
jno
inc
mov
jno
fcomp
jno
call
cmp
js
dec
add
sbb
jns
int3
cmps
cmp
sub
and
aaa
sahf
sub
mov
mov
xchg
or
push
fnstsw
jmp
(bad)
jl
hlt
add
aaa
adc
fild
(bad)
aas
lods
test
push
cmps
aad
pop
add
push
dec
in
push
imul
in
cld
movs
jl
retf
pop
sti
scas
popa
loope
pushf
mov
outs
loopne
call
pushf
pop
cmp
(bad)
jmp
xchg
mov
inc
fistp
aaa
pop
xor
test
xchg
lods
stc
mov
xor
cmc
or
cdq
retf
cmps
ffreep
dec
cmp
dec
imul
mov
jns
xchg
idiv
pop
int
cmp
push
mov
nop
sbb
push
jne
mov
sti
aaa
xor
xlat
mov
sub
mov
push
js
mov
fwait
push
test
dec
push
js
fwait
cmp
mov
inc
ret
or
das
imul
and
pop
mov
jae
jno
data16
loop
scas
rcl
pusha
sti
pop
add
dec
out
fldcw
xor
mov
frstor
mov
mov
fwait
movs
adc
lea
loop
arpl
add
js
test
sub
add
cmc
add
out
xor
jnp
icebp
inc
adc
enter
imul
xor
ins
stos
shr
mov
xchg
outs
add
frstor
mov
or
push
sub
xchg
mov
or
jo
jmp
mul
cdq
imul
pop
mov
rcl
mov
pop
mov
pop
nop
dec
or
mov
sub
sar
push
retf
or
jne
xchg
repnz
push
xlat
sbb
rcr
cmp
xor
(bad)
cli
cdq
aas
sub
and
sub
scas
movs
jno
push
outs
imul
mov
clc
xor
xchg
outs
mov
jmp
imul
lahf
jo
data16
imul
xor
mov
push
xor
daa
shl
sahf
inc
mov
inc
push
in
xchg
cmp
and
shl
fistp
push
(bad)
pop
and
xchg
sbb
pop
dec
mov
xor
adc
mov
and
xor
sar
xchg
sub
or
pushf
jnp
idiv
jmp
add
loope
retf
in
data16
mov
jns
cmp
xchg
push
aaa
mov
xchg
xchg
sub
mov
mov
fadd
lds
push
push
repz
sahf
adc
mov
aaa
mov
pusha
les
shl
xlat
movs
push
fild
cdq
push
(bad)
mov
test
loop
or
mov
shl
or
dec
imul
mov
test
cmp
cld
icebp
inc
mov
mov
clc
and
and
jno
jo
sbb
pop
xor
(bad)
add
std
shr
lock
dec
dec
or
and
jecxz
adc
xchg
hlt
mov
je
xchg
mov
jbe
jecxz
jbe
enter
jp
xchg
cmp
mov
movs
adc
jge
push
rol
cmp
xchg
jp
or
inc
aad
dec
add
push
(bad)
mov
mov
cli
shl
xlat
jmp
xchg
pop
push
mov
xchg
dec
inc
xchg
movs
je
xor
les
dec
inc
cmc
fistp
fcom
pop
pop
movs
pop
pop
sbb
sbb
sar
mov
imul
cmp
out
adc
fidivr
jnp
in
ins
adc
bound
ret
icebp
inc
add
lds
mov
mov
jne
iret
mov
xchg
sbb
sbb
aas
in
loopne
push
rol
adc
(bad)
push
mov
pop
or
cmps
adc
mov
push
pop
arpl
ss
cwde
imul
adc
pop
gs
xchg
jns
das
mov
xchg
popa
imul
mov
das
or
push
pop
inc
mov
add
pop
lea
mov
pop
cmps
adc
push
fwait
cmp
adc
mov
mov
inc
pop
dec
fld
jb
jno
jbe
cld
mov
js
out
sbb
lahf
out
(bad)
mul
cmps
inc
call
gs
push
mov
jle
ds
int3
adc
out
jb
mov
mov
or
push
jle
dec
sahf
lods
xchg
jbe
dec
jmp
fcmovnbe
pop
mov
pop
daa
test
pop
mov
mov
int
cwde
xchg
repnz
dec
shl
rcl
push
and
and
and
pop
sar
xor
aas
sar
sbb
movs
or
bound
mov
sbb
inc
lahf
cs
jl
jae
ror
mov
arpl
sbb
aad
cwde
adc
movs
pop
sub
cli
nop
or
movs
mov
aad
cmp
cmp
push
enter
mov
das
cdq
push
dec
cmc
loop
and
cld
push
mov
into
xchg
int3
fisubr
pop
push
(bad)
iret
xchg
xchg
xchg
shr
mov
dec
xchg
aaa
push
mov
mov
mov
or
repz
cmc
stos
sbb
je
sub
ja
pop
or
test
aam
jbe
pusha
jecxz
xchg
adc
shl
fcom
fst
sbb
aaa
(bad)
adc
inc
dec
inc
pop
xlat
std
mov
push
cmp
ja
enter
(bad)
dec
or
imul
sti
push
or
xchg
in
xchg
nop
cmc
dec
cmp
or
stc
data16
into
sbb
and
les
lahf
imul
repnz
cmp
arpl
xor
(bad)
cmp
sbb
dec
test
ud2
mul
dec
add
pusha
icebp
cmp
add
out
test
imul
sti
mov
clc
imul
icebp
cmps
ror
outs
sub
mov
cld
xchg
push
dec
jbe
xchg
mov
(bad)
fs
ds
repnz
lds
bound
push
jl
shl
cli
scas
(bad)
das
test
fisubr
or
lea
(bad)
dec
mov
sub
dec
retf
inc
mov
les
pusha
push
mov
or
dec
add
or
mov
sub
ja
xor
and
aas
sub
mov
xor
pop
pmaxsw
imul
xor
fcomp
mov
cmp
and
adc
repz
in
add
push
neg
ds
push
aad
popf
jle
rol
movs
and
into
test
out
in
sti
jp
mov
retf
inc
cmp
mov
add
push
or
gs
jo
out
nop
sbb
retf
out
cmp
out
aam
stos
int
push
jmp
(bad)
neg
sbb
shl
dec
mov
sbb
push
icebp
and
sar
mov
ret
jmp
popa
mov
pop
mov
add
fucom
in
ins
shr
out
aam
mov
aam
xor
sbb
cmp
or
dec
lds
and
setbe
in
sbb
cs
push
aaa
jle
ins
je
daa
or
test
jae
(bad)
std
scas
hlt
adc
xchg
int3
loope
add
shl
fstp
daa
inc
fisub
mov
scas
fist
clc
imul
jp
jnp
adc
inc
add
ins
cwde
aad
call
addr16
dec
outs
aam
aam
push
pop
sbb
xchg
out
popf
cwde
xlat
nop
jno
jge
jecxz
cmp
push
ret
idiv
aad
dec
or
adc
imul
xlat
cmp
outs
call
pop
jb
scas
lahf
lods
(bad)
push
or
out
lock
mov
call
icebp
jb
ins
pop
xor
xchg
cwde
outs
jp
sbb
int3
fwait
lock
sub
out
and
jge
fisubr
mov
call
fcmovnu
add
dec
mov
cmp
mov
cmp
int3
push
fmul
dec
mov
in
mov
sub
out
push
cwde
hlt
mov
xor
hlt
out
push
dec
mov
fstp
fwait
dec
cmps
and
iret
mov
inc
add
lods
push
icebp
xor
dec
aam
pop
aas
mov
sub
mov
std
cmp
cmp
mov
mov
inc
cmp
iret
aas
retf
cs
jp
int3
pop
jmp
sahf
cmp
sbb
retf
or
adc
fadd
mov
mov
cmp
pop
add
jno
imul
cmc
jp
inc
jno
icebp
(bad)
idiv
lahf
sub
test
fmul
sbb
dec
sbb
loopne
pop
cmp
xchg
add
data16
or
adc
ret
push
lahf
pop
outs
into
xchg
aaa
pop
xchg
adc
sbb
outs
xchg
popa
(bad)
jne
pushw
and
sub
test
sbb
inc
ja
adc
jl
add
xchg
in
sbb
and
sbb
mov
jb
repz
mov
cmp
cld
mov
je
aas
and
mov
mov
adc
mov
out
dec
loop
out
dec
or
je
dec
mov
int
pop
add
or
stc
lock
or
cmp
and
rcr
dec
sub
mov
push
push
mov
dec
inc
iret
mov
xchg
in
xchg
mov
icebp
xchg
mov
test
adc
or
push
jg
xchg
or
in
data16
adc
inc
adc
pop
add
mov
es
adc
loopne
mov
cmp
and
int3
mov
pop
xchg
(bad)
cmc
test
test
out
fimul
in
aaa
fwait
push
adc
ret
into
push
inc
xchg
movs
jg
rcl
and
and
das
es
ja
jmp
mov
inc
stos
loopne
fwait
(bad)
mov
jns
push
div
aad
dec
jp
out
sub
adc
stc
or
sub
in
dec
xor
inc
cmps
ret
call
mov
outs
jecxz
sub
out
mov
xchg
(bad)
ds
adc
jge
leave
cmp
retf
aam
xchg
cmc
mov
pop
aaa
push
jb
fs
out
stos
iret
cld
pop
xchg
pop
jp
outs
xchg
movs
jbe
dec
mov
js
push
cmc
idiv
inc
out
lods
cmp
jne
mov
daa
rol
sbb
xchg
inc
dec
dec
mov
iret
jae
xchg
test
inc
add
dec
adc
ficom
xchg
add
ins
add
add
in
jne
rcr
test
pop
lods
jp
pushf
sub
imul
jb
popa
xor
mov
mov
ror
mov
inc
mov
ins
pop
and
pop
xchg
loop
xor
enter
jno
add
in
ins
mov
rcr
stos
and
ins
mov
sbb
gs
or
mov
cmp
push
mov
cmp
sbb
jb
aaa
inc
xchg
mov
scas
inc
push
mov
sub
push
mov
cld
mov
test
shl
push
xchg
pop
jb
dec
into
stos
adc
stos
lea
jns
stc
inc
pop
inc
mov
add
mov
push
sbb
add
xor
mov
push
or
jl
and
out
icebp
mov
dec
leave
or
mov
jge
clc
adc
fmul
jns
cmp
cwde
pop
(bad)
push
dec
cmp
cmp
jmp
adc
and
out
and
jae
cmp
dec
mov
jg
or
add
es
nop
lods
jg
sub
iret
cdq
mov
std
out
je
cmps
sub
retf
push
mov
pushf
pop
lods
cmpxchg
mov
es
mov
or
xchg
fnstcw
fild
fmul
clc
(bad)
sub
and
pop
sbb
jb
call
sahf
push
cmps
dec
movs
jl
mov
mov
inc
inc
lods
(bad)
movs
pop
add
(bad)
aaa
mov
adc
cmps
(bad)
enter
push
xor
xor
add
ret
fldcw
dec
das
cmp
clc
sub
mov
shl
cmc
push
push
add
test
inc
add
mov
outs
inc
dec
retf
mov
jmp
stc
shl
adc
(bad)
cmp
push
cwde
push
dec
inc
mov
aad
dec
cmp
rcr
fnsave
sub
mov
lods
(bad)
jb
cmc
push
and
xchg
push
or
out
pop
mov
ja
ror
xor
fnsave
xchg
push
xchg
xor
outs
repz
dec
sbb
pusha
aam
xchg
xor
ds
ror
jbe
clc
js
mov
repnz
les
pop
pop
mov
cld
mov
ja
in
lods
xor
cmc
xchg
cmc
ins
jp
lods
retf
pop
icebp
xor
cmp
test
mov
or
adc
sbb
pop
sahf
pop
addr16
xchg
jecxz
dec
or
not
xchg
pop
push
stos
push
pop
and
jle
in
or
or
mov
sub
push
push
pushf
pop
push
xchg
jmp
jbe
sbb
xchg
dec
jge
xchg
jmp
xor
movs
push
sbb
cmp
in
mov
dec
lods
mov
imul
ds
dec
rcl
hlt
mov
xor
ss
jne
and
mov
xor
pushf
sbb
xchg
mov
push
je
mov
enter
ins
imul
pusha
add
jae
push
xor
add
lea
xchg
or
int3
sar
test
ins
add
loop
xchg
pop
add
jne
arpl
aaa
jb
sbb
ror
or
xchg
or
retf
mov
movs
xchg
popf
push
rol
(bad)
in
mov
and
repz
cmp
repz
mov
push
jbe
into
jno
dec
je
retf
jo
in
push
sub
hlt
adc
xchg
ja
pop
jg
add
movs
push
push
clc
(bad)
loope
lahf
xlat
fcmovbe
cmp
jmp
dec
out
lods
mov
dec
xor
sub
lock
push
xor
(bad)
sub
fdiv
(bad)
mov
jbe
pop
xchg
(bad)
mov
and
icebp
out
add
xchg
pop
sahf
das
xchg
ins
mov
adc
push
inc
popa
in
sub
lods
jbe
enter
pop
mov
pop
mov
or
mov
push
pop
jp
and
pusha
imul
xor
sub
mov
jns
sbb
pop
out
call
sbb
movs
mov
shl
mov
pop
aaa
fcmovbe
mov
xchg
in
mov
xchg
loope
popa
sub
out
inc
test
pop
test
retf
les
and
jp
imul
add
imul
(bad)
(bad)
out
sar
leave
cmps
ror
icebp
push
push
jmp
mov
push
enter
inc
dec
or
sub
push
nop
add
cmp
popa
sbb
xchg
and
movs
(bad)
data16
lea
pop
into
gs
les
out
pop
(bad)
test
(bad)
movs
cli
xchg
xchg
aam
sub
jb
fwait
mov
fcomp
push
in
cmps
fwait
stc
sbb
setno
pop
pop
je
call
sub
enter
clc
aad
xor
cmp
ja
add
push
or
jle
cld
pop
mov
in
xsha256
cmps
xchg
sbb
(bad)
fs
jns
cmp
adc
cli
mov
(bad)
mov
push
or
xor
data16
mov
shl
in
fidivr
pop
icebp
mov
aaa
(bad)
hlt
loop
sub
movs
inc
push
sub
movs
inc
repz
dec
ja
jmp
and
pop
or
mov
mov
int
xchg
gs
out
mov
cmp
sub
sbb
mov
xlat
and
xchg
ss
fnstenv
add
mov
mov
cmc
hlt
movs
in
js
pop
je
aas
sub
push
loopne
repnz
pop
dec
setl
cld
fstp
rcr
pop
xchg
or
inc
xchg
pop
pop
pop
and
ret
retf
aas
sub
inc
in
in
inc
int
mul
adc
jmp
mov
inc
mov
sbb
mov
(bad)
mov
fst
mov
push
sahf
xchg
retf
mov
leave
sbb
pusha
es
(bad)
daa
ins
movs
out
dec
(bad)
push
mov
retf
jb
call
jmp
rcl
in
add
push
adc
test
out
push
and
add
bnd
call
add
in
adc
jbe
scas
mov
jge
xlat
into
mov
call
nop
(bad)
out
iret
mov
mov
sub
push
lea
into
repz
and
addr16
jg
mov
loope
adc
loope
jbe
jecxz
push
ss
add
pop
jo
lea
dec
fisub
ss
sbb
sbb
mov
inc
in
push
pop
fcomip
int
cmp
adc
jecxz
call
sbb
adc
in
out
jg
mov
(bad)
mov
gs
pop
aam
or
push
fwait
aam
dec
or
mov
xchg
popf
mov
hlt
xor
push
stos
or
dec
push
out
push
xchg
mov
pop
rol
call
pop
mov
xchg
repz
xor
pushf
std
retf
lods
xor
cmp
js
mov
mov
sub
jno
push
ja
ins
cmps
push
cmp
das
push
loope
fdiv
mov
inc
ins
jmp
xor
in
pop
lods
mov
in
inc
aas
jl
cwde
adc
mov
shl
xlat
xchg
pusha
or
inc
mov
sbb
sub
xchg
push
or
hlt
call
cmp
loop
jmp
std
in
cwde
xchg
mov
in
adc
sbb
sbb
cdq
sbb
ret
imul
dec
cwde
das
stc
dec
mov
push
std
push
mov
lahf
jle
pop
mov
cmps
mov
jg
xor
(bad)
int3
call
sbb
adc
cmp
cmp
xchg
and
push
mov
mov
lock
scas
outs
xchg
ins
pop
adc
(bad)
xor
and
adc
add
movs
cwde
dec
sub
fs
pop
mov
gs
stc
in
lahf
cmps
jbe
mov
cld
fdivr
loope
sbb
test
and
retf
fs
push
xlat
(bad)
jno
push
cmps
cmp
retf
mov
xchg
in
pop
push
data16
in
(bad)
fist
aas
cdq
stos
test
jns
hlt
xor
adc
retf
shl
mov
(bad)
aaa
cmp
scas
xchg
jns
push
fdivr
pop
mov
push
sub
xchg
js
aad
in
mov
fld
retf
test
movs
loope
fsubr
cmc
xchg
shl
xrelease
push
push
jne
cwde
mov
bound
xchg
jb
xchg
(bad)
test
and
maskmovq
and
cmp
into
outs
sbb
fisttp
push
outs
pop
test
adc
cmps
fld
adc
push
fmul
leave
not
icebp
jno
ds
movs
sbb
aaa
mov
push
in
sbb
cmp
mov
jbe
pop
and
out
or
mov
jnp
rcl
xor
cmp
out
sub
hlt
dec
rol
aas
fcomp
sbb
sar
scas
loop
xor
xlat
or
dec
retf
popa
inc
pop
add
movs
imul
jns
mov
dec
xchg
xor
int
leave
inc
dec
cmp
(bad)
in
retf
xchg
pop
jns
out
adc
sub
jb
out
(bad)
and
inc
jb
xor
or
jmp
sar
neg
fwait
cmp
stos
cmp
shl
sti
xor
mov
adc
adc
(bad)
div
adc
push
pop
repnz
(bad)
mov
pop
sbb
and
jmp
mov
and
movs
dec
inc
mov
(bad)
fsubr
push
cmp
cmps
rcl
mov
sbb
pop
cmp
sbb
adc
pop
add
mov
xchg
fs
js
aam
sahf
addr16
test
jge
stos
fwait
push
push
sbb
jne
push
sbb
dec
jl
(bad)
jbe
mov
jbe
mov
mov
cmps
call
ret
mov
fnstenv
stos
dec
ss
jo
ds
out
imul
sub
(bad)
and
cld
(bad)
xchg
mov
mov
and
pop
fdiv
inc
cmp
mov
jbe
pop
add
out
and
call
sub
movs
add
ds
icebp
xchg
je
movs
sar
or
popf
pusha
mov
xchg
push
pushf
(bad)
pop
int3
and
xchg
xchg
lds
and
(bad)
scas
mov
stc
outs
push
mov
mov
or
ins
gs
cmc
jmp
fidivr
or
sahf
outs
xchg
inc
add
jns
sbb
test
xchg
(bad)
out
or
mov
pop
popf
repz
jle
cmc
push
push
cmp
push
mov
mov
in
cmp
xchg
jo
xor
xor
or
pop
push
adc
dec
call
popf
add
pop
scas
mov
cli
cmps
lea
jnp
ins
loope
add
dec
imul
adc
sar
int
cld
sbb
add
mov
call
and
xchg
xchg
daa
rol
cld
add
inc
idiv
mov
adc
push
jl
lahf
jbe
jl
popa
test
push
movnti
push
dec
push
cld
nop
cmp
xor
pop
and
adc
nop
cmp
fmul
popf
loope
clc
xchg
cwde
(bad)
and
and
pop
out
dec
mov
or
xchg
fwait
adc
sahf
mov
hlt
fisubr
stos
or
sbb
xor
cld
lods
dec
add
mov
adc
rcl
adc
cwde
retf
lea
jg
inc
adc
imul
fsub
xchg
sahf
test
cmp
lods
push
inc
sub
cmp
in
dec
mov
ret
test
jl
scas
dec
das
push
aaa
adc
imul
cld
dec
cwde
and
sub
js
adc
arpl
and
mov
test
mov
clc
pop
cmp
push
popf
scas
or
push
ffreep
dec
xor
int3
stos
dec
ins
cwde
sub
push
mov
jecxz
or
pop
mov
add
pop
jmp
adc
xchg
dec
jbe
or
pushf
cmp
fisubr
mov
stos
push
out
stos
into
or
dec
popf
scas
jmp
inc
loope
imul
stc
test
push
jae
jae
jge
je
ins
jnp
movs
inc
imul
js
cld
mov
in
jmp
push
or
cs
inc
adc
push
push
dec
xchg
retf
mov
ins
dec
(bad)
stc
mov
cmps
popa
push
jbe
cmc
movs
jbe
movs
mov
inc
jb
mov
fs
retf
or
xchg
cmps
shl
pusha
test
rcl
lods
cmp
inc
xchg
ds
xchg
retf
loope
pop
or
fisubr
ffreep
add
pop
mov
xchg
xchg
in
leave
sbb
mov
pop
sti
cmc
lock
fs
les
movs
icebp
ror
sbb
jle
int3
sar
jle
inc
ins
loop
push
dec
aam
repz
mov
and
add
mov
fs
shl
inc
aas
and
push
mov
lahf
pop
icebp
adc
gs
iret
xchg
cmc
adc
ds
pop
sub
or
aam
mov
dec
cmp
push
(bad)
push
es
mov
clc
jno
cmps
les
xchg
ror
rcr
cdq
xchg
pop
retf
dec
mov
loope
popf
jl
es
cmp
sbb
adc
(bad)
movs
out
pop
inc
test
xor
push
cmps
adc
lock
test
(bad)
sbb
test
push
inc
xchg
dec
push
in
das
jns
fs
jmp
sbb
push
fs
mov
gs
add
inc
cmp
mov
and
lock
lods
sub
ss
repnz
xchg
ja
sub
dec
jb
not
xor
push
cmp
xchg
imul
cmps
dec
sbb
mov
add
setnp
in
or
jmp
pop
test
mov
sar
repnz
pop
dec
push
shl
outs
add
enter
pop
call
mov
mov
adc
in
cli
(bad)
mov
pop
push
xor
jmp
loope
jno
jp
xchg
sbb
das
jbe
cmp
xor
in
push
ficom
dec
mov
int
push
jbe
fbstp
adc
or
ss
jecxz
or
jns
loop
iret
stos
xlat
retf
icebp
xchg
mov
cmp
inc
inc
push
out
into
into
mov
les
inc
pop
lahf
adc
xchg
or
ret
daa
call
test
cld
jae
mov
and
mov
enter
push
jno
xchg
inc
popf
fstp
out
imul
push
cwde
ins
sub
xchg
cmp
mov
fwait
ja
aad
mov
add
repz
out
cld
add
out
add
mov
test
pop
test
ret
jno
dec
sbb
(bad)
out
inc
jg
push
or
jecxz
dec
ror
(bad)
adc
pop
fcom
jecxz
pop
les
jl
cdq
ds
gs
ret
cmp
sahf
retf
gs
enter
xchg
dec
jb
jl
stos
shl
call
cmp
cmp
or
ins
xor
aad
shl
ret
out
xor
cmp
rcr
mov
fild
test
sbb
loope
mov
ret
dec
jg
add
nop
and
jecxz
sti
or
cld
(bad)
push
in
push
stos
loopne
xor
popf
mov
nop
xchg
xchg
cmp
aam
out
add
sar
and
call
and
and
stos
xor
or
jecxz
aaa
shl
hlt
fdiv
sbb
or
in
dec
xchg
into
jne
jmp
aas
dec
ja
movs
aam
popf
retf
push
arpl
idiv
xor
aad
mov
shl
xchg
inc
out
jl
xlat
imul
pop
std
mov
cmp
inc
sbb
(bad)
in
fnstcw
scas
shl
push
mov
cli
dec
cmp
jo
dec
adc
sti
rcr
push
dec
jge
pushf
inc
(bad)
int3
test
cli
sbb
das
push
and
and
and
das
cmp
push
inc
xor
jmp
outs
mov
sbb
in
cwde
test
sbb
cmp
inc
aaa
mov
inc
cmp
adc
int3
movs
sti
jle
jns
push
sbb
adc
adc
ficomp
pop
xor
ret
pushf
(bad)
add
ins
stc
mov
xor
and
repz
add
xor
add
xchg
cs
mov
mov
sub
movs
sub
dec
jb
retf
jbe
stos
add
je
addr16
xchg
loopne
push
loope
retf
int3
arpl
or
sbb
jne
mov
cmps
cmp
idiv
inc
dec
and
mov
enter
pop
test
xchg
jg
push
(bad)
repz
push
stos
xchg
test
loopne
aas
cmp
in
or
sub
jg
test
inc
pop
repnz
retf
(bad)
cdq
ret
xchg
in
and
cld
xor
pushf
fild
mov
or
dec
lahf
test
xor
das
retf
inc
jae
pusha
call
pop
xchg
mov
adc
xor
(bad)
pushf
mov
adc
rcl
aam
rcr
test
cdq
add
and
adc
xchg
jnp
gs
fsub
push
dec
mov
test
sbb
aas
out
fldenv
mov
mov
fwait
test
loope
push
movs
and
mov
fst
popa
cmp
icebp
les
enter
inc
or
push
pop
inc
out
movs
cdq
(bad)
jp
and
mov
xchg
jbe
pusha
jecxz
cli
jp
cmp
(bad)
dec
sar
cmp
adc
xchg
pop
mov
dec
test
xchg
retf
jae
out
lods
cmps
imul
fdiv
add
pop
aaa
shr
jle
adc
mov
xor
leave
test
sbb
mov
in
mov
push
ret
out
jno
call
stc
xchg
mov
in
aaa
dec
outs
fst
adc
push
mov
jmp
xchg
and
xchg
mov
repnz
fcomp
adc
dec
mov
ins
jnp
mov
push
sbb
push
shl
loope
cmp
push
imul
mov
sbb
mov
xchg
xor
cmp
fs
jecxz
mov
imul
pop
(bad)
xor
push
adc
push
mov
sub
fs
fst
(bad)
pop
sbb
fmul
jmp
adc
jbe
adc
jp
pop
je
push
rcl
pop
pusha
inc
adc
dec
call
push
jae
push
adc
adc
push
not
(bad)
cld
mov
sbb
jne
push
xor
movs
jmp
mov
(bad)
jmp
or
adc
and
sar
and
nop
test
jmp
mov
push
push
push
lds
and
loop
sub
or
stc
add
es
inc
retf
and
imul
xchg
int3
push
dec
sti
and
scas
bound
out
add
not
inc
fucom
jmp
xchg
mov
into
fwait
pop
pop
fld
(bad)
out
cs
cli
andps
mov
mov
jg
mov
jae
push
adc
mov
and
add
shr
mov
jae
fadd
dec
shl
dec
loop
jmp
out
in
test
iret
jle
rcl
jl
daa
fld
cmp
jbe
in
daa
imul
out
jbe
je
fdivr
sub
xor
sbb
and
das
mov
lea
popa
adc
sbb
arpl
sub
or
clc
xchg
mov
mov
fnstenv
ret
xchg
mov
push
(bad)
into
shl
or
jecxz
sbb
std
in
popa
mov
(bad)
cli
rcl
das
nop
adc
les
cmp
jecxz
lods
(bad)
scas
movs
and
and
movs
add
mov
sar
cdq
xchg
add
in
jbe
adc
pop
sub
sbb
adc
xor
jb
jmp
inc
mov
(bad)
mov
repnz
or
xchg
pop
dec
mov
inc
daa
add
ds
cmp
repnz
push
scas
jecxz
mov
ins
xor
cmp
outs
pop
icebp
cmps
sbb
and
pop
inc
dec
sub
add
test
sub
data16
call
xchg
repnz
inc
lea
outs
hlt
movs
pop
ret
or
sub
jnp
ja
ror
or
xor
sbb
ss
lock
mov
xchg
(bad)
lods
lahf
xor
out
cmp
(bad)
data16
aas
cs
sub
mov
(bad)
scas
xchg
mov
adc
inc
inc
mov
adc
out
ret
cli
mov
(bad)
push
(bad)
xor
test
repz
pushf
stos
lock
pop
push
cmp
jp
inc
mov
jmp
out
inc
add
inc
dec
in
data16
aad
mov
xor
popa
mov
jp
outs
xchg
into
outs
xchg
xchg
ror
jns
(bad)
movs
lea
iret
or
mov
adc
push
jle
cmp
outs
addr16
mov
in
xchg
dec
div
fisttp
adc
dec
mov
push
xor
mov
(bad)
lods
cli
dec
inc
mov
lods
int3
push
dec
or
mov
xchg
xchg
add
stos
xor
mov
mov
pop
add
add
and
pop
add
and
push
stc
pop
or
or
inc
rcr
fs
and
xchg
push
ss
sbb
call
out
fldcw
mov
dec
nop
adc
stc
jle
(bad)
sbb
inc
mov
mov
clc
or
jecxz
(bad)
sbb
dec
out
push
xchg
scas
mov
ins
iret
imul
push
ins
add
push
mov
je
das
mov
jge
add
imul
and
cmp
push
inc
sbb
sub
loope
sar
sub
mov
pop
(bad)
adc
mov
out
pop
scas
stos
xchg
and
iret
sub
mov
inc
mov
add
mov
cdq
cmps
lahf
lods
mov
call
and
ja
loopne
fs
neg
or
or
or
pop
js
xchg
jno
inc
mov
loop
data16
out
arpl
iret
pop
jmp
stc
cmp
sbb
out
push
dec
xchg
mov
push
and
jle
jns
cmc
lods
(bad)
rcl
adc
xchg
fldcw
sub
sub
lods
sub
movs
test
movs
fsub
mov
jo
mov
fucomip
pop
leave
xor
or
je
shr
and
rcr
mov
mov
add
mov
or
jp
not
imul
aaa
sub
fs
jge
call
inc
and
sti
jp
jg
out
add
cmps
jmp
push
mov
(bad)
scas
xchg
sub
lods
cmovns
fstp
ins
mov
cmp
sub
sbb
call
xchg
jae
sbb
cmps
scas
dec
add
scas
ds
xor
mov
jmp
push
mov
outs
jnp
and
mov
(bad)
mov
cmp
mov
mov
bound
dec
pop
push
push
ret
mov
outs
aam
xchg
jmp
xor
adc
enter
fidivr
add
aam
or
test
repnz
push
push
mov
ror
mov
enter
jo
js
sahf
cmp
aad
add
jae
call
cmp
dec
loopne
cmps
cld
and
and
fisub
in
pop
jae
leave
retf
pusha
out
loopne
push
and
xlat
arpl
xlat
call
pop
pop
push
nop
and
loope
mov
xchg
repz
data16
sar
fst
pop
scas
scas
int
pop
(bad)
pushf
sub
loope
push
pop
or
jg
pop
inc
jne
mov
xchg
ins
in
ss
xchg
mov
repz
int3
dec
mov
mov
adc
aam
xchg
out
jo
add
inc
test
imul
adc
or
jmp
and
jmp
stos
inc
pop
fmul
loop
jmp
push
sbb
movs
not
sub
xchg
mov
test
push
or
ret
sbb
fldcw
ret
inc
cwde
in
push
(bad)
arpl
cmc
sar
mov
fisttp
pop
push
dec
pop
popf
add
or
jge
xor
shl
xor
shl
ins
add
xor
fsubr
test
pusha
in
scas
movs
sbb
and
cmp
push
repz
in
loop
(bad)
xor
jle
or
in
push
push
pop
mov
sbb
stos
cld
adc
ja
shr
cmp
mov
pop
adc
lods
into
(bad)
dec
mov
leave
aaa
rol
inc
mov
sub
mov
fadd
dec
inc
mov
sub
and
int
loop
addr16
and
xor
stc
jns
adc
push
loop
cmp
cmp
and
mov
rcl
add
cs
repnz
jno
xor
imul
ds
ret
lods
mov
(bad)
ret
jge
add
int
dec
imul
imul
dec
add
dec
xchg
xor
pop
(bad)
dec
(bad)
fst
push
(bad)
movs
sub
lds
loopne
lahf
jecxz
push
inc
jae
push
std
push
inc
adc
mov
adc
mov
dec
inc
dec
es
and
nop
(bad)
shl
ds
movs
std
fs
xchg
stos
jno
shl
mov
push
xchg
and
or
dec
or
(bad)
sub
push
and
cwde
data16
push
mov
or
push
in
movs
fsub
jp
ficom
jnp
sub
imul
mov
jle
popa
sbb
dec
xlat
out
sub
loope
push
dec
inc
adc
popa
jo
fdiv
stc
push
push
mov
push
pop
xchg
jbe
pop
cmp
jl
scas
sar
mov
fdiv
xlat
popa
inc
fldenv
add
pusha
mov
les
and
xchg
outs
xlat
in
mov
xchg
dec
or
loopne
mov
sahf
add
dec
aad
mov
into
mov
imul
pop
mov
mov
sub
int3
pop
inc
neg
cmp
or
sbb
scas
and
(bad)
and
iret
bound
sub
loop
imul
mov
fsubr
dec
adc
add
push
inc
push
gs
inc
test
movs
mov
and
mov
pop
lds
jle
dec
pop
pop
loop
lods
jmp
inc
mov
or
or
adc
add
push
pop
cmp
sbb
mov
fs
lds
ss
stc
mov
and
pop
jmp
push
push
stos
jb
out
fldcw
mov
sbb
or
(bad)
cmp
mov
and
mov
pusha
xor
hlt
jb
inc
cli
into
inc
mov
cmp
data16
outs
movs
shr
stos
out
xchg
cmp
mov
pop
mov
fidiv
fwait
pop
pop
cmc
leave
xlat
dec
mov
or
(bad)
adc
aad
lods
sbb
retf
cmp
pop
ret
pop
mov
mov
push
into
cmp
dec
dec
mov
xchg
pop
push
fwait
(bad)
lea
mov
add
fldcw
adc
sbb
imul
and
fucom
jmp
ins
leave
nop
fmul
dec
outs
scas
hlt
out
repz
xor
pop
jmp
dec
mov
or
dec
xchg
imul
ja
pop
outs
jmp
push
addr16
in
mov
jbe
ret
arpl
scas
mov
aas
std
dec
sbb
ja
sbb
adc
cmp
xor
sbb
cmp
icebp
outs
repz
in
pop
dec
in
test
(bad)
ins
imul
scas
dec
mov
iret
jl
mov
(bad)
scas
xchg
push
add
ja
push
or
or
add
(bad)
mov
sbb
xchg
jnp
jp
bound
xchg
push
pop
dec
gs
out
inc
sub
mov
mul
mov
sbb
and
popf
(bad)
stos
xor
aaa
xor
xchg
push
fwait
in
jne
pop
(bad)
pop
movs
fimul
xchg
xchg
out
sub
dec
inc
ja
mov
pop
or
push
add
mov
mov
in
inc
ret
pop
push
sti
push
pop
aad
je
add
mov
jns
jo
xchg
add
jnp
shr
lods
es
jle
jo
fwait
shl
rol
sub
in
loope
add
mov
xchg
sub
loopne
ror
arpl
mov
mov
shl
push
enter
sbb
(bad)
(bad)
mov
cmps
mov
in
stc
stos
mov
leave
scas
mov
movs
ins
mov
int3
lock
or
mov
pop
sub
rol
movs
adc
sbb
mov
fwait
push
mov
mov
(bad)
cdq
push
(bad)
sub
gs
std
lods
aam
fdiv
xchg
dec
mov
in
push
mov
pop
test
push
and
pop
aad
popa
mov
jmp
test
sub
shl
rol
ins
push
pop
loope
mov
jo
dec
pop
jnp
push
mov
in
mov
jae
mov
imul
mov
out
in
push
and
data16
cmc
mov
cwde
jae
cwde
mov
sbb
test
fimul
mov
and
fcom
adc
sub
hlt
dec
lahf
scas
adc
jb
xor
cmc
loope
push
mov
mov
cmp
mov
jl
mov
das
loope
pusha
(bad)
sbb
inc
xchg
test
lock
js
(bad)
adc
and
movs
pop
into
cmp
les
and
ss
or
add
aad
add
inc
into
mov
dec
in
adc
ins
in
xor
lea
jp
mov
icebp
push
xor
movs
jbe
sbb
fsubp
xchg
popa
nop
(bad)
mov
or
nop
cmp
inc
cmp
mov
lahf
cmps
popf
cwde
xlat
adc
aaa
xor
add
int
inc
aaa
push
sub
into
mov
bound
shr
adc
clc
jge
xor
mov
pop
push
adc
push
pusha
imul
repz
sahf
in
dec
sbb
lods
push
jbe
imul
data16
rol
arpl
jo
pushf
xchg
dec
cmp
jae
in
push
pushf
xchg
aad
xchg
lahf
(bad)
sbb
popf
cmp
movs
fbld
imul
and
dec
movs
daa
ss
loope
pushf
cli
cmp
jb
pusha
xlat
or
add
or
test
mov
lock
mov
cwde
sbb
xchg
dec
pop
retf
mov
dec
jne
sbb
sahf
cs
jmp
cli
hlt
out
add
movs
cmps
mov
nop
test
cmps
dec
aas
xchg
add
leave
rol
sbb
popa
popf
test
xchg
or
movs
fcmove
aas
inc
iret
stos
sar
(bad)
outs
and
daa
in
sbb
jl
push
sbb
stos
test
pop
sbb
push
scas
jne
or
sub
push
push
cmp
jmp
sub
rcl
jmp
xchg
mov
ret
xor
inc
inc
push
jmp
test
call
and
fcmovnb
mov
pop
mov
(bad)
sbb
mov
and
inc
jbe
xchg
mov
inc
fucomp
pop
imul
cmps
or
fisubr
ror
pop
adc
pusha
enter
outs
mov
aaa
fst
push
outs
mov
sbb
xor
mov
add
sbb
sub
jecxz
dec
dec
and
adc
(bad)
fsub
ins
in
dec
sub
mov
(bad)
mov
xchg
xchg
jge
jmp
xor
lahf
push
inc
das
xchg
sub
scas
and
jmp
inc
mov
xor
and
call
fdiv
repz
jle
push
fwait
clc
mov
loop
adc
jne
jecxz
daa
std
les
xchg
retf
or
jno
mov
dec
scas
cmp
(bad)
retf
dec
daa
js
add
inc
shr
in
xor
xchg
repz
xor
push
ror
test
outs
adc
cli
call
ja
mov
and
xchg
inc
mov
lea
sahf
data16
push
movs
adc
lods
int
inc
scas
aam
sti
mov
movs
dec
mov
outs
sbb
cmps
hlt
cmp
nop
shr
fs
xor
dec
pop
pop
dec
pop
xlat
sub
std
sbb
shr
scas
(bad)
rcl
cmp
inc
sbb
cmp
sub
jecxz
add
xchg
js
or
cmc
je
and
imul
mov
daa
fdivr
push
(bad)
push
mov
sar
mov
loop
in
rcr
cmc
mov
rol
mov
add
rsm
cli
adc
cli
jmp
sahf
mov
pop
es
sbb
push
clc
ret
add
ss
xchg
repz
sahf
inc
inc
rcl
div
inc
mov
fld
mov
xchg
cmps
repnz
cmp
mov
mov
jns
add
or
push
shr
int3
aam
mov
sub
pushf
test
(bad)
pop
rol
leave
sbb
dec
mov
(bad)
pop
ja
inc
inc
daa
mov
adc
adc
pop
inc
es
pop
out
cmp
dec
ret
or
mov
test
cld
in
or
push
gs
adc
ins
cld
or
mov
leave
cmp
add
jl
xor
push
lahf
dec
jg
ror
sub
ins
cmp
push
inc
add
out
ins
loop
rcr
or
ins
push
or
ret
jbe
(bad)
xor
cwde
xchg
aam
movs
dec
retf
pop
arpl
rcl
pop
std
push
push
inc
shl
in
add
or
mov
mul
inc
add
ret
jmp
out
pop
sub
arpl
mov
fdivr
mov
(bad)
mov
inc
jno
enter
loope
jb
(bad)
dec
ret
add
push
dec
ficom
xchg
in
push
dec
ss
pop
xchg
cli
or
imul
fsub
lods
add
xchg
nop
(bad)
mov
or
push
push
xor
or
dec
adc
jmp
and
add
push
inc
fprem1
jno
mov
sar
sbb
cli
inc
pop
jo
add
dec
push
in
and
popf
jnp
pushf
and
sub
sti
aaa
xor
xor
dec
mov
pusha
imul
mov
lods
sub
cmp
ds
push
std
clc
sub
or
mov
stos
sbb
popa
add
retf
fs
in
repnz
nop
sub
sub
xor
retf
js
xchg
sub
lods
cmp
mov
pop
in
fist
out
lea
loop
xchg
rol
outs
mov
mov
jbe
add
mov
lss
in
inc
loope
jle
and
push
cmp
addr16
inc
add
fild
and
xor
stos
movs
aas
jns
ins
sub
inc
(bad)
iret
scas
shr
ror
push
dec
and
mov
cmps
cwde
out
xor
into
inc
lods
pop
(bad)
mov
jne
in
xor
mov
cmp
fidiv
mov
pop
rcl
out
lods
add
test
mov
in
loop
mov
jns
and
std
dec
pop
cli
ficom
hlt
cdq
in
test
shl
cmp
cwde
fadd
mov
adc
adc
data16
loop
ins
push
pop
ror
stc
cmovge
repz
mov
sbb
push
cmps
cmp
jbe
add
pop
add
and
cmp
adc
fld
sti
jbe
ss
mov
mov
out
and
rcr
aas
ins
sbb
daa
sti
xchg
add
adc
and
sub
movs
add
aam
adc
mov
xchg
and
bound
rcr
xchg
lahf
adc
sti
pop
lock
mov
mov
or
cmp
fucomi
movs
addr16
clc
sti
stos
or
adc
std
aad
xor
shl
loope
xchg
movs
movs
out
jmp
ins
sub
or
inc
test
pop
and
push
sar
mov
mov
(bad)
adc
int3
loop
ss
cs
jns
sti
xchg
shr
add
inc
or
lea
mov
stc
add
ror
aam
pop
mov
imul
cmp
and
dec
out
rcl
dec
stos
out
hlt
iret
sbb
cmp
mov
daa
or
rol
in
fistp
(bad)
aas
ja
cmps
in
mov
test
pop
je
mov
fiadd
mov
(bad)
add
dec
repnz
sti
div
dec
shr
pop
mov
sub
pop
and
es
fcom
out
mov
mov
xor
mov
fistp
dec
popa
neg
iret
stos
shr
int
inc
mov
push
lock
(bad)
sbb
adc
test
int3
ds
mov
stos
dec
mov
mov
cmp
jmp
pushf
jecxz
shl
or
adc
stos
sub
je
xor
or
je
in
push
dec
dec
cmp
dec
pushf
sbb
rcr
rol
or
lods
out
stos
xor
icebp
test
fsub
scas
xchg
jp
pop
sub
xor
mov
out
inc
cmp
aam
mov
or
sbb
sbb
ret
das
test
loope
inc
(bad)
jb
ficomp
dec
sbb
push
test
or
es
stos
rcl
lea
fild
cmp
imul
jnp
inc
or
ror
dec
leave
xor
and
fdivr
(bad)
fldcw
pushf
nop
loop
pushf
push
sbb
push
adc
or
jo
push
mov
xor
inc
cmp
xchg
pop
fmul
rol
inc
arpl
jmp
inc
aad
push
mov
enter
push
sub
pop
add
mov
not
outs
push
mov
jecxz
xor
jp
jle
cmp
jle
gs
sbb
sub
les
jno
inc
jnp
das
xchg
rcr
nop
xchg
lods
dec
(bad)
not
adc
sub
mov
(bad)
retf
mov
mov
dec
ss
pop
out
adc
pop
sahf
iret
ins
or
adc
test
sbb
shr
movs
dec
cmp
jae
sar
stos
and
test
std
rol
cmps
pop
stos
out
mov
and
push
inc
adc
jg
mov
(bad)
fmul
out
ins
gs
lods
ret
xchg
cmps
inc
inc
push
cdq
xchg
push
lahf
and
or
add
out
movs
jl
fscale
ret
sub
les
jbe
inc
popa
and
or
jge
xchg
pop
inc
mov
lods
aam
add
jnp
adc
mov
scas
xor
add
mov
lock
mov
dec
push
jg
adc
xor
xchg
push
push
sbb
mov
outs
outs
ret
outs
mov
xor
mov
push
mov
ret
adc
cmps
(bad)
sbb
push
mov
(bad)
repz
arpl
ja
pop
sub
add
jne
cmps
and
hlt
(bad)
iret
mov
jns
sub
aam
sbb
imul
jmp
add
scas
cmps
ds
dec
fs
pop
xchg
and
jns
test
cmp
xor
xor
mov
push
fnsave
shl
dec
(bad)
pop
mov
adc
push
sbb
add
in
xor
es
xor
mov
int
or
out
or
cmp
or
mov
xor
popa
inc
inc
adc
xchg
dec
seto
test
push
mov
fucomi
mov
dec
subps
loopne
je
fwait
dec
jle
pop
mov
cmp
add
xor
mov
sub
sub
cmc
and
in
mov
and
mov
push
test
adc
(bad)
js
or
fwait
xchg
add
bound
inc
or
jbe
in
out
aaa
cmp
and
mov
sub
icebp
mov
add
retf
push
inc
mov
cmc
jmp
mov
mov
cmp
xchg
xlat
data16
mov
and
addr16
or
pop
inc
and
push
out
stos
jp
and
inc
ins
or
das
pop
xchg
fdivrp
in
rcr
mov
mov
shl
mov
and
in
push
arpl
adc
jg
aaa
jae
mov
mov
and
jmp
stos
dec
mov
std
mov
mov
sub
in
lods
sub
iret
jns
dec
test
mov
ret
jne
movs
out
bound
hlt
outs
dec
push
addr16
xchg
cmp
jmp
mov
xor
dec
repnz
pop
sub
icebp
xchg
scas
mov
fadd
mov
pop
sub
and
adc
push
pop
loope
and
add
push
push
add
call
popa
pop
bound
enter
adc
xchg
mov
xchg
scas
xchg
push
shl
ret
rcl
sbb
add
sub
(bad)
and
test
push
adc
sbb
lea
add
and
sahf
add
lock
dec
xor
rcr
sbb
inc
add
push
mov
push
int3
ret
stos
lahf
or
pop
mov
arpl
cli
sub
daa
in
pop
dec
icebp
mov
movs
loop
pop
sbb
xor
sub
imul
ret
inc
jmp
fmul
jle
pop
in
mov
paddd
cld
push
das
and
lahf
stc
nop
mov
push
mov
add
rcl
mov
in
dec
mov
in
lods
enter
mov
push
dec
mov
sub
pop
jae
arpl
out
sub
fild
sbb
mov
outs
pusha
imul
or
loopne
cwde
adc
and
inc
jge
jmp
loopne
pushf
daa
cmp
fmul
sbb
push
xor
in
xor
adc
fisttp
mov
adc
in
js
push
idiv
loop
push
push
pop
jne
add
inc
or
std
mov
test
dec
sbb
mov
sbb
fbld
jl
js
adc
shl
mov
dec
cmps
xor
dec
lahf
aam
pop
jl
and
into
mov
pop
lods
test
inc
mov
mov
sbb
xor
retf
ficomp
dec
dec
sub
div
mov
xor
sar
add
bnd
dec
pop
leave
inc
add
jmp
(bad)
fbld
movs
add
mov
inc
jle
or
loopne
sub
xchg
div
push
and
iret
sbb
adc
mov
call
jp
jno
fld
push
xor
xchg
mov
popa
pop
sti
xor
pop
loopne
mov
lods
loopne
les
pop
int
jno
mov
push
aaa
aam
or
mov
test
arpl
les
add
addr16
mov
pop
xor
cmp
test
mov
sub
mov
add
sbb
mov
inc
mov
pop
sub
mov
ins
movs
sbb
dec
jmp
sti
shl
std
frstor
jg
dec
ror
xchg
cmc
sar
jl
cmp
push
stos
lea
pop
(bad)
and
xchg
cmc
ss
jmp
sub
push
inc
mov
mov
and
lahf
inc
pop
retf
or
fmulp
mov
mov
test
addr16
jne
xor
or
xchg
push
rol
daa
sub
add
add
nop
dec
imul
pushf
and
leavew
jo
jg
inc
sbb
jmp
sub
je
dec
repnz
hlt
mov
cmp
in
mov
cs
xor
adc
cmp
and
sbb
out
dec
pop
fcmove
xor
mov
retf
loop
mov
pop
or
mov
jns
jns
and
sbb
mov
cmc
or
mov
outs
ret
scas
out
xchg
test
loopne
cmp
or
mov
shr
hlt
rol
neg
jb
xor
in
push
mov
pop
xor
add
mov
cmp
ja
out
test
push
or
jns
push
(bad)
fnstsw
outs
sbb
out
jmp
outs
fcom
repz
mov
(bad)
nop
dec
pop
cwde
cwde
repnz
jl
mov
sbb
cmps
sbb
data16
mov
ss
inc
jb
jecxz
mov
dec
sbb
fistp
stos
sub
sub
sub
ds
enter
and
(bad)
ficomp
xor
mov
js
sbb
push
sub
leave
mov
mov
mov
jne
and
mov
(bad)
in
pop
or
cmp
call
pusha
repnz
mov
ret
ja
enter
call
ret
pop
aaa
fwait
sub
xchg
test
movs
mov
adc
les
jmp
mov
je
les
nop
sub
mov
mov
adc
cmp
ss
retf
dec
inc
mov
stos
lock
and
xor
fldenv
movs
fs
shl
sub
fstp
js
add
mov
pop
fdiv
movs
inc
jmp
rcl
xchg
xor
imul
call
jge
cmp
inc
adc
jge
iret
cmp
scas
pop
xchg
loop
out
pop
and
mov
pop
lds
adc
mov
out
cmp
in
pusha
shl
xchg
inc
push
push
fadd
(bad)
jnp
jg
jle
in
mov
pop
jnp
sbb
mov
stc
mov
adc
leave
outs
jl
ins
jge
pop
or
fdiv
ret
cmp
fucom
xor
stos
xor
push
(bad)
outs
call
mov
int3
scas
mov
shl
push
dec
adc
mul
shl
ins
xor
push
cdq
or
xor
jbe
data16
lahf
jp
cwde
jge
dec
xchg
dec
es
push
mov
adc
enter
mov
add
adc
fmul
outs
add
rol
and
mov
pushf
mov
lock
pop
cmps
xchg
mov
mov
add
or
popa
je
shr
test
pop
cmp
fst
jecxz
cmc
stos
xchg
jne
dec
arpl
std
cs
jge
rcl
or
(bad)
sub
push
dec
hlt
pop
jp
les
mov
add
std
movs
xchg
push
jbe
xor
mov
push
sub
adc
cmp
jp
scas
sti
retf
ret
enter
mov
add
xor
gs
lahf
add
mov
sbb
les
xchg
dec
pop
dec
into
ret
loopne
xor
or
cs
(bad)
push
dec
jmp
lods
arpl
cld
adc
out
fwait
add
jg
mov
daa
add
sahf
aas
inc
xchg
ffreep
mov
popa
repnz
out
inc
cmc
repz
jge
pop
pop
ror
jle
cmp
xor
mov
inc
test
outs
loopne
repnz
add
imul
lods
ja
in
push
add
dec
cs
nop
mov
adc
mov
mov
div
pop
push
cmp
mov
cmp
xchg
daa
or
push
push
fidivr
stos
inc
mov
not
cmp
test
cdq
mov
ja
dec
mov
sub
inc
ins
pop
pop
mov
inc
dec
out
xor
jo
nop
in
adc
add
js
add
adc
cmps
xor
or
mov
repnz
dec
lds
jo
jg
xor
xchg
push
lds
les
dec
pop
jns
xor
mov
mov
mov
xchg
pop
fsubr
sbb
sti
ja
or
in
cmp
inc
adc
xchg
dec
int3
xchg
xchg
pop
enter
xor
stos
fcmove
data16
cwde
lods
push
or
cmp
mov
dec
cmp
or
inc
xchg
fbstp
cmp
or
inc
pop
xor
inc
ds
fbld
dec
pop
or
mov
xchg
mov
push
adc
jp
in
shr
std
add
aam
push
addr16
xchg
sahf
pop
pop
push
push
in
clc
cmp
loope
push
adc
icebp
jg
shl
cli
stos
popa
and
cmp
loope
rcr
pop
adc
out
inc
sti
mov
aaa
ret
sub
jecxz
daa
inc
sar
popa
iret
mov
mov
add
mov
popa
mov
or
std
jne
fstp
or
jae
or
and
(bad)
adc
push
mov
inc
mov
xor
and
int3
ss
in
add
push
cmps
out
jle
or
gs
fs
dec
aam
ins
and
enter
xor
dec
mov
jg
stos
repz
(bad)
dec
cli
sbb
adc
or
ss
or
out
test
sub
sar
dec
add
les
mov
mov
push
nop
push
or
inc
cdq
mov
shl
cmps
clc
jmp
mov
stc
sbb
or
push
sbb
inc
cmp
inc
(bad)
ins
pop
push
(bad)
or
xlat
mov
and
jle
mov
xchg
mov
retf
sti
icebp
mov
(bad)
in
push
scas
ins
or
fdiv
sbb
inc
test
mul
pop
pop
outs
dec
inc
call
or
pop
mov
int
rcl
sub
and
mov
inc
push
test
inc
into
adc
bound
(bad)
lods
and
fcmovne
jge
out
or
pusha
push
repz
mov
in
cmc
stos
pop
xlat
aad
and
fcomp
fwait
dec
or
les
cmps
in
imul
jne
sbb
stos
loope
xor
out
jae
aas
xor
mov
(bad)
je
mov
mov
cdq
push
push
popa
inc
sub
iret
ret
push
pop
inc
cmp
xchg
xchg
ja
cmps
repz
sub
sub
pushf
pop
rcl
push
push
xor
xchg
ins
pop
mov
es
je
push
addr16
inc
fbld
pop
(bad)
xor
jecxz
or
shl
xchg
test
jmp
ins
fwait
cmp
adc
mov
loope
adc
sahf
ror
push
lock
push
add
lea
mov
jbe
push
push
adc
dec
js
outs
dec
jg
mov
dec
inc
adc
(bad)
jle
cs
bound
pop
ja
js
int
and
adc
clc
sahf
xchg
sbb
fcom
jbe
mov
xchg
xchg
push
out
xor
push
out
imul
(bad)
ret
push
ret
adc
push
push
push
jp
idiv
jae
dec
or
into
push
dec
popf
fs
(bad)
loop
or
push
push
lods
rep
das
inc
pop
or
mov
mov
loop
mov
pop
pop
test
jns
das
xor
adc
xor
les
add
loop
push
lahf
adc
jl
mov
rcr
xchg
into
pushf
jae
and
inc
mov
int
cmp
dec
scas
mov
stc
push
dec
cdq
push
int
sub
call
fbstp
les
xor
daa
push
xor
lods
xor
cmp
mov
iret
sub
push
ret
js
pop
inc
mov
aad
into
push
push
pop
pusha
inc
push
xchg
int
xlat
data16
and
inc
pop
cmps
hlt
or
fwait
(bad)
ss
push
mov
fwait
adc
(bad)
stos
mov
(bad)
std
lock
cmp
std
ficom
test
mov
leave
xor
mov
xchg
sbb
jmp
loopne
xlat
adc
daa
imul
in
xor
push
cmp
cmps
movs
pop
add
cmp
jns
cli
cdq
add
fmul
mov
xor
inc
lahf
xor
pusha
mov
mov
sbb
mov
jmp
mov
sub
inc
cmc
cmp
xchg
mov
popf
ret
dec
in
or
and
push
pop
frstor
xchg
cli
(bad)
push
sbb
call
jno
push
stos
int3
jge
mov
inc
sahf
xchg
sbb
xor
in
push
mov
repz
and
test
ss
daa
dec
or
iret
mov
sbb
xchg
loope
dec
lea
int3
adc
int
out
int
(bad)
dec
mov
pop
in
fst
icebp
fwait
aam
sub
push
adc
test
adc
bound
jle
jmp
je
mov
imul
call
mov
push
les
push
stc
cmp
xchg
or
or
add
out
jge
(bad)
je
push
xchg
sub
test
xchg
ins
or
test
add
out
cs
in
cmp
push
push
out
dec
lahf
aad
mov
hlt
push
dec
(bad)
jbe
xchg
ficomp
call
pop
retf
push
push
fisub
push
xchg
cmp
sbb
inc
adc
jmp
ss
jnp
in
push
fild
lds
out
or
jbe
outs
aas
cwde
jmp
sub
mov
(bad)
das
stos
mov
rcl
push
fbstp
test
dec
cmp
push
out
ds
xor
jmp
out
dec
xor
shl
mov
das
or
mov
dec
add
dec
(bad)
sub
inc
ins
xor
in
xlat
xchg
out
cld
fdiv
adc
pop
or
enter
xor
call
mov
cli
(bad)
pop
test
test
std
test
lock
imul
pop
add
sub
(bad)
into
stc
pop
xchg
xor
push
iret
das
lock
mov
and
cld
jns
ja
or
out
pop
push
(bad)
jbe
push
sub
sbb
sbb
cdq
or
dec
push
call
or
jle
mov
cmc
add
int
aaa
out
mov
xchg
std
test
retf
cs
inc
popa
inc
stos
pop
adc
lods
cmp
inc
(bad)
aam
(bad)
aad
jle
mov
int3
xchg
fcomp
push
loopne
inc
add
popf
sub
xchg
icebp
retf
hlt
inc
loope
adc
neg
pop
gs
data16
jmp
pushf
mov
mov
adc
sbb
(bad)
push
mov
ret
cmps
mov
in
jnp
test
into
add
(bad)
je
inc
test
mov
imul
jmp
jge
sbb
arpl
gs
jp
data16
mov
loop
sbb
jle
lock
leave
push
push
loope
and
xor
inc
pop
test
xchg
mov
sbb
into
sub
and
push
das
mov
mov
add
iret
jle
test
lods
cmp
push
xchg
out
mov
xchg
jb
shl
test
pop
mov
call
not
cmps
push
sbb
mov
fild
xor
out
xor
call
jmp
pop
xlat
mov
ror
jge
je
std
pusha
fsubp
cmp
jp
aaa
fistp
sub
aam
jp
push
jmp
sbb
cld
or
es
outs
inc
mov
mov
inc
adc
rcr
call
xchg
repnz
fnstenv
xor
add
push
push
cdq
out
jmp
div
mov
push
adc
rol
xchg
jb
cli
push
jl
ins
push
ror
fcmovnb
mov
pop
jmp
psubw
std
fucomp
jp
xor
mov
sahf
fs
pop
stos
jg
cld
(bad)
sub
clc
or
outs
into
or
cli
xor
fs
call
leave
pop
aam
fild
frstor
inc
int
push
jp
gs
push
shl
xor
frstor
loop
outs
sub
pop
test
sub
jge
mov
jmp
retf
cmp
ss
add
sbb
mov
(bad)
pop
out
out
sub
cli
mov
dec
(bad)
pop
push
icebp
mov
(bad)
add
mov
xchg
imul
icebp
sahf
and
ja
or
aam
or
and
test
ins
dec
aas
test
or
mov
cmps
mov
test
outs
mov
sub
fs
cmc
jne
minps
scas
lods
mov
imul
jle
cdq
ins
push
call
lock
retf
bound
out
add
int
and
and
imul
inc
or
sbb
int3
outs
popa
cs
imul
push
cmp
retf
inc
in
and
push
push
push
jne
adc
push
cmp
clc
mov
addr16
fstp
int3
into
shr
adc
push
cs
sub
adc
push
and
push
or
cmp
call
je
movs
xchg
(bad)
(bad)
mov
xor
sub
jle
xor
test
test
mov
push
or
retf
inc
jbe
nop
push
inc
cmp
and
std
pop
out
(bad)
out
add
and
rcr
shl
(bad)
push
jo
ret
test
pop
test
mov
push
xor
leave
jno
aas
scas
and
repnz
test
mov
es
jecxz
in
push
mov
es
pop
pop
mov
cwde
or
mov
inc
mov
xchg
mov
jb
popa
add
aaa
adc
sbb
dec
add
movs
cmp
lea
push
fidiv
pop
xor
mov
std
ret
ret
or
or
lahf
add
data16
fldenv
rol
(bad)
jl
cmc
xchg
push
mov
dec
mov
mov
div
add
imul
ds
and
ret
pop
sbb
call
in
inc
call
mov
xor
aad
mov
jle
ss
mov
out
adc
pop
cmp
mov
sbb
fst
not
inc
mov
mov
pop
sub
mov
das
(bad)
mov
in
xchg
mov
pop
stos
xchg
shl
sub
int3
sbb
sub
jbe
ja
in
rol
(bad)
cdq
push
imul
or
test
arpl
fwait
cmps
fwait
sub
or
clc
jle
bound
mov
inc
and
rcl
cmp
sub
add
out
push
add
mov
es
sub
adc
sbb
mov
stos
mov
jge
mov
cmp
sti
fstp
cmp
mov
mov
mov
xor
iret
mov
sbb
inc
mov
mov
bound
sti
pop
sub
bound
or
jmp
int
cmps
int3
in
xchg
clc
push
test
bound
sub
stc
enter
fimul
or
mov
jae
cs
(bad)
fdivr
push
inc
aad
int3
(bad)
addr16
cmp
(bad)
push
jge
hlt
cld
es
in
mov
cmp
ins
dec
push
inc
repnz
mov
(bad)
cwde
lahf
push
das
test
icebp
mov
cmps
and
jae
dec
or
retf
inc
add
cli
stos
iret
mov
stos
jmp
mov
and
fbstp
(bad)
sbb
mov
dec
sbb
pop
sub
test
aas
xchg
and
pop
xchg
(bad)
push
pop
jb
xor
xchg
stc
ins
lea
adc
and
test
or
mov
inc
and
lock
mov
not
shl
fcomp
neg
xchg
mov
scas
pop
jno
xchg
mov
or
ret
xor
inc
dec
or
fs
(bad)
frstor
mov
in
dec
es
loopne
adc
lea
xlat
pop
sti
dec
push
aaa
sbb
mov
clc
jno
in
jne
dec
mov
dec
xor
xlat
jecxz
add
fsubp
ins
mov
push
jg
je
and
lahf
or
mov
mov
mov
loope
mov
mov
dec
and
cs
push
or
cld
inc
mov
xor
pop
inc
mov
sti
mov
arpl
jg
sti
inc
lods
cmp
rcr
repz
dec
mov
std
lods
es
jae
jo
mov
addr16
mov
(bad)
movs
mov
shl
sbb
sar
ret
push
pop
ret
aas
add
fmul
jge
push
add
stc
pop
test
jno
ret
movs
mov
lods
mov
inc
jmp
push
imul
outs
inc
xchg
pushf
jae
imul
sbb
fnstcw
imul
jne
or
(bad)
in
test
fcomp
loopne
addr16
cld
arpl
xchg
in
aam
mov
jge
sahf
dec
gs
je
push
jne
inc
ror
lods
leave
push
or
cmps
jbe
repnz
sbb
hlt
je
test
sbb
push
es
mov
enter
sbb
in
adc
pop
fxch
sub
xor
xchg
xor
fisubr
imul
mov
xchg
add
jo
hlt
fmul
movs
sbb
in
sbb
or
cli
pop
test
jo
repnz
arpl
icebp
xchg
cmp
push
aad
in
scas
pop
adc
sbb
mov
push
lock
pop
cmp
or
shl
mov
ss
cs
xor
data16
(bad)
call
xchg
movs
adc
xor
aam
mov
jle
mov
movs
fisub
mov
lods
cmc
xchg
sub
(bad)
jge
xor
mov
or
jl
sar
int
push
fmul
add
pop
gs
pop
push
neg
outs
xor
jge
xor
inc
mov
push
or
xchg
data16
push
ss
stos
int
cli
addr16
stc
mov
inc
xor
xchg
xor
das
fdivr
xchg
test
jae
cmp
aas
les
ret
fld
xor
test
ds
fwait
dec
or
je
xchg
xchg
push
push
pop
xchg
xchg
aad
cmp
cmc
cmp
fldcw
sub
mov
sub
imul
imul
lea
ins
inc
or
dec
add
dec
lea
rol
call
cmp
fmul
inc
loopne
inc
sbb
sahf
inc
fs
xor
sbb
inc
retf
xchg
fwait
cwde
and
out
cmp
fwait
mov
movs
nop
out
imul
xor
dec
shr
(bad)
add
mov
sub
fs
aam
mov
or
inc
cmps
repz
cmp
shl
dec
cmps
das
(bad)
stos
pop
mov
outs
mov
out
aam
mov
rcr
in
ins
xor
inc
push
out
sbb
or
pop
aaa
or
mov
in
mov
pop
adc
add
nop
lods
mov
sub
add
out
ret
out
test
cld
out
jg
shr
cdq
rcr
inc
sbb
mov
sub
popf
ja
jns
adc
cmp
mov
pop
jge
sbb
xchg
sti
cmps
add
popf
ss
hlt
mov
push
mov
fsubr
lahf
add
fnstcw
sub
sub
gs
or
mov
inc
mov
imul
mov
jl
pop
jo
push
aas
sub
cdq
aas
fdivr
jbe
dec
int3
dec
dec
call
outs
jg
jmp
lahf
jg
call
push
pop
xor
inc
xor
int3
lock
repz
lods
cli
xor
dec
mov
inc
push
and
mov
sbb
mov
push
stos
xchg
int3
xor
sbb
rcr
push
dec
scas
pop
fmul
pop
push
stos
xchg
into
push
outs
xchg
jp
int3
mov
adc
ret
or
outs
out
retf
or
daa
fadd
mov
mov
xchg
das
in
shr
test
aaa
xor
or
cmp
push
stos
imul
pop
push
or
and
jp
and
shr
xchg
xchg
add
jns
out
outs
(bad)
rcr
or
push
mov
out
lds
push
jmp
std
and
ror
jo
pop
nop
ins
and
mov
gs
push
js
mov
(bad)
or
jmp
mov
pushf
jmp
(bad)
movs
push
mov
cmp
pop
bound
repnz
daa
nop
inc
lock
mov
mov
jmp
fdivr
pop
lock
adc
pop
stos
ins
dec
shr
sub
lods
mov
cs
dec
jnp
mov
ficom
inc
sub
push
call
cmp
repnz
and
test
ss
adc
pop
inc
pop
jp
jo
adc
jmp
add
sahf
cld
adc
cmp
xor
int
ja
iret
mov
ins
jg
mov
imul
xchg
jge
xor
fistp
out
nop
cmp
mov
mov
adc
sub
lahf
mov
aad
mov
hlt
sub
sub
out
stos
add
xchg
push
scas
loopne
xor
(bad)
aam
cwde
push
call
pushf
xchg
div
rcl
das
loope
scas
fnstsw
and
push
cmp
xchg
movs
lock
frstor
push
rcr
push
gs
je
cmc
adc
ins
mov
push
inc
outs
xchg
clc
repnz
(bad)
push
and
pushf
xchg
mov
push
push
adc
mov
mov
sub
fstp
pusha
daa
rcr
stos
sbb
scas
xchg
popf
push
pop
std
add
add
aam
sub
mov
(bad)
ja
sbb
adc
cmps
nop
iret
cmp
test
ror
sbb
pop
(bad)
fdivr
fwait
adc
popa
imul
retf
cmp
fwait
xor
sbb
inc
in
cs
mov
cmps
fisttp
outs
pop
in
mov
push
dec
xlat
inc
xchg
movs
imul
mov
xchg
xchg
fmul
in
cmp
add
xchg
push
scas
dec
pop
push
ret
nop
mov
stos
push
pop
(bad)
dec
out
cmps
retf
adc
mov
ins
pop
loopne
mov
aas
(bad)
sar
loopne
fst
dec
jp
xchg
pop
pop
mov
and
shr
enter
fs
cli
add
pop
mov
rcl
icebp
mov
in
push
iret
cmp
mov
js
pop
mulps
neg
dec
pop
xor
pop
ins
dec
sbb
push
xchg
xchg
out
test
jnp
push
lea
sub
push
pop
add
or
pop
dec
outs
push
popf
popf
(bad)
sbb
daa
sbb
fs
adc
mov
xor
pop
mov
fdivr
and
movs
xlat
sbb
ret
sahf
pop
push
dec
cwde
mov
mov
idiv
adc
mov
push
aaa
aam
and
aad
sar
pushf
xchg
ds
call
cld
push
xchg
imul
and
ffreep
pop
sub
pusha
jp
xorps
push
ja
arpl
xchg
retf
mov
dec
lods
sub
push
data16
fsubr
jo
in
js
(bad)
shl
cmps
push
leave
pushf
je
jns
jbe
cmps
iret
iret
pop
push
aaa
push
adc
mov
rcl
into
mov
retf
add
sub
sbb
loope
xor
sub
js
clc
ss
ret
or
or
xchg
test
xor
add
loop
mov
add
adc
push
or
test
push
cwde
add
popa
retf
fnstcw
jns
jns
sub
out
and
test
pop
fiadd
bnd
lock
loope
jns
xchg
mov
pop
mov
into
shr
mov
imul
fmul
dec
or
add
out
jp
addr16
push
xor
dec
push
adc
fisttp
outs
adc
cmp
not
add
add
aad
and
cwde
add
repnz
fsub
ins
dec
dec
test
(bad)
movs
and
test
nop
mov
lea
jmp
pop
add
dec
std
(bad)
cli
cmp
pop
inc
mov
stos
and
js
mov
dec
inc
jp
add
sub
adc
mov
cwde
je
div
adc
stc
inc
fcmovbe
xor
mov
shr
adc
in
jl
pop
stos
jbe
sbb
jmp
xchg
retf
add
jmp
or
inc
mov
ret
dec
fsub
ins
mov
pop
pop
loopne
jne
pop
add
ja
aam
sar
mov
mov
test
mov
or
ins
mov
sub
jne
pop
mov
scas
dec
push
shr
aam
xchg
adc
xchg
pop
bound
ins
test
shr
cmove
movs
jbe
(bad)
mov
inc
adc
add
xchg
push
xchg
scas
add
ficom
inc
pop
stos
xor
mov
and
mov
(bad)
mov
sbb
ins
out
pop
shr
in
sub
and
dec
mov
call
jbe
push
sbb
push
mov
movs
fsub
sbb
aad
add
into
pop
and
sbb
movs
push
push
lods
push
adc
pop
faddp
mov
test
dec
test
loope
inc
test
imul
cmp
sub
and
lds
dec
ja
add
sub
mov
cmp
sbb
push
cmps
inc
pop
add
xor
lahf
loop
mov
outs
les
bound
sub
pusha
(bad)
mov
(bad)
addr16
or
mov
mov
bound
pop
add
mov
(bad)
add
loop
mov
and
add
js
lock
loope
push
sbb
movs
loopne
jbe
push
out
div
inc
js
mov
jge
popf
sub
sbb
cmp
push
or
js
add
aad
inc
and
xor
je
mov
stos
push
and
stos
dec
mul
es
inc
jnp
lahf
rol
push
outs
mov
pop
sub
sub
cmps
add
push
pusha
outs
add
cwde
xchg
scas
aaa
push
inc
inc
and
lods
xchg
jl
aaa
pop
xor
leave
or
pop
or
inc
jecxz
xchg
sub
int
add
sub
mov
add
mov
test
add
(bad)
std
mov
mov
or
mov
jg
cmp
(bad)
adc
cld
repnz
mov
in
pusha
or
cld
mov
cmc
mov
push
ja
mov
test
sub
cmc
add
jnp
pop
mov
jp
je
movs
pop
mov
inc
and
cwde
inc
and
inc
mov
arpl
inc
jp
add
imul
xor
push
(bad)
sahf
inc
sub
mov
mov
sbb
popf
inc
inc
ss
mov
repz
daa
push
hlt
mov
xor
hlt
push
push
iret
ins
iret
jmp
cmps
jge
dec
lods
popw
out
mov
cmp
pop
mov
pop
mov
pop
mov
fdiv
mov
xor
lods
neg
(bad)
ficom
jb
sub
and
sbb
movs
imul
cmp
pop
in
je
ss
jmp
and
sub
jns
adc
pushf
dec
xchg
dec
jns
xor
jo
mov
jle
out
mov
mov
in
fidivr
push
sub
cdq
out
mov
call
sbb
outs
pop
clc
xchg
cli
add
loopne
mov
cmps
jp
stos
lds
cli
in
ja
xchg
ins
popf
and
push
movs
push
add
(bad)
outs
add
add
pop
in
push
adc
icebp
call
dec
inc
mov
movs
cwde
ss
adc
sub
popf
aad
pop
push
(bad)
add
out
and
popa
imul
mov
in
push
fidivr
loopne
inc
cmp
and
pop
cli
jb
and
inc
push
pop
xor
pop
and
inc
cmp
inc
mov
rcl
call
adc
cli
xchg
addr16
jmp
mov
lea
aaa
jp
inc
and
mov
pop
shl
mov
cmp
repz
push
and
xchg
fldcw
and
aaa
sar
cdq
shl
clc
lea
push
sbb
and
or
and
and
inc
mov
jge
mov
or
iret
sbb
xor
sub
pushf
ss
pop
dec
stc
xchg
mov
sti
sbb
cpuid
mov
mov
imul
mov
(bad)
aad
push
cmps
cmps
sbb
and
and
xlat
sbb
or
mov
inc
jno
sub
mov
pop
xchg
lds
movs
mov
push
imul
aam
sub
inc
push
inc
ja
ret
enter
shl
call
psubusw
sbb
out
rcl
sbb
mov
jl
imul
iret
inc
pop
icebp
inc
pop
(bad)
fcomp
cs
cmp
imul
in
stos
sub
xor
aaa
mov
repz
leave
jbe
mov
cmc
or
pop
sub
jns
rcl
movs
pop
movs
popf
jne
pop
cmp
ss
lea
add
aaa
outs
pop
cmp
mov
push
mov
test
xchg
mov
cvttps2pi
jg
and
sbb
int
cdq
xor
sub
pop
pop
shr
and
aam
sub
mov
in
sahf
stc
or
lods
or
sub
iret
mov
(bad)
in
aad
cmp
xor
dec
test
mov
ins
sbb
cwde
pusha
bound
adc
hlt
xchg
ins
in
int
inc
clc
inc
mov
xchg
dec
cli
adc
rcl
ror
mov
(bad)
mov
push
jl
lds
sar
sub
jmp
sar
sti
outs
adc
stc
movs
cmp
retf
pop
pop
sub
sub
adc
mov
ss
xchg
jmp
pop
dec
das
stos
fidivr
pop
add
rcl
lods
add
push
int3
popf
xchg
pop
retf
ins
jp
test
stc
push
push
push
mov
(bad)
cmps
or
dec
pushf
push
jecxz
jl
mov
jl
inc
movs
push
test
sub
(bad)
jge
scas
add
fmul
outs
ret
shl
xchg
xchg
in
int
pop
loop
(bad)
pop
das
imul
bound
cmps
mov
imul
xchg
xchg
xor
jno
jg
daa
dec
mov
in
ins
ss
inc
jnp
sbb
and
out
adc
xor
add
aas
sti
dec
jp
aaa
jnp
fst
inc
mov
sbb
or
mov
add
inc
adc
sub
loopne
push
inc
xor
in
jbe
jp
push
dec
cmp
outs
int3
fidivr
jmp
aam
pop
fs
mov
mov
test
daa
fs
inc
rcr
sub
shr
cs
inc
add
mov
fld
test
test
dec
test
push
jae
scas
push
or
test
aaa
push
pop
rcr
mov
mov
outs
and
sar
icebp
call
lea
into
jle
push
out
nop
push
jb
sbb
(bad)
mov
add
dec
pop
test
repnz
call
pusha
je
fcomp
in
test
fcom
push
aas
mov
sub
stc
sar
sub
pushf
push
mov
mov
bound
rcr
lods
cli
jbe
pop
mov
pop
jne
mov
sub
pop
and
jmp
rcl
sub
pop
ret
dec
mov
(bad)
aas
and
cmc
cs
(bad)
mov
dec
dec
jns
icebp
jne
sbb
push
sbb
xchg
imul
push
mov
gs
ret
rol
push
repz
std
sub
jae
imul
or
cmp
dec
fstp
mov
out
adc
or
aam
jb
xor
push
mov
xchg
push
pop
ds
or
sub
loope
jae
rcr
add
push
jl
inc
and
inc
leave
imul
pop
xor
bound
or
out
scas
mov
and
movs
inc
push
cmp
test
jp
arpl
mov
inc
mov
ja
hlt
adc
div
les
cld
mov
mov
push
push
push
push
sti
mov
inc
ror
cmps
add
push
and
dec
xor
sbb
xchg
pop
sub
ret
sub
and
pushf
stos
push
shl
dec
lds
in
xchg
(bad)
retf
xor
mov
jmp
out
sub
cdq
je
adc
pop
and
in
jg
fadd
mov
leave
cmp
jbe
test
xchg
mov
fild
pop
and
stos
arpl
xor
adc
gs
push
movs
movs
pop
ins
outs
push
(bad)
sbb
xor
sbb
pop
sub
mov
retf
mov
es
in
mov
aam
fadd
cmps
add
(bad)
(bad)
push
std
shr
push
sbb
dec
cwde
or
and
test
sbb
mov
mov
mov
popf
dec
dec
pop
or
sub
cmps
adc
add
fadd
arpl
cmp
add
mov
pop
and
in
mov
dec
out
ret
jne
imul
ins
xchg
push
cmps
adc
jb
pop
xor
xchg
cmp
stc
js
loop
in
jbe
cmp
sbb
test
lock
in
mov
cdq
rol
popf
inc
call
je
mov
jmp
stos
shr
movs
sbb
js
int
jle
shl
vcmpss
jmp
mov
pop
push
mov
pusha
xchg
mov
push
retf
cld
cdq
retf
jno
nop
adc
pop
cmc
add
mov
dec
or
pusha
aas
out
mov
fsubr
scas
dec
or
stc
mov
fwait
mov
shl
jg
xor
push
push
xor
mov
repnz
xchg
xchg
and
push
mov
and
pop
push
push
pushf
push
dec
ins
lds
ja
aam
xchg
mov
popf
xor
jmp
shl
in
xor
pop
xchg
inc
mov
ja
iret
xchg
cmp
and
nop
mov
jbe
shl
cld
in
daa
lods
arpl
adc
repz
push
adc
mov
mov
mov
adc
cmp
in
pop
shl
sub
jne
add
(bad)
rcl
mov
jb
sti
xor
inc
test
scas
mov
in
sar
pop
sbb
sbb
std
inc
sbb
stc
movs
repnz
rcl
mov
out
sahf
popa
cld
repnz
iret
cwde
ds
xchg
push
mov
or
ja
js
adc
cs
xchg
xor
cmp
mov
cld
mov
gs
add
aas
imul
dec
xor
dec
or
imul
ins
mov
mov
rcl
push
frstor
sbb
imul
mov
dec
(bad)
sub
push
call
push
pop
sbb
sahf
push
out
mov
mov
jns
lods
xchg
sbb
call
sub
lods
out
nop
inc
cmp
mov
jl
loopne
adc
dec
ret
fmul
jo
mov
pop
fadd
cmp
xchg
repnz
mov
xor
rcr
stc
push
mov
xlat
sbb
rol
dec
stc
call
add
bound
pop
cmc
or
mov
inc
and
sbb
popa
xor
je
push
and
nop
shl
scas
add
pushf
push
inc
pop
xor
lock
hlt
and
mov
pop
aad
pop
loope
popf
stos
loopne
shl
push
jno
popa
lods
fs
sub
stos
dec
cmp
mov
pop
mov
aaa
in
fisub
push
ss
imul
inc
pop
push
xlat
nop
mov
jge
fs
lahf
stos
jmp
fistp
call
or
loope
cmps
inc
(bad)
xchg
add
out
clc
iret
fcom
cmp
mov
pop
adc
jo
rcr
or
xor
sub
pusha
mov
data16
xor
add
out
cs
loop
jo
xchg
movs
xchg
test
dec
push
jge
cmp
pop
jle
pusha
adc
leave
push
sub
popa
mov
add
(bad)
fadd
pop
int
or
or
xor
cmp
mov
mov
inc
mov
mov
nop
and
inc
mov
shr
cmp
loopne
mov
push
out
ret
test
sahf
push
dec
mov
ins
jmp
cmp
mov
popf
cld
dec
inc
cmp
ds
mov
or
push
dec
std
les
outs
dec
jns
push
(bad)
movs
retf
inc
ret
pop
dec
mov
sbb
push
push
ins
and
inc
lds
cld
cmp
mov
inc
mov
mov
adc
outs
xor
jle
outs
shl
jbe
fmul
test
icebp
xchg
jnp
inc
iret
out
sar
xchg
cld
stos
mov
mov
dec
cwde
and
(bad)
clc
sbb
inc
push
ja
jmp
sbb
outs
cmps
sbb
adc
xchg
out
or
sbb
inc
xor
xchg
mov
xor
call
(bad)
add
vpsrad
in
dec
test
xchg
enter
not
imul
cmp
dec
ja
push
add
call
ja
push
iret
hlt
sti
sbb
mov
repnz
jmp
xchg
(bad)
les
xor
sbb
repnz
jecxz
jg
lea
fcmovne
dec
cld
sub
cmp
sub
or
xlat
xchg
add
loope
inc
sti
ret
cmp
rcr
cld
sub
ds
cli
shl
clc
xor
fimul
mov
retf
in
mov
push
cmp
or
test
cdq
xchg
pop
rcl
ss
and
shl
xchg
inc
sub
ror
jne
aaa
fs
xchg
push
fiadd
jb
sbb
xchg
daa
jecxz
ds
mov
shl
hlt
out
retf
loopne
dec
sub
inc
imul
call
test
addr16
imul
fstp
xor
push
outs
mov
out
cmp
add
sti
cmp
clc
mov
retf
repnz
(bad)
int3
push
call
daa
adc
mul
call
mov
(bad)
dec
je
ins
in
add
in
xor
fwait
cwde
cdq
(bad)
pop
xchg
cmp
mov
push
lea
lea
xlat
(bad)
std
dec
jns
dec
xchg
dec
or
nop
inc
inc
push
daa
add
in
(bad)
std
test
jo
mov
and
sahf
inc
jbe
mov
xchg
call
mov
stos
cwde
sbb
push
or
xor
enter
scas
jae
aad
xchg
dec
dec
add
and
(bad)
rcr
jo
and
jmp
test
pop
push
ret
sbb
and
add
aas
stos
dec
mov
cli
inc
jnp
imul
aas
xlat
or
clc
pop
xor
dec
nop
cwde
outs
cmp
jnp
jmp
aas
sbb
inc
les
movs
fbstp
cmp
cmc
inc
(bad)
call
ret
rcr
call
add
inc
mov
stos
and
ja
stos
aas
imul
pop
outs
xchg
movs
inc
push
dec
push
jp
mov
js
sahf
and
dec
and
fwait
and
popa
hlt
jo
addr16
lds
push
es
cmp
or
in
inc
mov
daa
(bad)
arpl
mov
mov
jle
jle
xor
hlt
dec
(bad)
pop
lea
sub
jmp
mov
pop
xchg
mov
leave
mov
out
mov
shl
adc
xor
xchg
xchg
je
sbb
in
test
ds
sbb
and
add
xchg
pop
jle
mov
mov
sub
sub
pop
in
ins
aaa
inc
push
sbb
ret
pop
scas
sbb
loopne
(bad)
sahf
jge
mov
pop
cs
pop
stc
in
sahf
push
and
push
and
shr
jecxz
repnz
dec
pop
jno
inc
or
adc
inc
mov
pop
xor
cmps
dec
add
aaa
les
nop
mul
retf
mov
sti
push
pop
push
ret
shr
repz
push
jle
jp
mov
rcl
mov
push
sub
mov
loope
sbb
mov
je
popa
lea
popf
adc
jg
in
outs
(bad)
mov
xchg
mov
mov
ror
push
aas
imul
mov
adc
sbb
(bad)
in
arpl
fstp
push
xchg
call
mov
add
mov
pop
cld
fidiv
push
neg
not
or
xchg
aas
dec
mov
out
loop
mov
test
aad
mov
inc
mov
addr16
sub
mov
popf
pushf
stc
mov
dec
push
jne
mov
xlat
js
pop
xchg
inc
push
and
rcr
push
dec
mov
pop
cmp
repnz
sbb
or
cmovbe
push
aas
add
jmp
jo
fldcw
mov
push
in
ret
and
test
test
add
in
push
jl
clc
mov
retf
cmp
and
fdiv
sbb
icebp
popa
jmp
mov
fwait
in
lds
jns
aad
test
bound
das
shl
inc
stc
push
shr
stos
lock
jmp
fild
xchg
and
push
jl
dec
xor
out
add
adc
inc
add
mov
out
std
out
shl
fcmovnbe
mov
cld
pop
inc
jnp
imul
mov
pop
adc
sub
xor
daa
repnz
call
arpl
xchg
div
mov
pusha
sbb
cmp
imul
mov
pop
movs
push
add
xor
xchg
sti
pop
dec
jle
daa
out
idiv
fstp
cmp
and
mov
(bad)
adc
in
pop
mov
fwait
mov
jns
ret
(bad)
inc
and
mov
test
push
in
cmp
int
xor
inc
and
lock
mov
pusha
adc
das
loop
fs
push
cli
cmp
fdivr
jmp
mov
fist
or
jmp
mov
mov
pop
pushf
adc
test
dec
mov
sbb
add
cmps
lds
push
out
iret
mov
push
push
dec
jne
cmps
pop
(bad)
pop
dec
cld
mov
sbb
clc
scas
sbb
sbb
les
cmp
imul
xchg
xor
hlt
add
inc
test
mov
popf
addr16
arpl
xchg
mov
jb
adc
imul
pop
jb
inc
in
adc
(bad)
cs
neg
test
(bad)
jmp
inc
fsub
mov
rcl
(bad)
jno
cli
jle
mov
jb
pop
jbe
cmp
xchg
pop
jns
sbb
adc
in
es
ins
pop
and
xchg
stos
dec
cmc
ss
out
lea
fs
push
push
retf
mov
sti
and
xchg
mov
retf
mul
sbb
sub
ins
cmps
outs
mov
repnz
aad
dec
inc
rol
dec
mov
add
xchg
or
or
div
int
bound
lock
pop
push
xchg
xor
cld
mov
xor
sub
jne
mov
fiadd
inc
lods
mov
retf
sbb
add
mov
ret
mov
mov
cmps
sub
fld
jno
xor
cdq
xchg
xor
pushf
dec
retf
and
adc
jbe
inc
faddp
(bad)
push
sub
mov
adc
mov
sbb
neg
mov
inc
ds
jle
ins
push
test
jo
cld
je
add
retf
loopne
ss
ja
add
iret
fcmovne
sub
shr
js
(bad)
std
in
loop
dec
cmp
cmp
mov
adc
xor
sti
dec
mov
sbb
fisttp
mov
inc
jmp
and
iret
pop
cmps
sub
or
fbld
jns
aas
sub
fld
xchg
xlat
in
adc
(bad)
cmp
cmps
or
iret
jecxz
inc
mov
stos
shr
int
int3
push
sub
and
retf
movs
outs
cmp
sbb
lock
jp
xchg
jp
int3
pusha
iret
pusha
xor
dec
xchg
or
mov
push
jge
lods
mov
(bad)
repnz
imul
in
or
inc
enter
lods
repz
mov
rcl
pushf
mov
jp
sub
mov
out
mov
scas
sub
push
sahf
xchg
(bad)
adc
mov
add
sub
scas
lahf
push
call
(bad)
ss
mov
adc
aam
mov
into
gs
ja
jge
and
int
jg
call
fidiv
inc
cdq
sbb
(bad)
push
popa
sar
popf
sbb
sbb
popf
aas
out
sub
add
mov
xchg
add
stc
jns
retf
adc
mov
es
into
push
sub
(bad)
sbb
sub
inc
xchg
repnz
inc
lods
imul
out
ja
and
sbb
rcr
cmps
imul
inc
mov
loope
repnz
sahf
(bad)
or
jns
ins
nop
imul
dec
push
sbb
pop
add
arpl
sub
sti
iret
fwait
cld
pop
scas
inc
imul
stos
push
mov
hlt
imul
leave
ja
sbb
call
or
jp
mov
sub
pushf
rcl
sub
xchg
imul
inc
push
fdivr
dec
sbb
test
cmps
xor
das
sbb
ror
das
imul
into
xchg
rcr
mov
and
fmul
fwait
into
lea
or
mov
xchg
cmp
les
jmp
sti
mov
pop
dec
rcl
push
rcr
or
push
pop
dec
out
xchg
frstor
cmp
xor
lock
out
xor
enter
shl
adc
in
xlat
inc
sbb
out
jbe
nop
mov
pop
jno
sub
mov
imul
ficom
(bad)
ficomp
pop
add
xchg
in
sbb
loop
cli
mov
cmc
sub
or
jae
aam
mov
sbb
lahf
xchg
mov
in
out
and
push
imul
adc
pop
mov
push
outs
mov
inc
add
mov
mov
pop
ja
scas
jecxz
mov
fcmovnb
jmp
lock
mov
popa
xchg
dec
(bad)
cmc
jns
push
push
(bad)
mov
dec
rcr
aad
inc
pop
(bad)
ins
mov
lds
sub
and
call
mov
xchg
pushf
sub
shr
out
and
repz
dec
xor
and
jb
dec
ja
cmp
movs
cmp
adc
xor
xchg
mov
cmc
mov
mov
pop
test
icebp
sahf
xlat
daa
cli
or
ja
jg
movs
test
movs
mov
sbb
loopne
(bad)
pop
mov
xchg
xor
mul
and
xlat
adc
shr
cwde
in
mov
add
xchg
and
ret
xlat
test
push
jb
pop
das
dec
xchg
xlat
cmp
movs
aam
mov
mov
jge
or
aas
or
ror
adc
mov
sbb
fist
add
test
or
cli
jb
int
inc
in
mov
test
ds
xchg
stos
pop
jp
aas
popf
popa
dec
test
mov
xchg
pop
pop
in
popf
pop
jmp
adc
mov
outs
push
stos
cdq
inc
pop
or
mov
cwde
ret
test
js
pop
adc
icebp
add
inc
sahf
add
outs
jge
jmp
sti
fnstenv
sahf
xor
jmp
retf
inc
gs
neg
mov
and
stos
(bad)
push
mov
js
lahf
(bad)
neg
fs
test
cmp
add
mov
push
fdiv
pusha
adc
sbb
pop
adc
stos
scas
nop
inc
inc
add
sahf
or
ss
push
mov
out
pop
das
popf
mov
imul
add
(bad)
aaa
leave
xchg
adc
push
dec
xor
push
jl
fs
mov
inc
icebp
mov
out
mov
arpl
cmp
loope
scas
mov
push
shl
les
adc
mov
aas
ret
add
stos
cli
push
mov
lock
(bad)
(bad)
(bad)
xchg
push
sbb
jae
xor
push
cs
ins
imul
mov
and
int3
xchg
and
or
sahf
fidiv
aam
jnp
cmp
icebp
pop
aam
pop
inc
jmp
pop
xlat
and
lahf
and
icebp
and
add
mov
jmp
ss
xchg
xchg
ja
loop
outs
arpl
gs
leave
inc
vmread
lds
push
ins
mov
push
jne
(bad)
cmp
popa
in
enter
sub
bound
addr16
pop
jo
push
arpl
pop
pop
popa
ror
data16
(bad)
fadd
and
cmps
fnstcw
and
into
(bad)
mov
mov
push
mov
dec
out
xlat
dec
aad
cmp
outs
sbb
mov
lahf
add
and
data16
and
sbb
xchg
mov
sbb
mov
hlt
lds
sar
inc
pop
adc
adc
out
inc
cmp
jo
das
loopne
dec
cmp
sub
cmp
mov
fstp
jg
(bad)
iret
inc
adc
mov
adc
sbb
or
xor
stos
sub
xor
cmp
add
pop
addr16
adc
xor
and
mov
mov
mov
mov
xor
pop
cmps
fs
cmc
xor
inc
cmp
push
ss
ins
icebp
jge
mov
dec
push
in
mov
rol
xchg
stos
dec
int
mov
faddp
xor
jo
call
les
jb
mov
pop
test
mov
jle
add
mov
xchg
mov
ficom
xchg
(bad)
jb
pop
loop
xchg
push
sti
rcl
push
cmps
shl
mov
push
jae
aam
lods
call
cdq
ror
movs
pop
inc
jno
inc
stc
cdq
sti
hlt
das
sbb
xor
std
nop
cmp
retf
sub
pushf
xor
outs
push
pop
(bad)
int3
scas
push
mov
mov
out
shl
movs
mov
fs
sub
loope
ss
xor
sub
adc
mov
xor
inc
loopne
je
idiv
fstp
jmp
daa
mov
and
out
imul
add
test
pop
mov
pusha
dec
jb
shl
inc
icebp
adc
mov
dec
pop
dec
scas
outs
jae
mov
xchg
and
cmps
pop
or
and
out
mov
xor
add
fnsave
add
ja
imul
dec
(bad)
inc
cmp
jg
mov
imul
call
push
(bad)
mov
cmp
pop
mov
jnp
xlat
sbb
js
adc
inc
xor
adc
cmp
mov
inc
pushf
cld
movs
(bad)
cli
fst
(bad)
fidivr
mov
push
retf
mov
idiv
add
jo
fild
and
jmp
clc
jecxz
xor
or
cmc
std
push
mov
mov
fimul
add
lock
call
sub
jle
stos
je
jo
jge
les
aam
mov
jb
cld
test
das
add
mov
push
pushf
icebp
inc
aas
out
jo
jno
rcr
out
dec
cld
fidiv
add
into
and
rol
xchg
xchg
bound
icebp
sti
sbb
dec
fist
cmc
pushf
mov
or
adc
test
stc
jmp
sub
cli
add
imul
mov
pop
inc
jns
inc
mov
jmp
test
pop
dec
enter
ss
shl
retf
jne
jg
inc
in
mov
sahf
pop
int3
(bad)
int
sub
fstp
jns
jge
jl
pop
cli
mov
push
imul
movs
sbb
or
inc
mov
ret
aam
mov
xor
aam
lahf
pop
and
movs
mov
aam
cmp
out
test
(bad)
adc
pop
xchg
out
mov
mov
sub
xor
shl
ror
das
mov
repnz
xchg
xchg
ret
test
dec
rcl
sti
pop
fild
fadd
and
mov
jmp
or
sub
jns
scas
sti
daa
ds
test
xor
mov
(bad)
dec
sub
popa
sbb
mov
dec
mov
cmp
xchg
xchg
xchg
dec
mov
pop
mov
cld
xor
addr16
or
cs
in
mov
leave
mov
cmp
mov
in
sbb
xchg
es
jo
pop
jo
cs
in
xchg
bound
dec
repnz
(bad)
lock
out
(bad)
cmc
rol
leave
add
out
mov
and
les
pop
call
retf
sahf
adc
out
outs
aas
(bad)
loopne
imul
mov
adc
rcl
add
cmp
shl
jecxz
add
popa
shr
(bad)
retf
sub
push
push
dec
xchg
push
push
push
enter
mov
es
pop
sub
push
pop
jge
xchg
sbb
enter
pusha
je
les
add
sub
mov
add
xchg
sub
sbb
dec
sub
(bad)
outs
popa
lea
call
inc
and
or
add
std
xor
(bad)
pushf
clc
jae
adc
mov
out
cmps
mov
fdiv
ret
and
in
cmp
in
ins
cmp
(bad)
fyl2xp1
jmp
test
repnz
add
sub
outs
add
ror
fwait
rcr
out
inc
adc
mov
addr16
test
cmps
rcl
test
push
daa
dec
push
push
and
sbb
clc
mov
pop
inc
xor
push
cmp
fld
adc
mov
imul
add
enter
arpl
dec
aas
int3
cmp
cs
pop
movlps
and
rol
fs
cwde
stos
imul
inc
retf
sub
and
sbb
fisubr
or
sbb
ret
adc
imul
inc
mov
pop
lods
xor
pop
push
ret
adc
ins
bound
push
loop
xchg
(bad)
pop
adc
sub
inc
inc
and
das
lea
mov
push
ret
and
dec
push
scas
call
inc
or
adc
data16
push
vunpckhps
dec
or
rcr
push
sbb
leave
mov
mov
adc
and
lods
int
and
in
sbb
sub
in
ins
cwde
inc
mov
lods
test
jo
stos
(bad)
jg
dec
retf
pop
xchg
mov
je
iret
xchg
lods
jnp
sti
cmp
mov
add
call
xchg
int3
aam
(bad)
push
jmp
in
mov
adc
inc
stc
stc
mov
and
loop
push
add
shl
movs
ins
dec
nop
mov
hlt
and
sub
add
scas
addr16
sbb
or
lds
stc
enter
movs
or
addr16
sysexit
in
retf
or
pop
dec
mov
mov
inc
pushf
push
add
cdq
sub
rol
cmc
rol
test
cmp
pop
hlt
(bad)
jno
div
mov
jnp
or
inc
jle
dec
inc
add
pop
inc
in
inc
and
mov
jo
test
dec
pop
and
pop
in
dec
out
inc
xchg
fld
xchg
mov
adc
ret
cmp
mov
int3
(bad)
mov
inc
mov
test
and
push
test
or
sub
mov
jo
mov
es
rol
push
fist
loop
xchg
test
lods
retf
xchg
lock
push
js
cmp
(bad)
pop
inc
les
test
mov
out
push
imul
mov
push
adc
cdq
add
sub
cmp
call
rcl
cmp
add
jnp
mov
dec
mov
mov
xchg
dec
out
popf
pop
inc
pop
push
sbb
xchg
or
pop
inc
add
and
ffreep
test
mov
jne
movs
bound
(bad)
xchg
mov
xchg
std
sti
or
fist
pop
push
and
repz
push
dec
pop
xor
out
pop
add
movs
movs
and
clc
xchg
add
movs
into
push
dec
jmp
add
or
clc
xchg
mov
ja
repz
mov
push
dec
ins
lods
stc
dec
bnd
ficom
sbb
xor
into
pop
or
shl
sbb
adc
adc
and
mov
sub
ret
dec
lock
loopne
adc
xchg
push
add
jge
mov
(bad)
stc
nop
mov
jg
cmp
push
stos
xchg
pop
cwde
mov
mov
sar
jbe
jns
outs
xor
fisubr
jg
jg
dec
test
mov
retf
hlt
jbe
pop
cmp
ds
movs
fild
xor
add
mov
(bad)
in
mov
push
aas
mov
lahf
mov
xor
xchg
or
xchg
dec
lock
push
(bad)
sub
xchg
xchg
int
xor
test
pop
inc
gs
dec
mov
sub
pop
ficomp
lahf
sti
xchg
loopne
add
sti
cli
adc
dec
ins
push
mov
lahf
pop
cmp
cmp
fdiv
lods
or
lea
and
fmul
sub
xchg
popf
ss
out
xor
mov
imul
jne
outs
dec
and
test
sbb
sbb
xor
shl
stos
call
dec
js
push
jl
xor
nop
fnsave
out
sti
xlat
jnp
cwde
test
sbb
xchg
test
dec
fcom
sti
clc
sbb
mov
retf
in
push
and
add
stos
pop
lods
adc
or
cmp
sub
cwde
fbld
lods
mov
ins
call
iret
or
(bad)
xlat
stos
out
(bad)
jmp
add
push
pop
push
fwait
jb
jne
or
aad
retf
pop
std
cmp
(bad)
loope
jmp
stc
push
or
inc
movs
test
sbb
call
cmps
push
jb
xor
pop
pop
ins
pushf
pop
loopne
test
mov
mov
push
push
inc
fwait
pop
sbb
(bad)
mov
retf
test
pop
dec
and
jecxz
or
xchg
sub
sar
sbb
lods
sbb
push
test
cs
add
push
call
ins
rcr
or
mov
cld
aas
sbb
(bad)
inc
cmps
inc
inc
push
in
pop
pop
pop
scas
inc
leave
jmp
jecxz
xchg
shl
repnz
cwde
xchg
sub
ret
xchg
push
adc
cwde
mov
or
mov
xchg
adc
fs
repz
or
and
iret
icebp
mov
push
mov
ja
xor
mov
jbe
xchg
arpl
and
movs
push
mov
xlat
shr
outs
sub
iret
inc
loop
dec
mov
dec
test
mov
(bad)
lea
out
inc
sbb
add
ret
and
cmc
pop
mov
mov
icebp
jle
lods
and
sbb
cwde
inc
ror
nop
adc
cmp
aas
stos
in
mov
call
mov
cmp
inc
jnp
mov
inc
daa
stos
mov
cli
neg
lods
xlat
jge
mov
dec
rcr
inc
aaa
mov
pushf
call
sub
pusha
xchg
add
xor
or
jb
movs
adc
enter
test
adc
test
pop
sub
retf
retf
lahf
push
ins
mov
pop
stos
jle
xor
push
(bad)
dec
cwde
sbb
add
bound
push
lahf
xchg
mov
ins
shl
push
adc
ja
inc
push
and
dec
(bad)
add
sub
rcl
mov
mov
mov
sbb
and
cmps
fneni(8087
or
add
dec
(bad)
test
(bad)
push
jp
mov
mov
adc
repz
jo
pop
ror
push
loopne
imul
adc
int3
inc
push
xchg
lods
out
mov
cmp
cld
loop
jmp
jne
test
or
and
fstp
adc
add
jnp
jge
push
mov
xor
cli
jne
add
xlat
jb
mov
mov
cmp
dec
mov
es
retf
retf
sbb
jl
in
xchg
repz
sar
sub
ins
xchg
sar
lods
sub
repnz
cdq
jne
aas
icebp
sahf
jg
inc
add
(bad)
bound
mov
neg
data16
or
xor
sbb
sub
add
adc
or
mov
xchg
and
push
test
and
(bad)
fist
mov
sti
push
jne
ret
jo
and
jl
das
dec
je
and
popa
rol
test
ds
inc
push
int
and
mov
cli
pop
ror
lock
movs
xchg
xor
ja
push
inc
jne
dec
pushf
sub
mov
dec
pop
retf
in
ins
cmp
int3
sbb
dec
add
loope
(bad)
ja
adc
jecxz
inc
inc
loope
cmps
jo
mov
xchg
sahf
sbb
inc
mov
mov
test
jbe
and
or
cmp
xor
and
mov
test
adc
push
stc
fcom
sub
rcl
into
and
add
xor
push
pop
popf
cmps
push
dec
xchg
loope
xchg
(bad)
adc
movs
addr16
mov
popa
or
and
mov
sahf
fstp
stos
rol
call
fidiv
aaa
push
push
and
cmp
sub
out
mov
and
xchg
lds
rcr
inc
mov
push
inc
add
call
push
int
jp
dec
arpl
test
clc
or
pop
lahf
shl
stc
stos
pop
sub
adc
(bad)
out
mov
aam
dec
lea
inc
push
pushf
gs
es
retf
mov
leave
pusha
sub
and
xchg
ret
add
push
sub
dec
(bad)
out
xchg
out
repz
dec
push
add
repnz
mov
mov
jmp
inc
push
mov
mov
cmp
xchg
sub
mov
push
mov
dec
sti
sbb
and
shl
add
fwait
jmp
adc
inc
add
xor
loop
in
xor
scas
out
cwde
or
aam
cli
inc
xchg
pushf
aas
mov
add
pop
mov
cmp
nop
nop
popa
mov
loop
pop
fbld
test
ror
adc
cmp
mov
lahf
ins
add
in
cmp
sti
adc
mov
dec
pop
mov
mov
xchg
xchg
adc
std
xor
xor
sub
or
xor
xor
mov
stc
xchg
jp
lods
inc
and
ret
or
in
pop
jno
mov
sub
data16
sti
les
sbb
stos
cmp
sbb
leave
xor
(bad)
aad
dec
cli
movs
jb
cmp
pop
call
xor
call
adc
push
and
stos
inc
and
rol
jmp
cdq
outs
mov
or
cmps
pusha
add
mov
inc
scas
fs
and
cmp
mov
cmp
mov
popa
ficom
hlt
and
je
out
sbb
stc
loope
mov
cmp
movs
jecxz
lahf
mov
xlat
pop
out
ja
dec
xchg
jg
sub
popf
xchg
mov
and
enter
cs
sbb
addr16
xchg
push
ja
push
int3
aas
ins
push
mov
and
test
jmp
pushf
or
fild
fisubr
dec
mov
mov
xor
test
icebp
repz
stos
jns
imul
dec
add
test
movs
stos
dec
adc
ins
sbb
mov
jmp
pop
fbstp
push
dec
push
lds
mov
jl
popf
inc
test
(bad)
mov
popf
shl
fsubr
aad
lahf
std
sub
std
cmp
or
add
add
mov
cmp
icebp
mov
imul
data16
ins
adc
push
or
in
push
mov
mov
mov
sub
xor
xor
mov
add
ins
test
mov
ret
loop
adc
jp
retf
sub
leave
outs
test
sbb
pop
xchg
repz
fild
jnp
sbb
scas
(bad)
rcr
push
xchg
mov
ret
xor
jbe
inc
das
imul
jp
mov
mov
(bad)
popa
repz
mov
jo
push
(bad)
xchg
in
fs
sub
nop
dec
das
sub
(bad)
xlat
cmp
(bad)
cmp
cmps
xchg
lea
sahf
cmc
test
pop
aas
mov
cmp
push
stos
fisubr
add
rcr
xchg
and
addr16
fmul
and
icebp
xchg
mov
popf
push
dec
cmps
call
xlat
inc
test
push
or
mov
add
dec
(bad)
aam
mov
push
xor
daa
pop
loopne
mov
loopne
dec
push
add
mov
xchg
push
iret
pop
(bad)
pop
push
cmps
cmps
test
push
and
dec
add
in
in
ficom
mov
dec
adc
and
jnp
add
stos
popf
outs
scas
mov
sahf
pop
mov
ja
mov
pop
xor
dec
add
(bad)
jge
sub
jl
xor
imul
and
add
pop
push
ins
fstp
push
aam
jge
test
movs
dec
sbb
pop
push
add
lds
stc
(bad)
cmp
(bad)
cmc
xor
add
fist
jb
mov
pop
xchg
pop
mov
hlt
mov
fs
dec
mov
fldenv
mov
test
pop
and
(bad)
jnp
ds
inc
mov
mov
cld
mov
dec
xchg
fstp
push
fnstenv
repz
inc
jl
ret
mov
push
dec
cmps
(bad)
xor
sbb
jle
dec
and
sbb
xchg
shl
mov
out
cli
add
add
or
repnz
fidivr
fs
cmp
mov
mov
xchg
sbb
cmps
cmp
imul
iret
test
or
add
jmp
push
mov
lea
jb
jns
xor
adc
or
push
xchg
xchg
(bad)
sub
imul
jnp
mov
push
dec
int3
pusha
xor
and
add
iret
(bad)
xchg
push
iret
stos
ficom
call
sub
fwait
ds
xlat
clc
push
rcr
and
mov
fdivp
xchg
mov
xor
ds
mov
mov
pop
aas
or
xor
test
jns
popf
add
adc
fistp
repnz
ficomp
xor
scas
add
leave
lock
shr
(bad)
push
test
sub
push
jmp
and
inc
push
cmp
mov
sbb
pushf
movs
lds
ret
in
test
or
in
in
sub
and
push
and
mov
xchg
(bad)
pop
shl
scas
in
fwait
retf
std
rcr
push
mov
mov
jmp
sub
into
fs
or
adc
mov
out
mov
loopne
dec
scas
(bad)
int3
adc
stos
push
lahf
sub
repnz
adc
xlat
popa
mov
and
push
and
jg
mov
rcr
(bad)
adc
mov
jecxz
icebp
int
jo
mov
das
sbb
add
dec
add
out
ret
neg
cmp
jp
and
test
mov
int3
out
pop
sub
dec
js
rcl
sbb
xor
xchg
(bad)
into
xchg
lods
out
fcomp
sbb
into
fistp
mov
int3
sbb
test
sub
frstor
ficomp
cmp
ret
xchg
idiv
lds
and
pop
dec
lds
out
(bad)
or
lods
retf
mov
mov
xchg
push
mov
mov
push
mov
cs
fmul
cmp
les
push
jb
sti
ret
xor
xchg
mov
xchg
psrld
iret
test
(bad)
test
mov
fdivrp
mov
mov
jmp
lods
and
dec
hlt
cmpxchg
mov
stos
jns
fnstcw
dec
inc
mov
pop
mov
gs
pop
jmp
hlt
adc
xor
push
sbb
or
or
cmp
movs
mov
ja
je
pushf
lea
call
add
or
push
not
test
mov
int3
loopne
aad
xor
push
ret
std
loopne
mov
lods
mov
add
(bad)
(bad)
xor
mov
jb
iret
jecxz
xchg
dec
push
into
mov
std
gs
sbb
push
cmp
rcr
rcl
(bad)
mov
mov
xchg
out
movs
jb
inc
jnp
js
cmc
loope
aam
sub
dec
mov
sub
mov
dec
not
mov
pop
sti
adc
adc
shl
retf
int
adc
out
xlat
ins
inc
ret
jmp
jmp
ret
shr
shl
(bad)
adc
out
push
adc
mov
or
loopne
inc
mov
lods
ret
or
out
mov
jl
mov
xchg
es
outs
ja
xchg
sbb
dec
jbe
movs
int
inc
xchg
(bad)
int
push
dec
sbb
pop
and
pop
in
lods
jns
pop
test
sub
mov
pop
jl
pop
mov
test
pop
fild
dec
sbb
push
enter
loope
sub
lods
retf
cmps
fsubr
cmps
jo
addr16
inc
(bad)
daa
jecxz
push
ror
stos
or
cdq
lahf
sub
je
enter
jmp
xor
jno
jl
scas
jb
xchg
and
pop
dec
inc
scas
call
sub
mov
and
les
int3
pandn
sub
sub
sub
test
or
neg
pop
cmp
js
adc
sub
fcomp
icebp
sub
aas
lods
retf
(bad)
cli
xor
pop
in
dec
clc
cdq
xchg
aaa
add
push
(bad)
in
xchg
loope
mov
mov
and
pop
xchg
xchg
inc
jp
cmp
popf
fmul
std
movs
dec
dec
mov
cli
pop
test
add
call
cwde
ret
out
addr16
add
push
cmp
jmp
(bad)
adc
pop
das
or
mov
pop
jnp
repnz
das
test
pop
xchg
cmc
sub
call
das
nop
dec
mov
adc
sbb
xlat
cs
add
add
mov
movs
das
enter
retf
add
not
push
mov
sbb
or
mov
xchg
pop
loopne
inc
inc
sub
push
mov
test
xor
dec
mov
shl
adc
xor
cmp
fstp
mov
inc
aad
daa
sub
dec
pop
ja
popf
jg
test
out
xchg
sahf
pop
xchg
(bad)
retf
ds
xchg
xlat
jnp
dec
loop
xchg
cmp
pop
add
dec
jns
ins
outs
and
shl
mov
arpl
or
jns
daa
js
sub
dec
icebp
pushf
and
pop
nop
push
xlat
jbe
jno
and
mov
xchg
adc
test
xchg
retf
psllq
and
xchg
into
or
imul
jbe
push
shl
lods
mov
dec
idiv
cmps
mov
(bad)
(bad)
sub
ins
sbb
xor
jnp
jmp
lods
pop
das
int3
mov
out
(bad)
in
cmp
push
out
fcom
icebp
add
test
cmp
popa
inc
and
xchg
pop
dec
out
pop
mov
lds
or
mov
jae
fsubr
sti
jl
sbb
push
mov
(bad)
mov
arpl
adc
mov
mov
xchg
scas
popa
test
push
sub
xchg
and
push
enter
mov
push
xchg
dec
pop
adc
cmps
mov
or
lahf
imul
sbb
pop
in
fdiv
aam
in
fwait
pop
cmc
xlat
fimul
push
pusha
fidiv
scas
out
xlat
lods
and
lods
mov
ins
adc
mov
sub
or
in
jge
ds
aaa
xchg
or
(bad)
aaa
rcr
cmp
push
imul
call
stos
xchg
pop
or
sar
out
xor
push
pushf
cmp
mov
adc
adc
out
into
xchg
sub
cmps
cwde
xor
mov
cs
pop
cmp
mov
test
or
mov
(bad)
adc
aad
pop
ficomp
je
push
in
repz
mov
add
cmps
out
sbb
test
fst
outs
addr16
mul
int
das
jg
and
ficom
arpl
cwde
push
fistp
mov
mov
icebp
and
not
pop
push
ror
cmps
inc
sbb
retf
xchg
sub
jge
icebp
and
adc
aas
mov
or
stc
inc
mov
repnz
xchg
dec
cmp
jmp
loope
adc
rcl
and
das
or
in
mov
arpl
mov
xchg
push
pop
(bad)
xchg
out
xchg
dec
test
mov
cwde
sahf
sub
pop
push
xor
pop
fldcw
or
inc
(bad)
lods
mov
add
test
mov
int3
test
xchg
adc
in
jge
push
xor
push
lahf
fst
inc
leave
push
loop
stc
sbb
pusha
mov
repnz
cmp
jl
bound
(bad)
jl
sbb
mov
xor
in
or
js
inc
pushf
push
push
mov
and
dec
mov
mov
hlt
xchg
pusha
daa
fldcw
pop
dec
mov
data16
jne
lahf
mov
xlat
mov
ficom
scas
jp
fcomp
test
add
jb
loope
enter
bound
sti
stos
call
or
mov
addr16
fcmovbe
or
mov
stc
xor
mov
(bad)
test
push
test
dec
sub
in
add
mov
fistp
loope
mov
pop
dec
loope
cmp
movs
mov
mov
clc
push
mov
int3
mov
lock
in
or
xchg
les
sbb
das
push
rol
sbb
mov
inc
pusha
test
sub
or
mov
sbb
ins
sub
inc
push
adc
enter
addr16
mov
jb
mov
mov
xchg
xchg
aam
cs
loopne
and
dec
inc
retf
ds
and
push
pusha
ins
ror
je
sbb
ret
xor
or
cld
sbb
push
imul
pop
pop
aad
in
mov
xor
add
inc
pop
stos
mov
push
xor
dec
lahf
ret
and
or
sbb
js
fidiv
pop
icebp
aam
pop
mov
cmp
stmxcsr
fbld
lods
call
and
adc
push
sahf
jnp
and
inc
lds
addr16
mov
or
push
and
inc
cmps
adc
es
sub
push
retf
inc
add
mov
jns
or
(bad)
inc
pusha
lahf
push
or
(bad)
and
lods
adc
std
(bad)
fisttp
push
(bad)
test
ficom
std
scas
test
(bad)
lds
(bad)
xchg
sub
retf
shl
stos
lahf
cmp
(bad)
rcr
sar
sub
sub
jnp
mov
jp
jg
in
mov
ficom
lods
out
(bad)
sub
push
mov
add
and
imul
mov
mov
sub
xor
cmp
push
adc
cmp
mov
lods
push
ret
jmp
xor
add
sbb
xor
and
lea
pop
mov
pop
pop
and
dec
fcomip
inc
or
enter
pop
shl
nop
retf
imul
sbb
cmps
mov
lds
stos
jmp
mov
adc
int3
jg
pop
adc
out
pop
pusha
pop
leave
test
mov
(bad)
sahf
jmp
shr
inc
cwde
inc
sub
cmp
test
js
cwde
push
mul
(bad)
in
sub
pop
test
jae
jmp
aam
sub
mov
test
mul
xor
retf
push
xor
fdiv
loop
cmp
dec
xchg
sbb
push
cwde
jb
dec
sub
jecxz
test
and
ror
xor
jne
add
les
cld
adc
sbb
popf
into
and
mov
add
push
shl
jne
outs
pop
leave
ror
in
adc
hlt
rdtsc
xchg
cs
mov
dec
out
lahf
mov
cld
scas
sub
inc
and
fmul
outs
ficomp
add
cmp
aad
sbb
jnp
mov
xor
mov
imul
in
mov
and
retf
(bad)
out
aaa
sbb
mov
ja
cmp
dec
pusha
xchg
ror
xlat
icebp
pushf
pop
call
cmps
lahf
data16
out
outs
gs
ss
(bad)
jl
mov
xor
xchg
repnz
or
in
push
arpl
rol
add
bound
sbb
call
mov
xchg
inc
lock
mov
(bad)
mov
shl
les
lahf
das
dec
inc
pop
xchg
push
scas
push
pop
mov
push
cmp
xor
dec
mov
popa
rcl
xlat
dec
cmp
inc
test
das
cmp
push
push
popa
cmp
mov
lock
lock
or
call
rcl
jmp
popf
nop
or
jbe
cwde
ss
mov
push
sbb
das
scas
sub
test
xchg
inc
shr
inc
xor
sbb
sub
mov
jns
dec
test
ss
jno
sbb
scas
adc
popw
xor
loop
mov
pop
js
popf
repnz
leave
jp
mov
mov
movs
retf
xor
lds
cmc
mov
push
fdiv
mov
sub
xlat
fstp
lock
jl
pop
fwait
retf
ins
xchg
cmp
loop
xor
mov
ds
fsubp
mov
mov
ss
addr16
push
jbe
popf
and
mov
mov
cmp
fstp
jge
in
fdivrp
(bad)
pop
pop
adc
xchg
daa
inc
cmp
rol
sbb
cmc
mov
sub
cmp
mov
gs
imul
mov
(bad)
mov
nop
fnsave
push
mov
mov
mov
adc
scas
inc
shl
sub
xchg
bnd
push
jae
out
outs
push
xor
in
(bad)
mov
mov
push
movs
pop
jbe
ret
jb
sbb
lahf
test
addr16
ret
mov
int3
pusha
cli
rol
lods
mov
sub
shl
ds
push
outs
in
outs
dec
sti
jmp
and
cli
stc
or
(bad)
out
xchg
adc
dec
addr16
jae
sub
mov
icebp
hlt
fsub
add
or
sub
lea
mov
cmp
sub
push
dec
pushf
sub
adc
retf
xor
jp
not
sub
push
retf
mov
push
sub
(bad)
jmp
(bad)
rcr
mov
iret
imul
and
push
mov
pop
and
cmp
xor
fs
sub
mov
push
adc
(bad)
imul
repnz
je
sub
cmp
mov
out
test
jl
xchg
add
bnd
test
jmp
out
mov
scas
or
es
mov
pop
cli
sbb
inc
cs
out
bound
fucom
inc
pop
xor
outs
xor
out
sbb
dec
pop
jne
enter
adc
imul
pextrw
mov
rol
dec
mov
jecxz
mov
ror
sbb
out
lock
fcmovu
and
hlt
inc
or
mov
jecxz
in
and
(bad)
or
(bad)
pop
inc
imul
dec
adc
mov
cmps
movs
mov
imul
stc
arpl
mov
sub
call
pop
xor
inc
mov
push
jle
pop
sub
inc
iret
cmps
lahf
mov
retf
mov
(bad)
jno
or
neg
loope
push
test
repnz
mov
fld
stc
jmp
sub
or
push
in
lods
pusha
and
push
retf
dec
bound
mov
ss
repnz
push
pop
sub
cmps
lods
jnp
and
cmc
in
mov
jmp
enter
mov
nop
mov
xchg
jmp
jbe
adc
xchg
enter
and
dec
push
mov
mov
jne
push
cmp
mov
std
adc
test
xlat
or
ret
jae
jne
cld
dec
test
retf
popf
inc
xor
inc
dec
or
jg
mov
fcomp
movs
leave
cmps
aad
push
inc
jnp
jmp
call
lea
sub
cmc
stos
scas
call
loopne
cmp
pop
jne
mov
sbb
cmp
xchg
cmps
out
cld
daa
xchg
call
outs
mov
stos
ror
xchg
addr16
mov
xchg
test
loope
pop
sar
xor
shl
data16
mov
mov
inc
ror
push
jns
cmp
or
lock
push
mov
rol
mov
retf
cmp
mov
std
xchg
fwait
or
enter
mov
inc
fisubr
xchg
clc
imul
mov
push
jns
ss
adc
mov
add
adc
jno
imul
sub
push
fimul
repnz
bound
mov
jae
add
mov
fs
push
mov
mov
adc
sbb
cmps
dec
call
cwde
xchg
jo
jge
mov
int3
sub
cld
push
mov
aam
dec
pop
movs
repnz
mov
jmp
ss
and
pop
mov
loope
icebp
sbb
xchg
stc
fcmovnu
jne
mov
pop
dec
xor
push
frstor
jecxz
(bad)
lds
movs
adc
xor
or
test
ins
xchg
mov
mov
clc
fs
xchg
sub
fist
pop
sub
inc
out
scas
dec
jno
fistp
push
jbe
add
inc
dec
mov
inc
push
pop
in
sub
or
out
ins
das
clc
xchg
adc
lods
shr
in
mov
(bad)
cmp
pop
nop
dec
scas
sub
test
sbb
push
in
xor
sahf
sub
loop
fbld
cmp
pop
inc
dec
sbb
mov
icebp
xor
popf
or
(bad)
push
call
or
fisttp
fcomp
add
and
sbb
cmp
dec
and
mov
(bad)
es
repz
jno
xor
xchg
mov
imul
xor
jg
mov
xchg
mov
popf
gs
hlt
inc
xchg
lds
add
cld
ds
popa
fwait
mov
out
jns
sub
cmp
movs
inc
rcl
lods
mov
push
inc
pop
and
mov
ds
xchg
mov
mov
popf
inc
into
mov
dec
fistp
jle
and
xlat
inc
mov
gs
dec
push
call
push
cli
cmp
call
cmps
pop
pop
dec
add
push
lds
sbb
stc
inc
addr16
in
in
sti
fisubr
vpmaxsw
in
jo
iret
and
pop
movs
pop
xor
dec
lds
jns
xor
aas
sbb
and
add
mov
test
cmp
dec
int3
call
(bad)
ins
xchg
and
jp
stos
cmp
lock
xchg
pushf
arpl
test
and
adc
pop
(bad)
sti
cs
outs
dec
dec
add
mov
mov
jle
inc
xchg
inc
dec
xor
or
xor
adc
add
loope
or
outs
fcomp
adc
pop
add
enter
nop
ds
xor
(bad)
sar
add
jge
repz
enter
movs
jb
ja
or
xchg
and
(bad)
jl
add
int
cmps
std
xor
stc
sbb
jmp
sub
mul
(bad)
fcomi
lahf
loop
sbb
(bad)
cmp
int3
and
jle
rcl
in
in
mov
pop
neg
mov
and
mov
fwait
xlat
jns
fs
ret
aam
fdiv
outs
dec
mov
cwde
push
pushf
cmps
clc
and
fldenv
adc
shl
or
mov
rol
pop
cmc
sbb
push
scas
sub
pop
adc
push
mov
add
hlt
sar
mov
adc
repnz
sahf
ins
lods
je
add
fninit
adc
xchg
sub
retf
(bad)
shl
add
mov
repnz
test
jge
lods
loopne
je
mov
or
cs
and
fwait
pop
fdiv
mov
data16
and
sub
mov
jmp
popa
test
jae
fwait
clc
imul
mov
mov
dec
mov
outs
jnp
mov
shl
pop
in
imul
mov
jge
neg
push
or
push
xchg
jb
out
dec
es
dec
add
pop
jg
dec
jmp
xor
sbb
xor
shr
jle
mov
loopne
movs
sub
sti
mov
add
lea
lds
pop
lock
xchg
inc
dec
push
mov
dec
arpl
outs
(bad)
(bad)
dec
pop
addr16
fadd
aad
cmp
push
test
or
out
or
lds
mov
adc
dec
push
mov
or
add
repz
push
pop
js
stos
pop
sub
fild
cmps
dec
test
push
(bad)
mov
xor
cmp
jge
mov
in
mov
dec
imul
mov
mov
xlat
in
dec
mov
ss
dec
std
pop
xchg
dec
sbb
pop
lock
sub
sub
sub
or
pop
or
repnz
jecxz
cmp
or
push
push
sar
cwde
jmp
bound
lods
test
and
xchg
xchg
fwait
pop
or
push
popf
iret
adc
mov
and
dec
jns
in
mov
push
jg
lea
adc
mov
aaa
fdivr
sbb
leave
cmc
fld
(bad)
sbb
sbb
popa
test
sub
bound
jle
shr
out
scas
dec
(bad)
xor
in
inc
ds
add
repz
xchg
ins
test
mov
mov
jge
cmc
(bad)
inc
sbb
imul
or
in
in
mov
jl
adc
shl
jmp
or
jg
jnp
lea
xlat
ss
inc
adc
fs
pop
sbb
std
lahf
push
jno
cwde
std
pusha
shr
xchg
cld
mov
mov
out
cmc
adc
and
out
jmp
mov
pop
mov
hlt
sbb
inc
in
xor
mov
cli
ret
push
in
cli
jge
add
and
mov
and
pop
lods
sbb
add
mov
(bad)
mov
mov
fcom
adc
jo
je
xchg
out
push
pop
push
xor
pop
dec
test
addr16
test
cmp
pop
inc
and
(bad)
in
push
imul
sub
sbb
fincstp
push
jmp
mov
(bad)
pop
cli
sbb
nop
cld
jo
enter
jb
rcl
cmp
loope
das
out
mov
mov
enter
cdq
push
or
mov
xor
jnp
mov
js
int3
ds
inc
mov
ficomp
dec
mov
out
jp
cmp
test
loope
pop
sbb
sbb
dec
dec
xchg
data16
jg
test
div
jbe
(bad)
pop
sub
cmp
aas
and
sahf
pop
ds
cmp
inc
in
out
or
daa
sub
das
ss
iret
sbb
(bad)
cld
or
es
into
mov
xor
jo
repnz
mov
push
push
sbb
lds
in
ja
fiadd
mov
jmp
ss
out
or
ins
mov
add
lea
lahf
loop
movs
test
mov
int
scas
loope
mov
mov
xor
inc
mov
cmps
js
stos
or
xchg
repz
movs
(bad)
add
jle
mov
popf
push
pop
scas
call
pop
pop
xor
xchg
aas
xchg
jo
sbb
adc
ret
enter
cmc
mov
pushf
cmp
rol
adc
sbb
cmp
xchg
pop
push
inc
popa
add
jmp
inc
lahf
and
(bad)
test
add
push
push
lahf
adc
mov
inc
bound
movs
jnp
sti
les
dec
(bad)
je
aam
xor
(bad)
stos
jmp
jbe
mov
repz
iret
jnp
lods
je
add
cmp
vpmuludq
or
addr16
retf
in
jne
sub
ret
mov
inc
jne
sub
xor
inc
mov
mov
mov
jmp
loope
imul
pop
cmp
sbb
fstp
cmp
into
pop
shl
test
add
cmps
cmp
out
push
add
out
(bad)
pop
jp
sub
pop
iret
cdq
or
cld
ss
pop
or
je
push
js
hlt
les
mov
push
and
inc
fnstsw
nop
sbb
xor
mov
add
push
cmps
push
and
sbb
xchg
std
ins
and
adc
mov
and
popf
sub
in
test
out
xchg
pop
shl
mov
mov
pop
mov
push
sbb
shl
dec
jp
loopne
test
mov
aaa
iret
loopne
pop
test
adc
fdiv
cmp
cmp
movs
rcl
pop
mov
jp
into
into
add
dec
in
sub
adc
pop
in
sbb
cmp
icebp
loope
pop
cmps
pusha
xor
sti
push
fcomp
and
push
push
test
push
ficomp
icebp
ja
shr
pop
inc
ret
and
cmp
fs
cli
popa
gs
neg
mov
adc
add
std
jmp
push
idiv
or
or
adc
lods
test
sahf
aas
xchg
add
inc
cmp
inc
or
jno
clc
cmps
mov
jno
or
jge
and
popa
cdq
xchg
pop
ja
lods
fisub
out
pop
jge
push
dec
inc
imul
es
sub
dec
cld
and
cmp
or
iret
adc
test
fisttp
fstp
leave
mov
dec
push
ficomp
pop
nop
and
bnd
test
jp
arpl
mov
mov
pop
ins
or
loop
mov
dec
xchg
fadd
iret
and
fistp
jg
retf
icebp
mov
ss
(bad)
scas
jmp
cmp
out
mov
xchg
push
scas
pop
adc
call
push
xchg
into
in
cld
jbe
sahf
mov
les
arpl
hlt
rol
fidivr
mov
lock
pop
call
ret
mov
mov
fisttp
pop
ins
(bad)
out
movs
dec
cmps
popf
out
std
shl
sbb
and
sub
xor
movs
pop
push
cmp
mov
adc
sub
bound
int
cmp
push
test
xchg
fld
push
push
xchg
fldcw
pop
pop
fs
cmp
leave
pop
loope
inc
jbe
sbb
repz
dec
js
inc
into
imul
jae
inc
adc
and
outs
cmps
loop
aad
jno
xchg
xor
lea
cmp
dec
lods
out
(bad)
retf
adc
sbb
or
pushf
pop
push
and
es
stos
mov
imul
dec
sbb
mov
aam
push
sbb
mov
repnz
int3
pop
nop
pusha
es
stos
mov
or
movs
jge
popf
je
or
xchg
push
adc
les
xor
mov
adc
jmp
dec
sti
movs
in
test
dec
mov
fsub
or
adc
jne
nop
cmp
add
mov
dec
xchg
sub
inc
xchg
test
bswap
adc
fcom
cmp
or
outs
repz
push
icebp
mov
sbb
nop
mov
mov
loop
mov
and
retf
jmp
push
test
(bad)
test
jns
inc
js
cdq
push
into
push
(bad)
jb
push
(bad)
aam
int3
cs
push
sbb
dec
dec
jo
push
and
(bad)
pop
xlat
dec
(bad)
sub
cli
scas
jno
scas
cli
jle
jge
mov
(bad)
xchg
out
cmc
jno
xchg
mov
nop
add
dec
dec
push
cmp
imul
mov
adc
push
loopne
out
repz
add
cmc
cmp
fst
push
cmps
imul
mov
mov
xor
jo
sub
pop
xchg
bound
mov
jnp
mov
inc
ficomp
or
mov
fwait
scas
imul
and
jp
adc
(bad)
mov
dec
mov
call
outs
push
mov
fisub
imul
xor
sbb
or
std
and
int
cmc
xchg
cdq
outs
sahf
mov
jns
sbb
push
popf
jno
je
gs
sub
gs
xchg
sbb
jnp
lods
cwde
jb
mov
movs
add
add
xchg
xchg
in
pop
stc
sbb
in
fisub
dec
stc
mul
out
sbb
movs
int
(bad)
or
push
bound
das
xchg
adc
stc
loope
pop
out
and
push
mov
loop
fldenv
cmps
adc
push
pop
aas
(bad)
cmp
cli
int3
dec
or
jg
mov
lods
(bad)
(bad)
inc
jns
xchg
push
lods
fcomp
in
test
adc
lahf
cmps
loope
xchg
inc
scas
cmp
xor
or
les
icebp
ss
aad
test
fidiv
dec
add
mov
movs
in
cmp
js
or
imul
cmp
ret
and
pop
add
and
mov
push
jo
or
xor
das
push
lods
push
push
in
mov
aas
imul
rcr
in
xchg
or
aas
jo
or
imul
cmp
iret
dec
(bad)
stos
das
in
icebp
fsubp
mov
push
push
mov
nop
fsub
mov
psubsw
stos
ror
enter
adc
into
push
mov
cwde
cdq
int3
mov
mov
and
clc
cmp
scas
xchg
mov
cmp
repz
clc
in
loopne
mov
sar
(bad)
mov
adc
xor
sti
jnp
pusha
mov
or
cmc
adc
leave
fmul
adc
cmc
push
stos
test
sbb
fnstsw
jb
mov
out
pop
push
shl
sti
pop
retf
aas
fstp
scas
movs
pop
inc
pop
test
inc
mov
xchg
xor
sub
aas
outs
mov
add
lods
call
push
test
movs
xor
push
mov
bound
lods
ds
in
je
xchg
jmp
inc
fsubrp
and
rcl
stos
int3
imul
or
jno
shr
xor
sub
push
mov
xlat
add
push
cmc
ss
sbb
aaa
loop
test
ret
and
sbb
sub
cmps
dec
ss
and
add
mov
mov
in
inc
stc
shr
jmp
dec
or
and
ss
ror
mov
cmps
cmps
jle
ror
xor
jae
sub
adc
or
faddp
sub
xor
push
outs
je
ins
cdq
popf
lock
sbb
in
lock
xor
and
or
les
sub
int3
pop
jns
or
mov
sub
cld
ins
cmps
pop
cdq
jl
data16
pop
jae
mov
pushf
xlat
pop
push
rol
fisub
mov
jl
int
out
xchg
in
das
test
rol
and
add
out
test
jmp
repnz
adc
sub
pop
pop
call
jmp
enter
ret
sbb
outs
jg
les
jmp
cmp
xchg
int
xor
and
push
(bad)
dec
xchg
pop
out
clts
pop
and
inc
jg
lods
das
push
aas
xchg
cwde
mov
js
lahf
mov
dec
in
ficom
into
mov
sbb
mov
add
hlt
aaa
mov
ins
pop
mov
or
enter
in
adc
cmp
or
(bad)
fmul
jecxz
pop
pop
dec
in
scas
daa
stc
iret
and
cmps
fsub
out
jg
(bad)
cmps
data16
sbb
test
cmp
repnz
fstp
fadd
sbb
inc
pushf
ins
outs
inc
xor
(bad)
push
inc
sub
(bad)
(bad)
add
out
mov
mov
ins
push
jnp
inc
xor
fs
sub
es
and
nop
add
aas
jbe
addr16
ss
inc
inc
ror
jmp
adc
arpl
icebp
mov
dec
and
or
(bad)
movs
ss
ds
call
mov
jnp
cmp
retf
pusha
out
out
inc
pop
ins
sub
bnd
xchg
push
and
(bad)
out
int3
push
popa
das
ret
iret
pop
inc
mov
je
push
das
push
dec
das
shl
lods
and
jg
mov
mov
xchg
aad
loopne
mov
stc
jg
xchg
imul
int3
pop
(bad)
jnp
push
add
(bad)
pop
cdq
stos
pop
mov
ds
cli
dec
mov
inc
daa
fsub
pop
adc
or
pop
or
cmp
push
sub
(bad)
loopne
inc
xrelease
inc
hlt
push
ins
add
jl
in
dec
call
jmp
xor
movs
and
add
test
scas
shr
jo
sub
cmp
jmp
(bad)
iret
and
ins
hlt
ds
add
inc
and
add
and
jmp
dec
pop
push
cmp
and
jge
add
pop
sbb
lods
(bad)
mov
fsubr
call
ror
repz
stos
test
add
pop
xchg
jbe
xor
jmp
dec
lods
add
shl
or
dec
and
mov
sbb
fwait
pop
enter
inc
(bad)
or
jge
mov
fisubr
push
sbb
icebp
jns
and
cli
push
mov
cs
fbld
shl
out
cs
test
movs
xor
adc
popa
bound
stos
and
fwait
xor
adc
xchg
sahf
int
lods
sar
nop
ficomp
jb
xchg
nop
movs
repz
pusha
icebp
mov
sub
ja
(bad)
and
icebp
mov
mov
test
adc
in
aam
pop
ror
in
lods
push
es
hlt
lahf
outs
mov
jl
fisub
inc
mov
xchg
jl
add
sbb
lods
jnp
sbb
aam
jmp
pop
cmp
adc
sahf
cmp
fisub
sahf
hlt
sbb
stos
adc
jl
icebp
cmps
mov
add
dec
jo
les
jnp
xchg
xor
dec
xchg
push
add
sub
dec
xchg
arpl
pushf
ins
je
clc
pop
inc
outs
xor
test
test
cwde
into
mov
inc
scas
inc
out
xchg
popf
pop
jle
in
mov
neg
cmp
es
inc
sbb
sbb
adc
adc
xchg
rcl
cmp
sar
cmp
dec
pop
das
cmp
outs
add
pop
pop
(bad)
in
cmps
dec
jmp
pop
add
add
pop
fimul
jge
ins
ja
dec
les
sub
push
scas
mov
test
jmp
popf
jmp
iret
mov
xor
cmp
inc
adc
test
rcl
scas
adc
fild
dec
xchg
xchg
(bad)
int3
push
inc
in
xlat
push
sbb
sbb
dec
call
je
push
xor
fisub
in
add
mov
imul
push
xor
cmp
rol
jecxz
mov
retf
inc
adc
adc
jnp
sub
pop
add
cmp
push
add
loope
cmp
ds
ficom
push
sub
hlt
mov
fiadd
mov
popa
dec
cmc
in
xchg
jbe
mov
cmp
push
xor
cs
sub
xchg
inc
jb
jg
and
jp
or
pusha
sbb
pop
add
test
leave
xchg
ja
rep
mov
fcmovb
rol
clc
xor
aaa
push
sbb
push
sysenter
std
mov
(bad)
hlt
popa
push
fdiv
lods
xor
mov
cli
dec
jecxz
mov
out
pop
popf
push
sahf
xor
or
jmp
js
mov
test
fdivr
enter
mov
mov
pusha
add
or
nop
int
xchg
inc
aad
sub
xchg
pop
(bad)
cs
in
imul
movs
ret
js
xchg
mov
das
push
clc
mov
pop
call
pop
mov
(bad)
in
and
sbb
push
(bad)
jmp
test
mov
cli
push
sub
add
ja
jmp
or
jns
jns
cld
repnz
mov
dec
inc
inc
jnp
mov
and
push
in
or
mov
ja
loop
jnp
outs
or
jae
in
into
xor
push
gs
pop
lea
cmp
xor
adc
mov
jle
das
mov
lahf
cmps
xchg
aad
lds
mov
cwde
mov
pop
lds
or
mov
movs
rcl
cmp
xor
loopne
ins
push
and
ret
xchg
out
sbb
xor
hlt
rcl
xor
icebp
mov
lahf
push
aaa
test
mov
fdivr
xchg
mov
xchg
xor
addr16
es
sub
mov
mov
cmps
stos
loopne
mov
popa
adc
adc
pop
and
xor
adc
icebp
and
sub
outs
std
fldcw
pop
inc
inc
pop
retf
sbb
bound
push
loopne
shr
adc
dec
xchg
dec
mov
fs
jmp
retf
mov
div
das
dec
push
(bad)
xchg
and
leave
fwait
mov
mov
pop
jnp
mov
xor
mov
mov
xchg
cmp
cwde
je
sub
and
shl
jnp
xchg
pop
xor
je
add
jne
dec
sub
sub
aas
lods
mov
test
xor
push
sbb
mov
fist
std
hlt
jo
mov
pop
jmp
movs
dec
mov
rcl
idiv
or
out
out
sti
outs
repz
dec
pusha
jle
xor
mov
cmp
out
sahf
xor
mov
aas
add
sbb
sbb
fcom
loope
imul
sub
fidiv
mov
push
(bad)
retf
test
out
pop
dec
sti
sub
ins
adc
mov
ins
ja
inc
jge
loop
(bad)
sbb
sbb
shl
pop
cli
jb
ror
div
outs
stos
(bad)
neg
(bad)
mov
sbb
(bad)
aaa
(bad)
mov
dec
inc
push
pop
(bad)
(bad)
scas
fdivr
ins
pop
cmp
stc
mov
and
mov
adc
cmp
dec
pop
add
sbb
mov
xchg
ins
jnp
mov
leave
inc
dec
dec
sub
stos
loop
ds
adc
mov
dec
or
cmps
dec
and
cmp
aas
(bad)
clc
movs
fwait
or
add
hlt
lods
fcmovnu
neg
call
cdq
out
call
imul
hlt
(bad)
mov
mov
push
into
ret
and
pop
test
std
lds
lahf
in
mov
fld
into
xor
add
adc
cdq
fsub
pushf
jnp
ss
jmp
jno
mov
jnp
xor
mov
mov
mov
push
pop
or
dec
bound
push
mov
fdiv
cli
mov
popa
aad
mov
call
hlt
sub
out
xchg
and
out
ins
aad
xchg
sti
jge
or
fs
mov
mov
ds
adc
jb
lahf
pop
daa
cs
push
popa
aad
or
loopne
aam
xor
mov
inc
shl
(bad)
rcr
cs
daa
js
mov
sbb
repz
push
aad
sbb
iret
fild
dec
ins
mov
push
inc
xor
mov
neg
js
sub
adc
inc
icebp
pop
outs
mov
ins
outs
out
out
int3
addr16
add
mov
xor
mov
ret
jo
out
std
mov
movs
push
mov
xor
sub
int
mov
sub
xor
jecxz
scas
loop
aas
add
aas
int
add
data16
pusha
mov
cwde
retf
dec
pop
and
pop
mov
adc
jecxz
and
push
dec
pop
enter
cdq
cmps
jge
adc
push
(bad)
xchg
js
adc
sub
jbe
cmp
(bad)
mov
mov
mov
or
fistp
add
ins
sbb
or
out
mov
add
pop
or
mov
push
inc
cmp
mov
pop
fabs
or
adc
aad
xchg
mov
lahf
cwde
ret
std
mov
push
sub
cmp
dec
mov
push
jno
and
jbe
scas
mov
adc
int3
test
or
pop
cli
test
jns
pop
cdq
dec
xor
xor
mov
fdiv
shl
out
mov
je
cmc
jae
mov
fwait
nop
push
enter
xchg
aas
jmp
(bad)
mov
dec
ret
lods
push
shr
ret
test
hlt
inc
mov
xchg
loop
mov
xor
sbb
mov
fcmovu
xchg
xor
rcl
xchg
mov
sbb
(bad)
aas
fild
mov
sti
leave
xor
cdq
enter
adc
(bad)
pop
jle
inc
sub
mov
movs
das
and
ins
add
lods
outs
cmps
cmps
push
iret
add
fsub
cmp
rcr
out
xchg
out
jg
lds
in
adc
push
test
adc
pop
add
and
imul
and
movs
mov
cmp
mov
xor
add
lds
dec
retf
shr
cmp
stos
add
scas
push
sar
fwait
dec
sub
xor
fcmovb
mov
icebp
sbb
push
pop
out
push
jbe
jo
aas
xchg
mov
imul
ss
stos
sbb
push
addr16
in
jle
popa
cwde
shl
popa
in
pushf
push
xor
lock
in
popa
out
ins
sbb
sbb
fld
pop
mov
push
jge
ins
dec
mov
cmp
cld
mov
shl
mov
(bad)
lds
es
xchg
mul
pop
popa
arpl
(bad)
repz
mov
loopne
enter
fcomp
pop
lds
and
push
lods
(bad)
les
(bad)
sbb
aad
ja
jle
mov
jl
sbb
sahf
repnz
lock
add
dec
repz
or
push
(bad)
jae
xor
add
adc
or
and
and
aaa
cvttps2pi
pop
mov
push
xchg
sbb
mov
mov
dec
lahf
mov
cmp
ss
popf
mov
ins
sbb
xor
xor
shr
jl
sub
jmp
or
popf
mov
or
and
or
leave
inc
push
push
mov
lock
dec
pop
jg
test
dec
cli
call
or
mov
add
jne
sbb
ud0
ficom
xchg
out
push
push
test
jb
inc
or
sbb
gs
mov
pop
add
sti
pop
ss
lods
add
dec
and
mov
dec
out
add
xchg
(bad)
cmp
movs
ja
mov
mov
lock
(bad)
mov
xchg
push
fs
jnp
jl
fist
mov
pop
enter
mov
and
fiadd
mov
outs
nop
xchg
iret
mov
mov
(bad)
pop
mov
int3
push
fisubr
hlt
cmp
dec
lea
push
xchg
(bad)
ror
lods
xchg
pop
pop
xor
call
out
mov
fwait
les
fmul
jne
inc
pop
sbb
mov
or
pop
bound
fild
sub
out
in
xor
pop
lock
add
test
sub
push
sub
idiv
xchg
jae
mov
mov
jecxz
loope
mov
int
stos
mov
lea
add
mov
mov
pop
stc
cmp
cli
repnz
cmp
push
fldenv
cmps
xor
inc
cli
jo
or
dec
fmul
add
rcl
jmp
out
pusha
sub
inc
loopne
shl
fldenv
clc
sahf
int
dec
cmp
mov
cmp
leave
stos
ret
xchg
pop
and
inc
sbb
outs
mov
mov
pop
adc
add
inc
pop
(bad)
jg
lds
pop
jnp
or
daa
sbb
xor
je
(bad)
xor
jp
mov
and
inc
(bad)
pop
or
mov
clc
ins
aad
out
pop
push
adc
mov
or
call
scas
cs
xchg
jge
mov
movs
xor
xor
jae
mov
jae
lods
mov
push
jb
dec
fs
or
xor
xchg
(bad)
sahf
dec
adc
sahf
adc
mov
repz
std
fsubp
arpl
aaa
cli
test
push
aas
sub
hlt
adc
xchg
faddp
pop
pop
push
shr
mul
jmp
test
xor
loop
pushf
repz
(bad)
(bad)
loopne
sub
clc
add
mov
dec
ins
rcl
repz
sub
inc
inc
xchg
daa
fidivr
outs
pop
imul
xor
ret
cmps
out
xchg
xchg
mov
push
xchg
test
lea
cmp
add
sub
bound
jecxz
out
mov
addr16
jmp
nop
(bad)
mov
repz
aam
cmps
jl
imul
pop
test
in
(bad)
cld
mov
ucomiss
xchg
inc
fmul
nop
in
psrlw
xor
xchg
pop
scas
imul
ror
movs
lods
inc
sbb
mov
jmp
popf
sub
add
jae
(bad)
call
adc
sbb
loop
pop
dec
(bad)
shr
je
and
cld
add
pop
stos
(bad)
dec
(bad)
ficom
imul
test
jg
mov
pop
sbb
dec
dec
sbb
mov
call
(bad)
add
mov
xchg
xor
lods
icebp
sub
cs
scas
cs
cmp
sahf
inc
xor
in
(bad)
push
push
add
sbb
push
jb
jle
iret
mov
mov
jmp
adc
and
xor
stos
dec
ins
xor
repz
and
pushf
add
adc
stos
cld
aad
pop
and
sub
mov
outs
pop
nop
bnd
push
jbe
rcl
push
jo
mov
popa
lea
dec
xchg
popa
in
push
xor
lods
sar
and
outs
popf
mov
cmp
xchg
push
pushf
sar
ret
fbstp
jae
cmps
stos
das
movs
add
xchg
je
jg
stc
les
addr16
xchg
mov
test
clc
cmp
shr
inc
loopne
push
push
xchg
xchg
dec
lds
retf
and
and
add
sub
mov
call
out
add
sahf
or
lods
mov
cli
adc
and
jecxz
or
jo
leave
cmp
fsubr
jl
fwait
js
and
adc
sbb
push
or
jg
int3
or
xor
lods
xor
cmp
lds
inc
pop
je
shl
push
dec
test
or
fstp
mov
cmp
not
setne
fwait
test
stc
(bad)
stos
cmc
mov
mov
xor
dec
mov
sbb
rcr
push
shr
stos
xor
lahf
dec
gs
test
mov
mov
test
add
rcr
into
jmp
movs
xchg
and
in
push
in
js
inc
dec
lock
and
mov
cdq
data16
nop
add
out
nop
outs
sub
push
mov
dec
add
xchg
in
fst
dec
xchg
mov
dec
out
enter
mov
stc
jle
mov
push
in
push
mov
dec
or
pop
hlt
addr16
xchg
jns
cld
imul
pop
mov
or
fdivr
aas
mov
cmp
cwde
cmp
fcmovbe
cld
fsub
pushf
pop
mov
aas
aam
dec
xor
push
in
sbb
retf
adc
test
dec
xor
loopne
loopne
jo
pop
rcr
adc
adc
xchg
xor
mov
inc
cmp
dec
adc
hlt
lea
in
outs
pop
imul
lock
xchg
and
lahf
add
rcl
call
fmul
mov
popa
or
sbb
lds
cmp
jmp
jp
pop
push
push
fidivr
icebp
dec
stos
jo
loope
sbb
push
inc
ins
lods
sub
adc
xor
cmc
and
mov
pusha
lea
jle
xor
loope
sub
or
push
dec
jnp
cdq
popf
push
inc
dec
adc
push
fsub
mov
xor
push
push
add
push
(bad)
mov
push
sbb
mov
push
jge
push
push
mov
cli
adc
dec
arpl
mov
sahf
jl
jns
add
xchg
or
add
and
(bad)
pop
mov
pop
mov
ja
and
mov
popa
out
push
xchg
shl
sbb
loope
shl
sbb
test
gs
cmps
addr16
mov
and
xchg
pop
adc
pop
jnp
inc
or
pop
imul
mov
add
js
stc
or
adc
ins
mov
sbb
inc
xchg
cld
idiv
push
gs
inc
shr
jno
adc
dec
jae
in
jmp
ror
xor
add
mov
dec
in
je
xchg
sbb
ror
jno
inc
loope
jnp
adc
repnz
cmp
loopne
test
add
inc
bound
mov
out
aad
adc
out
jns
add
mov
pop
inc
mov
test
cmp
jp
xor
in
ret
test
repnz
pushf
movs
mov
cmp
int3
xchg
int
arpl
adc
je
hlt
call
jb
stos
clc
push
adc
in
sbb
fst
pop
mov
add
mov
push
or
mov
repnz
cmp
(bad)
and
je
inc
or
(bad)
mov
ins
xchg
push
ror
in
retf
(bad)
mov
dec
mov
addr16
mov
dec
repnz
in
add
jb
adc
mov
cmp
mov
ja
(bad)
idiv
push
xor
adc
sbb
fwait
arpl
ret
sub
fsubrp
or
mov
loopne
adc
ret
div
ins
mov
popa
cmp
pushf
movs
je
call
xchg
xor
in
(bad)
cmp
mov
(bad)
adc
add
add
push
sub
lods
or
pop
adc
bound
jns
cmps
loop
sbb
clc
mov
dec
fstp
pop
in
call
xor
inc
cmp
xor
stos
sub
(bad)
adc
shl
mov
into
xchg
dec
jle
pop
rcr
sbb
sbb
cmp
int
icebp
daa
rcl
out
mov
fst
lods
es
mov
out
push
jbe
sti
xor
or
rol
mov
mov
sbb
outs
mov
fsub
mov
sbb
inc
push
loope
popa
pop
inc
mov
jg
into
icebp
addr16
jbe
(bad)
repz
inc
push
lds
cdq
lds
mov
mov
mov
sbb
stc
int
jnp
dec
ins
pop
scas
sub
xchg
inc
xchg
out
fld
rcr
adc
inc
jo
scas
mov
push
push
repnz
xchg
sub
cli
ja
pop
fs
(bad)
sub
jmp
inc
xor
sti
aam
ins
in
ror
jmp
jl
sub
lock
inc
sahf
jge
push
xchg
xlat
rep
mov
nop
dec
sahf
ret
sti
mov
retf
(bad)
in
(bad)
aam
mov
xchg
div
mov
lahf
push
hlt
dec
push
rcl
jo
jp
addr16
push
push
pop
adc
pushf
jb
ins
out
push
ret
pop
or
retf
push
sub
push
mov
imul
inc
dec
cmp
shl
arpl
xchg
xchg
outs
cmp
arpl
adc
sub
div
pushf
xor
mov
dec
out
ret
fnstenv
enter
mov
mov
xchg
inc
xor
and
(bad)
cmp
xor
mov
sub
inc
test
push
cmp
lods
rcr
jmp
lock
mov
xchg
push
int
dec
scas
fisubr
sbb
jmp
(bad)
call
sbb
out
inc
ins
mov
xor
push
mov
les
daa
pushf
lock
cmps
dec
and
sti
stc
retf
pop
and
dec
xchg
cdq
adc
gs
ret
mov
shl
sub
(bad)
adc
mov
add
arpl
out
ins
adc
fwait
add
movs
pop
mov
and
or
inc
jb
and
add
mov
enter
mov
je
loopne
push
dec
mov
jo
popf
lock
adc
stos
mov
jmp
sbb
loope
sub
js
sub
fdiv
mov
mov
sbb
scas
jno
add
fbld
clc
pusha
lahf
aam
les
mov
das
(bad)
jge
mov
sbb
in
mov
jmp
adc
fldcw
sub
fnsave
fiadd
sahf
mov
(bad)
pushf
mov
aas
fldenv
aad
ds
xor
dec
scas
stos
dec
ror
mov
cmp
cmp
movs
add
push
pop
pushf
es
sbb
jmp
and
pop
pushf
push
into
inc
mov
mov
imul
jp
(bad)
add
mov
jg
jp
or
clc
in
mov
push
pop
out
(bad)
sub
in
lea
not
mov
pop
xchg
and
sub
cmc
enter
int3
and
adc
mov
mov
enter
and
shr
popa
(bad)
and
test
fldcw
mov
dec
out
cmps
mov
mov
inc
stos
sti
icebp
sub
mov
rol
jl
pop
rol
pop
adc
xor
xchg
adc
aas
push
xchg
sub
inc
mov
mov
dec
das
adc
out
(bad)
arpl
int3
mov
add
addr16
scas
(bad)
mov
daa
jp
mov
dec
out
mov
fwait
icebp
stc
imul
imul
xor
test
inc
xor
adc
cmc
cwde
retf
fdiv
sbb
sub
fidiv
inc
mov
jl
mov
ss
push
pop
test
add
xchg
lock
sub
cld
(bad)
in
push
sbb
adc
cmp
loope
loopne
xor
lds
dec
mov
inc
xchg
aad
mov
adc
fidiv
fldcw
stc
scas
ret
out
pop
fst
cmp
push
push
push
out
repz
cwde
fnsave
repnz
sub
cmp
pushf
es
and
or
mov
and
cmp
jg
ss
(bad)
das
movs
mov
pop
and
test
test
inc
pop
(bad)
div
push
sbb
pop
jmp
push
cmp
stos
hlt
test
pop
(bad)
cmp
inc
jmp
cmp
std
push
cmp
popa
sahf
or
into
xchg
in
cwde
mov
or
inc
push
adc
adc
mov
fs
inc
adc
cmps
dec
adc
arpl
cdq
and
cmp
test
jecxz
lock
pop
mov
inc
popf
jmp
pop
cdq
cmp
popa
xor
ret
sbb
dec
or
adc
test
pop
arpl
xlat
frstor
idiv
outs
scas
inc
sbb
fst
in
aas
pop
int
push
mov
mov
jnp
test
push
push
out
loop
sti
adc
(bad)
icebp
pop
enter
sub
cld
pop
gs
jle
out
pop
cmp
or
enter
fs
xor
xchg
push
(bad)
shr
scas
(bad)
dec
dec
in
xor
pushf
push
cs
sbb
out
pushf
add
leave
enter
pushf
sbb
std
push
or
add
or
and
cmps
jns
mov
iret
sahf
jb
call
inc
mov
add
dec
mov
(bad)
ret
or
test
popf
ss
call
fs
gs
mov
mov
xchg
out
mov
xor
and
dec
sahf
repz
hlt
shl
fwait
out
xchg
pop
and
stos
pop
out
aad
and
cmp
mov
pushf
jp
(bad)
test
fmul
int
pop
stos
mov
sub
and
mov
jae
xchg
jmp
xor
std
cmp
push
pop
mov
aaa
pop
fnstenv
popf
cmps
dec
xchg
ret
leave
repz
cs
arpl
jp
cmps
xor
inc
push
imul
pop
sbb
inc
dec
and
jmp
das
jb
sub
pavgw
sub
push
jmp
mov
loope
push
call
call
sbb
push
test
retf
xor
xlat
sbb
je
push
jp
and
int3
aam
aam
pop
stos
test
daa
out
xchg
inc
mov
int3
retf
xchg
aaa
fmul
mov
xor
(bad)
nop
or
popf
shl
fistp
movzx
sub
fild
outs
fsub
(bad)
addr16
call
popf
ds
add
and
jmp
test
pop
mul
div
mov
and
arpl
ror
mov
repz
pop
sbb
push
or
aam
cmp
sub
movsx
xchg
xchg
daa
iret
(bad)
jnp
je
inc
cwde
clc
adc
cld
jmp
ins
pop
std
sbb
es
inc
mov
jno
rol
push
mov
es
loopne
pop
cli
add
xchg
inc
sar
imul
jl
fidiv
das
les
ret
ret
adc
jbe
repz
cmc
pop
sub
jb
rol
scas
stos
xor
xchg
scas
pop
sbb
nop
shl
xlat
stc
aaa
aad
sub
outs
call
data16
test
leave
mov
cs
or
pop
xchg
inc
test
mov
pop
test
xlat
sbb
and
lods
int
into
mov
in
cmps
loop
jmp
mov
adc
mov
test
icebp
fisubr
popf
loopne
pop
leave
dec
cdq
mov
leave
xor
jmp
adc
jecxz
mov
std
repnz
test
movs
out
sti
icebp
xchg
xor
push
addr16
mov
pop
adc
popa
mov
mov
sbb
push
push
ss
ds
pop
mov
(bad)
or
pushf
scas
sub
add
movs
(bad)
or
pop
int
ret
mov
mov
movs
imul
popf
xchg
es
mov
sub
mov
aas
or
pop
stos
jge
fstp
es
jae
push
ret
mov
and
js
mov
sbb
adc
int
test
mov
jmp
test
adc
das
or
or
cmp
pop
loopne
aas
sub
mov
sub
imul
imul
outs
mov
push
or
mov
retf
pop
loope
jnp
xlat
xor
push
inc
sbb
jno
repnz
jo
cmps
cmp
adc
outs
mov
ds
jnp
adc
out
mov
sbb
mov
adc
add
mov
sbb
fsubr
cld
fcmove
scas
adc
mov
add
das
mov
or
cli
cmp
dec
xor
inc
mov
dec
mov
in
inc
fisttp
and
in
cdq
pop
rol
and
push
mov
jns
sub
les
add
jae
(bad)
out
frndint
or
mov
push
add
cld
test
mov
xchg
rol
mov
(bad)
ficom
clc
mov
or
adc
or
inc
mov
fmul
push
pop
cld
in
(bad)
iret
push
stos
mov
sti
(bad)
mov
cmp
ja
shr
mov
jl
xor
xlat
stos
in
rol
add
mov
leave
movs
fild
push
loop
pop
jle
xchg
pop
jnp
cmc
push
mov
outs
shl
or
daa
repnz
add
push
call
push
or
je
adc
mov
call
push
sbb
mov
xchg
and
mov
jae
dec
push
std
fs
mov
mov
call
xchg
pop
adc
fsubr
cdq
outs
outs
iret
xchg
ficomp
adc
dec
lock
push
jmp
pushf
scas
cmps
mov
pop
outs
jmp
inc
retf
imul
iret
repnz
stos
sub
adc
xchg
xor
jns
mov
in
jnp
fisubr
jmp
mov
sbb
sbb
data16
sub
lods
nop
bswap
xor
popf
jmp
imul
test
xchg
push
sbb
cmp
add
inc
std
and
pop
mov
ds
jno
inc
push
add
mov
or
(bad)
stc
push
fisubr
xchg
int3
les
stos
cmovp
into
cdq
stos
pop
mov
lods
adc
cli
sahf
dec
mov
cmp
mov
stc
daa
gs
push
popw
mov
cld
repz
(bad)
out
pop
in
test
test
cli
push
int3
cmp
jp
cmp
call
inc
jo
xor
dec
xchg
lahf
(bad)
sti
aam
adc
cdq
xchg
ins
ja
dec
jl
je
retf
push
mov
arpl
xchg
cwde
mov
add
shl
cmp
xlat
mov
xor
in
jp
inc
mov
push
push
mov
fdivr
mov
shl
or
add
mov
sub
push
imul
cmc
loop
xor
push
xchg
or
sub
adc
bound
scas
out
les
(bad)
icebp
push
mov
cmp
icebp
mov
test
fwait
jmp
dec
out
mov
ret
add
lock
mov
xor
lahf
(bad)
scas
cdq
or
adc
and
in
stos
(bad)
xor
test
mov
sahf
loope
cli
adc
mov
gs
xor
jp
fnstenv
adc
xor
sub
push
xchg
pop
das
gs
fmul
add
(bad)
jl
lock
xchg
mov
leave
jg
xor
or
jge
lahf
mov
aad
push
arpl
cdq
jmp
loop
addr16
mov
push
in
mov
mov
mov
loop
repnz
inc
push
scas
popa
or
xchg
pop
pop
cmp
inc
push
js
pop
jmp
push
lock
dec
or
pop
xor
repz
cmp
push
jbe
sahf
xor
iret
rol
push
or
rcl
jle
out
into
jnp
push
jns
enter
push
inc
test
inc
movs
or
or
call
push
ret
pop
cmc
sub
nop
xor
sub
jle
adc
and
addr16
push
neg
dec
(bad)
adc
pop
ror
dec
cld
pop
arpl
mov
bound
aas
push
or
repnz
sbb
(bad)
(bad)
push
and
lods
bswap
mov
stos
cs
jg
pop
in
add
or
outs
push
cwde
mov
or
call
cmp
xchg
lods
xor
in
sbb
xor
jnp
int3
and
push
and
inc
nop
call
mov
mov
mov
mov
fwait
jbe
xor
das
sub
sub
ss
ror
mov
rcr
jle
add
fdivr
cmp
sahf
push
inc
xor
jl
xor
cwde
add
and
xchg
std
or
lds
(bad)
cmp
pop
inc
jecxz
outs
js
outs
daa
xor
add
mov
or
add
aas
pusha
cmp
ss
adc
adc
fist
sahf
cmp
popf
pop
dec
cwde
pusha
sbb
and
out
(bad)
dec
outs
jo
arpl
popa
jb
add
rol
xor
in
aam
cmp
mov
and
jecxz
push
les
jae
jb
dec
mov
or
and
xor
adc
test
push
(bad)
jp
jl
movs
mov
mov
mov
dec
rcr
xchg
and
and
shr
aaa
loope
adc
cdq
xchg
in
mov
aad
or
sub
pop
pop
xchg
sti
push
pop
mov
xor
ror
dec
frndint
popf
mov
mov
iret
cmp
rcl
push
add
cmc
xchg
mov
ins
shr
sub
xor
(bad)
mov
das
rol
lea
neg
or
xchg
xor
xchg
loopne
xor
aaa
cwde
dec
adc
pop
jb
out
call
xchg
add
adc
jb
das
in
clc
repz
dec
test
push
addr16
mov
ret
jno
popa
inc
push
lods
retf
cdq
inc
loope
xor
clc
int
mov
pop
test
xor
fwait
(bad)
sub
push
loop
fwait
and
cmps
push
mov
cld
adc
(bad)
outs
lock
pop
xlat
dec
push
pop
jecxz
and
fcmovnb
cmp
add
and
rol
push
jae
inc
adc
pop
jge
adc
out
mov
cdq
mov
push
sub
push
inc
out
pushf
or
jbe
dec
sbb
lods
xchg
scas
test
mov
vpmullw
sar
push
test
sbb
mov
mov
sub
and
mov
push
sub
std
cmp
test
add
icebp
mov
stos
jp
inc
cld
push
pop
mov
loopne
stos
sbb
test
repz
verr
lock
jecxz
mov
std
ret
mov
inc
ret
jne
inc
pop
and
push
push
dec
jp
inc
mov
lods
jecxz
jae
(bad)
jg
cmp
adc
dec
daa
xor
neg
es
fsub
sub
xor
push
shr
sub
cmp
in
stos
out
xchg
ins
ret
push
in
and
fst
mov
outs
jge
in
mov
jb
jbe
jg
adc
sbb
pop
arpl
leave
add
mov
stos
xchg
dec
test
cwde
fwait
xchg
(bad)
into
sbb
rol
ins
xchg
cmp
sbb
sbb
outs
dec
sub
nop
push
cdq
mov
mov
cmc
mov
ret
stos
cmc
pop
aaa
test
ss
enter
and
rcl
pop
adc
ja
and
push
scas
fmul
leave
es
fwait
mov
fsubr
jl
pop
cmps
mov
mov
jl
ss
cmps
std
rcl
sub
popa
add
adc
js
pop
int
mov
ficomp
push
lock
push
sub
bound
jne
xor
sub
movs
mov
xor
add
mov
int
cmps
sub
xchg
xchg
das
inc
dec
icebp
out
cmp
js
mov
fs
dec
stos
adc
dec
cmp
lods
loopne
jl
inc
sub
rcl
xchg
mov
scas
mov
ret
mov
imul
xchg
out
(bad)
xchg
out
add
sub
lock
into
xlat
fs
xchg
add
mov
push
enter
js
jns
sbb
jg
xchg
sub
mov
ins
mov
xchg
call
push
shl
dec
pushf
je
add
aaa
push
scas
jl
jb
cmp
scas
adc
stos
fsub
in
out
or
xchg
pop
movs
pushf
mov
or
daa
(bad)
fistp
mov
(bad)
adc
mov
inc
mov
sar
leave
shl
jne
xor
cwde
lahf
in
iret
inc
pop
lock
jnp
pop
xor
jno
aad
test
cwde
movs
push
push
loopne
loope
fisubr
pop
cmps
add
popf
nop
sub
clc
(bad)
jle
movs
push
daa
(bad)
in
gs
cld
adc
lods
call
stos
mov
scas
lods
por
pop
movs
xlat
lods
std
adc
xor
push
aad
push
into
ficomp
xchg
jns
in
push
test
push
movs
mov
push
enter
xchg
arpl
repz
sar
pushf
mov
sti
mov
rol
inc
inc
ficom
and
ror
sub
in
jbe
cli
pop
(bad)
nop
imul
cmp
xor
popa
or
xor
stc
retf
add
out
fistp
loope
inc
jmp
push
mul
push
das
jns
test
jbe
ins
loope
sbb
dec
hlt
jmp
dec
mov
push
repnz
shl
stos
or
pop
mov
adc
jae
inc
fidiv
jno
nop
or
rcl
sub
push
fdivrp
nop
(bad)
in
mov
outs
mov
fdiv
and
cmp
fiadd
jge
sub
xor
pop
int
sub
lods
mov
test
std
ror
inc
std
jno
add
xor
int3
or
into
aaa
or
sub
or
imul
push
pop
call
das
jmp
and
int
xor
sub
ds
xchg
cmc
adc
in
dec
and
int3
ins
mov
popf
pusha
clc
and
into
add
cmp
iret
or
jo
push
lea
fisubr
popf
inc
pop
in
adc
inc
test
pop
pop
xchg
test
out
mov
mov
xchg
std
push
lock
mov
pop
loope
mov
(bad)
cmp
push
ficomp
jmp
out
pop
je
into
fcmovne
ret
dec
cmp
or
add
aas
mov
daa
pop
les
and
into
(bad)
mov
loop
mov
pop
retf
mov
xchg
push
push
jp
and
fld
xchg
retf
lahf
dec
and
jp
push
and
jo
pusha
movs
in
jge
out
in
xchg
xchg
lods
pop
jp
les
loop
push
adc
push
movs
call
mov
(bad)
jmp
xchg
mov
mov
xor
(bad)
mov
call
mov
push
fs
xor
sbb
xor
retf
push
fwait
push
push
xor
pop
xor
push
(bad)
jo
or
mov
(bad)
data16
mov
pop
les
dec
pop
sub
arpl
push
inc
call
sub
hlt
push
in
cli
push
rcl
mov
cmp
shl
jmp
jmp
(bad)
mov
push
sbb
popf
xchg
(bad)
call
in
loop
inc
ins
mov
cli
mov
shr
fmul
xchg
jmp
mov
sub
(bad)
(bad)
sub
mov
lds
adc
and
or
or
cld
and
outs
sub
pop
icebp
dec
cmp
pop
mov
mov
mov
jg
out
idiv
cmps
lds
int
and
ja
fcmovb
mov
shl
enter
add
sbb
adc
sub
pop
jle
in
fwait
add
idiv
aaa
test
ret
shl
rcl
sar
stos
inc
jge
adc
out
in
test
xor
mov
lods
ins
(bad)
aam
cmp
sbb
inc
mov
or
mov
xor
fcomp
stos
jge
in
mov
sub
or
scas
xor
jl
jbe
call
sbb
mov
cs
outs
and
pusha
call
adc
push
mov
cwde
and
xchg
pop
push
push
aaa
xchg
gs
in
out
mov
or
cmc
sbb
push
inc
xor
call
addr16
jne
in
xor
enter
sahf
fst
mov
and
jmp
cld
(bad)
dec
(bad)
lock
loope
loope
stos
cli
loopne
mov
fsub
cmp
(bad)
or
sbb
pop
push
ja
call
retf
cwde
push
ins
sub
jns
scas
sbb
repz
out
or
aaa
mov
lock
gs
jg
leave
pop
push
dec
das
pop
enter
pop
addr16
xlat
fcomp
les
pop
jmp
ja
sbb
inc
add
fwait
daa
pop
and
mov
cmp
fs
xchg
pop
jg
(bad)
in
or
addr16
inc
sar
push
xor
push
movs
ror
retf
adc
retf
sub
sbb
add
je
pop
hlt
outs
sbb
sbb
jns
sub
pop
mov
fbld
mov
mov
pop
xor
jae
mov
mov
inc
movs
pop
iret
in
pop
pop
jmp
enter
jmp
pop
stos
mov
push
hlt
idiv
jmp
push
ins
dec
(bad)
cmc
clc
test
jns
jno
stos
cmp
mov
and
js
inc
mov
mov
unpckhps
movs
cmc
leave
push
sub
aam
dec
add
or
xchg
mov
outs
cld
aam
or
std
stos
cmps
jp
inc
mov
mov
fwait
mov
loope
in
jmp
jp
in
sbb
cmp
test
mov
loop
int
sti
xchg
push
cmp
fmul
mov
adc
xchg
inc
push
out
mov
dec
ficom
cli
data16
dec
push
jle
rep
xor
shl
paddd
ds
xchg
daa
icebp
out
jmp
lea
pop
sahf
cs
dec
inc
or
mul
add
lods
inc
xchg
fwait
imul
jbe
repnz
or
mov
adc
push
dec
sbb
add
and
push
ins
sub
push
cwde
inc
mov
shr
mov
int
nop
pushf
mov
adc
outs
sub
jb
in
outs
sahf
pop
(bad)
fisttp
stos
and
in
and
stos
iret
fisttp
test
xchg
or
adc
xchg
in
jle
mov
inc
pop
xor
mov
push
aad
dec
jmp
cmp
in
sbb
add
test
ret
div
push
sbb
pextrw
(bad)
push
call
mov
and
std
and
mov
push
out
enter
add
jmp
pop
mov
push
nop
jl
xlat
cmp
imul
loop
fistp
push
inc
jno
and
mov
push
cmp
xor
das
mov
test
icebp
cmp
mov
mov
add
icebp
scas
enter
inc
mov
mov
add
test
loope
pushf
dec
aam
(bad)
lods
pop
cmp
pushf
add
adc
or
mov
xchg
mov
mov
inc
inc
inc
idiv
mov
stc
inc
idiv
pop
add
push
add
imul
retf
icebp
out
dec
ret
or
push
cmp
xchg
cmp
out
loope
les
xor
call
push
xlat
gs
loop
push
adc
mov
iret
pop
inc
or
pop
call
into
shr
cmc
push
and
shl
jg
cmp
dec
xchg
add
push
sbb
mov
cmp
or
fdivp
nop
push
lds
lods
pop
sub
rcl
dec
or
ror
out
jecxz
loopne
mov
je
gs
(bad)
jnp
jae
jmp
fstp
shl
rol
mov
data16
push
adc
inc
dec
add
fistp
(bad)
ins
outs
add
pop
loope
dec
sbb
pop
imul
fsubr
mov
dec
enter
lods
sub
ins
cs
mov
stos
stc
xchg
idiv
xchg
sub
(bad)
adc
pop
sub
aas
adc
mov
data16
cmp
loop
add
xor
push
out
int
shr
jmp
xlat
push
xor
in
out
mov
xor
imul
xor
lods
sbb
inc
loope
(bad)
jnp
mov
stc
dec
and
fsub
imul
jmp
inc
pop
out
mov
inc
fbstp
fidivr
lods
pop
ss
sbb
add
not
inc
mov
xor
fs
je
xor
pusha
fisubr
sub
test
aaa
and
xchg
loope
xchg
mov
stos
sbb
and
aaa
cmps
add
sbb
(bad)
aad
js
add
mov
mov
pusha
mov
lods
xor
fs
std
xlat
jmp
into
std
into
mov
jno
or
jne
pop
or
adc
sbb
daa
mov
push
shl
mov
jmp
pop
xor
inc
sub
ret
xchg
test
mov
mov
inc
(bad)
repnz
nop
movs
add
mov
mov
out
(bad)
arpl
jo
das
test
or
lds
xor
cmp
xor
dec
cmp
xor
sub
pushf
clc
mov
call
adc
sbb
sub
ds
xchg
mov
stos
jno
inc
in
test
jecxz
(bad)
sub
push
cmp
(bad)
mov
gs
xchg
mov
loop
add
mov
(bad)
clc
xchg
add
xor
mov
jno
adc
pop
cmps
mov
sub
mov
push
pushf
retf
push
push
sub
aam
ret
arpl
mov
and
in
mov
jbe
xor
sbb
je
sub
mov
mov
jb
inc
fsubr
xor
enter
xor
nop
jo
pop
ror
sbb
xor
jle
stos
stos
aas
cmp
lods
adc
test
push
inc
push
adc
jge
lds
inc
dec
cli
(bad)
cmps
stc
mov
retf
mov
sbb
loope
call
bound
test
cwde
jno
mov
out
or
jl
sti
out
mov
ja
ins
ins
lods
sub
or
mov
push
(bad)
imul
dec
cmps
dec
push
sbb
(bad)
inc
push
mul
dec
cmc
sub
jns
cli
jo
adc
out
dec
push
mov
add
ins
fisubr
ds
outs
push
retf
data16
add
inc
fadd
out
out
movs
inc
call
sbb
adc
not
sbb
shl
mov
pushf
loop
sbb
out
retf
rcl
mov
jno
lahf
sti
mov
sbb
cwde
xor
sahf
in
imul
jns
xchg
dec
loopne
push
js
les
dec
(bad)
call
or
inc
jne
push
movs
xchg
push
neg
xor
outs
fmul
loope
rcr
push
mov
inc
jno
in
xchg
jae
dec
outs
jo
xchg
nop
ins
call
ror
or
xchg
sahf
call
dec
xor
or
jmp
sub
lods
sub
pop
fst
adc
sbb
ret
mov
loope
repnz
pop
jecxz
cli
mov
out
adc
or
stos
mov
sub
popa
in
pushf
aaa
sub
popa
dec
push
movs
fst
jp
sbb
stos
mov
cmp
inc
stos
jl
sub
push
push
popf
mul
hlt
or
sahf
icebp
jmp
sbb
jecxz
cmp
aaa
loop
test
cwde
or
mov
jge
cmp
in
les
daa
pop
push
inc
xchg
scas
punpcklwd
(bad)
clc
jg
stos
adc
stos
push
cmp
mov
fcmovnb
in
shl
in
test
fist
mov
lods
mov
pop
push
ins
into
mov
xor
lods
mov
inc
xor
cmp
div
adc
adc
outs
xchg
pop
ss
(bad)
jo
xor
(bad)
sbb
mov
ror
mov
fiadd
xchg
mov
daa
add
shr
aam
imul
not
push
fiadd
(bad)
lods
mov
in
pop
lds
fadd
fld
leave
push
test
fwait
mov
push
add
in
retf
mov
iret
ins
xor
jo
cmp
push
mov
loop
daa
pop
loop
mov
push
jb
inc
icebp
hlt
xor
add
(bad)
mov
pop
test
in
dec
inc
push
push
in
mov
mov
pop
pop
outs
stos
les
cmc
cmp
repz
or
pop
adc
movs
push
addr16
xor
sbb
in
arpl
retf
sar
daa
ja
test
dec
int3
test
mov
xchg
out
ror
push
fwait
dec
icebp
adc
xor
dec
dec
sub
fnstsw
fwait
push
stos
jg
sub
or
or
call
in
jmp
bound
sub
fnsave
xchg
pusha
push
jge
pop
adc
popw
loopne
retf
rdpmc
aam
inc
sbb
dec
pop
jmp
pop
xor
add
shl
sbb
mov
imul
daa
test
mov
(bad)
ret
push
popa
xchg
mov
mov
je
daa
dec
xchg
or
popa
adc
push
dec
in
jmp
test
dec
mov
jp
mov
xor
call
mov
mov
jno
mov
cwde
lock
mov
cmp
xor
add
(bad)
movs
and
inc
xchg
push
xchg
xor
mov
adc
push
jl
out
dec
out
push
push
dec
xor
movs
inc
in
lods
and
enter
jecxz
or
(bad)
and
push
pushf
mov
xchg
mov
xchg
fild
mov
cs
dec
dec
inc
pop
xchg
inc
xor
mov
sub
into
test
inc
sahf
inc
dec
int
sub
pushf
loop
and
inc
cmp
cmp
push
bound
add
ja
mov
popa
xchg
test
and
push
std
cmp
ins
xor
or
xchg
jp
les
int3
jmp
daa
sbb
lea
jno
lods
mov
jae
push
daa
push
sbb
and
aam
push
or
lahf
mov
xchg
int3
adc
sbb
add
push
sub
and
and
pusha
es
cmc
loop
and
retf
jl
sub
das
mov
fdiv
into
cmp
int3
or
jbe
loop
jge
imul
je
ret
imul
out
shr
and
xchg
push
lds
jmp
rcr
push
out
mov
push
aaa
movs
inc
jmp
pop
aam
and
jne
test
cdq
add
fadd
lock
(bad)
cdq
adc
call
mov
data16
mov
mov
mov
jg
jno
and
push
mov
adc
mov
mov
ins
(bad)
adc
jno
call
or
push
xlat
and
pop
bound
arpl
(bad)
stos
jb
mov
push
cmp
into
test
jg
inc
mov
dec
push
jno
test
xor
dec
aaa
out
and
shl
adc
les
xor
fld
add
(bad)
mov
cli
add
fcomp
cmp
cs
sbb
jmp
adc
scas
jo
push
imul
mov
adc
loope
loop
out
cmp
(bad)
imul
mov
jb
test
jnp
or
sahf
pop
xchg
(bad)
je
in
iret
mov
lods
add
fdivp
adc
jne
loopne
mov
sar
and
daa
icebp
adc
lahf
outs
xor
add
mov
adc
ins
lods
cmp
sbb
push
fisubr
loop
mov
retf
dec
dec
out
jmp
push
jge
push
rol
sbb
pop
push
add
mov
mov
mov
add
pop
repz
jge
push
push
popa
pop
in
ret
in
push
cmc
jp
xchg
cwde
cmp
popf
ret
(bad)
aas
in
jnp
pusha
sbb
dec
add
adc
push
int
call
mov
sahf
(bad)
and
add
xor
cmp
mov
mov
adc
cmp
jae
lds
mov
sbb
sbb
outs
cdq
mov
pop
mov
fwait
xlat
call
jl
cdq
ror
jb
jmp
dec
cmp
scas
pop
sbb
out
fcomp
mov
or
inc
cmp
ss
jbe
dec
xchg
mov
xor
push
mov
pop
or
stos
dec
fdiv
sub
es
rcr
adc
bound
aaa
stos
sti
daa
or
cwde
xor
inc
pop
cdq
dec
in
data16
adc
std
je
dec
or
imul
mov
cli
add
inc
sub
add
fdiv
and
mov
push
ret
sub
dec
mov
pushf
retf
gs
jle
dec
ja
popa
mov
inc
mov
mov
xchg
test
cmc
out
pop
aaa
stos
repz
(bad)
int
push
mov
popa
push
retf
jp
aaa
mov
mov
jbe
pop
pop
jae
mov
xor
mov
pushf
jmp
je
inc
xchg
add
fist
xchg
sub
push
fwait
ins
ins
mov
hlt
mov
dec
add
sti
rcl
fld
push
jl
pop
push
xchg
dec
dec
adc
mov
jge
mov
aam
cmps
adc
int3
dec
mov
push
or
test
test
mov
nop
jge
pop
xor
and
ja
ja
or
add
xchg
fiadd
mov
cmp
repnz
(bad)
int
icebp
sbb
mov
mov
sbb
mov
and
out
and
adc
into
cmp
mov
cmp
jnp
mov
xor
and
ja
mov
mov
mov
or
jmp
pop
lahf
(bad)
push
push
add
sbb
outs
test
xor
push
adc
ror
mov
es
jmp
repnz
dec
mov
add
push
dec
sti
enter
pushf
es
jo
jecxz
mov
xchg
jle
push
das
mov
and
and
mov
mov
fnstenv
ficomp
hlt
sub
aas
test
int3
jbe
test
(bad)
(bad)
inc
mov
(bad)
call
xor
push
xchg
arpl
in
inc
cmp
pop
or
or
lods
add
mov
mov
xor
(bad)
nop
ret
ret
inc
pop
fcom
sar
mov
call
(bad)
pushf
dec
dec
xchg
inc
mov
test
xlat
ja
xor
sub
nop
std
dec
fstp
shr
cmp
mov
icebp
movs
clc
push
es
inc
loope
scas
jne
inc
mov
push
fst
xlat
sub
dec
jo
jl
mov
mov
mov
mov
dec
imul
data16
(bad)
lds
ret
mov
or
mov
mov
jbe
fs
pop
or
arpl
cmp
inc
ss
dec
inc
lahf
rcr
std
aas
int3
dec
mov
fmul
xor
cs
adc
shl
pop
in
mov
out
sub
popf
sbb
xchg
jns
mov
repz
(bad)
xor
push
mov
shr
call
stc
outs
sub
inc
test
not
iret
shr
xchg
outs
adc
es
mov
pop
adc
or
xchg
cmp
ds
xchg
cmp
lahf
in
test
and
scas
and
dec
fild
jle
test
inc
(bad)
call
loop
add
inc
mov
ret
xor
fdivr
mov
pop
mov
mov
mov
jbe
mov
mov
ror
xor
(bad)
and
sahf
jge
fcomp
daa
cmp
iret
loope
push
xor
and
mov
mov
push
pop
fstp
push
xchg
xchg
jmp
icebp
test
adc
pop
push
sar
ret
dec
pop
out
(bad)
sub
push
pop
movs
int3
inc
int
inc
pop
or
cmc
xor
imul
in
paddq
jle
data16
sub
cmp
push
ds
adc
(bad)
jns
leave
add
out
daa
icebp
xor
repz
sub
xchg
iret
int3
jno
mov
pop
jns
call
in
sbb
sub
mov
sub
jno
aam
pusha
cmp
push
scas
(bad)
dec
std
xchg
dec
out
bound
rol
inc
idiv
test
jp
push
sbb
imul
jmp
sbb
pop
in
dec
lea
jnp
cmc
ror
adc
mov
jp
or
lds
mov
out
clc
add
push
adc
pop
leave
ret
ror
add
scas
sbb
or
(bad)
loope
push
test
adc
push
adc
inc
ins
outs
push
repnz
mov
in
add
jp
push
les
lods
inc
and
lods
outs
aad
xchg
add
cmp
aas
fnsave
jg
mov
stc
jge
ins
out
movs
inc
js
jmp
mov
je
gs
retf
cmc
jecxz
call
ror
cmp
sub
sub
pop
into
lods
xchg
fld
ins
dec
gs
jno
jmp
xchg
sub
or
mov
pop
lea
push
shr
xor
sub
aam
dec
arpl
push
xchg
dec
clc
pusha
leave
mov
out
sub
mov
or
(bad)
je
stc
popf
pop
sbb
add
add
xchg
xchg
jae
stos
jmp
lds
mov
fadd
xor
scas
xchg
cld
xor
push
fsubr
mov
pop
jp
nop
mov
leave
daa
je
sub
dec
inc
cld
pusha
push
pop
xchg
imul
outs
xchg
inc
xchg
push
xchg
mov
push
fs
int
mov
add
ror
movs
and
ins
lods
push
das
jne
daa
push
sahf
mov
push
out
jo
in
repnz
(bad)
xor
cli
outs
in
xchg
cmp
lods
and
inc
icebp
movs
rcr
cmp
cmps
jbe
mov
push
scas
or
mov
xor
mov
pop
mov
pop
(bad)
jmp
sub
out
sbb
scas
fcmovbe
inc
pushf
outs
xchg
adc
fild
xor
(bad)
(bad)
out
inc
or
xchg
clc
add
out
jae
pusha
hlt
test
stc
or
mov
jns
scas
ja
repz
test
mov
pop
fistp
mov
std
sar
cs
pmaddwd
dec
or
mov
aaa
jg
cmp
je
jbe
mov
xor
or
sbb
inc
jg
pop
leave
mov
pop
test
inc
sti
cmp
pop
adc
jge
movs
xchg
ss
jle
clc
xor
iret
cli
pop
cs
xor
int3
imul
push
sbb
mov
int
mov
rol
out
cmc
ret
mov
(bad)
(bad)
xchg
ret
aaa
push
movs
sahf
xor
pusha
test
jmp
inc
into
rcr
fsub
cdq
sub
shl
inc
out
loopne
cmps
add
cld
jae
sub
add
add
dec
sub
xor
mov
enter
in
cdq
in
mov
add
and
js
push
add
movs
into
inc
lock
shl
loope
shr
push
pop
es
xor
or
fld
sahf
sbb
xchg
dec
out
cmc
inc
loop
ss
inc
or
xlat
jno
scas
daa
xor
repz
and
inc
sahf
push
and
stos
in
push
aam
retf
outs
iret
out
mov
sub
pop
sub
mov
fcomi
neg
and
jne
outs
in
or
xor
jecxz
stos
push
(bad)
ja
cmp
dec
jmp
mov
rcr
call
dec
and
or
jns
adc
xor
dec
aad
in
and
add
mov
retf
inc
repnz
stos
test
lds
fadd
xchg
jne
aas
push
mov
mov
or
out
loope
push
pushf
les
add
lods
inc
out
add
pop
retf
call
jl
(bad)
mov
imul
loop
imul
xor
push
shl
cmp
test
mov
xor
leave
hlt
xchg
fwait
sar
outs
rcl
pop
into
fidivr
add
mov
and
lahf
push
iret
dec
scas
dec
pop
test
inc
push
mov
push
and
pusha
addr16
mov
push
mov
jno
ja
pop
aam
mov
ss
pushf
inc
call
cmps
mov
leave
cmps
adc
mov
cmp
into
adc
pusha
or
jne
xor
aad
inc
je
push
xor
ret
cdq
push
aam
ds
xchg
frstor
hlt
push
jnp
or
je
lods
push
jmp
imul
lock
int
pop
push
cmc
push
mov
xchg
adc
cmp
fimul
addr16
fst
mov
out
leave
mov
and
aad
inc
lods
pop
adc
inc
and
jg
out
mov
push
fdiv
pop
cmps
mov
or
adc
es
ins
xchg
loop
mov
mov
(bad)
mov
shl
push
cmp
aaa
or
outs
sti
jg
jmp
les
xchg
mov
ret
frstor
xchg
pop
repz
adc
aam
neg
out
mov
fld
jp
add
mov
and
xchg
jbe
xor
call
out
inc
fwait
dec
cmp
push
fsubr
cmc
ds
cmp
call
popa
fwait
jae
stos
jne
cs
and
mov
std
sbb
shl
add
pop
pusha
into
pop
in
mov
(bad)
repnz
mov
xchg
sbb
addr16
xchg
cdq
enter
jne
pusha
hlt
cmc
xor
xor
out
(bad)
jno
push
and
add
scas
push
rcr
(bad)
jl
sbb
addr16
dec
scas
test
jmp
aad
xchg
xchg
int3
cwde
pop
jnp
jmp
and
jmp
xchg
dec
mov
dec
cmps
or
push
daa
push
dec
jmp
jg
or
sbb
mov
jne
xor
dec
icebp
push
xchg
adc
add
cmc
ret
jmp
adc
add
mov
pop
mov
(bad)
adc
retf
pushf
or
cmps
sbb
mov
(bad)
cmp
cmp
rol
jl
imul
dec
popf
sub
cmps
fstp
repnz
mov
push
int
(bad)
adc
cli
out
imul
inc
sahf
push
cmp
pop
popf
mov
arpl
mov
std
or
sahf
push
jnp
jecxz
xor
xchg
jmp
mov
leave
xor
mov
wrmsr
mov
mov
mov
mov
aam
loopne
or
clc
xchg
jecxz
stc
pop
xor
fbld
jl
adc
push
je
mov
loope
das
pop
xchg
push
lods
outs
xchg
mov
cmp
and
dec
js
popf
scas
dec
or
jl
inc
aam
jecxz
mov
shl
stos
clc
jmp
(bad)
scas
bound
stos
push
push
xor
pop
cwde
in
dec
es
into
aaa
xor
clc
mov
jge
pcmpeqb
adc
(bad)
test
aad
pusha
push
xchg
add
in
out
push
mov
aad
test
xchg
loopne
and
push
fsub
add
dec
or
lods
cli
cs
scas
leave
push
shr
sbb
fldenv
pop
in
in
xchg
int3
and
pusha
cmps
pop
sbb
xor
cmp
sub
cmps
jl
mov
test
adc
adc
les
stos
sar
sub
sbb
cwde
ss
(bad)
push
add
mov
ret
inc
pop
cmps
pop
add
inc
ins
xor
jnp
ss
dec
mov
dec
xchg
dec
movs
pop
int3
sti
psllw
sahf
(bad)
cld
imul
mov
mov
and
dec
inc
pop
(bad)
mov
in
(bad)
push
mov
push
shr
retf
aad
dec
loop
aam
test
into
push
inc
cmp
inc
sub
or
inc
cmps
mov
in
xor
(bad)
mov
cdq
call
jo
mov
test
push
inc
mov
into
sub
or
idiv
(bad)
(bad)
pop
or
adc
xor
sbb
inc
inc
jns
das
mov
mov
adc
lahf
neg
cmp
or
mov
jg
jle
add
nop
mov
and
sbb
mov
inc
jmp
(bad)
into
and
dec
dec
pop
xchg
sar
test
clc
dec
cmp
inc
inc
retf
xlat
std
retf
inc
or
jo
fimul
pop
call
sbb
push
dec
sub
or
mov
das
sahf
out
aad
and
push
add
mov
xrelease
sub
pusha
int
or
sbb
push
push
rol
cmp
mov
icebp
sbb
cdq
pop
push
lods
adc
call
adc
sbb
pavgw
adc
popf
mov
lods
cwde
pusha
mov
fnstcw
cmp
push
push
popf
add
imul
push
ror
xchg
xor
ds
in
or
stos
out
cmp
jmp
stc
les
mov
mov
pop
lods
loop
xchg
pusha
or
shl
cmp
imul
sbb
outs
(bad)
mov
iret
fs
jbe
sub
or
push
mov
das
jbe
jmp
jg
scas
add
retf
push
dec
arpl
sub
mov
pusha
xor
leave
int
(bad)
sbb
test
xor
fsub
pop
jae
mov
xchg
sbb
pop
dec
test
push
test
popf
sbb
cs
adc
call
retf
sti
scas
ror
sub
(bad)
dec
popa
fld
cmp
sub
out
gs
and
shr
or
test
popf
or
sbb
ja
and
push
mov
cmp
and
rcr
rcl
lods
xor
repnz
dec
nop
lea
jbe
sbb
icebp
in
cmps
inc
mov
(bad)
ds
push
mov
aad
pop
xor
ins
mov
les
pop
jmp
pop
mov
dec
clc
and
or
xchg
or
xchg
inc
or
sub
sub
aas
dec
popa
inc
jge
mov
leave
inc
pop
mov
loopne
cmp
shl
xchg
idiv
jnp
mov
jmp
mov
xchg
les
jmp
(bad)
mov
mov
pop
sub
out
fadd
(bad)
shl
popf
pop
mov
add
idiv
cpuid
les
cmps
jle
gs
inc
mov
dec
arpl
cmp
and
mov
or
inc
pop
jge
sbb
cmp
dec
and
repz
addr16
jbe
mov
pop
inc
movs
sub
pop
lods
push
jns
mov
enter
fisub
mov
mov
mov
in
cmp
sbb
out
xchg
ret
adc
add
push
and
aam
test
ins
sar
jbe
call
mov
aas
je
adc
cmp
test
js
daa
xor
xchg
movs
aas
pop
sub
cmc
es
pop
ror
adc
retf
jle
or
dec
push
pop
pop
xchg
fisubr
push
xlat
fist
xor
mov
sbb
stos
out
inc
inc
or
jb
iret
and
std
cmc
cmp
loop
dec
and
pop
out
arpl
adc
adc
retf
xor
sbb
jb
iret
dec
jns
call
push
jecxz
das
ret
daa
sbb
cmp
pop
int3
xor
jae
push
pushf
cmp
call
inc
pop
cmps
test
in
mov
xchg
(bad)
aas
pop
popf
movs
pop
mov
dec
push
pusha
scas
mov
(bad)
dec
movs
push
(bad)
call
xchg
jp
lods
or
xor
scas
inc
sub
xchg
or
pop
add
add
(bad)
mov
fdivr
xor
mov
cdq
leave
dec
add
xor
and
cmps
xchg
xor
pop
sub
and
sub
pushf
mov
daa
(bad)
loopne
jmp
lods
jecxz
xchg
ror
js
and
sbb
adc
sahf
ins
cld
inc
data16
push
or
js
fmul
jb
and
pop
mov
jae
xor
(bad)
mov
mov
xchg
sbb
loope
in
jbe
outs
cmc
xor
cmp
cmp
cwde
cwde
cmps
sub
sbb
xor
jne
cmp
inc
xchg
cmc
fcomp
out
lock
cwde
mov
test
push
adc
icebp
and
inc
test
lds
loopne
retf
push
hlt
arpl
pusha
fcmovb
stc
leave
jnp
sbb
fnstsw
fldenv
scas
scas
ret
and
and
fwait
mov
ret
mov
and
lea
sbb
imul
fisub
adc
icebp
mov
jno
(bad)
cli
jl
call
lds
sub
das
test
cmp
or
mov
pusha
mov
dec
std
and
repnz
sub
aaa
and
aad
clc
or
fisttp
adc
pop
mov
repz
jle
stos
stc
test
lahf
jo
cdq
inc
or
pop
pop
int3
bound
mov
mov
adc
mov
and
iret
mov
and
imul
inc
outs
cmps
xchg
ins
repnz
aam
faddp
cmp
mov
outs
mov
or
cmp
jno
mov
push
lahf
cmps
fimul
xchg
test
mov
pusha
movs
stc
jo
stc
(bad)
icebp
rol
sub
pop
mov
push
sbb
mov
xchg
scas
jg
repz
jb
jl
push
ins
xchg
retf
retf
jge
movs
jl
iret
push
pop
jmp
adc
cmp
mov
imul
neg
push
test
(bad)
jo
loope
add
push
xor
test
push
cmp
rol
fisub
std
inc
in
push
mov
push
sahf
sbb
scas
(bad)
mov
test
xor
cmp
cmp
add
fild
mov
scas
sub
jp
iret
push
adc
fidivr
loope
xor
sahf
mov
jge
and
jmp
test
mov
mov
movs
sbb
outs
xchg
(bad)
push
jnp
sahf
mov
rcl
pop
mov
lods
sbb
mov
adc
jae
add
push
popf
inc
out
pop
pusha
mov
push
mov
cmp
stos
adc
clc
dec
sbb
loopne
pop
xchg
and
inc
aad
sbb
sbb
mov
es
adc
data16
fimul
adc
rcl
pop
pop
cmp
mov
stos
add
arpl
dec
jne
bound
push
mov
lock
aas
lock
ja
inc
sub
and
(bad)
repnz
sub
mov
sbb
mov
jb
arpl
add
ins
mov
mov
(bad)
dec
cli
das
dec
cli
add
gs
movntps
test
jp
aam
ds
(bad)
in
mov
outs
cmp
out
mov
adc
es
or
adc
cmp
mov
pop
mov
cmp
pop
jno
jne
mov
xor
dec
not
mov
cmp
jns
std
cmp
pop
push
inc
lods
xlat
shl
int3
pop
xor
mov
mov
lods
lock
lea
or
pop
inc
clc
retf
and
int
jno
adc
in
aam
jg
inc
pop
and
psraw
push
push
outs
sbb
and
push
xor
fwait
inc
pop
inc
add
rcr
movs
mov
or
pusha
sub
loop
ror
pop
jnp
xor
sub
push
inc
add
(bad)
cmp
or
inc
fdiv
iret
sbb
repz
sub
add
pop
or
mov
adc
mov
inc
dec
ror
mov
dec
sar
lock
xchg
push
xchg
pop
pop
(bad)
cmp
dec
lods
hlt
inc
or
cli
cmp
jl
bound
push
adc
add
or
and
cmp
xor
dec
(bad)
add
pop
cmps
mov
sub
adc
or
fild
ret
in
(bad)
rcr
push
js
js
cmp
mov
push
jns
test
mov
or
pop
xchg
mov
out
leave
sub
mov
mov
ror
sbb
jb
add
pop
jmp
mov
or
xchg
lea
dec
jbe
push
fisttp
or
jb
retf
jecxz
fdivrp
sbb
inc
rol
out
aam
stc
jmp
mov
(bad)
jae
and
mov
dec
into
xchg
push
iret
add
pop
scas
adc
mov
sbb
pop
or
test
sbb
mov
(bad)
fstp
mov
movs
aad
int
xchg
jecxz
xchg
xchg
fmul
mov
cmp
mov
mov
nop
mov
mov
mov
cdq
gs
jmp
xchg
je
push
dec
das
sub
xchg
aam
xchg
movs
cs
inc
inc
sbb
adc
aam
imul
retf
jle
or
and
repz
sub
fdiv
and
int3
outs
out
add
fld
add
jns
call
icebp
fs
mov
jp
inc
wrmsr
jl
retf
jge
mov
ficomp
xchg
dec
int
out
sbb
add
push
and
call
xchg
ret
jmp
loopne
mov
cs
or
mov
pushf
xor
or
push
test
cs
jmp
lock
cld
stc
in
popa
add
test
mov
mov
jle
mov
xchg
mov
lds
outs
retf
imul
xlat
mov
xor
(bad)
icebp
hlt
mov
rcr
xor
lods
pop
adc
and
and
je
sub
xabort
pop
fistp
add
rcr
mov
outs
shr
ss
jg
loope
dec
xchg
jo
xchg
aaa
push
dec
mov
sub
cwde
push
fidiv
or
stos
gs
xchg
adc
mov
int3
int
test
outs
dec
enter
xchg
cdq
pusha
test
mov
or
sahf
lods
or
pusha
xchg
shl
outs
repz
inc
inc
aas
popf
jno
clc
cmp
pop
pop
mov
xor
arpl
je
pop
xchg
xchg
pop
mov
ror
imul
mov
adc
cmp
mov
cld
pop
test
out
fstp
mov
pop
mov
aam
jle
sub
ja
xchg
in
jns
sub
clc
push
xor
push
pop
cmp
call
push
mov
push
push
mov
je
stos
sub
or
in
outs
fld
pop
adc
xor
cld
shl
push
std
(bad)
fidiv
jne
nop
(bad)
lods
add
shr
lock
iret
or
adc
jbe
xor
daa
cwde
rcl
xor
imul
xor
inc
cmp
xchg
fsubr
dec
fwait
push
xchg
mov
fwait
int
cmp
push
ds
cmp
pusha
test
mov
inc
sar
clc
movaps
scas
cs
dec
sbb
mov
inc
push
imul
sbb
cmp
push
add
xchg
sbb
bound
add
in
jbe
iret
pop
fsubr
mov
(bad)
scas
sbb
dec
pop
xchg
dec
retf
mov
call
adc
adc
add
adc
js
and
jp
out
test
(bad)
mov
add
dec
add
mov
sbb
pop
call
jp
call
data16
int
shl
out
fimul
or
jg
sub
or
test
cmp
(bad)
ins
jnp
mov
cld
gs
mov
mov
cmp
pusha
out
mov
mov
dec
dec
test
movs
in
out
in
mov
cmp
push
push
popf
xor
dec
xor
iret
sub
and
cmp
and
sub
or
xor
pusha
sbb
dec
cmp
iret
cmp
push
add
fadd
push
pop
push
xor
or
sbb
fwait
mov
ret
fsubp
xchg
fwait
or
clc
cmp
daa
mov
push
outs
or
ficom
cmp
lea
mov
add
xlat
fstp
fsub
jb
movs
xchg
mov
xor
mov
lahf
(bad)
nop
mov
int
push
cli
mov
leave
sbb
xchg
sub
adc
ficomp
mov
(bad)
jne
add
es
mov
jb
and
mov
enter
ficom
in
dec
cmp
cmp
add
mov
jns
jno
(bad)
xchg
dec
out
not
inc
retf
iret
and
pop
nop
mov
mov
lahf
xchg
mov
cmp
push
lea
mov
ja
in
fadd
jbe
pop
aam
pop
pop
scas
cmp
fisubr
bnd
out
adc
sub
loopne
dec
fdivr
fdiv
mov
movs
icebp
xor
fwait
adc
push
sahf
mov
sbb
(bad)
and
xor
imul
das
xchg
call
in
les
jg
jbe
pop
cdq
jle
mov
repnz
xchg
and
mov
or
nop
sub
jbe
mov
add
and
fisub
es
xor
out
cmp
mov
dec
shr
inc
imul
dec
add
pushf
adc
xchg
inc
bound
(bad)
int
(bad)
sub
mov
inc
cwde
shl
test
fwait
jns
xor
jno
or
es
nop
mov
pop
and
jno
stos
mov
stos
mov
stc
xor
mov
push
daa
adc
xor
cmp
adc
fs
mov
xchg
test
sahf
jg
xchg
fwait
adc
or
cs
xor
or
add
push
je
pop
lock
jmp
xchg
loop
and
mov
ins
hlt
mov
fsubr
push
xchg
jbe
imul
adc
cmp
add
pop
stos
sbb
sub
scas
push
mov
ins
bound
sub
dec
pushf
or
arpl
or
adc
jmp
add
fdivr
add
mov
sbb
cmp
adc
les
sbb
pop
or
jp
fimul
push
jp
inc
pop
stos
shl
or
push
out
xchg
and
cmp
sar
sub
jb
mov
out
bound
mov
(bad)
jae
xchg
pusha
(bad)
mov
test
fdivr
jle
dec
xor
jg
fst
mov
out
ficomp
mov
mov
fld
jecxz
add
sbb
or
(bad)
dec
daa
mov
in
sbb
int3
shl
push
lods
cs
xchg
push
ret
sub
push
and
std
xchg
dec
test
adc
arpl
mov
sub
cmp
add
jne
shl
and
icebp
and
movs
aas
ja
pop
or
push
mov
je
ret
mov
imul
push
sub
push
imul
push
nop
movs
test
sbb
xchg
and
arpl
jae
sub
adc
call
retf
mov
ss
div
jl
cmp
and
push
leave
or
pop
push
dec
js
shl
sbb
and
cmps
repnz
pop
mov
cwde
pushf
adc
and
sub
sbb
call
mov
hlt
mov
jo
inc
inc
pop
out
jecxz
lods
xor
inc
xchg
cmc
push
sbb
out
(bad)
sbb
and
push
xor
mov
jle
dec
les
add
pop
mov
int3
fdiv
je
push
scas
fidivr
sub
mul
movs
cld
push
icebp
or
mov
or
iret
or
sbb
pop
sbb
or
aad
and
mov
sub
lods
mov
loopne
inc
ds
mov
(bad)
cmp
call
lock
out
add
ins
cmc
in
(bad)
gs
in
pop
dec
sub
test
push
int
add
cmp
leave
add
out
lods
movs
xor
jne
jno
push
fcomp
mov
ror
test
xor
mov
or
mov
xchg
outs
sbb
jmp
inc
xchg
jg
add
cmp
fmul
mov
leave
inc
sub
je
retf
cmp
arpl
pop
xor
mov
out
test
je
and
enter
adc
mov
xchg
jo
mov
jb
adc
or
sub
lock
cmps
out
inc
shl
dec
mov
pop
add
imul
and
adc
mov
jl
ret
lds
push
jmp
fsubp
pop
push
mov
repnz
fsubr
xchg
sub
xchg
shr
stos
add
add
push
cmp
cmp
mov
jb
enter
push
sbb
jb
jle
aas
lea
aam
(bad)
aaa
add
and
jecxz
cld
stos
ret
xor
mov
inc
ficomp
stos
arpl
push
mov
fstp
neg
stc
xor
int3
aaa
adc
adc
inc
enter
jae
outs
movs
dec
pop
cli
cmp
jge
stc
xchg
sub
sbb
xchg
sti
mov
sub
mov
cmps
arpl
aad
mov
jns
xchg
ja
mov
push
xchg
mov
xor
sub
xor
jae
pop
sbb
xor
add
ins
adc
(bad)
cmp
and
int3
fdivr
test
jmp
cmps
mov
sbb
scas
mov
sub
xchg
mov
xor
(bad)
int
pop
sti
jns
push
into
ret
jge
mov
pop
lock
stc
mov
or
nop
shl
inc
cmps
int3
push
movs
or
fistp
test
retf
jg
cmp
add
(bad)
imul
arpl
out
stos
je
sbb
ins
ss
es
sub
lods
jle
mov
retf
push
xor
sbb
push
cld
ret
fisttp
(bad)
and
pop
push
(bad)
imul
push
mov
cmp
rcl
pop
test
cmp
xchg
cmp
loop
add
mov
xlat
aad
neg
leave
ins
divps
jns
frstor
mov
mov
cmp
mov
cmp
(bad)
popa
inc
mov
ret
jns
push
inc
pop
and
lods
cmp
test
jmp
pop
hlt
in
xor
dec
in
mul
lods
ret
fwait
xchg
and
mov
cmp
adc
sub
retf
aam
mov
movs
or
loop
leave
sub
lods
leave
jb
jle
fcomp
push
or
mov
push
pop
and
call
push
in
add
jp
jge
add
xlat
xor
xor
pop
sbb
mov
leave
adc
push
aas
fsub
outs
adc
inc
test
nop
sub
add
loop
and
(bad)
and
fcomi
shl
mov
adc
cwde
mul
cmps
les
test
int
mov
cmc
inc
cmp
sbb
and
jb
clc
push
repz
fnstsw
repz
arpl
mov
cld
mov
inc
fimul
adc
sub
mov
mov
push
ret
adc
and
push
shl
push
jmp
loop
dec
adc
fistp
inc
lds
or
iret
xchg
sbb
jns
pop
push
sbb
sbb
retf
push
xor
mov
hlt
pop
xor
cmps
enter
movs
mov
fs
out
retf
mov
out
jge
fld
fsincos
cmp
jb
dec
test
je
mov
sub
xchg
retf
mov
int
dec
mov
lods
hlt
pop
repnz
cmp
lds
inc
(bad)
dec
mov
pop
mov
jl
(bad)
jb
add
aaa
inc
mov
jge
out
minps
js
out
jp
int3
inc
xchg
jo
aaa
and
dec
(bad)
add
test
pop
mov
add
jno
cmp
int3
scas
popf
mov
rcl
and
loop
call
ret
mov
xchg
rol
ret
mov
imul
or
push
add
push
sub
push
imul
test
sbb
dec
sahf
test
dec
add
cdq
and
adc
dec
dec
mov
aad
out
lods
in
add
movs
daa
adc
add
jae
in
test
call
mov
jne
ja
out
xor
daa
cmps
ds
mov
inc
pop
mov
sbb
xchg
sahf
lea
retf
and
jl
les
loop
push
add
cmp
das
into
std
(bad)
and
lahf
lock
std
ret
mov
lods
push
icebp
mov
add
test
ficom
jmp
jmp
cmc
add
(bad)
jl
fdiv
fs
jno
sbb
sub
rcl
pop
fwait
data16
push
jg
inc
push
pop
stos
jnp
fisttp
fwait
inc
push
adc
inc
and
stos
in
dec
rcr
xor
push
mov
add
inc
(bad)
clc
xchg
div
jb
ja
mov
pop
xchg
add
adc
dec
xchg
je
js
test
adc
jmp
adc
lods
js
jecxz
sbb
push
(bad)
pop
sub
xor
jmp
sbb
pop
mov
mov
(bad)
(bad)
and
movs
out
popf
lahf
cmp
cmc
mov
mov
pmaddwd
aad
pop
addr16
dec
mov
(bad)
shl
test
ret
jns
stos
or
mov
push
or
or
add
fcmove
mov
inc
and
xchg
test
push
loope
add
pop
mov
call
and
repz
retf
test
adc
xor
out
and
jp
xchg
sahf
ror
cli
adc
sbb
xor
push
push
cli
push
jle
inc
fidiv
inc
or
test
jg
int
or
mov
push
xchg
cmp
movs
pusha
repnz
repz
add
pop
sub
xor
xor
cmc
mov
mov
lea
cmp
or
mov
fld
jp
inc
xchg
push
cmp
mov
and
xchg
sahf
lahf
pushf
add
aam
mov
fnstsw
outs
imul
test
jne
pop
sub
jnp
les
adc
mov
xchg
push
and
inc
sub
gs
push
stos
sti
scas
fbld
stos
inc
cmp
dec
fisubr
inc
jbe
repnz
aad
sbb
inc
push
les
push
movs
pop
adc
(bad)
fmul
dec
pop
push
pop
cmp
sub
jecxz
sbb
cmps
and
xchg
in
xchg
fdiv
mov
dec
xchg
aas
or
or
ret
xchg
jle
pop
xchg
mov
adc
(bad)
mov
ss
cmp
or
mov
test
fld
xor
sahf
dec
fdivr
push
aaa
psubq
sbb
outs
mov
scas
lahf
add
loop
dec
cwde
dec
dec
ins
popf
or
and
pop
jno
and
int
push
hlt
lds
inc
jno
cmp
dec
mov
sbb
sub
inc
rol
add
int
add
cmc
and
int3
push
pop
stos
mov
jmp
pop
retf
jmp
rcr
dec
cdq
jg
mov
mov
out
and
add
push
pop
mov
loop
mov
sbb
and
(bad)
aam
add
jge
or
xor
rcr
nop
mov
loop
pop
fwait
shl
aaa
mov
les
addr16
loopne
shl
xchg
addr16
(bad)
ja
daa
jo
add
lock
in
xchg
push
out
cli
dec
or
mov
bound
add
cmps
aaa
fidivr
outs
adc
mov
mov
ins
push
popa
mov
(bad)
mov
adc
lock
js
mov
mov
dec
mov
jge
xor
pop
neg
cmp
pop
xor
dec
test
xchg
fs
jo
sub
mov
cmp
inc
mov
jge
ret
arpl
pop
and
xchg
xor
jno
mov
adc
sub
adc
sub
std
test
mov
in
movs
jmp
movs
push
mov
mov
jecxz
pop
mov
pop
mov
cmps
and
mov
lock
sbb
movs
add
add
cmp
mov
aaa
mov
call
pop
xchg
mov
fdiv
stos
and
add
or
sti
ins
dec
test
std
jle
sbb
int
dec
and
outs
sub
xchg
cmc
push
test
inc
sub
nop
mov
sub
ins
imul
sbb
dec
fld
popa
jbe
pop
ins
ret
js
inc
pop
test
mov
data16
movs
add
xchg
aam
or
and
pop
cwde
dec
stc
dec
ja
adc
out
jl
scas
out
daa
pop
pop
mov
push
push
and
mov
add
in
ss
movs
mov
repz
ds
xor
icebp
gs
(bad)
push
add
pushf
test
cli
pushf
or
out
cmps
pusha
les
sbb
gs
sbb
fdiv
daa
xor
lock
(bad)
sub
fcmovu
xor
das
mov
in
jb
mov
mov
sub
dec
ficomp
mov
xchg
popa
nop
add
inc
push
int
push
xor
out
lock
fidiv
inc
in
(bad)
out
xchg
inc
sbb
add
popf
inc
rcr
xor
(bad)
push
sub
les
ds
add
test
sbb
mov
mov
mov
dec
xchg
std
mov
cmc
add
add
leave
outs
sub
movs
addr16
mov
pop
(bad)
pop
fmul
out
scas
adc
lahf
movs
xchg
cmp
pushf
or
imul
sahf
dec
pop
pop
xor
fild
or
mov
dec
pop
cmps
sbb
(bad)
mov
aaa
mov
das
call
inc
fsub
cmp
(bad)
add
mov
mov
cli
call
aas
loope
outs
xchg
(bad)
jmp
(bad)
jg
fwait
outs
ret
inc
aam
pop
in
xchg
clc
push
adc
mov
jb
mov
sub
lods
lahf
cmp
imul
add
add
inc
xor
inc
pop
adc
push
jmp
mov
shl
dec
lods
xor
inc
or
stos
mov
in
mov
stos
pop
into
cld
aaa
adc
not
out
push
push
xchg
scas
mov
imul
movs
fstp
sub
ins
mov
(bad)
mov
pop
mov
repnz
push
dec
addr16
push
xchg
imul
and
(bad)
sub
cs
es
jmp
add
popa
cmps
jmp
shl
xchg
and
pop
or
cmp
ss
dec
ret
daa
fdivr
push
cdq
and
xor
dec
mov
xor
mov
jl
lods
rol
or
or
mov
scas
call
arpl
out
sbb
or
and
jmp
jle
sub
enter
xor
mov
(bad)
leave
fdivr
outs
(bad)
pop
xchg
gs
frstor
xor
xchg
ins
inc
mov
push
push
inc
into
or
mov
push
aad
dec
fcom
scas
cmc
std
ins
imul
rcr
sbb
mov
jbe
dec
icebp
mov
fdivr
cmps
add
fimul
add
mov
fst
sub
jno
push
mov
adc
outs
jmp
data16
jae
cmp
daa
aam
jno
jo
and
push
and
jbe
or
imul
sub
xchg
pop
inc
add
cmp
enter
jmp
lods
push
test
leave
pushf
sbb
push
es
xor
jns
pop
loopne
jae
outs
dec
sti
mov
cmps
jmp
aad
or
ficom
outs
push
inc
ja
jg
adc
pop
rol
sub
mov
or
(bad)
or
fidivr
ret
dec
lds
fs
jmp
loopne
sbb
ins
cmp
mov
cli
rol
mov
dec
enter
mov
and
and
mov
add
xchg
jnp
leave
ret
lds
(bad)
repz
leave
outs
mov
(bad)
cmp
loop
fist
movs
dec
dec
lds
cmp
jl
and
fld
out
xor
lods
dec
pop
inc
pop
xchg
pop
push
(bad)
loope
xor
(bad)
pop
cmp
mov
mov
xor
cld
xchg
pop
adc
jne
scas
jp
push
push
jle
sub
push
sub
dec
mov
pushf
xor
and
add
push
or
cmps
and
adc
aaa
sbb
dec
push
dec
mov
pop
or
popf
out
pop
hlt
inc
add
mov
jg
pop
inc
out
sbb
and
addr16
jae
jmp
jmp
inc
scas
hlt
sub
je
pop
mov
xor
jl
jle
(bad)
ins
stc
aad
sub
loopne
or
rcr
xor
xor
cmp
lea
jb
jnp
inc
inc
data16
xor
test
mov
sahf
sbb
sahf
mov
cmps
daa
cdq
sbb
xchg
test
xor
shl
es
(bad)
jns
pop
sti
add
mov
jmp
or
or
jae
add
(bad)
sbb
push
push
or
mov
ins
pop
frstor
ins
loopne
lea
mov
jl
mov
push
jp
xor
add
out
pop
repz
aam
pop
pop
mov
addr16
retf
mov
push
std
icebp
inc
ss
test
addr16
mov
inc
lock
mov
push
jnp
popa
lahf
sti
jno
int
mov
mov
(bad)
sti
in
inc
fstp
(bad)
call
imul
cld
sar
stos
sub
and
xor
push
nop
xchg
mov
adc
das
xor
mov
lods
retf
mov
out
dec
out
sbb
addr16
pushf
fcom
push
or
scas
movs
xor
pop
adc
cs
jns
mov
pop
jae
out
push
iret
pop
jmp
std
popf
ret
cdq
jp
push
mov
loopne
scas
mov
dec
adc
mov
aam
xchg
mov
inc
(bad)
fstp
sbb
sub
or
sub
and
jns
bound
scas
dec
push
and
clc
aas
mov
push
hlt
dec
mov
mov
arpl
dec
mov
leave
pop
test
pop
(bad)
leave
jp
(bad)
ins
outs
inc
(bad)
pop
movs
outs
stc
retf
std
lock
in
test
inc
out
mov
mov
lds
jge
clc
push
xchg
add
or
mov
mov
sub
push
cmps
mov
fdiv
mov
and
pop
sub
in
retf
call
cli
test
mov
pop
xchg
dec
mov
loope
imul
fistp
xchg
cmc
clc
ins
jno
clc
jnp
jmp
sub
mov
inc
cmp
jo
or
ret
mov
movs
mov
adc
mov
cmc
(bad)
in
jecxz
xor
daa
mov
and
idiv
aad
clc
aas
push
sbb
cld
imul
imul
enter
out
stos
add
out
push
push
cmp
adc
sbb
adc
or
inc
arpl
imul
scas
add
ins
jns
scas
sbb
cdq
xchg
xchg
shl
dec
sbb
neg
out
in
dec
inc
push
lea
xor
pop
daa
sti
jmp
es
and
cld
sub
shr
dec
pop
scas
fbld
push
es
lods
les
out
imul
fidivr
fsubrp
dec
pop
into
xchg
mov
mov
dec
jae
xchg
jb
adc
rcl
push
add
fcom
push
mov
cmp
push
fisubr
push
xor
mov
(bad)
push
xlat
ret
and
enter
movs
lahf
xchg
imul
pop
test
bound
pusha
add
sbb
add
adc
xchg
push
sub
mov
fadd
sbb
inc
xor
mov
loop
sub
push
xor
add
xor
or
push
sbb
jecxz
inc
pusha
xchg
mov
cli
stos
rcr
mov
aam
xchg
cmc
rol
sub
pop
pop
sahf
aaa
and
mov
mov
out
imul
cmp
jge
js
icebp
mov
gs
(bad)
icebp
or
fucom
rcr
cmc
fs
nop
push
dec
dec
push
syscall
inc
js
sbb
ins
mov
jnp
dec
inc
jmp
pop
in
shl
pop
inc
dec
daa
xor
mov
cld
or
mov
aas
icebp
repz
xchg
sbb
(bad)
mov
sub
mov
adc
xchg
hlt
adc
mov
bound
inc
mov
icebp
outs
outs
mov
push
sub
lods
xor
add
xor
cmp
jp
xor
pop
xchg
pop
fucom
in
push
dec
add
and
loope
ret
test
sub
pop
sbb
cmps
je
mov
arpl
sbb
pop
leave
jl
push
dec
push
scas
add
cmp
adc
lods
sbb
imul
add
mov
xchg
stos
dec
vmovsldup
jbe
loop
mov
jecxz
hlt
and
out
cmp
enter
gs
xlat
jb
test
mov
fidivr
rcl
sub
loopne
xchg
mov
inc
inc
xchg
mov
mov
div
js
loope
movs
mov
jo
pop
jns
data16
in
sub
xchg
loope
cld
(bad)
pop
scas
sbb
imul
xchg
xchg
xchg
jecxz
adc
call
or
cmp
and
imul
inc
ins
and
add
(bad)
shl
daa
mov
imul
mov
and
cmp
mov
cmps
ds
pop
(bad)
je
loope
(bad)
dec
or
mov
adc
pop
test
imul
inc
fidiv
call
cmps
repnz
xor
xchg
aad
aam
adc
pop
jns
xor
in
xchg
cmc
lock
std
data16
add
outs
dec
pause
or
pop
shl
sbb
adc
sbb
outs
mov
mov
es
mov
and
cwde
jmp
lea
ret
adc
ret
fs
jecxz
mov
mov
and
(bad)
(bad)
jg
dec
mov
ds
mov
rol
sbb
xor
jg
xor
pop
add
xchg
pop
xchg
xor
cmp
fnstenv
ins
stc
cdq
add
jb
push
out
adc
pop
ss
mov
sub
inc
int
mov
or
cwde
nop
xchg
xchg
and
scas
mov
mov
js
daa
int
dec
or
xchg
aam
mov
iret
test
pop
fadd
out
adc
arpl
imul
fs
mov
inc
out
lahf
jno
push
sbb
mov
imul
pushf
or
fist
js
fsub
cmp
(bad)
cld
scas
jmp
pop
mov
(bad)
adc
std
pop
mov
jns
and
sar
cmp
das
mov
test
or
adc
rol
iret
sti
aam
xlat
(bad)
lods
pusha
pop
cmp
(bad)
dec
test
inc
fstp
jmp
push
call
mov
push
lock
in
xor
jne
rol
aad
(bad)
movs
mov
push
outs
dec
pop
dec
(bad)
xlat
mov
push
and
inc
shl
inc
pop
je
leave
push
fwait
push
addr16
daa
mov
adc
mov
shrd
gs
mov
push
mov
lods
aaa
push
(bad)
mov
mov
mov
sbb
push
test
push
push
pop
lods
add
std
sub
std
enter
xchg
sbb
(bad)
mov
and
cwde
cmps
mov
sub
js
out
jg
push
lds
sbb
movs
xchg
add
push
push
fistp
std
int3
outs
fs
rcl
mov
sbb
jl
call
mov
mov
(bad)
stc
pop
xchg
into
inc
dec
js
xchg
ss
dec
xor
and
push
mov
sbb
mov
(bad)
outs
lock
aas
loop
imul
pop
inc
push
into
pop
icebp
and
xor
aad
or
xchg
stos
jl
push
test
lock
(bad)
dec
cmp
adc
xchg
lods
xor
mov
hlt
or
call
out
xchg
hlt
dec
call
jmp
mov
cld
sti
sub
mov
shr
or
ret
pop
mov
aad
fisttp
push
int
jo
pop
inc
data16
cmp
jb
in
sbb
jnp
add
jmp
stc
push
push
push
push
push
add
add
lods
inc
int
rcl
loop
xor
cmp
xchg
pop
mov
mov
xchg
fstp
xchg
popa
scas
ret
pop
add
mov
shr
add
cmps
loopne
cmp
dec
cmp
lea
neg
cmp
and
rol
adc
pop
add
xor
push
dec
and
dec
out
pushf
sub
xor
cmp
lahf
(bad)
mov
push
inc
inc
jmp
sar
nop
pop
or
gs
in
mov
cmp
cmp
mov
aas
jnp
imul
and
iret
cmp
in
sti
ins
cwde
push
jge
test
fisubr
mov
jno
adc
(bad)
inc
cmp
push
fistp
xchg
and
shr
hlt
jecxz
sub
scas
add
aam
add
ds
stos
test
dec
sbb
and
dec
lds
es
das
ror
nop
clc
add
push
inc
cmps
scas
movs
ins
jge
dec
ficomp
iret
dec
inc
adc
leave
not
mov
mov
bound
cs
mov
push
aas
sar
jae
xor
xlat
xchg
sub
sar
shr
lock
fsub
inc
push
in
in
out
add
jno
movs
cmps
add
mov
lahf
imul
inc
mov
mov
push
jp
or
addr16
loope
mov
dec
mov
(bad)
xchg
cwde
ret
shl
rcl
add
ss
xchg
dec
pop
sub
jno
lods
rep
bound
jmp
fwait
jne
stos
jb
dec
mov
cmp
dec
mov
pop
pop
call
mov
das
sbb
sub
imul
retf
pusha
adc
sub
out
pop
stos
sbb
add
xchg
ins
and
mov
dec
jmp
int3
fs
push
call
dec
mov
retf
sti
and
outs
sub
adc
cli
sbb
aam
xor
push
xor
adc
cmp
test
push
clc
mov
scas
iret
imul
fdiv
daa
adc
shl
lods
pushf
sbb
movs
lock
mov
jne
adc
mov
jbe
sbb
sub
faddp
movs
gs
in
xchg
out
mov
test
jns
js
(bad)
cld
mov
dec
repz
and
pop
(bad)
cmp
rcr
sub
call
lods
sbb
out
xchg
push
dec
pop
inc
(bad)
fisub
int3
popa
sub
fisub
rep
jo
aad
cld
lahf
cwde
fcmovbe
pop
adc
in
or
(bad)
test
sahf
stc
(bad)
lods
cli
xor
cli
popa
fmulp
adc
(bad)
div
xor
push
mov
xlat
mov
pop
out
jno
pop
inc
xor
pop
or
mov
mov
xchg
sub
popf
xor
cmp
mov
push
pop
jle
enter
cmp
aaa
bound
jl
mov
mov
pop
mov
addr16
mov
cmp
inc
jnp
jge
retf
fsubr
popf
scas
dec
or
and
xor
jp
adc
dec
xor
add
xor
mov
or
outs
xor
ror
jle
push
repnz
dec
dec
add
xchg
sbb
pop
dec
out
mov
fs
and
das
test
repz
into
out
push
aam
add
(bad)
imul
fxch
xor
cmp
push
mov
or
les
adc
int
retf
xchg
mov
rcl
out
jp
jbe
cmc
sbb
dec
scas
xchg
jp
sub
into
pop
movs
clc
loopne
and
fld
mov
hlt
jbe
cmp
fwait
(bad)
outs
sahf
inc
es
ret
test
test
dec
(bad)
mul
fadd
je
push
fsubr
cmc
out
mov
mov
nop
call
or
xchg
or
mov
pop
dec
jl
mov
pop
leave
jl
lods
mov
sub
dec
jle
ss
xor
xor
aas
movs
jl
ficom
popa
mov
imul
(bad)
nop
mov
jno
mov
or
call
dec
ror
(bad)
sub
push
(bad)
xor
loop
cmc
jmp
sbb
mov
inc
mov
sbb
adc
jb
and
fnstenv
inc
dec
das
repnz
mov
add
rcr
(bad)
loop
in
mov
pop
ds
mov
dec
mov
inc
int
mov
mov
fadd
(bad)
idiv
scas
test
pop
ficom
scas
(bad)
fld
sub
aam
xchg
or
dec
ret
inc
mov
sti
xchg
mov
arpl
cmps
arpl
pop
push
and
rcr
dec
add
mov
adc
fild
repz
push
lock
inc
cli
cmp
ret
add
ja
inc
inc
and
dec
cmp
push
stc
and
(bad)
stos
pop
and
shl
xor
push
jmp
push
dec
sub
sbb
loop
inc
xor
stc
fidivr
pushf
adc
mov
or
loopne
arpl
sub
ins
jo
mov
pop
xor
je
or
es
mov
loopne
gs
dec
pusha
cld
mov
or
add
cmp
dec
mov
fs
je
dec
mov
(bad)
push
cs
xor
ins
jg
sub
cmp
rcr
jmp
ss
les
test
dec
add
inc
dec
(bad)
xor
scas
scas
mov
mov
shr
ins
xchg
xchg
sub
mov
test
or
fld
aaa
push
sub
rcr
arpl
nop
ret
fiadd
or
fisttp
repz
movs
and
jmp
leave
(bad)
in
movs
inc
dec
aas
(bad)
out
adc
jmp
jecxz
xchg
movs
cmp
jp
jg
sbb
add
jecxz
sub
xchg
xor
sbb
popf
jle
inc
sub
jge
xor
sahf
dec
imul
lods
jae
(bad)
sahf
into
sbb
push
cmps
sbb
icebp
dec
dec
add
add
jae
hlt
jmp
xchg
inc
fbstp
xor
iret
push
fs
push
inc
fld
xchg
js
ficom
jb
mov
shl
sbb
and
mov
mov
mov
leave
cmp
bnd
stos
mov
mov
loope
push
cld
ss
mov
sahf
jg
cmps
jno
aam
xlat
out
xor
aam
sub
aam
inc
cmp
call
add
inc
iret
add
inc
dec
mov
sub
stc
sub
cdq
(bad)
jg
rol
mov
mov
call
and
scas
loope
or
gs
mul
test
jno
sub
adc
lods
scas
(bad)
push
shl
sti
jg
test
push
out
or
sub
pusha
xor
push
add
xchg
ret
dec
iret
jae
fs
mov
inc
fstp
mov
sbb
jmp
mul
neg
leave
dec
mov
mul
jge
mov
test
test
xor
xchg
adc
push
push
mov
call
es
cmp
ret
sub
repnz
scas
push
cmps
shr
pop
sbb
inc
stos
push
mov
adc
cmp
(bad)
jge
inc
xchg
loope
jecxz
stc
sub
sbb
rol
jnp
push
push
sahf
mov
nop
adc
cmp
adc
stos
and
cmp
fld
or
and
mov
in
jge
mov
mov
push
es
mov
(bad)
(bad)
ror
clc
mul
pop
sub
adc
add
push
push
fisubr
sub
and
mov
rol
jp
ret
mov
ins
push
(bad)
movs
adc
imul
popf
call
ss
sahf
in
xchg
pop
add
xchg
mov
inc
frstor
and
loopne
xchg
push
fisubr
retf
rcl
fistp
mov
pop
dec
aaa
js
inc
(bad)
mov
(bad)
push
pop
test
mov
push
shr
test
cmps
test
enter
movs
xor
loope
mov
in
inc
cmc
mov
cmps
cmp
test
outs
or
add
sbb
cmp
mov
cmp
arpl
xor
dec
dec
ja
mov
out
add
dec
repz
dec
cmp
cmps
nop
lds
sub
scas
xlat
jge
(bad)
dec
test
in
fcom
lock
mov
pop
mov
pop
dec
stos
fidiv
(bad)
jp
cdq
jecxz
mov
jns
jmp
leave
xor
inc
movs
mov
imul
fnsave
jne
push
sub
pop
dec
call
or
jmp
or
rol
dec
jge
sbb
push
inc
lods
std
jns
mov
jg
hlt
in
ins
in
mov
cwde
iret
and
(bad)
ret
dec
cdq
cli
imul
movs
push
push
bound
mov
pop
std
mov
(bad)
xor
out
addr16
adc
and
imul
loop
test
dec
jle
mov
gs
push
fisubr
loopne
imul
mov
mov
aaa
(bad)
fwait
aam
loopne
dec
adc
push
add
dec
adc
and
push
out
(bad)
mov
(bad)
jl
add
(bad)
mov
shl
retf
cs
push
or
jbe
sbb
mov
sbb
int3
and
xor
mov
lock
rcl
push
ja
add
or
test
ja
mov
pop
pop
mov
pop
cmp
pop
mov
in
cs
sahf
sbb
sar
not
xor
xchg
cmp
mov
adc
jo
xchg
mov
data16
sti
repz
je
jg
and
dec
mov
jle
jne
xor
(bad)
fsubr
mov
dec
push
mov
int
ins
jo
int
cmp
lock
inc
adc
mov
out
or
out
mov
into
dec
clc
bound
stos
loopne
lea
mov
std
push
jg
fs
retf
inc
fimul
push
(bad)
std
xor
(bad)
push
dec
repnz
adc
jmp
div
mov
jae
mov
sbb
jnp
add
fld
not
test
adc
repnz
and
fdiv
out
std
dec
test
mov
mov
js
sbb
push
mov
mov
fmul
or
popf
fsub
mov
call
push
inc
push
mov
in
fucomp
idiv
pop
mov
xor
push
xchg
and
pop
and
loope
dec
fcmovnb
or
cmp
push
rol
mov
(bad)
inc
imul
cmp
pmaxub
fucomip
fs
jmp
in
mov
or
fild
repz
out
imul
mov
enter
inc
xchg
push
dec
inc
push
rol
xchg
dec
bound
(bad)
das
ror
jp
sbb
push
or
rol
jge
xchg
mov
arpl
and
lods
xchg
nop
jo
fiadd
ja
inc
mov
scas
mov
fild
xchg
pop
sbb
aad
sbb
lods
pushf
out
dec
add
ret
out
dec
shl
pop
sbb
into
jnp
pop
adc
xor
movs
aaa
cmp
push
enter
addr16
in
or
(bad)
outs
jae
sub
mov
jae
cmps
push
ds
fsubr
mov
mov
add
popf
lods
repnz
pop
mov
ins
pop
addr16
stc
push
push
jg
ror
test
sub
shl
out
ja
xor
mov
dec
jp
cmp
test
inc
fld
out
push
mul
in
jmp
dec
mov
call
cmps
mov
mov
pushf
add
pop
xchg
sub
cmp
sti
rol
aam
pop
pop
pop
cmp
lods
xor
or
mov
pop
or
cmp
jb
out
fcom
or
xlat
mov
jne
inc
xor
sbb
dec
pop
sub
mov
cmp
stos
push
fisttp
and
cmp
xor
leave
mov
jp
inc
dec
mov
and
cmps
sahf
sub
retf
cli
mov
xchg
loope
jno
sahf
imul
jb
cmp
and
in
mov
or
iret
inc
bound
inc
test
push
xchg
loop
bound
fcmovu
mov
(bad)
imul
je
inc
sahf
adc
les
pop
lods
movs
imul
or
(bad)
jo
mov
dec
clc
adc
add
int
adc
iret
sbb
sub
ficomp
idiv
retf
push
sub
ss
xchg
jno
mov
xchg
stos
jg
jo
mov
push
and
and
stc
sbb
mov
xlat
sti
lock
out
mov
mov
or
aas
fsub
xor
mov
call
sar
mov
cwde
jmp
punpcklwd
jecxz
jecxz
aam
jb
(bad)
jecxz
out
test
mov
clc
outs
in
xor
div
jmp
lahf
call
lock
(bad)
lods
adc
push
stc
scas
sbb
fbld
ins
push
pop
loop
fisttp
mov
xchg
sbb
mov
add
cmp
cmp
inc
mov
pop
and
mov
pusha
xchg
test
adc
ret
gs
jl
pushf
out
inc
add
lock
pop
pusha
mov
push
aaa
push
cmp
push
push
pop
(bad)
jle
ss
je
(bad)
nop
adc
cwde
ret
fld
add
sub
shl
stos
add
cmp
and
std
outs
ror
data16
inc
or
mov
push
add
iret
pop
lock
inc
enter
and
adc
xchg
pop
xor
push
ins
(bad)
iret
icebp
jno
push
or
cs
and
dec
jg
lea
test
test
adc
dec
lods
dec
jecxz
or
test
int3
test
or
les
fs
jb
cmc
les
(bad)
jns
rol
cdq
fadd
xor
sbb
mov
inc
lds
enter
or
ins
jns
dec
pop
xchg
xchg
cli
inc
and
cmp
shr
or
leave
jmp
mov
aaa
cmp
xchg
adc
sub
adc
pop
sub
aaa
das
jbe
retf
jb
in
and
adc
jne
jge
mov
and
mov
xchg
into
nop
inc
pop
pop
sub
frstor
sbb
(bad)
push
ffreep
add
neg
(bad)
pop
nop
bound
or
cmp
push
lds
aad
dec
cld
out
jmp
rol
push
adc
cmp
sbb
mov
sub
lock
ss
xchg
adc
jns
cmps
mov
jecxz
aad
not
mov
sahf
fistp
sbb
mov
loop
(bad)
outs
cmp
pushf
xchg
add
add
out
xchg
dec
fs
xlat
test
dec
sub
aam
(bad)
sbb
xor
mov
pop
cld
outs
fs
shr
push
cmps
in
sub
sub
push
fs
cmps
ficom
imul
loopne
or
dec
imul
mov
mov
or
sbb
stos
xor
push
out
lahf
add
push
cld
mov
pop
clc
mov
cmps
mov
or
fdivp
lods
xor
pop
add
js
and
(bad)
mov
iret
inc
outs
jl
mov
or
or
adc
addr16
shl
(bad)
pop
fisub
repnz
ror
jo
cmp
cmp
test
jp
daa
icebp
outs
and
iret
and
stos
les
into
fnstenv
xor
add
xchg
aam
pusha
xor
cmps
fld
pop
out
cs
cwde
lods
mov
test
mov
xor
(bad)
pop
or
int
inc
rcr
ss
(bad)
std
or
and
je
mov
in
rcr
add
push
jge
fld
sbb
and
daa
ss
test
shl
inc
mov
xchg
sub
sub
das
push
pop
arpl
xchg
clc
out
clc
enter
cmp
add
xchg
cmp
cmc
daa
inc
ins
sbb
fsubr
sti
and
pop
idiv
test
out
add
dec
cld
fwait
jle
adc
jnp
cli
add
mov
and
das
retf
cs
loope
cmp
sahf
mov
pop
sbb
and
sub
mov
mov
aas
adc
ret
scas
push
cmp
scas
scas
lods
inc
sub
mov
adc
xor
pop
pop
xor
push
gs
dec
(bad)
lea
adc
in
mov
retf
pushf
movs
mov
loopne
ja
add
mov
pop
xchg
rol
fistp
sub
in
mov
xor
pop
push
pop
jnp
idiv
xchg
adc
into
int3
scas
push
mov
xchg
mov
xor
push
or
mov
ja
imul
adc
popa
mov
dec
in
(bad)
xor
mov
dec
inc
jmp
stos
aad
sbb
push
das
and
push
sbb
push
sbb
fnstcw
outs
or
inc
mov
or
mov
ins
push
adc
repnz
ins
int
scas
ficomp
inc
xchg
dec
daa
xchg
xchg
dec
xchg
jge
dec
pop
dec
xor
sub
bound
stos
outs
leave
adc
test
pop
jo
push
cmp
sub
inc
and
adc
inc
aam
adc
fcmove
ja
retf
arpl
mov
adc
push
lea
sbb
jne
jl
fs
je
sub
shl
out
cmps
jo
outs
fnstcw
(bad)
pop
push
mov
bound
shr
add
imul
stos
(bad)
mov
xchg
addr16
sub
push
or
stc
popf
push
sbb
rcl
outs
fucomi
jb
dec
pop
cmp
sub
or
xor
(bad)
repnz
lods
(bad)
rcl
or
push
push
movs
jmp
cmp
cs
add
aad
stos
bound
or
daa
mov
cld
test
mov
jne
add
shl
(bad)
jb
mov
shl
pusha
jp
cmp
pop
imul
das
xchg
adc
neg
pop
push
pop
iret
aas
sub
js
inc
xor
lods
push
and
dec
ins
inc
mov
mov
pop
jmp
scas
add
push
dec
adc
movs
ret
xchg
out
mov
pop
and
pop
nop
iret
add
mov
mov
jmp
mov
sub
dec
outs
jbe
dec
call
(bad)
shl
leave
into
sub
stc
sub
or
cli
xchg
pop
js
add
div
repz
xchg
add
out
outs
es
and
pop
or
and
cld
xor
cmp
out
in
and
push
repnz
stos
push
adc
cmc
mov
sub
or
sbb
rol
pusha
imul
jecxz
push
pop
xchg
sar
sub
mov
cwde
out
cld
mov
fld
in
(bad)
jo
sbb
mov
mov
jmp
xchg
sub
loope
pop
or
(bad)
and
popa
jbe
out
scas
(bad)
psubusw
mov
daa
(bad)
xor
xchg
mov
outs
push
adc
cmp
jge
test
cmps
jp
mov
mov
adc
or
icebp
test
mov
adc
adc
adc
jmp
leave
fnstcw
jmp
(bad)
mov
adc
enter
sbb
cmp
push
mov
mov
and
sub
sub
rcl
pushf
pop
sub
pop
jno
shl
jnp
(bad)
jecxz
cmp
pop
(bad)
out
or
dec
pop
jno
push
push
jb
jne
rcr
shl
dec
psubw
and
xor
and
push
xor
mov
mov
fs
inc
and
inc
jmp
hlt
movs
repz
xlat
add
into
outs
adc
jo
jbe
pop
or
push
add
repz
arpl
fcom
mov
in
adc
sbb
xor
mov
sbb
rol
xlat
mov
xchg
cmps
divps
stos
adc
ins
inc
out
cmp
inc
cmps
jno
xchg
dec
push
xor
mov
pushf
mov
mov
ret
ins
dec
dec
(bad)
clc
mov
sbb
sub
push
dec
push
jae
test
mov
dec
mov
pop
fwait
in
lds
xor
aaa
sbb
xchg
sub
xor
lds
xchg
jbe
cmps
cmp
loop
nop
cmps
and
iret
cmp
call
(bad)
jl
push
popf
clc
retf
add
in
sbb
stc
mov
jno
mov
ror
or
sub
into
sub
(bad)
sbb
iret
jno
mov
push
mov
fs
push
test
in
xchg
add
(bad)
pop
cmp
and
add
push
sub
xchg
mov
repnz
xor
sbb
fstp
inc
jecxz
add
mov
hlt
hlt
xchg
lods
popa
arpl
psrld
inc
push
data16
xchg
add
rcr
imul
xchg
sub
jne
scas
mov
inc
aas
iret
not
rcr
popa
and
mov
sbb
mov
daa
stos
push
out
lahf
in
xchg
push
inc
mov
mov
outs
xchg
push
mov
js
cmp
sub
dec
xchg
mov
pop
mov
and
test
test
lods
imul
sar
inc
xchg
xor
fld1
call
cdq
adc
mov
add
mov
repz
xor
adc
push
dec
out
mov
adc
or
add
xlat
sar
sti
or
loopne
es
fld
in
ds
pop
or
add
rol
test
sub
fdiv
in
xchg
mov
stc
mov
in
sar
pop
pop
mov
cmp
shr
pop
sub
inc
out
pop
stos
(bad)
cmp
int
aaa
inc
stc
imul
xlat
push
lods
in
adc
jbe
mov
cdq
mov
lahf
jae
imul
adc
fnstsw
xchg
bound
dec
push
pop
xor
dec
mov
loop
push
cmp
not
loop
call
hlt
xor
bound
or
mov
mov
pushf
sub
sbb
sub
lods
jne
cmp
push
clc
loopne
das
jmp
test
push
pop
dec
iret
int
xor
scas
xlat
fmul
loop
cwde
dec
ficom
mov
ret
inc
mov
push
call
dec
pop
and
fstp
xchg
neg
bound
cwde
out
pop
pop
aas
adc
icebp
mov
xchg
retf
fld
scas
(bad)
fxch
mov
adc
push
mov
lahf
loopne
xor
daa
xor
stc
addr16
ret
popf
(bad)
in
pop
add
(bad)
aam
retf
(bad)
cwde
outs
popf
jl
mov
sbb
push
enter
adc
sbb
jl
or
leave
xchg
xchg
out
push
(bad)
call
xchg
jno
es
mov
xchg
lods
data16
lds
fadd
mov
sbb
inc
popf
ret
sahf
cmp
mov
cmps
nop
lods
outs
dec
jb
aaa
sbb
push
jb
inc
cmp
or
sub
sbb
jp
gs
jecxz
addr16
jae
mov
adc
xchg
fldcw
mov
bound
rol
or
mov
and
lods
mov
sub
fistp
cdq
int
xchg
fidiv
mov
inc
pop
lods
outs
nop
dec
out
fwait
pushf
push
rol
mov
cld
mov
shl
push
das
popa
cmp
xchg
adc
fs
adc
sar
cmp
movs
xchg
pop
cli
jno
push
mov
int
popa
jb
mov
cmp
les
(bad)
cld
sub
cdq
xor
test
xchg
adc
je
stc
lds
call
pop
das
scas
sbb
pop
mov
xlat
leave
dec
jecxz
mov
mov
jbe
into
in
cmc
aas
stc
xor
push
mov
icebp
ja
js
jge
jmp
mov
stc
cli
jecxz
jmp
pushf
jbe
(bad)
cmp
movs
loopne
pop
shr
test
mov
loop
sbb
pushf
mov
lea
cmp
push
popa
mov
retf
xchg
sbb
dec
daa
inc
sbb
fwait
cmps
fsubr
fiadd
push
jo
or
(bad)
mov
pop
push
retf
jnp
dec
aam
jb
outs
inc
das
gs
push
hlt
add
add
mov
and
jmp
fdiv
mov
in
push
xchg
ficomp
aad
xor
stos
inc
ss
lods
fwait
mov
ret
popa
adc
fmul
scas
push
je
inc
mov
test
xchg
add
pop
mov
add
movs
arpl
xchg
adc
inc
call
and
test
int3
mov
rcr
call
and
sar
into
mov
cmp
push
mov
in
icebp
cmp
movs
scas
cmps
jo
cmp
stc
xchg
adc
pusha
es
push
rcl
fnsave
test
imul
in
scas
mov
fsubr
jmp
or
cs
test
xor
fld
push
cdq
or
push
and
jp
in
daa
hlt
iret
popf
fst
mov
ret
mov
test
das
idiv
mov
adc
dec
push
push
sbb
cld
mov
lods
mov
mov
movs
sbb
inc
sub
rcr
or
and
pop
add
or
fcmovnbe
test
lds
loope
iret
xor
shl
leave
add
cmc
lea
sub
xor
jb
jns
push
jecxz
sbb
jno
pop
pop
div
loop
aaa
es
arpl
clc
and
fimul
dec
dec
mov
mov
(bad)
shl
js
ret
xchg
es
inc
mov
imul
pop
inc
jae
xchg
icebp
push
scas
mov
sbb
push
loop
sub
adc
fisubr
add
or
jne
rcl
(bad)
push
iret
and
test
into
mov
cli
push
ja
xchg
fcomp
hlt
xor
bound
out
data16
sub
dec
std
stos
aam
jle
mov
sahf
shl
jmp
scas
bound
aad
sub
fs
jbe
jns
aam
mov
popa
pop
fnsave
ins
and
pop
jo
mov
push
adc
xchg
mov
int3
add
jl
adc
es
inc
lods
call
cwde
jmp
dec
movs
iret
jl
cmc
inc
inc
push
in
add
jmp
pop
xchg
inc
scas
push
and
adc
stos
lods
in
mov
pusha
retf
inc
ss
adc
xchg
test
add
inc
test
loopne
shr
(bad)
arpl
call
(bad)
xchg
loop
clc
lods
out
push
lea
call
push
jae
in
sbb
mov
and
enter
pop
in
inc
leave
stos
add
jb
adc
jge
idiv
in
cmp
out
or
std
sti
jae
add
out
repnz
test
aam
rol
ds
mov
call
jge
aaa
add
mov
scas
sar
sub
and
(bad)
sbb
xor
cdq
arpl
cmp
fs
fiadd
aaa
call
sub
stc
jno
cmp
add
stc
stc
popf
sbb
fwait
jecxz
mov
inc
xor
retf
xor
sub
fmul
jmp
shr
dec
clc
jae
outs
adc
cdq
dec
add
sub
data16
div
pop
fmul
in
add
inc
in
inc
add
sbb
mov
fistp
or
lahf
cmps
xor
das
imul
jne
xchg
mov
and
fisub
fimul
and
jb
mov
sub
jg
jo
fbld
ins
sub
cdq
sub
clc
cmp
add
pop
xor
inc
fild
fwait
sub
adc
xchg
mov
mov
mov
aas
xabort
sbb
mov
cdq
and
(bad)
ficomp
mov
adc
add
mov
(bad)
pusha
mov
jg
shl
push
mov
or
cmp
dec
pop
adc
dec
mov
jmp
inc
cmps
repz
(bad)
push
stc
aas
daa
jmp
push
icebp
aaa
mov
popf
mov
cwde
cmp
and
out
pop
sub
jo
jle
xor
(bad)
push
icebp
jns
(bad)
xor
ss
lds
mov
dec
and
(bad)
dec
add
xchg
push
ja
inc
add
and
or
push
leave
call
fadd
div
sbb
push
adc
mov
xchg
clc
pop
data16
and
jl
jle
ret
je
inc
xchg
xchg
push
in
mov
call
out
mov
addr16
outs
test
scas
or
pop
xor
sub
idiv
out
inc
mov
push
sub
ds
sub
sbb
popf
or
scas
lds
int
test
shl
sahf
adc
leave
leave
jg
dec
push
not
stos
popf
jg
sahf
mov
or
loopne
add
in
adc
fs
dec
mov
enter
jl
lahf
fld1
and
retf
pop
sbb
push
cmp
les
cld
mov
or
fchs
shl
fisubr
mov
inc
cmp
adc
sar
add
lods
cmps
xlat
cmp
push
mov
repz
ins
mov
(bad)
cmps
(bad)
jne
int3
(bad)
jo
movs
cmp
pop
addr16
ret
cmps
jp
lods
xor
or
fld
imul
sub
cmp
mov
stc
imul
mov
ror
ins
mov
repnz
imul
and
mov
inc
shl
leave
cmp
mov
imul
(bad)
icebp
sar
inc
iret
push
cld
push
fcom
add
sub
cmps
jl
inc
cwde
xor
fcomi
movs
add
ss
imul
mul
sbb
dec
lahf
inc
inc
jno
inc
and
pop
js
ja
or
jmp
mov
pusha
fisub
push
lods
pop
add
scas
mov
inc
ins
jae
xchg
pop
jge
xchg
mov
inc
add
mov
cdq
loope
mov
and
inc
daa
push
mov
adc
push
dec
ja
adc
mov
jmp
add
sbb
ss
pop
push
or
jp
mov
ficomp
xrelease
nop
cld
stos
xor
sti
pop
addr16
(bad)
xchg
aam
push
mov
push
mov
xchg
movs
lods
(bad)
mov
add
cmp
xor
jno
fistp
and
dec
aaa
jmp
div
dec
mov
xor
mov
sub
aas
adc
stc
and
add
mov
cmp
jge
dec
mov
push
ret
mov
xchg
hlt
jno
xchg
loopne
ins
ins
arpl
jae
xchg
sbb
push
aaa
(bad)
xor
iret
dec
xchg
dec
fisubr
cmc
data16
pop
in
lock
add
or
or
xor
movs
sbb
sub
call
pushf
lods
das
sbb
cmp
(bad)
fmul
add
jmp
cwde
stos
mov
mov
cwde
xor
add
out
ss
or
movs
push
test
pusha
test
ds
jns
rcr
pop
cld
jp
xor
stos
sbb
mov
sub
xchg
out
jmp
add
push
rcl
cmp
pop
mov
or
push
jecxz
cmp
iret
pushf
xchg
jb
jp
cmps
mov
fcmove
or
mov
jp
std
sbb
jle
xchg
mov
sbb
jg
add
pop
and
outs
int
retf
or
sub
push
dec
pop
push
inc
enter
sbb
push
retf
add
pop
les
(bad)
mov
adc
inc
cmps
ror
jg
ret
add
inc
mov
mov
imul
popa
xchg
mov
lods
jmp
pop
in
mov
arpl
shl
(bad)
int3
fwait
mov
xchg
push
mov
cmp
scas
lock
or
xchg
outs
xor
sub
sbb
test
push
push
jmp
out
outs
push
dec
rol
rcl
dec
sub
mov
mov
inc
or
and
or
add
retf
jae
jg
or
into
xor
add
ror
inc
sub
jg
dec
stos
scas
or
popa
pop
or
jne
xchg
pop
int3
out
stc
jmp
test
sbb
loope
add
inc
or
sbb
ficom
cdq
xchg
call
pop
cdq
sbb
out
push
xlat
cmp
xchg
sbb
add
inc
or
mov
out
cmp
stos
loopne
dec
adc
jb
sub
pop
dec
retf
inc
imul
stos
cli
xchg
aam
loope
adc
jb
popf
add
test
xor
(bad)
and
into
and
outs
push
jle
ja
cmc
out
xchg
add
sbb
adc
push
in
xchg
mov
jne
lods
dec
add
push
jmp
(bad)
push
xor
cmp
inc
xor
iret
pushf
sub
dec
enter
lock
sar
fild
jnp
add
sahf
ror
loop
cmp
gs
jg
mov
test
sbb
mov
mov
aaa
ins
adc
push
movs
xchg
shl
dec
mov
rcr
mov
ins
(bad)
mov
jecxz
jp
jbe
in
retf
xchg
ret
les
cmp
dec
add
add
xor
(bad)
out
sub
mov
and
xchg
movs
rcr
out
mov
call
and
or
jecxz
pop
mov
js
sub
loop
lds
push
ins
dec
jo
inc
frstor
or
mov
mov
mov
mov
pop
mul
push
imul
xchg
test
sub
pop
aaa
fcom
scas
push
jecxz
push
cld
ins
icebp
sbb
add
mov
cli
and
mov
outs
xlat
ror
scas
jns
out
in
and
and
mov
xchg
sbb
cmps
lock
je
inc
xchg
ret
ror
in
mov
xor
push
gs
lods
mov
fidivr
sub
jl
mov
dec
outs
sub
jae
mov
mov
adc
or
add
xchg
and
(bad)
push
pushf
pop
dec
data16
cwde
cli
jmp
stos
push
jbe
std
jae
inc
je
cmp
pop
fld
jle
jecxz
add
pusha
jl
mov
inc
fisub
out
(bad)
xor
jae
shl
jo
fmul
shl
imul
mov
out
jb
push
fdivr
call
jge
xchg
xor
lods
xlat
aad
mov
mov
xlat
cld
jmp
out
jb
test
stc
mov
pop
(bad)
pop
pop
lds
test
xor
push
shr
adc
div
sti
cld
imul
mov
mov
bound
mov
mov
xor
pop
mov
arpl
and
inc
xchg
cmps
out
int
leave
inc
ret
cmp
xchg
jns
pop
int
and
push
inc
and
jg
adc
(bad)
es
jno
inc
jnp
stc
inc
adc
mov
sub
cmps
or
xor
cmps
and
sbb
mov
xchg
pop
or
adc
add
clc
sbb
jmp
and
fstp
and
lods
repz
mov
jbe
retf
cs
push
dec
or
push
pop
pop
push
and
frstor
in
dec
fsubr
lods
call
push
(bad)
dec
or
push
lea
outs
rol
add
pop
cmp
and
mov
sbb
or
test
jne
inc
jb
push
cs
mov
ins
lods
sub
fidiv
pop
dec
dec
iret
jmp
push
out
dec
jmp
and
(bad)
xchg
ficom
cwde
sbb
in
fidiv
mov
mov
inc
jle
(bad)
retf
jmp
add
adc
sub
or
mov
xchg
dec
pop
add
mov
add
inc
stc
fcomp
imul
call
stc
jns
aad
sbb
rcr
out
gs
mov
inc
retf
je
mov
and
add
arpl
mov
les
call
movs
sub
test
xor
arpl
rcl
push
push
das
inc
pop
jae
outs
sti
test
jp
pop
mov
mov
push
imul
fidiv
sti
out
jmp
xchg
sbb
movs
pop
retf
mov
inc
pop
inc
mov
lock
jb
jmp
hlt
int3
clc
je
adc
rol
push
sbb
adc
sti
packsswb
repnz
(bad)
pop
jns
leave
call
dec
push
clc
and
push
fild
inc
pop
ficomp
inc
pop
sahf
xor
mov
xor
out
cmp
sbb
push
dec
in
mov
call
xor
push
jg
and
fist
pushf
add
cld
xchg
es
add
sub
mov
cmps
icebp
mov
xchg
test
or
sbb
mov
inc
mov
hlt
mov
or
rol
fistp
sbb
pusha
pop
pop
loopne
stos
sti
or
xor
adc
bound
xlat
xchg
das
xchg
ds
mov
cmc
cmp
cmps
xor
lods
mov
fldln2
mov
and
imul
in
sbb
mov
repz
push
call
xchg
clc
arpl
cmc
xchg
mov
sbb
test
cmp
fwait
dec
and
scas
xchg
mov
or
xor
jbe
aad
dec
jg
imul
sub
dec
popa
jl
adc
mov
cmps
sbb
pop
inc
mov
add
int3
ja
addr16
int3
popa
fisubr
fisubr
into
int3
fstp
mov
aas
loop
popa
jns
pop
scas
test
loop
arpl
hlt
push
cwde
inc
lods
sub
xchg
add
in
test
xor
ja
adc
push
lock
mov
cli
jb
add
sbb
pop
add
ficomp
sub
xchg
xchg
xchg
sbb
mov
sbb
out
or
mov
xor
loopne
call
loope
xchg
or
mov
inc
push
dec
out
jmp
cdq
xor
addr16
mov
pop
addr16
push
ins
cli
ds
inc
push
jb
push
stc
mov
mov
jno
cwde
cmp
or
pop
cmp
adc
ret
enter
inc
cli
fs
rcr
repnz
pop
cdq
jmp
pop
addr16
ffreep
cmps
imul
cmovp
jne
xor
cmp
cmp
retf
(bad)
pop
test
dec
pop
mov
adc
imul
and
lods
cmp
xchg
cmps
dec
nop
leave
mov
mov
mov
lods
fdivr
add
xchg
dec
and
pop
(bad)
jmp
push
arpl
test
aaa
mov
in
xchg
ins
in
js
popa
aad
stc
out
lock
fist
sub
add
pop
aaa
jg
jns
or
out
jl
jns
cwde
cmp
je
jecxz
dec
xchg
imul
sbb
dec
bound
std
jnp
test
popa
div
js
dec
cmp
int
sub
sahf
dec
call
daa
push
cs
add
cs
test
xor
push
xchg
mov
test
(bad)
pop
adc
imul
cs
jge
jl
pop
jmp
ins
mov
jo
lds
aas
or
jmp
dec
mov
jle
fwait
mov
jae
retf
add
test
fdivp
mov
lods
sbb
ret
push
shr
fimul
adc
ds
inc
pop
push
mov
in
into
pop
popa
out
add
cmps
mov
icebp
dec
std
dec
sub
inc
pop
lock
mov
adc
inc
push
stc
and
addr16
not
outs
pop
mov
fidiv
(bad)
jle
cmc
dec
mov
pop
fisttp
mov
rcr
add
test
sbb
ds
shl
into
push
daa
xchg
pop
pop
idiv
fsub
or
jns
and
xchg
dec
jmp
xchg
push
leave
jg
and
rcr
push
std
fld
jg
hlt
add
pop
or
lahf
pop
outs
mov
or
and
scas
adc
rcl
shl
and
sub
pop
lock
lea
xor
inc
cmp
dec
mov
movs
dec
mov
test
pushf
mov
div
xlat
xor
cs
xor
ins
xchg
js
imul
movs
sub
and
lds
xchg
cmps
cli
add
push
or
(bad)
jle
push
mov
jno
in
mov
fisub
in
jns
push
inc
pop
stc
jae
xchg
fwait
push
adc
mov
rcr
mov
mov
pusha
mov
les
nop
fwait
jg
lock
test
out
pop
ja
dec
int3
call
(bad)
imul
inc
push
ins
rcr
pop
sbb
fsub
ret
ffreep
(bad)
sub
test
nop
sbb
cli
cmp
jb
cli
mov
lds
mov
pop
push
cmp
or
add
mov
repz
pop
jge
loopne
lahf
inc
pop
sub
mov
data16
sbb
push
scas
pop
add
(bad)
movs
mov
in
iret
stc
jmp
inc
mov
test
push
pop
sbb
jns
xor
mov
lea
ins
push
cmp
(bad)
(bad)
int
and
scas
xchg
sahf
cmp
ret
xor
adc
mov
adc
mov
std
adc
mov
jmp
mov
push
enter
nop
pop
out
mov
pop
jne
lahf
jecxz
jbe
stc
cmps
dec
call
shl
fs
lahf
fucom
dec
es
and
ror
fld
das
pop
cmp
in
mov
or
movs
sub
adc
dec
cmp
mov
and
adc
jo
push
jo
add
dec
scas
pop
sbb
nop
sub
cmps
enter
clc
dec
rol
addr16
push
mov
push
and
mov
imul
mov
clc
cmp
push
fbld
sub
jecxz
adc
in
pusha
jle
test
out
out
jmp
mov
pusha
xchg
sub
cmp
jb
cmp
push
out
cmp
inc
push
sbb
aam
push
arpl
retf
inc
pop
cli
mov
loopne
jmp
out
inc
cdq
(bad)
push
mov
loop
mov
lods
mov
dec
cs
lods
push
add
outs
add
pop
ss
sahf
dec
aad
jae
push
adc
dec
rol
and
arpl
inc
call
outs
stos
bound
ss
lea
aas
ins
mov
pop
sub
test
mov
add
nop
adc
sub
cmps
neg
cmp
jmp
js
push
data16
ret
in
xchg
pop
xor
add
cmp
and
stos
movs
nop
xor
loopne
les
ret
out
shr
retf
sbb
and
mov
sub
(bad)
push
mov
and
mov
adc
mov
xor
stos
mov
adc
xchg
sub
aad
dec
xchg
enter
cmps
imul
bound
mov
jne
mov
fwait
out
mov
pop
aaa
gs
pop
pop
jecxz
(bad)
in
or
push
repnz
jns
into
xor
mov
adc
or
fnsave
(bad)
ds
jno
test
retf
pop
nop
lods
sbb
(bad)
and
loope
ss
shr
and
sub
into
inc
dec
mov
inc
bound
push
imul
sub
push
xor
or
idiv
dec
cmp
arpl
out
push
jae
fidivr
xor
nop
rcr
or
dec
mov
shl
mov
add
scas
les
sbb
test
and
pop
jmp
xor
sbb
inc
shr
jle
aaa
jb
lods
sbb
in
hlt
add
loope
lock
sahf
lods
cwde
test
icebp
jp
add
retf
lods
cmps
aas
dec
sbb
sbb
cmp
call
inc
dec
adc
(bad)
sbb
add
pop
je
pop
push
inc
(bad)
(bad)
clc
(bad)
fwait
dec
stos
shl
or
dec
mov
dec
mov
shl
aad
inc
jecxz
push
sub
loope
push
push
mov
leave
inc
repz
push
cmp
std
sahf
push
jmp
dec
push
pop
inc
xchg
shl
movs
mov
sbb
mov
pushf
mov
inc
(bad)
mov
js
lods
call
popa
jno
inc
(bad)
xadd
mov
outs
outs
push
add
xor
adc
xchg
or
dec
inc
sar
pop
push
jmp
mov
jg
std
pop
mov
xchg
adc
xor
and
jne
xchg
jg
pushf
dec
(bad)
jl
sub
(bad)
in
and
add
popa
inc
pop
test
and
push
popf
and
out
push
add
push
int
pusha
jo
pop
data16
push
movs
xchg
das
icebp
je
cld
xchg
mov
call
mov
mov
into
mov
cdq
cmp
cmc
xor
mov
icebp
bound
dec
test
dec
sub
inc
mov
xchg
movs
or
sar
push
push
xchg
cmp
xchg
dec
ret
cmp
add
(bad)
sbb
cmp
test
call
leave
lods
adc
test
sbb
xchg
cmp
cmp
aad
in
add
mov
cmp
push
or
lahf
push
sub
add
xor
push
xchg
push
pop
popa
sub
aas
add
push
xor
daa
push
or
les
jl
push
cld
cmp
jae
push
(bad)
jmp
jle
shr
mov
(bad)
loope
xor
cmp
cmp
arpl
jae
in
adc
and
adc
in
mov
mov
mov
mov
pushf
pop
cmp
adc
pop
cld
inc
mov
push
data16
cs
mov
fsubr
int
push
sbb
cmc
in
repz
loope
jle
imul
mov
xchg
lods
call
inc
xor
mov
lods
push
ret
repz
iret
or
(bad)
mov
xor
xor
push
cmp
fadd
repz
jb
cmp
scas
mov
iret
jbe
shl
jno
jmp
dec
jmp
sbb
mov
test
fldenv
dec
call
push
sbb
test
pop
std
and
lahf
push
jno
inc
sub
cli
stos
cld
stos
push
mov
inc
gs
leave
in
jmp
(bad)
scas
std
adc
cmp
fist
mov
cmp
dec
icebp
cmp
icebp
cmp
cwde
and
test
stc
rcr
and
pop
sbb
dec
pop
jge
push
je
jnp
out
in
pop
jb
call
dec
cld
xor
sbb
fisub
mul
fistp
movs
scas
mov
mov
fwait
ror
jnp
pusha
movs
ins
lock
repz
(bad)
(bad)
pop
call
(bad)
or
jmp
add
sub
scas
loope
arpl
lock
ror
xchg
lock
int
push
push
(bad)
xchg
aas
inc
sub
fs
scas
enter
xchg
imul
and
adc
pop
popf
sub
sub
dec
jmp
popa
(bad)
ins
cmp
and
cwde
mov
lahf
mov
(bad)
aad
fdiv
js
jl
dec
push
sub
js
mov
or
gs
dec
add
pop
jno
ret
dec
push
out
(bad)
sti
aad
jo
fnstenv
xor
imul
fnstcw
in
mov
adc
mov
xlat
or
stc
bound
fisttp
dec
push
xor
jbe
mov
lahf
xchg
push
push
cmp
shr
leave
sbb
iret
mov
loopne
outs
mov
lds
add
jne
dec
test
pop
jle
jno
cwde
int3
addr16
movs
adc
imul
jl
or
ins
mov
jns
push
dec
adc
ins
cmp
sbb
mov
test
sbb
repnz
jno
pop
or
pushf
int
std
shl
inc
dec
fidivr
jne
xchg
js
cwde
sbb
int3
pusha
pop
in
nop
jp
mov
jnp
les
pop
or
movs
adc
xor
aas
mov
aad
push
enter
xchg
pop
cmps
push
push
ror
(bad)
sub
mov
mov
gs
shl
imul
inc
adc
mov
and
dec
mov
pop
(bad)
and
aas
nop
stos
std
add
lahf
std
push
outs
or
dec
mov
lods
in
mov
cmp
and
ds
add
mov
fnstsw
ja
ret
jmp
dec
xor
dec
sub
dec
mov
pop
push
mov
jae
cwde
ret
mov
lods
in
loope
jge
neg
xlat
inc
cwde
inc
pop
fprem
test
adc
or
dec
movs
xchg
jns
popa
clc
(bad)
mov
pusha
adc
mov
mov
mov
xchg
mov
mov
aad
xor
sub
push
add
mov
(bad)
dec
xchg
jge
lods
or
js
test
(bad)
stc
ds
or
sub
in
repnz
push
mov
aas
mov
(bad)
xchg
mov
in
push
mov
outs
les
lock
icebp
adc
cli
xor
and
cmp
imul
mov
fisttp
cdq
xor
das
hlt
imul
push
jle
(bad)
jg
pusha
or
cmp
adc
mov
sbb
pusha
jmp
mov
pop
sbb
test
or
inc
std
and
add
fisubr
aas
hlt
and
sbb
push
call
enter
retf
jl
jns
ror
lods
idiv
jle
sbb
xor
inc
and
mov
in
adc
dec
(bad)
lds
test
aaa
scas
ins
int
sti
adc
xchg
sbb
stc
test
inc
inc
cmp
test
xchg
dec
in
ja
loopne
cwde
mov
dec
xchg
(bad)
mov
pop
mov
retf
(bad)
or
mov
movq
aam
jo
in
mov
sbb
sub
bound
cmp
cmp
mov
push
push
sbb
mov
xchg
sub
sub
inc
jbe
lock
out
mov
push
xor
daa
movs
adc
lea
icebp
adc
pop
inc
add
cwde
leave
sub
jp
xor
mov
fstp
adc
inc
out
fs
dec
test
pop
push
retf
bound
inc
dec
fbstp
mov
cdq
add
adc
ss
icebp
repnz
lea
test
cmps
out
(bad)
push
pop
movs
das
mov
xchg
frstor
shl
adc
dec
lods
fdecstp
mov
or
shl
adc
je
jmp
fistp
les
cmp
adc
cli
push
pop
mov
dec
push
cdq
add
(bad)
fadd
adc
push
imul
push
pop
or
out
repz
pop
mov
and
lods
push
sub
mov
imul
dec
and
mov
jg
mov
pop
in
dec
jg
iret
popf
cmp
mulps
shl
cmp
cld
xor
xor
mov
xor
push
ror
dec
pop
ins
(bad)
call
xor
mov
aad
dec
sub
loopne
pop
in
jnp
mov
push
imul
cmps
hlt
sbb
iret
mov
cmp
pop
sahf
fadd
push
mov
es
mov
mov
dec
in
repnz
add
sbb
sub
mov
sbb
rcl
mov
daa
add
inc
pop
fs
and
leave
add
and
pop
mov
mov
xchg
jl
xlat
ins
push
and
in
inc
(bad)
call
mov
adc
sub
pop
loopne
push
mov
sub
mov
cwde
fdivr
je
inc
adc
call
sub
out
and
aam
mov
cmp
mul
bound
into
xor
xlat
xchg
mov
(bad)
movs
and
cmp
jp
mov
adc
fisub
push
and
call
mov
fidivr
mov
pop
or
outs
inc
test
sub
jb
mov
jb
leave
scas
repnz
pushf
(bad)
aaa
mov
jbe
mov
cmc
pop
sbb
(bad)
jg
aas
pop
jnp
push
retf
push
jnp
int3
(bad)
lods
push
outs
adc
pop
mov
mov
dec
cmps
cmp
bound
stos
mov
sbb
or
lock
popa
mov
sbb
pop
outs
(bad)
imul
or
add
shl
cmp
cld
ins
push
mov
cmp
xlat
int
push
xor
sti
sbb
or
shr
inc
lock
add
out
and
(bad)
fst
(bad)
jle
mov
loop
mov
pop
repnz
adc
test
push
ins
aas
push
(bad)
mov
mov
jnp
mov
ins
cmps
pop
rol
pop
and
and
in
call
jp
dec
push
xchg
imul
popf
imul
test
inc
xor
int
dec
(bad)
sti
out
mov
arpl
daa
or
ret
hlt
cli
mov
(bad)
fld
push
les
fdivr
mov
pusha
fild
scas
mov
mov
fsubr
sub
retf
fwait
mov
xor
(bad)
lods
adc
mov
sbb
test
cmc
outs
nop
imul
push
imul
out
pop
add
mov
push
pop
movs
push
into
push
jmp
and
cwde
outs
and
jl
dec
push
push
lds
cs
popa
es
adc
ins
mov
lock
ja
and
clc
in
xchg
fisubr
inc
in
jae
jnp
dec
mov
lea
jo
push
pop
clc
mov
mov
inc
mov
xor
out
clc
jae
sub
jl
ret
hlt
fidiv
popf
das
mov
mov
dec
sar
mov
sbb
cmp
jne
sbb
(bad)
push
(bad)
retf
ret
jg
call
push
sbb
addr16
mov
or
jno
sbb
sbb
repnz
push
bound
sbb
pop
xor
jl
jge
fwait
stc
jge
sub
call
dec
adc
push
cld
cmp
cld
xchg
mov
mov
stos
mov
mov
jb
jae
jmp
std
fwait
sbb
xor
rcr
jbe
fist
gs
dec
adc
push
ins
dec
les
push
add
lea
inc
dec
loope
(bad)
inc
cmps
aas
ja
mov
fisttp
mov
call
cmp
sbb
jge
test
ds
xchg
mov
dec
mov
out
loop
lock
and
cs
pop
or
clc
arpl
les
int
or
fsub
stos
dec
dec
add
movs
inc
cmp
sbb
repz
addr16
ins
push
aas
adc
fistp
dec
and
gs
(bad)
loop
je
pop
retf
cwde
ret
mov
push
and
jb
rol
mov
pop
movs
push
and
lods
sbb
dec
or
sub
jns
or
fimul
mov
push
(bad)
ins
mov
jne
mov
cmp
jo
adc
jns
mov
push
mov
and
in
inc
pop
push
xor
retf
cwde
movs
call
jae
pop
outs
adc
and
push
loope
fimul
push
arpl
xor
test
pusha
aas
iret
push
nop
mov
and
dec
mov
das
dec
in
add
bound
pop
cmp
xor
outs
outs
cs
test
xor
rcl
jg
mov
stos
cmc
mov
or
icebp
and
in
retf
pop
lods
pop
add
inc
lahf
cmp
into
sbb
les
cmp
hlt
in
lea
loope
loope
icebp
(bad)
in
leave
pop
xchg
ds
addr16
inc
call
jmp
mov
pop
pushf
mov
xlat
cmps
and
sar
mov
jbe
mov
retf
inc
push
push
xor
adc
lea
ret
dec
dec
mov
loopne
cmps
aam
xchg
test
test
retf
xor
cmp
mov
add
lds
setns
cmc
gs
sbb
ss
mov
xchg
jp
jg
mov
(bad)
jecxz
(bad)
pushf
xchg
or
in
jp
inc
jns
(bad)
mov
fcmovnb
jge
fmul
jbe
out
aaa
mov
mov
stos
in
add
pop
test
jae
sub
in
scas
cmp
loop
cmps
movs
pop
and
pop
retf
jmp
cmp
mov
mov
in
jge
mov
pop
icebp
or
mov
in
(bad)
pushf
jbe
cs
mov
aad
pop
sbb
mov
ja
imul
ret
xchg
popa
das
jecxz
jle
movs
mov
es
call
out
mov
out
out
call
xchg
dec
or
icebp
add
fst
add
int
sbb
nop
mov
jecxz
stos
dec
mov
xor
std
adc
(bad)
in
mov
ins
sub
dec
in
xchg
jbe
jae
ja
inc
(bad)
fist
aad
or
leave
outs
push
fsubr
inc
cmp
(bad)
imul
cs
mov
scas
lahf
movs
js
out
mov
dec
xchg
in
mov
push
add
jmp
sub
jmp
(bad)
cmps
add
outs
(bad)
and
(bad)
dec
or
and
push
(bad)
xlat
adc
cs
imul
jmp
mov
pop
cmp
cli
js
scas
push
mov
daa
inc
pop
fcom
lahf
mov
inc
cwde
out
add
call
scas
movs
sbb
sub
(bad)
call
fcom
iret
scas
fwait
imul
or
(bad)
or
sub
inc
pop
stos
xor
mov
adc
idiv
cld
and
shl
stos
and
cwde
neg
jp
idiv
push
add
dec
pop
pop
pop
loope
mov
fstp
call
mov
into
out
cmps
cmp
(bad)
fidiv
dec
fld
push
push
sub
or
or
mov
sub
in
xchg
cmp
lds
std
add
les
loop
xchg
xor
rol
rol
sub
repz
cs
(bad)
mov
inc
daa
js
mov
add
ins
add
push
hlt
pop
mov
lock
inc
test
ret
(bad)
mov
jl
jnp
cmp
add
xchg
push
aam
rcl
xchg
iret
add
add
popf
data16
cmp
adc
xchg
xor
ins
int
out
test
mov
fidiv
sbb
stos
shl
in
test
dec
popf
jmp
adc
mov
jb
(bad)
fcom
fldcw
jbe
pusha
jmp
inc
sub
iret
movs
icebp
push
pop
pusha
stos
lahf
jge
in
stos
jne
inc
sbb
dec
mov
ins
sub
stc
push
push
add
xor
inc
test
pop
mov
cmp
ins
push
movs
mov
push
pop
es
dec
inc
stc
shl
xchg
popa
retf
xchg
movs
stos
repnz
or
ins
(bad)
lods
popa
push
inc
cwde
(bad)
xor
dec
daa
cdq
push
leave
sbb
aas
idiv
pop
(bad)
mov
jae
sar
and
mov
stos
inc
push
mov
shl
iret
xor
test
frstor
ins
scas
popf
pavgb
and
cmp
inc
dec
imul
pop
inc
xchg
(bad)
push
add
fmul
cmp
push
sahf
mov
cmps
int
dec
jno
frstor
icebp
push
dec
je
neg
cs
lods
icebp
push
ja
fnstsw
sbb
jmp
test
cmp
mov
std
inc
aaa
pop
fucomip
mov
jl
pop
loop
push
ins
jmp
mov
pop
or
mov
xor
xchg
dec
sub
cmp
sub
(bad)
dec
fucom
mov
mov
and
mov
xor
pop
in
sbb
jno
stc
pop
cmc
and
les
cmp
xor
(bad)
or
jbe
adc
jmp
mov
push
leave
lods
cmc
aam
bound
fst
sub
xlat
push
ficomp
sub
in
add
js
in
ret
mov
outs
scas
cs
mov
and
mov
pushf
out
nop
ins
mov
and
cmps
jbe
pop
and
xor
loopne
mov
jge
aas
cmp
push
lahf
jp
repnz
dec
(bad)
pop
int3
pusha
xor
or
bound
loopne
out
cmp
pop
ja
dec
mov
sar
xchg
iret
or
cmp
jbe
sub
jns
cmp
pop
add
jp
pop
nop
rcl
mov
push
mov
pop
aas
jp
mul
mov
pop
xchg
dec
imul
loope
in
popf
das
leave
mov
out
or
push
xor
or
lods
sub
into
sbb
mov
stc
test
je
clc
lds
neg
push
fidiv
jp
out
jne
jl
push
cs
jnp
call
(bad)
cmp
jnp
or
outs
adc
test
or
jns
out
and
stos
jbe
in
ja
test
sub
repnz
adc
idiv
(bad)
mov
les
xor
out
inc
scas
idiv
mov
js
adc
(bad)
or
adc
(bad)
pop
cld
test
or
pusha
mov
js
stc
inc
adc
lea
lods
push
ins
out
jns
xchg
mov
push
push
push
and
les
aam
call
lea
mov
out
sub
cmps
add
and
in
sbb
out
imul
inc
cmp
lods
movs
gs
sahf
fstp
xlat
jmp
xor
mov
xlat
and
push
push
cld
xchg
xchg
outs
sbb
mov
ror
or
mov
outs
je
push
pushf
cmp
movs
daa
sub
mov
sti
jb
jnp
scas
ficom
cwde
scas
loope
into
adc
pop
mov
sbb
adc
cwde
mov
pop
mov
fwait
cmp
or
in
int3
mov
nop
jg
push
inc
mov
les
cmp
adc
push
mov
aad
and
inc
out
mov
idiv
xlat
int3
adc
in
sub
repz
fs
std
add
outs
mov
xor
mov
dec
pop
mov
test
sar
popa
cmp
bound
xor
push
push
mov
retf
push
pop
inc
fcomp
out
(bad)
lods
and
clc
lods
and
cdq
ins
fdiv
cli
mov
cli
outs
and
inc
(bad)
in
cmps
iret
jmp
mov
out
dec
stc
ins
xchg
jle
jmp
pop
rcr
mov
stos
fbld
add
cwde
ja
pop
out
dec
or
push
mov
ret
fild
cwde
push
outs
or
jg
arpl
pop
and
inc
(bad)
data16
jo
imul
pop
mov
mov
fwait
in
push
(bad)
ret
shl
and
cmp
int3
loopne
cmps
pushf
fld
adc
or
mov
popf
mov
je
xor
lock
cs
outs
cmp
mov
add
jecxz
pop
jmp
(bad)
shl
cmps
out
xor
or
ja
js
pop
dec
retf
inc
xchg
xor
test
dec
rcr
push
loopne
sub
jmp
lods
(bad)
sbb
aas
f2xm1
sub
pop
call
repz
sbb
fwait
mov
add
inc
mov
loopne
and
cmp
(bad)
pop
pop
imul
dec
xor
mov
lods
add
push
lods
repnz
mov
push
dec
cmp
shl
mov
xchg
addr16
mov
out
sub
mov
popf
sub
adc
fstp
push
xchg
test
cmp
sar
idiv
xor
inc
retf
addr16
push
icebp
jmp
jo
fld
dec
ret
clc
movs
stos
inc
sbb
popf
add
js
sub
pop
xor
mov
xor
enter
les
mov
pushf
cmp
rcr
ret
fldcw
mov
imul
dec
lods
mov
mov
mov
mov
jle
or
cli
jg
les
in
sub
or
(bad)
ins
scas
xlat
sbb
adc
repnz
clc
ror
lock
arpl
xor
mov
retf
add
cmp
test
mov
cmps
outs
lods
shl
mov
xor
and
outs
std
punpcklbw
push
stc
iret
xlat
mov
imul
push
das
outs
sbb
sbb
or
fld
sti
stc
add
mov
xor
in
imul
push
jae
movs
imul
push
rol
mov
jecxz
dec
push
out
pushf
lods
je
mov
add
enter
cmps
xchg
xor
xchg
in
test
popa
test
adc
push
loop
out
push
add
mov
xchg
cmp
hlt
pop
mov
sub
in
aam
icebp
test
icebp
leave
jnp
rcr
es
push
loopne
sub
sar
(bad)
sub
retf
mov
mov
cs
add
je
push
movs
sbb
mov
ror
xchg
cmp
loope
push
sti
movs
jnp
push
hlt
stos
lock
retf
xor
test
imul
cmp
mov
fadd
aam
mov
adc
dec
inc
imul
dec
add
xchg
pop
shr
pop
mov
sbb
lds
xor
int
jns
and
ins
push
mov
mov
pop
push
dec
dec
mov
mov
lds
lods
lods
movs
icebp
xlat
adc
pop
loop
aam
inc
pop
xchg
sub
jp
sub
jae
dec
out
jno
movs
pushf
inc
xor
fdiv
cdq
pop
fsubp
xchg
push
pop
retf
sbb
and
xchg
xchg
sti
mov
push
lahf
in
pop
fst
ds
icebp
mov
sbb
cs
fwait
cmps
out
sbb
adc
push
jno
dec
mov
inc
out
ds
std
pop
inc
pop
(bad)
std
int
js
dec
mov
fcomp
jmp
or
mov
adc
add
repz
clc
fcmove
in
xor
outs
inc
inc
mov
call
out
mov
cmp
xor
(bad)
stc
dec
mov
cs
jmp
scas
out
cdq
(bad)
call
stos
sbb
add
add
lods
xchg
sub
push
pop
or
(bad)
repnz
hlt
inc
mov
push
push
stc
sbb
dec
jge
leave
imul
idiv
(bad)
xchg
out
mov
test
stos
cmps
cmp
inc
mov
pop
outs
les
outs
pop
mov
sub
ja
retf
or
scas
jno
xchg
nop
shr
push
stos
mov
sub
ins
aas
and
cmp
mov
xchg
js
add
push
mov
pop
xor
das
xor
push
push
push
fsubr
cmp
or
loope
adc
out
pop
repnz
cli
jnp
call
aad
ret
ins
inc
or
outs
push
test
outs
push
lea
fdivr
jae
imul
lock
push
mov
pop
add
sub
ins
lock
jge
xchg
daa
sbb
in
popf
test
movs
mov
mul
fidiv
cmps
mov
outs
sbb
imul
loop
xor
dec
push
ficom
dec
jne
shr
sbb
mov
mov
push
add
sti
ret
cld
xor
cld
push
icebp
inc
push
cld
pop
gs
adc
cdq
and
pusha
pop
out
pop
iret
xchg
sbb
in
call
ret
cmp
sbb
dec
in
lods
dec
sub
dec
inc
repz
loop
mov
ret
push
imul
movs
adc
pop
mov
mov
jbe
bound
dec
adc
icebp
xor
mov
arpl
jb
(bad)
imul
pop
fstp
bound
jl
ins
push
pop
jle
xor
popf
xor
shl
in
jno
cmp
lahf
(bad)
jo
shl
cmps
jle
test
mov
xor
ror
std
rcl
fist
and
jmp
in
test
add
lds
xor
ins
pop
adc
hlt
push
ret
mov
cmc
cli
sub
cdq
add
xchg
push
jg
xor
cwde
add
cmc
stos
test
pop
adc
outs
cmp
add
pop
mov
ins
scas
jmp
add
int
ins
pop
mov
stos
cmp
xchg
cmp
push
add
and
sbb
dec
stc
movs
and
shr
mov
popf
sub
xchg
and
mov
nop
ret
or
mov
xor
cdq
adc
cmp
out
jmp
xchg
cdq
xor
(bad)
aad
mov
jl
retf
movs
icebp
pop
cmp
lock
jb
fisub
xor
cmps
xchg
dec
sub
mov
xlat
and
(bad)
cwde
lock
mov
out
stos
push
xor
(bad)
ret
ss
pop
xchg
push
and
inc
inc
leave
ret
sub
call
jecxz
popa
outs
inc
gs
and
cmp
add
dec
repnz
iret
fsub
sti
push
pop
and
mov
mov
test
inc
ja
jo
inc
repnz
jmp
ins
test
push
push
add
jbe
and
sbb
adc
cdq
movs
adc
je
lahf
call
sub
test
inc
in
and
mov
sub
imul
mov
enter
outs
ins
out
loop
pop
mov
es
inc
es
dec
in
cmp
imul
test
pop
and
pusha
ins
(bad)
mov
inc
fmul
arpl
jmp
dec
cmp
aam
mov
push
jnp
or
jle
hlt
add
mov
sbb
pop
(bad)
push
loope
cmp
pusha
and
popa
xchg
cmp
push
mov
push
std
in
sahf
out
retf
push
mov
(bad)
mov
sti
scas
mov
std
add
push
or
pushf
sbb
inc
mov
movs
in
loop
add
bound
push
repz
in
jp
push
sahf
scas
jo
ficomp
retf
int
cld
loopne
(bad)
mov
jle
sti
xor
stos
sbb
push
adc
pushf
shl
iret
daa
jmp
out
adc
add
(bad)
cli
add
mov
sub
fisub
inc
pushf
mov
pop
push
(bad)
ds
mov
test
mov
je
mov
or
pop
imul
mov
outs
sub
jge
jns
adc
mov
cmp
or
nop
cmps
or
jb
pop
int3
add
(bad)
cld
cmp
ficom
mov
jne
mov
cwde
rcr
jecxz
sbb
sub
retf
loopne
int3
sub
(bad)
(bad)
dec
adc
cmps
repz
repz
pop
or
test
test
add
iret
mov
xchg
enter
mov
in
inc
mov
out
mov
scas
dec
rol
loop
mov
frstor
jl
out
sub
mov
jmp
in
fisttp
push
(bad)
aaa
sar
daa
adc
lods
movs
or
and
cmps
mov
adc
xchg
cld
test
call
lahf
or
ret
pop
imul
test
jg
jbe
cmp
cmp
aam
js
fwait
mov
push
(bad)
jae
stc
sbb
cmp
and
cmc
sbb
mov
rcr
aas
ins
test
jg
push
push
inc
adc
xacquire
test
sbb
icebp
jmp
test
dec
int
je
shl
in
test
ins
mov
add
rcr
ficomp
fucomip
or
int
(bad)
pop
mov
sbb
pushf
mov
jo
icebp
loop
xchg
pop
in
stc
dec
call
fwait
jb
outs
pop
sbb
cmp
(bad)
pop
fisttp
push
xor
sbb
mov
jne
pop
sub
sbb
test
mov
sbb
inc
(bad)
lock
dec
(bad)
cli
lds
sbb
int3
and
and
sti
gs
jno
mov
add
push
retf
(bad)
in
scas
jae
push
sub
fidivr
fistp
popf
mov
mov
in
lods
inc
pop
pop
sub
in
push
or
ficom
push
mov
hlt
inc
data16
fnstcw
push
mov
push
jmp
inc
xchg
add
inc
rol
fist
(bad)
jmp
fldcw
fsub
cld
ins
sub
mov
xlat
test
xchg
and
or
pop
pop
ffreep
ds
mov
adc
out
loop
adc
and
fcomp
loopne
js
pop
or
mov
push
out
imul
cmp
cmp
pop
jnp
cmp
jmp
out
clc
lods
sti
leave
inc
loopne
mov
xor
fcom
push
fdiv
add
sub
loope
cmp
pop
int
add
sub
cmps
xchg
sbb
pop
pop
mov
push
and
pop
adc
gs
mov
mov
jno
xor
push
mov
adc
test
adc
nop
(bad)
clc
pop
mov
sub
pop
add
inc
call
popf
hlt
or
or
jle
add
push
xor
and
mov
mov
pmulhuw
xor
ficom
ds
mov
imul
pushf
push
pop
arpl
lods
push
push
repz
add
movs
arpl
jmp
fneni(8087
mov
pop
fstp
add
jge
sub
outs
sub
mov
inc
xchg
push
push
jo
mov
adc
je
push
push
cmp
enter
imul
in
pop
loop
test
std
jns
sti
adc
sub
sbb
nop
xchg
and
scas
imul
add
stos
mov
fst
jae
mov
ss
push
loopne
imul
xchg
int
add
hlt
and
pop
jo
shr
or
adc
test
ds
mov
enter
cs
xchg
arpl
push
cwde
push
gs
add
xchg
lods
xchg
jmp
jbe
sbb
call
push
ja
push
push
xchg
std
inc
ds
sbb
inc
or
push
hlt
cdq
push
int
push
and
movs
fldenv
pop
xor
data16
(bad)
pop
mov
mov
inc
add
ds
movs
int3
imul
mov
loope
stc
add
jns
scas
mov
sub
push
clc
popa
jns
adc
sbb
sti
mov
jbe
addr16
in
mov
xor
sbb
xor
fidiv
ins
adc
sub
adc
sub
pop
ror
test
lea
push
and
add
mov
loope
dec
sar
sbb
push
cmps
mov
or
inc
je
and
ins
xor
pop
sbb
push
mov
call
(bad)
out
test
arpl
mov
dec
sbb
cs
cs
fucom
jmp
inc
icebp
mov
xlat
and
out
iret
mov
jle
mov
jne
repz
pop
out
ins
popa
push
lea
cld
adc
pop
push
xchg
rcr
xor
int3
fsubrp
xor
push
xchg
call
cmp
rcr
ficomp
jne
mov
mov
sbb
js
pop
adc
mov
fmul
mov
jge
fwait
jge
lock
xor
fsubr
int3
neg
lahf
pop
addr16
adc
icebp
jb
inc
dec
jmp
addr16
adc
sar
pop
dec
ret
xchg
leave
or
retf
ins
lock
scas
jmp
and
adc
push
mov
xchg
or
clc
pushf
and
sub
push
(bad)
call
imul
push
mov
jbe
xchg
int
add
stc
add
jmp
adc
icebp
mov
cmc
retf
inc
(bad)
xor
cdq
jp
xchg
inc
cdq
pushf
outs
and
into
repz
push
xchg
xlat
rcl
call
outs
cmc
fld
dec
or
ins
dec
gs
into
scas
(bad)
out
jmp
xor
in
rol
ror
jle
sub
pop
out
pop
leave
gs
mov
es
in
(bad)
(bad)
(bad)
jp
dec
leave
ss
aam
mov
and
mov
ror
adc
adc
out
lods
adc
add
test
clc
std
fst
test
popa
lds
inc
or
bound
inc
sahf
into
sahf
sub
mov
popf
xlat
jo
je
ret
push
jl
aaa
cdq
shl
shl
sbb
ins
lea
pop
clc
adc
mov
test
mov
test
inc
add
dec
sub
(bad)
jno
jmp
dec
mov
or
xchg
in
lds
dec
aam
add
sub
mov
pop
mov
sbb
adc
xchg
jmp
add
hlt
test
hlt
sub
ret
aaa
test
aad
sub
es
lea
test
jbe
mov
icebp
xchg
mov
push
clc
push
fstp
jne
mov
sbb
jle
cmp
dec
mov
xchg
ret
cwde
jmp
lock
push
div
sub
scas
push
sbb
sbb
cmp
jnp
mov
in
sub
fidiv
into
dec
adc
mov
jmp
adc
fbstp
push
aad
pop
mov
mov
mov
xchg
cmp
cdq
fist
or
bound
sti
jmp
cdq
pushf
test
cmp
push
adc
mov
jp
cdq
leave
fcmovnbe
jge
enter
push
sti
daa
add
jl
jbe
mov
pop
jns
addr16
push
cwde
cmp
inc
mov
push
mov
inc
sub
xor
lock
stos
jns
adc
or
imul
or
or
jno
xchg
pop
dec
nop
clc
cld
mov
cli
cld
jo
cld
sub
scas
lahf
pop
jmp
movs
pusha
push
sbb
out
add
inc
sar
sub
adc
inc
inc
jbe
push
or
pop
stos
pop
mov
in
or
movs
loop
xchg
movs
cmps
pop
outs
push
push
shr
push
pushf
bound
cmc
add
adc
and
ja
cmps
or
fmul
jg
push
or
loop
pop
pop
sahf
mov
add
xor
jae
jg
inc
ds
cli
inc
rcr
adc
push
mov
call
mov
pop
fstp
pop
pop
add
fld
cmp
out
inc
push
ja
lds
scas
sub
repnz
pop
loope
ficom
push
aam
inc
or
shr
pop
add
or
mov
ja
shl
pop
shl
push
or
sub
and
sti
jl
adc
(bad)
test
enter
aad
dec
pop
cmps
cmp
push
(bad)
fstp
jle
movs
nop
xor
fiadd
jae
mov
or
int
mov
es
retf
sbb
xlat
adc
mov
enter
mov
and
cmc
std
mov
dec
test
cmps
mov
lock
mov
or
mov
std
and
dec
arpl
loopne
push
mov
jmp
les
ret
js
jno
mov
xchg
mov
(bad)
sub
cmp
jg
jl
fimul
mov
jecxz
scas
hlt
pop
jb
call
or
cmp
mov
jmp
mov
in
jne
arpl
pusha
cmc
mov
push
inc
loopne
jl
rol
test
clc
push
mov
pushf
retf
dec
adc
push
scas
push
cmp
dec
lds
jb
sbb
inc
sbb
dec
imul
(bad)
cmp
int
inc
mov
jo
xor
out
jo
dec
mov
or
ds
mov
fisttp
(bad)
rcr
(bad)
ret
adc
cli
mov
call
loope
or
ret
sahf
mov
sbb
inc
fstp
fisub
imul
imul
adc
mov
out
(bad)
in
adc
jp
call
pop
sub
xor
mov
ds
scas
stc
rcr
aad
test
ss
push
pop
enter
sahf
or
xor
nop
mov
mov
ret
mov
pop
(bad)
dec
xchg
and
jl
popf
dec
pop
add
aam
fistp
imul
cs
jbe
adc
mov
dec
add
int3
ss
ins
mov
cld
jmp
fld
icebp
push
mov
cmp
inc
jo
test
xchg
xchg
and
ins
aam
movs
je
(bad)
fild
sti
stc
in
cld
mov
mov
adc
push
dec
outs
iret
movs
ret
cmp
jmp
lods
imul
push
test
retf
cmp
call
loope
fwait
das
add
retf
jo
lock
aaa
mov
lds
popf
xchg
(bad)
leave
movs
shr
cmp
lea
shl
popf
mov
mov
scas
mov
mov
mov
imul
dec
lock
mov
hlt
in
in
jno
push
lods
cli
aaa
dec
stc
imul
ss
push
jb
push
iret
lahf
push
pop
pop
das
and
ret
es
rol
mov
sbb
lea
xchg
xchg
adc
xchg
outs
(bad)
cmp
retf
adc
scas
nop
stos
mov
pop
push
int
int
fsub
sbb
jge
mov
fdivp
adc
retf
addr16
lods
xchg
addr16
imul
or
mov
je
shr
les
inc
xchg
sub
cld
xor
xchg
mov
mov
outs
pop
mov
cwde
ins
sub
call
push
icebp
mov
aam
ja
imul
push
les
push
adc
mov
and
movs
(bad)
cli
imul
sbb
add
mov
add
or
loope
stos
clc
icebp
adc
daa
scas
shl
sar
cld
dec
and
push
mov
push
add
leave
ins
aas
test
icebp
call
ret
jnp
sahf
cmp
les
in
push
fdivp
ins
cmp
rcl
lea
aad
sbb
shr
imul
out
test
push
push
push
jns
outs
leave
mov
inc
sub
inc
out
xor
xlat
mov
in
pop
arpl
inc
dec
pop
sbb
aam
cs
inc
and
aam
mov
adc
fild
push
repnz
or
movs
movs
dec
das
mov
push
(bad)
scas
adc
xor
mov
jl
test
lahf
xchg
fcompp
adc
test
js
js
push
aaa
push
das
or
sub
pop
jb
int3
ja
mov
adc
sbb
sbb
mov
jnp
or
inc
gs
sbb
and
(bad)
ret
nop
mov
loope
xor
cmp
add
xchg
cmps
xchg
(bad)
push
cmp
mov
in
shl
cwde
int3
or
pop
shl
inc
in
aas
jo
mov
out
jl
cmp
out
dec
jl
retf
fidiv
adc
cs
jp
push
aas
stos
jl
push
mov
mov
fs
sbb
(bad)
stc
lea
xchg
das
jbe
or
push
das
rcl
lea
inc
mov
xlat
cmp
js
retf
inc
fisttp
repnz
dec
or
loope
jb
leave
or
test
push
mul
jbe
dec
dec
xchg
or
arpl
fld
push
add
jmp
repz
sub
mov
fcomp
pop
das
into
dec
pop
jmp
push
jmp
sub
rcl
inc
cld
dec
jecxz
push
xchg
sub
movs
ret
dec
scas
lods
mov
stos
xor
adc
iret
ror
pusha
add
stos
stos
cmove
xlat
mov
cld
ror
inc
jge
lods
mov
jg
(bad)
ror
adc
adc
jnp
scas
or
jmp
rcl
data16
pop
push
jmp
aam
jge
mov
scas
(bad)
mov
mov
mov
ud1
inc
or
mov
test
add
bound
hlt
jae
push
stos
or
push
pop
cmp
ror
outs
fstp
test
icebp
imul
mov
mov
int3
inc
mov
cwde
loop
test
add
adc
aaa
stc
call
add
arpl
mov
inc
sti
repnz
lea
fldenv
ret
ins
div
jns
xchg
adc
and
aad
mov
xor
jbe
imul
pushf
cmps
xchg
mov
pop
dec
loop
sbb
add
adc
clc
mov
call
dec
sub
mov
div
push
dec
jge
add
repz
mov
push
retf
push
push
ss
mov
or
push
adc
mov
cdq
pop
test
jmp
hlt
or
ror
xchg
icebp
lods
sbb
push
test
inc
rol
dec
mov
push
out
(bad)
jg
mov
retf
cmc
cmp
add
adc
clc
cs
mov
pushf
sbb
and
pop
dec
cmps
xor
mov
pop
jae
mov
fsubr
mov
cmps
jo
xchg
ds
shl
xor
mov
rcr
jns
out
cmp
cmp
dec
test
cld
ins
mov
fwait
(bad)
call
sub
stos
(bad)
repz
add
inc
addr16
xor
sub
cmps
pop
adc
jl
cld
adc
mov
push
ret
dec
cli
or
clc
test
pop
test
rcr
ds
lock
in
std
pop
sbb
ret
jg
ins
ins
cmp
mov
sbb
mov
ret
in
and
add
inc
xchg
das
into
shr
fistp
inc
in
adc
pop
inc
jae
fbld
nop
jbe
or
daa
xor
xlat
cdq
pushf
imul
shl
clc
ds
ins
mov
sbb
sbb
dec
stc
in
cdq
nop
pusha
push
mov
paddw
mov
pop
inc
aas
jecxz
mov
gs
repz
aam
sbb
mov
ror
std
dec
(bad)
out
(bad)
cdq
jbe
and
in
push
pop
fidivr
push
retf
lods
aas
gs
ror
jno
and
fild
js
adc
xchg
cmps
mov
int
sub
xchg
inc
jl
cmp
dec
sbb
jbe
outs
cmp
lea
out
retf
stos
lock
jo
fwait
shl
out
repnz
leave
jno
pusha
push
imul
push
(bad)
dec
test
aaa
pop
nop
push
sti
ret
(bad)
sbb
lock
fsubr
ret
mov
ja
cmp
mov
(bad)
mov
scas
add
int3
dec
xchg
and
jecxz
or
addr16
mov
sbb
call
mov
dec
adc
and
movs
mov
jb
loop
add
mov
es
dec
pop
push
mov
jbe
xchg
ficom
scas
cli
and
jne
sub
std
(bad)
mov
out
in
fdiv
mov
stc
divps
mov
xchg
(bad)
nop
mov
mov
add
lods
iret
data16
shl
fcmovnb
jmp
xor
sar
rcl
into
jb
pop
jle
push
and
push
div
ret
fisubr
fld
sub
hlt
in
sub
ret
jmp
out
(bad)
pop
xor
jae
test
fsubr
mov
sub
pop
inc
add
mov
pop
sbb
jmp
addr16
lea
fadd
cmp
aas
sub
ja
leave
test
jno
push
push
or
mov
mov
enter
mov
outs
rol
ds
dec
inc
push
push
out
xchg
data16
mov
sahf
pusha
cmp
push
pop
imul
leave
movs
sar
sahf
movs
add
and
mov
mov
in
aad
xor
mov
mov
mov
loope
add
gs
popa
stos
out
fist
jno
xchg
mov
push
xor
ins
stos
out
cwde
sub
in
jns
movs
idiv
fmul
sbb
sub
add
cld
inc
push
pusha
jl
pop
cmp
push
xchg
mov
jg
scas
and
imul
inc
cmp
mov
cli
push
mov
pop
xchg
das
pop
adc
jae
mov
push
mov
leave
(bad)
mov
ficomp
cdq
sub
adc
nop
pop
push
retf
xchg
push
pop
xchg
mov
jne
or
cmp
hlt
nop
cmc
sbb
mov
mov
xor
or
push
dec
fwait
sub
(bad)
movs
sbb
jno
jno
xor
test
and
push
movs
gs
ficom
mov
push
test
mov
sbb
push
(bad)
sbb
retf
inc
and
loopne
xor
adc
addr16
mov
(bad)
add
loopne
cmps
push
test
and
hlt
sub
pop
pop
mov
mov
or
or
xlat
in
idiv
or
js
or
pop
enter
dec
pop
test
sbb
mov
popf
retf
aam
fxch
aad
iret
dec
fs
scas
ret
add
pop
icebp
mov
or
les
loopne
mov
pop
sub
mov
mov
fcom
outs
mov
xchg
pop
fsubr
cwde
and
movs
cli
aaa
cwde
bound
sub
inc
pop
hlt
mov
in
loope
adc
in
mov
ror
ins
mov
popa
push
dec
push
or
jbe
add
or
sbb
push
sub
cmp
lds
fist
popf
inc
aaa
mov
or
iret
(bad)
imul
cmp
mov
xor
sti
adc
addr16
sahf
add
xchg
fwait
sub
dec
push
imul
push
jno
inc
jecxz
mov
clc
mov
mov
or
stc
clc
rcl
or
inc
(bad)
mov
retf
paddd
(bad)
shr
mov
sbb
or
pop
dec
mov
dec
pushf
or
xchg
jp
push
stos
jno
bound
jnp
mov
push
jbe
jmp
in
xchg
sbb
jmp
xchg
push
sbb
sahf
cld
sub
hlt
test
in
adc
cmp
ins
das
jmp
rcl
jle
daa
movs
sbb
jno
pop
mov
(bad)
movs
dec
(bad)
dec
cmp
cmp
icebp
inc
pop
jnp
add
rol
ror
jo
jbe
cmp
jmp
add
pop
xor
sub
fs
xor
setnp
pop
outs
pop
dec
call
pusha
ror
xchg
and
pop
add
aas
cmp
iret
xchg
arpl
mov
xor
push
cwde
and
ret
and
jbe
pop
(bad)
fwait
xor
fcmovne
ret
rol
icebp
push
lfs
mov
clc
adc
dec
cmp
xor
nop
in
(bad)
ds
into
(bad)
xor
out
jbe
cmp
push
test
stos
in
jnp
mov
jl
and
data16
xchg
test
xchg
shl
pop
dec
outs
adc
mov
lea
cmp
mov
cdq
test
mov
and
jl
xor
lock
or
imul
jbe
(bad)
shl
jmp
call
mov
(bad)
pop
xchg
add
dec
xchg
js
xor
adc
stos
dec
rcr
mov
popf
inc
sbb
sbb
stos
js
lahf
daa
cmp
mov
(bad)
sar
xor
pop
jp
sub
inc
ja
jae
out
scas
clc
pop
or
inc
js
sub
mov
lods
adc
jl
xor
ss
cmp
cdq
adc
repz
inc
push
jbe
inc
or
mov
mov
int
mov
cmp
push
mov
add
arpl
push
pop
push
ins
out
sub
lods
popa
sbb
cld
dec
add
cmp
mov
mov
sbb
jns
addr16
sub
aad
iret
rol
cmc
sub
loopne
and
loopne
ret
int
(bad)
das
sub
retf
jns
es
lods
push
push
push
pop
loopne
cmps
bound
sub
add
cs
mov
int3
repz
mov
cmps
ja
mov
mov
pushf
fstp
dec
push
inc
xor
in
fidivr
or
dec
fild
xor
add
sbb
mov
sbb
sar
xchg
(bad)
sbb
push
xchg
mov
(bad)
repnz
push
scas
out
ret
(bad)
pop
inc
add
mov
aam
(bad)
dec
or
shl
out
mov
xor
call
inc
mov
pop
stc
(bad)
fs
ins
xchg
(bad)
stc
push
shl
cld
dec
lar
mov
(bad)
stos
je
cmp
ret
scas
enter
rol
inc
ret
sbb
sbb
fst
dec
out
stos
je
sub
or
xor
loopne
mov
sbb
es
pushf
rcl
ds
fisubr
outs
call
sbb
or
mov
jno
adc
and
adc
es
inc
(bad)
mov
inc
mov
ret
push
dec
xchg
push
push
les
das
and
sub
mov
stos
loope
xor
pop
or
ss
cwde
xor
popa
pop
push
dec
das
mov
cld
mov
lods
jb
sub
and
pop
dec
fidivr
stc
or
jmp
dec
mov
mov
outs
jmp
aaa
pop
mov
mov
push
mov
inc
sbb
add
jge
mov
out
pop
add
add
inc
stos
pusha
cld
xlat
aam
pop
out
sysexit
clc
movs
or
mov
ret
aad
into
dec
sbb
daa
dec
xor
arpl
add
sub
jge
mov
jge
enter
in
or
pusha
mov
xor
ret
fnsave
imul
in
xor
fwait
mov
mov
mov
sbb
bound
dec
push
sbb
enter
ret
sub
jae
fisub
dec
mov
lods
cmp
je
or
and
cmp
or
jns
mov
or
add
pop
adc
shl
int
add
fimul
push
lds
rcr
aam
cs
retf
pop
je
mov
loope
imul
mov
mov
jle
icebp
cs
and
inc
and
(bad)
sub
repnz
inc
iret
inc
push
lods
jecxz
call
add
(bad)
pop
adc
pop
ret
mov
jmp
sbb
xor
push
xor
jmp
sbb
or
icebp
and
pop
cdq
les
pop
into
mov
inc
mov
lods
xlat
das
test
jbe
dec
mov
test
push
cdq
sbb
shr
rcl
cld
and
inc
leave
and
and
mov
inc
pop
mov
push
pop
mov
inc
(bad)
sbb
ins
sub
xor
mov
adc
xor
movs
mov
adc
into
neg
in
sub
push
and
loop
push
add
sbb
(bad)
sbb
rcr
enter
enter
sub
leave
daa
aad
aam
mov
inc
sub
ror
inc
jl
leave
mov
inc
xlat
(bad)
aas
inc
imul
cmp
inc
mov
adc
cdq
fld
in
test
sub
mov
lods
cdq
clc
push
sub
lahf
inc
xor
call
iret
sbb
dec
and
mov
das
in
je
dec
sahf
or
inc
aam
ja
mov
inc
jmp
(bad)
out
fdivr
addr16
cmp
imul
dec
dec
sbb
(bad)
push
cmc
pop
mov
iret
sbb
or
xor
imul
mov
xchg
cmp
nop
add
sub
retf
or
push
dec
dec
lods
arpl
stos
push
pusha
sub
jg
push
mov
jns
jmp
bound
sbb
ins
mov
jne
dec
add
push
sbb
add
xor
mov
aas
xor
xlat
mov
aas
outs
cmp
dec
jge
aas
stc
repnz
popa
test
xchg
or
repz
cdq
inc
shr
mov
retf
sbb
scas
adc
std
mov
sub
cmc
cmps
loop
xchg
and
outs
outs
(bad)
hlt
jmp
push
mov
aaa
mov
add
sub
jp
pushf
and
xor
stc
inc
pop
out
mov
popa
jne
movs
loopne
out
xor
xchg
cmp
inc
or
enter
xchg
sbb
fwait
mov
test
adc
adc
jo
fsubr
adc
pop
xor
aad
push
daa
cmp
ins
mov
lods
inc
sub
sub
aam
inc
data16
xchg
push
push
mov
leave
xchg
push
inc
xor
jmp
add
retf
test
push
mov
aas
mov
test
scas
out
lea
sub
cli
push
add
xchg
loopne
test
cli
ret
ja
cmc
or
bound
daa
daa
mov
push
xchg
xor
jne
mov
out
jp
lahf
je
mov
mov
lds
dec
cmp
out
ja
xchg
pop
aad
call
lods
xchg
repnz
test
sbb
lods
inc
inc
xor
rcr
xor
and
lahf
inc
mov
mov
pop
jmp
popa
loope
fnstenv
les
das
sar
loope
arpl
std
iret
clc
cmp
nop
fld
sbb
cmp
out
sub
mov
sub
fcmovnbe
push
sub
jbe
punpcklwd
adc
pushf
scas
mov
push
push
test
add
lock
(bad)
ja
fwait
pop
cli
scas
jmp
fwait
jns
and
xor
pop
add
mov
jne
inc
(bad)
mov
neg
sub
imul
or
mov
sbb
mov
push
add
mov
mov
add
out
ret
mov
inc
mov
xchg
push
sub
sar
ret
mov
ja
stos
or
aad
jb
repnz
stc
dec
dec
scas
cmp
push
daa
xor
cmp
pop
dec
retf
jle
retf
(bad)
pop
mov
cld
mov
cwde
push
dec
jg
mov
in
std
out
cmp
dec
mov
stc
mov
jge
push
sbb
cdq
jmp
mov
sub
test
loope
adc
js
lods
pop
mov
mov
sub
mov
pop
xor
ja
lock
inc
and
push
jne
lea
lds
cli
mov
adc
test
or
call
add
xor
jne
jbe
out
mov
push
cs
arpl
xchg
imul
adc
or
inc
xchg
mov
lock
dec
inc
test
lock
push
pop
loopne
dec
push
int
jno
into
jns
mov
mov
or
cmp
or
mov
push
pop
and
popa
sbb
imul
xchg
sub
push
dec
jg
or
pop
jae
in
in
call
xchg
arpl
std
ds
call
fdiv
int3
inc
xchg
gs
cmps
or
aam
jge
xchg
jge
fist
fwait
pop
cs
in
(bad)
(bad)
out
test
icebp
lds
imul
out
dec
mov
imul
add
stc
fidiv
jl
adc
je
inc
or
loopne
or
loope
add
call
out
aam
into
mov
out
outs
adc
adc
or
adc
(bad)
adc
cwde
jb
jmp
sbb
add
jge
and
jnp
arpl
sbb
push
mov
ins
stc
shl
push
push
lds
(bad)
shl
xchg
push
push
sub
mov
shl
lods
mul
pop
(bad)
out
mov
js
dec
mov
xor
xor
dec
stc
jo
daa
jmp
scas
inc
shr
and
ret
xchg
sar
jmp
xchg
pop
mov
shl
cld
or
lahf
pop
js
stos
push
sub
ins
sbb
xor
rol
mov
and
ds
loope
mov
loopne
xor
loopne
mov
lods
dec
add
adc
or
add
dec
mov
fidiv
retf
(bad)
rol
mov
sub
iret
pop
adc
add
cmps
cmp
dec
inc
inc
or
(bad)
call
xchg
dec
and
test
in
inc
jle
push
sub
add
sub
and
mov
repz
bound
fs
mov
fisubr
enter
push
outs
mov
hlt
xor
xor
repz
mov
or
jne
repnz
dec
(bad)
in
xchg
call
jns
xor
nop
mov
push
shl
dec
call
or
inc
iret
mov
inc
fst
xor
pusha
jp
stos
ds
inc
aad
cmc
xchg
push
icebp
enter
mov
adc
fsub
repz
cmp
movs
mov
lods
jge
pop
xchg
clc
xchg
ss
mov
mov
sub
out
pop
clc
mov
loop
or
mov
test
pop
or
(bad)
ja
push
shl
xor
ror
mov
cmp
js
inc
dec
add
mov
or
mov
daa
pop
fld
inc
cmp
or
es
daa
iret
movntq
sahf
add
push
sub
sub
inc
sbb
(bad)
xlat
add
fld
push
or
(bad)
setbe
sbb
adc
(bad)
cwde
repnz
es
loop
add
(bad)
adc
push
ret
xchg
jb
enter
sbb
mov
ja
and
pop
adc
call
int3
sbb
iret
out
(bad)
mov
nop
mov
sub
inc
ss
push
xor
push
add
in
add
pushf
lods
mov
mov
push
xor
aas
lock
aam
dec
mov
xchg
lods
(bad)
and
mov
scas
enter
jl
dec
cmc
ror
ja
mov
fcomi
shl
add
dec
call
test
or
mov
inc
cmc
push
out
div
call
cdq
cmovnp
push
cdq
stc
push
in
sbb
inc
std
cdq
dec
(bad)
sti
dec
je
add
adc
into
(bad)
mov
sar
out
lea
mov
ja
nop
stc
jmp
push
jl
daa
scas
loope
fild
pop
arpl
xchg
pop
in
fidiv
mov
ret
push
sub
sbb
jl
inc
mov
fs
fwait
in
cmc
fst
adc
aam
dec
xlat
repnz
jg
int3
mov
adc
mov
outs
push
dec
mov
push
test
loopne
jmp
or
and
inc
inc
outs
and
fnstcw
dec
test
lock
jns
jge
rol
dec
mov
pop
pop
sbb
adc
mov
sbb
pop
in
adc
xchg
lods
dec
xor
push
scas
inc
inc
loop
fdiv
imul
mov
sbb
jle
jg
adc
xchg
inc
fcomp
jle
dec
(bad)
idiv
sbb
stos
push
xchg
jmp
lahf
adc
sbb
mov
mov
dec
jmp
popf
cmp
ja
ds
neg
icebp
jo
or
retf
mov
jg
adc
sti
pop
call
mov
fsub
dec
ss
mov
in
stc
mov
push
or
rep
daa
xchg
scas
mov
mov
test
mov
xchg
retf
cmp
jp
ret
pop
into
test
lods
adc
adc
push
xor
(bad)
pop
aad
jecxz
fisubr
sar
push
(bad)
pop
bound
xor
cmp
cmc
cli
and
mov
fild
jecxz
js
retf
jnp
arpl
mov
jb
daa
pushf
test
and
jle
rol
lea
ins
xor
push
pushf
(bad)
das
mov
mov
and
test
push
cmp
mov
aas
lahf
xchg
cwde
mov
sar
aam
(bad)
popa
cwde
xchg
sahf
pop
cs
dec
jb
jle
imul
push
les
dec
mov
mov
nop
aas
(bad)
int
xor
inc
loop
(bad)
jge
data16
xchg
fcom
mov
jp
cmp
test
movs
outs
fidivr
scas
and
mov
cmps
cmp
js
dec
or
out
xor
or
test
fcom
div
jp
adc
cmp
(bad)
inc
inc
inc
rcr
pop
ss
cmp
movs
sub
mov
mov
pop
mov
repz
inc
out
cmp
mov
(bad)
mov
int
cmp
lods
(bad)
add
scas
xor
fadd
test
ds
xor
hlt
scas
sar
mov
shr
mov
cmp
push
jo
(bad)
xor
push
repz
movs
push
dec
sbb
test
ss
pop
js
sbb
push
jns
in
jnp
add
xor
dec
je
ja
int3
jnp
cmp
icebp
push
mov
mov
cmp
nop
cmp
mov
scas
mov
repz
imul
fst
jmp
test
and
inc
shr
or
push
mov
mov
das
mov
push
(bad)
and
sub
or
(bad)
jmp
dec
int3
scas
in
ins
inc
or
ins
mov
jle
jb
add
pop
pop
fs
pushf
inc
shl
inc
outs
cmp
push
dec
lea
int
and
xchg
mov
push
dec
mov
gs
jne
sub
push
data16
push
call
fsub
and
push
lds
pop
ss
in
push
push
(bad)
jmp
out
pop
icebp
jmp
jo
jg
dec
loopne
pop
outs
imul
xor
inc
imul
lods
dec
xchg
dec
xchg
pop
xor
inc
cmc
(bad)
in
dec
rol
jno
and
(bad)
sub
push
sbb
or
loopne
xor
mov
inc
(bad)
in
(bad)
(bad)
xlat
and
xor
push
(bad)
or
jp
push
mov
rcl
add
call
adc
push
mov
jb
push
scas
in
ds
(bad)
in
adc
dec
xor
mov
sbb
ds
push
inc
pop
test
sahf
js
mov
mov
gs
sbb
(bad)
fwait
dec
leave
mov
cmp
xchg
ins
fcomp
ret
fnstenv
in
mov
sahf
fmul
bound
push
pop
movs
sbb
xlat
rol
dec
hlt
push
xchg
inc
mov
scas
retf
push
mov
add
std
dec
push
mov
xchg
push
add
pop
or
and
(bad)
arpl
xor
mov
add
jns
pop
stc
repz
mov
cmp
mov
popf
add
int
sub
sbb
les
cmp
jg
mov
pusha
jmp
mov
movs
rcl
push
clc
jbe
daa
ins
xchg
imul
mov
mov
dec
addr16
dec
dec
sbb
mov
int3
test
in
sbb
pop
iret
out
jo
jmp
imul
jnp
mov
mov
(bad)
and
sub
test
sbb
mov
cmp
add
mov
(bad)
or
ja
addr16
xlat
bound
mov
pop
retf
aam
int
sub
pusha
cs
xchg
inc
push
fnsave
inc
imul
cmp
loop
cs
xchg
shr
mov
sub
mov
push
mov
sub
jg
mov
jmp
pop
mov
dec
add
icebp
mov
std
cmp
pop
or
(bad)
(bad)
movs
fdiv
inc
xor
int3
sbb
lock
jl
mov
shl
push
je
shl
lea
mov
jae
mov
lahf
(bad)
add
sub
jb
ret
mov
pusha
lods
mov
pop
sbb
mov
and
adc
fwait
ds
test
lods
aas
push
scas
jbe
xchg
add
into
pop
pop
int3
adc
cmps
and
inc
iret
fwait
sbb
adc
push
cmc
fcom
adc
dec
mov
dec
ins
lock
iret
sub
mov
dec
and
sbb
inc
or
in
mov
xor
mov
cmps
retf
shl
outs
ret
push
xchg
cmp
jnp
pop
dec
mov
mov
cmp
push
popa
jo
lods
xor
mov
mov
adc
jp
arpl
retf
push
mov
mov
mov
test
fild
int3
mov
xor
std
imul
push
fldpi
lods
jnp
call
es
push
or
nop
jbe
jbe
pop
std
test
xor
xor
adc
idiv
pop
cmovb
mov
std
pop
aam
ret
jmp
xor
or
repnz
jne
ins
dec
xchg
add
inc
stos
xor
out
push
mov
push
cdq
mov
mov
jecxz
rol
fadd
adc
std
lods
xor
daa
mov
mov
and
push
daa
xlat
jmp
add
stos
nop
push
nop
xor
jae
xor
sub
sti
jno
or
movs
jmp
mov
fldenv
test
inc
sbb
and
(bad)
and
mov
mov
ja
sbb
mov
clc
sub
sahf
fcomi
mov
cmp
push
pop
cmp
sbb
sbb
cmp
fdiv
push
xor
jb
mov
stc
not
fsubr
fcomp
inc
(bad)
xor
ja
xchg
push
std
aaa
dec
(bad)
cmc
jecxz
adc
xor
xchg
bound
add
test
cmp
or
jecxz
cmp
repz
jmp
and
stc
and
sub
out
fst
outs
cmp
inc
rol
call
inc
and
(bad)
test
xchg
and
sub
call
sbb
pop
fisubr
pop
pop
mov
in
mov
mov
jo
jne
or
jns
xor
ret
into
shl
out
icebp
or
pushf
cs
xchg
and
mov
fnstenv
(bad)
pop
push
adc
push
cli
cmps
in
call
cld
dec
pop
cmp
and
addr16
adc
mov
mov
lds
mov
not
lea
shl
dec
cld
mov
push
and
ret
xor
scas
iret
ins
and
cmp
push
mov
out
xor
xchg
push
aad
and
push
xor
mov
dec
xchg
jle
ins
push
test
dec
push
lock
fdiv
sub
shl
enter
inc
push
ret
lods
(bad)
stos
imul
pushf
clc
sbb
push
in
cwde
sbb
push
jb
lock
jae
retf
mov
lock
pop
pop
sub
ds
adc
addr16
cwde
scas
stos
stos
iret
or
(bad)
inc
pop
fwait
out
pop
pusha
xor
inc
hlt
xor
push
shl
jne
mov
imul
jge
imul
dec
(bad)
(bad)
ins
ja
arpl
push
jg
push
jmp
and
movs
lds
push
imul
mov
mov
test
scas
imul
push
and
je
lds
sbb
xchg
fld
test
rcr
mov
jg
jl
imul
stos
(bad)
addr16
push
inc
jno
pop
jl
adc
push
lods
sub
pusha
jmp
xchg
push
test
fbstp
das
sub
mov
pushf
or
ins
imul
leave
ins
push
jne
push
dec
mov
mov
push
push
jae
out
lea
adc
lock
jno
xchg
(bad)
cwde
(bad)
stc
je
mov
inc
xchg
repz
bound
dec
cmps
jge
mov
push
outs
adc
pushf
ss
cmp
adc
jg
jmp
push
ret
inc
adc
inc
mov
imul
jno
sbb
inc
ss
xchg
rcl
xor
dec
js
fs
and
dec
add
mov
pop
cmp
dec
(bad)
xor
jp
pop
dec
test
and
in
sbb
data16
test
dec
sub
sahf
lods
(bad)
push
xchg
xor
add
pop
stc
inc
jae
out
fsub
pusha
xchg
jae
out
jmp
int3
jmp
(bad)
adc
push
sar
jmp
pop
jns
(bad)
loop
cmp
sti
adc
inc
or
xchg
in
xchg
sbb
leave
clc
mov
jl
mov
js
out
sub
fadd
xchg
xor
aam
xlat
sbb
pop
dec
sbb
mov
jb
adc
mov
push
dec
dec
inc
in
xor
push
push
mov
and
idiv
clc
daa
stc
adc
(bad)
inc
sub
mov
cmps
adc
les
loopne
push
mov
fidivr
mov
pop
cmp
pop
sub
jns
call
xor
inc
jbe
adc
ins
or
or
(bad)
mov
mov
popf
(bad)
push
dec
and
cmp
and
std
adc
cwde
mov
mov
(bad)
cmp
xchg
and
call
loopne
xor
and
inc
inc
fcomp
retf
mov
in
add
fnsave
inc
push
repnz
push
lock
js
shl
movs
push
jl
sahf
icebp
push
cmp
xor
pop
push
in
das
into
push
mov
loope
loopne
lahf
sbb
inc
lods
mov
(bad)
(bad)
retf
mov
imul
dec
sub
outs
retf
aaa
jno
ret
div
sbb
push
pop
fcmovne
sbb
test
sbb
loope
sti
push
mov
mov
dec
sbb
add
loopne
add
xchg
dec
ins
out
sbb
mov
dec
scas
sub
and
jae
cmp
mov
cmp
fcom
xor
jnp
fnsave
fisubr
stc
icebp
push
mov
adc
jns
repz
cld
or
mov
es
or
aas
and
jae
adc
add
jle
dec
int3
pop
adc
je
sbb
ins
cmc
ss
mov
pushf
jp
xor
xor
iret
call
xor
mov
test
jle
mov
cmp
cmp
hlt
cld
cmp
fsub
sub
or
je
retf
out
dec
xor
mov
inc
out
int3
pop
jae
and
push
cmp
movs
repz
popa
cli
stc
in
sbb
dec
mov
jecxz
cmc
xor
cwde
xlat
jge
jg
add
and
jno
jne
jmp
pusha
iret
adc
fidiv
add
fnstsw
and
jbe
repnz
inc
dec
lahf
mov
leave
sub
into
jae
mov
push
test
fcomp
data16
je
add
inc
ins
ds
push
imul
iret
ja
push
xor
sub
test
ret
movs
push
sbb
mov
rcr
cmp
(bad)
not
dec
jmp
xchg
and
mov
out
mov
fadd
cdq
sbb
add
pop
sub
mov
mov
mov
xchg
lock
retf
cmp
call
fcom
loope
movs
rol
imul
inc
add
jecxz
ins
or
sbb
in
add
fist
fs
jecxz
add
into
loope
pop
lock
es
imul
xchg
lock
pop
and
mov
fisub
add
adc
ins
pop
sub
mov
jge
(bad)
xchg
ret
mov
pop
inc
jge
jl
rol
data16
xor
icebp
(bad)
inc
mov
or
push
arpl
inc
leave
sub
mov
pop
lds
jge
sub
loop
mov
dec
repz
rcr
call
bound
in
jns
lea
push
mov
mov
jle
aam
push
sub
or
push
or
adc
ret
ret
arpl
xchg
leave
test
push
and
jp
daa
ss
bound
inc
mov
in
sub
out
or
and
pop
icebp
mov
dec
mov
les
or
sbb
mov
adc
repz
nop
xchg
xor
jo
out
ins
daa
xor
ins
in
mov
jne
fild
mov
stos
jb
pop
int
or
lods
(bad)
sub
cmp
xchg
les
imul
sub
aas
fwait
adc
push
push
sahf
jmp
pop
ret
or
arpl
es
into
jb
xchg
loope
jno
add
pop
xlat
sbb
in
xchg
jg
jp
mov
call
(bad)
dec
mov
out
shr
add
out
mov
adc
mov
xor
std
js
jge
lds
xchg
push
mov
sbb
pop
inc
xchg
or
dec
leave
cmp
jmp
das
neg
push
mov
jge
jecxz
dec
pop
scas
mov
cld
jno
add
rol
outs
cmc
outs
adc
test
inc
scas
jmp
data16
(bad)
ds
ja
add
xor
mov
cmp
les
jecxz
out
mov
and
jae
out
jp
pop
inc
enter
pushf
inc
in
daa
out
scas
cld
lods
retf
mov
inc
and
fidiv
arpl
pop
jne
int3
cmp
dec
mov
(bad)
sub
cmp
xor
mov
cmp
cmps
test
lds
cmp
pop
and
adc
sbb
cmp
repz
add
outs
loopne
retf
into
stos
cld
xchg
stc
pop
mov
je
cs
es
dec
mov
popf
dec
fcmovnu
mov
xchg
xor
jl
adc
push
popf
add
jne
retf
jb
fdiv
dec
push
pushf
adc
mov
push
mov
(bad)
add
ins
mov
shl
mov
xor
mov
mov
sbb
inc
or
jmp
cmp
mov
fsub
cmp
(bad)
imul
pop
push
pop
out
scas
es
(bad)
jb
jge
inc
out
xlat
mov
(bad)
shl
xchg
test
mov
cdq
test
add
jae
int3
push
xor
enter
or
repz
push
fcom
push
xor
loop
fcom
cmps
loop
mov
retf
(bad)
cmps
ds
adc
add
(bad)
out
jmp
cmp
dec
jg
add
xor
mov
lock
sub
pop
retf
dec
mov
ret
int3
out
jne
inc
lock
cmp
inc
aad
push
(bad)
jb
mov
stos
or
push
mov
mov
xchg
adc
mov
mov
pop
sbb
cmp
int
std
mov
jecxz
sbb
add
or
movntq
out
(bad)
sub
imul
aam
call
aas
scas
daa
xor
or
lock
mov
stc
inc
shl
cmp
(bad)
sbb
out
or
enter
imul
gs
adc
popf
sub
cmc
cmp
xchg
sbb
inc
mov
test
xchg
stc
cmp
test
jecxz
ds
jle
jno
cmp
pop
dec
das
cld
call
xchg
xor
sbb
mov
rcr
jbe
ret
mov
iret
jle
adc
repz
loope
xchg
xor
daa
push
retf
add
ds
addr16
and
imul
pop
add
cmp
test
cmp
mov
aas
cmps
mov
test
dec
loopne
cli
retf
cs
(bad)
mov
xchg
xor
pop
jle
call
ja
dec
ja
sbb
cmc
lods
fld
and
mov
(bad)
mov
in
cwde
cmps
mov
retf
rol
loope
dec
jb
sbb
sub
push
fistp
adc
sub
test
push
pop
cmp
repnz
mov
shl
pop
cmc
xlat
int
jl
rol
dec
in
(bad)
rcl
das
nop
pop
jecxz
mov
xchg
ret
repz
popf
sti
push
jb
dec
fld
stc
(bad)
aaa
pusha
cmp
xor
sub
sbb
in
jge
jo
addr16
xor
retf
imul
or
(bad)
das
jne
ins
and
daa
jmp
or
mov
xchg
adc
mov
add
inc
sub
dec
out
sbb
lahf
xchg
xor
movs
inc
sbb
push
cli
jmp
imul
scas
sbb
mov
pop
mov
(bad)
pop
shl
ret
loop
sahf
pop
scas
rcl
(bad)
fwait
jo
std
jmp
cmp
and
daa
(bad)
iret
jns
adc
pop
mov
xor
xor
dec
nop
cmp
dec
inc
sub
cli
imul
outs
je
cmps
mov
xor
inc
sbb
xchg
iret
mov
and
push
iret
xchg
dec
fsub
(bad)
fisttp
out
dec
(bad)
cmp
mov
pop
cs
mov
test
outs
pop
jp
add
cmp
imul
stc
cmp
stc
push
test
(bad)
mov
shl
mov
lahf
xor
jge
jmp
add
mov
dec
mov
add
sub
add
in
pushf
lds
cwde
add
or
cmps
mov
out
or
popf
jecxz
jbe
ins
or
sub
outs
out
push
pop
addr16
xchg
fadd
std
in
add
mov
mov
push
pop
jmp
mov
push
lahf
or
or
(bad)
push
cmp
popf
push
xchg
leave
xor
(bad)
xchg
mov
sbb
add
(bad)
call
out
mov
push
mov
pop
(bad)
cs
in
adc
mov
imul
or
jecxz
jns
pop
and
hlt
push
mov
cs
enter
ret
push
xor
push
jbe
and
ror
bound
pop
mov
pop
int
mov
adc
mov
mov
and
ins
inc
xor
jmp
and
cdq
mov
rcr
fisubr
pop
mov
lods
fwait
jno
fbld
call
dec
scas
pop
jp
lods
je
icebp
movsx
call
hlt
(bad)
out
push
push
leave
das
or
xchg
mov
push
mov
pop
int
cmps
mov
dec
sbb
jge
add
out
inc
(bad)
in
push
mov
es
not
sbb
xchg
mov
hlt
jmp
mov
mov
std
mov
push
test
inc
jp
jl
cmp
push
cmp
pop
inc
mov
mov
jnp
lods
adc
(bad)
mov
sti
int3
mov
cli
push
sbb
scas
push
mov
es
stos
jmp
inc
shl
jae
mov
fs
xchg
jae
jbe
xchg
and
pop
jg
imul
ret
(bad)
fcmovnb
mov
lods
pop
rcl
cli
push
loope
mov
daa
hlt
movq
jge
sub
shl
mov
repz
nop
fld
das
add
push
xor
pop
and
and
leave
inc
push
xchg
jmp
jl
sbb
cmp
ins
add
test
rol
ds
mov
dec
int
cmp
je
inc
add
push
pop
push
mov
test
fs
in
dec
push
jge
adc
sbb
in
mov
in
bound
(bad)
jmp
sbb
and
loop
imul
jne
push
add
retf
fdiv
and
push
arpl
jmp
in
add
cmp
and
xchg
cmp
in
rcl
fidiv
xor
or
sbb
fcom
pop
mov
daa
jecxz
ret
mov
xchg
dec
mov
aaa
sub
(bad)
lock
inc
adc
cmp
pop
dec
sbb
xor
push
int3
aaa
or
xchg
cmc
ss
cmc
(bad)
(bad)
lea
sar
xchg
movs
(bad)
dec
xor
mov
neg
ret
in
push
add
dec
lea
fsubr
sub
mov
jmp
cmp
mov
rcl
cmc
jp
mov
ret
ror
xor
cmp
push
in
push
jb
hlt
jnp
xchg
pop
iret
pop
or
adc
mov
shr
mov
dec
xchg
xchg
sbb
fisub
push
cmc
lods
arpl
add
or
cs
cmovae
and
(bad)
into
jbe
mov
fwait
sti
push
mov
lock
adc
mov
aam
or
push
sub
pushf
or
inc
sti
cmovns
jl
dec
inc
iret
imul
inc
sahf
xchg
rol
dec
pop
sbb
neg
push
push
dec
pop
sahf
pop
add
jb
mov
or
xchg
enter
cwde
mov
in
dec
loop
ds
iret
rol
xlat
clc
adc
push
jns
and
shr
imul
daa
and
xor
mov
call
add
nop
in
jns
push
mov
test
outs
pop
pushf
or
clc
mov
or
fistp
(bad)
and
mov
add
mov
add
push
outs
inc
ds
je
cmp
js
xchg
jno
jne
lock
shl
int
jmp
cmp
test
adc
lahf
adc
jno
push
adc
mov
pop
dec
ret
arpl
and
arpl
leave
mov
test
xchg
movs
mov
mov
push
xor
xchg
mov
mov
xor
out
in
mov
jno
jle
fs
je
cwde
mov
daa
aam
xchg
xor
mov
push
jmp
es
jge
mov
les
sbb
push
add
jno
out
imul
add
rcr
xchg
pushf
test
popfw
pop
sbb
lods
aad
sub
jl
inc
ins
int
mov
jo
js
pop
rcl
mov
sar
popa
pushf
mov
into
mov
mov
push
popa
popf
aad
dec
xchg
and
(bad)
adc
dec
retf
icebp
push
mov
(bad)
out
xchg
ret
mov
out
or
xchg
add
nop
or
and
gs
push
dec
loop
pop
mov
repnz
cmp
add
or
dec
and
push
ss
jmp
leave
add
inc
xor
iret
push
adc
jnp
out
fwait
mov
ds
cs
jecxz
loopne
push
xor
pushf
pop
cmp
test
and
(bad)
sub
scas
cdq
and
or
hlt
mov
cmp
outs
mov
sbb
xchg
out
mov
push
loope
lods
(bad)
(bad)
cmps
mov
jmp
mov
scas
push
fiadd
or
cmp
fdivr
nop
out
cmp
cmp
ret
repz
hlt
xor
cld
jge
xchg
push
or
retf
jno
push
or
adc
jmp
in
push
(bad)
imul
pop
sbb
fcom
(bad)
fidivr
aaa
xchg
test
(bad)
popa
xor
pop
mov
pop
enter
cmps
xor
push
pop
xor
or
rol
ret
rol
sbb
jg
daa
vcvtss2si
xchg
pop
cmps
xchg
mov
push
xchg
mov
stos
hlt
xor
imul
pop
iret
aad
add
daa
pop
lods
and
mov
ret
ror
mov
push
rcl
cmc
idiv
mov
ds
pop
or
(bad)
mov
nop
sub
xor
ins
jo
dec
mov
jae
jl
jns
jl
lea
(bad)
cld
xor
cmps
xor
push
in
clc
jns
ds
inc
test
xor
jno
dec
in
xor
cmp
push
fisubr
mov
lock
and
jg
inc
scas
(bad)
mov
test
data16
or
mov
pop
cmp
and
mov
mov
inc
mov
and
add
lods
fnstsw
arpl
mov
loop
test
sbb
cmp
loopne
loope
push
test
lods
adc
adc
mov
test
mov
pop
xchg
push
mov
mov
shr
js
jp
mov
or
adc
sub
ds
or
loop
or
mov
add
icebp
pop
test
pop
pop
imul
sti
lods
dec
add
push
xchg
or
int
push
cdq
pop
sub
mov
xchg
movs
mov
dec
xchg
stc
shl
test
mov
dec
jae
sti
or
sbb
popa
call
xchg
xor
push
(bad)
mov
ret
push
addr16
jecxz
ret
add
and
(bad)
xchg
mov
loopne
push
inc
sahf
push
scas
and
and
es
inc
mov
cmps
fsub
arpl
inc
lods
movs
jge
dec
dec
inc
jno
call
nop
mov
cdq
(bad)
and
mul
out
pop
in
rol
out
adc
ins
xor
pop
data16
cdq
int
mov
fbld
shl
icebp
aam
xchg
test
(bad)
aam
int3
inc
xchg
es
or
sbb
movs
jmp
mov
push
popa
adc
fild
nop
ror
mov
xlat
cmps
or
mov
lods
pop
and
out
test
nop
adc
enter
call
scas
scas
aad
arpl
(bad)
in
movs
pop
and
mov
out
enter
loope
sub
clc
dec
sbb
and
jg
push
int3
xchg
stc
mov
mov
(bad)
lods
pop
popa
mov
adc
(bad)
fdiv
fsubr
aas
lds
xchg
xchg
aam
sub
into
pop
inc
(bad)
pop
xchg
fwait
cmp
cmps
jne
dec
adc
push
mov
inc
inc
daa
jle
aaa
loop
sub
add
test
std
lahf
mov
jmp
dec
test
inc
in
dec
sub
cmp
push
out
mov
test
inc
int
aas
pop
loope
xchg
fisttp
sub
icebp
stos
mov
es
sub
and
lods
(bad)
out
pop
popa
outs
cmp
stc
stc
data16
(bad)
arpl
xchg
lea
jmp
xor
push
rep
mov
aad
call
mov
add
or
into
or
sar
out
cmp
add
stos
jbe
daa
test
push
pop
out
xchg
rol
jno
leave
ja
sbb
mov
add
add
mov
idiv
pop
hlt
pop
mov
jecxz
scas
add
push
and
(bad)
sbb
lods
jb
fistp
and
inc
sti
popf
js
cmc
fiadd
fidivr
out
sbb
sub
cld
sbb
out
scas
repnz
push
sub
movs
adc
shr
push
inc
ror
hlt
ss
sub
fmul
and
push
in
add
jmp
call
stc
imul
cmp
push
loope
xchg
mov
sbb
sbb
cli
and
mov
dec
dec
fcomp
jnp
xor
call
lahf
mov
add
adc
mov
dec
xor
lods
das
xlat
es
pcmpeqw
ror
pop
jmp
push
aas
lock
fmul
adc
lea
push
cmp
(bad)
ret
icebp
ret
inc
enter
inc
pop
dec
out
mov
jge
test
mov
or
mov
aas
fidiv
fidiv
call
mov
push
scas
scas
fdecstp
fcom
push
cmp
dec
es
push
ja
xchg
xchg
add
loop
enter
xchg
icebp
pop
add
inc
jle
stos
pop
sbb
je
inc
xor
ret
sbb
cmp
iret
mov
dec
outs
std
cmps
mov
mov
rol
out
add
test
or
xchg
mov
inc
pushf
movs
ins
mov
and
pop
sub
mov
aam
rol
outs
push
and
iret
outs
mul
mov
in
cmps
ins
mov
inc
repnz
or
inc
sti
mov
iret
(bad)
into
stos
mov
retf
icebp
imul
mov
popf
sub
dec
dec
or
and
ret
cmp
shr
dec
shl
dec
sahf
ffreep
mov
xor
fs
cwde
lds
into
scas
xchg
adc
(bad)
(bad)
sbb
sbb
sbb
dec
push
ins
fstp
add
pusha
and
repz
scas
mov
lea
xor
retf
pop
retf
out
adc
js
outs
lea
out
xor
xor
xchg
data16
dec
stc
in
mov
mov
scas
ret
loope
rcr
into
das
jp
lea
cmp
test
mov
dec
imul
stos
adc
jnp
adc
dec
sub
inc
and
inc
rol
ret
inc
leave
adc
mov
sbb
jmp
xor
jne
js
mul
xor
dec
shl
or
lds
jbe
mov
xor
and
nop
jbe
or
mov
cwde
sbb
pop
ins
sti
call
imul
ja
test
and
jo
xor
lods
jmp
jge
jb
cmps
(bad)
mov
mov
in
jg
pop
sub
xchg
stc
lahf
ss
js
xchg
sub
or
inc
ins
push
mov
xchg
imul
mov
(bad)
mov
jnp
push
sbb
test
cmps
push
int3
repnz
and
cmp
iret
xchg
fs
(bad)
jo
cmp
mov
push
xor
in
xchg
mov
push
and
jg
fwait
and
mov
sbb
jle
jne
loope
xor
(bad)
pop
iret
or
ins
mov
ret
pushf
dec
retf
(bad)
repnz
movs
mov
sbb
sbb
in
or
and
enter
sub
jne
cwde
imul
fisub
pop
call
movs
adc
loopne
in
mov
jmp
dec
sahf
fcom
popf
in
sub
or
repz
ins
xchg
push
push
mov
jb
call
imul
(bad)
jne
arpl
test
repnz
aad
aaa
inc
lock
jno
aaa
arpl
ds
and
iret
xchg
jo
mov
push
xchg
gs
add
lds
mov
(bad)
jge
into
leave
mov
or
pop
daa
push
fcom
mov
mov
repnz
pusha
pop
mov
das
add
xor
and
test
cmps
hlt
mul
push
add
imul
mov
mov
das
add
sbb
add
scas
mov
mov
pushf
fwait
xchg
push
or
push
cmp
adc
or
mov
ret
sub
rol
jmp
mov
in
enter
ror
shl
sub
(bad)
(bad)
jle
in
and
sub
and
test
(bad)
popa
xlat
aaa
in
push
push
jno
int3
jge
cli
and
add
addr16
dec
mov
stos
inc
sbb
lock
in
pop
cld
cmp
mov
add
out
out
inc
dec
dec
fist
dec
outs
repnz
and
jge
mov
xor
add
fnstcw
into
mov
sub
dec
inc
jmp
ins
ins
pop
retf
sbb
ins
mov
popa
inc
inc
icebp
(bad)
les
std
xor
xor
loope
ss
sub
shl
xchg
add
push
daa
call
sub
std
fcom
xor
xchg
test
rcl
sub
cmp
jb
call
sub
cld
pop
xor
sti
sbb
mov
adc
(bad)
out
jns
ror
js
and
push
lea
inc
aaa
adc
(bad)
jl
dec
mov
sbb
add
ja
jne
out
fimul
mov
movs
orps
or
cld
xor
adc
inc
std
push
mov
cdq
int
stc
xchg
popf
pop
scas
inc
mov
dec
outs
loop
push
mov
cmp
imul
mov
sti
mov
mov
je
(bad)
mov
add
add
mov
fadd
xlat
fld
inc
shr
adc
mov
add
out
and
sbb
add
cmp
mov
push
rcr
push
sub
mov
aam
ds
mov
imul
sbb
in
cmp
imul
stos
mov
in
push
jmp
(bad)
in
(bad)
mov
or
cmp
add
sbb
cmps
add
jo
cmp
fs
mov
je
sub
jne
cmp
mov
not
js
(bad)
push
sbb
movs
in
out
xor
mov
in
shr
inc
shr
rcl
outs
and
fs
sahf
mov
push
sahf
dec
dec
cmp
mov
xor
mov
sub
cmp
je
and
scas
cli
jmp
ret
jge
jae
mov
cmps
jmp
into
sub
ret
inc
push
xor
out
shl
or
cmp
lock
ins
ds
movs
into
fadd
fwait
jb
leave
mov
dec
pop
ret
ret
xor
push
xchg
(bad)
cli
out
cmps
adc
add
mov
call
test
xchg
push
(bad)
fcomip
cli
pushf
data16
jle
in
and
shr
sub
out
inc
dec
jmp
fldln2
sub
(bad)
(bad)
in
(bad)
and
popa
pop
dec
ret
std
or
adc
mov
mov
imul
push
dec
lahf
and
inc
nop
int
add
push
je
test
aad
or
pusha
cmp
aam
dec
add
dec
or
sbb
sub
push
icebp
push
and
adc
push
jecxz
test
pop
out
or
dec
mov
inc
int3
pop
xchg
jmp
adc
pop
push
scas
out
sub
enter
add
or
sbb
xor
xor
xlat
push
int3
xchg
jo
sbb
mov
mov
mul
or
imul
sub
jnp
sbb
gs
in
xor
xchg
test
gs
push
(bad)
adc
add
into
inc
addr16
cmp
push
inc
mov
mov
jp
push
(bad)
jo
dec
fst
repnz
aam
xchg
sbb
aam
cli
sub
xchg
inc
push
aad
xor
sub
int3
ss
and
iret
push
popa
lds
jg
and
and
push
cmp
(bad)
out
sbb
inc
imul
push
(bad)
cli
jmp
lods
out
dec
and
sbb
cmps
sub
addr16
inc
sti
add
mov
adc
into
ja
cwde
pop
jns
inc
jb
in
sub
rcr
(bad)
sbb
mov
dec
fst
ins
mov
jmp
xor
jg
jecxz
adc
pop
push
cmc
out
out
dec
ins
mov
mov
sub
out
lds
xchg
mov
loope
and
xchg
mov
(bad)
aaa
inc
and
push
jno
fwait
push
mov
pop
jle
popf
sar
ret
sub
xor
inc
(bad)
(bad)
movs
dec
xor
out
cmc
adc
call
inc
cmp
sub
sti
mov
int
dec
outs
mov
sub
mov
push
es
rcl
jle
mov
push
jno
xlat
xchg
and
dec
js
shr
loopne
jge
inc
(bad)
xlat
sbb
bound
lods
arpl
dec
pop
and
inc
or
pop
int3
cs
fcomp
imul
stos
call
dec
imul
sub
cld
mov
cs
mov
add
and
loope
or
(bad)
pop
mov
sub
push
xchg
push
outs
sub
pushf
inc
mov
push
pop
stos
and
xor
(bad)
fs
cmp
sbb
xchg
sahf
and
ins
nop
lods
fistp
push
pop
fwait
add
iret
outs
pop
sub
mov
jge
sub
pop
jns
pop
lea
inc
out
add
or
mov
in
std
pop
ret
mov
in
mov
shl
lods
fnsetpm(287
retf
pop
push
out
pop
addr16
mov
imul
mov
and
call
add
ja
and
mov
cmc
cwde
fnsave
dec
sub
aaa
mov
scas
outs
add
xlat
popa
pop
mov
sbb
ficomp
or
js
inc
jns
jb
fsub
movs
call
icebp
arpl
adc
sbb
hlt
push
sbb
mov
mov
xchg
aas
push
mov
jmp
ret
push
or
xchg
fsub
aad
xchg
repnz
add
lea
js
fsubr
sbb
(bad)
xor
pop
lahf
daa
mov
mov
in
dec
push
out
cmc
shl
sub
or
push
sbb
gs
cmp
(bad)
mov
push
push
adc
retf
sahf
lock
xor
pop
fdivrp
in
test
into
aas
and
pop
add
and
jnp
fiadd
enter
call
adc
push
adc
ja
fcom
sbb
(bad)
and
adc
cwde
loopne
aam
add
jmp
push
pop
xor
jmp
inc
dec
add
(bad)
pop
ror
xor
mov
pop
outs
ja
pop
jg
jae
xchg
sbb
retf
fadd
mov
out
data16
push
dec
out
imul
jg
dec
imul
hlt
sbb
jbe
daa
mov
into
push
push
pop
push
xchg
jnp
lods
movs
xor
mov
cmp
jge
sti
sub
fcmovbe
int3
adc
or
les
(bad)
jmp
seta
push
inc
dec
pop
inc
sbb
rcr
mov
lock
test
cmp
dec
mov
es
xor
out
repz
inc
imul
iret
jmp
add
pop
xor
sub
mov
mov
mov
sub
aam
sub
in
pusha
jmp
jmp
add
dec
jecxz
mov
js
test
xchg
xlat
sub
xor
xor
loopne
xchg
pop
in
test
sbb
(bad)
pop
iret
adc
pop
push
pop
and
pop
inc
pop
cmp
xor
jge
dec
popa
and
cs
sub
data16
push
cs
in
adc
in
cmp
out
or
mov
or
sub
popf
stos
cmp
outs
mov
loopne
jmp
jo
out
jmp
adc
jmp
into
aad
out
out
repnz
jp
cmps
dec
(bad)
gs
(bad)
sbb
data16
cmp
jbe
test
lahf
push
sub
pop
xor
push
inc
pusha
daa
mov
mov
lods
sub
xchg
neg
xor
mov
fld
fcom
push
or
das
cmp
fisttp
inc
cwde
fwait
sbb
and
cdq
pop
jbe
dec
sbb
sub
jmp
hlt
mov
lods
add
mov
mov
and
jmp
out
add
hlt
push
fwait
mov
test
pop
(bad)
mov
pop
hlt
(bad)
pop
scas
pop
ret
stc
in
bound
jle
xor
pop
xchg
mov
mov
mov
mov
shl
jg
fucomip
cmc
adc
pop
lds
pop
xchg
or
ds
call
hlt
jg
push
cmp
ror
fwait
idiv
es
out
add
push
lds
pop
pop
imul
int3
pop
mov
fsub
nop
and
xchg
call
repz
loopne
ja
or
jge
xchg
std
stc
daa
jmp
mov
pop
xlat
sbb
xchg
add
call
sbb
fcmovnb
cdq
pop
sbb
lods
imul
test
xor
pop
shr
pop
aas
stos
jge
jg
xchg
test
sbb
(bad)
fcomp
lahf
rcl
adc
leave
push
(bad)
js
sar
add
loop
push
mov
int
int
jge
rcl
imul
fidiv
adc
xor
or
cld
fadd
(bad)
dec
ds
add
iret
jmp
je
pop
add
mov
movs
cmp
std
mov
push
mov
xor
add
adc
std
jmp
sar
loope
mov
fadd
xchg
jb
(bad)
inc
jbe
test
cmp
add
cmp
cld
jg
push
push
mov
lahf
mov
xor
and
out
fiadd
fcomi
mov
and
(bad)
mov
inc
jg
stos
cdq
rol
inc
daa
lock
mov
clc
pop
xchg
js
loopne
adc
add
fsub
cdq
std
dec
jle
jbe
cs
inc
aad
gs
gs
ficom
xchg
jbe
sti
lods
iret
pusha
mov
in
imul
loopne
cmp
aad
cmc
mov
int
fistp
mov
int3
enter
jmp
cdq
and
and
jbe
dec
mov
mov
mov
push
jbe
xchg
shl
repz
cmp
sbb
xchg
out
mov
rcl
cld
ror
shr
fwait
movs
or
into
sbb
or
lahf
(bad)
mov
mov
dec
push
daa
popa
stc
call
pop
inc
enter
cmp
(bad)
jno
and
neg
xor
mov
outs
inc
add
into
das
xchg
push
aad
aad
into
int
mov
lock
rol
pop
add
sbb
out
and
sub
dec
cdq
dec
cmc
in
icebp
stc
(bad)
iret
and
test
xchg
mov
sub
inc
or
arpl
test
inc
leave
cmps
and
cli
jecxz
lea
inc
cs
jg
js
ret
mov
dec
iret
out
or
rcl
and
ins
stos
mov
inc
int3
imul
pop
cmp
pop
in
pop
dec
xor
cmp
fcomp
shl
in
cmp
fisub
shl
ja
xor
xlat
and
sbb
mov
cmp
icebp
jae
lods
sbb
or
mov
or
je
ret
dec
(bad)
in
push
inc
inc
sub
cwde
leave
gs
sbb
call
mov
lds
jmp
ss
scas
test
xchg
push
stos
jecxz
test
dec
xor
dec
iret
test
mov
outs
fnsave
js
sbb
lds
pop
push
jmp
push
cmc
and
push
mov
mov
dec
lock
adc
ffreep
cmp
push
sub
call
mov
or
mov
rcl
stos
cmc
jle
int3
or
cmp
hlt
jp
sti
push
in
out
pop
test
leave
ret
inc
shr
popf
js
xchg
cmps
pop
dec
mov
mov
mov
inc
lock
dec
jo
sbb
push
mov
stos
fsubr
mov
fild
lahf
in
jns
push
sbb
cmp
mov
(bad)
inc
neg
cmp
pop
data16
int
movs
scas
jmp
loope
pop
fist
js
or
mov
mov
addr16
xor
jmp
(bad)
aam
lods
xchg
cmp
fmul
cmp
int
stc
push
lods
lock
xor
push
mov
dec
dec
mov
fwait
push
pop
stc
enter
push
(bad)
inc
call
rcr
stos
push
cmp
mov
addr16
repz
push
shl
sub
xor
cmp
and
(bad)
jnp
sub
in
push
retf
mov
ins
pushf
mov
add
pop
pop
into
sbb
add
mov
pushf
push
pop
sbb
cmps
pop
jbe
xor
cmp
fist
vpextrw
lds
loopne
loopne
xchg
push
jecxz
into
adc
pop
mov
adc
mov
push
mov
pop
push
jb
fistp
sbb
push
arpl
jns
sbb
sbb
inc
mov
xchg
dec
push
push
in
cmp
pop
loop
add
xor
imul
fs
sahf
sar
test
test
daa
rol
mov
push
sub
push
add
jbe
adc
or
and
mov
xor
jmp
pusha
xor
iret
(bad)
test
aad
rcr
retf
push
aaa
mov
lahf
xchg
mov
in
jne
fidiv
rcl
mov
(bad)
or
mov
xchg
xor
cmp
jae
xchg
pusha
mov
nop
(bad)
jnp
xchg
xor
mov
add
push
mov
fsubr
les
or
mov
pcmpeqb
lods
push
inc
in
stc
clc
or
aad
inc
pop
cmp
jecxz
add
aaa
xchg
movs
xchg
fadd
into
fsubr
jno
inc
push
fsub
mov
fadd
dec
jae
mov
mov
sahf
pop
jo
aam
xchg
cmps
ficom
das
mov
inc
pop
sub
(bad)
mov
push
inc
jo
and
lock
std
mov
cmp
adc
nop
inc
retf
fisttp
push
pop
cwde
mov
pop
push
test
test
test
sbb
aaa
ins
retf
dec
xor
dec
mov
jbe
adc
pusha
bound
jge
add
div
retf
stos
xor
addr16
jne
cmp
in
pusha
inc
jl
sbb
test
iret
fst
mov
ja
in
push
(bad)
mov
mov
or
ror
jmp
xchg
jb
in
pop
cs
or
arpl
xlat
pop
mov
popf
sbb
ss
or
jmp
sub
lahf
jge
cmp
sbb
cmc
movs
xor
mov
int
sbb
inc
sahf
jle
leave
mov
ret
cmp
test
xor
(bad)
mov
pop
mov
dec
xor
mov
dec
adc
jbe
pop
mov
rol
pushf
pusha
add
sbb
test
(bad)
jnp
ror
ss
xchg
call
lds
int3
lahf
push
jae
popf
das
sub
fld
std
jb
stos
mov
or
pop
shl
movs
fidiv
scas
stos
push
(bad)
xchg
hlt
fdivr
hlt
call
cs
ror
sbb
mov
int
jl
shl
test
fst
cmp
fisttp
push
inc
and
enter
jl
xchg
mov
(bad)
pusha
add
iret
retf
add
dec
xor
into
movs
pusha
out
push
mov
sbb
repz
int
stos
jbe
js
pop
fnstcw
rol
cmps
pop
push
mov
sub
ins
push
imul
cwde
push
add
das
pop
dec
adc
sub
and
test
and
xchg
push
or
mov
js
mov
test
lods
ss
scas
mov
mov
and
arpl
inc
stc
(bad)
jle
sbb
pop
(bad)
sti
fcomp
xchg
mov
es
clc
and
dec
out
fnstsw
test
sub
ss
std
jb
pop
mov
out
jecxz
in
xchg
adc
push
addr16
cmp
jp
aas
or
(bad)
(bad)
das
stos
icebp
iret
les
jl
push
jecxz
add
es
or
ficom
and
ds
xor
test
cmp
sahf
into
mov
or
(bad)
jl
mov
push
int
repnz
mov
jb
inc
xchg
adc
or
push
jns
mov
stos
in
retf
js
push
div
jbe
js
out
cs
mov
(bad)
shl
push
xchg
push
or
mov
ins
inc
xchg
aad
rol
xlat
pop
and
ret
ins
hlt
dec
popa
cmp
mov
sbb
sar
add
addr16
dec
push
nop
jle
sbb
mov
push
retf
push
ret
sub
jl
outs
xchg
clc
hlt
xchg
and
jo
(bad)
sub
ins
jle
jle
xor
fdiv
mov
es
mov
arpl
adc
retf
inc
xor
cmp
or
push
sub
dec
mov
(bad)
cmc
stos
xchg
xchg
jl
pop
and
call
mov
push
cdq
ja
daa
mov
sbb
fdiv
test
aas
mov
jg
sar
(bad)
outs
sahf
ret
inc
lods
jno
ror
cmp
out
loopne
cmps
jne
int
pop
stos
mov
jbe
and
out
inc
sub
dec
pop
cmps
mov
and
pop
jno
lods
mov
dec
adc
(bad)
retf
(bad)
das
hlt
xchg
daa
sbb
shl
leave
arpl
dec
jb
add
xor
int
push
mov
sbb
sub
xchg
inc
jbe
lea
js
sbb
mov
mov
jmp
outs
sbb
push
lock
call
mov
iret
push
cmp
mov
dec
adc
and
loop
xchg
fimul
fcom
aad
(bad)
dec
xchg
je
sbb
xchg
dec
lds
gs
imul
lds
mov
into
(bad)
xchg
out
ret
movs
xchg
int3
mov
in
lds
jmp
mov
xchg
pop
push
xchg
lahf
ss
add
push
enter
ror
je
arpl
push
cld
and
or
xor
and
or
in
jp
das
mov
mov
push
mov
mov
idiv
push
pop
sti
ins
add
rcr
add
xor
pop
loop
cmps
clc
xor
xchg
adc
adc
push
hlt
ficom
and
jmp
pop
push
or
(bad)
call
sub
sbb
pop
leave
xchg
sub
jnp
and
inc
(bad)
jge
mov
cmp
js
cli
loop
xor
mov
stos
popa
xlat
imul
popa
push
bound
dec
jmp
xchg
fld
sub
cmp
into
sbb
dec
add
mov
xchg
mov
stos
jnp
outs
jo
xchg
lds
mov
(bad)
jge
or
movs
cmp
aam
xchg
mov
out
pop
cmp
(bad)
outs
mov
xchg
sub
or
ret
movs
and
push
sub
jo
(bad)
xlat
adc
or
jbe
pop
hlt
loop
aam
scas
js
adc
popf
outs
pop
aam
and
jmp
mov
pop
mov
clc
test
addr16
xchg
jmp
jnp
push
int3
iret
jae
das
lods
jbe
mov
and
dec
cli
call
cmp
dec
mov
push
xchg
mov
adc
add
(bad)
and
jecxz
out
(bad)
fcom
in
mov
(bad)
out
inc
sub
xor
sbb
xchg
(bad)
(bad)
loop
push
out
sbb
adc
push
add
enter
jmp
cmp
mov
in
sbb
pop
push
ins
inc
repnz
(bad)
push
inc
mov
repnz
in
add
xchg
jg
clc
out
jp
mov
dec
sub
mov
lods
fidivr
xor
icebp
xor
jns
cmc
add
sti
cmp
cmps
mov
cmp
cli
cmc
pop
xor
test
adc
(bad)
js
inc
cli
cmp
dec
xor
pop
popa
stc
ret
fcmovbe
cmp
imul
and
clc
adc
stos
test
and
cmp
jmp
inc
xor
and
imul
adc
and
imul
adc
dec
dec
sub
fcomp
sub
pusha
rol
bound
aad
jl
test
std
and
add
(bad)
(bad)
fcom
scas
lea
nop
rcl
or
push
sbb
retf
adc
or
sbb
dec
xor
add
add
pop
into
jp
sub
and
cmps
and
or
cmc
add
push
xor
mov
bound
enter
lea
movs
mov
jbe
imul
daa
mov
imul
pop
rcr
repnz
jns
adc
in
es
or
inc
push
popf
pop
nop
in
movs
and
outs
and
cli
pop
xchg
in
or
(bad)
push
(bad)
movs
push
(bad)
hlt
push
ds
repnz
and
pushf
jo
mov
adc
mov
(bad)
sub
fsubr
dec
xchg
push
inc
mul
xor
xor
cmc
mov
pop
stos
in
push
lahf
inc
mov
scas
xor
ret
test
mov
mov
push
add
pop
stos
aam
mov
fcom
xchg
vandnpd
jb
mov
sbb
and
cld
push
push
fist
push
cmp
les
loop
push
cmps
fist
or
mov
pusha
inc
add
push
push
icebp
pop
adc
out
mov
(bad)
test
es
pop
stc
inc
adc
dec
lods
repz
or
stc
movs
xor
std
sub
xchg
bound
sbb
sbb
or
out
das
mov
and
fild
ret
cmp
adc
pop
dec
sub
mov
mov
(bad)
out
add
shl
and
fisttp
retf
and
sub
push
stc
sbb
inc
gs
jge
shl
mov
mov
mov
add
cmc
arpl
ret
push
sahf
aad
mov
(bad)
push
and
in
dec
(bad)
sub
pop
aas
mov
fild
dec
retf
pop
rol
ror
lea
retf
mov
pop
dec
xchg
xchg
and
xor
push
sbb
sub
jb
movs
int3
pusha
inc
out
and
mov
shr
pop
ss
sbb
jmp
mov
arpl
push
test
lds
pop
mov
pop
aas
(bad)
sti
(bad)
mov
and
(bad)
mov
test
mov
shl
gs
cmp
xor
adc
xor
bound
out
dec
push
pop
mov
add
push
push
inc
mov
sbb
enter
fist
ins
mov
rcr
cmp
into
inc
push
mov
mov
cld
dec
jo
or
test
lahf
jmp
shl
sub
xor
mov
sbb
add
cwde
addr16
inc
pop
dec
inc
pop
stos
jmp
mov
jecxz
jmp
mov
movs
fnstcw
lds
(bad)
das
fs
fldcw
iret
or
push
mov
dec
inc
mov
scas
pop
pop
inc
inc
sub
cwde
jnp
inc
clc
push
cmp
jne
mov
xor
out
cmp
sub
and
outs
push
cmc
mov
pop
sti
push
xor
dec
cli
push
or
(bad)
fistp
push
dec
push
ds
cmp
(bad)
stos
test
sub
mov
mov
sbb
hlt
jmp
das
out
dec
push
cmp
xchg
hlt
jne
inc
xchg
push
in
push
push
pop
sub
es
inc
inc
xchg
fisub
pop
xchg
les
ins
fist
lds
rcl
inc
lahf
inc
jle
call
inc
fisub
sbb
or
mov
in
cdq
setnp
dec
and
push
pushf
mov
add
mov
xor
out
dec
jp
add
sub
dec
mov
dec
mov
jg
(bad)
pop
lods
inc
and
repnz
cs
(bad)
jmp
mov
ins
xchg
jno
pmullw
push
adc
inc
jnp
scas
mov
jb
sub
push
adc
call
ins
hlt
gs
popf
mov
(bad)
sub
cmc
pop
lds
sbb
fcomp
ret
mov
(bad)
dec
and
xchg
rcr
sub
daa
ins
mov
mov
cmp
sahf
inc
dec
mov
dec
int
gs
jno
popa
lods
mov
daa
int
mov
or
fs
outs
add
test
or
xor
sahf
dec
iret
mov
jb
push
jne
frstor
push
ss
fbld
adc
jecxz
mov
mov
(bad)
std
mov
mov
jae
pop
cmps
push
lods
loope
add
ret
das
inc
or
in
push
or
test
jecxz
out
mov
popa
pop
fbstp
leave
mov
lock
mov
inc
and
jp
mov
gs
add
jno
pop
cmp
jl
mov
ja
mov
out
movs
mov
ss
in
int
(bad)
or
mov
adc
aam
stos
push
sbb
mov
ret
inc
sbb
lods
push
inc
daa
loop
mov
fwait
or
es
jg
cmp
push
jae
outs
jle
test
and
cmp
and
fnstenv
xor
stos
adc
stos
das
enter
lahf
sbb
xor
retf
movs
jb
push
fld
repz
sub
add
dec
and
push
test
daa
rcr
stos
jb
inc
push
pop
xchg
mov
cwde
in
stos
and
mov
mov
lods
xor
movs
push
dec
fsubr
xchg
popa
inc
or
jmp
mov
and
sbb
out
ins
dec
int3
mov
pop
fbld
mov
or
cmc
faddp
add
dec
cmp
add
or
loopne
jl
ins
dec
stos
adc
les
or
adc
and
and
push
cld
or
es
movs
stos
daa
rcl
lods
loopne
sahf
mov
repz
and
(bad)
sbb
push
cmps
fadd
shl
test
cmp
out
rcl
sbb
enter
push
ss
lea
sahf
idiv
in
lods
xchg
shl
mov
mov
sar
das
mov
mov
out
les
mov
and
das
mov
out
out
pop
daa
push
test
add
xchg
into
sbb
scas
ds
jg
add
pop
pop
jae
jb
pop
(bad)
mov
or
fcmovnu
sbb
cmp
(bad)
in
lods
xor
mov
js
push
rcr
cmp
gs
in
xor
shr
cmp
jne
aam
mov
lahf
sti
jb
and
cld
pop
mov
jge
out
test
or
shl
loop
out
jp
dec
xchg
cmp
jg
fdiv
loop
xor
cmps
dec
pop
inc
inc
mov
mov
sbb
pop
adc
loope
and
push
push
inc
inc
aaa
adc
inc
arpl
in
imul
sub
cmps
loope
scas
sti
mov
adc
jmp
xchg
cmps
mov
dec
mov
push
pop
je
jb
pop
mov
lock
push
or
mov
addr16
mov
mov
jb
push
cmp
mov
jbe
or
aas
fisttp
cmc
mov
in
test
xchg
push
inc
in
dec
xchg
jmp
call
sbb
les
adc
push
or
xchg
xchg
sahf
sub
sahf
sub
clc
lock
stc
sbb
lods
mov
cdq
js
fisttp
mov
pop
mov
ror
stos
mov
jmp
in
fidivr
xor
adc
dec
mov
sub
mov
dec
and
int
mov
mov
jnp
(bad)
stc
shl
adc
repz
jle
stc
test
mov
inc
push
xchg
ja
(bad)
cld
push
fnstenv
sbb
test
inc
cmp
lahf
jnp
and
jge
js
push
adc
inc
cmp
add
sbb
sub
ror
xchg
sub
add
jne
or
dec
gs
in
xor
sbb
std
mov
clc
push
shl
xchg
sub
loop
push
ret
pop
jecxz
cwde
sub
mov
xchg
push
pushf
dec
loope
mov
jae
pop
ror
cmp
mov
mov
lds
push
xchg
sbb
and
push
sbb
mov
inc
ret
mov
xor
push
test
pop
jo
push
mov
sbb
in
mov
adc
sahf
mov
jmp
add
jne
and
xlat
lods
push
xor
lods
cmp
add
ins
push
aam
xchg
jl
std
mov
dec
aad
ins
or
hlt
scas
add
mov
or
push
rcl
test
mov
scas
or
inc
xchg
and
sub
xchg
pop
mov
ret
cmps
mov
(bad)
les
mov
inc
dec
pop
call
jmp
in
mov
adc
mov
cmc
push
rcr
leave
es
in
push
repz
pusha
mov
nop
inc
out
(bad)
ins
jle
jl
push
cmps
xchg
cli
(bad)
fild
mov
call
mov
adc
int
stos
push
mov
push
fnstcw
daa
jmp
jle
sbb
push
push
pop
shl
out
mov
call
mov
jae
lds
jge
xchg
and
fstp
daa
xchg
lds
sbb
mov
cmp
enter
sub
ds
dec
call
mov
sbb
push
mov
jo
lods
add
ret
out
lods
scas
mov
or
add
inc
pop
dec
mov
imul
ds
ss
dec
fwait
xchg
out
clc
cmp
sub
mov
enter
cmps
or
mov
call
sub
stos
sub
fidiv
sub
jmp
dec
scas
mov
sub
popa
nop
daa
xor
push
mov
cs
js
sahf
pusha
push
icebp
mov
fisttp
ret
pop
pop
dec
cli
inc
and
push
enter
cli
iret
loope
outs
imul
leave
jo
addr16
ss
bound
mov
jge
sbb
das
mov
cmp
(bad)
retf
fld
add
and
cmp
stos
retf
mov
loopne
mov
inc
add
int3
movs
nop
fs
push
jbe
stos
adc
push
push
sbb
outs
inc
leave
out
xchg
add
xchg
fldenv
cmp
pop
popf
fsubr
retf
dec
or
mov
inc
sti
test
xchg
rcr
aas
mov
and
xchg
ret
cs
add
mov
hlt
jae
fnstenv
inc
into
iret
pop
sub
pop
pop
stos
aam
test
jmp
scas
inc
popa
aas
data16
leave
rcl
pop
cmp
push
frstor
or
sti
lds
dec
lock
push
dec
cwde
add
pop
dec
ins
mov
stos
xor
inc
and
ror
(bad)
fstp
punpckhdq
ss
in
or
rcr
daa
retf
in
mov
jbe
pop
int3
xchg
sbb
mov
cmp
dec
rep
or
adc
and
jne
inc
cld
test
dec
ret
xor
jnp
mov
adc
push
test
ss
rcl
clc
xor
xor
sbb
push
lods
out
ja
adc
fs
mov
mov
cmps
cmps
xor
call
jmp
pop
mov
xor
and
cs
bound
bound
sbb
xchg
lods
lahf
fbld
inc
pop
dec
push
pop
int
push
jecxz
jecxz
mov
mov
xchg
stos
or
jnp
or
mov
or
xor
or
(bad)
pusha
test
push
(bad)
push
cmp
sub
jne
loopne
xchg
fdivr
scas
cwde
into
xor
mov
mov
xchg
je
jg
aas
fs
mov
dec
out
or
hlt
movs
sbb
and
shr
xchg
cwde
push
retf
mov
jp
jne
inc
inc
add
add
inc
pop
adc
(bad)
mov
push
cmp
sub
arpl
jmp
ror
push
sti
sub
push
xor
icebp
sbb
(bad)
shl
push
fbstp
lods
daa
into
pop
pop
pop
fnstenv
or
mov
xor
push
jg
lods
sti
lea
adc
xor
mov
aad
inc
sti
push
in
js
in
aad
or
sbb
pusha
mov
pop
fcomp
scas
and
cld
jns
jg
mov
push
xor
add
xor
sub
aas
std
aaa
mov
pop
add
cmp
gs
mov
jno
jb
jp
cs
hlt
mov
es
fidiv
mov
pop
pop
mov
stc
pop
pop
(bad)
sub
mov
in
mov
(bad)
add
jl
fisttp
xor
lods
push
sti
and
dec
pop
fwait
adc
rol
out
push
jmp
(bad)
or
sbb
into
push
jecxz
aas
repnz
adc
push
retf
cmp
jp
push
push
sub
and
shl
nop
fadd
add
(bad)
adc
call
mov
add
or
jns
add
dec
mov
ds
xor
sbb
jge
xchg
out
pop
push
push
dec
cmp
or
stc
xor
out
in
push
jmp
out
pop
xchg
mov
out
sub
xchg
dec
fs
aam
popf
and
aaa
movs
adc
(bad)
and
push
xchg
dec
cmp
xchg
adc
iret
ins
test
sbb
xor
ins
adc
cmp
movs
cwde
or
sti
in
fwait
mov
sub
mov
cld
fidivr
shr
movs
lods
ins
icebp
mov
jo
or
clc
jb
leave
dec
into
aam
bound
jmp
adc
or
daa
rcr
jecxz
pop
inc
mov
cmp
add
hlt
sub
mov
xchg
cmps
mov
sar
mov
(bad)
sub
fdecstp
outs
lds
cli
jne
push
imul
pushf
dec
or
adc
psubq
jle
out
xor
sub
xor
retf
shl
xchg
push
push
push
lds
int
lea
sub
xor
mov
scas
in
sbb
leave
dec
movs
imul
add
jo
aam
sti
fs
fbld
inc
pusha
dec
push
(bad)
or
pop
lea
add
int3
bound
jmp
inc
jg
jb
movs
mov
jecxz
push
loopne
ss
lahf
mov
inc
popa
stos
clc
sbb
mov
push
mul
and
or
jo
inc
je
push
xlat
loopne
(bad)
pop
push
push
mov
xor
or
mov
aaa
jmp
addr16
sbb
inc
stos
dec
fistp
xchg
sbb
cdq
ret
rol
in
mov
cs
sub
push
cmp
push
js
imul
push
dec
ss
add
dec
lods
push
loopne
dec
push
or
sub
mov
inc
sbb
leave
xor
sub
and
xchg
aam
repnz
popf
xchg
sbb
adc
cmp
addr16
xor
pop
arpl
sub
int
jnp
shl
jmp
xor
push
mov
xchg
js
aad
xor
aam
fidiv
cs
add
jg
call
ins
aas
mov
lods
xlat
jns
mov
mov
or
daa
ins
sbb
and
jbe
mov
inc
or
or
jae
push
xchg
adc
jb
test
sub
imul
sub
xchg
shr
sub
in
mov
das
iret
cmp
mov
call
push
lds
jmp
lock
xchg
dec
shr
add
sub
lock
adc
repnz
push
xchg
repnz
clc
test
add
(bad)
cdq
inc
push
pop
mov
bound
xor
sub
xor
pushf
ret
fnstcw
pop
inc
xchg
add
call
mov
jo
minps
xor
leave
cmps
scas
imul
adc
cmp
dec
lock
out
pop
fild
in
rcl
push
jae
pop
mov
je
mov
ficomp
dec
mov
ss
(bad)
jg
cmp
sub
adc
sub
arpl
jae
xor
push
xlat
lahf
sub
ins
xor
in
jno
mov
aam
pop
adc
dec
cmps
cmp
ins
xlat
and
stos
and
pop
not
int3
sub
push
sub
xchg
adc
mov
and
sub
loop
cs
or
add
cld
mov
xor
in
mov
stc
adc
movs
popf
ror
or
pushf
jge
and
addps
loope
mov
mov
cld
shl
pop
cdq
arpl
mov
adc
mov
cmps
loopne
mov
mov
mov
(bad)
xchg
pop
dec
mov
inc
out
dec
inc
xor
cmp
and
fstp
adc
mov
push
gs
xchg
pop
adc
out
lock
in
push
jnp
in
inc
cmps
les
push
push
(bad)
jae
add
mov
adc
adc
cdq
(bad)
in
push
rep
adc
mov
xchg
and
inc
cmps
outs
push
xor
lds
jo
sbb
push
xchg
push
dec
push
inc
mov
stc
sbb
bound
push
sbb
pop
mov
popf
push
pop
sub
jl
fucomip
ret
jbe
sti
int
sti
inc
enter
cmp
xchg
dec
(bad)
adc
cmps
xor
and
or
rcr
xchg
sbb
mov
and
sar
jmp
(bad)
out
pusha
std
addr16
stos
xchg
aad
std
jae
(bad)
push
(bad)
xlat
pop
jo
ds
pop
pop
imul
xchg
(bad)
mov
not
sbb
xor
sub
je
inc
ins
aaa
stos
loop
jnp
in
loopne
es
dec
ror
push
dec
inc
leave
cmp
or
or
repz
xor
push
or
xchg
pop
and
pushf
mov
push
shr
jb
hlt
add
and
cmps
into
fimul
ret
adc
arpl
leave
retf
and
mov
das
push
sub
je
pop
push
out
cmps
sbb
cmc
aam
adc
mov
push
push
jae
stos
pusha
inc
sbb
mov
les
jp
adc
fsubr
int
xlat
inc
mov
adc
mov
call
leave
push
int
sbb
cmps
mov
(bad)
shl
pop
pop
xchg
push
jns
add
cmp
jge
icebp
push
imul
cs
add
fst
mov
xchg
lahf
jecxz
arpl
pop
mov
outs
test
dec
inc
aas
mov
and
xchg
stos
jp
outs
daa
(bad)
(bad)
daa
repnz
repnz
and
jge
mov
imul
push
sahf
add
nop
iret
fs
jp
bound
loop
test
shl
and
sahf
sub
add
add
add
(bad)
shr
sbb
dec
dec
cmps
das
mov
dec
push
rcl
shl
rol
movs
xchg
std
test
mov
inc
xchg
js
movs
xor
mov
inc
pmaxsw
push
test
cmc
in
mov
aam
pop
jne
fisub
dec
ins
out
xor
jae
fsubp
inc
lods
in
dec
inc
les
call
sbb
sub
xor
or
adc
je
loope
inc
into
ja
mov
cwde
mov
push
cli
dec
inc
test
aaa
xor
jo
mov
jge
push
jle
add
inc
sbb
fstp
mov
out
cmps
ja
and
or
mov
xchg
inc
fild
mov
test
xor
lods
retf
data16
das
test
mov
mov
fsub
jbe
inc
pop
mov
or
inc
xchg
dec
cmp
fisub
loop
xor
in
call
stos
or
loopne
sbb
mov
test
leave
sub
xchg
pop
js
sbb
sbb
dec
popa
jl
jg
dec
pop
push
mov
inc
sahf
fcomp
adc
cmps
test
mov
push
int
mov
xchg
or
mov
ins
adc
in
test
jge
mov
sub
fscale
mov
sub
xchg
in
adc
fwait
psubusb
xor
jnp
sub
mov
mov
movs
ret
nop
push
call
in
ret
sbb
inc
int
dec
ficom
cli
in
xor
xor
cmp
lods
inc
bnd
test
and
jecxz
push
jl
or
bound
mov
mov
fnsave
add
xchg
out
dec
dec
cmp
mov
cmps
jmp
dec
mov
sar
aas
stos
shl
je
daa
nop
jae
dec
in
repnz
in
clc
shr
cld
xchg
and
xchg
pop
(bad)
and
cli
and
and
sub
sbb
mov
push
int
mov
test
or
(bad)
xchg
out
js
popa
les
outs
adc
add
cmp
fwait
adc
jg
rol
push
sbb
div
xor
mov
cmp
imul
rcl
mov
jno
stos
or
loopne
push
movs
jno
jo
xchg
push
movs
add
inc
test
cmp
mov
or
mov
and
cmps
lea
(bad)
mov
mov
(bad)
cmp
push
add
les
sub
sbb
rcl
(bad)
int3
jnp
mov
jae
ror
daa
rcr
lahf
test
mov
push
inc
sub
mov
xor
imul
cmp
cmp
and
pop
dec
pusha
sbb
ja
push
xor
stos
call
and
les
imul
clc
call
pushf
mov
imul
popf
sbb
retf
lods
ins
mov
add
push
lock
and
out
mov
inc
cli
jne
cld
or
iret
ins
sub
dec
loopne
pop
popf
out
pushf
outs
pcmpeqw
addr16
xor
test
adc
(bad)
pop
dec
adc
xor
mov
bound
das
daa
fcom
stc
int3
or
pop
imul
inc
inc
mov
dec
ins
jae
test
jl
inc
pop
loop
cmp
sbb
mov
mov
lahf
jl
pop
push
dec
pop
cmp
test
push
fbld
imul
dec
add
push
loop
sar
pop
push
xchg
fldcw
inc
leave
cld
rcl
pop
in
es
inc
loopne
adc
(bad)
jge
or
(bad)
mov
clts
add
push
in
sub
mov
cs
inc
pop
inc
fs
dec
or
add
push
fsubr
shl
mov
outs
loope
ret
(bad)
fidivr
test
and
mov
mov
push
cmp
push
pop
add
movs
pop
dec
lods
lods
fucomip
add
into
dec
out
mov
std
add
das
add
cmps
jo
in
sti
lds
and
repnz
adc
ins
loope
xor
les
repz
pop
addr16
adc
mov
push
cmp
in
jno
(bad)
test
push
and
movs
xchg
xor
jns
adc
push
lea
jg
cmp
in
fiadd
cmp
loop
mov
inc
xchg
dec
out
das
xor
cmps
arpl
fbstp
shl
adc
mov
mov
pop
xchg
jae
pop
popa
sub
ret
mov
sub
and
sbb
loope
addr16
shl
test
mov
test
pop
idiv
rol
adc
pop
lods
inc
sub
cdq
ficomp
adc
or
xor
adc
add
pcmpeqw
cmp
bound
popf
or
out
call
mov
sub
fs
pop
stc
push
jb
xchg
shl
mov
push
shl
fwait
mov
xor
jmp
into
fisttp
mov
jmp
xchg
(bad)
push
ror
stc
xor
push
pop
lock
push
icebp
imul
add
jb
push
fs
push
pop
leave
lock
lods
add
or
add
enter
mov
cmp
test
push
(bad)
cwde
daa
inc
movs
les
and
mov
add
or
jmp
frndint
inc
clc
gs
jns
dec
lods
jb
push
fldenv
cmc
pop
or
mov
and
cwde
cld
into
popf
cli
aad
out
mov
lods
push
shl
push
pop
fst
or
jb
retf
jl
jg
pop
daa
js
outs
dec
shl
(bad)
inc
les
xor
stc
push
mov
cmp
push
adc
add
cmp
push
sub
pop
iret
outs
jmp
sahf
pop
sub
fstp
lds
xchg
mov
inc
pop
mov
arpl
add
repnz
push
imul
lods
xchg
push
shl
test
adc
pop
lods
push
pop
pop
out
fldenv
imul
inc
test
adc
in
imul
dec
push
jmp
sbb
in
les
and
cli
stos
(bad)
jo
icebp
mov
jns
mov
jl
fimul
popa
scas
out
(bad)
xchg
sbb
fisttp
mov
fldcw
cwde
icebp
or
lds
mov
mov
and
retf
xchg
daa
daa
outs
dec
adc
lock
pop
and
dec
sub
push
out
mov
ret
fs
jge
cmps
push
and
jne
stos
(bad)
js
add
mov
xor
jmp
mov
jp
addr16
jle
repz
loop
pop
mov
stc
jge
push
mov
mov
popa
mov
bound
xor
mov
daa
pop
ret
xchg
jae
int3
jecxz
inc
scas
sub
fwait
cmp
sar
test
jnp
ret
clc
in
mov
cdq
stc
push
push
dec
and
aas
cmps
cdq
pop
les
mov
scas
test
inc
ds
jne
and
xchg
dec
mov
mov
push
aam
mov
push
cmp
sar
std
pop
mov
shl
cmps
mov
add
sub
ds
xchg
or
sti
iret
fs
cmp
inc
fwait
dec
pop
int
les
push
dec
cmp
outs
outs
fwait
inc
xchg
mov
(bad)
push
and
lea
inc
dec
dec
iret
in
add
mov
push
push
ss
add
enter
int
shl
das
in
xchg
inc
and
sub
popa
icebp
mov
std
and
retf
mov
mov
fistp
adc
test
scas
xor
xchg
inc
cmc
jmp
dec
push
cmc
sub
cmp
rol
mov
sub
fadd
and
test
xlat
bound
clc
shl
cli
push
jecxz
mov
inc
repnz
dec
lock
adc
cmp
cmps
aad
fild
and
sbb
fdiv
arpl
add
mov
sbb
mov
lds
sub
adc
aas
aad
cwde
shr
cmc
push
cmps
fnstenv
es
cmp
sti
out
mov
or
dec
inc
sub
fwait
pop
into
xor
ror
std
shl
stc
or
pop
outs
sti
mov
out
js
cmp
cmp
xor
and
mov
stos
mov
xor
clc
call
in
mov
movs
inc
push
aas
adc
push
cmc
call
cld
jmp
data16
arpl
and
iret
pop
out
add
int
mov
fistp
add
(bad)
test
scas
(bad)
dec
jmp
into
mov
loopne
outs
(bad)
pop
imul
mov
dec
mov
inc
test
adc
inc
fst
retf
add
or
cld
xor
cmp
pusha
lea
xor
jne
fwait
xchg
add
mov
hlt
std
sub
shl
movs
test
jg
cmc
cwde
pusha
repz
nop
dec
loope
fs
sub
sbb
sub
push
dec
push
cmp
repnz
jnp
sar
shl
lock
imul
aam
inc
fist
sbb
loopne
mov
pop
adc
fisttp
and
inc
xchg
call
into
sub
and
(bad)
(bad)
mov
bnd
xchg
imul
pop
shl
sub
es
popf
stos
or
push
mov
stos
out
cmp
das
xchg
inc
mov
lahf
xchg
push
ja
mov
gs
imul
loope
pop
fisubr
popf
xchg
pop
mov
out
(bad)
dec
jmp
aad
inc
out
add
jle
mov
shl
and
lods
enter
and
clc
in
mov
mov
mov
retf
jl
out
cmps
dec
adc
loope
cmps
pop
mov
pop
cdq
idiv
mov
and
lea
dec
mov
pop
lock
sub
popf
mov
adc
in
lock
pop
jne
mov
push
in
je
enter
xchg
int
pop
test
scas
ss
inc
(bad)
mov
adc
ret
jl
dec
(bad)
xchg
pop
dec
push
(bad)
ficom
pop
cmc
movs
into
loope
addr16
mov
inc
movs
push
cmp
dec
inc
add
xchg
cdq
retf
xor
fisttp
cmp
dec
mov
jg
jg
xor
mov
and
ror
push
out
sbb
pop
outs
rcl
jl
cmp
cdq
add
adc
mov
adc
dec
mov
adc
out
mov
fbld
outs
mov
pop
cdq
sti
loope
and
std
sbb
loope
xchg
popa
mov
mov
ja
in
xchg
jae
daa
repz
ins
das
sub
xor
and
scas
sbb
cmp
int3
fild
std
fcomp
fcomp
fxch
test
xlat
jns
dec
xchg
ds
sti
or
mov
mov
jmp
lahf
pusha
enter
cmp
ins
push
mov
sub
ins
scas
adc
retf
test
mov
cmc
(bad)
aam
push
jne
cmps
fsub
inc
ret
adc
dec
stos
stos
aaa
inc
fbstp
xchg
mov
cli
xchg
sub
jnp
mov
dec
lods
in
mov
xor
imul
mov
mov
fucomi
ret
retf
lods
jg
fidivr
fisub
outs
jmp
addr16
ror
and
int
mov
sbb
shl
in
pop
in
rol
mov
(bad)
pushf
push
push
cmp
mov
nop
pop
jg
push
sar
pop
ins
cs
dec
or
mov
pusha
and
int
sar
add
pop
xor
shl
lds
mov
arpl
and
popf
xchg
and
xor
retf
fidivr
xor
add
inc
or
jecxz
jp
pop
test
xor
clc
jmp
dec
xchg
test
xor
idiv
sub
inc
rcl
mov
leave
mov
sti
add
inc
fisttp
into
mov
loopne
add
cmps
aaa
nop
repnz
xlat
leave
imul
jbe
mov
lahf
or
inc
out
ror
fcmovnbe
jle
xor
and
mov
nop
std
lahf
bnd
fisubr
and
mov
cdq
or
bnd
rcr
sub
(bad)
cdq
cmp
aaa
lock
repz
aas
add
cmps
jno
pusha
inc
dec
jae
inc
lahf
pop
adc
popa
dec
add
add
test
pop
add
fistp
es
adc
or
and
pop
jp
jbe
xor
sbb
adc
lock
stc
push
dec
(bad)
jle
and
fld
mov
add
jle
ja
sti
pop
or
pop
retf
(bad)
call
xchg
dec
fmul
push
cdq
dec
or
add
pop
aas
shl
lahf
xchg
loop
out
jns
push
xchg
xchg
mov
jbe
or
sbb
popf
or
and
sub
int
cmp
daa
push
std
pop
loopne
xor
dec
xchg
jp
xchg
cmps
fwait
pop
movs
lea
jno
test
imul
addr16
adc
push
arpl
mov
arpl
int3
cs
lea
mov
xor
mov
add
adc
pop
xchg
sbb
push
rcl
and
call
(bad)
xlat
mov
mov
imul
mov
(bad)
add
in
retf
movs
mov
cmp
leave
xor
inc
into
inc
lahf
pop
push
dec
sub
mov
mov
(bad)
ss
rol
and
iret
push
xor
cmp
jnp
cld
stc
in
sti
fld
mov
sbb
jge
push
popa
xchg
push
mov
xchg
push
pop
or
test
sub
lock
add
loopne
mov
jle
and
lods
inc
das
push
fdiv
leave
pop
and
test
xchg
rcr
test
or
cmp
retf
fs
mov
test
pushf
fld
loop
(bad)
cs
out
ss
(bad)
and
scas
adc
or
mov
dec
sar
sbb
jmp
add
jmp
dec
iret
jg
fs
pop
jmp
mov
xchg
pop
sub
xchg
mov
fbld
cs
jns
aam
cmp
xchg
push
gs
lea
outs
sbb
lea
pop
call
sbb
arpl
(bad)
dec
mov
mov
(bad)
pop
push
xchg
mov
jge
dec
and
xor
aas
je
push
cmps
lock
aad
retf
je
pop
movs
cmp
adc
aas
ja
repnz
dec
stc
and
inc
fist
push
push
xor
xor
jb
out
daa
pop
cmc
(bad)
arpl
and
pop
jmp
adc
loopne
sbb
aas
sub
inc
test
ret
pop
xor
addr16
icebp
stc
push
fsubr
fmul
addr16
bound
rcr
(bad)
and
sbb
iret
push
clc
lea
sub
pop
or
pop
imul
hlt
fdivr
jle
fadd
mov
retf
and
mov
and
xchg
addr16
mov
dec
ds
fldpi
je
test
in
jle
jmp
inc
mov
or
add
dec
div
fldenv
jge
mov
shr
mov
jmp
sub
or
jmp
dec
test
fcom
rcr
loop
jl
pop
dec
das
cli
icebp
call
not
inc
mov
mov
push
jecxz
cli
(bad)
test
mov
div
and
movs
call
mov
or
test
mov
adc
sub
lahf
into
jbe
cwde
addr16
add
test
and
loop
push
shl
jne
pop
inc
mov
push
or
jae
inc
xor
xchg
mov
mov
mov
out
test
cmp
mov
movs
stos
pop
push
shl
add
jg
cwde
ret
repz
bound
mov
jmp
rcr
sub
xchg
iret
inc
push
push
loop
dec
mov
inc
pop
xchg
les
jg
xchg
popf
or
imul
test
mov
cmc
add
cmp
mov
popa
cli
jp
add
(bad)
mov
daa
xor
cld
int
(bad)
sbb
pop
cmps
mov
out
adc
aad
icebp
push
sub
dec
div
ss
(bad)
movs
or
outs
loopne
mov
xchg
xchg
xchg
jecxz
shr
mov
sbb
ret
xor
jecxz
sti
push
xchg
adc
mov
mov
mov
sahf
jecxz
push
jmp
std
xchg
dec
lds
add
xor
xor
icebp
mov
cmp
push
lods
ds
xchg
stos
ins
out
mov
(bad)
sti
int
lods
dec
retw
and
ds
and
retf
test
sbb
neg
xor
push
xchg
out
lds
add
mov
xchg
popa
std
out
fs
(bad)
sbb
xor
add
mov
mov
dec
retf
js
movs
xchg
or
add
sub
jae
adc
int3
in
inc
xor
ins
mov
add
iret
arpl
int3
fmul
mov
imul
shl
scas
xor
das
push
push
into
mov
jecxz
cs
in
call
mov
test
push
xchg
xor
adc
shl
fnsave
scas
cmp
add
rol
in
fld
gs
gs
dec
jnp
add
mov
jae
xchg
sub
rol
jg
aad
adc
test
sub
sub
mov
adc
ret
jecxz
popf
sar
cmc
mov
pop
in
jbe
retf
mov
mov
sub
push
xor
les
icebp
push
sbb
dec
adc
jmp
cmps
sbb
imul
jo
adc
(bad)
push
retf
(bad)
in
dec
dec
inc
jb
mov
add
scas
push
bound
mov
mov
add
hlt
bound
jmp
stos
(bad)
or
mov
mov
dec
std
leave
hlt
cmp
cs
imul
dec
pushf
ret
std
and
ds
push
fistp
in
ud1
pop
jecxz
dec
push
add
xor
ficom
imul
fistp
push
xchg
js
sub
adc
in
ins
push
mov
retf
(bad)
and
in
jge
test
cmp
jnp
cmp
inc
loop
cmp
xchg
mov
enter
jb
dec
retf
aaa
mov
push
sub
jge
icebp
popa
pop
jmp
pop
mov
(bad)
adc
dec
cmp
xchg
add
dec
dec
jns
cwde
inc
or
jmp
rcl
repnz
adc
cmc
pop
pop
xor
adc
dec
mov
push
and
xchg
retf
(bad)
mov
in
je
jl
jp
into
data16
add
jp
or
dec
lahf
pop
in
ficomp
mov
xchg
in
inc
mov
mov
rcr
pop
mov
cmp
ffree
test
mov
addr16
inc
cmp
(bad)
push
xchg
retf
fidivr
call
mov
jmp
loope
pop
mov
fist
push
stos
push
rcr
test
or
or
in
xchg
cmp
hlt
jle
mov
xor
or
clc
mov
xor
and
psrad
(bad)
or
mov
imul
in
jb
xchg
jo
cmp
add
loop
(bad)
retf
rol
cmp
clc
ficomp
(bad)
lahf
hlt
pusha
xchg
cmp
cmps
or
leave
xor
xchg
pop
adc
xor
call
adc
aad
lods
cmps
mov
sar
imul
sbb
sub
imul
test
ret
mov
jo
mov
fidiv
dec
fadd
mov
sub
(bad)
dec
inc
lahf
call
mov
ret
mov
pop
push
xchg
pop
jmp
call
data16
adc
gs
inc
leave
and
ja
pop
cdq
xchg
addr16
mov
test
ins
pop
cmp
ret
pop
jle
jmp
jb
push
xor
adc
test
mov
cmp
jnp
sbb
push
sub
je
cmp
std
stc
push
sub
lock
retf
inc
add
dec
(bad)
cld
pop
inc
mov
push
dec
shl
(bad)
movs
cli
xchg
pop
and
idiv
(bad)
jne
je
add
in
and
fdiv
jnp
sbb
pop
pop
mov
daa
inc
arpl
loope
bound
jo
cmp
clc
xchg
sbb
leave
add
in
repz
in
or
lods
dec
cld
je
or
in
leave
out
(bad)
out
xchg
or
xchg
pop
iret
dec
sbb
mov
ret
(bad)
sahf
jmp
fwait
sbb
sti
push
mov
ficomp
and
dec
retf
dec
mov
push
popa
or
jecxz
cmps
sar
(bad)
iret
adc
pop
loopne
ds
cld
or
repz
mov
ja
repz
nop
mov
test
push
cmp
iret
adc
or
sbb
sbb
test
adc
mov
sbb
xor
mov
mov
push
cmp
jl
in
hlt
ins
jns
inc
push
adc
mov
pop
fcmovb
lahf
movs
loopne
ror
jno
cmp
lock
dec
push
push
int3
jno
repnz
pop
and
lahf
fisubr
repz
pop
ins
pop
pop
dec
fdivr
adc
(bad)
test
adc
in
xchg
fisubr
push
or
dec
mov
ss
cs
sahf
inc
inc
aas
loop
inc
push
daa
mov
pop
cmp
jns
mov
add
jp
push
add
push
loopne
loope
sub
cmps
js
repz
jecxz
cdq
in
adc
sub
adc
sbb
jp
imul
pop
jle
add
fs
pop
sbb
mov
dec
fistp
out
clc
and
push
lahf
mov
cmp
ror
and
dec
loopne
cmp
scas
shl
div
or
sub
pop
dec
call
cwde
cmp
inc
loopne
outs
cmp
icebp
mov
mov
jmp
cmp
mov
push
shl
and
xchg
ins
and
mov
scas
je
xor
xor
shl
in
dec
push
(bad)
addr16
popf
inc
fs
out
or
sub
mov
pop
dec
shl
inc
(bad)
sbb
add
(bad)
sti
cli
push
xchg
dec
fbstp
mov
(bad)
mov
out
imul
jbe
cmp
ret
sub
in
mov
and
pop
sti
dec
pop
jecxz
jecxz
mov
pop
cmps
(bad)
(bad)
or
lea
data16
cmp
sti
jle
mov
ins
or
mov
mov
push
mov
jmp
cdq
pop
push
mov
dec
mov
jmp
mov
les
out
(bad)
xchg
sbb
outs
push
(bad)
xor
dec
call
leave
(bad)
push
int3
inc
sti
sbb
xchg
movs
push
movs
adc
pop
(bad)
sub
rcl
cwde
mov
outs
or
rol
push
pop
movs
xchg
sub
pop
out
arpl
mov
test
jp
mov
pop
push
js
sahf
push
fisttp
adc
push
pusha
lods
jmp
or
sub
xchg
sub
aad
xchg
popf
pushf
rol
mov
or
push
out
aas
xlat
mov
mov
jmp
out
(bad)
xor
mul
jne
scas
repz
imul
dec
adc
shr
cmp
add
movs
push
arpl
pop
lods
or
dec
xchg
ins
lds
pop
xchg
sbb
sbb
mov
mov
and
arpl
loop
ins
cwde
clc
test
mov
mov
mov
or
das
jo
add
sbb
dec
xor
fdivr
or
shl
xor
mov
mov
stos
mov
inc
fcom
sub
lds
mov
imul
dec
adc
xchg
pop
xor
adc
fisubr
into
and
pop
mov
sbb
sub
add
jne
aam
(bad)
les
adc
jmp
sub
mov
retf
int
sbb
xchg
lock
xor
fld
mov
cmps
add
dec
ret
or
call
lahf
retf
loop
lea
push
out
mov
sub
ficomp
lea
push
inc
inc
fiadd
out
xchg
push
inc
mov
test
fistp
inc
daa
or
pop
xchg
imul
sbb
ss
adc
cmp
xchg
mov
lock
mov
sbb
addr16
push
pop
push
adc
ins
or
lahf
xchg
push
xor
in
mov
add
shl
pushf
mov
test
inc
jns
mov
xor
jl
lahf
mov
or
lock
or
stc
adc
clc
out
pop
mov
or
xor
jno
push
jmp
test
rcl
std
adc
les
clc
outs
ret
hlt
xor
cmp
je
aam
jmp
pop
fstp
icebp
dec
pop
pop
(bad)
pushf
mov
or
arpl
or
add
inc
mov
call
int3
sti
scas
test
test
sbb
cld
icebp
sahf
mov
mov
sub
pusha
ins
retf
jo
hlt
stos
clc
ror
aam
mov
sahf
shl
shl
setb
push
sub
mov
sbb
jge
mov
loope
cmp
popf
les
mov
push
int
mov
inc
test
pop
jp
int
cwde
lock
iret
cli
pop
xor
cwde
inc
mov
push
or
out
fld
adc
rol
aam
and
ins
out
xchg
pop
call
mov
pop
push
inc
push
mov
or
mov
ror
outs
lods
popf
icebp
in
stc
data16
retf
inc
je
mov
sub
xor
xor
push
inc
out
mov
jmp
xlat
push
adc
aam
jg
cmp
adc
xor
pop
inc
and
jb
ins
aas
sbb
shl
or
gs
and
push
out
cmps
xor
or
fldenv
cld
pop
ret
mov
pop
stos
dec
lods
xor
adc
pop
fidiv
movs
mov
aad
push
adc
in
jae
jae
mov
mov
push
mov
xor
jne
enter
jle
jmp
fild
add
fistp
nop
in
cmp
xor
adc
xchg
mov
xlat
pop
inc
mov
mov
pusha
jp
adc
mov
jl
or
adc
cs
in
cmp
movs
or
push
push
int3
out
or
push
repnz
jecxz
mul
jg
fnsave
es
test
mov
mov
lods
test
xchg
mov
jno
inc
lea
stos
(bad)
aaa
cli
xor
fcmovu
imul
xor
sar
mov
dec
mov
outs
test
mov
mov
ins
into
lock
xor
mov
pop
test
cmp
cs
inc
cmp
push
jo
imul
icebp
jb
leave
sbb
fs
hlt
xchg
scas
sbb
lods
sub
loopne
pop
pop
dec
ja
push
inc
test
or
int3
loope
(bad)
mov
mov
pop
test
adc
dec
xor
shl
mul
push
mov
sub
ins
pop
push
and
out
mov
icebp
das
mov
cmp
pop
mov
stos
fwait
ror
push
add
div
jnp
or
imul
xchg
dec
cwde
dec
push
sbb
fldln2
push
rcl
xor
into
add
pop
mov
ja
not
xchg
into
fisub
pushf
jae
neg
xchg
aam
repz
test
in
mov
mov
movs
je
or
(bad)
aam
fisub
repnz
loope
mov
xchg
or
add
cli
add
xchg
add
stos
fwait
loopne
fmul
lock
out
bound
lods
(bad)
mov
stc
mov
jmp
and
jno
pop
pop
cmc
sti
push
mov
je
inc
dec
pop
retf
jbe
add
mov
mov
and
jns
and
ja
in
shl
inc
es
test
jle
lods
movs
cmps
push
test
out
movs
xchg
movs
imul
mov
stc
fidivr
scas
aam
test
pusha
or
cmps
in
or
fcomi
retf
cmp
pop
mov
int
outs
retf
lock
retf
test
cdq
mov
push
scas
outs
pop
stos
jle
nop
cdq
lea
jecxz
in
xchg
pop
dec
mov
test
arpl
inc
jmp
mov
ret
int3
push
cmp
cmp
or
ret
stos
aam
je
jecxz
push
loope
call
pop
(bad)
gs
pop
pop
dec
sbb
push
inc
sub
out
mov
cmc
sub
mov
jmp
sar
jecxz
xor
pop
sar
adc
xchg
sbb
lea
fs
dec
pop
xor
jecxz
lods
or
arpl
cmp
jmp
(bad)
pop
and
aaa
jno
mov
mov
jnp
icebp
or
or
mov
cmp
(bad)
mov
repz
or
mov
clc
aam
dec
dec
dec
push
fwait
adc
push
ficomp
and
pop
pop
arpl
ffreep
inc
bound
dec
rcl
or
jbe
cmp
scas
out
mov
scas
into
sbb
sahf
mov
push
scas
adc
inc
scas
repz
retf
popf
dec
punpckldq
adc
daa
scas
or
mov
adc
movs
sti
add
cmp
jg
ins
xor
xor
loop
out
mov
cmc
int
jns
ins
cmps
je
mov
sbb
inc
sbb
lods
sbb
sbb
sbb
and
rcl
ja
scas
std
(bad)
jb
xchg
pop
sub
and
push
and
mov
add
rol
jmp
mov
movs
jns
bound
out
mov
fldcw
arpl
pop
cdq
es
push
mov
pushf
and
mov
call
and
mov
pop
pop
pop
sbb
xchg
inc
shl
mov
hlt
xchg
dec
or
inc
pop
test
xchg
repnz
in
pop
loop
add
and
(bad)
mov
int
ins
clc
ficomp
dec
aaa
dec
pop
je
std
lahf
nop
mov
push
and
cmps
and
out
fisubr
aad
mov
aaa
adc
xor
sbb
mov
imul
dec
cmps
cli
cmp
sub
popa
jo
push
loope
or
xchg
adc
scas
int3
enter
pop
jmp
sub
sub
cmp
dec
retf
bound
fstp
sbb
sahf
cmc
jg
outs
ja
mov
cdq
cld
mov
(bad)
sti
push
mov
lods
stos
pop
repnz
movs
or
movs
leave
mov
sub
enter
push
in
leave
lahf
xchg
xor
push
fs
and
jmp
nop
aad
push
cmp
push
xor
pop
nop
xchg
inc
xchg
stos
mov
sbb
lods
jle
sbb
lock
loopne
pushf
imul
xchg
mov
xor
repz
clc
add
jns
pop
xor
ja
clc
inc
cli
repnz
popf
int
rcr
dec
fs
cmp
fs
lods
test
mov
repz
cmp
cli
mov
ficomp
xor
mov
mov
loopne
(bad)
outs
jecxz
xchg
xchg
lock
sbb
push
out
mov
add
icebp
jmp
ret
not
mov
inc
rol
jmp
push
popa
xor
cmp
call
out
jle
or
sbb
sbb
jbe
jl
ss
int
lods
test
(bad)
out
or
lea
adc
retf
add
inc
imul
and
daa
enter
das
sahf
xor
cmps
or
sub
sbb
mov
cwde
imul
add
call
stos
cmp
xor
hlt
out
test
fstp
pop
xor
cmc
xchg
imul
aas
mov
(bad)
pushf
faddp
adc
fld
iret
repz
movs
fst
jno
jmp
jmp
xor
xchg
or
mov
jmp
mov
mov
sahf
sar
xchg
dec
and
cmp
jecxz
sub
repnz
push
sub
lods
or
fwait
xchg
push
(bad)
retf
xchg
lock
push
jle
pop
daa
add
and
jmp
push
adc
cmp
lds
sbb
pop
arpl
test
push
pop
mov
dec
out
leave
inc
jle
jl
xor
js
jo
jl
lea
and
les
add
fidiv
je
not
push
jno
mov
retf
xor
lock
jo
or
rcl
out
jnp
xchg
push
cmp
inc
into
stc
hlt
jmp
mov
jbe
(bad)
movzx
mov
mov
dec
xor
daa
sub
imul
out
adc
repnz
mov
mov
rcr
out
shr
push
retw
icebp
ds
test
dec
(bad)
std
add
inc
lahf
lods
loopne
push
popf
bound
into
jmp
and
outs
mov
xchg
dec
fsub
mov
xchg
pushf
dec
mov
sahf
or
fmul
mov
movs
aam
call
dec
loope
(bad)
pop
sub
sub
mov
repz
retf
push
pop
dec
jge
inc
mov
sbb
mov
push
cli
ficom
push
or
mov
mov
(bad)
adc
pop
shl
cmp
push
jecxz
ds
dec
jno
loopne
fisubr
sbb
popa
aas
rol
(bad)
dec
ins
inc
neg
fwait
ins
push
ins
enter
dec
jp
xchg
jbe
pop
xchg
mov
pushw
inc
mov
push
pop
popa
push
mov
mov
rcl
int
inc
in
in
jp
popa
push
pop
and
jle
outs
cli
addr16
jle
jl
xlat
jns
sahf
movlps
dec
inc
dec
jae
out
or
add
push
xchg
xor
mov
rcl
sbb
jle
push
inc
push
push
sbb
stos
mov
jns
cmp
pop
pop
adc
rcr
mul
cmp
and
xor
in
jge
xchg
xchg
mov
mov
mov
sub
dec
sub
xchg
jg
pop
(bad)
in
out
cmc
call
sub
sub
ja
xchg
mov
sbb
aas
jmp
enter
in
lods
int3
lahf
cmps
pop
fidivr
sub
test
les
mov
fisubr
mov
inc
stos
add
jl
jp
retf
outs
imul
daa
scas
sbb
ficom
xor
cdq
fldenv
sub
sub
(bad)
push
pusha
add
or
in
mov
xor
shl
jecxz
sub
ds
aas
mov
mov
sahf
ds
mov
mov
mov
dec
add
mov
push
and
cmp
or
adc
jmp
sbb
sbb
add
lea
ins
sbb
in
mov
shl
inc
shr
pop
ret
stos
or
ds
shl
popa
add
inc
cmp
dec
pop
xor
mov
inc
in
iret
pop
mov
cwde
mov
lods
xlat
scas
dec
cmp
rol
xor
cli
sahf
fcmovbe
cld
push
retf
retf
(bad)
imul
in
mov
rcr
mov
lahf
imul
lahf
jmp
fcomp
adc
bound
ins
pop
jns
adc
(bad)
int
jle
pshufw
sbb
dec
sbb
rcl
sbb
jns
outs
lea
sti
shl
fisubr
mov
mov
dec
lahf
mov
fucomip
xor
(bad)
ins
mov
retf
shl
jnp
and
add
inc
jmp
add
mov
xchg
(bad)
xchg
adc
lods
psrlq
cld
add
(bad)
out
xor
dec
push
inc
sub
and
dec
mov
pop
jo
daa
or
retf
jmp
retf
retf
pop
pop
pop
sub
pop
ss
xchg
jecxz
(bad)
dec
not
icebp
mov
(bad)
shl
cli
stos
cmp
daa
push
dec
mov
jmp
imul
push
test
xchg
mov
xor
xchg
(bad)
sbb
fcomp
mov
adc
sbb
xor
div
int
or
jl
adc
loopne
rol
mov
jo
aad
retf
lock
push
mov
scas
or
xor
out
ret
add
mov
mov
pop
cmp
xor
(bad)
cmc
xor
je
or
cmp
mov
(bad)
in
pop
aad
and
jno
das
adc
lea
cs
movs
sub
ds
mov
mov
fsubr
pop
cmps
push
rcl
sar
push
stos
ins
mov
mov
popf
mov
cwde
out
or
fld
xchg
pop
das
mov
lock
fiadd
pop
push
sbb
lahf
inc
jmp
daa
sti
lds
fiadd
enter
ins
mov
sbb
and
jmp
arpl
cmp
adc
aad
imul
inc
adc
mov
in
fchs
arpl
fidiv
xor
sub
jnp
mov
imul
and
sbb
scas
(bad)
in
sub
push
push
add
sbb
cmc
arpl
pop
out
fwait
push
jge
adc
sub
icebp
sbb
pusha
inc
dec
fidivr
mov
jnp
mov
shl
hlt
cmp
sbb
je
(bad)
xor
xchg
retf
(bad)
adc
add
mov
lea
xchg
loope
ret
sbb
mov
jecxz
jp
jmp
jg
adc
fwait
dec
call
inc
repnz
test
sbb
rcr
std
(bad)
and
adc
sbb
push
cmp
push
gs
inc
push
stos
imul
pusha
sbb
cld
jb
int
sbb
shl
mov
sub
aad
fisttp
les
addr16
dec
mov
sub
push
stos
stc
test
xor
xor
ja
je
fcmovbe
sbb
mov
and
test
daa
imul
rcl
shr
inc
push
mov
js
sub
imul
(bad)
push
add
pop
fiadd
test
and
sbb
sub
mov
xchg
inc
pop
lods
icebp
aas
ds
test
push
movs
dec
add
push
fstp
mov
cwde
dec
or
and
cs
pusha
call
xchg
add
or
pop
pop
loopne
fcmovnu
call
jbe
adc
js
mov
xchg
sub
mov
int3
loopne
movs
pushf
sub
sar
popf
cmp
sti
mov
dec
(bad)
jnp
loop
mov
popa
dec
movs
xchg
daa
cmc
jb
mov
fwait
cmp
ret
and
jle
stos
ins
out
or
mov
sub
stos
aad
cmp
dec
popf
mov
fisubr
sbb
(bad)
addr16
dec
jmp
add
push
sbb
fs
sub
inc
movs
adc
jnp
push
or
add
mov
sub
pop
adc
sub
fmul
sbb
inc
pop
sbb
sahf
aad
and
mov
gs
xor
ficomp
xor
loop
movs
retf
std
(bad)
xlat
sub
add
sti
aas
ss
ins
gs
and
jns
xor
jg
xor
out
add
lock
pop
push
push
cdq
cmps
adc
rcl
aaa
(bad)
outs
inc
push
inc
movs
ja
xor
(bad)
imul
adc
test
inc
mov
inc
cmp
daa
movs
pusha
push
call
or
pop
aas
add
(bad)
in
hlt
xchg
je
mov
add
outs
pop
pop
retf
pop
rol
xchg
cdq
or
sbb
jae
cli
loopne
repnz
je
dec
fs
push
fisttp
push
test
hlt
pop
or
loope
cwde
or
leave
push
imul
sbb
add
sbb
rep
sbb
je
lock
sbb
or
test
sbb
push
shl
mov
jno
stc
push
push
pushf
addr16
imul
aam
sub
stc
in
retf
inc
push
xchg
out
arpl
pop
sub
imul
inc
sub
cmp
add
rol
mov
sub
xchg
mov
jp
aad
outs
test
or
(bad)
lahf
and
loop
daa
pop
(bad)
gs
rcl
adc
pop
sbb
jbe
sbb
fld
xor
fucom
out
iret
in
clc
bound
push
push
fldcw
and
adc
out
add
adc
inc
fs
pop
int
das
shr
dec
ret
rol
pop
int3
out
gs
out
inc
cmps
sub
in
movs
jmp
loopne
cmps
fcmove
stos
leave
movs
ret
cmp
arpl
hlt
sub
pop
inc
sbb
xor
and
cmc
inc
mov
mov
fcomp
(bad)
ficomp
jl
ins
adc
cwde
sbb
and
or
sar
loope
sbb
jnp
in
sbb
lods
xor
add
out
sub
pusha
les
sub
add
imul
pusha
xchg
imul
(bad)
call
sbb
retf
inc
nop
pop
sbb
fnstenv
les
pop
mov
push
jmp
retf
in
sub
mov
test
cli
jmp
inc
lahf
jle
(bad)
mov
sbb
push
data16
jecxz
pusha
jns
pop
add
sub
cmps
mov
cld
mov
jmp
xchg
and
in
movs
push
mov
cmp
mov
and
ins
popf
dec
jo
or
or
dec
mov
jg
retf
mov
ins
arpl
popa
jno
fmul
mov
(bad)
mov
fstp
xchg
out
pop
dec
xchg
in
add
mov
dec
or
or
dec
lahf
(bad)
(bad)
pop
xchg
xor
addr16
stos
cmp
retf
popf
add
inc
popa
loope
mov
out
mov
arpl
xlat
xlat
in
lods
pop
pop
pop
mov
outs
int
cmp
inc
mov
mov
cmc
mov
pop
inc
inc
jp
jp
fisttp
das
dec
fmul
aad
les
(bad)
or
mov
jb
in
ja
out
loope
and
sub
add
sub
cmp
inc
cmp
hlt
int
adc
jle
loopne
fisttp
stc
leave
daa
adc
add
pop
pusha
xor
mov
dec
or
call
dec
bound
ja
or
or
mov
pop
cwde
mov
cmp
loope
mov
mov
cwde
push
pusha
or
add
arpl
xchg
mov
popf
idiv
loopne
xchg
int3
test
in
rcl
adc
repz
cmp
xor
(bad)
repz
inc
mov
imul
cld
enter
xchg
(bad)
jbe
and
dec
test
rol
fs
out
adc
rol
stc
arpl
pop
and
or
popa
xor
aaa
push
mov
sbb
shl
and
pop
push
mov
inc
xchg
inc
rol
jg
lods
sbb
push
inc
retf
mov
cmps
pop
mov
xchg
add
into
movs
fstp
(bad)
cmp
sub
ss
xchg
xchg
mov
aas
push
push
enter
xchg
loopne
mov
enter
lods
jmp
dec
mov
out
xchg
inc
sub
lods
push
mov
stc
loop
(bad)
lods
fld
fs
dec
ins
xor
std
cli
xor
retf
jl
sbb
scas
dec
push
mov
in
fidiv
lock
xor
lock
call
push
xchg
sbb
sub
push
mov
or
pop
fwait
dec
je
ins
arpl
sub
ret
push
inc
and
adc
mov
push
mov
ror
movs
xchg
push
or
scas
xchg
inc
je
and
jns
scas
bound
hlt
das
jns
mov
stos
pop
aas
ret
pop
push
jbe
jle
cmp
enter
jle
fdiv
ret
cwde
mov
xchg
sub
ja
dec
mov
push
and
mov
ins
mov
sbb
out
cdq
jo
jae
rol
aam
push
psadbw
ret
sbb
shl
mov
and
sti
inc
es
cmp
test
aam
dec
xor
call
push
mov
push
popf
ror
push
imul
and
and
pop
xor
dec
fnstcw
add
push
stos
sub
xchg
adc
cld
add
jecxz
push
ins
cmps
adc
push
retf
fs
sqrtps
cmc
push
add
shr
xor
cdq
xchg
pusha
mov
jo
pop
inc
pop
jb
je
pop
(bad)
loopne
test
sbb
popf
jbe
loopne
adc
sbb
jg
(bad)
cmp
mov
fcomi
inc
xchg
or
add
lea
add
cmps
push
mov
cwde
add
dec
test
lock
dec
loopne
sbb
and
or
outs
(bad)
setno
stos
inc
xchg
xor
dec
(bad)
xchg
and
test
pop
and
push
dec
out
jmp
dec
test
xlat
ret
cmps
pop
hlt
xchg
and
rcl
fsub
add
mov
xor
inc
es
dec
pusha
inc
cmp
and
add
loopne
je
jbe
sub
fcomp
and
pop
push
(bad)
fs
xchg
and
gs
dec
add
pop
jnp
sbb
cli
test
or
cwde
sbb
sbb
mov
add
dec
add
jecxz
fidiv
dec
std
push
into
cwde
outs
je
push
imul
das
xor
jmp
mov
and
test
xor
push
jbe
sbb
jmp
pop
fcmovb
pop
mov
icebp
(bad)
jl
movs
dec
pop
mov
inc
mov
inc
jmp
lahf
cmp
out
ja
js
inc
shr
inc
mov
fwait
sub
lock
stos
and
push
and
movs
inc
xor
pusha
and
ds
or
cmp
xchg
inc
jbe
inc
mov
call
push
xlat
xchg
mov
adc
out
mov
test
add
push
mov
mov
pop
das
push
nop
add
xchg
(bad)
js
pop
or
push
inc
stos
jne
or
sar
outs
lods
cmp
nop
fsubr
xlat
xchg
mov
in
jae
pusha
cmps
mov
aad
push
es
retf
jnp
cmp
in
nop
cdq
add
cmp
xchg
mov
inc
jmp
ror
cwde
leave
sub
pop
imul
mov
adc
test
dec
scas
jnp
sub
out
jne
ds
push
cmp
push
imul
adc
addr16
fwait
and
aaa
add
stc
mov
inc
xor
icebp
in
lds
add
lea
mov
fistp
jne
cs
mov
std
mov
mov
cmp
adc
wbinvd
fisttp
sar
out
mov
out
push
jns
jl
sahf
xor
call
xor
rcl
fcom
out
mov
fcmovbe
retf
xchg
cdq
mov
stos
xchg
inc
sub
push
dec
xor
mov
jmp
pop
movs
outs
cmp
test
nop
or
mov
dec
pop
adc
push
pop
mov
lds
xchg
ins
cmps
sbb
xor
cmps
cmp
xchg
add
adc
and
pop
pop
sub
sbb
ret
push
aam
adc
daa
xor
xchg
gs
movs
xchg
pusha
shl
outs
bound
xor
cmp
lods
cli
sub
sub
pusha
cmp
pop
inc
ror
inc
cld
test
push
sub
pop
dec
gs
dec
aaa
and
or
mov
adc
jecxz
cmp
ins
sub
xchg
adc
aam
cmp
lds
je
aaa
into
test
lods
lock
ret
push
inc
adc
in
jb
inc
lods
mov
and
inc
pop
mov
xor
and
pusha
neg
push
sbb
scas
mov
push
jnp
outs
cld
(bad)
xchg
out
mov
lea
dec
mov
inc
pop
lock
lods
scas
sub
jno
xchg
in
add
into
into
push
stos
or
cmps
sar
retf
ds
jo
repz
sbb
jmp
dec
(bad)
fwait
xor
(bad)
or
and
sub
pop
push
dec
das
stc
(bad)
pop
add
add
xor
jne
adc
push
mov
adc
jbe
xchg
xchg
leave
dec
test
and
fucom
pop
call
push
cs
lea
jns
iret
cmps
jmp
call
add
mov
mov
inc
adc
inc
aad
sub
arpl
mov
xlat
dec
push
(bad)
and
arpl
jp
pop
leave
sub
not
xchg
cmp
aas
icebp
and
int
popa
push
and
test
loope
and
inc
ret
mov
(bad)
hlt
mov
or
pop
leave
mov
jl
add
jmp
stos
call
and
pop
fdiv
out
add
xor
gs
adc
jns
push
rcl
stos
adc
sbb
add
pop
cmps
rcl
aad
adc
ret
clc
cmp
pop
mov
jno
and
ins
lods
sub
mov
jl
jnp
lahf
mov
mov
pop
mov
cmc
(bad)
mov
mov
mov
pop
loope
in
jl
add
cdq
pop
fidivr
xchg
shr
dec
add
adc
clc
xchg
and
dec
test
movs
cmc
xor
pop
or
or
cmc
loop
jno
inc
test
or
idiv
pop
aaa
iret
mov
sti
sbb
pop
sti
je
rcr
sub
jg
inc
xor
aam
rcl
jmp
retf
jmp
add
aad
pop
(bad)
mov
add
shr
lods
cs
sub
push
inc
sub
scas
mov
jl
jnp
ss
jb
imul
and
mov
lea
and
mov
icebp
out
pop
cmp
repnz
inc
cmp
and
inc
dec
rcr
cdq
ds
call
cmp
pop
jnp
push
mov
sbb
mov
inc
data16
stos
fnstcw
cdq
push
dec
jmp
js
movs
fcmovu
xchg
pop
pop
jno
rol
fucomi
xchg
in
push
(bad)
jecxz
daa
test
jns
nop
cld
dec
sbb
jl
out
out
(bad)
(bad)
sub
sub
cld
in
jnp
aam
xor
dec
push
hlt
icebp
pop
pop
jno
sahf
stos
xor
out
add
push
mov
and
adc
inc
loopne
mov
cmps
je
fwait
and
xor
out
push
jecxz
dec
sti
popf
mov
mov
ins
sub
push
scas
or
in
out
inc
xchg
clc
push
movs
xchg
add
aaa
pop
sbb
ds
dec
cmp
pop
call
mov
repnz
add
or
addr16
pop
push
adc
ret
gs
mov
adc
push
adc
rcr
lds
pop
cmp
cmp
test
mov
aad
sbb
jne
push
xor
movs
leave
cmps
sti
cdq
push
int3
fdiv
shl
jo
xchg
push
lds
in
and
dec
sbb
cmp
xor
jno
retf
lahf
push
rcr
or
fdivr
pop
jb
lock
mov
mov
dec
(bad)
mov
and
jae
cmp
ins
mov
sub
jmp
ins
das
lods
icebp
mov
cs
popa
cmp
sbb
les
movs
call
push
repnz
fisttp
retf
dec
push
(bad)
addr16
mov
xor
rcr
lods
pop
xor
lods
xchg
inc
js
cmps
lds
push
cmp
push
addr16
inc
std
adc
dec
mov
fwait
in
or
int
mov
xchg
jl
test
mov
test
inc
mov
dec
pop
cmps
(bad)
fsubr
cmps
xchg
or
mov
mov
adc
mov
xchg
pop
(bad)
js
arpl
ror
xchg
mov
mov
mov
xchg
inc
inc
mov
adc
fcom
jmp
dec
jbe
or
mov
popf
inc
push
inc
arpl
dec
fadd
jmp
xchg
or
into
call
add
inc
shl
xlat
mov
jno
js
xchg
sub
jne
mov
addr16
repnz
or
aad
ret
enter
or
push
div
pop
mov
sub
xchg
mov
adc
neg
lahf
sti
xlat
mov
shl
mov
sahf
pop
xchg
loop
mov
adc
int3
xchg
jno
jne
sbb
xor
and
or
repnz
and
jle
retf
scas
and
sar
retf
clc
sahf
or
xor
aaa
fwait
push
push
cmp
dec
cmps
out
add
cmova
iret
mov
or
lds
xchg
dec
cmp
loopne
jb
pusha
mov
push
mov
mov
xor
fisttp
and
sbb
out
push
xchg
push
jmp
aas
movs
jge
aam
lods
mov
mov
sti
sub
and
out
es
jo
int
sub
sub
dec
out
sahf
(bad)
jle
(bad)
jo
add
sub
sbb
pop
cmp
out
inc
sahf
aam
jns
xchg
xor
fs
cdq
inc
pop
cmp
mov
les
cmps
mov
push
mov
jo
push
mov
push
out
mov
cs
mov
jno
xor
sub
dec
jg
jnp
sti
inc
xchg
cmps
lods
mov
mov
pop
xor
xor
sbb
mov
daa
sub
sub
daa
ins
cmc
iret
cli
mov
test
cmp
pop
lock
popa
jl
push
bound
aam
dec
dec
js
test
lds
sub
stos
jmp
out
pop
mov
loope
adc
add
push
mov
jp
mov
out
jg
retf
out
xor
cld
adc
gs
mov
inc
add
xor
mov
pop
iret
adc
cwde
out
sbb
pop
fstp
out
mov
mov
mov
das
jno
fiadd
pop
jae
xchg
or
out
fs
pop
pop
jno
test
pop
mov
movs
mov
movs
jmp
out
(bad)
stos
add
cmp
jmp
adc
jmp
jbe
pop
fadd
jecxz
push
cmps
push
popa
jl
mov
int3
pop
ss
in
inc
pop
mov
cwde
shl
enter
adc
pop
inc
pop
adc
xchg
fistp
test
pop
sbb
or
mov
lea
push
dec
or
ins
mov
repnz
in
or
and
lds
and
iret
dec
sub
stos
shr
call
aas
mov
sub
add
or
jns
fnstenv
fldcw
mov
inc
jbe
push
pop
sub
cmp
adc
pushf
pop
mov
sbb
je
fs
sub
imul
xor
mov
nop
aam
int
mov
push
inc
jge
sti
xor
outs
(bad)
ins
leave
cmp
in
sbb
mov
out
fsubr
xor
mov
clc
in
jmp
rcr
sub
push
push
fninit
push
add
mov
jp
add
(bad)
and
xor
(bad)
mov
or
scas
sbb
outs
pop
jg
fld
dec
mov
inc
repnz
mov
popf
sbb
or
fwait
test
or
sub
inc
lock
xchg
adc
cmp
push
js
bound
rcl
jne
loope
(bad)
cli
ins
call
stos
cdq
dec
add
pusha
sbb
dec
outs
mov
push
mov
or
ins
sub
mov
jle
mov
popf
add
retf
sub
ja
sbb
outs
xchg
push
push
sbb
jae
pushf
dec
push
sub
test
loope
mov
push
jo
shl
ror
cli
les
aas
outs
sub
cmp
sbb
ins
je
jmp
mov
inc
pop
cdq
pop
loope
mov
jo
cmps
into
xchg
lahf
ja
push
fmul
or
out
xchg
jnp
setp
mov
cmp
bound
dec
dec
gs
fwait
icebp
jnp
sti
daa
aam
jecxz
mov
push
fidiv
fdiv
dec
and
jg
lods
je
cwde
mov
frstor
mov
hlt
or
jo
jmp
call
add
push
cmp
mov
sub
pop
pop
push
mov
jb
xchg
gs
mov
mov
shl
ret
ficomp
lahf
fs
push
inc
xor
push
jne
aam
dec
pushf
in
loop
daa
jmp
mov
out
pushf
mov
addr16
jl
sub
and
popf
dec
ret
shl
retf
inc
sub
inc
mov
pop
mov
sub
fimul
xlat
call
das
pop
sub
xor
pusha
test
fstp
pop
pop
daa
or
or
sub
aam
push
fild
ficomp
loopne
aad
test
test
mov
in
fcmovnbe
popf
nop
test
in
xchg
sbb
ret
sub
addr16
xor
sbb
imul
imul
and
xchg
xchg
nop
es
loopne
pop
idiv
pop
retf
pop
dec
sub
test
jecxz
jl
cmc
adc
and
push
push
xor
int
pop
repz
inc
shr
dec
bound
and
inc
jle
xchg
mov
mov
mov
xlat
outs
(bad)
mov
xor
js
nop
aaa
idiv
push
int
push
jno
dec
mov
call
add
mov
push
leave
or
(bad)
leave
out
xor
and
jmp
xor
dec
aas
stos
popf
inc
push
or
jo
dec
xchg
inc
sar
enter
or
pop
xchg
jae
stos
outs
mov
call
hlt
add
sbb
cmp
sbb
inc
(bad)
sbb
mov
ins
loope
ds
pop
int
sbb
xor
fs
mov
mov
xor
adc
ins
mov
sub
ret
push
sbb
fs
adc
cs
imul
xor
mov
push
inc
test
movs
fimul
jae
or
icebp
es
dec
pop
call
(bad)
dec
out
nop
adc
jbe
das
jnp
retf
fdivr
jl
inc
jo
test
popa
je
mov
mov
and
inc
dec
arpl
repnz
mov
or
(bad)
xlat
repnz
test
inc
retf
sar
(bad)
pop
das
mov
xchg
(bad)
retf
(bad)
cld
sub
cmp
mov
test
lock
lahf
imul
mov
add
push
xor
pop
jle
and
stos
mov
cmp
les
xor
sbb
mov
aad
cdq
in
pusha
dec
xchg
sbb
and
mov
cmp
mov
ss
ret
in
add
mov
xor
(bad)
call
xor
mov
adc
push
movs
int
sar
or
repz
test
adc
or
inc
or
rcl
xor
(bad)
das
add
pop
dec
push
hlt
xor
jle
jl
xchg
jmp
xchg
cmps
pop
stc
or
jnp
sbb
pop
or
lock
push
push
or
pop
and
add
fsubr
xchg
push
adc
cmp
pop
in
test
loopne
js
xor
out
jmp
mov
mov
sbb
xchg
push
pop
popf
or
or
sub
adc
xor
daa
jb
arpl
enter
fbld
xchg
adc
mov
add
pop
mov
frstor
adc
nop
cmp
sub
sbb
dec
sub
lahf
fist
pop
cld
dec
pop
ror
test
out
mov
pop
fdivr
push
jb
jmp
out
and
aaa
retf
in
mov
jo
and
jp
push
idiv
mov
mov
or
mov
lea
std
inc
call
mov
lahf
xor
nop
dec
cmp
jl
clc
sahf
jno
xchg
out
push
adc
inc
inc
xor
out
icebp
fild
jae
push
mov
push
sti
cmp
jp
aas
adc
push
fnstsw
sbb
jle
(bad)
in
sbb
jae
dec
push
push
(bad)
pop
cmp
test
sub
retf
and
push
add
mov
leave
sbb
daa
pop
in
and
popf
mov
cdq
pushf
mov
call
sub
or
xchg
cmps
dec
mov
outs
sub
or
jns
stos
aas
jne
dec
daa
mov
or
loop
nop
xchg
arpl
(bad)
dec
inc
xor
mov
push
pop
(bad)
jnp
push
and
and
outs
xchg
pop
fild
push
cli
sbb
or
retf
mov
pop
icebp
mov
adc
cmps
aam
lds
call
adc
(bad)
mov
pop
dec
inc
cdq
mov
inc
lahf
xor
lods
ds
mov
gs
inc
xor
fwait
loop
out
stos
pop
cli
mov
mov
xlat
ins
xor
stc
scas
cmp
leave
xchg
aaa
nop
movs
outs
push
mov
or
add
(bad)
pushf
out
in
xor
aam
cld
jecxz
div
cwde
mov
ret
add
es
sbb
mov
ins
iret
inc
lea
jo
jg
adc
pop
leave
and
std
xchg
mov
cdq
jp
js
retf
stc
mov
jecxz
outs
mov
push
cmp
sub
xchg
add
retf
xor
jmp
stos
or
inc
mov
outs
dec
popa
adc
pushf
in
push
lods
xlat
std
popa
mov
sar
mov
pop
mov
fsincos
ds
sub
ror
into
fcomp
xchg
je
jecxz
ret
in
xchg
and
icebp
shl
or
shl
sbb
sti
push
or
add
ss
cmp
sub
pop
and
fcmovb
sub
(bad)
adc
xor
in
xchg
pop
xor
dec
outs
add
xchg
clc
mov
sbb
or
ror
and
out
movs
mov
xchg
pop
jp
popa
test
dec
mov
sub
jg
mov
inc
or
push
inc
cmp
retf
adc
xor
fs
adc
dec
sub
xor
js
dec
cld
jbe
adc
ja
out
push
jmp
sub
ins
arpl
imul
dec
dec
inc
daa
inc
imul
push
fidiv
xchg
in
xor
imul
and
lahf
fnstcw
mov
or
xchg
cdq
nop
shr
daa
xor
or
aam
js
mov
or
and
ret
or
jp
push
ror
cdq
cmp
pop
sub
and
cwde
mov
mov
jnp
pop
adc
fnsave
sub
das
add
ds
jo
jmp
test
dec
lods
mov
pop
mov
int
mov
stos
idiv
das
lods
dec
daa
nop
cdq
pop
and
out
or
cmps
test
mov
pop
in
jle
ret
xchg
mov
(bad)
pop
mov
or
fwait
repnz
dec
adc
push
clc
adc
stos
mov
cld
push
mov
jae
out
pop
or
clc
xor
push
add
inc
pop
ja
fisubr
test
add
loop
inc
(bad)
mov
jmp
dec
arpl
retf
es
add
and
sub
xor
mov
jle
xor
dec
pop
popf
aas
mov
mov
scas
dec
pop
cli
or
ja
or
inc
sbb
dec
fs
mov
loop
jo
push
rcl
sbb
aaa
out
mov
scas
dec
dec
pop
add
out
sub
adc
push
das
int
cmp
mov
dec
pop
loope
mov
jmp
cmp
or
aam
jo
push
sub
xor
cmp
sbb
inc
jnp
and
sbb
pusha
xchg
mov
inc
aaa
add
pop
call
jnp
mov
test
and
jmp
enter
xor
ins
cdq
jle
sbb
mov
aaa
jo
sbb
cmps
loop
sbb
aam
mov
and
xor
aam
dec
adc
je
aaa
cmp
or
xor
shl
popa
mov
test
dec
int
and
mov
daa
scas
(bad)
push
xor
sub
sbb
push
cmp
(bad)
(bad)
push
sar
data16
mov
push
into
mov
and
add
sub
ins
out
mov
outs
xchg
push
les
sub
jnp
mov
xchg
popa
sub
or
retf
jmp
pop
outs
pop
and
pusha
enter
cmp
xor
sbb
xor
ss
cld
mov
repnz
and
retf
sbb
pop
mov
push
imul
push
jbe
cmp
pop
add
mov
test
mov
cmp
aaa
pop
imul
mov
mov
lods
jno
mov
dec
mov
addr16
cld
and
xlat
adc
dec
outs
sbb
mov
mov
push
push
mov
repnz
fdiv
cld
cmp
shl
or
jecxz
aam
scas
test
push
push
jl
push
adc
not
and
inc
das
rcr
pusha
xchg
fimul
fcom
into
add
sbb
cmp
test
mov
mov
mov
in
cmp
sbb
das
in
pop
enter
xchg
out
pop
hlt
push
shl
xlat
das
jmp
stc
cdq
sbb
dec
dec
mov
aad
out
mov
icebp
mov
rcl
hlt
pop
push
push
adc
xchg
rcl
stos
sahf
add
lahf
push
mov
xlat
test
mul
bnd
rol
dec
sti
push
push
adc
out
enter
xor
call
icebp
mov
loopne
or
imul
ret
(bad)
jnp
sbb
fnstcw
and
mov
cmp
sub
or
or
inc
test
add
fiadd
mov
inc
sub
push
ror
aas
xor
rcl
push
ftst
jmp
xor
lds
push
shr
adc
sti
mov
push
shr
mov
push
xor
push
pop
stos
rol
shl
fdivr
cmc
cmp
dec
xor
sbb
sub
and
stos
cmp
inc
xchg
xor
mov
stc
mov
mov
sbb
sub
or
lods
sub
mov
fmulp
push
repz
jl
jbe
push
jmp
pop
cmps
mov
push
push
es
loop
dec
pop
inc
or
mov
aad
push
push
ja
sub
(bad)
ficom
je
sbb
xchg
pop
idiv
push
cdq
sbb
pop
in
call
mov
mov
jl
(bad)
xchg
inc
dec
cwde
and
popf
sbb
lods
pop
aam
mov
mov
das
hlt
imul
in
inc
aad
or
jmp
adc
mov
addr16
push
ins
imul
mov
cli
fsqrt
sbb
out
push
(bad)
mov
aaa
and
pop
sbb
or
xchg
sbb
adc
lock
shr
hlt
pop
and
cld
or
and
rcr
scas
push
jnp
sbb
jecxz
sub
leave
stos
adc
out
mov
cmps
in
add
jae
pop
jge
pusha
pushf
dec
push
add
adc
aam
pop
dec
iret
pushf
dec
mov
or
mov
xchg
xchg
(bad)
mov
pop
cld
cld
nop
cmc
push
cmp
call
dec
push
popa
nop
out
lea
fild
adc
pop
jae
out
or
(bad)
iret
sbb
jns
fimul
cld
mov
pop
xlat
or
push
mov
xchg
cwde
cld
into
mov
dec
das
sub
xchg
rcr
adc
cdq
push
cdq
ins
mov
mov
xchg
cmp
leave
and
mov
cmc
repnz
xor
xlat
sub
jbe
adc
stos
jge
push
and
loope
enter
ins
shr
mov
and
fst
jbe
daa
inc
enter
adc
repnz
push
stc
pushw
adc
into
dec
cmps
xchg
popf
pop
mov
outs
mov
test
pop
fwait
cmps
imul
mov
sub
dec
dec
(bad)
xor
hlt
cdq
test
repz
sub
rcr
(bad)
popf
jle
fidiv
and
jg
or
clc
mov
not
cmc
inc
call
daa
push
data16
out
call
cmp
sub
mov
int3
add
push
repz
and
in
sbb
fs
cmc
adc
pop
clc
test
ins
xchg
pop
jp
sar
lods
dec
pop
jbe
inc
das
cmp
cmp
add
gs
pop
mov
push
(bad)
shl
mov
out
mov
mov
mov
and
inc
gs
jmp
jb
jecxz
jge
stos
jo
movs
jae
ds
(bad)
mov
jmp
int
not
push
mov
sub
fldcw
push
xchg
cmp
mov
dec
lods
mov
(bad)
jge
push
stc
fstp
push
xor
out
pop
and
jbe
add
add
in
cmps
jo
xor
mov
xor
retf
push
xor
add
hlt
mul
(bad)
scas
rol
int3
shr
in
mov
mov
int3
(bad)
sbb
imul
inc
pop
stos
adc
out
adc
loop
out
mov
push
movs
out
and
mov
xchg
retf
push
ins
dec
lods
imul
ret
out
cmp
retf
pop
aas
mov
push
in
xor
ds
arpl
jmp
pop
jnp
adc
sbb
xor
std
adc
mov
mov
jl
test
int
(bad)
inc
frstor
mov
pop
inc
inc
mov
int
inc
scas
popf
mov
push
xchg
mov
dec
aam
gs
lods
call
fadd
push
adc
dec
dec
das
pop
out
popa
add
add
mov
hlt
sbb
jg
aaa
cli
jl
pop
xchg
ret
xchg
rcr
in
or
sub
xchg
pop
jle
aad
cmps
pusha
push
in
cmp
aad
jno
movs
mov
shl
mov
sar
jge
add
jg
aam
jge
pop
test
xor
mov
mov
je
aam
cmc
push
sub
outs
pop
lods
dec
jge
jne
jbe
retf
adc
ror
cli
aas
sbb
pop
lods
or
inc
psubusb
xchg
ret
loopne
fist
jp
mov
nop
adc
inc
jne
adc
jns
or
xchg
cmp
mov
loopne
out
out
push
xor
clc
jge
loopne
ins
pop
sbb
xor
pop
stc
call
popa
cli
push
or
cmp
sub
cmp
mov
pop
mov
pop
out
xchg
mov
rcr
call
fimul
rcl
or
ja
call
seta
sub
(bad)
mov
call
pop
jecxz
cmps
fld
jne
call
mov
test
imul
jg
jb
popa
xor
jno
mov
cld
xlat
sub
je
bound
bound
xchg
cdq
jp
mov
cmp
and
cmp
mov
inc
aaa
hlt
xchg
ds
or
inc
xchg
inc
push
sbb
(bad)
aam
nop
mov
in
adc
mov
adc
repz
cld
or
retf
xchg
jle
add
fwait
xchg
retf
lahf
sar
pusha
mov
mov
mov
repnz
xchg
dec
xor
ins
or
dec
shl
test
bound
inc
dec
add
arpl
pop
test
lods
jo
cmp
cmp
xchg
mov
jmp
mov
ins
sub
into
cmp
(bad)
es
jnp
lods
into
push
adc
dec
pushf
and
sub
push
cmps
sbb
cmp
jg
mov
push
xor
in
cs
jle
sti
mov
hlt
test
mov
bound
sbb
int
mov
movs
pop
dec
push
loope
xchg
shl
pop
sub
mov
pop
stc
ret
xor
xchg
push
sbb
mov
jbe
jne
xchg
sti
sub
cmp
out
mov
adc
fwait
inc
xor
retf
push
js
cmp
cmps
leave
push
push
popf
push
ret
jp
cwde
cmp
pop
mov
setns
int3
or
inc
mov
push
jbe
sub
xchg
xchg
mov
mov
lods
mov
scas
mov
sub
cmps
push
and
pusha
imul
in
push
dec
cdq
cmp
into
and
mov
mov
loope
mov
pusha
cmp
sub
inc
hlt
adc
sub
outs
xor
cmp
nop
pop
mov
fsub
mov
inc
pop
(bad)
or
out
adc
mov
mov
and
push
lea
xor
js
aaa
js
jge
and
cs
ja
out
gs
push
imul
ror
js
push
cmp
or
mov
ffreep
cli
popa
sbb
add
add
xchg
retf
ins
aaa
inc
call
aas
jo
jae
scas
popf
lock
add
mov
imul
mov
stos
jo
pushf
cmp
pop
shl
jecxz
jne
and
leave
stos
dec
test
sar
push
add
add
retf
out
xchg
pop
div
fmul
jno
gs
adc
call
clc
je
mov
pop
sbb
inc
ja
pop
inc
and
shl
scas
nop
shr
fisub
fmul
add
add
mov
lahf
das
jo
inc
push
nop
push
push
test
xchg
lds
mov
rcr
pop
xchg
or
jae
fs
dec
je
xchg
ret
rcr
push
stos
mov
sub
sbb
sub
xchg
hlt
enter
push
enter
lds
ret
ret
xor
mov
ret
imul
ficomp
div
hlt
aam
pcmpgtb
dec
dec
mov
pop
dec
xchg
into
pop
mov
in
cmc
outs
(bad)
inc
mov
or
lods
icebp
hlt
sub
pop
push
adc
(bad)
stos
test
sti
fist
call
fbstp
pushf
pop
xchg
fidivr
jmp
in
or
jb
sub
inc
pop
das
add
imul
push
in
push
es
cmc
retf
imul
mov
fcom
cmp
jl
push
sbb
aas
fiadd
push
cmp
pop
xchg
jge
xlat
dec
mov
or
adc
iret
jo
jmp
test
arpl
ins
jbe
nop
nop
sub
inc
jno
adc
leave
adc
xor
ror
push
or
add
gs
mov
jecxz
xchg
xor
and
jo
sbb
call
add
sti
xchg
mov
pop
loope
stc
imul
shl
in
push
mov
es
nop
lock
(bad)
retf
pusha
jmp
arpl
lods
into
sbb
jbe
addr16
dec
sbb
sti
aas
push
sub
sub
mov
js
ror
arpl
mov
add
push
fist
popa
sti
lds
push
loope
dec
push
mov
add
sbb
mov
jmp
(bad)
sub
imul
or
enter
mov
push
icebp
pop
pop
or
jae
into
dec
mov
lahf
sbb
xchg
xchg
mov
xor
pop
jbe
xor
mov
ret
movs
pop
pop
cmp
cmps
add
les
fadd
scas
inc
outs
add
fs
xchg
mov
lds
data16
xchg
aad
test
mov
sub
lahf
push
fist
mov
xchg
fisub
movs
scas
mov
aam
or
mov
pop
xchg
scas
add
loop
xchg
fnsave
add
push
loopne
sbb
inc
sub
(bad)
call
sar
pop
xchg
mov
les
in
lock
fwait
jmp
hlt
mov
push
movs
fcomp
jnp
js
sbb
mov
pushf
cmc
add
test
aas
mov
sbb
jbe
add
mov
push
aam
xlat
clc
ins
lds
jnp
test
ds
popa
ds
xchg
or
lock
out
xor
ret
fcom
push
adc
pop
repz
arpl
punpckldq
adc
test
add
cs
test
pop
gs
jg
cmp
test
add
sub
hlt
fisttp
pop
jl
(bad)
and
jl
inc
shr
nop
push
ret
stos
bound
mov
ins
lods
(bad)
addr16
pop
jbe
push
out
lahf
or
test
or
jno
push
jb
mov
sub
mov
test
in
shl
dec
dec
les
retf
lahf
xchg
ss
inc
and
pop
mov
fidivr
imul
xchg
test
sar
xchg
fdiv
cdq
test
mov
gs
sbb
ss
pop
inc
mov
and
push
in
je
sbb
aaa
(bad)
aad
sbb
repnz
adc
mov
adc
or
loopne
cmp
(bad)
cld
xchg
sbb
or
(bad)
cs
or
mov
daa
stos
sub
pop
mov
std
push
xchg
popa
pop
mov
or
es
movs
mov
cmp
add
shl
add
dec
fsubrp
(bad)
aas
cmp
dec
loope
outs
dec
cmp
pop
pop
movs
push
loope
movs
mov
shl
add
sbb
mov
out
sti
sub
sbb
ret
jae
jle
jl
add
bound
test
jl
das
xchg
cdq
xchg
push
xchg
out
pop
movs
xchg
dec
(bad)
cld
outs
mov
ins
sub
sbb
cmp
clc
(bad)
fwait
mov
dec
imul
jns
add
xchg
fwait
cli
dec
das
jbe
add
mov
jle
fxch
int
lea
int3
aas
mov
fucomp
pushf
aam
or
adc
xor
mov
pop
mov
(bad)
or
das
mov
push
inc
push
mov
aaa
aam
in
mov
sbb
xchg
and
xchg
mov
mov
clc
mov
fld
lahf
repnz
xor
imul
loopne
mov
jno
xor
mov
lahf
jnp
xor
fucomi
scas
adc
aad
gs
cmp
jo
ror
in
nop
dec
jo
fidivr
les
into
push
loope
dec
fisttp
fist
cmc
xchg
pop
outs
xor
cmc
ds
loopne
sbb
xchg
scas
ror
add
xchg
cmp
pusha
adc
imul
pop
std
inc
mov
loope
push
cdq
jmp
and
ins
jnp
mov
cmp
dec
in
shr
and
mov
cmp
pop
aaa
fs
sar
popa
out
push
lea
aas
jmp
scas
cdq
and
lahf
ror
xchg
xchg
inc
adc
stos
adc
xchg
mul
jbe
xchg
or
add
(bad)
test
aad
mov
loop
mov
adc
cli
retf
mov
or
les
pop
dec
gs
pusha
sub
fiadd
mov
imul
jne
ror
dec
pop
(bad)
mov
mov
(bad)
add
int
sbb
add
inc
imul
dec
dec
jecxz
sbb
test
xor
jb
inc
(bad)
fistp
xor
(bad)
sbb
cdq
push
test
pop
sub
icebp
push
xor
sahf
ret
jl
and
cmp
comiss
inc
mov
movs
inc
xor
xchg
push
dec
mov
mov
in
retf
sub
pmaddwd
jmp
push
cdq
arpl
mov
mov
add
outs
les
jmp
mov
in
sub
das
repnz
mov
and
pushf
jg
in
out
daa
cmp
in
or
psubusb
jl
dec
dec
idiv
repnz
(bad)
in
mov
or
cmc
cmps
pop
xor
mov
das
out
das
hlt
adc
xlat
rcr
outs
cmp
test
stc
dec
add
(bad)
test
jbe
push
dec
mov
lock
and
adc
fadd
outs
pop
ror
mul
mov
cmp
imul
add
xor
xchg
xor
test
clc
sub
movq
jnp
push
xchg
mov
mov
pop
cmc
xor
xor
jns
jb
(bad)
adc
inc
ss
adc
outs
leave
cmp
fwait
mov
aas
ret
jae
adc
into
dec
pop
cwde
jo
jg
cs
or
dec
cs
add
xor
cmp
inc
popa
mov
fild
imul
pop
cwde
xchg
mov
test
(bad)
dec
add
addr16
sbb
loope
xlat
sahf
inc
mov
jl
sar
push
(bad)
shr
cmp
add
aad
inc
out
sbb
and
sar
outs
add
adc
xrelease
fcomp
movs
mov
aam
outs
add
scas
push
mov
fidiv
sar
in
inc
or
cmc
fwait
sti
add
or
stc
mov
adc
jo
or
jae
imul
jl
push
inc
xor
add
push
push
in
int3
mov
jg
ins
aas
aaa
ret
pop
or
dec
cmp
enter
mov
adc
pop
and
pop
int3
les
call
repnz
shr
aam
int
xchg
movs
sub
stos
jne
push
jecxz
ja
push
adc
in
pop
add
scas
mov
mov
arpl
stc
rcl
add
adc
lea
scas
push
fisub
shr
out
cmp
sti
push
xchg
rcl
pop
loop
jge
icebp
ret
ja
pop
mov
add
xor
fisubr
test
add
or
mov
out
out
hlt
fisttp
(bad)
mov
lods
sub
pop
es
loopne
or
fnsave
sbb
xchg
pop
push
mov
inc
dec
cwde
mov
xor
sbb
test
imul
inc
dec
call
sti
inc
cli
popf
imul
fnstsw
cld
or
push
mov
lds
out
xchg
jae
mov
and
or
pop
inc
fsubr
sbb
push
rol
xchg
jns
lods
imul
std
out
cmovg
ds
fs
mov
int
mov
cmp
jno
aas
xor
jae
aad
icebp
ret
add
adc
xor
mov
ja
enter
mov
pop
pop
ins
push
imul
add
mov
lock
push
(bad)
jl
jecxz
ds
pop
dec
dec
mov
pop
dec
jge
adc
dec
sub
sbb
push
jmp
adc
cs
pop
fisttp
push
(bad)
dec
std
jnp
mov
xchg
aad
cmp
btc
cmps
pop
cwde
cmp
mov
or
cwde
jecxz
in
lahf
mov
enter
ins
(bad)
imul
pop
adc
mov
cwde
mov
dec
into
test
sub
fwait
jmp
outs
das
cs
les
mov
nop
fimul
pop
cmps
add
jmp
or
jb
lods
pop
(bad)
jp
(bad)
adc
fistp
retf
mov
mov
popa
lods
xchg
jg
add
push
jnp
pop
(bad)
mov
sbb
push
retf
lock
sti
fisub
fldcw
clc
sbb
leave
dec
shr
retf
stos
and
mov
nop
mov
repz
lods
sub
retf
inc
push
and
in
jl
cli
mov
adc
pop
arpl
leave
ret
out
retf
mov
inc
jb
xchg
pop
pop
shl
dec
pop
(bad)
daa
iret
push
daa
test
xor
dec
sub
jae
adc
or
push
int3
push
call
fisub
stos
mov
aam
mov
mov
jle
pusha
call
in
cmp
add
inc
xor
jbe
sbb
cmp
jae
mov
sub
mov
cdq
imul
push
pand
cmp
mov
mov
mov
cld
jns
xor
mov
sti
inc
je
sahf
sahf
jl
int
jne
mov
out
dec
add
jmp
jl
adc
pop
(bad)
fld
mov
adc
add
mov
ja
mov
js
jbe
iret
adc
movs
xchg
(bad)
fiadd
sub
ins
es
push
jne
stos
or
push
pop
aas
icebp
lea
daa
cmp
inc
cli
cmps
jl
mov
fild
lea
repnz
or
mov
imul
movs
mov
mov
mov
inc
jl
addr16
pop
cmps
push
shl
and
das
imul
push
enter
je
fiadd
clc
int3
xor
shl
mov
jecxz
dec
sub
scas
mov
clc
push
pop
cmps
add
pop
mov
mul
mov
aaa
(bad)
in
out
out
xchg
mov
jo
pop
and
popa
sub
or
jmp
jae
sbb
push
sbb
inc
cmps
fucomi
sub
popf
and
in
ja
not
push
mov
mov
aas
inc
pop
xor
popf
popa
dec
ins
aas
fist
lea
add
xchg
idiv
mov
aad
rcl
mov
ins
and
leave
and
inc
stos
sub
(bad)
out
es
jae
fmul
push
jmp
pop
stos
and
scas
sbb
mov
jp
ret
pusha
bound
or
and
add
in
push
shl
out
mov
push
cmps
pop
enter
or
out
add
lds
fwait
daa
push
ror
jmp
dec
bound
cmp
sub
pop
sbb
and
leave
ins
or
xchg
push
jecxz
cdq
mov
aad
push
cdq
retf
sub
sbb
and
xchg
int
lods
xor
xchg
out
inc
jmp
add
leave
ins
stos
mov
data16
arpl
(bad)
or
jnp
add
je
ret
out
out
or
shl
sbb
int
xchg
inc
jmp
sbb
mov
and
enter
or
adc
or
fadd
frstor
ins
pop
es
and
mov
push
push
popa
and
mov
lock
fs
outs
or
pop
mov
push
stos
mov
ror
inc
std
or
addr16
cli
cmp
mov
pop
and
mov
fisubr
mul
push
je
jo
jg
pop
out
xchg
cmp
es
leave
call
std
xchg
jp
retf
xchg
stos
xchg
mov
xor
pop
ins
jp
sub
adc
call
mov
or
fs
cmp
push
icebp
mov
int
jno
add
or
xchg
pop
and
addr16
ret
cs
loop
cmp
(bad)
bswap
inc
adc
push
leave
mov
mov
loop
lds
pop
aad
adc
scas
sub
pusha
jne
dec
pop
fld
xor
test
or
imul
pop
lahf
and
dec
mov
sub
fwait
enter
xor
sbb
stos
push
add
stos
push
pop
test
test
sbb
in
repz
inc
mov
outs
rol
int
cmp
add
jmp
add
(bad)
(bad)
(bad)
test
retf
adc
push
and
mov
or
retf
mov
lock
adc
nop
or
lock
pop
sbb
in
xchg
popf
repz
daa
lods
xchg
pop
lods
xchg
add
in
push
pop
popf
retf
pop
add
inc
sbb
jmp
sub
ins
fst
and
arpl
or
jg
cwde
mov
add
xchg
jno
xchg
scas
adc
mov
fmul
push
mov
mov
aad
std
mov
jnp
movs
(bad)
into
sub
or
add
jae
fisub
xor
push
add
popf
jecxz
out
lock
pop
pop
mov
sbb
lea
and
xchg
(bad)
loope
sub
mov
out
aaa
xchg
(bad)
out
repnz
fld
add
and
cmp
fild
dec
add
cmp
pop
arpl
test
ficom
push
sti
dec
xchg
into
mov
xchg
inc
cmc
jecxz
into
hlt
add
xchg
xchg
jns
inc
pop
ja
les
fwait
mov
pop
mov
cmp
mov
add
fucomi
int
sbb
lods
popf
and
pop
rdmsr
outs
int3
adc
pop
sub
ror
in
test
shr
les
(bad)
adc
push
sub
sbb
push
aas
(bad)
sub
shr
lods
sub
adc
mov
iret
xor
mov
mov
rol
div
push
fwait
leave
mov
or
jns
sub
stos
xchg
or
xchg
xchg
cs
jle
jl
sar
stos
mov
out
sub
xchg
inc
pop
loopne
add
stc
daa
mov
cmp
pop
inc
test
mov
jecxz
daa
mov
cmp
jne
push
pop
sbb
mov
add
jne
pop
jp
(bad)
cmp
fwait
adc
add
sbb
sahf
or
fnstenv
nop
frstor
mov
js
sub
jmp
sub
fild
stos
jmp
pushf
mov
mov
jp
mov
sub
inc
or
push
xor
mov
repnz
inc
push
mov
inc
jne
jg
loope
inc
cmp
sti
sbb
sbb
je
cmp
pop
inc
arpl
pusha
inc
test
jp
dec
iret
(bad)
xor
enter
lds
(bad)
lods
push
repz
cmp
retf
inc
sub
fldenv
test
adc
push
repnz
cmp
loope
(bad)
adc
pop
cmc
or
enter
and
test
sub
stos
push
inc
inc
sub
push
out
mov
bound
inc
pmulhuw
in
xor
sub
sub
nop
push
or
xor
or
inc
and
add
jbe
cwde
ret
sti
leave
(bad)
or
popa
mov
add
sahf
jge
jecxz
xchg
fdiv
lea
mov
jle
fnstsw
and
clc
jp
sti
(bad)
aaa
jb
out
xlat
sbb
dec
fisttp
xor
xchg
mov
adc
pop
pop
cmp
jmp
outs
inc
in
mov
stc
sbb
popa
stos
mov
add
adc
mov
pop
jp
out
cmps
mov
pushf
mov
and
lahf
dec
inc
int3
adc
mov
jg
es
lock
pop
and
pop
mov
sub
push
inc
stos
or
int3
or
inc
imul
adc
cmp
lahf
retf
out
add
repz
dec
popa
and
loopne
sub
jnp
out
or
inc
popa
inc
push
shr
scas
push
popa
pusha
(bad)
sbb
sub
in
push
nop
mov
out
bound
and
retf
les
cmc
sub
mov
aas
in
movs
aaa
cdq
fstp
cmps
repz
add
js
adc
into
or
mov
xrelease
ror
out
or
inc
add
scas
iret
sti
(bad)
fldcw
mov
xchg
jle
popf
sbb
fwait
cmp
xchg
mov
inc
push
aam
stc
out
shl
ins
xchg
mov
sti
mov
repz
push
aad
xchg
data16
pop
xchg
sbb
mov
(bad)
jecxz
adc
fnstenv
xchg
scas
mov
or
inc
stos
movs
(bad)
jno
(bad)
adc
sar
retf
fsubr
cmp
dec
nop
call
push
xlat
sbb
lahf
jmp
fnstenv
mov
mov
out
xchg
cmc
adc
xor
adc
enter
and
iret
push
cld
imul
xor
xor
in
scas
sbb
adc
mov
mov
mov
pop
sub
and
mov
scas
aas
enter
retf
mov
mov
call
js
dec
mov
movs
popa
(bad)
add
and
leave
or
push
jne
jecxz
sub
fs
daa
add
es
rcr
pop
jno
lods
mov
mov
cli
and
ds
jmp
enter
jp
jg
push
mov
enter
push
loope
lods
adc
out
jmp
jge
in
mov
mov
je
adc
in
ret
pop
loope
push
les
fwait
adc
enter
dec
mov
jmp
out
adc
sti
adc
ins
mov
mov
aaa
cmp
out
push
add
mov
shl
psllq
cs
push
dec
loope
js
lea
add
xor
lahf
shr
push
movs
scas
call
movs
das
xchg
mov
js
in
fidivr
out
repnz
xchg
scas
or
or
movs
xchg
js
mov
mov
or
cmp
adc
ret
cmp
cdq
ret
pop
cmp
rol
fdivr
xor
pushf
ret
and
push
popf
xchg
or
pop
ret
dec
mov
nop
mov
pushf
repnz
jp
dec
popa
ror
das
push
sti
sub
mov
jae
out
mov
dec
push
xlat
cmp
sub
lods
jo
mov
dec
bound
sub
dec
sbb
ins
enter
jo
fst
ss
mov
adc
lds
mov
push
stos
fistp
ja
les
data16
ins
push
push
enter
add
mov
in
mov
rol
xchg
mov
or
jmp
mov
fcmovnb
cmp
dec
cmp
jle
push
je
pushf
in
mov
and
lock
and
stos
and
jge
mov
jmp
sbb
cmp
shl
xchg
lea
jns
outs
inc
mov
in
push
out
inc
xchg
push
xchg
adc
mov
retf
rcl
inc
sbb
sbb
inc
mov
mov
cmp
mov
push
push
or
fucomi
repz
sub
mov
cli
sub
movs
sbb
xor
stc
stos
fidiv
mov
nop
sub
stos
aad
mov
(bad)
imul
shl
(bad)
jb
mov
(bad)
stos
jns
sub
sbb
mov
fadd
int
jns
jmp
repnz
push
mov
inc
test
(bad)
cmc
ja
js
ret
scas
mov
or
test
mov
daa
pop
or
out
mov
push
lods
or
rol
inc
rol
mov
sub
aad
mov
jnp
retf
add
jb
test
push
push
inc
shl
and
xchg
adc
mov
cmps
xchg
shl
icebp
mov
lods
jle
push
test
aam
retf
jecxz
lods
shr
and
dec
pop
cmp
cmc
stos
daa
leave
adc
rol
adc
jmp
iret
inc
aas
xchg
sbb
jp
jmp
dec
sar
jle
std
(bad)
inc
cmp
iret
mov
jg
stos
sbb
(bad)
xlat
iret
loope
pusha
push
popa
push
xchg
push
pushf
mov
dec
and
dec
ret
push
repnz
addr16
pushf
sbb
jnp
lods
test
out
in
push
into
out
iret
push
je
mov
cmp
dec
push
dec
retf
mul
enter
test
sub
mov
loopne
popf
std
or
xor
jne
aad
shr
mov
bound
mov
jmp
call
push
push
adc
into
(bad)
push
inc
inc
cmp
sub
mov
aad
xchg
ins
or
mov
sti
data16
pop
adc
sbb
pop
add
shl
jmp
dec
scas
add
or
mov
xchg
int
mov
loope
cs
data16
shr
jae
call
sahf
mov
or
out
mov
popf
rol
mov
push
jmp
cld
stos
sbb
ficom
mov
dec
xor
cmp
aas
stos
cmp
xor
aas
pop
push
out
cli
movs
pop
outs
mov
sahf
aad
adc
xchg
push
out
xor
(bad)
in
push
sub
pop
rep
std
mov
pop
fisttp
sub
fisttp
or
push
aas
pop
sub
mov
pop
mov
and
and
mov
lods
in
repnz
inc
lock
cwde
aaa
cmps
inc
(bad)
push
push
lahf
call
sbb
(bad)
mov
gs
fimul
scas
hlt
retf
rcl
xlat
mov
mov
cld
idiv
arpl
in
(bad)
shl
inc
ret
add
add
add
add
loope
lods
push
outs
sbb
std
adc
lock
sbb
mov
xlat
popa
cli
push
push
loop
jmp
jecxz
ret
in
ret
cmc
inc
or
loope
cmp
in
inc
retf
jge
push
sbb
movs
push
add
xchg
xchg
adc
shl
xchg
mov
mov
(bad)
fucomi
lahf
jbe
xor
sub
push
outs
dec
adc
inc
out
lock
shl
jmp
fisub
sbb
push
mov
mov
jl
fwait
xchg
scas
jmp
xor
inc
sbb
adc
adc
test
sub
jecxz
cmp
lahf
pop
in
cld
sti
ret
pop
movs
pusha
add
and
xchg
push
mov
ins
mov
sub
sbb
cmp
sbb
xchg
push
jmp
cli
ror
mov
jge
pop
add
ficom
mov
and
ror
iret
daa
jne
test
mov
arpl
mov
popf
mov
cdq
inc
sti
fmul
nop
push
and
inc
cmp
adc
rcr
fcom
(bad)
xchg
pop
cwde
movs
das
(bad)
push
jg
jg
lahf
jae
test
enter
push
movs
jmp
jns
pop
push
and
jp
int
es
push
loope
sub
mov
aas
ins
ret
or
jle
cld
inc
je
xchg
sbb
cmp
loop
or
popf
lea
or
cmc
inc
lahf
mov
pop
je
cld
add
jbe
mov
or
add
retf
push
out
cmp
and
sub
fisubr
rol
xor
std
cmp
and
pop
xchg
test
nop
fs
sbb
jle
xchg
jl
ds
dec
pop
pop
movs
pusha
pushf
stc
mov
xor
push
fwait
cli
call
sub
repz
and
sar
loop
sbb
xor
mov
aas
and
sub
push
cmp
outs
jl
jmp
lahf
mov
test
cmps
push
add
sbb
push
and
bound
cmp
call
shr
mov
mov
xor
icebp
leave
adc
fisttp
test
shl
add
and
jae
and
sti
out
mov
or
mov
cmp
das
div
bound
outs
arpl
dec
fs
xchg
xor
pop
and
add
mov
cmps
dec
jmp
mov
rol
daa
adc
retf
add
cmps
cmps
push
adc
inc
xchg
neg
daa
mov
mov
push
pop
jns
sub
pop
ins
fadd
adc
cmps
adc
pop
dec
pop
je
retf
jge
or
mov
icebp
cmc
mov
mov
popf
out
in
fadd
mov
in
stc
xchg
inc
sahf
outs
xchg
inc
jecxz
adc
xor
leave
jge
movs
jecxz
test
data16
mov
pop
push
gs
sahf
add
sub
mov
fist
sbb
cwde
setge
movs
mov
sbb
jp
adc
sub
sbb
sbb
push
adc
div
jo
mov
fwait
hlt
cmp
gs
xor
imul
shr
sub
mov
push
je
push
inc
xor
cmp
jmp
stos
pop
push
push
push
in
cs
pop
ins
mov
ret
aas
and
mov
dec
mov
int
or
lahf
sbb
neg
add
lods
dec
test
and
xchg
mov
push
sbb
mov
sub
sbb
dec
rcl
cmp
stos
cld
xor
jnp
ficomp
data16
cmp
cmps
out
dec
mov
int
jge
out
jle
mov
fs
xor
hlt
dec
scas
fcom
(bad)
movs
or
scas
(bad)
xor
xor
inc
mov
xor
sar
xchg
cmp
jb
(bad)
out
addr16
cmp
add
ss
ret
or
scas
add
jge
mov
xchg
fs
pop
push
pop
and
fistp
sbb
mov
mov
jle
daa
(bad)
lahf
dec
cli
retf
and
lods
sub
ja
mov
mov
loop
and
pushf
int
and
pop
cwde
push
jae
pop
pop
xchg
clc
imul
fmulp
xor
adc
mov
inc
pmuludq
ja
pusha
rcl
fst
dec
icebp
cmp
pop
movs
lods
xor
xchg
xor
nop
dec
sbb
mov
and
dec
fbstp
xor
and
dec
sub
push
int
pusha
mov
inc
(bad)
cli
scas
xchg
in
push
or
inc
add
jae
les
call
outs
aas
(bad)
mov
fidiv
add
jae
jae
mov
dec
cmp
cld
sar
push
fst
cmp
and
dec
add
enter
jbe
or
lock
add
jno
dec
sub
cmp
clc
addr16
push
mov
jg
pusha
adc
imul
test
fimul
and
xor
xor
add
call
xor
in
test
mov
ds
inc
mov
int3
daa
pusha
push
out
adc
jl
and
(bad)
pusha
xchg
add
test
push
out
adc
sbb
inc
add
sub
adc
sub
sbb
jecxz
jae
jnp
pushf
mov
sar
mov
pop
xor
scas
xchg
and
mov
movs
inc
cmc
mov
cwde
or
daa
jmp
add
pop
movaps
bound
xor
ins
in
mov
ins
xchg
push
pushf
into
das
cld
lods
mov
push
mov
fisttp
repnz
xor
not
fst
arpl
and
inc
or
dec
ds
pop
in
lahf
pop
push
leave
push
dec
loope
das
scas
outs
aas
add
mov
mov
hlt
bnd
sbb
dec
nop
fs
sbb
add
push
inc
xor
mov
shr
lahf
jmp
jp
data16
fbstp
vmaxss
xchg
add
es
jbe
xor
pop
pop
pop
sub
xor
ins
push
lods
test
dec
adc
xchg
sub
mov
xchg
dec
dec
sub
mov
sub
inc
sub
outs
adc
or
call
push
jne
sahf
ret
rcr
imul
jecxz
mov
mov
das
xor
das
bound
cmp
mov
(bad)
stos
jmp
or
sbb
imul
adc
(bad)
push
mov
jbe
mov
test
aaa
dec
jmp
inc
outs
pop
inc
(bad)
call
sub
mov
retf
mov
xchg
icebp
add
lods
rol
push
push
(bad)
cmp
test
or
inc
push
stos
mov
int3
add
leave
mov
icebp
(bad)
in
mov
or
jge
xlat
pop
loope
ins
jbe
not
outs
cmc
inc
push
push
fisub
push
mov
mov
das
lea
jo
call
leave
outs
ret
lds
xlat
dec
mov
in
fs
fld
pusha
push
dec
inc
int3
cmp
fdivr
in
adc
neg
aad
sub
jae
sub
mov
rol
clc
cmps
push
ror
hlt
sub
sahf
inc
repz
jo
out
(bad)
cmc
rcl
ret
loop
inc
jle
mov
ss
cmp
jb
movs
push
fs
and
mov
test
pop
(bad)
or
xor
in
sub
(bad)
lock
jg
push
cdq
repz
fsubr
js
add
pusha
cmps
sbb
loope
popf
push
sub
pop
call
hlt
push
fistp
push
fdiv
lock
pop
imul
dec
push
push
std
sub
push
sbb
not
cld
cwde
and
lds
in
mov
inc
jecxz
cli
xchg
cdq
push
adc
push
push
call
shl
in
sbb
add
int
ret
test
or
push
das
xchg
inc
and
cmc
and
mov
xor
fild
jnp
push
pop
repz
jge
pop
push
div
test
gs
mov
ds
fld
(bad)
not
sbb
push
enter
jbe
pop
lock
ror
mov
or
jge
in
mov
aaa
xchg
cdq
fisubr
fnsave
pop
ins
imul
jb
adc
jp
fist
out
mov
sbb
shl
fisubr
test
loopne
jg
mov
xchg
shl
add
js
test
or
push
mov
xchg
push
inc
push
xchg
push
dec
xor
sahf
cmp
xor
stc
xchg
shl
or
fidivr
push
xchg
shr
cs
add
xchg
jmp
imul
(bad)
adc
xchg
std
add
pop
cwde
cmp
push
into
es
jmp
pop
outs
mov
lods
and
cli
imul
push
cli
push
mov
mov
pop
es
pop
pop
xchg
test
cmp
add
xchg
adc
mov
xchg
(bad)
test
adc
pop
data16
stos
dec
scas
and
push
(bad)
cs
xchg
sbb
mov
cmps
add
mov
xchg
inc
leave
push
pop
mov
sbb
ja
push
test
fisttp
test
push
clc
adc
mov
fidiv
stc
ja
out
into
(bad)
xchg
jg
push
sbb
adc
test
jmp
dec
es
pextrw
xor
test
cmp
sub
xchg
stos
fadd
mov
ror
sub
shl
cmp
into
add
ds
sub
and
adc
xor
ss
cmp
cld
repz
mov
jl
iret
mov
and
mov
shr
imul
sub
jmp
sbb
cwde
scas
pop
enter
cmp
addr16
test
arpl
and
mov
cmps
add
and
aas
cld
scas
mov
cmp
jmp
mov
retf
pusha
sbb
push
xchg
xor
add
xor
enter
outs
pop
jl
inc
jmp
adc
pop
cmp
cld
add
push
sti
push
push
ret
test
xchg
cwde
mov
pusha
imul
sbb
not
sbb
jno
data16
or
in
in
popa
sub
outs
xchg
test
dec
add
mov
adc
xor
push
fist
cld
fstp
ins
or
pushf
inc
pop
je
and
cwde
xchg
cmp
or
les
xchg
push
test
inc
dec
jl
scas
pop
pushf
adc
das
rcl
xchg
out
add
hlt
movs
pop
mov
add
rol
xchg
mov
pop
jge
ret
test
pop
sub
xchg
xchg
int3
and
hlt
(bad)
test
pop
ins
fistp
cmp
pop
xor
mov
pop
enter
sbb
call
shl
aaa
push
jl
mov
sub
mov
or
mov
aam
xor
dec
jl
mov
imul
call
jge
xchg
jo
bound
ficom
data16
cmp
pop
xchg
(bad)
ret
and
ja
cli
dec
sub
pop
pop
pop
xor
add
cmp
push
jge
adc
or
rcl
cmc
out
mov
and
enter
sub
outs
dec
jne
xor
clc
(bad)
pop
cmp
cmp
inc
fimul
shl
pusha
cdq
and
and
(bad)
adc
or
sbb
or
or
cmp
cmp
movs
cdq
aaa
mov
ret
cmp
mov
test
pusha
jnp
iret
push
fsubr
xchg
sbb
xchg
add
sahf
push
xor
retf
pop
pop
lock
in
and
inc
aad
cmp
ficomp
scas
jecxz
jo
push
mov
out
setne
mov
push
mov
push
cmp
jg
inc
adc
cli
outs
mov
push
clc
iret
pop
jge
jp
in
cwde
ins
jle
mov
cmp
or
xchg
and
sub
xchg
sar
adc
(bad)
dec
aas
sub
sbb
nop
cmps
mov
test
idiv
in
adc
or
jne
out
adc
xchg
icebp
(bad)
not
jmp
or
jmp
rcl
push
ror
mov
test
cmp
lea
daa
adc
out
push
and
addr16
and
and
sbb
dec
int
pop
in
fisttp
retf
loop
mov
sub
adc
add
das
mov
sbb
stc
pop
mov
inc
cmp
frstor
xchg
pop
and
or
rol
sbb
pop
lods
add
pop
xchg
ret
test
inc
(bad)
mov
sahf
loopne
gs
retf
xlat
or
(bad)
mov
jns
cwde
ins
jg
adc
or
mov
push
retf
dec
mov
in
call
or
jmp
adc
test
push
cmp
sbb
in
mov
aas
icebp
shl
pop
mov
movs
pop
xchg
or
ins
dec
test
jbe
xchg
inc
mov
scas
cmp
jle
cmp
push
cmp
pop
push
inc
retf
and
push
ins
or
cmps
sbb
or
cmp
fdivr
movs
jno
push
xchg
sub
fldcw
das
test
mov
cmp
inc
fmul
icebp
and
adc
aad
push
(bad)
jle
mov
mov
jno
icebp
dec
movs
mov
pop
(bad)
pop
cmps
in
push
adc
enter
lods
jle
jge
in
sbb
xchg
jae
ins
nop
retf
sahf
jmp
aas
into
hlt
push
dec
push
cmps
sub
sbb
push
xchg
scas
push
xchg
idiv
fcmovnu
aad
pop
xor
jbe
pop
imul
data16
mov
inc
dec
loop
xlat
cld
pop
jbe
adc
adc
fnstsw
outs
add
cmp
mov
mov
inc
popf
adc
pop
in
(bad)
clc
hlt
pop
add
or
fld
and
(bad)
sub
pop
mov
push
in
push
inc
mov
add
and
dec
mov
icebp
sub
mov
(bad)
(bad)
adc
dec
ror
adc
iret
movs
(bad)
xchg
enter
sbb
push
or
push
pop
push
(bad)
dec
scas
jle
sub
mov
pop
jmp
js
mov
mov
add
call
test
jo
add
dec
mov
pop
mov
rcr
sub
push
or
mov
mov
jb
push
xor
test
cmps
ja
jb
ror
aam
xchg
sub
xchg
ss
push
mov
shl
xchg
pop
pop
mul
xor
mov
xor
xchg
adc
sahf
data16
cmp
jmp
add
and
or
in
mov
ins
or
xchg
sbb
sub
dec
adc
xchg
imul
mov
ss
jmp
cwde
je
mov
mov
fnsave
adc
sbb
xchg
jecxz
mov
xor
sbb
enter
aam
adc
adc
push
bound
jae
add
sbb
gs
data16
inc
add
sbb
(bad)
fist
mov
loopne
push
arpl
adc
and
imul
test
or
xchg
loope
mov
push
cld
int
or
(bad)
pusha
jmp
mov
clc
inc
int3
ss
popa
popf
push
dec
pop
mov
arpl
int3
lock
ror
add
loopne
fs
adc
ins
retf
and
ror
arpl
hlt
pop
cmps
push
jns
fdivr
adc
push
pop
popf
scas
mov
stos
ds
inc
scas
loopne
sar
imul
dec
mov
ftst
and
dec
sub
xor
loop
pop
dec
push
adc
xchg
gs
adc
inc
clc
adc
xchg
mov
pop
pop
(bad)
stos
cmps
mov
jo
je
pop
int3
or
mov
xor
icebp
dec
cwde
push
pop
int3
dec
xchg
inc
dec
pop
rep
or
cmp
movs
xchg
push
retf
repnz
xchg
in
push
enter
ret
dec
cmp
jns
or
ja
dec
adc
xchg
cmp
adc
or
mov
jmp
shr
enter
jns
sub
std
ds
imul
cmp
std
daa
jnp
outs
in
push
mov
add
ficom
imul
jmp
jp
adc
into
push
adc
push
sbb
sti
adc
sbb
adc
mov
data16
cmp
mov
fdivr
stos
ds
mov
or
pop
mov
stc
out
cmc
data16
fistp
add
mov
inc
or
mov
or
xor
mov
(bad)
add
cmps
xchg
std
jnp
jo
pop
mov
cs
push
gs
retf
out
dec
mov
push
out
jmp
sub
jmp
add
sbb
aam
dec
pusha
(bad)
lods
shl
imul
pop
inc
sub
call
mov
mov
add
push
push
push
data16
mov
dec
mov
and
pop
sub
xchg
pop
retf
mov
pop
xchg
sbb
dec
cmp
icebp
sbb
dec
dec
adc
mov
movs
pop
mov
jae
push
into
repz
leave
inc
mov
imul
mov
push
out
bound
push
mov
imul
imul
loopne
xchg
in
jmp
inc
dec
enter
xor
or
js
test
js
loopne
imul
inc
inc
aaa
mov
movs
cs
pop
mov
imul
mov
push
add
out
jl
js
jle
jge
stos
sub
cmp
in
mov
mov
sub
pusha
imul
pop
movs
(bad)
adc
mov
or
add
lods
jo
adc
(bad)
mov
lods
sbb
in
test
fsubr
dec
mov
push
stc
in
imul
cmc
xor
in
lods
repz
fidiv
add
add
sbb
jmp
mov
shr
jge
and
imul
cmp
sbb
jb
sti
jns
and
fucomi
int
mov
out
pop
jb
sti
push
xchg
test
cmp
push
dec
ja
cdq
pop
add
add
sbb
test
not
je
jg
call
and
retf
test
mov
xchg
mov
xlat
pop
push
jno
(bad)
cdq
mov
add
sbb
loopne
adc
loopne
dec
stc
nop
push
xchg
mov
sub
test
or
sbb
aaa
dec
jge
or
jb
aam
mov
inc
sub
test
in
movs
repnz
(bad)
loope
sub
sti
idiv
ftst
cmc
clc
push
or
sub
dec
(bad)
clc
dec
add
aam
popa
pop
mov
mov
or
adc
adc
cmps
sbb
xor
adc
jne
push
jg
adc
mov
xchg
dec
cli
call
retf
cld
cmp
cmp
mov
adc
aam
es
mov
xchg
das
xchg
cli
dec
mov
push
in
ror
mov
retf
adc
jo
xchg
rol
retf
cmp
mov
pop
into
dec
lock
cld
inc
sbb
mov
and
ret
sar
adc
inc
sbb
loope
dec
and
cmp
icebp
cld
sbb
js
test
stos
out
mov
pop
ins
ins
sub
mov
popf
mov
repz
mov
sahf
enter
sub
fwait
jl
pop
mov
fldlg2
xchg
jp
inc
fs
xchg
sub
pop
jle
jmp
mov
or
das
test
call
ret
aam
inc
cmp
jnp
ret
shl
inc
loopne
lock
adc
jae
sbb
jns
xchg
pushf
pop
cmps
mov
(bad)
scas
sti
(bad)
ss
sub
mov
ja
in
mov
push
jno
mov
inc
cmp
mov
aad
cmp
pop
clc
xor
or
xor
lahf
adc
inc
push
xchg
add
xchg
sub
add
dec
pop
push
inc
sahf
hlt
sub
rcr
imul
adc
push
outs
jecxz
cmp
stos
dec
jae
je
ss
push
loopne
jne
pop
adc
inc
jne
push
add
xchg
mov
push
rol
pop
dec
xor
outs
mov
mov
add
ficom
loopne
jb
stc
and
(bad)
out
(bad)
and
add
popf
and
and
imul
dec
dec
adc
lahf
rol
jp
adc
ins
test
add
mov
inc
mov
retf
sub
rol
mov
sar
les
mov
pop
mov
jae
xor
and
test
test
imul
mov
adc
call
jg
pop
repz
mov
push
xor
loop
adc
mov
(bad)
xchg
sbb
mov
mov
daa
inc
dec
arpl
popa
fcom
pop
aam
xchg
pop
movs
clc
stos
add
inc
adc
cld
xchg
retf
push
enter
leave
ror
loop
push
scas
int
das
and
jle
dec
addr16
push
pop
xchg
push
dec
(bad)
push
mov
outs
fwait
adc
sbb
retf
and
ret
(bad)
mov
pop
repz
add
cs
jnp
imul
jp
dec
popf
push
movs
mov
aad
pop
adc
scas
shl
push
mov
cdq
loop
inc
mov
dec
hlt
inc
inc
xor
push
mov
into
lock
retf
dec
aas
mov
movs
ss
push
call
mov
cmps
sbb
movs
lock
adc
add
xchg
push
fsubr
mov
mov
(bad)
inc
movs
xor
mov
loope
push
sbb
jmp
inc
adc
popf
int3
or
cwde
push
push
push
lock
(bad)
ffree
push
dec
add
mov
sar
dec
push
aaa
add
mov
ret
das
push
or
sub
movs
jg
lods
cmps
add
add
pushf
out
arpl
fadd
or
inc
jl
jnp
and
jl
les
and
mov
push
jge
inc
inc
sub
in
pop
lds
mov
jns
repnz
out
leave
leave
popf
ins
xchg
in
cmps
add
sar
mov
fcom
mov
xchg
dec
jmp
dec
cli
xchg
sar
popa
mov
mov
movs
aaa
pop
mov
jl
sahf
xlat
or
je
or
and
xchg
jbe
mov
dec
inc
ret
loope
outs
movs
outs
mov
pop
fst
es
pushf
jecxz
inc
and
cwde
rol
mov
cld
adc
(bad)
ror
mov
cmps
mov
mov
mov
ja
shl
das
cwde
or
fisttp
movs
les
test
lahf
aam
xor
xor
mov
lahf
or
jno
test
and
icebp
pop
aas
mov
xor
test
es
outs
test
mov
add
loop
popf
dec
push
test
iret
popf
jbe
(bad)
dec
call
adc
call
pop
adc
aad
out
es
sar
mov
(bad)
fidiv
or
cdq
lods
cmp
ret
rol
push
push
popf
inc
mov
retf
xor
lahf
outs
cdq
addr16
lds
(bad)
loop
pop
das
ds
out
nop
(bad)
mov
fiadd
mov
cld
int3
inc
bound
fwait
jmp
mov
(bad)
arpl
xor
fild
ja
jl
xlat
pop
(bad)
(bad)
mov
arpl
mul
sbb
out
movs
sti
sbb
push
dec
dec
inc
jmp
mov
mov
pop
dec
xchg
adc
les
ins
mov
pop
imul
data16
pop
xchg
stos
cmc
popf
fbld
hlt
push
mov
sbb
cmp
clc
jecxz
lods
xchg
sahf
mov
pusha
adc
test
add
in
repnz
mov
frstor
cmp
aas
(bad)
retf
(bad)
in
out
adc
inc
popa
and
cmp
(bad)
pop
jle
add
inc
cdq
movs
xchg
mov
mov
call
fcmovnb
imul
pop
push
xchg
cmp
dec
lea
xchg
in
mov
call
call
(bad)
stos
mov
rcl
adc
in
stc
or
hlt
shl
pop
pop
fnstsw
rcr
push
icebp
int
or
xlat
out
pop
mov
pop
inc
pusha
jecxz
sub
popa
push
pushf
div
xor
mov
fild
in
call
jnp
push
cmp
ss
sub
mov
enter
jp
test
sbb
mov
enter
mov
out
pop
enter
xor
out
cmp
xchg
dec
push
gs
dec
mov
imul
jg
mov
xor
sbb
sub
repz
test
je
test
(bad)
in
jmp
cmp
ja
ins
and
in
movs
call
pop
mov
push
test
mov
adc
loope
outs
(bad)
outs
fs
xchg
mov
fild
ss
cmp
lock
cli
gs
loope
push
or
dec
push
pop
cld
xor
or
loope
mov
inc
in
sbb
repz
push
mov
enter
cmp
mov
or
push
(bad)
ud1
lods
test
xchg
xchg
and
lds
movs
xor
pop
daa
outs
jmp
xchg
xor
cmps
sub
cwde
test
movs
pop
adc
mov
sbb
aam
and
sbb
pop
jo
std
into
mov
sub
add
rcr
ror
lds
in
pop
shr
hlt
out
aas
leave
bound
ja
int
pop
pop
xor
jmp
(bad)
call
xchg
mov
xor
lock
mov
mov
jo
pop
in
inc
mov
or
ins
sbb
rol
or
in
cld
xor
xor
pop
jns
and
pusha
aad
mov
ret
mov
dec
ins
inc
test
mov
sbb
cmp
dec
int
sbb
mov
imul
loop
fmul
stc
jne
mov
mov
sbb
xchg
(bad)
fisttp
xchg
ja
jge
pop
call
in
push
setg
push
ficomp
sbb
enter
inc
and
bound
xchg
or
fld
dec
call
push
mov
push
(bad)
push
outs
lods
jg
fbld
cmp
js
shr
xor
mov
pop
pop
scas
in
imul
xchg
push
in
jno
sahf
aam
enter
add
add
jo
sub
mov
scas
stc
pop
sbb
cmp
repnz
adc
out
mov
cdq
popf
sub
sub
sub
daa
add
sub
cs
inc
xor
jb
outs
inc
sub
mov
adc
jle
aas
cwde
inc
jmp
ret
std
pop
ds
repz
retf
fadd
int3
out
ror
mov
test
xor
jl
leave
dec
movs
call
lahf
adc
pop
mov
jp
imul
dec
cwde
adc
repnz
or
sbb
push
xchg
cmp
fld
cmp
test
push
mov
pusha
(bad)
imul
stos
pushw
outs
and
shl
adc
and
fwait
push
sti
test
stos
stos
aaa
mov
int
lahf
sub
mov
sbb
fstp
inc
jno
push
xchg
mov
js
mov
or
pop
or
sbb
aaa
xlat
rol
je
aaa
dec
add
pusha
mov
push
pusha
push
ror
test
adc
xchg
cld
sysenter
je
push
push
jmp
mov
loope
jp
jle
scas
mov
jns
jecxz
jecxz
imul
imul
addr16
push
movs
push
out
sub
imul
push
sub
pushf
stc
push
mov
xor
loopne
mov
(bad)
jl
jl
jne
inc
push
inc
addr16
fwait
retf
fdiv
mov
outs
jb
sub
fisttp
mov
sub
data16
aad
in
pop
jg
or
inc
outs
inc
fwait
(bad)
sahf
mov
push
mov
mov
retf
pop
or
xchg
pop
dec
inc
sbb
(bad)
loope
pop
fiadd
das
inc
pop
mov
outs
pop
daa
pop
call
imul
in
sub
add
lods
das
retf
outs
push
cmc
or
lahf
sbb
push
cmps
mov
add
xchg
mov
addr16
addr16
ds
sbb
fs
push
popa
sub
jl
push
ins
sbb
movs
bound
test
jg
inc
std
sub
(bad)
loope
icebp
sbb
sti
cwde
pop
or
in
xchg
dec
mov
jge
fld1
aaa
xchg
mov
sar
pop
(bad)
jns
or
div
repnz
and
xchg
stc
or
mov
add
cmp
int3
jp
xlat
sbb
push
adc
ja
jl
and
cld
mov
out
pop
bound
arpl
out
jg
scas
and
into
or
stc
sbb
cmp
pop
jno
clc
into
mov
dec
sbb
outs
fadd
dec
ret
inc
ficom
push
dec
cld
mov
or
jae
cmps
sbb
iret
add
ds
ins
push
stos
(bad)
inc
sbb
sti
leave
push
xor
test
lea
ins
adc
mul
xchg
mov
or
mov
mov
loopne
leave
mov
fistp
mov
or
neg
and
jl
inc
xor
xchg
cdq
and
push
pop
dec
xchg
cli
in
clc
mov
iret
(bad)
push
sbb
adc
pop
xchg
aas
out
xchg
sti
(bad)
mov
and
hlt
imul
and
jp
add
push
mov
jle
(bad)
cld
adc
cmp
cmp
jecxz
sub
lods
cdq
inc
pop
dec
xor
outs
dec
leave
outs
mov
cmps
popa
ins
lock
sbb
mov
pusha
cmp
outs
or
dec
call
pop
adc
in
mov
cmp
add
mov
ret
mov
pop
and
dec
inc
aas
or
mov
mov
fbstp
sbb
dec
sub
adc
fld
cmp
mov
outs
ror
xchg
adc
fbstp
mov
jne
outs
mov
mov
loop
(bad)
loopne
ins
and
out
mov
push
fsub
sbb
outs
sbb
sub
adc
gs
das
gs
push
cmp
(bad)
xchg
dec
cs
mov
(bad)
div
in
xchg
(bad)
push
inc
jg
push
nop
shl
mov
add
pop
lods
adc
icebp
(bad)
sbb
stos
cmp
aas
add
in
fcmovnb
sbb
es
sar
imul
fs
xor
das
int
dec
add
in
(bad)
jbe
mov
sbb
cs
push
mov
sub
popa
pop
sbb
jnp
lods
fnstcw
dec
add
test
out
mov
fwait
and
icebp
jmp
lods
push
pop
push
fldenv
xor
push
lods
xor
xor
lock
push
imul
xchg
or
sti
or
inc
out
xchg
sbb
pop
ds
push
sub
cmps
sbb
inc
aam
cmc
movs
pop
or
mov
and
sbb
cdq
es
or
inc
push
mov
fs
std
inc
ficom
ja
mov
hlt
cdq
pop
rcr
loop
dec
jmp
push
xor
sub
inc
mov
leave
shl
xor
ficomp
or
pop
movs
pushf
inc
sub
adc
(bad)
in
add
fcom
jb
je
ret
dec
imul
cmp
aaa
scas
cli
fdivr
mov
aaa
(bad)
push
mov
popf
xor
dec
pushf
add
cmp
xor
enter
ret
mov
sub
repnz
sbb
push
std
ss
fs
pusha
xchg
jmp
or
inc
sub
int
daa
lea
dec
jmp
stos
ret
mov
jno
jne
add
inc
pop
xor
and
cwde
cmp
mov
jl
push
mov
cmp
or
scas
mov
jecxz
xchg
dec
retf
(bad)
sti
call
jne
imul
movs
cmp
fnstcw
cmp
cmp
xor
inc
mov
xor
leave
dec
pop
xchg
and
sub
fbld
jecxz
cld
pushf
pusha
mov
dec
popa
inc
dec
daa
xchg
scas
cmps
push
mov
retf
adc
dec
dec
pop
push
ja
mov
in
cs
mov
shr
xor
sub
pop
iret
pusha
dec
fwait
mov
push
push
aad
rcl
pop
lahf
ds
mov
jg
cld
and
pop
pop
xlat
mov
test
ret
sbb
repz
das
rol
out
daa
pop
add
out
movs
push
test
fs
popf
add
jge
push
popa
cmps
clc
jbe
jb
push
rcr
call
jae
cwde
sti
add
(bad)
mov
retf
inc
outs
cmp
int
mov
hlt
mov
icebp
push
pop
daa
push
xchg
push
add
shl
retf
cld
sbb
popf
mov
or
test
dec
iret
cs
pusha
adc
outs
jl
into
addr16
sbb
ins
sbb
mov
icebp
or
and
pop
repnz
push
pop
daa
(bad)
jp
sub
aas
addr16
dec
nop
fcomp
pop
lods
hlt
push
std
mov
in
fnsave
outs
and
pop
out
loopne
cmps
repnz
jns
repnz
and
call
push
cli
ins
dec
repnz
or
inc
repnz
in
cmps
call
mov
xchg
(bad)
mov
jecxz
dec
std
ret
daa
or
mov
push
add
fwait
jecxz
dec
int3
inc
jge
or
sbb
repnz
xor
jb
retf
(bad)
lods
btr
ret
imul
out
lahf
cli
scas
shr
sub
fwait
scas
in
dec
mov
push
or
jp
cmps
add
cwde
gs
pop
int
ss
pushf
push
adc
xor
push
ja
sub
push
out
xor
sub
sbb
je
gs
cmp
mov
inc
mov
int
sbb
sub
adc
sbb
cld
aam
and
mov
or
inc
xchg
xchg
out
(bad)
js
sbb
add
arpl
out
pop
mov
mov
in
fst
mov
ret
imul
test
dec
xchg
jmp
mov
int
aad
inc
mov
retf
dec
outs
dec
fmul
cmp
pop
loopne
adc
and
cmp
pop
and
push
push
mov
in
ja
aaa
rcr
nop
fwait
xor
sub
add
add
test
into
dec
gs
fisttp
inc
stc
add
sysret
mov
and
retf
pop
dec
cdq
push
imul
or
or
rol
inc
cvtps2pd
sti
adc
popf
jp
push
cmp
pop
push
sti
loope
nop
mov
jmp
in
add
jmp
and
out
ins
(bad)
lock
leave
in
xchg
jo
(bad)
jle
jno
mov
and
js
call
leave
aas
jmp
xchg
lock
add
retf
out
mov
stos
repz
(bad)
pop
(bad)
mov
pushf
pop
(bad)
xor
ret
mov
retf
mov
bnd
in
aaa
aas
loop
sbb
scas
outs
push
cmp
cld
retf
push
mov
jo
jecxz
dec
stos
xchg
call
cmp
outs
cs
add
movs
and
jno
(bad)
sahf
ins
or
dec
out
inc
icebp
xor
adc
scas
push
jp
adc
stos
les
jno
subps
push
test
scas
fadd
pop
in
inc
test
fild
retf
loopne
and
dec
sub
(bad)
test
adc
(bad)
mov
stos
test
stc
call
add
xchg
xchg
mul
pop
inc
int3
add
enter
je
push
(bad)
sbb
jmp
push
repz
mov
mov
xchg
add
ss
push
cwde
in
jge
add
and
push
sub
inc
push
in
scas
cmc
mov
mov
jo
loopne
pusha
mov
neg
jmp
in
jmp
retf
pop
aas
pop
sbb
ret
xchg
test
mov
jmp
hlt
test
dec
inc
cmc
xor
sub
jnp
dec
pop
xchg
fistp
cmp
push
ins
ins
xlat
stos
imul
push
and
dec
dec
aas
iret
sub
test
leave
iret
push
dec
ins
dec
into
jl
into
or
mov
push
push
ds
xchg
std
out
mov
dec
js
adc
jns
nop
shr
inc
loop
inc
fdiv
push
retf
mov
mov
dec
and
js
lods
pop
jg
std
arpl
inc
dec
mov
xor
mov
out
dec
pusha
push
inc
or
pop
pushf
repz
sti
popf
stc
cmps
iret
jg
(bad)
hlt
ret
std
pop
mov
add
inc
mov
mov
mov
shr
pop
dec
cmps
repz
pusha
sbb
fstp
jne
fsub
sub
or
es
push
jb
cli
and
mov
mov
mov
mov
out
dec
pop
inc
ret
loope
dec
push
xor
dec
retf
sbb
inc
mov
sar
cmp
pop
adc
nop
jp
mov
mov
mov
and
lds
(bad)
dec
ss
mov
mov
pop
mov
push
mov
ss
or
loopne
add
imul
mov
or
int3
ror
fdivr
add
ret
outs
pop
hlt
mov
pushf
pop
std
aad
inc
out
in
sub
xchg
mov
cmp
dec
sub
dec
rcl
xchg
mov
(bad)
adc
cli
mov
push
pop
adc
ds
inc
daa
xchg
fidiv
daa
or
cwde
mov
cmp
mov
or
xchg
repnz
lock
sti
sub
xor
loopne
mov
es
lods
jne
mov
mov
ret
mov
in
mov
idiv
push
add
jae
inc
dec
test
(bad)
hlt
ficomp
scas
aam
fwait
out
popa
dec
adc
fisubr
xchg
sub
adc
mov
jns
pop
pop
or
jmp
mov
jno
(bad)
inc
aam
call
shl
cmp
retf
je
add
imul
nop
out
scas
cmp
cmp
rcr
dec
pop
lea
pusha
das
test
(bad)
out
adc
retf
inc
mov
inc
add
and
mov
mov
mov
ins
add
mov
sub
jp
out
sbb
pop
sahf
lods
cmp
outs
dec
adc
mov
mov
out
cwde
jae
imul
jae
mov
mov
mov
sub
and
mov
mov
ins
mov
stos
dec
or
sbb
les
sub
sbb
cdq
lods
hlt
mov
or
add
dec
rol
stos
ins
pop
loop
(bad)
shr
mov
pushf
mov
xchg
ss
scas
or
jle
scas
inc
std
arpl
es
sub
sbb
sbb
xchg
inc
xchg
dec
sub
(bad)
imul
js
xor
ret
ja
jle
mov
fnstenv
mov
ret
mov
or
test
out
fs
lea
out
loope
inc
push
adc
lods
and
push
inc
jmp
mov
mov
mov
pop
imul
clc
daa
mov
sbb
sub
add
or
lock
xor
push
add
adc
lock
icebp
rcr
cwde
mov
cdq
or
xor
lock
xor
push
je
in
cmp
inc
cld
xchg
cmp
xchg
adc
sub
jnp
sbb
push
retf
out
sub
inc
inc
and
fsubr
ror
popa
icebp
adc
adc
stos
xor
sbb
pop
jno
push
xchg
mul
adc
stos
setne
xlat
js
hlt
div
(bad)
push
inc
xchg
add
push
push
xchg
and
imul
sti
sub
fsub
test
bound
ins
mov
jns
mov
cwde
mov
(bad)
mov
xchg
inc
sbb
pop
push
mov
jae
mov
aas
xor
clc
jbe
push
or
lods
aas
les
xor
fld
mov
int3
push
mul
xchg
enter
mov
dec
sbb
mov
push
mov
pop
cmp
call
inc
les
popf
xor
enter
test
pop
push
int
pop
ficomp
mov
and
rcr
mov
fisttp
imul
xor
jae
adc
cmp
mov
(bad)
fiadd
je
or
cmc
fld
pop
cld
xchg
xchg
push
xor
or
xor
sbb
jp
push
pop
push
vpunpckldq
inc
jmp
call
ret
push
or
leave
jge
retf
fisttp
dec
adc
movs
outs
sub
leave
pop
aaa
nop
or
test
add
xchg
and
je
test
cmova
pop
fstp
ins
lock
xchg
add
pop
mov
popa
stc
fimul
aaa
aaa
cwde
pusha
jne
cmps
rcr
inc
jle
ins
mov
imul
rcl
push
and
ds
inc
dec
inc
out
xor
rcr
inc
mov
addr16
mov
ret
daa
imul
dec
mov
xor
push
lea
and
daa
lahf
or
inc
mov
xlat
inc
add
adc
inc
jb
popa
int
aad
cmp
jmp
push
xlat
loope
mov
sbb
mov
lods
jnp
pop
adc
sub
(bad)
sbb
fmul
repz
sahf
test
dec
inc
iret
dec
pusha
lahf
call
fs
xor
add
clc
xchg
cld
inc
ins
cmp
scas
xchg
fisttp
gs
js
xchg
dec
cdq
sbb
in
sub
dec
call
call
aaa
shl
cdq
cmp
xor
jae
jae
cmps
hlt
fisubr
add
cmp
cwde
pop
jns
or
rcr
and
jp
cmc
dec
addr16
and
mov
jno
call
in
mov
cmp
je
add
int3
lea
jecxz
stos
pop
daa
xor
xchg
xchg
adc
lock
add
mov
adc
pop
ins
jg
pop
xor
cld
arpl
dec
or
lea
and
jb
xor
inc
in
imul
xchg
jmp
clc
push
push
std
cmp
popf
xchg
call
in
ret
aam
mov
sub
lods
xchg
nop
mov
dec
mov
sub
lock
push
cmps
and
psrld
cmp
cmp
jno
iret
pop
fnstcw
or
out
cmc
add
pop
inc
mov
or
pop
clc
or
xchg
out
imul
mov
imul
outs
jmp
inc
jo
sar
xchg
stos
push
loope
inc
pop
or
clc
sbb
(bad)
sub
dec
and
mov
fcmovnb
fstp
call
mov
fild
pop
sub
neg
mov
out
and
and
out
push
xchg
mov
jns
mov
mov
cmps
adc
mov
add
dec
xor
sub
add
sbb
(bad)
jg
push
mov
jne
lahf
and
inc
sub
add
xchg
xor
jne
paddb
nop
arpl
mov
call
and
loopne
mov
and
test
dec
xor
lods
sbb
into
adc
pushw
repnz
cwde
mov
lds
test
std
outs
imul
mov
xchg
leave
(bad)
je
fcomp
popf
call
xlat
jp
xchg
stc
not
xor
dec
add
inc
dec
fsubr
adc
iret
inc
sbb
scas
dec
aaa
mov
pop
xor
test
inc
test
push
(bad)
jmp
test
mov
pop
leave
imul
cmps
shl
push
pop
aad
dec
sub
out
jb
jmp
jb
pushf
add
inc
or
sahf
lea
jae
xor
shl
jno
outs
fs
mov
sbb
xchg
repnz
pop
mov
xchg
xchg
lods
mov
mov
fadd
sbb
in
jno
dec
out
inc
push
xor
cmp
xchg
sbb
sbb
mov
and
rcr
fiadd
cmp
add
push
sar
in
mov
push
test
cmp
cmp
rcr
ret
rcl
fimul
xlat
add
bound
pop
fs
retf
mov
mov
lds
mov
xchg
sub
mov
cmp
push
mov
xor
xchg
and
inc
sbb
inc
leave
sbb
sbb
adc
adc
jb
and
jle
add
(bad)
stos
lds
xor
inc
das
ret
repnz
std
push
push
push
mov
and
jb
mov
mov
adc
mov
push
movs
mov
or
std
je
sbb
mov
sub
mov
xchg
mov
cmp
cmp
cmp
push
mov
shr
ss
pop
xchg
ficomp
fistp
ins
mov
adc
call
(bad)
adc
pop
xchg
mov
mov
inc
fmul
add
scas
hlt
jmp
dec
cmp
cld
jo
sub
and
js
out
lahf
push
(bad)
jp
sbb
cli
test
jo
pop
or
(bad)
xor
popf
sbb
test
rol
push
int
or
push
test
ja
pusha
xor
cli
sub
adc
ds
fadd
cdq
xchg
cmp
rol
iret
push
clc
add
pop
test
mov
dec
hlt
out
mov
mov
sub
(bad)
xor
cmp
push
or
xchg
and
add
(bad)
fcmovnu
fbld
xor
scas
xchg
lods
iret
mov
mov
cs
clc
push
clc
iret
nop
ins
nop
mov
nop
test
inc
xor
mov
sbb
pop
push
(bad)
in
adc
push
xchg
jb
sbb
dec
ins
cmc
cmp
cmp
ret
test
dec
inc
sub
sub
jns
movs
mov
in
sub
jmp
mov
je
aas
mov
dec
test
test
popa
mov
aam
mov
inc
jo
cwde
xchg
push
cld
mov
cmc
aad
jne
sbb
or
fst
push
fwait
bound
dec
ja
mov
push
ja
sbb
shr
mov
test
push
mov
adc
sub
pop
shl
push
inc
push
jmp
sub
test
sub
mov
scas
mov
mov
lock
xlat
add
pop
scas
js
adc
rol
or
call
out
cld
das
add
ins
sbb
cs
jge
movs
test
adc
iret
xor
sti
(bad)
push
sub
std
sub
ret
mov
int
fisub
jnp
sub
jp
movs
inc
adc
xchg
xor
ss
inc
and
inc
loopne
cli
push
sub
enter
fist
(bad)
stc
das
shr
adc
stc
jmp
jbe
mov
xor
fistp
pop
cmova
lahf
cli
bound
(bad)
xor
pusha
inc
fldcw
frstor
cdq
or
add
mov
jb
shl
inc
icebp
in
and
ins
int3
add
push
push
push
retf
mov
mov
adc
jno
xchg
adc
jbe
sbb
xchg
push
loopne
aas
or
cmp
mov
dec
(bad)
fcomp
ins
sub
fucomip
xlat
and
push
jbe
mov
gs
hlt
add
mov
sbb
or
inc
xchg
stos
test
mov
ins
xchg
data16
call
or
scas
loope
mov
xor
cwde
mov
pop
hlt
(bad)
aam
cld
sbb
in
and
sbb
mov
and
shr
mov
xlat
mov
call
add
gs
call
dec
ret
outs
repnz
sbb
mov
scas
dec
lahf
imul
iret
imul
pop
fld
mov
bound
fisubr
lods
retw
xor
cmps
fld
or
lods
scas
xor
lahf
nop
push
dec
rep
lahf
je
mov
aaa
push
dec
or
fwait
scas
mov
inc
or
scas
xchg
mov
test
in
call
cmp
sti
in
mov
sbb
ss
mov
sahf
stc
fimul
mov
push
xor
sbb
adc
ret
mov
jmp
xor
jmp
icebp
scas
in
daa
in
fwait
and
test
jno
push
sub
mov
mov
mov
jp
dec
test
inc
sbb
mov
mov
jmp
sub
pop
fidiv
adc
cld
cli
mov
leave
mov
mov
mov
fidiv
stc
ins
mov
add
add
daa
ret
xor
or
mov
data16
nop
xchg
loop
aad
jnp
mov
xor
mov
xor
outs
or
(bad)
(bad)
adc
pop
push
sbb
push
adc
and
test
call
inc
and
add
cmp
push
mov
sbb
push
cwde
dec
shl
xchg
push
xor
adc
retf
out
popa
fdiv
sub
stos
xor
or
jns
push
mov
jns
sbb
shl
(bad)
xor
lods
add
les
and
sub
or
sbb
jge
fimul
xor
ret
ins
adc
leave
pop
pop
mov
loope
repz
call
clc
inc
sub
xchg
jns
sub
in
int3
and
add
mov
jbe
mov
fs
rcl
push
aam
loope
xlat
cmp
mov
sti
mov
(bad)
jnp
dec
fsin
push
ja
lods
out
xchg
pushf
imul
ret
or
inc
(bad)
icebp
sbb
push
std
cmp
movs
jle
ror
add
(bad)
std
and
xor
aaa
pop
idiv
sbb
push
cmp
aam
push
inc
cmp
mov
pop
dec
add
adc
test
retf
ds
mov
loopne
sub
adc
or
push
push
daa
fsub
mov
or
jmp
mov
dec
cmp
or
ss
mov
arpl
lods
mov
test
dec
mov
fdiv
cmp
mov
fmul
cmp
mov
dec
jae
push
xchg
jge
push
shl
jbe
xor
jae
pop
retf
add
inc
dec
adc
loopne
repz
xor
pop
lds
(bad)
shl
push
pop
cmps
mov
inc
mov
cmc
hlt
loope
cmp
jno
push
mov
imul
sahf
rol
retf
sbb
out
(bad)
cmc
jle
into
fwait
cmp
sub
cdq
inc
sbb
into
pop
sahf
xchg
push
imul
cmp
xchg
mov
add
adc
xchg
mov
daa
cmc
pop
jmp
and
dec
cld
out
mov
mov
sub
retf
inc
jge
je
push
scas
into
pop
loopne
mov
xchg
ret
or
pop
aas
inc
xchg
or
ja
jae
sub
push
scas
add
fcom
jg
or
adc
div
jg
(bad)
lods
daa
jmp
adc
loopne
push
popa
cli
call
fadd
mov
fs
mov
push
les
dec
or
fidivr
loop
or
push
xor
ror
cmp
std
mov
dec
loope
lods
fwait
add
xchg
adc
movs
pop
dec
les
xor
outs
je
and
gs
xlat
in
das
aaa
lea
jae
stos
icebp
dec
sbb
cmp
or
fnstsw
cmp
(bad)
dec
jge
and
int
add
mov
shl
aam
lock
lods
add
mov
add
lea
xrelease
cmp
fmul
adc
xchg
mov
and
cmps
movs
int3
lods
mov
imul
loopne
repnz
int
daa
add
xor
(bad)
fdivr
dec
mov
icebp
(bad)
nop
cwde
xlat
jnp
inc
pushf
dec
ret
dec
sub
js
dec
xlat
mov
push
cmp
cld
mov
inc
js
and
sbb
stos
icebp
stos
aaa
in
lods
or
hlt
jmp
aas
jnp
outs
mov
inc
sub
lea
mov
std
xchg
adc
pop
jg
cmp
dec
push
push
or
cmps
loope
fmul
jns
ja
lods
jbe
xor
dec
out
(bad)
pop
ret
adc
pop
fwait
repz
(bad)
lods
(bad)
sub
pop
cmp
xchg
pop
out
outs
cld
sub
cmp
jae
add
jle
mov
mov
xchg
xchg
int3
and
adc
retf
std
or
xor
je
cmp
sbb
jmp
push
jne
arpl
jecxz
das
sti
pop
mov
pop
jo
inc
dec
(bad)
mov
jmp
leave
push
jns
je
lds
in
aas
cmp
pop
sbb
pop
pop
iret
aam
cmc
mov
inc
sub
(bad)
in
jns
data16
imul
lahf
pop
ins
(bad)
mov
cli
mov
sar
sub
pushf
in
aaa
pusha
sbb
pop
sahf
dec
and
adc
pop
or
call
lock
or
enter
xor
or
and
cli
sbb
push
imul
retf
dec
push
icebp
clc
cli
adc
das
in
jg
(bad)
or
jmp
addr16
adc
stos
fmul
loope
(bad)
push
and
sub
bswap
or
and
jb
jl
ins
sahf
or
inc
push
mov
aad
sar
loope
push
inc
ja
fcomip
aam
lahf
jle
data16
addr16
mov
fwait
mov
test
shl
mov
add
cmps
mov
imul
repnz
and
jne
gs
sar
sti
mov
dec
js
(bad)
neg
mov
ret
pop
mov
jbe
retf
lock
out
sub
sub
adc
cmps
push
stc
test
call
movzx
arpl
mov
add
(bad)
leave
imul
ret
shl
cmc
sbb
cs
push
cmc
mov
aaa
icebp
test
fild
xlat
(bad)
outs
mov
rol
lock
outs
push
mov
cld
scas
ins
ret
or
es
pop
lahf
movs
test
scas
mov
pop
cmp
retf
xchg
pop
push
fucom
dec
mov
fmul
cdq
ja
cs
and
ss
and
xor
xor
xchg
or
jne
cmp
fidivr
cmp
inc
movs
fwait
pop
xchg
inc
pop
jns
rol
jbe
xor
loope
cmps
mov
and
(bad)
jmp
cmp
cdq
and
daa
in
jo
mov
add
mov
gs
stos
fsubr
mov
add
enter
push
mov
xor
dec
push
fcom
cmp
add
sbb
jnp
ret
fucomip
lods
mov
adc
std
rcr
popa
test
les
push
inc
xlat
iret
jne
repnz
imul
push
add
int
mov
hlt
push
dec
adc
xlat
adc
repz
sti
sub
add
jle
in
inc
jge
retf
add
out
jmp
cmp
in
pop
add
mov
adc
imul
sub
sub
mov
pop
sbb
sbb
pop
xchg
cs
in
dec
pop
xchg
rol
stos
push
loope
cld
shl
cwde
lods
jle
lock
pop
and
mov
sub
stc
mov
push
fcom
arpl
ja
inc
call
xor
mov
pop
out
shr
addr16
push
add
sub
ds
and
inc
dec
push
stos
js
and
mov
test
push
retf
xor
mov
mov
daa
fs
test
xchg
dec
sahf
lods
(bad)
in
pop
cmp
cli
clc
dec
rol
sbb
call
jp
scas
into
in
lods
mov
cwde
push
mov
fldenv
(bad)
sti
cmp
mov
mov
out
nop
xchg
stos
pop
stos
mov
sub
inc
out
(bad)
aad
push
mov
mov
push
ins
fild
out
je
mov
push
dec
xchg
sub
sbb
xchg
dec
add
add
mov
sub
(bad)
hlt
outs
mov
mov
jle
mov
xchg
push
es
ins
daa
cmp
ss
xchg
mov
(bad)
int3
leave
loope
xchg
cwde
movs
add
sub
pop
ret
dec
cmp
sub
dec
rcr
mov
aam
cmp
icebp
sti
out
retf
lds
shl
cs
ret
and
xor
stos
mov
pop
in
shl
test
dec
pop
push
pop
shl
out
mov
imul
int
int3
mov
mov
(bad)
hlt
xchg
call
pop
or
cmp
mov
ja
pop
ins
ja
test
sub
xchg
retf
dec
clc
xchg
bound
es
sub
stc
mov
lock
lds
jmp
pop
cmps
lods
add
fistp
jle
mov
(bad)
xor
cdq
jmp
popa
test
test
jno
pop
rcr
daa
popa
dec
pop
pop
add
aad
je
mov
lea
ror
outs
push
ret
push
in
push
sar
mov
jp
shr
jbe
adc
and
and
lods
pop
mov
pop
cmp
retf
lods
inc
std
xor
xor
push
jmp
psraw
and
sbb
sahf
jle
sub
mov
fimul
call
dec
add
je
push
aas
jb
imul
int
mov
pop
push
sti
dec
into
scas
retf
add
push
rol
add
pop
ret
bound
sbb
mov
sub
and
add
pusha
jno
cmp
sub
ja
lods
jmp
fs
or
in
ins
sub
leave
(bad)
and
jge
call
jmp
sub
jbe
jns
(bad)
pop
adc
retf
xchg
xor
jno
pop
xlat
xchg
pop
pop
je
mov
xor
xor
imul
js
aam
pusha
jo
fwait
add
(bad)
retf
shl
xchg
add
retf
add
mov
es
jl
and
clc
fsub
jno
mov
lods
pop
clc
test
xrelease
inc
js
mov
out
cmp
aad
mov
fsubr
or
(bad)
ins
jmp
mov
je
data16
inc
push
repz
popf
dec
mov
das
ss
add
xchg
in
xchg
mov
add
jg
leave
inc
mov
mov
imul
xchg
(bad)
jmp
pop
mov
push
adc
adc
jge
sub
jl
rcr
jo
mov
mov
sub
repnz
daa
mov
(bad)
xlat
jge
or
jo
xlat
sub
cmc
fdiv
call
cmp
adc
pmaddwd
cs
sbb
or
cmps
pop
mov
jns
xor
sar
push
and
ficomp
ror
stc
loop
mov
enter
call
add
jae
out
mov
arpl
xchg
stos
add
mov
xor
sbb
sbb
mov
imul
fld
xor
dec
lods
lods
and
adc
out
out
pop
mov
add
dec
cwde
mov
fst
pop
mov
shl
cld
jl
sub
daa
cdq
stos
inc
or
pop
jbe
out
retf
pusha
push
sbb
mov
lds
sbb
js
push
jne
mov
xchg
rcr
add
ficom
push
stos
cdq
popw
jns
and
cmp
push
push
fnstsw
or
lock
or
fcomp
pop
(bad)
dec
cld
adc
movs
and
clc
pop
jmp
mov
rol
mov
cmp
in
mov
mov
(bad)
out
or
mov
(bad)
dec
push
sbb
(bad)
bswap
inc
sbb
ret
dec
call
iret
jmp
pop
(bad)
inc
sti
push
cmp
sbb
cmp
aad
jl
(bad)
(bad)
mov
inc
call
add
adc
adc
sub
(bad)
call
mov
repnz
xchg
or
out
je
dec
fcmove
rcl
lea
mov
popf
inc
stos
mov
pop
adc
sub
xchg
mov
or
sub
add
push
pop
mov
retf
jp
test
fisub
inc
adc
out
xor
adc
lds
outs
das
xor
aas
jne
xchg
mov
ja
mov
bound
loop
mov
mov
pop
mov
mov
xchg
ins
pop
cs
inc
or
ja
shr
mov
xchg
bound
cmp
mov
sub
jl
imul
or
cs
push
sbb
jo
test
xor
cmp
addr16
push
pop
dec
aaa
out
in
lahf
mov
pop
cmps
ja
loopne
mov
mov
mov
jmp
dec
cmps
pop
out
lea
mov
add
jae
cmp
xchg
popa
ja
stc
enter
add
sbb
in
inc
adc
or
xor
jge
pusha
mov
ret
fnstcw
leave
inc
push
mov
inc
inc
mov
adc
or
in
imul
xchg
ins
rcr
outs
rcl
jbe
mov
push
dec
and
arpl
cmc
sub
mov
out
xchg
out
adc
test
movs
and
fld
(bad)
xor
xor
jb
xchg
sti
sti
not
sbb
pop
xchg
and
div
fidivr
sub
jne
or
aaa
sbb
mov
icebp
xor
sub
das
pop
jmp
lods
xchg
mov
outs
rcr
adc
push
loopne
xor
shr
dec
retf
fidiv
in
call
je
push
enter
add
mov
data16
(bad)
out
retf
mov
cld
sub
or
mov
clc
dec
icebp
mov
lds
out
push
aad
rol
mov
xchg
cmp
fdiv
sbb
sub
jmp
mov
popa
lock
push
pop
cli
out
xchg
xor
pop
and
xchg
cli
mov
pop
in
mov
(bad)
les
jmp
cmc
inc
ja
aas
fadd
and
mov
test
mov
int3
mov
sub
mov
and
add
repnz
repz
and
(bad)
pop
mov
cwde
mov
push
(bad)
cli
xor
loop
or
lods
sbb
div
or
sti
sbb
pop
repnz
jae
or
(bad)
push
sar
mov
dec
imul
xor
ss
fistp
loopne
dec
sbb
pop
addr16
or
(bad)
mov
dec
scas
in
call
pop
leave
pop
test
into
jl
loope
or
rcl
push
xor
or
loope
mov
inc
mov
inc
mov
mov
xchg
pop
outs
icebp
cmp
aad
test
std
cmp
xchg
std
lahf
ins
push
cld
sbb
popa
cmp
add
popf
jnp
stos
lea
pushf
dec
imul
ins
xor
daa
(bad)
and
push
sub
in
mov
inc
push
aas
in
inc
fisubr
retf
popf
adc
xchg
imul
cwde
(bad)
jge
jbe
jmp
or
movs
or
fisub
and
lea
jecxz
jp
repz
mov
adc
push
mov
aaa
push
js
cld
nop
sub
cdq
loopne
stc
push
shr
shr
mov
jo
and
pop
jge
pop
dec
les
loope
push
and
xor
imul
cmp
cli
jbe
shl
jo
cmp
mov
mov
pop
mov
imul
fst
pop
pop
(bad)
lea
es
mov
mov
adc
xor
imul
ds
icebp
and
es
popa
jb
inc
xchg
add
into
ss
cwde
xchg
jnp
push
aaa
test
lahf
push
sub
ins
inc
(bad)
mov
retf
sub
fldenv
mov
xor
xchg
jmp
mov
mov
push
cmp
fs
retf
sub
popa
mov
mov
dec
push
mov
aaa
push
in
test
outs
mov
push
rol
dec
outs
xchg
adc
repnz
das
push
loope
or
cs
mov
push
or
jb
int
push
inc
pusha
pop
push
jmp
sbb
sbb
ins
jle
sbb
loop
pop
add
cmc
jl
pop
push
aas
dec
sub
idiv
int3
sub
xchg
cmp
pop
push
in
inc
sbb
shr
(bad)
jb
sti
jo
inc
nop
pop
inc
lods
pop
pushf
fidiv
sahf
icebp
lock
jmp
xchg
mov
stc
cs
inc
or
cmp
call
out
dec
popa
imul
and
jl
mov
jmp
mov
pop
push
test
cmp
(bad)
pop
in
test
call
inc
push
test
pop
push
push
rcr
pop
in
push
cmp
outs
mov
rcr
adc
das
pop
mov
test
cwde
rol
pop
inc
add
push
xor
jne
jmp
xlat
mov
and
out
cli
cs
cmp
push
aas
sub
jg
cmps
cli
outs
ja
mov
mov
inc
test
xchg
fucomi
arpl
arpl
gs
jge
sahf
or
xor
sbb
into
outs
mov
jo
retf
(bad)
gs
sar
xchg
ins
retf
push
or
mul
mov
test
fmul
xchg
mov
xor
xchg
xchg
add
int3
mov
xor
ret
inc
push
push
cmps
push
test
jle
inc
mov
ins
in
adc
pop
fmul
je
and
inc
cmp
cmp
loop
les
sbb
inc
jno
adc
dec
test
cmp
popf
xchg
push
aad
call
or
xlat
cs
dec
xor
jge
sbb
mov
imul
(bad)
das
sbb
stos
cmp
cmp
push
test
sti
(bad)
test
fwait
out
bound
push
cmp
jae
inc
cmp
xor
aaa
adc
sbb
sbb
sti
scas
push
ins
cwde
or
(bad)
pop
cmp
(bad)
jns
pop
or
clc
pop
int
mov
and
out
cmp
cmc
shr
cmp
cmp
(bad)
pop
dec
int
push
jae
push
fs
shl
cmp
mov
std
mov
in
hlt
pushf
and
jmp
imul
push
stos
or
pop
in
cmp
cmp
mov
test
addr16
sbb
cdq
push
push
push
mov
inc
es
jle
(bad)
push
inc
xchg
mov
in
ins
int3
leave
jne
leave
repz
scas
loopne
call
bound
and
xchg
bound
xchg
leave
movs
dec
movs
jae
dec
scas
cmp
mov
retf
push
jbe
sub
mov
mov
ja
push
lock
mov
in
dec
test
mov
sub
inc
imul
mov
fs
retf
sbb
push
mov
sti
leave
dec
push
cmp
out
das
sub
rcl
or
clc
in
push
or
iret
sub
test
scas
ins
jg
sub
add
add
lods
leave
into
xchg
fmul
or
mov
fild
test
add
and
scas
stc
je
mov
xchg
test
mov
(bad)
push
jp
mov
imul
mov
mov
mov
mov
movs
mov
inc
push
in
test
push
or
pop
mov
mov
and
push
cli
jl
cmp
add
shl
daa
inc
les
in
cmps
mov
cdq
clc
neg
mov
dec
pushf
xchg
imul
js
aam
movs
mov
and
mov
ret
sub
or
xchg
(bad)
mov
adc
bound
ret
jecxz
sbb
cwde
icebp
(bad)
xchg
xor
or
cmp
call
or
pop
sub
fmul
lea
fimul
xchg
fimul
mov
ins
ret
adc
test
inc
out
fsub
(bad)
mov
loope
or
pushf
fdivr
sbb
in
les
(bad)
dec
mov
popf
test
push
xor
imul
cwde
fist
lock
sub
mov
cmps
jno
scas
neg
in
jb
push
fist
mov
mov
xor
clc
xchg
xchg
dec
cmp
adc
cmps
cwde
(bad)
and
test
cmp
popf
pop
pop
pop
mov
xor
shl
std
cli
cld
pop
sti
cmps
pop
dec
xlat
mov
fcmovnu
pushf
inc
in
scas
and
retf
in
repz
scas
(bad)
pop
xchg
loopne
adc
pushw
mov
or
lahf
lds
pop
aam
jo
out
rol
jo
mov
movs
pusha
sub
dec
jle
fstp
inc
mov
stos
test
mov
push
or
(bad)
dec
inc
xchg
out
pusha
inc
jl
jmp
out
add
fs
popf
and
push
fcomp
sahf
call
jle
push
out
inc
jp
xlat
bound
test
into
push
inc
or
in
in
sbb
or
test
sub
icebp
mov
jnp
sbb
push
mov
rol
cli
rcr
pop
jge
inc
scas
xchg
fimul
push
(bad)
adc
push
in
call
adc
pop
sti
lds
idiv
xlat
loop
adc
and
nop
jecxz
imul
in
mov
jae
mov
fst
aas
xor
xor
sub
dec
pusha
fcmovnu
std
jle
pop
or
dec
fs
enter
jmp
sbb
ins
ds
sahf
stc
mov
inc
jmp
push
inc
push
mov
xor
retf
sub
icebp
jmp
mov
cmp
iret
in
shl
call
cmp
sub
popa
fstp
cmp
pop
jge
into
fmul
or
mov
sahf
stc
inc
(bad)
mov
push
sbb
jmp
fsubr
aas
mov
dec
mov
add
inc
jle
mov
pop
lods
ins
mov
push
jle
std
cmp
add
(bad)
aam
sbb
gs
mov
arpl
xchg
(bad)
mov
in
fwait
jecxz
aaa
or
jns
push
loop
xor
ficom
xchg
stc
test
ins
enter
xor
adc
dec
jb
call
(bad)
mov
iret
dec
jmp
div
(bad)
jb
sar
xchg
cmp
repz
iret
cmc
fst
in
in
in
mov
jle
mov
mov
xchg
sub
sbb
jp
rol
and
add
dec
outs
out
sub
cli
pop
shl
mov
(bad)
cmps
jne
adc
(bad)
inc
dec
adc
js
dec
mov
cli
mov
repz
int3
std
pop
mov
mov
ret
cmc
xlat
sbb
loopne
test
pop
stc
(bad)
mov
call
xor
pop
sbb
mov
ret
clc
mov
shl
leave
scas
dec
dec
sub
adc
adc
into
mov
sub
cs
fidivr
test
mov
daa
sub
pop
adc
inc
cmc
sbb
pop
cmp
popa
xchg
adc
in
int
fimul
xor
out
sbb
retf
mov
jg
sub
jmp
jp
test
push
xchg
aad
lahf
pop
aaa
or
jb
(bad)
iret
popa
mov
pop
lock
outs
inc
sahf
xchg
loopne
sbb
scas
gs
or
mov
inc
js
mov
xchg
scas
jmp
push
test
mov
shr
cdq
mov
shl
add
loop
xchg
add
aad
mov
sub
cmps
and
and
jmp
scas
cmp
sbb
mov
and
xlat
and
imul
push
mov
pop
movs
movs
das
mov
sahf
push
adc
sbb
mov
sbb
mov
or
lods
out
cld
popa
pop
inc
mov
out
dec
sbb
pmaddwd
push
mov
test
mov
mov
cmc
xor
call
mov
rcr
adc
mov
jl
pop
push
cdq
push
jne
int
cli
jb
jo
sbb
in
retf
xchg
not
outs
mov
xchg
scas
rcr
out
dec
add
stos
pop
sub
je
test
xchg
or
pop
pop
xchg
mov
adc
or
dec
mov
and
add
cmps
mov
clc
in
movs
rol
push
fstp
mov
out
cwde
xchg
and
retf
test
jne
jnp
jmp
pop
fisttp
jmp
femms
clc
push
je
sub
sub
sub
jb
sti
inc
adc
pushf
out
in
mov
out
push
mov
fsub
push
push
jb
mov
sbb
inc
mov
pop
sub
or
jge
sbb
popa
jle
mov
lods
adc
xchg
pop
mov
inc
sub
in
or
inc
cld
sahf
cmc
mov
ins
add
jl
cld
inc
jmp
sbb
ins
lgs
sub
mov
inc
cli
add
sub
mov
addr16
lea
iret
xor
xchg
lea
xor
mov
jnp
cmp
xor
cli
arpl
jne
movs
(bad)
daa
jo
dec
mov
retf
out
sbb
mov
enter
ja
pop
jg
loopne
jnp
dec
or
(bad)
inc
sahf
or
aam
out
loop
stos
shl
xor
sbb
and
popa
pusha
out
movs
ja
stos
scas
jp
fbstp
jp
cwde
pop
dec
sbb
aam
inc
cld
retf
cmps
adc
(bad)
fnstcw
hlt
adc
fnstenv
xchg
enter
xor
(bad)
xor
and
das
push
jb
jle
loop
out
cwde
add
mov
not
(bad)
retf
arpl
ins
sbb
push
inc
movs
lock
inc
stos
shl
minps
in
fcomp
push
or
bound
push
mov
pop
inc
add
(bad)
test
mov
test
fild
jno
int
cmc
cmp
mov
iret
xchg
ss
xor
sub
dec
lds
push
movs
pop
call
iret
cmps
jae
jp
hlt
add
sub
out
xor
stos
adc
mov
mov
sub
lahf
sub
test
sbb
call
in
neg
test
adc
les
fisttp
imul
shr
mov
jbe
daa
and
in
test
sub
movs
sub
pop
retf
jecxz
jge
and
xor
mov
lods
cmps
jno
ds
outs
fnstcw
adc
cwde
outs
loope
in
in
push
mov
xor
xchg
mov
or
not
test
adc
(bad)
cdq
mov
int
cmp
xlat
lods
pop
pop
cmc
pop
jmp
mov
loopne
jo
xchg
mov
mov
adc
in
sub
fs
int
dec
mov
mov
loop
dec
sub
enter
push
lea
or
movs
aaa
cdq
pop
or
iret
out
push
xor
(bad)
data16
mov
cmovno
sub
cmp
fild
shr
ffree
sbb
jl
daa
fstp
jne
pushf
in
sahf
in
ja
das
dec
lock
sar
sti
lods
jg
push
repnz
imul
sbb
xchg
mov
push
psllw
jno
pop
cmp
cld
das
fdiv
cmp
cmps
dec
inc
xlat
push
add
ds
test
ja
popa
pop
inc
leave
inc
adc
ss
inc
mov
push
inc
xor
test
pop
pop
aam
cmp
mov
stc
push
dec
push
adc
sbb
dec
js
inc
mov
(bad)
sub
out
lods
cmp
xchg
scas
addr16
ret
jg
je
(bad)
js
lods
adc
fsubp
popf
shr
std
mov
fs
cli
xchg
adc
pop
cmc
push
sub
hlt
loop
inc
popf
into
ret
out
xchg
or
sti
lods
popa
inc
mov
mov
(bad)
movs
mov
pop
mov
outs
aad
xchg
aaa
adc
sbb
adc
push
shl
push
test
push
or
cmp
fadd
and
dec
cmps
dec
in
jae
cmps
push
dec
jmp
pop
xchg
and
loopne
jle
in
aaa
adc
ins
js
nop
pop
jge
xchg
jl
and
fnstenv
add
dec
inc
pop
pushf
sub
xchg
aaa
or
jo
loope
int
jmp
mov
cmc
cdq
jecxz
mov
test
dec
sbb
imul
popa
xchg
lock
inc
je
cld
inc
xor
adc
das
leave
sub
inc
out
mov
cwde
imul
pop
imul
es
loop
fild
fild
fdiv
fwait
js
div
out
test
adc
dec
stos
movs
std
out
jp
push
mov
add
ins
xor
out
dec
pop
dec
cmp
xchg
push
mov
sub
scas
ins
or
das
shl
(bad)
mov
imul
push
in
popa
xor
add
cmp
cld
data16
sbb
xchg
push
or
mov
xchg
lea
and
sub
push
dec
repnz
pop
in
ins
lock
adc
hlt
(bad)
dec
std
mov
or
mov
inc
or
outs
rcl
add
mov
in
outs
cmps
mov
pop
inc
(bad)
and
xchg
xchg
fst
push
aam
ss
inc
mov
test
imul
fadd
ret
sub
fistp
dec
inc
or
out
sub
stc
outs
fsubr
mov
test
add
fiadd
sub
idiv
bound
ret
js
inc
sub
pop
adc
mov
jmp
push
sub
cmps
or
in
push
inc
push
push
xor
cs
in
cmp
jl
std
jge
push
jne
shl
sub
enter
lock
ds
mov
iret
xor
enter
shl
fimul
pop
sbb
mov
jbe
cmc
bound
and
int
jb
in
loopne
arpl
std
xlat
dec
cmp
(bad)
push
in
sbb
call
fisubr
pop
std
popa
mov
jnp
retf
in
dec
ja
xor
adc
adc
add
(bad)
stos
test
jecxz
es
sub
xor
fmul
push
out
js
jae
and
repz
cmps
mov
(bad)
aad
movs
sbb
fsubr
std
repnz
jp
fwait
inc
xchg
jg
in
cmc
jmp
pop
imul
sbb
xor
jb
(bad)
mov
inc
mov
int3
dec
enter
jp
(bad)
pusha
cs
xor
mov
and
adc
mov
leave
fld
(bad)
sub
dec
pop
shl
mov
push
push
pop
in
cwde
mov
push
inc
popa
mov
mov
mov
sbb
je
inc
retf
push
inc
ss
jg
aaa
js
xor
dec
(bad)
repnz
test
aad
jmp
and
dec
cvtps2pd
jmp
mov
mov
es
mov
sub
pop
or
movs
test
leave
call
jbe
call
outs
hlt
adc
pop
push
jne
retf
nop
dec
jmp
sub
fs
and
into
test
js
xchg
xchg
jb
add
out
aam
in
xor
xchg
pop
dec
jmp
mov
mov
into
shr
pusha
ss
xor
add
cmp
cmp
fwait
dec
retf
scas
inc
xchg
ss
and
add
cmp
and
push
bound
mov
(bad)
and
push
mov
repnz
std
sub
sub
pop
(bad)
mov
sar
(bad)
scas
jmp
jb
iret
adc
out
or
mov
(bad)
xchg
cld
and
fcom
popa
mov
jnp
call
enter
xchg
add
push
scas
cmps
cli
jne
sbb
push
repz
mov
bound
jge
sbb
pop
in
ret
jns
es
scas
add
dec
pop
xchg
push
pop
or
adc
or
jne
pop
outs
shl
push
aad
mov
push
out
push
pop
xchg
sar
dec
(bad)
test
fcomp
(bad)
int
pushf
sub
jmp
inc
dec
js
outs
js
sbb
push
and
xchg
mov
xchg
cmp
nop
cld
inc
mov
test
push
mov
ds
or
or
iret
scas
(bad)
imul
jno
mov
xchg
idiv
sub
mov
sbb
mov
inc
fild
xchg
dec
enter
inc
add
xchg
mov
mov
xchg
push
fcmovnu
loope
call
dec
lds
mov
jge
ds
lods
(bad)
popa
or
les
outs
sti
fsubr
cmp
sbb
pop
adc
cdq
pop
data16
cmp
adc
int3
pushf
mov
popf
adc
push
fidiv
mov
fsin
(bad)
fmul
and
sahf
daa
lea
fistp
aaa
xchg
sahf
int
dec
dec
xchg
jmp
mov
jo
div
mov
pop
outs
or
iret
cmp
inc
dec
adc
aaa
mov
cmps
jg
icebp
pushf
inc
fwait
std
adc
(bad)
mov
rcr
jp
(bad)
jns
pop
pop
dec
stc
jae
push
out
pop
repnz
push
inc
adc
clc
mov
pop
mov
hlt
mov
pop
mov
cmps
jns
cmc
dec
sub
movs
push
sub
sbb
test
jo
push
xchg
adc
or
loope
xchg
jb
cmp
push
retf
cmp
popf
lds
clc
cmp
test
adc
xchg
aaa
mov
iret
mov
cdq
or
mov
xchg
sbb
outs
les
sub
lahf
daa
dec
dec
add
test
(bad)
retf
push
sbb
push
and
push
enter
adc
sbb
frstor
jge
rol
and
or
or
xchg
dec
inc
jne
jbe
cmp
or
stos
sub
stc
rol
int3
adc
rcr
aam
cwde
clc
es
adc
add
mov
push
inc
inc
dec
sti
scas
mov
or
dec
out
push
jo
mov
dec
out
in
dec
jmp
cwde
leave
ffreep
jb
cld
sahf
add
movs
cmc
fisub
mov
dec
adc
das
test
enter
out
inc
push
jmp
in
pushf
jp
fcomp
mov
xor
shr
js
aad
idiv
shr
scas
psadbw
js
mov
aas
add
sub
ins
(bad)
sbb
std
adc
mov
rcl
aad
repz
jmp
cmp
je
test
dec
push
jnp
sbb
xchg
(bad)
sub
xor
add
out
arpl
ins
adc
dec
lea
pop
mov
fnstenv
jb
mov
mov
data16
lds
outs
mov
sbb
xchg
outs
inc
mov
pop
pop
scas
lock
pop
sub
jne
jle
out
or
inc
sub
dec
dec
shr
pusha
xchg
lock
mov
mov
xor
neg
jle
pop
and
ins
push
or
dec
scas
mov
ror
test
scas
loopne
test
loope
pop
sahf
dec
push
and
cmp
lahf
cli
scas
(bad)
inc
add
clc
adc
mov
push
fdiv
cmps
out
outs
sbb
ss
xchg
cli
in
adc
jle
fcom
xlat
fld
adc
mov
sub
xchg
mov
inc
and
les
and
pop
xchg
xor
xchg
or
adc
icebp
xlat
inc
sahf
loopne
and
pop
loopne
ror
call
je
arpl
push
fs
jge
clc
jg
lods
das
or
cli
sbb
fdivr
and
(bad)
mov
lock
(bad)
std
pop
adc
pop
mov
mov
mov
leave
mov
pushf
sbb
push
mov
lahf
mov
push
ds
pop
scas
pop
mov
cmp
mov
sbb
push
outs
sub
das
call
push
push
fsub
movs
and
jmp
pop
jmp
cmps
xchg
mov
mov
int
pusha
jp
cmp
fsubr
call
mov
sbb
mov
popa
jmp
mov
xor
push
dec
push
jo
sbb
adc
std
loopne
(bad)
ror
adc
(bad)
aad
inc
inc
gs
adc
(bad)
jae
mov
cld
stos
dec
mov
xor
jmp
repnz
in
repnz
add
in
pop
pop
shr
aam
sbb
into
adc
jne
out
mul
mov
jo
popf
add
xchg
rcl
inc
and
xor
push
or
mov
inc
inc
out
scas
lods
add
push
movs
inc
mov
xchg
add
and
cmp
push
mov
arpl
enter
dec
(bad)
mov
shl
out
mov
ds
cmp
loop
fnsave
xor
push
jne
mov
repz
mov
mov
js
jo
sbb
jne
jno
add
mul
jnp
xchg
mov
pop
sbb
mov
dec
sub
jns
mov
sub
pushf
add
mov
hlt
fdivp
xchg
pushf
mov
dec
push
xchg
xchg
pop
ret
in
cmc
sbb
aam
dec
fdiv
sahf
jge
xor
(bad)
jecxz
adc
mov
ror
fild
xor
cmc
jl
shl
push
mov
mov
fs
pop
jne
mov
jae
gs
sbb
out
out
mov
scas
adc
lods
pop
push
mov
fs
call
into
scas
div
retf
push
loope
mov
add
dec
das
(bad)
int3
(bad)
movs
mov
(bad)
out
push
(bad)
jge
enter
pop
jmp
fdiv
and
pop
lods
lea
mov
push
jle
enter
and
pop
push
repz
xor
hlt
mov
xchg
call
test
inc
adc
jl
loop
cmps
scas
mov
scas
push
adc
mov
dec
(bad)
jecxz
scas
xchg
xor
cmps
enter
jae
push
out
loope
xchg
push
sub
mov
mov
ftst
out
and
not
test
stos
mov
pop
mov
int
sbb
cmps
popf
out
cmc
xchg
adc
sbb
xchg
ins
inc
mov
jle
ins
dec
inc
std
out
sbb
adc
pop
or
pop
stc
push
(bad)
mov
pop
in
stc
xchg
add
movs
loope
cmp
xchg
cwde
imul
xlat
shl
test
cmp
(bad)
push
loope
xor
sub
adc
mov
sub
lods
jp
xor
and
in
sub
mov
add
shl
push
sar
iret
leave
pop
and
std
pop
jp
push
popa
test
sahf
mov
lods
fwait
mov
aas
js
push
pushf
enter
jecxz
dec
pop
into
add
jmp
jb
pop
adc
int
cmc
sbb
sub
dec
leave
pop
sub
push
push
mov
(bad)
dec
pop
neg
call
bound
(bad)
cmp
mov
mov
and
jle
(bad)
dec
push
jge
dec
cld
pop
ds
fld
xchg
mov
out
shl
jge
and
jnp
int3
rcr
call
mov
push
add
inc
ficomp
(bad)
dec
sbb
shl
cmp
xchg
mov
enter
cmc
mov
out
or
mov
(bad)
pop
dec
pusha
arpl
shl
sbb
xchg
in
adc
xchg
jne
xor
std
jb
inc
pop
movs
sbb
(bad)
jo
imul
out
xlat
inc
repz
gs
sub
pusha
ret
call
(bad)
mov
add
in
cdq
outs
mov
dec
fwait
push
add
scas
loope
ss
push
xchg
fldenv
mov
xchg
mov
leave
and
in
xor
sbb
xor
(bad)
popf
and
pushf
mov
cmp
push
adc
cmp
ja
mov
cmp
xchg
jl
ds
idiv
xchg
or
stos
jno
fcomi
stos
xor
cmp
mov
jb
pop
aad
sbb
jg
push
push
stc
int
cmc
jmp
dec
retf
test
out
cwde
loopne
call
mov
and
cmp
and
sbb
mov
(bad)
lock
mov
call
icebp
xor
mov
pop
xor
clc
jmp
sti
movs
jne
jmp
icebp
(bad)
inc
(bad)
in
xchg
inc
or
xor
mov
ja
xchg
pop
mov
cwde
cmp
ds
inc
sar
jb
mov
dec
dec
es
ins
int3
stos
and
test
int
pop
xchg
ins
outs
fadd
retf
cmps
push
lock
and
ror
shl
pop
icebp
repnz
pop
call
stos
in
mov
mov
lea
aam
icebp
push
data16
dec
lods
cmp
dec
jp
fbld
addr16
or
outs
loopne
sbb
xor
pop
xor
and
mov
in
test
scas
jecxz
add
leave
xor
xor
sti
cmc
(bad)
sbb
and
cs
push
(bad)
pop
sub
popa
inc
pop
fwait
popf
mov
pop
retf
dec
pop
jno
cli
pushf
adc
sub
jbe
mov
pop
adc
jecxz
mov
hlt
in
mov
xor
ds
xchg
mul
sub
out
scas
sti
test
es
sub
cdq
popa
repnz
xchg
mov
scas
ins
dec
in
ja
cmp
or
inc
loope
mov
mov
sbb
jbe
adc
mov
sti
jg
jmp
dec
dec
popa
inc
loop
sti
fndisi(8087
cld
pop
pusha
cdq
ins
(bad)
push
mov
popf
out
dec
jge
int3
(bad)
into
push
leave
stos
add
or
or
clc
mov
pushf
ja
leave
pop
push
cmp
push
ss
xchg
cmps
jg
pop
xor
shr
jmp
xchg
adc
pop
cvtps2pi
jne
daa
fwait
or
and
ret
sahf
add
add
or
data16
in
sar
cmps
lods
std
xor
push
enter
test
or
push
jmp
and
cld
shl
inc
fisubr
loop
(bad)
mov
mov
cmp
clc
mov
push
ins
mov
aad
shl
sbb
mov
sar
xchg
push
and
cmp
lods
rep
or
push
call
sti
(bad)
or
fnstsw
push
rcl
inc
arpl
rcl
aam
sahf
ins
and
repz
xor
inc
mov
push
sub
outs
mov
loope
cli
js
fcmovu
test
push
sahf
adc
and
dec
shl
push
leave
xor
lods
imul
jns
fild
jle
push
rol
push
shl
sub
mov
cmp
out
fcom
sub
test
mov
pop
scas
jbe
mov
jo
xchg
stc
in
icebp
and
out
xchg
sbb
mov
mov
dec
push
sub
or
in
mov
and
push
cmp
iret
js
cmp
outs
pop
xchg
ror
xchg
jecxz
or
sub
test
pushf
dec
pop
sbb
sahf
movs
inc
mov
jns
ss
xchg
adc
jb
icebp
repz
ror
ins
jg
xor
movs
popa
cdq
inc
ins
imul
jmp
test
jge
fsubr
test
add
dec
and
(bad)
inc
xchg
in
or
cmovge
xchg
rcr
add
adc
mov
div
mov
(bad)
jp
mov
movs
push
mov
inc
mov
ds
jb
add
dec
mov
cmp
mov
and
test
jmp
nop
or
mov
sbb
pop
pop
jae
mov
xchg
cwde
jg
jg
sbb
js
les
mov
ins
cmps
mov
mov
ror
xchg
ins
imul
xchg
pop
leave
lods
inc
xlat
push
mov
and
lea
or
mov
xchg
outs
sahf
lds
(bad)
(bad)
rcl
mov
cmp
sbb
into
cmp
aad
in
cmp
adc
inc
pop
mov
out
jmp
int
sbb
stos
mov
shl
scas
loope
ja
pop
lahf
mov
addr16
adc
lock
fs
loopne
lahf
ret
push
xchg
xor
clc
hlt
mov
je
jmp
sub
mov
mov
rcr
ins
mov
mov
cmp
and
(bad)
mov
(bad)
in
dec
ret
mov
or
jno
out
popf
dec
xor
out
and
add
loop
std
pop
into
inc
and
loope
dec
sbb
pop
and
dec
jmp
jo
sub
aad
test
pusha
out
cmp
mov
jmp
daa
add
adc
aas
icebp
fbld
lods
loopne
out
retf
outs
push
push
cmp
shr
gs
(bad)
or
nop
dec
ss
imul
int3
cmp
call
jge
pop
xchg
push
fcmovnb
iret
cmps
into
lods
inc
shl
mov
cmps
xchg
test
and
jl
sbb
push
es
sub
ss
dec
push
fwait
in
scas
or
icebp
xchg
mov
fcomp
jb
push
xlat
sahf
(bad)
or
in
in
mov
fwait
mov
in
out
push
imul
ss
cli
data16
jo
sbb
jecxz
jecxz
dec
scas
jb
sub
jp
movs
rol
jae
dec
adc
xor
imul
sub
cs
ins
jmp
pop
int
add
call
test
mov
mov
sahf
leave
fstp
inc
enter
sti
fs
adc
shl
xchg
pop
pop
aas
lock
xchg
shl
jmp
mov
xchg
and
cli
ret
aad
adc
jp
stc
fnstsw
add
int
retf
ret
xor
jmp
xchg
repz
mov
mov
stos
jb
inc
data16
test
(bad)
imul
or
sbb
dec
xlat
sub
push
into
cmp
xor
push
adc
cld
shr
or
scas
cmc
mov
cmp
xor
popa
jmp
xchg
test
dec
push
adc
push
push
jb
out
add
xchg
xchg
mov
cli
test
cmp
add
jmp
or
(bad)
dec
jno
dec
retf
pop
hlt
cmps
(bad)
jns
outs
(bad)
shl
mov
jne
xlat
fs
rcr
lahf
repz
loop
sbb
and
and
push
pop
lods
clc
sbb
outs
sbb
ds
fcmovne
jmp
fisub
or
sbb
pop
mov
adc
fild
sbb
mov
idiv
aam
push
dec
xor
and
mov
enter
int3
and
jmp
clc
(bad)
aad
mov
in
add
add
in
sub
js
jnp
lds
ins
stos
pop
leave
jae
lods
(bad)
adc
inc
xor
push
dec
loope
fidiv
push
(bad)
outs
mov
mov
adc
xchg
imul
mov
fs
xchg
sub
jl
int
jbe
ja
popf
xlat
xchg
mov
push
or
cmp
inc
test
xor
stos
pop
xchg
dec
sbb
into
sub
rol
jl
mov
adc
dec
xor
inc
mov
movs
mov
sbb
dec
gs
mov
jl
jno
inc
das
xchg
int3
jp
inc
sbb
dec
(bad)
jmp
sbb
mov
jo
loopne
mov
mov
daa
xchg
test
loop
bound
in
rcr
jle
add
pop
shl
pop
mov
mov
loopne
or
out
xchg
jo
push
push
(bad)
loope
mov
mov
call
test
add
xor
call
mov
push
xchg
aas
test
push
movs
cmps
and
fild
sbb
and
(bad)
or
push
mov
aam
inc
sbb
sub
push
ds
adc
ins
sbb
movnti
(bad)
std
(bad)
push
arpl
stos
in
xchg
popa
mov
jno
mov
pop
push
out
cmp
ffreep
daa
les
xchg
(bad)
adc
clc
pop
jb
sahf
mov
adc
into
pop
jmp
sbb
out
inc
cmp
out
inc
mov
cmp
sahf
mov
popf
(bad)
mov
test
push
arpl
loop
sar
mov
icebp
xchg
cli
mov
jae
gs
pushf
jbe
xor
nop
sub
mov
push
mov
in
sbb
jle
hlt
pop
jge
or
aam
ds
pop
xchg
mov
cmp
sub
push
xor
loope
jns
cld
sbb
les
shl
repnz
aas
test
lock
cmp
test
shl
test
ret
fnsave
arpl
mov
imul
hlt
fild
lea
clc
fst
pop
sahf
sbb
cmp
jnp
out
add
pop
stc
leave
out
ins
mov
out
cld
mov
jbe
mov
jne
fdiv
loopne
adc
cmp
mov
pusha
aas
jae
sbb
sbb
pop
push
mov
and
and
jp
fsubr
shl
mov
aad
adc
adc
retf
push
fcompp
mov
stos
mov
mov
mov
mov
push
lahf
sbb
repz
rcl
jle
repz
lods
inc
mov
and
add
int3
push
add
loop
inc
push
int
loopne
retf
add
ffreep
shl
xor
jge
loop
int
inc
pop
mov
push
(bad)
ret
cmp
(bad)
in
(bad)
cmp
cmp
and
mov
add
adc
xlat
xchg
and
push
or
daa
xchg
out
jmp
or
pop
dec
sbb
das
and
ja
lods
inc
push
(bad)
gs
mov
sbb
in
ficomp
call
or
mov
sti
fbld
push
xor
cs
mov
jne
dec
push
repnz
test
mov
jmp
xor
aaa
sbb
mov
pop
icebp
gs
sbb
mov
daa
std
out
out
div
sahf
lds
mov
mov
je
ret
xchg
lods
loope
cdq
outs
push
pop
(bad)
push
cld
xchg
test
data16
jnp
push
cmps
repnz
adc
mov
and
in
mov
push
adc
adc
rcr
icebp
in
pop
imul
inc
cmps
repnz
sbb
cli
and
enter
cmp
imul
jmp
mov
fistp
push
sub
push
lahf
add
mov
xchg
std
not
shr
pop
mov
cmp
inc
or
jno
retf
or
xlat
fs
mov
mov
mov
push
cwde
ret
mov
xchg
add
adc
fistp
jp
cmp
test
sbb
call
xchg
test
aad
mov
push
test
test
mov
int3
xlat
fisub
jo
in
addr16
icebp
lds
add
popa
inc
cmp
pop
popf
ds
cmp
stc
jno
cmp
fist
iret
mov
in
dec
lock
mov
add
mov
jmp
lds
xor
xor
(bad)
imul
jb
js
pusha
int
out
or
nop
push
pop
xchg
call
movs
test
es
sub
add
or
or
pushf
cmps
sbb
lods
fsub
call
xor
jb
pusha
shl
test
aam
or
xor
bound
dec
inc
or
sahf
pop
pusha
jp
test
jg
call
inc
pop
adc
inc
push
jo
inc
cmp
ins
mov
inc
dec
cmp
jbe
pop
retf
adc
push
movs
movs
cmp
mov
and
lock
fiadd
retf
and
mov
xlat
or
mov
mov
movs
xor
int
call
(bad)
rol
ror
push
sbb
xchg
cli
pusha
jge
sti
or
add
(bad)
cmp
jecxz
push
sub
xor
jge
call
test
test
and
es
repnz
les
xchg
pop
pop
add
cmc
repz
pusha
mov
mov
add
and
xchg
mov
pop
jmp
inc
xor
out
mov
retf
and
lods
lods
pop
mov
push
sbb
push
or
adc
call
ins
pop
push
mov
ret
dec
(bad)
imul
aas
(bad)
sti
mov
repnz
mov
sahf
adc
inc
pop
add
adc
imul
pop
lahf
and
mov
fwait
clc
pusha
add
mov
test
call
jmp
(bad)
icebp
ja
jbe
jns
pop
(bad)
jo
sub
imul
iret
retf
xchg
fdivr
daa
cmps
pop
arpl
enter
in
aad
es
(bad)
out
cs
pushf
call
cdq
add
sbb
je
fcom
dec
and
ins
jmp
aas
popf
push
test
xchg
outs
xchg
std
mov
cmps
fidiv
mov
xchg
dec
out
int
sub
jg
or
push
mov
and
push
dec
mov
call
sbb
addr16
aam
xchg
ins
push
jnp
gs
mov
and
pop
or
mov
shl
inc
adc
rcl
aas
shl
stos
pop
jbe
mov
add
jae
mov
inc
and
ins
mov
xor
ret
out
sti
cmp
not
aam
and
jmp
daa
xor
and
cld
cmp
(bad)
jl
in
lea
add
adc
ret
adc
mov
push
scas
inc
daa
ins
mov
fadd
movs
push
call
stc
mov
test
ss
add
sub
pop
daa
push
or
cmps
inc
call
sub
mov
aaa
and
rep
stc
mov
fisub
fistp
fsub
loop
cmp
ror
dec
pop
or
cmp
out
repz
push
das
aam
lea
outs
or
aad
or
mov
in
pop
(bad)
inc
nop
or
pop
into
mov
scas
icebp
rcl
sub
scas
xor
jno
sub
jp
sub
adc
in
dec
ja
sbb
jmp
ror
pop
jnp
xchg
cmp
movs
mov
jecxz
adc
xchg
clc
dec
push
sahf
aaa
mov
mov
cmp
scas
in
lock
and
loope
shl
push
ffree
push
je
out
add
xchg
mov
push
dec
cmp
add
push
and
aad
ret
cs
sbb
call
xchg
mov
add
sbb
es
or
sahf
mov
cmp
dec
call
add
xor
ret
pop
jb
stc
mov
ins
push
push
mov
arpl
rcr
push
jp
ror
into
push
jmp
pop
(bad)
mov
mov
gs
das
sub
(bad)
jecxz
and
add
stos
jns
jno
cmp
icebp
sbb
push
retf
lahf
aam
(bad)
dec
or
leave
pop
test
cwde
push
cmp
mov
fwait
cdq
xchg
jge
adc
mov
mov
fld
or
bound
mov
iret
imul
(bad)
pushf
jno
sub
fucomip
fmul
fisubr
sar
inc
mov
jbe
xchg
jp
xor
ins
int
mov
lahf
shl
sub
in
xor
sub
sbb
shr
adc
mov
das
stos
push
mov
sub
sbb
sbb
scas
stos
iret
mov
aam
mov
fcomp
retf
loop
scas
sub
push
int
retf
(bad)
into
fcomp
movzx
scas
mov
mov
xor
mov
(bad)
lods
xor
outs
add
jle
mov
xchg
in
or
cdq
adc
(bad)
in
mov
(bad)
jno
adc
out
(bad)
lds
mov
pusha
mov
mov
cmp
mov
mov
fmul
mov
jl
cmp
stos
int3
xor
add
sti
jo
jge
icebp
fdivr
push
out
xchg
add
mov
ins
ss
push
jp
mov
add
scas
imul
aaa
sub
sub
sbb
repz
mov
mov
pushf
rol
add
sub
movs
dec
xor
addr16
push
add
cld
(bad)
fs
push
add
das
ds
pop
jnp
mov
jg
cmp
scas
cmps
fistp
cwde
dec
into
mov
inc
xor
mov
mov
lods
pop
cld
fst
jl
push
sbb
loope
cs
sub
lods
inc
adc
dec
jmp
(bad)
fistp
adc
xchg
and
and
xor
inc
sahf
aas
repz
test
into
les
popa
jmp
mov
(bad)
xchg
inc
je
dec
(bad)
sbb
push
cwde
das
rol
pop
test
xor
pop
mov
sub
cli
ss
xor
test
das
cli
cmc
(bad)
arpl
js
movs
fiadd
out
je
mov
inc
dec
dec
pop
xor
(bad)
jno
gs
fcomip
or
mov
outs
into
pop
lods
add
sbb
inc
mov
xchg
not
aam
ja
scas
push
mov
call
pop
sti
jnp
stos
adc
mov
push
add
xor
fnstsw
push
repnz
cmp
inc
jnp
jmp
jns
dec
sub
shr
lods
int
mov
xor
in
push
dec
lock
(bad)
scas
int
inc
mov
mov
mov
sub
jb
fwait
out
push
cwde
cmp
cmp
int
push
hlt
xchg
dec
and
push
push
cmp
cli
(bad)
push
mov
mov
pop
xor
xchg
mov
jne
cmc
loopne
ret
sbb
xchg
stos
cmc
push
mov
mov
in
push
jecxz
in
inc
lods
xchg
test
mov
add
nop
dec
ret
cmp
and
and
cmp
mov
test
sbb
dec
sub
mov
adc
mov
mov
dec
adc
adc
push
lea
xor
sar
dec
jecxz
sar
(bad)
es
jmp
pop
pop
enter
repnz
adc
push
mov
dec
rol
sbb
ror
out
pusha
push
ficom
cdq
cld
xchg
and
sbb
adc
ins
mov
xor
jae
or
stos
add
mov
sub
inc
lea
pusha
sbb
nop
aad
adc
jmp
push
sub
cmps
jge
mov
add
lahf
push
in
sub
aad
dec
repnz
cmps
or
sbb
es
inc
loope
xor
pop
mov
inc
push
sbb
(bad)
js
in
jle
lds
repz
cld
xchg
cli
dec
clc
nop
out
ins
jnp
mov
xor
push
shl
sub
adc
inc
sub
fist
rol
xchg
xchg
jg
lods
jb
not
lea
fidiv
adc
add
nop
das
adc
call
fdiv
inc
xchg
mov
aad
pushf
dec
int3
out
push
call
xchg
cmp
or
adc
push
cmp
add
clc
loopne
add
jae
sub
mov
sbb
cwde
in
bound
xchg
sub
xchg
dec
cmps
imul
inc
jmp
fadd
inc
mov
fwait
sbb
or
dec
repnz
pop
jle
inc
pop
les
mov
inc
out
icebp
pushf
mov
out
daa
sahf
and
add
retf
mov
(bad)
out
test
fisttp
pop
lock
jmp
and
jb
lods
mov
push
sub
pusha
std
clc
pop
xchg
aad
ror
push
mov
pusha
ins
inc
pushw
popf
and
cmp
sbb
add
loopne
aas
(bad)
mov
mov
clc
adc
js
ret
cmc
mov
sbb
cmps
sub
aad
ds
int
out
inc
movs
xchg
add
mov
sub
jno
pop
jae
fild
leave
stc
mul
in
jne
faddp
mov
lahf
sub
in
push
dec
jo
push
xlat
mov
in
inc
pop
mov
jns
or
push
data16
inc
bound
aaa
pop
pop
retf
push
and
scas
lods
push
loope
and
inc
ss
sahf
pop
into
sub
mov
adc
mov
add
fiadd
push
jae
cwde
mov
jbe
sub
adc
std
push
jmp
push
dec
add
push
out
xchg
mov
mov
das
popf
enter
pop
mov
out
fcom
jp
cs
test
dec
add
mov
and
shr
xchg
cmp
jno
cld
adc
(bad)
fwait
es
push
and
ret
retf
loopne
inc
push
lahf
mov
dec
push
in
jmp
sub
adc
inc
les
mov
push
aam
aad
(bad)
push
mov
stos
outs
ret
std
in
adc
xor
or
sbb
dec
popa
push
shr
xor
(bad)
std
push
popf
out
lock
mov
ins
movs
outs
dec
fcmovb
(bad)
fstp
and
(bad)
loop
iret
movs
out
mov
or
cmp
fisttp
jns
fsub
adc
cmp
xor
jns
sti
jle
xor
inc
sub
inc
shl
mov
lock
mov
xlat
shl
ficomp
cli
mov
repz
ret
test
mov
add
add
rcl
cmp
daa
inc
mov
mov
iret
outs
inc
ss
add
stos
inc
cmps
lahf
jae
push
and
out
cld
and
jnp
mov
mov
les
dec
xor
adc
mov
retf
aaa
mov
pop
or
loopne
mov
out
dec
cli
sahf
mov
cmp
cli
sbb
jbe
ins
adc
xor
jno
cmp
mov
clc
mov
arpl
xchg
xlat
stc
scas
xchg
xor
pop
mov
adc
ror
adc
pop
and
sti
pop
sub
sbb
xor
iret
stos
mov
dec
into
xor
push
sub
aaa
dec
push
dec
sahf
add
jg
scas
lea
and
xor
in
push
push
jb
inc
and
and
xchg
cwde
std
aam
cmp
imul
test
lahf
mov
mov
sbb
lds
inc
mov
loopne
or
repnz
xor
sbb
cld
xchg
lods
fwait
rcr
ins
cmp
rcr
sti
cmps
cmp
(bad)
sbb
dec
mov
mov
dec
add
mov
jle
clc
repz
cmp
xor
outs
sbb
mov
push
sub
(bad)
cmp
bound
and
popf
and
xor
(bad)
fisttp
daa
fldl2e
pop
jecxz
jo
jl
js
sub
retf
iret
out
adc
test
enter
inc
mov
gs
push
mov
xchg
mov
mov
std
fiadd
aad
out
outs
dec
repnz
or
pop
mov
fstp
into
or
cdq
int
lock
cmp
aam
ins
loop
cwde
lock
mov
pop
and
call
push
shl
adc
scas
push
out
inc
fs
xor
mov
outs
int
shr
iret
js
xchg
push
mov
and
in
jp
mov
push
into
mov
loop
lods
push
mov
adc
cmp
push
int3
or
leave
not
fnstcw
lods
mov
push
test
cli
jl
sbb
ins
push
iret
cmc
cli
ins
rcl
retf
push
mov
call
cmp
mov
and
div
jo
jno
cwde
jmp
imul
xor
mov
fsubr
ins
shr
xchg
push
xchg
dec
lods
pop
(bad)
push
mov
and
xor
add
inc
dec
pushf
int
adc
test
adc
adc
fstp
inc
jmp
inc
mov
cmps
cdq
hlt
in
fnstsw
loopne
and
data16
push
hlt
pop
adc
and
dec
and
imul
add
jle
out
add
popw
mov
jb
jmp
sbb
pop
push
pushf
loopne
or
cmc
cmps
jecxz
xchg
(bad)
xchg
dec
push
pop
into
jge
rol
ins
ja
(bad)
lods
lock
inc
and
psubsb
or
pusha
pop
in
hlt
in
cmps
hlt
or
dec
pop
add
retf
fpatan
jmp
push
das
in
xchg
fwait
in
xchg
or
movs
shl
loopne
(bad)
dec
mov
call
pop
cdq
fs
mov
call
in
rcr
push
jnp
push
xchg
std
scas
cmp
test
sub
jl
adc
shr
out
and
aad
jns
adc
add
mov
sub
mov
or
fisubr
sti
jns
shl
jae
jno
xor
repnz
mov
popf
pop
imul
adc
hlt
hlt
push
or
stc
iret
fnstsw
dec
ss
sub
(bad)
sub
shr
mov
lods
(bad)
repz
iret
test
outs
(bad)
dec
(bad)
data16
inc
push
xchg
pop
int3
inc
(bad)
stc
pop
sar
sbb
imul
adc
shl
jle
push
cmp
xchg
and
rol
es
add
and
mov
push
popf
scas
xor
dec
cmp
add
fsubr
mov
out
aam
pop
mov
push
fwait
loopne
jecxz
mov
mov
nop
sub
aaa
sub
xchg
xor
mov
inc
mov
jns
std
push
add
out
in
fcom
popa
cmp
ja
enter
das
cmp
scas
loopne
ror
into
xlat
(bad)
aam
cmps
inc
or
inc
mov
push
pop
je
adc
pop
push
xor
movs
ja
jle
jl
mov
add
lods
aaa
jmp
mov
movs
stc
or
mov
sar
cmp
loop
sti
mov
cmp
mov
call
nop
or
adc
lahf
or
jb
and
stc
lods
push
jnp
cli
adc
adc
add
cmp
call
fiadd
adc
sbb
adc
inc
out
mov
mov
lea
adc
pushf
sbb
(bad)
jp
leave
xor
ins
(bad)
daa
push
and
xlat
repz
inc
mov
(bad)
pusha
cwde
xchg
mov
mov
mov
mov
mov
push
push
mov
lds
dec
mov
adc
neg
lds
add
xlat
popf
cmps
and
xor
dec
xchg
jbe
ss
sub
fadd
mov
adc
push
xchg
retf
xor
sub
(bad)
mov
jne
ret
cs
mov
mov
adc
inc
adc
push
popf
ret
mov
mov
sub
mov
inc
push
jne
jne
add
inc
inc
dec
mov
dec
push
jp
test
movs
cmp
aad
pop
sbb
jae
cmps
scas
retf
xor
add
xor
adc
leave
pop
outs
aas
pushf
jo
aaa
shl
adc
push
sub
jle
imul
inc
or
fwait
pop
mov
test
sar
inc
lods
fwait
shr
clc
in
push
xchg
mov
xor
xchg
rol
mov
mov
test
cmp
dec
popf
dec
es
cmps
dec
jle
mov
retf
es
jns
xchg
retf
addr16
push
ret
cmp
mov
jmp
xchg
in
sub
call
push
jo
mov
hlt
add
sub
pop
dec
fwait
push
fbld
nop
pusha
mov
push
movs
leave
(bad)
shl
mov
inc
pop
pop
dec
lock
mov
sbb
push
daa
xor
push
mov
dec
retf
xchg
cmps
inc
xor
in
mov
scas
ja
jmp
lahf
jp
imul
jnp
ins
cmps
jbe
(bad)
pushf
mov
adc
jo
lahf
add
fisttp
push
(bad)
pop
mov
or
imul
sbb
dec
push
and
mov
or
sahf
sub
lds
pop
arpl
je
pcmpgtd
scas
cs
(bad)
push
fldcw
sub
jecxz
mov
scas
push
mov
imul
mov
jmp
iret
fwait
dec
sti
sti
dec
sbb
std
aas
fnstsw
inc
in
fcom
scas
into
pop
push
inc
loop
adc
in
inc
pop
jp
adc
mov
icebp
cmc
pop
mov
fldenv
shr
arpl
stc
xchg
lds
icebp
adc
(bad)
loopne
and
xchg
out
push
add
lock
out
dec
xchg
int3
call
mov
xchg
dec
popa
shr
xor
sub
lds
mov
daa
ja
arpl
mov
jge
sub
mov
mov
push
dec
imul
fsub
inc
sub
inc
mov
movs
mov
xchg
mov
xchg
fdiv
(bad)
jns
push
je
xor
arpl
inc
lahf
inc
in
jo
call
mov
push
xchg
iret
leave
jae
bswap
popfw
pop
xchg
jl
aaa
jp
out
or
cwde
inc
adc
push
jmp
cmp
pop
xchg
cs
jnp
cmp
es
mov
adc
or
test
pop
stos
in
call
add
imul
mov
js
scas
popa
pop
dec
(bad)
xor
or
sub
sub
push
test
mov
ins
or
mov
out
pop
sar
jb
cmc
or
mov
pop
ja
mov
cmp
mov
xor
lock
jmp
pop
dec
jmp
pop
das
add
movs
cmc
jb
out
out
dec
mov
stc
cmp
into
and
push
xchg
xor
adc
push
retf
jb
push
xchg
dec
repnz
paddusw
fisubr
pushf
xchg
jnp
stos
adc
mov
adc
inc
mov
mov
or
inc
repz
stos
(bad)
mov
retf
push
jb
adc
or
cmp
popa
pop
scas
imul
jmp
inc
mov
pop
(bad)
jecxz
imul
mov
lahf
xor
imul
lock
fcmovbe
inc
adc
pop
ret
jg
fsubp
and
push
cmp
daa
fldenv
mov
jns
cmps
in
cmps
and
push
pop
(bad)
sahf
pushf
mov
imul
in
es
cmp
or
mul
(bad)
test
cmp
cmp
aad
scas
bound
test
pop
jmp
or
shl
mov
ja
add
mov
pop
mov
int3
push
mov
pop
outs
hlt
fcmovnb
aam
add
pop
xor
outs
ret
jae
inc
rcr
add
sub
xchg
inc
inc
test
adc
outs
fnstsw
cs
xchg
sub
dec
xor
leave
push
push
push
mov
cmp
cld
add
ret
jns
xchg
call
inc
iret
lods
and
retf
(bad)
std
xor
outs
or
pop
xchg
in
test
outs
retf
jns
ds
je
loopne
mov
loope
stos
ja
ja
adc
or
push
mov
stos
sbb
ret
xor
shr
das
outs
push
lods
or
cli
sbb
pop
xor
add
imul
jl
lock
mov
xchg
lods
pusha
and
rcl
push
fs
xchg
icebp
fdiv
hlt
test
stos
pop
sub
jge
push
mov
loope
cli
scas
shr
inc
and
adc
imul
or
cmps
addr16
ja
(bad)
das
xchg
test
aaa
data16
sbb
gs
jnp
jge
jg
inc
and
shl
(bad)
cmc
add
xchg
mov
or
adc
pop
xchg
fdiv
mov
mov
leave
imul
jbe
fstp
cmp
test
jno
je
lods
(bad)
aas
aas
retf
push
clc
dec
imul
push
ss
jne
sbb
data16
jb
mov
int
mov
mov
in
adc
mov
jle
mov
dec
fistp
xchg
out
fcos
ja
jbe
dec
pop
adc
push
in
mov
adc
push
inc
xchg
add
adc
(bad)
nop
cmp
out
mov
sar
or
jle
mov
nop
lds
xor
not
adc
jge
inc
fcmovb
xor
es
jbe
mov
cmp
fdiv
add
fild
mov
ds
mov
and
sbb
add
bound
mov
ins
xchg
push
xchg
sbb
sbb
push
pop
sbb
jecxz
scas
ins
icebp
dec
add
aas
xchg
jle
fld
test
mov
lds
mul
jle
cmp
mov
les
mov
rcr
add
push
jg
retf
repz
jnp
test
retf
push
jno
push
inc
push
ror
inc
push
(bad)
sub
sbb
fld
dec
push
xchg
dec
movs
jle
stc
push
or
iret
ret
lds
cmp
add
(bad)
xchg
mov
cmc
sar
sub
int3
jge
pop
jae
out
jle
out
push
ret
lods
sub
retf
xor
jns
setns
outs
sub
stos
in
aas
xor
push
pusha
mov
jnp
lds
and
inc
shr
out
sub
and
stos
jmp
sar
push
imul
and
test
cmp
jle
mov
push
jmp
or
fisttp
imul
mov
clc
sbb
pop
inc
mov
test
aas
mov
adc
in
pop
push
sbb
popf
jle
(bad)
jmp
mov
sahf
mov
out
sub
out
fxch
and
pushf
mov
xor
lahf
retf
sbb
js
out
stos
xor
int3
mov
rcr
int3
push
mov
test
mov
xchg
xchg
pushf
les
arpl
popa
ja
xor
jbe
pop
(bad)
fdivr
sub
fwait
xor
fs
adc
pop
sar
mul
clc
lock
add
inc
inc
jmp
std
(bad)
aas
ss
in
cmp
js
popa
mov
icebp
popa
jo
ds
movs
sbb
and
mov
push
cmps
xlat
test
cmc
jns
imul
or
icebp
retf
adc
fild
daa
ftst
xchg
and
adc
mov
std
cmps
or
xor
icebp
adc
mov
int
fnstenv
push
cmps
loopne
mov
dec
(bad)
popf
inc
call
mov
mov
mul
mov
idiv
or
out
dec
push
into
mov
jl
lds
sbb
movs
rcl
mov
and
pop
hlt
arpl
sbb
push
loop
jns
inc
retf
mov
iret
in
or
lea
pop
mov
pop
fisttp
inc
mov
arpl
ficom
out
mov
and
js
repz
ja
mov
icebp
stos
sbb
imul
jge
dec
add
mov
mov
(bad)
(bad)
fisub
and
mov
data16
add
and
shl
dec
sahf
stos
xor
inc
adc
jmp
test
(bad)
push
or
push
xchg
mov
stos
adc
cmps
pop
cmps
sub
xor
jmp
mov
sar
call
and
push
jl
sbb
int
inc
icebp
push
cmp
cmp
add
jo
clc
xchg
xchg
sar
xchg
jne
cs
adc
popf
outs
ja
inc
cmp
pop
xor
cmp
retf
xor
ret
ja
ror
in
(bad)
popf
mov
into
mov
retf
outs
mov
imul
xor
and
add
pop
sub
test
mov
pop
inc
push
cmp
fwait
mov
cmp
add
cmp
std
push
das
pop
int
pop
dec
pop
mov
test
xor
xor
das
lods
xor
and
test
mov
jl
mov
cmps
dec
pusha
rep
jnp
dec
out
jecxz
pop
fisubr
cwde
ja
xchg
dec
cdq
ins
mov
pop
mul
ins
pop
movs
shl
push
or
out
test
mov
retf
je
cmp
mov
mov
lds
xchg
mov
sub
enter
sub
pop
out
cld
addr16
clc
pop
jmp
sbb
push
inc
test
jmp
jmp
dec
add
mov
xchg
shl
loopne
cmp
inc
outs
inc
loope
fsub
ror
push
bound
icebp
mov
inc
xchg
add
and
or
push
sar
in
popa
mov
mov
mov
or
mov
and
or
aaa
fcmovu
ja
push
clc
mov
mov
dec
iret
add
pop
shl
xor
or
fadd
data16
mov
push
cmp
xor
ss
jae
add
xlat
sbb
add
mov
inc
jae
shl
inc
sar
test
(bad)
mov
mov
cmp
es
in
mov
int3
loopne
lods
xor
xor
aam
mov
pushf
xor
inc
xor
cmp
inc
loopne
xor
cld
xchg
mov
loop
loop
aas
sar
ror
scas
inc
out
xchg
(bad)
ins
je
or
mov
mov
ins
arpl
in
imul
fisub
in
pop
mov
icebp
psubd
repz
dec
xchg
jle
mov
or
nop
sub
xor
es
xor
sub
xchg
sub
ins
add
and
and
(bad)
cmp
imul
(bad)
jp
je
bswap
mov
cmp
sub
dec
shl
loope
cli
aas
fsubr
test
inc
sti
in
mov
jmp
jp
jecxz
lods
leave
mov
scas
rcr
fisttp
daa
mov
sub
lods
or
ret
inc
sahf
and
jmp
inc
mov
lods
je
mov
pop
cmp
or
(bad)
das
add
leave
push
mov
push
or
stc
ret
in
xor
or
push
pop
add
mov
aam
std
(bad)
mov
outs
cmc
mov
sahf
mov
jmp
pop
pop
push
sub
dec
jae
enter
dec
arpl
(bad)
or
data16
sub
dec
cmp
mov
adc
retf
jmp
dec
cld
sbb
imul
daa
add
addr16
mov
retf
mov
jg
mov
mov
adc
mov
xlat
jg
add
jns
loopne
outs
sahf
into
jb
out
daa
dec
mov
jmp
aad
clc
pop
dec
fcom
sar
inc
in
mov
xchg
adc
push
mov
jb
sub
sub
lock
mov
pop
push
sbb
pop
push
mov
add
rol
dec
std
add
mov
sub
mov
or
mov
inc
sbb
lods
addr16
push
loope
jo
shl
adc
(bad)
loop
pop
push
mov
leave
loop
mov
lods
push
jmp
lahf
jns
sbb
adc
enter
mov
inc
dec
lock
dec
or
stos
ins
mov
lahf
shl
mov
pushf
cmp
mov
lods
add
sub
mov
loope
ins
adc
out
sar
pushf
push
lods
fistp
outs
xchg
in
mov
inc
inc
sti
xchg
dec
push
mov
ficom
je
(bad)
out
adc
push
add
push
fiadd
xchg
test
or
and
and
mov
mov
xor
lods
mov
push
mov
jmp
add
push
sbb
shr
sbb
sub
outs
dec
pop
fsubp
idiv
imul
xlat
test
mov
sub
daa
mov
xor
add
fdivr
add
clc
add
shl
ror
sbb
jge
jno
enter
add
inc
add
push
fimul
adc
dec
mov
pop
fist
sar
sbb
dec
test
inc
mov
adc
mov
xchg
xor
cmc
in
cmp
xchg
cld
mov
dec
jne
scas
mov
mov
xchg
lods
mov
cmp
push
mov
jg
mov
pop
pop
repnz
xor
xchg
xor
pop
and
imul
scas
pop
pop
mov
cmp
add
mul
sub
mov
sub
add
outs
gs
cs
shr
hlt
clc
in
fidiv
int
cmps
dec
in
leave
shl
pop
(bad)
jp
out
mov
mov
push
cmp
scas
retf
icebp
xchg
test
jmp
sub
loope
mov
xor
(bad)
(bad)
out
outs
add
int
pop
scas
arpl
shl
es
ja
jno
pop
mov
push
inc
dec
ins
mov
dec
popa
clc
jp
adc
std
dec
out
sub
xchg
fild
inc
cld
repnz
push
repnz
and
adc
stos
mov
add
popf
jo
mov
(bad)
jae
das
mov
mov
movs
test
std
mov
data16
xlat
loopne
sbb
jecxz
cdq
hlt
adc
adc
lods
cmp
mov
es
jmp
fist
and
xor
jl
adc
rcr
leave
sub
inc
dec
cmp
ror
dec
push
mov
ins
mov
ror
fild
jmp
popa
jl
enter
sub
dec
pop
xchg
ins
ss
jmp
xor
cwde
pop
cmp
stos
dec
xor
cmp
fadd
ja
xchg
aad
pusha
inc
(bad)
imul
add
push
mov
mov
mov
cmc
jns
jnp
fcom
movs
aad
adc
nop
mov
ret
cmp
nop
test
test
jo
ret
cmp
inc
pushf
xchg
fist
pop
mov
mov
in
les
loopne
fisub
out
and
inc
leave
mov
add
adc
imul
nop
pop
cmp
and
mov
xor
sub
movs
lods
mov
es
es
seta
push
sbb
jbe
mov
push
neg
cmp
jle
pop
lods
jns
push
ins
out
pushf
xchg
mov
or
inc
sbb
inc
call
(bad)
jnp
sbb
test
fstp
pop
imul
mov
adc
mov
shr
jno
xchg
sbb
out
adc
outs
ss
mov
or
test
les
cli
hlt
mov
fstp
stos
push
aaa
fs
sub
cmc
mov
inc
jns
aas
test
(bad)
jp
or
js
arpl
mov
add
inc
jmp
sub
cli
push
mov
les
add
gs
pop
jns
dec
outs
push
(bad)
inc
or
jmp
or
(bad)
mov
stc
adc
pop
cmps
sbb
sub
pop
fchs
pop
ja
fmul
retf
ret
inc
mov
or
jmp
or
jge
cmp
push
sbb
xchg
cmp
scas
mul
retf
xor
adc
dec
imul
in
fwait
mov
mov
pusha
and
scas
push
addr16
scas
pop
xchg
jecxz
loopne
mov
mov
movs
in
xchg
or
fimul
ins
cdq
fisub
ins
lahf
scas
push
stc
push
int3
inc
inc
sub
or
pop
mov
js
xor
and
leave
in
fimul
sub
test
cmp
int3
aaa
enter
test
inc
ret
sbb
inc
or
pop
xchg
inc
push
cs
lods
or
mov
repz
out
inc
cmp
adc
ins
and
cmc
sub
or
xchg
jb
sahf
cmp
fxch
and
test
int
cdq
popa
jb
mov
iret
jp
ret
cld
cmp
pop
jb
or
sub
mov
xlat
fidiv
xlat
into
pop
data16
stos
push
dec
push
adc
push
loop
jno
ret
sub
push
inc
mov
fcmovnbe
sub
call
fwait
dec
push
addr16
push
xchg
sub
fisttp
xchg
or
mov
fist
scas
jno
repz
xchg
sahf
es
adc
test
repnz
jmp
jae
fcom
or
iret
das
mov
pop
cmp
fiadd
shl
or
sub
or
ins
test
adc
or
sbb
inc
push
in
jb
stos
out
dec
mov
rcl
or
outs
pop
mov
or
jecxz
mov
fs
out
retf
xchg
jmp
mov
push
xchg
sahf
ss
and
mov
adc
inc
aaa
xlat
or
fistp
lods
or
retf
jp
int3
sub
or
shl
mov
xchg
xor
mov
or
sahf
jno
mov
push
adc
ret
test
cmp
mov
(bad)
out
fstp
fmul
scas
mov
ss
gs
out
pop
es
mov
enter
xchg
lock
dec
iret
test
les
mov
or
lods
repnz
jns
add
ror
cmps
or
sub
repz
cli
loop
sub
outs
xchg
movs
repnz
in
jns
and
sbb
imul
clc
and
xlat
hlt
jno
std
add
iret
shl
cmp
push
adc
test
das
jno
or
xchg
(bad)
jmp
daa
inc
push
sar
mov
mov
jo
sub
pop
jb
jmp
(bad)
les
das
in
add
cmps
fst
sub
inc
or
sbb
out
pmulhuw
cmc
jne
push
mov
jecxz
ret
add
cmp
scas
es
inc
pop
imul
inc
imul
fidivr
repz
lods
mov
sti
ret
loopne
ja
xor
push
cmc
out
push
out
addr16
dec
jnp
mov
push
push
dec
mov
xchg
jge
xor
ss
das
push
addr16
mov
pop
xor
repz
jp
shr
jmp
jle
icebp
pop
sub
jo
xor
pop
(bad)
stos
loope
and
sub
mov
out
dec
add
add
sub
imul
mov
sbb
pop
out
pushf
dec
xchg
and
mov
sub
popa
push
stos
pusha
sbb
js
mov
outs
push
mov
push
jle
lds
cmp
sti
arpl
mov
leave
sub
pop
stc
sbb
xor
dec
push
pop
or
fadd
add
mov
sub
push
xor
sahf
add
cld
pop
dec
repnz
(bad)
push
jbe
jo
(bad)
cli
(bad)
add
retf
jle
ja
jg
dec
es
div
mov
sbb
mov
and
lahf
ss
ds
xlat
sbb
adc
sbb
mov
inc
rcr
retf
cmp
push
cmp
out
adc
mov
ret
inc
pop
shr
pop
scas
dec
(bad)
lods
out
popa
xor
mov
ja
ret
mov
xor
push
pop
ss
scas
call
jmp
cmp
ret
push
cmp
ret
repz
add
hlt
mov
mov
jo
jp
push
das
sbb
adc
icebp
pop
jno
xchg
cld
aad
cmp
mov
pop
call
adc
jl
leave
test
push
mov
push
popa
add
fcomp
inc
imul
aas
jmp
mov
cmc
imul
pop
aad
call
xor
std
cs
jmp
imul
test
pop
cmp
push
pop
mov
test
sbb
int3
xor
fimul
ret
push
adc
jns
(bad)
fld
mov
not
test
out
out
fwait
dec
jmp
xchg
pop
jns
jns
outs
pop
inc
sti
jns
stos
sub
lock
retf
sub
(bad)
add
or
adc
in
push
loopne
mov
popf
dec
mov
or
add
xchg
or
push
ds
(bad)
call
xchg
mov
test
out
fbstp
lea
push
aad
xlat
jne
call
(bad)
loop
mov
cmp
pop
or
repnz
push
sbb
inc
loopne
push
icebp
jb
sti
pusha
jb
mov
in
push
test
dec
mov
push
jae
and
mov
sbb
sbb
xchg
ret
push
iret
mov
loope
iret
push
retf
aad
or
pop
ret
sahf
outs
lock
mov
movs
jecxz
imul
add
dec
ret
push
sub
and
in
jae
mov
cs
xor
(bad)
cmp
mov
(bad)
data16
mov
(bad)
popa
dec
pop
xchg
loopne
lods
push
push
mov
fist
and
jl
or
rol
add
sub
fisub
movs
imul
lea
mov
dec
test
dec
(bad)
push
mov
push
imul
outs
xor
out
inc
mov
not
out
lods
fcomi
lahf
cwde
(bad)
mov
shl
and
movs
and
les
adc
nop
xor
stc
ins
retf
call
pop
fs
cli
mov
mov
mov
dec
jnp
inc
rcl
call
mov
adc
in
pushf
cmp
sbb
inc
in
add
aad
loope
stos
push
pop
push
retf
sub
(bad)
jp
lock
fcomp
pop
adc
add
(bad)
sbb
jnp
retf
mov
movs
push
add
aam
mov
pop
jbe
cmp
ror
dec
int3
and
mov
sub
(bad)
pop
mov
loope
les
push
and
hlt
dec
xor
rcr
sti
test
xchg
in
mov
cdq
mov
xchg
into
rcl
outs
xor
xor
out
mov
test
test
push
cmp
scas
mov
gs
inc
aad
cmp
mov
xchg
cmp
into
(bad)
mov
repnz
neg
xor
xor
jnp
outs
jp
repnz
cmp
xchg
push
push
jg
scas
int
ins
push
popf
loope
or
stos
sbb
mov
mov
inc
stos
mov
lds
das
nop
or
mov
stos
cmp
xchg
pushf
je
push
or
sbb
jne
popf
lock
out
cmp
cmp
push
jns
pusha
xchg
pop
cmps
daa
or
xor
xchg
pop
ds
arpl
jb
jnp
outs
aaa
aad
test
adc
in
jo
add
lods
pop
push
add
fisubr
xchg
call
mov
repnz
or
test
xchg
leave
xchg
lahf
jl
scas
adc
xchg
cs
adc
xchg
cwde
push
jp
icebp
and
xor
jl
aaa
jne
ins
cld
ins
cwde
push
fstp
xchg
mov
sti
sar
out
in
imul
call
test
jnp
push
xor
pop
and
and
leave
xor
sub
movs
mov
adc
lods
jp
std
sbb
adc
outs
xor
call
mov
ret
jmp
lea
mov
or
ins
adc
ds
je
loopne
sub
dec
jno
out
mov
imul
enter
and
jp
addps
dec
cli
pop
ret
jmp
dec
xor
jp
jns
ins
xor
inc
je
and
pop
mov
push
test
adc
adc
pop
push
fiadd
test
pop
or
sahf
ret
(bad)
adc
or
neg
mov
out
cmp
jle
mov
mov
push
adc
and
pop
mov
pop
sbb
fisttp
ins
aad
out
sub
mov
rcl
or
out
sub
cmp
inc
shl
cld
pusha
add
adc
loopne
sbb
dec
mov
es
or
fmul
push
in
pop
xchg
ror
dec
cmc
xchg
push
inc
(bad)
loope
bound
push
cmp
push
ret
dec
push
mov
sub
lahf
loop
jmp
leave
jle
dec
adc
shr
fisubr
lods
adc
or
ficomp
xor
fwait
add
(bad)
in
mov
lods
xor
rol
loopne
adc
enter
icebp
cwde
scas
lods
das
iret
aaa
pushf
sbb
dec
in
mov
popf
sub
jmp
sbb
cwde
jnp
outs
je
cmp
retf
mov
mov
aas
in
mov
call
lock
fyl2x
dec
or
mov
lods
xchg
dec
fimul
push
inc
cmp
ja
aam
cmps
repz
fchs
and
inc
xchg
pop
pop
mov
mov
sbb
inc
popf
jne
dec
in
jge
shl
aaa
xor
inc
lods
sub
adc
scas
rcl
fwait
stos
rcr
pusha
(bad)
or
xchg
(bad)
lds
pop
(bad)
jmp
pushf
push
imul
movs
ss
cmp
jns
dec
pop
jecxz
(bad)
bound
test
inc
push
add
bound
iret
pop
push
push
stos
das
call
mov
jne
test
mov
test
(bad)
fnstcw
dec
mov
shl
fiadd
jns
xchg
sahf
leave
cdq
call
ret
outs
cmps
movs
cdq
xchg
add
clc
sti
int
xor
and
xchg
test
mov
out
xor
nop
shl
test
in
ss
rcl
or
pushf
xor
addr16
xchg
xchg
push
dec
xchg
rcr
sub
xchg
je
xlat
leave
xchg
gs
fistp
fadd
jge
mov
stos
mov
in
mov
mov
jge
push
inc
iret
outs
mov
hlt
mov
inc
ja
jno
cmps
pushf
popf
out
fwait
(bad)
and
push
cmp
xchg
sbb
push
jge
inc
push
in
aad
cmc
inc
cs
inc
inc
add
mov
cmp
adc
addr16
fwait
sbb
dec
lds
fdivr
xchg
jne
ds
sub
stc
mov
mov
adc
sub
aad
pusha
dec
push
popf
dec
push
mov
sahf
sub
sub
pop
movs
inc
push
dec
inc
icebp
xlat
fdivr
inc
outs
mov
jge
jmp
mov
lock
jge
jns
and
inc
sub
adc
lahf
je
fsubr
mov
fwait
aam
ret
mov
pusha
push
jae
pop
gs
add
sub
aas
pusha
out
mov
popf
inc
dec
dec
xchg
sub
pop
xchg
mov
pop
inc
shl
jle
sub
or
sbb
cmovle
lea
xchg
pushf
(bad)
loop
and
xchg
in
mov
icebp
add
mov
mov
sub
mov
ds
dec
jne
lds
inc
mov
pop
ds
or
xlat
arpl
pusha
or
cmps
(bad)
sbb
xchg
jecxz
xor
pop
mov
outs
scas
lods
out
cmp
sbb
xor
add
test
imul
or
fwait
xor
bswap
cmps
cmc
enter
mov
loop
pop
adc
or
cs
retf
jo
je
mov
add
sbb
mov
xor
out
into
push
es
ins
inc
data16
aad
scas
scas
xchg
pop
shr
add
push
mov
add
dec
adc
jp
add
inc
xor
fdiv
fisub
hlt
je
jns
test
pop
arpl
or
cdq
ret
pop
jmp
hlt
imul
ret
xor
imul
dec
cmp
or
jl
xor
mov
sbb
mov
xor
ficomp
(bad)
cmp
scas
aad
jle
lods
rol
xchg
aas
ficom
neg
mov
and
pop
cli
popa
mov
pop
push
adc
icebp
(bad)
enter
les
cmps
retf
leave
adc
xor
xor
dec
cli
enter
or
jl
int3
test
pop
sbb
dec
mov
adc
inc
lahf
sbb
idiv
aam
aas
cmp
clc
test
and
imul
enter
enter
pop
mov
push
lods
(bad)
in
mov
imul
jle
and
push
ret
(bad)
jns
mov
pop
stos
aam
mov
mov
fbstp
scas
out
jns
jbe
retf
fistp
in
xchg
std
mov
ins
pop
(bad)
aaa
jne
push
ja
inc
scas
lods
adc
gs
sub
rcr
jg
mov
jmp
stos
sbb
aad
fild
fild
mov
push
data16
mov
mov
arpl
leave
dec
ja
pop
add
call
cmp
fidiv
cmp
dec
push
aas
inc
out
movs
imul
mov
adc
pop
push
in
dec
sub
mov
add
mov
cmp
push
dec
jb
call
rcr
jnp
(bad)
add
push
es
fdiv
lahf
enter
jle
loop
into
into
inc
imul
sub
imul
in
push
jp
mov
adc
mov
bound
mov
jg
dec
adc
out
rcr
pop
or
sahf
fadd
cli
pop
or
sbb
jp
cmc
call
pop
mov
test
je
inc
inc
loope
out
lahf
call
inc
xchg
sub
cmps
jae
xsavec
imul
mov
es
std
push
rcl
inc
push
dec
dec
out
cs
cmp
mov
inc
sub
mov
or
leave
pop
xor
mov
sub
xor
add
in
xchg
cmp
out
fwait
shr
sar
cmp
(bad)
in
jo
arpl
or
sbb
shl
and
mov
or
mov
dec
adc
int
sub
fld
cmp
in
mov
test
repz
(bad)
jnp
pop
jmp
adc
imul
lds
les
aam
test
push
mov
add
xor
jbe
push
movs
imul
xchg
imul
movs
iret
call
loop
mov
gs
sbb
mov
dec
in
aas
xchg
adc
xchg
sbb
leave
inc
loopne
and
sti
(bad)
loopne
push
mov
dec
or
out
fidivr
lock
repz
sbb
xor
les
jmp
inc
push
sub
xchg
sbb
dec
jl
aaa
add
lea
(bad)
xchg
bound
les
cmps
add
add
icebp
fwait
sbb
sti
push
mov
adc
lock
shl
jbe
jne
cmp
nop
cmps
std
scas
add
fdiv
push
jp
mov
test
inc
call
sub
fadd
and
ret
dec
cld
sbb
mov
int3
mov
add
cmp
push
pop
jg
or
mov
sub
scas
and
outs
rcr
(bad)
cmps
ds
imul
jne
fs
mov
pop
sbb
ins
and
std
push
out
push
rcl
cmp
or
fidivr
(bad)
div
rcr
(bad)
add
call
ja
fisttp
jns
and
xchg
or
mov
call
cli
repz
shl
or
push
lock
mov
jno
mov
ins
mov
retf
imul
movs
or
sbb
mov
adc
mov
test
jle
sti
int
dec
xchg
and
pop
mov
mov
and
ror
adc
or
repnz
xchg
sub
repnz
sbb
xor
das
ins
enter
test
cmp
cli
(bad)
add
clc
mov
dec
gs
test
fist
mov
inc
mov
pushf
dec
sub
sti
dec
push
xor
sbb
jecxz
sub
push
rcl
push
sub
or
and
shl
sbb
cmp
fwait
cmps
jo
add
pop
jb
(bad)
ja
and
mov
std
les
xor
jno
and
and
imul
inc
lahf
inc
push
call
pop
ins
jle
nop
mov
adc
mov
mov
hlt
scas
dec
jg
sbb
ins
inc
mov
popa
adc
sbb
sub
cdq
push
test
arpl
or
sbb
shr
gs
dec
cld
mov
xchg
cmp
test
aaa
pusha
cld
dec
fldl2t
mov
pop
dec
popa
pop
add
or
out
ins
dec
in
sub
int
stc
push
xlat
push
push
add
dec
mov
and
jl
leave
enter
leave
ret
jbe
rcr
push
in
ds
add
arpl
xchg
mov
retf
and
pusha
xchg
xchg
dec
stos
xor
xchg
cmp
scas
xchg
mov
sbb
sahf
clc
xlat
ret
push
or
jbe
push
data16
jg
das
fstp
in
dec
push
cmp
in
fldenv
dec
(bad)
int3
and
scas
mov
sub
mov
repnz
fmul
cdq
or
push
ds
pusha
add
xor
inc
sbb
push
pop
pop
retw
add
fnstcw
and
adc
xchg
jbe
int
ds
cld
aam
add
add
mov
test
cmp
movs
movs
mov
scas
pop
or
cld
pop
stos
cmp
push
push
push
(bad)
fadd
call
inc
mov
add
jl
mov
fucom
or
sub
jge
lds
sub
mov
sub
ret
cmc
dec
std
jge
adc
cmp
inc
add
dec
aaa
dec
in
mov
mov
arpl
ret
inc
fild
inc
mov
sbb
(bad)
xor
and
cwde
mov
aas
retf
imul
add
jno
mov
js
leave
ret
inc
scas
loopne
call
pop
adc
lods
sub
aam
mov
in
sub
push
pop
or
cmp
cmp
push
mov
jnp
in
fidivr
mov
gs
push
xchg
stos
dec
movs
scas
ss
fs
fisubr
lahf
gs
jne
shl
pop
xchg
pop
repz
mov
xchg
add
jecxz
jno
cmp
inc
jnp
(bad)
push
or
add
fst
mov
mov
neg
stc
out
in
or
out
mov
sub
add
in
jbe
repz
fwait
xor
mov
scas
sbb
mov
arpl
and
test
je
aaa
lods
add
daa
iret
mov
sub
adc
push
push
icebp
mov
into
aad
lock
mov
aad
jmp
mov
push
mov
mov
sar
cmc
clc
push
test
loopne
inc
enter
enter
sti
sahf
mov
jno
(bad)
xchg
call
addr16
sub
inc
inc
pop
and
ret
jmp
outs
jg
ss
jmp
loop
out
and
add
lods
arpl
push
ins
mov
jnp
sbb
int
test
xlat
out
sbb
hlt
into
stc
pop
aas
rcr
jecxz
stc
mov
xchg
clc
xchg
xor
inc
push
in
out
cmp
scas
xchg
test
pop
xor
ss
xlat
mov
push
inc
clc
std
add
(bad)
inc
mov
clc
in
mov
neg
fnsave
xor
pop
lds
cmc
jns
sbb
(bad)
jg
mov
or
mov
xchg
out
add
data16
leave
xchg
push
test
or
xchg
loopne
jae
push
push
xchg
mov
pop
(bad)
rol
sahf
jmp
pop
inc
into
jne
xor
jo
pop
mov
mov
sub
and
fistp
adc
sub
clc
xor
and
mov
and
push
adc
bound
in
out
mov
jb
int3
push
daa
lods
push
out
cdq
(bad)
loope
push
out
jnp
stos
adc
out
sub
mov
daa
mov
or
sub
sahf
cmp
lahf
sahf
icebp
adc
adc
or
lods
popf
cs
inc
test
enter
push
lock
adc
fwait
(bad)
pop
jmp
adc
lahf
imul
push
cmp
fld
js
dec
mov
adc
rol
leave
pop
sub
or
repz
cmp
or
shl
aam
stos
imul
in
lds
push
xor
int
or
stc
fdiv
or
pop
fs
jle
arpl
jge
retf
fwait
(bad)
pop
loopne
leave
mov
stos
push
sahf
adc
adc
mov
add
movs
mov
ret
and
dec
fsub
popf
cli
cmp
int
xchg
popa
ja
xor
and
test
cmc
test
sbb
pop
xor
push
inc
cmps
mov
repnz
sar
test
or
in
lahf
xor
xchg
sti
xlat
sub
cmp
pop
es
push
sub
cmp
mov
pop
enter
adc
inc
cmp
mov
pop
je
(bad)
ficomp
jmp
outs
jmp
cmp
fs
sbb
xchg
es
mov
mov
push
pop
add
add
iret
mov
repnz
xor
jmp
push
(bad)
in
xchg
pop
mov
or
lock
xchg
rcr
and
out
mov
(bad)
sbb
jns
sub
sub
xor
in
cmps
xrelease
fmul
and
mov
push
(bad)
dec
push
fadd
scas
aam
xchg
lods
mov
pop
ds
loop
mov
fld
pop
fidiv
cwde
movnti
ss
inc
mov
sbb
fwait
cmps
adc
push
pushf
arpl
adc
xchg
pop
add
arpl
loop
outs
out
retf
inc
pop
daa
add
cmps
mov
adc
movs
mov
or
outs
dec
mov
mov
data16
inc
sub
and
cdq
jmp
push
mov
push
push
sub
xor
mov
fidiv
mov
aad
or
std
jl
mov
div
mov
into
dec
stos
loopne
pop
int
ret
push
jo
xchg
(bad)
les
stc
pop
pop
icebp
shr
sar
ss
mov
call
or
mov
in
sbb
sbb
pop
loope
cmp
push
sbb
or
push
(bad)
dec
pop
enter
cld
mov
(bad)
mov
mov
push
dec
push
dec
adc
mov
repz
mov
sbb
inc
stc
(bad)
push
in
mov
cmp
add
add
push
fwait
test
and
jmp
aas
push
test
or
and
pop
stos
nop
lods
iret
sub
mov
scas
push
pop
lods
fs
cmp
fld
cmps
cld
and
xor
lea
je
in
ror
imul
out
sahf
sbb
push
push
test
xchg
(bad)
into
sub
ret
dec
(bad)
cmps
jo
sbb
and
xor
cmp
pusha
dec
pushf
ss
mov
sub
out
xor
dec
push
fwait
and
out
sub
inc
lahf
lds
or
out
inc
(bad)
push
aaa
sub
cld
dec
inc
push
mov
adc
ja
adc
call
jle
mov
int3
xor
aad
mov
add
adc
dec
ret
mov
fistp
sbb
arpl
scas
add
cs
in
push
lahf
cmps
enter
pushf
lds
loope
xchg
pop
pop
mov
mov
scas
cmp
daa
pushf
push
jmp
icebp
push
or
int
test
lock
les
and
pop
or
loop
out
xor
mov
or
mov
and
xchg
jo
or
in
call
jmp
mov
jo
inc
add
ror
jmp
mov
and
adc
mov
les
sub
aam
cld
imul
pop
stc
sub
data16
jo
stc
jmp
test
jl
adc
test
jge
ds
cmp
addr16
push
push
retf
pop
jo
dec
or
pop
stc
cld
mov
and
sub
mov
cmp
clc
add
rcr
imul
hlt
call
adc
loopne
jns
sbb
data16
add
(bad)
mov
cmp
mov
aad
jo
pop
mov
jno
retf
pop
xor
mov
jg
lahf
sbb
inc
imul
cmps
ss
jbe
daa
jge
popf
sahf
rcl
jmp
ret
mov
sar
mov
(bad)
pop
lahf
outs
add
loop
dec
pop
das
cld
das
inc
xchg
sti
dec
test
rcr
hlt
(bad)
jp
or
xor
repnz
sbb
xor
cmp
int3
sub
lock
int
in
mov
mov
and
test
xchg
in
hlt
into
xor
mov
into
js
mul
add
rcr
scas
adc
xlat
mov
jg
sub
gs
inc
mov
mov
xchg
jbe
mov
gs
mov
add
jo
arpl
stc
fadd
test
ins
add
adc
test
or
(bad)
out
pusha
iret
dec
arpl
loope
xchg
mov
clc
xchg
jp
xchg
and
popa
fadd
pop
ss
xor
outs
sub
dec
cld
dec
mov
inc
ja
retf
adc
mov
test
sbb
iret
rol
sbb
fwait
cmp
xor
mov
sbb
sbb
adc
pop
ins
and
out
je
jmp
dec
or
ins
mov
and
cld
bound
jnp
(bad)
jp
pop
leave
lea
nop
mov
mov
push
cmp
clc
lods
and
jo
test
inc
cmp
add
rol
mov
loope
and
fsub
adc
push
jge
push
mov
mov
jl
mov
mov
(bad)
xchg
pusha
inc
mov
mov
mov
mov
(bad)
push
inc
jns
aas
gs
ret
sar
(bad)
shl
je
outs
and
mov
or
jmp
adc
push
mov
mov
jl
or
loope
scas
loopne
mov
sahf
jae
aad
mov
or
in
aad
fstp
cmc
sar
popa
dec
inc
fadd
addr16
add
inc
xchg
mov
in
dec
popa
lods
call
add
fadd
and
jo
mov
sar
pop
rcr
inc
dec
arpl
dec
and
sub
aam
push
jbe
imul
inc
clc
mov
xchg
xchg
ins
jne
and
sub
pop
or
stos
dec
xor
(bad)
into
jne
outs
js
ret
cdq
and
push
lds
mov
bnd
mul
fwait
jle
dec
add
cli
es
cmp
jecxz
int
outs
aam
ins
icebp
mov
ss
daa
mov
pop
and
loop
(bad)
and
adc
xor
outs
repz
pop
ret
or
mov
ja
in
lock
inc
xor
cwde
fistp
sbb
sbb
call
and
rol
add
inc
bound
in
xchg
pop
sub
outs
mov
cmp
inc
(bad)
fdiv
repnz
ror
leave
jmp
sbb
scas
sub
leave
gs
rcl
sar
fcmovbe
enter
xor
dec
adc
jmp
sbb
cdq
push
fsub
dec
xlat
outs
ret
int
aad
cmp
rcr
mov
(bad)
out
outs
xchg
ret
pop
inc
cld
loopne
addr16
dec
cmp
mov
sub
xchg
ins
movs
mov
jle
pop
retf
(bad)
push
sub
js
mov
push
xchg
int3
adc
ret
pop
pop
cmc
xchg
cmp
push
retf
dec
(bad)
fstp
pop
and
xchg
(bad)
fimul
add
fld
push
sbb
pop
aaa
dec
cmp
scas
enter
repnz
ins
xchg
push
jo
and
jecxz
jge
mov
cmp
cmps
cmp
lods
cli
pop
or
xchg
pop
xchg
cli
call
(bad)
pop
std
xchg
sub
clc
dec
pop
and
cmp
shr
and
imul
(bad)
in
iret
pop
xchg
xchg
retf
mov
adc
movs
(bad)
jmp
mov
adc
lahf
lahf
dec
imul
add
jbe
mov
mov
repz
sbb
mov
dec
sbb
movs
or
pop
mov
mov
jge
stos
push
nop
cmp
sub
sbb
mov
mov
mov
jne
jno
inc
push
fst
retf
test
icebp
sbb
sbb
lods
in
xor
fild
loope
sti
mov
jbe
lds
cmp
mov
xchg
push
pop
int3
repz
mov
and
daa
push
inc
jo
(bad)
mov
dec
inc
mov
ins
sub
xchg
movs
mov
inc
mov
pop
in
sar
or
addr16
in
jmp
jg
inc
pop
adc
xor
fsub
add
add
mov
dec
(bad)
push
inc
cmp
sahf
and
inc
outs
pop
push
push
mov
sbb
das
add
ror
inc
xchg
adc
ret
enter
enter
pop
pop
ror
xor
xchg
xchg
(bad)
cli
xlat
adc
jl
leave
xchg
test
mov
shl
lods
jne
int3
dec
test
cmp
js
loope
jmp
adc
int3
neg
outs
je
mov
pop
aam
jnp
and
les
cmovp
sbb
in
inc
ds
jne
stos
dec
cmps
inc
outs
aaa
div
add
add
ja
test
and
pop
jg
xchg
mov
ret
movs
mov
lods
push
add
mov
jmp
call
sub
clc
push
aam
xchg
dec
and
jo
sub
push
es
pop
in
mov
mov
jae
mov
mov
and
xor
mov
rol
inc
rcl
idiv
in
lods
mov
ins
xor
and
cmp
dec
push
inc
push
shl
mov
dec
push
xchg
lds
mov
addr16
(bad)
mov
mov
sbb
add
nop
cmp
dec
jecxz
into
rcr
popf
jg
cmps
pop
(bad)
imul
iret
xchg
push
popa
vpxor
pop
adc
xchg
test
sbb
xor
stos
dec
lock
(bad)
xor
xchg
and
mov
leave
mov
iret
fdivr
stos
or
pop
push
jp
pop
mov
push
jae
or
call
dec
jmp
icebp
and
pop
xor
popa
ffreep
mov
or
inc
aam
out
fsubr
and
xchg
sbb
shl
retf
mov
jmp
jmp
dec
imul
and
pop
test
push
icebp
ds
xlat
ficomp
and
out
ds
lahf
(bad)
dec
(bad)
and
pushf
sub
dec
adc
loop
mov
cmp
or
jmp
icebp
imul
mov
(bad)
xor
mov
mov
cmp
movs
arpl
inc
es
jno
cli
sar
cwde
retf
inc
pusha
ror
mov
dec
mov
inc
pop
cmc
retf
movs
fdivrp
xchg
inc
push
iret
hlt
ja
dec
ja
lahf
jne
out
lock
bound
lahf
sbb
rcl
pushf
retf
test
(bad)
ror
shl
push
out
fbld
push
xchg
into
in
and
inc
xor
cmps
or
(bad)
mul
xchg
(bad)
rol
cmps
pop
repz
mov
xchg
sub
arpl
fisub
xchg
mov
add
sbb
fnstenv
in
cdq
call
mov
jmp
aam
test
push
sub
sub
jge
add
and
loopne
call
(bad)
fdivr
add
aam
xchg
jp
je
ins
rcr
dec
cmp
dec
add
outs
pop
mov
fnstsw
sbb
pushf
(bad)
mov
cli
pop
sub
test
pop
sbb
push
fidivr
call
dec
xor
jb
add
fldcw
jo
addr16
jo
ins
(bad)
out
dec
adc
pusha
imul
push
inc
retf
and
in
jbe
sub
rcr
repz
imul
das
lahf
aam
popf
sub
aam
or
ins
push
arpl
jns
xor
rcr
retf
inc
es
xor
push
(bad)
mov
jb
ret
xor
jbe
dec
fisub
cmp
fs
test
pop
daa
stos
daa
in
or
icebp
jo
pusha
dec
push
mov
shl
lahf
xor
(bad)
rcr
outs
xor
stos
xchg
ins
cmp
ret
sub
mov
imul
xchg
xor
or
imul
jg
or
std
jg
movd
loope
xor
loop
push
es
mov
shl
les
in
xchg
leave
jnp
sti
push
mov
mov
fs
outs
std
data16
(bad)
jmp
jl
cli
stos
and
inc
rcl
repz
outs
fidivr
or
sub
es
mov
stc
fidiv
push
cmp
shl
rol
xchg
dec
frstor
cmp
scas
or
mov
push
loop
dec
mov
lahf
stos
cmp
mov
cmp
jl
into
mov
scas
aaa
push
or
(bad)
cmc
push
retf
and
shld
lds
jge
sbb
mov
add
xchg
in
sbb
xchg
addr16
or
xor
mov
inc
fst
push
imul
dec
pop
test
xchg
fcmovu
std
push
jecxz
jne
xchg
xchg
dec
sbb
jns
cmp
sub
jnp
push
xlat
cmc
clc
sub
(bad)
cdq
das
(bad)
hlt
jmp
mov
into
outs
movs
mov
out
mov
mov
fstp
adc
add
fs
fisttp
arpl
shrd
sbb
loope
aas
leave
mov
adc
add
add
dec
jnp
cmp
std
fiadd
inc
fcom
sub
stos
out
nop
test
mov
xchg
gs
fsub
(bad)
rcl
or
xchg
dec
inc
cli
xor
enter
sbb
cmps
inc
jbe
push
push
push
(bad)
mov
retf
mov
mov
and
ficomp
pop
sub
and
in
repnz
dec
mov
js
pusha
clc
mov
outs
mov
(bad)
inc
jmp
popa
push
jb
pop
js
out
push
int3
stos
mov
inc
mov
cwde
adc
test
and
div
jp
mov
jmp
add
add
and
cdq
xor
ja
cmps
push
aam
ins
enter
add
jo
jae
out
vcomiss
push
mov
in
cmps
shl
ins
inc
div
push
leave
mov
enter
push
call
mov
test
call
test
xchg
bound
dec
mov
stc
hlt
inc
xchg
pop
mov
cmp
pop
mov
lea
push
xor
out
mov
jmp
ja
mov
mul
xor
loopne
pop
clc
mov
jnp
scas
or
add
jne
lahf
jnp
xchg
arpl
daa
mov
xchg
jmp
dec
pop
pop
dec
fld
push
js
fisubr
jg
xchg
fld
sub
pop
mov
out
mov
add
ret
je
sub
dec
dec
mov
or
and
sti
sahf
dec
or
add
xchg
jl
and
cmps
movs
(bad)
xor
out
push
inc
rcl
fistp
pop
inc
lea
or
sahf
mov
sbb
sbb
xor
cmp
iret
cmp
adc
mov
fiadd
push
jae
leave
jb
push
sub
jmp
fwait
mov
lock
adc
xor
pop
xchg
sub
(bad)
cmp
or
and
fmul
jecxz
push
icebp
cmp
daa
xchg
enter
ins
dec
adc
aas
lods
dec
xor
pop
pusha
push
push
fucom
cmp
dec
xchg
push
fdivr
pop
(bad)
inc
adc
push
sti
pop
or
mov
lea
cli
pop
mov
inc
dec
jg
ins
retf
jle
cmps
leave
in
xor
pushf
repnz
or
jno
lods
add
(bad)
mov
mov
push
pop
pop
pop
adc
cmp
pop
add
mov
or
scas
sar
retf
fdivr
popa
push
inc
and
test
adc
mov
sti
shl
mov
loop
jecxz
mov
out
sbb
add
and
add
bound
jg
nop
mov
movs
ds
push
dec
sub
out
cmp
jmp
mov
ret
add
sub
cli
jle
test
mov
pop
in
and
mov
pop
mul
test
or
pop
enter
inc
mov
jp
mov
or
out
adc
loopne
dec
lahf
ret
mul
mov
icebp
mul
and
ret
xchg
mov
xchg
xor
inc
int
adc
add
adc
jl
add
imul
lea
jle
xchg
push
int3
cmp
cmps
shl
jl
and
int
icebp
loope
rcl
gs
lds
inc
lea
repz
push
int
jns
stc
push
dec
dec
aas
pop
xchg
mov
fimul
out
shl
or
sub
adc
adc
dec
sar
jbe
arpl
test
jge
add
fmul
sbb
cmps
jo
mov
lods
out
xchg
dec
js
xchg
jnp
cmps
aad
xor
cmp
inc
mov
or
ins
fwait
enter
xor
daa
addr16
div
inc
mov
jg
retf
dec
pop
fs
mov
ss
cmp
movs
xchg
xor
pop
jnp
lods
addr16
sbb
sub
ins
mov
and
adc
xchg
jle
pop
mov
mov
outs
mov
adc
pop
jns
test
in
add
push
sub
jne
neg
jmp
mov
jp
mov
or
in
out
in
sub
mov
inc
movs
and
sub
sub
fmul
xchg
mov
inc
arpl
int
inc
cdq
cmp
xor
add
ss
sub
fnstcw
repz
or
sbb
and
stc
(bad)
hlt
ret
add
adc
push
push
movs
push
push
out
jnp
sub
(bad)
pop
fs
stos
in
push
lock
pop
shl
pushf
and
jo
push
xchg
imul
dec
loope
and
and
inc
mov
addr16
ins
jge
pop
scas
lahf
or
cmp
mov
jbe
out
mov
jge
dec
icebp
xchg
dec
sbb
ret
cmp
inc
iret
or
mov
pop
(bad)
call
call
or
gs
jmp
test
mov
xchg
mov
retf
push
cmps
imul
imul
jmp
mov
mov
pop
clc
mov
pusha
dec
fcom
(bad)
jecxz
addr16
jecxz
and
fcmovb
fldenv
or
movs
rcl
cmp
aas
jb
retf
pop
(bad)
and
jo
gs
pop
loopne
add
outs
imul
push
and
aam
sbb
fcmovnb
pop
rol
fdiv
lods
inc
sub
push
adc
pop
movs
push
cld
lds
jmp
das
cdq
sti
loopne
mov
sub
std
popf
push
gs
adc
outs
mov
mov
sub
mov
aaa
rcr
ds
fisub
loope
xchg
sbb
jae
push
cmp
gs
pop
xor
pop
mov
test
addr16
int
lahf
inc
int
cli
sub
lods
inc
adc
cld
sbb
xchg
aam
mov
jp
data16
push
mov
int
cmc
jnp
xchg
dec
ficomp
push
dec
lds
pushf
rcl
inc
xchg
dec
sub
dec
pushf
xor
aaa
imul
sub
push
pop
xor
rol
mov
ins
jge
lods
xchg
ins
and
jp
xor
inc
push
jb
(bad)
xor
ficom
mov
clc
test
push
sub
pop
neg
in
repnz
test
ins
mov
out
sub
add
outs
pop
pushf
mov
fwait
mov
and
push
fpatan
mov
sbb
ins
xchg
fcomp
pop
and
push
(bad)
das
xchg
(bad)
sbb
ins
scas
es
es
jbe
xor
dec
xchg
sbb
jge
dec
out
xor
jnp
ret
xchg
dec
push
aad
xchg
fld
mov
push
jmp
ror
cmp
push
nop
dec
fsubr
clc
stos
std
push
lods
push
push
iret
push
push
pop
jbe
mov
push
fistp
cli
xchg
in
jecxz
cli
sub
in
repz
bound
rcl
fldenv
jne
adc
es
lea
scas
leave
out
pop
mov
daa
in
movs
call
rol
mov
retf
xor
clc
inc
sbb
test
pop
jb
repz
fimul
das
jmp
idiv
clc
xor
cmp
pop
jp
mov
inc
mov
adc
fisttp
cdq
fwait
mov
or
mov
add
hlt
cmps
sbb
int3
dec
in
sub
pop
arpl
mov
mov
mov
pop
add
stos
arpl
push
pusha
pop
fs
xor
mov
shl
ss
movs
fdivrp
lock
push
dec
cld
stos
sbb
arpl
fist
pop
mov
not
ret
inc
xchg
sbb
data16
ret
dec
xor
xor
jle
fadd
xchg
in
sahf
lods
xchg
jae
add
xchg
in
popf
cmc
aas
pop
mov
add
lods
movs
or
in
int
out
(bad)
enter
stc
pop
lods
mov
push
add
or
loop
stos
mov
repz
popa
aaa
jns
shr
inc
enter
into
iret
pusha
xor
movs
mov
xchg
cmp
push
imul
pop
int3
daa
rcl
stc
fs
lods
mov
nop
jns
enter
std
add
mov
inc
inc
jmp
cdq
xchg
mov
idiv
pop
mov
pusha
sahf
sbb
ja
clc
push
stos
jmp
out
sti
xor
lock
repnz
xchg
lods
mov
or
xchg
fsub
dec
cmp
cmp
fst
popa
mov
int3
icebp
lea
cmps
pusha
(bad)
dec
stos
movs
(bad)
test
jae
cwde
pop
cmc
sub
(bad)
sbb
cmp
rol
in
out
sar
adc
test
(bad)
std
popf
movs
repz
xchg
mov
in
call
jns
xchg
mov
in
shl
jbe
and
xor
setnp
xor
int
in
or
out
jp
jle
imul
mov
cmp
xchg
or
jmp
dec
mov
mov
jns
mov
xchg
cmp
push
mov
xor
cdq
test
sub
xchg
mov
ficomp
jl
push
inc
push
sbb
sbb
repnz
jmp
mov
push
adc
pop
mov
adc
xchg
add
push
cmp
push
or
or
in
mov
das
adc
loop
inc
jecxz
div
popf
jno
mov
and
sub
popa
adc
add
(bad)
mov
in
jg
inc
mov
fild
sbb
stos
sahf
sbb
sbb
adc
fisubr
cmp
xchg
loop
aam
out
mov
mov
dec
dec
or
lods
push
push
test
push
and
addr16
loope
fidiv
std
sbb
jb
lock
add
movs
nop
popa
in
jl
jbe
adc
xor
shl
(bad)
fnsave
dec
jo
mov
mov
outs
mov
pop
ss
xchg
mov
jns
call
inc
and
scas
sub
inc
pop
das
mov
icebp
fwait
xchg
les
pop
movs
and
pop
fild
ror
sub
outs
enter
mov
mov
sub
cmp
mov
sbb
mov
ins
jmp
cmc
push
ds
pop
test
add
dec
pop
inc
push
je
mov
mov
or
mov
mov
or
repnz
push
or
adc
in
mov
rcl
test
and
xchg
jb
stos
test
js
add
or
je
lahf
aam
jp
xchg
jne
ja
add
xor
into
pop
sbb
jg
sbb
outs
add
test
push
pop
nop
leave
icebp
xchg
fiadd
jl
fild
cdq
addr16
fwait
cwde
adc
(bad)
loop
sti
sti
daa
inc
xchg
dec
idiv
(bad)
(bad)
jne
inc
ficomp
push
ret
inc
stos
mov
or
xchg
mov
ret
imul
add
xor
das
stos
ja
sub
iret
mov
call
adc
test
lahf
ss
fld
mov
das
sbb
push
push
sbb
test
and
cld
or
mov
sti
out
xchg
aas
pop
sub
or
aad
push
aam
fsubr
add
adc
(bad)
fstp
cdq
add
and
pop
mov
xchg
les
retf
adc
movs
repz
jnp
dec
or
imul
jbe
out
pop
cmp
aad
fwait
dec
mov
cli
or
repz
mov
cmp
fimul
xchg
fild
mov
out
ror
jle
fs
inc
mov
xchg
lahf
(bad)
or
fs
mov
xor
dec
ds
mov
daa
dec
dec
ss
inc
dec
cmp
arpl
cmc
aad
sbb
dec
jns
mov
jne
(bad)
or
mov
add
in
dec
adc
fnstenv
cmp
bound
cmp
jge
ds
dec
inc
inc
sbb
pop
popa
outs
mov
inc
mov
fwait
idiv
outs
xor
and
mov
jle
mov
mov
and
inc
xchg
leave
sbb
add
mov
(bad)
pop
leave
test
(bad)
or
lea
js
push
adc
ins
dec
xor
sub
repz
jbe
js
pusha
add
mov
add
mov
push
movs
movs
cmp
es
jmp
iret
push
addr16
mov
repnz
dec
mov
movs
or
xor
pusha
inc
pop
fist
jp
adc
xchg
push
add
pop
test
mov
movs
mov
lods
in
push
test
adc
into
movs
loopne
and
mov
fucom
ins
outs
rol
lds
pushf
lahf
jnp
outs
or
pop
lods
les
shl
cld
lahf
cmp
call
lea
mov
jo
mov
call
pop
ret
sub
mov
mov
retf
add
jb
sub
inc
icebp
mov
je
adc
rcr
or
shl
and
sub
stc
jb
icebp
cmp
leave
lods
mov
mov
(bad)
mov
mov
std
dec
push
adc
sbb
lock
fbstp
xchg
fisub
sbb
mov
lds
gs
fs
imul
cmp
clc
dec
push
jmp
in
dec
pop
sbb
push
sub
inc
fs
adc
in
lahf
push
xor
mov
sub
pop
xor
xchg
cwde
or
push
lds
mov
ins
lock
jae
out
sbb
jne
enter
into
(bad)
aad
in
pop
push
mov
dec
imul
pushf
xchg
fdiv
xchg
ins
fwait
lods
iret
xor
lahf
adc
xor
jmp
sti
jge
shr
bound
into
xchg
pushf
test
or
sbb
rcr
jl
retf
and
cmp
in
push
cmp
cmp
push
jae
mov
nop
dec
aas
mov
xlat
sbb
dec
pop
mov
inc
pop
(bad)
cli
xchg
loop
sbb
pop
pop
mov
push
xor
in
mov
cs
lahf
mov
lods
stos
dec
les
adc
push
add
nop
mov
jge
js
test
mov
push
mov
jno
scas
xor
mov
jmp
outs
scas
iret
mov
sub
sub
in
mov
scas
es
dec
sti
movs
inc
pop
xchg
pop
push
mov
div
push
scas
pop
add
cmp
or
cmc
add
sti
dec
into
jle
pop
cmp
mov
or
ja
inc
xor
(bad)
xchg
inc
push
add
jmp
icebp
jae
or
inc
xor
xchg
(bad)
rol
fnstcw
mov
pop
and
aam
mov
cmp
mov
jmp
add
xchg
(bad)
push
icebp
add
stos
or
mov
ins
sbb
lock
stos
sahf
or
repnz
jmp
fs
cmc
pop
shl
jmp
rcl
mov
cmp
pop
cmp
das
jb
and
nop
int
xchg
jp
test
push
sub
mov
fdiv
pop
sar
sbb
leave
adc
test
jle
movd
or
mov
(bad)
aad
add
pop
lea
(bad)
push
mov
xchg
fistp
push
out
sti
cmps
fnstsw
dec
fist
sub
xchg
or
add
rcr
xchg
jae
cmp
sbb
js
popf
dec
je
movs
enter
mov
repz
jae
sub
int3
mov
pop
mov
add
leave
add
jnp
dec
ins
lods
aad
or
iret
nop
add
jb
mov
xor
xlat
xchg
inc
mov
popf
dec
daa
mov
pop
mov
cwde
(bad)
cld
or
add
sbb
sbb
or
jge
aas
nop
xchg
push
arpl
push
cmp
dec
int3
push
outs
push
scas
retf
pop
adc
aam
lock
cmp
mov
xchg
lahf
mov
cmps
outs
pop
jge
sbb
test
test
jb
(bad)
call
push
test
rcl
cmp
push
cmp
cmp
adc
in
adc
arpl
fstp
xchg
xchg
inc
mov
adc
cmc
jmp
mov
sub
icebp
in
adc
sbb
fs
pop
xchg
cwde
fmul
pop
retf
xchg
mov
inc
in
push
and
inc
mov
xchg
cmc
and
in
cmp
fcom
icebp
jb
fwait
mov
mov
fwait
or
movs
mov
in
xchg
xor
xchg
jmp
fmul
lahf
xor
fld
mov
call
cmp
sub
pop
xlat
xchg
ret
mov
in
inc
cmp
push
std
movs
inc
inc
das
xor
add
rcr
pop
mov
rcr
test
loopne
xlat
xchg
push
mov
jmp
pushf
push
scas
out
push
ret
fidiv
jo
pusha
xor
mov
in
cmp
(bad)
(bad)
mov
aaa
fcom
ret
pop
cwde
fidiv
adc
sbb
xlat
cmp
jbe
mov
(bad)
mov
mov
dec
or
fwait
xchg
mov
xchg
sub
and
mov
mov
jb
out
xchg
leave
fadd
and
outs
fimul
inc
lods
sti
mov
lods
cmps
inc
dec
and
inc
rol
cmp
fwait
scas
xor
(bad)
fwait
inc
(bad)
repnz
mov
into
cmp
sahf
aad
aaa
or
inc
es
or
push
clc
mov
add
inc
sub
and
xor
adc
xor
sbb
and
pop
ja
inc
and
mov
cmp
xor
push
or
les
loop
repz
xchg
ficom
loope
mov
popfw
mov
lods
mov
jmp
inc
mov
loope
add
xchg
repz
xor
es
imul
ja
sbb
popf
aad
xchg
test
xchg
data16
sbb
mov
push
sbb
and
sbb
es
(bad)
(bad)
pop
stos
sub
inc
pop
loopne
icebp
clc
bswap
imul
add
mov
mov
mov
inc
add
aam
ret
mov
ss
cmp
cvttps2pi
cmps
or
es
pop
movs
inc
test
cmps
sbb
in
test
pmulhuw
(bad)
jge
sbb
xchg
cmps
bnd
mov
mov
ror
jmp
in
mov
inc
aas
lods
add
stos
mov
gs
cmp
inc
jmp
add
or
add
lods
loop
fucom
cdq
(bad)
pusha
daa
push
cmc
mov
adc
jle
jns
mov
stos
pop
pusha
sbb
popa
in
sub
or
cdq
inc
cmp
add
lock
leave
aaa
addr16
call
fs
fs
dec
shl
das
xor
mov
xchg
add
shr
xchg
fwait
sti
and
cmp
scas
fs
test
xor
test
mov
lds
lods
or
lahf
std
sbb
cwde
hlt
push
or
mov
clc
cmps
adc
fs
ds
ror
and
cld
add
mov
aam
push
push
js
dec
mov
jmp
fnsave
mov
mov
in
repnz
xchg
movs
cmp
xchg
rcl
mov
mov
call
xor
or
retf
xor
dec
mov
jo
push
mov
sti
test
retf
sbb
(bad)
jo
cmp
test
sbb
pop
fwait
lods
psllw
push
aaa
add
dec
into
cmp
push
and
mov
aad
mov
mov
out
jg
xchg
movs
cdq
mov
icebp
sbb
pop
fs
enter
scas
popf
loopne
cmp
stc
and
stos
into
je
inc
cld
push
aas
cli
or
xchg
mov
cmps
add
stos
add
ret
sub
out
in
rol
and
cmps
mov
scas
jne
idiv
out
loope
stc
adc
hlt
or
pop
outs
pop
imul
cmps
lods
cmp
scas
xchg
jbe
inc
mov
(bad)
or
or
mov
add
and
nop
imul
inc
bound
mov
dec
adc
jmp
stc
inc
fiadd
pop
fsubp
fdivr
mov
push
adc
xor
or
fs
push
mov
xchg
retf
adc
cmp
in
test
xor
mov
shl
(bad)
xchg
movs
jecxz
cmp
mov
mov
pop
dec
xor
and
ret
bound
pop
or
pop
xchg
test
test
push
addps
push
adc
fadd
dec
sub
push
xchg
jmp
call
sbb
inc
inc
out
fstp
sbb
(bad)
loopne
sbb
sub
push
cmp
and
inc
cmc
add
mov
jmp
mov
in
mov
imul
mov
add
sub
aaa
cmp
imul
push
loopne
sahf
movntq
and
pop
pop
stos
loopne
fadd
sbb
mov
call
popf
pop
outs
je
xchg
scas
sbb
arpl
nop
push
jne
call
clc
popa
push
ficom
inc
xchg
aas
push
jo
pop
mov
and
in
jne
adc
sti
sub
out
mov
adc
in
call
pop
cs
dec
(bad)
xlat
in
jmp
push
mov
and
and
sbb
lea
push
lahf
bound
ja
push
ror
aas
xchg
sub
icebp
hlt
pusha
into
int
pop
pop
pop
movs
jbe
fwait
and
dec
ja
pop
shr
leave
jnp
(bad)
sbb
cwde
push
rol
jmp
pusha
outs
and
aam
neg
xchg
jmp
adc
cld
jns
add
inc
mov
mov
xchg
mov
out
add
xchg
sub
or
pop
and
sub
cld
lock
and
les
dec
fld
in
jle
push
and
mov
loop
mov
pop
fs
gs
leave
(bad)
mov
cs
aam
int3
mov
out
iret
repnz
scas
xchg
xchg
xor
pushf
xchg
fstp
imul
adc
jp
iret
outs
inc
add
js
cmp
add
pop
popa
stos
jmp
mov
pushf
test
cs
jmp
nop
test
dec
ret
mov
les
scas
call
xor
(bad)
cmp
adc
mov
jno
jl
pop
icebp
mov
sub
push
aam
shr
enter
cmps
gs
add
stc
cmp
(bad)
loopne
aam
loopne
ins
loopne
xor
(bad)
das
xor
nop
and
ins
and
pop
mov
sbb
jmp
mov
(bad)
pop
xor
ja
pop
neg
fstp
adc
cmps
inc
add
pusha
popf
or
shl
out
dec
mov
je
jmp
ret
and
pop
cli
pop
adc
ins
sub
cmc
lds
js
out
mov
push
adc
cmp
shl
mov
inc
jne
xor
cdq
mov
adc
inc
mov
mov
pop
xor
jg
scas
cdq
pushf
(bad)
sbb
outs
adc
and
repnz
xchg
adc
fist
imul
stos
jmp
mov
sbb
add
xor
out
fadd
ins
adc
mov
aas
movs
adc
repz
ror
mov
push
adc
push
push
mov
cmps
out
fucomp
imul
mov
inc
bnd
cli
shl
inc
sbb
(bad)
sbb
jae
nop
cmp
sbb
lock
adc
call
not
xor
dec
rcr
std
inc
arpl
jb
(bad)
sahf
test
or
daa
shl
sar
test
sbb
repz
enter
and
sbb
and
sub
(bad)
sbb
xor
mov
nop
mov
cli
mov
cmps
cmp
rcr
inc
test
xchg
(bad)
inc
movs
std
or
fcomp
retf
add
dec
scas
or
icebp
rol
cli
or
stos
dec
sub
pop
ret
dec
or
in
imul
push
add
inc
pop
add
enter
mov
mov
pusha
mov
pop
lds
arpl
xrelease
aad
dec
movs
out
sub
imul
outs
or
xor
sbb
int
(bad)
jp
mov
fidivr
mov
test
xchg
jle
mov
cmp
mov
add
test
jg
inc
push
movs
stos
pop
cs
(bad)
mov
movs
cld
outs
mov
fnstsw
pop
dec
inc
in
cmp
xchg
cs
jg
add
mov
dec
int3
jns
push
sahf
xchg
enter
push
mov
inc
dec
gs
out
xor
fild
cmp
push
dec
fnsave
xchg
ds
fldenv
gs
ror
(bad)
test
add
mov
sti
aam
mov
sub
pop
test
fisttp
adc
call
pop
jns
scas
dec
jl
imul
mov
push
pop
pop
mov
retf
mov
sub
test
mov
mov
pop
inc
ret
mov
fbld
pop
test
loope
cmp
mov
xor
mov
shl
out
cmc
enter
xchg
cmps
dec
jns
test
and
dec
mov
add
pop
in
sbb
scas
in
gs
pusha
loop
out
adc
or
out
or
iret
popf
mov
dec
dec
scas
mov
jbe
addr16
sbb
cmp
dec
push
mov
inc
lds
int3
lods
fcomp
ret
inc
push
xchg
add
and
mov
aam
push
cmp
nop
dec
fstp
push
jnp
fadd
(bad)
stos
sub
xchg
dec
fidiv
push
shr
jmp
mov
addr16
fld
(bad)
mov
adc
fistp
lea
cmc
lahf
dec
mov
jne
push
(bad)
jnp
pop
fs
jmp
push
jae
sub
hlt
sbb
push
add
or
mov
(bad)
push
(bad)
xchg
xchg
movs
lds
ret
sub
out
add
test
es
inc
push
xchg
and
pop
sub
in
inc
xchg
or
and
ror
jmp
jmp
xchg
(bad)
(bad)
push
and
stos
xor
cmp
loope
sbb
in
cmp
test
xchg
sbb
js
mov
jmp
ins
test
and
inc
cwde
mov
mov
lea
out
inc
imul
es
arpl
pop
sbb
and
mov
repz
fisub
push
ret
(bad)
sbb
jbe
push
mov
add
mov
and
push
xchg
cmp
(bad)
retf
in
aad
inc
jb
test
mov
cmp
adc
sbb
pop
add
and
pop
(bad)
(bad)
mov
adc
icebp
arpl
mov
popa
push
test
shl
add
pop
jmp
rcr
sbb
mov
jl
push
nop
daa
sub
cdq
mov
mov
rcl
sbb
add
ss
sbb
mov
fs
adc
fiadd
mov
sbb
sub
data16
jnp
adc
call
mov
pop
sbb
loop
nop
shl
lods
jg
movs
fild
add
cld
or
inc
push
mov
sbb
xor
inc
cwde
dec
add
xchg
pop
push
xchg
cmp
cmp
retf
in
jg
or
repz
(bad)
or
sub
xor
and
xchg
jne
cmc
jae
xchg
mov
sar
outs
(bad)
cmp
pop
mov
cmps
sub
cmc
not
movs
add
dec
jl
xor
daa
sbb
adc
cvtps2pd
mov
jg
fwait
or
xchg
lahf
sub
pushf
aas
dec
xchg
ror
aam
mov
(bad)
push
sub
xor
push
arpl
push
xchg
sbb
call
inc
and
jbe
xchg
lea
sbb
ins
loop
sub
sub
ds
hlt
mov
push
lods
fld
inc
jmp
repz
cmp
outs
mov
test
stc
repz
imul
adc
cdq
and
ret
mov
shl
jl
ins
pop
in
fs
xchg
and
movs
arpl
arpl
or
das
jl
into
dec
lea
jb
or
and
pop
(bad)
cld
inc
aas
mov
ins
hlt
fdiv
jmp
ret
lahf
out
push
dec
je
cmps
fistp
or
fimul
lahf
ins
shr
and
or
cmps
iret
cmp
test
xchg
aas
daa
sub
jae
les
mov
neg
stos
sbb
add
imul
sbb
xor
js
inc
mov
mov
lods
int
mov
ret
mov
sahf
push
ss
dec
dec
pusha
sbb
or
test
ja
fist
call
outs
ret
addr16
imul
data16
outs
sub
adc
sub
cmp
idiv
in
cmc
inc
dec
xor
ins
or
stos
sub
jno
add
cmc
jnp
shr
and
ins
bound
je
xchg
sbb
ins
push
mov
mov
in
in
lahf
mov
push
and
retf
popf
iret
add
test
sub
in
push
mov
or
mov
jp
lods
sub
sbb
xchg
jmp
mov
in
jmp
punpcklwd
jno
xlat
cmps
leave
les
xchg
mov
ins
mov
inc
sbb
cmp
dec
jg
ret
test
push
enter
cdq
ror
pop
sbb
xchg
xor
pushf
jno
lea
int3
push
push
(bad)
or
aas
in
cdq
aaa
pop
cmc
retf
ret
mov
sti
dec
jmp
push
or
das
sub
dec
call
das
dec
(bad)
test
ins
std
test
dec
xchg
and
daa
out
add
xchg
sub
clc
xchg
cdq
stos
cwde
cmp
inc
aaa
mov
arpl
dec
stos
loope
add
add
ins
push
in
sub
sub
xchg
mov
lahf
test
mov
das
pop
jp
std
dec
mov
sub
cmp
inc
call
mov
and
pop
sub
fucomip
xchg
cld
aam
jns
shl
lods
fst
add
std
int3
lods
pop
les
pusha
arpl
out
in
scas
mov
(bad)
out
sub
mov
stc
aaa
into
sbb
test
adc
ins
or
push
xchg
mov
in
js
rcl
test
push
rol
xchg
add
repz
xor
retf
pop
push
and
shl
pop
(bad)
aas
xchg
adc
popa
mov
sahf
and
cli
setl
jbe
pop
sub
cwde
jae
or
cmps
jp
lds
scas
add
popa
pop
push
inc
ret
inc
fadd
sub
and
and
loope
xchg
mov
add
(bad)
lea
imul
movs
out
xor
xchg
sub
adc
jp
pop
int
shr
push
xchg
mov
fimul
mov
shl
scas
pop
in
into
inc
or
cmps
les
outs
dec
xchg
mov
popf
das
mov
out
dec
aaa
push
pop
inc
xlat
ror
dec
stos
adc
out
pop
sbb
dec
and
and
push
pop
cs
out
cmc
test
stc
enter
sub
xchg
mov
sbb
outs
loopne
mov
lahf
outs
and
in
cmp
inc
inc
pushf
int3
mov
inc
rcl
fdivr
int3
mov
jne
push
in
fwait
push
int
(bad)
xchg
mov
fcmovb
test
mov
lock
push
clc
xchg
clc
xchg
test
jo
push
add
pop
inc
lock
ss
lods
sahf
jmp
sub
loop
mov
adc
ror
lds
retf
hlt
leave
mov
and
dec
pop
fild
jmp
arpl
int3
aam
mov
mov
xchg
jnp
ds
das
jmp
test
loopne
scas
mov
xlat
out
repnz
jecxz
push
mov
mov
leave
adc
xor
sub
(bad)
push
dec
jmpw
xor
outs
cmp
(bad)
call
data16
mov
sbb
add
or
and
jns
fmul
les
adc
inc
mov
std
jo
fwait
(bad)
xchg
gs
gs
shl
mov
in
lahf
xchg
lea
or
int3
dec
adc
sub
mov
lods
int3
cmp
and
fldenv
push
xor
and
or
jns
shl
pusha
push
cmp
es
fisttp
inc
pop
xor
mov
sbb
stos
retf
lods
jg
fwait
gs
cmp
mov
push
dec
in
inc
fnstsw
fstp
and
cmp
or
mov
es
imul
jae
cmp
dec
cmp
int
mov
add
rcr
lahf
pop
xor
sbb
cmp
es
xor
xor
and
cmp
mov
inc
retf
rcl
ds
sti
lods
jp
add
xor
fmul
nop
adc
add
sub
ins
sub
gs
int3
mov
jnp
es
outs
push
jp
push
std
das
inc
xlat
inc
adc
add
ja
mov
mov
mov
push
mov
pusha
pop
sbb
das
and
scas
mov
mov
call
cmps
mov
int3
cld
test
mov
or
sub
or
jb
bound
hlt
push
xor
mov
sub
and
inc
mov
push
sti
mov
aaa
xchg
popf
test
lock
test
out
into
xor
(bad)
ins
sbb
inc
jno
fiadd
icebp
imul
and
in
adc
xor
mov
(bad)
sbb
sbb
adc
dec
lods
cmp
stos
inc
sbb
jb
out
or
imul
inc
jb
mov
addr16
push
retf
out
int3
fist
sahf
rol
cmp
pop
pop
mov
dec
pop
inc
jle
sub
sbb
xchg
ret
aas
stos
mov
push
scas
fnstenv
ds
fiadd
jl
or
adc
jmp
cmp
into
add
ror
add
dec
push
iret
jle
cmp
imul
push
jmp
adc
inc
(bad)
and
mov
leave
push
mov
int
sub
ror
lea
loop
lahf
mov
inc
and
adc
stos
fs
lods
xchg
xor
mov
mov
test
xor
test
(bad)
in
dec
inc
add
inc
mov
mov
out
fsub
xor
les
lea
(bad)
fisubr
adc
fist
or
pop
sub
mul
out
test
or
clc
(bad)
xchg
aam
fst
adc
dec
or
sbb
scas
xchg
mov
push
mov
call
push
cmp
clc
cmp
in
inc
pop
xchg
outs
adc
mov
stos
shl
ins
hlt
add
mov
test
fisttp
mov
(bad)
dec
test
ss
adc
cmp
mov
mov
sbb
adc
pop
fld
add
icebp
push
cmp
jmp
push
mov
and
xchg
xchg
push
lods
retf
push
dec
jno
inc
pop
sub
(bad)
jmp
push
fild
or
jo
hlt
test
cli
xor
rol
mov
xchg
push
addr16
sbb
mov
dec
mov
mov
push
ins
loopne
mov
sub
int
in
mov
jg
in
inc
sub
ins
(bad)
fsub
call
mov
lods
cwde
push
mov
dec
dec
je
jle
pop
push
dec
lahf
dec
jno
adc
jmp
jno
ror
xchg
ins
(bad)
jle
(bad)
stc
or
jnp
fidivr
je
or
dec
hlt
cdq
mov
rcl
aas
aas
(bad)
data16
add
ret
call
mov
mov
sti
aam
dec
push
pop
out
and
xlat
sbb
dec
jns
mov
icebp
shl
test
shl
adc
sahf
out
out
popf
xor
dec
inc
outs
mov
sahf
and
pusha
cmp
sbb
push
imul
jns
popf
push
adc
mov
das
push
test
sbb
lods
into
inc
and
adc
fistp
add
cwde
jecxz
js
inc
jle
repnz
sub
rol
inc
outs
aad
fstp
mov
fistp
bound
push
push
jmp
enter
mov
cli
mov
mov
test
pop
pop
in
ret
(bad)
movs
sti
jp
test
pop
adc
scas
sbb
or
add
lods
jp
outs
dec
push
stos
mov
je
add
lods
loopne
leave
sbb
pusha
cwde
dec
mov
ficom
or
sbb
inc
std
loopne
(bad)
hlt
mov
sbb
xor
ins
gs
xchg
sbb
dec
(bad)
jmp
cmp
sbb
sub
or
jns
jno
sbb
not
(bad)
or
popa
sbb
mov
addr16
dec
mov
outs
mov
out
push
es
icebp
cdq
fs
aas
sbb
repz
lods
mov
fdivr
cmp
imul
mov
pop
bound
sub
pusha
outs
sub
xchg
test
push
leave
lds
aam
ds
inc
mov
xchg
add
xchg
xlat
out
dec
lds
add
clc
in
pop
stc
leave
and
stos
add
mov
fsubp
pop
add
je
rcl
mov
fadd
jne
push
cmps
ffree
je
shl
pop
shl
add
dec
out
int3
mov
add
dec
test
adc
xor
add
xor
cmp
xchg
xor
dec
add
mov
jno
push
push
jno
ja
xor
shr
cmp
inc
sahf
pop
int3
mov
js
cmps
daa
mov
push
mov
mov
imul
cmp
push
popa
xor
lahf
pop
jmp
cmps
xchg
adc
leave
fild
test
fucom
out
mov
adc
mov
icebp
bound
aas
sar
popf
leave
add
je
push
jo
push
add
mov
pop
(bad)
mov
adc
data16
jnp
jns
js
mov
or
push
cmp
sub
imul
pop
loope
adc
jmp
dec
inc
repnz
or
and
xor
rol
das
push
cmp
in
in
xchg
scas
pop
ins
imul
gs
jo
jnp
(bad)
test
sahf
das
pop
nop
pop
cli
pop
and
punpcklwd
loopne
mov
(bad)
cli
adc
iret
rol
dec
mov
aam
mov
cmp
pop
cld
adc
imul
fsubr
xchg
sub
mov
xor
inc
test
pushf
test
mov
push
and
sbb
cmp
arpl
xor
jge
js
xchg
push
sub
sub
std
hlt
mov
mov
repnz
fucom
pop
cmp
js
xchg
fidivr
cmp
test
cmps
jno
cs
bound
lods
hlt
mov
ds
cmp
dec
dec
and
loope
sub
fwait
adc
cmp
mov
ror
or
cmp
repnz
xchg
cld
xor
sbb
xchg
mov
and
fmul
xchg
aam
and
mov
cs
push
mov
addr16
mov
dec
adc
mov
mov
sbb
stc
inc
imul
mov
jl
xchg
xchg
loopne
sub
or
cmp
pop
jp
dec
mov
repnz
lock
mov
dec
mov
sbb
jbe
bound
push
fucomp
push
cdq
iret
xor
xor
(bad)
std
ror
aam
and
xor
inc
mov
adc
cmp
xchg
sub
call
pop
retf
mov
xor
imul
movs
push
retf
jo
sahf
push
inc
fmul
test
repz
pop
push
or
and
jne
inc
je
sub
movsx
cmp
jmp
aad
cmp
int
test
movs
leave
call
or
jne
push
pushf
ror
ins
jle
fdiv
cmp
xor
push
cld
sti
ja
ss
out
jb
add
loope
mov
add
outs
jae
mov
stos
shr
adc
sub
lahf
xlat
add
mov
cmovb
or
or
push
lods
lds
or
cmp
xor
sahf
outs
movs
mov
jae
(bad)
jecxz
popf
stos
popf
test
fnstsw
mov
mov
pop
push
cld
or
xchg
sti
cdq
gs
imul
xchg
dec
fdiv
pusha
and
push
add
loope
loopne
jg
lods
imul
xor
imul
jle
push
xchg
pop
ds
mov
icebp
pop
cli
jae
cmp
clc
mov
repz
mov
add
cwde
jns
mov
pop
dec
mov
push
sbb
ins
cmp
neg
mov
push
push
pop
push
dec
pop
add
repnz
or
sbb
ins
push
(bad)
push
dec
ins
push
fcomp
dec
jp
push
cmp
jne
sbb
adc
nop
(bad)
mov
mul
dec
pop
(bad)
call
(bad)
test
(bad)
(bad)
add
scas
sub
cmp
mov
sub
add
xchg
mul
shr
xchg
scas
rol
repz
sub
or
xchg
iret
add
sub
out
jmp
retf
addr16
ja
xchg
pop
call
imul
in
ins
cmp
sub
mov
lock
pop
jne
pusha
sub
out
nop
adc
xchg
jp
xchg
and
jns
lds
not
stos
push
mov
dec
push
inc
sub
or
stos
call
pop
repz
cmp
and
out
mov
xchg
mov
mov
pushf
clc
lock
cli
fiadd
popf
xor
call
shr
es
adc
rol
mov
mov
inc
cld
jbe
inc
jbe
test
ds
mov
xor
mov
out
ds
xor
mov
nop
push
data16
or
sub
inc
arpl
jle
sbb
pop
(bad)
int
and
xor
xor
jecxz
inc
int3
push
adc
fisttp
push
adc
dec
mov
cli
test
inc
push
into
jge
cld
fidivr
mov
xor
pop
push
or
inc
icebp
xor
pop
jne
shr
xchg
aam
in
or
jmp
jno
or
es
rol
pop
mov
pusha
in
sub
fs
sbb
adc
mov
pop
cld
rcr
pop
pusha
add
inc
loopne
es
addr16
jl
pand
stos
mov
scas
or
add
mov
cmp
adc
add
(bad)
movs
outs
sbb
call
aaa
and
pop
inc
mov
fild
jns
mov
repz
mov
popf
popa
sub
loope
ror
xlat
adc
ss
or
sbb
pop
sbb
push
cmps
dec
mov
and
test
and
mov
and
jp
pushf
popa
xchg
repnz
sub
sahf
mov
call
xchg
dec
or
test
cmp
ror
cmps
push
popf
cld
sbb
push
sbb
add
in
imul
aad
xor
(bad)
in
inc
(bad)
xlat
inc
adc
out
xchg
leave
mov
cmp
mov
cdq
pusha
rcl
mov
loope
xor
xchg
popa
stos
sub
idiv
xchg
inc
or
jmp
xor
mov
push
test
adc
jg
xor
mov
imul
mov
sub
push
nop
push
dec
div
push
stos
pop
pop
ret
lods
nop
out
fsubr
shr
jmp
push
sub
fs
pop
mov
jg
pop
in
adc
and
rcr
jb
and
loopne
les
iret
pop
ss
push
add
pop
dec
xor
rcl
sbb
scas
cs
mov
and
popa
je
mov
(bad)
jmp
jecxz
dec
test
jmp
pop
aas
push
out
in
mov
xchg
push
pop
mov
xchg
xor
cmp
sti
add
jnp
mov
dec
fisub
in
push
sub
sbb
(bad)
mov
cwde
repz
(bad)
cmp
sti
jbe
sbb
jg
push
xchg
sbb
mov
pop
mov
mov
mov
mov
outs
mov
loop
sbb
sbb
loopne
(bad)
in
movs
cmp
retf
sub
sar
pop
jmp
add
push
loop
jo
adc
aas
pop
sbb
bound
or
mov
gs
loopne
(bad)
lea
scas
(bad)
pop
hlt
adc
xchg
imul
adc
mov
lea
(bad)
or
mov
add
pop
in
xlat
or
dec
iret
enter
xor
ret
(bad)
(bad)
leave
adc
movs
dec
jle
xor
pop
int3
cmp
dec
movs
sub
shr
out
sbb
add
lock
sar
adc
mov
xor
outs
add
shl
imul
sbb
mov
xchg
jns
mov
scas
push
adc
add
cmp
enter
push
div
sub
loope
aam
xchg
cmps
xlat
test
aad
in
jmp
in
push
cmps
sub
aas
pop
test
inc
push
and
add
pop
push
ret
es
pushf
(bad)
mov
jmp
loopne
cmp
cmp
mov
in
adc
aad
(bad)
pop
outs
fnstsw
push
lahf
or
stos
imul
mov
dec
jmp
dec
jno
das
mov
cmp
inc
push
fidivr
jp
jo
jnp
jge
loopne
inc
loope
xor
in
jno
in
mov
jno
arpl
stos
lock
xchg
sbb
in
or
mov
and
psubsw
add
pop
fnstsw
pop
jbe
ror
test
push
call
mov
jge
(bad)
or
sbb
int
data16
xchg
ret
mov
pop
push
les
inc
(bad)
rcr
fcomp
leave
mov
(bad)
stos
ret
cmc
adc
inc
ret
popa
daa
sti
lods
fisubr
mov
scas
and
in
fnsave
es
aam
xchg
mov
pop
popa
out
inc
(bad)
pop
pop
mov
push
mov
add
call
pop
mov
in
jnp
js
push
xchg
mov
(bad)
adc
xchg
dec
lods
bound
add
pop
rcl
loopne
imul
lahf
inc
cmp
xchg
loopne
int
push
jns
or
loopne
ret
xchg
popf
mov
retf
adc
push
shl
mov
dec
cmp
cmp
frstor
fwait
push
hlt
retf
sub
jne
add
mov
cmp
dec
add
jo
cmp
mov
mov
ja
sti
out
cmp
scas
jle
jecxz
das
inc
mov
sub
adc
test
test
sub
cli
iret
jg
jmp
push
in
movs
js
mov
push
add
lea
pop
xchg
adc
inc
out
test
cmp
and
(bad)
(bad)
arpl
and
test
pop
call
in
jae
sahf
mov
dec
cmp
(bad)
push
mov
mov
and
test
fucomi
and
mov
jno
(bad)
ins
pop
loop
lock
push
adc
mov
or
pusha
mov
mov
jge
xor
cmc
ficom
push
and
mov
push
int3
sub
pop
sbb
and
loopne
call
push
mov
mov
out
mov
mov
pop
push
clc
ins
and
out
inc
es
pop
movs
jo
mov
fsub
add
pop
shr
in
aad
(bad)
mov
pop
pop
sbb
pop
pushf
scas
loope
adc
push
push
sub
ret
mov
mov
xchg
loopne
into
push
sbb
fisttp
cld
xor
rcl
sbb
(bad)
neg
pop
xor
xlat
jecxz
mov
das
addr16
loop
sar
int
dec
dec
adc
mov
retf
mov
mov
fdivr
cld
popf
retf
clc
and
scas
rol
jmp
aam
inc
fiadd
push
add
mov
outs
and
jo
push
lock
std
(bad)
neg
cdq
in
adc
fisttp
jae
retf
cmp
nop
shl
and
lahf
jle
(bad)
pop
pop
fcmovne
adc
ret
imul
dec
out
repz
popf
mov
(bad)
sahf
xlat
rcr
fisub
adc
addr16
nop
push
add
test
xchg
jne
xchg
retf
jecxz
inc
jl
jl
mov
js
inc
std
fld
jecxz
sub
sahf
and
out
jmp
pop
imul
push
xchg
in
push
adc
les
xchg
mov
cmp
push
or
xchg
inc
pextrw
popf
fdiv
pusha
mov
inc
or
dec
jmp
imul
cwde
test
add
les
lods
dec
mov
inc
add
jecxz
dec
mov
scas
pop
push
mov
int
imul
sbb
mov
xchg
jnp
shl
movs
rcl
xchg
mov
pop
(bad)
pop
adc
retf
aam
sbb
xchg
push
mov
hlt
mov
jecxz
sbb
and
add
movs
mov
in
pop
jg
in
sub
sub
dec
sti
popa
mov
jnp
adc
dec
bound
inc
push
rcl
js
sbb
shr
sub
dec
repz
dec
clc
pop
ror
jmp
ins
stc
int
fld
or
mov
adc
or
push
xchg
sbb
push
dec
mov
inc
call
adc
ins
std
jno
mul
lahf
retf
das
dec
pushf
in
xor
jbe
cmp
pusha
cmp
ds
dec
jb
lods
call
hlt
sti
jnp
mov
add
mov
sahf
repz
aaa
(bad)
jb
out
and
aaa
sar
pusha
inc
or
pop
inc
or
fisttp
lds
mov
nop
dec
mov
cmp
icebp
push
(bad)
mov
jo
enter
and
loope
xchg
leave
clc
xchg
and
sub
sbb
call
or
lods
or
and
sbb
jnp
(bad)
and
nop
pop
aam
mov
jb
push
add
arpl
es
sbb
fisttp
mov
mov
xor
cld
ret
pop
jbe
lds
mov
cmps
and
sub
outs
shl
sub
dec
outs
inc
add
or
in
imul
xchg
outs
mov
(bad)
movs
dec
sbb
stos
dec
mov
or
loop
les
lea
mov
adc
(bad)
push
mov
pop
pop
jmp
or
sbb
cmp
adc
xchg
dec
das
jge
sub
es
sbb
(bad)
add
push
lock
arpl
jb
call
arpl
aam
push
out
cli
fdiv
jecxz
sub
movs
adc
cmc
or
(bad)
hlt
xor
stc
mov
(bad)
add
jmp
lock
cmps
or
cmp
aas
inc
adc
cld
jl
pop
fild
push
cmp
mov
out
inc
inc
stos
aad
jb
and
dec
pop
pcmpeqb
sti
mov
dec
fs
sbb
mov
ja
jne
cmp
or
mov
pop
ret
inc
jns
and
and
fisubr
inc
lods
adc
retf
outs
lahf
int3
push
ds
pop
call
icebp
rcr
(bad)
pop
mov
enter
hlt
sub
gs
sub
cdq
push
mov
jns
xor
test
cmc
mov
pop
out
inc
cli
mov
mov
gs
cmp
out
xchg
or
and
xor
mov
loop
xor
jmp
daa
les
imul
pop
dec
cdq
pusha
dec
cdq
es
test
shl
sahf
pop
rol
adc
cli
sub
call
and
pusha
jno
and
sbb
pause
aam
cmp
xchg
aad
test
cmc
push
sbb
push
repz
xchg
cli
lds
adc
push
add
mov
pusha
aaa
mov
data16
popf
sub
inc
js
and
mov
jns
stc
daa
loopne
sbb
repz
mov
enter
xor
lea
cdq
rcr
dec
mov
dec
sahf
jne
cmp
test
pop
out
xor
sub
test
loopne
lea
dec
and
movs
clc
sbb
fwait
mov
push
stc
call
test
jne
fwait
popf
cmp
and
pop
(bad)
jno
sub
sti
add
fiadd
cwde
inc
add
ds
jb
or
mov
or
(bad)
pop
out
push
lods
pusha
scas
cs
loop
popa
jbe
mov
call
cmps
lea
mov
push
xchg
mov
fcmovnb
mov
ds
ret
and
daa
xor
sub
jecxz
xchg
pop
loope
lds
rol
ja
adc
jl
mov
ins
hlt
xor
fwait
mov
sbb
mov
cmp
mov
clc
or
xor
ret
outs
jp
mov
sub
push
push
push
sub
jns
pusha
out
sbb
call
jne
adc
popf
stc
mov
ds
jge
je
lods
jns
pop
lods
out
cmps
and
retf
jns
out
movs
cdq
mov
jge
pop
xchg
(bad)
scas
sahf
pop
mov
cmp
lods
out
or
pandn
sbb
xchg
hlt
cdq
les
cli
iret
xlat
fisubr
pushf
fs
xchg
dec
sbb
and
push
call
push
jecxz
fsubr
call
cmp
(bad)
xchg
neg
cwde
mov
pop
es
push
xchg
out
dec
xchg
es
int3
mov
xchg
movs
xchg
cli
stos
jo
dec
or
test
imul
cmps
pop
movs
cmc
pop
cmc
loopne
stos
mov
and
or
push
mov
xchg
sti
jl
test
and
retf
je
test
into
mov
add
push
sbb
iret
jno
out
imul
int
stc
retf
sub
(bad)
cld
dec
int3
mov
fcomp
clc
enter
in
mov
ret
mov
in
sub
out
aas
loopne
lea
sbb
in
jecxz
push
dec
ret
int3
jb
test
loopne
cmp
cmp
(bad)
aaa
xor
adc
adc
leave
test
icebp
add
pop
and
mov
add
outs
fadd
xor
jns
push
cmps
hlt
fbld
retf
ins
out
pusha
shr
adc
sbb
test
pushw
gs
add
xor
aad
(bad)
test
mov
jb
xchg
push
(bad)
and
fsubr
push
stc
mov
dec
ficomp
and
inc
fs
pusha
pop
mov
sbb
jns
ret
ja
xor
std
push
add
cmp
and
push
and
jp
ret
mov
inc
aaa
add
iret
jecxz
out
sbb
cs
sub
mov
call
ins
pop
pop
xchg
ror
push
(bad)
jmp
in
sub
cmp
sub
inc
enter
icebp
into
(bad)
dec
and
out
jmp
lods
add
stc
ss
and
retf
(bad)
movs
ja
jae
mov
shr
mov
mov
js
not
jb
push
rcr
test
ficomp
jp
sub
daa
and
inc
xchg
popf
inc
mov
or
add
pop
aam
pop
imul
mov
mov
arpl
popa
repz
pop
pop
leave
in
jle
dec
inc
sub
inc
add
dec
inc
jecxz
in
fisub
repnz
pop
xchg
int
movs
fwait
xor
adc
xchg
jecxz
push
jns
push
xchg
mov
inc
loop
pop
je
add
fistp
jl
cmps
sti
xchg
mov
mov
jl
push
add
ss
shr
fdivr
daa
or
daa
rol
xor
mov
xor
push
(bad)
fst
daa
pop
leave
mov
mov
mov
inc
cld
clc
cmps
sbb
pushf
stos
mov
pushf
cli
int
rcr
add
imul
fdivr
fisub
xor
cs
dec
test
adc
cs
and
cdq
lahf
(bad)
into
ja
jae
mov
cld
mov
xor
push
jb
mov
daa
mov
neg
imul
dec
scas
test
mov
mov
mov
por
out
jmp
jo
int3
out
or
push
sbb
call
fldenv
and
(bad)
out
repz
push
dec
push
int3
xchg
inc
aas
sub
cmc
xchg
sbb
cmp
dec
int
sbb
loopne
sbb
mov
push
outs
jmp
push
and
jne
dec
sub
dec
loop
mov
jnp
lock
cmp
aad
and
out
gs
and
test
jge
loope
arpl
or
push
outs
fcmovnb
sbb
aaa
sub
jns
mov
pop
xor
gs
inc
or
push
push
js
ret
int3
aad
into
dec
stc
es
jne
pop
and
outs
cmp
fcom
push
test
aam
outs
jbe
aaa
rep
call
pop
dec
dec
sahf
cmps
std
(bad)
lahf
mov
push
sbb
mov
sahf
jg
jne
test
jmp
popf
pop
aam
out
or
add
jo
inc
push
stos
jno
add
hlt
add
sbb
hlt
mov
mov
rcl
inc
in
mov
mov
cdq
std
pop
mov
jmp
ins
or
push
and
push
and
jnp
pop
cli
or
lea
in
fidivr
mov
mov
push
pop
sub
shl
jmp
jle
push
cwde
mov
xchg
imul
xor
js
jg
adc
imul
sbb
call
lock
adc
push
push
jmp
push
loop
mov
fidivr
(bad)
inc
int3
je
aad
addr16
movs
jp
out
hlt
mov
inc
clc
and
push
push
cmp
mov
aad
sub
sbb
or
push
cs
add
pop
xor
div
das
rol
xor
cmp
fs
and
call
pusha
sub
add
jle
push
retf
dec
push
mov
mov
sub
xor
imul
push
out
adc
retf
scas
push
cli
jae
lods
(bad)
sti
mov
xor
pop
xchg
fld
inc
stos
cmp
jmp
mov
nop
test
or
mov
push
js
ror
and
push
int
scas
ds
not
fucomi
lock
mov
not
cs
call
jg
loopne
leave
add
or
cwde
clc
sbb
push
stos
scas
push
lds
xchg
sbb
(bad)
mov
or
pop
or
js
dec
mov
pushf
and
jge
movs
xchg
scas
outs
pusha
jl
sub
and
sub
xor
and
into
mov
adc
and
scas
fst
loopne
fbld
test
sbb
xor
ret
jl
and
enter
jb
dec
fimul
in
xchg
mov
push
rcl
mov
mov
push
iret
or
xchg
leave
jmp
imul
inc
and
mov
push
popa
or
sub
ins
call
rcl
or
out
iret
aam
jp
dec
out
int
(bad)
cmp
jmp
in
adc
lods
mov
hlt
or
in
mov
mov
xor
mov
and
das
jo
test
or
cmps
cmp
mov
dec
add
retf
fnclex
jb
jae
arpl
jmp
inc
lahf
stc
cmp
lds
mov
repz
pop
push
test
pusha
(bad)
jo
cld
movs
xchg
dec
rol
pop
sbb
push
sub
rol
cmp
dec
fimul
lock
hlt
jmp
push
test
lods
cmc
icebp
dec
push
in
jae
hlt
inc
or
ins
mov
sbb
xor
cmp
lahf
loop
retf
cmp
mov
or
retf
ficom
sub
sub
mov
ret
scas
sti
cdq
je
dec
ins
pop
lods
jg
lahf
cmps
pop
jmp
shr
shl
nop
test
out
adc
cmp
int
mov
ins
jmp
adc
test
not
ins
aas
retf
in
and
not
dec
jbe
push
iret
mov
stos
fimul
movs
sub
or
call
popf
lock
xchg
dec
inc
adc
pop
enter
nop
loop
daa
jb
cmps
xor
fisub
jns
push
add
rcl
pop
pop
xchg
jecxz
int
jae
add
jle
jg
repnz
xor
dec
add
int
out
dec
inc
rol
ja
in
jae
cmp
out
sahf
pop
in
xor
and
(bad)
popf
nop
sbb
scas
leave
mov
pop
test
repnz
cwde
push
in
xchg
xchg
sbb
int3
popf
leave
push
jmp
inc
pushf
mov
out
jmp
js
mov
sbb
dec
fs
enter
inc
dec
pop
rcr
push
movs
and
cmp
add
jns
cli
loopne
sbb
add
rcl
inc
dec
sub
mov
in
xchg
stc
icebp
mov
jnp
ja
imul
cmp
pop
push
hlt
mov
int3
mov
cmp
mov
sbb
mov
pop
xor
and
js
mov
cs
add
inc
adc
jge
dec
lods
mov
jae
test
ss
fisub
push
leave
mov
mov
ficom
retf
inc
or
and
bound
cmp
add
cmp
div
stc
loop
(bad)
push
or
dec
xor
xchg
mov
mov
loop
dec
adc
scas
(bad)
xchg
xchg
lock
mov
ss
jo
sbb
std
aas
cwde
pop
inc
in
idiv
pop
mov
loop
out
sbb
dec
add
mov
mov
in
fild
push
dec
sbb
mov
xor
test
sbb
cmp
xchg
dec
aaa
xchg
in
or
cmp
mov
dec
xchg
clc
push
ret
adc
enter
(bad)
jl
repnz
test
mov
or
stos
or
dec
push
jb
fcom
mov
lock
cmps
adc
inc
mov
fnstsw
xchg
(bad)
hlt
xor
cmp
add
(bad)
adc
aaa
jbe
(bad)
dec
call
sub
int
je
lds
inc
cs
mov
mov
mov
xchg
push
xor
add
sub
inc
rcr
and
cdq
dec
clc
xchg
sbb
push
sahf
aaa
push
ds
cmp
mov
jne
scas
xchg
xchg
addr16
add
out
mov
sbb
or
sub
out
inc
dec
cli
sub
mov
pop
cs
out
(bad)
jmp
outs
repnz
retf
inc
retf
add
cmc
test
xor
(bad)
mov
jl
sar
add
ror
xlat
not
dec
push
les
shl
in
and
loopne
jns
sbb
sub
fdivr
in
cmp
or
fisub
mov
test
lods
sahf
pop
mov
outs
and
shl
in
sahf
xor
std
mov
retf
sub
pop
test
mov
push
dec
stc
mov
call
push
in
je
mov
mov
xchg
push
dec
popa
fcomp
fbstp
cmp
mov
jb
sar
jne
push
sbb
xchg
cmps
xlat
clc
scas
ins
inc
icebp
dec
sti
call
pop
imul
mov
jo
jg
iret
ins
shl
xchg
jb
ret
cdq
out
mov
cmc
and
cdq
inc
in
cld
cmps
(bad)
je
push
inc
sar
mov
shr
mov
inc
not
jb
pop
xchg
sbb
mov
and
test
(bad)
adc
jbe
push
mov
out
fsub
shr
adc
aaa
lods
sub
mov
in
aas
mov
ss
jns
jg
fcomp
ror
out
mov
call
push
sub
xchg
pop
xchg
or
imul
out
xchg
(bad)
int
ja
in
aaa
dec
pop
mov
pop
les
sbb
add
sub
(bad)
ss
ud2
jmp
jecxz
add
in
add
(bad)
ja
lds
mov
cmp
loopne
dec
jo
into
hlt
lea
adc
ja
setae
stc
add
ins
push
adc
shl
xlat
push
retf
or
or
jno
je
xor
sub
cld
hlt
push
dec
ds
lods
adc
div
call
repnz
jmp
in
(bad)
mov
retf
fcmovb
xchg
sbb
inc
mov
popf
pop
sub
add
ds
iret
lahf
sub
je
lods
jge
cdq
shl
shl
fisubr
call
mul
pop
lds
pop
test
pmaddwd
in
loop
cwde
retf
shl
lds
jecxz
repnz
sbb
loopne
ss
in
test
mov
xchg
mov
pop
movs
add
ret
sbb
fisttp
test
mov
push
inc
mov
inc
dec
mov
xchg
lods
pop
xchg
adc
je
in
aaa
mov
jg
mov
or
dec
inc
imul
retf
mov
xor
fild
in
mov
ror
popf
mov
hlt
and
sbb
or
jecxz
inc
xor
add
inc
or
lahf
dec
pop
dec
enter
leave
call
mov
call
jne
iret
(bad)
jmp
out
sbb
scas
push
jmp
cmp
sub
js
mov
pop
dec
cmp
int3
test
or
and
std
clc
push
enter
xchg
add
mov
sbb
out
popa
fcomi
ret
dec
xchg
outs
push
repnz
hlt
push
mov
int
mov
push
cmp
cmc
imul
and
pop
adc
ins
or
push
mov
xchg
mov
xchg
mov
(bad)
out
sub
sar
daa
push
call
rcl
push
aaa
lahf
aam
xchg
xchg
bound
mov
xlat
in
sub
ret
sbb
adc
pop
and
vpsubd
test
test
cmp
mov
inc
ret
inc
and
mov
mov
fldenv
add
retf
pushf
dec
mov
ins
sub
pop
push
lock
and
out
daa
xor
(bad)
test
dec
lods
pop
stos
test
cmc
dec
or
mov
xor
jno
push
xchg
cmp
add
inc
popf
retf
xchg
loop
out
lahf
cmp
sar
fisub
outs
ins
mov
test
xchg
ss
or
sub
loopne
fdiv
cmps
das
pcmpgtd
mov
loop
pop
fld
dec
pop
cmp
out
ds
mov
pop
jo
int
jl
int3
stos
adc
or
add
jmp
jg
loop
movs
jge
mov
dec
sub
pusha
sub
jge
ins
sbb
mov
pop
dec
jmp
lahf
dec
mov
add
dec
test
mov
movs
sbb
das
push
and
lods
clc
pop
loopne
push
jecxz
outs
jge
jl
iret
div
adc
sbb
mov
int
into
push
cmp
adc
dec
into
mov
push
je
mov
mov
jge
jbe
dec
retf
stos
gs
cmp
inc
popa
sub
mov
ds
imul
xchg
adc
xor
mov
mov
or
inc
inc
push
cmp
xor
leave
jbe
inc
add
xchg
mov
aaa
xchg
inc
or
xchg
cmc
outs
aas
xor
outs
scas
stos
les
pop
mov
pop
lds
pop
movs
clc
cmc
xchg
into
add
inc
cmp
mov
(bad)
stc
(bad)
pop
cmp
ret
mov
cmps
test
cs
inc
adc
jae
out
mov
fdiv
pop
mov
test
xchg
jecxz
xchg
cmp
push
(bad)
and
or
inc
mov
pop
loop
xchg
sub
sub
adc
aas
je
shr
jnp
out
pop
sbb
and
les
mov
mov
push
xchg
popa
xor
mov
aam
adc
ss
xor
loope
xor
lods
adc
ds
jle
dec
jb
test
push
shr
sub
hlt
nop
sbb
iret
icebp
stc
mul
pop
pop
jae
push
in
aad
(bad)
je
sbb
call
repnz
jp
loop
jmp
outs
sbb
inc
add
mov
es
jnp
mov
mov
(bad)
jmp
cdq
cmp
push
mov
mov
fstp
shl
adc
imul
push
movs
dec
retf
pop
add
jecxz
adc
xor
pop
jmp
push
fisttp
dec
popa
test
adc
push
push
pop
xor
in
fwait
(bad)
call
pop
adc
fadd
and
pop
bound
cmp
inc
mov
(bad)
(bad)
dec
inc
jo
ret
bound
in
shl
dec
cdq
sub
cmp
push
je
test
enter
push
call
movs
xor
push
cs
xor
arpl
pop
mov
pop
test
sbb
push
int
test
sub
sbb
push
mov
xor
inc
(bad)
or
push
push
push
mov
push
xor
jb
leave
pop
push
inc
jne
fisubr
aaa
pop
pusha
sti
mov
xor
sbb
add
pop
sbb
(bad)
xor
(bad)
sbb
inc
push
cmps
jnp
push
mov
mov
cmp
test
add
arpl
ret
dec
ins
xor
pusha
and
push
jno
sbb
in
sbb
xchg
icebp
jle
xchg
fst
fidiv
jle
adc
and
rol
mov
dec
mov
sti
xor
add
sahf
into
sub
or
test
retf
push
lods
push
call
mov
(bad)
mov
xchg
lea
add
outs
in
add
mov
or
mov
fcomp
sbb
loop
push
movs
pushf
popf
stos
mov
loop
add
dec
in
(bad)
into
adc
shl
dec
sti
or
ins
mov
xchg
jg
dec
jnp
push
jle
sar
pop
in
push
ret
pushf
mov
cmps
ret
mov
stos
mov
pop
xchg
call
fist
push
popf
sub
mov
jl
jns
fidiv
or
cli
dec
or
ret
push
pop
mov
pop
ret
hlt
jo
mov
inc
jae
jne
scas
push
aad
push
loopne
xchg
mov
xor
adc
pop
leave
adc
add
mov
dec
adc
bswap
xchg
stos
mov
lods
dec
jne
mov
mov
xchg
xchg
pop
loop
sar
mov
cmc
mov
inc
inc
sbb
outs
dec
mov
mov
mov
push
or
in
xchg
jmp
mov
outs
push
lock
(bad)
fidiv
ret
retf
es
pop
pushf
mov
xchg
cmp
scas
fwait
nop
jg
adc
mov
push
test
add
push
pop
inc
xchg
inc
scas
outs
aas
mov
xor
push
(bad)
hlt
cmps
dec
and
add
pusha
mov
mov
ret
jbe
hlt
aad
sbb
sbb
call
jb
data16
mov
rol
push
into
daa
and
repnz
inc
inc
in
fwait
pop
das
or
and
stos
call
sbb
fistp
mov
jno
fnstsw
in
shl
adc
mov
pop
or
sti
xchg
and
or
pop
(bad)
clc
cmp
lar
pop
pop
ins
adc
out
mov
adc
fsubr
inc
mov
cmc
mov
cmp
or
(bad)
shl
outs
into
iret
scas
and
jae
jno
mov
add
cmp
fcom
cmp
sub
in
sbb
(bad)
(bad)
out
repnz
push
inc
jne
cmp
rcr
mov
mov
sub
inc
retf
add
add
inc
add
gs
test
outs
neg
lods
mov
sbb
imul
test
ret
cmp
outs
xchg
div
dec
dec
sub
mov
pusha
imul
mov
aas
cmps
and
inc
xor
sub
inc
jno
jl
push
adc
cli
popf
push
nop
dec
sub
mov
and
in
jg
or
mov
out
and
mov
dec
jns
mov
pop
mov
imul
clc
pop
add
stc
pop
mov
call
inc
test
retf
ds
dec
pop
repnz
push
pop
pop
sub
adc
jmp
xchg
dec
dec
inc
xor
pop
popf
in
mov
adc
(bad)
(bad)
mov
imul
int
ins
and
fnstsw
dec
enter
ins
pop
sbb
movs
int
(bad)
pusha
imul
mov
ds
mov
mov
xchg
adc
mov
aaa
adc
xor
xor
pop
xchg
sti
mov
lods
in
xchg
retf
inc
mov
mov
jb
out
mov
mov
xor
das
jl
scas
rol
dec
mov
add
aad
mov
sub
das
xor
inc
(bad)
sbb
lods
fwait
(bad)
cld
sbb
(bad)
fisttp
xchg
pop
repnz
test
bound
xor
das
sub
mov
in
mov
bound
or
inc
or
sub
fsub
in
jp
add
dec
mov
pop
loop
xchg
jge
loopne
dec
adc
ret
aas
cmp
fbld
les
mov
xor
xor
popf
fs
fiadd
clc
enter
xchg
jmp
xchg
dec
or
jns
int
xor
xchg
jle
mov
sbb
pop
cld
jecxz
mov
shl
or
xchg
rol
out
add
mov
adc
mov
imul
mov
fcmovnb
iret
(bad)
iret
fidivr
hlt
sub
cdq
mov
xchg
sub
call
cld
pop
pop
mov
push
xlat
xor
loopne
xchg
lahf
loop
inc
lahf
jae
xor
outs
outs
hlt
(bad)
sti
and
shl
jbe
inc
mov
inc
retf
hlt
int
ret
cmp
mov
ss
fild
mov
jno
jge
mov
dec
push
sahf
mov
pop
loop
dec
pop
ins
dec
vphaddudq
(bad)
mov
movs
inc
leave
mov
(bad)
and
lds
jae
daa
inc
movs
rdtsc
movs
div
fst
or
xchg
retf
pop
in
adc
add
jne
mov
push
push
neg
mov
(bad)
xchg
inc
jle
outs
or
cmps
adc
dec
adc
xor
push
and
fstp
xchg
(bad)
outs
leave
(bad)
fldcw
mov
sbb
ss
clc
mov
xchg
outs
stos
test
lods
xor
mov
mov
push
pushf
dec
pop
xchg
in
test
mov
or
repz
(bad)
lods
or
movs
push
jmp
stc
mov
pusha
(bad)
mov
xor
outs
mov
and
cmp
pop
jbe
lds
lods
mov
nop
jp
sub
inc
dec
call
or
loopne
adc
and
mov
push
xor
cmp
imul
cmps
jmp
dec
jbe
push
xlat
aaa
or
push
in
mov
sub
mov
pop
mov
imul
ss
cmp
bound
fwait
aam
sbb
pusha
dec
jbe
(bad)
repnz
cmc
arpl
dec
push
mov
push
cli
cmps
(bad)
or
sti
dec
or
xor
imul
xchg
push
cmp
jg
scas
adc
lods
add
fbld
or
cdq
mov
push
jno
mov
or
aas
push
fs
call
and
xchg
pop
add
and
push
jbe
sti
inc
or
xor
or
xchg
xor
outs
hlt
pop
out
push
stc
ins
int3
adc
ins
mov
ficom
mov
ins
(bad)
pop
or
xchg
mov
clc
pop
mov
jle
jl
xor
out
xor
ds
push
int3
sub
cmps
pop
(bad)
loop
and
mov
add
in
push
push
jp
pop
stos
aaa
and
outs
mul
cdq
mov
push
repz
dec
inc
cmp
sub
pop
pop
inc
mov
call
push
(bad)
and
push
(bad)
jecxz
pop
xchg
(bad)
repnz
mov
pop
pop
sbb
call
clc
fcmovnbe
std
jle
jae
cmp
cmp
jecxz
popa
inc
jg
xchg
cmp
cmps
loop
popw
fadd
xor
loope
fdiv
pop
loope
jmp
mov
(bad)
pop
adc
mov
pop
jecxz
jb
sbb
xrelease
xchg
jmp
mov
daa
jmp
sbb
xor
sub
out
pushf
mov
shr
pop
xchg
mov
dec
jns
and
sub
mov
sub
ja
nop
ficomp
sub
sub
aaa
fidivr
in
jmp
lods
xchg
push
into
or
dec
sar
call
xchg
out
cmp
retf
or
lock
and
arpl
adc
movs
inc
mov
and
adc
jae
neg
and
push
mov
aaa
clc
and
cli
dec
inc
lea
or
sbb
pop
rcl
jle
dec
or
(bad)
imul
push
movs
mov
and
repnz
stc
enter
mov
dec
inc
in
xchg
test
data16
mov
cs
repnz
fwait
loope
push
(bad)
fild
in
retf
dec
xlat
mov
mov
cmps
sub
cwde
mov
int
scas
xchg
push
outs
push
adc
push
nop
enter
cmps
inc
push
xor
cdq
jnp
ja
leave
repnz
jo
in
shl
bound
cmp
xor
jb
mov
mov
outs
cmps
cmp
xor
lock
icebp
mov
outs
cmp
jmp
or
call
scas
pop
pop
enter
daa
mov
cwde
retf
mov
push
icebp
sbb
mov
ins
xor
lahf
scas
push
sbb
add
xor
pop
sbb
adc
cli
imul
push
ficom
movs
js
add
ret
mov
jmp
in
jb
outs
push
mov
inc
shr
jmp
jne
inc
fsub
dec
cmp
push
xchg
xor
add
movs
dec
std
test
sahf
mov
push
and
test
mov
sbb
or
sbb
outs
or
into
jg
xchg
aam
xchg
mov
into
mov
adc
test
jg
jge
add
stos
mov
outs
aas
inc
movs
scas
out
rol
dec
in
je
adc
or
call
or
xor
nop
data16
sbb
push
or
add
jae
std
sbb
sbb
sub
xor
test
fdiv
cmp
daa
nop
adc
pushf
and
call
xor
jns
push
call
call
mov
fldenv
inc
loop
or
je
test
inc
mov
push
call
push
cli
out
xor
out
fistp
sub
adc
fidiv
inc
sub
xlat
jp
push
repz
call
fld
jno
lds
cdq
sbb
lea
push
pop
aaa
in
imul
test
xchg
stos
mov
ret
inc
sub
mov
arpl
mov
je
xchg
cmovae
punpckhbw
in
push
dec
push
push
cmc
mov
out
test
inc
add
leave
lods
fwait
adc
jp
mov
mov
sbb
fisub
or
sub
gs
pop
jmp
mov
cwde
pop
stc
push
dec
adc
stos
(bad)
loope
add
lods
ror
in
in
adc
sbb
enter
mov
sub
sub
int
sbb
movs
mov
pop
sti
outs
nop
in
cmp
imul
into
pop
movs
fsub
ins
xchg
mov
push
(bad)
mov
cmp
adc
lods
xchg
dec
mov
cs
inc
dec
cmp
xchg
dec
test
mov
mov
inc
(bad)
movs
popf
xor
into
imul
cmc
retf
icebp
sub
lds
mov
add
lock
dec
pop
call
imul
lods
and
add
dec
test
push
icebp
stos
in
mov
les
movs
and
ja
and
int
dec
ds
and
or
xchg
imul
mov
ja
in
xchg
mov
gs
scas
scas
js
(bad)
fld
inc
mov
in
inc
inc
push
xor
out
and
mov
jge
out
push
mov
push
xchg
outs
push
scas
xchg
cwde
push
repz
push
in
pop
jno
pushf
cwd
iret
pop
dec
dec
xchg
add
or
or
add
ins
cmp
fnstsw
add
jle
daa
leave
inc
sahf
ss
out
push
ins
ins
fistp
jo
cld
pop
in
inc
inc
pop
dec
in
cmp
scas
daa
test
xor
push
cmp
inc
sub
out
mov
sub
jae
cmc
xor
adc
dec
add
dec
inc
jbe
jnp
or
ror
and
pop
pop
(bad)
out
add
(bad)
jno
jb
fld
mov
jl
call
push
xchg
push
outs
out
xchg
sub
clc
xchg
loope
mov
retf
lods
adc
sbb
or
in
cmp
std
loop
stos
add
pop
jl
xchg
cmp
mov
repz
movs
rol
xchg
inc
or
fldln2
movs
(bad)
pusha
sub
push
sbb
mov
mov
jb
and
stos
out
out
mov
dec
les
out
sub
fstp
stos
mov
test
cmps
aaa
pushf
or
cmp
lods
and
add
add
xchg
jecxz
and
pop
shl
pop
sub
push
fst
int3
add
adc
adc
rcl
adc
les
jbe
xchg
xor
(bad)
outs
test
outs
cmc
mov
out
xor
cmp
popf
jb
movs
pop
sbb
icebp
cmc
dec
cmp
rcr
test
or
pushf
push
push
dec
data16
or
push
das
jg
jg
inc
sahf
enter
jo
cwde
dec
cwde
pop
cld
(bad)
popf
or
sbb
outs
inc
rol
jge
add
es
scas
cmp
leave
adc
int3
arpl
out
sub
lea
xor
ins
cmc
push
adc
adc
cmps
in
(bad)
outs
jae
sub
rcr
jmp
(bad)
pop
dec
or
sbb
push
in
repnz
xchg
aam
out
pop
retf
test
imul
es
sti
(bad)
in
fadd
dec
add
add
in
or
jnp
ja
inc
out
adc
lahf
pop
adc
mov
or
lods
imul
sub
lods
jno
xor
mov
sbb
mov
and
and
and
icebp
sbb
mov
mov
pop
push
inc
std
pop
(bad)
mov
add
pop
cmp
das
pop
dec
(bad)
pop
dec
jmp
jl
pop
stos
fdivr
stc
pusha
imul
sbb
inc
jl
add
(bad)
mov
test
daa
ret
cmp
shl
xchg
xchg
fmul
test
jnp
mov
in
popf
mov
and
mov
icebp
push
lahf
dec
xchg
ret
out
sti
xchg
lods
sbb
xor
sbb
inc
popa
push
aaa
adc
xlat
xchg
scas
ins
and
test
fstp
aaa
sbb
sbb
add
jp
scas
mov
ins
push
fidiv
fwait
test
xchg
outs
pusha
pop
inc
inc
test
clc
aaa
or
push
inc
stos
push
cli
int3
pop
xor
loop
les
adc
dec
daa
(bad)
rcr
cmp
mov
(bad)
or
or
in
mov
jno
pop
aas
adc
in
xchg
mov
(bad)
mov
sub
or
or
sub
dec
push
lahf
xchg
cmp
addr16
fmulp
cmps
in
in
loope
cmp
pushf
lds
jbe
frstor
inc
jo
jle
mov
mov
jo
mov
add
mov
jb
sti
popf
and
adc
pop
push
(bad)
jecxz
sub
mov
ss
mov
sahf
jmp
cld
xchg
xchg
test
hlt
loop
int
xchg
psubusb
std
in
push
popf
and
je
shl
pop
sub
sbb
jecxz
jg
inc
mov
sub
das
out
aas
pop
cmc
jmp
inc
push
push
mul
test
ss
stc
xchg
or
hlt
fisubr
scas
mov
jge
cmp
fs
or
mov
sub
enter
sar
jp
das
aas
pop
loop
mov
jecxz
scas
int
push
jbe
lock
adc
jge
sub
bts
push
scas
cs
push
pop
jns
xor
lahf
fld
int
push
(bad)
(bad)
outs
cli
test
push
adc
fwait
rcr
outs
ficom
adc
aas
jae
arpl
jne
pop
cmps
fistp
mov
sub
sub
jne
mov
int
mov
add
loope
fwait
or
fbstp
pop
mov
ret
pop
arpl
jno
arpl
push
push
(bad)
(bad)
pop
and
sbb
sub
or
mov
xchg
pusha
outs
xchg
jae
xor
sbb
or
push
fidivr
dec
cmp
jb
test
sbb
xchg
int
xor
in
or
fisub
repz
mov
jns
push
mov
aas
aam
movs
xor
cli
jo
ja
xchg
addr16
jo
sbb
ja
imul
and
cmp
xchg
test
je
jns
enter
hlt
sub
inc
outs
enter
movs
or
add
hlt
jl
pop
sbb
mov
mov
mov
mov
sub
loopne
push
pop
xor
stc
sub
bound
sti
sub
cmp
mov
in
jecxz
mov
(bad)
adc
inc
(bad)
lods
mov
inc
jne
jns
in
into
jns
adc
sti
push
jmp
outs
stos
pop
push
retf
les
inc
xor
and
dec
aaa
loop
mov
movs
retf
iret
cmp
fs
out
stos
cmp
imul
mov
gs
mov
adc
mov
sbb
mov
inc
push
iret
stos
or
sub
pop
pusha
jb
cmps
inc
mov
adc
pop
fcmovu
add
sbb
in
xchg
sub
mov
jp
push
pop
rcl
rcr
jbe
je
jp
inc
nop
sub
ucomiss
popa
cmp
cmp
fwait
retf
fcmovbe
ja
retf
ret
add
retf
jne
test
pop
or
jp
cmp
fsubr
icebp
mov
or
dec
add
sub
movs
add
add
pop
fbstp
sbb
push
cmp
mov
cdq
mov
inc
stos
test
mov
xor
test
call
mov
add
int
in
sbb
pop
and
je
fdivrp
mov
loope
repnz
scas
aam
mov
add
cmc
or
and
ins
retf
retf
add
test
mov
sub
repnz
shr
or
push
and
pop
jne
in
push
or
xchg
(bad)
gs
and
mov
aad
inc
mov
test
adc
pop
push
in
pop
sbb
fisubr
sbb
fs
push
rcl
mov
cmp
pop
inc
aaa
pop
pop
ret
cwde
cdq
leave
adc
retf
or
adc
pop
mov
loope
dec
hlt
enter
and
ins
loope
xor
pop
fucomp
and
rcl
mov
push
das
jb
neg
push
repz
pop
cmp
in
add
push
dec
test
test
or
and
jne
or
iret
sbb
ds
(bad)
cmp
into
mov
dec
hlt
add
dec
inc
leave
add
xor
(bad)
leave
jnp
sub
mov
dec
mov
adc
div
xor
sbb
ret
(bad)
(bad)
mov
mov
mov
ret
jmp
sbb
pop
xchg
xor
stc
mov
call
push
jne
pop
ficom
retf
imul
test
jge
or
lds
cmp
xchg
ja
sub
add
xchg
int3
fst
xchg
sar
jmp
jb
inc
in
nop
fstp
sbb
mov
out
lock
out
jmp
mov
leave
push
les
movs
icebp
es
mov
das
cmp
add
jmp
popf
enter
or
dec
lods
push
jge
mov
test
inc
push
stc
jl
jnp
mov
enter
push
stc
int3
and
js
inc
sub
xchg
xor
jmp
arpl
xchg
push
mov
pop
mov
lahf
ror
mov
popf
or
dec
data16
repz
hlt
enter
sahf
jnp
das
aam
xchg
scas
mov
cmp
in
mov
pop
loop
add
push
push
jo
fcom
mov
xchg
hlt
jg
fadd
mov
aad
dec
sahf
mov
rol
fucomip
mov
xlat
push
inc
(bad)
into
std
mov
lea
mov
shl
xor
rol
lock
mov
inc
or
aaa
adc
push
call
cmp
jge
jbe
push
inc
retf
in
in
scas
(bad)
arpl
push
inc
sub
mov
je
retf
(bad)
add
out
in
outs
inc
xor
mov
or
pop
and
dec
or
inc
push
(bad)
ins
xchg
xchg
sbb
ja
ret
adc
jl
scas
xchg
cmp
call
cmps
ins
mov
pop
stos
in
cli
icebp
in
stos
jnp
sub
jo
ins
xor
jmp
fst
add
xor
popf
pop
rol
dec
jl
ins
mov
mov
jge
scas
inc
jecxz
dec
sub
cmps
aam
cmc
in
je
scas
dec
(bad)
jmp
and
stos
inc
sbb
xchg
xchg
test
add
mov
retf
push
imul
call
jae
or
test
pop
rcr
mov
sti
stos
pop
sbb
pop
dec
cmp
dec
pop
inc
jne
xchg
jp
push
and
pop
mov
jle
xor
in
inc
and
pop
sbb
cmp
adc
(bad)
jbe
jo
jns
pop
xor
xchg
mov
xchg
test
fsubr
dec
dec
jecxz
push
xor
adc
cmps
dec
push
mov
nop
mov
(bad)
cwde
ins
popa
inc
fwait
jbe
jmp
pusha
lods
icebp
mov
int
(bad)
mov
cmps
or
push
mov
cwde
call
and
cmp
jno
sbb
mov
loope
in
sbb
aad
mov
retf
shl
shl
dec
sub
or
in
jle
sahf
xchg
mov
sub
mov
xor
or
fst
xor
mov
add
aaa
mov
mov
aas
cmp
mov
adc
sbb
cmp
xchg
jae
cli
ds
lock
mov
ja
mov
das
xchg
xchg
loopne
test
adc
retf
les
and
imul
or
retf
xchg
lods
out
mov
mov
mov
(bad)
jb
sar
cmp
mov
sbb
and
daa
and
test
cmps
sub
cmps
mov
sbb
or
ds
(bad)
or
js
or
xchg
lds
jae
es
scas
mov
mov
dec
ss
scas
push
icebp
cmp
inc
sbb
sub
cmp
mov
push
test
call
sbb
push
nop
xor
shl
arpl
sub
scas
fwait
mov
or
pop
fsub
or
gs
js
jbe
pop
cmps
data16
cmp
daa
xchg
aaa
(bad)
cwde
jl
jmp
and
inc
(bad)
shl
dec
dec
xchg
sbb
xor
dec
loope
xchg
lods
ror
inc
lods
call
inc
mov
inc
push
pop
(bad)
mov
or
pusha
fbld
inc
or
adc
sbb
push
push
adc
repz
mov
push
jecxz
inc
inc
pushf
push
mul
fstp
sahf
shl
ins
dec
xor
data16
call
movs
or
mov
adc
call
jge
sbb
es
jle
into
stos
retf
jns
idiv
pop
out
inc
adc
pop
jnp
fnstsw
aaa
retf
sbb
sub
inc
mov
push
ret
fld
jp
pop
sbb
je
nop
dec
jmp
pop
shl
mov
mov
hlt
push
popf
mov
movs
sti
shl
cs
xor
scas
mov
mov
(bad)
adc
sbb
adc
add
push
sbb
fldenv
jp
and
mov
dec
(bad)
into
or
retf
jbe
cld
shl
shl
dec
into
inc
mov
mov
push
push
mov
jge
mov
cmp
mov
mov
pop
push
std
pop
ss
aaa
xchg
aaa
jl
cwde
hlt
push
shl
xchg
mov
mov
das
xor
scas
push
dec
mov
outs
and
adc
sub
sti
lods
adc
push
push
pushf
ins
cmp
cmp
test
ret
icebp
ror
jno
nop
mov
lods
int
sbb
add
cli
bound
pusha
icebp
jnp
mov
cmp
jb
push
jb
fdivr
jg
iret
lds
and
or
pushf
inc
das
dec
mov
push
cmp
or
call
mov
shld
xchg
in
mov
jl
inc
sbb
je
movs
sub
pop
daa
cmps
repz
mov
(bad)
loop
cmps
daa
icebp
fisttp
out
int
mov
das
or
push
fild
mov
out
sar
pushf
mov
popa
iret
cmp
mov
in
das
mov
and
cwde
outs
test
rol
les
loope
xchg
into
(bad)
xchg
jecxz
mov
mov
shr
push
shl
xor
sub
stos
sbb
test
lea
out
in
aaa
add
push
scas
xchg
mov
clc
ret
mov
lods
or
jp
push
sbb
cmp
popa
mov
cmp
jns
lock
rol
cmc
iret
clc
jae
cmps
mov
xor
and
aaa
sub
dec
pop
push
push
push
push
pop
fs
cmp
jg
cmps
or
inc
pusha
pop
mov
stos
test
inc
and
mov
and
lock
ins
call
mov
sar
popf
jae
mov
pop
pop
test
data16
imul
fsub
outs
push
push
fcomp
(bad)
adc
cmps
out
fnsave
fisttp
frndint
(bad)
cli
sub
sub
ds
xchg
add
loop
std
lods
aad
add
retf
and
mov
xor
add
mov
mov
pop
jmp
push
pop
sahf
mov
jb
adc
sbb
push
in
mov
shl
call
call
mov
shl
inc
or
arpl
(bad)
dec
adc
xchg
ins
mov
in
mov
or
push
clc
add
fild
daa
fsub
sub
cs
mov
sbb
data16
dec
loop
aam
aam
or
jo
(bad)
sub
pop
jmp
jo
and
rcr
and
pop
loopne
int
pop
jecxz
pop
inc
or
outs
inc
sbb
xchg
pop
imul
test
add
(bad)
cli
mov
xchg
sbb
mov
adc
sbb
xlat
out
fwait
xchg
push
data16
push
xchg
inc
ror
aam
push
mov
mov
dec
int3
movs
adc
gs
jb
inc
push
mov
(bad)
test
int
loop
xchg
cs
mov
pop
dec
push
inc
rol
mov
cmp
stos
mov
ins
fs
fs
movaps
mov
and
sbb
ins
mov
jmp
add
ja
stc
inc
clc
and
mov
daa
and
stc
out
mov
push
test
cs
test
mov
shl
js
xchg
lods
popf
and
rol
sub
cli
add
or
push
mov
mov
ds
(bad)
jl
sbb
loope
mov
mov
fdivr
xchg
pop
out
loope
mov
sti
xchg
mov
(bad)
bound
push
stos
pusha
dec
out
pop
pop
pop
mov
push
push
aaa
mov
int
inc
dec
es
test
inc
mov
lock
mov
ror
mov
dec
push
xchg
or
jl
cli
mov
sbb
push
ret
push
push
addr16
ins
out
mov
add
sbb
daa
mov
mov
add
outs
jl
xchg
call
sar
out
cmp
mov
test
jae
outs
aam
jns
sbb
xchg
push
in
mov
mov
sub
stos
and
sub
js
jecxz
sbb
cmp
or
adc
outs
cmp
hlt
mov
test
push
jbe
and
mov
(bad)
xor
xchg
mov
lahf
pop
mov
ss
ds
pop
mov
sub
jne
imul
jae
mov
mov
jecxz
sub
mov
push
sub
outs
imul
adc
xchg
push
outs
mov
add
call
and
inc
push
inc
mov
fisub
push
repz
ror
fidiv
push
inc
adc
out
call
xor
xchg
repz
(bad)
jmp
mov
pushf
inc
inc
(bad)
fld
jae
call
mov
ja
test
fisttp
add
cdq
leave
dec
sub
add
jno
out
outs
(bad)
mov
jg
jge
movs
lock
add
push
(bad)
cmp
out
adc
fs
cmp
out
inc
mov
lods
xchg
adc
fs
fstp
retf
imul
pop
scas
out
sti
xchg
pop
bound
shl
pop
dec
sub
ins
jecxz
xor
pop
mov
adc
adc
and
pop
dec
cld
push
mov
fist
into
pop
clc
jne
inc
jg
push
scas
(bad)
push
popa
in
jge
mov
pop
stos
sbb
jl
fidiv
or
jp
pop
mov
outs
lods
test
pop
mov
stos
cmp
in
fld
jnp
int3
pop
cmp
jle
jecxz
(bad)
mov
ror
or
jo
cli
ins
adc
mov
in
popf
fistp
xchg
aas
mov
bound
test
sub
jae
enter
das
push
dec
inc
frstor
addr16
repnz
pop
les
xor
dec
sbb
fwait
stos
mov
dec
ror
jecxz
cdq
test
and
icebp
adc
cmp
std
icebp
arpl
sbb
sbb
inc
pop
sub
jle
int3
jbe
jne
iret
push
or
aas
int
inc
mov
stos
ret
xor
xor
xchg
dec
popf
(bad)
pushf
xor
stos
ja
xchg
push
inc
loop
or
test
mov
xchg
in
push
aad
aad
push
mov
js
add
fwait
dec
cmp
pop
sbb
mov
hlt
movs
mov
nop
jg
repnz
stc
xor
sub
pop
in
ret
jbe
les
add
nop
out
pop
lock
xchg
xchg
nop
xor
lods
sub
and
mov
shl
push
in
loopne
mov
and
inc
add
sbb
and
sahf
stos
int
mov
jg
cmp
dec
ret
int3
sub
push
icebp
sub
xor
mov
dec
aaa
mov
fsub
jne
mov
mov
fnstsw
mov
lods
mov
cld
test
in
sbb
xchg
pop
dec
sub
xor
jbe
or
ins
xor
xchg
rcr
pushf
cmp
sub
adc
retf
clc
mov
js
add
inc
mov
or
mov
stc
pop
retf
aam
(bad)
or
mov
cmps
sbb
icebp
sti
das
xchg
scas
cdq
xor
test
in
mov
dec
add
jp
mov
(bad)
stos
mov
dec
mov
jo
mov
ret
mov
mov
sar
push
mov
xor
xchg
sbb
mov
stos
pop
adc
sub
mov
cmc
out
imul
imul
cmp
call
push
mov
jnp
sub
rcr
jl
stos
leave
inc
mov
dec
gs
cwde
dec
dec
loopne
mov
ror
cmps
adc
cmp
out
inc
dec
adc
lods
pop
add
aas
es
sub
enter
mov
inc
call
adc
mov
mov
stos
push
pop
ja
push
jge
pop
addr16
loopne
std
shl
mov
fwait
dec
mov
popf
les
enter
(bad)
push
dec
ins
stos
enter
fwait
nop
enter
enter
jo
and
xchg
dec
mov
xchg
sahf
mov
pusha
scas
fcomp
fadd
icebp
iret
outs
mov
int3
out
xor
add
loop
push
out
inc
jnp
adc
in
push
mov
rol
inc
mov
xlat
movs
(bad)
or
mov
mov
nop
enter
sti
add
call
stos
sub
adc
or
call
jecxz
lahf
mov
gs
xor
stos
ret
mov
cmp
adc
mov
shl
icebp
xchg
ja
jns
dec
repnz
push
jmp
dec
mov
dec
fsubr
mov
les
push
ror
inc
xchg
pop
ins
fs
mov
retf
dec
inc
loopne
jge
push
mov
retf
pop
scas
ds
jae
adc
(bad)
icebp
mov
cmps
jnp
add
and
lods
leave
(bad)
sub
jne
mov
ins
sub
xor
fcom
cs
xchg
pop
retf
aas
inc
in
sub
movs
stos
stos
in
ret
imul
mov
(bad)
push
inc
add
and
mov
iret
addr16
push
and
fnop
and
scas
leave
inc
bound
or
mov
(bad)
std
int3
mov
clc
pop
jecxz
idiv
cmp
inc
cli
cmp
shl
pop
dec
add
sbb
ss
mov
sbb
cmp
test
sbb
mov
xchg
and
push
add
lods
adc
cs
js
fmul
push
retf
fwait
push
dec
test
push
je
ss
stc
push
jb
or
mov
lods
or
inc
mov
movs
cmps
mov
fistp
xor
out
arpl
jnp
loopne
xor
inc
or
push
jbe
aaa
pmaddwd
add
mov
das
ffreep
ja
jecxz
arpl
aas
test
xor
loope
outs
and
aas
pop
pop
dec
cwde
aas
bound
fld
push
scas
inc
pop
out
xchg
mov
pop
mov
mov
add
pop
inc
xchg
enter
or
push
push
push
(bad)
addr16
je
add
pop
mov
hlt
das
or
jns
out
pusha
xor
jo
inc
sbb
fldenv
(bad)
xor
in
pop
xchg
mov
inc
mov
jns
push
aad
jecxz
js
xlat
mov
repz
out
(bad)
test
push
jo
push
(bad)
xchg
and
(bad)
mov
mov
inc
mov
jbe
jg
push
cmp
int3
pop
mov
adc
mov
outs
ins
inc
add
addr16
jne
inc
adc
adc
cmps
xor
int
adc
push
and
pop
in
jge
sub
push
jns
jno
mov
mov
addr16
dec
(bad)
addr16
cmp
xchg
fst
aaa
addr16
fdivrp
adc
aas
xchg
xor
dec
ins
mov
rol
push
aas
push
push
jo
loop
retf
std
pop
xor
mov
addr16
mov
leave
pop
pop
mov
push
cmc
xor
popf
xchg
xchg
xor
ins
xchg
push
cmp
lods
or
dec
xor
push
iret
jp
(bad)
arpl
std
shr
lock
mov
jne
mov
adc
cmc
jmp
call
and
fst
shl
xor
movs
shr
outs
rol
loopne
jb
std
aad
push
or
idiv
(bad)
call
loop
(bad)
push
jae
mov
sub
mov
and
cmps
add
pop
adc
adc
iret
sar
mov
cmps
(bad)
mov
mov
std
inc
pop
mov
outs
add
sti
lock
fstp
jmp
push
daa
out
(bad)
dec
add
or
cmp
xchg
jns
call
and
addr16
mov
test
mov
iret
add
xchg
jp
xchg
sbb
sbb
mov
cmp
jg
sbb
pop
mov
mov
push
dec
ins
cwde
push
shr
(bad)
and
or
int3
outs
daa
cmp
loop
test
xchg
outs
das
out
mov
jno
push
inc
ja
in
or
cwde
addr16
test
iret
adc
popa
push
push
scas
and
leave
stos
add
gs
mov
cmp
fidivr
cdq
pop
mov
lock
stos
dec
scas
inc
ret
pop
lods
push
sahf
and
sub
mov
jne
or
lahf
fisttp
aaa
cs
jmp
adc
mov
aaa
fcomp
jl
jne
xlat
mov
jnp
aad
xchg
scas
stos
int
daa
pop
in
mov
in
sbb
rcl
push
movs
adc
jae
mov
or
pusha
adc
div
dec
add
jnp
dec
xor
pusha
loopne
jmp
jge
pushf
cmp
fldz
mov
vpmaxub
cmp
gs
pop
jg
(bad)
cmps
imul
or
lods
adc
sub
lahf
jecxz
aaa
push
imul
push
xchg
mov
add
push
stos
aad
pop
fwait
arpl
and
mov
mov
mov
scas
jge
mov
mov
mov
data16
cli
cli
pop
mov
sub
(bad)
mov
(bad)
les
add
int
mov
mov
mov
mov
in
push
push
jns
(bad)
in
dec
push
retf
(bad)
movs
or
add
dec
jecxz
and
btr
or
ret
loopne
std
aad
xor
xchg
(bad)
or
sbb
adc
scas
lea
push
and
arpl
pop
clc
les
cmp
inc
das
push
rol
dec
fcomi
push
xchg
mov
call
mov
neg
stos
mov
xor
gs
mov
or
punpckhwd
adc
in
add
xor
mov
adc
(bad)
push
push
pop
pusha
movs
pop
clc
out
push
and
inc
std
add
sub
movs
jne
int
inc
or
mov
push
fwait
add
loop
test
and
test
stos
sub
shl
shl
mov
mov
imul
jae
ds
jne
in
movs
jns
and
sbb
mov
js
adc
mov
inc
dec
mov
sub
movs
cmp
out
fyl2xp1
fwait
pop
(bad)
dec
jmp
aad
push
out
push
fcom
xchg
jle
movs
ficom
mov
test
adc
sub
cmps
or
or
test
mov
lock
cmp
and
jns
xor
popf
mov
call
add
add
inc
add
cdq
ja
repz
cmp
mov
adc
imul
pop
scas
mov
call
mov
mov
int
aaa
jnp
retf
push
mov
ins
or
hlt
push
adc
adc
mov
jle
mov
mov
push
jmp
xor
stos
pop
inc
rcr
mov
scas
popa
cmp
cmp
stos
mov
push
mov
in
sub
cmp
push
mov
aas
imul
cmps
(bad)
jl
call
lea
int3
xlat
jb
repnz
(bad)
hlt
sahf
int
pushf
(bad)
hlt
pop
mov
add
in
pop
in
rol
add
or
fisub
sub
sbb
mov
adc
pushf
mov
rcl
mov
fs
cmp
xchg
pop
mov
mov
dec
shr
ins
cmovp
lock
mov
mov
mov
out
sbb
aam
jae
nop
mov
ds
div
push
add
sub
sbb
pop
dec
aad
clc
push
mov
loopne
scas
fmulp
inc
sbb
je
data16
mov
popa
call
(bad)
mov
lahf
fnstenv
and
jl
jne
or
jmp
shl
cmc
jmp
int3
pop
lds
dec
mov
fmul
cmc
sbb
jno
jle
loope
ins
stc
ss
leave
and
jnp
mov
jne
push
outs
push
into
mov
dec
mov
lods
fs
sbb
mov
sub
inc
test
(bad)
cli
xor
cld
popf
xchg
adc
jmp
pop
and
jne
sahf
lock
fisttp
jmp
hlt
sub
push
cmp
inc
mov
sub
popf
cmps
lods
push
into
(bad)
sub
adc
jae
xchg
test
lods
imul
pop
pop
mov
jae
loop
in
and
std
jge
sbb
out
sbb
add
test
lods
pop
push
shl
outs
jae
mov
mov
xchg
cs
leave
fcmove
and
cli
loopne
(bad)
lahf
pusha
xchg
cmp
std
pop
stos
jb
call
mov
xor
hlt
xor
mov
mov
xor
pop
ret
stc
jmp
inc
xchg
xchg
push
sub
adc
cwde
daa
inc
jo
push
sbb
fiadd
repnz
hlt
les
dec
xchg
mov
loope
fnsave
popf
pushf
inc
int
scas
imul
add
dec
fbstp
aas
sbb
or
or
movs
addr16
add
cmovne
ret
call
cmp
sar
stos
es
outs
dec
scas
jmp
dec
or
add
inc
add
loopne
(bad)
repnz
inc
or
sub
aas
xchg
cmp
stos
imul
sbb
and
push
retf
add
pop
xor
mov
cmp
imul
lods
lods
pop
mov
mov
xchg
or
out
rcl
test
imul
cmp
pop
sbb
mov
xor
cmps
in
mov
es
sbb
call
dec
sub
xchg
and
mov
xchg
ins
lds
into
aaa
dec
js
icebp
jae
jl
(bad)
add
mov
sub
xchg
jns
jo
nop
retf
int3
pxor
stos
(bad)
int3
push
add
xchg
mov
inc
jae
push
add
inc
mov
pop
lods
mov
add
cmp
cmp
jge
aad
push
rcr
push
gs
push
ja
xor
push
lahf
cmp
sub
pop
ret
mov
sahf
adc
outs
ins
imul
std
or
xor
adc
push
mov
and
add
xlat
sti
add
xchg
jecxz
mov
loop
addr16
sti
sub
bnd
std
addr16
and
mov
cmp
jb
xchg
outs
sub
sbb
sti
jg
ds
mov
or
sbb
stc
mov
cmovle
sar
pop
mov
sub
cmp
inc
aaa
add
ins
pop
or
test
xchg
lock
push
(bad)
jmp
sti
add
test
inc
add
bound
add
call
xor
std
aam
test
(bad)
adc
mov
push
jne
shl
xor
adc
jno
pop
sbb
mov
lock
fs
sbb
jbe
and
pop
xchg
(bad)
in
sbb
dec
mov
xchg
push
gs
out
in
mov
jne
sbb
jbe
lods
(bad)
mov
test
leave
inc
xchg
out
push
mov
out
(bad)
dec
aad
das
enter
xor
dec
in
in
jge
daa
adc
inc
xchg
lea
loope
pop
je
aaa
jmp
xor
mov
and
jo
mov
arpl
mov
pop
and
sub
jbe
pop
adc
mov
xchg
mov
ja
add
ins
lock
(bad)
mov
sub
retf
dec
ja
shr
sub
test
movs
sahf
pushf
push
fs
stos
lock
or
les
fisttp
cmc
cmp
sbb
popa
xchg
loope
lock
aad
push
(bad)
push
test
xchg
sbb
sbb
ss
fstp
stos
pop
pop
sbb
int3
add
or
mov
add
fist
(bad)
mov
cmps
or
xlat
test
jmp
sub
aaa
jmp
ror
push
or
sub
ret
iret
mov
pop
pop
bound
or
pop
and
mov
ins
xlat
stos
dec
jnp
dec
adc
adc
dec
cld
popa
fstp
pusha
(bad)
push
jecxz
jmp
xchg
cmp
test
lods
pop
retf
xchg
movs
rol
mov
cdq
push
std
stc
jae
xor
movs
jg
cmp
int3
mov
in
push
sub
jno
pop
lock
xchg
cmp
push
or
scas
mov
push
cmp
in
lods
mov
or
cmp
jno
mov
dec
xlat
fs
mov
inc
dec
and
aas
sbb
test
fidivr
aas
fmulp
std
arpl
jmp
dec
lahf
push
jmp
les
pop
mov
push
pop
dec
jbe
pop
jb
ss
int3
push
out
cld
push
sbb
fld
xor
ins
xor
jae
inc
cmps
add
xorps
xor
fadd
inc
test
push
or
int3
sti
mov
mov
out
push
int
add
(bad)
rcl
or
imul
inc
(bad)
clc
mov
jl
adc
inc
rol
(bad)
add
mov
es
adc
or
adc
in
(bad)
(bad)
mov
jmp
inc
dec
inc
daa
pop
xchg
mov
idiv
lods
jno
ja
inc
cmp
xchg
sbb
xchg
sub
ins
int
inc
stos
mov
mov
xchg
movs
aam
rol
mov
pop
mov
mov
mov
or
add
neg
outs
inc
pusha
lock
fstp
dec
add
ret
fldenv
mov
inc
sub
sbb
sub
sbb
enter
lea
in
clc
adc
out
rol
sub
hlt
jmp
(bad)
jmp
test
psubb
iret
rcl
movs
jmp
mov
ds
jecxz
arpl
mov
fiadd
mov
add
xlat
retf
ds
sbb
out
mov
mov
pop
cmp
imul
popf
pop
hlt
inc
shr
or
lea
(bad)
cs
mov
dec
loope
clc
add
(bad)
xor
xor
sub
in
shl
jecxz
pop
cmp
aam
mov
or
ret
scas
mov
ins
popf
dec
inc
xchg
push
jle
push
scas
mov
add
es
mov
inc
int3
sti
(bad)
aad
lods
or
xor
es
retf
(bad)
pop
add
push
mov
ins
cmps
mov
into
ins
outs
jp
pop
inc
pop
call
icebp
int3
add
xor
cmp
jns
lods
pop
jmp
add
and
arpl
push
lods
fiadd
dec
or
inc
push
(bad)
out
nop
xor
nop
(bad)
lock
mov
sti
add
dec
xor
sub
dec
pop
in
sbb
in
jmp
mov
mov
dec
mov
imul
or
repz
mov
rcr
xchg
dec
fist
jmp
push
mov
jno
jge
fdiv
stos
or
fs
dec
popf
mov
(bad)
jns
repz
(bad)
jns
cmp
fstp
sbb
jl
cwde
addr16
mov
outs
and
aas
cmps
fmulp
fwait
xor
mov
push
mov
mov
(bad)
es
add
adc
popf
pop
push
outs
inc
mov
fcmove
shl
pop
mov
or
xchg
jb
mov
pop
ds
out
call
fstp
fimul
iret
mov
retf
aam
out
push
sub
push
pop
mov
js
pop
mov
push
sbb
push
lods
shr
iret
ficom
call
xchg
fsubr
test
outs
pop
aam
fisub
loope
fcomip
gs
ja
cmp
or
int3
outs
mov
xchg
retf
mov
ds
jbe
cmp
push
and
adc
or
push
jae
retf
ja
add
fwait
or
jae
mov
ret
mov
jnp
imul
or
dec
std
enter
test
nop
sahf
aaa
mov
jmp
xchg
arpl
pop
mov
cmp
iret
jns
movs
aam
xor
cmp
je
push
xchg
sbb
mov
xchg
fwait
pop
fld
mov
retf
xor
pop
sub
std
sub
sub
fsub
xchg
inc
nop
dec
pop
lds
pop
enter
jl
cmp
inc
lods
iret
lods
inc
(bad)
mov
jae
cmp
repnz
add
ss
add
push
push
cmp
mov
mov
ret
push
push
or
in
inc
mov
inc
div
loopne
ss
stc
sub
mov
jne
jns
mov
pop
aad
fdivr
lock
push
mov
push
aaa
retf
fisub
adc
test
adc
fnstcw
inc
and
push
xchg
or
ds
add
sub
jne
add
push
dec
(bad)
mov
mov
xchg
jnp
pushf
push
add
jns
pop
add
loopne
mov
dec
xor
inc
pop
pusha
jp
jmp
or
aaa
aad
mov
push
adc
movs
xchg
push
mov
aad
(bad)
ror
mov
jnp
fisubr
pop
push
jmp
xchg
jl
out
mov
jg
(bad)
jns
rcr
sub
mov
mov
test
dec
test
les
xchg
sbb
fimul
adc
and
xor
adc
in
mov
jmp
or
out
push
ins
shl
sbb
movs
test
mov
jb
sub
jl
sbb
outs
cdq
popa
adc
add
cdq
jmp
je
enter
clc
js
stc
or
test
cmp
dec
mov
dec
fisttp
dec
fild
rcl
pop
rol
cmp
mov
mov
xchg
in
daa
dec
fnsave
adc
add
lahf
scas
adc
movs
adc
mov
inc
gs
mov
cwde
mov
aad
cs
out
cmc
clc
lahf
sub
lds
sbb
and
loope
sbb
cld
repnz
xlat
push
and
xchg
push
lock
add
xor
outs
je
stc
lock
xchg
mov
pop
imul
in
pop
retf
and
push
mov
imul
(bad)
cmp
shl
div
fidivr
push
jo
mov
iret
fwait
mov
popf
xchg
cmps
sub
jo
icebp
rcr
sbb
sbb
hlt
fidivr
pop
mov
xchg
ror
test
gs
jecxz
mov
adc
mov
pushf
fnstcw
fbstp
movs
stos
xor
jge
mov
or
pop
jns
cmp
sbb
in
scas
jmp
fistp
push
jl
cdq
inc
sub
sbb
cmp
shl
pop
mov
ret
mov
inc
xor
inc
fnsave
push
pop
fdivr
es
mov
inc
add
xchg
pop
xchg
sbb
dec
(bad)
stos
pop
loope
es
mov
push
repz
int3
adc
adc
sbb
pop
test
je
adc
dec
sbb
or
dec
stc
sub
lods
sub
and
and
iret
jae
je
aaa
mov
xchg
fmul
scas
ficom
sub
and
clc
jae
jecxz
mov
dec
aas
daa
shl
div
add
das
loope
push
mov
adc
(bad)
xor
in
xor
cmp
adc
daa
shr
ins
(bad)
add
mov
shl
xor
sbb
movs
aaa
add
sub
xchg
test
inc
test
ror
stos
add
enter
cmp
cmp
pushf
mov
push
pop
mov
out
adc
push
icebp
loopne
sub
out
arpl
pop
imul
popf
sub
adc
jo
mov
mov
mov
leave
push
inc
xor
adc
mov
sti
inc
add
cmps
mov
stc
in
xlat
push
and
adc
and
xchg
aas
mov
sbb
mov
fistp
pushw
out
push
jmp
mov
xor
ret
int3
mov
sbb
xchg
dec
cld
hlt
(bad)
push
push
sub
(bad)
cmp
movs
out
jno
jno
jl
(bad)
jmp
inc
retf
or
stc
jb
cs
retf
and
jo
xchg
fcmovne
push
call
loop
sub
aad
test
ret
mul
inc
inc
ins
test
lock
cli
cmp
dec
sbb
pop
test
int3
xor
sub
inc
push
or
pop
and
lods
mov
outs
imul
test
mov
mov
push
cmp
stos
push
dec
bound
sub
mov
rcr
add
jnp
sbb
add
and
or
mov
jmp
movs
imul
jg
pop
push
test
mov
mov
mov
fdiv
rep
inc
in
xor
mov
push
xchg
xchg
add
hlt
cmps
jbe
mov
sub
mov
xchg
lds
adc
call
mov
sub
lods
movs
daa
jl
or
je
mov
xchg
int
retf
cld
(bad)
xor
and
pop
push
fcomp
pop
inc
test
addr16
dec
mov
call
(bad)
aam
test
(bad)
scas
adc
dec
xchg
and
sub
pushf
fwait
cmp
popf
jne
and
jp
js
xchg
mov
dec
sbb
mov
shl
cmp
aad
and
mov
adc
lds
pop
sub
inc
in
jo
push
fldenv
cmp
movs
add
fsubr
inc
(bad)
(bad)
pop
pop
add
xor
sbb
jb
push
arpl
push
loope
gs
inc
cmp
sub
sti
pusha
pushf
sub
add
shl
pop
std
imul
cld
cmps
pop
mov
inc
mov
and
and
nop
push
ins
push
xor
jno
pusha
shl
push
inc
mov
pop
js
jmp
jg
ins
jb
push
mov
jae
mov
loope
movs
test
shr
mov
lock
fbld
mov
jge
leave
mov
and
sub
std
cmp
lea
enter
sbb
mov
mov
fsub
mov
fwait
lods
sub
sub
push
je
cmp
xor
cmp
adc
outs
adc
jmp
inc
jo
cmp
in
mov
add
fld
vpmuludq
cmps
and
scas
or
push
pop
scas
and
cmp
stos
call
mov
rol
sub
cli
add
cmp
js
pop
stos
loope
push
in
mov
pop
scas
push
add
jp
xor
movs
ds
arpl
dec
shl
mov
nop
daa
push
jecxz
push
cli
cdq
mov
out
inc
pop
mov
pop
xor
pop
imul
cmp
mov
movs
mov
pop
push
mov
ror
jp
ss
loopne
sub
adc
or
sbb
imul
ins
pop
pushf
pop
and
inc
adc
push
lods
add
shr
gs
mov
inc
push
imul
adc
mov
jp
jns
dec
ret
or
arpl
lahf
inc
push
add
xor
push
cmps
pop
test
cli
dec
pushf
mov
mov
xchg
aad
xchg
jns
aaa
out
scas
dec
pushf
mov
sbb
addr16
sub
mov
xor
push
push
(bad)
repz
pop
sbb
fidiv
fist
add
jecxz
inc
mov
cmc
lds
jl
pop
push
inc
jo
cmp
adc
mov
aas
sbb
dec
test
ins
xchg
pop
pop
sub
fisubr
mov
adc
jb
jmp
dec
mov
cld
(bad)
adc
sar
dec
mov
je
fnsave
add
pop
inc
sub
int3
cmps
fidiv
cmp
mov
call
adc
and
ins
(bad)
mov
idiv
pop
dec
test
(bad)
mov
jge
(bad)
pop
inc
and
sub
push
push
lock
xor
jae
jecxz
xchg
jl
dec
std
cmp
jae
push
push
into
ins
push
fs
jne
add
dec
cld
jae
mov
in
cmp
dec
cmps
ffreep
jns
mov
into
scas
scas
idiv
adc
aaa
push
push
jmp
dec
cmp
cwde
scas
fs
pop
sbb
cli
out
movs
inc
(bad)
loopne
mov
iret
push
cli
dec
(bad)
lods
(bad)
ret
mov
dec
push
add
(bad)
sbb
je
int
jne
mov
xchg
fmul
fstp
inc
ja
or
stos
sbb
push
sub
lock
cmp
push
mov
add
aas
cwde
adc
div
and
js
xor
jecxz
add
pop
bound
pusha
jle
cli
xor
adc
mov
sbb
xor
sbb
jge
mov
in
mov
dec
mov
mov
dec
mov
sbb
lods
mov
jo
add
jmp
lahf
daa
mov
push
not
and
sub
push
ja
mov
aas
cmp
push
(bad)
scas
out
movs
jg
sti
cmc
sub
repz
inc
add
out
or
loop
pushf
js
dec
loope
out
bound
jmp
sub
lea
lea
lods
mov
inc
xor
inc
scas
jne
or
test
pop
aaa
xchg
pop
ror
pop
push
adc
xchg
cmp
add
cmps
ror
inc
in
ficomp
int3
and
clc
mov
dec
or
add
(bad)
repnz
dec
adc
or
mov
jle
fmul
sbb
dec
inc
push
jae
ja
sbb
lods
dec
jns
xor
push
sbb
lds
and
addr16
dec
sub
and
jno
shl
add
mov
ja
mov
in
dec
pop
sbb
mov
dec
xlat
sub
sbb
cmp
and
in
sti
xlat
and
cmp
repz
les
movs
aam
cmp
addr16
lds
cmp
out
xor
cmc
fiadd
into
jmp
lods
pop
pop
(bad)
fstp
inc
shl
mov
mov
int
aam
add
hlt
mov
sub
xlat
loope
jle
push
js
xchg
dec
mov
push
aam
movs
and
cdq
cmp
mov
pop
xor
in
pop
ds
rol
sahf
loope
lea
cmp
add
fs
das
clc
sub
pop
mov
lahf
stos
mov
push
nop
push
sbb
popa
call
push
jo
movs
and
mov
mov
push
push
ficomp
fimul
and
pop
ins
(bad)
lea
ds
lods
daa
mov
dec
loopne
fwait
enter
mov
out
dec
rcl
inc
or
cs
jo
mov
or
mov
dec
push
aad
imul
btr
rcl
sub
add
jns
addr16
in
pop
mov
or
pop
pop
into
cmp
sbb
and
dec
out
and
retf
lock
sub
cmps
sub
and
bswap
dec
out
cli
cld
inc
dec
bound
in
cld
test
ret
jl
mov
dec
out
repz
dec
add
shl
fst
push
movs
mov
sbb
je
pop
mov
pop
cmp
movs
mov
and
inc
push
lods
ja
fnsave
fld
rol
retf
in
pop
je
cdq
mov
in
lock
call
sub
pop
out
mov
retf
ja
pop
outs
sub
dec
add
imul
mov
pop
jb
dec
and
and
mov
ret
outs
push
fadd
stos
push
std
jbe
jmp
push
cdq
xorps
in
test
comiss
shr
enter
rol
adc
retf
sub
mov
fwait
or
fadd
mov
fisttp
jl
lods
jle
mov
aas
call
ds
rcl
and
lock
hlt
ins
inc
jb
push
adc
xor
ror
mov
pop
xchg
jge
cmp
mov
mov
push
sahf
ins
ror
pushf
jle
adc
mov
(bad)
xor
aad
or
aaa
lahf
add
dec
mov
in
push
and
xor
pusha
mov
and
dec
xchg
add
or
xchg
js
test
sub
and
jmp
cmps
pop
sub
and
lods
stos
mov
mov
or
and
stos
jmp
ror
xchg
xor
jecxz
mul
adc
sbb
stos
clc
and
repnz
fs
jl
int
add
adc
xor
scas
cs
mov
adc
adc
aad
fcom
xchg
push
lds
aaa
(bad)
sbb
movs
cdq
push
leave
mov
ror
pushf
(bad)
out
sub
xchg
into
jecxz
imul
add
or
inc
in
mov
repz
cld
fcmove
dec
xor
mov
ret
mov
ins
loop
ss
call
pushf
nop
call
dec
fdivr
cmp
dec
ss
add
pop
mov
mov
or
sahf
scas
mov
xchg
and
or
mov
fiadd
retf
and
mov
xchg
test
inc
adc
pop
sub
cmp
mov
mov
and
mov
inc
push
sbb
jno
mov
pop
push
stos
out
jmp
or
jne
(bad)
ret
out
mov
fidivr
inc
cmc
and
fdivr
stc
sub
mov
pop
jae
scas
xchg
lock
jbe
sub
or
push
pop
xchg
pop
xlat
stc
sbb
mov
inc
xor
mov
test
sti
mov
data16
call
add
test
add
movs
lds
gs
mov
in
push
adc
inc
ret
js
loope
int
xchg
fst
mov
pop
in
pusha
popa
fst
jg
bound
je
pop
in
in
adc
aad
lock
sbb
mov
aam
ds
dec
push
mov
cmps
(bad)
mov
loopne
add
xchg
inc
idiv
shl
dec
mov
enter
xchg
mov
fadd
je
add
pop
push
imul
outs
xchg
dec
imul
sub
stc
aas
push
mov
add
(bad)
sbb
pop
in
outs
mov
push
arpl
or
pop
loopne
sti
pause
add
loopne
dec
ins
outs
push
js
add
mov
popa
xchg
pop
mov
xlat
retf
pop
mov
(bad)
xchg
shl
scas
pop
adc
scas
and
pop
and
arpl
sar
test
jo
les
sbb
imul
and
test
inc
sbb
add
add
cs
sar
push
and
dec
add
or
jg
push
cmps
dec
je
lods
cmp
adc
stos
aam
xchg
mov
jb
es
into
sbb
or
add
repz
aaa
fiadd
cmps
pusha
jmp
adc
xlat
mov
or
mov
add
push
jecxz
mov
adc
cs
in
cmp
add
cdq
pop
iret
movs
cmps
leave
ja
fwait
jno
lds
push
fidivr
and
in
push
mov
push
push
into
add
mov
iret
pop
xchg
stos
movs
mov
xor
or
pop
pop
or
sbb
shr
dec
sub
mov
push
jnp
xor
pop
out
stc
fcomp
xchg
adc
pop
xor
fldcw
xchg
xchg
jle
dec
into
xchg
out
bound
xor
inc
xchg
dec
arpl
xchg
fimul
xor
mov
hlt
test
ret
and
mov
adc
ret
inc
int
sbb
dec
retf
jnp
fdiv
fiadd
test
mov
lods
and
shr
ret
fadd
mov
into
aad
es
add
enter
sbb
cmp
mov
mov
cmp
loop
jne
xchg
dec
dec
inc
and
jmp
dec
adc
xchg
inc
xor
jge
or
sub
mov
aas
jb
cwde
push
jno
or
imul
push
mov
mov
aam
std
sub
pop
sbb
loopne
icebp
mov
sub
jge
lahf
sbb
mov
add
or
dec
add
addr16
setge
mov
mov
adc
sbb
aam
sbb
sbb
les
xor
mov
mov
or
pop
mov
shl
pop
iret
or
push
mov
mov
pop
cmp
push
fs
loop
push
push
mov
icebp
gs
jo
pop
adc
lahf
add
dec
add
loop
shr
popa
fs
fldenv
jne
imul
xor
mov
mov
loope
iret
lahf
mov
xor
popa
jns
push
push
adc
out
cmp
cmp
adc
test
call
pop
(bad)
sub
pop
fldenv
and
adc
adc
leave
cli
pusha
mov
xchg
mov
mov
rol
call
xchg
cs
fucom
jmp
repz
jmp
sbb
jnp
mov
jmp
repz
xor
mov
lea
test
pop
mov
aad
cmovo
inc
inc
or
cwde
push
sbb
xor
icebp
daa
cli
push
(bad)
aaa
or
push
xor
fsub
mov
xor
lods
aaa
add
mov
ss
test
push
jge
xchg
xchg
outs
xor
(bad)
mov
fadd
jp
aad
fwait
cdq
cs
loopne
push
clc
adc
jo
repnz
or
icebp
imul
iret
push
or
mov
cmp
daa
and
dec
movs
mov
nop
scas
adc
xchg
xor
cmp
inc
sub
mov
sub
xchg
cmp
pop
cmp
into
jbe
pusha
jg
outs
ds
push
bound
cmp
ret
pusha
fdivrp
and
sub
and
push
jnp
shl
out
(bad)
test
push
test
xchg
sbb
test
movs
or
dec
mov
clc
shl
cmps
shl
push
gs
daa
popf
out
bound
fwait
out
cs
push
cmp
mov
or
pusha
test
adc
and
and
stc
adc
(bad)
mov
xchg
push
inc
int3
inc
icebp
cdq
jp
jecxz
push
jle
popf
imul
xchg
pop
jmp
mov
push
out
or
jge
lods
aas
jecxz
sbb
imul
sub
jle
adc
jnp
addr16
in
xor
sbb
mov
adc
aas
out
sbb
(bad)
sar
mov
popa
mov
daa
movs
rcr
retf
dec
jae
outs
mov
cmps
mov
leave
inc
inc
xor
loopne
mov
in
leave
rcr
mov
cmp
add
dec
out
lods
mov
in
mov
stos
jg
arpl
sub
jl
iret
adc
sub
adc
stos
adc
dec
test
cld
and
cld
ficomp
hlt
cmc
sahf
arpl
inc
ins
jg
xchg
cmps
cmp
dec
loopne
sbb
add
dec
fild
xchg
dec
push
loop
pop
(bad)
sub
push
add
mov
imul
pushf
inc
xor
inc
in
inc
inc
fbld
aam
push
fld
cmp
push
adc
xchg
cmp
push
in
out
in
imul
dec
das
push
repnz
std
pop
ds
ins
jg
adc
pop
xor
std
dec
push
out
jbe
or
mov
sbb
mov
dec
sbb
outs
or
in
hlt
inc
lahf
popa
cmp
xor
js
ror
jg
movs
inc
xchg
mov
test
std
xchg
or
in
push
xor
cmps
pop
xor
jle
jecxz
xchg
sub
xchg
cmp
cmp
outs
dec
lock
pop
mov
jne
ret
fnstcw
pop
(bad)
je
inc
imul
adc
rcl
pop
adc
sbb
adc
push
in
xor
cs
and
jp
shl
aaa
idiv
es
xchg
push
int
xchg
das
(bad)
xlat
mov
inc
adc
sar
sbb
lds
xchg
mov
push
jne
push
pusha
dec
dec
out
pop
cmp
ror
pop
inc
dec
sbb
outs
mov
fdivr
push
inc
loope
cmc
cmp
mov
xchg
nop
or
inc
inc
lea
cli
or
mov
shl
std
xor
push
dec
out
inc
lods
inc
movs
sar
stos
jle
or
(bad)
(bad)
sar
adc
cmp
lods
sbb
retf
inc
dec
pop
add
xlat
add
push
sbb
leave
cwde
mov
pop
iret
sub
cmps
push
xchg
push
cmps
arpl
popf
sub
pop
retf
lods
sbb
push
je
pusha
xor
inc
pusha
add
jecxz
mov
pop
mov
(bad)
(bad)
sti
adc
sub
jl
(bad)
pushf
jle
inc
stos
mov
push
cmp
xchg
jmp
pop
inc
mov
xor
or
mov
scas
ret
loopne
and
daa
xchg
pop
pop
inc
movs
push
sbb
lock
sbb
inc
jmp
(bad)
mov
mov
pop
stos
lahf
fidivr
cli
sar
push
mov
push
retf
or
cmp
rol
lahf
push
add
mov
pop
call
pop
sub
mov
or
fadd
popa
and
stc
dec
retf
mov
dec
push
jmp
idiv
pop
in
shr
retf
aas
test
mov
dec
mov
mov
cmc
jecxz
aam
jg
sbb
aad
xor
mov
fdiv
inc
or
or
jne
cli
xchg
cmp
mov
and
mov
loopne
and
mov
(bad)
fnsave
dec
add
out
icebp
bnd
call
pop
cwde
pop
xchg
xor
ins
jp
clc
pop
xor
push
or
mov
xchg
adc
rol
(bad)
push
and
ja
(bad)
call
pop
jmp
int3
push
jl
xchg
test
or
int3
add
pushf
add
add
inc
adc
pusha
popf
retf
aas
popa
push
push
rcr
xor
cmps
retf
sahf
repnz
test
shl
es
fild
sub
dec
push
clc
mov
dec
mov
pop
sar
(bad)
pop
add
ins
sti
nop
mov
lds
mov
push
xchg
sbb
movs
xor
cli
mov
inc
es
das
xchg
jmp
sbb
mov
sbb
out
test
or
ror
rcr
jb
add
call
add
and
rcl
repz
scas
test
mov
and
xchg
repnz
cdq
xor
push
out
int3
int3
mov
xor
inc
or
xchg
out
push
mov
les
adc
stos
shr
ja
push
imul
stos
fsub
loop
cmp
out
xlat
fsub
push
jle
lock
cli
fimul
jnp
sti
jns
add
jg
push
fdivr
outs
xlat
mov
aas
lea
sbb
cmp
xchg
add
xabort
jmp
dec
das
jmp
add
(bad)
mov
mov
aam
dec
test
daa
inc
cmps
jmp
mov
push
in
jns
imul
fnstsw
adc
gs
xchg
jbe
(bad)
xor
jl
icebp
shl
dec
mov
sbb
jo
jmp
and
xchg
cmp
sahf
pusha
and
loope
(bad)
cli
repz
push
adc
xchg
test
(bad)
enter
mov
test
mov
inc
cdq
(bad)
loope
out
and
mov
lds
pop
push
push
fldenv
aad
jbe
inc
inc
dec
xor
cli
sbb
sahf
or
or
add
dec
lea
xchg
fwait
stos
push
adc
in
pop
add
mov
push
adc
pop
xor
mov
inc
jb
hlt
sub
and
cld
cdq
inc
adc
add
int3
aas
adc
clc
(bad)
idiv
lahf
add
dec
cmp
out
adc
push
stos
adc
stc
in
test
sub
pop
push
sub
retf
scas
cwde
push
cmp
xor
inc
cwde
vpmuludq
push
ror
dec
mov
sti
push
push
xchg
mov
into
cmc
cdq
leave
add
ret
sbb
stos
loopne
mov
mov
jbe
mov
dec
pop
mov
jnp
jmp
and
add
mov
fwait
dec
cs
sbb
movs
jl
mov
and
int3
fistp
lock
aad
jae
mov
push
adc
cld
mov
xchg
fsubr
and
call
scas
stos
stos
int3
pop
rol
xlat
fwait
es
xchg
mov
ss
cmc
sbb
sub
(bad)
mov
cmp
popf
dec
inc
loope
fnstsw
jno
mov
or
jmp
enter
cmp
fimul
or
sbb
xor
adc
pop
sti
outs
rcr
cmc
mov
mov
mov
cmp
sub
data16
out
cvttps2pi
icebp
fwait
dec
clc
iret
or
test
jge
outs
mov
mov
out
das
lock
mov
or
xchg
push
or
retf
cmp
mov
xor
leavew
pop
arpl
mov
lea
dec
mov
fld
pop
add
test
cmp
loope
dec
test
mov
xchg
lods
gs
inc
mov
imul
inc
bound
out
mov
(bad)
neg
cmp
mov
add
bound
jmp
(bad)
push
sub
arpl
or
scas
add
ds
daa
dec
xchg
xchg
(bad)
in
xor
cld
add
lds
cmc
cmp
inc
push
shl
lds
in
scas
hlt
jne
push
xor
mov
test
cmps
push
xor
jae
pop
sahf
vunpcklps
sub
shr
imul
mov
mov
mov
pop
or
div
mov
aas
jp
jb
pop
xchg
mov
jl
ds
ja
pop
fwait
push
retf
fwait
in
lds
aam
rcl
push
aad
mov
icebp
out
test
jae
sub
and
js
popf
in
(bad)
mov
add
ins
push
(bad)
cmps
rol
(bad)
das
ins
mov
(bad)
or
or
jae
adc
jae
push
pop
jb
push
mov
popa
mov
add
or
sub
pop
test
dec
or
mov
inc
adc
lahf
hlt
popa
jno
pop
out
mov
pop
push
xchg
dec
sub
iret
mov
xor
fnstenv
inc
push
call
sbb
jbe
test
cmps
add
xor
sbb
push
or
stc
ins
and
add
mov
adc
test
push
fwait
lock
fs
test
retf
cmp
pop
cmp
int
aas
xor
dec
(bad)
shl
shr
mov
jg
mov
sub
fild
cmps
fwait
lahf
loope
outs
in
push
cli
mov
push
test
lahf
fcomp
mov
dec
rol
int
(bad)
push
adc
in
inc
out
clc
scas
dec
jge
xchg
loop
je
das
add
inc
test
imul
aad
push
outs
repz
mov
iret
dec
loope
sub
cli
fs
cmp
push
jg
push
pop
scas
add
outs
cwde
daa
sbb
hlt
dec
dec
fild
inc
imul
retf
sub
push
push
nop
sbb
jg
mov
jl
into
mov
sbb
xor
or
mov
adc
mov
js
add
pop
ret
sbb
pop
outs
jbe
pushf
loopne
mov
rcl
cli
xor
xchg
fs
(bad)
aas
push
lods
(bad)
cmc
add
and
mov
pop
sub
adc
and
cmp
mov
sub
cmp
sbb
idiv
fisttp
icebp
add
and
lock
cmps
les
inc
cli
pop
sub
and
or
pop
test
ds
gs
jl
inc
jne
pop
add
xchg
ror
outs
loop
xchg
xchg
sbb
or
mov
sub
lock
cmc
xchg
imul
loope
daa
jle
sub
icebp
shld
pop
ffree
ds
mov
daa
fincstp
inc
xchg
pop
cld
push
outs
(bad)
(bad)
fdivrp
int
or
mov
xchg
(bad)
scas
xor
aaa
cmp
in
or
cmp
in
mov
sar
std
int3
call
cli
cld
mov
jmp
scas
in
pop
arpl
mov
xor
adc
xchg
cmp
add
jns
icebp
push
(bad)
xchg
jecxz
(bad)
mov
xchg
and
mov
mov
dec
adc
aaa
add
jno
test
xchg
lds
xor
imul
sbb
cwde
push
cli
imul
arpl
or
repnz
cld
(bad)
jbe
dec
adc
lods
mov
daa
mov
jo
bound
cmps
fld
shl
mov
sub
test
ins
sub
cmp
les
(bad)
iret
xchg
leave
out
fst
lods
mov
jge
lods
adc
lock
mov
pop
rcr
outs
dec
inc
bound
mov
xor
push
or
mov
rcl
mov
mov
inc
shl
(bad)
hlt
mov
lods
xchg
div
es
fldenv
xor
clc
inc
push
push
xchg
out
ret
leave
out
scas
lahf
mov
sub
mov
pop
add
xor
and
adc
adc
pop
addr16
pushf
push
out
bound
push
add
or
xchg
mov
mov
cmp
clc
pop
scas
adc
push
pop
or
push
jne
inc
cmp
aaa
sbb
movs
shr
mov
neg
jns
sbb
imul
push
push
inc
cmc
aad
cmp
(bad)
mov
rol
lea
js
xor
cmp
inc
mov
jo
and
add
movs
(bad)
push
int
xchg
or
and
push
icebp
test
adc
mov
cdq
repnz
adc
lahf
jge
jg
xor
imul
add
adc
call
out
dec
push
jo
into
rol
mov
adc
jle
push
sbb
fisttp
sbb
pushf
add
push
lahf
cmp
dec
push
mov
or
fdecstp
push
xchg
or
xlat
imul
loope
or
imul
mov
mov
mov
sub
mov
in
pop
(bad)
cld
inc
jns
je
xchg
mov
jno
inc
xchg
out
inc
lahf
jnp
fisubr
aad
imul
push
and
push
out
push
push
test
retf
jp
pop
aaa
mov
cmp
mov
cs
lds
shl
in
mov
fs
xor
and
stos
ds
mov
aam
(bad)
retf
push
push
int3
lds
das
lahf
cli
cmps
mov
in
cmc
out
sub
loopne
mov
push
pop
and
popf
out
cli
sahf
repnz
cmp
sbb
dec
fcmovb
mov
or
inc
outs
jmp
shl
aam
rcl
pop
xor
jecxz
aam
lahf
fimul
cmps
xor
add
mov
loope
shr
mov
ins
jae
sbb
add
stos
cmp
xor
sti
push
dec
in
push
pusha
daa
pop
push
mov
es
outs
push
fdivr
dec
loope
test
add
adc
push
xchg
add
idiv
ins
sbb
test
fidiv
mov
mov
sbb
xlat
div
mov
xchg
xchg
push
call
pop
push
sub
repnz
cmp
imul
js
in
cmc
cmps
lods
cmp
rol
add
jp
and
dec
pop
jb
ret
sbb
cmps
mov
not
scas
ror
cmp
aam
ins
call
jae
aam
adc
mov
sub
test
dec
sub
and
aas
or
outs
shl
test
rcr
and
pop
or
or
in
push
cs
push
or
add
xchg
retf
lods
rcl
add
push
add
mov
mov
int3
aas
cmp
and
arpl
adc
inc
sub
loope
mov
push
mov
and
xor
push
dec
xor
ud2
push
into
xchg
fistp
sbb
xor
sbb
mov
inc
aas
push
jbe
stos
test
aas
inc
mov
jmp
mov
aas
es
mov
fcmovnb
mov
push
ins
mov
cmc
js
push
lahf
jmp
sbb
pop
mov
mov
push
sub
xchg
out
daa
pop
mov
push
mov
jb
inc
sbb
loop
nop
dec
push
nop
jg
pusha
aaa
jl
(bad)
sub
mov
inc
add
cmc
mov
mov
(bad)
outs
cdq
mov
or
ins
push
daa
jb
cmp
pop
in
dec
fbld
sub
dec
hlt
lock
cmp
jne
add
or
pop
dec
popf
ja
(bad)
idiv
mov
sub
jb
push
aam
leave
cs
mov
push
mov
mov
inc
outs
mov
rcl
in
pop
sbb
lods
jbe
retf
add
out
rcr
and
push
bound
jno
sbb
and
dec
dec
mov
scas
adc
push
test
adc
mov
mov
pushf
jl
mov
nop
xchg
cwde
push
xor
adc
mov
ffreep
retf
sbb
es
neg
adc
mov
and
mov
arpl
cdq
mov
jge
dec
dec
(bad)
and
loope
add
js
ds
jnp
inc
mov
mov
sbb
and
mov
dec
shl
jo
fidivr
in
imul
or
test
mov
cmp
xchg
xchg
sub
es
int
pop
call
outs
or
push
leave
jmp
fdiv
add
cmc
cmp
nop
aam
daa
pop
popa
sbb
xor
xchg
adc
add
iret
ins
ret
xor
sbb
(bad)
mov
push
cmp
outs
xchg
mov
push
(bad)
sbb
sub
cdq
mov
and
mov
push
or
dec
xor
stos
mov
imul
mov
cmc
sub
adc
inc
push
or
inc
cmp
jbe
test
ja
jecxz
aad
push
pop
pop
sbb
loopne
jne
push
add
push
xor
mov
gs
call
adc
mov
pop
es
nop
jnp
push
dec
pop
mov
or
inc
js
pop
pusha
jae
aas
in
shr
jecxz
push
repz
push
lods
jae
mov
lds
jnp
mov
xchg
movs
dec
inc
lods
mov
ss
pop
adc
pop
arpl
jge
cmp
xchg
push
cmps
mov
lods
gs
sub
movs
std
jge
sbb
addr16
and
inc
inc
xlat
lea
in
lods
pop
pop
je
fdivr
es
push
cdq
into
arpl
cmp
stos
pushf
(bad)
(bad)
iret
iret
xchg
data16
iret
dec
dec
xchg
inc
or
enter
mov
inc
mov
lock
mov
pop
mov
or
cmps
out
je
mov
sbb
push
retf
outs
xchg
arpl
scas
jge
dec
push
rol
pop
sbb
push
sub
fdiv
pop
xor
sbb
push
mov
mov
sub
add
imul
iret
in
or
jae
fsub
xchg
call
setg
mov
push
inc
rcr
repnz
imul
push
mov
aaa
jle
test
dec
inc
call
jge
fucomip
add
les
fstp
(bad)
inc
mov
mov
cmp
retf
jne
pushf
dec
hlt
repnz
pop
push
sub
push
xchg
push
jnp
dec
adc
inc
xchg
fsubr
push
pop
sub
xchg
and
jae
outs
pop
popf
dec
fnstenv
push
int
mov
adc
sti
cld
inc
not
cmp
lds
sbb
mov
add
loopne
pop
not
push
push
stc
xchg
add
nop
popa
enter
(bad)
loop
aam
pushf
sbb
and
arpl
jno
popa
and
div
xchg
stos
mov
popf
in
jge
add
jmp
jae
out
int
push
cmp
jo
retf
mov
inc
jmp
inc
cmp
imul
test
les
gs
stc
call
mov
fwait
push
out
mov
scas
fwait
ins
cmps
int
mov
mov
dec
sbb
sub
pop
push
lods
push
dec
call
pusha
and
int
lock
scas
or
mov
inc
fs
jmp
jnp
xchg
pop
lahf
leave
mov
xchg
stos
sbb
sub
lock
lods
mov
push
xchg
gs
sahf
test
loop
sub
and
sbb
ss
test
pop
sub
and
and
popf
pop
ds
into
repnz
js
sbb
lds
jnp
or
mov
shl
fsubr
pop
das
mov
dec
pop
sahf
dec
push
not
shl
jp
nop
icebp
imul
clc
mov
stc
cld
pop
sub
xchg
mov
push
jae
mov
imul
mov
cmc
jg
or
outs
mov
xchg
fwait
pop
jae
mov
fstp
imul
fdiv
ja
ss
pop
int3
jle
dec
std
inc
sahf
push
loop
les
(bad)
(bad)
fwait
jp
jl
sahf
xchg
pop
repnz
in
jno
cmp
(bad)
and
cmp
stos
addr16
xchg
mov
jecxz
call
or
and
fdivr
cmp
scas
inc
push
loop
stos
repnz
pushf
sub
aam
mov
or
sbb
lds
xor
jo
push
inc
stos
ins
(bad)
xchg
je
pop
mov
xchg
add
fs
sub
dec
jge
and
js
push
outs
ficomp
addr16
xor
js
or
fwait
loope
ds
xor
mov
sub
out
pushf
cmps
mov
pop
loopne
sub
mov
mov
shl
pop
mov
mov
jne
push
test
mov
out
jg
inc
ror
(bad)
int3
and
fs
cwde
shl
and
out
mov
lea
jmp
sub
xlat
and
push
(bad)
pusha
es
addr16
ja
stos
sti
adc
cmp
push
mov
ins
into
cmp
pop
cwde
add
dec
sbb
xor
inc
jae
jl
mov
in
fisttp
pop
push
sbb
mov
in
inc
jbe
or
jge
lods
ins
gs
test
dec
stos
jno
jecxz
ds
sti
stos
enter
dec
je
jnp
dec
push
sub
sti
scas
cmp
pusha
xor
cmps
aaa
add
push
movs
jae
lahf
shl
or
inc
and
dec
stos
mov
jb
pop
jns
push
jno
into
jmp
movs
imul
adc
stos
sbb
and
stos
push
scas
xchg
xchg
xor
stos
and
xchg
dec
out
ins
cmp
jmp
lahf
sub
cli
shr
xor
(bad)
loope
mul
sti
push
scas
in
xchg
retf
push
fcom
cmp
or
adc
enter
loope
push
dec
push
(bad)
pop
pusha
xchg
mov
aaa
mov
mov
imul
jb
jns
fmul
mov
cli
jns
dec
push
mov
das
cli
add
and
ret
adc
pop
lods
popa
js
in
aaa
cdq
or
pop
stos
int3
jge
pop
stos
push
sbb
dec
int
mov
mov
int3
fnstcw
cwde
call
ins
dec
jl
stc
ror
xor
inc
dec
sbb
push
sub
mov
jp
outs
inc
(bad)
fidivr
sbb
and
and
clc
in
scas
sbb
adc
xlat
fidiv
aas
push
xchg
dec
(bad)
mov
and
mov
mov
sbb
mov
xchg
outs
push
(bad)
lahf
mov
leave
cmp
jb
mov
cmp
jmp
inc
imul
jmp
and
je
aad
push
dec
(bad)
jge
xchg
sbb
push
test
mov
dec
adc
mov
lods
mov
mov
xor
in
xor
xchg
in
and
push
std
jno
je
pop
sahf
or
je
dec
pop
xor
nop
sbb
(bad)
fist
jmp
xchg
pop
push
push
outs
jle
sub
nop
clc
in
xor
xchg
mov
cdq
fisubr
cdq
fadd
pop
outs
popa
mov
in
mov
jbe
loopne
inc
pop
jo
jb
xlat
nop
fidivr
fist
add
inc
test
jns
fwait
jo
lods
fs
mov
cmp
leave
ds
push
jnp
mov
out
gs
shr
sbb
sbb
cdq
imul
popa
jne
outs
pop
xlat
inc
js
jl
mov
inc
ins
jecxz
cmp
dec
jnp
push
or
or
fistp
jne
jecxz
mov
rep
mov
jmp
daa
mov
add
cs
push
sub
jae
fadd
fnstsw
std
or
je
sahf
test
inc
sahf
sub
inc
sub
sub
fcom
fs
scas
test
push
int3
aas
push
sub
jge
fdiv
sbb
aam
mov
xchg
jae
rcl
jo
mov
popf
inc
xor
lods
mov
out
pop
shl
loope
cmp
rcl
inc
retf
and
cmp
(bad)
xor
rcr
mov
dec
fwait
dec
fwait
pop
pusha
jp
inc
in
xchg
ret
cmp
(bad)
adc
and
mov
push
out
sub
sbb
into
(bad)
and
pushf
pop
push
push
sahf
into
sbb
jmp
add
adc
pop
ins
(bad)
int
inc
nop
adc
push
dec
loope
stos
pop
movs
ins
add
adc
and
sahf
jle
mov
scas
dec
in
adc
dec
cmps
repnz
cmp
sahf
stos
fisttp
out
fmul
push
stos
and
mov
fmul
jo
lahf
dec
call
pusha
shl
jmp
retf
inc
cdq
aad
inc
shl
mov
mov
mov
ss
and
mov
add
test
xchg
pushf
outs
push
jmp
or
popa
mov
fcmovu
sbb
(bad)
push
push
adc
cwd
in
ds
(bad)
mov
loope
int
rcl
xchg
popf
out
sub
or
fbld
scas
jnp
fadd
xor
rcr
out
jmp
(bad)
push
(bad)
hlt
push
js
pop
inc
aas
ror
in
adc
movs
call
adc
movs
push
mov
mov
(bad)
jecxz
retf
dec
dec
(bad)
xor
fist
adc
jno
mov
mov
push
stc
pop
jecxz
sub
(bad)
cs
jle
pop
ret
ret
push
shr
ret
js
ds
cli
bound
mov
sar
jmp
or
adc
sahf
mov
xchg
div
pop
mov
aas
mov
idiv
push
movs
or
add
jmp
xor
cmovns
adc
loopne
dec
sub
(bad)
fistp
lods
cmps
pop
push
ss
mov
shl
repz
cmp
movs
push
das
dec
in
xor
imul
push
into
int3
jl
pop
(bad)
cmc
adc
call
mov
dec
sub
clc
inc
pop
inc
dec
cmp
ret
fsubr
in
mov
cmps
jl
push
call
push
test
in
mov
aam
hlt
ror
and
mov
cmps
or
data16
push
xchg
outs
jge
call
jbe
jge
or
xchg
dec
xor
pop
add
xchg
call
push
ret
mov
xchg
pushf
inc
repz
push
loop
pop
pop
jno
jp
sbb
cld
movs
inc
inc
dec
sbb
test
lods
in
adc
inc
jg
in
loope
xor
stos
mov
inc
jae
inc
cdq
movs
xchg
xchg
sbb
mov
sub
out
jne
dec
pop
nop
dec
adc
cs
jae
pop
stc
sbb
(bad)
in
cmc
xor
xchg
jmp
call
xor
push
data16
mov
out
inc
jmp
jae
movs
lods
inc
push
jle
ins
loopne
sub
pop
dec
jb
xchg
jno
xchg
(bad)
out
jmp
sub
xor
push
mov
bound
cmp
hlt
adc
and
ds
dec
sub
repnz
arpl
inc
jo
jmp
cld
jno
rcl
or
popa
stos
ja
sub
mov
and
mov
jmp
lds
(bad)
loope
in
das
into
nop
push
test
xchg
jl
fs
add
mov
inc
je
pop
(bad)
mov
mov
cmp
jecxz
out
adc
pushf
mov
in
mov
cmc
popa
data16
fisttp
cld
inc
in
add
sahf
aas
or
cs
sub
or
fcomip
jo
xchg
fst
retf
rol
jns
loop
frstor
in
xor
jge
(bad)
xor
mov
test
add
clc
push
mov
sbb
and
cmp
push
sbb
mov
xchg
(bad)
fisttp
pop
mov
aaa
fcomp
call
jae
cdq
xchg
mov
sar
inc
mov
inc
adc
xor
iret
add
aaa
stc
adc
aaa
fs
loop
jmp
jns
cmp
xor
jg
mov
addr16
enter
popf
fdiv
(bad)
dec
xchg
aaa
jne
or
cs
cli
ret
int3
je
xchg
in
scas
mov
data16
push
push
je
mov
stos
(bad)
(bad)
pop
adc
and
or
cmp
cmp
gs
pop
pop
lahf
add
test
ficom
mov
jb
cmp
cwde
aad
sbb
aad
fs
xor
(bad)
push
xchg
ins
mov
popf
adc
test
push
stc
cmc
push
sbb
push
adc
lahf
icebp
in
retf
pop
clc
pop
mov
pop
pop
push
int
jle
and
(bad)
adc
retf
mov
cwde
and
clc
pushf
cld
into
outs
(bad)
(bad)
enter
mov
sub
xchg
imul
add
push
fwait
push
dec
and
(bad)
and
(bad)
arpl
mov
shl
cmp
aaa
fs
imul
and
and
in
(bad)
add
stc
dec
pop
pop
test
in
mov
js
push
inc
pop
cmp
rcl
pop
xor
cs
in
pushw
es
scas
sub
jno
pusha
pop
into
push
jge
sub
pop
dec
push
lds
enter
movs
cvtpi2ps
sbb
add
(bad)
push
mov
xchg
jae
pop
dec
and
addr16
mov
adc
out
and
bswap
sbb
sar
pusha
mov
fcomp
pushf
xlat
not
mov
jns
push
dec
xlat
call
ds
bound
or
pusha
ret
je
xor
cmp
jmp
and
xchg
test
inc
cmps
mov
and
data16
jbe
mov
sub
inc
cmp
sub
add
xor
je
pushf
pop
mov
push
pop
pop
cs
ficom
movs
mov
fld
shr
retf
mov
out
pusha
jae
cmps
and
scas
int3
in
mov
jb
mov
or
stos
repnz
pushf
popa
sub
ret
push
push
mov
ret
sub
add
mov
fst
mov
sbb
jbe
push
jp
pushf
addr16
xor
jl
or
or
adc
push
sub
jnp
mov
fist
mov
fdivr
add
or
xlat
mov
sbb
mov
inc
cmp
sub
inc
sbb
in
ret
test
and
in
movs
ret
dec
push
pop
pop
mov
pop
dec
iret
inc
les
sti
cld
pop
rcl
dec
cld
dec
jge
(bad)
loopne
dec
mov
sbb
push
sub
rcr
mov
pushfw
(bad)
jne
outs
mov
and
popa
xchg
cmps
sbb
cmps
gs
fdivr
ss
in
daa
adc
pop
mov
sub
jmp
popf
pusha
fst
xchg
test
push
les
push
neg
add
mov
pop
int
pop
fiadd
and
std
test
mov
ja
mov
cmc
lock
jg
push
in
(bad)
cmp
cwde
outs
je
pop
dec
cmc
sbb
fwait
add
call
xchg
mov
test
outs
das
test
scas
xlat
movs
inc
sti
sub
js
xor
fdivr
dec
ins
inc
sbb
mov
jge
fwait
in
fidivr
ins
ja
and
sub
push
imul
push
inc
out
in
jp
ror
jle
mov
jae
mov
arpl
cmp
retf
pop
call
and
and
and
movs
test
push
mov
or
mov
stc
or
retf
shl
mov
mov
fcmovnu
sbb
in
or
in
jp
mov
(bad)
loopne
(bad)
lods
not
mov
xchg
cld
shl
sbb
push
pop
jl
sbb
test
enter
mov
cmp
test
add
cwde
hlt
pop
add
jle
mov
adc
(bad)
mov
ret
xor
int
dec
sbb
test
xchg
push
sti
push
push
imul
mov
mov
dec
adc
stos
sbb
adc
ror
mov
and
sbb
xchg
(bad)
push
pop
jbe
(bad)
gs
mov
aad
mov
fiadd
daa
bnd
test
push
jbe
xchg
dec
cmp
arpl
mov
aam
mov
in
jb
(bad)
ffreep
out
jo
icebp
lods
sbb
fs
xor
test
ins
shl
cli
arpl
out
xor
jmp
outs
aam
push
xchg
aas
mov
dec
aaa
sbb
and
sbb
aaa
scas
or
or
leave
fsub
dec
jns
jp
pop
add
pop
mov
inc
sti
inc
and
xchg
lods
add
nop
addr16
push
mov
scas
jecxz
xor
push
clc
dec
fstp
mov
fnstsw
sbb
pop
pop
jp
(bad)
addr16
xor
pop
in
rcr
push
pop
aam
xchg
les
fnstsw
pop
scas
push
cmp
popf
and
les
test
repnz
mov
imul
push
or
push
push
or
sbb
push
(bad)
xor
dec
adc
xor
mov
mov
sub
inc
xchg
xor
shl
sbb
daa
push
cmp
xchg
sahf
pop
enter
mov
fcomip
inc
sbb
xchg
call
sub
mov
add
mov
cmp
pop
fwait
sti
nop
cmc
outs
adc
push
or
rcr
jmp
or
push
stos
cld
pop
sbb
and
jecxz
adc
dec
mov
or
or
push
dec
cmp
imul
mov
add
sbb
sub
sub
sub
bound
dec
into
mov
mov
data16
stos
mov
cli
(bad)
popa
xchg
call
cwde
nop
or
inc
pop
je
or
in
push
xchg
leave
mov
sbb
cmc
in
pop
sub
add
pop
and
jnp
in
fcomip
stos
lods
mul
in
out
mov
ret
jle
scas
(bad)
mov
or
push
mov
ja
adc
pop
repz
push
sub
pop
mov
mov
out
fsubp
pop
mov
or
movs
stos
mov
inc
addr16
nop
and
repz
or
mov
sub
mov
push
(bad)
mov
inc
pusha
add
mov
and
inc
mov
ins
push
push
pop
and
mov
scas
mov
xchg
xor
cwde
nop
mov
xchg
(bad)
stc
dec
je
pushf
mov
das
xchg
or
xchg
ins
add
mul
loopne
je
lods
rol
xchg
cli
sbb
adc
rol
add
inc
ret
popa
cmp
sub
cmp
pop
out
hlt
fild
jmp
fsub
ja
es
js
xor
sbb
fst
dec
xor
fcmovbe
mov
dec
adc
pop
add
push
add
clc
adc
mov
or
jmp
mov
adc
or
cmp
push
sbb
test
adc
addr16
jp
jo
fisub
sub
sbb
pop
(bad)
ds
in
inc
mov
and
ret
sti
jae
push
call
ret
test
sti
imul
lock
add
jg
cli
add
mov
sub
mov
movs
cld
cmc
ins
adc
mov
pop
enter
lods
or
xor
movs
aas
sahf
xchg
jge
pop
(bad)
xchg
cmps
je
(bad)
scas
hlt
cld
mov
lds
repnz
mov
inc
mov
sub
out
icebp
cmp
lahf
fldenv
adc
ss
push
(bad)
jbe
rol
call
fiadd
cmp
pop
pop
dec
jnp
iret
mov
addr16
sbb
cld
test
sub
sar
add
shr
lahf
dec
pop
pop
cwde
out
call
fcom
inc
xchg
sbb
test
lds
les
in
sti
cs
inc
push
pop
fisubr
addr16
in
xchg
stc
sub
or
ror
adc
stc
adc
int
shr
daa
or
mov
xor
adc
xchg
xlat
mov
push
push
lea
in
sbb
lods
push
es
pop
daa
dec
push
loope
fstp
(bad)
test
cmp
sub
ret
loop
je
leave
push
(bad)
pop
mov
inc
dec
cmps
mov
jmp
push
push
dec
imul
mov
cld
inc
fisttp
push
jbe
stos
pop
xor
xchg
fwait
call
cmp
xor
xor
test
push
(bad)
into
and
fadd
clc
and
sti
dec
add
movs
std
mov
in
mov
mov
push
jo
bound
xor
cmp
(bad)
jns
stc
push
jnp
pop
pop
sbb
mov
and
or
push
sbb
jg
int3
sub
jecxz
xchg
sub
mov
sub
inc
(bad)
dec
sahf
pop
cwde
(bad)
les
test
inc
sub
adc
imul
std
cmp
cmp
stc
add
pusha
jle
addr16
outs
mov
jmp
imul
frstor
pusha
lea
jmp
jns
(bad)
push
clc
and
sti
add
pop
dec
dec
outs
sbb
ins
or
aad
outs
(bad)
pop
inc
call
imul
pop
sti
cs
and
dec
jge
jl
into
(bad)
fucomi
inc
cmp
add
int3
adc
and
xor
push
xchg
or
inc
jno
bound
adc
lods
pop
add
aas
scas
loope
push
mov
and
or
pop
cmp
sbb
adc
aam
out
adc
addr16
and
(bad)
pop
dec
call
or
mov
mov
jmp
ss
std
test
mov
dec
fimul
mov
add
in
adc
adc
dec
movs
inc
pop
cmps
jmp
ret
cmp
pop
sar
cmp
pop
fdivr
inc
repnz
xchg
jmp
jb
nop
pop
push
jno
jecxz
and
je
mov
pop
push
call
inc
movs
fs
lock
mov
and
ror
lods
in
cmc
stos
mov
mov
cmc
test
mov
(bad)
adc
add
hlt
(bad)
xchg
stos
push
add
int3
adc
mov
out
jl
daa
mov
and
mov
dec
push
(bad)
push
lahf
dec
loop
bound
and
sub
dec
xor
add
popa
call
bound
scas
push
pop
clc
shl
mov
(bad)
clc
retf
sbb
xchg
movzx
push
ss
adc
(bad)
loop
add
mov
sub
pushf
(bad)
mov
jae
adc
xchg
loop
cmps
lods
push
sub
sar
(bad)
in
fbstp
ret
inc
add
lahf
repz
repnz
push
mov
push
sub
ror
or
fdiv
aad
push
jo
sti
or
es
ins
in
add
inc
or
ds
or
xchg
ds
adc
enter
mov
fdiv
sbb
dec
mov
shl
outs
test
cmc
(bad)
push
hlt
shl
add
in
push
clc
xor
sub
je
mov
ja
mov
and
out
icebp
pop
fdivp
sub
adc
mov
adc
movs
pop
or
test
push
mov
push
pop
(bad)
pop
into
or
ror
mov
mov
imul
loope
and
in
sub
and
cmp
dec
cmps
sbb
mov
data16
outs
dec
repnz
xor
(bad)
lahf
xchg
push
and
mov
and
xor
or
cld
push
je
mov
pop
out
movs
rol
setae
push
mov
fucomip
or
push
cwde
mov
jbe
jo
jge
push
push
ret
push
mov
outs
add
jl
fcomp
cmp
repz
push
push
cmp
sbb
dec
(bad)
mov
test
mov
popf
mov
or
js
aad
dec
out
cdq
sar
xor
in
rcr
bound
mov
stos
je
leave
dec
daa
adc
int3
pop
jno
xchg
pop
fnsave
rcl
pop
nop
pop
stos
cmps
cmp
xor
jle
add
jl
pop
xchg
sub
repnz
aad
mov
pop
xor
shl
fisubr
adc
in
dec
retf
fld
div
std
jae
jge
cmp
pop
lock
push
xchg
stc
ret
cld
(bad)
fistp
mov
push
sti
retf
ret
stc
in
cmp
shr
or
mov
xchg
test
pop
cmp
pop
outs
sub
(bad)
mov
scas
add
ds
cmp
jo
sbb
stos
push
xor
in
jmp
mov
fld
repz
test
pop
stos
les
xor
fild
movs
out
mov
fst
dec
mov
push
mov
mov
dec
sar
popa
dec
cmp
mov
or
retf
mov
mov
loopne
sub
xchg
in
paddusb
ficom
cmp
lods
fnsave
cmp
outs
neg
ss
pop
mov
adc
xchg
cmp
in
xor
fistp
aaa
fcom
cmp
mov
add
cdq
xchg
gs
div
xor
(bad)
loop
data16
jmp
repnz
push
or
push
sbb
cmc
pop
adc
xor
xchg
scas
inc
xor
rol
mov
mov
push
cmp
nop
rcr
sub
sbb
div
push
stos
mov
push
fmul
stos
push
std
lock
xor
lds
dec
pop
push
call
mov
or
sbb
lods
loop
sbb
loop
fist
or
cli
lahf
mov
arpl
mov
ficom
mov
scas
jo
fwait
daa
aam
js
cmp
dec
adc
fisubr
add
sbb
pop
imul
ss
ror
sbb
jbe
push
dec
cmp
sbb
sbb
sti
pop
inc
icebp
add
ins
mov
mov
mov
sub
loopne
sti
icebp
shl
sub
or
xchg
scas
mov
mov
push
jge
movs
shr
sub
jns
mov
clc
out
xor
push
mov
mov
fdivr
leave
xor
enter
das
inc
stos
leave
xor
push
jnp
arpl
jmp
push
mov
lea
cmp
aaa
fld
inc
sub
mov
repnz
xchg
imul
add
test
xchg
sub
jp
or
cli
mov
in
pop
dec
xor
push
neg
fcom
fist
xor
data16
cs
cmp
pop
mov
dec
jae
pushf
gs
xchg
sub
(bad)
test
cld
test
ficom
xor
sub
pop
push
adc
mov
mov
mov
test
sub
inc
and
rcl
pusha
in
ret
push
mov
and
ins
iret
inc
fbstp
lea
sbb
into
bound
das
jns
jl
adc
push
adc
cmp
mov
iret
jg
(bad)
enter
jne
sub
movq
rcr
xchg
ret
dec
inc
sub
icebp
(bad)
mov
(bad)
js
push
es
push
scas
int3
rcl
fnstcw
inc
fsub
imul
mov
adc
xchg
jmp
fisub
loop
add
repz
addr16
mov
fldenv
lock
int
lock
xor
pusha
dec
mov
add
retf
in
dec
mov
shl
adc
les
xor
sar
xchg
aam
(bad)
pop
xor
test
test
pop
lds
syscall
jb
sub
movs
int
fisubr
lods
fisttp
mov
gs
and
push
sbb
aaa
sbb
and
clc
or
inc
sub
fstp
pop
cdq
lods
(bad)
dec
push
jge
stos
mov
fs
fstp
(bad)
mov
int
das
loopne
xchg
lods
(bad)
ins
inc
outs
aam
ins
in
and
cmps
or
or
lock
loop
aaa
(bad)
pop
call
(bad)
fwait
iret
add
sub
mov
mov
je
add
mov
dec
inc
push
xor
scas
ss
into
idiv
mov
pusha
in
xor
enter
adc
xor
addr16
or
test
sub
int
fnstenv
mov
or
adc
xor
ss
mov
inc
outs
(bad)
inc
stos
je
stos
dec
mov
mov
in
adc
dec
in
sbb
adc
jns
lods
mov
jp
or
int3
cmc
cmp
mov
mov
bound
les
bound
add
cdq
popf
xchg
inc
sub
push
mov
sahf
fadd
jge
cmp
cmp
inc
xchg
lock
pop
fwait
push
repnz
ss
(bad)
and
js
push
shl
test
cmp
mov
mov
retf
or
addr16
push
mov
pop
arpl
jg
jo
and
ins
popf
jl
add
shr
or
cmp
adc
pushf
stos
sbb
and
out
aas
stc
outs
idiv
(bad)
mov
repnz
xchg
add
jns
jecxz
aam
sbb
ret
sbb
popa
cmps
shl
imul
or
sbb
scas
pushf
das
sub
sbb
inc
jmp
add
push
(bad)
lock
add
cmc
shr
sar
iret
ja
push
out
push
or
and
or
cmp
out
int
imul
loop
cdq
gs
repz
mov
int
dec
fcomp
inc
je
test
pop
cld
call
xlat
xor
sub
nop
cwde
cmc
das
cmps
popf
fidiv
lods
nop
xchg
sub
jno
xor
sub
xor
lea
(bad)
test
mov
mov
pop
or
in
sbb
sub
mov
mov
xor
push
push
pop
dec
cmp
cmp
fwait
add
imul
cdq
jbe
jb
scas
imul
pop
or
mov
adc
scas
shr
retf
rcl
and
aaa
pop
mov
sub
data16
outs
sub
jno
loop
jl
and
fdiv
lock
neg
cs
mov
sub
es
mov
(bad)
cmps
out
jbe
mov
sub
push
movs
push
int
dec
cmp
sub
les
cdq
add
out
or
inc
mov
test
dec
jns
jno
mov
mov
mov
cld
rol
push
xor
and
xor
into
cmps
and
iret
stos
dec
popf
sti
mov
sub
aam
and
fwait
mov
sbb
cwde
fist
shld
xor
inc
mov
xor
and
in
js
jmp
int3
jle
fucomp
xchg
mov
mov
mov
lds
mov
dec
ja
mov
in
hlt
mov
lahf
js
mov
imul
xchg
dec
les
dec
ins
(bad)
jmp
xchg
mov
inc
add
adc
daa
(bad)
fist
out
jge
daa
pop
lods
adc
pop
cmps
pop
xchg
xlat
cld
lock
imul
or
and
mov
fnstcw
je
push
loopne
mov
jge
cmp
sbb
xchg
cmc
stos
mov
cmp
je
test
pop
mov
cmp
sbb
sbb
sbb
add
jl
jnp
jmp
sbb
js
inc
loop
xor
push
xchg
out
(bad)
jl
stos
mov
call
lahf
in
adc
pushf
jbe
and
das
mov
mov
push
setl
xor
out
mov
jge
mov
push
lods
bound
push
clc
sub
push
rol
or
mov
mov
shl
test
fdivr
and
bound
push
inc
jp
jo
pusha
lods
mov
xor
(bad)
cs
pop
mov
sti
xchg
das
inc
pusha
jmp
sbb
cmps
sbb
push
pushf
das
sahf
pop
repz
es
std
daa
lgs
inc
mov
cmps
cmp
pop
jl
pop
sbb
mov
mov
int3
add
stc
pop
push
mov
loopne
adc
cmp
fadd
adc
cld
jnp
popa
or
inc
sbb
(bad)
push
ss
out
(bad)
cli
add
lahf
xor
dec
setge
ds
outs
push
iret
jmp
jbe
push
inc
adc
jne
and
das
dec
mov
lods
dec
ror
(bad)
mov
dec
mov
pop
nop
ret
sbb
pop
mov
sub
fs
sub
movs
scas
cli
adc
mov
jnp
cmps
inc
push
(bad)
js
test
jno
and
fistp
retf
dec
shl
mov
push
mov
pop
push
adc
(bad)
loopne
fs
xchg
or
and
shl
mov
and
outs
rol
or
or
ret
mov
mov
jl
imul
repnz
scas
sbb
cs
push
mov
aad
cmp
pop
push
ins
jl
ret
aaa
add
inc
pop
dec
dec
inc
dec
jp
push
stos
jmp
jne
fcom
jmp
bound
mov
loope
(bad)
mov
enter
aam
push
push
xchg
jg
ficom
movs
and
inc
sub
pop
scas
mov
cmp
mov
test
push
(bad)
loopne
ja
in
bound
pop
add
inc
add
mov
shr
loopne
add
pop
mov
mov
mov
cmc
push
lds
arpl
mov
mov
inc
cmc
push
sub
cmps
or
icebp
cmp
cmp
pop
mov
and
pop
xchg
bound
ret
loope
hlt
sbb
jmp
popf
ds
or
push
into
hlt
cmps
pop
aaa
fnstcw
pop
jp
and
je
idiv
xchg
sbb
int3
inc
mov
or
out
out
stos
jmp
pop
iret
push
enter
retf
pop
pop
sbb
inc
xchg
push
dec
push
repnz
or
out
shr
push
rol
ffreep
or
xor
popa
mov
test
sub
retf
aaa
dec
scas
dec
movs
mov
sub
and
imul
fdiv
(bad)
repz
repz
pop
cmp
sub
stos
cmp
dec
fdiv
jp
push
punpckhwd
in
mov
mov
jbe
mov
cmp
push
mov
sbb
test
imul
ret
mov
ss
aaa
mov
xor
sbb
pop
pop
push
sbb
sub
call
pop
ss
lods
outs
ror
adc
push
ret
stos
sbb
and
adc
ins
adc
xchg
jno
lea
ss
dec
cmp
sub
inc
pop
or
pushf
mov
call
dec
and
popf
adc
pop
push
arpl
cmp
dec
mov
test
repz
push
sbb
or
sub
and
jecxz
gs
out
xchg
jecxz
test
inc
xchg
leave
dec
ja
call
inc
jle
sbb
inc
aas
mov
(bad)
fld
jo
jl
or
inc
mov
loopne
jb
jne
lock
sar
dec
mov
mov
lds
xor
and
rcl
inc
pop
popa
push
aad
or
fstp
fs
adc
repnz
in
dec
dec
fisub
cmp
inc
push
aad
mov
mov
dec
out
stos
xchg
dec
cmp
sub
mov
mov
dec
mov
mov
test
push
sub
push
(bad)
fcomp
sbb
or
cs
mov
pop
mov
stos
repz
xchg
stos
xchg
ds
fdiv
out
add
inc
cmps
cmc
sbb
retf
sbb
or
lock
imul
push
push
cmp
sub
call
hlt
mov
ins
and
out
call
retf
fwait
jae
mov
(bad)
mov
jp
xchg
movs
or
scas
sub
scas
bound
add
in
xor
retf
dec
iret
pop
pop
cwde
and
mov
pop
stos
jle
cli
mov
cdq
jmp
movs
out
jle
jno
jl
push
push
ss
xor
add
pop
sbb
adc
test
mov
sbb
cmps
adc
sqrtps
test
fcom
sbb
cmps
and
(bad)
rol
icebp
loop
mov
(bad)
fldpi
pop
std
ret
pop
mov
or
retf
adc
pop
xchg
jmp
sahf
cmp
adc
jbe
sbb
test
jae
loop
and
rcl
xlat
fisttp
shl
ds
push
or
pop
ds
cmps
xchg
mov
sbb
scas
add
nop
loopne
fimul
sti
shl
clc
cmp
mov
stc
aas
mov
(bad)
and
fimul
cmps
(bad)
jmp
in
xor
cli
shr
es
mov
in
mov
retf
dec
push
aas
aam
sub
push
and
jmp
jo
cs
inc
daa
cld
bound
ja
stc
push
addr16
and
mov
pop
push
xchg
inc
ss
mov
jns
movs
lds
add
aad
fld
(bad)
pop
mov
cmc
out
dec
xor
out
rcr
pop
retf
inc
pop
lea
xor
mov
dec
test
xchg
das
in
and
jle
adc
xchg
push
dec
sbb
cmp
pop
es
les
imul
gs
fcomp
mov
mov
stos
jmp
cwde
test
retf
mov
adc
dec
aas
pop
retf
out
and
(bad)
push
mov
adc
retf
repz
push
jne
jno
outs
cld
xchg
sbb
xchg
shl
sahf
adc
adc
xchg
movs
sub
fld
pop
in
jnp
lea
mov
mov
cld
mov
push
inc
cmp
jle
scas
mov
mov
test
dec
stos
adc
add
das
in
adc
inc
or
cmp
in
daa
enter
and
call
hlt
xor
push
das
adc
mov
xor
xor
(bad)
movs
ret
inc
mov
(bad)
(bad)
xor
cli
adc
xchg
(bad)
fcmovu
in
cmp
cmp
and
inc
fidiv
out
cdq
(bad)
fs
lds
in
mov
rol
push
les
adc
(bad)
std
pop
and
imul
test
mov
data16
sahf
mov
dec
dec
inc
and
jecxz
std
jae
imul
(bad)
xor
jnp
mov
retf
cmp
mov
add
fmul
rcr
inc
cmp
inc
push
cdq
pop
(bad)
mov
dec
je
sub
mov
gs
out
mov
mov
rcl
jg
adc
push
ja
pop
outs
scas
fsubrp
stos
movs
fs
mov
mov
fs
inc
mov
std
or
jle
xor
aas
hlt
mov
fadd
ds
add
jl
fnstsw
adc
fsub
push
add
cli
test
ret
gs
movs
cmp
pop
repnz
cmp
sti
mov
and
adc
loopne
aam
imul
je
and
ret
xchg
cmp
ins
add
push
mov
jnp
xor
adc
dec
xchg
push
dec
lea
jmp
sahf
(bad)
sub
jg
inc
(bad)
adc
push
cmp
in
sub
aas
or
jmp
fwait
out
les
push
clc
add
sub
call
fsub
jae
jmp
add
xchg
or
or
inc
jp
iret
enter
cmps
cli
(bad)
dec
push
shl
jg
mov
mov
ds
jmp
cmp
(bad)
test
call
mov
push
out
jl
sbb
pop
lods
jl
fidiv
add
adc
sub
sti
je
dec
lods
jmp
(bad)
pop
fdivr
pop
call
in
and
or
sbb
and
sub
xchg
xor
sahf
sti
xor
or
clc
pop
shl
jg
and
inc
pop
movs
in
sar
(bad)
clc
adc
xchg
xor
ins
ss
lods
push
mov
or
pop
or
xlat
test
jp
stos
adc
fadd
fwait
sahf
sub
test
test
push
jg
ja
pop
(bad)
sub
inc
jge
stc
clc
loope
(bad)
mov
lods
sub
adc
inc
repz
push
push
and
sbb
pop
or
pop
push
pop
adc
es
push
fsub
iretw
jb
in
ins
sub
cdq
fimul
neg
mov
xchg
add
xor
or
scas
lahf
leave
or
mov
loope
pop
ret
jae
add
lea
mov
adc
mov
mov
inc
fst
fild
scas
fisttp
push
cmps
(bad)
mov
enter
ror
mov
les
cli
sub
dec
xor
pop
sub
int
sub
cli
popa
mov
sub
std
push
pushf
adc
adc
adc
jge
sbb
xchg
fcmovbe
jbe
mov
je
jno
jbe
cdq
push
sbb
outs
js
adc
(bad)
xor
push
out
iret
retf
xor
mov
stos
xchg
scas
(bad)
stc
mov
push
in
(bad)
mov
adc
or
mov
enter
and
pop
jae
addr16
ins
jg
jnp
jecxz
push
in
mov
lock
test
mov
push
loope
sub
push
inc
mov
pop
movs
sbb
ds
mov
and
push
push
xlat
(bad)
sbb
int3
cmp
pop
fld
jmp
cmps
mov
dec
mov
dec
mov
(bad)
cmp
hlt
mov
mov
mov
loopne
(bad)
push
add
retf
mov
ror
add
retf
lea
inc
pop
fwait
imul
xchg
xchg
out
inc
cmp
in
push
or
int
push
mov
xchg
fadd
loope
std
gs
cmps
jne
mov
data16
and
imul
mov
ins
outs
(bad)
lea
xor
fwait
lock
mov
arpl
ss
mov
mov
ins
pop
mov
shl
dec
mov
adc
push
test
retf
mov
rol
push
jo
test
add
lods
repnz
jnp
push
sbb
test
adc
ds
cs
push
push
jns
mov
adc
xor
sbb
push
sub
xchg
jnp
add
cli
xchg
xchg
aas
ins
and
adc
lahf
inc
nop
sbb
call
gs
test
jmp
adc
inc
cdq
dec
ret
je
mov
pop
out
pop
(bad)
pop
sahf
xchg
inc
gs
or
test
pushf
jno
rcl
iret
adc
jle
inc
test
in
dec
shl
jg
call
adc
sbb
mov
cmp
ins
mov
popa
(bad)
pop
je
jns
add
popf
je
mov
les
push
mov
adc
(bad)
mov
cmp
cmp
aaa
movs
repz
mov
pop
jnp
push
scas
dec
mov
adc
add
adc
js
sub
not
(bad)
and
xor
aas
mov
jne
push
into
adc
imul
gs
push
or
mov
mov
rol
mov
pop
jns
dec
fidiv
int
xor
fs
hlt
fidiv
and
or
mov
les
rcr
popa
popa
gs
sub
popf
cmp
retf
inc
outs
cmp
pop
in
mov
sbb
jae
sub
mov
push
jl
pop
int
xchg
mov
cmp
pop
or
div
ror
push
add
call
mov
out
jmp
outs
daa
cld
add
call
popf
ins
jb
scas
add
pop
fsubr
jmp
arpl
outs
add
dec
aam
bnd
test
lahf
pushf
enter
mov
cli
in
push
ret
out
fs
push
and
adc
push
cdq
daa
mov
aad
ins
xchg
fs
test
sbb
(bad)
mov
loopne
mov
aaa
push
sti
icebp
xor
arpl
mov
lahf
or
or
sub
mov
test
test
into
sub
cmp
aad
daa
(bad)
pop
mov
out
mov
xor
fistp
cli
jbe
addr16
data16
jge
or
mov
mov
(bad)
clc
xor
ficom
pop
push
fdivr
xchg
fst
add
xchg
xor
push
push
push
shr
xor
aaa
mov
aad
ror
inc
jno
fs
cmp
lea
sub
in
cdq
sbb
cmps
push
mov
mov
mov
push
dec
sti
dec
adc
jno
fwait
shr
(bad)
lock
jns
add
cmp
cld
push
mov
xor
jne
fs
push
test
inc
push
xor
inc
mov
cmp
cmp
(bad)
rcr
lods
ss
sti
mov
jns
xor
jns
ins
sub
xor
in
mov
cmp
mov
pop
retf
cmp
mov
fbld
not
adc
daa
mov
fs
add
(bad)
fidivr
mov
leave
imul
sahf
dec
mov
mov
jl
inc
and
xchg
ins
call
pushf
push
add
fstp
mov
pop
into
rcl
mov
dec
adc
pop
hlt
leave
xor
cmp
or
add
adc
popa
sbb
icebp
cmc
inc
cmp
ja
je
adc
call
pop
pop
xor
test
ds
adc
pop
jo
aas
jns
test
movs
js
inc
mov
out
adc
imul
jb
dec
xor
dec
mov
enter
data16
dec
xchg
jae
xor
or
xor
and
sub
dec
test
das
scas
test
pop
(bad)
mov
fs
pop
fstp
scas
in
aam
inc
fisub
add
dec
cmc
inc
fsubp
adc
pop
popa
arpl
jo
mov
mov
das
fmul
or
jp
ja
test
int
add
mov
xor
mov
push
std
rol
add
stc
mov
jno
je
cmp
loop
not
(bad)
mov
scas
pop
and
fs
mov
or
adc
fdivr
jno
mul
jnp
sbb
xchg
fcom
popf
lods
out
outs
into
push
cmp
ret
sub
jle
retf
test
inc
dec
push
mov
int
jno
or
imul
mov
loop
in
ficom
xchg
stc
and
jecxz
clc
out
(bad)
xor
add
mov
and
sub
and
dec
cmp
xchg
fimul
lahf
lods
fld
(bad)
xchg
fidivr
jmp
push
fwait
inc
shr
and
pop
out
fcom
ins
fidivr
dec
push
rcl
xchg
jae
das
add
aaa
inc
push
dec
mov
xor
test
fdivr
push
push
push
mov
test
pop
xor
inc
mov
mov
jno
pop
mov
test
or
addr16
xchg
or
xlat
ds
xchg
js
mov
pop
mov
out
rcr
xor
mov
test
xor
stc
push
inc
sub
add
mov
icebp
dec
add
loope
test
outs
adc
inc
mov
das
add
sahf
xor
(bad)
les
inc
(bad)
cdq
bnd
fucom
test
sbb
xchg
mov
xor
pop
jge
inc
or
and
test
xchg
lods
jl
arpl
push
stc
imul
out
mov
xchg
cs
dec
ds
jle
scas
dec
stos
pop
pop
sar
jg
call
shl
lea
jg
call
push
mov
je
aaa
fwait
inc
fmul
mov
test
pop
xchg
mov
pop
inc
add
sub
mov
(bad)
loop
retf
pushf
(bad)
fild
mov
pop
sbb
push
sahf
mov
aad
aaa
scas
xchg
enter
out
jb
sbb
popa
cmp
cmp
mov
xor
daa
and
dec
retf
mov
js
cmp
mov
in
xor
pop
into
jb
sbb
test
add
push
mov
cmps
cmp
jno
or
bound
adc
sahf
or
dec
cmp
test
pop
sub
xchg
push
pushf
sti
and
mov
adc
dec
push
(bad)
sub
bnd
jb
cwde
stc
sahf
outs
adc
(bad)
mov
rcl
sub
and
idiv
pop
xor
je
mov
xchg
aam
pop
mov
pop
xchg
mov
adc
mov
iret
inc
push
aad
in
push
adc
cmc
je
and
mov
mov
push
sub
pop
add
mov
jl
pop
jl
fild
stos
inc
cmps
fwait
into
add
hlt
test
pop
repz
cmp
test
daa
stos
in
cs
inc
jae
out
test
inc
inc
jnp
pop
sub
cmps
and
adc
mov
aas
es
out
add
pop
jne
imul
dec
movs
xor
add
sbb
xchg
out
movs
rcl
lock
inc
int
cs
or
clc
mov
push
stos
jle
mov
push
es
sub
xchg
adc
mov
push
and
ss
push
repz
imul
sub
push
fisub
add
je
and
xor
bswap
push
mov
imul
xor
cmps
adc
rol
pop
dec
mov
pop
ror
rol
mov
adc
mov
mov
cmps
int3
sbb
iret
lds
adc
loop
sbb
and
out
adc
pushw
cmp
leave
daa
call
dec
jbe
mov
nop
xchg
leave
jo
cmp
push
push
test
movs
mov
pop
test
add
(bad)
aam
mov
leave
adc
test
push
xor
rcl
pop
aas
xchg
add
imul
mov
gs
mov
stc
adc
out
ret
shl
add
push
cmp
cli
js
add
lods
add
out
pop
mov
jae
sub
das
out
jp
adc
adc
std
mov
out
jl
push
stc
cmc
pop
dec
cmp
ret
dec
rol
jbe
xchg
ja
push
and
dec
mov
inc
lods
test
les
sub
movd
push
jecxz
shl
ja
(bad)
gs
inc
pop
fisttp
arpl
push
cmps
adc
out
(bad)
mov
rcr
push
xor
xchg
hlt
cmps
test
xchg
jp
jbe
das
xchg
pop
xchg
mov
push
xchg
pop
ret
mov
dec
jbe
iret
jmp
sbb
jmp
xor
fwait
pushf
scas
mov
or
ret
xchg
bound
or
pop
xor
and
xchg
cli
shr
popa
jle
push
and
xor
imul
pop
mov
sub
ds
push
jo
push
test
ret
sbb
sub
mov
cld
or
scas
int
rol
(bad)
and
push
dec
jbe
cli
sbb
adc
and
jae
xchg
sbb
outs
mov
sub
addr16
push
out
jno
mov
sub
jp
cmp
stos
ds
cmp
mov
push
jmp
fild
fwait
xchg
and
mov
fisub
je
ret
push
xor
add
fdivr
hlt
add
or
scas
test
jecxz
mov
iret
mov
aas
js
mov
sar
push
jmp
adc
(bad)
outs
ror
push
cmp
mov
(bad)
mov
jp
mov
push
bsr
inc
xchg
jnp
lods
dec
mov
(bad)
mov
fwait
push
or
dec
jl
adc
push
pop
out
ds
pop
daa
mov
ins
test
sbb
push
cwde
shl
jmp
jno
sub
add
jnp
int3
or
retf
jge
push
js
je
pcmpgtd
cmp
sub
sti
xchg
jo
addr16
add
and
mov
add
sub
cld
std
(bad)
repz
popf
xchg
and
out
push
fs
test
stos
add
pop
sub
pushf
add
inc
hlt
inc
xor
sbb
dec
ins
(bad)
cmps
lea
cmp
sub
xchg
add
push
or
xchg
adc
mov
sahf
shl
adc
pop
sub
mov
xchg
and
call
loope
pushf
(bad)
jne
pusha
aas
jbe
cmc
in
jb
pushf
jnp
lock
int3
adc
and
dec
lea
jb
sbb
dec
call
dec
imul
test
push
push
sbb
cmp
mov
lock
aad
scas
pop
or
pop
inc
leave
mov
dec
push
inc
pop
dec
sbb
xchg
aaa
cld
mov
sbb
shl
inc
mov
sbb
call
fistp
aad
sub
lock
jmp
mov
leave
inc
and
hlt
push
dec
add
add
clc
aad
sar
mov
ja
dec
cmp
retf
fiadd
ds
add
ret
or
add
in
xchg
xchg
imul
sti
mov
dec
xchg
fsub
lods
dec
out
inc
xor
outs
jle
cmp
sub
call
jge
loope
outs
mov
das
and
ins
dec
push
mov
in
repz
pushf
out
fisttp
in
clc
jl
iret
sahf
xchg
xchg
pop
pop
pop
sti
push
aad
cmp
fdivr
add
adc
lock
pop
sub
movs
push
ins
xor
add
fchs
fs
cli
push
std
cmp
xchg
mov
or
(bad)
cmp
sti
jne
lea
(bad)
icebp
stc
adc
push
pop
ror
mov
inc
dec
nop
jbe
jle
xor
rol
fnstcw
xchg
mov
sti
jmp
cmp
xor
push
sbb
xchg
dec
cmps
mov
mov
clc
aas
xchg
mov
cmp
(bad)
or
pop
mov
cmc
call
pop
mov
or
dec
xchg
gs
daa
retf
call
add
popf
mov
adc
adc
loope
out
jmp
lahf
retf
mul
test
stos
mov
inc
js
cs
clc
inc
js
lods
jns
add
sub
nop
inc
sub
cmp
pop
and
jg
mov
xor
icebp
popf
aas
cs
mov
pop
add
dec
sbb
jl
jmp
fcom
in
sbb
inc
aam
push
mov
sub
or
sub
lods
dec
sbb
call
and
inc
sahf
icebp
call
sub
in
push
leave
xor
sbb
xor
adc
jmp
xor
jl
sub
push
pop
xchg
or
pop
add
mov
mov
adc
xor
pop
cmps
adc
lods
mov
data16
enter
inc
leave
in
xor
xchg
and
enter
popa
adc
lods
mov
cmp
pop
sbb
(bad)
hlt
(bad)
mov
and
fsubr
mov
sub
mov
shl
inc
xor
pop
mov
mov
clc
loope
call
inc
clc
or
xchg
stc
adc
lahf
xchg
out
jecxz
adc
lahf
inc
cwde
clc
mov
fiadd
push
(bad)
movs
clc
adc
adc
bound
jecxz
fcmove
out
cmp
mov
pop
and
jmp
mov
in
and
fucomip
sbb
or
inc
adc
push
rcr
pop
out
sub
mov
cmp
cmp
(bad)
(bad)
push
or
std
outs
xchg
mov
lds
sbb
pop
ret
stos
outs
in
cmp
movs
mov
inc
or
pop
mov
inc
retf
les
mov
xor
cwde
imul
sbb
lds
cwde
outs
stos
(bad)
push
gs
leave
push
out
or
pop
push
out
movs
push
and
(bad)
or
xchg
ja
jns
out
in
fwait
xchg
cmp
imul
ret
popa
and
sbb
outs
or
xor
cmp
lds
mov
jmp
xlat
mov
push
dec
das
lahf
cpuid
add
sbb
dec
push
test
mov
and
push
mov
mov
cli
mov
ds
inc
xchg
and
mov
cmp
(bad)
mov
adc
inc
inc
in
js
sbb
(bad)
mov
hlt
(bad)
cmp
xor
shr
das
mov
inc
inc
xor
push
sbb
or
mov
or
xchg
repz
cmp
mov
pop
in
push
mov
das
jnp
mov
jo
cmp
and
sub
or
repz
test
mov
sub
inc
or
(bad)
and
das
pop
addr16
rcr
mov
popa
test
daa
test
mov
dec
and
xor
cmp
pop
dec
dec
fild
pop
(bad)
(bad)
cmp
mov
call
test
mov
pushf
jne
rcr
mov
imul
stc
pop
cmp
push
aam
dec
push
mov
xor
xor
cdq
xchg
push
cmp
sub
clc
xor
sub
cmp
or
inc
ja
inc
add
out
out
pop
scas
test
xor
sub
pop
mov
xchg
mov
jbe
sub
push
in
mov
adc
and
(bad)
in
shl
push
pop
les
out
mov
push
or
scas
ret
add
fadd
mov
ins
mov
rcr
adc
inc
out
mov
cdq
pop
fs
dec
dec
or
scas
sbb
imul
fidiv
or
mov
adc
(bad)
push
add
adc
(bad)
imul
out
xor
xor
jne
jnp
mov
scas
add
enter
je
loope
lods
arpl
std
or
inc
mov
int3
enter
cmps
adc
xchg
aas
sbb
addr16
sub
pop
mov
mov
mov
inc
push
mov
cmp
adc
and
sbb
aaa
enter
pop
imul
sub
fidivr
int
add
mov
jno
faddp
sbb
shr
fstp
call
adc
pop
mov
xchg
out
and
sub
add
dec
dec
xchg
and
daa
outs
leave
outs
cmp
(bad)
or
stos
out
cmp
push
out
jne
call
ds
das
jg
xor
dec
std
xchg
ret
xor
sbb
mov
js
sbb
call
fidivr
ins
(bad)
pop
push
sub
inc
and
cmp
jl
stos
in
adc
dec
mov
pop
or
daa
jge
push
scas
cmp
(bad)
jecxz
fmul
pushf
(bad)
pushf
mov
sub
mov
sub
(bad)
or
fs
lock
dec
jmp
adc
in
mov
xor
cmp
fs
(bad)
sbb
(bad)
cmps
adc
movs
and
sbb
push
loopne
mov
retf
ret
cli
imul
in
repz
or
add
cld
sbb
pop
cwde
sbb
mov
lods
ficomp
jl
jp
icebp
mov
out
outs
test
or
imul
popf
mov
push
in
xchg
mov
lock
adc
cmps
je
sbb
or
cmp
mov
mov
inc
clc
lahf
ss
dec
jecxz
cs
adc
inc
arpl
dec
dec
mov
jne
xor
arpl
out
mov
jmp
lahf
jns
sbb
add
loopne
movs
and
jmp
dec
test
outs
sub
xor
push
scas
adc
push
add
mov
push
xchg
(bad)
push
add
imul
in
add
scas
xchg
jmp
je
mov
and
shr
ret
adc
or
pop
mov
jp
fwait
sbb
add
cwde
xchg
lds
push
adc
bound
mov
pop
daa
dec
or
cmc
jne
xchg
cmp
daa
sub
mov
jg
push
fbstp
mov
std
daa
loop
int3
mov
out
and
add
stos
xor
outs
jecxz
into
mov
or
add
test
sahf
cmp
fadd
mov
jmp
sti
(bad)
leave
push
xchg
jl
int
in
mov
push
test
mov
sti
mov
jl
popf
jle
cld
stos
sub
cdq
aam
outs
iret
adc
mov
push
dec
movs
arpl
sub
shr
psrlw
dec
ja
sbb
mov
movs
inc
mov
xchg
nop
add
inc
int3
mov
jg
push
push
dec
add
or
popa
mul
dec
jo
jmp
push
pop
icebp
(bad)
nop
cmp
or
aam
out
(bad)
jnp
mov
jne
inc
mov
scas
shl
dec
ret
outs
push
(bad)
xlat
and
nop
data16
out
ret
push
out
imul
jp
sub
add
push
pop
loopne
and
cmp
jge
ret
sbb
sbb
(bad)
addr16
call
frstor
pop
daa
add
js
pop
fwait
pop
xchg
je
add
jge
inc
xor
out
retf
or
dec
loop
ins
add
xchg
cmp
rcl
mov
push
push
iret
dec
xor
sub
sub
push
cmp
and
push
inc
adc
mov
mov
and
retf
or
loop
ficomp
aaa
sub
jmp
mov
cmp
push
jne
jp
pop
push
out
out
push
mov
mov
inc
stos
push
and
imul
pop
(bad)
push
outs
xchg
push
ret
dec
xchg
xor
test
in
lods
mov
pop
mov
es
ins
lods
xchg
call
inc
pushf
mov
add
push
and
or
sub
hlt
sub
popf
fld
dec
idiv
sbb
pop
cmp
fs
inc
or
js
or
in
aam
jae
repz
shl
xchg
in
adc
mov
popa
pop
and
ss
outs
test
cwde
cmp
sahf
shr
popa
lods
jecxz
sub
push
rcr
fs
ins
daa
xchg
pop
in
sub
mov
push
les
clc
das
adc
fcompp
and
pop
adc
mov
inc
in
bound
adc
adc
mov
push
pop
ins
push
mov
in
mov
stos
lahf
sti
mov
retf
loop
sahf
dec
popa
inc
out
add
xchg
xor
mov
test
nop
div
inc
pop
je
or
mov
mov
sbb
cld
pop
int3
out
test
jl
pop
dec
adc
inc
aaa
out
push
fnstenv
jne
dec
and
and
xchg
sub
push
dec
pop
dec
push
mov
mov
xor
sahf
jno
cmp
push
cdq
call
xor
xbegin
sub
sub
mov
(bad)
mov
push
jecxz
aam
cmp
ins
sti
sbb
les
les
adc
xchg
jnp
and
push
push
pushf
dec
ret
jno
test
movs
mov
adc
push
fidiv
mov
(bad)
(bad)
lock
pop
inc
push
jge
jg
in
sub
sbb
xchg
xor
rol
out
xor
jecxz
sbb
inc
(bad)
lods
dec
xor
into
jg
cwde
sbb
test
stos
cdq
int3
arpl
out
push
int
xor
fs
out
mov
ficom
pop
data16
leave
stc
fwait
and
aaa
jp
clc
out
dec
dec
mov
cs
mov
sbb
test
in
fs
popa
rol
sub
cdq
sub
add
addr16
or
inc
jbe
push
jecxz
add
pop
sbb
sahf
addr16
cld
adc
mov
sahf
sub
hlt
pushf
sbb
or
pmaxub
mov
push
inc
(bad)
adc
jg
(bad)
test
repz
xchg
cli
mov
add
iret
jo
or
lods
ret
stos
lods
mov
and
xor
ins
or
test
cli
rcr
(bad)
mov
pop
lds
(bad)
pop
xchg
enter
call
popa
cmp
(bad)
aas
cli
sbb
loope
imul
dec
cmc
push
sub
ss
mov
inc
xchg
daa
shl
add
cmp
pop
icebp
jb
inc
stos
push
repnz
push
mov
fst
repnz
lea
cli
push
test
retf
xchg
cmc
fiadd
cmp
inc
xor
pop
cwde
dec
add
cmovne
gs
stos
pop
mov
test
out
inc
rcl
stos
lods
iret
mul
push
js
push
call
push
rol
ficom
dec
pop
stos
(bad)
sbb
jne
mov
data16
mov
sub
call
cli
test
push
inc
adc
sbb
out
imul
lds
cmps
test
dec
jne
add
in
sbb
push
test
fistp
mov
rcl
ffreep
and
cmp
fwait
pop
or
jo
cmp
fldenv
mov
push
mov
or
add
fs
or
retf
xchg
lahf
push
out
(bad)
ror
jecxz
cdq
rcr
cwde
(bad)
daa
out
movs
inc
outs
cmp
cmp
es
das
sub
test
imul
in
jae
mov
and
imul
gs
sub
sub
sub
lock
xchg
mov
inc
dec
popa
mul
arpl
push
mov
cmp
mov
pop
retf
(bad)
ins
imul
inc
test
fdiv
dec
stos
je
and
and
fwait
inc
not
add
and
sub
(bad)
ins
cmp
cmp
dec
(bad)
sbb
aas
leave
sub
cmp
jle
mov
das
pop
pop
daa
or
sbb
fs
inc
loope
adc
pushf
jp
mov
adc
add
test
lock
mov
mov
daa
or
jns
sub
jp
out
pop
xor
add
mov
shl
xchg
dec
dec
inc
stc
push
ins
adc
call
test
fsub
lock
movs
xchg
mov
ins
xchg
(bad)
dec
or
adc
fld
sub
lods
cdq
loope
mov
sbb
xor
push
dec
popa
jnp
push
sti
lahf
push
enter
jge
xchg
pop
imul
loopne
adc
int3
pushf
xor
cmp
jecxz
adc
or
dec
fwait
adc
adc
cmp
mov
ficom
xchg
stos
pop
fwait
jmp
retf
cdq
push
std
fsub
movs
jecxz
into
xor
inc
mov
dec
pop
repnz
jmp
dec
stos
pop
stos
dec
xor
mov
ds
(bad)
pop
int3
shr
nop
stos
jae
mov
outs
mov
jno
ins
cmp
xor
sbb
pusha
aad
mov
call
mov
mov
xor
jg
or
mov
shl
push
pop
sub
dec
leave
mov
cmp
(bad)
fisub
cs
mov
and
(bad)
inc
fadd
scas
fwait
jmp
lock
push
out
and
rol
scas
jecxz
dec
mov
dec
pop
imul
arpl
cdq
sub
mov
or
mov
stc
dec
dec
and
and
adc
dec
mov
cwde
jbe
or
dec
sbb
lock
dec
inc
clc
mov
ds
imul
lods
loop
mov
xor
dec
adc
arpl
shr
aad
push
sub
pop
jge
and
iret
adc
cmp
ret
mov
xchg
cmp
leave
scas
push
cmps
sub
ins
inc
mov
dec
xchg
addr16
cwde
push
out
pop
into
leave
movs
jecxz
mov
or
mov
jmp
push
sbb
out
sub
movs
int
leave
ins
jns
inc
or
mov
out
cmp
movs
ins
cli
sahf
inc
sbb
out
cmc
and
loop
lahf
sub
(bad)
and
idiv
mov
sub
ret
ja
jle
dec
sub
ins
repz
clc
and
bnd
jbe
adc
test
sub
mov
add
xor
lods
movs
mov
add
in
mov
(bad)
or
(bad)
xor
sbb
int
aam
pushf
mov
push
aas
sub
pop
ror
or
cmp
jp
jge
cmp
iret
and
xor
xchg
js
or
lds
mov
mov
cmps
xor
(bad)
in
mov
mov
inc
fcmovne
ds
mov
in
loopne
adc
jns
pop
outs
sbb
outs
daa
das
lock
inc
loope
mov
mov
jge
mov
dec
outs
xchg
jg
push
cmc
movs
xor
push
push
or
std
ficomp
pop
sar
xlat
adc
out
les
aam
pop
or
in
neg
sub
xchg
aad
sub
cmp
or
push
mov
(bad)
cld
push
std
popf
xchg
mov
rcr
retf
stc
sub
pop
fdiv
adc
pop
inc
jecxz
jecxz
add
(bad)
mov
popf
cwde
mov
dec
mov
ins
repz
jl
mov
out
test
int
inc
les
in
jo
dec
sub
out
pop
or
lahf
test
or
stc
lea
jno
cld
add
aas
outs
dec
das
xor
xchg
mov
aaa
mov
adc
adc
popf
adc
adc
jb
sub
cmp
or
push
inc
xor
or
gs
xchg
mov
pop
je
rcl
and
mov
mov
xor
(bad)
xor
ficom
pop
inc
pushf
sti
ins
mov
imul
mov
sahf
out
outs
mov
icebp
push
pusha
mov
push
dec
iret
arpl
jg
adc
mov
push
rol
cmc
in
in
test
mov
fild
dec
push
xchg
mov
inc
rcl
mov
ss
mov
push
stos
cmp
loope
xchg
sbb
js
inc
add
push
cmp
xchg
(bad)
dec
mov
cwde
lahf
cli
dec
fisub
lods
pop
(bad)
jmp
pop
sub
jno
scas
dec
inc
mov
lods
loopne
inc
pop
shr
pop
(bad)
clc
cli
(bad)
dec
fwait
(bad)
repz
fwait
pop
jl
mov
jmp
sub
frstor
mov
mov
jle
mov
add
pop
cmps
adc
mov
mov
dec
fs
or
mov
push
pop
mov
xchg
int
xor
scas
inc
or
fldenv
mov
jae
xlat
sbb
lods
sahf
jg
mul
push
adc
mov
cdq
call
ins
popf
sbb
test
xlat
rcl
call
dec
inc
lahf
cmp
ret
cs
aas
into
jns
sub
add
dec
xchg
inc
outs
(bad)
retf
cmps
mov
jno
ss
imul
outs
and
adc
mov
cmp
pop
cmp
and
movs
stc
hlt
repnz
and
push
test
retf
movs
out
jno
push
and
out
lods
add
out
outs
call
push
fsub
out
inc
ret
sbb
jge
leave
cmc
comiss
inc
call
(bad)
mov
test
(bad)
arpl
mov
in
push
fs
push
xor
test
das
daa
inc
sar
or
addr16
xchg
sbb
ret
inc
cdq
or
sbb
mov
arpl
cld
cmp
jo
loope
and
dec
pop
push
nop
(bad)
pop
in
and
sub
cdq
js
das
cmp
push
dec
ret
gs
cmp
push
sar
mov
or
and
test
mov
data16
sub
sti
fadd
xchg
popa
movs
and
or
sbb
mov
stos
mov
or
ins
jbe
mov
add
jne
adc
dec
jmp
popf
add
fild
dec
test
jae
loopne
dec
xchg
jns
loope
(bad)
iret
cdq
outs
mov
mov
imul
xchg
lahf
xchg
xchg
dec
pop
push
or
add
pop
mov
dec
rol
adc
adc
cs
lahf
push
rol
push
in
jmp
call
xchg
fisub
push
jp
push
xlat
data16
mov
pop
shl
fstp
les
push
ror
pop
lods
adc
aad
ds
call
cli
mov
(bad)
fldenv
xor
sbb
ds
push
test
sahf
sbb
and
pop
nop
je
nop
inc
imul
add
and
cmp
call
sti
push
js
inc
test
add
mov
popf
addr16
bswap
sbb
push
xchg
push
mov
xchg
daa
fmul
mov
std
(bad)
ss
aaa
pop
push
imul
cdq
dec
lahf
rcl
ins
jmp
mov
cs
jmp
mov
pop
into
cs
jns
mov
xor
fsub
aaa
jge
jl
cdq
loopne
inc
push
out
jbe
and
sar
inc
adc
sbb
imul
mov
movs
dec
inc
jae
dec
test
xor
sbb
and
xor
xor
popa
repz
adc
aad
mov
fist
inc
ds
(bad)
xor
dec
mov
push
imul
test
mov
xchg
sti
or
and
sti
jno
xchg
sti
jno
psubb
jnp
stos
lds
imul
daa
mov
jl
loope
push
lahf
es
pusha
and
jns
pop
mov
jb
retf
jnp
pop
fs
sub
ds
jo
fsub
pop
add
clc
jb
mov
add
inc
test
xchg
mov
jmp
jl
pop
dec
js
xchg
jnp
shl
inc
call
aaa
ss
sub
sbb
xchg
xchg
fcmove
repz
sub
and
and
leave
les
fidiv
into
call
xor
add
scas
xor
adc
jnp
sbb
xlat
lods
push
or
(bad)
xchg
cmp
cli
xchg
add
or
jnp
lock
ja
cmc
add
sub
lods
loop
shl
pop
xor
dec
mov
xor
add
gs
or
or
sub
dec
jmp
stc
jecxz
rol
fisubr
imul
sbb
mov
mov
or
pushf
lods
dec
pop
and
pusha
cmp
jg
fsubr
pusha
sbb
or
and
push
clc
and
mov
jnp
popf
push
ins
mov
iret
inc
jp
xchg
hlt
inc
stos
mov
and
popf
aaa
adc
not
fs
dec
fwait
cld
js
cmp
xor
(bad)
lds
xor
jae
ja
imul
mov
cmp
fldenv
sbb
jno
mov
(bad)
or
sub
popf
push
leave
add
mov
cmps
dec
sub
mov
cmp
in
daa
sub
cmp
or
outs
pop
aam
jmp
test
mov
push
pop
lahf
inc
mov
cmp
data16
cmp
xor
xchg
sbb
cmp
cmps
mov
or
cs
xor
retf
(bad)
cmps
mov
xchg
jns
(bad)
and
icebp
jecxz
retf
mov
mov
mov
sbb
sahf
hlt
inc
pop
cmp
add
mov
(bad)
sbb
gs
mov
dec
retf
mov
loopne
mov
xchg
sbb
mov
into
dec
test
cdq
and
jb
mov
and
fmul
add
jnp
cmps
bnd
xor
daa
shl
cmp
xor
add
or
js
cmp
pop
xor
ror
jmp
test
adc
push
jmp
adc
push
cmps
add
scas
dec
nop
inc
add
mov
ds
inc
cmps
call
jmp
jmp
imul
cli
cli
mov
fisttp
add
pop
lea
pop
add
mov
pushf
leave
push
mov
pop
movs
push
xchg
jl
popf
dec
mov
loopne
dec
add
add
sar
sahf
jb
sub
jno
push
sub
push
fld
daa
mov
xchg
jp
mov
inc
pop
add
out
push
repnz
icebp
int
icebp
repnz
mov
test
inc
arpl
bound
test
shl
movs
mov
dec
iret
mov
push
sub
call
mov
rcl
movs
cmps
jno
adc
call
arpl
fisubr
int3
push
ja
mov
sbb
dec
outs
ret
fisttp
sti
cmp
pop
push
jl
push
les
pop
inc
dec
mov
aas
push
inc
or
addr16
jecxz
aas
dec
pusha
sbb
sub
cmp
aam
add
sbb
push
push
adc
dec
push
cmp
jo
adc
in
das
jno
cmp
push
push
mov
and
adc
and
das
aaa
push
bound
cmp
popa
add
fstp
sub
loop
ret
outs
es
jge
stos
push
rcr
inc
jecxz
pop
lods
push
dec
add
retf
lds
or
adc
outs
(bad)
sub
pushf
sub
jns
jmp
aad
xor
mov
shl
dec
imul
xor
mov
cmps
mov
xlat
dec
lahf
xchg
push
fadd
enter
xchg
mov
dec
fdiv
test
jne
gs
inc
imul
mov
repnz
(bad)
shl
popa
popa
sbb
(bad)
scas
push
shr
dec
cmc
das
nop
pop
(bad)
mov
fmul
sbb
push
bound
xchg
(bad)
retf
xor
pushf
inc
inc
xchg
xlat
mov
popa
(bad)
call
pop
out
sub
cli
call
push
lock
js
sahf
mov
lods
nop
popf
(bad)
mov
cli
data16
sub
inc
mov
aas
and
das
sbb
cli
jge
sbb
jno
sub
xor
retf
aad
mov
xchg
dec
js
sbb
cmps
and
test
test
adc
nop
xor
adc
call
and
adc
xchg
pop
push
mov
or
mov
and
sbb
and
lods
pop
inc
nop
ror
and
and
aaa
mov
(bad)
push
aad
mov
ret
pop
(bad)
push
dec
mov
es
iret
mov
and
and
add
add
cmp
mov
xchg
add
(bad)
cmc
cdq
mov
mov
std
jecxz
ja
inc
mov
mov
add
push
call
sub
or
loop
sbb
rcl
and
arpl
cmc
and
pop
cmp
call
or
inc
cmp
(bad)
stos
call
cmp
int3
pusha
xchg
fild
inc
mov
or
dec
cmp
aam
mov
fwait
pop
(bad)
sbb
loopne
mov
fmul
sbb
and
stos
test
ror
cmps
adc
jo
fwait
aad
sbb
ret
repnz
sar
cld
cdq
xchg
lods
aaa
js
enter
push
pop
shl
inc
pop
pop
or
sub
jg
pushf
daa
xchg
imul
pop
scas
mov
jae
rcr
mov
push
sbb
cmp
pop
add
int
shl
mov
out
xchg
add
mov
cmp
push
stos
adc
movs
cmps
mov
mov
call
stos
mov
inc
rcr
adc
scas
sbb
or
pushf
fwait
out
inc
sub
xchg
imul
jg
jns
cli
pop
imul
cmp
adc
pop
mov
test
push
adc
sbb
push
pop
push
jo
mov
inc
sbb
test
movs
jbe
aad
and
mov
popa
push
fmul
(bad)
mov
and
xchg
cmp
repnz
movs
ficomp
push
push
push
pop
mov
repz
lods
jmp
dec
add
inc
adc
push
mov
sbb
int
xlat
enter
jle
retf
add
mov
(bad)
imul
mov
lods
repnz
shl
int
push
cs
adc
sub
push
add
xchg
xlat
cmc
ffree
sub
jp
call
dec
mov
cdq
out
push
outs
jmp
jp
mov
gs
jmp
and
inc
and
mov
jae
or
jno
or
jae
xchg
adc
enter
push
pop
pop
mov
nop
(bad)
in
loop
add
add
ins
pop
cmps
imul
adc
inc
jle
sbb
shl
mov
sub
jae
js
or
cmp
cmc
int
test
jmp
add
ds
cmp
push
mov
xor
clc
outs
inc
fild
loopne
cmp
imul
test
in
ja
xchg
imul
ss
fstp
xor
mov
mov
lock
pop
loope
mov
xlat
cdq
sub
mov
cdq
push
loopne
pop
add
mov
call
pusha
scas
mov
push
(bad)
cmp
cmp
jns
and
jae
or
int3
sub
fmul
cld
xchg
clc
mov
pop
aad
and
mov
mov
outs
scas
inc
daa
stos
inc
push
mov
out
xchg
mov
test
rol
fidivr
sahf
rcr
addr16
sbb
icebp
adc
adc
add
jmp
dec
sub
xchg
xor
jmp
or
daa
lock
aaa
into
fs
fild
cli
dec
and
pop
add
sahf
pop
pop
fucomp
mov
adc
je
adc
xchg
jns
(bad)
jns
mov
lods
sub
add
pop
push
xchg
scas
xor
push
cmps
pop
es
xchg
imul
and
test
push
pop
cmp
jo
mov
pop
xor
popf
push
les
vpunpcklqdq
leave
xor
adc
mov
shr
pop
std
(bad)
push
mov
ret
scas
sub
pop
aaa
imul
sahf
dec
or
std
and
or
xor
cmp
mov
dec
push
outs
push
in
lds
sbb
enter
scas
loopne
mov
into
dec
add
popf
sbb
jl
push
in
fsub
nop
(bad)
ins
inc
xchg
shl
lock
push
xor
inc
stos
or
cdq
mov
dec
(bad)
or
sbb
ret
add
daa
sbb
xor
mov
xchg
dec
aaa
nop
int
mov
in
retf
shl
movs
hlt
mul
add
cmc
(bad)
sti
fild
add
sub
lods
gs
and
out
pop
scas
or
add
push
ret
jle
shl
and
dec
cwde
inc
mov
scas
addr16
cmps
(bad)
fiadd
(bad)
and
mov
push
mov
fidiv
aaa
ja
in
push
mov
jb
data16
out
icebp
or
fidivr
popf
jmp
xor
stos
je
dec
jmp
push
pusha
repnz
pop
sbb
add
les
int3
dec
outs
jge
push
jmp
loope
pop
or
stc
outs
jmp
jne
enter
jmp
cmp
or
ret
pop
jp
adc
inc
lea
into
out
adc
add
cmovns
outs
xor
(bad)
pop
xor
jge
sbb
or
add
ror
cdq
inc
mov
test
fwait
sub
xchg
in
lods
clc
nop
and
mov
xchg
adc
jge
fadd
imul
hlt
outs
lock
(bad)
in
(bad)
int3
addr16
inc
mov
mov
add
nop
(bad)
clc
leave
int
(bad)
jp
dec
sbb
push
mov
jmp
pop
xchg
jnp
retf
scas
movs
fdivp
add
adc
push
push
jecxz
ss
scas
ret
out
(bad)
and
in
adc
sub
das
rcl
je
sub
pop
xor
sub
in
xchg
pop
sub
push
out
js
xchg
jno
sub
mov
sub
fst
daa
sub
cli
push
jno
dec
xchg
xor
pop
stos
lds
push
test
pop
dec
in
int
mov
push
mov
arpl
es
or
daa
xchg
or
pop
ss
pop
imul
ins
aam
add
ins
xor
sar
or
inc
cmp
sub
nop
jne
ja
loopne
test
(bad)
and
xor
mov
(bad)
lock
ret
push
adc
cmp
mov
add
dec
sub
pop
jle
arpl
test
test
inc
and
mov
das
sub
dec
in
jge
cmps
or
sub
imul
dec
repnz
push
pop
sbb
rol
push
jbe
mov
gs
jne
inc
adc
sbb
pop
lods
jmp
adc
call
sub
cld
inc
push
cs
inc
test
jmp
cmps
fld
jb
test
push
inc
retf
xchg
arpl
inc
push
iret
sar
dec
push
adc
shl
and
jmp
mov
mov
pop
test
mov
push
mov
jne
in
ret
inc
imul
leave
cld
aad
mov
jbe
xchg
jl
leave
(bad)
mov
cmp
push
jno
lea
or
push
out
xlat
test
sbb
(bad)
stc
jnp
jecxz
shr
scas
sti
aaa
aas
xchg
push
mov
jb
test
add
xchg
cs
fadd
movs
inc
cmp
mov
or
push
movs
inc
test
test
and
mov
dec
xchg
mov
popa
arpl
adc
mov
and
in
cld
fs
dec
add
lock
ja
fisubr
(bad)
cmps
sub
xor
sbb
das
mov
call
jmp
add
adc
fldcw
sbb
adc
(bad)
retf
shl
imul
and
push
jge
lea
and
sahf
mov
xchg
pop
popf
gs
sub
xchg
pop
or
(bad)
jno
cmp
or
(bad)
sbb
push
in
pusha
test
scas
and
or
push
call
mov
mov
scas
cmp
inc
xor
out
retf
mov
in
mov
cdq
and
push
sub
mov
sub
adc
cmp
ja
xor
jbe
out
mov
out
lock
mov
je
loope
xor
inc
mov
rol
cs
or
mov
sbb
mov
test
jmp
or
add
cmp
enter
cmp
mov
test
mov
iret
cmp
or
push
jb
mov
and
pop
inc
call
jecxz
int
adc
sahf
aad
xor
into
int
jg
and
cmps
xchg
dec
clc
lods
mov
jmp
in
push
aad
add
xchg
or
test
in
shr
jb
xchg
pop
xor
jecxz
dec
mov
(bad)
xchg
push
pushf
mov
lods
sbb
std
pop
into
repz
stos
aad
pop
fsubr
mov
adc
jmp
jno
mov
(bad)
and
sbb
sti
fs
mov
outs
sbb
lods
cmps
fwait
mov
int3
mov
and
rcr
jnp
dec
mov
lock
or
mov
dec
push
mov
gs
loop
sub
mov
iret
mul
or
jecxz
in
or
or
popf
fucomi
mov
xchg
mov
pop
adc
loop
sub
fbld
cld
movs
test
mov
lods
(bad)
push
adc
rol
sar
adc
xchg
mov
jle
int
fiadd
xchg
dec
adc
sub
test
sbb
push
(bad)
popa
xchg
movs
pop
int3
sub
jecxz
sub
mov
(bad)
push
aas
mov
mov
loopne
push
pushf
ss
add
les
test
sub
cld
jo
outs
(bad)
scas
stos
cld
js
dec
aas
pop
movs
mov
jg
pop
jo
outs
gs
pop
jne
scas
(bad)
xlat
mov
lods
jl
fld
or
mov
ss
call
lds
adc
add
sub
dec
mov
jecxz
inc
cwde
out
mov
test
js
jmp
mov
test
adc
int3
(bad)
(bad)
xchg
jb
mov
jne
jp
push
push
addr16
stc
dec
mov
hlt
loopne
(bad)
cmp
sbb
test
pop
(bad)
push
cmc
xor
sub
jno
xchg
into
test
push
sub
ss
(bad)
bnd
push
pop
adc
sbb
cmp
or
pushf
aam
cdq
sbb
inc
adc
push
aas
imul
les
arpl
or
adc
clc
mov
in
xchg
push
ss
push
call
cmp
or
sbb
retf
cmp
arpl
test
test
dec
xchg
lods
push
xchg
push
xor
push
xchg
sub
lods
ror
mov
ficomp
xlat
jo
jmp
or
mov
(bad)
adc
or
and
jne
retf
int3
out
jg
or
stos
hlt
push
pop
add
xor
sti
dec
sahf
jnp
sbb
add
test
lods
push
push
push
add
and
jnp
mov
jnp
stos
call
ja
or
inc
popa
or
retf
leave
sar
jmp
mov
bound
cmp
xor
ror
xor
mov
sbb
pop
push
in
iret
test
dec
pop
jae
xlat
xchg
fimul
test
add
adc
jb
fcomp
call
aaa
jp
sbb
ret
or
pop
stos
lods
xchg
mov
ret
mov
mov
(bad)
imul
mov
das
ja
pop
inc
mov
mov
pop
pop
sti
pop
hlt
rol
push
neg
jne
jle
jle
mov
jbe
jg
pop
jo
dec
sbb
adc
push
pop
cmp
das
cmps
push
nop
inc
(bad)
gs
hlt
ins
xor
xor
sbb
sbb
and
jmp
dec
in
or
gs
xchg
jmp
add
lods
and
push
mov
inc
adc
xor
jae
adc
adc
ins
sahf
test
test
or
mov
adc
sti
xor
(bad)
xchg
jge
fs
and
test
call
push
pop
fisubr
out
or
xor
(bad)
cmp
imul
mov
fcom
xor
inc
mov
add
push
fcom
shl
loop
dec
data16
mov
leave
push
xchg
retf
mov
sbb
mov
dec
add
push
xchg
pop
nop
data16
movs
movs
adc
inc
jge
ret
sahf
scas
push
xlat
and
jl
and
pop
adc
out
jle
retf
fdivrp
or
out
sahf
adc
pop
(bad)
mov
out
loope
dec
scas
movs
xor
push
cld
popa
or
jo
adc
adc
xchg
mov
mov
dec
or
(bad)
add
(bad)
sbb
adc
xchg
movs
mov
or
or
stc
xchg
xor
lods
outs
sub
dec
mov
push
xchg
or
mov
push
jns
dec
and
ins
in
mov
xchg
mov
enter
std
fldcw
pop
in
sbb
pushf
push
imul
dec
(bad)
jmp
movs
movs
sbb
dec
sahf
mov
out
mov
jp
sub
fsubr
pop
mov
and
outs
loop
pop
jnp
arpl
xor
repz
add
or
cs
pop
jle
loopne
in
fnstcw
pop
or
ror
pop
out
(bad)
jle
sub
popf
sbb
fs
cli
shl
xor
cdq
adc
(bad)
mov
mov
cli
push
mov
pop
fild
xor
jbe
cmp
mov
jg
ss
jns
or
push
fisttp
or
iret
sbb
push
ins
cdq
idiv
cmp
mov
fldcw
pushf
add
in
adc
mov
mov
pop
adc
jmp
(bad)
xchg
jb
jle
daa
pop
(bad)
pop
sbb
imul
shl
test
push
sbb
mov
or
je
or
imul
in
mov
ins
push
xor
ret
mov
push
loope
cmp
jnp
and
xchg
repz
jns
xchg
enter
pop
out
xor
ds
jmp
sti
mov
cmps
into
test
es
mov
mov
aad
mov
cmp
jne
shl
pop
or
dec
je
movs
push
ins
rcr
pop
out
outs
ret
sub
into
xchg
pop
shl
scas
pop
mov
cmp
loopne
out
(bad)
loope
push
out
(bad)
jp
xor
mov
rcr
push
popa
xchg
pop
add
dec
jg
dec
dec
outs
inc
push
dec
inc
inc
add
sar
adc
call
sti
mov
ja
mov
xchg
repnz
test
sti
aas
mov
int
scas
inc
dec
or
cmps
leave
stos
jle
movups
bound
xchg
pop
iret
mov
popa
pop
(bad)
sti
push
in
loope
cmc
imul
out
push
lds
nop
mov
retf
dec
xor
pop
and
pop
mov
enter
cmp
push
ds
outs
scas
mov
mov
mov
push
loopne
xlat
mov
pop
push
test
mov
or
push
inc
out
loopne
mov
arpl
mov
and
movs
int
clc
xchg
push
pop
inc
push
rcl
mov
(bad)
repz
cmp
mov
pop
repz
mov
or
cmp
shl
sbb
xchg
outs
xor
inc
inc
jge
retf
popf
push
fs
mov
push
dec
rcl
(bad)
jg
in
ret
pop
inc
xchg
and
xlat
jns
push
pop
sbb
nop
dec
pop
out
or
or
jno
je
and
call
jp
(bad)
mov
mov
outs
adc
imul
pop
sbb
cmps
and
ror
mov
rcl
xor
(bad)
in
les
xor
mov
ins
lahf
mov
mov
adc
inc
push
test
push
scas
out
aas
movs
dec
je
leave
test
or
out
inc
loopne
add
jmp
pop
cmp
pushf
imul
std
mov
dec
adc
mov
in
xor
shr
jo
add
sbb
xor
scas
push
jmp
lds
outs
push
ds
sbb
scas
add
pop
push
test
hlt
fnstenv
push
movs
fistp
inc
es
arpl
pusha
and
mov
and
jbe
in
(bad)
aad
nop
cmp
cmp
add
outs
jge
push
lahf
mov
dec
cmps
mov
mov
xchg
sbb
(bad)
jge
imul
fcomp
sbb
js
mov
xchg
xchg
(bad)
jmp
aaa
mov
push
fimul
test
mov
pop
mov
pushf
push
sbb
popa
std
mov
aaa
daa
fidiv
in
xor
push
mov
cmp
jo
clc
outs
pop
(bad)
call
xor
ja
push
inc
push
js
jp
mov
push
lods
hlt
outs
into
jmp
out
mov
int3
leave
or
fisubr
into
mov
cmp
aas
rol
jge
dec
mov
mov
and
into
cmp
adc
pop
sub
mov
mov
retf
mov
push
cmp
xchg
mov
test
or
int3
cmp
iret
ja
nop
enter
es
push
mov
cmp
xchg
pop
pushf
sbb
fcomp
cmp
stos
add
inc
xchg
adc
call
stos
mov
push
sahf
and
cmp
ds
cmp
xlat
jle
mov
and
mov
dec
jmp
cli
ret
inc
xchg
repnz
inc
mov
jmp
mov
(bad)
rcl
test
cmp
push
ret
lods
jmp
add
test
jns
lods
jb
mov
cmp
push
cwde
inc
lock
frstor
bound
sbb
inc
into
(bad)
jno
jns
(bad)
adc
mov
mov
in
or
inc
outs
push
rol
pop
outs
ret
scas
sub
mov
push
(bad)
scas
out
fwait
int
ja
inc
xlat
xchg
fs
push
test
jl
mov
stos
and
mov
les
dec
(bad)
movs
mov
arpl
mov
xchg
inc
sbb
cmp
push
in
not
dec
or
sbb
in
inc
iret
sar
cmp
or
js
cmps
push
pushf
push
pushf
in
jl
inc
bound
jge
adc
(bad)
bound
jnp
gs
ins
cmp
mov
mov
or
jecxz
out
cmps
rol
stos
push
xchg
scas
out
scas
cs
or
mov
jmp
or
test
cs
loope
jg
lock
rol
push
les
cmp
test
in
loopne
xlat
xchg
nop
pop
jmp
sbb
dec
pop
jo
adc
add
inc
xor
jae
(bad)
(bad)
imul
retfw
arpl
cmp
imul
pop
lahf
sub
cmp
mov
sub
(bad)
push
lods
fucomp
dec
pop
(bad)
mov
mov
xchg
loop
sar
mov
arpl
mov
shl
pusha
pushf
mov
pop
lds
inc
push
push
xor
mov
mov
out
lea
and
mov
addr16
mov
sub
jae
pop
cmp
stos
push
shl
pop
int
dec
or
rol
inc
jo
addr16
aas
xchg
push
fsub
test
jo
add
sbb
stc
mov
mov
jg
push
(bad)
aad
arpl
scas
mov
jl
mov
fimul
mov
cmp
and
add
cld
mov
repnz
movs
mov
cmp
arpl
imul
push
into
test
ds
add
or
xchg
inc
std
ret
add
dec
jge
or
xor
add
clc
mov
outs
rcr
jb
iret
sbb
sub
fisub
sub
inc
leave
pop
or
mov
inc
push
adc
inc
mov
push
and
xchg
fsub
inc
and
jmp
shl
fistp
or
jo
push
adc
int
call
xchg
lahf
xor
data16
jle
push
shr
cmp
mov
pushf
sti
ffreep
sbb
bound
sub
mov
inc
popf
int3
nop
dec
stos
popa
pop
xchg
inc
idiv
(bad)
sti
dec
xchg
fnsave
test
cld
pop
sub
dec
test
xor
(bad)
cmp
bound
mov
ret
call
dec
aad
sbb
push
(bad)
sti
test
movs
mov
leave
sub
push
repz
sbb
aad
ss
xor
mov
pop
or
cs
dec
xlat
mov
pusha
xchg
push
and
adc
enter
add
xchg
jp
das
cmp
es
jb
pop
cmc
ins
inc
ffreep
repnz
inc
jae
mov
fimul
jge
mov
out
xchg
add
repnz
int
xchg
out
jge
dec
xchg
shl
icebp
(bad)
push
sub
in
mov
sbb
or
inc
dec
test
push
retf
js
xor
stos
je
fnstsw
outs
pop
pop
sub
and
jge
add
enter
ror
dec
pcmpeqd
je
(bad)
jle
pop
aas
outs
mov
leave
add
cs
ss
xchg
fisub
dec
in
mov
dec
pop
inc
imul
fmul
arpl
fnsave
or
and
fwait
cmp
pop
push
(bad)
(bad)
(bad)
mov
das
cmps
and
das
pop
push
add
dec
push
xor
test
xlat
and
test
jno
sbb
shl
jo
push
in
fidivr
pop
aad
daa
add
add
shl
out
xchg
and
mov
pop
sub
neg
mov
js
mov
dec
cdq
dec
ret
loop
dec
inc
pop
test
fstp
dec
pop
adc
lock
jle
or
(bad)
push
loop
neg
test
pop
jl
cmovns
div
push
fld
pop
push
or
add
ds
or
and
xchg
add
(bad)
xchg
push
retf
cmp
cwde
ret
or
push
jl
out
and
cmp
je
or
dec
jne
mov
xor
adc
adc
out
and
leave
or
push
aam
add
xchg
and
xor
call
cmp
loope
dec
outs
mov
jo
retf
adc
mov
cmps
sbb
push
shl
mov
xor
push
(bad)
repnz
loopne
xchg
sbb
data16
push
xor
shr
mul
mov
scas
and
std
bound
sub
mov
imul
mov
lods
pop
xor
(bad)
pop
jl
stos
push
retf
xchg
xchg
stos
jns
mov
xchg
sahf
pop
(bad)
push
fsub
mov
into
out
cld
in
xor
cmp
lods
loop
pop
pop
ret
sub
daa
inc
(bad)
data16
xchg
enter
jno
cdq
sbb
scas
xlat
inc
int
or
ja
mov
xor
std
lea
jl
add
clc
xchg
xor
jmp
push
(bad)
not
mov
shr
repz
push
pusha
rcr
lock
dec
mov
std
daa
or
mov
sar
icebp
dec
adc
mov
rcr
adc
pusha
call
clc
das
daa
mov
es
cwde
std
dec
cwde
ss
sbb
call
pop
cmp
mov
ret
adc
and
sahf
enter
in
mov
int
mov
rol
retf
cmp
push
fdiv
mov
clc
mov
cwde
test
popa
not
inc
sbb
bound
enter
fdivr
xor
adc
xor
lods
mov
jmp
push
dec
pop
call
sbb
jl
pusha
mov
mov
xchg
and
mov
cmp
cmps
cmp
mov
mov
cmp
mov
fbstp
out
out
cmp
in
jbe
dec
inc
lock
push
sbb
adc
dec
push
aas
popf
(bad)
inc
mov
ins
fld
mov
mov
std
xor
ds
sbb
out
adc
push
fsub
dec
and
sub
popf
dec
fbld
dec
ds
pop
fsubr
popa
imul
sti
sub
test
fild
ins
dec
push
cmp
pusha
dec
hlt
xor
ret
push
repz
int
(bad)
adc
sub
les
fimul
mov
push
jle
cwde
cdq
test
jns
ret
sbb
mov
out
mov
mov
or
xor
aad
movs
jmp
sub
popa
sub
retf
mov
cmp
jae
outs
div
dec
repnz
ret
xchg
jl
ffree
inc
pop
fist
add
xchg
ret
push
dec
sub
scas
xchg
out
push
mov
inc
inc
test
adc
xchg
(bad)
inc
or
lods
(bad)
cdq
lea
ins
or
cmp
(bad)
sub
in
push
xchg
pushf
sbb
xor
add
(bad)
xchg
into
or
and
out
icebp
mov
mov
lahf
test
xchg
xchg
mov
jnp
div
add
in
sub
push
out
push
push
pop
mov
mov
fs
xchg
adc
sbb
add
(bad)
js
mov
movs
rol
cli
adc
mov
std
add
arpl
sub
fldenv
inc
daa
rcr
(bad)
sbb
sub
pop
or
pop
rol
xor
(bad)
cmp
sub
xor
int3
test
ret
jnp
push
cmp
jno
js
stos
dec
aaa
push
retf
push
jmp
shl
adc
movs
mov
movs
dec
jno
stos
rcr
leave
lahf
ret
xor
sub
pop
ficomp
idiv
into
cmp
push
push
js
or
pop
and
xchg
shr
aam
out
jno
jb
outs
cmp
scas
nop
lea
and
mov
dec
xor
mov
mov
push
cmps
jo
inc
dec
xor
icebp
imul
jbe
daa
iretw
loope
xor
and
add
ror
out
arpl
push
ret
div
xor
lods
pop
pop
mov
jno
clc
mov
xor
xchg
shl
xor
(bad)
fild
or
addr16
mov
dec
dec
xchg
(bad)
push
(bad)
mov
mov
xchg
fidiv
icebp
ins
push
adc
cmp
pop
mov
int3
dec
pop
(bad)
add
std
add
jle
xor
test
and
xor
push
jmp
xchg
scas
sub
pusha
inc
test
fnstenv
mov
jg
nop
test
repz
inc
xor
cwde
inc
mov
pushf
cmp
fcmovnbe
clc
ss
xor
mov
mov
sub
inc
fwait
outs
sbb
daa
ret
fisub
fiadd
out
jb
retf
es
test
test
bound
lock
mov
mov
int3
cmp
repz
inc
fs
sahf
clc
fst
dec
pop
mov
push
mov
push
add
inc
inc
scas
retf
outs
popf
shr
add
pop
in
push
jo
aad
imul
daa
std
rol
ror
loope
aam
sbb
int3
(bad)
idiv
ret
and
sbb
jo
mov
jae
mov
loope
iret
ror
(bad)
xchg
xchg
or
dec
repz
jge
pop
sub
sbb
cmp
sahf
jg
push
cmp
cmp
sub
(bad)
cdq
and
xlat
rcr
push
cmc
dec
fcomp
mov
movs
cmps
mov
sbb
ret
test
xor
and
fbld
je
xchg
or
sub
jnp
mov
add
mov
jbe
sbb
jb
push
cmp
shl
fidivr
pop
jno
add
jg
add
xchg
cwde
sbb
cwde
adc
or
test
sub
cmp
retf
test
out
pop
adc
or
mov
dec
cli
adc
leave
dec
icebp
imul
mov
test
xrelease
jns
cli
pusha
inc
lock
pop
dec
inc
mov
lock
out
fld
adc
fimul
jno
cmp
loop
add
or
es
clc
push
dec
xor
mov
std
mov
and
hlt
add
into
lock
loopne
leave
pop
pushf
ss
cmp
scas
int
xchg
jno
adc
imul
aad
adc
repz
sahf
clc
shl
icebp
in
(bad)
imul
sbb
adc
jge
add
out
pop
cmp
dec
push
in
aas
sub
mov
xchg
dec
xchg
fld
jnp
nop
leave
xchg
sar
xchg
mov
add
scas
sti
inc
inc
or
leave
mov
inc
in
inc
inc
aaa
in
popf
movs
cli
rcl
(bad)
pop
int3
(bad)
ins
mov
leave
dec
hlt
rcl
int3
pop
outs
xor
sbb
sbb
pusha
mov
cmps
dec
popf
add
imul
jg
loopne
push
test
stos
arpl
xchg
jle
stc
add
bound
stos
std
push
pmaxub
mov
mov
mov
(bad)
out
out
mov
(bad)
mov
pop
xchg
stc
mov
mov
mov
or
xchg
inc
dec
sbb
in
sbb
sti
lods
nop
dec
dec
cmc
sbb
inc
scas
dec
and
inc
xor
sahf
jbe
test
sub
sbb
popa
mov
iret
scas
iret
and
movs
lahf
xor
cmp
lahf
add
mov
imul
imul
xchg
adc
sbb
fnsetpm(287
sbb
sub
pop
shr
inc
pop
sbb
jmp
loopne
dec
xor
sti
sub
add
ror
je
mov
inc
fdiv
cmc
pop
mov
das
mov
mov
xor
outs
popa
cmp
mov
mov
add
jmp
test
iret
mov
les
in
outs
pop
pop
(bad)
clc
inc
out
dec
leave
dec
dec
jge
dec
or
call
aaa
mov
fs
aam
ret
mov
mov
retf
or
push
cmp
imul
jl
jmp
pop
dec
push
rol
dec
dec
jae
push
nop
iret
loopne
cmp
or
dec
mov
xchg
push
xchg
push
fist
mul
xchg
mov
push
retf
xchg
loopne
adc
cmc
jb
dec
test
dec
lea
popa
enter
js
aas
sbb
es
adc
rol
div
fstp
pop
mov
packssdw
sub
jecxz
(bad)
movs
popa
dec
push
sub
cmc
mov
inc
punpcklbw
pop
mov
stc
cli
repnz
(bad)
popa
and
push
shl
fistp
inc
arpl
pop
mov
ret
cmps
mov
lahf
xchg
jg
sub
retf
call
push
mov
xchg
inc
lods
jnp
lods
xchg
iret
loop
test
xlat
mov
mov
sub
xor
mov
call
add
not
dec
leave
mov
inc
inc
aam
sub
mov
jmp
js
add
jmp
mov
test
sar
clc
nop
pop
xchg
push
xchg
sub
cmps
push
in
mov
xchg
inc
test
std
sti
popf
lea
xchg
(bad)
addr16
fstp
mov
in
dec
ss
mov
aam
mov
add
cmp
mov
clc
fnstenv
in
movs
imul
inc
xchg
or
and
or
cdq
pop
jne
ror
cmps
mov
repz
aad
mov
jmp
popf
pop
xchg
push
jb
add
movs
in
jl
in
jbe
and
dec
in
pop
push
pop
dec
mov
dec
test
inc
sub
mov
mov
mov
xor
movs
sbb
addr16
xor
jne
push
ins
sbb
mov
adc
mov
cld
pop
jae
daa
xor
not
mov
cdq
stos
xor
add
jns
xor
lods
jb
dec
jmp
aaa
mov
sbb
add
out
xor
jnp
into
cmp
(bad)
mov
mov
ins
xor
xchg
push
xchg
and
adc
mov
call
pop
arpl
in
int3
jnp
gs
xor
jbe
pop
jno
outs
xchg
cmp
or
mov
inc
das
cli
data16
push
push
jg
je
ss
add
lahf
cmp
xor
jmp
pop
rcl
jge
pop
stos
call
repz
and
push
retf
pop
imul
sbb
xor
jecxz
jge
mov
pop
lods
movs
sbb
sub
inc
mov
test
xchg
sbb
or
cmps
sbb
push
push
xor
dec
xchg
in
ins
xor
push
out
or
and
ret
mov
push
test
clc
cmp
aaa
xchg
iret
lds
imul
sbb
mov
int3
(bad)
fisubr
push
out
jl
mov
jns
lock
rcr
adc
dec
mov
out
xor
push
dec
loopne
icebp
inc
and
pop
xor
lahf
test
cwde
mov
ficomp
psrlq
adc
loopne
call
adc
mov
add
inc
jb
fscale
xor
(bad)
icebp
jns
ret
jo
sbb
xchg
daa
dec
inc
cmps
cmp
neg
add
call
aas
call
pop
cmp
xchg
mov
or
jle
sbb
cmp
shr
add
sbb
in
stos
push
mov
add
pop
add
jo
les
in
xchg
pop
inc
mov
xor
aad
stos
xor
out
dec
sub
cmp
fidivr
pop
es
movs
pop
sbb
inc
xchg
rcr
je
push
mov
inc
call
mov
adc
imul
or
and
stc
push
sub
(bad)
mov
mov
pop
je
(bad)
js
fcomp
ds
adc
(bad)
cmp
jbe
pusha
inc
and
adc
(bad)
test
xchg
dec
pop
mov
pushf
sub
sub
retf
mov
xor
sbb
cmp
jle
sti
jle
pushf
bound
je
dec
sbb
pshufw
repz
sbb
mov
out
xlat
shl
add
xchg
mov
outs
or
ss
xor
cmc
(bad)
div
and
fidivr
ficom
sbb
or
jns
(bad)
or
and
fdiv
pusha
add
dec
and
mov
cwde
sbb
gs
in
push
xchg
lods
in
inc
pop
adc
sbb
mov
dec
not
in
idiv
imul
xchg
push
(bad)
pusha
retf
pusha
cmp
inc
ds
cmp
add
add
mov
jp
pop
sub
aas
sbb
lods
pop
xor
and
(bad)
mov
sti
js
inc
dec
dec
daa
adc
cmps
lock
lods
test
cmp
ror
int
retf
mov
fld
aad
retf
mov
les
sub
loope
sti
dec
xchg
mov
mov
loop
outs
mov
aaa
(bad)
mov
push
ins
(bad)
out
shr
pop
push
mov
jne
mov
ss
and
bnd
sub
xchg
and
dec
push
test
jb
push
xchg
retf
call
adc
and
mov
test
aad
enter
or
sti
ins
mov
add
xchg
mov
jg
xchg
lods
sbb
mov
push
inc
iret
xlat
or
(bad)
jl
dec
mov
fst
dec
push
sti
call
repz
test
scas
ds
push
scas
scas
rcl
inc
fsub
xchg
popf
mov
or
(bad)
push
aad
call
in
cwde
pop
aad
inc
mov
aas
cmp
fstp
and
dec
sbb
adc
loopne
retf
call
jl
fdivr
adc
imul
lods
inc
test
xchg
sbb
cld
lds
jmp
push
dec
jle
in
dec
lea
or
adc
(bad)
call
and
jmp
sub
jb
push
inc
aam
dec
pushf
in
cmps
dec
cmps
(bad)
jl
mov
movs
or
jp
mov
xor
pop
inc
mov
mov
in
stc
push
xor
mov
cli
mov
call
fbld
push
es
arpl
push
lock
sbb
jmp
mov
scas
popa
mov
mov
push
add
into
adc
adc
sub
cmp
fbld
mov
dec
mov
jne
cmp
jae
mov
push
lock
shr
jecxz
je
and
xchg
in
and
aaa
xor
cdq
mov
mov
or
dec
push
jbe
inc
sahf
mov
fisttp
or
sti
jno
pop
and
rol
push
mov
adc
mov
mov
jge
xchg
in
call
pop
adc
inc
xor
adc
(bad)
sbb
nop
sbb
into
adc
push
jmp
xor
sub
pusha
lods
dec
ins
push
movs
push
and
pop
jno
in
push
sbb
out
fmul
mov
retf
xchg
mov
ror
test
and
add
call
push
lea
sti
inc
xchg
mov
scas
jne
mov
cmps
jns
push
ja
sbb
arpl
adc
fdiv
and
daa
enter
push
pusha
or
or
ins
mov
sbb
icebp
pop
std
adc
and
or
(bad)
and
lahf
loopne
gs
outs
xlat
sbb
mov
repz
outs
arpl
mov
xchg
repz
repz
fisubr
out
push
ds
cmp
popa
mov
push
mov
jb
mov
and
sbb
xor
pop
dec
aas
push
xchg
pop
pop
clc
lods
nop
mov
aaa
xor
fidivr
outs
scas
and
ss
mov
sbb
(bad)
repnz
push
pop
in
gs
sub
test
movs
jbe
enter
pop
rcr
fistp
std
jnp
loopne
sub
push
(bad)
cs
xchg
adc
or
movs
push
xchg
lds
(bad)
fs
cs
pushf
jbe
sub
sahf
dec
or
fwait
mov
stos
inc
test
cdq
imul
mov
fwait
test
inc
nop
push
push
out
or
fsub
xchg
sbb
jno
jecxz
xchg
test
add
sbb
bound
cdq
hlt
xchg
sbb
lock
mov
sub
push
xchg
push
pop
addr16
sbb
or
inc
psllq
lock
push
mov
loopne
sub
imul
mov
xor
inc
mov
cmc
push
xchg
imul
dec
pop
push
mov
cld
mov
(bad)
fld
or
addr16
jno
rcl
cld
pop
fwait
mov
cmps
and
imul
jg
ficom
push
fcmovb
xchg
cdq
mov
mov
mov
ins
sbb
add
inc
jb
sar
mov
dec
dec
xchg
mov
xchg
cs
clc
sti
inc
(bad)
std
adc
pop
add
rol
and
add
dec
or
cmp
adc
clc
pushf
mov
int
sbb
loop
cwde
adc
dec
imul
and
push
or
adc
movs
addr16
sbb
adc
imul
iret
daa
pushf
out
push
imul
dec
ret
in
xchg
mov
imul
mov
mov
cmp
jmp
jno
retf
and
jno
or
loop
add
inc
xor
dec
lods
jns
and
inc
mov
faddp
dec
pop
ins
mov
jmp
push
lods
xchg
adc
inc
dec
data16
cmp
fsub
and
inc
sub
(bad)
mov
mov
rcl
cmps
popf
push
xor
test
inc
xchg
jp
xchg
cmp
pusha
je
fld
or
mov
jle
ins
sbb
adc
ja
jp
sar
pop
cmp
ret
in
nop
pop
sbb
mov
ja
inc
lock
and
cli
or
mov
iret
pop
mov
dec
mov
lds
(bad)
cmp
xor
push
and
inc
lock
into
xor
dec
pop
mov
sbb
ret
int
jmp
inc
ret
fcomip
inc
les
fmulp
mov
out
mov
fistp
(bad)
das
mov
pop
push
sbb
fcomip
xor
jmp
lahf
sbb
sub
inc
pop
add
ret
int
cmp
xchg
mov
sub
add
or
xor
rcl
je
mov
mov
xor
(bad)
pop
mov
xchg
loope
stos
rol
shl
imul
sub
pop
test
push
dec
inc
rol
lods
fs
iret
fnstenv
adc
fwait
mov
sbb
adc
retf
or
jnp
inc
icebp
aas
dec
rol
dec
les
jg
push
into
sbb
pop
mov
inc
mov
enter
imul
movs
nop
mov
cdq
out
push
and
out
sti
push
cmc
aam
xor
outs
mov
popa
and
add
(bad)
and
test
mov
repnz
test
push
jge
xor
push
add
std
and
push
adc
shl
out
sbb
lods
jp
jmp
outs
fwait
imul
cmp
dec
mov
int
(bad)
(bad)
xchg
cmp
(bad)
xor
cmp
pop
xlat
(bad)
jnp
dec
push
xchg
movs
out
cdq
mov
mov
xchg
mov
inc
ret
loop
push
inc
sahf
into
or
ins
daa
jecxz
dec
xchg
shr
popf
sbb
sub
cli
addr16
push
mov
popa
test
je
dec
inc
loop
xor
ret
sbb
fild
repnz
pop
and
xor
xchg
sub
(bad)
movs
sahf
sub
rcr
jg
xor
fdivr
xchg
adc
sub
and
stos
mov
dec
je
push
inc
ins
xor
out
xchg
jne
fist
dec
cmp
push
(bad)
mov
test
fcom
outs
xchg
cdq
aam
mov
sub
das
cmp
pop
mov
jmp
cmps
rol
outs
push
and
fmul
rol
popf
jmp
call
push
and
std
fadd
sub
mov
shr
jmp
push
push
data16
push
mov
iret
clc
outs
movs
rcl
les
aam
aad
xchg
adc
in
int
xchg
ins
imul
lahf
mov
outs
clc
dec
dec
mov
and
div
sub
xchg
dec
test
pop
(bad)
push
dec
idiv
nop
fcomp
jne
pop
sbb
test
jbe
sti
ret
sbb
sbb
stos
ds
(bad)
fild
pop
xor
xchg
in
and
xor
mov
aas
pop
sbb
cmp
(bad)
ret
and
jmp
add
or
stos
test
jmp
movs
movs
and
adc
mov
imul
jmp
int3
sbb
cmp
cmc
lock
sub
cdq
adc
nop
(bad)
mov
inc
mov
xchg
sahf
outs
push
mov
hlt
push
stc
dec
fimul
fwait
rcr
test
ret
aam
push
mov
mov
xchg
mov
push
cmps
sub
mov
lds
not
pop
dec
xor
movs
or
dec
fld
sbb
mov
repnz
in
mov
jle
loope
mov
fwait
out
sahf
xlat
pop
cmp
fdiv
xor
jl
and
fadd
scas
fisub
jb
adc
sar
sub
shr
cmp
stos
pop
les
inc
inc
mov
mov
inc
les
fcmove
fdiv
test
jmp
and
adc
call
mov
(bad)
push
out
aaa
mov
shr
(bad)
or
and
dec
stos
loope
jo
mov
addr16
inc
dec
icebp
or
mov
or
fld
push
sbb
test
xchg
pop
out
mov
ja
div
or
inc
sysexit
mov
add
mov
sbb
xor
and
mov
inc
jb
(bad)
shl
call
adc
enter
fimul
aad
div
sub
cmps
fcomp
sbb
mov
lock
(bad)
xchg
inc
movs
adc
js
jecxz
push
fld
xor
mov
xchg
mov
jno
(bad)
sub
cmp
mov
popa
jnp
or
sub
ja
add
(bad)
jb
outs
clc
and
jne
(bad)
clc
dec
inc
jmp
popa
ins
fistp
sub
inc
fucomip
adc
push
icebp
js
add
pop
sub
or
rol
data16
data16
out
sbb
push
mov
cmps
jnp
xor
cmp
inc
int3
mov
adc
int
push
lods
sub
fbstp
mov
xchg
ja
mov
ins
loop
cld
adc
pop
and
adc
mov
mov
ret
jo
xchg
xor
(bad)
jle
inc
add
push
int3
jb
jl
test
div
jmpw
mov
fcom
cld
(bad)
outs
movs
and
xlat
inc
sar
test
adc
mov
pop
xchg
jmp
imul
ins
jno
push
(bad)
push
jmp
cmp
jecxz
loopne
lods
lahf
xchg
out
je
cmps
call
jb
ror
mov
mov
loope
push
ret
add
lods
lods
lds
je
jo
sub
adc
rcr
add
lods
scas
sbb
ja
rol
arpl
or
mov
and
(bad)
imul
jbe
pop
jnp
cmps
xchg
xchg
in
les
scas
mov
outs
jo
lods
retf
movs
add
in
test
mov
cmp
xchg
stos
lahf
and
ins
bound
or
mov
lahf
pop
push
lods
mov
push
and
add
stc
outs
data16
nop
or
lods
aaa
fild
mov
test
dec
pushf
js
and
fisub
mov
mov
out
scas
push
and
retf
(bad)
jge
call
(bad)
pop
dec
sar
xchg
jle
clc
les
add
and
push
adc
add
loop
repnz
xor
cmp
sub
cmps
dec
push
(bad)
cmp
pop
mov
dec
imul
or
loope
iret
jmp
retf
mov
aam
not
inc
mov
jecxz
jp
push
xchg
jns
sbb
in
mov
sub
(bad)
aad
inc
cmp
push
jns
mov
div
repz
lods
jecxz
sub
in
and
push
stos
adc
dec
sub
mov
fbstp
lock
mov
stos
pop
lock
sahf
cmp
movs
gs
pop
jge
mov
mov
movs
mov
mov
frstor
adc
inc
mov
dec
push
(bad)
adc
mov
inc
mov
and
or
ret
and
or
in
ja
shr
imul
add
retf
sbb
cmc
imul
in
icebp
xor
sbb
inc
push
(bad)
fwait
dec
push
jmp
mov
xchg
enter
sbb
pop
mov
sbb
mov
or
xor
lds
cs
mov
jle
mov
fdivr
in
data16
xchg
outs
jne
iret
jecxz
shr
pop
(bad)
jle
fcom
(bad)
push
ror
mov
mov
sbb
lock
or
popf
jns
retf
and
fld
dec
loope
push
call
or
stc
xor
and
ret
pusha
inc
lods
out
dec
jl
icebp
dec
mov
(bad)
cmp
je
pop
xor
js
fistp
popa
outs
popa
(bad)
test
outs
mov
push
sar
mov
xchg
retf
jo
xor
hlt
add
(bad)
jle
repz
dec
or
pop
js
xor
inc
mov
cmp
loop
or
mov
xor
mov
push
sbb
cmp
fwait
push
jmp
test
sub
sbb
lods
pop
push
xchg
or
sub
out
dec
repnz
pop
jecxz
inc
and
pushf
and
ret
and
jns
addr16
stos
and
pop
or
cmps
mov
xchg
inc
cs
jne
leave
dec
cmp
xlat
fisub
in
cmp
mov
je
dec
xor
int3
mov
xchg
inc
dec
add
popf
or
cmp
imul
ja
stos
call
into
lods
or
movs
mov
mov
xchg
pusha
pop
mov
scas
dec
push
mov
add
inc
shl
pop
ins
jg
or
dec
and
inc
mov
retf
les
cdq
outs
xchg
xchg
and
push
cdq
imul
mov
enter
jmp
xor
ror
add
rol
pop
das
mov
jg
(bad)
jge
repz
dec
movs
sar
pusha
xlat
ins
iret
cmp
dec
loopne
nop
into
cld
push
scas
mov
mov
ret
inc
rcr
mov
sbb
lock
(bad)
inc
ror
mov
xchg
lock
fcomp
lahf
pop
inc
jbe
xchg
addr16
xor
fmul
(bad)
sbb
jnp
fcomi
dec
je
int
lds
cmp
clc
mov
push
cs
pop
mov
dec
test
push
fs
test
inc
xchg
mov
adc
sub
retf
adc
pop
pop
fmul
xchg
adc
sbb
sub
scas
outs
inc
imul
adc
popf
repnz
in
in
sub
mov
cmp
bndldx
add
(bad)
arpl
pusha
ss
and
cmp
add
out
out
call
out
sbb
stc
mov
jne
rol
shl
xchg
add
cmp
push
cmps
push
add
sub
mov
ins
hlt
pop
(bad)
cmp
(bad)
ret
sbb
mov
mov
(bad)
cli
mov
push
lahf
mov
lock
mov
pop
fsubr
test
shl
adc
mov
popf
and
sbb
push
or
or
add
sbb
inc
arpl
push
add
adc
call
stos
in
push
xchg
nop
(bad)
ficom
jae
or
pushf
or
ins
outs
(bad)
cs
cmps
into
cwde
jge
fsubr
mov
int
lods
mov
bound
inc
lods
jg
not
mov
fstp
mov
mov
sahf
sbb
movs
push
and
mov
lods
loope
or
mov
or
movs
out
nop
(bad)
sub
mov
call
pusha
sbb
jbe
ret
not
les
xchg
in
pop
push
adc
pop
adc
pushf
sbb
push
adc
clc
xchg
pop
ja
cmp
pushf
dec
jecxz
pop
add
das
test
pop
push
loopne
mov
repz
mov
xchg
shl
or
or
scas
stc
jge
int3
xor
xor
movs
jmp
fst
jg
mov
xor
mov
push
mov
or
or
outs
jle
mov
cwde
jecxz
cwde
pop
sub
or
(bad)
pop
call
es
lahf
xor
cmps
sahf
test
pop
xchg
push
enter
cmp
(bad)
in
pop
jmp
rcl
ret
inc
cmp
rol
fwait
mov
jmp
sar
mov
xor
cs
jnp
pop
mov
lds
sbb
pop
push
lds
clc
sub
mov
mov
jl
xchg
(bad)
fxch
out
xchg
xchg
cdq
push
fist
daa
inc
push
int
pop
jbe
pop
fadd
into
je
jns
in
jnp
out
rol
cld
nop
push
mov
jne
in
jnp
popf
xchg
stc
lahf
outs
sbb
fwait
shl
mov
jae
(bad)
cld
imul
dec
mov
and
jge
or
xor
dec
bound
bound
stos
mov
mov
and
inc
push
mov
push
shr
dec
cdq
outs
ret
push
push
cmp
or
iret
fldenvw
fsub
ffreep
sti
sbb
mov
nop
in
inc
dec
in
in
call
nop
and
xchg
neg
ror
pop
ficomp
inc
or
shl
in
pop
add
mov
gs
adc
push
retf
cdq
mov
sub
out
push
mov
pop
pop
out
jp
sbb
xchg
(bad)
fcomp
daa
jl
pop
jl
add
ss
fisub
xchg
ds
mov
mov
xor
into
xor
outs
cmp
and
enter
mov
out
loopne
ror
mov
loope
push
mov
xor
fs
repz
out
js
dec
movs
xchg
aad
xor
leave
pop
repz
not
pop
dec
enter
mov
or
inc
mov
data16
jl
out
minps
(bad)
dec
rol
lea
outs
dec
pop
enter
push
adc
ss
pop
inc
daa
inc
ret
in
cmp
movs
push
loope
or
push
add
jle
scas
inc
call
xor
push
or
pop
sub
xchg
push
rcl
clc
mov
or
jno
sbb
inc
sbb
pop
rcl
clc
sbb
fistp
pop
int3
push
cmp
dec
inc
dec
xor
outs
xchg
mov
add
adc
sbb
sub
push
dec
jmp
and
adc
xor
repnz
std
add
imul
jbe
push
imul
sar
jmp
push
scas
jge
jbe
les
mov
or
jmp
outs
hlt
arpl
adc
loop
mov
(bad)
outs
ins
mul
clc
sub
loope
sub
fild
mov
(bad)
and
(bad)
pop
add
inc
xchg
imul
daa
scas
xchg
mov
lds
dec
nop
ja
loop
sbb
mov
sti
push
dec
ds
aad
sbb
push
cmps
arpl
out
mov
inc
fsubp
lods
sbb
push
add
das
and
mov
inc
cdq
scas
cli
sub
push
add
sti
test
jl
pop
repnz
mov
cwde
sub
fs
mov
cld
mov
in
mov
js
fst
sub
cmp
cmp
jmp
cmp
scas
pop
sub
sub
popf
xor
outs
loope
and
and
push
cs
pop
movs
add
lods
and
mov
les
ins
call
test
(bad)
sti
call
cmps
and
mov
xchg
lods
jo
sub
mov
ss
and
packsswb
inc
mov
cmps
mov
sbb
add
ficom
cdq
inc
js
sbb
sbb
inc
pop
(bad)
sub
imul
ins
add
stc
fwait
jne
rol
mov
rol
mov
popa
bound
xor
into
inc
sbb
mov
pop
or
mov
les
stc
mov
sbb
add
rol
jbe
sub
pop
mov
or
or
stc
hlt
test
pop
xchg
cld
mov
and
ficom
jbe
cmp
js
dec
imul
sub
jno
out
mov
(bad)
imul
fld
daa
scas
sub
movs
(bad)
ins
sub
cli
inc
mov
outs
es
pop
jbe
pop
pushf
shr
outs
inc
sub
frstor
adc
dec
arpl
div
pop
sub
mov
jecxz
jmp
fisubr
add
jmp
pop
loop
pop
sub
nop
adc
lock
mul
stos
xor
loopne
lock
dec
xchg
cmp
add
sbb
lods
xor
inc
push
fsubr
or
fst
pop
dec
mov
sub
ins
sub
cwd
sbb
push
in
retf
leave
iret
jnp
fidivr
jno
dec
sbb
cmc
mov
sub
pop
xor
push
scas
sbb
inc
gs
pop
movs
jne
aaa
fwait
je
fst
cmp
jno
jle
xchg
or
dec
add
shl
xor
outs
in
push
push
inc
xchg
cmps
cli
ret
dec
loope
jl
jecxz
push
adc
hlt
xchg
fild
push
sub
test
ffree
cmp
imul
adc
or
sbb
push
es
loopne
add
dec
scas
mov
gs
in
xchg
jg
inc
je
test
inc
mov
into
clc
pop
retf
dec
(bad)
cwde
jmp
push
add
movs
adc
movs
sub
mov
xchg
stos
mov
clc
push
call
leave
aam
repz
and
test
inc
out
in
shl
repnz
ror
xchg
arpl
sub
push
data16
jne
loop
outs
jo
or
push
dec
mov
sub
aam
dec
lea
mov
push
pop
out
lods
(bad)
inc
xchg
lds
dec
lods
sbb
test
and
add
jecxz
jae
inc
pushf
sbb
dec
and
(bad)
adc
out
xchg
int
pushf
lea
sub
dec
inc
xor
gs
add
pusha
addr16
and
in
inc
push
push
cmp
or
or
(bad)
lods
jo
jle
mov
xchg
lods
pop
loop
fs
and
xchg
sbb
add
dec
out
xor
push
xor
sub
cmp
xchg
add
adc
cwde
bound
dec
xchg
aas
ror
add
push
and
test
fucomip
or
xchg
inc
out
jge
les
sar
fcomp
push
ins
inc
dec
jne
pop
outs
aaa
or
ds
sub
ds
adc
ret
xchg
mov
push
mul
test
xchg
add
retf
jb
in
push
lock
add
sbb
sub
mov
push
jecxz
mov
fild
int3
mov
movs
sbb
push
adc
sbb
xor
outs
pop
push
sbb
pop
adc
mov
push
into
nop
dec
cwde
retf
imul
ss
push
and
push
repz
jmp
repz
inc
mov
sub
gs
pushf
mov
imul
and
ret
push
jne
(bad)
xor
and
iret
push
fwait
push
ds
shl
movs
mov
stc
xchg
xchg
push
xor
scas
push
mov
lahf
into
xlat
and
mov
aam
cwde
inc
fsub
jb
push
pop
push
lea
ins
push
mov
inc
lahf
aam
cwde
mov
pop
pop
into
nop
jmp
repnz
mov
lahf
cmp
xor
dec
das
cmp
mov
test
das
es
pop
dec
inc
clc
add
pop
rcr
ins
cmp
cmps
ror
sub
scas
sti
icebp
adc
push
popf
test
mov
push
fadd
dec
push
push
jae
loopne
es
jle
push
les
jae
(bad)
(bad)
in
add
adc
mov
pop
je
fnsave
les
sub
cmp
sti
out
call
cmp
scas
repnz
shl
jns
dec
sbb
pop
pop
mov
das
popf
xchg
add
pushf
xlat
in
add
mov
add
mov
gs
popa
dec
dec
xchg
fstp
rol
and
push
mov
in
mov
out
mov
adc
or
cmp
(bad)
test
mov
and
in
fisubr
test
push
xor
fcomip
push
jns
push
inc
stc
loop
in
mov
cmp
lods
push
pop
mov
jns
inc
add
mov
outs
mov
dec
dec
dec
retf
jbe
inc
pop
cmp
add
mov
scas
or
int3
cmp
xor
dec
dec
stos
movs
adc
lock
(bad)
mov
xchg
cdq
sbb
jp
lahf
push
stc
cs
sti
xchg
xor
jnp
fdiv
and
inc
jp
jne
push
or
das
push
icebp
lods
xchg
fs
xchg
test
sbb
lods
xor
imul
push
pop
jl
nop
daa
and
xor
enter
mov
jl
repnz
or
test
sbb
mov
dec
xor
dec
mov
inc
pop
test
xchg
inc
int
jle
iret
jb
scas
sbb
adc
jae
jg
add
xor
ins
dec
mov
dec
(bad)
cmp
sahf
daa
push
mov
xor
out
fnstenv
out
xchg
call
add
cmps
cs
loop
outs
(bad)
gs
jne
dec
mov
push
jl
sub
mov
push
ret
push
into
stos
cmps
pop
mov
fmul
jl
cdq
popa
adc
mov
mov
jbe
cld
repz
cld
mov
and
out
shl
test
jne
in
imul
rol
pop
call
inc
sub
add
inc
xor
inc
and
xor
inc
lods
stos
out
out
cmp
dec
xor
test
sbb
ret
xchg
stos
bound
jbe
dec
pop
dec
fs
cmps
loopne
adc
jp
xor
js
rcr
shl
(bad)
jle
mov
dec
xlat
shl
sub
js
cmp
add
mov
or
jbe
or
arpl
push
movs
sub
jb
mov
or
adc
sub
mov
mov
shl
jl
or
jo
jg
mov
sbb
sub
pop
mov
add
ja
sahf
gs
sub
mov
outs
mov
test
(bad)
xlat
inc
mov
dec
push
movs
in
shl
retf
(bad)
xor
js
jl
xchg
test
pushf
mov
cmps
push
and
fwait
ret
sub
push
movs
mov
push
mov
scas
mov
leave
shr
mov
sub
cmp
adc
mov
sbb
push
inc
push
mov
or
pusha
mov
pop
xchg
dec
lea
add
(bad)
adc
(bad)
sub
jp
shl
inc
xchg
sub
mov
push
xor
outs
bound
lods
jo
and
cmp
into
mov
mov
and
xchg
push
retf
dec
mov
(bad)
sbb
jp
in
inc
cs
sbb
cld
pop
mov
cwde
sub
pop
and
dec
iret
sahf
jae
out
jno
or
int
fcmovnbe
lahf
cmc
nop
add
or
xchg
pop
shl
and
cmp
xchg
in
mov
mov
inc
in
scas
gs
mov
mov
lods
ins
cmp
add
imul
cmp
lock
or
and
hlt
shl
stos
inc
and
sbb
or
in
mov
mov
mov
and
sub
mov
lahf
je
arpl
cmc
push
cmps
ins
fwait
push
adc
ret
fwait
mov
sti
xor
mov
mov
pop
sub
movs
mov
shl
xor
cmp
pop
jns
dec
pop
ins
xchg
mov
shl
ins
dec
or
je
cmp
cli
push
push
xor
dec
jo
inc
inc
dec
test
aas
shl
rcr
add
cwde
jb
dec
xchg
pop
jp
cmc
jmp
shr
xchg
clc
jne
shr
sub
(bad)
cmp
push
xor
iret
aas
adc
movs
cmp
jp
add
enter
sbb
inc
mov
mov
aaa
pop
repnz
mov
push
and
dec
inc
retf
adc
(bad)
fs
ins
nop
enter
xchg
pop
adc
mov
icebp
xchg
dec
ja
jno
jle
inc
push
jns
(bad)
pop
jmp
cli
fnsave
js
out
pop
rcr
mov
fld
xor
mov
mov
mov
fsub
or
jmp
xor
cmp
push
in
adc
rol
jl
rcr
dec
jmp
and
adc
je
shr
mov
mov
lock
push
data16
ror
xchg
push
rol
je
xor
jmp
xor
das
push
lea
fdivr
imul
push
sbb
rcl
ja
test
push
mov
sti
jns
rcl
ret
xchg
mov
imul
js
gs
in
stos
int
movs
mov
inc
sti
dec
ja
addr16
into
and
jns
mov
movs
and
push
or
in
stc
aaa
inc
test
mov
loope
out
pop
mov
pop
stos
mov
call
data16
test
add
mov
mov
pushf
push
popa
mov
xlat
pusha
popf
xor
sub
dec
test
retf
stos
dec
jnp
dec
sti
mov
cmp
xor
mov
jo
int
sub
lock
jmp
leave
push
add
and
mov
push
cld
call
nop
shl
push
imul
sub
and
pop
or
call
and
dec
xor
xchg
or
dec
adc
loope
xchg
mov
or
fs
or
in
aam
loop
into
loop
add
cdq
fwait
repz
inc
fmul
sahf
push
fs
mov
pop
repnz
arpl
mov
inc
adc
add
(bad)
arpl
je
and
mov
outs
sbb
cmp
fimul
adc
data16
jae
fcom
cs
xchg
push
in
movs
nop
popf
cmp
iret
iret
inc
leave
sbb
jno
sub
xchg
call
xor
add
xchg
dec
push
sti
outs
hlt
xchg
nop
adc
adc
(bad)
adc
fsub
sub
pop
mov
cmps
(bad)
fcomp
add
aas
adc
jne
daa
mov
in
dec
pop
pop
sub
xor
xchg
mov
movs
jl
iret
and
push
(bad)
mov
mov
rcl
add
in
stc
xchg
sub
dec
imul
mov
jae
push
push
push
stos
adc
aam
arpl
mov
movs
mov
popf
or
xchg
mov
clc
adc
add
stos
std
int
sbb
dec
in
xchg
mov
dec
xchg
sub
arpl
jecxz
(bad)
dec
pop
sbb
fwait
leave
xchg
mov
lahf
rcr
cmp
mov
outs
lods
xor
test
arpl
clc
push
or
enter
push
sbb
(bad)
int3
test
or
ret
jb
fcom
test
movs
dec
shr
cs
sbb
scas
rcl
popf
dec
mov
not
nop
js
int
xchg
or
pop
(bad)
fldenv
mov
sbb
cmp
idiv
sub
add
sub
cmp
xor
add
xor
dec
inc
lods
addr16
test
cmp
icebp
mov
sub
sbb
mov
sub
mov
mov
cli
scas
pop
hlt
fwait
sbb
cwde
inc
repnz
xchg
and
adc
cs
fwait
mov
or
arpl
es
fist
sub
xchg
mov
mov
adc
pop
dec
dec
push
test
and
bound
call
pop
xor
sti
pusha
mov
cld
iret
movs
cmps
or
cmc
inc
lods
cdq
stos
xor
movs
sub
push
xchg
das
mov
inc
aas
scas
stos
xchg
nop
sub
lods
mov
test
aad
(bad)
jl
mov
mov
addr16
imul
dec
jp
xchg
sahf
lds
mov
inc
mov
sub
pop
punpckhbw
bound
cmps
(bad)
(bad)
(bad)
in
rol
pop
(bad)
lock
dec
mov
mov
stos
sbb
push
daa
xchg
dec
mov
xor
lahf
test
aas
inc
dec
xor
pushf
lahf
jmp
shl
sub
shl
shr
mov
add
inc
sub
loopne
mov
inc
stos
ret
add
pop
sti
pop
xchg
mov
enter
pop
mov
pop
push
leave
xchg
ins
mov
out
pop
dec
cmp
(bad)
cmp
rcr
mov
lahf
adc
aad
pop
in
dec
mov
add
jae
out
pop
(bad)
xchg
outs
out
dec
repz
or
pop
cmp
jne
cmp
mov
in
mov
nop
iret
hlt
fstp
loope
inc
scas
sbb
mov
pop
call
icebp
out
inc
popf
cmp
mov
mov
pop
inc
pop
fbld
aad
dec
sub
add
fisttp
outs
mov
xchg
pop
pop
mov
mov
shl
hlt
aam
test
mov
mov
pop
rol
fmul
jns
outs
mov
mov
jno
or
inc
pop
jmp
sahf
mov
es
(bad)
push
jno
push
inc
adc
dec
and
addr16
add
mov
test
fs
gs
imul
xor
in
cs
sti
inc
cmc
add
pop
out
add
jmp
sbb
mov
imul
xor
jmp
lods
push
xchg
or
pop
lods
test
add
jecxz
fidiv
(bad)
xchg
pop
repz
(bad)
sti
retf
mov
cs
xor
jno
mov
mov
xor
mov
lds
mov
out
mov
or
mov
leave
adc
jae
test
fwait
jl
cmps
adc
fild
xchg
add
std
jnp
adc
and
cmp
daa
nop
mov
hlt
(bad)
xchg
loopne
aas
(bad)
pushf
jnp
jae
xor
lahf
mov
rol
out
(bad)
or
lahf
add
leave
loope
inc
mov
leave
bound
lock
repnz
sub
xchg
iret
stc
pop
or
dec
adc
adc
ins
adc
inc
dec
dec
dec
bound
sti
cmc
mov
mov
pushf
ds
xor
aad
jno
gs
mov
in
or
iret
push
out
stos
mov
rcr
mov
inc
xchg
cwde
and
push
dec
stos
push
ret
add
push
xchg
fisttp
xor
jo
les
stos
arpl
sub
cmp
(bad)
fadd
xor
adc
(bad)
in
rcr
cmp
push
pusha
sub
mov
jp
push
sahf
mov
sub
sub
mov
rol
mov
not
mov
inc
dec
and
aas
push
cmps
sbb
sub
loopne
xchg
shr
test
mov
xchg
xor
inc
push
adc
dec
pop
push
sbb
inc
sbb
retf
xor
cmp
push
xor
rcr
fistp
inc
xchg
jo
pushf
repz
ds
dec
call
rcl
rcl
pop
sub
ss
(bad)
int3
fisttp
call
lods
jno
dec
mov
cmps
push
dec
jbe
test
adc
pusha
mov
mov
push
mov
mov
pop
mov
mov
inc
pop
stos
iret
push
or
dec
mov
movs
jp
add
enter
(bad)
or
mov
cmp
(bad)
test
jg
das
imul
push
inc
shl
in
aaa
sub
pop
jns
ss
dec
cmp
clc
pop
pop
mov
ins
hlt
inc
ss
pop
pop
mov
push
fcmovnb
cdq
or
pop
push
in
sbb
and
fld
push
xor
mov
movs
and
das
ins
(bad)
sti
mov
in
adc
stos
fmul
imul
sbb
lods
mov
stos
sub
mov
shr
movs
sbb
lods
test
mov
sub
(bad)
test
(bad)
loop
popf
cld
clc
push
push
mov
pop
push
sbb
mov
test
loopne
mov
nop
xchg
fwait
xor
add
inc
xchg
add
outs
fwait
sar
mov
jno
sub
jne
std
(bad)
std
int3
push
jb
jo
xchg
mov
aam
sbb
push
pop
ss
adc
jne
lods
push
ins
add
xchg
add
inc
retf
in
imul
jmp
push
fdecstp
push
push
sahf
jl
idiv
cmps
repnz
test
adc
imul
and
and
mov
or
xlat
add
cmc
sbb
dec
push
popa
xchg
jg
popa
fst
movs
ins
sti
ret
pop
aam
cmp
in
or
cs
sub
ja
xchg
mov
xor
pushf
mul
into
xor
inc
mov
leave
js
push
dec
enter
lsl
xor
adc
or
push
jae
mov
cs
pushf
imul
pusha
(bad)
pop
push
mov
stos
aas
call
in
mov
bound
pop
enter
jle
dec
fs
ja
shr
test
mov
pop
mov
mov
cmp
push
in
pop
mov
xor
and
mov
outs
adc
lea
dec
sub
push
xor
add
movs
mov
pusha
adc
xor
paddusw
pop
mov
aad
push
dec
pop
in
push
fcmovnbe
sahf
sub
int3
cmp
dec
or
call
push
fs
sub
add
push
add
mov
frstor
mov
dec
or
pop
mov
xor
movs
int
mov
lea
(bad)
mov
xchg
pop
add
xor
adc
fsubr
jg
push
idiv
in
js
jl
ds
push
repz
ficomp
in
test
nop
add
mov
adc
loop
scas
mov
rcr
jae
data16
clc
or
ret
shl
mov
pop
xor
js
xor
rcr
jb
dec
xor
push
add
pop
fbstp
xchg
sti
(bad)
rol
cmp
mov
loope
xor
mov
add
pusha
mov
bnd
iret
jmp
js
jp
jle
aaa
mov
xor
dec
mov
pop
mov
call
movs
or
mov
mov
push
in
repz
call
dec
inc
jns
int
pop
push
data16
jle
sbb
paddw
jle
(bad)
shr
les
lea
inc
mov
sbb
pop
ins
pop
sbb
sbb
xor
retf
sar
jle
mov
push
mov
xor
and
nop
inc
enter
sbb
pop
pop
jmp
adc
cld
cmc
cli
das
push
sahf
xor
dec
pop
sub
and
jmp
jg
adc
retf
sahf
pop
adc
pop
aaa
aam
clc
loopne
shl
sbb
enter
mov
and
pop
cdq
xchg
jno
call
xor
sti
xlat
or
mov
jae
or
and
adc
fwait
push
sub
and
in
in
mov
frstor
mov
aas
fbstp
pop
pop
jle
or
mov
dec
gs
outs
out
into
dec
push
lods
mov
push
pop
shl
js
enter
xchg
adc
xchg
inc
cmp
icebp
jns
hlt
mov
int3
fisubr
aas
pop
sti
ret
pushf
cmp
stos
and
and
and
push
jnp
mov
add
ja
jmp
push
add
(bad)
push
mov
outs
gs
loopne
or
or
sbb
jecxz
ss
retf
repz
push
and
arpl
jo
jno
add
jae
and
add
lods
and
ins
ss
pushf
mov
out
test
sbb
xor
imul
mov
stc
fdiv
mul
jbe
in
pop
or
push
sbb
cmps
xor
ror
and
mov
pause
icebp
xchg
test
cmp
jmp
ins
mov
loope
add
jo
lock
test
push
jmp
mov
dec
cli
jmp
mov
xchg
mov
aas
xlat
sar
mov
and
xchg
dec
push
mov
dec
dec
mov
sub
sub
addr16
sub
push
repnz
dec
mov
jg
into
in
ds
add
repz
sbb
jno
mov
(bad)
and
xor
push
leave
stos
sub
leave
sbb
mov
arpl
pop
movs
lahf
jns
push
es
cmps
pop
xchg
mov
cmp
dec
pop
dec
fs
or
in
inc
xchg
mov
fadd
clc
sub
sbb
gs
sbb
sub
sub
push
xor
sbb
dec
jae
xchg
jecxz
outs
mov
or
sahf
or
hlt
push
inc
hlt
fimul
sub
mov
pop
jg
adc
ins
adc
adc
arpl
cmps
pop
call
cdq
xchg
xchg
push
cmp
imul
pop
inc
or
clc
imul
mov
push
imul
fisub
push
mov
hlt
add
sti
aam
aaa
sbb
jmp
jnp
call
ins
aam
test
lahf
icebp
mov
pop
stos
fdivr
mov
jae
push
out
bound
adc
jg
movs
ins
jp
pop
stos
ins
sbb
pop
cmp
mov
sbb
mov
pop
hlt
lahf
mov
sub
lods
pop
pop
cmps
outs
sub
stos
fdiv
in
mov
cmp
ds
fdiv
repnz
mov
xchg
dec
push
pop
or
cdq
repz
mov
mov
push
(bad)
jmp
aas
push
imul
sbb
fdiv
sbb
jbe
(bad)
int3
addr16
mov
stc
jle
outs
mov
mov
cdq
adc
mov
dec
imul
ds
fwait
mov
push
in
push
cwde
out
retf
dec
test
dec
pop
mov
movs
ins
dec
push
pop
fst
sub
ja
sub
aad
and
mov
mov
mov
out
pop
mov
inc
imul
aaa
mov
sub
xchg
pop
out
ret
pop
retf
ret
in
es
push
cli
sbb
push
pop
je
adc
or
xor
jmp
in
xor
jge
shr
int
xchg
mov
movs
test
stc
fstp
cmc
or
mov
clc
mov
inc
icebp
loopne
mov
xor
dec
call
imul
(bad)
lods
adc
fld
jmp
ficom
and
in
xchg
enter
enter
pop
dec
loop
daa
scas
loope
inc
iret
inc
sbb
int
and
(bad)
scas
arpl
sub
pop
adc
pop
sub
(bad)
call
loop
sbb
dec
je
mov
sub
mov
in
ja
mov
inc
pop
mov
shl
out
jae
and
pop
mov
les
cmp
scas
ins
leave
(bad)
mov
stos
or
adc
je
xchg
inc
xchg
push
(bad)
inc
pop
push
sbb
sbb
push
jg
das
test
ss
in
(bad)
fldcw
cmps
add
imul
xchg
pop
scas
push
(bad)
and
icebp
or
sub
shl
(bad)
cmc
rcl
loop
lock
inc
and
in
test
sbb
mov
aad
jne
fidivr
jge
pop
sbb
popa
pop
xchg
xchg
adc
push
add
push
(bad)
in
sub
sbb
inc
xchg
add
jnp
jg
sbb
mov
mov
mov
pop
cmp
inc
idiv
shr
retf
fbld
adc
test
and
mov
sbb
and
mov
loope
inc
add
push
cwde
ret
cld
jmp
mov
cmps
jle
retf
imul
mov
into
xchg
popf
movs
lods
jnp
push
cmp
or
pushf
inc
cmp
ins
xchg
mov
push
add
mov
pusha
push
icebp
ds
int3
jle
push
sti
add
xchg
outs
jle
sti
mov
jno
mov
repnz
int3
call
xchg
les
xor
inc
arpl
fs
mov
and
jp
pop
and
pop
test
jae
pop
add
inc
neg
addr16
cmps
pop
(bad)
scas
dec
arpl
xchg
or
test
leave
ret
ret
inc
add
lods
jg
lahf
dec
idiv
and
mov
out
add
mov
add
aaa
dec
test
sbb
push
or
or
adc
hlt
pop
jbe
(bad)
jmp
add
pop
adc
sbb
movs
repnz
(bad)
inc
ret
pop
mov
(bad)
ret
dec
jge
jnp
hlt
popa
mov
ror
mov
movs
test
ror
xor
push
inc
movs
cmps
pop
and
pop
aas
(bad)
xor
push
cmps
dec
int3
push
je
sbb
adc
les
lock
fadd
fisub
fcmovnbe
sahf
imul
clc
js
ret
cmps
push
inc
cmovno
ss
cwde
fucomp
mov
xchg
dec
jno
aaa
jbe
jo
test
pushw
adc
adc
ins
icebp
lds
push
loop
push
icebp
fstp
pop
adc
retf
dec
jmp
jmp
repz
dec
pop
push
data16
xor
push
mov
test
cmc
cmps
and
push
retf
rcl
test
arpl
fld
adc
std
mov
js
out
sar
or
dec
dec
dec
ficomp
or
xor
and
push
sub
mov
out
in
pop
inc
pop
stc
fidiv
ss
adc
cmps
mov
scas
das
cmp
je
(bad)
and
pop
xchg
dec
inc
add
loopne
dec
sbb
add
add
mov
pop
pop
out
repnz
sbb
in
leave
ds
mov
push
jnp
dec
inc
call
fild
mov
lods
aam
arpl
cmp
add
inc
pop
cmc
data16
or
fistp
push
xchg
fisub
add
adc
push
cmp
cmp
ret
aas
mov
call
mov
test
sbb
push
jnp
dec
inc
lods
mov
cmp
mov
push
mov
arpl
imul
jb
pop
mov
or
add
ficom
jae
out
(bad)
push
push
ins
scas
pop
mov
test
inc
call
in
sbb
orps
retf
xor
jmp
ffree
dec
mov
xor
add
sti
in
xchg
movs
add
sub
sub
jno
or
mov
enter
sahf
and
sbb
cdq
nop
jns
popf
xchg
ins
mov
push
jecxz
ret
imul
div
sbb
stc
call
push
sub
xchg
cld
fisub
mov
mov
not
dec
mov
lods
push
xor
xor
dec
sbb
mov
aam
inc
les
out
(bad)
ror
ror
retf
jmp
jnp
or
dec
stc
not
sti
inc
mov
adc
pop
mov
xchg
adc
pop
push
sub
inc
frstor
adc
pop
sub
jp
inc
fwait
pop
daa
ds
pop
push
fcmovnu
mov
loopne
sub
mov
xchg
iret
jo
mov
cmp
inc
test
mov
jmp
fild
mov
cmp
outs
call
shr
ja
push
sbb
sub
sbb
movs
shr
loope
pop
push
or
push
or
jbe
mov
daa
dec
sbb
fsubr
adc
mov
inc
push
sub
sahf
cmc
xor
or
sar
in
inc
sub
scas
push
imul
add
xchg
retf
xor
sbb
dec
inc
pushf
in
sub
or
mov
dec
unpckhps
imul
mov
or
push
push
xchg
pop
data16
loopne
jle
and
inc
and
sbb
pushf
xchg
jnp
fwait
push
sbb
jno
push
lods
cmp
out
mov
adc
test
mov
in
stos
mov
sbb
int3
shl
test
mov
in
xchg
int
lods
imul
and
je
push
daa
cmps
xchg
stos
xor
sbb
es
stc
dec
add
xchg
lea
fwait
aas
mov
inc
and
movs
ins
std
js
clc
add
sbb
pop
pop
outs
and
fwait
rol
popf
sti
jge
and
fimul
jmp
or
mov
fld
das
cs
mov
enter
aas
mov
sar
add
js
jmp
mov
cmps
sbb
ficomp
cmp
cwde
mov
jns
movs
xlat
outs
outs
push
mov
leave
push
or
shl
sbb
cmp
aas
pop
(bad)
test
pop
cmps
dec
call
lods
inc
jle
dec
gs
out
push
adc
rcl
test
mov
inc
mov
(bad)
fldcw
add
aas
fmul
ja
xchg
movs
mov
pop
mov
jg
cmc
js
dec
out
adc
cli
das
and
sti
xlat
mov
mov
stc
push
or
cmps
popf
frstor
iret
das
mov
pop
cmp
dec
ja
dec
add
fld
call
mov
adc
dec
push
cmc
clc
int3
std
rcr
je
sub
push
mov
or
adc
mov
and
leave
mov
xor
(bad)
into
hlt
(bad)
(bad)
mov
jo
lods
mov
pop
out
inc
lds
pop
fs
push
ss
hlt
xchg
xchg
sub
out
cmps
scas
mov
call
popf
push
setg
fmul
outs
cld
mov
mov
xchg
cmp
fadd
pminub
pop
inc
jp
and
in
xchg
sbb
inc
cmp
cmp
aam
call
mov
mov
sar
pop
mov
(bad)
je
inc
mov
imul
fstp
rcl
sar
bound
std
stc
push
cmp
test
loope
test
fwait
data16
jne
(bad)
aas
push
cmp
dec
ffree
inc
push
retf
mov
pop
rol
daa
adc
gs
inc
frstor
(bad)
mov
scas
xchg
call
(bad)
xor
fild
mov
mov
lds
push
pop
pusha
adc
imul
jnp
ret
push
je
ror
sbb
popf
cmps
and
push
mov
inc
xor
and
pop
outs
cmp
dec
out
push
daa
mov
inc
xchg
mov
xor
mov
and
fst
mov
fldcw
nop
and
loope
xchg
xor
test
pop
ds
adc
imul
push
and
cmps
dec
call
hlt
xor
div
xor
imul
mov
popa
outs
ret
mov
test
out
pop
iret
and
test
jg
and
imul
lock
jge
shl
ds
xor
leave
(bad)
fcmove
pop
fld
push
pop
sti
ret
push
mov
repz
sti
into
jae
das
push
inc
inc
push
and
xor
push
mov
pop
adc
sbb
test
leave
lahf
mov
jno
and
mov
add
jae
(bad)
mov
movs
pop
repz
dec
cmps
jmp
dec
loope
jp
mov
inc
xchg
adc
xchg
in
sbb
mov
mov
adc
mov
das
xchg
dec
mov
pmovmskb
or
or
aas
and
aad
xor
outs
mov
int
mov
retf
mov
loope
sbb
dec
es
sub
adc
sub
repnz
or
aad
fs
pop
movs
shr
ins
jle
loope
push
inc
rcl
push
pop
pop
push
into
fisttp
sub
mov
(bad)
sar
shl
dec
les
push
shl
das
mov
sar
or
dec
daa
rcr
mov
mov
mov
mov
fild
dec
popw
adc
xor
xchg
push
xchg
fldenv
ficom
repnz
pop
dec
icebp
fdiv
(bad)
lods
pop
loop
gs
mov
out
fcmovnbe
push
outs
mov
(bad)
gs
jne
fcomp
popa
cli
rcl
pop
push
loope
lea
loop
outs
mov
in
xor
pop
pop
xchg
jne
dec
cmp
push
rcr
ret
imul
or
add
scas
outs
and
int3
inc
repz
jb
imul
push
mov
mov
lea
(bad)
sub
ss
mov
jmp
adc
pop
mov
aad
and
cmp
in
jo
push
lock
jb
out
and
cmp
into
es
sbb
xchg
std
addr16
sbb
cmps
sub
stc
popa
in
loopne
mov
cmp
xchg
pop
sti
daa
and
mov
and
mov
and
out
mov
fnsave
or
jne
mov
lods
cmp
xor
or
scas
icebp
int
add
lock
add
cmc
retf
pop
push
ret
rcl
cli
jp
and
jbe
lea
or
(bad)
mov
dec
clc
sub
scas
and
adc
sar
xor
lods
cmps
dec
out
add
xor
dec
(bad)
xchg
push
repnz
or
cmp
outs
adc
inc
sbb
(bad)
lea
cmp
cli
sbb
(bad)
cmp
dec
fild
cmp
add
in
aam
jno
or
or
ror
sbb
or
test
ds
mov
cmp
das
sub
cli
add
ins
dec
jmp
xchg
xchg
fnstenv
adc
add
iret
push
div
jl
into
test
mov
and
sbb
jns
xor
mov
ror
xchg
or
xor
pop
(bad)
add
call
aam
adc
inc
enter
jns
std
into
inc
popa
mov
into
sbb
in
pushaw
in
mov
in
adc
add
icebp
clc
cmp
(bad)
sar
loope
je
loop
sub
jmp
sub
dec
into
xchg
xor
repnz
lods
pusha
rol
dec
test
int
test
cmp
sub
loop
add
mov
call
inc
add
pop
ins
add
xchg
lods
jnp
ss
test
sbb
and
dec
loop
cmps
lods
rcl
inc
pop
adc
outs
addr16
jecxz
cmps
cmovo
push
sbb
out
or
popa
pop
stos
cmps
test
sbb
in
or
lahf
jge
push
add
xchg
aas
xor
jns
das
mov
push
shl
data16
call
sahf
and
mov
loopne
sbb
clc
xor
(bad)
xchg
mov
pop
das
mov
jg
dec
pop
sbb
outs
pop
out
jb
(bad)
mov
xor
mov
loop
ja
rcr
sub
adc
stc
push
int
std
sbb
or
test
(bad)
shl
add
jbe
dec
push
jbe
mov
cmps
adc
in
fist
inc
jb
test
enter
cmc
scas
lahf
pop
xchg
xchg
int
ror
pop
pop
push
out
fldcw
add
(bad)
popf
scas
xlat
or
sub
in
and
mov
and
add
ja
push
mov
fild
sub
sbb
adc
push
cmp
pop
sbb
inc
fstp
xor
int3
cmp
lahf
mov
dec
retf
mov
lds
aas
stc
outs
mov
shl
xchg
movs
sbb
jno
add
movs
jns
sbb
lea
(bad)
popa
stos
and
(bad)
cmps
inc
add
rcr
dec
pop
xor
adc
jp
ret
sahf
push
sub
xor
cmp
in
cs
mov
pop
outs
jp
mov
retf
adc
jae
into
retf
fsub
lds
pop
or
pop
scas
push
es
loopne
fdiv
inc
push
pop
mov
jle
aad
sbb
xor
arpl
stos
or
push
(bad)
fwait
and
add
dec
jl
cmc
adc
(bad)
scas
or
cdq
lods
popa
sbb
fwait
adc
(bad)
neg
fwait
xchg
stos
inc
pusha
call
shr
jl
mov
cs
adc
dec
jg
imul
aad
pop
lds
xchg
in
xchg
sbb
push
push
mov
les
test
inc
jnp
mov
adc
js
jo
das
mov
mov
sbb
xor
fstp
into
scas
scas
adc
test
data16
sub
int
leave
retf
pop
pop
add
mov
inc
cmp
(bad)
push
call
lds
nop
scas
scas
dec
adc
cmp
mov
jecxz
jne
scas
inc
mov
dec
push
mov
shr
nop
outs
push
call
scas
cmps
and
sahf
fadd
dec
add
aam
ret
rcr
add
ds
cdq
aad
jmp
cmp
cli
xor
or
in
xlat
pop
push
add
push
and
(bad)
xchg
pop
es
dec
mov
xchg
and
js
pushf
mov
jbe
sbb
jns
jle
xchg
pop
test
in
pushf
lahf
lock
cmc
adc
jb
pop
dec
or
stos
movs
sti
fmul
inc
ins
jb
sub
push
pop
and
cmp
mov
xchg
sbb
dec
dec
pop
or
cdq
fisub
stos
fnstcw
and
imul
push
mov
sbb
push
mov
xchg
into
pop
fs
inc
pop
dec
push
retf
xor
(bad)
call
dec
mov
dec
xor
imul
mov
ja
sti
ins
xor
loop
out
fnstenv
sahf
push
ret
cmp
add
ins
jl
dec
sub
xchg
jmp
adc
sub
(bad)
cmp
mov
xor
ja
(bad)
jecxz
xor
and
icebp
xor
mov
(bad)
pop
ret
xchg
retf
mov
xor
xor
aaa
sbb
(bad)
add
inc
icebp
cmp
jge
call
jecxz
push
and
xchg
gs
daa
xor
test
ja
cmps
and
sbb
push
rol
lods
popf
xor
loopne
out
xor
test
std
or
aam
mov
cmp
xchg
xor
and
mov
pop
movs
movs
scas
cmp
mov
jbe
std
movs
retf
pop
xchg
pop
mov
adc
cdq
cbw
sbb
fs
bnd
mov
popf
(bad)
sub
mov
cmp
shl
leave
scas
lods
inc
lods
outs
cmp
jne
lds
mov
pushf
mov
ds
dec
and
xchg
test
fadd
dec
and
xchg
ret
pop
and
cmp
iret
jo
sub
stos
retf
fidiv
popf
mov
cmps
inc
movs
mov
aam
out
add
and
inc
xchg
inc
bnd
std
inc
int3
cmps
popf
add
xchg
cmp
mov
adc
mov
and
rol
lock
cmp
leave
jmp
mov
mov
sub
sahf
rol
xor
jmp
mov
mov
lock
(bad)
outs
cmp
xor
push
xchg
jmp
and
cmc
sbb
lods
and
imul
push
adc
es
mov
jge
aad
ja
push
pop
sbb
lahf
or
pop
jno
push
sub
icebp
jb
inc
test
rol
xor
mov
ins
jl
rcl
jbe
inc
xchg
nop
rcl
cld
push
inc
mov
or
sti
sbb
in
add
mov
pop
cmp
mov
mov
pop
add
mov
pop
adc
(bad)
ror
mov
xchg
fistp
xchg
mov
not
rcl
cld
cmps
(bad)
lds
ja
repnz
in
out
pop
xor
mov
mov
call
push
movs
adc
test
popf
or
xor
(bad)
fstp
xchg
dec
inc
fst
test
jns
sahf
retf
xor
xor
and
arpl
popa
nop
jns
mov
fs
repz
std
or
add
push
ins
in
pop
retf
aaa
mov
xchg
repz
push
inc
cs
ret
cmp
(bad)
sbb
outs
mul
cmp
pop
je
ja
sub
lods
push
jmp
ins
dec
push
inc
jmp
shl
mov
dec
(bad)
mov
into
pop
shl
cmp
sbb
arpl
call
jl
adc
xor
in
push
jae
add
xlat
xchg
mov
pop
maxps
stc
cmp
mov
cli
popf
(bad)
(bad)
(bad)
push
out
pop
iret
inc
adc
mov
dec
aaa
mov
cmp
repz
jbe
push
jge
imul
xchg
ja
cmps
jle
jmp
jmp
pushf
inc
mov
mov
in
leave
xchg
ja
adc
out
mov
pop
cmp
aas
push
test
push
icebp
jmp
cwde
add
movs
mov
imul
aad
inc
xor
mov
out
mov
mov
mov
jnp
xor
pop
sub
retf
leave
lahf
inc
mov
cmps
xchg
sub
int
lea
mov
push
retf
push
push
call
loop
fcomp
inc
out
pop
outs
ins
mov
or
xor
pop
loope
inc
xor
adc
dec
outs
push
lea
inc
pop
push
or
dec
ret
mov
jae
in
inc
lahf
mov
mov
mov
add
and
xor
xor
in
daa
hlt
shr
or
xor
(bad)
xchg
mov
adc
inc
mov
lea
add
ins
push
add
(bad)
xor
(bad)
out
dec
ins
sbb
stos
bound
push
ins
pop
jo
inc
(bad)
jmp
test
aam
mov
cmc
mov
ret
movs
dec
fdiv
shr
int
ja
in
mov
hlt
sub
push
xchg
mov
les
stos
lds
push
loope
loopne
cmps
push
loopne
sbb
(bad)
stos
fisubr
push
xor
lock
jmp
dec
sbb
mov
call
sbb
(bad)
in
pop
add
addr16
push
aas
aaa
sahf
and
pop
mov
sbb
xchg
dec
retf
ins
fs
and
adc
cmp
in
inc
popf
cld
dec
pop
push
in
xchg
cmp
scas
fcom
pusha
fwait
push
aad
rcl
cdq
in
and
adc
mov
cmp
popf
jnp
cmp
push
push
mov
push
mov
sbb
cwde
stc
push
push
jmp
cmp
je
xor
adc
xchg
movd
ds
inc
push
sahf
lods
push
pushf
fdiv
out
sbb
bound
scas
and
cs
adc
sahf
xchg
sar
outs
cmp
or
and
ffree
in
xchg
fadd
mov
add
cwde
sub
jmp
fnstenv
movs
mov
inc
pop
push
rcl
inc
ins
add
mov
mov
inc
ins
in
push
sahf
adc
or
xchg
dec
pop
mov
ja
pop
mov
mov
ja
retf
and
xor
cmps
loopne
jo
xor
stos
or
adc
pop
ss
lds
push
push
cmps
inc
clc
fnsave
or
xchg
ss
icebp
rcr
test
cmc
mov
and
imul
loope
mov
fldenv
clc
pop
jo
out
jl
pop
out
cmp
cmps
mov
sbb
cs
cld
retf
outs
inc
retf
cmps
ss
fisttp
js
ret
jg
mov
jmp
jo
push
out
lods
and
xor
mov
retf
add
push
les
or
add
retf
jbe
sar
das
pop
mov
fld
fistp
jmp
mov
pop
(bad)
mov
jns
adc
push
or
jmp
xchg
or
xchg
adc
ins
cmp
sub
icebp
mov
cs
jo
pusha
bound
daa
mov
(bad)
gs
and
dec
push
adc
stc
jge
pop
scas
pop
ds
jge
lds
mov
jecxz
and
mov
loopne
test
pushf
data16
je
mov
push
cwde
cmp
stos
xchg
movs
in
jmp
mov
mov
pop
movs
ins
js
mov
aam
ins
adc
xchg
add
scas
es
mov
jp
xchg
mov
aaa
mov
scas
xor
and
in
dec
je
push
fwait
mov
ret
and
int
mov
test
pop
outs
out
sbb
lods
outs
imul
dec
test
add
pop
pusha
pop
push
mov
mov
xchg
imul
fnsave
out
out
pop
mov
xchg
js
les
test
dec
inc
and
fisttp
test
repz
push
or
push
test
xchg
out
retf
mov
mov
pop
leave
push
arpl
push
and
movs
ins
cli
sbb
int
jmp
mov
xchg
ret
outs
out
mov
xchg
pushf
inc
cmp
xchg
cmps
push
pop
inc
mov
xchg
cwde
dec
add
push
sub
popa
inc
mov
mov
(bad)
or
mov
sub
leave
retf
cmp
enter
adc
jae
or
mov
test
out
pop
add
fsub
push
cs
sbb
push
xchg
adc
jle
xchg
sar
(bad)
gs
fcmove
push
sbb
dec
cmp
sar
or
aam
mov
sbb
mov
jne
mov
add
xor
addr16
sub
sbb
dec
pop
and
jb
push
jmp
mov
cmp
repnz
clc
outs
push
inc
call
mov
cmps
pop
add
pop
add
mov
ins
mov
inc
stos
and
lods
jle
mul
imul
lods
mov
leave
test
cs
add
and
les
dec
test
retf
(bad)
popf
loopne
inc
or
pop
test
push
dec
push
mov
mov
mov
and
pop
inc
xor
mov
jae
mov
jp
cdq
lods
outs
xchg
shl
dec
jle
xor
sahf
dec
mov
or
adc
dec
ss
call
xor
aam
adc
ss
add
sub
mov
test
out
lea
sub
rcr
jg
mov
dec
jne
inc
fs
mov
inc
in
mov
inc
adc
jb
sub
and
cmp
push
mov
or
or
mov
data16
push
pop
push
mov
shl
pop
xlat
fistp
mov
(bad)
addr16
ss
aaa
inc
fbld
mov
adc
dec
or
xor
or
test
add
call
(bad)
idiv
(bad)
push
mov
(bad)
cs
pop
jp
jl
rol
push
cmps
mov
lods
pop
cmps
stc
pop
test
les
sub
push
jle
dec
sbb
div
cmps
sbb
div
dec
retf
js
mov
ds
sbb
dec
jbe
mov
push
fnstsw
cwde
sti
xor
loop
es
jge
stc
cmp
push
(bad)
cli
iret
xlat
cdq
dec
fimul
inc
xchg
(bad)
psrlw
repnz
lock
ficomp
sbb
popf
repz
test
iret
adc
add
add
sbb
sti
mov
pop
jecxz
fist
lock
in
pop
dec
shl
ja
jbe
push
cmp
dec
nop
adc
adc
ja
inc
mov
idiv
cmps
xchg
ret
lock
pop
xlat
int
outs
sahf
int3
std
ds
dec
mov
std
pop
loopne
loop
and
mov
icebp
retf
lahf
jae
scas
imul
cld
push
jne
push
jns
inc
dec
push
dec
inc
or
push
shr
jmp
mov
add
imul
call
jmp
dec
inc
jbe
ss
test
es
dec
aam
cmp
ds
ins
fdivr
jmp
push
fwait
inc
ss
(bad)
in
adc
ja
fimul
mov
stos
pop
rcr
rcl
push
or
das
call
sbb
xchg
(bad)
leave
xchg
test
mov
adc
pop
pop
push
inc
popa
sub
fs
inc
mov
je
dec
(bad)
enter
rcl
jp
or
gs
(bad)
cli
rcl
dec
adc
push
push
fs
mov
movs
sbb
(bad)
in
rcl
xchg
xchg
ins
leave
sbb
ret
(bad)
inc
fist
jae
les
fs
mov
inc
xor
shl
inc
adc
(bad)
mov
add
mov
mov
pop
xchg
lfs
icebp
call
and
ins
xor
lods
xchg
jb
je
xor
mov
loop
inc
and
cmp
ret
push
call
jmp
mov
xchg
push
lock
jae
adc
jo
xchg
inc
sub
std
fadd
cwde
pop
ret
fstp
mul
mov
dec
adc
sbb
loope
in
dec
(bad)
nop
outs
or
and
xchg
jmp
dec
dec
mov
pop
gs
sub
das
pop
xchg
dec
popa
add
xchg
pop
popa
jnp
add
push
sti
xchg
cdq
sub
movs
repz
push
in
test
cwde
call
movs
jmp
ret
popf
cs
xor
add
mov
mov
aam
mov
add
inc
inc
popa
pop
test
stos
add
xchg
xor
ds
jge
xor
jecxz
push
push
sbb
cmp
test
sub
stos
xchg
dec
cmps
mov
int3
gs
add
je
imul
out
retf
inc
lds
jns
mov
mov
mov
jae
add
das
sbb
xor
jmp
loop
xchg
add
dec
mov
xor
adc
call
aas
retf
push
push
add
cld
jp
outs
fld
xchg
popf
add
inc
pop
es
es
xor
pop
and
cmp
sahf
fst
outs
call
push
out
push
test
cmc
sub
scas
aam
and
jae
dec
jnp
jmp
mov
xchg
jae
inc
mov
mov
jmp
stos
add
sub
adc
xor
and
xor
loopne
cmp
daa
and
xor
int
xor
pop
lock
fnsave
mov
mov
fistp
jecxz
pop
mov
sbb
xchg
xchg
xor
pop
pop
mov
jo
and
cmp
xor
or
jbe
and
mov
push
dec
add
jmp
mov
add
add
xor
les
ficom
lahf
and
fcomp
dec
lods
dec
or
aam
outs
stos
push
cmp
movs
jnp
stos
inc
mov
inc
sbb
in
stos
sbb
sub
fdiv
js
inc
int3
or
mov
push
xor
in
sbb
pop
in
ins
repnz
icebp
(bad)
mov
fstp
or
sub
xchg
mov
xchg
popa
das
or
jg
jae
rcl
dec
mov
aad
xchg
popa
daa
jmp
pop
and
inc
ret
push
call
retf
mov
cmc
xchg
aad
xor
ret
pop
adc
bound
pop
dec
inc
cmp
jle
adc
(bad)
jmp
or
in
cli
mov
bound
ins
and
mov
pop
hlt
cld
popf
dec
fs
ret
cdq
push
test
rcr
adc
cld
test
jns
iret
add
mov
scas
not
xchg
fmulp
or
pop
pusha
aam
dec
jo
jge
dec
frstor
mov
daa
ror
sbb
mov
jns
mov
xchg
movs
jecxz
inc
lock
mov
mov
jne
push
jae
imul
adc
jmp
pop
cs
add
or
dec
ret
lock
ins
cmc
lods
jo
ret
pop
mov
lods
in
push
mov
ret
retf
lods
xchg
cmps
sub
ins
jl
imul
inc
push
int3
inc
lahf
fcmovnu
pop
adc
mov
dec
lahf
in
cmp
cmp
pop
push
sbb
(bad)
sahf
outs
inc
sti
mov
and
cmp
imul
pop
(bad)
pop
cld
or
leave
ja
jno
xchg
repnz
std
cld
fs
sub
sahf
fs
mov
cmp
or
xchg
push
jl
push
int3
lds
xchg
lahf
jbe
dec
int
xor
push
ret
shl
inc
rcl
or
xor
fimul
jns
mov
das
rcl
mov
stc
xchg
lods
mov
retf
mov
ja
xor
in
out
addr16
call
xchg
xor
gs
scas
out
sbb
cmp
and
in
and
pop
dec
movs
ins
adc
pop
dec
mov
ds
cmps
push
mov
and
jo
fld
sahf
cdq
push
cdq
cwde
ins
xor
aaa
cmp
fwait
cmp
icebp
js
or
xchg
inc
test
sub
pop
pop
je
mov
(bad)
outs
cmp
sub
xor
ins
and
pop
repnz
jns
or
sub
dec
dec
ror
jbe
fsubr
rcl
add
out
pushf
test
stos
xlat
jo
pop
or
mov
loope
jno
jo
jecxz
mov
mov
pop
iret
pop
ds
fadd
jb
pop
das
shr
or
fisubr
(bad)
cmp
int3
jmp
nop
or
sub
xchg
xchg
inc
push
xlat
fldenv
in
sub
scas
jbe
loop
jne
adc
mov
mov
lods
popa
(bad)
in
in
(bad)
cli
inc
std
into
xor
sub
movs
popa
(bad)
pusha
xor
retf
cli
and
hlt
mov
fsubr
popa
fidivr
pop
out
and
aas
sar
scas
(bad)
scas
inc
cmp
(bad)
imul
leave
ds
fs
imul
cmp
push
sti
jecxz
leave
leave
xchg
leave
fisttp
push
pop
xchg
inc
pop
(bad)
fisub
sbb
xlat
cs
stos
inc
fs
lahf
mov
pop
lods
clc
cmp
clc
and
mov
sub
xchg
pop
test
xor
les
icebp
test
push
sbb
mov
inc
inc
loopne
sbb
inc
cmp
ja
mov
popf
sbb
out
lea
xchg
mov
push
les
push
scas
out
cmps
mov
xchg
or
lock
cli
push
xchg
loop
mov
out
test
and
add
adc
(bad)
sub
retf
push
adc
stc
xchg
std
and
test
adc
test
add
jb
iret
inc
push
xchg
out
dec
shl
(bad)
dec
out
xchg
pop
mov
retf
xlat
out
pop
out
mov
dec
jo
es
add
mov
ret
scas
sbb
pop
xchg
out
dec
mov
imul
pop
and
gs
loope
sbb
inc
stos
dec
mov
shr
stos
into
int
ins
mov
(bad)
sub
and
pop
fisttp
fnstenv
or
pop
xor
stos
mov
dec
sub
xchg
jl
clc
sub
cmp
and
mov
add
push
dec
push
ins
or
sub
jg
adc
pop
fdiv
int
inc
jne
js
push
add
fucomp
loop
jb
add
aam
inc
test
int
dec
mov
mov
ror
enter
sbb
or
dec
cmp
mov
(bad)
pop
mov
out
aad
mov
xlat
or
mov
aaa
std
aam
sub
arpl
jb
adc
inc
js
scas
push
out
xchg
pushf
or
inc
sbb
push
jae
xchg
aad
lock
sbb
(bad)
jmp
sub
std
jl
inc
mov
inc
push
test
cs
push
mov
aam
mov
mov
call
imul
retf
lea
fdivr
mov
pop
mov
xchg
mov
mov
mov
xor
lods
pusha
xchg
leave
and
push
xor
xchg
xor
lods
inc
pop
call
fist
inc
or
cmp
mov
fisttp
and
and
mov
gs
xchg
out
lods
dec
fcom
adc
push
mov
sbb
add
or
or
mov
jae
sbb
mov
leave
cwde
add
jo
pop
inc
jle
repnz
jbe
push
enter
pop
sar
inc
mov
hlt
aam
mov
mov
aam
mov
push
int
push
jo
data16
xchg
sub
popa
in
repnz
sti
cmp
push
in
ror
adc
jmp
pop
mov
loope
add
and
xor
or
xchg
push
push
movnti
push
repnz
jnp
or
mov
les
ins
sub
scas
jo
xchg
jp
ss
out
push
cmp
mov
jb
xchg
(bad)
retf
cmovl
push
cmp
lods
add
xchg
test
dec
shl
test
cmp
ins
mov
and
sub
lods
pop
out
adc
push
lods
arpl
ins
and
fidiv
retf
or
push
(bad)
dec
js
cmp
int3
add
inc
adc
scas
mov
dec
(bad)
sar
iret
pushfw
(bad)
popa
cmp
lods
loopne
mov
or
and
arpl
xchg
pushf
inc
lods
into
xor
jmp
pop
mov
push
stos
fisttp
in
xchg
xchg
dec
mov
cmp
lock
aaa
scas
out
pushf
aaa
mov
data16
dec
and
in
jmp
mov
popf
ds
fldcw
cmps
add
push
mov
(bad)
dec
fwait
jl
fnsave
jo
imul
sbb
adc
call
cmp
rol
retf
inc
lods
les
or
call
test
or
ss
inc
(bad)
mov
jae
or
add
je
je
jae
cwde
xlat
ret
dec
fadd
int3
push
xchg
xlat
xchg
movs
push
into
sar
mov
dec
and
xor
inc
daa
and
or
in
add
and
clc
jmp
mov
inc
jo
or
mov
mov
js
mov
loop
xchg
xlat
cdq
cmp
mov
cmp
fiadd
xchg
adc
add
and
inc
and
mov
jno
inc
retf
pushf
retf
je
add
mov
in
xchg
adc
ins
mov
inc
mov
adc
pushf
popa
jbe
jmp
ds
enter
not
jbe
sub
je
add
xor
xchg
xchg
pusha
outs
aas
dec
or
adc
cmp
scas
sub
push
scas
xor
enter
ds
mov
mov
stos
push
push
fiadd
push
cdq
les
out
lds
xchg
and
in
sbb
add
data16
popf
and
fisttp
in
(bad)
icebp
push
jo
push
std
xchg
lds
dec
inc
push
ins
xchg
mov
add
adc
mov
push
dec
hlt
push
mov
pop
ja
or
jo
test
jae
pop
in
mov
movs
call
jb
mov
in
stos
and
das
pop
mov
jne
xchg
iret
jl
clc
lahf
stc
push
xor
and
mov
inc
call
stos
addr16
inc
add
jg
lds
in
scas
pop
cmp
sub
les
pop
arpl
and
fdivr
mov
mov
ja
test
test
jg
add
es
push
mov
or
jo
adc
daa
cmp
jns
mov
pop
jbe
mov
push
adc
pop
and
push
xchg
pop
into
adc
sub
mov
mov
in
dec
xchg
retf
(bad)
xlat
iret
dec
out
fld
(bad)
(bad)
xor
inc
cmp
addr16
sub
lods
pop
adc
sub
xlat
sub
mov
sbb
out
or
mov
pop
mov
cmp
ret
dec
js
arpl
lods
jnp
inc
leave
push
pop
pop
sahf
push
sti
movs
add
movs
mov
into
dec
arpl
push
sub
push
lock
sub
bound
imul
inc
mov
jne
inc
jmp
lods
jne
ins
aas
ret
xchg
xchg
addr16
mov
mov
daa
repnz
call
xor
mov
ficomp
repnz
inc
push
ja
push
and
into
pop
sub
cmp
mov
inc
pop
or
mov
and
mov
sub
popa
aad
cs
cwde
das
push
pop
aaa
(bad)
or
movs
jmp
es
mov
mov
mov
retf
popa
sti
add
lahf
jb
cmp
gs
sbb
dec
pop
adc
and
loopne
gs
sbb
sbb
ja
mov
mov
jecxz
lock
retf
or
js
hlt
inc
shr
clc
sbb
out
xchg
mov
mov
cwde
inc
add
push
iret
repnz
jp
outs
imul
cld
xchg
imul
mov
mov
xor
pop
jno
dec
sti
in
out
dec
in
mov
fcmovne
pop
pop
xchg
(bad)
jnp
aam
repnz
xchg
inc
sub
sti
pop
fs
movs
and
push
adc
int3
loopne
pop
out
xchg
pushf
cmps
out
(bad)
repnz
repz
jno
sti
inc
xchg
adc
out
popa
inc
test
aas
pop
mov
ret
mov
or
and
add
and
adc
out
arpl
sbb
popa
test
inc
mov
clc
xor
lods
sub
pop
inc
data16
cmc
pop
xchg
std
fimul
out
xchg
adc
push
jp
fstp
not
jnp
jne
je
into
jle
sbb
dec
imul
bound
or
js
and
mov
and
das
dec
mov
mov
inc
adc
addr16
pop
(bad)
pop
push
jno
jb
and
push
mov
lods
push
push
retf
jns
pop
cmp
dec
aam
cmp
icebp
dec
mov
push
mov
xor
(bad)
les
add
adc
add
sar
lods
or
mov
jg
cmps
and
test
and
call
sbb
mov
push
jne
cs
push
in
retf
adc
fdivrp
frstor
inc
pop
call
stos
fisttp
jg
test
sahf
and
mov
mul
(bad)
inc
push
pop
loop
sar
xor
punpcklbw
imul
push
cmp
(bad)
xchg
jmp
sahf
aas
cmp
jne
repz
es
adc
addr16
dec
lahf
xor
mov
pop
jg
shr
and
jmp
mov
xor
push
push
dec
mov
pop
iret
mov
mov
dec
je
lea
xlat
sub
add
inc
(bad)
leave
mov
or
aad
in
sbb
arpl
cld
dec
rcr
imul
cmc
jnp
inc
or
mov
mov
fnstsw
aas
jmp
in
arpl
daa
test
int
adc
pushf
dec
imul
sub
add
rcl
push
es
inc
jne
mov
adc
jmp
pop
inc
cmps
mov
push
mov
dec
adc
cmp
repz
or
mov
in
je
xor
pop
sti
dec
cwde
test
lock
pop
sub
push
mov
mov
lahf
int3
outs
(bad)
adc
ret
jb
leave
push
dec
jl
pop
xchg
cmp
jne
or
out
icebp
mov
mov
enter
sub
or
and
xor
cld
dec
inc
cmp
mov
stos
and
jb
fs
fistp
or
loopne
in
jae
push
and
push
mov
sub
fs
pop
inc
sbb
in
mov
dec
mov
popa
inc
enter
sub
js
mov
xor
jne
pop
or
iret
stc
push
jmp
cmp
jb
outs
jl
xchg
jmp
mov
sub
sti
iret
test
and
enter
or
dec
adc
int3
sbb
retf
ins
mov
lock
mov
mov
cmp
dec
inc
or
xlat
xchg
cmp
dec
sbb
imul
xchg
(bad)
daa
les
mov
add
out
(bad)
fsubr
and
xor
ficom
adc
push
add
cmps
jo
pop
adc
imul
and
push
iret
call
xor
mov
push
lock
fcom
out
push
cmp
mov
mov
(bad)
dec
jg
fild
sbb
xor
inc
bnd
or
add
xor
test
data16
xchg
push
aas
sti
cmps
shr
push
(bad)
iret
xchg
inc
imul
inc
jmp
int3
nop
std
test
and
movs
or
jne
adc
jg
mov
lods
clc
(bad)
shr
or
repnz
sub
(bad)
in
jno
pop
cmps
cdq
out
xlat
xchg
inc
leave
pusha
dec
(bad)
lea
cmc
clc
out
test
cmp
jp
nop
pop
inc
xchg
push
dec
push
mov
mov
mov
movups
ror
int3
jo
adc
pop
inc
xchg
add
fiadd
out
test
push
pop
shl
(bad)
out
adc
jle
pop
cmp
hlt
sub
in
pop
mov
(bad)
or
ret
aad
inc
push
sbb
mov
(bad)
rcr
inc
jo
dec
inc
pop
mov
mov
pop
(bad)
ficom
pop
push
into
pusha
and
ss
gs
aas
call
dec
js
jbe
cli
adc
imul
xchg
mov
and
outs
aas
stos
scas
lods
add
dec
imul
dec
sbb
imul
push
mov
mov
dec
jl
(bad)
mov
mov
push
clc
pop
fst
lock
adc
adc
sub
in
sub
mov
ret
adc
add
retf
loop
sbb
scas
or
arpl
pusha
push
mov
movs
retf
test
xchg
xlat
test
jle
mov
jl
cmp
pusha
int3
jl
mov
and
rep
cmp
pushf
mov
or
ret
imul
xor
pop
xchg
or
or
pop
sub
cmp
push
(bad)
jge
sbb
setge
(bad)
or
adc
not
cmp
jbe
stos
mov
or
add
rcl
mov
xor
in
call
push
jecxz
retf
rcr
adc
pop
mov
mov
xchg
repz
dec
mov
repnz
mov
outs
push
pop
add
movs
lds
call
push
out
pop
inc
outs
cmp
mov
xlat
imul
cmc
xchg
dec
push
mov
cmp
jae
icebp
push
or
sub
add
ins
loope
ja
xchg
cdq
mov
fwait
fwait
popf
sahf
addr16
cmp
test
push
or
push
and
jbe
lods
push
into
mov
add
jmp
js
(bad)
cld
fld
pop
sbb
or
rol
lods
repnz
lahf
mov
pop
imul
(bad)
cmps
mov
in
mov
fcmovnb
adc
out
jmp
fcom
adc
mov
and
or
test
(bad)
and
xor
mov
test
jge
xchg
mov
das
out
repz
int3
in
sar
push
push
fadd
pop
pusha
sub
jb
ret
test
lahf
addr16
sbb
(bad)
aas
fcmovnbe
cld
cmp
sub
mov
jle
jl
lahf
cli
xchg
cmps
les
mov
pop
fs
mov
or
cmp
mov
add
add
daa
movs
ins
daa
cmp
jl
loopne
xchg
or
xor
dec
dec
dec
jbe
ror
xchg
popf
dec
inc
out
or
mov
inc
and
sbb
cmp
jbe
inc
ins
mov
lods
pop
fs
idiv
xchg
fldz
lea
daa
mov
mov
adc
sub
mov
xor
add
clc
pop
pop
add
add
imul
inc
in
(bad)
cs
jmp
popa
lods
adc
dec
xor
dec
in
mov
push
sbb
push
push
sbb
push
xchg
rcl
dec
push
mov
mov
push
call
(bad)
lds
pushf
push
js
adc
neg
sbb
aam
inc
js
mov
sbb
into
push
int3
add
mov
sub
int
cld
cld
and
mov
test
jb
jmp
bound
cmp
and
mov
cwde
and
fcomp
and
fbld
push
gs
mov
jb
out
mov
mov
adc
jbe
push
pop
repnz
mov
sub
jbe
fnstenv
xchg
call
stc
dec
es
out
mov
inc
mov
jle
jne
psrad
int3
xchg
lock
and
test
fnsave
and
test
mov
xchg
inc
mov
cmp
enter
loopne
or
sbb
jae
xchg
pop
or
add
cld
aad
mov
pusha
fs
lds
mov
in
mov
hlt
jo
loope
inc
xchg
ret
mov
imul
pushf
mov
mov
in
mov
leave
mov
enter
sar
aam
sti
dec
mov
dec
shl
in
in
or
jmp
(bad)
std
test
mov
mov
mov
fnstcw
fnstenv
xchg
cmp
sub
ds
cdq
sub
arpl
es
xchg
mov
sbb
orps
adc
repz
push
popa
scas
retf
scas
es
sbb
in
inc
sub
scas
sbb
mov
xor
inc
lods
jae
xor
lock
into
xor
or
xchg
iret
jecxz
push
sti
gs
test
sbb
mov
jmp
fnstenv
out
icebp
pop
fnstenv
adc
adc
xor
or
mov
cmp
and
jl
mov
mov
fsub
neg
fistp
adc
adc
repz
(bad)
rcl
cmp
mov
in
sti
loop
mov
(bad)
jmp
mov
push
in
loopne
mov
movs
xchg
dec
arpl
imul
xchg
push
adc
loope
mov
in
sbb
(bad)
or
mov
jmp
imul
rcl
xor
or
push
xlat
push
in
jp
(bad)
cmc
xchg
ins
packssdw
sahf
pushf
dec
mov
clc
push
call
sub
sar
lods
and
je
call
movs
fisttp
sbb
icebp
or
push
pop
dec
cs
xor
dec
cmp
jle
push
cld
mov
sub
in
mov
outs
adc
dec
and
push
in
push
pusha
cmp
fist
pop
add
aad
iret
mov
ins
out
fldpi
cmp
sbb
mov
add
pop
ds
pop
fisttp
jnp
fisub
test
xchg
ret
fdivrp
addr16
dec
mov
cmp
xchg
popf
hlt
fidivr
lahf
out
cmp
daa
dec
sbb
(bad)
push
dec
jmp
(bad)
call
jae
sub
cdq
xchg
xchg
fdiv
mov
or
cmp
mov
repz
jb
out
movs
mov
leave
push
outs
outs
jns
les
mov
pusha
ins
stc
dec
lods
and
movs
xchg
imul
mov
cwde
xchg
mov
retf
popf
movs
xchg
cmc
xor
mov
dec
cli
jmp
(bad)
outs
pusha
mov
and
xlat
cwde
icebp
dec
sub
mov
jmp
jmp
mov
jecxz
xchg
mov
mov
or
sub
cmp
test
enter
jb
mov
sahf
aad
test
sub
dec
bound
outs
push
mov
push
in
ficom
nop
std
sti
stos
cwde
loope
and
imul
fs
xor
rcl
inc
mov
js
jge
repz
fcmovnb
pushf
and
dec
retf
xor
cwde
ds
mov
sti
cmp
pop
xchg
sbb
clc
pop
jo
in
push
mov
imul
xchg
test
xor
sbb
mov
dec
mov
test
pop
bound
mov
sti
call
add
shr
retf
mov
and
mov
add
adc
pop
mov
push
jns
les
out
xlat
daa
lea
popf
cmc
fwait
xchg
mov
push
(bad)
vaddsubpd
xchg
in
lahf
cmps
jle
cmp
mov
sub
imul
sub
loopne
push
hlt
jne
pop
imul
add
jne
aam
push
dec
je
sti
dec
loope
cmp
(bad)
aad
push
gs
(bad)
xlat
lea
fld
pusha
and
fisttp
ret
mov
sbb
xor
pop
inc
addr16
xchg
aad
cbw
push
xchg
mov
pop
xor
es
sbb
int3
mov
jecxz
in
cmp
mov
pop
add
cwde
das
loope
push
xchg
in
test
mov
daa
movs
fs
mov
mov
and
sbb
xchg
xor
lock
scas
cmp
xor
push
imul
dec
jecxz
push
cli
jns
out
dec
sbb
rcr
je
sbb
sbb
test
je
out
shl
inc
iret
xchg
adc
jnp
add
mov
in
ror
fsub
jae
cmp
psrlq
or
sbb
add
rol
cmp
test
ror
jl
retf
(bad)
enter
mov
jmp
cmp
(bad)
jle
xor
cwde
fcmovb
les
cwde
pushf
mov
sbb
and
cmp
sub
cmps
xor
xchg
pop
mov
mov
adc
pushf
xchg
(bad)
(bad)
and
inc
popa
add
leave
inc
mov
(bad)
mov
mov
aaa
mov
ss
inc
cmps
je
popa
(bad)
dec
inc
or
mov
mov
movs
fnstcw
jle
add
push
push
stos
retf
test
and
pop
test
dec
fidivr
xor
xchg
add
movs
ja
repz
adc
xor
mov
fwait
cli
test
cmp
in
jmp
jge
and
cdq
mov
ds
push
int3
outs
adc
push
bound
neg
and
pop
xchg
stc
sub
mov
mov
mov
cmp
pop
xor
jmp
out
(bad)
mov
(bad)
pop
mov
sbb
dec
mov
adc
adc
jno
out
cmps
adc
cmp
fadd
pop
in
fwait
jmp
fst
and
inc
pop
xlat
rol
(bad)
push
retf
sub
ins
(bad)
dec
xor
movs
mov
outs
pop
sub
(bad)
mov
int
cmp
push
faddp
jae
pop
stos
ret
daa
and
sub
sbb
sub
lea
stc
aas
sbb
std
mov
inc
pusha
cmp
fbld
sbb
pop
shl
and
jmp
add
adc
xchg
es
cmp
pop
out
std
aam
dec
movs
movs
mov
sub
push
pop
scas
les
add
mov
popf
fdiv
or
out
mov
sbb
ret
inc
dec
lea
mov
xchg
mov
mov
mov
mov
je
ja
xchg
ret
cmp
jno
push
sub
xor
inc
fcom
jbe
shl
aas
pop
sahf
in
outs
out
test
jg
(bad)
gs
mov
gs
dec
cmp
ins
adc
sub
push
jp
mov
imul
xchg
jmp
sub
add
pop
popf
repnz
add
in
lods
mov
int
mov
push
sub
sbb
mov
pop
and
outs
sub
(bad)
dec
jbe
pop
pop
cmp
jbe
ins
pusha
daa
js
icebp
movs
int
aam
iret
movaps
sbb
mov
xor
scas
aam
fwait
cld
xchg
push
xor
fs
clc
std
iret
xor
pop
sub
cwde
sub
inc
popf
out
or
xor
push
and
dec
ret
mov
(bad)
iret
pop
or
sub
mov
das
outs
pop
ret
and
mov
jp
clc
loop
or
mov
or
jbe
pop
add
cwde
jne
inc
fld
imul
jne
sub
stos
jb
(bad)
mov
call
inc
adc
imul
pop
add
cld
sbb
outs
sbb
je
enter
pusha
loope
dec
push
stos
rol
adc
aaa
mov
daa
ret
movs
add
sbb
jns
cmp
mov
jb
ja
je
das
enter
sub
ret
test
and
ret
pop
into
mov
jbe
xchg
mov
inc
push
xchg
jo
loopne
mov
cmp
shr
in
or
outs
aad
ror
xor
jle
(bad)
jl
jg
test
gs
dec
push
jge
xchg
shl
fbld
fcom
lock
stos
jmp
mov
pop
icebp
xchg
fidivr
and
cmp
pop
stos
mov
cli
xchg
loop
popf
stos
cdq
adc
push
mov
lock
loope
jmp
inc
in
pushf
neg
and
popf
push
jno
(bad)
sub
icebp
inc
out
adc
jae
sbb
or
fwait
xchg
mov
std
scas
fs
je
sbb
call
add
xor
mov
bound
mov
cmp
adc
(bad)
stos
dec
outs
stos
mov
pop
in
lock
mov
cmp
xchg
adc
adc
sbb
je
call
(bad)
mov
pop
push
or
(bad)
add
sub
mov
mov
test
gs
mov
je
cmp
retf
sbb
pop
jl
scas
mov
mov
(bad)
bt
call
movs
and
lods
movs
jmp
sub
lods
pop
sbb
jge
out
dec
sub
push
jmp
push
aas
cmps
sbb
push
cdq
xchg
push
outs
lods
repz
xlat
fwait
dec
sbb
sbb
xchg
ret
dec
cmp
and
mov
and
xor
rcr
out
cli
or
mov
call
push
test
xor
test
pushf
into
dec
cmp
add
xor
lds
cwde
call
fisttp
adc
(bad)
mov
push
push
xchg
push
test
cwde
retf
dec
hlt
jbe
mov
or
pop
adc
mov
push
push
sbb
shl
into
adc
outs
push
sub
add
add
leave
sub
mov
mov
pop
inc
add
leave
mov
xchg
pop
and
sub
repnz
cmps
cmp
mov
mov
test
jo
push
push
or
jge
enter
cmp
add
int
pusha
sbb
jmp
sar
cmp
mov
sbb
aaa
(bad)
jne
push
pop
in
outs
loopne
mov
sub
neg
pop
cdq
movs
jl
out
cld
pop
aaa
leave
sbb
jp
jecxz
fnstcw
jmp
rcl
adc
popf
inc
or
repnz
nop
std
xor
mov
jmp
cmps
cwde
mov
add
dec
lods
aas
sahf
popa
and
push
clc
inc
pop
mov
rcl
clc
push
or
xchg
ret
push
sbb
shr
out
(bad)
jns
jmp
xchg
sbb
push
iret
mov
lds
hlt
mov
or
call
push
test
sbb
dec
jae
mov
adc
sub
(bad)
movs
(bad)
and
repz
xchg
lds
daa
popa
leave
adc
ds
sbb
mov
ins
dec
lods
clc
ja
pop
mov
popa
mov
adc
mov
add
or
jg
push
fdivr
xchg
sbb
movs
jmp
sbb
xor
cli
ins
pop
fisub
daa
mov
jg
stos
cmps
mov
pop
xor
fst
mov
sti
add
int3
mov
xlat
xor
inc
mov
sar
jb
and
or
mov
add
pop
test
and
mov
adc
mov
mov
xchg
xchg
xor
sub
jae
or
mov
enter
gs
jge
sub
pop
stos
aaa
retf
sub
jge
loopne
fistp
dec
ins
push
enter
mov
dec
push
jo
and
mov
inc
rcr
repz
gs
push
loope
out
mov
inc
(bad)
dec
fisubr
test
push
mov
lds
pop
cld
out
ret
inc
fld
cmp
inc
(bad)
cli
add
sbb
jb
in
lods
and
xor
fbstp
(bad)
cmp
add
fwait
xor
daa
and
loopne
scas
clc
mov
repz
dec
call
or
dec
mov
inc
inc
mul
imul
mov
lahf
out
in
in
xchg
or
cmp
inc
mov
in
loope
pop
adc
and
loope
xchg
stos
jle
push
mov
fldcw
add
mov
sub
hlt
jmp
scas
xchg
repnz
sub
ja
mov
dec
mov
hlt
xchg
das
pop
mov
scas
cmp
push
cmps
mov
mov
div
mov
pop
xchg
js
stos
fiadd
test
leave
fmulp
fmul
mov
or
bound
push
cmp
ja
mov
dec
pop
push
addr16
xor
movs
xchg
js
clc
movs
cmps
mov
mov
das
xchg
xor
cld
mov
cmp
mov
fsub
pop
mov
in
mov
cmp
dec
push
les
dec
jns
out
jnp
retf
es
push
mov
or
dec
repz
sar
aas
push
out
loope
cmp
in
pop
mov
mov
jns
hlt
test
paddq
xor
cmps
add
mov
js
add
or
cmp
in
lods
sub
cmp
shr
pushf
mov
out
mov
add
clc
ds
xchg
sar
add
cmp
daa
rcl
xor
jnp
cmp
mov
xchg
mov
or
out
lahf
push
pop
aam
xchg
in
cmp
add
(bad)
repnz
mov
cwde
push
push
in
push
adc
pop
neg
out
sbb
dec
mov
push
aaa
retf
(bad)
rol
fwait
add
cli
mov
pop
add
adc
or
mov
test
push
stos
mov
fild
shr
mov
(bad)
push
sub
xchg
jb
(bad)
sbb
inc
adc
cld
inc
pop
sbb
xchg
pop
or
fwait
xchg
dec
mov
dec
fstp
fucomip
(bad)
aad
sub
nop
and
jge
fldenv
inc
outs
ror
mov
cmp
inc
lods
xor
addr16
pop
jmp
adc
test
imul
sbb
cmp
lods
push
mov
xchg
aas
mov
in
xchg
cmps
inc
push
xlat
sbb
add
dec
jb
fst
fwait
sahf
stc
daa
xchg
mov
test
lea
call
imul
sub
arpl
mov
js
inc
jg
pop
mov
add
fwait
(bad)
clc
test
sahf
mov
cmp
add
sbb
xor
add
and
mov
sub
(bad)
dec
xor
stos
inc
sub
xor
mul
sub
movs
gs
jne
adc
mov
cmc
retf
and
sub
jecxz
sub
cmc
stos
xchg
fidiv
es
ror
daa
jl
in
cmp
jo
dec
pop
outs
stc
leave
adc
mov
and
sahf
xchg
pop
mov
mov
jmp
ss
fist
adc
and
mov
xor
pop
sbb
mov
aam
sub
sub
retf
add
mov
push
or
cwde
xchg
out
sub
(bad)
outs
xchg
and
into
or
cs
fist
xchg
xor
push
arpl
mov
leave
pop
mov
inc
sbb
mov
pusha
and
dec
mov
pop
and
sbb
cmp
xor
fwait
popa
aaa
cmp
mov
jmp
mov
clc
xor
dec
getsec
sub
mov
sbb
jbe
loope
adc
fistp
fcom
ins
retf
lds
in
cs
adc
pop
mov
stc
out
mov
mov
dec
imul
adc
or
xchg
gs
xor
lods
fldcw
data16
cmp
cmp
cmps
or
rol
push
jp
aaa
in
int
iret
ret
mov
scas
push
xchg
iret
ret
popa
xchg
outs
xchg
jae
add
ds
je
fdiv
jge
aas
mov
jecxz
ret
(bad)
add
push
mov
pop
aaa
sahf
in
xor
fldenv
sub
mov
xchg
cmps
push
add
add
pop
push
rcl
mul
xor
lods
xchg
les
jb
rol
inc
cmp
adc
addr16
fdivp
sub
or
shl
add
pop
aad
sahf
ja
or
and
pop
ror
sbb
test
push
addr16
mov
xor
inc
xchg
xchg
iret
mov
mov
jbe
ss
inc
push
hlt
push
ins
dec
adc
das
std
cmps
stos
mov
iret
mov
lods
push
cdq
popf
cwde
mov
inc
and
leave
dec
lock
ins
fnstcw
lds
sahf
out
pop
ins
pop
nop
pop
xor
cwde
xchg
pop
movs
ins
fadd
pop
in
mov
sub
mov
sbb
mov
imul
mov
ficom
ror
scas
out
dec
loop
mov
inc
cmp
xor
mov
(bad)
in
ds
sbb
push
push
leave
ret
dec
aad
mov
dec
push
ins
or
dec
xor
dec
sbb
inc
adc
add
cs
int3
dec
push
mov
hlt
sar
shl
mov
inc
push
(bad)
jne
int3
(bad)
fisub
stos
je
push
lods
cmp
repz
jnp
lock
popa
inc
fcomp
shr
inc
or
test
pusha
retf
adc
pop
hlt
cmp
xchg
xchg
sub
mov
or
jmp
(bad)
xor
adc
add
(bad)
jmp
pop
xchg
int3
mov
dec
mov
inc
imul
jns
add
mov
and
mov
sbb
xchg
stc
js
adc
push
push
sbb
inc
jo
popa
or
out
dec
retf
std
rol
jno
push
ins
xchg
push
test
jno
test
loopne
movs
scas
test
ja
jns
cmp
clc
add
inc
mov
or
hlt
rcl
call
lahf
sbb
leave
cmp
mov
jb
fdivr
mov
cdq
cmp
push
mov
in
and
pop
mov
lock
push
xor
dec
outs
out
mov
adc
imul
jmp
xchg
fisttp
mov
dec
test
cmp
nop
js
dec
inc
lods
or
aad
xor
xor
retf
popa
mov
lock
retf
xchg
xchg
int3
xchg
or
retf
mov
in
xor
loop
and
(bad)
fmulp
mov
fisttp
sub
xlat
sub
jmp
popa
sti
repnz
adc
sbb
bound
sub
ss
sar
test
sbb
pusha
jo
ret
dec
cli
into
mov
rol
cdq
xchg
inc
dec
and
iret
stos
outs
outs
jl
(bad)
scas
sub
inc
dec
iret
gs
hlt
in
add
push
aas
cwde
retf
jno
xchg
ror
scas
and
mov
out
xchg
lods
sar
fadd
repz
push
out
in
popf
imul
cmp
mov
enter
jno
jecxz
int3
ret
mov
xlat
lods
cld
cmp
icebp
and
cwde
enter
outs
adc
inc
mov
adc
sub
cmp
add
out
mov
inc
fldenv
ds
or
push
shr
in
test
mov
rcl
xlat
pop
jae
mov
mov
xor
dec
mov
aas
retf
and
popa
mov
jnp
xchg
ja
cmc
mov
sub
jne
call
int
fs
push
and
xor
fild
mov
mov
cs
les
ret
(bad)
into
ss
mov
xlat
mov
sbb
cs
jecxz
mov
cmp
rcl
mov
addr16
fs
int3
adc
hlt
fsub
add
into
lds
add
fst
mov
or
iret
mov
loope
out
es
popa
std
outs
imul
daa
pop
(bad)
mov
je
test
jo
add
outs
mov
cmp
(bad)
push
xor
add
mov
loop
xchg
mov
out
sub
or
dec
and
in
cmps
div
test
jp
sbb
pop
cli
xchg
mov
xchg
leave
lods
dec
shl
ret
pop
je
adc
outs
mov
ds
sub
jg
adc
lahf
mov
push
ds
lods
push
pushf
add
cmp
test
mov
arpl
adc
sub
aad
push
push
inc
retf
lahf
mov
add
in
aam
sti
sub
mov
and
mov
mov
or
lahf
aaa
mov
sbb
(bad)
cmc
popf
lahf
mov
sbb
shr
mov
inc
stos
rol
call
sbb
sbb
stc
pop
and
cmc
cmp
dec
xor
arpl
push
loopne
cld
cmp
hlt
and
dec
or
push
aam
mov
jge
ror
not
jmp
and
clc
adc
cmp
sar
pop
cld
(bad)
jmp
std
popf
data16
push
fbld
mov
dec
js
inc
mov
sub
lahf
push
adc
mov
out
or
mov
into
or
add
aaa
repz
xchg
es
cmp
inc
mov
and
imul
adc
cmp
xor
and
imul
les
mov
jbe
sbb
or
sti
xor
outs
mov
sbb
inc
mov
inc
or
and
mov
adc
js
sub
test
add
jl
lds
jp
pop
(bad)
pusha
jmp
rcl
aaa
test
xchg
test
mov
cmp
cmp
ds
addr16
retf
into
out
xchg
inc
lock
push
dec
lahf
add
add
cs
adc
mov
adc
mov
leave
xchg
dec
lds
xor
mov
inc
mov
jmp
scas
dec
mov
jo
pop
outs
repz
shr
and
jno
add
mov
dec
pop
dec
or
jne
rcr
fnsave
adc
pop
cmc
lahf
mov
repz
mov
push
movs
adc
scas
xchg
dec
stos
push
sbb
in
lea
shl
or
scas
pop
add
loopne
lock
pop
test
out
mov
lods
add
data16
or
lahf
push
(bad)
ins
movs
pop
push
test
cmc
mov
xor
nop
jg
outs
dec
loopne
pop
dec
out
aas
adc
jg
inc
rol
sub
loopne
es
push
pushf
mov
out
mov
inc
mov
out
pop
leave
push
paddb
push
mov
sbb
sti
add
(bad)
(bad)
sbb
mov
mov
mov
out
inc
cmovg
push
cli
fidivr
add
ss
cmp
daa
fiadd
sbb
jnp
lds
inc
mov
xor
pop
aaa
fild
mov
adc
pushf
call
jecxz
repnz
xchg
mov
stc
test
jns
jmp
jae
lods
fwait
or
fmul
in
push
mov
cld
push
gs
movups
sub
aad
mov
fsubr
aas
and
xchg
call
sub
retf
bound
cmp
imul
fnsave
xor
(bad)
cmps
mov
mov
test
call
test
mov
cmp
xchg
inc
xchg
lea
int3
je
enter
fldenv
cmp
js
jmp
leave
push
imul
xchg
adc
cmp
pop
sbb
mov
push
lods
ins
mov
je
stc
cmp
dec
push
mov
inc
cmp
fucomip
xor
or
jne
bound
iret
mov
jg
or
clc
jg
out
xchg
fwait
imul
scas
fsub
push
ds
pop
inc
dec
dec
ins
sbb
sub
lods
std
jp
repnz
cli
sub
fist
into
ins
(bad)
jmp
or
sbb
inc
sub
jo
stc
call
sub
xchg
sbb
fnsave
mov
repnz
adc
movs
push
ins
push
sbb
jne
push
cmc
and
mov
xor
mov
and
xchg
push
push
inc
cmp
rol
dec
aad
dec
je
jecxz
call
add
sbb
enter
add
mov
frstor
mov
test
clc
je
add
leave
xchg
pop
and
lea
mov
fidivr
or
push
mov
popf
mov
push
or
ja
push
mov
loopne
push
pop
leave
mov
jge
popa
dec
push
jbe
rcl
jl
cwde
add
xchg
test
retf
pop
cwde
jno
outs
inc
gs
xchg
call
push
leave
mov
push
in
cmp
sahf
cmp
inc
xor
ret
fisttp
inc
lahf
inc
test
push
rcr
inc
inc
out
sub
ret
es
push
je
jb
lods
and
add
outs
fs
sbb
cmp
push
sub
jbe
call
dec
pop
lahf
sbb
(bad)
(bad)
movs
push
aam
js
lds
mov
les
xchg
cmp
cmp
iret
dec
xchg
lea
xor
or
shl
add
jb
inc
inc
cmp
ins
jmp
mov
das
mov
cmp
adc
xchg
cmps
xor
mov
jmp
xor
test
and
mov
inc
xchg
frstor
mov
sbb
cmp
vpxor
sub
cmps
pop
inc
mov
adc
and
xlat
xor
fcom
enter
mov
cmp
pop
into
jne
loop
movs
mov
jns
jnp
das
adc
jg
or
sbb
sahf
sbb
pop
sti
aam
icebp
aas
ret
push
fimul
inc
cmp
jno
idiv
enter
sbb
rcl
mov
inc
push
fdiv
movnti
mov
xchg
pusha
adc
dec
or
pusha
dec
or
jecxz
sbb
dec
mov
stc
sub
mov
mov
push
or
mov
mov
push
lea
inc
pop
push
mov
adc
imul
mov
rol
or
jge
ja
jbe
fidivr
xchg
add
pop
and
retf
cld
hlt
sub
push
sti
les
adc
mov
aad
shr
(bad)
sti
daa
jle
lods
ins
xor
ins
pop
add
lock
push
push
ins
lds
ret
sub
xor
fisttp
xchg
(bad)
hlt
xchg
pop
push
movs
adc
sub
loopne
int3
adc
or
mov
or
sub
or
jmp
xor
pop
adc
imul
in
test
movs
icebp
fnstsw
sbb
jmp
push
mov
sub
cmp
mov
daa
add
bound
sbb
jp
jmp
lock
jmp
ds
add
push
and
movs
loop
push
rcr
addr16
ins
std
xchg
xchg
pop
ja
repnz
int
add
pop
nop
pop
mov
daa
pop
xchg
(bad)
fcom
inc
test
mov
cmp
mov
pop
sub
enter
gs
xchg
in
push
xchg
add
repz
or
sbb
pop
ror
scas
aaa
fild
push
gs
inc
pushf
xchg
dec
and
xchg
sar
fwait
inc
xor
popa
push
sub
sub
and
inc
shl
(bad)
add
out
pop
inc
leave
fadd
jnp
(bad)
mov
pop
push
cmp
icebp
mov
inc
stos
(bad)
loop
add
or
mov
pushf
lock
mov
mov
data16
bound
push
push
getsec
outs
pop
pop
jl
add
dec
out
mov
xchg
dec
xor
mov
pop
retf
aad
mov
mov
push
and
mov
push
or
imul
sbb
and
popa
inc
daa
enter
arpl
sbb
and
and
cli
(bad)
fadd
sub
pop
imul
and
sbb
out
repnz
sbb
cld
ret
inc
mov
imul
jae
rcr
mov
push
pop
inc
test
push
xchg
inc
retf
das
lea
bound
pop
xlat
jge
push
mov
test
pop
mov
push
scas
xor
adc
lods
lds
cmp
(bad)
sbb
popf
ins
neg
jae
ins
adc
movs
adc
and
stos
or
jno
add
xchg
leave
mov
xor
ins
push
cld
ss
cmp
rcl
xchg
inc
int
out
in
lahf
and
outs
test
sub
das
ss
addr16
(bad)
fst
mov
call
jle
push
cmp
pop
ins
mov
int3
lahf
out
sub
mov
xchg
mov
repnz
imul
repz
(bad)
mov
adc
popf
adc
lea
out
enter
sbb
mov
daa
iret
fsubr
aaa
movs
mov
inc
shl
push
push
push
or
sbb
xchg
jge
call
adc
fidivr
lock
xor
scas
jno
test
fucomi
xor
lea
sti
jl
inc
icebp
jecxz
sub
rol
out
mov
shl
xor
pop
mov
xchg
xor
inc
cmp
inc
xchg
jl
daa
das
stc
shr
xor
fidivr
cwde
dec
adc
sbb
mov
shl
sub
das
jmp
fimul
retf
outs
fisttp
fbstp
retf
sub
dec
movs
sbb
pop
xchg
sub
mov
ror
aaa
dec
iret
sub
dec
cmps
cmps
xchg
lods
xor
pop
sub
inc
or
out
mov
mov
imul
stc
jmp
push
data16
(bad)
cmps
cmp
js
out
adc
fwait
pop
pop
push
fidiv
outs
cmp
fstp
inc
and
cs
pop
add
imul
xchg
cmp
es
xchg
xor
or
inc
aam
push
xchg
call
jecxz
inc
aam
xor
mov
xchg
sti
fdivr
inc
dec
neg
cmp
call
sbb
lods
jns
outs
mov
dec
jo
stos
movs
jp
inc
popa
mov
mul
push
push
xchg
and
cdq
ffree
mov
push
jp
lahf
scas
sbb
inc
and
pop
inc
sahf
sbb
bound
push
xor
mov
pop
or
(bad)
sahf
test
sbb
push
or
(bad)
adc
sbb
dec
xor
and
jne
fisttp
iret
jp
inc
pop
rol
mov
inc
mov
lahf
sub
shl
xchg
dec
stc
jmp
mov
test
xchg
push
scas
out
bnd
mov
fild
xor
popa
jge
sub
push
lods
push
mov
and
mov
(bad)
aas
cmp
add
xchg
pop
jp
ror
test
(bad)
les
sti
out
aad
pop
add
bound
in
in
jnp
jle
adc
(bad)
pop
adc
sbb
push
je
add
dec
push
mov
cmp
sbb
std
pop
shl
xor
test
mov
rcr
loopne
retf
lds
jb
aad
add
mov
int
pop
pop
add
movs
xor
cmp
fld
adc
and
pop
inc
dec
inc
retf
sub
test
pop
(bad)
mov
lods
std
xor
and
and
jp
dec
movs
sahf
das
shr
inc
dec
fisttp
int3
mov
shr
fmul
push
das
das
repnz
sar
jbe
adc
int3
mov
pop
fdiv
pop
mov
mov
dec
xchg
xchg
inc
retf
int
or
push
aas
xor
aad
es
xchg
inc
push
frstor
sub
nop
pop
pusha
pop
clc
es
in
push
mov
stc
les
mov
push
add
cmps
xchg
sub
ficomp
dec
leave
and
sbb
inc
or
retf
sbb
push
stos
add
fs
mov
jp
(bad)
mov
sbb
cmp
jg
mov
adc
xchg
cmps
adc
push
mov
push
adc
inc
push
mov
jmp
ror
daa
aas
and
lea
jecxz
add
mov
mov
add
pop
and
in
pop
pop
shr
pop
dec
mov
inc
jae
retf
dec
jbe
xchg
test
cmp
mov
pop
inc
xlat
popf
xchg
xchg
(bad)
inc
push
lahf
sbb
jno
addr16
outs
jb
pop
test
push
fisub
retf
imul
out
jge
jbe
popa
sub
fcmovnu
cmp
fistp
ret
movs
xor
retf
mov
inc
gs
les
cwde
aad
push
rcr
xor
pop
fidivr
dec
cmps
mov
dec
in
adc
stos
outs
movs
lock
jo
jmp
push
mov
pop
xchg
push
jmp
aam
mov
sbb
(bad)
cld
ins
inc
sbb
sub
sahf
add
mov
rcl
sub
adc
add
push
daa
aaa
pop
xchg
ffreep
add
sbb
dec
test
jp
pop
cli
(bad)
movs
mov
xchg
ret
les
cwde
mov
(bad)
push
inc
push
push
push
in
int3
ss
or
xchg
xchg
das
arpl
and
mov
movzx
dec
fwait
(bad)
pop
arpl
dec
dec
pushf
lahf
iret
lds
dec
lods
xor
mov
sub
mov
add
push
mov
fldenv
mov
dec
jne
sbb
dec
aas
out
push
xchg
pop
jl
and
arpl
call
dec
cmp
fwait
jmp
ins
add
sbb
lods
test
pop
push
and
icebp
pop
xlat
add
aad
and
add
iret
dec
imul
mov
fucomp
cmp
sbb
push
pushf
sbb
mov
(bad)
repnz
pop
das
mov
imul
jl
pop
sub
stc
ror
xchg
iret
cdq
fwait
enter
cmp
cld
ins
cmps
dec
out
mov
test
mov
jnp
jns
cmp
cmp
inc
ins
mov
fldlg2
mov
loope
inc
mov
jge
pop
stc
in
jmp
push
(bad)
mov
pop
or
aas
push
mov
sbb
mov
and
mov
jnp
dec
add
mov
xor
lods
out
cmps
daa
es
rcl
cmp
out
push
xor
push
jecxz
sub
xlat
dec
xchg
mov
xchg
jae
mov
std
xchg
es
sti
sbb
xchg
inc
mov
mov
xchg
aam
sub
ja
mov
cs
rcr
aas
int
dec
faddp
add
mov
inc
call
sbb
jle
in
fcomi
test
jne
add
push
xchg
mov
dec
inc
cwde
in
inc
(bad)
xchg
dec
or
imul
cmp
popa
loope
inc
lds
imul
addr16
int
adc
or
call
push
cmp
int3
push
cmp
cmp
sub
pop
out
fild
fbld
or
sub
jmp
jge
sbb
push
pop
je
fbld
pop
add
inc
outs
in
sub
mov
hlt
mov
popf
(bad)
add
loopne
or
retf
push
mov
inc
mov
push
jno
enter
adc
inc
jmp
jo
into
iret
popa
fbstp
rol
inc
scas
aad
dec
call
outs
push
dec
xchg
push
add
mov
inc
fsub
lods
das
push
xchg
jnp
or
or
and
mov
pop
mov
stos
or
sahf
test
dec
in
sbb
mov
mov
aam
in
jecxz
and
adc
call
pop
shl
ins
mov
cs
sub
js
and
cmp
mov
push
in
mov
sti
ins
imul
out
les
dec
retf
mul
rcl
mov
pop
cmp
sub
arpl
xchg
bound
fst
mov
jle
std
push
retf
or
sti
pop
jae
pop
ins
enter
pop
cld
jae
(bad)
std
push
jb
in
aam
mov
or
or
cmp
in
push
xchg
shl
jno
xchg
sub
adc
push
sti
sub
js
push
inc
(bad)
shr
(bad)
dec
adc
push
xor
sub
sahf
mov
xlat
cmp
and
cmp
add
call
sbb
addr16
cmp
mov
loope
lock
das
out
adc
xor
stos
jg
xor
loope
mov
and
aam
mov
dec
stos
arpl
sbb
jg
mov
nop
add
mov
shl
test
mov
fistp
out
mov
fstp
in
jge
dec
push
pusha
add
and
mov
movs
rol
and
xor
or
adc
sar
push
out
bound
fdiv
push
(bad)
cmp
std
mov
popf
pop
out
outs
addr16
fldcw
jne
mov
les
fsubr
xchg
jb
in
mov
mov
out
xchg
xchg
arpl
lods
out
add
inc
retf
jbe
xlat
mov
inc
mov
(bad)
sahf
sbb
inc
push
jbe
leave
xchg
mov
cmps
pop
lods
mov
push
fsubr
(bad)
movs
repnz
mov
mov
cmp
ret
out
mov
and
cmps
and
mov
inc
imul
dec
jno
repnz
(bad)
scas
xor
mov
sahf
sti
add
mov
ret
retf
ds
add
cmc
push
sub
adc
or
or
fistp
test
loope
test
shl
pop
cli
retf
loope
rol
mov
fwait
shl
dec
rcl
mov
mov
sub
fbld
mov
cmps
adc
or
cmp
cs
xor
rcl
or
test
pop
imul
push
sbb
dec
ror
mov
icebp
inc
popf
sub
(bad)
ds
cmp
pop
add
fisttp
sahf
mov
sbb
pop
add
xchg
ret
xchg
retf
mov
inc
pop
in
loopne
out
sbb
imul
movs
xchg
mov
inc
sub
pop
cmc
dec
mov
nop
mov
push
cmps
sbb
movs
loope
add
cmp
ss
lods
call
push
adc
xchg
dec
fdivr
out
adc
pop
jo
jns
out
mov
push
enter
adc
jae
cmps
jle
sub
pop
vcvtps2dq
scas
dec
push
ja
add
data16
pop
fmul
inc
inc
std
adc
aaa
sub
cmps
gs
add
test
fucom
mov
arpl
aaa
inc
imul
sub
in
pop
repnz
mov
and
repz
lock
and
cli
(bad)
sbb
adc
call
aam
adc
add
aam
test
dec
in
ins
test
mov
cmps
or
and
outs
fisttp
dec
repz
fsubr
add
es
pop
(bad)
mov
(bad)
cmps
mov
in
in
inc
out
or
jo
inc
das
out
xchg
adc
sbb
lea
ret
ffreep
dec
aam
pushf
xor
sub
cmp
cmp
scas
sbb
fist
mov
loopne
push
sbb
cmp
jmp
xchg
mov
dec
push
rcr
inc
dec
add
or
pop
jecxz
(bad)
and
adc
dec
jmp
aaa
adc
push
and
out
in
sbb
xor
pop
iret
or
(bad)
fbld
test
pusha
push
fwait
jbe
mov
xchg
mov
xlat
ins
movlps
lock
cmp
test
mov
push
js
cld
inc
fs
iret
xor
fwait
(bad)
inc
and
cmp
ss
ins
push
push
sub
test
jge
icebp
scas
sbb
aas
fmul
mov
ja
mov
sub
push
mov
stos
push
out
aaa
mov
and
mov
movs
push
or
cmp
into
retf
out
adc
enter
mov
xchg
sub
dec
sbb
jecxz
sbb
retf
repnz
imul
dec
push
pop
in
cmp
xchg
out
sbb
outs
cmp
(bad)
pop
inc
call
cwde
test
mov
outs
inc
sub
dec
or
(bad)
dec
imul
ret
mov
std
sahf
sbb
jge
xchg
mov
mov
dec
and
inc
mov
xchg
ss
xor
add
loop
mov
inc
mov
jge
jno
shl
scas
pushf
sbb
sti
mov
movs
or
xchg
xchg
pop
ins
nop
ret
popa
cmc
xchg
(bad)
sbb
lds
test
test
cmps
jns
jnp
loope
(bad)
nop
(bad)
jmp
add
data16
loopne
clc
scas
jmp
div
sub
pop
sub
mov
and
shl
adc
enter
test
mov
push
jp
push
mov
stos
jmp
and
mov
in
mov
push
jae
jo
cmps
test
mov
aaa
(bad)
retf
icebp
jp
(bad)
cmp
(bad)
jo
imul
dec
dec
mov
sbb
pop
xchg
mov
rcl
pop
mov
xchg
shr
daa
dec
xor
(bad)
and
cmps
dec
aas
xor
shl
and
fmul
ret
ins
aad
and
(bad)
mov
adc
inc
jl
or
popf
jp
lods
cdq
movs
sbb
inc
or
stos
add
push
test
cmp
sub
xor
dec
cmps
lods
das
push
mov
and
fimul
cmp
stos
lds
pop
mov
loope
mov
cs
aas
daa
xor
daa
(bad)
sbb
pop
push
scas
cmp
inc
push
fmul
dec
mov
(bad)
inc
sbb
sub
into
xchg
retf
jecxz
mov
shr
inc
cmp
dec
neg
pop
add
jb
cmp
jl
pop
sbb
inc
test
cwde
int3
mov
push
rcl
jmp
cmp
push
sub
jbe
imul
(bad)
lock
inc
arpl
(bad)
ds
pushf
in
(bad)
dec
add
push
sbb
adc
mov
jl
cmovo
imul
outs
dec
and
push
popa
xchg
or
int
jno
fidiv
jge
popf
ins
sub
pop
cmp
dec
dec
mov
pop
adc
iret
into
je
mov
fnsave
and
lock
mov
ss
in
mov
xor
repz
or
adc
outs
clc
gs
adc
in
fsub
mov
and
adc
mov
jns
cdq
arpl
lds
ins
enter
pop
into
jl
push
fwait
sub
jnp
(bad)
mov
bound
movs
push
add
rcl
sbb
pop
xchg
push
mov
cmp
pusha
add
pop
and
cmps
pop
or
push
cdq
xlat
sar
lock
loope
cmp
inc
and
aas
jmp
es
fidiv
dec
out
movs
xor
cli
pop
jp
jne
cmp
in
aas
dec
cmp
mov
mov
push
jb
mov
push
pop
add
mov
lahf
inc
xor
mov
mov
jne
cwde
pop
xor
lods
push
mov
int
ret
imul
push
mov
cld
(bad)
enter
or
lock
lds
jmp
sbb
sub
sbb
gs
xlat
push
or
test
push
out
add
mov
aam
ret
lods
aam
push
mov
adc
sub
clc
es
stos
xchg
lds
and
xchg
ret
mov
sahf
pop
(bad)
imul
loopne
jecxz
je
leave
rol
cwde
out
sbb
inc
mov
imul
cmp
out
iret
arpl
mov
adc
mov
out
push
mov
jne
inc
retf
xor
bound
ins
cmp
mov
jmp
sub
jmp
xor
mov
mov
sub
xor
cmp
push
stos
mov
add
push
pop
inc
out
mov
js
bound
out
mov
leave
div
cli
cmp
inc
adc
sub
lods
loopne
mov
std
inc
sbb
fxch
and
dec
add
cmp
or
out
stos
push
and
cli
inc
push
mov
pop
test
push
test
inc
xchg
test
or
pop
cmp
test
call
jmp
mov
lods
into
mov
ror
xchg
jns
dec
sub
jnp
popa
dec
lahf
pop
in
push
rcr
vcmpps
xor
nop
or
div
iret
mov
lods
pop
cmps
cmp
ins
call
mov
or
sti
rep
jl
ja
mov
adc
xor
stc
push
adc
das
and
in
mov
leave
pushf
jecxz
cli
xchg
arpl
lods
adc
pop
xchg
push
cld
jmp
mov
push
add
mov
sbb
add
cmp
repnz
mov
xchg
(bad)
(bad)
movs
sbb
into
pop
push
rcl
mov
loop
fwait
bound
dec
mov
lock
mov
dec
fdivr
scas
fucom
jne
mov
daa
mov
pop
dec
sub
enter
inc
sub
test
(bad)
scas
fisttp
std
or
bound
cmc
ficom
fnstenv
xor
jno
adc
mov
jne
and
jo
sbb
or
pushf
or
or
cmps
cli
call
inc
outs
ins
xchg
jle
jno
sti
mov
and
xlat
dec
outs
mov
mov
mov
dec
cmc
out
popa
(bad)
arpl
lods
neg
sub
fist
push
scas
and
xor
sub
aaa
adc
mov
aad
rcl
(bad)
cld
out
aad
out
inc
pop
test
xchg
dec
ret
jne
aas
xchg
(bad)
out
push
popf
(bad)
cli
les
fwait
add
push
or
ins
jle
mov
add
pop
jmp
pop
test
push
mov
loopne
pop
(bad)
mov
aad
xor
out
jmp
mov
adc
pop
xor
dec
add
xchg
xchg
out
sub
sub
cwde
add
push
lahf
repnz
mov
(bad)
push
pushf
dec
rcl
leave
cmp
inc
aad
ret
lea
inc
and
movs
pushf
dec
bound
add
clc
neg
push
mov
inc
clc
mov
std
fmul
add
sbb
inc
mov
dec
not
imul
les
repz
push
pop
and
cli
aaa
pop
loop
cld
push
xchg
loopne
(bad)
jnp
ja
xchg
inc
or
cmp
sti
and
jg
inc
mov
xchg
int
inc
jg
mov
pop
pop
jp
ficomp
mov
jo
mov
aas
adc
cmp
pop
nop
mov
je
mov
pushf
shl
pop
push
fld
ds
fadd
fmul
cs
jne
loope
mov
push
push
adc
int
dec
xchg
scas
dec
ins
(bad)
(bad)
sbb
stc
pop
jmp
popa
cdq
mov
push
sbb
pop
arpl
or
shr
and
lea
cmp
leave
sbb
or
cdq
in
mov
dec
cld
or
push
lods
xor
adc
adc
cmp
or
lea
mov
mov
sub
das
stos
or
and
imul
ret
lds
rcl
and
gs
pop
sbb
add
(bad)
lods
test
leave
sbb
xchg
push
sub
fst
sbb
dec
mov
cdq
sbb
aas
popf
add
mov
inc
ins
(bad)
cmp
(bad)
leave
push
mov
nop
sbb
mov
outs
sti
sub
call
mov
js
clc
(bad)
xchg
hlt
add
sar
add
sub
push
scas
mov
aas
jno
daa
push
add
push
mov
fbstp
ja
adc
xchg
shr
data16
sub
hlt
lds
call
and
xor
jnp
xchg
xor
jb
push
inc
es
fcomp
mov
int
sar
pop
xchg
neg
mov
outs
cld
hlt
cvtps2pd
cli
sub
mov
mov
add
ror
jo
icebp
rol
movs
leave
ror
ins
punpcklbw
pop
neg
scas
stc
or
movs
fild
cmp
jmp
cmps
cwde
sbb
inc
test
into
cmp
mov
add
jl
cwde
loopne
into
sub
mov
repz
cli
sbb
sbb
lds
ret
or
xchg
add
jge
lahf
inc
(bad)
adc
sub
dec
xchg
adc
push
cmovp
dec
rcl
nop
cmp
push
imul
dec
stos
fstp
push
fadd
cmc
lods
stc
scas
jl
div
fcmovu
cmp
(bad)
mul
adc
xlat
xor
cmp
movs
int
mov
xchg
jle
shl
add
hlt
cdq
or
pop
dec
dec
in
rol
jne
cmps
mov
outs
inc
icebp
(bad)
jp
mov
inc
and
cmc
jmp
mov
mov
scas
jecxz
sub
loop
aas
xchg
jmp
mov
repz
sbb
fild
pusha
aam
jns
jle
or
fucomp
fdiv
or
xor
js
imul
(bad)
jp
call
or
mov
ins
imul
movs
adc
jnp
(bad)
mov
or
std
daa
retf
shl
(bad)
fcomp
and
mov
dec
jmp
xlat
adc
dec
pop
jp
xchg
out
mov
push
sub
lds
cld
rol
fisttp
dec
sub
sub
or
test
ins
aam
push
or
call
je
add
sub
lods
mov
icebp
iret
(bad)
ins
add
outs
pop
cmps
mov
or
jne
sahf
fcom
addr16
dec
test
es
stos
fadd
jecxz
mov
ss
adc
xchg
sub
xchg
imul
nop
pop
or
adc
lds
push
out
lea
ret
xor
xchg
cmp
mov
pop
es
js
xchg
dec
(bad)
adc
std
aad
sbb
jae
mov
inc
inc
shl
mov
add
test
xchg
lock
mov
ins
pop
sbb
lahf
pop
shr
popa
in
fild
loop
(bad)
aam
xchg
cs
jae
add
fs
pop
jmp
repnz
fimul
leave
mov
dec
sahf
clc
lahf
les
aaa
pop
retf
mov
lds
stos
sub
sub
or
imul
mov
lds
pop
stos
jnp
fimul
outs
stos
mov
mov
adc
xchg
mov
or
mov
int
xchg
jb
out
fsubr
int
push
mul
cmovl
aad
inc
jno
ja
lea
jno
aam
or
popf
xchg
(bad)
movhlps
adc
imul
loopne
push
sub
cmp
mov
shl
(bad)
idiv
sbb
xchg
ds
push
pop
pushf
push
push
pop
pop
cwde
ins
xor
clc
aad
jbe
pushf
push
or
shr
arpl
jb
or
jp
in
(bad)
js
shl
xor
lock
mov
gs
movs
test
iret
mov
dec
and
xchg
fucomip
fwait
mov
jo
repz
pop
ja
out
mov
or
hlt
jne
clc
mov
ins
mov
fsubr
xor
je
xor
xor
stc
fdivr
pop
xor
or
lea
mov
sub
inc
jl
dec
pusha
xchg
inc
mulps
sbb
mov
ins
add
les
add
fwait
add
xchg
or
xchg
sar
cmp
scas
call
cli
lock
je
mov
xchg
test
jl
std
xchg
push
push
fidiv
in
mov
jae
movs
stos
cmc
jae
adc
dec
xchg
sub
mov
add
add
test
dec
ret
push
loopne
outs
ja
pop
jne
loope
sbb
jns
xlat
sbb
mov
aad
pushf
adc
ds
neg
sub
pop
mov
icebp
ret
inc
and
loop
or
add
outs
stos
cdq
mov
xor
mov
loop
mov
(bad)
and
push
outs
mov
mov
xchg
arpl
gs
int
popf
dec
jnp
or
push
jp
repnz
mov
lods
sti
daa
mov
mov
and
jl
cmp
jbe
mov
push
repnz
cmp
icebp
xchg
mov
mov
in
stos
sbb
mov
mov
jmp
mov
sbb
stos
xlat
pop
ins
push
in
jo
lds
jl
test
pause
mov
out
mov
mov
pop
retf
xchg
daa
mov
into
sahf
or
mov
pushf
int
sub
outs
sub
push
jmp
cmp
mov
jb
pop
call
inc
mov
mov
cld
lds
js
std
and
mov
jmp
je
mov
pop
das
out
xor
dec
jb
test
cmps
adc
sbb
je
jne
es
push
xor
les
jmp
mov
jno
sub
mov
cmp
arpl
adc
jbe
add
cli
xlat
sbb
out
and
cmps
sbb
sahf
jb
xchg
xchg
aam
mov
mov
shl
lea
inc
cwde
and
inc
inc
hlt
pop
mov
into
movs
popa
cmp
in
xor
mov
int3
dec
cmp
dec
adc
shl
movs
popf
pop
ffreep
leave
jno
cdq
ror
and
retf
lds
push
xor
xchg
lods
(bad)
rcr
xchg
pop
test
sub
iret
mov
scas
and
push
(bad)
sar
or
dec
in
and
add
jl
cmp
ins
stos
sub
leave
cld
aam
mov
enter
add
jbe
jmp
add
mov
(bad)
rcl
lock
(bad)
jae
in
inc
por
and
sbb
enter
test
jnp
sub
cmc
cmp
outs
outs
push
rol
add
inc
sub
idiv
jl
test
ins
mov
aas
jne
xor
(bad)
std
sub
dec
cmps
and
sbb
leave
fldenv
cmp
test
pop
cmp
call
aaa
sbb
pusha
fwait
(bad)
and
xor
push
mov
dec
pop
hlt
pusha
adc
shl
sub
ret
jle
outs
in
cmp
aam
iret
adc
pusha
pop
xor
ror
sub
or
push
call
sub
(bad)
mov
dec
cmc
push
pop
mov
ds
pop
popf
sub
popf
or
cld
pop
mov
repnz
out
mov
xor
ds
call
in
push
add
enter
mov
into
mov
das
jmp
es
clc
div
xchg
sub
into
les
clc
loopne
out
push
or
mov
inc
cdq
dec
call
call
mov
push
pop
test
cdq
retf
inc
push
es
das
mov
daa
in
inc
pop
push
loopne
retf
in
and
dec
xor
cmp
lods
call
cmc
push
test
mov
sub
add
push
mov
repnz
cmp
aas
mov
lds
je
add
lea
sub
cmp
fidiv
imul
dec
jno
push
(bad)
cli
outs
lods
mov
adc
(bad)
or
xchg
adc
pop
pop
fmul
movs
imul
ror
and
inc
je
fisttp
cdq
mov
sub
push
cmp
and
(bad)
out
push
xchg
xchg
xchg
ss
je
test
cwde
retf
ss
push
rol
fcom
and
pop
fmul
and
fstp
ins
retf
mov
push
mov
out
outs
sti
add
fnsave
(bad)
mov
ficom
pop
out
fst
jmpw
ds
push
xchg
test
adc
xor
sbb
loopne
aad
dec
(bad)
call
or
add
push
dec
ja
jp
stos
hlt
pop
mov
mov
mov
lods
std
push
ins
test
mov
mov
xor
and
lods
fstp
in
adc
test
add
sub
cmp
sub
imul
mov
push
mov
mov
adc
inc
cwde
mov
hlt
ret
rol
jmp
fcom
cli
out
mov
ds
test
mov
adc
cmc
icebp
xchg
or
rol
inc
je
dec
imul
cmp
mov
push
dec
inc
dec
call
es
mov
push
test
jbe
scas
inc
and
jo
inc
xor
enter
outs
dec
pop
xchg
out
add
xor
test
push
ror
loop
cmp
aad
mov
fsub
in
shl
daa
int
mov
push
and
and
ins
mov
repnz
mov
leave
outs
mov
rcr
cmp
sub
movs
scas
push
lock
rep
pop
inc
dec
je
adc
ret
mov
push
jne
mov
sahf
cmp
sub
xchg
sti
add
mov
jp
mov
jbe
scas
bound
ins
push
add
call
mov
and
mov
mov
dec
pusha
out
loope
fwait
adc
pop
movs
inc
jecxz
inc
pop
repnz
cmp
imul
adc
fst
cmps
pop
and
pop
clc
jle
mov
ins
aam
dec
mov
dec
xchg
in
fisub
mov
adc
sub
adc
lds
push
(bad)
outs
cdq
dec
stos
loope
cmp
sahf
aam
mov
add
ins
jbe
jmp
js
(bad)
shl
or
mov
stc
jb
jmp
or
cmc
cmp
rol
sbb
add
adc
jns
xor
inc
cmc
cmp
add
mov
jecxz
adc
xor
mov
fidiv
push
imul
cmc
or
sub
push
mov
jle
fs
jge
sub
call
mov
cdq
pushf
pop
pop
and
aaa
cmp
shl
cwde
mov
and
dec
fs
loopne
add
dec
push
mov
pop
sar
inc
(bad)
xchg
jl
or
xor
xchg
or
in
cmp
sub
fisttp
jl
add
test
jb
clc
push
imul
(bad)
xor
test
xchg
(bad)
je
popf
cmp
int3
fprem
ds
sbb
push
clc
ins
(bad)
imul
add
movs
sub
hlt
scas
mov
inc
das
hlt
in
dec
xor
imul
jae
pop
add
pop
push
nop
mov
sub
std
inc
psllw
(bad)
loop
clc
(bad)
fsub
xchg
das
ficomp
aas
loopne
inc
data16
xor
pusha
ja
xor
sub
int3
test
es
mul
lahf
xchg
test
inc
int
mov
or
and
outs
int3
std
scas
push
dec
or
clc
push
add
out
es
add
jecxz
dec
sbb
xchg
xchg
(bad)
pop
or
rcr
pop
jg
xchg
dec
mov
sub
push
cmp
lods
jno
xlat
add
and
repz
inc
ins
movs
movs
out
aad
fst
or
cmp
mov
xor
push
jmp
js
mov
inc
or
jecxz
inc
jnp
sub
aaa
lock
mov
mov
repz
xchg
call
add
movs
xchg
add
cmps
add
adc
add
lea
(bad)
inc
inc
mov
sub
std
pop
mov
mov
inc
and
and
adc
pop
pushf
aad
add
ins
mov
fbstp
in
test
je
fidivr
and
jl
aas
sti
inc
addr16
cld
push
(bad)
icebp
(bad)
into
test
dec
mov
(bad)
inc
aam
repnz
push
add
pop
mov
dec
bound
adc
jo
stc
add
sbb
cmc
dec
inc
dec
cmp
xor
or
inc
mov
mov
or
cmps
dec
lahf
inc
push
xor
mov
shr
fidiv
sbb
rol
or
gs
call
inc
lods
inc
pop
xchg
pop
cmp
ret
dec
or
xor
aaa
stc
lock
jp
jns
xchg
sbb
dec
and
mov
pop
inc
call
daa
ins
dec
loope
fdiv
(bad)
push
aam
jg
ret
fisttp
xlat
xchg
int
push
addr16
xchg
add
idiv
xor
xchg
and
or
add
out
jno
xor
sub
mov
out
push
inc
mov
jle
add
inc
adc
mov
out
push
leave
js
call
(bad)
mov
dec
bnd
outs
retf
adc
inc
xchg
aad
xchg
(bad)
mov
jle
jecxz
pop
frstor
fcmovu
xchg
ffree
(bad)
push
xor
mov
push
jle
mov
add
jg
repnz
stos
jmp
ja
out
clc
mov
shl
ja
sti
push
mov
mov
cwde
inc
cmp
adc
je
push
loope
and
(bad)
fxam
push
mov
aas
or
inc
jno
test
mov
mov
out
loope
push
test
push
dec
sub
mov
cmp
mov
add
jle
pop
fisubr
mov
sub
lods
cwde
and
dec
xchg
add
jg
lahf
xchg
ficomp
cmp
hlt
iret
xchg
ja
xor
imul
clc
dec
dec
sub
test
cmp
or
arpl
mov
inc
sbb
jp
add
and
push
jge
pusha
cld
add
repnz
mov
dec
out
sbb
xor
mov
jne
sbb
dec
rcl
in
push
push
inc
test
or
sahf
xchg
in
inc
xor
sub
cmp
out
mov
sbb
sub
int
mov
es
inc
enter
mov
push
sti
jecxz
xchg
es
(bad)
scas
ins
jge
add
int3
mov
mov
jecxz
frstor
inc
or
and
fidiv
aam
ret
jno
jae
dec
je
jne
ins
iret
mov
pop
pavgw
push
inc
xor
bound
mov
rcr
sti
and
mov
xchg
stc
fwait
mov
ds
adc
pusha
popf
cmps
test
fnstsw
out
jmp
outs
jge
push
sar
jmp
std
add
cli
dec
nop
xchg
xor
mov
push
adc
add
call
mov
shr
pop
aaa
or
push
fs
dec
dec
mov
in
das
scas
push
clc
frstor
xchg
(bad)
adc
bts
in
sub
clc
cmp
outs
inc
and
jecxz
mov
movs
pop
push
and
stos
push
xchg
dec
push
jecxz
mov
ret
and
add
xchg
les
mov
jle
enter
arpl
lea
push
jmp
mov
xchg
je
dec
xchg
int
push
aam
mov
cwde
push
fild
stos
cmps
sub
dec
jmp
push
adc
dec
sub
clc
cdq
js
sub
jmp
push
in
fadd
jg
repz
push
cmp
xchg
or
adc
ins
(bad)
outs
aaa
jecxz
mov
cmp
jbe
shr
loope
cmp
dec
sbb
or
xor
fild
fisttp
mov
cmp
in
addr16
cmp
and
gs
or
loop
imul
mov
add
jne
xchg
push
les
int
cli
jae
push
aam
in
nop
shl
aad
push
loopne
lods
daa
(bad)
pop
cmp
sub
sbb
dec
gs
and
pop
xchg
cmps
rol
xor
sub
mov
lock
sub
fstp
dec
leave
inc
mov
out
lods
rol
rol
ins
push
and
mov
xlat
enter
sahf
xlat
cli
pop
adc
and
xchg
push
ins
cmp
dec
movs
xchg
cmp
fld
(bad)
stos
jne
mov
mov
dec
test
test
bound
adc
add
dec
sub
jge
sub
pop
je
mov
lahf
nop
add
jg
mov
pop
sbb
pop
jbe
neg
ss
fmul
in
inc
mov
sbb
sub
gs
push
jmp
aaa
xchg
loope
add
ja
mov
xor
ins
add
aaa
mov
(bad)
cmp
cmc
mov
test
sti
out
pop
popf
(bad)
and
movs
(bad)
cld
or
mov
mov
inc
out
and
xchg
int
or
pop
adc
lahf
xor
jle
addr16
(bad)
and
cli
push
cmps
mov
push
jmp
popf
hlt
shr
(bad)
(bad)
aad
mov
adc
aad
inc
xchg
nop
call
mov
cmp
and
sbb
pop
xor
es
mov
stc
pop
mov
xor
sti
sar
inc
shr
or
sbb
pop
daa
jge
repz
xor
pop
test
pushf
add
or
push
pop
xor
fisttp
push
fs
push
pop
js
push
iret
jmp
pop
leave
xor
sub
xor
add
fdivr
xchg
icebp
sbb
or
nop
add
inc
mov
test
movs
aas
stos
dec
bound
movs
cmps
scas
xchg
movs
jl
push
adc
fwait
js
or
pop
in
mov
(bad)
hlt
mov
ja
and
mov
je
retf
leave
sbb
cmp
fild
(bad)
jecxz
sahf
add
and
test
xor
jno
adc
inc
les
xchg
ffreep
cmp
sbb
movs
cmc
or
jo
inc
add
xchg
push
stos
enter
add
jecxz
jmp
inc
lock
jmp
ins
ret
fidiv
icebp
rol
loope
(bad)
(bad)
xchg
daa
je
push
(bad)
fcom
or
mov
aad
sub
sar
idiv
add
stos
jns
or
xor
jno
daa
push
sub
lods
adc
ror
xor
imul
out
pop
mov
stos
cdq
jmp
int
sbb
jbe
ja
xor
and
pop
cmp
cmp
mov
push
mov
mov
call
inc
aaa
add
push
push
mov
push
mov
cmp
fdiv
and
mov
aas
(bad)
into
icebp
iret
jb
xchg
mov
sbb
pop
daa
inc
and
push
push
or
cmp
in
mov
inc
pop
cmp
xor
pop
lock
mov
xor
push
fistp
pop
xchg
push
inc
cld
jb
jge
mov
test
push
lock
cmp
scas
dec
aaa
pmaxsw
ja
das
imul
sbb
imul
push
lods
arpl
ss
ins
push
jno
and
sub
xchg
cmp
mov
pop
pushf
mov
mov
xor
or
xchg
enter
jmp
and
push
cmp
mov
aam
mov
xchg
xchg
cmc
push
mov
ds
inc
test
cs
jo
cmp
jp
cmc
adc
cdq
add
jo
rol
fisubr
push
repz
addr16
cmps
fistp
ins
mov
add
inc
sub
pop
xchg
inc
inc
arpl
sbb
sub
jbe
push
lock
inc
inc
cmp
stos
rol
mov
add
int
mov
xchg
and
(bad)
test
ret
fsub
cwde
jnp
push
mov
cmp
add
call
jl
aam
jno
xchg
test
pop
leave
jg
xchg
pusha
lahf
pop
daa
retf
xlat
and
shr
xor
mov
test
dec
inc
ins
push
arpl
cld
mov
mov
call
daa
stos
sbb
cmc
inc
push
xor
and
mov
sbb
fisttp
pusha
xchg
mov
in
dec
and
mov
dec
ja
sub
sti
sub
mov
push
les
out
dec
fistp
inc
jp
sub
mov
clc
jb
jg
icebp
and
or
dec
push
retf
pop
mov
lahf
ins
call
sbb
xor
mov
add
mov
retf
popf
push
pushf
stc
or
out
ja
int
inc
dec
mov
push
loop
mov
xor
mov
aaa
dec
(bad)
out
xor
popa
jnp
scas
push
(bad)
mov
lods
pop
pop
aas
rcl
mov
xchg
jnp
dec
mov
jle
popa
adc
addr16
cdq
cmp
sbb
addr16
adc
cmp
inc
in
clc
dec
sub
sbb
mov
sar
jo
xor
sub
push
test
jno
dec
adc
mov
push
mov
mov
sbb
pop
sub
pop
jge
daa
pop
cmp
dec
ins
in
pusha
loopne
jmp
jle
bound
std
sti
pop
sahf
jmp
daa
jge
das
div
icebp
in
xor
pop
sub
mov
into
push
or
add
xchg
test
pop
les
xchg
nop
cdq
mov
popf
test
movs
data16
loopne
shl
sbb
test
aas
mov
mov
sub
dec
loope
call
addr16
push
lock
ret
jp
adc
cmps
jg
retf
xor
dec
adc
adc
ins
xor
fmul
stos
xchg
dec
(bad)
je
mov
sti
dec
jne
push
stos
and
ret
inc
repnz
push
pushf
lock
xchg
add
cmp
cld
jbe
rol
mov
jae
dec
adc
call
xabort
(bad)
or
jns
xchg
cs
ja
scas
inc
rcl
adc
dec
clc
mov
jg
dec
loope
fisttp
sub
repnz
cmp
shr
cli
and
mov
shl
sub
xor
and
lds
lea
repz
add
cwde
mov
jns
icebp
xchg
mov
add
sbb
add
and
retf
inc
in
jle
cmp
cmp
sbb
add
push
xor
sbb
jmp
and
rcr
(bad)
ror
ds
cmps
lods
in
loop
ds
aaa
ret
mov
not
loope
icebp
add
imul
(bad)
mov
push
mov
jnp
mov
xlat
cmps
push
shr
inc
jno
imul
(bad)
cmp
int3
idiv
xchg
outs
inc
ret
repz
sti
std
inc
pop
cmp
stc
data16
jno
jae
push
mov
pop
and
js
arpl
jge
out
jl
dec
jl
and
ins
pop
mov
adc
lock
cmp
fnsave
movs
jl
and
push
das
inc
test
cmp
call
xor
cmps
outs
adc
push
cmp
pop
retf
cmp
inc
lea
popa
sbb
movs
in
aas
push
mov
and
jmp
mov
xor
rcr
push
and
nop
sub
xor
jg
es
mov
pushf
std
(bad)
mov
cdq
xor
outs
jo
mov
cli
mov
mov
mov
sub
mov
repnz
inc
jmp
dec
iret
pop
std
pop
inc
sbb
sub
js
push
mov
jns
xchg
mov
pop
add
in
ja
cmp
adc
(bad)
sbb
dec
adc
cmp
frndint
mov
neg
aaa
inc
fsubr
sub
xchg
xchg
pop
sbb
xor
mov
sub
mov
cmovp
int
pop
out
aam
mov
fidivr
inc
sub
fucomi
cli
xor
aad
cmp
fdiv
jp
outs
mov
inc
test
ja
sbb
sbb
aas
sti
inc
xchg
int
xor
jge
xor
ins
cmps
xlat
inc
xor
mov
jbe
sub
mov
or
ins
dec
aad
(bad)
jp
pushf
add
push
push
pop
pop
inc
push
hlt
adc
scas
push
and
and
jmp
mov
aam
pop
sub
outs
pop
add
ficomp
push
and
ret
in
repz
fisubr
sti
or
daa
lods
in
fwait
shl
in
push
push
xor
xchg
jns
ret
sub
adc
mov
into
jo
pop
fs
push
into
and
xchg
or
mov
ss
sbb
mov
ja
nop
scas
dec
daa
or
ins
mov
arpl
pop
mov
arpl
das
sbb
mov
cmp
clc
inc
or
jg
sub
sub
inc
mov
in
dec
mov
rcr
or
push
jno
inc
jp
shl
add
cmp
es
pop
cmp
xor
xor
mov
cld
sub
push
(bad)
jnp
dec
xor
pop
call
ds
fimul
mov
stc
mov
std
or
sbb
aam
or
(bad)
enter
cmp
jb
push
dec
xor
mov
cdq
scas
xchg
inc
mov
pop
iret
or
jmp
sbb
stc
movs
jecxz
test
xor
add
sub
adc
mov
push
adc
dec
hlt
enter
mov
jnp
lods
popf
test
mov
or
enter
jnp
test
pop
jmp
(bad)
arpl
sbb
xchg
add
movntps
jge
in
cmp
jle
repz
movs
test
inc
daa
dec
leave
push
jle
popa
cmps
mov
xor
mov
ds
mov
data16
int3
es
xor
or
retf
stos
test
jo
cmp
sahf
inc
iret
xchg
lahf
add
add
mov
sub
mov
mov
popf
fcmovne
int3
jne
add
ins
fucomip
out
ror
imul
and
mov
sar
out
mov
ins
es
mov
lds
sbb
out
icebp
jecxz
stos
mov
cmp
enter
daa
push
pop
inc
mov
xlat
cmp
movs
jmp
jmp
in
icebp
sbb
mov
nop
in
and
and
ret
into
pusha
jg
aam
sbb
out
mov
sbb
scas
xor
mov
push
jns
push
jbe
(bad)
nop
das
in
inc
push
jne
outs
push
lea
mov
aad
(bad)
xor
add
mov
mov
int3
jp
xor
cmp
imul
repnz
or
mov
jb
xchg
xor
sub
mov
imul
mov
mov
or
clc
fucom
jge
mov
fdiv
aas
aad
push
shl
or
add
add
stos
cmp
fs
div
push
xchg
push
pop
aad
hlt
jo
test
add
outs
or
and
js
pop
adc
lea
(bad)
out
pop
cdq
movs
sub
sbb
push
cmc
dec
jle
xchg
ficom
je
imul
(bad)
xchg
jge
les
into
pop
hlt
push
sbb
jmp
cmp
or
into
xchg
arpl
adc
ret
not
sub
ins
cmp
push
mov
clc
push
rol
xchg
push
pop
fs
push
ins
jns
xchg
daa
outs
xchg
push
mov
fild
fs
cs
mov
push
and
adc
test
add
repnz
fidivr
add
fucomp
pop
int3
sub
lods
shl
inc
xchg
ror
xchg
pop
and
xor
call
in
ficom
sub
or
gs
stc
ss
xor
jae
mov
sub
jbe
fcomi
cmp
push
and
dec
push
mov
sbb
sbb
int
lock
aam
and
fsub
arpl
inc
loope
daa
shl
xchg
(bad)
xor
mov
pop
ds
mov
xchg
cmp
(bad)
push
jge
add
mov
clc
cmps
in
lods
(bad)
lods
sbb
mov
mov
clc
push
adc
cmp
and
sti
mov
mov
mov
mov
outs
inc
ss
cli
retf
fstp
aam
jo
in
outs
adc
ret
cmp
lock
jmp
xor
in
addr16
cmp
into
push
jp
pop
inc
push
xlat
aad
add
cwde
xchg
add
shl
cmp
jp
sahf
push
sbb
je
arpl
pushw
adc
sbb
in
pop
and
mov
jmp
cmps
imul
dec
mov
sbb
mov
ins
test
int3
imul
sbb
and
outs
pop
(bad)
pop
xor
stos
outs
in
les
lea
or
dec
ss
rcl
mov
inc
or
retf
jmp
(bad)
cmps
inc
out
cdq
fcom
rol
cmp
and
jne
jbe
pop
push
mov
add
cmp
inc
add
pop
movs
and
sub
daa
call
xor
clc
and
pop
dec
jge
or
repz
pop
cmp
cmp
call
push
test
dec
push
cmp
repz
dec
cmps
push
movs
push
cmp
pop
(bad)
pusha
clc
push
xlat
pop
mov
aas
sub
or
popa
dec
(bad)
imul
jmp
push
call
cmp
pop
(bad)
movs
mov
sbb
in
mov
test
xor
sub
lock
ins
sbb
imul
stos
shl
call
ret
sahf
pop
ss
stc
xor
pop
fild
push
xlat
add
pop
imul
mov
in
xchg
mov
je
stos
pushf
cmp
test
fstp
mov
fiadd
(bad)
(bad)
das
shl
das
test
fbld
dec
or
in
sbb
movs
or
je
mov
cmp
dec
pop
jae
push
jnp
sbb
push
inc
scas
push
mov
popa
getsec
retf
bound
sbb
imul
xor
sbb
dec
adc
addr16
(bad)
ret
pop
enter
jo
push
jg
daa
adc
(bad)
mov
int3
jbe
and
add
imul
xchg
scas
dec
mov
and
mov
sub
(bad)
hlt
in
jae
shr
push
in
(bad)
mov
mov
fidivr
sub
ss
adc
add
ret
loope
das
das
lods
mov
jmp
cmps
fwait
inc
mov
fmulp
xchg
jae
js
rol
sbb
fldenv
mov
push
mov
xor
shl
mov
popa
sar
ss
jbe
aad
mov
push
imul
imul
mov
add
adc
fmul
jg
xor
cmp
inc
jne
fmul
pop
stos
inc
ins
out
push
cwde
aas
inc
lds
xor
pop
xlat
sub
add
popa
or
(bad)
out
mov
shl
fs
js
icebp
add
or
outs
sbb
xchg
out
sahf
jg
rcr
pop
push
xor
sub
in
movs
push
loop
push
sahf
mov
push
xchg
in
pop
icebp
lahf
gs
or
adc
clc
aas
add
push
cld
adc
fwait
clc
in
shl
adc
and
mov
jns
pop
ret
int
pusha
push
jge
(bad)
jne
jmp
imul
fsubp
ss
xor
retf
adc
adc
sar
sub
add
xor
cmp
outs
or
fiadd
mov
or
(bad)
mov
push
stos
mov
inc
adc
xor
je
lods
or
nop
push
repnz
and
sub
sbb
dec
cmp
inc
cdq
imul
push
leave
nop
jg
stos
fsubr
adc
test
xchg
or
aaa
lea
sub
mov
xor
mov
jge
call
add
adc
lahf
push
ds
jl
inc
xlat
adc
iret
movs
cmps
out
add
mov
cmp
xchg
jmp
movs
sbb
movs
gs
loope
data16
mov
mov
dec
imul
inc
ins
cmps
add
inc
mov
adc
xchg
gs
jne
jb
fidiv
popa
jg
cmp
mov
fnstcw
push
mov
(bad)
mov
jo
rcl
(bad)
fwait
mov
xchg
xchg
add
and
jno
fdivrp
inc
adc
jne
(bad)
(bad)
mov
test
mov
sbb
(bad)
dec
mov
dec
lahf
(bad)
daa
or
repz
fsubr
ja
out
fwait
test
push
mov
sbb
dec
sti
mov
pop
or
or
out
dec
call
ficomp
call
call
fadd
movs
scas
and
dec
fldenv
es
jo
pushf
outs
int3
gs
cld
dec
fdivr
jns
lods
cld
mov
sbb
nop
pop
jo
sub
sbb
fldenv
and
lahf
movs
pop
jns
(bad)
ins
gs
shr
loopne
xor
cmp
pushf
mov
ret
or
adc
int3
ret
sub
add
js
and
leave
fidiv
call
push
mov
sub
into
ins
pop
fs
(bad)
mov
sub
retf
jmp
mov
mov
cmp
in
retf
dec
pop
icebp
inc
pushf
push
and
push
inc
xchg
push
imul
mov
icebp
pop
jnp
xor
mov
in
pop
out
xchg
bound
push
adc
scas
pop
hlt
mov
cld
test
call
sub
cs
push
call
adc
pop
jg
sbb
jmp
addr16
out
popa
jnp
xor
xabort
stos
data16
dec
xchg
inc
movs
out
in
sti
(bad)
cmp
dec
mov
push
mov
or
popf
scas
out
lahf
dec
(bad)
mov
mov
xchg
inc
fcomp
jmp
mov
adc
or
mov
sti
mov
sbb
jnp
mov
rcl
jecxz
cwde
movs
clc
test
mov
sub
or
mov
scas
mov
iret
dec
mov
lock
push
fild
cmp
xchg
daa
jecxz
xchg
fistp
cwde
or
out
dec
dec
pop
sti
pop
mov
adc
and
leave
jb
ficomp
lea
add
(bad)
call
cmps
dec
jo
or
loope
dec
test
scas
mov
add
into
neg
cmp
push
mov
mov
les
dec
cli
loop
shl
and
and
repz
inc
and
nop
inc
das
xchg
jne
movs
stos
dec
jmp
cdq
jmp
adc
clc
xchg
xor
push
pop
cmp
sub
add
lock
(bad)
jnp
fdivr
ror
aaa
aaa
or
sub
mov
xor
fwait
push
out
arpl
bound
and
mov
push
and
inc
add
push
push
fmul
mov
adc
or
mov
lock
or
and
dec
inc
sub
pop
sbb
cmps
je
jmp
pop
and
call
cmps
aaa
inc
mov
mov
(bad)
mov
xor
enter
mov
mov
stos
xchg
mov
std
mov
xchg
dec
pop
jns
mov
outs
in
pop
and
jg
inc
cmp
pop
push
mov
test
outs
sahf
xchg
jle
(bad)
clc
ins
inc
mov
mov
dec
in
adc
dec
or
lea
adc
js
mov
push
push
mov
in
pop
xlat
jae
in
cmp
push
icebp
cwde
int
xchg
xchg
xor
xor
push
daa
hlt
dec
and
xor
aas
jmp
xchg
ds
pop
ins
push
sub
push
fwait
sbb
call
inc
push
pop
mov
xor
push
std
std
push
xlat
jbe
rcr
mov
pushf
les
mov
js
dec
cmc
pop
push
cmp
jbe
(bad)
pushf
mov
sub
fiadd
test
sahf
leave
xchg
(bad)
loope
push
clc
mov
jno
cwde
int
xchg
sub
xor
adc
jl
xchg
mov
es
jb
shr
movs
dec
int3
fsub
addr16
fucomp
and
and
inc
shr
push
xchg
aam
fs
lock
dec
and
and
sar
add
loop
pop
pop
mov
mov
pop
adc
mov
lahf
and
bound
jo
push
loop
movnti
outs
test
pop
fadd
gs
mov
add
pop
mov
loope
stc
cwde
cwde
fist
adc
ja
call
dec
ins
sti
dec
cwde
lahf
xor
fadd
xor
arpl
mov
jge
enter
aas
jns
mov
pop
shl
xor
(bad)
(bad)
sbb
pop
and
pop
sub
loop
sti
cdq
retf
mov
sbb
popf
ins
sbb
mov
cmp
xchg
push
cmp
(bad)
lahf
(bad)
fwait
mov
cmp
xor
mov
iret
stos
lock
jns
xor
xor
(bad)
pop
xor
ins
in
(bad)
in
jnp
cmp
std
(bad)
imul
stos
mov
dec
push
and
and
lock
push
jae
mov
aas
test
icebp
push
pop
adc
push
push
adc
push
pusha
jmp
(bad)
mov
and
mov
test
or
xor
push
es
xchg
mov
add
inc
sti
cli
mov
sbb
push
push
push
(bad)
jbe
pop
push
xchg
pop
fld
jae
xchg
and
jo
mov
imul
pop
cmp
(bad)
pop
pop
fild
aam
jne
arpl
xchg
sub
sbb
push
icebp
mov
fwait
mov
jbe
loopne
push
jo
nop
pop
popf
enter
(bad)
out
pop
pop
push
fs
std
xor
cmp
adc
arpl
push
mov
xor
test
inc
pop
mov
lea
jno
adc
fnstenv
mov
js
adc
mov
mov
(bad)
mov
popa
push
pop
aas
movs
in
pop
daa
dec
das
imul
bound
pop
fcomp
or
push
shl
inc
fisub
lahf
jmp
mov
repz
loop
ror
test
push
xchg
outs
xchg
add
(bad)
or
je
jecxz
xchg
clc
jno
(bad)
out
shl
in
cmp
enter
out
in
mov
sub
pushf
pop
add
ds
movlps
push
xchg
mov
xor
jmp
retf
mov
sbb
sub
in
lock
rol
sbb
icebp
push
nop
add
push
sub
lock
push
or
add
loopne
cdq
fs
cmp
and
sub
js
out
scas
pop
or
mov
or
lods
out
nop
ret
xchg
cwde
pop
mov
add
mov
jne
in
test
imul
jb
rcl
test
push
push
sbb
mov
and
mov
sub
int3
xchg
stos
mov
xchg
rcl
(bad)
mov
mov
outs
sub
dec
or
or
movs
jo
mov
cmps
daa
stc
scas
ret
hlt
mov
loopne
add
in
aas
int
call
div
aas
jne
nop
cmp
ret
inc
and
jle
ins
jne
aaa
cmc
push
sub
xchg
mov
push
call
adc
dec
out
jae
sub
loop
call
add
cmps
lds
push
inc
outs
jmp
mov
push
push
push
mov
lods
xrelease
mov
ins
dec
xchg
test
xchg
mov
adc
sub
loop
cmps
ins
ret
aam
jmp
cmp
or
dec
lods
out
and
push
mov
mov
popf
mov
dec
or
es
test
mov
inc
and
fmul
ret
push
push
sub
aad
nop
mov
xchg
sub
in
pop
loope
dec
int
add
mov
fstp
mov
je
enter
std
sub
popa
(bad)
and
sti
fbld
shr
pop
inc
ins
cmp
inc
cmp
xchg
push
dec
jno
imul
mov
sti
xor
dec
movs
xchg
cmc
or
xor
push
cwde
mov
or
test
lods
and
ret
in
(bad)
(bad)
mov
imul
xchg
shl
lea
bound
clc
jle
pusha
fimul
loop
adc
cmp
push
adc
jnp
loopne
or
inc
pop
stos
push
call
popa
sbb
dec
mov
jge
xlat
lahf
mov
push
inc
sub
push
cmp
loop
mov
push
ja
push
push
mov
(bad)
bswap
push
cmps
leave
outs
cmp
daa
lock
adc
ins
in
fnstenv
test
ret
(bad)
retf
fldcw
sbb
sbb
sub
les
cmp
fst
mov
rcr
into
mov
test
stos
mov
mul
(bad)
sbb
sub
add
cmp
mov
bt
push
adc
imul
cdq
dec
xor
dec
(bad)
cmovb
int
xchg
mov
iretw
imul
imul
mov
sbb
mov
xor
inc
jo
cmp
mov
jmp
aaa
cld
push
jge
pop
add
xchg
mov
movs
std
jge
fcmovb
mov
(bad)
mov
arpl
jb
xor
push
adc
add
xor
cmp
mov
outs
es
out
mov
dec
test
in
scas
cmps
neg
outs
jl
push
jge
ins
inc
add
and
movs
push
out
ss
lock
inc
push
sub
pop
xchg
sub
mov
pop
xor
fmul
dec
out
es
ins
mov
push
out
dec
clc
lods
fsub
xor
cli
aaa
scas
rcl
and
fcmove
add
cmp
ja
pop
mov
test
push
aad
data16
cmp
xchg
jle
mov
test
ins
xor
popf
sbb
imul
ret
out
dec
clc
jecxz
cli
and
aad
icebp
mov
mov
repz
into
xchg
jo
xchg
fnsave
scas
mov
popf
arpl
ffreep
add
bnd
pop
sub
mov
test
fs
xchg
adc
ret
and
arpl
add
movups
adc
bound
xor
or
mov
jmp
fisubr
fld
scas
in
inc
xchg
shl
mov
fild
jmp
push
(bad)
pop
adc
movs
add
ret
add
push
xor
cmp
scas
sti
mov
jnp
pushf
dec
mov
adc
shl
push
jle
(bad)
(bad)
loopne
add
mov
jne
rcl
das
jle
jmp
xor
mov
inc
jns
jmp
xlat
(bad)
sbb
pop
lods
inc
jb
fucomi
(bad)
mov
mov
cmp
pusha
ret
dec
je
sub
push
imul
sbb
and
fs
and
add
jle
dec
inc
pushf
inc
dec
ins
push
shl
movs
mov
mov
aad
mov
ja
adc
cli
push
fs
mov
stos
mov
call
sbb
mov
mov
pop
or
outs
mov
retf
mov
cmc
cmp
(bad)
ss
dec
dec
mov
data16
shl
test
inc
cmps
cld
jo
cli
sahf
loope
pop
sub
pop
or
repz
or
sub
sahf
out
cmp
fs
lock
test
popf
mov
dec
bound
aas
inc
jmp
push
fst
(bad)
in
fisttp
imul
fistp
lods
pop
gs
mov
ins
sti
add
xor
inc
(bad)
fwait
shl
and
mov
xchg
icebp
mov
jle
mov
jb
movs
mov
or
xchg
pushf
gs
or
jnp
in
mov
mov
data16
stos
mov
mov
fadd
sti
mov
in
fwait
jne
loopne
pop
dec
push
or
je
pop
in
inc
pop
ins
push
inc
sbb
push
push
dec
jnp
lea
xchg
mov
les
pusha
cmp
jle
popf
xor
pop
dec
dec
dec
xchg
jmp
jmp
imul
jno
push
inc
xchg
fild
mov
(bad)
or
xchg
sbb
fwait
(bad)
mov
jge
cmp
fiadd
add
fsubr
inc
mov
push
(bad)
or
repnz
dec
dec
bound
mov
pop
sub
adc
cmp
cmp
fwait
sar
or
pop
cwde
cli
sub
les
sar
push
xchg
fs
ss
jmp
sahf
movs
sbb
sub
or
loop
mov
jnp
and
adc
xor
or
mov
mov
mov
dec
hlt
fdivr
loopne
dec
mov
cmc
cmc
les
adc
xchg
push
pop
out
mov
int
pop
mov
addr16
or
int
inc
fdivrp
iret
pop
xor
enter
inc
push
or
fldcw
or
mov
sub
ficomp
adc
add
stc
lahf
shr
push
ss
cmp
mov
push
out
js
cmps
pop
icebp
(bad)
sti
fwait
push
leave
lds
cmps
aad
mov
stc
xchg
add
push
cld
xor
ret
inc
mov
(bad)
and
(bad)
ins
in
pop
mov
ror
fild
scas
fisubr
jl
test
out
mov
dec
dec
pop
iret
lods
and
(bad)
xor
jl
and
mov
and
pop
mov
inc
ss
cmp
ror
shl
xor
mov
jae
mov
pop
push
push
mov
xchg
dec
retf
xchg
(bad)
mov
mov
sub
sub
adc
rol
push
or
add
mov
ins
or
(bad)
aaa
adc
into
lods
or
ror
cmp
and
jo
jb
jmp
je
push
pop
add
push
sbb
push
sbb
sbb
rcr
and
int
push
sbb
adc
pop
mov
loopne
mov
cli
leave
repnz
int
in
nop
test
stos
dec
and
retf
push
xchg
cmps
pop
mov
daa
mov
in
(bad)
jp
xor
xchg
sbb
movs
cmp
jne
push
icebp
dec
shl
jmp
aaa
mov
pmulhw
into
aas
add
and
inc
dec
sbb
push
fucomip
pop
outs
sbb
into
or
repz
sbb
movs
pop
mov
dec
pop
xchg
rcl
jns
mov
enter
pop
mov
sbb
mov
xchg
mov
pop
mov
dec
ja
sti
fnsave
scas
rep
sbb
mov
sub
inc
jecxz
sub
cmps
mov
push
ins
push
sbb
cli
and
mov
mov
call
stos
mov
cmp
sub
hlt
fld
mov
mov
imul
outs
sub
retf
rcl
mov
add
lea
or
push
mov
retf
pop
jmp
cwde
or
xchg
sub
mov
mov
mov
adc
movs
stc
lahf
xor
shl
into
mov
fstp
xor
repz
inc
xchg
(bad)
call
xchg
lds
push
mov
leave
cwde
aad
leave
push
cld
adc
pop
test
(bad)
retf
loopne
jne
jae
inc
adc
jb
pop
push
xchg
fistp
mov
sub
sbb
push
mov
push
cmp
inc
jb
pop
mov
mov
cwde
lock
xchg
adc
mov
or
jmp
add
(bad)
(bad)
fisttp
dec
inc
inc
push
mov
into
sbb
mov
add
inc
push
dec
jmp
jecxz
mov
push
xchg
mov
repz
fisubr
(bad)
xor
sbb
mov
jecxz
add
inc
inc
fnstenv
xor
cli
jne
mov
jp
sbb
mov
xor
push
pop
push
pop
mov
or
cmps
ffreep
cwde
cli
jle
loope
ror
add
add
cmp
adc
push
push
push
dec
push
mov
enter
fisttp
jnp
(bad)
pop
out
jp
xchg
mov
retf
pop
dec
xchg
cwde
adc
mov
bnd
or
pop
out
jb
bound
jg
iret
(bad)
bound
(bad)
sti
iret
jle
xchg
jne
je
jmp
add
dec
cmp
inc
out
in
ds
sub
or
or
xchg
sbb
xchg
mov
inc
es
inc
movs
popf
fwait
lods
sbb
mov
and
xchg
inc
(bad)
push
ds
mov
or
mov
outs
int
and
pop
xor
fwait
inc
pop
in
cmp
out
sub
call
lea
or
jns
mov
fstp
cmp
xchg
test
push
fbstp
pop
out
shl
xchg
mov
mov
test
mov
xchg
jmp
jmp
cmp
push
add
push
add
xor
add
jns
mov
cmp
loop
bound
or
jmp
or
add
call
mov
cmp
lods
retf
mov
cli
and
cli
mov
stos
mov
rcl
xchg
mov
xor
inc
ret
adc
mov
adc
pop
in
push
jmp
cmp
lea
ja
add
pop
push
inc
xor
ror
mov
xor
lods
jnp
mov
outs
test
out
add
nop
pop
push
out
icebp
int3
out
pop
xor
pushf
stos
push
out
dec
and
iret
adc
add
lods
cmp
sbb
test
rcl
mov
add
xchg
add
xchg
ss
fucomi
sbb
add
push
sbb
jne
test
xchg
cmps
in
dec
cmc
das
mov
std
dec
icebp
shr
inc
add
sub
gs
pop
movs
int
push
jl
sbb
repz
test
inc
sbb
lods
call
call
sar
inc
in
aam
mov
adc
inc
aas
jnp
mov
push
pushf
daa
push
xor
enter
pop
fsubp
push
and
jecxz
xor
jb
cdq
icebp
int
jnp
bound
pop
inc
jne
mov
out
mov
cli
stc
fdivrp
pop
pop
or
xor
add
pop
test
xchg
push
jbe
pop
lds
xchg
mov
cmp
mov
ret
adc
pushf
push
pop
retf
cmps
xor
rol
cli
dec
sbb
(bad)
mov
mov
iret
jge
mov
lahf
jo
mov
inc
add
fsub
xchg
rol
adc
in
mov
xchg
cmp
aaa
and
xchg
lahf
mov
mov
(bad)
not
or
dec
jae
xor
and
inc
mov
xchg
jnp
cdq
cmp
or
mov
mov
xor
lea
mov
test
adc
out
adc
cmp
test
nop
push
and
ret
icebp
in
ret
sbb
loopne
or
addr16
push
hlt
or
loop
ss
sbb
jmp
(bad)
leave
push
popa
call
cmp
fisubr
pop
mov
xchg
fsubr
push
and
push
jns
in
cwde
(bad)
mov
mov
or
sbb
aas
pusha
stos
pop
in
sub
xchg
xor
enter
inc
sbb
jo
cdq
jae
aam
xor
add
je
les
(bad)
(bad)
ja
cmp
in
das
push
retf
out
ds
leave
pmaddwd
arpl
cmp
aad
sub
cli
pop
sbb
rol
push
inc
pop
mov
jns
adc
loop
adc
lahf
push
inc
add
fs
rcl
fdiv
adc
std
sub
add
jp
(bad)
pop
retf
bound
cdq
movs
out
sub
cmp
mov
test
loopne
mov
addr16
(bad)
mov
ret
js
xlat
xchg
imul
loope
mov
repnz
in
cmp
out
pop
inc
imul
int
adc
call
loop
cmp
adc
jmp
mov
fisub
loopne
jge
stos
(bad)
imul
cwde
inc
jnp
jecxz
icebp
sub
push
data16
pushf
sbb
dec
adc
pop
mov
cmc
fwait
ror
add
add
out
clc
call
aas
sbb
push
xor
jno
stc
cmp
add
or
sub
pop
jnp
cmp
fst
cmp
stc
out
shl
and
or
cmc
inc
xchg
jl
(bad)
scas
aas
arpl
and
push
or
mov
mov
pop
and
dec
mov
sub
pop
dec
into
stc
(bad)
stc
jmp
sbb
mov
inc
pop
sub
cmps
repnz
mov
adc
adc
push
mov
int
test
dec
rcr
popf
mov
mov
data16
sbb
fwait
pop
xlat
(bad)
add
loopne
jg
inc
push
mov
sub
das
pop
adc
cmp
or
(bad)
dec
add
pushf
mov
aas
pop
pop
int3
pop
cld
popa
push
xlat
push
mov
or
cmps
fcomp
jno
push
and
addr16
mov
cmp
lods
pop
pushf
sti
push
jae
sub
mov
or
test
jmp
xor
mov
or
int3
push
in
adc
inc
in
add
out
mov
adc
xor
jmp
imul
add
dec
xlat
call
ret
cli
stos
fsub
jl
rol
fld
in
xchg
dec
mov
pop
jl
cmp
jg
cmp
jmp
adc
imul
mov
ucomiss
add
maxps
fdivr
xlat
jmp
push
jns
mov
xor
xor
ja
inc
and
lods
and
pop
push
sti
xchg
and
mov
mov
out
xchg
es
mov
ins
push
push
mov
dec
fnstcw
outs
stos
scas
jl
mov
mov
mov
leave
rol
mov
fstp
xchg
xlat
dec
inc
es
dec
jmp
icebp
add
adc
fnstcw
bound
and
call
fdiv
es
push
cdq
jno
mov
or
shl
ja
xor
and
inc
xor
push
stc
or
mov
push
mov
or
idiv
aam
mov
xor
mov
jmp
mul
fcompp
inc
mov
retf
cdq
pop
push
in
jle
pusha
xchg
frstorw
xchg
mov
dec
dec
mov
and
xor
push
lea
fld
in
sub
or
mov
test
(bad)
inc
and
ret
in
sbb
clc
add
pusha
lods
ja
lds
daa
lea
mov
jp
sub
mov
push
ret
data16
mov
ja
pop
cmps
stos
pushf
or
in
adc
ret
loopne
test
stos
cmp
push
fstp
das
into
pop
(bad)
sub
pop
push
test
or
dec
push
sub
cmp
ud2
stc
xor
and
cwde
lahf
mov
pop
ins
popf
jnp
aaa
inc
in
jmp
mov
and
adc
or
pop
ret
push
pop
lea
xchg
daa
push
stos
call
ror
dec
xor
jp
mov
in
out
pop
daa
inc
int
adc
and
int
jns
(bad)
push
imul
lods
into
push
fsub
inc
mov
mov
lock
adc
jmp
jge
adc
mov
sbb
dec
aad
mov
inc
rsm
fsubr
pushf
rcl
pop
jb
xchg
fwait
sahf
mov
fyl2xp1
out
loopne
dec
cdq
sar
adc
add
cmp
rcl
xor
out
cmp
push
lods
pop
xchg
loope
aad
mov
mul
xchg
bound
cmovns
out
(bad)
lods
or
sub
lods
(bad)
rcr
pop
test
xor
and
aas
push
cmps
leave
inc
leave
(bad)
xlat
mov
push
cmp
xlat
sub
cmc
in
jle
in
mov
xchg
xchg
jmp
sub
jae
mov
shr
retf
adc
push
push
xchg
aas
mov
add
or
lods
jge
jbe
xor
jl
loope
xchg
sbb
inc
in
pop
in
ficomp
pop
dec
lahf
cmp
les
ja
push
push
out
jmp
adc
pushf
mov
test
cmp
mov
xchg
lahf
cmp
push
cmp
xchg
mov
push
outs
sub
and
fiadd
bound
popf
mov
xchg
xor
mov
add
mov
data16
data16
xchg
scas
add
movs
xor
dec
add
jno
aaa
ja
(bad)
sbb
aam
mov
movs
mov
and
cmp
out
and
jl
fnsave
push
shr
xchg
xor
cwde
pop
mov
fwait
inc
xor
jae
in
div
mov
xor
inc
in
sar
div
cmp
add
and
xchg
cwde
adc
sub
pop
and
data16
pop
clc
xchg
pop
call
or
in
xchg
mov
mov
loop
ror
or
das
add
push
popf
sub
scas
fdiv
mov
shl
dec
mov
add
(bad)
add
push
xor
mov
adc
lods
shl
ret
int3
pop
pop
pop
sahf
inc
push
aas
pushf
and
sbb
arpl
dec
pop
out
sub
mov
or
(bad)
mov
mov
(bad)
fdiv
imul
dec
pushf
sbb
push
pop
inc
aad
retf
jmp
sahf
ret
call
sti
ins
cmp
xchg
mov
int3
in
push
jo
fisttp
push
push
cmc
xor
push
xor
cmps
lock
mov
mov
out
jmp
mov
cmps
jmp
ds
int3
test
push
bound
jl
cmps
in
fdivr
in
into
ret
cwde
daa
mov
movs
sar
cli
cmp
cwde
retf
movs
jmp
adc
mov
arpl
jecxz
push
xor
jge
gs
fnstsw
fs
das
sbb
lods
sbb
pop
adc
aas
ret
fwait
fs
stos
pop
xchg
lea
adc
xchg
imul
mov
hlt
das
popa
adc
sub
clc
adc
rcl
stos
adc
das
mov
sub
sar
outs
push
pop
push
inc
rcr
out
ret
jnp
pop
test
outs
hlt
mov
or
jo
cmp
push
mov
jne
pop
xchg
add
addr16
dec
clc
pop
add
outs
aaa
mov
jge
push
mov
xchg
dec
fcomp
cwde
pop
jns
ror
or
sub
scas
jmp
xor
iret
mov
adc
add
mov
ins
data16
dec
out
mov
rcr
in
inc
mov
jecxz
call
jl
and
sar
ret
dec
scas
imul
jle
xchg
sbb
push
arpl
mov
(bad)
daa
xchg
retf
jbe
test
xchg
outs
jmp
test
dec
cld
xchg
enter
mov
clc
sbb
data16
cld
xchg
in
out
mov
pop
lock
dec
inc
lock
adc
or
jae
call
imul
fldcw
push
sti
cmp
xor
mov
mov
inc
push
out
jns
push
js
data16
xor
cli
addr16
jl
mov
stos
add
ficomp
sbb
lds
mov
call
dec
jne
inc
mov
inc
push
iret
in
fwait
cdq
les
adc
call
pop
cwde
inc
inc
pop
adc
add
test
push
push
and
push
xor
daa
nop
push
movs
cmp
std
adc
push
jmp
test
mov
or
retf
mov
cs
mov
ja
aaa
pextrw
outs
mov
push
mov
cmps
adc
shl
mov
stos
pop
jle
cmp
sbb
jmp
daa
mov
outs
inc
pop
jne
pushf
(bad)
cdq
js
dec
aam
sub
leave
jb
pop
(bad)
(bad)
cmps
cmc
cdq
sbb
adc
cld
pop
repz
repz
sahf
in
jge
stos
mov
pusha
iret
mov
smsw
and
push
mov
cs
je
mov
(bad)
and
lahf
cmps
cmp
gs
ds
fisubr
imul
sub
pop
test
ret
dec
(bad)
stc
out
test
lock
and
sbb
scas
mov
add
jne
xlat
adc
xor
fwait
imul
and
adc
imul
fldenv
aas
and
xor
sbb
mov
mov
jne
out
aaa
call
mov
test
adc
ret
leave
cmps
ins
sub
inc
cs
pop
aas
mov
add
push
das
or
xor
cmp
sahf
movs
push
push
(bad)
sbb
aad
pusha
pop
(bad)
retf
sar
int
jmp
mov
push
scas
or
mov
pop
mov
dec
mov
addr16
push
jns
not
hlt
mov
fisttp
pushf
mov
in
dec
popa
xchg
cmps
ins
shl
popa
mov
or
(bad)
pop
push
push
add
cmp
jl
mov
or
mov
sbb
shl
inc
(bad)
add
int3
cmp
push
inc
push
mov
jecxz
mov
xor
adc
and
fs
rcr
in
xchg
stos
out
and
pop
loope
xchg
(bad)
test
mov
dec
dec
ret
or
sbb
push
and
pusha
jp
jne
and
sub
das
ss
loop
aaa
sahf
pop
movs
fs
ds
aaa
adc
mov
dec
aad
les
sub
add
mov
xor
dec
pusha
fsub
pop
jmp
inc
pop
inc
cmp
add
popf
icebp
pushf
mov
lahf
std
dec
add
adc
repz
ror
or
sti
iret
enter
out
mov
shr
test
jae
(bad)
sub
mov
or
jmp
xlat
cmp
sbb
test
enter
cmc
xchg
shr
xchg
movs
push
enter
inc
call
xchg
dec
cmp
test
loope
mov
jg
push
mov
aaa
adc
cs
js
pop
pop
xchg
pusha
aas
scas
mov
push
mov
sub
ins
xor
mov
inc
pop
mov
stos
mov
jle
and
pop
add
mov
add
mov
xor
jno
pop
test
mov
sub
mov
imul
mov
add
or
ret
aas
in
mov
mov
inc
sub
(bad)
mov
movs
sbb
cmps
xchg
jns
pop
or
sbb
adc
clc
and
(bad)
jp
cwde
icebp
scas
out
out
or
inc
jl
xchg
dec
test
mov
into
xor
xor
adc
mov
add
mov
xchg
ret
push
pop
enter
movs
adc
loopne
test
push
and
call
enter
or
pop
jmp
or
pop
mov
mov
das
sti
shl
or
lods
out
and
(bad)
sbb
mov
pop
shl
cwde
loop
mov
and
icebp
adc
xchg
imul
es
mov
shl
mov
mov
xchg
cdq
inc
pop
mov
dec
pop
js
lock
cmp
cmps
jns
jae
adc
cmps
mov
test
or
dec
call
fmul
test
repz
jge
sbb
call
jg
mov
test
or
sub
in
ins
dec
add
push
pop
jbe
das
retf
sub
in
(bad)
icebp
cmps
lds
push
add
inc
loopne
xchg
out
mov
mov
scas
push
push
pop
rol
adc
fwait
sbb
jbe
ja
dec
gs
pusha
mov
rcl
aaa
scas
jne
mov
arpl
jmp
cmps
cmp
add
pop
pop
xlat
mov
adc
mov
ret
dec
sbb
jno
or
and
mov
ss
cmp
arpl
cwde
hlt
adc
pop
ret
les
pop
sbb
popf
jp
or
adc
sub
mov
idiv
or
push
fptan
(bad)
lahf
mov
inc
sub
fsub
jbe
jmp
icebp
or
xchg
jmp
stos
sar
aaa
icebp
repz
dec
cdq
fwait
mov
jmp
pop
(bad)
xor
sti
or
add
(bad)
iret
inc
fdivr
in
lahf
je
stos
das
dec
xchg
aad
sbb
mov
pop
or
sbb
inc
mov
in
test
fnstcw
or
and
jle
pop
aam
mov
loope
xor
sbb
cmp
int3
loop
xchg
repnz
xor
dec
stos
es
into
push
(bad)
push
mov
lahf
or
mov
inc
push
sbb
push
add
ret
push
or
test
cmp
fwait
aaa
test
xchg
cmp
and
or
jg
mov
mov
jbe
mov
(bad)
fst
dec
int
loop
add
fdiv
rol
scas
adc
mov
movs
xor
loopne
cmp
nop
aas
test
es
mov
xor
inc
jmp
push
mov
daa
shl
rcr
jnp
xchg
push
outs
jne
mov
jne
cdq
or
push
xor
mov
push
or
stc
fld
mov
push
mov
lods
push
mov
add
js
sbb
xchg
mov
rcr
xchg
dec
je
lock
icebp
icebp
fiadd
loope
mov
sbb
lock
dec
mov
adc
push
xchg
or
lock
or
rcl
icebp
mov
(bad)
mov
jmp
(bad)
sbb
lahf
add
xchg
call
jbe
or
xor
cdq
push
sbb
(bad)
xlat
jg
mov
cmp
jbe
jle
nop
pop
pop
repnz
clc
adc
aas
push
fs
or
jg
dec
mov
push
fistp
xchg
adc
stos
dec
xchg
mov
sahf
sbb
lods
add
lods
into
aam
clc
ret
sub
sbb
jmp
lds
aas
sbb
(bad)
add
mov
dec
ret
mov
movs
xor
test
inc
pop
movs
dec
stc
sbb
pop
xchg
sub
push
cmp
imul
xor
sub
retf
cmp
loope
mov
shl
mov
or
aam
sbb
mov
xchg
nop
repz
je
call
and
shr
lods
js
inc
jbe
das
scas
es
add
pop
push
inc
imul
jb
xchg
cmp
xchg
and
int
call
sbb
jecxz
add
ds
xchg
mov
sbb
xchg
lds
adc
inc
xor
icebp
rcr
add
imul
leave
lods
push
inc
or
pop
add
mov
or
repnz
mov
cmp
rol
push
movs
sub
pop
pop
push
and
loope
add
jecxz
adc
add
test
cmp
inc
pop
fist
std
pop
inc
fwait
or
jp
mov
imul
mov
sub
retf
in
push
xchg
push
mov
mul
push
jl
pop
daa
in
push
test
pop
xor
je
xor
inc
out
outs
dec
pop
push
das
cwde
ins
xlat
cli
outs
test
test
adc
or
inc
in
ror
cmp
cmp
in
ss
loopne
jle
outs
xchg
inc
mov
inc
mov
iret
pop
mov
(bad)
jp
test
push
push
sub
push
sub
ds
sub
jecxz
(bad)
aad
jnp
inc
pop
f2xm1
div
es
lods
repz
sub
into
push
shl
inc
mov
push
leave
xlat
jmp
and
mov
fstp
xchg
push
inc
xchg
push
inc
rol
adc
sbb
sbb
dec
or
or
arpl
stc
ja
push
jl
in
mov
rcl
lods
and
into
out
pop
mov
adc
push
jbe
push
ret
(bad)
push
sub
and
(bad)
mov
jp
add
and
sub
data16
add
ja
mov
pop
fwait
push
into
jecxz
dec
pusha
loope
xchg
xchg
data16
sbb
(bad)
gs
mov
out
sbb
leave
dec
shl
add
push
test
adc
lea
mov
jae
sub
cmps
and
add
xor
push
jbe
inc
into
inc
adc
ja
das
sub
adc
loop
fs
inc
shl
test
ins
test
xchg
jnp
sub
inc
in
std
retf
movs
mov
call
jnp
test
mov
push
mov
pop
out
jg
xor
nop
jne
imul
add
ret
(bad)
ins
(bad)
mov
test
sbb
xor
xchg
lock
enter
pop
clc
lock
xchg
cmp
mov
gs
lds
xor
das
jnp
jle
lock
sub
or
enter
or
mov
mov
sub
ficomp
jg
(bad)
xor
stc
push
push
and
add
icebp
pop
repz
stos
aas
jl
scas
push
cld
loope
pop
xchg
hlt
nop
test
sub
add
push
mov
shl
stc
lock
add
cmp
and
jne
sub
pop
pushf
push
pop
cmps
enter
lahf
or
add
(bad)
fistp
pop
cdq
cmp
mov
jle
and
push
test
into
push
pop
xchg
cld
mov
popa
mov
mov
dec
mov
repz
fadd
cmp
cld
ins
mov
aas
mov
(bad)
mov
push
ret
cmps
movs
xor
inc
pop
jg
cmp
(bad)
sub
cdq
rol
lods
mov
in
js
adc
jmp
jge
sub
icebp
mov
push
fnstsw
xor
je
ss
fbld
jmp
push
out
dec
dec
mov
int
adc
sub
sub
push
jae
clc
dec
(bad)
sub
cld
inc
sbb
cli
loope
clc
add
mov
icebp
sbb
xor
rol
lock
mov
daa
fwait
adc
pop
add
pushf
inc
lsl
(bad)
iret
fucomp
imul
dec
into
mov
or
fldenv
arpl
dec
inc
lea
jl
enter
popa
gs
ja
xchg
sub
call
push
or
movs
adc
cmp
fimul
repz
mov
(bad)
xchg
mov
mov
push
in
sbb
ret
fcmovnu
gs
out
mov
mov
sbb
and
pop
aam
div
cdq
mov
je
ret
mov
into
cdq
cli
das
stc
outs
mov
push
mov
int3
shl
loopne
cmc
mov
mov
sub
and
dec
cmp
(bad)
jmp
mov
push
psrlq
xor
aad
sti
mov
adc
arpl
cmp
fmul
cmps
sub
jp
fwait
hlt
pop
test
pop
sub
sub
stos
ror
xchg
mov
ret
nop
ror
xchg
pop
add
dec
or
sbb
jge
enter
(bad)
mov
neg
pop
sub
inc
inc
cmp
xor
(bad)
icebp
jl
push
xor
aad
push
push
cs
mov
fwait
out
loopne
es
jecxz
inc
mov
ss
scas
inc
cmp
inc
mov
sbb
bound
ret
push
stc
add
leave
mov
cmps
mov
sbb
pop
loope
mov
ror
in
shl
aaa
push
nop
fdivr
ret
inc
pop
jp
inc
or
or
or
mov
daa
cmp
ins
cmp
adc
mov
push
loopne
call
xchg
xor
push
data16
push
sbb
call
pop
gs
push
dec
pop
jle
mov
mov
loope
push
in
test
and
mov
imul
ret
jns
xchg
dec
gs
push
call
mov
jmp
mov
std
lods
fnstenv
dec
gs
outs
scas
ss
sub
fs
call
inc
xchg
inc
cld
cs
retf
pop
dec
xchg
xor
(bad)
jmp
call
mov
mov
xor
mov
and
push
or
in
pop
das
and
push
and
outs
pop
or
cmp
xchg
ss
ret
imul
in
push
test
outs
mov
data16
dec
jae
mov
xchg
mov
(bad)
cmc
outs
pop
jae
loope
xchg
lock
adc
adc
loope
fucom
cmp
lods
push
cmps
lds
sbb
xchg
ror
inc
cld
or
js
jl
xchg
pop
mov
out
sahf
pop
aas
fisubr
lock
clc
sahf
pusha
sbb
fs
(bad)
in
sbb
(bad)
inc
repz
cmps
repz
mov
jbe
xor
mov
sub
iret
xchg
jo
or
sbb
jmp
shl
mov
mov
adc
cmp
jecxz
fistp
stos
stos
rcl
add
add
mov
jg
or
out
call
push
scas
aam
repnz
or
ss
inc
fist
call
sti
cmp
push
adc
movs
pop
push
aaa
fidivr
imul
retf
movs
pusha
sbb
pop
cmp
or
shl
dec
or
add
cmps
push
xchg
sbb
dec
lods
call
pop
cmc
xor
cwde
pop
mov
adc
imul
(bad)
iret
or
ret
xchg
cmp
mov
pop
xchg
push
mov
mov
push
mov
mov
std
xchg
push
mov
lea
mov
inc
fnstcw
sbb
adc
cmp
push
enter
xchg
je
sub
pop
mov
mov
push
int
je
xchg
sbb
(bad)
retf
and
pushf
sub
mov
jne
push
cmp
loope
jmp
test
fs
ror
mov
es
mov
enter
call
int
out
cmp
dec
nop
jmp
iret
xor
stos
push
fidiv
xchg
pop
add
aad
in
cmp
shl
movs
leave
dec
into
dec
out
mov
sub
or
repz
ins
neg
mov
mov
fstp
pop
jnp
inc
daa
loop
rcr
pop
les
push
push
sub
pop
mov
js
shr
mov
push
jl
(bad)
cmp
and
mov
sbb
xchg
lahf
xchg
mov
and
mov
sti
sub
loope
(bad)
inc
xchg
(bad)
out
mov
xchg
pop
mov
es
jmp
dec
mov
jmp
aaa
mov
inc
sbb
mov
loope
mov
shr
pop
dec
clc
fcom
inc
push
xchg
shl
out
icebp
out
(bad)
sbb
xchg
jg
fucom
jmp
stos
shr
mov
aad
mov
xchg
ret
or
ds
and
xor
cmp
(bad)
loope
pop
fld
cs
in
add
add
aam
out
dec
pop
iret
mov
xchg
pop
xchg
xor
dec
aaa
movs
ficomp
cli
lods
ss
pop
imul
add
ja
pop
sbb
pop
data16
inc
or
fs
sahf
dec
cmp
xor
pop
jbe
inc
xchg
jo
out
xchg
add
in
sbb
fimul
(bad)
inc
mov
jne
xor
popf
mov
imul
push
test
sub
jle
cmp
aad
and
xchg
xor
cmp
add
pop
test
int3
std
sbb
imul
(bad)
in
sar
push
push
inc
xchg
shl
xchg
xchg
leave
and
jmp
outs
jb
mov
mov
ins
cs
out
jp
nop
dec
or
cmp
mov
out
sbb
hlt
dec
adc
xor
jno
je
mov
mov
call
(bad)
mov
enter
add
add
xchg
jg
mov
and
jne
mov
jge
xchg
bound
ja
outs
lock
dec
mov
lock
ins
ror
dec
loopne
xchg
arpl
xchg
es
ins
call
xchg
imul
add
lea
retf
xor
ins
add
mov
jge
sbb
inc
loopne
aas
sub
jbe
dec
mov
sbb
pop
cwde
or
mov
mov
add
fwait
cmps
(bad)
clc
jne
inc
jecxz
inc
and
out
pop
ret
jae
lea
pop
imul
aad
or
daa
call
xchg
enter
xor
mov
sbb
cld
jns
ret
xchg
pushf
int3
xor
inc
pop
fistp
sbb
mov
sub
and
sti
fsub
(bad)
push
add
bound
or
loope
(bad)
dec
cmp
or
sub
xchg
or
in
and
pop
xchg
leave
out
adc
fcmovu
and
xor
retf
lahf
add
sti
and
cmps
popf
xchg
or
adc
adc
loopne
mov
pop
xor
jle
les
mov
or
adc
out
mov
jge
(bad)
pop
inc
mov
jo
cmp
loopne
sbb
call
jmp
int
mov
inc
jnp
adc
xchg
mov
dec
xchg
(bad)
sbb
cmp
adc
lahf
(bad)
stos
inc
stos
mov
retf
rcl
inc
test
jp
imul
repnz
pop
mov
jnp
into
and
test
int3
adc
rcl
jbe
cs
fmul
into
loope
mov
dec
in
sbb
lds
ja
push
sub
lea
outs
xor
push
repnz
stos
dec
pop
xchg
bnd
sbb
cld
inc
mov
cmps
pop
mov
das
mov
lods
jmp
lds
sbb
je
inc
mov
dec
xchg
lea
sbb
es
add
into
pop
and
into
pusha
aad
mov
(bad)
mov
mov
ins
push
into
xchg
mov
ds
aad
lahf
fcom
add
in
(bad)
frstor
call
mov
js
xor
int
popa
xor
add
popf
jge
sbb
imul
mov
sub
jnp
push
arpl
in
fsub
and
repnz
xor
sbb
in
dec
cmc
lods
sub
jecxz
call
loope
test
xor
xlat
add
ds
(bad)
mov
push
jbe
xchg
xor
ret
sbb
iret
sar
add
dec
cmp
in
add
add
mov
xchg
xchg
pop
pop
jo
lods
imul
adc
ror
dec
popa
(bad)
lods
dec
in
jae
(bad)
loop
dec
lea
jl
jle
dec
or
dec
les
cli
mov
fidivr
inc
shl
lods
fcom
cmp
dec
push
aad
mov
(bad)
mov
xchg
stc
out
cmp
adc
cs
(bad)
aas
xchg
aam
sbb
and
rcr
mov
js
jae
add
mov
jbe
lahf
pop
adc
cld
in
ss
xor
dec
cwde
jl
stos
jecxz
xchg
sub
inc
cmp
jnp
repnz
fisttp
inc
sbb
loopne
adc
cmp
inc
mov
inc
cli
push
movs
sbb
adc
icebp
loope
inc
cmp
sbb
mov
pop
sub
xchg
aaa
mov
xchg
inc
js
or
adc
out
ror
mov
inc
inc
pop
sub
jl
dec
(bad)
xor
fwait
push
cmp
push
dec
fcom
jo
mov
adc
fstp
push
mov
mov
adc
push
xchg
or
and
sbb
push
retf
dec
fdivr
ss
mov
jg
push
cwde
daa
rol
mov
cmp
out
shr
lock
pop
je
fwait
adc
es
xor
sub
inc
scas
jbe
dec
and
cmps
cmps
and
sbb
inc
ins
mov
aad
gs
cmp
jp
and
movs
dec
add
adc
xchg
cli
or
sub
cmp
vmwrite
movs
add
movs
iret
mov
mov
adc
push
imul
shl
sbb
out
cli
call
fsub
cmp
pop
scas
sbb
out
push
mov
cmp
cmp
or
nop
sbb
test
jne
(bad)
sbb
jb
das
inc
neg
mov
into
and
ins
arpl
inc
xchg
fisub
loop
loop
es
(bad)
clc
lds
lock
dec
cmps
sti
stc
sub
cmp
mov
jne
cmp
push
inc
jno
adc
sbb
sub
sbb
cmp
push
sbb
sbb
mov
arpl
sbb
arpl
pushf
icebp
sbb
data16
rol
or
adc
dec
mov
and
je
cmp
push
popf
or
je
pop
out
or
lods
push
fs
push
xor
dec
aas
jae
test
std
ja
lea
es
daa
out
mov
sub
test
and
pop
test
xchg
dec
cli
mov
call
pop
js
imul
sub
jmp
xchg
dec
repz
mov
iret
(bad)
fdiv
mov
aas
pop
jo
xchg
sub
mov
sbb
in
xchg
ins
ret
mov
ds
xor
inc
outs
fisub
popa
rcl
out
je
mov
push
sbb
push
xor
adc
mov
adc
out
movs
pusha
pop
cs
mov
movs
test
jle
cmp
cmc
inc
in
push
mov
scas
mov
ds
mov
jecxz
mov
xchg
js
test
adc
dec
pusha
pop
xchg
cmp
mov
xchg
inc
pop
(bad)
xchg
adc
retf
retf
push
push
xchg
fwait
or
and
sbb
fbld
and
dec
test
sbb
rcl
jl
sub
sbb
xchg
or
fs
xchg
fucom
jl
hlt
sub
mov
dec
div
or
xor
js
mov
leave
call
stc
aad
sbb
cmp
popf
or
add
mov
push
jmp
xchg
inc
shl
pop
sbb
and
lahf
adc
adc
mov
cmp
mov
pop
jl
aad
cmps
stos
add
mov
neg
push
cmp
inc
stos
pop
sbb
or
mov
inc
mov
jg
mov
retf
mov
mov
pop
ins
cmp
fcmovu
add
in
adc
sbb
jns
xor
cdq
xor
loope
hlt
out
sub
jae
sub
lahf
xor
gs
cmp
push
and
mov
ret
inc
cs
out
cmp
pop
sbb
ret
mov
cs
mov
xor
inc
sub
add
shr
sbb
fadd
cwde
dec
(bad)
out
rol
mov
in
call
ret
js
(bad)
xor
out
or
or
xor
cmp
fstp
inc
jg
repz
cmp
ret
enter
xor
inc
outs
sahf
jne
sbb
push
sub
popa
dec
mov
dec
pop
ds
call
or
(bad)
dec
cmp
inc
(bad)
lds
adc
mov
ret
(bad)
lods
sub
push
mov
retf
lahf
scas
sub
sub
in
pop
mov
inc
jmp
stc
inc
lods
or
cmp
lds
loop
shl
retf
add
inc
and
mov
push
sahf
js
iret
cmp
inc
inc
add
and
inc
test
or
and
jno
add
dec
pop
fs
mov
in
cmp
add
and
iret
(bad)
push
shl
push
gs
mov
(bad)
mov
sbb
push
jno
inc
inc
or
aaa
or
test
ins
sbb
pop
pop
leave
daa
jl
cmp
inc
mov
cmp
sahf
nop
test
dec
mov
and
test
push
stc
mov
sub
je
inc
push
push
in
not
inc
and
pushf
cdq
(bad)
jno
mov
mov
mov
jo
mov
shl
xchg
leave
dec
arpl
cmc
es
adc
je
jge
fbstp
push
cdq
fs
mov
aam
adc
or
scas
(bad)
adc
jle
fist
test
test
or
test
stos
pop
pop
adc
lea
xchg
and
stos
pop
cs
lods
dec
cmps
gs
lods
jmp
and
ss
shl
inc
cmp
cli
fcomp
lods
(bad)
into
ds
ins
xchg
add
imul
adc
mov
xor
jae
lds
pop
je
or
and
fidiv
imul
test
aas
stos
add
sbb
push
xchg
pop
fist
dec
pop
lds
loopne
aad
enter
cs
pop
xchg
lds
imul
icebp
fwait
mov
clc
pop
stc
das
xchg
or
retf
push
lds
pop
daa
in
mov
lods
mov
outs
push
adc
sahf
jmp
test
mov
pmaddwd
pop
rcr
mov
(bad)
mov
mov
jae
and
sbb
cmp
add
ffree
pop
add
ss
scas
mov
in
sbb
add
and
imul
call
mov
and
xchg
push
mov
enter
lock
mov
push
popf
popa
pop
fsub
mov
ds
cmp
or
cli
cmp
mov
pop
cmps
jmp
xchg
in
imul
popf
or
ds
mov
jns
js
fisubr
ja
mov
push
daa
or
pop
repnz
into
lods
out
lds
mov
and
in
mov
pop
test
push
(bad)
inc
add
xchg
retf
ret
imul
xchg
jle
fcom
adc
test
call
adc
xchg
stos
pusha
aaa
fnstcw
adc
inc
push
mov
(bad)
or
gs
pushf
fidivr
jg
loopne
adc
fcom
jae
sub
pop
xor
jp
lods
dec
int
fwait
imul
jecxz
mov
mov
xchg
(bad)
mov
adc
dec
and
lahf
mov
mov
icebp
cmp
imul
dec
call
cmp
leave
jmp
iret
or
scas
pop
idiv
sub
pop
dec
icebp
ins
xchg
out
mov
in
int3
adc
and
sbb
out
or
mov
popf
(bad)
mov
fs
xchg
jnp
call
fistp
clc
mov
xchg
scas
and
add
jo
inc
int3
xor
popa
jg
(bad)
movs
out
xchg
cwde
or
mov
ja
pop
lods
inc
in
mov
push
mov
(bad)
and
jle
daa
scas
inc
cmps
xorps
es
aad
imul
stos
enter
aaa
(bad)
push
push
in
dec
pop
push
jae
shl
sub
inc
or
scas
aas
jle
lea
jl
addr16
(bad)
(bad)
in
or
sub
sbb
sub
test
leave
ja
xchg
sub
dec
mov
cmc
leave
in
mov
shl
inc
adc
sub
retf
test
imul
xor
push
jo
jns
mov
and
jmp
gs
movs
adc
adc
ror
jo
loop
imul
ins
aam
aas
ja
ss
out
lahf
repnz
or
inc
xlat
cld
ja
dec
pop
push
inc
or
dec
mov
(bad)
div
loop
add
inc
(bad)
outs
add
call
jg
loop
pop
xchg
push
cmps
xor
add
jecxz
leave
ja
jge
mov
fisub
add
xchg
int
retf
cmp
hlt
out
jno
je
adc
cmp
inc
dec
push
stos
push
sbb
fst
lods
(bad)
jp
out
add
mov
ret
loopne
(bad)
repnz
sub
cs
cmp
pop
dec
bound
jmp
cmp
cmp
sbb
pop
pushf
adc
ins
imul
(bad)
xor
mov
(bad)
xchg
or
nop
imul
clc
leave
popf
iret
iret
fcom
js
adc
pop
xor
pop
fistp
add
mov
cmp
dec
sti
pop
mov
mov
(bad)
ins
dec
sbb
mov
lods
push
in
outs
loopne
pop
aam
jb
movs
sub
mov
adc
pop
inc
pop
jmp
push
div
mov
cmp
jne
out
imul
nop
mov
xchg
mov
ret
cmp
sub
pop
shr
mov
ds
fs
ficomp
xchg
lea
xor
clc
out
je
mov
mov
sub
inc
jno
mul
jmp
fist
add
and
cs
jmp
xor
xchg
add
push
ja
fldcw
cmp
or
and
adc
inc
popf
inc
mov
data16
ja
mov
adc
shl
push
cmps
pop
jg
adc
addr16
test
hlt
or
mov
ror
(bad)
cmp
sbb
cmp
xor
cwde
cmc
adc
repz
movs
pop
xchg
xor
adc
jmp
or
dec
gs
in
stc
and
dec
mov
inc
in
pop
test
add
scas
add
ret
adc
mov
sbb
push
sub
mov
sbb
mov
jne
js
fldenv
and
vsubsd
mov
cmp
or
movs
int
int
fistp
xor
mov
jnp
mov
test
push
dec
sar
mov
imul
data16
call
lock
jnp
xor
xchg
out
stos
adc
mov
(bad)
add
inc
dec
jo
push
cmp
scas
outs
mov
push
cli
jnp
pop
jl
inc
aam
sbb
ins
inc
mov
ret
inc
dec
and
jmp
sbb
sub
and
icebp
cwde
push
in
and
dec
les
cmc
jno
xor
and
adc
mov
call
inc
popf
sub
sub
scas
xchg
ja
into
xchg
data16
shl
into
mov
(bad)
mov
rcl
ds
jb
les
mul
dec
push
fdivrp
mov
sbb
shl
stc
add
(bad)
lods
(bad)
ficom
cmp
push
arpl
aaa
add
add
daa
adc
add
scas
and
mov
push
int
popa
cwde
mov
(bad)
imul
or
mov
jg
sbb
f2xm1
ret
shr
dec
iret
and
dec
inc
imul
mov
sar
jp
inc
idiv
jns
es
adc
mov
xchg
dec
push
dec
push
mov
or
push
stc
inc
cwde
push
pop
iret
xor
and
cmp
sub
movs
(bad)
jecxz
adc
leave
push
loope
pop
cmps
scas
inc
dec
aam
enter
(bad)
xchg
dec
inc
push
inc
mov
sti
out
(bad)
scas
dec
dec
push
mov
pop
ss
inc
cmc
sub
xor
(bad)
repz
scas
fcmovnu
mov
in
lahf
cmps
cdq
xor
dec
mov
in
ret
push
and
(bad)
sub
xchg
xor
jno
in
stos
fcomp
addr16
inc
mov
pop
das
add
push
sub
xchg
fbld
loope
mov
es
sti
or
ja
inc
or
xor
pop
(bad)
push
sub
daa
repnz
iret
jg
pop
dec
push
xchg
out
mov
jmp
pop
mov
jnp
movs
mov
aaa
and
iret
pop
in
xor
bound
pop
pop
mov
add
movs
mov
imul
out
xor
(bad)
sub
rol
inc
xchg
adc
js
jo
fxam
push
inc
pop
shl
xor
sub
or
adc
sub
cli
inc
or
outs
test
outs
repnz
int3
jge
gs
call
push
fldcw
pop
jb
imul
pop
inc
in
or
movs
and
ret
pop
pop
mov
cs
js
adc
int
adc
arpl
ins
xor
push
inc
or
sub
je
add
scas
pushf
inc
dec
(bad)
out
movs
fmul
ret
xchg
fcomp
cmc
sub
push
mov
adc
mov
ja
cmps
pop
jns
or
enter
jecxz
out
sub
sbb
adc
mov
jne
sub
ins
adc
adc
adc
sub
out
leave
sub
inc
in
dec
ins
imul
loop
adc
inc
cmp
pop
dec
cmp
inc
lock
js
lods
sbb
sbb
enter
int3
xor
scas
shl
ja
mov
cmps
addr16
mov
setb
cwde
ror
pop
jmp
cdq
mov
push
js
jecxz
stos
pop
jbe
dec
imul
and
out
xchg
pop
ds
inc
in
(bad)
mov
push
int3
sbb
cmp
add
xor
xchg
out
adc
pop
lahf
mov
push
shr
or
jno
xor
pop
bound
cmps
fist
movs
push
mov
or
sub
mov
xchg
jne
test
push
cmp
stos
cmp
aad
or
and
jp
in
adc
das
mov
and
jl
pop
push
fnstcw
xchg
out
mov
push
pop
bnd
jb
test
pop
lahf
lea
xor
sub
ds
mov
addr16
mov
push
sub
xor
hlt
sub
mov
je
push
popf
pop
cmp
add
jns
inc
lea
addr16
xchg
fmul
rol
sub
in
mov
xchg
ins
xor
fucomp
fwait
or
xchg
aas
mov
in
adc
lahf
fwait
mov
sbb
sbb
in
outs
aad
sbb
xchg
add
loope
push
stos
jbe
mov
cmps
and
xchg
mov
scas
jge
daa
xchg
addr16
xchg
rcr
sub
jns
icebp
sbb
and
call
add
dec
jns
icebp
mov
stos
inc
(bad)
or
mov
xor
ret
shl
std
test
pop
xor
dec
test
lds
xlat
mov
shr
mov
xchg
adc
adc
rol
and
cmc
js
cmc
xchg
fwait
mov
lea
cmp
fstp
mov
xchg
push
inc
sbb
test
pop
and
ficom
jo
test
(bad)
mov
push
pop
mov
and
adc
mov
enter
mov
loop
or
xchg
push
xchg
or
push
mov
sub
mov
mov
repz
mov
loopne
sbb
cmp
js
lahf
shl
adc
repnz
xlat
push
push
inc
jle
mov
adc
repz
xchg
pop
sbb
pop
fcmovnb
stos
and
stos
lods
inc
lock
adc
ins
sub
cdq
out
jl
jge
imul
pop
xchg
adc
xchg
arpl
movs
xor
adc
aas
add
mov
mov
xor
mov
adc
jns
xchg
ss
imul
je
movs
cmp
sbb
xchg
cs
sti
loopne
pop
jmp
lods
and
push
mov
fistp
fbld
adc
sti
xchg
push
push
adc
lea
fcomp
sar
int3
(bad)
mov
adc
fisub
xchg
fcomp
dec
out
outs
mov
mov
sbb
mov
mov
ror
sbb
test
dec
retf
mov
movs
pop
mov
push
in
cmp
aam
cli
mov
add
jae
mov
jl
xor
outs
cmc
into
out
cmc
cmp
pop
jmp
mov
jmp
popf
sbb
xor
push
in
and
push
data16
(bad)
cmp
jne
call
sbb
pop
lods
pop
rcl
ja
xchg
and
loope
jmp
stc
sub
mul
pop
mov
and
popf
add
lock
xchg
(bad)
mov
fnsave
adc
jg
mov
into
loopne
add
rol
arpl
xchg
cmp
outs
lock
mov
gs
cmps
(bad)
cmps
jl
inc
test
cmp
retf
pop
aam
daa
or
call
popa
pop
fisub
jg
enter
int
adc
xlat
cmp
sbb
aam
mov
inc
add
xchg
sbb
or
rcl
ror
fs
cmps
mov
mov
je
fisub
cdq
cmc
aam
and
popa
adc
imul
add
jl
dec
aam
pop
mov
add
int3
loop
add
add
push
or
ins
or
daa
adc
retf
jbe
js
scas
pop
aad
leave
add
mov
fwait
(bad)
xchg
push
xor
mov
popf
movs
add
stos
pop
jne
rol
or
aad
lock
cmp
adc
mov
jmp
inc
dec
repnz
xor
push
sub
cwde
and
jmp
sub
data16
clc
or
imul
ss
in
jmp
arpl
pop
or
fisttp
adc
or
jae
jecxz
loopne
and
sar
inc
or
test
int3
fstp
mov
adc
ins
aad
or
pop
dec
repnz
push
rcr
xor
xchg
loopne
jle
jbe
and
dec
in
mov
aaa
dec
gs
rol
and
lock
mov
pop
jecxz
add
adc
imul
shr
jle
lahf
jmp
sahf
adc
jns
and
scas
xor
push
xrelease
push
lock
call
or
xor
or
(bad)
scas
xor
repnz
les
iret
gs
jmp
mov
adc
ins
adc
inc
push
neg
jge
ds
out
cmp
sbb
add
outs
adc
bound
enter
int
dec
(bad)
test
lock
push
movs
leave
cmp
sar
sub
push
add
scas
gs
cdq
cmps
loope
ja
inc
or
mov
jmp
loopne
dec
call
test
pop
jl
push
xor
fbld
push
movs
imul
lock
and
aas
pop
jnp
cwde
cmps
cld
movs
cmp
imul
nop
aad
dec
and
pop
(bad)
fnstsw
movs
inc
mov
cwde
jmp
ds
and
or
jo
repnz
mov
lea
nop
out
adc
jecxz
adc
adc
mov
out
xor
shr
jl
push
add
cld
stc
mov
and
push
fdiv
icebp
and
fistp
popf
adc
push
push
adc
cmp
shr
xchg
loope
mov
inc
inc
jmp
dec
ret
mov
jl
lea
outs
test
test
ss
imul
loopne
or
lods
xchg
jge
dec
mov
outs
xchg
cmp
and
(bad)
ret
sub
(bad)
xchg
jmp
stc
pop
call
xchg
xchg
out
xchg
mov
mov
push
mov
and
add
stc
mov
pop
popf
mov
in
das
cmp
lahf
pop
jp
xchg
ins
jle
sbb
sbb
mov
or
and
push
jns
inc
scas
bound
retf
inc
lock
mov
imul
push
mov
jmp
popa
inc
pop
or
leave
sub
sbb
push
add
mov
cwde
sar
mov
sub
pop
mov
rcr
xchg
imul
inc
fwait
and
sbb
jl
jb
inc
cmp
mov
loopne
ds
fidivr
cmp
int
mov
or
or
(bad)
loopne
cld
mov
ds
push
loop
jae
mov
das
cmovne
ds
xchg
movs
test
or
push
xchg
mov
cwde
and
cmp
inc
dec
js
push
sub
mov
mov
mov
dec
cmps
cmc
jne
sti
push
mov
aad
movs
jl
call
mov
push
mov
mov
imul
std
inc
jmp
push
fchs
das
sub
rcr
(bad)
and
sahf
xor
mov
jp
jl
mov
add
pop
inc
pop
mov
std
adc
or
jb
clc
sub
es
test
adc
adc
sar
push
inc
outs
clc
mov
pop
adc
dec
mov
mov
xchg
pushf
xor
xor
frstor
push
adc
push
xchg
sbb
xor
and
hlt
les
adc
dec
in
xor
xor
ins
mov
mov
rol
movs
mov
sbb
sbb
outs
mov
add
sub
cwde
in
outs
xchg
inc
pop
mov
(bad)
push
jns
jb
fsub
push
pop
std
add
pop
leave
(bad)
adc
cmp
pop
mov
xchg
dec
cmp
xchg
or
(bad)
enter
xchg
sti
outs
or
adc
sub
inc
xor
cmp
jo
cdq
lds
retf
loope
push
push
pop
fwait
jae
pop
arpl
std
add
(bad)
mov
loope
pop
into
in
es
mov
sti
dec
dec
dec
arpl
jmp
ror
test
imul
(bad)
mov
mov
pop
dec
(bad)
mov
jg
push
aad
xchg
push
sub
lea
shl
mov
int3
fstp
adc
xor
jbe
jns
fcom
imul
sbb
sbb
xor
lahf
pusha
test
cmp
or
mov
in
jmp
shl
cmps
inc
lods
(bad)
adc
inc
sahf
popf
test
mov
leave
sbb
(bad)
jmp
push
sahf
lahf
and
xor
inc
push
xor
or
inc
xchg
ds
cdq
bound
mov
and
sbb
(bad)
adc
sub
mov
stos
out
add
std
mov
retf
or
sub
pop
cmps
sahf
mov
push
neg
push
push
adc
rol
jge
pop
pop
dec
retf
ja
adc
lock
mov
sbb
mov
xor
cs
shr
in
inc
mov
rcr
in
retf
shr
push
mov
push
add
ss
mov
