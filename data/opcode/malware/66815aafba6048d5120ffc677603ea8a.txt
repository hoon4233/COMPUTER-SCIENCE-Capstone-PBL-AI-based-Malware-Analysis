(bad)
ja
call
in
call
add
pop
ret
push
push
lea
push
mov
fild
out
adc
int3
mov
adc
adc
pop
xor
les
and
pushf
push
inc
mov
inc
sahf
push
addr16
xor
dec
mov
or
leave
xchg
pop
enter
and
test
repz
xchg
inc
jb
add
nop
or
push
mov
cmp
and
inc
fwait
sub
xchg
or
in
int
iret
and
js
pop
aad
cmps
fs
mov
sbb
(bad)
cmp
test
sub
xchg
sti
int
xlat
ins
lea
push
or
xchg
or
and
or
or
dec
ret
add
add
in
xchg
sbb
add
xor
inc
xchg
adc
pop
dec
fs
cmp
xor
and
enter
and
lock
in
pop
adc
push
adc
inc
add
inc
add
add
cmp
iret
data16
lock
test
xchg
add
lods
ret
jb
loopne
inc
ss
xor
repnz
xor
push
shl
inc
sahf
adc
dec
shr
dec
mov
cmp
stos
in
nop
sub
dec
mov
ja
add
nop
inc
cmps
in
add
nop
out
data16
xchg
lods
dec
mov
inc
jo
or
fs
repnz
pusha
push
or
or
dec
push
and
inc
push
lock
sub
dec
push
mov
aaa
lods
test
je
push
adc
jmp
mov
add
ret
push
jne
je
add
outs
popa
cmp
mov
clc
sbb
add
call
fist
add
push
push
push
es
push
outs
(bad)
add
mov
push
mov
push
mov
push
sbb
adc
push
sub
jge
in
lods
mov
push
cld
pop
pop
pop
(bad)
fld
bound
dec
add
mov
mov
ins
(bad)
cs
jmp
pop
in
pop
imul
add
leave
je
adc
outs
in
fisttp
add
xor
mov
jge
ror
or
das
sti
add
mov
sbb
rcl
push
ins
imul
jne
jmp
test
add
inc
xor
pop
ss
cmps
(bad)
rol
sub
dec
mov
lds
sbb
push
or
xchg
sub
out
adc
push
mov
iret
inc
fwait
and
bound
rol
jne
pop
adc
shl
fdiv
push
mov
mov
push
sub
pop
adc
xchg
sub
mov
icebp
add
shr
repz
add
jge
sub
js
jno
cmp
mov
repnz
jno
inc
add
fcomp
or
clc
rol
cwde
pop
sti
not
jmp
dec
or
xchg
xor
push
clc
push
lea
das
cmp
adc
sbb
(bad)
aas
add
cmps
xor
and
sbb
jmp
jmp
enter
lock
iret
nop
lock
dec
ins
mov
lods
and
stc
(bad)
cli
push
or
cld
in
fs
into
cdq
lahf
push
push
aaa
or
jo
lahf
shl
pushf
or
push
push
jns
fwait
std
ins
cmp
lock
inc
push
movs
jmp
fwait
cdq
jl
mov
jmp
lahf
or
int
add
xchg
in
jo
sub
test
pop
sbb
int3
ins
mov
jbe
add
rol
pop
ret
les
mov
mov
mov
retf
data16
jae
retf
int3
push
int
into
dec
in
mov
cs
inc
rcl
popa
shl
ret
retf
fsubr
cld
test
or
mov
sub
pushf
xor
popf
sar
lahf
xor
add
push
sbb
push
test
ins
or
(bad)
fucom
ins
xchg
retf
in
neg
repz
loope
rcl
in
in
out
out
in
jb
sub
jmp
fcom
call
xchg
xchg
xchg
imul
imul
sbb
pop
xchg
int
fld
in
out
in
or
lock
icebp
bound
pop
cs
jl
inc
cmc
pop
cs
fcomi
pusha
adc
fs
jnp
jno
jl
in
sti
push
pusha
cld
adc
push
xchg
inc
test
fnstenv
(bad)
or
xor
aam
movs
push
sub
mov
lods
lods
scas
xchg
scas
mov
pop
cs
aaa
mov
mov
mov
mov
cs
(bad)
mov
adc
sbb
pop
mov
js
cmps
imul
cdq
test
aas
cmp
inc
and
pop
iret
into
adc
cmp
cmp
into
or
or
(bad)
or
sub
xchg
adc
inc
pop
inc
call
inc
test
imul
pusha
or
pop
mov
loopne
adc
add
cs
enter
or
js
push
inc
add
cmp
ret
(bad)
push
repnz
daa
in
fisttp
or
sbb
add
push
xor
sub
and
lock
jecxz
pop
in
cmp
or
movs
or
jne
jae
xchg
popa
pusha
mov
imul
jbe
or
sbb
xchg
xlat
lahf
mov
push
psrld
or
sbb
mov
mov
mov
outs
mov
shr
push
add
mov
mov
fwait
or
mov
xchg
adc
inc
(bad)
jnp
dec
adc
sub
mov
fwait
neg
mov
jge
iret
cmp
inc
cmp
sbb
adc
or
outs
js
sahf
pminub
or
outs
pop
push
out
dec
sub
sbb
push
inc
cmp
(bad)
cmp
in
push
adc
cli
int
jg
js
fldenv
fwait
jecxz
or
clc
adc
loopne
cmp
or
je
or
mov
dec
add
mov
jbe
sti
and
push
cmp
jne
jno
mov
push
jno
add
(bad)
(bad)
add
es
mov
sbb
in
pop
mov
jmp
lock
pop
in
xchg
int
rcr
inc
push
mov
repz
movsx
mov
add
scas
test
fs
push
mov
ins
pop
jo
sbb
daa
imul
push
push
out
cmps
pop
mov
sbb
outs
push
in
popw
jae
jne
fisub
mov
push
daa
mov
sbb
dec
xor
mov
or
push
jne
fild
or
inc
jae
and
mov
mov
and
xchg
cmp
push
jmp
test
jmp
xor
loop
mov
mov
bsr
or
pop
rcr
dec
ret
pop
cmp
pop
(bad)
(bad)
cmp
fwait
ins
mov
cdq
call
arpl
jb
pop
sahf
push
push
mov
fld
mov
ins
adc
int
test
test
call
jbe
jnp
call
outs
push
push
xchg
enter
sub
push
pop
mov
jo
inc
je
rcr
enter
adc
mov
mov
push
push
fmul
mov
add
mov
iret
shl
add
cmp
jb
sub
and
aad
(bad)
cmps
mov
xlat
fcomp
dec
or
call
pop
and
imul
mov
sub
mov
and
call
cmp
and
mov
imul
dec
ss
and
xchg
jecxz
cwde
je
out
or
stos
nop
les
test
clc
jge
fs
and
lods
cmp
push
xchg
fistp
ja
push
daa
mov
mov
dec
mov
add
add
test
call
pop
cmp
jg
add
cmp
inc
imul
xchg
dec
mov
movs
mov
fdiv
lock
pop
sahf
popf
xor
push
push
inc
mov
or
gs
icebp
push
ins
and
outs
inc
nop
test
cld
and
add
pop
xchg
dec
stos
data16
mov
fs
pushf
popa
and
sbb
add
gs
add
je
adc
inc
dec
in
dec
or
fwait
ins
mov
add
arpl
dec
mov
lods
adc
rcr
push
push
push
or
leave
push
push
jae
push
jg
shr
pop
jnp
leave
shr
ja
pop
ds
into
inc
cs
(bad)
std
push
dec
fs
push
adc
imul
imul
sub
xchg
imul
mov
imul
fs
into
or
xchg
out
rol
mov
mov
xchg
imul
adc
mov
fwait
xlat
cwde
dec
xchg
out
fs
ds
test
fs
out
sub
mov
push
sub
movs
cmp
pop
sub
call
movs
pop
mov
push
xor
pop
mov
inc
ss
push
cmp
movs
pop
cmp
cmp
xchg
xchg
movs
cmp
dec
push
cmp
xchg
out
in
test
inc
aas
push
inc
cdq
aaa
or
adc
dec
or
adc
movs
pop
call
call
adc
push
pop
xor
mov
popf
sbb
sbb
lahf
push
cmp
mov
or
sub
pop
call
loope
mov
push
xor
xchg
xchg
movs
add
call
mov
xchg
movs
or
mov
mov
cwde
push
xor
ja
imul
je
dec
mov
outs
jo
sub
inc
jae
jno
out
loopne
dec
shl
and
xor
mov
shl
and
xor
sub
cmp
fxch
(bad)
dec
xchg
loopne
push
loop
je
daa
dec
push
jecxz
in
xlat
dec
jae
mov
out
call
mov
iret
jmp
mov
fldln2
scas
push
popf
popf
jne
jbe
test
int
sub
js
je
fs
daa
shr
jnp
adc
outs
xchg
inc
lods
daa
push
lea
inc
xchg
pop
scas
int
cli
in
or
pop
lods
(bad)
test
daa
sub
mov
fidiv
sub
pushf
sahf
das
(bad)
loopne
fxch
xchg
sbb
sub
jp
test
add
enter
mov
or
es
jl
pop
pop
lods
mov
clc
mov
and
mov
ret
fnstenv
add
addr16
sbb
test
mov
ret
fstp
ret
or
xor
mov
dec
(bad)
dec
(bad)
lss
mov
sbb
daa
dec
ja
ds
mov
mov
ja
je
js
mov
dec
mov
mov
mov
out
xor
mov
jmp
ins
xor
out
mov
je
addr16
push
inc
mov
push
mov
dec
mov
js
pop
dec
jbe
xor
jge
icebp
push
je
dec
ja
or
add
dec
mov
outs
div
leave
daa
daa
dec
int
int
je
jbe
dec
daa
daa
ja
cmp
jns
sub
rcr
jle
imul
mov
lea
mov
sub
nop
cld
xchg
imul
xchg
cli
xchg
popf
sub
sar
xchg
clc
xchg
xchg
(bad)
leave
shl
lock
cdq
call
fwait
sahf
pushf
popf
push
rcr
cmc
lahf
mov
ret
leave
mov
ins
mov
mov
movs
push
cmps
loope
mov
xchg
xor
add
retf
retf
int3
aaa
fisubr
add
pop
into
iret
adc
shl
shl
add
add
mov
mov
mov
mov
dec
stos
fmul
add
push
pop
add
inc
push
in
xchg
mov
call
cmp
push
pop
push
pop
or
pusha
inc
popa
push
or
sub
pop
arpl
push
call
stos
movs
adc
pop
call
ins
xlat
ins
addr16
aam
add
cdq
pop
mov
outs
fwait
xlat
fcom
hlt
(bad)
fcmovu
int
dec
shl
cmps
lods
fldenv
leave
leave
inc
xor
in
aaa
cmc
mov
neg
test
imul
daa
cld
sbb
mov
ins
pop
(bad)
nop
mov
add
das
not
add
dec
add
xchg
gs
xchg
add
jge
mov
xchg
xchg
push
loope
dec
mov
ins
(bad)
arpl
(bad)
shr
lds
push
pushf
sub
shr
test
jae
movs
(bad)
cmc
out
rcl
in
or
xchg
and
dec
sbb
test
add
inc
jmp
dec
loope
lock
nop
pushf
mov
xor
mov
js
jb
or
push
dec
mov
inc
pop
gs
popa
dec
xchg
add
(bad)
pop
inc
add
pop
aam
jae
ja
stc
shl
push
mov
out
add
cmp
pop
cli
push
ss
mov
cmp
shr
aad
add
cmp
mov
in
ins
es
ins
mov
inc
test
adc
inc
les
outs
add
pop
jl
mov
sbb
fsub
int3
cmp
mov
in
cmp
add
pop
stos
outs
cmp
je
mov
push
cdq
stc
mov
mov
mov
pusha
mov
sub
mov
mov
test
push
out
add
jge
(bad)
fadd
and
add
add
add
(bad)
das
sub
add
(bad)
jmp
sbb
add
add
rol
mov
mov
add
mov
mov
pop
pushf
hlt
jl
gs
(bad)
sbb
push
push
push
push
push
mov
rdmsr
mov
(bad)
push
sub
mov
add
xor
add
mov
mov
mov
aaa
clc
(bad)
cmp
sete
pop
pop
pop
pop
inc
push
jmp
in
ret
mov
ins
cmp
mov
push
popf
xor
mov
rol
test
sbb
js
sub
retf
ret
(bad)
les
xor
jne
xchg
daa
test
adc
jl
sbb
or
loope
cwde
mov
inc
cmp
movs
in
pop
jmp
and
ror
aas
mov
cmp
or
mov
enter
and
retf
pop
shl
jnp
or
inc
xchg
sub
adc
fs
retf
mov
bound
daa
and
shl
arpl
sub
shl
push
cmp
retf
mov
daa
and
or
ss
cwde
sti
or
imul
push
(bad)
fsubr
mov
push
adc
pop
or
aaa
adc
cmps
call
jp
fwait
cmps
imul
ds
lock
repnz
ins
data16
cmc
jb
div
clc
pop
or
outs
fwait
gs
sti
dec
cld
std
cmp
(bad)
push
add
inc
dec
in
and
adc
imul
cs
mov
sbb
mov
movs
scas
mov
call
sti
popf
sub
(bad)
mov
retf
(bad)
jmp
int
or
dec
shr
xchg
mov
xchg
movs
xchg
xchg
xchg
leave
shr
sbb
fwait
mov
sti
movs
fwait
xor
sti
(bad)
sbb
pop
call
mov
movs
pop
mov
movs
pop
mov
sbb
push
pop
mov
sub
ds
pop
call
fs
test
out
pop
mulps
xchg
retf
loope
loop
jecxz
in
in
outs
mov
adc
pop
psubsw
movs
mov
in
push
in
adc
dec
call
shr
adc
leave
shr
jno
fstp
fnstenv
jae
je
sub
sub
rcr
shr
jp
dec
push
int
jnp
jle
sti
fwait
xor
leave
sti
sti
in
sbb
mov
movs
pop
call
mov
and
out
imul
xchg
jmpw
inc
push
scas
jnp
into
into
into
dec
mov
mov
mov
mov
ss
add
test
ins
out
popf
add
add
scas
aad
inc
mov
sbb
mov
and
das
dec
scas
dec
fsub
bound
inc
xor
push
jmp
add
mov
faddp
ds
dec
pusha
pop
add
call
or
and
xor
ret
pusha
dec
nop
outs
inc
outs
out
mov
xchg
pop
push
and
push
add
test
jmp
add
inc
mov
push
xchg
xchg
in
ins
dec
xchg
inc
out
add
jns
(bad)
test
add
inc
inc
mov
xor
pop
fistp
into
paddusb
sub
or
or
movs
cmp
sbb
cmp
cmp
std
ins
addr16
xchg
push
sub
sub
fldenv
or
push
pop
test
cmp
nop
and
adc
inc
dec
xchg
cmp
cmp
and
mov
mov
addr16
mov
add
jae
addr16
or
jnp
lock
movzx
test
not
sbb
cmps
push
pop
arpl
and
scas
and
test
mov
iret
in
dec
jne
or
add
add
ins
lahf
mov
cmps
xchg
push
jecxz
push
dec
mov
add
daa
jmp
(bad)
sbb
mov
fstp
sub
test
loopne
test
jmp
adc
and
and
add
sar
or
out
mov
pmaxub
inc
mov
mov
inc
jmp
idiv
dec
shl
je
fcom
mov
xchg
jo
jb
or
lock
fadd
sar
adc
jmp
sbb
test
mov
inc
sub
mov
sub
cmp
inc
or
sbb
inc
jb
aam
js
in
or
(bad)
adc
icebp
push
push
mov
add
adc
inc
add
add
cs
or
loopne
cmp
call
add
icebp
pushf
xor
icebp
mov
scas
scas
ret
nop
call
js
call
push
ds
pop
jnp
lock
push
jns
sbb
lods
or
imul
pop
jne
cmp
mov
les
in
adc
add
(bad)
adc
cmp
and
mov
mov
mov
nop
adc
mov
and
add
rcl
dec
sahf
pop
add
fisubr
pop
outs
imul
enter
and
fld
wrmsr
push
sub
enter
cdq
jl
mov
test
ss
inc
lods
mov
enter
aas
add
das
and
ficom
jns
pop
in
add
push
xchg
or
xlat
push
clc
add
pop
pop
inc
icebp
fild
sti
sub
cmp
jg
xor
push
or
sub
fmul
ror
and
pop
pop
xor
loopne
push
or
mov
push
ja
add
inc
ret
pop
sbb
mov
sbb
add
jl
push
xchg
test
add
pop
or
cmp
jae
test
call
gs
sbb
xor
scas
pop
mov
fidiv
sub
shr
es
cmp
fcmovnu
or
adc
in
push
inc
stc
mov
mov
sbb
vcmpps
push
movs
jne
pop
mov
imul
shr
nop
add
call
push
sub
and
add
dec
bound
test
inc
adc
inc
ret
xor
nop
sub
(bad)
data16
adc
inc
dec
add
test
push
sbb
xor
xor
loopne
add
add
aas
je
aas
je
out
adc
cmp
ja
pop
xchg
push
in
mov
or
add
push
xchg
adc
dec
fldcw
cdq
lods
pop
rol
cmp
mov
push
add
dec
mov
push
mov
mov
xor
fs
push
adc
test
push
retf
add
cmp
mov
xor
fs
and
add
xchg
gs
xchg
and
repz
xor
pop
mov
pop
adc
imul
pusha
inc
int
jmp
inc
inc
les
or
imul
je
add
and
fldenv
mov
xchg
test
int
iret
int3
retf
inc
scas
dec
jnp
pusha
test
dec
inc
add
mov
xor
pushf
and
(bad)
call
jnp
repz
and
ss
fs
mov
jp
not
and
and
inc
pop
neg
sbb
and
enter
or
or
xchg
adc
cmps
imul
or
cmp
xchg
gs
mov
xchg
xchg
gs
xchg
lods
test
pop
xchg
gs
stos
mov
scas
cmps
sub
xchg
movs
cmps
mov
sbb
cmps
and
(bad)
push
inc
adc
(bad)
xor
sar
pop
neg
cmps
add
aaa
ds
push
leave
lds
ficom
dec
(bad)
bound
cmp
inc
loop
jno
out
add
add
shr
xor
fs
ss
lods
pop
in
jb
push
xor
loop
cwde
in
jbe
aaa
popaw
fdivp
dec
sub
hlt
fiadd
and
xchg
pop
das
or
aam
outs
add
xchg
xchg
es
lds
inc
pop
hlt
loop
inc
call
mov
add
mov
mov
add
xchg
add
imul
les
pop
ins
xor
push
xchg
xchg
cmp
sub
pop
push
inc
mov
mov
in
rcl
mov
in
(bad)
cmc
mov
fnstsw
pop
nop
jb
or
mov
or
sar
mov
sub
push
mov
call
ret
fiadd
dec
adc
fiadd
mov
inc
mov
sbb
aaa
pop
jmp
or
add
pop
sub
aam
lods
add
js
test
xchg
xor
jmp
push
call
inc
jmp
dec
mov
cmp
nop
add
pop
pushf
pushf
cwde
and
loop
add
lods
out
ror
xor
dec
jmp
pop
rol
jnp
enter
icebp
dec
mov
cmp
mov
(bad)
aad
dec
and
or
lock
cs
hlt
adc
add
or
push
mov
adc
in
in
dec
sbb
push
popa
in
and
mov
jbe
mov
rcr
rcr
dec
enter
adc
mov
push
inc
scas
sbb
cmp
mov
cmp
dec
les
xor
push
xor
fidivr
and
loopne
dec
jb
loopne
je
ins
fs
xor
test
(bad)
fcom
mov
pop
inc
fcom
or
(bad)
adc
ror
jae
add
inc
jbe
aaa
mov
cs
out
aam
rcl
lds
adc
data16
pop
mov
xchg
repnz
xchg
pushf
mov
and
or
mov
sbb
xor
mov
movs
imul
xchg
and
or
loope
cmp
mov
sbb
mov
add
lods
add
or
mov
mov
cmp
add
xchg
sti
xor
enter
stc
(bad)
enter
dec
pop
not
das
bound
test
sbb
sti
and
pop
dec
mov
mov
gs
mov
mov
mov
hlt
stos
iret
and
loope
push
add
cmp
jae
sub
push
or
xchg
fsub
xchg
aam
mov
rol
or
in
imul
je
test
retf
gs
and
jg
ror
mov
push
pop
jae
retf
fucom
jns
int3
ja
stos
mov
jecxz
jne
jbe
cdq
mov
push
nop
or
nop
pop
stos
xor
xlat
fsubr
jle
and
xor
add
jecxz
js
push
inc
inc
inc
push
mov
enter
mov
and
mov
mov
pop
jb
mov
mov
ins
(bad)
lock
stos
clc
ins
ins
mov
and
imul
xchg
aaa
lea
push
xor
sbb
lds
add
mov
or
movs
shl
daa
fwait
dec
clc
cmp
xchg
mov
imul
dec
push
jne
and
stc
sbb
pop
xor
pop
xor
cmp
push
pusha
jl
and
int
das
mov
cwde
mov
loopne
sbb
inc
push
mov
sahf
jbe
lods
lods
cmps
fs
test
movs
cs
inc
movs
mov
inc
inc
or
fld
test
gs
loopne
add
add
adc
push
in
addr16
imul
repnz
jl
push
jbe
lods
or
mov
and
jbe
cmp
and
pop
mov
test
inc
ja
dec
or
xchg
dec
adc
ror
adc
jbe
div
fimul
sbb
and
xchg
adc
daa
push
adc
cdq
hlt
add
jl
scas
cmp
mov
xor
and
fist
lods
call
cmp
pop
test
and
fild
jmp
rcl
lods
std
sahf
fdiv
fild
sbb
xor
enter
adc
dec
push
and
jae
mov
int
ss
ret
adc
sub
pusha
pop
dec
enter
sub
das
cmp
adc
sbb
and
popa
leave
adc
ds
ja
jae
inc
sub
mov
or
inc
xchg
mov
mov
cs
jl
js
je
cs
dec
mov
inc
mov
and
outs
cmp
jbe
mov
or
jne
test
test
rcr
in
(bad)
jl
shl
jmp
and
or
xchg
fidivr
daa
and
or
pop
or
fild
jle
add
sub
arpl
fsubr
pop
and
das
or
mov
je
test
and
mov
scas
ja
adc
pop
adc
pop
jae
test
es
pushf
retf
in
or
enter
nop
les
mov
mov
add
add
bound
into
ds
fs
xchg
add
dec
dec
push
pminub
aad
add
leave
fidivr
add
mov
adc
lock
push
ds
adc
dec
mov
add
std
lea
cmps
xchg
pop
add
popa
add
pusha
sbb
rol
xchg
pushf
push
les
in
jno
call
push
fcmovnu
push
adc
sub
xor
pop
xchg
mov
int3
adc
stc
push
fsub
cmp
rcl
mov
jmp
push
mov
jo
cs
(bad)
push
aaa
mov
sub
pop
js
mov
inc
xor
ret
stos
push
retf
mov
daa
xlat
popf
cwde
(bad)
stc
mov
fs
push
bound
xor
(bad)
cli
push
les
sahf
sbb
dec
in
hlt
inc
inc
inc
inc
xchg
add
out
add
jo
xor
sbb
or
add
js
lea
push
inc
xor
aam
les
ficom
int3
sbb
cmp
inc
push
shr
adc
sub
add
mov
mov
mov
push
mov
js
mov
ret
push
mov
enter
sbb
inc
movs
dec
shr
loope
addr16
cmps
les
jb
sbb
or
fcmovnb
jo
inc
mov
into
pop
pop
test
mov
dec
add
test
mov
les
jne
fsub
add
mov
sub
test
xor
pop
or
sub
inc
or
or
addr16
inc
jo
pop
inc
aad
xchg
ins
test
lds
outs
(bad)
xchg
iret
movs
add
ins
add
rcl
pusha
xchg
or
add
gs
jl
leave
push
nop
xchg
inc
jb
js
fs
inc
je
jo
bound
ins
call
xor
ins
test
xchg
movs
mov
pop
cmps
rcl
xchg
xor
movs
mov
push
pusha
leave
enter
pop
pop
stc
xchg
mov
sti
pop
enter
in
push
mov
(bad)
in
inc
(bad)
push
xor
fs
jne
retf
mov
and
shl
xor
inc
xlat
xchg
out
xchg
inc
add
out
movs
loope
nop
inc
mov
es
retf
test
lea
mov
xor
bound
jbe
fwait
dec
sbb
or
fs
mov
xor
cdq
xchg
xchg
sub
sub
mov
mov
push
pop
fs
stos
dec
shl
xor
cmp
mov
outs
mov
and
out
cmp
or
or
mov
or
clc
push
jge
mov
mov
adc
fnstsw
je
pop
hlt
or
pop
hlt
out
sti
and
aam
add
jge
shl
xor
cmp
jnp
jbe
and
sbb
adc
push
stos
cmps
sbb
dec
stos
push
inc
add
add
and
ins
or
and
adc
lds
ss
mov
fs
dec
aaa
lods
(bad)
rol
or
cmp
cmp
mov
arpl
int3
inc
mov
mov
push
mov
inc
mov
xor
mov
arpl
fs
push
aam
or
xchg
xchg
fs
fs
cmps
push
or
pop
clc
mov
mov
and
fist
jge
jmp
jg
mov
mov
xchg
sub
jmp
std
gs
mov
mov
xor
fcmovnu
cld
mov
add
sbb
leave
inc
add
ins
pop
inc
pusha
xor
lods
mov
mov
int3
adc
imul
daa
mov
cmp
int
popf
ror
and
popf
ins
sub
mov
xor
inc
dec
lods
cwde
jp
sub
daa
(bad)
lods
xor
or
les
int
mov
add
xor
inc
adc
push
loopne
popf
in
(bad)
adc
loopne
test
mov
dec
mov
call
push
push
cdq
xchg
dec
xor
adc
rcl
jb
out
xor
mov
nop
gs
fisttp
movs
xchg
jecxz
mov
fsub
clc
add
xchg
pop
retf
addr16
clc
std
push
and
enter
and
repnz
in
hlt
std
loopne
hlt
std
(bad)
in
dec
jne
psllq
out
and
mov
js
push
adc
push
inc
(bad)
jmp
aam
and
fadd
xchg
ficom
ret
popa
mov
lods
arpl
icebp
mov
cs
cmp
mov
xor
fmul
sub
lods
and
(bad)
enter
call
sbb
or
mov
and
or
mov
jbe
push
or
mov
dec
enter
ret
pushf
movs
push
(bad)
ins
push
push
mov
in
dec
mov
xor
jge
inc
inc
dec
outs
xchg
pop
ror
push
lods
pusha
gs
adc
enter
xchg
shl
dec
out
popa
xchg
sub
and
inc
sbb
sub
cmp
mov
pushf
mov
aaa
sub
mov
xor
cmps
cmp
and
movntq
push
lea
ins
cmp
leave
and
or
jb
out
ret
push
mov
gs
daa
nop
inc
mov
xchg
fld
or
and
push
add
push
sub
or
or
pop
cdq
cwde
test
dec
push
cwde
cwde
inc
loopne
cmp
ins
ja
(bad)
mov
fs
cmp
xchg
cmp
adc
ins
fsubr
inc
and
or
mov
sahf
sbb
jmp
mov
mov
cdq
mov
mov
nop
or
pop
mov
add
cmp
pusha
enter
lods
popa
add
ror
add
cwde
dec
cs
adc
test
pop
add
xor
jecxz
sbb
outs
add
mov
pop
js
inc
mov
push
pushf
inc
jno
sub
mov
out
call
and
push
(bad)
and
movs
cmp
jl
xor
xor
(bad)
mov
push
in
retf
mov
loop
dec
pop
xchg
add
xchg
fsub
adc
push
jnp
rol
inc
adc
shr
test
pop
cs
xchg
mov
paddusb
retf
in
sbb
add
test
test
icebp
fisubr
shr
jp
xor
xchg
adc
ins
lock
stc
adc
(bad)
or
or
cmp
inc
xchg
ds
adc
fs
mov
hlt
mov
pop
mov
clc
lds
add
and
sub
retf
mov
loopne
sbb
aaa
sub
mov
pop
and
jp
mov
sub
mov
in
outs
popa
or
loope
retf
outs
inc
jno
data16
xchg
xchg
mov
sub
xchg
mov
ins
fwait
mov
call
lahf
mov
(bad)
sti
pop
ins
mov
mov
mov
sbb
push
shr
inc
mov
adc
push
inc
add
dec
ja
or
inc
call
ds
inc
popa
push
(bad)
(bad)
(bad)
jge
dec
xchg
out
fs
dec
and
dec
inc
(bad)
sub
mov
inc
inc
inc
inc
ins
js
jns
inc
inc
inc
xor
xor
out
in
sbb
pop
enter
or
enter
fldl2t
shl
xor
int
(bad)
xor
xor
(bad)
ror
bound
add
xor
xor
jne
cmp
xor
jae
popf
xchg
(bad)
sub
ret
(bad)
pushf
pop
cmp
sbb
or
xchg
test
stos
push
xlat
pop
add
inc
mov
sbb
cmp
addr16
mov
pop
mov
inc
mov
inc
and
arpl
ret
sub
mov
add
push
and
sar
mov
ins
xor
add
lock
retf
adc
lods
inc
add
dec
xchg
mov
sbb
ror
mov
lods
push
out
xor
push
adc
ret
mov
pop
fisttp
add
xchg
dec
push
pop
xchg
push
sbb
ds
lock
call
movs
add
(bad)
fcom
sbb
adc
adc
add
shl
mov
push
out
mov
cmp
xor
aas
inc
add
add
lds
add
sbb
add
dec
mov
or
lahf
push
pop
mov
mov
mov
xchg
les
sub
jbe
mov
ret
pushf
mov
aas
repnz
xchg
add
adc
mov
aam
dec
or
adc
inc
rcl
inc
call
call
ins
and
retf
push
jne
addr16
add
retf
adc
fsubr
mov
int
leave
xchg
fmul
push
retf
mov
fdivr
push
cdq
mov
shr
sub
rcr
xor
or
test
xchg
lds
mov
jmp
jne
shl
xor
sbb
das
sbb
fstp
in
arpl
add
(bad)
xchg
or
fcom
ror
jbe
mov
out
and
sub
or
mov
jle
shr
or
je
push
add
mov
push
ds
cmp
xor
loopne
inc
mov
repnz
lock
(bad)
loopne
sets
je
(bad)
(bad)
out
sub
jno
mov
shr
push
xor
icebp
pop
ret
rcpps
fcomp
inc
inc
dec
add
push
cmp
inc
div
add
mov
pop
push
cmp
jae
mov
mov
arpl
add
ret
lea
adc
xchg
jno
xor
or
inc
sbb
add
or
push
mov
ss
ja
mov
xor
ds
ja
ins
aaa
xor
fist
pusha
xor
das
xor
fsub
push
jge
push
cmp
mov
push
inc
dec
cmp
in
ins
scas
cmp
sub
jo
adc
into
dec
hlt
add
dec
nop
fild
and
lock
mul
cmp
xchg
inc
nop
test
adc
sahf
test
and
jo
inc
(bad)
xchg
in
out
test
mov
push
js
pop
sub
pop
inc
pop
cmp
das
call
jmp
lahf
jmp
xor
jae
xor
pop
cmp
xchg
or
or
jle
jae
add
retf
sub
and
xor
pushf
push
xchg
mov
mov
xchg
push
xchg
jae
shr
scas
jne
lods
mov
mov
pop
loopne
pop
sbb
xor
cmp
lock
push
xor
nop
fild
push
lahf
int3
push
sbb
ins
mov
cmp
xor
shl
ja
nop
inc
sahf
je
aaa
fdivr
dec
es
pop
xor
sub
add
jp
sbb
sub
mov
sbb
jl
push
dec
cmps
add
add
lock
ds
inc
loopne
popa
inc
lahf
add
add
inc
loopne
sub
and
mov
ds
fisubr
outs
sbb
jbe
dec
adc
xor
adc
pushf
xor
fmul
dec
fnstsw
and
cs
(bad)
push
js
call
or
sbb
pop
in
add
bound
outs
std
fdiv
hlt
xor
inc
jp
xchg
sbb
xor
mov
add
xor
rol
add
push
pushf
pop
inc
push
push
cmp
shr
das
or
add
fsubr
lea
cmc
xchg
loop
or
shr
shl
in
pminub
fidiv
getsec
nop
es
and
(bad)
aam
mov
jmp
or
cmp
lods
xor
rcr
mov
test
and
push
aad
fst
jp
pop
add
repz
cdq
stos
dec
cmp
aaa
push
je
adc
mov
fdivr
jnp
xchg
mov
aaa
hlt
sbb
inc
sub
stos
popf
nop
ins
mov
inc
xchg
lds
fisubr
jle
shl
pop
inc
cmp
dec
dec
mov
call
retf
dec
int3
aaa
enter
push
mov
shl
inc
cmp
jle
sub
imul
fcomp
inc
xchg
mov
add
cli
mov
push
rcl
enter
jbe
jge
jnp
and
mov
pop
pmuludq
sub
hlt
clc
push
test
bts
sbb
cmps
push
add
inc
sbb
sub
jg
add
lahf
fs
mov
xchg
aas
sub
xchg
mov
cmc
cld
out
add
xor
cwde
dec
retf
jo
dec
mov
int
(bad)
test
cld
lock
fild
je
xchg
sahf
mov
cld
add
jne
fmul
mov
jo
jbe
push
pusha
add
jle
inc
adc
jo
loope
dec
inc
mov
ja
or
xlat
inc
or
fist
ret
ficomp
(bad)
mov
sub
sti
adc
lock
inc
int
jb
mov
ret
retf
ret
add
mov
retf
add
sub
push
sub
mov
adc
sub
adc
xor
or
sub
dec
shl
and
dec
shl
and
and
adc
lock
add
sub
xchg
dec
mov
outs
push
stc
jb
fsub
jb
sti
jp
cld
je
jnp
sbb
loopne
mov
shr
or
adc
imul
sbb
stos
xchg
sbb
ret
sbb
and
pop
push
lea
xor
int
add
enter
mov
inc
shl
sahf
jmp
mov
clc
add
es
cmp
and
daa
jb
mov
dec
leave
leave
leave
(bad)
enter
or
push
pop
leave
int3
int3
int3
int3
retf
inc
leave
and
enter
mov
leave
enter
inc
je
ins
mov
inc
out
les
push
cld
push
xchg
dec
and
jle
mov
enter
sub
rcr
shr
mov
adc
lods
dec
add
sub
add
sub
add
sbb
inc
packssdw
push
(bad)
and
xchg
xchg
enter
add
cli
cmp
cmp
aas
jno
clc
jmp
add
mov
ret
xchg
call
and
adc
out
jbe
stos
push
mov
mov
lods
cdq
add
jo
dec
sbb
aaa
dec
fsubr
bound
pop
inc
inc
dec
jle
fs
xchg
nop
push
sahf
adc
test
jne
mov
cmp
(bad)
dec
shl
stos
xchg
or
push
xchg
gs
add
jmp
dec
shl
retf
in
mov
mov
mov
mov
mov
in
or
sub
xchg
gs
xchg
ja
cmp
mov
pop
popa
aam
add
gs
xchg
adc
(bad)
(bad)
xchg
gs
xchg
(bad)
(bad)
fsubr
pop
xchg
mov
push
or
add
popa
adc
gs
cdq
lahf
in
jp
nop
dec
mov
lock
sbb
mov
dec
add
and
xchg
in
and
in
iret
ins
xor
movs
jo
nop
mov
add
dec
pusha
sbb
jae
jl
sub
sbb
stos
adc
xchg
je
sti
push
add
mov
push
daa
into
test
sub
lock
cmp
adc
add
push
xor
dec
call
add
mov
sbb
fsubr
popa
shr
ins
dec
lods
jge
pop
cmp
(bad)
mov
or
sub
inc
test
rcl
push
or
add
mov
add
mov
aad
mov
add
add
(bad)
dec
inc
inc
add
sub
pop
push
lock
call
sbb
push
jno
ficomp
pop
xchg
shl
shl
mov
or
mov
arpl
rcl
(bad)
jmp
test
jmp
xchg
js
jg
and
inc
cs
jg
adc
imul
and
sub
mov
rcl
jmp
or
pop
retf
sub
movs
or
xchg
adc
push
and
and
js
inc
shl
test
inc
pop
push
bound
xchg
std
shl
sbb
jae
xor
rcl
push
jl
adc
aam
aaa
popa
retf
jb
test
addr16
jb
pop
lods
ret
pop
cdq
mov
pop
pop
leave
neg
pop
aam
gs
es
sbb
push
lock
pop
and
es
xor
je
(bad)
test
ins
(bad)
push
jmp
push
pop
add
xor
add
inc
es
mov
add
mov
mov
xchg
fs
call
aas
push
cs
nop
arpl
scas
pop
jmp
pop
in
out
in
clc
out
out
pushf
and
add
gs
xchg
or
gs
addr16
xchg
xor
xor
mov
dec
jmp
call
(bad)
sar
mov
xor
xchg
fwait
popf
sahf
mov
sbb
xchg
sub
fwait
ret
xchg
gs
into
fpatan
scas
cmp
sbb
sbb
add
sbb
sbb
shl
out
sbb
sbb
loopne
jecxz
inc
sbb
sbb
ror
fs
inc
gs
retf
in
fs
stc
jns
jae
sbb
adc
adc
and
call
popf
ins
rcr
push
pop
pop
sbb
pop
gs
inc
inc
inc
inc
mov
add
jb
in
jmp
fcom
jmp
add
call
pop
xor
jns
inc
jb
jb
push
dec
push
inc
xor
jb
and
ror
push
push
inc
inc
pop
xor
rcr
dec
xor
in
and
cmp
push
in
in
push
movs
push
inc
cwde
push
retf
and
dec
adc
push
and
(bad)
lock
fs
xchg
les
pop
pop
add
push
and
pop
mov
pop
add
jo
pop
sbb
aam
ins
lods
lods
pop
mov
mov
and
jno
mov
xor
sbb
mov
mov
pop
xchg
mov
movs
stc
pop
cmp
xchg
xchg
call
mov
xchg
pop
add
push
pop
cmp
sbb
dec
mov
call
mov
adc
mov
jmp
jge
jbe
call
push
and
aam
jbe
or
jmp
and
sbb
mov
and
nop
enter
sar
fcomp
mov
lds
shl
in
pop
cld
sbb
adc
add
and
xchg
or
sbb
push
mov
inc
xlat
sbb
or
ss
and
mov
dec
dec
cs
stos
dec
sub
data16
and
inc
sbb
push
call
int
add
xor
mov
lods
cmp
lods
test
fwait
mov
js
jl
add
jbe
pop
ins
fistp
adc
test
adc
and
int
and
and
mov
mov
lods
dec
push
loope
inc
adc
or
pop
push
(bad)
sub
dec
cmp
mov
inc
jo
xor
inc
jbe
fldcw
pop
or
xor
mov
call
jmp
in
retf
div
test
dec
xor
cmp
popa
aas
inc
xor
jp
retf
fmul
sbb
cwde
sbb
mov
mov
(bad)
int
mov
int
and
mov
dec
add
or
js
add
mov
aad
add
mov
push
dec
pop
xor
inc
retf
adc
in
sub
fsubr
adc
lods
daa
sub
xchg
in
xor
sub
sub
push
or
sub
or
in
js
xlat
scas
xchg
(bad)
out
fs
push
cmps
imul
inc
push
les
test
call
movs
sub
add
sbb
push
fnsave
add
xchg
fst
mov
fs
xchg
or
enter
mov
or
or
scas
hlt
cmp
(bad)
sbb
or
fs
inc
mov
mov
ret
mov
inc
sbb
add
xchg
adc
xchg
xchg
mov
imul
mov
xchg
pop
js
mov
sub
not
rol
aaa
mov
adc
in
call
push
fsubr
(bad)
cdq
in
mov
mov
mov
pop
sar
leave
inc
ins
jp
aam
leave
leave
push
xor
ror
dec
shl
pop
or
ins
add
inc
sbb
and
adc
mov
(bad)
and
sub
cmp
or
sbb
jns
dec
cmp
adc
test
push
add
add
movs
mov
mov
mov
fs
sar
and
test
and
inc
xchg
lds
push
push
and
sbb
add
enter
xchg
enter
mov
enter
xchg
xchg
(bad)
mov
sub
cmp
and
pop
push
jp
sub
lock
sar
mov
(bad)
dec
sbb
sbb
jge
sub
sub
adc
sbb
sbb
addr16
mov
mov
lea
push
stos
xchg
dec
test
fisttp
dec
nop
jne
dec
add
pop
adc
push
ss
dec
sub
enter
xor
cmps
test
lahf
sbb
adc
add
mov
stos
lahf
jmp
ins
sbb
fild
mov
add
sar
jge
inc
mov
ret
leave
fist
pop
add
cmp
sub
fs
cwde
loopne
jne
mov
inc
inc
out
aad
add
mov
retf
sbb
rcl
xor
pop
push
xchg
add
xchg
pop
repnz
pop
enter
sbb
das
cmps
(bad)
sbb
sub
cmp
sub
cmp
jmp
retf
adc
sub
retf
mov
cmp
dec
dec
push
test
add
mov
xchg
sbb
cwde
push
xor
call
xchg
sub
lds
push
mov
push
jb
arpl
stos
loop
mov
ss
repnz
out
or
push
mov
add
push
out
push
push
jbe
inc
sbb
icebp
push
sbb
add
cmp
and
ror
pop
dec
sbb
jno
loopne
push
adc
and
cdq
inc
inc
jo
mov
xor
fldln2
enter
and
ds
and
adc
xchg
les
rcl
and
or
in
push
clc
add
pusha
and
pop
loop
push
gs
in
mov
sbb
mov
hlt
mov
lock
cmp
jae
add
rol
movs
push
pop
outs
movs
pop
push
retf
clc
cmp
xchg
push
pushf
mov
dec
cwde
cmp
dec
cs
test
pop
add
addr16
pusha
pop
add
pop
mov
xchg
js
dec
rol
movs
add
jmp
sub
sbb
add
xor
jne
mov
mov
shl
rol
jl
mov
and
pop
adc
xlat
or
sub
dec
in
pop
pusha
add
test
push
or
mov
pushf
jl
retf
iret
cmp
loopne
add
adc
fld
cli
rol
and
je
cmp
inc
xchg
dec
lock
mov
sub
push
jecxz
adc
push
call
push
js
xor
push
pop
add
mov
clc
mov
adc
es
sahf
or
xor
fidivr
add
add
add
or
push
and
push
mov
jnp
push
ss
push
and
and
sahf
dec
or
shr
and
loope
add
aad
ret
sub
pop
or
rol
ret
into
adc
inc
stos
dec
and
pop
and
xor
mov
inc
imul
nop
or
or
movs
in
mov
jmp
mov
xor
js
pop
(bad)
pushf
pushf
ins
shl
pop
adc
pushf
inc
or
add
ss
inc
in
ret
pushf
mov
push
adc
xlat
push
jmp
mov
lock
jne
inc
add
dec
ror
add
inc
inc
mov
lods
into
adc
adc
nop
jmp
dec
xor
fs
push
arpl
cmps
or
call
adc
pop
mov
pop
push
inc
add
test
mov
rol
lea
jb
jb
retf
mov
push
jb
jns
sub
mov
cmp
push
and
or
aas
inc
test
jo
pop
xchg
in
mov
or
int3
inc
adc
and
sbb
inc
test
mov
mov
dec
ds
and
push
inc
call
std
test
out
push
dec
shr
sub
sbb
mov
leave
add
rol
jae
push
mov
dec
xchg
push
mov
daa
arpl
test
sbb
imul
int
xchg
add
add
and
in
(bad)
(bad)
(bad)
je
sub
cmp
mov
xor
bound
mov
test
dec
iret
pushf
xor
jbe
inc
mov
push
sub
dec
int
enter
push
cmp
or
lds
inc
mov
xor
add
sub
jnp
imul
add
push
nop
sbb
sub
fdiv
call
sub
mov
shr
test
mov
xor
mov
retf
mov
mov
and
adc
inc
jl
les
into
leave
in
nop
fstp
sub
pusha
gs
inc
dec
fs
loop
les
test
repnz
movs
pusha
enter
mov
arpl
jae
xor
shl
push
inc
in
popf
aaa
dec
lods
cmp
or
in
mov
sub
out
in
sub
gs
in
js
add
jne
(bad)
cld
jp
add
push
push
pop
or
stc
mov
fstp
std
test
and
enter
(bad)
enter
xchg
int
pop
xor
push
pop
aam
xor
test
test
push
enter
pop
jmp
and
fcom
sub
femms
ss
ror
int3
enter
xor
or
jnp
int3
cld
mov
bound
sbb
aas
enter
and
jmp
(bad)
sbb
and
or
enter
xchg
aad
popa
sbb
xor
push
(bad)
xor
or
ins
pusha
hlt
xchg
cmp
jne
adc
(bad)
ror
or
or
ficomp
or
sti
mov
dec
pop
movs
mov
cmp
inc
jne
mov
ret
push
ret
and
js
jmp
mov
sbb
jmp
das
call
mov
fbld
rol
ja
pushf
push
inc
idiv
into
popa
shl
mov
ss
inc
shl
pusha
jo
add
loope
push
cmp
pop
inc
scas
pop
jge
xor
movs
in
add
in
aam
retf
in
shl
xor
and
in
adc
test
jle
in
popa
inc
sbb
sbb
sahf
push
retf
mov
add
je
dec
jl
xor
mov
jne
adc
js
adc
push
cmc
or
push
add
int3
popf
cmp
(bad)
fcomp
pop
and
shl
and
aaa
(bad)
xchg
jecxz
push
sbb
ror
rol
int3
test
movs
mov
fiadd
or
js
rcl
or
or
ror
cmp
add
stos
shr
jge
adc
sub
jle
jg
xor
add
in
sub
mov
push
mov
mov
cmp
enter
mov
mov
jo
jmp
sub
lods
push
arpl
nop
push
mov
and
dec
pop
adc
cmp
fs
xchg
xchg
loopne
add
lds
adc
(bad)
int
push
pop
mov
fs
adc
jmp
je
sbb
push
dec
loope
push
adc
aam
call
add
fs
jmp
cmps
or
sahf
inc
je
(bad)
push
mov
dec
mov
call
push
jmp
adc
adc
inc
lods
add
xchg
add
mov
lahf
iret
sbb
sbb
and
pop
sub
sub
adc
fcomp
ss
pop
sub
enter
lea
add
jne
add
xchg
(bad)
mov
adc
add
jbe
mov
nop
clc
loop
call
add
push
hlt
jae
mov
hlt
sbb
and
jge
mov
push
ja
imul
push
test
pop
xor
cmp
aad
rol
cmc
xor
dec
mov
movs
les
or
fcmovu
enter
shr
clc
push
(bad)
mov
retf
jae
mov
add
cmps
sub
push
gs
adc
mov
call
movs
cmp
mov
adc
shl
and
xchg
jmpw
push
lds
(bad)
xchg
out
imul
leave
mov
into
dec
retf
inc
int3
push
xchg
movs
cmp
int
into
push
push
iret
cmp
xchg
add
imul
dec
cmp
push
sbb
fwait
push
xor
push
cmc
sbb
mov
es
mov
inc
cwde
ins
xchg
add
mov
pop
add
xchg
xchg
xchg
xchg
aaa
add
xchg
scas
mov
imul
xchg
imul
out
in
imul
xchg
mov
mov
push
ins
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
lahf
iret
xchg
mov
lods
(bad)
dec
imul
rol
inc
mov
xor
xor
xor
xor
xor
inc
xor
xchg
mov
mov
lea
or
data16
imul
(bad)
shl
add
mov
xor
lds
je
(bad)
or
dec
mov
dec
daa
leave
sbb
sbb
dec
ja
xor
int3
int
add
xor
mov
add
adc
push
mov
dec
mov
cmp
sbb
dec
adc
aad
(bad)
push
sbb
je
ds
sbb
push
xor
std
es
xchg
add
jne
mov
jo
out
push
shl
rol
sbb
jne
in
xor
pop
cs
retf
(bad)
dec
enter
retf
pop
retf
in
mov
into
push
iret
pop
rcr
das
ror
rcl
aad
int
imul
xlat
push
fst
ficomp
pop
xlat
sub
fmul
sub
pop
fistp
pop
mov
inc
loopne
loope
pop
jecxz
jmp
ins
xlat
sub
aas
out
movntq
out
pop
jmp
scas
jmp
cmp
ins
xrstor
int
lock
mov
repnz
in
jmp
hlt
xor
das
mul
idiv
clc
inc
pop
xlat
xor
sti
das
cld
dec
std
and
ja
xor
(bad)
cmp
xor
scas
sub
rcl
cmps
sub
out
fs
dec
sbb
jno
pop
mov
int
sub
mov
mov
mov
sub
shr
dec
mov
leave
shr
mov
sub
shr
push
mov
sbb
imul
push
lods
out
inc
jns
dec
inc
sbb
dec
pusha
pushf
xchg
jne
sub
sbb
dec
fs
loopne
fs
out
repnz
out
(bad)
fs
rcr
mov
jae
(bad)
fadd
aad
cmp
fs
push
dec
fcmovu
xlat
fadd
enter
shr
enter
rol
rol
enter
ffree
in
enter
rol
enter
(bad)
out
mul
enter
jnp
ffreep
enter
fadd
shl
out
enter
repnz
(bad)
daa
pushf
ins
iret
(bad)
push
or
sub
push
fldcw
push
imul
outs
jo
leave
leave
ins
outs
outs
aam
cwde
pushf
popf
popf
pop
jno
jb
jae
movs
sub
sti
fcmovbe
(bad)
or
iret
out
(bad)
(bad)
(bad)
ffree
mov
sbb
add
xchg
xchg
movs
cmp
xchg
or
sahf
call
call
pop
pushf
retf
push
imul
dec
mov
imul
imul
lds
xchg
xchg
fdiv
dec
ror
add
jg
sub
cmp
jne
test
mov
mov
mov
mov
mov
mov
(bad)
sub
mov
jns
cmp
mov
retf
mov
sub
mov
sub
aaa
adc
enter
sub
adc
es
mov
sub
mov
retf
mov
or
cs
adc
cmp
dec
or
leave
mov
or
adc
rsm
jne
xlat
xor
lods
push
scas
dec
scas
(bad)
mov
mov
push
sbb
xor
sbb
mov
xor
popf
or
and
mov
mov
add
test
pop
mov
add
call
call
xchg
lea
mov
call
adc
push
xor
pop
cmp
jmp
dec
push
sti
push
inc
cmp
fdivr
call
push
or
mov
push
shr
cs
xor
adc
std
jmp
cmovae
loop
add
jle
push
push
mov
popa
fsub
ins
add
int
cmps
imul
cmps
imul
pop
pop
inc
sbb
xor
xor
lods
loopne
pop
retf
(bad)
cmps
imul
lea
aad
aad
ret
retf
mov
int
repz
xchg
gs
int
(bad)
repz
adc
enter
in
push
adc
in
loop
into
ret
mov
or
jmp
les
imul
and
jl
imul
and
cmp
cmp
and
(bad)
(bad)
bound
add
add
dec
and
cmp
add
retf
mov
inc
xlat
sbb
sahf
stc
pop
add
cmps
imul
cmps
imul
add
mov
push
(bad)
inc
or
or
dec
sub
shr
js
outs
arpl
sub
shl
je
jae
push
ror
xchg
xor
xor
outs
jb
xor
xor
outs
outs
out
mov
sbb
mov
in
xchg
push
fcomp
cmp
mov
and
sbb
call
xchg
pop
call
xchg
mov
push
sbb
movs
cmp
call
adc
test
fwait
add
and
and
and
and
pop
add
and
and
and
and
xchg
pop
popa
xchg
(bad)
nop
mov
enter
test
mov
mov
cmp
add
sbb
movs
enter
sub
pop
or
inc
les
pop
mov
and
inc
jne
xlat
fiadd
fist
mov
jl
mov
or
loop
push
dec
xor
jp
push
sbb
enter
nop
add
dec
scas
dec
inc
push
xor
hlt
add
fdivr
sbb
pop
retf
test
push
enter
dec
les
pop
les
add
lods
mov
push
in
fimul
adc
push
cmp
mov
rol
in
mov
jle
dec
and
ror
add
clc
pop
push
les
or
loopne
out
daa
call
add
xor
or
cmc
addr16
mov
mov
cmp
cvtdq2ps
push
retf
sub
adc
mov
xor
xchg
mov
sbb
test
ds
xchg
(bad)
fldcw
mov
sub
add
sbb
je
push
mov
sbb
cmp
mov
or
shl
hlt
inc
movs
and
add
lods
sbb
xchg
xchg
stos
pusha
mov
daa
imul
cmps
imul
imul
mov
add
inc
cdq
xchg
adc
push
or
sbb
push
les
dec
es
or
inc
ss
mov
mov
cmp
dec
pop
push
nop
xchg
test
sub
xor
sub
dec
fsub
iret
xchg
push
sub
adc
ja
mov
mov
jo
enter
dec
lock
pop
cld
pop
adc
test
enter
adc
enter
pop
push
lock
add
or
test
push
mov
(bad)
in
adc
or
addr16
pop
jg
add
sub
pusha
mov
xchg
sub
call
mov
mov
je
mov
inc
ds
rcl
inc
test
movs
sub
ss
push
and
aam
adc
pop
push
xchg
add
cmp
jp
or
call
add
imul
in
repnz
cmp
inc
repz
push
retf
rcl
xor
and
and
daa
loopne
test
stc
cs
test
aad
sbb
pop
cmp
sbb
mov
pop
add
inc
add
push
cmp
dec
xor
call
add
or
push
mov
add
push
dec
cmc
pop
add
or
adc
int3
xor
pop
ja
push
adc
add
adc
pop
add
call
push
dec
push
call
popa
add
dec
mov
or
jo
xor
inc
pop
add
popf
dec
xchg
add
mov
mov
xchg
sub
daa
xchg
adc
add
int3
adc
jb
pop
outs
pop
jmp
ret
in
fcomp
fwait
in
fucomip
out
lds
lock
icebp
cmps
or
repnz
pop
repz
mov
fcom
in
and
xor
cmp
add
xor
xchg
dec
gs
mov
iret
or
add
repnz
mov
or
stos
into
add
xor
and
(bad)
fmul
push
add
leave
mov
mov
fisub
imul
ficom
add
cwde
or
pop
std
out
xor
xor
pop
loopne
mov
add
mov
fist
pop
add
add
or
push
add
add
adc
pushfw
pop
jne
mov
fst
ret
sbb
addr16
fisttp
add
in
lock
jl
cmp
and
bound
das
adc
lds
pop
sub
adc
push
je
push
pop
push
xchg
out
xor
add
loop
add
sub
movs
pop
fsubrp
int3
aam
push
add
mov
pop
or
jne
adc
ins
fmul
or
pop
xor
mov
in
jno
mov
call
add
sbb
adc
clc
and
add
cmp
add
int3
movs
add
dec
add
or
inc
push
scas
in
cwde
in
setl
adc
ja
and
pusha
and
fldcw
adc
test
adc
xchg
or
imul
pop
pand
cs
pop
dec
or
js
retf
outs
mov
jns
pop
and
in
iret
cmp
jle
adc
add
adc
and
lea
je
jo
shr
or
dec
ror
adc
push
cmp
push
mov
add
add
lea
add
dec
mov
lock
clc
add
shr
sub
mov
je
stc
push
and
sub
cmp
mov
mov
packssdw
push
pop
fs
push
sub
add
push
and
adc
mov
and
push
and
inc
sub
push
cmp
add
call
or
ins
or
or
add
popf
dec
(bad)
inc
ins
or
scas
test
add
cmp
jae
xchg
fs
or
xor
add
aam
and
adc
lock
adc
sti
push
test
ret
pop
aaa
push
stos
sub
rol
movups
fdivr
dec
daa
add
sub
aam
xor
sar
push
mov
sub
cmps
jge
jbe
mov
enter
pop
ins
mov
sbb
or
js
push
mov
das
adc
xor
js
ins
test
adc
push
xchg
int3
shl
or
adc
cwde
jle
outs
adc
loopne
and
and
cmp
imul
call
mov
in
xchg
fnstenv
lea
jae
add
enter
and
cmp
lods
mov
pop
push
loopne
and
clc
pop
mov
or
cmc
add
push
mov
arpl
mov
stc
pop
sbb
lock
retf
fcomp
cmp
adc
cmp
or
xor
lock
sbb
pop
repz
clc
cmp
cmp
mov
fld
sar
(bad)
fiadd
cmp
xor
shl
pop
call
shr
jae
push
add
xchg
(bad)
icebp
cmp
push
repnz
add
int3
dec
inc
sub
sbb
dec
shl
daa
mov
mov
jnp
pop
add
lea
scas
inc
(bad)
shr
enter
pop
jmp
sbb
and
adc
mov
mov
mov
inc
sub
imul
cs
mov
mov
cmp
jne
adc
push
sbb
loope
jmp
jo
xor
arpl
enter
pop
pop
push
push
ins
dec
imul
pop
pushf
fdiv
out
popa
mov
xchg
mov
(bad)
jmp
xlat
inc
mov
mov
lock
xor
ins
ret
or
xor
cmp
or
pop
(bad)
sbb
add
push
in
loopne
xchg
or
fcom
dec
bound
enter
sub
jmp
sub
lock
aam
mov
add
sub
dec
pusha
adc
mov
add
add
adc
retf
push
mov
adc
adc
fadd
cmps
or
leave
add
cmp
push
push
pop
add
or
je
inc
int3
mov
pop
xor
shl
pusha
add
add
(bad)
daa
fs
mov
sbb
out
int
add
or
inc
and
dec
mov
jle
lods
fld
cmps
pop
sbb
(bad)
out
ja
mov
adc
mov
adc
mov
jmp
xor
cmp
dec
ss
call
iret
and
dec
enter
lock
adc
dec
push
or
call
push
jne
sub
leave
test
add
cmp
add
dec
pop
push
stos
pop
inc
rol
or
cmp
clc
mov
inc
loop
jmp
adc
add
adc
es
pop
jl
inc
or
push
sar
aam
loopne
mov
sbb
xor
sub
sbb
adc
sbb
push
xor
inc
loopne
jnp
xchg
or
jl
push
cmp
fld
je
cld
dec
lock
inc
int3
adc
jo
xchg
or
or
adc
cwde
sub
pop
mov
or
movs
cmp
xchg
pop
call
xchg
movs
pop
call
pop
mov
or
cmp
xchg
fadd
enter
lock
mov
or
icebp
into
int3
and
mov
xlat
xchg
int3
call
and
xchg
gs
pop
sub
sub
gs
sub
and
pop
or
pop
call
jno
add
add
jle
in
xlat
stos
std
cmp
dec
add
enter
jno
or
xchg
mov
cld
fs
push
pop
imul
out
cli
ins
lds
imul
xchg
out
jb
mov
je
cmp
fidiv
xsha256
cmps
push
adc
cmp
cmp
push
fdivr
(bad)
mov
or
or
pop
sahf
inc
lahf
pop
mov
mov
dec
les
and
and
out
and
and
int3
(bad)
aad
and
and
into
xchg
fbld
or
adc
jb
push
push
push
xchg
aaa
push
xor
xor
sbb
imul
add
xor
inc
push
adc
adc
xor
imul
dec
add
mov
sub
inc
inc
push
out
adc
add
jae
std
or
add
or
or
xchg
jmp
jb
ret
or
jl
push
fisttp
pop
je
push
fdiv
jb
push
or
push
add
leave
sar
mov
loopne
aas
cmp
or
mov
es
and
js
adc
es
call
aas
adc
movs
mov
call
or
jl
dec
test
push
test
hlt
xlat
jo
mov
or
xor
lods
xor
sbb
inc
pop
pop
and
and
fcmovnbe
mov
dec
adc
lds
xlat
or
cmps
pop
std
pushf
mov
push
ss
adc
adc
pop
(bad)
and
add
adc
loope
xchg
push
inc
pop
xchg
xor
pop
cmp
xchg
(bad)
mov
cs
cs
js
hlt
or
mov
or
iret
icebp
clc
xor
sbb
jg
(bad)
adc
retf
dec
rcl
cld
mov
mov
push
sbb
jo
adc
enter
push
adc
mov
jmp
jnp
pop
cmp
xchg
aam
enter
fcomp
fcomp
and
fdivr
push
pop
mov
stos
mov
and
mov
mov
es
scas
or
sbb
pushf
sbb
inc
pusha
xchg
das
mov
std
pop
ja
loop
add
mov
inc
push
jnp
or
test
xor
outs
or
in
jo
mov
inc
repnz
loopne
aaa
xor
enter
mov
dec
dec
(bad)
xlat
in
(bad)
and
add
pop
dec
mov
jmp
out
add
das
daa
int3
das
mov
cdq
jb
lds
jne
xor
mov
adc
retf
push
cmp
lds
mov
les
xchg
clc
mov
xchg
adc
or
add
sbb
aad
add
dec
sub
fadd
dec
(bad)
lea
clc
mov
lods
dec
add
fdivrp
push
lds
inc
or
adc
mov
ds
and
cmp
add
push
movs
and
nop
or
inc
sbb
cli
jg
inc
push
sbb
pop
ins
or
pop
inc
xchg
mov
test
mov
shl
xchg
mov
pop
dec
std
dec
mov
jne
in
lods
lahf
das
in
dec
inc
bound
dec
pop
(bad)
das
outs
call
add
push
pop
adc
das
call
in
ret
lahf
adc
popf
call
loope
call
mov
jmp
xchg
add
ret
mov
mov
mov
pop
sub
fistp
cdq
stc
sub
lock
pop
or
or
cwde
stos
cld
adc
int
jmp
cmps
dec
rcr
lea
or
(bad)
pushf
call
lea
inc
jl
xchg
ins
pop
retf
pushf
and
and
mov
sbb
mov
ret
pop
push
cmp
push
pop
push
cli
add
aaa
jnp
js
pop
in
cmp
mov
daa
jge
inc
inc
and
adc
pop
cli
sbb
retf
pusha
sbb
mov
add
in
jmp
pusha
dec
jmp
dec
mov
imul
jl
sub
shl
iret
adc
and
xor
adc
jmp
pop
xor
sbb
in
fisttp
sub
sti
or
cmp
pop
ja
adc
add
mov
clc
cs
adc
add
clc
in
pop
sub
push
idiv
xchg
cmp
loope
xor
scas
add
or
mov
dec
jmp
sbb
je
adc
or
jmp
mov
add
push
sub
cmp
sbb
jae
adc
test
add
lods
push
jbe
mov
mov
mov
in
imul
push
fisttp
pop
inc
and
xor
mov
(bad)
jge
leave
and
ss
cmp
fwait
icebp
jno
jo
push
aas
mov
mov
sbb
out
in
or
add
jle
leave
mov
mov
add
add
fsubrp
inc
push
stos
sub
aad
add
arpl
jecxz
push
lods
or
or
or
ins
push
stos
xor
mov
movs
adc
lock
cmp
sbb
mov
mov
inc
push
xlat
or
jae
sub
int3
inc
jo
ret
ja
sbb
adc
adc
xor
sbb
or
ins
cmp
pop
sub
clc
lods
cld
dec
xor
hlt
mov
push
sub
inc
and
arpl
iret
sbb
pop
or
xlat
fmul
(bad)
clc
outs
data16
adc
sub
cmp
adc
enter
and
ldmxcsr
jne
jae
repnz
cdq
jp
mov
adc
in
loope
imul
and
xor
in
lock
adc
sbb
lock
sar
out
add
cld
in
fwait
gs
cs
and
cld
clc
daa
pop
(bad)
sahf
cld
adc
cld
add
ins
pusha
add
call
mov
sar
enter
mov
std
mov
mov
lods
je
sbb
dec
or
sub
xchg
adc
(bad)
movs
jnp
sbb
test
dec
adc
add
mov
lods
jmp
jg
mov
jl
sub
push
and
xchg
or
mov
sbb
sbb
outs
mov
hlt
fdiv
sbb
ror
xchg
jmp
cmp
push
sub
fs
sbb
add
or
adc
or
pmaddwd
lods
aas
icebp
sub
mov
and
push
add
stos
retf
mov
cmp
loopne
das
ss
je
push
jecxz
pop
mov
int3
pop
jp
push
sbb
pop
jecxz
jmp
and
cmp
je
inc
icebp
pushf
jmp
xor
push
cdq
sti
or
stc
add
enter
xchg
push
inc
adc
enter
adc
or
mov
in
jg
nop
or
mov
pop
hlt
or
mov
(bad)
mov
mov
arpl
cmp
dec
das
adc
mov
scas
loopne
cmp
dec
add
push
sar
in
lahf
inc
imul
or
bound
mov
inc
mov
(bad)
and
and
or
and
loop
and
add
push
inc
or
cld
adc
add
push
and
adc
mov
ss
xchg
lds
xor
ret
outs
push
retf
jo
add
test
and
dec
xor
or
push
and
jecxz
lods
mov
or
nop
movs
and
int3
sub
adc
mov
iret
imul
clc
sub
sub
xchg
mov
push
jmp
aaa
scas
jl
jne
add
jbe
shl
add
adc
sbb
inc
sub
out
add
pushf
pop
rcl
imul
into
aam
mov
jl
push
or
dec
scas
outs
jle
jb
sbb
rcr
data16
ror
arpl
in
cmp
jnp
test
dec
add
and
cmp
dec
jmp
mov
hlt
out
das
xlat
imul
mov
adc
xchg
shl
add
je
pop
ficom
arpl
or
ja
push
or
and
sbb
test
or
gs
gs
cs
or
cwde
inc
sub
mov
ins
sbb
pop
(bad)
adc
xchg
sub
cld
(bad)
add
mov
test
das
xchg
push
movs
sub
xchg
shl
lods
hlt
push
lock
sbb
cmp
or
sbb
pushf
mov
push
push
fcom
mov
add
inc
jne
xor
(bad)
fsub
dec
ror
mov
sbb
lock
jmp
(bad)
hlt
jo
shr
cmp
sahf
jge
enter
sbb
mov
icebp
nop
pop
ret
push
or
jbe
test
or
test
sbb
ror
mov
fst
adc
cld
in
pushf
(bad)
jp
aaa
pop
add
mov
jmp
sbb
int
int
xor
in
popf
dec
gs
cli
mov
fstp
std
sbb
dec
gs
add
jle
pop
add
pop
add
dec
fmulp
adc
add
dec
sar
enter
mov
inc
fsubr
lods
inc
bound
and
jns
pop
dec
hlt
push
mov
ret
pop
stc
cmp
popa
xchg
jne
cld
push
jl
ror
cmp
loopne
cld
pop
add
mov
xchg
jns
add
push
ja
hlt
shl
ret
(bad)
or
mov
imul
mov
push
adc
fcmovu
adc
sbb
jae
mov
sbb
adc
dec
ror
sub
stc
jl
pop
icebp
push
pusha
mov
mov
test
cmp
pop
mov
retf
sar
inc
sub
inc
xchg
mov
enter
fild
nop
push
jb
sub
cld
jmp
and
cmp
adc
shl
sahf
push
jae
fcomp
fst
lahf
lods
adc
jle
lea
mov
inc
clc
jb
cli
neg
bound
ins
push
(bad)
mov
mov
mov
mov
xchg
mov
push
(bad)
int3
xor
mul
adc
(bad)
add
jae
dec
leave
sbb
out
loopne
adc
jp
dec
or
push
btc
(bad)
sub
ret
enter
pop
pop
adc
mov
adc
sbb
mov
jb
outs
hlt
add
push
add
test
dec
or
ret
fstp
and
or
pop
sahf
sbb
push
cmc
push
mov
std
in
aaa
jno
std
push
and
test
jmp
aaa
xor
sbb
add
lds
jbe
ins
ret
loope
fisub
ss
jnp
mov
dec
out
mov
rol
fmul
loopne
aam
mov
mov
and
(bad)
cmp
ins
mov
lock
push
xor
movs
mul
add
movs
mov
or
fcom
sub
xchg
adc
out
daa
retf
enter
push
clc
clc
push
dec
and
ins
enter
mov
movs
xor
fs
jno
sub
repnz
sub
ins
dec
mov
mov
or
sub
mov
popa
hlt
pop
(bad)
pushf
cmp
sub
lahf
adc
in
in
mov
inc
mov
and
xchg
pop
add
sub
sub
dec
cld
(bad)
hlt
push
adc
(bad)
and
mov
jns
add
inc
jb
pop
pop
retf
ret
pop
mov
adc
imul
add
neg
push
adc
fimul
inc
or
add
and
dec
add
cld
dec
(bad)
push
add
inc
adc
fwait
pop
hlt
inc
add
ins
cmp
pop
into
mov
xor
fld
fs
aas
mov
adc
and
xor
or
pop
mov
je
mov
in
in
shr
cmp
push
ret
mov
xor
push
xchg
adc
(bad)
pushf
jmp
cdq
aas
jae
mov
lock
test
lods
adc
fidivr
add
jge
mov
mov
adc
add
sub
jmp
adc
cmp
das
add
push
enter
loop
int
int3
or
in
dec
outs
adc
inc
jb
fsubr
sahf
xchg
xchg
sbb
fsubr
add
mov
inc
add
retf
jo
mov
jmp
ins
outs
imul
push
add
jmp
ins
or
test
cli
xor
push
push
ins
shl
rcl
inc
sub
adc
clc
movs
test
sub
dec
(bad)
cdq
ins
fs
iret
dec
adc
push
ret
shr
or
sub
xchg
or
sub
add
ds
jmp
ror
cmp
add
jae
push
test
and
push
adc
iret
adc
popa
or
cvttps2pi
push
das
aam
push
cmc
mov
sub
add
or
aaa
das
or
inc
enter
cmp
and
pop
(bad)
pushf
xlat
pushf
rcl
add
inc
int3
add
cmp
add
sbb
pop
leave
pop
xor
ficomp
lods
addr16
adc
cmp
lods
cmp
adc
pop
(bad)
in
out
clc
push
shl
cmc
mov
or
addr16
dec
or
inc
(bad)
jmp
push
sbb
adc
xchg
ret
fdiv
scas
sahf
sub
mov
xor
popf
das
clc
sub
shr
div
adc
das
cli
call
or
push
lds
pop
in
jno
test
(bad)
push
clc
jae
test
jbe
call
ror
mov
div
stos
mov
jbe
or
add
test
push
add
cwde
fdiv
jne
mov
mov
or
add
mov
mov
add
pop
into
and
adc
inc
fwait
or
inc
mov
or
push
icebp
xchg
je
and
enter
nop
pushf
mov
out
and
jg
pusha
pop
ret
mov
push
push
sbb
inc
repz
push
mov
pop
mov
mov
pop
push
or
sbb
in
gs
ja
cmp
mov
les
out
xlat
mov
or
pop
dec
jae
pop
cmp
pusha
inc
push
mov
push
mov
sbb
ret
jne
jmp
or
repnz
dec
jle
jbe
add
xor
dec
iret
adc
clc
xchg
test
push
adc
cmc
mov
in
mov
mov
add
iret
mov
xchg
in
pushf
in
push
mov
dec
push
xchg
xchg
jp
in
dec
or
sbb
into
cdq
in
jb
push
iret
xor
test
je
push
es
mov
repnz
push
into
push
in
mov
std
jae
inc
mov
add
loope
adc
mov
mov
leave
and
test
add
fs
stc
sbb
or
pop
jmp
cwde
mov
pop
mov
push
push
mov
sahf
dec
or
arpl
pop
or
sub
push
repz
jmp
outs
mov
je
mov
ret
sbb
out
fidivr
add
or
fmul
mov
adc
mov
mov
jae
push
sbb
adc
xor
jmp
xor
xor
sub
lea
mov
retf
or
push
imul
lock
ret
push
mov
inc
mov
or
stos
mov
sub
pop
pop
inc
jne
push
add
arpl
arpl
pop
popa
iret
push
inc
or
mov
data16
shr
rol
ins
and
pop
sub
in
(bad)
mov
stc
cmp
xor
adc
sub
push
jb
mov
jge
and
bound
dec
push
xchg
add
mov
iret
push
mov
pop
ins
pop
add
pop
int3
in
and
or
adc
or
scas
jge
je
pop
sub
fbstp
outs
push
mov
mul
sbb
test
mov
add
dec
mov
outs
mov
xchg
cmc
sub
sti
jb
(bad)
sub
ins
mov
out
sub
add
int3
retf
mov
or
inc
cmp
jb
test
out
rcl
push
jne
adc
ret
cmp
mov
dec
mov
inc
sti
cld
fld
dec
inc
add
sti
fdivr
(bad)
jb
mov
jmp
scas
push
(bad)
push
fwait
sti
mov
and
inc
dec
movs
pop
jg
jl
js
stos
fisttp
(bad)
jp
in
hlt
xor
xor
sub
out
sbb
out
test
jne
inc
push
push
push
sbb
xchg
mov
ja
enter
push
sbb
out
mov
iret
cmp
outs
icebp
fisttp
(bad)
cmp
jbe
clc
jb
adc
mov
shr
and
jbe
mov
rep
jmp
mov
cmps
movs
jb
loopne
add
pop
test
shr
(bad)
enter
nop
adc
or
loopne
or
xor
ror
ds
mov
sbb
(bad)
xchg
cmp
int3
lea
sub
add
add
nop
and
inc
aas
mov
jne
push
scas
add
jg
xor
je
mov
mov
call
call
shl
clc
cld
ret
add
mov
lock
or
out
sbb
fdiv
or
pop
pop
mov
popf
or
rol
loope
ret
or
sub
cmp
jg
fisttp
and
std
jecxz
ja
jo
or
pop
dec
fst
sub
pop
and
mov
push
add
add
mov
pop
dec
push
mov
and
mov
ins
inc
mov
daa
and
retf
stos
sub
add
cmps
imul
imul
sbb
call
adc
adc
cmps
imul
cmp
add
push
mov
add
mov
mov
lock
xchg
in
inc
mov
out
sub
and
or
stos
je
test
enter
cmp
jne
inc
inc
dec
je
or
mov
loope
mov
push
add
cmp
(bad)
fbld
hlt
call
mov
mov
je
repz
je
out
push
lods
daa
stos
repnz
cld
and
lock
out
pop
push
adc
jmp
fbstp
fdivr
xor
les
retf
arpl
mov
sbb
out
jne
push
adc
and
and
add
mov
push
pop
lods
(bad)
mov
xor
aaa
xor
pop
cmp
mov
scas
inc
inc
xor
ret
pop
sbb
or
dec
adc
sar
mov
lods
fs
test
pop
xor
je
push
punpcklbw
fild
push
fadd
mov
test
pop
push
fdiv
scas
jge
mov
lods
jbe
mov
in
adc
in
xor
ins
ror
lock
(bad)
push
dec
mov
add
and
mov
pop
mov
push
mov
pop
cmp
outs
(bad)
sar
fcos
ror
rcr
mov
retf
dec
dec
test
and
adc
or
sysenter
std
pop
outs
push
jo
pop
xchg
push
outs
test
aam
sub
test
in
movs
mov
dec
cld
jbe
sti
push
xor
cmp
adc
ins
loopne
mov
pop
jg
rcr
nop
mov
sub
jge
push
cmp
lock
aaa
or
pop
xchg
jno
cmp
sbb
pop
mov
(bad)
adc
loopne
mov
outs
jg
inc
shl
stos
adc
mov
out
jbe
(bad)
jnp
and
or
mov
mov
jge
cmp
mov
push
(bad)
ja
cmp
jl
add
and
not
jmp
adc
je
sar
mov
gs
add
or
mov
and
mov
pop
jmp
push
or
or
inc
or
xor
cmp
ss
sbb
adc
push
scas
adc
mov
inc
(bad)
or
jo
adc
cdq
cmp
nop
xor
popa
jp
adc
lods
inc
aaa
popa
scas
out
sub
jp
call
out
ret
cmp
xor
in
shl
retf
jae
or
add
imul
adc
test
pusha
test
xor
aaa
cmps
test
xor
test
xchg
add
int3
add
retf
sbb
test
push
sbb
sub
lods
pop
mov
inc
dec
jne
jnp
int
jb
jl
adc
ret
mov
stos
cmp
and
pop
loopne
and
push
daa
mov
add
adc
mov
icebp
outs
push
sar
icebp
jae
inc
add
out
xor
cmp
cmp
add
add
shl
push
push
inc
enter
push
add
mov
sbb
pop
das
jo
call
push
push
and
les
sub
mov
dec
les
pop
jl
xchg
adc
fstp
sub
call
ret
pop
mov
fprem1
mov
lock
mov
or
push
mov
inc
xlat
push
mov
mov
xor
push
imul
int
loopne
iret
push
inc
xor
pop
inc
xor
cmp
jle
inc
in
inc
(bad)
mov
add
lea
and
jge
jae
or
popa
les
(bad)
out
(bad)
inc
inc
push
push
lea
test
pop
pop
inc
fadd
xor
and
xlat
xor
xchg
ss
lahf
ins
or
add
push
or
loopne
xlat
cmp
xor
mov
jmp
or
sbb
or
ins
aas
or
push
xchg
mov
test
sbb
add
push
and
(bad)
adc
shl
nop
xchg
aad
pop
push
add
mov
pcmpeqb
stos
adc
or
push
lods
aad
sbb
xchg
add
inc
aam
aad
ds
jne
test
pop
mov
mov
pop
jle
push
push
jmp
push
cs
sub
outs
sub
or
ficomp
push
cmp
shl
xor
push
mov
inc
or
fdivrp
xor
or
cmp
mov
mov
mov
rcl
xor
scas
and
(bad)
sbb
pop
xchg
rcr
cmp
dec
(bad)
sbb
bound
pop
mov
aad
(bad)
pop
mov
clc
inc
push
dec
sub
pop
stos
sbb
mov
pop
sub
pusha
ret
je
pop
in
aas
lea
rol
adc
add
xchg
loopne
(bad)
mov
push
jne
mov
add
add
fdivr
test
jl
xor
in
test
shl
pop
pop
jmp
lea
push
es
fs
sub
ret
or
std
cld
lock
dec
sub
sub
pop
jb
jo
int3
sbb
or
fstp
std
inc
mov
pop
adc
push
shr
push
(bad)
js
popf
inc
mov
mov
data16
mov
daa
int
pop
or
mov
out
daa
int
int
and
xor
or
loopne
jne
mov
outs
sbb
adc
adc
cmp
add
or
jmp
mov
sub
lea
pop
mov
std
pop
push
movzx
cli
clc
test
fwait
lods
shr
or
leave
std
clc
imul
adc
cmp
fnclex
ret
mov
aas
fwait
mov
xor
or
and
das
js
xchg
jmp
xchg
test
std
scas
out
inc
hlt
fstcw
fwait
in
or
data16
ins
cld
fistp
into
sbb
(bad)
jge
clc
enter
test
adc
xchg
pop
jle
pop
or
inc
or
adc
dec
stos
lock
cmp
pop
jmp
jae
loop
std
clc
adc
add
xchg
out
dec
sbb
jo
dec
adc
push
sahf
add
mov
cwde
in
pop
enter
push
push
(bad)
or
pop
cmp
dec
jb
movs
stos
gs
out
mov
push
mov
and
mov
dec
lock
ficom
pop
loop
push
lea
cmp
jb
push
test
out
add
mov
xchg
mov
mov
cwde
lock
pop
outs
sti
fcmovnu
fsubr
sub
bound
mov
adc
push
jo
and
mov
daa
push
mov
and
xor
movs
and
dec
or
mov
pop
and
and
push
mov
jmp
std
jmp
push
push
in
test
mov
lods
jle
das
pop
mov
inc
(bad)
out
jmp
mov
adc
mov
outs
imul
xor
sbb
test
and
fsubr
cmp
or
(bad)
lods
or
cmp
pop
cmps
add
aaa
jo
add
lock
cmp
and
cmp
adc
jbe
adc
add
jge
pusha
push
outs
or
mov
nop
cmp
shl
inc
dec
inc
mov
fild
xor
adc
test
pop
xor
xor
pop
ror
leave
ror
add
test
xchg
dec
xchg
xchg
je
or
xor
mov
inc
xor
je
int3
lods
out
mov
adc
adc
aam
xchg
outs
fild
adc
pop
pop
pop
mov
sub
data16
jmp
push
add
mov
iret
ret
sub
cld
mov
and
jmp
push
or
lods
std
cbw
enter
(bad)
cmp
std
inc
sub
and
scas
das
jns
jns
sbb
sbb
dec
cmp
pop
jl
add
add
inc
pop
adc
sbb
ss
sbb
fild
fisttp
int3
add
mov
cmps
lods
movs
pushf
das
int
xor
add
or
inc
inc
xor
das
sbb
inc
sbb
or
je
adc
das
enter
sbb
jne
push
pop
push
xor
cmp
shl
fs
inc
adc
pop
inc
xor
xlat
add
mov
add
repnz
or
adc
mov
lock
arpl
ins
cmc
loopne
or
pop
xchg
or
add
push
cmp
inc
lods
cmp
rcr
ret
jle
repz
xor
and
jge
imul
jb
movs
mov
fs
scas
ins
mov
add
add
adc
dec
adc
add
inc
aad
jae
dec
sbb
and
imul
pop
xchg
in
loopne
sbb
push
rcr
mov
jno
fcmovnbe
pop
test
sbb
or
cmp
retf
jbe
scas
js
add
pop
retf
xor
xchg
gs
xor
add
(bad)
ss
scas
sub
add
clc
in
ins
shl
mov
mov
popf
adc
fmul
mov
jae
dec
ud0
sbb
dec
xor
xchg
nop
test
mov
mov
fsub
fmul
popa
push
sbb
int3
data16
or
call
inc
and
(bad)
dec
es
mov
jbe
adc
adc
rol
jne
and
mov
push
or
adc
enter
imul
arpl
dec
je
fild
sbb
ja
pop
jbe
shr
(bad)
mov
push
cmp
jge
or
dec
push
movs
push
push
cs
or
lahf
jnp
test
inc
adc
mov
mov
inc
or
xlat
fsubr
push
scas
lock
inc
ja
adc
add
add
jae
ds
pushf
daa
pop
dec
or
mov
fimul
mov
mov
adc
daa
movs
mov
test
je
dec
xchg
mov
jne
or
hlt
jb
idiv
fst
movs
es
pop
cli
shl
pop
push
lahf
mov
call
jmp
imul
mov
imul
jne
cmp
jle
inc
or
aam
pop
mov
dec
push
push
pop
push
mov
push
cwde
enter
push
pop
scas
jmp
push
adc
loope
and
xor
je
push
fcmovb
aaa
cs
test
or
bound
or
imul
fdivr
test
dec
pop
pusha
fistp
in
aaa
push
push
and
inc
jns
xor
mov
add
and
sbb
jb
cmp
out
pop
mov
rcr
push
xchg
clc
dec
jne
in
add
pop
push
sbb
push
inc
xchg
aam
leave
nop
sub
sti
xchg
call
test
cmp
jmp
push
icebp
pop
and
mov
push
push
pop
fs
lods
sub
retf
sbb
sub
(bad)
push
aas
pop
lds
jmp
cmp
sbb
sbb
adc
int
stos
and
call
adc
xor
popa
lds
add
and
stc
or
push
sbb
or
push
leave
inc
sti
mov
inc
add
or
out
adc
pop
mov
or
sub
mov
mov
sub
xor
je
sbb
and
pop
dec
outs
inc
add
inc
add
pop
dec
pop
mov
inc
inc
push
mov
sub
sbb
and
add
into
popf
rcr
rcr
or
or
sub
(bad)
push
push
ret
out
jmp
ins
cld
adc
push
mov
or
mov
sahf
jge
test
hlt
xchg
lock
inc
jnp
popf
ins
xchg
mov
iret
dec
mov
sub
mov
push
xor
cmp
popf
mov
push
xor
dec
cmp
push
(bad)
out
(bad)
xor
cmp
sahf
xor
xchg
or
adc
ja
popa
ins
aad
push
jp
inc
mov
push
mov
ja
dec
out
mov
push
jns
cs
mov
(bad)
sub
sub
stos
cld
into
cmp
repnz
scas
fimul
nop
fdiv
push
mov
int3
call
cmp
lods
out
jne
lahf
push
add
movs
dec
ss
xor
jae
jo
push
fisttp
adc
jns
sbb
cmp
jne
add
sbb
gs
push
push
cwde
mov
pop
cwde
test
mov
adc
into
outs
push
pop
fimul
je
adc
(bad)
fneni(8087
mov
ins
push
inc
sub
mov
push
cmp
xchg
aam
push
mov
clc
sub
aas
pop
push
jae
mov
shr
mov
aam
icebp
sub
dec
lahf
daa
std
sbb
inc
jne
push
pop
shr
and
and
hlt
and
mov
or
imul
push
fmul
cmp
push
inc
pusha
lods
jo
adc
cwde
sahf
jo
add
push
je
call
jecxz
dec
adc
and
push
or
loope
ret
dec
sbb
mov
sbb
(bad)
dec
rcl
cmp
add
sbb
inc
xchg
jae
pop
push
or
cld
xor
pop
or
adc
jnp
out
add
jge
add
xchg
call
mov
shl
shl
mov
push
mov
jo
loope
add
fisubr
adc
pusha
popa
and
add
and
sub
dec
push
cmp
inc
loope
outs
push
fidivr
sub
pop
xor
cmp
mov
(bad)
xchg
stos
adc
in
sbb
jns
sub
inc
jo
or
ins
jmp
rcr
jo
or
ja
inc
loopne
adc
shr
out
inc
cs
pop
into
jne
push
jmp
xchg
lea
mov
pop
pop
inc
pop
sub
or
and
push
loope
mov
xchg
sahf
icebp
mov
add
lea
(bad)
mov
sbb
xor
push
xor
mov
mov
stos
out
mov
dec
aam
mov
sbb
and
rcl
jl
sbb
dec
inc
neg
inc
repz
mov
adc
mov
add
mov
mov
inc
cmp
sub
jl
jae
sub
clc
jne
pushf
dec
outs
jo
mov
push
jb
pop
cwde
ja
sub
clc
rcr
jl
sub
cs
adc
or
gs
push
add
leave
sbb
sbb
lds
or
xchg
stc
cmc
or
pop
mov
and
sbb
and
mov
lock
ss
add
mov
sub
sub
mov
daa
call
sbb
stc
clc
pop
pop
cmp
sbb
dec
add
sub
pop
pop
add
clc
pop
jmp
add
sbb
pop
repz
movs
or
and
mov
rcl
jne
mov
cld
mov
mov
sbb
add
pop
cmp
and
pop
mov
mov
sub
cmps
repz
stos
fisubr
pop
adc
inc
fld
fiadd
test
push
outs
test
pop
fdivp
pop
sti
pop
repz
or
mov
cmp
sbb
neg
test
test
or
test
adc
jo
(bad)
test
pop
cmp
shl
xchg
jp
push
lock
pop
pushf
mov
fcomi
sub
lea
push
pop
sbb
jmp
adc
fdivr
mov
int3
sti
loop
mov
sbb
ret
movs
add
aas
and
add
jns
cmp
jae
cmp
pop
mov
mov
mov
mov
adc
dec
pop
push
inc
pop
stos
les
imul
pusha
jmp
jmp
or
add
and
sbb
xchg
pop
sar
in
adc
inc
add
pop
and
xchg
adc
push
test
call
sbb
or
lea
add
add
repz
xor
in
or
hlt
jb
add
(bad)
or
lods
shl
push
add
test
xchg
das
add
or
test
(bad)
outs
fnsave
or
pop
mov
cmp
je
lock
fnstsw
test
out
enter
sub
cmp
gs
mov
sar
scas
inc
sbb
pop
push
or
xor
push
xor
or
pop
mov
pop
adc
fxch
clc
nop
add
(bad)
mov
add
dec
pop
pop
push
jmp
cli
mov
(bad)
fwait
add
push
xchg
fs
cmps
ss
xchg
sub
push
push
sub
pop
aaa
rol
cmp
ror
or
outs
sbb
jmp
sbb
ins
movs
lock
mov
call
mov
cmp
pop
cmp
je
cmp
mov
cmp
ret
mov
jecxz
and
or
xor
or
hlt
inc
add
inc
cmp
or
jecxz
pop
fistp
mov
rol
ds
sub
je
add
je
imul
push
hlt
dec
shrd
xor
cmp
leave
inc
xor
adc
mov
jge
jle
fimul
inc
jmp
mov
and
adc
fwait
mov
fisttp
add
mov
hlt
div
jne
or
cmp
bound
imul
je
add
jne
test
cmp
or
sub
jbe
out
mov
push
push
pop
pop
add
lea
push
push
cmp
or
loopne
ins
inc
sub
sahf
push
rcr
or
retf
jge
add
sbb
ins
pop
sub
loopne
jno
push
sbb
mov
inc
mov
shl
cmp
popf
js
leave
out
mov
ret
je
jne
aad
cmp
or
push
gs
aas
fs
jmp
mov
jmp
push
and
jge
outs
xor
push
push
push
or
sbb
or
in
sbb
cmp
cmp
jle
pop
add
or
pop
add
push
addr16
fstp
push
les
ret
mov
mov
dec
cmp
and
cmp
jle
icebp
cmp
jb
stc
and
sbb
adc
xor
movs
ret
imul
ins
dec
push
or
mov
pusha
or
ss
movs
push
rcr
jb
js
out
sub
mov
in
sub
aad
ror
sbb
pop
mov
or
out
add
sbb
mov
sahf
mov
daa
dec
sbb
inc
sar
inc
push
or
push
es
lea
sub
fs
jne
and
es
mov
push
je
ret
xchg
sbb
shr
mov
xchg
inc
cmp
inc
and
pop
push
xor
pop
or
or
and
cmp
and
cmp
push
cmp
ins
nop
add
push
and
mov
imul
add
pop
adc
cmp
call
leave
and
inc
mov
test
or
cmp
jb
jne
push
out
xor
cmp
adc
dec
dec
mov
jmp
dec
push
cmp
icebp
and
icebp
adc
mov
out
adc
adc
mov
or
popa
retf
dec
push
pop
pop
xor
adc
retf
and
push
outs
mov
cmp
test
pop
ret
push
loopne
pop
test
or
add
add
push
pop
xlat
push
jmp
test
rcl
or
fild
into
pop
test
mov
retf
sar
dec
push
push
rcl
push
adc
iret
enter
cld
and
xor
jle
cmp
mov
sbb
setg
push
or
cmp
out
xchg
test
cmp
push
stc
push
cmp
xchg
pop
or
jbe
pusha
ror
js
pop
push
call
(bad)
rol
out
sbb
out
ret
lods
cmp
div
mov
cmp
imul
dec
add
or
jne
out
adc
add
je
xor
(bad)
leave
hlt
call
pop
in
popa
sub
and
push
push
sub
xor
and
in
sbb
or
adc
sbb
fnstenv
cmp
ss
pop
xlat
push
hlt
and
push
mov
bound
cmp
mov
sbb
cmp
fsub
rcl
inc
push
jmp
adc
pop
test
add
inc
in
sar
fsubrp
ds
jp
je
mov
inc
and
dec
out
inc
jno
xor
pop
mov
cmp
mov
sbb
mov
test
push
push
pop
scas
repnz
addr16
xor
jbe
mov
jmp
and
xor
movs
mov
mov
push
and
mov
sbb
push
adc
imul
cmp
jbe
inc
and
xor
imul
and
loope
lea
and
cmp
imul
adc
test
pop
movs
sbb
add
ja
ret
hlt
test
fimul
pop
pop
mov
(bad)
pop
lock
pop
sbb
and
cmp
in
sbb
scas
mov
fdivr
div
inc
or
sbb
xchg
int
addr16
jg
fidiv
sbb
(bad)
mov
mov
sub
mov
dec
mov
mov
jge
lds
mov
fbstp
in
outs
out
xchg
addr16
(bad)
mov
add
pusha
xchg
lods
sub
mov
in
mov
mov
icebp
mov
nop
jno
cmp
xor
mov
push
mov
mov
inc
jmp
push
dec
clc
inc
mov
mov
mov
sbb
mov
mov
mov
std
add
int
or
cld
push
or
fld
and
push
in
inc
imul
and
or
lods
sbb
xchg
sbb
cmp
sbb
sbb
cwde
push
loopne
in
add
movs
pop
pop
movaps
pop
repnz
lock
xor
push
pop
inc
(bad)
push
mov
pop
mov
(bad)
fwait
sbb
sbb
adc
scas
pop
std
shr
jl
outs
aas
jne
jg
xor
ins
(bad)
xchg
pop
test
or
ret
add
inc
jle
xchg
loope
mov
mov
shr
add
(bad)
sub
leave
lock
push
sbb
inc
call
inc
inc
pop
or
imul
add
push
test
js
imul
dec
scas
add
jle
ss
in
or
mov
and
cdq
popf
and
std
mov
jmp
sub
cmp
mov
push
inc
push
sub
xchg
les
adc
pop
movs
fld
scas
mov
or
test
(bad)
push
sub
call
call
call
fnstsw
sahf
jbe
leave
mov
test
cmp
test
push
mov
push
mov
rol
inc
test
sbb
sahf
push
retf
ret
and
push
nop/reserved
push
inc
adc
addr16
mov
mov
pop
shr
paddusb
mov
mov
(bad)
mov
fild
repz
call
pop
fist
je
cmp
mov
pop
sti
fsubr
sbb
add
sbb
in
mov
cmp
cli
mov
add
add
adc
mov
test
sbb
fld
jmp
mov
add
or
fisubr
call
mov
sahf
dec
add
sbb
test
aam
inc
sbb
std
sub
inc
sub
dec
aad
mov
and
scas
mov
add
inc
add
lock
jmp
rol
push
sti
sbb
dec
addr16
cmp
cs
mov
pusha
inc
cmp
imul
inc
push
or
inc
jle
mov
fwait
or
rcl
add
lea
std
cwde
aas
call
adc
(bad)
mov
lea
and
add
add
push
iret
stos
push
fstp
call
cwde
icebp
inc
mov
aam
adc
enter
inc
ins
dec
or
inc
cmp
pop
add
jns
neg
adc
mov
fs
in
fs
pop
idiv
nop
xchg
out
mov
cdq
push
mov
push
or
ret
nop
mov
pop
inc
cmp
and
sbb
jb
mov
pop
sub
cmp
mov
test
cmp
shr
fcmove
cmc
mov
and
lock
pop
call
sub
push
ss
std
inc
sbb
stos
outs
cmp
clc
cmps
jle
pop
mov
das
pop
mov
test
inc
mov
(bad)
fs
fsubrp
pop
add
xchg
jl
fisub
sub
push
mov
(bad)
loop
aad
test
std
push
test
jle
push
jbe
(bad)
stc
push
sub
movs
fild
dec
cmp
setl
pop
jl
cmp
cld
jl
cmp
jge
hlt
or
stc
and
and
push
push
mov
adc
fst
push
mov
add
int
sub
adc
fwait
les
cmps
adc
aas
add
adc
push
inc
mov
sub
push
cmp
not
les
xchg
pop
pop
and
or
mov
mov
call
and
dec
xchg
dec
push
aam
or
sub
mov
push
les
adc
sub
sub
cmp
jl
push
(bad)
pop
outs
add
jg
dec
ret
mov
ja
lds
xor
test
push
lock
adc
dec
aaa
pop
dec
jle
in
jno
push
cmova
(bad)
into
(bad)
rol
jo
mov
nop
fisttp
sbb
dec
das
xchg
mov
sbb
add
pop
dec
dec
loope
retf
ret
cmps
inc
cmp
or
adc
cmp
add
sub
fstp
dec
lock
jge
cwde
inc
ds
daa
mov
mov
retf
std
or
jmp
clc
pop
out
or
sar
push
aaa
in
lods
or
je
ins
je
push
push
mov
push
or
adc
and
ds
mov
shl
mov
jl
xchg
les
test
aam
add
ret
mul
sbb
add
push
cld
sub
out
or
sub
sbb
xchg
loopne
push
clc
addr16
cmp
push
mov
xchg
mov
jle
fcom
in
push
test
lods
imul
jo
ins
adc
push
add
fcom
mul
sar
push
push
mov
mov
add
sbb
push
mov
add
std
mov
dec
push
dec
jl
ror
adc
out
lahf
ins
add
and
add
adc
inc
mov
and
imul
xchg
push
int
(bad)
icebp
xchg
push
ds
cmp
retf
dec
shl
shr
aam
fdiv
or
jge
add
popa
(bad)
(bad)
bound
inc
ror
in
pop
add
aas
mov
out
rcl
adc
pop
shr
jecxz
out
ret
popa
ss
mov
mov
loope
mov
or
add
movs
inc
fistp
xor
lds
test
sbb
add
sub
shl
inc
push
out
ja
mov
imul
xchg
sbb
dec
cmp
mov
mov
sub
xchg
and
pop
test
xlat
aaa
fidiv
push
sbb
ret
mov
not
cwde
aas
sub
loope
xor
lea
sub
add
popf
push
test
clc
test
das
aaa
and
mov
out
daa
cmp
ret
dec
inc
in
rcl
inc
sbb
aaa
cmp
icebp
es
stc
pop
cs
cmp
test
mov
test
push
jmp
inc
mov
and
pop
adc
jg
or
push
mov
and
or
sub
add
push
mov
pop
jno
or
mov
cmp
inc
cmp
arpl
fs
(bad)
fs
test
jmp
or
or
idiv
jmp
pop
xor
sbb
jg
jl
xor
adc
fdiv
fcmove
mov
cmp
and
mov
jnp
aaa
in
mov
jne
sbb
mov
inc
es
loopne
adc
mov
mov
xchg
dec
or
aad
mov
lock
mov
mov
in
test
mov
int
sbb
pop
int3
xor
hlt
hlt
mov
jmp
push
sub
mov
retf
add
xor
and
(bad)
or
mov
ins
lea
sbb
jmp
sbb
loopne
(bad)
outs
fsubr
es
push
mov
or
(bad)
mov
add
fcomp
push
ins
jnp
inc
sub
add
sbb
popw
(bad)
adc
inc
loopne
and
jnp
add
fimul
adc
add
test
add
sbb
rol
mov
fld
add
mov
push
inc
adc
jle
push
mov
dec
(bad)
cmp
pop
inc
in
inc
mov
dec
fcmovnbe
mov
fld
ja
add
movs
ror
movs
pop
jae
adc
xor
or
adc
clc
call
inc
les
inc
xchg
mov
call
cmp
jg
pop
aas
push
dec
js
mov
mov
rcr
add
add
pop
or
call
jne
sbb
ds
mov
adc
adc
je
push
push
push
and
scas
ffree
add
fadd
dec
cmp
jb
jmp
adc
xor
loop
aas
ret
dec
loop
out
or
add
adc
(bad)
or
inc
or
ja
cld
sbb
sbb
mov
call
and
je
rcr
jp
lea
cmp
outs
nop
or
gs
push
scas
(bad)
gs
xor
leave
push
push
or
cmp
fcomp
and
adc
daa
fsub
jns
cmpxchg
es
dec
jne
push
mov
xchg
rcl
jmp
pop
ret
ins
sbb
dec
nop
adc
shl
xor
fadd
dec
ret
jl
sbb
inc
mov
mov
sbb
(bad)
mov
dec
push
jle
add
cmp
jne
rcl
xor
addr16
or
leave
es
inc
add
mov
jae
pushf
adc
xchg
inc
sahf
inc
jle
stc
add
or
and
and
push
xor
stos
mov
fst
sbb
and
test
fadd
cmp
jl
jnp
jg
mov
inc
xor
sub
cmp
sahf
popa
stos
cdq
loop
stos
adc
addr16
xor
dec
ins
or
dec
cmp
ins
dec
mov
add
int3
ret
ret
pusha
in
jp
xor
or
adc
dec
jge
push
cmp
movs
push
mov
jmp
sub
mov
push
add
adc
xchg
ins
out
mov
ret
jl
out
aad
push
fcomp
push
imul
data16
and
rcr
add
and
fs
lock
jae
cmp
jl
cmp
sbb
jg
stos
dec
adc
shl
push
and
pop
pop
cdq
stos
mov
push
std
outs
jmp
pop
sti
pop
call
aad
fnsave
inc
dec
leave
inc
add
cmp
push
adc
ins
lods
inc
pop
pusha
add
shl
stos
cld
ja
imul
test
sbb
add
push
add
test
inc
mov
pop
or
jmp
dec
mov
push
in
mov
or
push
fdiv
mov
scas
je
dec
shl
xchg
cmp
std
inc
jo
ins
inc
mov
movs
or
add
cmps
push
mov
sbb
in
jae
add
addr16
fucomp
fcom
xor
pop
jmp
mov
dec
mov
inc
mov
adc
sar
push
rcr
js
push
mov
cmp
ror
dec
cmp
(bad)
int3
push
out
sub
adc
test
push
fisttp
sbb
repz
sub
test
gs
(bad)
jae
sbb
or
jle
pop
push
enter
ja
pop
and
mov
cwde
sbb
pop
jo
mov
fdivr
or
jo
pusha
rol
xor
js
xor
dec
jo
cmp
pop
pushf
jnp
cmp
pop
hlt
pop
aad
hlt
dec
lds
test
pop
xor
xor
cmp
xchg
jne
xor
in
mov
cmp
mov
cmp
les
stc
adc
imul
aam
outs
(bad)
aaa
sbb
or
jb
adc
cwde
xchg
jae
js
test
mov
jne
and
mov
arpl
pusha
or
clc
push
jo
adc
test
inc
dec
pusha
stos
sub
add
pop
pop
in
add
xor
sbb
push
cmp
es
pop
cmp
adc
mov
and
dec
jae
mov
sar
adc
push
push
mov
loop
sahf
add
mov
(bad)
pusha
btc
jmp
sbb
add
cmp
mov
jle
xor
in
fistp
je
fidiv
fadd
cmp
sub
sbb
inc
(bad)
mov
cs
inc
and
push
inc
pop
sbb
xor
adc
inc
call
enter
mov
loop
pop
ret
addr16
jmp
sbb
retf
popa
sbb
pop
nop
in
push
fist
mov
pop
(bad)
jmp
add
or
sub
retf
ret
mov
mov
push
mov
jbe
mov
(bad)
push
rcl
pusha
mov
pop
adc
jmp
outs
adc
movhps
cmp
inc
(bad)
mov
dec
inc
and
ss
inc
push
cmp
js
and
daa
xchg
pop
sub
jbe
movs
test
xor
xchg
pusha
sbb
add
shl
or
push
mov
adc
mov
add
ja
cld
add
pop
push
and
icebp
pop
pop
mov
push
and
mov
and
inc
add
and
jmp
cmp
int3
mov
jmp
xchg
pop
sahf
cmp
adc
clc
jl
jmp
cs
push
mov
jle
adc
or
jae
imul
push
movs
sbb
and
mov
mov
or
push
sub
ror
call
mov
loope
test
shl
test
shr
adc
or
mov
mov
mov
mov
inc
lods
idiv
or
and
cmp
xor
jne
sub
das
and
neg
xchg
ret
dec
in
jbe
(bad)
lahf
shl
(bad)
jp
sub
fst
push
jo
mov
jl
add
cmp
jmp
jg
xlat
add
or
or
add
add
add
mov
shl
cmps
aaa
push
inc
sbb
js
jae
lea
jnp
push
lds
int
push
sub
push
and
xchg
pop
mov
add
mov
mov
sbb
mov
mov
dec
cmp
je
mov
lea
call
fild
xrelease
mov
sbb
pop
je
push
loop
in
pop
mov
pop
inc
cmp
and
cmp
sbb
and
jns
in
fistp
pop
add
aaa
jne
pop
inc
sub
xchg
pusha
lods
add
xchg
test
mov
and
mov
push
push
mov
data16
pop
mov
mov
cmp
je
loopne
sbb
push
icebp
ret
and
es
sub
(bad)
mov
ret
das
daa
and
push
push
xor
(bad)
dec
pop
mov
retf
push
lods
pop
int3
xor
adc
(bad)
adc
jl
pop
js
add
jbe
inc
aaa
fisttp
inc
ins
push
jg
cdq
inc
cmp
je
or
lea
fistp
shl
add
and
inc
les
mov
mov
inc
inc
or
outs
mov
or
retf
inc
inc
mov
(bad)
outs
sbb
inc
push
add
std
pop
repnz
sbb
mov
inc
and
mov
(bad)
or
or
repz
jmp
dec
(bad)
mov
sub
mov
loopne
sub
inc
adc
enter
lods
mov
add
clc
fidivr
jne
inc
jmp
xchg
sub
pop
les
sbb
js
(bad)
jecxz
mov
out
sar
mov
mov
sbb
add
dec
div
out
inc
jg
inc
mov
push
pop
inc
mov
jne
sbb
inc
xchg
push
mov
pop
mov
ss
sahf
je
sub
loop
adc
or
pop
sbb
inc
cmp
add
or
femms
stos
mov
xor
mov
inc
and
sub
pop
lods
loopne
cmp
test
add
or
rcl
repz
jnp
xchg
push
mov
fadd
into
int3
ret
pop
jmp
rcl
inc
or
jmp
fwait
aas
daa
ret
push
push
inc
shl
mov
or
stc
push
repnz
das
push
sar
mov
or
xor
push
jmp
int
cmp
lods
xor
jmp
out
and
or
jae
and
push
dec
xchg
adc
pop
out
push
mov
aam
push
bound
xor
movs
test
ins
jg
(bad)
je
inc
cmp
add
sub
inc
push
dec
pop
adc
mov
sub
das
mov
dec
inc
mov
pop
push
jae
call
add
mov
dec
cmp
jmp
mov
mov
mov
mov
loopne
mov
cmp
ss
test
out
pop
xchg
adc
inc
ret
js
stos
pusha
jae
mov
cmp
jb
fist
dec
xor
adc
adc
sti
sbb
rol
popf
add
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
or
(bad)
sahf
inc
push
ds
sub
mov
sbb
arpl
push
neg
imul
pop
add
adc
push
inc
mov
nop
ds
or
inc
mov
retf
jp
(bad)
mov
cmp
sbb
cmp
push
stc
in
pusha
cmp
int3
xchg
sbb
mov
ins
sbb
sbb
push
pop
dec
add
jno
inc
jae
pop
rol
data16
adc
mov
inc
or
jne
push
je
jp
dec
dec
addr16
movups
adc
pop
sar
data16
je
push
dec
pop
adc
inc
sbb
adc
lock
push
add
xlat
or
sbb
add
mov
xor
into
mov
pop
sbb
xchg
and
push
fst
mul
rcr
fdiv
mov
daa
bound
movs
in
xor
enter
sub
push
cmp
retf
push
rcl
mov
pop
inc
xchg
ret
pop
push
fcomp
ja
rol
jb
jae
(bad)
sti
shl
cmp
ins
ins
push
adc
gs
add
adc
pop
cli
jne
and
pop
mov
adc
push
mov
lods
call
and
mov
jbe
cmp
xor
pop
jl
pop
push
add
inc
in
jne
daa
aaa
add
push
pusha
dec
mov
(bad)
into
adc
jl
les
mov
data16
mov
hlt
push
adc
and
daa
pushf
(bad)
mov
les
add
xor
fwait
cld
or
shl
outs
shr
push
adc
mov
add
add
lock
aad
mov
pusha
adc
xor
xor
dec
adc
lea
add
pop
mov
adc
pop
test
fsubr
push
or
data16
cmps
add
mov
shr
enter
pop
inc
xchg
fild
sub
shr
mov
imul
mov
imul
ret
iret
out
mov
lea
mov
push
cld
add
mov
ret
or
jle
inc
sbb
outs
jo
aas
jbe
push
pop
mov
dec
mov
push
cmc
mov
dec
dec
add
shl
pop
mov
and
enter
and
push
jge
neg
pop
add
(bad)
imul
cli
pop
push
std
pop
inc
rol
call
or
or
pop
mov
jg
xor
xchg
hlt
push
aas
shl
sar
sbb
mov
add
fidiv
fiadd
inc
(bad)
(bad)
inc
cmp
(bad)
adc
cmp
je
mov
jno
jno
cmp
mov
retf
shr
not
and
add
(bad)
bound
xlat
dec
loopne
sbb
mov
mov
dec
or
mov
add
mov
aad
mov
lahf
push
mov
je
sub
call
sub
aaa
xchg
push
mov
or
mov
sti
or
inc
mov
jae
fisttp
inc
xchg
mov
ret
jne
sbb
mov
mov
lods
or
jmp
and
and
je
push
bts
test
mov
inc
push
and
sub
mov
js
add
gs
jbe
xor
shl
or
ins
retf
push
pusha
mov
push
(bad)
pop
xor
pop
sub
or
push
cmp
and
push
paddd
or
cmp
(bad)
outs
mov
or
js
add
mov
imul
adc
aam
(bad)
xor
mov
mov
sub
clc
xor
dec
adc
lea
jb
jae
cwde
or
inc
jp
sti
pop
cmp
or
fucomip
mov
movs
or
push
sub
push
or
gs
lea
adc
pop
pop
and
and
inc
adc
mov
jge
jle
sbb
hlt
jmp
mov
(bad)
jmp
push
or
mov
add
outs
mov
jae
and
inc
fild
and
or
cmp
adc
pop
cld
sbb
xor
fucomip
pop
jne
mov
cmp
es
ins
jmp
sbb
and
jecxz
or
sbb
aaa
jmp
es
sbb
out
inc
bound
fsubr
je
push
arpl
fnsave
xor
test
push
sahf
adc
jge
movs
adc
outs
mov
mov
cli
(bad)
push
cld
sub
mov
nop
inc
mov
mov
jo
push
sbb
mov
call
pop
mov
aad
fwait
xchg
push
aad
pop
adc
mov
xlat
je
mov
push
call
dec
dec
push
into
test
push
fs
add
add
mov
push
stc
inc
or
dec
call
push
icebp
cs
dec
cmp
jle
pop
dec
pop
xor
test
(bad)
dec
or
popa
cmp
sub
iret
call
add
push
repz
and
hlt
out
mov
dec
jne
jns
and
sub
leave
dec
adc
xchg
shl
sub
cwde
sub
test
outs
add
fimul
or
or
icebp
icebp
mov
aam
xchg
jp
mov
rep
xchg
movs
xor
or
ins
jae
xchg
rcl
mov
jle
shr
or
or
das
outs
pop
sti
sub
lea
and
jnp
mov
shl
lods
push
test
xchg
movs
sbb
or
fwait
mov
mov
cld
mov
mov
lock
and
adc
cld
js
adc
lea
ds
inc
movs
out
mov
push
jne
dec
cmp
sub
xchg
and
ret
or
and
and
adc
int
inc
je
push
leave
xchg
add
push
sti
je
call
pop
push
int3
aam
or
cld
xor
bound
pushf
mov
pop
shl
ss
hlt
or
rol
cs
adc
mov
pop
jl
and
test
bound
shl
lods
fsub
loopne
jno
push
ret
inc
ret
bound
aaa
imul
or
or
add
dec
push
sti
mov
outs
test
out
push
and
xor
push
dec
mov
push
outs
shl
fs
add
cmp
cmp
inc
ja
repnz
mov
int3
mov
cld
lock
push
out
lahf
jnp
push
call
das
push
jp
sub
retf
mov
sbb
clc
cmp
mov
or
pop
sahf
inc
inc
mov
sahf
jecxz
inc
inc
mov
or
adc
inc
cmp
mov
pop
lods
rcl
fdiv
fiadd
xlat
pop
ror
push
jmp
movs
shr
je
cmp
mov
cli
push
or
pop
sbb
or
pop
sbb
or
fld
pop
fdiv
aas
lea
dec
pop
pop
mov
sub
mov
pop
dec
cmp
iret
enter
clc
icebp
add
daa
and
and
nop
dec
or
or
jg
sub
add
mov
fwait
into
sar
dec
inc
xor
(bad)
cli
mov
sbb
sti
ror
aas
pop
xchg
push
dec
pop
gs
xchg
gs
pop
pop
pop
pop
xchg
gs
call
pop
and
mov
adc
mov
es
and
mov
push
repnz
pushf
inc
xor
add
mov
mov
jno
adc
inc
addr16
addr16
jge
leave
ins
fisubr
pop
mov
movs
mov
adc
adc
jbe
xchg
jo
mov
ja
sbb
and
xchg
mov
cmp
and
jns
imul
jbe
pop
mov
jns
jno
scas
jno
imul
ja
pop
push
xchg
xor
pop
in
bswap
xor
punpcklwd
psrad
iret
and
bswap
and
leave
in
jns
push
add
stos
sbb
sub
inc
cld
nop
call
mov
mov
sbb
and
cmp
sub
sub
pop
lods
data16
and
daa
add
aad
scas
mov
pop
aad
jno
mov
mov
or
sub
inc
mov
mov
shl
lea
sbb
pop
pop
test
sbb
jle
inc
mov
in
mov
std
adc
popf
ret
ror
mov
stos
pop
lea
jecxz
and
or
or
push
xor
or
ret
pop
mov
jmp
or
sbb
daa
or
ja
(bad)
stos
je
es
sub
add
je
and
cmp
mov
inc
and
inc
inc
(bad)
push
test
imul
loopne
add
mov
mov
jbe
jo
xor
aas
mov
inc
lods
fistp
mov
add
adc
inc
test
jl
pop
mov
mov
xchg
in
packsswb
xchg
out
add
jmp
or
scas
pop
rol
and
inc
push
test
loop
jns
icebp
inc
ins
data16
inc
and
or
adc
inc
push
push
cli
out
pop
loop
mov
push
movs
je
loopne
push
and
sbb
(bad)
jp
jbe
inc
jbe
add
jb
lods
retf
jb
sub
xor
sub
shl
and
inc
ins
ror
loope
sub
jne
push
mov
push
lock
imul
sub
push
in
out
jbe
or
enter
movzx
ret
cmp
pop
test
push
push
loope
ds
and
mov
test
fwait
in
sahf
adc
mov
or
add
imul
call
sbb
jbe
add
cmp
jae
mov
int
retf
jl
cmp
adc
jbe
push
es
and
jne
cwde
fstp
push
add
mov
cmp
add
mov
cmps
jle
aam
inc
add
xor
sbb
outs
rcr
dec
cmp
inc
push
cmp
jb
inc
cmp
je
or
mov
pop
mov
(bad)
pop
imul
aad
retf
add
mov
sbb
mov
sub
(bad)
out
arpl
ja
cmp
add
jge
cmp
div
or
mov
mov
push
(bad)
push
imul
push
movs
push
pop
cmps
mov
push
imul
hlt
fs
loope
push
or
cld
mov
inc
xor
sbb
push
dec
jle
inc
(bad)
call
ss
jae
cmp
sbb
repnz
mov
add
add
sub
sub
gs
mov
pop
pop
je
inc
jp
add
mov
push
sbb
jne
jo
lods
ins
jne
rcl
shr
push
sbb
adc
xor
push
push
data16
sub
sbb
add
add
(bad)
mov
ret
movs
jae
jecxz
inc
jmp
and
pop
push
push
mov
inc
jno
aaa
add
mov
add
(bad)
xchg
adc
dec
test
bound
sbb
aaa
adc
pop
repz
inc
inc
aas
push
pop
test
dec
mul
mov
mov
cmp
cdq
in
mov
xchg
mov
add
pusha
jnp
ins
jne
mov
jae
jp
pop
sub
mov
inc
push
lods
inc
stc
mov
inc
inc
lods
sub
sub
fild
mov
jmp
ret
sub
jb
or
test
jmp
push
add
jmp
aaa
lock
mov
movs
inc
lock
leave
movups
pusha
pop
or
and
push
sbb
pop
mov
or
inc
aas
xor
dec
test
sbb
or
adc
sub
mov
jae
xor
dec
loopne
pusha
jae
adc
mov
adc
push
rcl
xor
ss
(bad)
(bad)
out
inc
jne
mov
xor
add
shl
and
clc
(bad)
mov
sub
jle
xor
push
gs
cmp
int
push
pop
inc
inc
stos
arpl
sub
sub
jne
push
test
xor
adc
jae
push
add
sub
test
push
in
or
inc
shl
ins
cmc
and
mov
pop
jge
inc
sar
ret
inc
pushf
wrmsr
pop
rcr
call
inc
xor
add
add
icebp
mov
mov
inc
add
gs
adc
add
inc
jo
in
or
inc
inc
add
or
jl
aas
mov
test
adc
ret
pop
and
cmp
movs
pop
rol
add
pop
dec
inc
lahf
push
sub
popf
test
test
lock
cdq
pop
shl
movs
add
add
pusha
clc
es
sbb
and
or
add
push
add
dec
push
jecxz
adc
xchg
push
jmp
add
rol
xchg
shl
push
sub
push
pop
cdq
push
pop
mov
test
clc
outs
lea
sub
jg
xor
mov
pop
add
jbe
xlat
dec
mov
or
ds
add
push
test
sbb
and
adc
(bad)
jmp
shl
mov
mov
adc
mov
ss
sbb
or
rol
dec
stc
rol
shl
jo
pop
cld
sbb
jmp
or
adc
fisttp
retf
fucomi
or
cld
mov
xor
jmp
mov
jg
pop
add
pop
xchg
fisub
xor
pop
pop
repnz
jle
push
push
or
mov
mov
jle
cmp
pop
inc
dec
push
jns
jns
add
outs
inc
or
add
sbb
mov
inc
inc
push
cmp
pop
mov
and
dec
push
cmp
movs
adc
fcmovnb
out
test
mov
fcmovne
and
cmp
dec
jb
adc
lds
imul
sbb
xchg
mov
push
xlat
cmps
push
sub
or
inc
loop
dec
or
inc
sahf
into
and
jns
jnp
scas
test
fs
fimul
mov
(bad)
cwde
adc
push
push
mov
or
aaa
inc
sbb
sbb
jne
push
inc
sbb
add
or
inc
jmp
jb
dec
jo
test
ins
add
ins
adc
add
sbb
push
push
test
mov
or
pop
call
adc
or
inc
sbb
ins
jg
push
adc
lds
cmp
fsubr
inc
jmp
aam
inc
out
inc
sub
test
movs
mov
mov
or
pop
xor
push
jmp
adc
and
sub
sbb
mov
scas
add
xlat
push
jnp
or
add
push
test
add
retf
jg
je
loopne
mov
iret
je
and
sbb
jbe
je
pop
add
sub
pop
stos
cmps
sbb
inc
add
ds
dec
xlat
je
add
jle
jb
inc
and
cmp
sahf
jne
cmp
imul
inc
sub
add
adc
and
mov
test
lds
mov
psadbw
test
add
imul
fist
and
adc
or
outs
icebp
or
nop
shr
jge
retf
lods
or
add
mov
sub
mov
inc
inc
or
fcom
adc
mov
fsub
push
les
jmp
scas
or
pop
rol
push
ret
test
mov
cmc
lods
push
cmp
mov
popa
test
out
mov
mov
jne
jmp
and
je
pop
(bad)
fdiv
jne
mov
jae
or
adc
inc
adc
sbb
nop
jmp
sbb
adc
pop
mov
push
cwde
pop
je
mov
xor
or
retf
xor
dec
hlt
clc
push
lds
out
dec
mov
sar
fld
adc
mov
mov
jne
jmp
mov
inc
or
push
test
mov
mov
pop
jne
sub
add
and
pop
inc
push
pop
cmp
je
cmp
mov
dec
mov
ins
sbb
inc
adc
inc
add
push
ja
scas
jp
xchg
in
inc
push
add
sub
mov
inc
(bad)
cmp
sbb
add
add
push
(bad)
xlat
rcl
push
or
pop
pop
pop
pop
adc
test
pop
adc
add
sbb
test
pop
add
sbb
das
inc
sti
bts
jmp
or
push
cmp
mov
and
(bad)
push
sub
sub
jecxz
(bad)
jbe
dec
repnz
neg
in
or
repz
mov
movs
ins
sub
leave
cmp
je
dec
add
sbb
jg
jnp
mov
or
lea
add
push
cmp
push
loop
adc
test
pop
icebp
mov
shl
les
loope
push
inc
rol
push
popf
mov
inc
sbb
inc
jge
ds
xchg
pop
add
push
pop
cs
pusha
sub
cmp
add
xor
out
pop
mov
scas
fistp
dec
ins
push
mov
inc
xor
mov
enter
sbb
add
inc
sbb
add
arpl
sub
push
mov
adc
rcr
int3
mov
mov
(bad)
imul
or
sub
push
pop
lods
jae
ficomp
add
mov
les
push
mov
int3
pop
dec
enter
mov
pmuludq
nop
loopne
cld
jns
inc
ins
mov
adc
mov
inc
dec
adc
xor
jecxz
dec
imul
test
xchg
sub
std
push
dec
adc
sbb
or
mov
outs
sub
imul
cmp
rcr
mov
adc
push
test
imul
and
mov
mov
sbb
shl
shl
sub
aas
and
dec
lea
add
push
inc
pushf
movs
(bad)
mov
out
add
dec
inc
sbb
jecxz
mov
call
pop
adc
add
or
or
pop
ror
mov
xchg
mov
inc
jo
or
je
mov
mov
sbb
aam
ja
imul
add
scas
adc
adc
add
sbb
(bad)
fisttp
into
sub
mov
(bad)
repnz
dec
test
add
cmp
mov
aad
les
test
cld
aaa
sbb
retf
inc
push
xchg
popf
pop
mov
pop
sub
sbb
pop
add
mov
sub
cmp
jg
inc
jmp
or
cmp
dec
push
mov
(bad)
es
cs
inc
or
daa
cli
push
xor
xor
mov
cwde
sub
xchg
addr16
push
jmp
lods
lds
in
pop
gs
packsswb
push
test
retf
add
dec
stos
aaa
cmp
sbb
rcl
adc
inc
xor
pop
pop
or
push
jp
sbb
mov
mov
push
in
sbb
push
jne
or
push
adc
loopne
jbe
jmp
adc
mov
push
pop
inc
mov
mov
push
enter
popa
pop
push
adc
data16
ds
jne
or
adc
lds
mov
push
dec
mov
jmp
push
push
pop
push
and
ins
mov
add
add
shl
push
push
inc
std
mov
add
mov
rol
sub
mov
pop
mov
mov
retf
outs
mov
jp
jge
xor
or
jg
adc
sub
sub
fild
out
add
push
imul
ficomp
jne
cmp
and
push
mov
push
test
add
pusha
push
imul
add
push
xor
sub
adc
aad
(bad)
loop
inc
xchg
add
xchg
mov
push
imul
jmp
mov
push
in
push
jl
add
cmp
mov
adc
pop
cmp
jg
pop
sub
arpl
stc
mov
mov
mov
or
push
fs
pop
call
jle
sub
jmp
mov
icebp
mov
movs
inc
test
dec
and
fdiv
pop
jmp
xlat
scas
ss
inc
sub
dec
sub
idiv
mov
pop
pop
fldpi
fwait
add
jns
call
pop
es
mov
fwait
lds
add
pop
sub
push
and
add
push
les
fnsave
or
or
lock
push
add
pop
fldcw
sub
or
and
or
xor
pop
inc
and
push
lea
add
imul
push
add
add
add
dec
or
retf
push
mov
mov
xor
aas
mov
(bad)
mov
sbb
es
into
or
inc
or
fiadd
pop
fnstcw
scas
je
int
inc
leave
jmp
ss
pop
jl
pop
test
pop
cmp
push
jp
mov
into
xor
scas
push
pop
and
(bad)
faddp
mov
retf
sub
cmp
ret
mov
or
jne
mov
or
adc
mov
or
xor
call
or
pop
dec
or
jne
sti
cdq
pop
imul
jl
pusha
enter
pop
push
sub
call
call
loop
rol
inc
jge
mov
jle
adc
or
loope
adc
or
neg
inc
and
fsubr
xor
mov
pop
pop
sub
rcl
aaa
add
dec
js
sbb
js
ss
add
sub
inc
rol
or
pop
pop
rcr
das
es
add
pop
cdq
mov
sub
mov
adc
mov
ja
adc
repnz
xchg
test
inc
movs
or
mov
cmp
pop
pop
in
test
pop
and
clc
inc
cmp
mov
add
dec
xlat
fpatan
stos
in
add
jmp
pop
xor
cmc
pop
aad
push
add
ror
or
in
and
je
in
into
shr
cdq
mov
out
add
sub
mov
mov
(bad)
(bad)
and
and
pop
test
call
sbb
xor
dec
arpl
sub
in
dec
dec
hlt
cld
mov
neg
mov
retf
rcl
dec
and
inc
mov
push
dec
pop
jns
into
(bad)
popa
or
ss
add
push
jmp
mov
dec
push
add
mov
and
aas
sbb
fcmovnb
loopne
sti
add
les
test
and
pop
jne
sbb
xchg
pop
push
pusha
dec
lea
ja
or
push
stos
loop
jmp
daa
dec
movs
pop
mov
sub
lock
or
gs
cmp
jg
sub
(bad)
popf
dec
and
ja
push
dec
mov
inc
or
and
xor
cmp
jl
push
xor
sahf
in
and
mov
jb
aaa
out
popf
sti
or
and
and
test
add
and
test
jg
xchg
imul
sbb
pop
das
or
or
cli
and
clc
fwait
mov
or
adc
jne
mov
inc
push
xlat
or
aam
pop
push
xor
add
out
push
xor
sti
xchg
jnp
or
cdq
add
sub
jb
jbe
leave
sub
and
or
mov
stos
das
mov
push
jle
mov
fstp
mov
pop
sahf
jle
call
lds
(bad)
test
pop
mov
inc
dec
jne
ss
dec
lods
daa
jl
cmp
jl
pop
cmp
add
cmc
dec
ins
or
add
push
fld
mov
push
push
lahf
mov
pop
push
cmps
push
add
inc
fild
fadd
cmp
test
adc
movs
movs
movs
add
in
sbb
dec
aam
push
add
mov
or
fld
xchg
out
push
inc
pushf
add
icebp
ds
push
mov
mov
cwde
or
xchg
cmp
(bad)
fst
loopne
in
sbb
(bad)
and
inc
test
cmp
or
inc
mov
dec
sar
cwde
pop
and
xchg
push
pop
mov
add
push
push
adc
jo
call
or
ret
(bad)
loopne
das
icebp
leave
mov
clc
pop
or
lea
mov
add
cmc
stos
jmp
or
iret
data16
add
sub
stos
push
ins
imul
add
or
add
pop
test
adc
lea
dec
add
add
xor
aam
cmp
or
lea
rol
add
lahf
ins
cwde
push
lods
adc
enter
ficom
xor
das
sub
sub
mov
add
bts
mov
jmp
clc
dec
mov
shr
rcr
shr
rcr
or
(bad)
push
repz
mul
das
mov
out
shl
cmp
shl
cmp
call
dec
(bad)
pop
mov
mov
outs
push
in
(bad)
sbb
ret
push
outs
int
mov
outs
enter
sar
push
or
outs
jmp
out
mov
or
mov
xlat
fiadd
jl
mov
cmps
js
sub
xchg
push
movs
fs
test
xor
mov
aas
push
xchg
movs
pop
push
(bad)
jo
dec
xchg
sbb
inc
test
icebp
jmp
mov
pop
mov
cld
(bad)
mov
aad
add
or
hlt
sbb
or
sbb
loopne
or
or
jb
das
gs
mov
test
and
inc
pop
pop
mov
inc
add
mov
rol
call
shl
jbe
int
push
scas
xchg
mov
push
cmp
mov
dec
mov
aas
mov
and
out
nop
inc
in
ficom
lea
push
fstp
stos
lea
std
je
ss
push
stos
push
mov
add
sub
cli
cmp
pusha
push
mov
or
nop
inc
inc
mov
sbb
sub
sub
cld
add
rol
outs
add
ror
in
mov
in
inc
dec
dec
scas
mov
std
fnsave
jmp
inc
jns
call
and
out
pop
ins
shr
cmp
mov
mov
fld
add
dec
mov
out
dec
xor
mov
add
mov
cmps
adc
adc
fnstsw
(bad)
mov
or
mov
adc
inc
sub
cmps
and
(bad)
loope
fdiv
add
call
add
mov
add
dec
jno
add
js
in
ins
add
push
or
or
jno
rcr
pop
les
adc
mov
push
fwait
jecxz
data16
adc
std
and
rcl
dec
inc
cmp
jb
mov
and
push
add
aaa
push
es
repz
xor
sbb
pop
mov
sub
and
sub
add
and
stos
inc
inc
mov
sbb
pop
pop
push
cli
mov
lea
push
push
fistp
or
ret
sbb
fs
push
xor
mov
cld
div
inc
pop
or
lods
call
add
mov
sbb
add
popf
xchg
adc
pop
jmp
and
outs
push
dec
adc
sbb
jb
add
mov
enter
mov
dec
pop
sbb
ja
and
ret
fsubrp
and
loopne
dec
mov
pop
and
std
pushf
xchg
pusha
mov
test
les
jecxz
sbb
adc
mov
mov
mov
lea
mov
and
leave
daa
mov
push
pop
push
daa
mov
adc
fsubr
xor
add
sti
sub
and
add
or
mov
mov
mov
mov
or
(bad)
ja
adc
and
inc
jae
loopne
je
adc
xor
iret
fsubr
dec
js
or
pop
(bad)
call
pop
sub
pop
add
fimul
push
divps
inc
arpl
pextrw
and
add
mov
pusha
mov
outs
adc
jo
add
imul
test
jo
or
pop
and
sub
(bad)
sub
mov
repz
xor
cs
xor
jb
adc
popa
and
jno
cmp
imul
icebp
add
fstp
sbb
mov
cmc
push
leave
std
fucomi
jno
add
lahf
or
jmp
test
jne
movs
or
jno
les
add
cmp
daa
inc
dec
ins
and
test
and
ins
clc
push
adc
add
xlat
or
sbb
add
fs
inc
jae
inc
add
call
pop
fcom
pop
es
push
cmps
test
add
push
in
or
fs
mov
add
sub
int3
or
jle
add
cmp
je
mov
or
fidiv
add
mov
mov
mov
dec
add
inc
fld
mov
out
and
jne
and
or
jg
jne
pop
retf
cld
cmp
je
mov
cmc
pop
pxor
fdiv
out
call
push
mov
jmp
pop
and
into
mov
cld
iret
or
pop
rcl
call
jno
xor
cwde
mov
mov
inc
cmp
push
or
or
out
mov
adc
aad
outs
mov
mov
ins
sub
outs
mov
loopne
mov
xor
mov
rcl
or
jmp
das
xor
ret
add
adc
mov
push
cmp
inc
addr16
dec
push
je
imul
mov
mov
fs
imul
test
or
fsub
or
call
dec
mov
adc
jle
adc
lea
add
dec
jb
clc
xchg
sub
add
adc
inc
or
adc
or
cmp
retf
call
adc
outs
pop
mov
sub
jge
mov
jne
test
les
adc
in
mov
mov
movs
stos
(bad)
sti
(bad)
imul
push
sbb
dec
sbb
and
jmp
mov
add
inc
call
outs
push
mov
inc
pop
mov
cwde
pop
jno
mov
sbb
fstp
sbb
add
inc
add
sbb
fnstenv
and
popa
inc
cld
fisubr
movs
ret
mov
test
mov
hlt
sar
dec
stc
xchg
push
ror
add
mov
lods
push
ins
mov
cdq
push
scas
add
pop
mov
add
mov
mov
lea
push
and
iret
mov
mov
ror
mov
inc
mov
inc
fnstsw
lods
(bad)
or
adc
shr
ins
xchg
and
fist
mov
or
add
(bad)
loope
add
and
test
cmp
push
push
jmp
jne
or
out
sti
loope
adc
sub
enter
push
and
fisubr
or
popf
sbb
scas
cmp
pop
jg
push
adc
dec
cmp
sbb
mov
ja
inc
cmp
fld
pop
mov
inc
popf
aaa
aaa
fild
retf
jmp
sub
or
mov
push
neg
mov
mov
inc
mov
jmp
cmp
inc
or
or
jmp
push
or
sbb
push
test
out
ja
xchg
jb
shl
je
push
test
in
mov
sub
mov
mov
push
aad
push
push
inc
lds
adc
mov
out
cmp
aaa
sub
daa
inc
cmp
je
sub
or
leave
add
jecxz
loopne
sub
rcr
rcr
pop
js
or
ins
xlat
add
add
addr16
adc
dec
cmps
(bad)
jmp
not
nop
addr16
pop
fdiv
(bad)
loopne
push
mov
cmp
je
(bad)
pusha
mov
mov
pop
jl
dec
jmp
xor
mov
test
stos
outs
jno
bswap
mov
jmp
mov
out
(bad)
pop
cmc
mov
mov
inc
es
icebp
je
jg
mov
jnp
jb
inc
ja
add
cmp
or
xor
div
dec
jne
pop
push
push
retf
inc
pop
fwait
mov
loop
nop
sub
in
popa
test
or
out
push
mov
mov
jmp
in
je
or
push
xor
sbb
aad
cli
or
add
lods
jno
push
pop
dec
add
xor
fist
pop
lahf
sub
loope
lods
test
adc
add
aaa
scas
sub
imul
mov
or
pop
inc
shl
jmp
pop
(bad)
cmp
mov
and
adc
inc
dec
push
je
xchg
sbb
or
call
aas
push
push
sbb
sbb
les
push
pop
push
or
stos
das
cmp
mov
adc
push
xor
mov
mov
loop
das
bound
push
dec
or
aad
jle
dec
dec
arpl
inc
lods
shl
or
or
push
mov
inc
inc
xchg
and
xor
xor
jmp
or
hlt
jmp
cld
in
nop
add
call
xchg
mov
mov
jmp
sub
pop
inc
and
dec
and
mov
fistp
pop
mov
push
aam
mov
mov
loop
cld
aaa
add
mov
pop
cdq
(bad)
or
xlat
or
clc
add
mov
push
test
push
push
adc
or
cmp
dec
or
mov
push
pop
pop
jne
test
cli
mov
sbb
dec
mov
and
test
or
sar
iret
jl
cmp
setp
dec
pop
ret
sub
or
std
adc
mov
pusha
xlat
or
adc
pop
inc
iret
push
and
mov
pop
jmp
add
adc
push
jo
hlt
in
xor
out
mov
cmp
sub
pop
sbb
into
inc
outs
lea
test
push
repnz
add
xor
int3
mov
les
adc
pop
push
mov
lock
popw
or
rcr
sub
mov
into
sub
fild
jmp
dec
rcl
mov
shr
shl
or
pop
push
sub
inc
fwait
(bad)
out
out
pop
cmp
sbb
or
mov
push
loopne
not
jmp
adc
inc
or
xor
push
mov
dec
inc
mov
(bad)
sbb
push
push
mov
lea
movs
movs
push
movs
ja
mov
xchg
jecxz
add
(bad)
dec
pop
(bad)
push
cmp
adc
jne
arpl
fmul
jb
add
push
mov
xor
out
adc
loope
(bad)
fcomp
ror
lock
push
pinsrw
inc
mov
shl
(bad)
cld
jmp
call
pop
data16
or
pop
sub
scas
shl
movs
sti
gs
lds
push
call
lea
fsub
aam
out
outs
xchg
gs
in
mov
mov
cmp
je
push
xlat
in
or
je
or
sub
in
xchg
push
iret
mov
xor
test
mov
cmp
or
sbb
mov
test
inc
push
inc
mov
outs
xor
(bad)
call
xlat
mov
pop
jmp
call
sahf
dec
mov
jle
dec
sub
xor
pop
add
sub
push
add
jle
sub
or
jnp
jg
in
or
jge
push
pop
movs
or
test
and
out
pop
or
mov
ds
jge
cdq
pop
jge
adc
pusha
add
push
call
inc
mov
cmp
aad
(bad)
sbb
fimul
shr
hlt
sub
push
push
sub
mov
fcom
or
(bad)
pop
mov
pop
add
mov
pop
or
or
and
or
int
jbe
pop
jne
movs
and
test
inc
cmp
lock
lea
mov
inc
(bad)
mov
fs
or
gs
dec
in
mov
xor
jl
push
imul
loope
push
or
pop
dec
or
inc
jmp
popf
fcmovnu
mov
and
pop
ins
call
mov
push
test
sub
pop
pop
cs
or
jg
jbe
cwde
fldenv
jge
or
dec
loopne
test
xchg
sti
or
leave
mov
inc
rol
pop
xchg
jnp
jg
mov
test
aaa
ror
sub
test
mov
fstp
pop
cmp
cli
aaa
or
inc
mov
mov
and
arpl
movs
dec
sbb
jge
adc
repnz
std
dec
cdq
mov
ja
ds
mov
and
xor
mov
xchg
pop
sbb
mov
shl
push
icebp
jle
xchg
mov
daa
cmps
push
and
cdq
push
vmovsd
jb
add
lea
jle
jmp
jp
jbe
adc
jne
int
xchg
fstp
dec
ret
(bad)
push
fisttp
test
or
adc
aaa
dec
add
push
paddq
pusha
push
xchg
(bad)
lods
pop
mov
mov
cdq
inc
or
in
adc
cdq
jae
ret
rcr
inc
sahf
fwait
adc
imul
mov
ficom
mov
or
push
mov
xchg
int3
int3
int3
int3
int3
int3
fs
gs
int3
int3
int3
sti
das
push
or
inc
shr
aaa
inc
fucomp
add
and
std
and
push
and
aaa
adc
in
sbb
add
add
mov
outs
add
jp
dec
data16
push
js
pop
sub
jne
maskmovq
pop
adc
enter
adc
je
add
and
sbb
inc
xor
adc
inc
aad
sbb
addr16
mov
sbb
rol
adc
and
mov
iret
add
fbld
jmp
dec
retf
out
or
outs
inc
es
or
pop
push
cli
mov
leave
dec
(bad)
test
call
or
repnz
cmp
push
inc
cmp
fcmovnu
js
in
sbb
add
je
jp
je
push
mov
sahf
dec
adc
fisttp
jne
sub
cs
jl
add
or
add
pop
jne
test
neg
xor
adc
repz
add
and
icebp
retf
dec
jne
push
or
push
leave
es
dec
sbb
adc
jp
cs
adc
or
and
scas
push
outs
shr
sub
mov
(bad)
aad
aam
push
jl
cmc
getsec
adc
xor
push
dec
jmp
mov
jmp
add
ret
sub
mov
outs
sbb
add
das
inc
mov
xchg
or
add
fld
jl
lock
xor
les
mov
pop
add
add
dec
add
sub
loope
loopne
and
and
dec
jne
or
pop
mov
and
add
push
daa
add
xchg
int3
int3
push
adc
pop
mov
dec
inc
or
loope
push
add
inc
or
or
loope
ror
rcr
add
rcr
pop
les
adc
cdq
loop
mov
add
xchg
jb
dec
repz
dec
adc
add
push
add
mov
fcmovne
leave
sbb
out
je
(bad)
das
push
push
mov
inc
and
cmp
cmps
icebp
sbb
jne
mov
ret
and
mov
xor
je
mov
pushf
in
push
in
inc
xor
clc
and
and
and
lea
idiv
call
mov
fild
lock
xchg
mov
adc
stc
push
mov
xchg
cmp
shr
mov
cli
pop
push
push
cmp
mov
push
and
pop
fdivr
push
lds
xchg
cmc
adc
lock
mov
add
dec
or
add
call
inc
lods
and
push
rol
lea
cld
push
int3
xor
or
push
je
imul
hlt
add
call
ja
fistp
or
jg
adc
jle
pushf
out
les
mov
sbb
jg
push
cmp
ins
and
pop
push
imul
pop
rcl
add
inc
mov
adc
pop
int
sbb
fdivr
in
or
push
lods
or
popa
fisubr
movs
push
stos
out
add
loop
sbb
sub
or
xor
imul
or
pop
jmp
(bad)
push
inc
loop
fidivr
das
add
cmps
jae
pop
fimul
(bad)
push
push
pop
mov
adc
dec
add
jmp
fistp
inc
dec
xchg
add
push
push
sub
jecxz
imul
xchg
fadd
pusha
cmp
xor
inc
mov
or
adc
mov
ret
and
inc
jo
cs
push
lods
add
pop
mov
(bad)
cmc
cmp
push
sub
loopne
hlt
movs
add
add
in
fisubr
arpl
jne
jnp
cmp
ins
mov
shl
shl
xor
in
mov
mov
inc
and
mov
sbb
pop
jmp
sbb
adc
fwait
and
or
jne
cmp
jle
push
push
fwait
mov
shl
mov
pop
push
jmp
pop
add
sbb
sub
push
ficom
sub
inc
pop
push
mov
popf
fwait
pop
lds
push
stos
push
inc
sbb
cwde
test
sbb
idiv
and
inc
repz
adc
mov
add
retf
retf
push
cmp
call
or
add
retf
add
jbe
inc
jmp
xor
mov
xchg
inc
mov
add
mov
jle
inc
and
scas
and
rol
inc
fcmove
mov
jne
or
outs
push
xor
ficom
sub
(bad)
test
cmp
ret
pop
mov
cld
jns
dec
jae
test
aad
jns
sub
dec
enter
cld
mov
(bad)
jmp
sub
add
ficom
push
add
inc
add
adc
in
inc
or
inc
or
cs
icebp
dec
ss
mov
repz
dec
sub
daa
ret
inc
sbb
sbb
cmp
neg
pop
test
retf
je
sbb
or
data16
add
xchg
ret
jge
mov
test
pop
mov
sbb
sbb
cmp
add
sub
adc
(bad)
or
lods
shl
fcomip
xor
pop
div
sbb
je
sub
dec
xchg
ins
test
pop
mov
mov
jl
add
test
and
push
lea
call
adc
cmc
inc
and
add
clc
jmp
sub
fs
ficom
lods
jmp
test
jmp
cmp
(bad)
mov
dec
push
jp
fs
cmc
inc
(bad)
outs
scas
mov
and
pop
add
ins
add
outs
xchg
jbe
push
div
push
jb
pop
sub
movs
rcl
outs
loopne
neg
sbb
not
and
cdq
mov
add
jle
cmps
pop
inc
adc
sub
jae
sub
add
or
loope
xchg
sbb
stos
outs
adc
xlat
xor
cmp
clc
pushf
ret
psubd
ror
cmp
mov
lea
je
xchg
mov
adc
lods
div
sbb
cmc
add
vmovsldup
pop
mov
push
shl
inc
sbb
adc
sub
int3
mov
pop
xchg
jmp
jno
dec
mov
adc
mov
xchg
sub
push
dec
jne
jno
repz
sbb
call
push
data16
dec
popf
or
cmc
add
add
inc
rcl
add
idiv
lock
sbb
ret
cmp
add
and
and
scas
mov
sub
push
ins
adc
adc
mov
jge
sbb
sbb
add
push
cwde
call
xor
inc
jl
add
ss
push
bound
jl
inc
jbe
and
adc
stos
or
in
adc
and
shr
mov
sbb
nop
add
and
or
lods
cmp
enter
lods
pop
fucomp
es
sar
inc
add
mov
imul
mov
jae
jb
outs
and
outs
and
pop
fnsave
pop
add
psubusb
aas
pop
in
outs
dec
push
and
popa
ins
imul
jnp
arpl
je
cmp
pop
add
jno
test
jmp
gs
and
or
es
or
(bad)
movs
dec
and
push
outs
imul
outs
and
arpl
inc
mov
mov
or
data16
push
repnz
test
es
daa
test
ret
add
or
pop
cmp
add
xchg
add
jg
(bad)
add
aas
pop
jle
push
inc
(bad)
(bad)
int
sbb
push
jb
into
jae
outs
jb
gs
je
jb
stc
aaa
icebp
(bad)
prefetch
je
dec
inc
push
dec
inc
dec
xor
jne
stc
add
xor
xor
add
adc
pop
push
add
add
add
(bad)
pop
cmp
sub
push
pop
pop
aaa
lea
mov
add
pusha
push
jo
into
mov
ins
or
adc
mov
add
add
add
add
sub
mov
ins
sub
ds
sahf
jne
mov
add
jne
jmp
std
aaa
push
pop
add
lods
sbb
push
cmp
and
sub
mov
call
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
enter
push
inc
inc
push
inc
inc
pop
dec
push
push
inc
push
push
ins
mov
jne
imul
fsubr
pop
jb
prefetch
fst
adc
add
dec
inc
add
gs
dec
dec
inc
adc
push
xor
cmp
sub
je
popa
bound
and
mov
sar
push
aaa
lea
cmp
out
shr
in
jo
arpl
data16
ja
cmp
fldenv
mov
inc
bnd
fs
(bad)
pop
jecxz
imul
and
adc
lds
pop
xor
mov
ficomp
dec
pop
das
pop
push
das
in
fs
fsub
pop
xor
imul
mov
mov
cmps
pcmpgtb
arpl
fisub
cmp
cmp
aaa
mov
arpl
push
lods
je
mov
fild
ins
outs
arpl
(bad)
fdiv
fdiv
mov
add
and
add
addr16
ins
and
or
das
xor
dec
cmps
int
push
adc
ins
jae
sub
jae
sub
popa
jb
jne
pop
jnp
ret
xor
shr
ins
mov
add
out
ror
addr16
sub
cmp
imul
push
mov
popa
out
mov
or
sbb
and
push
aam
ret
add
jbe
cmp
loopne
jne
ins
mov
js
add
push
push
dec
jmp
fistp
push
adc
dec
mov
(bad)
dec
popa
outs
arpl
ins
inc
inc
add
jbe
add
push
dec
dec
jle
adc
jbe
fwait
xchg
gs
popa
cs
add
xchg
(bad)
jne
mov
popf
lds
xorps
fs
imul
mov
addr16
outs
js
jne
jb
imul
sar
ins
mov
jae
jae
add
and
or
xor
fist
push
mov
dec
out
mov
ja
or
outs
or
ja
into
mov
outs
gs
and
jbe
fldenv
pop
in
jnp
mov
addr16
push
xlat
mov
inc
inc
aaa
jns
sbb
out
mov
mov
adc
inc
inc
or
int
ins
jb
adc
or
sbb
imul
mov
cmp
das
daa
jns
(bad)
fisub
pop
add
and
inc
dec
add
dec
dec
inc
add
push
pop
iret
cmps
add
jmp
or
ja
pusha
inc
outs
das
rol
pop
js
popf
cmp
sbb
pop
mov
call
adc
jmp
inc
adc
xor
add
js
xchg
inc
mov
jg
call
clc
gs
nop
dec
aam
add
or
cmp
adc
fdiv
mov
cwde
not
push
pop
arpl
pop
and
xchg
pop
mov
scas
test
or
cmps
dec
in
and
lock
push
cwde
add
jno
jge
loopne
shr
fwait
pop
mov
addr16
and
lahf
mov
xchg
cmp
popa
xor
imul
rol
inc
shl
mov
daa
clc
pop
xor
mov
mov
push
pop
mov
jns
in
dec
(bad)
mov
and
xchg
push
push
test
enter
rcr
rol
sbb
std
int
imul
add
xor
out
sub
jae
inc
pop
dec
jno
pop
or
std
sub
mov
adc
pop
inc
add
or
fcom
outs
cmp
mov
outs
dec
fnsave
or
mov
dec
mov
cmp
sbb
test
enter
imul
cmp
mov
jecxz
dec
enter
mov
mov
mov
mov
mov
jg
add
pusha
bound
imul
outs
popa
pop
aas
xor
mov
(bad)
mov
xchg
pushf
nop
mov
mov
(bad)
cld
test
inc
popa
inc
pop
push
push
inc
inc
jns
inc
(bad)
jmp
push
inc
xor
int
(bad)
fsubrp
out
(bad)
(bad)
loop
mov
add
call
sti
(bad)
push
xchg
or
fcmovb
ret
(bad)
aam
ror
rcr
adc
and
or
add
aaa
cmp
push
and
fs
add
mov
mov
mov
add
jb
dec
push
sti
mov
push
dec
addr16
int
push
inc
jg
push
inc
pop
push
je
add
dec
push
jae
mov
push
dec
push
push
dec
cmovs
and
add
(bad)
pop
xchg
mov
cmp
or
or
mov
mov
test
adc
(bad)
fdivr
jbe
arpl
add
pop
add
or
imul
xlat
jmp
mov
icebp
mov
jmp
jmp
std
jmp
icebp
out
mul
lock
out
imul
sub
outs
in
mov
div
in
add
icebp
out
jmp
call
add
mov
mul
out
mov
dec
neg
in
shr
out
xor
in
loop
idiv
pop
xlat
pop
imul
pop
sub
jp
scas
imul
or
or
xor
mov
and
pop
dec
push
dec
push
pop
hlt
(bad)
(bad)
dec
push
dec
dec
pop
push
sbb
adc
push
push
dec
push
push
pop
sbb
dec
pop
dec
inc
cmp
add
mov
fiadd
add
out
aad
nop
nop
loope
cdq
jmp
jge
imul
aaa
or
jbe
and
adc
add
xor
mov
cs
inc
push
cmc
daa
in
popa
jg
inc
pop
ins
outs
imul
enter
pop
add
fstp
outs
addr16
and
js
mov
outs
jne
pop
outs
pop
jb
es
add
or
retf
add
jae
test
sti
aas
push
je
mov
pop
jnp
je
jo
pop
imul
ret
mov
push
mov
sbb
inc
adc
jecxz
xchg
or
je
inc
add
cmp
dec
xor
add
add
add
or
pusha
or
or
sbb
fimul
enter
pop
xorps
rol
adc
add
enter
pop
and
or
push
pop
or
pop
pop
jnp
ror
arpl
sbb
jge
dec
jb
das
xor
pop
sbb
test
xor
(bad)
xchg
sub
and
or
pop
cmp
fs
add
fs
out
add
lea
imul
inc
push
nop
xchg
xchg
adc
fs
xchg
add
js
sbb
dec
clc
or
nop
cmp
inc
add
fs
xchg
les
idiv
fiadd
repnz
and
dec
add
and
enter
inc
and
xor
xor
add
add
cmp
jmp
(bad)
jns
add
mov
pop
fmul
arpl
mov
and
outs
mov
or
xchg
daa
iret
pop
dec
or
mov
adc
adc
in
and
sbb
sahf
cmp
bnd
push
js
jns
jp
xchg
daa
dec
and
and
adc
cmp
jecxz
cwde
mov
push
ja
mov
jg
adc
add
and
add
stc
and
lock
sub
mov
push
inc
push
add
das
dec
std
mov
ins
gs
or
dec
shl
xchg
mov
fstenvw
adc
xor
add
xor
xor
add
xchg
fnstenvw
add
ins
int
fwait
dec
ins
add
adc
popf
inc
mov
pop
aaa
adc
dec
stos
add
movs
pusha
daa
iret
push
test
fild
mov
mul
lahf
loopne
inc
jle
cld
das
test
mov
and
or
das
inc
mov
test
fistp
mov
in
call
dec
mov
ficomp
pop
pop
fisubr
xor
fcomp
loopne
cmp
jle
xor
adc
or
mov
shl
xchg
mov
xor
test
das
pop
push
xor
shl
dec
inc
inc
cmp
xor
sar
xor
sub
dec
shl
add
shl
add
in
dec
shl
mov
jbe
xlat
xor
mov
mov
in
call
cmp
adc
and
dec
repnz
cli
or
or
ret
seto
repnz
hlt
adc
out
cld
and
sbb
into
sbb
ror
(bad)
(bad)
inc
lock
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
cmp
cmps
iret
dec
js
(bad)
(bad)
fistp
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
inc
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
std
(bad)
(bad)
push
mov
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sar
outs
stos
outs
dec
leave
fwait
xchg
and
and
idiv
imul
sti
aas
jno
or
mov
pop
fs
dec
(bad)
(bad)
(bad)
dec
cmc
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
(bad)
(bad)
(bad)
jmp
add
aas
xor
aad
mov
std
std
into
popa
test
ja
(bad)
(bad)
(bad)
jmp
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
inc
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
(bad)
(bad)
out
das
lea
mov
inc
and
movs
jmp
jg
sub
jge
mov
(bad)
(bad)
(bad)
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
(bad)
(bad)
sar
add
std
xlat
cmp
mov
sbb
add
mov
push
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
(bad)
(bad)
(bad)
jmp
adc
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
in
(bad)
(bad)
(bad)
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
sub
ficomp
frstor
or
inc
xor
adc
add
add
mov
int
pop
inc
pop
sub
push
(bad)
fild
push
gs
imul
jle
bound
adc
or
mov
inc
fisttp
gs
ja
imul
jb
jns
inc
push
aam
fist
inc
jne
and
push
dec
neg
sti
jg
cmp
sub
push
shr
inc
pop
sub
sti
mov
js
pop
pop
inc
int
pop
in
sub
or
popa
das
pop
mov
xor
not
pop
push
nop
mov
pop
scas
ins
mov
or
arpl
jne
dec
lahf
std
push
push
sahf
inc
ins
outs
jae
or
js
mov
add
subps
call
out
imul
push
jns
mov
xor
or
ds
outs
outs
ins
push
imul
push
outs
popa
jo
push
imul
jmp
jbe
dec
outs
or
jo
addr16
ins
fldcw
fwait
pop
push
pop
push
pop
mov
inc
push
or
and
adc
in
cmp
outs
jne
arpl
movq
fdiv
popa
adc
or
sti
dec
jae
cmp
push
int
and
ss
dec
das
inc
ins
xor
and
call
imul
mov
and
jle
push
and
shl
mov
adc
push
push
ss
retf
jle
ficom
mov
or
bound
call
xor
jae
adc
jns
es
pop
pop
push
in
dec
aad
jl
fsub
mov
push
lods
dec
and
fidiv
adc
jae
pop
add
ret
push
imul
inc
mov
or
stos
add
mov
mov
xor
inc
xchg
push
aam
dec
inc
push
pop
lahf
push
or
in
ins
xor
rol
stos
arpl
add
inc
mov
(bad)
test
push
sysexit
push
inc
popf
pop
or
cs
cmp
je
pop
nop
or
pusha
aam
into
dec
ret
xchg
es
inc
lock
xchg
nop
mov
fs
or
fbstp
popa
jnp
pop
inc
or
sbb
sbb
cli
add
push
ret
add
gs
fidiv
pop
or
push
popa
xchg
mov
sbb
push
dec
jne
or
mov
and
mov
push
fs
jno
push
adc
dec
outs
push
je
sub
fidiv
pop
mov
cwde
cmp
pop
and
adc
ret
or
xchg
adc
cmp
cmp
or
stos
in
popa
imul
push
in
ins
mov
fisubr
or
fst
or
xor
dec
ret
xchg
loop
sub
mov
inc
(bad)
jne
inc
stos
lock
inc
xor
mov
inc
jne
mov
shr
or
adc
pop
sbb
jo
mov
push
and
and
lods
pop
movs
pop
ret
cs
and
js
mov
push
cmp
test
xchg
mov
cmp
(bad)
or
or
pusha
clc
pop
push
push
lahf
dec
or
dec
int
xchg
call
add
rol
xor
(bad)
mov
xchg
inc
popa
arpl
aad
cmp
and
in
aam
jae
sbb
fwait
mov
push
aad
ret
bound
push
add
cld
xor
sub
imul
jbe
adc
pop
mov
lods
ins
and
aaa
jo
mov
jbe
ror
pop
imul
add
jne
xchg
adc
or
xchg
sub
xchg
xchg
mov
push
xor
mov
pop
or
es
dec
or
xlat
mov
ins
arpl
sti
sahf
add
adc
test
adc
add
(bad)
in
pop
push
inc
push
push
and
add
and
femms
pcmpgtd
imul
push
arpl
bound
pop
xor
sbb
push
adc
sbb
pop
push
adc
(bad)
(bad)
call
lock
add
or
sbb
sbb
push
fadd
bound
and
lock
cmp
(bad)
(bad)
(bad)
fild
dec
add
and
sbb
and
mov
das
sbb
(bad)
(bad)
push
scas
add
push
dec
sub
or
sbb
add
and
sar
or
add
mov
push
pop
xor
xor
pop
sbb
add
jg
push
add
xchg
sub
or
sbb
sub
pop
adc
inc
or
dec
or
test
add
sbb
das
daa
xor
xor
sbb
das
cld
dec
or
mov
retf
or
and
push
rol
and
jo
inc
retf
gs
adc
dec
or
adc
sub
rol
add
adc
or
inc
adc
popa
cmp
and
lock
(bad)
call
and
cmp
push
arpl
lock
push
xor
lock
push
sbb
arpl
daa
adc
adc
pop
das
or
push
jg
dec
dec
push
adc
pop
sub
nop/reserved
dec
lock
and
sbb
or
add
add
adc
(bad)
out
mov
add
lods
add
sbb
or
sbb
adc
sub
add
push
call
mov
and
push
sahf
cmp
or
and
jg
and
(bad)
jmp
pushf
and
sbb
pop
pop
sub
adc
pop
push
mov
sti
push
or
(bad)
push
sbb
sbb
xor
cs
jmp
jg
inc
aas
adc
or
dec
or
jne
pusha
sbb
aaa
daa
push
sub
jg
(bad)
jmp
cmp
sbb
daa
add
pop
sbb
push
and
dec
pop
scas
mov
adc
pop
inc
or
or
adc
adc
adc
sub
adc
sbb
(bad)
call
call
sbb
movs
pusha
sbb
xor
lock
add
retf
mov
cld
(bad)
or
lds
inc
add
dec
add
sub
mov
inc
mov
repnz
or
retf
pop
pop
add
sub
mov
sub
or
push
push
mov
retf
add
add
outs
push
mul
fisubr
add
add
or
out
or
add
adc
jnp
in
jnp
test
push
adc
sbb
add
pop
sti
outs
xor
push
adc
adc
add
adc
sbb
adc
pop
dec
push
fnstsw
sub
unpckhps
push
sbb
or
lods
pop
arpl
adc
sub
or
mov
dec
es
push
sub
lock
push
or
or
ins
in
cmc
sbb
dec
mov
or
pop
fist
das
mov
data16
or
sbb
ins
add
cld
sub
in
push
adc
sbb
adc
outs
(bad)
mov
push
add
lock
or
or
fisttp
or
adc
or
inc
xor
xor
or
mov
adc
or
add
stc
icebp
jbe
xor
push
je
cmp
mov
or
sbb
add
dec
push
add
or
pop
(bad)
inc
lock
sub
dec
cdq
adc
(bad)
or
cmp
adc
or
xchg
jle
fcom
fwait
inc
imul
or
test
add
icebp
or
inc
add
inc
add
push
and
or
mov
or
lock
mov
jbe
fcomi
jbe
pminub
sbb
lock
outs
add
sbb
sbb
and
push
cmp
and
inc
cmp
push
push
adc
ins
push
cmp
sub
sbb
pop
push
push
xor
lea
or
adc
and
jmp
or
push
jg
sbb
or
pop
adc
sbb
sub
(bad)
(bad)
cli
or
sbb
or
pop
cmp
cld
sbb
(bad)
adc
ret
push
ret
dec
(bad)
fucomi
push
inc
dec
dec
fwait
push
adc
or
or
push
outs
cs
or
or
pop
clc
mov
push
sbb
xor
inc
pop
adc
or
pop
jmp
and
sub
sbb
in
pop
sub
push
push
sahf
or
dec
call
lock
add
push
lock
adc
call
lock
loope
dec
mov
inc
mov
push
push
and
(bad)
in
lea
dec
and
sub
xor
xor
inc
imul
mov
sti
adc
jns
pop
dec
inc
jecxz
xor
cmc
or
aas
push
ds
movs
aas
and
sub
adc
lea
inc
test
pop
es
inc
adc
cmc
adc
cmp
add
sbb
dec
adc
daa
or
mov
inc
and
in
add
jmp
cs
sbb
or
adc
jne
adc
mov
repnz
hlt
xchg
xchg
fisub
pop
outs
mov
jno
push
pusha
push
add
lods
(bad)
dec
pop
xor
stos
(bad)
jg
mov
xor
adc
nop
cs
sub
sbb
ret
mov
dec
pop
dec
and
adc
cld
cs
adc
adc
jmp
sbb
(bad)
retf
pop
sbb
aam
xlat
fiadd
jecxz
pop
sbb
mov
daa
or
out
xchg
or
cmp
das
mov
or
xchg
mov
sar
pop
cmovg
outs
movs
xchg
jmp
out
cli
cwde
lock
dec
mov
or
and
pop
inc
test
sbb
or
(bad)
and
and
fisttp
add
or
in
test
scas
or
call
dec
(bad)
dec
cmp
movs
pop
sbb
mov
add
or
mov
pop
js
push
push
pushf
or
or
pop
add
and
sbb
adc
or
and
(bad)
jg
lock
dec
pop
pop
sbb
sub
inc
sbb
lea
lock
add
cld
or
lock
mov
push
adc
adc
adc
mov
mov
pop
sbb
jg
or
mov
cmp
jne
xchg
(bad)
nop
outs
jmp
pop
sbb
iret
sbb
jge
add
or
adc
add
add
jo
in
or
adc
push
or
sbb
add
adc
add
jae
cdq
sti
and
add
or
sub
xor
adc
add
sbb
ins
sub
out
aas
pop
or
adc
add
les
and
inc
add
sbb
je
daa
pop
mov
cmp
or
push
imul
rol
ins
or
or
adc
test
arpl
adc
(bad)
rcl
add
and
out
fnstenv
push
ret
adc
cdq
adc
adc
add
mov
xor
daa
sub
add
pop
push
and
pop
mov
pop
mov
push
add
cld
xchg
push
cli
nop
add
cmp
sub
ss
je
xlat
cmps
stos
mov
stos
xchg
add
add
pusha
cs
mov
stos
outs
or
lahf
xor
cs
pop
loopne
pop
daa
shr
jae
test
int3
jb
jmp
or
dec
ins
scas
dec
lods
and
(bad)
add
daa
inc
add
jns
rol
test
add
add
add
add
inc
add
add
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
