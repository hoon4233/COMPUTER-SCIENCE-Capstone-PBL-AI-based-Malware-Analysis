(bad)
fisubr
cmp
stos
(bad)
sbb
pop
into
push
pop
push
inc
pop
or
dec
or
sbb
pop
into
push
cs
popf
dec
jns
mov
ds
ficomp
cmp
sub
pop
into
push
dec
aam
push
cs
into
xchg
push
out
xchg
jbe
inc
outs
and
xor
pop
jge
push
jns
add
imul
push
and
mov
sub
leave
ror
jge
lds
push
fimul
adc
xchg
fnstsw
sub
or
jbe
dec
mov
shr
(bad)
idiv
into
push
jae
nop
inc
cmps
mov
fst
or
lods
mov
dec
js
fwait
xchg
jae
inc
pop
inc
ins
pop
inc
add
sbb
into
adc
aam
out
sbb
xchg
imul
xchg
imul
adc
mov
into
push
mov
ror
push
pop
and
xchg
imul
cs
pop
into
xchg
jnp
inc
sbb
imul
lea
pop
or
push
cs
and
imul
adc
pop
cs
sub
add
dec
mov
add
pop
out
sub
data16
mov
jge
in
shl
movs
push
js
es
mov
inc
adc
retf
push
ret
rol
xchg
push
push
inc
adc
cli
xchg
(bad)
aas
xor
shr
pop
or
ds
xor
enter
fimul
adc
sbb
in
mov
and
push
es
pop
into
popf
jmp
push
jmp
pop
(bad)
push
cs
movs
push
(bad)
or
push
fimul
push
daa
popf
mov
push
cs
popf
(bad)
mov
sti
push
sahf
pop
into
neg
into
push
lods
cdq
(bad)
loope
dec
jle
cs
arpl
pop
dec
fisubr
in
push
cs
xchg
inc
jo
inc
bnd
dec
and
in
mov
cs
cmps
das
pop
into
push
lds
into
je
mov
into
push
cs
jp
pop
into
push
or
inc
mov
into
jbe
dec
mov
jle
inc
cmp
pop
into
push
lods
mov
dec
js
inc
jnp
or
dec
adc
pop
int
add
fisubr
aaa
into
je
xor
cmps
cmp
in
mov
(bad)
jo
push
mov
into
loope
jns
pop
mov
into
xchg
or
pop
cs
imul
ins
pop
xchg
arpl
into
push
out
stos
mov
in
pop
fwait
xchg
retf
in
push
das
pop
mov
into
dec
js
jno
pop
xor
xchg
(bad)
stos
sub
rcl
or
into
je
aaa
into
je
xor
cmps
ds
and
dec
fld
xor
ins
push
cmc
ja
into
xchg
stos
test
cmps
push
bound
stos
movs
jge
ror
into
push
jge
xor
pop
(bad)
call
mov
into
xchg
stos
push
sahf
idiv
pop
into
push
lods
cdq
ret
mov
(bad)
fisubr
fstp
fimul
unpckhps
cmp
pop
popf
xchg
inc
jne
or
repnz
cdq
mov
cmps
movs
iret
out
call
ror
into
adc
aaa
into
je
aaa
into
loope
push
xor
mov
fs
inc
fsubr
pop
(bad)
call
lds
imul
mov
je
mov
xor
call
fwait
xor
mov
fs
(bad)
call
lds
(bad)
pop
mov
push
cs
xchg
(bad)
stos
sub
pop
popf
mov
xchg
or
dec
jns
(bad)
aaa
repz
out
movs
inc
fldenv
inc
into
sbb
aaa
into
loope
push
xor
mov
fs
inc
fsub
stos
mov
sub
pop
dec
xor
aaa
into
loope
dec
xor
mov
fs
inc
fcom
sub
test
push
daa
stos
mov
adc
sub
or
jo
or
repnz
cwde
dec
movs
sub
fldcw
cdq
jno
cmp
pop
(bad)
aam
out
cmps
sbb
jmp
(bad)
aam
out
pop
mov
jnp
pop
dec
jnp
pop
and
pop
(bad)
aam
cli
cmps
sbb
jmp
repnz
out
pop
mov
loope
pusha
inc
pop
rcr
jnp
shl
arpl
into
pop
pop
lea
outs
(bad)
pop
sub
daa
in
sub
loope
test
mov
pop
pop
inc
pop
shl
(bad)
sbb
(bad)
push
loope
(bad)
pop
sub
daa
jmp
mov
setge
mov
into
imul
mov
and
mov
shl
into
inc
jo
pop
fnstsw
sub
(bad)
fs
dec
movs
sub
xchg
jae
or
stos
adc
scas
fdiv
loope
mov
xor
pop
jmp
(bad)
xchg
out
fiadd
loope
(bad)
pop
sub
daa
call
pop
into
loope
pop
and
or
movs
out
movs
or
xchg
cmp
mov
pop
into
loope
sbb
rcl
fwait
shl
out
cmps
enter
mov
or
rcr
fwait
das
pop
xor
jno
xchg
xlat
in
or
lods
mov
dec
js
inc
inc
and
or
xor
fisubr
ds
imul
push
push
pop
into
xchg
push
push
je
arpl
fimul
pushf
cmp
out
cmps
leave
(bad)
inc
out
cmps
lea
jg
dec
stc
pop
pop
xor
sub
xchg
imul
neg
cmp
xchg
imul
inc
out
fwait
xchg
retf
fisub
push
jge
cdq
xchg
jae
or
jns
jmp
mov
cmps
lahf
out
cmps
or
das
fdiv
into
push
movs
and
movs
std
adc
les
aaa
in
push
inc
cmps
lahf
dec
fmul
fisubr
push
mov
into
xchg
imul
ss
inc
pop
rcl
mov
cmps
sbb
jmp
(bad)
mov
jno
xchg
xlat
in
or
lods
mov
dec
js
inc
imul
xchg
or
sbb
pop
dec
mov
imul
dec
shl
into
xchg
fnstenv
shl
scas
inc
push
and
or
fs
push
ins
push
pop
lds
icebp
and
xchg
imul
jmp
inc
pop
shr
jo
pop
fnstsw
sub
or
es
bound
dec
fnstenv
into
push
rcr
stos
ins
pop
xor
xor
cwde
imul
xor
cmps
sbb
xchg
push
push
mov
add
shl
xor
or
not
mov
xchg
inc
out
fwait
xchg
retf
or
dec
jns
xchg
adc
aam
pop
(bad)
aam
loope
push
es
pop
pop
into
xchg
call
xor
popf
dec
shr
(bad)
je
aaa
into
not
sub
push
call
lods
and
push
cs
sub
jno
xchg
xlat
in
or
jg
cwde
dec
movs
sub
mov
cmps
movs
out
cmps
call
cs
mov
jle
(bad)
loope
push
inc
pop
sub
xor
(bad)
enter
(bad)
loope
push
inc
out
mov
or
shr
jno
xchg
xlat
in
or
lods
mov
dec
js
inc
imul
dec
add
inc
out
movs
inc
fldcw
pop
into
je
mov
outs
cs
inc
pop
fimul
into
div
sahf
dec
icebp
jmp
popf
mov
imul
jbe
mov
movs
push
mov
xor
push
cs
das
out
push
adc
pop
(bad)
push
push
imul
ds
out
pop
sahf
jbe
mov
xor
movs
dec
xor
cmp
push
cs
xchg
(bad)
stos
sub
pop
popf
mov
imul
fisubr
ror
xor
rol
icebp
inc
das
into
push
pop
popf
xchg
inc
jne
or
cs
into
imul
sub
push
jge
cdq
movs
mov
xchg
jno
sahf
pop
pusha
cs
dec
and
mov
shl
dec
cmp
mov
cs
mov
ins
pop
neg
push
dec
xlat
das
pop
into
xchg
imul
call
push
fnstcw
xor
cmps
sahf
dec
and
sub
mov
jle
(bad)
loope
push
dec
in
pop
and
push
lods
js
mov
lds
xor
cs
inc
fwait
iret
mov
mov
push
cs
iret
jbe
mov
das
loope
mov
xor
lods
cdq
ret
mov
dec
cmp
mov
pop
cs
jbe
pop
pop
into
jmp
shl
mov
jle
mov
movs
sbb
xor
aam
loop
and
push
and
in
pop
cs
dec
arpl
pop
rcr
cmp
push
scas
pusha
mov
ins
pop
xor
cs
mov
(bad)
cmps
sahf
xor
push
jmp
cmp
sub
jp
cs
popf
or
jp
cs
outs
bound
movs
dec
cmc
or
into
push
inc
pop
es
cmps
test
(bad)
cmps
sahf
test
imul
xchg
imul
xchg
imul
repnz
cmps
sub
push
(bad)
inc
arpl
(bad)
mov
jns
icebp
loope
jge
pop
rcr
cmp
pop
out
sub
push
inc
popf
sub
out
jle
mul
cmp
push
cs
inc
pop
rcl
adc
push
jmp
shl
dec
ret
xor
shr
or
pop
push
cs
inc
pop
rcl
cmp
into
loope
pop
into
xchg
imul
repnz
inc
mov
inc
(bad)
pop
into
push
cld
push
mov
push
mov
ss
imul
xor
or
ins
pop
cs
inc
(bad)
pop
test
jno
xchg
xlat
in
or
lods
mov
dec
js
jno
push
dec
loope
(bad)
pop
ss
jmp
aam
aaa
(bad)
aam
popf
dec
mov
dec
and
pop
rcr
xchg
pop
cs
into
xchg
fstp
cmp
push
aam
aaa
not
scas
xchg
imul
sub
push
repnz
dec
jnp
pop
inc
pop
ror
mov
into
push
lods
cdq
(bad)
lahf
ror
cs
retf
mov
mov
loope
push
push
push
fisubr
aaa
(bad)
aam
popf
push
mov
call
pop
into
cmc
data16
std
add
popf
dec
mov
in
xchg
(bad)
ins
ss
jmp
fs
xchg
imul
push
popa
mul
popa
(bad)
arpl
fisubr
ins
push
pop
into
pop
movs
sbb
sahf
adc
adc
fisubr
loop
sub
loope
push
cmps
cs
into
test
into
push
lds
inc
out
movs
inc
fld
push
inc
pop
movs
push
inc
pop
cmps
push
cs
mov
ret
(bad)
push
(bad)
push
mov
inc
pop
movs
push
inc
pop
sahf
mul
push
movs
sbb
xchg
out
fiadd
loope
(bad)
pop
sub
xchg
in
aaa
into
xchg
arpl
(bad)
loope
movs
lea
into
je
ror
jbe
mov
not
into
push
scas
mov
and
pop
xor
mov
jno
pop
xchg
inc
jne
or
mov
pop
into
not
xor
push
jge
cdq
movs
push
cmp
sahf
or
cs
es
inc
pop
into
xchg
stos
test
dec
fcmovbe
mov
xor
fisub
fldenv
push
cs
inc
mov
inc
fld
dec
pop
pop
into
idiv
fadd
loope
mov
into
push
jle
dec
fcmovbe
mov
xor
rcr
or
lods
pusha
push
mov
loope
cmp
xchg
stos
mov
outs
or
xor
aam
loop
popf
mov
loope
mov
mov
movs
fsubr
loope
mov
fisub
cs
into
push
cmps
sbb
lahf
in
or
adc
ror
shl
ins
pop
cs
mov
imul
(bad)
fcom
push
cs
cmps
dec
mov
loope
popf
xor
shl
dec
fisub
aam
pop
cmps
loopne
loope
mov
xor
lea
outs
pop
fmul
xchg
stos
jecxz
loopne
or
into
dec
movs
xor
aam
loop
popf
rcr
fidiv
shl
push
sbb
pop
dec
mov
cs
dec
stos
sub
je
xor
inc
fwait
shl
pop
call
and
or
loopne
loope
mov
inc
fwait
and
test
shl
loope
pop
rcr
jmp
jle
dec
jecxz
mov
outs
pop
cs
outs
cs
dec
fisub
push
jns
pushf
mov
retf
dec
mov
push
lods
clc
jp
shl
jp
cs
rcr
cli
xchg
push
cs
sub
loopne
aam
je
xor
cmps
dec
mov
mul
xor
lods
cdq
ret
mov
movs
pop
inc
xchg
sub
shl
shl
cmp
rcr
or
adc
(bad)
fldcw
pop
into
push
cs
iret
jbe
mov
outs
pop
cs
call
and
loope
pop
mov
cmps
int3
pop
into
xchg
xchg
mov
es
(bad)
repz
pop
into
push
call
cs
into
je
xor
cmps
dec
mov
mul
test
loope
cdq
ret
mov
movs
pop
inc
in
pop
shl
shl
cmp
rcr
or
adc
(bad)
fldcw
pop
into
push
fdivr
je
xor
cmps
dec
mov
imul
cdq
ret
mov
movs
pop
inc
in
pop
shl
shl
cmp
rcr
or
adc
(bad)
fldcw
pop
into
push
cs
iret
jbe
mov
outs
pop
cs
jmp
mov
xor
cs
mov
loope
mov
movs
pop
inc
fisubr
cs
es
mov
repz
pop
into
push
call
cs
into
je
xor
cmps
dec
mov
neg
test
ret
mov
movs
pop
inc
in
pop
shl
shl
cmp
rcr
or
adc
shl
mov
mov
jns
jae
shl
xor
cs
mov
loope
mov
dec
cmc
push
push
jp
shl
retf
outs
call
loope
mov
xor
ja
(bad)
sub
outs
dec
mov
into
mov
cmps
test
(bad)
cmps
sahf
or
cs
sbb
pop
inc
(bad)
pop
test
mov
mov
xor
ror
xchg
xchg
imul
sbb
pop
inc
fwait
xchg
mov
dec
(bad)
shl
xor
aam
loop
test
(bad)
cmps
sahf
dec
arpl
pop
rcr
clc
sbb
shl
push
xchg
in
fisubr
shl
jbe
shl
into
push
fdivr
js
fsub
shl
jle
shl
inc
fwait
mov
xor
jle
dec
mov
mov
push
loope
mov
cwde
add
pop
inc
fwait
cli
mov
pop
std
ins
pop
inc
fwait
mov
mul
cmp
push
cs
inc
pop
rcl
stos
push
retf
ror
shl
sbb
shl
pop
into
cs
into
xchg
imul
(bad)
fcomp
sbb
pop
inc
fwait
(bad)
mov
dec
into
shl
xor
aam
loop
popf
mov
push
ror
shl
adc
shl
cdq
cmps
sbb
xchg
div
in
fidiv
sti
sub
stos
sub
loopne
aam
xchg
stos
mov
inc
fwait
(bad)
mov
mul
jns
inc
pop
rcl
stos
sub
push
cs
jg
pop
cmp
cmps
fdivr
shl
ds
mov
xor
shl
inc
fwait
shl
mov
fisub
fisubr
shl
int
cs
into
test
into
push
cmps
test
(bad)
cmps
sahf
xor
mov
mov
mov
mov
mov
into
push
lods
cdq
fidivr
fcomp
shl
and
shl
xor
mov
mov
xor
rcr
and
cmps
mov
into
in
mov
jnp
shl
inc
stc
xchg
pop
into
push
cs
imul
or
ror
loop
imul
push
daa
popf
rcr
clc
data16
mov
xor
ror
into
xchg
stos
std
xor
ror
repz
cs
into
xchg
imul
push
daa
popf
rcr
fsubr
shl
xor
ror
mov
inc
push
pop
into
jmp
shl
mov
cs
dec
sbb
xor
rcr
imul
pop
into
je
mov
jb
pop
xchg
xchg
imul
xor
rcl
or
loope
mov
(bad)
shl
xor
mov
mov
xor
rcr
and
cmps
mov
into
in
mov
jnp
shl
inc
stc
xchg
pop
into
push
cs
imul
or
ror
mov
cmc
pop
dec
into
push
daa
popf
rcr
clc
inc
loope
mov
xor
ror
into
xchg
stos
fnstenv
loopne
or
repz
cs
into
xchg
imul
pop
cs
dec
mov
cs
dec
or
pop
into
xchg
stos
cmp
movs
push
shr
cmp
shl
xor
jle
mul
jns
inc
pop
shl
pop
imul
cmp
cmps
fcom
(bad)
fcom
popf
xchg
cmp
rcr
loopne
loope
mov
into
push
ror
shl
cmps
loope
mov
xor
imul
xor
fnsave
shl
inc
push
cs
or
das
pop
into
push
inc
pop
xor
mov
mov
mov
mov
mov
into
push
lods
cdq
ficom
in
rol
shl
mov
xlat
aam
out
mov
xor
rcl
dec
inc
shl
ss
mov
xor
ror
into
popf
jmp
loope
mov
mov
mov
mov
into
push
lods
cdq
ficom
in
fidiv
shl
inc
fwait
stos
mov
(bad)
loope
push
jbe
dec
pop
into
jmp
shl
dec
mov
mov
xor
shl
shl
xor
rcl
dec
mov
mov
xor
(bad)
dec
mov
movs
ins
xor
mov
xor
shl
shl
xor
rcr
jae
shl
or
cs
pop
not
or
loopne
or
(bad)
popf
xchg
lea
loopne
pop
mov
loope
mov
cwde
push
xchg
push
cmps
push
cs
sub
loopne
aam
popf
xchg
mov
loopne
pop
mov
loope
mov
cwde
push
movs
fcom
loope
mov
cwde
push
movs
fcom
loope
mov
cwde
push
xchg
dec
rcr
cs
sub
loopne
aam
xchg
stos
mov
inc
ror
(bad)
div
stos
xor
jno
xchg
xlat
in
or
inc
mov
into
jbe
dec
mov
dec
cld
into
push
cs
sahf
jp
js
push
cs
dec
repnz
cwde
dec
cmps
cmp
fldcw
popf
xor
aam
jmp
movs
and
xchg
push
mov
into
push
fmul
push
inc
add
shl
pop
dec
fisubr
mov
call
scas
jmp
adc
adc
ss
retf
ret
adc
shl
jmp
imul
pop
repnz
inc
jnp
call
scas
xor
xor
mov
shl
xchg
(bad)
movs
sbb
jp
pop
into
push
cs
pop
fsubr
pop
fwait
xchg
retf
or
dec
xchg
dec
loopne
jnp
ss
(bad)
aam
jbe
jmp
movs
push
inc
jb
pop
cs
into
je
mov
js
pop
inc
fdivr
and
pop
jbe
add
aam
loop
call
retf
fisub
add
inc
inc
es
popa
or
pop
xchg
inc
(bad)
pop
mov
shr
into
cmps
cmps
inc
into
push
fnstcw
popf
or
pop
cs
dec
cmp
ret
cs
push
mov
pop
and
cs
dec
(bad)
push
into
push
jmp
pop
retf
pop
inc
out
push
les
pop
mov
into
pop
out
push
inc
cdq
sub
into
and
pop
into
push
and
mov
cs
xor
stos
int
pop
cs
push
mov
into
pop
(bad)
xor
push
mov
into
das
out
(bad)
ds
push
push
lods
mov
cmp
sub
pop
cs
sbb
pop
dec
adc
ret
outs
stos
enter
neg
pop
cmp
outs
les
mov
das
pop
test
pop
test
push
into
push
(bad)
dec
int3
push
mov
into
imul
pop
into
push
rcr
stos
ins
pop
cmp
ss
ds
das
out
mov
sbb
and
into
jmp
cmps
pushf
dec
adc
ret
ds
mov
mov
mov
(bad)
sub
push
idiv
pop
into
push
scas
pushf
mov
adc
ret
sub
sbb
ret
es
das
out
mov
sbb
pop
dec
adc
ret
es
pop
out
movsx
(bad)
push
mov
cs
mov
(bad)
push
das
sub
das
out
mov
sbb
pop
dec
adc
ret
das
fmul
cmp
sub
into
push
cs
loopne
mov
(bad)
push
sub
leave
das
out
mov
sbb
pop
inc
(bad)
pop
xchg
inc
fild
pop
int3
fldcw
sbb
cs
into
push
cs
loopne
mov
mov
rcr
sub
inc
fild
pop
mov
and
into
push
(bad)
mov
pop
cs
retf
es
into
xchg
out
push
xchg
out
ffree
push
mov
into
pop
(bad)
mov
push
cs
and
sub
retf
es
into
div
pop
into
push
(bad)
sbb
cs
retf
push
mov
pop
into
push
(bad)
mov
pop
cs
retf
es
into
not
mov
sbb
ret
sub
pushw
cs
jbe
and
jmp
cmps
pushf
dec
sbb
ret
sub
pop
(bad)
faddp
or
cs
push
mov
into
ds
cmp
das
xchg
imul
xchg
call
test
or
push
bound
ss
stos
int
pop
cs
dec
push
cs
mov
adc
hlt
loope
fmul
test
pop
dec
adc
ret
outs
mov
loope
sub
cs
mov
das
pop
test
pop
test
js
push
scas
push
(bad)
sub
push
div
into
push
cmps
xchg
out
cmps
pushf
xor
pop
jmp
(bad)
sub
into
push
cs
pop
movs
pop
ins
outs
(bad)
pop
into
xchg
out
das
xchg
imul
outs
(bad)
pop
into
cmp
pop
into
push
cmps
sbb
adc
pop
dec
(bad)
sub
mov
and
mov
adc
dec
xchg
cs
into
sahf
push
stos
mov
mov
into
cmps
and
into
push
fnstcw
adc
pop
into
push
pop
push
outs
pop
mov
into
pop
sub
pop
cs
pop
mov
into
sbb
dec
dec
arpl
pop
mov
sbb
dec
sbb
int
push
sub
repz
push
stos
retf
ffree
push
mov
into
sahf
cmps
xchg
iret
(bad)
cmps
pushf
inc
out
push
ror
mov
into
popf
into
pop
inc
pop
fcomp
mov
sub
ret
sahf
push
stos
into
imul
retf
push
mov
js
mov
into
cmc
ss
pop
movs
dec
ret
pop
inc
push
cmps
pop
(bad)
mov
into
loope
push
pop
pop
cs
(bad)
mov
neg
and
mov
pop
xchg
push
popa
into
push
lods
js
mov
into
cmc
ss
pop
movs
dec
ret
pop
inc
push
cmps
pop
(bad)
sub
pop
cs
test
int
push
pop
xchg
sbb
mov
cmps
lods
out
lea
pop
cs
push
pop
lds
(bad)
js
push
jo
pop
fnstsw
sub
or
pop
xchg
rol
imul
stos
ins
pop
cmps
pop
xchg
pop
into
mul
into
push
cmps
call
mov
cs
xchg
mov
xchg
pop
into
dec
(bad)
adc
push
cs
fiadd
jl
into
jmp
cmps
fwait
cmps
and
scas
push
cs
cmp
xchg
pop
into
dec
mov
cs
inc
xchg
pop
into
dec
(bad)
push
scas
push
cs
xchg
mov
out
fwait
xchg
retf
fisub
jbe
or
sbb
sahf
xor
pop
jmp
je
ror
inc
mov
into
fldcw
(bad)
push
cs
inc
(bad)
das
test
lods
cmp
push
mov
lods
or
sbb
stos
out
fsub
popf
dec
mov
jp
fisubr
pop
cs
cmp
cmps
sbb
in
fisubr
(bad)
das
pop
into
push
jmp
pop
into
xchg
sub
je
cs
(bad)
rcr
stos
ins
pop
or
pop
into
push
fmul
fldcw
iret
push
cs
dec
jnp
pop
inc
arpl
pop
into
push
cs
imul
pop
enter
sub
dec
cmp
into
popa
into
push
mov
pop
inc
pop
mov
movs
sbb
imul
dec
jl
pop
inc
pop
mov
mov
test
into
push
rcr
stos
ins
pop
movs
push
shr
outs
je
aaa
into
je
aaa
enter
es
dec
pop
into
lahf
lds
cli
mov
call
loope
in
inc
pop
retf
or
ror
sub
cmp
inc
jo
pop
fnstsw
sub
shr
lahf
sub
lahf
out
cmps
or
xchg
imul
(bad)
or
adc
popf
dec
test
fwait
repnz
sbb
je
aaa
into
je
ror
idiv
mov
pop
fimul
(bad)
loope
ins
push
pop
cs
mov
lds
mov
into
jmp
retf
loop
sahf
fwait
xchg
retf
or
jns
xlat
lahf
ftst
cmps
push
mov
into
loope
push
movs
loope
dec
fiadd
in
or
lods
mov
dec
js
inc
imul
xchg
adc
pop
mov
loope
jmp
and
mov
cli
adc
mov
out
cwde
sbb
sbb
mov
rcl
cwde
sbb
sbb
cs
adc
mov
dec
adc
pop
into
xchg
imul
sub
aad
es
jmp
loope
jmp
sbb
push
and
fisub
pop
lahf
rcr
cmps
test
cwde
dec
fsub
in
push
dec
xchg
cs
into
xchg
aam
and
and
fimul
pop
lahf
mov
hlt
sub
fs
inc
aam
popf
(bad)
pop
shr
pop
into
imul
pop
shl
push
adc
pop
into
dec
(bad)
or
push
cs
js
shl
sbb
mov
pop
into
dec
jle
call
fiadd
loope
or
xchg
jp
retf
pop
aam
and
pop
(bad)
int
(bad)
fisub
sbb
dec
inc
pop
sub
mov
xchg
jnp
inc
or
pop
into
push
cs
adc
dec
dec
and
(bad)
jb
cs
mov
pop
(bad)
push
loope
mov
into
sahf
adc
imul
push
scas
popa
enter
inc
out
mov
sahf
adc
imul
popf
(bad)
pop
dec
and
pop
mov
imul
push
js
sub
push
pusha
jo
cs
mov
imul
(bad)
sbb
sub
xchg
neg
push
mov
mov
popf
out
pop
inc
sbb
pop
into
push
cs
and
stos
xchg
(bad)
adc
mov
imul
lahf
xchg
(bad)
fisub
sbb
pop
sbb
lods
mov
adc
pop
into
push
pop
pop
repz
pop
into
imul
push
loope
or
xchg
jp
retf
pop
aam
and
pop
(bad)
iret
(bad)
lods
mov
xchg
imul
sbb
(bad)
pop
inc
dec
(bad)
aam
sbb
pop
into
push
scas
popa
lock
pop
cmova
data16
sbb
sub
sbb
popa
enter
inc
out
mov
sahf
adc
imul
shr
push
repz
pop
into
push
pusha
xor
cs
mov
push
cs
fwait
push
mov
cmps
dec
hlt
sub
retf
pop
into
push
imul
into
adc
nop
inc
out
fwait
xchg
retf
fisub
adc
cdq
loope
sub
cs
mov
loope
pop
dec
and
pop
mov
imul
fdiv
imul
sbb
and
sbb
pop
test
imul
pop
into
popf
call
jmp
fwait
push
out
mov
out
(bad)
outs
pop
inc
cmps
movs
iret
(bad)
jle
dec
call
sub
jp
cs
js
xor
push
cs
mov
push
cs
popf
dec
mov
push
sbb
sub
ficomp
rcr
xor
pop
sbb
ins
(bad)
mov
xchg
sub
sbb
ror
xchg
imul
into
cmps
cmps
iret
les
lea
fcmovbe
mov
das
(bad)
fwait
jmp
mov
lods
cmps
retf
ins
movs
fiadd
loope
scas
iret
les
lea
das
xchg
into
lods
mov
xchg
imul
pop
xor
(bad)
aam
loope
sub
fiadd
loope
movs
inc
dec
xor
into
lods
mov
xchg
imul
and
pop
into
push
jge
shr
mov
mov
(bad)
sub
loope
fimul
adc
xchg
xlat
in
or
xchg
add
push
cs
inc
cs
popf
dec
jns
xor
shl
xor
cs
inc
cs
repz
cs
dec
ins
sub
xor
call
mov
jp
cs
dec
mov
cs
adc
mov
jb
cs
mov
rcl
into
push
push
js
fnsave
retf
jle
pop
into
sbb
pop
and
in
shl
loope
ss
mov
pop
into
dec
(bad)
cld
xchg
push
cs
pop
mov
mov
sahf
xchg
shr
ss
mov
pop
into
dec
out
mov
adc
shl
(bad)
push
mov
mov
sub
(bad)
outs
pop
dec
fsave
js
fnsave
rcr
ins
pop
into
adc
fwait
dec
in
shl
in
shl
and
jge
pop
cs
rcr
jmp
in
shl
or
or
pop
retf
xor
sub
jp
fnsave
icebp
mov
pop
pop
cs
es
xlat
mov
adc
shl
into
xchg
mov
aam
ffreep
dec
paddw
aam
sbb
pop
mov
cmps
fdivr
icebp
shl
cmps
push
ds
into
dec
xabort
push
cs
popf
fcomp
sub
jp
(bad)
mov
loope
fmul
and
shr
sbb
ror
into
loope
sub
fisubr
shl
push
cs
xor
shr
push
rcl
es
mov
inc
pop
rcl
dec
fisubr
lock
dec
rcl
and
(bad)
out
mov
(bad)
pop
int
rcl
cli
movs
lods
mov
ss
shl
xor
sub
ins
repz
loope
pop
into
ins
and
push
sbb
dec
into
push
cmps
fmul
shl
into
push
cs
dec
in
lods
into
push
pop
jmp
imul
(bad)
in
mov
and
rcr
pop
cs
dec
xchg
lock
into
push
pop
fsub
icebp
shl
xor
rcr
stos
ins
pop
xor
(bad)
ins
xchg
push
cs
sbb
mov
pushf
sub
movs
dec
fstp
mov
test
imul
mov
cmp
shl
pop
ffreep
pop
ud0
and
push
fist
shl
xor
out
mov
daa
sbb
mov
iret
aam
push
int3
loope
test
jae
shl
ins
cdq
mov
into
sahf
xchg
mov
mov
pop
cs
dec
cs
inc
fwait
mov
int
sub
push
cs
xor
xor
cmps
fcom
shl
xor
movs
enter
mov
int3
xchg
stos
leave
adc
rcl
dec
mov
mov
pop
int3
xchg
stos
int
loope
aam
mov
mov
adc
rcl
dec
ret
xor
dec
cmps
icebp
mov
adc
shl
into
xchg
stos
mov
loope
fs
mov
ins
(bad)
dec
(bad)
mov
adc
rcr
icebp
mov
adc
rcr
fld
into
sbb
aaa
into
xchg
mov
pushf
and
jl
pop
cmps
icebp
mov
pushf
jbe
pop
iret
push
ror
(bad)
shl
mov
test
scas
and
rcr
rcl
in
cli
xor
cmps
push
fld
mov
enter
mov
fimul
push
int3
mov
cmps
enter
mov
into
dec
(bad)
push
dec
scas
icebp
mov
dec
jle
pop
into
sahf
push
push
into
adc
(bad)
dec
jmp
repz
pop
into
push
fnsave
and
pop
into
div
fdivr
icebp
shl
into
push
fisub
mov
fsubr
rcl
or
fisub
icebp
mov
sub
shl
neg
pop
jne
out
lods
mov
sahf
push
pop
mov
imul
dec
inc
out
lods
mov
sahf
push
pop
mov
imul
(bad)
push
pop
push
xor
mov
into
adc
mov
jp
mov
ins
rcl
iret
adc
pop
into
imul
retf
pop
into
push
lods
mov
xchg
push
retf
mov
dec
xchg
fnstenv
and
rcr
(bad)
fst
retf
loope
mov
mov
xor
das
push
js
lea
int3
xchg
xchg
dec
push
shl
repnz
pop
into
push
cs
sahf
adc
push
cs
into
imul
repnz
sub
sahf
adc
push
cs
into
imul
push
cs
pop
lds
adc
rcl
mov
mov
das
sub
adc
mov
adc
shl
xor
pop
movs
xor
lods
cdq
ret
mov
mov
icebp
shl
and
rcr
imul
das
sbb
adc
xchg
stos
dec
es
inc
sbb
mov
xor
rcr
push
cs
push
loope
sub
cs
loop
mov
xor
das
push
js
fnsave
rcr
ins
pop
into
adc
add
xchg
retf
fisub
pop
jge
cdq
xchg
jae
or
int
push
push
in
sub
(bad)
aam
shl
mov
inc
sub
mov
xchg
dec
into
push
cs
push
imul
dec
(bad)
shl
mov
cs
into
in
mov
mov
mov
pop
ja
cs
into
in
mov
cmc
jns
push
lea
pop
lahf
inc
dec
(bad)
fisttp
loopne
mov
xchg
sub
mov
leave
sub
sahf
imul
loopne
fnsave
lahf
inc
movs
cld
bound
pop
or
pop
daa
mov
sub
mov
not
mov
pop
into
sahf
imul
and
pop
into
push
push
xor
jge
into
jmp
out
mov
and
lea
or
ss
pop
pop
dec
pop
rcr
ins
pop
inc
fsubr
pop
mov
imul
ss
push
pop
dec
pop
rcr
ins
pop
cmp
popf
mov
popf
(bad)
pop
mov
sbb
or
dec
push
cs
mov
sbb
pop
into
adc
pop
into
imul
pop
push
sub
sahf
imul
sahf
push
mov
xor
rcr
fcom
mov
jmp
enter
iret
cmc
and
mov
das
fnsave
xchg
imul
fcmovu
cmp
xchg
imul
sbb
cs
sahf
imul
inc
jo
pop
fnstsw
sub
or
mov
jne
into
push
fnstcw
or
pop
into
push
js
into
test
into
push
cmps
lods
dec
(bad)
rcr
mov
adc
pop
or
pop
into
cmc
sub
dec
loope
and
inc
jo
pop
fnstsw
sub
(bad)
push
pushf
push
or
jge
mov
push
cs
sub
rcl
or
pop
push
inc
fwait
cs
into
dec
cs
jbe
sub
into
jmp
icebp
mov
dec
push
into
mov
into
push
fimul
push
pop
stos
inc
out
movs
inc
fnstenv
pop
fnstsw
sub
loop
xor
jbe
ins
pop
into
jmp
cmps
call
es
into
neg
push
jno
or
repnz
cwde
dec
xchg
leave
(bad)
loop
fsub
sbb
pop
into
je
xor
movs
sbb
inc
pop
into
push
scas
mov
pushf
push
cs
popf
shl
ret
pop
inc
pop
and
out
push
scas
stos
scas
push
cs
(bad)
faddp
or
cs
inc
(bad)
sbb
into
xchg
imul
jmp
cmps
call
pop
push
inc
pop
and
mov
lds
pop
(bad)
aam
out
shr
ds
shr
xor
les
jg
into
xchg
(bad)
ins
ss
jmp
add
sti
jg
popf
dec
jns
stos
pop
in
dec
icebp
lds
push
inc
pop
cmps
sahf
cs
into
je
aaa
into
je
xor
xor
mov
dec
cs
inc
fsubr
ins
push
cmc
dec
fdivr
nop
push
into
je
aaa
into
je
or
dec
jl
into
xchg
imul
lods
xchg
xor
popa
iret
push
pop
movs
inc
fld
dec
ror
popf
loope
push
cwde
div
pop
inc
pop
ror
sub
or
xchg
jl
into
dec
(bad)
je
push
cs
and
pop
cmp
cmps
sbb
xchg
imul
push
add
xchg
retf
or
dec
jns
inc
jne
sub
inc
popa
into
push
inc
pop
cmps
sahf
cs
into
je
aaa
into
je
xor
xor
mov
dec
cs
inc
fsub
call
out
mov
je
aaa
into
je
or
test
ror
push
shr
ret
dec
pushf
push
or
mov
pop
into
cmps
adc
into
push
fnstcw
or
out
sbb
fwait
xchg
retf
fisub
push
jge
cdq
xchg
pop
push
or
xchg
icebp
mov
fdivr
push
pop
xchg
lds
test
arpl
(bad)
mov
push
test
cmps
pop
int3
pop
into
imul
into
push
movs
sbb
xchg
in
ins
or
jnp
cmps
and
sbb
into
push
lods
cdq
fisubr
cmc
mov
adc
push
ror
pop
dec
fisub
push
cmc
inc
and
es
shl
into
imul
retf
sbb
arpl
and
dec
inc
jne
pop
cs
dec
cs
dec
fisub
(bad)
mov
cmps
sbb
xchg
imul
out
cmps
sbb
inc
jo
pop
fnstsw
sub
jns
xchg
push
movs
sub
fldcw
aad
push
sub
rcl
mov
cmps
sbb
jmp
(bad)
mov
inc
data16
cs
dec
cs
xchg
das
shl
cmc
dec
inc
push
pop
dec
cs
dec
fisub
sbb
jmp
int3
pop
into
imul
mov
push
jno
xchg
xlat
in
or
lods
mov
dec
js
jne
and
(bad)
cmps
lock
into
push
fnstcw
or
pop
fisubr
imul
fisubr
in
mov
pop
ja
cs
into
in
mov
cmp
sahf
push
dec
iret
imul
or
inc
into
xchg
imul
outs
pop
inc
pop
shl
sub
frstor
jmp
loope
jmp
sbb
fimul
add
sbb
sahf
push
mov
mov
loope
fnsave
cmps
push
gs
push
fnstcw
or
test
shl
xor
cwde
sbb
out
lods
popf
rcr
imul
sbb
test
(bad)
cmps
sahf
dec
jae
pop
dec
arpl
pop
mov
push
cs
sub
frstor
pop
inc
dec
es
jns
pop
lea
push
and
fwait
cld
and
or
imul
xor
arpl
push
pop
imul
push
movs
sbb
adc
push
shr
jmp
imul
pop
es
fwait
push
and
pushf
push
pop
(bad)
iret
pop
retf
cli
jno
xchg
xlat
in
cmp
pop
cmps
cs
mov
mov
pop
pop
cmps
arpl
xor
fmul
mov
int
mov
int
pop
mov
sbb
pop
pop
mov
sbb
pop
daa
test
mov
int
cmps
cs
mov
mov
pop
pop
cmps
sbb
cli
sub
mov
int
mov
int
popf
out
pop
pop
mov
int
imul
pop
mov
int
jns
aam
jecxz
sahf
scas
mov
mov
push
cs
xchg
mov
div
pop
cs
dec
adc
pop
mov
int
mov
int
or
lods
sahf
retf
int
aad
int
mov
pop
mov
int
mov
int
(bad)
mov
int
mov
dec
xor
cs
mov
inc
ror
xor
in
mov
(bad)
mov
cli
sub
mov
dec
mov
mov
int
inc
mov
fidiv
push
mov
int
mov
pop
pop
xchg
test
jle
cld
int
mov
int
xchg
out
pop
mov
int
(bad)
mov
add
pop
mov
mov
int
pop
(bad)
int
mov
int
cmps
cs
mov
mov
int
push
int
mov
pop
pop
xchg
test
jle
cld
int
mov
int
xchg
out
pop
mov
int
(bad)
mov
add
pop
mov
mov
int
pop
(bad)
int
mov
int
jg
int
mov
mov
inc
sti
lods
mov
dec
js
inc
inc
es
mov
dec
aam
adc
sbb
bound
mov
inc
mov
(bad)
call
imul
repnz
sbb
xchg
imul
push
(bad)
mov
push
pop
fimul
xor
lahf
inc
dec
aad
mov
cmps
lahf
iret
fsub
cmps
into
imul
mov
cs
neg
adc
push
cmps
sbb
cmps
shl
into
push
xchg
pop
into
push
cs
js
aad
aaa
aaa
inc
cmp
cmps
pushf
inc
pop
into
les
out
lahf
inc
dec
aam
retf
sub
mov
out
outs
push
js
and
and
xchg
inc
push
and
retf
mov
ficom
and
ficom
cwde
adc
in
fisub
fnstcw
xor
shl
(bad)
jbe
pop
into
push
mov
or
pop
aad
inc
(bad)
das
lods
sahf
xchg
imul
into
jle
(bad)
push
cs
movs
sbb
test
out
jle
out
push
cs
dec
fimul
(bad)
mov
cmps
lahf
(bad)
fsub
pop
test
imul
daa
call
mov
pop
fnstsw
sub
jns
cmp
fnstcw
or
and
into
push
xchg
push
into
sbb
fnstenv
ret
(bad)
inc
out
cmps
lea
icebp
cmps
lods
cmp
cmps
sbb
xchg
call
pop
into
push
pop
pop
(bad)
faddp
adc
mov
jle
mov
loope
fimul
push
cmps
sahf
(bad)
fisub
fabs
sbb
pop
shr
(bad)
fisub
and
push
add
pop
into
xchg
stc
adc
(bad)
or
test
mov
stc
sub
cli
and
or
jmp
push
cs
jbe
xor
jmp
cmps
fwait
movs
adc
(bad)
sub
pop
int
(bad)
or
into
popf
jmp
xchg
imul
pop
rcl
fcmovne
xchg
pop
into
das
ds
pop
(bad)
or
out
mov
sub
pop
neg
das
pop
mov
cmps
sbb
cmc
cmp
ds
(bad)
or
movs
dec
adc
lods
sbb
sbb
pop
retf
(bad)
xchg
pop
into
daa
imul
push
cs
into
(bad)
test
push
cs
mov
and
xor
out
mov
repz
xchg
pop
into
div
adc
push
cmps
sbb
idiv
adc
push
movs
and
adc
jmp
cmps
pusha
adc
push
inc
into
push
inc
sbb
into
xchg
neg
ficom
sub
push
fimul
adc
aam
jmp
inc
pop
out
or
movs
dec
push
mov
lods
sbb
sbb
pop
retf
rcl
test
jae
cs
out
lds
out
das
lods
inc
fsub
(bad)
fcmovnb
xchg
pop
into
das
fimul
mov
mul
mov
pop
sbb
ins
not
adc
cs
js
ror
ins
pop
inc
adc
loopne
push
cmps
push
hlt
xchg
icebp
pop
repz
or
iret
int3
(bad)
fimul
movs
push
adc
adc
ds
cmps
fwait
dec
arpl
pop
mov
push
and
mov
jle
push
sbb
cs
xor
inc
pop
movs
sbb
pop
movs
push
inc
pop
into
push
outs
mov
xchg
cs
cli
inc
pop
inc
pop
(bad)
or
xor
mov
push
cs
dec
lock
aas
into
push
shr
sub
mov
into
push
jge
adc
(bad)
fisubr
nop
inc
out
fwait
xchg
retf
fsub
or
jo
cmp
sahf
lahf
sar
cs
push
pop
into
mov
pop
into
xchg
xor
ds
(bad)
or
je
into
push
xchg
mov
(bad)
mov
in
pushf
aaa
add
xchg
inc
into
ja
or
cmps
enter
mov
and
push
cs
js
shl
sbb
xchg
out
stos
and
aam
movntq
je
xchg
inc
fsubr
pusha
xor
shl
inc
pop
shl
push
shl
test
cs
call
call
mov
xor
shr
out
fnstcw
xor
cmps
fwait
inc
fwait
shl
pop
mov
iret
pop
into
xchg
stos
cmps
xor
ror
into
je
aaa
into
je
aaa
into
je
xor
inc
fwait
aad
xor
jle
cmps
push
cs
inc
fisub
out
cmps
fwait
xor
in
shr
idiv
pop
inc
fisub
iret
add
pop
cmps
out
pop
into
loope
test
push
push
cs
xor
mov
mov
into
dec
inc
sub
ror
shl
test
cs
aaa
(bad)
or
ror
into
xchg
stos
mov
cmps
push
cs
dec
imul
into
push
rcr
stos
ins
pop
cmps
(bad)
pop
into
jbe
mov
xor
shl
into
sahf
(bad)
jle
push
cs
cmps
jb
pop
into
jbe
mov
into
push
scas
mov
push
cs
dec
fidivr
cmp
pop
into
inc
jo
pop
fnstsw
sub
or
test
mov
lahf
shr
push
mov
into
lahf
jmp
fisubr
out
ror
jbe
pop
rcr
pop
movs
push
inc
pop
xor
mov
xchg
cs
das
(bad)
aam
xchg
(bad)
push
loope
(bad)
pop
sub
xchg
imul
pop
inc
pop
xor
mov
xchg
mov
xchg
add
sti
jg
jno
outs
sbb
xchg
(bad)
stos
sub
shr
(bad)
sbb
push
inc
pop
sahf
loope
dec
xor
mov
(bad)
neg
pop
into
push
lods
cdq
(bad)
inc
out
fwait
xchg
retf
or
je
out
lahf
sar
push
cs
retf
ror
push
shr
ret
push
sbb
pop
into
popf
jmp
sti
jg
cdq
mov
scas
stos
inc
dec
cs
inc
pop
(bad)
or
movs
push
inc
pop
into
sbb
aaa
into
je
aaa
into
loope
push
xor
mov
push
cs
(bad)
ficomp
(bad)
faddp
push
imul
mov
je
mov
xor
cmp
into
push
daa
popf
mov
test
into
push
pop
popf
and
out
call
cs
(bad)
fisubr
pop
fnstsw
sub
movs
sub
xchg
imul
imul
das
sub
ss
jmp
movs
jmp
cmps
call
cs
into
je
mov
(bad)
div
mov
and
js
into
je
mov
xor
movs
adc
mov
test
push
pop
popf
and
div
push
and
mov
lds
fnstcw
or
xchg
or
dec
js
jno
push
pop
ss
jmp
pop
into
push
pop
jle
mov
pop
into
dec
(bad)
adc
push
cs
out
stos
and
loop
pop
into
daa
imul
cmc
outs
aaa
into
jbe
pop
into
push
inc
pop
movs
push
inc
pop
cmps
jg
pop
into
imul
into
push
lea
or
push
pop
into
pop
out
sub
das
out
mov
loope
mov
ds
cs
inc
pop
shl
mov
xlat
in
in
jbe
ds
out
sbb
sbb
pop
inc
dec
es
fwait
xchg
retf
or
dec
jns
mov
or
fmul
xchg
push
push
and
adc
inc
pop
and
xor
in
cmova
das
lahf
pushf
loope
dec
sbb
into
popf
jmp
xchg
jnp
or
sub
inc
out
popf
int3
cmc
push
aam
aaa
not
or
push
pop
lahf
dec
arpl
pop
mov
push
pop
inc
inc
out
(bad)
sbb
fist
cs
jmp
cmps
sahf
inc
pop
and
int
and
into
xchg
jmp
aam
pop
shr
rcl
jle
mov
push
cs
jmp
cmps
sahf
inc
pop
and
and
daa
aam
jmp
cmps
sahf
xchg
inc
jne
or
repnz
cwde
dec
movs
add
fldcw
xchg
sub
dec
pop
fimul
push
cs
es
push
into
xchg
imul
fldenv
or
cs
jmp
or
jnp
(bad)
call
sub
out
pop
push
push
push
push
js
sbb
pop
std
pop
adc
cmp
pop
rcr
cmc
push
jns
rcl
and
pop
into
push
mov
aaa
xchg
clc
fimul
jg
aam
cmps
xor
into
push
xchg
adc
fisub
sub
les
dec
ret
popf
jmp
test
mov
jns
ficomp
pop
dec
fidivr
cmp
pop
rcl
pop
shl
out
repnz
pop
fidiv
inc
fsubr
lahf
inc
dec
fiadd
nop
inc
out
fwait
xchg
retf
in
push
sub
es
js
jne
jae
fst
in
fisubr
shl
and
shl
xor
ror
lahf
out
shl
or
cs
cmp
ins
push
not
push
into
push
lods
loopne
loope
mov
es
out
mov
adc
cmp
inc
fwait
mul
into
push
cs
imul
mov
xor
rcl
jae
shl
xor
shr
mov
mov
hlt
push
sub
dec
inc
sbb
into
xchg
stos
mov
adc
cmp
cmps
fcomp
loope
mov
(bad)
jbe
pop
into
push
(bad)
mov
cs
dec
cs
cmp
cmps
fadd
loope
mov
(bad)
xchg
stos
xchg
xor
rcl
setge
mov
into
imul
or
pop
(bad)
shl
es
mov
cmps
dec
iret
pop
into
loope
push
sbb
into
popf
jmp
loope
mov
push
pop
cs
dec
fisub
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
(bad)
and
push
cs
push
cs
push
jmp
shl
lock
neg
into
push
lods
cdq
ficom
in
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
loope
mov
xchg
pop
cs
dec
fisub
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
(bad)
mov
lods
push
cs
push
jmp
shl
lock
div
sbb
push
lods
cdq
fsubp
pop
jns
or
pop
into
xchg
stos
mov
cmps
aas
iret
pop
into
dec
(bad)
pushf
mov
fimul
or
sahf
test
into
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
xchg
sbb
push
lods
cdq
(bad)
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
lods
sbb
push
lods
cdq
(bad)
jbe
mov
xor
shl
into
popf
jmp
push
(bad)
js
push
cs
push
cs
push
jmp
push
jle
or
dec
pop
into
push
mov
aaa
dec
movs
loopne
loope
mov
mov
jns
ficomp
pop
dec
fidivr
mov
pop
cs
ja
sub
movs
pushf
jbe
mov
adc
shl
into
push
mov
mov
inc
fwait
shl
push
(bad)
ins
pop
sahf
idiv
push
into
push
lods
cdq
out
neg
into
push
les
out
cmps
retf
arpl
pop
ja
cs
into
xchg
movs
pushf
xchg
xchg
mov
cmps
and
pop
into
dec
mov
push
fimul
push
xchg
mov
xchg
stos
cdq
xor
rcl
or
push
xchg
push
into
push
les
out
cmps
retf
arpl
pop
xor
(bad)
ror
push
(bad)
adc
push
cs
push
cs
push
jmp
push
dec
cmps
aad
pop
into
loope
mov
cmps
pop
cs
dec
fisub
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
push
inc
retf
mov
xor
shl
mov
jle
xor
dec
fidivr
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
clc
pop
into
push
lods
cdq
(bad)
idiv
into
push
les
out
cmps
retf
arpl
pop
ja
cs
into
xchg
movs
pushf
xchg
xchg
mov
cmps
and
pop
into
dec
(bad)
and
lods
and
push
and
mov
mov
cs
pop
cs
or
cs
push
pop
cmp
cmps
fdiv
shl
jb
shl
dec
(bad)
mov
xor
shl
out
mov
jae
shl
xor
rcl
and
aam
cmps
xor
into
push
mov
aaa
popf
in
cmp
xchg
(bad)
in
push
cs
je
ret
jmp
cmps
enter
mov
scas
dec
mov
mov
mov
mov
mov
into
push
lods
cdq
(bad)
stos
loope
jecxz
fdiv
shl
into
ins
stos
mov
xor
pop
inc
inc
fwait
cs
xor
jle
dec
loop
mov
cs
cs
into
popf
jmp
push
(bad)
fmul
push
cs
push
jmp
push
dec
cmps
inc
into
pop
into
loope
mov
outs
pop
cs
dec
fisub
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
js
into
push
lods
cdq
(bad)
lahf
stos
popf
xor
rcr
into
push
mov
xor
shl
shl
xor
rcl
dec
repnz
cmps
push
cs
pop
cs
inc
pop
xor
dec
out
mov
into
push
scas
loopne
push
shl
iret
push
fdivr
xchg
imul
out
into
daa
stos
movs
xor
rcl
push
das
pop
into
xchg
stos
movs
xor
rcl
dec
repnz
cmps
inc
into
pop
into
xchg
stos
test
es
jmp
loope
xchg
xor
popa
iret
push
pop
movs
inc
(bad)
jae
shl
push
xchg
in
ror
mov
dec
(bad)
mov
cmp
shl
into
push
mov
mov
xor
lods
cdq
retf
lods
xor
shl
xor
pop
inc
xor
movs
fdiv
loope
mov
mov
jle
cli
pop
cs
dec
fidiv
mov
pop
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
push
(bad)
mov
push
cs
push
cs
push
jmp
push
dec
cmps
aad
pop
into
loope
mov
(bad)
pop
cs
dec
fisub
mov
and
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
loope
or
push
mov
xor
stos
loope
jecxz
aam
xchg
stos
pop
into
loope
or
xor
js
(bad)
jmp
and
dec
out
mov
dec
xchg
shl
mov
shr
xor
shl
into
popf
jmp
push
(bad)
sbb
push
cs
push
cs
push
jmp
push
dec
cmps
inc
into
pop
into
loope
mov
stos
and
pop
dec
fisub
mov
and
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
xor
into
push
lods
cdq
(bad)
jbe
mov
xor
shl
into
popf
jmp
ffree
loopne
push
cs
push
cs
push
jmp
push
jle
mov
pop
into
cmps
dec
pop
into
push
mov
aaa
dec
movs
loopne
loope
mov
mov
jns
data16
pop
dec
fidivr
mov
and
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
xchg
cs
mov
xor
lods
arpl
push
lods
cdq
(bad)
not
arpl
push
xchg
push
into
push
les
out
cmps
retf
arpl
pop
xor
mov
push
fimul
push
scas
mov
jbe
pop
es
and
into
push
mov
aaa
popf
aam
mov
(bad)
pop
lock
cs
push
cs
push
jmp
shl
lock
not
pusha
into
push
lods
cdq
fidiv
mov
xor
shl
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
les
push
lods
cdq
(bad)
cmps
and
into
push
fnstcw
xor
cmps
sahf
cmps
add
pop
into
loope
mov
push
and
pop
dec
fisub
mov
and
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
loope
mov
pop
and
pop
dec
fisub
in
xor
pop
cmp
cmps
fdiv
shl
repz
cs
push
cs
push
jmp
push
dec
cmps
out
int3
pop
into
loope
mov
xchg
and
pop
dec
fisub
ror
shl
xor
shl
mov
jle
shl
cs
dec
fidivr
mov
and
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
xor
shl
into
popf
jmp
loope
mov
(bad)
and
pop
dec
fisub
fmul
not
push
into
push
les
out
cmps
retf
arpl
pop
xor
mov
push
mov
push
cs
sbb
xlat
aam
lahf
jmp
or
shl
shr
mov
cdq
fdivp
inc
popa
into
push
xchg
push
into
push
les
out
cmps
retf
arpl
pop
xor
(bad)
shl
push
fimul
push
xchg
push
lock
cs
sub
jecxz
aam
jbe
or
mov
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
inc
lods
sub
mov
xor
push
cdq
(bad)
imul
into
push
xchg
push
into
push
les
out
cmps
retf
arpl
pop
ja
cs
into
xchg
movs
pushf
xchg
xchg
mov
cmps
and
pop
into
dec
(bad)
mov
push
fimul
push
inc
lea
pop
mov
xor
shl
push
lods
cdq
(bad)
je
aaa
into
je
aaa
into
je
xor
xor
mov
es
inc
fwait
(bad)
mov
iret
(bad)
cmps
sahf
xor
(bad)
mov
into
xchg
xchg
test
sahf
loope
mov
jnp
shl
into
push
shr
es
mov
into
loope
mov
(bad)
es
dec
in
adc
pop
into
xchg
stos
mov
jecxz
add
xchg
retf
fsub
sbb
pop
into
dec
xchg
jb
lahf
outs
aam
das
(bad)
aam
fsubr
into
cmc
adc
aam
adc
(bad)
adc
dec
loope
mov
cmc
push
cs
into
jbe
or
mov
into
sahf
(bad)
mov
loope
fimul
add
sbb
and
das
jo
cs
cmps
push
icebp
pop
into
jbe
pop
into
sahf
(bad)
in
ds
xor
cmps
(bad)
lock
into
jbe
or
mov
out
shl
ss
(bad)
aam
inc
out
fwait
xchg
retf
fsub
sub
pop
inc
dec
in
(bad)
stos
sub
rcl
or
rcr
pop
es
pop
and
push
popf
into
pop
inc
fwait
mov
sbb
xchg
sub
push
cs
inc
fwait
mov
movs
cmp
cmps
fdiv
fstp
xchg
es
popf
call
push
push
movs
or
xchg
jp
retf
pop
cmps
enter
mov
into
push
cmps
fdivr
stos
mov
stc
push
cs
fwait
push
movs
sar
dec
and
inc
dec
sub
mov
rcl
ss
(bad)
aam
dec
(bad)
sub
push
cs
outs
shl
xor
shl
inc
fwait
inc
mov
push
jecxz
mov
into
xchg
jnp
inc
xchg
pop
mov
les
movs
shl
dec
and
inc
dec
sub
mov
rcr
or
test
cs
mov
mov
mov
je
ror
shl
neg
cs
sub
pop
sahf
neg
iret
push
ror
shl
adc
jp
ins
pop
cmps
sbb
pop
dec
test
xor
lods
cdq
jmp
inc
clc
push
cs
push
test
add
es
(bad)
ins
ss
jmp
pop
inc
fwait
shl
dec
stos
shl
cli
push
mov
xor
fwait
int
loope
mov
xor
fwait
aad
loope
mov
xor
fwait
std
xor
ror
inc
fwait
call
in
shl
dec
adc
xor
out
sub
dec
xabort
push
cs
push
neg
pop
into
push
inc
std
adc
dec
loop
mov
neg
fsub
or
pop
into
xchg
stos
jmp
inc
fwait
shl
ss
es
shl
loope
fdivr
test
into
je
aaa
into
xchg
stos
in
loope
or
into
popf
jmp
push
jmp
mov
or
das
pop
into
push
dec
call
fidiv
shl
test
stos
mov
loope
pop
into
xchg
(bad)
je
xchg
jmp
mov
and
rol
fwait
mov
dec
cmps
shl
movs
push
inc
jge
push
inc
pop
movs
push
mov
mov
xchg
sub
pop
(bad)
fisub
fldcw
cs
xor
mov
in
and
pop
cmp
cmps
fsubr
(bad)
call
cmps
or
pop
into
jbe
or
mov
into
push
lods
cdq
(bad)
stos
ss
rcr
xor
call
jle
mov
sbb
xchg
in
push
push
imul
fstp
pop
into
sahf
stos
ss
rcr
inc
mov
mov
dec
inc
pop
mov
cs
sub
pop
dec
mov
cs
jbe
lods
into
push
(bad)
int3
cli
push
cs
inc
fwait
shl
adc
pop
into
je
xor
inc
fwait
shl
pop
mov
and
loope
pop
mov
jecxz
mov
imul
mov
jae
pop
and
jecxz
mov
xor
ror
into
lahf
jmp
or
leave
sbb
mov
xor
add
into
push
shr
push
shl
into
xchg
stos
shl
shl
sub
rcl
or
push
pop
fsubr
pop
fwait
xchg
retf
fisub
add
cdq
xchg
jae
jno
popa
dec
test
(bad)
pop
ss
jmp
fs
push
cs
js
or
lahf
jmp
mov
cli
push
cs
js
or
loope
dec
or
pop
into
xchg
in
cmp
fmul
es
in
cmp
ficom
pop
rcl
dec
rcr
cdq
or
pop
(bad)
push
jns
fcmovbe
mov
push
or
std
push
cs
cmps
sbb
fnstcw
or
out
fidiv
fisub
aaa
retf
inc
sahf
xchg
ficomp
into
push
lods
cdq
ret
push
inc
out
lods
popf
retf
dec
mov
push
fsub
cmp
pop
into
loope
push
shr
pop
mov
fdivr
push
mov
mov
mov
jmp
jle
mov
adc
pop
retf
adc
push
jns
fcom
mov
sub
pop
into
cmps
shr
into
push
fnstcw
or
or
je
aaa
into
idiv
push
cmps
fwait
movs
loope
mov
sub
(bad)
or
into
push
cmps
movs
cmp
cmps
sbb
xchg
jmp
pop
into
xchg
imul
dec
cmps
mov
into
idiv
ins
into
push
jge
cdq
xchg
jae
jno
add
test
jmp
in
loope
aam
fldcw
sbb
dec
mov
mov
mov
mov
mov
cs
pop
out
push
dec
mov
pop
into
lahf
fstp
push
cs
xor
(bad)
mov
push
fimul
push
daa
popf
mov
(bad)
shl
inc
cs
inc
out
movs
inc
fstp
popf
mov
dec
call
xor
xchg
stos
loope
loope
or
xor
jle
rol
pop
into
pop
out
sub
xchg
(bad)
ins
ss
jmp
mov
cli
push
fimul
push
daa
popf
mov
(bad)
shl
cli
cs
dec
icebp
mov
push
pop
popf
mov
and
enter
ss
jmp
sahf
fwait
xchg
retf
in
ds
es
add
dec
js
inc
inc
es
imul
dec
lock
lods
iret
out
cmps
fwait
popf
jbe
pop
into
push
(bad)
in
(bad)
push
cs
popf
out
mov
xlat
aam
je
aam
pop
aam
es
mov
inc
out
das
lods
inc
fadd
das
pop
cs
mov
pop
into
popf
jmp
fiadd
cmp
shl
das
pop
ror
into
mov
cli
push
fimul
push
(bad)
jo
push
cs
push
cs
push
jmp
push
dec
cmps
out
int3
pop
into
xchg
stos
pop
cs
or
into
popf
jmp
cmps
and
into
push
mov
aaa
popf
aam
mov
(bad)
test
push
cs
push
cs
push
jmp
cs
xchg
shr
cs
and
ds
sub
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
lahf
rcr
cs
inc
fwait
cs
push
sub
es
sub
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
test
push
xchg
push
into
push
les
out
cmps
retf
arpl
mov
sub
cs
into
xchg
movs
pushf
xchg
xchg
pop
cs
or
xchg
xchg
pop
cs
or
push
sbb
dec
xor
xor
inc
fwait
cs
out
jmp
fwait
cs
out
cs
dec
fidivr
aam
aaa
(bad)
or
sub
into
push
xchg
push
into
push
les
out
cmps
retf
arpl
xor
inc
fwait
cs
out
sub
es
inc
fwait
cs
ret
pop
dec
fisub
mov
sub
pop
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
xchg
ficomp
call
pop
ja
cs
into
xchg
movs
dec
in
and
neg
into
push
xchg
ds
push
les
out
shl
into
mov
adc
jae
into
mov
cld
push
fimul
push
inc
je
pop
ror
into
mov
cld
push
fimul
push
(bad)
fs
push
cs
push
cs
push
jmp
push
dec
cmps
out
int3
pop
into
xchg
stos
pop
cs
or
into
popf
jmp
jmp
icebp
mov
test
ins
pop
inc
fwait
cs
cli
sub
pop
dec
fisub
mov
das
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
lahf
call
mov
das
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
loope
push
inc
fwait
cs
loopne
ins
pop
inc
fwait
cs
inc
das
cs
dec
fidivr
mov
das
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
neg
into
push
xchg
push
into
push
les
out
cmps
retf
arpl
xor
inc
fwait
cs
sahf
das
cs
dec
fisub
in
pop
cs
cmp
cmps
fsub
rcl
inc
fadd
mov
es
xlat
aam
lahf
jmp
or
cs
fadd
ins
pop
inc
mov
jns
and
cs
dec
fidivr
mov
cs
ja
cs
into
xchg
movs
dec
in
and
jbe
mov
into
(bad)
shl
into
push
lods
cdq
(bad)
jbe
or
mov
into
push
lods
cdq
(bad)
xchg
fisubr
adc
rcl
or
test
into
push
xchg
push
into
push
les
out
cmps
retf
arpl
xor
inc
fwait
cs
push
cs
dec
fisub
mov
cs
ja
cs
into
xchg
movs
dec
in
and
mul
into
push
xchg
ds
push
les
out
shl
into
mov
adc
jae
into
mov
(bad)
push
fimul
push
inc
lea
pop
ror
into
mov
(bad)
push
fimul
push
inc
pop
movs
push
inc
pop
movs
push
inc
pop
cmps
push
cs
mov
mov
push
cs
loop
mov
mov
ror
into
mov
jecxz
cs
into
xchg
xchg
movs
adc
ror
sahf
xchg
xchg
pop
cs
or
stos
rol
jecxz
mov
xor
call
popf
mov
sub
cmp
cmp
inc
jo
pop
fnstsw
sub
cs
cwde
dec
xchg
aad
jge
fmul
or
mov
xor
rcr
call
cs
inc
inc
es
es
add
xchg
jnp
inc
dec
sub
inc
mov
movs
cmp
cmps
fmul
shl
in
cs
into
mul
test
cmps
push
cs
sub
rcl
or
test
cs
mov
(bad)
stos
sub
rcl
or
into
xchg
stos
stc
xor
ror
into
jbe
pop
into
push
mov
mov
mov
inc
jmp
int3
push
frstor
imul
xor
and
sbb
cs
cmps
sbb
pop
into
xchg
stos
mov
inc
fwait
call
xor
pop
inc
out
movs
inc
(bad)
call
popf
xchg
stos
jmp
es
jmp
sbb
pop
cmps
mov
stos
mov
es
add
xchg
stos
jmp
inc
fwait
shl
push
xor
pop
es
retf
mov
xor
rcr
cmp
push
into
xchg
stos
in
loope
or
into
popf
jmp
jmp
aad
xor
shl
into
fldcw
pop
into
push
fidiv
shl
test
stos
mov
loope
pop
into
cmps
dec
push
into
push
fnstcw
xor
cmps
call
jle
push
sti
shl
xor
ror
xor
jle
into
je
aaa
out
je
aaa
into
je
ror
shl
cmp
push
dec
mov
pop
into
loope
cmc
xor
shl
inc
out
movs
inc
(bad)
call
cmps
or
pop
into
jbe
or
mov
into
push
lods
cdq
(bad)
stos
sub
sub
fdivr
fldenv
mov
mov
(bad)
adc
push
cs
pop
out
sub
jbe
pop
into
push
(bad)
enter
fisttp
aad
xor
movs
fdivr
sbb
call
cs
cmps
push
ficomp
neg
push
inc
pop
iret
push
ror
shl
ds
pop
dec
icebp
dec
into
push
inc
pop
cmps
je
pop
into
xchg
stos
int
loope
or
xor
rcr
adc
ror
aad
xor
mov
jmp
es
push
adc
aaa
into
loope
leave
xor
rcl
dec
xchg
aad
xor
sub
push
ror
shl
pop
jecxz
mov
xor
cs
cmp
cmps
fdivr
(bad)
call
es
pop
into
jbe
or
or
into
dec
(bad)
dec
jecxz
fimul
or
popf
mov
pop
cs
xor
pop
inc
xor
hlt
dec
cmps
sahf
iret
in
jge
jnp
shl
xor
lods
cdq
ret
(bad)
dec
adc
xor
shr
pop
jecxz
mov
xor
mov
into
push
js
out
aaa
cs
or
das
pop
into
push
cmps
movs
jmp
cmps
call
jle
adc
cs
movs
push
shr
push
shl
into
xchg
(bad)
stos
sub
rcl
or
fwait
stc
xor
shl
inc
fwait
mov
xor
jno
xchg
xlat
in
pop
into
dec
cmps
mov
cwde
dec
movs
add
mov
scas
call
inc
je
push
cmps
sbb
loope
push
es
pop
pop
into
xchg
jnp
inc
dec
sub
pushf
je
mov
ss
inc
fsub
call
cs
es
pop
push
inc
dec
sub
or
into
push
jge
mov
out
movs
inc
fldenv
pop
cwde
jbe
add
push
(bad)
js
push
cs
je
or
int
pop
into
cmps
cmp
push
fnstcw
or
(bad)
or
push
or
popa
or
xchg
imul
stc
cmps
sbb
xchg
jmp
sahf
fwait
xchg
retf
in
push
cs
test
pop
into
dec
jns
sbb
inc
jge
out
movs
inc
fld
imul
retf
pop
inc
fsub
stos
mov
pop
cmps
movs
jmp
cmps
call
stos
pop
ds
or
into
push
inc
pop
xor
ror
fisub
jle
rcr
or
adc
retf
mov
je
or
movs
push
pop
into
xchg
call
xchg
or
repnz
jno
adc
sub
dec
call
cmps
movs
jmp
cmps
call
sub
and
mov
push
ror
jbe
pop
into
push
shr
mov
pop
pop
into
adc
pop
sahf
jbe
or
hlt
in
fimul
push
mov
pop
cmps
pop
das
pop
into
loope
jno
pop
cs
aaa
cs
dec
jmp
dec
mov
mov
lods
movs
ret
bound
aam
dec
jle
cdq
mov
cmps
lods
cmp
cmps
sbb
xchg
call
aaa
into
je
aaa
retf
je
aaa
into
je
aaa
into
jbe
pop
into
push
inc
pop
movs
push
inc
pop
movs
push
(bad)
sbb
push
cs
je
or
ins
pop
es
das
or
outs
pop
lea
pop
into
xchg
fisubr
inc
fadd
je
mov
into
not
push
inc
pop
cdq
je
mov
into
test
inc
pop
cdq
je
mov
into
div
push
inc
pop
cdq
je
mov
into
mul
push
scas
mov
jb
pop
movs
pop
jns
(bad)
loope
jge
pop
cs
ss
movs
pop
jns
(bad)
loope
int
pop
cs
ss
movs
pop
jns
(bad)
loope
sub
cs
ss
dec
lock
pop
cdq
je
mov
into
not
jp
push
inc
pop
cdq
je
mov
into
test
into
push
inc
pop
cdq
je
mov
into
div
jp
push
inc
pop
cdq
je
mov
into
mul
jp
push
jno
pop
fnstsw
js
div
out
movs
inc
fld
sub
ror
cs
out
mov
cmps
imul
mov
into
idiv
push
inc
mov
mov
(bad)
fs
sub
into
je
mov
into
test
into
push
inc
mov
(bad)
push
(bad)
dec
jmp
sub
into
je
mov
into
mul
into
push
cmps
movs
out
cmps
call
outs
pop
es
or
mov
inc
mov
pop
cs
xor
sbb
pop
cs
cmp
pop
movs
loop
push
(bad)
pop
into
mov
inc
mov
pop
cs
xor
sbb
pop
cs
cmp
pop
movs
loop
push
es
add
mov
inc
mov
pop
cs
xor
sbb
pop
cs
cmp
pop
movs
loop
push
es
or
mov
inc
mov
pop
cs
xor
sbb
outs
pop
cs
cmp
pop
xchg
fnstsw
sub
xchg
out
inc
sub
ss
(bad)
aam
jbe
or
mov
cmps
repnz
into
dec
mov
loope
fimul
push
lea
pop
cs
into
dec
(bad)
enter
fdivr
test
pop
into
xchg
imul
push
cs
into
loope
imul
movs
sbb
xor
imul
push
inc
pop
cmps
push
fstp
push
inc
mov
into
sbb
pop
es
or
mov
inc
pop
xor
sbb
(bad)
push
inc
pop
sahf
je
(bad)
mov
add
cmp
jbe
pop
dec
dec
inc
cdq
adc
adc
ins
pop
movs
push
(bad)
js
push
cs
sub
into
push
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
push
(bad)
push
inc
int
push
cs
mov
add
cmp
jbe
pop
dec
dec
inc
sub
ret
ins
pop
movs
push
(bad)
mov
scas
mov
inc
pop
movs
push
inc
pop
movs
sbb
push
inc
pop
movs
push
inc
loope
push
cs
into
je
aaa
(bad)
je
mov
cmp
pop
inc
fadd
je
mov
into
imul
xor
sbb
(bad)
push
inc
pop
xor
push
(bad)
push
inc
dec
cmps
sub
out
cs
into
dec
inc
xor
pop
cs
movs
push
(bad)
sub
push
cs
mov
ins
pop
movs
push
shr
sub
mov
inc
jle
push
cs
mov
push
xor
cmps
push
repz
into
jbe
or
pop
into
mov
cmps
movs
cmp
cmps
sbb
xchg
jmp
imul
sbb
outs
pop
cs
fidiv
pop
into
push
inc
std
into
push
cs
out
cs
into
dec
inc
xchg
adc
adc
ins
pop
movs
push
(bad)
mov
ret
pop
movs
push
shr
sub
mov
inc
and
jo
cs
movs
ss
pop
into
push
jle
inc
ret
cmps
(bad)
repz
into
je
mov
cmp
pop
ins
or
mov
into
je
mov
into
je
aaa
stos
jbe
pop
into
push
inc
dec
cmps
sbb
repnz
adc
into
mul
mov
pop
fmul
gs
pop
into
jbe
or
(bad)
adc
push
cs
movs
push
inc
push
iret
push
mov
into
neg
jns
push
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
dec
std
mov
inc
jno
push
cs
cld
jbe
pop
into
push
inc
daa
cmps
sbb
repnz
adc
into
test
into
push
(bad)
(bad)
cs
into
loope
imul
sbb
loop
cs
movs
and
into
push
cs
cmps
sbb
repnz
adc
into
test
into
push
lea
pop
cs
in
mov
cli
sub
mov
inc
data16
clc
cs
into
jbe
pop
into
push
inc
pop
into
push
jle
movs
ret
cmps
(bad)
repz
into
je
mov
cmp
lea
into
xchg
(bad)
stos
sub
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
push
(bad)
push
inc
dec
cmps
lahf
cs
into
jbe
pop
into
push
inc
dec
iret
push
cs
cmps
dec
repnz
into
jbe
or
pop
into
mov
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
push
(bad)
push
inc
dec
movs
jns
inc
iret
push
cs
cmps
push
cs
sahf
jbe
or
add
push
lea
pop
cs
into
loope
imul
sbb
outs
pop
cs
fidiv
pop
into
push
inc
ins
iret
push
cs
stos
jbe
pop
into
dec
inc
dec
adc
adc
ins
pop
movs
push
(bad)
test
push
cs
sub
push
shr
sub
mov
inc
or
jbe
pop
into
push
inc
pop
into
push
jle
enter
cmps
(bad)
repz
into
je
mov
cmp
pop
ins
mov
mov
into
je
mov
into
je
xor
cmps
(bad)
cs
into
je
xor
cmps
ret
into
jbe
or
cs
ins
call
sti
sub
mov
into
je
xor
cmps
(bad)
pop
into
je
xor
cmps
mov
mov
inc
pop
int3
push
cs
cmp
pop
ins
add
and
push
cs
into
loope
imul
sbb
(bad)
je
xor
movs
or
into
sahf
jle
adc
ins
pop
cmps
pop
repnz
into
jbe
pop
into
push
(bad)
pop
in
push
cs
out
outs
pop
movs
push
shr
sub
scas
mov
inc
cmp
je
xor
cmps
ret
into
jbe
or
cs
ins
ds
into
je
mov
into
je
mov
into
je
xor
cmps
mov
pop
into
je
xor
cmps
std
cmc
pop
into
jbe
xchg
minps
mov
(bad)
sub
loope
aam
pop
(bad)
aam
idiv
add
fnstsw
sub
xchg
je
mov
or
pop
pop
into
jbe
or
stos
xor
cmps
fwait
cmps
repnz
into
dec
(bad)
push
or
lea
pop
cs
dec
cs
cmp
cmps
sbb
xchg
jmp
push
push
pop
cs
aas
cs
inc
pop
fimul
into
push
scas
stos
ja
cs
movs
push
shr
sub
mov
add
sbb
xor
cs
into
jbe
pop
dec
dec
inc
sub
ret
ins
pop
cmps
push
sub
into
test
into
push
lea
outs
pop
cs
into
loope
imul
inc
popa
inc
pop
(bad)
jbe
out
lods
mov
dec
inc
dec
movs
or
into
sahf
jle
pop
lds
(bad)
repz
into
je
mov
ds
ins
sbb
mov
into
je
mov
into
jbe
pop
into
push
movs
sbb
xor
dec
or
cmps
pop
fstp
push
inc
xchg
pop
cs
into
neg
push
lea
into
je
aaa
into
je
aaa
retf
je
aaa
into
je
aaa
into
jbe
pop
into
push
inc
pop
movs
push
inc
push
movs
or
call
or
cs
iret
dec
inc
ins
xor
sub
(bad)
push
(bad)
push
out
push
cs
into
loope
imul
sbb
stos
je
aaa
fidiv
int
scas
or
into
jbe
or
mov
push
cmps
movs
jmp
cmps
call
cs
xor
mov
push
(bad)
loopne
push
cs
movs
push
inc
push
iret
push
mov
into
test
pop
mov
cmp
into
je
xor
xor
mov
push
(bad)
aam
push
cs
je
aaa
into
jbe
pop
into
push
shr
sub
ins
xor
je
mov
into
je
mov
into
jbe
pop
into
push
inc
outs
movs
or
sbb
repnz
adc
into
test
push
(bad)
(bad)
cs
das
(bad)
aam
je
mov
into
je
mov
into
jbe
pop
into
push
inc
popa
movs
or
into
push
cs
cmps
ret
into
jbe
or
add
(bad)
push
(bad)
daa
cmp
shl
into
loope
imul
sbb
outs
pop
cs
fidiv
pop
into
push
inc
xor
jbe
pop
into
dec
inc
push
adc
adc
ins
pop
movs
push
(bad)
mov
push
cs
mov
jmp
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
push
(bad)
push
inc
dec
movs
jns
fcmove
push
cs
cmps
push
cs
sahf
jbe
or
test
push
lea
pop
cs
into
loope
imul
sbb
outs
pop
cs
fidiv
pop
into
push
inc
std
into
push
cs
stos
jbe
pop
into
dec
inc
dec
adc
adc
ins
pop
movs
push
(bad)
sub
push
cs
sub
push
shr
sub
mov
inc
or
jbe
pop
into
push
inc
pop
into
push
jle
enter
cmps
(bad)
repz
into
je
mov
add
pop
ins
mov
mov
into
je
mov
into
je
xor
cmps
clc
cs
into
je
xor
cmps
pusha
cmc
pop
into
jbe
or
pop
into
mov
cmps
movs
jmp
cmps
call
outs
pop
movs
push
shr
mov
inc
mov
xor
cs
movs
add
into
push
jle
cdq
lds
(bad)
repz
into
je
mov
add
pop
ins
mov
mov
into
je
mov
into
je
xor
movs
xor
push
fstp
push
inc
pop
adc
into
sbb
pop
es
xor
mov
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
dec
std
mov
inc
inc
movs
ss
sbb
jle
adc
ins
pop
cmps
pop
repnz
into
jbe
pop
into
push
(bad)
or
push
cs
out
outs
pop
dec
jmp
inc
pop
xor
sbb
(bad)
push
inc
pop
xor
dec
std
mov
inc
inc
movs
jp
add
jle
adc
ins
pop
cmps
pop
repnz
into
jbe
pop
into
push
(bad)
dec
rcr
cs
out
sub
cli
sub
mov
inc
(bad)
into
push
cs
movs
add
into
sahf
jle
sub
in
pop
into
je
mov
add
pop
ins
xchg
scas
xor
mov
pop
dec
pop
into
inc
jo
or
repnz
cwde
dec
xchg
adc
mov
call
sbb
xchg
jmp
pop
into
push
inc
pop
movs
push
inc
pop
cmps
push
cs
dec
loope
push
es
pop
into
xchg
call
fst
cs
movs
push
js
bound
cs
inc
(bad)
pop
cwde
imul
inc
into
push
lods
cmp
push
jmp
pop
into
xchg
imul
xchg
imul
and
pop
into
sahf
(bad)
aas
ins
loope
fimul
push
cmps
movs
cmp
cmps
sbb
xchg
jmp
adc
push
shr
xor
xchg
mov
(bad)
not
xor
lods
cdq
(bad)
xchg
imul
fldcw
inc
movs
sbb
pop
(bad)
or
rep
ins
pop
cmps
pop
cs
dec
imul
cdq
(bad)
inc
jo
pop
fnstsw
sub
cs
cwde
mov
cmps
lods
(bad)
out
cmps
fwait
dec
fcomp
xor
push
inc
(bad)
jle
ror
shl
(bad)
push
cs
add
pop
ja
cs
into
xchg
movs
inc
int
add
sahf
push
mov
jae
ins
pop
inc
fwait
mov
mov
cs
dec
arpl
pop
mov
pop
ror
shl
(bad)
push
fsub
jne
pop
into
sahf
push
mov
cmp
mov
ret
pop
dec
arpl
pop
mov
pop
ror
shl
fstp
fnsave
jbe
in
mov
mov
mov
into
push
scas
and
sbb
cmps
push
lahf
pop
into
xchg
stos
pop
xor
ror
into
lahf
fadd
fnsave
jbe
in
mov
mov
mov
into
push
scas
and
push
pop
dec
cmps
popf
lahf
pop
into
xchg
stos
pop
xor
ror
into
sahf
push
mov
ins
scas
ins
pop
inc
fwait
mov
mov
cs
dec
arpl
push
mov
pop
ror
shl
fstp
cs
jmp
shl
mov
and
out
mov
mov
mov
into
push
scas
and
adc
cmps
aas
pushf
pop
into
xchg
stos
pop
xor
ror
into
sahf
push
mov
imul
mov
fimul
cs
dec
arpl
push
mov
pop
ror
shl
fcomp
cs
into
je
xor
cmps
push
cmc
pop
into
xchg
stos
pop
xor
ror
into
idiv
adc
scas
ins
pop
cmps
pop
mov
into
idiv
xor
inc
popf
jmp
add
push
aam
pop
(bad)
or
sbb
xor
jo
pop
fsubr
pop
fwait
xchg
retf
or
dec
jns
mov
xchg
pop
in
dec
cs
cmp
cmps
sbb
xchg
jmp
enter
rcl
imul
cdq
(bad)
pop
out
sub
je
or
jge
pop
into
inc
jo
pop
fsubr
pop
fwait
xchg
retf
fsub
xor
pop
into
dec
js
jo
or
je
xchg
call
aam
jbe
out
mov
mov
mov
into
push
(bad)
mov
push
cs
push
cs
push
jmp
(bad)
mov
ss
pop
mov
pop
ror
fldenv
fcomp
cs
push
cs
cmp
cmps
fsubr
jmp
scas
loopne
out
mov
or
stos
xor
jle
sub
cs
dec
mov
sub
out
mov
mov
mov
into
push
scas
loopne
out
mov
iret
lods
ins
pop
inc
fwait
ret
stos
xor
jle
jle
cs
dec
mov
sub
fbstp
out
mov
mov
mov
into
push
cmps
lods
cmp
cmps
fsubr
jmp
scas
loopne
out
mov
cli
lods
ins
pop
inc
fwait
ret
stos
xor
jle
mov
mov
sub
fbstp
out
mov
mov
mov
into
push
scas
loopne
out
mov
mov
fwait
ret
stos
xor
jle
repnz
pop
inc
out
fnstcw
xor
cmps
fwait
dec
mov
daa
sub
jbe
out
mov
mov
mov
into
push
scas
loopne
out
mov
lods
ins
pop
inc
fwait
ret
stos
xor
jle
xor
cs
dec
mov
and
out
mov
mov
mov
into
push
scas
loopne
out
mov
lods
ins
pop
inc
fwait
ret
stos
xor
jle
push
or
pop
dec
fdivr
es
push
scas
loopne
out
mov
int
ins
pop
inc
fwait
ret
stos
xor
jle
data16
pop
dec
mov
and
fbstp
jmp
and
shl
into
push
inc
sub
dec
repz
and
rcr
cmp
pop
into
jbe
std
mov
inc
sar
mov
repnz
dec
neg
mov
ss
outs
mov
jmp
stos
dec
int
cs
das
(bad)
or
cs
adc
mov
in
mov
inc
fwait
ret
loope
popf
rcr
mov
jae
shl
gs
pop
dec
mov
adc
dec
aaa
das
pop
into
sahf
xchg
mov
rcr
fdiv
loop
mov
ds
call
mov
adc
loop
mov
(bad)
push
fimul
adc
mov
xchg
push
cs
je
mov
pushf
cmp
out
cmps
leave
(bad)
inc
out
cmps
lea
mov
and
stc
sbb
pop
dec
and
(bad)
push
sub
stc
jbe
cld
mov
inc
ja
pop
ror
shl
(bad)
push
fdivr
inc
jl
into
jbe
cld
mov
inc
inc
adc
loop
mov
(bad)
push
fimul
push
lds
cmps
push
sub
xchg
stos
mov
and
pop
into
lahf
fcom
cmc
push
ror
(bad)
mov
adc
loop
mov
fstp
cs
inc
fwait
shl
cmp
cs
dec
fidivr
ror
shl
fistp
ror
shl
sahf
xchg
stos
mov
cmps
in
pop
into
xchg
stos
mov
cmp
dec
movs
push
mov
mov
into
push
inc
pop
cmps
jmp
xor
ror
xor
and
cdq
pop
cs
inc
fwait
shl
retf
dec
(bad)
pop
fstp
cs
fwait
(bad)
movs
xor
cmps
lods
iret
out
cmps
fwait
dec
mov
and
dec
xor
pop
into
loope
movs
ss
xor
cmps
sti
hlt
pop
into
xchg
stos
mov
es
jmp
xchg
stos
mov
es
cmp
into
xchg
stos
mov
es
cmp
xchg
stos
test
loope
mov
xchg
stos
test
loope
fnsave
shl
ficom
rcr
xor
cs
loope
test
loope
fidiv
fldenv
dec
call
shr
ss
mov
xor
jle
sbb
ins
pop
inc
fwait
shl
jle
cs
dec
fidivr
ror
(bad)
mov
fstp
cs
retf
xor
ror
es
cmp
mov
loope
shl
pop
(bad)
dec
fstp
cs
jmp
ss
or
xor
(bad)
lock
ror
(bad)
mov
fstp
shl
shl
cmp
shl
cdq
mul
sub
pop
inc
fwait
(bad)
movs
xor
jle
into
loope
test
jp
outs
pop
movs
push
inc
pop
es
cmp
pop
fcomp
ror
shl
jnp
(bad)
mov
xor
lods
cdq
ret
push
push
adc
mov
xor
mov
mov
jo
pop
cmps
pop
pop
inc
into
test
push
ja
add
shl
or
or
xchg
xor
push
cs
push
cs
popf
dec
jns
loopne
ss
(bad)
test
(bad)
cmps
sahf
cmps
mov
xor
es
cmp
into
xchg
stos
stc
and
rcl
and
into
je
mov
or
pop
xchg
xchg
imul
mov
into
cmps
xor
into
push
fnstcw
xor
cmps
sahf
or
jle
(bad)
push
mov
or
pop
ucomiss
loope
pop
into
jbe
cld
mov
(bad)
or
push
cs
ucomiss
mul
into
push
scas
mov
sub
pop
cmps
sbb
pop
into
xchg
stos
in
and
ror
xor
cs
movs
pop
inc
int
pop
ror
shl
loope
fimul
push
adc
dec
cs
pop
into
popf
sub
jp
cs
pop
cmp
mov
rcr
stos
ins
pop
jbe
adc
jmp
ret
xchg
in
mov
or
pop
je
arpl
fimul
pushf
cmp
out
cmps
leave
(bad)
inc
out
cmps
lea
pop
cmps
cmps
inc
mov
fdivr
shl
push
or
pop
shr
out
push
dec
dec
lahf
xchg
out
stos
and
aam
movntq
je
xchg
inc
fsubr
aad
and
fdivr
shl
and
shl
push
ret
mov
ficomp
cs
call
call
mov
and
shr
(bad)
das
test
mov
mov
mov
inc
xchg
adc
ror
ret
dec
(bad)
ins
ficomp
cs
into
xchg
stos
ret
ror
xor
jle
mov
fwait
mov
xor
jle
add
shl
xor
jle
scas
(bad)
mov
push
das
not
or
add
je
push
cs
xor
cmps
fcomp
shl
es
and
jbe
xchg
cs
cmps
pop
mov
into
not
sahf
mov
cs
inc
mov
mov
pop
ja
cs
into
in
dec
clc
cmps
stos
hlt
pop
into
jbe
cld
mov
inc
fwait
adc
cs
es
cmp
jne
loope
sar
pop
neg
into
cmps
xor
push
fnstsw
imul
xor
cmps
mov
xchg
cs
or
int3
mov
loope
push
ja
cs
into
in
dec
clc
cmps
mov
mov
fwait
adc
cs
es
jmp
loope
push
ja
cs
into
in
mov
or
je
aaa
into
je
aaa
into
je
xor
cmps
push
mov
into
test
jp
sub
into
je
or
into
lahf
in
mov
mov
mov
fdivr
shl
into
push
mov
mov
dec
and
pop
mov
imul
and
ror
xor
mov
adc
pop
movs
push
mov
pop
cmps
out
int3
pop
into
loope
jmp
into
fldcw
xor
cs
inc
pop
xchg
or
xor
jle
inc
ucomiss
xchg
fwait
mov
loope
xchg
xor
popa
iret
push
pop
movs
movs
push
mov
shl
shl
div
inc
pop
xchg
or
sub
mov
rcr
mov
rcr
aam
das
not
or
pop
cs
dec
aam
shl
pop
inc
pop
out
xor
movs
push
(bad)
mov
mov
xchg
sti
sbb
stos
sub
loope
(bad)
dec
scas
ret
mov
int
cs
movs
push
(bad)
xchg
rcr
aam
into
jmp
pop
into
je
mov
push
cs
inc
pop
neg
into
push
scas
mov
pop
cs
or
pop
into
push
cs
mov
hlt
rcr
aaa
into
loope
imul
cs
into
je
aaa
into
je
xor
cmps
push
pop
into
jbe
or
pop
into
mov
inc
leave
jle
cs
into
je
mov
adc
pop
movs
push
(bad)
popf
jl
rcr
or
(bad)
aam
push
cs
into
push
fnstsw
cs
adc
pop
cmps
pusha
hlt
pop
into
dec
(bad)
pusha
ret
push
cs
mov
mov
into
push
fnstcw
xor
movs
fsub
shl
ret
aaa
iret
dec
ror
(bad)
shl
xor
sub
push
scas
mov
push
xchg
mov
loope
ror
shl
pop
cs
cmps
dec
call
sahf
mov
loope
fimul
push
daa
popf
mov
stos
ins
pop
into
fldcw
xor
cs
into
push
cs
mov
das
test
mov
mov
into
jbe
sub
push
inc
pop
movs
push
(bad)
dec
rcr
or
into
xchg
stos
cmc
and
ror
cmps
out
sbb
into
neg
push
into
push
jle
mov
push
inc
test
iret
loope
pop
push
pop
cs
adc
pop
and
dec
(bad)
pushf
rcr
aam
aaa
not
or
not
pop
movs
push
inc
pop
inc
pop
retf
inc
and
pop
out
sub
inc
jo
pop
fdivr
pop
fwait
xchg
retf
fsub
and
jno
pop
inc
cld
lahf
rol
(bad)
mov
lods
movs
ficom
stos
(bad)
iret
push
cs
popf
(bad)
pop
rcr
lahf
(bad)
push
cs
fistp
cs
rcr
dec
iret
push
cs
and
pop
into
push
and
imul
pop
repz
pop
into
adc
mov
push
cs
dec
and
mov
cs
dec
les
pop
into
jbe
or
pop
es
mov
xor
rcl
ss
shl
and
ins
pop
xor
mov
rcr
or
cmps
fsub
jecxz
mov
xor
jle
jnp
shl
into
push
daa
popf
rcr
fadd
jecxz
mov
outs
pop
cs
adc
pop
(bad)
ficomp
inc
fwait
into
mov
push
jecxz
mov
pop
into
shl
xor
shl
xor
dec
cli
shl
xor
rcr
sbb
mov
xor
pop
lea
fwait
retf
loope
fcom
jecxz
mov
xor
shl
(bad)
shl
movs
push
shr
mov
and
xchg
(bad)
je
xchg
jmp
pop
into
push
and
jl
cs
outs
jp
pop
into
mov
cmps
movs
iret
out
call
cs
outs
call
sub
mov
mov
and
mov
das
push
dec
sub
loope
xor
nop
clc
shl
into
push
cmps
movs
jmp
cmps
call
imul
jp
into
push
inc
pop
es
pop
into
push
(bad)
pop
push
pop
cs
pop
push
xor
mov
adc
pop
inc
out
movs
inc
fld
jbe
push
cs
mov
cmps
fdiv
loopne
mov
into
push
adc
pop
mov
mov
adc
pop
mov
sub
xor
pop
mov
mov
adc
pop
mov
sub
fiadd
(bad)
pop
into
push
inc
pop
xor
mov
adc
pop
inc
fwait
(bad)
mov
mov
ins
pop
mov
mov
adc
pop
mov
push
mov
ret
xor
xor
mov
adc
pop
dec
icebp
push
clc
cs
mov
xor
rcr
fwait
into
mov
push
adc
pop
inc
fwait
ret
loope
ds
ss
(bad)
aam
div
into
push
scas
call
cs
into
xchg
stos
pop
xor
ror
(bad)
push
(bad)
test
push
fnsave
shl
movs
push
inc
pop
cmps
dec
hlt
pop
into
je
mov
adc
mov
push
(bad)
push
lds
cs
sbb
pop
dec
jmp
movs
fmul
loope
mov
xor
call
mov
jp
cs
rcr
mov
dec
pop
shl
dec
mov
and
into
xchg
mov
fiadd
loope
(bad)
pop
sub
popf
(bad)
pop
mov
inc
int
into
xchg
mov
xor
ror
es
mov
push
repz
pop
into
imul
into
je
xor
movs
push
(bad)
mov
push
mov
into
not
into
push
(bad)
cmp
push
cs
das
(bad)
aam
xchg
stos
pop
xor
ror
xor
jle
jecxz
ins
pop
inc
(bad)
pop
adc
pop
dec
fidivr
xor
inc
fwait
das
mov
sti
add
push
into
push
scas
loopne
loope
mov
into
je
xor
movs
push
(bad)
xor
push
mov
into
idiv
push
into
push
(bad)
mov
inc
pop
shl
mov
xlat
fidiv
push
pop
jge
push
inc
pop
cmps
stc
neg
into
je
mov
adc
pop
xor
xor
mov
(bad)
mov
or
cs
or
cs
adc
mov
xor
shl
bound
popa
mul
aaa
into
je
xor
movs
push
(bad)
test
push
mov
into
test
push
fisttp
shl
into
loope
mov
inc
out
movs
inc
fldenv
mov
xor
ror
into
xchg
stos
test
loope
or
into
popf
jmp
xchg
stos
pop
xor
ror
mov
(bad)
dec
(bad)
push
fnsave
shl
movs
push
inc
pop
cmps
fincstp
pop
into
je
mov
pop
cs
xor
scas
cld
mov
(bad)
je
push
cs
sbb
pop
jbe
das
pop
into
jmp
shl
dec
pop
shl
cmp
shl
mov
mov
mov
into
push
lods
cdq
fidiv
pop
into
push
mov
mov
push
pop
cs
push
cs
dec
mov
cs
je
aaa
into
jbe
test
daa
pop
into
loope
jno
pop
cs
push
cs
daa
sub
xor
ror
xor
jle
ins
(bad)
ins
pop
inc
(bad)
sbb
pop
dec
fidivr
xor
inc
fwait
das
mov
sti
ss
into
not
push
into
push
scas
loopne
loope
mov
into
je
xor
movs
push
(bad)
hlt
(bad)
push
mov
into
idiv
into
push
(bad)
popa
int
rol
shl
mov
xlat
fidiv
sbb
inc
pop
cmps
xor
pop
into
je
mov
push
cs
xor
push
ret
(bad)
jl
push
cs
sbb
shl
repz
mov
xor
shl
bound
popa
mul
aaa
into
je
xor
movs
push
(bad)
push
sti
ss
into
test
into
push
(bad)
xchg
int3
push
fisttp
shl
xor
shl
inc
out
movs
inc
fldenv
mov
xor
ror
into
xchg
stos
test
loope
or
into
popf
jmp
xchg
stos
pop
xor
ror
(bad)
push
(bad)
or
push
fnsave
shl
movs
push
inc
pop
cmps
maskmovq
neg
into
je
mov
sbb
pop
xor
push
ret
(bad)
xor
push
cs
sbb
pop
or
cs
adc
mov
xor
shl
bound
popa
mul
aaa
into
je
xor
movs
push
(bad)
and
push
mov
into
test
push
(bad)
dec
int3
push
fisttp
shl
iret
loope
mov
dec
and
pop
mov
loopne
mov
xchg
(bad)
stos
sub
rcl
dec
not
mov
dec
pop
shl
cmp
shl
mov
mov
mov
into
push
lods
cdq
ficom
stos
mov
dec
cli
shl
into
je
aaa
retf
aaa
into
jbe
pop
into
pop
inc
sbb
push
sbb
pop
inc
fisub
movs
push
inc
pop
xor
(bad)
hlt
retf
push
cs
outs
call
adc
les
pop
scas
popa
iret
push
pop
movs
inc
fld
mov
mov
cmps
cs
into
loope
test
sbb
pop
movs
push
mov
mov
ds
ins
pop
xor
(bad)
cwde
retf
push
rol
shl
mov
xlat
aaa
into
xchg
mov
setle
ror
xor
mov
push
cs
into
xchg
stos
lods
xor
ror
sub
mov
xor
push
pop
into
push
cmps
movs
iret
out
call
(bad)
dec
retf
mov
into
not
pop
movs
push
inc
pop
movs
push
inc
pop
cmps
push
cs
mov
int
push
(bad)
in
push
cs
jmp
xchg
cs
int3
je
aaa
into
loope
test
push
sbb
pop
inc
adc
xchg
xor
popa
iret
push
pop
movs
inc
fld
mov
mov
cmps
mov
xor
shl
movs
push
mov
mov
and
ins
pop
xor
(bad)
mov
jnp
shl
into
push
jmp
pop
iret
push
cs
inc
out
movs
inc
fld
sbb
jp
cs
cmps
dec
call
sahf
(bad)
iret
inc
loope
fimul
push
inc
pop
xor
es
(bad)
mov
ss
shl
(bad)
pop
dec
xor
mov
(bad)
neg
pop
into
push
jno
xchg
xlat
in
dec
into
dec
cmps
mov
cwde
dec
movs
sub
mov
xchg
xchg
lds
cs
sub
movs
sbb
and
pop
into
push
and
add
cs
dec
arpl
push
rcr
push
mov
sub
mov
mov
into
push
fnstcw
or
cs
loope
(bad)
cs
sbb
pop
cmc
sub
push
xor
add
(bad)
push
(bad)
sub
push
cs
xor
mov
into
test
cmps
movs
out
cmps
call
pop
push
xor
push
ret
(bad)
adc
push
cs
ss
into
imul
into
neg
pop
into
push
adc
pop
mov
stos
ins
pop
into
imul
into
div
into
push
cmps
movs
out
cmps
call
pop
dec
dec
and
mov
das
sub
loope
fldcw
cs
sbb
adc
pop
mov
mov
inc
out
movs
inc
fst
pop
mov
sub
(bad)
push
pop
pop
inc
add
ret
adc
pop
mov
mov
cmc
sub
ret
pop
pop
inc
add
mov
scas
stos
enter
cmc
sub
ret
pop
pop
inc
add
les
mov
movs
inc
rol
pop
dec
xor
mov
ret
mov
sbb
pop
and
push
cs
sub
jno
xchg
xlat
in
dec
into
push
cs
xor
es
mov
mov
pop
xor
and
into
push
cs
xor
ds
mov
mov
pop
xor
cmp
into
push
cs
xor
push
scas
mov
mov
pop
xor
add
into
push
cs
xor
push
scas
mov
mov
pop
xor
sbb
into
push
cs
fwait
xchg
retf
or
not
call
or
ss
jle
sahf
sbb
pop
dec
fisub
aam
loop
popf
mov
cmc
das
sbb
push
sub
sub
sub
ss
scas
and
sbb
popf
mov
push
aaa
into
imul
pop
into
push
inc
pop
cdq
je
or
xor
sahf
xchg
lahf
ret
push
cs
push
cs
dec
sbb
pusha
into
push
cs
mov
sbb
mov
inc
dec
or
ficom
fidiv
sub
pop
or
xchg
push
jns
in
mov
dec
leave
movs
sbb
sbb
push
into
push
cs
xor
outs
scas
mov
mov
pop
xor
push
mov
mov
pop
xor
data16
mov
mov
pop
xor
bound
into
push
cs
xor
jle
mov
mov
pop
xor
jp
mov
mov
pop
xor
jbe
mov
mov
pop
xor
jb
mov
mov
pop
xor
dec
scas
mov
mov
pop
xor
dec
scas
mov
mov
pop
xor
inc
scas
mov
mov
pop
xor
inc
scas
mov
mov
pop
xor
pop
scas
mov
mov
pop
xor
pop
scas
mov
mov
pop
xor
push
scas
mov
mov
pop
xor
push
scas
mov
mov
pop
xor
scas
scas
mov
mov
pop
xor
stos
scas
mov
mov
pop
xor
cmps
scas
mov
mov
pop
xor
mov
int
push
cs
xor
mov
int
push
cs
xor
mov
int
push
cs
xor
mov
mov
mov
pop
xor
mov
mov
mov
pop
xor
mov
into
push
cs
xor
mov
into
push
cs
xor
xchg
into
push
cs
xor
sub
push
cs
xor
sahf
scas
mov
mov
pop
xor
call
push
cs
xor
xchg
scas
mov
mov
pop
xor
xchg
scas
mov
mov
pop
xor
out
scas
mov
mov
pop
xor
jmp
push
cs
xor
out
mov
mov
pop
xor
loop
mov
mov
pop
xor
(bad)
scas
mov
mov
pop
xor
cli
scas
mov
mov
pop
xor
imul
into
push
cs
xor
repnz
mov
mov
pop
xor
into
scas
mov
mov
pop
xor
retf
push
mov
pop
xor
(bad)
scas
mov
mov
pop
xor
ret
push
mov
pop
xor
(bad)
scas
mov
mov
pop
xor
shr
into
push
cs
xor
cs
into
push
cs
xor
sub
into
push
cs
xor
es
into
push
cs
xor
and
into
push
cs
xor
ds
into
push
cs
xor
cmp
into
push
cs
xor
ss
into
push
cs
xor
xor
into
push
cs
xor
push
test
into
push
cs
xor
or
into
push
cs
xor
push
test
into
push
cs
xor
add
into
push
cs
xor
push
test
into
push
cs
xor
sbb
into
push
cs
xor
push
test
into
push
cs
xor
adc
into
push
cs
xor
outs
test
into
push
cs
xor
push
mov
mov
pop
xor
test
mov
pop
xor
bound
into
push
cs
xor
jle
mov
mov
pop
xor
jp
mov
mov
pop
xor
jbe
mov
mov
pop
xor
jb
mov
mov
pop
xor
dec
test
into
push
cs
xor
dec
test
into
push
cs
xor
pop
test
into
push
cs
xor
pop
test
into
push
cs
xor
push
test
into
push
cs
xor
push
test
into
push
cs
xor
scas
test
into
push
cs
xor
mov
int
push
cs
xor
mov
int
push
cs
xor
mov
int
push
cs
xor
mov
mov
mov
pop
xor
mov
mov
mov
pop
xor
mov
into
push
cs
xor
mov
into
push
cs
xor
xchg
into
push
cs
xor
sub
push
cs
xor
xchg
test
into
push
cs
xor
xchg
test
into
push
cs
xor
out
test
into
push
cs
xor
jmp
push
cs
xor
out
mov
mov
pop
xor
loop
mov
mov
pop
xor
(bad)
test
into
push
cs
xor
cli
test
into
push
cs
xor
imul
into
push
cs
xor
repnz
into
push
cs
xor
into
test
into
push
cs
xor
retf
push
mov
pop
xor
(bad)
test
into
push
cs
xor
ret
push
mov
pop
xor
fisubr
into
push
cs
xor
fisubr
into
push
cs
xor
(bad)
test
into
push
cs
xor
shr
into
push
cs
