dec
add
add
add
add
add
add
add
add
add
repnz
push
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
push
jecxz
xchg
(bad)
push
xchg
ins
outs
cmps
call
add
and
ss
jecxz
jmp
fs
out
or
dec
mov
jecxz
lea
and
sti
out
int
mov
xlat
sub
jbe
xchg
add
add
add
add
add
mov
add
mov
add
jecxz
add
sbb
add
arpl
add
xchg
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
xor
add
outs
add
outs
add
outs
add
arpl
je
imul
push
add
jo
add
add
add
popa
add
add
outs
add
add
add
je
bound
js
dec
add
jae
je
dec
add
inc
add
add
add
jae
add
add
popa
add
add
outs
add
add
add
jae
add
imul
cmp
add
sub
add
add
outs
add
jns
inc
add
add
add
jae
add
imul
fadd
add
sub
add
add
outs
add
jns
inc
add
add
add
jae
add
add
je
add
add
add
add
add
add
jo
push
add
je
je
imul
jae
add
add
popa
add
add
outs
add
inc
add
add
add
je
imul
jae
dec
add
jo
jne
je
push
add
outs
add
ins
add
add
add
je
bound
outs
add
dec
add
data16
add
add
add
ins
add
outs
add
outs
add
arpl
je
imul
push
add
jo
add
add
add
je
das
add
add
add
ins
add
outs
add
outs
add
arpl
je
imul
push
add
jo
add
add
add
popa
add
add
outs
add
add
sub
add
push
add
outs
add
jns
push
add
jb
je
add
add
popa
add
add
outs
add
add
add
ins
add
ins
add
outs
add
je
dec
add
inc
add
add
add
jae
add
add
je
jp
add
sub
add
add
jae
je
dec
add
inc
add
add
add
jae
add
imul
xchg
add
add
add
add
add
add
jo
push
add
je
je
imul
jae
add
add
je
ss
add
add
add
add
jo
push
add
je
je
imul
jae
add
imul
dec
add
add
add
add
je
imul
jae
dec
add
jo
jne
je
push
add
outs
add
ins
add
add
push
add
bound
outs
add
push
add
js
je
repnz
add
ins
add
popa
add
imul
add
outs
add
outs
add
add
imul
push
push
add
xor
add
add
add
je
imul
jae
dec
add
jo
jne
je
push
add
outs
add
ins
add
add
imul
mov
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
outs
jb
popa
and
outs
js
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
add
or
adc
outs
and
inc
outs
outs
gs
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
inc
outs
fs
ret
cmps
outs
and
and
push
jb
js
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
inc
gs
arpl
cmps
ret
mov
je
ins
ret
mov
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
pop
add
add
add
dec
outs
imul
gs
ret
mov
jb
and
outs
js
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
or
add
pushf
adc
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
pop
dec
pop
test
(bad)
cdq
into
(bad)
cmp
repz
add
jmp
mov
and
mov
mov
jle
int3
sbb
mov
ror
call
fcomp
cmp
(bad)
outs
or
loopne
lods
call
inc
push
mov
popa
xlat
jmp
pop
xchg
and
or
out
es
xor
or
xor
push
jo
mov
cdq
adc
push
stos
fstp
sbb
arpl
das
ror
jb
call
push
push
xchg
add
mov
inc
dec
daa
hlt
jo
sub
mov
sub
inc
in
loopne
push
out
fnstsw
ds
pop
inc
jg
or
jbe
cmp
dec
or
or
sub
dec
sbb
sbb
sbb
add
mov
mov
pusha
xchg
ja
or
js
jle
jnp
retf
clc
jle
add
add
add
add
add
jns
add
scas
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
push
add
add
fiadd
add
sub
add
dec
push
add
jb
add
test
add
rol
add
repz
add
adc
add
inc
pop
add
popw
add
xchg
pop
add
test
add
int
add
inc
add
sub
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
(bad)
mov
or
add
add
daa
push
add
sub
add
add
add
jno
jne
popa
add
arpl
arpl
add
je
dec
add
add
je
add
add
add
and
popa
add
dec
add
outs
add
je
push
add
arpl
push
add
add
add
push
add
add
add
jno
jne
popa
add
arpl
arpl
add
je
dec
add
add
push
add
add
add
jb
popa
add
add
inc
add
arpl
add
je
dec
add
add
je
add
imul
add
ins
add
jb
push
add
ins
add
je
je
add
add
add
je
inc
add
ins
add
jb
jae
inc
add
ins
add
jb
jae
mov
add
sub
add
ins
add
inc
add
add
imul
add
js
je
dec
add
add
je
add
cdq
add
add
add
add
je
inc
add
add
inc
add
ins
add
jb
mov
push
add
add
add
jb
popa
add
add
inc
add
arpl
add
je
lds
add
xor
outs
add
add
push
add
ins
add
je
je
add
je
popa
add
add
jb
add
outs
add
add
fadd
add
and
add
ins
add
push
add
jb
jo
ins
add
inc
add
arpl
add
je
jmp
add
and
add
ins
add
inc
add
ins
add
jb
dec
add
add
je
add
add
add
xor
add
ins
add
inc
add
jb
imul
add
add
push
add
js
je
dec
add
add
je
add
or
add
sub
add
inc
add
ins
add
jb
popa
add
imul
add
pop
add
add
dec
add
outs
add
sub
add
inc
inc
add
je
add
add
add
ins
add
add
push
add
add
add
outs
add
add
push
add
outs
add
add
data16
add
xor
add
ins
add
push
add
jb
jo
ins
add
inc
add
arpl
add
je
dec
add
add
je
add
xchg
add
add
add
outs
add
add
jo
push
add
js
je
inc
add
jb
inc
add
outs
add
add
ins
add
jb
push
add
ins
add
je
je
add
add
jb
add
je
inc
add
outs
add
add
je
imul
ret
add
inc
add
ins
add
jb
push
add
ins
add
je
je
add
outs
add
outs
add
add
rol
add
xor
add
add
add
push
add
inc
add
arpl
imul
add
outs
add
outs
add
add
jb
imul
add
out
add
and
add
popa
add
popa
add
je
add
push
add
ins
add
imul
outs
add
or
add
push
pop
add
ins
add
add
inc
add
ins
add
jb
and
add
and
add
ins
add
inc
add
ins
add
jb
inc
add
jb
imul
add
sub
add
cmp
add
ins
add
dec
add
add
add
jb
add
outs
add
arpl
arpl
add
je
dec
add
add
je
add
add
add
push
add
add
jae
add
jo
add
imul
inc
add
popa
add
add
add
add
outs
add
ins
add
pop
add
add
push
add
bound
inc
add
ins
add
outs
add
imul
jb
pop
add
add
dec
add
outs
add
mov
add
and
popa
add
add
dec
add
ins
add
je
dec
add
jae
jae
popa
add
gs
add
add
inc
add
add
inc
add
ins
add
jb
add
add
and
add
jbe
popa
add
add
add
je
push
add
outs
add
outs
add
or
add
and
add
add
add
add
inc
add
arpl
imul
add
outs
add
outs
add
add
add
dec
add
popa
add
add
inc
add
ins
add
jb
add
add
push
add
add
add
add
add
arpl
add
je
dec
add
add
je
add
outs
add
add
add
ins
add
imul
popa
add
add
add
je
inc
add
js
pop
add
popa
add
imul
ins
add
push
add
arpl
je
add
jae
inc
add
add
ins
add
add
add
add
add
push
add
add
add
add
inc
add
arpl
imul
add
outs
add
outs
add
add
jb
imul
add
mov
add
adc
add
popa
add
ins
add
fs
add
add
push
add
add
add
add
imul
add
add
push
add
js
je
out
add
push
push
add
outs
add
add
add
imul
imul
gs
add
add
inc
add
jo
imul
add
add
add
add
outs
add
add
jo
push
add
js
je
inc
add
jb
inc
add
arpl
imul
add
outs
add
outs
add
add
ins
add
jb
push
add
ins
add
je
je
add
add
add
add
add
add
ins
add
arpl
imul
add
js
je
daa
add
add
push
add
outs
add
add
jo
push
add
add
imul
add
add
add
add
add
add
ins
add
add
arpl
arpl
add
je
dec
add
add
je
add
inc
add
add
push
add
add
add
ins
add
add
arpl
arpl
add
je
pop
add
add
push
add
add
add
push
add
inc
add
arpl
imul
add
outs
add
outs
add
add
add
push
add
add
outs
add
add
xchg
add
push
add
outs
add
add
jo
push
add
add
jb
ins
add
outs
add
nop
add
add
add
outs
add
add
jo
push
add
js
je
inc
add
jb
inc
add
outs
add
add
jp
add
add
add
add
ins
add
jbe
add
jb
add
outs
add
arpl
arpl
add
je
scas
add
add
add
jbe
popa
add
add
add
ins
add
dec
add
ins
add
push
add
jb
outs
add
outs
add
leave
add
add
dec
add
add
je
inc
add
add
outs
add
outs
add
add
pop
add
add
jb
imul
add
add
inc
add
ins
add
jb
and
add
sbb
outs
add
popa
add
add
add
ins
add
add
add
add
ins
add
jb
push
add
ins
add
je
je
add
add
ins
add
inc
add
ins
add
jb
inc
add
add
outs
add
add
jo
dec
add
jb
add
outs
add
add
push
add
add
outs
add
add
jo
dec
add
add
add
pop
add
add
popa
add
popa
add
je
add
dec
add
ins
add
je
push
add
jb
outs
add
outs
add
addr16
add
add
add
add
add
arpl
add
je
mov
add
outs
add
add
jo
push
add
js
je
inc
add
jb
inc
add
outs
add
add
ins
add
inc
add
ins
add
outs
add
outs
add
mov
push
add
outs
add
add
jo
inc
add
ins
add
add
add
arpl
jne
jb
imul
dec
add
outs
add
je
outs
add
push
add
outs
add
push
add
add
imul
mov
inc
add
jb
imul
add
add
outs
add
add
lock
add
outs
add
add
jo
push
add
popa
add
jae
jo
popa
add
add
arpl
jns
add
add
push
push
add
jb
jo
ins
add
inc
add
ins
add
jb
adc
add
adc
outs
add
add
outs
add
push
add
inc
add
ins
add
jb
push
add
ins
add
je
je
add
outs
add
add
outs
add
add
sub
add
pop
inc
add
ins
add
imul
popa
add
add
add
je
inc
add
js
pop
add
popa
add
imul
ins
add
add
add
push
add
inc
add
add
push
add
popa
add
push
add
push
add
and
outs
add
popa
add
add
add
popa
add
popa
add
je
add
pop
push
add
adc
add
add
outs
add
outs
add
add
outs
push
add
add
and
jne
mov
sub
inc
arpl
je
popa
jb
jnp
jge
and
jge
jnp
jge
and
arpl
jo
imul
ins
ret
mov
and
imul
imul
jne
and
jne
mov
sub
inc
arpl
je
popa
jb
jnp
jge
push
dec
popa
jb
outs
push
sub
inc
arpl
je
popa
jb
jnp
jge
and
jge
jnp
jge
push
inc
outs
jb
jae
push
arpl
je
jae
push
push
jb
je
sub
push
gs
outs
and
jge
and
jno
imul
add
inc
jp
ins
and
popa
jb
add
outs
push
sub
inc
arpl
je
popa
jb
jnp
jge
or
jae
jo
fs
mov
imul
and
outs
je
popa
jb
jnp
jge
pop
inc
ins
popa
jb
popa
jb
pop
inc
jp
ins
and
arpl
outs
sub
push
gs
outs
and
jge
and
jge
jnp
jge
xor
outs
data16
popa
jb
and
ins
outs
outs
imul
mov
and
lods
fs
jae
jo
jb
dec
push
and
ins
gs
jae
add
push
popa
ins
outs
jb
imul
outs
and
and
je
jb
outs
popa
and
imul
jnp
jge
popa
and
jge
add
push
imul
and
outs
je
popa
jb
jnp
jge
and
jge
jnp
jge
or
outs
jb
fs
and
outs
je
add
inc
outs
outs
gs
mov
jb
je
add
dec
ret
mov
jb
fs
outs
outs
add
inc
jb
outs
arpl
and
outs
outs
and
jge
and
arpl
arpl
and
jge
sbb
jge
arpl
popa
arpl
gs
jb
jae
popa
outs
je
jae
pop
inc
ins
popa
jb
ins
outs
add
inc
jae
jne
arpl
add
push
gs
gs
popa
sub
inc
arpl
je
popa
jb
jnp
jge
and
jge
jnp
jge
xor
jb
popaw
jbe
jb
and
jo
arpl
imul
and
ins
and
jne
jne
mov
jbe
mov
add
ins
je
jb
and
jne
push
inc
and
arpl
gs
and
jb
and
jae
jae
gs
popa
and
jae
addr16
popa
ret
cmps
popa
and
jbe
fs
add
dec
ret
mov
and
jo
jb
popa
and
and
je
jb
outs
outs
and
je
jb
popa
ins
outs
and
jnp
jge
popa
and
jge
add
jp
ins
add
arpl
imul
mov
jbe
and
outs
je
jb
jno
popa
ins
jno
gs
jne
and
and
jb
arpl
gs
jae
addr16
outs
je
jae
and
jge
adc
jb
outs
jp
popa
outs
sub
inc
jne
outs
and
jge
pop
dec
popa
jb
outs
push
add
push
gs
gs
push
arpl
je
popa
jb
jnp
jge
and
jge
jnp
jge
and
fs
jae
jb
jb
popa
je
test
and
jb
arpl
gs
add
inc
jb
outs
jp
popa
outs
sub
inc
jne
outs
and
jge
and
arpl
arpl
and
jge
or
gs
bound
imul
jp
ins
and
arpl
outs
sub
push
gs
outs
and
jge
orps
outs
jb
dec
outs
jbe
mov
add
inc
js
imul
inc
outs
jb
fs
outs
outs
add
push
jb
je
sub
push
gs
outs
and
jge
pop
push
imul
sbb
jne
sub
inc
arpl
je
popa
jb
jnp
jge
and
jge
jnp
jge
adc
jne
sub
inc
arpl
je
popa
jb
jnp
jge
adc
popa
outs
arpl
and
outs
outs
and
jge
or
jb
gs
push
jne
ins
imul
adc
popa
outs
push
and
jb
add
push
gs
gs
popa
sub
inc
arpl
je
popa
jb
jnp
jge
dec
dec
and
ins
and
popa
jb
jne
jbe
and
mov
jbe
and
outs
je
jb
jno
popa
ins
jno
gs
jne
and
and
addr16
outs
je
jae
arpl
popa
arpl
gs
and
jge
or
jb
and
popa
jb
add
inc
jp
ins
and
arpl
outs
add
push
popa
ins
outs
jb
imul
outs
add
jae
outs
and
popa
add
dec
popa
imul
jae
or
ret
mov
add
push
outs
fs
jae
jb
jb
popa
je
test
and
jb
arpl
gs
add
push
gs
gs
push
arpl
je
popa
jb
jnp
jge
or
and
dec
gs
popa
add
dec
gs
je
add
jb
outs
jae
outs
jb
and
jae
jne
push
inc
and
ins
and
jae
gs
popa
and
push
imul
ins
ret
mov
add
push
gs
gs
push
arpl
outs
add
push
jb
outs
jae
popa
jb
stos
outs
arpl
add
push
imul
push
dec
outs
and
ret
cmps
popa
ins
outs
je
add
and
jb
jae
and
jo
imul
ins
ret
mov
and
arpl
ret
cmps
popa
outs
add
inc
popa
jb
arpl
and
jbe
mov
add
xor
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
pop
ins
std
mov
add
add
add
add
add
and
add
add
popa
add
inc
add
jne
outs
add
add
imul
add
add
and
add
add
popa
add
inc
add
jne
outs
add
add
add
je
movs
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
xor
xor
arpl
popa
arpl
gs
jb
jae
popa
outs
je
jae
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
in
aas
or
test
xor
add
add
add
jne
add
rol
add
and
ins
add
ins
add
popa
add
jae
ja
outs
add
add
add
imul
add
add
and
ins
add
ins
add
popa
add
jae
ja
outs
add
add
add
add
je
movs
add
add
pop
add
add
add
add
dec
add
ins
add
add
imul
mov
add
and
ins
add
ins
add
jae
add
dec
add
ins
add
add
add
je
pop
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
push
popa
ins
popa
jbe
popa
sub
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
dec
outs
ins
and
jne
jne
mov
add
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
addr16
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
test
bound
inc
push
call
mov
data16
pop
in
(bad)
cli
jge
sbb
push
cmps
push
adc
movs
push
adc
mov
out
add
add
and
add
add
add
jl
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
ins
add
add
add
imul
add
imul
add
add
and
add
add
je
jb
jns
imul
add
add
je
movs
add
add
add
add
jae
add
arpl
outs
add
mov
and
je
push
add
add
add
je
jnp
add
sbb
add
add
popa
add
arpl
add
add
add
je
xchg
add
add
add
add
add
add
popa
add
add
outs
add
ins
add
ins
add
add
outs
add
data16
jb
push
add
je
add
add
imul
sub
ins
add
ins
add
add
outs
add
data16
jb
push
add
je
add
add
add
je
ror
add
add
add
add
add
imul
stc
mov
add
bound
je
outs
add
add
add
add
add
je
popf
mov
add
add
ins
add
add
outs
add
add
add
je
popa
add
add
add
add
je
scas
mov
add
add
ins
add
add
outs
add
add
add
je
popa
add
add
add
imul
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
push
outs
je
outs
outs
and
jbe
ins
outs
je
and
and
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
add
add
add
inc
add
push
add
add
xor
add
add
add
inc
add
and
add
add
and
test
add
es
add
add
and
mov
add
into
js
add
adc
add
add
add
add
push
add
sub
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
jg
jg
jg
jg
jg
jg
jg
jg
push
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
stos
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
jg
jg
jg
jg
jg
jg
jg
add
inc
add
add
add
add
add
add
jg
jg
xor
pop
or
data16
push
push
ja
cvtps2pd
pop
adc
test
dec
test
push
test
dec
jg
sbb
bound
dec
jg
sbb
sbb
pop
sbb
sbb
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
and
jg
push
push
jg
sbb
test
dec
jg
sbb
bound
push
test
push
jg
sbb
pop
pop
push
jns
adc
dec
jg
adc
pop
push
push
jg
or
jg
or
push
push
push
stos
push
add
(bad)
inc
add
add
add
inc
jg
jg
push
push
push
add
add
pop
or
push
addps
pusha
sbb
push
sbb
test
push
test
push
sbb
sbb
sbb
push
jg
inc
push
sbb
sbb
push
sbb
sbb
sbb
sbb
jg
dec
push
jg
dec
push
sbb
sbb
push
sbb
push
jg
ss
test
push
sbb
xchg
pop
jg
and
pop
sbb
js
adc
push
dec
ins
ins
pop
aas
jg
add
jg
add
jg
add
add
add
add
add
add
jg
jg
push
jg
push
dec
jne
or
pop
test
push
and
mov
push
mov
pop
test
push
sbb
pop
aas
push
jg
inc
push
test
push
sbb
sbb
sbb
pop
pop
push
sbb
pop
pusha
push
sbb
pop
bound
pop
push
sbb
pop
outs
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
fs
sbb
sbb
pop
pusha
push
sbb
sbb
sbb
pop
push
push
sbb
sbb
push
test
push
jg
xor
pop
sub
and
sbb
pop
push
pop
jg
adc
or
add
jg
jg
jg
push
stos
jg
pop
xchg
push
jg
and
pop
xor
pusha
cmp
push
sbb
push
sbb
pop
pop
push
sbb
sbb
sbb
test
push
sbb
push
sbb
pop
ins
push
sbb
sbb
sbb
sbb
sbb
pop
jae
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
pop
addr16
sbb
sbb
pop
popa
push
sbb
sbb
sbb
sbb
test
push
test
sbb
pop
sub
sbb
bound
add
add
add
add
dec
xchg
ins
pop
push
xchg
push
xchg
sbb
push
sbb
sbb
sbb
test
push
sbb
pop
jno
sbb
pop
jno
sbb
push
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
pop
jno
sbb
pop
jno
sbb
pop
jo
sbb
sbb
sbb
test
pop
jg
xor
and
jg
or
jg
add
add
add
(bad)
inc
dec
jg
push
push
jg
and
sbb
test
sbb
sbb
pop
ins
push
sbb
pop
jae
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
test
push
sbb
pop
jbe
sbb
pop
ja
test
test
test
test
sbb
pop
ja
sbb
pop
jbe
test
push
sbb
sbb
pop
je
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
pop
ss
test
jg
jg
(bad)
(bad)
inc
dec
mov
push
sbb
sbb
push
sbb
pop
addr16
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
test
dec
xchg
dec
xchg
dec
mov
dec
mov
inc
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
mov
dec
mov
dec
mov
dec
xchg
dec
xchg
dec
test
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
pop
gs
sbb
xchg
push
test
push
jns
adc
add
add
push
stos
push
push
dec
js
adc
pop
and
pop
cmp
pop
dec
push
sbb
push
sbb
test
push
test
push
test
push
sbb
pop
jno
sbb
push
sbb
pop
ja
test
dec
xchg
inc
mov
inc
mov
inc
mov
nop
push
mov
cmp
push
int3
cmp
push
aad
xchg
push
aad
xchg
dec
sar
xchg
push
int3
cmp
push
sar
mov
inc
mov
inc
mov
dec
xchg
push
test
push
sbb
pop
je
sbb
sbb
push
sbb
pop
jno
test
push
sbb
sbb
sbb
sbb
and
test
push
and
jae
or
jg
add
inc
add
jg
add
ja
rsqrtps
pop
push
and
test
push
and
sbb
sbb
sbb
sbb
sbb
pop
bound
pop
addr16
xchg
dec
xchg
inc
mov
inc
mov
inc
lea
cmp
push
mov
xchg
pop
shl
pop
fdiv
cwde
pop
in
cdq
pop
jmp
pop
hlt
cs
das
call
das
cdq
pop
jmp
pop
fdiv
pop
sar
xchg
pop
sar
mov
mov
mov
inc
mov
dec
xchg
dec
xchg
push
test
push
test
push
sbb
sbb
sbb
sbb
sbb
jg
dec
push
sbb
test
push
xchg
push
mov
pop
mov
jg
add
add
add
inc
add
cdq
add
pop
or
pop
adc
adc
push
sbb
bound
push
sbb
pop
ss
sbb
dec
test
inc
mov
ds
push
xchg
cmp
push
enter
fdiv
xchg
pop
loopne
fwait
popa
out
popf
data16
sub
ins
mul
mov
jb
and
mov
je
and
mov
outs
clc
sub
imul
popf
data16
das
fwait
popa
out
xchg
pop
loope
xchg
push
fnstenv
xchg
push
retf
push
mov
(bad)
push
xchg
inc
mov
dec
xchg
dec
test
push
sbb
sbb
push
test
sbb
mov
push
test
dec
jg
adc
jg
push
pop
jg
or
jg
add
(bad)
inc
add
add
add
add
jg
jg
jg
jg
jg
jg
push
jg
push
pop
mov
xchg
inc
xchg
inc
mov
inc
mov
aas
mov
cmp
push
mov
cwde
pop
shr
cdq
pop
jmp
gs
sub
jb
and
ja
and
jge
and
cmp
test
cmp
test
cmp
cmps
jge
and
js
mov
ins
cld
sub
pop
clc
cs
pop
jmp
cwde
pop
aam
xchg
push
mov
xchg
push
xchg
aas
lea
inc
mov
inc
mov
push
xchg
pop
jns
pop
push
mov
dec
jg
or
add
push
add
jg
jg
jg
add
add
(bad)
(bad)
inc
aas
jg
add
mov
nop
push
push
cmp
dec
ins
ss
dec
movs
xor
pop
loopne
mov
jo
and
cmps
jns
and
jg
and
cmp
stos
test
and
test
pop
stos
test
pop
stos
test
pop
stos
test
and
test
and
cmp
test
jmp
cmps
jge
and
jbe
mov
push
loope
xchg
push
int
xchg
dec
cmps
aaa
xchg
dec
outs
aaa
xchg
dec
inc
aas
(bad)
dec
and
dec
or
push
push
push
add
inc
add
inc
add
mov
cmp
inc
xor
push
sahf
das
cdq
pop
shr
mov
jne
and
test
and
xchg
and
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
test
call
movs
jl
pop
movs
jl
pop
test
call
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
and
xchg
and
test
and
jne
sub
pusha
icebp
das
call
xor
dec
inc
cmp
or
inc
add
inc
add
jg
push
xor
dec
xor
pop
mov
sahf
arpl
sub
jno
and
jnp
and
xchg
and
jmp
lods
mov
and
jmp
lods
mov
and
xchg
and
jmp
fwait
imul
movs
jnp
and
mov
and
jmp
lods
mov
and
jmp
lods
mov
and
cmp
cmps
jnp
daa
mov
imul
sub
xchg
push
xor
pop
sub
push
add
add
add
add
xor
dec
push
xor
push
sub
pop
mov
sub
ja
and
test
and
jmp
lods
mov
and
mov
and
mov
and
jmp
movs
jp
daa
popf
outs
jmp
xchg
(bad)
jmp
xchg
(bad)
jmp
popf
outs
jmp
movs
jp
and
mov
and
mov
and
mov
and
mov
and
jmp
test
jmp
mov
data16
fwait
pop
mov
xor
dec
push
xor
add
add
add
xor
dec
sbb
das
call
sub
jne
and
jge
and
xchg
and
mov
and
mov
and
mov
and
mov
and
jmp
xchg
pusha
dec
dec
push
pusha
jmp
movs
jnp
and
jmp
lods
mov
and
mov
and
mov
and
mov
and
jmp
jge
daa
cmps
jne
sub
pop
mov
xor
dec
sbb
add
add
add
add
and
dec
pop
xor
push
cmp
cs
pop
mov
mov
je
and
lods
xchg
and
mov
and
mov
and
mov
and
mov
and
xchg
and
outs
push
xchg
pop
dec
push
push
dec
push
xchg
pop
jmp
cmps
jge
and
mov
and
mov
and
mov
and
mov
and
mov
and
cmp
movs
je
sub
pop
mov
cwde
push
jge
xchg
push
cmp
and
dec
pop
add
add
push
stos
push
add
cwde
dec
xor
cdq
push
push
popf
pop
mov
mov
jne
and
lods
xchg
and
mov
and
mov
and
mov
and
mov
and
mov
and
imul
xchg
pusha
inc
push
jg
stos
int
jmp
lods
jg
inc
xchg
popa
jmp
pusha
jmp
pushf
imul
cmps
jg
and
mov
and
mov
and
mov
and
mov
and
mov
and
xchg
and
cmps
jne
sub
push
mov
cdq
push
push
cwde
dec
xor
xchg
push
adc
push
add
inc
add
lahf
aas
or
inc
daa
xor
pop
pushf
cs
fsubr
movs
jno
daa
stos
jle
and
mov
and
mov
and
mov
and
mov
and
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
scas
mov
and
jbe
and
pop
jmp
jp
lahf
lds
call
in
call
test
(bad)
cmp
pop
jmp
mov
xchg
and
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
and
mov
and
mov
and
mov
daa
stos
jle
sub
fdiv
fwait
pop
pushf
xor
inc
daa
aas
lahf
aas
or
inc
add
add
add
cdq
xor
xor
dec
xchg
xor
ins
out
sub
xchg
and
mov
jmp
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
(bad)
jmp
(bad)
jmp
mov
and
cmp
sahf
outs
jmp
popf
push
call
jecxz
(bad)
in
cmc
out
(bad)
in
cmc
out
call
jecxz
call
popf
imul
and
test
mov
and
(bad)
jmp
(bad)
jmp
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
(bad)
jmp
lods
xchg
sub
ins
out
xor
dec
xchg
xor
inc
adc
cdq
xor
add
add
mov
dec
sub
cwde
push
xor
(bad)
in
sub
test
es
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
mov
push
inc
(bad)
push
div
(bad)
sti
std
sti
(bad)
sti
std
sti
push
div
dec
(bad)
inc
push
xor
jb
and
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
test
sub
(bad)
in
xor
push
xor
sub
mov
add
aas
jg
add
xchg
dec
pop
xor
dec
push
xor
(bad)
imul
stos
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
pop
dec
dec
(bad)
mov
out
out
cli
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cld
cli
jmp
out
out
mov
mov
jmp
xchg
pop
jmp
scas
mov
es
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
stos
cmp
movs
outs
imul
lahf
(bad)
xor
dec
push
xor
add
inc
add
dec
pop
xor
dec
xor
dec
jp
popf
pop
mov
sub
mov
daa
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
mov
cmps
jge
sub
imul
xchg
pop
jmp
jne
mov
mov
push
cli
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
cli
idiv
out
out
mov
mov
(bad)
cmp
imul
cmps
jge
es
mov
daa
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
stos
jl
sub
popf
pop
mov
xor
dec
xor
dec
pop
add
add
push
stos
push
add
xchg
dec
push
xor
dec
lahf
das
lahf
pop
fsubr
test
mov
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
stos
cmp
cmp
ins
dec
loope
push
clc
cmc
(bad)
std
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
push
clc
cmc
dec
loope
dec
mov
(bad)
jmp
pushf
push
daa
stos
cmp
daa
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
mov
sub
pop
fdiv
cwde
dec
lahf
xor
dec
push
push
stos
push
add
inc
add
test
dec
pop
xor
push
mov
sub
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
test
sub
pusha
call
imul
mov
mov
(bad)
sti
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cld
sti
jmp
out
in
mov
mov
call
imul
sub
test
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
jg
das
mov
push
mov
xor
or
inc
add
add
add
jg
xor
call
das
lahf
pop
retf
ins
clc
sub
test
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
xchg
mov
inc
arpl
jae
cmp
loope
loop
cmc
stc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
stc
cmc
jmp
in
loop
mov
mov
inc
push
cdq
jmp
mov
xchg
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
test
movs
ins
clc
das
lahf
pop
retf
push
js
call
jg
jg
push
stos
push
add
cdq
dec
push
xor
dec
push
xor
(bad)
sub
mov
jmp
mov
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
jmp
test
jmp
xchg
popa
(bad)
ds
pusha
jmp
jnp
mov
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
stc
(bad)
fld1
fdivr
mov
stos
jge
ds
pusha
jmp
xchg
popa
jmp
test
jmp
mov
jmp
mov
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
sub
mov
pop
xchg
xor
dec
push
xor
push
add
add
add
cdq
add
dec
sub
xchg
push
ins
xor
outs
loope
scas
jle
sub
mov
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
mov
jmp
mov
pop
call
imul
lds
(bad)
out
cmc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
call
in
call
sahf
imul
xchg
pop
jmp
mov
mov
sub
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
scas
jle
das
cmps
outs
loope
popf
pop
lods
xor
sub
cdq
add
add
sub
push
xor
dec
xor
xchg
dec
xor
test
xchg
sub
mov
cwde
jmp
mov
cwde
jmp
mov
xchg
jmp
mov
jmp
movs
jns
ss
ins
call
ins
inc
fmulp
push
div
(bad)
sti
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
std
cld
push
div
dec
fmulp
inc
mov
ins
jmp
movs
jns
sub
xchg
jmp
mov
cwde
jmp
mov
cwde
jmp
mov
jmp
mov
std
xor
pop
shl
dec
xor
push
push
sub
dec
cmp
xchg
dec
xchg
xor
jp
das
mov
std
cs
cdq
jmp
mov
call
mov
cdq
jmp
mov
cmp
dec
fwait
dec
(bad)
sar
in
in
idiv
idiv
cli
cld
cli
(bad)
cld
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
std
cld
(bad)
cli
cld
cli
push
cli
idiv
loop
in
mov
mov
jmp
xchg
pop
jmp
stos
cmp
sub
mov
call
mov
call
mov
mov
das
lods
jp
xor
dec
xchg
ss
dec
cmp
stos
push
push
and
dec
pop
xor
xchg
dec
sahf
xor
jge
das
mov
(bad)
das
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
xchg
jmp
mov
push
call
pop
dec
sar
shl
sar
xlat
out
jmp
out
in
cmc
clc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
clc
cmc
jmp
out
in
xlat
out
call
loop
inc
(bad)
(bad)
mov
mov
pop
jmp
lea
sub
mov
cs
call
mov
fwait
jmp
mov
fwait
jmp
mov
nop
(bad)
xor
popa
fbstp
xchg
dec
lahf
xor
xchg
dec
pop
aas
jg
or
xchg
dec
inc
xor
(bad)
call
xor
call
mov
pushf
push
mov
pushf
push
mov
mov
sub
popa
push
mov
dec
xchg
pop
jmp
jno
ja
cmp
mov
inc
mov
mov
(bad)
cld
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
std
cld
jmp
out
in
mov
mov
(bad)
(bad)
jge
xchg
ja
cmp
mov
pop
push
mov
cs
popa
jmp
movs
jbe
sub
mov
pushf
push
mov
pushf
push
mov
pushf
push
mov
xchg
push
mov
cli
xor
dec
test
aas
jg
or
add
add
jg
or
xchg
dec
inc
xor
arpl
xor
cwde
push
mov
sahf
push
mov
sahf
push
mov
sahf
push
mov
(bad)
jmp
pushf
push
(bad)
aas
xchg
pop
inc
dec
dec
call
jmp
jne
xchg
mov
fdivr
sti
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cld
sti
call
out
call
cmps
jne
push
lahf
push
dec
pushf
dec
inc
(bad)
aas
xchg
pop
push
xchg
pop
jmp
pushf
push
jmp
mov
push
mov
sahf
push
mov
sahf
push
mov
sahf
push
mov
cdq
push
mov
std
xor
dec
mov
xchg
dec
inc
aas
jg
or
add
add
lahf
aas
or
xchg
dec
mov
mov
xchg
xor
lahf
push
rcr
xor
lahf
push
rcr
xor
cdq
push
mov
push
scas
test
xor
jno
xor
outs
push
outs
(bad)
cmp
pushf
inc
dec
loope
(bad)
cli
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
sti
cli
dec
loope
inc
pushf
addr16
cmp
mov
outs
push
mov
jno
xor
test
xor
cdq
push
mov
lahf
push
rcr
xor
lahf
push
rcr
xor
xchg
xor
dec
mov
xchg
dec
inc
aas
lahf
aas
or
add
add
lahf
aas
or
xchg
dec
mov
mov
xchg
xor
mov
push
shl
xor
mov
push
shl
xor
cwde
push
mov
jmp
mov
jmp
lods
cmp
test
push
mov
popa
(bad)
jns
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
cmp
cdq
popa
push
mov
jp
sub
scas
cmp
mov
push
mov
push
mov
sahf
push
shl
xor
mov
push
shl
xor
mov
push
mov
xchg
xor
fs
xor
dec
inc
aas
lahf
aas
or
add
add
jg
or
xchg
dec
inc
xor
fs
xor
xchg
xor
shl
xor
ret
xor
ret
xor
ret
xor
rcr
xor
push
mov
jmp
scas
cmp
mov
popa
(bad)
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
cdq
popa
push
mov
cmp
mov
push
mov
cwde
push
mov
lahf
push
ret
xor
ret
xor
ret
xor
ret
xor
mov
xchg
xor
fs
xor
dec
inc
aas
jg
or
add
add
jg
or
xchg
dec
inc
xor
fs
ss
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
mov
xchg
xor
(bad)
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
call
das
mov
push
mov
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
mov
xchg
xor
fs
xor
aas
or
add
add
dec
pop
xor
xchg
dec
sahf
xor
fidiv
mov
cmc
ss
mov
push
lds
push
lds
push
lds
push
lds
push
lds
push
les
xor
jae
inc
call
retf
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
call
xor
fwait
push
les
aaa
lds
push
lds
push
lds
push
lds
push
lds
push
ret
mov
(bad)
ss
cmc
xor
fidiv
xchg
dec
sahf
xor
xchg
dec
pop
sub
dec
cmp
xchg
dec
xchg
xor
shl
mov
lock
mov
mov
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
movs
push
mov
push
je
inc
call
retf
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
call
xor
(bad)
cmp
movs
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
push
ret
mov
std
ss
lock
shl
xchg
dec
xchg
ss
dec
cmp
stos
push
push
sub
push
xor
dec
xor
xchg
dec
xor
jge
aaa
mov
lahf
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
push
rcr
xor
fwait
fs
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
fwait
push
mov
push
rcr
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
lahf
push
mov
jge
xor
arpl
xor
dec
xor
jg
push
xor
dec
sub
push
imul
ja
aaa
mov
cld
cmp
popf
(bad)
cmp
test
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
aaa
rcr
cmps
jbe
inc
fwait
fs
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
fwait
push
cmps
jbe
xor
sahf
(bad)
cmp
test
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
cmp
sahf
push
mov
cld
lods
js
xor
xchg
push
ins
aaa
xchg
dec
sub
cdq
add
add
push
stos
push
add
nop
dec
push
xor
mov
outs
aad
mov
cli
cmp
call
leave
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
test
push
(bad)
push
cmps
jbe
inc
fwait
fs
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
fwait
push
cmps
jbe
xor
(bad)
(bad)
cmp
lahf
(bad)
cmp
test
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
test
cmp
fwait
(bad)
cmp
jo
xor
xchg
dec
push
xor
push
add
add
add
jg
xor
xchg
push
ss
pop
jbe
mov
ja
cmp
test
cmp
stos
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
stos
(bad)
cmp
mov
push
test
inc
fs
js
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
js
cmp
fwait
push
test
push
les
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
lods
(bad)
cmp
stos
(bad)
cmp
test
cmp
js
mov
pop
ja
xchg
dec
cmp
jg
add
inc
add
lea
xchg
dec
sbb
xor
push
mov
cmp
(bad)
cmp
int3
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
cmp
mov
(bad)
cmp
gs
jns
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
cmp
pushf
gs
cmp
(bad)
(bad)
cmp
mov
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
cmp
enter
mov
ins
icebp
xor
push
mov
xor
dec
sbb
add
add
push
push
push
add
mov
xor
dec
lahf
movs
fdivr
mov
repz
sahf
(bad)
ds
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int3
lods
(bad)
cmp
mov
(bad)
cmp
gs
jns
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
cmp
pushf
gs
cmp
nop
(bad)
cmp
mov
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
ds
cmp
sahf
(bad)
cmp
fdiv
cwde
dec
lahf
xor
dec
or
add
add
dec
xchg
dec
pop
ss
dec
das
xor
dec
jns
mov
jl
cmp
(bad)
aas
int
(bad)
aas
into
scas
inc
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
int
(bad)
cmp
movs
(bad)
cmp
jns
inc
pushf
gs
jns
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
cmp
pushf
gs
cmp
xchg
(bad)
cmp
movs
inc
scas
inc
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
inc
into
mov
aas
into
scas
(bad)
aas
int
(bad)
ds
mov
jl
aaa
mov
dec
jns
xchg
dec
das
dec
xchg
dec
pop
add
add
push
stos
push
add
nop
dec
push
xor
sahf
pop
(bad)
cmp
xor
rcr
inc
into
scas
inc
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
into
mov
cmp
mov
jp
inc
pushf
gs
jns
cmp
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
cmp
pushf
gs
cmp
xchg
(bad)
cmp
into
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
into
scas
inc
test
(bad)
cmp
ins
shl
sahf
pop
(bad)
xor
nop
dec
push
push
stos
push
add
jg
add
xchg
dec
push
ss
dec
sub
sahf
pop
mov
cmp
mov
aas
(bad)
mov
inc
mov
inc
shl
inc
mov
inc
shl
inc
mov
inc
shl
(bad)
cmp
inc
data16
jns
test
retf
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
test
inc
popf
data16
cmp
xchg
(bad)
ds
cmps
inc
mov
inc
shl
inc
mov
inc
shl
inc
mov
inc
shl
(bad)
aas
(bad)
mov
cli
cmp
pop
mov
ss
dec
sub
xchg
dec
push
add
add
add
add
cdq
xor
ss
dec
inc
xor
arpl
cmp
xchg
std
inc
retf
inc
shl
inc
mov
inc
shl
inc
mov
inc
shl
(bad)
aas
retf
cmp
jnp
inc
popf
data16
jns
test
retf
(bad)
(bad)
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
cli
dec
(bad)
(bad)
jns
test
inc
popf
data16
cmp
(bad)
aas
retf
inc
shl
inc
mov
inc
shl
inc
mov
inc
shl
inc
cmps
(bad)
rcl
mov
push
xchg
ss
dec
inc
cmp
xor
add
add
aas
lahf
aas
or
xchg
dec
pop
aaa
mov
jae
cmp
xchg
inc
les
inc
mov
inc
shl
inc
shl
inc
inc
inc
test
(bad)
cmp
push
cmp
repnz
hlt
(bad)
clc
sti
clc
(bad)
clc
sti
clc
(bad)
clc
sti
clc
(bad)
clc
sti
clc
(bad)
clc
sti
clc
(bad)
clc
sti
clc
push
clc
hlt
inc
fmul
push
cmp
cmp
xchg
inc
test
inc
inc
inc
inc
inc
mov
inc
shl
inc
popf
(bad)
cmp
xchg
cmp
pushf
xor
inc
daa
aas
lahf
aas
or
inc
add
add
add
push
add
fwait
push
adc
xchg
push
xor
mov
push
loopne
mov
mov
inc
inc
inc
mov
inc
aam
inc
mov
inc
shl
(bad)
les
(bad)
ds
pop
call
push
fwait
ret
mov
fld
inc
fld
inc
fld
inc
fld
inc
fld
inc
fld
(bad)
mov
ret
pop
lahf
push
ds
pop
(bad)
cmp
popf
inc
lods
inc
mov
inc
aam
inc
mov
inc
aam
inc
mov
inc
shl
inc
(bad)
mov
cmc
cmp
imul
xor
stos
push
add
inc
add
stos
push
push
xor
push
cmp
lahf
pop
jnp
test
mov
mov
loope
mov
mov
inc
mov
inc
aam
inc
mov
inc
aam
inc
mov
inc
shl
cmp
push
(bad)
cmp
pop
jmp
imul
mov
ins
jmp
ins
jmp
ins
jmp
ins
jmp
ins
jmp
imul
xchg
pop
(bad)
cmp
push
(bad)
cmp
stos
inc
inc
mov
inc
aam
inc
mov
inc
aam
inc
mov
inc
shl
(bad)
aas
mov
jle
cmp
pop
jl
mov
push
adc
add
add
add
add
xor
dec
sbb
xchg
push
dec
mov
outs
mov
aas
mov
mov
inc
mov
inc
aam
inc
mov
inc
mov
(bad)
cmp
mov
push
jmp
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
push
xchg
push
jmp
xchg
push
jmp
xchg
push
push
mov
call
aad
inc
mov
inc
mov
inc
shl
inc
mov
cmc
cmp
jg
cmp
pusha
jg
xchg
push
dec
ss
add
add
add
add
xor
dec
sbb
cmp
ins
mov
mov
loopne
mov
cdq
std
inc
retf
cmps
inc
mov
inc
aad
inc
mov
inc
mov
(bad)
ds
cmp
mov
cmp
xchg
cmp
xchg
cmp
xchg
cmp
mov
cmp
(bad)
(bad)
ds
inc
into
scas
inc
mov
inc
mov
inc
mov
inc
retf
cmps
inc
cdq
std
ds
jl
cmp
pop
xor
pop
inc
xor
dec
sbb
add
add
add
add
sub
push
xor
dec
sbb
aaa
mov
push
cmp
sub
mov
mov
inc
mov
inc
xlat
mov
inc
mov
inc
mov
inc
iret
scas
inc
lods
inc
stos
inc
stos
inc
stos
inc
stos
inc
stos
inc
stos
inc
lods
inc
inc
mov
inc
aad
inc
mov
inc
mov
inc
lods
inc
mov
sti
cmp
sub
scas
jbe
aaa
cmps
push
aaa
lahf
pop
jge
fwait
push
dec
xor
push
push
add
add
add
add
xor
dec
sbb
aaa
mov
bound
lods
jno
cmp
les
inc
mov
dec
(bad)
mov
dec
mov
inc
mov
inc
mov
inc
aad
inc
mov
inc
aad
inc
mov
inc
aad
inc
mov
inc
(bad)
mov
dec
mov
dec
mov
inc
stos
inc
cwde
cld
ds
jno
cmp
popf
ss
pop
imul
dec
sbb
add
add
add
add
xor
push
adc
xor
push
xchg
xor
stos
outs
sar
mov
out
rcl
inc
retf
inc
into
test
dec
mov
dec
aam
dec
mov
dec
(bad)
mov
dec
mov
dec
mov
dec
mov
dec
aam
dec
mov
inc
shr
inc
inc
pushf
cld
inc
rcl
cmp
pop
mov
xor
dec
xor
xchg
push
push
xor
add
add
add
and
dec
pop
cmp
dec
xor
push
gs
fs
cmp
jle
inc
mov
xchg
cld
inc
leave
mov
std
inc
into
stos
inc
scas
dec
mov
dec
(bad)
mov
dec
(bad)
mov
dec
shl
inc
stos
inc
cmps
std
inc
leave
mov
cld
inc
mov
jle
cmp
push
mov
aaa
popf
push
data16
dec
cmp
dec
pop
add
add
add
add
add
add
dec
pop
das
lahf
dec
adc
xchg
dec
sub
dec
push
xor
cdq
dec
mov
cmp
jne
ds
loopne
mov
mov
inc
mov
xchg
cmc
inc
ret
cwde
stc
inc
(bad)
fwait
cld
inc
(bad)
fwait
cld
inc
ret
cwde
stc
inc
ret
inc
mov
mov
inc
mov
and
scas
jne
cmp
pop
mov
xor
xchg
dec
push
ss
dec
sub
lahf
dec
adc
dec
pop
add
add
add
add
inc
add
mov
dec
push
xor
xor
xchg
dec
inc
xor
pop
jae
mov
data16
cmp
imul
cmp
push
cmp
imul
test
call
cmp
imul
cmp
bound
xor
dec
inc
xor
dec
xor
xchg
dec
pop
ss
dec
push
aas
mov
add
add
add
push
add
dec
pop
ss
pop
push
xor
dec
sbb
xor
dec
dec
xor
dec
push
cwde
push
jg
cdq
dec
lea
cwde
dec
lahf
xor
cwde
dec
mov
cwde
dec
mov
xchg
dec
test
cwde
dec
lahf
xor
cdq
dec
lea
cwde
push
jg
xchg
dec
push
cdq
dec
dec
xor
xchg
dec
sbb
dec
xchg
dec
pop
push
stos
push
add
jg
add
inc
add
push
add
lea
fwait
inc
adc
dec
sub
dec
xor
xchg
dec
aaa
xor
dec
ds
dec
inc
xor
dec
inc
ss
dec
inc
xor
xchg
dec
cmp
xchg
dec
aaa
xor
dec
xor
xchg
dec
sub
inc
adc
lea
stos
push
add
inc
add
inc
add
jg
add
push
add
mov
add
push
push
and
dec
pop
and
dec
pop
dec
xchg
dec
pop
aas
lahf
aas
or
lahf
aas
or
dec
pop
and
dec
pop
and
dec
pop
sub
add
aas
add
stos
push
add
jg
add
inc
add
add
add
loopne
add
add
(bad)
inc
pop
(bad)
clc
add
add
add
aas
loopne
add
add
add
loopne
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
loopne
add
add
add
lock
add
add
pop
clc
add
add
add
jg
rol
add
pop
(bad)
inc
add
add
ud0
add
add
pop
(bad)
inc
add
add
add
inc
add
add
add
cld
add
add
add
(bad)
cld
add
add
add
(bad)
clc
add
add
add
jg
add
add
add
aas
lock
add
add
aas
lock
add
add
aas
loopne
add
add
add
loopne
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
rol
add
add
xadd
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
add
aas
lock
add
add
aas
lock
add
add
aas
clc
add
add
add
jg
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
inc
pop
(bad)
inc
add
add
ud0
loopne
add
add
(bad)
push
add
add
aas
(bad)
(bad)
clc
add
add
jg
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
pop
(bad)
(bad)
(bad)
(bad)
clc
add
jg
jmp
add
add
add
add
add
add
and
add
add
and
add
jg
jg
jg
push
push
push
add
push
add
jg
add
jg
add
data16
add
add
add
push
push
push
jg
push
push
jg
push
push
jg
push
push
jg
push
push
jg
push
push
jg
push
push
jg
push
push
jg
push
cwd
add
add
add
add
jg
aas
jg
add
stos
push
add
push
add
jg
add
add
add
add
add
add
jg
dec
xchg
dec
pop
push
ja
mulps
adc
jp
sbb
push
and
and
sbb
jg
sub
and
jg
cs
sbb
pop
xor
test
push
sbb
push
sbb
push
sbb
push
sbb
sbb
pusha
sub
push
sbb
jg
sub
pop
and
pop
push
push
test
push
test
dec
jg
push
dec
ins
dec
pop
add
add
add
add
jg
dec
xchg
ins
pop
pop
jg
push
dec
jg
adc
test
push
mov
push
sbb
pop
aaa
push
jg
ds
sbb
pop
dec
push
test
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
push
sbb
test
push
jg
cs
sbb
jg
sbb
pop
adc
pop
push
dec
ins
dec
pop
jg
jg
add
add
or
push
sbb
push
sbb
sbb
sbb
sbb
pop
bound
fs
sbb
sbb
push
sbb
sbb
test
sbb
pop
jae
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
outs
push
sbb
sbb
sbb
sbb
sbb
sbb
pop
pusha
push
test
push
sbb
test
sbb
jp
sbb
or
inc
add
add
add
jg
or
pop
pop
push
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
ins
push
sbb
sbb
sbb
push
stos
push
add
add
add
or
pop
sub
pop
dec
push
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
test
dec
test
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
xchg
dec
xchg
dec
xchg
push
test
push
sbb
pop
je
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
pop
dec
push
jg
es
jg
add
add
add
jg
add
js
adc
pop
sub
inc
push
sbb
sbb
sbb
sbb
push
sbb
pop
jns
test
dec
xchg
inc
mov
cmp
xchg
push
les
xchg
push
int
xchg
push
aam
xchg
push
(bad)
xchg
push
fnsave
xchg
push
xlat
cmp
push
enter
mov
inc
mov
dec
xchg
dec
test
push
sbb
sbb
test
push
sbb
sbb
sbb
sbb
sbb
test
dec
xchg
add
add
add
add
push
add
xorpd
pop
sub
pop
xor
jg
ds
and
push
sbb
test
dec
mov
inc
lea
cmp
xchg
push
les
xchg
pop
shl
call
sub
repnz
addr16
sub
data16
sub
fs
cs
aaa
xchg
pop
retf
cmp
push
cmps
inc
mov
xchg
push
sbb
sbb
push
sbb
jg
xor
jg
sub
sbb
bound
add
add
jg
jg
push
stos
push
add
jg
add
jg
or
bound
dec
test
inc
mov
cmp
xchg
push
fwait
xor
push
leave
xor
pop
imul
lahf
imul
and
ja
and
jle
and
cmp
and
jns
and
mov
fs
cs
pop
repz
push
mov
(bad)
push
test
push
pop
dec
xchg
sbb
jg
push
dec
mov
pop
jg
or
jg
add
stos
push
add
(bad)
inc
add
add
aas
jg
add
mov
cmp
push
ins
xor
pop
fisubr
mov
je
and
jg
and
cmp
stos
test
pop
stos
test
pop
stos
test
pop
test
test
and
test
and
cmp
cmps
jge
and
jns
daa
mov
(bad)
call
xor
push
xchg
xor
nop
push
push
cmp
push
add
add
add
add
add
cdq
inc
sysenter
xchg
dec
cmp
cdq
push
jbe
call
sub
jp
and
xchg
pop
stos
mov
pop
stos
mov
pop
stos
mov
pop
stos
mov
pop
stos
xchg
pop
mov
jae
pop
test
call
stos
mov
pop
stos
mov
pop
stos
mov
pop
stos
mov
pop
stos
mov
and
cmp
movs
je
sub
pop
shr
call
aaa
xchg
dec
and
push
add
jg
add
cdq
inc
rdmsr
cwde
push
aaa
xor
pusha
enter
repz
test
xchg
and
jmp
lods
mov
and
jmp
stos
xchg
and
jmp
xchg
(bad)
jmp
je
and
mov
and
jmp
lods
mov
and
jmp
stos
test
and
jl
daa
mov
gs
fwait
pop
cmps
xor
dec
sbb
add
add
cmp
dec
cmp
fwait
push
sub
arpl
sub
jge
and
jmp
scas
mov
and
mov
and
mov
and
jl
sub
arpl
push
popf
imul
and
test
and
mov
and
mov
and
mov
and
jmp
mov
pop
cmps
xor
dec
sbb
jg
add
add
add
lea
cdq
dec
sub
cdq
push
jbe
lahf
popa
lds
movs
jb
and
scas
mov
and
mov
and
mov
and
mov
and
jl
es
imul
jns
test
xchg
mov
push
sub
mov
test
and
mov
and
mov
and
mov
and
test
daa
cmps
js
sub
pop
mov
xor
add
add
add
call
das
fwait
pop
mov
mov
cmp
scas
mov
and
mov
and
mov
and
mov
and
xchg
and
pop
jmp
jp
mov
mov
dec
call
and
mov
and
mov
and
mov
and
mov
and
xchg
sub
fidiv
cwde
push
mov
cwde
dec
cmp
lea
or
add
add
inc
add
mov
or
cdq
dec
cmp
cwde
push
cmps
sub
test
cld
es
mov
and
mov
jmp
mov
jmp
mov
jmp
scas
mov
and
jle
sub
jmp
icebp
jmp
call
jecxz
(bad)
jg
mov
xor
lahf
jno
and
test
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
cmp
movs
jno
das
call
xor
aas
add
add
add
mov
dec
daa
xor
pop
shr
cmps
jb
daa
scas
xchg
es
jmp
mov
jmp
mov
jmp
mov
jmp
test
call
jo
xchg
rcr
cld
std
cld
(bad)
std
(bad)
std
push
clc
hlt
(bad)
mov
scas
test
aaa
cdq
jmp
jno
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
stos
jge
mov
push
mov
sub
add
add
mov
dec
push
xor
ins
call
daa
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
pop
dec
jmp
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
cld
(bad)
out
hlt
out
(bad)
mov
sahf
imul
cmps
jge
es
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
test
(bad)
int3
xor
dec
and
inc
add
stos
push
add
dec
pop
xor
pop
fisubr
jl
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
popa
jmp
jbe
mov
mov
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
std
cld
(bad)
(bad)
(bad)
mov
jmp
jmp
stos
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
std
movs
ins
out
xor
dec
cmp
dec
pop
add
add
mov
dec
xor
call
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
movs
jns
xor
ins
jmp
jmp
(bad)
sti
std
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
inc
fcmovnb
(bad)
jge
mov
inc
cwde
popa
jmp
lahf
outs
jmp
lods
test
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
sub
popf
pop
into
xor
inc
sbb
push
add
aaa
fwait
dec
pop
xor
dec
pop
xor
jae
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
lods
cmp
xchg
popa
dec
push
(bad)
fsubr
fdivrp
sti
std
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
push
div
push
stos
jge
ss
pop
jmp
mov
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
pop
xor
dec
xor
jg
push
xor
dec
and
xchg
push
jnp
mov
jge
sub
mov
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
movs
ja
cmp
mov
aam
xlat
push
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
cld
(bad)
call
shl
jmp
scas
test
sub
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
test
call
xor
or
add
add
xchg
dec
sub
xchg
push
xchg
xor
xchg
sub
mov
cdq
jmp
mov
cdq
jmp
xchg
jmp
movs
js
cmp
inc
fld
push
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
std
cld
jmp
in
loop
call
jmp
popf
push
sub
cdq
jmp
mov
cdq
jmp
mov
mov
das
lods
jnp
xor
dec
pop
xor
add
xor
dec
xor
xchg
push
stos
xor
mov
cs
fwait
jmp
mov
fwait
jmp
mov
xchg
jmp
mov
sub
pop
call
fmulp
(bad)
fsub
(bad)
loope
loop
icebp
div
(bad)
std
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
sti
stc
(bad)
call
jmp
mov
test
push
mov
sub
xchg
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
xchg
jmp
scas
xor
sahf
pop
aad
xchg
dec
imul
inc
or
add
add
push
mov
xor
fwait
push
mov
pushf
push
mov
pushf
jmp
mov
jmp
jno
xor
push
jmp
jo
jno
jge
jnp
test
xchg
mov
int
stc
sti
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
inc
cmp
test
call
popa
(bad)
cmp
arpl
sub
mov
pushf
push
mov
pushf
push
mov
cdq
push
mov
sti
xor
dec
jne
pushf
dec
or
xor
push
shl
je
xor
push
mov
sahf
push
mov
sahf
push
mov
cmp
mov
addr16
cmp
inc
jmp
jo
mov
mov
idiv
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomi
(bad)
xor
addr16
cmp
push
movs
jbe
das
mov
push
mov
sahf
push
mov
sahf
push
mov
popf
push
mov
std
xor
dec
jnp
pushf
dec
or
xor
cwde
push
les
stos
jne
xor
mov
push
shl
xor
mov
push
mov
(bad)
jmp
scas
cmp
lods
jg
sub
mov
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jp
cmp
ja
sub
lods
cmp
xor
sahf
push
shl
xor
mov
push
shl
xor
pop
out
xor
xchg
dec
push
xor
mov
xor
ret
xor
ret
xor
ret
xor
ret
xor
sahf
push
mov
cwde
jmp
mov
push
movs
je
dec
fwait
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
push
mov
call
shl
xor
ret
xor
ret
xor
shl
xor
dec
ja
pushf
dec
or
aaa
xchg
dec
xor
xchg
push
mov
stos
jne
xor
ret
les
les
les
les
xor
mov
jbe
dec
fwait
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
test
xor
pushf
push
les
les
les
les
les
push
lahf
pusha
fdiv
dec
jo
stos
push
or
add
add
xchg
dec
xor
jae
ss
mov
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
lds
xor
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
xchg
xor
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
(bad)
cmps
push
lds
ss
hlt
xor
pop
int3
xor
inc
or
add
add
inc
daa
xor
test
(bad)
cli
cmp
mov
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
movs
push
xchg
push
jns
dec
pushf
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
mov
aaa
ret
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
cmps
(bad)
cmp
sub
lahf
pop
mov
xchg
dec
push
cmp
add
xor
dec
sbb
cmps
imul
mov
clc
cmp
lahf
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
cmps
push
test
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
mov
cmp
mov
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
test
(bad)
cmp
jecxz
lahf
pop
xchg
xor
dec
aas
dec
xchg
dec
pop
sub
xchg
push
inc
mov
jbe
cmp
fwait
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
test
push
stos
jp
dec
pushf
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
(bad)
cmp
mov
cmp
mov
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
cmps
(bad)
cmp
imul
aaa
xchg
dec
and
sub
push
aaa
xchg
dec
and
push
xchg
mov
stos
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
cmp
mov
jl
dec
pushf
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jp
cmp
imul
mov
(bad)
cmp
movs
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
ds
lods
(bad)
cmp
mov
clc
xor
pop
ret
push
dec
cmp
add
add
inc
ss
dec
push
xor
pop
les
mov
icebp
ds
mov
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
ds
lods
(bad)
cmp
fwait
(bad)
cmp
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jp
cmp
imul
mov
(bad)
cmp
cmps
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
aas
int
(bad)
ds
cmp
xchg
sti
cmp
cdq
xor
jg
dec
xchg
dec
pop
xor
pop
mov
stos
jb
cmp
nop
std
aas
retf
test
inc
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
aas
int
(bad)
cmp
pushf
(bad)
cmp
jmp
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jp
cmp
ins
(bad)
cmp
test
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
int
(bad)
les
hlt
cmp
dec
popa
xor
add
add
push
push
xor
pop
sar
jp
ds
pushf
inc
lods
inc
mov
inc
shl
inc
mov
inc
shl
(bad)
cmp
sahf
(bad)
cmp
jmp
push
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jnp
cmp
mov
test
inc
mov
inc
shl
inc
mov
inc
shl
(bad)
cmp
(bad)
cli
aaa
movs
jcxz
call
xor
or
inc
add
cdq
add
dec
sub
push
test
test
mov
inc
leave
cmps
inc
mov
inc
shl
inc
mov
inc
shl
cmp
lahf
(bad)
cmp
jmp
push
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
jmp
jnp
cmp
mov
stos
inc
mov
inc
shl
inc
shl
inc
into
scas
(bad)
aas
ret
cmp
pop
scas
xor
adc
jg
add
add
cmp
dec
adc
cwde
push
inc
cmp
loope
rcl
inc
shl
inc
inc
inc
(bad)
aas
enter
mov
inc
pusha
inc
fmul
dec
loope
dec
loope
dec
loope
dec
loope
dec
loope
jmp
lahf
push
cmp
cwde
inc
scas
inc
inc
inc
inc
inc
inc
mov
lock
pop
push
xor
add
aas
jg
add
xchg
push
push
ss
pop
push
aaa
cmps
data16
cmp
xchg
cld
inc
into
lods
inc
mov
inc
aam
inc
mov
inc
aam
inc
(bad)
cmp
xchg
jmp
nop
push
(bad)
mov
cdq
pusha
call
arpl
push
call
push
call
dec
xchg
pop
push
mov
xor
jb
inc
int3
stos
inc
mov
inc
aad
inc
mov
inc
aam
inc
inc
movs
std
cmp
lods
jae
aaa
lahf
pop
jge
xchg
push
das
cmp
add
aas
jg
add
xchg
dec
and
mov
push
cmp
jg
aas
rcl
inc
shl
inc
mov
inc
test
xor
mov
imul
mov
imul
mov
imul
mov
imul
movs
jo
cmp
mov
inc
(bad)
mov
inc
mov
inc
iret
lods
inc
popf
(bad)
ds
jb
cmp
push
cmp
xchg
dec
push
aas
jg
add
sahf
dec
sbb
cmp
fstp
mov
sahf
std
inc
shr
inc
mov
inc
mov
inc
int
inc
test
inc
retf
inc
retf
inc
retf
inc
retf
inc
retf
inc
retf
stos
inc
inc
mov
inc
xlat
mov
inc
mov
inc
retf
cmps
inc
xchg
sti
cmp
test
pop
jg
call
add
add
add
add
stos
push
push
cmp
pop
dec
aaa
sahf
pop
mov
mov
jbe
inc
rcl
dec
aad
dec
mov
dec
mov
inc
mov
inc
(bad)
mov
inc
mov
inc
(bad)
mov
inc
(bad)
mov
dec
xlat
mov
dec
mov
inc
shl
cld
ds
imul
xor
call
add
add
add
add
push
add
xchg
push
push
xor
dec
jno
mov
jb
cmp
mov
call
shr
dec
mov
dec
fdivr
dec
mov
inc
mov
inc
into
stos
inc
inc
xchg
(bad)
ds
jns
cmp
push
mov
xchg
dec
push
xor
cdq
dec
or
add
add
jg
cmp
inc
sbb
call
aaa
movs
arpl
cmp
jbe
aas
mov
xchg
lock
ret
cwde
hlt
inc
lds
cld
inc
leave
mov
stc
inc
ret
cdq
test
repnz
mov
jg
cmp
pop
ret
xor
push
fwait
xor
xchg
dec
sub
xchg
dec
push
xor
add
add
add
aas
jg
add
fwait
inc
adc
xchg
dec
xor
push
pop
cmp
bound
cmp
fnstcw
cmps
gs
movs
gs
cmp
arpl
cmp
mov
mov
pop
ins
xor
dec
xor
xchg
dec
sbb
test
add
add
add
dec
pop
xor
xchg
dec
xor
xchg
dec
pop
xor
jno
xchg
dec
jp
xchg
dec
jge
xchg
dec
jne
xchg
dec
ins
xor
dec
push
xor
xchg
dec
and
xchg
dec
push
push
stos
push
add
add
add
add
add
push
add
cdq
add
aas
or
cdq
dec
or
xchg
aas
or
mov
ss
dec
push
ss
dec
push
cmp
or
mov
xor
dec
pop
aas
jg
add
jg
add
add
add
add
add
call
inc
add
add
pop
push
loopne
add
add
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
lock
add
pop
pop
push
inc
add
add
pop
push
inc
add
add
pop
push
cld
add
add
call
clc
add
add
jg
push
clc
add
add
aas
pop
push
lock
add
pop
pop
push
loopne
add
add
pop
push
loopne
add
add
pop
push
rol
add
cvtps2pd
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
pop
pop
push
rol
add
cvtps2pd
loopne
add
add
pop
push
loopne
add
add
pop
push
loopne
add
add
pop
push
lock
add
aas
pop
push
clc
add
add
aas
pop
push
cld
add
add
call
inc
add
add
pop
push
inc
add
add
pop
push
inc
pop
push
inc
add
pop
call
jmp
add
pop
call
(bad)
cld
add
jg
pop
push
(bad)
inc
add
call
sub
add
and
add
inc
add
add
add
add
add
add
add
add
or
pop
and
pop
cs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
and
dec
jg
adc
add
add
ins
pop
push
sbb
pop
pop
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jg
adc
add
add
inc
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
jg
add
and
push
sbb
push
sbb
sbb
sbb
sbb
mov
cmp
dec
jecxz
xchg
dec
repnz
dec
push
dec
repnz
xchg
dec
jecxz
xchg
dec
iret
inc
mov
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jg
adc
add
add
add
bound
push
jg
cs
xchg
cmp
dec
stc
sub
mov
jp
and
xchg
and
jp
mov
pop
push
xchg
dec
sti
cmp
pop
push
push
jg
cs
jg
and
push
or
add
add
xchg
dec
push
xor
dec
lock
test
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
pop
stos
xchg
sub
dec
repz
add
pop
jmp
lods
mov
and
jmp
lods
mov
and
call
mov
and
jmp
lods
mov
and
jmp
lods
mov
and
popf
pop
push
add
xor
jmp
lods
xchg
and
mov
and
mov
and
mov
and
inc
jmp
jno
and
inc
jmp
scas
mov
and
mov
and
mov
and
xchg
sub
push
xchg
dec
add
add
add
xchg
dec
push
cs
pusha
jmp
mov
and
mov
and
mov
and
push
call
pusha
(bad)
(bad)
(bad)
(bad)
call
pusha
call
scas
mov
and
mov
and
mov
and
xchg
cs
pusha
push
xchg
dec
push
cmp
dec
in
sub
mov
and
mov
jmp
mov
jmp
test
jmp
jns
push
div
(bad)
(bad)
(bad)
(bad)
push
div
jmp
jp
jmp
cmps
jle
and
mov
jmp
mov
jmp
mov
jmp
stos
jge
xor
adc
add
add
xchg
dec
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
ja
jmp
in
loop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
loop
and
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xchg
dec
mov
add
add
xchg
push
or
xchg
dec
imul
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xchg
jge
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
cmp
xchg
sub
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
xchg
dec
imul
xchg
push
or
add
add
xchg
dec
pop
xor
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
cwde
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
arpl
and
xchg
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
dec
pop
xor
dec
movs
das
lods
jge
sub
cwde
jmp
cwde
jmp
cwde
jmp
cwde
jmp
cwde
jmp
scas
xchg
sub
push
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
stc
idiv
sub
jmp
scas
xchg
sub
cwde
jmp
cwde
jmp
cwde
jmp
cwde
jmp
cwde
jmp
lods
jge
xor
dec
movs
xor
jmp
mov
call
mov
call
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
jmp
mov
call
mov
call
xchg
dec
aad
add
add
dec
lock
push
mov
popf
push
mov
push
inc
dec
pop
dec
pop
(bad)
jp
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
jg
dec
xchg
pop
dec
pop
inc
jmp
mov
xor
popf
push
mov
popf
push
mov
dec
repz
add
xor
dec
push
shl
xor
mov
push
shl
sub
ja
sub
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
cmps
ja
sub
jl
xor
mov
push
shl
xor
mov
push
dec
inc
add
add
dec
lock
ret
mov
push
ret
mov
push
ret
mov
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
jle
xor
ret
mov
push
ret
mov
push
rcr
xor
push
lds
push
lds
push
lds
push
lds
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
lds
push
lds
push
lds
push
lds
push
xchg
dec
aad
add
add
dec
movs
aaa
mov
(bad)
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
das
scas
cmp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
scas
cmp
enter
enter
enter
enter
enter
enter
enter
mov
push
dec
movs
xor
dec
push
aaa
test
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
push
mov
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
mov
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
(bad)
cmp
stos
push
test
push
xchg
dec
pop
cmp
dec
idiv
int3
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
push
mov
inc
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
push
mov
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
ds
scas
(bad)
cmp
xchg
dec
idiv
lea
add
add
jl
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
xor
mov
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
push
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
inc
iret
mov
cmp
dec
xchg
add
add
fwait
inc
adc
xchg
dec
in
rcl
inc
shl
inc
mov
inc
shl
inc
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
push
shl
inc
mov
inc
shl
(bad)
ds
xor
adc
add
add
test
stos
inc
inc
inc
inc
push
mov
inc
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
push
mov
inc
inc
inc
inc
inc
stos
(bad)
cmp
dec
push
xor
dec
jle
mov
inc
inc
mov
inc
mov
call
outs
and
and
jmp
ja
jmp
ja
jmp
ja
jmp
ja
call
outs
and
inc
aad
inc
mov
inc
mov
(bad)
cmp
dec
jle
add
add
jo
inc
(bad)
popf
inc
mov
inc
mov
inc
stos
inc
stos
inc
stos
inc
stos
inc
stos
inc
mov
inc
mov
inc
popf
(bad)
cmp
dec
add
add
add
xchg
dec
push
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
dec
lock
add
cdq
inc
sysenter
xchg
dec
lea
xchg
dec
idiv
lods
jo
inc
ret
inc
int3
cmps
dec
mov
dec
fidivr
inc
cmps
inc
xchg
(bad)
cmp
div
dec
lea
cdq
inc
sldt
add
sub
push
xor
dec
movs
xor
dec
int3
xor
dec
loope
xchg
dec
push
dec
loope
xchg
dec
int3
xor
dec
movs
xor
xchg
push
or
add
add
(bad)
(bad)
(bad)
clc
add
aas
rol
pop
rol
pop
rol
pop
clc
add
aas
inc
add
cld
add
jg
add
aas
lock
pop
loopne
add
loopne
add
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
loopne
add
loopne
add
lock
pop
clc
add
aas
cld
add
jg
add
(bad)
inc
add
inc
pop
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
push
jg
push
dec
jne
or
push
jg
sbb
bound
push
jg
sbb
xchg
push
xchg
push
xchg
push
jg
push
push
test
push
test
push
jg
push
dec
jg
adc
or
push
add
add
add
push
add
bound
push
sbb
test
push
sbb
push
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
pop
push
push
sbb
sbb
pop
es
jg
or
add
add
add
add
add
add
pop
pop
push
test
push
sbb
push
sbb
sbb
sbb
test
dec
xchg
dec
xchg
dec
xchg
dec
test
push
sbb
sbb
pop
jae
sbb
sbb
sbb
push
test
jg
jg
dec
ins
dec
pop
push
xchg
push
jg
inc
push
sbb
sbb
test
dec
mov
cmp
xchg
pop
shl
cwde
pop
loope
call
xor
pop
mov
dec
mov
push
sbb
sbb
pop
dec
push
and
add
add
add
inc
push
stos
stos
add
push
(bad)
mov
xchg
push
movs
sub
mov
jnp
and
cmp
test
jge
mov
push
mov
push
test
dec
ins
dec
pop
jg
jg
add
add
xor
push
inc
sub
jb
and
mov
and
jmp
cmps
jg
and
jmp
stos
xchg
and
lahf
shr
fwait
push
popa
mov
push
stos
push
add
xchg
push
cmp
gs
and
mov
and
xchg
sub
push
addr16
(bad)
cmp
cmp
and
mov
and
cmp
mov
push
pop
and
dec
pop
add
add
das
xchg
dec
sbb
fwait
pop
cmps
daa
test
mov
and
(bad)
jmp
(bad)
jmp
mov
and
je
push
out
dec
call
and
(bad)
jmp
(bad)
jmp
mov
es
cmp
lahf
arpl
xor
(bad)
inc
aas
mov
push
data16
jo
daa
mov
jmp
mov
jmp
mov
jmp
mov
jmp
test
jb
shl
aad
(bad)
(bad)
(bad)
jmp
lock
jmp
mov
mov
es
jmp
mov
jmp
mov
jmp
test
pop
mov
sldt
add
mov
pop
mov
mov
std
sub
xchg
jmp
mov
jmp
scas
mov
cmp
imul
retf
cli
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fmul
dec
outs
jmp
stos
cmp
sub
xchg
jmp
mov
jmp
mov
dec
xor
inc
add
add
add
add
add
cwde
dec
inc
das
cmps
outs
fld
xchg
jmp
mov
xchg
jmp
mov
jmp
lahf
outs
dec
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cld
sti
jmp
pushf
imul
sub
xchg
jmp
mov
jns
xor
aas
add
add
add
add
add
xchg
push
addr16
lods
jge
cs
call
test
jp
shl
aad
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
cli
idiv
loopne
loope
test
jo
sub
mov
call
pushf
pop
cwde
and
dec
pop
xor
test
xor
popf
push
mov
jo
inc
fwait
call
jbe
pushf
ret
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
test
dec
imul
fwait
jmp
mov
push
mov
popf
push
mov
(bad)
xor
pop
mov
jg
or
add
add
add
add
cdq
push
jnp
mov
std
xor
mov
push
mov
push
mov
push
test
push
xchg
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
xor
mov
push
mov
(bad)
xor
aas
or
add
add
add
add
cwde
dec
ins
ss
hlt
aaa
les
push
lds
push
les
jbe
xchg
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmps
ja
ss
aaa
lds
push
lds
push
mov
pop
lahf
and
dec
pop
xor
push
dec
ss
loope
(bad)
movs
(bad)
cmp
test
cmp
test
cmp
test
cmp
cmps
push
xchg
jbe
xchg
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
mov
(bad)
cmp
test
cmp
test
cmp
cmps
push
mov
repnz
pop
jns
cdq
add
add
add
add
xor
sar
mov
(bad)
cmp
retf
lods
(bad)
cmp
mov
push
mov
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
jnp
cmp
cmps
(bad)
cmp
retf
lods
(bad)
cmp
leave
test
aaa
lods
je
ss
sub
push
ss
pop
jp
mov
lods
inc
mov
inc
into
mov
inc
int
(bad)
cmp
mov
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
jge
aas
retf
stos
inc
mov
inc
into
mov
inc
into
scas
(bad)
cmp
xchg
sti
aaa
mov
dec
adc
add
add
fwait
push
sub
cmps
imul
inc
shl
(bad)
cmp
mov
stc
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
scas
jg
inc
into
scas
inc
mov
inc
shl
(bad)
cmp
push
inc
push
stos
push
add
add
add
stos
push
push
mov
jle
inc
retf
inc
shl
(bad)
rcr
(bad)
mov
call
mov
mov
inc
shl
inc
into
scas
(bad)
ds
fs
xchg
dec
push
xor
pop
pop
cmp
jg
inc
(bad)
lahf
sti
inc
aam
inc
mov
cmp
xchg
(bad)
cmp
mov
cmp
mov
inc
iret
scas
inc
mov
inc
retf
cmp
cmps
push
adc
xor
pop
dec
aaa
cmps
addr16
mov
movs
inc
mov
dec
aad
dec
mov
inc
mov
inc
int
inc
xchg
cmc
cmp
pop
xor
add
push
stos
push
add
cdq
dec
push
xor
cmps
addr16
jnp
ds
in
mov
sub
cmp
push
jbe
xchg
dec
sub
add
add
add
xchg
dec
adc
ss
dec
cmp
xor
dec
xor
xor
add
loopne
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
xorpd
pop
sub
pop
xor
ss
sbb
pop
cmp
pop
xor
pop
das
push
jg
es
test
pop
mov
jg
add
add
add
jg
add
test
push
sbb
sbb
push
sbb
pop
jle
mov
dec
xchg
push
test
push
sbb
pop
ins
push
sbb
push
jg
sbb
add
add
inc
add
pop
push
pop
test
push
test
inc
lea
aaa
xchg
pop
shr
fisubr
lahf
push
sub
arpl
cmp
pop
test
push
sbb
pop
sub
push
or
add
add
pop
adc
fwait
pop
jge
mov
cmp
stos
test
and
jmp
stos
test
and
lahf
addr16
jg
jg
cmp
bound
test
mov
and
jp
ins
mov
inc
jmp
lods
xchg
and
test
sub
push
add
add
xor
jbe
es
jmp
mov
jmp
lods
test
fs
jmp
out
in
scas
sar
jmp
mov
jmp
mov
jmp
scas
test
sub
xchg
push
or
add
add
lahf
aas
or
mov
mov
sub
(bad)
dec
jl
retf
loope
(bad)
(bad)
(bad)
(bad)
push
clc
hlt
inc
stos
cmp
sub
js
xor
add
sub
dec
pop
xor
xchg
jmp
test
test
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
call
out
call
cmp
mov
jmp
mov
div
pushf
pop
add
add
xor
jns
xor
fwait
push
test
push
(bad)
(bad)
in
hlt
out
push
mov
inc
movs
jbe
xor
push
mov
pop
jnp
add
add
call
ss
mov
push
mov
call
(bad)
(bad)
(bad)
call
scas
cmp
mov
movs
push
les
xor
pop
je
add
add
(bad)
aas
adc
stos
jne
cmp
mov
(bad)
cmp
stos
(bad)
cmp
scas
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
cmp
movs
(bad)
cmp
stos
(bad)
cmp
test
out
aaa
mov
add
add
add
rcl
aas
into
scas
(bad)
cmp
xchg
jmp
(bad)
(bad)
(bad)
call
mov
(bad)
ds
stos
(bad)
aas
into
scas
(bad)
ds
cmp
push
sbb
add
add
add
add
call
inc
int3
test
(bad)
rcr
in
in
iret
loop
call
test
inc
iret
mov
inc
shl
in
aaa
mov
push
add
inc
add
cmps
gs
cmp
retf
cmps
cld
inc
into
lods
inc
xchg
dec
mov
dec
inc
xchg
inc
mov
inc
ret
cdq
in
cmp
pop
push
add
add
mov
jb
inc
rcl
inc
into
test
cli
inc
(bad)
pushf
out
ds
les
movs
fs
mov
add
sub
xor
mov
data16
cmps
data16
movs
popa
dec
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
es
(bad)
add
add
inc
popa
imul
sub
outs
arpl
popa
jb
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
add
push
gs
outs
arpl
popa
fs
je
popa
outs
jae
gs
stos
outs
arpl
cmp
xor
dec
inc
das
jae
addr16
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
pop
add
add
add
push
outs
ins
je
jb
popa
and
je
jb
or
and
and
xor
dec
inc
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
adc
add
or
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
inc
push
inc
inc
push
aad
push
and
adc
movs
mov
test
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
jb
imul
add
arpl
popa
add
add
outs
add
outs
add
add
arpl
add
jae
imul
add
add
add
add
ins
add
add
dec
add
arpl
popa
add
add
outs
add
dec
add
dec
add
je
ja
outs
add
imul
add
push
add
ins
add
jbe
popa
add
ins
add
inc
add
imul
jae
dec
add
je
inc
add
add
ja
add
add
add
add
add
jae
add
outs
add
add
push
add
ins
add
add
outs
add
add
jb
push
add
je
push
add
dec
add
jbe
popa
add
add
add
ins
add
add
dec
add
ins
add
push
add
add
add
ins
add
add
inc
add
add
dec
add
je
inc
add
imul
push
add
add
jae
add
add
add
je
push
add
ins
add
add
outs
add
add
jb
dec
add
arpl
popa
add
add
outs
add
add
add
gs
popa
ins
and
mov
gs
ret
lods
jbe
ins
and
jb
popaw
jbe
jb
and
jb
imul
jae
popa
and
outs
gs
mov
and
fs
ins
outs
arpl
imul
gs
fs
jae
jo
jae
popa
jae
outs
popa
and
fs
and
arpl
and
ins
outs
jbe
lods
jbe
imul
and
mov
jb
imul
xor
outs
jb
popaw
jbe
jb
gs
outs
ins
push
popa
and
popa
ins
imul
outs
and
jo
jae
popa
and
mov
add
push
outs
jb
popaw
jbe
jb
imul
jne
and
ins
imul
jb
and
jo
jae
popa
and
mov
add
outs
ins
and
jo
jae
popa
and
jbe
mov
and
jb
popaw
jbe
jb
and
jo
arpl
imul
and
ins
and
jo
jae
popa
and
mov
add
popa
jae
popa
and
mov
imul
and
jb
popaw
jbe
jb
and
ins
arpl
outs
and
and
popa
ins
and
jo
jae
popa
and
mov
cs
adc
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
jp
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
arpl
jb
je
ins
gs
and
jae
gs
cs
imul
inc
outs
jb
jae
and
jb
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
inc
push
inc
leave
sar
test
xor
xchg
sub
sar
mov
jmp
aam
lahf
xor
dec
icebp
and
sbb
jmp
cld
push
out
or
xchg
dec
daa
dec
daa
jmp
cmp
cld
and
push
(bad)
jns
fs
mov
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
push
add
cs
add
imul
add
ins
add
add
outs
add
add
add
add
add
popa
add
add
outs
add
add
add
bound
je
outs
add
add
push
add
popa
add
add
jo
jo
outs
add
je
add
add
je
pushf
add
add
ins
add
ins
add
add
imul
jb
popa
add
add
outs
add
outs
add
outs
add
ins
add
je
imul
add
add
je
scas
add
add
ins
add
ins
add
add
imul
jb
popa
add
add
outs
add
outs
add
outs
add
ins
add
je
imul
add
imul
int
add
xor
je
outs
add
jns
jae
je
add
dec
add
data16
jb
ins
add
je
imul
add
imul
jno
add
xor
je
outs
add
jns
jae
je
add
dec
add
data16
jb
ins
add
je
imul
add
add
je
adc
jo
outs
add
add
outs
add
add
ins
add
jb
add
add
outs
add
push
add
add
add
and
je
push
add
add
ins
add
add
je
push
add
jp
gs
add
add
add
ins
add
jne
bound
dec
add
popa
add
add
add
add
js
je
jg
add
and
add
ins
add
jne
bound
dec
add
popa
add
add
add
add
jp
add
jo
outs
add
add
outs
add
add
ins
add
jb
add
add
imul
pop
add
add
ins
add
ins
add
popa
add
outs
add
outs
add
add
outs
add
push
add
add
add
ins
add
ins
add
jo
add
je
add
jbe
popa
add
ins
add
bound
ins
add
add
imul
lods
add
add
ins
add
jo
add
je
add
jbe
popa
add
ins
add
bound
ins
add
add
add
je
push
push
add
push
ins
add
ins
add
popa
add
outs
add
outs
add
add
imul
mov
add
push
ins
add
ins
add
popa
add
outs
add
outs
add
add
add
je
sub
bound
je
outs
add
imul
add
add
popa
add
add
outs
add
add
and
add
add
bound
push
add
je
ins
add
add
add
je
dec
add
and
add
add
bound
push
add
je
ins
add
add
imul
xor
add
es
add
imul
add
ins
add
add
outs
add
add
add
add
add
je
fmul
add
es
add
imul
add
ins
add
add
outs
add
add
add
add
imul
icebp
or
add
add
add
push
add
add
jae
je
jb
popa
add
add
outs
add
outs
add
outs
add
ins
add
je
imul
add
imul
xchg
or
add
jo
outs
add
add
ins
add
popa
add
add
jb
add
add
imul
cmp
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
push
jne
outs
jb
and
arpl
arpl
sbb
jb
popa
ret
cmps
ret
mov
jae
jo
jb
and
jb
imul
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
push
imul
fs
outs
jb
popa
ret
cmps
ret
mov
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
imul
inc
outs
jb
jae
and
jb
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
and
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
arpl
jb
je
ins
gs
add
add
jbe
ins
jne
pop
pop
add
add
add
sldt
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
inc
outs
jo
jb
addr16
sub
inc
gs
push
push
and
outs
jae
outs
jae
imul
and
jae
jb
popa
outs
jae
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
imul
inc
outs
jb
jae
and
jb
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
and
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
arpl
jb
je
ins
gs
add
add
jbe
ins
jne
pop
pop
add
add
add
sldt
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
add
push
popa
jb
and
and
gs
outs
and
mov
ins
je
ins
popa
jae
data16
arpl
outs
popa
ins
imul
jo
jb
popaw
jbe
jb
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
jae
cmp
inc
jae
and
outs
addr16
ins
popa
and
arpl
jo
je
outs
jb
ret
test
je
imul
and
imul
popa
jne
outs
jb
and
je
outs
jae
imul
arpl
outs
popa
imul
jb
jo
outs
fs
cmps
ret
mov
mov
je
jb
jp
fs
and
je
imul
mov
jae
and
outs
addr16
ins
popa
sub
outs
jne
jno
popa
ins
jno
gs
jo
jb
and
gs
jo
fs
jae
ins
je
jb
gs
and
jbe
jb
jae
jo
outs
popa
ins
imul
imul
arpl
ins
imul
and
jb
mov
imul
popa
and
mov
and
je
outs
jae
mov
jae
ret
lods
jbe
ins
and
and
jb
outs
and
ins
imul
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
add
add
jb
outs
jae
outs
jb
and
jae
jne
push
inc
and
ins
and
jae
gs
popa
and
push
imul
ins
ret
mov
cs
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
add
push
jb
arpl
and
jne
ins
imul
gs
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
inc
cwde
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
addr16
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
(bad)
pop
push
xchg
sbb
movs
mov
dec
xchg
mov
or
mov
and
mov
shl
mov
scas
jo
loopne
aaa
dec
call
ss
cld
or
push
pop
adc
jne
add
add
sub
add
add
add
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
loope
add
sub
bound
js
push
add
outs
add
add
je
dec
add
outs
add
add
ins
add
add
add
add
adc
add
add
jae
add
add
je
adc
add
add
js
inc
add
jb
add
add
ins
add
add
pop
add
add
bound
je
outs
add
ins
add
jae
add
add
add
je
adc
add
xor
add
ins
add
add
outs
add
add
add
ins
add
je
popa
add
add
outs
add
add
add
je
sbb
bound
ins
add
add
outs
add
add
add
ins
add
je
popa
add
add
outs
add
add
imul
push
mov
add
ins
add
ins
add
jb
add
push
add
arpl
push
add
popa
add
add
jo
jo
outs
add
je
add
add
je
test
inc
add
add
push
add
arpl
push
add
popa
add
add
jo
jo
outs
add
je
add
imul
and
add
es
add
ins
add
jb
add
push
add
add
je
add
add
imul
enter
es
add
ins
add
jb
add
push
add
add
je
add
add
add
je
ins
mov
add
ins
add
ins
add
add
outs
add
add
add
imul
add
jae
add
imul
cmps
mov
add
ins
add
ins
add
add
outs
add
add
add
imul
add
jae
add
add
je
dec
pop
add
ins
add
ins
add
jne
jb
arpl
push
add
inc
add
outs
add
data16
je
jae
add
add
je
jne
add
xor
add
add
jb
arpl
push
add
inc
add
outs
add
data16
je
jae
add
imul
cmps
pop
add
add
add
jne
jns
dec
add
ja
add
add
popa
add
add
outs
add
add
sub
add
add
ins
add
jbe
add
ins
add
add
add
add
add
je
out
add
sub
add
add
ins
add
jbe
add
ins
add
add
add
add
imul
or
bound
je
outs
add
jne
jns
dec
add
ja
add
imul
mov
add
sbb
add
add
jne
jns
dec
add
ja
add
add
je
push
xchg
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ins
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
dec
inc
inc
push
cmp
xchg
(bad)
ja
(bad)
(bad)
sub
es
js
jg
xor
and
mov
test
mov
lea
pushf
fidivr
lods
jae
xchg
sub
cmp
jnp
mov
das
daa
dec
xor
mov
out
movs
es
xor
add
clc
sti
movs
(bad)
or
jle
or
cmp
idiv
jo
das
inc
stc
scas
xchg
pop
test
xchg
jnp
aaa
pop
xchg
(bad)
dec
test
pop
cs
xchg
dec
test
rol
je
xchg
shr
and
xchg
ret
icebp
movhlps
push
loope
push
xor
mov
mov
and
jecxz
iret
(bad)
stos
or
push
pop
test
test
pop
into
rcl
xor
xor
lods
(bad)
jmp
sub
rcl
xchg
out
(bad)
fdecstp
jle
fwait
popa
sbb
mov
xchg
stc
and
pushf
mov
hlt
icebp
cli
xchg
cmp
xor
out
add
pop
test
mov
test
dec
xchg
sbb
sub
dec
hlt
jbe
mov
dec
enter
xor
xchg
sub
xor
cmp
jns
ret
mov
test
fisttp
adc
sbb
stc
into
xchg
mov
scas
sub
cmp
loope
push
pop
xchg
rcl
mov
push
(bad)
hlt
icebp
jge
mov
jns
call
ror
pop
cld
and
test
add
jl
dec
adc
xchg
and
pmulhuw
test
clc
aad
mov
cwde
pop
cmc
and
lods
xchg
iret
cdq
jbe
(bad)
adc
cdq
xor
lods
addr16
enter
pop
pop
xlat
cmp
pop
out
sbb
cmp
loope
inc
in
aam
je
jnp
mov
out
pop
or
add
les
push
pop
jnp
inc
mov
sub
mov
sar
pop
aad
shr
popa
lds
cmp
xchg
cmp
jae
out
jo
mov
lahf
xor
sbb
adc
jge
lahf
popf
sbb
ss
repnz
pop
pop
retf
dec
shr
pop
test
shl
adc
sbb
adc
add
ja
jecxz
xor
mov
scas
jne
repz
dec
mov
gs
(bad)
jmp
dec
(bad)
lahf
jne
in
pop
pop
lahf
ja
pop
mov
pop
and
call
push
xchg
dec
pop
imul
(bad)
jne
push
and
in
lods
xchg
dec
push
or
adc
jmp
mov
jmp
pop
pop
pop
scas
es
xchg
ja
(bad)
xchg
inc
loopne
cs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
or
jb
jb
inc
outs
jb
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
xchg
add
mov
inc
or
add
or
add
add
add
xor
push
add
add
sti
fisub
addr16
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
xchg
dec
inc
inc
push
js
in
popf
add
call
ins
in
les
cmp
cmp
mov
adc
movs
or
rol
inc
push
nop
nop
inc
mov
jg
out
pop
push
mov
out
sti
std
lahf
fistp
jbe
jbe
data16
mov
adc
cli
cmps
outs
cli
cmps
outs
cli
cmps
outs
sub
xchg
fcomip
dec
fcomip
dec
fcomip
dec
fcomip
dec
call
stos
in
jge
aaa
jge
aaa
jge
aaa
jge
call
push
dec
fcomip
dec
fcomip
dec
fcomip
dec
fcomip
jg
movs
pop
jle
aaa
jge
call
lods
lods
sub
cmp
sti
mov
mov
aaa
jge
call
sbb
jb
aas
aas
mov
xchg
push
dec
fcomip
dec
dec
(bad)
les
xchg
xchg
outs
sub
and
mov
(bad)
sar
xchg
das
call
jne
in
pop
leave
xlat
xlat
mov
lods
and
(bad)
mov
mov
mov
inc
mov
jmp
dec
lahf
ds
xor
fnsave
stos
xchg
jno
(bad)
jecxz
push
fcomp
lods
add
or
ret
les
out
and
and
cmp
xor
inc
pop
(bad)
xchg
sub
cmp
dec
or
(bad)
xchg
inc
arpl
aam
xor
movs
adc
sbb
push
sub
and
mov
mov
dec
movs
sbb
pop
pop
mov
dec
sub
jb
mov
push
outs
aam
adc
pop
stos
mov
xchg
xchg
repz
inc
loope
inc
stos
pop
adc
mov
(bad)
dec
dec
xlat
outs
cli
cmps
scas
inc
in
(bad)
inc
xchg
push
lea
shr
cmps
cmps
neg
xchg
xor
ret
aad
aad
xchg
and
push
fimul
clc
clc
clc
and
int
adc
mov
(bad)
cmovs
int3
xchg
nop
fadd
loopne
adc
addr16
fmul
push
sti
aad
movs
fidivr
add
test
retf
xchg
cmp
shl
pop
dec
dec
dec
xchg
scas
(bad)
(bad)
adc
adc
dec
enter
lahf
fisub
sub
push
rcr
mov
push
push
sbb
sub
in
cs
mov
push
ins
stc
add
mov
pop
dec
dec
dec
sub
jmp
scas
stc
add
dec
xchg
push
mov
mov
cmp
cld
inc
dec
or
leave
mov
mov
aam
arpl
mov
xchg
imul
fist
nop
or
jb
cli
cmc
(bad)
mov
arpl
sub
sar
or
and
xor
mov
xchg
rcr
dec
jmp
and
and
loopne
repnz
sti
sub
mov
jl
ds
xchg
nop
sub
ficom
lahf
scas
out
pop
jle
mov
aas
dec
pop
js
mov
in
push
loopne
jmp
jl
push
jmp
loope
pushf
xchg
(bad)
pop
xchg
(bad)
pop
adc
pop
xor
and
leave
push
cmps
jp
mov
jl
mov
inc
jmp
jecxz
jns
lahf
gs
pop
pop
sub
mov
jl
(bad)
ja
adc
aas
nop
call
adc
sub
pop
scas
retf
movs
cmp
jle
scas
movs
sub
test
or
add
xor
push
or
(bad)
push
in
xor
dec
mov
inc
adc
and
jmp
(bad)
(bad)
pop
pop
xchg
pusha
bound
inc
push
loop
add
xor
sbb
ja
popa
int3
mov
inc
icebp
pusha
dec
jp
jl
sbb
scas
pop
mov
push
push
or
or
dec
mov
push
sbb
push
xor
adc
cmps
imul
sub
lods
xor
and
sub
movs
rcl
add
pop
sub
imul
and
xchg
movs
and
inc
mov
movs
xchg
movs
push
xchg
xchg
mov
fcomi
icebp
xchg
movs
adc
daa
into
mov
(bad)
jle
aam
xor
pop
sar
cs
call
shr
inc
call
es
es
xor
nop
(bad)
push
imul
mov
xor
adc
dec
js
jge
lea
xchg
(bad)
jecxz
push
sub
loope
test
add
gs
mov
xchg
push
adc
mov
mov
adc
arpl
not
mov
ret
call
je
fcmovu
fadd
vpmulhw
push
push
push
mov
push
pop
pop
pop
mov
inc
adc
aaa
in
movs
retf
dec
or
or
adc
inc
pop
sub
retf
dec
outs
cs
jb
inc
out
xor
mov
xchg
sahf
and
daa
or
idiv
test
cdq
xchg
adc
les
dec
dec
movs
fisttp
icebp
bound
cmps
and
cld
dec
dec
dec
inc
jl
adc
adc
sbb
(bad)
cwde
adc
sti
mov
or
or
mov
push
push
daa
cli
sub
movs
fisttp
mov
xor
rcl
sbb
sbb
(bad)
push
inc
icebp
test
(bad)
loopne
cmp
adc
cmp
or
(bad)
pop
shl
lods
pop
outs
call
in
adc
stos
lahf
push
shl
jbe
std
jg
jae
push
push
and
pop
scas
retf
movs
es
sahf
les
in
and
pop
icebp
enter
out
and
push
xchg
(bad)
ret
jne
rcr
lods
test
jno
stos
xchg
(bad)
(bad)
push
les
inc
xchg
sub
or
or
add
push
jecxz
jno
jno
sahf
mov
cs
fptan
sub
push
push
push
push
outs
inc
lods
icebp
adc
adc
fisttp
in
push
mov
arpl
sbb
outs
xor
cmp
xchg
stos
inc
cdq
push
ja
shl
in
fldcw
std
shr
test
mov
pop
inc
out
sub
std
cmp
push
fidivr
movs
test
test
test
cld
or
mov
lods
(bad)
icebp
stc
sub
neg
scas
loop
arpl
fidivr
retf
inc
jns
jge
out
daa
sbb
pop
movs
xchg
fs
in
jb
jp
fwait
in
stc
cmp
out
stc
in
iret
push
push
sub
xor
repnz
mov
test
in
ss
sub
es
test
into
add
xlat
pop
inc
std
aad
push
xlat
push
jg
push
aam
jno
cmc
xchg
jmp
(bad)
push
cmp
rol
test
sbb
xlat
inc
fstp
push
imul
mov
loopne
xor
scas
scas
fiadd
stos
sub
inc
xchg
xchg
xchg
xor
mov
pop
push
lea
xor
pop
pop
pop
out
adc
shl
icebp
add
out
cs
stos
push
loope
out
bound
js
mov
jl
xor
js
push
push
fs
callw
adc
sub
adc
or
dec
mov
adc
test
and
cmp
add
icebp
or
repnz
and
add
scas
push
pusha
adc
mov
es
adc
sbb
outs
js
and
ret
enter
jb
sub
pop
sbb
push
push
dec
mov
(bad)
mov
ja
mov
pushf
sub
mov
nop
popf
in
or
xchg
imul
mov
jecxz
cmp
dec
push
outs
mov
sub
push
add
mov
jno
mov
into
stc
xor
sahf
cdq
pop
push
lods
mov
lock
cwde
dec
sbb
cld
jnp
daa
imul
out
adc
dec
xor
out
shr
jb
iret
pop
loope
fsubr
xor
out
adc
mov
sbb
iret
fist
outs
(bad)
sub
xchg
xor
retf
jl
push
cmc
sub
sbb
and
push
test
outs
pop
cmp
(bad)
push
sbb
repnz
ds
mov
adc
mov
adc
test
inc
inc
inc
out
rcl
stos
std
jno
aad
in
inc
cmc
rcr
mov
jnp
imul
pandn
xlat
mov
(bad)
addr16
mov
inc
xor
mov
jmp
jmp
inc
sti
icebp
je
les
(bad)
jg
inc
frstor
mov
(bad)
(bad)
mov
jmp
push
mov
rcl
in
xchg
fsqrt
add
mov
not
lahf
sbb
adc
aam
lock
or
mov
retf
sti
xchg
mov
mov
and
cs
mov
cld
and
push
callw
xchg
mov
xor
adc
adc
sub
or
dec
aaa
mov
or
imul
or
jns
adc
das
rol
adc
adc
das
aam
repnz
retf
movs
dec
push
pushfw
inc
mov
out
mov
push
and
push
inc
jecxz
lea
push
(bad)
(bad)
pop
aas
dec
imul
sbb
mov
jmp
jmp
retf
xchg
mov
xor
ret
jp
jge
jmpw
es
neg
push
xchg
xchg
adc
dec
ins
fstp
mov
pop
inc
or
xchg
sbb
and
mov
cmp
dec
dec
inc
push
call
and
jno
xchg
adc
xchg
loop
xchg
or
inc
sbb
and
call
pop
popa
sub
ffree
test
inc
inc
jecxz
sbb
jl
dec
pop
push
fs
dec
mov
cs
jno
xor
inc
adc
adc
enter
adc
test
sbb
xchg
xchg
push
push
adc
lahf
add
mov
repnz
inc
add
mov
cmp
dec
mov
pushf
test
push
lahf
and
out
arpl
ds
(bad)
shl
mov
cli
push
adc
dec
ins
es
movs
enter
fdiv
test
jo
out
dec
pop
enter
movs
movs
dec
pushf
mov
jmp
shl
sbb
pop
jb
mov
out
ds
out
mov
mov
inc
iret
mov
push
push
or
cld
cmp
sub
xchg
push
add
cmp
and
jmp
add
mov
jb
aas
mov
dec
ins
movs
out
cmp
in
mov
xor
sbb
cmp
and
and
imul
or
sbb
cmps
inc
out
adc
push
(bad)
jl
sbb
daa
cmp
sbb
cdq
dec
jbe
sbb
xor
arpl
sub
jns
mov
dec
mov
lods
push
jecxz
or
ja
push
adc
std
ja
jne
xor
dec
aaa
out
push
cmps
stos
or
jmp
mov
fsubr
scas
cwde
hlt
repz
mov
pusha
cvtpi2ps
mov
in
out
inc
mov
test
pop
mov
sbb
mov
add
dec
sub
and
retf
aas
loop
mov
pop
dec
(bad)
jp
pop
xchg
in
add
mov
mov
cmp
jno
mov
xor
xchg
jp
ds
data16
fild
or
shl
shl
cmp
jbe
inc
add
out
mov
fdiv
loopne
js
punpckhwd
sbb
std
mov
xchg
stc
lds
xor
lds
or
mov
push
jno
add
scas
mov
mov
mov
rol
lds
mov
push
test
not
sub
rol
pop
pop
push
jno
add
adc
loop
xor
dec
mov
lods
adc
jns
mov
push
push
iret
push
add
cmp
out
sbb
stos
pop
fild
and
movs
scas
scas
mov
leave
or
jmp
retf
leave
into
inc
outs
push
sub
sbb
adc
push
dec
push
mov
jb
dec
(bad)
data16
mov
popf
sub
mov
scas
sbb
fs
push
cmps
dec
pop
cdq
pop
outs
pop
fwait
or
js
ins
imul
fldpi
retf
sti
cmp
sbb
dec
dec
mov
ret
jno
dec
arpl
sub
cmp
jno
adc
push
and
addr16
or
ss
push
cs
scas
inc
xchg
ffree
mov
loopne
neg
int3
mov
jecxz
or
inc
add
out
and
stos
jnp
push
fmul
in
xchg
in
push
fld
test
ja
mov
lahf
inc
out
aaa
mov
rcl
push
scas
add
fs
or
adc
(bad)
jno
cmp
cmp
fstp
daa
jnp
jnp
fstp
mov
push
outs
pop
(bad)
addr16
jmp
sbb
std
mov
stos
xor
mov
and
sub
mov
in
xchg
sbb
adc
ret
test
iret
jle
mov
fnsave
or
sub
dec
loop
out
xor
mov
xor
scas
mov
rcl
call
jg
(bad)
das
jge
ds
stos
jmp
cld
cli
sti
imul
ja
pop
mov
pop
mov
clc
and
mov
nop
test
out
stc
fwait
push
in
mov
jmp
pop
ja
jecxz
in
jnp
push
push
adc
xor
or
arpl
outs
sti
repz
and
mov
cmp
inc
jo
mov
mov
pop
cmp
jo
shr
in
jl
xor
adc
mov
or
test
rcl
and
push
sub
mov
xchg
lods
cmc
ret
test
mov
fs
cli
mov
xchg
jecxz
pop
mov
jl
or
mov
lea
outs
mov
test
sbb
lods
sbb
sub
jbe
in
aam
sahf
jno
and
int
jl
out
cmp
push
jecxz
mov
push
pop
mov
add
mov
lock
adc
imul
test
movs
cmc
(bad)
and
dec
push
push
dec
fwait
outs
inc
fidiv
xor
pop
dec
fisttp
jae
mov
mov
push
inc
dec
fcmovne
fst
iret
out
mov
jg
outs
retf
leave
out
lods
loopne
dec
xlat
and
(bad)
repz
js
rol
pop
dec
repz
int
xchg
popf
cmp
js
sar
dec
xchg
into
xchg
dec
inc
call
jne
arpl
mov
push
hlt
cs
cmp
and
push
push
int
aam
shr
adc
lds
daa
push
cmp
fisubr
adc
adc
cmp
ret
sbb
push
cmps
shl
add
xchg
adc
adc
jnp
and
ret
pop
test
cmc
inc
inc
pop
mov
dec
push
xchg
rcl
(bad)
pop
aas
mov
xchg
mov
jle
dec
test
add
dec
inc
adc
inc
sub
aad
pop
(bad)
imul
arpl
mov
pop
retf
rol
add
xchg
nop
adc
push
or
js
dec
add
push
icebp
jo
jl
mov
jno
inc
push
(bad)
sahf
pop
inc
iret
in
adc
cmp
xchg
aam
les
and
adc
test
setge
ja
sub
jb
(bad)
mov
outs
jnp
xor
cmp
adc
dec
pmullw
mov
inc
ror
cmp
mov
jl
adc
and
iret
or
push
cmp
jecxz
cmp
lds
add
and
popf
test
add
inc
out
retf
push
sbb
dec
sub
push
push
inc
cmp
gs
inc
push
movs
dec
jbe
out
pop
push
xchg
pusha
cmps
cs
ret
outs
movs
mov
inc
mov
push
stc
std
fdivp
ds
cmp
(bad)
loopne
or
jge
mov
pop
cmp
pop
dec
out
jp
cli
mov
shl
xchg
xchg
call
or
add
into
popa
(bad)
ds
fldenv
ins
aam
sbb
push
neg
mov
mov
addr16
adc
jnp
clc
mov
loope
cs
cs
fist
sbb
(bad)
ret
cs
jle
ins
mov
in
fiadd
pop
mov
mov
push
out
and
out
jo
cli
ja
test
mov
mov
jle
mov
inc
in
test
jge
stos
fisttp
mov
jmp
out
cmps
dec
(bad)
fucomi
movs
push
fst
loopne
mov
lock
xchg
mov
push
scas
pop
popf
jnp
inc
outs
out
ret
push
mov
inc
inc
mov
outs
mov
retf
sub
out
jo
arpl
stc
sahf
stos
(bad)
mov
xchg
cli
out
inc
jmp
imul
xor
je
out
mov
pop
xor
outs
sub
fisubr
and
mov
dec
xor
dec
aam
mov
add
adc
cmc
add
mov
rcl
test
and
inc
inc
ret
pusha
ret
xor
sbb
test
xchg
test
adc
sbb
or
retf
xchg
add
rcl
mov
dec
adc
and
mov
mul
dec
shl
rcl
dec
rcl
cmp
fs
rcl
cmc
aas
add
add
sub
gs
inc
sub
sub
(bad)
sub
ds
scas
jecxz
int
(bad)
fsubr
mov
dec
or
lea
push
xchg
ret
ret
loope
ja
out
pop
test
outs
cmp
mov
inc
adc
sbb
cli
ins
sub
push
ins
push
sahf
sbb
ins
push
arpl
lds
xchg
pop
out
inc
repnz
lds
jne
push
push
xchg
daa
mov
mov
call
xor
mov
or
test
inc
xchg
pusha
shl
inc
dec
ss
imul
xchg
and
push
and
push
les
xchg
lahf
mov
mov
mov
inc
hlt
inc
dec
jb
bound
(bad)
cld
and
inc
and
mov
in
clc
add
pop
test
push
add
pop
pushf
inc
mov
jmp
or
jne
inc
popf
push
cli
test
repz
out
jo
jne
jg
xchg
add
dec
cld
cmp
(bad)
ret
cmp
adc
mov
(bad)
mov
pop
xor
dec
sahf
xchg
inc
jo
dec
jno
jns
xor
jl
and
xchg
jb
std
jge
jne
ss
or
sbb
xor
push
sbb
mov
retf
jns
pop
movs
dec
lock
aam
jo
add
cmp
(bad)
mov
or
jg
xor
mov
(bad)
lock
sub
pusha
xchg
jbe
(bad)
jno
mov
cmp
enter
dec
dec
in
rcl
xchg
push
inc
jb
sbb
push
sbb
out
adc
not
xchg
outs
inc
xchg
pop
sbb
mov
pop
mov
cmp
cmp
mul
add
xchg
lods
mov
out
jg
pop
xlat
pop
mov
push
(bad)
cmp
inc
addr16
repz
mov
pop
(bad)
sar
xor
add
shl
ds
push
fcomi
jecxz
cmp
lahf
and
inc
test
jbe
dec
es
pop
fs
fild
jb
pop
lds
mov
sub
jle
lea
mov
adc
xchg
or
clc
cmp
mov
scas
push
adc
sub
out
movs
dec
or
add
imul
in
sbb
aad
push
or
mov
inc
loope
loope
mov
mov
fadd
sbb
outs
jl
mov
xor
fidiv
jnp
(bad)
fistp
mov
mov
cmps
xor
mov
mov
enter
sub
jge
fcomp
retf
mov
rcl
out
xchg
iret
xchg
imul
lods
gs
and
mov
mov
mov
add
push
jp
out
push
(bad)
inc
hlt
adc
push
mov
jae
xor
sbb
inc
pop
cmp
nop
cmp
push
jl
mov
fdivrp
test
neg
jmp
out
mov
retf
inc
(bad)
sbb
adc
xor
mov
cli
cmp
scas
mov
dec
cmc
mov
sub
stc
inc
aad
push
push
fcmovne
mov
mov
cwde
js
call
sbb
std
sbb
jecxz
(bad)
aas
or
pop
pop
mov
test
sbb
adc
sahf
aas
mov
or
fdiv
add
icebp
jmp
adc
mov
fdivr
fsubr
pop
add
in
xor
mov
lods
xchg
add
jmp
(bad)
adc
cmp
fwait
sbb
bound
popf
rcl
xor
mov
dec
dec
dec
inc
xor
dec
dec
xor
mov
push
sbb
inc
jo
and
push
inc
dec
das
pop
mov
or
icebp
movs
imul
xor
push
or
vshufps
sub
dec
cmp
jae
in
sbb
inc
das
xchg
cmps
mov
push
test
loopne
imul
cmp
addr16
arpl
or
mov
cmp
sub
inc
cmc
jbe
push
test
cmp
shr
jno
mov
jmp
and
inc
aad
call
imul
and
mov
inc
or
jb
xchg
lahf
adc
inc
mov
pop
pop
jne
(bad)
mov
and
gs
rcl
inc
in
sub
iret
nop
add
in
add
cmp
movs
fs
retf
mov
cmp
sbb
loop
pusha
out
adc
inc
fsubp
mov
jae
(bad)
les
adc
xchg
or
push
clc
enter
aam
jmp
sahf
mov
fld
fcomp
loope
fistp
mov
push
push
xor
xchg
cmps
jo
fnsave
mov
pop
push
shl
push
xor
lods
idiv
jge
mov
pop
jne
std
std
xor
or
icebp
out
pop
lods
fistp
jmp
jge
and
sub
loop
(bad)
jg
and
into
ret
ss
ja
xchg
aam
aas
mov
cs
ins
push
out
xchg
xor
or
pop
mov
mov
adc
mul
data16
pop
adc
cmp
push
lahf
add
ins
mov
ror
out
outs
mov
mov
aad
arpl
push
sbb
pusha
sbb
jg
mov
les
lods
rol
or
outs
jno
jae
lds
add
ds
cmc
pop
ss
scas
shl
out
dec
fisttp
push
push
imul
push
es
dec
ror
pop
jmp
or
mov
jge
loopne
sbb
inc
or
jp
sub
or
inc
xchg
push
inc
fadd
xchg
push
xchg
movs
pop
sbb
retf
adc
(bad)
repnz
or
or
dec
sub
push
jle
sub
jno
iret
daa
fwait
jl
int
test
xchg
sbb
ds
xchg
jnp
mov
and
sub
mov
pop
xchg
arpl
cli
sub
out
or
(bad)
jno
jg
mov
inc
sub
push
and
loop
mov
jmp
stc
jns
loopne
lahf
push
mov
adc
adc
cld
mov
mov
dec
jnp
ret
lea
ins
enter
pop
push
rol
imul
out
xor
cmc
nop
rcl
xchg
data16
mov
daa
stos
out
jnp
stc
cmps
jno
test
test
mulps
jge
pop
mov
sar
rcr
loope
arpl
cmp
add
fidivr
maxps
jnp
jno
push
sbb
lahf
jno
and
xchg
and
out
cmp
(bad)
pop
neg
jno
(bad)
pop
cmps
lods
jl
stc
int3
pop
pop
outs
cmp
rol
subps
outs
pushf
and
jmp
ins
call
push
push
das
sbb
jno
cmps
stos
mov
clc
cwde
imul
push
aas
rol
cmp
add
loop
xor
mov
les
sbb
lea
pop
cmp
les
inc
or
sbb
loop
jmp
movs
mov
imul
jne
cmp
sbb
out
mul
or
jle
loope
push
adc
aad
jae
fadd
arpl
inc
add
std
xchg
idiv
(bad)
push
out
mov
jecxz
or
test
ror
retf
push
add
sahf
aas
jg
push
dec
(bad)
(bad)
(bad)
fidivr
(bad)
xchg
fwait
jns
sub
pusha
mov
and
pusha
inc
and
sub
mov
cmp
adc
aad
inc
dec
jb
cmp
sti
popa
ret
xor
sbb
addr16
inc
inc
sub
adc
xor
sbb
aad
int
out
(bad)
dec
add
add
mov
xchg
test
(bad)
aam
scas
(bad)
fcmovu
mov
dec
push
sar
sbb
add
xchg
inc
or
fldenv
into
repnz
movs
push
scas
pop
adc
lea
sbb
or
adc
inc
jb
push
mov
jne
das
sub
cmp
not
pop
cld
outs
in
sub
shl
es
sbb
(bad)
cmps
xchg
cwde
xchg
or
data16
call
cmp
add
sti
and
and
loope
jg
mov
in
adc
dec
pop
pusha
inc
jo
mov
push
shr
jle
(bad)
addr16
adc
mov
pop
push
sahf
leave
ret
fcmovu
mov
test
mov
fild
adc
push
(bad)
jns
gs
loopne
cmps
sbb
pop
adc
mov
dec
push
div
cmps
into
mov
xor
or
dec
mov
add
sbb
test
iret
test
lahf
loop
mov
hlt
mov
cwde
cli
inc
xchg
add
int3
add
mov
cmp
(bad)
jmp
mov
test
adc
ins
cmps
push
mov
add
dec
or
cmp
enter
iret
rol
jo
les
xor
bound
scas
mov
and
es
int
dec
int3
int3
ret
push
scas
or
mov
shl
loope
loopne
add
leave
dec
movs
mov
daa
fisub
popa
ret
rol
sub
movs
sub
jns
cdq
enter
pop
inc
es
scas
iret
enter
sbb
jb
lods
ins
and
aaa
xchg
daa
or
fs
dec
push
jae
or
push
push
cmp
pusha
sbb
mov
enter
xor
mov
xchg
imul
mov
xor
aaa
(bad)
cmp
scas
mov
sub
mov
mov
lea
adc
sub
lahf
shl
(bad)
call
fdiv
call
jl
fsubp
xchg
cmp
cmc
adc
cdq
ds
fwait
cmp
sbb
fdivr
out
ret
push
(bad)
out
push
aas
mov
mov
outs
and
add
xchg
pushf
inc
jmp
dec
aas
xchg
inc
mov
pop
fisubr
fwait
retf
inc
dec
jg
(bad)
mov
mov
fmul
push
xchg
xchg
push
push
mov
pushf
shl
jge
xor
hlt
pop
jne
inc
pop
dec
push
xchg
cwde
jp
test
ja
bound
call
jecxz
add
push
sub
mov
stc
cmc
cmp
add
cmc
lds
or
fwait
dec
test
test
dec
mov
hlt
cmp
(bad)
pop
mov
mov
add
or
xor
pop
hlt
jmp
out
and
or
nop
inc
popf
stc
push
inc
pop
add
add
push
pop
adc
ficomp
(bad)
mov
xor
xor
ret
arpl
jl
fstp
and
pop
or
mov
sar
mov
add
fadd
sbb
mov
pop
push
(bad)
outs
cmp
jne
xchg
push
sub
xor
sbb
and
in
mov
mov
gs
sub
pop
jp
daa
and
sub
mov
or
adc
push
sub
aas
lods
icebp
add
(bad)
fiadd
arpl
loop
push
xor
jl
push
mov
nop
add
mov
dec
and
mov
sbb
sbb
movs
mov
fsub
adc
push
add
neg
popf
inc
in
scas
add
pop
push
dec
daa
call
pop
add
sub
sbb
adc
push
pop
push
sbb
and
daa
out
daa
dec
push
ja
(bad)
mov
and
push
leave
shl
leave
and
xor
fmul
fisttp
mov
(bad)
cmp
cmp
out
push
mov
inc
iret
ret
pop
cmp
aad
ja
into
ret
mov
aaa
mov
inc
adc
push
mov
xlat
fist
dec
test
movs
loope
imul
lock
bound
stc
pop
lea
or
aas
push
repnz
and
shl
inc
es
inc
sbb
loope
fisubr
xor
dec
outs
xchg
xor
sbb
je
jo
mov
add
sahf
sar
xlat
add
hlt
sbb
fcomp
push
inc
sub
ins
mov
mov
pusha
ins
jmp
mov
test
das
inc
xor
adc
xchg
aam
fwait
mov
adc
sub
mov
pusha
in
jg
gs
push
lods
mov
sub
sub
test
jle
adc
movs
cs
sbb
ror
call
xor
push
imul
jp
cmp
dec
adc
ins
addr16
fs
inc
inc
push
xchg
out
push
dec
jmp
sahf
mov
into
xchg
imul
add
test
das
out
jge
sbb
cmp
enter
lods
sub
cwde
je
test
ror
loopne
dec
cwde
cmp
ret
aaa
pop
pop
cmp
test
xchg
popf
mov
xchg
sbb
push
es
inc
or
inc
push
push
or
or
mov
jb
inc
jno
daa
es
imul
shl
adc
popa
cli
int3
push
mov
in
pusha
div
and
sub
sbb
mov
call
jg
dec
and
inc
push
jecxz
add
(bad)
pop
loop
xor
sbb
push
jecxz
adc
mov
lods
ror
pop
hlt
dec
in
lahf
inc
inc
xchg
repnz
dec
inc
nop
fst
or
cmps
jecxz
push
or
jecxz
push
cwde
mov
jmp
sti
cmp
pop
(bad)
adc
neg
jo
cmp
repz
dec
dec
mov
retf
push
add
in
scas
push
(bad)
xor
cmp
movs
jmp
loopne
into
outs
pop
push
mov
(bad)
bound
cmp
sub
jb
into
inc
(bad)
leave
cmp
cmp
pop
mov
push
xor
push
push
rcl
inc
test
std
sbb
adc
mov
adc
repnz
adc
(bad)
sbb
stc
mov
cmp
push
fbstp
int
pop
outs
or
push
leave
push
sbb
adc
push
imul
mov
(bad)
push
push
xor
gs
mov
aad
(bad)
push
mov
nop
pop
(bad)
dec
xchg
push
sbb
repz
lea
out
loope
mov
sub
ins
cld
mov
xchg
ret
pop
out
push
push
sar
or
fnstsw
pop
(bad)
loopne
and
inc
or
pop
pop
or
jl
mov
and
(bad)
loopne
jne
adc
sub
rcl
mov
push
pusha
cmp
jno
ss
push
in
jp
or
lds
aam
jmp
and
mov
fsubr
mov
xchg
rcl
or
jecxz
adc
xlat
out
retf
scas
retf
sti
add
ret
int
pop
sub
ffreep
(bad)
frstor
lea
test
imul
ins
or
cli
inc
or
mov
fnstsw
push
mov
add
sub
mov
je
ret
ds
push
mov
cmp
jmp
or
ja
xor
stos
inc
cmp
add
movs
push
mov
mov
cmp
or
pop
jmp
xor
jo
dec
xchg
mov
sbb
(bad)
adc
out
in
mov
push
jl
inc
stos
inc
jmp
out
setnp
xchg
dec
je
je
dec
jg
shl
adc
repz
cmp
mul
mov
ja
rcr
(bad)
mov
inc
inc
xor
test
mov
adc
jl
sub
and
cmc
pop
xchg
fdivr
sbb
mov
dec
fdivr
pop
adc
inc
add
sbb
aas
je
inc
jo
mov
into
push
mov
xchg
es
push
neg
fsqrt
cwde
mov
add
add
push
xor
or
dec
rol
rcl
test
call
je
sbb
(bad)
jbe
pop
in
or
sub
adc
add
sbb
fwait
push
fs
int3
adc
in
dec
into
retf
pop
iret
shl
mov
js
mov
xor
hlt
adc
je
dec
push
sbb
mov
repz
fcomip
mov
pushf
in
idiv
or
ret
jbe
push
mov
ret
mov
push
pop
stc
sbb
sub
pop
mov
push
jge
sbb
and
mov
mov
adc
push
inc
imul
(bad)
(bad)
jmp
add
mov
(bad)
hlt
jnp
push
sub
jae
mov
arpl
pop
pop
outs
test
jnp
loop
xor
int
mov
ds
cmps
scas
cmp
jle
sub
mov
adc
scas
ret
jl
(bad)
aaa
ja
fdiv
pop
lods
push
lods
les
icebp
adc
inc
ror
adc
pop
stc
jnp
les
adc
xchg
or
jl
mov
sub
ds
push
loopne
add
sbb
and
out
retf
add
cdq
jns
shr
xor
js
cmp
je
sbb
inc
xor
lea
dec
ss
or
lahf
mov
in
pop
ret
mov
test
sbb
or
sub
mov
adc
lock
outs
ret
test
clc
xor
cmc
mov
mov
inc
lahf
popf
fcomp
hlt
ja
inc
dec
jmp
inc
repz
push
retf
and
jne
sbb
hlt
sbb
inc
cmps
popa
dec
push
in
push
sub
sub
xor
mov
loope
aad
lock
imul
jl
dec
push
cmps
and
xor
inc
mov
out
dec
dec
(bad)
xor
aas
std
or
neg
aas
lock
pop
xor
push
gs
ret
mov
cs
adc
(bad)
xor
arpl
pop
cwde
sti
(bad)
mov
imul
test
dec
(bad)
xchg
push
(bad)
push
lds
fild
mov
mov
fdivr
jecxz
mov
dec
pusha
loope
mov
sub
out
cwde
xlat
pop
mov
shl
push
cwde
adc
sar
and
outs
mov
jg
sbb
pop
inc
dec
dec
btc
mov
mov
icebp
mov
cmc
jmp
jno
fdivr
jno
or
pop
inc
inc
inc
add
iret
dec
or
add
dec
inc
jbe
push
leave
inc
pusha
pop
and
fdivr
(bad)
xlat
jl
cld
cmp
sbb
popa
test
sbb
dec
xchg
cs
pop
pop
pop
lods
sbb
scas
mov
sub
iret
gs
test
cmp
ins
mov
mov
je
add
xchg
or
mov
ins
jo
mov
and
add
daa
nop
mov
or
sbb
adc
lds
test
pop
dec
mov
and
add
jmp
sbb
jl
dec
leave
ret
fwait
pop
cmps
or
fdivr
les
in
mov
cli
pop
rcl
nop
and
cmp
mov
in
xchg
mov
js
ret
mov
nop
jmp
sub
and
mov
xor
into
mov
mov
mov
(bad)
cmp
xchg
dec
and
movs
inc
inc
movs
sub
dec
xor
fbstp
sbb
and
dec
xchg
mov
push
mov
mov
pop
xor
pop
sahf
xchg
xor
stos
xor
mov
adc
and
clc
pop
lea
cmp
in
and
test
push
loopne
mov
jge
jno
sahf
dec
xor
cs
loope
add
fcmove
adc
jmp
mov
jb
pop
ror
jge
mov
mov
mov
mov
jnp
rcl
xchg
jbe
jns
sub
mov
fdiv
les
add
dec
pop
jo
lods
jnp
inc
repz
(bad)
rcl
xchg
push
add
lods
jbe
aad
mov
pop
jnp
retf
adc
ins
jg
adc
sar
movs
mov
cmp
rcl
add
lods
jnp
mov
jg
xchg
ret
shl
loopne
sbb
clc
dec
inc
movs
out
fisub
inc
jb
lods
enter
xchg
popf
xor
adc
or
jge
push
inc
ins
fmul
mov
out
jmp
ss
out
aad
test
(bad)
mov
mov
daa
jg
jp
pop
(bad)
fmul
jg
mov
(bad)
jecxz
nop
mov
xchg
fwait
iret
xchg
retf
and
imul
jg
adc
mov
fcomp
clc
or
test
push
data16
add
fsub
mov
pop
out
mov
pop
shr
xor
jns
add
dec
in
fadd
push
lods
xor
push
(bad)
sub
and
movs
and
mov
mov
push
mov
aam
daa
in
xor
cwde
fiadd
sbb
into
push
(bad)
cmp
fldcw
ins
push
xor
(bad)
sub
sar
sub
sub
sub
jle
test
inc
xchg
rcr
or
sbb
mov
push
inc
mov
sbb
cmp
and
dec
fst
repnz
fdiv
ficom
mov
sub
int3
xlat
ret
mov
add
push
aas
ror
data16
push
fwait
int
das
push
add
pop
xchg
pusha
sub
xor
push
sbb
xchg
in
mov
or
(bad)
dec
xlat
test
adc
jl
mov
out
fist
and
scas
or
enter
repnz
ins
shr
xchg
mov
popf
pop
sbb
clc
cmp
mov
mov
xchg
ins
retf
xor
jle
cld
and
fs
inc
scas
or
rcr
push
mov
push
(bad)
pop
xchg
push
std
icebp
iret
dec
ret
mov
movs
mov
gs
fucom
scas
lds
mov
mov
push
pop
jl
cmc
idiv
into
popa
bound
push
ror
push
xchg
(bad)
ror
adc
cmc
sub
ret
xchg
add
aad
jno
add
or
sub
mov
inc
cmp
add
mov
xor
mov
inc
(bad)
pop
jne
jmp
js
push
xchg
imul
setns
cmp
adc
setnp
mov
iret
rcl
ret
outs
fnstsw
inc
hlt
in
fist
fnstsw
mov
add
mov
out
mov
fist
and
(bad)
out
fwait
lds
dec
fwait
ss
imul
test
adc
cmp
call
jmp
inc
mov
hlt
ins
test
add
imul
adc
les
icebp
call
push
stos
test
add
sub
in
mov
xor
es
cmp
mov
cmps
mov
mov
das
pop
or
mov
or
mov
cmp
movs
int
rcl
xchg
popa
xchg
push
mov
aas
sbb
pop
sbb
cli
not
mov
lahf
and
cld
cld
xchg
jnp
int3
int
dec
dec
mov
ret
movs
test
adc
jnp
(bad)
jle
leave
ror
pop
inc
sar
jae
sar
inc
jo
push
stos
push
pop
and
data16
mov
mov
fild
mov
repnz
cmc
rol
dec
xchg
scas
test
ins
dec
adc
jno
adc
mov
cmp
arpl
sahf
sub
mov
inc
fs
or
repnz
mov
jns
sub
(bad)
out
xchg
cmp
in
movs
xor
or
movs
sbb
ret
adc
scas
adc
adc
pop
and
imul
es
movntq
popf
pushf
sub
stos
adc
jno
mov
inc
fwait
lds
fs
(bad)
pop
mov
jnp
dec
mov
jmp
push
arpl
mov
inc
mov
lea
pop
adc
xor
(bad)
sar
cdq
scas
sar
rcl
and
xor
sub
enter
inc
pop
sub
sbb
(bad)
fs
arpl
enter
movs
mov
aad
sub
inc
frstor
xchg
mov
mov
xchg
lahf
add
sbb
imul
mov
addr16
mov
popf
and
push
or
clc
es
retf
fnstenv
adc
and
dec
lock
int
fwait
or
rcl
fld
mov
add
mov
mov
mov
lods
lock
jge
ins
push
rol
jg
xchg
inc
in
pop
mov
sbb
fiadd
mov
fild
ins
(bad)
ins
mov
out
shl
pop
mov
test
arpl
mov
sbb
pop
test
out
or
inc
in
mov
sub
mul
mov
cmp
xor
sub
mov
sti
test
sub
fdivr
mov
movs
mov
test
pop
std
out
dec
es
int
mov
(bad)
or
dec
fnstenv
or
push
xchg
pop
push
addr16
inc
jecxz
popf
ja
lea
sub
mov
adc
or
fld
hlt
out
or
ja
push
icebp
sub
outs
out
add
sbb
fld
bound
fcomp
shl
popf
jle
adc
fisubr
pop
stc
xchg
sbb
mov
in
cmps
inc
jo
push
movs
push
pop
xor
test
push
dec
add
jae
add
dec
adc
ja
bound
push
shr
aaa
mov
ss
xchg
outs
popa
lea
inc
lods
sbb
mov
inc
rcr
jns
pop
and
push
pusha
push
push
in
push
loope
aad
stc
add
xchg
sbb
mov
and
fsubr
fdivr
sbb
jns
or
or
shr
inc
mov
push
ret
loop
pop
fcmovu
or
xchg
cmc
xchg
test
sub
(bad)
(bad)
call
mov
and
inc
mov
xchg
jo
dec
inc
das
stos
dec
sub
mov
shl
rol
sbb
gs
add
mov
push
mov
dec
fisttp
sub
inc
xor
adc
std
stos
neg
pop
(bad)
ds
jo
cmp
jmp
jnp
add
ret
xchg
pusha
jmp
jle
out
arpl
push
xor
ret
pop
jne
subps
out
push
mov
cmps
sbb
cmp
rol
imul
fcmovnb
mov
in
loopne
in
lea
retf
sub
mov
push
push
push
mov
test
fldenv
fdivp
loop
push
pop
pop
add
retf
sub
inc
inc
shl
push
aam
test
pop
shr
xor
ins
fidiv
mov
inc
(bad)
push
jo
jb
(bad)
cs
mov
clc
int
jg
sbb
xlat
push
inc
mov
mul
mov
sbb
ror
shl
test
in
sbb
pop
mov
or
cmp
dec
dec
inc
push
add
mov
mov
push
movs
pushf
mov
or
xor
(bad)
in
push
out
clc
adc
push
cld
int
mov
push
jg
into
rol
leave
int3
int3
int3
cmp
dec
rcl
pop
push
adc
xchg
pop
mov
mov
int
ins
fsub
clc
mov
popa
(bad)
aam
push
push
lds
inc
jb
and
in
xor
pop
lahf
shl
aaa
loope
adc
fs
fisub
mov
jno
mov
push
add
jne
adc
cmp
inc
and
inc
inc
lds
ins
xor
sar
jecxz
icebp
adc
or
shl
xor
dec
pop
push
cwde
mov
retf
push
pop
stos
dec
stc
inc
adc
mov
out
pop
lods
mov
repz
ja
sbb
or
jl
call
xchg
aam
cld
cdq
lods
xchg
or
pop
out
sbb
pop
loope
dec
sbb
(bad)
lds
jg
out
inc
add
sub
sti
jmp
cmp
mov
lods
mov
mov
sbb
or
adc
xor
(bad)
jmp
repz
pop
shl
add
popf
jb
lds
fld
gs
sbb
out
and
popf
and
sahf
ret
mov
mov
ror
jne
pop
jg
jp
(bad)
sbb
imul
pop
sbb
daa
jmp
shl
sbb
lock
jg
aam
inc
(bad)
jno
nop
cwde
xchg
mov
aam
xor
mov
cmp
sbb
push
sbb
xor
xlat
sub
lock
sub
cwde
mov
pushf
add
pop
xchg
lahf
adc
jmp
xor
jle
sub
outs
push
pop
xchg
jecxz
sahf
mov
inc
je
or
mov
repz
cmc
push
or
xor
test
test
mov
hlt
xchg
pop
test
jne
sbb
cmp
fidiv
mov
retf
not
(bad)
cwde
jae
jo
pop
(bad)
pop
dec
mov
jle
cs
mul
pop
fisttp
add
call
ret
inc
pop
push
stos
sub
or
imul
mov
xchg
sub
mov
mov
clc
cmp
add
sar
xor
leave
mov
cmps
int
mov
enter
out
test
inc
push
adc
dec
das
dec
or
pop
sbb
dec
jo
(bad)
loopne
push
inc
push
test
scas
aad
shr
push
sti
inc
fdiv
mov
out
inc
call
(bad)
(bad)
jne
xchg
cmp
and
call
fdiv
enter
int3
fnstsw
jo
sbb
add
enter
mov
(bad)
cmp
push
push
xchg
jnp
sub
pop
inc
xor
ret
sub
ins
inc
mov
xchg
idiv
or
sahf
sub
mov
lock
add
and
pop
push
test
rcl
nop
(bad)
sub
das
stos
rcl
and
jge
push
mov
sbb
outs
jmp
mov
js
cmp
mov
pop
push
shl
je
rol
or
sbb
or
jge
int3
mov
mov
dec
rol
mov
shl
fwait
mov
iret
std
push
mov
sub
pop
stos
mov
sbb
mov
outs
mov
es
mov
arpl
mov
pop
mov
adc
adc
pop
out
add
in
push
fcom
test
jge
test
pusha
push
mov
pop
pushf
ds
xchg
add
aam
out
adc
js
jns
dec
outs
cdq
les
pusha
adc
sub
shl
mov
test
xlat
outs
or
loope
mov
inc
xchg
jecxz
fadd
xor
dec
mov
shl
mov
rol
pop
mov
adc
hlt
jl
arpl
push
jo
adc
stos
scas
aas
or
mov
and
enter
leave
jno
mov
sbb
scas
pop
adc
adc
scas
and
clc
and
jno
mov
fmulp
fdivr
ss
lea
dec
shl
jge
mov
out
mov
jbe
jb
lgs
enter
out
fistp
repz
jb
lock
adc
xor
ds
lea
in
add
les
in
pop
dec
in
(bad)
mov
push
xchg
gs
sti
xor
adc
sbb
cmp
mov
push
adc
xchg
jle
cmc
push
xor
jmp
push
cmc
push
sub
iret
imul
call
xchg
imul
jecxz
popf
cmp
out
push
xchg
cmp
mov
call
xor
sbb
lock
ds
sbb
adc
sbb
xor
lea
sbb
icebp
enter
jge
xchg
pop
and
cdq
cwde
mov
cmps
scas
pop
mov
out
out
aam
test
jmp
(bad)
mov
or
test
mov
and
adc
scas
mov
mov
push
(bad)
iret
add
inc
aam
aaa
or
lods
cmp
stc
pop
int3
xor
cmp
and
pop
iret
mov
adc
sub
pop
sti
pop
and
inc
ss
mov
in
das
add
fimul
test
fdiv
or
add
xchg
or
test
add
es
shl
shl
pop
sub
or
and
xor
shr
push
adc
jns
mov
add
ja
enter
out
sbb
fmul
add
imul
mov
adc
xor
adc
pop
adc
fs
jns
sub
xor
stos
xor
pusha
or
dec
daa
jg
scas
xchg
xchg
or
pushf
mov
ja
push
sbb
pop
mov
rcr
psubusw
cmp
push
pop
or
mov
pop
mov
mov
ficomp
mov
and
mov
or
push
out
mov
test
sub
ss
neg
ficom
and
and
ds
xor
jg
outs
cmp
stc
jnp
stos
jge
mov
test
mov
inc
jmp
or
push
mov
cmp
arpl
push
fld
sbb
lea
lahf
xchg
sbb
xor
sub
adc
fwait
js
std
ja
and
adc
(bad)
into
retf
int
loop
daa
xchg
and
outs
loopne
ins
hlt
fdivr
jb
pop
fcomp
test
out
mov
pop
stos
aam
sub
and
std
cld
sub
js
pop
mov
sbb
out
lods
dec
sbb
or
cmc
ins
jae
push
xchg
sub
add
scas
test
arpl
cli
rol
ja
add
popa
loope
jmp
adc
cmp
jg
or
test
test
ficomp
mov
bound
lods
dec
sub
pop
mov
push
add
mov
sbb
scas
ror
push
stos
sbb
ja
sub
add
xchg
ins
push
jge
sahf
test
mov
ds
(bad)
jnp
or
and
ret
mov
ins
push
xchg
mov
jns
int
dec
test
jge
fwait
push
xchg
dec
mov
ret
mov
add
dec
sbb
xchg
mov
add
leave
je
scas
mov
adc
sbb
adc
dec
imul
push
sbb
push
sar
sbb
xor
nop
inc
mov
retf
fadd
adc
lahf
mov
pushf
jl
test
loop
mov
fadd
loope
xchg
mov
cmp
addr16
and
sub
mov
adc
adc
push
lods
add
das
pop
cs
js
adc
push
leave
aaa
sub
gs
pop
inc
loopne
push
rcr
lods
push
pushf
sbb
imul
pop
and
daa
hlt
jmp
inc
inc
inc
or
sbb
jl
cwde
repz
inc
lds
pop
mov
mov
iret
neg
bound
(bad)
push
mov
lock
ret
scas
mov
outs
xchg
ds
fild
xor
mov
aam
xor
and
mov
leave
xchg
sbb
sbb
nop
lahf
xchg
xchg
jle
push
jecxz
les
inc
cmps
cmps
cmps
and
scas
aaa
div
push
pop
nop
retf
int
add
pop
add
div
xor
sbb
pop
shl
popa
out
sbb
xlat
fild
cmp
cs
push
and
push
bound
mov
shr
cmps
mov
mov
or
or
or
outs
(bad)
gs
push
movs
jp
dec
or
std
dec
mov
jnp
cmps
popf
add
inc
jb
add
mov
and
das
pop
fs
cwde
cwde
je
(bad)
mov
sahf
xchg
lds
jmp
or
in
push
lds
test
jmp
pusha
push
ror
sbb
pop
pop
lahf
push
and
int3
ja
mov
stos
add
xchg
add
cmp
xchg
sar
push
cmp
jl
xlat
cli
mov
push
and
rcl
pop
test
leave
sub
jmp
jns
stos
neg
cmp
movs
pop
sbb
jmp
aad
loopne
push
and
sbb
adc
test
push
mov
and
adc
scas
jns
sub
lods
sti
fs
xor
xchg
aaa
jae
int3
std
xchg
les
hlt
cmp
dec
(bad)
cmp
jecxz
daa
(bad)
mov
mov
js
add
ror
popf
dec
bound
jbe
test
sbb
in
push
stc
(bad)
adc
xchg
mov
test
mov
pop
in
ja
add
xchg
inc
shr
xor
add
jmp
cld
xor
mov
mov
fdivr
mov
(bad)
xchg
add
stc
fdiv
sbb
dec
ins
cmp
pop
ja
mov
out
add
(bad)
pushf
jecxz
pop
cld
or
cmp
int
repnz
leave
dec
push
or
mov
(bad)
mov
sbb
fcmovb
jmp
pop
add
ja
mov
ss
popf
or
dec
jns
rcl
stc
sbb
add
out
mov
in
loope
adc
xchg
cmp
push
js
cmp
and
movs
ss
adc
fsubr
cwde
pop
je
pop
xor
scas
mov
jnp
pop
imul
fwait
scas
or
iret
cmp
mov
inc
ret
add
add
cwde
leave
mov
inc
lods
pop
cmp
leave
imul
xor
mov
dec
fnsave
xchg
inc
mov
jae
inc
call
jnp
les
inc
loopne
ja
add
push
ins
cmp
mov
aaa
lods
adc
mov
xor
test
shr
and
cmp
js
mov
mov
mov
leave
pop
adc
fsubr
fsubr
xchg
and
mov
adc
sub
xlat
mov
pushf
ds
pusha
mov
jmp
sbb
and
pop
pop
cmp
imul
in
loop
mov
mov
and
or
cmps
das
aas
jle
pop
adc
outs
mov
pop
jle
push
cmc
in
jo
mov
push
xchg
push
pop
js
ficom
lods
mov
jl
jecxz
add
and
in
js
test
data16
fadd
movhps
fwait
mov
rcr
mov
rcl
dec
pop
bound
fldln2
jg
xor
out
jne
sbb
jmp
mov
sar
cmp
add
outs
retf
or
jmp
pop
outs
cmp
mov
push
jmp
(bad)
sub
xor
pop
mov
push
mov
or
movs
cmp
out
fwait
xchg
sbb
inc
mov
gs
pop
mov
add
loop
inc
or
out
mov
dec
aad
xchg
iret
pusha
jbe
push
jo
daa
xor
push
jo
push
loopne
xadd
dec
inc
lds
dec
pop
mov
scas
scas
das
cli
imul
(bad)
cdq
xor
fisttp
dec
xchg
lds
shl
push
add
ja
jg
mov
cmp
inc
cli
(bad)
sar
and
scas
call
adc
retf
push
iret
loope
outs
cmp
out
xchg
shl
lar
lea
sub
dec
xor
jp
dec
jnp
pop
clc
fisub
xchg
cmp
ss
sbb
inc
jp
sbb
outs
(bad)
and
sub
jle
(bad)
jo
and
jno
mov
int
and
and
out
xchg
popf
cmp
ins
mov
ret
jns
push
mov
fdiv
mov
loop
mov
sub
adc
stc
sar
push
cmp
inc
mov
sbb
sub
cmc
or
retf
pusha
in
stos
jmp
in
sbb
stos
jae
push
sbb
push
sbb
arpl
test
push
(bad)
je
(bad)
mov
dec
retf
xor
add
pop
sub
icebp
pop
push
jns
push
cmp
fisttp
rcl
xor
in
sbb
cmp
cmp
push
call
dec
shl
fdivr
sbb
leave
int
mov
or
out
movs
cmp
jo
into
jne
stos
sub
xchg
xor
adc
sbb
fwait
cmp
jle
inc
stos
mov
and
jle
repnz
(bad)
and
daa
and
xor
adc
loopne
(bad)
stc
pop
inc
or
icebp
add
neg
ror
pop
mov
hlt
add
mov
push
mov
cmps
mov
dec
jo
xor
dec
int3
inc
scas
repz
push
and
loope
(bad)
or
bound
inc
scas
adc
shl
cmp
or
xchg
push
(bad)
fmul
nop
int
loop
mov
push
clc
out
nop
sbb
cmps
push
cmp
cwde
pushf
mov
sub
stos
mov
push
fsubr
add
pusha
and
mov
addr16
outs
sti
mov
loopne
cld
arpl
cld
jl
loop
mov
or
add
pop
out
repnz
lods
push
xor
call
je
test
jg
add
adc
push
pop
cmp
inc
fs
jle
xor
scas
es
adc
mov
pop
mov
push
sbb
jns
xor
ins
cmp
jns
dec
popa
int3
rol
fdiv
movs
lahf
cmps
loop
lds
mov
daa
popa
cli
ret
aas
mov
dec
es
adc
dec
psubsb
ret
mov
push
xchg
ja
jg
out
push
jo
pop
mov
popa
stos
jo
push
fbstp
adc
mov
push
addr16
cs
(bad)
add
and
pop
or
fmul
lahf
iret
jl
xchg
mov
(bad)
sbb
jecxz
(bad)
aad
or
xor
nop
cdq
cwde
arpl
jle
mov
xchg
push
frstor
cld
test
cmp
mov
push
and
cmc
cmp
adc
ins
xor
push
push
pop
add
pop
pop
dec
push
pop
test
and
mov
int
adc
not
add
sub
aad
in
or
loopne
pop
add
pop
scas
enter
sti
mov
test
jg
lahf
mov
loope
adc
shl
rcl
into
(bad)
cmps
nop
popa
cmp
xchg
xchg
xchg
push
inc
inc
sub
call
push
sub
sub
inc
jnp
dec
mov
pop
inc
daa
jg
inc
cmp
out
repnz
fistp
sbb
xchg
xor
lahf
test
test
and
xchg
mov
sub
pop
xchg
imul
mov
mov
mov
mov
imul
movs
lea
adc
into
and
iret
adc
out
loopne
dec
mov
std
jns
rcr
push
int
nop
inc
stos
xchg
cmp
push
loope
lea
mov
scas
add
imul
scas
pop
and
fsub
es
ins
shl
mov
pop
loopne
pusha
loope
cmp
xchg
icebp
jecxz
arpl
loopne
loop
cmps
ins
mov
push
dec
cwde
xor
imul
xlat
movntps
adc
test
das
test
inc
inc
push
push
xchg
sahf
aad
inc
jg
mov
daa
pusha
sti
pop
and
or
in
cmp
sub
mov
xor
mov
push
inc
inc
adc
sub
jge
push
push
(bad)
mov
out
aaa
sub
into
call
sbb
jnp
pusha
loope
cmps
pop
jae
add
mov
mov
retf
pop
cli
xchg
add
test
enter
ja
ss
mov
mov
jecxz
out
cmp
jmp
test
and
(bad)
pusha
xchg
leave
dec
mov
pop
mov
xchg
xchg
dec
int
ret
lock
test
xor
jmp
mov
jno
sub
fistp
daa
addr16
cmp
adc
out
daa
pop
push
add
scas
out
lock
inc
pop
fdivr
outs
arpl
and
stos
fs
mov
(bad)
out
sbb
movs
in
jo
gs
(bad)
cmp
imul
mov
inc
cmp
push
lahf
push
mov
xor
sbb
pusha
repnz
pop
add
xor
pop
mov
dec
cmp
mov
xor
xor
sub
adc
mov
dec
sbb
mov
sbb
es
imul
aas
push
lods
ret
or
jnp
add
fadd
or
ret
icebp
xchg
dec
(bad)
push
mov
ins
mov
fwait
cld
cmp
shr
ret
test
in
push
mov
lahf
lods
sub
or
sbb
or
call
adc
retf
scas
cmp
cmp
mov
shl
mov
test
jp
sbb
pop
or
(bad)
jmp
push
stos
add
call
repz
hlt
sbb
in
int3
xor
adc
mov
push
lds
push
fisttp
pop
cli
pushf
jbe
sub
inc
cmp
mov
adc
out
test
rcl
int
fsub
shl
push
bound
(bad)
in
pop
mov
push
jl
popa
pop
outs
sbb
pop
xor
xchg
xor
pop
xchg
ret
arpl
iret
sar
sar
mov
mov
mov
(bad)
enter
bound
pusha
pop
sub
or
dec
mov
mov
push
cld
xor
or
int3
fld
fistp
cmp
dec
jns
rcr
arpl
cmc
add
sbb
(bad)
in
sbb
loop
and
out
xlat
inc
lea
push
shl
inc
pop
mov
mov
leave
call
push
rol
loopne
call
retf
cmp
pop
mov
mov
loopne
sub
jb
jne
sub
dec
psubusw
fsubrp
mov
bound
jecxz
xor
push
enter
leave
loop
int
icebp
(bad)
jns
cmc
adc
aad
call
aas
jo
(bad)
adc
jae
pop
push
xchg
cmp
sbb
sub
jb
inc
adc
and
sub
pushf
aaa
call
fdivr
in
fdiv
cwde
cmp
test
xchg
das
mov
mov
out
mov
mov
dec
push
cmp
pop
push
test
mov
push
stos
fldenv
jle
xor
sbb
fnstsw
add
inc
xchg
fadd
and
ins
and
push
mov
outs
loop
lea
into
outs
rol
mov
xchg
outs
sbb
loope
into
inc
cmp
mov
out
inc
enter
data16
sub
add
sbb
aaa
addr16
lods
frstor
or
or
push
lock
repnz
push
scas
sbb
in
iret
inc
jne
xor
fcomip
(bad)
rcl
add
fwait
adc
mov
je
loope
xor
call
ds
ret
add
aam
pop
inc
test
rcl
ss
mov
cmc
fs
xor
mov
mov
push
mov
clc
xor
aaa
fmul
jmp
cmp
sahf
mov
cmps
push
fdiv
sar
(bad)
popf
mov
mov
push
fs
and
add
push
dec
pop
jno
xchg
daa
dec
in
add
pop
or
fisttp
xchg
pop
es
std
jno
cmp
fadd
icebp
and
push
sbb
cmp
inc
rcl
shr
sub
bound
push
mov
mov
fild
loop
movs
(bad)
ss
xchg
xchg
ds
fdiv
and
(bad)
push
call
push
shl
sub
inc
aaa
aaa
aaa
add
ins
fsubr
das
das
das
add
data16
mov
xor
sbb
int
jns
popa
push
ss
mov
into
aas
mov
inc
icebp
stc
(bad)
jae
ret
jo
rol
addr16
mov
out
inc
loope
es
and
mov
iret
mov
sub
out
hlt
in
mov
stos
mov
mov
inc
enter
out
cmp
push
mov
mov
es
icebp
lods
cmp
cld
jl
adc
cmp
lock
sub
inc
daa
mov
push
or
call
movs
inc
jns
fwait
daa
pop
xor
cmp
adc
xchg
sbb
mov
cmp
jmp
test
pop
popa
xchg
mov
clc
cmp
sbb
xchg
pop
cmps
(bad)
and
xor
das
pop
stc
pusha
mov
arpl
mov
xchg
jb
xchg
test
fwait
hlt
jmp
aam
int
mov
rcl
hlt
pushf
scas
add
ds
ins
sbb
call
mov
or
sbb
mov
dec
adc
xor
pop
sahf
xchg
lds
lahf
repnz
add
or
enter
pop
pushf
inc
lea
pop
jp
(bad)
jns
dec
xchg
loope
or
sbb
popf
dec
lea
dec
sub
dec
and
pop
inc
adc
sub
sbb
shl
mov
leave
xchg
cmps
scas
leave
into
in
daa
pop
stc
jmp
xchg
and
(bad)
xor
push
test
cld
addr16
adc
lods
sub
push
pusha
mov
inc
or
and
mov
pop
pop
mov
adc
inc
movups
stc
loope
mov
push
pop
out
scas
jge
lea
xor
out
jle
repnz
rol
mov
sbb
fdivr
cwde
pop
les
imul
sub
jp
and
test
jae
inc
mov
aam
daa
fs
daa
jg
mov
mul
sub
jae
clc
(bad)
aas
bswap
icebp
ret
popf
jne
sub
adc
xor
xor
dec
clc
inc
inc
rol
adc
std
xor
mov
popf
adc
xchg
sub
xchg
mov
fild
test
and
add
mov
or
cmp
popf
shr
inc
mov
mov
push
int
pushf
mov
jno
jl
push
(bad)
push
dec
pop
mov
adc
jo
or
jg
sbb
adc
jmp
xchg
mov
inc
cmps
adc
mov
mov
pop
sub
neg
xchg
dec
pop
mov
fs
sbb
out
ror
or
fiadd
push
cmps
pop
ret
pop
repnz
pop
and
xor
cmc
and
xchg
les
adc
xor
jecxz
data16
inc
xchg
jbe
and
jnp
cmp
cmp
adc
es
repnz
call
adc
inc
test
push
jns
sbb
sbb
jmp
inc
dec
xchg
pop
loope
push
aaa
add
outs
pop
cmps
push
popf
loope
mov
or
mov
popa
fbstp
jl
stc
sbb
in
jmp
in
stos
jge
jmp
adc
dec
imul
or
cmps
sub
jmp
out
into
mov
aas
pop
xor
cmp
mov
mov
push
inc
scas
or
sbb
xchg
imul
outs
jne
lahf
outs
addr16
cli
ins
push
push
pop
push
sbb
push
ret
mov
push
mov
lock
and
xchg
mov
xor
lods
and
xor
cs
dec
cmp
add
ret
xlat
fdivr
rcl
mov
pop
int3
sub
dec
inc
xchg
pop
jecxz
xchg
pop
push
push
xchg
cmp
in
mov
dec
ins
lods
jl
jno
fadd
mov
pop
push
pushf
jle
or
fs
loopne
pop
sbb
jecxz
popf
aaa
sbb
mov
mov
out
pop
into
pop
js
(bad)
xchg
cmp
loopne
push
xlat
jle
adc
mov
in
push
test
out
ss
mov
cdq
push
loope
sahf
push
push
cmp
pushf
mov
cdq
psubusw
int
iret
mov
(bad)
jb
jb
loop
leave
std
ror
xchg
pop
out
or
pop
push
outs
ins
(bad)
das
sub
cld
ins
cmp
retf
je
or
and
loop
add
js
xchg
mov
and
es
in
jle
push
mov
add
into
pushf
add
out
test
ss
clc
sub
inc
js
add
or
loopne
imul
mov
sbb
fidivr
loope
lea
sbb
mov
shr
sbb
sbb
js
sbb
adc
push
push
out
adc
cmp
fld
mov
call
sub
cld
test
ret
out
jno
sub
sahf
inc
xchg
sahf
sub
std
add
fild
xchg
pop
push
mov
jbe
push
psrld
mov
xchg
sbb
push
aaa
sbb
clc
xchg
fwait
clc
xchg
pop
jl
in
mov
jge
mov
out
jmp
daa
dec
xor
push
daa
mov
xchg
jbe
iret
sub
add
or
in
or
cli
push
inc
push
inc
mov
sub
pusha
xor
(bad)
sub
sahf
lods
xchg
loope
sub
and
mov
sti
and
add
ror
inc
sar
mov
dec
rcl
xor
iret
jl
and
adc
push
dec
mov
mov
test
cmp
push
(bad)
fsub
fwait
test
jecxz
call
shr
xchg
jmp
fbstp
cld
clc
cmp
outs
std
std
mov
jo
sub
cli
mov
fsub
and
jns
adc
xchg
push
fcmovb
outs
or
inc
fbld
mov
fwait
call
jmp
fild
adc
test
cmp
out
pop
push
fdiv
dec
test
icebp
pop
fist
jbe
adc
mov
mov
adc
jae
jge
add
(bad)
xor
rcl
lods
mov
pop
imul
pop
sti
sbb
sbb
dec
dec
inc
out
fwait
shl
mov
sbb
jae
fimul
out
ds
inc
das
jns
or
inc
adc
popa
clc
adc
add
ss
ret
mov
ret
fwait
mov
test
push
punpcklbw
scas
mov
(bad)
and
xchg
jmp
xchg
aam
mov
cdq
push
xchg
shl
inc
hlt
cdq
mov
sbb
imul
pop
mov
into
(bad)
retf
xor
jle
mov
inc
lds
ins
or
mov
in
inc
shr
ds
in
sub
aad
aad
jmp
adc
sbb
dec
cmp
into
retf
ins
and
adc
dec
add
aad
(bad)
xor
inc
cmp
jnp
mov
fadd
aad
xchg
jne
push
push
lds
out
or
xor
sbb
std
mov
xchg
or
or
repz
lock
test
fist
mov
ret
mov
aaa
iret
imul
mov
sub
push
mov
inc
jo
jno
sbb
ss
(bad)
mul
xchg
mov
cld
adc
sub
jne
gs
scas
clc
cmp
inc
xor
out
aam
push
outs
dec
stos
sar
stos
sbb
dec
jmp
in
pop
xchg
push
sub
sub
scas
inc
std
adc
xor
mov
inc
jo
cli
push
adc
pop
and
mov
jns
xor
(bad)
(bad)
test
rcr
adc
lds
pusha
fcomp
mov
shl
js
cmps
loopne
sbb
adc
fisubr
mov
pop
loope
lods
(bad)
cmp
enter
aas
inc
mov
int
push
into
push
cmps
(bad)
push
jmp
jnp
and
arpl
daa
adc
push
sbb
push
sbb
or
out
cmp
ror
mov
or
int3
xor
sbb
icebp
and
push
sbb
test
push
xor
in
sbb
cmp
xchg
out
sti
sbb
fidiv
movs
adc
xlat
(bad)
cmc
clc
jmp
dec
mov
mov
adc
jmp
outs
call
jecxz
push
dec
les
xchg
or
mov
mov
jg
pop
mov
popa
adc
pop
iret
xor
or
jns
jae
mov
addr16
mov
jp
ss
fwait
into
(bad)
scas
(bad)
loop
repz
outs
ror
xchg
dec
sbb
mov
xchg
rcl
stos
push
mov
sbb
cmp
mov
nop
in
inc
jo
(bad)
stc
ins
ss
pop
pop
clc
stc
sti
and
adc
jno
lock
push
test
jnp
add
rcl
mov
cdq
cli
clc
jne
ss
(bad)
pop
inc
mov
dec
sbb
test
xlat
outs
cmps
ss
scas
(bad)
(bad)
call
lods
push
mov
jo
or
bound
or
inc
jb
adc
or
sbb
cmp
popa
xchg
mov
push
daa
mov
retf
bound
pop
jl
or
or
and
mov
fidivr
pusha
mov
adc
addr16
iret
mov
xchg
test
leave
std
cmp
mov
sub
push
imul
(bad)
cmp
adc
mov
inc
fldcw
inc
cmp
mov
jno
dec
out
xchg
sbb
das
in
mov
(bad)
sti
pop
and
in
dec
mov
test
jns
lods
js
test
aaa
ret
or
xor
in
jmp
mul
adc
aaa
mov
jns
and
pop
pushf
mov
mov
cmp
call
imul
jae
sbb
fbstp
mul
pop
fsub
fsub
mov
push
lods
ret
pusha
xchg
jns
adc
dec
mov
pop
and
pushf
ja
mov
xor
pusha
inc
jno
push
mov
adc
mov
mov
cmp
(bad)
or
std
movs
leave
xchg
or
jg
shl
mov
pushf
and
out
push
push
jmp
sbb
mov
mov
add
dec
(bad)
hlt
stos
pop
mov
mov
cdq
retf
pop
push
sbb
and
imul
sar
imul
cmp
out
arpl
jb
cmps
outs
aas
inc
popaw
cmp
jb
inc
neg
ret
mov
arpl
call
sahf
mov
mov
mov
es
aam
imul
cmp
cmp
or
jns
pop
jl
cvtps2pi
das
or
pushf
ret
dec
std
push
push
pop
and
out
loopne
sbb
loopne
jl
xchg
jle
(bad)
push
and
cmps
das
mov
arpl
and
push
rol
push
jne
in
sar
pop
call
jg
(bad)
or
dec
daa
addr16
ret
cmp
out
cmc
sbb
add
retf
scas
and
pop
xchg
mov
into
cmp
cmp
dec
dec
inc
jp
sbb
xor
in
or
loope
jnp
and
xor
dec
jnp
cmp
sbb
fadd
out
loopne
pop
jle
push
dec
add
cld
shl
movs
cmp
adc
jns
xchg
fdiv
int3
adc
test
dec
lods
mov
ret
in
aaa
mov
stos
xlat
jbe
mov
xlat
push
cs
stc
pop
push
dec
add
push
inc
out
hlt
stos
enter
push
jp
cli
sub
sbb
and
pop
and
xor
cld
mov
sbb
aas
adc
rcl
jmp
mov
and
das
xchg
and
sub
pop
add
out
arpl
stc
shl
das
add
cmps
arpl
clc
add
sub
movs
mov
and
mov
xchg
adc
push
ffree
adc
xchg
push
retf
sbb
aaa
inc
dec
push
cmp
lds
xchg
mov
jnp
mov
add
inc
neg
inc
mov
sahf
sub
aas
cmc
inc
dec
jb
pop
fst
js
adc
push
fcmovnb
xor
popf
mov
dec
test
stc
pop
xor
pop
sahf
jg
or
or
(bad)
mov
pop
pop
ins
int
fld
inc
xor
cmp
add
stos
gs
mov
cmp
pusha
test
pushf
mov
jmp
pop
xlat
and
ins
mov
test
jle
pop
and
xchg
adc
and
push
dec
mov
push
push
ja
add
ins
rol
dec
dec
stos
cmp
sub
push
pop
ror
or
pop
dec
lods
mov
pop
sar
das
scas
nop
jge
retf
push
rcl
xlat
div
ja
adc
inc
cmp
cmp
cmp
outs
icebp
cmp
push
xchg
loopne
xor
add
or
inc
and
mov
div
push
sub
les
out
mov
jo
jl
enter
add
std
ret
pop
add
push
inc
push
add
jl
pushf
dec
and
clc
jle
repnz
mov
adc
mov
test
sub
pop
rol
mov
out
sbb
mov
(bad)
mov
and
mov
gs
xor
popa
mov
xor
inc
fs
xchg
xchg
ins
pop
push
and
push
or
pop
mov
push
in
test
mov
mov
xor
jge
xor
xchg
cld
retf
push
xchg
pop
mov
jmp
and
(bad)
pop
mov
push
and
sub
lock
loopne
jae
cs
xor
popf
inc
rcl
push
ins
add
sbb
jecxz
dec
cmp
sub
pop
stc
aas
sti
dec
cmp
or
clc
cdq
in
retf
fwait
cld
inc
or
(bad)
dec
ss
jbe
outs
enter
xlat
jnp
add
mov
test
das
add
std
dec
sbb
stos
shl
pop
pop
adc
sahf
mov
jmp
les
mov
fsubr
mov
bound
push
add
xchg
cmp
call
test
mov
and
add
sub
jg
mov
push
dec
push
mov
pop
jb
push
inc
outs
sub
pop
mov
add
pop
mov
scas
push
jge
xchg
pop
ins
repnz
cmp
push
rcl
aaa
sbb
jge
sub
or
inc
popa
jp
xor
push
add
push
sahf
jne
cmc
es
pushf
and
ja
adc
icebp
and
and
pop
cmp
adc
cmc
repnz
repnz
and
xor
stc
(bad)
jo
mov
add
outs
inc
mov
clc
imul
neg
push
aaa
push
mov
jb
pushf
and
in
and
leave
call
aaa
pop
stc
je
mov
ins
rcl
inc
xor
sti
cmp
adc
jle
hlt
mov
mov
mov
ins
dec
adc
fld
add
xor
aaa
shr
loop
hlt
xor
mov
dec
dec
sub
or
mov
and
or
push
mov
cdq
xchg
xchg
addr16
test
enter
js
xchg
xchg
das
dec
push
push
push
mov
not
mov
std
inc
nop
push
inc
aad
scas
(bad)
xchg
loopne
mov
mov
repnz
sub
ja
jne
into
scas
mov
cmp
pusha
hlt
test
sahf
int
test
mov
std
push
xrelease
mov
xor
shl
jne
popa
test
pusha
mov
pop
cmp
lods
mov
mov
jg
fldenv
fisub
sub
fsub
data16
ds
xor
or
mov
and
fld
pushw
cs
adc
hlt
sar
rol
push
mov
data16
cmc
mov
out
add
movs
inc
sbb
popa
les
xor
pop
imul
add
fiadd
lea
pop
je
xor
mov
dec
shl
add
outs
xor
mov
sti
pop
pop
cmp
fs
mov
jecxz
xchg
fistp
or
adc
inc
rcr
call
mov
dec
cmp
shr
sete
cli
inc
jno
cmp
pop
xor
mov
stos
loop
fnstcw
sub
sbb
mul
ret
adc
push
pop
in
mov
xor
rcl
push
aas
inc
mov
addr16
ja
inc
jp
cli
sbb
cmps
cmps
push
push
dec
mov
outs
scas
lds
arpl
std
stos
push
jno
loop
pushf
cmp
xchg
cs
fistp
or
popa
mov
push
aas
inc
add
and
icebp
jno
je
push
cmp
push
mov
mov
sub
sub
test
or
dec
out
rcl
test
pop
pop
aas
fidivr
ret
lds
xor
sbb
in
(bad)
xor
test
xor
or
push
ds
jmp
cmp
stc
xchg
add
mov
das
fwait
push
mov
imul
dec
retf
(bad)
push
and
outs
jecxz
xchg
mov
rol
iret
js
or
inc
push
and
adc
arpl
inc
push
jp
sahf
pop
push
arpl
pop
pop
or
icebp
adc
in
add
adc
cwde
mov
dec
pop
and
stc
fdiv
ror
pop
xchg
js
cmp
paddusb
shr
sar
mov
int3
mov
or
or
into
adc
mov
ds
add
dec
(bad)
xchg
sbb
pusha
(bad)
call
and
pop
mov
fst
or
data16
push
xchg
cld
xor
jge
aas
adc
cmp
pusha
ret
jge
xchg
ror
push
mov
inc
xor
dec
les
xchg
pop
(bad)
fmulp
adc
sub
lds
pop
pusha
bound
out
stc
and
bswap
push
fldenv
mov
ret
or
pop
jl
enter
in
and
mov
rep
jae
jp
mov
enter
inc
cmp
dec
ret
xchg
cmp
sub
repz
in
shl
ret
shl
test
std
cmp
add
or
mov
lds
or
pop
cmp
cmp
enter
jbe
push
mov
inc
in
pop
jae
jno
aam
popf
xchg
inc
fisttp
cmp
or
(bad)
mov
mov
mov
sti
shl
mov
xor
jb
lahf
cs
add
lock
sub
hlt
nop
adc
and
pop
mov
nop
fldenv
movs
addr16
jge
loop
xchg
dec
cli
iret
mov
xchg
add
dec
dec
dec
lahf
test
jno
outs
test
mov
dec
int3
ins
cmp
adc
stos
rcr
je
xchg
dec
and
fcmovu
loop
into
out
test
mov
mov
leave
cli
scas
int
aam
xor
repz
add
sbb
nop
je
pop
mov
out
(bad)
call
iret
std
arpl
inc
mov
or
sbb
mov
cmp
or
inc
fwait
(bad)
shl
mov
(bad)
jne
pusha
mov
push
push
push
sub
or
mov
xor
mov
adc
lock
(bad)
adc
hlt
mov
adc
sub
adc
fdivr
mov
mov
ss
call
call
mov
imul
pop
(bad)
(bad)
jg
mov
into
fs
cmp
fbld
or
adc
loopne
adc
sub
and
jg
mov
or
pop
push
inc
cld
mov
add
ret
sub
and
popa
out
and
lods
pop
cdq
sub
jne
mov
pop
rcl
mov
and
inc
sbb
mov
hlt
pusha
xor
jo
sahf
loopne
adc
push
xlat
bound
loop
mov
or
popa
push
push
dec
fcmovu
fcmovu
cmp
pop
fidiv
in
and
pop
mov
mov
(bad)
pop
mov
sbb
pop
sub
(bad)
gs
and
out
sahf
movs
push
stos
xor
push
rol
and
mov
xor
ror
lahf
inc
dec
dec
int
imul
shl
mov
fild
mov
pop
test
xchg
mov
inc
add
jnp
add
sbb
xchg
adc
ins
pushf
(bad)
test
pop
mov
dec
xchg
or
push
test
sbb
call
out
sbb
lock
add
cmp
js
push
(bad)
pop
mov
hlt
repz
nop
nop
xchg
or
(bad)
cmps
loop
inc
int3
dec
xor
push
fsubp
repz
ins
mov
sub
icebp
push
adc
adc
dec
(bad)
push
pop
pushf
jge
lea
int
pop
jge
or
and
sbb
inc
jb
adc
jae
dec
jns
int
cmps
push
xor
jns
out
inc
popa
(bad)
stc
jl
scas
adc
fidiv
jbe
(bad)
lock
and
mov
mov
test
stc
mov
arpl
enter
sub
jmp
out
cmp
lea
xchg
repnz
cli
cmp
xchg
pop
mov
aad
sbb
add
nop
hlt
and
es
lds
popf
aas
mov
neg
add
mov
aad
mov
in
pop
add
iret
les
mov
(bad)
addr16
fsubr
push
adc
pop
jp
mov
inc
adc
mov
mov
(bad)
fild
sbb
sahf
mov
sti
ins
shl
sub
sbb
outs
and
mov
add
aad
mov
jae
ret
shl
push
call
mov
inc
in
pop
dec
push
out
stc
enter
sar
in
shl
xor
mov
inc
rcl
sub
push
and
pop
cmp
mov
hlt
push
and
jae
jecxz
or
daa
fdivr
add
lods
sbb
xchg
arpl
adc
and
xchg
jg
in
mov
push
ror
aas
pop
pop
dec
push
stc
fwait
xchg
sahf
mov
inc
out
mov
xor
call
inc
push
mov
inc
retf
jb
cli
pminsw
jo
fld
stos
movs
out
test
aam
sbb
sbb
mov
cmp
or
shr
push
pop
test
pop
movs
inc
push
imul
ja
loopne
cmps
sahf
call
xor
push
push
pop
(bad)
mov
mov
jle
sbb
cmp
adc
jmp
inc
adc
adc
push
popa
pop
xchg
mov
push
fwait
mov
arpl
pop
jg
outs
loope
add
cdq
add
fcomp
sub
movs
not
push
leave
cdq
push
jg
sbb
pop
lods
cmp
test
retf
add
mov
mov
into
clc
jle
inc
cmp
or
scas
mov
loopne
pop
cmp
pop
jne
scas
stc
xor
fnstenv
xor
sti
out
loopne
arpl
fidiv
popf
push
jmp
lock
cmp
adc
xchg
jnp
je
enter
sbb
pop
or
jae
dec
enter
ss
mov
mov
nop
in
ins
mov
sub
rcl
push
hlt
pop
and
push
sahf
imul
xabort
nop
inc
cmp
fnstenv
test
aad
adc
fsubr
mov
mov
mov
loope
jnp
cmp
sbb
inc
(bad)
cs
mov
movs
add
xchg
test
out
out
pop
push
mov
or
adc
dec
dec
dec
retf
fcmovne
test
daa
cmp
jns
into
into
mov
jo
mov
call
mov
sahf
mov
ror
call
cmps
test
repz
push
jo
jl
shl
loope
mov
mov
pushf
cmp
sub
aam
les
xchg
xchg
xchg
lea
mov
xchg
sbb
inc
inc
ret
jo
les
cwde
cmp
ss
std
ds
test
pop
repz
rcl
es
mov
dec
xlat
out
mov
mov
fnstsw
cdq
into
cld
pushf
jb
xor
xor
loop
sub
mov
push
and
(bad)
and
xchg
fsubr
mov
pop
jns
out
outs
bound
xor
mov
fmul
xchg
sahf
sti
mov
jbe
cmps
xchg
icebp
pop
push
cmp
or
jo
imul
outs
mov
sub
repnz
loopne
pop
stos
std
inc
mov
movs
imul
sbb
xor
xchg
in
sbb
dec
lock
cmp
out
or
and
jmp
popa
test
test
xchg
dec
jle
add
retf
xchg
and
cmp
mov
add
test
jb
mov
cmp
and
sbb
fs
test
pop
jle
pop
pop
pop
sbb
bound
fsub
jp
dec
mov
mov
call
jmp
std
xchg
push
add
imul
mov
(bad)
push
sti
ins
lock
mov
pop
add
dec
or
fwait
pop
cmp
test
inc
jno
repnz
pop
mov
inc
dec
das
add
or
jmp
cwde
pusha
mov
xchg
mov
popf
mov
mov
pop
and
pop
cli
adc
cmp
arpl
das
inc
push
jae
hlt
sub
iret
test
jb
and
cdq
daa
mov
mov
add
cmp
push
and
pop
or
push
sub
cmp
ret
mov
pop
mov
in
mov
clc
sub
dec
dec
jle
jbe
outs
repnz
retf
lahf
das
ficom
xlat
fild
scas
cmp
mov
adc
shl
fimul
dec
ror
je
push
mov
push
sbb
cdq
ret
loopne
inc
adc
scas
add
retf
out
xchg
adc
sub
and
(bad)
pop
fwait
arpl
int3
mov
push
sbb
dec
fsub
cli
ins
cmp
inc
jo
in
xchg
xchg
hlt
test
cmp
ds
ror
jae
xchg
adc
pop
bound
or
stos
pop
repz
xlat
iret
or
mov
sbb
cmp
test
mov
test
pop
dec
mov
repnz
out
mov
addr16
test
adc
in
add
(bad)
pop
mov
shl
dec
inc
add
enter
test
jae
nop
xchg
test
fbstp
xor
rcr
pop
xor
cmp
dec
iret
int3
inc
jp
ja
add
mov
dec
ss
inc
dec
or
clc
in
pop
sub
scas
pushf
mov
pop
jne
pop
test
adc
stc
jno
push
jno
add
dec
mov
mov
popf
add
mov
pop
cdq
push
mov
pop
ror
ror
mov
and
adc
(bad)
loopne
ss
xchg
pop
add
call
push
enter
jl
and
loop
mov
pop
mov
jbe
mov
and
movs
cmps
xchg
(bad)
fdivr
fldcw
rol
retf
cmps
dec
ret
lods
fnstenv
lods
pop
mov
xor
ror
lods
fistp
and
(bad)
neg
jge
mov
add
pop
lea
repnz
inc
jbe
addr16
loop
mov
repnz
mov
into
lahf
xchg
dec
lahf
push
sub
inc
shl
adc
lahf
out
(bad)
bound
pop
pop
pop
arpl
cld
stc
xor
mov
in
sbb
push
adc
pushf
cs
call
mov
(bad)
leave
loopne
repnz
mov
adc
and
arpl
adc
xor
push
pop
imul
adc
ficom
mov
jno
sub
hlt
sub
stc
inc
inc
xchg
into
jmp
pop
mov
xchg
add
cmp
ins
add
ins
(bad)
es
push
ja
push
pop
push
push
call
aas
inc
in
fisttp
sahf
jge
stc
mov
inc
out
adc
ret
retf
in
pop
and
cmp
push
add
or
and
mov
jo
or
mov
int
dec
mov
or
jmp
jmp
in
dec
cld
xor
iret
pop
or
addr16
mov
mov
xor
xchg
shl
push
xor
repnz
push
jmp
out
jle
push
subps
adc
inc
(bad)
ror
shl
lds
or
aad
add
add
push
fwait
pop
push
ret
in
add
lock
and
(bad)
outs
mov
pop
adc
inc
shl
pop
je
push
aas
adc
inc
mov
dec
cmp
(bad)
mov
xlat
je
and
call
lahf
push
pop
ins
jno
jns
in
ret
and
pop
int3
xor
ret
cmpxchg
mov
dec
xchg
fcmovnb
pop
stc
or
cmp
loop
mov
mov
sub
xor
mov
inc
and
mov
adc
xlat
jp
fidiv
xchg
inc
pop
inc
xchg
sub
gs
ret
sub
cmp
sub
das
lds
pushaw
xlat
cld
inc
js
mov
add
aad
xchg
jmp
in
in
pop
lock
cmp
in
retf
dec
or
sbb
cmp
push
aam
jnp
jo
add
sar
cmps
outs
cmp
xchg
push
mov
(bad)
neg
stos
pop
icebp
pop
lods
jp
jmp
rol
sub
(bad)
xchg
std
push
push
push
cmp
adc
jecxz
jge
scas
(bad)
jmp
xchg
call
jmp
sbb
mov
dec
into
sar
and
cmp
mov
(bad)
jmp
mov
mov
jecxz
outs
stos
xor
adc
xor
vmaxss
es
test
movs
push
rcr
push
mov
addr16
gs
jl
mov
bound
call
adc
movs
jecxz
mov
movs
cmps
mov
test
cdq
inc
sbb
jecxz
shl
and
in
shr
cmp
sbb
fist
mov
movs
pop
cdq
cmps
lock
gs
out
pop
shl
or
adc
aam
inc
push
dec
mov
hlt
mov
test
loope
dec
dec
dec
sub
cmp
jns
movs
sbb
xchg
movs
mov
jae
bnd
sbb
pushf
les
ret
mov
loopne
clc
jle
not
cmc
daa
pop
pop
mov
cmp
aaa
inc
sar
std
pop
jno
fidivr
push
mov
dec
fadd
gs
sbb
mov
sub
aas
rcr
dec
fcomp
mov
mov
jns
sub
lock
retf
pop
test
sbb
mov
(bad)
scas
inc
je
xor
cmc
cmc
lds
push
pop
and
dec
popf
cmp
(bad)
cmp
rcl
shr
dec
icebp
nop
pop
fstp
and
adc
jo
(bad)
hlt
dec
ds
xchg
inc
retf
sub
push
sub
aas
hlt
mov
pop
test
mov
sti
out
loop
or
mov
xor
pop
and
or
idiv
push
xchg
leave
cwde
stos
lea
jne
neg
or
adc
pop
mov
mov
in
mov
fisttp
aaa
jo
mov
lock
or
iret
ds
jns
pcmpeqb
call
mov
push
push
nop
pushw
outs
push
ret
push
push
mov
test
dec
loope
xchg
add
fimul
cmps
je
outs
(bad)
or
aas
dec
jo
xchg
test
jl
ins
movs
and
ret
nop
in
pop
scas
je
bound
sbb
xchg
leave
cmps
pop
push
jp
sbb
xor
pushf
xchg
test
add
(bad)
iret
mov
ss
je
call
or
cs
xor
outs
sub
push
sub
mov
sub
add
and
sub
jnp
push
pop
push
sbb
xor
imul
mov
xor
scas
mov
inc
cld
push
and
or
(bad)
mov
call
mov
jp
cmp
jnp
fwait
lea
cdq
loopne
js
mov
xchg
aam
les
lock
jecxz
sub
bound
or
add
mov
cs
cs
cld
xadd
scas
mov
and
call
add
pop
out
pusha
mov
sbb
std
sbb
ins
cmp
jmp
adc
xor
mov
and
push
sub
mov
retf
gs
ret
or
mov
fnstsw
(bad)
lock
pop
cmp
push
dec
sbb
jle
pop
cmp
mov
fld
inc
pop
jb
out
mov
inc
push
pushf
push
xchg
add
mov
adc
xchg
adc
stos
test
jae
call
xchg
xchg
xchg
mov
aad
inc
out
test
call
test
sub
out
mov
xor
adc
rep
(bad)
lods
or
int3
and
xchg
ror
mov
call
xor
and
dec
cmp
stos
adc
ins
pushf
cmp
std
test
nop
mov
xchg
xor
inc
lahf
iret
test
mov
(bad)
arpl
and
sub
mov
xor
xchg
loope
pop
cmp
sub
xlat
aaa
and
mov
int3
daa
xchg
push
inc
pop
rcl
mov
pop
(bad)
cmps
and
rcl
adc
xor
mov
jmp
mov
jb
jbe
xlat
fdivr
add
sub
adc
xchg
dec
adc
clc
pop
pop
loopne
call
fcomi
shr
clc
in
loope
inc
out
and
aas
sbb
sbb
retf
mov
aas
sub
or
mov
(bad)
jge
les
aam
inc
jb
test
sub
inc
scas
pop
mov
and
rol
rcl
push
and
jne
cmc
stos
js
ins
aaa
(bad)
xlat
mov
rcr
int
xor
mov
cs
cmp
add
or
or
imul
or
mov
mov
rcl
mov
or
mov
or
lock
jge
mov
test
pop
mov
adc
xlat
push
ss
or
jbe
pusha
icebp
xchg
xlat
jns
mov
sub
test
repz
adc
test
iret
iret
das
dec
retf
bound
pop
jnp
push
sbb
test
mov
push
xlat
sbb
pop
jno
repnz
aam
jns
sbb
out
mov
mov
push
jle
data16
cmp
sub
fisttp
push
mov
xlat
rcr
test
call
mov
jmp
adc
mov
(bad)
(bad)
mov
sub
pop
pop
test
cmp
fwait
jp
pop
or
or
bswap
iret
mov
cmps
loope
sub
ds
mov
inc
ds
movs
xor
fidiv
and
(bad)
pop
fild
push
sbb
cmps
data16
mov
xor
or
das
push
rcl
xor
cmp
dec
lds
mov
add
sub
(bad)
jge
mov
inc
mov
cmp
mov
repnz
out
rcl
popa
and
mov
mov
dec
in
xchg
(bad)
lahf
(bad)
(bad)
and
xchg
sti
mov
loope
in
repz
cmp
stc
cmp
adc
mov
mov
ret
icebp
cld
sbb
retf
mov
mov
stc
mov
sbb
xchg
add
mov
ds
xchg
xchg
or
add
mul
add
ins
(bad)
and
sti
ins
pop
mov
(bad)
or
mov
inc
push
inc
ins
(bad)
jae
js
(bad)
icebp
jle
out
dec
xor
sbb
mov
or
cmp
loopne
in
add
jno
cmc
jge
cmp
mov
daa
data16
(bad)
adc
das
jmp
xlat
test
xor
pop
pop
das
gs
cmp
inc
add
xlat
xor
rcr
inc
test
add
aas
mov
xor
sub
test
jge
cmp
mov
add
jbe
jno
xor
retf
test
fwait
adc
or
stc
sti
cmp
cs
sub
xor
and
jp
sub
push
jno
adc
and
push
hlt
in
pop
in
inc
mov
scas
add
and
fisub
dec
dec
jecxz
mov
mov
cmp
push
ins
fldcw
cmp
sar
xor
inc
mul
jmp
sti
repnz
inc
cld
sbb
xchg
test
mov
dec
push
push
push
push
mov
xchg
fld
arpl
scas
lock
mov
jle
jmp
pop
jecxz
loope
mov
aas
fdivr
clc
push
sub
cmc
repz
mov
mov
outs
std
pop
mov
fucomi
(bad)
outs
sar
push
das
pop
mov
inc
pop
xchg
es
(bad)
adc
mov
push
push
add
bound
pop
inc
xchg
mov
cmp
jge
adc
xlat
scas
out
das
ins
fidivr
mov
sub
xor
and
and
fdivr
sahf
out
lock
or
cmp
repnz
nop
fdivp
push
leave
loopne
retf
cmc
data16
and
adc
lea
pusha
test
mov
jo
inc
mov
les
inc
outs
inc
outs
dec
mov
xor
lock
cld
adc
pushf
(bad)
(bad)
mov
pop
pop
mov
ins
mov
test
mov
dec
call
cmp
jo
or
loop
xchg
ret
(bad)
pop
(bad)
or
in
aam
rcl
daa
dec
mov
cmps
fs
call
jp
bound
(bad)
cmp
loope
sti
mov
das
or
cmps
and
mov
and
js
mov
daa
loope
mov
scas
dec
cld
sub
pop
ror
push
fisttp
xchg
xor
addr16
push
push
aaa
mov
or
adc
retf
jecxz
mov
sbb
mov
ret
xor
movs
rcl
dec
fisttp
mov
and
or
pop
add
mov
aas
lods
into
test
pusha
lock
fmul
imul
sub
push
or
outs
and
sbb
rcr
jno
(bad)
jns
aas
in
into
loop
loope
jno
or
aam
iret
or
mov
(bad)
sub
imul
push
jno
and
push
and
sbb
inc
sahf
and
and
rcr
(bad)
mov
xchg
inc
jmp
ds
push
popf
mov
or
mov
aam
dec
retf
inc
bound
adc
xchg
xchg
inc
lods
push
mul
mov
mov
inc
loope
add
push
call
xchg
js
out
fdivr
hlt
push
iret
inc
loope
(bad)
sbb
mov
mov
push
call
and
daa
and
daa
adc
or
xchg
shl
mov
in
bound
test
arpl
test
es
and
cli
call
rol
adc
nop
daa
sub
push
scas
pushf
add
hlt
pop
mov
jge
in
jp
int3
int
sar
add
out
jmp
lea
push
pop
cmp
aad
out
or
sbb
les
daa
push
cmp
pop
pop
adc
jns
jle
xchg
in
aaa
fmul
iret
pop
in
fcomi
nop
sbb
icebp
push
pop
fs
ins
ins
jns
imul
mov
mov
cmp
cmp
and
lods
lods
add
push
pop
dec
xor
lea
cmp
adc
inc
jo
pushf
cmps
lds
xchg
loopne
mov
in
or
fidiv
jo
mov
inc
fisubr
mov
iret
sbb
jecxz
or
xchg
mov
and
inc
in
push
xor
push
push
sub
out
and
test
mov
adc
sub
ins
idiv
fcom
and
inc
fdivr
adc
icebp
retf
cmc
shl
iret
inc
loope
enter
pop
cmps
shl
jecxz
sub
mov
outs
jb
mov
sbb
fistp
and
(bad)
cld
sbb
fs
jp
jp
stos
push
ins
and
mov
test
mov
jmp
fstp
pop
mov
cld
mov
scas
dec
rol
test
sub
ins
sub
aad
push
mov
mov
retf
push
push
(bad)
fbstp
dec
pop
fwait
mov
pop
shl
push
retf
leave
jno
repnz
push
xchg
jle
ds
popa
sahf
jle
ret
sbb
xor
sbb
ds
lds
bound
sub
ror
adc
jb
sbb
and
push
adc
je
sbb
push
push
inc
mov
xchg
sbb
push
push
dec
sbb
mov
int
sub
add
add
jae
int3
xchg
pop
push
add
push
xchg
(bad)
xchg
out
sub
enter
test
pop
add
add
enter
arpl
sbb
pop
mov
add
adc
cmps
ret
test
xchg
sub
fcmovu
fist
jb
or
xchg
jl
loopne
and
movs
mov
pop
movs
mov
or
repnz
fstp
pop
das
pop
dec
push
push
push
pop
dec
push
loope
push
jecxz
icebp
nop
push
pop
pop
cwde
xor
clc
jo
xor
inc
pop
pop
aas
mov
pop
or
inc
jo
cmp
dec
or
pop
xor
loop
sbb
pop
das
cld
enter
daa
mov
push
dec
dec
dec
inc
inc
adc
add
sub
sub
bound
xlat
lea
addr16
mov
mov
adc
daa
not
jno
pushf
js
xchg
sar
jnp
icebp
loop
cmp
fwait
xlat
mov
popa
mov
das
pop
in
pop
mov
jne
inc
ret
mov
mov
mov
jns
or
xchg
cmps
mov
adc
sub
lods
movs
xor
push
mov
mov
repz
push
mov
cwde
xor
xchg
mov
and
test
sub
sar
in
test
sub
xchg
add
xchg
out
neg
mov
mov
test
or
adc
fimul
jmp
loop
cmps
cmps
cmps
shl
xchg
or
or
ins
sar
jae
aam
adc
(bad)
ror
in
jne
sbb
xchg
jp
fimul
xor
loope
cmp
mov
inc
daa
popa
mov
xchg
xor
retf
xchg
sub
and
imul
ret
sub
je
retf
out
mov
out
addr16
out
out
sub
and
gs
sub
lea
sub
pop
data16
arpl
in
xchg
sub
inc
mov
stos
push
imul
rcl
push
out
or
aam
in
jae
addr16
push
and
push
xchg
retf
and
mov
movs
ret
icebp
int
push
rcl
add
dec
sahf
retf
(bad)
mov
pop
sub
cmp
pop
and
add
shl
sub
test
adc
add
mov
mov
(bad)
xchg
(bad)
popf
and
movs
dec
cmp
test
adc
pop
icebp
mov
xor
(bad)
and
mov
aam
sub
jae
sbb
cmp
add
jae
mov
aad
shl
mov
xchg
std
dec
mov
pop
push
pop
test
retf
jmp
pop
imul
cmp
push
ins
inc
icebp
test
push
mov
mov
inc
call
or
(bad)
jmp
add
addr16
add
lds
mov
dec
and
leave
pushf
sahf
mov
stos
push
scas
fldcw
mov
jge
in
fdiv
xor
xor
push
push
sub
add
jmp
fcos
and
in
(bad)
test
add
push
les
sbb
push
mov
push
scas
push
movs
shl
push
leave
leave
adc
adc
inc
jbe
ins
cmp
test
push
xchg
pop
sub
push
inc
cmps
inc
popa
aam
push
and
xchg
loope
outs
retf
xchg
and
arpl
push
lods
or
or
and
cs
inc
test
sbb
in
lea
or
sbb
xchg
jmp
or
add
pop
sar
outs
(bad)
cmps
inc
inc
adc
adc
pop
aas
push
vorps
addr16
in
ret
or
test
imul
xor
pop
scas
jp
lahf
dec
mov
mov
mov
cmp
xchg
mul
test
lds
jbe
retf
push
cs
fcmovbe
pusha
js
sbb
and
push
stc
cdq
push
xchg
hlt
fnstenv
sub
xchg
jle
icebp
sbb
(bad)
mov
loope
dec
sub
loop
cmps
or
mov
cmp
and
enter
pop
sahf
loopne
mov
test
push
cmp
test
or
pop
std
pop
call
stos
ficomp
push
sub
addr16
xchg
(bad)
or
test
inc
into
lods
fmul
retf
icebp
sub
inc
mov
jnp
stos
push
stos
(bad)
mov
mov
imul
jmp
cli
(bad)
sti
pop
dec
sbb
lahf
aad
jle
fldcw
arpl
push
imul
jae
aam
repnz
(bad)
pushf
pop
xchg
stos
into
cli
scas
jle
popa
in
xchg
out
xchg
lahf
pop
push
push
jnp
cmp
pusha
xchg
jmp
test
xchg
pop
jmp
jp
push
xchg
(bad)
mov
nop/reserved
nop
ins
std
cli
cmc
cmc
or
mov
inc
adc
sbb
in
cs
inc
xor
mov
aad
adc
xchg
push
aad
push
arpl
jmp
rcl
call
test
je
movs
inc
loope
inc
iret
loopne
jb
retf
lock
inc
push
dec
repz
cmc
enter
test
jb
faddp
xchg
popf
sbb
mov
mov
stos
scas
lods
inc
mov
push
lods
ficomp
add
(bad)
sub
or
jg
retf
and
ja
mov
imul
sbb
repnz
imul
imul
neg
(bad)
(bad)
test
out
push
cs
clc
aas
mov
aad
push
in
test
inc
movs
cmpps
leave
pop
scas
mov
outs
cwde
das
and
and
inc
sti
dec
retf
dec
cmp
les
pop
cmp
mov
je
stos
push
pop
test
loope
inc
jae
jae
neg
(bad)
(bad)
pop
inc
dec
dec
das
arpl
cld
stc
push
push
push
sbb
sahf
jecxz
sbb
adc
cs
ret
popf
pop
mov
and
sub
adc
fsubr
or
lds
and
cwde
mov
inc
loop
call
xchg
pop
pusha
lds
rcl
adc
repz
fidiv
retf
nop
icebp
cs
(bad)
fwait
aad
(bad)
loop
loop
dec
jp
mov
mov
fmul
mov
sbb
imul
and
add
lahf
and
jle
nop
pop
push
test
popa
add
cmp
dec
jnp
sar
push
stc
aaa
mov
cmps
push
mov
pop
pop
cmps
push
jmp
push
sbb
xchg
mov
sub
dec
iret
pop
dec
std
dec
inc
dec
jl
imul
out
fidivr
xor
mov
popa
movs
fisttp
adc
(bad)
les
aad
aad
sub
dec
jge
mov
mov
push
xchg
clc
repz
push
ins
daa
lods
daa
int
jno
ss
xor
fisubr
xchg
and
adc
pushf
jg
int
pop
jg
out
std
fwait
(bad)
dec
and
pop
xchg
mov
mov
dec
adc
repz
sbb
cdq
stc
mov
ret
retf
nop
retf
jae
cmp
mov
xchg
sub
outs
push
mov
int
aam
fild
pop
mov
mov
stos
sub
xchg
mov
jne
scas
xor
das
and
mov
mov
xchg
mov
int3
pop
popa
jb
adc
and
jecxz
and
push
jecxz
adc
and
(bad)
cmp
ret
ret
jo
nop
cld
sbb
jo
xchg
cdq
xchg
jecxz
sub
sbb
push
or
jnp
outs
cmp
jge
or
(bad)
mov
in
xchg
jecxz
xchg
out
imul
clc
fxam
int3
int
xor
ret
sar
mov
(bad)
jo
inc
enter
inc
les
mov
mov
movd
push
pop
out
xor
bound
stc
sbb
pop
mov
repz
ins
dec
aas
cmp
push
sbb
imul
mov
jo
and
fldcw
fs
cli
xchg
loope
xchg
dec
inc
xchg
mov
std
inc
jmp
test
dec
out
rcl
and
stc
sbb
sub
jmp
loope
xchg
retf
pop
lds
test
iret
mul
fild
push
daa
aaa
into
mov
rcl
inc
push
mov
xor
jae
push
imul
aas
mov
lods
pop
xchg
lock
in
loop
out
jo
scas
call
xchg
out
dec
loope
rcr
(bad)
mov
faddp
(bad)
iret
ja
xchg
out
xlat
and
jle
mov
movs
movs
mov
xchg
push
add
ins
dec
and
add
sub
das
xchg
dec
dec
cmp
(bad)
lods
fwait
je
in
pop
sub
cmp
stos
loop
in
xor
aaa
imul
inc
repnz
or
pop
push
or
sti
aaa
mov
pop
fsub
test
mov
loop
push
je
in
cmps
dec
or
fmul
rcl
mov
sbb
imul
enter
adc
loopne
and
push
add
pop
xchg
sbb
stc
lahf
sub
add
in
iret
loop
mov
xchg
stc
add
jecxz
lea
mov
mov
jl
mov
cdq
cdq
push
ins
ins
lods
call
pop
xchg
fimul
aas
(bad)
mov
(bad)
sub
rcr
out
dec
sbb
push
stos
jmp
lods
mov
xchg
mov
cmc
fisttp
clc
(bad)
das
stos
add
leave
int
imul
imul
inc
push
inc
pushf
inc
call
retf
seta
sub
fistp
aaa
das
das
dec
(bad)
out
sbb
lahf
add
jne
cmc
(bad)
mov
mov
cdq
cld
cwde
fidiv
fnstsw
call
push
pop
mov
test
or
push
out
shl
sti
mov
cmc
movs
fisttp
xadd
aaa
jge
dec
dec
dec
das
xor
mov
sbb
fistp
push
jl
leave
pop
pop
(bad)
pop
cmp
hlt
dec
fcomip
dec
fcomip
dec
fcomip
dec
call
push
stos
in
jge
aaa
jge
aaa
jge
aaa
jge
call
push
dec
fcomip
dec
fcomip
dec
fcomip
dec
fcomip
jg
nop
(bad)
pop
mov
pop
enter
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
push
outs
fs
jae
popa
jae
jbe
jb
ret
mov
jae
je
imul
imul
jae
jae
jb
mov
ins
outs
jbe
fs
jae
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
adc
add
or
sub
push
inc
and
gs
ins
and
jo
jb
and
arpl
arpl
jo
jb
gs
cs
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
adc
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
dec
dec
push
push
inc
and
jne
ins
imul
gs
imul
outs
je
jae
fs
je
outs
and
ins
gs
popa
and
jb
ret
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
push
outs
arpl
stos
and
mov
jb
mov
jae
outs
outs
push
ins
gs
bound
je
jae
add
inc
outs
ins
jo
popa
and
outs
jb
and
outs
bound
push
and
addr16
outs
je
jae
bound
gs
lods
arpl
jae
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
adc
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jns
je
ins
cs
jb
ja
outs
addr16
outs
imul
add
jns
add
or
add
add
add
add
add
add
add
outs
outs
jae
outs
jae
popa
outs
ret
mov
jae
jae
jb
mov
ins
outs
jbe
outs
jae
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
jb
jb
inc
outs
jb
add
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
iret
outs
xchg
aam
stos
call
pop
add
hlt
pusha
adc
in
mov
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
and
je
outs
add
outs
add
je
imul
add
add
add
je
add
add
adc
add
add
jae
add
add
je
pop
add
add
add
ins
add
jne
jo
jo
ins
add
ins
add
outs
add
add
jns
dec
add
jae
je
jb
jne
arpl
je
imul
add
add
je
xor
add
sub
add
imul
add
ins
add
outs
add
add
push
add
jb
imul
add
add
je
popa
add
add
ins
add
ins
add
jb
imul
jb
jns
dec
add
popa
add
add
add
add
je
test
add
and
add
ins
add
ins
add
jne
jns
dec
add
ja
add
add
je
fadd
add
sbb
add
add
jne
jns
dec
add
ja
add
add
je
jmp
bound
ins
add
jne
add
je
imul
add
add
je
stc
add
add
ins
add
ins
add
outs
add
add
push
add
jb
imul
inc
add
jae
arpl
add
add
je
adc
add
add
imul
and
jb
lods
outs
outs
and
push
gs
add
dec
gs
bound
je
and
inc
outs
ins
jo
popa
add
and
jb
ret
mov
and
je
and
jo
jb
popa
and
ret
test
arpl
mov
jae
add
outs
jae
jb
and
outs
ret
mov
and
jae
test
and
je
jbe
and
jbe
jb
ret
mov
ins
jo
gs
and
jo
outs
addr16
ins
popa
loop
cmps
add
inc
jae
ret
mov
je
ins
imul
popa
and
jb
ret
mov
and
popa
ins
imul
and
adc
ins
jo
popa
jb
inc
outs
jb
loop
cmps
add
jb
jb
inc
outs
jb
add
dec
and
and
jae
popa
jb
popa
and
popaw
jp
jb
add
and
jae
jne
and
and
mov
and
jae
test
and
jae
jb
sub
outs
jb
sub
and
je
jbe
and
popa
jae
popa
jae
data16
arpl
outs
popa
ins
imul
add
sub
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
(bad)
mov
mov
or
mov
and
(bad)
xchg
push
mov
xchg
push
xchg
es
lods
mov
call
in
push
adc
test
xchg
pop
cmc
stos
cmp
or
xchg
jp
scas
xchg
push
mov
mov
sbb
lock
ror
ret
les
loope
in
daa
retf
aaa
jno
int3
pop
jg
int3
add
or
(bad)
lea
dec
xlat
mov
dec
xlat
lahf
jge
(bad)
test
mov
icebp
add
or
pushf
in
fwait
or
(bad)
jns
out
movs
mov
aaa
lock
mov
jne
and
or
and
pop
add
pop
add
cmps
repnz
or
sbb
or
lahf
lods
or
fistp
or
mov
nop
cmc
adc
test
imul
retf
sbb
ret
and
xchg
test
daa
mov
mov
xor
push
ds
adc
xchg
xchg
aaa
not
cmp
dec
adc
icebp
dec
inc
sbb
inc
and
dec
nop
dec
inc
test
push
adc
adc
jb
pop
jo
cmp
xor
pop
sbb
call
(bad)
mov
push
lods
add
cdq
icebp
ins
pop
mov
push
jno
ret
imul
jbe
retf
jge
add
add
push
add
add
add
mov
add
fadd
add
cmp
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
mov
add
lahf
add
add
add
add
add
add
add
leave
add
add
add
add
jbe
add
xchg
add
stc
add
add
pop
push
add
jle
add
popf
push
add
rol
add
pop
pop
add
inc
pop
add
test
add
mov
pop
add
push
or
add
add
nop
or
add
or
add
or
add
or
add
or
add
add
push
add
jae
add
pushf
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
jl
add
mov
or
add
add
jle
add
(bad)
add
or
add
or
add
(bad)
or
add
dec
push
add
jo
add
xchg
add
into
push
add
daa
sldt
js
add
lods
sldt
clc
sldt
xor
add
test
add
xlat
adc
add
adc
add
add
push
adc
add
adc
add
adc
add
add
int3
adc
add
adc
add
add
add
rcl
add
xlat
pop
add
push
inc
add
arpl
add
je
imul
dec
add
jae
jae
popa
add
add
outs
add
add
jns
push
add
add
jae
je
jb
popa
add
add
outs
add
popa
add
ins
add
add
add
add
dec
add
add
push
add
je
push
add
add
outs
add
jb
pop
add
jb
pop
add
jne
add
inc
add
js
pop
add
add
jae
imul
pop
add
add
arpl
jb
imul
imul
sub
inc
add
popa
add
add
push
add
jb
ins
add
jae
jae
imul
lods
add
add
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
add
jb
imul
add
arpl
popa
add
add
outs
add
outs
add
add
jne
outs
add
add
add
inc
add
ins
add
add
pop
add
arpl
arpl
add
jae
pop
add
add
imul
adc
add
xor
add
outs
add
add
je
imul
pop
add
jb
jb
outs
add
pop
add
jae
add
push
add
je
ins
add
daa
add
add
inc
add
jae
imul
add
add
outs
add
jo
cmp
pop
add
jne
inc
add
add
jae
imul
push
add
add
add
add
je
push
add
jb
jae
imul
dec
add
add
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
jbe
add
add
jae
dec
add
je
inc
add
imul
jnp
add
inc
inc
add
arpl
add
je
imul
dec
add
jae
jae
popa
add
add
outs
add
add
jns
dec
add
je
push
add
add
jae
je
add
add
add
add
add
outs
add
add
add
add
inc
add
jb
jne
ins
add
outs
add
add
outs
add
outs
add
add
dec
add
jae
jae
push
add
popa
add
pop
add
jb
outs
add
add
add
add
bound
pop
add
jb
outs
add
jae
add
pop
add
outs
add
add
jbe
popa
add
ins
add
bound
ins
add
pop
add
add
add
xor
push
add
add
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
outs
add
add
jb
inc
add
add
dec
add
je
inc
add
imul
cmp
add
or
add
jne
outs
add
push
add
add
je
add
inc
add
arpl
add
je
imul
dec
add
jae
jae
popa
add
add
outs
add
add
jns
push
add
push
add
add
jae
je
jb
popa
add
add
outs
add
popa
add
ins
add
add
inc
add
jb
add
popa
add
add
push
add
outs
add
ins
add
ins
add
push
add
ins
add
ins
add
je
add
dec
add
jae
je
popa
add
add
push
add
add
je
add
dec
add
popa
add
add
add
add
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
add
jb
imul
add
je
push
add
add
add
ja
add
add
jae
jae
popa
add
add
add
push
add
bound
pop
add
jb
outs
add
jae
add
pop
add
add
arpl
jb
imul
imul
xor
xor
scas
add
add
push
add
bound
pop
add
jb
outs
add
jae
add
pop
add
add
arpl
jb
imul
imul
xor
xor
cli
add
add
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
jbe
add
jae
das
add
add
add
bound
outs
add
je
xor
add
outs
add
add
jb
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
arpl
arpl
add
jae
inc
add
outs
add
add
add
add
add
outs
add
add
je
imul
push
add
push
add
jb
jbe
add
cwde
add
add
dec
add
je
ja
outs
add
imul
add
je
inc
add
popa
add
ins
add
bound
ins
add
scas
add
add
inc
add
outs
add
add
je
imul
pop
add
jb
jb
outs
add
pop
add
jae
add
push
add
je
ins
add
xor
lds
add
inc
add
ja
outs
add
add
add
dec
add
data16
fld
add
push
add
popa
add
jae
data16
jb
pop
add
popa
add
add
add
add
push
add
bound
pop
add
jb
outs
add
jae
add
pop
add
add
arpl
jb
imul
imul
xor
and
add
bound
pop
add
jb
outs
add
jae
add
pop
add
add
arpl
jb
imul
imul
xor
imul
outs
add
outs
add
add
add
inc
add
popa
add
add
pop
add
add
arpl
jb
imul
imul
mov
dec
add
je
add
outs
add
je
pop
add
jb
outs
add
jns
pop
add
jb
outs
add
ins
add
ins
add
push
add
ins
add
ins
add
je
gs
add
add
popa
add
ins
add
inc
add
jbe
imul
sub
add
pop
push
add
add
jae
add
push
add
pop
add
jne
jb
dec
add
je
add
outs
add
je
inc
add
outs
add
add
je
imul
inc
add
add
add
inc
add
popa
add
outs
add
add
dec
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
jo
popa
add
add
add
je
outs
add
inc
add
imul
jge
add
push
inc
add
popa
add
ins
add
inc
add
add
add
outs
add
je
xchg
push
add
sbb
popa
add
add
outs
add
add
add
jb
stos
push
add
inc
pop
add
jne
jb
dec
add
je
ja
outs
add
imul
add
outs
add
add
je
imul
dec
add
push
add
popa
add
popa
add
ins
add
bound
ins
add
mov
inc
add
arpl
add
jae
inc
add
outs
add
add
push
add
sbb
push
add
add
outs
add
add
jb
stc
push
add
and
outs
add
outs
add
arpl
je
imul
push
add
outs
add
ins
add
ins
add
pop
add
and
popa
add
add
dec
add
ins
add
je
dec
add
jae
jae
popa
add
add
pop
add
add
add
push
pop
add
add
add
pop
pop
add
and
add
add
je
add
dec
add
popa
add
add
pop
add
add
je
pop
pop
add
cmp
add
popa
add
add
jb
jae
imul
dec
add
ins
add
je
popa
add
add
outs
add
add
jae
popa
add
add
add
ss
add
ins
add
imul
popa
add
add
dec
add
jbe
popa
add
add
add
popa
add
popa
add
je
add
push
or
add
pop
add
jae
sub
add
or
bound
outs
add
je
xor
add
or
ins
add
popa
add
cmp
add
jle
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
ins
add
popa
add
add
add
outs
add
add
outs
add
add
imul
push
add
dec
add
imul
add
add
add
imul
popa
add
add
popa
add
add
add
sbb
outs
add
add
push
add
add
je
add
mov
push
add
je
ins
add
pop
add
add
je
ror
add
push
inc
add
popa
add
add
inc
add
imul
jmp
dec
add
push
add
jb
push
add
arpl
clc
or
add
add
jb
add
popa
add
add
push
add
outs
add
ins
add
ins
add
push
add
ins
add
ins
add
je
add
add
or
add
ins
add
ins
add
jae
add
dec
add
ins
add
xor
add
ds
add
bound
pop
add
jb
outs
add
jae
add
pop
add
outs
add
add
jbe
popa
add
ins
add
bound
ins
add
pop
add
add
add
inc
or
add
push
add
outs
add
add
add
imul
imul
add
add
pusha
push
add
jb
arpl
push
add
push
add
add
je
add
add
add
add
je
add
je
inc
add
popa
add
add
add
inc
add
add
ins
add
jb
outs
add
add
add
je
jae
test
add
xor
popa
add
outs
add
pop
add
add
jae
imul
pop
add
add
arpl
jb
imul
imul
fisttp
add
push
push
add
add
jae
add
push
add
pop
add
jne
jb
dec
add
je
ja
outs
add
imul
add
outs
add
add
je
imul
inc
add
add
add
inc
add
popa
add
outs
add
ins
add
imul
add
ins
add
jne
jb
arpl
push
add
in
or
add
push
add
jns
inc
add
popa
add
outs
add
or
add
add
ins
add
imul
popa
add
add
dec
add
jbe
popa
add
add
add
ins
add
imul
popa
add
add
add
jae
popa
add
add
or
add
inc
add
ja
outs
add
add
add
dec
add
imul
popa
add
add
add
dec
add
data16
xchg
or
add
add
ins
add
imul
popa
add
add
dec
add
js
imul
ins
add
add
add
push
add
arpl
je
add
jae
inc
add
add
ins
add
add
add
or
add
outs
add
add
jb
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
add
jb
imul
add
je
push
add
add
add
ja
add
add
jae
jae
popa
add
gs
or
add
inc
add
add
imul
add
outs
add
add
je
imul
push
or
add
dec
add
data16
inc
add
je
add
push
add
inc
inc
add
arpl
add
inc
add
outs
add
add
add
jae
jae
popa
add
add
outs
add
inc
add
je
popa
add
popa
add
add
imul
jbe
add
push
push
add
add
jae
add
push
add
push
add
add
add
add
jb
imul
add
outs
add
add
je
imul
inc
add
add
add
inc
add
popa
add
outs
add
or
add
add
pop
add
jb
outs
add
add
je
pop
add
popa
add
outs
add
pop
add
add
jae
imul
pop
add
add
arpl
jb
imul
imul
push
or
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
inc
add
push
add
inc
push
add
outs
add
add
je
dec
add
ins
add
pop
add
add
jae
imul
pop
add
popa
add
inc
add
add
push
add
ins
add
popa
add
add
push
add
ss
add
add
add
jae
inc
add
add
push
add
jb
jae
imul
inc
add
popa
add
ins
add
bound
ins
add
ds
add
dec
inc
add
ins
add
imul
popa
add
add
dec
add
js
imul
ins
add
add
add
push
add
inc
add
add
push
add
popa
add
push
add
add
add
arpl
add
je
imul
dec
add
jae
jae
popa
add
add
outs
add
add
jns
inc
add
add
popa
add
add
add
imul
add
add
push
add
inc
push
add
imul
jae
inc
add
popa
add
outs
add
push
add
add
je
add
outs
add
add
popa
add
add
jo
add
popa
add
add
inc
add
ja
outs
add
add
add
dec
add
popa
add
add
pop
add
add
je
ror
add
sbb
add
add
jb
imul
dec
add
jns
loopne
add
inc
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
outs
add
popa
add
add
add
je
push
add
jo
add
je
add
outs
add
push
add
inc
add
je
push
add
add
add
add
je
inc
add
popa
add
add
add
inc
add
add
ins
add
jb
outs
add
add
add
je
jae
and
add
sbb
add
outs
add
data16
jb
push
add
je
add
add
and
add
ja
outs
add
add
add
add
push
add
jb
jae
imul
jns
add
sbb
add
ja
outs
add
add
add
popa
add
ins
add
add
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
outs
add
popa
add
add
add
add
je
dec
add
push
add
je
push
add
add
je
add
outs
add
je
pop
add
jb
outs
add
jns
pop
add
jb
outs
add
ins
add
ins
add
push
add
ins
add
ins
add
je
add
add
sldt
ss
add
outs
add
jb
pop
add
jb
pop
add
jne
add
dec
add
jae
je
popa
add
add
push
add
add
je
add
adc
add
inc
add
ja
outs
add
add
add
outs
add
dec
adc
add
outs
add
add
jb
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
add
add
jb
imul
add
arpl
popa
add
add
outs
add
outs
add
add
arpl
add
jae
imul
add
add
push
inc
add
ins
add
add
push
add
ins
add
add
je
outs
add
push
add
jae
jne
ins
add
add
jns
jae
je
add
push
add
jae
add
jbe
add
add
jns
ja
outs
add
add
sbb
outs
je
imul
jb
imul
outs
outs
and
imul
bound
jb
arpl
and
cs
ins
popa
and
jbe
and
jb
ret
mov
and
jge
gs
ret
mov
jo
outs
ret
lods
jbe
ins
and
je
popa
ins
imul
jb
and
jb
and
and
gs
outs
and
jae
ins
gs
push
outs
je
jae
and
outs
arpl
outs
popa
ins
imul
popa
imul
outs
je
jae
add
inc
ins
je
jb
jb
push
gs
imul
dec
dec
outs
arpl
imul
outs
and
jb
fs
mov
arpl
je
popa
outs
and
jb
popaw
jbe
jb
and
ins
arpl
outs
and
popa
and
jae
popa
and
mov
add
jae
and
push
popa
jae
popa
and
addr16
outs
add
jb
bound
popa
and
inc
outs
outs
gs
mov
imul
fs
arpl
sub
arpl
stos
and
je
mov
outs
outs
and
jbe
jb
ret
mov
imul
outs
je
add
and
imul
mov
imul
outs
jb
popaw
jbe
jb
and
jo
arpl
imul
popa
and
imul
mov
add
dec
outs
je
imul
outs
outs
je
jb
imul
add
inc
popa
outs
arpl
popa
jb
sub
popa
jb
jne
outs
je
and
mov
fs
jb
imul
jb
popa
and
jb
add
dec
ret
mov
and
jae
ret
lods
jbe
ins
and
jb
jb
outs
and
jbe
addr16
outs
jb
fs
and
bound
inc
push
popa
jae
popa
and
mov
imul
outs
jb
popaw
jbe
jb
jae
ins
arpl
outs
outs
and
and
popa
ins
and
jo
jae
popa
and
mov
add
dec
popa
outs
ret
cmps
popa
ins
outs
je
add
ins
imul
outs
add
dec
outs
je
imul
jne
jb
imul
outs
outs
and
imul
outs
jb
popaw
jbe
jb
jbe
jb
imul
popa
jae
fs
ret
mov
jae
fs
and
popa
and
jb
ja
ins
ins
and
je
outs
je
and
outs
outs
jbe
add
dec
outs
jae
popa
ins
and
jge
popa
arpl
ins
imul
gs
pop
inc
gs
outs
and
ins
gs
jae
addr16
popa
outs
ret
cmps
popa
sub
outs
jae
popa
jb
jne
jbe
jae
je
ins
jo
jb
mov
and
gs
and
jb
jae
ins
jbe
jae
gs
and
popa
and
imul
arpl
and
jb
popaw
jbe
jb
jae
ins
arpl
outs
outs
and
and
popa
ins
and
jo
jae
popa
and
mov
add
outs
jb
popaw
jbe
jb
and
jb
imul
jae
and
jno
and
bound
inc
jb
ja
gs
gs
ret
mov
je
ins
popa
outs
and
jb
gs
ins
outs
je
add
dec
ret
mov
and
jae
ret
lods
jbe
ins
and
jb
jb
outs
and
imul
outs
and
jbe
addr16
outs
jb
fs
and
bound
add
ret
test
imul
imul
arpl
jae
and
addr16
outs
and
jb
popaw
jbe
jb
and
ins
arpl
outs
and
popa
and
jae
popa
and
gs
outs
je
and
and
je
jb
jb
jae
popa
jae
jo
jb
imul
add
outs
outs
gs
mov
and
jb
imul
fs
mov
jae
outs
outs
ret
lods
jbe
ins
add
inc
outs
outs
outs
arpl
outs
and
outs
bound
add
jnp
jge
and
ins
jo
gs
sub
jnp
jge
fs
jge
arpl
imul
push
gs
outs
arpl
popa
fs
je
popa
outs
jae
gs
stos
outs
arpl
cmp
jnp
jge
dec
push
outs
jb
popaw
jbe
jb
and
jb
imul
jae
and
jno
and
bound
inc
jb
ja
gs
gs
ret
mov
je
ins
popa
outs
and
jb
gs
ins
outs
je
add
dec
ret
mov
and
jae
ret
lods
jbe
ins
and
jb
jb
outs
and
imul
outs
and
jbe
addr16
outs
jb
fs
and
bound
add
outs
jb
popaw
jbe
jb
gs
gs
and
jno
popa
outs
je
and
popa
and
je
popa
ins
imul
outs
and
jb
and
jge
gs
ret
mov
js
outs
outs
add
push
outs
jb
popaw
jbe
jb
jbe
jb
imul
popa
and
popa
and
outs
gs
mov
and
je
jb
gs
and
je
and
outs
outs
jbe
add
inc
je
jbe
jb
imul
imul
jb
popaw
jbe
jb
jbe
jb
imul
popa
and
popa
and
outs
gs
mov
and
je
jb
gs
and
je
and
outs
outs
jbe
add
inc
jae
popa
ret
cmps
outs
and
jb
and
js
outs
and
add
inc
je
jbe
jb
and
imul
add
push
popa
ins
jbe
jb
and
jo
jb
sub
and
popa
and
popa
ret
cmps
ret
mov
and
fs
je
mov
imul
jbe
ins
add
jae
and
addr16
outs
add
jb
jb
push
popa
jae
popa
add
jb
bound
popa
and
inc
outs
outs
gs
mov
and
mov
and
jo
jb
popa
and
and
je
jb
outs
popa
and
imul
jnp
jge
and
jge
add
ret
mov
dec
add
inc
popa
imul
popa
arpl
ins
imul
outs
and
jge
cwde
add
je
and
test
and
mov
imul
jbe
ins
imul
and
je
ins
and
addr16
popa
jae
ins
imul
ret
mov
jae
and
bound
je
jae
and
jb
and
ins
outs
jbe
jb
je
fs
jae
popa
jae
ins
imul
ret
mov
jae
and
bound
je
jae
and
ins
jo
popa
jb
outs
and
ins
imul
and
popa
je
jbe
sub
inc
popa
jb
arpl
and
jbe
mov
add
push
imul
jb
and
jge
push
dec
imul
inc
jae
popa
ret
cmps
outs
and
jb
and
mov
jne
jb
popa
and
and
jae
popa
and
fs
test
and
jge
and
jb
popaw
jbe
jb
and
ins
outs
jbe
and
addr16
jae
popa
jb
jne
jbe
jae
jo
jb
and
gs
jb
gs
popa
ret
cmps
outs
and
imul
add
dec
ret
mov
mov
popa
ins
imul
gs
adc
xor
sub
jne
ins
imul
outs
add
jb
jb
fs
jbe
add
dec
inc
das
jae
add
push
ins
gs
jae
and
arpl
jns
jne
and
jb
ja
ins
ins
and
je
imul
and
and
popa
imul
ins
and
jne
jne
mov
add
dec
ret
mov
and
jae
ret
lods
jbe
ins
and
jb
jb
outs
and
jbe
addr16
outs
jb
fs
and
bound
orps
outs
jb
imul
outs
add
outs
arpl
stos
and
fs
ins
jo
popa
jb
popa
and
jne
ins
imul
outs
and
outs
jb
and
jb
and
and
and
jbe
jae
data16
arpl
outs
popa
ins
imul
and
ins
push
jae
add
add
imul
popa
and
jbe
and
jb
ret
mov
and
jge
imul
jbe
ins
and
jnp
jge
jbe
jb
ret
mov
jge
gs
ret
mov
jo
outs
ret
lods
jbe
ins
and
je
and
test
and
je
popa
ins
imul
outs
and
imul
test
popa
and
je
popa
ins
imul
jb
and
jb
and
and
gs
outs
and
jae
ins
gs
push
outs
je
jae
and
outs
arpl
outs
popa
ins
imul
popa
imul
outs
je
jae
add
outs
jb
popaw
jbe
jb
and
jb
imul
jae
popa
and
outs
gs
mov
and
fs
je
outs
je
and
jbe
ins
outs
je
add
inc
outs
ins
jo
popa
jb
andps
je
and
jbe
ins
outs
je
add
gs
ret
cmps
outs
and
and
and
ins
and
outs
ins
ret
lods
outs
imul
and
and
outs
je
jb
jno
popa
ins
jno
gs
jne
and
jnp
jge
gs
outs
je
jae
arpl
popa
arpl
gs
jnp
jge
jle
and
sub
and
and
sub
jnp
sub
jge
sub
pop
sub
cmp
and
sub
aas
sub
sub
jl
and
add
and
imul
cmps
add
dec
ret
mov
and
ss
and
jb
arpl
gs
jae
mov
jb
imul
mov
inc
jae
ins
outs
arpl
imul
gs
fs
jae
jo
jae
popa
jae
outs
popa
and
fs
and
arpl
and
ins
outs
jbe
lods
jbe
imul
and
mov
jb
imul
xor
outs
jb
popaw
jbe
jb
gs
outs
ins
push
popa
and
popa
ins
imul
outs
and
jo
jae
popa
and
mov
add
push
gs
imul
dec
imul
outs
add
jnp
jge
fs
jge
sahf
add
arpl
stos
and
mov
ins
and
jb
imul
and
imul
je
jae
jo
jb
and
gs
xor
outs
and
arpl
imul
inc
popa
jae
and
inc
popa
outs
jae
fs
and
ins
imul
outs
and
jge
xor
push
outs
jb
popaw
jbe
jb
popa
ins
je
jb
and
and
popa
jae
jo
jb
imul
and
je
outs
je
and
outs
outs
jbe
add
push
outs
jb
popaw
jbe
jb
and
jb
imul
popa
and
outs
gs
mov
and
fs
je
outs
je
and
jbe
ins
outs
je
cs
add
imul
popa
and
jbe
and
jb
ret
mov
and
jge
imul
jbe
ins
and
jnp
jge
jbe
jb
ret
mov
jge
gs
ret
mov
jo
outs
ret
lods
jbe
ins
and
je
and
test
and
je
popa
ins
imul
outs
and
imul
je
popa
ins
imul
jb
and
jb
and
and
gs
outs
and
jae
ins
gs
push
outs
je
jae
and
outs
arpl
outs
popa
ins
imul
popa
imul
outs
je
jae
add
inc
inc
add
jbe
jb
ret
mov
jge
outs
imul
cmps
popa
fs
add
and
popa
and
jbe
and
jb
ret
mov
jae
outs
outs
ret
lods
jbe
ins
add
dec
and
ins
jo
imul
ins
ret
mov
and
imul
imul
je
imul
popa
ins
jb
popa
fs
jb
imul
add
ret
test
and
jne
ins
imul
outs
and
jo
jb
popa
outs
je
and
jo
addr16
add
inc
popa
imul
and
ins
gs
and
push
ret
test
sub
popaw
jbe
jb
imul
jne
and
ins
imul
and
jae
popa
and
mov
add
inc
je
popa
ins
imul
jb
and
jb
and
jbe
jae
data16
arpl
outs
popa
ins
imul
and
ins
push
jae
add
arpl
popa
fs
je
popa
outs
jae
gs
stos
outs
arpl
cmp
adc
popa
jb
popa
and
jbe
and
jb
ret
mov
popa
ins
push
and
outs
ins
outs
popa
add
dec
and
ins
imul
and
jae
popa
and
and
ins
gs
cmps
popa
jb
arpl
and
popa
and
jb
and
jne
imul
push
outs
jb
popaw
jbe
jb
jbe
jb
imul
popa
and
popa
and
outs
gs
mov
and
je
jb
gs
and
je
and
outs
outs
jbe
add
push
ins
popa
and
jbe
and
jb
ret
mov
and
jge
gs
ret
mov
jo
outs
ret
lods
jbe
ins
add
inc
popa
imul
dec
dec
outs
arpl
and
jb
fs
mov
je
mov
jae
ret
lods
jbe
ins
and
jb
popaw
jbe
jb
and
jb
imul
jae
popa
and
outs
gs
mov
and
fs
outs
ins
and
jo
jae
popa
and
jbe
mov
and
jb
popaw
jbe
jb
and
jo
arpl
imul
and
ins
and
jo
jae
popa
and
mov
add
add
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
pop
xor
lds
mov
inc
retf
sub
add
and
add
inc
add
add
add
push
add
add
add
add
imul
jae
push
add
js
je
add
add
sbb
add
add
popa
add
arpl
add
add
add
je
or
add
sbb
je
outs
add
popa
add
imul
add
add
je
adc
add
sbb
je
outs
add
add
je
add
add
je
push
add
add
or
ins
imul
popa
outs
arpl
popa
jb
or
jbe
ins
je
add
push
jb
mov
imul
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
(bad)
pop
push
xchg
xchg
lods
inc
pop
xchg
lds
repz
test
dec
adc
push
dec
dec
test
pop
call
jno
imul
add
add
add
add
add
add
add
add
add
add
add
mov
add
jmp
add
add
add
add
js
add
popf
add
add
add
add
add
add
jo
bound
js
push
add
outs
add
add
je
dec
add
outs
add
add
ins
add
add
add
add
cmp
add
add
jb
jb
add
je
push
add
jb
jae
imul
dec
add
ins
add
add
add
imul
popf
pop
or
bound
ins
add
jne
jb
jb
add
je
push
add
jb
jae
imul
dec
add
ins
add
add
add
add
je
inc
pop
or
je
outs
add
add
add
add
add
je
push
pop
or
je
outs
add
jne
jb
arpl
push
add
add
add
je
pop
pop
or
outs
add
ins
add
ins
add
push
add
dec
add
ja
add
add
je
addr16
or
outs
add
ins
add
ins
add
push
add
dec
add
ja
add
imul
jg
or
bound
ins
add
add
outs
add
add
add
outs
add
push
add
inc
add
je
dec
add
je
add
je
inc
add
popa
add
add
add
inc
add
add
ins
add
jb
outs
add
add
add
je
jae
add
add
je
and
ss
add
ins
add
add
push
add
jb
imul
outs
add
jbe
popa
add
ins
add
bound
ins
add
add
add
je
bound
ss
add
ins
add
add
push
add
jb
imul
outs
add
jbe
popa
add
ins
add
bound
ins
add
add
imul
jl
or
bound
ins
add
add
push
add
jb
jae
imul
add
imul
and
add
add
ins
add
add
push
add
jb
jae
imul
add
add
je
les
add
bound
je
outs
add
add
outs
add
add
add
add
add
je
rcr
add
bound
je
outs
add
imul
add
push
add
imul
add
jae
imul
add
add
je
ficomp
add
bound
je
outs
add
imul
add
push
add
imul
add
jae
imul
add
imul
out
pop
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cli
pop
or
jmp
add
dec
inc
dec
inc
add
add
add
pusha
add
(bad)
out
add
inc
outs
bound
add
add
add
loope
cmp
js
data16
dec
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
data16
add
xor
xor
cmp
xor
xor
and
xor
xor
cmp
add
jb
imul
add
add
add
adc
add
pushf
nop
add
add
add
adc
add
mov
xchg
add
add
add
xor
xchg
add
add
add
xor
add
add
xor
cmp
xor
cmp
xor
xor
cmp
add
xor
cmp
xor
cmp
xor
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
dec
add
add
add
add
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
or
or
adc
or
adc
sub
sbb
push
sbb
and
cmp
aaa
inc
dec
pop
dec
inc
inc
push
inc
aaa
cmp
push
push
pop
bound
addr16
jno
jo
js
gs
fild
inc
add
adc
sbb
das
arpl
inc
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
rol
or
js
mov
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
mov
mov
xchg
sub
pop
(bad)
(bad)
cmps
js
sub
jb
mov
sub
lea
bound
cmp
fstp
push
retf
movs
mov
movs
jae
and
int3
mov
xor
mov
mov
adc
sbb
pusha
rcr
pop
fiadd
mov
push
xchg
cmp
add
aas
out
test
xlat
and
cmp
in
loope
push
repz
retf
xor
fsubr
fidiv
and
in
jno
scas
jle
sub
into
jo
cmc
in
push
ins
cs
retf
in
or
stos
test
outs
push
inc
enter
cmp
fadd
outs
arpl
nop
push
pushf
sahf
rcl
test
lods
jbe
nop
xchg
mov
data16
mov
jle
outs
jmp
pop
dec
cdq
add
cmp
out
aaa
mov
push
push
jb
imul
aaa
sub
enter
and
fld
arpl
fidiv
push
rol
mov
push
adc
aas
mov
xor
sub
dec
push
sbb
jecxz
(bad)
into
imul
or
mov
pop
mov
mov
dec
outs
scas
test
sbb
enter
dec
xchg
add
out
shl
or
mov
fistp
pop
outs
cdq
adc
gs
lods
lods
loop
dec
pop
or
arpl
adc
sahf
xor
shl
dec
(bad)
mov
mov
cmp
push
or
hlt
jmp
jbe
push
mov
ret
cs
pop
jae
mov
mov
jno
outs
xchg
adc
xchg
(bad)
loopne
and
lahf
repz
pop
cmp
add
ret
jnp
cmp
in
xchg
cmp
add
mov
xchg
div
inc
cld
cs
sub
das
repz
mov
adc
mov
mov
or
(bad)
jb
les
cli
aad
and
or
cmc
pop
jns
mov
ss
fistp
(bad)
mov
push
dec
mov
pop
lea
cmp
icebp
mov
pop
daa
cmp
hlt
test
in
cmp
cmps
stc
rcr
stos
cmp
hlt
in
push
mov
int3
or
mov
jmp
aad
inc
push
arpl
mov
sbb
test
adc
xchg
cmp
sub
lahf
shr
push
in
adc
js
cmp
pop
pop
lods
imul
inc
sbb
ja
mov
and
stos
test
or
xchg
popf
test
lds
ins
test
cmp
jno
movs
addr16
retf
xchg
push
lahf
dec
dec
xor
ja
push
loopne
test
push
aam
inc
nop
cdq
inc
nop
xor
inc
jmp
mov
leave
aad
adc
jle
std
sub
es
xor
dec
sbb
xchg
imul
xor
iret
cmp
lahf
lock
mov
stc
add
jno
adc
mov
jbe
sbb
cdq
sub
popa
jno
sbb
dec
adc
cli
or
repz
outs
mov
test
pop
shr
mov
mov
add
in
or
lods
and
dec
ins
addr16
xor
cmovg
lods
loop
fimul
cmps
pop
mov
push
in
push
cmp
cmc
cld
jp
xchg
jmp
xor
jecxz
fcmovnb
movd
test
dec
loop
fldenv
xchg
inc
dec
cld
repz
scas
test
call
fwait
jb
retf
push
pop
mov
push
add
or
enter
add
adc
ror
fist
mov
cmps
stos
pop
test
dec
or
push
inc
cmp
inc
jno
push
mov
adc
push
fisubr
aas
mov
mov
adc
cmps
xchg
out
imul
fucom
lods
sar
scas
shl
or
gs
dec
jnp
jle
mov
cs
dec
inc
ds
nop
xor
sub
addr16
jle
xor
stos
cmp
int
xchg
push
retf
call
idiv
push
xchg
xchg
out
add
xor
and
pop
xchg
xchg
cmps
sbb
push
hlt
test
daa
sub
cmps
jno
dec
sahf
jbe
pop
xchg
test
push
xor
push
retf
ror
inc
pop
adc
mov
shl
lds
add
sub
test
retw
jecxz
push
inc
mov
daa
sbb
push
hlt
stos
enter
and
lods
inc
xchg
mov
add
sbb
and
push
sbb
in
mov
sahf
xchg
iret
push
sar
pusha
arpl
add
loopne
call
fdiv
push
add
test
iret
cld
std
imul
add
mov
mov
in
dec
mov
pop
mov
es
in
mov
inc
lock
loop
add
jnp
push
mul
imul
inc
test
push
xchg
in
and
xchg
inc
push
jo
call
cmp
jecxz
stos
cmps
or
outs
pop
mov
inc
popf
cwde
stc
mov
xchg
fdivr
add
test
push
jno
aam
mov
adc
cmc
inc
jmp
sbb
dec
xor
inc
and
adc
mov
xor
dec
pop
out
lods
mov
xor
sbb
push
push
outs
test
pop
sti
pop
mov
cwde
mov
les
and
ja
js
mov
add
inc
pop
jecxz
sub
jl
push
mov
retf
std
imul
adc
cmps
movs
pop
mov
movs
jp
cmc
push
retf
fisttp
inc
mov
sub
jb
scas
inc
pop
xchg
jge
fsubr
jb
jo
icebp
cmps
dec
push
leave
ss
mov
fcmovnu
mov
test
fdivr
fyl2xp1
arpl
imul
in
mov
mov
(bad)
push
dec
inc
sbb
stos
xchg
sub
mov
int3
in
mov
add
jns
cmp
sbb
fs
sub
cwde
shl
sbb
lahf
retf
adc
or
ins
sbb
jmp
pop
ret
sti
mov
mov
cmp
cmp
(bad)
outs
bound
arpl
mov
cmc
jecxz
cmp
inc
(bad)
inc
daa
mov
dec
iret
and
xor
(bad)
(bad)
(bad)
mov
test
xchg
push
cmp
add
test
pusha
repz
movs
jb
push
jns
cmps
mov
jecxz
mov
push
push
inc
jle
sub
call
call
enter
(bad)
jmp
int
call
jmp
cmp
hlt
daa
mov
fcmovu
fnstenv
push
iret
or
enter
iret
pop
xchg
ins
dec
cmp
and
(bad)
test
aaa
mov
xchg
push
dec
stos
imul
iret
pop
movs
mov
dec
jne
jg
and
push
jb
sbb
pushf
shl
enter
aaa
loope
mov
cmp
inc
dec
test
arpl
ret
mov
lahf
fiadd
adc
push
push
int3
ret
add
mov
push
mov
xor
push
int3
lock
pop
mov
jns
pop
xor
sub
pop
mov
cdq
enter
fcom
call
xchg
(bad)
fs
push
xor
sbb
inc
jnp
retf
arpl
ja
bound
lock
in
pushf
jg
repz
fs
(bad)
pop
pop
push
mov
or
add
movs
mov
jl
fwait
jae
les
stc
cmc
stos
add
pop
inc
xor
inc
xchg
adc
push
adc
popf
les
cld
sub
arpl
pop
cld
mov
xchg
loop
cmp
pop
pop
inc
dec
std
fpatan
movs
(bad)
not
sahf
mov
pushf
out
push
in
add
pusha
mov
repnz
loope
and
(bad)
hlt
(bad)
mov
mov
add
scas
or
loopne
bnd
add
xchg
mov
pop
pop
sub
jnp
add
test
(bad)
mov
add
push
sub
arpl
nop
test
push
push
and
mov
mov
cwde
mov
stos
in
fs
adc
stos
add
mov
fisub
dec
xchg
shl
lods
fistp
sub
mov
push
inc
add
jno
aad
aad
rol
ins
pop
mov
rcr
cmps
mov
mov
faddp
xor
jno
fcom
shl
pusha
sub
(bad)
xor
sahf
sahf
mov
and
bound
sbb
mov
inc
and
sbb
pop
and
ja
lahf
test
bnd
ins
mov
std
cwde
cli
lahf
lock
sbb
retf
ins
dec
or
lods
push
out
cdq
cmp
lods
arpl
ret
outs
jmp
jns
enter
(bad)
in
dec
xchg
lds
mov
mov
inc
ins
mov
cmp
add
mov
cmc
cmps
add
leave
add
mov
sbb
xchg
ficomp
daa
jge
pop
fsub
lock
(bad)
aas
pop
iret
mov
add
call
(bad)
and
mov
repnz
repnz
jae
push
nop
ja
dec
jecxz
pop
inc
sub
pop
fisttp
sbb
pop
jbe
in
mov
mov
sbb
pop
jp
sub
push
je
sbb
xchg
pop
lods
into
jns
cs
mov
mov
ret
xor
sub
jmp
ds
aam
xor
bound
pushf
push
cmp
xor
mov
pop
or
xchg
call
dec
add
xlat
inc
scas
(bad)
xchg
inc
fstp
rol
add
nop
imul
into
enter
sbb
push
outs
loop
adc
pop
imul
rol
pop
cwde
fimul
mov
sbb
sbb
pop
push
jp
cmps
sbb
hlt
adc
lock
sub
mov
push
pop
mov
mov
jb
in
xchg
jmp
inc
dec
ficomp
sub
outs
inc
fmul
sbb
xor
pop
lds
arpl
lods
loope
and
mov
push
or
jne
lods
loopne
push
cmp
cmp
popf
jae
mov
push
mov
(bad)
movs
pop
mov
sub
pusha
cmp
push
mov
sub
fsubr
and
push
inc
pop
xchg
(bad)
hlt
popa
mov
mov
in
cmp
or
adc
xor
outs
test
add
test
daa
cmp
pop
push
bound
xor
xchg
cmp
pop
mov
mov
mov
shr
fisub
out
jge
lods
xchg
sub
imul
pusha
add
xchg
retf
push
mov
and
xor
pop
mov
mov
and
fstp
mov
fist
aaa
(bad)
sti
mov
das
popf
in
push
pop
or
shl
push
int3
int
jmp
xchg
(bad)
int3
inc
(bad)
jmp
loopne
add
push
sahf
aam
cmc
das
leave
or
add
inc
sbb
jno
pop
add
out
pop
xchg
pop
fsub
test
mov
push
fs
push
mov
adc
pop
mov
sub
adc
mov
pop
inc
dec
cmp
imul
adc
fmul
dec
cmps
dec
imul
leave
popa
mov
adc
retf
inc
jb
inc
cmc
test
pop
xor
or
(bad)
pop
enter
mov
sbb
adc
and
cmc
int
fld
stos
push
jns
pop
loop
cmp
in
cmp
dec
int3
jb
mov
mov
xchg
xchg
test
cld
stos
sub
sbb
cdq
aam
dec
addr16
mov
mov
mov
cmp
pusha
jbe
outs
and
loop
iret
sub
xlat
pop
stos
and
mov
xchg
sahf
mov
rol
nop
jo
sub
dec
mov
call
jns
js
jecxz
jmp
sub
mov
push
mov
retf
and
aam
push
sub
dec
dec
iret
cld
mov
jge
jb
outs
arpl
push
leave
adc
movs
icebp
lahf
xchg
pop
jp
outs
xlat
xor
jne
fdiv
fisubr
sar
jmp
dec
push
cmp
mov
adc
xchg
aaa
out
lea
xchg
arpl
sbb
dec
xchg
fcom
enter
mov
ds
push
mov
mov
popf
push
adc
and
jne
ds
jmp
push
inc
jno
fidiv
dec
repnz
pop
into
(bad)
(bad)
pop
in
repnz
call
repz
push
in
sub
mov
xchg
adc
std
fnstcw
ret
jne
and
xchg
cmp
(bad)
xchg
(bad)
call
scas
push
jge
xchg
call
add
sbb
jmp
(bad)
mov
aaa
stos
adc
lahf
cmps
sub
iret
pop
adc
cs
movq
xchg
mov
sbb
pop
movs
jp
mov
jge
dec
fist
fwait
and
xor
mov
pop
ficom
push
and
loopne
jge
adc
pushf
iret
push
push
mov
call
push
push
pop
mov
fidiv
aam
xor
push
pop
jmp
pop
cwde
addr16
daa
inc
xchg
ret
add
mov
shl
sub
and
(bad)
jle
pop
out
fcmovnbe
and
jnp
add
push
data16
push
pop
dec
pop
xor
adc
dec
and
test
aas
ret
inc
dec
out
mov
fcos
fild
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
or
add
add
adc
add
add
adc
inc
add
add
add
add
add
add
or
add
add
add
inc
add
add
add
add
add
add
or
add
add
add
adc
add
xor
xor
adc
popa
and
pop
push
jno
sbb
and
es
or
rcl
daa
loope
ss
mov
inc
aaa
inc
arpl
push
push
push
sbb
xor
mov
sub
data16
cmp
dec
dec
dec
pop
pop
pop
addr16
js
jp
xchg
xchg
xchg
xchg
cwde
cdq
call
stos
mov
mov
mov
mov
leave
retf
(bad)
xlat
fcomp
(bad)
in
out
jmp
idiv
stc
cli
inc
add
add
add
add
add
add
add
or
or
or
inc
add
add
add
add
push
add
adc
adc
adc
pop
xor
jno
inc
and
bound
xor
mov
rcl
jb
pop
loope
xor
xchg
push
sbb
icebp
mov
push
ss
fs
or
xchg
inc
je
shl
repnz
gs
aaa
test
jecxz
sub
xchg
movs
mov
aam
hlt
xchg
movs
mov
aad
cmc
sub
data16
xchg
cmps
mov
(bad)
out
addr16
xchg
cmps
mov
xlat
out
dec
pop
push
mov
cmp
imul
fldl2t
stc
sub
dec
pop
push
mov
jmp
add
add
add
add
add
add
jae
mov
push
popf
xchg
jl
add
add
pop
push
mov
into
retf
mov
test
and
ror
ss
jge
xchg
jge
jbe
gs
out
add
inc
test
jmp
sub
pop
outs
shl
and
mov
mov
xchg
sbb
xchg
inc
scas
aad
pop
fsubp
retf
push
sub
add
in
scas
lahf
out
repnz
test
sti
out
repz
les
dec
and
xchg
scas
xchg
cmp
dec
dec
cmp
sbb
sub
jo
xor
jle
jae
mov
aam
push
pop
sbb
sub
mov
mov
jmp
out
daa
mov
js
add
inc
aas
jmp
xchg
jno
xchg
pop
lods
inc
je
cmps
push
stos
sti
jb
scas
adc
in
or
mov
repz
loop
fild
das
lea
jbe
xchg
cmp
cs
bswap
xlat
out
fcmovnbe
xor
inc
stos
push
gs
sti
add
shr
lods
out
sub
pop
sbb
xchg
out
int3
retf
sbb
outs
fs
sahf
(bad)
jbe
dec
mov
dec
and
lock
in
pop
retf
enter
jno
lea
pop
frstor
dec
push
push
sbb
jp
pop
outs
inc
or
imul
rcpps
push
pusha
push
test
pop
or
rcr
xchg
imul
and
lahf
xchg
in
call
sub
dec
sbb
daa
(bad)
cmps
or
jge
inc
popf
dec
or
ret
out
gs
dec
fidiv
and
fs
jp
std
inc
mov
pop
mov
jg
jns
cmp
outs
sbb
(bad)
jl
sti
mov
and
nop
xchg
mov
lods
xchg
and
pop
dec
mov
cmp
shl
ins
ins
or
and
mov
leave
sti
jg
mov
(bad)
inc
dec
cs
push
push
in
pop
mov
fstp
mov
adc
sub
addr16
cmp
pop
dec
sub
sub
mov
jecxz
add
test
ret
inc
sti
mov
lods
test
pop
mov
or
add
pop
push
mov
add
stc
jmp
js
sar
arpl
sub
xchg
(bad)
sub
xchg
aad
add
sub
out
jns
adc
hlt
fistp
mov
fs
ins
inc
ret
mov
sub
or
dec
and
inc
cmp
addr16
cs
jmp
push
dec
imul
test
fwait
adc
and
aaa
fcomp
fnstenv
inc
dec
sbb
push
sub
jmp
jnp
test
mov
cdq
hlt
dec
xchg
sub
icebp
movs
sbb
out
push
fistp
mov
ja
pop
push
pop
adc
adc
inc
dec
imul
scas
dec
jl
lock
fcom
xchg
jp
mov
mov
cwde
ret
lods
sub
push
nop
cmp
pop
jmp
ficomp
aaa
mov
cmp
xchg
xor
jno
lods
xor
repz
mov
push
stos
dec
mov
mov
lds
push
out
call
dec
inc
sub
xchg
cwde
in
cmp
dec
call
ins
cld
icebp
jmp
mov
pop
aaa
xor
jp
and
movs
inc
ds
popf
sub
out
loope
inc
in
in
cs
mov
gs
and
lahf
psadbw
mov
sub
in
sub
mov
push
dec
leave
es
or
or
test
imul
xchg
arpl
dec
dec
xor
pop
adc
loope
mov
retf
pop
xchg
dec
loope
sub
std
mov
retf
sbb
lods
int
xor
arpl
dec
cmc
shl
xor
mov
in
fwait
je
lea
push
ins
sbb
dec
and
(bad)
sahf
imul
mov
je
dec
or
xor
mov
rcl
xor
sub
mov
test
jb
jmp
jbe
sub
sub
cdq
(bad)
js
inc
mov
ins
jbe
mov
test
inc
jle
ins
repz
lods
add
aad
cmp
cmps
or
mov
shrd
push
and
sub
and
repnz
cmp
stos
(bad)
pop
retf
xor
mov
add
pop
dec
test
std
into
fnstsw
dec
sub
cmc
push
xchg
stos
stos
cmp
repnz
cmp
out
sub
cmp
inc
inc
adc
add
rcl
mov
and
(bad)
sub
sbb
mov
fisttp
cli
sti
loopne
sbb
data16
jno
popf
mov
inc
and
and
lahf
pop
push
adc
sub
(bad)
fadd
pop
inc
xor
sbb
pop
push
pop
cmp
add
push
in
mov
mov
mov
add
mov
inc
and
cld
and
jae
mov
dec
rcr
cmp
jo
sbb
aam
adc
inc
mov
ss
loopne
iret
cwde
mov
shr
int
mov
and
xor
pop
imul
or
rol
lods
xor
sbb
push
xchg
or
push
std
cli
lea
add
nop
adc
xor
and
idiv
sti
and
je
iret
loop
sti
aad
leave
mov
repnz
xchg
add
pushf
or
rcl
ds
fs
xchg
dec
push
fs
push
stc
push
dec
test
pop
mov
mov
mov
push
cdq
add
xchg
(bad)
add
jl
aas
addr16
mov
add
popf
add
loopne
inc
ins
ds
pop
cmp
loop
pop
(bad)
pusha
retf
std
cli
inc
mov
and
in
(bad)
mov
shr
(bad)
shl
jmp
mov
sbb
mov
sar
inc
cmps
idiv
sahf
jg
cmp
xbegin
and
xlat
xchg
inc
push
(bad)
mov
sbb
mov
xor
mov
ja
and
adc
and
fmul
xchg
inc
inc
pop
loop
sti
and
js
cmp
mov
(bad)
xchg
adc
jmp
add
jp
cld
icebp
shr
dec
inc
sbb
mov
icebp
lds
jg
(bad)
sub
inc
sub
push
cli
sti
dec
ds
sbb
(bad)
daa
push
cmps
mov
mov
xchg
out
mov
idiv
jmp
xchg
sbb
xor
(bad)
mov
xchg
aam
out
xchg
repz
shl
cmp
mov
div
jge
pushf
mov
push
sub
sahf
xchg
add
rol
es
push
in
movs
adc
sub
and
dec
push
add
adc
bswap
repnz
add
in
jae
movs
mov
imul
add
mov
daa
xor
stc
outs
ins
lock
adc
push
outs
xchg
repz
or
dec
push
xor
cmp
sub
jle
and
dec
in
test
mov
dec
sbb
jo
push
stc
sbb
cmp
sti
lea
std
sub
aad
je
mov
sbb
pop
and
js
stos
les
xor
pop
and
jmp
or
scas
sti
sahf
push
xor
and
jmp
movs
iret
cmc
test
lea
cmp
pop
adc
jecxz
daa
pop
pop
push
push
cs
sub
retf
iret
cmps
mov
xor
imul
ss
jmp
inc
jmp
add
cmp
cmp
mov
xchg
sbb
inc
sar
add
xchg
cmp
dec
test
xor
xchg
lds
dec
aas
dec
(bad)
mov
ins
fs
je
jp
mov
(bad)
shr
dec
xchg
arpl
les
mov
lahf
bound
adc
and
fcom
add
sbb
or
jl
outs
ja
dec
std
mov
sub
dec
adc
repnz
(bad)
dec
mov
out
inc
adc
mov
jno
mov
ss
or
lahf
jb
aad
push
(bad)
(bad)
shl
sub
jecxz
push
mov
jp
fimul
mov
icebp
sbb
dec
pusha
sahf
popf
and
add
popa
xchg
push
pop
push
dec
dec
retf
pop
fsub
add
mov
cmp
add
add
bnd
lea
xchg
dec
mov
push
iret
cmp
pop
dec
jae
inc
loopne
mov
shl
add
and
mov
lds
jg
dec
pop
fstp
dec
push
jns
and
rol
hlt
adc
(bad)
aam
sbb
push
add
int3
pop
dec
or
scas
cmc
(bad)
xchg
imul
(bad)
out
jbe
fcmovu
xor
cwde
leave
and
xlat
shl
cmps
mov
mov
cmc
hlt
sbb
xchg
sub
jmp
inc
or
push
xor
fwait
sub
fs
mov
jmp
push
cmc
and
retf
lds
in
(bad)
stc
cmp
mov
add
shr
sahf
and
shl
adc
and
daa
push
cmp
pop
pop
sub
xchg
xchg
add
and
(bad)
jl
inc
mov
pushf
cld
pop
mov
mov
lods
(bad)
or
pop
sbb
xchg
jae
(bad)
pop
gs
add
std
jge
fimul
out
sbb
add
xchg
mov
(bad)
loop
push
(bad)
sbb
jp
(bad)
cmps
mov
fiadd
mov
xchg
inc
aad
in
jmp
sti
dec
mov
loope
fs
rol
jle
jns
fsub
mov
push
xor
daa
cld
adc
cmps
dec
sbb
mov
into
outs
mov
sbb
aaa
daa
pop
push
test
lea
std
cs
outs
outs
jno
inc
pop
loopne
dec
add
cmc
pop
xlat
in
out
push
nop
and
jne
mov
xchg
mul
mov
sbb
cmp
mov
dec
cmps
sub
(bad)
scas
jmp
clc
jnp
jge
es
dec
ret
dec
out
shl
stos
push
in
lock
pop
cld
adc
sub
push
(bad)
icebp
push
leave
jecxz
xor
dec
js
sbb
or
xchg
outs
jo
xor
adc
fistp
push
mov
sub
mov
das
out
je
or
sbb
aad
pop
mov
(bad)
push
adc
push
push
sbb
push
mov
pop
(bad)
cmc
xchg
dec
add
retf
(bad)
mov
sub
mov
jmp
je
dec
imul
push
sub
aam
pop
dec
xchg
push
js
in
adc
mov
cld
std
inc
and
outs
leave
cli
jnp
out
push
fist
or
or
iret
cld
(bad)
jne
cdq
gs
inc
aam
stc
loop
jl
xchg
inc
push
fmul
fcomp
cmp
or
enter
and
scas
cli
fdivrp
jne
mov
add
inc
cmps
mov
imul
sbb
sub
jl
xchg
retf
sar
bound
push
sbb
inc
dec
lods
inc
repz
and
aaa
ss
repnz
repnz
pmulhuw
jae
retf
test
out
retf
loop
xor
sahf
xor
pop
push
xchg
leave
in
dec
icebp
push
aad
call
mov
add
cmp
jle
lds
jbe
and
out
push
cwde
loopne
aad
mov
dec
sub
mov
pop
mov
add
sub
jp
neg
push
dec
dec
loope
pop
fimul
aaa
and
inc
(bad)
out
movs
(bad)
fmul
sub
xor
push
xor
jge
dec
jp
xchg
iret
lahf
push
xchg
add
das
push
inc
and
pushf
shl
imul
mov
jbe
rcl
rol
mov
les
inc
xor
stc
push
xchg
les
not
fiadd
int3
jmp
stos
sbb
inc
jb
dec
std
add
or
das
add
xchg
xor
inc
call
add
mov
out
aam
pop
inc
aas
ror
pop
sbb
cli
cmp
add
push
fisttp
mov
inc
cmps
push
adc
bound
xchg
(bad)
sbb
gs
js
pop
fidiv
dec
xchg
pop
aam
inc
arpl
sub
mov
cmps
mov
sub
inc
push
lea
aas
daa
push
test
and
stos
xchg
stos
sub
int3
push
mov
adc
sti
or
push
fcomp
ss
loope
mov
add
inc
rcr
out
mov
push
js
stos
cld
mov
repz
fnstcw
shl
jb
jge
(bad)
mov
scas
ret
xchg
les
mov
std
pop
cmp
cmp
xor
inc
pushf
jno
scas
lahf
cwde
jmp
ins
sub
dec
sbb
shl
and
push
adc
adc
push
inc
inc
sub
(bad)
cmps
cmps
pop
pop
call
leave
inc
call
iret
iret
mov
jne
pop
mov
jmp
mov
ficomp
push
xor
mov
mov
or
xor
(bad)
or
jns
fdiv
pop
dec
rcr
cwde
add
mov
dec
push
rcr
pop
cmp
stc
jbe
ficom
mov
scas
adc
pop
sbb
add
sub
cmp
sub
add
mov
enter
sbb
jg
inc
(bad)
mov
loop
enter
xor
in
cwde
push
pushf
sub
or
sbb
xlat
or
pop
xchg
jb
ds
add
jmp
fisub
pushf
mov
mov
scas
into
pop
sbb
iret
sbb
inc
sbb
lahf
imul
hlt
jne
test
imul
adc
stc
xor
icebp
shr
je
dec
nop
mov
cmp
dec
cmp
aam
test
js
sbb
sti
or
imul
arpl
test
or
dec
dec
and
adc
sti
sbb
pop
fmul
ss
cmp
cmps
mov
sub
sub
es
ins
xor
inc
test
xor
mov
xchg
adc
aad
add
mov
les
jae
pop
fcmove
fdiv
addr16
mov
push
int3
adc
add
test
push
mov
dec
ja
sti
xor
ins
shr
xor
dec
push
push
jmp
push
pop
out
dec
adc
fcmovnb
cmp
fcomp
aas
mov
sbb
in
enter
(bad)
jmp
dec
aaa
add
js
push
in
and
mov
out
adc
push
push
add
mov
retf
dec
(bad)
leave
mov
mov
gs
lahf
into
xchg
movs
fimul
xor
pop
sbb
adc
push
movs
pop
and
cmp
cmp
inc
clc
xor
push
xchg
aam
jne
les
fucomp
std
xor
or
mov
cmp
pop
test
jne
outs
lock
dec
adc
pushf
adc
in
cmpxchg
xor
xor
inc
lock
(bad)
cmp
push
ret
aas
retf
test
(bad)
loop
retf
jle
addr16
pop
sub
xchg
or
push
pop
dec
pushfw
test
movs
lea
test
test
jmp
mov
add
mov
mov
rol
shl
lahf
sbb
and
out
mov
push
pop
push
sub
xchg
sub
adc
mov
mov
sub
mov
mov
and
int3
mov
inc
xlat
dec
mov
cmp
jle
shr
sub
sub
repnz
inc
mov
push
shl
nop
jecxz
es
test
inc
mov
cmp
icebp
retf
xlat
(bad)
test
clc
jno
cmp
jmp
cmp
ins
xor
cmps
les
shl
rol
in
push
xchg
mov
aam
inc
mov
dec
cld
mov
out
ins
mov
xchg
out
sbb
jecxz
mov
mov
ins
ds
iret
out
lahf
sub
imul
inc
push
dec
jg
dec
lods
popf
arpl
inc
xchg
aad
xor
dec
sbb
repnz
jp
jb
gs
mov
xchg
test
test
cs
adc
cli
inc
lods
outs
bound
dec
inc
mov
pop
(bad)
pop
mov
popf
repnz
loope
scas
movs
or
sbb
sbb
retf
push
aam
dec
mov
dec
push
jmp
pop
inc
adc
add
mov
imul
loop
fs
pop
xchg
push
mov
push
movs
mov
(bad)
sbb
in
clc
mul
inc
dec
mov
cli
(bad)
cmc
jg
xlat
lods
inc
jae
mov
xchg
lea
xor
dec
cmp
jns
add
jbe
in
push
dec
in
mov
mov
jle
xor
jno
sub
leave
mov
fyl2x
push
enter
push
aad
sbb
push
les
jae
cmp
ins
xchg
mov
adc
pushf
xchg
(bad)
and
adc
ret
sub
fxch
mov
add
mov
call
or
dec
xchg
mov
stos
jmp
mov
pop
sub
xchg
enter
xchg
jns
in
outs
xor
bound
arpl
add
cmp
jl
cmc
adc
rol
mov
loope
push
mov
pop
out
(bad)
dec
ret
ret
push
sub
and
push
les
rcr
pop
dec
mov
push
push
sub
push
push
sub
pushf
push
adc
and
inc
test
mov
jno
mov
jb
movups
mov
(bad)
jp
xor
(bad)
iret
mov
mov
pop
adc
into
cmp
gs
push
inc
mov
int3
out
call
and
sbb
and
daa
and
push
shr
mov
aaa
sahf
data16
mov
xchg
xor
dec
dec
or
jmp
inc
fsubr
int
repz
fistp
mov
dec
sub
je
push
push
adc
sti
sub
jmp
(bad)
rol
(bad)
test
sub
rcl
rol
mov
add
outs
cmp
lds
xchg
adc
imul
lea
imul
in
xor
sbb
daa
(bad)
mov
and
arpl
imul
and
pop
in
aas
lods
std
mov
sub
js
dec
dec
push
add
mov
inc
jbe
out
cmp
mov
cld
cmp
xor
bswap
push
std
pop
cmps
push
jecxz
fdivp
aad
jg
cmc
pcmpgtd
xchg
std
(bad)
fucomip
sub
leave
mov
movs
sahf
xchg
test
lods
call
inc
mov
mov
outs
jbe
lea
es
aam
call
xchg
xchg
das
push
frstor
xchg
xor
lea
sub
mov
scas
jno
test
xchg
push
popa
(bad)
fisubr
sub
jmp
jae
lds
clc
scas
in
mov
repz
mov
(bad)
or
adc
sti
cmp
xchg
mov
add
pop
push
rcl
cs
xor
shl
inc
test
mov
mov
adc
ja
add
adc
adc
call
sbb
jne
mov
xor
sub
sub
in
xchg
cmp
inc
in
je
rcl
cli
sti
push
cwde
ror
cmp
mov
mov
in
sub
xor
mov
pop
xor
repnz
push
xor
pop
dec
(bad)
ret
jecxz
mov
mov
outs
sub
sbb
ror
lea
in
mov
mov
mov
xchg
cli
or
(bad)
dec
arpl
mov
dec
mov
add
daa
lea
jb
add
sbb
push
add
scas
mov
jl
out
or
div
dec
xchg
aad
cmps
int
sbb
test
loop
lds
mov
repz
adc
retf
imul
push
push
ret
and
adc
sub
aaa
sti
push
push
fisubr
xchg
and
out
push
and
popa
add
and
lods
jne
cs
(bad)
(bad)
(bad)
call
inc
dec
psubw
(bad)
push
(bad)
inc
xor
popf
jno
retf
sub
dec
inc
movs
sbb
(bad)
xchg
aas
in
inc
icebp
out
sti
test
mov
call
dec
sub
js
sbb
cmps
cmp
and
mov
loopne
pop
dec
push
mov
adc
add
pop
cmc
cmovns
adc
jmp
sbb
popa
add
jp
fwait
mov
lea
adc
fcmovbe
mov
(bad)
mov
or
push
movs
test
add
xor
or
and
ins
jl
js
aam
adc
and
(bad)
fsubr
pop
xchg
push
inc
cld
stos
rcr
or
pusha
pop
pop
aam
jg
mov
movs
push
or
loope
repnz
mov
add
movs
jns
xchg
(bad)
lods
inc
pop
add
fucomp
cmp
mov
push
xchg
test
dec
push
or
inc
sbb
sar
daa
push
or
jp
retf
jl
fcmovnu
mov
and
lahf
in
aam
pop
mov
and
mov
inc
dec
clc
scas
sbb
or
in
inc
mov
into
ficom
and
and
adc
ja
xor
mov
aam
fiadd
sub
xor
popf
js
comiss
hlt
add
fisttp
jb
push
gs
xchg
cmp
xchg
xor
push
sti
or
les
xchg
mov
mul
cli
mov
cwde
lods
scas
pop
call
test
arpl
adc
adc
mov
fistp
ffree
in
add
dec
and
pop
push
mov
or
jns
pop
pop
adc
jl
xor
push
xor
cmp
arpl
xor
and
std
push
ins
(bad)
outs
jno
mov
adc
xor
hlt
cmp
dec
daa
mov
jne
cmps
mov
adc
pop
inc
cmps
cwde
mov
dec
jne
add
mov
mov
lahf
test
pop
push
xchg
shl
sbb
push
sar
push
jno
ins
sbb
jp
sbb
adc
add
test
inc
cmps
imul
or
js
adc
ret
mov
add
push
cmp
pop
sar
in
int
aam
out
cmps
enter
popa
xor
sub
repz
sahf
pop
mov
adc
ror
out
jns
das
(bad)
popa
jns
or
fwait
ret
cwde
sub
pop
ds
adc
sti
cmp
push
fsubr
loope
sbb
mov
dec
mov
in
mov
mov
mov
mov
xor
and
mov
test
push
es
aas
sahf
jge
test
add
add
mov
cdq
scas
pop
push
in
sbb
jne
(bad)
call
sbb
pusha
jmp
addr16
dec
inc
pop
icebp
sbb
push
cmp
stos
test
sbb
rcl
loope
and
sbb
lock
add
xchg
imul
pop
(bad)
fwait
mov
lods
sbb
xchg
sub
fdiv
push
pop
cmp
ror
bound
(bad)
cdq
fstp
inc
fisub
imul
and
mov
cli
lods
arpl
push
imul
pop
xchg
enter
inc
sbb
adc
xlat
and
mov
sub
hlt
(bad)
cld
inc
push
call
inc
add
inc
jmp
aaa
aam
cmc
cld
sti
xor
push
sbb
idiv
enter
clc
pop
xor
shl
les
jb
dec
fwait
sub
or
sub
mov
dec
retf
fist
push
fs
fucomp
sar
sahf
mov
sub
ins
xchg
cwde
dec
test
xchg
pop
int
xchg
daa
out
lds
push
(bad)
jo
and
mov
mov
jp
scas
jns
add
cmc
xchg
jmp
mov
ftst
aam
and
add
inc
inc
jge
inc
repnz
mov
pop
inc
sub
daa
retf
loope
inc
jg
pop
scas
push
cmp
add
xor
mov
aaa
cli
inc
dec
jnp
jns
fidivr
popf
sub
addr16
loopne
mov
sti
(bad)
mov
(bad)
sahf
mov
push
je
sub
sbb
js
xor
pop
jns
out
out
cli
jp
jnp
shl
push
pop
pop
cmp
fcom
mov
adc
lods
hlt
add
out
imul
data16
jno
mov
jb
jns
sbb
scas
jmp
hlt
lods
push
shl
stos
stos
lds
dec
bound
lahf
mov
call
xchg
sub
or
sbb
mov
sbb
sub
movs
inc
jl
stc
sahf
xchg
movs
mov
xor
cmc
jp
hlt
inc
sbb
inc
movs
cwde
enter
dec
dec
outs
dec
adc
and
(bad)
jmp
(bad)
xlat
fstp
lods
mov
stos
mov
lock
in
cmps
lahf
iret
movs
repnz
and
data16
scas
repz
xchg
iret
data16
lea
xchg
dec
cmp
fs
push
mul
sub
pop
cmp
fist
retf
js
stos
xor
adc
aam
daa
mov
fld
arpl
test
dec
jl
pop
in
ds
dec
(bad)
and
scas
pop
xchg
jge
inc
mov
push
lds
fs
sub
retf
xchg
pusha
adc
cmp
push
xor
mov
fsubrp
pop
jbe
add
sbb
jb
mov
in
iret
mov
lock
push
outs
es
aam
out
sub
je
pop
cmp
push
and
mov
ins
sbb
inc
fimul
adc
hlt
push
sti
dec
jbe
repz
push
and
xor
inc
sub
dec
push
mov
push
sbb
ret
adc
cmc
in
into
adc
pop
into
dec
push
cmp
aam
adc
test
pusha
pop
or
push
bound
repnz
sahf
adc
fsubr
repnz
stc
push
mov
mov
add
jnp
inc
jge
inc
jmp
test
movzx
push
int3
sahf
fistp
cdq
mov
push
cmps
loop
mov
adc
and
mov
in
jbe
inc
cmp
inc
je
cmp
out
mov
rcr
sahf
cmp
mov
lahf
push
mov
neg
retf
cs
xchg
bound
out
(bad)
mov
gs
xor
add
pop
ds
pop
jle
retf
adc
push
scas
aaa
xor
inc
outs
enter
add
movs
pop
pop
mov
mov
pop
das
in
call
popf
ds
iret
mov
in
cmc
adc
jne
das
xchg
test
xor
push
test
pop
fcomp
jae
iret
mov
mov
pop
cwde
push
lods
add
cmc
cld
es
fisub
cmp
(bad)
push
push
mov
push
sti
(bad)
je
out
add
lods
jp
faddp
cmp
scas
scas
pop
and
adc
add
xchg
sbb
lahf
jp
jb
sub
mov
out
and
mov
aad
test
cli
jne
repz
(bad)
ins
cmp
cli
repnz
inc
add
lods
test
jp
iret
aaa
sbb
popa
mov
xchg
adc
lods
jno
pop
ficomp
inc
mov
cmps
aas
jmp
(bad)
mov
imul
and
pop
(bad)
std
aam
out
cmc
ds
iret
test
pushf
xchg
push
loop
cld
test
lea
stc
lock
push
popa
cld
aad
pop
addr16
out
in
jp
cmp
push
ins
cli
stos
rcr
and
in
rcl
mov
or
push
mov
push
mov
dec
xchg
retf
retf
xlat
xor
movs
add
push
sbb
inc
(bad)
into
mov
loope
ins
xor
xor
imul
repz
dec
fcmovne
push
xchg
jne
sub
push
mov
movs
arpl
fwait
push
mov
pop
xchg
mov
mov
lods
rol
jmp
mov
and
leave
repnz
inc
retf
ins
fimul
inc
lock
popa
jp
js
sub
push
adc
sbb
aas
dec
sti
das
fbld
dec
mov
lods
and
stc
or
outs
out
sub
icebp
es
adc
inc
or
mov
mov
push
ins
ficomp
push
lods
adc
rol
dec
adc
mov
rol
retf
push
cmps
sub
mov
fdivr
inc
mov
ds
xchg
jae
out
lods
shl
mov
test
dec
or
add
or
rcl
mov
js
cmp
push
dec
aas
add
retf
xor
jae
nop
int3
call
retf
es
icebp
lds
ds
(bad)
adc
fs
or
mov
cmp
sbb
mov
inc
add
cmps
sbb
push
je
fdiv
pop
std
lds
pop
mov
in
rol
ror
adc
jmp
(bad)
ret
dec
xchg
js
mov
mul
fmulp
jnp
jl
sub
mov
lock
add
scas
imul
bound
and
stos
xchg
push
pusha
jnp
nop
push
int
inc
jbe
ror
xor
pop
sub
cmp
lds
push
inc
push
mov
retf
sbb
dec
push
or
push
test
push
mov
and
gs
retf
pusha
add
add
in
inc
(bad)
adc
or
ds
imul
call
cmp
sbb
cmp
or
scas
call
imul
push
das
std
or
add
fs
jmp
fsub
adc
cmp
jne
add
pop
dec
call
jbe
push
popf
push
loop
push
or
jno
cmc
add
lds
sub
dec
push
bound
pop
daa
nop
imul
add
push
in
fmul
or
ret
into
sahf
push
cmp
add
iret
mov
mov
push
adc
addr16
iret
repz
fcomp
cmps
jp
mov
test
int3
pop
push
imul
cli
push
jnp
frstor
push
mov
out
icebp
int
xchg
xchg
sbb
add
inc
jg
hlt
sbb
or
push
adc
cmp
jge
neg
lods
dec
es
adc
test
popf
jns
in
ins
lds
test
or
jne
lahf
pop
repz
jle
cld
je
out
sub
gs
push
push
in
pushf
push
test
xchg
jl
jmp
jmp
in
test
and
mov
push
mov
mov
add
mov
lods
xlat
out
and
and
inc
jl
retf
sub
test
rol
fs
mov
xchg
or
mov
pop
scas
or
jnp
adc
(bad)
popa
sub
popa
adc
adc
(bad)
sbb
cmps
daa
add
stos
adc
in
dec
iret
out
push
ds
or
mov
fcomp
dec
xor
or
nop
push
mov
(bad)
out
inc
jae
fiadd
mov
dec
cmp
dec
or
xor
stos
inc
loop
xchg
out
xor
sbb
sbb
cs
iret
hlt
imul
fcmovb
jge
sahf
shr
dec
mov
lods
or
or
dec
inc
mov
sti
cmps
mov
dec
cmp
dec
jne
popf
lahf
mov
push
inc
in
jb
dec
and
jb
inc
dec
out
scas
push
test
xor
add
cmp
in
sub
dec
shl
mov
and
and
mov
loope
xlat
cwde
neg
jge
push
jecxz
outs
push
ret
xchg
xor
and
je
cmps
xchg
imul
push
pop
or
cli
jnp
jecxz
imul
fbstp
inc
mov
dec
jne
aad
and
sub
mov
pop
jnp
call
xchg
dec
dec
add
inc
sub
aam
in
mov
in
std
mov
mov
sbb
sar
mov
cmp
push
xchg
adc
sub
iret
dec
repnz
aad
not
jae
out
fstp
inc
pusha
unpcklps
ss
cmp
ins
push
sub
test
jg
cmp
or
loop
xor
jge
adc
inc
arpl
daa
dec
shr
xor
adc
ins
aam
add
push
dec
or
xor
pop
arpl
imul
pmaddwd
push
xchg
loop
shl
jmp
fcmovnb
mov
push
cdq
int
test
cmp
in
hlt
pop
jmp
das
int3
pop
xor
mov
mov
aad
pop
pop
lds
push
in
call
fist
cmp
repnz
mov
jne
cmp
mov
jmp
xchg
fcomp
movs
lods
mov
popf
loope
imul
fwait
xor
cdq
test
jo
dec
inc
scas
jp
jbe
arpl
lds
sti
cmp
fcomp
xchg
push
ja
dec
jp
fcmovbe
lods
add
inc
(bad)
mov
les
bound
add
xor
test
lea
div
inc
push
or
sets
fldenv
stos
les
(bad)
xor
xchg
or
sbb
sbb
add
movs
add
mov
test
fldenv
ror
push
das
adc
and
mov
stc
icebp
call
outs
mov
ins
or
cmp
cmp
popf
aas
das
xchg
push
bsr
pop
sub
sub
stos
stos
aaa
push
push
pop
test
jns
mov
aad
push
rcl
repz
not
jno
push
xor
inc
mov
jl
jecxz
mov
into
or
inc
adc
mov
add
dec
lahf
inc
adc
mov
sub
add
je
retf
xchg
sub
adc
(bad)
ds
mov
pop
push
sbb
cmp
push
jg
xlat
or
mov
popa
xor
(bad)
dec
(bad)
(bad)
push
call
add
nop
push
(bad)
add
fcomp
push
mov
ss
inc
dec
(bad)
pop
lods
shl
xlat
ror
arpl
jle
push
lods
imul
adc
sbb
push
cmp
sbb
scas
iret
mov
imul
fwait
js
mov
retf
fnstsw
lods
mov
js
lahf
and
arpl
push
popa
sub
sbb
fcmovnbe
cmp
inc
div
daa
mov
add
mov
lods
push
dec
cmp
mov
pop
in
jno
jbe
cmp
jne
mov
xchg
aam
add
inc
and
jecxz
dec
test
(bad)
adc
pusha
jmp
sbb
and
cmp
jno
mov
daa
cli
fcomp
inc
or
das
cs
popa
sbb
push
pop
or
stc
shl
mov
ins
adc
jae
stos
enter
sub
xchg
xor
add
mov
clc
fcom
fidivr
daa
repnz
push
dec
and
lahf
cwde
neg
jge
jge
fisubr
pop
mov
imul
out
mov
outs
sbb
dec
xor
popf
inc
mov
sar
aad
push
mov
hlt
int3
in
jns
mov
(bad)
gs
int
jecxz
pop
jnp
mov
mov
mov
stos
sbb
mov
jo
sbb
retf
outs
mov
mov
mov
sub
add
mov
pop
push
mov
add
shl
sub
pop
sbb
mov
stos
mov
and
dec
cld
jnp
inc
ds
cmp
retf
adc
test
dec
adc
push
mov
mov
gs
mov
pop
movs
ja
or
sub
cmc
call
aad
adc
lock
out
cld
stos
movs
inc
stos
dec
push
xorps
push
add
call
fdivr
add
and
outs
push
xlat
dec
lock
das
lds
stc
jl
adc
cdq
neg
fild
sub
movs
adc
sub
jo
push
ins
in
and
inc
pop
(bad)
enter
inc
ja
(bad)
movs
lahf
inc
add
pop
iret
xlat
daa
xchg
ss
cmp
nop
lds
mov
es
mov
and
jle
ss
xor
adc
jns
add
jnp
push
or
aas
adc
dec
inc
pushf
jns
adc
sti
aas
lahf
inc
cmp
or
lods
jnp
jle
xor
(bad)
push
pusha
inc
pop
xor
pop
test
mov
xchg
or
jns
jge
push
aaa
push
ds
cmp
add
stc
scas
adc
or
mov
push
add
jns
test
in
sbb
sub
xor
cmp
fcom
push
or
rcl
pop
dec
add
sbb
or
jge
(bad)
imul
sar
mov
jp
hlt
cmps
cmp
mov
adc
clc
pop
mov
add
cmc
popf
push
out
call
fisub
jmp
fs
inc
push
mov
cmp
imul
ret
adc
ds
and
cmp
stc
dec
pop
mov
sbb
cmps
cmps
inc
and
bound
sbb
imul
inc
repnz
fimul
inc
and
inc
cmp
leave
and
gs
xchg
rcr
dec
scas
sbb
xchg
repz
pop
dec
lea
aad
cmc
push
jbe
test
movs
imul
iret
sbb
sbb
sbb
jl
inc
imul
push
addr16
out
xor
inc
pop
add
jmp
cmp
fist
pop
push
stos
stos
push
test
cli
lahf
repnz
cmp
mov
call
mov
icebp
push
jmp
pop
sbb
adc
push
jecxz
mov
inc
std
das
(bad)
mov
repz
lods
dec
and
test
mov
pop
inc
(bad)
xlat
mov
adc
mov
add
add
out
jo
inc
mov
sub
xor
and
jecxz
xchg
std
push
sub
mov
xchg
xor
adc
xlat
imul
add
repz
jecxz
pop
in
fdiv
adc
sub
rol
sbb
adc
and
jg
pop
neg
fstp
call
add
cld
mov
stos
(bad)
out
sbb
lods
pop
cmc
jg
movs
cmp
fbld
and
sub
and
hlt
aas
dec
popa
jmp
mov
mov
cmp
lds
aas
sar
mov
cli
ins
clc
and
sar
out
cs
aad
ins
and
mov
cmp
add
sub
or
in
inc
dec
push
push
xchg
in
aaa
pop
adc
pop
push
and
data16
add
xor
add
in
(bad)
jl
and
and
cli
cli
xchg
(bad)
retf
in
cmps
push
iret
fstp
jne
push
retf
cmps
sub
loop
inc
pop
cdq
and
cmp
adc
cmps
repnz
add
push
sbb
pop
lea
in
inc
hlt
xor
jno
cmps
jne
add
imul
sbb
inc
jge
stc
hlt
pop
arpl
js
hlt
xchg
push
(bad)
push
add
inc
mov
cmc
imul
mov
xchg
movs
fwait
je
adc
sbb
cwde
daa
adc
cmp
mov
mov
call
jo
sub
inc
push
inc
mov
sbb
inc
dec
shl
dec
nop
push
pop
xor
jge
sahf
imul
add
xor
and
cmp
adc
hlt
push
jmp
lock
fimul
into
inc
jl
sbb
in
cmp
inc
push
sbb
xor
push
adc
dec
adc
push
cwde
in
inc
dec
xchg
cmovg
xlat
cmp
jge
sbb
dec
jl
dec
repz
aas
pop
scas
jb
pop
mov
mov
nop
dec
push
mov
or
cmps
sahf
jg
add
dec
pushf
sub
adc
push
fisubr
inc
shr
js
mov
dec
mov
inc
push
jecxz
dec
jne
ss
cli
stos
inc
adc
cmp
pop
xchg
repnz
sub
xchg
mov
cdq
scas
add
or
jmp
imul
mov
inc
test
cwde
push
or
mov
inc
test
mov
jo
push
test
rcl
aam
repz
mov
mov
loop
push
sbb
sbb
sbb
imul
lods
xor
test
fist
cld
jnp
scas
ss
scas
push
jnp
push
gs
shl
jle
sub
test
xor
in
mov
int
int3
repnz
add
sub
pushf
jns
sahf
mov
mov
xchg
and
aad
sbb
fadd
test
das
push
cmp
arpl
mov
mov
pop
xchg
inc
pop
push
xchg
adc
jns
imul
stos
leave
adc
hlt
shl
cli
jno
mov
cmp
cmps
adc
jo
jno
test
stos
adc
jge
mov
xor
out
movs
in
jge
into
jecxz
inc
or
push
adc
ret
cmp
(bad)
imul
jmp
sbb
mov
imul
add
jno
das
out
mov
shr
sub
mov
loope
repz
mov
ins
push
push
rcl
jecxz
or
retf
dec
and
mov
sbb
sub
push
aaa
mov
mov
cmp
aas
imul
idiv
adc
push
add
add
loope
push
js
sahf
cmp
cmp
loop
aad
push
jmp
sub
lea
and
movs
iret
sti
(bad)
test
outs
adc
add
xchg
push
jg
aas
aad
popf
adc
jmp
jmp
pop
push
arpl
aad
ins
add
js
fs
out
outs
add
repnz
sbb
add
iret
in
aad
inc
cs
push
das
adc
pop
add
inc
div
xchg
scas
stos
mov
cmp
lock
mov
(bad)
movs
inc
hlt
jmp
aas
jmp
fnstsw
push
inc
dec
loope
sbb
sub
dec
dec
push
jo
pand
xchg
mov
bound
xchg
adc
fdivrp
add
in
(bad)
push
adc
push
enter
enter
pop
lock
push
in
sar
jle
mov
jmp
pop
mov
mul
shr
xlat
outs
pmaddwd
retf
cmc
mov
push
inc
xchg
mov
aam
cli
lahf
xor
sahf
cmp
push
pop
lea
sti
retf
rcl
mov
ss
xor
imul
sub
enter
pop
or
cmps
or
out
adc
fmul
hlt
xchg
xor
mov
jp
jno
leave
shl
mov
cmps
xchg
and
jecxz
retf
or
jnp
cs
inc
ds
(bad)
rcr
add
test
sub
dec
jno
xchg
sub
sahf
mov
inc
mov
js
loope
cmp
rcr
lea
cmp
xor
pop
scas
lahf
mov
cld
cli
hlt
push
xor
pop
mov
std
mov
stc
and
or
out
mov
stos
jmp
outs
idiv
in
jge
das
popa
lock
sbb
dec
xchg
jb
aad
mov
icebp
xor
jmp
xchg
test
test
mov
add
aam
in
jg
faddp
fwait
mov
ror
sbb
(bad)
aam
jmp
dec
push
inc
loope
out
leave
add
mov
add
and
mov
cmp
repnz
xor
movs
xchg
cli
sti
mov
mov
arpl
inc
push
stos
or
dec
scas
js
adc
add
push
mov
jl
cmp
in
fld
leave
(bad)
call
data16
mov
jne
pop
dec
nop
ins
hlt
inc
pop
scas
mov
push
mov
sbb
add
add
lods
jg
mov
push
ss
sar
jge
(bad)
(bad)
movs
sub
sbb
movs
dec
lea
leave
es
push
inc
cwde
mov
xchg
outs
neg
int
mov
icebp
stos
aad
push
cmp
(bad)
jb
push
pop
xlat
(bad)
push
mov
xchg
mov
out
sbb
arpl
sub
test
mov
mov
dec
jge
stos
mov
jg
push
(bad)
mov
out
cmp
xor
push
pop
cmp
add
in
fistp
and
adc
in
(bad)
cmps
sbb
cmp
div
out
in
mov
xor
int3
lods
inc
dec
xor
push
inc
icebp
push
push
iret
adc
mov
pop
inc
int3
pop
mov
in
fmul
mov
or
out
repz
xlat
(bad)
pusha
sbb
push
sbb
rcl
add
push
dec
push
and
iret
xor
adc
loop
jnp
scas
sbb
and
jnp
ja
cmp
mov
shr
cmovp
mov
pop
xor
loop
jg
xor
lds
mov
les
adc
lea
mov
ror
add
lahf
cmps
jmp
cdq
shl
sti
xor
not
fs
push
movs
or
xbegin
mov
ins
rol
test
push
add
arpl
aaa
xchg
xor
in
jmp
pop
arpl
push
cmps
pop
scas
stos
xchg
push
xchg
and
lahf
mov
popa
mov
nop
mov
ficom
cli
icebp
call
jnp
mov
cmps
xor
push
aad
mov
mov
shl
push
in
dec
sub
cmp
(bad)
cmc
mov
and
adc
ins
push
fwait
push
xchg
cmc
add
scas
repz
aas
in
cmp
mov
push
test
push
mov
stos
or
movs
jo
adc
push
or
sub
arpl
xchg
aaa
xchg
inc
mov
adc
call
ret
mov
xchg
xlat
outs
lds
shr
push
pushf
add
xchg
inc
test
adc
test
fsubr
js
jo
push
push
mov
(bad)
xchg
scas
movs
call
out
push
inc
js
add
jne
jno
jg
pop
pop
fstp
cmp
xor
jb
push
and
imul
sbb
enter
vcmpsd
(bad)
scas
(bad)
sub
sbb
sbb
lds
pop
push
mov
out
sti
aaa
das
lods
lods
mov
sbb
fwait
push
pop
bound
inc
add
push
add
mov
aaa
jbe
ret
mov
mov
(bad)
int3
push
push
sub
lods
xor
inc
pop
add
sti
jle
sbb
lods
cli
mov
mov
ss
jmp
push
in
cld
sar
mov
and
sbb
test
dec
fstp
lea
mov
(bad)
(bad)
(bad)
mov
mov
in
movs
lods
icebp
cmps
xchg
pop
inc
cdq
arpl
cmp
cmp
mov
add
daa
ret
xchg
imul
lds
inc
mov
scas
fs
pop
clc
sub
in
arpl
(bad)
push
dec
push
mov
test
inc
(bad)
popa
in
xor
push
adc
(bad)
cwde
push
pop
outs
scas
or
xor
pop
(bad)
movs
mov
mov
outs
popf
enter
gs
xor
arpl
sub
test
inc
lea
push
pop
(bad)
push
sub
je
xor
cmps
js
pushf
xchg
pop
movs
sbb
sub
in
cmc
stc
inc
xchg
mov
(bad)
call
test
and
xchg
test
int
or
sub
gs
sub
mov
mov
adc
jmp
pushf
pusha
push
in
sbb
push
cmps
popf
imul
cmp
sub
stos
sub
xor
movs
push
add
mov
cmp
inc
sub
clc
mov
shl
popf
or
imul
repnz
iret
cmp
jg
mov
ret
and
push
and
ret
retf
mov
mov
repz
rcl
inc
outs
sbb
and
cli
inc
cmp
mov
adc
mov
adc
push
out
add
fwait
ss
mov
rcl
cmp
xchg
cmp
dec
xchg
inc
scas
mov
mov
add
add
xlat
and
xchg
add
dec
xor
or
xchg
dec
cmp
dec
movs
jnp
xor
ja
repz
mov
jp
out
sub
(bad)
sbb
inc
push
int
outs
pop
test
and
fdivrp
add
fwait
gs
sbb
xchg
or
enter
cmp
jecxz
call
mov
loopne
mov
jecxz
iret
sbb
dec
and
fcom
mov
dec
sub
and
(bad)
xlat
xchg
jbe
push
mov
fild
jp
in
cld
call
mov
mov
sub
pushf
mov
xchg
push
push
jecxz
or
jecxz
sar
shl
fst
fsubr
xchg
scas
shl
mov
mov
fistp
hlt
fist
cmps
xchg
and
adc
dec
sbb
sti
into
fsubrp
movs
xlat
lea
imul
pop
cmp
les
repnz
push
push
xchg
or
shl
gs
icebp
fdiv
sub
icebp
push
push
push
push
retf
xor
test
push
(bad)
or
lods
mov
test
rcr
add
dec
or
sub
dec
fwait
jle
test
aaa
push
in
push
in
imul
cmc
add
gs
dec
hlt
and
les
and
cmp
add
call
ror
push
or
dec
jmp
push
cmp
pop
adc
call
or
test
lods
stc
std
xor
in
push
lds
jno
sbb
ret
pop
sbb
mov
xchg
aas
iret
movs
mov
(bad)
cmp
mov
mov
or
sbb
mov
adc
mov
push
in
out
mov
js
scas
mov
sub
scas
in
mov
mov
mov
addr16
into
cmps
cmc
xor
inc
jle
sbb
dec
sbb
rcr
push
adc
jp
add
sub
ficom
push
pop
ficom
push
jmp
cmps
and
mov
aas
outs
cmp
data16
mov
push
loope
inc
jo
les
test
movs
jne
stos
mov
pop
inc
xchg
jbe
pop
mov
cwde
mov
mov
dec
in
(bad)
push
(bad)
ins
jecxz
fcmovu
push
xchg
retf
sahf
and
xlat
xor
loopne
cmp
fadd
loopne
push
mov
or
add
pop
inc
push
mov
pop
xchg
inc
sub
inc
shl
popa
cmp
movs
mov
fs
movs
ds
inc
hlt
cld
sti
xchg
lods
mov
scas
test
jne
xor
es
loopne
xor
push
mov
js
cmp
or
call
mov
mov
pop
stos
mov
lods
scas
stos
rcl
rcl
sbb
jge
rcr
in
int
lods
inc
xor
add
push
sahf
lods
jg
(bad)
cmp
cmp
or
in
push
jmp
into
ret
and
rol
pop
jbe
fisttp
mov
vmwrite
inc
adc
mov
sbb
sbb
scas
movs
push
and
fdiv
stc
jne
cmp
add
pushf
jno
test
ds
sbb
enter
push
and
or
and
jle
mov
mov
add
nop
outs
rcr
leave
scas
ss
(bad)
push
dec
fld
rep
jp
xchg
lods
add
jge
sub
push
aaa
test
test
pushf
(bad)
mov
add
scas
in
mov
mov
add
call
dec
sbb
inc
or
ror
stos
dec
ja
fadd
xchg
adc
jle
pop
xor
and
jecxz
shl
cmp
ja
repnz
cmp
fnsave
ficomp
mov
pop
imul
xchg
ret
mov
scas
jne
pop
lock
call
add
es
push
sub
jo
xor
(bad)
pusha
cmp
aad
dec
cmc
movs
retf
arpl
jmp
jmp
movs
shl
int3
retf
sub
dec
mov
sub
retf
mov
adc
adc
xor
ins
fcmovnu
fcmovnb
outs
test
movs
push
push
dec
and
dec
add
shl
ror
aas
ja
fst
add
inc
loope
push
loop
std
adc
adc
or
pop
(bad)
fdivr
ins
jle
cmp
push
lods
outs
cmp
xchg
test
pushf
pop
push
xchg
ret
push
push
mov
dec
jle
mov
fs
cdq
scas
outs
je
dec
mov
add
retf
movs
test
add
mov
push
xor
(bad)
xchg
or
xor
pop
or
cmc
shl
call
xchg
cmp
sub
mov
mov
mov
lahf
jle
stc
jp
out
not
lds
lahf
ror
push
sbb
popa
ja
ja
push
jge
xor
retf
push
or
mov
mov
loope
(bad)
and
push
aam
jge
lock
int
mov
xor
add
cs
clc
mov
xlat
add
ja
mov
inc
icebp
cmps
fldpi
rol
adc
push
add
jecxz
push
or
ds
dec
shr
jge
pop
fcom
xor
or
mov
mov
data16
stc
outs
in
pusha
lods
sub
sub
mov
retf
pop
ins
js
sub
xchg
xor
push
dec
pop
popf
inc
add
mov
in
retf
(bad)
xor
dec
inc
inc
xor
test
push
and
xchg
inc
xchg
pop
jg
or
stos
mov
mov
adc
je
mov
mov
sahf
sti
imul
fsubr
lock
sub
fstp
movs
sub
cmp
push
imul
(bad)
or
in
call
(bad)
mov
adc
mul
dec
movs
jp
aam
bound
cmp
(bad)
loopne
mov
sbb
dec
loope
outs
addr16
ins
and
repnz
jne
mov
jo
push
mov
adc
pop
ret
pop
mov
dec
push
xchg
push
sub
aad
add
lock
fcmove
loop
in
push
sbb
add
inc
pop
mov
mov
adc
jecxz
push
call
xchg
mov
ficom
scas
or
dec
dec
rcr
xchg
int
fs
pop
shrd
leave
ss
call
xor
int
adc
xchg
fst
add
xchg
dec
jge
(bad)
cmps
push
stos
stos
lods
sub
add
(bad)
adc
xchg
fwait
enter
in
add
(bad)
mov
fiadd
iret
scas
sbb
push
jecxz
xor
in
js
mov
xchg
outs
out
pop
ins
mov
jno
add
dec
cmps
aam
xor
cwde
retf
in
std
jmp
lods
mov
inc
xchg
iret
inc
push
sbb
add
rcl
and
dec
movs
dec
mov
aad
ds
sub
xchg
dec
pop
shl
pop
sbb
mov
lods
xchg
fisubr
icebp
cmp
loop
xchg
pop
adc
push
aad
ret
and
stc
hlt
or
jo
scas
icebp
shr
stc
fist
aam
test
xchg
cmc
adc
cld
jnp
pop
out
es
jmp
cmp
push
sbb
sub
ds
or
lods
push
mov
dec
out
sbb
push
retf
in
sbb
cmp
xor
push
jns
adc
movs
xchg
(bad)
stos
push
das
hlt
not
repz
fld
into
aad
pop
call
mov
and
xor
out
xlat
test
xor
push
sti
inc
stos
mov
adc
(bad)
dec
mov
jbe
daa
push
sbb
hlt
fwait
add
idiv
push
mov
dec
je
lahf
xchg
mov
push
and
push
jp
cs
xor
sub
nop/reserved
mov
mov
(bad)
adc
cld
jnp
or
enter
icebp
call
mov
ds
xchg
cld
xchg
aad
mov
shl
js
jg
xor
jno
arpl
inc
jg
test
fmulp
xchg
inc
xchg
je
lods
jg
in
jecxz
cli
add
or
or
aam
xor
js
jmp
fcomp
push
push
aam
mov
aam
dec
retf
and
(bad)
loopne
imul
pop
xor
fdiv
aaa
rol
lock
jecxz
push
and
and
fcmove
sahf
daa
lea
retf
in
sar
jle
cmp
dec
je
dec
xchg
jnp
nop
push
(bad)
sub
push
push
inc
cmps
rol
push
push
aam
ins
jecxz
rcr
jg
jnp
arpl
call
repz
cwde
repz
lods
mov
push
std
imul
dec
xor
push
cwde
dec
int3
inc
push
mov
sub
inc
pop
hlt
pusha
jno
add
mov
retf
xchg
push
test
lods
dec
cmp
nop
mov
add
ja
in
(bad)
xor
sub
cmc
adc
dec
sbb
and
xchg
in
sti
mov
mov
repz
or
and
rcl
or
pop
ret
xor
(bad)
rcl
mov
xor
fidiv
adc
and
mov
sar
lahf
outs
ins
mov
inc
daa
mov
test
or
repz
shl
xchg
je
push
xor
popa
sub
push
inc
jno
and
pop
movs
inc
mov
pop
jp
pop
fwait
int3
arpl
lds
mov
cmp
mov
pop
ins
call
scas
inc
jg
mov
addr16
or
push
neg
push
les
mov
repnz
push
lahf
mov
push
xchg
mov
cmp
push
ror
cmps
pop
rcr
shr
movs
test
hlt
push
sub
pop
dec
cmp
jns
xchg
fld
mov
fld
mov
inc
les
xor
fbstp
mov
adc
div
inc
sub
push
ins
push
sbb
mov
jecxz
push
ss
or
scas
pop
clc
cmp
jge
mov
jle
imul
sub
mov
add
cmps
out
je
cmps
fdivr
sub
mov
pop
int3
push
and
rcr
jns
pop
fld
mov
pop
jmp
mov
daa
inc
add
daa
in
shl
cmp
jmp
and
ret
sbb
aas
iret
shr
das
sub
adc
(bad)
call
rol
push
mov
icebp
push
ror
retf
(bad)
jle
mov
cmp
push
cmp
aad
or
adc
test
cmp
pop
sub
ds
jns
cmc
inc
dec
and
xor
shl
xor
fldenv
or
add
shr
fsubr
hlt
pushf
pushf
or
shl
xchg
inc
iret
mov
hlt
push
and
test
out
rcr
stos
lea
xchg
fcomp
dec
push
pop
mov
push
mov
inc
add
dec
aas
fimul
int
xchg
js
data16
mov
ror
jecxz
sbb
out
test
or
or
cmp
and
mov
xchg
inc
push
mov
data16
jmp
enter
pushf
lods
mov
add
fdivr
dec
addr16
(bad)
lods
jbe
xor
setg
jle
es
cmp
sub
dec
mov
push
jl
jl
sub
and
lock
cmp
and
sbb
pusha
sti
fmul
adc
push
fsubr
imul
out
out
jge
dec
xor
xchg
pop
push
mov
icebp
loop
rcl
retf
mov
fnstenv
(bad)
jmp
stos
jns
xor
sbb
inc
or
icebp
cmps
push
add
jnp
hlt
pop
pop
lods
nop
and
(bad)
add
call
jne
add
mov
mov
add
mov
lahf
lods
scas
push
aad
fistp
inc
xchg
adc
sub
rcl
call
inc
push
clc
xchg
outs
and
push
add
inc
adc
adc
fldenv
adc
jmp
test
jnp
hlt
mov
xor
dec
inc
add
cmp
jo
loope
mov
fstp
js
out
(bad)
mov
in
and
and
adc
pop
mov
(bad)
pop
(bad)
xchg
adc
imul
inc
sub
xor
and
add
(bad)
in
dec
out
icebp
xchg
into
pop
icebp
add
movs
je
bndldx
call
jo
(bad)
les
test
pop
sbb
pop
sbb
cmp
ins
jno
pushf
cs
test
cld
push
inc
retf
lds
movs
push
std
aad
bound
pop
pop
int
call
or
xchg
lods
inc
imul
sub
shr
jmp
jne
sbb
sar
inc
ja
mov
xchg
and
mov
cmp
push
xchg
mov
cmp
data16
pop
fmul
jno
nop
ret
pop
mov
inc
enter
or
mul
jge
movs
xchg
ins
test
out
dec
sub
add
sub
mov
jb
aaa
repz
out
jae
cmc
in
and
cmps
mov
push
jne
cmc
pop
aad
dec
fcmovnbe
cdq
dec
data16
(bad)
call
xchg
shl
mov
cmp
ss
add
(bad)
outs
mov
mov
dec
dec
out
sub
aaa
js
test
ror
mov
(bad)
push
sub
xchg
mov
outs
stos
int3
or
sbb
rol
push
push
xchg
in
out
lods
dec
push
lea
mov
loopne
sbb
sahf
lahf
enter
mov
addr16
pop
or
inc
pop
dec
push
sar
pop
sbb
xchg
sbb
fistp
add
push
stc
sbb
das
mov
add
jmp
sbb
mov
adc
jge
pop
xchg
push
lds
push
sub
jno
je
cmps
push
fisttp
pop
(bad)
or
jbe
dec
push
add
iret
ds
jbe
movs
cmps
xchg
pop
scas
addr16
lds
es
add
inc
add
inc
adc
aaa
cs
or
fcmovb
in
push
pop
lods
retf
adc
adc
mov
and
mov
mov
(bad)
int
push
retf
xor
test
mov
sar
retf
(bad)
daa
push
mov
into
inc
cmps
sbb
xor
stc
hlt
je
xlat
stc
push
xchg
fst
xchg
pop
std
xlat
and
mov
hlt
iret
bound
mov
outs
sub
inc
mov
jle
ins
repz
dec
mov
xchg
(bad)
int
stos
inc
inc
add
in
ins
cmp
lea
pushf
icebp
mov
dec
imul
pop
or
xchg
sub
jne
in
inc
xchg
pop
cmc
push
aas
cmps
dec
ins
fimul
mov
xor
(bad)
cli
mov
sub
inc
stc
sub
mov
aaa
jb
xor
sbb
adc
and
xchg
mov
jmp
(bad)
cld
jmp
sbb
push
pusha
jo
add
dec
cdq
jmp
hlt
adc
jns
stos
mov
adc
pop
cmp
jno
pop
jg
scas
std
jge
sub
jbe
nop
ss
jl
sub
stos
mov
cdq
pop
cmp
inc
mov
adc
cmp
lea
leave
add
xor
jnp
jb
cs
movs
mov
sub
and
xlat
sub
pop
aad
fld
add
out
push
in
test
sub
loop
inc
pop
idiv
addr16
mov
(bad)
cmp
shl
add
jne
pop
mov
sbb
pop
cmps
mov
jno
cmovp
sub
fst
inc
push
sbb
leave
jge
push
or
adc
(bad)
mov
out
aaa
(bad)
in
mov
push
xor
aaa
sbb
xchg
sub
or
push
dec
stos
jns
pop
scas
cmps
inc
adc
pop
repz
out
push
fisubr
test
jl
add
test
aas
repz
push
adc
xchg
mov
imul
(bad)
stos
inc
jmp
leave
mov
in
xchg
adc
adc
sbb
jmp
sub
dec
add
push
sub
mov
mov
out
mov
in
adc
ds
gs
jle
mov
std
adc
arpl
mov
xchg
cmp
cmp
in
pop
aas
mov
call
ror
or
rol
add
scas
ds
in
jbe
adc
jno
cmp
call
mov
loopne
jno
test
adc
test
sahf
push
mov
push
shl
pop
jnp
bound
push
sbb
pop
inc
aas
in
rol
mov
xor
jae
add
inc
ds
xor
sub
clc
mov
cdq
cmp
int
xor
sar
mov
ficomp
jp
sub
push
fs
cmp
push
sub
(bad)
popa
or
pop
xchg
das
(bad)
cmps
dec
pop
sar
jg
lahf
popa
dec
jecxz
imul
pop
xor
adc
aam
xor
bound
xor
aas
cmp
sti
pop
or
xchg
inc
and
and
add
mov
(bad)
popa
sbb
aad
or
test
mov
lahf
addr16
push
lods
pop
add
adc
sbb
pop
push
or
stos
mov
cmps
(bad)
mov
test
(bad)
(bad)
and
mov
pop
leave
ins
or
cmps
mov
and
inc
or
stos
jo
push
pop
adc
and
movs
inc
mov
mov
dec
xor
cwde
jg
cmc
dec
cmp
icebp
sbb
sbb
dec
pop
push
pop
push
sub
xchg
xor
xor
push
shr
mov
icebp
or
jb
sbb
jb
test
ficom
pushf
shl
cmp
dec
jne
push
or
xchg
add
sar
dec
leave
sti
cmovo
adc
in
pop
outs
arpl
stos
sub
dec
or
mov
mov
inc
jecxz
mov
mov
adc
cs
in
pop
test
rcl
xor
pop
loope
push
push
jo
adc
test
retf
stc
inc
mov
movs
lahf
adc
cmp
test
cmp
lods
test
mov
and
(bad)
push
inc
fcmovnb
jle
or
call
and
pop
sub
dec
adc
mov
rcr
mov
out
(bad)
cwde
out
leave
mov
push
add
inc
cmp
push
xchg
adc
mov
jno
fstp
mov
push
xor
mov
add
sub
cli
mov
mov
dec
mov
cdq
and
not
push
das
pop
jmp
sti
jl
pop
cmp
(bad)
cli
and
adc
mov
lahf
mov
repnz
dec
pop
rcl
rcl
pop
das
cmc
push
shl
pop
pop
pop
or
nop
sahf
fwait
leave
dec
(bad)
jns
or
and
call
out
fisubr
or
fisttp
ins
into
sbb
jge
gs
push
dec
add
inc
xchg
lods
sbb
inc
adc
pop
out
cli
outs
movs
arpl
add
push
(bad)
jl
cmp
ret
(bad)
cmp
cmp
call
(bad)
push
cmp
add
call
cmp
lock
je
(bad)
adc
pop
add
test
xor
sti
add
pop
test
call
(bad)
jnp
adc
mov
movs
sub
sub
adc
mov
jle
lea
jge
jmp
push
mov
adc
neg
sbb
cld
cli
cmp
fs
sbb
sbb
inc
push
sub
pop
mov
xlat
outs
push
shr
fmulp
mov
jnp
adc
sub
popa
mov
xlat
jnp
push
sbb
fdiv
jge
frstor
aam
xlat
lods
or
cld
(bad)
push
push
out
ja
fstp
pop
mov
popaw
dec
popf
inc
dec
nop
(bad)
jmp
and
pop
or
aas
outs
dec
push
xchg
sub
cli
std
inc
mov
mov
mov
xchg
or
inc
mov
inc
dec
jns
xchg
and
adc
int3
push
cld
mov
(bad)
loop
fldenv
dec
outs
data16
lds
jmp
leave
gs
(bad)
mov
mov
ins
test
in
lock
aaa
mov
mov
movs
or
out
cmp
or
call
push
push
dec
push
xchg
sub
or
jne
dec
inc
sub
push
(bad)
cld
cmp
mov
inc
(bad)
cld
inc
push
cdq
test
bswap
mov
add
lock
adc
cmp
div
call
sbb
xor
inc
xchg
cmp
inc
push
adc
outs
jo
es
aas
scas
rcr
sbb
inc
daa
(bad)
and
cmps
jo
jl
jo
jge
addr16
sbb
(bad)
xor
pushf
nop
sub
pop
out
or
xchg
pop
sub
pusha
pop
adc
cld
lods
and
movs
enter
imul
or
movs
cmp
imul
shr
jae
push
xchg
shl
pushf
cmp
shl
sti
stos
sub
rcl
pop
dec
sbb
es
jbe
ins
data16
imul
(bad)
jo
cwde
test
fmul
inc
scas
setge
sbb
jle
inc
jae
cmp
or
repnz
inc
retf
mov
jmp
imul
sub
shl
push
xchg
push
jp
out
inc
repnz
repnz
aaa
mov
and
test
mov
xchg
jns
ja
mov
retf
add
add
lods
jno
or
lods
sub
call
movs
mov
loope
lds
push
push
push
pop
dec
nop
pop
loop
movs
mov
sti
add
mov
xchg
retf
loop
lock
repnz
pand
or
push
ja
test
loop
sbb
bnd
xor
and
mov
push
sub
sahf
js
fst
lock
mov
jge
aad
push
mov
ret
adc
loopne
cdq
cmp
iret
adc
jnp
adc
and
add
pushf
inc
sub
popf
or
sbb
lods
int3
push
mov
jmp
add
sub
add
sub
add
inc
sbb
nop
push
out
and
or
ds
mov
cmp
jmp
xchg
or
dec
sbb
add
fst
adc
sub
lahf
lds
lds
and
push
push
test
pop
and
inc
jo
ins
xchg
lods
cmp
out
cs
sbb
and
push
out
push
inc
jge
fcomp
mov
out
mov
fdivr
jle
mov
adc
inc
pop
xchg
xchg
les
lahf
push
(bad)
sub
ins
dec
arpl
aam
cmp
pop
fidivr
cmps
into
fldlg2
jmp
test
nop
or
mov
mov
dec
sbb
out
xchg
jns
push
pop
mov
push
inc
stc
or
adc
sbb
jne
(bad)
ins
xchg
and
or
in
xchg
ds
jg
xor
push
xor
lahf
arpl
and
mov
mov
or
jg
mov
mov
aas
adc
sbb
or
movs
scas
mov
cld
mov
std
xor
scas
and
sub
dec
dec
test
leave
rcr
shl
jge
and
pop
push
sahf
inc
sar
lahf
cmps
dec
fisttp
sti
ret
sub
mov
fstp
cs
loopne
rol
adc
scas
es
fs
dec
adc
pushf
addr16
sti
cmp
mov
adc
or
lds
call
push
dec
inc
pop
sbb
inc
mov
adc
fdivr
jle
jmp
sar
jge
icebp
fwait
jo
inc
fimul
push
clc
or
jmp
xchg
mov
dec
out
lahf
loopne
repnz
push
cmp
xchg
(bad)
retf
retf
adc
dec
test
icebp
bound
cli
xor
xchg
lds
jg
lahf
lahf
dec
adc
(bad)
sbb
add
inc
sub
mov
cli
cmp
cdq
sbb
call
(bad)
cmp
stos
and
(bad)
sbb
outs
adc
cmp
dec
mov
mov
jecxz
or
imul
sub
mov
aad
nop
mov
(bad)
out
add
icebp
push
adc
pop
mov
jne
icebp
shl
call
dec
shl
in
imul
jle
adc
retf
std
fwait
add
push
test
sti
out
pop
out
mov
test
or
add
inc
cli
aad
std
mov
push
or
push
fwait
mov
xor
xchg
jle
cmp
dec
or
stos
lods
(bad)
dec
out
out
dec
push
and
movs
xor
lods
push
dec
inc
pop
cli
sti
xchg
stc
mov
sub
mov
bound
div
xor
and
sub
add
stc
cmc
xor
rcl
nop
sub
dec
aas
into
cmps
test
test
lds
xchg
aad
push
mov
mov
mov
loope
mov
mov
xchg
push
cmps
test
pop
and
xlat
std
sahf
xchg
outs
ss
sbb
jae
and
pop
iret
cmp
sub
xor
jg
jecxz
mov
dec
test
stc
fisttp
jmp
imul
iret
movs
push
ret
mov
ret
movs
push
cld
xchg
call
imul
retf
push
sar
add
push
xor
push
sub
icebp
outs
scas
mov
and
sub
js
sbb
ds
ds
push
cld
cli
sbb
imul
add
stc
mov
mov
dec
xchg
xor
inc
push
dec
adc
int3
ficom
aad
xchg
aas
lahf
iret
mov
sub
jge
inc
pop
aam
sar
xor
div
inc
arpl
push
sbb
xor
or
mov
adc
sbb
sti
jbe
inc
push
mov
aaa
pop
in
cmp
xchg
mov
dec
sub
call
aam
mov
xchg
pop
inc
test
nop
dec
aam
cmp
(bad)
cmps
loope
xchg
pop
(bad)
adc
pop
cmp
add
out
sar
or
leave
cmp
xchg
or
nop
ins
std
pop
mov
pop
aam
xor
cli
or
cmp
cli
loopne
sar
mov
push
jecxz
lahf
call
mov
xor
repnz
stc
imul
ret
(bad)
mov
retf
in
inc
addr16
jb
inc
push
sub
ins
sub
stc
inc
push
adc
sbb
dec
push
imul
movq
mov
stos
sbb
cmps
sbb
xor
dec
pop
retf
std
pop
dec
pop
retf
mov
leave
dec
div
pop
add
adc
mov
cmp
ins
bound
mov
push
xor
push
push
xchg
sar
imul
mov
or
shr
inc
sub
jl
aam
add
push
stos
xchg
cmp
mov
lea
sar
hlt
cmps
cmp
aas
outs
scas
push
mov
jmp
jg
mov
cmp
mov
pop
ret
dec
mov
sbb
data16
pop
fucomip
aas
cmps
mov
fucompp
xchg
shl
icebp
xor
jb
push
repnz
jge
dec
pop
jmp
jg
scas
sti
cmp
mov
mov
ror
or
lock
rcl
aad
mov
mul
imul
loope
sar
jg
dec
adc
test
mov
jns
xor
repnz
fwait
xchg
rol
test
mov
push
aam
dec
inc
sbb
and
aaa
pop
dec
add
rol
js
cmp
cmp
or
mov
lock
icebp
push
lahf
outs
fcmovnbe
mov
in
sub
or
jb
repnz
(bad)
cmps
daa
jmp
test
xchg
or
aad
and
cmp
ds
cmc
call
cmp
inc
rcl
push
shl
add
dec
fyl2xp1
je
pop
test
imul
sti
jns
and
outs
add
stos
dec
popa
(bad)
pop
loope
aaa
mov
mov
daa
repz
xor
shl
shl
adc
cdq
add
(bad)
aas
ja
mov
iret
dec
icebp
aas
xchg
lods
mov
or
push
inc
pop
fadd
xchg
xor
sub
xor
xlat
retf
in
mov
mov
mov
cmp
lahf
mov
mov
outs
out
dec
xchg
mov
xor
sbb
cmp
sub
retf
or
stos
les
sub
lods
out
(bad)
sbb
retf
(bad)
ds
mov
pop
sub
jmp
push
inc
cmps
mov
lahf
mov
or
sub
xor
pop
jns
xchg
pusha
sub
(bad)
push
or
iret
div
enter
or
xchg
push
dec
or
mov
push
push
add
jmp
push
movs
inc
lds
(bad)
js
jp
dec
add
jecxz
int
jo
jno
je
jno
xor
cmps
add
xchg
cwde
(bad)
les
push
lea
push
sahf
ins
mov
or
ins
sbb
push
or
(bad)
out
pop
pop
clc
jb
and
cmp
dec
lahf
idiv
(bad)
not
mov
sbb
adc
sbb
movs
mov
cmp
mov
add
(bad)
add
stc
je
lock
sahf
inc
dec
aad
aam
mov
mov
jecxz
pop
repnz
adc
enter
mov
(bad)
call
adc
mov
cld
xchg
or
xlat
jmp
cmp
and
push
xchg
dec
push
nop
xor
push
xchg
in
xlat
bnd
cmp
dec
and
test
dec
xchg
push
pop
pop
xchg
xchg
retf
ss
(bad)
into
gs
data16
push
cmp
push
xor
add
mov
imul
ins
lods
das
and
jae
in
adc
adc
jo
fld
xchg
push
shl
sub
ins
cmp
xchg
xor
enter
inc
scas
jp
fidivr
and
lods
push
movs
adc
push
inc
sbb
and
pop
jecxz
jecxz
ss
scas
xlat
cmp
add
mov
xchg
std
xor
js
add
push
mov
ds
cmp
inc
xor
jge
in
nop
dec
or
xor
cmp
push
fs
mov
mov
xchg
pop
shl
test
aam
stos
into
sbb
cmc
daa
cli
jno
pop
pop
fwait
dec
lahf
or
or
cmp
dec
stc
jg
retf
mov
jae
sti
adc
rcl
sbb
loope
jg
shl
ficom
or
xor
push
jmp
jnp
jb
mov
mov
loope
push
jb
sub
add
(bad)
cli
mov
xor
push
mov
dec
rcl
xchg
fist
(bad)
gs
and
aam
xor
dec
stos
dec
cwde
add
mov
dec
imul
inc
jb
dec
outs
fst
push
das
test
and
push
inc
push
arpl
add
jns
add
fbld
mov
or
imul
add
sti
imul
mov
fs
call
retf
stos
call
push
sar
or
fdivrp
sti
add
in
mov
add
mov
push
mov
push
ret
xchg
mov
mov
call
pushf
or
cvttps2pi
cli
sub
mov
cdq
sbb
adc
stos
mov
test
mov
mov
add
repnz
cmc
mul
ins
icebp
dec
ins
mov
dec
sub
mov
cwde
adc
stos
cmp
xchg
stos
dec
sbb
lahf
push
movs
ret
push
push
cmps
push
js
(bad)
pop
sub
or
test
mov
iret
mov
sub
sbb
call
loop
jns
cld
sbb
arpl
jno
adc
repnz
xchg
mov
mov
(bad)
out
xor
repnz
mov
enter
push
les
xchg
pusha
xor
cmp
mov
and
jmp
adc
cwde
xlat
out
aas
popa
repnz
cmps
inc
ds
es
sar
stos
loop
xchg
(bad)
and
xor
push
aam
test
push
and
xchg
jne
jmp
mov
call
mov
sar
test
add
cdq
push
sahf
mov
rol
mov
mov
xlat
jmp
xor
inc
cli
lahf
jb
mov
popf
mov
and
pop
into
lahf
cs
out
dec
out
mov
adc
dec
scas
movs
mov
jne
dec
mov
les
imul
cmp
neg
rol
loop
ret
mov
div
jle
mov
dec
mov
push
sub
aas
jno
sbb
and
jle
add
cmp
mov
fiadd
and
dec
xchg
push
jle
daa
sbb
jmp
js
jb
fcmovnbe
jecxz
aam
ficomp
xor
movs
dec
aam
mov
cmp
(bad)
xor
jbe
push
push
sub
pop
jge
sbb
fcom
out
ss
in
mov
cmp
rcl
ret
ret
xchg
jne
cmp
clc
mov
int3
repnz
out
push
fmul
rol
(bad)
jnp
sub
sub
div
mov
dec
cmp
pop
mov
or
test
ja
pop
adc
inc
mov
xchg
xchg
mov
and
(bad)
ror
inc
push
sub
inc
rcr
jge
pop
dec
jo
out
fild
xor
adc
inc
stos
jl
inc
rcr
lds
xchg
add
add
retf
in
jmp
retf
cmps
das
pop
push
dec
or
fisub
and
popf
leave
cmp
sbb
cmp
jae
mov
sbb
and
pushf
or
jns
(bad)
or
(bad)
loopne
add
adc
jae
cmps
push
or
dec
xchg
cmp
movs
xchg
lds
xchg
fsubr
xchg
adc
mov
add
sbb
and
loop
sub
retf
mov
daa
and
and
stc
sub
sar
arpl
call
ss
test
ret
das
cmc
and
inc
adc
inc
jno
imul
adc
test
push
or
mov
cmp
shl
call
sbb
es
je
mov
inc
pop
xor
imul
nop
neg
jmp
cli
in
not
adc
push
sahf
adc
out
lea
mov
outs
add
pusha
jle
sahf
mov
push
push
ficomp
mov
dec
popa
push
repnz
adc
enter
pop
(bad)
add
mov
nop
fcomp
ret
ret
inc
aam
test
push
xchg
mov
enter
push
fdiv
loope
push
leave
pop
aas
dec
cmp
pop
iret
cmps
cld
push
add
lods
inc
imul
retf
nop
sub
mov
push
adc
sbb
pop
ret
imul
or
arpl
jle
xor
cwde
pusha
xor
add
add
retf
add
inc
xor
add
jnp
adc
push
in
jp
xchg
stc
pushf
inc
mov
cmps
cmps
xchg
cmp
dec
push
int3
pop
cwde
jns
and
std
sub
dec
xchg
ret
jno
pop
mov
cmps
jo
test
fs
sbb
test
and
stc
loopne
cmps
xchg
pop
cmps
inc
cmps
(bad)
mov
test
(bad)
push
push
shr
enter
out
xor
mov
fdivr
mov
movs
test
jo
mov
outs
stc
cli
into
xchg
aas
shl
(bad)
add
in
add
inc
arpl
cmps
lea
cmovnp
xchg
loope
cmp
sub
jecxz
repnz
adc
outs
mov
ds
push
in
jmp
or
push
adc
shr
jmp
mov
aas
fisubr
inc
lock
(bad)
imul
lods
ja
jae
fs
pop
jg
pop
addr16
icebp
lock
out
popa
(bad)
bound
stos
mov
cmc
xor
aam
clc
sahf
jp
out
jmp
mov
xor
add
frstor
dec
inc
(bad)
cmp
loope
test
jmp
jns
(bad)
outs
mov
cld
pop
sbb
mov
jnp
cmp
in
dec
mov
js
test
ins
push
inc
push
inc
ja
push
sbb
arpl
push
adc
cmps
cwde
in
imul
out
sbb
fadd
je
in
mov
js
mov
push
cmp
and
and
push
adc
mov
push
xchg
xchg
fisttp
jle
fcomp
jp
mov
sbb
xor
pop
lods
jp
jmp
repz
ja
or
pop
jg
nop
mov
scas
stc
mov
xchg
in
mov
cmp
test
mov
mov
shr
mov
les
jp
mov
rcl
div
pusha
out
push
push
inc
rcl
cmp
aam
daa
js
push
movs
lea
pusha
ds
mov
or
(bad)
aam
mov
daa
int3
in
in
iret
retf
mov
jbe
xchg
sub
inc
inc
add
mov
cmps
xor
sbb
call
push
push
push
and
inc
icebp
shr
out
xchg
adc
stc
test
inc
fstp
mov
add
dec
fmul
dec
movs
push
dec
xor
paddusb
out
ret
inc
(bad)
xor
xchg
xchg
pushf
adc
or
and
xor
jb
xchg
dec
int3
ins
cmc
mov
ret
jmp
(bad)
icebp
inc
rcr
jne
pop
add
cmp
lods
shl
mov
leave
cdq
inc
mov
cmp
mov
push
mov
test
jo
cmp
lods
icebp
movs
cmp
aaa
ds
dec
mov
lods
leave
ret
adc
and
or
and
(bad)
ror
adc
pop
dec
sub
mov
sar
(bad)
out
sbb
pop
mov
pop
adc
lahf
adc
inc
test
add
mov
pop
js
sub
(bad)
sbb
cmp
sahf
xchg
fistp
aaa
idiv
clc
sub
rcr
test
xor
or
inc
push
rol
fwait
xchg
jge
hlt
push
outs
xchg
cmps
jo
aam
ins
dec
movs
add
cmp
movs
push
jo
movaps
add
imul
mov
lahf
mov
ror
xor
imul
call
inc
mov
retf
out
push
sub
xchg
(bad)
sahf
cmp
scas
dec
ins
scas
xor
and
add
out
inc
push
stc
fidiv
sub
and
js
cmps
jno
and
push
stos
out
iret
mov
mov
xchg
imul
inc
retf
int3
rol
(bad)
dec
pop
(bad)
mov
push
test
add
add
cmp
cmps
adc
jb
in
push
and
stos
lods
and
ins
(bad)
sti
mov
add
jo
cld
jg
in
fwait
pushf
mov
fiadd
mov
cdq
aas
in
repz
xchg
mov
or
sub
adc
cmp
add
jo
out
enter
sub
and
mov
cmp
mov
xchg
mov
xchg
fcmovu
pop
cmp
lods
fld
dec
and
push
inc
dec
int3
jg
cmps
dec
popf
mov
fsubrp
fcomp
repnz
push
mov
jmp
add
add
loope
in
div
ret
movs
adc
push
fwait
clc
jno
stc
jl
mov
pop
out
(bad)
ds
mov
ins
push
xor
inc
test
inc
xor
jne
add
jg
or
pop
loop
mov
out
out
dec
ss
jp
call
pop
test
push
dec
xchg
inc
scas
pop
push
add
vmread
int
in
pop
lods
aam
mov
(bad)
ins
scas
imul
mov
(bad)
in
and
sbb
sub
test
popf
mov
lea
xor
dec
add
movs
dec
bnd
pop
enter
mov
push
dec
adc
movs
cmp
nop
add
pop
icebp
in
aas
push
jmp
mov
inc
sub
int3
push
xchg
neg
bnd
push
stos
mov
loop
jge
les
sahf
and
mov
nop
ret
sbb
dec
adc
jmp
xchg
aam
shl
adc
out
inc
popa
mov
call
shl
retf
loopne
jne
out
lock
dec
fbstp
cmp
push
push
add
dec
enter
sub
sub
lods
jg
lods
ret
dec
mov
pop
fmul
and
scas
ds
fbld
adc
xor
ret
test
scas
sub
jg
mov
lock
xchg
xchg
sub
(bad)
rcl
add
loop
push
outs
dec
(bad)
ds
ins
sti
pop
push
xchg
mov
scas
in
jmp
push
mov
mov
in
cmps
xchg
imul
mov
sbb
or
test
pop
dec
xchg
das
aaa
xchg
mov
cli
jnp
sbb
retf
mov
push
loop
xchg
inc
inc
sbb
popf
xor
sbb
loop
sbb
stc
push
mov
je
aam
mov
cmps
jb
sti
xor
test
bswap
jmp
loop
xor
(bad)
in
cli
cmp
jmp
je
mov
mov
pop
es
cdq
aam
sbb
cdq
scas
dec
test
aam
mov
sar
sub
push
mov
cmp
pop
test
(bad)
xchg
in
ret
ror
jg
movs
sub
fdiv
inc
fadd
aam
gs
cmp
in
cmp
cld
inc
out
and
cmc
xor
out
inc
mov
sub
cmp
mov
mov
jl
adc
loope
pop
ins
push
sub
jecxz
out
jae
pop
les
mov
adc
cmp
add
sub
ret
(bad)
pop
dec
mov
fstp
loop
xor
pop
fwait
inc
mov
mov
(bad)
hlt
and
in
shl
das
jnp
and
(bad)
sub
repnz
adc
push
cmp
xchg
retf
hlt
sub
cmp
mov
inc
add
add
cwde
(bad)
jmp
jmp
mov
cmp
lods
sbb
jp
add
and
jns
dec
call
lea
xor
xchg
mov
stos
or
mov
fsub
dec
adc
sub
ror
mov
jnp
mov
scas
add
xchg
cmp
mov
add
mov
sub
call
add
mov
test
out
inc
retf
pushf
cmc
imul
push
stos
nop
adc
add
cmps
dec
mov
jb
stos
dec
sbb
add
adc
call
push
into
xchg
popf
jp
(bad)
sbb
shr
push
sub
lahf
idiv
repnz
in
sbb
mov
cwde
sbb
and
cmp
outs
jp
jns
je
fsubr
xor
sbb
pop
mov
sbb
movs
shl
rcr
inc
and
jge
push
stc
jmp
aaa
cmp
sub
les
cmp
add
je
int3
mov
adc
fisubr
into
inc
jo
bnd
push
push
dec
cs
icebp
inc
adc
sub
add
icebp
neg
dec
cli
jo
inc
cs
pop
xor
cmp
outs
lods
or
mov
xchg
retf
mov
sub
clc
mov
test
pop
mov
pop
cdq
(bad)
inc
xchg
test
cmc
mov
add
fsub
mul
inc
mul
mov
push
add
sbb
inc
retf
retf
xor
add
stc
jno
xchg
ds
mov
out
mov
dec
in
dec
or
xchg
sbb
cmp
jmp
test
mov
mov
addr16
lahf
jne
enter
push
int3
pop
test
pop
pop
dec
adc
mov
in
jno
aad
in
ins
popf
cmp
cwde
jns
push
cmps
lea
lahf
inc
xlat
pusha
out
or
mov
fdivrp
lock
dec
adc
call
jp
sub
dec
sub
push
and
or
pop
retf
or
sahf
daa
imul
movs
movs
mov
out
push
push
test
mov
fcom
adc
loopne
sti
inc
dec
(bad)
or
jle
in
cmc
sbb
sbb
imul
mov
ds
jns
mov
pushf
push
lds
(bad)
out
sbb
dec
cmp
or
outs
(bad)
lock
and
clc
xchg
sahf
sub
pop
or
inc
sub
and
mul
ss
sub
jp
mov
clc
clc
and
and
sub
and
aam
repz
fmul
mov
or
sub
xor
or
xchg
in
add
xchg
ss
jmp
mov
movs
cmp
imul
cmps
adc
xchg
pop
ret
jns
or
jno
dec
mov
pop
mov
enter
in
xlat
jb
mov
sub
push
cmp
imul
adc
retf
mov
shr
mov
test
call
aam
jno
adc
sahf
pop
data16
dec
jno
sub
test
cmp
outs
inc
push
add
std
lods
inc
jne
(bad)
nop
loopne
add
pop
test
jns
push
pop
mov
add
lea
mov
inc
cmp
cmps
push
retf
retf
fdiv
xor
sub
inc
loope
add
add
lods
push
xchg
add
dec
and
add
(bad)
in
push
cmp
out
enter
push
rcr
xor
gs
fs
mov
mov
out
aaa
mov
pop
sbb
mov
mov
aas
outs
push
movaps
ss
cld
in
pop
sbb
xchg
ja
rcl
push
mov
dec
rol
scas
pop
or
pop
inc
cmc
push
dec
pusha
(bad)
xchg
push
adc
and
xlat
fwait
and
xchg
jns
and
pop
mov
inc
mov
or
das
jo
mov
std
cmp
rcl
sbb
and
add
int3
test
sbb
inc
fisttp
mov
ucomiss
push
and
sbb
shl
sbb
jmp
pop
mov
neg
imul
xor
popf
cmp
adc
shr
outs
in
fsubr
jns
xchg
mov
(bad)
test
repnz
and
cdq
push
mov
lds
xor
popf
pop
mov
pushf
mov
cmc
and
jmp
dec
push
out
nop
inc
test
mov
jb
stos
sub
clc
jb
stc
mov
pop
retf
xchg
neg
lods
push
cmp
cmp
aam
push
sub
dec
sub
sub
pusha
fdivr
cli
jnp
scas
jns
fidivr
sbb
mov
sbb
int3
cmp
and
imul
stc
hlt
pop
cmp
mov
test
mov
pop
sub
mov
and
or
mov
fistp
fdiv
lods
xchg
inc
pop
lfs
lock
ja
leave
mov
loopne
pop
fcomp
inc
pop
xor
movs
test
dec
add
or
and
jmp
jmp
movs
mov
or
mov
repnz
cbw
aaa
xchg
mov
fnsave
inc
sbb
add
jecxz
mov
popf
mov
push
ins
out
push
pop
and
jne
imul
adc
cmc
out
jno
sbb
stos
dec
or
pusha
push
test
add
(bad)
in
push
sti
popa
mov
cld
xchg
mov
jne
jno
je
in
in
pop
stos
or
ret
into
jp
div
leave
shl
(bad)
adc
mov
mov
mov
mov
fimul
push
pop
in
sub
fcmovnu
pop
fld
mov
scas
repz
mov
(bad)
jge
cmp
mov
inc
xchg
in
int
fcom
test
fisubr
dec
sbb
push
mov
xor
pushw
or
dec
add
popf
retf
push
add
outs
xor
mov
cmp
movs
in
lds
cdq
daa
icebp
movs
cmp
mov
sbb
lods
sub
int3
out
mov
push
aam
xchg
pop
push
in
dec
sbb
adc
adc
bound
stos
and
cs
and
das
sbb
lods
std
loopne
pop
int3
dec
mov
ss
retf
pusha
jl
les
sbb
jne
frstpm(287
rcr
jns
jno
xchg
sti
cmp
inc
jl
sbb
(bad)
sub
hlt
out
ret
inc
imul
in
inc
adc
ret
push
adc
shl
jmp
sub
imul
cld
mov
jne
int
cld
adc
dec
lods
or
sar
cmps
jne
dec
and
cmp
lds
xor
dec
icebp
in
das
mov
dec
adc
das
mov
push
psrad
mov
inc
adc
add
cmp
cld
pop
dec
(bad)
push
xchg
cmc
sub
xor
fld
sub
nop
inc
test
ss
cmp
fcom
xchg
push
fbld
dec
jae
mov
push
dec
movs
jl
call
mov
cmps
arpl
loopne
pop
and
test
jge
sar
mov
lahf
pop
mov
ss
push
stc
and
mov
sub
retf
cmp
mov
sub
dec
add
cmp
ins
mov
outs
push
dec
shr
mov
inc
mov
(bad)
mov
stos
mov
repnz
mov
jo
xchg
inc
adc
dec
fs
xchg
mov
pushf
test
sbb
sbb
mov
pop
mov
xchg
fsubr
retf
stos
cmp
data16
push
stos
pop
jb
xor
or
test
mov
inc
adc
mov
cmps
pop
xlat
adc
cmps
inc
movs
fistp
mov
sbb
stos
test
(bad)
lea
addr16
retf
xchg
clc
or
cmps
push
es
shr
mov
cmps
(bad)
and
and
sbb
aam
sbb
push
in
out
dec
mov
dec
or
and
test
imul
adc
adc
fnstenv
les
stos
add
add
fs
fmul
xchg
push
pop
add
push
sub
xchg
push
fs
dec
shl
add
inc
arpl
inc
pop
movs
xor
jl
xor
div
(bad)
jno
inc
int
sti
fisttp
rol
test
push
push
pop
fistp
stc
(bad)
mov
cmp
sbb
and
pushf
ins
push
add
ja
outs
mov
sbb
jnp
mov
lea
mov
test
dec
adc
stos
lea
inc
mov
inc
mov
int
in
retf
loop
les
add
in
jg
movs
out
push
jb
push
xchg
sbb
(bad)
adc
bound
in
push
ret
dec
fnstcw
xlat
es
sbb
sub
pop
stos
xchg
cmp
test
pop
inc
xchg
mov
aam
dec
lds
pop
mov
add
xor
movs
movs
cmps
ret
xor
lods
aad
shl
test
mov
shr
test
add
jnp
jg
gs
out
mul
(bad)
movs
sbb
cvtpi2ps
jns
retf
scas
and
sbb
mov
push
sbb
imul
mov
or
dec
fimul
inc
cli
inc
add
sbb
imul
clc
sti
inc
jp
pop
and
and
push
sub
cmps
dec
adc
dec
sbb
adc
mov
push
clc
inc
adc
mov
mov
jmp
xchg
sub
adc
mov
sar
(bad)
aaa
in
test
loop
adc
or
fwait
sbb
iret
push
adc
jbe
cmp
mov
repz
cmp
std
rcr
xor
cmp
popa
jmp
add
movs
lods
(bad)
cmc
(bad)
xor
sub
and
std
cmps
mov
pop
mov
stc
cmp
cmc
jle
xchg
jmp
push
mov
in
lds
xchg
inc
add
hlt
test
add
ret
cmp
or
cmp
mov
(bad)
sbb
inc
psubw
lods
int
xor
(bad)
xor
data16
pop
mov
gs
pop
pop
neg
push
ret
cli
jnp
lods
mov
cmp
loopne
or
push
leave
test
pusha
mov
mov
or
fild
cmp
inc
sub
xchg
in
dec
push
and
mov
pop
xchg
mov
retf
stos
fcmovne
ret
mov
pop
retf
out
aas
and
les
not
jg
or
add
push
sub
mov
lock
and
test
ret
add
div
outs
dec
jb
cs
jecxz
(bad)
in
mov
pushf
xor
test
mov
push
stos
xchg
movs
dec
sub
xchg
test
add
mov
mov
cs
pop
jp
jle
jge
or
mov
nop
mov
inc
cmp
jnp
lods
xor
hlt
test
ret
stc
popa
scas
mov
jmp
movs
mov
ret
enter
mov
(bad)
aam
xor
mov
aam
xlat
xchg
push
sub
(bad)
mov
xchg
lds
jg
push
xchg
mov
pop
pop
adc
test
repnz
mov
pop
pop
and
test
push
sbb
loopne
gs
sbb
cld
outs
out
pop
out
mov
retf
jp
imul
add
inc
jae
pop
imul
add
cmps
cmp
and
loop
in
in
or
ss
ror
push
jb
retf
pop
and
mov
sub
das
adc
add
into
cmp
add
pop
ror
inc
and
xor
ds
test
imul
test
js
rcr
push
ss
add
fwait
std
jg
mov
aad
push
out
xlat
adc
jae
cdq
or
mov
repz
sub
sub
outs
outs
cmps
lds
inc
sbb
pop
cmp
lahf
push
vhsubpd
xchg
xor
push
dec
adc
dec
in
push
push
repnz
aaa
gs
dec
lds
push
in
jbe
jne
mov
jo
sbb
jecxz
mov
sahf
cmp
arpl
push
cmp
sahf
xor
jecxz
push
push
das
mov
nop
movs
jmp
in
sbb
cdq
jecxz
(bad)
push
test
sub
call
push
jp
mov
cmps
inc
icebp
movs
test
and
jnp
sahf
cmp
aam
jmp
call
xchg
or
adc
xor
push
push
in
inc
xor
mov
push
stos
fs
sbb
sbb
sbb
sbb
inc
mov
xlat
(bad)
adc
inc
rcl
mul
and
jmp
sub
xchg
sub
jp
mov
ins
mov
sbb
xor
cs
sbb
mov
sub
inc
mov
jno
jbe
scas
mov
sbb
push
test
mov
retf
jp
mov
add
mov
push
clc
sbb
push
fidiv
jb
sbb
in
mov
sub
cmp
(bad)
jg
js
mov
mov
test
mov
(bad)
jne
jl
dec
lahf
retf
sbb
mov
cmp
xor
enter
sbb
jge
xor
loop
cmps
movs
cmps
pusha
cmc
xor
repz
dec
je
ja
fcmovnb
ins
mul
fisubr
lods
and
push
mov
dec
nop
lds
stc
je
in
mov
mov
inc
daa
bnd
dec
xor
icebp
mov
sti
sbb
bound
arpl
imul
pop
mov
mov
push
daa
pop
dec
int
repnz
retf
(bad)
mov
xchg
push
inc
loope
sbb
pop
lods
ds
xchg
aad
shr
test
js
adc
outs
test
xchg
push
stc
pop
or
mov
dec
mov
xchg
loop
pushf
inc
pop
iret
and
(bad)
push
mov
sub
push
cmp
push
cmp
dec
xchg
mov
mov
dec
or
scas
dec
in
scas
fimul
push
in
push
out
mov
mov
scas
test
cmps
sbb
loopne
xor
repnz
fwait
jge
fstp
push
dec
mov
add
stc
or
adc
movs
shl
pop
retf
sub
aas
sar
fmul
movs
(bad)
mov
jno
xchg
movs
pop
or
xlat
mov
in
test
pop
dec
bound
and
push
xor
f2xm1
(bad)
pop
jg
push
aaa
or
mov
dec
mov
push
or
inc
imul
push
fwait
pop
ficom
push
mov
js
pop
xor
mov
bnd
mov
movs
stos
pop
xchg
mul
cmp
add
lahf
inc
jge
dec
sub
cmp
ffree
sbb
inc
int3
lods
adc
movs
mov
aam
lahf
addr16
inc
inc
xor
jg
mov
and
inc
cmps
pop
not
aam
(bad)
adc
js
sbb
push
add
cwde
mov
sub
add
dec
mov
mov
sub
lea
cdq
pop
data16
pop
in
cmc
and
adc
jl
lahf
aas
mov
(bad)
pop
call
mov
adc
lods
mov
loopne
in
add
sub
push
sar
in
or
push
js
mov
xchg
sahf
fiadd
xchg
imul
jmp
sbb
adc
inc
ror
sub
lods
cmp
sti
adc
(bad)
adc
out
or
jo
push
jns
lahf
mov
or
mov
xor
rol
jb
cmp
cmc
cld
jnp
mov
sbb
outs
adc
inc
arpl
cmc
jmp
fsubr
inc
arpl
xadd
ret
cli
add
push
in
loope
xchg
adc
xchg
cmp
cmp
sbb
jecxz
je
push
stos
xchg
adc
xor
inc
(bad)
test
xor
xchg
in
add
add
gs
(bad)
fstp
ja
add
hlt
imul
jle
xor
xor
sbb
inc
nop
adc
out
inc
mov
mov
mov
call
mov
cmp
xchg
pusha
inc
sub
imul
lahf
sti
add
imul
inc
cmp
xchg
xchg
pop
test
(bad)
daa
xchg
inc
add
mov
pop
push
into
cmps
mov
add
lea
retf
xchg
nop
sbb
retf
mov
add
rol
cmps
xor
pop
adc
nop
cmp
push
ror
pop
cli
test
shl
addr16
mov
inc
stos
cmp
xchg
push
aas
jmp
push
enter
cmp
icebp
call
pop
dec
cmp
aas
(bad)
test
push
nop
adc
test
sub
xor
xchg
cmp
push
cli
and
add
cs
stos
push
push
aam
in
movs
(bad)
sbb
test
add
xchg
sbb
add
in
add
repnz
add
stos
jb
sbb
int
imul
call
test
or
aam
adc
mov
cdq
outs
jge
(bad)
jmp
xchg
add
add
test
cmps
enter
cmp
repz
cmp
adc
(bad)
movs
(bad)
and
xchg
test
xchg
popa
push
mov
cwde
dec
ds
cld
sub
outs
imul
mov
mov
cmp
pop
inc
ins
ins
sub
mov
sbb
pop
xchg
ds
xor
(bad)
xor
(bad)
push
mov
add
scas
sti
arpl
bound
cli
add
mov
cwde
aas
loopne
xlat
ins
mov
imul
mov
or
in
mov
(bad)
mov
ja
pusha
loop
into
arpl
mov
jbe
cdq
or
jns
mov
lock
out
dec
fdivr
or
scas
loop
jecxz
jne
repnz
ins
sti
retf
sub
dec
in
sbb
fs
mov
mov
ja
or
stos
adc
xchg
adc
cs
mov
xchg
mov
mov
jnp
in
xlat
adc
lods
push
sbb
(bad)
sbb
ret
pop
push
addr16
lea
fnstcw
jb
popa
inc
int
cld
inc
retf
ror
xor
sbb
or
jp
sub
mov
(bad)
adc
add
rcl
push
adc
xor
clc
mov
scas
push
repz
push
xchg
cwde
xor
push
dec
mov
fcomp
ds
dec
mov
sbb
and
add
push
cwde
sbb
xor
cmp
mov
(bad)
pop
out
jp
push
dec
xchg
hlt
icebp
nop
mov
test
data16
test
das
sub
jo
es
pop
fdiv
leave
sbb
cmps
inc
add
mov
jb
sti
xor
clc
lods
jl
push
pusha
rcr
push
mov
add
movs
inc
cmps
xchg
test
or
xor
bound
dec
sub
add
popa
sbb
jnp
in
jb
push
xchg
add
and
daa
adc
repz
ret
sbb
(bad)
lock
xlat
out
(bad)
pop
addr16
xchg
mov
stos
and
sbb
gs
xchg
pop
add
imul
jmp
fldcw
fsubr
jns
or
(bad)
int3
jne
jae
int3
add
dec
and
out
test
stc
aam
xchg
das
dec
xchg
cdq
js
pop
push
lods
sti
(bad)
lock
mov
xchg
xor
or
xor
out
dec
outs
hlt
jp
test
and
cmps
xor
sar
int
mov
and
das
or
sub
add
call
dec
into
inc
sub
xchg
nop
push
jb
mov
dec
in
loope
pop
cld
jnp
ins
mov
in
js
add
std
xchg
stc
dec
mov
ins
mov
xchg
imul
(bad)
sub
call
lea
daa
lea
cmps
inc
jmp
or
push
xchg
add
hlt
mul
ret
scas
pop
fadd
push
pop
and
adc
shl
jmp
mov
int
push
das
and
inc
sub
pop
retf
xor
and
or
mov
add
scas
leave
aas
(bad)
bound
add
shr
jl
les
pop
mov
push
sbb
xor
cmp
push
pop
push
xchg
push
cmp
jns
test
mov
cld
push
push
int
pop
pop
cdq
stos
adc
pop
mov
cmps
or
test
xchg
out
aam
fimul
add
call
pusha
sahf
xchg
bound
sets
pop
retf
retf
iret
enter
pop
les
pop
push
retf
adc
rcr
jnp
loope
sub
pop
mov
ss
fbld
loopne
mov
xor
push
xor
add
mov
stc
jns
dec
jno
inc
mov
pusha
xchg
jp
inc
adc
(bad)
mov
je
ss
fdivr
add
or
or
rcl
push
mov
sub
xor
pushf
lahf
cmp
nop
sbb
imul
movs
adc
enter
retf
push
stos
mov
mov
ins
push
jg
add
push
in
stos
add
inc
dec
test
or
cmp
cli
cmp
mov
xor
test
cmps
mov
iret
scas
sbb
cld
sbb
xchg
mov
popf
fnstsw
mov
push
mov
push
not
mov
or
aaa
and
ret
adc
cld
shl
push
fsubr
xor
ins
push
push
jp
or
xchg
cmp
cmp
ja
mov
and
and
test
xor
mov
in
ins
es
jmp
fstp
jl
es
dec
dec
push
outs
and
out
push
sbb
xor
or
push
stos
mov
int
jae
in
(bad)
jecxz
sub
and
xor
nop
mov
les
mov
mov
push
xchg
add
dec
mov
sub
pop
and
out
int
dec
pop
lds
pushf
mov
ds
int
adc
or
and
sahf
jge
cmp
ss
lock
pop
xor
sbb
sbb
out
xor
inc
out
push
mov
push
retf
popf
pop
and
push
pop
and
mov
mov
and
repnz
bswap
jp
hlt
or
fcom
push
inc
xor
js
mov
or
imul
jno
dec
add
(bad)
data16
stos
fwait
(bad)
test
sub
ret
mov
sbb
sbb
and
xor
adc
fistp
jo
pop
int3
jnp
into
jmp
push
mov
shl
test
sahf
mov
imul
clc
rol
add
inc
(bad)
aam
fwait
(bad)
scas
push
fidivr
sub
shr
dec
jno
pop
bnd
or
inc
mov
stos
ror
ds
hlt
adc
jmp
adc
mov
fs
retf
in
xchg
add
adc
and
mov
js
outs
jg
mov
mov
push
rcl
sahf
popf
fucomi
xchg
int
sbb
add
mov
aam
jmp
inc
or
retf
adc
sub
or
outs
ins
mov
mov
out
(bad)
aam
sbb
adc
movs
lods
fwait
outs
call
add
mov
iret
pop
xchg
mov
cmp
pusha
push
xchg
add
jmp
pop
fcomp
inc
inc
xchg
cmc
arpl
jle
sub
popf
sbb
in
test
jp
push
push
push
arpl
loope
dec
sahf
jo
xor
movs
pop
arpl
xchg
(bad)
ds
(bad)
fmul
mov
adc
stos
dec
dec
jg
movs
jno
jmp
cmp
cli
and
loop
or
loop
jge
sti
jp
out
cld
jne
in
call
sub
aad
pop
xchg
test
ret
aad
inc
es
xchg
arpl
push
iret
mov
loopne
je
sub
pop
sahf
adc
shl
jg
out
fisubr
push
hlt
shl
mov
rcl
push
loop
mov
loopne
retf
or
inc
aam
and
sti
push
mov
retf
outs
sub
retf
and
inc
gs
not
pop
imul
adc
sbb
or
adc
cmp
cmp
(bad)
fimul
xchg
icebp
(bad)
mov
inc
or
push
jno
into
movs
test
jmp
add
add
sbb
imul
out
lds
(bad)
mov
in
mov
xchg
xor
jp
popa
out
sbb
add
(bad)
pop
xlat
or
push
push
jg
add
push
mov
(bad)
retf
or
rol
(bad)
fimul
dec
jb
pop
pusha
lock
cmps
stos
xchg
ss
inc
cmps
cmps
test
sbb
retf
push
fs
add
rol
das
fisubr
fcomp
pop
adc
add
shr
call
icebp
pop
xchg
mov
pop
dec
xor
add
cwde
push
xchg
jmp
push
out
or
ja
aad
ins
dec
mov
scas
xchg
repnz
xlat
or
jns
xor
aam
adc
call
jo
jb
push
in
xchg
mov
imul
mov
cmp
adc
and
xchg
(bad)
and
arpl
and
rol
scas
mov
aam
jae
jmp
dec
popf
retf
mov
inc
or
leave
or
fwait
rcl
cmp
jnp
adc
ja
fstp
js
sbb
ror
mov
clc
je
mov
gs
add
sub
mov
cmp
and
add
cmps
cmps
jmp
mov
cmps
call
leave
repz
cmps
(bad)
shr
pop
shl
adc
aaa
test
or
inc
daa
ds
mov
or
ins
mov
ds
mov
sti
jp
jecxz
inc
sub
adc
mov
sahf
cmps
xor
sub
add
stos
fisub
sub
fidivr
inc
les
inc
shl
jae
sahf
out
adc
pop
jmp
ret
ror
mov
xor
gs
int3
scas
xchg
test
pop
fisttp
outs
mov
dec
mov
sbb
dec
xchg
add
stos
je
cmp
ds
mov
lahf
fdivr
push
fist
cmps
xchg
push
sbb
xchg
leave
xor
xchg
mov
xor
inc
sub
mov
or
sub
adc
mov
mov
leave
leave
inc
or
cmc
adc
and
jno
sbb
push
arpl
lods
test
jmp
push
cmp
push
jo
or
push
cmp
(bad)
pop
xor
xchg
hlt
sti
ds
or
loope
push
js
jl
scas
cmp
mov
xchg
das
adc
push
mov
pop
jge
mov
and
dec
xor
or
jno
je
sbb
adc
icebp
adc
xchg
sbb
mov
fld
cdq
movs
leave
ds
or
data16
gs
loope
inc
or
(bad)
int
cdq
mov
sub
stos
neg
(bad)
cld
mov
lds
mov
pop
add
mov
sub
scas
sub
mov
pop
jno
sub
mov
movs
into
xchg
adc
jge
sbb
(bad)
push
mov
int
shr
pushf
jb
out
iret
mov
cld
xchg
cmp
pop
sub
dec
fld
nop
add
mov
xchg
mov
add
inc
test
or
sbb
addr16
std
mov
add
mov
cmp
pop
cmps
(bad)
xchg
lods
cmp
movs
sbb
jne
(bad)
hlt
inc
mov
(bad)
cmps
lock
ficomp
pop
push
js
iret
int3
stc
push
inc
mov
mov
movs
js
jp
ror
cmovo
mov
js
mov
pop
sti
xchg
shl
xchg
stos
out
test
inc
rol
enter
ins
and
add
loopne
add
push
xchg
(bad)
and
cli
loopne
cmp
(bad)
pop
or
cmps
jnp
test
fld
and
movs
jle
adc
cs
jbe
icebp
fmul
jae
push
cmp
(bad)
xor
mov
enter
js
fsub
dec
xor
xor
aam
test
dec
div
scas
inc
inc
(bad)
push
arpl
call
and
repz
call
inc
dec
ss
or
mov
bound
imul
pop
test
je
out
sub
lods
in
cs
fdiv
into
mov
xchg
xchg
sub
loopne
pushf
xor
lahf
xor
(bad)
xor
mov
xchg
int
cmp
cmps
mov
adc
test
daa
sbb
mov
loopne
test
adc
cmp
ror
or
inc
repz
scas
inc
pop
aaa
stos
arpl
xchg
hlt
xchg
in
jne
mov
push
dec
div
arpl
aad
sub
mov
push
pop
ds
fcmove
lea
imul
adc
mov
cld
mov
scas
(bad)
fidiv
or
xor
xlat
xchg
jg
inc
xor
sbb
sub
daa
inc
fs
add
in
jne
sub
hlt
sti
push
arpl
lds
jmp
dec
cmp
movs
mov
xchg
sbb
mov
arpl
fdivr
stos
(bad)
aad
push
dec
xor
(bad)
push
leave
adc
xlat
add
sub
mov
mov
add
aam
mov
fdivr
aam
jae
ja
aad
int3
shl
push
(bad)
sbb
into
iret
data16
jno
dec
mov
and
test
mov
cmp
pop
add
jg
std
adc
jp
ins
ins
or
cmp
push
inc
mov
imul
aad
stos
lea
mov
ss
mov
add
scas
mov
(bad)
dec
(bad)
dec
push
and
je
jecxz
add
xchg
mov
and
(bad)
std
add
push
inc
xor
lods
cli
cwde
call
mov
leave
test
sbb
ret
pop
dec
mov
mov
dec
or
enter
inc
loop
push
mov
pop
ror
mov
jmp
push
div
std
cmc
icebp
das
add
mov
in
ficomp
pop
push
cmps
nop
mov
add
ret
aad
xlat
loopne
aas
fidivr
jno
movs
aad
fwait
inc
fidivr
adc
into
add
test
arpl
enter
dec
push
push
add
xor
popf
sub
inc
out
sahf
mov
push
add
in
popf
retf
aad
inc
xchg
jp
add
mov
and
add
imul
cmp
ja
mov
inc
adc
imul
and
mov
mov
pop
(bad)
hlt
pop
push
in
arpl
gs
inc
aas
daa
lock
jl
pop
mov
jle
into
or
aaa
fucomp
in
xlat
push
int3
call
mov
cli
mov
pushf
rol
mov
(bad)
push
or
pop
mov
dec
and
mov
or
push
push
xor
fisttp
call
in
int
mov
mov
icebp
mov
not
cmps
les
push
loope
pop
in
mov
jb
mov
sbb
mov
xchg
xchg
enter
jmp
push
repnz
repnz
les
push
cmp
pop
retf
rcl
out
mov
ja
imul
in
cdq
or
or
fisubr
sbb
outs
dec
mov
dec
es
jns
(bad)
jecxz
rcr
imul
mov
xchg
add
cmp
or
xlat
outs
mov
mov
inc
sbb
xlat
daa
shl
ret
add
dec
push
ss
loopne
ret
pusha
(bad)
push
jl
jmp
(bad)
lods
mov
retf
pop
leave
inc
dec
outs
sbb
mov
push
ss
sub
xlat
fsub
jo
fcom
mov
push
push
inc
push
inc
retf
repnz
jns
int
xor
and
xchg
mov
sbb
out
add
ret
enter
mov
shl
scas
mov
cmc
je
mov
pop
mov
ret
loop
out
in
push
shl
aaa
mov
retf
cmps
loop
imul
cmp
rcr
dec
sub
clc
mov
xor
aam
ds
fisub
mov
cdq
sub
fcmovb
sbb
lea
test
add
mov
es
mov
test
aas
jno
fadd
out
aaa
sbb
leave
arpl
popf
aaa
xchg
into
ror
xlat
mov
ins
(bad)
call
or
jecxz
push
sub
cld
and
out
fsubp
lds
dec
jg
loope
psadbw
sahf
add
adc
push
imul
jle
hlt
jle
daa
mov
or
push
mov
jae
inc
sbb
ja
xchg
pop
jecxz
sar
jge
sti
aas
cmp
(bad)
in
and
sbb
sbb
ror
push
ds
or
fcmovnbe
mov
and
pop
ret
pop
adc
and
and
test
add
add
mov
xchg
xchg
jae
push
lahf
adc
dec
(bad)
pop
nop
enter
pusha
lods
mov
cdq
and
sbb
add
in
sub
dec
push
test
(bad)
xchg
stos
adc
rcl
into
adc
(bad)
mov
ins
in
mov
add
fst
push
enter
adc
add
test
outs
cmp
cmp
xchg
stc
and
enter
mov
fcomi
ins
clc
test
adc
out
out
call
add
rcl
sar
jmp
cdq
outs
lea
into
cmps
stos
pop
fisub
lock
pop
add
lods
jg
(bad)
div
lods
mov
fcomp
xchg
(bad)
jle
cmp
jae
xchg
push
(bad)
fdiv
adc
jo
xchg
addr16
and
inc
fistp
jae
shr
fcom
bound
shr
sub
xor
in
outs
iret
mov
xchg
jb
jb
aam
movs
jle
sahf
mov
out
popa
int3
xor
mov
pop
pop
jp
loope
mov
and
stos
gs
mov
lds
cmps
popf
and
test
or
jne
cmp
cmp
jne
add
aam
cmps
mov
loope
into
mov
ret
adc
stos
je
sahf
add
and
in
add
xchg
push
rol
(bad)
mov
xchg
test
xchg
stos
in
cmc
pop
rcr
dec
mov
xchg
add
sbb
cmp
add
jmp
test
cmc
inc
addr16
aam
add
dec
xor
nop
push
sub
jo
jmp
not
out
xchg
mov
shr
call
ret
xchg
push
std
inc
std
pop
aas
inc
fistp
xchg
cmps
int
push
inc
add
push
rcl
aad
jo
test
adc
and
outs
bound
and
je
cmps
mov
aam
jmp
cdq
pop
stos
jnp
inc
push
pop
ds
cmp
adc
clc
aam
inc
jb
sbb
lahf
loop
in
mov
rcr
es
call
xor
repz
inc
jae
dec
cmps
xor
pop
mov
lahf
jmp
retf
mov
or
mov
jecxz
inc
lds
and
mov
(bad)
sub
(bad)
xlat
int3
xchg
xlat
ss
mov
scas
mov
(bad)
xchg
or
sub
jmp
pushf
(bad)
mov
cmp
mov
or
mov
test
or
pop
xor
push
and
mov
fsub
test
sub
and
fucomi
jp
mov
fcom
test
add
sub
pop
cmp
enter
xchg
push
cmps
and
add
test
xchg
and
xchg
push
dec
int
(bad)
hlt
mov
jmp
in
mov
adc
retf
push
and
add
cs
mov
dec
std
pushf
jg
call
dec
in
jns
call
retf
sbb
sub
stos
and
mov
ins
out
pop
in
dec
imul
les
test
ja
ins
adc
sub
icebp
xor
repnz
cmp
hlt
inc
mov
adc
lea
xchg
cdq
in
or
(bad)
int3
adc
mov
lahf
test
inc
retf
cmp
rol
jo
adc
add
pop
xchg
cmp
out
sub
push
in
jno
xchg
pop
push
stc
xlat
xchg
jmp
push
loopne
loop
movs
jp
lea
and
js
cs
in
mov
jno
inc
fnstenv
mov
stc
lock
push
xlat
mov
push
retf
fucomp
aaa
(bad)
add
add
(bad)
dec
jp
mov
pop
mov
mov
sub
ret
mov
pushf
jno
inc
add
call
es
int3
outs
xor
dec
retf
jg
mov
fisubr
dec
in
imul
adc
or
or
sbb
pushf
add
or
sub
mov
dec
push
cwde
stos
adc
jmp
pop
xchg
inc
add
cmp
out
clc
mov
fwait
mov
jmp
jmp
mov
ret
jmp
stos
jmp
fisubr
repz
fisub
cdq
jns
ffreep
(bad)
mov
stos
mov
ret
push
popf
dec
dec
mov
call
fs
sti
xchg
cmp
inc
(bad)
add
sbb
movs
call
cmp
sbb
mov
out
fadd
push
arpl
jl
lea
lea
pop
push
loopne
jae
test
xlat
add
imul
daa
push
cmps
jae
add
inc
or
fist
scas
icebp
jno
sar
xchg
add
pop
jmp
cmps
stos
jb
outs
(bad)
retf
not
(bad)
ficomp
mov
or
xlat
cmp
popa
mov
dec
mov
test
and
xor
rcl
repnz
xchg
das
outs
mov
(bad)
mov
test
adc
and
cmc
xchg
pop
stos
retf
xchg
pop
mov
pusha
gs
sbb
test
push
adc
mov
imul
sub
movs
mov
adc
inc
in
imul
mov
mov
jmp
jmp
sbb
imul
cmps
out
loop
cwde
inc
mov
test
fiadd
aaa
xor
dec
adc
jno
lods
xlat
mov
pop
fbstp
mov
and
sbb
dec
sub
lock
jmp
mov
pop
add
inc
mov
pop
mov
test
push
mov
pop
jp
(bad)
pop
sbb
ror
xchg
inc
and
bound
jns
inc
pusha
add
add
scas
scas
jbe
dec
aam
nop
lods
sub
add
mov
fnstsw
loop
add
icebp
loop
mov
inc
aas
dec
das
dec
adc
stos
and
and
xor
(bad)
in
in
xor
xchg
sbb
cmp
pop
sub
les
imul
iret
pop
xchg
jmp
int
fs
and
pop
call
xor
xchg
jmp
pop
jl
dec
lods
push
leave
les
sub
pushf
xchg
mov
ins
push
inc
aaa
and
xor
in
(bad)
mov
popf
xor
or
aad
sbb
sub
sbb
js
add
mov
push
stos
or
pop
bound
inc
pop
add
mov
stos
popf
add
ds
mov
mov
or
push
add
add
js
push
int3
pop
mov
movs
lods
sub
and
fs
dec
dec
repnz
add
(bad)
pop
mov
xor
xchg
lds
mov
push
or
push
mov
movs
movs
call
jecxz
retf
xchg
mov
cmp
add
add
inc
repz
std
sub
int3
in
fs
xchg
push
sbb
sbb
sbb
add
ret
shr
rcl
loop
jmp
test
push
scas
and
mov
mov
mov
outs
cs
ins
sahf
xchg
scas
je
mov
sbb
jmp
cwde
aaa
or
mov
hlt
xchg
cmp
pop
iret
sbb
(bad)
cld
sbb
sbb
dec
add
pop
xchg
sbb
popf
push
inc
cmp
sub
or
mov
mov
sub
ja
mov
stc
cmp
(bad)
repnz
out
pusha
pop
push
xchg
ret
mov
jge
loop
dec
imul
mov
ror
sub
rcr
test
sub
cmp
pusha
jmp
nop
std
dec
test
mov
pop
retf
lods
jge
sbb
and
stos
add
mov
push
lods
sbb
sbb
stc
je
lods
xchg
sub
stos
retf
in
mov
aas
mov
(bad)
jecxz
mov
mov
inc
xchg
dec
and
inc
cmp
in
imul
pop
inc
add
and
add
lods
or
xor
pusha
shl
jmp
(bad)
sbb
push
jp
lods
aam
pushf
xor
leave
out
pop
jmp
jne
sbb
retf
mov
dec
mov
pop
sub
pop
ret
or
cmps
stc
push
ins
sbb
and
xor
inc
repnz
icebp
scas
xchg
dec
jge
mov
(bad)
retf
mov
cwde
cmp
das
mov
pop
cmp
cmp
inc
or
rol
lds
jbe
mov
jo
mov
pop
xchg
les
sbb
push
test
lea
cs
cmp
xchg
in
mov
inc
dec
pop
mov
push
outs
jno
icebp
adc
fcmovbe
push
inc
bound
rcr
sahf
pop
dec
xor
mov
repz
into
cmp
push
mov
xchg
lods
pop
sbb
and
test
fadd
jg
lahf
pusha
ret
mov
test
stos
push
mov
(bad)
mov
mov
cmp
jg
dec
xor
push
fwait
test
inc
mov
mov
dec
data16
mov
jns
add
add
or
mov
out
push
fs
loop
inc
push
sub
cwde
loope
xchg
xchg
push
inc
fsubr
xchg
mov
push
sahf
sahf
sub
xchg
dec
mov
jb
addr16
jecxz
push
mov
inc
sbb
pop
outs
iret
sub
jb
push
ds
jno
rcl
mov
inc
daa
mov
fdivr
pushf
jle
cmp
test
xchg
pop
push
push
xor
sbb
into
dec
dec
test
mov
leave
sti
es
dec
jns
mov
test
sub
xor
mov
push
pop
in
inc
es
ret
mov
arpl
shl
and
sbb
movs
(bad)
pop
pop
imul
or
push
or
iret
(bad)
das
mov
push
dec
loop
je
add
out
pop
xchg
pop
stos
sbb
sbb
loop
leave
and
adc
jge
ins
sbb
mov
push
pop
outs
repz
inc
push
inc
add
lahf
int3
je
data16
js
dec
repnz
jmp
jno
mov
jmp
ror
mov
mov
jl
push
push
scas
adc
shr
ins
je
jmp
add
sahf
pop
jge
mov
dec
xchg
movs
or
and
sar
mov
push
imul
add
xor
mov
push
push
cwde
mov
pop
and
pop
hlt
xor
das
in
(bad)
ficom
das
xor
repz
mov
imul
enter
mov
ror
mov
dec
or
js
add
cmp
cli
lahf
iret
mov
pop
mul
imul
add
sub
and
push
sahf
jne
sub
lahf
mov
pop
pop
(bad)
test
push
push
rol
jmp
add
test
cmps
lods
test
fld
adc
sbb
dec
add
mov
xchg
imul
mov
out
(bad)
push
call
mov
pusha
or
add
cmp
ins
jb
inc
in
stos
fldcw
fisttp
movs
lods
in
fiadd
call
ds
cmps
cmps
xchg
repnz
push
xchg
jmp
arpl
xchg
pusha
inc
add
jb
or
fsubp
fistp
xchg
lods
test
in
push
aam
sub
mov
add
or
push
and
arpl
dec
and
nop
mov
mov
sbb
jecxz
(bad)
enter
xchg
(bad)
retf
in
cmc
jmp
adc
jle
xchg
retf
add
pop
sbb
lahf
rcl
pop
test
sbb
(bad)
ins
rcl
nop
dec
es
jb
hlt
sbb
or
popf
mov
repz
jo
sti
push
loopne
inc
jmp
inc
(bad)
mov
cmps
cmc
enter
xor
sahf
fs
and
in
xor
and
enter
loop
ficomp
mov
pushf
add
mov
sar
fs
jle
pop
imul
out
(bad)
cmc
jo
and
adc
jns
push
out
dec
repz
adc
clc
stos
stos
ffree
test
hlt
pop
outs
mov
and
sub
rol
aas
lahf
xchg
pop
scas
mov
in
sub
outs
mov
xchg
cs
arpl
sub
cli
xchg
in
xchg
pop
mov
jge
push
xor
xor
inc
sbb
cmps
cmps
inc
lods
repnz
dec
mov
enter
inc
cmp
jmp
add
sahf
jbe
les
nop
lods
xor
ret
adc
or
inc
mov
leave
xor
cli
mov
(bad)
lock
loope
jns
adc
(bad)
cmp
or
adc
movs
pop
mov
or
push
imul
sub
(bad)
test
arpl
iret
out
sbb
xor
mov
add
scas
and
inc
push
push
out
xchg
shl
mov
xor
mov
sub
xor
xor
cmp
dec
xor
push
cmp
aad
inc
stos
jnp
mov
fdivr
adc
dec
add
mov
outs
pop
js
dec
cli
push
xchg
pop
lock
sub
jno
push
aad
pop
push
outs
push
add
mov
push
xchg
test
je
out
jl
adc
imul
mov
cmc
dec
or
mov
mov
lahf
jae
mov
out
mov
push
jb
rol
add
mov
dec
adc
idiv
stc
outs
mov
push
push
aam
dec
lahf
xchg
xor
mov
movs
cmp
repz
int
stos
mov
movs
in
outs
push
stos
add
dec
jnp
mov
loop
add
adc
jnp
sub
popf
or
int
cs
(bad)
mov
cmc
jecxz
call
push
push
into
dec
mov
and
jbe
xor
jb
inc
popa
in
jl
and
push
cmp
jg
mov
clc
mov
sti
aas
xchg
inc
(bad)
mov
or
fidivr
pop
cmps
push
sbb
push
push
dec
xchg
std
inc
mov
jne
inc
sub
pop
mov
and
aas
and
fcmovnbe
sub
fsubrp
pop
sub
pusha
cmc
repnz
or
add
stos
push
fsubr
jle
arpl
imul
dec
cwde
ret
mov
rcl
sbb
xchg
sahf
pop
mov
mov
adc
lea
inc
sub
and
repnz
sbb
repz
sub
xchg
mov
add
cmps
mov
sbb
rcr
test
sbb
test
ror
adc
outs
je
xbegin
scas
ins
in
fs
ret
cwde
push
int3
hlt
sbb
push
pop
in
into
push
and
leave
shl
movs
xor
retf
sbb
jg
rcr
pop
fmulp
sahf
xor
adc
jae
inc
add
(bad)
dec
dec
add
jp
mov
push
and
pop
add
pop
idiv
rcr
stos
xor
test
cmp
inc
sub
sar
jmp
sbb
push
xchg
adc
adc
sub
rol
(bad)
jg
mov
jecxz
and
mov
rol
cli
xchg
aad
loopne
inc
mov
adc
fs
repnz
in
sbb
out
adc
es
ins
and
movs
xor
pop
loopne
inc
inc
(bad)
mov
aam
ficom
add
adc
cdq
(bad)
jge
call
repz
push
bnd
inc
inc
or
jno
shr
enter
fisubr
std
(bad)
cmp
(bad)
lock
add
pop
cli
mov
pop
fs
lea
pop
test
dec
cmc
sub
push
les
in
and
adc
mov
xchg
mov
aas
lods
push
add
xor
lock
jle
out
dec
cmp
fdiv
shr
pop
stos
xchg
sub
rcl
pusha
mov
inc
ins
in
cmp
and
cmp
shl
cmp
out
(bad)
movs
fwait
lods
stos
sbb
leave
sbb
in
inc
pusha
inc
lahf
mov
cmps
xchg
add
and
lods
aad
or
shl
mov
loop
bound
clc
mov
fstp
mov
retf
rol
lock
mov
fidiv
in
(bad)
mov
aas
pop
jae
rol
cld
aas
cmps
mov
dec
(bad)
pop
mov
jp
popf
inc
neg
stos
push
pop
int3
btr
adc
dec
pop
xor
xlat
popa
bound
test
jnp
les
or
(bad)
push
fnsetpm(287
add
mov
inc
scas
cmp
dec
cmc
jl
push
aaa
jle
lahf
lods
xor
shl
scas
lea
mov
push
add
sar
pop
std
das
out
inc
in
jmp
sub
pop
or
loope
jae
aas
aas
inc
outs
leave
cmp
inc
xlat
into
dec
mov
mov
ret
iret
xchg
rcl
cmp
mov
dec
add
push
lea
(bad)
in
jp
cwde
mov
inc
mov
xchg
pushf
scas
rol
(bad)
aas
lahf
jns
and
fcomp
mov
jl
and
lea
xor
jmp
sbb
or
mov
xchg
lahf
inc
ret
and
sub
sbb
sbb
sub
ror
jecxz
dec
mov
mov
jecxz
dec
loope
inc
imul
lods
xor
cmps
scas
fldpi
stc
xlat
stos
add
ror
call
movs
(bad)
retf
and
in
lds
mov
int
dec
std
cmp
pop
outs
push
(bad)
outs
mov
dec
xor
push
xor
out
mov
in
sbb
push
xchg
xchg
dec
adc
inc
aam
hlt
outs
sub
jmp
xchg
aam
ror
xchg
xchg
addr16
aaa
or
xchg
inc
xchg
fisttp
cmc
mov
nop
or
es
sbb
imul
adc
test
lock
xor
hlt
mov
pop
dec
mov
mov
xchg
mov
cmps
push
pop
mov
test
aaa
rcl
ret
dec
jo
xchg
outs
in
out
pop
jmp
add
cmp
add
push
pushf
cmp
jl
mov
push
daa
and
iret
enter
pop
test
cmps
sti
fsub
add
dec
sbb
jne
and
(bad)
mov
fdivr
sbb
push
movs
sub
repnz
xchg
xor
ins
cmp
das
aaa
ror
test
ins
rcl
jl
add
pop
nop
lods
pop
stos
xor
cmp
leave
sub
push
add
cs
xchg
add
mov
pop
inc
push
or
sbb
ss
push
or
stc
cli
je
mov
imul
gs
and
mov
jle
add
xor
test
mov
adc
pop
push
lea
jb
push
or
jmp
mov
jno
lods
outs
jns
or
jmp
adc
sbb
test
mov
rol
sbb
inc
cmps
call
push
cmp
adc
dec
cld
bound
or
mov
pop
cmc
pop
dec
bound
outs
pop
int
xor
inc
in
jmp
iret
dec
mov
data16
cli
push
push
repz
adc
jns
pop
dec
mov
test
sub
mov
lea
sbb
aam
imul
sbb
outs
in
not
adc
push
rol
dec
retf
aas
adc
jle
aad
add
mov
fldcw
mov
dec
(bad)
(bad)
outs
das
and
mov
in
push
xor
and
dec
daa
jns
inc
cmp
stos
xchg
sbb
sbb
in
inc
fstp
dec
adc
js
inc
sbb
jmp
outs
cmps
sbb
in
in
fisubr
psubw
xchg
hlt
jns
cmpxchg
fs
and
push
and
mov
jge
loop
loopne
cs
(bad)
mov
(bad)
push
adc
mov
repnz
cmp
jmp
cld
std
add
xchg
repnz
and
cmps
xchg
cmp
sbb
and
out
cmp
sub
dec
test
push
adc
add
pop
fadd
push
imul
inc
outs
jne
addr16
outs
pushf
outs
adc
(bad)
fistp
push
pop
daa
mov
bound
out
sub
inc
retf
push
or
sar
mov
pop
enter
inc
jmp
push
pop
cmp
jns
mov
mov
sbb
push
or
dec
stos
or
sti
cmp
pusha
mov
jl
aam
xchg
popf
mov
pop
jmp
sub
call
xchg
push
int
xchg
xlat
xor
jno
inc
add
mov
nop
mov
mov
push
add
cmc
add
sbb
mov
aaa
push
loope
clc
push
add
test
cmp
mov
or
mov
inc
test
sahf
push
test
(bad)
sbb
and
push
cli
push
and
jge
das
das
(bad)
call
cmp
mov
cmp
add
ins
jno
mov
stc
call
cmp
(bad)
xor
mov
mov
adc
push
and
inc
scas
mov
pop
pop
fucomip
dec
mov
jecxz
dec
xchg
jp
test
cmc
adc
adc
xchg
cmc
cmp
or
cmps
test
pop
adc
sahf
mov
daa
adc
imul
retf
push
push
sahf
inc
push
push
and
fadd
inc
xlat
fwait
sti
and
push
mov
(bad)
lds
mov
sub
jecxz
aam
mov
mov
cmp
pop
lahf
stc
mov
xor
lock
adc
push
lahf
push
sub
test
xchg
ds
scas
enter
mov
mov
adc
mov
lock
add
xchg
jbe
xchg
aam
jg
inc
jae
iret
add
lds
sub
mov
test
push
jns
das
push
pop
cmc
repnz
sub
fidiv
in
fwait
je
lea
dec
inc
scas
adc
icebp
adc
(bad)
jge
scas
je
cmp
sbb
(bad)
cs
mov
pop
pop
fwait
cmps
aas
xor
xor
inc
and
out
mov
push
cmp
jge
mov
cmp
ja
mov
xchg
jmp
rol
jg
mov
adc
and
push
loopne
out
ins
xor
dec
add
push
xchg
pop
data16
inc
dec
in
retf
sbb
pop
cli
add
gs
sub
pop
arpl
pop
call
and
rcl
cmp
cmps
dec
lods
pop
mov
fs
push
jbe
enter
pusha
mov
sub
test
xchg
push
lds
gs
(bad)
cli
and
adc
xor
addr16
aaa
dec
in
test
les
jecxz
js
clc
je
in
iret
add
dec
sbb
adc
xor
mov
jnp
inc
mov
rcl
xor
add
inc
(bad)
fmul
outs
ins
mov
sbb
add
mov
cmc
into
cmc
push
cmp
jbe
mov
mov
add
pop
adc
xor
jnp
inc
add
cmc
sbb
(bad)
and
outs
and
ret
pop
push
dec
pop
push
in
and
pushf
fsubr
ins
repnz
push
and
adc
loop
pop
lock
cdq
jmp
pop
push
xchg
mov
jns
cmps
test
inc
xor
xchg
popa
cmps
test
ss
add
add
mov
fwait
pushf
int3
int
jne
inc
stc
add
add
adc
fistp
and
mov
inc
inc
scas
popf
jno
jae
(bad)
retf
mov
repz
push
add
push
fs
ins
gs
mov
pop
push
and
jno
idiv
fidivr
aaa
pusha
test
jge
(bad)
pop
sub
mov
sbb
inc
xor
push
shl
ds
sub
stos
push
jnp
dec
mov
lds
dec
cmp
mov
int
ins
jg
in
lods
lods
dec
retf
mov
xchg
cli
dec
cwde
mov
jne
sub
pop
or
jno
cmps
iret
shl
mov
loop
fcmovb
push
shr
movs
test
repnz
xor
jo
ficomp
inc
xor
in
and
cmps
lea
and
rol
adc
and
stos
xchg
add
repz
ret
xchg
mov
jmp
mov
cmp
pop
mov
cmps
or
mov
adc
ds
mov
es
jmp
test
xchg
cmp
mov
movs
jae
stc
in
jno
dec
and
inc
movs
inc
inc
mov
add
test
add
inc
movs
add
or
cmp
fimul
xchg
clc
(bad)
nop
loop
(bad)
push
push
lds
and
push
sub
cli
mov
js
sub
test
test
dec
cmp
and
test
cvtps2pd
cmc
jp
inc
add
jg
in
sub
inc
cdq
cmps
sbb
test
and
pop
or
mov
nop
add
pop
enter
xor
dec
sbb
lds
pop
xor
pushf
jp
lock
retf
dec
test
mov
stc
jg
cmp
sbb
mov
sbb
inc
sbb
sub
mov
popa
inc
mov
mov
cmp
mov
aad
add
imul
rcr
inc
je
ret
lahf
xchg
pop
cli
xchg
lock
adc
sbb
xchg
fidiv
xor
push
xor
adc
or
jmp
jns
and
rcl
jo
(bad)
push
push
sub
cdq
pop
loope
call
retf
lds
mov
cmps
(bad)
dec
sahf
mov
sub
scas
and
cli
lea
jecxz
mov
mov
jecxz
inc
dec
jns
sub
push
lea
add
call
pop
rol
sub
and
push
retf
adc
inc
iret
sub
rcr
outs
outs
dec
mov
ins
sub
and
(bad)
mov
call
and
loopne
push
pop
outs
scas
jp
jle
call
jmp
push
or
cwde
in
inc
xchg
mov
inc
fimul
or
xchg
das
in
jno
(bad)
lds
push
mov
cmp
fisttp
xchg
ret
sbb
mov
cmp
mov
and
and
fs
mov
and
pop
lea
and
xor
lds
je
push
sbb
std
mov
mov
sbb
add
push
js
aas
test
sub
sbb
cmps
stc
pop
mov
fucomp
shr
in
fwait
sub
dec
lahf
ret
inc
mov
dec
jne
sahf
mov
jb
in
push
pop
fs
(bad)
sub
xchg
xchg
push
sub
stc
or
retf
add
(bad)
jecxz
pop
mov
add
sbb
cmp
mov
lods
shl
cmps
outs
lods
stos
mov
cmp
lea
mov
cwde
call
js
xchg
in
cmp
cli
fadd
pop
fwait
jge
xchg
xor
inc
xchg
dec
or
inc
add
mov
add
pop
add
mov
dec
jns
div
push
mov
xchg
dec
mov
push
ror
inc
or
sub
scas
mov
out
aad
push
or
loopne
push
jb
sub
push
mov
adc
in
jle
cmp
sbb
and
jno
add
not
cld
test
jge
jge
imul
xchg
mov
cmp
and
cmp
icebp
inc
dec
xchg
int
dec
dec
pop
adc
outs
sub
sbb
rol
mov
and
ds
icebp
fstp
mov
cmps
xor
jne
and
sub
jmp
pop
imul
fadd
inc
arpl
cli
test
cmp
push
pop
imul
ret
adc
movs
push
pop
ss
aaa
or
mov
mov
inc
xor
xor
mov
stc
cmc
mov
in
imul
add
inc
dec
loopne
cmps
xor
adc
xchg
push
dec
mov
lea
aaa
or
xchg
and
dec
or
popa
ja
(bad)
mov
setno
mov
mov
frstor
xor
xlat
add
in
sub
mov
gs
jp
mov
cmps
stos
xchg
pop
xor
cmp
dec
xchg
lock
cmp
pop
out
mov
push
sbb
loop
sub
jg
loope
cmps
push
pop
(bad)
jo
xchg
push
dec
stos
xchg
ret
cmp
aas
cmp
sti
(bad)
jno
push
clc
push
pop
xchg
ja
push
jmp
push
outs
sbb
cli
fistp
or
mov
xchg
imul
call
imul
mov
and
dec
in
jo
jle
cs
lods
xor
push
pop
pop
add
push
imul
sbb
cmc
fwait
std
ins
add
out
cmp
pop
movs
and
jmp
cdq
adc
hlt
stc
jne
or
push
es
pop
or
dec
shl
(bad)
mov
int
jae
cmp
dec
retf
and
pop
dec
inc
ins
movs
inc
pop
dec
das
stc
xlat
or
loop
pop
push
pusha
arpl
enter
arpl
lea
jmp
sub
sub
add
sub
sub
mov
aam
in
pop
cs
dec
sti
pop
outs
jle
mov
fsubr
in
inc
push
(bad)
sbb
xor
jmp
sti
mov
cli
aam
lss
push
in
mov
cmp
retf
in
dec
sbb
enter
aam
pop
pop
fadd
mov
jne
fsubr
adc
sti
inc
pop
and
jae
xor
test
add
mov
jp
cmp
mov
mov
sbb
sbb
add
and
xchg
mov
xor
adc
ds
ja
dec
out
xor
sbb
jle
mov
push
daa
mov
push
mov
add
and
sbb
add
lea
xor
sbb
pop
cli
fcomp
dec
push
or
out
es
arpl
dec
cmp
inc
adc
fisubr
pop
or
sbb
call
frstor
xchg
fadd
test
lods
adc
das
mov
mov
and
je
out
outs
cmp
lods
inc
mov
jmp
dec
mov
dec
dec
and
lods
mov
(bad)
mov
ins
in
movs
sbb
fisttp
pushf
lods
dec
xor
sbb
mov
xchg
and
inc
data16
sub
int
neg
xchg
loopne
stc
adc
sbb
movs
xor
(bad)
mov
and
imul
retf
mov
dec
add
sahf
test
lods
push
dec
stos
mov
push
aam
lea
mov
daa
and
cli
adc
sti
cs
arpl
and
jmp
fcomp
mov
adc
adc
ds
call
daa
sub
out
sbb
xor
inc
inc
mov
or
dec
sub
xlat
mov
sub
outs
scas
sub
fdivr
ds
xchg
ds
ins
jbe
leave
into
xor
push
inc
adc
leave
test
into
mov
jmp
sbb
mov
sahf
sahf
adc
and
adc
sub
adc
aad
or
jns
adc
add
cmp
jle
addr16
and
cdq
in
call
push
(bad)
enter
lds
add
sbb
popa
movs
stc
pop
xlat
jne
xor
cdq
retf
icebp
sub
(bad)
imul
adc
push
jno
aaa
sbb
jge
popf
jmp
and
inc
mov
ror
mov
(bad)
mov
(bad)
stc
sbb
xor
dec
adc
scas
mov
pop
add
ret
gs
in
lods
hlt
cmp
ffreep
cmp
sahf
xchg
outs
out
sbb
inc
pop
pop
mov
ret
dec
popf
mov
jp
bound
es
mov
fwait
ins
pop
lods
and
add
lock
mov
pop
sahf
test
mov
or
leave
jnp
outs
mov
ss
(bad)
push
gs
sub
or
inc
fsincos
out
imul
pop
retf
scas
loopne
mov
iret
dec
dec
daa
sahf
inc
xchg
and
xchg
xchg
imul
jb
clc
mov
mov
push
pop
in
call
js
jb
aam
dec
jnp
xor
xchg
aad
mov
(bad)
adc
lods
push
test
dec
sbb
rcl
dec
adc
mov
mov
xor
test
lds
or
xchg
cmps
inc
push
xchg
iret
sbb
inc
outs
dec
mov
(bad)
cmp
not
into
pop
and
sub
(bad)
xchg
jecxz
(bad)
xchg
inc
dec
std
retf
fisub
mov
aad
fsubr
fdiv
and
les
in
movs
out
popf
retf
mov
mov
(bad)
adc
jmp
push
xchg
pop
ins
scas
imul
sbb
inc
frstor
outs
outs
jns
fucomip
push
les
cmps
sbb
push
xor
xchg
inc
cmps
popf
(bad)
shl
fwait
inc
sbb
dec
mov
icebp
jg
fisubr
(bad)
sbb
add
cld
mov
ins
mov
xchg
mov
mov
sahf
lea
pop
push
retf
xchg
xchg
stos
sub
cmps
or
cmp
fld
sbb
std
jge
pushf
shr
outs
leave
sbb
lods
sub
rcl
das
idiv
cmc
add
popa
sub
sbb
(bad)
repnz
(bad)
mov
push
retf
push
and
int
jecxz
xor
jns
in
push
jo
add
popf
dec
cmps
cmps
cmps
inc
clc
jp
or
inc
inc
cmps
fld
lock
test
add
and
popa
mov
fwait
xchg
push
adc
mov
add
dec
xor
in
jne
add
stos
sub
jecxz
jno
out
add
mov
dec
pop
retf
jb
nop
lahf
inc
outs
push
and
add
inc
jbe
and
jl
dec
mov
pop
pop
or
and
je
fstp
mov
adc
dec
test
nop
cmp
inc
(bad)
xchg
mov
(bad)
mov
iret
mov
sbb
mov
in
push
fistp
xor
xor
or
add
mov
cli
lahf
and
(bad)
das
push
aad
das
sbb
dec
scas
sbb
mov
mov
add
jb
mov
call
xchg
xor
in
call
cld
lods
ffree
adc
bound
dec
cmp
mov
fst
dec
add
mov
add
ins
outs
cmp
popa
mov
mov
and
repnz
cmp
inc
dec
loope
xor
lods
jne
sub
inc
push
fcmovnbe
pop
mov
push
cmp
inc
sar
inc
dec
xchg
dec
ins
xor
popf
gs
sbb
mov
fidiv
cmovl
aam
pop
sub
(bad)
push
adc
dec
imul
mov
cmps
icebp
adc
dec
lods
inc
jl
aas
retf
aaa
sbb
int
push
sub
pop
xchg
inc
xor
or
dec
ds
sbb
ins
dec
sub
cli
jp
mov
ja
pop
jno
retf
jge
sub
loop
js
ss
push
popa
mov
xchg
fstp
and
mov
aam
js
push
fisub
cmps
push
rcr
xchg
cmc
lods
(bad)
out
outs
pop
push
sbb
mov
hlt
sbb
jl
cmova
movs
mov
loop
out
dec
jl
mov
lods
add
movs
add
inc
jno
jno
pop
fistp
hlt
loope
aam
push
sub
and
xchg
adc
(bad)
aas
dec
sub
push
mov
out
sbb
pop
push
sub
sub
dec
movs
imul
daa
(bad)
mul
pushf
jmp
push
mov
imul
mov
lahf
xchg
movs
cmps
icebp
mov
daa
fcom
icebp
mov
les
shr
jmp
in
es
popf
and
cmp
add
inc
rcr
xchg
inc
sub
int3
sahf
aas
ins
imul
jnp
fisttp
xchg
jno
mov
dec
xchg
sub
xchg
cmc
dec
and
movs
inc
xchg
sub
pop
sbb
fcom
add
cdq
adc
add
ds
push
outs
add
imul
add
mov
stc
hlt
push
pusha
call
out
dec
std
inc
mov
xchg
loopne
dec
icebp
stos
add
push
add
aad
push
pop
mov
es
out
out
mov
xor
test
lock
movs
pop
xchg
xchg
dec
out
outs
pop
pop
(bad)
sub
dec
daa
cwde
movs
jne
push
ret
aas
cmp
push
and
dec
test
lods
test
or
leave
cmp
mul
dec
int
sahf
jle
mov
ficomp
mov
mov
mov
or
jge
add
or
and
fsubr
jb
mov
push
mov
xchg
mov
jecxz
jecxz
sub
xchg
mov
mov
je
cmps
inc
aam
push
and
lea
shl
sub
or
add
(bad)
lods
adc
shl
jae
push
popf
jbe
adc
jnp
(bad)
cmp
jae
imul
int3
(bad)
push
sahf
mov
sbb
xchg
inc
inc
clc
cmp
out
cmps
ret
call
ret
pop
mov
push
cmp
jecxz
scas
out
push
mov
add
push
xor
ins
mov
fisttp
push
push
sbb
ds
cmc
jmp
das
(bad)
xor
sbb
xor
inc
dec
pushf
push
push
stos
pop
mov
rcr
in
bound
pop
call
xchg
pop
(bad)
cmp
dec
pusha
sub
dec
stc
outs
fucomip
stc
sahf
dec
lods
xchg
jge
mov
aas
mov
repz
pop
rol
xor
sub
xchg
pop
jne
pop
push
(bad)
sti
jl
jnp
fs
mov
push
js
cmps
mov
inc
cmps
mov
sub
cmp
cmp
les
jg
push
push
dec
clc
add
dec
mov
enter
adc
cmp
add
dec
aaa
daa
fsubr
js
add
call
setno
cmc
cld
cli
dec
popa
add
lea
outs
sbb
push
jne
out
xor
and
dec
loop
rol
jmp
jmp
js
rol
and
test
jmp
imul
aas
outs
mov
lods
shr
cs
mov
jbe
add
fld
in
add
and
dec
jo
nop
cmp
ds
stc
push
mov
data16
ss
adc
sub
cmp
jne
arpl
mov
test
push
shl
call
add
sub
inc
(bad)
xor
push
jge
call
push
je
rol
(bad)
push
sbb
xchg
jg
rol
in
scas
cmp
sbb
mov
(bad)
xchg
push
aam
xlat
add
or
cmp
(bad)
mov
scas
inc
inc
imul
(bad)
int3
data16
jmp
fidivr
jge
arpl
mov
fs
adc
test
je
nop
jmp
mov
fstp
inc
sub
mov
mov
fs
dec
push
cmp
jge
pop
stos
lods
xlat
sbb
add
call
inc
outs
in
mov
lods
ret
nop
(bad)
ror
xor
xor
push
inc
and
into
cs
(bad)
(bad)
out
neg
js
(bad)
xchg
(bad)
push
add
movs
aas
adc
and
mov
pop
lahf
(bad)
push
inc
movs
push
add
clc
fst
sub
mov
mov
repnz
sbb
mov
mov
test
aaa
inc
emms
out
ss
cmps
jmp
or
mov
(bad)
arpl
icebp
mov
clc
sbb
into
pop
mov
test
push
cmp
pop
in
aas
xchg
inc
(bad)
xor
aam
ds
fist
ss
dec
inc
add
mov
scas
mov
cmc
jg
out
das
frstor
pop
inc
push
aad
mov
aam
(bad)
cmp
lea
jle
adc
arpl
add
sub
xchg
sbb
push
popa
jae
hlt
fld
sub
mov
pop
test
add
xchg
sbb
(bad)
test
mov
xor
lods
or
sub
push
mov
lods
push
adc
addr16
jmp
cmps
xor
sub
ret
mov
add
jmp
dec
in
push
adc
jb
jl
dec
cli
test
sub
mov
out
btr
jmp
pop
adc
rcr
dec
adc
and
mov
cli
mov
sti
punpcklwd
xchg
(bad)
jae
ficom
add
cld
call
and
pop
mov
mov
in
inc
dec
push
mov
lock
push
xor
cmc
(bad)
retf
xchg
ins
stc
mov
(bad)
mov
loop
inc
add
sbb
lods
inc
jg
shl
and
jae
add
and
sbb
jl
jl
outs
dec
xchg
aad
arpl
aad
pop
enter
rcl
xor
cmp
iret
sbb
xor
mov
shr
(bad)
dec
add
pushf
sahf
ds
sbb
ja
sbb
jno
fwait
enter
pop
sbb
call
pop
push
out
test
sbb
retf
adc
xchg
js
xor
pop
add
shl
dec
mov
sbb
in
or
icebp
inc
imul
sbb
bnd
cmps
xor
jnp
call
adc
nop
dec
gs
mov
fsub
pop
dec
test
adc
cld
clc
hlt
and
pusha
and
mov
mov
in
setge
jb
cmp
adc
les
cmp
pop
scas
stc
inc
int3
mov
mov
jno
jno
push
add
xchg
xchg
int
push
(bad)
cmc
push
je
mov
int
sub
aaa
test
repnz
xchg
sub
and
jle
popf
xor
(bad)
push
inc
(bad)
in
dec
push
pop
mov
inc
sahf
dec
pop
call
mov
retf
mov
scas
ds
jne
sbb
mov
adc
out
xchg
iret
inc
mov
shl
mov
cmp
ror
dec
ins
or
pop
mov
cmp
add
in
ret
(bad)
mov
jecxz
xor
scas
scas
push
inc
test
pop
aam
xchg
pusha
ins
js
and
out
addr16
mov
mov
jecxz
test
loopne
lahf
inc
cmp
cdq
movs
mov
aam
mov
xchg
sub
hlt
pusha
dec
add
and
je
sbb
das
jmp
call
mov
ret
push
mov
pusha
jno
test
clc
jno
push
js
out
data16
or
cli
pop
dec
mov
sbb
add
inc
sbb
inc
pop
sbb
pop
ins
ds
xor
mov
lods
shl
add
push
mov
push
adc
(bad)
scas
cmp
adc
push
test
add
ds
data16
inc
pop
xor
enter
or
jno
cmp
js
(bad)
ret
in
adc
xor
mov
push
pop
jecxz
mov
adc
movs
xchg
fisub
dec
clc
ret
or
std
xchg
cdq
pop
xor
dec
jp
into
mov
sti
call
sar
push
hlt
call
fdiv
dec
sbb
add
mul
sub
sbb
mov
cmps
xchg
les
mov
pushf
js
imul
aad
mul
mov
imul
jno
jecxz
mov
lahf
in
repnz
(bad)
xchg
mov
xchg
stos
push
jmp
or
jmp
lds
dec
lods
sub
retf
cmp
jg
sahf
lods
jae
int
cmp
sbb
pushf
cmp
cli
xchg
test
repz
dec
cmc
jno
retf
aam
or
dec
aam
and
mov
jle
and
pop
push
(bad)
int3
test
xchg
inc
xchg
fistp
and
sbb
lahf
(bad)
dec
mov
xchg
jae
clc
fidiv
push
xchg
nop
mov
jae
add
add
int
jmp
mov
xor
add
jge
ret
push
int
out
ja
sbb
and
pusha
push
retf
mov
jno
xchg
mov
in
sar
inc
das
push
cmp
jo
mov
inc
and
call
sbb
lods
jge
mov
enter
fisttp
sbb
push
lds
dec
aas
dec
xchg
xchg
inc
pop
inc
pop
js
hlt
push
sbb
cmps
inc
cmp
inc
inc
imul
(bad)
sub
sub
sbb
arpl
dec
bound
mov
mov
xor
mov
iret
xor
adc
adc
push
xchg
imul
ins
mov
mov
add
jl
add
mov
adc
jp
mov
xor
cmp
adc
daa
cmc
pop
idiv
jnp
outs
fwait
jl
inc
sbb
mov
xchg
imul
add
push
js
fnstenv
cmp
inc
pop
rol
xor
and
fs
inc
xchg
test
xchg
call
cmp
ror
pusha
mov
push
push
out
sub
ss
mov
add
into
(bad)
test
mov
inc
mov
std
pop
sbb
cdq
lods
mov
pop
mov
cdq
test
ret
les
sub
dec
cmc
ss
in
mov
xor
jge
sub
xor
nop
mov
cmp
ror
xor
js
arpl
inc
push
pop
stc
jmp
nop
pusha
inc
jne
sub
xchg
fisubr
ins
jmp
dec
lods
sbb
pop
xor
cmps
sahf
mov
push
pop
dec
(bad)
jb
sub
or
rcl
and
cmp
xor
repz
and
and
ja
add
fsubr
mov
sbb
stos
add
sti
jp
cli
movs
adc
in
add
movs
icebp
outs
test
sub
in
add
iret
push
sub
cld
inc
fldl2t
and
js
fcomp
xchg
pop
dec
dec
jno
(bad)
ds
xlat
dec
nop
and
arpl
xchg
iret
jb
and
inc
ret
pop
in
jne
test
test
add
push
popa
hlt
cmp
dec
(bad)
cmp
repz
mov
in
call
mov
adc
fdiv
xchg
or
and
jb
and
scas
(bad)
mov
outs
adc
or
mov
cdq
xchg
test
in
push
inc
push
jmp
fwait
jae
cld
jnp
pop
pop
sbb
and
in
(bad)
pop
ds
fisub
cs
xchg
and
stc
jp
ss
loopne
sub
and
(bad)
in
dec
outs
enter
mov
loopne
add
xor
push
pop
mov
sti
mov
or
sub
(bad)
cmp
sub
jns
hlt
dec
jnp
(bad)
movs
ror
pop
xchg
repz
stos
mov
and
push
add
out
xchg
call
jbe
mov
scas
cmc
not
xchg
aad
jl
lea
push
retf
sub
pushf
loopne
ds
adc
add
mov
fldcw
aam
icebp
push
in
mov
dec
movs
popa
lods
in
sub
sbb
mov
jg
(bad)
push
popa
and
call
pushf
jno
into
js
aas
loopne
in
out
sub
pop
jle
not
(bad)
jge
fsubr
push
sub
inc
adc
add
xor
fmul
adc
test
iret
cmc
jno
xor
test
cmp
cmp
icebp
push
cmc
push
xchg
xchg
(bad)
pusha
or
adc
push
add
sahf
dec
iret
cmc
test
dec
scas
lahf
popf
jae
push
mov
cs
ret
rol
mov
add
sbb
bound
dec
shr
lods
mov
cmp
mov
je
es
rcl
add
mov
cld
jmp
shr
xchg
imul
scas
lods
and
cwde
inc
push
jmp
fidivr
inc
call
movs
mov
scas
fwait
add
nop
jle
mov
aaa
sub
ja
fcmovbe
lock
cmp
mov
and
(bad)
mov
add
cli
test
les
cmp
mov
in
arpl
dec
mov
(bad)
lahf
(bad)
movs
pop
dec
sbb
test
pop
(bad)
in
jle
arpl
nop
or
push
inc
popa
mov
lods
xchg
push
(bad)
inc
repnz
or
test
aam
add
push
js
imul
pop
ds
pushf
outs
pop
mov
(bad)
pop
cwde
cmp
xor
call
or
push
loopne
xchg
mov
push
not
out
lods
sub
pop
and
dec
mov
pop
xor
inc
sbb
inc
cld
std
int3
adc
rcr
fnstenv
jnp
push
and
cli
or
mov
and
jmp
loope
inc
xchg
test
add
add
in
das
imul
and
cdq
aaa
daa
xchg
rol
and
push
and
call
mov
sub
xor
aam
(bad)
mov
repnz
iret
rcl
sbb
lock
inc
arpl
enter
adc
mov
and
dec
lock
mov
adc
sub
loop
mov
mov
xor
js
dec
scas
add
mov
imul
test
push
xchg
fnstcw
cmp
inc
mov
and
xchg
pop
(bad)
xor
stos
std
shl
lea
xor
inc
pop
daa
ficom
ja
adc
out
rol
pop
outs
fst
jbe
call
inc
test
push
add
cmps
test
fsubr
xor
inc
ret
retf
dec
icebp
cli
loopne
or
add
sub
not
in
dec
mov
scas
and
cmp
outs
ret
push
dec
out
jmp
in
fs
lods
lock
mov
or
pop
out
dec
push
add
inc
in
and
mov
and
xchg
xchg
jo
lods
mov
dec
mov
or
inc
sub
call
xlat
mov
sbb
test
jb
arpl
jp
les
adc
ror
pop
or
jmp
pop
xor
xchg
nop
jg
add
pop
mov
fnsave
push
ss
(bad)
mov
pop
mov
aas
xor
xchg
and
and
sbb
repz
jae
inc
push
ds
jne
push
rcr
mov
xchg
push
mov
adc
fcomp
sti
cs
inc
pop
aaa
jno
stos
inc
jo
mov
repz
call
je
imul
stc
mov
dec
sbb
push
mov
xchg
mov
js
icebp
retf
inc
pop
mov
outs
(bad)
and
push
push
cmp
cld
mov
div
mov
jmp
pop
jg
shr
pop
mov
xchg
outs
jg
jo
retf
sbb
sub
stc
cmc
sub
dec
mov
fdiv
shl
lds
ror
call
mov
push
adc
sub
sub
xchg
sbb
aas
loopne
xchg
aam
mov
int
test
pop
sub
test
push
shr
into
repnz
and
mov
scas
call
pop
in
jmp
xchg
sub
lods
push
in
lds
int3
hlt
adc
stos
retf
push
mov
adc
inc
or
sub
test
mov
jp
mov
xchg
ficomp
cmp
push
and
int
cmp
out
push
jmp
push
inc
inc
pop
loop
imul
cmp
push
lods
jp
fnsave
xor
sub
sti
retf
inc
jb
mov
mov
push
dec
movs
ret
(bad)
(bad)
mov
loop
or
popf
out
into
loop
pop
inc
movs
and
add
inc
sub
aas
outs
retf
mov
retf
xchg
push
jae
test
dec
imul
mov
sub
cmp
or
fst
movs
inc
xchg
imul
dec
sbb
xchg
imul
pushf
sub
dec
sbb
xor
out
add
xchg
test
pusha
sti
aas
lahf
(bad)
int3
mov
mov
mov
sbb
push
jl
mov
pop
push
aaa
aas
pop
cmps
mov
ins
scas
add
dec
(bad)
mov
mov
add
rcr
push
mov
mov
stos
shl
ret
and
(bad)
loope
mov
push
push
adc
xor
pop
je
cmps
cwde
add
ss
add
fucom
pop
in
call
in
mov
jle
je
xor
push
cmp
mov
ins
push
mov
xchg
push
sti
inc
stc
cmp
xor
retf
mov
mov
xor
sub
mov
xor
adc
and
arpl
xlat
outs
outs
dec
jbe
daa
sbb
shl
and
inc
or
dec
int3
arpl
xchg
and
and
nop
dec
(bad)
jno
cli
fdivr
sub
movs
mov
or
mov
das
nop
pop
pop
pop
cli
jle
cmps
push
xchg
fld
and
add
pop
lahf
cli
mov
inc
jns
mov
scas
adc
rol
imul
lahf
idiv
enter
cmc
adc
push
xchg
stos
sbb
pop
push
lds
push
and
mov
pop
out
(bad)
out
push
aad
or
add
repnz
xchg
mov
mov
and
mov
pop
sti
fucomp
pop
xchg
push
xchg
adc
jb
sbb
jns
mov
test
ror
in
(bad)
pop
jo
mov
pusha
jno
mov
jge
add
scas
dec
xor
repnz
fcomp
in
push
and
fst
aaa
adc
out
cmps
movs
add
rcl
cmp
ss
and
cdq
sbb
pop
cmp
div
fwait
outs
loope
cli
sbb
mov
ror
and
push
cs
mov
or
jle
mov
inc
adc
push
and
cmc
test
jo
in
push
jns
imul
inc
les
repnz
das
dec
fmul
xor
arpl
pop
jns
xchg
inc
loopne
das
sbb
mov
clc
lahf
imul
lea
sbb
lahf
sbb
pop
ret
popf
dec
or
fistp
add
xchg
fstp
out
fidivr
fimul
lds
stos
lods
jb
pusha
xor
and
movs
scas
add
sahf
out
inc
adc
mov
xchg
lahf
xchg
sub
jne
mov
call
les
addr16
mov
xor
stos
lods
mov
add
inc
shr
iret
mov
les
mov
fcmovbe
pop
bound
push
rcr
jmp
mov
fcmovnbe
stos
add
push
js
push
daa
sahf
lods
mov
adc
dec
fmul
in
(bad)
not
inc
mov
cwde
out
and
cmp
mov
fiadd
pop
mov
(bad)
les
ret
retf
push
cmp
dec
xchg
sar
add
xchg
enter
xchg
jmp
test
inc
je
push
repnz
and
cmp
add
adc
outs
dec
neg
mov
call
push
add
cmp
dec
jne
mov
mov
add
dec
adc
fs
daa
(bad)
push
mov
fld
sbb
ficom
(bad)
push
or
adc
cmp
mov
test
pusha
test
lods
dec
push
inc
(bad)
add
das
js
xchg
pop
cmps
sahf
fst
xchg
repnz
jns
sub
mov
xor
jg
in
lock
cmp
sub
xor
push
inc
add
retf
push
pop
daa
xchg
imul
bound
dec
add
out
bound
out
pop
sbb
ret
push
pop
push
xchg
movs
jge
bnd
and
adc
push
cmp
xor
xor
aam
rol
xchg
retf
xor
rcl
cmp
and
push
call
xor
push
ins
push
and
jne
retf
gs
cmps
cmps
mov
shr
mov
mov
test
cs
or
push
inc
or
push
ret
cmp
push
dec
jo
ds
sbb
js
push
in
mov
mov
(bad)
jno
jns
imul
dec
xchg
xor
(bad)
int3
sahf
pop
sbb
jmp
pop
adc
cld
inc
out
mov
lock
jecxz
aam
add
xchg
push
rol
pop
pop
addr16
cmp
aam
leave
xor
scas
xchg
bound
mov
jge
ret
xor
imul
(bad)
out
in
mov
test
pop
retf
std
sahf
mov
icebp
retf
push
scas
aaa
and
int
dec
call
dec
ins
shr
mov
xor
add
out
dec
fcmovbe
cli
loop
mov
aam
sub
mov
add
scas
inc
not
dec
test
jl
clc
mov
lods
xor
xor
ds
dec
mov
sub
or
cmp
adc
rcr
lahf
mov
jg
outs
push
cmp
test
mov
cmp
jle
stc
je
loop
pop
nop
fcomp
pop
fisub
or
jecxz
out
mov
xor
lods
push
mov
pop
inc
mov
push
jmp
pop
mov
push
mov
sbb
add
lock
xor
cmp
pop
es
stos
or
jp
push
add
pop
js
sub
push
idiv
test
mov
and
inc
inc
enter
dec
inc
sti
and
or
rol
repz
data16
rcl
or
sbb
(bad)
jne
add
sbb
and
jo
mov
dec
repnz
pop
mov
mov
and
pop
psubb
cmp
sub
xor
dec
aam
dec
mov
in
inc
mov
jb
inc
div
sbb
call
xor
xchg
lahf
loopne
(bad)
cmps
xor
jnp
sahf
(bad)
lea
jmp
mov
add
leave
and
push
das
mov
sub
lock
mov
xchg
cmpxchg
xor
mov
(bad)
es
add
xor
loop
sub
add
cs
dec
pop
out
mov
outs
fst
int3
out
popa
test
jmp
inc
inc
(bad)
mov
clc
out
fwait
jg
ss
cwde
add
test
add
shl
sub
data16
xchg
mov
dec
pop
int
xor
sti
mov
sar
or
inc
inc
add
xchg
mov
test
dec
cmps
xchg
pop
mov
adc
mov
shr
dec
cdq
mov
inc
add
mov
js
inc
jns
mov
cmps
hlt
mov
mov
nop
iret
ins
loope
pop
sbb
inc
and
int3
jo
hlt
add
mov
or
iret
sub
add
cmp
call
inc
and
pop
inc
and
push
push
stos
stos
add
pop
cli
in
sub
and
in
mov
sbb
cmp
fucomi
fisubr
loop
or
fs
clc
mov
arpl
dec
in
mov
adc
jmp
mov
or
adc
mov
les
dec
daa
adc
stos
inc
sub
add
stos
sub
bound
pop
xor
mov
pop
(bad)
in
jno
(bad)
out
cmps
sbb
sbb
adc
and
mov
dec
push
enter
mov
gs
xor
aam
push
push
sub
dec
jae
(bad)
inc
repnz
fnsave
cmp
test
mov
popa
cld
mov
aad
pop
into
fcmove
std
popf
cmp
(bad)
xchg
sbb
lods
and
pop
sar
pop
dec
mov
ss
ret
pop
sbb
inc
pop
cld
sar
add
(bad)
mov
sahf
sbb
sub
sbb
dec
adc
hlt
jmp
push
xor
add
addr16
sbb
mov
pop
fsubr
out
repz
mov
push
inc
ds
arpl
xor
loop
(bad)
cmp
cmc
jmp
mov
sahf
sbb
aas
jns
enter
dec
cmp
repz
addr16
xchg
cmps
push
cmps
repnz
dec
sbb
pop
ror
push
jo
xchg
jns
std
mov
xor
add
and
push
sbb
inc
inc
or
ror
lahf
stc
dec
inc
inc
jbe
cmp
ins
aad
mov
shl
xchg
dec
and
xchg
in
retf
enter
pop
dec
mov
repz
pop
popa
mov
cmc
inc
pop
xchg
inc
dec
push
pop
out
mov
jb
mov
push
(bad)
in
inc
jne
mov
cld
repz
pop
or
adc
je
out
fldenv
imul
and
nop
mov
jae
out
jno
ret
outs
icebp
or
sbb
and
iret
add
iret
add
sahf
push
mov
ret
rep
iret
test
rol
enter
repz
(bad)
push
jmp
fadd
or
xor
ror
mov
xchg
add
mov
mov
stc
imul
xchg
pop
push
stos
lahf
mov
mov
rcl
stos
dec
lods
fcmovne
dec
cmp
sbb
inc
leave
loop
clc
cmp
fdivrp
mov
xchg
xchg
or
daa
js
loopne
adc
and
imul
pusha
mov
test
stos
sbb
xor
clc
imul
fsubp
out
sbb
or
les
imul
nop
add
test
ins
addr16
lahf
imul
pushf
es
push
icebp
xchg
xor
and
push
cmps
popf
pop
xchg
arpl
outs
outs
or
jl
or
lds
sbb
cmp
jno
xor
test
cmp
dec
imul
fwait
pop
pop
sbb
sub
lods
inc
add
or
out
add
sub
push
xchg
xor
cmps
(bad)
jecxz
jae
pop
in
adc
push
and
mov
mov
sbb
dec
(bad)
dec
cwde
mov
(bad)
sti
sar
(bad)
dec
ins
fidivr
or
sbb
and
and
pop
(bad)
imul
mov
xchg
or
pushf
lea
inc
out
daa
arpl
mov
aas
dec
icebp
neg
cmp
add
rol
je
in
pop
rol
cld
enter
aam
addr16
inc
adc
pop
dec
xchg
mov
dec
movs
xor
stos
mov
(bad)
mov
sub
fsub
xchg
mov
dec
mov
shl
cbw
jns
les
sar
xchg
lahf
cmc
mov
inc
or
pop
rcr
movs
push
xchg
ins
xor
add
fld
mov
ja
fst
and
dec
dec
adc
mov
sbb
sub
out
imul
lods
stos
fdivr
cmp
push
mov
push
cmps
cwde
sbb
mov
sahf
es
mov
sahf
dec
pop
sub
sub
mov
push
add
arpl
arpl
mov
scas
imul
in
fst
bound
or
ror
adc
sbb
ss
dec
mov
bound
dec
pushf
jle
cmp
test
sub
call
add
jb
jae
retf
outs
sub
cdq
push
add
dec
sbb
add
pop
jne
sub
add
test
pop
xor
movs
not
and
sti
xor
mov
pop
ds
lds
ins
lods
mov
xor
stos
int3
js
fidiv
imul
rol
mov
loop
enter
pop
cmp
sub
mov
xor
mov
jmp
sbb
jno
arpl
push
imul
cmc
test
jp
sbb
sub
push
adc
xor
fisubr
lods
add
(bad)
jmp
jns
jne
mov
dec
jecxz
in
jp
mov
dec
fsub
aaa
sbb
push
push
int3
dec
mov
repnz
jae
mov
xchg
scas
inc
outs
push
mov
cmp
sbb
cs
push
cld
jnp
outs
adc
stos
stc
lock
stc
inc
jne
fcomp
call
push
bswap
mov
adc
mov
shl
imul
dec
adc
div
in
mov
xchg
imul
add
adc
or
daa
adc
loop
jbe
fbstp
and
in
clc
push
sub
adc
bound
inc
mov
mov
adc
jae
mov
jg
cmp
sbb
adc
addr16
sar
pop
push
jmp
sbb
int3
les
mov
addr16
pusha
pop
cmps
xchg
lahf
add
aas
mov
jae
lods
je
xchg
fbstp
xchg
adc
int3
lods
dec
and
pop
push
inc
inc
retf
scas
jg
xlat
pop
jb
repnz
mov
xor
fmul
cmps
scas
repz
or
jmp
sahf
out
aas
mov
(bad)
dec
stos
dec
stc
scas
sti
js
gs
inc
in
jbe
les
js
ins
(bad)
pop
jmp
cli
ins
mov
sub
pop
(bad)
mov
sbb
retf
inc
inc
stos
mov
mov
mov
repnz
dec
dec
and
and
sub
scas
sti
psadbw
in
outs
idiv
lods
in
in
jl
dec
sbb
jo
stc
icebp
jmp
mov
xchg
xor
and
dec
jo
enter
lds
sbb
xchg
fcmovu
retf
push
ss
iret
cmp
int
lods
sahf
inc
aam
fdivr
or
(bad)
xchg
sbb
out
dec
sub
outs
push
xor
sar
je
fnstsw
iret
popa
fisttp
fisubr
lea
sub
mov
arpl
pop
jb
sahf
jp
retf
xor
cmp
add
das
jbe
int
mov
cwde
in
jecxz
mov
jl
out
or
nop
mov
pop
add
inc
dec
xor
pop
cs
jnp
push
retf
cmp
push
fisubr
pop
sbb
add
xor
push
push
lea
popf
push
mov
in
cli
clc
sbb
mov
iret
repz
daa
push
(bad)
fsubr
pop
outs
or
inc
jo
inc
inc
or
dec
cmp
je
jbe
jl
dec
or
sar
inc
inc
or
test
adc
jge
pop
in
xor
cmp
js
or
imul
mov
test
fsubr
js
xlat
cmp
xchg
aam
lods
ins
sahf
cmp
xor
adc
xor
dec
push
jmp
sbb
and
add
aas
mov
movntq
out
and
dec
and
nop
or
cmc
jle
test
or
xor
(bad)
and
fmul
les
fcom
out
call
cld
popf
and
fisub
into
jge
add
mov
lea
xchg
leave
sub
inc
sub
stos
ss
sbb
mov
jge
sub
out
and
(bad)
aad
push
rol
adc
cmps
popf
dec
in
jmp
dec
jp
inc
push
dec
retf
sub
inc
test
and
cld
mov
sub
push
add
push
pop
sub
sub
xchg
pop
test
add
sub
dec
mov
lea
jmp
mov
stc
in
out
das
xor
retf
mov
mov
imul
jp
sub
and
inc
adc
loope
mov
ss
and
mov
loope
mul
cli
dec
pop
sub
(bad)
jns
popa
mov
add
movs
sbb
hlt
inc
or
scas
pop
hlt
out
ja
fstp
ins
cs
mov
pusha
stos
ror
mov
lahf
push
mov
ret
in
stc
xchg
add
dec
pop
sbb
rcl
add
push
lds
pop
test
mov
cmp
imul
sub
xor
inc
sbb
imul
xor
push
mov
cmps
fmul
xor
sbb
or
xchg
xchg
and
mov
pop
stc
xor
dec
and
and
js
data16
pop
std
cmp
pop
daa
fld
mov
jno
movs
js
or
scas
inc
or
es
nop
jmp
scas
jle
add
mov
mov
arpl
out
dec
pusha
jle
das
and
add
xor
ins
sbb
mov
mov
add
cmc
and
retf
adc
xor
dec
stc
jo
add
pop
sti
push
js
push
push
stos
movs
call
dec
test
daa
gs
mov
in
add
xlat
mov
fdiv
lds
and
push
mov
movs
mov
call
scas
jle
jle
add
sahf
jle
das
xchg
retf
retf
push
addr16
xor
xor
imul
arpl
push
aam
dec
xchg
scas
lahf
daa
movs
xchg
sbb
fs
pop
les
mov
mov
push
xor
sub
mov
les
xor
xor
mov
dec
or
and
mov
push
xor
xchg
inc
sub
mov
inc
dec
sub
popa
jecxz
add
sub
xor
fst
in
shl
inc
xor
pop
xchg
repz
imul
mov
bound
or
cdq
leave
adc
ret
pop
outs
iret
stos
int
lods
mov
dec
outs
loopne
add
cwde
rol
pop
pop
xor
loope
cli
dec
dec
xor
adc
jg
(bad)
icebp
out
das
or
std
adc
or
push
cmp
shl
push
pop
jae
out
sti
jmp
mov
(bad)
sbb
in
mov
stos
imul
xor
cdq
movs
bound
sub
push
pop
pop
(bad)
pusha
das
stos
pop
test
xchg
sub
push
arpl
xchg
inc
dec
push
pushf
cmp
push
loope
out
mov
xor
sub
and
ja
push
gs
aam
inc
ror
or
and
adc
or
ror
aam
and
xor
xor
xor
mov
gs
xchg
sbb
jg
inc
add
das
lds
fstp
mov
or
push
mov
adc
mov
pop
test
xor
inc
out
idiv
leave
repz
dec
push
call
lods
cmp
cmp
jne
js
dec
call
mov
ins
dec
std
in
mov
pop
or
xor
adc
dec
add
movs
cmc
sub
ins
add
mov
mov
push
add
sub
push
cwde
jle
cs
jg
mul
int
dec
push
mov
je
popf
ror
inc
push
jle
loop
loopne
push
movs
cs
mov
in
out
push
(bad)
jl
xchg
mov
or
lods
push
call
mov
not
push
push
add
add
daa
push
rcl
push
movs
ror
nop
out
push
stos
adc
dec
sub
dec
popf
test
add
adc
out
or
mov
or
int
test
push
scas
daa
pop
sub
add
jmp
mov
in
fisubr
movs
push
jmp
push
xor
inc
xor
and
and
in
data16
test
stc
push
in
inc
div
movs
push
inc
stc
stos
arpl
pusha
(bad)
fcomip
push
mov
mov
cmp
int3
stos
xchg
mov
sbb
gs
cld
(bad)
gs
mov
and
inc
push
push
jo
or
inc
mov
lea
and
ror
test
mov
pop
dec
xor
fs
popf
jno
and
jg
jno
clc
fnstenv
and
cmp
mov
sbb
push
lahf
fdiv
cmps
iret
xchg
stos
fs
sub
inc
add
pop
dec
scas
nop
loope
or
(bad)
mov
fbld
sbb
cmps
and
call
je
sub
add
pop
inc
sub
push
cli
push
and
nop
mov
lds
xor
push
xchg
add
ficomp
cli
enter
add
add
jg
shl
fld
pop
mov
mov
call
int
stos
cdq
dec
inc
sub
shr
xchg
mov
hlt
mov
sub
xchg
mov
mov
inc
dec
sub
movs
jo
pop
mov
pop
pop
dec
loope
cs
or
sbb
cmc
int
adc
cmps
sbb
loop
enter
push
arpl
inc
std
push
inc
add
mov
sub
add
xor
fld
mov
sub
jecxz
in
in
rcr
ret
xlat
movs
ss
cdq
movs
outs
mov
shl
call
adc
push
mov
cli
jnp
mov
and
mov
mov
shl
push
test
sub
jle
test
push
sub
aam
lods
inc
add
inc
stc
jle
call
xor
adc
aad
adc
(bad)
cmps
aad
daa
xor
inc
call
mov
mov
or
jle
retf
retf
xchg
mov
or
test
cmps
js
mov
mov
fdivr
xchg
pusha
mov
mov
add
mov
jp
fidivr
mov
aas
ins
pop
dec
pop
shl
pop
repnz
out
rol
inc
jle
scas
jb
xor
retf
in
sti
dec
inc
sub
cwde
dec
in
and
add
in
add
jmp
jecxz
bound
jmp
mov
adc
add
jb
dec
fs
adc
push
mov
out
jns
shl
movs
pop
adc
xchg
inc
pop
call
scas
jae
sbb
aaa
add
dec
in
jg
cli
stos
sti
outs
xor
arpl
sbb
add
cs
repnz
psubusw
cmp
xchg
clc
push
pop
dec
imul
push
enter
pop
cwde
ja
pop
sub
mov
pop
loopne
jecxz
loope
push
gs
outs
cld
mov
dec
sbb
jle
mov
xor
inc
mov
add
movs
sahf
xor
ds
fcomp
jmp
pop
stos
test
icebp
jg
mov
retf
sub
push
(bad)
in
sub
iret
adc
and
mov
call
inc
aas
outs
push
xor
mov
inc
cmp
mov
jno
xor
ss
jmp
jl
iret
mov
mov
data16
sbb
cld
cmp
cmp
call
dec
sbb
dec
mov
sub
adc
sbb
jecxz
add
loop
outs
sbb
mov
int3
sub
sub
jnp
adc
sahf
cmp
jb
sub
or
xlat
cmp
pop
addr16
aad
jno
stc
cmps
push
imul
aam
test
icebp
cmc
push
rcr
js
jbe
xchg
loope
add
push
daa
cld
sahf
jne
inc
in
pop
mov
gs
imul
adc
sub
arpl
adc
sbb
and
test
push
lods
lods
clc
dec
sbb
add
cs
cmp
xor
adc
adc
or
push
jno
xor
retf
add
(bad)
dec
leave
sub
sub
add
xchg
les
neg
sbb
add
and
mov
lock
and
push
inc
pop
mov
retf
mov
aad
shr
mov
sub
sbb
bound
xchg
retf
xchg
jb
dec
aam
scas
mov
dec
add
cmc
pop
jecxz
adc
ds
cmp
sbb
and
(bad)
in
pop
mov
movs
fdivr
retf
xor
xor
mov
cmps
popa
push
xchg
js
jno
push
rcl
xchg
jae
std
fcmovu
cmps
and
shl
rcl
xor
hlt
ss
cld
pop
pop
adc
test
sbb
xor
pop
jle
jno
dec
push
adc
cmp
(bad)
sbb
mov
xchg
mov
movs
jg
jnp
outs
je
mov
push
and
ficom
stc
cmc
sub
sbb
rcr
dec
cmp
arpl
sub
dec
xor
aaa
mov
ror
mov
and
(bad)
div
test
pop
daa
push
scas
push
push
add
cwde
pop
out
inc
add
cmp
cmps
dec
mov
lods
dec
add
adc
jl
ret
int
loop
adc
dec
cdq
out
mov
fcmovbe
scas
jb
push
lahf
lock
sahf
in
pop
xchg
cmp
add
rcr
and
ror
adc
and
add
dec
bnd
retf
push
mov
js
jg
sti
sbb
inc
push
hlt
mov
stc
pusha
jge
cmp
push
sbb
xchg
jge
clc
jae
push
in
jg
loop
aas
(bad)
data16
push
icebp
sbb
push
outs
sbb
movs
jmp
leave
cmc
scas
imul
xlat
out
rol
pop
cli
mov
lahf
int
out
jnp
mov
fisttp
outs
inc
fist
push
out
outs
mov
(bad)
rep
sub
pop
aam
ds
lahf
outs
mov
movs
jns
push
add
fisttp
idiv
pop
jge
icebp
adc
jg
stos
lock
or
jge
xchg
pop
(bad)
dec
(bad)
pop
dec
cmp
jbe
in
(bad)
cmp
adc
in
data16
cwde
pop
dec
and
adc
add
(bad)
xlat
repz
mov
pusha
xor
xor
xchg
or
in
mov
pop
loop
adc
in
iret
inc
mul
sahf
inc
mov
stos
add
pop
cmps
cmp
ss
test
cmp
add
cmp
shl
mov
push
xor
cmc
jno
mov
in
jecxz
pop
ror
aas
imul
add
pop
(bad)
sbb
sub
add
aas
nop
and
xchg
imul
sti
pop
adc
jae
fadd
push
das
scas
lahf
and
xchg
mov
adc
sub
cli
call
(bad)
popa
in
inc
mov
into
lds
pop
sbb
pop
and
pop
sub
sbb
or
jmp
inc
fcom
dec
hlt
pop
add
xchg
call
cmc
jo
push
xor
imul
push
xchg
push
repz
gs
and
cmp
in
cmp
inc
mov
movs
sub
mov
aam
es
adc
cmps
adc
popf
jle
test
push
push
cmps
cmps
cmp
push
jp
add
fstp
mov
in
mov
or
add
mov
adc
inc
adc
(bad)
dec
loope
in
dec
xchg
inc
lds
dec
pop
lock
je
idiv
pop
push
jecxz
arpl
push
pop
mov
jo
aaa
cli
inc
lea
mov
push
mov
add
out
loop
iret
scas
mov
fs
rol
mov
std
popf
or
stos
test
push
stos
inc
and
cmp
cmp
jmp
jnp
outs
mov
mov
daa
lds
pop
xchg
repz
mov
cmp
call
cwde
in
xchg
movs
xor
mov
aaa
scas
push
in
lahf
pop
fstp
add
mov
sbb
xchg
mov
add
pop
lea
mov
xor
dec
lock
jp
pop
xchg
fst
cmp
mov
cmps
lahf
add
dec
push
xchg
iret
aam
imul
sub
mov
(bad)
or
mov
ds
inc
fisub
fsubr
aaa
aaa
mov
rcr
sub
(bad)
mov
xchg
(bad)
fldln2
or
xor
push
or
pusha
add
les
ss
(bad)
cmc
(bad)
daa
pop
mov
(bad)
inc
inc
mov
movs
adc
mov
inc
inc
repnz
pop
mov
push
jae
sub
fsubr
jmp
push
xchg
jg
inc
add
cmp
outs
cmps
out
pop
js
lea
adc
sbb
sub
ins
mov
test
movs
and
les
xchg
or
sub
stc
daa
sahf
sub
mov
bnd
lock
mov
sbb
enter
hlt
lods
(bad)
in
rcl
dec
jbe
xor
inc
inc
loope
scas
pop
aas
ins
add
cmps
movs
add
test
pop
adc
sub
leave
test
lahf
scas
scas
inc
pop
jbe
(bad)
enter
aam
icebp
mov
sbb
mov
add
cdq
jmp
test
test
push
add
adc
dec
and
test
push
and
push
js
(bad)
sbb
pop
mov
push
xchg
pop
pop
aaa
add
and
mov
aas
iret
pop
jne
call
dec
sub
es
pop
adc
jecxz
sbb
loop
pop
retf
repz
idiv
fsubr
sbb
retf
add
fxch
mov
mov
add
push
pop
adc
push
sbb
and
mov
int
mov
mov
sub
adc
(bad)
and
sbb
fs
call
shrd
mov
dec
push
and
cmp
adc
push
rcl
cmc
push
jmp
mov
mov
add
mov
inc
movs
add
pop
retf
adc
jbe
cli
loop
loop
xchg
xchg
cld
inc
xchg
dec
aas
ret
xchg
test
push
lods
cmp
inc
je
inc
sti
and
xor
nop
repz
(bad)
imul
mov
jnp
sbb
cld
stos
stc
aam
clc
je
pop
or
shr
jl
inc
aaa
stc
mov
xchg
mov
xchg
or
fs
cs
mov
sti
xor
(bad)
mov
cmp
pop
xor
pusha
or
rcl
movs
lahf
inc
leave
and
and
sar
push
sbb
jb
jae
sbb
or
mov
adc
lods
mov
sub
jle
les
ud1
popa
cwde
lds
adc
cmps
cmps
retf
es
cld
mov
ret
jle
sub
xchg
test
in
aam
dec
sbb
scas
stos
fcom
jp
pop
push
lods
sub
dec
mov
sar
pop
sbb
mov
in
jae
leave
push
scas
and
loop
and
xchg
push
jle
rol
pop
pop
cmps
push
dec
sub
inc
xchg
mov
movs
add
add
inc
scas
or
cmps
into
mov
(bad)
out
push
and
cdq
and
sub
adc
sub
(bad)
lock
and
inc
pop
sbb
mov
fld
je
jne
mov
push
js
pusha
stc
or
imul
popf
inc
xchg
mov
lods
sahf
lea
lock
sti
test
push
mov
cmc
sbb
sbb
sub
sbb
dec
mov
outs
bnd
(bad)
xor
push
add
xchg
ds
or
cwde
sub
stos
shl
fdiv
movs
xchg
lods
imul
into
lods
xor
bound
call
int
mov
jle
xchg
mov
pop
mov
repz
jl
or
inc
jge
fldcw
in
loop
fdiv
xchg
mov
sbb
fcom
pop
pop
dec
jg
xchg
add
dec
sbb
cli
adc
nop
iret
or
dec
shl
enter
cmp
outs
inc
out
cmps
call
push
aam
jge
push
movs
ficom
cmp
movs
nop
add
jnp
mov
xchg
xor
loopne
ret
repz
out
pop
iret
mov
repnz
mov
push
jecxz
mov
leave
push
int3
or
cwde
les
adc
adc
push
cmp
and
dec
adc
aad
fs
xor
push
mov
add
pop
mov
sub
scas
retf
scas
icebp
out
jle
cmps
inc
sbb
mov
movs
gs
in
sub
dec
and
scas
adc
sbb
xor
dec
pop
mov
scas
adc
or
call
out
xor
xchg
scas
stos
xchg
adc
or
mov
retf
rep
enter
cmp
mov
fcom
sub
pop
add
push
pusha
push
dec
repnz
ins
mov
loopne
cmp
xor
or
lock
ror
dec
add
fwait
imul
and
cli
out
out
dec
xlat
sub
mov
ficomp
lods
cmp
fcom
mov
pop
cmp
add
xlat
leave
daa
fdiv
mov
bound
jg
adc
sub
and
in
pop
sub
jle
xchg
xchg
or
push
cmp
dec
add
fs
int3
dec
and
int3
mov
mov
and
pusha
jge
or
out
enter
add
xlat
movs
xor
(bad)
pushfw
call
in
push
fidiv
stc
pop
sbb
sbb
push
mov
test
ds
push
mov
jbe
pop
aam
into
cmp
inc
arpl
call
pop
and
mov
jecxz
dec
inc
imul
stos
cmp
cmp
or
inc
xchg
mov
and
ja
bound
adc
cmp
xchg
mov
loop
pop
push
scas
xchg
call
mov
jnp
jecxz
call
aas
imul
dec
pop
xor
mov
mov
test
xchg
out
fucomip
jnp
jbe
call
mov
xor
(bad)
cmp
(bad)
mov
jno
push
dec
dec
xor
cmp
(bad)
and
pop
xor
jg
sbb
mov
mov
cmp
sbb
push
test
mov
jb
cmp
mov
xchg
pop
or
stos
mov
jge
popf
sub
pop
scas
jo
dec
push
ret
jmp
mov
add
add
xchg
stos
into
mov
push
pop
retf
sub
adc
sbb
(bad)
mov
call
xchg
imul
push
mov
adc
mov
inc
or
adc
out
in
fwait
cli
mov
iret
push
(bad)
lds
mov
adc
lods
or
cdq
xchg
retf
mov
lods
or
test
add
ss
xor
cmps
test
es
(bad)
and
xchg
in
and
mov
sub
daa
mov
xchg
add
aad
push
jecxz
imul
inc
and
pop
lock
cmp
mov
jbe
pop
sub
cli
std
mov
push
and
in
icebp
cwde
(bad)
fimul
(bad)
or
jmp
push
push
add
pop
fwait
sti
mov
pusha
ins
mov
gs
push
mov
mov
push
dec
push
movs
push
sar
(bad)
adc
rcl
lds
jb
shl
mov
in
and
lds
stos
sahf
sbb
mov
sub
outs
sub
and
sub
push
push
xor
cli
jno
cmp
jecxz
ins
and
sub
(bad)
sahf
jle
jmp
inc
leave
jecxz
pop
fiadd
shl
fdivr
movs
xor
sbb
or
loopne
ret
pop
xchg
dec
sbb
(bad)
jae
in
fidiv
scas
jo
push
faddp
pop
sbb
and
xchg
(bad)
sbb
xchg
jmp
movs
xchg
scas
sub
pop
dec
mov
adc
rcl
mov
rcl
sbb
outs
repnz
sub
aam
and
dec
push
(bad)
pop
pop
pop
mov
cdq
fs
(bad)
js
dec
cmovl
je
into
and
xlat
into
cmps
sbb
in
iret
rcr
or
sub
and
jecxz
movs
sahf
cmp
ins
or
adc
mov
jge
arpl
test
imul
push
add
stc
aam
je
dec
jle
mov
or
mov
jl
jle
sub
and
sub
repnz
mov
push
mov
iret
and
push
dec
mov
enter
(bad)
data16
dec
inc
push
adc
pop
(bad)
dec
xlat
lock
jg
cld
std
xor
push
xor
rcl
cs
jle
shl
xor
mov
dec
adc
cmp
xor
pop
(bad)
(bad)
push
cmp
mov
hlt
push
fcom
sar
arpl
sbb
dec
add
pop
cmp
xchg
movs
dec
lods
jg
pop
and
mov
jge
mov
aaa
rcr
xchg
ins
inc
cmp
arpl
rcl
ja
addr16
adc
xchg
cli
stos
rcl
test
int3
mov
mov
dec
dec
sbb
inc
sti
pop
addr16
adc
aam
cmc
sbb
sti
mov
out
cmp
xchg
dec
cs
adc
pop
fcmovnbe
enter
mov
jecxz
(bad)
xchg
jnp
xchg
das
loop
mov
imul
pop
and
aam
stc
or
mov
sbb
or
out
scas
xor
bound
and
(bad)
pop
cmp
sbb
jae
mov
fnstenv
or
push
mov
inc
push
hlt
and
retf
and
or
dec
jmp
push
mov
cmps
adc
shl
data16
push
(bad)
mov
daa
ficom
into
sub
inc
sbb
push
push
pop
jle
mov
mov
cmps
push
(bad)
fs
hlt
repnz
ins
sahf
repnz
or
push
(bad)
jb
sub
inc
loopne
pop
fisttp
lods
(bad)
mov
outs
pop
outs
adc
outs
ret
daa
push
push
mov
rcl
push
push
movs
mov
push
xchg
(bad)
repz
jmp
fst
push
push
sbb
test
imul
xchg
xor
mov
mov
sbb
add
cmps
jg
jb
jp
les
push
pop
sbb
stc
jg
cmp
loop
mov
sbb
les
sub
add
sbb
cmp
jp
aam
xlat
cmp
(bad)
dec
dec
imul
fwait
jnp
mov
sub
xchg
rcr
adc
cmp
jmp
(bad)
retf
adc
sub
pop
pop
sbb
sub
add
sbb
stos
lahf
nop
sbb
mov
scas
mov
jo
int
ja
push
hlt
mov
in
out
push
in
inc
mov
mov
lock
outs
adc
in
loope
dec
loopne
push
mov
jp
shl
clc
jp
mov
es
sti
sahf
sub
xchg
mov
call
sbb
xchg
push
retf
push
int3
xchg
cs
aam
sub
mov
movs
stos
inc
push
dec
in
test
mov
jne
pop
jns
xchg
push
movs
(bad)
je
pop
push
into
into
mov
sub
xor
xchg
outs
mov
xor
push
cmp
push
mov
(bad)
pop
and
mov
mov
jge
sahf
inc
jns
xor
mov
sub
fcmovbe
mov
aam
retf
jecxz
adc
sub
lahf
and
jmp
mov
call
add
and
inc
leave
jne
pop
out
std
stos
sahf
jge
ins
mov
add
cdq
adc
push
cdq
add
add
sub
movs
mov
cmp
stc
je
out
pop
push
xor
and
pop
js
mov
xchg
adc
add
rcr
cmps
mov
adc
outs
or
xchg
dec
jecxz
(bad)
movs
xor
lea
test
jmp
das
pusha
sahf
(bad)
push
inc
hlt
lods
sub
setg
pop
jle
lea
add
add
pop
movs
jno
or
xchg
add
adc
(bad)
out
rep
jae
in
jmp
cs
push
adc
pop
ds
xchg
push
icebp
fstp
aam
arpl
cmps
popa
cmps
call
xchg
mov
test
iret
sti
(bad)
outs
cs
mov
or
movs
mov
mov
add
gs
pop
adc
push
call
jle
pop
repz
jmp
and
(bad)
xlat
cmps
fwait
sti
enter
gs
daa
or
arpl
je
out
dec
mov
arpl
pop
xlat
rol
lods
imul
push
xchg
int
je
in
mov
mov
or
lods
movs
lahf
dec
push
pusha
jle
in
jge
ss
push
into
mov
xor
fs
sub
cmps
add
in
aas
xchg
dec
xchg
cmp
sbb
xlat
ins
pop
outs
xchg
stos
(bad)
shl
pop
(bad)
int
jle
sub
cmps
in
call
jbe
cmp
mov
xor
cmp
sub
or
test
push
repz
or
or
mov
ret
xchg
fwait
adc
aam
push
lahf
iret
test
(bad)
cmp
cmp
xor
loop
iret
movs
inc
pop
mov
int
sbb
outs
dec
not
sbb
jbe
fsub
enter
aad
ds
jmp
imul
fsub
sub
pop
sbb
inc
add
push
in
popa
in
and
jb
aam
mov
fwait
or
jl
cld
inc
fldl2t
int3
xor
mov
mov
stc
aaa
mov
cmc
jg
xlat
fimul
jmp
push
mov
dec
addr16
or
lods
jle
sbb
lds
inc
sbb
imul
data16
imul
pcmpeqb
xor
or
cmp
movs
(bad)
nop
ds
mov
dec
ret
jno
xor
push
cmps
mov
push
xchg
dec
mov
and
enter
ror
add
mov
jl
mov
fsubr
xor
in
(bad)
in
cwde
jmp
imul
inc
repnz
les
dec
mov
xor
lahf
lods
std
lods
mov
dec
or
popf
inc
push
mov
xchg
into
pop
lahf
imul
xchg
jl
pop
xchg
(bad)
mov
cmp
cli
js
addr16
int
and
add
dec
add
(bad)
sahf
int
xchg
cmp
mov
ror
xchg
gs
scas
in
iret
adc
stos
and
stc
add
addr16
push
cmp
sbb
jge
(bad)
and
lods
in
sub
mov
xor
xor
or
jmp
push
in
(bad)
dec
retf
xchg
mov
test
cmc
add
pop
xlat
jmp
jmp
cmp
leave
push
test
lahf
xchg
inc
or
lds
out
cld
cld
ds
in
mov
pop
test
and
lds
xchg
and
cdq
and
sbb
aam
loop
(bad)
shr
add
xchg
inc
jl
rcl
dec
mov
das
mov
push
jb
sbb
imul
ins
sti
rol
sbb
fild
push
sub
xlat
(bad)
addr16
dec
cmps
push
(bad)
cmc
imul
int
push
sbb
and
cmps
mov
jecxz
sbb
mov
ror
dec
int
push
xor
and
imul
lahf
scas
mov
mov
xor
movs
dec
push
lahf
cmc
jns
dec
data16
popf
(bad)
pop
fld
dec
movs
pushf
jmp
push
cmp
jb
pop
mov
je
aaa
pop
pusha
dec
mov
repnz
es
push
sar
xor
push
in
mov
jecxz
push
pusha
jmp
data16
pop
bound
sti
shl
daa
cwde
or
leave
mov
test
mov
lods
inc
jno
sbb
inc
pop
jbe
xchg
mov
jmp
lods
jle
add
adc
inc
pop
adc
stos
mov
push
fcmovnbe
rcr
xor
cmp
jecxz
dec
jecxz
jle
xchg
fwait
jb
push
adc
fnstenv
pop
xor
ins
and
or
mov
adc
add
dec
clc
jp
jb
rcr
adc
xchg
inc
inc
push
inc
imul
mov
push
jno
pop
jmp
jge
xlat
stos
out
mulps
xor
enter
out
sub
scas
mov
pop
ret
jmp
sahf
aaa
or
getsec
mov
inc
std
outs
inc
mov
jmp
sbb
lahf
cmc
jle
dec
mov
lds
shr
jecxz
std
sahf
xchg
pop
les
mov
xchg
sub
ss
adc
fwait
cmp
shl
ret
retf
lods
or
cmp
sub
or
add
lahf
fstp
out
sub
xchg
in
arpl
ror
jmp
push
or
jge
(bad)
(bad)
xchg
push
aam
movs
retf
xlat
add
push
xor
cmps
dec
shl
cli
test
mov
iret
inc
fistp
pusha
rol
or
xor
sbb
popf
jl
jne
shr
es
and
xchg
retf
jge
mov
cmc
sbb
out
inc
sub
jne
div
gs
jns
add
mov
sbb
aaa
imul
push
and
push
cmp
dec
mov
jmp
out
mov
imul
inc
in
lahf
pop
aad
add
mov
push
ja
fild
and
adc
jmp
jo
leave
sub
mov
mov
(bad)
mov
push
movs
and
lods
cmp
in
into
pop
push
cdq
inc
xchg
pop
xor
call
idiv
mov
retf
xlat
mov
push
xor
ret
and
sbb
mov
push
adc
push
stos
fcomp
cmp
into
push
(bad)
cmps
ins
ins
shr
push
imul
sbb
add
test
mov
jne
jns
mov
lods
ficomp
adc
aad
cmpps
sub
dec
test
outs
sub
outs
ficom
or
sub
jns
pop
test
test
xchg
out
int3
xchg
mov
add
(bad)
mov
jne
in
ja
leave
call
cwde
jmp
bound
xchg
mov
mov
imul
fs
adc
cmp
(bad)
aam
hlt
pop
jbe
in
fs
call
mov
push
nop
pop
dec
jno
xor
mov
aam
cli
sti
and
sub
call
add
inc
xor
daa
out
mov
cs
sub
push
dec
lods
inc
adc
into
cmp
ficomp
mov
pop
xchg
test
xchg
(bad)
or
arpl
arpl
mov
cmps
cli
jae
xchg
push
sbb
mov
inc
sub
int
jb
sub
mov
sub
xlat
xor
movs
mov
fsubr
add
hlt
rol
inc
andps
mov
sbb
push
fldcw
or
jb
pop
push
rcr
push
inc
(bad)
sahf
repz
inc
test
add
dec
bnd
sub
rol
ror
leave
lock
push
jl
push
sub
push
gs
in
push
sub
push
outs
inc
push
loope
js
sub
mov
and
das
inc
ret
sbb
test
aaa
xchg
mov
mov
je
out
add
dec
nop
fsubr
push
xchg
xor
aad
dec
nop
pop
mov
xor
mov
jns
sbb
mov
jp
mov
pop
mov
fld
cli
sar
mov
(bad)
lahf
mov
sahf
js
sbb
push
test
inc
add
cmp
add
sub
xor
pusha
or
or
sbb
scas
(bad)
out
popa
in
(bad)
pop
and
test
aad
mov
jg
jp
mov
jb
scas
sbb
sub
xchg
jp
xchg
push
dec
not
aam
push
inc
push
mov
xchg
or
call
xchg
cld
bound
out
rcl
lds
lods
push
push
dec
into
dec
add
test
int3
sbb
sar
out
and
jb
sub
or
je
adc
push
push
test
push
jae
mov
push
lds
mov
lahf
or
test
push
addr16
and
cmp
mov
mov
xchg
inc
push
cmp
adc
jo
pop
aam
xchg
mov
pop
xchg
mov
lods
push
xor
cli
add
xchg
aad
sub
inc
inc
pop
and
stc
dec
retf
sti
adc
outs
cmp
retf
and
push
mov
cmp
push
(bad)
rol
ins
nop
les
add
dec
push
pop
sub
retf
in
xor
aad
shr
test
and
in
sub
push
sbb
mov
push
cmp
mov
rcr
inc
sbb
loop
jle
mov
add
gs
and
inc
xchg
adc
(bad)
mov
push
xor
icebp
dec
sbb
jne
lahf
adc
jp
std
ret
js
sub
dec
push
ror
mov
test
imul
sbb
xor
scas
mov
scas
retf
or
mov
and
fsubp
inc
dec
mov
in
in
pushf
call
movs
and
sbb
cmp
mov
mov
inc
or
jmp
and
push
xchg
sar
stc
aas
cmp
jmp
push
mov
cmps
bnd
aam
or
sbb
sub
aaa
xchg
inc
jecxz
arpl
outs
inc
and
(bad)
movs
mov
aaa
jbe
jg
into
lahf
in
stc
je
mov
xchg
push
retf
sbb
cmps
jno
sahf
dec
jle
fs
adc
sub
push
dec
sub
and
or
cs
outs
add
arpl
pop
jmp
cmp
or
scas
sbb
inc
push
iret
lods
repz
bound
sub
enter
mov
xor
mov
mov
mov
bound
pop
loopne
mov
push
test
call
fdiv
add
pop
mov
push
adc
and
inc
ret
push
popa
(bad)
loopne
aam
pop
adc
jne
in
stos
mov
in
cld
mov
lds
sub
scas
push
fsubr
jns
(bad)
dec
call
retf
sbb
out
push
fisubr
jl
push
dec
cmp
sbb
sbb
adc
(bad)
shr
fdiv
lds
jno
js
inc
je
mov
into
or
jecxz
add
(bad)
ror
test
jo
sub
dec
test
es
mov
lea
rcl
test
lahf
jmp
mov
xor
dec
leave
leave
cmc
cld
icebp
idiv
dec
pop
jno
or
rol
loop
repz
repnz
cwde
xlat
push
movs
sbb
in
xchg
(bad)
mov
(bad)
jns
int
aam
sub
xor
mov
adc
loopne
movs
or
inc
jo
hlt
mov
imul
pushf
pop
or
sbb
test
ror
mov
xor
mov
test
add
xchg
std
jg
frstor
and
scas
cwde
inc
add
fcmovu
(bad)
and
push
out
mov
stc
je
out
imul
sbb
in
and
scas
push
pop
hlt
xchg
jge
in
dec
daa
xchg
mov
mov
inc
adc
(bad)
je
inc
push
push
stos
scas
in
push
aad
dec
fwait
rcl
cmp
pop
ins
mov
xor
mov
clc
cwde
std
ins
sbb
inc
mov
push
ins
pop
xchg
push
add
ja
jae
push
adc
nop
das
add
adc
mov
sub
cmc
enter
fist
push
shr
xchg
ins
inc
or
outs
sbb
jmp
imul
pop
push
movs
mov
loop
test
(bad)
pop
pop
ins
fmul
xor
push
xchg
ins
fistp
cs
push
call
mov
in
push
mov
pop
push
or
or
fs
xchg
jg
mov
(bad)
fbld
(bad)
cwde
jmp
mov
pop
aas
retf
sub
cmp
hlt
imul
mov
xchg
sub
mov
xor
ds
retf
cmps
int3
mov
call
jl
push
inc
pushf
lahf
push
sti
cmp
aaa
mov
cwde
pop
and
push
dec
lea
inc
and
ret
inc
mov
mov
stos
(bad)
mov
push
dec
xchg
(bad)
iret
mov
stos
push
lock
jmp
cmps
(bad)
adc
mov
jo
xor
cdq
sub
(bad)
and
rcl
hlt
daa
fsub
fidivr
movs
adc
inc
and
add
rcl
in
sbb
inc
in
add
ins
(bad)
mov
cmp
pop
add
jmp
mov
cs
sbb
adc
push
(bad)
hlt
inc
pop
fs
jb
leave
loop
sbb
mov
xchg
and
jmp
js
(bad)
jne
ja
ret
mov
mov
sub
into
rcl
mov
xchg
rol
fwait
pop
sti
mov
aaa
push
mov
or
pop
jns
jg
dec
sbb
xlat
ss
sub
iret
cmp
stc
jo
or
and
jns
jns
inc
or
(bad)
lea
jnp
inc
jns
sbb
gs
mov
arpl
stos
js
adc
div
in
fiadd
shr
sbb
int3
out
mov
in
and
xor
or
jnp
ins
xchg
std
sub
js
jne
jle
sbb
dec
mov
iret
movs
xlat
mov
sbb
and
jmp
movs
daa
mov
mov
(bad)
das
out
inc
push
xor
push
ret
cmps
test
inc
fcom
xchg
mov
lods
inc
enter
out
cmp
(bad)
(bad)
mov
add
test
cmc
inc
idiv
add
sbb
pop
jl
call
(bad)
pop
push
inc
pop
sub
(bad)
mov
daa
fdivr
jmp
or
add
loope
fwait
xor
into
sub
movs
(bad)
push
popf
push
sahf
ds
add
sahf
inc
and
cld
cmp
fbld
and
aad
movs
cmps
js
or
mov
mov
jg
mov
(bad)
dec
std
int3
int
mov
shl
and
cwde
loopne
fmul
(bad)
jg
sub
inc
dec
movs
xor
cmps
movs
call
xor
(bad)
rcl
enter
iret
sti
imul
or
ds
cmp
add
dec
das
in
mov
mov
sub
sahf
and
(bad)
lahf
in
jmp
stos
jne
xchg
adc
push
push
sahf
das
popaw
stos
ret
or
out
mov
ss
jbe
mov
pushf
cli
je
xchg
push
xchg
add
cli
mov
stc
loopne
add
xchg
cmp
inc
fwait
cld
imul
mov
push
jl
dec
int3
dec
dec
push
mov
push
inc
loope
add
push
js
push
sbb
add
fsubr
pop
xchg
cmps
cmps
dec
test
sbb
hlt
mov
(bad)
jmp
fsubr
pusha
push
sbb
mov
aam
sti
outs
iret
add
sub
pop
das
pop
or
call
stos
movs
out
sahf
mov
pop
daa
xor
dec
cmc
data16
dec
add
xchg
hlt
dec
xchg
jbe
cmps
test
inc
pop
aam
xchg
div
neg
and
sub
and
jmp
xchg
stc
fwait
cwde
pusha
fidivr
jp
int
jns
pop
ret
inc
rcl
or
sahf
jp
pop
retf
fst
out
cmp
ins
scas
dec
sbb
jecxz
icebp
lock
xchg
mov
sahf
adc
or
cmp
daa
jmp
aaa
outs
mov
repz
out
xor
sbb
or
arpl
es
iret
xchg
inc
cmp
fldenv
pop
pop
ret
bound
mov
add
add
xchg
xchg
stos
mov
mov
hlt
mov
mov
loope
add
sbb
inc
cmp
lds
mov
pop
in
add
je
and
pop
mov
fimul
inc
pop
(bad)
cwde
out
push
mov
scas
neg
imul
call
and
in
out
rcl
adc
in
add
jb
mov
fwait
movs
adc
dec
loopne
lods
add
rcr
lea
call
stc
xchg
xor
sbb
scas
inc
xchg
addr16
xor
pop
mov
push
rol
ds
fs
pop
push
push
fdivr
mov
add
movs
lods
stos
icebp
test
movs
adc
hlt
sbb
sub
aas
nop
scas
sahf
jp
ss
cmps
jns
lock
add
mov
ins
cs
arpl
mov
(bad)
mov
div
sub
cmp
stc
push
or
repz
enter
ins
out
xor
cmp
loop
add
jp
jo
or
push
ret
and
ins
imul
(bad)
jge
fldln2
fidivr
mov
xchg
add
and
jg
dec
imul
add
js
mov
pop
mov
cmp
add
mov
lds
add
in
enter
mov
push
xor
cmp
mov
and
add
cmps
cdq
mov
bnd
gs
outs
sbb
and
les
nop
xchg
mov
dec
and
js
cmps
sub
div
sbb
icebp
in
pop
mov
int
fisub
jmp
ds
movs
jl
rcl
fild
mov
mov
add
iret
adc
xlat
pop
or
sbb
dec
dec
jmp
ds
xor
mov
push
retf
add
loop
mov
cmps
cwde
and
mov
out
cmp
push
pop
dec
add
add
outs
cmp
das
fisttp
dec
stos
loop
shr
and
out
mov
mov
jg
add
stos
rcr
arpl
stos
push
cmp
cmp
out
sbb
mov
add
repz
cli
pop
loope
push
cmp
mov
data16
dec
jecxz
dec
inc
dec
scas
mov
mov
pusha
std
loope
test
adc
jle
hlt
cmp
or
sub
dec
jne
stos
mov
in
jmp
inc
and
enter
(bad)
cmp
dec
dec
rol
pop
mov
fldenv
clc
in
ins
and
jge
hlt
mov
pop
jno
xor
imul
int
push
rcl
push
ret
sub
outs
sub
mov
sub
pop
(bad)
jecxz
gs
dec
jne
adc
test
dec
mov
(bad)
pop
and
sub
sub
sub
dec
or
cmps
fcmovnbe
dec
pushf
int
sti
call
test
and
add
mov
xor
and
stos
rcl
mov
and
push
adc
adc
out
enter
dec
rcl
sbb
test
call
add
fwait
pop
fwait
std
aas
xlat
mul
mov
pop
sbb
outs
push
add
jecxz
(bad)
ds
xchg
outs
popa
push
mov
jp
scas
pop
mov
and
xor
dec
repnz
or
rol
(bad)
sbb
mov
mov
aad
or
adc
push
xor
out
in
xchg
(bad)
lea
jecxz
cmp
adc
cmps
mov
scas
test
and
imul
sub
xor
int
add
imul
sbb
mov
mov
push
cmp
nop
and
cld
test
mov
cmps
(bad)
sub
jmp
jle
clc
mov
call
popf
mov
je
sub
call
mov
xchg
inc
mov
clc
ins
push
push
scas
cmp
stc
xlat
cmp
or
aad
ret
popf
adc
cwde
pop
add
pusha
sub
xchg
and
sbb
cmp
adc
aaa
ja
mov
mov
outs
cmp
arpl
test
add
aas
and
jmp
lahf
outs
lahf
push
lock
cmp
outs
xor
ds
dec
pop
cmp
mov
xchg
or
movs
jmp
cmps
pushf
add
loope
sub
dec
dec
dec
dec
nop
cmps
(bad)
push
push
mov
aad
inc
sub
pusha
push
jge
scas
xchg
mov
inc
mov
and
and
imul
xlat
cmp
sbb
(bad)
and
and
mov
int
movs
xchg
sub
sbb
xchg
add
inc
cs
pusha
sti
icebp
cmc
adc
test
push
push
sub
rcr
cmps
jbe
jle
xchg
mov
mov
scas
dec
push
gs
jle
daa
push
int3
imul
jno
jb
mov
icebp
daa
movs
pop
push
or
retf
mov
cmps
or
lods
jp
inc
and
retf
adc
jo
xor
inc
shl
cwde
js
or
shr
fisub
dec
in
mov
(bad)
(bad)
dec
mov
mov
mov
sahf
out
arpl
mov
mov
rcr
adc
shl
out
fstp
mov
inc
and
icebp
pop
sbb
rcr
cmp
rcl
scas
mov
int3
dec
mov
jmp
mov
mov
sbb
loopne
sub
shl
sbb
xchg
xchg
sub
mov
sbb
dec
or
cmp
test
sub
js
xchg
call
and
pop
xchg
inc
nop
pop
fmul
icebp
neg
fdivp
neg
in
in
xor
xor
pop
xchg
xor
btc
jbe
and
cmc
add
js
in
ret
in
ror
jb
jle
sub
pop
sbb
push
popf
jle
adc
push
aas
pop
mov
in
outs
add
repz
dec
test
mov
xchg
mov
test
jne
push
nop
or
cmps
jp
push
scas
test
daa
fcmovbe
jmp
and
cli
push
out
popa
retf
xchg
outs
leave
sub
mov
and
jno
inc
js
add
dec
adc
or
or
xor
loopne
cmc
xor
hlt
leave
data16
push
inc
cmp
mov
add
cmp
or
sbb
ss
div
test
movs
cmp
pop
outs
mov
cmps
mov
sub
or
out
pop
test
repz
pop
sbb
adc
rol
cs
adc
ret
xor
aas
out
call
pop
mov
push
pop
lds
stc
jns
cmc
add
out
test
stos
jmp
lahf
pop
mov
mov
shr
aad
and
add
out
inc
push
cmp
jno
mov
push
jecxz
(bad)
das
mov
cmp
imul
inc
sbb
adc
inc
or
pop
clc
sti
pop
adc
mov
in
push
pop
fnsave
scas
imul
mov
jbe
cdq
push
mov
cmp
je
cmp
mov
dec
mov
aad
ds
fmul
and
push
cmp
dec
dec
ins
sbb
fisttp
mov
lds
pop
mov
mov
int3
popa
fs
sub
push
dec
pop
mov
in
std
mov
inc
out
sbb
dec
pop
inc
pop
or
fwait
adc
daa
fimul
stos
(bad)
aam
and
adc
cmc
mov
jmp
movs
add
jl
jmp
and
inc
cli
imul
jmp
in
out
jmp
cmps
mov
pop
adc
and
lods
push
imul
dec
mov
test
mov
cmp
adc
cs
test
shl
lods
dec
mov
xor
popf
dec
mov
retf
cdq
out
fdivr
movs
add
add
push
xchg
repnz
mov
aad
int
and
pop
cdq
or
pop
jmp
out
lods
outs
arpl
jo
imul
jb
and
stc
cmp
pop
inc
shr
or
lahf
iret
mov
(bad)
loope
xchg
(bad)
leave
and
out
mov
lahf
and
stc
cmc
push
pop
movs
fucomp
ror
xor
jmp
jmp
iret
in
or
sub
in
xchg
adc
movs
inc
adc
shr
mov
(bad)
mov
dec
not
dec
push
add
xchg
ds
cmp
cmp
movs
dec
xchg
daa
imul
pop
cs
cmp
xchg
outs
inc
dec
mov
out
cmp
jle
dec
cmp
test
add
mov
inc
sbb
aad
movs
jp
test
and
outs
jnp
xlat
neg
and
xchg
adc
and
jne
push
jl
dec
xchg
in
pop
dec
loop
outs
jbe
mov
xor
or
ret
and
cdq
mov
mov
ret
add
les
xor
outs
mov
div
xchg
out
adc
push
mov
inc
and
mov
dec
cmps
loop
xor
push
or
pusha
std
test
pop
mov
jnp
movs
movs
add
cmps
popf
movs
inc
mov
data16
scas
out
jmp
fsubp
dec
xchg
imul
sbb
movs
scas
jnp
(bad)
sbb
mov
hlt
xor
mov
out
jg
push
mov
and
dec
pop
xchg
sti
pop
add
fild
mov
xor
inc
ins
lock
pop
dec
or
jno
push
inc
cmps
pop
mov
cld
cmp
lods
xlat
xlat
fiadd
inc
push
sub
bound
dec
pop
cmp
jge
and
and
push
sbb
mov
inc
mov
push
fwait
or
clc
test
and
mov
mov
mov
in
sbb
sub
jno
outs
mov
outs
fisubr
pusha
jo
jg
rcr
cmps
dec
cmps
mov
adc
dec
sbb
(bad)
jle
mov
mov
dec
leave
sbb
jmp
movs
pushf
and
mov
mov
inc
add
pop
or
jnp
mov
clc
mov
xor
dec
push
in
inc
push
iret
stos
int
inc
outs
or
jecxz
sub
cs
leave
mov
jne
pushf
push
and
pop
pop
cmp
jbe
xor
std
jge
adc
sub
pop
fwait
ret
pusha
into
cmp
jmp
(bad)
iret
cmp
add
fcomp
push
or
mov
ror
mov
dec
add
loopne
push
imul
fadd
(bad)
xor
jg
cmp
add
xchg
loope
push
sbb
dec
sbb
jae
or
pop
push
inc
lods
jmp
jmp
div
cwde
rcl
sbb
mov
sbb
cmc
jg
mov
imul
add
outs
fucomp
ins
xchg
in
popf
mov
(bad)
loopne
aam
sbb
data16
hlt
xchg
push
push
dec
pop
pop
sub
imul
pop
rol
dec
jne
sub
out
cwde
enter
test
push
stos
inc
pop
cmp
pop
outs
adc
call
lock
inc
adc
push
rol
loope
ja
inc
and
or
mov
ja
retf
mov
stc
test
xchg
cwde
sbb
adc
jae
jge
data16
mov
pop
lds
push
sahf
and
xor
stos
mov
xlat
data16
push
add
xor
push
and
mov
jmp
imul
push
loope
pop
dec
imul
popf
sbb
call
jl
sub
ja
in
fdiv
in
aam
mov
push
cmp
mov
mov
loopne
jge
int3
xchg
fiadd
nop
xor
add
push
ret
cmps
iret
movs
sti
pop
stc
mov
mov
stc
inc
jl
sub
fdivr
mov
xchg
adc
mov
xor
pop
fcom
imul
clc
xlat
and
xchg
add
xlat
retf
lea
imul
add
mov
dec
stos
call
not
loop
mov
mov
pop
lods
loope
clc
xchg
inc
out
mov
and
bound
jge
push
and
and
mov
xor
sbb
mov
xchg
dec
add
rol
and
xchg
and
cmps
xor
nop
imul
and
popa
out
pop
das
(bad)
out
cli
ret
out
sbb
cwde
ins
xor
ret
mov
aad
(bad)
mov
xchg
sahf
sub
xchg
scas
data16
fist
dec
fsubr
lods
dec
pop
cld
adc
or
pop
and
mov
inc
jo
push
je
stc
ss
adc
adc
add
lds
push
test
inc
sbb
sbb
jle
fsubr
aad
idiv
push
inc
xchg
mov
enter
push
inc
and
and
in
mov
and
mov
fimul
or
fisubr
mov
jle
out
xchg
jo
mov
loopne
push
mov
mov
add
sub
cmp
mov
test
fdivr
add
cli
pop
sti
imul
add
outs
xor
jl
pop
fcmovnbe
repnz
aam
pushf
jecxz
(bad)
stos
jecxz
sbb
movs
lods
xchg
sahf
or
and
inc
sbb
movs
mov
fmul
dec
jno
out
in
xor
out
ss
mov
pop
pusha
int
in
hlt
imul
dec
rol
mov
lods
jbe
pop
ficomp
sbb
in
icebp
dec
add
mov
lods
scas
(bad)
hlt
cli
sub
inc
or
pop
stc
fs
pop
lock
xor
rol
push
xlat
and
hlt
call
test
jmp
fs
inc
js
mov
aas
shl
hlt
push
(bad)
sti
ins
mov
enter
dec
stos
mov
sub
sub
jge
dec
xor
mov
idiv
mov
xor
push
add
imul
xchg
and
dec
in
push
data16
jnp
mov
mov
in
inc
sar
dec
jb
ds
repz
and
mov
arpl
cmp
xchg
push
mov
fcomp
test
leave
inc
pop
xor
nop
pop
lahf
aam
add
inc
adc
inc
fcomi
prefetch
or
aas
mov
iret
pushf
cmp
(bad)
gs
xor
mov
cld
mov
and
push
jmp
outs
jae
mul
in
xlat
cmc
sbb
jmp
cmp
xchg
mov
dec
jmp
pushf
imul
pop
mov
xchg
mov
jg
mov
fdivr
inc
cmp
mov
jne
fidiv
cmp
mov
pop
out
mov
ror
cmps
leave
stos
xchg
dec
stc
iret
shr
cmps
hlt
test
lahf
idiv
rcr
repnz
jae
adc
(bad)
mov
into
pop
test
jae
mov
pop
nop
add
adc
jl
sub
and
mov
jecxz
movs
mov
loop
pop
inc
cmps
ficomp
imul
call
bound
add
or
add
xchg
or
aas
(bad)
test
sbb
imul
xchg
and
clc
in
shl
or
imul
jmp
retf
pop
mov
dec
inc
xchg
inc
xchg
xor
icebp
inc
push
les
push
xchg
xor
loope
ja
mov
cmp
cmp
sbb
sar
sahf
mov
push
push
push
mov
jbe
aas
adc
push
(bad)
dec
popf
adc
xchg
addr16
je
mov
and
call
push
lds
icebp
jmp
jns
jnp
jnp
mov
in
inc
mov
ins
loope
ror
add
or
pop
icebp
hlt
idiv
mov
or
dec
add
pop
sub
jo
(bad)
ins
mov
pop
cli
ins
jl
lods
sub
dec
jl
push
push
and
mov
loop
push
push
dec
inc
nop
push
mov
call
mov
add
mov
sti
jae
inc
mov
mov
sahf
frstor
data16
sbb
(bad)
add
out
mov
rol
dec
adc
or
pop
adc
and
mul
mov
jmp
xlat
pop
fcmovbe
jbe
xchg
adc
inc
pop
test
jo
push
pop
test
(bad)
cmp
cmp
dec
jecxz
add
aas
cmps
push
(bad)
leave
ror
test
iret
movs
outs
mov
cmps
jns
test
cs
psubq
or
pop
xchg
push
push
jno
aas
outs
push
inc
aaa
jnp
imul
jne
clc
push
jecxz
repz
in
call
stc
and
retf
and
daa
xchg
or
movs
jne
pop
dec
push
or
dec
jle
in
dec
push
lds
jne
or
adc
ja
adc
sbb
test
or
jmp
out
stos
popa
fdivr
adc
mov
(bad)
push
dec
sbb
repnz
jno
mov
icebp
mov
cmp
adc
add
xor
jg
cmp
out
push
aam
shr
and
loope
xor
sbb
daa
sbb
xchg
stos
aaa
pop
sbb
ficomp
sbb
ror
sbb
jno
sbb
inc
and
push
pop
icebp
jle
out
fisttp
mov
out
mov
inc
jne
xor
push
adc
push
sub
adc
xor
jae
out
dec
mov
in
out
mov
lods
push
dec
(bad)
test
loop
cmp
movups
xlat
sub
cmps
jb
push
addr16
adc
adc
dec
mov
jno
enter
aad
aaa
and
dec
mov
fwait
out
inc
out
inc
mov
mov
xor
jmp
int3
pushf
lods
leave
(bad)
jbe
inc
outs
fdecstp
int
ror
inc
outs
cmp
add
jbe
movs
call
fs
movs
loop
lods
(bad)
out
pushf
or
sub
cmp
inc
sbb
or
rol
cld
or
iret
mov
shr
xchg
mov
stc
arpl
jmp
sti
int
retf
and
and
mov
dec
or
cmps
add
nop
push
mov
mov
repnz
in
mov
xlat
sbb
sub
inc
mov
loop
sti
bound
inc
imul
jmp
in
ins
fidiv
xchg
sbb
jecxz
cmovle
jb
fimul
ja
jmp
sub
mov
inc
cmp
xchg
movnti
shr
mov
xor
test
pop
inc
retf
pop
data16
inc
stos
xor
lahf
mov
jb
das
xor
cs
mov
jns
mov
push
sahf
inc
(bad)
mov
fistp
sub
loopne
add
jnp
stc
rol
lock
adc
xchg
les
inc
xchg
xchg
(bad)
mov
call
jmp
and
rcr
jp
mov
hlt
cmp
(bad)
mov
scas
loopne
test
repz
mov
mov
mov
push
pushf
push
shl
(bad)
mov
imul
push
in
mov
imul
dec
nop
retf
mov
cld
sti
pop
in
pushf
mov
stos
sbb
cmp
fisub
jns
cdq
mov
inc
mov
mov
ss
add
push
add
sub
lods
int
data16
xchg
xchg
push
mov
push
add
jno
inc
aas
inc
popa
in
dec
fcomi
shl
mov
punpckhwd
sti
je
lods
aam
push
jb
mov
(bad)
mov
jno
rol
nop
test
stos
test
cmp
pop
retf
and
popa
lods
jecxz
xchg
cmp
add
pop
movs
out
dec
sti
lahf
ins
in
scas
jnp
loop
sbb
or
jne
test
push
adc
inc
push
fisub
sbb
mov
pop
pop
ins
je
xor
sub
lods
cs
cmp
lea
push
jecxz
mov
cmp
xor
add
arpl
push
fidiv
sub
inc
mov
or
xchg
and
and
loope
scas
adc
dec
int
xor
and
scas
xchg
and
and
mov
pop
pop
outs
or
jmp
push
xchg
add
and
movs
push
cwde
movs
jle
mov
mov
cmp
jl
aam
jns
sar
outs
inc
pop
pop
lods
sbb
test
or
sbb
jno
push
jmp
push
sbb
pusha
push
rcr
fadd
sahf
fst
(bad)
pop
dec
xlat
aam
iret
ja
push
loop
pop
arpl
push
mov
popf
fsubr
js
imul
pop
mov
xchg
hlt
push
not
pop
and
pop
mov
cmps
xchg
imul
push
aam
(bad)
in
jecxz
lea
rol
adc
fdiv
neg
movs
inc
fwait
call
mov
and
jle
mov
xor
mov
cli
or
inc
or
sbb
mov
(bad)
xor
test
je
int
push
and
xor
jns
and
not
punpckldq
mov
daa
mov
sbb
xlat
pusha
cli
stos
or
xor
test
les
pop
jo
mov
(bad)
fidivr
push
or
push
dec
mov
cld
xchg
test
add
inc
jno
aas
jecxz
sub
mov
inc
xchg
jle
and
push
aas
in
daa
jge
xchg
out
in
push
dec
mov
ins
jns
xlat
stos
repz
pop
mov
shr
ins
ss
mov
(bad)
(bad)
dec
xor
xor
lods
and
mov
xor
sahf
push
scas
mov
jb
outs
or
and
xchg
test
aas
test
test
fdivr
dec
sub
test
sub
rcl
mov
jb
outs
jb
cmp
mov
retf
aas
mov
cwde
cmps
and
frstor
mov
out
pop
fisub
or
iret
rcl
inc
sti
sub
in
pop
push
movs
jno
cmp
test
cmp
std
mov
pop
jmp
scas
call
out
inc
(bad)
mov
aaa
(bad)
xchg
jecxz
test
icebp
mov
dec
rcl
jecxz
sub
je
and
xchg
aas
icebp
ja
sub
rol
jl
jle
cmp
mov
push
out
ins
loopne
in
mov
or
pop
idiv
int3
jbe
mov
lds
loop
jle
repz
(bad)
xchg
lods
imul
inc
pop
jbe
sbb
xchg
cmp
adc
inc
sub
stc
jne
lods
sub
or
sub
out
dec
dec
mov
(bad)
test
int3
movs
xor
retf
(bad)
add
add
mov
and
dec
popf
xor
jno
ds
scas
ja
dec
lods
xchg
cmps
fsubr
cmp
cmp
stos
fldz
lods
mov
in
ins
adc
inc
pop
inc
dec
pop
mov
fisubr
or
xor
mov
xor
xor
mov
cmp
cmp
cmp
adc
mov
cmp
jo
ret
xchg
mov
push
jns
pop
scas
add
mov
sub
push
inc
out
lahf
and
dec
and
xchg
(bad)
cmp
imul
bndldx
aam
popf
push
fadd
out
out
stos
mov
sbb
arpl
xor
lods
pop
lock
cli
jns
das
push
sub
test
or
sbb
js
fist
fwait
sbb
call
sahf
inc
ror
es
je
stc
movs
and
add
pop
arpl
xor
adc
xor
push
xchg
add
daa
lea
icebp
iret
push
ds
fidiv
icebp
xor
test
cmp
popf
cmp
int
shr
or
sar
or
movs
mov
pop
pop
lea
aaa
je
jl
xchg
movs
movups
adc
out
mov
pop
sahf
xor
ins
push
xchg
js
dec
test
gs
xor
adc
inc
test
adc
dec
shl
pop
inc
mov
pop
add
dec
sti
pop
push
adc
xlat
mov
lods
gs
mov
push
push
push
push
jns
pusha
mov
mov
inc
pop
pop
call
inc
fstp
ins
sbb
and
add
jecxz
(bad)
stos
je
mov
adc
test
aas
dec
cli
jne
mov
push
push
and
pop
jmp
icebp
mov
fdiv
mov
mov
push
xchg
pop
sub
repnz
lahf
clc
cmp
sub
push
inc
sbb
adc
jg
push
inc
or
jecxz
mov
xchg
push
or
lods
les
push
jg
mov
(bad)
mov
aad
int
ins
jg
dec
push
add
or
sbb
into
pushf
jno
xchg
xchg
mov
test
xor
jne
mov
push
shl
cmp
jge
mov
sahf
daa
pop
and
imul
hlt
loopne
ds
pop
ins
xor
mov
repz
push
in
jp
push
fsubr
ficom
cmp
sub
aas
lds
inc
fdivr
into
repnz
cmp
ror
mov
dec
cmp
mov
loop
mov
leave
hlt
adc
mov
call
mov
call
add
clc
ds
cmp
push
or
jmp
loope
(bad)
xchg
sub
scas
dec
scas
mov
outs
adc
adc
mov
add
rcr
scas
mov
mov
jp
out
pop
xor
jno
sbb
ror
pop
das
pop
call
cli
jns
call
stc
push
loopne
jge
mov
aad
retf
sbb
mov
sbb
push
cli
jae
sar
(bad)
fdivr
push
mov
cld
mov
fucomi
and
sbb
mov
call
pop
ficomp
dec
or
dec
or
inc
inc
adc
dec
jne
(bad)
outs
push
pop
fldenv
imul
jge
leave
fwait
push
call
mov
loopne
stc
sar
adc
loope
lods
jo
icebp
lods
push
jp
push
fstp
jp
arpl
aad
or
cmp
movs
movs
imul
jmp
mov
push
fucomp
add
movs
push
cli
jns
stc
cld
cli
inc
mov
adc
pop
popf
pop
jnp
push
mov
push
mov
add
aaa
pop
inc
push
sti
sub
mov
mov
add
js
and
fld
cmps
or
(bad)
cmp
dec
adc
push
xchg
aaa
xor
mov
and
stos
loopne
fisttp
push
pop
or
sbb
xchg
xchg
int3
fs
cli
xor
push
inc
inc
test
add
xchg
out
shl
sbb
xchg
loop
lea
movs
push
mov
cmps
mov
inc
sub
arpl
xchg
arpl
fdiv
ins
mov
loope
imul
enter
lods
push
addr16
jb
xor
fs
(bad)
seto
jp
lahf
sbb
xor
cmp
repnz
mov
ss
dec
mov
inc
and
push
jb
or
mov
xlat
repz
add
xor
test
arpl
movs
xlat
cmp
stc
cmovle
add
cmps
lds
repz
hlt
ja
je
nop
sub
push
inc
dec
lods
adc
repnz
rcr
ds
loope
in
dec
mov
nop
ds
push
arpl
sub
xor
push
mov
sbb
or
cmps
jp
pop
ret
pop
sub
scas
jmp
mov
xchg
jno
inc
stos
imul
in
retf
sbb
add
xchg
into
mov
test
in
leave
leave
cld
sub
mov
push
adc
dec
inc
xlat
shl
(bad)
jmp
jle
stos
jbe
aam
dec
sbb
js
repz
pop
shl
and
fisub
movs
dec
pop
cmp
pushf
adc
push
outs
push
sub
pop
push
or
xchg
loopne
or
into
dec
scas
imul
call
lock
adc
fcmovnbe
xor
mov
js
dec
push
cdq
inc
bound
imul
fsub
mov
(bad)
loope
and
stos
rcl
sbb
xchg
jp
outs
lock
sbb
jo
add
aam
xchg
jno
and
sti
fs
dec
fs
bound
pusha
push
or
scas
sar
and
test
pop
push
(bad)
xor
dec
mov
add
and
and
jecxz
inc
xlat
inc
cmp
xor
inc
pop
inc
push
xor
iret
inc
adc
lds
sub
test
sub
fcomp
lea
xchg
aas
mov
jns
sub
pusha
pushf
dec
adc
dec
movs
adc
mov
shl
xlat
ficom
push
mov
dec
icebp
inc
xchg
dec
push
push
mov
cli
js
sub
xchg
cli
xchg
in
arpl
outs
sbb
lods
sub
aam
out
push
sbb
xchg
imul
or
dec
repz
fcomp
or
dec
out
inc
adc
inc
dec
pop
out
sbb
ret
add
inc
mov
dec
je
outs
jge
jnp
repnz
std
inc
inc
or
adc
outs
adc
push
test
cmps
inc
ss
popa
xchg
sub
xchg
sub
cmp
into
pushf
aas
xchg
push
in
mov
je
pop
xor
xor
shr
push
sub
jge
in
jg
imul
and
add
test
adc
push
add
push
retf
jno
mov
adc
add
mov
loopne
pop
mov
adc
bound
pop
dec
rcr
popa
std
xchg
pop
dec
cmp
mov
mov
jl
inc
ss
je
jl
aas
iret
shr
dec
bound
jmp
jno
mov
cmc
out
lods
pushf
mov
cwde
in
sbb
int3
stos
mov
ds
dec
repnz
loope
jmp
pop
cmp
(bad)
mul
(bad)
je
inc
push
xlat
dec
or
mov
jmp
idiv
stos
mov
cld
repz
jecxz
cmp
lods
mov
inc
sub
leave
xor
popf
sub
add
ffreep
xchg
xchg
push
jge
and
rol
mov
fsubr
fisttp
scas
inc
mov
fist
xor
add
(bad)
loopne
idiv
sub
push
mov
pop
xchg
scas
dec
movs
sub
nop
cmps
push
pop
jns
mov
sub
pop
xchg
call
xor
cmp
out
fs
xchg
icebp
mov
jo
rcr
lahf
jno
mov
dec
shl
enter
sub
push
mov
repnz
ret
dec
imul
psubusw
sub
push
xor
repz
sub
mov
ins
jle
pop
xchg
and
dec
or
stos
fsubrp
xor
ss
in
sti
or
fwait
xor
cmp
iret
and
popf
pop
sub
pop
inc
jmp
hlt
or
or
cmp
dec
adc
mov
inc
dec
and
popa
gs
(bad)
or
fucomip
and
in
lods
ins
and
cmps
dec
or
jno
pop
add
cmp
mov
jne
lods
test
adc
dec
dec
jmp
mov
fisub
sub
and
or
xor
or
inc
lods
sbb
xchg
inc
dec
int3
fs
pop
cmps
dec
cli
fsubp
data16
mov
xchg
push
sbb
imul
pop
hlt
dec
mov
icebp
aaa
mov
add
dec
jno
and
cli
(bad)
pop
minps
popa
mov
xor
inc
mov
inc
imul
fdivr
pop
pop
fwait
outs
(bad)
push
(bad)
xchg
loope
push
in
std
inc
mov
push
test
pop
jmp
shl
loopne
sbb
gs
inc
adc
dec
shl
xchg
jge
or
enter
aas
scas
mov
pop
ss
sub
dec
jle
sub
adc
jo
je
mov
hlt
xchg
xlat
mov
imul
clc
jmp
jo
and
sub
das
jmp
xchg
pop
arpl
pop
test
adc
sahf
inc
mov
sti
jns
loop
xchg
and
or
cmps
in
xor
inc
ja
mov
xchg
xchg
jp
clc
adc
push
les
dec
and
add
out
in
pop
mov
push
in
pop
outs
popa
xchg
ret
sub
fisttp
mov
xchg
sbb
adc
sahf
xchg
sub
test
adc
xor
and
xchg
aas
movs
add
aad
sub
sbb
dec
xchg
pop
repnz
inc
push
in
adc
test
lea
mov
adc
mov
stos
sbb
push
shl
rol
and
fdivrp
add
repz
jae
push
test
pushf
leave
inc
xor
cmps
popf
xor
iret
sbb
mov
lea
scas
popf
jl
pop
sub
test
adc
cmp
shl
and
cld
jle
xlat
push
ret
ja
mov
lahf
loop
sub
pop
adc
inc
das
inc
fsub
cmp
mov
mov
jle
and
sbb
inc
xchg
arpl
mov
sbb
inc
and
stc
mul
gs
push
gs
jo
add
jno
xchg
rcl
push
loope
data16
and
mov
stc
sbb
in
lock
push
xor
push
xchg
std
ret
pop
sti
pop
(bad)
add
(bad)
mov
lods
cld
push
lods
dec
adc
sbb
push
add
pusha
mov
test
cmp
xchg
movs
fs
and
das
dec
iret
scas
adc
push
into
xchg
dec
out
sub
inc
test
ins
push
push
add
add
inc
icebp
push
not
and
xchg
lahf
dec
loopne
pop
cld
mov
int3
scas
jo
test
jp
sbb
fs
cmp
pushw
sbb
hlt
aad
xor
pop
xchg
sar
div
xor
push
xchg
(bad)
mov
repnz
aaa
push
sbb
(bad)
rcr
cmc
jg
shl
add
ror
cs
cli
lods
bound
std
imul
mov
out
xchg
adc
jg
jmp
imul
add
jge
cmps
cwde
push
loope
scas
test
test
mov
pop
pop
xlat
sub
sub
fsubr
inc
add
pop
pop
(bad)
stc
pop
retf
in
pop
xchg
sbb
or
js
jnp
rcr
xchg
repz
cdq
jmp
xchg
mov
dec
mov
mul
aas
inc
js
mov
rcr
mov
aas
push
sbb
stc
jno
ds
and
sbb
shl
loope
(bad)
dec
cmp
shr
or
gs
imul
mov
and
sub
push
sbb
pusha
or
(bad)
(bad)
fwait
xchg
out
cmp
shr
sub
dec
cmp
adc
loop
push
pop
mov
shl
fcom
bound
bswap
xlat
mov
ds
adc
lds
fldenv
nop
inc
sbb
dec
and
cwde
and
mov
out
dec
pop
jmp
dec
or
cld
cli
nop
addr16
jns
(bad)
std
xchg
mov
dec
adc
pop
cmp
adc
pop
jne
jmp
scas
retf
push
cmp
lods
push
retf
xor
xchg
popf
and
or
ins
jle
xchg
leave
outs
inc
outs
or
test
jae
lahf
xor
dec
lock
dec
xlat
iret
ds
das
cmc
jle
cmps
pop
and
int3
and
cdq
and
xor
sub
pop
dec
adc
mov
scas
jnp
and
rol
and
lahf
ins
sub
sar
iret
movs
xchg
cmps
push
pop
in
inc
inc
out
test
imul
pop
in
rol
sub
inc
mov
xlat
fnstcw
add
and
icebp
scas
retf
mov
ret
adc
imul
xor
loope
stc
and
call
imul
adc
cli
jge
mov
jg
sbb
imul
push
add
jp
shl
sub
adc
push
pop
inc
sbb
pushf
stc
aam
stc
cmc
call
push
add
mov
ret
ja
and
add
sub
lock
sbb
lock
outs
in
mov
rol
push
adc
lock
dec
pop
fidivr
into
test
js
inc
lahf
out
jg
nop
fwait
stos
scas
sahf
dec
call
xor
or
not
les
hlt
jecxz
sbb
xchg
ja
ret
jns
xchg
repz
idiv
shr
xor
or
mov
jne
inc
mov
je
iret
scas
fwait
dec
retf
add
retf
ror
jno
(bad)
mov
sbb
int3
adc
adc
ret
repnz
je
lds
dec
pop
push
and
cmp
inc
lahf
movs
xchg
popa
out
(bad)
pop
dec
mov
inc
cmc
xor
xor
loopne
adc
inc
stos
es
pop
push
cmc
idiv
dec
aaa
imul
out
cmp
adc
add
or
xchg
cmc
xor
dec
cmp
test
push
xor
xchg
leave
cmc
scas
test
movs
pop
jl
adc
push
aas
in
clc
sub
add
push
or
(bad)
cli
(bad)
fwait
popf
fdiv
(bad)
test
iret
or
iret
adc
xchg
cmc
cmp
(bad)
outs
adc
or
clc
jmp
popa
dec
test
into
test
mov
pop
adc
clc
jno
xchg
fidivr
(bad)
inc
dec
cmp
sub
xchg
xor
hlt
or
out
loopne
cmp
mov
inc
jle
xor
cmps
inc
imul
jo
jmp
inc
or
fild
outs
loop
add
daa
imul
enter
jp
cli
pop
imul
inc
test
loopne
add
jae
jne
ins
mov
mov
scas
stos
or
ss
call
repnz
mov
mov
es
add
add
sub
std
ins
or
movs
mov
push
pop
shl
mov
push
xchg
aam
repnz
loopne
mov
imul
adc
icebp
mov
movs
inc
rcr
repnz
push
xchg
into
mov
cmp
mov
js
add
les
rcr
xor
pop
call
loop
cmp
clc
neg
fistp
fld
push
mov
inc
cmp
shr
fsubr
mov
pop
adc
in
adc
call
das
fmul
lea
sub
and
cdq
mov
nop
xchg
jecxz
add
push
jmp
jbe
lods
push
sar
retf
adc
stc
jecxz
xlat
cld
mov
mov
sbb
imul
les
and
sub
out
imul
cdq
ret
shl
(bad)
jecxz
aad
aaa
add
cs
mov
clc
inc
push
push
cld
pop
jl
or
ds
je
imul
inc
or
call
xchg
mov
or
mov
mov
or
push
repz
adc
or
sbb
add
and
mov
cmp
test
add
(bad)
test
mov
call
mov
not
sbb
sbb
or
xchg
je
in
in
lds
jmp
cmp
dec
xchg
and
xchg
(bad)
xchg
inc
ds
out
sbb
add
mov
sbb
stc
inc
sub
mov
xchg
jl
nop
stos
push
push
pop
mov
cmps
xlat
mov
mov
adc
fidivr
push
fld
cs
xlat
xchg
sbb
jb
sbb
pop
sub
gs
dec
movs
mov
(bad)
sbb
scas
stos
xor
push
das
jnp
fwait
icebp
in
data16
leave
(bad)
mov
in
inc
and
push
in
test
ret
sbb
inc
int3
rcl
pop
xchg
add
push
inc
push
mov
dec
cmp
xlat
clc
or
push
mov
aad
repnz
sbb
xchg
aam
push
bound
ins
mov
mov
xchg
dec
movs
inc
push
movs
test
repnz
iret
cmps
aaa
fist
jne
or
xor
popw
jno
leave
and
push
push
push
push
pop
sub
pop
mov
in
sbb
dec
xchg
xchg
push
mov
mov
std
xor
jo
dec
xchg
retf
not
mov
fstp
repnz
jno
cld
mov
mov
xchg
sti
cdq
and
adc
in
lods
pop
inc
xor
add
xor
(bad)
pop
fcmovnu
movs
int
cmp
or
add
jl
inc
loope
adc
jb
cdq
sub
push
xor
dec
das
mov
mov
xor
mov
jbe
les
pop
add
mov
sub
fdiv
cmp
sbb
mov
jno
cmps
fst
scas
and
push
inc
ret
lock
iret
(bad)
fst
mov
sub
pop
sahf
jp
mov
mov
mov
sbb
out
out
inc
cs
mov
fcmovnu
cmp
sub
or
push
jmp
mov
add
inc
ja
inc
xchg
push
mov
aas
mov
xchg
inc
mov
mov
ret
pop
rol
push
mov
sbb
iret
fiadd
adc
pop
cmps
in
dec
cmps
lahf
pop
pop
imul
push
fs
mov
xchg
(bad)
push
push
sub
push
mov
inc
jmp
push
mov
pop
shl
ror
enter
scas
or
pop
idiv
sbb
aam
and
cmp
push
popf
dec
fmul
push
dec
aam
adc
inc
add
mov
hlt
mov
pop
mov
arpl
xlat
fld
lahf
inc
aad
(bad)
xchg
mov
sbb
dec
and
rcl
icebp
sti
pop
inc
cmovb
push
pop
mov
mov
inc
les
push
and
mov
lock
push
iret
push
add
or
sub
fimul
xchg
out
fistp
into
fcom
jb
push
movs
or
jl
inc
pfrcpit2
ds
xchg
(bad)
pop
outs
add
add
test
xor
inc
cmps
mov
repz
jecxz
push
int
mov
push
rol
adc
cmp
xor
retf
arpl
push
dec
mov
mov
aaa
xor
pop
int3
sti
gs
sbb
sub
add
xchg
cmps
adc
or
ins
sar
xchg
jo
out
jbe
mov
xchg
xchg
arpl
jb
inc
adc
(bad)
loop
jo
cli
xor
sbb
std
out
pop
aaa
or
pop
dec
and
ins
add
in
dec
call
fcomp
mov
sbb
iret
mov
movs
pop
push
fstp
jo
dec
into
adc
ret
enter
xchg
stc
test
xchg
lds
push
mov
jmp
rcl
inc
sbb
fst
jnp
stos
push
aas
sti
imul
mov
ret
sbb
sub
and
ins
xchg
mov
add
push
push
push
shr
pop
xchg
icebp
leave
data16
adc
test
jecxz
outs
sub
retf
sub
xchg
mov
loop
add
add
test
icebp
add
jmp
lahf
mov
mov
rcl
aad
mov
sbb
push
adc
adc
or
cmp
lds
mov
in
or
jmp
jmp
push
and
lds
loop
sub
in
shl
push
push
cmp
push
rcl
mov
cwde
dec
push
repnz
repnz
xor
mov
jge
out
jae
ret
xor
sub
movs
push
pushf
xor
sahf
xor
mov
inc
push
cmp
inc
inc
in
mov
sbb
sbb
inc
or
mov
ror
cmps
scas
(bad)
dec
aam
jo
cmp
test
inc
data16
jge
mov
pop
and
or
ja
stc
pop
aas
lahf
inc
sub
aad
cmp
add
jl
call
inc
into
ffree
test
ds
nop
lds
push
and
dec
pop
push
out
xchg
dec
or
mov
(bad)
(bad)
xor
dec
imul
mov
adc
mov
test
loop
add
loopne
gs
outs
jecxz
jns
retf
sbb
sbb
enter
in
mov
int
xor
mov
add
test
push
rcr
jno
sub
mov
in
pop
(bad)
(bad)
rcr
or
push
push
lahf
test
cmp
shl
jge
test
test
xchg
adc
push
aaa
push
dec
jp
push
inc
enter
(bad)
cmp
loop
jp
nop
push
dec
push
repnz
test
mov
inc
test
or
int
pop
add
mov
jmp
ret
lea
xchg
dec
aam
jp
xchg
inc
mov
(bad)
retf
ins
adc
dec
dec
ss
cmps
adc
iret
stc
sub
call
pop
inc
clc
fcomp
xor
sub
sub
and
adc
mov
or
bound
xchg
imul
or
cmp
pop
lahf
cs
push
adc
jmp
mov
(bad)
mov
dec
push
stos
cmps
mov
(bad)
retf
xchg
inc
stc
mov
bnd
daa
fdiv
dec
sbb
sub
jmp
xchg
rcr
call
jle
sbb
call
enter
mov
push
jbe
xchg
add
out
push
fld
clc
(bad)
js
mov
adc
aam
xor
or
push
add
add
lds
pop
arpl
jno
inc
repnz
repz
add
aaa
jo
daa
mov
dec
lds
xlat
cli
adc
ins
inc
test
adc
xlat
xchg
scas
and
sbb
inc
iret
aam
arpl
sbb
and
inc
push
leave
mov
xor
lods
imul
mov
ins
cli
xlat
std
pop
cs
xor
push
push
sub
ror
xchg
aaa
and
jns
cli
push
add
(bad)
out
cmp
push
dec
aas
jmp
jge
cmc
outs
lods
and
inc
iret
adc
add
je
in
dec
movs
pop
pop
jb
jo
and
sbb
test
sub
push
xor
xor
ret
jmp
ss
fldcw
cmp
ret
inc
jl
into
mov
fidivr
addr16
in
sar
int
pop
repnz
sub
sub
aam
cld
cli
fldenv
scas
adc
xchg
or
cmps
test
popf
inc
push
dec
in
lea
or
jge
fwait
jnp
retf
sti
jnp
aaa
or
loop
mov
pushf
aam
sahf
pusha
in
and
cmps
(bad)
js
outs
cdq
fwait
dec
lds
test
jle
inc
and
dec
call
ret
mov
sub
test
scas
cmps
adc
mov
mov
sub
adc
daa
lods
ret
lods
pop
dec
sbb
xor
mov
out
or
cld
mov
ret
nop
add
push
(bad)
mov
xchg
pop
ret
imul
adc
les
push
jmp
jae
mov
adc
xchg
add
icebp
into
movs
push
dec
add
xor
add
inc
xchg
jo
xor
push
xchg
and
pop
and
repnz
cli
mov
mov
mov
cmp
mov
add
lds
inc
lahf
pop
mov
loope
sbb
ins
fidiv
sub
adc
xchg
out
retf
mov
test
(bad)
or
push
add
icebp
das
cwde
cmps
mov
or
cmp
inc
jg
gs
sbb
ret
fwait
retf
add
movs
jb
push
jp
jl
clc
inc
mov
fwait
ja
mov
ds
ins
ins
dec
arpl
out
and
dec
into
and
mov
fs
inc
shl
push
pusha
fwait
xchg
cmp
out
mov
ins
or
jle
stos
xor
inc
sub
adc
js
ja
retf
sbb
mov
jno
adc
push
pop
test
lods
sbb
pop
test
mov
outs
stos
sub
push
shl
mov
mov
or
test
mov
push
out
pop
ins
int3
and
cld
mov
test
repnz
addps
int
dec
retf
xchg
xor
mov
mov
sbb
ins
sbb
mov
mov
(bad)
call
or
dec
cli
cdq
mov
bound
outs
scas
out
lds
mov
shl
sbb
int3
xchg
push
jae
icebp
fstp
mov
and
cmp
dec
push
mov
push
xor
add
ret
stos
movs
fwait
mov
or
inc
popa
in
cmp
inc
xchg
(bad)
push
pop
mov
jno
outs
loop
mov
lahf
cwde
adc
stc
bound
out
sub
xchg
(bad)
rcr
mov
cmps
pop
dec
outs
add
mov
jno
dec
mov
jae
loopne
adc
int3
fsub
(bad)
mov
cmps
add
mov
jb
push
fcomip
xchg
sahf
frstor
xor
mov
or
js
push
rep
shl
xchg
push
lods
mov
clc
jno
and
xor
jmp
(bad)
repnz
dec
mov
movs
std
ins
iret
add
cmp
jnp
push
jae
rol
cmc
push
lock
mov
dec
movs
dec
add
dec
scas
cmp
repz
sub
repnz
aam
push
shl
enter
vmwrite
fs
stos
lds
sub
sub
xchg
and
xor
mov
pop
push
int3
push
inc
pusha
fcom
xchg
xchg
pop
fnstcw
fdiv
push
mov
imul
test
fisub
retf
out
loop
test
dec
push
(bad)
pushf
cmp
dec
jp
enter
loope
call
(bad)
sbb
dec
pop
sub
cmp
sbb
fwait
xor
repz
cmp
jb
sbb
sub
add
leave
int
push
add
xchg
out
xchg
sub
scas
sbb
test
es
hlt
pop
rcr
lock
test
movs
xor
test
in
sbb
xchg
cmp
add
in
dec
ss
and
ss
cs
adc
cmp
add
out
mov
lahf
mov
sub
lds
xor
icebp
aas
mov
call
mov
push
call
xchg
xchg
mov
adc
dec
adc
dec
adc
mov
push
aaa
sbb
imul
add
cwde
mov
pusha
jns
inc
add
cmps
scas
scas
inc
cmp
ins
mov
call
or
adc
shl
sub
mov
or
fcom
mov
neg
or
add
popf
mov
push
push
lods
push
mov
enter
adc
and
lods
inc
test
jns
in
btr
jb
cmp
loop
adc
add
add
hlt
or
scas
fstp
jge
outs
fdivr
pop
lds
sbb
test
add
popa
xchg
pushf
push
push
add
push
jmp
cli
adc
push
div
fbstp
stos
int3
dec
cmp
or
sub
stos
inc
pop
sub
repnz
mov
mov
add
call
not
mov
or
adc
retf
dec
cli
call
mov
loop
test
(bad)
push
xor
int3
add
jno
btc
xor
add
ds
fld
add
inc
movs
xlat
rcr
addr16
hlt
hlt
dec
lea
and
xor
jl
cli
mov
sti
(bad)
jge
xchg
ror
pop
adc
dec
or
xor
stos
push
push
cmp
dec
std
mov
in
jmp
sbb
enter
or
xchg
xchg
push
lea
test
jmp
movs
test
in
mov
aas
retf
mov
sub
addr16
pop
aas
xchg
cmps
aas
outs
inc
jl
scas
dec
mov
iret
inc
xchg
dec
cld
push
call
add
dec
pop
ins
or
inc
mov
jnp
in
enter
xchg
sub
imul
sti
inc
bswap
mov
pop
add
sbb
daa
retf
xchg
inc
stc
cmc
and
pop
in
lods
dec
sbb
pop
js
test
scas
jae
inc
pusha
bound
pop
popf
je
dec
scas
jge
xchg
jecxz
aaa
xchg
aaa
mov
outs
adc
pusha
push
jle
js
mov
xor
je
icebp
or
mov
int
mov
mov
dec
mov
lds
pop
dec
nop
inc
shl
sti
enter
stc
mov
addr16
inc
ficomp
pop
fstp
or
adc
jp
mov
(bad)
retf
or
es
add
pushf
lock
sub
lods
jle
inc
adc
sti
push
adc
ja
cmp
dec
sbb
cmps
test
jecxz
push
shr
aad
mov
std
cmp
imul
xchg
jno
call
loope
mov
adc
out
shr
iret
test
mov
sub
sub
jne
outs
(bad)
pusha
ss
cmp
dec
mov
xor
rcl
sbb
lea
movs
mov
aas
adc
adc
sbb
mov
mov
xor
dec
mov
jns
adc
popf
mov
aam
call
shr
movs
mov
movs
cs
fstp
mov
pop
loope
pop
push
add
and
inc
sahf
inc
dec
stc
add
(bad)
ins
and
xchg
icebp
in
adc
test
jmp
inc
mov
add
imul
sbb
xor
mov
(bad)
adc
xchg
cmp
movs
enter
ins
add
cli
sti
adc
das
xor
sub
or
mov
push
push
mov
dec
(bad)
mov
fsubr
adc
and
dec
lods
inc
sbb
push
daa
sbb
outs
push
xchg
jl
and
add
add
push
push
(bad)
(bad)
mov
je
rcl
enter
popa
jg
push
sti
dec
lahf
push
mov
fmul
cmp
pushf
loopne
mov
(bad)
scas
outs
xchg
xchg
push
mov
mov
mov
or
mov
xchg
stos
pop
mov
fdiv
loop
inc
add
add
ret
lods
pop
test
fcmovbe
mul
push
and
pop
mov
push
mov
jnp
scas
shl
jmp
mov
test
jo
fsubrp
cwde
and
mov
cwde
test
cmps
or
rcl
in
push
push
jno
(bad)
(bad)
(bad)
scas
xchg
mov
add
pop
sub
push
add
stc
add
aam
cmp
pop
and
aaa
push
fnstcw
cmp
aas
bound
test
iret
rcl
and
inc
scas
adc
ja
mov
jmp
out
lds
stos
pop
mov
push
aam
xchg
add
sub
adc
dec
sbb
leave
sbb
std
outs
sub
movs
out
(bad)
sub
cmps
sub
aam
mov
imul
cmps
inc
cmp
pop
ret
movs
sub
add
fs
sub
sub
cmps
or
xchg
shl
loop
push
dec
cmp
in
mov
sub
mov
xchg
mov
cmps
sbb
mov
call
outs
xor
sub
sbb
fdivr
test
shr
mov
loope
lahf
cdq
cmps
dec
ja
xor
aam
lea
or
dec
mov
in
mov
fcom
add
fs
es
pop
dec
sub
cmps
dec
push
xbegin
in
sub
pop
push
and
add
sbb
dec
imul
popa
addr16
in
out
and
mov
das
das
repnz
scas
push
movs
shr
imul
mov
fs
or
and
out
and
das
adc
stos
stos
xchg
xor
sahf
pop
xor
ror
(bad)
repz
sbb
fidivr
jno
pop
pop
(bad)
stos
aaa
xchg
retf
pop
inc
adc
add
ins
and
lds
gs
add
js
xchg
sti
imul
xchg
sub
jo
fnop
iret
inc
push
cs
(bad)
jns
dec
push
mov
test
sbb
mov
ss
fcomp
sub
inc
mov
test
sbb
sub
push
mov
hlt
pop
jmp
or
adc
dec
mov
dec
push
loope
and
cdq
and
mov
ss
jg
mul
xchg
dec
lea
mov
std
mov
add
push
nop
inc
xchg
scas
mov
mov
xor
inc
outs
mov
and
jmp
push
iret
fldl2t
(bad)
fcmovnbe
hlt
adc
mov
or
inc
into
pushf
jle
stc
je
adc
add
dec
xor
fcmovb
sbb
jmp
jnp
mul
jmp
mov
add
icebp
cmp
and
cwde
iret
fnop
jae
inc
dec
push
push
dec
push
aaa
mov
test
and
xchg
pop
fwait
add
jns
cs
scas
adc
call
rep
stc
jp
mov
xor
sub
hlt
out
sub
pop
jmp
push
je
adc
dec
adc
sbb
inc
mov
hlt
cli
mov
jne
lahf
mul
call
cdq
jo
xchg
jmp
pop
push
mov
and
arpl
mov
xchg
aam
sbb
jmp
pop
inc
and
idiv
shl
pop
lds
push
jmp
and
or
dec
pop
pop
mov
mov
hlt
lods
pop
xchg
repnz
repz
jno
or
mov
pop
in
int3
mov
cdq
adc
mov
jae
mov
aad
inc
cmp
mov
stc
ror
xchg
iret
mov
mov
jle
out
inc
rol
fwait
push
cmc
(bad)
loopne
sbb
sub
pop
data16
and
shr
pop
mov
mov
sbb
inc
cmp
je
(bad)
jnp
xchg
pop
xchg
imul
jb
xor
or
and
adc
ins
icebp
int
pop
xor
test
xchg
repz
inc
pop
fsubr
push
in
pop
test
add
push
pop
adc
pop
adc
movs
ds
adc
dec
jmp
mov
icebp
xor
push
ins
mov
fimul
(bad)
sub
loop
push
mov
cmp
sub
ret
cmps
inc
nop
mov
arpl
lds
movs
stc
icebp
adc
loope
fistp
xchg
movs
xchg
test
cmp
inc
mov
push
push
icebp
jmp
rcr
ret
test
push
lock
push
mov
repnz
mov
(bad)
scas
cmp
rcl
in
in
test
or
pop
jb
mov
int3
inc
xchg
retf
inc
or
xor
dec
std
ins
ret
aam
outs
dec
mov
mov
into
call
mov
cmp
movntq
out
inc
jle
push
dec
jge
sbb
(bad)
pushf
cmp
in
mov
xchg
sahf
mov
and
pop
push
jno
jne
popf
sub
dec
retf
std
pop
pop
rcr
imul
jbe
out
dec
inc
adc
push
hlt
add
out
daa
(bad)
dec
pop
jecxz
js
xchg
xchg
movs
xchg
push
xor
sub
pop
xchg
add
inc
or
call
arpl
jae
or
xor
xor
stc
out
jp
hlt
or
es
xchg
ror
mov
add
push
push
inc
xchg
adc
int3
or
xor
cli
cld
std
jge
sbb
xchg
sub
mov
les
lahf
push
mov
hlt
std
int
or
adc
jae
xlat
or
inc
xchg
js
leave
dec
sub
lods
sahf
cmp
pop
(bad)
inc
outs
pop
mov
sbb
or
jmp
hlt
sbb
stos
addr16
jmp
in
sar
das
movs
push
fild
pop
fiadd
mov
push
out
in
jb
fsub
xlat
push
call
test
pop
inc
jnp
stos
push
mov
loope
add
pop
das
dec
mov
enter
inc
or
daa
mov
xchg
rcl
mov
pushf
dec
rcl
pusha
dec
stos
mov
adc
sbb
arpl
mov
sub
jno
(bad)
dec
retf
inc
adc
mov
mov
test
aaa
gs
stos
push
retf
cwde
push
cdq
into
xor
sub
cmc
enter
lods
es
xor
sub
mov
pop
sti
sbb
mov
aad
out
or
mov
cmp
popa
xchg
ins
pop
shr
or
or
xor
sti
sub
adc
pop
movs
scas
xchg
daa
xchg
das
adc
mov
iret
xor
xor
inc
ds
push
fsub
mov
shl
wbinvd
dec
add
and
sbb
dec
xor
jb
imul
or
imul
lods
sub
aad
outs
jmp
sub
add
repnz
cmp
push
aam
cmps
xor
jmp
mov
add
xor
dec
(bad)
sub
aas
xor
aam
(bad)
leave
and
aam
in
repnz
lahf
inc
fistp
or
pop
push
and
ret
jmp
and
mov
icebp
out
inc
fnsetpm(287
ja
inc
nop
sbb
cld
mov
add
cmp
scas
in
cmp
or
and
sbb
add
(bad)
not
loop
sti
cmp
enter
push
sbb
mov
inc
pop
xchg
jp
push
dec
(bad)
xor
cmp
jae
dec
loopne
mov
inc
jl
and
lods
popf
mov
out
rol
cmc
lock
int
das
jmp
push
loope
std
ins
in
jne
clc
push
shl
add
bound
mov
xchg
in
jmp
out
scas
(bad)
fistp
(bad)
das
fist
sbb
shl
xchg
mov
xor
mov
sahf
inc
mov
inc
mov
(bad)
rcr
ins
out
ja
add
(bad)
ficomp
rcl
xchg
and
inc
ds
xor
(bad)
cmps
fs
aas
(bad)
aad
jmp
(bad)
shl
jecxz
cmps
test
sahf
or
push
cmp
adc
test
call
(bad)
or
shl
sahf
jge
movs
test
pop
or
cmp
movs
jo
push
out
fmul
addr16
xor
aas
shl
or
add
push
aaa
adc
push
xchg
push
xchg
ror
inc
inc
dec
add
aaa
rol
ja
push
dec
mov
nop
mov
leave
pushf
jmp
es
cwde
test
seto
inc
xor
sub
pop
aas
and
repz
or
test
push
sbb
mov
sub
jb
fcom
jnp
jb
lock
mov
jo
xor
aaa
int3
jg
lods
cdq
pop
jbe
mov
js
adc
ror
arpl
stc
sub
and
pop
in
jmp
mov
mov
shl
imul
jnp
mov
xchg
push
inc
mov
mov
cmp
out
sbb
lock
mov
jg
cld
mov
(bad)
aad
push
xor
sbb
pop
push
arpl
mov
sub
inc
mov
add
pop
sar
pushf
ss
push
icebp
inc
(bad)
adc
cmp
mov
cmp
movs
test
push
int3
sub
xchg
sar
mov
call
inc
leave
cmp
rol
or
jle
(bad)
mov
aaa
cwde
jle
outs
adc
test
mov
sbb
pop
add
add
out
(bad)
into
mov
imul
inc
movs
sti
test
fwait
dec
fadd
shr
ins
lods
sbb
mov
jmp
ficomp
add
pop
adc
jge
jmp
jmp
rcl
mov
dec
push
mov
mov
sbb
push
mov
retf
push
ss
and
inc
(bad)
jmp
inc
aas
rcr
lods
mov
push
xchg
inc
push
dec
lea
cmps
ds
arpl
rcr
ds
fisttp
movs
push
sar
repz
jle
add
dec
or
data16
or
mov
mov
jbe
ja
adc
sbb
imul
movhps
jo
aas
je
inc
aam
cmp
push
pop
cld
dec
popf
ss
ins
cmc
pop
mov
adc
or
sub
xchg
retf
push
xchg
or
mov
add
jnp
jge
data16
imul
adc
inc
jmp
inc
shr
leave
outs
fcom
jecxz
leave
daa
stc
jp
and
inc
push
cmp
test
out
mov
inc
dec
int
add
fistp
rcr
fadd
stos
outs
loope
sub
mov
xchg
movs
lea
push
jno
hlt
call
pop
mov
and
push
imul
movs
in
mov
mov
sub
pop
fs
inc
mov
jl
add
ret
push
std
out
inc
(bad)
inc
xchg
outs
mov
dec
cmp
mov
dec
adc
add
cmp
pop
(bad)
out
imul
add
bound
into
sub
jno
sahf
aam
sysexit
cmp
bound
ins
inc
cmp
push
mov
lods
sub
fwait
rdmsr
jb
mov
fisubr
push
push
push
gs
mov
cmp
mov
mov
pop
in
pop
sub
sbb
cmps
adc
jmp
(bad)
inc
dec
push
stos
sub
je
xor
or
mov
div
or
sbb
repnz
jae
rcl
retf
outs
ins
mov
sub
enter
mov
sub
jns
jg
retf
dec
loope
sbb
les
mov
(bad)
push
aaa
fbstp
inc
(bad)
sahf
pop
jno
mov
mov
sub
bound
js
add
in
dec
push
inc
mov
xor
imul
repz
dec
jp
push
mov
adc
pushf
and
inc
les
push
mov
mov
lea
push
arpl
sub
xlat
add
xlat
in
(bad)
sub
jno
leave
sbb
dec
cld
xor
push
dec
call
lahf
outs
fbstp
nop
pop
movs
inc
push
pop
push
ds
push
scas
inc
adc
pop
cmp
pop
out
lea
xchg
cs
mov
xor
gs
hlt
mov
fsubr
aad
js
jno
rol
xchg
mov
popa
mov
xchg
push
jmp
les
add
(bad)
jmp
outs
and
xchg
test
movs
imul
pop
fsub
jg
lods
mov
add
fld
push
popf
and
sti
js
test
lods
lock
cwde
mov
cmp
xchg
(bad)
xchg
cmp
push
xchg
sahf
jp
xchg
movs
inc
loope
lods
push
test
movs
sbb
pop
bound
(bad)
mov
mov
mov
dec
cmp
iret
dec
mov
jp
cmp
aaa
push
xor
or
and
jp
int
sub
xchg
in
iret
ror
jmp
pop
add
je
sub
jo
xlat
pop
cli
sti
adc
push
scas
sbb
mov
movs
lock
dec
sbb
(bad)
fldcw
add
xchg
push
cmp
push
(bad)
dec
call
mov
out
cmp
adc
add
dec
push
add
xor
lds
ror
cmp
add
xchg
dec
and
pushf
call
(bad)
js
idiv
pop
jne
cs
jo
jmp
push
imul
(bad)
dec
nop
into
jmp
xchg
lock
jecxz
imul
adc
dec
jns
mov
cli
jno
mov
jmp
call
stos
and
jb
or
stos
dec
jle
xchg
test
mov
sub
inc
sub
mov
jno
jmp
icebp
test
test
imul
push
push
cmp
push
cmps
push
aaa
xor
and
jecxz
pop
in
scas
dec
sub
push
mov
cmp
repnz
mov
mov
test
cmps
jno
xchg
pop
shl
je
aas
jno
add
fdiv
adc
add
cmps
in
ror
inc
jns
ficomp
xor
xchg
sub
push
sbb
fdivr
(bad)
repnz
ins
adc
xchg
push
inc
cmps
xchg
adc
mov
inc
arpl
cmp
add
dec
or
mov
mov
(bad)
sbb
mov
xchg
mov
adc
push
jge
or
test
mov
sub
push
iret
sbb
imul
iret
mov
call
fcmovnb
lahf
cs
adc
sbb
ficom
dec
dec
test
mov
div
fcmovbe
dec
sub
frstor
neg
add
add
mov
pop
ret
lock
lahf
outs
(bad)
jp
cmp
ins
sar
adc
push
or
mov
add
xor
adc
fs
inc
pop
(bad)
int3
loop
jno
movs
mov
pop
adc
dec
xchg
dec
add
ret
xor
repz
sahf
out
push
rcl
xchg
xchg
xor
inc
adc
mov
adc
add
cmp
mov
lea
cmp
xor
xor
and
fild
dec
push
ja
cmp
dec
repnz
test
jge
cdq
sbb
dec
ret
pop
sbb
enter
jmp
xlat
cmp
jae
push
mov
fidiv
mov
mov
or
je
mov
dec
mov
mov
out
mul
loope
call
mov
sub
cwde
sbb
mov
jl
mov
mov
pop
jmp
jg
fisub
dec
out
and
daa
adc
add
dec
push
mov
iret
mov
xor
and
(bad)
repnz
jge
jle
int3
(bad)
mov
sahf
ror
push
pop
pop
cmps
imul
jns
inc
xchg
cmps
push
mov
aad
pop
mov
ror
and
in
push
mov
mov
adc
call
shl
cli
fcom
popa
push
pop
les
scas
inc
push
pushf
add
pusha
movs
xchg
push
cmps
mov
(bad)
inc
jmp
dec
sub
xchg
lods
cmp
and
cld
cli
xchg
jecxz
imul
dec
inc
call
jecxz
sbb
sub
add
mov
call
xor
lods
dec
xchg
fsubr
and
add
or
adc
enter
clc
je
jns
dec
and
loope
or
test
std
mov
mov
pushf
bound
dec
add
gs
push
call
push
aad
sub
sti
lods
aaa
push
push
std
xor
push
xchg
and
mov
scas
iret
aas
out
call
retf
push
or
cld
aas
pop
in
imul
mov
xchg
xchg
or
adc
nop
ds
rcr
inc
aad
inc
stos
dec
dec
rcl
bnd
push
sbb
mov
pop
add
cmp
sub
out
pop
jo
in
movs
test
enter
and
dec
lahf
mov
in
shl
ss
xor
ins
iret
push
imul
in
push
repz
mov
push
xchg
lods
call
sbb
stos
mov
and
les
mov
inc
xchg
dec
js
cmc
mov
xchg
or
scas
test
popf
and
test
push
cmovbe
jmp
mov
mov
dec
adc
sub
loopne
add
and
dec
clc
lods
in
ret
mov
retf
dec
mov
add
or
cmp
dec
stc
int3
xchg
lds
inc
jl
dec
mov
nop
popa
push
mov
push
cmp
xchg
nop
adc
xchg
pushf
cmp
mov
loopne
outs
lods
in
and
pop
(bad)
inc
sbb
(bad)
in
repnz
inc
inc
pop
outs
add
jb
test
cmp
test
sahf
sbb
call
(bad)
ds
or
outs
mov
jbe
pop
sbb
repnz
mov
mov
ficom
mov
bound
neg
repz
dec
(bad)
loopne
ja
adc
xor
pushf
test
pusha
js
push
mov
shl
popf
push
dec
movs
nop
fs
hlt
push
mov
sti
sub
add
jno
mov
mov
mov
cmp
pop
xor
xchg
xor
sub
out
in
sub
sub
jl
sub
in
stc
sahf
xor
jns
mov
(bad)
rcr
cmp
mov
aas
or
mov
jnp
xor
in
jecxz
xchg
les
xor
add
repz
call
add
add
aam
int3
cmp
mov
dec
sbb
iret
or
add
bswap
(bad)
lahf
inc
ins
xlat
fcomp
fistp
add
inc
sbb
push
or
add
cmps
xchg
psubusw
mov
jne
ficom
(bad)
aam
or
push
(bad)
loopne
gs
in
or
jl
push
push
push
dec
xchg
push
mov
cli
push
sub
out
push
repnz
ins
adc
stos
je
inc
pop
dec
call
push
jmp
or
mov
imul
call
xor
sbb
xor
mov
sbb
and
adc
dec
mov
dec
retf
aad
jge
ja
stc
int
cmc
mov
inc
call
add
call
mov
jae
cs
(bad)
mov
mov
pop
mov
aad
jg
scas
stos
xchg
mov
sub
mov
sub
sti
fimul
jbe
retf
xlat
dec
movs
mov
mov
in
add
jnp
outs
(bad)
stc
mov
scas
movs
movs
xor
jb
aam
sbb
adc
xchg
sti
jp
loopne
fadd
outs
icebp
xchg
jo
xor
inc
inc
test
adc
sbb
ror
mov
mov
xlat
or
or
(bad)
push
ret
pop
mov
std
jge
int
mov
call
inc
cmp
cmps
xchg
sub
push
xchg
movs
inc
push
lods
ins
aaa
pusha
add
daa
cmp
mov
or
mov
inc
aad
mov
xchg
xor
js
das
xchg
dec
cdq
mov
dec
adc
cmp
cmp
sbb
pop
test
jg
neg
dec
mov
lea
test
cld
mov
pop
pop
pop
inc
jae
mov
mov
sub
mov
pop
iret
mov
outs
jne
ror
mov
mov
mov
push
push
dec
aad
xor
inc
(bad)
popf
data16
and
test
pop
mov
dec
push
out
aad
loope
lods
inc
cmp
(bad)
iret
mov
cmp
(bad)
es
and
jno
add
jg
add
inc
stos
xchg
and
mov
inc
xchg
push
push
icebp
lds
nop
xchg
test
popf
sub
xchg
cmp
addr16
popf
push
rol
(bad)
lock
in
(bad)
jge
iret
cmp
outs
aas
add
jns
mov
gs
push
fcomp
cmps
imul
add
cmp
push
and
push
cmps
enter
xchg
mov
push
sub
test
inc
je
and
inc
or
int
xchg
in
pop
pop
sub
mov
dec
push
pop
mov
cmp
xchg
in
and
rol
ror
test
shl
push
jecxz
cmp
xor
retf
or
or
push
dec
pop
xchg
lds
scas
xchg
mov
movs
jle
test
lahf
cmc
std
mov
push
ins
in
inc
mov
out
(bad)
das
mov
popf
sbb
push
mov
xor
xlat
xchg
cmp
mov
pop
jmp
push
dec
adc
mov
and
shrd
enter
xchg
stos
rcl
in
ds
fmul
enter
inc
xlat
jmp
or
aas
addr16
xchg
fldcw
cs
add
inc
pop
addr16
stos
dec
mov
sti
jle
xor
ds
cld
cmp
(bad)
rcr
clc
hlt
fwait
mov
std
cmp
(bad)
mov
xchg
add
jg
mov
mov
xchg
out
cwde
dec
test
mov
and
nop
popf
and
outs
xchg
jge
mov
stos
js
test
es
add
ds
out
out
imul
arpl
sub
daa
out
adc
sbb
and
aaa
pop
jnp
mov
outs
fadd
jle
je
push
and
test
ficomp
dec
adc
aas
xchg
out
and
mov
mov
cmp
push
(bad)
mov
aam
iret
pop
mov
sub
mov
add
je
movs
pop
out
sbb
add
mov
mov
fistp
pop
test
xchg
sbb
div
dec
lods
xor
sub
mov
pop
add
inc
cdq
stos
xor
stc
jmp
popf
mov
in
vaddsd
xchg
adc
mov
jb
stc
popfw
and
sbb
scas
call
xchg
and
cdq
shl
(bad)
mul
fmul
pop
fucomi
in
out
pusha
mov
dec
sub
or
pop
adc
push
loope
daa
or
pop
inc
or
xor
inc
iret
iret
mov
push
cmp
inc
mov
inc
mov
test
cmps
mov
jnp
lods
jecxz
or
add
add
inc
mov
add
push
xor
in
popf
and
sub
cli
cmp
dec
aas
dec
aas
cmps
mov
jno
or
jp
out
bnd
xor
imul
int3
cld
mov
rol
das
add
mov
cld
cmp
pop
test
fmul
push
test
cdq
in
loope
mov
hlt
nop
pop
fldpi
out
pop
xchg
mov
jge
sbb
cmps
cmp
pop
ficomp
test
bound
repz
inc
aad
cli
inc
push
rol
(bad)
pusha
sub
(bad)
sbb
add
jmp
add
cmp
jle
push
icebp
fcom
xchg
ror
loope
enter
nop
fidiv
pop
mov
or
sbb
(bad)
sahf
ret
(bad)
in
mov
fucomip
adc
jmp
aas
test
stc
adc
mov
imul
ins
cmp
push
retf
out
dec
fs
jmp
adc
cmp
stos
pusha
rcr
xor
and
(bad)
int
mov
xor
adc
out
nop
fcmovne
cmp
dec
ds
hlt
mov
jp
sbb
xchg
jmp
or
add
frstor
xchg
xlat
mov
sti
pop
clc
push
cmp
dec
push
aad
push
jecxz
and
div
nop
lahf
and
or
aaa
mov
outs
push
xchg
std
pop
xor
fisttp
mov
aam
mov
les
ja
inc
ins
sub
mov
add
(bad)
or
test
lea
mov
pop
loope
sub
into
add
les
(bad)
sub
repnz
or
mov
ret
stc
and
call
xor
jg
jns
push
jno
adc
sbb
rcl
dec
mov
push
dec
pusha
push
adc
cmps
xchg
pop
pop
imul
mov
xchg
pop
jno
xchg
pop
push
loop
loop
cdq
test
out
movs
lea
mov
mov
clc
xlat
aad
mov
dec
fwait
jns
xor
pop
sahf
dec
dec
mov
xor
mov
jmp
xchg
jle
aas
cmp
popa
sbb
movs
push
cmps
cmp
xchg
push
dec
int
ret
mov
fdiv
cs
fdiv
sbb
aam
mov
in
adc
xchg
xchg
pop
lock
add
test
call
dec
inc
sti
push
stos
sub
cli
adc
test
xor
push
adc
scas
inc
xchg
dec
stos
xor
lods
inc
leave
movs
jae
jp
call
xor
pop
sub
into
fcomp
xor
outs
dec
inc
mov
aas
outs
in
sub
addr16
inc
xchg
mov
ficom
test
(bad)
mov
test
cmp
sub
in
retf
call
in
out
pop
push
push
dec
adc
femms
cmp
out
cmp
idiv
stos
dec
inc
sub
dec
sbb
pop
retf
imul
lods
pop
leave
inc
in
fdivr
add
mov
in
loopne
cmc
mov
sub
mov
mov
es
xchg
cmps
inc
aas
inc
push
and
fidivr
pop
lods
cdq
mov
jae
ins
mov
dec
sbb
fcom
clc
nop
stc
sub
jo
out
pop
sahf
mov
xor
sti
(bad)
xlat
stos
push
test
loop
xor
sub
loop
aas
rol
push
mov
jns
add
popa
push
add
lea
and
pop
rcr
into
idiv
adc
daa
mov
sub
out
jp
sub
movs
inc
pop
(bad)
cmp
lods
js
adc
aam
mov
sub
mov
mov
pop
enter
jo
sti
mov
mov
pop
(bad)
(bad)
inc
jge
out
jno
pop
in
ins
mov
xor
push
cdq
jmp
or
cmp
xchg
shr
mov
sbb
and
in
enter
(bad)
push
icebp
outs
lahf
stc
inc
imul
lods
arpl
dec
mov
(bad)
(bad)
sbb
lods
(bad)
fisubr
rcr
nop
push
sub
xchg
pop
cmp
adc
call
jmp
and
adc
jmp
loop
fisubr
outs
sar
mov
imul
and
xor
xchg
mov
cmps
inc
cmp
cmp
push
dec
rol
pusha
shr
inc
pop
inc
push
test
aas
scas
push
ret
xchg
repnz
stos
adc
dec
adc
xor
cmp
pop
int3
jg
pop
cs
jmp
push
adc
or
cmps
add
sbb
xchg
pop
out
push
pop
jnp
sbb
daa
mov
cmps
pop
daa
adc
jecxz
xchg
inc
ja
sub
sub
iret
aas
retf
pop
pop
adc
sar
xor
cmp
enter
mov
div
mov
dec
fst
aas
cmp
mov
out
bound
mov
mov
inc
jl
jp
mov
jnp
pop
cdq
dec
gs
dec
xor
and
shr
or
mov
sbb
sub
jle
div
fidiv
scas
ins
xor
sbb
sub
scas
jp
pop
fsub
mov
icebp
nop
loope
sub
push
les
sbb
iret
lods
mov
push
ins
jmp
cdq
or
xchg
inc
sub
es
xchg
test
(bad)
bound
xlat
and
jge
aaa
nop
mov
xor
leave
push
out
test
lods
stos
add
mov
scas
pop
fisttp
mov
fisttp
pop
jle
and
and
nop
mov
sbb
sahf
dec
movs
mov
outs
lods
hlt
(bad)
popa
bound
mov
(bad)
repz
inc
pop
das
clc
mov
push
inc
cmp
fstp
mov
mov
mov
hlt
mov
dec
inc
test
fisubr
pop
sahf
ins
in
xchg
jecxz
fwait
and
fisttp
mov
jecxz
sbb
xor
das
test
pushf
adc
enter
fcomi
lds
mov
cld
mov
retf
fcomp
ins
mov
xor
mov
cmp
push
xchg
sahf
pop
inc
in
bnd
dec
mov
xchg
stc
xor
adc
sub
sahf
mov
add
dec
jl
mov
sub
in
aas
sahf
js
add
pop
fisubr
add
aas
out
mov
mov
cmps
mov
xor
rcr
or
pop
xchg
stos
and
push
xchg
(bad)
dec
nop
inc
mov
dec
cmc
push
out
inc
mov
adc
sbb
add
loopne
leave
movs
mov
mov
das
xor
retf
ds
js
mov
and
addr16
inc
mov
dec
mov
cmps
aam
retf
adc
loopne
push
movs
mov
sbb
mov
pop
in
push
out
movs
fist
arpl
dec
jne
(bad)
xchg
and
leave
inc
fnsave
xor
adc
jb
xchg
push
in
mov
clc
jle
dec
cmp
mov
data16
dec
sub
movs
fdiv
xchg
mov
repnz
(bad)
data16
dec
pop
pop
cwde
pop
add
and
jb
push
jb
fsubr
repnz
nop
js
cld
cwde
test
add
cmc
es
out
ins
add
mul
add
sub
shl
jmp
(bad)
mov
dec
mov
stos
ins
rol
hlt
mov
int3
cs
sub
xchg
mov
adc
cmp
ja
out
cmp
xchg
pop
dec
loope
push
pop
add
push
inc
xorps
mov
adc
rol
call
dec
push
cmp
cmc
mov
jle
out
pop
scas
jbe
shl
mov
jge
push
daa
retf
in
aas
xor
cmp
push
adc
xchg
js
jg
dec
hlt
stc
sub
stos
sub
sub
sub
push
stos
cmp
and
imul
xchg
lahf
iret
mov
ins
arpl
or
lock
imul
inc
jge
adc
jmp
cld
aam
mov
inc
mov
mov
sub
mov
xor
jg
jge
ds
pop
mov
lods
arpl
pop
mov
sbb
fdivr
lods
fs
daa
mov
cmp
lods
dec
bnd
into
out
js
xchg
mov
mov
or
add
sbb
push
push
dec
mov
and
mul
sub
pusha
pop
inc
lods
rcl
mov
dec
xor
push
xchg
pop
or
pop
and
pop
jg
aam
shl
mov
cmp
inc
inc
mov
dec
inc
(bad)
js
fwait
(bad)
jge
lods
adc
inc
movs
sbb
imul
test
fisttp
ds
ret
xor
xchg
cmp
pop
test
std
jmp
jne
sub
les
mov
cmp
(bad)
daa
fldcw
mov
and
and
jecxz
inc
test
sbb
jl
or
mov
sbb
lds
(bad)
push
mov
cli
(bad)
xlat
mov
ins
jl
inc
lea
es
mov
jecxz
and
imul
cvttps2pi
fisubr
inc
push
out
push
inc
movs
imul
push
out
inc
fwait
jl
and
(bad)
mov
aam
ret
dec
add
jge
push
ss
xchg
ins
xlat
in
sbb
jbe
bound
mov
xor
push
xchg
sar
js
(bad)
push
aam
xor
push
dec
adc
cmp
mov
sti
xchg
out
sub
jle
das
jo
and
scas
dec
adc
loop
xor
fistp
sub
and
sub
mov
sub
add
mov
cs
xor
sub
and
retf
rcl
sbb
lods
jle
mov
ja
jmp
sbb
loopne
dec
adc
iret
inc
mov
fs
push
jb
push
dec
push
pushf
sub
xor
xor
test
test
sub
mov
sbb
xchg
imul
inc
mov
add
icebp
and
fistp
lds
mov
test
pop
pop
jmp
push
imul
and
xor
push
xor
mov
xor
cmp
mov
add
add
jmp
fisub
dec
and
data16
cmp
pusha
enter
out
push
cmp
push
in
lahf
das
pop
addr16
loope
sahf
mov
or
lods
mov
xor
xlat
cld
lahf
retf
imul
icebp
jmp
push
and
test
imul
leave
sbb
outs
and
repnz
push
scas
mov
mov
jle
cmps
dec
lods
sub
xchg
push
or
dec
mov
fmul
out
fs
je
enter
add
repz
pop
inc
push
add
jmp
lds
xchg
(bad)
leave
adc
adc
inc
aad
(bad)
shl
lods
inc
dec
adc
lock
mov
xor
sub
lods
cmps
dec
cmp
scas
xchg
push
ror
sbb
scas
xor
adc
sub
loope
xor
push
fs
inc
dec
mov
and
push
ret
inc
movs
xchg
(bad)
mov
sahf
movs
xchg
pop
popf
dec
iret
ds
in
(bad)
pop
sub
sub
sub
bnd
cmp
mov
push
mov
loope
(bad)
adc
add
fadd
dec
data16
and
fadd
in
sahf
daa
aas
xchg
inc
mov
cmp
not
xchg
dec
adc
xor
pop
icebp
inc
es
mov
ror
xor
sub
scas
pop
jnp
add
mov
sbb
jnp
jmp
sub
xchg
pop
dec
or
loope
arpl
jmp
cmps
in
hlt
fcom
xor
xor
or
inc
mov
sub
push
cmp
push
aaa
(bad)
sub
xor
cmp
cmp
mov
loope
push
inc
jl
push
cmp
aad
stc
cli
addr16
arpl
dec
push
xchg
cmps
clc
bswap
mov
inc
push
loope
dec
retf
push
jmp
push
sbb
cmp
jge
cmp
mov
mov
gs
bswap
cli
loop
push
adc
in
in
clc
xchg
inc
sub
(bad)
nop
icebp
fldenv
sahf
scas
jbe
lahf
test
lds
int3
fs
popa
cli
dec
sbb
scas
out
jge
cmp
inc
dec
push
or
sub
in
leave
call
sbb
dec
sub
xor
xlat
add
cld
stos
shl
les
pop
paddsb
jno
lods
jno
in
pop
add
je
fst
retf
(bad)
push
sbb
into
pushf
jp
dec
pop
xor
mov
adc
(bad)
sub
push
loop
push
jecxz
push
inc
sbb
shl
push
sub
loope
rep
cmp
cs
pextrw
adc
lods
into
and
lds
outs
cmps
lds
adc
loope
inc
add
(bad)
pop
adc
pop
xchg
mov
cmp
out
sub
push
adc
mov
inc
cmc
push
daa
xchg
out
adc
aaa
aas
pop
pop
(bad)
loopne
in
mov
arpl
push
xchg
loopne
mov
inc
and
push
xlat
cld
add
sar
outs
dec
and
mov
xor
hlt
sub
add
or
sub
xor
int3
push
inc
stos
mov
faddp
ds
and
jg
mov
repnz
xchg
mov
out
fiadd
adc
dec
das
cmp
push
ret
dec
(bad)
ror
iret
mov
inc
xchg
loope
mov
rol
add
in
add
mov
xor
clc
jge
(bad)
repz
fnstsw
inc
iret
pop
lods
sbb
bswap
and
jecxz
add
scas
out
and
adc
inc
xor
addr16
popa
push
mov
push
call
(bad)
mov
pop
add
in
repz
je
test
pop
or
mov
mov
jns
int3
stos
inc
or
retf
mov
in
std
aas
ds
ss
inc
out
ret
je
in
ins
addr16
pop
cdq
and
inc
sub
add
movs
xchg
aam
mov
mov
pop
xchg
cli
jnp
jns
sub
aas
int
sub
jmp
es
pop
imul
fidiv
mov
dec
leave
mov
std
mov
jge
ja
fld
jbe
out
cmp
ss
sbb
jecxz
mov
xchg
stc
pop
fwait
arpl
dec
imul
lock
dec
cdq
int3
mov
and
pop
pop
cs
mov
cmp
adc
imul
xchg
imul
add
fincstp
jge
fsubr
push
jecxz
push
push
or
icebp
add
xchg
push
fmul
ror
(bad)
imul
imul
push
xor
shr
(bad)
mov
jmp
mov
stc
leave
jns
xor
and
adc
jb
jmp
imul
rcl
xchg
push
inc
data16
pop
mov
das
sbb
push
pop
pop
cmc
addr16
jmp
call
cmc
push
fistp
arpl
sub
repnz
cld
int
xchg
aam
and
jo
div
jb
loopne
xchg
mov
push
jecxz
push
pop
xchg
clc
cmp
pop
fdiv
sti
xor
dec
dec
imul
sbb
xchg
inc
cli
movs
dec
ror
sub
mov
mov
in
lods
pop
push
push
adc
aas
and
pop
cmc
daa
adc
pusha
push
aas
loopne
lahf
mov
jmp
leave
and
fmul
push
cmp
fild
dec
jecxz
push
jecxz
movs
jge
pop
jbe
sbb
movs
mov
pop
jmp
cmps
mov
jp
cmp
add
loopne
push
mov
pop
adc
xchg
scas
cmc
mov
mov
imul
jge
jg
mov
pushf
and
jg
aad
dec
inc
push
call
hlt
clc
or
push
scas
imul
sub
pop
add
and
push
jo
jmp
(bad)
aad
xor
mov
ins
push
mov
pop
xchg
add
sbb
stc
or
fimul
mov
and
xchg
out
js
push
cmp
pop
mov
mov
dec
add
rcl
addr16
mov
sbb
inc
cmc
xor
lahf
cmps
push
sar
fld
call
push
and
stc
cmc
cs
in
jle
scas
sbb
repnz
add
test
cmps
into
mov
adc
xchg
push
loop
sub
pop
popa
xor
adc
xchg
push
dec
inc
or
sbb
jno
or
nop
retf
xor
aad
dec
jne
or
btr
cmps
pop
or
sbb
add
and
iret
test
xlat
adc
shl
lds
(bad)
dec
clc
retf
dec
shr
imul
mov
pop
icebp
ds
mov
je
mov
sbb
lahf
mov
cwde
push
jo
sar
cmp
xlat
movs
dec
push
ret
push
sub
es
movs
mov
leave
not
xor
aaa
sub
cmc
adc
(bad)
xor
pusha
mov
inc
mov
lock
iret
inc
jo
cwde
sub
stc
bound
sar
add
xchg
clc
push
or
push
and
mov
cwde
cmp
pop
xchg
(bad)
xchg
push
(bad)
cli
cmp
les
mov
push
xor
pop
xchg
and
sub
in
mov
leave
dec
inc
or
sub
sub
sbb
xchg
mov
mov
xchg
out
sub
rol
fadd
ins
iret
addr16
adc
add
loop
xor
ins
and
ds
push
fs
jo
jo
push
jo
sbb
sbb
pusha
jns
and
pop
sbb
movs
cmps
push
sti
int
xchg
(bad)
adc
pop
imul
fimul
jl
loope
pop
jne
cwde
movs
xlat
sub
(bad)
std
(bad)
adc
sahf
lea
(bad)
stos
int3
sub
daa
xlat
add
inc
repz
push
es
and
xchg
pop
adc
cld
jge
outs
xor
and
and
test
xchg
ror
mov
es
fs
imul
arpl
and
jo
xor
lock
jg
dec
and
test
mov
fistp
out
jmp
and
push
sub
pop
cmp
mov
daa
lock
mov
jmp
fidiv
inc
sub
shl
jns
adc
pop
fild
fdivp
in
std
mov
ins
inc
iret
xor
lods
sub
pop
sub
sub
out
adc
int3
adc
xor
je
sbb
cmps
retf
out
loop
push
mov
outs
or
aad
loope
xor
js
sbb
ins
in
in
repnz
add
(bad)
in
lds
mov
cmp
xchg
push
aad
fisubr
dec
int
loop
or
mov
xchg
mov
test
sbb
jmp
in
push
fidivr
das
and
cmp
movs
mov
daa
mov
retf
dec
loopne
xor
inc
jo
pop
lds
pop
inc
jo
xchg
das
lods
out
adc
data16
imul
es
ins
(bad)
mov
mov
mov
addr16
fwait
sahf
xchg
imul
or
mov
mov
scas
sub
js
fimul
mov
jecxz
aad
(bad)
and
push
and
inc
dec
div
movs
mov
mul
mov
push
xchg
movs
add
lods
xor
rcl
xchg
push
or
stos
imul
push
mov
inc
test
cmps
imul
(bad)
gs
add
mov
fadd
pop
imul
sbb
jp
fdivr
je
ror
add
and
add
or
mov
clc
jp
sbb
int
outs
ss
jge
ss
push
xchg
mov
push
(bad)
loop
push
dec
jecxz
mov
cmp
jge
neg
(bad)
mov
gs
sbb
es
ret
inc
jg
in
call
mov
gs
dec
push
inc
scas
cwde
lds
push
and
movs
sahf
push
xchg
xchg
inc
sbb
ror
cwde
in
cmp
fstp
movs
jb
icebp
jmp
fcmovu
cwde
dec
mov
aad
mov
cmp
pop
sbb
test
xor
mov
arpl
sbb
push
mov
test
call
mov
xor
int
mov
mov
mov
add
xchg
dec
inc
or
out
and
mov
cmps
mov
repz
fdivr
call
(bad)
dec
dec
add
adc
inc
jl
jmp
bound
cmp
inc
pop
data16
mov
add
sub
js
push
mov
mov
push
mov
sbb
enter
push
popf
sub
clc
dec
mov
mov
xchg
shr
xchg
jg
test
cmp
imul
loope
(bad)
mov
ja
jns
mov
(bad)
push
jno
lahf
sub
cmp
adc
retf
or
mov
(bad)
in
cmp
and
add
aaa
in
adc
sub
mov
es
push
mov
pop
test
mov
cli
out
in
and
dec
out
sub
movzx
push
retf
dec
xor
xchg
retf
adc
dec
lods
jg
jnp
ins
not
int
adc
xor
jmp
test
ins
sbb
dec
pop
sbb
lock
add
outs
sbb
add
cmp
mov
adc
cmps
lahf
lds
sbb
in
and
sti
pop
fstp
sbb
mov
mov
and
test
jne
imul
es
pop
sub
in
cmps
jmp
ficomp
imul
retf
cmp
jb
xchg
push
mov
push
adc
xchg
xor
outs
out
aas
fsubp
mov
add
sbb
ds
sahf
dec
jmp
mov
xor
fist
jmp
retf
les
push
in
hlt
imul
cmp
add
in
lahf
movs
test
in
or
mov
jl
(bad)
cmps
xchg
aas
jmp
sbb
loope
dec
not
xchg
xor
movs
data16
push
cmps
dec
pop
sbb
jae
jge
lea
inc
sub
test
jle
out
cmc
pop
xchg
data16
ret
push
imul
adc
pop
rol
stc
shl
imul
push
push
inc
pop
adc
out
dec
dec
mov
bound
or
dec
je
xchg
adc
std
inc
mov
call
xchg
xor
imul
dec
or
movs
jl
hlt
arpl
pop
pusha
push
mov
cmps
cmps
js
repz
retf
pop
adc
push
imul
outs
fcom
pop
jno
ds
and
push
push
sub
xor
jmp
jbe
inc
jno
leave
test
jo
jmp
jmp
mov
mov
or
cmp
mov
mov
fldenv
pop
or
int
push
call
add
jmp
push
xor
mov
repz
push
mov
or
iret
inc
push
fst
add
pop
pushf
lods
adc
mov
pop
inc
cmp
pop
loopne
pop
dec
sbb
push
idiv
pop
data16
or
add
dec
add
push
xor
dec
out
jle
pop
mov
or
push
(bad)
xor
inc
movs
cmp
sahf
test
mov
mov
xor
mov
out
sbb
add
pop
jne
mov
pop
adc
inc
xor
ds
pop
int3
mov
xor
inc
mov
push
(bad)
sub
sbb
mov
jno
cmc
lds
aas
xchg
movs
enter
dec
mov
out
xchg
pushf
movs
in
dec
cli
popaw
and
pop
pop
cli
ins
(bad)
ds
rcl
inc
(bad)
cmps
mov
push
pop
jno
out
mov
rol
inc
dec
or
push
inc
bound
sahf
mov
add
mov
sahf
xor
xor
loope
or
mov
int
shl
(bad)
xor
cmp
sahf
and
sub
push
cmc
stc
hlt
or
push
arpl
je
aas
xchg
shl
aad
popa
pop
sub
xchg
leave
inc
int
movs
sbb
mov
sub
mov
xchg
shl
lock
add
ins
jno
into
hlt
mov
daa
and
cmp
lods
lods
cmp
adc
sub
fiadd
pop
les
xchg
fidiv
popf
mul
adc
cmp
adc
push
cmp
bound
lds
add
aas
cdq
call
mov
mov
sub
imul
popa
movs
pop
arpl
cmp
je
mov
add
neg
ficomp
jo
inc
sub
stos
push
ret
mov
ret
mov
xor
or
sbb
add
stc
mov
and
mov
enter
sahf
add
mov
inc
loopne
and
rol
mov
jmp
nop
jo
fnstcw
lock
jge
xchg
sbb
(bad)
adc
add
shl
cmp
pop
mov
mov
retf
xchg
lods
or
xlat
or
pusha
movs
push
add
scas
lods
mov
lods
mov
dec
jnp
test
xor
stc
xlat
cmps
sub
es
test
mov
or
out
out
dec
cmc
cs
lds
int
hlt
push
sbb
cmp
inc
pop
sbb
mov
(bad)
jmp
mov
in
mov
jl
push
adc
xor
push
test
scas
dec
xchg
jp
out
ins
sbb
out
dec
mov
xchg
mov
scas
mov
bound
cmps
stos
fcompp
xchg
leave
aam
mov
cs
stos
es
int3
jle
mov
into
dec
dec
mov
leave
in
inc
leave
mov
ret
sbb
fs
stos
icebp
cli
sbb
dec
cld
push
cwde
push
xor
ret
popf
cs
(bad)
out
mov
es
push
push
pop
mov
addr16
jg
in
lea
jmp
sysenter
cmc
xor
jecxz
dec
jmp
mov
enter
(bad)
push
pop
add
pushf
(bad)
fild
popf
mov
add
mov
scas
mov
or
pop
dec
and
mov
add
cmc
add
stc
repnz
cmp
loop
dec
jp
push
jp
cmp
sahf
outs
clc
neg
mov
xchg
dec
gs
addr16
push
add
or
cmp
rcl
xor
loopne
divps
retf
cmp
and
imul
xor
lock
sub
clc
sti
and
and
or
ret
xor
jl
popf
inc
(bad)
inc
xor
jnp
cmp
push
inc
bswap
or
cmps
inc
test
lock
mov
(bad)
cmp
and
mov
dec
jno
cmp
ret
pop
retf
sub
test
inc
jnp
push
in
mov
inc
jno
cmp
pop
fdiv
push
xor
adc
shr
sub
and
retf
sbb
dec
or
inc
leave
ja
clc
mov
jmp
jne
sub
loop
and
or
add
push
in
jmp
nop
lods
in
rcl
mov
popa
mov
add
jne
cmp
sti
jae
mov
out
(bad)
xor
jmp
push
(bad)
jecxz
xchg
jns
dec
sbb
add
cmc
gs
fcomp
xor
pop
fidivr
dec
xchg
dec
scas
or
lahf
push
push
mov
add
add
add
iret
mov
cmp
nop
mov
or
sbb
sar
xchg
mov
sub
jmp
mov
push
fsubp
pop
lahf
jb
sub
out
or
adc
loope
cmps
push
adc
cmp
outs
adc
daa
test
movs
nop
mov
fst
sbb
sub
out
fnstsw
idiv
or
mov
(bad)
pop
cwde
lods
mov
rcl
inc
mov
ret
lahf
dec
xor
pop
mov
repz
jp
mov
call
xor
fwait
cdq
dec
inc
or
movs
pop
test
ds
sahf
mov
(bad)
pop
aad
pop
dec
adc
lahf
ins
loopne
test
jmp
push
xor
push
mov
js
add
jle
data16
retf
nop
adc
pop
addr16
inc
push
lahf
es
cmp
sti
fadd
sbb
push
dec
retf
push
stos
push
cmp
jmp
sar
xor
mov
loope
sub
or
and
lods
mov
or
(bad)
lahf
lods
mov
ins
ins
xchg
enter
xchg
push
sub
push
addr16
lahf
pop
and
push
xlat
loop
test
pusha
add
or
push
cmp
inc
xor
dec
jge
and
es
dec
and
adc
in
sbb
fbld
test
jmp
fdivr
jne
jmp
inc
mov
cmp
jmp
jo
mov
or
aaa
and
cmps
es
leave
push
or
aam
lahf
cmps
fdiv
mov
xor
inc
push
push
add
and
cli
mov
fcom
pop
xchg
push
ror
or
hlt
inc
addr16
outs
das
ins
out
daa
test
pop
xchg
mov
and
addr16
cmp
sahf
jmp
push
popf
mov
mov
xor
pop
xchg
in
mov
jmp
sub
fisttp
cwde
es
sub
jmp
xor
hlt
out
fwait
mov
inc
jne
loop
jle
add
jp
xchg
jae
cli
jg
push
adc
daa
xchg
mov
clc
outs
dec
add
jecxz
in
loope
(bad)
dec
mov
inc
ins
sar
lods
or
js
mov
inc
sbb
push
xchg
cli
loopne
dec
jecxz
dec
sub
or
lahf
pop
push
sahf
popf
daa
pop
dec
push
xor
xchg
adc
xchg
mov
cmp
jmp
sbb
adc
push
lahf
out
push
pop
lahf
push
std
in
dec
and
or
cmp
stos
and
push
pop
iret
add
clc
(bad)
repnz
mov
cdq
jbe
push
outs
cdq
sub
fs
cld
test
ret
mov
jb
dec
add
lds
xlat
pushf
icebp
retf
jl
movs
jns
lods
adc
pop
xor
cmps
inc
jnp
iret
ja
add
imul
cmp
or
xor
sub
ins
jo
retf
add
idiv
ficom
dec
imul
leave
movs
(bad)
jecxz
xchg
fisttp
fbstp
cmps
jmp
not
xchg
in
adc
pop
and
mov
arpl
loope
hlt
adc
stc
dec
adc
dec
movups
inc
outs
lahf
mov
cmps
mov
test
aas
xchg
jle
rol
lods
add
fisubr
jo
clc
stos
aaa
push
sbb
push
les
das
daa
fiadd
loopne
ins
inc
dec
mov
and
push
pop
cmp
ja
in
mov
xor
imul
cmp
ss
stc
hlt
sbb
inc
xchg
xchg
lock
cmp
add
xchg
mov
push
pop
pop
adc
mov
in
pop
sti
fnsave
(bad)
jbe
dec
adc
in
mov
xchg
adc
repnz
push
aaa
sub
jns
call
frstor
mov
cmps
sbb
shl
in
(bad)
das
cs
push
lock
push
mov
mov
jnp
mov
mov
fs
xchg
add
stos
call
mov
out
xlat
cmp
add
mov
xor
imul
loopne
and
add
mov
icebp
jns
adc
jmp
push
aad
mov
fistp
jmp
imul
mov
ins
aaa
stos
and
dec
popa
jne
(bad)
sar
sub
dec
or
scas
mov
retf
(bad)
test
dec
dec
aas
xchg
in
mov
vmovdqa
jge
imul
aas
loopne
aam
jnp
cmp
js
shr
sub
cmps
pop
jno
out
dec
fsin
pusha
mov
cdq
and
push
lock
enter
int
lock
frndint
pop
(bad)
adc
das
in
cmp
jae
sti
xor
(bad)
clc
shl
ds
xor
das
hlt
das
mov
or
push
mov
mov
enter
std
and
jg
mov
add
adc
outs
pop
add
aas
cmp
mov
ret
test
std
int
lods
sub
mov
popf
imul
test
cdq
xchg
jne
push
or
pop
test
sub
repz
and
repnz
outs
aam
test
fucomi
(bad)
popf
ins
out
sub
mov
pushf
sub
out
aam
retf
repnz
mov
or
jg
pop
dec
sub
mov
wbinvd
hlt
jmp
jb
imul
push
movs
(bad)
cs
xor
mov
popf
test
xchg
or
std
outs
out
or
mov
daa
jnp
xchg
dec
movs
pop
mov
cmp
mov
mov
scas
adc
hlt
lds
inc
pop
cmp
jmp
retf
leave
xlat
push
dec
or
sbb
mov
(bad)
or
xor
push
test
cmp
pop
pop
pop
dec
mov
mov
mov
lahf
loope
sbb
dec
add
mov
adc
inc
popa
test
(bad)
in
lods
imul
test
sbb
lods
aaa
das
pop
out
fsubr
pop
js
xor
in
cmps
xchg
dec
not
inc
jae
jp
xor
loop
fcomp
and
dec
popa
call
xchg
std
mov
jge
ficomp
fcmovnb
lea
sub
int
rol
xor
cmp
sub
jae
movs
push
sbb
fcomp
sbb
and
sub
push
xor
cwde
int
mov
jae
je
jecxz
test
jne
arpl
mov
daa
dec
xchg
mov
popf
sbb
pop
movs
mov
xchg
in
ret
fwait
adc
loope
add
shl
fsubr
jns
push
fidivr
out
mov
jae
clc
(bad)
xlat
pop
mov
dec
sub
inc
cmp
sbb
dec
push
lods
(bad)
adc
xchg
mov
sbb
stos
test
rol
lds
repz
adc
test
sbb
jl
hlt
sbb
ins
imul
push
cld
pop
scas
sti
sbb
push
gs
jg
pop
and
push
sbb
inc
xor
pop
xor
addr16
pop
jg
cld
jae
jae
mov
mov
inc
lahf
sbb
adc
outs
outs
cmc
adc
int3
es
and
pop
stc
hlt
pop
mov
ffree
in
repz
adc
fadd
mov
fnstcw
mov
push
mov
sub
lods
xchg
dec
mov
out
scas
mov
jae
js
add
dec
dec
cwde
in
cmp
mov
mov
push
sbb
in
push
repz
add
rol
aam
xor
mov
jmp
or
add
sub
gs
cdq
movs
jns
outs
aad
pusha
pushf
int
dec
and
rcl
mov
lahf
std
mov
loopne
cmp
push
fild
dec
xchg
and
popf
and
mov
data16
je
aaa
(bad)
pop
or
lods
sbb
push
cmps
or
adc
jp
movs
es
outs
rol
stos
xchg
xor
das
cmps
js
push
xchg
inc
and
(bad)
jne
add
stc
not
pop
mov
pop
lea
adc
test
push
scas
cmps
mov
jp
mov
je
inc
push
shr
iret
mov
pop
sub
push
jo
dec
lea
inc
push
mov
out
aas
fistp
les
(bad)
push
jb
mov
hlt
stos
inc
mov
mov
scas
stc
cmp
push
aas
sbb
xchg
adc
test
push
mov
in
popf
cmc
sahf
psubb
test
test
mov
pushf
fs
mov
pop
jmp
mov
add
push
stc
sub
ds
dec
imul
xchg
fldenv
and
(bad)
sbb
dec
js
inc
sub
sub
fs
push
mov
std
jecxz
in
retf
mov
dec
pop
daa
xlat
ds
pop
pop
outs
ss
push
xchg
data16
sub
cmp
add
js
pop
js
jb
(bad)
ror
add
sub
sub
pusha
stos
lea
retf
repz
pop
mov
scas
retf
mov
push
inc
div
ror
mov
add
xor
adc
mov
neg
(bad)
rcr
in
cmp
(bad)
jb
stos
je
dec
push
sub
test
outs
dec
inc
sar
mov
cmps
addr16
mov
vpmovzxwq
mov
fistp
mov
xor
xchg
inc
inc
jne
inc
pop
nop
scas
adc
sbb
pop
add
mov
hlt
pop
aaa
or
daa
stos
mov
jmp
push
push
jns
loop
mov
movs
dec
push
xchg
pop
enter
jg
inc
cdq
dec
imul
or
adc
jo
call
cli
mov
add
jns
loope
sub
pushf
or
test
(bad)
mov
cdq
popf
mov
sub
call
rcl
mov
sub
fcmovu
mov
push
into
loop
mov
aas
imul
or
ss
ror
imul
scas
(bad)
les
cmp
cmps
mov
movs
hlt
mov
dec
test
mov
push
push
pop
sbb
pop
jbe
rol
inc
adc
repz
push
sub
cld
sti
daa
xchg
(bad)
imul
aas
xchg
cwde
(bad)
dec
lods
jbe
or
fcmovnu
stos
adc
add
mov
(bad)
fdivr
fbstp
data16
push
shl
dec
jb
xchg
std
(bad)
cmps
test
mov
movs
rcl
aam
(bad)
shr
jge
ja
jp
int3
mov
call
pop
adc
mov
outs
dec
int3
jbe
adc
(bad)
test
cld
sub
es
sbb
xchg
push
mov
call
scas
or
pop
test
adc
cmp
xchg
adc
test
xor
mov
inc
out
les
xchg
adc
xchg
ror
adc
or
adc
scas
dec
das
test
outs
outs
ins
inc
adc
push
sub
sbb
push
mov
cli
pop
repnz
fild
out
mov
lock
push
jmp
jo
push
inc
sbb
mov
mov
pop
retf
pushf
fiadd
pop
fsubr
cli
lods
sahf
adc
lahf
mov
sbb
es
adc
dec
scas
or
ret
aas
cmp
pop
iret
stos
into
stc
jmp
(bad)
xor
pop
cmps
or
pop
push
jne
rcl
xlat
movs
jb
je
mov
dec
pop
sbb
inc
pop
(bad)
idiv
in
mov
inc
mov
(bad)
fisttp
mov
ret
jge
jecxz
jbe
sub
fs
out
inc
movs
mov
js
hlt
clc
(bad)
xchg
sbb
push
sub
test
out
inc
ficomp
call
hlt
cli
sti
lahf
mov
sbb
add
add
add
std
or
es
fdiv
jo
movs
in
imul
arpl
mov
add
popf
sub
pop
cs
movs
enter
(bad)
sbb
pop
inc
sbb
push
imul
jnp
(bad)
xchg
imul
push
jo
mov
imul
inc
or
aad
push
idiv
mov
popa
push
mov
inc
xor
lea
pop
add
shl
outs
cmc
out
leave
and
and
cmp
ins
ror
icebp
inc
push
jp
ins
push
add
cmps
cmp
test
leave
in
mov
push
aas
sub
sbb
(bad)
or
int3
in
lods
stos
enter
fwait
(bad)
daa
fnstcw
xchg
int
or
or
add
xchg
mov
bound
inc
lahf
std
sahf
xchg
popf
ins
stos
push
stos
test
fs
xor
dec
mov
adc
mov
int
sub
loope
test
test
xchg
psubusb
(bad)
mov
ror
(bad)
sub
adc
cld
(bad)
stc
cli
xor
adc
inc
pop
xchg
pop
enter
inc
xor
sbb
add
fidivr
stc
and
adc
push
lods
js
lods
add
dec
mov
or
pop
js
add
cmp
call
cdq
enter
dec
test
mov
xchg
xor
cmps
movs
sti
mov
sub
or
pop
std
jns
es
cmp
pushf
mov
and
mov
xchg
inc
push
in
mov
inc
pusha
mov
aas
adc
movs
xchg
ins
jg
loope
mov
mov
jp
jle
push
or
and
movs
add
mov
sub
xchg
jb
dec
cmp
sub
add
cdq
mov
rcr
xor
mov
aam
push
pop
xor
mov
mov
popa
and
es
jae
mov
push
xor
movhps
jmp
jl
inc
pop
add
or
lea
test
out
retf
and
rcr
dec
shr
xlat
outs
in
cmps
jne
push
inc
dec
xor
push
adc
inc
sub
and
sbb
rcl
mov
dec
mov
scas
call
icebp
mov
jle
fwait
scas
shl
cli
imul
pushf
ins
mov
mov
pop
adc
shl
xchg
sub
sbb
aas
lock
mov
ins
sub
(bad)
mov
inc
scas
scas
in
out
sbb
xlat
arpl
stos
(bad)
mov
int
xchg
inc
hlt
mov
popf
and
mov
mov
xor
lods
mov
ror
aad
dec
adc
stos
ds
ret
add
ret
adc
dec
call
cmc
jmp
jle
(bad)
shr
test
xlat
xlat
adc
fcomi
call
mov
sub
stos
jge
out
inc
mov
mov
pushf
sub
lods
sub
pop
dec
xlat
(bad)
stos
cld
das
in
sub
mov
enter
adc
and
xchg
pop
mov
sub
loope
sar
aas
xchg
pop
push
mov
pop
leave
dec
and
aam
and
fiadd
pop
xor
outs
xor
(bad)
ds
int3
cmc
in
jmp
mov
jecxz
cli
pop
loope
jne
icebp
inc
and
stos
cs
mov
mov
inc
scas
arpl
outs
stc
neg
cs
xor
in
in
std
lahf
xchg
js
add
mov
sub
call
js
mov
sub
js
push
mov
push
fisttp
adc
into
dec
sbb
js
xor
adc
mov
cli
jo
aas
xchg
xor
sub
sbb
mov
(bad)
in
stos
fcom
cmps
xchg
fld
xchg
imul
cmovbe
and
stos
push
jmp
stc
jno
mov
pop
dec
push
dec
jo
xor
or
cmps
and
pop
jge
(bad)
push
into
mov
retf
cwde
cmps
xor
mov
sub
daa
cmp
jge
(bad)
xlat
adc
mov
leave
(bad)
iret
in
cld
mov
sub
cwde
retf
dec
sub
lea
cs
js
nop
push
dec
out
in
mul
mov
xchg
in
stos
add
mov
pusha
jns
mov
push
xor
jle
cmp
jmp
and
iret
cmp
and
push
and
cwde
xchg
cmp
daa
sar
arpl
mul
pop
fimul
xor
pop
in
je
cld
dec
ret
imul
in
sub
add
fldenv
sub
inc
jbe
leave
daa
test
std
push
out
outs
gs
cmp
shl
xchg
adc
add
out
aas
ds
and
(bad)
push
sbb
add
mov
sub
cdq
push
data16
and
jmp
dec
pop
arpl
loope
adc
mov
add
add
xlat
fdiv
cwd
xchg
inc
xchg
test
xchg
dec
pop
xor
mov
mov
shl
cmps
add
sub
adc
std
inc
mov
pop
xlat
inc
xchg
ret
add
pop
mov
mov
xchg
sbb
mov
xchg
adc
rcl
fisubr
ds
mov
pop
leave
aaa
sub
sbb
rol
dec
or
mov
pop
lea
push
push
push
pop
adc
dec
dec
dec
(bad)
retf
in
call
fidiv
mov
and
push
xchg
jecxz
sub
dec
retf
aam
fmul
out
inc
sub
jg
inc
jmp
add
mov
popf
push
jmp
dec
mov
sbb
fisub
cmp
mov
jbe
fild
push
push
imul
push
dec
pop
and
scas
mov
stos
lea
retf
out
or
gs
repnz
shr
xchg
aam
mov
mov
mov
cmp
cmp
mov
jmp
outs
mov
ja
add
std
hlt
sbb
xchg
jmp
dec
aas
popa
sbb
inc
sub
jb
sub
cmps
stos
movs
xor
ror
inc
and
xchg
sahf
inc
add
push
and
xchg
jae
pop
rcr
jecxz
movs
les
cmp
mov
sbb
mov
and
vsubpd
or
add
lods
push
pop
pop
cmp
mov
sbb
rcl
push
ficom
xchg
inc
mov
fcom
push
les
(bad)
sbb
loope
hlt
mov
xchg
or
push
inc
xor
test
xor
inc
dec
inc
div
clc
xchg
popa
cmps
push
and
adc
mov
push
hlt
mov
xchg
sbb
stos
imul
les
xlat
data16
xchg
aas
fdiv
sub
dec
mov
sub
call
popf
stos
dec
jno
cmp
add
cli
popf
add
sub
xor
push
mov
add
mov
movs
mov
jge
jno
outs
fucomi
pop
pop
mul
xor
push
loopne
push
sbb
xchg
adc
mov
inc
cmp
push
scas
(bad)
aad
mov
pop
or
(bad)
mov
mov
stos
and
into
imul
add
mov
sbb
cli
mov
dec
jne
loop
jno
aam
cmp
xor
outs
sbb
mov
jle
pop
ds
add
sar
push
xlat
in
test
cmp
mov
test
dec
enter
(bad)
bound
scas
outs
loop
in
(bad)
cmp
lods
adc
test
push
lea
sbb
xor
sbb
sub
mov
iret
mov
(bad)
lods
les
movs
stos
mov
push
mov
mov
sbb
cmps
pop
fld
pop
fsubp
mov
in
and
cmps
adc
xor
push
dec
xchg
(bad)
mov
sar
mov
out
sbb
jle
cld
mov
pushf
mov
jae
push
rcl
push
adc
in
add
dec
sub
test
dec
xlat
jbe
fldenv
sbb
add
mov
dec
jp
pop
je
js
add
mov
retf
repnz
int3
hlt
push
fwait
shl
jecxz
call
add
cmp
sbb
mov
adc
jecxz
jo
ffree
shr
outs
jb
dec
mov
xchg
call
add
xor
push
mov
in
inc
cmps
pop
ja
outs
push
mov
lds
or
sbb
and
lods
xor
dec
rol
(bad)
pop
movs
lea
movs
je
mov
in
outs
mov
int
fcmove
jne
dec
mov
js
adc
xchg
sbb
js
test
outs
add
mov
mov
mov
xchg
cmp
mov
xchg
jnp
xor
push
pop
outs
xlat
push
rcl
test
jns
popf
arpl
enter
jmp
or
add
pop
nop
xor
and
dec
lods
dec
popa
sti
dec
pop
enter
push
xchg
jns
jg
mov
add
sub
add
cmp
sub
clc
mov
fwait
pop
sahf
add
pop
fist
stc
loope
dec
jmp
jge
stc
inc
xchg
cmc
mov
cli
sbb
mov
inc
mov
shl
dec
pop
mov
xchg
xor
sbb
inc
push
xor
sbb
xchg
ds
add
inc
push
pop
loope
inc
std
mov
rcr
adc
mov
or
lds
sbb
dec
adc
das
sbb
rcl
mov
cdq
push
fisttp
pop
outs
loop
or
xchg
cmp
mov
mov
std
(bad)
imul
mov
js
sbb
adc
aas
dec
sbb
(bad)
lahf
xchg
jmp
push
add
sub
sbb
xor
and
icebp
mov
inc
or
push
and
out
mov
mov
in
jno
mov
shr
mov
stc
mov
jecxz
ret
outs
dec
rcr
sbb
xor
jne
mov
stos
call
sub
inc
lea
xor
ss
cmp
dec
or
push
pop
dec
mov
or
arpl
call
push
imul
sbb
jle
sub
adc
dec
enter
add
mov
mov
sar
inc
xchg
or
leave
and
or
jmp
add
movs
xchg
adc
in
aad
xchg
pop
adc
sub
js
aas
push
sub
jo
mov
push
xor
imul
sub
push
mov
cmps
scas
lods
sahf
cdq
cmp
dec
xor
pop
addr16
jmp
gs
mov
lods
mov
mov
jmp
mov
adc
push
(bad)
push
xchg
pop
dec
mov
sub
and
adc
hlt
scas
lahf
inc
aad
and
jecxz
leave
lea
push
and
and
test
mov
sub
push
cmps
and
int3
popa
push
loope
loope
stos
inc
cmps
sub
dec
mov
(bad)
lods
vandps
mov
cdq
mov
mov
jne
imul
fbstp
jne
sbb
add
call
cmps
aam
sub
pop
pop
cmp
add
movs
push
push
scas
push
mov
inc
mov
fs
xchg
out
out
pop
jne
push
(bad)
cmc
push
leave
(bad)
fs
cmp
add
dec
mov
adc
int3
out
cdq
imul
stc
cli
jne
mov
pop
cwde
lea
arpl
pop
sub
add
adc
jecxz
std
popa
std
loope
jae
pop
aam
dec
inc
lods
pop
movs
add
push
push
xor
cmps
xchg
stc
aam
(bad)
adc
cmp
mov
cmc
lods
and
adc
or
jmp
jge
pop
pop
pop
fwait
add
test
(bad)
push
push
lea
push
sbb
imul
push
jmp
jle
add
out
dec
jno
sbb
aad
sub
lods
jp
call
push
enter
sti
mov
(bad)
cld
adc
daa
fidivr
iret
mov
mov
or
push
aam
or
xor
pop
sbb
push
les
shl
fs
sar
js
mov
adc
imul
jg
or
outs
or
fbld
int
pop
stos
inc
or
int
fild
dec
in
pop
movs
repnz
pop
push
jmp
mov
(bad)
xchg
out
out
sub
retf
cmp
les
push
movs
popa
mov
movs
sub
fld
movaps
lods
adc
ins
ss
inc
jp
es
sbb
adc
daa
addr16
cmp
fimul
push
xchg
repnz
cmps
pop
jbe
dec
push
jo
popa
enter
daa
mov
push
inc
mov
mov
jno
shr
add
dec
scas
or
and
dec
cmp
dec
repnz
jp
stos
push
xchg
cmps
xchg
stos
xchg
xchg
cs
xor
sbb
in
ins
shl
mov
mov
push
sahf
daa
lock
or
clc
mov
stos
aam
adc
test
ins
fadd
mov
xor
xor
retf
mov
mov
pusha
cmps
push
push
or
ror
rcr
pop
scas
movs
scas
cmps
jmp
jmp
xor
inc
setbe
inc
pop
retf
stos
pop
int
arpl
push
movs
or
and
jno
xor
jo
xor
test
gs
cmp
jmp
stos
mov
push
pop
dec
xchg
push
xchg
je
inc
imul
mov
or
mov
adc
mov
aad
stos
xor
out
mov
gs
and
test
maxps
xchg
nop
call
aas
jns
shl
icebp
inc
aaa
lds
xor
mov
test
or
mov
aam
sti
test
or
pop
or
dec
jbe
and
push
pushf
or
push
pop
dec
data16
push
enter
sbb
cbw
iret
dec
sub
outs
and
push
xchg
pop
imul
xchg
sbb
shl
das
shl
cmps
ficom
sub
icebp
push
push
mov
movs
inc
add
repz
mov
dec
or
jmp
jmp
xor
aaa
and
imul
in
and
outs
inc
inc
mov
mov
cmp
push
ficom
rol
dec
and
pushf
out
cmps
inc
mov
fwait
xchg
aam
mov
cmp
lds
cmps
repnz
arpl
sbb
jmp
es
add
pop
icebp
in
loopne
mov
push
xchg
pop
int3
jno
or
cmp
inc
adc
retf
daa
sbb
(bad)
in
jmp
xchg
cmp
jb
movs
shl
mov
inc
lds
pop
push
jecxz
and
std
out
lea
mov
cwde
mov
and
xchg
sar
mov
push
sub
lds
sahf
xor
test
pop
jg
xor
ss
fnstenv
sbb
nop
xlat
int3
jmp
push
adc
push
cmp
pop
push
inc
stos
fdiv
jmp
nop
mul
mov
imul
dec
jne
inc
stos
or
sahf
and
push
retf
jbe
ss
xor
sub
sbb
pop
jge
inc
push
dec
mov
ins
sbb
(bad)
cmp
mov
mov
or
inc
push
dec
into
lahf
jmp
enter
mov
hlt
lock
ret
jmp
out
push
dec
sti
jp
call
fidiv
xor
xchg
cmc
cmps
dec
mov
data16
dec
push
call
xchg
adc
add
mov
xchg
jmp
imul
loop
mov
daa
dec
imul
addr16
sbb
push
pop
adc
xor
cmps
xor
inc
lods
jmp
mov
(bad)
xor
repnz
pusha
mov
fsub
mov
cmp
ds
cld
(bad)
push
test
cmp
add
add
push
add
push
xchg
sbb
out
sub
mov
sub
inc
push
les
and
fisubr
push
into
rol
lea
mov
dec
das
fld
retf
call
das
or
inc
mov
push
or
inc
lods
jae
mov
xchg
push
stos
sub
jecxz
adc
jmp
sub
mov
add
imul
scas
or
stc
hlt
jle
jecxz
mov
sub
arpl
sahf
mov
jmp
and
sahf
adc
popf
and
outs
retf
enter
jne
push
and
btr
pop
imul
data16
in
jle
cmp
cmp
nop
(bad)
sbb
js
sti
cmp
sti
aas
aas
push
dec
mov
daa
out
xchg
leave
loop
mov
imul
xlat
loopne
(bad)
xlat
fldenv
sbb
jl
outs
sahf
js
adc
sahf
(bad)
xor
mov
push
(bad)
pmaddwd
cmp
cmp
pop
and
xchg
adc
inc
repnz
fwait
(bad)
jne
jmp
and
add
ds
aas
cmc
push
xchg
lods
repnz
dec
cmc
pop
add
jle
cmp
(bad)
adc
loope
mov
int
mov
fidiv
test
fld
jge
imul
jnp
test
hlt
cld
pop
daa
xchg
add
cli
fstp
jo
add
and
ret
pop
jmp
sub
sub
pop
ja
mov
mov
in
out
imul
adc
or
call
jge
add
xor
push
sbb
jmp
sub
movs
pop
(bad)
inc
mov
repz
adc
or
rcr
dec
sub
cmp
inc
adc
push
inc
mov
mov
mov
mov
dec
cmp
(bad)
cmps
inc
inc
out
in
mov
mov
cmps
call
lds
push
call
pop
aad
cdq
movs
lods
outs
or
mul
repnz
push
imul
pop
arpl
movs
aas
pusha
aas
jmp
retf
push
add
push
dec
addr16
shl
or
mov
mov
mov
xor
in
dec
and
cmp
std
sub
inc
pop
jb
(bad)
int3
mov
or
sbb
rol
xor
aas
xchg
jg
movs
mov
adc
add
jno
pop
adc
sub
and
movs
mov
test
loope
xchg
inc
push
adc
mov
mov
retf
enter
cmp
test
fs
jns
xlat
mov
sub
jg
xchg
loop
jmp
retf
repz
test
dec
dec
adc
sub
adc
mov
jp
add
or
gs
add
add
rcl
mov
sub
xchg
lahf
sub
mov
clc
loope
sub
sub
xchg
outs
or
cmp
nop
sar
int3
xor
mov
mov
push
cmp
xor
out
in
adc
mov
inc
mov
inc
loope
dec
loopne
lock
dec
retf
test
cwde
mov
mov
xor
adc
cmp
sub
jno
loope
hlt
ins
jmp
xor
lds
add
sar
stos
adc
in
sbb
cmp
ins
rcl
push
pop
push
pushf
imul
es
pop
jmp
ss
pop
sub
mov
adc
or
aas
and
and
inc
sti
inc
mov
mov
or
lock
mov
mov
inc
xor
mov
mov
aas
mov
sbb
(bad)
jecxz
mov
mov
dec
mov
cdq
push
cmp
xchg
mov
add
aad
(bad)
fnsave
or
call
pop
retf
add
call
mov
cs
add
adc
aad
js
add
xor
fistp
or
pop
fmul
jmp
in
imul
add
scas
add
mov
call
movs
inc
dec
sbb
xor
imul
jnp
or
xor
mov
inc
ror
add
in
rcl
rcl
inc
lea
dec
adc
or
int3
jp
or
jne
and
mov
pop
repz
cmp
jbe
aad
jl
sbb
sbb
mov
ja
mov
add
movs
aam
adc
repz
cmp
sbb
dec
lea
push
lock
sub
das
add
mov
cmp
int3
jns
mov
lds
mov
or
scas
repnz
and
(bad)
setg
cmp
fcomp
add
(bad)
call
mov
add
fdiv
jg
(bad)
aaa
dec
jne
mov
add
lods
add
cmp
repz
lods
jae
ror
pusha
mov
js
push
adc
cmp
sbb
stc
or
(bad)
movs
cmps
mov
inc
xchg
mov
cdq
add
movs
dec
mov
mov
aas
dec
lods
les
cmp
sbb
jmp
enter
sub
hlt
and
(bad)
mov
mov
add
push
sahf
pushf
mov
cmp
xor
movs
adc
xchg
and
lahf
lods
xchg
inc
scas
leave
shr
out
(bad)
in
sti
retf
pusha
gs
or
push
dec
lock
inc
mov
mov
cdq
cmc
or
cwde
inc
cvtps2pd
pslld
xor
aas
bound
pop
scas
lea
xchg
aas
push
stc
hlt
nop
stos
test
inc
nop
mov
jmp
jns
mov
cmp
and
xor
push
jle
lahf
cmp
test
mov
popa
adc
ds
push
pop
lods
lahf
loope
pop
push
cmc
out
inc
dec
fwait
enter
out
(bad)
popf
xor
ss
mul
pop
dec
(bad)
test
scas
shr
push
mov
aaa
pop
retf
mov
(bad)
(bad)
out
add
movhps
iret
mov
out
call
js
jecxz
loopne
xor
mov
mov
pop
or
loopne
push
push
and
sub
adc
lods
rcl
mov
sub
xor
movs
lods
push
(bad)
jge
lods
fs
retf
(bad)
sti
add
aaa
mov
stos
or
push
add
outs
push
and
xor
fld
sbb
iret
int3
xchg
repz
lahf
loopne
call
inc
and
imul
fs
xor
test
imul
mov
mov
pusha
fsub
xchg
mov
cld
stos
in
xchg
dec
jecxz
ja
or
sahf
add
loopne
push
and
adc
sbb
stos
xchg
sbb
in
in
repnz
adc
dec
xchg
dec
mov
jb
pop
xor
xor
std
pop
cs
(bad)
xlat
pop
(bad)
jne
inc
mov
push
data16
cmps
cmps
push
mov
or
cwde
mov
stc
and
inc
data16
mov
fadd
xor
ret
cld
mov
je
in
retf
sub
scas
xor
adc
mov
xchg
add
xchg
cmps
pop
pop
pop
pop
mov
and
aam
leave
push
push
out
or
bound
hlt
mul
in
sbb
xchg
push
jge
inc
sub
jnp
cmp
je
adc
jb
repnz
je
arpl
sbb
mov
cwde
inc
shl
cs
pop
or
inc
sbb
popa
and
mov
pop
repz
add
inc
add
aas
cmc
jns
ds
pop
jb
xor
lods
into
not
dec
sbb
and
movs
sub
push
xor
xor
adc
sbb
xchg
ficomp
rcr
xchg
sti
cmp
mov
jmp
adc
sbb
mov
xor
dec
mov
and
push
and
scas
cmp
mov
adc
inc
xchg
mov
or
mov
cli
shl
pop
inc
je
push
sbb
pop
cmc
in
push
jb
or
fstp
dec
js
push
jmp
dec
repnz
push
mov
fcomp
mov
jle
pop
dec
scas
out
out
pop
xchg
pop
aam
xchg
dec
les
adc
ins
test
sub
push
or
xor
mov
sahf
in
mov
sub
pushf
clc
pop
xchg
nop
push
push
dec
sub
movs
stos
or
int
or
sub
popa
cmps
shl
loope
mov
test
pop
pop
fcmovnbe
js
sub
push
cmps
mov
or
push
or
xchg
daa
and
mov
scas
leave
cmps
bound
aas
mov
sbb
popf
popa
outs
loope
dec
push
test
dec
hlt
mov
xor
test
add
pop
xor
push
outs
fmul
sub
mov
and
xor
out
jecxz
es
sub
pop
inc
retf
mov
cwde
xor
dec
outs
int
add
int
mov
pop
dec
and
pop
xchg
les
add
popf
inc
and
ins
mov
adc
dec
lods
jmp
int
daa
xchg
cmp
bound
movs
mov
jns
cli
lahf
data16
imul
cmp
ror
sbb
in
scas
add
cmp
mov
dec
xchg
xchg
adc
jecxz
aad
out
push
push
icebp
pop
sbb
or
scas
mov
pop
scas
xor
sub
add
outs
pop
mov
pop
rol
cmp
or
dec
loopne
xchg
shl
(bad)
fidivr
ror
out
xlat
enter
inc
push
out
arpl
cmps
push
inc
cmc
cwde
cmc
repnz
scas
add
cmps
push
or
push
stos
sahf
sub
in
nop
fcmovnu
call
push
cld
sub
xchg
inc
aam
mov
(bad)
(bad)
int3
dec
pushf
sub
and
dec
xor
pop
add
sbb
mov
pop
repz
push
movs
jle
sbb
ret
sbb
sbb
imul
xchg
retf
imul
mov
lock
push
cmps
mov
sbb
fist
int
mov
fwait
ret
cmps
sbb
mov
mov
scas
push
stos
jecxz
sti
repz
cld
mov
popa
pop
xchg
jno
or
jge
sub
mov
cmp
into
xchg
add
into
stos
lahf
arpl
frstor
fcmovbe
aam
add
jb
(bad)
xchg
mov
pop
mov
adc
in
mov
rcl
dec
or
inc
and
cmp
and
jmp
jmp
ja
inc
jne
mov
jb
sbb
test
and
imul
cmps
mov
mov
call
xchg
xlat
cld
(bad)
call
mov
inc
and
lods
mov
aam
retf
test
adc
inc
or
retf
xor
push
nop
into
dec
or
sar
sbb
pop
movlps
int
add
fwait
popa
adc
outs
mov
inc
pop
in
ds
test
repz
xor
or
sbb
test
inc
jecxz
jge
bound
ss
loop
adc
call
cmp
leave
jne
fldenv
jbe
sar
inc
add
in
jns
hlt
dec
mov
pop
scas
dec
sub
push
xchg
and
xor
fmul
outs
data16
mov
and
mov
mov
push
stos
pushf
push
sti
push
xchg
jp
dec
mov
imul
pop
mov
mov
dec
gs
dec
ret
mov
imul
jbe
mov
sub
call
jb
add
sbb
sub
dec
ret
je
mov
lds
loopne
pop
dec
test
jno
movs
xchg
pop
rol
jns
(bad)
sbb
dec
or
sbb
push
mov
inc
bound
inc
sub
sbb
sub
xor
dec
aas
jmp
outs
and
test
mov
jle
imul
and
stc
xor
ja
fs
pop
ins
mov
ret
es
push
dec
cdq
inc
inc
enter
or
cli
(bad)
in
imul
mov
xchg
mov
adc
dec
(bad)
pop
test
js
daa
xlat
test
fdivr
fisubr
dec
lds
ins
popf
push
fist
add
pop
and
in
jae
cmp
push
cmp
sahf
cmp
addr16
sub
fidiv
loope
not
fadd
ins
mul
retf
test
dec
cld
mov
mov
fsub
cmp
xor
add
jecxz
jp
add
mov
imul
test
cmp
les
out
pop
jge
jmp
mov
cmps
dec
retf
(bad)
(bad)
pop
idiv
jp
and
popf
ins
enter
mov
cmp
xchg
dec
dec
pop
xor
mov
mov
pop
or
popf
sub
sbb
out
jge
cmps
mov
outs
inc
rol
xor
inc
imul
(bad)
pop
dec
fwait
inc
loope
lds
cmp
inc
pop
clc
jle
add
sub
dec
xchg
mov
fld
loopne
retf
cs
push
jg
fisub
hlt
pop
loop
loop
lahf
cmps
or
dec
(bad)
loope
es
add
or
add
mov
aas
cmp
cmp
inc
pop
imul
pop
xchg
(bad)
sub
enter
dec
adc
and
ss
xchg
lea
ficomp
jg
sbb
add
jne
fsubr
sub
add
pop
adc
arpl
fisttp
imul
std
adc
ds
out
adc
add
cld
dec
sbb
or
stos
and
lods
rcl
rcl
iret
inc
xchg
mov
inc
sbb
mov
mov
jns
push
loope
xor
jo
mov
mov
jecxz
in
std
retf
pop
mov
out
rcl
sub
aam
xchg
sbb
repnz
pop
mov
fstp
mov
fiadd
imul
retf
pop
jnp
mov
mov
push
in
jno
pop
fld
test
xchg
mov
jno
mov
mov
hlt
out
or
(bad)
push
cmp
mov
mov
(bad)
and
or
clc
mov
ror
sub
mov
mov
cmc
mov
jae
std
mov
ja
imul
jle
test
jae
imul
xchg
ret
fwait
add
xchg
push
lods
imul
rcl
sub
retf
cmp
cmc
pop
adc
cmp
arpl
out
outs
das
mov
inc
dec
fild
pop
and
cld
jmp
call
push
adc
aad
xchg
xchg
push
cmps
xchg
add
in
pop
inc
cdq
movs
sti
je
push
pushf
inc
stos
lahf
in
dec
out
bound
and
mov
(bad)
mov
sub
loop
cmp
dec
iret
mov
mov
dec
shr
dec
jl
sub
or
lahf
xchg
dec
mov
cmc
(bad)
lods
xchg
dec
dec
cmp
push
mov
and
and
jg
cmp
inc
or
push
aas
mov
imul
or
adc
aas
sub
xchg
pop
mov
fwait
push
imul
dec
push
lock
cdq
sbb
dec
repz
add
and
movs
mov
call
not
dec
and
cld
pop
scas
lods
pop
jo
call
aam
or
call
mov
or
xor
xor
cmps
pop
test
pop
loop
jecxz
or
add
cld
mov
cmc
jg
shr
push
retf
daa
adc
add
cmc
cmps
inc
pop
data16
lds
lds
sub
adc
sbb
pop
out
mov
cwde
cmp
mov
je
jbe
test
xchg
sub
mov
lahf
repz
lea
shr
xchg
ret
fs
push
scas
or
cli
vmptrst
add
cmp
stos
in
cmp
xchg
pop
add
cmp
enter
mov
mov
mov
add
neg
dec
mov
mov
mov
out
mov
push
xchg
pop
mov
jg
dec
retf
dec
xor
pop
sub
sbb
mov
ret
(bad)
(bad)
pop
(bad)
fucomp
(bad)
inc
sbb
es
or
cli
adc
outs
or
adc
jp
test
les
pop
arpl
lea
dec
ret
sbb
pop
aad
sbb
add
in
xlat
jge
(bad)
or
sbb
imul
mov
jbe
rcl
imul
jl
movs
xchg
xchg
scas
test
mov
mov
cmp
fldenv
push
loop
repnz
imul
pop
pop
(bad)
sahf
bnd
sbb
push
jae
push
clc
fwait
ins
scas
xchg
inc
mov
(bad)
and
test
fs
ds
sbb
int
sub
xchg
loope
dec
dec
push
sbb
les
xchg
out
sbb
imul
dec
or
sbb
scas
cmc
ds
(bad)
fidivr
(bad)
gs
adc
adc
stc
pop
cdq
inc
push
cmp
(bad)
mov
clc
sub
test
or
or
in
stc
imul
xor
js
push
cwde
sub
daa
test
sbb
in
sbb
dec
mov
push
(bad)
pusha
jge
sub
sbb
inc
out
daa
retf
repnz
and
inc
pop
popf
cmp
aam
movs
hlt
xor
push
push
adc
add
xchg
mov
mov
sbb
mov
add
cmc
test
xchg
iret
mov
cwde
popa
ret
mov
in
iret
inc
mov
jecxz
inc
mov
push
push
jno
pushf
dec
sub
ja
test
sub
add
ror
enter
sti
push
cmps
nop
add
dec
or
inc
mov
ins
jp
adc
mov
inc
rcr
sbb
inc
push
and
popf
sub
adc
sub
cdq
adc
out
mov
mov
cmps
mov
(bad)
sbb
mov
or
and
xchg
jmp
stc
jg
mov
(bad)
mov
sub
cmc
pop
and
mov
leave
sub
sbb
fs
inc
or
inc
inc
adc
repnz
sbb
push
in
je
call
mov
rol
ss
xchg
cmps
popa
out
mov
shl
jecxz
sbb
jmp
test
sub
or
out
in
push
pop
push
sbb
ss
inc
popa
adc
sbb
nop
push
lods
cmc
adc
inc
inc
or
cmps
scas
enter
and
inc
mov
inc
cmp
(bad)
outs
loope
movs
sahf
bound
mov
and
fcomi
in
aas
jge
jbe
imul
pop
test
es
movs
pop
out
addr16
ins
aaa
cmp
test
icebp
add
sub
mov
push
(bad)
popf
or
mov
dec
ins
or
dec
inc
cmc
ret
shr
xor
(bad)
loop
adc
rcl
ret
es
pop
mov
stos
sti
xchg
stc
aas
cdq
into
(bad)
shl
repz
repz
jae
add
sub
dec
sub
sbb
test
sbb
repz
ja
out
mov
ins
push
(bad)
icebp
mov
add
lods
adc
or
imul
dec
outs
(bad)
fwait
xchg
out
retf
pop
aaa
in
mov
jle
sub
cmps
mov
push
aad
or
sub
out
inc
mov
and
loop
mov
inc
adc
push
shl
cmps
loop
popf
mov
data16
arpl
rcr
jae
mov
pop
sub
dec
inc
cmp
scas
mov
test
cmps
bound
test
pop
shl
loopne
push
ins
sbb
sbb
xor
outs
sbb
inc
lods
sub
cli
jg
rcl
mov
xor
scas
pop
cmps
retf
out
stos
mulps
inc
imul
push
js
inc
in
pusha
sbb
arpl
jno
fcmovnu
arpl
push
mov
add
adc
jno
sahf
xchg
fdiv
add
sub
stos
mov
xor
add
call
rol
test
push
or
aam
push
mov
div
cdq
push
cmp
pop
gs
div
movs
mov
jno
pop
push
push
pop
adc
cmp
or
cmc
pop
repz
push
rol
adc
xor
test
sbb
push
dec
sub
pop
cmp
rol
xchg
sbb
or
out
push
inc
cmps
pop
mov
mov
push
(bad)
rcr
in
mov
aad
mov
iret
and
sub
pop
pop
fsubr
mov
loope
setle
stos
mov
adc
rcl
xchg
sub
mov
das
ja
xor
xchg
in
inc
cld
mov
inc
mov
and
fs
arpl
addr16
pushf
int
mov
and
dec
pop
sub
xchg
stc
and
push
add
loop
inc
scas
jge
fwait
xchg
fcomp
pop
mov
ds
ret
retf
pop
xor
cvtpi2ps
iret
iret
test
jge
or
sbb
je
xchg
sub
sbb
inc
inc
cwde
cdq
push
xchg
pop
cmc
cld
sti
push
ins
outs
(bad)
loopne
ds
xor
jecxz
inc
nop
add
fidiv
loope
push
mov
hlt
repz
arpl
mov
push
push
adc
adc
movs
mov
fld
inc
out
add
(bad)
and
inc
ds
leave
test
mov
dec
jns
jl
ins
rcl
sub
les
sub
pop
sbb
add
inc
shr
sub
add
(bad)
mov
cmp
(bad)
inc
les
lods
push
in
scas
push
mov
outs
pop
sub
aad
mov
mov
(bad)
sbb
push
sar
sub
inc
push
imul
arpl
push
push
xchg
mov
xlat
mov
daa
ins
scas
retf
pop
data16
cmps
lds
cmp
call
test
push
imul
pop
shr
mov
push
pop
cmp
hlt
jmp
inc
and
(bad)
push
scas
icebp
aad
retf
movs
xchg
fsub
aam
and
xchg
(bad)
cli
jnp
push
addr16
mov
stos
mov
or
push
or
cmp
cmp
add
retf
pop
iret
lods
ret
sbb
and
(bad)
xchg
push
sub
lahf
jp
jo
ja
test
and
xchg
mov
repz
adc
mov
push
mov
sar
mov
(bad)
(bad)
sub
loope
mov
jns
mov
dec
hlt
in
adc
mov
aam
dec
dec
push
adc
fld
dec
dec
lock
lods
dec
inc
mov
(bad)
push
push
(bad)
fld
add
xchg
xor
ss
jecxz
mov
cmc
cmp
jp
rcl
loop
jecxz
dec
lods
xor
dec
xlat
sbb
fistp
inc
mov
mov
push
or
push
out
or
ret
and
(bad)
mov
(bad)
int
mov
fsubr
pusha
out
iret
push
dec
fucomip
and
xor
ror
(bad)
xor
fcomp
(bad)
repnz
adc
add
(bad)
shl
cdq
ss
push
and
inc
xor
sbb
push
nop
mov
pop
add
sar
rcl
pushf
push
xor
mov
xchg
int
clc
push
cli
gs
xchg
sub
retf
jle
setno
je
xor
out
cwde
rcl
push
aam
and
test
pop
in
int
xor
add
xchg
mov
call
movs
adc
in
out
stc
icebp
mov
xchg
jp
fadd
sub
ins
call
jo
cmp
jl
inc
scas
jno
jp
fstp
jecxz
inc
push
dec
mov
mov
jge
ret
push
xor
push
dec
loop
mov
xchg
sbb
and
jb
leave
xchg
xor
stos
pop
xchg
popf
cmp
inc
adc
mov
inc
arpl
sub
out
pop
stos
push
pop
cmp
dec
xchg
hlt
sub
mov
push
push
iret
fcmovbe
arpl
push
sahf
dec
inc
mov
leave
push
mov
js
xlat
repz
and
xor
daa
push
cmps
test
inc
push
icebp
push
addr16
mov
add
arpl
stc
jns
mov
out
cmp
call
mov
jecxz
dec
lds
xchg
dec
push
xor
dec
sub
xor
sub
idiv
int
shl
in
and
adc
mov
stc
adc
lea
rcr
pminub
ret
stc
cld
mov
or
retf
push
pop
dec
cli
pop
(bad)
shl
mov
xchg
add
and
hlt
repz
div
mov
sbb
or
xor
inc
cmp
cmps
lods
sbb
cmp
cmp
rol
push
and
into
xchg
mov
cdq
sub
test
mov
cmp
adc
test
arpl
jecxz
mov
test
fwait
sti
sub
inc
push
aad
adc
adc
push
xchg
pop
lahf
sub
lods
add
pop
cmp
inc
stos
mov
jp
je
fcom
ins
daa
icebp
sbb
dec
mov
scas
or
sahf
xchg
stos
xchg
std
(bad)
cmp
or
or
and
cmp
pop
or
inc
loop
jae
sub
aas
cmp
pop
or
ret
les
adc
xor
xor
mov
mov
add
mov
add
fisubr
pop
not
movs
or
shl
xchg
mov
sub
sbb
pop
dec
push
movs
adc
dec
sbb
popf
jp
pop
and
mov
idiv
push
call
cmc
rcl
ds
cmp
dec
dec
mov
inc
push
cmp
jnp
call
add
mov
movs
xor
add
inc
int
je
imul
mov
push
ret
sub
shl
mov
cli
rcl
adc
pop
ror
pop
push
add
mov
push
mov
retf
mov
inc
cmps
or
out
or
dec
pop
shr
pop
sbb
jle
jo
mul
jg
call
pop
jp
adc
ss
inc
and
sub
xor
inc
dec
repnz
xchg
xchg
lds
xchg
inc
cli
dec
and
gs
inc
pop
in
call
imul
cmps
hlt
cmp
jb
and
sbb
push
jb
stos
xor
std
mov
sbb
xchg
dec
pop
mov
nop
add
pop
cmp
cmp
lds
inc
cmps
sub
ins
movs
mov
jnp
lea
arpl
(bad)
sbb
stc
jns
push
push
dec
push
int3
xlat
push
stc
add
nop
lahf
out
push
xchg
sub
enter
mov
idiv
in
movs
inc
arpl
out
mov
cmps
in
or
in
and
push
cmp
clc
or
nop
int3
pusha
sahf
cmps
add
ja
mov
xchg
aas
outs
movs
in
mov
gs
sub
outs
mov
imul
jb
sbb
iret
cmps
shl
inc
shr
out
and
add
adc
mov
arpl
stos
(bad)
int3
mov
lds
cmps
sub
shl
pop
sub
mov
push
pop
xor
mov
jg
std
xchg
frstor
mov
(bad)
jno
rcr
(bad)
and
cmps
retf
xor
xchg
xor
test
aaa
sahf
or
test
inc
or
pop
push
nop
lahf
lock
or
inc
(bad)
inc
jl
add
jle
rol
movs
add
mov
(bad)
pop
pop
xlat
movs
push
push
cmps
retf
(bad)
shl
push
jne
das
outs
in
or
adc
and
lahf
in
je
out
and
jl
push
mov
mov
add
mov
shl
ds
fwait
jge
call
je
jb
shl
js
push
pop
add
xor
pmulhw
cmps
mov
jmp
pop
dec
movzx
leave
push
push
pop
xchg
retf
rcl
(bad)
(bad)
cmps
push
ds
(bad)
repnz
movs
jo
ja
mov
outs
dec
mov
scas
loopne
outs
mov
xor
pop
lock
push
rcl
in
mov
cmps
mov
mov
xchg
push
inc
pop
push
enter
aad
popa
jbe
push
retf
sbb
and
sbb
repz
pop
or
and
stos
push
fcomp
inc
pop
sti
(bad)
or
push
mov
call
dec
xor
pop
lahf
scas
push
jne
std
(bad)
repz
xor
mov
sbb
push
in
and
or
inc
mov
dec
cmp
ret
push
mov
adc
sub
xor
sub
push
and
pop
mov
(bad)
outs
pusha
shr
mov
sub
mov
push
push
mov
mov
cmp
sbb
mov
enter
xchg
inc
and
arpl
test
aam
jne
adc
and
jmp
or
fs
jno
sbb
adc
cmps
mov
jp
or
sub
dec
pop
test
or
cmps
std
mov
adc
ror
inc
rol
xor
push
xchg
test
mov
jmp
adc
ins
gs
jnp
ss
pop
mov
dec
sbb
test
jo
push
add
mov
test
mov
shr
ret
mov
sbb
icebp
bnd
mov
cmc
leave
push
and
sub
xchg
sbb
dec
shr
push
mov
push
pop
dec
jae
retf
imul
push
cs
add
sar
or
jmp
or
or
xor
cmp
sbb
mov
inc
ss
sub
sahf
sahf
sahf
inc
add
ret
push
push
sub
fwait
jae
push
neg
pop
(bad)
div
adc
call
pop
call
xchg
nop
push
nop
sar
push
mov
inc
mov
stos
push
inc
mov
scas
stos
dec
adc
xlat
and
in
lds
jg
stos
push
pop
or
ins
mov
rol
pop
sub
pushf
hlt
leave
adc
push
mov
cld
mov
into
cmps
bnd
cld
cmp
mov
mov
jmp
inc
or
mov
dec
int3
dec
test
mov
mul
repnz
inc
push
or
rcl
test
sub
cwde
das
mov
test
add
jmp
(bad)
mov
push
mov
jne
xor
add
sub
xor
inc
add
sbb
cmps
xor
int3
push
adc
xchg
xor
push
ss
add
xchg
sar
mov
(bad)
mov
inc
push
push
xor
mov
ret
sub
inc
dec
sub
dec
lods
ds
lea
test
xchg
aad
jg
dec
hlt
test
imul
fiadd
imul
in
cmps
inc
fwait
dec
out
xchg
dec
aad
adc
cmp
mov
stos
mov
mov
sahf
test
mov
icebp
aam
push
cmp
movs
mov
adc
push
pop
mov
jo
movs
sub
outs
aam
sbb
cmps
movs
aam
movs
inc
xchg
retf
adc
fnstenv
pop
cmp
(bad)
(bad)
mov
dec
movs
loopne
sbb
das
es
jecxz
xchg
push
or
sub
mov
(bad)
add
xchg
push
ins
jne
pop
and
scas
stc
cmp
sar
add
(bad)
nop
mov
sub
mov
(bad)
sub
xor
cmc
mov
fsub
verr
cmp
cmp
mov
pop
xchg
sub
pop
lock
stos
pop
leave
cmp
stos
mov
aam
push
ins
inc
stos
xchg
int3
scas
adc
mov
cmps
inc
mov
test
fcomp
push
lds
mov
add
xchg
pop
call
(bad)
fstp
sub
nop
xor
sub
aas
nop
repz
mul
and
enter
ror
lods
dec
or
(bad)
push
pop
adc
add
xchg
and
rcl
mov
mov
repz
addr16
frstor
cmps
lahf
nop
repnz
jl
iret
pop
lods
adc
jno
into
sub
mov
loop
xchg
push
inc
push
pusha
test
scas
push
pusha
mov
lods
(bad)
hlt
jecxz
sub
out
pop
xor
pop
aam
pop
retf
mov
mov
xchg
call
repz
loope
clc
test
bound
push
sbb
stos
inc
int
jo
test
sbb
xlat
cmp
mov
jnp
mov
inc
mov
ret
in
inc
push
jp
dec
add
mov
mov
test
in
sub
sbb
sahf
mov
add
or
aad
cmp
lahf
cmps
mov
and
push
sbb
(bad)
xchg
scas
dec
in
mov
push
xor
push
push
jne
daa
pop
push
retf
add
sub
stos
mov
pushfw
mov
adc
sub
or
jo
sbb
xor
lock
xor
out
in
and
cmps
sub
imul
aas
xchg
and
mov
add
mov
lods
(bad)
mov
(bad)
loope
test
pop
mov
or
stc
jge
adc
outs
adc
push
test
or
mov
hlt
pop
jecxz
lods
lods
call
and
ss
adc
jge
movs
aaa
mov
xor
bound
push
retf
movs
imul
adc
enter
push
stos
imul
jmp
mov
imul
in
ror
loope
xchg
jmp
cmp
pop
jno
adc
add
xchg
repz
sbb
jo
dec
outs
das
ins
inc
mov
std
sbb
xor
jg
in
(bad)
dec
sbb
dec
dec
or
iret
pop
arpl
fs
enter
and
add
scas
or
mov
popa
sub
dec
test
sub
ds
das
pop
ds
in
rcr
mov
cmp
icebp
and
mov
xchg
scas
xchg
cmps
mov
xor
xor
adc
and
pop
xchg
arpl
mov
inc
je
push
(bad)
in
retf
pop
jge
or
adc
std
(bad)
mov
jne
lahf
adc
sub
and
mov
push
lods
jno
inc
mov
adc
bound
test
adc
and
adc
dec
inc
cmps
psubusw
cld
inc
lahf
push
xchg
gs
xchg
xlat
loope
push
in
xor
jecxz
sbb
cli
fwait
iret
mov
mov
inc
fcmovne
mov
jp
or
pop
(bad)
leave
(bad)
(bad)
mov
jp
add
in
daa
mov
jne
inc
xor
mov
jl
jecxz
inc
adc
add
test
dec
imul
sbb
(bad)
addr16
push
in
aaa
mov
push
xchg
inc
inc
xor
call
cmp
out
pop
cld
call
lea
ror
and
cmps
and
and
jmp
pop
push
push
sub
scas
sub
lds
or
imul
jno
scas
not
int3
or
test
xor
lock
xor
movs
orps
sar
es
movs
cmps
test
sbb
sub
leave
jmp
cmps
inc
cdq
jne
sub
xchg
sbb
out
div
xlat
mov
pop
sbb
pop
pop
dec
shl
dec
sbb
mov
mov
mov
sbb
push
xor
sub
sub
inc
je
cs
inc
push
push
mov
mov
jnp
out
into
mov
jmp
mov
mov
cmps
scas
outs
inc
int
and
jecxz
sub
stc
hlt
and
imul
sbb
lea
mov
and
inc
mov
ins
mov
cmp
iret
seta
adc
arpl
jle
add
push
shl
sbb
push
repnz
mov
movs
repnz
in
cmps
aaa
stos
test
outs
sub
(bad)
stos
imul
inc
sub
mov
(bad)
mov
movs
and
cli
push
add
jns
dec
mov
jno
push
cli
(bad)
push
and
adc
pop
dec
xlat
int3
out
inc
sub
dec
mov
popf
es
push
sub
data16
std
dec
jle
leave
out
cs
cmp
bound
xchg
xor
stc
jo
mov
loope
and
ret
call
popf
fwait
sbb
(bad)
push
repnz
mov
mov
shr
fdivr
ds
xchg
sbb
inc
and
xchg
mov
je
das
ins
scas
fcomp
lods
imul
add
retf
inc
adc
cdq
and
lods
scas
scas
pop
iret
xlat
dec
cwde
pop
jge
hlt
push
ret
adc
inc
push
xchg
mov
jmp
sar
mov
jo
arpl
push
lahf
jmp
icebp
inc
je
pop
add
adc
cld
cmp
test
stos
outs
cs
sbb
or
mov
or
daa
(bad)
mov
ja
adc
pop
jo
pop
retf
xchg
inc
push
xchg
fxch
mov
mov
sub
jns
stos
dec
popa
cmps
push
movs
jg
lods
lods
cmps
enter
or
(bad)
and
(bad)
sub
jnp
ret
xchg
mov
mov
mov
data16
xchg
aaa
sub
add
mov
sbb
bnd
aad
xchg
jns
lea
call
int
sub
sbb
(bad)
jmp
mov
ins
mov
jo
dec
in
cli
mov
mov
add
mov
xor
or
cmp
cmps
scas
sub
test
inc
sub
jne
lea
cmps
in
bound
das
rol
sti
xchg
xchg
adc
mov
xchg
imul
push
xor
xor
push
aas
push
cmc
cmp
iret
lahf
mov
imul
hlt
pop
dec
ss
cmp
arpl
shld
push
std
pop
mov
(bad)
sub
loope
inc
push
aad
loop
test
inc
imul
mov
rcr
jb
pop
popf
in
dec
fisubr
movs
lods
or
jmp
jmp
inc
jmp
mov
or
push
aam
push
adc
shl
rcl
inc
test
xchg
add
out
jnp
je
daa
imul
mov
cmp
lds
push
jge
call
pusha
xor
cli
cdq
or
mov
mov
push
adc
and
mov
and
ja
sub
dec
(bad)
jmp
repnz
add
bound
jnp
and
push
xchg
push
dec
outs
xchg
or
jne
shl
pop
movs
xor
cmp
sbb
fcmovnbe
movsx
and
dec
rcr
sti
xlat
xchg
or
push
ret
test
jle
and
xchg
hlt
sti
jge
scas
dec
lods
cmp
or
repz
std
pop
inc
or
sbb
in
add
movs
jl
fcmovnbe
adc
aam
std
out
lock
sbb
test
cmc
dec
cmps
inc
cmp
nop
inc
xlat
cli
sti
sbb
xchg
int3
lods
push
dec
or
and
lock
mov
retf
inc
(bad)
push
xchg
daa
and
jp
cmp
adc
xor
aam
sbb
xor
and
not
aam
stos
dec
or
mov
dec
mov
lods
mov
dec
and
adc
pushf
sub
daa
push
mov
jo
movs
adc
mov
aam
das
cmp
xchg
xor
in
mov
ret
test
data16
dec
push
xor
int
lds
sbb
inc
test
fwait
pop
mov
ds
(bad)
(bad)
out
mov
sub
adc
mov
cmp
aam
iret
mov
shr
jno
stc
or
pop
aad
mov
int3
or
mov
in
lods
(bad)
sub
and
jne
xchg
xor
dec
ficomp
and
(bad)
bnd
push
pop
out
jae
mov
xchg
ds
xor
jg
aam
mov
in
outs
xor
push
adc
scas
int3
cli
jo
pusha
fcmovnu
mov
mov
inc
sbb
mov
push
pop
sbb
push
(bad)
loop
jnp
add
(bad)
dec
xchg
or
xchg
add
cmp
mov
or
cdq
daa
pop
xchg
pop
pop
pop
pop
or
push
aad
jl
dec
in
mov
add
pavgb
mov
lea
nop
inc
stc
xchg
(bad)
mov
push
std
xor
addr16
hlt
loope
(bad)
leave
fs
adc
bnd
mov
js
aad
and
popa
cmp
add
push
dec
adc
push
dec
adc
and
hlt
jmp
mov
pop
imul
sbb
daa
in
jmp
lds
pop
push
int3
ficom
div
mov
cmp
sub
jge
mov
push
inc
fcmove
push
cdq
add
inc
xor
inc
(bad)
cmp
pop
int3
xlat
xchg
repnz
scas
test
inc
out
hlt
push
out
dec
imul
sbb
ss
mov
pop
and
mov
push
scas
jns
jb
push
shl
clc
ins
mov
(bad)
sbb
xchg
pop
test
cmp
ret
shl
push
pop
mov
call
push
pushf
call
jecxz
jg
push
repz
fst
cmc
xor
inc
mov
arpl
stos
xlat
and
mov
mov
push
dec
rcr
(bad)
mov
mul
xchg
out
push
sub
popf
inc
loopne
and
(bad)
push
add
(bad)
shl
retf
ror
dec
test
cmps
xchg
inc
mov
retf
pop
mov
dec
stos
lahf
mov
add
pop
dec
aam
jno
mov
call
mov
ins
pop
test
std
mov
movs
inc
imul
div
les
xchg
das
call
push
xchg
sahf
add
jmp
gs
xchg
retf
mov
lahf
cmps
add
mov
inc
xor
mov
push
push
jp
xchg
gs
sub
retf
push
daa
sbb
cmps
xchg
jmp
pop
nop
cmp
lods
lods
sar
ret
lds
aas
aas
mov
add
icebp
idiv
js
fwait
xchg
out
sub
jmp
jle
call
sub
ja
dec
pop
sub
sub
nop
int3
in
mov
mov
inc
pop
jge
(bad)
sub
cmp
add
icebp
imul
xchg
js
push
xchg
rol
pop
test
sub
xchg
jae
pop
cmp
mov
ficomp
movs
xor
loop
outs
jne
loop
jmp
xchg
(bad)
jge
jg
div
(bad)
mov
loopne
inc
stos
retf
xchg
dec
fist
add
imul
cmp
cmp
dec
sub
dec
shl
jns
sti
stos
mov
leave
in
(bad)
xor
and
sbb
data16
in
lds
sub
jecxz
stos
xchg
mov
mov
ds
ds
cmp
dec
ror
mov
inc
pusha
loope
mov
hlt
mov
imul
ins
loop
sbb
js
sub
aam
mov
out
in
in
mov
sub
sbb
lods
jnp
daa
mov
call
pop
xor
push
outs
pop
add
repnz
mov
mov
ja
fnstenv
stos
cmp
std
pop
jp
das
outs
cmp
outs
dec
ds
inc
mov
push
hlt
test
mov
inc
dec
cmps
ret
in
rol
cld
test
sbb
sbb
push
lods
aad
mov
or
or
add
add
xor
and
add
cmp
and
pop
cmps
xchg
mov
push
push
hlt
in
out
rol
jno
xchg
and
cmp
push
cmp
fcmovnu
xchg
push
push
xor
in
pop
push
xor
ret
sub
in
mov
inc
add
add
sbb
dec
int
xor
push
fild
push
js
bound
pop
call
repnz
aad
retf
jno
repnz
adc
pushf
imul
in
ins
ins
sbb
rcl
iret
push
mov
sbb
mov
or
sub
add
cmp
mov
cmp
stc
(bad)
jl
(bad)
adc
mov
push
out
push
imul
iret
scas
sbb
jne
stos
cmps
cmps
mov
mov
call
movs
jmp
(bad)
neg
jbe
and
xchg
std
mov
inc
nop
ret
xchg
ins
and
loope
lahf
mov
pop
mov
data16
sub
lods
jne
push
sbb
sti
mov
sbb
pop
push
inc
retf
repz
outs
movs
stos
dec
cwde
inc
ret
sbb
push
mov
inc
into
pop
mov
jns
push
inc
popf
popf
and
pop
xchg
pop
test
inc
mov
ds
cld
sti
xor
in
mov
and
(bad)
pop
cmp
fcomp
add
sub
pop
mov
inc
cmp
rcl
xor
and
dec
or
dec
dec
fs
xchg
mov
lds
je
push
push
inc
push
imul
in
cmps
retf
mov
adc
or
pop
add
add
push
mov
jmp
stos
dec
pushf
ficomp
xchg
loop
mov
sub
cmps
and
adc
mov
and
pusha
pop
mov
ja
sahf
sub
mov
enter
adc
sbb
and
je
xchg
pusha
fyl2xp1
xchg
pop
movs
xchg
cmp
cmp
xchg
sub
ror
cmp
mov
xchg
pop
xchg
and
mov
rcl
fs
sbb
inc
fcomp
xchg
movs
ins
dec
out
not
movs
fidiv
enter
js
ins
cs
adc
enter
xor
or
jae
lahf
xor
adc
xchg
pusha
das
pusha
cs
outs
das
jno
div
call
adc
test
rcr
div
push
dec
cmp
add
(bad)
or
mov
(bad)
(bad)
loope
inc
shl
fdivr
pop
test
push
jne
pop
pop
cli
fld
xchg
outs
xor
sub
mov
jp
pop
cmc
test
mov
js
pop
dec
jae
pusha
fidivr
movs
sbb
out
adc
sub
movs
test
push
in
jp
cs
add
push
mov
push
mov
xchg
aas
mov
aaa
setp
mov
dec
inc
push
mov
fidivr
sub
pop
xchg
stc
mov
and
repz
jns
std
inc
mov
icebp
cmc
push
push
mov
inc
cmp
fwait
jb
push
dec
cli
dec
aam
add
xor
mov
sub
repz
rcl
sub
ret
adc
aas
add
add
mov
xlat
xlat
cmp
and
loop
leave
xor
sar
ss
arpl
daa
jmp
ror
push
iret
sub
push
(bad)
aad
add
iret
xchg
stos
ror
sar
and
je
push
and
push
(bad)
nop
mov
shr
xlat
aad
ret
dec
mov
jo
add
ss
(bad)
out
adc
xor
out
adc
cmp
mov
jmp
lods
movs
icebp
dec
dec
inc
dec
and
push
xchg
and
stos
lock
loopne
jg
neg
fstp
and
fcom
stos
pop
icebp
repnz
pusha
je
mov
in
aam
dec
sub
scas
cmps
movs
test
mov
mov
dec
sbb
cwde
movs
mov
xchg
aas
loop
mov
movs
aam
sbb
push
jg
jle
stc
jns
mov
hlt
sbb
fld
and
push
mov
sub
jle
mov
inc
push
sahf
data16
jecxz
xchg
(bad)
(bad)
icebp
mov
mov
xlat
aas
pop
data16
gs
mov
or
call
ins
pop
xor
data16
sbb
xchg
imul
(bad)
arpl
push
test
xor
mov
push
dec
es
test
dec
retf
lock
xor
add
inc
mov
inc
sub
xchg
push
scas
dec
out
js
cmps
push
(bad)
mov
sbb
(bad)
adc
add
(bad)
adc
mov
push
popf
push
gs
dec
xchg
cmp
and
bound
aaa
push
push
repnz
jne
and
shr
inc
mov
rcr
rdpmc
(bad)
shl
inc
push
lahf
inc
push
fcmove
mov
jno
inc
pop
and
cmps
fwait
inc
inc
sbb
(bad)
ror
and
fs
sbb
or
mov
push
das
mov
add
add
icebp
repz
loope
xor
jo
adc
xchg
xor
mov
xchg
scas
leave
cwde
mov
cmps
mov
test
mov
daa
cmc
sbb
dec
out
fsubr
fcmovb
data16
sti
jge
xchg
stos
inc
and
mov
ror
jle
fstp
out
push
loop
mov
pop
mul
call
mov
sub
jmp
mov
pop
dec
and
dec
add
cmps
(bad)
and
pop
jmp
out
dec
jne
rep
ja
cmps
ficom
out
jno
mov
xchg
cmp
mov
ins
lock
jmp
mov
push
dec
lahf
inc
bnd
fprem
sbb
cmc
adc
xchg
sbb
addr16
sbb
out
xchg
and
loopne
fist
jbe
xchg
jecxz
mov
jle
pop
ins
jl
aam
mov
pop
dec
adc
add
dec
add
and
jb
cmc
jmp
sub
mov
(bad)
push
test
cmps
xchg
push
test
adc
push
jmp
out
mov
(bad)
xchg
push
sub
mov
sub
cs
mov
arpl
lods
sub
stos
add
push
arpl
stc
hlt
xchg
retf
jl
pop
icebp
or
push
out
mov
enter
sub
loope
xchg
(bad)
clc
push
ficomp
mov
lahf
bound
fidivr
sub
inc
inc
sub
aam
add
jno
out
push
pop
ss
dec
lahf
jbe
sub
stos
dec
test
pop
xchg
lods
jp
in
scas
mov
sti
stos
cmp
mov
mov
dec
mov
std
popf
dec
push
lods
push
pop
call
dec
push
xor
lods
fist
into
loope
retf
sbb
ficomp
dec
bound
sub
mov
or
add
mov
sub
fnsave
push
xor
lods
pop
mov
push
mov
push
daa
lahf
push
push
iret
bound
call
pop
jl
jo
repnz
lea
push
add
fwait
sti
sub
add
sub
ret
adc
imul
sbb
ret
dec
mov
xor
rol
call
(bad)
add
pop
scas
inc
xchg
dec
mov
fsubrp
mov
in
adc
addr16
push
cmp
(bad)
mov
or
outs
aaa
push
in
mov
fist
shl
mov
inc
push
add
aam
mov
pushf
mov
xor
push
adc
mov
cmp
jmp
pop
mov
push
inc
pusha
outs
push
movs
adc
xchg
xchg
add
jno
pop
mov
cmps
inc
cmp
int
movs
shr
xor
test
push
push
(bad)
cmc
mov
mov
and
dec
sbb
inc
xchg
dec
adc
dec
pop
fstp
leave
jae
jnp
call
and
movups
adc
mov
inc
xor
adc
ins
and
cmc
inc
push
and
(bad)
not
xor
fst
adc
jge
(bad)
mov
imul
les
cmp
add
jge
jmp
pop
and
fsubr
mov
dec
cmp
inc
iret
sub
and
push
aad
mov
dec
pop
dec
and
in
and
xchg
cmp
inc
pop
imul
mov
enter
outs
mov
nop
mov
adc
xchg
movs
xor
(bad)
cli
test
adc
xor
fs
push
fbstp
(bad)
xchg
mov
aam
mov
pop
inc
jne
jnp
(bad)
sahf
js
mov
movs
bound
sub
ret
std
pop
pop
jmp
mov
mov
shr
out
inc
mov
mov
not
add
or
and
stos
(bad)
xor
xchg
dec
sbb
js
es
stos
aas
xor
movs
(bad)
push
inc
mov
sbb
sbb
mov
xchg
bound
shl
iret
sbb
sub
retf
test
mov
adc
es
int3
or
inc
in
loope
aas
pop
inc
lahf
cmps
and
repz
imul
jb
leave
rcl
inc
push
adc
fimul
add
or
push
rep
jg
bnd
cmps
movs
xor
sti
xor
pop
xchg
pop
int
push
cmp
movs
xchg
aas
and
and
sbb
mov
rcr
lea
lahf
xor
push
sbb
xor
pop
dec
mov
jl
scas
fsubr
ds
outs
dec
stos
pushf
dec
pop
ds
xchg
cmps
xchg
add
sub
adc
scas
xchg
retf
mov
cmp
mov
mov
add
xor
in
out
iret
adc
sub
repnz
cld
pop
inc
outs
push
inc
or
loop
arpl
dec
adc
add
cmps
aas
mov
or
sub
pop
xor
mov
jns
icebp
and
push
jmp
or
call
xchg
jmp
inc
aad
in
sub
ins
imul
lea
add
shl
retf
pop
sub
mov
xchg
sbb
inc
popf
mov
and
ja
fmul
in
pop
dec
and
dec
jbe
ret
jne
adc
sar
sbb
adc
adc
ds
cmp
push
xor
sahf
push
stos
cmps
push
inc
stos
pop
bound
mov
into
pop
ret
dec
test
jnp
fdivp
adc
ins
test
push
ficom
dec
js
je
and
and
mov
imul
sbb
std
aam
je
and
rcl
sub
xchg
scas
enter
push
mov
jp
xor
add
pop
fld
test
push
inc
ds
push
xchg
frstor
adc
(bad)
mov
js
retf
and
xor
mov
fistp
and
push
test
popa
sbb
(bad)
inc
mov
pop
jg
in
xchg
addr16
dec
rcl
cmp
xchg
stos
pop
lds
pop
sbb
mov
lods
aam
push
push
push
jge
inc
(bad)
or
sahf
inc
mov
(bad)
dec
and
xor
dec
xchg
outs
movs
std
sahf
fstp
imul
cmps
cmp
xchg
add
out
cmps
inc
xchg
fadd
jecxz
pop
dec
adc
xor
iret
mov
push
fstp
inc
sub
ins
push
les
add
ss
loope
aad
mov
or
add
push
enter
and
cmps
rdtsc
mov
mov
(bad)
stc
out
add
sbb
outs
or
sbb
cmc
xchg
xchg
retf
mov
and
push
ret
add
push
sbb
in
sbb
div
mov
xchg
jmp
ret
push
pop
and
cmp
ins
adc
xor
aam
cmp
fidiv
cli
dec
cmp
(bad)
mov
or
push
inc
push
not
dec
nop
inc
sub
pop
mov
xchg
push
mov
push
ins
imul
adc
push
stos
les
push
push
scas
dec
mov
into
inc
je
push
jae
cmp
bswap
lahf
iret
movs
adc
(bad)
in
dec
dec
dec
pop
mov
sti
popa
sbb
ret
js
adc
mov
outs
dec
adc
sub
cmps
ror
adc
dec
pop
add
nop
nop
imul
test
push
xor
dec
dec
mov
les
int
pushf
int3
hlt
push
push
rol
mov
sbb
jmp
fbld
sub
fsub
aad
dec
mov
pop
(bad)
fistp
jge
gs
pop
mov
adc
call
sbb
pop
pop
mov
scas
push
mov
mov
dec
xor
sub
cmps
cmps
popa
and
sub
pop
mov
dec
xchg
ins
loope
mov
jo
xchg
xor
js
add
enter
push
push
xchg
push
movs
call
xor
cmps
mov
test
xor
addr16
dec
(bad)
setb
mov
pusha
hlt
repz
jmp
les
dec
cdq
fisub
dec
xchg
push
xchg
lahf
fs
mov
(bad)
hlt
push
cmp
jo
or
add
in
mov
icebp
cwde
arpl
dec
pop
add
add
loope
add
out
hlt
xor
aaa
pop
and
mov
fs
push
jl
dec
xchg
movs
adc
aaa
sub
xlat
fwait
jl
add
mov
mov
and
dec
outs
and
inc
add
enter
(bad)
loopne
sti
cmp
mul
add
push
xor
inc
and
in
and
and
call
cli
jecxz
bound
mov
xchg
cmp
movs
inc
seta
sar
adc
mov
gs
data16
adc
stos
scas
and
sub
ja
cmc
add
add
jo
mov
outs
jae
in
add
or
sti
js
(bad)
hlt
mov
pop
out
div
dec
fiadd
and
push
cmps
leave
mov
jmp
fdiv
je
and
adc
inc
(bad)
int
xor
clc
mov
dec
ret
test
out
sub
mov
movs
fdivp
mov
or
fdivr
je
bound
pop
sub
nop
movs
test
and
xor
pop
or
call
adc
addr16
mov
je
xor
mov
shr
sub
js
xor
mov
xor
inc
or
add
sub
push
in
jmp
fs
cmp
enter
movs
and
push
push
inc
inc
cmps
sub
cmp
out
jecxz
fisub
movs
lock
pop
sbb
sbb
mov
adc
add
jmp
sbb
cli
test
(bad)
arpl
lds
mov
aas
mov
inc
arpl
ds
lods
mov
dec
popf
add
add
dec
std
mov
push
inc
imul
cli
pop
ror
in
iret
iret
mov
mov
sub
outs
mov
in
rol
(bad)
out
cmp
stc
push
cld
adc
pop
popf
mov
sub
dec
int3
imul
loopne
inc
push
call
xchg
dec
xchg
and
dec
push
mov
push
ret
pusha
dec
(bad)
cmps
idiv
(bad)
ins
pop
gs
dec
or
jge
lahf
dec
or
arpl
cmps
cmp
xor
aam
ror
xor
xchg
hlt
aam
push
mov
adc
sub
push
xchg
jge
jns
hlt
xchg
(bad)
mov
(bad)
sbb
add
dec
adc
jle
ds
stos
sub
xchg
push
sub
add
xor
xchg
cmp
dec
cwde
pop
dec
fsubr
xchg
adc
adc
push
mov
ins
stos
test
push
sahf
outs
outs
in
test
inc
mov
mov
cmps
xchg
jl
(bad)
int3
bound
cli
or
ds
add
or
jae
pop
mov
repz
push
push
ins
pushf
push
jg
fs
or
and
sbb
test
stos
jmp
mov
sbb
(bad)
xchg
iret
in
sti
jp
fsubr
ins
lods
pusha
mov
dec
adc
stos
inc
add
les
push
test
jne
inc
jmp
mov
sbb
imul
int
dec
sub
icebp
(bad)
sub
dec
xchg
inc
pop
iret
ficom
cmps
sahf
push
and
mov
mov
and
retf
mov
rcl
sub
and
test
shl
dec
sbb
pop
xchg
imul
push
sbb
or
clc
imul
xor
(bad)
(bad)
fisubr
xor
inc
push
xchg
test
fst
call
fs
cmp
div
aaa
push
jb
and
mov
inc
aaa
ret
xor
sbb
pop
jnp
jnp
or
sub
xor
shr
jnp
stos
movs
scas
nop
cmps
inc
and
or
push
push
add
fidivr
and
inc
int3
jb
stos
mov
jo
bound
ficom
imul
jmp
retf
xor
add
dec
mov
js
popa
push
sub
push
ds
jb
pusha
mov
outs
and
dec
in
push
adc
lock
scas
popf
xor
lea
movs
dec
dec
lods
cmp
jbe
repnz
dec
arpl
or
push
or
inc
cmp
push
inc
push
mov
sub
sbb
enter
je
frstor
test
js
xchg
cmps
icebp
cdq
daa
addr16
test
shl
retf
xor
push
inc
dec
mov
cmp
(bad)
jo
sbb
adc
mov
xlat
dec
mov
mov
shl
stos
aam
push
push
aam
arpl
in
mov
lahf
daa
pop
gs
and
icebp
mov
sbb
fnsave
push
ds
push
mov
inc
mov
test
adc
int
gs
lea
dec
pop
sahf
dec
repnz
retf
outs
ss
and
sti
push
dec
push
je
int3
cmps
test
xor
xchg
or
and
jmp
mov
mov
push
fucom
mov
cli
inc
add
cmp
and
mov
shl
pop
xchg
dec
repz
xchg
aam
or
test
pop
es
mov
xchg
popf
fsubr
cdq
xchg
xchg
sub
data16
in
or
arpl
jno
mov
test
add
push
stos
mov
push
dec
xchg
nop
jb
dec
sbb
pop
cmp
call
jmp
leave
adc
xchg
(bad)
add
movs
dec
cmp
neg
ja
fiadd
and
js
in
lock
xchg
push
rcr
icebp
cmp
cmp
add
cli
ja
rcl
in
lock
xchg
int
add
aas
(bad)
cmc
and
test
sbb
leave
pop
sahf
jge
fxch
test
cmp
push
cmps
enter
or
xor
mov
inc
clc
cmp
ret
in
retf
in
retf
es
inc
add
add
or
xchg
rcl
fdecstp
aad
(bad)
outs
test
shr
xchg
aad
add
call
mov
test
adc
adc
lea
jmp
shl
pop
outs
or
in
fst
pop
xor
fld
test
push
xchg
nop
mov
inc
(bad)
out
call
std
ret
ins
mov
ins
xchg
jge
fcmovnbe
dec
dec
mov
fs
jmp
inc
jae
test
jae
push
es
inc
popf
pop
lds
(bad)
sbb
mov
inc
arpl
arpl
add
js
push
xor
push
and
test
xchg
bnd
push
fadd
dec
movs
xor
push
shl
xor
add
add
jp
sub
push
stos
push
cwde
adc
inc
or
mov
push
xlat
dec
add
sbb
push
movs
movs
cwde
xor
and
sbb
jle
mov
mov
in
cmc
sbb
add
xchg
cmps
clc
or
imul
call
push
jne
rcl
iret
mov
sbb
or
add
xchg
nop
nop
inc
stos
push
or
das
out
jg
outs
movs
ror
inc
pusha
sub
mov
test
jmp
and
inc
repz
xchg
cli
mov
dec
mov
pop
mov
sub
push
xor
ret
aas
sbb
pop
rcl
adc
sub
sub
add
xchg
nop
movs
addr16
fistp
repnz
jno
outs
mov
stos
adc
jae
or
add
into
iret
lods
dec
lahf
sbb
and
mov
dec
inc
adc
lods
movs
xchg
nop
outs
aas
cmps
mov
dec
jno
aad
inc
sub
icebp
jno
xchg
add
loope
outs
rcr
xor
push
cmp
jno
stc
cmc
addr16
(bad)
pop
adc
pop
and
xchg
dec
sub
xor
jmp
(bad)
mov
mov
adc
es
sar
(bad)
shl
rol
add
cmps
inc
daa
or
lods
inc
cmps
xor
popf
iret
mov
loopne
es
sub
mov
jae
xor
jmp
or
jecxz
(bad)
push
cs
inc
popa
adc
addr16
jo
call
stc
sbb
xor
or
inc
cmps
nop
add
sbb
inc
and
mov
jnp
sahf
jge
pop
pop
sbb
mov
fld
xor
sbb
pop
pop
mov
shl
in
add
push
dec
jo
dec
imul
loop
jp
stos
lods
mov
mov
sbb
mov
push
sub
cmc
mov
fcom
out
out
pop
adc
movs
jb
xchg
sahf
dec
xchg
out
mov
in
cdq
xor
(bad)
aas
or
and
mov
iret
cdq
cld
gs
push
sbb
div
push
lock
sub
inc
mov
jo
(bad)
movs
xor
(bad)
xchg
popa
dec
sbb
mov
(bad)
out
cmc
xchg
push
jno
outs
xchg
aam
xor
movs
xor
fstp
mov
mov
shr
jge
xchg
call
add
cmps
(bad)
sahf
mov
out
ins
adc
aas
nop
mov
jae
je
mov
xchg
mov
ficomp
sub
and
push
lods
sub
movs
add
jnp
(bad)
imul
pop
mov
sahf
sbb
inc
jno
or
loope
sbb
pop
movs
adc
idiv
add
cmp
cli
test
sahf
mov
shr
bound
add
cli
lods
dec
hlt
inc
mov
ins
icebp
int3
data16
in
push
add
call
dec
mov
dec
cmp
pushf
dec
jecxz
in
add
retf
xchg
xchg
and
or
lods
icebp
mov
imul
in
jae
imul
dec
push
pushf
mov
movs
add
stc
mov
inc
dec
cmps
clc
jg
mov
and
push
pop
pop
add
in
adc
push
push
out
mov
push
or
aam
mov
test
inc
cmp
xlat
jno
retf
aam
and
test
dec
dec
ds
leave
lds
enter
in
sbb
push
stos
(bad)
lahf
test
outs
mov
imul
mov
cmp
mov
add
sub
rcl
aas
in
jecxz
bswap
sahf
jg
inc
cmp
cdq
sbb
imul
jg
push
push
ja
hlt
mov
mov
loope
push
mov
imul
and
fs
mov
mov
js
adc
hlt
fld
jnp
push
stos
push
xchg
(bad)
jg
xor
xchg
aad
hlt
mov
(bad)
popa
call
aas
sub
pop
aad
mov
xchg
test
es
(bad)
call
and
sbb
pop
movs
cmp
push
inc
jnp
in
mov
mov
ja
hlt
pop
sub
(bad)
das
sub
in
in
inc
push
mov
or
xchg
loope
clc
test
mov
es
jns
add
pusha
pop
scas
mov
bound
pop
icebp
repz
scas
xchg
xor
aam
mov
daa
retf
pop
lahf
in
adc
je
ins
cwde
imul
(bad)
(bad)
xchg
in
or
mov
nop
in
leave
push
sar
xor
test
lods
xchg
ss
add
lods
pop
scas
xor
jge
leave
xor
data16
pushf
jge
mov
mov
ja
push
lods
jmp
sub
scas
xlat
rol
push
hlt
mov
ret
mov
and
repnz
inc
pop
repnz
jle
mov
adc
outs
adc
inc
cmp
sub
xor
adc
es
retf
push
lahf
ins
or
retf
fucomip
cmc
mov
and
sbb
lahf
adc
mov
repz
inc
sbb
mov
and
jecxz
movs
pop
cs
scas
jns
push
shl
in
xlat
gs
into
mov
dec
pusha
sub
xor
outs
hlt
imul
inc
fld
jg
mov
in
loop
push
out
push
mov
in
dec
jecxz
jp
into
fs
push
int
cmps
add
cli
mov
mov
stc
not
mov
push
pop
push
sahf
and
(bad)
(bad)
clc
or
dec
je
push
inc
dec
dec
dec
push
cmp
dec
sub
adc
add
(bad)
push
retf
mov
and
nop
div
movs
xchg
not
lock
mov
dec
sbb
mov
sub
rol
xor
mov
sub
adc
cli
add
or
pop
jp
dec
sti
jg
mov
cmps
out
mov
push
nop
xor
xchg
or
stc
mov
loop
test
pop
mov
or
and
int3
sub
movs
dec
push
mov
push
and
mov
fisttp
jg
dec
arpl
sub
sbb
fs
daa
adc
or
add
sub
jmp
cmc
lds
ss
inc
arpl
sub
mov
jmp
imul
cdq
fidiv
fldcw
loopne
and
scas
std
add
and
pop
cmp
repnz
js
jae
data16
sub
retf
jae
cld
clc
push
popf
sub
mov
movs
(bad)
retf
or
(bad)
xchg
xchg
push
call
stos
mov
sar
ret
fcomp
retf
retf
adc
mov
mov
ret
aas
lahf
inc
xlat
adc
mov
and
sbb
add
sbb
cmc
fwait
cmps
in
jg
mov
fld
push
daa
sub
xor
clc
cld
inc
sub
push
or
xor
pop
out
jmp
xchg
mov
cs
out
sub
addr16
cmp
call
addr16
ins
test
cmc
push
and
mov
jl
cdq
adc
repz
mov
mov
or
push
dec
or
ror
dec
adc
stc
cs
out
inc
aas
lods
xchg
sbb
pop
pop
daa
add
or
add
out
aam
std
pop
mov
jne
cmp
fcom
cdq
adc
ds
mov
loop
inc
out
or
das
and
pop
repz
arpl
mov
xchg
inc
aas
xchg
jg
adc
ret
xchg
call
sbb
sar
jns
cld
push
push
test
test
in
jecxz
mov
mov
sbb
mov
xchg
clc
pop
pop
ficom
xor
and
xor
cmps
mov
xchg
mov
inc
sldt
pop
cli
stc
jl
push
in
jbe
dec
and
cs
mov
stos
mov
mov
sub
aaa
imul
sub
dec
cmc
or
cmp
mov
add
movs
dec
mov
add
adc
jo
cmps
lods
add
(bad)
stos
cmp
call
dec
outs
test
movs
add
adc
fs
dec
or
leave
ror
fs
mov
pop
cmps
mov
inc
mov
mov
jnp
mov
pop
leave
dec
lock
iret
xchg
repnz
xor
jmp
ss
test
stos
cmps
mov
int3
je
dec
outs
cld
data16
adc
push
scas
ret
sub
xor
aam
sbb
fs
aad
stos
les
cmp
sub
movs
aaa
and
(bad)
mov
fimul
sbb
cmp
pushf
xor
loopne
stc
popf
inc
stc
(bad)
sahf
pop
inc
mov
lods
jnp
add
mov
sub
test
adc
push
pop
xor
test
and
aas
adc
or
pop
mov
inc
cmc
mov
or
sbb
jb
clc
loop
mov
ins
retf
pop
stc
mov
lock
add
repnz
jp
or
(bad)
pop
xchg
and
sub
pop
ds
icebp
cmp
push
shl
icebp
cmc
xor
call
gs
pop
xor
fwait
repz
fld
dec
mov
loope
retf
xchg
loope
call
push
push
fcomp
mov
call
(bad)
mov
or
or
inc
scas
pop
cmps
sub
sub
xchg
push
je
lock
pop
or
or
sub
mov
or
iret
push
mov
jae
dec
mov
pop
outs
inc
ins
(bad)
push
call
sbb
pop
mov
inc
cmp
addr16
cwde
jne
dec
retf
push
mov
cmc
sub
cmps
test
sub
inc
sub
or
lahf
fdivr
out
out
mov
retf
jno
push
lods
test
xchg
xor
xor
stc
ja
movs
inc
pop
iret
call
sub
pop
xor
je
push
pop
cli
dec
loope
lahf
movs
sub
daa
repz
stc
sbb
gs
(bad)
jmp
add
inc
hlt
adc
push
fs
jp
xchg
aad
std
cwde
and
inc
pop
fsub
mov
push
mov
pop
mov
pop
jns
mov
sub
mov
mov
je
xor
mov
jecxz
(bad)
lahf
push
mov
pop
inc
inc
adc
mov
cmp
mov
movs
scas
(bad)
iret
jb
cmp
imul
in
pop
or
cwde
bound
inc
pop
ss
sti
cwde
neg
push
fld
(bad)
lea
inc
lods
jg
push
(bad)
xor
pushf
loope
(bad)
(bad)
fwait
popf
std
enter
or
cmp
inc
pop
sub
push
and
xchg
aaa
aaa
mov
(bad)
inc
shr
xchg
loopne
les
dec
ds
sbb
jae
mov
sub
cmp
push
fs
sub
mov
lahf
xor
call
xchg
mov
xchg
in
idiv
fsub
inc
xchg
mov
jle
xchg
mov
push
repnz
jl
jno
sbb
or
xor
push
inc
sahf
pusha
pop
cmp
xchg
push
pop
xchg
mov
aas
cmps
mov
je
xor
sub
jp
scas
es
repnz
push
fist
xchg
jo
or
call
push
xor
jne
test
adc
mov
jb
pop
aaa
and
aas
(bad)
jnp
lods
adc
jl
ss
jl
lods
fldcw
xor
or
push
in
stc
push
cmps
or
test
dec
test
daa
jmp
mov
cmps
cmp
fsub
lea
(bad)
(bad)
out
cmc
adc
cli
xor
jmp
repnz
(bad)
jmp
shr
call
mov
int
hlt
hlt
aam
pop
fidivr
jmp
mov
or
aaa
bound
add
rcr
into
ins
adc
mov
clc
ss
pop
inc
repnz
(bad)
lahf
movs
cmp
dec
out
mov
icebp
movs
icebp
popa
lds
iret
jle
or
pusha
jo
cmp
pop
fisttp
push
in
push
xchg
jne
push
mov
in
lock
outs
ins
shr
sti
jp
(bad)
nop
sbb
icebp
imul
xchg
push
xor
das
sub
cmp
retf
sbb
xchg
aas
mov
out
ins
mov
arpl
xor
push
inc
pop
stc
push
mov
data16
(bad)
lahf
ins
mov
or
jmp
in
aas
outs
pop
push
inc
and
scas
mov
cmc
push
jo
pop
adc
push
mov
adc
sub
pop
aam
loop
ds
mov
popf
test
add
int3
in
out
inc
cmc
rcr
js
sub
paddusb
jns
retf
sub
sub
xchg
rcl
mov
push
add
mov
std
jle
loop
jns
sahf
imul
fwait
xor
ins
and
sub
outs
cmp
fdivr
mov
aas
shr
jb
add
ins
push
mov
ret
xlat
test
jmp
test
jecxz
mov
cmp
(bad)
push
ror
inc
mov
inc
push
aam
aam
sub
jne
leave
mov
sahf
loop
push
or
dec
int
scas
fistp
movs
in
int3
sbb
(bad)
pop
cmp
cdq
pop
xchg
mov
fs
sahf
cmp
adc
sbb
data16
xor
daa
rcr
in
mov
sbb
xchg
cmp
and
push
shl
push
mov
inc
push
fiadd
pop
add
push
aas
sub
call
jmp
repz
or
js
movs
cs
scas
mov
bound
or
inc
adc
add
push
fnstenv
into
mov
(bad)
and
lahf
inc
(bad)
jp
mov
xor
dec
inc
sar
rcl
jne
cmp
out
data16
sub
mov
fld
pop
push
add
adc
aam
xchg
mov
dec
push
aas
pop
ja
adc
add
test
cmps
(bad)
jmp
push
in
lods
cmc
jle
push
pop
dec
mov
popf
call
xchg
and
jl
inc
repnz
outs
enter
mov
ss
cld
push
xchg
add
movs
push
cmp
repz
push
sbb
jne
mov
mov
pop
push
pop
jecxz
sbb
shl
stos
sub
scas
xlat
push
div
imul
call
call
in
cs
jo
mov
mov
jbe
movs
(bad)
cdq
lods
imul
mov
cld
jle
jle
(bad)
sar
add
jnp
or
mov
outs
sbb
sub
inc
(bad)
cmc
cli
pmaddwd
push
mov
imul
xchg
and
(bad)
mov
aam
cmp
inc
ror
push
jge
stc
jle
ss
in
jmp
xchg
adc
movs
mov
ds
mov
xchg
call
(bad)
lods
cs
mov
mov
aas
addr16
clc
push
cwde
mov
and
add
idiv
jle
sub
outs
push
xchg
jmp
daa
inc
dec
push
icebp
add
div
aad
jmp
or
xor
pmulhw
add
in
jle
fidiv
mov
addr16
stc
cli
scas
icebp
out
das
cmp
mov
nop
fld
or
cwde
cld
leave
adc
mov
bound
jno
and
push
xlat
mov
js
pop
xor
lods
popa
(bad)
mov
(bad)
lahf
repnz
and
fisubr
sahf
sub
mov
retf
adc
push
sub
cli
adc
stos
cwde
jmp
pcmpgtb
cdq
push
add
xchg
(bad)
fcmovnu
push
nop
neg
inc
sbb
fstp
icebp
sti
movs
fcom
ret
mov
jl
add
addr16
daa
int3
sahf
scas
sub
fdiv
iret
xor
in
das
add
or
xchg
cmp
shl
inc
pop
add
jle
cli
sti
out
inc
sub
sbb
dec
inc
adc
jo
jmp
ins
jg
mov
cmovg
arpl
push
mov
arpl
mov
push
sbb
aaa
nop
pop
jmp
cli
(bad)
popa
pop
jmp
pushf
fadd
add
fiadd
xor
mov
jo
and
mov
adc
push
das
inc
not
je
mov
enter
xchg
jp
fmul
mov
xchg
clc
rol
inc
je
sub
test
pop
mov
rol
sbb
iret
enter
mov
mov
inc
push
pop
test
stos
sbb
xor
je
cld
xlat
shl
(bad)
neg
add
enter
inc
jg
daa
sub
inc
xor
mov
(bad)
es
xor
sbb
data16
test
inc
add
mov
or
hlt
jnp
xchg
mov
adc
fld
mov
loop
sub
xor
push
jnp
jle
or
loope
neg
dec
inc
inc
sub
fld
js
outs
pop
mov
lods
xor
pop
repz
pusha
mov
fcmovnb
fs
imul
icebp
adc
cmps
push
lods
test
jmp
inc
test
clc
jecxz
jb
mov
fistp
ret
cmc
mov
inc
call
daa
xchg
jnp
xor
sub
add
add
push
sbb
(bad)
sbb
rcl
push
xor
mov
add
call
es
ror
mov
cs
pop
in
les
cdq
ja
daa
xchg
or
hlt
push
sub
add
dec
and
clc
mov
add
das
jno
mov
mov
adc
jae
or
repz
mov
inc
cmp
xchg
ror
aad
sbb
pop
xor
mov
add
hlt
add
dec
gs
cmp
test
pop
lahf
push
mov
es
sahf
jne
xor
retf
xchg
xor
mov
push
xchg
add
nop
dec
add
push
pop
nop
in
and
and
push
out
jo
xchg
ret
or
cli
stc
add
(bad)
or
fadd
repnz
push
out
das
and
or
les
inc
movs
sti
push
and
sub
lds
imul
xor
xlat
adc
mov
arpl
sti
aas
retf
cdq
and
mov
(bad)
(bad)
les
xchg
mov
pop
sub
leave
dec
dec
sbb
push
adc
mov
and
mov
aaa
mov
jge
pop
out
not
out
rcr
add
cmc
push
adc
adc
bound
in
icebp
daa
gs
inc
jno
jae
dec
mov
add
ds
push
sub
add
xchg
imul
loope
add
lock
in
stc
vorps
sbb
sub
inc
add
lods
push
cdq
iret
pop
fsub
(bad)
je
clc
mov
inc
or
rcl
test
sahf
test
jnp
sub
mov
or
jno
loopne
cmp
sbb
pop
arpl
jmp
loopne
cmp
sub
mov
xchg
xor
mov
scas
and
in
mov
mov
sub
rol
les
cmps
cmc
ds
fwait
pop
xchg
pop
lea
scas
xchg
or
dec
dec
imul
les
jl
in
xchg
xchg
or
stos
inc
jmp
enter
es
push
ins
les
aam
jne
adc
(bad)
dec
adc
jecxz
sbb
mov
jne
aaa
shr
cli
stos
jbe
arpl
inc
or
cmps
dec
mov
test
pop
out
mov
pusha
adc
pop
cmp
xor
dec
es
push
cwde
enter
jmp
fisub
mov
movs
xchg
enter
pop
sbb
cmp
add
mov
aaa
and
push
dec
and
push
jns
mov
xor
out
cmp
and
int3
mov
sbb
and
ret
leave
sbb
jecxz
mov
movs
or
push
shl
test
shr
mov
jp
dec
sub
and
mov
test
xor
add
xchg
mov
mov
sahf
mov
fs
int3
mov
das
mov
push
mov
xor
mov
xchg
not
cdq
repnz
push
mov
push
pop
xchg
(bad)
cmps
jle
cmp
jbe
(bad)
fnstcw
ins
out
int
mov
ins
dec
leave
xchg
sbb
dec
loop
xor
dec
(bad)
lahf
(bad)
lock
pop
movs
cli
outs
cmp
out
mov
add
test
nop
or
inc
(bad)
call
imul
push
inc
mov
push
and
push
sbb
and
cmps
lea
stos
xor
out
pushf
mov
mov
inc
xchg
pop
lock
iret
outs
fs
dec
mov
movs
dec
mov
xchg
dec
cmp
mov
sbb
ror
dec
xor
xor
(bad)
dec
aas
mov
sbb
mov
dec
aad
mov
mov
repnz
dec
add
pop
adc
pop
cmp
cmp
mov
xchg
loop
dec
ds
lock
mov
in
mov
jmp
inc
xchg
push
pop
xorps
xchg
push
rcl
pop
xor
mov
ins
jmp
mov
add
add
mov
xchg
and
popa
or
add
jg
lods
adc
inc
es
push
add
push
imul
sbb
jno
add
mov
push
ins
push
lahf
int3
(bad)
jge
mov
sub
adc
xchg
cmc
stc
cmp
sahf
test
cmps
dec
xchg
in
in
inc
ds
jg
cmc
enter
mov
cmp
and
ffreep
jo
movs
xchg
ret
out
lods
imul
sbb
test
loope
(bad)
scas
out
xor
push
pusha
push
xchg
call
and
push
stc
add
pop
sti
cmp
sub
ins
mov
(bad)
int3
jge
(bad)
xchg
xchg
lahf
test
add
out
fucom
and
in
dec
rcl
mov
cmp
dec
cmovp
sbb
stos
test
inc
pop
mov
outs
into
and
pop
imul
adc
repz
add
inc
mov
cmp
pushf
xlat
(bad)
in
fstp
pop
in
js
shl
std
mov
inc
cmp
js
cmp
xor
pop
dec
mov
xchg
add
rol
mov
xor
sub
xchg
in
push
push
stos
mov
icebp
pop
addr16
shr
lods
js
dec
lock
or
pop
or
jb
pop
inc
test
pop
lea
push
imul
inc
bound
xchg
movs
jmp
nop
in
pop
dec
add
xchg
xchg
xor
(bad)
es
retf
push
push
sbb
add
arpl
adc
mov
imul
cmps
lahf
dec
nop
mov
push
dec
les
aad
retf
icebp
lods
jo
xor
sub
add
mov
adc
dec
dec
cmps
sbb
test
lods
cmp
mov
or
xor
imul
in
xchg
cmp
lods
fld
push
pop
mov
push
addr16
and
xchg
pop
mov
leave
mov
mov
add
mov
push
lods
push
push
daa
add
xlat
in
mov
add
push
push
lods
call
cmp
pop
retf
stos
or
test
rcl
icebp
ret
mov
jmp
bound
adc
mov
(bad)
(bad)
data16
movs
fs
nop
add
push
dec
mov
rcr
outs
inc
xchg
mov
inc
sbb
int3
data16
lahf
push
mov
imul
pop
push
adc
lock
retf
pop
inc
sbb
lods
icebp
mov
mov
or
loop
aaa
xchg
ins
dec
xchg
pop
adc
inc
mov
popf
dec
inc
loopne
inc
sbb
inc
or
int
ret
mov
jo
stos
imul
or
pop
retf
jmp
nop
aad
std
enter
sahf
push
pop
or
add
aaa
mov
jnp
cmp
ret
and
mov
pushf
adc
js
or
jle
cdq
sub
push
jo
rcl
push
ss
sub
dec
je
rol
lods
nop
cmp
sub
push
fld
repnz
movs
or
jno
sti
xor
(bad)
lock
or
add
mov
push
push
sbb
shr
dec
cmc
test
mov
fiadd
int3
xor
sti
mov
adc
or
xchg
dec
cmps
lods
or
mov
lahf
xchg
and
sub
imul
mov
clc
jmp
and
or
and
leave
push
cmp
xlat
retf
js
and
or
inc
scas
jg
stos
add
jbe
into
xchg
or
push
add
add
in
jmp
pop
push
mov
imul
jno
or
cdq
adc
call
push
movs
stos
mov
mov
rcl
ror
popa
push
js
push
mov
(bad)
(bad)
mov
fiadd
adc
adc
push
daa
sub
push
pop
dec
xor
push
jp
jecxz
add
ret
xchg
mov
and
repnz
cmp
push
sbb
sbb
and
push
adc
out
mov
(bad)
into
add
stos
cmps
retf
(bad)
adc
dec
pop
shl
cmp
cmp
mov
ja
jne
xor
neg
adc
jns
pop
and
dec
mov
and
mov
inc
imul
add
pushf
xchg
pop
sub
add
adc
outs
in
inc
iret
jmp
add
xor
inc
pop
pop
sahf
mov
aam
mov
pop
es
arpl
pop
sahf
pop
pop
(bad)
cmp
fmul
push
lds
adc
xchg
push
cmp
loope
nop
push
fcompp
iret
addr16
inc
fst
adc
push
and
icebp
not
xchg
mov
ficomp
sub
inc
retf
shr
jg
or
and
stos
inc
ret
retf
pop
cmp
xchg
pop
mov
leave
retf
fstp
push
sbb
push
dec
pushf
call
addr16
pop
pop
popf
mov
mov
mov
sub
inc
jo
setno
push
addr16
shl
fisub
or
and
popa
jb
cwde
int3
xchg
add
and
mov
jp
dec
mov
cmp
xlat
cld
sti
int3
or
mov
mov
mov
xor
inc
je
push
lea
jne
int3
dec
dec
cmp
and
jns
dec
or
add
(bad)
mov
xor
push
xor
cli
cmps
sti
stos
stos
jo
outs
jnp
and
add
in
aaa
int
jnp
ins
jg
xchg
aam
mov
lahf
out
pop
retfw
pop
xor
out
cmps
in
enter
stos
jo
test
push
lods
out
sub
ror
xchg
mov
inc
shl
add
sub
ins
xchg
loope
pop
and
adc
push
jmp
mov
push
cld
sub
mov
sbb
rol
jo
jecxz
arpl
out
test
fimul
push
outs
das
in
push
loopne
lods
xor
xor
inc
xchg
cmp
cld
jmp
imul
push
mov
enter
and
pop
enter
(bad)
push
idiv
mov
test
ds
cli
push
jnp
icebp
push
ins
adc
dec
mov
les
inc
imul
shr
mov
jecxz
mov
mov
xchg
cmp
xchg
stos
and
es
mov
sub
je
retf
xor
jnp
out
(bad)
arpl
cmp
ror
mov
or
lock
out
jl
mov
or
inc
sub
inc
stos
dec
pop
ror
mov
arpl
push
mov
(bad)
fstp
aaa
cmp
imul
ss
jecxz
lea
cmp
hlt
push
(bad)
ja
jbe
or
push
push
mov
movs
inc
cmps
stos
lahf
das
out
aam
into
mov
mov
sub
mov
cmps
inc
lahf
retf
xchg
test
sbb
dec
outs
rcr
cmp
push
sub
das
pop
or
and
xor
rcl
fsubr
into
mov
int3
in
add
jge
push
sub
xchg
not
test
loop
fwait
cmp
dec
cmp
adc
add
add
lahf
or
ins
xchg
popf
arpl
xchg
adc
mov
xchg
jb
jnp
push
cmc
and
sbb
or
or
fimul
(bad)
imul
fwait
jae
lea
mov
or
mov
xchg
sub
push
adc
mov
fs
pop
mov
adc
mov
mov
mov
xor
shl
shr
sub
push
inc
push
sbb
stos
cmp
out
dec
and
(bad)
fwait
sub
in
scas
sub
arpl
inc
ret
inc
xchg
rol
pop
jne
icebp
(bad)
loopne
adc
test
mov
xor
jno
sub
sub
dec
pusha
xchg
pop
inc
sub
pop
dec
push
push
cwde
aad
hlt
and
lea
and
sub
or
test
and
dec
cmp
xor
fdiv
cmp
pusha
adc
jg
(bad)
push
cwde
mov
push
rcl
ret
inc
imul
popfw
fucom
dec
popa
sahf
inc
adc
push
dec
es
rcl
mov
xchg
adc
xchg
or
jbe
add
adc
gs
cmps
mov
inc
and
jb
sahf
ds
and
mov
out
jb
mov
mov
adc
gs
stos
je
or
and
sub
cdq
xchg
push
adc
jo
std
mov
das
mov
adc
jle
call
dec
xchg
fcomp
ficomp
jne
rcr
sbb
out
pushf
enter
xchg
je
std
mov
mov
es
in
scas
mov
pop
cmp
test
xchg
imul
inc
push
not
lods
imul
ds
scas
jne
or
pop
cwde
lock
xchg
inc
retf
shl
xchg
xor
pop
adc
lods
inc
push
mov
out
int3
aaa
or
js
jge
cmps
mov
stos
cmps
mov
out
add
mov
xchg
cmp
push
(bad)
das
cmps
cld
imul
rcl
sbb
xchg
inc
cmp
push
lods
jg
xchg
push
adc
mov
out
pop
jecxz
ins
ror
jbe
push
push
leave
sbb
jno
out
aas
lahf
push
ror
cmps
shl
or
je
mov
mov
xchg
push
xor
add
mov
and
add
mov
mov
push
nop
jmp
out
adc
adc
cmps
inc
loope
mov
test
repz
push
or
push
dec
or
ret
xchg
call
cmp
fidiv
mov
mov
aas
sub
imul
xchg
ror
pop
cwde
and
mov
imul
cmps
jmp
scas
lods
or
xchg
dec
fisubr
cmp
call
mov
mov
inc
mov
lods
inc
jmp
sbb
loope
push
and
push
dec
dec
dec
dec
or
jns
inc
sar
mov
sbb
xchg
(bad)
in
call
shr
cld
mov
mov
push
test
push
popf
mov
mov
pop
loop
pop
movs
lds
cmp
outs
arpl
popa
mov
jns
sbb
mov
adc
out
iret
scas
out
vrsqrtps
pop
push
adc
nop
pop
mov
shl
loop
mov
pop
loopne
mov
jp
call
test
ret
sub
pop
xchg
jge
loop
loop
xchg
data16
test
mov
pop
popf
cmp
repnz
inc
out
fs
inc
add
(bad)
scas
jp
sbb
mov
xchg
xor
adc
inc
mov
or
xor
pop
cwde
arpl
xor
jg
inc
stc
lahf
pop
sbb
movs
not
mov
add
iret
mov
imul
dec
mov
int3
stos
sbb
dec
adc
inc
pop
in
mov
es
sbb
das
ds
jmp
int3
nop
push
lods
dec
fstp
adc
add
push
pushf
in
ja
stos
inc
hlt
sbb
rcr
and
shl
pop
pop
jmp
das
xchg
loop
test
push
out
fld
mov
inc
fwait
aad
shl
inc
jno
lock
test
xchg
push
popa
retf
sar
push
(bad)
lock
or
cmp
gs
scas
jge
test
fisttp
std
jge
push
inc
or
mov
(bad)
int3
jns
jmp
push
retf
mov
arpl
pop
push
(bad)
(bad)
adc
shl
call
jge
bound
push
cmc
retf
sbb
mov
jns
fs
push
bound
push
ror
mov
mov
add
xchg
loop
cmps
into
xchg
call
adc
mov
test
sar
mov
je
mov
arpl
cmp
jle
push
enter
sub
add
push
les
pop
lds
(bad)
cmp
iret
aad
je
jecxz
cmps
mov
xchg
xchg
mov
push
test
(bad)
xor
sbb
cmc
sbb
cli
pop
(bad)
popa
push
fdiv
pop
mov
stos
add
push
dec
sbb
xchg
loopne
or
stc
pushf
out
inc
in
aas
pop
xchg
xchg
sbb
mov
inc
adc
lods
inc
nop
pop
test
imul
push
xor
repnz
inc
adc
or
dec
xchg
cmps
mov
sbb
fidivr
jne
and
xchg
cmps
adc
imul
in
movs
xchg
stc
loop
mov
push
and
call
xor
mov
add
sbb
dec
pop
xchg
mov
inc
dec
jecxz
daa
xchg
in
jmp
int3
push
(bad)
stos
xor
xor
lods
pop
mov
dec
movs
add
ins
pop
pop
xor
and
push
xor
dec
push
lahf
imul
xchg
xchg
sar
or
das
popf
jno
test
shl
and
je
push
inc
loop
mov
and
and
and
inc
mov
add
retf
mov
push
xor
cs
std
push
aad
outs
scas
mov
fcomp
loopne
mov
xchg
and
push
xchg
mov
aam
sub
or
fcom
inc
add
inc
or
xchg
cmp
jbe
repnz
lods
sub
cmps
mov
idiv
adc
push
iret
push
jg
jmp
cld
mov
xchg
or
add
icebp
(bad)
out
or
dec
lods
cwde
pop
cld
adc
jnp
in
push
mov
pop
ror
int
mov
cmp
inc
pop
mov
pop
add
pop
test
ror
repnz
jns
pusha
test
xor
mov
push
lock
mov
test
das
(bad)
movs
or
lds
mov
js
jno
pusha
mov
mov
adc
mov
movs
xlat
mov
repnz
xchg
ret
stc
inc
pop
xchg
add
stos
pop
add
adc
xchg
xor
dec
shl
mov
xor
daa
cmc
push
das
imul
mov
inc
cmp
mov
inc
out
mov
mov
cmp
cmp
(bad)
(bad)
dec
ins
leave
bound
xchg
jns
cwde
xor
jo
jns
pop
or
nop
sub
(bad)
test
pop
xor
jecxz
push
mov
add
xor
leave
sbb
sub
ja
jecxz
sbb
mov
test
leave
ret
repz
stos
sub
add
ror
dec
push
pop
push
pminsw
ds
mov
(bad)
jmp
ret
aam
call
sar
push
shl
xor
xor
push
mov
retf
icebp
or
sbb
sbb
and
outs
popa
push
ins
mov
pop
mov
sub
or
lock
push
adc
(bad)
push
std
(bad)
loop
cmp
sub
xchg
ret
xlat
retf
mov
push
push
jbe
dec
pop
and
or
inc
stos
sbb
and
test
push
retf
out
sbb
xor
ror
sbb
push
xchg
jns
cdq
sbb
and
sub
enter
push
mov
adc
mov
and
mov
in
fild
pop
cmp
jne
stos
sub
cmp
push
add
push
cld
std
push
out
sbb
push
daa
add
lahf
xchg
retf
out
mov
sub
inc
icebp
xor
or
and
call
xchg
std
cmp
pop
sbb
push
movs
ror
cmp
call
test
pop
xchg
in
sahf
inc
stc
jne
sbb
dec
mov
or
adc
and
fwait
inc
pop
popa
inc
mov
xor
jecxz
jge
cmps
or
cwde
xchg
les
push
mov
das
xor
stc
jo
cdq
add
mov
push
test
xchg
push
nop
std
ror
data16
data16
jecxz
xchg
add
jmp
push
pushf
mov
jg
push
xchg
iret
mov
and
arpl
adc
pop
retf
sbb
xor
aad
xor
leave
add
cmps
out
push
xchg
pop
scas
stos
outs
sbb
mov
fsubp
test
push
ins
test
inc
sub
push
and
or
scas
xchg
dec
adc
nop
cdq
cdq
inc
adc
push
jno
mov
mov
inc
xchg
push
pop
add
push
and
pop
or
enter
add
mov
pushf
jno
outs
or
cmp
push
mov
js
cld
cmp
lods
fwait
jo
pop
(bad)
loope
push
mov
mov
fidivr
and
loop
xchg
mov
mov
sub
lods
xchg
outs
mov
or
inc
inc
add
ror
mov
inc
int
sbb
lods
or
sub
push
movs
dec
retf
add
adc
(bad)
dec
xchg
hlt
inc
mov
fucomip
jge
mov
mov
or
adc
movs
add
inc
xor
aad
sti
xor
scas
stc
sub
jp
cld
mov
mov
inc
dec
adc
test
or
cmp
rol
or
(bad)
jmp
les
mov
ins
outs
xchg
xchg
loopne
adc
adc
jecxz
scas
ins
ins
ins
sub
sbb
xchg
int3
push
cs
add
pop
popf
xor
or
fcom
pop
mov
fcmovu
xchg
inc
fnstcw
outs
and
ret
jl
mov
cld
adc
cmp
aam
adc
push
adc
leave
push
repz
cmp
ret
in
dec
shr
mov
sub
push
jmp
fmul
add
aam
xor
xor
pandn
or
rcl
dec
sub
jecxz
pop
mov
sub
mov
jne
adc
movs
lea
inc
push
xchg
out
es
stc
jp
rcr
xor
loope
repz
cmp
retf
repnz
dec
pop
mov
jmp
pop
fs
movs
adc
push
arpl
nop
enter
jg
aam
jp
stos
xor
mov
js
mov
xor
loope
(bad)
mov
aas
ds
inc
aas
inc
inc
mov
hlt
pop
push
xor
cld
push
xchg
push
sbb
mov
inc
es
in
add
aaa
cld
pop
fld
inc
adc
pop
sbb
push
jmp
imul
push
xor
or
mov
mov
sti
jp
jp
loope
fsubrp
cmp
jg
fstp
int
and
cdq
sub
xchg
out
pop
scas
stc
mov
jo
and
xchg
lods
mov
out
xor
or
pop
mov
dec
xchg
bound
pop
dec
mov
cmp
inc
scas
arpl
cmps
ds
adc
adc
mov
dec
ret
lahf
fsubr
fs
or
xchg
jae
jbe
movs
sti
ficomp
jns
and
cmp
fcomp
cmps
repnz
add
dec
and
xor
call
dec
dec
scas
or
(bad)
adc
fcom
inc
adc
xchg
jp
in
lods
inc
popf
push
mov
lds
not
popa
and
adc
retf
adc
xor
pop
jnp
dec
(bad)
sub
out
push
je
cmps
retf
mov
inc
test
mov
dec
out
rcr
ins
fwait
pop
leave
dec
mov
xchg
stos
shl
ret
test
sbb
icebp
push
push
dec
fstp
aam
mov
sub
inc
add
and
and
repz
xchg
ss
or
fcmove
adc
push
popf
(bad)
out
jns
ds
outs
dec
out
pop
mov
cdq
loop
mov
adc
sub
and
iret
lahf
lahf
pop
cli
add
mov
sub
ins
add
cmp
(bad)
mov
dec
je
nop
(bad)
sbb
mov
jge
(bad)
push
cmps
mov
sbb
dec
or
xchg
or
call
cmp
ror
cmps
out
fild
(bad)
xchg
cwde
lods
sub
inc
(bad)
lahf
pop
jne
int3
cmc
dec
pop
xlat
repz
in
jae
(bad)
and
icebp
in
pop
cdq
xchg
imul
jmp
in
mov
sbb
pop
mov
mov
adc
cld
jae
and
idiv
mov
inc
xchg
xor
xor
sub
hlt
lods
inc
rcl
jno
pop
pusha
aaa
jo
cmc
cmp
push
xlat
ins
fwait
sbb
add
jmp
add
les
pop
adc
leave
scas
inc
pop
arpl
aam
xchg
pushaw
inc
dec
in
stc
bound
(bad)
push
fucomip
adc
add
pmaddwd
bnd
xchg
sub
add
outs
es
or
out
xchg
in
push
xchg
pop
sub
adc
sbb
aas
push
ds
fnsave
dec
inc
popa
mov
adc
hlt
xchg
inc
push
jnp
jmp
lds
push
push
jmp
xchg
or
pop
cld
cli
dec
(bad)
(bad)
jecxz
in
jo
test
mov
fisttp
fidivr
in
pop
or
scas
adc
inc
mov
dec
jmp
mov
inc
stos
in
sbb
arpl
mov
(bad)
mov
xor
mov
lahf
repz
jle
repnz
sub
stos
jmp
cmc
or
sub
bnd
push
fld
imul
scas
mov
xor
dec
fadd
mov
add
into
dec
cmp
jecxz
mov
xor
mov
cmp
xchg
enter
cmp
cmp
ins
jl
cmp
es
sti
add
sar
jg
add
fdivr
pop
cwde
lea
dec
fwait
sub
test
call
sbb
mov
rcl
scas
inc
std
fild
mov
in
rcl
sub
mov
mov
dec
xchg
ret
xor
aam
sub
xchg
iret
xlat
fldenv
lock
and
or
aam
jns
add
out
pop
jmp
pusha
inc
in
pop
lock
push
add
(bad)
xor
pushf
bswap
xchg
jmp
(bad)
rol
in
jmp
ds
xchg
dec
rol
(bad)
ja
dec
sbb
ror
aam
shl
int3
xlat
out
idiv
add
mov
jl
or
in
movs
adc
cmp
xchg
push
sbb
in
daa
test
pop
jne
and
test
xchg
mov
mov
scas
outs
jbe
dec
mov
push
and
cmp
pop
mov
les
mov
add
retf
and
scas
mov
fst
dec
test
pop
rol
popa
lods
adc
dec
sbb
fs
sbb
loop
out
add
mov
adc
and
sbb
inc
mov
or
shr
arpl
add
into
popf
xor
sub
(bad)
push
sub
mov
sbb
shl
mov
mov
mov
push
push
mov
fnstsw
add
mov
aad
adc
(bad)
into
(bad)
jecxz
sahf
xchg
push
int3
add
pop
sub
sbb
pusha
xchg
pop
inc
out
imul
sbb
pop
xchg
xchg
hlt
or
or
(bad)
mov
mov
js
jmp
sahf
sbb
jmp
push
xor
mov
sub
cwde
inc
fs
push
mov
adc
and
outs
mov
dec
push
sub
in
adc
loope
fnstenv
pop
stos
xchg
inc
add
outs
int
push
push
or
imul
dec
inc
mov
dec
xchg
adc
dec
ror
push
bnd
daa
sar
push
xlat
push
jle
std
jns
mov
mov
ins
sbb
or
lds
sub
and
and
jecxz
bound
pop
sti
mov
arpl
mov
xor
int
ret
cld
lahf
out
or
in
out
xlat
and
push
mov
pusha
in
out
ins
or
stos
test
dec
dec
loopne
stos
cmps
or
scas
pop
test
in
dec
fadd
mov
and
movs
jno
inc
fadd
mov
sub
jge
aas
pusha
push
out
movs
lods
mov
dec
push
pop
fs
aam
rcl
xchg
cmps
(bad)
and
add
sub
mov
pop
scas
test
pop
test
push
mov
xlat
imul
pop
(bad)
xor
xor
mov
mov
inc
jmp
pop
leave
jb
stos
pusha
push
lods
push
mov
and
or
or
add
or
bound
std
mov
outs
iret
sar
sub
mov
jle
or
push
xor
add
rol
jg
cld
inc
mov
pop
repz
in
inc
xchg
(bad)
scas
cmc
jp
jmp
pop
xchg
stc
pop
inc
popa
iret
rcr
aaa
pushf
push
test
dec
mov
lock
addr16
mov
dec
cwde
push
inc
movs
call
mov
pop
mov
pop
add
mov
pop
(bad)
mov
bswap
(bad)
sbb
inc
xchg
movs
jmp
sbb
test
in
(bad)
mov
xor
and
push
pop
inc
mov
getsec
ds
imul
cld
and
xlat
lock
or
mov
shr
cli
mov
lods
outs
lock
mov
mov
mov
inc
push
pop
or
sub
aas
aad
rcl
dec
pop
icebp
jmp
jae
pop
cmp
xchg
and
repz
in
sahf
ret
(bad)
push
cmp
cld
outs
push
mov
cdq
xchg
push
leave
shl
and
cmc
pop
(bad)
mov
mov
or
cdq
popa
inc
mov
pop
push
pop
cs
push
cli
inc
push
mov
and
sub
mov
inc
ret
rol
and
lds
loopne
(bad)
pop
fwait
cmp
adc
int
add
cmpxchg
inc
sub
mov
xor
lods
push
xchg
repnz
(bad)
jge
sub
jmp
jae
lahf
cmp
mov
jns
repnz
clc
test
mov
and
adc
mov
cli
jge
idiv
add
sbb
push
mov
sub
mov
pop
icebp
jl
test
xchg
sub
adc
pop
jecxz
in
idiv
pop
aas
ja
or
(bad)
dec
lahf
ja
inc
and
adc
jns
mov
inc
mov
push
std
cmp
(bad)
mov
retf
call
test
jle
ret
pop
lahf
push
xchg
jb
test
or
mov
adc
js
mov
add
jmp
mov
rol
pop
cmp
pop
test
cld
mov
jmp
cwde
sbb
mov
(bad)
(bad)
mov
xlat
sar
stos
rcr
inc
lea
or
sbb
stos
pop
js
out
mov
push
retf
or
fstp
add
xchg
xor
and
outs
sub
pop
cwde
retf
lock
sbb
xor
scas
test
push
push
inc
mov
loop
push
mul
mov
sub
cmc
jecxz
and
sbb
dec
cmps
scas
scas
in
pop
mov
xor
aaa
fsub
push
push
sub
inc
jle
repnz
sub
xchg
retf
push
push
cmp
xlat
sub
pop
hlt
sub
mov
mov
mov
jg
inc
pop
ror
pop
xchg
mov
and
mov
clc
out
jg
push
push
or
mov
add
(bad)
not
push
sub
inc
sub
pop
sbb
(bad)
imul
mov
cdq
inc
or
push
xor
iret
enter
inc
pop
out
movs
jb
adc
nop
xor
mov
scas
cmps
in
pop
int
push
ror
adc
sbb
dec
ret
test
and
jae
retf
adc
dec
adc
aam
sar
out
mov
adc
test
cld
(bad)
cmps
dec
sub
xor
test
aam
inc
and
push
dec
sbb
and
add
test
outs
jg
sub
cs
add
sub
rcl
and
pop
js
sbb
jo
xlat
dec
cmp
xor
aad
call
aam
and
fcmovnb
jbe
out
push
xchg
lods
(bad)
lea
inc
push
push
mov
xchg
and
sbb
mov
pusha
ret
cli
sti
xchg
jge
fisubr
out
in
push
push
jbe
dec
movs
loopne
xchg
cmps
inc
inc
xor
xor
rol
and
mov
mov
inc
push
das
sbb
or
shr
pop
pop
jecxz
push
std
in
or
pop
in
sti
dec
pop
push
sbb
mov
xor
cmp
popa
jmp
(bad)
(bad)
nop
fmul
push
cdq
xchg
mov
cmp
and
adc
in
mov
pop
nop
rol
test
push
mov
jp
in
or
in
stos
in
sub
aaa
xchg
dec
jns
fadd
sub
add
loop
dec
and
lea
dec
xor
test
shl
adc
into
add
out
movs
xchg
movs
gs
sub
sub
push
cld
iret
inc
aaa
imul
cmp
int
(bad)
and
add
cmp
push
int
aam
inc
jno
cmp
inc
and
mov
int
sbb
test
or
mov
not
pushf
or
xchg
fcom
(bad)
stos
or
loop
add
add
push
iret
iret
mov
cmc
pop
push
mov
loop
sub
imul
jns
repnz
es
sub
adc
shl
pop
sbb
sub
sbb
in
xchg
les
lods
inc
int
push
pop
adc
adc
bound
mov
xchg
push
add
add
jo
rcl
loopne
push
scas
mov
dec
nop
into
daa
fsub
div
inc
cmp
dec
dec
mov
sub
sbb
mov
cmps
cdq
dec
add
jge
xchg
xor
jae
pop
imul
push
push
popf
cmp
shl
dec
jne
jae
(bad)
cmp
aad
stos
outs
movs
lods
push
in
icebp
loop
push
aas
aas
xor
je
mov
bound
cmp
pop
xor
pop
es
jmp
sub
in
mov
(bad)
stos
lahf
mov
cmp
leave
jg
sub
lods
cs
test
jmp
mov
rol
pop
xor
fs
gs
mov
xchg
jns
xor
retf
xchg
cmps
xchg
sub
push
retf
mov
cmp
sub
lock
and
inc
imul
push
popf
and
je
imul
mov
popa
push
mov
imul
push
sub
shl
add
add
pop
push
push
(bad)
imul
repnz
mov
xchg
inc
xor
push
pop
and
popa
scas
xchg
dec
fidivr
or
push
dec
pop
and
addr16
push
xchg
(bad)
cli
adc
mov
fdiv
jmp
inc
jae
xor
mov
aaa
or
arpl
aas
out
sub
add
in
dec
cwde
loope
popa
push
loopne
movs
rol
pop
pop
pop
loope
mov
pop
inc
daa
ds
cmp
lahf
cmp
movs
add
dec
or
jmp
arpl
adc
pop
pushf
or
sub
sub
sub
mov
addr16
rol
sub
add
jmp
pop
xchg
push
not
lea
retf
std
pop
jmp
dec
dec
cld
scas
es
mov
lods
sbb
jecxz
or
jmp
mov
jge
es
jo
out
sub
add
aas
aas
add
mov
pushf
xchg
dec
add
or
addr16
repz
dec
(bad)
movs
icebp
push
mov
mov
sub
jb
ss
or
shr
xor
jmp
push
and
nop
push
call
jmp
inc
(bad)
repz
xchg
mov
movs
pop
sbb
and
sbb
js
movs
call
(bad)
dec
dec
test
mov
bound
mov
push
jnp
xchg
xchg
mov
jecxz
xlat
and
repz
cmps
inc
sbb
mov
mov
lahf
pushw
pusha
movs
inc
stos
jb
pop
xchg
in
jecxz
xor
cwde
imul
retf
hlt
test
xor
jge
stos
sub
mov
push
repz
shl
mov
push
sbb
iret
fldpi
in
lods
pushf
jp
and
xchg
inc
dec
pop
jmp
dec
push
std
lods
jae
xchg
cmp
add
(bad)
js
lahf
push
aas
cmps
fist
stos
and
lahf
mov
mov
jne
and
mov
push
repnz
(bad)
push
dec
inc
or
push
push
adc
push
dec
ins
adc
jo
mov
jmp
fild
test
jl
movs
dec
mov
hlt
mov
mov
sub
xchg
scas
cmp
iret
(bad)
fdivr
ror
and
mov
or
ret
jno
xchg
ficom
int3
adc
scas
adc
repnz
dec
push
out
jo
push
dec
mov
imul
hlt
ja
scas
addr16
sub
mov
inc
lds
jne
nop
aad
(bad)
dec
loope
outs
fst
inc
mov
cmp
add
sbb
mov
adc
mov
out
hlt
jp
and
add
ucomiss
les
fist
fidivr
mov
dec
shr
cmp
(bad)
enter
add
xchg
sub
nop
test
adc
sbb
push
jne
stc
cmp
fsubr
push
sbb
mov
lahf
clc
pop
inc
xchg
daa
das
xchg
sbb
test
cmps
pop
mov
test
repnz
dec
dec
and
loope
sub
xor
or
add
aad
fwait
(bad)
dec
test
or
ja
inc
or
pop
cmp
inc
nop
add
push
aas
jmp
push
xor
pop
sub
xlat
cwde
rol
sti
mov
mov
call
out
shr
adc
jge
sub
jo
jl
mov
sbb
add
mov
sbb
and
ret
in
jmp
inc
dec
xchg
les
mov
je
mov
dec
sbb
and
sahf
ret
dec
lods
add
xchg
in
jle
adc
dec
adc
mov
push
rol
fsub
mov
mov
xchg
aas
dec
cs
and
loopne
mov
daa
cdq
xchg
dec
inc
adc
inc
dec
cmps
xor
sbb
pop
in
jmp
jnp
out
or
xor
push
xor
add
add
fs
jo
jl
push
xor
sbb
add
xchg
js
cld
mov
cmc
fmul
ret
push
inc
xchg
sbb
push
fmul
xor
aas
xchg
fwait
repz
cld
pop
(bad)
xlat
pop
push
pop
inc
ja
bound
dec
add
inc
repnz
in
std
cmps
or
push
push
dec
push
int
jne
scas
sbb
(bad)
sub
xor
aad
nop
or
xchg
inc
inc
or
dec
les
mov
xor
push
icebp
in
aas
jne
and
dec
mov
xor
jle
cmp
test
dec
mov
imul
cmps
clc
sub
icebp
jmp
sbb
add
push
les
inc
dec
fsub
adc
cli
sub
lahf
popa
retf
mov
or
aas
test
dec
sbb
jne
clc
mov
retf
mov
cmps
ret
stos
js
int3
cmps
xchg
cmp
cmp
cmp
cmps
lahf
mov
out
add
xchg
test
mov
ja
pop
push
pop
mov
add
aam
adc
je
xor
inc
sbb
sbb
(bad)
push
out
(bad)
mov
jecxz
pop
sbb
xchg
cmp
call
or
cdq
aas
jo
adc
test
into
ins
pushf
(bad)
sbb
mov
rol
add
ss
cmp
scas
test
mov
jg
lahf
outs
xchg
repnz
or
mov
iret
inc
xchg
sbb
bnd
push
test
(bad)
scas
rcl
dec
jnp
mov
popf
enter
(bad)
xor
cmp
sub
and
sbb
mov
or
pop
xor
sbb
das
xchg
or
inc
sub
mov
inc
aam
loop
lock
cwde
in
cmps
cmp
inc
sbb
call
fcomp
lds
xor
rcr
(bad)
dec
lahf
inc
push
jno
pop
cmp
cmp
xor
add
fs
sar
jmp
sbb
cmp
sub
and
stos
xor
xor
imul
jne
(bad)
dec
rol
xor
lahf
mov
clc
ins
fmul
inc
cmp
pop
or
mov
adc
cmps
stos
lods
stos
cmps
(bad)
jecxz
and
scas
lods
xchg
sub
sub
imul
mov
fisttp
fistp
sbb
push
add
idiv
mov
loope
xor
addr16
adc
cli
sub
daa
stos
mov
icebp
icebp
sub
dec
push
cmp
pop
fdivr
and
push
cmp
movs
xor
int3
push
mov
scas
lods
cdq
js
outs
jo
xor
(bad)
(bad)
jmp
mov
daa
sub
mov
add
jo
loopne
push
outs
xor
cld
div
in
(bad)
loop
and
imul
dec
mov
aad
jo
enter
shl
(bad)
inc
xchg
adc
xchg
fbstp
adc
icebp
fcomp
iret
mov
scas
das
xor
jo
add
mov
retf
push
mov
cdq
mov
mov
cmp
pop
outs
mov
and
adc
dec
xchg
mov
xor
inc
xor
dec
mov
jge
sahf
pop
mov
cmps
rcl
or
(bad)
jb
out
cwde
jecxz
inc
xor
and
jno
out
pop
mov
scas
jecxz
add
mov
es
push
add
add
adc
dec
cmp
push
(bad)
fimul
or
test
lea
test
mov
cmc
dec
sbb
cs
in
fimul
int
sub
lea
hlt
xor
dec
arpl
daa
adc
jmp
out
adc
mov
ror
iret
mov
fs
dec
gs
fimul
inc
add
and
inc
mov
or
xchg
sbb
add
xchg
ret
cli
cld
mov
jb
sub
sub
ret
xor
xor
nop
(bad)
pop
xchg
lea
mov
inc
inc
or
pop
shl
outs
pop
xchg
and
xor
xchg
adc
push
fimul
stos
ja
push
add
and
mov
idiv
mov
cmc
push
jmp
add
dec
mov
xchg
dec
test
jp
addr16
mov
icebp
mov
sbb
push
sbb
push
cmp
and
popf
imul
pushf
jne
into
mov
movs
js
repz
cmp
fs
int
mov
cmp
xchg
cmp
xchg
xchg
and
cwde
test
fiadd
pop
or
push
sbb
mov
inc
push
inc
aas
ret
pop
out
mov
sti
dec
aas
leave
dec
inc
xchg
outs
and
out
jne
push
fisttp
outs
xchg
rol
ret
nop
mov
aaa
imul
mov
fsub
pop
lods
ins
(bad)
inc
stos
jmp
push
fidivr
out
xchg
stos
xchg
inc
pop
(bad)
sbb
xlat
xchg
pop
in
shl
xchg
mov
inc
push
inc
fld
sbb
in
inc
dec
aas
xchg
push
xchg
xor
cld
push
and
pop
dec
mov
gs
ret
push
sub
sub
and
mov
or
bound
jl
push
pushf
inc
jle
mov
pop
push
call
arpl
stc
jl
xor
push
shl
pop
repz
outs
pop
cmps
mov
add
cmp
jns
(bad)
mov
outs
scas
loopne
xor
nop
(bad)
jno
pop
sub
xchg
pop
sub
dec
pop
dec
xchg
dec
cmp
sbb
mov
imul
cli
mov
ds
not
outs
mov
inc
xor
ds
in
loopne
inc
inc
dec
mov
and
mov
pop
out
call
(bad)
data16
sub
repnz
aaa
lock
dec
sub
test
cmps
sar
inc
adc
ds
sbb
mov
xor
jbe
mov
idiv
lods
cmp
stos
cmps
mov
je
pop
addr16
xchg
into
xor
cmc
adc
test
adc
fistp
adc
jmp
lods
(bad)
mov
scas
sub
retf
and
test
push
fs
adc
or
lea
cmp
les
jecxz
ja
(bad)
shl
(bad)
dec
dec
push
push
or
jmp
nop
cdq
pop
mov
(bad)
push
add
les
mov
add
sub
jae
or
arpl
xor
test
sub
jl
add
pop
inc
pop
cdq
call
mov
call
outs
lods
pop
jmp
sbb
enter
mov
mov
fdiv
ss
sbb
jl
sub
jmp
sbb
sbb
mov
(bad)
out
fs
pop
mov
pop
mov
lds
sub
scas
or
fs
cwde
movs
cmps
push
jp
mov
mov
sub
in
xor
inc
cli
add
mov
and
jne
cmps
mov
xchg
stc
in
cmp
sar
clc
dec
test
mov
xor
cmp
xchg
xor
leave
and
push
mov
xchg
push
inc
xor
pop
pop
jle
inc
scas
in
daa
jg
pop
dec
icebp
adc
adc
addr16
inc
int
cmp
loope
dec
inc
add
pop
xchg
in
xor
sbb
mov
or
mov
sub
xor
iret
enter
fwait
push
add
fst
mov
xor
stos
aam
xchg
idiv
jns
repnz
call
bound
cmp
sti
aas
cdq
scas
inc
stos
in
bound
and
lods
popf
push
cs
and
mov
ret
ja
out
adc
mov
fisttp
push
xlat
ins
call
shl
mov
outs
push
sbb
clc
inc
fiadd
xchg
sbb
cmps
dec
hlt
enter
lods
mov
call
pushf
mov
mov
fdiv
mov
dec
sub
mov
scas
mov
adc
or
out
into
lods
daa
stos
push
jp
sbb
mov
sar
addr16
aam
leave
aaa
ss
sti
(bad)
sbb
sbb
(bad)
dec
jle
sbb
mov
loope
dec
cmp
inc
test
push
mov
jle
mov
inc
dec
das
pop
adc
add
dec
jns
repnz
int
sbb
xor
sbb
jmp
ret
mov
mov
fcomp
sub
je
ficom
xchg
movs
cmc
jns
mov
or
(bad)
mov
std
mov
mov
leave
add
scas
cmp
sub
imul
lods
pop
lea
pop
push
fs
push
jo
mov
retf
pop
cmps
shr
lds
shl
jecxz
mov
jmp
xchg
and
jecxz
cmp
cwde
cmp
pop
xor
pop
add
lahf
jmp
inc
cmp
mov
cdq
inc
inc
adc
mov
ror
dec
test
jge
stc
je
call
pop
pop
stos
cmps
jp
shl
mov
outs
jg
neg
lea
popa
push
stos
adc
(bad)
jge
mov
jbe
pop
sbb
out
inc
mov
not
sub
cmp
rep
dec
ret
adc
mov
push
sbb
aas
in
jge
std
fcom
mov
and
stc
rcr
aas
jmp
mov
or
lahf
xor
mov
ror
daa
push
xchg
enter
push
ror
bound
pop
jns
cmc
sub
xchg
(bad)
mov
jne
inc
or
pop
lea
repnz
aam
cmp
inc
pop
mov
sbb
add
repz
mov
gs
push
push
dec
sbb
ficom
sar
cmps
inc
pop
lahf
cmps
rcr
fcmove
outs
mov
sbb
pop
lea
inc
lahf
mov
push
xchg
aas
aad
or
mov
fsub
pusha
pop
xchg
int3
sub
pop
jmp
mov
cmp
pop
add
mov
les
out
gs
cmp
movs
push
jb
rcr
cmp
int
call
jle
push
(bad)
pop
inc
sbb
popf
lahf
leave
leave
bound
mov
bound
ja
aam
pushf
dec
pop
cmovle
pop
and
adc
cld
inc
or
cmp
mov
fs
aaa
sbb
push
dec
dec
push
dec
or
(bad)
jmp
std
aas
pop
cmp
ss
and
cmp
sub
sbb
or
and
mov
mov
pop
dec
mov
jns
test
dec
push
mov
std
mov
adc
jmp
dec
xlat
fisubr
mov
dec
bnd
pop
xchg
dec
or
jae
aam
int3
pop
retf
add
arpl
xor
test
aas
iret
xchg
or
inc
int3
imul
adc
dec
push
jno
and
add
mov
icebp
inc
iret
imul
sbb
out
cdq
arpl
pop
inc
or
xor
sti
daa
mov
sbb
test
sub
and
out
lahf
pusha
fistp
inc
xor
aad
and
jns
int3
jp
pop
add
and
(bad)
push
(bad)
retf
call
cmp
test
push
xor
mov
cmp
cmp
push
fsubr
div
dec
or
shl
loopne
fstp
mov
leave
jmp
jg
pop
sub
aas
sub
test
movs
mov
and
imul
add
push
and
fwait
sti
xor
mov
fmul
mov
dec
jns
sar
xchg
loop
jl
push
cld
(bad)
cli
mov
sub
in
ja
mov
sub
xchg
bound
inc
mov
ret
imul
das
clc
fldcw
aam
in
outs
pop
inc
shl
pop
fstp
(bad)
mov
ror
in
out
pop
out
bnd
sahf
mov
repnz
loop
pop
fst
and
push
push
outs
dec
out
(bad)
inc
(bad)
mov
xor
jmp
enter
imul
sub
lahf
xchg
lahf
inc
xor
rol
imul
call
mov
retf
jne
mov
retf
retf
sbb
in
cvtpi2ps
xor
add
pop
out
and
arpl
sti
pusha
adc
mov
imul
add
call
loop
cmp
mov
inc
inc
enter
scas
inc
mov
aam
imul
mov
push
icebp
dec
push
push
in
inc
xchg
aas
test
push
mov
xlat
idiv
add
mov
add
into
call
mov
sbb
jnp
pusha
test
sbb
fwait
and
or
outs
inc
dec
inc
or
dec
repz
daa
mov
and
fcom
xlat
bound
xchg
cmc
mov
scas
push
add
ror
icebp
push
mov
mov
add
inc
xchg
sahf
test
cmp
mov
cwde
test
icebp
lods
jg
push
les
les
mov
out
mov
jo
push
loope
aam
xchg
lds
cvtpi2ps
mov
adc
pop
push
sbb
imul
(bad)
cmp
fisub
call
das
shr
or
add
dec
lea
scas
test
movs
jl
jmp
test
sti
cmp
std
add
xchg
inc
mov
jle
mov
dec
or
push
xor
xor
rol
repnz
into
add
lods
and
mov
ss
(bad)
out
shl
stos
xor
mov
ins
sar
inc
mov
cmps
lea
mov
sbb
je
fdivr
neg
xchg
stc
mov
jmp
js
cmps
scas
arpl
mov
leave
leave
aaa
and
iret
mov
es
ss
add
dec
mov
xchg
mov
cmps
sbb
aam
jge
ffree
rcl
je
mov
or
adc
rcl
sub
xchg
arpl
sbb
pop
cmps
xchg
aam
or
jmp
mov
cmp
test
stc
jle
iret
cmps
in
daa
lea
push
jmp
inc
in
icebp
jmp
ja
push
aas
fnsave
mov
rol
and
mov
popf
pop
push
cld
pop
bound
pop
scas
mov
mov
stos
jns
mov
call
fiadd
xor
pop
cmp
(bad)
in
mov
cwde
repz
retf
stos
mov
dec
in
push
fistp
dec
dec
sbb
xor
int3
jne
outs
push
xor
fist
push
in
mov
xor
jb
or
push
retf
mov
fsub
jecxz
add
xor
call
inc
in
inc
pop
xor
loopne
nop
inc
xor
sbb
cmp
enter
and
pusha
xchg
cmps
fcmovnbe
ja
sub
jo
les
imul
in
xor
mov
cld
jge
xor
dec
push
ds
xchg
test
mov
in
sub
mov
mov
and
int
int
cmps
and
clc
in
fwait
nop
push
mov
add
lock
jb
inc
pop
push
lahf
jl
ins
aaa
pop
or
xchg
adc
mov
and
pushf
push
imul
enter
xchg
dec
and
push
lods
xor
outs
sub
xchg
inc
icebp
dec
xor
adc
(bad)
out
jae
sbb
fwait
les
in
mov
cmp
add
cld
ret
mov
pop
mov
or
mov
and
stc
cli
je
xor
sbb
cmps
push
mov
(bad)
sbb
stos
sbb
mov
std
mov
adc
pop
in
add
stos
adc
mov
pop
sbb
cdq
inc
aaa
dec
loope
push
call
jmp
mov
push
push
pop
loope
push
addr16
jmp
aad
sbb
in
in
stc
sahf
je
sbb
and
mov
jmp
pop
cwde
jmp
or
cmps
inc
(bad)
arpl
and
sti
test
inc
inc
js
(bad)
jne
sbb
pop
fs
and
dec
pop
(bad)
bound
push
imul
push
scas
xor
call
div
js
sub
push
dec
jecxz
or
sub
ins
(bad)
adc
and
xchg
and
mov
dec
and
sub
ret
icebp
mul
fst
dec
pop
shl
bound
pop
lock
stc
icebp
jmp
adc
lock
pop
xor
pop
xchg
movs
add
shr
lds
aas
inc
inc
in
push
or
(bad)
out
ror
scas
adc
xchg
repz
cli
sahf
or
push
imul
and
pop
xchg
cmp
fsubr
cmc
add
fisubr
inc
pop
cmp
repnz
ds
mov
sub
test
ss
shl
(bad)
scas
push
pop
nop
ins
stc
push
les
in
rcl
inc
ja
xor
in
push
call
pop
(bad)
xchg
stc
mov
lea
adc
inc
dec
and
mov
dec
xchg
mov
out
in
mov
test
test
and
scas
xchg
sub
ins
pop
add
sbb
imul
je
scas
mov
push
inc
cmp
(bad)
add
pop
xor
aad
xor
inc
jnp
fabs
pop
inc
mov
stos
jae
test
mov
xlat
shl
push
pop
cmps
add
sub
inc
push
sti
xor
inc
test
in
dec
daa
xchg
clc
neg
scas
xor
cli
dec
in
mov
aad
lods
ds
(bad)
xor
test
sbb
nop
mov
dec
sbb
adc
cmps
and
sbb
jne
sahf
sahf
pop
inc
xchg
push
jge
sub
(bad)
sbb
lea
stos
inc
ret
fucomip
push
mul
ss
mov
or
push
stc
lock
sar
lods
adc
in
push
xor
add
cmp
dec
retf
int
sub
adc
sub
adc
sbb
sbb
dec
jb
mov
jle
cmp
fdiv
fdiv
or
mov
xor
daa
ds
popa
sahf
call
(bad)
shr
sbb
ret
jmp
push
mov
inc
fwait
mov
push
cmp
push
adc
sub
pop
mov
cmp
add
sbb
cmp
out
mov
scas
sbb
push
out
jnp
loopne
or
ds
add
popf
daa
in
xor
mov
std
inc
in
stc
mul
pusha
sbb
or
dec
dec
neg
xor
sub
aam
jg
jge
mov
jo
inc
fcmovne
(bad)
iret
jmp
cdq
clc
jne
outs
mov
(bad)
fnstenv
loopne
leave
sbb
cwde
push
mov
mov
stos
sub
pop
mov
stos
test
or
(bad)
mov
push
pop
cdq
mov
add
lods
retf
nop
aam
enter
inc
inc
enter
or
loope
lea
mov
aad
retf
push
or
bound
fld
xor
push
lods
into
ins
jg
jmp
(bad)
jnp
out
out
sbb
mov
(bad)
mov
add
cmp
pop
cdq
jno
in
adc
and
xor
jle
shl
fistp
mov
retf
retf
push
inc
bound
icebp
push
ins
and
add
dec
mov
fdivr
lods
jg
sub
or
fsubr
loopne
sub
repz
clc
push
mov
cmp
popf
sub
push
pusha
fidivr
cmps
std
inc
lahf
adc
rcl
sbb
inc
pusha
inc
aas
sahf
cmp
div
fdivp
xchg
sub
(bad)
add
retf
xchg
cmp
sbb
sbb
mov
dec
or
outs
adc
push
xchg
and
inc
adc
sbb
adc
(bad)
jno
push
sub
in
adc
and
lods
push
test
fwait
and
sbb
scas
scas
mov
(bad)
mov
retf
sub
add
cmp
sbb
(bad)
lahf
jmp
cmp
int
or
pushf
movs
movs
mov
sub
movs
js
es
adc
or
popf
stc
push
pop
push
test
mov
rcl
jge
pop
fist
lods
cmps
jbe
and
xor
dec
or
mov
leave
sub
shl
sahf
jg
cmp
mov
inc
mov
dec
push
xor
shl
or
mov
stos
push
mov
scas
cld
fidiv
sub
mov
fs
push
daa
ds
pop
call
daa
mov
imul
imul
fstp
ss
scas
lahf
push
rcr
call
or
movs
mov
dec
in
scas
inc
push
push
pop
lock
mov
jge
es
into
xor
repnz
arpl
(bad)
imul
and
outs
inc
addr16
push
mov
loopne
inc
push
xchg
scas
cli
xchg
aam
scas
sub
add
imul
cmp
pop
push
data16
in
outs
jmp
(bad)
into
adc
clc
xchg
push
jp
xchg
xchg
imul
and
test
in
hlt
nop
jg
xlat
fldcw
jl
jg
rol
jmp
dec
mov
popf
retf
pushf
mul
lahf
ds
test
pop
sbb
mul
lock
pushf
adc
(bad)
fstp
jmp
aam
dec
xchg
(bad)
add
inc
mov
cld
push
stc
std
js
mov
aaa
outs
dec
ss
jo
inc
pcmpgtw
jae
in
daa
dec
gs
jge
into
popf
xchg
adc
cmp
adc
out
jg
test
or
in
fnstenv
sti
pop
mov
inc
push
adc
mov
jg
mov
ss
jbe
sub
cmp
sub
jb
outs
fist
test
arpl
lods
and
add
mov
sti
movs
mov
pusha
mov
ror
in
or
mov
pop
daa
pop
dec
inc
and
popf
xchg
push
mov
jmp
cli
scas
cli
inc
mov
xchg
out
jbe
pop
sub
mov
hlt
sti
js
std
dec
dec
in
inc
and
mov
add
imul
cdq
inc
push
rol
ins
(bad)
or
inc
addr16
pop
addr16
push
mov
(bad)
loopne
lea
test
xchg
mov
scas
push
loopne
inc
mov
or
adc
cld
sbb
push
fiadd
loop
shl
cmc
(bad)
call
aam
out
aam
shl
and
jg
push
xlat
out
xchg
test
jle
cld
mov
fsub
loopne
(bad)
loop
mov
inc
daa
push
daa
icebp
xchg
scas
inc
mov
jge
stc
mov
mov
pop
stos
or
mov
xchg
mov
inc
pop
fisub
rep
leave
imul
push
push
sub
xchg
stc
icebp
std
mov
push
into
sbb
scas
pop
xlat
cld
cwde
loope
in
xor
mov
(bad)
push
sub
out
inc
push
mov
pop
sub
data16
jnp
dec
hlt
jmp
or
inc
into
or
ds
fisub
mov
mov
or
xor
xor
lahf
pop
fucom
mov
pop
mov
jne
mov
cwde
xchg
adc
or
clc
mov
sub
(bad)
fild
jmp
rcl
mov
mov
cmps
aad
push
out
stos
push
pop
mov
cmp
clc
mov
adc
sbb
test
nop
pop
xor
and
cli
cmp
ret
mov
jno
cdq
cmp
sub
sar
push
pop
pop
fs
out
fbstp
fld
or
fwait
cdq
jne
xor
test
(bad)
sbb
retf
mov
cmps
sti
stos
cmp
cmp
fmul
fistp
neg
enter
mov
dec
in
push
dec
xchg
popf
or
jnp
xlat
xor
mov
xor
jle
xchg
jmp
pop
sub
mov
and
dec
fcom
loope
into
dec
mov
adc
mov
lods
dec
adc
jg
(bad)
mov
adc
mov
and
jmp
and
inc
in
in
and
sub
pop
pop
xchg
popf
dec
sahf
jg
cli
fmulp
pop
inc
jae
and
cld
inc
outs
inc
not
(bad)
div
rol
mov
adc
dec
pop
test
test
cmp
mov
xchg
push
sub
push
aam
and
fs
test
push
add
cs
push
data16
mov
sar
cwde
push
mov
adc
and
xchg
pop
sbb
jmp
push
xchg
sbb
cld
outs
jns
rcr
mov
(bad)
scas
mov
fs
jecxz
mov
xchg
dec
stos
(bad)
cmps
mov
outs
pop
(bad)
cmc
xor
add
pop
mov
xchg
dec
add
pushf
mov
fmul
icebp
add
rol
stc
mov
call
stos
jno
cmp
mov
sbb
dec
xor
cdq
int3
inc
ror
icebp
mov
rcr
in
mov
xor
push
or
cmc
pop
push
data16
pop
ret
lock
and
push
jmp
div
fs
fcmovu
idiv
or
dec
xor
add
cli
call
mov
cmps
cwde
mov
or
mov
dec
jo
rol
push
pop
vpshad
and
pop
(bad)
(bad)
push
leave
jns
test
or
sub
cmps
dec
mov
xor
nop
mov
adc
mov
mov
test
cmp
dec
or
push
cdq
je
call
test
adc
pop
fisubr
mov
and
(bad)
enter
fsubp
lahf
(bad)
jmp
and
mov
aam
xchg
push
push
pop
push
xchg
lds
push
mov
add
aam
xor
mov
idiv
arpl
or
int3
push
push
stc
inc
mov
je
fwait
pop
ret
push
unpcklps
out
int3
lea
sub
jbe
sub
mov
movs
inc
cmp
movzx
pushf
scas
mov
dec
cmps
imul
fdivr
pop
pop
mov
arpl
test
movs
in
sub
add
(bad)
xor
xor
pop
sti
dec
retf
inc
sub
mov
int3
(bad)
test
and
shl
add
mov
(bad)
ins
pop
cwde
mov
and
std
adc
push
jecxz
imul
add
aad
add
lods
stos
arpl
lahf
jae
loop
sbb
cmp
and
out
mov
xchg
adc
test
enter
push
sub
xor
ror
popa
fbstp
jae
fisttp
call
sbb
sub
in
add
cmp
and
jge
mov
mov
cmp
mov
movs
cmps
push
sbb
dec
mov
add
xchg
jmp
mov
push
lea
mov
scas
dec
inc
pop
push
push
push
xchg
call
jae
jae
in
cmp
dec
sub
jns
dec
inc
adc
jae
jne
push
aad
jno
or
sub
shl
xchg
dec
je
cs
stos
addr16
xchg
(bad)
xlat
dec
lahf
pop
fwait
xor
outs
dec
loop
push
sahf
cmp
nop
mov
cmps
call
mov
cwde
popf
xlat
inc
hlt
push
adc
sub
fucom
movs
cdq
jl
es
(bad)
cmp
sub
nop
das
(bad)
fcmovnu
ins
out
cmp
mov
cmps
and
popa
mov
cmp
mov
xchg
sbb
repz
sti
jno
mov
push
ret
push
adc
sub
dec
movs
icebp
test
retf
pop
add
das
int
in
sub
ja
jb
cwde
cwde
call
bnd
push
inc
add
push
cwde
(bad)
cwde
movs
jge
shl
mov
rcr
sub
shl
add
ds
mov
fistp
arpl
loope
xor
cmps
dec
cmp
enter
aas
and
lock
push
push
out
dec
lods
xor
es
popa
xor
gs
jmp
sub
mov
pusha
xchg
into
mov
or
inc
mov
std
out
dec
adc
inc
into
scas
daa
in
jg
lds
adc
mov
jbe
mov
dec
adc
adc
or
movs
push
(bad)
loope
mov
fdiv
mov
fldcw
dec
rol
push
push
out
sbb
xchg
movs
push
(bad)
fld
cli
addr16
sub
cmp
mov
jl
lea
xchg
pop
dec
and
adc
test
mov
imul
xchg
(bad)
jg
popa
sub
rol
nop
push
push
pop
xlat
sub
push
pusha
sub
inc
pop
adc
and
popf
daa
(bad)
adc
inc
dec
lea
xor
push
xchg
dec
push
adc
pop
mov
int
lock
fmul
pop
movs
js
push
or
sahf
inc
add
outs
jne
and
movs
jge
dec
add
jo
lahf
iret
cmps
(bad)
test
xchg
mov
sub
xor
cmp
mov
dec
inc
jmp
dec
sbb
outs
push
stos
mov
cmp
sub
jno
jl
xor
sbb
popw
sti
aas
mov
fs
stos
xor
pop
movs
pop
mov
cmp
cmp
jge
xor
(bad)
adc
icebp
sub
jb
push
in
iret
add
xchg
xchg
push
push
sub
sub
xlat
and
xor
sub
shl
cmp
xchg
sub
mov
and
and
dec
sbb
sub
in
dec
or
inc
xlat
jmp
lea
inc
xchg
enter
loope
push
(bad)
push
pop
fst
imul
xchg
mov
jge
mov
push
sub
mov
in
in
cs
sub
inc
pop
bound
mov
pop
retf
test
or
rcl
push
inc
test
mov
cmp
(bad)
pop
sub
cs
adc
callw
inc
inc
pop
push
scas
push
pop
adc
test
mov
outs
aas
(bad)
fdivr
enter
stos
iret
add
pop
aam
jecxz
add
mov
jecxz
or
stc
cmp
rcl
mov
dec
pop
cld
ins
and
(bad)
cmc
pop
aam
jns
nop
dec
int3
repz
nop
test
xor
mov
test
mov
add
xchg
add
repz
call
cs
jle
ror
std
or
and
popa
mov
push
lahf
mov
mov
xchg
int
lods
push
mov
retf
dec
dec
mov
fdivrp
sti
cvtdq2ps
pop
pop
(bad)
xchg
jg
xor
lds
repz
ror
mov
inc
or
push
out
mov
iretw
push
push
fs
sub
rcl
xchg
arpl
mov
dec
dec
imul
xor
mov
mov
mov
inc
jecxz
pop
fcomi
je
ins
or
dec
jge
push
sbb
xchg
ins
mov
or
ins
push
xchg
push
inc
sub
pop
pushf
dec
dec
loop
(bad)
cld
scas
fild
adc
fcmovu
(bad)
and
mov
sub
test
ins
addr16
add
xlat
dec
or
push
iret
xchg
inc
pop
push
dec
mov
pushf
dec
cmp
push
sbb
adc
dec
adc
xchg
aas
xlat
fadd
rol
jns
leave
and
add
add
ret
mov
int3
cmp
push
add
ror
xor
cmp
jmp
jno
push
and
push
xchg
or
loop
and
pop
sbb
lahf
push
arpl
xlat
xor
and
out
adc
loop
hlt
iret
dec
mov
dec
imul
movs
stos
dec
arpl
lods
mov
and
das
pusha
cld
aas
jmp
pop
neg
leave
test
inc
dec
xchg
push
push
aas
fsub
ret
xchg
cmps
movs
out
pop
outs
mov
imul
scas
adc
repz
jmp
call
or
int
dec
ficomp
rcl
dec
inc
retf
xor
aam
add
and
mov
or
inc
ret
push
setbe
popf
jp
jnp
fwait
inc
cmp
sbb
pop
cmp
stc
or
pusha
mov
pop
inc
ds
and
into
sub
frstor
add
fwait
pop
aam
fcomp
mov
sub
test
loopne
repnz
les
jl
jae
nop
sbb
in
sbb
pop
push
dec
pushf
xor
and
xchg
rcr
scas
xor
adc
aas
in
in
stc
outs
jle
mov
xchg
xchg
ds
cld
lds
dec
lods
mov
inc
cli
jns
dec
jae
inc
js
clc
dec
scas
or
sbb
push
arpl
push
dec
push
xchg
imul
xchg
sbb
mov
scas
mov
out
pop
push
test
dec
adc
or
cld
cmp
jbe
and
dec
or
xor
lods
sbb
dec
aam
push
(bad)
push
mov
sbb
imul
(bad)
enter
inc
gs
cmp
(bad)
stos
dec
icebp
(bad)
sti
cmp
nop
lods
sar
push
dec
js
scas
push
sbb
pop
aad
xchg
leave
mul
sbb
inc
or
out
enter
aas
js
and
ins
ins
jecxz
jle
fsubr
cs
ror
lds
xchg
mov
scas
adc
jo
ins
mov
pop
mov
mov
inc
inc
add
mov
mov
xor
mov
test
mov
fdivr
lea
mov
outs
jo
repz
retf
sbb
push
or
clc
mov
pop
out
js
std
popf
inc
sbb
stos
sub
rol
into
sub
mov
pop
fimul
and
aaa
push
and
test
sti
add
jns
mov
das
out
fstp
xchg
xchg
inc
cs
mov
add
jecxz
(bad)
xlat
iret
std
mov
cs
popf
xor
bound
stos
stos
or
scas
les
leave
mov
std
(bad)
pusha
lods
xchg
movs
data16
push
fs
inc
pop
mov
sar
push
cdq
fxch
xchg
ins
lea
inc
add
dec
repnz
inc
in
cmp
mov
scas
pop
mov
cmp
or
pop
dec
jns
pop
test
lods
outs
ins
add
pop
jp
nop
and
or
push
cs
js
xchg
jmp
cs
(bad)
xor
scas
pop
dec
sub
stc
hlt
sti
dec
dec
jmp
mov
out
pop
(bad)
pop
jno
push
jmp
rcr
popf
mov
add
lds
cdq
loop
imul
hlt
push
jno
mov
ins
mov
enter
call
lods
xor
(bad)
rcl
fs
push
and
adc
test
bound
arpl
out
idiv
in
les
div
inc
cmps
movs
aaa
cdq
clc
lea
xchg
cmp
sub
push
and
add
mov
in
jmp
or
test
(bad)
push
cmp
jecxz
inc
js
xor
popa
push
cmc
inc
out
hlt
ss
arpl
scas
pusha
mov
cmp
cmp
xor
push
leave
add
xor
sub
mov
cs
mov
fdivr
sub
or
sahf
and
retf
xor
xchg
movs
in
mov
in
div
out
and
call
dec
aas
iret
movs
xor
rcr
pop
aam
sahf
jne
(bad)
stc
jle
add
jp
scas
sbb
sbb
xchg
mov
fcmovne
adc
pop
push
or
ficomp
cmp
repz
push
aad
lds
and
add
xchg
push
dec
add
out
adc
add
js
enter
pop
add
mov
add
js
inc
nop
sub
fmul
push
xchg
pop
xor
fdiv
(bad)
rcr
mov
mov
inc
aam
inc
sahf
pop
or
pop
and
hlt
jne
dec
and
inc
stc
ins
sub
enter
js
fcompp
(bad)
std
into
push
inc
dec
lock
je
adc
inc
popa
cmp
int
add
jmp
mov
pop
sbb
inc
mov
or
and
xchg
add
add
mov
rcl
xor
test
call
test
xlat
and
mov
retf
and
imul
cmp
pop
mov
xlat
push
sar
adc
mov
mov
add
sub
push
stc
aam
lahf
in
jmp
out
xor
dec
cld
not
rol
(bad)
sbb
(bad)
loop
mov
(bad)
lahf
dec
jle
lods
lods
test
lock
xor
jmp
popf
test
inc
push
dec
cli
mov
mov
retf
push
push
xchg
pushf
push
aam
xchg
les
inc
mov
ror
mov
fld
jae
mov
sahf
push
adc
(bad)
pop
out
stos
adc
and
xchg
cmp
xchg
call
bound
fwait
sub
pop
sbb
inc
cmps
push
in
jg
xchg
in
movs
or
into
bound
xor
int
ja
ja
loope
sub
push
mov
cld
mov
aam
lds
out
(bad)
fcmovnb
test
or
cmp
clc
cmp
dec
cmps
dec
imul
bound
sub
add
ss
hlt
dec
mov
cld
mov
adc
mov
push
lods
push
aaa
push
sub
out
jo
dec
push
adc
adc
dec
sub
imul
shr
xor
dec
add
outs
jns
neg
in
mov
sub
setbe
push
inc
outs
add
lock
loopne
clc
mov
out
addr16
fstp
mov
adc
aad
mov
and
and
inc
fmul
cld
jae
jecxz
and
call
mov
call
xchg
fmul
jge
add
sbb
mul
popf
or
pop
sahf
call
leave
and
push
add
cmp
cli
fcmovnu
xchg
stos
(bad)
adc
inc
lock
jg
daa
int3
lock
call
xchg
xor
pop
aas
jmp
jb
cmc
cmps
and
adc
xor
mov
mov
push
pop
and
xor
mov
iret
pop
ss
mov
jecxz
xchg
jns
mov
add
mov
fs
mov
in
xchg
mov
xchg
jb
out
stos
sbb
jbe
sbb
xchg
call
fdivr
mov
fcmovu
dec
fist
xchg
dec
cmp
xor
int
mov
push
mov
out
push
out
xchg
sub
lahf
xor
dec
push
cmps
inc
imul
jecxz
(bad)
cmps
imul
mov
push
add
push
and
call
stos
loop
enter
mov
shr
sub
sbb
push
mov
pop
xor
mov
loopne
retf
xchg
outs
out
scas
movs
js
gs
leave
jae
push
stc
cli
xor
jl
test
cdq
lods
in
scas
in
xor
xor
and
mov
bnd
fcom
push
inc
push
inc
sub
outs
mov
iret
in
mov
imul
mov
rol
xor
or
mov
cmp
pop
ins
add
sbb
inc
or
push
pushf
jp
mov
pushf
jbe
aad
fdivr
pushf
dec
xor
push
jmp
mov
push
cmp
add
mov
xchg
mov
mov
vmovdqu
aad
cmc
and
sbb
sbb
pop
aam
in
je
mov
out
je
in
icebp
dec
repz
in
push
mov
retf
mov
sti
(bad)
mov
mov
jb
pop
ret
add
sbb
stos
cmps
and
inc
dec
(bad)
rcr
scas
mov
popw
aaa
movq
vpmacsswd
add
imul
in
stc
mov
dec
xchg
sar
dec
adc
and
xchg
mov
push
push
xchg
cmc
jmp
das
je
mov
ficomp
mov
dec
add
cwde
scas
icebp
sbb
pop
jb
pop
mov
mov
jae
movs
or
std
mov
ins
stc
mov
cmp
jbe
xchg
mov
inc
push
movs
nop
add
cmp
or
cmps
dec
fisubr
in
pop
popf
leave
pop
pop
lock
and
or
jmp
mov
push
cdq
sub
test
inc
pop
and
leave
stos
loope
mov
xor
sbb
sbb
cmc
repz
shr
stos
cmp
mov
and
adc
sar
mov
sub
cwde
int
pop
or
int
sar
sub
dec
or
aas
(bad)
imul
inc
shl
repz
out
lock
outs
ins
outs
int
xchg
xor
js
xlat
retf
mov
add
mov
popf
enter
ss
loop
imul
cdq
fst
dec
scas
add
ins
inc
mov
cld
pop
push
(bad)
js
mov
push
pop
loop
loopne
scas
jl
add
test
imul
sbb
fcom
mov
sahf
imul
popf
icebp
mov
xor
retf
or
(bad)
fcomp
or
mov
pop
mov
es
sbb
sbb
lds
cmp
hlt
jmp
lods
out
imul
dec
push
repnz
sub
add
sub
outs
popa
jmp
dec
and
push
and
mov
fnstenv
movs
ret
repz
sbb
fmul
inc
add
jg
cmc
addr16
or
fdivr
push
xor
push
fwait
inc
xchg
test
outs
push
xchg
(bad)
pop
outs
out
sti
jmp
push
and
add
add
cmps
jns
dec
xchg
scas
stos
rol
mov
cmc
pusha
(bad)
outs
bound
mov
dec
push
sub
xor
sub
push
sbb
stos
add
inc
hlt
test
mov
add
xchg
mov
sbb
test
in
jnp
aam
mov
or
mov
aam
or
and
loop
jb
ror
sub
and
add
sub
pop
rol
dec
rcr
fdiv
lods
inc
les
(bad)
fwait
pusha
out
retf
adc
scas
mov
nop
les
push
jg
dec
lods
xor
push
or
ins
or
cmps
inc
push
adc
lds
fcmovb
std
out
fisub
sub
fxch
add
xchg
dec
popa
pop
aad
das
sub
pop
and
mov
mov
hlt
adc
sub
mov
movs
xchg
aad
sub
or
jg
mov
sub
jecxz
pop
ret
stos
sub
add
mov
sbb
arpl
xchg
loopne
pop
test
cmp
lods
scas
scas
sub
adc
push
stos
jmp
lea
jno
jg
fld
cmp
sbb
xor
test
push
jmp
mov
scas
mov
xchg
ds
movs
jle
and
jmp
push
into
xchg
jne
mov
addr16
dec
in
les
mov
test
imul
push
push
shl
xchg
scas
sahf
jg
inc
loop
repnz
scas
adc
scas
call
xchg
stos
fsub
adc
inc
sbb
pop
mov
mov
mov
mov
in
dec
jb
es
or
(bad)
dec
repnz
sahf
jl
pop
mov
cmp
or
or
loopne
hlt
cmps
retf
iret
mov
outs
xor
cmps
cmps
xchg
jl
int
add
in
std
inc
test
and
loopne
xor
adc
retf
push
xchg
shr
push
cmp
daa
add
data16
xor
inc
(bad)
pop
lods
mov
push
sub
jmp
mov
(bad)
shr
jne
fwait
pop
pop
repz
jmp
pop
ins
sub
xor
adc
sub
movs
push
retf
cmps
in
in
(bad)
int
mov
add
push
and
jb
sbb
mov
das
fxch
sbb
mov
or
shl
in
inc
outs
outs
outs
mov
or
sbb
push
mov
imul
movs
dec
cld
and
cmps
mov
xchg
xor
std
mov
outs
ins
lds
and
xchg
out
or
pop
sbb
push
(bad)
mov
fbstp
sub
mov
sahf
jg
in
cld
cli
xchg
neg
add
test
pop
inc
stos
cld
cmp
stc
push
int
xchg
cmps
xchg
sub
adc
enter
cmp
sbb
fwait
sbb
mov
arpl
push
mov
and
jl
dec
dec
jo
jp
out
fadd
fisubr
test
rcl
test
xor
arpl
or
add
jecxz
push
and
mov
daa
fdivr
fistp
xlat
mov
xor
mov
(bad)
pop
aam
mov
mov
add
js
cld
leave
int
jmp
cmp
test
imul
pop
test
rol
sub
push
cmp
mov
jg
in
outs
push
ja
add
shl
test
sub
jno
arpl
mov
int3
sbb
or
adc
sub
repz
dec
lods
out
push
cmps
jne
push
mov
aam
pop
movs
xor
push
sub
imul
bound
inc
stos
pop
sbb
cmp
add
mov
mul
rol
mov
push
js
leave
stos
or
jl
repz
mov
cmp
fs
or
xor
shr
or
xchg
in
pop
sub
imul
in
mov
fidivr
mov
pop
and
cmp
add
(bad)
mov
xchg
inc
frstor
pop
and
pusha
add
xchg
mov
div
xchg
mov
and
popa
push
pop
in
pop
mov
xor
in
sub
pop
cmp
dec
je
mov
adc
scas
lahf
adc
sub
ucomiss
or
cli
scas
leave
arpl
jns
(bad)
fcom
aam
jp
inc
or
cmps
fsubr
imul
outs
cmp
jg
inc
je
gs
loopne
pop
mov
mov
or
jl
pop
or
push
or
cli
mov
(bad)
lahf
mov
xchg
push
(bad)
mov
(bad)
mov
bnd
stos
dec
hlt
lds
rcr
or
mov
sub
xlat
push
scas
sub
cmp
pusha
mov
movs
lds
ins
pop
sub
stos
xor
call
dec
adc
arpl
stos
mov
call
mov
mov
cmps
add
xor
mov
pop
lahf
lods
dec
mov
ret
ins
jbe
lods
dec
push
mov
or
dec
xor
or
push
cmp
repnz
cmp
pop
push
adc
jbe
nop
ret
and
repnz
movs
sbb
mov
call
retf
inc
loop
(bad)
bnd
sub
mov
mov
movs
movs
jne
inc
xchg
jle
loope
add
in
jnp
icebp
dec
sbb
xor
iret
pop
nop
mov
hlt
xor
push
push
mov
sti
adc
movs
stos
cmps
xchg
mov
pushf
push
push
inc
or
xchg
test
pop
push
lods
imul
fisttp
sub
(bad)
mov
add
fcmovnbe
cmps
fadd
into
push
adc
xor
push
daa
pop
lahf
repz
xlat
scas
icebp
jl
xchg
add
push
or
pop
push
jl
ins
mov
pop
movs
std
mov
push
xchg
adc
jecxz
cmps
xor
inc
jge
sbb
arpl
lahf
mov
hlt
mov
leave
sub
jmp
ret
mov
mov
(bad)
cli
mov
hlt
add
call
lods
jmp
clc
stos
imul
push
cdq
iret
adc
jp
xchg
inc
enter
dec
scas
dec
cmp
mov
push
push
enter
push
jb
sbb
stos
test
movs
sub
jo
lock
push
imul
ins
pop
mov
sub
jb
cmp
mov
jge
js
scas
fisttp
sbb
test
hlt
in
jg
jge
sbb
cmp
mov
pushf
ins
sti
sahf
ss
cs
cdq
hlt
jmp
outs
mov
push
add
pushf
add
(bad)
sti
cmp
in
mov
js
sbb
aam
enter
out
shr
mov
pop
mov
cmp
ds
iret
in
sbb
test
iret
dec
dec
push
dec
dec
add
fs
das
and
mov
push
mov
pop
int3
pop
hlt
test
add
xor
(bad)
loope
repz
pop
xchg
jge
test
pop
mov
dec
adc
test
xor
sbb
scas
dec
dec
jp
cmp
gs
ins
cdq
(bad)
lods
test
cmps
inc
or
mov
or
loopne
out
outs
cmc
std
mov
(bad)
ficomp
shl
mov
test
jne
inc
daa
xchg
dec
pop
(bad)
adc
and
inc
sbb
xor
adc
imul
push
fs
(bad)
xor
push
cmp
pop
sahf
xor
inc
adc
xchg
inc
or
sbb
stc
ds
cdq
xchg
xchg
jecxz
push
and
rol
jae
sbb
dec
mov
in
es
mov
shr
imul
push
sbb
adc
daa
cmps
push
xchg
aad
add
xor
sub
or
(bad)
cmp
or
pop
add
or
dec
sub
mov
mov
rcr
adc
sub
jmp
out
sbb
out
mov
jns
jmp
inc
mov
lock
dec
sbb
sbb
and
ror
ss
pop
mov
inc
sub
imul
(bad)
xchg
sub
add
lods
pop
jo
push
sbb
sbb
mov
pop
pop
mov
test
lods
mov
mov
mov
cmp
js
inc
sbb
jo
daa
lahf
popa
(bad)
pop
out
into
fucom
mov
sbb
cmp
stos
aaa
(bad)
push
pop
push
gs
sbb
push
adc
fwait
outs
xor
sub
stos
adc
int
sbb
mov
stc
push
mov
movs
xchg
cmp
gs
push
loop
popf
push
dec
call
jecxz
js
scas
std
cmp
mov
sbb
add
mov
jecxz
div
dec
add
loopne
std
cwde
scas
cli
mov
add
shr
or
mov
cmp
mul
xchg
add
pop
movs
jbe
dec
dec
sbb
lds
sti
cmp
xbegin
lods
(bad)
out
outs
jns
in
ins
std
cmp
jno
in
push
jae
ds
adc
jmp
dec
nop
cmp
jge
(bad)
cmp
pop
rcl
std
das
stc
mul
mov
xchg
iret
std
pop
addr16
(bad)
xor
retf
mov
fild
mov
push
jo
test
rcr
icebp
in
jmp
ja
mov
bound
sbb
pop
xor
cld
xor
cli
dec
leave
mov
push
retf
sbb
or
fwait
lods
(bad)
iret
mov
mov
push
xchg
sti
add
jno
push
lahf
(bad)
mov
lods
cmp
sub
cli
popf
dec
sbb
fist
pop
std
(bad)
mov
fsubr
cmp
ret
dec
pop
into
cmps
mov
ds
(bad)
loope
jo
add
jne
movs
dec
add
dec
sbb
dec
mov
cmps
mov
dec
in
enter
inc
sub
xor
inc
push
and
clc
xchg
inc
test
iret
mov
add
cmc
not
outs
pop
jg
sbb
cmp
ds
addr16
fist
ins
sub
aam
rol
cmps
pop
mov
mov
stc
daa
jbe
sub
sbb
and
pusha
pop
xchg
xchg
lock
inc
ds
iret
cwde
scas
movs
mov
cmps
cdq
repz
shl
pop
dec
adc
lods
mov
imul
pop
ror
ficomp
inc
push
adc
jge
sbb
mov
inc
xchg
aas
jns
add
jecxz
mov
arpl
lods
pusha
mov
or
sub
sub
dec
push
xchg
jecxz
pop
hlt
sbb
repz
test
cmp
cmps
ror
dec
cmp
lods
ror
outs
mov
pop
dec
adc
jne
out
jmp
rol
jg
mov
mov
cwde
imul
push
loop
cmps
add
jmp
adc
out
xor
call
inc
test
cmp
push
test
mov
or
cld
add
sub
jmp
mov
cmp
and
fucomip
inc
inc
imul
out
sub
lods
int
xlat
or
cmp
sti
cmp
retf
inc
mov
jle
test
retf
cld
popf
push
stc
out
test
test
xchg
dec
or
pop
aam
pop
sub
data16
cmp
(bad)
jge
call
clc
push
adc
or
cmp
(bad)
jne
push
fcomp
pop
sidtd
cld
mov
sbb
add
mov
mov
ins
outs
mov
xchg
fldenv
imul
inc
imul
pop
xor
add
call
sub
dec
jmp
cmps
mov
sbb
hlt
mov
inc
xchg
stos
test
jecxz
sub
inc
xchg
sbb
in
daa
sub
jnp
mov
inc
adc
inc
dec
inc
xor
ja
or
das
or
sub
mov
cwde
add
leave
(bad)
pop
popf
push
xor
or
adc
stos
or
xor
adc
imul
and
xor
lds
sahf
fadd
enter
lods
mov
push
jno
mov
in
mov
dec
mov
adc
jmp
push
cmps
dec
xchg
xchg
push
jmp
mov
repz
fcmovu
js
pop
lea
call
push
in
test
lods
shr
push
inc
add
pushf
shl
jmp
cmp
pop
or
mov
ror
add
fld
inc
call
imul
shl
mov
pop
xchg
fild
push
or
loop
fisubr
pop
dec
retf
sub
cmp
pop
jb
fistp
or
shr
lock
mov
popa
adc
(bad)
repnz
lahf
jno
pop
mov
scas
xchg
leave
cmp
dec
push
xchg
inc
dec
test
cmp
in
mov
sar
pushf
sti
fbstp
sub
pop
lea
pop
push
xchg
fdivr
push
inc
xchg
cmp
mov
inc
and
push
pushf
(bad)
mov
loope
jp
push
mov
pop
enter
xchg
push
daa
push
xlat
sti
mov
inc
retf
dec
sub
out
adc
(bad)
popf
mov
les
retf
jmp
pop
pusha
test
mov
out
repz
aaa
dec
sahf
loop
xchg
cwde
std
xchg
mov
or
ja
push
sahf
cmp
stos
nop
sub
jecxz
aas
dec
pop
dec
icebp
test
push
fucomip
xchg
mov
cmp
xor
fistp
adc
popf
call
xor
pop
mov
mov
lahf
inc
ins
ins
xchg
in
lea
mov
xor
adc
pop
sbb
out
jmp
int
cmps
mov
cmp
bound
cwde
les
dec
mov
sub
imul
std
mov
sti
xchg
test
cmp
inc
repz
ss
mov
loope
mov
pop
test
inc
adc
and
aad
pop
xchg
gs
add
scas
cmp
lahf
jae
adc
dec
or
cmp
fldcw
push
pusha
push
mov
popf
shr
imul
cmp
sbb
push
xor
inc
ss
cs
hlt
imul
adc
pushf
jns
push
jmp
ds
mov
mov
pop
jmp
mov
push
loope
lahf
dec
mov
call
push
dec
cdq
repz
arpl
ror
js
lds
bound
rcl
xchg
pop
mov
das
clc
test
sti
int
push
je
mov
push
mov
rcl
or
aad
dec
push
push
mov
xchg
scas
xchg
int3
cmp
lock
jns
cli
xchg
mov
daa
faddp
test
push
inc
sub
ss
(bad)
ds
inc
dec
cmps
cwde
xor
push
dec
xchg
jle
sub
in
pop
dec
out
xor
cmp
rol
pop
and
cmp
shl
adc
call
mov
jb
mov
xchg
in
mov
mov
cli
push
cmps
mov
ins
fistp
clc
xor
xchg
push
cmps
movs
ror
xlat
cmp
fwait
out
sub
sub
mov
push
dec
push
or
sub
mov
in
jae
sbb
fmulp
mov
loope
ror
xchg
jl
test
mov
jle
inc
pop
jecxz
ins
push
call
pop
sbb
int3
inc
pop
into
xchg
sti
push
idiv
xchg
dec
aaa
lock
scas
out
sahf
call
pop
shl
dec
xchg
es
daa
ret
jecxz
outs
dec
or
std
dec
daa
xor
pop
mov
fwait
push
loopne
cmc
mov
or
test
inc
xchg
xor
cmp
mov
mov
add
test
jb
fs
and
test
add
(bad)
std
push
mov
sbb
in
jmp
sbb
push
sbb
or
ins
je
cli
jnp
stc
mov
mov
mov
in
les
sbb
lods
inc
and
not
mov
sbb
sbb
adc
(bad)
mov
cli
add
dec
xchg
(bad)
add
stc
outs
mov
xchg
call
mov
dec
mov
es
cmp
jp
fld
lds
pop
ins
out
inc
fld
mov
call
test
push
scas
ins
sbb
pop
jnp
adc
jb
dec
mov
sbb
cmp
mov
(bad)
std
pop
fdiv
add
mov
js
sub
mov
xchg
aam
push
in
mov
scas
xor
loopne
pop
sub
inc
and
jge
int
lock
mov
pop
mov
dec
mov
out
repnz
sub
fsubr
ins
push
xor
mov
push
add
enter
cmp
fwait
mov
in
mov
test
int
ss
call
adc
movs
in
arpl
loope
jp
mov
in
jns
jecxz
pop
movs
mov
and
cmps
mov
pop
cmp
xchg
imul
out
xor
mov
xlat
sbb
shl
inc
or
sbb
push
or
sub
loop
retf
sub
icebp
or
xor
cdq
outs
enter
dec
test
loope
add
mov
idiv
xchg
shl
cmp
push
mov
xor
add
cmps
call
sar
jmp
pop
mov
lds
sub
cld
sar
cmp
cmps
aas
out
mov
mov
es
inc
cld
sbb
daa
mov
mov
das
arpl
and
add
pop
in
push
push
sub
mov
or
push
mov
add
jmp
push
jge
jbe
jnp
pop
ret
fs
jns
push
ror
and
push
or
and
in
dec
outs
jecxz
cmps
stos
retf
jg
test
cmp
leave
push
dec
arpl
loop
add
(bad)
fistp
jge
lahf
outs
xlat
xlat
push
ficom
pop
(bad)
adc
mov
push
ds
jmp
mov
loope
xchg
sub
mov
dec
leave
adc
sti
arpl
dec
leave
xchg
movs
mov
xor
xchg
mov
arpl
add
lods
or
ins
dec
mov
cwde
ficom
rol
add
leave
adc
ror
(bad)
retf
data16
leave
ja
fisub
jp
stos
xor
cmps
inc
pop
push
push
fistp
pop
imul
mov
xchg
push
inc
stos
push
push
das
mov
add
jne
pop
sahf
jge
outs
jecxz
fisub
sbb
sub
shl
push
xchg
adc
ja
je
cmp
add
lods
shl
xor
push
pushf
jp
pop
or
out
(bad)
mov
pop
xchg
xchg
les
(bad)
jmp
add
mov
sti
scas
int
movs
ja
adc
push
add
imul
inc
dec
dec
test
push
bound
(bad)
ins
mov
cmp
sub
(bad)
jne
retf
cmps
fisubr
fdivr
push
mov
sti
ja
data16
add
fwait
inc
pop
lods
les
out
leave
and
aas
cmp
(bad)
in
out
push
fwait
push
dec
jnp
push
jae
push
dec
ret
stos
dec
cmps
adc
retf
push
jae
xor
cmp
jno
loope
not
cmps
cmps
or
sar
daa
scas
enter
or
lea
push
in
push
cmps
test
cwde
test
lea
push
ret
sbb
mov
fnstcw
adc
xchg
sbb
adc
rcl
or
push
push
xchg
push
dec
pusha
mov
out
jae
add
(bad)
mov
(bad)
cmp
jne
push
xchg
stos
xchg
sub
lds
inc
gs
pop
adc
and
cmp
test
cmp
hlt
jecxz
cmp
pusha
mov
mov
jbe
popa
(bad)
xchg
lock
lods
sub
mov
and
inc
sub
jecxz
sub
repz
cld
pop
push
mov
fs
stos
lods
xchg
pop
cmps
cmp
mov
or
dec
adc
push
out
cmp
dec
sub
and
cmp
retf
fild
cmp
in
and
pushf
(bad)
loop
enter
cmp
pop
rol
(bad)
les
jmp
mov
mov
sbb
cmp
mov
rol
xchg
jmp
loop
add
mov
int
dec
fist
repz
test
mov
jg
or
push
imul
mov
stos
hlt
jecxz
fsubr
daa
pop
movs
leave
hlt
cmps
or
ror
push
ins
lea
cwde
add
push
add
lock
hlt
jmp
iret
dec
xchg
adc
int3
mov
sub
adc
push
rol
adc
cmps
cmps
sub
jge
out
call
and
je
xchg
jle
pop
sbb
scas
xchg
xchg
sbb
loopne
cmp
lea
pop
dec
cwde
into
lahf
dec
or
add
cdq
arpl
mov
jle
sub
lods
mov
cwde
add
mov
stc
jle
(bad)
in
dec
mov
addr16
cmp
pop
inc
bsr
fimul
int
xor
mov
stos
nop
mov
add
fiadd
pop
dec
jno
rcr
pop
push
sbb
or
push
div
xlat
and
rol
sbb
add
inc
mov
mov
and
dec
adc
dec
inc
mov
sbb
movs
adc
inc
dec
pusha
mov
out
stos
mov
sahf
daa
out
(bad)
dec
scas
ins
jmp
xchg
xor
pop
out
std
cmps
cmp
dec
pop
cmp
jae
bound
arpl
inc
popf
pop
sub
mov
sbb
movs
fnsave
cmp
(bad)
(bad)
dec
mov
cmps
les
call
test
xor
aam
aad
je
dec
daa
mov
xchg
enter
cmp
fisttp
sti
inc
aas
adc
push
les
cmc
and
sbb
fcomp
cmp
or
les
out
scas
inc
adc
movs
and
dec
cmps
sahf
sub
test
dec
out
cmp
je
in
sbb
push
sub
push
stos
clc
fadd
jnp
jg
jbe
push
int3
cmps
lea
lock
adc
and
sahf
pop
ins
push
pushf
push
sub
and
pop
pop
sar
jp
sti
stos
sub
scas
stos
mov
adc
dec
stos
fsub
inc
xchg
inc
inc
pusha
dec
push
mov
xor
dec
jb
iret
addr16
icebp
arpl
call
sbb
retf
lods
adc
enter
sub
cmps
cwde
add
push
pop
loop
loop
sar
mov
fmul
mov
lea
push
sub
or
xor
test
add
jg
(bad)
cld
lock
movs
xchg
je
sbb
push
mov
aad
or
idiv
or
dec
mov
or
add
cmp
inc
rcr
or
dec
cmps
std
das
jecxz
sub
aas
dec
hlt
jmp
mov
mov
add
mov
jne
xlat
cmps
jl
retf
dec
sub
mov
in
retf
mov
sub
aad
iret
or
xor
psllw
jmp
or
mov
ja
push
cmp
repnz
and
lock
push
cmp
movs
sub
test
sbb
(bad)
mov
out
vandps
push
sub
dec
push
int3
into
pop
movs
jp
adc
adc
lods
mov
jmp
ins
sbb
and
sub
imul
and
xor
loopne
jle
leave
movs
sub
lahf
outs
jp
mov
test
add
inc
movs
ret
bound
mov
sub
div
gs
cs
jle
sub
xor
aad
mov
lods
and
ficom
push
inc
sub
jno
stc
je
cmp
scas
xlat
(bad)
inc
mov
fist
mov
xor
mov
push
sub
mov
sbb
add
vmwrite
leave
fld
cmps
scas
aad
shr
add
stos
adc
enter
hlt
fldenv
adc
or
xor
xchg
push
sbb
stos
jmp
push
push
aam
jno
push
push
(bad)
push
xor
jmp
mov
sub
cmps
mov
xchg
ins
mov
inc
int3
dec
stos
mov
not
arpl
mov
pop
push
xchg
shr
add
outs
jmp
add
pop
cmp
adc
cwde
iret
lea
adc
and
xlat
out
jmp
jge
int3
mov
mov
pop
lods
inc
and
sbb
aam
mov
out
(bad)
aam
stc
add
add
mov
(bad)
ret
int
adc
push
adc
test
movs
nop
push
and
pop
adc
ret
xchg
fistp
cmp
sub
das
repnz
push
in
xor
adc
cli
dec
repz
jge
inc
add
adc
add
mov
ins
adc
das
xchg
push
dec
add
clc
rcl
test
movs
fadd
test
inc
sbb
cmp
cmp
inc
cmp
sbb
push
xor
add
bound
aaa
out
push
sub
mov
dec
pop
test
mov
dec
and
jg
out
cmps
sub
ret
mov
adc
pop
dec
bound
outs
test
sbb
add
arpl
icebp
inc
aaa
pop
sub
cmp
fdivr
push
mov
xchg
pop
bound
shl
or
cld
adc
inc
idiv
pop
outs
es
and
push
mov
(bad)
cmp
cli
(bad)
xchg
jae
jle
lea
mov
sbb
repnz
dec
stos
ss
mov
fwait
les
dec
xor
imul
scas
cmp
jno
ss
cmp
xchg
imul
pop
sbb
mov
aas
aad
inc
inc
aaa
sub
xchg
scas
loope
das
sbb
push
jae
sub
aas
retf
pop
or
fstp
jge
cmp
enter
mov
xor
mov
jp
test
fcom
jecxz
stos
jbe
scas
popa
mov
mov
mov
add
mov
scas
jmp
dec
mov
push
(bad)
push
adc
add
div
dec
pop
mov
outs
dec
sbb
mov
cmps
xchg
mov
jg
cwde
inc
xor
push
out
and
popa
pusha
mov
jne
xchg
aaa
pop
cmps
mov
xchg
pop
retf
pop
dec
sub
fs
mov
mov
inc
cli
data16
pushf
pushf
inc
and
xor
mov
arpl
repnz
ins
cmp
mov
inc
cli
fcom
mov
or
ins
repz
scas
mov
daa
jno
nop
pop
loope
push
sub
stc
hlt
fcom
test
sbb
push
mov
repnz
dec
in
jecxz
imul
cmc
hlt
mov
(bad)
cmp
pushf
adc
mov
and
or
outs
adc
lock
jge
push
xchg
jmp
repnz
imul
pushf
or
lahf
push
mov
pop
pop
call
(bad)
mov
clc
xchg
pop
out
mov
ss
sbb
js
dec
push
sub
inc
and
mov
mov
pop
lea
(bad)
aas
dec
arpl
inc
imul
fs
fs
adc
sbb
sbb
mov
inc
imul
ret
movs
imul
jb
test
retf
sbb
(bad)
xchg
pop
sahf
dec
cld
mov
adc
out
cmp
mov
repnz
ja
mov
(bad)
mov
mov
xchg
xchg
call
adc
inc
pop
sbb
inc
sbb
sub
ret
mov
and
cdq
arpl
sub
dec
loop
ins
dec
arpl
test
cmps
fidivr
pop
sbb
cmp
xchg
jmp
push
xchg
sub
js
inc
sbb
aam
jecxz
pop
or
pop
mov
icebp
xlat
dec
xchg
jle
cmp
cmc
dec
sbb
pop
xchg
ficomp
fucomp
loope
adc
add
(bad)
(bad)
(bad)
sbb
icebp
mov
dec
movs
jne
add
cmps
idiv
sub
mov
imul
and
fs
adc
and
add
aam
fimul
add
push
sbb
push
and
jg
dec
and
dec
adc
push
or
jecxz
push
jmp
pop
xchg
adc
out
imul
cs
xor
dec
add
inc
mov
push
cmps
adc
fcom
loop
stc
inc
aas
iret
cmps
xchg
pop
js
and
add
movs
nop
or
mov
inc
add
sbb
xlat
push
xchg
sub
gs
push
xchg
test
test
sub
dec
popa
dec
mov
es
cmp
mov
dec
lock
cdq
xor
test
fstp
inc
or
in
and
mov
pusha
push
xchg
test
call
push
mov
push
aam
add
lods
cmp
inc
or
js
xchg
inc
push
sub
iret
cmc
add
ja
or
push
push
inc
loope
out
xor
cmp
push
stos
(bad)
pop
in
and
pop
nop
movs
arpl
inc
sbb
xchg
mov
scas
xor
add
push
test
lds
movs
mov
test
mov
outs
jo
loope
jae
fmul
dec
pop
(bad)
sub
mov
(bad)
out
mov
mov
ins
fs
xchg
scas
scas
dec
or
pop
outs
dec
and
icebp
iret
dec
sbb
and
adc
into
dec
inc
adc
or
(bad)
sub
inc
dec
cmps
mov
lods
aam
mov
pop
(bad)
jbe
or
push
adc
xchg
je
or
adc
push
pop
mov
cmp
xchg
imul
jne
out
lods
fstp
scas
xchg
mov
and
leave
inc
dec
pop
mov
push
popf
scas
ins
jne
xor
imul
pop
dec
sub
push
out
fld
mov
or
inc
push
push
test
adc
stos
fsubr
jmp
lea
outs
and
mov
push
stos
div
ss
push
sub
xchg
xchg
adc
sub
mov
imul
xchg
ds
je
cmc
(bad)
mov
in
ins
mov
inc
mov
imul
retf
in
popf
fldl2t
(bad)
(bad)
cli
jns
pop
(bad)
jbe
pop
mov
ja
stos
add
loop
or
nop
push
inc
int
add
mov
loope
icebp
mov
cmc
mov
mov
jl
jecxz
pop
sar
jg
fstp
sbb
cmp
mov
hlt
inc
jbe
inc
test
push
lea
(bad)
jge
pop
(bad)
dec
shr
sub
daa
(bad)
enter
jecxz
dec
arpl
jae
xor
(bad)
out
cld
lea
cli
jmp
push
xchg
clc
dec
daa
idiv
add
arpl
(bad)
popa
push
cs
jno
sub
xchg
xchg
adc
les
leave
sub
adc
push
sub
pop
adc
sbb
cmps
lds
pop
shr
scas
sub
(bad)
pop
xlat
outs
and
inc
add
xor
dec
inc
scas
jbe
xor
push
xor
xor
dec
pop
cld
inc
and
cdq
movs
mov
mov
push
sbb
xchg
pop
jmp
jb
fild
(bad)
mov
or
movs
push
push
loop
pop
push
and
xlat
int3
sahf
cmp
xor
mov
inc
stos
fisub
xor
retf
movs
xor
pop
ins
push
inc
mov
in
and
inc
cmp
dec
xor
sub
cmps
mov
cmp
lds
xor
mov
imul
arpl
ins
and
add
push
movs
xor
iret
movs
xchg
pop
jb
inc
push
inc
lock
xchg
test
inc
adc
xor
mov
mov
fwait
ds
aad
(bad)
out
out
xchg
lods
jp
test
mov
sbb
xor
push
pop
movs
es
add
pop
repnz
imul
inc
sub
pop
aaa
lods
ins
icebp
inc
jl
push
add
sahf
mov
rol
push
mov
pop
mov
jmp
push
adc
inc
jbe
sbb
ret
mov
push
loopne
outs
rcl
and
or
inc
xchg
call
jo
add
mov
outs
ins
arpl
adc
sub
in
xchg
dec
call
cmp
adc
sahf
cwde
push
ss
adc
jbe
(bad)
adc
cmc
ins
cmp
and
test
(bad)
movs
cmc
scas
push
aad
sub
cli
xchg
(bad)
dec
sub
jno
data16
jp
adc
(bad)
dec
mov
and
std
lahf
ins
fcmovnb
mov
sub
imul
sub
dec
imul
mov
aad
mov
jecxz
ror
loop
and
push
ins
or
or
outs
mov
cdq
jp
or
outs
fisub
das
(bad)
bound
mov
int
xchg
sub
mov
das
in
idiv
pop
adc
ror
cmp
or
sub
push
mov
mov
neg
pop
dec
mov
jnp
loope
dec
adc
int3
mov
add
hlt
pop
mov
jne
xor
cmp
pop
ja
push
sbb
cmp
aas
jo
cli
mov
mov
inc
and
ror
sub
push
push
push
xchg
pop
lods
add
cmp
mov
in
out
jns
dec
int
mov
or
cmps
and
push
ss
cmp
ss
cmp
xchg
inc
rcr
pop
jecxz
mov
xchg
dec
mov
mov
repnz
and
inc
inc
push
mov
cmp
xchg
mov
pusha
add
(bad)
loop
jnp
and
xchg
movs
rcl
movs
or
pop
sahf
pop
or
cmp
icebp
mov
pop
and
push
and
sahf
lods
jmp
in
call
cmp
jb
sub
inc
mov
inc
dec
jp
fs
dec
loopne
xchg
cmc
test
push
push
iret
clc
aas
ret
inc
(bad)
test
jbe
push
aas
rcl
or
into
mov
sbb
add
jecxz
jnp
mov
aam
iret
movs
fstp
faddp
ret
std
xchg
or
movs
loope
and
mov
and
jecxz
aam
loope
add
push
inc
mov
inc
mov
inc
adc
mov
shr
push
pop
pop
mov
xchg
in
les
stc
mov
jmp
jno
jmp
mov
sahf
jg
inc
das
fldl2t
(bad)
ins
push
bound
aad
icebp
inc
in
push
ror
sub
pop
sbb
icebp
fisttp
push
arpl
aad
int3
mov
add
cld
shl
icebp
movs
shl
cdq
xor
lods
imul
repz
shr
mov
cld
fldcw
mov
fdivr
pop
xlat
lahf
popa
mov
shl
stc
push
jns
loope
hlt
iret
xchg
inc
fwait
pop
pop
inc
pop
stos
mov
sub
addr16
pop
jmp
lea
pop
fldenv
push
xchg
mov
cmps
mov
(bad)
jg
or
push
mov
add
into
mov
mov
cmc
push
jmp
aas
lahf
in
in
pop
or
or
sbb
(bad)
jbe
dec
mov
pop
cs
(bad)
mov
jmp
xor
pop
test
dec
sbb
shl
stos
div
inc
outs
sbb
mov
cmps
lahf
in
add
inc
push
scas
out
rcl
(bad)
sub
jo
call
mov
sbb
sti
dec
and
test
pushf
jl
dec
sahf
sbb
bnd
jne
adc
push
cmp
(bad)
pop
pop
clc
push
xchg
out
sub
loopne
pop
adc
cmc
sub
mov
movs
mov
out
mov
sub
je
push
add
stc
push
mov
mov
push
cli
jge
jecxz
sbb
popf
arpl
cmps
sub
lods
ret
pop
sbb
mov
leave
jecxz
or
mov
mov
push
adc
and
js
push
inc
sahf
jb
sub
outs
lods
fs
mov
shr
xlat
dec
push
retf
enter
sub
add
adc
retf
adc
mov
pop
std
jne
mov
sbb
cmps
lahf
cmps
mov
scas
aam
xlat
cmp
les
jl
loopne
mov
scas
push
push
fnsave
inc
mov
neg
aam
jg
retf
pop
jo
cmp
adc
cmp
gs
ror
aas
pop
sti
sbb
fmul
js
and
call
mov
push
mov
jecxz
push
mov
(bad)
xchg
out
mov
sbb
pop
or
add
sbb
(bad)
inc
pop
xchg
jmp
out
and
inc
xlat
mov
rol
jno
retf
jg
pop
lods
lods
outs
mov
sub
cmps
retf
adc
outs
inc
int
xchg
adc
into
div
sub
pop
xchg
cmp
mov
inc
iret
out
mov
xor
aam
sbb
(bad)
lds
call
dec
sub
cmp
mov
inc
pop
jnp
cli
clc
or
xchg
inc
movs
jbe
push
dec
fild
cwde
xor
hlt
jae
mov
into
int3
in
inc
imul
jno
stc
cld
stos
jmp
push
mov
out
ret
push
dec
sub
push
sub
loopne
scas
pop
jmp
xchg
lods
inc
jb
sbb
enter
mov
mov
loopne
push
inc
cmps
mov
nop
dec
iret
add
js
inc
add
retf
iret
cld
std
push
dec
jecxz
push
push
push
rcl
popf
shl
test
mov
xor
dec
in
and
pop
or
xor
sub
mov
ins
and
add
inc
test
pop
out
push
iret
mov
xchg
test
sub
dec
xchg
repnz
aas
fdivr
fsubr
mov
stos
inc
loopne
in
stos
lods
jns
mov
nop
inc
in
int3
ret
pop
sub
(bad)
pop
inc
pop
jnp
jbe
pop
pop
push
out
add
xor
mov
stos
adc
repz
mov
or
pop
sub
jecxz
xor
cdq
sahf
inc
and
sub
pop
cli
dec
add
add
mov
mov
inc
adc
cmp
gs
mov
and
push
or
and
fimul
dec
test
dec
pop
sub
rcl
fdiv
jge
faddp
faddp
shr
sbb
out
out
sub
cli
popa
sbb
retf
movs
test
dec
cmc
imul
ins
push
dec
in
inc
mov
cli
(bad)
pop
mov
pop
xchg
scas
push
mov
or
push
mov
xor
inc
add
xchg
or
sar
adc
pop
icebp
fnsetpm(287
dec
jecxz
les
xor
popa
xlat
dec
out
inc
mov
jp
mov
lods
xchg
mov
or
mov
xor
fiadd
das
jge
ret
inc
das
sub
(bad)
call
or
outs
sahf
xchg
stos
jns
outs
shr
adc
movs
pop
stos
aaa
outs
mov
jecxz
cmp
and
int3
jmp
mov
push
inc
dec
mov
cmps
stos
xchg
addr16
stos
and
xchg
loopne
fcmovnu
cmp
ror
addr16
mov
inc
add
pop
add
std
mov
or
cmps
mov
cmps
sub
and
(bad)
and
in
fcomp
pop
pop
mov
(bad)
and
int
jmp
push
mov
retf
sbb
xchg
cmp
pop
pusha
jnp
mov
ins
xchg
fiadd
and
stc
stc
xlat
(bad)
clc
pop
retf
enter
add
sbb
repnz
inc
dec
jg
sbb
(bad)
mov
adc
imul
jns
xchg
fs
add
scas
in
iret
ins
mov
fidiv
add
mov
push
mov
cmp
mov
jne
mov
mov
popf
pop
dec
xlat
mov
cmps
cwde
int3
sub
xchg
addr16
xchg
loopne
cmps
mov
and
cmp
inc
jmp
xchg
mov
retf
pop
ret
or
mov
lahf
lahf
inc
fwait
sbb
and
or
add
out
jp
je
mov
retf
push
push
loop
nop
and
mov
mov
inc
dec
pop
mov
out
ds
mov
inc
pop
fdivr
adc
std
mov
jbe
and
push
es
mov
iret
(bad)
scas
jle
dec
aas
inc
sbb
retf
jo
add
shl
in
mov
add
aam
into
jnp
enter
jmp
out
lahf
retf
mov
push
dec
pop
dec
mov
adc
add
loop
mov
push
cmp
xor
add
add
dec
repnz
mov
jmp
aaa
pop
and
sub
push
pushf
and
mov
adc
mov
iret
pop
or
xlat
pop
out
fnsave
jns
loope
cmp
jbe
push
arpl
xchg
scas
mov
xchg
add
andnps
inc
inc
sub
loope
bound
int
es
cmp
fisub
cmc
and
sbb
sub
into
stos
jl
(bad)
dec
ror
out
jns
pop
mov
or
add
dec
stos
and
or
cmp
push
dec
(bad)
lahf
fidivr
sbb
jb
dec
ins
lods
add
sub
stc
jl
mov
jmp
cmp
sti
ins
les
mov
xchg
mov
or
sahf
pop
out
sti
push
fwait
jnp
mov
dec
mov
sahf
rol
test
jne
pop
fnop
cmc
lock
xor
jmp
fnstenv
inc
sub
aam
push
xor
xchg
arpl
sbb
adc
test
adc
mov
div
fucompp
movs
mov
xor
push
data16
adc
sbb
ds
cmp
je
jbe
mov
inc
mov
and
adc
inc
jae
mov
sbb
push
inc
cmp
shl
lods
mov
(bad)
mov
ficom
mov
rcr
pop
push
xchg
bound
push
aad
sub
push
lahf
mov
fsub
or
push
xchg
repz
stos
(bad)
push
rcl
jne
fs
lods
adc
push
stos
sub
stos
(bad)
aam
inc
cli
pcmpgtd
mov
repnz
scas
clc
(bad)
mov
dec
push
rol
ret
push
cmp
nop
cmp
jne
jge
and
shl
and
and
xlat
xchg
adc
arpl
jle
call
push
jle
leave
pusha
imul
inc
pop
bound
inc
add
add
xor
push
push
add
hlt
inc
mov
aad
arpl
outs
and
(bad)
rcl
jl
call
popa
xchg
daa
movs
sbb
ss
sub
and
cmp
mov
add
es
shl
setp
arpl
call
sbb
push
jecxz
stc
sbb
push
shl
out
pop
sbb
fwait
pusha
sub
xor
xor
loopne
inc
inc
cwde
cmps
push
and
jg
rcr
xchg
les
mov
adc
cmp
stc
jg
popw
sbb
lock
sbb
jae
pop
sub
not
daa
push
test
sub
pop
mov
fs
mov
adc
nop
push
or
fldz
(bad)
(bad)
mov
sub
dec
ins
sub
xor
inc
or
dec
bnd
jge
mov
dec
jb
inc
mov
and
dec
dec
xor
movs
dec
shl
sub
xor
(bad)
mov
jae
ret
jp
inc
jne
scas
sub
or
sub
xchg
iret
xor
in
lods
fwait
jge
mov
dec
sbb
jmp
push
pop
xlat
push
inc
mov
jnp
test
test
ins
retf
movs
xchg
cdq
pushf
push
arpl
dec
xchg
cmp
arpl
fs
and
movs
xchg
outs
arpl
cmp
mov
or
lahf
fstp
sar
loop
mov
js
mov
scas
inc
sbb
lods
inc
add
or
xor
cmp
add
xchg
test
xor
jle
and
jmp
push
ins
sub
aas
in
enter
ja
adc
push
mov
or
cmp
inc
inc
add
movs
es
cmp
in
jo
sahf
jge
fld
and
mov
sahf
pushf
mov
and
scas
rcl
push
sahf
(bad)
mov
xchg
mov
test
mov
mov
fbld
fild
mov
jg
addr16
xchg
rcl
arpl
dec
mov
shr
cdq
in
call
movs
mov
inc
add
xor
or
xchg
call
je
mov
js
nop
js
add
push
(bad)
lods
xor
mov
leave
out
shl
inc
pop
xchg
dec
(bad)
or
or
out
sbb
add
xor
mov
rcl
push
dec
mul
cmps
aam
enter
and
(bad)
cli
sahf
cmp
xchg
das
jecxz
or
jecxz
jae
sahf
cmp
data16
dec
cmp
loop
or
mov
loope
out
dec
mov
in
dec
xchg
test
adc
out
or
inc
push
and
shl
ins
jae
scas
ins
mov
lods
xchg
add
sbb
repz
pop
dec
pop
adc
int
lahf
or
test
js
cmp
cmc
xchg
adc
push
int3
jne
repnz
sbb
nop
mov
popa
mov
inc
cmc
imul
pop
xchg
jbe
dec
inc
dec
loope
inc
retf
test
iret
sahf
ds
add
not
jecxz
add
xchg
xchg
sub
stc
hlt
jmp
and
xchg
pusha
mov
mov
xchg
inc
rcl
rol
mov
js
push
sahf
and
inc
pop
sahf
cmp
imul
sub
add
fcmovnbe
xor
sub
call
outs
arpl
push
leave
mov
clc
mov
cmps
sub
leave
test
add
fcomi
mov
(bad)
dec
(bad)
popa
add
sbb
inc
dec
nop
mov
sub
inc
pop
inc
fsubr
mov
in
dec
gs
mov
test
loope
pop
push
pop
xchg
inc
in
mov
inc
mov
push
mov
add
add
add
dec
lock
push
mov
test
mov
cmc
xchg
xchg
arpl
adc
fcmovnu
mov
sbb
in
jmp
cmps
cmc
mov
or
add
adc
pusha
stc
je
jbe
inc
shl
jecxz
jecxz
mov
cmp
push
xchg
in
cmps
jns
test
mov
cdq
popa
pop
in
lds
pop
fsub
in
and
push
imul
push
cmp
in
jl
sbb
jecxz
movs
je
sbb
cmc
push
inc
push
aad
jno
mov
stos
dec
stc
fidivr
mov
push
jle
sbb
aam
test
adc
icebp
out
inc
xchg
stc
scas
ins
jle
iret
adc
xor
aad
pop
inc
jo
or
aaa
xchg
ins
mov
pop
dec
mov
pusha
push
test
aad
xchg
push
dec
scas
jo
add
in
les
mov
stos
push
and
call
mov
mov
inc
push
pop
mov
ret
les
xchg
sbb
jmp
ds
imul
adc
and
sub
cdq
pop
mov
es
pop
repnz
aad
or
outs
(bad)
gs
nop
xchg
outs
outs
and
(bad)
jb
lods
mov
mov
in
push
or
nop
jmp
in
mov
xchg
pop
aam
sub
or
sahf
sbb
fstp
fs
sub
je
imul
daa
ficom
cld
jmp
je
xchg
call
sbb
dec
cmp
out
outs
(bad)
xchg
cmc
pop
dec
cwde
dec
dec
and
mov
jbe
dec
cmp
dec
mov
gs
lahf
js
into
push
mov
out
js
adc
inc
sub
stos
or
bnd
push
sbb
rcr
sub
mov
xchg
sub
sbb
(bad)
pop
inc
(bad)
pop
test
xchg
cmc
mov
in
out
jge
inc
int3
idiv
add
or
push
adc
js
pop
dec
in
ins
dec
bound
and
lds
sbb
pop
retf
mov
jmp
push
push
imul
jmp
jmp
imul
stos
enter
or
sub
and
cmc
std
cwde
jnp
int
push
jmp
mov
mov
adc
xchg
and
dec
cmp
xlat
in
mov
(bad)
out
imul
stos
sub
and
xchg
inc
test
enter
ficom
dec
push
pop
adc
jae
xchg
push
pop
adc
mov
cmp
xor
xchg
push
jge
pop
push
ds
pop
addr16
jmp
inc
pop
cmp
out
cmps
out
xor
pop
out
imul
xlat
push
jno
push
adc
daa
mov
pop
push
daa
push
dec
sub
jmp
stos
(bad)
das
aam
xchg
out
inc
add
neg
pop
inc
xchg
daa
xor
mov
inc
mov
xor
mov
pop
xchg
loope
lahf
loope
sub
pop
sub
and
sbb
rcr
in
in
jmp
jge
lahf
jecxz
stos
xchg
or
dec
push
add
push
in
stc
add
pop
fstp
sbb
mov
inc
or
rcr
loope
out
pop
(bad)
jne
aad
cwde
(bad)
rol
stos
or
scas
in
das
and
sbb
sbb
fist
fdivr
or
loopne
push
mov
mov
dec
add
ret
bnd
mov
xor
mov
data16
jmp
fwait
push
xchg
int3
cs
push
cmc
ins
push
popf
adc
fdivr
call
call
movs
mov
inc
iret
push
push
add
repnz
inc
xchg
ins
rcr
outs
movs
aaa
imul
cmps
lods
call
adc
shr
bound
test
add
std
or
mov
adc
pop
ins
xor
hlt
xlat
aaa
push
inc
ret
add
push
js
xor
push
cmps
and
or
cli
inc
jns
imul
aam
push
sar
adc
icebp
add
and
popa
add
and
or
outs
cmps
clc
inc
(bad)
mov
lock
sti
aas
and
lods
jp
popf
call
outs
or
dec
sbb
arpl
sbb
outs
mov
fwait
inc
int
or
into
lock
mov
dec
leave
mov
fcmovnu
pop
popf
sub
cs
mov
lock
pop
mov
xlat
sbb
out
(bad)
inc
out
ret
adc
push
xchg
jmp
pop
push
adc
int
in
pop
stos
rcl
adc
sub
movs
lea
inc
sbb
and
outs
adc
daa
fadd
and
shl
push
jnp
adc
pop
mov
int
pop
push
mov
inc
inc
in
hlt
shr
add
mov
rol
div
fcom
push
xor
push
mov
das
sub
leave
or
jp
cdq
xlat
mov
sub
loopne
jl
(bad)
into
lods
sbb
je
popa
jmp
push
ss
(bad)
push
cwde
stc
xchg
or
test
inc
test
pop
jg
cdq
push
stos
cmps
cmps
retf
mov
aam
xchg
mov
aad
push
push
sbb
xchg
rcr
push
and
out
rol
std
xchg
loopne
jb
imul
sub
add
popf
adc
lods
sub
cmp
(bad)
pop
mov
lods
mov
push
aam
mov
(bad)
mov
rol
or
push
nop
jg
jge
mov
xchg
out
adc
mov
test
mov
test
shl
xchg
rcl
fwait
mov
stos
xor
sbb
iret
lahf
add
inc
das
fdiv
cmp
mov
lahf
sbb
or
out
pop
xor
mov
das
push
or
cmp
pop
inc
cmc
or
jl
fcmovnu
lods
mov
add
mov
cmp
add
mov
sbb
adc
inc
add
sbb
and
xchg
loopne
bnd
or
jle
sub
stos
jo
mov
daa
xchg
mov
sar
into
stos
jmp
dec
loop
mov
xor
pop
repz
inc
icebp
ins
ficomp
mov
cmp
test
mov
aaa
jnp
fdivr
jge
jo
cdq
add
xor
sbb
stos
rol
cmp
dec
mov
mov
rcl
cdq
and
add
push
add
sub
pop
xchg
out
aas
mov
call
push
inc
jbe
sbb
fwait
add
enter
js
push
mov
jo
and
and
cmps
mov
(bad)
and
xchg
push
int3
out
pushf
mov
imul
or
sub
mov
je
int
xchg
pop
outs
cmps
jns
and
data16
cmp
push
rcl
ins
rcl
icebp
movs
imul
imul
aas
outs
dec
ss
sub
inc
pop
test
jbe
call
xchg
xor
ror
push
or
add
inc
jecxz
sub
cmp
(bad)
push
mov
push
mov
loope
out
mov
movs
add
pop
mov
sbb
add
stos
mov
lods
popf
cdq
test
retf
add
scas
in
mov
data16
dec
les
mov
pop
xchg
stos
mov
mov
cmp
cmp
jmp
lahf
sub
call
popa
or
fwait
scas
inc
ins
ins
in
xor
clc
cld
sub
jnp
sar
lods
lods
data16
es
fistp
out
pop
xchg
xchg
mov
pop
xchg
jg
dec
je
outs
adc
into
movs
test
and
mov
repnz
clc
cmp
dec
add
push
(bad)
pop
sbb
mov
inc
xor
dec
ds
fld
mov
retf
ficom
adc
repnz
jb
jae
call
rcr
xchg
in
out
or
xor
repnz
dec
cmp
dec
adc
xor
fnstsw
out
(bad)
sub
js
sub
std
mov
daa
ja
lods
sbb
push
xchg
adc
loope
icebp
scas
(bad)
sbb
and
out
dec
and
aad
xchg
adc
and
in
in
push
dec
cmps
ror
jb
je
pop
or
push
leave
loopne
inc
xchg
cmps
xchg
arpl
push
dec
xchg
jge
jno
inc
mov
popf
push
jecxz
imul
leave
sub
cmp
mov
cwde
cmps
sub
push
pop
ins
int3
sub
jg
idiv
and
cmc
inc
xor
cmc
ds
in
stc
arpl
int3
out
push
cmp
inc
les
cmc
lds
aad
xchg
ins
sub
push
push
inc
nop
xor
and
add
lock
adc
adc
mov
shl
in
loopne
movs
mov
add
xchg
repz
cmp
mov
mov
js
stos
(bad)
xor
sbb
or
jmp
mov
push
and
and
sub
add
inc
mov
sub
jmp
ror
mov
rcl
or
sbb
dec
icebp
inc
stos
es
cmps
adc
shr
pop
cld
jge
jle
sbb
call
add
jae
mov
cli
out
retf
and
cmp
jg
sub
pop
mov
jo
mov
inc
inc
pop
outs
daa
xchg
push
mov
aad
push
pop
and
push
dec
pop
sub
sahf
adc
in
inc
call
jecxz
push
dec
pop
outs
lahf
retf
xor
mov
add
inc
push
data16
xor
retf
xchg
and
sub
jb
loopne
inc
add
test
mov
cmp
xlat
lahf
jo
mov
cmp
xchg
push
cmp
jae
mov
retf
inc
sub
mov
lahf
pop
clc
mov
ins
dec
ins
sub
jmp
dec
inc
pop
cwde
sub
mov
dec
leave
mov
mov
retf
data16
and
xor
or
pop
sbb
sub
aam
add
addr16
int
jp
jecxz
push
aam
and
jns
jb
repnz
(bad)
or
fimul
xchg
cmp
push
or
adc
jle
xchg
jno
imul
add
rcl
or
cli
mov
mov
or
xor
scas
cmps
cmps
push
sbb
or
and
mov
imul
mov
mov
xchg
pop
idiv
pop
fadd
icebp
mov
inc
mov
adc
push
pop
lea
and
push
add
dec
retf
movs
loop
sahf
cmp
icebp
int
sub
push
mov
cmc
(bad)
jbe
(bad)
dec
int
mov
sub
or
mov
cmps
xchg
cmp
stos
loopne
je
cmp
repz
mov
adc
and
pop
es
inc
mov
loope
sbb
js
xchg
(bad)
mov
(bad)
ins
fcomp
adc
dec
das
popf
dec
jl
js
into
lods
and
cmp
mov
and
call
jecxz
and
ror
or
div
cmp
mov
jae
push
jecxz
mov
popa
sub
nop
jmp
aad
in
int
pop
fcmovnbe
xchg
js
test
push
dec
sub
add
jno
mov
sbb
adc
pop
leave
cmps
push
sbb
mov
cmp
fistp
mov
dec
out
rol
repnz
lods
paddsw
pop
dec
adc
xor
lea
cld
mov
daa
push
xchg
scas
or
inc
dec
sub
xchg
fcomp
sub
pop
dec
cmp
out
inc
mov
cmp
xor
and
data16
sub
jge
(bad)
in
cmp
jno
xor
fsub
aam
in
iret
inc
scas
mov
in
xchg
stc
pop
dec
shr
fxch
xchg
ins
xchg
movs
in
sbb
cmc
adc
(bad)
mov
sub
popa
cmp
mov
mov
enter
sar
lahf
mov
sub
gs
jne
jecxz
mov
push
aaa
lods
hlt
inc
jge
sub
imul
or
scas
mov
repnz
xor
test
lea
push
and
cmp
push
(bad)
cwde
push
pushf
sub
aam
arpl
sub
cmp
jne
push
outs
sub
ins
in
movs
add
pop
movs
pop
iret
mov
push
je
dec
rol
mov
mov
and
add
sub
xor
outs
sbb
push
ds
jecxz
push
rcr
adc
push
cmc
mov
push
mov
in
stos
aam
lds
mov
retf
lods
inc
or
sbb
js
xchg
pop
mov
push
jns
mov
fcomp
jg
retf
and
ds
push
sti
xchg
mov
loopne
push
daa
push
cld
(bad)
push
dec
mov
mov
retf
add
loope
pop
cdq
push
jle
adc
pop
mov
adc
repnz
(bad)
fcomip
je
push
pop
push
push
add
jb
and
retf
push
sbb
ss
hlt
out
and
sbb
mov
mov
bound
ficomp
jns
fst
add
repnz
bnd
jl
push
push
(bad)
jg
or
xchg
sbb
xlat
sub
pop
jge
sti
(bad)
mov
dec
add
xor
fadd
push
bound
lahf
inc
repz
sar
adc
inc
xor
xchg
repz
jmp
nop
leave
fs
stos
mov
test
sbb
cmc
jns
(bad)
cmc
mov
mov
sbb
out
ficomp
shl
stc
out
pop
inc
std
mov
xchg
add
jns
fadd
cli
pop
sti
retf
push
sbb
mov
adc
add
enter
adc
add
lahf
test
add
data16
div
mov
out
ror
or
loop
(bad)
test
and
(bad)
mov
dec
cmps
xchg
xchg
cmp
repnz
pop
xchg
ficomp
out
dec
push
and
mov
sub
leave
adc
push
mov
loopne
or
add
in
neg
inc
pop
push
cmp
not
popa
stos
cmps
xchg
push
fcomp
cwde
cld
add
sbb
or
and
mov
retf
push
call
cwde
sub
mov
fs
call
lahf
outs
mov
test
push
xor
dec
js
mov
jle
les
add
sub
pop
or
xor
fcmovu
and
ja
push
sub
sub
sbb
sub
lahf
or
sub
mov
idiv
xchg
adc
jmp
js
xor
jbe
jnp
repnz
dec
cmp
aam
pushf
shr
push
mov
scas
inc
cmp
ret
sar
jbe
sar
dec
rcr
inc
movs
xchg
and
(bad)
mov
add
pop
inc
movs
daa
call
dec
pop
or
out
xor
adc
xchg
adc
push
mov
mov
call
xchg
xchg
mov
div
sbb
jmp
add
ffreep
mov
idiv
xlat
shr
mov
push
mov
arpl
xor
pusha
movs
mov
imul
push
inc
xor
shl
dec
fsubr
xlat
(bad)
adc
nop
jbe
sub
movs
jae
xchg
mov
or
cmp
jbe
cmp
inc
mov
xor
jl
inc
sbb
test
rcr
sbb
icebp
mov
(bad)
push
sub
adc
shr
lahf
loope
push
cmp
cmp
push
xor
xchg
into
sar
call
inc
push
cmps
in
mov
dec
xchg
push
mov
pop
inc
and
xchg
dec
pop
pop
int
add
imul
setns
int
jg
sahf
pop
inc
cmps
in
add
pop
rcr
xchg
dec
sub
imul
adc
pop
push
test
jne
outs
(bad)
xchg
lahf
fimul
and
mov
pop
je
leave
cmps
(bad)
jge
fcmovnbe
pop
dec
int
xchg
test
mov
arpl
lock
imul
sub
xchg
jle
lahf
ja
mov
aad
call
push
ds
sub
(bad)
mov
jns
jle
inc
and
imul
cmps
sbb
div
push
iret
push
adc
sbb
popf
push
inc
lock
call
jo
cmp
push
sti
mov
stos
adc
ds
inc
mov
fwait
mov
inc
hlt
fwait
mov
pop
rcr
add
mov
mov
call
mov
int
loope
stos
out
adc
jno
inc
pop
xchg
int3
out
cld
mov
test
jmp
(bad)
jnp
sub
sbb
add
jo
ret
pop
jae
not
bound
arpl
shl
sbb
enter
loop
jno
hlt
cmps
cmp
add
xor
dec
xchg
push
ror
add
jp
xchg
and
dec
dec
mov
add
repz
scas
sub
(bad)
outs
in
test
out
lods
and
ror
sbb
cmp
mov
jae
rcr
icebp
sub
or
or
int3
je
outs
mov
mov
xor
sbb
repz
fwait
iret
and
add
scas
jbe
mov
sub
dec
mov
mov
out
imul
cmps
jge
fimul
nop
add
stos
mov
or
push
fsub
mov
ins
outs
mov
sbb
add
push
push
xchg
loopne
xchg
or
mov
mov
mov
cmps
test
out
sbb
je
adc
cmp
jge
mov
push
inc
dec
sbb
xchg
push
sub
xchg
repnz
inc
inc
jno
mov
inc
push
inc
add
neg
and
enter
dec
mov
adc
dec
xchg
stos
shr
xor
dec
popf
inc
cld
outs
jge
lahf
ins
mov
mov
jnp
push
rcl
jnp
rep
ds
lea
mov
and
in
fwait
test
pop
out
int
mov
sub
dec
pop
imul
push
xor
in
cld
mov
sbb
(bad)
(bad)
sub
call
div
inc
push
mov
jns
cmp
(bad)
push
mov
pusha
ret
xchg
xor
dec
jno
scas
retf
movs
lods
dec
jmp
aad
in
mov
lahf
dec
fldcw
push
cli
sti
cmp
test
(bad)
push
cwde
mov
xor
or
jo
pop
sub
xlat
out
imul
mov
xchg
or
push
and
aam
dec
adc
xlat
mov
int
or
cmps
pop
dec
cmp
int3
lods
aam
loop
jl
or
inc
hlt
into
dec
mov
xor
into
add
jl
push
push
xor
and
test
jne
pop
inc
or
add
xchg
pop
out
adc
mov
xor
inc
sti
cmp
loop
push
sub
pop
lods
inc
cmp
cmp
lahf
mov
mov
mov
and
sub
add
dec
adc
add
loop
pop
pusha
popf
(bad)
je
(bad)
ja
pop
jecxz
add
sub
dec
mov
push
pop
push
mov
adc
gs
mov
mov
aad
imul
movs
sahf
call
xchg
push
cld
fadd
ficom
mov
fsubr
push
xchg
add
or
sub
adc
jno
jmp
inc
push
shl
sub
stos
pop
adc
imul
shl
pop
sub
cmc
mov
loop
(bad)
icebp
sar
enter
push
and
push
scas
push
out
sti
mov
xchg
add
sar
repnz
cmp
(bad)
mov
push
add
inc
fidiv
repz
xchg
aad
jg
sub
das
clc
es
(bad)
outs
inc
pop
dec
lods
dec
cmp
inc
xchg
push
stc
jno
inc
add
mov
mov
pop
inc
xor
int
ror
nop
dec
push
jnp
fwait
mov
cmps
lahf
or
mov
aam
or
dec
test
mov
test
sar
sub
shl
movs
fnstcw
or
or
test
xor
or
(bad)
xchg
imul
int3
sbb
stos
inc
jae
push
sub
sbb
out
arpl
mov
cmp
loop
arpl
dec
add
push
xchg
leave
or
xor
pop
sub
call
movs
lds
rcr
pop
mov
adc
les
stc
test
call
imul
std
dec
repz
repnz
iret
inc
push
xor
xchg
sbb
js
dec
push
add
and
or
jmp
xchg
std
mov
jne
adc
push
push
sub
dec
leave
adc
jnp
shl
add
jmp
stc
je
popa
repnz
sub
sbb
jb
cmp
jle
pop
call
test
repz
mov
fcomp
xor
test
mov
repz
stc
ret
test
ret
je
mov
pop
push
shl
stc
xlat
retf
cld
std
or
sub
xor
dec
pop
stc
rcl
aaa
dec
mov
scas
adc
in
arpl
add
pop
jae
daa
in
loope
add
ja
mov
inc
xor
movs
sub
push
movs
scas
pop
jae
mov
push
xchg
sbb
(bad)
les
jns
and
sti
pop
repnz
sbb
repnz
in
(bad)
adc
neg
mov
mov
dec
push
cmp
mov
or
out
xchg
mov
sbb
jns
add
push
loop
js
jns
cs
xor
adc
sub
and
xchg
mov
inc
sqrtps
lahf
fcmovnbe
pop
jb
fs
sub
outs
add
cmp
mov
mov
lds
sahf
(bad)
out
cmp
sbb
push
pop
and
(bad)
adc
mul
inc
xchg
loopne
scas
gs
dec
push
xchg
call
and
sub
dec
adc
jmp
gs
mov
ret
fwait
repnz
ret
fmul
jbe
mov
dec
add
and
into
jae
(bad)
cld
push
int
lea
and
loopne
cmp
shl
xchg
mov
pop
push
sbb
and
push
test
mov
dec
les
popa
mov
rcl
adc
test
sub
sub
dec
cmps
or
pushf
or
daa
inc
out
push
sbb
jle
dec
jne
mov
pop
mov
mov
scas
(bad)
rcr
(bad)
repnz
test
adc
(bad)
mov
inc
cld
icebp
rcr
xchg
mov
shr
stc
jp
je
test
cmps
or
dec
or
es
xor
inc
loope
push
addr16
pop
scas
mov
xchg
fdivp
fsubr
stos
test
sahf
jmp
gs
lods
in
test
mov
mov
and
mov
jl
dec
pop
mov
jmp
pop
icebp
pop
mov
add
scas
sbb
mov
stos
jb
outs
jb
xor
push
xor
xor
fstp
enter
mov
push
push
movs
push
stc
cmp
push
xor
dec
pop
pop
pop
adc
(bad)
mov
dec
and
arpl
sbb
sar
xchg
pop
xchg
ds
xor
inc
cmovs
movs
frstor
inc
and
pop
add
aas
sub
push
aas
jp
popa
int3
mov
sbb
dec
inc
ret
stos
sbb
push
xchg
xchg
mov
xchg
jo
xchg
stos
dec
push
sub
sub
mov
add
add
ds
(bad)
pop
or
int
mov
fidiv
aam
ins
push
pushf
or
xchg
jno
push
in
pop
out
dec
aam
in
jmp
test
out
xchg
jecxz
push
inc
fs
pop
aam
scas
mov
iret
retf
data16
pop
pop
mov
mov
into
xchg
cmps
lahf
inc
sbb
dec
mov
test
inc
inc
push
call
cmp
call
lods
sub
movs
and
in
sahf
inc
in
jecxz
jnp
jbe
imul
and
xchg
jns
mov
rol
or
sub
call
sub
push
or
sbb
add
fstp
scas
jg
pop
dec
jnp
pop
pop
mov
push
mov
int
sbb
(bad)
test
mov
lods
inc
clc
cmp
int3
sbb
outs
outs
mov
out
jg
(bad)
mov
inc
js
jae
adc
mov
or
icebp
pop
and
arpl
dec
mov
(bad)
lock
pop
pop
push
(bad)
jmp
and
xor
sahf
mov
scas
mov
test
inc
stos
pop
and
jle
jmp
sbb
fs
sub
test
jae
ss
ds
mov
xchg
jle
das
xchg
imul
sub
adc
nop
or
test
dec
pop
inc
(bad)
push
iret
lods
mov
(bad)
jle
ins
out
sti
jp
or
adc
imul
imul
jo
push
out
jl
sub
aad
cli
fxtract
xor
push
push
cwde
(bad)
or
mov
mov
or
arpl
dec
adc
jnp
jae
mov
push
(bad)
pop
loop
xchg
fwait
cmp
out
(bad)
loope
cmps
xor
cld
bnd
in
sahf
in
outs
mov
sub
out
fwait
push
inc
or
sub
cmps
or
sub
sub
aas
out
xchg
mov
std
ins
fwait
lods
push
pop
cli
jp
xlat
ins
enter
and
pop
adc
pop
mov
(bad)
push
test
pop
xchg
and
sbb
imul
lods
rol
push
dec
repnz
sub
jp
imul
ins
in
push
cmp
mov
and
push
lds
adc
push
mov
add
jge
push
test
and
dec
sbb
and
aam
or
aaa
cmc
neg
ret
sub
dec
adc
out
jmp
outs
fwait
bound
lock
enter
or
imul
cld
mov
scas
scas
stos
pop
ins
jle
xor
sub
(bad)
das
and
inc
push
jnp
push
shr
inc
test
mov
jp
jo
lock
mov
xor
les
cdq
scas
jl
sub
mov
(bad)
aad
sbb
mov
xchg
out
test
push
rcl
mov
mov
fstp
stos
shl
add
rcl
pop
sbb
mov
mov
push
stos
mov
push
xchg
pop
addr16
push
fistp
push
jb
or
pusha
inc
mov
xor
or
add
dec
(bad)
sub
adc
dec
inc
scas
clc
aas
lahf
inc
mov
xchg
clc
arpl
inc
mov
(bad)
fist
jo
sub
and
xor
xchg
push
push
xchg
push
sbb
(bad)
sti
ins
ret
or
repnz
mov
popf
mov
int
shl
push
js
pop
pusha
sbb
sub
lods
add
fs
mov
pop
mov
pop
push
xchg
(bad)
retf
xchg
fnstcw
outs
fdivr
inc
stos
sbb
rcr
test
cmp
adc
jbe
pop
fst
outs
lock
push
adc
scas
jne
sub
dec
push
xchg
imul
mov
int
std
std
mov
mov
push
push
sub
inc
add
push
lods
or
call
stos
ja
cwde
sub
mov
lock
push
into
xor
and
sbb
mov
or
sub
jnp
pop
sti
sbb
xor
inc
sti
cmp
je
sbb
dec
cwde
movs
inc
imul
fwait
push
mov
out
aam
pop
cld
and
cli
mov
inc
int3
cdq
pop
mov
cs
sbb
xor
inc
(bad)
lea
xchg
enter
cmp
xchg
mov
hlt
push
cmp
call
cdq
cmp
scas
lods
sbb
or
xchg
es
pop
push
mov
mov
dec
adc
inc
das
scas
jbe
sub
xor
stos
add
hlt
out
add
or
xchg
pop
shl
ja
ror
push
pop
or
inc
mov
movs
neg
lods
lods
movs
enter
push
sub
inc
mov
shl
pop
mov
pop
gs
xchg
jmp
dec
and
pop
cmp
jne
jb
stc
imul
mov
and
mov
push
inc
out
aaa
icebp
retf
mov
pop
mov
mov
dec
loope
stos
mov
ins
cmps
and
push
dec
xchg
push
sbb
sub
in
pop
out
loopne
xchg
pop
outs
fisub
cmps
adc
or
adc
cmp
dec
and
cmps
xchg
xor
sbb
mov
in
pop
test
adc
xor
push
push
xchg
add
mov
fcom
xchg
xor
or
push
or
data16
pop
pop
add
(bad)
(bad)
repz
jmp
leave
ja
mov
movs
nop
add
(bad)
push
test
lock
nop
adc
push
adc
mov
mov
movs
mov
cmp
cmps
or
jl
scas
imul
dec
xchg
xor
inc
mov
(bad)
jmp
pop
loope
sub
cdq
add
inc
(bad)
stos
retf
cmc
daa
jmp
mov
add
or
out
mov
test
xchg
xchg
shl
fimul
push
xchg
cmp
in
imul
rol
cmp
retf
std
push
xlat
jnp
fwait
lahf
lock
xchg
retf
xor
loop
imul
xchg
cmps
xor
ss
mov
int
das
cmps
inc
sub
mov
daa
xchg
sbb
ins
or
int3
shl
sub
movs
scas
mov
or
add
sahf
xchg
and
pop
es
dec
add
xchg
idiv
pop
div
mov
enter
and
and
(bad)
push
jno
(bad)
ds
das
sub
(bad)
clc
outs
adc
and
lods
or
dec
push
into
mov
aas
adc
(bad)
jo
repnz
pop
out
sub
xor
and
loopne
inc
not
inc
cmp
pop
pop
scas
fwait
mov
fisubr
jmp
xor
pop
push
inc
jns
ja
xor
sbb
cmp
dec
cdq
retfw
xchg
out
mov
aad
gs
pushf
scas
lea
and
push
add
pop
scas
mov
push
and
xchg
int
cs
scas
popf
mov
sub
enter
dec
stos
sub
jns
test
xchg
cmp
retf
mov
cdq
sub
sbb
mov
mov
test
retf
pusha
adc
imul
cmc
push
fist
sub
cmp
and
add
pop
fwait
xor
stos
jne
sub
jg
leave
(bad)
mov
mov
jnp
jp
inc
adc
jge
dec
mov
adc
adc
ret
and
xchg
and
jns
lahf
out
pop
int
and
bound
cmp
mov
jmp
pusha
inc
and
add
jg
retf
stos
jno
xor
(bad)
jge
loop
out
jnp
xchg
(bad)
jae
ficomp
mov
or
shl
cwde
jecxz
or
dec
out
inc
mov
jl
sub
in
int3
sti
adc
mov
arpl
dec
inc
mov
xor
stc
push
popf
lods
stc
shr
loopne
sahf
stc
sbb
call
pop
inc
add
inc
xchg
movs
xor
test
jmp
test
mov
test
push
ret
cmp
dec
gs
pop
adc
sub
cli
pop
or
gs
adc
shl
and
iret
xor
pop
xor
mov
dec
pop
inc
imul
clc
je
push
aad
cmps
scas
dec
or
test
lds
jmp
pop
pop
push
in
sar
cmp
retf
xlat
std
pop
mov
xlat
add
xor
jg
jmp
jne
and
dec
and
cmc
add
add
lods
rol
call
rol
ret
inc
les
je
(bad)
jnp
xchg
inc
dec
and
sahf
adc
sahf
mov
xchg
sub
xor
aas
ja
in
jmp
ret
ficom
xor
dec
jae
inc
(bad)
xchg
cmc
test
call
jnp
sbb
call
lods
rol
dec
push
dec
sub
data16
push
imul
push
mov
aam
mov
mov
loope
inc
sub
les
inc
push
push
aam
mov
aam
mov
retf
jno
(bad)
and
mov
sub
outs
sub
lds
inc
addr16
adc
mov
pop
add
int
add
jnp
js
xchg
movs
test
mov
div
out
cwde
lea
shl
icebp
sti
cmp
(bad)
and
cmp
ds
dec
mov
inc
hlt
mov
push
out
(bad)
or
xchg
cmps
add
pop
inc
repnz
push
cmp
in
frstor
xchg
lods
cwde
(bad)
and
repz
lods
aas
cwde
pop
dec
es
lods
stos
ja
push
pop
addr16
shl
call
(bad)
test
adc
dec
xor
out
or
or
aas
inc
jns
aas
mov
out
xlat
(bad)
aaa
ja
jbe
cmp
popf
imul
pop
add
sub
lods
add
imul
retf
push
in
jmp
push
inc
mov
sub
pop
ins
lods
push
xlat
and
xchg
sbb
xchg
and
lds
mov
outs
jae
in
pop
push
in
movs
jecxz
sbb
xchg
mov
(bad)
pop
outs
push
push
fucomip
das
ss
std
aas
xor
out
and
test
lock
jnp
push
dec
pop
mov
and
inc
sbb
jle
popf
(bad)
sar
add
fdiv
cmp
inc
cld
frstor
add
and
cmp
and
mov
cmp
fcomip
jo
pop
jmp
push
out
xchg
jecxz
push
xchg
loop
les
ret
(bad)
cmps
mov
xor
fistp
movs
push
adc
test
iret
test
ins
ds
shr
shl
add
aam
daa
xchg
push
adc
cdq
test
adc
daa
std
cmps
div
mov
xchg
adc
cdq
loope
pop
mov
test
add
scas
inc
addr16
scas
(bad)
sbb
jns
mov
in
mov
xchg
push
movs
sbb
push
pop
retf
dec
dec
stos
enter
jmp
mov
push
shr
int3
xchg
sbb
inc
mov
jo
push
dec
mov
out
inc
fucomp
pop
sub
push
add
mov
push
add
cmps
(bad)
or
add
lods
mov
lods
(bad)
gs
loop
test
js
arpl
aad
add
popf
enter
aaa
add
ds
(bad)
jae
(bad)
push
push
fsubr
and
pop
mov
mov
cli
push
push
xchg
daa
lods
xor
cmp
aaa
jns
mov
lahf
or
xor
(bad)
adc
je
out
or
or
mov
cmps
shr
push
jge
lds
mov
mov
mov
das
mov
arpl
sub
shl
push
scas
sbb
push
rol
push
xchg
test
nop
int
pop
inc
inc
sbb
gs
data16
loop
inc
push
pop
mov
mov
mov
mov
inc
pushf
call
es
fadd
and
sbb
dec
sti
pop
push
icebp
mov
adc
scas
clc
call
js
mov
enter
call
and
imul
add
push
jno
arpl
cli
and
jmp
inc
sbb
popf
dec
pop
ds
jne
pop
imul
and
addr16
daa
dec
and
pop
dec
retf
enter
xchg
movs
or
in
add
jo
js
jmp
mov
pop
(bad)
movs
push
xchg
jnp
jle
imul
test
xor
push
test
cmp
jl
inc
cmp
test
sbb
repnz
clc
div
fldcw
push
xor
std
and
inc
push
jecxz
jle
nop
fcmovne
add
lods
push
in
push
push
pushf
push
push
xor
xchg
call
out
fidivr
sbb
scas
fist
sbb
(bad)
cmc
mov
test
or
pop
(bad)
out
outs
arpl
fs
and
xchg
xchg
mov
jl
rcr
xchg
loopne
dec
(bad)
jnp
mov
ror
mov
retf
xchg
inc
inc
push
mov
jl
outs
stos
push
aam
inc
lods
jb
pop
xor
add
ds
bnd
loop
movs
aas
addr16
fcmovnu
les
push
arpl
sub
stc
je
ret
(bad)
pop
sub
push
loop
pop
dec
xor
fcomip
add
mov
call
nop
(bad)
adc
div
addr16
pop
cdq
imul
jl
adc
push
xor
loop
cmp
aad
je
movs
scas
fist
call
push
mov
dec
int
data16
lds
jbe
mov
js
or
push
xor
xchg
retf
adc
pop
xor
add
popf
fbld
push
mov
loop
adc
xchg
xor
gs
test
sub
xor
xor
and
pop
cmps
add
mov
repnz
pop
neg
mov
in
adc
dec
leave
sbb
aam
je
cmp
adc
jle
pushf
jg
iret
stc
cwde
sbb
cmp
and
cmp
shl
stc
sub
sbb
inc
sti
pushf
jo
xor
dec
cmp
imul
punpckldq
in
scas
dec
movs
mov
and
sub
pop
fidiv
jecxz
dec
jo
xor
cld
lds
adc
ins
xchg
shl
stos
xchg
sbb
test
adc
cmp
pop
xchg
iret
loop
sub
xchg
xchg
lahf
dec
push
imul
lods
test
jo
in
ja
div
test
in
movs
cmp
cmp
mov
in
jmp
(bad)
mov
or
icebp
in
and
cmc
jmp
fcom
mov
fistp
push
xor
in
mov
inc
push
test
mul
cwde
xor
cmp
push
jo
push
ror
mov
mov
outs
scas
out
pop
add
dec
push
mov
repz
adc
cmp
sbb
stos
sbb
sbb
in
loope
add
xchg
arpl
xchg
or
cmp
imul
pop
gs
test
movs
inc
xor
dec
ja
(bad)
(bad)
fisubr
xchg
(bad)
arpl
movs
mov
or
push
in
call
xrelease
xchg
add
add
jns
out
cmp
dec
jmp
test
enter
mov
cmp
adc
les
sub
mov
(bad)
mov
pop
xlat
sbb
(bad)
pop
inc
daa
(bad)
movs
retf
mov
sbb
dec
and
dec
fldenv
mov
mov
add
(bad)
cwde
movs
push
imul
xchg
into
push
icebp
dec
or
push
rcl
mov
push
jp
sbb
and
mov
cmp
mov
xor
jae
mov
and
inc
jne
ja
and
sbb
jg
sub
adc
xchg
inc
in
movntq
out
jne
ja
pop
rol
xor
pop
dec
mov
test
pop
inc
rol
push
or
int
outs
ins
leave
hlt
dec
dec
ins
je
or
seto
je
fnstenv
iret
sub
adc
scas
into
mov
xor
retf
push
dec
sub
into
aad
and
sub
jns
jge
mov
add
sbb
mov
pop
jno
aad
cwde
xchg
inc
dec
movs
jo
push
and
int
cli
cmp
mov
adc
lods
xchg
add
add
cmp
mov
mov
lea
dec
add
push
int
push
iret
sub
jge
ins
in
shr
xchg
add
out
scas
and
loop
daa
xchg
aas
mov
lds
xchg
push
jecxz
xchg
inc
shr
push
call
pop
mov
ds
retf
es
xor
pop
push
es
push
les
mov
push
pop
mov
inc
add
dec
mov
dec
push
xor
jecxz
ret
ins
lahf
push
sar
sub
gs
sti
jp
fcom
leave
mov
mov
mov
inc
and
dec
out
pop
movs
inc
sbb
add
mov
mov
loop
loope
pop
jmp
push
pushf
dec
inc
jecxz
arpl
rcl
jno
jae
daa
out
test
sub
int3
push
std
push
jmp
xchg
xchg
sub
jmp
dec
pop
or
xchg
fisub
dec
es
movs
sbb
dec
push
(bad)
fisubr
or
adc
wrmsr
push
imul
xchg
pusha
dec
inc
push
imul
iret
sbb
icebp
shl
dec
test
cmps
sahf
mov
shl
lods
outs
jg
(bad)
popa
outs
adc
pop
and
aas
in
les
inc
xchg
add
xchg
in
jge
or
dec
xchg
out
dec
lods
bound
or
cmp
das
jnp
cmp
mov
fist
push
and
xor
imul
dec
imul
test
xchg
cmp
test
push
mov
mov
repnz
repnz
pop
inc
inc
inc
aas
lahf
data16
xchg
fst
inc
add
cmc
jmp
ins
enter
repnz
cli
mov
in
push
jbe
mov
mov
das
xchg
int
test
bound
shl
inc
mov
add
cmc
mul
jb
lea
stc
ins
aad
mov
or
sar
jne
loopne
dec
rol
sahf
cmp
jmp
xchg
js
stos
pop
ins
in
sbb
push
adc
mov
(bad)
shr
test
xlat
xchg
clc
out
mov
call
pop
sar
inc
mov
mov
call
push
jle
or
je
lods
seta
fidiv
imul
adc
inc
inc
pop
cmps
imul
test
loopne
aam
xchg
lahf
push
dec
mov
(bad)
jge
dec
fisub
sub
mov
dec
lock
mov
or
and
test
mov
aad
fstp
cmp
push
je
pushf
xchg
mov
xlat
mov
or
dec
inc
xchg
lods
or
mov
mov
jne
jbe
jecxz
imul
arpl
mov
fmul
stos
test
push
popf
mov
lea
icebp
mov
pop
sar
push
int
or
and
sbb
pop
and
mov
js
adc
add
test
sbb
out
sahf
pop
rcr
mov
mov
add
stc
dec
sbb
pop
lahf
idiv
les
movs
jle
dec
iret
jmp
push
std
inc
cmps
mov
nop
jo
add
add
pop
fs
or
test
and
data16
shl
stos
int3
mov
mov
jne
bound
sub
jno
out
lahf
dec
scas
gs
pop
(bad)
pop
mov
mov
adc
enter
pop
or
adc
mov
add
aam
(bad)
jmp
inc
(bad)
mov
inc
(bad)
and
movs
je
enter
xor
pop
and
lods
je
nop
inc
loopne
imul
dec
pop
jne
aas
dec
pop
jns
jnp
pusha
push
ja
xor
cmp
pop
gs
mov
pusha
and
push
push
or
cmp
call
xor
jle
sahf
cmp
push
push
and
div
push
mov
add
jnp
ja
dec
pop
jb
or
sbb
add
out
hlt
dec
js
cmp
shl
inc
test
fist
dec
jecxz
loopne
cmps
pop
call
outs
xchg
push
xchg
dec
test
movs
xlat
retf
movs
xchg
iret
movs
jle
stos
mov
sahf
and
mov
jmp
sub
repz
cmp
push
jne
add
stos
shl
mov
mov
aam
nop
dec
sbb
outs
lods
push
xchg
dec
adc
bound
xchg
adc
repnz
pop
cmp
adc
rol
je
sbb
mov
into
or
adc
jl
jno
cli
dec
jne
xor
scas
push
or
not
pop
test
sahf
inc
add
pop
and
fidivr
ins
ret
push
and
ret
aad
adc
mov
push
xchg
ret
push
(bad)
mov
jp
or
stos
imul
mov
adc
cmp
inc
add
jp
sbb
xor
or
sti
sub
xor
cmp
in
dec
jp
out
nop
push
pop
shl
jmp
sub
adc
stc
gs
pusha
arpl
fcmovnbe
xor
mov
push
add
push
mov
mov
mov
cmps
xchg
push
mov
inc
repz
inc
(bad)
cmp
iret
mov
mov
dec
test
arpl
and
mov
ins
test
(bad)
lahf
rcr
push
aam
cwde
rcl
nop
push
test
mov
mov
outs
jmp
inc
dec
pand
cmp
jp
pop
fwait
push
rcl
mov
adc
mov
sub
mov
aad
inc
cmp
pop
fnstcw
or
adc
pop
pop
adc
popf
sub
stos
mov
rcr
push
and
xchg
or
add
dec
(bad)
imul
xchg
sahf
cmp
push
cmps
addr16
mov
test
push
in
inc
lea
std
aaa
mov
jl
repz
jle
cs
popf
scas
(bad)
mov
in
dec
dec
sub
sahf
fbstp
call
stos
cmp
pop
sbb
sbb
lods
movs
jge
in
iret
outs
mov
push
stos
mov
leave
ror
add
cli
mov
lea
jbe
inc
dec
in
jecxz
push
cmp
sub
inc
cmc
xor
(bad)
test
loope
and
pop
clc
sti
aaa
xchg
ins
mov
arpl
ins
xor
push
test
push
cmp
or
stos
mov
jmp
das
push
mov
cwde
adc
dec
jecxz
cmp
cmp
movs
lock
mov
sub
clc
xchg
test
test
add
push
push
(bad)
iret
test
les
dec
(bad)
dec
push
std
cmp
mov
inc
push
cmps
and
shl
mov
jg
sti
enter
dec
out
scas
mov
aam
push
cwde
xor
ja
cmp
lods
push
dec
cdq
ds
cmp
aad
push
push
or
mov
pop
pop
dec
cmp
jle
fistp
inc
jmp
push
retf
xor
xor
xchg
movs
jle
dec
or
jmp
fwait
jmp
inc
xor
outs
jo
in
inc
xchg
add
icebp
push
lea
jecxz
push
sub
outs
outs
ds
sub
pop
adc
push
(bad)
sub
lods
xor
dec
lea
hlt
fstp
inc
mov
mov
mov
mov
pop
fisubr
dec
nop
dec
jp
dec
or
rcr
int
popf
xor
imul
push
aam
inc
mov
adc
jnp
gs
dec
sub
mov
arpl
mov
pop
sub
movs
mov
sub
fsubr
ret
les
xor
mov
and
in
fidivr
mov
stos
adc
in
jmp
jl
call
popa
ins
and
popf
xor
mov
or
fs
sti
js
addr16
(bad)
jns
nop
add
loope
mov
jmp
xlat
fsubr
mov
push
rol
jno
pop
(bad)
in
stos
sbb
iret
aam
std
das
out
mov
cmp
push
xor
jmp
enter
sbb
mov
test
inc
cmps
test
test
xchg
repz
pop
pop
call
dec
or
pushf
push
pop
shr
out
loope
push
loope
pop
bnd
dec
scas
in
adc
mov
out
(bad)
adc
movs
out
push
fs
adc
dec
or
xchg
mov
cdq
bound
xchg
pop
push
(bad)
pop
add
jmp
mov
mov
cwde
test
add
cmps
add
push
mov
xchg
scas
outs
sbb
pop
push
popf
jl
inc
push
lock
(bad)
les
cmp
pop
mov
test
and
inc
mov
inc
dec
push
addr16
enter
xchg
xchg
mov
mov
mov
mov
cmps
rcr
cwde
inc
ret
dec
inc
push
in
dec
jl
shl
adc
loop
rcr
push
jg
jl
jle
stc
je
out
out
shr
pop
cmps
in
arpl
adc
pop
dec
cmps
adc
loop
xor
std
inc
lahf
icebp
mov
mov
test
push
adc
(bad)
mov
into
fsubr
loop
sub
add
(bad)
cmp
xor
cmp
push
mov
sub
adc
push
xchg
stos
ret
push
and
test
sbb
add
jmp
arpl
adc
rcl
test
nop
imul
adc
ror
rcl
imul
or
push
cmps
mov
pop
stos
sahf
fwait
pop
fisubr
stc
and
mov
and
cs
outs
int3
add
xlat
pop
jle
inc
punpckldq
rcl
push
add
(bad)
jg
retf
stos
inc
add
enter
aam
shl
stc
je
xchg
dec
sbb
and
add
movs
xchg
cmp
xchg
adc
add
in
ror
mov
add
push
aas
and
stc
je
inc
pop
xor
push
inc
and
inc
sub
cmps
push
push
into
mov
xor
and
js
add
push
xchg
jmp
and
icebp
loop
inc
imul
stc
xor
or
pop
add
ins
stos
js
dec
push
fistp
mul
pop
movs
pop
loop
jp
sub
pop
in
(bad)
mov
mov
jo
dec
std
cmps
(bad)
sub
sub
cmps
mov
push
mov
xchg
adc
(bad)
mov
jl
push
(bad)
stos
shl
sti
pop
out
sti
not
and
stos
cmp
lods
sub
xchg
inc
jne
ss
mov
imul
sub
lods
jno
je
leave
dec
mov
xchg
aam
sbb
push
cmp
bound
nop
inc
adc
pop
mov
add
xor
xchg
gs
push
scas
clc
cmp
imul
xchg
inc
pop
jns
xchg
movs
ds
cmp
jmp
add
push
aad
fwait
(bad)
aad
ins
cmps
inc
push
xchg
add
cmp
mov
not
xlat
nop
pop
pop
add
sbb
or
dec
fdivr
fdiv
add
test
sbb
repnz
inc
and
mov
enter
jb
and
xor
push
mov
movs
popa
adc
mov
icebp
mov
mov
xchg
push
mov
ret
mov
jecxz
fcomp
xchg
xchg
inc
bound
xor
push
loope
jl
push
sahf
call
sbb
cmps
xchg
lods
jl
sub
stos
xchg
js
push
lea
es
in
outs
push
mov
mov
cmps
mov
push
fld
inc
or
cdq
and
pop
mov
stos
add
push
dec
js
xor
fs
rol
mov
lds
sbb
adc
mov
aad
jg
fs
sbb
xchg
retf
pop
stos
push
mov
xor
dec
daa
clc
ret
ror
xor
add
sbb
xchg
push
xchg
adc
pop
jl
or
shl
pop
popa
int
shl
mov
pop
aam
push
out
or
sub
mov
inc
dec
inc
repnz
pop
push
aam
and
pop
(bad)
neg
fucomp
loope
mov
imul
or
mov
push
jmp
ret
sub
ror
sar
adc
xor
dec
inc
bswap
sbb
ss
mov
adc
add
das
scas
pop
mov
scas
or
(bad)
out
out
xor
adc
call
jle
imul
sbb
jge
idiv
stos
div
sub
int3
mov
xor
add
movs
dec
mov
adc
inc
and
ds
mov
imul
jecxz
iret
and
jns
jecxz
lods
mov
sar
mov
sub
push
nop
mov
sbb
fs
jo
(bad)
jno
aaa
pop
push
jg
test
sti
leave
jl
mov
ret
push
sub
mov
inc
jae
test
xchg
out
icebp
jmp
imul
push
push
stos
inc
mov
jmp
inc
jae
lods
jns
xchg
sbb
mov
jo
jecxz
pop
imul
sub
pop
xor
call
dec
xor
das
comiss
pushf
jg
sbb
aad
(bad)
push
dec
adc
(bad)
retf
cdq
stos
or
and
daa
hlt
fistp
iret
sub
lods
sub
adc
push
add
sar
pop
shr
fs
cmps
in
jmp
js
or
cmp
dec
xor
dec
mov
leave
xor
add
mov
adc
cld
std
sub
stc
push
pop
mov
mov
or
inc
cmp
pop
gs
jae
icebp
rcl
push
test
test
or
sub
mov
push
mov
push
push
sar
cld
clc
push
adc
in
not
mov
shl
add
shl
jp
mov
ins
push
inc
rcl
stos
add
sbb
pop
shr
jnp
mov
arpl
or
rcr
mov
xor
push
imul
fdivr
imul
push
add
sbb
mov
adc
cld
sti
xor
sbb
push
push
mov
out
jp
fist
out
push
fcom
icebp
out
scas
dec
or
popf
in
xchg
mov
es
inc
adc
add
jl
dec
push
xchg
nop
ret
push
in
dec
cmp
nop
ins
lods
in
test
inc
std
pushf
cmp
jmp
in
jmp
or
pop
and
jle
loope
sbb
push
addr16
jbe
and
cli
inc
loopne
bound
dec
ins
inc
pusha
push
call
cmp
mov
add
ror
and
xchg
mov
test
inc
mov
mov
nop
dec
and
lea
jbe
inc
mul
and
and
mov
sahf
mov
xor
and
dec
sti
aas
addr16
out
push
inc
mov
ret
jno
mov
dec
dec
push
push
cmp
cmp
stos
mov
mov
push
mov
fcomp
cmps
fnsave
jne
inc
arpl
dec
mov
inc
xchg
scas
sahf
inc
imul
imul
or
ror
add
retf
or
adc
jmp
shr
xchg
mov
xchg
mov
push
mov
mov
push
rol
inc
sub
aam
sbb
xor
cmp
in
add
fwait
lea
xchg
jg
shl
inc
popa
push
rcl
mov
push
loopne
xor
inc
sub
sbb
mov
lea
fcmovnu
adc
cmp
pop
aam
sbb
aam
cmps
ret
js
adc
pop
xchg
xor
adc
cmps
fcmovu
sti
scas
cmps
mov
in
inc
pop
xchg
cmp
aad
cwde
cmp
gs
bound
cmc
cmp
iret
popa
mov
rcr
fwait
xchg
lea
dec
or
test
add
mov
jmp
(bad)
cmc
int3
jo
sbb
xor
push
stc
push
xor
pop
jg
aas
and
push
call
xchg
jge
mov
imul
push
fs
push
dec
adc
jb
mov
fdivr
lahf
jge
std
mov
push
pop
add
in
add
cmp
mov
idiv
call
test
je
or
stos
adc
sub
lock
sar
dec
ror
xor
add
sbb
mov
lahf
imul
rcr
nop
lods
dec
inc
push
pop
imul
and
inc
inc
mov
imul
mov
clc
mov
daa
es
cld
inc
lea
icebp
call
stc
test
retf
mov
sub
or
mov
sar
test
dec
jecxz
and
ja
push
and
daa
xchg
sti
mov
pop
inc
jg
jecxz
sti
push
(bad)
mov
pop
add
and
inc
paddsb
xor
clc
sub
sbb
push
(bad)
cmps
add
mov
outs
push
sub
xchg
outs
test
add
cli
adc
dec
sbb
jp
scas
call
xchg
pop
pop
jge
stos
stos
inc
(bad)
add
push
int3
adc
adc
add
xchg
jecxz
inc
inc
cwde
cmp
fwait
outs
and
cli
call
(bad)
pop
iret
pop
pop
ror
xchg
xchg
inc
sbb
push
cmp
test
test
cmp
das
in
push
in
faddp
movs
mov
pop
aaa
mov
(bad)
mov
in
ins
popa
out
daa
sub
mov
sbb
aas
xchg
push
mov
enter
pop
call
jnp
mov
sbb
add
(bad)
pop
mov
cs
sbb
inc
shl
jmp
scas
pop
adc
sub
add
push
mov
scas
jo
sbb
ret
mov
enter
lds
adc
jo
dec
and
pop
fiadd
ret
dec
mov
aam
mov
sub
call
test
(bad)
fwait
mov
bound
daa
pop
push
cmp
and
add
pop
cli
jnp
fidiv
stos
jp
cs
ja
ret
sbb
adc
nop
leave
xchg
or
lds
pop
xchg
fisub
pop
loope
xchg
xchg
enter
rcl
and
add
mov
add
jg
inc
xchg
or
jge
sti
xor
adc
mov
clc
je
cli
push
pop
adc
add
push
xchg
sbb
out
popf
cmps
sub
mov
push
adc
mov
xchg
mov
test
outs
ror
ins
fwait
outs
out
clc
and
cdq
stc
icebp
call
arpl
(bad)
lock
fild
adc
dec
lods
add
jp
imul
adc
(bad)
jl
add
adc
mov
and
pop
inc
xlat
mov
inc
pop
(bad)
pop
mov
ret
mov
add
or
out
inc
cmp
sub
dec
sbb
arpl
sbb
add
movs
lea
xchg
stc
mov
in
js
imul
pop
mov
dec
jge
inc
(bad)
adc
out
jmp
(bad)
lods
in
in
pop
pop
dec
stos
inc
or
stc
icebp
stc
lock
out
int
outs
retf
mov
int3
lods
xchg
test
push
mov
(bad)
das
push
and
push
xchg
or
cmp
push
sub
mov
jmp
mov
add
aam
test
or
xor
push
inc
(bad)
jle
aaa
mov
cmps
lock
and
cmp
mov
cmp
dec
mov
add
(bad)
xor
and
pop
pop
mov
mov
test
les
add
lahf
retf
in
repz
retf
stos
fidiv
xor
xchg
inc
out
mov
dec
test
cmovb
dec
leave
sahf
call
fsub
jae
bound
xchg
jno
es
mov
or
jb
push
push
pop
fist
push
xor
leave
aaa
popf
into
(bad)
cdq
jns
mul
js
adc
xor
push
inc
pop
jb
cmp
iret
add
retf
inc
mov
mov
jle
mov
mov
jnp
pop
call
inc
inc
(bad)
sub
fcomp
loope
or
adc
inc
popa
xchg
fwait
retf
sub
stos
js
imul
enter
cld
cmp
jmp
call
in
inc
jo
add
pop
xlat
iret
mov
cmps
clc
popf
mov
push
inc
imul
adc
imul
out
jne
mov
in
push
mov
lea
arpl
inc
and
adc
shr
mov
and
fisubr
xchg
xor
mov
and
or
push
aas
gs
std
mov
jle
fcomp
in
mov
rol
sbb
(bad)
mov
jecxz
adc
mov
aaa
addr16
push
vmread
je
out
movs
retf
cmc
add
stos
xchg
xor
les
dec
mov
ficomp
xor
pop
and
imul
bnd
cmp
pop
mov
loop
shl
inc
pop
daa
mov
imul
mov
xor
(bad)
movs
cmp
stc
pop
mul
xor
mov
sub
popa
lea
aas
scas
mov
jo
scas
jmp
jle
pop
iret
retf
out
fwait
mov
leave
imul
push
hlt
(bad)
loopne
xor
and
mov
xchg
sbb
addr16
mov
and
xchg
xor
repnz
out
sub
out
jbe
out
test
movs
dec
(bad)
jmp
xor
out
and
cmps
cmp
xchg
ror
mov
mov
push
clc
cmc
fadd
push
in
mov
inc
scas
shl
call
dec
fcmovbe
mov
fldcw
data16
outs
fs
retf
push
or
fistp
in
into
fwait
cmp
fadd
push
dec
adc
pop
retf
inc
add
sets
add
mov
div
mov
lods
xor
inc
sub
dec
mov
lea
mov
jne
xchg
fwait
mov
push
test
cdq
or
ror
xchg
js
pop
push
xlat
dec
sbb
(bad)
jne
pop
fs
cmp
ret
push
xchg
mov
push
aas
sbb
lea
cmps
or
jne
fwait
xor
or
xchg
xchg
mov
cmps
push
or
popf
dec
les
cli
fmulp
and
cdq
xchg
add
cmp
cwde
add
icebp
jmp
daa
(bad)
loop
mov
push
call
rcl
add
sar
movs
nop
dec
and
aad
dec
mov
test
test
dec
aas
jo
in
fwait
add
fstp
xchg
xor
add
add
inc
fwait
jl
pop
(bad)
aaa
add
push
scas
xor
sbb
js
test
popa
xor
retf
test
cmp
mov
mov
frstor
push
jl
sbb
cmps
jae
fpatan
call
call
loopne
adc
fwait
call
jmp
jnp
adc
xor
inc
fstp
jb
ror
push
mov
dec
adc
dec
and
loopne
sbb
dec
cmp
out
(bad)
call
xchg
jbe
cmp
pop
imul
and
loop
out
push
mov
and
jo
add
mov
enter
sub
mov
dec
fs
pop
ss
cmps
inc
arpl
fcmovnu
inc
movs
repz
sub
jns
and
retf
ss
mov
inc
dec
test
movs
cmp
lock
aas
cmps
in
xor
idiv
jno
into
js
sbb
scas
shl
mov
inc
pop
pop
scas
retf
lahf
jmp
xchg
inc
addps
jae
pop
mov
inc
mov
mov
fisub
sub
inc
add
jl
mov
aaa
mov
enter
std
dec
and
aad
std
xchg
(bad)
mov
or
cmps
add
adc
mov
and
xchg
inc
push
imul
dec
jne
pop
or
jge
pop
mul
push
pop
out
mov
fisubr
lds
cmp
xchg
iret
mov
xchg
mov
test
bound
add
xor
stos
cmp
dec
adc
sub
sub
and
(bad)
add
push
jae
inc
lods
stos
push
fwait
pushf
xor
or
adc
push
test
inc
fcom
mov
push
dec
adc
cwde
lods
mov
inc
mov
mov
mov
inc
aam
out
add
lock
jb
sbb
push
aam
push
pop
arpl
ja
pop
push
inc
xchg
pop
jp
or
mov
pshufw
push
arpl
leave
sbb
mov
cmp
enter
sub
std
mov
fsub
xor
adc
scas
push
xor
out
das
jle
leave
push
fist
mov
mov
movs
aam
aas
das
retf
movs
es
xchg
sub
xchg
mov
mov
sbb
and
idiv
aam
jge
mov
movs
int
push
adc
popa
adc
test
mov
stos
stc
pusha
(bad)
addr16
xchg
dec
adc
xchg
inc
push
fcmovnbe
daa
mov
mov
int3
jmp
cs
sbb
mov
(bad)
int
add
int
jno
fisttp
or
mov
add
push
and
xchg
dec
retf
repz
ja
into
test
lahf
das
(bad)
mov
xor
mov
adc
dec
fs
xchg
nop
or
fisttp
pushf
int
mov
jmp
movs
xchg
pop
xor
retf
cmp
mov
mov
imul
add
sti
jl
xlat
test
ret
ins
mov
stos
lods
nop
add
xchg
push
ret
sbb
jae
mov
jns
sahf
inc
(bad)
test
dec
xchg
repnz
mul
dec
nop
pop
jg
and
in
not
addr16
cmp
fucomi
ins
inc
pushf
ficomp
pop
ins
mov
add
enter
cmps
loope
stos
pop
int3
add
pop
arpl
push
pop
inc
xor
adc
push
push
add
mov
sub
ficomp
sub
inc
adc
dec
sbb
int
sub
(bad)
in
cmp
mov
cmp
retf
mov
cmps
nop
stos
adc
repnz
mov
lahf
dec
and
in
mov
outs
in
sar
outs
sbb
and
push
mov
(bad)
out
mov
retf
sbb
lea
inc
cmc
pop
xchg
jg
jg
cmp
mov
cmc
xchg
sti
push
xchg
jmp
hlt
push
addr16
xor
pusha
arpl
xor
sbb
dec
imul
jmp
or
sub
cmp
jae
jno
xor
mov
loope
inc
sub
xor
cmp
dec
add
test
mov
dec
repz
aam
leave
lds
scas
cdq
adc
cmp
aad
jne
(bad)
or
push
push
jno
jae
lds
dec
pop
xor
inc
dec
int3
and
ret
cli
jle
mov
mov
fadd
sub
sbb
call
(bad)
add
fsubr
mov
xor
int
dec
and
adc
movs
mov
inc
stos
push
push
and
pop
add
jp
(bad)
mov
jno
fadd
push
inc
aad
icebp
add
jb
xchg
rcr
jmp
in
or
add
add
ss
pop
adc
lock
inc
leave
jecxz
or
daa
lds
push
fwait
(bad)
mov
fld
stos
jbe
push
gs
movs
sbb
mov
mov
movs
sub
and
mov
rcr
in
dec
cmps
cmps
rcr
sbb
pop
ins
aam
pop
push
xor
xchg
xor
sbb
pushf
xor
mov
mov
dec
mov
retf
repnz
xchg
mov
pop
push
mov
and
add
pop
adc
xchg
lods
or
jecxz
(bad)
retf
out
inc
jp
add
iret
cmp
or
sar
aad
push
xchg
sub
sub
data16
or
aaa
pop
ins
outs
cmp
jb
shl
rol
imul
adc
stos
lahf
das
xor
fdivp
(bad)
into
cmp
dec
fxch
sub
dec
or
mulps
dec
mov
or
inc
sbb
mov
sub
mov
(bad)
imul
(bad)
iret
and
(bad)
loopne
adc
fidivr
and
dec
push
imul
mov
or
dec
movs
sub
pop
int3
movs
lods
imul
sub
shl
sbb
inc
dec
jns
test
rcr
xlat
(bad)
ja
imul
imul
gs
outs
test
push
pop
or
pop
stc
(bad)
xlat
out
pop
and
sbb
xor
call
xor
sub
mov
test
mov
loope
xchg
adc
aam
jg
retf
out
cmp
int3
fiadd
dec
and
cwde
jo
add
inc
int3
jmp
push
dec
outs
mov
and
(bad)
test
mov
inc
mov
add
add
add
imul
(bad)
cs
xchg
xor
lds
dec
ds
iret
and
push
mov
imul
mov
es
dec
loope
push
jecxz
call
cmps
call
stos
mov
xchg
mov
sbb
mov
push
fcomip
jg
mov
mov
pop
inc
add
mov
(bad)
push
daa
and
lods
ret
aam
cli
add
jae
lds
scas
loopne
xlat
out
xchg
jmp
jl
jo
adc
aas
xchg
sbb
stos
adc
jg
cmps
xor
inc
rcl
mov
or
cmp
sahf
icebp
xchg
fwait
das
outs
outs
ja
out
les
sub
add
inc
and
sbb
jne
pop
add
dec
dec
cmp
mov
arpl
sub
je
popf
and
or
xchg
mov
fs
daa
lea
cli
sub
data16
xor
dec
sar
push
jge
into
mov
ja
mov
or
rol
mov
sbb
adc
jg
(bad)
leave
inc
imul
and
cmp
out
add
shl
jbe
pop
(bad)
mov
das
rol
sub
xor
repz
push
scas
xor
sbb
imul
test
loope
pop
sar
pop
or
test
aam
pop
mov
xchg
add
mov
push
xchg
sub
xlat
data16
add
(bad)
mov
lods
jmp
movs
outs
(bad)
push
add
xor
push
ins
(bad)
loop
mov
mov
leave
cmp
mov
mov
test
iret
xchg
push
dec
adc
xchg
sub
mov
jecxz
rcr
jbe
xlat
imul
mov
stc
mov
dec
retf
adc
imul
pop
aas
ret
ror
cmc
push
jmp
cmp
icebp
adc
add
mov
call
adc
das
in
(bad)
or
mov
xchg
pop
jae
jle
ror
mov
sbb
mov
push
cmp
mov
adc
test
pop
cs
aas
push
xchg
push
int3
xor
mov
inc
cmp
ror
loope
cmps
std
cmps
push
cmp
add
jge
in
fs
fcmovnbe
scas
ja
mov
inc
pop
nop
pop
jne
cmps
pushf
add
adc
sbb
pusha
scas
bound
retf
adc
test
je
neg
popf
sub
push
xchg
push
ds
push
adc
sbb
add
cli
jnp
mov
iret
test
sahf
cmps
dec
scas
xchg
cmp
inc
test
pop
lahf
sub
ins
(bad)
fisub
pop
jo
jo
lods
imul
je
sub
cmp
and
jns
jle
sub
add
ins
mov
jge
mov
sbb
ret
rol
cmp
sub
aam
mov
inc
enter
add
mov
xchg
jp
pop
push
dec
push
ret
jns
adc
jecxz
movs
call
mov
xor
(bad)
fist
and
dec
mov
cmp
pop
sbb
push
fiadd
mov
stos
adc
and
movs
cmp
pop
mov
jl
cmps
movs
push
fs
inc
sub
call
mov
fnstsw
aad
dec
xchg
and
push
into
mov
jns
sub
sbb
stc
add
mov
jae
and
push
adc
xor
ds
mov
cmps
test
mov
pushf
mov
push
aad
test
imul
pop
push
cmps
sbb
adc
loopne
sbb
adc
push
mov
(bad)
jp
push
outs
sub
retf
jecxz
into
rol
cdq
add
cwde
cdq
cwde
nop
and
scas
rol
stc
(bad)
sahf
enter
mov
xchg
lods
push
and
sub
movs
jl
mov
(bad)
jb
dec
cmps
sbb
aas
das
aas
sub
std
mov
aam
inc
mov
cmps
pop
(bad)
mov
jno
push
(bad)
mov
(bad)
xor
bound
mov
jge
xchg
mov
cmc
dec
out
and
in
lods
inc
hlt
movs
inc
inc
push
clc
jb
lock
and
mov
mov
retf
in
fnstcw
sbb
call
push
cmp
test
shl
add
inc
pop
(bad)
lods
mov
pop
movs
mov
fcomp
xchg
jg
jo
jno
inc
(bad)
scas
in
adc
push
jno
or
jbe
pop
shr
jns
fnstcw
shr
daa
add
addr16
mov
aas
outs
out
lahf
xor
ficomp
push
lahf
pusha
(bad)
scas
xchg
popf
sub
or
mov
inc
push
mov
mov
sbb
in
sub
in
bound
out
cs
js
push
enter
jge
in
jmp
dec
mov
not
hlt
call
push
sbb
imul
adc
adc
daa
dec
pop
cmp
sbb
scas
aam
mov
shl
xlat
cmp
loope
jbe
aam
add
pop
in
xchg
repnz
movs
sbb
push
xchg
les
mov
mov
sub
mov
adc
push
cli
adc
jg
ror
mov
mov
dec
sbb
lds
xor
or
sti
add
rcr
sbb
popf
jg
rcl
fstp
call
imul
out
(bad)
push
mov
xlat
dec
sub
stos
sub
xor
inc
and
outs
jle
icebp
outs
popa
js
jp
or
jns
cmps
adc
xor
loop
shl
sub
stc
pushf
fs
push
jge
jne
xor
adc
push
movs
and
imul
mov
sub
sbb
cmp
sbb
sti
push
ret
adc
xchg
dec
mov
mov
hlt
(bad)
lahf
push
test
push
xor
jno
repz
loope
movs
mov
push
xchg
xchg
xchg
sub
imul
or
fwait
scas
push
add
in
outs
call
mov
daa
xor
jge
inc
mov
jns
mov
cmp
test
fwait
and
sbb
mov
sub
mov
mov
and
sub
neg
sub
inc
add
ins
aam
lahf
in
push
mov
retf
sar
or
or
pop
inc
or
mov
sahf
jge
daa
test
and
jb
xor
stos
das
jb
aaa
inc
arpl
out
into
call
mov
and
stc
sqrtps
bnd
jae
push
or
pusha
or
xlat
cmps
xlat
daa
fstp
fwait
xor
ins
scas
xchg
daa
in
add
mov
mov
jp
test
and
sub
dec
adc
mov
or
inc
arpl
imul
fdiv
jne
xchg
push
jle
push
call
imul
fld
addr16
mov
fldenv
in
cmc
jmp
jne
rcl
xor
fdivr
mov
cmps
lahf
dec
dec
adc
sbb
push
push
cmp
sahf
adc
adc
imul
call
je
jmp
adc
xchg
jl
cli
movs
inc
cmc
push
pop
test
imul
mov
cmps
adc
xchg
adc
hlt
cmp
jo
stos
cmp
js
xchg
lods
mov
fnstenv
aas
xchg
scas
movs
mov
mov
jmp
mov
(bad)
mov
(bad)
imul
test
add
push
xchg
test
jae
test
or
mov
pop
lods
xchg
popf
scas
mov
mov
mov
(bad)
mov
mov
fwait
pop
pop
mov
inc
xlat
fsub
jae
outs
push
push
cli
(bad)
fistp
mov
mov
cmp
out
pop
aas
popf
imul
xlat
adc
sbb
cmp
loopne
inc
add
outs
push
ret
mov
inc
dec
(bad)
ret
fdivr
or
pusha
je
dec
(bad)
pop
sbb
lds
inc
mov
cmps
test
xlat
retf
sahf
pop
xor
popf
test
test
stos
sub
push
push
xchg
(bad)
xor
dec
gs
pop
enter
sub
add
push
fidivr
shr
xor
lods
add
ds
xor
cmp
ss
loop
movs
jns
and
lahf
scas
dec
push
fldenv
stos
push
stos
pushf
cmp
pop
movs
xchg
sahf
pop
and
lea
push
sub
cli
add
xchg
dec
adc
outs
and
push
push
push
test
sar
movs
lea
mov
movzx
push
mov
mov
push
push
data16
test
dec
es
shl
fisubr
sbb
cmp
mov
mov
or
js
sahf
xor
ret
xchg
push
call
pop
mov
stc
and
xor
pop
jl
rol
inc
imul
shl
fcom
loop
stos
add
dec
iret
push
mov
aad
jle
pop
dec
fisttp
jg
mov
dec
repnz
xor
dec
sbb
adc
add
add
dec
xchg
cmc
push
xlat
lods
imul
push
dec
iret
or
cmp
sbb
arpl
das
mov
push
in
pop
fnsave
iret
mov
dec
arpl
dec
in
sbb
imul
jecxz
inc
sbb
jno
std
pop
mov
xchg
std
les
or
adc
xlat
mov
movs
sub
adc
or
xor
xchg
rol
sbb
(bad)
adc
bound
xchg
rol
jl
mov
mov
pop
jmp
sub
inc
pop
out
xchg
adc
jns
aas
mov
int3
mov
push
dec
add
test
inc
jge
or
cmp
fxch
inc
adc
ret
outs
(bad)
inc
cmp
mov
stc
cmc
or
add
jg
loopne
loop
cmp
hlt
mov
dec
cld
sbb
sub
in
lock
dec
das
mov
inc
and
retf
cmc
call
jp
xchg
in
(bad)
arpl
je
int3
or
push
xchg
sti
cld
dec
dec
push
push
std
push
or
les
fcomi
dec
mov
neg
jmp
les
and
and
fsub
xchg
lods
loop
jle
push
sub
sub
hlt
leave
cmp
call
lods
(bad)
sbb
out
sbb
mov
test
add
pop
mov
es
jnp
mov
mov
pop
push
mov
inc
stc
cmp
xchg
fld
cmps
push
bound
les
jp
test
fsubr
outs
dec
pop
sahf
sub
inc
adc
jno
cmps
retf
push
pop
ss
and
call
dec
jns
outs
add
jle
pop
inc
pop
fisttp
xchg
call
mov
push
cli
stos
shr
hlt
mov
jnp
stos
push
add
test
aas
push
rcr
dec
mov
dec
pop
call
addr16
adc
sbb
cmp
stc
mov
dec
ss
jg
fs
mov
inc
mov
push
add
mov
idiv
mov
mov
push
fidiv
cmp
jl
rcl
cmp
sub
ret
sbb
movs
adc
lods
sub
push
mov
test
mov
ret
dec
aam
in
cwde
push
xor
inc
sub
pop
pop
inc
bound
arpl
aaa
neg
in
(bad)
out
mov
movs
pop
jbe
add
mov
dec
sub
ret
pop
add
fstp
push
fidiv
(bad)
push
xchg
mov
pop
cmps
xchg
and
arpl
mov
(bad)
(bad)
mov
out
call
push
(bad)
daa
mov
movs
sbb
pop
in
cmps
sbb
std
pop
popf
and
push
stos
jp
xchg
jns
sub
xchg
inc
in
cmp
stos
and
test
lock
xchg
sbb
push
sub
xor
movs
jle
lahf
push
mov
dec
call
out
push
mov
pop
(bad)
push
stos
push
aam
or
sbb
les
(bad)
dec
xchg
sbb
xchg
cmp
or
lods
sub
push
shr
(bad)
sar
dec
das
jle
fwait
jle
pop
xchg
push
in
sbb
mov
jnp
xchg
pop
dec
or
xor
add
loope
pop
imul
retf
fwait
jle
push
dec
add
sub
(bad)
cmps
push
std
aam
pop
movs
(bad)
rol
or
fimul
dec
fucomi
rcr
mov
inc
sub
mov
push
inc
xlat
test
aas
cmps
aas
icebp
ds
and
sbb
repz
sbb
pop
inc
add
jmp
cmc
addr16
jmp
and
mov
mov
ins
dec
add
xchg
pop
dec
clc
daa
dec
push
jecxz
fisub
inc
ins
or
movs
in
pop
cmp
ret
xlat
lods
dec
mov
sbb
add
push
cld
jmp
dec
xor
xor
sbb
adc
mov
mov
mov
cmp
popf
or
fisttp
pop
mov
ja
xor
pop
enter
sbb
cmp
repz
mov
cmp
or
stc
push
push
and
in
fwait
and
into
push
push
(bad)
dec
fcomp
push
ja
xor
lea
dec
push
push
in
push
xlat
cli
por
std
sub
test
ins
mov
or
sbb
inc
fist
or
adc
sbb
push
push
data16
dec
jmp
test
nop
inc
mov
push
nop
mov
dec
cmp
adc
mov
rcl
(bad)
adc
rcl
mov
call
sub
xchg
inc
xchg
lods
ret
sub
and
mov
sbb
stos
inc
aam
dec
inc
jmp
es
jo
pop
dec
inc
loop
mov
xchg
repnz
or
popf
outs
and
mov
lock
push
mov
scas
inc
lahf
pop
mov
pop
xchg
stos
mov
xchg
dec
(bad)
xchg
sbb
xchg
sbb
in
jmp
iret
mov
xor
pop
push
mov
mov
push
xchg
pushf
test
add
dec
test
dec
lods
dec
leave
jecxz
cmp
bound
lods
mov
inc
dec
icebp
pushf
cmps
fild
sub
add
stos
sub
icebp
(bad)
repz
jnp
in
mov
dec
fcmovne
jl
sbb
cmp
fiadd
stc
add
ja
xor
xor
cmp
in
push
or
mov
addr16
bound
adc
arpl
xor
aad
xor
xor
pop
sahf
jne
std
jge
idiv
pop
ins
xchg
ror
adc
js
or
inc
dec
popf
(bad)
ins
or
fdiv
and
scas
jb
scas
or
icebp
gs
cmp
mov
and
lea
adc
outs
pop
pop
fisttp
in
dec
xchg
mov
bound
or
xchg
(bad)
iret
cmp
imul
mov
stos
mov
jo
scas
push
sbb
jl
out
sub
mov
pusha
test
or
or
add
xchg
pop
pop
rcl
mov
jo
push
mov
inc
mov
mov
dec
sub
xchg
scas
adc
lds
jecxz
sbb
sub
sub
retf
xchg
inc
rcl
sub
or
add
sbb
sti
dec
add
sahf
lods
aas
das
mov
adc
(bad)
xchg
(bad)
repz
jae
lods
adc
cli
pop
add
retf
lea
lahf
adc
and
xchg
test
dec
mov
mov
aad
push
(bad)
push
mov
push
in
test
dec
jl
leave
cmp
data16
jns
and
push
cmp
fidiv
aas
jmp
and
ins
bound
jb
xchg
repnz
jge
jge
sub
(bad)
lods
test
jle
jno
(bad)
cs
test
mov
ins
push
mov
sub
stos
add
xor
fcmovbe
mov
xor
jmp
xor
add
cs
mov
cmps
mov
jo
xor
xlat
inc
and
mov
dec
mov
psllq
fist
push
test
movs
or
xchg
push
jl
or
xchg
jnp
jne
mov
mov
repnz
or
lahf
gs
inc
div
(bad)
cmp
dec
xor
call
sbb
in
ds
mov
xchg
ror
and
addr16
stc
jo
or
aaa
fdiv
leave
ss
and
sub
bnd
je
mov
imul
push
push
mov
dec
js
xor
bound
pop
add
aas
xlat
fsubr
loop
ror
sub
sub
xchg
shr
outs
mov
cli
sub
sbb
pop
in
(bad)
dec
nop
hlt
bound
ror
test
leave
scas
int3
xchg
dec
or
mov
test
fld
mov
dec
jno
aad
push
mov
ds
aam
shl
test
jg
cmc
gs
mov
movs
dec
stos
xlat
call
in
pop
and
or
mov
push
adc
and
into
add
inc
dec
(bad)
or
xlat
movs
pop
call
jmp
iret
mov
fiadd
mov
fwait
jo
adc
xchg
cmp
mov
mov
or
lea
inc
jmp
int3
sahf
fsubrp
cs
jmp
mov
sub
jmp
std
(bad)
inc
cs
mov
outs
rcr
push
mov
add
es
cld
(bad)
in
cli
jl
lock
es
xchg
addr16
rcl
int3
jne
mov
and
rol
fadd
test
jne
jb
inc
ror
and
xor
push
pop
or
sub
(bad)
mov
out
sbb
add
je
stos
fimul
pop
adc
add
dec
dec
out
dec
cli
in
cmp
shr
pop
(bad)
pop
mov
add
cmps
cmp
hlt
mov
or
cld
jnp
sbb
ins
cs
push
movs
pop
call
push
xchg
pop
cmp
nop
add
jae
pop
scas
fsubp
add
inc
dec
mov
mov
or
xchg
call
push
fisttp
js
scas
dec
hlt
hlt
outs
lock
dec
mov
fisub
add
fdivr
jmp
les
dec
push
movs
push
nop
fdiv
add
fidivr
xchg
sub
sub
mov
adc
xor
mov
cmp
inc
sub
aam
(bad)
sbb
push
xchg
mov
dec
and
inc
stc
dec
jp
xchg
pusha
(bad)
xlat
push
(bad)
imul
cmp
inc
cmp
jb
out
cmp
inc
(bad)
imul
fwait
add
add
jl
or
or
sub
aad
scas
dec
lock
xor
dec
add
xor
dec
or
dec
je
test
jmp
sahf
and
xchg
retf
mov
leave
push
scas
sub
inc
adc
xchg
jmp
loopne
or
xchg
imul
shl
jno
pusha
arpl
lahf
push
fidivr
stos
jmp
sub
adc
sahf
pop
repnz
or
js
mov
jb
(bad)
mov
fcmovne
out
add
mov
pushf
push
stos
xchg
sub
inc
mov
mov
dec
(bad)
fxch
loop
pushf
sbb
or
movs
jp
pop
repnz
jecxz
icebp
mov
(bad)
rcl
(bad)
push
mov
leave
adc
stos
lods
push
dec
scas
sbb
push
xchg
sbb
or
sti
jle
outs
out
(bad)
dec
xchg
or
jmp
add
add
cmp
fwait
inc
bnd
lods
imul
mov
push
dec
lods
and
push
dec
mov
xor
ins
loope
adc
dec
push
ins
sub
rol
and
xor
jne
jb
dec
cdq
dec
cli
sti
jp
xlat
je
mov
pop
ret
int3
mov
add
pop
xchg
nop
dec
sbb
mov
movs
mov
arpl
mov
push
or
loopne
sbb
jmp
jae
pop
mov
iret
fcomp
jecxz
add
mov
sbb
and
call
mov
xlat
sbb
mov
and
push
push
xchg
sbb
add
adc
aad
inc
not
jmp
js
xchg
inc
lahf
inc
push
and
sar
push
jl
out
sbb
aad
push
outs
lea
jmp
dec
stc
popf
call
fdiv
cs
repnz
sub
sti
sbb
jnp
in
mov
inc
add
sub
sub
adc
add
push
retf
mov
pop
mov
sbb
repz
(bad)
inc
dec
cmp
mov
imul
(bad)
jl
push
mov
mov
jge
dec
ins
in
lds
push
inc
jge
inc
pop
mov
sti
sahf
idiv
popa
fidiv
and
mov
je
mov
or
ret
or
mov
dec
int3
pop
(bad)
int
adc
add
loopne
push
add
test
call
scas
push
adc
push
push
sar
pop
push
dec
and
cli
mov
ret
jno
jns
mov
fisubr
outs
dec
lea
dec
jl
adc
cdq
call
repnz
icebp
gs
stc
stos
pushf
adc
into
push
jp
ss
xor
clc
ficomp
pop
xchg
mov
jo
mov
dec
popf
inc
xchg
int
in
and
cmp
push
xlat
aam
in
int
enter
sbb
sub
pop
pop
js
out
cdq
mov
lea
add
mov
dec
add
add
mov
inc
pop
ss
(bad)
call
jnp
(bad)
adc
xor
imul
push
xchg
jp
mov
add
mov
push
dec
sbb
dec
adc
daa
rep
jmp
sub
add
push
movs
push
push
mov
sbb
push
pop
out
inc
mov
adc
dec
mov
fistp
fcmovnb
sbb
(bad)
or
lea
nop
pop
sbb
adc
movs
and
push
lds
add
icebp
mov
dec
(bad)
rol
fmul
xor
add
mov
in
arpl
xchg
jmp
mov
test
mov
add
cmp
xor
xchg
sbb
loope
mov
pop
pop
movs
fs
pop
or
inc
je
or
pop
adc
mov
cmp
push
les
les
cmc
sbb
jmp
ds
pop
out
(bad)
pop
leave
retf
int3
repz
inc
push
test
sub
fstp
jge
inc
pop
outs
add
inc
jbe
cmp
mov
mov
sbb
clc
shl
jmp
fcomp
add
or
(bad)
xor
mov
cli
or
test
enter
addr16
pop
les
inc
retf
push
outs
mov
loopne
push
pop
lea
mov
mov
pop
and
(bad)
xchg
inc
call
inc
mov
fdivr
jno
mov
pop
loopne
push
aam
jecxz
rcr
mov
xchg
mov
xchg
cmp
repnz
jp
(bad)
sub
popf
fwait
(bad)
xchg
xor
je
mov
push
push
mov
lea
ja
add
aam
mov
leave
shl
aaa
mov
xchg
mov
test
dec
add
jp
sti
lds
ror
stos
sbb
imul
pop
aam
and
sub
neg
cmps
outs
pop
sbb
xchg
rcl
(bad)
scas
lahf
and
inc
or
adc
(bad)
jbe
or
mov
sbb
into
mov
or
sub
xchg
add
int
int
pop
xchg
retf
cmp
mov
dec
scas
fld
xchg
sbb
push
aad
call
outs
fiadd
(bad)
(bad)
sub
out
jno
inc
ins
in
add
aam
cli
leave
add
inc
lds
stc
out
int
jnp
mov
mov
jo
mov
inc
in
jmp
imul
or
pop
aad
imul
and
aam
ds
inc
mov
mov
add
push
fidivr
shr
(bad)
cs
mov
ror
mov
xor
pop
xchg
enter
lea
stos
ss
jecxz
sti
jge
lods
cwde
(bad)
enter
fdiv
adc
lock
cli
inc
sub
or
xor
std
mov
stos
cmp
lahf
pop
cdq
cmp
mov
add
and
sbb
dec
ds
scas
dec
scas
jno
and
jbe
dec
jmp
pop
fwait
ret
mov
popa
and
dec
(bad)
mov
into
sbb
push
popf
mov
cmps
mov
dec
inc
inc
inc
push
mov
xchg
imul
xchg
gs
push
pusha
into
mov
add
icebp
add
or
jbe
rol
mov
xlat
test
jmp
pop
sar
xchg
cmp
bound
(bad)
dec
aad
rcl
dec
test
(bad)
out
lock
xchg
cmps
cdq
gs
add
adc
jge
inc
(bad)
cs
sbb
xor
jno
sar
sbb
nop
fcmovnb
jae
sbb
push
inc
jp
cmp
pop
jmp
enter
clc
leave
icebp
xchg
and
sbb
mov
add
enter
dec
mov
or
fist
icebp
bound
push
sub
or
push
inc
or
test
movs
jbe
sub
into
pop
lds
push
test
mov
(bad)
sub
mov
icebp
push
dec
dec
stos
or
bound
xchg
xchg
cwde
mov
mov
scas
jmp
xchg
nop
pop
std
dec
mov
xor
imul
or
mov
inc
mov
add
xor
lea
jae
addr16
add
sbb
jecxz
sub
mov
pushf
push
push
rol
sbb
pop
or
sub
mov
push
cmp
out
jae
into
push
std
mov
test
sbb
mov
ret
pop
ins
inc
ss
mov
or
lahf
add
cmps
add
xor
adc
pop
xor
popf
arpl
nop
and
dec
call
icebp
pop
rcl
iret
mov
fsubr
add
bound
ficomp
call
mov
imul
mov
pop
arpl
jb
(bad)
jmp
jno
rcr
cmps
mov
push
jmp
mov
sbb
sbb
(bad)
in
lods
je
lds
test
pop
sbb
jle
lock
ficomp
adc
pushf
fisub
hlt
pop
in
add
jmp
push
or
mov
loopne
dec
je
lock
rcr
jp
aad
daa
retf
std
pop
lahf
repz
test
bound
xchg
dec
xlat
lea
fidivr
mov
mov
cmp
xlat
inc
aad
ins
in
xlat
dec
push
mov
js
add
pushf
neg
sub
dec
gs
call
mov
out
inc
not
jae
mov
outs
xor
sahf
rol
xlat
js
or
loopne
xchg
(bad)
call
sbb
pop
mov
outs
iret
push
ds
cmps
cdq
xchg
push
jp
inc
loop
inc
je
or
xchg
push
mov
jmp
fsubr
aad
aaa
and
push
cmps
dec
add
out
mov
cmps
stos
xchg
cwde
pop
sahf
loopne
cmp
mov
pop
in
sbb
jb
sub
xchg
rcl
adc
adc
popa
iret
cmp
inc
leave
pop
outs
gs
adc
dec
pop
xor
and
and
dec
test
jp
add
sub
loope
sahf
es
mov
push
or
retf
clc
push
adc
or
shl
jmp
movs
push
imul
cmps
add
imul
cmp
push
jge
add
repnz
push
inc
pop
push
or
sub
fstp
fcomp
shl
and
mov
retf
clc
mov
enter
sbb
jp
in
jmp
pop
mov
or
int3
adc
push
cmp
inc
inc
and
sub
loopne
(bad)
jbe
fs
adc
loop
test
lea
scas
jecxz
pop
mov
dec
mov
imul
mov
pop
push
xor
mov
rol
(bad)
ins
jo
gs
inc
out
arpl
xor
adc
(bad)
repz
cmps
dec
jbe
or
movs
cli
js
bound
add
jmp
xchg
sar
shl
cmps
sar
cwde
adc
sbb
mov
xchg
nop
lds
jge
mov
mov
loop
clc
js
push
cld
add
sub
xchg
mov
mov
iret
bnd
dec
xchg
sbb
sub
iret
mov
mov
enter
mov
xor
test
add
xor
inc
in
div
sbb
aad
jne
out
jnp
mov
add
dec
(bad)
dec
push
lea
jge
dec
ins
cmp
aam
in
mov
nop
nop
(bad)
les
pop
xchg
jmp
add
push
sbb
pushf
stos
mov
ret
repnz
ds
xor
mov
ds
test
aad
cld
jne
cmp
cmps
test
and
dec
sbb
iret
sub
pop
pop
or
inc
pop
js
mov
mov
dec
push
xchg
add
or
xchg
sbb
add
fsubr
mov
add
(bad)
mov
mov
aam
addr16
or
push
(bad)
sbb
nop
in
stos
arpl
repnz
popa
or
mov
push
or
sub
dec
xor
popa
dec
lahf
cmp
pop
fcmovnbe
imul
and
sub
imul
pop
sbb
imul
sub
cmc
adc
adc
push
push
les
push
dec
push
inc
push
jae
ins
mov
jo
aad
daa
dec
test
psubd
imul
dec
sub
stc
(bad)
mov
rcl
jmp
repz
inc
or
(bad)
or
inc
lods
movs
fmulp
mov
jb
or
in
xchg
(bad)
dec
mov
loop
scas
pop
dec
bswap
je
mov
dec
imul
and
iret
cwde
mov
sahf
mov
loop
lods
fcom
out
fmul
sti
shl
pop
or
fstp
scas
inc
dec
add
out
(bad)
lods
dec
or
push
(bad)
in
dec
sahf
iret
call
in
retf
cdq
js
mov
nop
inc
std
daa
push
and
fcmove
pop
cmp
ins
ja
mov
lea
push
adc
pop
adc
movs
push
retf
(bad)
dec
pop
call
adc
aas
nop
push
dec
rol
sub
scas
cmps
call
out
pushf
lods
cmp
les
mov
lock
dec
(bad)
mov
and
mov
jl
or
cmps
(bad)
xchg
dec
aas
xchg
fcmovnbe
aad
mov
enter
into
adc
jecxz
sub
dec
(bad)
sbb
(bad)
and
daa
(bad)
scas
mov
mov
push
xchg
jne
pop
mov
jo
in
cmp
push
sub
pop
arpl
mov
icebp
(bad)
pop
push
sub
lahf
cmc
jno
inc
and
mov
cmp
or
cld
cmps
test
sub
jmp
jae
scas
jns
(bad)
lds
or
add
jae
xchg
scas
inc
xchg
js
jno
sbb
loopne
fs
jb
pop
int3
jl
jno
jo
iret
dec
lods
leave
xchg
mov
xchg
pop
sbb
or
(bad)
aaa
add
cld
pushf
mov
psrlq
inc
mov
xchg
push
dec
push
inc
daa
xor
adc
add
jp
jae
fnstenv
ret
mov
jo
(bad)
adc
(bad)
mov
outs
sahf
std
fnsave
push
aad
cmp
xor
pop
jp
sub
int
add
cmp
scas
push
outs
dec
and
add
xor
lahf
sub
pop
inc
repz
imul
sti
jp
repz
in
dec
xchg
lock
arpl
xchg
xchg
push
sub
push
cmp
jp
jo
addr16
popf
push
bound
mov
outs
not
call
mov
ds
loopne
rcl
mov
sub
sub
dec
mov
int3
retf
or
sub
inc
aaa
in
mov
add
ret
rcr
leave
and
call
(bad)
inc
call
loop
dec
add
xlat
daa
aas
and
pop
sub
dec
inc
mov
call
push
das
mov
fwait
lea
xchg
mov
add
inc
sub
les
sub
sbb
adc
sbb
mov
fld
fsub
push
aad
or
and
adc
mov
cmp
loope
into
push
rol
stos
lods
sub
pop
movs
adc
inc
sbb
sub
sbb
mov
mov
(bad)
jne
in
neg
aas
mov
movzx
mov
jmp
aad
data16
push
cmp
push
add
mov
push
retf
pop
test
xchg
retf
push
mov
dec
je
ror
jno
push
repz
je
out
(bad)
ss
(bad)
mov
mov
or
jge
inc
scas
jb
imul
lahf
inc
jnp
dec
in
iret
sbb
xchg
into
mov
test
push
sbb
pop
imul
daa
test
mov
add
jge
xchg
out
in
daa
xor
arpl
push
inc
jne
push
sbb
or
bound
outs
adc
(bad)
push
enter
movntq
out
fild
cmc
push
mov
imul
and
lods
stc
adc
and
dec
xor
xchg
mov
add
add
fs
mov
comiss
repnz
arpl
call
cmps
pop
xchg
dec
call
or
(bad)
int3
xchg
mov
jle
and
in
jge
in
mov
shl
mov
sbb
mov
js
add
pop
call
sbb
dec
icebp
jb
inc
xchg
inc
mov
aam
push
push
xchg
dec
(bad)
out
cmps
add
or
xor
fs
sahf
inc
mov
sub
inc
dec
sbb
sti
pop
bswap
test
xlat
mov
enter
push
add
out
retf
repnz
(bad)
xlat
mov
sub
sbb
jo
call
mov
jecxz
test
(bad)
inc
add
push
into
sub
push
and
aad
test
dec
ror
or
pop
cmps
jb
mov
call
push
pop
pop
(bad)
(bad)
sbb
push
sub
aam
xchg
out
push
cmp
push
or
and
fwait
imul
ret
mov
push
pop
push
add
and
cdq
sbb
and
sub
stc
push
test
fsubr
(bad)
or
jmp
jbe
jmp
in
leave
sub
sub
test
sub
cmp
mov
imul
dec
push
and
jb
das
mov
add
sbb
xchg
adc
(bad)
lods
(bad)
lea
dec
pushf
ss
rol
sbb
pop
ror
cmp
retf
xor
shl
add
pop
rol
aaa
pop
push
in
cmp
xchg
mov
mov
stos
add
js
sahf
xchg
outs
retf
push
cld
pushw
mov
cmps
aaa
add
pop
cmp
sbb
dec
arpl
ret
and
js
cli
or
jge
in
mov
enter
ffree
mov
sbb
sahf
and
aad
cmp
jl
cmps
xchg
jmp
test
std
push
call
sbb
cdq
push
test
push
mov
inc
aas
pop
imul
fadd
mov
sub
add
inc
jle
imul
mov
xor
test
in
(bad)
pop
xchg
repnz
pop
xor
push
leave
dec
rcl
shl
xor
dec
push
dec
or
mov
jecxz
fstsw
or
loope
shr
mov
(bad)
ss
test
add
(bad)
sub
jmp
cmps
adc
dec
iret
add
loop
adc
dec
push
jp
cwde
test
or
mov
inc
xchg
sub
outs
lea
sbb
sub
cmp
ins
mov
and
xor
mov
jp
pop
mov
stos
and
scas
mov
loop
adc
mov
mov
imul
add
mov
mov
mov
dec
cmc
jg
hlt
sbb
dec
mov
ror
(bad)
push
xchg
cmc
sub
in
add
js
cdq
or
pop
xchg
mov
rcl
aam
jle
pop
xchg
cmp
mov
add
mov
jmp
push
(bad)
jecxz
mov
sbb
int
rol
cmp
jne
inc
xchg
in
add
jg
bound
jecxz
aad
lods
or
ror
inc
jp
leave
movs
movs
mov
bound
adc
loopne
fld
sbb
jp
retf
cmp
sahf
inc
or
jne
and
cld
inc
hlt
adc
sbb
dec
sub
push
mov
in
bnd
sbb
sub
cs
jno
pop
inc
in
mov
mov
add
adc
jno
mov
sbb
ds
mov
dec
gs
(bad)
and
sub
rol
jno
out
sub
push
jbe
retf
sbb
pop
pop
fdivr
and
(bad)
xchg
cmc
es
push
sub
shl
rol
mov
fist
dec
shl
sub
dec
pop
push
cmp
or
shr
push
js
pop
mov
jge
in
retf
ins
shl
loop
cli
mov
js
adc
pop
das
mov
or
(bad)
xchg
cmp
ins
or
mov
fwait
inc
dec
adc
cmps
push
fwait
sti
ss
repnz
arpl
pop
jo
xchg
cli
lods
retf
lock
or
cmp
xor
popf
mov
lock
ss
mov
pop
and
cmps
ret
test
dec
outs
stos
in
pop
adc
cmp
pop
add
aas
outs
rol
sbb
mov
add
jecxz
retf
lock
adc
adc
aaa
xchg
scas
(bad)
xor
sbb
and
pop
xchg
into
dec
sub
or
fsubr
fwait
nop
add
push
cld
dec
mov
add
in
mov
add
je
test
fnstcw
popa
mov
push
jmp
mov
mov
pop
popf
inc
mov
aad
cmps
inc
xor
jg
jecxz
leave
aaa
inc
ins
in
xchg
push
mov
mov
push
jae
(bad)
scas
(bad)
test
shl
inc
lods
or
and
icebp
jmp
mov
in
lds
xchg
dec
nop
(bad)
dec
dec
and
(bad)
retf
shl
sbb
pop
sti
inc
and
retf
mov
cmp
pop
sbb
(bad)
mov
dec
in
push
pop
mov
hlt
sub
dec
not
jbe
int3
cmp
addr16
leave
lods
push
scas
cs
sbb
push
xchg
cmps
scas
sub
xbegin
ja
dec
mov
out
pop
in
jb
xchg
retf
dec
or
inc
stos
or
stos
push
imul
pop
fidivr
test
jmp
xor
add
(bad)
mov
aam
sbb
adc
and
sbb
mov
xchg
pop
jge
mov
fisubr
jle
xchg
jo
and
stos
cmp
push
inc
and
xchg
mov
inc
push
inc
cmc
not
jae
iret
iret
cmp
bound
xor
push
dec
add
adc
jo
call
arpl
jg
mov
jg
cmp
lods
dec
and
sbb
mov
add
lock
sub
push
popa
mov
jecxz
push
push
adc
jne
dec
xchg
or
dec
nop
fs
dec
sub
xor
cs
sub
cmp
mov
loopne
sbb
xchg
retf
jno
push
cmp
cmp
xchg
add
mov
movs
jmp
neg
mov
stos
push
mov
push
push
inc
xchg
sub
inc
pop
shr
xchg
in
xchg
test
fs
pop
sbb
xchg
pop
dec
inc
push
add
cmp
cmp
adc
movs
dec
add
ret
pop
and
xchg
nop
jae
icebp
scas
dec
dec
ins
in
push
sub
push
mov
mov
jmp
repnz
movs
imul
xchg
cmc
mov
inc
add
jmp
test
and
dec
and
adc
mov
jns
imul
aad
xor
retf
xchg
sub
xor
imul
in
add
fdivr
popa
jbe
cmp
shr
add
jb
pop
ds
mov
pop
fst
test
(bad)
in
popf
or
or
add
icebp
movs
xchg
sub
jg
enter
loope
cmp
and
in
ret
in
cmp
mov
xchg
inc
jg
cli
mov
das
mov
and
shl
(bad)
sub
xchg
and
fisub
adc
vmptrld
scas
into
push
(bad)
dec
cs
test
mov
cmc
test
pop
(bad)
fcmovbe
enter
mov
push
in
hlt
lods
es
xchg
push
sahf
dec
jmp
sub
or
add
xchg
les
shl
movs
add
xchg
adc
mov
push
xor
jno
mov
je
leave
sub
sub
lods
mov
or
xor
sub
push
cli
sti
adc
xor
adc
add
mov
push
pop
push
dec
jg
outs
inc
retf
and
jg
add
scas
(bad)
aad
test
into
mov
push
adc
mov
inc
xor
cli
sbb
xor
out
fsub
dec
jb
mov
gs
retf
or
ds
xchg
pusha
pop
ds
xchg
in
dec
rol
in
bound
inc
cmps
inc
movs
mov
cs
add
add
jmp
sar
adc
aaa
pop
dec
outs
daa
mov
or
mov
jl
iret
test
inc
or
add
ret
mov
addr16
hlt
call
hlt
retf
push
loopne
mov
xor
jbe
inc
jbe
movs
lods
sti
pop
dec
out
and
push
mov
inc
push
pop
xchg
add
add
inc
mov
stos
xchg
add
les
add
push
xchg
sti
imul
xor
scas
jle
shl
lods
out
fldcw
xlat
das
mov
pop
cmp
out
xchg
rol
test
xor
and
pop
jmp
sbb
push
or
daa
pop
scas
lods
push
add
push
jo
cmp
ins
cmp
xchg
call
repnz
call
push
or
stos
inc
or
or
pop
inc
je
daa
push
mov
cmps
(bad)
out
mov
add
xor
(bad)
sahf
test
mov
mov
ret
test
mov
ror
xlat
movs
fcom
jns
push
dec
lahf
and
mul
jg
in
cmp
xor
pushf
(bad)
cmp
sbb
pop
nop
loope
arpl
inc
pusha
int3
stos
test
and
cmp
in
inc
sar
xchg
or
shr
adc
adc
lahf
inc
sbb
xor
add
jae
push
sub
inc
dec
dec
and
and
mov
add
test
xlat
or
inc
and
test
push
pusha
push
sahf
pusha
xchg
ret
in
stc
shl
jb
call
mov
jl
lock
es
mov
xor
data16
aam
push
dec
or
es
(bad)
loop
test
push
xchg
push
imul
fcomi
inc
ins
mov
xchg
xor
push
jl
enter
inc
or
shr
frstor
xchg
xor
popa
fld
nop
inc
or
rcpps
fwait
lahf
out
add
adc
test
shl
adc
adc
add
test
lock
clc
in
scas
imul
stos
lock
push
push
mov
stos
sub
dec
add
and
cmp
xor
dec
test
repz
movs
sub
sti
test
aas
and
jge
in
pusha
rol
sahf
and
ds
(bad)
clc
dec
fimul
iret
push
add
jle
inc
push
inc
aas
aam
sub
aad
cmc
out
fbld
xor
jno
mov
cmps
cmps
sub
cmps
xor
adc
lds
and
in
ret
aaa
jo
call
xor
adc
jae
cs
cdq
cld
cli
cdq
mov
inc
int3
dec
aad
je
test
and
icebp
mov
sub
outs
add
retf
dec
cmp
shl
push
xchg
jmp
shl
imul
cdq
aad
gs
std
ret
add
mov
cld
std
cmp
xchg
fld
xor
jo
loope
sahf
dec
push
jmp
aad
adc
arpl
stos
lahf
sub
popf
or
nop
mov
inc
push
xor
mov
pop
arpl
loop
loope
xchg
scas
push
push
iret
sbb
call
push
sub
ficomp
nop
retf
loope
or
inc
dec
and
imul
lock
out
add
or
int
push
movs
jle
xlat
jnp
das
push
pop
sub
lods
xor
xor
xor
leave
adc
inc
sbb
imul
ret
(bad)
fwait
fwait
icebp
out
mov
dec
xchg
mov
fiadd
mov
ins
mov
sbb
add
arpl
in
pop
cmp
movs
(bad)
fiadd
test
stos
dec
mov
dec
sub
lods
jb
lock
bound
loope
or
aaa
fsub
xchg
fldcw
or
and
mov
push
xchg
movs
adc
rcr
add
jg
pop
dec
jge
xor
xor
(bad)
aad
not
push
mov
jne
test
lock
arpl
scas
cmc
ds
or
pop
mov
cmps
jno
push
jl
iret
cdq
and
xchg
mov
pop
aaa
lods
lea
or
inc
add
sbb
gs
sbb
pop
xchg
mov
sub
pop
or
add
clc
adc
jae
movs
jmp
iret
xor
or
sbb
data16
comiss
cli
hlt
xor
cmp
jmp
cmp
jns
push
pop
push
xchg
mov
dec
lods
pop
in
mov
popa
in
btc
sbb
push
mov
enter
popf
jp
out
call
xchg
jecxz
mov
loopne
iret
loopne
andnps
aam
sub
sbb
cdq
cdq
fdiv
shr
ret
sbb
sbb
fistp
pop
mov
inc
push
and
or
push
mov
xor
call
cdq
pop
pop
std
and
sbb
inc
sahf
adc
mov
arpl
dec
dec
push
sti
dec
or
push
lahf
push
mov
mov
sub
aas
inc
xchg
dec
xchg
inc
mov
cli
stos
xor
jno
ja
inc
pop
jae
jno
push
adc
fwait
xchg
mov
jo
and
add
sbb
ror
movs
test
dec
cld
movs
or
je
and
test
outs
dec
aad
(bad)
inc
add
or
nop
and
mov
or
add
or
es
lds
pop
and
mov
in
mov
scas
xchg
dec
js
shr
call
sub
test
inc
mov
enter
(bad)
in
iret
shr
in
xchg
repnz
lods
pusha
sub
jl
add
test
dec
daa
xor
stos
inc
jo
js
in
(bad)
jge
mov
xchg
adc
mov
jno
sub
mov
sahf
jne
cld
jge
fisub
add
sub
sbb
push
test
or
mov
aam
js
push
jg
std
pop
fwait
pop
mov
cwde
adc
cmp
ins
and
add
iret
mov
ins
xchg
push
nop
jmp
sbb
scas
xor
(bad)
movs
pop
sbb
dec
pushf
out
push
retf
in
repnz
dec
push
fldcw
rcl
stos
xor
pusha
pop
xor
pop
adc
push
xchg
aam
rcr
icebp
out
lock
ins
xor
sbb
clc
push
mov
loope
xchg
inc
sbb
iret
out
lock
jp
loop
es
push
gs
adc
dec
cwde
mov
push
inc
pop
fisub
pop
scas
pop
fadd
lahf
dec
xor
mov
int
dec
neg
and
xchg
int3
jecxz
cmp
outs
cmp
mov
push
aad
push
repnz
ins
mov
loope
arpl
jne
sub
lahf
scas
ds
pop
xchg
or
sbb
pop
mov
sar
adc
cwde
out
fldcw
popa
scas
mov
out
add
aas
int
or
sub
call
adc
nop
sbb
jmp
xchg
mov
and
xor
pop
dec
stc
jne
fstp
icebp
mov
cmps
xchg
xor
sub
retf
push
mov
movs
mov
push
mov
leave
sbb
xor
mov
sahf
add
jle
mov
sbb
add
jne
rcr
stc
push
mov
pop
push
sbb
pop
cmps
pop
push
cmps
push
ret
or
cmp
mov
lods
call
sub
addr16
inc
adc
rol
push
movs
test
sub
es
cmp
cwde
(bad)
push
push
lahf
addr16
and
shl
loope
into
shl
stc
sbb
test
add
or
fucom
dec
xor
dec
sbb
xlat
dec
jmp
lods
shrd
and
adc
fidiv
add
jecxz
adc
stc
jg
rcl
jb
ss
shl
lds
dec
xchg
iret
cmp
mov
jecxz
mov
cdq
ret
mov
xor
jne
sbb
inc
mov
xor
hlt
jmp
or
loop
inc
dec
pop
(bad)
or
and
lock
pop
xchg
sub
cmp
mov
jns
pop
inc
movs
jb
cmp
jnp
xor
dec
test
mov
aam
or
add
xor
inc
push
push
pushf
sbb
lods
mov
imul
dec
mov
mov
pop
jmp
pop
fisubr
jecxz
push
mov
push
mov
(bad)
sbb
sub
lea
cmps
push
pop
pop
lods
lods
jnp
fimul
loope
inc
cmc
mov
push
lock
pop
test
rol
cmp
push
mov
(bad)
xor
and
(bad)
xchg
or
gs
push
and
jge
and
test
dec
jno
adc
ficom
lea
aad
in
add
call
jge
xchg
push
xor
inc
jno
int
sahf
xor
test
mov
jne
(bad)
dec
mov
add
mov
shl
sub
mov
hlt
loop
sub
icebp
xor
and
ret
lahf
push
(bad)
pop
mov
pop
out
enter
leave
push
jo
adc
and
add
test
or
dec
aaa
mov
outs
and
mov
daa
std
call
fsubr
adc
inc
movs
jb
js
mov
xchg
push
in
dec
inc
sub
fs
dec
adc
lods
mov
test
aas
(bad)
or
xchg
mov
test
jl
shl
push
inc
sub
cmps
mov
pop
xchg
xchg
jns
sub
jmp
lods
imul
cmp
inc
mov
sbb
lahf
jmp
cmp
cld
cmp
xor
(bad)
push
sbb
push
jo
lds
cli
add
hlt
push
mov
pusha
or
push
cmp
or
adc
(bad)
sbb
dec
push
test
aad
and
cli
dec
or
pusha
stos
mov
add
mov
pop
push
push
push
iret
les
sub
jecxz
mov
mov
mov
mov
push
rol
xchg
fimul
add
xchg
mov
es
mov
cmc
mov
call
sub
mov
das
sbb
dec
sbb
xchg
cmp
test
push
xchg
dec
dec
xchg
shr
aad
fiadd
adc
loopne
add
pop
inc
dec
jo
(bad)
xchg
push
lods
inc
mov
mov
jle
adc
movs
sahf
mov
imul
test
mov
int3
dec
cmp
pop
xchg
inc
and
add
and
adc
js
sub
lock
push
jne
pop
aam
hlt
xchg
loop
mov
lods
dec
cmp
sbb
es
jno
cmp
icebp
rep
mov
ins
mov
fdivr
iret
push
jmp
popf
fs
jecxz
clc
cld
mov
sub
mov
push
dec
retf
cmp
out
pop
and
add
jge
pop
or
pop
and
or
push
cmps
push
ja
sti
popa
retf
sub
pop
mov
pop
sub
sbb
rcl
outs
mov
shl
cli
les
cld
jmp
and
mov
mov
scas
or
dec
pop
xchg
mov
into
dec
rcl
imul
int
jae
iret
into
push
bound
ins
ja
mov
jp
adc
cwde
hlt
jmp
ja
fbstp
out
in
movs
lods
xchg
lea
add
xor
mov
sahf
mov
or
mov
push
mov
mov
lods
push
adc
movs
jb
xor
cmp
inc
mov
mul
daa
xchg
test
lea
in
and
test
pop
pop
mov
repnz
jecxz
sahf
cmp
or
push
mov
cld
push
adc
inc
mov
push
dec
pop
push
inc
push
add
clc
push
pop
add
call
jns
or
out
and
fsub
xchg
adc
adc
scas
in
adc
cmps
fistp
mov
mov
dec
mov
mov
fs
pop
pusha
mov
sbb
add
pop
push
push
inc
pushf
mov
test
jg
test
push
mov
mov
shl
mov
sub
and
add
mov
push
inc
(bad)
jnp
pop
add
push
movs
scas
jb
test
and
mov
mov
xor
xor
cwde
movs
(bad)
push
mov
cmps
test
sbb
add
push
out
pop
stc
fmulp
lods
mov
mov
inc
pop
sub
mov
fistp
xlat
int
out
push
sub
sub
adc
add
pusha
pop
sbb
aad
nop
push
and
push
push
inc
sbb
ror
leave
loope
movs
movs
aam
iret
or
retf
mov
pop
lds
dec
mov
test
in
sbb
sub
imul
add
jb
xor
movs
adc
out
pop
inc
mov
in
rcr
adc
jnp
cmps
sub
jle
sbb
mov
mov
adc
or
or
std
ins
int3
or
sub
cdq
dec
call
mov
sbb
cdq
ja
push
out
ins
scas
sub
mov
rcr
rol
sbb
mov
xchg
pop
xchg
(bad)
mov
repnz
cmp
clc
sbb
xor
mov
adc
mov
adc
inc
fcmovnu
(bad)
xchg
fadd
xor
adc
push
in
nop
dec
adc
or
xchg
mov
jmp
sahf
dec
ds
aaa
imul
sub
inc
lea
xacquire
test
xor
jge
sahf
outs
in
xor
in
and
add
sbb
nop
imul
jns
and
retf
or
pop
mov
push
shr
or
mov
jge
cmp
stos
jp
xchg
dec
stos
and
retf
cmp
pop
int3
mov
ror
pop
bound
sbb
mov
ds
(bad)
sub
mov
mov
pop
push
mov
sub
ret
cmps
scas
push
jnp
jbe
ret
mov
sbb
scas
and
sbb
inc
rcl
imul
and
(bad)
xlat
pop
push
lods
or
sahf
cdq
pop
ins
jp
pop
fcmovnb
mov
fmul
dec
inc
rol
mov
xor
sbb
inc
clc
div
push
stos
xor
in
pop
neg
push
mov
mov
inc
mov
imul
adc
(bad)
cwde
push
inc
inc
movs
xchg
pop
xor
std
cmps
xchg
jecxz
bound
jno
add
dec
aam
aas
lahf
push
scas
adc
pop
outs
dec
addr16
out
std
stc
rcl
xor
sub
pop
rcl
mov
add
and
scas
add
mov
mov
cmp
dec
sub
repnz
test
ror
imul
lds
je
sub
push
xchg
hlt
inc
or
adc
sub
and
adc
push
and
data16
xchg
cmps
mov
add
push
push
jp
mov
call
xchg
push
test
or
pop
dec
test
sbb
repnz
daa
dec
or
mov
inc
hlt
repz
fdivr
fisub
jb
sub
ds
rcl
mov
mov
xchg
aad
js
leave
inc
int3
cmp
pop
add
mov
stc
mov
xchg
gs
and
ret
sbb
mov
cs
xor
xchg
retf
in
xchg
clc
jecxz
dec
mov
push
push
(bad)
pop
add
push
dec
jle
lea
(bad)
pop
sub
repz
int3
jecxz
cmp
int
xchg
mov
out
push
stos
loopne
das
push
dec
push
in
pop
mov
sbb
cli
xchg
out
xchg
gs
cwde
outs
sbb
leave
rol
inc
adc
std
adc
test
lods
pop
push
push
mov
mov
add
xor
cmc
ins
daa
bound
neg
cmps
xor
push
or
lock
bound
cmp
mov
jmp
cmp
push
pop
out
fstp
sbb
loopne
inc
pinsrw
adc
pushf
je
in
iret
call
je
mov
add
cwde
hlt
and
jno
inc
out
lea
jno
xchg
or
jmp
add
lahf
neg
jnp
in
mov
push
push
inc
inc
stc
adc
clc
cmp
repz
push
sar
add
js
add
mov
add
cmp
dec
sub
jmp
enter
in
aam
retf
mov
movs
lods
jno
mov
adc
cmps
cmp
add
inc
call
cmp
mov
and
xchg
push
sbb
jnp
aaa
rcl
or
push
pushf
mov
cli
jle
xchg
call
add
sbb
xor
(bad)
xor
mov
imul
dec
repnz
loopne
aas
fstp
pop
lds
mov
add
xor
jne
lods
jecxz
or
jo
stos
push
push
dec
mov
je
cli
adc
into
xchg
fdiv
fwait
(bad)
gs
push
pop
test
pushf
sbb
push
sahf
inc
sbb
xor
lahf
adc
sbb
dec
aam
fwait
(bad)
cmp
in
out
pop
and
lods
push
sub
add
les
test
pop
cmp
cld
fnsave
xchg
sbb
add
sub
movs
inc
lods
push
fcom
div
or
pop
inc
mov
arpl
push
push
push
lods
adc
mov
jecxz
outs
or
xchg
clc
mov
push
push
xchg
cmp
and
mov
pop
(bad)
(bad)
(bad)
mov
xor
sahf
mov
mov
fisubr
dec
push
push
or
sub
movs
mov
dec
sub
push
(bad)
sub
test
add
icebp
jg
fcmove
mov
xor
enter
icebp
scas
sbb
idiv
mov
dec
xchg
sbb
mov
stc
hlt
xchg
(bad)
in
(bad)
jecxz
loop
cmps
imul
int3
call
in
and
jnp
fistp
test
stc
jns
cs
in
in
xchg
inc
loope
xchg
enter
mov
xchg
sub
mov
or
sub
pop
sti
jp
in
test
call
int
pop
cmp
sbb
push
dec
and
aas
mov
inc
jmp
mov
loope
or
cmp
or
xchg
xor
stos
cwde
test
mov
fdiv
iret
mov
(bad)
pop
(bad)
pop
pop
dec
sahf
ficomp
outs
mov
push
stos
fs
adc
shl
pop
pop
cld
pushf
mov
xchg
dec
sub
dec
sahf
inc
dec
imul
push
sbb
sub
cmp
arpl
jne
fs
dec
(bad)
cmp
sub
mov
sub
or
mov
bound
xor
jge
dec
rep
dec
sbb
test
cmp
mov
or
inc
retf
dec
arpl
jns
dec
mov
and
mov
jnp
xchg
cmp
pop
les
(bad)
dec
mov
push
adc
add
add
push
mov
and
shl
ror
push
test
and
repnz
sub
inc
or
push
push
icebp
push
loope
mov
dec
(bad)
adc
and
sub
iret
scas
push
outs
xor
fistp
cmc
sbb
pusha
cmc
mov
mov
aas
push
loopne
ins
mov
sub
lods
inc
xchg
inc
cmps
dec
pop
leave
xor
sub
inc
xchg
adc
inc
cmp
jg
fidivr
test
push
retf
sbb
ds
repz
imul
aam
inc
xchg
fld
out
cmp
imul
(bad)
push
add
mov
(bad)
and
mov
fbld
scas
bound
xor
lods
xor
dec
push
movs
sbb
mov
sbb
dec
push
inc
test
mov
aam
repz
push
cmps
xchg
xchg
movs
cmps
(bad)
call
aad
aas
neg
adc
stc
shr
xchg
mov
inc
and
sub
jg
pop
sub
(bad)
mov
mov
mov
ss
jb
pop
and
loope
dec
jns
scas
outs
es
test
mov
xor
mov
bound
xor
xlat
xor
lock
mov
leave
mov
fwait
and
call
dec
mov
push
or
imul
push
(bad)
mov
and
add
(bad)
push
aad
mov
ins
dec
jae
stos
vprotw
pop
(bad)
mov
pop
fmul
mov
out
test
fsubr
mov
pop
pop
pushf
xchg
jmp
adc
cdq
popf
cdq
adc
cmp
add
dec
hlt
arpl
les
or
sar
sub
sbb
inc
jge
xchg
sahf
jg
jecxz
rcl
inc
or
rcr
addr16
pop
dec
push
add
pop
push
jmp
loope
xchg
(bad)
pop
out
mov
push
dec
add
ret
aam
xor
inc
icebp
lds
or
push
push
mov
push
daa
rcr
sbb
in
pop
jae
(bad)
fcmovnu
fcmovnb
push
jo
cmp
sbb
mov
or
popf
add
cmp
ins
adc
xor
push
aam
xchg
xor
scas
mov
lock
imul
sbb
(bad)
cmp
bound
sub
lods
aas
test
xchg
ror
out
retf
cmp
xor
or
inc
jno
sahf
and
mov
leave
jg
inc
ins
adc
dec
xchg
or
repz
lods
outs
repz
pop
mov
jb
aad
int3
pop
push
xor
cmp
dec
(bad)
cld
das
popa
(bad)
mov
mov
rcr
sub
test
in
inc
cmp
pop
in
fsubp
sbb
add
xchg
jmp
jne
pop
pushf
call
into
nop
pop
push
or
dec
pop
xor
pop
xchg
data16
loopne
mov
std
fwait
push
ret
out
jg
jmp
pop
jo
cmp
and
dec
movs
daa
mov
test
push
lds
into
inc
mov
mov
xchg
mov
stos
scas
fisub
xor
push
and
sub
jp
xchg
rcr
movs
shr
repnz
push
addr16
pop
mov
mov
or
cmp
daa
mov
mov
popf
lahf
or
out
lods
or
loopne
rol
add
stos
ficom
adc
inc
push
sub
loopne
arpl
push
shr
int3
jge
adc
sub
jmp
rcl
dec
sahf
inc
or
in
cmp
xchg
int
push
loopne
int
adc
mov
call
push
add
les
dec
mov
jnp
(bad)
inc
jns
jno
sub
ins
sub
push
test
leave
arpl
pop
or
xchg
sbb
pushf
mov
sub
rcr
cwde
sub
punpcklbw
pusha
imul
in
and
push
inc
sbb
lock
lds
or
(bad)
out
add
leave
inc
inc
stos
push
mov
add
and
jmp
call
movs
xchg
xchg
pop
sub
inc
xchg
addr16
cli
mov
sar
jecxz
in
aaa
mov
jge
addr16
push
push
mov
js
(bad)
push
popf
das
mov
imul
test
js
in
jecxz
xor
dec
and
cdq
movs
mov
add
xchg
pop
loopne
push
xchg
mov
loop
jp
xchg
or
jno
(bad)
scas
cmp
loope
cs
pop
fwait
push
push
xchg
jbe
stos
xor
jae
adc
int
push
pop
adc
xor
mov
clc
mul
ds
push
xor
repz
sbb
into
test
movs
and
add
sub
jg
call
cmp
add
and
cmp
add
sub
cmp
imul
pop
aam
les
add
dec
cmps
or
push
add
je
sub
jmp
loop
cmp
div
std
out
inc
cwde
cmp
dec
pop
rcl
push
mov
mov
xchg
push
aaa
mov
in
pop
and
sub
dec
push
cmps
jge
cmp
shl
xchg
pop
adc
in
loope
mov
stc
call
ficom
jecxz
cmps
sti
jecxz
test
and
hlt
in
push
(bad)
in
sub
lea
mov
cmp
mov
push
push
sub
out
xor
mov
fwait
rcr
shl
bound
nop
push
sub
sub
push
xor
cmp
inc
sbb
jnp
fidivr
clc
ins
out
out
(bad)
aad
jmp
inc
lods
sub
and
or
(bad)
sahf
xor
pop
xor
mov
xor
pop
mov
test
sti
push
js
ja
mov
movs
fwait
and
or
mov
dec
inc
dec
inc
dec
mov
push
pop
psubd
idiv
mov
and
les
and
cld
mov
cli
cmp
fwait
jne
xchg
sub
add
and
daa
adc
scas
js
sub
xor
cdq
imul
add
inc
inc
or
sub
das
jno
jecxz
push
mov
mov
aas
popa
pop
and
jae
mov
fiadd
addr16
mov
xchg
test
or
adc
pop
lahf
pop
xchg
inc
sub
or
stos
sbb
add
not
mov
adc
sub
add
test
call
mov
jge
stc
mov
in
in
dec
mov
push
xchg
and
and
mov
and
jb
in
imul
mov
lds
repnz
cld
mov
mov
pop
jle
cld
inc
leave
shr
and
and
adc
sub
mov
dec
scas
mov
aaa
aas
pop
sti
inc
(bad)
(bad)
ret
bound
addr16
clc
xchg
or
stc
xlat
out
(bad)
add
dec
or
addr16
xchg
mov
sub
call
jl
jno
mov
dec
push
xor
ins
stc
ds
not
mov
mov
xor
adc
cmp
adc
mov
lahf
lahf
repz
imul
and
sub
xor
xor
mov
mov
cmp
lea
and
hlt
scas
pop
lahf
out
test
jg
jmp
xlat
std
pop
lahf
mov
push
in
inc
aaa
mov
push
mov
mov
and
dec
push
ds
sub
inc
push
call
pop
push
(bad)
xor
lahf
adc
inc
in
(bad)
cmps
jp
fwait
retf
inc
xchg
popa
jecxz
rcl
and
or
push
sbb
jmp
push
cmp
push
popa
addr16
inc
bswap
mov
sub
dec
add
add
pop
retf
int3
(bad)
pop
push
cmp
in
stos
out
int3
jb
mov
dec
push
jb
mov
mov
icebp
(bad)
mov
jmp
stc
je
int
shl
add
push
jmp
scas
cmp
pop
mov
ss
mov
hlt
loop
fsubrp
push
push
xchg
dec
in
ja
popa
or
jmp
dec
pop
sub
xchg
imul
cmp
and
scas
out
pop
sub
mov
mov
xlat
inc
cmp
lahf
retf
push
outs
retf
cli
fnsave
adc
inc
rcr
xlat
xor
mov
and
icebp
mov
mov
jp
mov
and
add
mov
mov
cmp
popf
jg
js
mov
mov
pop
sbb
imul
push
aam
jae
stos
cdq
clc
push
sar
jge
mov
mov
inc
sbb
out
push
retf
mov
mov
je
adc
imul
stos
lods
shl
fistp
leave
and
xor
xor
sub
les
mov
xor
push
pop
jmp
cs
cmps
loope
dec
loop
leave
shl
add
test
int3
out
cwde
jle
fdivr
stos
pop
jmp
sbb
mov
iret
push
adc
mov
xchg
lods
adc
scas
pop
push
out
push
in
sbb
and
loope
sti
dec
lahf
repnz
addr16
adc
and
xchg
xor
xor
pop
push
or
movs
push
or
lods
jbe
xchg
imul
push
das
aaa
and
fwait
push
jle
jle
jecxz
cmps
aad
push
inc
push
jno
test
pushf
mov
repnz
or
js
cmps
rep
push
cmps
shl
mov
sub
dec
pop
push
cmp
mov
cld
mov
or
xchg
int3
movs
repnz
sbb
dec
push
jmp
cmp
dec
push
cmp
leave
and
(bad)
fsubr
lods
in
cdq
push
fcomp
pop
or
jl
adc
xchg
ins
jns
adc
xchg
movs
add
lods
add
aam
push
lea
add
push
iret
pop
icebp
xor
call
inc
mov
push
pop
and
sbb
fsub
stc
jmp
push
and
nop
retf
dec
movs
stc
stc
test
gs
pop
mov
dec
inc
mov
mov
cmp
call
aaa
cmp
mov
jnp
xor
cwde
test
mov
jb
fwait
or
repnz
shl
ds
cli
jecxz
push
outs
fcomp
sbb
cmp
leave
sub
mov
loop
dec
or
(bad)
repnz
pshufw
dec
arpl
sti
dec
test
xchg
jb
jmp
add
and
cmp
cdq
mov
inc
les
pop
cmp
and
jl
iret
inc
pop
and
test
cmp
or
ret
ds
in
stos
xchg
jbe
sub
popf
and
enter
push
or
enter
test
add
adc
in
sbb
inc
mov
aaa
jg
stos
loop
mov
ss
cwde
stc
mov
or
adc
in
data16
or
aaa
inc
or
push
shl
mov
mov
pop
test
inc
sbb
push
cld
pop
mov
inc
leave
outs
in
mov
push
icebp
push
mov
add
movs
cmp
movs
pop
pop
jl
xor
fsub
ins
xor
add
sub
dec
xchg
mov
or
test
adc
add
test
mov
mov
(bad)
xchg
sbb
lods
scas
jae
loopne
outs
add
outs
ror
jno
shl
imul
add
stos
test
arpl
in
fisubr
je
sbb
inc
mov
sub
jecxz
pop
jb
xor
xchg
leave
push
add
mov
and
cmps
idiv
sti
inc
imul
jbe
in
or
mov
test
hlt
jmp
mov
xchg
dec
jbe
enter
loope
test
fmulp
push
add
or
mov
dec
pop
sub
test
mov
imul
test
xchg
mov
and
inc
loope
jmp
xchg
movs
lds
imul
xchg
sbb
mov
into
(bad)
out
jo
mov
cs
jp
mov
sub
cmp
pop
test
sti
arpl
mov
sbb
add
mov
or
in
(bad)
ins
in
mov
and
mov
int
cmp
and
sbb
in
xchg
push
(bad)
fwait
sub
inc
imul
test
mov
xchg
fcom
sub
pop
adc
icebp
lds
or
sub
mov
mov
vmwrite
sbb
mov
sub
les
jae
nop
test
mov
sub
jge
fadd
fnstsw
stos
mov
and
add
pop
mov
xor
icebp
jecxz
adc
stc
add
pop
in
dec
push
aas
pop
push
push
dec
stc
xchg
push
(bad)
loope
and
sbb
fild
mov
rol
mov
pop
and
in
xor
cmp
push
test
je
mov
jne
push
cmp
mov
push
and
add
outs
or
enter
fisubr
mov
sbb
scas
xchg
scas
jge
jp
jle
mov
jns
les
or
pop
icebp
bnd
cmp
mov
mov
test
and
cmp
(bad)
aas
xlat
mul
stos
sbb
fdiv
pop
jno
inc
xchg
scas
dec
ret
mov
aas
xlat
ds
sub
data16
les
aad
aas
pop
lds
jle
jne
jns
mov
daa
cmc
cmp
xchg
cwde
call
inc
loop
bound
shl
xchg
std
pop
loopne
daa
mov
add
rcr
xchg
push
es
jl
mov
or
pop
aas
das
lods
add
test
cmp
mov
and
test
push
in
pop
and
or
jnp
mov
repnz
sub
or
mov
xchg
repz
sahf
cmp
xchg
cdq
add
xor
lahf
lock
mov
retf
cdq
retf
jl
ror
and
imul
imul
push
sbb
pop
jmp
pop
inc
sub
xchg
aaa
jns
out
mov
mov
mov
pop
pushf
sub
add
shl
push
add
shl
into
mov
push
xor
inc
mov
adc
int
into
mov
xchg
sub
jae
fistp
out
push
aad
sub
mov
pop
daa
mov
jae
inc
rcl
and
add
xchg
dec
xchg
call
push
xchg
shl
and
mov
int
jg
int3
movs
mov
sbb
stos
sar
jmp
mov
xor
enter
jge
dec
and
sub
and
sbb
test
shl
imul
lds
dec
div
sbb
mov
push
sti
sbb
in
sbb
xor
pushf
push
aam
jbe
pop
xor
js
je
mov
jmp
bound
inc
mov
retf
mov
xchg
dec
sbb
pop
dec
sub
sub
cdq
and
imul
shr
call
adc
cwde
pop
mov
aas
aaa
dec
xchg
dec
cmc
dec
pusha
mov
add
mov
push
ret
push
jb
push
imul
xor
sbb
aam
or
or
xor
cdq
or
and
mov
sti
xchg
inc
mov
push
dec
jae
fbstp
fnstsw
ja
and
sbb
push
loopne
rol
sahf
dec
int
xchg
shl
call
es
cmp
lods
dec
imul
mov
movs
test
adc
int
pop
mov
scas
push
cmp
cmp
(bad)
daa
scas
push
mov
add
mov
dec
sub
bound
dec
xor
hlt
xor
cmp
inc
cmc
jmp
(bad)
cmc
sub
adc
push
jp
dec
cmp
rcl
lds
lds
mov
jnp
shr
aaa
add
outs
xchg
outs
sub
(bad)
iret
cld
sbb
sbb
stos
sbb
dec
loopne
das
jg
stc
jg
cmp
lock
push
cmp
repnz
cmps
lods
jp
imul
adc
int3
push
push
mov
xor
out
arpl
aam
adc
xchg
fbld
ret
(bad)
shr
gs
inc
cld
and
push
add
adc
inc
push
popf
xchg
sbb
inc
pop
retf
and
pop
sbb
xor
(bad)
and
ret
sbb
ds
dec
cmp
sub
jnp
movs
les
jns
icebp
mov
pop
mov
aas
daa
ficomp
fstp
psrlq
push
mov
jmp
add
jmp
inc
sub
dec
enter
sub
mov
push
push
inc
pop
and
mov
cmp
cmc
bndstx
mov
les
in
pop
xchg
inc
loope
imul
push
cmp
lods
xor
imul
sbb
test
pop
inc
movs
xchg
mov
and
fs
lahf
push
test
or
lds
or
repnz
xor
xor
push
inc
dec
adc
jp
enter
xchg
mov
stc
outs
xor
push
call
je
xor
and
pop
and
push
mov
push
cmp
push
sti
jp
push
bound
retf
not
adc
cmp
jmp
and
mov
(bad)
jecxz
arpl
xchg
xchg
inc
shl
mov
sub
pushf
sub
out
retf
sbb
dec
ficom
cmp
add
cmps
xor
scas
aaa
xchg
xor
xchg
inc
mov
mov
jg
in
das
mov
mov
retf
inc
jo
inc
cmp
movs
pop
cmp
xchg
fmul
and
mov
dec
and
movs
jl
scas
cmp
mov
add
and
cld
sar
imul
inc
iret
cld
outs
fadd
out
loope
or
or
add
push
scas
lahf
mov
arpl
jp
int3
shr
jns
es
mov
test
cmp
jne
and
dec
inc
mov
movs
popa
adc
cmps
push
jno
sar
xchg
xor
add
add
push
adc
fcom
pop
test
mov
push
jg
cmp
mov
les
xor
mov
pop
pop
mov
vandnpd
imul
loope
rcr
lods
mov
dec
xchg
ret
xor
cs
inc
mov
jo
cmp
outs
and
xchg
js
push
or
cdq
mov
jno
pop
inc
jle
xchg
inc
cmp
cmp
xor
int3
stc
mov
sbb
out
call
enterw
mov
inc
stos
hlt
imul
mov
pop
xor
inc
cmp
sbb
inc
sbb
push
aas
xchg
dec
jl
ror
(bad)
xor
push
loop
pop
xor
ret
loop
push
std
mov
dec
jp
(bad)
xchg
lds
sbb
mov
add
xor
pop
aad
or
dec
test
ins
stc
xchg
sub
inc
add
(bad)
inc
and
dec
daa
push
pop
sub
scas
(bad)
shl
(bad)
and
push
and
and
fcmove
xchg
ss
sub
test
xchg
jb
fild
call
jp
cmps
push
push
inc
bound
jp
aam
xor
inc
push
repnz
or
xor
xlat
(bad)
pushf
inc
dec
test
sub
ins
inc
push
sbb
popf
dec
dec
inc
mov
out
outs
shl
sub
jl
stos
aam
lods
js
cmps
cmps
jo
ss
xor
shl
arpl
loop
adc
xchg
xor
or
cmps
stos
div
xchg
out
test
sahf
cmp
pop
fild
je
pop
xchg
push
dec
dec
push
addr16
lds
add
jno
cmp
jmp
mov
dec
and
mov
ds
xchg
inc
cmc
imul
sar
(bad)
mov
mov
(bad)
pop
sub
xor
scas
jge
dec
cmc
call
(bad)
mov
jl
stc
hlt
sbb
xor
xchg
movs
mov
clc
pop
mov
retf
jecxz
add
add
(bad)
(bad)
movs
xchg
xlat
cmp
xchg
movs
add
retf
and
inc
cmp
icebp
scas
lahf
push
mov
jmp
push
ror
sub
xchg
dec
and
mov
(bad)
fs
div
(bad)
lea
cmp
ror
cmps
cmp
popf
or
xor
call
and
dec
xor
adc
aam
push
adc
mov
aad
xor
mov
or
shr
enter
loop
(bad)
cld
sahf
neg
dec
imul
into
sub
clc
mov
adc
(bad)
sub
push
xchg
cwde
cli
sbb
xor
test
out
adc
sub
movs
(bad)
push
std
lds
js
(bad)
jbe
dec
sbb
sbb
add
xchg
aas
jmp
push
movs
xor
sbb
cld
ds
cdq
dec
sbb
ins
sub
test
ja
inc
push
mov
xchg
push
lods
(bad)
adc
movs
pop
mov
cli
sahf
xor
jp
popa
cli
pop
sub
push
aad
out
not
imul
and
movs
pop
(bad)
(bad)
rcr
stc
cmp
and
mov
dec
or
sub
loop
and
pop
scas
push
adc
cs
xchg
add
add
popa
outs
add
cli
jnp
dec
dec
add
dec
xor
add
test
cmps
mov
add
add
xchg
sbb
dec
and
dec
push
xchg
int
jmp
add
add
jnp
mov
mov
cmp
cmp
jo
xchg
cmp
stos
pushf
jl
push
stc
hlt
mov
outs
sub
dec
repnz
sbb
in
iret
mov
fst
retf
ins
push
and
fucomi
pop
test
xchg
pop
out
mov
xchg
scas
dec
retf
xchg
dec
pusha
push
(bad)
push
lods
imul
adc
retf
sbb
adc
cmps
popf
lock
les
dec
add
std
add
pop
jae
cmp
lods
lods
cmps
cmp
pop
mov
idiv
data16
ins
arpl
test
into
push
sbb
mov
and
mov
add
sbb
inc
adc
hlt
xor
mov
sbb
mov
sbb
shr
mov
fstp
lea
shl
jg
in
(bad)
aaa
dec
jno
push
dec
jl
sbb
and
xchg
shl
or
pushf
cmp
icebp
mov
loope
mov
and
mov
xor
mov
cmp
sahf
bound
or
and
rcl
int
hlt
(bad)
sbb
adc
fwait
push
lahf
push
int
test
int
(bad)
scas
mov
aam
retf
jle
xchg
push
call
movs
(bad)
mov
and
mov
shl
out
int3
hlt
adc
push
push
pop
mov
test
(bad)
je
iret
jl
jmp
popf
xchg
pop
mov
sub
clc
pop
or
out
mov
jmp
jns
fmul
pop
jecxz
mov
test
es
add
scas
out
aaa
xor
das
xor
test
retf
mov
cmp
pop
std
mov
or
jmp
out
(bad)
pop
mov
nop
mov
es
es
mov
xor
add
xchg
aaa
mov
mov
sbb
ret
ret
adc
(bad)
lods
imul
fmul
mov
adc
jnp
aam
adc
dec
mov
and
int3
sub
push
(bad)
sahf
shr
xchg
xchg
ins
mov
div
pop
add
mov
adc
mov
outs
icebp
int3
rcl
imul
cmps
add
enter
add
movs
pop
lahf
jb
xchg
add
movs
dec
inc
add
mov
adc
in
jnp
mov
fs
adc
aam
xchg
xlat
push
adc
inc
push
xchg
pop
add
adc
mov
lahf
adc
xor
(bad)
push
mov
bound
sbb
ret
arpl
mov
mov
leave
pop
fcomip
in
add
clc
hlt
or
hlt
and
repz
push
and
cmps
test
xchg
sub
loopne
in
jne
lock
xchg
(bad)
sqrtps
xchg
cmps
xchg
mov
jg
xchg
lds
lods
movs
jb
(bad)
sbb
in
shl
push
pop
dec
add
inc
and
jl
xchg
(bad)
cmp
fld
retf
es
mov
movs
sbb
cmp
int3
in
jne
(bad)
mov
aad
inc
xor
or
mov
mov
fnstsw
ins
xor
aad
xchg
cmp
or
inc
mov
cmps
adc
stos
mov
jnp
mov
ins
mov
xchg
xor
cmps
lea
xor
add
sub
or
jnp
sub
add
dec
scas
xor
mov
xchg
pop
cmp
inc
push
dec
push
dec
fbld
and
dec
icebp
lods
jno
jb
rcr
mov
inc
or
jmp
pcmpeqb
data16
jmp
stos
fimul
mov
sub
dec
cmp
xchg
imul
repz
xchg
(bad)
mov
in
adc
sub
and
add
push
cmp
scas
jp
adc
mov
ret
adc
sub
jge
xor
sub
jae
cmp
fadd
cmp
test
xchg
sub
jbe
mov
nop
xchg
mov
sahf
outs
fsubr
retf
mov
push
adc
lods
sub
dec
add
mov
pop
pop
cmp
push
jge
les
sub
jbe
ds
mov
add
stos
sub
popf
mov
xchg
outs
in
leave
mov
dec
ss
leave
sbb
xchg
push
dec
shl
sahf
into
add
cli
dec
mul
pop
push
jb
add
inc
push
jecxz
and
mov
xor
es
fstp
retf
cdq
adc
retf
add
in
push
push
push
or
push
rol
mov
adc
jo
inc
add
mov
add
(bad)
push
xchg
push
xchg
xchg
push
push
inc
or
imul
cmp
aaa
dec
sub
outs
xor
sbb
hlt
popa
das
and
sbb
aam
push
test
mov
fs
stos
inc
(bad)
push
cmc
loop
daa
fidivr
movs
(bad)
sbb
leave
ret
push
dec
xor
fwait
adc
out
sbb
add
jmp
imul
out
in
pop
and
std
cmps
repnz
pop
in
sbb
ins
jnp
adc
xor
outs
lods
adc
stos
push
xchg
pop
push
adc
leave
lods
dec
arpl
pop
or
cmp
movs
dec
cmp
aaa
fmul
sub
push
(bad)
leave
ja
push
mul
hlt
cli
jnp
ja
cmc
pop
xchg
sub
or
sahf
add
aas
into
mov
jb
outs
imul
lds
idiv
pop
fist
loope
mov
mov
xchg
pop
mov
je
mov
add
and
loop
sub
sar
add
fs
mov
mov
jne
or
shr
repz
std
mov
and
xchg
fsubr
ja
nop
adc
adc
arpl
add
push
bswap
mov
inc
add
lea
outs
in
loop
jno
inc
mov
adc
add
xchg
cmps
nop
jmp
aaa
xor
jne
mov
out
es
push
pop
sub
push
cwde
ret
jge
cmc
pop
outs
unpckhps
popa
outs
imul
popf
add
sbb
dec
lahf
inc
mov
in
xchg
pop
add
xchg
cmp
(bad)
mov
mov
(bad)
aaa
mov
mov
(bad)
fwait
into
mov
aam
retf
out
rcr
sub
sbb
rcr
mov
scas
adc
mov
adc
inc
cli
mov
xchg
xor
and
sbb
and
movs
(bad)
adc
sti
or
lods
sti
psubusw
into
lods
pop
xor
mov
cs
imul
push
dec
mov
add
mov
push
cmp
out
iret
aaa
ds
push
mov
inc
inc
push
or
inc
cmp
retf
iret
rol
nop
mov
xor
pop
push
(bad)
cdq
daa
out
cmp
adc
jbe
push
jne
ror
jno
push
popa
int
div
in
pop
push
sbb
mov
fwait
dec
mov
dec
push
xchg
test
add
sbb
cmp
shr
ret
in
inc
jmp
push
cmps
cmps
and
push
dec
data16
jge
add
add
add
xchg
retf
cmp
mov
cmp
test
popa
ret
ds
sets
repz
sub
sub
scas
jbe
sbb
rol
stc
mov
and
sbb
xor
jg
jbe
jl
inc
push
xlat
xchg
push
in
imul
les
sahf
mov
sub
mov
shl
push
lahf
jbe
sbb
or
out
jb
mov
popa
lea
push
in
test
(bad)
aad
loop
pushf
push
iret
mov
push
pop
call
call
mov
inc
xor
clc
cli
retf
mov
adc
dec
enter
stos
cmps
stos
dec
es
and
rcl
inc
dec
jecxz
inc
test
mov
pop
xchg
mov
add
add
xor
(bad)
fxam
or
jmp
test
push
(bad)
aam
pop
push
(bad)
js
(bad)
cmp
add
sub
jp
jo
inc
dec
pop
pop
(bad)
inc
or
bound
xor
push
xchg
ror
jnp
inc
sub
mov
(bad)
icebp
fcmovnu
inc
movs
mov
mov
jp
mov
stc
push
ret
push
int
mov
aad
cld
push
dec
stc
or
mov
jge
xchg
(bad)
fcomp
lods
mov
fdivr
jp
test
and
dec
cmp
xor
(bad)
mov
xor
inc
mov
push
fild
ins
xor
cmps
xor
adc
mov
xor
jno
add
sbb
xchg
dec
lods
imul
pop
fimul
stc
xor
mov
dec
jne
mov
imul
dec
rcr
mov
sahf
inc
shr
xchg
inc
aas
xchg
(bad)
les
lods
xor
jbe
push
daa
sub
in
or
rcl
(bad)
mov
outs
out
imul
and
adc
pop
cld
aam
and
femms
call
mov
xchg
sub
push
xor
pop
daa
push
mov
dec
fisub
fs
es
in
cwde
sar
mov
dec
inc
mov
push
sub
add
push
cmp
(bad)
mov
sbb
ror
mov
ret
cmp
and
ins
cmp
dec
mov
loope
add
xchg
in
iret
div
xchg
pop
mov
push
inc
add
scas
dec
imul
xchg
call
push
push
sub
outs
imul
cs
test
sbb
fisubr
into
pop
xor
pop
in
xchg
push
dec
jl
add
jmp
pop
jp
loop
or
cmp
hlt
mov
ins
or
mov
bound
loope
xor
addr16
xchg
mov
fmulp
scas
idiv
adc
cld
mov
stc
hlt
sahf
dec
pop
xchg
and
ins
mov
pop
and
xchg
loop
aas
ds
mov
ds
jp
or
and
jecxz
and
mov
or
dec
pop
mov
sub
jle
mov
push
stos
inc
or
push
inc
adc
xor
test
jl
jae
push
stc
imul
mov
mov
pop
dec
add
or
cmp
sar
cmp
fs
(bad)
adc
(bad)
aam
loope
mov
dec
arpl
inc
ins
sbb
adc
or
packuswb
cmps
imul
or
test
imul
xlat
fmul
mov
push
mov
pop
mov
sbb
mov
xor
mov
stos
push
inc
mov
add
xchg
jns
and
or
clc
mov
sub
sbb
sub
push
sbb
adc
dec
adc
ror
jmp
fist
js
lea
mov
push
sbb
push
aam
retf
sbb
mov
cmc
cmc
mov
jne
rcl
mov
xor
cmp
ret
adc
lea
push
jne
adc
pop
(bad)
adc
fbld
inc
mov
adc
imul
sub
or
stc
xchg
(bad)
iret
(bad)
sbb
mov
out
lahf
nop
pop
movs
xchg
xor
ja
pop
sub
lds
adc
xchg
dec
adc
inc
xor
(bad)
sub
inc
pop
repnz
shl
outs
xor
movs
xlat
imul
push
pop
push
cli
xor
jg
sbb
fild
inc
retf
(bad)
movs
movs
scas
cmps
dec
das
push
inc
xlat
cmps
mov
mov
xor
dec
cmc
mov
sbb
and
lahf
jno
sub
pop
push
add
out
iret
mov
and
mov
repnz
(bad)
scas
cmps
cs
test
ret
sub
add
dec
or
inc
push
call
push
cmp
(bad)
and
ror
push
loop
jns
fwait
inc
stos
mov
push
call
in
iret
jae
stos
fnsave
or
xlat
sbb
jg
and
mov
mov
push
xor
push
mov
fld
jle
adc
sub
add
call
shl
sar
add
add
pop
adc
repz
icebp
mov
loope
scas
inc
jg
dec
sub
add
lahf
sub
push
repz
jp
data16
stos
adc
xor
imul
push
and
lods
aad
fst
jmp
movs
and
shr
test
in
pop
cld
mov
pop
pop
dec
mov
xor
sbb
test
sub
xchg
jmp
test
ja
adc
pop
fmul
mov
fdivr
push
jge
pusha
(bad)
xchg
sbb
and
cs
push
dec
push
xor
push
mov
add
adc
ret
push
sbb
push
data16
loop
movs
jne
mov
add
imul
imul
push
sub
nop
cld
repnz
inc
adc
loop
cmps
and
int
push
xor
cmp
add
pusha
in
idiv
std
sbb
dec
shl
stc
push
sub
out
loopne
or
adc
ins
and
jno
movs
xchg
pop
cmps
push
sub
jg
shr
ja
pop
jno
xor
xchg
push
mov
in
sbb
mov
push
inc
lock
inc
(bad)
in
lods
aam
mov
js
pop
int3
in
mov
fimul
(bad)
loopne
into
sbb
jae
sub
es
jl
pop
xchg
push
push
xor
jecxz
or
pop
in
mov
les
push
sub
test
lock
call
xchg
lock
sub
pop
xchg
mov
mov
adc
push
jle
(bad)
daa
fidivr
imul
push
icebp
data16
scas
add
hlt
inc
or
data16
adc
test
fs
sahf
cdq
mov
push
sbb
sbb
mov
sbb
jg
sbb
in
ins
arpl
call
mov
test
inc
loop
mov
nop
js
mov
int3
popf
push
push
inc
lods
or
pushf
cmp
sbb
retf
mov
popa
gs
nop
mov
out
jns
pop
fisubr
dec
or
ins
and
mov
or
shr
adc
sbb
inc
mov
cmps
loop
inc
pusha
(bad)
mov
jp
mov
into
out
inc
inc
dec
add
sub
dec
sbb
jmp
stos
sub
inc
mov
xchg
push
outs
cmp
dec
jne
arpl
pop
sbb
jecxz
inc
mov
mov
test
ss
call
push
inc
aad
cld
inc
clc
dec
(bad)
fst
sti
push
mov
jge
sub
stos
imul
xor
scas
cmps
adc
cmps
mov
or
dec
movs
ror
jl
iret
repnz
fs
jmp
imul
push
call
lods
fwait
jle
aad
jb
fsubr
sub
mov
mov
aam
popa
cmps
dec
daa
ret
mov
push
outs
test
dec
(bad)
fmul
jmp
retf
in
(bad)
bound
push
mov
retf
mov
fmul
mov
xchg
ficomp
push
adc
scas
scas
jge
pop
pop
mov
jecxz
cld
or
test
stos
imul
mov
jge
fbstp
imul
xchg
xor
sub
pop
dec
leave
sbb
scas
push
mov
xchg
pop
mov
mov
xlat
outs
mov
add
stos
mov
push
out
call
(bad)
(bad)
mov
in
adc
cli
(bad)
dec
inc
jne
sbb
scas
xchg
fisub
sar
aaa
xor
and
cmp
fisttp
pop
xor
cmp
xor
(bad)
ficom
sbb
xchg
lock
rcl
xchg
repz
out
cmp
call
aaa
xchg
and
ss
jecxz
inc
shr
pop
pop
sub
sbb
xor
add
mov
cmps
push
pushf
sbb
not
popa
jecxz
ret
push
adc
jge
cmps
jne
rcl
xchg
xchg
add
test
mov
sub
(bad)
mov
(bad)
jno
jno
and
cld
jmp
lea
pusha
test
jno
inc
cs
jle
stos
xor
adc
imul
ret
bound
hlt
and
mov
jno
and
pusha
xchg
push
pop
xchg
int
in
adc
mov
and
pop
retf
(bad)
sub
call
(bad)
int
sub
dec
xor
pop
xor
push
in
add
push
sbb
test
movs
mov
lock
sbb
loop
pop
pusha
test
js
les
(bad)
xchg
inc
ins
fwait
xchg
fcmovbe
cmp
or
jne
imul
aas
bound
push
mul
imul
mov
stos
pop
fsubr
push
adc
and
xor
rcl
mov
or
jbe
adc
sbb
lea
pop
add
dec
mov
sahf
jge
in
jbe
icebp
call
dec
inc
dec
cmc
lods
fnstsw
fcomp
inc
inc
out
leave
pop
adc
xor
dec
xor
or
and
sbb
in
fwait
jl
xchg
adc
adc
mov
jp
js
mov
cmp
daa
es
sub
loope
aad
jne
fisttp
test
mov
dec
inc
dec
inc
lea
mov
imul
mov
scas
sbb
mov
dec
mov
addr16
scas
pop
test
add
cmps
push
mov
cli
call
xor
sub
push
ja
cmps
in
adc
push
test
ja
out
pop
jo
int3
xchg
xor
mov
aam
xbegin
xchg
add
jge
pop
add
mov
repnz
jge
jmp
paddsw
mov
add
xor
mov
test
cmps
ins
xchg
loopne
daa
mov
pop
xor
sub
sahf
es
mov
mov
test
and
inc
inc
test
and
sahf
and
jmp
sar
jge
mov
sbb
sub
jo
clflush
jo
je
or
(bad)
ror
or
js
je
pusha
addr16
call
jno
push
ret
addr16
fldz
lods
hlt
and
fadd
fwait
imul
jl
sahf
pop
mov
mov
add
aas
in
jno
xor
gs
cmp
and
ficom
inc
mov
jne
or
dec
imul
fstp
push
sbb
add
xor
dec
cmc
call
pop
and
dec
inc
mov
bound
sbb
xchg
jmp
mov
dec
jmp
mov
js
lahf
je
fs
or
sti
push
ror
xor
std
movs
jecxz
jns
mov
div
jmp
mov
dec
adc
rol
mov
xor
sahf
aad
xor
sub
pop
jo
hlt
inc
das
dec
test
in
imul
or
mov
sub
clc
ins
pop
dec
inc
lds
dec
into
push
dec
sbb
xor
dec
mov
sub
xlat
shr
loop
dec
or
adc
jmp
cmp
or
jmp
not
daa
xor
mov
call
pop
push
push
or
mov
fadd
push
test
mov
mov
ror
push
add
jns
aas
ror
dec
std
rcr
je
adc
mov
and
add
mov
mov
xor
pusha
dec
pop
mov
xor
sub
les
push
adc
pushf
xchg
inc
inc
ds
cdq
xor
adc
push
dec
scas
cmps
pop
fist
(bad)
cli
rol
jno
push
(bad)
and
lods
test
mov
add
sub
(bad)
cwde
cmp
sbb
enter
jae
jg
sar
sti
pop
je
fwait
dec
cld
cmp
push
mov
(bad)
sbb
push
pop
cs
mov
jbe
sub
adc
pop
ss
cmc
mov
clc
jnp
sub
push
adc
rol
mov
mov
cld
jmp
cmp
sub
jmp
fwait
movs
xor
movs
xor
sub
jmp
xchg
push
fsubr
jb
cmps
cli
cmps
retf
xchg
inc
std
je
rol
ret
pop
loopne
mov
sub
and
fnstenv
es
jp
pusha
adc
stos
lea
mov
sub
lods
cld
in
mov
mov
loop
fist
xchg
and
stos
inc
call
sub
mov
mov
ins
stos
aas
fnsave
ret
sbb
gs
pop
push
mov
push
popa
push
les
imul
pop
inc
mov
jbe
jge
cmp
jbe
inc
ret
xor
xor
xlat
push
add
mov
dec
jl
stos
jg
jg
xchg
mov
push
in
mov
mov
fwait
test
inc
dec
das
dec
mov
clc
lock
xor
add
and
iret
aas
xchg
push
cmp
ror
sbb
cmps
ror
imul
jno
test
and
daa
jmp
cs
inc
sub
cld
(bad)
arpl
jo
jg
and
inc
ja
fdivr
push
xor
xlat
lea
arpl
xchg
pop
and
mov
jl
mov
mov
js
mov
(bad)
and
jae
loope
movs
dec
pop
movs
jnp
mov
pop
push
mov
mov
xchg
push
ret
pop
xchg
mov
mov
and
dec
sbb
mov
push
pop
and
inc
sbb
xchg
in
and
lea
test
inc
movs
loop
jne
ucomiss
rcr
inc
sbb
sub
je
ja
mov
xchg
mov
xor
push
sub
xchg
mov
xor
(bad)
sub
add
mov
loope
pop
mov
sbb
das
das
cdq
jmp
xchg
xor
dec
sbb
jns
(bad)
sahf
jl
rcl
jmp
xchg
repz
inc
mov
and
xchg
mov
cs
push
cmp
pop
push
iret
ins
or
sbb
xchg
mov
sbb
adc
ret
stos
and
and
add
mov
inc
scas
or
cmp
sub
movs
or
push
pusha
add
pop
das
mov
push
cld
pcmpgtd
(bad)
adc
iret
repnz
mov
pop
ret
xlat
fstp
test
out
mov
xor
mov
cmp
(bad)
mov
xchg
inc
fcomi
cmps
add
pop
hlt
xchg
ret
test
xchg
sbb
mov
icebp
jecxz
jmp
test
or
mov
cmp
sub
lock
cmps
sahf
jo
rcr
mov
sbb
or
xor
cmp
ja
fucomp
dec
push
enter
aas
push
jg
popf
cmp
das
sar
mov
dec
add
adc
add
xor
hlt
es
(bad)
inc
sub
int3
and
mov
fldcw
test
nop
mov
mov
cmps
mov
xchg
sub
adc
mov
into
mov
aad
push
popa
test
push
aas
shr
iret
pop
mov
jmp
lods
jo
push
aam
adc
xor
mov
fadd
inc
mov
pop
mov
adc
mov
add
mov
mov
into
inc
ret
mov
lahf
shr
push
sub
push
sar
push
ret
cmp
cmps
lds
add
mov
aad
icebp
sub
pop
xchg
sub
jecxz
cmp
cmp
pop
dec
pop
sub
jp
sub
or
xor
add
addr16
lahf
and
jo
test
int
pop
imul
inc
mov
adc
pop
cmp
and
mov
out
push
mov
mov
into
fcom
push
bound
sub
mov
push
xor
adc
pop
idiv
and
inc
test
mov
je
mov
or
xchg
retf
adc
dec
jg
stc
cli
iret
push
xchg
addr16
outs
add
pop
add
aad
and
lea
pop
cmp
jge
vpaddd
fmul
lea
sub
stos
pop
data16
ret
(bad)
inc
push
retf
or
add
aam
test
call
dec
lods
pop
mov
push
rcl
sbb
ret
cmp
les
mov
(bad)
sahf
(bad)
(bad)
adc
push
gs
sub
cmp
scas
inc
xor
xchg
fadd
xchg
leave
movs
jb
ds
cld
mov
fwait
cmp
jp
cld
push
push
push
push
leave
or
add
icebp
stos
jmp
mov
leave
mov
retf
sub
outs
dec
das
mov
(bad)
lahf
clc
sbb
bound
dec
and
fst
sbb
daa
pop
jbe
pusha
push
add
mov
mov
out
or
in
jmp
or
xchg
in
jg
lahf
outs
pop
mov
add
jg
pop
ds
dec
mov
aas
jmp
(bad)
aas
xlat
(bad)
xor
icebp
jecxz
scas
dec
mov
(bad)
lods
pop
rol
loopne
xlat
mov
dec
xchg
retf
push
rol
cmp
mov
mov
push
sbb
pop
inc
movs
test
cmp
mov
pop
jmp
mov
movs
mov
(bad)
and
out
push
retf
add
ss
loope
pop
cli
mov
inc
je
jecxz
xor
pop
sub
test
push
and
dec
movs
dec
xor
or
enter
jp
jg
pusha
jnp
cmps
ret
or
push
inc
(bad)
sub
add
add
xchg
stos
mov
xor
mov
cmps
xchg
xchg
mov
inc
push
rol
shl
dec
jne
sar
repnz
mov
pusha
in
xor
jecxz
add
lds
les
push
jb
test
add
and
mov
(bad)
jle
call
push
and
xor
add
hlt
rcl
inc
popa
out
ins
adc
ins
cmc
or
(bad)
test
test
adc
mov
and
pop
cli
xchg
int
cmc
add
not
xor
xor
sub
retf
test
sub
pop
cmp
inc
daa
cwde
adc
outs
dec
cmp
js
mov
jle
rol
pop
push
xchg
jge
xchg
push
aad
jo
js
aam
jns
inc
mov
lahf
jg
jne
jmp
mov
sbb
xor
push
scas
mov
sub
and
leave
int
mov
aaa
imul
mov
xchg
adc
mov
xchg
aad
push
retf
fcom
sbb
cmps
add
repnz
ss
sbb
std
jmp
sahf
mov
mov
sbb
loop
stos
outs
aas
fadd
xor
shl
cmp
test
fsubr
fdivr
inc
push
add
dec
test
adc
call
pusha
pop
inc
jne
adc
mov
xchg
dec
and
jecxz
mov
mov
push
lds
add
adc
mov
fmul
in
mov
pop
pop
add
ffree
(bad)
mov
adc
in
mov
mov
cmp
mov
add
sar
retf
mov
icebp
push
add
mov
out
mov
test
movs
fcmovb
icebp
clc
push
leave
pop
or
mov
mov
and
test
pop
ds
pop
addr16
push
jmp
dec
add
inc
inc
nop
xchg
lock
movs
push
inc
or
mov
mov
sbb
int3
aad
repz
frstpm(287
test
jne
dec
xchg
add
and
ret
stc
xlat
cmp
sahf
mov
and
inc
popf
fadd
inc
inc
or
inc
push
fistp
adc
mov
loopne
loop
ds
push
mov
jno
push
leave
sub
lods
adc
ins
xchg
scas
test
mov
dec
sbb
mov
mov
outs
(bad)
sub
adc
jno
frndint
pop
pop
xchg
dec
loopne
aas
mov
in
cmc
push
push
adc
test
xchg
add
lahf
pop
nop
call
push
xchg
mov
dec
(bad)
cmps
cmps
mov
pop
sub
mov
pop
push
add
jns
faddp
fwait
ret
pushf
mov
mov
ret
xchg
call
pop
mov
or
mov
pop
iret
inc
ds
pop
dec
nop
mov
inc
adc
int3
enter
jae
xchg
shl
xor
shl
sub
and
xor
cmps
movs
and
in
es
pop
in
and
push
mov
mov
cmp
test
bound
pop
movs
or
(bad)
pop
bound
push
aaa
lea
or
add
sbb
mov
or
push
pushf
adc
xchg
dec
push
jl
adc
jp
lahf
cmc
jle
xchg
inc
(bad)
push
loop
add
dec
cmp
adc
sub
add
sbb
and
cld
(bad)
cmp
fwait
push
inc
xchg
pop
sbb
test
sub
outs
bnd
stc
subps
mov
push
nop
stos
mov
cmps
xor
add
mov
nop
jmp
les
lahf
addr16
cs
inc
inc
inc
adc
scas
inc
ins
ret
sbb
sbb
iret
(bad)
in
sub
jb
gs
push
add
and
out
cmp
repz
mov
stos
lea
xchg
test
or
mov
hlt
sub
xchg
pop
imul
mov
inc
cmps
dec
sub
fisttp
(bad)
fs
bound
call
xlat
shl
(bad)
imul
cmps
cld
pushf
add
mov
xchg
loopne
aas
mov
jb
ss
mov
xor
inc
loope
repz
push
cmp
das
xor
adc
sbb
dec
sbb
jnp
jbe
mov
jbe
retf
xor
and
lds
dec
xor
mov
adc
sti
jg
popf
(bad)
in
adc
pop
ret
inc
xor
inc
js
jae
push
imul
mov
rol
sbb
sub
add
dec
xor
addr16
div
pop
loope
mov
ficom
mov
jmp
add
add
fwait
test
mov
jne
sub
test
xor
enter
and
fsubr
push
sub
lea
imul
or
inc
iret
popf
sub
and
jnp
and
daa
frstor
movs
test
mov
push
or
inc
movs
sub
add
inc
jmp
cld
fwait
sub
int
imul
sub
adc
out
and
inc
aad
jecxz
ret
mov
mov
mov
dec
ror
jb
hlt
(bad)
gs
adc
ror
dec
push
adc
mov
pop
mov
psadbw
aad
xacquire
xchg
movs
jo
bound
aam
stos
push
sbb
mov
and
movs
jno
sbb
ja
stos
xor
xor
movs
cmp
mov
jmp
ret
jno
xor
mov
stos
addr16
lea
shl
retf
and
and
xchg
in
dec
mov
cmc
div
pop
push
mov
(bad)
fwait
and
(bad)
xor
loop
mov
xor
xor
iret
scas
test
jg
rol
or
push
mov
sub
jb
push
movs
aam
cmps
and
jmp
pop
add
pop
inc
and
jno
sub
stc
push
xchg
lds
xor
lods
movs
stos
add
xor
call
xor
jp
mov
xchg
inc
inc
jmp
inc
xor
repnz
les
shr
cmp
outs
mov
add
(bad)
xchg
inc
add
imul
int
retf
test
and
sub
jae
sar
push
dec
add
cmp
stos
fwait
dec
sub
mov
mov
mov
ds
jge
adc
dec
xchg
or
sbb
dec
or
ds
frstor
dec
imul
arpl
out
lods
je
mov
popa
or
sbb
inc
pop
push
pusha
je
sub
inc
das
stc
loop
jo
pop
stos
inc
ins
adc
add
sar
add
and
pop
push
je
retf
cdq
cmp
cdq
repz
loope
pop
jbe
in
jge
mov
mov
movs
inc
sub
and
mov
stos
sbb
not
scas
push
aad
mov
lods
push
cld
mov
mov
(bad)
mov
xchg
and
push
mov
xor
jl
shl
sub
fwait
dec
popa
mov
jnp
mov
rcr
jecxz
jo
pop
mov
jmp
mov
adc
icebp
movs
sub
div
scas
pop
out
pop
xchg
adc
cdq
dec
lea
sub
inc
jp
or
icebp
cmc
not
fbstp
stos
imul
mov
xchg
movs
jp
cmp
sub
scas
dec
mov
aam
imul
ds
cmc
je
adc
sbb
in
test
es
push
movs
sbb
sub
lods
xchg
sub
(bad)
dec
or
dec
js
int3
cmp
xchg
inc
xor
call
leave
ret
call
fcomp
mov
push
mov
aad
xchg
int
or
xchg
call
dec
dec
daa
xchg
and
adc
pminsw
jno
out
pop
fwait
shl
int
leave
or
cld
xor
aas
lock
outs
jnp
and
les
adc
push
in
shl
inc
das
mov
push
aam
adc
enter
xchg
cmps
pop
sub
push
mov
add
gs
pop
push
mov
repnz
inc
or
icebp
fs
cmp
xchg
fcmovnb
jbe
in
movs
inc
or
jecxz
call
lods
call
mov
shl
jmp
xchg
dec
ficom
loop
xor
retf
mov
(bad)
add
movs
lock
shr
mov
adc
jp
jae
int
clc
push
out
and
test
cmp
outs
cmp
pushf
cmp
rol
repnz
pop
xchg
mov
sbb
jmp
mov
inc
jmp
ficomp
outs
and
adc
add
inc
mov
push
pop
adc
mov
mov
push
dec
stc
lock
js
(bad)
or
or
repz
addr16
add
and
push
adc
je
xchg
int
in
cmps
out
jge
nop
movs
in
cmp
rcl
push
inc
xor
(bad)
in
mov
xchg
aam
aad
push
cmp
cmps
jecxz
je
push
dec
push
fbld
mov
fisttp
daa
mov
push
jg
lahf
icebp
idiv
outs
iret
outs
ins
outs
xchg
xor
test
adc
inc
dec
or
cmps
mov
and
lods
fwait
mov
inc
jecxz
cwde
aas
in
hlt
inc
aas
cdq
add
stc
ds
sbb
push
jle
mov
aas
pop
xchg
pop
inc
adc
js
lods
adc
test
or
xchg
mov
sbb
out
and
mov
imul
push
rol
push
inc
adc
fcmovnb
xor
idiv
loop
or
fs
jmp
push
xor
pop
xor
or
aam
movs
jp
jle
(bad)
imul
call
movs
pop
rcl
stos
pop
sub
push
jg
fdivr
add
(bad)
je
lds
push
icebp
inc
push
js
xchg
push
idiv
add
nop
fs
sub
imul
scas
dec
dec
scas
xor
adc
xchg
or
inc
sub
mov
or
es
xchg
push
retf
rcr
ins
inc
cwde
icebp
iret
mov
fdiv
sbb
(bad)
sub
push
push
movs
lea
or
add
les
jnp
inc
shl
mov
out
cmps
sbb
inc
loopne
sub
js
inc
cmp
lods
sahf
or
push
push
aam
stos
retf
jp
cmp
xchg
mov
add
adc
lahf
and
dec
daa
das
movs
push
cs
adc
je
lods
xor
jge
jecxz
and
sbb
jne
push
outs
shl
mov
xlat
cs
pop
imul
push
clc
lds
jne
call
les
add
add
in
pop
mov
cs
loope
xlat
retf
repz
pop
adc
sub
sbb
rcl
mov
mov
(bad)
or
pop
xchg
xchg
cs
test
shr
jns
pushf
add
les
xchg
mov
mov
rcr
mov
cmp
lods
xor
mov
add
and
test
call
fld
jb
into
fsubr
nop
xor
push
add
mov
aas
add
jle
cmc
mov
fild
mov
aad
xchg
xchg
iret
push
push
div
dec
daa
frstor
enter
stos
dec
adc
in
std
(bad)
cmp
mov
scas
jbe
test
push
nop
sub
cmp
push
outs
and
out
retf
mov
inc
adc
push
js
shr
mov
jle
mov
jle
inc
sbb
dec
cmps
add
inc
icebp
enter
arpl
xchg
mov
inc
and
jge
xchg
cmp
adc
inc
ror
or
lahf
fdiv
rol
(bad)
pop
mov
in
outs
mov
pop
jae
mov
sub
xor
not
push
and
mov
dec
movs
cwde
xor
jne
loopne
ficomp
popa
cmp
popa
daa
mov
jg
iret
retf
cmp
mov
xor
pop
inc
mov
pop
add
inc
ret
xor
pop
imul
mov
xchg
dec
xor
jecxz
mov
sahf
pop
adc
mov
ds
into
and
les
xor
aas
leave
dec
dec
jne
outs
ss
jbe
enterw
push
and
or
dec
sahf
jg
hlt
xor
movs
lea
xchg
(bad)
mov
(bad)
and
retf
add
std
dec
dec
enter
adc
lahf
sar
xchg
jge
fmulp
js
pop
enter
inc
lea
imul
pop
loop
repnz
mov
sub
xor
jo
xor
out
in
lods
dec
into
ret
jg
pop
out
sahf
fyl2xp1
cld
mov
push
xor
(bad)
hlt
repz
lods
repnz
push
shl
in
imul
ja
scas
adc
scas
dec
xor
les
cmp
adc
sub
xchg
jl
data16
pop
fild
ret
mov
and
xchg
push
sahf
mov
lahf
pop
pop
mov
mov
repnz
inc
mov
mov
cdq
and
cmp
add
jle
or
dec
pushf
jle
cld
xchg
sbb
enter
dec
movs
xchg
inc
retf
pop
adc
adc
jmp
fimul
int
out
imul
xchg
mov
pop
dec
mov
adc
push
lea
idiv
sbb
in
sar
(bad)
frstor
jne
jg
nop
xor
into
xchg
push
inc
xchg
(bad)
or
dec
or
inc
scas
add
sar
test
xchg
xchg
outs
inc
cmp
shl
adc
jmp
push
or
fwait
icebp
outs
arpl
sahf
sub
dec
or
or
or
daa
iret
aam
(bad)
dec
hlt
and
xor
jecxz
mov
xor
add
shl
shr
mov
retf
add
pop
lea
aas
test
sub
sub
dec
push
mov
xlat
ror
jl
and
sbb
mov
mov
mov
add
call
pop
clc
test
xchg
and
std
ins
push
add
imul
or
popa
jle
ins
daa
out
mov
or
push
lea
dec
push
bound
lods
dec
stc
push
xchg
or
mov
stc
jns
mov
push
add
xlat
push
ret
sub
aas
xchg
cli
lock
(bad)
sahf
imul
xor
jle
aad
lods
pop
dec
inc
pop
xchg
cwde
jle
cmp
mov
lods
xor
mov
add
adc
inc
dec
sti
cs
popa
ret
pop
in
pushf
cmp
fisubr
dec
jno
mov
test
jmp
fmulp
in
int
(bad)
loope
imul
ins
push
sahf
mov
cmp
sahf
aas
sbb
sub
in
ins
mov
ds
(bad)
xor
push
inc
pusha
sub
xlat
xchg
cs
pop
pushf
iret
mov
mov
xchg
inc
pop
push
push
sub
shl
inc
mul
in
lods
jecxz
and
in
xchg
call
cwde
in
test
mov
ret
jb
sub
push
enter
cld
xchg
dec
sbb
loope
dec
mov
jno
or
jl
mov
dec
xor
add
retf
jbe
fdivr
ja
ins
sbb
jmp
jne
push
addr16
aam
and
nop
add
rcr
cdq
stos
inc
dec
out
mov
ror
sbb
(bad)
icebp
ret
cmp
push
cmp
mov
push
mov
mov
cmp
add
repz
lahf
inc
stos
jmp
mov
repz
stc
jae
fadd
ins
mov
push
stos
or
inc
sbb
add
sub
and
icebp
(bad)
mov
fcom
cmp
or
sbb
shr
(bad)
repz
adc
xor
cmps
cmp
jo
call
adc
or
sbb
inc
lahf
ins
pop
pop
leave
sbb
popf
adc
aam
test
xchg
or
lahf
loopne
jbe
jno
js
bound
ds
add
retf
cmps
pop
fsub
push
mov
cmps
dec
mov
push
push
and
pop
dec
pop
fnstcw
hlt
rol
xchg
add
repnz
repz
aas
dec
fstp
ret
add
pop
movs
(bad)
out
jle
pop
lock
sbb
test
xor
lods
call
adc
enter
pop
faddp
mov
xchg
dec
or
jmp
sbb
add
xor
scas
xchg
inc
mov
pop
mov
lods
mov
inc
and
jmp
or
sub
test
cmp
inc
pop
(bad)
inc
fnstenv
sbb
mov
jmp
add
sub
mov
or
sahf
in
movs
lods
dec
sub
mov
push
sahf
mov
fild
neg
mov
leave
dec
xchg
cmps
ret
ret
or
pop
sahf
dec
xchg
xchg
dec
jns
clc
bound
lods
mov
push
daa
aam
inc
ja
mov
fiadd
mov
jg
xor
push
mov
fbld
out
mov
push
repnz
inc
xchg
ret
dec
inc
scas
cdq
add
inc
int
aam
out
sbb
add
aam
adc
xchg
push
inc
daa
sahf
sahf
mov
cdq
mov
pop
push
dec
cmc
mov
pop
dec
cli
cmp
inc
cmp
repz
push
fld
mov
mul
add
dec
push
jae
out
add
out
jl
mov
ins
xchg
and
repnz
lods
mov
fcomp
cmp
lods
inc
aam
loope
add
ins
sub
loope
std
(bad)
std
mov
nop
leave
dec
push
xchg
mov
xor
pop
je
inc
popa
mov
xchg
add
push
dec
push
jge
inc
leave
mov
jb
fidivr
push
xor
jbe
add
mov
ja
int
je
mov
ss
leave
loope
adc
aad
inc
stos
cmc
pop
cmps
mov
sub
xor
movs
cmp
ja
shl
inc
es
ins
jg
mov
add
mov
icebp
pop
and
mov
dec
rol
xor
adc
add
push
ds
mov
pop
xchg
inc
jmp
daa
mov
jge
mov
arpl
cmp
cmc
cdq
(bad)
ja
jbe
mov
jmp
movs
cld
mov
cmp
pop
jns
push
sub
push
pop
or
bound
jl
xor
and
cs
jmp
out
push
out
popf
cdq
push
loopne
and
aaa
lahf
or
xor
(bad)
mov
out
jl
xchg
add
in
in
stc
hlt
ins
jo
fldcw
dec
xchg
jbe
adc
shr
push
lds
add
jno
pop
out
mov
fsub
sub
jbe
inc
sar
push
call
hlt
sbb
mov
cmp
adc
loope
jmp
cwd
and
xchg
cmps
arpl
or
test
(bad)
cmp
add
add
mov
pop
enter
repz
fsubp
mov
sbb
mov
cmc
int
cmp
pop
and
sub
cmp
xchg
inc
mov
xor
mov
mov
pop
test
sub
ss
push
mov
jg
push
ja
imul
mov
push
add
mov
repnz
jecxz
pushf
cmc
ret
jo
push
stc
sub
xchg
stos
stos
ins
gs
sub
cmps
call
fbstp
loopne
stc
div
in
hlt
fsub
xchg
dec
cdq
jbe
mov
aas
lock
sahf
xlat
cdq
in
cli
rcl
and
adc
dec
xor
mov
fcom
inc
jp
sub
in
fucomp
pop
mov
mov
add
call
ins
mov
std
iret
push
mov
(bad)
dec
mov
les
mov
pushf
dec
(bad)
sub
dec
add
xor
mov
mov
push
loop
adc
sbb
sbb
xchg
sub
iret
mov
pop
xchg
lods
pop
sub
pop
sbb
cmp
out
test
nop
adc
add
dec
jno
adc
dec
pop
push
xchg
int3
push
dec
sub
push
sub
push
mov
ficomp
dec
mov
outs
jmp
mov
je
and
and
pop
push
push
cmp
xchg
leave
rol
imul
lock
or
out
xor
jle
dec
call
jp
aam
sub
aaa
aad
lea
retf
sbb
dec
imul
in
mov
movs
mov
loop
out
jb
dec
seta
mov
ins
stc
outs
ins
stos
fstp
add
sbb
push
mov
mov
je
pcmpeqb
lds
cdq
fidiv
dec
dec
sbb
sbb
and
(bad)
aad
xor
(bad)
sahf
out
test
sub
xlat
sub
adc
dec
aad
inc
dec
lods
add
adc
imul
mov
fstp
mov
dec
dec
xchg
mov
xor
xchg
movs
xchg
lods
sbb
in
call
aam
imul
pop
test
fidivr
push
inc
and
inc
or
mov
mov
sub
pushf
lods
pop
adc
pop
xchg
push
dec
lahf
xor
ficomp
vpsrlq
sub
popf
addr16
add
mov
mov
sbb
movs
movs
adc
arpl
sbb
inc
ins
rol
dec
jo
pop
pop
jmp
inc
adc
icebp
sbb
loopne
add
or
(bad)
sub
push
inc
mov
scas
repnz
(bad)
sbb
push
rol
nop
jp
call
leave
outs
xor
ins
push
adc
pop
(bad)
add
jae
mov
xchg
loop
push
arpl
retf
in
pop
daa
sbb
dec
sub
jg
cmp
ss
movs
jmp
arpl
mov
jp
dec
and
and
retf
(bad)
pop
fucomi
(bad)
mov
mov
push
nop
out
dec
add
loope
jecxz
cmp
fwait
jge
loope
enter
jmp
stc
shl
xlat
test
mov
stos
sbb
and
sub
mov
push
and
adc
idiv
fld
mov
cmp
sahf
adc
pop
and
xor
and
push
adc
or
jecxz
cld
mov
in
or
stos
pop
adc
cdq
inc
xor
nop
adc
sub
fwait
xchg
dec
(bad)
jae
xor
mov
jecxz
(bad)
sub
shr
jmp
jmp
add
inc
push
loop
mov
cwde
scas
movs
test
stc
sbb
mov
adc
in
(bad)
sti
lds
pushf
pop
fnstcw
mov
xchg
int
mov
mov
adc
fs
xor
jge
outs
outs
mov
fs
push
shl
sahf
loope
repnz
dec
pusha
jl
sub
jg
pushf
mov
mov
jb
lods
mov
xchg
test
bound
push
imul
mov
fcmovne
out
arpl
fucomp
push
push
and
rcl
sbb
sbb
imul
mov
cld
inc
xchg
xor
mov
sub
pop
fs
adc
push
stos
dec
jns
mov
lock
rol
push
adc
jle
inc
fstp
stc
int
(bad)
pusha
add
sub
xor
in
jmp
xor
push
dec
js
imul
rol
lahf
popf
sub
shl
jno
mov
stos
adc
add
stos
push
xchg
or
fsubr
push
add
jge
fwait
repz
and
mov
pop
mov
xor
mov
jns
cmp
dec
mov
repnz
push
jmp
shr
sahf
xchg
fdivr
aaa
mov
ja
(bad)
jmp
aad
or
lods
pushf
inc
dec
enter
adc
push
movs
jmp
push
in
push
enter
jnp
aaa
xchg
adc
push
sub
(bad)
jmp
dec
mov
jecxz
out
leave
jo
mov
mov
sbb
pop
lea
ret
pushf
push
jne
cli
call
stos
jge
pop
das
or
mov
xchg
mov
dec
push
push
mov
ja
jo
cmp
or
xchg
cmc
cld
mov
int
scas
push
fs
loope
push
adc
push
outs
sbb
sbb
pop
jnp
jae
ret
mov
aad
dec
add
inc
test
dec
jge
pushf
add
mov
stos
mov
imul
inc
movq
sub
popa
and
mov
dec
mov
xor
shr
imul
and
jbe
lds
and
add
push
and
push
mov
mov
jge
pop
and
xchg
cdq
lea
test
and
(bad)
cmps
gs
sub
cmp
fsubp
fidivr
js
in
pop
(bad)
sbb
push
sub
push
rol
cmp
(bad)
lahf
clc
jle
mov
iret
mov
jecxz
imul
xor
cmp
out
sub
add
mov
cmp
frstor
and
xor
cmps
cmps
iret
repz
mov
push
sub
cmp
call
(bad)
pop
pop
mov
nop
dec
(bad)
adc
ret
xor
std
sub
es
icebp
ret
movs
or
addr16
movs
nop
cmp
cmp
test
cmp
ret
rcl
mov
xchg
jns
push
inc
daa
stos
xor
(bad)
adc
xchg
iret
sub
xchg
test
fwait
sti
sbb
sbb
pop
xchg
inc
sbb
sub
call
imul
adc
sub
call
enter
sub
lods
call
xor
mov
scas
test
cmp
aad
mov
stos
jmp
inc
or
(bad)
test
push
jg
jo
inc
xor
mov
retf
sub
es
add
adc
mov
icebp
jmp
bound
dec
mov
cli
in
nop
mov
mov
mov
je
and
js
mov
sbb
cmp
stos
and
pop
push
ret
cmp
cmp
xor
loopne
sti
jp
cmp
pop
xor
std
shr
and
out
cmc
mov
inc
push
sbb
fsub
xor
mov
shr
imul
fild
push
icebp
adc
cmp
(bad)
aam
test
add
mov
xchg
pop
movs
sbb
ins
add
fcomp
and
mov
rcr
and
int
and
stos
or
clc
lds
shr
mov
jg
stc
jp
cmc
ins
inc
push
ss
js
xchg
sahf
fidiv
loop
sbb
test
in
lds
iret
(bad)
and
pop
sbb
mov
stc
stos
or
or
xchg
fs
inc
iret
iret
inc
inc
inc
push
inc
nop
jp
popf
and
fldenv
mov
mov
or
(bad)
cmp
or
lock
fdivr
es
test
dec
push
or
fs
das
xchg
and
pop
add
fwait
cld
cmp
or
jae
ja
in
test
add
sub
add
scas
inc
out
fs
or
jp
adc
adc
sub
sbb
mov
cmp
mov
or
outs
loopne
outs
popa
movs
push
cmp
mov
sub
add
icebp
inc
vmwrite
in
int
mov
dec
adc
inc
jg
outs
fcomi
je
outs
mov
xchg
push
clc
mov
or
lahf
lahf
jmp
test
pop
aas
mov
jae
mov
jo
sbb
sbb
sub
mov
stos
pop
jecxz
push
ret
cmp
in
in
xchg
adc
rol
adc
aas
fidivr
ds
data16
dec
or
hlt
xor
lea
pop
lahf
dec
xor
das
dec
xor
or
push
test
sbb
or
mov
mov
dec
jecxz
aas
rcl
icebp
xchg
stos
inc
inc
pop
push
bound
retf
mov
inc
add
cli
inc
cld
jg
mov
inc
in
mov
fild
aad
jmp
add
sar
sbb
xchg
jmp
lea
mov
ret
xchg
mov
pop
cmp
es
push
pop
jl
aam
sub
add
imul
cmc
mov
xor
les
dec
inc
aas
pop
mov
xchg
sub
mov
mov
ds
daa
mov
adc
test
ret
in
movs
xchg
jmp
js
xor
fsub
enter
mov
xchg
iret
push
test
jne
popf
or
push
mov
mov
ds
dec
xchg
mov
push
push
pop
cld
inc
cmps
xchg
mov
sbb
sahf
sub
push
push
xchg
and
or
outs
pusha
pop
mov
adc
rol
and
pop
cmp
ror
push
mov
cmp
shl
add
sbb
and
and
and
xor
dec
iret
fcom
jmp
inc
push
mov
add
iret
mov
pop
dec
and
ins
pop
mov
cmp
test
out
xlat
scas
sub
(bad)
retf
test
and
xchg
pushf
out
mov
rcl
mov
nop
adc
adc
sbb
push
imul
cli
sti
adc
stos
mov
scas
xor
clc
test
sub
inc
push
aas
sbb
push
rol
pop
out
xchg
stos
ja
jae
pop
xor
adc
xor
jns
inc
cbw
add
xchg
xchg
bound
test
cmp
arpl
aaa
cmp
cdq
cmp
jb
inc
xchg
add
call
cmps
icebp
pop
push
inc
add
add
push
pusha
jns
push
mov
scas
pop
dec
lods
adc
and
xor
(bad)
inc
int3
mov
imul
xor
popa
jge
addr16
mov
mov
dec
repz
push
or
inc
add
popf
js
cmps
cmp
push
xor
mov
push
sub
(bad)
dec
or
lods
sbb
mul
fadd
jbe
cmps
xor
nop
cmp
xchg
cmc
out
dec
dec
or
cmp
repnz
cli
stos
jp
aaa
fisttp
mov
dec
and
jp
mov
test
cmp
imul
sub
cld
jnp
jns
sub
dec
mov
aam
push
xchg
popf
sbb
dec
imul
ret
mov
pop
aas
lahf
inc
gs
inc
sbb
inc
(bad)
sub
xchg
and
lds
pop
into
mov
aas
push
lds
xchg
inc
test
loopne
frstor
pop
inc
ds
pop
pop
(bad)
hlt
or
daa
std
outs
jge
add
sub
rcr
xor
dec
fdivr
lahf
retf
cmp
(bad)
lea
mov
fcomp
mov
push
adc
push
add
int
ret
push
mov
sbb
push
not
xchg
cmp
sbb
(bad)
or
aaa
stos
rcl
ins
mov
xchg
pop
test
shr
adc
jmp
or
push
add
repnz
xchg
pusha
sub
or
mov
dec
fscale
dec
dec
pop
lahf
in
int
jno
bound
adc
jp
mov
xor
lods
gs
in
cmp
and
leave
jg
js
dec
cmp
mov
and
inc
and
mov
dec
call
mov
in
fcom
and
push
dec
sub
xchg
hlt
test
add
jo
call
ss
sbb
adc
or
add
stos
stos
cmps
xchg
mov
add
add
ins
mov
(bad)
sbb
and
pop
nop
dec
imul
adc
shl
cmps
lea
jne
sub
xchg
lahf
loop
movs
cmp
out
pop
mov
dec
test
stos
stos
xchg
sub
js
fs
push
pop
call
pop
in
adc
mov
test
les
add
sbb
sbb
or
test
or
mov
pop
into
mov
mov
(bad)
jno
add
or
popa
rol
add
add
add
stos
pop
add
ds
out
and
repz
sbb
add
push
jmp
clc
jecxz
(bad)
pop
cli
sti
cmp
xchg
inc
aam
pop
(bad)
xchg
push
jp
popf
movs
pop
cld
pop
(bad)
add
lds
(bad)
cmp
push
(bad)
in
movs
and
xchg
aam
imul
add
mov
add
test
imul
mov
xchg
add
js
push
mov
mov
data16
js
jl
push
mov
jmp
and
mul
push
xchg
cmp
stos
(bad)
movs
pop
jbe
loopne
out
aas
fild
push
icebp
(bad)
std
lods
adc
inc
pop
push
add
test
sbb
dec
push
lock
sub
mov
add
sub
and
xchg
jp
sub
xchg
repnz
call
push
xchg
add
pushw
test
movs
fs
outs
inc
mov
push
mov
ror
cmp
xchg
cmp
shr
int
outs
mov
in
dec
cmps
cwde
test
inc
add
aad
dec
xchg
cmp
xchg
jl
inc
ds
jg
lods
inc
jno
mov
xchg
ret
sbb
dec
push
dec
in
sub
cli
add
pop
repz
jge
retf
sahf
retf
in
inc
cmps
or
sbb
test
or
add
jle
das
(bad)
mov
sub
(bad)
dec
(bad)
ror
movs
in
in
loope
inc
(bad)
bound
scas
xchg
enter
inc
outs
stos
push
or
mov
jge
push
or
cmc
jno
push
push
xor
fnstcw
mov
sub
xchg
push
dec
cld
sub
scas
inc
sub
nop
leave
dec
push
dec
repnz
fcmovne
mov
mov
inc
push
loopne
in
mov
cmc
fs
xchg
inc
bound
mov
pop
mov
fcmovb
mov
mov
loopne
lahf
push
test
ins
xor
int
ins
aam
cmp
sbb
iret
and
cmp
push
or
xor
sbb
sub
je
lods
scas
call
mov
jno
ds
push
call
xor
js
and
loope
and
inc
fldpi
pop
hlt
imul
lods
test
sbb
xchg
je
inc
or
xor
adc
ss
stos
out
and
ds
lahf
movs
mov
pop
ret
xor
bound
stos
lock
mov
adc
movs
pop
mov
add
mov
scas
mov
iret
in
push
push
sbb
mov
and
rol
in
add
mov
ss
mov
aam
mov
std
js
pop
adc
xchg
dec
scas
xchg
sub
cmps
out
push
test
je
push
imul
or
and
sbb
push
dec
gs
xchg
std
pop
mov
and
movs
rcl
mov
xor
push
mov
rcl
loopne
int3
adc
adc
movs
inc
stos
iret
(bad)
xchg
dec
mov
xchg
mov
sbb
and
stc
add
xchg
mov
mov
xchg
cmc
mov
push
test
xchg
in
aas
lahf
inc
(bad)
dec
sbb
pop
dec
cwde
(bad)
xor
repz
pusha
xchg
jmp
jne
test
call
loop
and
mov
push
mov
daa
fdivr
cmp
aam
iret
xor
lahf
inc
sbb
adc
cmp
push
(bad)
bnd
push
pop
mov
aas
cmp
pop
mov
mov
pop
aam
(bad)
in
hlt
mov
ins
push
dec
ret
sub
push
adc
xchg
icebp
jmp
xchg
movs
add
imul
dec
sub
aam
int
mov
adc
inc
sub
adc
arpl
cli
fisttp
ret
inc
pop
pop
jnp
pop
clc
sahf
or
inc
pop
xor
sub
iret
inc
push
xchg
rol
fwait
push
repz
aam
adc
int
sub
shr
mov
inc
or
leave
movs
jge
test
jns
and
push
xlat
mov
dec
mov
mov
ficomp
aam
jo
dec
out
inc
pop
rcl
inc
and
clc
pop
inc
popa
inc
push
stos
or
mov
pop
xchg
push
dec
sbb
xchg
jmp
push
dec
mov
jno
scas
sub
je
test
bound
cmp
mov
jecxz
sti
push
out
ss
outs
mov
dec
scas
loope
inc
and
dec
xor
movs
mov
jmp
int3
adc
aas
sub
data16
rcr
inc
gs
push
push
mov
and
dec
mov
mov
fist
fiadd
add
idiv
pusha
out
cmps
push
adc
js
xor
addr16
pop
not
pop
pmullw
loope
jns
sub
xlat
mov
jno
stc
gs
dec
test
aad
repz
and
test
ins
dec
or
mov
xor
shl
dec
loop
imul
hlt
inc
into
out
xor
sbb
(bad)
or
add
mov
jae
sbb
loope
scas
jns
xor
leave
push
sbb
fdivr
mov
mov
mov
retf
and
jmp
sbb
mov
sbb
je
push
in
mov
ror
rep
inc
out
mov
int
pop
mov
xchg
pop
call
outs
ds
addr16
mov
rcl
pop
enter
leave
aaa
bound
je
ins
or
pop
(bad)
jl
mov
rol
lahf
pop
hlt
jne
fstp
and
sub
gs
rol
arpl
mov
aas
int3
out
sbb
push
or
pop
loop
stos
mov
inc
lock
adc
movs
inc
ret
test
sbb
sub
inc
dec
and
dec
pop
loopne
fistp
jecxz
dec
je
sub
call
pop
push
mov
sbb
dec
mov
out
jno
mov
and
add
dec
retf
or
shl
push
or
push
das
int
pusha
add
fwait
mov
movs
sbb
push
and
pop
push
cmp
test
dec
arpl
(bad)
sti
mov
push
mov
in
xchg
push
jno
not
out
mov
jle
inc
scas
fdiv
ss
psubq
jb
cmps
sub
push
jne
div
fucomip
pop
sbb
(bad)
shl
push
in
bnd
into
outs
ins
int3
cmp
cmp
call
or
das
xor
sub
mov
pop
sahf
cmp
sti
add
xor
push
(bad)
xchg
inc
add
(bad)
movs
cmp
cmp
xchg
in
arpl
outs
add
xor
jle
hlt
xchg
or
xchg
rcl
inc
push
or
push
adc
inc
mov
xchg
push
and
ins
pusha
xor
cdq
jns
je
inc
xchg
push
push
hlt
mov
sub
rep
(bad)
mov
cwde
pusha
or
clc
push
pusha
add
dec
cli
out
cmp
shl
shl
fwait
(bad)
adc
push
daa
enter
mov
push
dec
push
iret
sbb
mov
add
cmps
cld
sti
or
popa
pop
les
adc
pop
or
push
mul
lea
push
jle
mov
fstp
cld
stos
pop
add
push
bswap
ds
or
ds
mov
movs
movs
xchg
in
jne
sbb
sbb
add
and
mov
xchg
ins
add
punpckhdq
inc
push
xor
mov
je
adc
inc
pop
mov
arpl
push
in
test
jmp
pop
or
out
dec
add
gs
call
mov
xor
sub
or
and
in
mov
outs
adc
sub
(bad)
mov
xchg
(bad)
rcl
pop
push
xchg
add
aam
push
inc
xor
mov
mov
adc
mov
retf
in
inc
mov
mov
pop
push
jge
or
scas
mov
mov
test
jmp
aad
retf
push
imul
enter
add
popa
xor
sbb
gs
adc
pop
outs
pop
mov
cmp
test
cmp
push
or
pop
outs
inc
push
mov
stos
test
rol
mov
or
lods
popf
sub
int3
shl
and
fdivr
sub
mov
adc
shl
inc
xor
sbb
inc
dec
ucomiss
pushf
(bad)
mov
bound
scas
loope
sti
cmp
cmp
sbb
(bad)
pop
dec
stos
mov
pop
inc
cmps
xor
sub
stc
and
add
add
(bad)
add
fxch
xor
out
in
sub
pop
add
dec
shl
icebp
inc
aaa
dec
mov
(bad)
jmp
push
jmp
xchg
jge
push
pop
cld
fidivr
cmp
popf
jns
cwde
pop
pop
add
fnstcw
or
sub
cdq
cmp
int3
ror
sub
(bad)
cmp
fisub
aaa
retf
daa
ins
fisub
mov
mov
add
sub
(bad)
sub
imul
ins
mov
call
je
ins
loope
jo
scas
adc
sub
stc
aam
pop
es
jmp
cli
fcmovbe
je
sub
adc
sbb
scas
iret
mov
mov
mov
(bad)
jne
push
xchg
stos
mov
loopne
jns
nop
(bad)
jnp
retf
pop
sub
movs
add
hlt
scas
dec
push
adc
mov
and
pop
outs
pop
je
loopne
loopne
mov
cs
mov
or
sbb
fs
inc
mov
mov
in
shl
(bad)
lahf
js
mov
jmp
enter
xor
sub
sbb
aas
pop
add
cmp
out
cmp
mov
dec
sub
and
adc
inc
add
sbb
out
mov
jmp
cli
cmp
and
cmps
and
add
mov
pop
or
fdiv
mov
int3
xor
add
push
push
bound
rol
sub
aam
jg
jno
dec
mov
sub
or
out
repnz
aas
aad
fsubr
sbb
jno
pusha
rcl
dec
scas
ins
in
jp
push
loop
mov
addr16
or
add
sbb
push
(bad)
mov
unpckhps
inc
pusha
or
movs
test
push
jge
ins
(bad)
jno
outs
shl
bound
inc
jecxz
or
mov
je
jl
clc
out
dec
pop
fscale
lds
cmp
mov
sti
jno
sub
int3
outs
dec
mov
xor
mov
push
push
lods
xor
or
ss
fcomi
rol
ins
addr16
rol
scas
clc
add
cmp
adc
out
nop
mov
dec
out
or
nop
xor
pusha
dec
or
cmp
push
call
idiv
(bad)
mov
xchg
sub
dec
test
aas
xchg
push
imul
and
cs
push
in
and
aas
je
mov
aas
cmps
sbb
xchg
mov
aam
(bad)
sahf
sub
ror
pop
push
inc
sub
xor
leave
cmp
jmp
lahf
fcmovnb
xlat
mov
mov
psubusb
into
ss
rcl
mov
pop
jle
lds
jge
stos
inc
push
xchg
imul
pop
mov
ficomp
jecxz
add
gs
and
xor
(bad)
pop
dec
jl
mov
rol
mov
sub
cmp
stos
mov
fisttp
pop
in
push
arpl
push
or
dec
jp
fsubrp
mov
dec
mov
fdiv
dec
lea
leave
test
retf
jns
sub
je
movs
jg
lods
fiadd
jecxz
cmp
jmp
pop
shl
add
mov
mov
dec
(bad)
xor
inc
add
push
and
stos
ficom
sub
into
bound
stos
xchg
dec
or
(bad)
dec
fwait
jno
neg
jae
ins
mov
ret
and
dec
(bad)
add
enter
sbb
and
xor
or
gs
mov
mov
nop
push
dec
push
mov
push
jns
movs
or
fwait
jo
cld
pop
cmps
mov
mov
mov
loopne
mov
test
add
retf
sbb
or
inc
stos
popf
push
pop
retf
ret
inc
fwait
jns
xor
call
xchg
sahf
js
sbb
icebp
aam
popf
out
cmps
cli
pop
jmp
jns
mov
clc
add
push
mov
add
or
adc
adc
in
mov
xchg
mov
fisubr
add
stos
cmps
or
mov
jl
sub
lods
jmp
mul
pop
aaa
push
cdq
mov
jb
xor
call
(bad)
repnz
ins
iret
mov
repz
or
dec
scas
lock
ds
jg
movs
push
mov
ja
rcr
imul
jmp
xor
jge
ins
mov
lods
shl
adc
cmp
jmp
and
dec
and
or
mov
(bad)
mov
push
push
xchg
add
dec
scas
dec
xchg
cmp
ret
mov
ret
sub
jl
mov
imul
pop
into
neg
add
sub
cdq
and
mov
mov
inc
pop
mov
xor
sbb
and
cmp
xchg
scas
in
fist
call
mov
fnstsw
mov
dec
stos
xor
sub
cld
sub
dec
out
adc
pusha
xchg
sbb
ins
gs
sbb
retf
adc
out
test
out
(bad)
mov
daa
inc
cmps
scas
and
pop
das
aas
mov
mov
dec
loope
imul
movs
clc
cli
jnp
inc
cmp
jne
mov
pop
xchg
jmp
mov
(bad)
scas
cs
fwait
add
xlat
jmp
jle
(bad)
(bad)
out
jecxz
sub
hlt
pushf
ins
outs
lods
push
(bad)
addr16
ds
cmp
pop
inc
cmp
enter
(bad)
(bad)
out
gs
iret
dec
xchg
les
cmc
jno
push
inc
dec
into
stos
(bad)
in
cs
jecxz
inc
les
sahf
pusha
rsqrtps
aad
cmp
xor
dec
xchg
sbb
ins
call
out
pop
(bad)
cmps
fdivr
mov
test
xor
push
adc
mov
popa
jp
arpl
mov
xor
adc
js
cwde
jmp
test
and
jae
jnp
les
test
push
(bad)
outs
movs
(bad)
push
cmp
leave
(bad)
cdq
repnz
sub
fistp
or
mov
sub
xchg
push
cdq
sbb
das
jae
dec
and
or
xchg
pop
lds
movs
cmp
adc
neg
scas
repnz
ret
add
xchg
pop
out
inc
sar
cwde
fdiv
mov
push
cmc
adc
cmp
inc
dec
(bad)
pop
push
mov
sahf
int3
cmp
movs
sub
push
mov
lea
sub
(bad)
xchg
dec
dec
ja
jge
dec
sub
sbb
push
not
ror
div
cs
adc
cmp
rol
adc
dec
cmp
ret
ins
xor
movs
jne
cmp
inc
jns
adc
loope
sub
pop
pop
push
lea
(bad)
int
inc
ins
xor
inc
and
(bad)
scas
xor
movs
out
outs
retf
push
cmp
(bad)
mov
ret
mov
lea
clc
ret
fwait
lock
jns
fisub
frndint
or
stos
dec
inc
and
movs
add
retf
aaa
je
mov
outs
loop
call
xchg
jb
mov
in
push
mov
dec
daa
fcom
jmp
push
sub
enter
pop
(bad)
imul
or
into
xchg
sub
icebp
test
mov
jge
outs
sar
add
pop
jp
xchg
dec
into
popf
push
push
fnsave
les
add
and
push
ret
cmps
sub
imul
adc
iret
mov
popa
xchg
pop
cmps
mov
data16
sub
inc
sub
fnstcw
pop
fst
xchg
push
ret
nop
aad
cmps
adc
add
(bad)
movs
mov
cmp
sbb
mov
pop
or
cmps
xchg
and
bound
push
pop
shr
jge
call
mov
aad
jl
in
sub
jmp
sbb
ins
in
int
in
pushf
(bad)
jo
mov
or
push
mov
or
aam
dec
jne
lahf
xor
pop
mov
aaa
div
inc
jb
fwait
(bad)
out
mov
inc
xchg
(bad)
and
sub
xchg
push
rcl
and
xchg
movs
aad
dec
cmps
scas
imul
ja
retf
xchg
inc
adc
mov
xor
lods
mov
(bad)
mov
fldenv
mov
(bad)
and
movs
inc
sbb
mov
add
hlt
inc
out
mov
sub
ds
pop
push
cli
fadd
das
pusha
inc
sti
shl
ss
js
xor
sub
xlat
call
push
jg
cmc
or
(bad)
rcr
add
sub
mov
arpl
mov
dec
fmul
data16
(bad)
scas
retf
movs
mov
sbb
(bad)
pop
add
mov
rol
mov
leave
aam
mov
enter
inc
add
(bad)
cmp
cmp
dec
sub
jl
shl
popf
aad
mov
cmp
shl
clc
cld
sti
mov
mov
pop
lds
lds
sti
sub
ja
inc
mov
cmp
sub
mov
jnp
and
icebp
rcl
push
push
and
icebp
lods
call
shr
sti
xor
mov
xchg
jae
xor
cmps
movs
sbb
sbb
aam
lods
imul
dec
jo
(bad)
iret
mov
jne
push
sub
rol
mov
sub
lods
out
and
loop
dec
pusha
dec
cs
mov
inc
jp
jl
test
cmp
(bad)
out
sahf
mov
dec
cdq
aaa
inc
lahf
pop
rol
cmp
xchg
sahf
pop
or
pop
fldcw
fs
adc
sub
bound
xchg
stos
and
fisttp
fucomip
(bad)
mov
je
inc
test
addr16
mov
ds
mov
sbb
adc
js
icebp
cmps
inc
(bad)
icebp
or
push
dec
retf
and
inc
data16
imul
loopne
and
outs
scas
mov
test
push
add
and
repz
push
out
das
mov
bound
mov
mov
hlt
stc
sahf
mov
in
dec
daa
lds
sti
movs
nop
ficomp
ss
retf
jno
repnz
sar
pop
mov
cs
mov
cmps
pop
sub
mov
imul
lds
sbb
jo
stc
jg
mov
and
mov
push
(bad)
mov
adc
sub
sub
dec
push
cmps
xchg
jge
pop
jae
mov
imul
xchg
jecxz
ror
dec
mov
pop
xchg
stc
out
pop
(bad)
dec
adc
jno
adc
pop
xchg
jmp
test
mov
(bad)
jns
sbb
scas
(bad)
shr
dec
aaa
es
jmp
ins
jl
std
dec
sbb
jge
push
dec
pop
xchg
dec
sbb
sub
jnp
shl
cmp
mov
cld
fs
in
xor
xor
test
int
aad
add
mov
test
mov
inc
xchg
push
in
add
fidivr
lock
dec
jp
cmp
dec
adc
mov
add
pop
or
or
sub
jecxz
lds
lods
mov
dec
jg
repnz
cmovb
mov
cmp
sti
jmp
jbe
ret
div
xor
mov
scas
cmp
icebp
enter
jae
dec
adc
imul
addr16
test
cdq
lods
sub
shl
pop
or
push
jg
inc
mov
inc
pop
push
lea
mov
cmp
or
pop
aad
ins
movs
xchg
cmp
jmp
mov
pop
mov
cmps
ds
inc
sub
xlat
xchg
mov
mov
pop
iret
(bad)
mov
sbb
jmp
inc
or
dec
mov
out
and
iret
dec
and
mov
aad
or
jae
inc
dec
cmps
mov
imul
cli
sbb
in
aam
fwait
pop
sahf
and
mov
dec
push
xchg
repz
pop
shl
xlat
add
xor
jne
push
aad
retf
sub
outs
push
inc
add
bound
pusha
cmp
add
mov
cmp
nop
leave
pop
push
push
movs
or
xchg
hlt
stc
or
jmp
in
and
scas
lahf
cmps
repnz
inc
fstp
pop
cmc
jns
fprem
cdq
stos
push
div
sub
(bad)
cmc
mov
out
stos
gs
push
imul
mov
rcl
push
cmp
or
xor
test
push
loope
or
inc
push
cmps
adc
push
cmp
(bad)
jno
dec
add
movs
int3
pop
pop
push
adc
xchg
push
mov
push
dec
addr16
mov
loopne
cmp
inc
fmul
stos
jne
dec
push
(bad)
lahf
sub
push
in
iret
jo
and
inc
or
add
sub
dec
cmp
ja
jmp
ins
inc
adc
mov
mov
aam
aam
cwde
lock
test
xor
jbe
xor
jnp
push
inc
pop
cmp
sbb
mov
je
into
add
js
or
xor
inc
cmp
cs
nop
js
cmps
int3
inc
(bad)
fldcw
push
push
aam
popa
ror
jmp
ret
mov
push
or
imul
adc
sbb
ins
and
jno
sbb
xchg
(bad)
cmp
rol
call
mov
imul
call
adc
add
jmp
cld
leave
mov
hlt
js
xor
call
js
lods
movs
(bad)
xchg
jo
push
and
xchg
mov
jge
mov
cs
dec
lea
popf
push
int
xor
add
lea
jae
dec
mov
dec
mov
add
out
lock
cli
mov
lods
xor
push
and
data16
sbb
cmps
inc
sub
sub
scas
sahf
ds
add
xor
xchg
sub
mov
jecxz
pushf
sar
or
xchg
sahf
pop
cld
movs
jg
je
dec
retf
sbb
xor
push
bound
xchg
sub
push
xor
stos
add
retf
je
stos
and
jmp
or
jl
inc
sub
das
fsubr
lock
les
xor
cmps
add
jmp
in
mov
sub
push
and
jmp
inc
pop
fsub
adc
rcl
xor
movs
adc
push
cmp
mov
jo
stc
std
mov
xor
adc
or
and
inc
and
inc
mov
fistp
test
popa
(bad)
mov
mov
jge
pop
daa
shr
push
cmc
or
push
stos
inc
mov
jecxz
hlt
push
pop
lea
adc
rol
push
xchg
or
cmp
stos
jmp
mov
test
hlt
mov
jle
mov
(bad)
les
in
adc
loopne
xor
lahf
ds
mov
sub
mov
rcr
jge
inc
ss
lahf
jno
jge
jne
push
call
xor
and
fs
fs
bound
pop
outs
cmc
add
lds
inc
mov
dec
jne
lods
dec
movs
pop
in
into
xor
sbb
or
or
iret
cmc
addr16
movs
fsubp
stos
int
sub
mov
nop
pop
jae
(bad)
sbb
popa
cmps
js
fistp
mov
rcr
lods
stos
or
pop
les
int
push
aad
pop
inc
jecxz
cmp
in
ror
jb
out
shl
jp
lahf
retf
mov
xor
and
sbb
lock
dec
int
cmp
jle
mov
jbe
sub
or
ins
adc
popa
lahf
dec
adc
dec
inc
fwait
sub
mov
mov
rcr
sub
xchg
inc
neg
call
es
xchg
or
push
test
xor
in
mov
mov
in
dec
gs
aaa
shl
mov
jo
mov
cmp
stos
and
retf
xor
push
mov
jne
inc
mov
push
mov
pop
cwde
stos
sub
lods
loope
(bad)
fs
add
aam
popf
in
dec
sbb
or
jo
add
int3
pusha
add
lods
push
lea
inc
jl
jg
jmp
les
or
push
mov
out
jno
in
lods
push
leave
add
cwde
xlat
inc
cwde
inc
lea
jmp
add
cmc
mov
ret
data16
cmp
cmp
mov
mov
dec
xchg
in
sub
xchg
scas
and
jle
ds
jle
hlt
(bad)
mov
imul
mov
jae
push
inc
cmps
(bad)
add
lods
movs
push
scas
int
mov
dec
in
lds
xchg
dec
jecxz
cmp
movs
gs
sti
xor
(bad)
dec
neg
ss
push
jl
dec
xlat
cld
dec
sti
pop
ja
jnp
push
jae
push
cwde
frstpm(287
add
dec
in
dec
ror
pop
jecxz
(bad)
jge
out
jge
daa
inc
jne
cmp
rcl
mov
cmp
sub
inc
lods
add
sbb
stos
mov
mov
fwait
dec
mov
enter
sub
xchg
push
ja
inc
out
jmp
pop
ror
xchg
call
bound
stos
mov
mov
js
cmp
enter
or
add
mov
ret
loopne
cwde
div
sub
push
dec
add
sbb
es
rol
dec
not
and
scas
cmp
out
mov
cmp
out
push
(bad)
cmp
imul
inc
lock
pop
stos
push
cmc
not
push
push
test
imul
pop
(bad)
cmc
(bad)
adc
push
call
nop
(bad)
fs
inc
xchg
pusha
daa
lea
cmp
sar
mov
test
pop
cmp
pop
jmp
bound
cmps
lock
adc
cli
hlt
dec
dec
push
out
push
push
pusha
movs
sbb
push
cli
js
add
in
in
movs
add
mov
inc
addr16
inc
bound
retf
xchg
data16
pop
inc
movs
adc
pop
mov
jmp
sub
cmps
cli
jp
sub
add
push
les
(bad)
cmps
cli
mov
pop
test
cmp
lahf
jo
call
sbb
nop
xchg
arpl
aas
icebp
pop
rol
and
ret
mov
xor
jmp
xor
(bad)
(bad)
mov
(bad)
cmp
mov
sub
push
mov
mov
clc
(bad)
test
mov
or
inc
jmp
xlat
xchg
out
outs
push
movs
cld
rdrand
inc
sar
sti
cs
mov
cmps
or
rcl
pop
repz
sbb
mov
mov
and
pop
push
inc
mov
ret
fstp
sbb
or
ret
and
xchg
or
mov
or
inc
das
dec
hlt
xor
aad
add
icebp
xchg
cwde
cmps
mov
leave
jne
not
mov
cmp
fisttp
push
cmp
scas
nop
loope
dec
xchg
or
push
push
and
dec
out
push
pop
inc
cmp
lea
xor
xor
xor
and
xchg
inc
js
push
bound
loopne
clc
div
or
shl
jecxz
or
cli
mov
sub
and
xchg
push
ret
sub
xchg
inc
xchg
sub
call
arpl
and
mov
xlat
fimul
fldenv
adc
cwde
sbb
daa
sbb
jns
call
les
or
lds
and
sbb
lods
sub
dec
adc
leave
sbb
push
lods
sar
sbb
or
mov
jecxz
mov
mov
pop
adc
push
dec
mov
push
std
adc
add
and
lahf
sub
xlat
xchg
je
test
int
into
(bad)
and
xor
retf
xchg
cmp
mov
mov
and
fisttp
dec
neg
add
cmp
push
movs
xchg
pop
dec
inc
dec
cwde
ret
cmp
or
lahf
mov
je
repnz
jne
inc
xchg
xchg
sub
js
ins
push
cmp
and
mov
xchg
mov
xchg
ins
mov
sbb
mov
aam
jge
and
cmp
call
sbb
add
stc
hlt
pop
std
sub
inc
cli
push
addr16
loopne
in
jmp
fld
add
cmp
iret
maxps
pop
mov
cmp
sub
jp
cdq
adc
pop
js
movs
call
xor
in
fld
xchg
mov
lea
sub
sub
loopne
cmp
cmp
lods
jne
mov
add
aas
icebp
jl
mov
xor
jle
loop
pop
xchg
xchg
icebp
fs
scas
loopne
or
pop
js
leave
adc
xchg
adc
and
addr16
mul
jle
pop
mov
into
push
pop
xchg
push
test
pop
adc
sub
sbb
fs
movs
mov
push
inc
(bad)
pop
adc
imul
das
mov
cmp
mov
mov
jecxz
push
and
idiv
shl
bound
push
mov
loop
or
jno
mov
retf
ja
cmps
inc
cli
mov
pop
inc
and
out
mov
push
dec
xor
ret
inc
call
shr
fnsave
xchg
mov
sbb
cmps
int3
inc
call
stos
js
bnd
push
cmp
stos
jns
pop
out
in
sahf
jmp
(bad)
popf
inc
and
cmp
pop
inc
push
adc
dec
and
in
xor
add
js
rcl
inc
push
mov
inc
sub
lahf
pusha
pop
popf
cmp
ins
jbe
mov
cmp
pop
cmp
stos
xchg
jae
cmps
adc
and
mov
cmovle
pop
dec
mov
ret
jae
shl
je
cmp
je
sbb
sbb
cmps
addr16
mov
sub
lds
inc
xor
xchg
sub
ins
push
test
sar
mov
lds
adc
fucomi
icebp
or
shr
mov
(bad)
fcmovnbe
data16
pop
mov
push
fist
dec
test
fisttp
and
rcr
inc
mov
enter
inc
and
jg
loopne
bnd
test
pop
shl
lods
pop
mov
and
cmp
adc
mov
into
add
jle
test
aas
scas
sti
pop
idiv
fsubr
inc
scas
inc
stos
jo
mov
jb
and
outs
add
or
(bad)
sti
or
bound
call
arpl
ret
iret
sub
xor
adc
clc
cmc
cwde
sbb
pop
mov
add
outs
or
adc
scas
ds
lahf
stc
push
int3
xor
test
push
mov
popa
push
pop
sbb
shl
mov
sbb
and
jmp
mov
sub
cs
and
add
sub
and
cmp
repnz
add
ins
in
sub
mov
pop
xchg
hlt
fadd
dec
enter
push
repnz
outs
pop
(bad)
int
pop
out
xchg
cld
xor
mov
stos
jl
sub
push
arpl
cli
arpl
ffree
mov
dec
sub
inc
mov
xor
jecxz
outs
enter
and
stc
hlt
cmp
popa
iret
adc
jg
pushf
mov
or
or
cld
pop
pop
out
push
xchg
jae
or
add
in
inc
aaa
repz
dec
scas
inc
sub
add
dec
add
and
in
std
fadd
jge
dec
mov
test
test
rcr
cmp
ins
sub
ins
stos
mov
mov
jle
int3
mov
pop
inc
ret
push
retf
stc
stc
je
outs
sub
popf
stos
mov
and
pop
xor
jmp
clc
sub
retf
xor
adc
dec
mov
ins
shl
loopne
(bad)
jns
mov
ret
movs
mov
jmp
mov
out
aas
ds
(bad)
movs
js
inc
cmps
cmps
not
cld
xchg
loopne
cmp
lods
popf
xchg
xchg
and
push
push
test
fwait
pop
push
inc
in
les
xchg
daa
sbb
or
mov
gs
pop
jno
cmc
ins
xor
pop
inc
in
cmp
and
loope
sahf
mov
inc
(bad)
push
nop
dec
inc
sar
lahf
out
shl
ret
xchg
repnz
push
cmp
push
push
movs
(bad)
cmp
inc
sub
mov
mov
dec
js
in
cs
or
dec
nop
dec
xchg
imul
(bad)
push
mov
xchg
shl
fwait
in
cmc
push
mov
dec
mov
scas
jns
jae
jns
in
fs
push
cld
fisttp
iret
jge
je
mov
lock
loope
push
dec
sub
adc
aad
jb
and
repnz
pop
jp
xchg
scas
xchg
mov
xchg
xchg
cmp
imul
stos
cmps
push
adc
push
inc
sar
lods
clc
mov
sti
cmp
out
xlat
and
dec
lock
frstor
sub
add
call
mov
inc
and
xchg
mov
mov
nop
aad
test
popa
sub
push
jecxz
int
into
repnz
in
in
loope
repnz
inc
pop
in
xor
jg
js
mov
in
mov
and
mov
imul
ret
dec
jmp
mov
aas
jb
lea
pop
pop
push
xor
inc
inc
std
xor
mov
fimul
loopne
imul
and
lahf
addr16
mov
and
movs
add
out
mov
idiv
shr
xchg
jb
int
dec
sbb
cmp
scas
xchg
xchg
cmp
inc
dec
repz
cmc
and
push
imul
cmps
xor
xchg
in
cmps
pop
cmc
fld
xor
cld
inc
push
and
sub
bound
rol
inc
xor
dec
add
jg
xchg
stos
cmc
sbb
mov
hlt
adc
push
ror
div
jle
dec
loop
hlt
loopne
fwait
xchg
jnp
mov
mov
rol
rcr
push
xlat
into
xchg
daa
std
push
jmp
cdq
inc
push
jmp
stos
mov
sahf
and
retf
mov
stos
adc
nop
scas
xor
sbb
nop
and
ins
loope
aad
or
pop
outs
push
xor
sbb
dec
js
push
bound
pusha
not
mov
xchg
mov
xchg
or
sub
sbb
xchg
(bad)
fistp
inc
push
daa
call
sahf
dec
mov
add
bound
in
mov
dec
mov
aam
add
scas
jp
fcomip
int
xchg
jbe
mov
mov
out
loopne
shr
fnstcw
push
mov
mov
xor
icebp
mov
jns
mov
dec
or
jmp
out
scas
outs
in
dec
out
outs
lods
sbb
cmp
pop
add
int3
test
push
call
iret
mov
movs
xchg
mov
or
test
cmps
int3
or
mov
mov
mov
fidivr
std
es
add
sub
mov
ret
sub
jl
mov
xor
push
or
cmps
xchg
mov
sbb
inc
fld
mov
and
sub
sti
dec
movs
js
mov
popf
and
jne
sub
fdivr
sbb
cmp
imul
adc
stos
loop
or
jo
stc
mov
pop
je
outs
xchg
aad
add
jl
sub
add
pop
sbb
int
sahf
movs
retf
xor
and
xor
sbb
inc
jnp
xlat
imul
pop
mov
aas
loopne
mov
out
fwait
mov
mov
rcl
mov
add
sbb
jge
call
stos
jno
push
fisub
call
inc
fcomp
test
sub
jb
cmp
scas
fidivr
xchg
stc
inc
xchg
push
push
out
sbb
sub
add
movs
ds
rcr
cmp
inc
inc
inc
pusha
sti
lods
or
mov
mov
cmp
aam
lods
xlat
or
fdivp
pop
cwde
not
fsubr
pop
out
(bad)
aam
je
shr
das
(bad)
outs
mov
xchg
test
add
movs
push
and
aam
dec
push
dec
daa
add
inc
sub
jne
inc
xchg
test
inc
push
retf
xor
fs
sti
mov
aad
jo
and
or
adc
imul
cmp
test
dec
in
inc
icebp
push
mov
jno
rol
in
call
test
inc
rcr
retf
ret
int3
repnz
pop
fcmovbe
bound
test
inc
call
(bad)
cmc
adc
scas
call
fcomp
pop
mov
jmp
jg
jmp
ins
push
sbb
std
aam
inc
mov
or
test
mov
pop
jmp
retf
add
mov
(bad)
lods
push
adc
sbb
or
out
ss
loope
sti
pusha
or
pop
mov
xchg
cmc
sbb
dec
je
mov
test
retf
sbb
je
or
mov
out
std
outs
popa
in
xor
cmp
cmps
mov
clc
inc
(bad)
retf
inc
aas
inc
mov
sbb
mov
mov
sub
jp
cmc
push
mov
icebp
lds
or
xlat
(bad)
mov
scas
inc
xchg
jns
pop
fcomi
dec
loopne
sbb
pusha
push
fimul
push
jle
jmp
and
inc
ss
or
pop
jp
test
dec
aam
push
rcl
(bad)
out
mov
dec
sub
xchg
inc
pop
pop
std
jmp
mov
lods
dec
push
pop
mov
in
sub
pop
loope
pop
or
ds
mov
jg
dec
repnz
imul
fimul
jp
jmp
shr
scas
sbb
enter
popf
inc
mov
(bad)
(bad)
stos
fsubr
xor
call
cmp
sub
and
dec
sub
mov
test
scas
inc
push
leave
test
mov
adc
adc
fimul
push
(bad)
cmp
gs
fs
lds
dec
cmp
mov
jp
mov
xchg
sbb
xchg
out
add
int
out
stos
mov
pop
nop
cmp
mov
lods
mov
push
js
sbb
jecxz
adc
adc
push
mov
mov
xchg
xchg
push
mov
mov
xchg
add
cdq
add
repz
retf
scas
mov
retf
cvttps2pi
movs
movs
mov
push
push
or
ja
clc
jno
and
mov
jne
pop
ins
aam
mov
lahf
or
mov
xchg
sub
ret
and
or
data16
inc
xchg
mov
mov
mov
movs
inc
imul
inc
pop
mov
vpunpckhbw
and
cli
es
repz
adc
lock
pop
mov
and
sub
or
into
xchg
xchg
jne
sub
lahf
aam
fild
aaa
cmp
call
adc
dec
jne
add
btr
jmp
mov
lods
adc
push
add
movs
sub
loop
lods
adc
rcl
inc
cmp
mov
in
cmps
lock
movs
cmp
int
pop
movs
xlat
clc
and
mov
loopne
(bad)
sbb
sub
ret
add
push
mov
mov
mov
mov
push
stc
je
ins
and
ins
scas
cmp
push
mov
rcr
dec
jmp
xor
es
inc
out
jmp
mov
out
pop
in
mov
aaa
adc
adc
outs
jecxz
xor
xchg
aam
xor
mov
pop
dec
adc
and
push
(bad)
fisttp
cmps
or
lahf
mov
cmps
cmps
(bad)
mov
stos
mov
pusha
mov
xchg
xchg
cmp
mov
mov
dec
mov
mov
fistp
sub
push
xor
push
loop
xor
icebp
test
out
fild
xchg
sahf
imul
push
or
mov
or
push
cmps
xor
push
inc
hlt
int
imul
sbb
and
adc
bound
loope
push
sbb
add
push
cmp
jae
push
aaa
add
xchg
out
mov
xchg
in
jp
jg
aaa
pop
in
fdivr
push
shl
push
in
fstp
xchg
inc
mov
dec
mov
mov
jb
js
mov
sti
xor
arpl
pop
dec
scas
dec
push
data16
push
pop
jle
jmp
dec
scas
push
int3
push
cmp
stos
inc
out
shl
xchg
adc
retf
shl
xor
push
sub
test
stos
imul
pop
and
int3
test
int3
inc
out
std
cmp
out
cdq
cwde
add
xchg
and
mov
sahf
xchg
test
cmp
fisubr
dec
jecxz
pop
out
inc
xchg
mov
push
xchg
or
bswap
cmc
arpl
das
add
loop
ficomp
inc
movs
mov
iret
sub
mov
dec
jbe
and
out
inc
into
adc
mov
out
mov
sahf
adc
fucomi
xor
lds
add
add
stc
shl
std
scas
stc
pop
aad
repnz
sub
test
and
jecxz
ror
movs
mov
mov
push
sbb
push
in
mov
dec
in
jbe
push
cli
je
aas
mov
jb
sbb
lds
sub
(bad)
push
mov
(bad)
jne
shr
add
test
aaa
sbb
repz
dec
add
test
sar
es
jo
cmp
dec
enter
inc
das
inc
pop
mov
push
sub
shl
mov
dec
or
sub
push
enter
dec
leave
add
aas
inc
popa
ds
jl
scas
sbb
movs
xchg
adc
imul
sti
add
dec
ret
pop
fidiv
sub
cli
sub
jne
mov
mov
test
imul
xchg
bound
cmp
xchg
xor
xor
adc
sbb
xor
out
test
fadd
dec
xor
test
and
and
lock
dec
cmp
dec
xor
(bad)
enter
lock
ds
mov
movs
dec
mov
(bad)
popf
sbb
lods
movs
(bad)
fnstsw
mov
xor
add
xchg
movs
jle
scas
push
xchg
xchg
imul
mov
test
mov
cld
pop
popa
(bad)
adc
retf
test
sahf
call
les
repnz
mov
retf
cld
imul
aas
pop
jne
jmp
xor
pop
jmp
dec
jmp
sub
add
jns
(bad)
outs
mov
ins
xchg
or
push
push
gs
mov
cmc
jo
jmp
cli
xchg
sti
mov
mov
pop
xor
stc
je
(bad)
arpl
inc
xchg
shr
jg
and
rcr
inc
push
enter
bound
sub
push
add
cdq
cmp
iret
sbb
test
aam
dec
sub
retf
add
std
retf
or
iret
outs
popa
sub
aam
scas
push
shr
stc
(bad)
pop
cmovb
iret
push
adc
mov
das
(bad)
fsubr
jge
mov
loope
gs
test
and
add
or
inc
cmps
fild
out
not
repz
push
pop
xor
aas
sub
jge
mov
out
jg
adc
add
test
pop
dec
mov
div
xchg
rol
aad
mov
rol
and
adc
dec
xor
test
mov
jge
pop
and
dec
rcl
movs
lea
or
pop
cmp
(bad)
mov
dec
lahf
test
imul
xchg
je
xor
xchg
cli
inc
jne
or
pop
push
add
inc
sbb
clc
(bad)
mov
out
icebp
pop
jmp
clc
(bad)
cli
mov
(bad)
cmp
mov
adc
data16
sbb
pop
scas
or
dec
retf
movs
lods
cmp
or
jns
sbb
xchg
int
push
aad
arpl
mov
or
ins
lahf
push
jbe
add
add
shl
lahf
inc
mov
movs
gs
push
push
add
cwde
jg
addr16
xchg
push
mov
gs
dec
sub
cmps
(bad)
pop
movs
sbb
sub
or
jle
cmps
mov
xchg
mov
mov
and
adc
loop
add
fwait
imul
ins
xchg
je
sub
adc
out
mov
repz
push
push
std
mov
add
cmp
call
and
inc
dec
repz
or
push
mov
lods
sub
add
hlt
(bad)
fldenv
mov
xor
in
ror
xchg
cwde
xchg
aas
mov
mov
inc
inc
scas
cmp
pop
adc
cmp
sub
shl
or
ins
mov
sbb
movs
pop
cmp
(bad)
mov
xor
cdq
cmp
in
sub
mov
sub
jg
dec
xor
stos
jmp
mov
retf
inc
xchg
scas
mov
and
dec
scas
retf
in
scas
sub
movs
test
movs
dec
inc
mov
sub
or
xchg
inc
out
xor
xchg
int3
cld
bsr
mov
ins
mov
or
inc
pop
push
xor
pop
inc
add
lods
or
leave
mov
(bad)
sar
and
push
mov
jmp
mov
xlat
jecxz
mov
retf
push
inc
push
dec
xchg
sub
pop
sub
push
(bad)
int3
sbb
and
sahf
out
and
sbb
jecxz
sub
sub
push
dec
sbb
cmp
sbb
sub
aam
adc
push
or
cmp
jne
jo
xor
xor
unpcklps
mov
or
cmp
shl
sub
cmp
cmova
stos
cmps
fcom
icebp
cmp
pop
cmp
leave
adc
int
and
xor
add
loopne
sbb
rcr
bound
retf
and
movs
mov
out
mov
mov
stos
mov
add
cmp
xchg
jae
cmp
ret
dec
cmp
inc
sub
pop
mov
outs
das
(bad)
daa
fsubr
inc
fld
(bad)
mov
fld
stc
sahf
mov
push
in
iret
xor
xor
dec
mov
sbb
call
popa
in
add
scas
out
xor
fsub
mov
pop
xor
shl
cmps
mov
scas
mov
test
sahf
in
add
add
repz
mov
mov
sub
push
call
and
mov
outs
hlt
cmp
add
cli
sti
mov
jge
test
push
call
(bad)
xlat
cmp
push
fadd
div
and
jg
loopne
int3
addr16
and
inc
jmp
cmc
xlat
cdq
pop
lods
jecxz
scas
sub
mov
mov
retf
in
(bad)
mov
out
(bad)
xchg
arpl
mov
jmp
push
cld
leave
pop
in
hlt
sbb
bound
(bad)
adc
cdq
repnz
pop
iret
retf
mov
push
cmp
je
loop
lds
mov
test
push
data16
(bad)
div
push
xlat
adc
(bad)
stos
aas
dec
dec
push
inc
jl
add
mov
or
pushf
adc
add
pop
ja
dec
mov
loop
into
retf
sbb
adc
mov
xor
std
add
add
dec
(bad)
shl
dec
je
std
cmp
cmp
imul
dec
pushf
pushf
jl
in
ds
repnz
xchg
mov
test
fidivr
xor
test
pop
outs
loop
movs
ja
jbe
inc
dec
sbb
mov
sub
dec
push
aam
outs
or
inc
ds
jns
xlat
aaa
repz
mov
and
xchg
push
inc
(bad)
push
lods
mov
mov
adc
stos
sahf
and
or
mov
or
add
pushf
add
mov
dec
test
sub
mov
add
cmps
dec
pop
mov
(bad)
data16
add
nop
aas
(bad)
mul
imul
jbe
and
or
mov
add
shl
mov
mov
dec
or
stc
and
cwde
out
int3
call
cli
ret
test
xchg
mov
imul
ins
mov
stos
inc
sbb
sbb
int
push
out
sub
sbb
xchg
sub
adc
or
or
movs
xchg
jne
mov
inc
mov
outs
outs
out
and
scas
ret
mov
dec
adc
shl
test
mov
scas
inc
aaa
outs
shl
mov
sub
push
dec
sub
data16
aad
inc
mov
push
(bad)
sub
or
sahf
xor
inc
cmp
and
mov
push
sub
outs
gs
adc
lahf
mov
xlat
mov
inc
push
cmps
pop
movzx
pop
movs
xchg
sbb
pushw
adc
push
inc
push
push
imul
jle
fild
popa
out
mov
shl
xchg
mov
inc
pop
mov
imul
adc
mov
js
push
inc
or
xor
idiv
and
inc
push
test
sbb
and
lea
nop
shl
push
pop
sub
jge
mov
push
adc
xchg
test
cwde
(bad)
cmp
int3
test
sub
pop
pop
sahf
sub
sbb
movs
add
lea
mov
or
loop
push
mov
mov
or
popa
hlt
mov
push
pop
pop
ret
(bad)
fdivr
xchg
pop
sahf
psubw
jp
dec
pop
mov
xchg
div
adc
(bad)
ror
call
xor
sub
and
loop
mov
call
repz
dec
xchg
xor
pop
scas
scas
cmp
fiadd
stc
das
sahf
aas
cmp
push
add
mov
cmp
push
call
rcl
popfw
aaa
mov
xchg
sbb
adc
mov
imul
ja
pushf
psubb
je
sub
push
test
in
push
repz
cmp
ja
xor
enter
add
pop
loop
jmp
dec
test
scas
sub
mov
jnp
ja
pop
xchg
movs
sbb
push
lods
inc
xlat
sub
shl
mov
xor
dec
add
jnp
aam
jne
push
mov
ror
xchg
call
ins
in
leave
and
pop
push
mov
loope
inc
mov
xchg
sbb
xchg
sub
xchg
mov
sbb
lock
pop
pop
inc
clc
fadd
mov
fsubr
push
fisubr
(bad)
xor
test
push
cmp
jle
jle
adc
adc
mov
xor
push
es
mov
jle
jmp
into
fimul
es
and
popa
stos
mov
in
inc
aam
sub
pop
and
pop
test
(bad)
retf
fwait
stos
cdq
push
fisttp
sub
jmp
fsubr
dec
adc
add
jl
pop
in
add
lods
cdq
int
dec
aad
das
daa
popf
xor
(bad)
adc
push
or
mov
push
icebp
lea
cmp
(bad)
inc
div
loopne
ret
enter
mov
mov
jl
dec
and
iret
ins
movs
dec
pop
inc
jecxz
add
call
mov
push
scas
jl
and
xor
xchg
xchg
pop
pop
hlt
lods
dec
adc
sub
push
push
push
cmp
fmul
pop
ret
sub
fcmovu
imul
rcl
mov
lea
jnp
shl
push
push
pop
xor
add
aam
push
mov
dec
mov
punpckldq
popa
fdivr
jns
shl
cmp
cmps
dec
xchg
pop
xchg
clc
sub
mov
sbb
imul
lahf
sub
adc
stos
sub
inc
sbb
inc
mov
pop
hlt
add
fwait
imul
jmp
sub
push
stos
imul
punpckhbw
sub
retf
mov
(bad)
fist
pop
mov
xchg
out
es
inc
inc
pop
xchg
mov
xchg
mov
sub
movs
pop
inc
mov
out
cwde
mov
cmp
or
scas
imul
sahf
add
mov
pop
xor
inc
scas
aas
stos
lahf
cmp
adc
xor
call
pop
sub
pop
ret
cmps
adc
js
cli
pop
pop
in
and
shl
mov
out
nop
xchg
and
(bad)
test
rcr
(bad)
xchg
dec
xor
cmp
xchg
daa
cmp
mov
movs
movs
and
xchg
mov
pop
imul
cmps
hlt
or
mov
fidiv
dec
jnp
stos
add
add
xor
in
hlt
xchg
cmc
pop
popf
mov
and
test
rcl
mov
inc
jne
xchg
stos
ffree
retf
push
xchg
jg
test
push
das
(bad)
mov
in
loope
js
and
adc
pop
enter
push
loopne
sar
shr
push
cld
aas
ds
outs
xchg
sub
idiv
repz
mov
adc
mov
mov
movs
sbb
inc
and
mov
mov
ja
(bad)
(bad)
cmp
fs
push
movs
loopne
push
scas
dec
and
std
popf
sub
and
sbb
imul
aas
push
sti
jmp
call
cmp
xlat
shl
movs
add
push
fwait
lds
mov
loopne
and
xor
loope
jmp
push
scas
pop
movs
jp
mov
loope
mov
neg
movs
je
inc
xchg
adc
mov
dec
adc
sbb
(bad)
pavgb
adc
cmp
lods
ds
cld
(bad)
fcmovnbe
jmp
add
xor
rcl
ds
bswap
xchg
cmp
pop
pop
mul
cmc
mov
inc
xlat
into
icebp
mov
jecxz
xchg
push
add
jecxz
push
ss
xchg
out
shr
mov
popf
inc
dec
rcr
cmp
mov
test
cmp
lods
in
ret
popa
dec
xor
jecxz
sar
or
adc
bound
mov
xor
mov
jmp
jge
and
and
cld
cmp
stos
int
push
nop
imul
arpl
repz
data16
jmp
mov
call
push
dec
sub
fdivr
pop
dec
fild
into
lds
pushf
aaa
or
mov
mov
xor
daa
cmp
sahf
xchg
lods
retf
cmp
pop
cmp
cmps
adc
or
add
inc
in
xlat
push
sub
ins
mov
adc
clc
out
lods
arpl
les
mov
lea
nop
sub
jns
jmp
adc
or
stc
bswap
sbb
sbb
cdq
jmp
sbb
sub
inc
int
test
and
inc
idiv
(bad)
sbb
les
hlt
out
jae
fistp
icebp
pop
stc
cmp
out
add
cmps
adc
std
mov
inc
add
fwait
pop
jno
jge
mov
sbb
xor
push
ds
ds
(bad)
cli
test
jmp
inc
fucomip
or
sbb
neg
stos
dec
test
or
mov
loopne
(bad)
in
adc
mov
and
scas
mov
test
inc
stos
sbb
das
out
cli
outs
test
pop
mov
retf
imul
mov
push
mov
dec
movs
bound
fsubr
aam
ret
mov
push
jg
fistp
sbb
icebp
sbb
cmc
add
cmp
adc
jge
pop
dec
hlt
dec
ss
add
jmp
cld
imul
xor
je
add
(bad)
sbb
jmp
aas
mov
mov
xor
jb
lods
jae
xchg
retf
movs
stos
mov
rcl
fsubr
lds
sar
je
(bad)
or
retf
sar
mov
dec
xchg
xchg
ret
fstp
adc
jb
aaa
pop
std
jg
fstp
out
test
call
lods
call
push
jg
xchg
cwde
jl
jmp
das
xchg
cmps
sti
mov
inc
jno
push
and
xor
into
or
pusha
lfs
scas
mov
jo
(bad)
jns
cmp
stc
jmp
and
mov
add
add
xor
mov
je
(bad)
hlt
(bad)
lock
in
ret
mov
pop
rcl
push
shr
xlat
in
push
cmp
jle
out
sub
sub
add
movs
push
add
mov
push
rcr
leave
sbb
loopne
add
push
inc
sbb
out
or
daa
nop
inc
dec
mov
dec
(bad)
sub
mov
xchg
jo
and
in
ja
fmul
aam
repnz
ins
fiadd
scas
scas
sbb
sbb
adc
into
gs
pop
dec
sbb
popf
adc
xchg
jns
push
(bad)
mov
sahf
jmp
push
or
jge
test
sbb
or
xor
push
inc
ror
loopne
jne
jns
imul
mov
mov
imul
and
mov
dec
test
in
xor
fcmovnbe
rcr
xchg
(bad)
and
jo
cmp
sahf
jae
sahf
sbb
mov
and
ins
sbb
push
jp
dec
push
and
call
inc
lods
mov
add
jge
idiv
dec
xchg
or
adc
xchg
pop
add
adc
push
scas
inc
cmps
scas
scas
shl
loop
or
aad
mov
nop
aas
fdivr
xchg
and
mov
out
in
mov
jb
in
mov
rcl
rcl
je
pop
mov
repz
push
push
lock
scas
jno
dec
adc
fcom
pop
or
es
(bad)
addr16
push
dec
enter
ret
or
movs
test
dec
or
and
int3
(bad)
cmc
inc
ds
jb
sahf
(bad)
jge
cs
fsub
imul
test
jno
dec
jmp
mov
mov
(bad)
je
inc
loope
mov
adc
xchg
sub
add
xor
add
jmp
or
je
in
sahf
mov
ins
dec
sbb
pop
jge
xchg
cmps
(bad)
sbb
mov
aad
inc
scas
inc
sub
adc
pop
inc
sbb
retf
push
mov
mov
cs
jl
jb
push
xor
or
dec
jl
xlat
cmp
lahf
mov
shr
mov
addr16
sub
inc
adc
sub
and
repnz
cmp
cmps
xchg
inc
xchg
stos
sbb
and
fs
out
les
sti
xchg
sub
sub
cmp
add
xor
stc
hlt
gs
pop
stos
dec
add
nop
imul
test
sub
add
xchg
mov
dec
inc
pop
cmp
jle
push
ins
jg
fstp
push
cmp
jnp
push
ret
lahf
data16
loopne
iret
pop
jne
add
xchg
int
cmp
add
inc
jmp
rol
inc
iret
(bad)
lods
jne
dec
test
add
lock
inc
loope
push
ficomp
mov
scas
xchg
imul
les
pop
in
add
pop
mov
movs
sub
add
jmp
(bad)
aas
push
je
add
mov
dec
adc
das
push
adc
test
outs
clc
push
push
out
ds
lock
pop
in
pop
cld
inc
sub
jb
in
leave
jmp
lahf
mov
or
mov
mov
inc
jmp
or
call
imul
mov
adc
(bad)
push
jecxz
jge
neg
test
inc
xor
fcmovnb
int3
mov
mov
mov
nop
jl
jb
stc
jno
inc
push
push
je
int3
adc
pop
adc
mov
mov
(bad)
fcomp
jnp
xor
pop
dec
pop
cmps
jae
jmp
inc
mov
lods
dec
sub
jb
ret
in
sub
mov
dec
icebp
sub
(bad)
aam
push
gs
in
retf
sbb
mov
rcr
jns
mov
adc
test
test
lock
shl
and
stos
push
in
int
imul
call
cld
dec
cmp
test
aam
pusha
adc
out
(bad)
dec
hlt
repz
add
rcr
add
sti
cs
push
lods
jo
imul
mov
jge
ds
jmp
outs
inc
and
cwde
enter
xchg
inc
jbe
inc
dec
cmc
(bad)
jae
stc
adc
mov
(bad)
mov
out
arpl
nop
cmp
pop
lock
inc
mov
mov
dec
mov
sbb
pop
fidivr
int3
mov
cmp
mov
outs
sar
push
ja
jb
test
and
jl
retf
shl
data16
ins
pusha
add
sbb
adc
stc
mov
movs
pop
outs
jecxz
xchg
mov
rcl
cmp
mov
jl
imul
arpl
into
jmp
dec
jne
and
cmp
nop
dec
or
or
jno
sbb
or
call
out
cmp
xor
mov
dec
test
cmp
mov
mov
mov
push
xor
lods
fild
or
adc
pop
jo
je
sub
lock
pop
xchg
(bad)
pop
or
mov
inc
and
dec
xchg
jbe
push
add
adc
clc
(bad)
pusha
int
daa
cli
jbe
and
push
cmp
je
jnp
shl
inc
ret
retf
cmp
stc
xlat
cmp
pop
sahf
lods
sub
std
ror
inc
mov
adc
xor
movs
sub
pop
ins
or
fsub
ins
mov
cmp
in
sbb
in
jo
pop
xor
(bad)
jg
jmp
jle
retf
rcl
inc
sets
sbb
mov
enter
pop
sar
cmp
jno
pop
and
psllq
cmps
jbe
cmp
and
loope
stc
pop
mov
pop
cmps
push
retf
pop
loop
dec
lock
rol
jecxz
sahf
xor
mov
movs
jge
call
outs
bound
stos
inc
cdq
fwait
push
inc
nop
mov
test
push
inc
sub
ror
(bad)
or
mov
ds
imul
jge
in
cwde
jmp
mov
retf
cmps
mov
mov
mov
(bad)
inc
sti
imul
iret
xor
cdq
add
std
sub
fwait
jmp
ss
pushf
call
popf
add
stc
sbb
mov
jns
push
inc
dec
sub
fsubr
xchg
add
mov
pushf
add
(bad)
cld
mov
dec
adc
mov
lea
mov
ret
sti
push
out
push
ror
mov
push
and
mov
xor
outs
push
mov
pushf
jmp
cwde
sub
push
movs
mov
sub
aam
stos
bound
js
dec
mov
ds
leave
das
and
dec
push
adc
sbb
aas
dec
mov
inc
mov
xchg
das
mov
cmp
add
int
inc
dec
cmp
ds
das
push
push
add
cmps
(bad)
push
stos
push
pop
repnz
fs
dec
xor
push
adc
xchg
dec
retf
adc
dec
adc
mov
int3
inc
mov
push
out
aas
int3
cli
je
std
bound
shr
iret
adc
out
xor
push
out
popf
xor
mov
bound
add
mov
push
xchg
cmps
movs
push
idiv
and
aaa
jbe
repnz
mov
or
shl
stc
cli
lock
ds
iret
lods
or
jle
xchg
call
pusha
nop
and
aad
daa
push
(bad)
inc
mov
xor
test
call
xchg
pop
adc
rol
pop
and
mov
push
retf
mov
and
push
dec
and
je
mov
pop
inc
inc
or
add
hlt
hlt
repnz
xchg
cwde
call
scas
mov
inc
sub
bnd
and
mov
push
ret
pop
shl
repnz
scas
rol
test
mov
jl
call
add
daa
xor
sahf
sub
loope
add
ret
retf
pushf
(bad)
or
push
mov
aam
fs
push
jmp
out
pop
call
scas
stos
fcmovnb
sbb
ds
push
cwde
mov
and
push
mov
jg
repnz
mov
add
xchg
mov
(bad)
jo
mov
fwait
xchg
ins
push
int3
push
mov
fidivr
cmp
adc
dec
xor
inc
mov
aam
sbb
pop
inc
jecxz
popf
fbstp
daa
xchg
cwde
sub
push
xchg
jb
sub
mov
imul
imul
aas
xchg
mov
jl
sbb
mov
fldenv
imul
vphaddubw
jge
aaa
aaa
jae
outs
jnp
fiadd
fiadd
add
(bad)
xchg
loope
(bad)
jge
mov
addr16
inc
stos
movs
xchg
dec
xchg
pop
mov
sbb
cmp
mov
push
inc
shl
xchg
call
adc
not
sbb
es
pop
dec
cmp
js
inc
sbb
test
shld
out
in
adc
jmp
outs
xchg
into
cmc
jbe
rcl
add
sar
enter
cmp
mov
or
jns
cmps
test
push
outs
cli
fwait
cmp
leave
out
mov
shl
add
pop
adc
sar
jbe
pop
ins
test
cmps
aam
scas
xchg
test
mov
imul
sbb
dec
sub
es
push
lock
xor
push
xchg
inc
nop
push
pop
lahf
pusha
stos
call
pop
and
inc
call
pop
push
fld
add
sbb
cmp
pop
or
lods
fs
sub
mov
pusha
arpl
xchg
push
mov
leave
outs
rcr
daa
dec
enter
push
sub
pop
lahf
inc
or
call
add
iret
cld
popf
sub
in
cmp
xor
(bad)
out
cmps
fdivr
jnp
aaa
mov
xchg
dec
movs
inc
mov
pop
enter
xlat
retf
xor
and
push
cmp
das
mov
sahf
call
nop
dec
cmp
aad
or
ror
aam
ss
inc
mov
scas
adc
add
mov
clc
lods
lea
inc
pop
adc
scas
xchg
iret
in
jmp
sbb
dec
(bad)
adc
inc
jne
rol
cmp
lds
push
(bad)
xor
xor
js
cwde
call
bound
and
cmp
cmp
xlat
cmps
jge
push
push
push
aaa
icebp
cmp
hlt
dec
addr16
gs
cmps
pop
dec
rol
add
jge
pop
fsubr
loop
lods
dec
xchg
jo
jmp
fisubr
arpl
sub
clc
(bad)
push
daa
xor
jg
sub
xor
inc
add
fstp
xchg
sbb
pop
inc
rcl
push
fbstp
xchg
sub
and
dec
and
(bad)
fdiv
adc
test
ret
dec
cmp
dec
or
repnz
std
mov
addr16
mov
xchg
push
(bad)
enter
mov
mov
aas
test
stos
sbb
lods
pop
lock
icebp
or
mov
mov
adc
outs
in
cmp
(bad)
arpl
jo
mov
jbe
xor
and
add
popa
pop
pop
shl
aas
loop
mov
xchg
mov
add
leave
iret
push
adc
mov
pop
sub
mov
push
xor
lds
(bad)
cli
add
sbb
or
ror
adc
test
shr
pop
ror
sub
push
js
jg
cmps
inc
inc
(bad)
sbb
int3
cmps
inc
adc
stos
pop
mov
xor
les
call
shl
pop
mov
retf
sbb
add
ins
call
idiv
mov
and
lods
js
pushf
lock
cmp
movs
jbe
call
dec
dec
or
mov
sub
call
sub
neg
scas
outs
outs
jne
lahf
retf
neg
int
push
hlt
add
dec
sbb
iret
int3
push
stc
jo
inc
sti
lods
in
push
lods
jns
scas
lock
frstor
inc
dec
std
xchg
movs
cmp
not
cmps
retf
dec
stos
pop
mov
xchg
test
adc
mov
cmp
pop
push
mov
stos
daa
test
xor
(bad)
daa
sbb
dec
add
push
pop
mov
push
rcl
mov
repnz
xchg
clc
xlat
xchg
mov
or
add
push
xlat
shl
(bad)
fstp
xchg
in
xor
sub
imul
imul
push
sbb
mov
mov
stos
mov
add
aam
pushf
jp
(bad)
out
mov
shl
sbb
adc
(bad)
adc
lock
(bad)
cmps
lds
(bad)
daa
dec
sub
or
push
sub
add
pop
push
out
ins
int
aaa
push
xor
fwait
jl
rol
and
sub
add
cmc
test
in
hlt
movs
stos
in
pusha
push
adc
sbb
cmp
pushf
jo
arpl
or
cmp
out
in
jmp
sub
imul
jae
mov
xlat
sbb
push
mov
push
adc
mov
mov
mov
sbb
sahf
sbb
xlat
sub
pop
jo
mov
pop
push
mov
cmp
lds
sar
rcr
fwait
out
dec
jle
and
(bad)
sbb
cmc
pop
push
cmp
test
xchg
cmp
mov
aas
rcr
xchg
movs
test
fs
cmc
cmp
mov
aam
add
mov
mov
add
or
add
push
pop
inc
xor
scas
push
mov
in
lea
xor
adc
mov
(bad)
dec
sub
pop
fsub
pusha
add
lds
std
xchg
lds
icebp
mov
lods
mov
cmps
and
sar
lahf
push
mul
cmps
cmp
pop
mov
stos
loopne
mov
call
xor
jmp
ins
xor
or
aam
jecxz
sub
push
mov
imul
xchg
mov
cmp
jno
jo
(bad)
xchg
sub
add
jns
add
jecxz
mov
push
and
xchg
jle
cmp
repz
cmp
mov
xor
bound
cli
push
sub
repnz
inc
and
inc
pop
cmovl
pop
idiv
jnp
jb
push
xor
sub
test
pop
and
and
and
pop
sub
in
outs
add
into
mov
stos
push
xchg
loope
xchg
cld
test
scas
inc
sbb
mov
or
int3
cmp
lahf
pop
sub
dec
hlt
xchg
xor
jb
sub
sub
xchg
jmp
pop
mov
inc
jnp
xchg
push
inc
fist
mov
(bad)
adc
bound
fnstcw
loope
fst
out
outs
add
add
mov
xchg
cwde
cwde
sub
jnp
or
(bad)
mov
leave
sub
sahf
fwait
mov
push
shl
jg
dec
test
fcom
jo
adc
shl
in
in
sub
(bad)
lahf
push
out
mov
push
pop
or
xor
add
lods
aad
jmp
xchg
jmp
inc
inc
or
test
mov
and
cli
jnp
pop
push
jb
add
jmp
or
jns
rol
sub
js
xchg
sub
lock
(bad)
inc
out
push
aam
into
xchg
(bad)
lahf
cli
test
pop
movs
or
cmp
sbb
(bad)
test
stc
in
jne
movs
lahf
lock
cmp
or
lock
cmp
hlt
seta
inc
mov
push
std
pop
dec
stc
mov
xor
jp
leave
sahf
xchg
test
lods
movs
nop
jmp
movs
dec
popf
add
jecxz
jae
outs
adc
jo
xchg
mov
add
addr16
jp
movs
mov
sbb
sub
or
push
pop
out
mov
pop
cmc
aad
or
mov
rcl
cmp
xchg
mov
or
out
jle
mov
mov
jecxz
sti
cmp
add
sti
fiadd
push
pop
test
adc
retf
xchg
mov
sbb
adc
cmp
fld
or
or
or
and
dec
xchg
mov
outs
outs
and
cdq
mov
arpl
jp
iret
and
into
cmp
stc
jle
je
sar
unpckhps
mov
dec
out
inc
jno
or
push
imul
cs
or
out
mov
sub
les
cmp
pop
lahf
push
add
iret
inc
cdq
sahf
out
jae
or
in
cmps
dec
cmp
lea
inc
or
lahf
popf
jp
xchg
mov
mov
rcl
test
(bad)
push
xor
je
rcl
(bad)
mov
pop
(bad)
ins
std
pop
sub
dec
popf
push
test
push
xchg
mov
outs
fsin
sbb
popf
stc
and
or
rcr
xor
inc
push
imul
xchg
stc
pop
fidiv
add
lock
jne
push
arpl
inc
mov
test
cmp
clc
and
pop
inc
(bad)
ins
stc
stos
retf
pop
mov
and
jmp
out
sub
and
int
mov
movs
xchg
jb
js
add
popf
sub
cmp
jmp
xchg
mov
dec
cmp
add
dec
mov
inc
add
gs
in
jecxz
dec
int
je
cs
push
add
pop
sub
or
jp
mov
pop
cwde
add
aas
loop
sar
retf
xchg
iret
outs
or
adc
aad
push
sub
mov
sahf
cmp
mov
arpl
mov
pop
inc
jno
les
inc
sub
push
scas
rol
fiadd
ftst
push
loope
ret
loop
imul
xchg
daa
add
pop
or
add
iret
jne
inc
int
ret
mov
sbb
test
test
mov
mov
iret
sbb
mov
mov
xor
mov
(bad)
shr
rol
sbb
ret
mov
lds
jle
sahf
ins
jnp
addr16
mov
and
ror
push
(bad)
je
inc
scas
mov
push
hlt
inc
call
pop
mov
enter
mov
and
mov
sub
mov
(bad)
push
idiv
into
jnp
sub
add
push
jl
repnz
xchg
adc
and
call
xchg
movs
xchg
pop
xchg
and
sub
in
xor
sbb
cwde
mov
and
retf
push
pusha
iret
and
jecxz
dec
(bad)
icebp
dec
inc
sub
aam
cwde
pop
aam
mov
ds
iret
inc
stos
test
push
sub
push
call
shl
xor
inc
dec
rcl
dec
rcl
arpl
jl
(bad)
and
xchg
dec
call
(bad)
in
dec
out
and
push
cmp
ds
xchg
retf
mov
retf
and
ret
push
retf
rcl
(bad)
lahf
iret
mov
aam
aad
into
xchg
aam
fadd
dec
icebp
xchg
xor
mov
(bad)
cld
fwait
repz
mov
push
test
mov
cmps
sub
(bad)
mov
xor
xor
aas
popf
jl
pop
aas
mov
test
leave
lods
arpl
push
or
jp
mov
mov
and
dec
cmp
adc
inc
cmps
inc
fsin
dec
jg
test
popf
mov
push
or
inc
and
xchg
imul
cmps
cmp
into
mov
loop
inc
icebp
(bad)
out
daa
sbb
lahf
retf
mov
call
cmp
mov
mov
addr16
std
mov
push
cmps
push
inc
fs
or
shl
jno
scas
loop
jle
add
and
mov
pop
outs
lahf
inc
(bad)
repnz
rol
jecxz
shl
jmp
sbb
sahf
sub
mov
repnz
mov
repnz
sub
mov
psubb
lea
in
es
(bad)
or
inc
jno
xchg
aam
int3
fwait
test
pop
xor
int3
std
lahf
enter
mov
inc
sbb
dec
sbb
push
pop
sub
xchg
inc
(bad)
jg
push
int
out
jnp
pop
inc
sbb
daa
and
push
inc
dec
fdecstp
cmc
(bad)
fwait
pop
cmps
out
sub
adc
dec
and
cmp
cmp
push
outs
xor
je
rcl
and
mov
mov
mov
push
dec
inc
dec
xor
sub
(bad)
out
dec
test
mov
inc
sub
scas
nop
icebp
add
push
or
fcmovnu
pusha
xchg
pop
(bad)
and
test
jecxz
xlat
pop
lods
out
pop
repnz
add
pop
daa
pop
je
sub
cli
mov
(bad)
xlat
call
fbld
xor
mov
loope
jg
aam
jne
sub
lods
push
and
cmps
xchg
xchg
bound
out
(bad)
mov
jp
push
dec
sbb
test
jae
outs
dec
pop
jmp
add
sahf
mov
ja
mov
mov
icebp
aas
lahf
dec
mov
jmp
lahf
mov
jo
data16
(bad)
sub
(bad)
std
mov
cmp
rol
xchg
push
js
sbb
jg
mov
retf
push
test
xchg
push
mov
repnz
mov
or
sub
pop
add
cmp
lods
hlt
aas
jae
pusha
cmp
test
or
idiv
xchg
jne
cmp
movlps
xchg
dec
imul
sub
(bad)
jne
sub
(bad)
stos
jle
adc
enter
pusha
dec
jg
out
push
cld
std
sbb
dec
mov
mov
pop
mov
cmp
push
stos
(bad)
push
ins
xor
or
js
add
nop
dec
in
in
outs
sbb
mov
sbb
scas
xchg
jge
dec
sbb
cmps
mov
jmp
inc
push
pop
dec
xchg
shr
and
adc
push
shl
out
dec
call
mov
dec
push
pop
mov
cli
call
jns
imul
and
aad
adc
std
and
mov
das
jb
mov
sub
and
xchg
mov
mov
cmps
xlat
mov
jmp
mov
adc
dec
ds
jp
sbb
movs
xchg
movs
imul
ret
push
add
aas
fld
shr
inc
mov
shl
add
in
pop
ds
out
jl
or
(bad)
call
push
xor
xor
jge
movs
sub
int3
mov
xchg
pusha
add
enter
cli
inc
push
cmp
push
(bad)
clc
jle
call
mov
call
rol
mov
test
jo
in
call
popa
hlt
inc
jns
push
mov
nop
(bad)
pop
sub
int
or
push
add
push
xchg
cmp
push
xchg
jmp
xor
cmp
nop
mov
pusha
push
mov
neg
ret
aas
push
cmp
sahf
test
cmc
aaa
push
ret
push
into
or
jo
or
push
xchg
jecxz
mov
pop
ds
mov
scas
lods
mov
jmp
mov
dec
sbb
cmps
mov
sbb
mov
not
mov
int3
pop
loopne
and
jo
popa
jb
pop
adc
into
enter
clc
call
out
adc
shl
xor
adc
dec
dec
mov
stc
sbb
pop
dec
call
test
mov
adc
xchg
arpl
inc
pusha
adc
in
cmps
pop
mov
out
cmp
call
adc
or
jecxz
fs
pop
(bad)
test
sub
jns
jl
movs
js
hlt
sub
shl
loopne
test
push
push
test
cmps
sub
leave
ror
cdq
imul
xchg
leave
retf
jb
fdivr
outs
adc
out
lahf
dec
add
pop
and
call
xchg
pop
sbb
aaa
add
test
mov
ss
dec
hlt
fnstcw
sbb
mov
stos
lahf
pusha
loopne
and
mov
(bad)
int
loopne
push
leave
push
xchg
xchg
call
fwait
jnp
mov
out
pop
inc
mov
fs
adc
sub
aas
test
movs
js
les
sbb
arpl
out
in
stos
fwait
sbb
xchg
stos
xor
cs
fucompp
or
xor
adc
dec
jo
pop
fdivr
paddq
dec
fwait
mov
retf
call
sub
stc
sbb
aam
(bad)
leave
inc
nop
retf
aam
jmp
in
sti
xchg
jns
inc
jp
daa
call
aam
in
pop
adc
xor
leave
repnz
inc
int
xchg
mov
pusha
mov
shr
outs
adc
in
xchg
cmp
mov
in
push
xlat
jb
out
out
pushf
in
or
dec
(bad)
popa
and
and
xchg
(bad)
dec
mov
push
fs
or
sub
sub
pusha
dec
and
cmp
add
jge
jns
xor
pusha
add
add
test
dec
imul
push
add
leave
test
mov
sbb
jmp
cmp
and
jecxz
imul
and
sbb
mov
cmp
pop
shl
and
inc
and
mov
dec
adc
jo
inc
rol
test
out
test
add
fs
sub
das
stos
ret
sub
out
mov
pop
aas
fstp
add
shl
jecxz
shr
pop
shr
add
lock
xor
lods
aad
retf
push
push
dec
loope
mov
jne
inc
lods
aad
xor
adc
les
jne
repnz
imul
popf
push
cmps
movnti
push
xchg
mov
xor
dec
sbb
jg
inc
push
(bad)
lods
cmp
dec
aad
pushf
inc
sti
gs
out
int3
ror
mov
icebp
xchg
shl
icebp
in
xor
mov
dec
iret
int3
ror
into
pushf
jo
dec
xor
arpl
pop
inc
xchg
cld
mov
dec
cmp
dec
push
sub
in
aam
push
adc
xchg
mov
std
inc
and
mov
retf
xor
out
adc
push
sub
jg
popf
ins
sub
icebp
sub
pop
aas
lahf
iret
test
push
sar
dec
and
dec
push
and
add
(bad)
inc
push
jno
dec
inc
ss
xor
adc
popf
pop
adc
lods
mov
(bad)
push
call
or
jnp
pop
jo
inc
pop
xchg
and
stos
or
iret
ds
pop
(bad)
sub
in
pop
push
or
cmps
mov
into
lea
xchg
out
cmc
adc
(bad)
sbb
push
push
mov
add
call
and
call
retf
sbb
lods
outs
or
fmul
test
hlt
push
jl
sbb
mov
js
(bad)
mov
xchg
pop
inc
ret
mov
mov
rcr
hlt
dec
sbb
adc
inc
shr
(bad)
aas
dec
cmc
add
pop
xchg
inc
pop
not
jecxz
stc
(bad)
mov
sahf
sbb
fst
jp
mov
jmp
and
inc
cli
push
adc
sar
sti
push
retf
dec
adc
int
into
pop
inc
out
push
pop
xchg
add
stc
lock
pop
retf
mov
jmp
mov
rep
shr
inc
mov
jo
xchg
push
push
adc
leave
ds
popf
scas
sub
mov
enter
pop
inc
or
cld
mov
xor
sbb
aas
adc
jno
mov
sub
xchg
jl
ret
dec
sub
fstp
and
xchg
adc
inc
retf
int3
cmp
jecxz
dec
sub
movs
xlat
pop
cmp
and
push
xchg
mov
ds
scas
pusha
adc
in
cmp
xchg
and
add
jo
mov
into
out
cwde
and
aaa
pop
mov
mov
jge
sub
fild
loope
push
(bad)
aad
mov
jmp
(bad)
div
mov
pop
pop
retf
pop
sti
sub
jecxz
cmps
mov
adc
lods
ins
imul
sub
imul
xchg
inc
mov
jg
push
push
fcom
shl
adc
or
fadd
dec
test
cmc
jmp
add
dec
cmp
fld
call
jae
js
mov
ret
cmc
sbb
iret
xlat
sahf
dec
aaa
mov
sahf
fild
mov
push
ds
idiv
add
add
mul
out
or
mov
test
out
loop
adc
xchg
sub
idiv
pop
xor
out
sub
div
jbe
push
dec
pop
les
mov
jno
in
pop
jmp
mov
cmp
dec
mov
or
int
(bad)
and
fidiv
adc
mov
or
push
mov
or
sbb
push
in
adc
inc
mov
cmc
ds
mov
mov
inc
ins
mov
stos
lahf
ds
(bad)
jle
push
std
sbb
ja
pop
dec
test
cmp
mov
mov
fst
push
xor
dec
pop
push
push
push
or
jbe
retf
je
out
jb
jmp
scas
dec
scas
push
loop
js
cmp
inc
fcmovnbe
movs
lea
fwait
dec
mov
sub
inc
test
sbb
xchg
pop
jmp
mov
fst
push
xchg
aam
xor
and
sub
(bad)
sub
xchg
dec
add
mov
inc
dec
ins
mov
dec
aas
stos
dec
mov
sbb
adc
inc
xchg
cmp
or
sbb
(bad)
(bad)
or
aam
test
scas
push
les
test
xor
cmp
or
cmp
pop
gs
mov
clc
jle
fistp
mov
rcl
(bad)
jle
mov
sbb
xor
ins
push
mov
add
sti
imul
fcmove
xchg
int
loop
retf
pop
enter
or
stos
ja
xchg
loopne
cmove
mov
outs
sti
fs
mov
xchg
xor
loop
mov
mov
shr
movs
xchg
xchg
call
pop
inc
mov
repnz
sar
sub
push
pusha
mov
jne
adc
or
iret
push
xchg
push
lods
int3
cld
in
rcr
cs
pop
in
gs
dec
or
and
fild
mov
xchg
les
inc
cld
jno
sub
inc
dec
cmps
add
sub
pop
mov
push
pop
xchg
and
jno
retf
push
es
(bad)
sub
jne
les
push
test
ins
aaa
mov
and
and
add
xlat
iret
out
call
pop
push
xchg
push
xlat
clc
push
into
xor
cmp
inc
cmp
loopne
sbb
sub
mov
dec
pop
in
mov
mov
mov
dec
arpl
xor
inc
pop
retf
mov
sar
nop
inc
push
pop
pop
fst
(bad)
pop
pushf
rcl
data16
lods
adc
push
inc
mov
loope
sub
jle
outs
mov
test
call
inc
pop
lock
fdivr
xor
and
sbb
pop
mov
leave
push
adc
inc
add
rol
cmc
test
mov
mov
jle
ins
in
or
ret
and
mov
stos
retf
out
iret
xchg
mov
dec
push
fistp
mov
mov
xchg
mov
or
dec
add
jmp
int3
ror
lods
jbe
ss
fcom
xchg
data16
mov
adc
clc
mov
(bad)
push
lods
ins
call
and
aaa
es
out
popa
xchg
jecxz
xchg
jnp
pop
mov
arpl
test
das
push
cmp
lea
outs
dec
in
add
rcr
mov
jne
outs
ja
movs
(bad)
int3
dec
xchg
popf
dec
stc
mov
xchg
daa
aam
out
clc
aad
test
pop
jns
mov
out
cmp
mov
xor
(bad)
mov
inc
stos
ror
test
sti
cmp
jmp
mov
iret
mov
xchg
stc
je
xor
aas
adc
test
iret
(bad)
sub
retf
sub
xchg
and
mov
and
inc
push
rcl
adc
add
sti
mov
inc
inc
jbe
add
ds
dec
jbe
adc
jecxz
inc
imul
test
xchg
dec
sbb
xor
jp
lahf
sbb
add
jmp
fstp
push
mov
jno
add
xchg
js
xchg
movs
cmps
xchg
es
dec
mov
dec
push
jo
mov
mov
out
cmps
(bad)
mov
lea
jbe
inc
arpl
test
push
xor
xchg
push
arpl
lea
neg
(bad)
xchg
mov
xor
sub
shr
fwait
loop
ret
sti
cmp
test
jmp
xchg
stos
push
adc
push
int
call
inc
sub
addr16
out
(bad)
cmp
adc
push
dec
mov
dec
scas
call
ss
jbe
pop
fild
shl
movs
add
xor
sub
fs
fisttp
mov
fstp
pop
ins
arpl
imul
icebp
ins
mov
jno
js
add
sub
and
inc
test
push
dec
aam
adc
in
pushf
mov
ins
adc
adc
cmp
cmps
into
lods
pushf
sar
out
xor
sub
mov
inc
lods
sub
xchg
and
test
movs
push
rol
mov
dec
imul
sbb
fidiv
call
stos
xchg
push
or
scas
cmpxchg
cli
clc
fild
jp
xchg
sbb
mov
outs
mov
xor
pop
ret
popa
rcl
push
sub
pop
cmp
xor
xchg
jmp
cmc
es
mov
jmp
ss
in
sar
or
jne
jb
mov
mov
xchg
ret
sub
stc
mov
xchg
pop
shr
test
bound
mov
pop
jg
mov
popf
pop
cmp
adc
dec
inc
or
add
out
clc
jne
mov
pop
jmp
outs
imul
pop
clc
xchg
call
add
xchg
fs
mov
cmps
ror
jmp
jge
sub
ss
test
push
(bad)
fdivr
cmps
sub
test
idiv
stos
fidiv
scas
test
cmp
inc
les
jg
hlt
test
lods
sti
push
movs
stc
dec
push
mov
mov
lds
xchg
(bad)
jmp
and
adc
stos
les
xchg
jmp
pop
push
cmp
fsub
pusha
pop
loope
rcl
call
shl
(bad)
hlt
out
in
xchg
xchg
xchg
movs
mov
mov
inc
pop
div
sub
mov
and
fcmovnb
pop
adc
call
and
adc
(bad)
dec
pop
push
xchg
test
jecxz
inc
es
retf
sub
jae
movs
iret
sub
and
and
leave
(bad)
jns
cmp
inc
xchg
out
adc
imul
sbb
jl
(bad)
hlt
inc
jle
movs
dec
mov
sub
add
cmps
retf
(bad)
jmp
icebp
push
enter
inc
sbb
sub
leave
and
cli
push
sub
dec
leave
sub
adc
out
jo
or
pushf
inc
lods
jae
mov
inc
add
out
addr16
pop
cmp
lock
push
sbb
mov
enter
les
dec
rcr
iret
ror
not
imul
loop
sbb
add
push
push
fsub
mov
loope
inc
scas
pop
push
push
ss
pop
mov
retf
out
dec
xor
gs
jp
test
pop
jbe
jl
xchg
and
jl
fs
fldenv
sbb
retf
stos
bnd
les
lods
repnz
shl
jo
adc
sub
push
mov
and
pop
mov
mov
rcr
sti
adc
movs
rol
jbe
stos
xchg
dec
mov
not
(bad)
dec
stos
js
sar
arpl
mov
aas
in
push
and
mov
jge
retf
sbb
movs
xchg
cmc
push
repnz
push
rol
arpl
mov
xchg
ret
xor
and
push
nop
push
dec
xor
les
movs
sbb
jle
sbb
stos
inc
xchg
sbb
and
cld
jo
icebp
retf
jno
clc
pop
jnp
dec
add
cwde
xor
inc
daa
dec
pop
add
xchg
dec
lea
(bad)
leave
adc
not
inc
loopne
add
mov
lea
and
xor
sbb
retf
cmp
xchg
push
push
push
sub
ins
int3
int
fstp
dec
jno
add
ror
xchg
aam
sbb
or
adc
mov
in
pop
mov
test
aad
push
dec
mov
lea
bound
in
xchg
add
sbb
shl
fdivr
mov
fidiv
xor
jle
inc
jae
sbb
aas
cmp
jb
mov
adc
scas
dec
out
into
pop
mov
ins
dec
mov
sub
and
retf
fcomp
inc
iret
cld
push
and
iret
pop
ins
fndisi(8087
in
scas
inc
mov
ja
shr
push
xor
scas
or
pop
or
xor
icebp
mov
lea
cmp
xchg
mov
imul
in
stos
jmp
inc
scas
pop
jns
fcom
scas
fs
mov
push
int3
rcl
mov
dec
mov
fidivr
and
test
in
sub
and
dec
pop
jl
repnz
push
adc
cmc
push
imul
repnz
je
xlat
arpl
push
in
fst
aam
adc
xor
jae
mov
xor
inc
cmps
(bad)
mov
ins
jge
xchg
mov
push
data16
add
push
jmp
aam
cmp
mov
stc
sbb
std
add
inc
in
shl
popf
mov
sub
jl
inc
les
xor
into
dec
and
js
inc
push
push
pop
jmp
jb
vmovups
and
cmps
retf
sbb
in
cli
xchg
mov
(bad)
mov
mov
sub
pop
add
or
xchg
push
mov
and
dec
and
or
jbe
loopne
ins
std
cmp
add
add
test
popf
dec
inc
dec
addr16
mov
pop
adc
push
cmp
add
retf
xchg
sbb
jno
mov
jg
and
add
sbb
ret
in
test
pop
cld
jnp
jmp
call
push
pop
cmp
jp
lahf
loope
inc
cdq
arpl
xor
add
in
repz
sbb
xor
popf
xchg
leave
or
xor
gs
adc
dec
mov
fimul
bound
pop
imul
xor
test
stc
pop
ret
pop
mov
aas
push
sbb
nop
mov
cld
xor
jo
adc
movs
in
mov
es
adc
les
inc
jo
jmp
or
leave
ins
or
cli
push
out
add
rol
test
sub
idiv
mov
cli
mov
cmp
jne
inc
jge
shl
mov
data16
jne
jg
icebp
neg
xchg
jmp
pop
into
push
dec
cmc
mov
loop
retf
push
in
loope
sub
push
aaa
jbe
scas
cmp
mov
xchg
rol
xor
inc
inc
(bad)
adc
xchg
mov
jnp
in
adc
jo
add
aam
(bad)
cwde
mov
inc
nop
fisubr
or
adc
jne
test
leave
push
mov
jmp
shr
sbb
lahf
movs
cmp
mov
inc
mov
mov
inc
loop
scas
mov
push
repnz
fadd
cmp
push
shrd
call
shl
gs
cmp
sub
inc
sbb
sbb
add
outs
cmc
mov
dec
xchg
cmp
test
add
retf
mov
in
jmp
ds
sub
push
in
dec
xchg
dec
adc
call
fmul
xchg
retf
cmps
jmp
dec
mov
xchg
cmps
rcr
movs
stos
aam
inc
out
daa
and
hlt
add
or
pop
test
icebp
mov
sub
repz
push
(bad)
iret
push
push
sub
jmp
push
jmp
cmps
cmps
test
inc
cmp
ret
cwde
cli
ins
retf
dec
mov
mov
mov
adc
in
mov
enter
sub
xchg
fs
inc
xchg
inc
cmp
dec
add
xor
(bad)
adc
fstp
mov
pop
cdq
cmps
fcomi
adc
(bad)
(bad)
jb
xor
sbb
or
call
stos
push
sub
ror
inc
mov
std
mov
in
sbb
mov
push
mov
push
jae
dec
xchg
stos
rcr
data16
lods
lea
enter
xor
xchg
add
mov
jecxz
and
xor
push
imul
xchg
adc
add
fdivr
lahf
push
scas
popa
push
xchg
xchg
lock
test
xchg
cmp
inc
aas
loop
push
sbb
xchg
push
add
and
shl
test
push
mov
rcl
jge
sbb
sbb
add
scas
cli
inc
loopne
mov
in
mov
(bad)
mov
inc
cld
inc
jo
int
fimul
mov
mov
pop
repnz
mov
dec
inc
mov
pop
retf
and
xchg
jecxz
xchg
xor
and
push
add
mov
inc
xchg
inc
pushf
jmp
lea
dec
mov
test
push
jge
cmp
iret
inc
fiadd
push
mov
dec
dec
dec
shr
outs
mov
pop
mov
lea
push
aad
outs
lods
fdiv
jns
rcr
sub
mov
daa
and
mov
aam
dec
pop
adc
sti
aas
sahf
cmovo
popf
out
push
int
js
push
lock
lds
les
pop
mov
push
std
int3
ds
loope
and
mov
std
jge
cmp
outs
mov
mov
push
push
and
arpl
mov
push
daa
movs
jnp
(bad)
aad
addr16
repnz
shr
add
js
inc
jecxz
aad
ja
out
mov
outs
push
xor
sub
mov
dec
and
icebp
xor
ret
xor
dec
push
cmp
mov
sbb
sub
in
scas
call
les
add
or
adc
sbb
adc
pop
fwait
je
gs
movs
data16
jge
push
sbb
xlat
xchg
in
mov
imul
aas
mov
xchg
cmp
in
pop
push
sub
adc
pop
fadd
add
sti
mov
aam
add
add
call
fisttp
adc
adc
mov
inc
add
std
push
(bad)
adc
add
clc
jle
dec
cmp
fst
dec
repz
or
cmp
jmp
and
loopne
xor
das
sub
cmp
loope
dec
outs
int3
push
xchg
mov
inc
inc
add
sub
or
outs
sub
pushf
sar
retf
or
dec
in
push
xchg
aam
xchg
and
add
mov
mov
not
inc
pusha
aaa
sahf
into
enter
ror
mov
jmp
bound
pop
ds
loope
push
rcl
mov
enter
xchg
jnp
scas
aam
adc
test
popa
mov
push
mov
xchg
data16
(bad)
popa
jae
fld
sbb
test
pop
push
stos
or
jb
cmps
mov
es
out
push
loope
(bad)
outs
xchg
dec
cmp
in
scas
cmps
imul
pushf
and
ins
jnp
lods
(bad)
in
das
fstp
mov
rol
mov
mov
xor
mov
sub
jmp
cmp
sub
out
pop
inc
rcl
or
test
cmp
xchg
fidivr
xchg
mov
popf
push
cwde
(bad)
xor
jp
loope
dec
adc
jmp
xor
ins
pop
mov
xlat
mov
pop
cmps
imul
mov
xlat
shl
push
pop
call
mov
adc
push
cmp
int
mov
dec
fstp
(bad)
out
cmp
test
jecxz
and
leave
and
adc
(bad)
fcom
xor
jb
jb
adc
jmp
js
dec
lock
retf
(bad)
cmp
pop
ret
aas
adc
pop
fimul
push
add
jl
mov
fcomp
pushf
pop
retf
(bad)
xor
pushw
mov
xchg
xor
sbb
aaa
add
inc
pop
push
fldenv
out
pop
ret
or
daa
clc
jnp
repnz
sbb
dec
retf
mov
loop
mov
out
gs
inc
or
ror
sub
jmp
jne
outs
cmp
int
and
loopne
ins
hlt
cmp
xchg
mov
ror
sub
(bad)
push
jge
aaa
shl
dec
retf
push
jns
dec
test
scas
xchg
or
stc
push
mov
adc
and
std
ins
iret
mov
jmp
fadd
jno
icebp
sbb
sbb
xchg
aam
jl
and
add
call
sub
mov
and
in
sub
das
in
or
ror
or
not
test
ins
sbb
adc
and
lahf
cmp
jl
sbb
dec
pop
xor
xchg
cwde
clc
imul
mov
pop
pop
gs
mov
and
jge
scas
cmps
ds
lods
mov
movs
in
jbe
fisttp
int
mov
or
push
add
cmp
div
add
sub
and
nop
dec
stos
into
sbb
jbe
mov
push
add
(bad)
mov
out
aaa
es
adc
fstp
sub
mov
cmc
xchg
or
sahf
mov
mov
repnz
ficom
push
xchg
dec
add
add
fiadd
loope
jmp
inc
and
mov
mov
inc
push
xor
rcl
pop
cmps
mov
jns
mov
xchg
or
sbb
inc
push
loop
and
pop
dec
popf
sbb
adc
movs
push
inc
mov
mov
out
xor
or
push
pop
ins
or
or
imul
push
test
leave
test
repz
scas
inc
or
inc
ins
jns
mov
add
std
int
pop
push
or
test
xchg
pop
jmp
xchg
jo
outs
cmc
cmp
push
fild
nop
call
lea
repnz
add
daa
mov
jmp
stc
sahf
pop
lea
mov
jmp
xchg
inc
sub
dec
pop
enter
sbb
mov
push
in
call
dec
test
inc
dec
test
mov
outs
aas
scas
mov
repz
push
mov
dec
loope
and
adc
mov
xchg
xchg
ja
outs
dec
out
test
imul
loope
or
movs
sub
repz
and
mov
xchg
rol
push
mov
push
jns
shl
mov
mov
enter
pop
mov
sbb
in
inc
pop
hlt
cmps
call
inc
or
test
mov
data16
mov
fs
pushf
pop
ret
push
xor
daa
xchg
pop
xor
adc
pushf
pop
mov
out
dec
dec
cmps
pop
int3
retf
loope
(bad)
inc
or
and
cmp
push
leave
ins
out
jne
dec
inc
sbb
push
xchg
jmp
dec
add
ds
nop
cdq
call
retf
bound
clc
hlt
xchg
dec
lods
scas
js
dec
lods
arpl
pop
add
popf
inc
xchg
cld
mov
bound
sbb
or
mov
xor
and
or
jle
lock
hlt
ins
hlt
div
test
mov
inc
dec
setno
je
jnp
in
pop
jne
pop
jns
scas
(bad)
out
in
cmc
pop
push
lock
push
or
je
and
xor
scas
mov
and
fld
xor
sub
int
iret
daa
cmp
sub
scas
fs
mov
mov
mov
xchg
ins
ret
outs
adc
clc
ins
and
dec
xchg
dec
or
adc
pop
xchg
popf
stos
fst
pop
cwde
scas
mov
pop
outs
ins
test
movs
mov
jb
push
into
repz
outs
sbb
popa
mov
sbb
in
addr16
js
(bad)
and
dec
inc
xor
xchg
or
xor
adc
out
push
jmp
pop
leave
popa
push
into
(bad)
push
push
les
cmps
imul
add
or
test
push
clc
mov
xor
xor
inc
and
fstp
outs
popa
out
push
jp
sbb
enter
or
pop
or
ror
ret
and
push
pop
inc
pop
aad
xor
stos
xchg
sar
ss
xor
mov
jns
mov
icebp
mov
add
mov
cmps
mov
icebp
arpl
or
push
xor
and
mov
pop
xor
lods
adc
hlt
jle
or
mov
add
mov
pop
jno
adc
(bad)
mov
stc
jne
fcomp
or
clc
sub
test
stos
push
data16
cmp
movs
adc
mov
xor
xchg
and
adc
inc
add
jno
out
push
and
adc
retf
and
mov
or
pop
mov
test
sub
mov
and
sbb
cld
js
in
adc
jno
neg
(bad)
aas
stos
fdivr
jmp
lods
xlat
mov
imul
and
imul
pop
enter
add
push
pusha
inc
aas
sub
or
mov
or
test
mov
dec
retf
dec
sub
in
seto
dec
dec
sub
pop
push
mov
add
sub
add
iret
mov
push
dec
jae
inc
das
push
add
mov
mov
int
lahf
fsub
pushf
sar
and
push
leave
sbb
pop
push
cmp
retf
fucomp
js
inc
mov
mov
mov
imul
hlt
add
jne
retf
(bad)
out
mov
nop
sub
and
hlt
stc
stos
push
fcomp
jge
xor
ss
pop
and
xchg
mov
xchg
inc
and
lods
mov
test
rol
push
jb
movs
xor
push
cmps
out
xor
cmp
loope
inc
out
jo
pop
mov
loop
in
sbb
xchg
test
xchg
sub
int
sub
imul
or
ins
(bad)
loop
icebp
adc
dec
pop
iret
in
bnd
arpl
(bad)
push
scas
jle
repnz
sub
aas
lods
jae
clc
and
and
adc
jmp
into
mov
imul
add
jnp
mov
repz
cmp
int3
adc
adc
mov
xor
adc
out
int
xchg
rcr
in
bnd
xchg
mov
outs
bswap
in
arpl
xchg
or
ror
xchg
add
or
rol
repz
daa
sbb
mov
or
pop
cs
dec
test
pop
sub
(bad)
mov
into
popa
inc
and
in
add
xor
adc
pop
push
inc
sti
push
cmp
(bad)
adc
mov
mov
sub
cmps
adc
xchg
stc
arpl
(bad)
mov
outs
dec
leave
ins
and
jb
xchg
pop
mov
hlt
jmp
in
add
rol
lds
mov
out
hlt
in
or
xor
sahf
call
xchg
push
dec
dec
sbb
bound
push
hlt
mov
cmp
and
mov
xchg
cmp
add
xchg
dec
cmc
xor
dec
out
outs
pusha
pop
jb
mov
stos
push
inc
shl
call
fnstcw
mov
ficomp
adc
jbe
pop
pop
adc
xor
aam
pop
icebp
xchg
mov
lahf
icebp
shl
ins
mov
and
or
mov
not
iret
mov
ja
xchg
or
and
movs
push
push
push
les
(bad)
imul
mov
call
movs
mov
xor
xor
mov
push
mov
add
stc
push
faddp
sti
(bad)
fldcw
push
dec
stos
in
mov
pop
mov
iret
out
out
mov
push
sbb
je
lds
xchg
shr
pop
mov
pop
add
pop
add
xlat
lahf
arpl
mov
pop
pop
out
push
loope
inc
add
add
loopne
out
ds
mov
add
cmp
fwait
cmc
jle
lods
xor
mov
(bad)
dec
adc
icebp
repz
jbe
mov
sub
mov
dec
cmps
inc
aam
aas
dec
jp
inc
sbb
cmp
push
in
jns
jb
mov
pop
mov
scas
sub
dec
sbb
(bad)
push
inc
out
add
test
xchg
stos
cmp
dec
movs
mov
dec
mov
aam
sbb
aas
int
movs
add
xchg
adc
sub
push
add
repnz
mov
mov
ds
xchg
ds
test
iret
cwde
repz
imul
mov
or
mov
repz
push
dec
cmps
pusha
mov
imul
pop
in
mov
ins
jge
add
mov
mov
aam
mov
jno
out
cmp
test
loopne
jne
mov
stos
xor
and
sbb
ss
or
or
xor
and
add
jmp
xchg
and
pop
xchg
hlt
jecxz
out
div
lods
mov
mov
or
aad
lods
je
pop
jl
jl
fs
dec
in
push
test
sub
xor
sbb
cwde
repz
sbb
jbe
out
xor
(bad)
push
xlat
push
xchg
leave
cmp
dec
mov
cmps
test
and
add
sbb
mov
shr
mov
hlt
xor
mov
dec
call
sub
scas
mov
cmp
rcr
sbb
repnz
jl
call
fist
jl
jmp
pop
fcom
ins
retf
movs
xchg
mov
push
xor
inc
sbb
imul
xlat
es
(bad)
xor
cmp
into
jae
push
ret
mov
mov
mov
mov
xchg
sbb
pop
idiv
mov
stos
or
adc
or
cmps
lods
into
dec
mov
xchg
retf
shr
scas
retf
pop
or
dec
stos
(bad)
and
out
test
mov
pop
rcr
add
sub
sub
add
adc
lods
push
jo
or
aam
push
cmp
jecxz
aam
test
push
adc
xor
add
add
imul
scas
mov
clc
adc
ins
sbb
sub
sub
mov
push
sbb
test
push
mov
mov
jp
xor
jmp
jecxz
test
jns
lock
retf
mov
cmp
sbb
or
clc
and
pop
mov
jecxz
pop
in
mov
pop
loop
add
pop
rcl
lods
inc
scas
dec
sub
loopne
(bad)
iret
dec
sub
sbb
push
daa
call
mov
push
add
out
ins
mov
aaa
inc
push
sbb
mov
pop
ins
ds
sahf
lahf
jae
inc
mov
add
pop
cmp
inc
div
popa
push
inc
dec
push
mov
dec
push
xchg
mov
xchg
icebp
rcl
out
adc
xchg
clc
neg
iret
mov
pop
into
iret
jp
lods
dec
sub
dec
cmps
push
arpl
sbb
xchg
adc
out
fist
data16
mov
cwde
jmp
movs
pushf
push
les
push
push
pop
dec
xchg
cdq
and
(bad)
jge
mov
cmp
mov
cmp
inc
out
mov
adc
or
and
and
dec
inc
jl
sub
cmp
jo
stos
sub
dec
jge
inc
inc
ret
pop
retf
and
mov
test
xchg
rcr
mov
imul
sub
fcmovbe
add
pop
ds
adc
and
cmp
std
pop
jp
ret
outs
push
push
mov
rol
pop
dec
call
sub
movs
adc
fild
sbb
push
pop
jl
aas
ret
(bad)
lahf
dec
out
fnstsw
or
mov
imul
sahf
sbb
(bad)
scas
sbb
dec
jmp
in
arpl
movs
xor
cmps
xchg
sbb
push
enter
cmp
adc
jns
jg
pop
pop
fdivr
xor
cdq
cmps
scas
es
lds
jle
shr
push
cmp
adc
xor
mov
push
sahf
push
cmps
cwde
adc
xchg
xchg
push
scas
or
jmp
ror
pop
cmp
aam
add
jl
mov
push
or
(bad)
aas
pop
cmp
xor
mov
cmp
pop
push
pop
or
cmp
and
and
dec
mov
aas
lahf
outs
mov
mov
test
xchg
pop
mov
cwde
jecxz
bound
push
dec
ror
dec
mov
mov
inc
or
mov
(bad)
fbstp
call
stos
psubb
mov
xchg
xor
jb
stos
xor
imul
cmp
add
sbb
(bad)
xor
sar
jae
pop
into
mov
movs
push
movs
imul
out
sub
push
pop
jnp
mov
mov
mov
xlat
add
jmp
mov
push
sub
cld
into
daa
inc
push
jmp
jp
or
xchg
dec
mov
and
inc
sti
test
push
push
fsubr
in
pop
sub
jge
mov
and
add
and
mov
aas
outs
out
jns
dec
sbb
imul
xchg
repnz
push
and
jmp
adc
dec
in
mov
data16
inc
loopne
rol
stc
push
pop
in
hlt
add
aas
push
fistp
lea
inc
popf
adc
aam
scas
mov
(bad)
xchg
push
jne
adc
daa
sub
sub
(bad)
mov
xchg
ds
popf
xchg
in
sbb
dec
cmp
nop
mov
pop
lock
test
pop
jmp
clc
jnp
xor
mov
jp
sub
cmps
in
jno
int
add
cld
cmp
dec
cs
inc
xor
popf
inc
xchg
pop
and
mov
mov
pop
cmp
nop
cmp
test
lods
dec
hlt
add
clc
fbstp
movs
adc
sbb
mov
add
aad
scas
cmp
mov
jmp
movs
and
lods
ins
push
into
imul
outs
(bad)
ror
push
out
push
mov
jno
in
(bad)
(bad)
in
pop
jg
ins
xchg
int
cli
push
sbb
push
stc
hlt
mov
js
scas
loope
add
and
or
dec
in
ret
push
mov
fwait
or
pop
cmp
scas
cs
sub
cmps
rol
out
iret
enter
ds
mov
mov
push
and
out
jle
ret
mov
add
lock
ds
mov
addr16
jp
mov
cmps
rol
push
sbb
pusha
test
stos
lods
jns
imul
xor
jbe
scas
jl
cmp
ja
lods
cmp
nop
lods
pop
push
mov
imul
add
out
and
ja
jle
lock
repnz
sbb
sub
test
imul
jnp
xor
scas
enter
jmp
xchg
fimul
retf
sub
xor
and
and
push
test
push
sub
add
ret
test
cwde
test
leave
push
loop
ror
push
xor
xchg
movs
xor
xchg
xor
sbb
push
mov
dec
add
lds
mov
add
add
sbb
or
and
std
(bad)
lods
test
sbb
cmp
call
shl
es
push
pop
and
pop
test
pop
jno
jb
pop
and
sbb
cmp
xor
and
mov
scas
setg
dec
jp
or
jecxz
dec
sahf
xchg
call
xor
push
mov
aad
xchg
cmc
mov
ss
xchg
jae
mov
jmp
xchg
push
lds
pop
dec
sbb
cmp
pop
sub
pop
in
add
sar
js
or
stc
inc
sub
test
test
add
jecxz
inc
and
mov
test
adc
push
out
add
sbb
pop
mov
clc
dec
out
out
clc
rol
inc
inc
fwait
cmp
push
adc
add
(bad)
and
mov
xchg
sub
xor
outs
push
scas
sub
sti
xor
mov
fcmovnbe
mov
inc
jnp
(bad)
pop
sub
sub
fldcw
mov
leave
bound
pop
add
mov
and
cmp
jmp
pushf
inc
xchg
rol
cdq
sub
add
pop
add
idiv
in
mov
ins
push
mov
sub
clc
(bad)
fimul
jle
or
mov
aas
inc
push
lahf
loop
mov
inc
push
adc
(bad)
(bad)
call
xchg
cli
inc
pop
mov
inc
pop
inc
or
shr
pushf
loopne
in
jmp
jns
(bad)
lds
daa
(bad)
daa
(bad)
rol
ja
and
pop
add
add
pop
ffree
mov
push
mov
push
cmp
out
retf
(bad)
je
mov
mov
cmps
cmc
xor
popf
dec
xchg
leave
sbb
test
mov
mov
add
push
push
pop
int3
xchg
inc
dec
mov
and
xor
std
xor
test
fmul
sbb
std
pop
mov
jmp
aam
pop
cmps
cli
mov
jns
pushf
inc
mov
nop
ficom
lock
jp
mov
into
mov
call
jp
jmp
js
dec
xor
bound
int
jo
cmp
cmp
adc
arpl
(bad)
retf
dec
mov
push
pop
push
inc
dec
push
xor
inc
jb
mov
ds
adc
xor
sbb
fs
aam
nop
test
lods
les
pop
ja
into
dec
out
in
mov
sbb
loope
push
into
aam
(bad)
test
int
test
push
dec
add
inc
mov
dec
(bad)
mov
mov
scas
mov
xlat
pop
cmp
fdivr
push
test
repnz
push
xchg
rcl
inc
inc
das
mov
stc
pop
rcl
pop
mov
pushf
test
mov
int
push
push
retf
sub
mov
add
cmp
rol
add
push
in
cmc
jmp
jle
in
push
xchg
add
cmp
mov
push
xchg
sbb
fst
mov
nop
dec
add
sahf
dec
(bad)
sahf
jmp
mov
and
sbb
xor
cmps
mov
add
mov
inc
mov
pop
push
loopne
sbb
call
jae
out
mov
in
lods
push
mov
jge
addr16
dec
pop
dec
scas
xchg
leave
or
into
retf
and
mov
rcl
(bad)
ds
mov
fisubr
ror
stc
hlt
dec
into
pop
mov
mov
mov
mov
push
cmp
scas
lods
jl
shl
mov
mov
movs
xchg
outs
jns
lahf
dec
cmp
rol
(bad)
fwait
xchg
xor
pushf
dec
push
jge
jmp
call
push
scas
movs
xchg
cmps
cli
jb
loopne
add
es
call
call
mov
in
sub
add
std
pop
loope
sbb
fnstsw
clc
xchg
jecxz
in
sbb
test
inc
mov
ds
mov
movs
jb
(bad)
popf
or
(bad)
mov
addr16
call
jl
(bad)
inc
test
mov
enter
push
leave
sbb
aad
inc
push
cmp
cmps
xchg
pop
ds
sbb
stc
call
sahf
test
xor
fstp
retf
sbb
(bad)
sar
xor
(bad)
sub
jmp
rcr
stos
mov
adc
out
push
xor
adc
sub
fnstenv
ss
cmps
pop
jmp
sub
or
stos
ror
retf
dec
xchg
sub
sub
mov
icebp
xchg
cmps
cli
sub
and
daa
mov
and
add
and
push
mov
pop
ja
ins
adc
loope
push
sub
bound
pop
test
xchg
pop
shr
pop
popf
xchg
xchg
push
ins
or
push
add
pop
hlt
mov
inc
xor
pop
cvtpi2ps
in
sti
inc
cmp
dec
inc
fiadd
popf
cmps
pop
xchg
aam
ror
xor
or
and
pop
mov
rcl
adc
cmps
adc
xor
bnd
int
imul
loope
imul
jmp
rol
xchg
sub
push
(bad)
sub
cwde
xchg
sbb
push
shl
inc
arpl
sub
jns
add
sub
jmp
nop
inc
jecxz
mov
mov
lahf
(bad)
sbb
repz
shl
jae
and
ror
dec
dec
add
mov
test
test
jecxz
add
mov
fistp
xchg
adc
daa
iret
rcr
sub
pop
cdq
add
inc
shl
cmp
pop
push
stos
dec
cmp
jns
fdiv
stos
data16
es
loopne
sub
jle
ficom
pop
inc
arpl
call
add
mov
aad
xchg
push
loopne
push
mov
mov
xor
cli
retf
inc
retf
cmp
iret
aaa
add
js
jns
leave
sbb
xor
push
test
jg
cmps
cwde
fdiv
les
aas
mov
push
add
fsubr
dec
(bad)
idiv
hlt
cmp
pop
shr
lea
mov
jp
mov
add
sub
or
pushf
sub
sbb
addr16
add
das
xchg
sbb
int
push
mov
sti
inc
pop
adc
int
fmul
mov
ds
sahf
and
dec
in
jl
adc
loope
and
stos
cli
mul
cli
retf
arpl
lods
sbb
mov
push
xchg
sub
hlt
repnz
loopne
push
movs
jbe
cdq
sbb
or
(bad)
jne
and
je
(bad)
cdq
ins
cli
call
add
imul
xor
sti
cmc
test
arpl
lock
push
retf
inc
push
sub
xchg
push
pop
pushf
les
push
dec
push
in
cmp
cmp
aaa
push
in
add
mov
retf
in
call
hlt
iret
inc
sub
shl
imul
cmps
ret
sub
cmp
jmp
and
push
pop
inc
and
xor
pop
push
mov
arpl
daa
lahf
(bad)
mov
test
in
out
aam
mov
fwait
jmp
ret
stos
ror
seta
call
push
enter
xor
(bad)
pop
sub
addr16
jae
rcl
ret
push
sub
shl
loope
sbb
add
pop
sub
sar
dec
push
not
xchg
mov
and
dec
jp
xchg
dec
stc
aas
outs
inc
pop
in
int
in
fstp
stos
adc
add
imul
inc
inc
push
adc
add
sbb
test
and
mov
fnstenv
popa
cmp
call
dec
jle
push
jp
cmp
pop
lea
ins
mov
pop
adc
inc
aaa
or
pop
fwait
popa
icebp
sbb
adc
xor
jne
cli
cmp
dec
mov
bound
or
jo
fidiv
cmp
mov
sbb
and
push
inc
push
pop
not
shl
in
imul
mov
jge
xor
mov
daa
push
cmps
test
mov
mov
dec
imul
xor
mov
arpl
and
jecxz
lahf
lahf
cmps
dec
gs
cmp
add
add
ss
fst
sbb
and
sub
cmps
mov
and
pop
and
push
out
add
(bad)
aaa
xchg
mov
cwde
mov
xchg
push
dec
cmp
dec
or
cmp
mov
repnz
push
sub
(bad)
pop
cli
enter
scas
mov
sub
cmp
mov
outs
aas
daa
fwait
lahf
popa
aam
fs
pop
inc
test
pop
imul
sub
das
mov
arpl
xor
push
cmps
push
scas
lds
jle
sbb
push
mov
shl
jmp
mov
loopne
cmps
pop
jecxz
cmp
adc
or
inc
xchg
add
test
add
loopne
and
jo
adc
out
pop
push
push
in
cmc
xchg
jbe
imul
pop
inc
push
loope
pop
inc
stos
neg
outs
adc
mov
inc
out
stc
add
hlt
call
xor
shr
xor
fisttp
lods
xchg
clc
mov
es
pop
pop
dec
jb
cdq
and
int
fwait
stos
imul
cmc
mov
fprem
(bad)
loop
push
and
lea
push
inc
push
xor
ins
outs
mov
mov
movs
mov
and
stos
jmp
push
mov
sahf
mov
sahf
imul
add
sbb
hlt
cwde
mov
xchg
cdq
fcomp
test
(bad)
sbb
jl
cmc
call
cdq
mov
jne
int
xchg
sbb
or
and
xchg
mov
and
mov
stc
fisttp
push
jle
add
aas
jmp
test
sbb
hlt
daa
mov
inc
sbb
mov
xor
loope
ret
xchg
repz
and
pop
xor
daa
int
sub
enter
adc
out
sub
pop
out
and
pop
fiadd
jmp
fisttp
jecxz
ins
xor
sbb
dec
or
lods
nop
test
push
jge
outs
xchg
adc
dec
cmp
xchg
or
stos
adc
lock
dec
push
(bad)
retf
pushf
retf
or
push
dec
dec
fidivr
loopne
(bad)
xchg
retf
inc
mov
jmp
xchg
mov
call
xchg
push
nop
imul
push
pop
(bad)
fdiv
ss
je
mov
push
adc
xchg
xchg
xor
cmp
sti
jp
cmp
dec
cld
dec
sub
call
movs
or
push
inc
push
dec
xor
jns
jno
psubsw
jg
daa
fadd
out
retf
hlt
cmps
imul
inc
add
pand
outs
xor
ficomp
xor
in
add
push
mov
rcl
aam
dec
icebp
ds
sub
cmp
mov
dec
(bad)
in
ror
fs
test
sbb
push
jge
outs
fs
or
pop
ror
cwde
ror
js
mov
inc
push
jno
aas
outs
popf
aas
leave
sahf
xchg
sti
dec
mov
jmp
dec
dec
mov
popa
adc
and
add
mov
inc
pop
fldcw
mov
push
jo
inc
xchg
cmps
lea
aas
inc
jmp
pushf
inc
adc
js
add
cld
repz
hlt
(bad)
fwait
mov
je
add
jnp
jnp
movs
pop
dec
scas
mov
mov
js
push
sub
cdq
and
pop
nop
jge
repnz
repz
call
icebp
scas
cmps
ror
jne
aad
jne
inc
fisubr
dec
(bad)
push
push
in
xor
dec
add
loope
xchg
mov
in
test
mov
test
add
ja
jl
push
call
hlt
cmc
mov
adc
sub
cmp
dec
daa
sti
lea
adc
bound
cmp
neg
push
fldenv
stc
add
jmp
icebp
dec
adc
and
inc
or
push
jo
and
(bad)
inc
popf
aaa
into
jno
pop
cwde
mov
ins
mov
mov
xor
sub
xlat
sbb
ret
mov
sub
add
pop
adc
dec
movs
push
sub
aad
cmp
(bad)
les
mov
inc
int
xchg
out
xor
mul
aaa
sub
pop
cmp
shl
or
scas
dec
pop
repz
addr16
into
pop
test
call
mov
and
mov
push
sub
daa
stos
sub
das
icebp
repnz
pop
mov
test
in
in
dec
ins
inc
inc
shl
aam
push
xchg
mov
jnp
push
fmul
js
fwait
push
xor
push
ds
jb
bound
shl
jmp
jnp
dec
inc
nop
repz
iret
and
stos
fdiv
xchg
les
or
jmp
and
fst
das
xchg
lods
lods
(bad)
daa
sahf
mov
mov
test
mov
or
xchg
dec
jnp
push
aaa
pop
cli
pshufw
jnp
pop
push
lods
loopne
aam
jecxz
call
mov
test
cmp
sub
ror
mov
lea
mov
sbb
pop
jns
mov
mov
outs
adc
arpl
mov
iret
push
jmp
stos
sub
mov
lea
arpl
imul
das
fld
and
stos
inc
inc
inc
iret
ds
je
pushf
sub
dec
cld
imul
ins
push
daa
pop
jecxz
xor
jmp
push
cmp
mov
movs
js
cmps
mov
xchg
mov
fldcw
gs
fucomip
scas
aam
xchg
xor
shl
icebp
and
and
js
iret
shr
leave
jl
mov
or
rcl
dec
xor
lahf
add
rol
add
ins
lods
frstor
gs
les
sbb
inc
mov
dec
scas
lods
fdiv
ins
cmp
cvtps2pi
sub
jnp
sub
pop
push
ret
push
xor
retf
aam
in
iret
mov
outs
leave
push
in
cs
lock
fcom
(bad)
icebp
js
cmp
stos
fcom
inc
cmp
xor
xchg
movs
and
inc
loopne
lock
dec
add
jno
pop
adc
nop
sbb
fmul
clc
sub
lds
repnz
(bad)
mov
xor
leave
sub
call
fisub
dec
push
rol
or
jns
push
mov
cmp
out
mov
(bad)
imul
aam
out
aad
(bad)
mov
rcl
add
dec
dec
push
(bad)
mov
sbb
aam
add
pop
test
xchg
push
or
pop
jmp
jp
loopne
mov
out
inc
xchg
(bad)
test
movs
enter
or
sub
dec
fsubrp
adc
or
xchg
mov
push
rol
or
retf
push
(bad)
nop
test
or
xor
mov
inc
mov
movd
dec
cmp
sub
adc
inc
mov
xchg
addr16
jmp
or
lods
or
add
leave
mov
jno
sub
jle
clc
gs
inc
adc
leave
add
shl
sbb
nop
nop
leave
movs
pop
sti
test
xchg
sub
inc
xor
xchg
(bad)
xchg
inc
jecxz
jp
in
inc
and
nop
dec
addr16
mov
dec
out
mov
mov
mov
inc
xor
jne
cli
popa
xor
retf
dec
jle
movs
pop
adc
dec
popa
jne
hlt
cmp
push
cmp
jle
repnz
mov
xchg
inc
out
adc
cmp
js
jge
add
int
sub
mov
xchg
xchg
sbb
adc
ds
out
adc
inc
pop
xor
mov
mov
pop
xchg
sahf
inc
push
pop
popf
jge
push
test
sar
or
xor
add
cmc
fsubr
rcl
movs
cmps
test
and
and
inc
movs
popf
dec
int
xchg
ins
hlt
idiv
int3
into
push
dec
xor
mov
jae
inc
test
test
xor
adc
scas
or
adc
inc
xchg
cdq
dec
sub
aad
sub
and
fdivr
and
and
cmc
push
(bad)
jbe
ret
sub
xchg
(bad)
xchg
dec
lods
jo
aam
retf
daa
xor
shl
dec
jmp
mov
or
sub
int3
xchg
cmp
imul
movs
dec
cli
test
jo
dec
push
dec
retf
rcl
rol
add
push
push
inc
push
ret
pop
sahf
jns
je
shr
dec
mov
ins
mov
loope
fild
or
mov
outs
push
aaa
pusha
xchg
enter
inc
ja
sbb
add
jmp
xlat
mov
les
xchg
add
loopne
mov
dec
jbe
mov
data16
pusha
fdiv
pop
(bad)
jae
ret
inc
stc
xor
movups
jg
dec
cs
fidivr
sti
and
cmp
dec
xor
and
gs
nop
add
mov
jae
bound
push
fnstcw
jb
daa
mov
(bad)
ror
xchg
inc
adc
aam
out
icebp
fbstp
mov
add
movs
push
fwait
cmp
mov
add
leave
pop
push
out
push
push
imul
stos
push
loopne
jo
push
(bad)
in
sbb
mov
test
(bad)
mov
rcl
jo
lods
retf
mov
(bad)
cmp
sti
js
test
dec
push
in
inc
cmp
adc
add
loope
shr
cmp
in
dec
push
xchg
(bad)
mov
jne
aam
push
icebp
mov
jge
pop
jg
mov
ins
add
or
fdiv
inc
mov
cld
std
pop
push
fnstenv
add
add
push
imul
pop
cld
inc
push
mov
mov
ds
push
xchg
mov
iret
lods
lock
mov
popf
and
aam
jle
jmp
hlt
(bad)
xchg
add
pop
push
ret
cdq
xchg
jne
cmp
ret
inc
push
shr
cmp
push
nop
out
call
cmp
and
pop
mov
xor
div
sub
xchg
push
cmc
cmp
ja
or
and
mov
clc
add
push
sbb
int
mov
or
xchg
cmps
xor
outs
adc
dec
and
sub
add
add
call
fsubp
addr16
push
jmp
cmp
imul
cld
mov
or
loop
cwde
and
xor
fs
rol
cmp
push
mov
xor
arpl
sti
mov
push
push
inc
ins
sub
cmp
sbb
aas
dec
icebp
not
fcmovnu
fidiv
mov
ret
arpl
jg
mov
dec
test
das
jg
sub
das
sub
popf
push
ja
pop
mov
xor
imul
fmul
sub
test
js
ret
sub
xlat
dec
mov
lahf
and
cmp
cmps
aam
mov
pop
mov
(bad)
cmp
push
and
stos
pop
popa
cmp
popa
popw
inc
sub
cwde
pop
fs
push
repnz
stos
xchg
or
pop
mov
das
and
aaa
xchg
mov
inc
jmp
mov
call
dec
xor
out
div
adc
sub
cld
mov
call
les
inc
ror
adc
pop
mov
aam
mov
pop
inc
outs
add
aaa
push
cdq
inc
xchg
daa
movs
sbb
call
cmc
dec
or
inc
fcomp
jge
jae
fwait
mov
dec
rol
or
add
hlt
hlt
mov
and
dec
inc
pop
nop
xor
in
mov
cmp
das
cwde
(bad)
push
sub
popf
push
inc
fs
cmc
in
(bad)
mov
loop
leave
push
sub
add
or
(bad)
scas
dec
mov
mov
dec
sar
mov
in
ins
jle
retf
scas
cmp
jmp
inc
sub
push
adc
and
imul
loope
jb
mov
popa
das
mov
lods
xor
push
add
scas
retf
cmps
mov
xchg
inc
xchg
mov
mov
cmp
aas
and
or
mov
lods
push
je
dec
adc
pop
inc
jns
or
add
inc
inc
pop
jns
in
mov
aas
(bad)
jo
pop
int
aam
xor
sbb
daa
mov
jecxz
retf
jnp
(bad)
jmp
cmp
add
adc
imul
mov
mov
push
call
ret
nop
pop
loopne
nop
xlat
jae
cmp
add
sbb
je
add
mov
xchg
add
das
out
pop
in
push
cdq
int3
out
cmp
push
add
or
dec
push
dec
xchg
xchg
add
jae
aas
inc
clc
push
enter
mov
sub
div
sub
add
and
mov
stos
mov
push
mov
or
pop
mov
and
repz
or
mov
retf
div
fild
rol
xchg
adc
call
test
mov
icebp
aam
ret
inc
shl
jge
pop
or
mov
lods
popa
or
mov
or
daa
mov
mov
jnp
ins
mov
ins
retf
loope
fmul
cmp
cmps
lahf
push
mov
dec
pop
das
fcmovbe
ins
mov
sub
fadd
loope
cmp
jo
push
loop
adc
push
xor
cli
or
cmps
mov
enter
imul
jmp
loope
sub
adc
or
jl
and
iret
push
xor
aaa
pop
imul
or
out
xchg
push
mov
aad
jl
scas
sahf
push
nop
fst
adc
scas
es
lods
ret
push
add
mov
pop
dec
push
dec
push
ret
dec
sbb
push
fdivrp
and
pop
jmp
and
push
scas
mov
sbb
jnp
movs
jmp
or
scas
popa
cmp
inc
loopne
cmps
in
add
cmc
scas
mov
xor
sbb
sbb
add
clc
sti
leave
dec
ja
and
rcl
mov
sbb
dec
sbb
xor
inc
(bad)
iret
sbb
fwait
cmp
arpl
sbb
das
add
nop
dec
cli
sti
xor
pusha
lea
dec
jmp
jae
jecxz
movs
(bad)
sbb
dec
cli
jno
and
std
jp
sbb
stos
imul
addr16
rcl
xchg
mov
dec
adc
imul
jmp
add
dec
jno
retf
pand
in
sbb
dec
(bad)
scas
mov
xlat
outs
scas
es
pop
fist
int
leave
shl
retf
mov
mov
pop
cmc
cmps
mov
into
or
jne
push
mov
pop
push
test
iret
inc
fld
mov
imul
push
pop
or
int3
addr16
div
es
hlt
(bad)
fist
fst
imul
pop
outs
xor
fstp
and
or
sahf
lahf
sub
push
hlt
or
ret
(bad)
aad
and
neg
sub
lock
mov
dec
cld
adc
call
daa
test
ja
pop
call
push
push
push
adc
dec
aad
sbb
cs
jmp
cmp
mov
es
scas
adc
push
jmp
(bad)
sbb
jmp
test
ficom
or
nop
add
(bad)
cld
jo
dec
push
fnstcw
and
xor
arpl
sub
(bad)
xor
test
adc
sub
mov
pop
pop
inc
fidiv
cmp
pop
mov
add
adc
data16
leave
hlt
out
xor
and
add
push
jmp
call
dec
sahf
or
dec
inc
dec
sub
je
add
mov
mov
in
movs
fisttp
dec
dec
push
iret
movs
inc
mov
aam
dec
ds
jp
cmp
jne
dec
jnp
mov
mov
add
pop
push
push
mov
xchg
(bad)
or
daa
stos
loope
inc
adc
push
push
sub
int
je
fild
mov
sbb
jle
adc
dec
test
clc
dec
cmc
movs
pushf
stc
hlt
into
aad
sbb
sti
mov
dec
mov
jge
push
pop
jecxz
push
je
xchg
hlt
lds
push
out
mov
js
xor
retf
int3
movs
jle
imul
sbb
inc
or
std
inc
fs
push
aas
jmp
add
sar
rcl
mov
cmps
lock
pop
add
push
mov
ret
inc
mov
loopne
pop
stc
std
jp
xchg
dec
sbb
push
out
mov
xchg
daa
fisttp
in
call
dec
pushf
mov
jge
cld
pop
dec
xchg
jns
mov
and
aam
adc
xchg
inc
pop
lea
xor
mov
jnp
cmps
push
sbb
jg
mov
movs
dec
mov
jno
inc
ds
sub
nop
retf
jbe
data16
retf
call
cmp
or
jmp
sbb
std
and
test
push
xchg
loopne
pusha
jo
test
mov
adc
mov
aas
popf
imul
cs
mov
mov
xor
dec
sbb
and
mov
dec
dec
mov
or
cwde
adc
leave
not
cmp
pop
mov
mov
xor
jbe
loopne
je
adc
add
(bad)
cli
pop
xor
sahf
arpl
inc
sub
into
or
jmp
and
push
mov
mov
scas
stc
ds
inc
jo
add
push
dec
test
test
jae
push
repz
in
mov
add
adc
rcl
enter
popf
iret
arpl
(bad)
daa
xchg
mov
fadd
out
lea
mov
mov
mov
outs
xlat
add
stc
neg
ins
xlat
sub
push
(bad)
and
dec
cli
pop
movs
cmp
and
dec
add
xchg
push
scas
push
xchg
xchg
mov
inc
cmp
leave
and
dec
dec
loopne
mov
jmp
inc
imul
pop
mov
idiv
mov
mov
lods
test
mov
add
rol
data16
aaa
test
or
sbb
or
pop
les
(bad)
cs
push
push
jno
push
sub
jle
(bad)
mov
dec
scas
adc
scas
mov
mov
jne
add
dec
push
movs
jno
in
iret
movs
aad
mov
jge
loope
push
out
pop
aam
mov
xor
inc
sbb
pop
push
rcr
sbb
out
xchg
out
mov
cmp
movs
dec
test
mov
add
jns
jmp
iret
(bad)
mov
in
and
and
rol
jp
jns
jmp
mov
dec
(bad)
loopne
test
cli
push
cld
test
sbb
sub
mov
xchg
pop
jbe
aam
mov
mov
jno
test
pop
mov
sub
pminub
adc
mov
cmps
jns
inc
dec
add
js
jmp
dec
jno
or
xchg
ror
inc
mov
cdq
mov
es
jne
(bad)
jae
mov
lods
mov
dec
mov
dec
pop
mul
and
push
jg
aam
int
shl
adc
dec
paddsw
in
in
jmp
pop
jne
bound
pop
add
mov
call
loopne
pop
xchg
and
add
aam
pop
cmc
repnz
mov
(bad)
hlt
mov
xor
cmps
mov
push
imul
and
mov
sbb
jbe
(bad)
scas
jecxz
retf
adc
in
hlt
call
push
aad
adc
fs
retf
mov
neg
hlt
jne
pop
adc
cs
jmp
imul
stos
cs
xchg
adc
xor
sub
mov
in
(bad)
je
dec
cmps
push
ins
and
test
iret
mov
out
push
test
das
sub
stos
fsubr
push
ins
(bad)
xchg
aas
fimul
arpl
xchg
push
push
sbb
push
scas
mov
test
adc
mov
icebp
cmp
inc
mov
or
fs
xor
sub
outs
jbe
out
out
fcmovu
mov
pusha
imul
xor
daa
mov
and
or
dec
adc
(bad)
adc
lods
inc
push
test
and
(bad)
out
loop
cmps
mov
fist
xchg
in
(bad)
iret
je
mov
hlt
and
inc
retf
push
in
ja
inc
cmp
xlat
not
enter
(bad)
and
(bad)
iret
cmps
or
mov
cwde
mov
call
inc
sub
cmps
cmp
inc
shl
xor
pop
cli
inc
dec
imul
lods
(bad)
popf
or
sub
jnp
mov
not
cld
adc
pop
jno
and
jmp
add
xchg
or
dec
je
jno
repz
push
jmp
test
jae
jo
jl
retf
cmps
iret
ins
(bad)
and
and
cdq
inc
jo
test
ret
push
cmc
inc
in
test
xchg
cmp
pop
inc
pop
jg
fmulp
lods
lods
hlt
rol
jne
xor
add
aad
fistp
js
mov
sti
adc
imul
lods
hlt
int3
sbb
(bad)
mov
push
je
push
adc
cmps
pop
aaa
in
xcrypt-cbc
cmps
push
cli
jle
movs
cdq
push
call
sbb
sub
sbb
movs
pop
pop
cli
pop
jnp
mov
aam
mov
inc
add
fdivr
shl
int
xor
xchg
pop
stos
jb
sub
test
call
mov
and
or
pop
fbstp
push
arpl
icebp
mov
les
xor
pop
xchg
cmp
fucomi
outs
jne
clc
mov
in
sti
mov
test
xor
mov
inc
sub
sub
fcmovnu
clc
sbb
arpl
sti
addr16
xor
retf
sbb
inc
mov
movs
pop
pop
or
(bad)
xchg
outs
cmp
nop
cmp
loop
daa
cmp
pop
cld
int
dec
push
or
xchg
mov
xchg
add
adc
adc
jl
aam
add
mov
fdivr
retf
jmp
idiv
inc
add
pop
lods
inc
inc
sub
dec
(bad)
dec
sbb
xor
push
xchg
je
cmc
or
sbb
aaa
out
loopne
add
mov
mov
xor
cmp
out
inc
push
clc
jp
xchg
jae
ins
inc
out
(bad)
cmps
hlt
jecxz
outs
xchg
lds
xor
push
shl
cmps
mov
mov
inc
out
inc
(bad)
and
daa
add
xchg
inc
push
xor
push
ror
pop
push
sbb
es
and
pop
jg
sti
dec
xor
ins
adc
jmp
popf
out
cmp
jmp
jp
(bad)
push
push
ror
inc
jp
inc
mov
pusha
lds
jecxz
push
movs
nop
out
in
mov
into
leave
cmp
cmp
adc
sub
mov
sbb
jle
sub
sahf
inc
sbb
call
or
dec
pop
aas
clc
scas
sbb
ja
aam
jg
add
lock
inc
adc
rcl
and
push
jb
adc
mov
repnz
cmc
mul
das
add
cmp
push
fsubp
adc
inc
push
push
xchg
js
mov
std
dec
(bad)
mov
jg
in
dec
dec
das
inc
rcr
pop
cwde
cli
xchg
(bad)
scas
clc
mov
mov
jno
stc
add
aas
cmps
mov
stos
in
hlt
daa
mov
push
movs
sub
dec
retf
into
popf
cmp
je
mov
pop
cmp
icebp
in
or
mov
cmps
mov
addr16
(bad)
dec
push
mov
push
ss
mov
jle
(bad)
ss
ror
add
cmp
push
or
dec
(bad)
je
int
adc
push
and
lods
cmp
(bad)
neg
iret
sub
out
and
dec
test
aam
int
(bad)
sti
ds
sub
push
add
int
aas
shr
mov
adc
scas
dec
scas
lods
enter
mov
mov
jg
jne
cmps
aam
int3
dec
adc
pop
jmp
sub
mov
test
xor
mov
ret
out
repz
es
stos
sti
mov
ins
js
out
in
imul
lds
fwait
(bad)
jg
inc
fist
fucomip
fild
cdq
sub
and
adc
jecxz
movs
jne
outs
in
lods
aad
mov
stos
test
xchg
test
xlat
dec
dec
xor
adc
dec
sbb
loop
inc
stos
sub
sbb
and
lds
(bad)
push
pop
mov
jns
mov
stc
sbb
movs
add
adc
xor
clc
add
pop
daa
mov
aas
jecxz
retf
dec
inc
cwde
shl
out
add
aaa
xchg
js
inc
stos
bnd
xor
aam
stos
xchg
and
int
lods
jle
(bad)
aas
(bad)
jmp
or
cmps
xchg
clc
jp
ins
mov
inc
mov
add
and
jl
mov
sub
jbe
lods
cmp
sti
imul
mov
mov
mov
aas
mov
in
xor
lods
je
pop
(bad)
sbb
and
xor
sbb
sti
cmp
hlt
lods
sub
add
mov
or
test
pop
push
dec
xchg
inc
push
xchg
das
adc
(bad)
cmp
cwde
retf
repnz
ds
xchg
test
xchg
push
sbb
sbb
(bad)
xlat
fdiv
mov
retf
dec
pop
push
fdiv
add
jno
nop
inc
and
xor
push
dec
retf
sbb
dec
mov
mov
sbb
push
sub
jge
push
repz
xlat
int3
lds
add
cld
jge
ds
cmp
mov
sub
mov
repnz
shl
rcr
add
ffree
cdq
mov
xor
xor
data16
test
add
sbb
inc
sub
add
cmc
idiv
jnp
sti
mov
sbb
dec
shl
test
push
movs
xchg
pushf
mov
in
test
jne
xor
aas
dec
je
mov
jle
or
dec
push
sub
push
xchg
inc
pop
test
je
and
(bad)
out
add
fild
mov
mov
dec
aam
scas
or
scas
push
inc
sub
loope
(bad)
in
dec
mov
sub
pop
cmps
push
stos
jmp
shl
add
lahf
cmc
int
pop
dec
scas
mov
lock
sbb
inc
push
adc
cld
into
cmp
clc
cmp
sbb
push
out
fwait
add
mov
fcmovbe
push
ror
scas
inc
fnsave
xor
movs
add
push
inc
mov
mov
neg
pop
xchg
std
mov
mov
xor
mov
ret
mov
out
cdq
hlt
jmp
xlat
in
or
movs
pushf
addr16
fisub
sbb
mov
cmp
mov
sbb
push
cdq
repnz
call
xor
xor
movs
inc
xchg
dec
inc
xor
fs
mov
fidivr
xor
stos
adc
in
outs
push
adc
pop
ret
movs
xchg
stos
dec
sub
or
outs
inc
lods
xchg
push
mov
or
mov
sub
iret
xchg
mov
adc
pop
fsubr
fidiv
pusha
push
xchg
xor
sub
aas
aad
jne
xchg
sbb
fld
push
dec
inc
add
cmps
cmp
sub
pop
dec
in
setle
into
mov
leave
sub
sbb
sub
cmp
fnstcw
rcl
ds
push
retf
push
scas
mov
inc
xor
mov
jecxz
sub
cli
sub
aas
ror
lea
and
repnz
push
xchg
in
sub
xlat
jmp
gs
mov
arpl
pop
xchg
lods
sub
sbb
sub
xchg
out
aaa
jp
mov
add
sahf
and
in
adc
scas
and
jne
into
pop
aad
clc
(bad)
dec
push
test
lahf
inc
cmp
jge
adc
cli
(bad)
jle
push
rol
sti
dec
enter
aas
outs
inc
in
test
sub
add
xchg
xchg
jl
ror
cmp
sub
pop
cmps
jge
xor
mov
pop
cmps
inc
iret
pop
sbb
cmp
jns
sti
adc
inc
or
jl
add
xchg
mov
stc
push
(bad)
fist
fs
ror
sti
jmp
es
xchg
push
cmp
loop
sbb
clc
mul
repnz
js
xlat
outs
fwait
sti
sub
push
inc
fmul
test
jb
ret
shl
add
and
add
out
out
test
imul
xor
cmps
dec
test
sub
or
adc
adc
dec
push
mov
mov
add
neg
sub
fcmovbe
xor
sub
je
lods
jne
dec
je
jne
dec
sub
push
or
inc
imul
or
stc
icebp
cmp
inc
ret
gs
dec
sub
cwde
mov
dec
nop
dec
adc
adc
add
retf
or
ret
push
mov
dec
xor
jg
push
xor
scas
loope
inc
sbb
ins
inc
xor
cmp
lea
fisubr
cmps
test
and
mov
gs
sub
sub
push
je
int
or
pop
int
or
xchg
sti
mov
sub
stos
retf
xor
imul
ins
mov
mov
rcl
mov
ret
stc
je
call
or
pop
jmp
test
enter
shl
and
arpl
sub
sbb
loop
dec
sub
in
jmp
inc
push
cmp
and
aaa
call
mov
ror
test
push
and
pop
xchg
test
mov
and
stos
adc
mov
imul
stos
mov
adc
xor
push
jmp
rol
fucomip
lods
fiadd
cmp
pop
call
jecxz
push
xor
cmp
sbb
or
fisttp
ror
cmp
ret
inc
dec
sbb
movs
fwait
out
stos
sub
dec
fisttp
sbb
scas
in
movs
push
lods
mov
add
pop
mov
psadbw
xchg
imul
retf
mov
mov
stos
cmp
stos
cmps
mov
jne
and
or
lahf
inc
ja
out
mov
inc
adc
ins
stc
dec
in
in
or
push
push
push
outs
fnsave
mov
pop
fdivr
xor
xchg
jnp
fiadd
dec
inc
add
cmp
fidivr
(bad)
cmp
fcmovnb
mov
mov
xchg
push
push
add
sbb
inc
std
fnstcw
xor
xchg
mov
dec
jns
sub
xor
or
xchg
sbb
and
test
addr16
inc
jmp
mov
sub
shl
call
pop
mov
daa
int3
xlat
retf
mov
lods
mov
pop
pop
dec
aam
xchg
push
xor
inc
mov
push
rcr
retf
push
leave
inc
xchg
mov
push
push
push
pop
sub
movs
ja
mov
xchg
dec
test
cmp
xor
sub
icebp
mov
scas
add
js
cld
popf
xor
inc
sbb
mov
pop
pop
ds
sbb
cmp
fs
xchg
xor
xor
cmp
mov
movs
push
gs
lods
adc
cmp
(bad)
out
icebp
out
push
cmp
in
dec
retf
cld
std
adc
aad
xor
sub
mov
in
js
stos
xchg
and
or
es
mov
in
data16
ja
in
bound
not
sbb
call
cmp
movs
je
shl
iret
xchg
dec
jecxz
cmps
dec
push
jno
xor
pop
hlt
add
jo
dec
(bad)
cmc
mov
loope
rcr
jb
es
mov
cmp
lock
loop
pop
hlt
or
dec
adc
pop
sbb
inc
sub
dec
xor
cdq
mov
lods
idiv
push
xchg
sti
dec
gs
repnz
cdq
sub
mov
(bad)
or
(bad)
sbb
rol
jns
mov
push
mov
mov
aad
inc
mov
add
mov
mov
push
std
call
pop
and
mov
or
mov
test
mov
and
mov
ror
pop
movs
test
pop
dec
sbb
rol
std
dec
mov
(bad)
pushf
call
aas
dec
jnp
fs
fimul
push
dec
enter
push
xchg
cmp
pop
add
pop
lods
push
pop
daa
fcomp
ins
out
pop
mov
pop
in
sahf
daa
xchg
imul
and
mov
dec
inc
nop
cmp
jbe
cs
jle
daa
push
jl
cmps
dec
sti
cmp
xchg
mov
in
out
repz
mov
adc
mov
xchg
or
dec
sar
aas
popf
cmp
pop
mov
cmp
jecxz
xor
push
or
je
nop
xor
dec
dec
loope
cmps
fwait
test
in
dec
mov
sti
jo
push
clc
xchg
pop
jb
pushf
mov
mov
or
lahf
inc
push
pop
in
xchg
or
(bad)
xor
pop
pop
push
inc
ins
mov
add
adc
add
sar
push
jg
push
xor
mov
dec
in
aam
jns
push
rol
adc
mov
pop
adc
(bad)
imul
jb
cli
pop
rol
inc
push
rol
cmp
test
nop
or
cmp
or
cmps
dec
jge
or
ins
or
fwait
retf
add
push
stos
mov
dec
in
imul
cmps
dec
xchg
sub
popf
cmp
fxam
mov
jnp
cdq
xor
or
adc
cmp
in
mov
sub
pop
ror
pop
mov
mov
mov
sbb
add
mov
or
push
stos
dec
in
sahf
(bad)
retf
neg
cmc
lods
fdivr
pop
pop
in
push
pop
(bad)
cmova
mov
es
mov
in
pop
adc
mov
pop
call
arpl
sbb
daa
mov
je
push
mov
push
test
inc
mov
xchg
or
call
mov
pop
shr
pop
lahf
bound
sub
aam
aas
aad
scas
sbb
push
xor
add
dec
and
lea
cmp
jmp
sahf
pop
pusha
sahf
ja
jge
push
push
mov
and
inc
pop
add
add
ret
mov
mov
mov
xchg
jl
sbb
mov
js
rcl
in
(bad)
mov
jle
fucom
jns
jle
or
cmp
shr
or
and
push
ficom
cmp
sub
repnz
jmp
or
cs
push
mov
aas
das
bnd
jle
popf
mov
fadd
mov
in
push
int
cmp
push
popf
add
sub
retf
hlt
mov
mov
cmc
push
mov
pop
push
int
aaa
mul
sub
lea
(bad)
push
int3
nop
pop
pop
mov
push
inc
xchg
stos
cmp
loopne
mov
arpl
rcl
sub
mov
enter
sbb
sub
sub
dec
rcl
mov
pop
and
sub
adc
xchg
js
test
imul
enter
arpl
mov
push
add
ret
push
inc
loopne
movs
sbb
jne
xchg
jb
ret
cmps
call
das
addr16
clc
and
es
call
shl
cdq
and
cli
pop
fidivr
int
ffree
ja
mov
inc
es
add
shl
cmp
cmp
mov
into
call
jns
scas
fisub
jb
push
xor
inc
mov
and
stos
imul
xchg
int
adc
movs
push
dec
push
imul
cmps
nop
inc
add
inc
test
mov
lods
dec
add
cmp
sbb
leave
adc
or
add
and
push
mov
sbb
(bad)
mov
and
mov
rcl
xor
pop
mov
sbb
mov
xor
movs
inc
int3
icebp
sub
(bad)
add
outs
in
call
push
inc
jp
mov
xor
je
push
jecxz
sbb
push
pop
scas
scas
inc
jbe
fist
hlt
push
sbb
push
push
dec
mov
sub
sub
mov
mov
addr16
loope
arpl
and
mov
test
lods
inc
in
pop
popf
jg
pop
mov
loop
xor
sub
push
inc
hlt
xchg
inc
sbb
add
inc
shr
pop
repnz
pop
lock
out
outs
cmp
retf
dec
rol
add
jg
hlt
sub
inc
test
cmps
mov
repnz
jecxz
scas
sbb
test
add
jne
cld
sub
xchg
and
mov
pop
or
and
jnp
xor
jnp
hlt
idiv
mov
add
pop
jmp
dec
inc
sub
data16
or
cwde
retf
cmc
out
inc
sbb
xchg
push
inc
mov
loope
dec
dec
mov
xor
cmc
push
(bad)
fldcw
adc
(bad)
cdq
and
or
out
xchg
or
xor
shl
cmp
aad
jmp
fidiv
test
js
clc
push
arpl
test
pop
add
(bad)
jle
out
push
into
loope
xor
or
cwde
inc
pop
pop
or
mov
or
cmps
inc
dec
dec
js
jmp
jecxz
popa
test
out
retf
push
test
lahf
scas
mov
sub
test
iret
test
fidivr
pop
jb
aaa
adc
sub
add
std
mov
add
outs
ds
jecxz
int
sahf
shl
(bad)
xor
scas
pop
jno
jecxz
xor
push
and
mov
pop
icebp
mov
cmp
push
inc
dec
xor
sub
scas
imul
push
fwait
push
mov
pop
push
push
cwde
mov
not
inc
(bad)
xor
sbb
mov
mov
xor
sub
in
mov
(bad)
xlat
jmp
inc
xchg
stos
ror
call
mov
imul
or
and
cmps
mov
push
push
fimul
or
daa
mov
cs
fdivr
fxch
push
bound
jmp
fdivr
pop
je
outs
push
(bad)
fiadd
fimul
in
jge
outs
jnp
fstp
sub
push
mov
jne
iret
mov
sbb
jmp
ins
mov
sbb
mov
add
dec
cmp
xor
mov
mov
out
xchg
sub
xchg
and
push
rcl
loope
mov
cs
in
jnp
ja
push
pop
jmp
mov
call
xor
jle
test
repz
cmp
and
clc
in
aad
adc
add
dec
ds
es
mov
fdivr
fcmove
dec
aam
daa
out
out
fs
in
dec
sub
fisttp
popf
pop
and
push
sbb
daa
gs
sbb
mov
or
inc
mov
and
and
pop
rcr
add
xchg
dec
pop
movs
pop
imul
and
xlat
xchg
ins
mov
js
xchg
xor
cdq
xor
push
iret
inc
add
lea
mov
sar
repz
addr16
push
lahf
ret
and
and
xchg
add
into
mov
ss
adc
or
out
cmps
lods
test
fmul
fcmove
(bad)
dec
sbb
stos
push
adc
jmp
enter
rol
cwde
jle
xchg
arpl
movs
mov
push
nop
lods
xor
pop
lea
jno
in
jmp
jmp
dec
cmps
add
ret
add
push
daa
out
lds
out
stos
ret
push
mov
stos
xor
pop
popf
cdq
test
sbb
movs
sbb
cmc
mov
bound
mov
add
mov
pop
daa
mov
or
repz
jl
ds
mov
cs
stos
jl
daa
sbb
push
push
push
mov
rcl
add
cwde
jmp
call
cmp
in
bound
call
and
in
ror
movs
cmp
mov
cmp
movs
sub
jecxz
outs
dec
mov
cmc
pop
dec
icebp
rcl
(bad)
add
adc
cld
and
ret
stos
push
cli
or
mov
mov
xchg
pop
pop
arpl
adc
and
pop
in
lods
cmps
or
and
jge
(bad)
mov
imul
cdq
cld
cli
pop
jb
rcr
push
shl
data16
push
mov
cmp
pop
lods
mov
out
pop
ds
jecxz
stos
jno
mov
repnz
xchg
shl
scas
mov
js
push
xor
sub
mov
(bad)
sti
xchg
jmp
pop
cmp
lods
push
mov
inc
jmp
xchg
jae
in
das
add
popf
(bad)
mov
add
lock
push
inc
push
dec
lods
xchg
call
out
and
aas
cmps
shr
push
dec
popf
push
cs
jno
out
or
mov
mov
out
sbb
lahf
push
out
add
sar
imul
(bad)
jmp
push
(bad)
call
and
stos
cmp
inc
js
cmp
in
lds
mov
lods
inc
xor
inc
je
leave
xor
adc
pop
(bad)
fnsave
adc
inc
inc
jo
sbb
mov
lahf
mov
push
in
or
mov
inc
dec
pop
dec
mov
mov
scas
xchg
pop
jno
cmp
(bad)
dec
inc
cmps
adc
dec
and
out
cmc
push
cdq
cs
sub
rol
xor
push
neg
fstp
pop
retf
jmp
out
adc
out
or
or
push
loopne
mov
jmp
imul
or
repz
jne
in
pushf
ret
fld
xchg
push
adc
std
mov
sahf
jp
push
(bad)
fcmovnu
mov
in
sbb
sbb
aad
inc
imul
sub
popf
into
sar
dec
add
sbb
xor
(bad)
popa
in
imul
les
or
frstor
iret
enter
call
sub
mov
mov
movs
cwde
dec
xor
cmps
invd
inc
jp
and
stc
mov
mov
int3
sbb
mov
pop
xchg
add
adc
test
nop
jo
jne
repz
mov
pop
pop
mov
mov
(bad)
in
add
mov
jmp
push
cmp
ins
inc
mov
sbb
mov
sub
push
in
inc
data16
dec
jmp
jae
ja
cld
dec
mov
jecxz
sbb
dec
inc
sub
ret
out
aam
mov
sar
lods
mov
push
dec
int3
and
paddsw
pusha
imul
sbb
test
sti
sahf
scas
enter
cli
sbb
jmp
aas
(bad)
idiv
mov
repnz
push
push
mov
push
push
std
dec
inc
inc
inc
loope
xor
push
pushf
jmp
mov
sub
cli
(bad)
dec
mov
daa
ins
sub
ins
fdivr
add
jl
in
and
stc
je
movs
lahf
and
nop
mov
push
pop
mov
cli
xchg
int
xor
mov
mov
fidivr
pop
dec
js
dec
sti
jge
sti
int3
push
ror
pusha
test
or
iret
enter
adc
mov
mov
call
aad
adc
ss
jge
pop
mov
repnz
movs
imul
mov
ja
inc
jno
(bad)
rep
push
retf
xchg
in
(bad)
(bad)
mov
add
xor
jbe
mov
cmp
fwait
jno
test
push
sbb
cmp
jno
sub
in
adc
inc
ins
xchg
lock
push
xor
jmp
int
in
fsubr
xor
mov
push
mov
adc
dec
mov
jg
fcomp
sub
push
xchg
adc
push
mov
cmp
lods
fst
mov
sub
test
cwde
int3
xchg
lds
int
jp
push
sbb
leave
push
sbb
getsec
imul
dec
(bad)
fidiv
jg
xor
je
sub
push
and
ja
pushf
xor
inc
sar
outs
push
aaa
adc
mov
jmp
sbb
or
pusha
mov
mov
into
push
add
and
sar
(bad)
repnz
shl
push
call
movs
fwait
cld
mov
inc
sub
nop
mov
adc
jmp
sbb
mov
jne
clc
cmp
sub
pop
mov
imul
push
cmp
stc
sbb
popf
xchg
and
bound
pop
push
adc
outs
push
mov
dec
sub
dec
sub
stos
xchg
ret
repnz
push
sbb
jmp
inc
inc
push
mov
mov
test
sbb
sub
dec
dec
pop
push
xor
fsubr
inc
sbb
mov
aad
jae
or
nop
int3
mov
leave
repnz
js
scas
xor
mov
lods
xchg
clc
pop
add
gs
fs
hlt
daa
pop
fldcw
call
xchg
lods
popf
add
lds
imul
mov
mov
mov
fstp
fmul
add
shl
push
mov
test
push
mov
inc
movs
mov
sbb
xchg
pop
lahf
push
jb
loope
xor
dec
dec
idiv
cli
dec
cdq
movs
add
loop
cli
arpl
mov
jmp
repz
fistp
loope
or
mov
sbb
jae
aas
ds
mov
pusha
add
test
xor
cmp
push
push
pop
jne
sub
lods
or
packsswb
movs
dec
mov
cdq
xchg
add
dec
fptan
call
cmp
rcl
adc
pop
(bad)
setg
stos
das
sbb
jo
aad
add
jmp
(bad)
fdivr
fld
or
addr16
gs
mov
inc
js
(bad)
lahf
fcmovnbe
outs
push
loope
xchg
ret
mov
outs
ret
repz
pop
add
cmp
popa
push
xor
mov
ret
loop
dec
jecxz
pop
add
and
jle
pop
popf
(bad)
fsubr
and
inc
mov
mov
and
aad
dec
and
repnz
xchg
repnz
or
js
dec
push
add
mov
xchg
outs
jge
and
mov
and
xchg
ret
mov
push
test
repnz
lea
adc
add
ror
mov
lock
(bad)
aam
imul
in
pop
adc
jns
enter
mov
fwait
inc
fucomi
push
or
ror
mov
adc
mov
jo
fwait
add
push
push
add
or
mov
pop
cmp
dec
std
outs
ja
fdivr
adc
sti
inc
dec
pop
xor
jo
xchg
pop
push
mov
xchg
iret
adc
aaa
add
push
xchg
cld
pop
or
shr
mov
inc
imul
pop
leave
(bad)
jge
in
out
sub
es
push
ret
push
jp
pop
push
inc
sub
dec
sbb
stos
push
(bad)
aas
std
loopne
loopne
(bad)
repz
sbb
lds
mov
inc
mov
push
add
add
hlt
les
std
sar
mov
xor
int
jl
fwait
popa
mov
mov
lea
and
mov
in
aas
sub
jmp
not
and
fnstenv
jne
add
lahf
aam
clc
cmps
push
aas
push
out
sub
push
mov
xor
inc
add
dec
out
test
fmul
in
repnz
dec
cwde
sub
pop
or
mov
cwde
in
mov
jmp
sbb
push
movs
and
popa
popf
pop
mov
mov
sar
push
mov
cmps
clc
jnp
sub
div
fild
pop
inc
mov
cli
fidivr
sub
loopne
fisub
push
or
enter
ficomp
inc
add
mov
pop
pushf
jns
cs
fidivr
and
inc
int3
(bad)
cwde
stc
inc
fwait
mov
pop
int
std
cld
dec
sti
jge
add
push
cmp
leave
and
in
sti
cmp
xlat
pop
xlat
hlt
aas
pop
xor
mov
mov
or
inc
inc
add
mov
pop
and
xchg
and
pop
xchg
stos
xchg
push
repnz
sub
pop
inc
(bad)
ds
call
push
dec
and
es
rcl
add
cmp
fstp
out
jo
and
aas
dec
adc
push
popa
pop
inc
adc
adc
jne
cmp
mov
pop
and
add
and
std
retf
adc
stos
rol
sub
pop
outs
adc
scas
inc
jbe
sbb
imul
add
imul
dec
cmp
fcom
fucompp
push
and
sbb
addr16
fstp
and
xlat
(bad)
sub
adc
mov
mov
enter
xchg
sar
div
aaa
mov
add
psadbw
cmp
arpl
xchg
inc
mov
push
ret
dec
sub
sub
(bad)
loope
mov
inc
and
push
test
mov
fistp
mov
jmp
dec
lahf
out
xlat
fld
pop
pop
std
jae
aad
dec
enter
jns
mov
sub
dec
sbb
cmps
xchg
push
test
adc
fwait
mov
inc
aam
test
cdq
sbb
pop
mov
(bad)
and
sar
mov
mov
aam
mov
adc
dec
dec
xor
push
sar
push
jns
fwait
jnp
dec
lds
inc
sbb
stos
dec
mov
int3
adc
inc
iret
cmc
cli
xchg
(bad)
icebp
in
lock
jecxz
lahf
ret
dec
push
test
retf
jae
fwait
icebp
rol
jnp
cmp
(bad)
mov
jb
out
repnz
push
inc
push
jmp
mov
sub
add
(bad)
ds
dec
movs
fst
push
adc
aas
cmc
jno
shl
inc
lahf
(bad)
sub
les
and
jecxz
out
and
add
sahf
jecxz
push
fld
inc
mov
push
adc
xchg
push
cmp
ss
mov
cmp
or
cmp
jl
jne
dec
pop
out
je
jbe
lock
je
ins
mov
mov
aad
inc
pop
inc
inc
gs
imul
scas
outs
jns
xor
lea
retf
mov
loop
sbb
cmp
xchg
dec
push
sti
imul
cmp
or
xor
cld
or
pop
mov
xchg
loop
jbe
loope
std
(bad)
dec
cmc
jge
aaa
dec
push
movs
sbb
add
add
(bad)
pop
mov
push
sbb
cmp
mov
hlt
and
call
mov
xlat
dec
push
sbb
or
ror
mov
in
lahf
cmc
inc
mov
or
jle
in
scas
pop
(bad)
push
or
sti
aad
stc
cmp
jmp
push
test
fwait
stos
cmp
xchg
or
pop
or
mov
lds
ja
fmul
pop
stc
mov
push
sbb
std
inc
pop
loopne
inc
xlat
std
mov
icebp
inc
(bad)
(bad)
scas
inc
pop
xlat
lock
or
icebp
inc
push
push
xchg
aad
sub
aam
out
jmp
outs
ins
adc
cmp
mov
stos
clc
fsubr
push
fisttp
or
and
in
mov
add
mov
daa
xlat
mov
push
push
clc
jae
cmp
test
sub
inc
or
pop
push
mov
loope
imul
mov
xchg
push
xchg
inc
scas
hlt
add
add
push
or
dec
lock
clc
cmp
arpl
shl
repz
push
nop
fadd
jp
cdq
pop
add
repz
pop
movzx
cmc
cmp
adc
inc
(bad)
aas
sahf
cmp
xchg
push
lods
push
stos
std
inc
movs
(bad)
jle
xchg
push
aaa
and
dec
out
mov
int
fucomip
test
inc
dec
(bad)
sbb
les
(bad)
(bad)
retf
mov
jnp
sub
stos
in
pop
(bad)
loop
adc
jb
je
lods
sub
cmps
jmp
pop
fbstp
add
imul
aad
sub
and
int
inc
shl
add
mov
ret
cwde
adc
inc
int
sub
jb
inc
jecxz
cmp
das
in
adc
inc
push
push
repz
mov
test
push
add
inc
push
cmp
retf
add
jne
imul
and
inc
ret
dec
inc
rcl
sbb
das
add
cmp
nop
int3
xchg
iret
adc
sbb
add
(bad)
mov
imul
(bad)
push
js
sub
pop
push
sbb
push
push
mov
dec
adc
mov
iret
hlt
neg
mov
xchg
jmp
jae
dec
fld
mov
movs
imul
cld
sbb
popf
sub
cmp
and
add
add
retf
(bad)
cs
cmp
arpl
dec
arpl
test
push
imul
lahf
cmps
icebp
or
stc
hlt
and
in
xor
mov
adc
sbb
push
(bad)
ror
and
sub
sub
inc
mov
movs
mov
dec
xchg
imul
(bad)
fist
mov
sub
nop
inc
in
inc
push
call
mov
ret
addr16
cwde
scas
dec
push
(bad)
jecxz
movs
ss
gs
push
js
cmps
stos
test
cmps
jns
push
dec
test
cmc
(bad)
mov
psubb
jae
dec
push
dec
mov
pop
push
xchg
push
mov
push
jge
and
add
cld
iret
iret
movs
cmps
out
int3
dec
push
xor
cmp
cld
aas
pop
add
or
enter
cmps
mov
test
fld
aaa
mov
ja
movs
adc
pop
pop
xor
stos
push
cmp
ror
fimul
aad
xchg
jmp
mov
mov
pop
push
aaa
popa
out
jp
retf
mov
push
inc
xchg
dec
xchg
movs
mov
(bad)
adc
or
(bad)
mov
scas
push
sub
adc
add
scas
inc
jecxz
mov
jecxz
std
fstp
lods
lods
add
cwde
jp
dec
or
or
scas
adc
or
push
(bad)
cld
add
cs
imul
adc
call
imul
std
and
add
aaa
cld
sti
cs
dec
and
(bad)
mov
aaa
dec
mov
test
add
(bad)
outs
stos
lods
out
mov
ficomp
sbb
xlat
outs
addr16
or
enter
sub
sbb
xchg
movs
cli
jnp
jno
and
or
mov
sti
cdq
mov
imul
sbb
jno
adc
addr16
outs
dec
mov
(bad)
rcl
push
and
movs
ret
arpl
les
and
push
add
dec
fwait
xchg
mov
dec
aaa
and
in
mov
cmps
push
mov
movs
jp
jo
repz
not
xchg
loopne
into
fs
inc
xor
ficomp
cmps
add
cmp
xor
sub
dec
sub
mov
lods
sbb
xor
push
inc
pop
dec
cli
cmp
sbb
ins
ret
cli
sti
and
xchg
out
pop
cmp
add
scas
ins
or
stos
(bad)
ss
data16
stos
test
retf
mov
pop
sub
lods
dec
mov
mov
outs
test
cs
mov
push
jne
jecxz
xchg
fisubr
push
inc
std
pop
mov
ss
psadbw
or
repz
repnz
dec
stos
sub
scas
addr16
push
push
push
and
inc
xchg
and
push
cs
pop
in
jge
cmc
inc
nop
int3
in
xchg
inc
push
or
fs
xchg
xor
sbb
rcl
sub
in
and
ja
cmp
imul
dec
xchg
jb
xchg
and
mov
mov
mov
mov
and
in
mov
rcr
(bad)
push
scas
inc
sbb
push
pop
aas
xor
call
retf
stos
xor
out
stos
xchg
movs
mov
mov
mov
adc
sar
sub
adc
cmps
iret
ds
sti
imul
jl
icebp
pop
ds
out
adc
xor
and
retf
outs
shr
cmp
mov
ret
push
pop
jmp
daa
mov
xchg
sub
aad
or
in
sub
mov
mov
pop
mov
fst
shl
mov
iret
inc
cs
aam
jb
in
push
sbb
loopne
xchg
lock
xchg
call
loopne
pop
les
or
cmp
pusha
outs
dec
test
or
jecxz
les
sbb
and
test
ja
repnz
fisubr
scas
mov
fs
dec
cmp
jl
xchg
hlt
call
dec
jecxz
rol
cmps
scas
sub
jno
stc
pop
pop
xor
imul
(bad)
(bad)
jmp
add
ret
mov
movs
fs
jno
push
daa
daa
in
add
in
push
xchg
push
in
dec
add
leave
int
inc
mov
adc
(bad)
dec
sbb
leave
sbb
xchg
gs
(bad)
in
cli
test
mov
movs
sub
lods
inc
bound
dec
and
in
push
out
jno
les
jl
repnz
mov
xor
mov
sbb
xlat
lea
or
dec
fcomp
data16
pop
popa
popf
(bad)
out
movs
mov
mov
inc
sub
mov
add
ins
inc
inc
fs
add
and
cmp
adc
sub
cdq
scas
pusha
or
sub
inc
sbb
(bad)
pop
fist
fmul
ds
xor
fdiv
add
adc
ret
test
cwde
pop
jnp
or
adc
and
jb
cmps
stc
mov
push
(bad)
jae
jmp
cmps
es
mov
jg
js
xor
add
(bad)
shr
test
mov
fwait
loop
jg
mov
sub
div
sbb
ds
adc
and
and
popf
jno
push
and
enter
adc
or
paddq
adc
idiv
jnp
in
mov
dec
test
dec
int
adc
dec
inc
fsubp
(bad)
and
scas
mov
inc
add
jmp
arpl
push
fwait
adc
push
imul
xchg
push
(bad)
loopne
xchg
add
mov
mov
outs
pop
in
pusha
rol
(bad)
fstp
xchg
and
mov
inc
scas
outs
mov
retf
mov
pop
stos
inc
lods
rcl
or
movs
ins
arpl
push
push
ret
dec
mov
sub
mov
fs
in
sub
jecxz
(bad)
shl
mov
mov
dec
mov
aas
adc
sahf
jae
push
test
stos
add
push
adc
and
pop
push
test
mov
stos
iret
cmp
and
xor
add
cmp
aam
mov
push
pop
fstp
adc
bound
lahf
sbb
dec
lock
call
xor
xchg
lahf
les
pop
mov
push
or
mov
test
daa
xchg
pop
inc
(bad)
loope
push
inc
iret
xlat
fdivr
aaa
shl
call
ds
mov
test
jne
mov
jecxz
icebp
(bad)
cli
mov
sub
and
(bad)
lods
pop
push
retf
cmps
mov
rcr
cmp
in
loope
icebp
lea
jle
jecxz
in
daa
jbe
dec
jbe
push
and
stos
cdq
cmc
shl
call
mov
dec
icebp
stc
xlat
(bad)
sub
fbstp
dec
inc
jne
push
popa
sbb
push
pop
jbe
inc
(bad)
call
jns
pop
pop
call
retf
and
or
mov
mov
push
dec
mov
pop
push
nop
dec
mov
xchg
push
cdq
sti
(bad)
(bad)
fisubr
push
imul
mov
call
rcr
xor
lods
jne
aam
aam
push
aad
jb
xor
sub
stos
test
sahf
jns
jns
inc
dec
mov
pop
push
fidiv
inc
or
ins
ins
mov
test
add
cmps
retf
in
sbb
vpaddsb
scas
jmp
pop
outs
xchg
int3
fs
mov
leave
test
xor
push
stos
and
cs
clc
ins
stos
sbb
xor
cli
mov
pop
push
push
push
jne
scas
mov
(bad)
xlat
jmp
in
clc
in
aaa
or
mov
xor
lods
js
add
shl
xlat
sti
mov
lock
int
push
mov
sub
adc
cmp
enter
ja
jl
mov
jge
neg
ret
cwde
xor
test
cmp
in
jmp
jns
inc
mov
inc
push
push
sbb
and
and
test
mov
in
jge
mov
jl
inc
mov
fsubr
stos
xchg
ret
imul
mov
test
call
jecxz
mov
xchg
scas
idiv
fwait
mov
sub
test
mov
mov
and
stos
mov
xchg
outs
mov
dec
push
mov
imul
stc
hlt
sbb
loopne
mov
retf
retf
mov
push
adc
mov
movs
dec
adc
push
nop
enter
xlat
std
outs
jnp
sub
mov
adc
in
push
dec
sub
jge
loope
test
mov
and
repz
(bad)
mov
sti
mov
jnp
cs
sbb
mov
mov
enter
mov
mov
arpl
mov
iret
test
jne
fisttp
mov
je
jp
xchg
push
jecxz
push
add
out
xchg
jns
gs
ror
(bad)
xor
(bad)
cmp
and
add
pop
test
pop
inc
outs
pop
das
(bad)
push
adc
push
pop
lahf
icebp
mul
mov
mov
clc
jle
inc
and
adc
inc
pop
jns
pop
ret
xlat
into
mov
dec
xchg
loope
cmc
jg
(bad)
sar
add
pop
fidivr
test
sbb
ins
or
sbb
sub
in
ds
mov
push
div
repz
add
fimul
jmp
pop
adc
hlt
xchg
shr
inc
and
add
rcr
addr16
and
dec
(bad)
jne
in
jecxz
ins
movs
test
call
inc
lds
add
pop
aas
push
outs
popa
std
fbstp
adc
push
out
mov
adc
fild
or
and
xlat
icebp
fwait
or
in
sub
mov
imul
mov
in
cs
stos
int3
sti
inc
inc
mov
adc
pusha
push
xchg
out
xor
out
xchg
sbb
jmp
test
dec
jo
or
sbb
repz
retf
outs
and
ret
jbe
push
mov
(bad)
les
test
mov
std
rcr
and
sbb
mov
call
xchg
dec
jp
dec
enter
push
mov
inc
inc
adc
ret
add
leave
div
out
push
(bad)
jno
mov
or
ret
xor
xor
cmp
(bad)
jl
iret
fimul
in
jg
ja
(bad)
lods
fisttp
jno
aam
lock
cmp
shl
test
and
add
pusha
mov
cmp
(bad)
jp
mov
jno
xchg
jecxz
xchg
xchg
ret
adc
inc
push
sub
push
jne
pop
push
(bad)
(bad)
dec
adc
mov
popa
(bad)
popa
lods
push
or
cli
out
xor
xchg
jnp
sub
or
test
add
push
aam
sub
inc
or
mov
mov
mov
inc
push
or
sbb
inc
push
xchg
adc
sbb
mov
mov
std
leave
dec
or
test
pushf
jge
jg
hlt
mov
cmp
sbb
lahf
retf
sbb
jl
fstp
dec
jmp
stos
cmps
test
adc
in
jg
sub
adc
xchg
leave
in
movs
push
loopne
pop
mov
adc
std
sbb
push
stos
cmp
inc
cmp
xchg
popf
mov
(bad)
jns
sti
aas
sub
pop
inc
inc
and
xchg
dec
mov
dec
add
add
add
(bad)
(bad)
sub
imul
dec
scas
sub
repnz
jns
mov
out
shr
add
iret
mov
mov
sahf
sub
aad
mov
xor
sub
dec
jmp
scas
sub
cmp
jnp
ds
fistp
ficom
adc
pop
push
setns
sbb
call
jb
inc
add
inc
dec
add
sbb
iret
(bad)
push
aaa
inc
enter
and
cmp
cmc
push
in
das
cdq
pop
and
(bad)
jge
shl
out
sbb
or
dec
ss
sahf
add
adc
cmp
stc
xchg
sti
jae
loopne
mov
push
inc
fst
xor
pop
or
lock
retf
mov
js
mov
retf
sub
(bad)
(bad)
ins
adc
arpl
cmp
inc
imul
call
mov
shl
(bad)
ficomp
cs
jecxz
push
push
lock
push
scas
pop
in
xchg
cld
inc
ret
sar
fnstcw
gs
add
sub
jle
push
(bad)
retf
push
int
pop
mov
sub
sub
sahf
inc
test
mov
dec
sub
push
inc
jge
fwait
movs
retf
in
or
test
jle
icebp
idiv
mov
mov
or
add
call
and
in
push
lahf
cmps
and
sti
(bad)
mov
cli
call
push
lods
xor
xor
jmp
jg
cli
pop
cld
pop
cli
inc
xchg
cmp
cmp
jne
mov
lahf
cld
popf
pusha
push
mov
lahf
scas
xlat
cli
inc
(bad)
mov
xchg
add
cs
jle
nop
mov
mov
jmp
popf
cmp
ss
and
cmp
test
inc
outs
std
cmp
push
xchg
fistp
int
sub
inc
test
(bad)
and
sub
jp
mov
inc
add
in
xlat
scas
or
push
hlt
ss
xchg
loopne
pop
jnp
push
push
rcl
xchg
mov
loope
sub
rol
mov
xor
add
xchg
sar
stos
fwait
push
add
add
pop
aas
mov
lods
xchg
mov
or
mov
(bad)
xor
sub
aam
ss
push
nop
mov
std
js
iret
pop
popf
outs
ins
arpl
mov
lea
dec
and
sub
and
jmp
and
in
loope
stc
hlt
dec
jnp
ins
aam
inc
mov
xchg
jno
push
in
jne
lea
xchg
or
clc
xchg
jmp
jno
push
mov
push
sub
(bad)
jmp
dec
imul
mov
cld
and
inc
jle
imul
dec
mov
loope
xor
cmps
mov
mov
adc
push
or
xlat
rcl
jmp
jb
add
xor
dec
dec
lods
in
dec
lods
mov
mov
xchg
sar
in
fbstp
or
sub
sub
inc
mov
and
sub
test
xor
movs
imul
jb
ja
sub
cmp
mov
xor
dec
dec
xor
mov
inc
xchg
int3
lock
xchg
add
sbb
(bad)
lock
cmp
mov
add
or
xor
or
sahf
ins
fyl2xp1
dec
and
loop
jmp
imul
add
dec
xor
xor
iret
sub
dec
les
push
push
inc
adc
std
outs
jb
mov
arpl
inc
add
jo
add
aam
div
fwait
(bad)
aam
mov
iret
sub
ror
ds
and
in
mov
inc
rol
or
cmp
jnp
jo
jb
std
xchg
pop
iret
mov
add
cmps
int3
jle
or
call
pop
mov
in
push
movs
sub
imul
stos
push
mov
and
or
sar
mov
imul
push
push
mov
xor
aam
add
aam
add
add
xchg
movs
cs
ror
dec
cmc
jae
imul
push
int3
call
call
call
adc
daa
fidiv
rol
and
lea
jne
push
test
js
adc
mov
je
bound
sub
sbb
iret
in
cmp
sbb
dec
push
pop
inc
or
sbb
cli
mov
out
in
fdivrp
pop
iret
push
leave
cs
sub
xchg
dec
adc
or
mov
outs
and
scas
xchg
call
pop
sbb
adc
inc
cwde
mov
jbe
cwde
add
xchg
(bad)
stos
inc
ins
and
mov
in
ins
dec
mov
movs
pop
sub
xchg
mov
lds
sub
push
mov
jp
in
sti
jle
sbb
ss
push
popf
sbb
or
loopne
sti
jg
stos
(bad)
in
dec
sbb
fldln2
pop
lods
xor
dec
sbb
and
mov
jbe
jecxz
xor
out
jg
sbb
and
loope
sti
gs
mov
jb
leave
test
sub
das
mov
nop
pop
enter
arpl
cmp
out
mov
cli
pop
jmp
cmps
sub
vmwrite
jp
push
arpl
adc
jmp
rol
dec
ret
sub
dec
es
neg
retf
fs
sub
sub
xchg
push
or
popf
push
in
and
cwde
mov
mov
cdq
sbb
jle
mov
or
pop
lock
js
iret
mov
sub
jmp
pop
xor
rol
and
xor
sbb
dec
add
cdq
imul
xchg
ret
aam
iret
push
bound
cmp
scas
shl
fbstp
xchg
mov
cmp
loope
shr
xor
sbb
push
xchg
and
(bad)
hlt
and
push
and
jl
aam
aas
or
pop
(bad)
jecxz
add
(bad)
nop
hlt
xchg
(bad)
push
in
hlt
jmp
ret
push
dec
push
mul
dec
cwde
pushf
pop
sahf
pop
push
jge
shr
xor
loop
cmps
cdq
(bad)
retf
scas
sar
cmps
int
(bad)
and
out
cmp
mov
xchg
sub
mov
cdq
cmc
jmp
fisub
movs
div
fld
cdq
pusha
data16
jne
cmp
inc
outs
test
retf
mov
mov
fnstsw
sahf
pop
cdq
repnz
mov
fwait
pop
dec
adc
sub
push
jae
mov
cmp
add
ds
out
lock
xchg
adc
jp
mov
inc
out
push
lahf
imul
outs
mov
xor
jno
cmp
imul
pusha
in
or
jae
inc
sub
cmps
xor
inc
bound
enter
and
pop
pop
fadd
mov
jl
push
inc
scas
or
jle
repz
mov
ret
ja
(bad)
sbb
test
or
dec
mov
add
into
popf
inc
add
pop
sub
mov
xlat
enter
mov
es
xor
lock
or
xchg
retf
std
ds
cmp
fld
hlt
or
xor
jle
enter
scas
fs
not
or
popa
push
mov
push
adc
xor
rcr
fstp
inc
dec
inc
xchg
inc
cmps
lods
cdq
imul
xor
and
or
fwait
(bad)
(bad)
mov
pop
fcmovb
fmul
mul
addr16
or
adc
lea
cs
out
pop
add
xchg
rcl
sub
int
sbb
movs
dec
jnp
push
pop
int3
cmps
and
test
arpl
(bad)
in
and
xchg
sahf
and
mov
lahf
ins
fdiv
mov
or
test
shl
or
dec
cmp
mov
ins
xor
cmp
rcr
mov
das
push
dec
fdivr
neg
rcr
jl
sbb
shl
push
mov
stos
ja
pop
inc
push
inc
lahf
fs
ret
jmp
mov
jmp
and
int
outs
add
cmovne
jg
xlat
stc
cli
je
fsubr
ins
lods
mov
icebp
arpl
movs
adc
and
adc
xchg
ror
pop
sub
xchg
iret
in
int
xchg
loopne
cdq
or
dec
add
pop
imul
popa
hlt
ds
cmp
jo
fistp
mov
mov
mov
inc
xor
(bad)
cmps
pop
cmp
jmp
(bad)
jns
xlat
jmp
push
dec
mov
jle
retf
push
je
fidiv
lods
test
sbb
mov
and
leave
mul
jns
mov
shl
add
inc
cmp
cmps
xor
or
cli
pop
jg
div
pop
xchg
jle
push
shl
lods
retf
push
sbb
xchg
mov
aas
test
cmp
rol
retf
je
aaa
sub
outs
test
movs
dec
sbb
retf
add
lock
(bad)
aam
inc
sub
or
adc
(bad)
out
test
pop
stos
mov
stos
js
jne
add
push
jns
sar
xchg
outs
inc
pop
cmc
inc
mov
mov
push
inc
test
(bad)
mov
aaa
adc
xchg
fild
pop
(bad)
xchg
jne
mov
imul
lods
dec
jno
cmp
jmp
add
sub
or
test
and
mov
push
dec
adc
or
lea
pop
push
iret
rcr
xor
and
cmps
jecxz
enter
test
shl
bound
sbb
push
ins
adc
pop
in
jg
outs
or
push
cmp
out
lods
or
xor
inc
or
xchg
(bad)
xchg
retf
add
dec
pop
lods
enter
vpaddsw
cmp
cdq
inc
mov
fidiv
dec
sbb
jns
push
clc
pop
(bad)
movs
arpl
pop
mov
pushf
xchg
in
scas
sub
pop
mov
(bad)
bnd
pop
push
adc
rcl
in
mov
mov
push
sub
test
and
push
mov
fcomp
data16
pop
leave
xor
(bad)
fucomip
scas
in
cmps
aas
xchg
push
xlat
ds
leave
mov
test
sub
mov
cmps
ja
push
call
bound
retf
inc
mov
cs
nop
dec
and
mov
xor
shl
or
xchg
mov
loopne
mov
dec
imul
adc
add
jno
cmp
inc
cmc
mov
cmp
add
push
and
dec
jno
and
shr
jecxz
scas
(bad)
rol
leave
push
and
pop
xchg
ret
aam
sar
cs
fcmovne
fnstsw
loopne
lods
imul
sub
rcl
xchg
cmp
ror
jmp
pop
xchg
pop
lods
add
es
cmp
leave
es
lods
scas
enter
sbb
lods
test
push
jp
loope
add
add
and
retf
rcr
(bad)
sub
pop
enter
push
call
sar
not
push
xor
stc
push
repz
pop
sub
shl
pop
jb
mov
pop
dec
mov
dec
sub
push
dec
mov
or
fcomp
fdivrp
xchg
dec
or
sbb
sbb
das
jno
call
pop
xchg
test
push
add
mov
aam
int
cmp
loope
xchg
movs
les
jbe
mov
(bad)
aad
mov
add
stc
test
jns
loopne
outs
fdivr
mov
push
out
xchg
daa
dec
and
pop
fs
repnz
push
push
icebp
mov
int
sub
mov
stos
add
inc
sbb
add
mov
push
cmp
out
cmp
and
mov
xor
jge
imul
sub
pop
jmp
and
dec
ss
mov
call
es
or
add
push
add
aam
jecxz
fcmovu
fisttp
popa
pop
outs
pop
inc
or
sbb
lahf
test
jo
sub
shl
scas
jae
cli
std
outs
outs
push
xor
adc
fcom
in
shl
jmp
and
mov
nop
inc
scas
outs
sub
pusha
mov
out
popa
inc
fnstsw
loope
es
adc
mov
dec
dec
ins
inc
pop
push
pop
sbb
test
pop
(bad)
cmps
push
fcomp
(bad)
aad
inc
sbb
add
enter
xchg
inc
push
inc
pop
pushf
jno
mov
imul
(bad)
adc
cld
pop
std
jecxz
xor
mov
bnd
jge
fld
push
xchg
pop
pop
cmc
jp
lahf
stos
test
inc
hlt
mov
(bad)
aas
scas
mov
(bad)
push
jecxz
jecxz
pop
fwait
add
lahf
stc
hlt
fnstenv
js
jge
les
inc
xor
sar
in
mov
inc
mov
lahf
fwait
psubb
push
sub
xor
xlat
jmp
and
xor
cmp
outs
dec
nop
push
loop
iret
sbb
stos
repnz
push
jg
push
adc
jmp
(bad)
dec
jg
in
sub
clc
mov
dec
mov
out
pop
push
aad
and
jnp
jge
call
(bad)
fist
push
movs
dec
push
push
push
sahf
test
push
movs
dec
movs
stos
inc
xor
or
or
mov
dec
mov
mov
cmc
test
jecxz
iret
push
xchg
js
mov
cmps
and
xchg
push
pop
or
push
call
inc
push
rol
pop
pop
mov
sub
out
lahf
div
mul
push
sub
sbb
and
push
dec
(bad)
push
xor
jl
(bad)
repnz
pop
icebp
ins
cmps
movs
inc
and
jmp
and
dec
scas
rcl
iret
test
or
fild
jle
mov
jmp
ins
add
xor
push
add
dec
sub
add
mov
push
sub
icebp
hlt
call
add
and
mov
dec
inc
push
mov
sbb
push
sar
std
pop
push
and
sti
inc
(bad)
adc
push
inc
aam
(bad)
cld
push
inc
stos
pop
scas
xor
fcmovu
and
mov
push
cmps
xor
mov
(bad)
pop
hlt
das
xor
enter
in
std
or
inc
js
mov
movs
xchg
mov
dec
ds
fs
push
mov
lods
or
sbb
pop
ja
repnz
xor
pop
test
cmps
ds
std
jg
pop
icebp
std
cmp
sbb
mov
sub
ins
inc
(bad)
mov
mov
in
jmp
jg
retf
xlat
adc
xor
jmp
shr
iret
(bad)
inc
in
mov
ds
jmp
call
mov
clc
and
add
push
rcl
jmp
inc
stos
in
adc
dec
out
ins
jle
mov
in
mov
test
(bad)
sbb
or
bnd
movs
sub
jmp
jecxz
in
add
dec
adc
test
xchg
mov
mov
mov
push
mov
cli
(bad)
pop
or
jp
sub
les
pop
cmp
out
jns
pusha
and
cmp
inc
adc
enter
ins
sub
pop
jo
adc
shl
in
jbe
cmc
push
and
fbld
out
pushf
stos
inc
add
call
data16
add
dec
(bad)
jge
sbb
stc
or
lea
mov
sub
int
push
js
adc
jge
jns
rcr
sti
xchg
outs
lods
cmps
push
stos
leave
sub
push
cmp
jl
xchg
sub
mov
ja
fdiv
rcl
scas
nop
cmps
push
cmp
aaa
fidiv
xchg
jns
sub
inc
xchg
xchg
dec
movs
mov
xlat
xchg
cmp
pop
cmp
cli
jnp
sub
lds
mov
xor
push
fwait
cmp
sbb
(bad)
mov
(bad)
push
lods
sbb
es
cld
std
cmp
sub
inc
and
pop
sbb
(bad)
add
and
xchg
push
inc
push
(bad)
pusha
jp
test
ss
lock
ficomp
bound
or
jecxz
data16
mov
mov
xor
xchg
pop
sub
mov
cmc
rcr
push
xor
adc
sub
and
fcom
arpl
cmp
ret
retf
mov
ror
jg
cmp
jne
ins
cmp
int
cld
mov
ret
retf
inc
push
and
dec
popa
xchg
mov
sub
sbb
neg
outs
sbb
xor
cmp
pop
in
mov
mov
or
test
xor
inc
jg
dec
std
mov
xor
rcl
push
nop
mov
mov
jge
aas
pushf
adc
ins
das
cli
pop
inc
push
cmpxchg
loope
fsubrp
jnp
push
push
push
xchg
or
xor
lock
xchg
outs
xchg
xor
sbb
enter
mov
and
sar
sub
aaa
ficomp
scas
ret
out
xor
xchg
mov
sub
jecxz
jo
inc
pop
lods
sub
loop
aaa
sbb
das
daa
fistp
sub
retf
aad
les
and
cmps
mov
daa
stc
or
repz
mov
mov
leave
mov
dec
push
cdq
je
call
or
adc
cmp
fdivr
sahf
or
lahf
test
and
sbb
push
cmp
out
bnd
aad
inc
loopne
movs
scas
(bad)
push
cli
sti
inc
and
mov
push
add
les
movs
clc
mov
adc
pop
mov
cld
clc
jg
hlt
xor
ins
fs
cdq
mov
gs
add
call
sub
cmc
jg
or
push
(bad)
enter
ficom
jne
sub
pop
jne
jp
out
and
inc
xchg
aas
mov
les
ins
xchg
or
mul
test
sahf
div
push
test
dec
movs
or
cmp
add
xchg
dec
inc
xor
sub
ins
arpl
icebp
xor
mov
xchg
mov
bound
inc
pop
pop
xchg
mov
mov
in
out
test
mov
add
aam
xchg
jmp
cld
jmp
jno
repnz
add
cmps
pop
mov
lea
aad
sub
cmp
inc
mov
dec
ins
dec
scas
iret
hlt
neg
test
int3
mov
ret
inc
(bad)
mov
mov
ja
ret
std
test
sbb
lock
popf
xor
pop
xchg
adc
mov
lea
mov
in
and
push
push
sub
add
add
pop
push
push
dec
sbb
pop
loope
jg
pop
fsubr
mov
or
or
maxps
mov
test
sub
xchg
(bad)
mov
test
mov
cli
mov
push
cmp
js
xor
pop
icebp
inc
pop
inc
pop
stos
(bad)
xor
ffree
add
cmps
fsubr
jg
inc
sahf
jnp
dec
add
in
fcmovu
adc
test
test
scas
in
mov
pop
jge
cmp
cmp
cmc
add
in
sti
outs
mov
movs
pop
test
repz
dec
fst
sub
sub
and
mov
add
mov
add
jno
(bad)
sbb
adc
movs
dec
test
(bad)
xchg
popa
xchg
push
add
daa
inc
adc
cmc
pop
dec
(bad)
rol
mov
jmp
clc
jmp
mov
hlt
and
out
dec
test
out
xchg
mov
test
or
pushf
jp
mov
lea
scas
xchg
aam
daa
xchg
add
and
push
dec
mov
(bad)
xlat
iret
dec
push
pop
daa
mov
dec
test
cwde
mov
rcl
ret
pop
fcomp
mov
sbb
mov
sar
iret
xchg
cmp
fstp
shr
xor
mov
or
aam
aad
cld
sub
outs
ret
(bad)
adc
cmp
popf
push
sub
mov
sti
xor
daa
icebp
sbb
add
scas
nop
and
icebp
xor
mov
add
popf
add
loopne
(bad)
ins
call
sub
or
add
cwde
bnd
jge
out
sub
and
imul
dec
xor
idiv
jp
ds
sbb
sub
mov
xor
jp
in
clc
scas
mov
fs
pop
jecxz
leave
dec
adc
sbb
je
mov
popf
and
jp
dec
and
add
icebp
cs
adc
aas
xor
jae
imul
dec
call
stc
hlt
scas
xchg
sub
push
inc
imul
sub
dec
(bad)
mov
mov
sti
jbe
fadd
pop
(bad)
bound
es
je
lea
mov
rol
(bad)
retf
xchg
sar
(bad)
enter
sahf
sub
hlt
push
jmp
jg
leave
inc
(bad)
lds
add
(bad)
lds
add
push
inc
lea
in
or
imul
arpl
or
push
(bad)
pop
cmp
stos
jl
nop
jmp
cmp
push
cmp
cmp
lea
in
rcr
mov
or
cmp
push
push
in
rol
mov
hlt
shr
inc
mov
call
push
shl
and
repnz
cwde
cmps
sti
jp
sub
lea
sub
sub
add
stc
imul
fucomp
sbb
rcr
movs
inc
mov
add
push
add
jmp
data16
loope
lods
mov
add
imul
push
out
into
out
cmp
jmp
jmp
daa
gs
(bad)
or
or
and
sub
iret
(bad)
fwait
ins
scas
(bad)
push
jmp
mov
movs
fmul
arpl
jmp
cmps
fnsave
mov
dec
push
add
xor
rcl
dec
xchg
repnz
add
cmps
xchg
adc
clc
add
pusha
and
xlat
pop
jmp
jge
pop
je
cdq
outs
xor
adc
or
stc
mov
pop
mov
mov
nop
aam
les
mov
mov
push
pop
inc
cmp
and
cmps
cmp
cmp
enter
jne
lods
or
push
stc
cmp
in
xchg
je
inc
out
mov
adc
add
add
(bad)
retf
push
or
cmps
mov
movs
push
cmp
inc
add
and
lods
cmc
stc
or
cmp
mov
mov
pop
and
icebp
sbb
enter
in
cli
adc
popa
adc
add
in
ds
or
(bad)
jnp
fidiv
mov
pop
jne
mov
xor
stos
sbb
xchg
outs
ficomp
pop
inc
push
jnp
dec
mov
mov
movs
ficomp
push
push
push
dec
into
movs
jno
adc
repnz
mov
pop
push
movs
mov
cmp
add
mov
stos
inc
sub
test
stos
push
out
mov
(bad)
in
xchg
push
cwde
test
popf
jmp
cmp
xchg
sbb
cli
fwait
push
and
scas
sbb
add
inc
sub
in
sub
retf
stos
inc
or
rcl
push
imul
cmp
retf
jl
mov
(bad)
lods
pop
cmp
test
jmp
test
outs
dec
gs
test
or
dec
(bad)
and
jnp
mov
iret
mov
es
sar
shl
push
out
push
adc
call
loopne
jno
mov
sbb
jno
cmp
push
bound
ss
and
sbb
xchg
leave
sbb
sub
mov
mov
cmp
sub
mov
add
pusha
push
push
bound
and
adc
mov
jae
repz
sub
push
pop
push
dec
mov
aad
shr
or
sbb
cmp
mov
not
out
push
(bad)
cwde
lods
jl
push
cmps
dec
loop
loope
jl
jno
xchg
in
xchg
mov
fist
(bad)
sbb
(bad)
push
(bad)
jecxz
inc
sbb
add
shl
mov
shl
fcomp
cmp
and
lods
mov
sub
sahf
pop
and
lods
mov
jmp
add
shl
xor
jnp
in
out
(bad)
xor
mov
int
add
push
test
inc
adc
imul
shr
mov
cmps
xor
sbb
test
rcl
pop
adc
movs
push
icebp
dec
pop
ins
jmp
outs
test
std
out
xchg
xor
mov
and
das
lods
add
push
shr
nop
adc
sbb
cmps
or
js
lods
ret
(bad)
in
xchg
and
add
in
repz
sahf
mov
xchg
adc
jecxz
inc
push
add
arpl
aam
push
mov
jmp
ins
dec
cmp
fisttp
fisubr
enter
fimul
add
loope
cmps
lods
adc
mov
sbb
sub
dec
(bad)
jecxz
jae
int3
push
pusha
test
les
aas
cs
clc
dec
xor
sub
stos
xchg
ret
mov
gs
test
jg
aam
retf
sbb
or
jno
and
lds
sbb
sub
bound
sbb
and
arpl
dec
inc
inc
mov
fcmovnbe
iret
push
sar
xchg
push
dec
adc
repnz
cmp
sbb
cmps
mov
pop
and
cmp
mov
mov
ds
jmp
adc
sti
ret
mov
aad
inc
xor
ret
xchg
ret
inc
jo
adc
lahf
fs
outs
cs
add
pop
xor
fsubr
inc
push
xchg
jmp
ror
mov
int
dec
imul
add
popf
int
stos
pop
xchg
lock
in
push
or
stos
push
test
bound
test
xchg
push
mov
cwde
enter
std
dec
imul
adc
jp
loop
and
movs
enter
dec
and
mov
leave
(bad)
cwde
sub
inc
sub
and
lea
das
xchg
pop
scas
jecxz
loopne
push
xchg
mov
pop
xlat
push
inc
cld
jnp
dec
cmp
sub
dec
xor
ss
ret
xchg
mov
test
gs
push
sub
div
dec
dec
xor
cmc
push
adc
push
add
sbb
cmp
fidiv
jnp
cmp
mov
mov
enter
jecxz
xchg
xchg
inc
sbb
mov
and
test
dec
movs
nop
(bad)
xor
dec
push
dec
or
or
and
lahf
and
sbb
xor
pusha
and
test
sub
inc
cmp
test
xor
fimul
gs
mov
push
sub
and
lods
mov
xor
xchg
or
jo
push
and
mov
call
inc
call
pop
push
test
int
fwait
pop
scas
cli
faddp
xchg
cmp
and
arpl
movs
aas
iret
(bad)
stc
icebp
jmp
je
inc
xor
adc
cmps
lods
pop
bnd
pop
jecxz
sub
push
sub
adc
aad
push
xor
push
push
mov
sbb
std
jns
jmp
scas
sbb
push
(bad)
pop
xchg
inc
imul
cdq
mov
or
les
stc
jg
nop
cmp
mov
xchg
mov
aam
sbb
enter
lods
mov
cmc
pop
xchg
in
push
(bad)
retf
xor
push
mov
(bad)
push
inc
mov
rep
xor
push
push
scas
sbb
dec
mov
xor
inc
nop
inc
dec
aam
mov
mov
(bad)
xchg
cli
(bad)
fst
in
pop
xchg
loope
jecxz
xchg
scas
or
fcmovne
(bad)
sbb
inc
jmp
and
sub
xchg
xor
push
out
fadd
imul
in
aam
inc
pop
add
dec
push
call
jmp
in
cmc
loopne
add
jge
ss
cmp
pop
cmp
sbb
xchg
inc
xor
dec
push
add
retf
jecxz
inc
fucomip
dec
stc
div
mov
ins
or
adc
add
cmp
pop
push
xchg
jne
cmp
pop
ret
mul
in
test
push
(bad)
ror
add
and
cmps
xchg
test
test
mov
add
adc
add
ss
xor
push
and
xchg
ins
imul
cmp
cmps
in
jl
retf
pop
mov
fwait
add
cmp
iret
dec
les
push
cmps
das
sbb
ins
das
iret
xlat
sahf
pop
aas
xchg
out
ret
repz
add
dec
jmp
dec
(bad)
mov
push
xor
test
push
repz
ror
adc
scas
xlat
cli
jnp
int3
mov
ins
xchg
cmp
or
jmp
ror
jg
test
call
push
jg
neg
jb
scas
lahf
dec
scas
in
out
or
clc
add
cmc
sbb
jg
(bad)
cmps
mov
push
fisttp
repz
ficomp
xlat
sbb
or
lahf
iret
cli
in
mov
lahf
dec
mov
adc
inc
inc
iret
cld
mov
popa
cmp
sub
test
and
and
cmps
mov
inc
mov
icebp
lea
and
enter
fiadd
inc
sub
pop
jge
in
push
adc
jge
out
xchg
jge
push
sar
xor
adc
dec
call
stc
je
sti
mov
and
fcom
in
cmps
aad
jg
and
or
push
push
inc
and
out
repz
mov
sysenter
movs
jbe
and
inc
add
aam
dec
inc
jge
jp
pop
mov
and
inc
xchg
xor
sbb
push
iret
dec
jno
cmp
cli
cld
lea
sbb
mov
adc
jg
ret
test
xchg
jns
push
and
pop
ficom
xchg
ins
imul
mov
stos
jns
and
push
sahf
lahf
retf
test
cdq
cmp
jb
adc
push
sub
cmp
frstor
icebp
cmp
dec
gs
jmp
pop
enter
(bad)
sbb
(bad)
nop
pop
mov
test
mov
mov
loop
jg
mov
adc
scas
psubusw
hlt
jp
and
out
enter
fstp
in
cmps
(bad)
sbb
inc
xchg
push
out
repz
je
push
push
retf
inc
mov
in
loopne
ds
jnp
mov
popa
stos
out
inc
add
aas
mov
icebp
ds
call
and
xor
sub
sbb
test
add
imul
pop
(bad)
pop
mov
dec
dec
imul
mov
jne
sub
xchg
stos
call
adc
jno
test
xchg
mov
pop
pop
jno
test
sub
add
cmp
or
sti
jnp
jae
adc
sub
ret
fild
data16
fstp
cmp
sahf
arpl
enter
mov
or
lock
fidiv
sbb
push
jmp
lahf
jo
enter
sub
mov
cmp
mov
(bad)
out
push
(bad)
xchg
dec
xor
(bad)
das
mov
dec
test
adc
mov
add
mov
jno
jecxz
inc
dec
fs
pop
scas
cmp
out
movs
(bad)
jmp
push
adc
xchg
pop
mov
lock
adc
adc
xor
les
sub
imul
add
push
sub
jmp
add
pop
adc
jmp
cmps
out
cmp
adc
adc
dec
pop
ror
inc
add
data16
(bad)
mov
or
std
fwait
test
imul
in
pop
jne
mov
nop
sbb
arpl
sub
xchg
and
inc
pop
scas
fwait
push
out
movs
xchg
or
push
push
jge
push
push
(bad)
sahf
mov
inc
mov
test
sbb
icebp
or
(bad)
mov
ret
inc
adc
adc
push
and
(bad)
and
jle
pop
ret
or
ja
leave
daa
les
std
xchg
pop
add
outs
mov
fs
aaa
test
xchg
cmps
jge
dec
push
inc
mov
mov
xchg
mov
or
stc
sbb
aaa
sbb
rol
leave
inc
cmp
dec
mov
jp
cwde
rol
jp
popa
lock
clts
push
pop
xor
cld
cli
movs
ins
pop
retf
into
xchg
jmp
shl
out
cmp
mov
out
cmp
rdtsc
shl
push
lds
push
and
sub
popf
sub
sahf
push
mov
cli
ins
cmp
inc
pop
fs
push
movs
mov
fisubr
jb
or
dec
adc
inc
addr16
les
inc
xor
pop
dec
mov
sub
xchg
movs
xchg
out
sti
inc
rcr
mov
jbe
pop
xor
out
lock
das
loopne
mov
lds
or
push
add
xor
sbb
leave
popa
sbb
cmp
retf
cmc
pop
adc
add
pop
inc
repz
adc
and
jo
dec
inc
fisub
sub
mov
add
xchg
push
setle
push
pushf
or
xchg
fcmovu
test
scas
pop
test
int3
xor
and
cwde
mov
daa
add
aaa
add
pop
popa
dec
leave
out
mov
add
out
pop
push
in
popa
iret
(bad)
xor
les
xchg
add
aas
mov
mov
jp
xor
xchg
mov
aad
mov
lea
icebp
inc
lods
sbb
pop
push
or
pop
div
std
cli
xchg
dec
push
das
add
add
sub
sub
fsubr
mov
imul
mov
xchg
mov
sbb
pushf
jecxz
enter
jg
hlt
dec
enter
inc
fidiv
dec
(bad)
pop
mov
xchg
sub
scas
fsubr
sbb
sbb
mov
fwait
jnp
repnz
mov
pop
pop
mov
out
popa
test
out
sbb
push
popa
dec
push
dec
and
sub
add
cs
in
jb
(bad)
or
ins
xor
dec
inc
xor
sub
sbb
cwde
jmp
push
mov
cmp
popa
bound
retf
gs
pop
jns
xor
out
xor
fdivr
fmul
dec
es
cld
hlt
retf
push
and
xor
sbb
imul
aam
push
dec
xlat
sbb
mov
data16
in
push
jecxz
xchg
stos
lock
adc
or
sub
and
loopne
inc
sbb
and
xor
arpl
shr
stos
sbb
push
add
mov
cli
std
dec
movs
mov
pusha
pop
push
(bad)
lahf
xor
std
pop
imul
cli
iret
cwde
in
cs
cmps
jne
add
stos
inc
push
movs
inc
pop
mov
neg
pop
cmp
cmp
push
std
add
js
adc
push
cmp
inc
enter
cld
iret
push
cmp
xchg
cmps
clc
xchg
aaa
jp
fdiv
pop
shl
jmp
adc
mov
dec
and
js
out
aam
jne
push
jnp
pusha
mov
call
lahf
and
jl
add
out
mov
popf
enter
and
pop
lock
nop
mov
push
mov
cs
push
outs
lods
cmps
sbb
(bad)
and
fdiv
mov
adc
test
sti
cmp
das
jns
test
imul
push
fs
test
jg
test
dec
add
nop
in
xchg
scas
retf
sbb
hlt
(bad)
dec
mov
aam
call
dec
xchg
push
push
xchg
inc
add
push
or
dec
add
adc
jmp
mov
and
icebp
out
and
in
cld
test
ins
in
rol
lock
in
add
pop
iret
cmps
mov
loopne
cmp
mov
sbb
iret
mov
and
fidivr
inc
cld
frstor
movs
mov
(bad)
and
mov
emms
xchg
and
loope
xchg
(bad)
cmp
jle
cld
mov
jne
adc
sti
adc
jecxz
outs
jp
mov
and
jne
out
test
and
retf
test
adc
adc
retf
cmc
add
cli
xadd
call
popf
mov
call
sbb
(bad)
shl
aas
aad
movs
std
repz
dec
push
scas
xchg
mov
mov
mov
(bad)
popf
inc
push
aam
xchg
jle
xchg
scas
or
adc
xlat
lea
retf
je
push
pop
ss
xchg
mov
mov
pop
cmp
inc
cmp
outs
or
(bad)
sub
inc
mov
jno
lea
sub
(bad)
adc
imul
sbb
loopne
and
(bad)
mov
sar
and
lock
sbb
push
push
ja
adc
ret
rcl
cmc
push
or
or
lds
cmc
adc
push
(bad)
xor
xchg
ror
dec
out
test
xchg
dec
sbb
cmps
in
jo
mov
jae
popa
or
movs
in
jmp
lods
push
scas
cmps
cmp
mov
(bad)
jge
push
cdq
std
rol
mov
ja
dec
push
mov
xchg
mov
shl
ret
int3
mov
lahf
mov
and
loop
mov
mov
retf
fwait
push
inc
or
retf
or
lds
adc
sahf
gs
aaa
mov
mov
lods
das
jecxz
int3
stos
push
movs
push
pop
sbb
stos
mov
test
add
ficomp
xchg
sbb
or
lea
in
jp
sub
sub
aam
pop
jmp
xchg
js
dec
cmps
adc
in
and
mov
ds
in
aad
test
mov
dec
add
xchg
push
jecxz
inc
inc
xlat
mov
out
ss
outs
dec
mov
adc
add
or
mov
jecxz
out
hlt
movs
dec
push
dec
pop
pop
not
outs
mov
fcomp
dec
push
cmp
sub
mov
mov
and
rcr
pop
xchg
jo
or
addr16
in
outs
push
ja
sbb
or
add
cmps
push
pop
xor
icebp
push
(bad)
push
aaa
push
in
dec
test
adc
xchg
add
push
clc
imul
stc
test
(bad)
das
or
or
sti
js
les
nop
add
push
dec
outs
cmp
repz
into
outs
ins
(bad)
loopne
jne
dec
mov
mov
sti
xor
xchg
in
push
jl
cmp
sub
mov
sub
xchg
cmp
cld
mov
addr16
xor
in
movs
(bad)
sbb
or
je
push
push
xor
mov
xor
mov
int3
in
iret
jno
or
sysexit
push
jo
clc
imul
cmp
dec
ret
adc
xor
pop
ds
je
and
movs
add
mov
cli
sti
xchg
adc
dec
stos
xchg
dec
and
in
pop
das
pop
mov
out
and
dec
rol
inc
jle
cs
jnp
lahf
shr
mov
les
mov
fild
les
idiv
stc
push
cmp
int3
out
mov
cmp
(bad)
loop
xchg
xor
mov
mov
xor
mov
adc
sub
neg
pop
and
fisubr
cmps
movs
popf
fdiv
cld
test
mov
dec
sbb
inc
int3
or
mov
push
jle
dec
dec
xlat
sbb
push
jns
and
outs
dec
add
les
lahf
arpl
dec
mov
cmp
enter
ret
mov
mov
out
sahf
jg
jge
fwait
add
aas
jnp
or
sar
cmp
cli
repz
rcr
jmp
es
jp
movs
rcl
mov
add
xchg
out
outs
jle
aas
icebp
ror
fdivr
jbe
fistp
retf
popa
xlat
and
push
std
pop
ds
lock
clc
popa
lods
movs
or
xchg
pusha
lock
dec
mov
(bad)
in
dec
jecxz
mov
int
dec
sub
cli
and
jmp
movs
mov
fild
cmc
add
xchg
push
push
or
(bad)
movs
adc
jmp
data16
out
loopne
dec
inc
cmp
dec
dec
repnz
lods
int3
add
jecxz
and
pop
ror
ins
hlt
cli
cmp
(bad)
mov
iret
mov
in
mov
mov
in
movs
jno
je
jns
mov
push
movs
push
push
in
lods
nop
scas
cmc
adc
cmps
push
aas
dec
jp
jnp
and
iret
(bad)
in
jmp
and
das
in
not
gs
mov
(bad)
adc
xchg
ror
aam
mov
push
into
cmps
push
dec
mov
dec
adc
inc
loope
pop
add
pop
and
cmp
ins
ja
mov
ror
addr16
movs
pop
sub
mov
xchg
dec
xor
(bad)
mov
add
ins
dec
test
jns
std
inc
mov
into
inc
or
out
iret
cld
push
cmp
jmp
leave
push
loop
mov
push
and
outs
cmp
mov
jle
es
fbld
inc
fwait
ja
pop
int
sbb
push
xchg
push
aam
push
cmp
dec
jo
mov
jne
sbb
popf
inc
add
gs
popf
fcom
add
cmp
test
loop
cmp
cmps
aas
loopne
mov
popa
mov
data16
ret
push
add
leave
pop
retf
lahf
ucomiss
cmc
(bad)
lahf
jmp
mov
adc
sbb
or
mov
jmp
(bad)
gs
(bad)
enter
jg
cmp
inc
jg
cmp
push
pop
outs
inc
xchg
xchg
into
fbld
mov
and
stc
jmp
xchg
jmp
xor
fwait
cmp
mov
inc
xchg
clc
mov
add
sti
retf
das
xchg
mov
jne
test
mov
add
jmp
(bad)
in
fild
and
jle
push
or
mov
rol
call
out
sti
arpl
pusha
jns
lods
hlt
xchg
adc
xlat
push
cmps
mov
xor
out
lds
fsub
clc
(bad)
icebp
retf
push
push
jg
fistp
cli
jmp
enter
adc
ret
dec
or
xor
xor
sbb
cmc
inc
psrld
dec
or
push
stos
js
mov
call
pop
fldlg2
sub
jbe
es
mov
in
xchg
rcr
mov
mov
(bad)
mov
test
add
xlat
jne
fistp
addr16
outs
push
mov
inc
inc
fsub
sub
sti
jne
mov
repz
add
rcl
mov
dec
fldenv
nop
inc
xchg
aam
and
push
mov
add
(bad)
mov
outs
adc
push
cmc
addr16
pextrw
add
xor
or
adc
sbb
hlt
lea
outs
pop
imul
inc
push
stos
cmps
jp
dec
and
xchg
pop
jp
cmp
cmp
jno
and
in
mov
xlat
jnp
xor
bound
sbb
xchg
pop
xor
ins
aaa
or
or
inc
shl
or
push
dec
jo
jp
jnp
pop
xchg
ret
dec
stos
pop
mov
push
mov
xchg
mov
push
fnstenv
jnp
pusha
and
imul
push
mov
sub
packsswb
ret
pop
dec
data16
in
aam
cmps
imul
popf
add
shr
jnp
cmc
add
jo
sahf
movs
dec
add
(bad)
sbb
movs
mov
sbb
int
cmp
sbb
and
jb
pop
loopne
pop
out
ds
arpl
shl
cmp
push
dec
stc
aas
aad
cmps
push
xchg
sub
pop
mov
faddp
mov
bound
jl
shl
punpcklbw
stc
jg
(bad)
push
jo
loope
add
xchg
cmc
cli
jno
not
pop
sahf
and
ds
dec
movs
adc
xor
xlat
in
(bad)
push
pushf
mov
lahf
movs
jge
(bad)
mov
and
not
imul
mov
(bad)
push
mov
outs
fiadd
sub
pop
fst
sbb
hlt
cmp
arpl
push
icebp
iret
bswap
adc
movs
push
out
pop
xor
add
push
add
push
in
inc
mov
jl
sub
jo
add
dec
pusha
sbb
aam
sub
inc
stc
cmp
push
inc
ss
jbe
fwait
sahf
inc
add
xlat
mov
mov
mov
daa
xchg
imul
dec
dec
cmovle
add
test
xor
in
inc
xchg
xor
leave
push
mov
in
sti
mov
aas
push
imul
in
mov
inc
lea
mov
add
gs
test
repnz
xor
ds
pop
mov
inc
scas
lock
xlat
mov
adc
nop
and
inc
outs
lods
ror
or
mov
loop
retf
aas
or
or
les
inc
dec
ds
and
hlt
sbb
lea
dec
or
mov
mov
pop
or
or
cli
fwait
push
mov
loope
push
(bad)
out
push
stos
rol
stos
pop
rcl
push
ret
cmc
sbb
add
inc
mov
xchg
out
popa
(bad)
in
cmp
cmp
mov
fdivr
adc
mov
movs
ins
sub
sbb
bnd
and
or
push
(bad)
cli
pop
fs
pop
dec
call
sub
dec
xchg
pop
xchg
inc
cmovp
aad
rol
pop
push
cwde
popf
retf
retf
adc
push
jmp
lods
lods
outs
jle
pop
call
sub
movs
sub
inc
dec
xor
xchg
pop
and
cmps
or
and
pop
adc
cs
je
call
inc
out
fcmovnu
xchg
gs
loope
daa
inc
mov
icebp
and
ror
in
and
fs
mov
sub
and
fwait
jnp
test
pop
dec
test
inc
dec
jmp
pop
adc
xor
imul
xor
mov
lea
mov
ins
inc
add
xchg
das
sbb
xlat
fnstsw
dec
jb
mov
out
ins
test
xchg
pop
mov
sub
je
or
or
bts
mov
out
ins
fwait
outs
push
adc
sub
mov
inc
pop
in
fcomp
sbb
pop
jge
inc
sbb
xor
jge
push
inc
add
add
adc
pop
cmp
jp
sub
mov
dec
cli
push
push
lahf
idiv
les
arpl
dec
mov
mov
sbb
cmp
call
inc
lahf
mov
jg
inc
inc
in
mov
push
jge
ss
xchg
push
test
aas
cmp
into
mov
jle
outs
(bad)
fiadd
nop
mov
out
cmps
xlat
js
cdq
xlat
cdq
or
push
and
pop
pop
add
nop
inc
retf
xchg
inc
mov
xor
xor
ss
inc
sbb
xchg
test
mov
cmp
sbb
mov
lods
inc
or
pop
and
pop
push
dec
xor
outs
sbb
inc
adc
add
xor
mov
add
dec
mov
out
arpl
(bad)
pop
add
xchg
dec
loope
push
dec
adc
jnp
test
test
aas
dec
lahf
icebp
cdq
mov
sbb
mov
sbb
or
adc
mov
and
jo
movs
adc
sti
jle
jl
das
mov
add
mov
mov
push
cmps
(bad)
cmc
mov
xchg
sbb
jmp
icebp
xchg
repnz
and
pusha
cmps
sar
aaa
jecxz
scas
mov
data16
popf
push
jae
dec
cmp
iret
cld
pop
dec
ins
sti
jp
inc
xlat
push
(bad)
(bad)
jl
mov
mov
data16
or
cmp
sbb
pop
test
add
sbb
add
outs
jne
lock
jecxz
push
out
js
lds
dec
xchg
in
sti
imul
in
data16
loope
jmp
lock
inc
aaa
popa
out
cmc
xor
cmp
xchg
jmp
adc
xor
and
mov
add
in
fdivr
test
cmp
sub
xchg
and
in
xchg
retf
fwait
cmp
xor
call
jns
xlat
xchg
pop
jo
xor
rcr
sbb
mov
sbb
sub
xor
mov
cwde
fisubr
bound
cvtpi2ps
repnz
xchg
scas
inc
pop
sub
popa
mov
xor
ret
xor
es
jne
loop
sbb
in
adc
icebp
stc
inc
jb
aad
daa
aas
loope
mov
jbe
push
inc
and
add
inc
pop
sub
aas
or
inc
push
and
rol
jmp
mov
push
dec
aaa
mov
lds
push
push
shl
push
sub
jmp
test
out
and
mov
(bad)
ret
push
mov
add
pusha
pusha
icebp
iret
xchg
inc
mov
push
mov
dec
pop
into
mov
pop
pop
mov
cwde
cmc
pop
int3
je
fstp
jp
dec
jmp
and
sbb
lods
sahf
gs
push
mov
mov
and
jg
sahf
data16
mov
test
jg
pop
fistp
adc
jnp
repnz
cmc
lea
push
aad
sbb
inc
(bad)
cmps
shl
popf
sbb
mov
push
pop
mov
xchg
jne
lahf
imul
rol
mov
push
mov
jo
mov
jnp
and
aaa
jo
dec
xlat
fiadd
jae
xchg
imul
fistp
mov
mov
shl
inc
pop
pop
data16
or
mov
xor
inc
jp
loopne
jns
ins
jecxz
out
or
inc
(bad)
push
test
mov
movs
cwde
fldz
sti
lea
and
inc
loope
or
lahf
push
jnp
pop
fnstcw
(bad)
jmp
jp
cld
cmp
xor
pop
mov
pop
mov
sub
adc
lods
rcr
data16
in
in
icebp
in
mov
lods
test
xchg
mov
into
call
push
adc
xor
and
pop
retf
pop
aam
repnz
pop
aas
fidivr
outs
cmp
jp
pop
mov
dec
jecxz
and
or
sub
jns
inc
xor
sub
(bad)
push
out
jno
add
popf
sbb
imul
repnz
lahf
(bad)
pop
xchg
cmp
jmp
std
(bad)
mov
sbb
hlt
imul
add
ss
lahf
shr
cmp
in
movs
xchg
inc
sbb
sbb
popf
xor
jle
shl
outs
loop
je
xor
add
lds
imul
add
inc
stos
icebp
add
test
or
repnz
cmp
imul
inc
and
sub
adc
nop
fsub
push
jp
in
in
mov
sbb
mov
(bad)
cmp
sar
inc
stos
cdq
test
daa
stc
and
jg
xchg
mov
mov
cmps
xor
loope
cmp
sbb
push
push
fcmovne
in
xchg
mov
add
or
mov
cs
sub
inc
xor
mov
mov
lods
jmp
imul
jmp
jnp
fsubr
rcl
icebp
add
xchg
leave
repnz
inc
pop
arpl
pop
fs
rcl
push
movs
add
adc
aad
call
pop
sub
adc
int3
xor
movs
dec
fdiv
inc
and
js
fmul
ja
outs
sub
xor
mov
pusha
jp
hlt
pop
mov
int3
mov
sbb
cmps
sahf
inc
jmp
mov
outs
(bad)
stc
int3
scas
dec
pop
pop
mov
add
lock
cmp
dec
into
pop
xchg
inc
sbb
cli
mov
call
(bad)
sti
cmps
xchg
or
mov
es
out
dec
push
mov
mov
xor
adc
jl
daa
or
jl
in
test
add
imul
inc
ja
jle
mov
arpl
ret
push
ret
xor
cmps
test
sahf
xor
inc
mov
push
in
es
mov
or
pop
outs
mov
adc
jnp
test
sub
stc
mov
xor
pop
call
mov
pop
xchg
cmp
xchg
aam
dec
xchg
and
test
dec
or
outs
lods
and
sbb
loopne
mov
lds
test
call
lea
jmp
xchg
dec
pop
push
daa
cmp
pop
(bad)
stos
add
retf
push
retf
retf
scas
inc
stos
xor
popf
pop
pop
jmp
fdivr
(bad)
sahf
hlt
and
cs
fisttp
mov
outs
push
sbb
pop
fwait
xchg
(bad)
fdivrp
in
mov
sub
push
int
hlt
mov
in
jne
mov
mov
aas
dec
outs
inc
sti
push
mov
cmp
xchg
test
mov
pop
mov
outs
push
xchg
adc
xor
fwait
sbb
psubq
mov
lock
or
arpl
push
sbb
push
mov
ror
div
or
inc
sub
bound
mov
popf
dec
add
dec
ins
and
pop
xchg
add
add
ins
xchg
in
repnz
xchg
mov
xchg
add
xchg
jmp
in
in
push
mov
adc
adc
test
sbb
retf
data16
inc
mov
js
outs
or
push
daa
mov
add
add
fsubr
dec
les
dec
cld
mov
mov
or
cli
arpl
not
add
add
or
mov
push
jg
pop
(bad)
fidiv
aaa
add
shl
sbb
movs
dec
inc
push
clc
jp
push
cmps
mov
div
pop
sub
pop
sti
popa
out
bound
sbb
mov
fdiv
xchg
xor
hlt
inc
inc
adc
push
mov
sar
mov
out
pop
clc
jnp
lahf
jo
movs
mov
lock
cmp
ins
cmp
gs
and
and
jo
ins
or
push
mov
mov
sbb
mov
jg
test
mov
jb
pop
push
aad
add
outs
adc
ret
xor
or
xor
dec
iret
fidivr
aas
pop
sbb
mov
sti
add
or
loope
jmp
lea
mov
fs
cmps
xchg
out
xor
lahf
jno
sti
jbe
int
(bad)
mov
xchg
jnp
pushw
ins
and
mov
movs
inc
or
mov
jmp
mov
movs
push
jb
sub
retf
mov
lods
imul
std
lea
add
mov
scas
call
inc
inc
rol
test
xchg
out
jnp
mov
ins
in
xchg
pop
mov
loopne
sub
(bad)
cld
cmc
int
jle
cli
sbb
push
mov
mov
mov
cmp
aam
push
ja
jp
popa
test
sahf
leave
sub
sub
dec
mov
data16
sub
retf
(bad)
mov
jbe
ja
inc
sub
sub
repz
test
scas
dec
xchg
mov
xchg
ds
dec
cmc
push
xlat
pop
mov
xor
add
mov
mov
sbb
dec
gs
push
inc
push
and
push
jno
dec
adc
stc
cmp
push
push
imul
scas
sahf
or
and
dec
fcom
sub
jl
leave
movs
and
xor
out
push
std
not
fnsave
test
cwde
xchg
pop
loopne
mov
mov
aad
jb
sti
addr16
mov
and
xchg
mov
pop
mov
xor
or
pop
or
bound
ret
xchg
ficom
jge
adc
pop
fsubr
fs
nop
add
(bad)
mov
xchg
jmp
sub
imul
cmp
mov
jp
lods
ror
aad
test
loope
or
sub
inc
(bad)
xlat
addr16
loopne
mov
imul
sub
dec
imul
js
call
and
and
imul
inc
sbb
ins
lods
and
lea
and
xchg
dec
xor
lods
add
pop
adc
rcr
jle
xor
sub
add
jecxz
xor
lods
ret
inc
imul
mov
xchg
or
cli
pushf
shl
mov
out
repnz
dec
inc
pop
mov
dec
jns
psubd
icebp
jl
pop
lds
pushf
dec
sbb
out
xor
push
movs
inc
inc
xchg
leave
ror
inc
mov
and
mov
aad
xor
and
je
retf
mov
sub
mov
test
addr16
pop
pop
add
xchg
std
mov
jmp
sub
cdq
or
xor
cmp
mov
(bad)
mov
xchg
dec
sbb
mov
fwait
sub
inc
and
mov
cmp
jo
cmps
push
xor
clc
jg
iret
(bad)
jmp
gs
push
jmp
fmul
pop
stos
inc
stos
ret
inc
dec
dec
pop
sbb
bound
sub
mov
mov
add
clc
or
push
ds
ds
mov
enter
pop
and
sbb
retf
enter
test
cwde
dec
rcr
add
jp
jae
jmp
dec
in
stos
push
jl
loopne
call
mov
sbb
aas
sar
dec
inc
jns
inc
push
jp
cmc
movs
sub
test
mov
arpl
lods
out
lds
inc
aas
mov
cmp
(bad)
test
jmp
sub
aam
repnz
and
xchg
cld
pmaddwd
jp
jmp
xor
jmp
push
test
push
add
lds
imul
jbe
inc
sbb
jg
in
xchg
xor
push
xchg
cmp
or
pop
sti
jle
mov
xchg
fadd
int
inc
sub
jne
test
cmps
xchg
cmc
aaa
sub
clc
(bad)
sahf
jmp
dec
lods
leave
pop
xchg
fwait
lds
push
outs
push
daa
std
mov
loope
dec
mov
stos
retf
mov
adc
test
pop
movs
cmps
add
cs
add
outs
iret
sbb
stc
div
mov
xor
jp
daa
lods
test
jmp
rcr
push
mov
inc
or
mov
xchg
cmp
or
xchg
add
push
xchg
out
push
cmp
aam
shl
ror
repz
inc
push
or
(bad)
popa
mov
jge
push
mov
ja
adc
add
in
cmp
sub
xor
imul
lods
popa
popa
(bad)
mov
fistp
mov
dec
popf
stos
imul
inc
pop
sub
sbb
mov
sar
bound
ja
jmp
imul
sbb
pop
loopne
in
push
std
and
lahf
jns
(bad)
cwde
hlt
(bad)
push
ins
or
xchg
es
and
cmp
cld
mov
lahf
in
or
dec
sbb
pop
cmp
mov
add
jae
cmp
adc
cmp
xchg
(bad)
adc
jmp
xchg
ja
sub
(bad)
std
les
test
aam
xchg
not
xchg
sti
jle
or
dec
arpl
popa
xchg
inc
mov
push
add
jecxz
sub
or
popf
dec
pop
dec
jne
push
shl
shl
xor
xor
stos
fs
pop
rcl
adc
ror
lahf
pop
bound
iret
fsubr
aaa
cmp
into
cmp
cld
adc
push
add
inc
lods
push
dec
ds
xchg
dec
push
(bad)
bnd
je
sub
jno
or
mov
movs
and
jb
xlat
dec
mov
fs
push
scas
pop
pop
push
or
xor
or
jmp
mov
inc
add
adc
(bad)
dec
jmp
test
jp
les
add
or
push
rcr
mov
push
sbb
fwait
xchg
mov
fs
shl
adc
ds
pop
leave
xor
jge
adc
out
push
mul
cmp
cli
ret
int3
lds
test
mov
push
pop
pop
lds
xor
jmp
mov
push
xor
xor
or
pop
test
popf
pop
dec
(bad)
cwde
mov
adc
movs
inc
jbe
cmps
dec
pop
push
dec
aas
dec
sbb
push
stos
fld
xor
xchg
sub
add
mov
add
ds
jbe
imul
or
cmp
push
adc
fwait
ret
xlat
mov
sahf
fs
adc
sbb
jmp
mov
(bad)
xchg
inc
retf
ja
adc
push
aad
inc
cmp
push
push
adc
jmp
cli
fdivrp
ret
int
(bad)
mov
sbb
add
or
iret
xchg
retf
(bad)
imul
enter
fsubr
dec
jo
push
fidivr
idiv
(bad)
dec
add
dec
add
movs
cmp
dec
or
cdq
pop
inc
in
mov
jmp
mov
out
not
(bad)
jb
test
rcl
test
in
and
xchg
xor
push
call
cmp
aas
xor
xor
test
imul
aam
test
xchg
mov
mov
stos
psubusw
xchg
pop
jmp
sti
sbb
or
pop
and
lods
pop
pop
cmp
inc
sub
sar
add
clc
push
rol
jb
sub
dec
xchg
and
rcl
sbb
jmp
jne
shl
pop
pop
mov
jmp
inc
gs
cmps
ror
(bad)
loop
repz
cmp
sbb
xor
into
xchg
vcvtps2dq
sahf
cmp
mov
sbb
and
jns
or
pop
test
push
fs
cmp
jmp
push
and
add
mov
and
xchg
jmp
fucomi
inc
xor
mov
adc
fmulp
xchg
mov
scas
jg
sub
or
movs
and
addr16
jge
pop
adc
adc
or
push
(bad)
test
sub
push
nop
jnp
(bad)
call
sbb
push
dec
(bad)
sub
data16
add
lahf
inc
mov
jbe
mov
out
ins
inc
test
adc
into
or
shl
sbb
push
mov
fs
nop
ror
es
sbb
xchg
(bad)
xlat
mov
mov
fcompp
sar
mov
mov
repnz
js
std
push
repz
jae
call
sbb
add
in
bound
mov
fistp
repnz
dec
dec
inc
jecxz
jns
mov
dec
movs
pop
push
push
sbb
dec
dec
xor
sub
mov
push
jb
jmp
pop
(bad)
cmp
xchg
cs
ficomp
xor
or
or
call
cmp
xor
pop
ja
cld
icebp
sub
movs
xor
mov
stos
js
test
mov
jb
jmp
sbb
mov
or
mov
je
push
inc
repz
addr16
(bad)
test
or
movs
jae
loopne
and
sub
in
pop
shl
mov
data16
cmps
xchg
mov
cdq
push
pop
sbb
mov
xchg
aaa
add
jge
push
js
mov
sbb
pop
adc
sar
(bad)
jg
xchg
fist
mov
xor
pop
ret
outs
pop
int
xchg
mov
aam
call
xchg
adc
sbb
retf
dec
ficomp
pop
mov
outs
ins
cmp
sub
push
sbb
leave
rol
daa
mov
fcmovu
dec
and
pop
and
cmc
inc
dec
push
inc
sub
(bad)
mov
dec
(bad)
jp
std
lahf
xchg
mov
xchg
aam
push
push
xor
sub
cs
stos
cdq
retf
lods
inc
mov
cwde
mov
and
cwde
push
cld
inc
jo
sbb
mov
jne
lock
cmp
add
popf
dec
and
inc
jo
pop
enter
stos
push
mov
fisubr
leave
mov
daa
imul
outs
sub
stos
ret
addr16
or
or
mov
test
stos
aaa
xchg
jg
sbb
int
dec
imul
and
sub
cwde
loope
jle
mov
icebp
jmp
jmp
push
(bad)
iret
movs
call
lea
test
mov
je
inc
test
cmp
icebp
cmc
js
mov
and
mov
mov
into
adc
or
xor
mov
sbb
out
mov
mov
arpl
xchg
pop
jno
jl
adc
fsubr
jbe
fs
movnti
mov
dec
xor
dec
or
pop
add
sub
std
hlt
mul
dec
push
xor
jp
(bad)
test
enter
(bad)
xchg
dec
(bad)
outs
dec
jns
and
int
test
add
and
xchg
shr
xor
sub
jns
dec
mov
retf
xchg
test
cmp
and
lods
inc
iret
lahf
enter
stos
or
outs
push
lea
adc
es
push
adc
inc
or
mov
xor
cmp
test
push
shl
fs
xor
jae
rcl
loope
inc
jo
mov
pop
add
dec
and
add
mov
cli
fnsave
sbb
sbb
dec
pusha
sbb
or
and
sub
sbb
cli
cs
shl
dec
mov
add
sti
pop
les
pushf
pop
push
mov
inc
stos
jo
popa
jne
cmp
mov
jge
dec
jne
(bad)
push
xchg
inc
clc
fcmovbe
ds
or
call
jl
xlat
cld
popf
inc
repnz
ror
rol
add
cli
aas
adc
rcl
mov
sbb
sbb
ins
push
inc
push
cli
mov
inc
loop
icebp
cmps
dec
inc
mov
je
jmp
push
bound
daa
lahf
lods
(bad)
mov
sbb
into
inc
inc
sub
scas
pop
imul
push
pop
push
pushf
mov
xchg
inc
and
push
sub
ins
outs
ins
enter
and
retf
inc
dec
dec
add
shl
pop
xchg
ror
xor
jno
push
mov
add
or
enter
jp
mov
push
rcr
pop
mov
jmp
bound
dec
cs
shl
xchg
int
test
pop
dec
imul
fistp
mov
and
push
fadd
(bad)
popa
xchg
xor
jb
mov
imul
mov
in
sti
jl
outs
pusha
mov
xchg
dec
add
mov
or
stos
jecxz
fcmovne
or
or
movs
(bad)
test
jecxz
adc
xchg
xchg
add
cwde
sbb
jnp
mov
xchg
iret
sub
test
daa
sub
lods
imul
pushf
push
int3
xchg
fdivr
pop
ss
mov
push
fiadd
mov
imul
not
cld
hlt
jmp
mov
pushf
push
dec
test
dec
and
and
dec
daa
lahf
jb
mov
outs
push
mul
pop
movs
xchg
add
jno
jg
aam
ja
cld
mov
inc
out
inc
aaa
xor
xor
mov
mov
call
pop
jmp
mov
es
adc
test
icebp
xor
movs
inc
cmp
imul
das
outs
pop
jmp
mov
mov
stc
imul
stc
xchg
and
mov
push
call
nop
push
add
mov
retf
bound
cld
mov
lds
(bad)
push
in
mov
or
enter
test
pop
and
pop
mov
ins
mov
add
sbb
pop
enter
(bad)
dec
or
loopne
outs
bound
adc
ja
push
movs
inc
popa
cmp
pop
mov
pop
push
xchg
cmp
mov
xchg
jmp
sub
movs
popf
xchg
mov
pop
sbb
xor
movs
mov
in
stos
(bad)
lahf
in
inc
dec
sub
ins
mov
mov
add
cld
retf
adc
iret
inc
xchg
ins
jo
push
cmps
je
mov
xchg
dec
mov
scas
inc
inc
dec
add
loopne
inc
dec
xor
push
ins
jge
cmp
mov
jecxz
lods
or
rol
mov
jmp
sahf
aaa
lock
xor
cmps
sub
xchg
aas
rcr
jmp
mov
mov
test
loop
mov
xor
repz
std
popf
xchg
ss
inc
outs
fst
jne
dec
stos
push
ror
(bad)
in
xlat
mov
arpl
dec
add
dec
or
and
cmp
sbb
mov
mov
pop
jne
ja
sbb
lods
mov
mov
add
ss
mov
inc
sub
jmp
jle
lods
dec
inc
cwde
mov
aad
xor
xor
inc
pop
mov
(bad)
stos
repnz
push
movs
and
add
pop
fdivrp
iret
out
imul
repnz
lahf
repz
pop
retf
add
adc
lds
or
xor
jp
les
imul
add
xchg
xchg
dec
mov
lahf
jno
aad
push
mov
pop
retf
lods
shl
mov
les
push
call
pop
sbb
mov
cmc
mov
fsub
and
jne
call
pop
rcr
cld
outs
inc
adc
shr
jnp
adc
xor
cmc
mov
shl
and
cmp
inc
xor
les
sub
and
add
pop
lfs
push
inc
sub
or
jnp
lods
and
ror
aas
aas
cmc
arpl
mov
sar
mov
fwait
inc
(bad)
mov
mov
mov
mov
jns
not
xor
sbb
sub
cmp
repz
cmp
cmp
adc
add
fwait
jg
sar
inc
sbb
mov
and
call
mov
out
bound
cmp
or
and
dec
in
call
(bad)
sub
push
lds
inc
pop
in
sti
js
cmps
mov
je
inc
mov
dec
cmovnp
inc
jb
xor
push
call
jmp
mov
and
inc
sub
push
push
and
call
out
mov
mov
sbb
jo
lds
xchg
pop
push
cmp
pop
push
cwde
into
gs
loopne
fwait
stos
sbb
popf
add
push
jb
cdq
out
xor
jle
(bad)
mov
mov
mov
shr
shl
call
sub
not
and
push
cmp
inc
sub
jo
fcom
dec
pop
mov
shl
repnz
pop
mov
xchg
repnz
and
sbb
inc
or
push
jns
and
fstp
pop
jno
jl
add
pop
mov
jle
dec
retf
xchg
div
mov
mov
add
or
out
mov
xor
mov
arpl
pop
(bad)
dec
add
or
cli
mov
idiv
test
mov
sbb
sub
js
out
iret
stc
add
aad
pop
jmp
cld
fild
outs
or
pop
sbb
out
arpl
mov
test
(bad)
outs
xchg
push
pop
icebp
jge
xor
dec
iret
cmp
sub
test
ds
mov
movs
mov
(bad)
nop
mov
mov
and
aam
loop
jae
sub
xchg
mov
into
adc
sub
or
or
imul
jno
xchg
jmp
test
jmp
shl
mov
aad
pop
je
xor
xchg
jg
pop
int
jecxz
ror
adc
enter
repnz
jge
fbld
pop
outs
retf
jno
outs
sti
(bad)
push
xor
mov
inc
or
and
sahf
loopne
(bad)
nop
stos
nop
push
inc
cld
xor
add
push
xor
mov
adc
cmp
mov
iret
mov
stos
cmp
add
jle
test
adc
adc
loop
sub
mov
dec
scas
jp
stos
repnz
xor
js
sub
bound
adc
dec
mov
push
jle
cmps
xchg
add
sub
add
xchg
cld
clc
btr
call
mov
leave
adc
xor
movs
add
xchg
cmp
sub
popa
dec
and
sub
sti
xor
mov
js
inc
lahf
mov
ret
pop
pop
xchg
cmps
mov
push
leave
enter
inc
push
fs
xchg
in
pop
sub
fmul
and
mov
aam
inc
mov
test
loope
ins
push
fwait
es
mov
xor
out
fcmovnu
pop
cwde
stc
jbe
jp
xchg
sbb
rol
or
dec
jae
loopne
imul
fwait
mov
test
sub
les
fnstsw
fwait
inc
pop
movs
push
dec
xchg
jb
outs
adc
dec
xchg
movs
aad
sub
test
adc
pop
mov
ja
jmp
aaa
jne
pop
movs
adc
xor
xchg
add
out
bound
cmc
mov
idiv
test
data16
jmp
and
xor
stos
(bad)
push
lea
ror
xor
mul
jge
dec
scas
movs
nop
or
mov
add
xchg
xchg
inc
bswap
pslld
mov
cmp
fcompp
lods
fs
inc
or
call
add
(bad)
jns
call
sbb
mov
pop
jmp
test
mov
dec
test
push
cwde
gs
cmps
xor
pop
xchg
xchg
and
and
imul
inc
sub
fcmovbe
in
mov
xchg
xor
and
neg
mov
push
shl
shl
lock
sub
ret
push
pop
nop
pop
mov
test
(bad)
(bad)
aas
pop
gs
stos
cmp
imul
push
xchg
xor
pop
pop
std
ins
mov
and
ror
int3
pushf
icebp
std
xchg
call
int3
test
xor
or
adc
adc
outs
(bad)
cmp
cli
sti
sbb
and
pop
fnstcw
jb
enter
adc
push
push
mul
pushf
sahf
cmps
sar
jae
ds
fidivr
push
iret
push
lea
xchg
fistp
sbb
and
add
sahf
dec
xor
repz
mov
pop
lock
popa
jge
mov
jg
aam
leave
popa
call
pop
in
cld
hlt
jmp
xchg
mov
dec
mov
pop
cli
inc
sub
outs
cmc
mov
dec
es
mov
in
lds
sub
adc
xchg
out
dec
push
mov
in
pop
sti
push
bound
call
scas
inc
bound
adc
cmp
push
(bad)
idiv
add
sub
sbb
(bad)
iret
mov
test
pop
in
xchg
adc
pusha
jno
in
fsub
add
leave
mov
mov
outs
lods
adc
rcl
sbb
sar
xor
arpl
rcl
jmp
fisubr
jne
mov
mov
mov
jne
push
add
add
or
js
movs
cmp
fsubr
inc
imul
push
inc
jmp
(bad)
pop
push
pop
aam
ins
cli
add
out
pop
sbb
imul
retf
inc
push
stos
sub
push
push
movzx
aad
test
xchg
shr
mov
sbb
lds
js
push
xor
dec
rol
sub
dec
push
aam
je
out
and
sbb
adc
out
inc
dec
jg
not
cmps
inc
jae
push
push
std
test
or
mov
pop
popf
imul
(bad)
mov
inc
add
sbb
push
cmp
dec
cs
fcomp
ret
mov
or
xor
lods
push
push
xchg
(bad)
sti
or
ficom
jp
aam
shl
sub
aad
lods
or
bound
push
fild
dec
push
arpl
sar
mov
aas
fwait
jnp
and
es
call
mov
iret
ins
mov
mov
adc
je
push
test
repz
fs
mov
push
in
push
pop
xchg
stos
cmps
movs
mov
jmp
add
iret
sub
sub
call
and
mov
push
test
rep
and
adc
dec
xor
xlat
sub
or
jmp
jge
mov
fwait
jp
push
push
push
je
and
pop
das
push
push
mov
mov
dec
js
dec
mov
outs
outs
mov
and
fisttp
push
mov
sbb
cmp
loope
hlt
pop
mov
ss
xor
or
add
xchg
push
daa
and
test
adc
movs
pop
stos
repnz
adc
cdq
dec
mov
xchg
inc
sub
push
inc
and
and
ss
test
jl
xor
cmp
cld
cmp
fs
mov
mov
add
xor
movs
jae
xchg
sbb
(bad)
jmp
pop
or
adc
pop
xchg
inc
add
inc
loop
retf
cmp
sbb
mov
mov
sbb
inc
xchg
(bad)
ins
in
sbb
mov
jg
jp
jecxz
adc
cdq
or
arpl
test
sbb
out
in
stos
adc
mov
mov
jmp
daa
shl
out
cmp
mov
fiadd
mov
pop
xchg
lahf
stc
cmp
popf
add
(bad)
rcl
dec
sub
sub
daa
std
mov
ja
shl
xchg
or
icebp
mov
imul
int
ja
iret
lea
cmp
(bad)
nop
adc
inc
push
xchg
jle
push
cld
fsubp
push
xchg
int
retf
idiv
xchg
sub
xor
pop
scas
das
and
dec
aad
pop
xchg
arpl
and
xor
adc
mov
aam
xchg
aam
sub
jmp
push
jle
mov
xor
or
and
cmp
adc
mov
adc
mov
test
(bad)
xchg
pusha
mov
jnp
mov
sub
adc
pop
sub
mov
sar
and
clc
dec
lock
loopne
cmps
iret
xlat
retf
xchg
popa
out
mov
pop
xor
mov
sar
int
jmp
mov
rcl
cli
mov
add
xchg
and
jl
call
cs
inc
add
sub
mov
addr16
xor
xor
icebp
push
in
outs
out
(bad)
shr
fcmovu
mov
push
push
in
mov
adc
daa
push
mov
pop
and
or
jecxz
mov
pop
call
div
jb
das
in
jmp
and
ficomp
or
loope
xchg
call
xchg
push
lods
stos
mov
and
and
mov
xchg
add
ss
in
movs
leave
outs
lods
les
jb
push
iret
dec
add
push
in
stc
xchg
in
sahf
sub
and
xor
xlat
mov
adc
(bad)
call
ins
stos
jl
inc
or
sqrtps
mov
je
jae
mov
clc
jno
and
jge
jecxz
xchg
and
cmp
inc
or
(bad)
fstp
push
sbb
fidivr
(bad)
mov
or
sub
repnz
neg
pop
outs
pop
scas
out
mov
or
inc
ror
mov
jne
fcmovnu
fcomip
or
dec
scas
and
push
dec
mov
mov
ds
add
mov
xor
mov
and
and
fsubr
cmps
mov
sbb
cmps
dec
inc
test
ror
push
inc
push
or
ret
mov
jmp
add
and
pop
sub
lea
mov
or
fld
nop
fbstp
sbb
hlt
cmp
cmps
sahf
pop
js
mov
add
inc
and
mov
imul
xor
adc
cmp
and
test
and
dec
ins
xor
mov
inc
pslld
pop
retf
lock
movs
popa
sbb
dec
clc
lea
cmp
add
mov
ds
cld
push
rol
xor
int
jbe
cdq
push
mov
dec
pop
pop
(bad)
push
push
pop
std
push
cmp
arpl
in
inc
dec
push
mov
repz
ds
cmc
call
data16
(bad)
mov
inc
pop
dec
cld
out
dec
inc
adc
mov
sub
mov
push
inc
mov
and
idiv
jecxz
fidiv
scas
xchg
or
jge
dec
(bad)
das
xor
push
ja
(bad)
pop
mov
imul
sti
js
jne
lahf
and
adc
xchg
(bad)
rcl
cwde
jecxz
push
(bad)
mov
or
cmp
lods
jg
in
ficomp
pop
out
(bad)
in
je
call
or
push
xchg
sbb
ins
adc
inc
push
test
sub
cmp
jg
cmp
mov
mov
cmp
or
xchg
inc
add
push
cld
xor
mov
aam
ret
(bad)
lods
jle
or
je
lods
or
mov
icebp
inc
das
dec
cwde
mov
adc
ret
mov
scas
(bad)
icebp
(bad)
or
fwait
adc
push
rcr
rcr
mov
ret
cmc
sub
jecxz
jb
js
mov
xor
nop
fist
scas
jb
push
je
sub
das
(bad)
out
fucomip
fmul
fsubr
into
jmp
sub
xchg
jae
xchg
hlt
jmp
les
mov
es
(bad)
aam
add
pop
pusha
push
retf
test
jge
test
fld
mov
or
and
rol
pop
cmp
dec
and
les
test
adc
jnp
mov
dec
repnz
sbb
aam
out
sub
repz
pop
mov
fisttp
dec
lds
stc
mov
out
cmp
dec
jg
aad
sub
pop
mov
push
ja
fucomip
inc
loopne
aam
cmp
fdivr
out
sub
sbb
mov
icebp
retf
loope
mov
sbb
mov
push
adc
pop
call
add
push
loop
loop
push
fld
push
hlt
adc
sti
sub
dec
or
add
aas
les
inc
push
inc
add
aaa
mov
sar
jnp
jg
mov
rcl
fld
push
in
jg
(bad)
pop
pop
sub
ficomp
shl
dec
adc
xchg
ss
inc
add
jg
cmp
int3
jae
rcr
jge
ins
mov
sub
dec
cli
(bad)
and
aam
dec
jl
push
xchg
aam
xor
or
mov
aaa
out
sti
bound
jecxz
repnz
out
jnp
mov
dec
test
jl
push
arpl
jns
pop
jge
fwait
inc
sub
sbb
jp
loopne
and
add
mov
inc
lds
jp
jbe
inc
inc
and
add
xor
sbb
(bad)
pop
xchg
je
and
or
test
mov
jns
ret
jmp
mov
push
inc
xchg
jecxz
inc
stos
ds
mov
in
dec
xchg
sub
shl
inc
mov
sahf
mov
mov
and
fs
es
test
test
inc
sbb
fild
adc
clc
movs
xlat
les
jmp
stc
movzx
add
movs
or
cmps
iret
mov
mov
sbb
xchg
call
mov
ins
popf
test
cmps
xchg
sahf
mov
(bad)
shl
lods
dec
dec
or
jno
inc
(bad)
dec
or
rcr
dec
leave
sub
mov
mov
push
call
inc
sub
retf
mov
mov
fs
pusha
push
mov
dec
cmp
int3
or
int3
movs
arpl
push
cmp
scas
and
push
ror
xchg
in
arpl
push
ret
dec
xor
inc
xchg
bound
inc
in
ins
in
pop
repnz
push
dec
shl
cmps
add
mov
mov
inc
std
neg
pop
jns
stc
adc
mov
or
cmp
pop
xchg
inc
or
sub
jns
or
push
pop
push
fstp
jb
jg
out
dec
adc
repnz
icebp
pop
xchg
push
arpl
add
xchg
pop
aam
mov
fadd
es
cmp
sub
add
icebp
(bad)
jecxz
std
jge
cmp
xchg
enter
pop
inc
xchg
inc
cmps
mov
pop
xchg
clc
mov
add
adc
and
dec
fidivr
aad
stos
cmc
xchg
or
jnp
scas
leave
mov
pop
jns
lods
jge
aad
int
out
div
ins
pop
inc
mov
(bad)
sub
jecxz
add
mov
popf
fst
and
inc
mov
mov
js
ficomp
dec
stos
mov
push
adc
js
mov
xchg
ror
dec
loopne
out
add
mov
mov
inc
or
movs
mov
sbb
pop
out
mov
pushf
shr
jnp
jb
repnz
das
ins
xlat
hlt
cwde
in
test
(bad)
das
adc
jo
jl
pop
xor
das
push
arpl
inc
push
pop
push
(bad)
addr16
clc
jle
mov
cs
mov
dec
push
sub
push
fdivr
cmp
dec
loope
lahf
lahf
sub
lock
cdq
sub
sahf
xor
push
retf
xchg
fcomp
fistp
jp
aam
in
inc
cli
jne
rcl
mov
push
add
push
jecxz
cmc
lea
or
call
sbb
mov
xchg
pop
rcr
test
jnp
sub
fsubr
ss
mov
or
and
xchg
adc
adc
imul
inc
icebp
ins
outs
add
test
push
sbb
(bad)
push
push
cmps
and
sbb
ret
bound
test
adc
or
cmp
test
push
and
push
cdq
out
add
mov
mov
pop
push
xchg
inc
pop
adc
adc
scas
in
aas
lahf
dec
mov
lods
sub
retf
enter
xor
adc
shl
iret
mov
pop
rcr
xchg
outs
cdq
scas
retf
mul
jl
push
outs
cmps
jns
movs
push
pop
rcl
mov
jl
cmps
retf
retf
movs
mov
mov
leave
push
add
mov
mov
lahf
test
add
outs
push
sbb
gs
imul
xchg
stc
hlt
jno
(bad)
mov
push
adc
push
(bad)
int
cwde
retf
pop
mov
mov
push
dec
pop
adc
scas
mov
ins
and
jns
outs
out
push
in
aam
(bad)
fild
inc
inc
cmc
stc
sub
rcr
jp
and
xchg
push
sub
call
mov
scas
inc
push
sahf
popf
es
mov
sub
inc
sar
dec
sub
push
(bad)
ins
lods
mov
dec
or
push
adc
pop
mov
(bad)
mov
cli
(bad)
and
aas
ret
jmp
out
sahf
cmp
out
mov
sub
stc
pmaddwd
jo
(bad)
push
retf
inc
pop
mul
xchg
scas
cmp
xchg
mov
cld
inc
loop
popf
add
je
adc
das
(bad)
loop
fcom
mov
inc
ret
inc
loope
scas
repz
sub
imul
push
sbb
add
mov
adc
lock
cmp
icebp
or
loop
lds
leave
add
mov
pusha
outs
jo
pop
shl
ret
jg
imul
dec
sbb
mov
aaa
xchg
sub
test
and
sbb
inc
pop
je
aam
loop
add
xchg
jg
ds
push
adc
outs
xchg
inc
xchg
add
mov
int3
jne
lahf
pop
in
shl
xor
and
ret
xor
arpl
pop
mov
add
adc
inc
lods
ret
push
lods
inc
dec
or
add
xchg
(bad)
std
fmul
lea
jns
push
inc
retf
repnz
jl
das
cs
sub
scas
push
xchg
outs
mov
push
(bad)
push
and
push
add
fsubr
in
jne
push
ins
cli
xor
(bad)
rol
in
idiv
mov
pushf
fsub
add
mov
shl
or
aam
jno
add
push
cdq
add
adc
push
mov
rcr
stos
jmp
push
sbb
sbb
jb
dec
add
inc
cmp
adc
repnz
xor
in
adc
add
inc
or
popa
pushf
sub
fprem
test
or
jbe
call
jle
mov
push
adc
xor
mov
test
dec
push
test
call
cmp
out
int3
pop
pop
aad
mov
lods
(bad)
rol
dec
sub
leave
push
sub
gs
mov
fmul
loop
xor
js
lsl
adc
add
cdq
push
popf
adc
cmps
mov
(bad)
mov
inc
xor
ss
(bad)
imul
push
jb
cli
jge
sbb
mov
mov
(bad)
mov
imul
jmp
(bad)
sub
scas
(bad)
mov
add
jp
jns
call
(bad)
popaw
sub
mov
mov
adc
fsub
imul
dec
nop
cs
pop
fldenv
jg
fdivr
mov
adc
inc
pop
outs
and
push
sub
jp
fidivr
hlt
jno
aam
push
jmp
mov
pushf
sub
lods
fnstsw
pushf
in
push
ret
push
sahf
sub
xor
lea
cwde
or
in
or
push
cdq
pop
inc
rcr
retf
arpl
mov
outs
jne
fstp
or
js
shr
movs
mov
idiv
sbb
nop
dec
jg
lods
pop
sub
push
pop
cmovnp
sbb
xchg
xor
into
ja
pop
sub
sub
inc
push
push
inc
pop
dec
add
cmp
xchg
jge
sti
mov
into
xor
and
(bad)
stos
je
mov
or
inc
sbb
(bad)
popf
stos
cmp
dec
jmp
test
mov
cmp
or
push
(bad)
dec
and
dec
cld
dec
imul
(bad)
push
xlat
dec
call
fidiv
cwde
scas
mov
stos
push
xor
jp
inc
bound
ret
test
aam
lahf
lock
sbb
or
push
push
jecxz
call
mov
test
push
mov
jmp
add
icebp
push
sahf
and
push
dec
sub
call
sbb
lods
jno
mov
fild
push
mov
retf
stc
mov
adc
fdivr
xlat
adc
call
pop
push
mov
fst
mov
mov
(bad)
cmp
cmp
out
jns
mov
scas
fcom
jns
cmp
pop
adc
lahf
inc
sti
dec
test
(bad)
mov
stos
sbb
inc
adc
add
imul
frstor
sub
push
mov
push
loopne
inc
sbb
leave
dec
and
and
sqrtps
out
dec
aas
inc
in
repz
push
repnz
and
xchg
add
daa
aam
mov
mov
and
add
jne
cmp
aad
cmc
jg
neg
mov
leave
ds
stos
mov
sub
mov
jge
mov
lea
cmps
(bad)
cdq
pop
lods
imul
push
sahf
xchg
std
mov
mov
sbb
push
push
imul
popf
imul
fdiv
cwde
lods
push
xor
fmul
mov
aaa
cmps
xchg
mov
pop
sub
jle
push
fistp
outs
adc
stos
in
xor
add
adc
pop
xor
clc
test
xor
ret
ret
ds
jmp
into
in
dec
inc
fcomp
not
push
out
sub
retf
dec
and
adc
xor
xchg
xor
idiv
in
jbe
dec
sahf
pop
push
stos
adc
ror
pop
inc
pop
cmps
stos
pop
bound
cmp
push
push
scas
sub
lea
int3
xor
add
aaa
xchg
gs
adc
xor
sahf
data16
inc
mov
push
aad
mov
jbe
enter
push
call
ret
in
push
pop
or
sar
mov
mov
and
test
jmp
std
mov
xor
adc
lahf
sbb
iret
inc
cmp
imul
jnp
jae
jo
xor
repz
sub
shl
dec
or
les
and
cmp
inc
nop
push
test
fs
adc
jmp
retf
in
jns
push
test
rcl
(bad)
xchg
xchg
icebp
mov
xchg
pop
jno
mov
lds
sti
int
nop
inc
cmp
lahf
les
lods
sbb
mov
ds
xchg
inc
out
fmul
inc
xor
xor
jmp
mov
xor
cmps
adc
out
jbe
int3
jmp
cmp
std
xchg
outs
jl
mov
mov
adc
sar
hlt
pop
mov
mov
shr
add
inc
jl
lahf
fidivr
adc
dec
xlat
cmp
imul
dec
push
push
sub
shl
les
rol
pop
add
push
loopne
js
fwait
mov
jno
xchg
leave
inc
push
sbb
sub
jae
cmp
ins
push
jns
jmp
fistp
push
or
dec
push
repnz
dec
jne
gs
inc
ds
fdivr
xchg
in
sahf
test
jl
dec
test
call
dec
mov
push
jge
mov
je
fcomi
or
adc
and
add
fcom
pop
ror
jns
into
jecxz
outs
sub
jbe
mov
mov
test
adc
stos
add
inc
repnz
daa
clc
inc
mov
cmps
leave
inc
mov
pop
pop
mov
mov
push
or
test
push
retf
push
xor
mov
lds
(bad)
adc
or
test
jae
mov
pop
inc
jle
lea
jp
inc
push
inc
sahf
cmp
jb
mov
jl
xor
call
mov
and
nop
sbb
inc
adc
inc
(bad)
sbb
jne
push
push
outs
jp
or
pop
xor
stos
enter
xchg
push
cmc
xor
retf
js
xor
add
jmp
xor
mov
xor
xor
or
jno
push
test
mul
out
adc
in
js
or
mov
dec
ds
test
pop
xchg
adc
cs
in
outs
mov
or
repz
mov
sahf
push
aaa
cmps
enter
fisub
int3
sbb
pop
lock
bound
ins
sub
in
fsubp
jns
sbb
(bad)
xchg
sub
adc
and
imul
jno
retf
cmp
adc
dec
mov
std
or
test
rcl
inc
adc
jp
lods
mov
rcl
push
push
inc
icebp
dec
or
and
push
push
xor
mov
jle
ficom
inc
dec
pusha
push
mov
js
xchg
jp
(bad)
sub
call
pop
wrmsr
xor
mov
jecxz
jg
clc
pop
fdiv
mov
cmc
call
dec
mov
mov
pmuludq
daa
jmp
push
mov
add
cmp
iret
test
xor
cmps
lds
test
cmp
in
cli
mov
outs
test
jg
stc
cmp
(bad)
(bad)
push
sahf
adc
into
jae
lahf
das
xchg
pop
jmp
rol
xor
pop
nop
stos
or
std
cmp
jns
sti
xor
movs
fwait
je
jge
pop
ficomp
pop
dec
ret
inc
push
dec
jle
ds
sbb
and
fwait
xchg
cmp
iret
dec
dec
inc
push
add
or
jns
loop
adc
(bad)
fwait
xor
add
jo
xor
push
repz
fld
rcr
inc
xor
pop
icebp
pop
xchg
add
iret
lods
test
inc
ins
adc
cmp
test
or
sbb
xchg
retf
xchg
adc
push
dec
push
mov
cmp
sbb
addr16
adc
adc
stc
pop
dec
ins
cmp
push
(bad)
jmp
inc
stos
sub
xchg
lods
adc
rol
fcmovnb
fs
cdq
push
jecxz
in
adc
mov
pop
call
pop
lods
(bad)
xchg
push
test
pop
push
cli
fadd
(bad)
mov
ss
call
daa
and
stc
or
shl
movs
xchg
push
inc
dec
push
bound
in
inc
inc
(bad)
sbb
pusha
pavgw
retf
cld
lahf
loopne
fsubr
and
mov
imul
jmp
or
pop
aam
dec
dec
xchg
sub
dec
lods
jo
mov
adc
ds
loope
inc
lds
push
repnz
sub
stos
xlat
sub
div
(bad)
pop
dec
ins
dec
or
sahf
in
xor
xor
mov
repnz
dec
xchg
pop
sbb
retf
add
push
das
and
adc
push
or
movs
adc
mov
mov
ins
xor
xlat
jb
ds
lea
into
sub
mov
push
imul
push
mov
loop
out
fsubr
dec
mov
hlt
push
push
mov
call
pop
dec
jmp
jnp
pop
pop
pop
outs
inc
pop
test
lea
jmp
push
push
aam
fimul
ins
rcl
sub
(bad)
fs
mov
cmp
adc
imul
ins
inc
sahf
cmps
push
stos
or
xchg
leave
sbb
push
int3
pop
out
movs
(bad)
jmp
push
into
xlat
ins
lock
js
dec
test
add
push
sbb
bnd
outs
mov
mov
fadd
pop
in
loop
les
cmps
ret
jle
sbb
xchg
xor
pop
inc
sbb
xchg
les
pop
dec
arpl
stc
outs
neg
sbb
pop
jg
mov
cmp
xchg
cmp
xor
jnp
xchg
inc
pop
jmp
test
hlt
adc
push
sbb
jmp
push
mov
call
fldenv
fst
mov
adc
movs
xchg
repnz
sub
cmps
loopne
(bad)
rcr
fnsave
aam
mov
inc
cmps
in
jmp
or
or
pop
cmps
inc
jo
xchg
xor
cmp
inc
outs
retf
scas
mov
mov
dec
bound
or
mov
in
scas
pop
jns
shl
add
sti
inc
nop
cmps
in
and
jmp
push
cmp
pusha
push
je
inc
jnp
inc
stc
push
cmp
cld
cli
pop
jne
adc
jle
ficomp
cmp
scas
adc
or
adc
leave
sub
jle
xchg
jae
aam
retw
jne
ret
mov
retf
pop
nop
dec
add
sar
(bad)
or
ss
sub
fwait
sub
rol
cmp
rol
add
test
inc
addr16
sbb
aam
data16
push
pusha
stos
xor
jp
mov
nop
add
pop
xor
adc
push
pop
idiv
xor
out
ficom
sub
and
adc
xchg
fidivr
out
popa
inc
mov
cwde
add
cmps
push
(bad)
pop
ret
test
rol
ss
dec
or
retf
xor
bound
push
push
ss
out
scas
jne
mov
jmp
pop
movs
mov
or
and
mov
icebp
pop
and
adc
jno
enter
inc
and
cmp
in
nop
xor
dec
push
into
jbe
sub
mov
push
mov
jb
jns
imul
pusha
jge
call
xchg
test
xchg
xchg
push
repz
push
inc
(bad)
push
rcr
inc
bound
dec
test
in
dec
(bad)
imul
jmp
out
push
loopne
mov
jmp
mov
fld
sub
and
jo
xchg
rcl
repnz
and
(bad)
or
sub
rcl
mov
adc
mov
pop
sar
ins
les
mov
and
xor
mov
cmc
mov
mov
cmp
sbb
jl
pop
loop
out
jle
lds
call
not
mov
ret
xor
pop
mov
or
jmp
aaa
xchg
ficomp
clc
mov
lahf
out
inc
js
outs
cmp
mov
jmp
mov
(bad)
mov
arpl
mov
call
xor
ret
xor
fsubr
xlat
adc
fisttp
push
sbb
je
in
mov
adc
jg
cld
pop
arpl
jge
jmp
fidivr
cmps
ja
call
pop
cmps
in
jecxz
xor
scas
mov
pop
cmp
and
movs
push
hlt
or
inc
das
cmc
jecxz
jg
scas
jl
jne
dec
sbb
cmp
mov
and
neg
es
xor
sbb
dec
add
mov
sub
sbb
shl
gs
mov
cmp
mov
lods
lods
imul
call
push
add
data16
(bad)
and
push
dec
enter
or
and
outs
jp
push
ins
frstor
mov
pop
and
xchg
push
ds
idiv
push
jb
aas
in
inc
in
mov
push
xchg
cmp
jns
daa
mov
cld
dec
sub
sbb
pop
mov
xor
adc
stc
pushf
stc
jns
xor
mov
mov
dec
bound
test
xchg
loopne
xor
push
and
adc
(bad)
bound
sti
dec
jge
fidiv
sub
ret
enter
(bad)
mov
mov
or
jmp
add
push
cli
stos
rcr
sub
xor
movhps
add
gs
cmp
je
(bad)
lea
sub
popa
inc
push
pop
add
xchg
dec
lods
push
dec
mov
sub
or
xor
or
pop
imul
mov
std
(bad)
(bad)
or
cmp
lahf
push
movs
cs
mov
push
iret
bound
call
xor
shr
mov
rol
pushf
or
je
xchg
(bad)
and
inc
ins
in
jns
mov
lea
push
mov
fidivr
mov
es
jne
lods
jmp
mov
push
cmc
sbb
add
imul
ret
sbb
int
(bad)
fdiv
or
sti
cmp
bnd
int
pusha
inc
retf
ins
data16
mov
and
lock
jmp
jp
and
fcmovbe
lds
inc
sbb
or
cdq
dec
push
dec
push
imul
mov
and
cmc
and
push
jae
(bad)
loop
out
sub
in
push
add
push
xchg
cmp
pop
add
ja
pop
scas
and
fmul
mov
adc
xchg
dec
adc
lods
pop
dec
lods
retf
rcr
in
mov
imul
mov
mov
jne
aad
(bad)
xchg
mov
inc
imul
div
outs
movs
out
push
mov
or
test
dec
loope
and
xor
cmps
ret
jbe
pop
add
fnsave
and
and
jno
movs
cmps
xchg
xchg
outs
add
jne
pop
sub
test
mov
push
xchg
aas
adc
adc
aas
das
xchg
stc
hlt
adc
ins
scas
sub
mov
clc
lods
or
xchg
add
call
imul
in
adc
aaa
push
movs
adc
pop
icebp
cli
jnp
imul
jmp
shl
scas
ficomp
cwde
rcl
das
shr
jl
iret
pop
lahf
push
cmp
fadd
aam
scas
out
repz
dec
jmp
stc
jne
pop
dec
jne
and
push
cdq
hlt
cld
(bad)
ficom
jmp
add
ins
cmc
neg
mov
leave
cmp
mov
inc
and
sbb
cmc
push
test
cdq
sbb
add
iret
sbb
sbb
xor
cli
adc
outs
lods
adc
inc
inc
pop
cld
mov
and
jle
push
or
cmp
sub
xchg
jecxz
push
cmp
das
xchg
dec
cli
das
xchg
push
nop
repz
pop
xchg
in
repz
clc
pop
shl
jo
cmp
ja
imul
push
retf
pop
jne
fistp
mov
das
loop
out
jns
sti
pop
cmp
mov
fisubr
mov
sti
sbb
inc
and
lods
ds
inc
adc
lahf
gs
adc
test
call
inc
or
sub
clc
jg
shl
xor
inc
jecxz
ret
std
mov
imul
add
(bad)
in
jmp
or
int3
imul
sar
jp
aas
rcr
dec
xchg
mov
dec
adc
mov
nop
(bad)
mov
movs
push
xor
pop
xchg
retf
mov
imul
pop
xchg
call
mov
hlt
xchg
or
cmp
not
sbb
cmps
xchg
movs
sub
aam
push
enter
mov
xchg
sar
xor
pusha
les
pushf
rcr
shl
push
inc
test
push
(bad)
xchg
lock
test
sbb
inc
inc
or
mov
(bad)
fwait
push
push
jo
adc
cmp
add
inc
or
sahf
jne
jp
retf
int
jp
mov
ins
cmp
test
mov
cmps
loope
es
mov
stos
adc
idiv
mov
shl
inc
rcr
scas
scas
mul
jmp
out
jg
pop
(bad)
mov
rol
sti
or
out
in
jmp
ins
les
scas
test
cmp
aad
das
xchg
or
dec
and
cld
and
sub
mov
inc
(bad)
ins
dec
stos
sub
mov
xchg
xchg
scas
test
lock
cmc
xchg
lock
jle
inc
les
mov
ret
mov
ss
ja
out
pop
pop
add
test
call
imul
cmp
jle
jmp
dec
sbb
dec
mov
adc
pop
lods
pop
sbb
rcr
rol
mov
push
xor
xchg
xor
sbb
test
push
sbb
pop
sub
test
and
std
xchg
mov
xchg
cmps
mov
cdq
sbb
sub
loop
stc
push
iret
in
scas
iret
movs
int3
adc
dec
push
mov
mov
(bad)
and
and
sbb
sub
adc
mov
adc
xor
test
(bad)
mov
pop
imul
jp
stos
(bad)
jle
sti
mov
pop
mov
mov
inc
ins
xor
imul
call
mov
sbb
cdq
sub
in
cmp
aas
int
mov
mov
dec
scas
hlt
push
je
fdivr
fimul
mov
inc
push
shr
xchg
ret
sub
jo
movs
xchg
retf
mov
pop
pop
add
lods
pop
mov
mov
xor
pop
fwait
stos
movs
std
and
sbb
scas
fnop
or
addr16
push
gs
or
movs
mov
push
fmul
cmp
std
cmp
inc
mov
push
jg
xchg
pop
dec
dec
mov
or
mov
aas
repz
mov
push
push
push
aam
and
jno
jb
iret
cmp
mov
stos
sub
or
hlt
rcl
loopne
movs
sti
pop
fucomi
mov
or
adc
or
push
rcl
xchg
sahf
xchg
dec
and
sub
sub
mov
cmps
lea
rcr
sub
jae
shr
xor
adc
sub
and
stos
imul
pop
sahf
sbb
dec
cmps
rol
push
nop
jmp
push
sub
rol
xor
xchg
inc
out
jmp
mov
sub
add
push
mov
pop
pusha
ins
outs
mov
(bad)
sar
mov
sbb
jb
repnz
xchg
ins
xor
mov
(bad)
icebp
mov
ret
xor
inc
fs
add
stos
adc
jmp
sbb
or
mov
mov
mov
adc
xor
mov
call
dec
jmp
inc
mov
sbb
jns
call
arpl
jnp
hlt
mov
in
outs
sub
in
pop
cmc
push
cmps
and
lahf
cwde
sti
cmp
fwait
add
mov
inc
mov
jg
dec
aad
or
loop
imul
push
xor
jmp
ss
div
sbb
out
sbb
jno
icebp
inc
mov
add
xchg
out
and
cmps
test
jo
dec
lock
push
aam
inc
mov
push
repnz
inc
add
jne
push
dec
xchg
push
lahf
aam
scas
clc
jnp
jo
lods
in
xchg
call
sub
mov
call
adc
(bad)
xchg
sbb
sti
cmp
shl
inc
or
out
gs
sbb
jg
(bad)
mov
sbb
jne
lds
(bad)
xor
dec
js
mov
inc
stos
mov
imul
shr
jg
loopne
js
(bad)
stos
cmp
lods
test
xor
dec
mov
stc
and
(bad)
mov
and
xchg
mov
dec
cmp
sbb
fwait
outs
int
pop
fdivr
mov
stc
jle
pop
mov
cmps
stos
test
inc
dec
and
mov
cdq
cmc
clc
in
cmp
and
pop
outs
and
or
inc
adc
pop
in
pop
in
cmp
fst
mov
sbb
dec
stos
int
dec
xchg
xchg
push
pop
cwde
lods
sub
into
and
mov
(bad)
jbe
pop
fcmovne
inc
push
mov
jo
scas
lahf
xchg
cmp
pop
int3
xor
cmp
(bad)
mov
mov
dec
sub
aaa
xchg
movs
call
retf
not
test
(bad)
pminsw
mov
outs
outs
push
mov
shl
pop
and
aad
call
mov
test
xchg
sbb
div
clc
cmc
pop
inc
sub
sub
cmp
or
outs
sub
push
add
xchg
cmp
fucomip
(bad)
dec
sti
jne
xor
push
xchg
enter
sbb
seta
cmps
dec
xchg
push
mov
icebp
mov
rcr
cld
mov
adc
out
stos
sbb
es
and
enter
movs
dec
in
jnp
add
mov
xor
add
repz
jp
pop
push
mov
adc
mov
outs
out
cmc
mov
add
push
or
xchg
inc
cmp
retf
les
cmp
push
fdivr
add
nop
scas
add
mov
(bad)
pop
sub
cmp
push
cmps
dec
xchg
fadd
inc
push
sub
sub
pop
cmp
push
or
std
adc
pop
icebp
hlt
push
and
jno
frstor
jmp
inc
ds
add
or
cmp
dec
xor
adc
imul
ins
ins
jge
ror
jb
push
pop
inc
fwait
dec
lea
arpl
pop
jg
jmp
cmc
or
add
xchg
jg
call
es
xor
clc
aas
retf
rol
(bad)
repz
inc
adc
dec
daa
pop
(bad)
stos
test
iret
(bad)
clc
jp
nop
mov
pop
inc
cmp
enter
add
cli
sti
movs
or
push
lods
lock
pusha
jmp
mov
jmp
mov
inc
sbb
outs
(bad)
mov
ds
sbb
push
imul
cld
mov
call
mov
cmp
std
ins
test
xchg
mov
ret
cmps
in
rcr
mov
adc
mov
mov
mov
mov
rcl
dec
sar
jge
iret
jle
test
push
push
call
push
adc
adc
xor
mov
push
pop
addr16
gs
pop
arpl
mov
mov
pop
jmp
mov
leave
xor
push
xchg
add
jne
in
mov
hlt
int3
xchg
pop
out
je
and
and
sbb
sbb
sbb
arpl
dec
cmp
mov
xor
add
scas
fs
sbb
mov
loopne
aas
scas
mov
(bad)
in
cmp
adc
rcr
adc
pop
jecxz
stc
je
cmp
out
aas
cmp
add
cmp
push
mov
or
cmp
es
fld
data16
push
and
test
test
mov
mov
sar
scas
scas
or
pusha
ja
imul
scas
add
retf
cmp
jo
sub
fbstp
add
stos
or
mov
movs
iret
fdivr
div
lods
popf
js
add
test
mov
or
or
mov
xchg
cmps
mov
and
jns
xor
lds
popf
mov
int3
xlat
xor
enter
dec
inc
icebp
add
fcom
inc
imul
lods
mov
push
shl
pop
mov
cmps
xchg
dec
dec
pop
test
push
jns
stos
mov
sub
inc
movs
and
sbb
dec
mov
loop
pusha
loopne
pop
add
cld
leave
mov
addr16
cld
add
int
mov
fcmove
cs
imul
jmp
stos
jle
aam
push
outs
psrad
dec
xchg
cwde
cdq
push
arpl
popa
mov
cmp
or
mov
fstp
add
loope
lahf
push
push
sub
xchg
or
scas
out
mov
cmp
call
or
mov
movs
fmul
add
jle
mov
xchg
jns
push
mov
aam
xor
push
sar
pop
cmc
jns
into
call
clc
out
(bad)
cmp
dec
fcomp
fs
mov
xchg
sub
cmps
xlat
cli
jge
mov
adc
mov
stc
cmc
xchg
scas
add
fcmovu
std
pop
clc
jb
das
(bad)
fcmovnu
popa
nop
cmp
jae
inc
inc
xor
imul
(bad)
ja
dec
out
iret
sbb
mov
push
loope
pop
not
dec
add
mov
retf
loop
ins
add
scas
lahf
retf
mov
ins
jle
push
fs
mov
lods
sub
add
out
int
(bad)
ret
sbb
dec
xchg
xchg
xchg
mov
inc
xchg
(bad)
push
ret
push
inc
sbb
dec
stos
(bad)
add
std
leave
not
data16
(bad)
add
fcomp
xor
gs
test
add
mov
rol
cwde
xor
add
shr
push
xchg
sbb
sar
outs
xor
inc
repz
push
adc
xchg
arpl
push
and
xchg
jecxz
fisub
jb
int
test
push
mov
xchg
retf
or
sbb
mul
sub
xor
cmp
fcomip
iret
out
dec
(bad)
sar
add
and
aas
mov
ds
mov
int3
mov
enter
test
call
sbb
sbb
mov
sub
ins
imul
sbb
scas
out
cld
and
fmul
mov
push
and
cwde
dec
add
push
loop
mov
imul
mov
into
push
push
push
jecxz
aam
jns
rcr
mov
mov
aaa
xor
arpl
mov
jge
jae
jmp
and
add
add
outs
retf
xor
xor
imul
adc
pop
rcl
outs
dec
int
inc
jns
sub
push
and
push
inc
sub
mov
dec
daa
xchg
test
stos
call
cmc
pop
ror
fcomp
jle
inc
sub
add
adc
jg
lea
fsubr
sbb
and
cwde
lods
jno
dec
cmp
pop
sub
xchg
mov
xchg
jno
leave
cwde
sub
imul
cs
movs
xchg
sbb
inc
and
dec
cmp
fsub
mov
sbb
loopne
outs
fisttp
xchg
pop
scas
cmp
in
aaa
adc
adc
inc
and
inc
sbb
scas
xchg
fdiv
xchg
icebp
mov
fiadd
jae
aaa
sub
scas
jle
ds
push
pop
add
mov
pop
lods
in
sub
sub
shr
add
ds
sti
sub
popf
repnz
addr16
in
shl
and
xchg
or
and
mov
int3
cmp
cli
fldcw
jmp
mov
aam
sbb
push
push
cmp
cwde
dec
cwde
sub
jecxz
fs
push
push
add
mov
add
push
test
cmp
mov
cmps
dec
fs
stos
psubusb
rcl
(bad)
sub
test
or
test
in
cmp
mov
mov
rol
sahf
xor
repnz
sbb
add
loop
sub
cld
mov
es
stos
push
push
mov
inc
and
mov
mov
mov
xchg
cli
in
lods
popf
pop
inc
pop
adc
ror
add
(bad)
sahf
jge
xor
inc
int
inc
lods
sub
fadd
mov
shl
(bad)
sub
push
rcl
sub
adc
loope
xchg
cmc
xchg
push
les
mov
dec
icebp
das
imul
sbb
cli
xchg
sahf
loop
add
xor
jl
sti
inc
sub
hlt
sbb
jne
mov
xchg
hlt
nop
shl
or
jge
inc
mov
(bad)
sbb
sbb
enter
repnz
loopne
push
movs
sub
push
add
inc
cld
call
mov
jge
in
inc
push
push
push
xchg
adc
add
mov
outs
adc
movs
pop
iret
imul
scas
adc
enter
test
retf
mov
mov
sbb
xor
mov
adc
inc
inc
adc
ret
push
push
das
jb
pop
fcmovu
out
push
popf
aam
mov
push
push
(bad)
pop
mov
sub
test
aas
pusha
jmp
in
jbe
fwait
ret
call
cmp
repnz
(bad)
pop
mov
pop
mov
stc
mov
cmps
mov
addr16
cmp
sub
loopne
jge
and
faddp
test
push
lock
mov
mov
push
test
enter
xor
sub
popa
xchg
iret
push
stos
rcr
xchg
sub
fxch
inc
cmps
test
push
mov
lock
retf
push
cmp
(bad)
mov
xchg
mov
cmp
enter
dec
fwait
repz
sbb
mov
push
sbb
cmp
dec
push
pop
(bad)
leave
fs
or
add
pop
sbb
inc
jmp
push
mov
mov
xchg
sahf
sbb
cdq
sbb
add
xchg
out
lods
pop
push
pmuludq
mov
scas
out
int
shl
dec
xor
pop
loop
fisub
jmp
adc
cmp
(bad)
cld
popf
push
out
enter
mov
mov
and
lea
das
cmps
repnz
sbb
sbb
mov
cdq
push
fcomi
pop
jb
rcl
leave
dec
and
add
iret
cli
inc
mov
iret
cdq
loop
mov
ss
jle
push
inc
inc
out
inc
pop
and
imul
movs
or
call
fdiv
int
(bad)
and
or
out
push
test
icebp
jecxz
mov
xchg
ds
xchg
push
std
ds
pop
inc
out
ds
adc
jp
jbe
fsubp
jmp
inc
xchg
mov
test
in
test
inc
gs
das
and
mov
xchg
sub
mov
repz
out
xlat
neg
cmp
adc
cmp
add
push
retf
es
and
jge
rcr
imul
add
repz
ss
fdiv
dec
outs
push
push
inc
pop
mov
mov
mov
push
lods
sub
adc
sahf
cmp
cmc
inc
mov
aaa
cmc
mov
cmp
inc
out
out
test
jmp
test
and
popf
aam
ds
sbb
add
jo
and
cwde
xchg
inc
add
test
push
in
xor
lods
stos
lods
test
pop
inc
in
xchg
int3
inc
test
or
ss
in
retf
mov
loop
push
jle
inc
xor
je
sub
pop
fistp
xchg
inc
or
push
mov
movs
not
pop
sbb
mov
lods
fwait
loope
lds
mul
mov
and
stos
cmp
push
jae
hlt
xor
sub
out
cli
xlat
cwde
outs
xchg
and
icebp
or
adc
dec
cmp
pop
outs
inc
pop
stc
out
inc
ror
ss
and
shl
data16
pop
xchg
sbb
mov
dec
and
and
mov
xor
test
aas
retf
fisttp
retf
sub
inc
icebp
add
push
sar
addr16
(bad)
int3
push
loop
(bad)
loope
lods
adc
imul
add
aas
cmp
mov
test
pusha
mov
stos
sahf
pop
push
test
bndmov
mov
and
pop
sub
pop
cmp
add
or
mov
(bad)
lds
lds
adc
pop
lahf
fwait
fwait
jg
stos
bnd
ret
cmp
ret
addr16
adc
pop
xchg
mov
jp
loopne
aas
push
adc
and
push
jns
adc
repnz
std
cdq
aas
mov
ret
ins
fsubr
push
pop
xor
pop
and
call
repnz
mov
sbb
repnz
sahf
dec
cli
jge
mov
xor
cld
cmp
lahf
push
loopne
rol
add
cmp
inc
cmp
mov
mov
push
cmp
cdq
sub
pop
int3
add
aaa
pop
aaa
add
jge
neg
scas
loop
xor
stos
div
stc
push
lock
je
mov
add
sbb
dec
jnp
dec
cwde
jecxz
mov
fucomi
lods
jmp
xor
dec
and
dec
push
and
lds
cmp
push
or
and
push
and
xchg
push
inc
hlt
xchg
loopne
or
mov
sahf
dec
ins
shl
adc
pop
mov
and
push
xchg
enter
into
out
lods
fwait
mov
push
arpl
mov
aad
adc
movs
lahf
enter
adc
dec
mov
jg
out
in
div
dec
leave
fsubr
stc
xor
push
repnz
inc
mov
repnz
fsubp
adc
aam
pop
stos
aam
pop
retf
sbb
push
sbb
pop
imul
and
imul
sbb
shl
bound
jnp
in
pop
mov
and
mov
stos
stos
int3
jmp
or
sti
(bad)
mov
aaa
adc
push
push
sbb
jle
or
cmp
pop
mov
xchg
sub
or
es
cwde
adc
mov
out
stc
imul
push
mov
cld
inc
or
rol
shl
(bad)
out
xchg
dec
adc
test
inc
outs
lock
out
call
imul
int
test
xchg
push
or
xor
loop
int3
loopne
inc
adc
(bad)
inc
movs
ror
sahf
xchg
jge
xchg
inc
hlt
mov
(bad)
(bad)
imul
popf
xor
add
test
pop
lock
dec
or
in
mov
add
jge
pop
out
test
dec
jl
pushf
jmp
push
dec
rcr
and
jl
bnd
xchg
fimul
add
nop
push
nop
pop
fwait
mov
(bad)
bound
icebp
fnstcw
lea
cmps
cdq
and
ret
out
mov
lods
imul
bound
aaa
nop
jbe
out
mov
jl
mov
inc
push
sbb
push
xchg
mov
shl
push
mov
enter
push
test
ror
sbb
mov
cmp
outs
(bad)
leave
xchg
fnstsw
jp
xor
push
aad
rcl
dec
and
imul
ins
test
mov
test
xchg
jb
xchg
sbb
and
div
into
push
nop
stos
mov
xchg
and
xchg
into
dec
scas
bnd
mov
rol
mov
dec
inc
and
push
cmp
js
mov
jo
adc
mov
rcl
mov
dec
shl
and
out
addr16
xchg
dec
rcl
sahf
(bad)
mov
(bad)
icebp
call
adc
fldl2t
inc
(bad)
push
call
add
(bad)
aas
xlat
fcmovb
dec
icebp
jecxz
jbe
and
mov
push
xchg
xchg
cmps
jmp
stos
(bad)
sub
pop
push
(bad)
scas
icebp
outs
gs
int3
fisttp
mov
scas
cli
mov
ins
shl
das
jmp
adc
shl
jno
cmp
rcl
out
lods
sbb
mov
cmc
mov
clc
cli
lahf
popa
fs
fisttp
test
add
jp
out
cmp
shl
(bad)
xchg
cmps
cmps
xchg
adc
add
mov
or
or
pop
inc
xchg
inc
xchg
push
cmp
dec
mov
jno
sbb
pop
push
out
pusha
call
das
arpl
daa
jmp
mov
adc
ds
jg
(bad)
(bad)
xchg
ret
mov
test
jg
cld
sbb
(bad)
or
cmp
and
mov
inc
cmovp
cli
lods
fs
cwde
inc
adc
sbb
sub
scas
retf
imul
das
push
sar
jo
xor
jecxz
mov
or
es
xchg
inc
adc
shl
inc
lods
jle
test
jmp
lahf
adc
adc
sub
out
add
push
aam
sbb
cmp
push
icebp
lds
adc
mov
push
ficom
add
mov
cmc
sub
repz
cli
leave
mov
inc
jo
or
push
push
hlt
adc
and
adc
out
dec
int3
outs
aas
ficomp
mov
out
aas
sbb
jge
out
jge
jb
test
inc
(bad)
(bad)
in
into
dec
scas
imul
add
sahf
add
mov
mov
cmps
cwde
call
cs
mov
scas
push
xor
test
movs
pop
rol
xchg
ins
dec
inc
sbb
jne
es
scas
push
jmp
mov
icebp
inc
(bad)
in
and
cmp
xor
nop
lods
pop
sub
pusha
or
sbb
outs
push
stos
test
hlt
idiv
or
adc
mov
rol
xlat
in
(bad)
fisttp
xor
pop
inc
push
shl
cmc
sbb
mov
mov
pop
mov
mov
sub
xchg
and
enter
xchg
sbb
pop
retf
idiv
addr16
in
pop
ret
js
test
jno
pop
xchg
dec
ins
cmp
jnp
stos
out
fcmovnbe
pop
es
dec
lahf
or
movs
test
rcr
ss
xor
je
test
push
cmp
(bad)
cmp
ins
int3
mov
fs
and
mov
scas
dec
mov
test
cmps
xor
inc
inc
mov
inc
(bad)
scas
dec
mov
aaa
(bad)
sti
je
jmp
sub
mov
and
and
jmp
push
mov
jns
xchg
stc
ja
in
loopne
retf
not
mov
retf
or
pop
(bad)
test
shl
mov
scas
or
mov
addr16
jns
rcr
addr16
retf
and
dec
jb
retf
mov
jae
or
add
enter
out
cmp
outs
shl
mov
es
pop
pop
mov
xor
and
in
mov
jl
mov
mov
xor
inc
icebp
push
cdq
adc
add
je
jo
cmps
jecxz
jge
out
scas
shl
std
mov
idiv
(bad)
fimul
mov
mov
mov
or
das
xchg
mov
shr
stos
inc
dec
push
jmp
hlt
fstp
(bad)
cmp
outs
loope
in
test
cld
mov
test
clc
jmp
pushf
mov
push
ins
arpl
fdivr
push
mov
sub
dec
cmp
sti
dec
cmp
imul
cmps
pop
aad
mov
ret
aas
arpl
movs
add
pop
mov
jns
adc
mov
test
cmps
xlat
imul
jge
pop
or
adc
push
jge
sbb
add
push
fsubrp
xchg
jno
fidivr
pop
and
xor
push
imul
mov
jge
pop
int3
lds
lds
or
mov
pop
adc
add
mov
xchg
scas
xlat
jmp
mul
push
mov
or
sub
adc
fidivr
jae
in
cmps
push
dec
inc
mov
or
xor
(bad)
xchg
repz
mov
adc
pop
or
and
push
daa
jmp
mov
mov
inc
and
mov
cs
cld
(bad)
scas
push
lods
xor
repnz
and
std
mov
f2xm1
mov
sti
jne
mov
imul
fwait
adc
(bad)
sahf
aad
add
mov
push
mov
shr
pop
out
mov
inc
dec
push
push
and
in
(bad)
cmps
inc
push
outs
je
dec
xchg
pop
cli
jecxz
dec
cmc
jle
push
inc
add
ret
lahf
test
fcom
ret
xchg
lahf
and
lods
mov
fcmovne
mov
sbb
shl
inc
jp
es
adc
retf
mov
mov
cmc
ss
sbb
es
(bad)
aad
repnz
in
push
jmp
rol
iret
inc
inc
push
push
popa
push
jne
popf
cdq
outs
(bad)
jmp
mov
test
ss
cmp
(bad)
(bad)
sub
popa
xor
retf
pop
xchg
add
iret
jg
jnp
inc
cmp
dec
retf
lods
fcomip
xchg
xchg
imul
pop
pop
leave
adc
add
fwait
retf
sbb
inc
mov
mov
hlt
cmp
fcomp
add
fcmove
or
push
stc
mov
or
pop
add
jecxz
std
sahf
xchg
adc
ins
inc
xchg
cmc
cmp
cli
jge
(bad)
mov
add
arpl
inc
cli
mov
sub
das
leave
fisubr
jge
mov
add
dec
jp
sub
jmp
iret
jecxz
pop
and
call
adc
call
pop
pop
sub
sbb
mov
jo
cmp
sub
in
sub
jne
jb
shl
scas
pop
push
sbb
stc
and
cs
jecxz
sub
ficom
imul
adc
(bad)
push
aam
or
lahf
sub
jne
push
enter
dec
enter
push
sbb
xor
or
iret
inc
iret
jne
daa
(bad)
adc
fbstp
xchg
cmp
add
shl
std
jge
sti
cmp
not
pop
cmps
pop
push
out
xor
out
(bad)
rcl
add
inc
sub
sbb
mov
sbb
adc
add
xchg
add
out
sub
enter
nop
rcr
xchg
cmp
(bad)
outs
movs
aam
mov
dec
jo
in
or
pop
push
loop
xor
mov
mov
xchg
jp
or
stos
ss
sbb
movs
ret
daa
lahf
scas
sti
(bad)
mov
pushf
fs
rcr
lock
dec
jecxz
imul
cli
imul
adc
lea
ds
push
out
sub
(bad)
hlt
cmp
test
mov
xchg
aam
inc
and
addr16
and
pop
pop
ror
aaa
push
mov
jns
pop
test
push
rol
jbe
xor
lea
add
cmc
xchg
cmp
jg
out
gs
jb
ret
dec
mov
add
push
sar
cmp
ins
scas
cmp
mov
jae
(bad)
stos
sbb
icebp
xor
int
mov
(bad)
rol
loop
(bad)
neg
jnp
mov
je
add
ins
add
repz
xlat
cs
outs
scas
outs
in
add
sub
rcr
movs
jno
cmp
push
sbb
mov
std
int3
scas
scas
xchg
pop
test
movs
cwde
jg
bswap
sti
outs
jae
push
test
popf
pusha
cmc
idiv
jae
fidivr
ret
jmp
(bad)
fxam
aam
movs
sub
mov
clc
mov
jne
mov
xor
popa
lods
and
jb
pop
xchg
(bad)
aam
(bad)
cmp
cmps
(bad)
push
das
cs
mov
add
aam
mov
jmp
retf
push
int3
adc
mov
enter
lea
add
arpl
mov
dec
scas
in
aam
aas
xchg
pop
dec
retf
sbb
or
jle
arpl
lea
call
inc
jle
bound
inc
dec
mov
sub
scas
dec
sub
out
jle
mov
xchg
clc
sahf
lods
(bad)
scas
(bad)
xor
mov
idiv
mov
adc
xchg
fldcw
cmp
outs
dec
shl
fucomip
pop
mov
je
lds
aas
in
mov
and
test
and
mov
mov
cmp
cmp
js
cld
repz
inc
sub
xchg
icebp
push
sahf
test
xchg
mov
outs
sub
cld
fsubr
(bad)
cli
repnz
fldcw
jno
iret
push
pop
adc
mov
imul
movzx
inc
dec
pop
ins
bound
js
ds
data16
push
sub
or
in
sbb
jge
in
xchg
std
mov
in
or
sbb
ret
sub
stc
jns
imul
mov
xchg
add
pop
pushf
xchg
sbb
mov
mov
ret
mov
sub
cmps
mov
lods
jle
fwait
jnp
jns
shl
bound
dec
mov
seta
or
ds
pop
lods
sub
fdiv
dec
xchg
addr16
inc
test
stc
stc
xlat
enter
lea
ins
jl
mov
adc
pop
inc
repnz
xchg
lods
add
add
jle
xchg
nop
push
dec
std
int3
xlat
pop
aad
cs
fld
mov
bswap
xor
div
stos
pop
(bad)
ret
fwait
nop
add
je
push
and
xchg
inc
push
inc
and
adc
repz
(bad)
ins
xchg
mov
sub
js
test
sub
pop
mov
stos
mov
test
in
xchg
lahf
pop
test
mov
ja
fisttp
jnp
mov
mov
xchg
push
je
sahf
loop
or
jae
jmp
inc
push
jmp
add
jbe
adc
cmps
sbb
mov
sbb
adc
retf
push
pop
inc
mov
mov
push
adc
cmc
jecxz
scas
xchg
dec
int
inc
aam
sbb
adc
pop
cld
int
push
(bad)
out
cdq
lods
fidivr
jmp
add
add
iret
dec
jnp
das
xchg
cwde
jp
xchg
jne
les
imul
jb
cwde
imul
sub
sub
test
jp
cli
(bad)
aad
popa
test
pop
jne
adc
outs
xor
cmps
fcmovnbe
popf
xchg
(bad)
jns
loopne
cmps
sub
push
cmp
cmps
cmovl
cmp
jb
xchg
imul
xor
push
jmp
sbb
sub
stos
mov
dec
xchg
aam
shl
cmp
test
lods
or
cld
clc
jno
jne
xchg
clc
imul
test
bound
pop
in
movs
imul
std
(bad)
push
es
adc
xor
inc
push
cmp
(bad)
(bad)
ror
test
movs
or
(bad)
aad
(bad)
fdivr
cmp
push
int
sub
loop
or
pop
or
int3
xlat
ds
outs
test
mov
sub
dec
pop
adc
add
cmp
lods
lods
inc
xchg
movs
fwait
sub
mov
movs
lea
rol
dec
inc
dec
scas
sbb
mov
or
fstp
sbb
push
add
test
sbb
bnd
mov
outs
sbb
pslld
mov
fisub
xor
mov
mov
idiv
dec
mov
add
mov
arpl
push
ret
ja
aam
inc
in
add
mov
popf
and
jmp
mov
mov
xchg
push
retf
and
mov
jns
fs
rol
mov
push
add
push
inc
dec
xor
lods
test
pop
push
sbb
shr
cli
ins
cmp
jecxz
cmp
data16
adc
lds
mov
dec
or
inc
inc
(bad)
pop
pop
out
mov
mov
or
arpl
(bad)
mov
pop
rcl
jae
push
sbb
mov
push
adc
pop
out
rcr
movs
out
push
cmp
pop
bound
retf
adc
and
fwait
enter
push
neg
outs
mov
cdq
into
push
inc
adc
test
rcr
add
dec
xor
out
xchg
stc
imul
pushf
mov
add
sbb
mov
dec
cmp
jmp
jbe
cs
or
push
cwde
shr
jg
xor
xor
sub
and
push
and
dec
pop
jg
scas
lods
cmps
jnp
adc
dec
idiv
es
jle
pop
fcom
fisttp
test
jl
inc
(bad)
push
and
mov
outs
sbb
mov
jno
jge
xor
mov
inc
sbb
(bad)
and
cmp
push
imul
cmps
(bad)
(bad)
push
jg
hlt
loopne
mov
fist
movs
jp
or
dec
inc
or
iret
repz
xchg
pop
retf
movs
xchg
fist
jo
mov
out
repnz
and
fcomp
jb
ins
les
sub
or
mov
(bad)
sbb
dec
push
aaa
aas
xchg
jge
sub
mov
loopne
mov
dec
int
jl
ret
pop
sahf
cmp
in
out
push
lock
test
xor
pushf
jl
dec
dec
or
loope
pop
mov
scas
mov
push
mov
icebp
mov
and
clc
aas
rcr
mov
fld
push
xor
add
stos
popf
int3
fidivr
pop
das
and
and
adc
js
lahf
and
int
je
cmps
jg
mov
inc
pop
sub
and
inc
push
mov
mov
dec
sbb
mov
push
(bad)
jno
pop
or
push
sub
and
pop
outs
xchg
lahf
pop
xchg
dec
fsubr
adc
sub
sub
xchg
dec
call
lock
dec
scas
and
movs
inc
pop
cld
cmp
cmp
xchg
call
add
add
xor
jmp
xchg
push
dec
aad
cld
mov
mov
sar
shl
and
or
dec
pop
sbb
jb
int
in
mov
cmp
call
push
jle
mov
dec
dec
fidiv
ja
ror
adc
push
imul
sub
and
call
inc
cmp
in
cmp
push
add
shl
out
jmp
mov
jp
(bad)
mov
in
scas
sub
mov
aam
add
cmp
out
pushf
sub
aaa
outs
outs
xlat
cmc
pop
fcomp
or
dec
xor
mov
mov
dec
call
pop
and
mov
add
arpl
mov
cli
mov
rol
push
cld
lahf
jmp
add
ficomp
outs
cmc
(bad)
mov
mov
dec
inc
jno
mov
mov
movs
ret
jmp
add
jg
aaa
inc
js
rcl
fstp
push
lods
je
xor
in
int
int
aam
add
add
mov
add
mov
test
scas
int3
inc
xchg
test
push
hlt
adc
inc
xlat
mov
std
aas
(bad)
fisttp
arpl
mov
and
sti
sub
cmps
lahf
clc
jg
dec
mov
xchg
xchg
retf
mov
outs
(bad)
stos
loopne
or
jp
mov
stc
push
mov
pop
or
(bad)
lds
dec
jae
mov
cli
adc
or
popa
movs
repz
ins
in
xchg
jmp
mov
mov
add
mov
or
int3
push
call
fst
add
in
jl
xchg
and
ds
adc
(bad)
repz
and
lock
sub
pop
inc
sub
xchg
push
push
xor
pushf
hlt
cmp
in
ficomp
(bad)
push
in
and
icebp
vsqrtss
sbb
xor
push
adc
xor
imul
jae
jb
call
scas
dec
popf
fist
push
sub
bound
je
inc
mov
adc
mov
call
dec
sahf
cmp
xchg
jecxz
nop
adc
sbb
psubd
dec
sbb
push
call
inc
pmaddwd
test
or
and
sub
test
mov
(bad)
sahf
jns
lds
jecxz
cs
arpl
dec
add
movs
mov
inc
mov
adc
push
aam
sub
(bad)
xchg
inc
gs
aam
sbb
mov
mov
lds
and
pop
add
mov
add
in
popf
push
pop
mov
mov
and
add
out
fwait
pop
outs
inc
(bad)
ficomp
sub
lds
fsub
(bad)
lods
sbb
ds
mov
ja
push
js
retf
dec
mul
(bad)
mov
iret
add
js
xor
push
jae
xor
jno
(bad)
fsubr
(bad)
mov
js
mov
fsubr
cld
sub
adc
sub
adc
mov
ficomp
sbb
push
test
cmp
imul
sbb
pop
xchg
jns
fwait
cmp
das
and
sti
aaa
push
ror
dec
lods
int
adc
pop
xchg
ss
push
(bad)
out
mov
mov
loopne
lock
push
jmp
mov
fs
jp
sbb
int3
push
clc
fwait
xchg
fcom
shr
aam
pop
push
sub
adc
fcomp
jne
xchg
clc
xor
push
pusha
or
cli
fadd
das
iret
mov
push
and
and
fcomp
or
lahf
xchg
sub
cmp
(bad)
rol
sub
dec
call
add
mov
jmp
not
cmp
push
cmc
les
imul
(bad)
dec
sub
lock
jg
cld
sti
outs
push
shr
mov
lahf
aas
bnd
cld
cmp
and
pop
cwde
pop
(bad)
js
(bad)
mov
push
pop
push
sbb
mov
sub
push
xlat
cld
cmp
dec
int3
movs
xchg
int
cld
cmp
(bad)
shr
ror
fisttp
mov
sub
inc
mov
cmp
xchg
pop
(bad)
cmc
mov
xchg
mov
addr16
pop
jecxz
mov
mov
fwait
push
int
pop
add
imul
xchg
dec
mov
jb
add
in
(bad)
and
adc
out
jmp
sahf
test
xchg
adc
mov
xor
(bad)
in
add
mov
cmp
mov
cmp
inc
aaa
push
data16
sbb
xchg
cwde
pushf
or
rcr
repnz
pop
repz
inc
dec
in
cmp
pop
pop
mov
out
xchg
jns
and
mov
push
mov
(bad)
inc
pop
jno
test
jb
cs
add
or
fiadd
dec
js
jl
nop
loop
out
call
push
mov
js
push
in
mov
pop
das
outs
ds
jb
dec
mov
jecxz
aam
test
jb
and
test
mov
js
movs
in
repnz
sbb
push
test
jb
or
or
and
imul
loopne
adc
xor
or
inc
dec
pop
repz
lock
mov
jno
(bad)
and
mov
push
imul
sub
inc
push
idiv
jnp
xchg
shl
inc
cmp
int3
add
call
mov
das
and
(bad)
jl
jns
adc
or
cmps
add
fistp
jp
mov
loope
pop
or
test
jp
mov
sti
or
xchg
sbb
aad
lods
jo
adc
cs
loop
imul
fucomi
loop
loop
sub
(bad)
mov
xor
xor
mov
std
call
or
dec
rcl
rcl
cmp
es
sbb
dec
dec
mov
and
cmp
inc
dec
xchg
mov
arpl
imul
push
jecxz
fisubr
and
jecxz
cmps
div
and
mov
push
pushf
push
test
xchg
cmps
out
sahf
jle
neg
sub
out
aad
out
lock
call
cdq
push
adc
mov
sbb
into
push
adc
loop
sub
rcl
push
lahf
das
mov
mov
mov
rcl
or
sbb
aas
in
or
mov
sub
mov
dec
push
xchg
jmp
adc
push
dec
mov
fsub
mov
js
sub
or
cmp
xlat
(bad)
iret
scas
dec
sub
and
mov
adc
jecxz
pop
sub
out
sbb
xlat
retf
out
mov
aaa
mov
inc
mov
sar
fidiv
xor
add
pop
jnp
mov
xchg
inc
dec
repnz
sahf
pop
in
repz
dec
cmp
lea
mov
mov
dec
stc
add
xchg
mov
movs
mov
loopne
out
mov
sbb
inc
and
jecxz
aas
aam
lock
mov
mov
test
dec
loopne
aas
in
and
fcmovbe
xchg
pop
out
cmp
(bad)
cmovle
xchg
pop
mov
dec
leave
and
std
pop
inc
mov
js
ret
cld
or
out
mov
mov
rcl
inc
cmp
je
sbb
mov
push
lahf
push
or
inc
test
movs
and
pop
ror
iret
add
dec
jge
jecxz
movs
dec
shr
dec
jle
iret
pop
pop
cmp
les
aam
js
jle
sar
pop
mov
loope
iret
push
pop
add
xlat
push
pop
cwde
imul
pop
push
or
imul
jle
loope
sub
aad
push
adc
fsubr
xchg
ret
push
cmp
cmp
mov
test
and
xchg
jmp
jnp
mov
stos
imul
stos
(bad)
pop
pop
pop
aaa
ds
jns
jmp
or
adc
cmc
xor
(bad)
jnp
mov
mov
fcom
lea
xchg
lock
push
push
mov
mov
fdiv
aam
(bad)
mov
jo
inc
cmps
xor
or
test
lock
xchg
inc
mov
ss
ss
xchg
inc
inc
mov
cli
jbe
sub
dec
stos
push
and
pop
xchg
mov
pop
mov
clc
xchg
pop
outs
pop
gs
push
inc
dec
sub
add
cmps
mov
adc
mov
retf
cdq
mov
fdiv
add
sar
scas
or
inc
xor
push
sub
dec
je
cmp
sbb
mov
adc
and
add
xchg
aas
push
(bad)
ins
test
inc
pop
xchg
jg
dec
aad
cmp
add
adc
cwde
popf
sub
shl
dec
mov
stos
out
aad
jbe
leave
mov
loope
xchg
fistp
addr16
dec
mov
push
aad
pop
dec
sbb
rcl
retf
in
dec
xchg
xchg
movs
fst
pop
mov
sti
and
push
mov
stos
pop
(bad)
rcl
pop
loope
sub
adc
sahf
in
cmps
or
mov
jecxz
mov
call
or
and
pop
inc
jp
repnz
jmp
add
aas
inc
stos
cmp
dec
mov
arpl
pop
in
add
mov
adc
jo
out
jb
sar
push
dec
and
out
shr
retf
je
cs
push
jle
das
ss
adc
adc
pushf
mov
test
stos
(bad)
push
pop
xchg
outs
cli
ins
inc
jecxz
ja
mov
lds
aam
retf
rcl
shl
adc
(bad)
repnz
(bad)
lahf
fidivr
and
std
fild
jg
pop
lahf
sub
sbb
(bad)
jmp
add
dec
(bad)
in
idiv
ins
out
in
sub
xchg
ret
push
mov
push
inc
dec
xchg
sbb
xchg
jnp
loop
fs
mov
or
in
dec
add
jo
(bad)
push
dec
dec
dec
cmps
inc
fisttp
xchg
inc
sub
sbb
fst
xor
fwait
xor
and
dec
cmps
loopne
out
js
pop
dec
pop
frndint
sub
mov
and
rol
xor
sti
popf
loop
shr
push
arpl
add
inc
test
es
sbb
xchg
push
test
or
jle
pop
mov
or
sbb
adc
fidiv
push
mov
jns
mov
fdiv
mov
fucomi
(bad)
and
test
dec
xor
mov
cmp
xor
addr16
mov
sbb
add
jo
loope
fnstenv
shl
(bad)
mov
loop
mov
xor
mov
stos
ret
add
out
xor
fsubr
stos
aam
mov
mov
add
sbb
imul
mov
lahf
mov
lahf
icebp
pop
or
ss
stos
xchg
and
push
xchg
fisub
inc
mov
mov
add
sub
pop
lods
std
ror
(bad)
push
ret
mov
outs
add
inc
js
imul
xor
fidiv
inc
call
dec
pusha
push
inc
dec
pop
pop
mov
xchg
mov
mov
(bad)
hlt
adc
inc
lea
sbb
mov
cmp
stc
sbb
dec
(bad)
and
nop
je
jnp
int3
add
mov
add
test
cvtps2pd
aas
out
mov
fwait
daa
mov
mov
mov
sti
dec
jno
inc
lods
test
rcl
push
test
mov
cwde
(bad)
and
mov
mov
sti
push
mov
and
xchg
stc
aam
jmp
(bad)
mov
ins
movs
std
sub
cmp
loopne
aam
cmp
push
jl
add
les
mov
bound
stos
adc
loope
add
movs
push
ss
cmc
(bad)
mov
cmp
cld
mov
cmp
cli
push
leave
xchg
pop
aad
and
les
cmps
sub
cmps
in
push
movs
xor
push
fistp
fdiv
lods
test
or
mov
cwde
rol
push
push
(bad)
xchg
test
repz
stc
sub
in
xchg
xchg
(bad)
cs
(bad)
in
and
stc
not
mov
mov
ret
imul
mov
je
in
or
fabs
inc
xchg
icebp
(bad)
push
mov
pop
jecxz
call
dec
or
adc
lock
repz
or
mov
dec
aam
push
setge
mov
(bad)
fidiv
xor
inc
cmp
lods
or
cmp
add
dec
pop
pop
push
xor
cmp
lock
dec
(bad)
movs
push
adc
clc
mov
aam
mov
xlat
inc
mov
jno
(bad)
cmp
push
(bad)
retf
jbe
clc
leave
cmp
inc
inc
fidivr
nop
xor
mov
cmp
or
ss
into
(bad)
cmp
cmps
xchg
sub
fcomp
jne
popw
xchg
mov
fmul
in
jmp
and
cmp
fcomp
aas
inc
and
sahf
jp
(bad)
fdiv
pop
pop
inc
lods
imul
add
iret
dec
cli
inc
xchg
mov
sub
mov
repnz
and
iret
adc
cmp
enter
dec
add
out
int
mov
lods
movs
scas
mov
cmps
imul
icebp
clc
mov
fnstcw
fldcw
dec
push
in
mov
pop
push
jg
das
in
push
cli
pushf
dec
push
(bad)
adc
push
data16
sub
xor
sbb
nop
push
inc
lea
mov
jnp
cld
dec
fdiv
jb
outs
lea
rcl
dec
jnp
imul
pop
mov
jmp
inc
sub
jno
cmp
sar
cmp
sar
fdivr
dec
lock
and
stos
stos
popf
or
test
mov
push
sbb
outs
jge
mov
outs
mov
mov
(bad)
in
jmp
xchg
pop
lock
dec
sbb
dec
lods
cmp
cmps
pop
mov
xchg
sub
sub
imul
xchg
push
or
iret
inc
(bad)
stos
movs
and
ins
jbe
jmp
push
and
xchg
je
adc
outs
push
mov
mov
push
xchg
iret
cli
sbb
test
pop
hlt
push
mov
mov
inc
inc
push
and
dec
call
sbb
dec
and
xor
inc
das
ss
cmps
(bad)
cli
inc
pop
bound
jbe
add
jg
jl
push
push
cmp
adc
ret
outs
mov
aam
outs
jmp
inc
dec
push
dec
dec
xlat
push
jle
mov
add
div
cmp
aam
jae
push
xchg
clc
test
aam
stc
pop
pop
std
mov
add
cmp
enter
loopne
rcl
mov
and
add
dec
mov
mov
mov
test
mov
cld
repnz
sti
cmp
cdq
adc
je
mov
xchg
jnp
in
stos
ret
cmps
jp
fwait
stc
loop
adc
repnz
in
push
cmps
test
or
(bad)
out
vpaddsw
jecxz
jecxz
pop
xchg
lods
rcl
jg
dec
jae
sub
lds
mov
push
mov
std
xchg
or
mov
cdq
mov
loop
ror
aas
enter
hlt
(bad)
mov
fnop
das
stos
(bad)
sub
lahf
push
ficomp
add
cmp
aam
and
inc
push
jns
aaa
and
outs
retf
pop
cmc
xchg
stos
js
add
cmc
mov
inc
stc
cmp
mov
pop
xlat
lea
sub
sti
inc
fdivr
fild
sti
sbb
addr16
(bad)
adc
jne
popf
or
push
cmp
xor
jmp
(bad)
fdivp
repz
xchg
mov
xchg
call
push
imul
lds
das
repnz
dec
dec
out
jnp
jmp
cwde
stos
stos
and
jbe
pop
jecxz
daa
push
xor
and
and
add
iret
mov
in
jl
imul
ror
inc
ins
mov
js
sbb
dec
aam
loop
mov
mov
mov
cmp
popa
movs
aam
(bad)
mov
pop
push
xor
jmp
and
cmps
rcr
adc
sahf
mov
dec
outs
rcl
sbb
jmp
xchg
std
outs
(bad)
xlat
(bad)
mov
and
xor
pop
idiv
pop
popf
push
lds
(bad)
scas
or
out
std
pop
mov
sub
lock
jns
pshufw
dec
mov
cmps
movs
jbe
cmps
clc
xchg
daa
pop
out
sub
cld
xchg
retf
fnsave
push
mov
mov
push
into
fdivr
sbb
cs
aaa
pop
aam
push
loop
mov
inc
adc
dec
mov
inc
imul
xchg
jne
cmp
or
movs
or
add
fistp
dec
or
add
and
xchg
js
dec
or
xor
sbb
adc
sub
dec
test
cmps
mov
dec
div
push
or
xchg
xchg
clc
cmp
push
sbb
cs
dec
dec
xchg
sbb
call
sub
dec
out
or
jmp
stos
rcl
push
addr16
add
dec
dec
mov
fist
push
inc
push
es
mov
add
neg
mov
mov
inc
mov
mov
adc
xchg
sbb
mov
adc
dec
arpl
int
out
outs
jb
daa
ins
imul
sub
xor
pop
mov
test
popf
idiv
ins
xchg
in
mov
ins
and
push
sbb
add
dec
mov
mov
dec
pop
nop
sub
pop
push
shl
add
cli
add
aaa
idiv
test
mov
into
jecxz
pop
xchg
in
in
mov
sbb
push
loopne
add
loop
loop
jmp
retf
add
nop
xchg
aaa
pop
add
adc
std
jns
mov
ds
add
dec
inc
scas
push
inc
fstp
nop
mov
push
xor
mov
icebp
retf
push
jae
in
dec
jmp
data16
push
jno
jecxz
in
iret
mov
cmps
push
lds
jg
repz
cmp
mov
fwait
test
es
push
mov
inc
adc
xor
pop
cmp
in
gs
sahf
sub
inc
mov
dec
mov
ror
add
cmp
(bad)
mov
call
xor
sub
std
dec
sbb
je
(bad)
popf
nop
xor
test
fstp
and
mov
cmp
push
scas
or
cmps
push
test
aam
or
(bad)
ss
inc
mov
jae
int
push
and
aad
pop
mov
jmp
aas
test
add
sbb
cmp
movs
or
cmp
lahf
mov
ret
lods
cmp
push
rol
lahf
mov
push
aas
lahf
data16
lea
dec
aad
idiv
add
ja
loope
mov
mov
jl
ret
rdmsr
cmps
mov
cmp
push
sbb
lods
sbb
mov
xchg
scas
in
and
and
mov
sbb
jecxz
mov
mov
jns
add
leave
and
int3
in
cmps
movs
stos
push
and
scas
(bad)
dec
aad
pop
mov
jge
sub
push
dec
nop
rcr
mov
mov
inc
lods
dec
dec
cmps
add
loope
movs
add
gs
arpl
fs
test
jne
sbb
jnp
inc
and
mov
sbb
js
or
repz
rcr
outs
les
test
icebp
stos
add
xlat
sbb
xor
retf
push
adc
mov
mov
scas
js
pop
fsubr
outs
fistp
enter
cs
xchg
mov
pop
sub
mov
or
jl
mov
loop
dec
cmp
pop
inc
mov
in
cmp
out
jae
cli
fimul
ror
lods
mov
lahf
aas
iret
cmps
adc
mov
ds
inc
inc
out
das
in
les
xchg
fisubr
and
std
pop
loopne
push
xor
inc
psubsb
hlt
push
fnstcw
xor
lea
push
mov
jo
add
scas
cmps
ret
cmp
test
fwait
outs
mov
xchg
jecxz
hlt
inc
addr16
xlat
rcl
mov
mov
ss
pop
popa
fwait
loope
xchg
shl
in
or
adc
sub
push
mov
xor
mov
rol
inc
and
sar
mov
icebp
in
sub
(bad)
or
sbb
into
push
shl
(bad)
sub
pop
mov
gs
fcom
pop
out
xchg
adc
pop
dec
cmp
add
in
xlat
outs
add
push
adc
nop
jl
repnz
enter
cmp
pushf
retf
int
iret
ss
dec
push
mov
and
dec
and
scas
xchg
dec
out
mov
sbb
mov
mov
pop
jmp
(bad)
mov
add
mov
lods
fdiv
xchg
add
sbb
imul
stc
jne
and
sub
cld
cmp
add
ret
cs
(bad)
jb
add
xchg
add
cwde
lods
imul
xor
imul
test
dec
cmps
call
das
nop
jns
xchg
shr
dec
mov
mov
mov
mov
push
push
imul
adc
push
xchg
cmp
out
inc
sahf
ret
xor
mov
loop
repnz
xor
pop
mov
in
jp
scas
mov
push
inc
add
xchg
and
push
outs
push
in
jmp
add
lods
js
sahf
adc
aam
jo
fild
inc
ja
jecxz
sub
adc
jb
mov
pop
jno
sbb
repz
xchg
hlt
mov
(bad)
movs
sbb
not
jmp
pop
(bad)
imul
jg
cs
cld
mov
jmp
(bad)
sub
or
not
inc
mov
int
fisttp
xchg
xchg
outs
aas
push
pop
inc
pop
cmps
mov
imul
xor
pop
in
imul
je
rcl
sub
and
or
mov
jbe
mov
std
(bad)
jecxz
and
adc
adc
xor
ds
dec
in
ja
shr
lock
mov
test
repz
je
stc
inc
stc
or
cmp
jg
movs
or
loopne
adc
inc
inc
mov
and
inc
add
pop
ficom
jbe
lahf
mov
idiv
xor
sub
add
repnz
les
shl
xor
push
cmc
and
ror
xchg
jle
mov
jmp
sbb
in
jmp
(bad)
sbb
adc
mov
aas
aas
cmp
mov
sbb
mov
xchg
pop
popa
and
repnz
std
pop
mov
(bad)
(bad)
lock
std
loopne
sub
push
rcl
sbb
adc
xchg
inc
mov
and
mov
xchg
adc
loope
test
mov
xchg
cmp
or
fwait
scas
cs
cmps
mov
or
sub
lahf
inc
retf
in
test
loop
sbb
mov
inc
jl
add
iret
dec
cmp
xor
ss
bound
fdiv
inc
xchg
out
jmp
sub
cmp
jge
repnz
fabs
fdiv
sbb
in
inc
in
xchg
jl
add
mov
test
pop
and
rcl
sbb
xchg
hlt
cmc
call
inc
mov
stos
fdiv
imul
push
js
in
pop
test
xor
sub
and
add
(bad)
aaa
fwait
mov
xlat
std
xlat
fcmovne
push
mov
push
into
xchg
and
rcl
jecxz
sub
or
xor
push
rep
js
leave
push
push
leave
pop
xchg
mov
xor
adc
xchg
xchg
iret
sub
(bad)
test
push
and
sub
(bad)
and
xor
push
loopne
push
sbb
movs
push
jmp
push
or
mov
rcr
xchg
test
xchg
xchg
mov
mov
sub
mov
dec
xor
movs
cmp
pop
std
dec
neg
sub
loop
and
adc
ret
pop
in
shl
hlt
mov
das
rdpmc
dec
push
lahf
iret
(bad)
push
sbb
jge
lahf
(bad)
and
mov
mov
cwde
mov
and
dec
xchg
cmps
mov
stc
pop
mov
sti
adc
pop
sbb
je
std
lods
movs
jb
and
xchg
icebp
sbb
dec
test
outs
mov
sub
xor
push
dec
movs
and
shl
(bad)
retf
and
and
and
clc
cwde
stos
mov
cmc
and
sub
add
cwde
retf
mov
sbb
xor
inc
dec
add
rol
not
or
leave
mov
add
out
ret
in
out
adc
hlt
push
rol
inc
xchg
and
mov
mov
pusha
mov
mov
cmps
(bad)
push
out
sahf
add
pop
mov
jnp
shl
test
add
mov
in
test
and
(bad)
aam
leave
scas
push
mov
mov
jnp
add
push
scas
mov
imul
push
stc
sub
lea
sub
sahf
in
ss
jl
aam
lahf
out
cmp
mov
mov
leave
xor
add
packsswb
jmp
pop
push
sar
out
pop
or
in
inc
pop
daa
sar
pop
cld
sti
dec
jno
adc
pop
xchg
imul
sar
loopne
add
dec
fldcw
xchg
in
xchg
pop
add
enter
pop
aas
cs
stos
hlt
leave
dec
pop
xor
xor
jae
push
xchg
shl
mov
jmp
out
cmp
jnp
out
adc
ss
int3
push
sahf
dec
mov
mov
scas
cmp
lea
ds
out
std
pop
jge
lods
fdiv
pop
jmp
ret
test
add
rcl
ss
fldenv
loopne
out
je
push
push
scas
mov
dec
add
inc
cmp
xchg
loope
inc
pop
call
(bad)
retf
cmps
dec
ins
(bad)
mov
xchg
inc
retf
cmp
cmp
inc
stos
xchg
push
add
push
mov
mov
xchg
and
mov
daa
daa
xor
jne
je
out
ins
jns
jecxz
or
push
out
ds
jle
cmps
cmp
push
retf
pushf
int
sub
and
cld
cmp
popa
sbb
js
adc
push
inc
nop
cli
(bad)
sar
cmp
sbb
or
scas
in
xor
(bad)
repz
gs
push
nop
js
mov
inc
xor
mov
dec
imul
push
push
retf
(bad)
sub
dec
mov
xchg
fistp
into
sti
adc
mov
jl
add
mov
in
hlt
xchg
call
pop
mov
pop
shl
sbb
pop
addr16
inc
outs
cli
in
cmp
retf
pop
frstor
lahf
in
dec
bnd
call
ds
and
add
ins
cmp
int3
xchg
ret
adc
movs
nop
or
pop
push
mov
neg
jno
(bad)
cmp
add
or
aaa
inc
push
jae
jp
mov
add
mov
mov
sub
adc
(bad)
scas
arpl
lods
and
das
adc
cmps
push
inc
xchg
cwde
lds
ins
sub
or
cli
mov
gs
lds
(bad)
jmp
test
push
mov
sub
adc
inc
cli
add
in
iret
mov
imul
dec
into
mov
aas
sbb
data16
movs
mov
and
sbb
mov
test
aad
dec
and
dec
dec
adc
pop
sub
test
inc
test
sub
add
mov
lock
add
loopne
arpl
sbb
jp
and
cld
(bad)
jns
add
jmp
adc
push
mov
movs
cmps
shr
out
test
xor
lods
inc
call
outs
push
cli
pop
test
adc
data16
sbb
repnz
add
rol
dec
div
(bad)
mov
ret
dec
inc
mov
fistp
sti
out
(bad)
jmp
sbb
and
fadd
xor
das
out
cmp
bnd
mov
jge
add
adc
pop
imul
in
mov
xchg
popf
jbe
inc
sub
enter
and
(bad)
shr
cmps
outs
lods
dec
inc
xchg
push
loop
test
cli
(bad)
add
and
inc
(bad)
mov
retf
push
mov
or
sahf
xor
js
add
pusha
jp
icebp
sar
jg
mov
dec
lahf
inc
rol
pushf
mov
cli
fwait
fwait
sahf
pop
rcr
jg
sti
outs
test
into
imul
mov
and
mov
hlt
mov
sub
jne
ja
std
popf
sbb
dec
sbb
test
xchg
nop
retf
imul
jg
(bad)
iret
iret
aas
jmp
fiadd
cmp
out
idiv
aas
mov
(bad)
cmp
push
add
push
iret
retf
lea
push
arpl
adc
xchg
lods
xchg
(bad)
stc
stos
jp
mov
nop
inc
add
inc
(bad)
push
adc
cwde
inc
aas
inc
stos
or
inc
cmp
aaa
ds
add
push
mov
in
into
mov
lock
mov
fnstenv
inc
adc
mov
add
lods
xor
fistp
jno
push
mov
jg
rol
outs
mov
data16
add
and
push
nop
arpl
sahf
mov
icebp
dec
mov
or
xchg
lods
mov
retf
pop
mov
stos
inc
(bad)
stos
add
cli
fmulp
daa
mov
arpl
sub
pop
pop
mov
sbb
(bad)
movs
sub
fisubr
pop
or
jne
call
fdivr
bound
movs
mov
or
aam
test
movs
adc
(bad)
mov
jle
cmps
mov
out
jle
jge
jno
dec
add
push
cmp
je
aaa
fs
or
jp
dec
dec
and
sahf
and
mov
lahf
xchg
sbb
aaa
mov
mov
adc
xor
(bad)
stos
mov
add
push
add
jns
sbb
stos
jns
dec
stos
cmp
repz
mov
or
stos
xor
xor
add
jmp
lods
or
rcl
ror
(bad)
stos
sub
sub
aad
hlt
nop
enter
mov
ficomp
std
xchg
fst
mov
jecxz
addr16
mov
loope
inc
sub
add
lock
xor
and
push
enter
push
imul
cmp
push
out
pop
sti
or
xor
jno
mov
push
rol
pop
out
or
sub
pop
ss
inc
and
pop
jo
mov
imul
fldz
push
dec
mov
add
cmp
leave
mov
sbb
mov
lods
leave
mov
mov
sub
adc
repnz
or
call
mov
inc
xlat
fsubr
out
sub
or
add
mov
lds
push
mov
pop
pop
popf
jp
aad
in
pop
mov
mov
loop
stc
stc
xchg
dec
add
cli
icebp
repnz
out
in
scas
aas
daa
mov
clc
cmp
cmps
popa
adc
xor
(bad)
mov
push
xlat
pushf
push
cdq
pop
pop
sbb
leave
adc
fist
lods
shl
inc
sub
sub
add
shr
jnp
mov
jns
in
xchg
loop
(bad)
dec
mov
push
mov
xor
push
rcl
jae
jecxz
mov
jp
rcl
pop
push
cwde
xchg
dec
idiv
dec
test
test
lods
lods
sbb
jge
sti
mov
mov
xor
sub
icebp
std
mov
xchg
jb
xchg
dec
xor
jns
mov
mov
test
imul
mov
push
sub
pop
sar
mov
adc
pop
in
popf
in
push
pop
push
mov
pop
dec
lahf
cmc
jge
mov
aam
cmp
adc
aas
(bad)
fisttp
sub
cmp
in
test
iret
std
pop
and
repnz
aas
pop
push
mov
test
and
adc
add
inc
adc
cli
jae
mov
adc
xor
sar
rcl
(bad)
dec
push
push
loope
in
(bad)
mov
add
add
mov
push
push
push
sub
jae
mov
sar
ins
mov
idiv
sbb
jnp
imul
sti
cmp
cli
dec
movs
cmp
mov
dec
aaa
data16
xchg
enter
das
mov
jne
inc
bound
test
dec
inc
out
jg
adc
push
xor
adc
mov
psrlw
sub
retf
rcl
sbb
popf
dec
sti
sub
add
pop
push
push
pop
retf
push
in
jmp
call
enter
mov
push
dec
sbb
dec
fmul
mov
out
adc
lea
mov
add
inc
push
pop
movs
push
test
add
pop
mov
test
mov
jl
push
les
arpl
xchg
sub
sahf
iret
sub
(bad)
sbb
mov
ret
dec
jae
retf
pop
ret
sub
lea
mov
pop
arpl
xlat
inc
and
(bad)
dec
and
add
lahf
lock
jns
mov
jno
mov
mov
pop
inc
xlat
movs
popf
(bad)
dec
and
daa
lods
fdiv
pop
jecxz
in
cmps
imul
cwde
in
mov
sahf
pusha
stc
(bad)
jge
mov
sbb
and
dec
aam
jmp
cdq
mov
pop
in
push
leave
adc
xor
add
inc
pop
jl
gs
dec
outs
fld
imul
ret
xchg
mov
inc
pushf
inc
mov
mov
icebp
adc
loop
stc
call
mov
arpl
shr
xchg
int3
add
ds
bound
xlat
add
pop
mov
aam
push
loop
dec
pop
or
js
cmps
scas
popf
jp
pop
and
out
push
nop
push
and
lock
les
cmp
xor
mov
int
mov
rcr
pop
adc
ret
cs
stc
mov
xchg
outs
or
mov
ret
cmp
mov
cmp
dec
ret
jbe
inc
dec
imul
mov
lea
add
shl
pop
adc
ds
sahf
cdq
and
push
jmp
fisttp
sub
sbb
gs
(bad)
inc
dec
jp
xchg
push
add
and
icebp
jmp
mov
stos
sbb
iret
(bad)
(bad)
je
push
xlat
iret
push
fs
xchg
or
push
js
sub
push
jne
pusha
mov
repz
mov
jbe
in
pop
or
adc
cmp
jae
stos
cmps
xor
adc
outs
cmc
push
test
jo
pop
rol
pop
mov
inc
sahf
pop
mov
inc
int3
push
sbb
xchg
ror
test
pop
jmp
lahf
fs
and
mov
mov
jmp
cmps
cmp
cli
cli
xlat
cld
sbb
xor
jb
and
popa
inc
and
pop
and
es
(bad)
and
mov
jne
jne
shl
adc
or
cmps
int3
jle
and
movs
mov
movs
mov
add
push
lahf
lahf
pop
cmc
jle
and
int
dec
cs
stos
cmps
mov
add
push
add
imul
(bad)
ret
pop
add
jecxz
icebp
stc
jp
retf
pop
mov
ret
std
xor
jmp
scas
fmul
pop
jg
leave
xor
xchg
ror
adc
push
push
sbb
test
mov
dec
mov
xchg
pop
adc
cmp
mov
imul
add
ins
rep
or
xchg
add
cmp
aad
cmp
xor
dec
mov
sbb
sbb
push
sar
cmp
jecxz
fsubr
(bad)
push
push
arpl
mov
xor
clc
pop
cmp
inc
pop
xor
enter
xchg
iret
cmp
and
add
out
jl
and
aaa
ror
sbb
or
sub
mov
mov
adc
loope
dec
call
lea
and
inc
dec
push
movs
sar
fcomp
int3
mov
mov
pop
or
mov
xor
mov
sbb
inc
mov
jle
add
xchg
cmp
popf
ret
jge
lea
inc
sub
out
sub
(bad)
pop
cwde
fsubrp
mov
push
fimul
(bad)
mov
mov
arpl
icebp
jp
push
stos
inc
mov
jnp
fnstenv
hlt
mov
fadd
mov
data16
dec
push
push
mov
mov
imul
xchg
cmp
ins
in
retf
fld
nop
adc
dec
add
test
iret
or
scas
leave
sbb
lods
jmp
inc
fbstp
inc
and
jle
cli
sub
cmp
push
add
add
aaa
aas
sub
daa
cmp
push
push
imul
pop
lahf
push
nop
pmaddwd
jge
cli
out
jnp
popf
ror
xchg
push
mov
dec
inc
push
add
add
jmp
scas
or
cs
fwait
cs
push
mov
ds
xlat
xchg
popa
adc
(bad)
retf
mov
sbb
jo
sub
inc
lahf
repnz
imul
test
lods
retf
push
ror
dec
inc
mov
push
or
add
cli
mov
icebp
out
and
fst
repnz
sahf
or
dec
aad
out
test
stos
pop
les
test
push
mov
leave
repz
loopne
stc
and
jae
popf
and
cmps
pop
jb
xchg
mov
adc
or
shl
jmp
push
dec
hlt
mov
mov
xor
jmp
push
sbb
(bad)
mov
sub
jp
out
(bad)
repz
add
adc
mov
(bad)
aas
adc
cmp
or
int
(bad)
sbb
inc
es
xor
sar
lods
pop
jp
mov
or
cdq
xchg
inc
fistp
mov
cmc
pop
adc
pushf
jmp
mov
mov
movlps
sub
mov
adc
and
sub
pop
and
jns
cwde
in
sub
fnstenv
fisubr
sub
mov
loop
dec
lods
xchg
xor
xchg
xchg
aas
fcomp
aam
dec
adc
mov
imul
pop
outs
pop
mov
int
adc
(bad)
jo
adc
push
xchg
xor
mov
jecxz
adc
sbb
push
das
or
xlat
push
mov
ficomp
push
(bad)
push
adc
mov
add
sub
test
daa
jmp
das
outs
ins
addr16
call
inc
xchg
hlt
sub
dec
push
adc
adc
mov
mov
mov
cmps
pop
dec
add
and
add
sbb
pop
inc
(bad)
mov
retf
(bad)
dec
in
popf
push
push
sar
xchg
cmp
test
sahf
inc
jle
pop
inc
mov
mov
jno
push
lea
rol
pop
popf
jae
movs
xor
in
cmp
popf
loope
cwde
sbb
or
add
test
in
push
enter
out
pusha
sub
dec
or
push
jne
sahf
nop
ins
jnp
pop
scas
xchg
and
sar
iret
or
fstp
xchg
cmp
cwde
push
les
jge
aas
sbb
clc
stc
imul
scas
and
or
jge
sub
ss
xchg
and
js
repnz
xchg
inc
sahf
pop
imul
push
xchg
pop
inc
adc
sbb
jle
pop
dec
mov
mov
xor
jmp
inc
jbe
jl
test
das
stos
push
jb
cli
(bad)
(bad)
out
xor
outs
ins
add
pop
push
push
cmp
sar
dec
pop
ds
int
sbb
test
or
mov
push
sub
add
fstp
arpl
scas
xchg
lods
pusha
jne
movs
mov
aaa
mov
ds
outs
shl
cmp
sahf
enter
ret
cdq
inc
clc
dec
call
(bad)
xor
stc
pop
sbb
cmp
stc
push
popf
addr16
sti
retf
lea
shl
sub
ins
cs
and
inc
cld
jle
mov
mov
cs
lds
push
mov
mov
imul
lea
inc
push
pop
fisubr
mov
mov
jbe
dec
call
loopne
das
dec
sub
bound
dec
adc
xchg
call
add
push
div
std
mov
sahf
loopne
sbb
mov
mov
mov
sub
xor
retf
cs
mov
push
idiv
jnp
fwait
bound
sbb
inc
ds
je
pop
cmp
or
gs
bound
inc
fld
pushf
inc
pop
imul
dec
repz
mov
jne
pop
pop
pop
inc
movs
(bad)
xchg
cli
xchg
out
mov
pop
dec
ins
sub
push
out
sahf
out
and
cmc
mov
fisttp
shl
add
in
and
jle
ds
sti
jl
test
lods
push
cwde
aas
outs
push
mov
movs
mov
adc
lahf
lock
hlt
mov
(bad)
lds
sub
push
stos
push
rcr
std
int3
mov
mov
and
or
in
cmp
repnz
loopne
fsubr
clc
pop
push
jl
je
pop
xchg
ror
stos
les
in
mov
mov
ret
adc
imul
pop
and
xchg
cmp
xor
jne
jb
xor
bound
enter
add
lods
mov
and
xchg
jno
out
jae
imul
add
hlt
adc
jle
ins
fistp
in
push
and
test
xor
mov
mov
jo
std
add
pop
adc
mov
mov
inc
fsubr
in
pusha
and
mov
call
inc
mov
push
test
or
xor
into
nop
push
shl
(bad)
stos
push
and
cmp
loope
pushf
cmp
lods
cmp
nop
dec
xchg
pop
clc
cmp
mov
mov
dec
fnstenv
cmp
movs
pop
push
cmp
pop
ss
or
in
mov
push
add
or
add
sub
mov
mov
sbb
xchg
imul
les
dec
test
adc
dec
jo
dec
cdq
movs
cmp
jns
lahf
cmps
cmc
ss
call
je
mov
add
mov
mov
addr16
dec
or
(bad)
scas
cli
in
add
idiv
pop
clc
jmp
mov
(bad)
add
mov
mov
cmp
mov
mov
xchg
xor
mov
push
in
inc
pushf
lea
xor
mov
loop
inc
int
retf
sbb
les
cmp
sti
mov
and
or
adc
out
test
xor
push
mov
out
sub
mov
mov
cmp
(bad)
jae
fwait
ja
sbb
jl
retf
sbb
cwde
retf
adc
cmc
mov
jo
inc
nop
mov
mov
and
mov
mov
inc
cwde
retf
add
pop
hlt
mov
push
cs
leave
dec
and
inc
nop
xor
sbb
lea
jb
push
in
or
pop
jge
icebp
cmp
pop
sbb
jecxz
ret
xchg
and
sti
daa
(bad)
enter
cmp
in
inc
push
mov
inc
dec
xor
and
popf
aaa
mov
jno
mov
push
inc
scas
xchg
pop
in
xor
out
push
sub
aad
inc
adc
and
and
push
inc
test
call
jg
jmp
ds
ins
int
es
nop
int
dec
cmp
imul
pushf
popf
retf
pop
xchg
or
fiadd
call
and
repz
xor
out
cmp
scas
pop
popf
jne
and
call
les
(bad)
ds
mov
outs
xchg
adc
daa
or
jp
push
je
in
in
cmp
mov
add
setle
sahf
cmps
(bad)
pop
aas
pop
push
sbb
push
push
xlat
dec
mov
inc
sub
mov
(bad)
sbb
or
shl
aam
cmp
mul
fidiv
jae
xlat
mov
adc
sub
inc
sub
(bad)
lock
cmc
cdq
ss
outs
ins
lods
fs
lods
(bad)
rcl
xchg
sub
xchg
mov
rcr
mov
icebp
mov
repnz
int3
rcl
ja
fcomp
mul
hlt
push
test
push
mul
and
test
ja
jmp
sbb
loop
mov
or
ins
pop
pop
mov
std
jg
mov
inc
push
pop
mov
push
sbb
xchg
sbb
jg
outs
jg
imul
test
sar
add
dec
cmp
sub
jno
mov
(bad)
ins
pop
ret
sbb
xor
ja
jns
daa
and
pop
push
into
rol
add
push
jp
push
mov
loopne
outs
mov
(bad)
(bad)
ds
fadd
inc
(bad)
sbb
push
push
scas
rsqrtps
inc
mov
mov
mov
add
add
jecxz
dec
sbb
dec
mov
outs
fiadd
sub
and
enter
adc
and
(bad)
(bad)
(bad)
outs
stos
(bad)
jecxz
mov
out
int3
lods
push
mov
pop
addr16
gs
and
pop
or
dec
and
dec
xor
out
cmp
push
data16
xchg
push
xchg
inc
xchg
data16
outs
retf
fsubr
sub
push
scas
in
(bad)
sbb
stos
int3
rcr
repz
mov
and
cmp
xchg
dec
push
ffreep
jb
arpl
lods
lods
mov
pop
aad
fidivr
inc
xlat
lds
aam
jns
dec
jns
inc
dec
pusha
mov
repz
push
lods
add
jbe
pop
pop
pop
push
repz
xlat
jo
sbb
push
fstp
fidiv
lds
inc
idiv
stc
dec
mov
push
sub
xchg
lds
aad
neg
xor
popf
fdiv
sbb
mov
sub
stos
jecxz
sub
call
dec
outs
jle
xchg
dec
push
push
jp
lods
std
and
scas
shl
repnz
and
lods
xchg
repz
and
push
mov
ds
fstp
sbb
outs
in
mov
jp
jno
mov
mov
ins
sbb
fistp
(bad)
daa
lock
cmps
sbb
inc
inc
sub
and
mov
ficomp
jle
into
inc
mov
ja
scas
(bad)
sub
push
ins
cld
fdiv
es
inc
xchg
xor
lock
sbb
adc
adc
push
adc
mov
push
inc
cmc
lods
or
std
fdivrp
adc
outs
movs
mov
call
adc
or
rol
mov
out
sbb
jne
loopne
arpl
iret
ror
imul
xor
add
into
daa
mov
pushf
xor
add
les
push
push
dec
push
sub
in
retf
(bad)
arpl
fcomp
cmp
imul
xor
loopne
pop
shr
daa
mov
shl
cs
outs
jnp
mov
push
push
pop
and
and
clc
je
sbb
cmp
arpl
xor
sub
xor
ret
(bad)
cmc
std
test
(bad)
mov
push
out
pop
xchg
pusha
popf
inc
dec
aaa
xchg
or
and
xchg
push
add
loopne
lds
shl
push
cmp
or
sbb
pop
mov
dec
or
xchg
add
dec
add
dec
inc
sub
adc
or
(bad)
mov
fwait
xor
dec
push
xor
inc
sub
loopne
rcl
xor
mov
fisubr
jbe
xchg
inc
stc
int
(bad)
repz
fidivr
jb
xor
mov
and
jbe
ss
loope
or
pop
dec
mov
sub
test
push
ss
sub
ds
xchg
aam
aaa
fnstenv
push
aas
push
test
fistp
ss
add
mov
out
cmp
push
test
mov
add
stos
xchg
mov
leave
enter
retf
imul
push
push
rcr
nop
add
pop
xor
cmp
sub
sahf
jl
(bad)
out
jb
fnstsw
xchg
adc
sub
adc
adc
movs
js
xor
sub
cld
jb
mov
in
js
cmp
mov
inc
int
not
cld
mov
test
mov
idiv
dec
out
sbb
or
dec
(bad)
mov
lea
push
xchg
cwde
leave
out
lds
mov
add
add
fst
je
std
mov
das
fst
test
add
push
sbb
bnd
scas
and
sar
cmp
push
jecxz
and
loopne
retf
inc
and
pop
sti
cmp
ins
ss
ss
(bad)
sbb
mov
iret
adc
pop
xchg
enter
xchg
pushf
(bad)
mov
jle
push
push
stos
or
cmps
inc
aas
adc
test
push
retf
xchg
pop
mov
addr16
lds
lahf
mov
stos
jp
or
xor
les
sahf
loope
dec
mov
gs
push
stos
mov
push
sbb
ret
jmp
dec
loopne
sub
adc
out
or
call
mov
push
cmc
movs
adc
iret
lahf
iret
mov
dec
jb
xor
mov
repz
mov
inc
and
fadd
stos
and
mov
push
dec
jnp
sub
test
mov
inc
bound
movs
pop
push
xor
or
jp
je
cmps
mov
aad
(bad)
adc
push
add
add
lods
push
shl
(bad)
das
out
fiadd
imul
mov
mov
push
mov
nop
mov
leave
daa
lahf
arpl
xchg
jmp
and
stc
lock
repz
cmp
push
clc
sbb
push
jge
in
xchg
dec
xor
sub
popf
cmps
test
daa
dec
clc
jecxz
jg
jg
data16
xor
xlat
mov
dec
aam
dec
cmp
add
sti
jp
jp
jo
pusha
mov
(bad)
ror
and
ret
div
inc
enter
dec
pop
add
movs
sbb
cmp
jo
or
test
popa
pop
jmp
(bad)
out
or
in
movs
leave
aas
dec
cmp
lods
mov
mov
cmps
jl
(bad)
movs
jp
pop
inc
mov
aaa
jbe
xchg
sbb
dec
push
and
jno
fimul
out
mov
sub
sbb
xlat
loop
lahf
jo
das
jb
sti
ds
push
pop
xchg
gs
add
or
cmp
ror
into
mov
sbb
loop
push
add
push
aad
sub
pop
mov
je
mov
push
lea
frstor
xchg
push
rol
inc
pushf
inc
icebp
or
pop
mov
outs
xlat
sar
movs
div
push
push
mov
sub
dec
je
cmc
adc
and
jp
and
jge
je
xor
inc
jae
push
popf
cs
xchg
test
bound
imul
setbe
lock
jle
inc
jmp
xchg
xor
push
leave
push
xchg
dec
and
jmp
ret
pop
jnp
pop
cmp
scas
cli
test
mov
dec
mov
xchg
sub
add
loop
(bad)
loop
test
cmps
fdivr
mov
das
das
push
stos
or
aas
pop
imul
in
dec
loop
dec
cmp
xchg
fistp
retf
sbb
ins
scas
sub
xor
xor
sbb
jl
ret
mov
(bad)
int
movs
outs
les
add
addr16
imul
jbe
xor
pop
inc
sub
iret
(bad)
and
xchg
sub
in
jns
dec
ins
adc
dec
xchg
loopne
test
pop
mov
adc
out
aas
pop
shl
jns
les
addr16
add
jp
test
mov
test
fwait
std
cmp
dec
push
cs
enter
push
inc
nop
jp
cmps
cmps
jo
adc
mov
xchg
(bad)
fmulp
gs
jb
push
mov
push
ret
xchg
sbb
bound
lods
scas
(bad)
sbb
mov
fldcw
sub
cmps
pop
adc
adc
push
enter
jge
sti
data16
sahf
retf
jnp
jl
add
xor
repnz
std
mov
xchg
sub
nop
in
mul
sbb
add
adc
jmp
mov
push
sbb
(bad)
mov
daa
stos
stos
jno
sbb
cmp
sahf
stos
adc
aas
ds
adc
sub
ret
jnp
sub
add
cdq
(bad)
dec
pop
mov
ins
mov
mov
push
mov
jb
lods
jmp
ins
lods
mov
call
leave
popf
cdq
ficom
dec
shl
test
es
bound
inc
xchg
cdq
push
sub
ss
sbb
inc
jecxz
movs
imul
xchg
inc
lock
nop
sbb
dec
pop
mov
repnz
imul
sbb
les
inc
pop
nop
scas
cdq
xchg
das
xor
enter
xchg
jmp
add
pop
mov
loop
xor
inc
inc
(bad)
cli
out
rcr
mov
mov
cmp
jns
xchg
lahf
iret
cmps
call
fimul
out
fidiv
xchg
aam
aaa
popf
lds
jp
icebp
or
mov
mov
pop
and
sub
fdiv
push
and
add
xchg
cmp
call
push
sub
or
(bad)
movs
call
ret
inc
pop
dec
jge
out
cmps
aas
add
daa
pop
sub
xor
xor
mov
or
inc
xor
les
jbe
cs
adc
inc
loop
icebp
pop
ds
sub
pop
mov
cmp
inc
adc
adc
scas
scas
mov
mov
jp
pop
cmp
and
cmp
pop
dec
dec
dec
mov
sub
cli
sti
div
div
test
jle
jmp
test
gs
add
rol
cmp
enter
not
and
add
jle
xchg
in
add
sub
aaa
je
aam
push
ds
cwde
jp
jecxz
or
mov
xlat
out
sub
loop
addr16
pop
addr16
sub
in
xor
(bad)
dec
sbb
mov
mov
push
std
repz
push
push
div
mov
push
mov
mov
mov
rol
jmp
dec
clc
nop
add
nop
jle
add
push
aam
cmc
push
sub
cld
gs
pusha
dec
cld
inc
ds
sub
into
leave
in
jmp
popa
ja
xchg
mov
leave
sti
jg
test
ror
rcr
aam
out
cmp
std
pushf
jp
retf
push
sahf
pop
mov
cmps
or
and
or
stos
stc
push
fimul
hlt
pop
mov
outs
idiv
xchg
jmp
mov
xor
int3
mov
sti
dec
push
add
(bad)
loope
xor
into
(bad)
aam
aad
dec
add
jae
bnd
cmp
inc
xor
xor
xchg
push
push
dec
jmp
mov
hlt
fwait
scas
jmp
pop
inc
gs
in
xchg
mov
push
aam
rcl
out
push
push
bnd
inc
pop
ficomp
retf
push
in
loop
sbb
mov
or
cli
dec
ss
ins
mov
mov
adc
outs
out
fidivr
xor
test
mov
mov
pop
add
jns
fnstsw
sub
ins
les
cdq
in
movs
pop
add
sbb
mov
enter
std
test
data16
cmp
inc
push
sbb
dec
bound
(bad)
sbb
fcomp
(bad)
adc
movs
inc
mov
test
je
adc
xor
popf
add
int
add
sub
rol
and
sbb
or
sub
cmp
push
fldcw
(bad)
ins
in
test
push
lock
jl
cmps
inc
xchg
pop
(bad)
xchg
call
imul
mov
retf
ror
in
push
push
retf
(bad)
mov
mov
cmps
mov
mov
xchg
cmp
add
vsubpd
add
xchg
pop
push
and
inc
(bad)
cwde
(bad)
adc
cmps
cmp
imul
sti
dec
in
sbb
cmp
leave
sub
inc
dec
add
and
add
or
pop
rol
dec
mov
jmp
xchg
dec
jecxz
pop
adc
sub
or
xor
hlt
hlt
mov
aam
(bad)
lods
scas
movs
xor
inc
rol
sbb
repnz
ds
(bad)
xchg
outs
gs
mov
mov
outs
rcl
push
pop
push
cmp
movs
jno
cmp
test
push
outs
ds
in
sar
imul
cmp
cmps
imul
shl
in
jecxz
out
cmps
div
xchg
inc
imul
and
js
push
xchg
js
xlat
movs
repnz
dec
mov
cdq
loope
sub
adc
jle
sbb
push
rcl
push
ds
push
shl
sub
pop
lods
add
in
jmp
leave
int3
cmp
adc
sbb
data16
add
fild
pop
imul
stos
sub
pop
add
inc
xor
jmp
pop
imul
ins
pop
fisubr
test
pop
in
test
sub
stos
retf
ds
repnz
sti
jge
test
or
pop
inc
mov
sub
jmp
sbb
add
fdivr
shl
sub
jb
adc
bound
stos
xchg
in
stos
fstp
ja
cdq
lods
jbe
mov
pop
jmp
xor
pop
sahf
retf
dec
dec
es
or
cmp
movs
lods
aam
add
pop
outs
jp
in
cmp
int3
jnp
xor
(bad)
es
call
xchg
scas
inc
pop
add
mov
mov
mov
xor
retf
outs
movs
adc
and
stc
or
je
push
repz
cmp
sti
rol
imul
or
out
call
movs
in
fs
pop
push
jno
and
or
mul
mov
pop
aas
pop
icebp
xchg
push
sbb
imul
sbb
or
dec
scas
sbb
sbb
jnp
mov
sub
mov
push
js
add
sub
test
mov
push
sub
or
jecxz
shl
clc
mov
clc
aaa
icebp
outs
push
aam
pop
test
fnsave
dec
dec
dec
xor
ins
push
sub
pop
add
test
aas
aaa
pop
fldcw
loope
pop
push
das
sbb
add
and
push
out
call
mov
sbb
or
addr16
adc
aas
cs
xchg
je
push
popa
mov
cmp
inc
nop
movs
je
push
clc
dec
imul
imul
add
in
cdq
jge
out
mov
dec
sub
xor
shr
sub
outs
mov
add
les
arpl
mov
ds
jecxz
call
jo
mov
mov
les
rol
shl
xor
push
jp
popw
mov
pop
pop
ret
adc
or
sahf
retf
ja
outs
mov
call
(bad)
push
stc
or
outs
mov
pop
dec
and
mov
imul
xor
retf
sub
out
push
push
(bad)
pop
sbb
leave
push
out
and
push
push
and
push
xor
(bad)
dec
pop
retf
xchg
and
stos
mov
cmp
dec
xchg
js
(bad)
sub
pop
scas
daa
das
xor
int
push
aam
lods
xchg
call
xchg
cwde
cs
(bad)
movs
lods
cmp
fcmovne
mov
push
sub
inc
es
pushf
inc
stos
xchg
mov
les
adc
enter
(bad)
pop
idiv
adc
mov
push
sbb
enter
mov
call
ret
fld
xchg
xchg
pop
repnz
mov
loope
outs
sub
loop
sbb
add
dec
call
mov
push
xor
cmp
daa
add
mov
rol
and
aam
xor
adc
(bad)
pop
cs
sub
cmp
mov
dec
cli
jp
mov
lods
stos
sub
cmp
lea
lea
mov
mov
int
retf
mov
repz
pop
clc
cmp
out
sub
(bad)
in
fiadd
and
ins
jecxz
sbb
pop
xchg
xor
push
scas
dec
pop
inc
stos
inc
stos
push
loope
push
ins
stos
(bad)
fcmovnu
idiv
xor
add
ror
out
dec
inc
sbb
out
int3
fcom
scas
xchg
jge
(bad)
pop
adc
jl
push
sbb
pop
xor
cmp
dec
ficomp
cmp
(bad)
and
fld
test
sbb
rol
sti
cmp
sahf
loopne
inc
mov
inc
fwait
inc
sub
aas
xchg
cmp
dec
inc
repz
jle
ins
je
push
xchg
add
push
and
mov
dec
lods
push
push
lods
mov
and
out
imul
es
mov
xor
addr16
cmp
jno
rcr
in
mov
(bad)
mov
inc
add
cmps
loop
in
mov
mov
jp
mov
test
xor
sar
cmc
jmp
jg
cld
mov
icebp
jge
mov
add
push
call
imul
fadd
mov
inc
test
ror
movs
sbb
arpl
sub
or
sbb
stos
sahf
test
sar
shl
push
fcmovnbe
outs
ins
faddp
fstp
adc
jmp
lds
xchg
nop
push
cwde
stc
push
xchg
mov
ds
out
aas
pop
fs
dec
sub
test
lods
sbb
mov
out
pop
(bad)
cmc
mov
mov
add
inc
mov
inc
in
pop
clc
mov
out
je
inc
xchg
push
inc
mov
xchg
leave
pop
jmp
jp
push
xchg
adc
popa
cli
and
scas
mov
mov
add
xlat
mov
push
ret
jge
push
add
lods
mov
int
and
mov
xchg
hlt
scas
dec
jne
sub
mov
sub
sbb
jmp
cmc
sub
dec
stos
inc
mov
outs
mov
lods
shr
push
div
inc
fsubr
rcl
push
jmp
mov
addr16
pop
mov
(bad)
ret
xchg
jnp
rol
mov
adc
stos
pop
push
mov
lea
push
cmps
inc
mov
jg
lock
mov
pop
hlt
xor
add
mov
mov
rol
sbb
xchg
push
stos
scas
xchg
dec
xchg
jno
ins
in
sub
sbb
mov
push
pop
push
cmps
movs
icebp
and
(bad)
call
cmp
mov
push
dec
xlat
out
lock
mov
or
test
mov
and
and
cwde
cmp
push
sub
retf
das
jb
xor
push
cmp
jge
repnz
hlt
dec
arpl
ficom
es
mov
jnp
(bad)
stos
gs
xchg
(bad)
aaa
fidiv
(bad)
sub
dec
push
cmp
into
add
in
call
jnp
dec
jl
mov
inc
aam
sub
iret
rcl
push
ffreep
mov
outs
mov
sbb
imul
mov
test
pop
cmp
(bad)
rol
inc
fadd
or
sbb
push
jecxz
jnp
xor
cli
out
dec
jge
add
pand
inc
adc
retf
(bad)
push
jle
jle
jecxz
cld
cli
dec
in
mov
(bad)
cmp
js
scas
xchg
sbb
inc
or
pop
add
mov
retf
lods
fdivr
scas
in
mov
movs
push
stos
dec
dec
or
mov
and
retf
adc
jbe
aad
sbb
sahf
inc
mov
ins
les
in
push
sub
retf
dec
push
inc
xor
nop
retf
dec
and
pop
movs
inc
dec
and
sbb
pop
(bad)
popa
jmp
nop
sub
inc
jge
int
in
mov
jo
ret
pop
inc
cs
push
cmp
stc
jg
cmps
mov
sub
aas
imul
arpl
inc
cmp
popf
adc
inc
test
mov
repnz
in
into
or
loope
dec
rol
imul
test
jne
inc
push
jmp
in
data16
enter
sbb
nop/reserved
add
inc
mov
(bad)
ror
stc
scas
nop
sub
add
push
fwait
ins
pop
adc
cmp
push
out
rcl
add
imul
(bad)
aad
xchg
stos
and
add
movs
and
xlat
test
sti
inc
(bad)
popa
(bad)
retf
mov
xchg
lock
and
repz
lahf
aas
retf
sbb
loope
push
push
adc
lds
xchg
jg
rol
mov
test
repnz
xchg
jbe
loop
leave
cmp
cmps
ror
(bad)
mov
mov
and
loop
cli
or
pushf
jp
mov
jo
repz
jle
stc
push
fwait
jmp
adc
push
scas
test
aad
sub
test
and
mov
sbb
stc
aam
xchg
leave
loope
pop
rcr
cdq
outs
xchg
es
push
ret
jp
jecxz
lock
movs
sub
sar
das
xchg
inc
pop
imul
xchg
fwait
or
clc
or
cmp
(bad)
inc
dec
hlt
mov
int
popf
push
sub
xor
mov
sub
pop
xor
lods
mov
(bad)
leave
xor
daa
adc
inc
imul
arpl
enter
xor
cmp
mov
(bad)
and
add
add
sub
ret
stos
mov
aas
xchg
(bad)
pop
sub
pop
push
cwde
xchg
jns
lods
or
sub
lock
sbb
add
fdivp
jae
cmp
mul
ffreep
(bad)
mov
iret
inc
js
push
in
fwait
popa
in
sub
jns
pop
ret
adc
aas
dec
adc
add
dec
push
adc
sbb
push
xchg
enter
repz
test
inc
cdq
jecxz
or
pmullw
inc
push
pop
les
imul
and
call
jno
dec
jmp
scas
aaa
lods
jmp
outs
push
in
push
xchg
pop
dec
(bad)
rcl
push
xchg
push
and
out
xchg
lds
je
cmps
push
mov
add
lahf
xchg
jg
(bad)
ror
and
xor
leave
add
mov
pop
xchg
lahf
scas
iret
mov
scas
cmps
mov
fdivr
add
pop
sub
stc
hlt
xor
in
(bad)
mov
(bad)
pop
sub
cmc
aaa
mov
aas
push
test
daa
test
push
push
daa
lea
int3
je
mov
mov
xchg
movs
add
aam
cmps
mov
(bad)
aam
retf
jmp
mov
add
lahf
xchg
jp
test
retf
ror
stos
adc
lds
ret
dec
or
adc
cmp
xchg
in
rcl
ret
xor
sbb
adc
ins
push
push
push
xor
std
push
test
push
imul
out
stos
jno
mov
leave
cmp
outs
(bad)
out
in
sub
pop
jmp
or
push
mov
sbb
sub
xchg
sahf
add
stc
scas
pop
stc
addr16
cmps
imul
push
and
(bad)
and
bnd
mov
ins
arpl
test
adc
test
push
add
mov
test
inc
cmp
aam
cmp
stc
jmp
jecxz
dec
cmp
sar
hlt
add
pop
mov
dec
cmps
loope
or
mov
mov
add
jb
sahf
mov
cdq
movs
outs
fucomp
jno
retf
xchg
test
add
(bad)
(bad)
int3
and
(bad)
sbb
sbb
xor
arpl
ins
inc
add
icebp
in
and
ss
clc
sub
xchg
pop
stc
xchg
dec
xor
pop
mov
sti
imul
in
(bad)
push
xor
xor
jge
inc
jmp
sub
inc
hlt
mov
mov
mov
inc
pop
inc
push
mov
loope
test
cmps
js
add
mov
or
lea
xchg
cmp
test
movs
(bad)
les
sub
push
nop
pop
push
(bad)
cs
pop
ret
call
push
es
xor
push
mov
push
jo
or
dec
in
pop
xor
xchg
test
adc
loope
(bad)
and
std
popf
cmp
repnz
iret
cmp
call
sub
or
lods
outs
cmp
pop
cmps
mov
test
ja
fisub
int
mov
test
out
pop
add
xchg
loop
ins
ret
sti
mov
inc
xor
jl
int3
stc
test
cmp
in
fstp
add
push
jge
cmp
retf
sbb
push
xor
dec
pop
sbb
push
retf
or
jl
in
push
mov
ror
ss
inc
or
add
loop
cmp
and
shr
mov
scas
loope
inc
int
rol
sar
mov
inc
and
rcl
mov
inc
add
popf
jb
cmps
dec
ss
vmovmskpd
mov
ins
out
push
fmul
int3
push
xor
ret
lock
mov
nop
test
pop
bound
inc
mov
es
jmp
call
push
mov
fsubr
test
popf
sbb
xor
adc
ja
push
sub
sub
cmps
retf
or
jecxz
sbb
add
push
pop
pop
fdiv
add
pop
xchg
add
xchg
jg
xchg
adc
leave
sbb
retf
adc
pushf
cdq
sbb
into
push
xor
inc
outs
and
push
xchg
test
push
pop
adc
js
adc
push
stos
les
push
(bad)
pop
popf
mov
pop
(bad)
pop
ficomp
shr
popa
pop
clc
sub
mov
push
push
cli
pusha
lods
(bad)
ss
and
sub
nop
jns
iret
and
ds
shr
xlat
mov
jnp
mov
imul
mov
xor
inc
and
adc
sub
movs
cli
jmp
cmp
cmp
ja
neg
imul
aas
mov
js
hlt
inc
icebp
out
movs
enter
stos
sub
fnstcw
mov
jne
aaa
out
add
ret
dec
aas
add
lds
xchg
or
add
jmp
ds
out
mov
push
xchg
cmps
mov
int
mov
xor
push
jb
mov
adc
xor
xor
imul
sahf
in
xchg
pushf
cmp
outs
push
shl
leave
dec
call
iret
in
call
sub
rcr
mov
jmp
retf
cwde
out
dec
pop
lods
push
sub
mov
sbb
inc
jl
and
aad
mov
fstp
sub
pop
pop
mov
cli
fld
mov
in
stos
fucom
xchg
inc
cmovp
vxorps
sti
dec
and
xchg
imul
xor
jbe
rol
sub
nop
dec
mov
jge
pop
xor
into
xlat
test
or
push
outs
leave
iret
bound
es
push
sbb
or
pop
retf
cld
sbb
int3
push
popa
outs
sub
or
ficomp
cmp
dec
test
hlt
xor
call
fist
inc
inc
inc
or
fld
in
rol
xor
or
rol
sahf
test
retf
mov
scas
push
stos
int3
mov
mov
test
dec
xor
call
mov
push
dec
hlt
mov
dec
push
adc
js
pop
in
je
(bad)
rcr
inc
sub
jbe
or
in
stos
repz
mov
jno
ret
and
push
imul
adc
mov
lock
mov
or
mov
(bad)
fs
pop
xor
adc
and
push
(bad)
fcmovnu
dec
adc
inc
push
push
sahf
inc
test
loope
shr
adc
inc
xor
push
fs
pop
js
rcr
(bad)
cmc
std
rcl
dec
(bad)
hlt
hlt
jmp
push
dec
addr16
add
cmp
lds
sbb
iret
inc
outs
arpl
add
mov
call
shr
mov
mov
adc
adc
(bad)
xchg
cmc
aas
outs
(bad)
cmp
dec
and
fiadd
inc
cs
cmc
cmp
shl
mov
jp
ins
mov
cld
xchg
retf
push
addr16
dec
push
or
mov
popf
(bad)
xchg
and
sub
jo
push
imul
or
xor
mov
faddp
or
neg
xchg
adc
xchg
not
adc
in
push
mov
ins
jle
out
in
sbb
jo
test
xchg
and
inc
jbe
gs
mov
(bad)
aam
retf
mov
or
mov
sub
stos
xchg
inc
imul
inc
retf
xchg
scas
imul
adc
aaa
outs
pop
out
pop
ins
fwait
movs
iret
mov
push
popa
call
or
stos
jp
and
in
ss
ret
dec
mov
pusha
(bad)
sub
dec
pusha
fimul
sar
stc
fptan
jae
das
lock
mov
retf
mov
xchg
movs
test
push
sub
dec
jo
dec
xchg
xor
push
dec
xchg
popa
std
dec
mov
outs
mov
les
jl
test
mov
jge
inc
ds
imul
and
mov
ins
sahf
es
or
mov
push
dec
add
mov
sbb
test
add
stos
ret
and
cmp
test
popf
cld
repnz
(bad)
or
xor
mov
test
sub
push
div
mov
mov
iret
into
mov
lods
or
xchg
pop
shl
lahf
ret
inc
push
ret
movs
inc
push
inc
push
xchg
jl
mov
fdivp
hlt
mov
or
inc
ror
pop
mov
sbb
stc
cli
stc
or
xor
mov
xchg
xchg
dec
popa
stc
sub
or
push
inc
loopne
bound
sahf
pusha
inc
mov
ins
out
cmp
push
stc
(bad)
pop
stos
xchg
adc
loope
bound
aaa
add
dec
ret
sbb
test
(bad)
ds
sbb
cmps
fwait
mov
pop
push
aas
xor
out
into
(bad)
mov
in
ss
push
fisub
adc
(bad)
out
push
sti
stos
push
sbb
iret
test
adc
call
sahf
les
cmp
data16
inc
pop
(bad)
pop
mov
pop
bound
add
cdq
push
sar
cli
punpckhdq
sbb
(bad)
das
clc
inc
pop
bound
nop
cmp
cmp
add
hlt
shl
dec
outs
jmp
inc
inc
inc
jnp
div
mov
pop
dec
sbb
and
bound
inc
and
cmc
mov
cmp
lods
sar
ficomp
ins
mov
jo
retf
in
sbb
pop
inc
add
(bad)
imul
mov
in
inc
jecxz
(bad)
mov
data16
sbb
loopne
aas
cdq
jmp
std
mov
cmp
mov
addr16
pop
jge
test
aas
das
mov
cmps
jae
lock
xchg
adc
mov
and
in
mov
pop
and
test
imul
ja
add
xor
jb
jb
in
scas
out
dec
xchg
mov
mov
push
jo
rol
mov
cmps
sbb
push
es
and
bnd
stos
xor
sbb
cmp
das
outs
jle
sub
mov
add
cmc
mov
fld
fistp
movs
jne
jp
enter
mov
add
sub
or
iret
mov
mov
xchg
inc
dec
push
xor
mov
out
sub
outs
test
lods
xchg
hlt
or
repz
and
xchg
sbb
loope
scas
fs
sbb
mov
(bad)
fcmovnu
sub
popf
push
movhps
adc
test
std
xchg
stc
outs
jno
mov
inc
xchg
dec
movs
pop
mov
in
sti
cmp
and
dec
gs
sub
aaa
sbb
scas
in
sub
and
fdiv
pop
xchg
inc
test
mov
and
jle
xorps
inc
xchg
fisub
pop
push
ds
sbb
lods
stos
cmp
fwait
repz
aaa
out
pop
jnp
adc
cmps
sbb
fcmovnb
iret
(bad)
pop
lods
idiv
lods
jbe
push
dec
in
outs
out
xor
nop
mov
aad
cmps
adc
jae
out
xor
loop
gs
cmp
add
pop
sub
dec
pop
add
sbb
mov
jns
stos
pusha
mov
push
sar
mov
pop
out
push
and
sub
mov
or
aam
mov
rdmsr
dec
scas
push
mov
mov
(bad)
xor
inc
mov
dec
loope
jecxz
push
inc
pop
imul
mov
xor
in
xchg
push
xchg
sbb
clc
push
mov
jno
mov
mov
stos
add
push
mov
inc
pop
inc
inc
or
and
push
in
popf
sub
rcr
pop
xor
jmp
call
es
rcl
sub
pop
cmp
jmp
mov
sbb
push
sbb
fcmovnu
mov
push
xchg
xchg
sahf
xor
jo
stc
icebp
jmp
ds
fcmovne
cmp
sbb
ja
cdq
and
add
cmp
ret
daa
mov
int3
add
jmp
cmps
test
sub
push
add
pop
jp
cmp
dec
ss
inc
mov
xor
mov
or
(bad)
xchg
cmp
hlt
mov
add
mov
dec
(bad)
stos
jmp
push
jmp
stos
xchg
in
ins
sub
sbb
cmps
and
cli
xchg
in
dec
push
rcl
scas
inc
xchg
in
sti
cmp
fidiv
fs
adc
inc
mov
jbe
sub
stos
add
ds
outs
jg
std
cmps
mov
js
adc
dec
sub
and
pop
mov
push
test
(bad)
push
mov
sbb
aam
pop
push
sar
jg
jnp
and
cmc
iret
lods
(bad)
jns
outs
sbb
pushf
lock
mov
(bad)
cmps
jmp
loop
(bad)
and
inc
ffreep
pop
daa
(bad)
push
and
(bad)
(bad)
int
cmps
jecxz
prefetch
shr
pop
loop
aas
aad
in
scas
clc
(bad)
push
jge
mov
dec
mov
imul
lds
or
push
mov
out
outs
aaa
inc
retf
mov
jmp
rcl
(bad)
push
mov
fcomp
outs
fbstp
mov
ins
adc
adc
sbb
or
stos
dec
pop
fmul
in
mov
push
inc
mov
sbb
jns
inc
push
sbb
push
jbe
or
les
fidiv
push
arpl
es
mov
loop
mov
fs
xchg
sub
pop
jbe
push
retf
inc
gs
mov
pop
mov
out
jo
or
cmp
fwait
xchg
iret
in
sub
cli
das
out
fstp
sub
mov
dec
inc
in
sub
sub
add
in
test
jecxz
jo
add
pop
shl
pop
inc
jnp
dec
repz
test
add
in
pop
dec
mov
jbe
dec
pop
jns
mov
fdivr
mov
sub
xor
pop
cmp
je
xor
out
push
and
push
aaa
xchg
push
xor
xor
das
(bad)
push
dec
cli
sti
xchg
outs
movs
mov
add
jl
pop
out
cmp
addr16
idiv
stos
xor
push
inc
jmp
cmps
mov
sub
in
mov
call
stos
add
scas
nop
push
mov
sub
mov
cmc
outs
rol
sbb
jp
sti
leave
out
adc
add
cmp
add
jl
pop
and
push
dec
inc
sub
outs
in
mov
call
sti
pop
dec
sbb
mov
pop
gs
fs
test
dec
xor
loopne
leave
in
xor
mov
sar
outs
outs
jns
lock
mov
lock
fs
test
repz
and
push
add
cld
clc
cld
test
pushf
pop
pop
pop
jns
mov
mov
icebp
hlt
aad
sbb
add
mov
std
xchg
outs
dec
mov
cli
in
or
in
mov
or
push
xchg
mov
sbb
mov
mov
icebp
mov
(bad)
jne
push
stos
in
adc
(bad)
cmp
retf
cs
ret
mov
lock
mov
pop
cdq
repnz
push
call
sub
mov
cld
jb
mov
dec
lea
out
inc
fcomi
xchg
vpaddsb
and
push
dec
sbb
cld
rol
shl
idiv
out
jae
das
imul
sub
push
adc
dec
push
test
je
int3
push
outs
cmovns
cmc
js
call
sub
mov
mov
push
test
jno
inc
inc
repz
mov
out
mov
xchg
push
mov
mov
pop
mov
cli
rol
mov
dec
cmp
mov
jge
cdq
cs
loop
aad
xchg
push
inc
test
sub
pop
xchg
xchg
test
sbb
lahf
pop
jecxz
inc
icebp
sub
xchg
cwde
mov
dec
aaa
imul
test
cdq
loop
aad
push
pop
aam
mul
mov
jmp
std
lock
cdq
xor
inc
inc
add
test
leave
xor
mov
jns
xlat
push
rcr
cld
cmp
ja
adc
jp
cmps
scas
test
enter
pop
mov
js
add
mov
cmc
cmps
dec
stos
jo
(bad)
aas
mov
bound
cmps
push
or
jmp
dec
cld
fmul
(bad)
pop
(bad)
adc
add
adc
movs
dec
cmp
and
outs
aas
fcomi
(bad)
mov
mov
outs
push
sub
push
xchg
mov
sub
imul
xor
jmp
sub
mov
or
les
jle
pop
repnz
mov
xor
xchg
inc
lea
push
rol
cli
and
dec
or
cdq
mov
sub
cmps
test
enter
fdivr
sbb
mov
(bad)
and
pop
and
in
mov
sub
repnz
xchg
addr16
test
jb
pop
pop
mov
rol
jae
sbb
fisub
jle
js
xchg
xchg
mov
mov
push
cmp
push
sbb
mov
sbb
in
mov
js
aaa
cmp
mov
dec
popa
xchg
(bad)
xor
jp
ins
arpl
and
add
cmp
rol
mov
sub
data16
pop
or
xchg
inc
addr16
inc
in
cmp
out
push
xchg
or
addr16
lahf
outs
(bad)
cmc
lea
push
sub
and
pop
ss
cwde
xchg
inc
pop
in
lahf
lahf
(bad)
loopne
les
push
push
xchg
adc
add
leave
lods
push
xor
cmp
movs
sub
out
gs
bound
push
push
adc
inc
enter
sar
movs
jmp
sar
inc
nop
mov
mov
hlt
call
aaa
repnz
push
xchg
pop
mov
les
daa
jno
pop
adc
dec
mov
xchg
jecxz
mov
in
add
sub
add
sti
jg
jmp
(bad)
push
sahf
(bad)
loope
xchg
enter
push
dec
test
sbb
xor
and
cmp
int3
lds
ret
or
mov
jb
push
cmp
push
add
xor
mov
push
mov
or
sub
aas
mov
dec
xor
xchg
ins
sahf
cmp
inc
push
ds
sub
stos
test
xchg
push
lea
adc
xchg
jmp
mov
test
inc
ss
push
or
jne
in
loop
into
(bad)
in
xchg
les
add
sbb
xchg
dec
or
cmp
push
mov
into
cmps
xchg
inc
cmps
enter
aaa
ror
pop
pusha
mov
leave
stos
sub
imul
gs
retf
or
cmp
and
pusha
sti
scas
push
cmp
test
aam
push
add
adc
call
loope
(bad)
retf
add
sbb
mov
jns
mov
clc
mov
add
and
lea
(bad)
(bad)
dec
dec
sub
inc
pop
inc
sbb
shr
iret
mov
jl
jns
jno
mov
adc
adc
add
movs
loopne
sahf
ds
imul
mov
pop
sbb
push
inc
(bad)
lfs
sub
fdivrp
cmps
sahf
pop
bound
dec
inc
movs
push
and
or
stos
xchg
push
cmp
push
push
neg
(bad)
(bad)
or
xchg
and
test
pop
in
jmp
(bad)
mov
dec
mov
loopne
adc
inc
dec
rcr
xor
jmp
pop
dec
dec
dec
mov
pop
pop
arpl
aaa
imul
push
aaa
mov
fsub
mov
loop
and
femms
pop
sbb
fdiv
mov
pop
aad
and
sub
das
retf
shl
jne
and
xor
inc
push
cmp
(bad)
dec
je
ins
sub
call
outs
(bad)
mov
ss
out
inc
xchg
arpl
in
aam
pusha
inc
and
adc
imul
fwait
sbb
daa
add
add
cmp
fidiv
pop
imul
jmp
push
cmp
pop
pop
adc
jno
push
or
int3
dec
aas
dec
mov
or
pusha
rcl
movs
sbb
inc
push
dec
or
pop
icebp
xor
data16
or
pop
arpl
push
jb
shr
fcom
jns
cmps
lods
test
paddusb
xor
test
inc
add
jmp
in
jne
fcom
adc
loopne
jp
xor
loopne
jmp
scas
xchg
jg
lods
cmp
mov
pop
daa
or
call
dec
inc
(bad)
jmp
mov
pop
push
fld
mov
mov
je
inc
jle
jne
iret
pop
and
cmp
sbb
mov
aad
xchg
or
mov
and
push
arpl
gs
rcr
xchg
push
adc
aad
outs
jne
stos
mov
outs
sub
iret
mov
mov
out
outs
rcr
push
push
pop
push
jmp
inc
leave
mov
add
push
jbe
push
mov
enter
stc
cmp
mov
pop
int3
add
int
aaa
and
je
and
lods
sub
add
xchg
stos
call
dec
push
jg
je
sti
cli
jb
iret
dec
imul
inc
sbb
push
xchg
adc
jne
sbb
add
xchg
sar
dec
adc
cmp
std
aaa
shl
or
add
xlat
iret
cmps
xchg
sub
mov
stc
stc
je
push
mov
jae
push
inc
cmp
mov
movs
push
repnz
jp
std
rol
lea
mov
or
nop
dec
push
rol
push
push
add
retf
imul
dec
sbb
or
rcpps
sbb
cmp
aam
mov
loope
lock
adc
dec
lock
add
mov
jecxz
out
pop
or
sar
in
scas
lods
mov
aaa
or
movs
or
daa
xchg
ficom
cmp
mov
jne
push
inc
in
push
aad
jo
nop
jno
(bad)
jmp
mov
xchg
push
jecxz
rcl
jecxz
jp
xor
xor
inc
jecxz
retf
icebp
popa
hlt
add
mov
mov
(bad)
out
mov
add
push
push
cmps
in
scas
inc
jnp
jecxz
pop
ja
shl
mov
aam
sub
dec
popf
jp
jmp
xchg
cmp
dec
shr
xchg
xchg
mov
and
jns
mov
jmp
xchg
add
xor
or
xchg
imul
popf
cs
nop
push
clc
jmp
xor
adc
xor
push
sub
push
push
push
xor
imul
push
leave
mov
retf
xor
inc
out
adc
sub
and
adc
cmp
add
addr16
retf
xchg
stos
xor
xchg
movaps
in
pop
cmp
sub
and
xor
outs
ds
not
sbb
pop
movs
imul
or
mov
mov
lds
test
stos
mov
mov
mov
(bad)
and
out
add
add
sub
pop
xchg
mov
loope
sub
xchg
inc
jecxz
push
adc
cmp
ret
retf
mov
and
hlt
movs
mov
cmp
inc
adc
test
and
xchg
mov
scas
rol
cmps
ins
(bad)
adc
imul
retf
shr
fstp
mov
test
inc
movs
sub
cmc
jecxz
popf
(bad)
xlat
and
push
dec
xor
dec
dec
je
inc
test
sbb
jg
mov
cli
repnz
sbb
pop
es
mov
mov
pop
(bad)
mov
fs
icebp
(bad)
jl
mov
daa
xchg
mov
and
and
aas
idiv
sbb
test
xchg
mov
xor
(bad)
out
mov
icebp
add
test
add
mov
pop
ins
cmp
jne
xchg
ins
push
gs
cmp
sub
(bad)
aad
stos
leave
xor
sbb
push
dec
push
sbb
int
in
jle
cmc
and
mov
jb
stc
jns
loope
out
imul
pop
jp
dec
mov
push
js
std
jp
imul
push
pusha
mov
(bad)
int
push
or
xor
adc
or
mov
nop
jmp
inc
in
idiv
fwait
std
dec
mov
mov
adc
rcl
loopne
sbb
scas
pop
mov
push
in
into
sti
test
out
out
int
pop
nop
rol
jg
cmc
into
lahf
cmp
push
jmp
pop
inc
xor
sbb
xchg
pop
mov
jle
cli
add
pushf
dec
retf
(bad)
push
sbb
and
cdq
jmp
ins
xchg
push
in
or
out
loop
adc
push
dec
out
cmps
test
lock
dec
adc
cmp
pop
push
xchg
and
push
(bad)
int
cmp
ins
loope
mov
push
pop
xchg
sub
mov
stos
in
retf
sub
xchg
rcr
pop
iret
adc
push
aam
push
dec
dec
mov
(bad)
mov
sub
xchg
and
adc
sub
mov
int
loope
nop
les
jmp
and
mov
jge
jbe
pop
dec
adc
mov
arpl
shr
in
stos
push
sti
jl
push
push
mov
in
or
test
cwde
aad
test
or
scas
mov
ja
cmp
xor
jmp
in
adc
call
cld
xchg
out
clc
mov
test
out
push
pop
imul
gs
cs
int3
xchg
aad
mov
xor
push
inc
inc
xor
retf
push
cmp
pusha
add
inc
retf
rcr
or
rcl
dec
leave
inc
inc
pop
sbb
ret
lods
jo
fdiv
mov
pop
mov
jb
mov
fnsave
imul
out
add
push
loope
jl
arpl
pop
adc
sbb
sub
ds
mov
xchg
pop
(bad)
aam
inc
push
out
jmp
dec
fistp
jmp
das
in
cmp
sahf
(bad)
push
xchg
cli
jno
call
icebp
iret
scas
push
xor
mov
fwait
pop
lahf
iret
cmc
fidiv
hlt
mov
mov
daa
aas
iret
cmps
fld
(bad)
hlt
dec
repnz
cmps
lea
arpl
cli
(bad)
jg
and
add
dec
inc
pcmpgtd
out
fs
call
in
xor
or
popa
clc
cli
sti
or
scas
pop
pcmpgtw
and
mov
out
test
jmp
pop
scas
ss
cwde
in
imul
xchg
(bad)
sbb
sbb
dec
inc
cmp
jns
add
fistp
sub
pop
or
push
push
and
inc
stos
mov
lock
push
dec
mov
jecxz
xchg
inc
pop
sub
test
add
xchg
inc
arpl
mov
jmp
bts
or
xchg
jp
int3
icebp
stos
mov
sub
sti
push
add
iret
inc
pop
dec
xor
sub
sahf
dec
sub
push
enter
sbb
daa
ficom
in
add
(bad)
xor
pop
sub
js
repz
dec
out
jl
dec
dec
sub
shl
pop
dec
adc
pop
inc
sar
mov
iret
pusha
mov
bound
cmp
pop
popf
mov
mov
mov
das
cs
cmp
push
inc
inc
mov
adc
or
scas
sbb
dec
inc
in
push
retf
iret
mul
xor
and
mov
stc
je
sub
ret
inc
xor
jne
jno
lods
or
push
call
sbb
adc
fwait
movs
ins
pop
fcmovne
inc
inc
dec
mov
mov
xor
add
push
loop
imul
popa
mov
dec
cs
repnz
push
and
cmp
neg
clc
arpl
jbe
pop
xor
lods
xor
out
xchg
rcl
mov
(bad)
fidivr
or
sbb
pop
out
call
loop
pop
enter
inc
sahf
imul
enter
jb
rcl
lock
leave
adc
jg
push
scas
popa
cmp
push
push
cwde
cmps
pop
cmc
push
xchg
mov
pop
sbb
push
dec
add
sahf
jle
jg
movs
scas
ja
inc
pop
dec
daa
lock
sbb
dec
push
inc
xchg
rcr
(bad)
jmp
adc
scas
(bad)
nop
js
fimul
adc
push
dec
cmp
mov
aad
aaa
sbb
in
pop
jmp
pop
jno
nop
inc
enter
fs
cmp
popa
xchg
push
mov
inc
pushf
push
pop
add
adc
inc
pop
ins
out
jnp
inc
adc
call
jl
test
int3
je
fisttp
push
in
in
pop
in
je
xor
in
and
xor
cmp
and
or
cmp
ud2
cmps
(bad)
arpl
and
pop
mov
xchg
(bad)
mov
cmp
jl
retf
push
or
add
jle
in
sbb
mov
call
cmp
jl
push
jmp
or
mov
nop
xor
lock
lahf
jmp
add
cmp
cmp
pushf
sub
fcmovnbe
arpl
mov
std
cmps
adc
(bad)
fisub
fwait
(bad)
sbb
sub
movs
dec
and
or
fwait
jno
outs
in
xchg
jnp
sub
or
mov
bound
lahf
pop
xchg
cli
cmp
int3
cmp
jb
mov
in
into
xchg
pop
lea
or
adc
pop
dec
ror
fcmove
lea
repnz
mov
int3
dec
fs
push
repnz
push
and
jp
loope
jge
pop
leave
jle
adc
jae
int3
push
pop
cs
mul
and
push
dec
cmp
cli
mov
shr
and
jo
jle
xchg
ds
pop
mov
or
add
dec
fs
cmp
(bad)
stos
push
xor
mov
xor
mov
adc
(bad)
cmp
push
pop
addr16
or
test
xlat
out
xlat
cld
xor
dec
es
test
add
stc
add
not
xchg
pop
int3
outs
pop
sbb
push
int
inc
xchg
mov
mov
cli
sub
jge
not
xor
cmp
jns
arpl
test
sti
pop
push
scas
loope
mov
mov
inc
lock
add
lods
call
dec
sub
ret
sub
aam
ds
cmps
xor
xor
lds
inc
pop
add
or
movs
pop
jnp
mov
mov
ficomp
inc
pop
stos
mov
sub
nop
jo
stc
loopne
sbb
jge
mov
pop
out
cmp
shr
push
pop
push
aam
stos
dec
xor
cli
outs
mov
sbb
shl
retf
iret
mov
jge
xor
(bad)
dec
popf
in
daa
test
and
mov
out
xchg
in
xlat
or
mov
add
and
push
or
xor
or
sbb
sbb
ins
and
rcl
repnz
cmp
cdq
shl
push
xchg
or
dec
(bad)
adc
mov
push
cli
sub
(bad)
shr
jno
cmp
push
ds
hlt
adc
sub
bnd
div
jo
and
push
xchg
jp
push
jg
in
mov
movs
dec
mov
fstp
push
mov
mov
add
in
push
ins
inc
rcr
inc
aam
les
retf
fld
and
fiadd
jle
aas
outs
jp
mov
lds
mov
and
je
pop
cdq
call
ds
cmc
mov
adc
jecxz
cmps
icebp
mov
cs
mov
call
pop
jmp
add
fdivr
fisub
dec
and
cmp
add
sbb
and
fdiv
retf
adc
shr
(bad)
lock
dec
imul
add
cmp
mov
pop
pop
mov
(bad)
call
mov
loop
leave
nop
xchg
lea
sub
or
sbb
daa
lea
jb
xchg
xchg
test
fsubr
pop
mov
in
jmp
cmp
jle
xchg
pop
inc
push
mov
aad
push
mov
shl
leave
in
xchg
cwde
push
rcl
call
sub
add
std
ins
out
(bad)
xchg
imul
lock
dec
stc
sbb
bound
mov
or
cwde
mov
add
lea
sub
loopne
pop
push
shl
ja
jl
mov
xor
mov
stos
xchg
addr16
pop
jmp
sub
pop
sub
in
imul
adc
jae
pop
add
ror
and
dec
cs
push
fcmovu
stos
xor
icebp
adc
ror
jecxz
pop
push
aad
ins
pop
rol
hlt
bound
dec
sub
mov
or
xor
cmp
nop
dec
(bad)
(bad)
add
xchg
inc
or
fmul
add
xchg
sub
add
pop
push
sahf
stc
mov
out
sti
test
push
fcmovbe
adc
push
mov
aas
lock
mov
repnz
adc
jns
icebp
push
jge
inc
sub
jmp
push
repnz
xchg
mov
mov
fisub
inc
add
out
pop
mov
pop
xor
xor
sbb
push
loope
aam
pop
cmp
pop
adc
repnz
pusha
rcl
nop
je
sbb
(bad)
scas
mov
fwait
imul
dec
(bad)
mov
adc
(bad)
outs
xchg
out
sbb
jb
xchg
loope
(bad)
ror
leave
mov
and
xor
xor
mov
push
push
xchg
sub
sub
iret
mov
outs
ret
mov
movs
push
adc
loopne
mov
(bad)
pop
cmc
sbb
push
rol
and
mov
aam
xchg
dec
mov
cmp
xchg
iret
sahf
pop
aaa
stos
mov
jbe
cmps
mov
xor
ss
jbe
sub
in
clc
and
call
(bad)
out
pop
push
ds
xchg
jns
or
test
loope
enter
push
inc
cli
sub
push
test
sub
fld
loope
enter
rcr
shl
jl
sub
pop
xchg
push
mov
pop
stos
mov
repz
dec
fiadd
ss
dec
and
push
cmp
call
ret
imul
(bad)
mov
xchg
aas
adc
dec
add
or
inc
(bad)
mov
mov
sahf
mov
jge
loop
sub
ror
and
push
or
mov
sti
js
pushf
xchg
or
aad
mov
out
icebp
xchg
out
(bad)
mov
or
popf
pop
sbb
cmp
mov
ins
jg
mov
add
retf
cmp
stc
jno
out
ins
mov
sbb
mov
hlt
mov
es
cmps
sub
sahf
cmp
cmp
mov
add
jmp
mov
fdiv
add
sub
push
mov
jge
std
xor
push
inc
int3
sub
setle
rcr
mov
mov
dec
push
inc
push
xchg
mov
xchg
idiv
add
dec
mov
lods
popf
in
scas
daa
adc
xchg
adc
pushf
push
retf
ror
retf
retf
xor
dec
sub
aad
test
sub
aam
stc
pop
pop
call
lods
dec
clc
retf
ror
cdq
ror
pop
imul
out
in
mov
(bad)
jno
dec
outs
ror
call
retf
mov
fucomp
lock
xchg
movs
adc
xor
aas
cs
pop
test
dec
mov
je
shr
or
outs
mov
out
cdq
ror
xchg
movs
jne
jge
push
or
mov
ja
dec
and
mov
xchg
aad
jge
repnz
lds
cmp
mov
adc
cmc
push
xor
and
inc
cwde
and
inc
inc
mov
add
call
(bad)
fcomp
or
addr16
dec
loop
(bad)
jb
ret
inc
jb
movs
dec
add
retf
sbb
mov
push
jne
(bad)
pop
dec
xchg
cwde
pusha
jb
and
js
mov
and
imul
test
div
fidivr
mov
fmul
dec
push
sbb
cmps
jno
sbb
fsubr
ja
push
cmps
lds
fst
or
pop
adc
test
adc
pop
mov
out
push
sbb
inc
imul
mov
dec
mov
movs
or
ds
mov
pop
enter
aaa
mov
lods
std
int3
mov
pop
add
inc
call
inc
pop
cs
push
ins
jmp
test
aam
mov
cld
adc
(bad)
mov
pop
out
mov
jb
cld
ds
sub
fsubr
stos
add
in
jnp
mov
xor
les
and
fdivr
iret
push
aas
sub
pop
sub
dec
mov
xchg
frstor
fild
or
push
inc
adc
dec
mov
mov
xor
cdq
and
xor
dec
cmp
inc
inc
or
pop
aad
out
or
xchg
(bad)
mov
mov
icebp
pop
ins
xchg
ja
aam
sbb
repz
inc
das
push
xchg
mov
fdiv
jnp
out
xor
imul
es
or
test
popf
xor
dec
push
mov
int3
xlat
add
add
idiv
int
mov
lods
js
fisttp
movd
sub
test
into
dec
dec
and
xchg
test
cmps
cli
or
add
push
ficom
jge
(bad)
int
xor
sbb
cli
hlt
mov
pop
jp
rcr
sbb
imul
or
sub
inc
dec
mov
sbb
sub
rcr
hlt
test
das
in
(bad)
js
xchg
cld
test
mov
movs
stos
sbb
aam
add
mov
call
pop
inc
sub
push
mov
push
add
mul
jbe
rol
push
(bad)
mov
test
imul
xor
aas
in
or
(bad)
out
test
or
jg
pop
popf
jl
mov
sub
mov
pop
lea
mov
rcr
in
ret
jmp
or
mov
xor
sub
inc
xchg
adc
sub
cmp
pop
mov
out
or
jbe
retf
jo
xor
pop
xchg
push
es
hlt
xchg
popf
push
imul
and
lods
sub
jne
inc
jmp
adc
arpl
inc
pop
mov
mov
add
(bad)
retf
stos
mov
stos
movs
test
retf
rcr
mov
inc
data16
and
inc
jns
dec
pop
leave
jb
mov
add
sub
arpl
xchg
fimul
dec
movs
pop
xchg
push
sub
add
nop
adc
shr
cmp
mov
cmp
xlat
sub
cli
lahf
mov
add
add
pop
aam
push
dec
pop
das
lahf
retf
std
pop
sub
sbb
cmps
fcom
imul
add
mov
loopne
gs
loope
cmp
leave
loopne
ds
icebp
mov
je
fsubr
xor
xchg
dec
fwait
ja
nop
retf
jmp
mov
jne
sti
dec
mov
js
mov
fcmovu
std
sbb
mov
inc
xchg
sub
repz
jg
jmp
lock
sbb
push
into
sar
push
mov
fistp
xchg
(bad)
scas
retf
stos
sti
mov
sar
leave
cld
xchg
jne
inc
sub
mov
psubsb
mov
push
mov
lods
js
das
pop
enter
jae
xor
ss
push
(bad)
or
sbb
test
cli
mov
push
in
xor
jmp
xchg
movs
test
clc
daa
mov
(bad)
lds
not
push
and
lods
xchg
fdivrp
add
mov
shr
cmc
cmp
cmp
sbb
aad
stos
fisubr
cmps
ret
rcl
shl
leave
inc
xchg
mov
xor
fcmovb
mov
dec
rcl
cs
jne
(bad)
cmc
mov
sub
dec
inc
add
inc
or
int
lds
xchg
jns
popf
mov
das
mov
test
test
aas
push
mov
nop
jb
popa
iret
in
mov
outs
aam
mov
mov
stc
add
scas
xlat
fnsave
fstp
cmp
call
mov
icebp
enter
(bad)
xchg
inc
(bad)
outs
xor
inc
(bad)
ss
jmp
movs
std
mov
inc
outs
or
stc
add
jmp
xchg
mov
out
and
add
jmp
loopne
aaa
imul
jp
mov
out
add
ins
fucomi
outs
es
inc
cmp
cmps
movs
mov
sbb
int
dec
cld
inc
dec
mov
and
xchg
xchg
jne
movs
lock
fcmovbe
mov
add
jnp
cmp
fwait
ja
xchg
pop
mov
push
(bad)
(bad)
stos
jl
pop
(bad)
lahf
pop
shr
push
mov
mov
jnp
cmp
jmp
jg
push
and
push
lea
or
mov
cmps
icebp
pop
scas
jnp
arpl
retf
inc
mov
(bad)
shr
addr16
jmp
dec
ror
aam
ret
cwde
ins
jecxz
(bad)
and
ss
push
mov
sbb
push
push
mov
test
outs
out
dec
outs
ins
jbe
fild
ds
or
mov
test
dec
push
sub
dec
push
loopne
sbb
(bad)
fs
xor
jmp
stc
sub
mov
fcomp
mov
jge
or
lahf
repz
pop
(bad)
out
mov
sbb
sub
fidiv
push
lock
push
jg
pushf
push
cmps
inc
xchg
push
dec
jp
ins
popf
ret
or
sub
pusha
pop
aam
pop
(bad)
jg
ret
pop
neg
loop
js
icebp
push
test
ss
xor
in
iret
call
repnz
jns
add
fcomp
call
push
or
test
adc
dec
xor
fmul
mov
lods
and
jno
sub
pop
or
and
cmp
mov
pop
dec
mov
cmp
sbb
push
push
shl
sbb
arpl
scas
(bad)
push
and
pop
rcr
xchg
bound
xchg
fsubrp
xchg
adc
push
in
ret
mov
fdivp
retf
mov
mov
push
movs
add
sbb
lahf
nop
call
nop
push
add
add
dec
std
pop
fcomp
jg
in
push
retf
dec
call
icebp
int3
dec
cmp
sub
and
cmp
cdq
mov
mov
cmp
adc
mov
psrlq
neg
(bad)
mov
hlt
jne
cmp
ins
jnp
sbb
cdq
aam
jns
push
add
shl
jle
test
mov
icebp
lds
mov
mov
add
jno
xor
dec
cmp
aam
daa
and
daa
movups
ret
sub
mov
ins
mov
xchg
cmp
pop
movs
(bad)
cmp
sub
fidiv
in
js
xor
je
aam
fidivr
and
dec
aas
or
mov
mov
les
movs
aad
sbb
jge
jge
adc
daa
jmp
add
mov
sbb
adc
cmp
dec
mov
push
inc
pushf
jle
inc
aad
daa
std
(bad)
std
xchg
outs
push
sub
(bad)
cs
test
mov
leave
push
repz
mov
xor
(bad)
dec
xchg
sbb
popf
pop
out
out
mov
push
ins
mov
(bad)
inc
nop
push
pop
cmp
xor
cmps
sub
and
loopne
out
adc
out
fdivr
jo
push
push
movs
or
lods
dec
nop
inc
out
ins
push
cld
mov
in
ins
mov
lods
sub
xchg
popa
mov
and
xchg
clc
push
mov
push
adc
test
pop
jno
adc
mov
outs
jl
icebp
aad
cmps
jp
ja
call
inc
fs
sub
hlt
xchg
jnp
leave
imul
jb
and
jb
fstp
dec
mov
sub
xchg
test
xchg
or
mov
in
repz
sub
retf
mov
cmp
jo
add
push
(bad)
and
add
push
(bad)
mov
or
mov
js
sub
sub
push
nop
cmp
sahf
cmpxchg
mov
xor
enter
pop
mov
fsubrp
push
sub
mov
retf
add
mov
shr
cmps
movs
movs
pop
fwait
inc
je
fiadd
jmp
or
add
mov
or
pop
into
fidiv
(bad)
icebp
stos
pop
adc
aam
lea
mov
std
cdq
cmps
push
sub
sar
call
retf
enter
sbb
sbb
mov
ins
mov
call
mov
pop
imul
cmp
mov
nop
cli
add
adc
movs
push
or
pop
xor
xchg
mov
sar
sar
inc
out
repz
popf
adc
xlat
sub
(bad)
ds
or
dec
dec
dec
sub
inc
mov
retf
iret
push
pusha
stos
fistp
mov
cmps
repnz
push
sbb
(bad)
pop
add
stos
xor
and
adc
or
sub
mov
inc
stos
push
ins
adc
mov
je
xchg
pop
pop
push
cmp
aas
scas
mov
pop
add
sar
in
mov
aad
and
cmp
jl
les
lods
and
mov
push
shl
mov
add
retf
and
stos
inc
sbb
pushf
sub
cmp
stos
pop
lea
cld
icebp
into
fwait
icebp
jnp
shr
xchg
xchg
jno
or
jge
call
jmp
repnz
adc
sbb
or
and
cdq
jecxz
jmp
fidiv
cli
pop
mov
sbb
loop
push
repz
jbe
cmp
sbb
push
xchg
cmps
sub
in
xor
mov
adc
and
leave
xchg
sbb
es
pop
(bad)
adc
cli
mov
aam
mov
inc
enter
adc
pop
ret
push
sbb
or
loopne
mov
in
sub
inc
(bad)
jp
lods
inc
push
push
push
ins
or
(bad)
in
xchg
stc
push
mov
sub
push
and
mov
mov
rcr
sub
push
(bad)
mov
ins
xor
ds
sub
inc
movs
mov
mov
in
mov
cmps
inc
fwait
jl
and
sub
xor
leave
arpl
(bad)
mov
mov
push
pop
mov
imul
jge
sub
(bad)
shl
push
cmp
repz
sub
fxtract
xchg
inc
dec
pushf
mov
(bad)
and
push
ret
xchg
cmps
scas
ss
bound
lods
movs
jae
xchg
sub
mov
aas
dec
sbb
repnz
mov
aaa
add
daa
push
add
mov
mov
mov
push
push
arpl
jmp
pop
dec
repnz
dec
and
ficomp
cmp
cmc
add
(bad)
jmp
mov
xor
push
aam
test
and
sahf
push
call
cmp
lods
stos
popf
and
push
fnstenv
daa
cmp
mov
(bad)
pop
rcl
ins
std
retf
mov
test
data16
outs
cmp
mov
and
jp
xor
rol
sub
pop
mov
fisubr
imul
push
inc
pop
lock
outs
and
out
jae
(bad)
fucomp
sbb
shl
sbb
daa
cmp
iret
dec
mov
pop
dec
xlat
retf
arpl
lahf
sbb
retf
push
xor
dec
nop
dec
mov
mov
sub
xor
sub
(bad)
popa
enter
inc
enter
int3
sub
or
leave
or
call
aam
and
dec
fwait
sub
mov
jp
ror
cmps
fst
push
mov
xchg
push
icebp
mov
sbb
ins
sbb
push
mov
pop
scas
lock
xchg
mov
in
mov
add
(bad)
ss
mov
repnz
mov
dec
dec
adc
or
jmp
mov
inc
or
adc
add
pop
div
pop
sti
sbb
sahf
push
dec
into
inc
push
ds
popf
push
(bad)
loop
jns
div
sbb
pop
lea
pop
cmps
xchg
dec
xlat
cmps
xchg
xchg
scas
stos
cmps
xor
dec
leave
inc
gs
popa
(bad)
in
bound
je
dec
dec
sub
in
fistp
dec
movs
mov
ds
jp
xchg
jge
aas
add
fld
push
inc
add
dec
push
movs
lock
pop
inc
xchg
ficomp
outs
arpl
aam
xor
dec
push
sbb
mov
repnz
cmp
mov
mov
(bad)
jecxz
outs
mov
adc
lock
push
add
push
stos
stc
sar
hlt
call
rcr
and
jb
(bad)
cmp
add
jbe
outs
mov
push
mov
(bad)
ss
fdivr
jmp
outs
jle
jo
sub
hlt
mov
out
imul
mov
out
inc
add
sub
psubusb
sar
in
sub
mov
xchg
add
imul
arpl
xor
lods
jns
pop
xchg
arpl
jmp
dec
sar
add
not
outs
mov
adc
inc
cmps
nop
cmp
add
fistp
inc
or
xchg
mov
mov
jmp
push
sbb
jecxz
cmp
stos
dec
test
mov
cli
aam
cmp
jp
neg
and
es
push
jmp
cmp
mov
push
sbb
xchg
xchg
cmps
out
xor
fcmovne
xchg
xor
xor
inc
add
pop
xchg
xchg
adc
or
jbe
outs
sbb
ins
sub
loopne
dec
lahf
add
sar
ins
mov
cmp
add
retf
(bad)
stc
xor
je
pop
fnstsw
loopne
dec
gs
sub
test
mov
sub
adc
sbb
jl
shl
outs
in
jge
retf
lods
aad
inc
sub
or
push
cmp
or
(bad)
pop
jp
mov
stos
sub
clc
in
push
dec
xchg
imul
inc
jmp
leave
mov
rol
call
cdq
pop
inc
and
cli
xchg
imul
addr16
inc
inc
and
cs
rcr
nop
sub
movs
push
cmp
cmp
mov
(bad)
jo
ret
sub
dec
scas
adc
aam
cli
call
push
push
lods
jl
hlt
hlt
nop
int
adc
or
gs
pop
sub
xchg
aaa
mov
sub
inc
jge
fwait
pusha
int
sub
cmp
dec
adc
mov
ficom
pop
push
sbb
pop
mov
sti
cmp
repz
xchg
sbb
xchg
sub
or
mov
pop
iret
mov
mov
or
inc
mov
add
xchg
(bad)
shl
dec
leave
pop
xlat
in
call
inc
jae
pusha
scas
cmps
test
inc
push
xor
and
ror
cmp
push
xchg
or
test
xchg
stos
jmp
in
xchg
in
push
in
push
mov
or
push
pushf
pop
or
je
jbe
or
scas
mov
std
pop
mov
(bad)
adc
mov
(bad)
xchg
js
test
jecxz
inc
enter
mov
or
jecxz
stc
mov
jnp
push
ror
test
xor
je
aad
mov
mov
mov
test
retf
movs
(bad)
in
xor
xor
les
mov
push
sub
dec
mov
sbb
sbb
push
loop
not
test
mov
xchg
fcmovnb
add
adc
cld
cli
or
xor
dec
rcr
xor
dec
push
xchg
xchg
push
xlat
push
push
dec
dec
shr
test
icebp
inc
jae
popf
dec
xlat
and
add
fdivrp
or
cs
add
sahf
xor
lahf
dec
gs
sbb
add
call
(bad)
int
dec
sbb
loope
icebp
xchg
movs
mov
adc
or
call
mov
fisubr
dec
pusha
cmp
ins
inc
in
adc
jmp
jle
mov
jo
push
js
jo
or
test
call
sbb
jp
ret
push
add
xchg
jecxz
rcl
inc
xor
xor
and
or
mov
sub
sbb
clc
inc
pop
fcom
out
jno
dec
sub
jne
sbb
push
mov
mov
int
stc
jo
cli
mov
mov
dec
push
pop
xchg
pop
adc
hlt
mov
pop
rol
add
outs
icebp
not
mov
rcl
pop
push
cmp
or
popf
int
add
jns
mov
cs
sub
jns
and
cmp
mov
test
jg
(bad)
gs
shr
xchg
into
dec
jecxz
jg
pushf
add
add
xchg
mov
sub
ds
arpl
mov
mov
in
add
iret
cli
(bad)
mov
sbb
dec
push
sbb
lahf
popf
inc
xor
(bad)
mov
xchg
cmp
aad
mov
xor
mov
stc
mov
dec
test
aam
shl
cmc
jp
jns
mov
mov
push
push
enter
push
psubsb
mov
mov
(bad)
fsub
push
int
lahf
cdq
std
xchg
jmp
mov
cmc
nop
gs
push
int3
stos
sbb
pop
ficom
cmc
div
mov
jns
adc
cs
and
push
xchg
adc
pop
xchg
dec
mov
xlat
scas
adc
iret
in
loope
lods
push
aam
scas
xchg
scas
xor
jns
sbb
or
leave
mov
(bad)
jae
fbstp
push
imul
stc
hlt
xchg
jg
mov
push
or
dec
scas
fisttp
or
inc
gs
lods
and
repnz
sbb
lods
mov
jg
mov
mov
mov
jae
movs
xlat
(bad)
out
pop
ror
xchg
jbe
in
or
add
call
xor
cmp
jl
test
cdq
sub
mov
fstp
test
shr
mov
neg
mov
cmp
or
outs
xor
cmp
stc
je
mov
addr16
out
data16
shr
rol
jae
scas
(bad)
push
lea
pop
icebp
repnz
mov
stos
mov
inc
pop
ins
ins
push
rcr
dec
and
add
add
push
ins
mov
xchg
fcmovu
xor
scas
and
ds
(bad)
fdivr
aaa
push
addr16
(bad)
sbb
mov
and
js
xchg
retf
mov
jg
cmp
jbe
jmp
test
push
rcr
or
xlat
iret
daa
out
xchg
outs
in
mov
jbe
cmc
sti
add
lahf
push
mov
mov
fnstenv
mov
ror
cmp
daa
fcmovb
add
dec
mov
inc
and
outs
arpl
sub
add
lea
inc
sti
cmp
xchg
movs
sub
or
xchg
scas
retf
repz
inc
div
mov
enter
dec
sar
mov
mov
fsubr
ss
pop
arpl
scas
push
or
stos
push
test
xchg
icebp
movs
jno
test
scas
popf
push
xor
cmc
jp
pop
jmp
stc
cmp
std
ret
aad
stos
sub
jmp
stos
push
test
mov
cs
pop
ror
jb
push
nop
in
jnp
jo
or
leave
scas
push
inc
int
loopne
push
dec
mov
lods
mov
bound
inc
lods
inc
sbb
retf
stos
sti
stc
mov
into
(bad)
(bad)
dec
push
ds
sbb
cmc
in
inc
cld
inc
and
xchg
or
rcl
clc
fisttp
fs
fild
jge
jno
in
emms
push
imul
cmp
out
(bad)
fld
fbstp
mov
inc
loop
mov
jns
sub
(bad)
popa
add
sbb
xchg
sahf
xchg
fwait
cmp
fld
xchg
xchg
fidivr
jl
(bad)
aam
pop
pop
jmp
mov
das
stc
inc
pop
ficomp
lds
mov
loope
inc
div
and
jl
pop
shl
clc
inc
adc
ror
sbb
aam
std
pop
(bad)
jg
push
rcr
leave
inc
pop
iret
mov
dec
and
jp
fcomi
ds
das
or
js
xchg
test
lods
jno
cmps
lods
sbb
cmp
ins
cwde
adc
push
(bad)
mov
cs
int3
ror
js
retf
add
cmp
xor
push
retf
mov
aad
aaa
cwde
nop
dec
push
loopne
sar
dec
jno
in
sub
push
imul
fcmovnu
and
les
dec
mov
es
enter
clc
pushf
mov
stc
adc
mov
mov
retf
or
sbb
or
pop
pop
inc
dec
mov
and
enter
rol
push
or
mov
sub
pushf
push
and
cld
mov
(bad)
adc
ror
dec
pop
xchg
xchg
cmps
push
jne
mov
pusha
add
add
mov
cmp
loop
cmp
adc
iret
out
sbb
and
imul
pop
repnz
cld
cli
iret
mov
retf
push
push
iret
mov
(bad)
adc
sbb
pop
and
pusha
or
(bad)
cmc
popa
mov
pop
push
and
xor
add
shl
inc
loop
mov
inc
cmps
add
cmp
aad
xchg
stc
std
xchg
sbb
inc
repz
lea
mov
cdq
movs
call
js
mov
cld
jmp
loope
jle
cmp
add
cld
fsubr
les
loopne
test
addr16
lahf
ds
outs
lea
mov
mov
lea
arpl
ret
xchg
jae
mov
sar
aam
xor
into
mov
outs
push
hlt
cmps
inc
add
or
mov
inc
nop
hlt
jbe
xchg
cli
or
push
sub
jns
jo
pushf
mov
in
and
pop
(bad)
push
and
xlat
aas
sahf
cmp
sub
sub
arpl
adc
adc
aam
xchg
push
cmp
(bad)
dec
mov
sub
test
(bad)
sub
aas
xor
ds
sbb
inc
retf
mov
dec
daa
xor
xor
pop
fwait
test
inc
push
or
loope
fisttp
fcomp
(bad)
ds
addr16
int
add
jl
inc
(bad)
push
in
movs
ds
xor
push
in
xchg
loop
sub
jmp
xchg
inc
and
mov
adc
cmps
mov
inc
arpl
test
test
cmp
rcl
sub
jp
aas
mov
call
cmc
cmp
xchg
mov
dec
xchg
iret
mov
sbb
shl
dec
jecxz
call
shr
inc
fnstcw
fsubr
xchg
xchg
cmp
xor
xchg
fadd
cdq
cmc
aas
addr16
push
scas
mov
add
inc
mov
fxch
je
cdq
loop
mov
ins
xor
mov
or
fdivr
ja
mov
push
les
and
push
repnz
lahf
inc
push
div
lods
sbb
jb
(bad)
cli
add
sub
jmp
int3
pusha
inc
add
or
pop
xchg
push
(bad)
or
inc
pop
popa
sbb
outs
push
inc
dec
test
push
(bad)
pop
lahf
sbb
add
aad
xor
pop
xchg
inc
shl
aas
outs
add
pop
(bad)
sbb
mov
and
xchg
mov
push
sub
xchg
mov
mov
xor
mov
dec
sbb
pop
jne
fstp
mov
test
dec
adc
push
jg
cmp
out
dec
and
jbe
icebp
jecxz
pop
(bad)
int
enter
inc
dec
sub
push
and
sub
sbb
inc
dec
imul
cmp
sbb
inc
imul
push
retf
push
jge
dec
ins
in
xor
push
xchg
(bad)
jg
jg
rcr
xor
sbb
sub
adc
sbb
sub
push
outs
mov
push
ins
outs
popa
cwde
ficomp
das
fldenv
sbb
cmp
jmp
jb
add
mov
pop
loop
or
inc
or
mov
gs
arpl
es
call
addr16
sbb
ret
(bad)
repz
adc
adc
sbb
lock
aas
mov
clc
sub
xchg
xor
data16
xor
movs
gs
and
push
jecxz
jg
in
sti
push
dec
pop
push
int3
leave
loop
enter
push
mov
push
mov
push
jae
xchg
lea
add
(bad)
xchg
stc
jle
imul
nop
xor
inc
aaa
mov
cmp
xor
dec
and
jne
call
mov
sub
fild
bswap
(bad)
xchg
jp
cmp
xor
lock
sbb
xor
loop
jl
cmp
stos
test
sub
xor
sahf
sahf
cmp
inc
mov
outs
mov
les
(bad)
push
outs
mov
cdq
xchg
jmp
pop
adc
mov
mov
mov
dec
out
sbb
cmp
aas
sub
ficomp
xor
ret
cmp
call
add
(bad)
mul
cmp
out
xchg
xor
or
pop
adc
push
dec
pusha
mov
adc
sbb
adc
and
mov
sub
mov
into
sahf
popf
sub
xor
data16
inc
sub
icebp
leave
lods
inc
stc
add
and
lods
gs
xlat
inc
xchg
push
sub
lds
test
pop
popf
pop
data16
and
cli
pop
sbb
dec
xchg
pop
stos
mov
adc
sbb
sbb
jns
push
addr16
mov
cmp
push
mov
pusha
pop
mov
scas
bound
mov
dec
enter
dec
movs
cmp
jg
out
dec
into
and
nop
sub
jae
je
jle
aas
in
xor
mov
in
in
js
lods
xchg
dec
(bad)
and
add
and
or
mov
pop
cmp
aad
jo
mov
sub
(bad)
in
ror
ret
shl
or
inc
test
or
jmp
sub
fcomp
sbb
ins
ret
sbb
adc
cdq
ss
sub
dec
adc
std
scas
cmps
mov
out
push
push
mov
xor
jae
and
and
dec
mov
mov
popf
add
das
outs
dec
test
xchg
(bad)
jb
test
outs
lds
ds
push
sub
push
sbb
loop
rcr
mov
shl
adc
stos
xchg
or
dec
movs
ret
pop
xchg
cmps
or
aam
das
dec
mov
add
ja
cmp
into
sub
adc
dec
mov
bound
xor
jno
jle
sbb
imul
lea
cwde
out
mov
xor
sub
or
loope
add
ds
sbb
sbb
push
inc
xchg
xchg
inc
or
mov
inc
push
inc
sub
or
ds
hlt
nop
or
and
jb
out
mov
cwde
scas
sbb
inc
push
adc
xor
sbb
pop
add
jmp
xor
lods
or
add
pop
dec
sbb
pop
hlt
(bad)
test
outs
fsub
add
scas
adc
mov
add
jecxz
rcr
(bad)
push
aaa
mov
mov
push
xor
xchg
sub
retf
mov
mov
xlat
sub
cmp
dec
inc
loope
(bad)
cmps
stc
cli
sets
inc
push
mov
movs
dec
in
das
fadd
adc
adc
add
inc
data16
mov
cwde
ins
rcr
and
push
sub
xor
sub
pusha
push
xchg
cmps
in
hlt
loope
cli
push
(bad)
pop
mov
movs
aam
(bad)
mov
fcmovb
cmps
xchg
je
inc
inc
(bad)
mov
cmp
inc
cmp
push
aad
add
sub
pop
sar
sbb
sub
mov
cdq
push
movs
jns
in
or
mov
bound
pop
test
out
cmps
pop
test
and
call
scas
xchg
add
mov
or
scas
cmp
idiv
jbe
test
pusha
push
add
arpl
call
mov
mov
frstor
aam
mov
inc
pop
push
stos
lds
test
dec
xor
add
inc
cmps
sub
jg
xchg
enter
into
pop
mov
popf
dec
pushf
mov
pop
and
dec
rcl
xchg
repnz
aaa
sbb
not
adc
jp
add
or
std
daa
ins
cmp
add
pop
clc
movs
shl
cwde
fild
mov
add
ins
outs
(bad)
mov
lds
and
pop
lahf
iret
mov
inc
addr16
gs
xchg
mov
dec
push
mov
cmps
xchg
jl
fidivr
data16
repnz
xchg
cmp
push
je
iret
sbb
cli
out
jle
loopne
outs
lock
jno
data16
jne
jne
popa
adc
call
ror
out
inc
in
leave
lea
adc
push
lds
jo
and
inc
xor
sbb
xor
xchg
scas
mov
inc
mov
sti
or
sbb
mov
xchg
xchg
jo
push
push
es
ror
cld
jnp
dec
in
inc
ss
and
outs
xchg
push
rcr
push
outs
pop
lods
out
xchg
aam
shr
or
xor
retf
inc
push
icebp
and
xchg
retf
xor
mov
out
mov
cmp
inc
xchg
fdiv
pop
sub
lock
xchg
push
hlt
out
push
jns
sar
mov
not
sub
sahf
mov
pop
pushf
xchg
scas
into
mov
not
fsubr
cmps
jae
(bad)
inc
xchg
inc
sub
sub
add
das
cwde
(bad)
or
or
inc
mov
jmp
sub
outs
jp
xchg
shl
cmp
loopne
xor
inc
mov
fst
xor
inc
cli
out
add
xlat
stos
xchg
ja
cwde
lds
mov
inc
mov
pop
mov
inc
psllq
sub
mov
dec
xor
mov
stos
xchg
lods
mov
mov
jle
loop
retf
sahf
mov
lods
mov
sahf
sub
and
mov
fcmovnu
mov
sub
or
test
test
imul
arpl
mov
pop
inc
into
(bad)
(bad)
jo
outs
xchg
and
mov
shr
nop
push
push
dec
rcr
inc
loopne
stc
ds
repz
pop
int
dec
cmp
lods
sahf
jmp
add
cmps
push
push
in
scas
enter
mov
aad
jae
movs
mov
xchg
mov
add
push
xchg
call
dec
mov
xchg
and
dec
cdq
retf
mov
inc
or
cwde
std
ins
aas
test
call
daa
cli
pop
pop
jmp
and
push
dec
push
dec
imul
sub
int
in
cmps
adc
dec
outs
and
jmp
addr16
sti
(bad)
daa
mov
and
outs
mov
push
adc
inc
adc
pop
enter
aas
fsub
sar
dec
cs
mov
jne
push
xchg
rol
jg
dec
scas
or
setg
dec
ja
fs
int3
push
ja
adc
push
sub
ret
aam
jp
mov
stos
fild
int
mov
sub
lea
dec
test
arpl
push
leave
cmp
jno
cmp
inc
test
inc
scas
popa
jmp
mov
div
mov
dec
rol
dec
daa
or
push
push
out
shl
sub
loope
repz
pop
out
push
xor
pusha
sbb
mov
icebp
and
sbb
adc
dec
(bad)
dec
xor
retf
in
stos
mov
push
pop
or
std
fs
jge
nop
pop
mov
sbb
not
in
dec
fidiv
mov
add
adc
movs
add
inc
fs
cli
jae
push
aas
ficomp
jae
div
pop
clc
jp
idiv
jg
jg
rcr
dec
lods
test
and
fdivr
aas
ret
fld
xchg
or
xchg
or
cld
ds
fnstsw
or
mov
sbb
movs
sub
and
iret
sbb
(bad)
std
jmp
aam
xor
cld
push
jne
jle
loopne
aas
not
sbb
fbstp
xor
and
sub
mov
xchg
jmp
stos
jp
cmp
mov
stos
xor
sub
inc
(bad)
cmps
repnz
adc
(bad)
lahf
and
daa
test
and
add
or
xchg
out
sbb
mov
fs
sub
push
dec
int
movs
sub
loop
xchg
aaa
cmp
loopne
stos
inc
inc
xchg
dec
enter
pop
(bad)
adc
sub
aam
sub
and
sbb
out
pop
std
enter
sub
and
fsub
test
int3
xchg
or
cmc
pop
in
test
pmulhuw
mov
repnz
mov
pop
stos
sub
mov
cmp
pop
push
fidivr
pop
pop
mov
pop
jo
sbb
inc
or
cmpps
dec
jmp
and
shl
std
pop
(bad)
rep
lock
aam
ret
mov
cs
in
jmp
int3
stc
lahf
mov
mov
dec
pusha
ins
jg
out
pop
std
cmp
out
mov
add
push
fisub
xor
sbb
loop
aam
stos
aam
sbb
mov
pop
rcr
retf
or
(bad)
push
jg
aam
push
jge
cmps
in
cs
add
std
xchg
pop
adc
pop
xchg
popa
hlt
loope
or
into
movs
loop
fxch
xchg
push
pop
shl
xor
cwde
leave
add
jne
pop
leave
cmc
loopne
movs
mov
fcmovb
fistp
and
sbb
in
loope
mov
fs
repnz
es
sbb
and
inc
and
sub
push
test
inc
es
sti
or
ins
sbb
aaa
sbb
enter
rcl
(bad)
int
xchg
push
sbb
push
hlt
leave
cmp
ins
stos
cld
loopne
ret
test
ds
aam
cmp
(bad)
mov
pushf
xor
aam
jns
jl
mov
outs
sbb
out
nop
sub
or
push
(bad)
cmps
test
ins
push
push
out
mov
ja
call
xor
inc
push
add
pop
jae
imul
fucomi
xchg
adc
rcr
in
jne
sbb
ins
mov
push
xchg
sbb
inc
jno
xchg
adc
bound
push
aas
mov
cs
and
retf
mov
popf
add
push
shr
or
lahf
aam
call
shl
mov
inc
mov
push
xlat
mov
lea
cdq
jecxz
test
lds
call
in
(bad)
jno
cmp
xchg
(bad)
jbe
jbe
add
xchg
adc
or
jecxz
scas
cmp
mov
mov
loop
sti
jmp
(bad)
push
sub
xor
xor
or
push
sub
or
mov
enter
push
xor
nop
push
leave
xor
les
mov
jmp
pop
mov
push
mov
lock
jg
int3
(bad)
frstor
adc
cli
sahf
movs
pop
ja
xchg
pop
fwait
ins
xchg
sub
dec
retf
addr16
adc
jmp
push
mov
jp
outs
arpl
hlt
and
ret
(bad)
test
add
test
loopne
cmp
sub
inc
test
mov
sbb
xchg
xchg
inc
dec
js
enter
mov
xcrypt-cfb
pop
jno
bound
pusha
inc
shr
adc
(bad)
(bad)
push
dec
test
std
cwde
jmp
data16
jbe
retf
std
push
mov
add
jecxz
pop
repnz
lock
fisubr
fwait
cwde
push
inc
and
(bad)
pop
sub
ret
mov
sbb
repnz
in
push
cmps
push
rcr
fsub
jmp
in
ror
in
pop
jbe
add
inc
lahf
lods
jmp
(bad)
add
inc
mov
retf
std
cmps
mov
mov
jae
and
or
mov
sub
and
stos
fisub
mov
jb
iret
in
mov
es
daa
sub
dec
mov
loope
inc
pop
jmp
mov
xchg
gs
push
mov
dec
inc
pop
imul
and
xchg
push
pop
daa
mov
cmp
int
adc
or
rcl
add
clc
div
movs
and
inc
or
xlat
xor
mov
sub
xchg
mov
xchg
pop
rol
ror
jo
aas
add
sub
xor
paddq
fdivr
cmp
inc
sbb
mov
in
loop
repnz
dec
fstp
dec
mov
call
fs
pop
xor
push
adc
cmps
dec
pop
lods
inc
sub
mov
repz
shl
xchg
in
ret
lea
jmp
or
cmp
add
inc
scas
push
out
sub
dec
or
mov
and
jmp
ret
xchg
outs
loope
jns
mov
push
adc
lods
movs
mov
inc
or
test
test
and
retf
jb
mul
idiv
stos
pop
outs
das
mov
or
cmc
call
xor
mov
cmp
cmps
dec
push
push
int3
dec
add
imul
mov
cld
fld
or
mov
mov
or
iret
xor
out
in
add
and
inc
push
imul
nop
not
mov
bound
jne
sbb
adc
add
or
mov
enter
cwde
cmps
cmovl
adc
or
jmp
push
ins
push
mov
mov
cmc
jp
(bad)
fcmovne
sti
and
fdivr
mov
repz
sbb
push
cmp
sbb
aad
push
bound
lods
xchg
mov
jae
fcmove
outs
icebp
mov
imul
xor
sar
pushf
mov
and
and
arpl
cmp
mov
mov
cs
pop
es
pop
pop
dec
xchg
enter
xor
xchg
jb
test
dec
pop
cli
jnp
(bad)
fistp
pop
sahf
or
jecxz
pop
inc
retf
ss
mov
rcl
sub
test
cmp
hlt
ror
int3
dec
mov
rcr
lods
mov
mov
ret
pop
xchg
(bad)
mov
add
aam
test
sbb
and
inc
sub
push
xlat
iret
int3
std
mov
xchg
cmp
shr
loop
add
inc
add
jecxz
add
loopne
cmp
cmp
sbb
sar
jns
xchg
mov
repnz
add
ja
xlat
sbb
mov
ror
add
mov
push
rol
(bad)
iret
and
pop
rcr
mov
pop
in
in
mov
test
cmp
loope
out
test
mov
pop
cmp
mov
retf
sub
add
inc
mov
dec
add
push
mov
lahf
ret
inc
(bad)
push
xchg
sbb
shl
or
push
ss
push
int
and
sub
xchg
jecxz
mov
jne
out
imul
and
sahf
cmp
jne
setbe
add
gs
adc
inc
test
dec
std
test
mov
aad
int3
dec
jecxz
sti
mov
xchg
xor
push
jo
xor
pop
xor
out
jmp
scas
xchg
inc
call
and
pop
dec
fsubr
ds
mov
mov
cmp
mov
jnp
out
mov
ficom
sub
ret
movs
pop
dec
loop
out
jg
xor
add
test
jmp
cmp
mov
inc
add
add
xchg
pop
push
xor
int
jno
dec
mov
xchg
cmp
adc
cvtpi2ps
xor
sub
movs
add
jg
movs
aad
int3
jbe
jp
xor
cmp
leave
push
push
adc
fs
imul
mov
cmp
in
sbb
and
cmps
mov
xchg
jo
addr16
ret
add
ja
imul
ins
xlat
enter
(bad)
pop
fwait
sub
inc
push
mov
test
mov
and
loope
pop
jno
out
cmps
sub
je
mov
push
std
inc
mov
std
xchg
pop
das
xchg
jp
sub
cmp
xlat
jmp
sub
mov
das
es
popf
and
pop
mov
add
pop
arpl
cmps
inc
not
push
fwait
mov
movs
dec
pop
add
dec
cmc
mov
jecxz
clc
neg
fld
das
outs
in
aaa
add
add
inc
xchg
test
stos
push
jecxz
inc
pop
sub
int
mov
xor
and
inc
push
cs
jno
in
aas
das
(bad)
(bad)
ins
neg
inc
and
jp
test
adc
(bad)
dec
xlat
dec
stc
push
xchg
pop
xchg
add
ficomp
sbb
mov
jb
mov
es
add
mov
push
mov
mov
push
test
pushf
mov
sub
out
xlat
pop
cmp
lods
sub
sub
idiv
fidiv
lea
test
cmc
cdq
das
and
icebp
(bad)
loope
or
fild
sub
in
mov
aaa
xchg
stos
and
psrad
xor
jge
dec
mov
xor
cmc
mov
and
push
gs
xchg
and
dec
stos
test
push
push
mov
gs
nop
pop
and
jg
and
mov
inc
xchg
(bad)
aas
in
repnz
jl
lods
inc
mov
or
in
pop
imul
sbb
mov
sbb
in
cwde
mov
inc
mov
sbb
neg
pop
out
pop
test
cs
xchg
jns
into
sub
fnsave
or
nop
push
push
jo
lahf
in
xchg
add
cmp
stos
mov
inc
or
pop
xor
lods
out
shl
shr
xchg
pop
xchg
ds
into
push
popf
dec
jmp
int3
mov
cmp
add
pop
test
sbb
scas
inc
scas
add
dec
arpl
sbb
jb
jmp
pop
mov
add
out
sub
and
stc
jecxz
xchg
mov
inc
movs
adc
mov
xchg
shl
add
inc
ds
mov
push
aad
jbe
adc
mov
out
(bad)
dec
sbb
mov
mov
sbb
ins
xlat
in
inc
push
jp
aam
jbe
scas
enter
ficom
bnd
fisttp
gs
xchg
mov
pop
lea
sub
mov
(bad)
cs
sub
adc
pop
dec
cmp
xor
or
movs
mov
ins
xlat
ins
shl
and
(bad)
pop
aas
out
ret
mov
push
ja
adc
outs
mov
je
xchg
add
(bad)
(bad)
rcl
push
push
(bad)
mov
fld
jbe
mov
sar
in
sub
mov
mov
sbb
aad
movs
xor
add
test
mov
retf
leave
add
xor
retw
(bad)
(bad)
and
out
inc
pop
rcl
and
fisub
fwait
sub
ficomp
adc
ficomp
cli
test
xchg
stos
adc
pop
call
inc
add
mov
pop
and
imul
mov
retf
jmp
pop
mov
jno
mov
pop
xchg
stos
ret
sbb
movs
test
movs
push
push
scas
push
push
aad
enter
mov
pop
test
push
daa
sti
aaa
add
pop
aaa
cli
sti
cmp
adc
(bad)
loope
into
and
inc
lea
add
sub
pop
push
push
movs
out
or
hlt
mov
push
in
cmps
retf
mov
cdq
adc
retf
jae
inc
sub
popa
ffree
pop
retf
add
retf
adc
push
enter
sti
jp
in
in
jl
and
jns
adc
pop
ins
imul
xchg
nop
call
push
call
(bad)
add
lods
pop
sub
test
sbb
movs
dec
pop
mov
repz
loopne
pusha
or
in
and
mov
dec
mov
inc
xchg
repnz
sbb
hlt
lahf
call
pop
cmps
sub
add
cmp
aam
inc
add
xchg
sbb
lds
dec
and
sahf
and
loope
xchg
movs
push
xor
fs
mov
or
in
jns
mul
fldenv
xchg
push
xor
add
fstp
fwait
push
sub
jo
nop
add
push
add
jb
fistp
out
sbb
jbe
pop
adc
sub
pop
cmp
xchg
dec
cld
jnp
ret
leave
ss
xchg
jne
mov
add
push
mov
mov
xor
in
xchg
or
js
dec
fdivr
xchg
sbb
cmp
mov
xor
add
imul
xchg
pop
fnstenv
enter
mov
(bad)
mov
fistp
push
cmp
xchg
pop
test
mov
pop
in
pop
out
test
(bad)
mov
xor
in
js
mov
jmp
pop
data16
mov
cmps
or
jns
add
mov
stos
sbb
mov
add
or
pop
push
xchg
fcom
sub
jp
sub
mov
add
mov
iret
mov
fldenv
inc
lea
gs
repnz
cmp
push
jne
jl
xchg
dec
mov
inc
aas
ins
push
and
mov
inc
sahf
jns
inc
(bad)
pop
inc
push
xor
jns
movs
adc
in
mov
and
das
xchg
arpl
jae
mov
shl
jle
cmps
dec
mov
mov
or
mov
inc
das
cs
xlat
inc
sub
push
js
in
rcl
int3
repnz
mov
int3
icebp
jp
push
mov
pop
lahf
jle
mov
jmp
add
push
jg
jmp
push
cmp
mov
out
stos
push
add
add
push
fucomip
inc
cmps
inc
mov
sar
push
push
and
sub
xor
imul
pop
jmp
imul
data16
nop
dec
sub
wrmsr
jp
sub
hlt
les
and
mov
push
mov
adc
push
push
popf
bound
cmp
fadd
mov
add
mov
jge
jnp
jl
xchg
sub
add
pop
(bad)
jl
push
xor
sbb
xchg
push
dec
rcl
xchg
les
cdq
test
cld
pop
jp
sub
push
lds
fidiv
and
pop
call
std
dec
sub
add
or
sub
xchg
inc
lahf
xchg
cvtpi2ps
es
scas
dec
(bad)
cmp
sahf
pusha
enter
dec
push
leave
add
mov
je
les
pop
xchg
clc
sub
stos
xchg
loop
inc
adc
mov
pop
add
cmp
jo
cmp
fwait
test
mov
xchg
out
je
fsubrp
mov
ror
adc
cmp
and
js
mov
outs
fdiv
or
fidiv
xor
mov
popa
repnz
dec
shl
mov
lods
jno
jge
outs
adc
je
popa
mov
cmp
push
enter
add
xor
sbb
jnp
jne
(bad)
popa
call
push
cwde
pop
ds
stos
lods
or
mov
inc
cmps
sahf
adc
jo
cli
adc
mov
xchg
arpl
(bad)
and
pop
jecxz
ds
jp
fld
lea
bound
fptan
repz
(bad)
inc
ins
xchg
push
sbb
mov
inc
mov
movs
dec
sub
test
shr
xchg
mov
sub
fdivr
jmp
gs
cdq
test
cmps
inc
ins
retf
mov
stos
push
es
xor
test
jb
sahf
scas
and
cmp
(bad)
and
dec
add
add
ret
leave
pop
add
and
repz
ds
adc
jne
sub
push
lahf
cwde
cmps
inc
nop
(bad)
cmps
push
adc
ins
xchg
mov
add
inc
xchg
sbb
cmp
es
mov
stos
les
(bad)
mov
xchg
gs
or
adc
sti
sub
dec
jle
jmp
daa
add
cmp
mov
push
movs
pop
test
adc
cli
call
rcr
(bad)
xchg
out
int
xchg
sub
call
or
cld
mov
dec
mov
ds
int3
icebp
jmp
cmp
add
test
xchg
rcl
sub
sub
test
inc
xchg
cmps
fisub
mov
mov
cmp
sbb
mov
sub
movs
inc
into
aad
inc
mov
repnz
clc
jp
cmps
(bad)
out
adc
pop
xchg
sahf
pop
push
mov
inc
fadd
jecxz
scas
das
ins
ins
lods
xchg
ins
and
lahf
ret
inc
cmp
dec
inc
icebp
je
imul
dec
scas
and
aam
lock
dec
cmp
fist
das
mov
leave
inc
adc
inc
add
push
or
(bad)
mov
pmovmskb
xchg
les
push
sub
test
(bad)
stos
push
mov
mov
test
test
add
push
mov
in
pop
loopne
test
retf
pop
jmp
(bad)
imul
sbb
jecxz
pop
int3
jbe
pop
mov
jae
ficom
into
fld
js
in
ins
inc
rcr
or
xchg
dec
cmc
pop
jns
hlt
ds
inc
arpl
les
movs
jns
sub
aas
xor
sub
jecxz
pop
je
jle
leave
imul
and
inc
xchg
mov
push
mov
mov
stos
out
jp
ins
test
add
movs
cmp
shl
outs
int
push
dec
clc
lods
inc
pop
daa
xchg
stos
cs
pop
nop
test
clc
jne
jle
add
adc
inc
pop
fadd
push
test
add
dec
sti
dec
call
test
or
aas
loopne
scas
xchg
add
jnp
mov
push
out
adc
jae
imul
out
jecxz
sub
inc
out
fcmovnu
mov
and
scas
pop
and
add
stc
icebp
(bad)
pop
sub
outs
pop
enter
and
sbb
cld
sbb
cmp
xor
push
sbb
push
lds
dec
imul
fdivrp
shl
mov
adc
test
dec
push
jne
int
cmp
adc
js
inc
xchg
mov
loopne
out
ins
in
out
loop
push
ins
pop
dec
lods
xchg
mov
dec
stos
call
je
add
in
and
cmp
das
in
mov
je
fs
adc
add
mov
adc
jge
inc
sbb
and
mov
xor
mov
xchg
sub
jne
jnp
jb
ja
out
fdivr
iret
and
int3
repnz
push
sub
add
dec
nop
mov
cmp
jnp
ins
scas
into
or
mov
enter
mov
mov
ret
call
aam
xchg
mov
add
rcr
mov
(bad)
(bad)
loope
inc
mul
jmp
movd
pop
lock
pop
out
leave
mov
arpl
(bad)
mov
pop
iret
and
scas
fcmovnb
mov
mov
pop
pop
jmp
gs
inc
cmp
out
jbe
xchg
enter
aad
lods
jg
lods
aam
or
ror
inc
pop
rol
dec
int
pushf
and
and
lods
pop
adc
xlat
les
jg
popf
jp
fnstsw
jns
push
and
push
jmp
sbb
push
mov
add
jnp
jns
sahf
retf
inc
lea
inc
repz
pslld
xchg
cmp
mov
in
pop
xchg
jmp
hlt
loope
adc
les
adc
mov
or
loopne
xor
sbb
push
dec
popa
adc
shl
gs
popf
xchg
dec
adc
xor
mov
jl
adc
cmp
in
pop
jmp
mov
add
jae
repnz
ficomp
dec
cmp
and
ret
(bad)
aam
sbb
mov
(bad)
sub
sbb
das
cmc
jge
cmp
test
push
das
cdq
xchg
in
scas
jne
sbb
inc
(bad)
lahf
inc
(bad)
mov
stos
daa
jbe
dec
ror
and
add
fs
(bad)
dec
mov
sbb
stos
sub
seta
sbb
in
and
jmp
add
sub
pop
lods
xchg
inc
xlat
test
inc
add
jmp
mov
dec
sbb
xchg
push
jg
aas
fdiv
cmc
jmp
ret
sbb
mov
mov
push
clc
fdiv
dec
retf
lock
jne
(bad)
shl
or
loope
xchg
dec
inc
fimul
(bad)
loopne
sbb
add
sub
sub
fldenv
retf
dec
inc
xchg
push
jno
xor
xchg
sub
cmps
xchg
test
mov
fcmove
call
fwait
sub
(bad)
(bad)
aad
retf
ss
imul
cwde
(bad)
cmp
cmp
lods
and
in
push
in
int3
es
stos
sub
sub
xchg
fcomp
in
mov
(bad)
mov
aam
push
pop
xchg
xor
pop
cmp
aad
in
pushf
sbb
shr
mov
dec
push
int
lahf
sub
sub
hlt
fcmovu
xchg
pmuludq
sbb
mov
(bad)
cmp
lahf
scas
scas
push
(bad)
aad
xor
jns
cmp
mov
add
jo
aad
sbb
push
aad
mov
xchg
ja
add
mov
jecxz
das
test
fcmove
pop
das
lahf
retf
in
cs
xor
mov
clc
add
test
or
sub
xchg
sub
mov
sbb
or
mov
jb
or
push
xlat
fisubr
fs
stos
cs
int3
push
(bad)
xchg
cmps
lahf
cmps
pop
jns
pop
mov
add
imul
ror
or
xchg
push
dec
add
push
int3
mov
push
push
push
adc
cmp
out
gs
fistp
(bad)
sbb
icebp
jo
add
and
test
xor
add
sahf
sub
cmps
mov
(bad)
sbb
icebp
(bad)
popa
dec
cmps
adc
loop
xor
aaa
aas
pop
(bad)
mov
test
shl
ja
pop
jbe
sub
aad
xlat
xchg
jg
cwde
out
xchg
jmp
lods
jb
or
jno
mov
sub
addr16
(bad)
jns
test
inc
or
mov
in
data16
add
cmps
in
cmc
repz
cli
pop
or
outs
out
dec
xchg
xchg
xor
out
cdq
lea
dec
dec
dec
sub
dec
mov
add
mov
(bad)
add
pop
pop
cld
cmp
fs
adc
jo
xchg
loopne
pop
cwde
cmp
enter
inc
ja
fadd
jae
ins
loopne
sbb
lds
lahf
(bad)
cmp
cmps
xchg
pushf
lds
test
jbe
sbb
xor
in
pop
mov
int
(bad)
ds
jmp
cmp
ja
inc
imul
ds
xchg
shr
jns
aas
aad
les
sub
js
cmp
das
gs
cs
xor
bndldx
sbb
push
scas
ds
adc
or
mov
sbb
jp
cmps
and
xor
(bad)
fs
push
or
pop
sub
rcl
sub
mov
scas
test
add
adc
repz
dec
sbb
jmp
in
mov
push
call
bound
ins
push
cmp
jecxz
dec
je
lock
cmp
rcr
(bad)
push
xacquire
iret
ja
fisub
cdq
push
icebp
mov
inc
pop
mov
std
mov
and
movs
xor
movs
push
rol
dec
mov
pop
inc
jp
adc
out
mov
jmp
dec
inc
cmp
dec
add
xchg
xlat
inc
push
test
and
sub
or
mov
adc
aaa
mov
mov
jmp
lods
mov
sbb
iret
inc
pop
(bad)
outs
mov
push
in
and
dec
pusha
dec
sbb
test
mov
scas
test
iret
and
int
aas
mov
lea
or
aam
push
(bad)
fmul
loop
or
(bad)
ja
js
jno
adc
adc
out
xchg
fs
cmp
out
jecxz
std
push
call
dec
das
pop
dec
ror
mov
arpl
pop
retf
sub
and
dec
xchg
jne
mov
fcmove
cs
sub
mov
iret
gs
and
test
bswap
hlt
add
pop
lods
arpl
ds
(bad)
xchg
retf
lods
aam
retf
imul
or
arpl
aaa
cld
inc
lods
in
xor
mov
xor
mov
addr16
int
add
mov
mov
in
movs
cmp
cdq
dec
mov
cmp
dec
mov
dec
dec
(bad)
(bad)
test
in
jb
xchg
nop
sub
sub
push
xor
mov
push
in
dec
sbb
int3
push
xor
jb
push
rcl
sub
mov
loope
div
rol
loope
sahf
xor
inc
and
sub
cmp
mov
inc
out
or
pop
mov
xchg
or
xor
inc
push
add
jae
mov
mov
test
iret
iret
lea
aas
int
rcr
das
(bad)
sbb
imul
xor
xchg
or
xor
ss
pop
xchg
scas
test
aaa
dec
mov
pop
add
dec
push
(bad)
mov
mov
shl
xchg
mov
sbb
mov
jle
add
in
retf
sub
mov
or
cdq
push
cmp
in
jmp
lds
mov
pop
fmul
retf
fcmovnbe
xchg
ja
leave
outs
xor
push
cmp
stc
lock
xchg
aad
push
nop
cmp
mov
in
cmp
push
scas
(bad)
push
cmp
stos
out
aaa
test
cmp
or
lds
jb
xchg
inc
xchg
jae
(bad)
xlat
jns
add
mov
xchg
add
pop
mov
sbb
in
mov
or
add
ret
add
xor
sbb
xchg
xchg
xchg
je
mov
add
pop
cmp
pop
icebp
jmp
rcl
mov
inc
(bad)
jmp
add
sbb
mov
xor
fwait
dec
xor
adc
xchg
inc
pushf
inc
jp
fstp
out
mov
iret
mov
mov
inc
test
and
dec
pop
fdivr
jle
jnp
ss
pop
mov
ss
cmc
cmp
push
push
xchg
es
cmp
(bad)
fbstp
out
mov
stc
sub
jmp
push
std
mov
inc
inc
jbe
pushf
jo
xor
(bad)
mov
(bad)
fistp
mov
loopne
cmp
fnstcw
mov
imul
sub
mov
cs
in
mov
mov
int
or
or
and
(bad)
std
in
(bad)
imul
ret
xchg
sbb
or
lds
stos
xchg
mov
and
int3
out
scas
sub
cmp
(bad)
add
loop
mov
faddp
push
inc
nop
es
arpl
sub
iret
pop
icebp
jg
pop
outs
xlat
push
ss
sub
sbb
enter
mov
sar
mov
(bad)
fcom
and
adc
and
icebp
inc
push
test
(bad)
dec
and
lahf
popa
cmp
imul
pusha
iret
pop
adc
rcr
add
cs
lahf
push
ja
std
fstp
out
xor
fs
test
sub
sub
ret
lahf
dec
loope
adc
xchg
mov
mov
movs
out
inc
sbb
cmps
fdivr
cmps
out
(bad)
sbb
aad
add
test
lods
(bad)
adc
xchg
inc
dec
push
mov
in
and
mov
jb
pusha
popa
sbb
sub
aas
in
mov
mov
pop
inc
jbe
inc
mov
div
pop
xor
mov
addr16
repnz
rol
add
jecxz
test
jae
lods
xor
add
mov
dec
mov
hlt
cli
xchg
in
cmps
jecxz
fisubr
cli
sub
push
push
shr
pop
mov
adc
mov
cmp
add
loop
jp
inc
mov
xor
sub
mov
fadd
xor
and
push
jl
dec
dec
cli
arpl
jle
imul
pop
das
clc
mov
sub
mov
mov
outs
sbb
or
and
scas
stos
cli
fldcw
mov
mov
jmp
rol
sub
mov
int3
test
sub
fdivr
div
addr16
int3
inc
push
xchg
xchg
jl
shr
bound
adc
mov
sbb
inc
push
cmp
aaa
mov
shl
pop
push
aam
mov
inc
stos
adc
test
mov
cmp
pop
pop
xchg
in
jmp
push
sbb
push
push
ret
xchg
popf
scas
dec
mov
mov
sbb
(bad)
mov
cmc
sbb
pop
leave
sub
push
and
adc
adc
test
call
cmp
xor
pop
out
jmp
inc
adc
xor
bound
neg
out
pop
xchg
icebp
xchg
sub
jmp
inc
and
mov
xchg
cmp
retf
and
shl
clc
inc
dec
add
test
sbb
lahf
and
ret
mov
sub
loope
pop
(bad)
cmps
push
into
and
dec
jne
out
xchg
daa
les
shr
mul
xchg
dec
push
mov
xchg
or
xchg
cli
sahf
jg
in
jge
ret
sbb
xchg
xor
jg
cli
bound
push
mov
dec
cmps
hlt
add
cmp
je
jnp
mov
call
fnstcw
push
push
cmp
into
in
sub
sub
aad
push
push
xor
cmps
sbb
test
repz
das
mul
hlt
imul
int3
into
stos
mov
inc
test
sbb
movzx
stos
dec
pop
xchg
cmp
mov
xchg
mul
mov
mov
outs
cs
or
dec
cmp
add
stos
and
xchg
aad
not
mov
add
add
int3
test
stc
xchg
pop
cmc
ds
ins
out
mov
in
jg
jo
pop
dec
sub
mov
ror
mov
(bad)
fs
mov
pop
xchg
add
(bad)
xlat
mov
out
gs
js
mov
ds
or
(bad)
sahf
imul
clc
out
jg
cmc
(bad)
ds
mov
mov
sbb
pop
pop
jmp
lock
jecxz
ds
les
enter
stos
ret
test
scas
jmp
(bad)
mov
psubsb
cmps
mov
ds
and
mov
dec
sub
shl
in
mov
or
and
stos
jg
imul
aaa
jecxz
cdq
inc
dec
outs
add
data16
cwde
in
bound
pop
mov
sti
jg
mov
in
fidivr
sbb
sub
cmp
mov
jp
dec
cmp
push
outs
push
js
(bad)
rcr
(bad)
jno
in
or
push
dec
add
sub
cmp
inc
or
cmp
outs
enter
push
mov
jmp
sub
stos
inc
or
and
retf
in
popa
outs
(bad)
fisttp
mov
mov
ins
jbe
push
mov
call
mov
faddp
xchg
(bad)
sbb
mov
sub
xor
mov
shl
xor
retf
and
mov
add
mov
mov
push
mov
(bad)
imul
sahf
aaa
mov
push
es
sub
and
and
fcmovnb
ins
in
std
loope
int
dec
inc
xor
lds
adc
mov
xor
call
nop
cmp
sbb
add
int
jnp
fdiv
xchg
mov
push
pop
imul
mov
add
rdtsc
out
btc
fcomi
addr16
xchg
or
xor
mov
icebp
adc
push
and
cmps
imul
int
xor
jo
bound
dec
dec
cmp
pop
inc
inc
add
add
out
ds
mov
mov
inc
inc
or
cmc
int3
fstp
rcl
fisttp
adc
push
dec
adc
imul
xor
dec
mov
sti
add
push
pop
inc
dec
lods
jle
loope
pusha
imul
stc
out
mov
jbe
mov
rol
add
sub
cdq
repnz
jp
(bad)
xlat
imul
mov
outs
(bad)
mov
sub
outs
push
into
in
mov
mov
or
(bad)
test
pop
mov
push
and
and
inc
push
jo
(bad)
sahf
(bad)
fdiv
clc
js
cs
fidivr
repnz
xor
stc
jp
cld
loope
mov
mov
mov
ins
hlt
aaa
inc
arpl
pop
nop
push
xchg
loop
push
mov
imul
jge
aas
xchg
in
popf
fiadd
sub
mov
jmp
into
aam
jg
ret
repz
mov
dec
(bad)
cs
scas
and
pop
pop
mov
cmp
and
cdq
xchg
ret
daa
mov
je
fstp
leave
jae
jge
test
mov
jge
rcl
nop
xor
push
out
mov
movs
lea
jge
iret
push
call
dec
sbb
cmc
or
inc
and
pop
fcom
inc
outs
cs
std
scas
fidivr
lock
fs
push
and
icebp
test
xor
fsubr
jae
mov
test
xchg
fsubr
inc
cmp
arpl
pop
test
sbb
call
push
dec
sbb
test
xchg
fimul
jne
mov
jnp
(bad)
jge
out
cmp
ins
retf
leave
xor
inc
pop
sub
rcr
das
ret
adc
js
jp
adc
xor
push
mov
mov
mov
pusha
fist
pop
out
mov
ss
and
jne
jnp
in
add
imul
jnp
mov
push
sub
pop
xor
je
(bad)
out
(bad)
sub
mov
mov
stos
sbb
pop
aas
mov
rol
dec
aas
out
push
retf
pop
aad
inc
and
jnp
pop
shl
jl
add
ret
loop
xor
ins
in
cmps
jmp
mov
fiadd
nop
xchg
or
movs
imul
sub
jg
int3
ret
add
xchg
test
js
jne
fistp
int
hlt
mov
xchg
pusha
pop
pop
pop
sub
add
ret
(bad)
sub
aam
fnstenv
xchg
(bad)
in
lea
sub
fisttp
bound
and
ss
mov
int3
mov
inc
xchg
lds
les
or
fcmovnu
sub
sub
pop
mov
in
jp
xchg
lds
mov
cmps
adc
xor
mul
cmp
mov
xor
ret
leave
and
and
cmp
pusha
dec
mov
inc
sub
loop
sub
(bad)
lods
or
ret
sbb
jge
inc
out
push
mov
in
sub
mov
les
into
add
out
or
xchg
stos
add
and
inc
xchg
rcl
jecxz
aam
retf
adc
ja
mov
mov
mov
ins
repz
clc
aad
fwait
jo
jmp
dec
xlat
gs
fsub
dec
and
mov
or
push
inc
test
inc
jmp
mov
imul
dec
add
jne
mov
mov
xor
bound
adc
xor
mov
adc
fcmove
ret
push
mov
mov
pop
(bad)
jmp
dec
adc
test
dec
shl
or
stos
push
daa
or
loop
pop
leave
jns
les
gs
dec
in
outs
jb
sub
in
jns
aaa
lods
gs
movs
add
cmp
mov
cli
les
jle
out
jl
int3
sbb
jg
retf
jo
arpl
ss
mov
push
call
mov
jp
xor
inc
dec
cmc
dec
mov
lods
enter
cli
(bad)
fcom
iret
out
cmp
mov
popa
inc
daa
out
shr
(bad)
push
adc
adc
adc
mov
mov
pop
lea
lea
adc
retf
lock
stos
jge
ds
dec
mov
mov
fwait
mov
mov
and
pop
and
jg
xchg
pop
xchg
scas
mov
cmp
sbb
sub
jp
push
add
test
div
mov
dec
fst
cmc
and
sti
out
imul
mov
or
jne
xor
sbb
xchg
retf
stos
add
lahf
push
repnz
int
mov
xor
mov
sub
mov
push
scas
inc
xchg
cmp
imul
ror
mov
jo
out
aaa
pop
out
(bad)
or
or
dec
adc
sahf
cmp
(bad)
rol
in
(bad)
and
push
ficomp
dec
xchg
push
int3
into
adc
ja
mov
inc
add
add
daa
lods
mov
mov
imul
xchg
push
push
push
aam
sbb
rcl
imul
fmul
outs
ins
gs
inc
push
sbb
pop
push
xor
call
je
mov
bound
mov
pop
lods
mov
add
test
popa
in
popf
inc
lods
vcvttps2dq
and
mov
mov
dec
stos
xor
(bad)
sar
jge
test
fucomp
mov
mov
mov
sti
ja
add
mov
pop
mov
xor
lock
push
mov
ret
dec
sub
imul
aas
cmc
push
fidivr
std
das
iret
mov
push
lea
in
jp
scas
scas
lahf
pop
ret
jg
jo
push
jo
cs
or
daa
dec
pop
loope
call
jb
daa
pop
cmp
push
mov
das
scas
pop
movs
or
sbb
cmp
xchg
retf
add
cld
jle
adc
pop
pop
add
jge
mov
mov
and
cmps
mov
and
aad
loope
push
push
stc
dec
retf
xchg
retf
xor
pop
loopne
sub
add
pop
rcr
ror
jne
lods
fcomp
xor
dec
cmc
call
add
and
inc
adc
mov
pop
pop
sub
add
inc
jmp
sbb
and
add
(bad)
retf
movs
fidiv
add
adc
adc
lds
jno
add
(bad)
outs
adc
pop
pop
add
jecxz
dec
jp
hlt
mov
or
leave
jmp
not
dec
fcom
neg
push
cmp
jmp
ss
jnp
jnp
and
sahf
jne
xchg
cmps
push
xchg
jo
aad
iret
push
sub
or
or
xchg
push
or
inc
fldcw
sub
pop
fidivr
jecxz
mov
jo
xchg
sbb
add
out
stos
nop
(bad)
ins
(bad)
and
push
sbb
add
mov
fidiv
jecxz
pop
cli
mov
xchg
jnp
mov
in
or
in
xor
jp
cmp
jl
xor
mov
mov
cmps
cwde
dec
inc
rol
sbb
rcl
sub
sbb
lea
imul
mov
sbb
mov
leave
ss
pop
outs
pop
retf
adc
xor
div
pop
push
dec
dec
add
and
xlat
add
pop
mov
call
adc
bts
mov
push
xchg
icebp
clc
mul
cmp
lea
lahf
mov
ds
arpl
fldenv
iret
jo
xchg
jb
adc
ret
sbb
movs
jne
pop
mov
mov
inc
loopne
add
cmps
sub
fsubrp
inc
sbb
or
ja
lods
push
pop
lds
sub
outs
xor
loopne
clts
(bad)
data16
mov
cmps
jmp
cmp
add
jmp
movs
sub
lahf
push
add
(bad)
dec
jecxz
add
jg
movs
leave
mov
mov
loope
cmps
push
ds
(bad)
out
and
or
mov
test
sbb
xchg
sub
jb
ds
mov
cmps
xchg
dec
push
retf
or
add
add
and
in
sub
or
push
stc
inc
scas
clc
aas
loop
jl
inc
in
add
inc
aaa
push
or
push
test
bound
inc
add
push
shl
xor
sbb
dec
aas
lahf
fstp
pop
sbb
cmp
add
jl
shl
js
hlt
popa
mov
test
pop
dec
in
add
and
xchg
sub
enter
pusha
cs
rcr
jmp
or
dec
or
or
or
ret
das
jb
mov
cli
out
stos
frstor
fld
mov
sub
or
jp
stc
loop
add
mov
mov
cmp
movs
call
imul
xor
mov
jb
pop
sahf
outs
in
pop
leave
fistp
fstp
mov
outs
hlt
enter
cmp
sbb
mov
inc
movs
mov
push
pop
sub
retf
push
push
sbb
popf
mov
fisubr
inc
rcr
bound
pop
rcr
xchg
in
in
mov
pop
sbb
lahf
mov
repnz
(bad)
pop
js
imul
jle
xchg
loopne
(bad)
push
or
jmp
rcr
jecxz
sub
jmp
into
aaa
xchg
add
int3
jmp
add
dec
xchg
popf
cmp
cld
inc
out
dec
into
push
add
ss
cmc
mov
shl
movs
pop
repnz
movs
inc
mov
xchg
mov
inc
jmp
lahf
pop
dec
mov
imul
test
jo
ss
xchg
out
cmps
push
and
je
jnp
dec
fmul
cmp
adc
pop
cmp
push
pop
jne
shr
bound
pop
cmp
pop
lock
mov
inc
add
jno
adc
lock
mov
scas
cmp
pop
fwait
pop
or
inc
add
xchg
xor
ja
test
fstp
push
pop
and
cmp
aad
jbe
rcl
inc
adc
cmc
and
or
test
mov
mov
jno
cs
add
inc
add
cmps
add
push
mov
jmp
pop
das
(bad)
aas
pop
jle
inc
push
sbb
mov
test
outs
clc
js
cli
xchg
mov
push
add
and
retf
adc
cli
jnp
mov
xchg
loop
xchg
cmp
ret
es
test
sbb
push
cmp
je
movs
lahf
sbb
dec
pop
add
in
iret
cmps
pop
push
cmps
add
xlat
movs
ud1
inc
test
or
(bad)
pop
pop
add
repnz
in
imul
test
movs
ds
xor
inc
dec
lods
addr16
mov
ror
fwait
push
xchg
pop
hlt
popa
jno
jecxz
(bad)
fisttp
(bad)
test
cdq
inc
dec
movs
push
push
and
add
add
lods
retf
jae
add
sbb
pop
xchg
dec
or
adc
jecxz
cmps
dec
jp
mov
inc
xor
push
gs
and
dec
or
mov
inc
arpl
lar
jnp
add
push
(bad)
sub
sbb
rol
xor
icebp
pop
xchg
cmp
mov
xor
loope
or
int
addr16
jmp
xor
sub
xor
xchg
sbb
mov
inc
pop
sub
imul
mov
rcr
cmp
rcl
std
pop
sub
jne
push
aad
lahf
cmps
ucomiss
ins
jmp
or
fsub
cwde
cmp
imul
cmp
jmp
sub
mov
inc
icebp
adc
xor
jle
cmp
fsub
dec
sub
xchg
xchg
dec
pop
jge
mov
in
sbb
dec
imul
shr
pop
sbb
xchg
cdq
xor
pop
xchg
jg
mov
jge
inc
cwde
movs
je
mov
cli
or
rcr
jae
xchg
cmp
shl
js
jno
inc
jecxz
test
jge
push
push
dec
push
or
adc
cmc
jo
sbb
mov
add
pop
pop
xor
cmp
dec
inc
push
inc
out
xor
sbb
xchg
xchg
icebp
je
shl
pusha
hlt
in
test
je
test
test
stos
sub
sbb
mov
js
jmp
dec
popa
mov
(bad)
jp
leave
aad
jp
add
push
lds
ror
aaa
es
adc
mov
ret
mov
cmp
test
mov
imul
cmp
sbb
(bad)
and
dec
xlat
icebp
xor
imul
ds
repz
xor
cmp
pop
stos
mov
jmp
inc
push
aam
out
in
jmp
mov
cmp
jmp
mov
aad
dec
or
sbb
mul
inc
les
ret
xor
mov
in
add
dec
and
sub
sub
or
xchg
cmp
ss
stos
jge
jecxz
cmp
mov
cmp
pop
mov
push
repnz
jp
in
jl
or
and
fs
aas
sub
pop
inc
iret
cmp
fdivr
xor
outs
es
sub
test
imul
and
shl
pop
lock
sbb
cmps
jecxz
ins
sbb
popa
test
push
xor
jae
imul
nop
call
dec
or
push
lea
stc
jp
cmp
jnp
out
popa
lods
stos
leave
movs
push
and
cmps
xor
jle
outs
hlt
(bad)
jno
mul
in
fwait
add
neg
pop
or
cld
xor
jg
lahf
inc
nop
rcr
add
sbb
push
call
cmp
mov
xlat
rol
paddusb
ror
fnop
adc
addr16
pop
xor
jo
dec
or
shr
repz
inc
push
leave
sub
retf
sar
fs
pmulhuw
push
mov
es
int
inc
dec
mov
sub
xchg
sahf
adc
dec
cmp
cmc
add
add
push
jo
xor
push
push
xchg
pushf
sub
in
xor
scas
add
adc
xchg
pop
mov
sbb
das
push
mov
sbb
mov
sbb
cmp
pusha
inc
mov
sti
pop
jae
and
mov
xchg
push
add
rcr
pop
mov
xchg
in
sbb
and
retf
mov
scas
xchg
in
in
sbb
jne
sub
mov
pop
jge
push
xchg
mov
cmp
lods
inc
xchg
xor
pop
xchg
dec
out
cmp
mov
in
and
adc
mov
inc
jno
sahf
cmp
sub
dec
dec
aam
jp
call
cmps
fwait
enter
dec
mov
mov
ins
ins
jmp
push
ret
jg
stc
jns
arpl
pop
ret
and
test
addr16
(bad)
pop
fucomp
out
cmp
in
into
fidiv
loopne
and
daa
dec
mov
sbb
push
push
adc
or
(bad)
cli
je
pop
rol
dec
inc
add
jecxz
ins
inc
test
jg
pop
xchg
setne
aam
jge
fnstsw
sti
cmp
and
jl
pop
mov
sti
or
(bad)
mov
jg
jmp
jge
cwde
lea
lods
in
push
in
inc
(bad)
pop
icebp
iret
bnd
ds
push
cmc
aaa
daa
xchg
in
outs
hlt
jecxz
jnp
(bad)
aam
nop
jmp
mov
aas
xor
cld
mov
in
scas
ret
fwait
nop
dec
clc
push
inc
mov
shl
dec
lock
xor
inc
mov
in
daa
jo
(bad)
xchg
in
stos
data16
loop
lea
xor
shl
dec
imul
push
sub
push
stc
cld
test
pop
jb
inc
jne
dec
push
repz
add
mov
pop
(bad)
fldenv
test
cmc
mov
and
lea
push
inc
xchg
push
aaa
sub
call
add
and
pop
test
push
add
lods
xor
nop
fistp
movs
jns
add
add
js
out
int
(bad)
iret
adc
push
push
test
and
adc
mov
psubusw
xlat
(bad)
xchg
mov
addr16
jmp
inc
stos
repz
lock
bnd
je
mov
outs
xor
inc
xchg
test
push
xchg
mov
cld
jnp
jl
jo
jp
sub
icebp
inc
push
clc
cmp
sub
sub
clc
mov
sub
cmc
jg
xor
mov
push
and
repnz
inc
mov
cld
pop
cld
stos
mov
mov
add
pop
mov
sub
out
add
xor
cmps
enter
and
push
push
aad
and
pop
or
sbb
test
fisttp
jbe
pop
and
xchg
js
pop
mov
mov
jecxz
or
das
(bad)
clc
scas
clc
mov
nop
call
test
lods
dec
jmp
ficom
xchg
test
(bad)
pop
sub
pusha
je
lock
sbb
xchg
std
cmp
bound
xchg
and
(bad)
popf
push
leave
cmp
stc
and
sbb
rcl
push
jle
mov
not
lahf
icebp
jbe
xchg
test
and
(bad)
push
or
cmp
mov
xlat
imul
push
xchg
enter
cmp
dec
jl
pop
retf
xor
xchg
pop
das
xlat
pop
push
mov
jbe
neg
and
mov
xchg
daa
call
xchg
pushf
dec
lea
call
xchg
movs
dec
adc
cli
xchg
jb
rcr
cmp
ret
stc
inc
lahf
mov
push
adc
add
jecxz
out
cmp
retf
pop
push
dec
es
ins
sub
js
inc
push
xchg
inc
mov
mov
add
shl
ss
jmp
push
pop
test
repz
mov
pop
push
test
neg
xchg
push
and
test
mov
sub
sub
nop
inc
inc
aaa
not
jns
outs
xchg
aad
mov
push
hlt
std
mov
iret
clc
cmp
mov
sub
sbb
or
and
cld
mov
jmp
icebp
pop
mov
and
xor
sahf
push
xchg
movs
mov
xor
or
sub
push
aad
rcr
sbb
mov
jl
cmp
mov
mov
imul
repz
sti
jp
push
pusha
mov
into
add
pop
inc
xchg
push
sub
fdivr
mov
ins
pop
mov
jb
jmp
repz
dec
je
and
stc
jg
cld
clc
push
xacquire
retf
dec
dec
dec
test
sub
sub
xor
cld
cmp
sbb
add
test
adc
pop
call
mov
int3
mov
test
or
add
cmps
xor
sbb
outs
push
leave
hlt
or
push
dec
in
outs
cmp
sti
test
cmp
xchg
popa
dec
adc
pop
(bad)
cmc
test
cmps
jp
jg
mov
xchg
xchg
dec
ror
or
ror
retf
mov
aam
push
pop
pop
add
inc
outs
mov
mov
lea
adc
or
hlt
inc
mov
or
les
push
cld
jmp
mov
sahf
dec
lds
(bad)
xchg
mov
xchg
aas
and
aad
dec
or
pop
mov
cmc
mov
fsub
mov
aad
fxch
cmps
cwde
pop
sub
rcl
xor
sbb
aas
mov
cdq
rcr
cs
jmp
ins
in
test
xchg
dec
xor
imul
push
push
test
xchg
cld
stc
addr16
cmp
imul
and
jo
and
jp
mov
mov
push
aam
inc
stos
jp
xchg
cmp
out
je
out
sbb
bnd
dec
sbb
push
aad
scas
cmp
aam
(bad)
dec
leave
cmp
mov
mov
test
(bad)
mov
push
fnstsw
jb
fadd
outs
mov
add
inc
pop
cmp
ror
xlat
adc
dec
push
push
inc
mov
into
mov
pusha
adc
xor
mov
imul
je
retf
pop
lea
push
sub
xchg
aam
mov
out
(bad)
pop
mov
jl
dec
add
enter
ins
sbb
out
pop
mov
push
dec
mov
xor
lea
jle
in
fist
(bad)
lock
inc
xlat
fstp
jp
arpl
(bad)
jbe
(bad)
xor
movs
repnz
scas
sub
movs
gs
lahf
sbb
lahf
popa
or
mov
adc
pop
or
test
rol
outs
dec
mov
lods
in
push
jg
ds
cmp
bnd
adc
push
mov
push
mov
ds
ss
shl
mov
jecxz
dec
mov
rol
test
jl
mov
sbb
retf
data16
les
xor
mov
sub
pop
leave
cdq
add
shl
xchg
jg
ss
pop
sti
inc
ins
outs
and
inc
or
jno
jns
out
push
gs
add
(bad)
(bad)
jae
push
call
dec
adc
and
clc
adc
(bad)
sub
pmovmskb
mov
fdivp
scas
and
pop
mov
cmp
in
jmp
das
jmp
xor
inc
cmp
ret
add
rcl
cmp
push
push
inc
push
mov
shl
lea
xor
inc
pop
fisttp
inc
mov
and
jno
movs
xor
mov
xlat
retf
mov
icebp
or
add
out
jg
inc
sub
ins
frstor
shr
and
icebp
sub
daa
in
(bad)
lahf
arpl
mov
jo
inc
sbb
psllq
or
je
adc
add
dec
imul
(bad)
mov
dec
mov
cwde
jmp
sti
xchg
es
sahf
push
test
popa
jle
js
inc
add
ret
add
pop
fcomp
jmp
mov
ret
loopne
imul
add
ret
cmc
cmps
lods
cmp
call
dec
mov
imul
cmps
jp
repnz
repz
push
fmulp
mov
cmps
sahf
pop
sub
or
leave
sub
pop
inc
add
movs
ins
inc
mov
aaa
mov
(bad)
icebp
jp
mov
inc
push
inc
push
inc
push
lods
sbb
dec
pop
fisubr
arpl
imul
mov
lea
cmp
push
enter
icebp
add
sbb
ds
xchg
in
xor
cmp
repz
push
data16
enter
lds
daa
cmp
and
mul
pop
repnz
pop
push
xchg
and
cmp
pop
mov
sbb
imul
fist
retf
outs
mov
dec
mov
icebp
js
dec
ins
lods
retf
inc
push
repnz
xchg
push
shr
je
mov
and
imul
(bad)
mov
pop
(bad)
mov
and
jns
mov
cmp
dec
xchg
dec
outs
or
pop
and
xchg
jp
pop
daa
mov
cmps
fcomp
fstp
mov
mov
xor
(bad)
mov
cmp
int
bound
push
pop
cmp
and
push
pusha
mov
stos
inc
sbb
lds
inc
cmp
in
pop
xchg
fcom
cmp
outs
or
push
test
xchg
inc
dec
movs
jl
xor
mov
clc
pop
mov
lds
test
sub
(bad)
stc
fst
cs
pop
jmp
add
push
fcomi
cmp
and
xor
pop
mov
in
enter
loope
outs
adc
push
or
enter
and
and
inc
push
add
test
inc
mov
stos
cmps
xchg
pop
movs
test
and
xchg
ins
dec
div
lahf
leave
idiv
mov
aas
and
add
add
outs
cmps
mov
adc
or
jo
stc
cli
out
cdq
fld
mov
sar
aam
add
pop
mov
in
dec
rcl
lods
stos
and
inc
retf
std
ins
hlt
cld
jge
sbb
push
and
add
mov
and
cmp
add
push
fwait
movs
enter
mov
aas
xchg
in
push
fcmovbe
push
jno
mov
and
arpl
dec
shl
or
mov
lock
rcl
lds
mov
je
push
pop
pop
int3
pop
inc
sub
loopne
jmp
in
push
mov
add
adc
in
and
int
xchg
loope
mov
stos
nop
add
(bad)
fild
and
call
rol
cmps
fcmovnbe
push
aad
stos
mov
sbb
shl
aas
mov
sti
pop
mov
adc
sbb
xor
jp
int
enter
ins
mov
je
mov
hlt
imul
xor
mov
push
push
popf
sub
popa
test
(bad)
sahf
loop
aam
ror
pop
je
push
arpl
xlat
mov
sub
sub
fmul
std
popf
add
sbb
jb
(bad)
sbb
inc
mov
xor
cmp
sbb
ficom
(bad)
adc
dec
push
dec
push
mul
cli
sahf
outs
std
jg
fnstenv
ret
daa
div
aad
call
add
adc
aaa
cmp
and
xchg
into
addr16
dec
sbb
cmp
adc
xor
pop
xor
cmp
inc
sbb
cli
inc
clc
fadd
idiv
mov
mov
and
lea
iret
test
aam
mov
mov
ret
xor
add
push
mov
jp
mov
add
jl
pop
sub
repz
mov
mov
sub
mov
inc
xor
xchg
fdiv
mov
dec
or
enter
aaa
ss
mov
rol
sbb
aas
xor
jbe
stos
cmp
inc
scas
dec
pop
aam
jg
mov
retf
(bad)
cmp
push
cmp
repz
out
sbb
push
in
je
out
outs
add
aas
sar
fisubr
mov
lahf
push
xchg
movs
mov
jecxz
jg
pcmpgtd
movs
push
cmp
push
pop
pop
jmp
pop
div
or
pop
fmul
cmps
pop
push
(bad)
fist
hlt
push
fisttp
clc
call
adc
jg
(bad)
mov
not
sbb
out
out
idiv
mov
pop
jmp
push
jb
pop
test
ins
out
sub
retf
cmp
xchg
lods
clc
mov
sub
mov
pop
lds
jle
add
xchg
ins
ins
sar
les
mov
outs
loope
movs
(bad)
jb
(bad)
pop
and
push
xchg
hlt
repnz
xchg
cmp
das
test
push
jae
and
test
cmp
jmp
rcl
leave
and
loopne
aam
push
repnz
mov
jge
cmps
fnstsw
test
and
stc
addr16
mov
in
pop
xchg
mov
outs
push
call
push
mov
cs
mov
jae
(bad)
sbb
sbb
mov
push
mov
in
jmp
pop
mov
in
mov
add
jecxz
pushf
xchg
lds
in
aas
xchg
dec
cmp
fdivp
(bad)
jo
mov
test
mov
mov
mov
dec
xlat
movs
je
add
mov
dec
mov
(bad)
inc
add
ret
fldcw
lds
push
ins
sahf
div
cld
cmp
enter
jns
nop
mov
sub
stos
mov
cdq
xor
mov
push
and
add
test
pusha
mov
div
mov
lods
ds
xchg
push
sub
cmp
adc
rcr
push
test
data16
mov
mov
movs
adc
ret
mov
pop
jo
aaa
js
push
pop
ret
jb
test
adc
enter
adc
sti
packssdw
or
cld
jbe
add
mov
push
pop
add
je
cli
push
std
pop
fldz
adc
inc
arpl
or
jle
jne
in
ficom
push
and
sar
cmc
xchg
mov
fnstenv
xor
(bad)
sbb
iret
repnz
(bad)
cdq
jge
imul
fstp
adc
inc
xor
xchg
inc
add
push
out
mov
and
sbb
stos
ins
outs
leave
and
jge
xor
dec
adc
(bad)
data16
inc
popa
push
mov
adc
push
push
push
add
hlt
scas
push
mov
fidivr
jno
mov
cld
pop
std
outs
outs
movs
inc
adc
inc
std
jge
cmps
cld
push
dec
dec
sub
stos
sub
pop
jo
push
inc
or
sub
mov
xchg
cmp
pusha
imul
leave
fsub
dec
sbb
inc
jp
jl
stos
int
repnz
cmps
mov
retf
push
test
mov
sbb
imul
sub
dec
call
test
adc
bnd
sub
test
jo
mov
(bad)
in
push
movs
inc
fisubr
xor
enter
hlt
xor
jmp
out
cmc
lds
mov
xchg
mov
jae
mov
cmp
fdivr
sbb
iret
mov
lods
push
js
js
mov
call
xchg
mov
dec
push
dec
pop
stos
(bad)
or
js
cmp
iret
inc
outs
push
fidiv
jno
scas
gs
push
xor
bound
pop
or
scas
fcmovnu
sbb
sub
cmp
mov
ret
inc
push
jns
mov
xchg
jg
mov
mov
adc
sub
daa
sti
int3
jnp
retf
sar
and
dec
mov
dec
sub
or
mov
enter
cmp
mov
add
dec
pop
sbb
imul
arpl
not
and
rcl
addr16
mov
loop
sub
push
xor
push
xchg
mov
mov
and
sub
inc
add
popf
adc
xor
push
pushf
ds
loope
addr16
xchg
fst
jb
pop
inc
std
cmp
call
sub
cmp
das
cmp
dec
sub
cdq
jl
dec
add
mov
jmp
jo
mov
push
and
pop
ins
pop
mov
pop
inc
xor
or
jbe
test
les
rol
jmp
fcomp
in
xchg
sub
aaa
xor
inc
sbb
pop
lea
mov
jecxz
mov
pushw
mov
push
imul
and
adc
js
inc
outs
arpl
imul
stos
shr
(bad)
imul
add
cmps
aam
cmp
add
mov
inc
imul
fstp
xchg
cmps
test
movs
xchg
inc
mov
mov
rsqrtps
mov
fistp
xchg
shl
aaa
push
inc
push
and
fiadd
push
jp
out
cwde
in
cmp
fisub
mov
jmp
xor
jno
push
push
push
mov
stos
fstp
nop
dec
push
push
adc
arpl
mov
push
dec
sub
dec
sbb
sbb
pusha
les
dec
pusha
push
lods
and
jo
cs
aaa
mov
ret
mov
or
mov
scas
xlat
pop
jae
(bad)
sti
mov
mov
xchg
lea
mov
push
(bad)
push
push
push
imul
cmc
pop
(bad)
inc
retf
push
dec
icebp
cdq
or
xor
mov
not
ret
push
inc
xor
mov
iret
dec
mov
std
mov
cwde
mov
xchg
movs
jne
imul
adc
adc
nop
leave
and
adc
test
ret
and
jg
fcomp
adc
add
retf
and
test
std
mov
sti
fdivrp
adc
mov
outs
ficom
imul
int3
pushf
push
mov
ins
mov
add
mov
fdivp
loopne
dec
iret
out
mov
jl
hlt
pop
mov
mov
xor
push
cmp
inc
push
lahf
dec
cmp
outs
ins
push
dec
fcom
fcom
xchg
push
adc
push
pop
mov
fild
sti
push
dec
lock
pop
repz
ins
cld
shr
sub
xchg
add
cmp
(bad)
mov
in
push
(bad)
adc
(bad)
movs
test
ja
sti
pop
test
push
push
mov
mov
out
das
fdivr
into
fimul
add
call
dec
inc
push
inc
cld
adc
mov
popa
inc
xlat
inc
imul
jb
imul
bound
xchg
and
push
xchg
ret
lods
in
test
icebp
inc
loope
cmp
clc
mov
xchg
mov
adc
push
mov
test
neg
fdiv
jmp
xchg
movs
mov
push
cli
mov
xor
call
dec
call
lods
adc
cld
ror
scas
mov
(bad)
xchg
ret
adc
jnp
inc
xchg
and
and
mov
mov
cli
inc
hlt
xor
mov
lods
imul
jmp
sbb
inc
rcr
cmp
(bad)
scas
push
pop
push
test
dec
dec
cmp
cmp
gs
nop
je
aaa
sti
sbb
sbb
leave
mov
adc
pop
in
sbb
cs
mov
sti
mov
jecxz
xlat
mov
(bad)
push
iret
sub
cmp
add
leave
cmc
pop
lea
add
(bad)
and
mov
mov
aam
inc
aam
and
dec
mov
sbb
test
mov
mov
push
mov
shr
or
lods
xchg
lahf
iret
mov
mov
ins
int3
pop
aad
xchg
pop
xchg
jmp
xor
push
dec
aas
aad
(bad)
dec
jb
lds
(bad)
push
push
push
adc
jae
aas
mov
pop
xchg
dec
and
mov
pop
jmp
in
mov
push
xchg
(bad)
rsqrtps
push
gs
retf
shr
inc
mov
sbb
int
cld
xadd
in
out
cmp
add
mov
jmp
jbe
and
scas
js
loopne
cmc
inc
jg
out
int
bound
fcomp
lds
adc
imul
push
jbe
mov
xor
pop
cmps
hlt
xchg
test
and
xchg
add
iret
in
mov
imul
sub
cmp
or
add
or
arpl
inc
push
jno
icebp
dec
mov
mov
retf
pop
dec
push
sub
xchg
sub
fwait
in
in
and
pop
ss
inc
mov
ret
lods
jmp
lods
in
jae
pop
nop
(bad)
pop
xchg
cmp
push
inc
repz
xchg
mov
sub
test
dec
mov
cld
sub
retf
test
xor
test
nop
add
mov
scas
jge
cmp
add
popf
push
push
data16
mov
and
pop
xchg
rcr
stos
jae
add
call
mov
inc
dec
jge
cmp
add
neg
addr16
lahf
push
pop
out
pop
xchg
inc
jne
icebp
popa
xbegin
add
jbe
jecxz
js
adc
repz
aas
dec
iret
cli
(bad)
neg
inc
sbb
mov
mov
lahf
scas
pop
inc
jg
aas
push
mov
das
push
add
fsubr
inc
ror
inc
adc
lahf
jmp
lea
pop
dec
test
jg
jp
ss
and
xchg
shr
shl
sbb
mov
pop
xchg
sub
mov
push
daa
aam
in
xlat
cmp
loope
je
mov
(bad)
rol
pop
or
push
dec
sub
push
imul
(bad)
leave
mov
mov
fwait
aaa
inc
mov
(bad)
gs
in
jecxz
mov
bound
bound
dec
adc
das
js
mul
dec
xor
xchg
pop
mov
sbb
mov
inc
jno
add
mov
inc
jg
repz
sbb
dec
ror
aaa
cs
push
int
aam
ins
mov
gs
dec
xchg
lds
mov
sbb
rcl
cmp
jbe
in
mov
add
out
cdq
loop
push
sbb
rcl
(bad)
nop
iret
fistp
push
jnp
adc
pop
ins
jae
push
fsubp
pop
xchg
add
adc
dec
test
movs
add
pop
loopne
sar
cmps
jne
xchg
mov
jp
sbb
push
inc
push
cmps
sar
mul
mov
dec
mov
jo
jb
inc
xchg
xor
pop
aam
call
xchg
scas
xchg
dec
fsubr
fcomp
push
push
dec
inc
and
sub
and
imul
xchg
pop
outs
cmp
popa
loop
xchg
js
in
inc
fs
fidivr
pop
fwait
not
push
pop
nop
add
dec
jp
mov
in
inc
lea
dec
es
sbb
sbb
fisub
inc
or
adc
sar
add
mov
mul
icebp
sbb
pop
in
jp
xchg
data16
daa
jmp
and
cmc
(bad)
or
cdq
sbb
sbb
addr16
pushf
jp
bswap
enter
mov
dec
inc
sub
dec
adc
push
xchg
inc
sub
push
aas
sub
mov
pop
popa
cmp
fsubp
stos
fcmovnu
test
pop
inc
imul
ret
cmp
mov
stos
add
sub
retf
xor
mov
jg
mov
shl
lods
push
rol
xor
jmp
int
jmp
xchg
mov
(bad)
fsub
mov
ror
dec
and
jecxz
retf
(bad)
mov
jae
shr
sbb
or
sub
in
mov
mov
sbb
add
adc
push
inc
(bad)
sbb
mov
pop
loop
dec
dec
adc
lds
xor
repnz
cdq
push
aam
lds
cs
push
mov
add
pop
fist
and
mov
mov
pop
(bad)
xchg
repz
cmp
aam
and
(bad)
inc
or
imul
sub
and
cdq
dec
data16
hlt
fstp
dec
xor
aad
mov
rcl
in
mov
mov
add
mov
(bad)
movs
imul
mov
sub
mov
dec
addr16
nop
stc
mov
aaa
cs
and
stc
out
mov
push
push
retf
mov
fistp
leave
adc
sub
push
ds
cmps
stos
(bad)
in
adc
xor
bound
pop
fprem1
lahf
mov
xor
sar
cmp
pop
addr16
cmps
in
stc
mov
jns
fcom
cmps
jp
and
gs
(bad)
mov
bnd
jnp
ins
and
pop
pushf
mov
int3
hlt
sti
mov
mov
ffreep
adc
or
aas
rcr
int3
cmp
js
adc
jo
in
sub
push
add
rcl
js
ror
fdivr
std
gs
jno
loope
inc
xchg
jmp
mov
mov
mov
dec
cwde
(bad)
fs
rcl
dec
dec
push
sbb
lods
mov
je
rol
out
sub
mul
cdq
sbb
ret
jae
(bad)
repnz
arpl
movs
ss
jge
out
jb
xchg
lock
pop
stc
cmp
sbb
movs
push
sub
cdq
adc
movs
mov
imul
push
jmp
mov
lahf
fs
dec
mov
dec
push
aam
add
xchg
js
je
mov
add
pusha
add
bndldx
les
sahf
xchg
ss
push
adc
scas
add
aas
movs
xchg
in
and
xchg
test
sub
cld
aas
cmp
call
aam
add
shl
and
jmp
inc
and
push
push
push
mov
cmp
jle
adc
mov
xchg
dec
stos
mov
mov
inc
add
jmp
cmp
test
mov
shl
dec
bnd
inc
icebp
mov
pop
mov
push
push
adc
in
pop
div
pop
xchg
sub
lds
sub
iret
div
push
mov
or
jp
lock
xchg
pop
dec
pop
mov
sbb
sub
dec
in
dec
and
pop
fisttp
pop
adc
neg
push
bound
cmps
iret
std
sahf
adc
mov
lea
dec
jmp
jo
cld
cli
adc
sub
rcr
jmp
xchg
imul
shl
or
jle
sti
sub
outs
mov
sbb
fadd
add
out
rcl
mov
and
and
test
std
mov
stc
xchg
inc
inc
add
pop
rol
int3
out
jecxz
xor
cli
dec
jmp
fimul
loope
neg
xchg
cmp
imul
scas
inc
mov
sub
mov
repnz
popf
sub
bnd
sbb
shl
aam
dec
mov
xor
stos
movs
inc
pop
mul
outs
shl
jbe
test
dec
push
cwde
or
sbb
iret
push
mov
push
aaa
sub
les
lods
pop
push
stos
xor
push
mov
(bad)
pusha
call
pop
xchg
icebp
ror
xchg
mov
(bad)
in
cmps
xchg
aaa
xor
test
jecxz
test
inc
addr16
sub
and
lods
pushf
icebp
scas
dec
cmp
pop
adc
(bad)
push
push
cmps
mov
push
push
sbb
dec
cmp
push
retf
sub
adc
jae
and
add
retf
ins
mov
mov
mov
pop
xchg
stos
mov
or
repnz
push
mov
sub
aas
aad
add
add
ja
loop
sub
cmps
cmps
enter
cmps
mov
into
adc
xchg
and
jmp
sbb
in
push
pop
jbe
loop
adc
and
cmp
or
inc
add
shl
icebp
pusha
mov
mov
ss
inc
dec
add
icebp
add
aaa
sbb
jg
repz
data16
imul
repz
xor
jo
push
push
fistp
jmp
or
add
and
or
or
or
aam
imul
ds
add
mov
leave
sbb
sbb
int
mov
jmp
pusha
aam
cmp
fist
mov
std
mov
fisub
xchg
arpl
mov
fxam
dec
cs
sub
jmp
mov
das
sbb
hlt
mov
push
loop
inc
cmp
cmp
mov
xor
add
(bad)
pop
xchg
jnp
int
pushf
fadd
push
shl
dec
hlt
jmp
or
pop
mov
loop
movs
jno
(bad)
pop
mov
jbe
add
scas
xor
add
add
sub
es
test
aas
int
das
bound
ret
fucomp
and
sub
push
in
iret
pop
call
dec
nop
adc
icebp
adc
push
sahf
jge
out
xchg
cwde
popa
jb
int
pusha
cmps
or
cmps
jae
test
push
test
gs
aas
movs
std
aas
pop
ds
imul
shl
and
inc
lds
montmul
cmps
add
jle
cld
sbb
jp
add
and
daa
xchg
lock
mov
mov
gs
imul
movs
add
leave
mov
and
jp
add
adc
jmp
out
imul
jo
enter
push
mov
adc
fstp
mov
sub
adc
sbb
cld
test
and
pop
fld
add
out
(bad)
cld
lahf
xchg
pop
cmp
je
jl
aas
fsubr
xchg
imul
push
ror
push
mov
jmp
daa
xchg
cli
lahf
movs
xchg
inc
xor
cmp
loope
repnz
mov
(bad)
dec
or
dec
jno
(bad)
pop
sub
mov
pushf
enter
aas
adc
xchg
scas
div
mov
inc
mov
sbb
repnz
das
shr
test
or
sar
and
in
arpl
push
repz
mov
add
mov
pop
loop
cmp
call
popf
or
pop
(bad)
push
mov
push
xchg
and
mov
std
xchg
outs
push
xchg
hlt
cmp
mov
push
test
repz
out
mov
js
adc
sbb
add
hlt
and
dec
out
faddp
addr16
test
mov
push
ficom
stos
xor
ss
mov
icebp
retf
xor
add
arpl
shr
mov
inc
aas
ja
push
arpl
pop
xchg
jecxz
sbb
cmp
fnsave
dec
dec
mov
pusha
bndstx
push
scas
cmps
(bad)
daa
jmp
arpl
jecxz
stos
je
jae
jmp
sbb
push
jno
ret
mov
mov
aad
sar
sbb
adc
aaa
test
push
jnp
cld
std
jge
pushf
sbb
jmp
in
push
movs
pop
repz
adc
dec
inc
and
sub
sub
(bad)
in
pop
(bad)
pop
and
mov
stc
jp
in
lods
pop
sar
inc
cmp
aas
jmp
test
data16
lds
sbb
sbb
div
xlat
fmul
(bad)
outs
dec
dec
into
dec
inc
scas
test
dec
fldcw
pop
movs
addr16
pop
cmp
repnz
pop
retf
add
dec
prefetch
push
or
ret
or
dec
test
adc
mov
xlat
(bad)
outs
or
popf
cwde
jmp
dec
int3
je
mov
push
push
enter
inc
add
sub
cld
push
call
mov
leave
xchg
les
xor
mov
push
push
inc
sbb
adc
aad
gs
push
jmp
xchg
aaa
test
ror
xchg
sbb
imul
mov
cmp
push
(bad)
xchg
call
int3
out
pop
minps
repnz
inc
je
adc
shl
xor
pop
fnstcw
cwde
pop
shr
or
or
mov
mov
nop
push
mov
fistp
mov
jo
ss
and
or
pushf
push
lock
push
xor
(bad)
mov
(bad)
fsubr
stos
push
xchg
push
or
lock
movs
test
mov
stos
jmp
inc
vcvtpd2ps
inc
test
test
add
nop
(bad)
fdivr
cmp
sbb
or
dec
xchg
inc
pop
lahf
cs
movs
mov
gs
loopne
jmp
and
jecxz
jno
mov
repz
sbb
popa
xchg
addr16
je
mov
(bad)
mov
jnp
ficom
pop
ret
xchg
imul
loope
stc
cmc
inc
xor
mov
in
test
dec
bound
jmp
mov
adc
push
mov
cmp
pop
and
dec
ss
cmps
(bad)
pusha
lods
shl
cmps
cli
xchg
cmp
add
push
call
sub
xor
xor
in
inc
and
retf
lahf
scas
jp
enter
pop
das
and
bnd
and
int3
dec
inc
adc
inc
cmp
add
jge
pop
or
add
sbb
mov
mov
js
xchg
das
mov
pop
ret
sub
add
sbb
jo
retf
jno
or
sbb
push
cld
shr
dec
inc
lock
fimul
daa
dec
clc
pop
not
and
add
xchg
test
retf
sbb
dec
movs
mov
into
clc
sbb
mov
jl
stc
icebp
cld
mov
push
add
add
and
adc
push
adc
or
fisubr
sub
and
pushf
aas
sar
int3
rol
repz
bound
ror
xor
xor
mov
and
inc
cmc
cdq
sbb
repz
lods
pushf
mov
sbb
add
stos
ja
cdq
jecxz
mov
xchg
pop
clc
xchg
repnz
dec
imul
xor
cmp
cld
mov
inc
xor
sbb
shr
and
test
mov
lods
jo
scas
mov
scas
outs
mov
pop
mov
push
jno
add
mov
cmp
add
jg
xlat
ds
stos
xor
xlat
shl
imul
and
dec
mov
test
mov
les
retf
pop
xor
xchg
xchg
inc
add
fistp
mov
ds
add
cdq
loopne
mov
es
(bad)
cmps
cmps
fcomp
fcom
mov
clc
xchg
adc
aas
icebp
cmp
movs
xchg
mov
outs
adc
or
icebp
xchg
jge
fnstsw
call
sbb
mov
mov
sbb
push
mov
mov
xchg
jne
adc
pushf
inc
cmp
mov
dec
dec
gs
mov
lods
cdq
push
mov
call
push
inc
push
sub
pusha
or
pop
push
sbb
retf
mov
fstp
inc
mov
push
or
in
pop
icebp
add
ds
dec
add
jno
sub
xchg
shl
movs
sbb
pop
ins
jo
loope
and
and
shl
arpl
cmps
dec
mov
ss
cmp
add
int
retf
test
ror
mov
jmp
jns
jo
mov
inc
add
stos
push
mov
sbb
ficom
xchg
mov
sub
cmp
shl
sbb
jge
lahf
lds
xor
inc
push
pop
or
lods
(bad)
mov
pop
xor
mov
jmp
mov
mov
xchg
or
call
pop
push
pushf
jmp
leave
xlat
sub
dec
sbb
add
mov
inc
loope
shr
cld
in
or
adc
retf
nop
cmps
pop
test
stos
out
push
jmp
jns
dec
push
mov
test
retf
dec
or
and
mov
rol
mov
add
dec
js
enter
push
mov
xchg
imul
mov
mov
call
test
ins
inc
mov
push
in
aad
and
ss
daa
and
cli
mov
lods
xchg
adc
or
lock
sbb
enter
cmovae
adc
sar
repz
ds
pushf
jmp
mov
adc
retf
es
mov
xchg
pop
hlt
mov
mov
jno
inc
fdivr
ja
lahf
push
ret
dec
cli
add
inc
jnp
lahf
pop
ins
mov
cmp
fptan
and
scas
xor
mov
mov
xor
jns
xchg
gs
adc
ror
push
dec
push
je
shr
mov
ss
sbb
test
stc
mov
in
pop
dec
and
lods
mov
mov
push
xchg
fimul
cmp
sub
add
xchg
jp
jae
or
jne
sub
jle
pop
adc
or
aad
test
or
adc
sub
outs
movs
adc
xchg
fnstcw
rep
stos
int3
pop
in
jns
scas
xchg
inc
mov
or
add
and
xlat
mov
pop
or
movs
pop
pusha
movs
leave
cmp
nop
xlat
rcl
popf
mov
jbe
mov
push
sahf
test
mov
push
mov
(bad)
sahf
sbb
mov
les
leave
outs
dec
std
retf
mov
outs
out
or
push
push
dec
fs
and
in
adc
aam
test
xchg
loope
ins
xchg
xor
push
mov
pop
add
xor
add
cmp
leave
(bad)
sbb
adc
adc
or
outs
dec
sub
cmps
fadd
aam
dec
inc
repz
mov
fsubr
or
rcl
call
mov
sub
sub
xchg
pusha
sbb
adc
cmp
sub
mov
or
mov
push
arpl
cs
retf
sbb
inc
inc
sub
xchg
push
pop
mov
stc
mov
add
cmp
add
mov
pop
xor
push
jecxz
(bad)
iret
aas
ds
test
add
adc
pop
push
retf
or
fdivr
test
daa
dec
(bad)
inc
mov
mov
jmp
lods
add
jo
push
sub
sub
rcr
xchg
imul
jmp
inc
and
mov
pop
and
fwait
xchg
xor
icebp
adc
push
retf
jecxz
push
mov
lahf
sar
repz
cli
jnp
test
fwait
xchg
mov
xchg
jb
ss
js
inc
frndint
xchg
cmc
ss
in
shl
adc
ror
jecxz
jg
ret
stc
jl
add
shr
mov
hlt
cmp
cmps
mov
ret
push
or
sub
jmp
lods
inc
stc
mov
jae
out
ins
sub
movs
jae
ret
shr
jnp
push
jmp
mov
dec
scas
pop
fisttp
inc
dec
lahf
mov
push
fdiv
out
cld
sub
add
push
call
add
sti
iret
mov
and
sbb
or
outs
jmp
push
call
add
fist
or
push
fst
jmp
fwait
lahf
test
stc
or
scas
int3
int3
inc
cdq
(bad)
jb
mov
in
cmps
push
jbe
adc
xchg
add
mov
sbb
mov
ds
dec
in
iret
lahf
push
cmps
fistp
xchg
cld
jbe
push
and
test
push
sbb
add
adc
in
stos
stos
loop
stos
dec
(bad)
daa
adc
xlat
cmc
xor
add
jge
in
out
loop
mov
int
fild
fstp
adc
sbb
and
jle
jle
sti
cmp
mov
loope
mov
cld
outs
(bad)
in
cmps
push
into
loope
pop
mov
inc
in
hlt
std
cmps
cmps
sub
and
(bad)
movs
push
retf
add
adc
mov
outs
arpl
pop
adc
or
mov
clc
(bad)
jecxz
fmul
adc
push
popa
jmp
aam
sbb
cmps
nop
inc
or
or
dec
sub
and
lea
in
jnp
sub
mov
pusha
sbb
cmps
adc
sbb
ja
sti
sbb
jnp
add
inc
in
mov
movs
push
aad
push
rol
jo
call
xchg
int3
inc
aam
adc
call
inc
test
add
push
mov
(bad)
mov
adc
repz
cdq
jmp
rcl
or
cmp
jecxz
jnp
aam
add
jae
(bad)
cmc
jle
(bad)
sub
mov
xor
cmp
xor
stc
icebp
repz
call
test
lahf
idiv
les
inc
pop
iret
test
cdq
and
adc
iret
scas
lahf
stc
jp
aam
push
(bad)
ds
ds
pop
(bad)
int
ds
mov
mov
sbb
cmps
xor
cli
mov
adc
push
scas
pop
adc
rcl
js
es
adc
ins
out
(bad)
sbb
jmp
out
push
sbb
seta
xor
test
sbb
in
mov
iret
aas
dec
sub
mov
inc
sbb
repnz
adc
push
out
xor
lds
lahf
push
dec
das
mov
pushf
loope
push
pop
les
test
repz
data16
sbb
cmovno
pop
aaa
gs
out
hlt
call
dec
pop
xor
xchg
pusha
jns
(bad)
sbb
(bad)
mov
in
fwait
or
icebp
jne
pushf
leave
or
repz
test
push
imul
sub
(bad)
push
jecxz
sbb
mov
push
scas
xchg
sub
sbb
mov
ja
or
sbb
jg
(bad)
fbld
in
out
inc
and
lock
jae
jmp
push
adc
movs
pop
rol
mov
mov
in
repnz
cli
sbb
out
xor
pop
(bad)
pop
or
cmp
xor
cmps
scas
push
jb
or
loope
repnz
in
jb
mov
sub
imul
or
daa
mov
xor
adc
sbb
iret
cld
pop
in
call
(bad)
daa
repz
xchg
mov
fstp
xchg
in
test
mov
and
inc
and
lds
aam
ins
or
push
out
enter
fdiv
push
adc
mov
xchg
iret
fist
jnp
mov
out
inc
mov
sub
(bad)
jbe
cmp
popf
ret
inc
xchg
mov
mov
pop
pusha
jl
ficomp
mov
jno
or
repz
aam
call
imul
sbb
mov
sub
retf
(bad)
pop
or
bound
mov
pop
sbb
cli
call
mov
push
fisubr
cmc
pop
jo
inc
icebp
nop
mov
scas
mov
adc
fwait
adc
mov
icebp
push
push
into
call
sub
scas
cli
ror
pop
nop
xor
lock
stc
jns
and
push
ins
mov
push
lods
out
dec
pop
push
mov
xchg
psrad
aad
sbb
inc
test
imul
dec
std
xlat
push
or
hlt
mov
ficom
pop
dec
xchg
add
jg
scas
or
dec
dec
shr
dec
add
cmps
xchg
cmp
gs
inc
div
dec
dec
push
dec
inc
gs
dec
xor
push
jp
rol
imul
dec
aas
dec
imul
and
in
loop
push
lods
imul
mov
sbb
pusha
mov
jbe
push
ss
pop
and
mov
mov
or
mov
cmp
pop
test
lds
mov
mov
clc
data16
shl
stos
test
mov
shl
shl
add
ja
and
out
pushf
mov
mov
jns
pusha
dec
push
mov
or
jl
inc
dec
cmps
xor
sbb
jb
rcr
xor
mov
and
sahf
inc
inc
sbb
inc
xchg
and
popf
popf
ror
xchg
sbb
sti
js
test
xor
or
jb
push
sub
and
mov
stos
dec
push
ror
jo
loope
push
inc
(bad)
jb
dec
out
mov
xor
mov
mov
pop
lea
retf
out
jbe
push
fdiv
cmp
pop
xlat
inc
xchg
lea
push
push
pusha
mov
or
sub
sub
sahf
mov
pop
mov
push
call
cmps
imul
hlt
push
fwait
sti
cdq
in
loopne
cmp
push
sub
add
mov
xor
mul
out
idiv
pop
pop
not
in
fmul
sbb
cmp
add
popa
push
adc
push
inc
arpl
idiv
jg
jnp
ret
in
inc
das
hlt
sub
cli
jns
std
xchg
repz
mov
dec
ins
dec
xchg
adc
jg
in
int3
cmp
pop
gs
sahf
ficom
mov
fbstp
dec
jecxz
out
xor
movs
js
mov
inc
aaa
dec
sbb
pop
jl
clc
js
frstor
xchg
mov
xor
add
add
in
mov
add
push
mul
mov
out
pop
ins
jbe
dec
rcr
jo
dec
add
cld
inc
cmp
outs
jbe
add
arpl
mov
push
cmp
lods
jge
lds
jmp
das
icebp
sub
movs
adc
add
repnz
xor
push
push
mov
fcom
out
cs
pop
xchg
fadd
inc
sub
mov
out
push
push
push
add
ret
jmp
push
pop
fsubr
lds
sub
stos
cmc
inc
inc
or
rcr
popf
push
jnp
(bad)
rcl
(bad)
xchg
xchg
mul
stos
mov
adc
repz
outs
and
jnp
iret
xlat
fxch
(bad)
push
mov
sbb
icebp
hlt
cmc
sti
add
adc
outs
fldln2
mov
mov
adc
sub
aam
push
mov
cmc
mov
jne
mov
dec
ins
fimul
cmp
movs
fwait
xor
cmp
inc
xor
movs
cmc
xor
lds
scas
jns
jb
and
outs
cmp
xchg
cs
push
mov
in
shl
jl
enter
ins
pushf
shl
mov
aaa
lea
pop
les
mov
push
(bad)
pop
or
(bad)
lods
dec
and
lahf
push
dec
push
cs
xchg
inc
adc
pop
jmp
add
or
mov
(bad)
xchg
das
retf
pop
ins
pop
ins
mov
pop
mov
repz
cwde
cmps
in
pop
lock
sbb
fsubp
sti
scas
test
jne
adc
pop
(bad)
rcl
test
mov
(bad)
int
stos
adc
inc
and
fsubr
jmp
cmp
iret
add
test
dec
and
rep
dec
into
push
sub
pop
adc
xchg
test
shl
cmp
in
xor
into
mov
gs
xor
push
adc
rcl
out
call
scas
aad
add
pusha
mov
inc
jno
stos
mov
in
stc
jge
aas
loopne
mov
aad
pop
outs
dec
dec
sbb
mov
addr16
ret
iret
fcomp
mov
add
test
pop
test
push
int3
pop
mov
mov
and
je
movs
and
lock
ret
sub
dec
mov
mov
shr
xor
or
lock
or
xchg
mov
bound
pop
jmp
mov
dec
enter
inc
xchg
out
cs
in
mov
adc
mov
mov
pop
cmc
xchg
dec
mov
inc
push
push
mov
loope
push
or
inc
mov
jg
loop
mov
cmc
repz
cld
mov
ret
mov
out
sub
and
clc
imul
push
cmps
sqrtps
pop
adc
push
jnp
inc
nop
aas
rcl
xchg
dec
inc
shr
ror
jmp
es
stc
icebp
cmc
jle
or
pop
lods
hlt
in
dec
jecxz
outs
bound
push
(bad)
loopne
push
out
repz
or
hlt
call
movs
pusha
adc
pop
ins
enter
jnp
cmc
pop
jmp
jge
inc
fsub
das
in
sbb
sub
jle
sbb
mov
pop
pop
je
ret
leave
and
dec
fcomp
int
out
and
push
test
imul
cmp
xchg
rcl
repnz
cmp
add
and
pop
dec
xchg
hlt
sar
push
mov
jae
push
xor
xor
mov
retf
mov
aaa
push
ret
jmp
sti
iret
mov
outs
sub
popf
pop
cs
fisubr
or
les
dec
jns
mov
jp
mov
xchg
pop
rol
pop
fwait
std
jg
mov
aas
mov
cmp
or
es
pop
outs
stc
jge
lahf
inc
stos
mov
test
push
pop
fsub
rol
jecxz
idiv
ror
dec
and
push
add
mov
jbe
aam
cmp
popf
js
xor
pop
or
push
mov
add
jg
call
sbb
mov
fnsave
test
mov
xlat
in
inc
push
cmp
sbb
and
dec
scas
jne
cdq
lea
xchg
lahf
lock
xlat
in
mov
push
movs
and
std
mov
rol
arpl
sbb
push
jecxz
mov
repz
shr
lods
ds
fidiv
and
jp
ja
aad
push
test
ds
hlt
(bad)
call
cmp
lock
in
dec
or
mov
add
stos
pop
retf
pop
mov
rcr
mov
(bad)
mov
popa
dec
xor
mov
pop
imul
mov
clc
not
mov
cmp
movs
sbb
ss
fisubr
ret
jecxz
jns
pop
push
retf
mov
jmp
retf
movs
or
pusha
add
sahf
dec
leave
in
jmp
neg
sahf
adc
mov
jmp
adc
stos
sar
out
push
clc
sub
cdq
sahf
adc
dec
je
cmp
stos
jbe
enter
push
aad
jg
sar
and
mov
or
push
movs
cmp
imul
xchg
mov
std
cdq
sbb
mov
mov
mov
mov
inc
adc
xor
sub
in
and
adc
mov
cmps
xor
ja
test
push
enter
test
xor
adc
loope
popf
rol
icebp
retf
and
add
xor
retf
mov
pop
loopne
imul
cs
rcl
cmp
lds
mov
nop
xor
mov
add
repnz
jb
and
xchg
mov
inc
add
sahf
ret
addr16
dec
sar
loopne
inc
imul
fs
sub
add
cmp
pop
pop
in
jno
jg
rcl
mov
cmp
retf
push
mov
jle
int3
scas
jl
(bad)
inc
sbb
add
retf
lock
jnp
mov
mov
inc
sbb
lea
jno
adc
fimul
adc
dec
sbb
push
dec
and
cld
pop
or
cmp
lods
mov
push
(bad)
fldcw
xor
fiadd
pop
scas
(bad)
imul
call
push
push
adc
mov
add
sar
add
or
add
and
lods
ror
ror
xchg
cmp
lods
arpl
rcl
(bad)
aaa
mov
out
pusha
adc
mov
dec
jecxz
mov
imul
or
and
add
mov
fild
(bad)
xor
inc
ins
xor
or
in
cld
push
push
enter
daa
or
cli
mov
push
ret
jnp
dec
loop
mov
mov
dec
and
add
xor
rol
pop
mov
loop
dec
jp
pusha
aad
inc
cmps
adc
ret
dec
int
fstp
xchg
js
adc
mov
int
mov
aam
mov
pop
gs
adc
int
sub
mov
scas
mov
push
aad
jne
and
cmc
or
(bad)
test
push
cmps
scas
ins
cs
ss
pop
pop
into
mov
stc
xor
repnz
scas
dec
or
sbb
shr
arpl
test
mov
sbb
scas
leave
hlt
fcmovbe
neg
retf
inc
loope
or
aad
enter
pushf
inc
inc
rol
mov
inc
adc
test
push
xlat
pop
retf
lea
(bad)
cs
mov
cmps
mov
icebp
push
dec
adc
loopne
xchg
xchg
mov
add
out
xor
mov
xchg
out
jecxz
in
and
aad
push
mov
(bad)
lahf
iret
stos
iret
mov
add
adc
rol
inc
add
mov
or
enter
cmp
mov
xor
icebp
rcl
enter
add
push
pop
cs
data16
shl
push
xchg
and
outs
in
cwde
rol
cmp
and
scas
(bad)
push
adc
and
push
or
add
dec
sti
pop
in
out
pop
call
repnz
cmps
pushf
sar
cmps
cdq
movs
or
mov
jo
test
dec
sti
pop
imul
push
fidiv
ins
arpl
pop
rcl
push
push
(bad)
mov
jmp
or
frstor
adc
adc
mov
lahf
adc
loop
loop
ins
outs
repnz
cdq
cli
or
jo
add
xchg
jge
inc
cmp
dec
cmp
mov
mov
int
outs
sti
gs
test
dec
inc
xchg
sbb
add
and
(bad)
dec
sbb
push
xchg
inc
jl
mov
xchg
movs
nop
sub
add
imul
inc
out
jmp
fisubr
in
test
xchg
bnd
std
mov
xchg
stos
enter
jle
rol
xchg
jecxz
jno
mov
mov
mov
outs
movs
call
test
pop
sbb
cld
and
movs
icebp
fdiv
push
(bad)
imul
sub
clc
inc
add
and
pop
popf
movs
inc
xchg
int
fldcw
jae
push
dec
xchg
ret
(bad)
and
inc
cmp
cmp
mov
jecxz
push
ficom
jnp
and
pusha
push
movs
xchg
fimul
push
xchg
lods
sub
popa
mov
ja
lock
add
or
push
cli
push
xchg
pop
xor
stos
pop
push
or
push
test
adc
in
pop
inc
fwait
inc
jmp
out
fcomp
xor
push
add
cmp
pop
sub
dec
push
dec
or
movs
xchg
or
jecxz
push
out
sbb
inc
push
sub
in
sub
test
xor
and
(bad)
outs
(bad)
mov
inc
sub
sub
movs
push
add
mov
sbb
std
mov
jno
dec
xchg
push
dec
mov
add
and
xor
mov
push
aas
dec
cmps
mov
lods
out
out
xchg
push
cmp
jmp
adc
add
dec
psubusb
call
das
loope
lock
pop
add
jo
cld
cli
outs
ret
out
jns
push
test
mov
and
mov
add
(bad)
mov
sahf
pop
ins
xchg
sub
sub
xor
jmp
jg
fcmovne
sbb
xor
stc
inc
aad
rcr
jbe
(bad)
faddp
gs
push
sub
lea
and
cmp
adc
loop
add
cwde
jle
inc
pop
mov
fidivr
or
mov
pop
mov
test
sub
in
ror
rcr
add
sub
imul
test
and
push
dec
sub
dec
xor
mov
xchg
cmc
div
fstp
imul
add
enter
mov
inc
imul
xchg
pop
fisubr
pop
xchg
mov
loop
mov
mov
lods
pop
(bad)
fmul
mov
out
lods
(bad)
loop
fwait
jo
mov
adc
mov
ret
sbb
push
xor
push
movs
mov
loope
mov
lahf
sub
push
out
int
xchg
mov
bound
xor
sbb
xor
or
dec
call
adc
mov
pop
xchg
ret
sbb
shr
adc
outs
or
fucomi
xchg
je
push
mov
call
pop
aad
push
push
mov
hlt
mov
mov
push
xchg
add
inc
sub
lahf
(bad)
fdiv
frstor
jl
and
push
lock
sbb
bndldx
or
mov
pop
je
xor
push
sub
xchg
leave
fs
nop
aaa
sbb
les
sub
in
inc
xlat
inc
sub
mov
push
les
js
pusha
mov
stc
hlt
xchg
dec
lods
rcl
mov
push
sahf
inc
rol
fdivr
in
pop
and
imul
dec
movs
or
dec
add
mov
pop
pop
push
and
rcl
ret
mov
cmp
(bad)
sub
fmul
call
(bad)
stos
push
sub
jecxz
adc
(bad)
cmp
jne
je
add
mov
test
add
test
pusha
mov
dec
jp
pop
out
cdq
dec
cmps
mov
jb
sbb
bound
xor
stos
cmp
mov
stos
imul
jo
sar
mov
sub
mov
sahf
add
icebp
xor
aad
push
cs
sbb
popf
mov
xchg
or
adc
xchg
inc
test
sub
out
sub
adc
or
imul
inc
pop
xchg
movs
inc
(bad)
shl
icebp
xor
add
cmp
daa
sbb
je
push
push
stos
dec
and
in
push
fimul
data16
sbb
and
jp
outs
and
or
pop
adc
sub
push
rol
xchg
mov
mov
lea
and
sbb
sbb
faddp
jge
lahf
push
mov
pop
shl
in
je
ja
sub
xor
sbb
int3
scas
add
iret
mov
fcom
es
aaa
hlt
jl
jo
sbb
adc
loopne
(bad)
(bad)
jb
movs
jns
jo
scas
outs
sub
jmp
loop
cmp
push
inc
push
pusha
scas
xchg
push
xor
data16
push
aam
mov
fcom
fsub
sbb
xlat
jae
push
fadd
inc
stos
(bad)
sub
aam
movs
and
outs
jg
jge
inc
pop
jnp
dec
push
push
shl
push
sub
jg
dec
popf
jbe
sti
dec
in
add
and
mov
jno
and
mov
(bad)
ja
ins
mov
mov
mov
xchg
adc
xor
in
dec
scas
inc
in
jp
sahf
push
pop
dec
ret
inc
adc
sbb
push
fiadd
pop
addr16
mov
pop
xchg
stc
add
sti
jl
imul
aas
xor
jp
jo
xor
pop
(bad)
ds
add
xchg
outs
outs
inc
jne
clc
dec
dec
outs
mul
mov
movs
stos
pop
jle
sti
or
(bad)
loope
js
jo
mov
and
xchg
stos
out
dec
and
lea
ror
pop
fist
push
ins
adc
addr16
push
sub
retf
retw
jge
out
rcr
outs
and
mov
jecxz
mov
and
sub
ds
fs
jp
or
xor
lods
jne
inc
in
xor
cwde
in
sbb
in
ret
pop
pop
jg
jge
pop
dec
adc
cmp
lods
jl
ins
aas
aas
cs
add
gs
std
mov
jmp
das
and
movs
jle
aam
mov
dec
or
stos
inc
push
or
sbb
out
in
xor
iret
xor
fld
inc
aas
inc
sub
mov
out
ror
cld
cmp
popa
cmps
cdq
fs
bound
xchg
scas
movs
mov
dec
daa
repz
mov
ins
pop
ss
mov
cmp
aam
add
jo
rol
lods
cmc
aam
sbb
daa
jb
push
push
or
push
inc
movs
push
mov
repnz
xlat
fadd
jl
sub
sub
pop
cdq
repz
cmp
mov
icebp
jmp
out
test
xlat
in
loop
ret
ror
loope
pop
imul
and
mov
repnz
in
das
imul
jne
ins
(bad)
dec
adc
or
pop
and
mov
bound
cdq
leave
inc
arpl
je
outs
ins
movs
mov
jne
jle
and
or
ret
sbb
jmp
out
adc
adc
pop
cmp
add
js
mov
out
push
add
in
inc
stos
in
jmp
jnp
lahf
sub
sbb
dec
or
dec
and
inc
xor
jmp
jns
in
in
in
fwait
adc
lods
cmp
xchg
push
jle
dec
fwait
jns
ror
or
adc
sbb
scas
dec
sbb
mov
pop
aas
mov
ret
pop
sbb
aam
sbb
cmp
enter
das
icebp
aam
inc
or
es
pop
inc
jge
mov
xor
sbb
out
mov
push
sahf
gs
into
or
add
jb
mov
push
dec
mov
ins
dec
ret
push
xchg
xor
mov
xchg
mov
imul
stos
pusha
gs
daa
mov
inc
sub
(bad)
inc
mov
mov
xor
xchg
or
add
sub
pop
cdq
scas
stc
inc
addr16
pop
ret
mov
xchg
jg
stos
test
scas
into
xchg
jecxz
sahf
cmp
ja
mov
mov
in
sub
(bad)
xchg
xchg
mov
cmp
jb
test
js
push
cmp
jg
inc
sti
imul
mov
sbb
cmps
mov
out
clc
jno
dec
mov
mov
sahf
pop
popa
pop
fist
cs
adc
jae
cmps
rcl
bound
and
push
add
retf
xlat
into
mov
pop
mov
cmp
aas
icebp
pop
xchg
dec
mov
add
imul
mov
mov
rol
xadd
jnp
mov
jns
shr
add
mov
xchg
leave
fild
call
sub
adc
sub
inc
stos
lds
push
or
adc
lods
les
fcmovb
pop
add
(bad)
push
loop
push
adc
addr16
dec
jge
icebp
push
inc
test
mov
sahf
scas
sbb
retf
adc
inc
inc
pop
mov
rcl
add
and
cli
or
jge
jbe
jnp
imul
push
sahf
rcr
inc
and
and
dec
adc
shl
pop
and
cmp
sahf
or
pop
mov
pop
push
sub
shl
mov
push
fdivr
scas
mov
fwait
push
xchg
out
pop
mov
or
jl
sub
test
push
rcl
cmp
adc
inc
ror
mov
mov
mov
ret
ficom
fisubr
sti
cmp
in
not
xchg
js
scas
dec
loope
push
xchg
mov
rcl
jbe
mov
aam
popa
not
xchg
mov
push
mov
mov
sub
pop
dec
add
pop
rcr
shr
jno
cmc
pop
gs
and
or
add
nop
dec
jp
adc
mov
jnp
loop
lods
push
repnz
loope
mov
inc
xor
mov
pop
add
cdq
xor
movs
mov
jne
mov
test
scas
(bad)
out
mov
jae
fiadd
adc
shl
sub
retf
xor
aaa
cmp
ins
sti
mov
fadd
outs
xor
or
je
sub
imul
push
xchg
js
sti
pop
dec
xchg
jnp
arpl
xchg
jle
test
stos
sub
add
lahf
dec
jne
mov
sar
pop
jno
push
xchg
fst
or
leave
mov
add
add
fisub
out
sbb
sbb
pop
cmp
xlat
jmp
in
call
imul
dec
cmp
psraw
cli
jle
sub
push
mov
mov
adc
rcr
sbb
ror
sub
movs
lods
lds
xchg
xlat
inc
mov
out
inc
mov
jo
out
add
iret
mov
xchg
mov
test
xor
xlat
and
ins
call
mov
stos
sub
icebp
sub
int3
mov
sub
cli
pop
(bad)
repnz
add
add
imul
test
push
xchg
jecxz
pop
push
add
cld
mov
adc
ror
repz
leave
pop
add
inc
xchg
mov
sub
je
leave
push
pop
xor
pop
sbb
idiv
in
jo
inc
int3
test
sub
push
sub
imul
jl
dec
scas
cmc
mov
pop
pop
lds
arpl
push
cdq
shr
stc
sbb
ja
out
push
ds
stos
jns
xchg
int
dec
mov
call
scas
cmp
xchg
sub
jmp
xchg
jge
mov
(bad)
pop
jmp
pushaw
add
mov
cmp
xor
push
push
jae
test
int3
xchg
and
dec
sbb
imul
jge
aaa
in
jmp
shl
and
icebp
(bad)
cwde
and
xchg
jmp
and
add
sub
ror
push
push
sbb
mov
add
xor
pop
mov
movs
xchg
jmp
cdq
push
daa
mov
nop
nop
lea
xchg
xlat
mov
frstor
imul
adc
and
inc
xchg
inc
mov
mov
push
sub
push
cmc
jp
hlt
cmps
or
int
out
call
add
mov
cmc
cmps
mov
push
movs
test
daa
cmp
mov
and
cwde
jp
ror
jle
in
mov
aad
mov
cmps
in
movs
xor
in
jp
inc
cmc
push
push
jb
stos
aad
dec
movs
inc
sub
ds
mov
in
popf
mov
push
mov
fisttp
fcom
outs
sahf
inc
inc
mov
into
cmp
mov
mov
out
scas
imul
call
push
in
inc
stc
nop
sbb
hlt
pop
mov
sti
push
and
xchg
(bad)
aas
pop
js
mov
icebp
push
sbb
nop
call
push
mov
push
jg
inc
enter
mov
push
es
daa
lods
(bad)
mov
lahf
ins
mov
mov
jns
jl
jmp
push
mov
test
jo
idiv
or
div
adc
pop
retf
pop
jno
jg
adc
pop
pop
and
xor
inc
inc
out
cs
(bad)
sar
cmp
test
jl
push
inc
ror
pop
in
test
ins
jge
adc
sar
dec
cli
(bad)
sub
adc
mov
lea
pop
mov
shl
shr
ins
js
repnz
cli
mov
push
mov
call
in
xor
mov
jg
xlat
cli
fistp
xchg
lods
cmp
(bad)
pop
mov
add
dec
enter
hlt
or
fst
cmp
pop
lds
data16
cmp
cmp
add
dec
in
push
scas
les
mov
lock
into
mov
in
test
mov
test
ror
fs
inc
dec
add
scas
movs
dec
jecxz
(bad)
pop
ficom
aas
cmps
dec
sahf
dec
mov
inc
mov
pop
xlat
xlat
movs
out
jb
jecxz
cmps
shl
retf
test
mov
iret
neg
mov
ret
out
aam
add
in
jmp
mov
arpl
and
repz
cmp
adc
and
call
mov
jp
mov
fwait
jge
aas
jp
adc
pop
pop
sbb
retf
(bad)
out
xchg
in
push
mov
xor
jbe
mov
jb
sub
jnp
lods
push
call
add
lock
mov
push
dec
gs
imul
(bad)
lods
jbe
idiv
je
add
sub
outs
int3
jnp
icebp
lods
out
jecxz
cli
dec
pusha
sbb
xchg
aad
(bad)
xor
inc
test
(bad)
mov
jle
add
ins
xor
mov
inc
out
outs
xchg
dec
retf
and
loop
dec
sahf
js
pop
icebp
ds
push
inc
xchg
add
sub
mov
aas
ds
xchg
inc
(bad)
pusha
out
mov
push
shl
retf
mov
icebp
sub
push
repnz
adc
out
fdiv
jae
mov
push
push
int
fiadd
scas
xchg
dec
mov
mov
sbb
js
sbb
pop
cwde
mov
and
and
cmps
and
ds
ret
hlt
mul
inc
pop
(bad)
mov
pop
xchg
int
iret
and
clc
mov
repnz
cvtpi2ps
cmp
pop
(bad)
fcomp
pop
mov
mov
fwait
inc
lock
cwde
outs
inc
shr
(bad)
dec
xlat
retf
out
iret
lock
sbb
jg
push
inc
dec
fwait
lahf
jmp
mov
adc
or
inc
sub
in
add
scas
cld
outs
clc
cli
mov
add
cmp
mov
es
jns
lock
test
imul
daa
cs
outs
cmp
cmps
jecxz
jnp
jns
gs
inc
add
lock
cmc
call
xchg
push
repz
cwde
lock
inc
mov
(bad)
scas
call
xor
sbb
les
cdq
jle
call
jmp
ror
loopne
add
sub
jecxz
mov
adc
bound
xchg
(bad)
dec
jnp
neg
test
mov
fwait
inc
sub
mov
dec
mov
mov
cmp
push
mov
jle
ret
mov
(bad)
into
jecxz
and
arpl
retf
dec
icebp
mov
adc
push
movs
cdq
enter
jb
cmp
jp
jmp
cmp
adc
js
test
mov
fwait
xchg
fwait
jle
ja
fld
ja
les
mov
pop
daa
mov
add
das
in
add
push
cs
(bad)
iret
push
lds
dec
dec
mov
out
(bad)
add
xchg
popf
and
dec
test
jbe
add
and
pop
jmp
adc
inc
loopne
adc
iret
xchg
xor
repnz
mov
push
sub
and
xchg
mov
and
es
stos
das
sbb
pop
inc
push
icebp
(bad)
mov
mov
mov
xor
xor
outs
fstp
ins
fwait
jge
xchg
jl
loopne
jecxz
popf
add
stc
push
xchg
scas
jl
cmp
retf
shr
jbe
in
pop
rcl
add
mov
jp
fdivrp
xchg
dec
data16
adc
call
pop
outs
adc
fadd
xor
push
out
(bad)
into
mov
call
xor
sbb
xor
repnz
(bad)
push
or
out
cmp
inc
data16
xor
mov
adc
test
or
in
aad
hlt
cmc
mov
dec
and
sub
or
mov
repnz
icebp
mov
and
imul
sbb
mov
movs
or
outs
pushf
mov
xor
sub
(bad)
sbb
push
cli
gs
sbb
mov
frstor
ds
je
int3
sbb
push
shr
pop
ins
inc
gs
sbb
mov
mov
cmp
movs
aaa
sbb
sti
pop
jnp
and
dec
sti
xchg
jge
mov
jns
mov
mov
daa
adc
(bad)
addr16
fwait
std
sahf
(bad)
outs
ss
jmp
daa
xchg
pop
es
push
xchg
bound
lds
mov
pop
lahf
out
aam
(bad)
mov
mov
das
mov
and
movs
xchg
pop
call
adc
outs
inc
std
ins
sub
or
push
js
mov
sub
dec
aam
repz
cmp
pop
(bad)
aas
adc
xor
adc
les
(bad)
mov
pop
int
cmps
adc
xlat
addr16
fwait
test
xchg
push
and
shl
inc
cld
mov
add
stc
fist
pop
pop
call
mov
(bad)
sbb
in
ins
cmps
aaa
pop
dec
mov
loope
push
xor
push
dec
or
cwde
mov
icebp
dec
lea
or
inc
sbb
dec
dec
add
jp
aaa
push
das
imul
lods
clc
mov
push
out
jno
inc
xor
movs
cs
cmp
(bad)
pop
loopne
xlat
inc
jns
fldcw
test
movs
cdq
pop
add
sub
call
pop
mov
(bad)
mov
dec
cmps
mov
cmp
cmp
fimul
(bad)
iret
jecxz
jnp
nop
jns
jl
into
sbb
cwde
popf
cmp
inc
daa
loop
dec
ret
lods
dec
sti
enter
cmp
xor
fdiv
loop
push
test
sub
dec
inc
cdq
test
hlt
jge
lds
xor
inc
adc
dec
dec
push
add
or
rcl
cwde
xchg
cli
cmp
iret
(bad)
cmp
pop
fdiv
push
(bad)
push
not
xchg
mov
mov
fsub
js
push
loope
gs
push
push
add
and
sub
stos
sbb
scas
jmp
push
mov
mov
out
arpl
mov
aam
sbb
fwait
mov
imul
(bad)
loop
jns
and
rcr
int3
stc
sbb
or
test
inc
in
out
sbb
push
popf
ins
rcl
xor
shl
push
jnp
ror
mov
mov
jle
fstp
stc
imul
repnz
adc
leave
or
xchg
gs
inc
add
dec
add
inc
ja
imul
pop
mov
(bad)
jb
sub
(bad)
fwait
adc
sub
mov
outs
call
jmp
mov
inc
sbb
es
outs
pop
mov
jbe
xor
mov
adc
push
sbb
les
test
dec
add
outs
arpl
test
mov
mov
and
jecxz
in
dec
mov
xchg
stc
and
jae
mov
test
adc
enter
enter
inc
mov
movs
sub
(bad)
cli
neg
dec
mov
cmps
xchg
inc
xchg
addr16
test
mov
ror
test
xchg
jmp
in
or
add
sbb
das
fnstcw
mov
push
nop
pop
fsubr
xor
pop
inc
adc
mov
inc
adc
mov
rcl
push
push
dec
inc
push
or
push
dec
adc
ret
push
adc
or
or
fsubr
fadd
dec
and
pop
aam
loope
cmp
out
jne
jle
in
popf
adc
mov
cmp
aam
enter
adc
lods
imul
lahf
mov
and
cmps
add
mov
dec
add
dec
in
push
pushf
mov
mov
popf
ss
push
jae
enter
es
rcr
mov
dec
ds
jp
push
xchg
mov
int3
loopne
or
add
sub
cmps
sahf
cmp
mov
stc
fsub
stc
std
mov
inc
mov
mov
fidiv
mov
inc
outs
sbb
xor
xchg
add
sbb
dec
mov
ret
mov
jl
rcl
pop
cld
sahf
ss
pop
das
push
mov
aas
(bad)
push
mov
cmp
mov
mov
nop
popa
lods
ret
jge
mov
(bad)
je
dec
xor
and
pop
and
dec
cmp
fisttp
sbb
iret
adc
sbb
push
dec
xor
adc
aad
test
movs
imul
pop
nop
stos
mov
aas
push
xlat
scas
xchg
sub
dec
popf
mov
add
movs
jbe
xchg
cmps
(bad)
push
ret
jmp
dec
pop
add
fadd
xlat
sbb
dec
xor
dec
enter
mov
fldcw
jmp
mov
xchg
lds
mov
xchg
inc
movs
inc
movs
mov
ret
mov
adc
jb
or
aaa
mov
mov
test
or
fdivr
imul
dec
dec
jne
scas
mov
(bad)
enter
push
mov
mov
aad
xchg
xor
pop
push
cwde
dec
pusha
(bad)
push
test
dec
sbb
xchg
pushf
sub
fiadd
and
sub
jge
in
mov
fimul
mov
push
test
lods
add
(bad)
or
and
push
mov
js
adc
push
lock
popa
cmc
pop
fwait
mov
adc
xchg
and
pop
mov
shr
ret
or
xchg
and
jmp
nop
inc
dec
lea
mov
mov
add
inc
adc
fcomp
add
xor
cdq
inc
xchg
out
cmc
xor
repz
or
dec
xor
sbb
(bad)
movs
nop
inc
stc
rcr
ja
ins
pop
pop
mov
push
xor
xchg
inc
mov
in
jge
fisubr
or
mov
loopne
(bad)
(bad)
fwait
xchg
xchg
sbb
leave
in
mov
lods
sub
push
sub
push
xchg
push
push
call
sbb
mov
pop
inc
mov
and
sbb
lea
stos
stc
cmc
push
jae
xor
mov
jae
sub
cmp
enter
out
out
stc
in
xchg
pop
mov
call
sbb
ins
jg
xlat
pop
push
dec
or
jl
clc
retf
push
add
aam
push
xchg
clc
mov
xor
xor
push
and
pop
mov
jle
ret
add
sub
push
xor
jp
jns
ja
(bad)
or
mov
imul
fdiv
jae
mov
aam
mov
jg
xlat
add
push
push
retf
stc
push
enter
jl
mov
mov
out
mov
or
je
ret
ins
pcmpgtd
pop
push
push
sbb
arpl
aam
xchg
sub
inc
lock
mov
mov
push
retf
test
sub
lea
leave
jne
and
xor
iret
stc
cmc
lds
pusha
arpl
add
lea
mov
mov
cmp
add
stc
je
in
ins
pusha
test
and
(bad)
mov
out
cld
inc
loopne
div
jle
repnz
mov
fidiv
add
add
jp
(bad)
enter
cwde
enter
(bad)
fisub
loopne
add
stos
mov
gs
mov
mov
add
inc
mov
ror
and
retf
mov
push
loope
mov
fsubr
popf
mov
push
es
jecxz
cs
loope
in
sahf
xchg
lods
push
gs
jo
mov
test
(bad)
sahf
int
cmp
push
sub
ror
ins
cld
iret
out
dec
jne
daa
and
jg
pop
icebp
aas
dec
je
cmovnp
imul
sub
cld
or
fisttp
es
cmps
mov
inc
adc
mov
aam
sar
cld
jnp
xchg
test
fiadd
scas
dec
push
sahf
pushf
jmp
aaa
or
push
add
inc
mov
add
movs
cdq
xchg
push
out
sub
mov
mov
call
sub
imul
mov
mov
jg
xor
sbb
xchg
stc
inc
punpcklwd
icebp
pusha
and
out
jmp
fadd
je
arpl
test
or
imul
gs
in
dec
popf
arpl
xchg
fcom
aam
cld
sti
xchg
call
mov
in
sar
jns
stos
jae
dec
enter
dec
pop
lea
inc
sub
adc
stc
rol
(bad)
in
pop
push
imul
adc
push
add
push
dec
pop
push
call
(bad)
mov
and
jg
in
adc
xchg
out
sub
xor
pusha
inc
mov
cmc
pop
lahf
xor
xchg
jl
xchg
mov
pop
jl
or
sub
cdq
inc
or
mov
cmc
out
sti
in
in
gs
pushf
mov
aas
retf
movs
push
cmp
xchg
js
dec
jo
rcr
mov
push
cdq
sbb
sbb
inc
enter
test
xor
test
out
inc
jnp
movs
pop
loop
call
adc
in
lds
or
test
and
cmp
jg
jmp
push
cld
test
enter
cmp
test
jecxz
lds
xor
aas
dec
add
call
test
xchg
add
adc
sti
sub
inc
std
mov
aam
or
stc
pusha
hlt
xor
enter
push
pop
stos
ins
xchg
adc
mov
ffreep
and
icebp
jb
mov
xor
ins
rep
icebp
xlat
rcl
dec
or
xchg
cmp
add
in
push
inc
add
pop
enter
pop
pop
jb
sub
test
xchg
mov
cmp
mov
mov
pop
xchg
pop
push
mov
fmul
lods
push
out
xchg
inc
call
in
call
daa
mov
shl
(bad)
retf
cmp
adc
cmp
test
sub
rcl
sbb
cmp
push
out
sub
push
mov
scas
dec
mov
inc
cmps
adc
jecxz
ret
bnd
aam
mov
push
push
clc
test
push
daa
mov
push
sub
or
sub
inc
xchg
jl
push
add
xchg
sbb
lahf
xchg
clc
add
push
mov
and
cdq
or
(bad)
sahf
add
fs
fisubr
inc
adc
add
fcom
jecxz
fimul
xor
add
dec
adc
ja
call
push
ins
jg
xor
dec
jae
dec
sub
in
jno
loope
rol
ins
adc
or
(bad)
mov
fnstcw
xchg
int3
retf
or
adc
push
mov
fs
iret
inc
or
xchg
mov
aam
cmc
cld
jnp
retf
xchg
sub
xchg
sbb
(bad)
mov
mov
push
int3
ins
enter
mov
sqrtps
sub
push
cdq
test
in
mov
and
retf
and
addr16
adc
movs
mov
mov
add
adc
pop
mov
add
jns
sub
sbb
cmp
mov
pushf
sub
dec
imul
(bad)
cmc
dec
inc
jo
test
cwde
mov
inc
add
jb
cmps
mov
pop
lods
mov
dec
cmp
lahf
xchg
sahf
scas
xchg
lock
leave
push
mov
(bad)
not
nop
cmp
leave
mov
bound
or
call
adc
or
inc
or
retf
xchg
mov
fdivr
fisttp
out
mov
pusha
xchg
das
jne
mov
and
shl
imul
nop
sub
add
lods
in
in
bound
ret
(bad)
shl
sub
xchg
adc
or
stos
shr
arpl
sub
jmp
mov
imul
push
jmp
mov
mov
ret
add
jecxz
fcompp
lahf
adc
lea
rcl
fimul
jp
enter
ins
int
(bad)
rcl
hlt
jmp
out
push
pushf
inc
push
int
stc
xor
outs
cmp
(bad)
pop
into
shl
and
int3
sbb
push
and
nop
lods
not
mov
mov
hlt
hlt
call
sti
scas
outs
loope
pop
pop
pop
adc
outs
inc
fs
ja
lods
into
(bad)
cmp
dec
mov
cli
inc
mov
mov
sub
je
lods
fimul
pop
aad
sbb
adc
push
js
xchg
lea
fcmove
mov
fisttp
sub
add
cmp
sahf
push
popf
inc
int3
dec
mov
fld
and
dec
test
sahf
pop
ret
cmp
push
popf
and
test
or
push
fild
xor
rcr
push
adc
retf
cmp
mov
xchg
mov
je
push
cmp
hlt
cwde
fwait
jg
mov
push
int3
loope
bnd
cmp
push
xor
xor
sbb
push
imul
fwait
pop
repnz
fisttp
push
imul
jmp
into
xchg
cmp
test
add
daa
dec
pop
pusha
sbb
(bad)
push
xor
cs
bound
imul
and
inc
sbb
test
inc
retf
push
es
(bad)
cld
jnp
pop
jb
xchg
jo
adc
rcl
push
mov
sahf
pop
cmp
or
pop
mov
or
dec
pop
mov
js
pushf
loopne
adc
out
jp
movs
imul
sahf
inc
adc
rcl
retf
(bad)
jmp
adc
inc
lods
nop
aas
ds
sub
popa
cmp
or
lock
or
aad
inc
push
push
adc
push
int
cmps
inc
cmp
dec
jno
xchg
arpl
in
add
and
sub
cmp
adc
stc
loopne
repz
dec
cmps
mov
repnz
imul
dec
scas
sub
push
gs
pop
sbb
jb
int3
push
stos
and
popf
das
loope
cmp
(bad)
dec
xor
sbb
cs
pop
(bad)
xchg
add
je
in
xchg
jmp
jp
adc
jbe
inc
into
popa
xlat
inc
arpl
ret
bnd
retf
in
pop
not
xchg
xchg
push
sbb
(bad)
out
pushf
cli
mov
inc
clc
sti
adc
inc
cmps
and
ins
jno
jne
movs
cmp
pop
xchg
or
fldlg2
and
ror
xchg
sub
in
and
(bad)
and
mov
xchg
int
xchg
pop
mov
sub
sbb
adc
(bad)
cmp
push
test
jg
jp
lods
out
sahf
call
add
sub
fdiv
xchg
add
in
push
bound
retf
pop
dec
push
push
pop
cmps
mov
push
push
xor
ins
jge
sbb
int
jp
xor
jo
mov
jb
xchg
int3
mov
adc
cli
sar
cmc
data16
movs
nop
add
sbb
popa
pop
adc
pop
push
cmps
mov
cmp
jbe
cmp
shl
cmc
mov
and
sbb
xchg
or
fld
retf
div
mov
sbb
fisttp
shl
popf
ret
in
push
aam
xchg
pop
add
cmc
jp
pop
mov
icebp
lods
fdiv
inc
dec
push
das
or
mov
in
pop
pop
sub
mov
add
dec
outs
out
dec
fidiv
pop
mov
mov
sub
push
pop
and
cld
jmp
test
popf
mov
test
repnz
sbb
sbb
jo
mov
test
mov
imul
in
cld
retf
push
dec
cmp
inc
push
cmps
push
test
cmp
xor
sub
dec
dec
dec
and
xchg
dec
sub
and
lahf
cmc
stc
aas
pop
inc
scas
hlt
mul
jae
(bad)
cmps
mov
cmp
sahf
cmp
pmaddwd
(bad)
ficom
push
mov
dec
xor
popa
mov
mov
movs
ins
or
inc
psadbw
pop
and
pop
aaa
mul
lahf
sbb
mov
sub
jbe
rcl
std
xor
xor
dec
loope
repnz
sahf
jg
cmp
sub
xchg
test
mov
or
inc
sti
iret
mov
pop
or
jmp
in
and
inc
cmp
add
dec
sbb
mov
sbb
add
movs
xchg
lahf
adc
(bad)
and
dec
pop
inc
(bad)
pop
sahf
cmp
nop
test
(bad)
stos
mov
inc
loop
add
imul
sbb
aad
js
loop
jns
shl
mov
aaa
outs
retf
jmp
stos
ret
add
cdq
adc
movs
adc
mov
push
clc
std
fcom
hlt
out
push
lods
fcmovbe
mov
and
popa
adc
in
sub
arpl
jb
dec
pusha
pop
sub
pop
int3
(bad)
or
or
cli
mov
dec
or
jns
jl
and
adc
mov
jo
in
sbb
test
mov
pusha
sbb
cmp
pop
data16
pop
mov
pusha
inc
adc
sub
cmc
pop
in
stos
or
jmp
cli
movs
std
out
pushf
jbe
jmp
xor
sbb
retf
aam
sbb
mov
jecxz
pop
jecxz
xor
shr
add
adc
call
sbb
push
sub
pop
fnstcw
test
jo
push
xor
push
cmp
iret
ds
aas
iret
mov
retf
icebp
push
xchg
into
mov
(bad)
pop
jge
dec
mov
movs
mov
arpl
and
neg
mov
pop
add
cmc
cmps
cmp
add
mov
pop
jecxz
fnstsw
cmp
jmp
cli
shr
mov
sbb
mov
jmp
test
or
jmp
es
aam
push
pop
cmp
adc
jb
in
sbb
stos
shl
in
xlat
test
ja
movs
mov
(bad)
mov
or
mov
jb
fmul
inc
sbb
adc
cmp
fidivr
cs
js
outs
jne
and
sub
bswap
mov
rcr
sti
aaa
sahf
(bad)
aam
mov
and
enter
dec
dec
cmps
nop
jg
test
icebp
xor
add
scas
inc
push
sub
sbb
xor
add
jmp
leave
clc
jmp
dec
push
pop
shr
mov
enter
jmp
jnp
(bad)
mov
and
pop
or
cmp
fcmovnb
out
pop
xchg
test
jb
and
lds
push
repnz
inc
lahf
arpl
jb
retf
cmps
popa
ds
push
pop
push
popa
xchg
cmp
add
inc
inc
mov
jmp
mov
mov
imul
mov
(bad)
sahf
jge
jmp
test
jle
pop
xor
shr
or
jl
call
rcr
(bad)
movs
movs
rcl
xchg
(bad)
leave
add
xchg
call
sub
sbb
xor
jge
fisubr
or
dec
push
push
xor
test
add
inc
mov
cmps
cmp
xchg
sub
xor
fwait
xor
stos
cmp
cmp
in
pop
out
mov
dec
fwait
pop
ds
lods
push
fs
jl
pop
inc
test
test
adc
mov
push
daa
std
stos
(bad)
add
add
inc
pop
loop
mov
inc
dec
jb
mov
push
ror
sti
fisubr
outs
sahf
cmp
dec
aas
ret
cwde
xor
dec
lea
mov
sbb
mov
sbb
or
push
adc
push
mov
cmp
inc
jne
pop
inc
shl
mov
jmp
add
add
inc
sti
fldcw
sbb
loopne
inc
fcmovnb
dec
in
scas
dec
add
enter
xor
cmp
dec
test
dec
add
sbb
pop
sti
and
xor
xchg
adc
add
sub
sub
sub
xchg
jne
xlat
adc
(bad)
dec
inc
xor
xor
retf
adc
xchg
xor
mov
sbb
movs
inc
add
or
xchg
jns
add
cmps
jb
arpl
add
mov
cwde
lds
push
push
repz
push
or
imul
adc
jo
push
ja
imul
lds
xchg
sub
or
lahf
mov
(bad)
mov
loop
push
ss
or
cs
add
cmp
es
xor
bswap
cmc
mov
inc
sub
sbb
xchg
aad
push
and
xchg
fadd
inc
in
stc
out
and
sbb
leave
sbb
les
mov
or
enter
xchg
mov
pop
adc
jbe
sahf
ror
xchg
mov
sbb
inc
imul
lahf
retf
mov
jge
inc
xor
xchg
sub
add
nop
xchg
iret
dec
sub
adc
adc
retf
cmc
mov
xlat
fmul
je
cmps
daa
mov
cdq
xchg
jmp
out
jmp
movs
(bad)
fstp
jmp
ret
scas
xchg
push
pusha
sbb
fcomp
mov
mov
xchg
out
sub
pop
data16
jecxz
dec
xor
ins
(bad)
dec
inc
push
repz
cmp
std
jecxz
iret
sub
xor
and
shl
lea
push
sub
inc
xchg
(bad)
leave
cwde
int
dec
frstor
popa
xchg
mov
aad
mov
add
push
rcr
pop
(bad)
icebp
ret
cmp
add
(bad)
dec
pop
loopne
cwde
and
push
add
mov
cmp
xor
clc
js
test
inc
jnp
gs
imul
mov
dec
cmp
push
dec
lea
jno
xor
jnp
frstpm(287
lahf
addr16
mov
aad
pop
mov
in
test
shr
sahf
dec
fucomp
rcr
mov
in
rcr
and
cmp
aad
ja
pop
mov
iret
out
in
sub
(bad)
pop
call
aam
mov
cs
cmp
inc
jecxz
outs
jnp
int
fwait
sub
sub
dec
in
add
and
push
stc
stc
hlt
cmps
pushf
loopne
imul
int
pop
lds
push
push
add
adc
add
test
retf
adc
add
push
pop
adc
daa
fdiv
mov
retf
or
xor
cmps
cmps
gs
mov
in
xchg
jmp
cmp
pusha
ret
(bad)
and
xchg
fdivr
push
push
and
cmps
xchg
stos
mov
sub
jo
jbe
pop
dec
ds
mov
or
(bad)
sub
iret
cmps
inc
popf
mov
cli
loop
mov
add
xor
or
mov
jp
push
sub
pop
hlt
test
pop
cmp
cmp
outs
sub
xor
out
xchg
xchg
pop
jbe
or
mov
cmp
(bad)
and
and
mov
imul
sub
clc
js
cdq
loop
pop
aam
sbb
dec
cmp
fist
push
adc
sub
or
inc
loopne
mov
cmps
call
inc
btr
call
sub
push
mov
push
loop
(bad)
popa
fwait
sub
cmp
sub
or
jle
cs
lods
push
mov
add
out
add
xor
xchg
hlt
movs
(bad)
sbb
sbb
mov
mov
stos
dec
js
xchg
xchg
push
xor
scas
in
push
imul
mov
cld
clc
lock
dec
int
in
lods
and
sub
sbb
sbb
iret
mov
daa
add
push
mov
gs
into
test
adc
dec
sbb
and
cmps
fst
xchg
ret
pop
arpl
xchg
shl
xor
xchg
push
sbb
enter
and
inc
xchg
mov
into
repnz
adc
push
and
or
cmp
frstor
and
inc
cmps
retf
push
xchg
and
arpl
pop
add
stc
cld
mov
dec
cwde
cmp
inc
add
in
lock
push
ja
pop
retf
adc
aam
lods
xor
or
add
test
ins
inc
and
movs
(bad)
jge
mov
bound
xchg
push
adc
cmp
jecxz
xor
push
fucomp
push
mov
dec
ins
inc
movs
mov
jmp
xor
popw
and
std
lods
pusha
jno
dec
pop
sub
daa
out
sub
pop
dec
imul
cmc
mul
jecxz
dec
or
ja
outs
xchg
popa
std
fnstsw
sub
mov
and
or
imul
stos
fs
jp
pop
and
aad
push
inc
xor
push
mov
test
aam
test
(bad)
mov
cmps
push
and
cs
cmps
dec
ror
add
pop
pop
imul
adc
jge
jo
dec
int3
int
xor
ds
jmp
xchg
dec
(bad)
mov
jno
mov
cmp
add
(bad)
push
(bad)
out
and
xlat
(bad)
cmps
cli
vphaddbq
test
adc
xchg
ret
add
mov
jnp
(bad)
dec
(bad)
and
adc
inc
mov
ins
imul
inc
mov
mov
sub
out
inc
cs
cmps
xchg
adc
in
test
pop
loope
(bad)
mov
ss
sub
xor
jp
cmp
std
int
les
fnsave
or
mov
ror
fwait
fs
sub
xchg
sub
and
ins
and
sbb
loop
mov
bound
ins
xor
movs
pop
punpckhwd
mov
xor
xor
push
imul
rcl
movs
adc
sahf
fwait
or
fdivr
pop
dec
pop
pop
inc
push
or
(bad)
cmc
not
push
pop
in
repz
aas
iret
out
dec
(bad)
sbb
jmp
sbb
test
retf
xchg
dec
daa
cmp
aas
pop
hlt
mov
pusha
ret
shl
or
xchg
jge
inc
mov
movs
xchg
mov
fiadd
retf
(bad)
sar
add
in
jmp
push
(bad)
xor
inc
test
xor
sub
lock
ja
jne
pop
je
mov
xchg
psubb
xchg
mov
lods
std
(bad)
fnsave
shl
cmps
mov
dec
pop
in
pop
jp
xchg
sbb
mov
mov
xchg
aam
mov
psrld
out
(bad)
mov
dec
bound
or
mov
aas
sub
repz
adc
mov
inc
les
pop
dec
addr16
push
xor
push
jo
cmp
cmp
cmp
int
or
data16
sbb
rol
pop
mov
xor
push
outs
or
jecxz
(bad)
cmps
mov
enter
imul
retf
xlat
repz
movs
in
test
outs
and
ret
sbb
mov
add
add
jmp
xchg
push
shl
(bad)
not
mov
mov
les
fdiv
stos
mov
xchg
jbe
pop
jnp
jne
push
popa
test
ret
sub
aam
gs
lods
fcom
loopne
add
cmp
cmp
sub
mov
adc
mov
adc
pop
rcl
loope
movs
cmps
test
sub
cmp
in
xchg
pusha
cmp
data16
test
pop
push
lea
sub
aam
in
scas
aas
ret
adc
and
cmp
inc
pop
jae
push
dec
and
in
jge
mov
popa
imul
mov
and
movs
arpl
mov
push
cmp
mov
out
mov
xchg
jge
jmp
dec
add
repz
aam
fnstsw
mov
cs
pop
in
jg
pushf
add
pop
push
popa
retf
dec
push
sub
dec
aam
ret
rol
sub
cmp
sbb
mov
dec
and
dec
dec
into
xchg
inc
enter
rcl
out
xlat
ror
mov
or
push
pop
jg
sub
xor
push
sub
jns
aas
push
int
repnz
or
jle
js
jg
mov
leave
not
cwde
mov
ss
cmps
repnz
ds
test
mov
push
jmp
sub
imul
add
imul
into
fsub
dec
(bad)
jnp
xchg
jo
add
xor
rcl
js
push
repnz
mov
call
sub
inc
sahf
cmp
mov
push
dec
adc
hlt
xchg
fstp
mov
mov
jo
fld
int3
test
test
gs
mov
sbb
cs
xor
cmp
in
movs
mov
jb
ins
sbb
loopne
pop
dec
xchg
mov
or
jmp
(bad)
lock
push
xchg
retf
js
test
push
ds
(bad)
xchg
sbb
in
xchg
fidiv
sbb
inc
adc
mov
sub
push
inc
rcl
mov
mov
in
call
bound
(bad)
mov
adc
push
and
test
xor
sar
stos
xchg
jbe
mov
cmp
pop
and
jne
sti
mov
xor
mov
mov
xchg
add
mov
sbb
lahf
adc
mov
daa
outs
inc
inc
dec
int3
arpl
ds
out
ds
adc
dec
aad
fidiv
test
cdq
jnp
int3
mov
aam
dec
mov
mov
jmp
mov
ss
sbb
(bad)
fnsave
pop
pop
stos
push
xor
cli
fs
adc
pop
arpl
lds
cmp
or
(bad)
inc
adc
cmps
jo
retf
jge
fidiv
sub
ins
stc
add
sub
xor
pusha
(bad)
mov
mov
push
(bad)
push
out
icebp
mov
das
jae
(bad)
push
fwait
lods
mov
(bad)
xchg
pop
jae
test
mov
call
sub
cmps
adc
inc
inc
jbe
push
push
ret
fsub
mov
mov
pop
in
ja
scas
out
ins
push
fs
adc
sbb
jb
je
aam
or
int
retf
fstp
push
lods
in
and
add
pop
xchg
adc
push
sub
xor
aad
mov
movs
push
mov
cmp
fwait
(bad)
sbb
cwde
lea
aam
add
or
xchg
mov
pushf
mov
cmp
std
and
(bad)
scas
xor
mov
in
jb
retf
adc
xchg
add
mov
cmp
adc
aaa
mov
xor
jo
call
or
mov
out
pop
sti
and
dec
aad
sub
aas
or
sti
inc
imul
in
lahf
mov
sti
mov
xchg
mov
inc
mov
jb
ret
push
test
push
push
aaa
out
dec
test
retf
push
out
je
in
jecxz
stos
cmps
mov
xor
rcr
mov
sub
dec
retf
jg
in
int
pushf
imul
sti
addr16
lahf
icebp
imul
jmp
xlat
jge
in
bound
add
pop
mov
push
and
movs
add
inc
inc
aas
leave
shl
test
push
outs
stos
jge
mov
adc
fcomp
sbb
pop
cmps
scas
outs
sbb
sub
aam
mov
sub
add
rcr
pop
mov
pop
aaa
pop
dec
popa
dec
fistp
hlt
sbb
in
jg
or
cwde
bound
pop
pop
stos
call
mov
pop
aad
push
loope
pop
inc
mov
add
or
scas
rol
sub
cmp
ins
pop
or
dec
jmp
out
xor
mov
mov
iret
retf
mov
cmp
dec
jo
loope
inc
and
imul
sbb
test
xchg
mov
cmps
outs
fcomp
and
mov
bndldx
sahf
pop
je
mov
popf
and
or
jb
or
pushf
sub
(bad)
jns
cmp
js
push
(bad)
push
mov
jnp
mov
pop
ret
loop
(bad)
jge
jle
pushf
std
popa
sti
(bad)
xchg
not
add
lahf
push
sbb
je
sbb
popf
push
stc
cmc
fld
ins
jl
(bad)
xchg
pusha
sub
add
loope
push
movs
sbb
fsubr
inc
mov
or
mov
icebp
scas
jecxz
test
sub
pop
jbe
fimul
outs
mov
fild
icebp
pusha
stos
rcl
cdq
mov
sbb
fadd
fisttp
or
cmp
int
loopne
pop
arpl
xchg
push
add
mov
in
jmp
lods
sub
(bad)
fimul
(bad)
fsub
fidiv
(bad)
in
(bad)
jno
(bad)
inc
inc
cdq
or
loope
imul
lea
imul
neg
out
mov
jle
mov
push
inc
ja
ret
arpl
jno
dec
or
mov
inc
push
mov
rol
xor
push
jo
jo
mov
jmp
sub
pop
pop
or
or
pushf
je
ins
mov
div
adc
dec
ret
fld
push
mov
je
gs
inc
and
das
xor
and
iret
loop
iret
lods
lahf
cmovbe
les
loop
push
fsubr
mov
repnz
jl
inc
xor
mov
jmp
mov
aam
ror
xor
dec
sub
sar
add
jnp
(bad)
lods
int
xchg
xchg
push
dec
(bad)
xor
(bad)
fadd
inc
jle
in
push
inc
retf
out
mov
xor
mov
(bad)
aam
mov
push
shl
daa
shl
push
icebp
leave
cs
leave
shr
xchg
and
xor
xchg
mov
icebp
mov
push
and
xchg
push
or
adc
mov
mov
lea
push
js
sub
add
mov
push
mov
in
jl
in
adc
xchg
and
adc
mov
xchg
push
pop
mov
clc
cmps
iret
rol
dec
daa
adc
push
push
or
call
add
stos
jns
xchg
outs
lds
add
inc
mov
ins
adc
jno
stos
pop
ret
mov
or
push
add
xlat
lods
test
sbb
inc
movs
aaa
ret
pusha
pop
shl
push
aad
(bad)
fs
xchg
jns
(bad)
loop
div
and
fs
ds
push
cmp
popf
inc
retf
js
cld
jge
jbe
jae
mov
dec
sbb
pop
mov
inc
lods
inc
fnstsw
ins
mov
in
xchg
ins
mov
jns
push
mov
inc
adc
add
jo
or
out
sbb
daa
or
fild
or
mov
xor
aad
dec
rcl
rol
and
jmp
xchg
sbb
add
cld
sti
scas
xor
int3
sbb
ret
pop
or
push
and
daa
and
ret
ds
je
pop
retf
jge
loop
inc
push
fidivr
push
cdq
lea
ror
add
sar
in
push
stos
mov
bound
(bad)
leave
pusha
and
push
adc
push
cmp
cld
sti
arpl
aad
int
mov
div
mov
mov
dec
inc
or
cmp
popf
inc
call
pop
mov
mov
retf
test
movs
sub
fisubr
test
movs
test
pop
and
loopne
add
xor
jge
fisubr
call
cmp
aas
jmp
jae
mov
mov
std
scas
jne
pop
pop
outs
mov
and
sub
xchg
aad
out
mov
addr16
adc
jne
arpl
(bad)
pusha
jmp
push
cdq
cmp
in
fdiv
xor
cmp
adc
pop
imul
mov
xor
xor
add
dec
test
jp
mov
add
sub
add
pop
jbe
outs
mov
xor
fstp
fidivr
add
xor
mov
and
xor
aas
imul
sti
sar
nop
fcom
dec
cli
(bad)
retf
xchg
xlat
push
push
fwait
retf
aam
stos
push
mov
in
push
push
scas
(bad)
in
sbb
stos
fcom
in
cmp
ja
bound
mov
sbb
xchg
in
push
nop
(bad)
mov
jnp
rcr
xchg
sbb
add
add
sbb
retf
add
push
sub
fsub
xchg
cmps
sub
sahf
mov
inc
fcmovnb
fiadd
xor
jo
mov
(bad)
das
pop
frstor
(bad)
sub
cld
ds
adc
leave
repz
jge
in
cmp
movs
mov
aas
ja
and
add
push
push
imul
xchg
retf
les
dec
dec
push
add
sti
sub
imul
mov
jo
cmc
test
xchg
retf
test
xchg
neg
ins
mov
mov
xor
(bad)
enter
or
stos
sub
mov
sbb
in
pop
retf
dec
inc
dec
aas
push
outs
jb
leave
mov
jmp
xor
or
xor
repnz
es
out
fldcw
mov
mov
push
xor
(bad)
sar
mov
(bad)
pop
inc
pop
jp
out
sahf
sahf
push
or
into
retf
icebp
inc
dec
adc
hlt
dec
and
movs
adc
outs
jge
push
loope
dec
adc
jecxz
add
xor
rcr
lods
inc
scas
push
adc
pop
mov
cmp
je
add
mov
pop
adc
dec
jp
and
loop
and
xchg
jmp
out
je
mov
push
stos
sbb
and
fdiv
dec
push
and
and
add
fwait
cmp
mov
mov
adc
mov
inc
mov
mov
out
mov
push
inc
xchg
ficomp
xor
xchg
and
stos
dec
pop
inc
push
pop
dec
test
add
fwait
ins
cld
pop
pop
and
push
mov
adc
(bad)
mov
in
push
xchg
xor
out
inc
mov
mov
jnp
fnstenv
je
fs
(bad)
shr
nop
mov
jne
mov
adc
sar
sub
adc
mov
cmp
je
dec
leave
mov
outs
jbe
jg
test
cmps
fadd
jg
bnd
mov
fmul
mov
stos
jb
pushf
out
cmp
mov
and
popaw
mov
adc
dec
ror
sbb
mov
loope
call
inc
scas
inc
mov
sbb
movs
ds
inc
std
cs
cmp
in
std
leave
or
mov
and
cmp
pop
fnstcw
fs
and
push
push
xchg
ins
sub
xchg
in
mov
sub
(bad)
inc
ins
out
pop
mov
sti
mov
loope
clc
jmp
scas
jl
xchg
rol
cmp
dec
stos
cmps
lods
loopne
xor
pop
pop
fistp
jns
mov
adc
scas
mov
mov
pop
inc
add
js
(bad)
inc
inc
jo
fstp
mov
inc
lea
movs
retf
es
cmps
imul
ss
or
aam
mov
inc
and
push
pop
pushf
(bad)
movs
scas
movs
xchg
cwde
push
bound
cmp
mov
stc
mov
pop
push
mul
sbb
mov
(bad)
jnp
xor
mov
mov
push
add
dec
call
(bad)
push
inc
mov
leave
push
mov
mov
cld
xchg
in
sti
je
dec
xor
pop
mov
sbb
int
xlat
pop
jp
xor
adc
fs
fiadd
out
xor
adc
xor
inc
xor
mov
movs
xchg
mov
jg
cmpxchg
sbb
push
(bad)
int
add
dec
and
imul
fs
ins
dec
push
inc
je
xchg
into
(bad)
xchg
or
push
(bad)
out
jle
test
in
gs
fsubr
cli
enter
cmp
into
xor
sub
add
out
stc
inc
xchg
leave
and
inc
loopne
outs
clc
cli
(bad)
repnz
outs
mov
aas
mov
sar
cmc
and
es
add
(bad)
mov
outs
and
or
cmp
lock
mov
sub
xchg
jle
and
cmps
xlat
std
out
cmp
inc
lea
add
cli
xchg
gs
scas
test
and
cmc
cmp
vphadddq
mov
sbb
pop
xchg
jle
clc
retf
add
mov
fldcw
sahf
movs
std
or
pusha
fidivr
inc
test
das
ins
or
mov
xor
nop
push
push
(bad)
movs
ror
mov
inc
aas
inc
cs
pop
fsubr
jp
dec
push
adc
imul
test
sub
or
dec
out
adc
sahf
(bad)
loop
cld
leave
repnz
sub
jecxz
test
and
mov
cmp
addr16
shl
mov
xchg
test
jmp
dec
xchg
(bad)
xlat
xchg
(bad)
mov
mov
mov
neg
stos
neg
sub
mov
adc
inc
dec
and
shr
add
enter
cs
sbb
inc
adc
in
xor
mov
pop
sbb
das
lock
repz
xchg
push
fmul
push
js
jo
jle
jne
daa
jo
imul
imul
shr
and
cmps
sahf
mov
je
cmp
pop
xlat
fiadd
pop
ins
js
fsubr
mov
shl
or
movs
dec
fmul
mov
mov
adc
pop
xor
cld
inc
(bad)
mov
dec
xor
fadd
pop
or
outs
out
dec
xchg
dec
cmp
rcl
lods
add
into
sub
push
in
jo
sahf
xchg
cmps
ret
sar
rcr
adc
in
or
sbb
xchg
jmp
imul
mov
int
and
cmc
and
not
xchg
outs
jecxz
movs
imul
push
add
loop
xor
setg
cvttps2pi
cmp
sub
cmp
stos
sub
sbb
sub
sti
dec
cmp
xor
shl
or
cmp
loopne
arpl
xor
and
pop
push
lea
mov
sub
pop
add
aas
cs
(bad)
rol
out
pop
xor
mov
call
cmps
cmps
(bad)
out
cmp
dec
stc
cmp
push
mov
add
sub
popw
dec
fdivr
mov
mov
fdiv
inc
retf
push
bts
mov
jno
sbb
movs
inc
pinsrw
stc
loopne
inc
mov
sub
outs
cmp
arpl
js
call
mov
(bad)
push
out
mov
test
test
in
and
push
repnz
jmp
cli
sub
or
movs
popf
and
adc
lods
jp
jp
dec
sub
dec
and
jg
xlat
lods
mov
js
and
scas
cmps
inc
pop
test
ror
or
mov
push
fsubr
sbb
outs
cli
aam
push
cdq
or
repnz
scas
repz
jecxz
scas
push
(bad)
rcl
push
pop
fiadd
mov
cdq
ror
aas
fld1
out
(bad)
jns
imul
push
js
mov
out
rcl
aad
ror
dec
pop
xor
mov
lods
inc
inc
bound
mov
not
pop
inc
imul
ret
stc
jg
je
scas
mov
(bad)
dec
push
adc
hlt
add
sbb
arpl
mov
xchg
sbb
cmps
sahf
inc
and
lea
sbb
pop
add
jno
inc
aaa
fnstsw
push
adc
sub
inc
push
js
sub
call
nop
retf
push
add
xchg
scas
or
shl
push
(bad)
push
rol
mov
aaa
adc
inc
adc
loop
and
mov
fadd
lods
cmps
sbb
sbb
scas
cmp
xlat
adc
aad
nop
push
lock
mov
shl
les
cmps
cmp
dec
mov
test
dec
push
cmps
stos
dec
push
rcl
mov
test
pop
daa
xor
push
fcmovnb
mov
popa
stos
xchg
cmp
dec
sub
sub
pop
mov
enter
add
enter
adc
stc
sub
arpl
arpl
fwait
sub
or
pop
mov
stos
inc
cdq
or
lahf
cmc
inc
inc
mov
sub
xor
dec
ins
xor
les
dec
cmp
fsubr
xor
loope
add
mov
inc
jb
or
cmp
iret
adc
dec
push
xor
push
push
push
ret
pop
mov
les
stos
test
sbb
pop
ret
retf
fs
movs
push
add
(bad)
(bad)
outs
pop
pop
or
adc
cmps
imul
retf
pop
pop
pop
xor
xchg
and
in
enter
sub
je
push
mov
pop
bound
dec
stos
(bad)
frstor
inc
push
cmp
test
lahf
sbb
sar
or
jecxz
hlt
cmp
test
inc
push
int3
jo
xchg
inc
lea
xchg
mov
in
cmp
ins
outs
imul
imul
xor
shl
outs
or
inc
sbb
cmp
mov
daa
dec
daa
sbb
cld
(bad)
push
mov
push
mov
call
adc
or
cli
cs
sub
not
in
mov
imul
movs
test
sub
loopne
hlt
mov
mov
mov
push
xor
test
sahf
inc
dec
daa
pop
dec
rol
dec
in
sub
and
or
(bad)
fnstcw
out
xchg
xchg
push
ins
aam
mov
cdq
jae
inc
dec
add
or
mov
mov
lahf
xchg
xor
imul
dec
dec
push
and
mov
xchg
call
xchg
cs
adc
fwait
mov
cs
icebp
jge
sti
je
dec
scas
movs
push
xchg
sbb
add
leave
call
scas
sahf
dec
fimul
repnz
fcomp
hlt
mov
sub
inc
or
and
in
cwde
push
adc
fldcw
repnz
into
mov
push
adc
leave
mov
ret
mov
cld
(bad)
fisub
cmp
test
rcl
iret
movs
mov
test
cmp
sahf
pop
cs
jmp
push
sbb
into
ins
scas
xchg
pop
test
pop
mov
or
ins
mov
and
pop
iret
repz
(bad)
imul
inc
scas
test
sbb
cwde
rcr
and
sbb
adc
dec
sbb
push
sub
xchg
dec
rol
xchg
cmps
cli
cmp
out
iret
sub
push
stos
mov
jecxz
test
es
mov
add
xchg
lea
ficom
sbb
adc
and
push
ret
outs
push
popa
add
retf
jb
idiv
popa
ds
mov
push
and
daa
clc
imul
(bad)
add
pop
and
cmc
daa
lahf
jnp
cmp
jge
sbb
push
or
adc
add
lahf
pop
aas
mov
jbe
sar
(bad)
cli
inc
scas
jle
fabs
xchg
(bad)
mov
lock
cmc
push
jge
pop
mul
bnd
xchg
fistp
loopne
sbb
aad
hlt
cli
pop
std
jecxz
mov
jp
push
test
push
imul
inc
mov
push
jo
mov
jno
shl
cmc
jmp
pop
adc
and
ins
(bad)
inc
dec
into
dec
sbb
xchg
je
aaa
repz
inc
dec
and
arpl
push
arpl
mov
imul
retf
and
jbe
cmp
mov
mov
sub
icebp
or
jge
stos
mov
push
inc
sbb
sbb
sbb
aad
push
cli
ins
dec
adc
mov
in
sahf
sub
shl
cmp
or
lahf
cdq
inc
pop
inc
dec
fidiv
mov
jo
int
add
jmp
scas
cmps
fld
push
inc
inc
leave
sbb
and
xchg
les
rol
jno
pop
sti
(bad)
mov
ja
mov
adc
or
push
movs
test
add
pop
aas
cmc
jle
sbb
pop
sbb
retf
push
aaa
fadd
cmp
shl
and
add
mov
sar
jge
popf
cmc
ins
fstp
jl
cmp
inc
(bad)
mul
jmp
or
or
xor
cwde
loop
inc
and
ds
outs
call
jmp
ret
pop
loope
fwait
inc
cdq
popa
or
aad
pop
adc
lea
xor
and
int
and
pop
inc
add
popa
repnz
sub
jne
repz
xchg
(bad)
shl
outs
jno
imul
or
xlat
mov
out
xchg
cmp
cmp
sahf
jne
mov
mov
out
jle
sahf
cmp
loope
or
xor
cmp
or
cmps
mov
cmc
hlt
jmp
movs
xor
dec
xor
cmc
sar
or
pop
lahf
push
mov
xor
sbb
sbb
arpl
shl
loopne
and
in
mov
dec
inc
retf
and
pfmin
ficomp
push
fst
or
imul
jecxz
jno
xor
cmp
icebp
xchg
add
aas
lahf
gs
sub
ins
dec
aam
rcr
cbw
cmp
mov
or
adc
adc
mov
out
les
mov
xchg
pop
pusha
scas
pop
push
mov
sar
add
mov
in
int3
dec
pop
das
pop
mov
ret
xchg
in
popa
mov
adc
dec
mov
xchg
dec
xor
sahf
jne
xchg
in
int
xor
pusha
inc
push
cli
loop
(bad)
sar
add
cmp
and
ja
mov
icebp
and
mov
ret
movs
inc
sbb
sbb
xor
jl
or
jno
repz
out
lea
mov
es
sahf
add
iret
and
xor
dec
iret
pop
cmp
std
cmp
push
mov
mov
pop
xchg
sub
std
pushf
js
loopne
cmp
jg
sub
mov
jge
inc
cmp
sbb
lods
clc
pushf
movs
adc
(bad)
in
wrmsr
inc
test
mov
jmp
sbb
inc
dec
jb
xchg
mov
mov
or
cmp
cmp
sar
pusha
enter
mov
xor
jp
iret
movs
pop
aas
addr16
shl
sub
cmps
data16
adc
push
mov
or
xchg
xor
mov
stos
cmp
scas
fwait
je
mov
jmp
xchg
jg
dec
ins
in
es
push
cdq
adc
iret
sbb
xchg
jmp
dec
xchg
push
mov
mov
dec
in
in
xor
mov
sbb
stos
call
add
stc
mov
retf
imul
and
sbb
push
inc
js
pop
imul
jecxz
cs
stc
fistp
push
sti
pop
jns
cmp
cs
ins
in
mov
test
push
dec
sbb
lea
retf
inc
out
retf
test
lods
sahf
out
fadd
test
inc
pop
sbb
scas
push
ja
jnp
icebp
outs
mov
pop
jbe
lea
imul
xchg
mov
int3
jmp
jbe
ror
jnp
mov
inc
adc
xchg
pusha
mov
sbb
pusha
es
or
in
mov
std
push
mov
inc
(bad)
mov
scas
xchg
add
pop
mov
xchg
cdq
push
pop
out
mov
pop
pop
fnstenv
(bad)
and
pop
inc
es
mov
gs
mov
xor
fistp
push
adc
fdiv
aad
loop
jo
or
jo
push
and
mov
jno
scas
mov
(bad)
fcmovnb
out
(bad)
xor
or
add
sub
clc
test
(bad)
inc
push
dec
mov
loop
dec
adc
lods
push
adc
adc
pop
mov
mov
fistp
jbe
js
sbb
movs
shr
jno
inc
pop
push
mov
sbb
xchg
adc
in
dec
sbb
mov
xchg
jnp
push
or
cmp
call
pop
add
dec
and
popa
push
sbb
imul
xor
sbb
pop
inc
imul
lods
jb
or
cld
fwait
sti
xor
push
jno
in
movs
jmp
rep
cli
call
stos
cmc
pop
(bad)
fdiv
inc
aas
sub
rol
lds
mov
call
push
mov
sbb
cmp
and
jb
rcl
das
sub
mov
mov
dec
pusha
inc
push
ret
fwait
lds
mov
dec
jge
outs
iret
mov
jl
sub
pop
(bad)
imul
jo
inc
jmp
sbb
xchg
inc
add
es
in
jge
sbb
or
loop
movs
(bad)
les
scas
loopne
mov
stos
mov
and
clc
jnp
cmp
imul
push
jo
xor
add
fwait
cdq
hlt
ret
mov
dec
repnz
dec
push
imul
(bad)
jge
mov
outs
outs
popa
lock
cmp
mov
lods
je
and
retf
adc
adc
mov
cmps
dec
push
sub
int3
imul
adc
push
test
jmp
mov
rcl
xor
xlat
retf
add
push
ds
mov
xchg
jne
cmp
jno
mov
mov
and
xchg
inc
bound
jl
imul
shl
int
push
and
jnp
mov
dec
icebp
or
xchg
stos
cwde
and
cmp
sti
cmps
ds
mov
ret
push
ss
stos
into
cmps
inc
push
cmps
mov
or
push
je
fcmovnu
add
adc
and
sbb
leave
loope
push
(bad)
push
or
jl
xor
push
ret
cdq
cdq
loop
mov
mov
mov
add
hlt
sbb
retf
or
sub
or
sbb
cmps
jg
push
inc
and
jne
stos
pushf
jbe
mov
mov
sbb
sahf
mov
mov
add
mov
iret
jecxz
sub
sub
xchg
adc
int3
adc
aas
dec
arpl
ret
jge
movs
arpl
bound
shl
pop
xchg
xor
not
ins
or
lods
cmp
popf
pop
pop
lahf
xchg
and
sub
inc
xor
cmp
fsubp
adc
adc
imul
jmp
jmp
xchg
out
sbb
adc
mul
adc
add
pop
das
cmp
cmc
cmps
lahf
lahf
inc
ret
mov
aaa
push
cmps
and
rol
xor
xor
mov
cmps
fist
inc
cmp
push
xor
sub
push
cmp
push
xchg
pop
stos
xchg
outs
jmpw
mov
(bad)
icebp
mov
jl
cmc
in
jmp
sub
and
fs
test
aas
outs
fnop
stos
mov
mov
xor
and
and
mov
arpl
mov
lods
add
dec
aaa
(bad)
repnz
mov
out
mov
xor
(bad)
xchg
stc
cli
jg
mov
test
enter
cmp
jg
sar
bound
mov
(bad)
sbb
out
mov
test
les
sbb
and
cmp
inc
push
loopne
fld
mov
add
test
xor
test
inc
add
xor
in
mov
bound
push
gs
call
and
in
or
push
ret
xchg
pop
daa
ds
mov
retf
xor
push
lahf
inc
out
in
mov
int3
fcomp
dec
dec
mov
mov
inc
outs
xor
add
lds
and
shl
push
mov
cli
call
pop
pop
mov
jb
mov
jno
daa
std
xor
fwait
sbb
retf
xor
mov
dec
enter
(bad)
cmps
jmp
sub
clc
adc
push
xor
cli
add
(bad)
lds
enter
xchg
test
mov
pop
lds
movs
inc
aaa
and
and
push
mov
loopne
cmp
(bad)
rcr
(bad)
pop
std
fs
(bad)
mov
adc
cmps
cmps
xor
cmps
pop
fidiv
sub
and
or
mov
or
nop
sub
scas
adc
scas
inc
pop
push
ret
div
call
lods
mov
inc
or
xor
cmp
jnp
jb
movs
fadd
sbb
lods
adc
cmp
sub
test
sbb
xor
bound
xchg
movmskps
inc
jne
fwait
add
jg
fdivr
jmp
movs
cmp
mov
mov
pcmpeqw
push
nop
sbb
aaa
jmp
jne
nop
add
add
mov
xchg
xor
retf
or
mov
dec
sub
leave
sti
push
cmps
cmc
imul
add
mov
fs
adc
jno
popf
dec
mov
fist
mov
pop
xchg
or
call
aad
xor
and
push
test
add
jo
mov
out
pop
mov
fnsave
xchg
cld
iret
in
push
into
jnp
cmp
lea
inc
dec
and
lock
dec
sbb
jne
sub
lods
adc
mov
fsubr
push
pop
sub
movs
mov
mov
push
xor
jge
mov
movs
test
add
adc
inc
add
rcr
lahf
icebp
add
add
inc
jae
out
sbb
aad
mov
mov
mov
mov
jns
ins
inc
inc
xchg
add
clc
mul
inc
addr16
shr
ret
cmps
stos
leave
push
fadd
adc
add
(bad)
inc
test
cmovno
shl
and
cld
(bad)
iret
cmps
sbb
popa
jge
movs
test
lods
cwde
jge
push
or
pop
data16
lods
inc
push
scas
inc
fst
(bad)
(bad)
pop
cs
stos
sub
add
(bad)
pusha
stc
jne
call
fnstenv
pop
jmp
sub
sub
(bad)
loope
out
or
adc
pop
inc
gs
sbb
adc
rcr
dec
fld
mov
jle
xchg
repnz
in
xchg
xchg
jp
adc
cmp
fstp
pop
adc
sbb
xor
rol
xchg
ret
fs
scas
sbb
dec
iret
pop
push
push
div
push
mov
lock
scas
outs
xlat
jae
adc
jmp
in
repnz
pusha
fucomi
fnstenv
push
add
js
jle
lods
shl
xchg
fisubr
ret
cmp
or
push
mov
in
arpl
dec
cmp
ss
popf
pusha
pop
fwait
push
mov
pop
idiv
mov
xchg
loop
mov
jne
xchg
push
xchg
mov
xchg
hlt
cld
(bad)
pop
or
dec
mov
dec
int3
cmp
loope
repz
xchg
movs
mov
push
mov
pop
call
in
adc
pop
xor
inc
sti
mov
or
cmps
(bad)
adc
add
mov
xchg
test
and
push
(bad)
mov
repnz
mov
fdivr
or
push
and
fisttp
add
cmp
jg
movs
mov
mov
or
dec
sub
stos
adc
rol
add
sahf
dec
cmp
xor
xor
repnz
sub
gs
in
pop
test
imul
pop
test
push
push
sub
add
cwde
aam
and
add
inc
pop
add
cmp
aam
enter
(bad)
mov
sub
mov
cmp
int3
pslld
lahf
scas
adc
push
std
pushf
jmp
mov
push
gs
out
ds
lods
retf
pop
retf
jecxz
push
pop
aaa
jnp
fst
imul
jno
mov
out
inc
arpl
lock
mov
add
inc
sbb
adc
pushf
sub
jg
ja
inc
mov
mov
(bad)
repnz
adc
add
jg
pop
mov
jb
mov
fstp
nop
mov
ds
xor
ja
pop
or
or
mov
ins
cli
sub
push
or
adc
out
jecxz
scas
cmps
mov
addr16
ret
pop
aam
nop
pop
cli
jnp
out
ins
int3
pusha
leave
movs
leave
sub
shl
lods
sub
cmp
mov
and
imul
sub
test
inc
add
adc
pop
or
pop
mov
mov
add
fs
(bad)
loopne
lods
stc
hlt
fisttp
cmps
pop
das
rcl
lods
ds
add
add
cli
mov
in
(bad)
inc
or
sbb
xchg
shr
iret
mov
movs
add
mov
mov
outs
test
fcom
popf
jno
add
rcr
shl
ficomp
mov
jecxz
(bad)
fild
push
xor
dec
xchg
lods
jg
scas
ins
repz
or
push
pop
mov
jnp
push
pusha
or
mov
aas
mov
xor
cmp
outs
mov
xor
xor
cli
aad
dec
cmp
stc
not
out
div
and
cmc
shr
dec
and
cmp
add
in
pop
sbb
mov
pop
xor
cdq
stos
leave
xor
ror
arpl
adc
jmp
cdq
inc
lods
add
add
or
add
jae
pop
fld
(bad)
test
stc
push
mov
xor
iret
inc
sahf
gs
push
sub
cmps
lock
call
inc
rcl
cmps
add
(bad)
fidiv
frstor
enter
test
cmps
retf
add
mov
xlat
cld
sti
enter
(bad)
sub
in
or
mov
add
ds
js
push
arpl
lods
fcomp
add
adc
test
call
loopne
clc
push
or
js
arpl
inc
xchg
ror
out
mov
dec
inc
jbe
mov
pop
rcr
imul
xchg
xor
xchg
push
lahf
ret
mov
xor
das
ficomp
xlat
outs
imul
mov
or
cld
inc
not
(bad)
or
arpl
sbb
movs
enter
aas
loop
adc
mov
call
dec
inc
gs
mov
jmp
inc
mov
push
inc
add
stos
pop
push
and
out
mov
or
ret
or
outs
loop
pop
das
test
mov
cwde
in
aad
cmc
push
xor
pop
fwait
movs
icebp
int
xor
xor
sahf
or
mov
xchg
or
xchg
not
jge
mov
and
lods
sti
popa
cmp
scas
inc
adc
movs
or
das
pop
arpl
iret
mov
mov
(bad)
ror
scas
sub
adc
cmc
sub
into
adc
xchg
daa
jb
pop
pop
mov
(bad)
inc
add
mov
hlt
repnz
inc
dec
jo
lods
dec
and
iret
or
lahf
aam
inc
sti
leave
stos
jge
ret
dec
faddp
ret
pop
adc
mov
push
push
mov
mov
mov
pushf
out
in
out
fstp
pop
mov
sub
dec
jmp
push
push
push
push
push
push
push
dec
cdq
sbb
sti
cwde
faddp
fiadd
nop
xchg
dec
pop
mov
(bad)
sub
ds
jecxz
aas
cmps
aas
outs
std
movs
mov
mov
ss
test
adc
or
push
sbb
std
je
call
dec
gs
sbb
sbb
repnz
shl
dec
cmp
cmp
push
sub
sub
icebp
inc
push
inc
fadd
adc
leave
ds
jbe
fild
in
mov
cmp
not
inc
cmp
out
cld
jmp
fistp
jl
sbb
sub
mov
stos
sbb
mov
(bad)
not
sbb
mov
mov
jecxz
rcl
push
in
test
pushf
femms
mov
fcmovnu
cmp
ds
(bad)
pop
clc
inc
inc
test
mov
inc
les
stos
icebp
mov
shr
sbb
jle
mov
ss
mov
loope
(bad)
loope
shl
and
sub
jns
cmp
loop
test
jmp
push
pushf
test
pop
mov
es
and
push
imul
dec
mov
xchg
mov
pop
fdiv
mov
xchg
imul
mov
sub
add
and
mov
add
inc
cdq
fidivr
jns
sti
pop
xor
movs
cwde
push
push
inc
sub
mov
bnd
mov
inc
fdivr
xor
dec
in
out
and
jmp
jle
inc
inc
fisttp
mov
daa
mov
iret
arpl
push
push
jne
pop
sbb
mov
test
aad
sub
add
push
div
jg
sbb
adc
jns
aas
mov
dec
dec
or
and
movs
jb
sub
fdiv
out
or
jmp
(bad)
push
ins
inc
pop
cmps
cmp
aam
jge
cld
mov
out
sti
dec
mov
xchg
sub
ja
xchg
inc
aad
or
mov
rcr
xchg
loopne
dec
push
mov
sar
aaa
fstp
xchg
fidivr
call
sbb
test
movs
test
mov
outs
jns
movs
jge
mov
adc
outs
fisttp
inc
pop
or
xor
xor
mov
(bad)
mov
mov
mov
sub
stos
inc
cmp
and
mov
adc
push
mov
cmp
icebp
pop
lods
outs
jp
jmp
pushf
(bad)
xor
jg
xchg
dec
icebp
mov
mov
sahf
(bad)
shr
jno
fxch
pusha
mov
movs
xor
pop
mov
add
sti
into
pop
out
push
jno
sahf
loop
in
scas
jo
jmp
xchg
fstp
ror
outs
sbb
iret
idiv
mov
and
and
adc
sub
hlt
xor
aam
test
dec
enter
push
outs
xchg
fwait
xchg
xlat
cmps
cmp
pop
push
aad
push
push
inc
add
mov
cmp
out
repnz
mov
in
pop
add
inc
pop
sbb
inc
test
adc
add
cmp
mov
ss
push
mov
mov
push
mov
sahf
scas
sub
sbb
repz
scas
ficom
mov
loop
ret
sbb
push
xchg
jae
sbb
xchg
daa
imul
test
dec
xchg
loope
dec
adc
inc
or
xor
add
imul
xor
or
lea
test
pop
dec
or
xlat
fsubr
ja
(bad)
jmp
ins
imul
jl
cld
cli
lahf
mov
dec
pop
mov
mov
xor
push
mov
cmp
cmps
nop
push
mov
fstp
cld
movs
aad
lods
cmc
fwait
arpl
add
mov
sbb
loop
ss
ins
rcl
sar
lods
jnp
sbb
jb
fs
pop
mov
imul
je
mov
jl
sub
dec
movs
in
xchg
fwait
ss
idiv
sub
mov
(bad)
in
les
dec
sbb
push
xor
xchg
and
xchg
fstp
inc
pop
xchg
push
inc
dec
mov
stos
push
push
(bad)
(bad)
dec
sahf
jge
in
jno
retf
xlat
div
xor
sbb
adc
(bad)
mov
adc
iret
ds
cmp
mov
cmp
repnz
dec
test
xor
pop
cmp
jnp
shl
retf
mov
sub
xchg
test
push
mov
lods
inc
inc
mov
lock
daa
jmp
jo
out
mov
cs
pop
out
add
enter
pop
and
and
jne
sbb
push
scas
mov
sub
jb
sbb
pop
inc
nop
test
adc
inc
or
aam
cmp
ss
mov
cli
bound
or
(bad)
mov
stos
pusha
mov
adc
pushf
jne
jle
jnp
retf
sbb
cdq
inc
fdiv
mov
xor
pop
int3
pop
lahf
inc
ja
out
aas
jecxz
js
call
and
mov
push
sub
sub
inc
in
stos
jb
cmp
add
das
ffree
dec
sub
data16
add
(bad)
jg
mov
(bad)
sbb
xchg
(bad)
rcl
aam
push
adc
inc
or
ss
lea
retf
sub
xchg
out
fsubr
dec
xchg
sbb
sub
push
push
cmp
test
mov
dec
mov
imul
in
mov
xor
and
mov
mov
adc
in
div
aas
mov
sub
pop
xor
push
push
dec
mov
and
adc
add
jne
fsub
push
(bad)
and
xor
push
jns
xchg
sbb
mov
add
aam
add
in
and
mov
sbb
pop
push
add
xor
lahf
retf
lods
fnstsw
jo
cs
inc
sbb
ror
aam
dec
and
xor
push
jecxz
je
lods
push
push
sti
push
xor
adc
sub
sub
jp
fmul
fisubr
daa
test
retf
jno
inc
pushf
imul
inc
aad
mov
cmp
or
push
(bad)
int3
push
sbb
adc
cmc
retf
imul
push
add
shl
(bad)
stos
std
mov
cmp
ds
mov
ficom
jbe
push
cmp
and
test
idiv
fidivr
jge
adc
inc
inc
sub
lds
add
pop
add
jns
inc
fist
loop
or
movs
call
imul
xchg
and
cmps
add
pop
daa
aas
cmp
fwait
mov
push
sbb
push
dec
cmps
test
xor
loop
mov
adc
mov
mov
mov
add
sub
xor
out
scas
push
xchg
jle
jae
shl
ja
inc
in
or
lods
add
jmp
nop
jnp
xor
push
inc
adc
lods
leave
pop
xchg
loopne
xor
push
mov
pop
pop
dec
int
div
(bad)
stos
pop
add
sar
cmc
sbb
mov
(bad)
cli
je
mov
cmp
cs
xchg
les
add
sbb
call
pop
adc
add
add
hlt
add
(bad)
hlt
mov
fcom
pop
lahf
cli
mov
or
push
(bad)
cmp
xlat
jne
cwde
imul
pop
test
xchg
outs
jp
mov
movs
(bad)
inc
cmp
jne
shl
cld
mov
int
and
fild
pusha
das
imul
and
or
push
sahf
mov
(bad)
pop
push
push
stos
push
add
into
sub
loopne
ins
popa
clc
inc
popa
jg
cmp
add
cmp
inc
push
arpl
xor
repz
or
(bad)
sub
mov
cmc
std
mov
shr
sub
shr
in
call
aad
jge
idiv
jecxz
in
mov
lods
mov
cmp
sub
mov
pop
dec
in
jmp
add
nop
push
lods
cmp
inc
out
pop
sbb
ins
pop
sub
int3
and
sbb
pop
and
adc
addr16
rol
mov
iret
xor
xor
dec
lds
mov
cmc
xchg
fist
cmp
bound
adc
or
jno
pop
pop
das
sbb
mov
push
hlt
push
ret
int
es
pusha
imul
cmps
(bad)
cmp
cmp
dec
and
arpl
and
push
mov
out
js
xchg
(bad)
stc
dec
push
(bad)
push
jo
dec
lods
movups
aas
aad
xchg
aas
daa
in
push
mov
xchg
xchg
dec
sbb
(bad)
test
in
sub
movs
movups
shl
out
jl
xor
enter
mov
shr
jl
pop
push
add
aad
inc
aam
fs
mov
(bad)
repnz
cli
nop
add
das
das
iret
in
int
hlt
gs
mov
dec
push
cli
add
or
ss
xchg
sub
xor
mov
inc
jae
leave
sar
or
jg
xchg
xor
mov
lods
cmp
rcl
in
xchg
fnstenv
mov
mov
fsubr
fld
add
es
repz
outs
sbb
sub
test
add
cmp
inc
pop
cwde
(bad)
jmp
arpl
push
push
pop
pop
xor
mov
mov
dec
iret
cmc
mov
xor
jp
test
lods
add
push
dec
loope
sub
adc
ror
jecxz
mov
das
sub
xchg
fisub
std
(bad)
xlat
cdq
ffree
nop
xchg
in
repnz
dec
mov
xchg
adc
mov
das
out
inc
xchg
xor
movs
fwait
xor
repnz
int
out
imul
push
adc
(bad)
cmps
sar
jecxz
arpl
jle
frstor
fwait
pop
aam
loop
jb
mov
call
ja
push
mov
int3
push
stos
jmp
xor
popa
xor
dec
jmp
ds
int
outs
mov
inc
gs
ret
mov
push
aam
jge
dec
mov
test
movs
mov
adc
fadd
add
movs
mov
or
cld
jg
aas
xchg
js
jnp
(bad)
mov
outs
adc
cli
xchg
dec
xchg
adc
enter
nop
or
or
inc
mov
lods
sub
in
jo
aam
shl
stc
mov
push
rol
movs
pushf
sub
or
mov
call
dec
jbe
adc
std
(bad)
repnz
and
or
es
leave
mov
pop
pop
test
in
and
scas
lock
sbb
cli
js
xor
push
push
dec
out
jmp
hlt
gs
and
inc
mov
and
sahf
fiadd
das
jno
mov
pop
cdq
test
in
stc
jne
stc
push
lea
jbe
in
stos
movs
aam
jecxz
(bad)
scas
xchg
clc
cmp
sbb
sub
lock
test
sbb
sbb
in
cmp
stos
xchg
inc
sahf
inc
repnz
nop
adc
dec
jb
rol
in
mov
push
mov
lahf
adc
gs
mov
out
or
add
adc
cmp
push
inc
scas
add
dec
mov
bound
xchg
inc
imul
rcl
dec
loope
xchg
jmp
jne
jg
mov
sahf
(bad)
out
mov
jp
inc
and
inc
dec
imul
lds
inc
xchg
mov
xchg
mov
push
sub
mov
mov
jo
lods
adc
sar
std
enter
out
cmps
inc
clc
les
sub
rcl
(bad)
cmps
stc
je
add
xchg
add
pop
test
(bad)
aas
ds
in
xchg
inc
cmp
pop
(bad)
mov
mov
arpl
inc
test
out
sbb
dec
add
bnd
dec
lods
(bad)
mov
fdivr
jg
je
mov
inc
or
ret
jno
adc
das
xchg
loope
hlt
and
movs
cdq
inc
sub
das
fiadd
cmps
add
pop
jg
or
shl
xchg
xchg
dec
pusha
mov
push
test
pop
pushf
shl
dec
xchg
fsub
xchg
xchg
xchg
push
pop
pop
push
retf
xlat
mov
push
enter
sub
jmp
mov
sbb
dec
jmp
xchg
dec
loopne
outs
cmps
mov
adc
imul
and
or
xor
cmp
inc
push
stos
call
bnd
adc
rol
aas
les
pop
dec
dec
sub
inc
fiadd
push
jge
inc
cli
jnp
test
push
arpl
(bad)
fidivr
dec
cmp
xor
xor
in
cdq
add
ds
movs
cmp
js
out
or
pop
shr
pusha
fcmovbe
or
mov
movs
stc
neg
movs
lods
les
test
jno
movs
aam
out
jg
ds
or
mov
add
xchg
shl
dec
mov
ret
mov
in
jns
sub
aam
aaa
pop
fsubp
test
enter
icebp
and
cmc
mov
mov
mov
pop
mov
mov
push
sub
sbb
push
cmp
mov
sub
add
dec
cmp
add
iret
inc
jmp
cwde
add
rol
mov
xor
add
or
lods
fwait
xor
cmc
xchg
jl
aas
mov
pop
xchg
js
es
scas
scas
sub
(bad)
mov
jmp
cmps
ins
dec
pushf
sbb
xchg
adc
test
(bad)
cld
sbb
cmc
stc
cmc
je
xchg
lds
fnstsw
xor
jbe
in
(bad)
popf
cmp
std
pop
jmp
daa
lea
jp
or
push
and
and
daa
cmps
fcomp
dec
pop
dec
retf
mov
push
aas
cmp
jge
mov
aas
xchg
repz
and
seta
push
stos
(bad)
mov
movntps
lods
enter
jbe
dec
mov
cmc
imul
sub
rcl
cld
popf
popa
fwait
sub
dec
add
leave
bound
push
add
add
or
add
xor
push
sbb
sbb
mov
aam
rol
ror
adc
daa
stos
xor
ficom
push
pop
or
pop
les
scas
and
dec
mov
ins
(bad)
push
int3
mov
loope
pop
sub
sbb
stc
cmps
popa
fisub
popa
jg
adc
push
mov
push
(bad)
lea
cmp
adc
sahf
xchg
aad
xchg
test
cmc
outs
sub
rcr
xchg
pusha
mov
add
dec
inc
pop
xchg
or
repz
mov
push
inc
es
ins
in
mov
dec
rcr
or
add
and
cmp
arpl
cs
adc
fwait
jnp
(bad)
outs
mov
adc
inc
outs
push
pop
repnz
mov
sub
rol
shr
add
imul
sub
fist
addr16
inc
pop
fcmovnu
movs
add
mov
cs
retf
xor
fwait
adc
loope
pop
addr16
push
sbb
push
outs
pop
push
inc
js
pop
ins
adc
das
mov
inc
add
aam
xchg
cwde
sbb
jecxz
jnp
xchg
add
push
test
sub
mov
cli
(bad)
push
sbb
mov
push
jg
jmp
dec
fnstcw
lods
aas
scas
xlat
jmp
xchg
inc
repnz
jecxz
ins
sbb
in
xchg
iret
xlat
lahf
icebp
mov
clc
xor
ins
inc
fs
lahf
pop
and
xor
movs
cli
inc
(bad)
mov
in
lds
sahf
xchg
dec
push
xchg
in
push
ret
out
jmp
lea
aas
pop
push
jg
jge
push
push
popf
push
shl
push
jg
(bad)
das
mov
das
mov
(bad)
lahf
(bad)
adc
push
inc
adc
add
dec
sub
inc
pop
nop
or
clc
or
out
jbe
pop
(bad)
mov
scas
lock
and
je
outs
mov
mov
lock
test
stc
je
xor
pop
sbb
mov
mov
test
imul
adc
push
and
fmul
js
add
(bad)
or
xchg
and
xor
rol
movs
cwde
daa
and
retf
xor
enter
xchg
fistp
sbb
es
nop
aam
dec
push
push
dec
dec
sub
icebp
(bad)
jecxz
(bad)
test
xchg
add
xor
hlt
icebp
arpl
outs
in
xor
arpl
and
pop
(bad)
test
rcr
push
mov
jmp
inc
jno
cmp
mov
cmp
pop
cdq
mov
sub
jmp
mov
push
sbb
sub
jge
cmp
jnp
cmp
int3
add
repz
push
jns
inc
sbb
xchg
iret
fcmovnbe
inc
in
mov
int3
in
in
test
stos
mov
sub
cmps
int3
arpl
in
push
adc
add
jge
xchg
call
scas
movs
not
cmp
xor
ins
aam
retf
and
jmp
push
test
xchg
adc
js
or
add
shr
(bad)
cmc
test
sbb
push
leave
ss
xor
push
add
ins
push
mov
cmp
sti
or
xlat
cmp
cmps
neg
xchg
add
addr16
bound
xchg
loop
cdq
add
shl
dec
adc
cmp
lea
rcl
mov
push
dec
push
adc
popf
ret
adc
jmp
add
fs
mov
and
mov
sbb
bound
mov
sahf
fcmove
ret
mov
mov
mov
pop
dec
fsubr
push
test
mov
je
int3
in
les
push
xor
push
sbb
mov
mov
mov
cmp
lea
arpl
mov
div
cmp
pop
or
adc
call
leave
dec
pop
sbb
adc
dec
movs
xchg
ins
gs
or
sub
mov
call
in
dec
call
outs
fwait
imul
cmps
add
rcl
cmp
imul
sar
dec
push
stos
inc
xor
aaa
mov
xor
mov
mov
fnstsw
fadd
stos
and
adc
xchg
lahf
sub
cmps
aad
ins
scas
xlat
je
lods
sub
inc
je
mov
inc
push
repnz
inc
inc
mov
cli
push
mov
fdiv
scas
sub
sbb
sbb
out
push
in
cmp
push
pop
loopne
push
iret
les
jno
xchg
test
sbb
mov
or
jg
inc
cmps
adc
inc
pop
lea
popa
test
pop
ficom
push
pop
pop
or
cmp
in
or
stc
xchg
test
mov
daa
xchg
add
mov
stos
cmp
lea
gs
(bad)
in
jmp
and
mov
ror
outs
jle
div
fiadd
sbb
xchg
pop
cmp
icebp
(bad)
les
push
jae
or
pop
das
fcmovnbe
adc
pop
inc
loop
cmps
xor
sbb
mov
push
(bad)
js
es
imul
out
fild
and
xchg
cmps
lea
js
xchg
call
xchg
shl
xor
add
lds
repz
inc
jmp
in
pop
out
and
jae
xchg
push
into
ins
sti
mov
inc
rcl
mov
fsubr
fmul
inc
cdq
call
lahf
mov
arpl
aaa
out
push
outs
ds
mov
lock
inc
stos
pop
out
aam
pop
xchg
dec
jo
sbb
adc
mov
cld
adc
sub
push
into
cmc
jmp
call
or
rcr
cs
clc
fnstcw
and
loope
jge
xor
push
popa
jmp
std
push
ret
lahf
gs
dec
fist
and
arpl
ror
fcom
sbb
popf
pop
inc
pop
xchg
cmps
leave
dec
adc
sbb
movs
pop
retf
ret
outs
(bad)
ds
sbb
jae
dec
(bad)
cli
je
push
push
push
lahf
cmp
cmp
jp
and
sbb
test
outs
imul
neg
call
cmp
iret
lahf
push
cmp
iret
aaa
in
fsub
pop
mov
outs
into
adc
cmp
jmp
sbb
cmp
xchg
push
xchg
mov
out
mov
xchg
aas
lahf
inc
frstor
pop
shr
int
push
sbb
stos
(bad)
and
add
iret
lea
fidiv
mov
add
cli
ja
fldcw
call
inc
mov
aad
and
dec
xchg
fisttp
fisubr
sub
shl
jge
sub
clc
sti
(bad)
into
je
jbe
imul
push
aam
add
lahf
lahf
sbb
jge
mov
out
out
or
sbb
test
dec
push
mov
or
mov
nop
lahf
and
jne
pop
es
mov
xchg
sub
jge
out
dec
mov
xchg
outs
cli
cmps
and
and
dec
jg
inc
aaa
pop
je
mov
sub
stos
adc
add
pop
dec
out
ds
sub
xlat
imul
cmc
mov
imul
jecxz
test
pop
jp
nop
dec
jl
addr16
cmp
fnsave
loope
add
scas
cmp
inc
shl
jbe
mov
push
lds
pop
mov
rcr
stos
jmp
xlat
popa
jnp
dec
push
iret
lods
sub
lods
xchg
dec
enter
or
add
inc
sub
nop
mov
push
sbb
iret
sub
sti
jp
mov
mov
aaa
sbb
push
push
in
adc
and
test
jno
dec
jo
sub
add
jno
push
mov
scas
ficom
add
add
aaa
mov
in
jg
jp
mov
push
add
jg
add
rol
jle
addr16
mov
add
dec
iret
and
test
test
push
imul
jnp
xchg
lahf
cmps
rol
adc
push
nop
push
mov
mov
(bad)
retf
ja
(bad)
add
out
cmc
push
scas
pop
xchg
(bad)
mov
and
es
pop
es
mov
pop
(bad)
cmp
sbb
push
nop
mov
loop
xchg
cmps
or
ror
jnp
or
push
scas
outs
sub
xchg
rol
dec
mov
jno
dec
rol
inc
pop
inc
test
xor
xlat
retf
addr16
fsubr
and
call
icebp
sbb
hlt
and
mov
int
arpl
stc
push
jno
aas
push
push
add
dec
push
test
es
sbb
aam
push
int3
cmps
push
imul
pop
outs
and
or
xlat
aam
stc
loopne
repnz
xor
mov
ret
scas
stc
cmp
stos
cmp
pop
inc
xchg
inc
sub
adc
mov
popf
mov
jnp
dec
loope
xor
cmps
or
inc
xchg
mov
(bad)
stc
xor
(bad)
mov
mov
cdq
cmp
inc
rol
clc
aam
dec
adc
cmp
dec
xchg
popa
and
data16
inc
ds
mov
pop
dec
and
popf
push
pop
aam
rcr
sbb
inc
stos
push
loop
ret
and
icebp
sbb
dec
mov
sbb
(bad)
dec
push
je
pop
sbb
pop
(bad)
out
sti
xchg
mov
and
das
dec
mov
sbb
nop
sbb
cld
cmp
les
repnz
push
aad
cld
cmp
dec
sub
fisub
inc
mov
retf
ds
pop
arpl
mov
std
push
movs
inc
adc
push
jp
sbb
imul
inc
jno
stos
fldenv
cmp
inc
and
cmp
push
js
movs
jno
(bad)
je
dec
je
push
in
jl
bound
call
mov
xchg
push
ror
mov
jl
push
xchg
gs
cmp
and
add
ret
pop
sar
mov
mov
sub
ins
movups
(bad)
popf
sbb
loop
sub
or
repnz
ins
mov
jmp
fadd
cmp
fimul
lods
imul
enter
leave
mov
xchg
mov
jg
lock
and
inc
jb
add
mov
stos
sbb
mov
gs
les
or
jmp
rcr
nop
add
adc
mov
and
(bad)
ds
lahf
mov
popf
adc
mov
inc
sar
sbb
xchg
jo
mov
loope
push
data16
aas
iret
aam
mov
sbb
jmp
jmp
call
xchg
mov
lahf
sbb
and
(bad)
in
out
rcl
dec
push
retf
jecxz
mov
stos
add
sti
ins
push
icebp
dec
and
jle
xchg
enter
movs
pusha
call
dec
stos
push
sbb
add
cs
fidivr
into
jnp
xchg
pop
mov
mov
arpl
mov
inc
aas
ret
push
pop
or
push
in
sbb
xchg
sahf
dec
lods
(bad)
iret
mov
and
repnz
mov
mov
imul
cli
pusha
lods
jge
xchg
pusha
adc
rol
sbb
jns
pop
lock
in
retf
iret
push
sbb
or
scas
cwde
movs
call
jg
call
push
scas
dec
call
aad
sbb
(bad)
movs
lahf
and
stc
pop
sub
mov
dec
hlt
inc
jno
enter
cmps
movs
add
popfw
dec
sahf
cmp
fimul
inc
inc
stc
je
out
adc
cld
mov
cmc
add
sub
pop
ss
(bad)
mov
or
shr
(bad)
dec
repz
je
dec
out
dec
aad
(bad)
aam
cli
jmp
inc
and
test
add
test
pop
mov
xor
rcl
daa
int
(bad)
pop
mov
int
xchg
cmp
and
(bad)
pusha
mov
dec
sub
push
mov
in
lahf
mov
jecxz
and
sub
rol
mov
ror
push
pop
mov
xor
movs
(bad)
out
mov
push
ins
lds
int
pop
xor
movs
push
add
sub
imul
mov
cmp
mov
in
add
ret
inc
jge
scas
mov
mov
fs
push
loope
in
dec
cs
mov
sub
cwde
adc
into
dec
adc
mov
stos
imul
jo
mov
push
test
sbb
push
cmp
sbb
aam
enter
dec
ja
inc
mov
add
fnstsw
in
aaa
pop
std
shl
xchg
ret
dec
cmps
cwde
cmp
or
data16
mov
out
mov
shl
out
mov
push
pop
xchg
leave
lods
or
push
push
cld
sar
clc
int3
data16
lahf
sub
dec
pop
dec
dec
push
sub
test
xchg
adc
and
ds
mov
pusha
repnz
push
retf
mov
mov
mov
add
xor
dec
adc
and
sub
push
aad
pop
in
mov
gs
stos
adc
imul
or
push
mov
jmp
pop
sub
inc
(bad)
lahf
pop
iret
and
arpl
add
div
xchg
rcr
inc
je
sub
add
(bad)
iret
out
clc
xor
inc
sub
jmp
add
icebp
outs
or
repnz
int
mov
push
int
push
sub
jae
sti
jno
mov
mov
or
repz
sbb
aad
stc
cmc
test
cdq
and
xchg
inc
mov
adc
cs
jns
std
(bad)
pop
outs
js
xchg
inc
sub
jo
add
jmp
(bad)
aam
xor
push
mov
or
cmp
loopne
xor
xchg
or
mov
jp
xor
pop
xlat
cli
jno
inc
add
sub
iret
cli
mov
cdq
dec
push
inc
aad
cmp
in
add
mov
dec
mov
mov
out
sbb
lds
add
mov
sub
mov
in
stos
lds
mov
jl
sub
mov
mov
xor
add
mov
inc
or
pop
sti
xchg
test
je
and
cdq
inc
das
pop
out
punpckhdq
lahf
neg
or
mov
lea
push
cld
xchg
jno
inc
push
movntps
sub
pop
aaa
in
dec
scas
lds
stos
and
cmps
mov
fild
retf
dec
retf
repz
stos
jmp
dec
cmps
in
je
call
cmps
or
out
shl
call
push
cmp
fidiv
movs
mov
pop
(bad)
pop
stos
jmp
mov
pop
inc
ja
xor
fadd
cdq
or
ficomp
(bad)
iret
into
xor
xchg
call
rcl
cmp
cmp
in
rcl
mov
shr
sub
xchg
adc
mov
add
push
outs
dec
imul
in
gs
bound
leave
sbb
scas
test
loop
cmps
xchg
inc
jecxz
mov
or
jne
inc
push
ret
push
ds
mov
mov
popf
(bad)
or
xlat
lahf
jno
repz
test
cmp
mov
dec
cwde
loopne
sub
bound
pusha
add
mov
jae
cmp
lods
push
pusha
jecxz
lahf
jo
dec
(bad)
(bad)
dec
xchg
repz
dec
pop
and
arpl
mov
cmps
xchg
shl
or
add
mov
enter
inc
loope
rcl
sub
call
movs
fwait
movs
(bad)
in
push
inc
jge
pop
jmp
and
mov
popa
pop
stos
cmps
and
movs
dec
out
ret
or
fidivr
outs
(bad)
mov
xchg
or
mov
cmp
mov
push
js
fsubr
inc
out
sub
out
adc
inc
lahf
and
jno
lods
pop
sti
int
ds
(bad)
das
mov
cmp
adc
loop
jno
pop
mov
cmp
xchg
adc
sbb
pop
sbb
xor
icebp
mov
and
scas
scas
(bad)
loop
int3
ja
jne
and
and
je
idiv
ss
retf
push
dec
add
push
lds
cmps
inc
shl
aam
push
gs
xchg
pop
xchg
(bad)
xor
and
pop
les
nop
dec
and
rcl
cmc
dec
pop
mov
arpl
std
mov
mov
popa
add
lods
mov
xchg
ror
xor
or
stos
sub
mov
lahf
xor
dec
xor
sti
stos
cmp
adc
lock
sbb
pop
jp
and
push
push
mov
(bad)
and
int3
add
fld
push
xchg
or
popf
or
inc
sbb
inc
add
sbb
ret
imul
or
imul
fucomi
and
das
lods
cs
retf
or
sahf
js
dec
sub
(bad)
int3
pop
xor
sub
(bad)
jmp
and
xor
pusha
sub
shr
in
jne
mov
hlt
xor
push
aam
push
dec
jle
fcomp
xchg
cmp
dec
rcl
fistp
pop
add
jmp
push
test
sbb
outs
je
neg
sar
pop
pushf
or
nop
mov
gs
and
leave
xchg
movhps
adc
popf
pop
adc
pop
xchg
jecxz
gs
fucomip
jle
fidiv
mov
call
jl
sub
sbb
and
add
mov
cmp
(bad)
ins
pusha
fadd
outs
mov
adc
inc
xor
dec
or
dec
jae
sbb
mov
xlat
ss
mov
sbb
xchg
mov
fidivr
into
out
jl
fwait
lds
pop
adc
dec
inc
jl
cdq
pop
pop
mov
lods
ja
popa
ins
or
leave
fstp
mov
dec
push
stos
fnstenv
cdq
dec
mov
int
ins
push
xchg
jb
in
sub
iret
push
enter
or
mov
dec
adc
shr
add
sti
(bad)
mov
mov
imul
and
pop
test
or
push
mov
stos
inc
imul
enter
lods
enter
mov
cdq
movs
push
pop
pop
in
push
dec
scas
inc
pop
pop
fwait
xchg
cli
lahf
jmp
out
cli
daa
fcom
arpl
dec
cmp
out
pop
out
sub
cld
mov
pcmpeqd
mov
lods
rol
dec
adc
mov
(bad)
or
sub
out
mov
xor
push
and
rcl
loope
push
popa
jmp
pushf
retf
test
push
jl
sbb
sub
sbb
fidivr
adc
in
xchg
mov
mov
arpl
and
dec
or
mov
mov
sub
inc
lods
jnp
and
inc
push
movs
cmp
mov
out
popa
jnp
dec
std
(bad)
out
adc
and
int3
sub
les
push
aam
inc
push
add
pushf
sahf
sti
mov
cmp
rcl
jecxz
jnp
cmps
test
in
int
pushf
stc
xchg
add
lea
popf
adc
iret
mov
int3
(bad)
adc
push
(bad)
lahf
xor
lahf
mul
xchg
pop
mov
dec
aaa
test
mov
ss
and
cmp
cmps
cmp
pop
lahf
pop
mov
lahf
std
leave
mov
gs
aaa
fnstenv
jnp
and
or
xchg
mov
shl
xor
jmp
and
stos
lock
fild
ss
mov
shl
call
xchg
stc
je
out
pop
fisttp
jg
fist
jl
shr
sub
test
int
add
retf
mov
inc
ja
jl
ins
(bad)
mov
push
xchg
mov
loope
ret
pop
nop
popa
loopne
cmps
movs
movs
movs
popf
inc
add
mov
jne
dec
test
iret
fucomip
mov
cld
adc
lea
xor
or
push
loop
test
mov
mov
inc
mov
mov
out
pop
sub
jb
daa
mov
lds
xchg
or
cmp
cmp
movs
fcomi
push
or
pop
pop
mov
cli
ret
lods
inc
and
daa
call
outs
xchg
retf
cmps
pop
in
add
rcr
std
movs
push
mov
ror
mov
pop
lds
adc
pop
jno
lods
add
cmp
ja
je
hlt
xor
mov
mov
cmps
mov
aam
adc
inc
scas
leave
div
pop
in
xchg
shl
ret
dec
push
pop
jle
mov
jecxz
mov
ja
mov
pop
mov
(bad)
test
outs
dec
int3
hlt
cmp
movs
lods
mov
aad
and
cmps
js
xchg
pop
cmp
aad
inc
fcmovu
mov
pop
cli
jae
cmp
stc
into
or
mov
movs
adc
scas
dec
jg
pop
sub
fnstenv
cmp
cmps
mov
cmp
push
dec
(bad)
xchg
jge
(bad)
dec
int
test
cmps
xchg
xor
xchg
adc
adc
sub
mov
pop
push
inc
mov
sub
sbb
icebp
lods
js
lea
jae
add
rcl
cs
movs
push
add
xor
push
rol
in
mov
ins
mov
in
mov
adc
dec
adc
push
pop
push
sub
repnz
push
dec
sbb
adc
pop
xlat
jne
mov
jmp
lds
sahf
cmp
or
inc
jp
cmc
mov
lods
xchg
stc
xchg
outs
mov
fcomp
and
adc
adc
dec
popf
popa
push
add
xor
push
push
xor
mov
jnp
jns
call
ds
repz
arpl
dec
je
xchg
je
cmc
sbb
fsubr
xchg
jbe
imul
mov
scas
scas
jo
pop
sub
ds
jmp
data16
sub
xchg
jecxz
sbb
mov
sbb
int3
iret
in
jns
jmp
sub
add
cwde
jno
inc
punpckldq
pop
fadd
fisttp
call
fistp
out
stos
mov
sub
xor
in
repz
push
and
pop
(bad)
sub
add
jb
das
sbb
jns
cld
in
jno
xor
xchg
(bad)
sbb
push
popf
and
pop
cmc
cmp
pop
fwait
jo
cli
repz
sub
mov
xor
xchg
mov
cs
ret
or
cld
pop
mov
aas
fimul
jg
pop
jne
add
lods
(bad)
in
popf
mov
jmp
mov
push
jmp
xor
(bad)
cmp
in
bound
pop
dec
jmp
or
push
arpl
gs
aas
retf
shr
sbb
ds
lods
or
out
inc
and
outs
jne
leave
sahf
xchg
mov
and
pop
mov
mov
mov
stos
das
sbb
int
test
pop
mov
into
bound
mov
fld
jno
jl
test
xor
(bad)
push
cli
jg
(bad)
lahf
xlat
(bad)
scas
dec
lods
add
sub
push
sahf
jmp
add
ds
pop
mul
repz
add
cmp
in
mov
adc
icebp
adc
lea
mov
scas
mov
dec
cmc
pop
fcom
in
aas
mov
movs
sbb
and
(bad)
xor
rcr
push
push
xor
push
(bad)
or
rcl
or
ror
lea
bound
add
pop
test
mov
imul
daa
cld
fadd
in
retf
sbb
dec
dec
xchg
imul
stos
dec
repnz
mov
xchg
mov
fidivr
shl
jmp
inc
outs
std
cmp
inc
sub
fldenv
and
adc
stc
push
idiv
push
mov
push
inc
icebp
pop
adc
cwde
iret
loope
inc
add
int
dec
repnz
xor
cmps
jno
jecxz
sub
outs
inc
cli
jnp
aaa
cmp
sti
push
xor
xchg
mov
xor
add
les
pop
xchg
int
mov
xor
cmps
add
jno
jle
lock
mov
out
mov
leave
xchg
enter
inc
fldcw
xchg
stc
stos
or
pop
mov
sbb
jle
lds
imul
add
mov
call
test
pop
sar
inc
add
scas
js
push
cmp
call
jbe
dec
pop
adc
sub
xchg
sbb
retf
popa
scas
lds
fdivr
ror
inc
push
mov
cld
packssdw
cmps
xchg
xor
xlat
push
xor
cmp
lea
movs
imul
sub
les
jo
repz
add
mov
mov
stos
js
(bad)
cmp
lds
sub
cmp
in
push
or
push
movs
imul
aad
stc
add
ror
jge
jmp
fld
mov
add
mov
test
dec
lods
sets
jl
mov
xchg
fwait
std
ret
and
les
add
sub
jl
lods
imul
rcr
push
test
push
add
loopne
outs
adc
sub
or
leave
daa
lahf
jae
iret
retf
neg
rcr
and
xor
add
mov
outs
(bad)
aaa
ss
push
jno
outs
inc
sub
pop
xor
xor
mov
xchg
cmp
ret
add
imul
cmps
fcmovb
cmp
imul
push
add
inc
in
cld
mov
rol
outs
jmp
pop
gs
addr16
movs
enter
(bad)
in
scas
sbb
pop
inc
adc
je
cmc
imul
push
aas
scas
mov
mov
push
sbb
movs
lea
push
loope
jle
aam
add
std
mov
xor
xor
sar
ja
add
aam
sub
cmp
sti
pop
out
xchg
imul
add
pop
fdivr
cs
cmp
mov
sub
pop
cwde
adc
cmp
inc
stos
jcxz
call
test
inc
xor
loopne
cmp
inc
adc
add
sub
out
jnp
xchg
jnp
push
adc
add
out
mov
or
fidiv
mov
stc
imul
aam
or
add
fild
push
in
inc
aam
icebp
inc
jns
lock
mov
mov
mov
neg
enter
push
dec
stc
or
fist
test
inc
add
xchg
or
xor
ret
(bad)
pop
mov
inc
(bad)
in
call
sahf
push
test
stos
sub
cmp
lods
pop
arpl
mov
jle
add
cmp
div
popa
addr16
das
pushfw
push
mov
adc
sbb
int3
aam
(bad)
jle
sub
adc
add
and
xor
xor
and
test
lock
mov
add
int
div
mov
pop
xor
mov
or
bnd
call
pmuludq
xchg
aas
ret
repnz
mov
sbb
daa
mov
test
jae
mov
xlat
xcrypt-ecb
cmps
dec
pop
add
add
sbb
inc
mov
or
mov
xor
cmp
dec
test
lods
js
movs
cmps
or
call
(bad)
cdq
sahf
cmp
dec
arpl
push
add
bound
enter
mov
ret
push
xchg
inc
test
js
adc
pop
lds
and
adc
adc
sub
call
or
imul
inc
stos
mov
push
mov
push
mov
bndstx
fs
dec
mov
add
fnsave
mov
rol
ins
xor
cmps
cvtpi2ps
mov
mov
xchg
xor
push
pop
cmp
shl
ss
mov
mov
imul
imul
test
mov
lahf
cmps
mov
push
inc
xchg
pop
cld
push
adc
or
in
sbb
inc
repz
icebp
mov
ret
mov
add
sub
mul
mov
int
(bad)
arpl
push
dec
and
jmp
imul
add
jle
mov
sub
ds
and
retf
push
push
aas
test
repz
jmp
push
cmp
hlt
repnz
pop
imul
arpl
into
adc
push
jp
push
iret
imul
mov
adc
arpl
mov
push
mov
(bad)
in
outs
adc
jmp
xchg
retf
mov
mov
pop
mov
and
add
pop
cmc
pop
into
in
sub
jmp
dec
push
int3
sub
repz
mov
inc
sbb
in
(bad)
out
fwait
inc
ja
js
or
cmp
or
xor
add
fidiv
adc
mov
imul
pop
cmp
in
mov
and
(bad)
aam
pop
and
rol
add
add
loop
in
jge
rcr
push
sub
mov
cld
mov
pop
je
xchg
adc
mov
cwde
hlt
repnz
inc
jmp
in
mov
mov
xchg
sub
xchg
test
jg
pop
adc
icebp
iret
mov
movs
cmc
movs
enter
jle
stc
push
xchg
pop
ins
not
and
push
sub
sbb
pop
inc
leave
add
cmp
inc
(bad)
dec
mov
aam
pop
dec
push
xchg
stos
mov
int3
outs
test
movs
and
xchg
xchg
adc
fdivr
sub
mov
cmps
sub
pop
add
and
sub
fs
mov
xchg
jbe
xchg
ins
fist
rcl
aam
mov
jl
xchg
or
cmp
outs
and
out
or
sub
adc
mov
jge
push
les
ins
ss
mov
cmps
mov
push
jmp
shr
call
mov
push
stos
cmps
mov
in
jno
xor
xchg
inc
xchg
push
daa
xchg
sub
adc
ds
add
and
add
ja
inc
daa
and
cmps
repnz
test
popa
fs
pop
xlat
cmp
in
mov
cmp
and
cmp
popf
dec
dec
cwde
adc
add
add
sub
xchg
pop
mov
and
jne
push
add
icebp
hlt
add
(bad)
cmc
in
add
ss
jo
movups
pop
jg
cmc
and
stc
loopne
mov
je
and
and
(bad)
cmc
jl
lahf
adc
mov
div
popf
int
ror
mov
jmp
jmp
add
rol
xchg
xchg
stc
cmp
inc
sbb
(bad)
idiv
fdiv
inc
inc
(bad)
(bad)
aam
sbb
cli
int
pop
cmp
mov
clc
sti
outs
pop
cmps
cmp
jmp
scas
ret
iret
pop
cwde
jecxz
add
std
jle
in
dec
mov
mov
cmp
mov
xcrypt-cfb
cmps
daa
icebp
hlt
mov
mov
jmp
clc
aas
aad
mov
stos
fistp
or
icebp
sbb
jp
js
adc
mov
jb
xchg
ret
mov
mov
xchg
pop
cmp
pop
loop
sub
inc
ds
iret
stos
in
push
or
push
scas
cmps
(bad)
enter
shl
sub
cmp
pop
bound
(bad)
lock
adc
push
push
loop
inc
xor
sub
aad
es
mov
(bad)
and
fidivr
cmp
lods
cld
fwait
jae
xor
push
loopne
dec
add
push
daa
cmp
inc
pop
push
and
jns
xor
jmp
push
dec
rol
lea
pop
ins
cmp
call
xlat
and
mov
je
enter
not
push
xor
clc
jno
jno
outs
add
stc
arpl
mov
mov
pop
dec
sub
leave
iret
pop
xor
pop
in
sbb
push
mov
leave
inc
inc
push
push
xchg
push
fwait
iret
or
lea
jns
xor
cmps
shl
movs
int
ret
mov
out
or
mov
nop
cmp
call
and
or
dec
in
xor
adc
(bad)
ficomp
adc
je
inc
push
sbb
fnstsw
ret
jmp
mov
js
sub
or
sbb
push
and
sahf
cmp
aam
lods
mov
mov
lock
mov
mov
ficom
pop
push
out
ds
cmps
dec
ins
and
ret
xlat
mov
mov
or
sbb
mov
sub
or
mov
push
lds
cmp
dec
imul
lahf
mov
test
push
repnz
jmp
bnd
sub
jns
test
mov
sbb
in
inc
in
mov
mov
(bad)
jmp
mov
shr
push
stos
add
enter
add
pop
push
add
(bad)
cmp
(bad)
retf
dec
mov
push
xchg
push
mov
cmp
xor
push
nop
or
mov
rol
pop
loope
sub
and
xchg
pcmpeqw
mov
mov
mov
shl
adc
aaa
lahf
imul
popa
adc
(bad)
xchg
sub
sbb
push
rcr
retf
mov
xor
mov
fild
xchg
push
lods
sub
mov
xchg
cmp
sar
sub
stc
je
push
xchg
pop
mov
sub
repnz
xchg
jo
pop
and
out
push
cmp
std
jnp
aad
lds
xor
inc
lds
sbb
sub
xchg
rcl
out
aad
sub
rcl
es
xchg
push
pop
sbb
pop
ror
aaa
cli
icebp
hlt
div
in
(bad)
jne
cmp
or
add
je
inc
rep
add
jg
xchg
inc
daa
(bad)
push
out
dec
mov
dec
scas
sub
xchg
mov
sbb
mov
xchg
call
pop
adc
cwde
aaa
mov
inc
aam
scas
icebp
mov
(bad)
ror
xchg
pop
xor
xor
jle
add
iret
test
popf
retf
mov
aam
and
stc
jg
aam
mov
jp
mov
xchg
enter
stos
movs
lock
sub
or
pushf
pop
dec
xchg
mov
scas
mov
stos
xchg
sbb
pop
pop
ins
dec
in
sub
adc
and
jg
cmc
call
mov
dec
aad
in
xlat
xchg
lahf
dec
push
push
fisubr
lea
lods
movs
pop
dec
sub
adc
stos
adc
push
out
pusha
mov
jecxz
mov
cmps
push
movs
adc
mov
stos
in
js
out
outs
mov
lahf
or
sbb
pop
mov
adc
shl
(bad)
mov
dec
and
push
call
mov
pop
std
ins
(bad)
jmp
dec
aam
mov
dec
dec
jg
(bad)
es
pop
dec
pop
xor
dec
jo
fisubr
in
adc
pop
cmp
and
pop
repz
sbb
std
jge
push
add
mov
inc
in
pop
fsubr
call
add
push
test
pushf
push
in
cmps
(bad)
xchg
hlt
loope
test
pop
xchg
jns
inc
xchg
(bad)
ds
lods
dec
cmp
xchg
lods
test
xchg
or
loopne
(bad)
(bad)
jecxz
inc
sti
inc
loop
adc
lods
rcl
dec
lds
pop
in
repnz
das
scas
inc
lods
js
fsubr
push
cmp
iret
idiv
jb
mov
pop
fwait
push
retf
or
adc
cli
shl
dec
xchg
mov
in
movs
jae
cli
or
add
ins
in
scas
imul
add
push
neg
push
mov
inc
lock
stc
jecxz
clc
dec
jle
mov
xchg
mov
add
jmp
sub
adc
adc
sub
mov
dec
add
lds
add
dec
mov
stos
test
push
and
stc
sahf
adc
inc
or
mov
inc
std
dec
adc
mov
dec
sbb
fnstcw
loopne
mov
es
jp
pop
sbb
xor
push
stc
sub
cdq
ins
pop
test
sbb
ss
xor
nop
aas
pop
dec
js
div
jae
scas
jae
std
fstp
rol
xchg
inc
pop
xor
daa
sub
xor
cdq
ins
(bad)
xchg
mov
hlt
loopne
dec
dec
ds
xchg
sbb
leave
idiv
test
dec
adc
and
test
mov
and
sbb
add
pop
sbb
sub
mov
scas
cli
mov
mov
sti
outs
sub
push
retf
cmps
pop
sub
and
rcl
dec
xchg
sahf
dec
add
test
div
mov
mov
loope
cmps
stos
cmp
cmp
les
mul
movs
(bad)
add
pop
jb
lahf
clc
movs
loop
xchg
inc
add
xchg
pop
into
xchg
xor
test
xor
mov
leave
adc
inc
push
push
adc
and
imul
out
and
ja
cmp
or
xchg
mov
add
mov
ss
jp
aaa
in
pop
int3
aam
push
jo
add
add
iret
movs
sbb
ror
sub
or
adc
sub
cmp
scas
cmps
push
cmp
sub
dec
inc
and
lahf
adc
and
xchg
rcl
or
call
inc
lods
lahf
sbb
xchg
xor
mov
pop
(bad)
int
sbb
loop
and
rcl
cli
cwde
xchg
sahf
sbb
cmps
sub
mov
xchg
pop
adc
iret
push
into
jecxz
imul
test
call
retf
xchg
jbe
or
clc
lods
mov
sar
xchg
test
push
retf
cmps
push
xor
inc
dec
mov
and
imul
mov
das
movs
movs
push
int
mov
rcl
mov
jnp
adc
(bad)
mov
scas
imul
je
aaa
aad
arpl
stos
cmps
sub
xor
mov
test
shl
xor
mov
fild
ins
xlat
push
sub
scas
nop
imul
xor
pop
bound
mov
or
inc
xchg
mov
jmp
pop
xchg
xchg
lea
lods
dec
mov
cmp
(bad)
push
lock
jp
imul
inc
(bad)
fidiv
jbe
dec
and
sub
movs
or
cmps
cmp
mov
fisub
or
ret
mov
or
fucomp
lods
push
push
cld
and
xchg
sbb
mov
popa
jmp
das
mov
xor
jmp
(bad)
stc
rcr
adc
add
std
cmps
jge
sahf
arpl
dec
xchg
inc
jnp
retf
imul
and
loopne
nop
call
aaa
mov
mov
push
dec
sub
cmps
lea
popf
and
inc
push
lea
jnp
pop
dec
xchg
in
push
mov
cli
mov
jbe
sbb
push
push
cmp
push
xchg
xchg
push
loope
in
xchg
mov
fdiv
(bad)
cmp
xchg
sbb
xor
jne
and
jo
and
and
push
jno
sub
into
mov
jmp
movs
stos
lods
xor
mov
xchg
fistp
mov
adc
(bad)
mov
std
mov
mov
rcl
arpl
clc
arpl
jle
aas
rol
lahf
mov
icebp
push
int
inc
pop
fs
cmp
mov
sub
jg
jecxz
(bad)
les
adc
aas
xor
leave
stos
adc
pop
jmp
jl
mov
add
ss
mov
pop
ins
ins
push
push
mov
add
sub
and
sahf
mov
pop
mov
(bad)
xlat
loopne
add
(bad)
fstp
or
aas
mov
fs
pop
add
cmps
sbb
sub
cmc
xchg
fld
dec
jmp
in
push
aam
sub
xor
sub
inc
fisub
push
push
test
add
pop
pop
bound
jecxz
fimul
outs
mov
push
push
lods
push
or
cmp
call
mov
imul
jl
rol
jo
and
out
add
jmp
push
das
jmp
ret
jmp
inc
outs
inc
popf
(bad)
retf
sbb
sub
ds
push
cli
je
xor
(bad)
daa
std
(bad)
in
btr
ss
pop
mov
inc
aam
aam
xchg
pop
dec
cli
inc
or
mov
mov
in
push
xchg
sub
repnz
fidiv
add
call
popa
cmp
rol
mov
cld
(bad)
out
sbb
pop
jecxz
adc
sahf
mov
jmp
inc
push
dec
aam
and
mov
sub
out
mov
sbb
adc
xor
mov
pop
mov
lods
xlat
in
mul
mov
jo
mov
sbb
xchg
(bad)
dec
psrad
inc
inc
mov
xchg
dec
add
xchg
(bad)
enter
push
outs
jmp
cmp
cmps
pop
pop
sbb
sahf
pop
test
xchg
movs
xor
add
mov
icebp
xlat
jb
push
gs
mov
xchg
rol
mov
and
int3
movs
cs
fs
or
mov
push
ins
in
xchg
(bad)
jmp
inc
xor
mov
or
jp
push
cld
cmp
push
(bad)
cmp
mov
test
rcl
div
int
push
and
retf
or
xchg
add
movs
stos
in
imul
leave
and
push
sub
add
mov
sub
xchg
push
mov
adc
cmp
inc
inc
stos
cli
cli
xchg
cmps
out
push
or
add
pop
in
and
cs
out
add
in
inc
mov
in
pop
mov
cmps
xchg
push
xor
pop
xor
push
lahf
mov
jge
inc
mov
aas
push
jb
lahf
scas
clc
lahf
addr16
xchg
shl
popa
mov
movs
jmp
lods
cmc
adc
mov
xlat
mov
mov
loope
aam
ja
add
je
cld
dec
pop
cmc
push
aas
xlat
cli
sti
push
hlt
mov
aad
mov
fs
inc
push
mov
(bad)
lahf
in
cmp
push
ins
retf
je
out
xchg
dec
movs
pop
sub
push
lahf
dec
cwde
dec
cli
(bad)
ds
bound
add
mov
push
ja
jae
inc
ja
push
sub
movs
test
mov
adc
les
cmps
(bad)
pop
jmp
fs
add
push
inc
out
aam
ja
ins
and
lods
hlt
int
aam
xor
dec
rol
push
add
cmp
neg
push
test
sbb
fiadd
adc
cmp
fmul
int
inc
dec
xchg
(bad)
(bad)
mov
fdecstp
retf
mov
into
cdq
xor
inc
bound
cwde
stc
lock
sti
xchg
iret
pop
mov
add
js
shl
inc
test
and
jmp
xchg
fnstcw
out
xor
shl
cdq
dec
mov
xchg
int
test
lods
mov
ror
movs
dec
mov
daa
cli
fisttp
dec
shr
sar
mov
jg
mov
hlt
cmps
cmps
push
popf
iret
daa
sti
mov
mov
fstp
fsubr
inc
and
lea
(bad)
sbb
sbb
and
jecxz
cmps
pushf
sub
lods
or
scas
bound
add
inc
pop
sub
ror
adc
jg
mov
in
cmps
or
arpl
xlat
push
inc
add
cld
add
jg
aad
aam
and
push
js
jmp
and
push
cdq
scas
or
push
(bad)
outs
cmc
inc
fcomp
leave
ins
loop
sbb
push
(bad)
sbb
(bad)
neg
cmps
jecxz
jl
in
loopne
je
dec
mov
cmp
inc
repz
jg
push
pushf
imul
lods
stos
cdq
int3
adc
inc
jbe
pusha
add
pop
jae
and
ins
imul
data16
cld
xor
in
idiv
jbe
dec
sbb
test
lea
div
sub
pop
arpl
test
icebp
sbb
call
cdq
mov
ss
or
rol
ret
loope
(bad)
mov
mov
imul
repnz
sub
enter
pop
mov
(bad)
(bad)
dec
movs
fidivr
nop
mov
pushf
imul
repz
jbe
pop
fs
cmp
xchg
dec
dec
push
dec
adc
add
stos
jns
jg
(bad)
dec
test
shr
jno
pop
add
into
push
(bad)
jge
cmp
pop
or
shl
repnz
cld
pop
pop
jne
mov
xchg
(bad)
imul
bound
sbb
and
test
xor
sub
scas
cmps
stc
icebp
icebp
jnp
mov
aam
mov
imul
or
stos
cmp
mov
jo
test
mov
inc
mov
scas
dec
loopne
or
hlt
shr
add
mov
add
add
jmp
jle
sbb
(bad)
mov
aaa
lahf
(bad)
scas
dec
fucomp
(bad)
call
loopne
mov
bound
pop
dec
or
dec
push
xchg
pusha
ret
push
or
mov
dec
adc
mov
mov
test
mov
loopne
fwait
jle
scas
out
pop
sbb
and
and
dec
and
jne
push
jle
add
jmp
lods
repz
and
popf
fmulp
xchg
scas
mov
idiv
xchg
mov
sar
inc
mov
jno
imul
bnd
mov
ins
sub
jl
push
adc
into
rcr
and
pminsw
out
mov
test
sbb
cs
iret
sub
fadd
inc
adc
jb
lods
sub
in
inc
fs
mov
mov
mov
mov
jl
jne
fs
xor
aad
cmps
xchg
mov
iret
mov
sar
imul
mov
pop
not
pop
xchg
out
out
and
pop
div
mov
mov
cmps
jno
cdq
mov
xchg
stos
add
inc
pop
sbb
sbb
xchg
sub
imul
fldcw
sar
jl
add
retf
jb
mov
xor
add
dec
sub
jmp
dec
sub
fstp
retf
inc
cmp
out
dec
pop
test
adc
js
and
and
sbb
sbb
ins
idiv
mov
scas
jne
jb
leave
sbb
cdq
loopne
cmp
shr
leave
leave
pop
ja
ins
adc
push
xchg
xor
in
inc
in
push
dec
sub
sub
xchg
push
push
imul
mov
add
mov
jmp
in
xchg
outs
outs
and
out
dec
lahf
dec
inc
and
mov
add
inc
mov
jle
sub
daa
and
xor
adc
mov
jnp
cmps
clc
mov
xchg
push
dec
retf
pop
pop
loop
mov
mov
stc
or
lock
(bad)
mov
ret
ins
fsub
fldcw
sub
sub
fcomp
movs
push
mov
mov
pushf
aad
ins
scas
int
jmp
dec
jno
aam
mov
push
ror
mov
and
aam
rcl
repnz
dec
pop
add
cmps
dec
rcl
adc
rol
inc
dec
loopne
dec
cwde
inc
pop
outs
repnz
mov
mul
sbb
movs
jle
lods
sti
cmp
out
stc
sub
in
lods
inc
repz
js
mov
xchg
push
(bad)
int
ror
mov
(bad)
loop
ds
scas
cwde
xchg
push
fwait
ins
arpl
xor
mov
adc
cmp
(bad)
jmp
clc
jnp
cwde
cmp
imul
lods
jmp
xor
mov
or
jmp
sub
div
jne
shl
mov
jae
jmp
push
inc
push
lods
add
sub
jmp
aam
adc
dec
inc
fisttp
fld
add
(bad)
pop
fisubr
inc
inc
stc
inc
sbb
retf
jbe
cmp
push
scas
out
stos
sub
jno
rcl
adc
scas
mov
pusha
(bad)
xor
sbb
aad
inc
add
and
cmc
dec
jns
lahf
ins
out
mov
add
and
fiadd
sub
xor
sub
and
xchg
xchg
ins
nop
dec
in
mov
hlt
and
sbb
pop
mov
mov
ror
cld
push
jecxz
sti
jp
ja
sbb
mov
cmps
pushf
test
cmp
ret
repz
clc
cmp
jae
lds
xchg
xchg
nop
repnz
add
movs
mov
jge
sub
ja
xchg
cld
mov
(bad)
enter
add
loop
inc
add
mov
inc
pop
mov
inc
(bad)
fsubr
dec
dec
xor
xchg
popa
mov
mov
xor
push
dec
add
push
add
pop
mov
test
sbb
cwde
mov
test
jge
mov
ud1
repnz
mul
cld
pop
pop
pop
dec
adc
not
(bad)
loop
inc
add
xlat
movs
out
retf
xchg
xor
in
cli
outs
dec
data16
adc
(bad)
(bad)
mul
ja
or
in
repz
cmp
shl
pushf
popa
retf
add
lods
push
int3
sub
add
jmp
xor
rcr
mov
or
icebp
cmc
cli
(bad)
outs
arpl
fiadd
add
aam
mov
pop
cmp
and
ret
mov
mov
mov
lock
int
(bad)
(bad)
pop
mov
nop
mov
xchg
sub
movs
repnz
jg
jno
mov
(bad)
pop
cmps
jecxz
sub
test
xor
dec
stc
jne
cld
(bad)
leave
jnp
mov
push
mov
push
fstp
xchg
loop
or
push
and
dec
and
mov
outs
jb
ins
sub
repz
jp
sbb
es
xor
mov
mov
jmp
fdivr
jmp
pop
jne
xor
cwde
sub
jno
fnsave
mov
js
aam
xchg
mov
jne
fidivr
and
mov
mov
sbb
adc
sub
rcr
ror
pusha
sub
cmps
(bad)
lea
rol
ds
jg
dec
adc
mov
jg
div
fdivr
mov
cmps
dec
sbb
std
mov
ds
inc
add
ss
loop
push
stos
push
stos
cmps
stos
push
mov
sar
mov
xchg
dec
sbb
loope
(bad)
add
imul
fucomip
(bad)
arpl
popf
pop
scas
stc
cmp
pop
cmp
or
(bad)
lahf
push
inc
test
rcr
add
dec
cmp
(bad)
mov
jne
iret
push
mov
push
shl
idiv
stc
je
inc
jmp
or
ret
cmc
pop
(bad)
in
movs
pop
repnz
mov
and
pop
inc
cmp
cmp
sub
cmp
xchg
clc
cmp
ss
pop
js
imul
lea
mov
imul
inc
loope
shl
pop
(bad)
loop
rcr
mov
jmp
hlt
iret
push
pop
and
cmp
sbb
dec
mov
mov
std
cmp
(bad)
inc
push
jns
leave
hlt
mov
outs
jecxz
out
xor
jo
add
xchg
mov
lods
(bad)
sar
outs
outs
cmp
sbb
jecxz
mov
fyl2xp1
hlt
icebp
dec
and
rcr
and
(bad)
mov
stos
xor
rcl
xchg
mov
pop
in
jne
xor
push
adc
inc
bound
aaa
out
jg
mov
lds
nop
jmp
retf
push
push
fmul
add
rcl
rol
movs
(bad)
push
cmps
cmp
fcom
jl
or
pop
retf
adc
mov
xor
retf
fwait
addr16
in
jmp
in
inc
inc
lea
mov
aad
dec
cmps
shr
aas
test
add
inc
push
jae
neg
xor
pop
ins
fsub
adc
(bad)
push
push
(bad)
stos
jns
mov
enter
pop
xor
mov
enter
stos
(bad)
retf
test
xchg
pop
popf
or
(bad)
fistp
fwait
out
add
inc
sub
lds
stos
jmp
push
cmp
sub
retf
cmc
lods
add
jno
shr
pop
xchg
int3
sub
leave
movs
add
adc
lods
(bad)
jo
jl
int
sahf
ins
pop
mov
sub
xchg
push
lds
das
adc
add
cmp
(bad)
mov
dec
and
arpl
mov
cmp
pop
fimul
xor
add
lock
add
int
dec
cmps
fbstp
mov
and
sbb
adc
mov
pop
mov
dec
jl
pop
fist
dec
aad
mov
inc
mov
test
or
ret
and
xchg
sub
ja
loop
xchg
stc
popf
mov
xchg
call
enter
loope
sbb
rol
xlat
xor
ss
xchg
(bad)
add
or
xchg
push
loopne
sbb
mov
in
sahf
scas
int
cmps
out
movs
lods
call
jns
mov
push
push
imul
xchg
inc
cli
xchg
ins
pop
aam
outs
jb
xchg
mov
test
test
mov
xchg
mov
sahf
sbb
(bad)
cld
dec
mov
cdq
sahf
mov
mov
mov
jmp
and
and
mov
inc
cmp
or
mul
adc
shl
and
adc
test
add
shl
fwait
lahf
mov
pop
(bad)
jecxz
sub
adc
inc
xor
cmp
add
fstp
cli
and
hlt
add
sub
jp
jbe
daa
mov
mov
jp
push
push
add
ss
jge
pop
pop
mov
lods
mov
lock
add
adc
xor
out
retf
hlt
sbb
mov
push
lds
pop
arpl
xor
rcr
sbb
add
ss
sbb
ins
aad
xchg
pop
fs
mov
rcr
add
pop
xor
movs
aas
aad
(bad)
dec
enter
fisubr
scas
data16
jmp
push
daa
fs
cmps
dec
out
mov
lahf
js
mov
sub
xor
push
jmp
mov
js
sub
nop
xor
bnd
(bad)
nop
xchg
out
pushf
fstp
aad
aam
ror
sub
sbb
mov
in
inc
and
lods
in
ret
pop
gs
inc
add
add
test
mov
test
jmp
aaa
push
adc
test
iret
add
jnp
mov
dec
cmp
and
lods
pusha
lods
xchg
icebp
cmps
add
pop
sbb
jg
pusha
(bad)
jns
in
in
xchg
pushf
mov
jmp
add
inc
dec
inc
sti
pop
xlat
mov
mov
mov
or
icebp
mov
sub
sub
scas
and
aas
jecxz
lahf
(bad)
inc
adc
push
sbb
movs
ret
inc
inc
mov
mov
ins
dec
adc
out
push
loopne
pop
sbb
pop
psubusw
in
xor
test
in
rol
cmc
cmp
call
xor
and
call
aas
dec
dec
cmp
xchg
pop
adc
outs
popa
outs
inc
mov
(bad)
shl
call
cmp
ret
xor
or
mov
xor
fiadd
dec
repz
mov
out
daa
mov
lds
or
test
xor
jno
inc
sub
sub
inc
sbb
mov
int
call
(bad)
pop
mov
gs
sub
ror
in
and
rcl
mov
ins
dec
outs
add
mov
ja
xchg
mov
xor
dec
push
imul
xchg
inc
data16
add
inc
aad
mov
add
adc
pop
inc
xchg
jmp
call
sbb
dec
mov
pop
dec
pop
jnp
dec
or
call
rcl
jg
cwde
pop
jbe
dec
shr
mov
aam
stos
mov
mov
lahf
sub
arpl
xlat
scas
call
ins
aam
scas
cwde
lods
inc
stos
call
cmps
mov
or
add
fsub
sbb
cmp
cmp
sbb
test
scas
fnsave
lods
add
js
add
pop
and
push
out
(bad)
mov
xchg
mov
aad
mov
jle
imul
ins
pop
cli
jb
std
outs
in
adc
mov
popf
es
daa
lea
inc
int
movs
sub
jno
adc
cli
inc
stos
cmp
daa
pop
xor
(bad)
sbb
scas
inc
xor
jns
push
push
mov
das
mov
aam
daa
lahf
lock
ja
adc
inc
inc
ins
stos
and
jns
jp
xchg
out
sbb
test
(bad)
out
lahf
bswap
in
aaa
push
loop
ret
cdq
cmps
(bad)
in
test
stos
popa
dec
and
dec
out
xor
sub
inc
scas
or
mov
aaa
test
jnp
addr16
sbb
daa
ds
outs
adc
enter
inc
mov
push
inc
jo
shl
sbb
fild
mov
sbb
ja
jg
rol
lea
add
inc
ins
mov
pop
xchg
sbb
jecxz
push
jb
xor
sbb
mov
xchg
cmps
sub
test
fisttp
mov
jnp
mov
jae
retf
adc
push
sub
sub
vunpckhps
xor
push
lds
pop
dec
lods
cmp
pop
loope
add
repnz
std
dec
inc
push
in
(bad)
xchg
sub
cmp
jmp
adc
add
xlat
mov
sbb
jle
idiv
repz
neg
call
sbb
sahf
xchg
cmc
aas
out
dec
hlt
pop
cmp
fmul
and
ret
call
shr
xchg
add
aas
pusha
call
and
popf
push
pop
mov
enter
mov
stos
mov
icebp
shl
ds
in
in
push
jmp
pop
push
aad
shl
sub
pushf
js
mov
push
xchg
or
xor
shr
cdq
mov
neg
cmp
mov
imul
rol
adc
push
ds
div
in
rcr
pop
adc
and
popa
imul
inc
div
mov
and
je
cld
cmp
adc
std
push
loope
xchg
jno
dec
sub
std
sbb
in
sbb
jne
pop
push
arpl
xchg
mov
aad
push
inc
xchg
cmps
add
sub
clc
aaa
jge
cmc
imul
repnz
sub
jb
ss
rol
icebp
loopne
dec
cvtps2pd
retf
jl
retf
sub
xor
test
dec
push
xor
enter
movs
test
push
test
mov
mov
imul
pop
(bad)
(bad)
cmp
(bad)
data16
cmp
pop
jecxz
and
mov
add
daa
cld
jns
jle
std
mov
push
cmp
adc
adc
lgs
dec
push
ins
leave
(bad)
lahf
mov
aas
pop
jnp
xchg
or
scas
fst
jg
les
jg
retf
scas
or
pop
jg
sbb
add
out
rcl
(bad)
stos
mov
mov
adc
lods
or
xchg
cmc
xor
mov
(bad)
std
jg
(bad)
fs
pop
jns
pushf
push
fwait
mov
or
test
sbb
aad
jl
ficom
lea
ror
mov
jo
jmp
test
pop
(bad)
imul
fcmove
test
cs
jmp
push
fsubr
mov
add
fldenv
mov
test
repz
dec
push
mov
shl
(bad)
mov
cmp
and
dec
xlat
and
and
mov
push
(bad)
xor
and
mov
dec
mov
daa
rol
dec
stos
dec
or
adc
jmp
dec
out
es
mov
push
es
inc
(bad)
int
xor
les
data16
push
(bad)
or
inc
sbb
xor
dec
in
xor
cmp
sub
jge
cmp
jg
and
stos
or
mov
hlt
xor
add
jp
outs
bound
jecxz
popf
push
sbb
adc
add
xor
stos
icebp
mov
daa
xchg
inc
loopne
push
or
pop
leave
scas
icebp
add
push
dec
jg
(bad)
lahf
rcr
sbb
mov
movs
mov
dec
xchg
imul
dec
and
div
sbb
stos
fidivr
cmps
(bad)
cmc
cmp
fild
call
enter
sbb
stos
lock
pushw
(bad)
cmc
jg
lahf
mov
push
int
outs
dec
push
push
cdq
jecxz
jmp
inc
cli
pusha
dec
int3
adc
adc
mov
mov
adc
imul
scas
or
cld
mov
cli
xchg
add
jle
test
call
lahf
xchg
lods
fs
jl
popa
mov
fild
adc
repnz
xlat
(bad)
rcr
mov
xchg
(bad)
ja
inc
push
loop
pop
adc
lock
aam
movs
popf
cdq
fstp
xchg
outs
or
popf
add
push
daa
mov
sub
movs
mov
push
add
lock
imul
lea
test
add
cs
pop
push
push
jns
and
adc
in
stos
sub
pop
mov
cmp
dec
test
jmp
aam
movs
dec
imul
add
mov
das
cs
push
dec
or
pop
shr
xchg
dec
inc
or
or
outs
cmc
scas
in
adc
dec
(bad)
test
lods
dec
push
add
push
(bad)
pop
fsub
dec
mov
movs
sbb
das
sahf
imul
xchg
sbb
xor
enter
in
pop
push
jnp
mov
push
mov
loope
dec
data16
xor
add
push
adc
setg
sbb
(bad)
dec
add
jno
cld
popf
pop
faddp
call
dec
hlt
int3
pop
push
std
aam
fs
inc
push
(bad)
lahf
clc
(bad)
bound
inc
jo
or
push
push
inc
push
inc
retf
add
push
cmc
cmc
jmp
mov
or
loopne
and
icebp
jecxz
out
ins
mov
jno
sub
and
push
add
movs
sub
jno
add
cmp
adc
je
sub
inc
loop
call
fsub
scas
mov
xor
scas
or
pop
dec
(bad)
dec
stos
push
add
sub
je
lahf
les
jmp
mov
hlt
push
les
xor
mov
scas
adc
cmp
push
ds
mov
cmps
imul
repz
ds
stos
ss
fs
lods
push
out
fcom
or
sti
mov
xchg
or
jmp
aad
cmp
pop
arpl
stos
xchg
aaa
not
aas
stos
pushf
rsm
call
jo
(bad)
mov
jl
or
aas
mov
ja
jl
test
and
cmps
movs
xchg
int3
jmp
test
cli
push
push
pop
pop
fdivr
cmp
jp
iret
stc
shr
outs
outs
gs
sub
test
add
sahf
xchg
mov
sub
cmp
repnz
loop
enter
retf
push
jmp
pop
mov
jno
inc
mov
int3
fsubr
lock
clc
fbstp
mov
dec
dec
push
xor
stos
shl
mov
pop
xchg
jbe
pop
jmp
sub
inc
mov
xchg
sbb
xchg
sub
sub
ins
fmul
out
out
das
retf
icebp
jle
xchg
das
push
and
xor
test
or
xchg
sti
dec
mov
(bad)
push
cmp
lds
rcr
mov
js
mov
rcl
or
and
test
adc
repz
loope
push
(bad)
mov
mov
in
mov
in
scas
push
cmps
das
in
lods
mov
push
mov
stos
iret
mov
shr
sbb
test
ss
pop
mov
pop
inc
sbb
dec
in
inc
jno
xchg
push
ror
retf
sub
dec
aas
(bad)
pusha
(bad)
pop
scas
pusha
ss
xor
jo
jl
mul
inc
cdq
jbe
movs
mov
js
sbb
add
inc
add
adc
push
gs
js
imul
xor
lods
call
sub
adc
sbb
push
(bad)
mov
sti
pop
outs
sbb
inc
xor
add
cmp
push
mov
fisttp
aam
retf
test
int
inc
xor
stc
pusha
loop
aam
aad
jo
ins
fisttp
sub
fstp
inc
(bad)
xchg
repnz
push
shr
add
cmps
adc
mov
push
aad
(bad)
fucomi
ins
int3
jmp
lds
or
pop
push
rcr
shr
push
inc
mov
test
sub
xor
pop
sub
aad
jne
pop
adc
push
pop
ds
stos
inc
adc
gs
jns
sub
out
push
jge
xor
fsubr
addr16
call
sub
xor
cmps
cmp
out
pop
push
mov
xlat
jae
mov
test
ror
rol
dec
dec
dec
mov
bound
adc
add
mov
xchg
mov
xchg
cwde
add
test
jns
jnp
adc
enter
inc
add
mov
push
dec
add
jae
imul
adc
inc
test
add
jp
les
xchg
test
xchg
mov
dec
push
push
dec
pop
pop
xor
add
(bad)
adc
cli
pop
call
push
pop
pop
retf
adc
movs
imul
dec
xor
rcl
inc
xchg
pop
mov
cld
mov
imul
enter
in
sbb
repnz
xchg
cs
or
add
mov
xchg
mov
mov
imul
add
inc
push
and
movs
xor
or
mov
mov
dec
dec
and
adc
out
imul
sub
inc
xchg
call
adc
adc
pop
and
sub
pushf
in
add
add
push
movs
mov
xor
addr16
cmp
pop
sub
adc
lods
je
(bad)
cmc
sbb
or
imul
aad
in
ss
ja
or
pop
or
in
ds
or
icebp
xlat
ret
js
xchg
inc
xor
lahf
in
sbb
fstp
dec
inc
ror
xor
add
stos
fs
gs
nop
add
ret
add
or
pop
add
sbb
push
repnz
neg
add
(bad)
ds
mov
add
jbe
inc
dec
push
in
pop
cmp
data16
jge
outs
(bad)
mov
loop
and
xor
in
adc
dec
cmp
xchg
(bad)
and
adc
jecxz
mov
xor
pop
addr16
mov
jg
dec
aaa
mov
push
push
js
and
xor
jb
pop
jp
dec
adc
cmp
setae
mov
in
dec
dec
in
mov
push
xor
push
fs
jge
lds
mov
xchg
in
or
dec
imul
ins
imul
adc
pop
inc
xor
jne
nop
or
sar
inc
cmp
loop
es
push
lods
jne
dec
das
jb
test
mov
movs
inc
xchg
sub
or
xlat
sbb
xchg
outs
icebp
not
mov
jg
mov
cld
mov
lods
(bad)
retf
out
sbb
xlat
xor
or
push
add
enter
test
and
cmp
inc
sahf
call
inc
div
mov
inc
sar
out
cmp
sub
test
cli
ficomp
cli
xchg
jns
or
shl
xchg
inc
jge
imul
cmps
cmps
repnz
scas
inc
xchg
jae
pop
int
(bad)
int3
inc
mov
cmps
cmps
pop
(bad)
and
nop
sub
jmp
mov
leave
mov
inc
push
add
cmp
ret
cs
cmps
rcr
xchg
sar
adc
mov
cmp
inc
loopne
cmp
push
(bad)
mov
hlt
loope
rcr
sub
or
adc
hlt
in
mov
test
retf
stc
and
cmp
jns
fmul
fstp
pop
inc
outs
hlt
mov
pop
mov
repz
scas
mov
push
push
sub
iret
mov
lods
inc
movs
stc
shl
and
pop
sub
cld
jg
mul
inc
nop
push
and
int
(bad)
xor
sbb
stc
jl
dec
leave
pop
cwde
fdiv
inc
inc
or
rcl
push
sbb
cmp
rcl
aaa
cmc
jb
add
jae
cli
cmp
pop
ror
(bad)
dec
stos
xchg
or
rcr
scas
shl
fucomip
sti
xor
add
sub
cmp
rol
(bad)
(bad)
xchg
sbb
std
dec
mov
cmp
sbb
xor
rcl
nop
aas
dec
aas
jmp
jg
dec
pop
push
inc
jle
pop
cs
daa
std
pop
icebp
jge
movs
enter
xchg
sbb
inc
ss
adc
leave
adc
inc
push
xchg
pop
lahf
movs
mov
fnsave
mov
mov
jnp
mov
and
pop
dec
and
or
test
xchg
test
iret
push
push
sar
dec
ins
jg
push
outs
or
movs
icebp
push
iret
add
sahf
outs
sbb
sub
dec
sahf
xchg
or
mov
mov
sub
inc
mov
aam
jle
movs
(bad)
loope
jmp
in
bound
jbe
shl
push
stc
aad
push
pop
stos
fbstp
jns
test
mov
pop
rcl
inc
mov
imul
and
in
mov
add
out
dec
in
cld
mov
out
hlt
mov
enter
mov
cmp
retf
dec
sub
clc
and
ins
jg
mov
cmp
add
out
fst
xchg
sti
sub
scas
ds
pop
or
rcr
out
btr
push
aaa
mov
mov
push
jae
sbb
jnp
lock
(bad)
loopne
push
in
out
sar
mov
(bad)
push
xor
and
mov
lea
mov
and
nop
or
aad
and
dec
jno
cmp
movs
mov
loopne
dec
push
and
sahf
imul
cdq
and
cmp
cmps
and
leave
push
jo
add
in
aas
sar
add
sub
hlt
jb
jp
mov
xchg
push
mov
add
xchg
sbb
xor
jmp
popa
inc
scas
sahf
das
cmp
test
add
pop
repz
sub
fwait
shr
push
and
dec
add
mov
(bad)
mov
out
cmp
mov
movs
push
call
repz
cmp
jp
jmp
cmp
sbb
dec
pop
xor
in
stos
push
or
clc
xchg
xchg
push
or
or
jg
jbe
mov
pop
(bad)
pop
dec
inc
add
sbb
jno
add
in
dec
outs
enter
pop
fsubr
imul
sub
add
sahf
(bad)
jle
stc
test
xor
aas
push
push
out
cs
pop
push
fcomp
cld
xchg
sub
retf
pop
sub
mov
or
and
rcl
pop
mov
out
mov
into
xchg
aam
ret
rcl
lea
add
pop
mov
sub
movs
xchg
sbb
addr16
retf
shl
rcr
mov
rcr
int3
dec
adc
sub
inc
and
lock
sub
in
mov
fcomp
fwait
push
scas
sub
gs
(bad)
sub
popf
test
lds
and
cwde
adc
pop
jae
(bad)
out
mov
call
pop
push
push
inc
add
add
pop
push
in
jnp
es
leave
(bad)
sub
jne
iret
sub
sbb
jmp
data16
jmp
sub
xchg
cld
add
stos
scas
cmp
pusha
jb
inc
mov
fcom
out
mov
pop
sbb
cmc
cmp
add
popf
addr16
and
shr
in
mov
data16
xlat
push
sub
push
push
xor
push
popa
les
mov
(bad)
fs
jns
lods
les
lods
jl
push
hlt
aad
dec
es
mov
dec
inc
rol
xor
aaa
pop
fdivr
aad
sahf
xchg
xchg
retf
inc
lock
loopne
imul
jp
outs
mov
jg
in
in
lea
pushf
add
inc
push
(bad)
sbb
mov
sub
arpl
int
mov
sub
test
stos
loope
pop
cdq
fimul
jg
push
ret
and
cmps
dec
cwde
xor
in
xchg
pop
pop
xchg
dec
ins
inc
ror
xor
mov
ror
lods
jnp
rcr
and
xlat
push
push
ror
xchg
mov
inc
(bad)
pop
sahf
cmps
push
cmp
sub
js
xor
mov
adc
add
xlat
mov
test
or
bound
fnstcw
aaa
add
add
sbb
sahf
sub
xlat
dec
push
dec
pop
popf
sbb
xchg
mov
cdq
cwde
mov
jmp
popa
jg
shl
stos
fistp
jne
ret
cmps
xchg
or
gs
cli
mov
fcmovnu
jns
jle
lods
xchg
lahf
imul
xchg
cmps
xchg
cld
pop
inc
rol
dec
dec
jecxz
(bad)
or
rol
mov
or
inc
sbb
mov
sub
les
add
aam
fwait
mov
jae
pushf
xchg
aas
sar
jp
add
mov
iret
pop
call
lea
ja
add
movs
add
sub
add
add
cmp
inc
xchg
(bad)
push
inc
sub
mov
pushw
mov
(bad)
rol
rcr
dec
inc
push
mov
div
jnp
mov
sbb
add
nop
fnstcw
ins
jns
add
out
ins
ja
xor
mov
sbb
xlat
movs
push
cmc
add
add
sti
ja
je
add
push
lahf
(bad)
jecxz
outs
ins
sub
dec
push
ret
outs
fs
dec
push
xor
mov
lods
out
jb
stos
add
pop
bound
ins
icebp
sub
or
int3
push
and
mov
sub
mov
mov
xor
imul
push
adc
(bad)
out
pop
dec
cmps
test
test
mov
mov
ficomp
mov
push
add
jne
(bad)
lods
push
and
adc
das
jle
mul
cli
xor
and
mov
pop
xor
mov
sub
out
cmp
retf
fsubp
in
cmps
out
cmp
fnsave
adc
inc
dec
sub
jno
daa
sbb
pop
inc
(bad)
in
call
in
rcl
push
cmp
add
jle
cld
jnp
imul
dec
int3
sub
cmp
jl
add
repnz
sub
xor
ror
mov
dec
push
add
cli
sahf
cmp
pop
sub
jmp
(bad)
ins
cld
inc
add
jmp
outs
add
fstp
or
mov
sbb
lea
inc
inc
pop
outs
call
push
sub
add
les
push
jmp
inc
cli
(bad)
mov
fucomp
fdivp
(bad)
mov
xchg
pop
xchg
push
cmc
cmp
out
mov
in
and
pop
mov
mov
push
push
sbb
sahf
push
jmp
out
fidivr
adc
jae
mov
ds
pop
dec
stos
or
mov
sub
imul
mov
fisub
sub
or
hlt
xchg
in
cmps
jno
inc
test
cld
lea
fsubr
retf
jae
mov
ja
pop
aam
push
xchg
dec
inc
arpl
int3
mov
xchg
sub
jecxz
xchg
sbb
nop
push
inc
add
je
inc
push
sar
movs
push
push
and
cli
repnz
icebp
pusha
pop
fnsave
push
ja
pop
in
aam
imul
imul
mov
mov
push
xor
mov
scas
iret
daa
cmp
add
cmps
mov
mov
(bad)
cmps
xchg
sub
fisub
(bad)
mov
jg
dec
repnz
je
adc
add
jnp
fdiv
(bad)
imul
push
and
and
adc
and
aam
retf
ins
into
cld
sar
ror
sti
adc
push
int
add
add
mov
jbe
imul
push
dec
xchg
push
retf
dec
and
lahf
les
(bad)
and
outs
inc
std
push
cld
jnp
out
dec
mov
aam
jns
fisub
shl
icebp
and
jb
jmp
xor
sbb
movs
out
jae
ret
xchg
jns
rcr
retf
adc
rol
push
or
inc
cmp
call
cmp
pop
rcl
jmp
mov
or
inc
or
aad
outs
jle
fld
sub
(bad)
push
repz
cmp
cmc
push
mov
imul
and
into
mov
inc
pop
bound
leave
sub
sub
cwde
dec
loopne
mov
dec
js
pop
(bad)
mov
mov
add
inc
dec
xchg
pop
out
sbb
jae
ins
jns
xchg
mov
push
and
add
movs
sub
movs
les
retf
push
cmc
sbb
or
mov
and
xchg
stc
aam
ror
add
test
ins
mov
sbb
pop
cmp
pop
or
inc
stos
imul
ret
test
ja
mov
and
inc
ja
and
mov
mov
push
dec
mov
jbe
and
push
mov
outs
add
into
int3
pop
cmc
daa
cmp
mov
sbb
add
lahf
pop
jg
sbb
int
pop
mov
pop
sub
dec
adc
test
pop
jno
xor
mov
int
cmp
stos
mov
int3
push
sub
push
sbb
std
inc
ds
fwait
pop
frstor
pushf
aam
mov
cmp
(bad)
std
mov
jne
add
mov
add
pop
pop
pushf
clc
mov
ss
jmp
inc
xchg
leave
popa
jae
mov
(bad)
popf
(bad)
out
(bad)
inc
inc
pop
dec
dec
cmp
pop
jno
dec
cmp
sbb
and
(bad)
addr16
cmp
xor
xor
mov
hlt
bound
mov
paddusw
mov
xchg
das
out
sub
adc
outs
adc
(bad)
rol
pushw
sub
lahf
xchg
xchg
xor
inc
dec
inc
xor
fs
cwde
leave
sub
and
xor
dec
aaa
sbb
push
daa
push
inc
inc
loope
mov
jno
push
leave
mov
mov
inc
pop
(bad)
nop
hlt
jg
pop
inc
xchg
rcr
xlat
cmp
arpl
aad
jbe
daa
push
and
pop
call
cmp
or
aas
sti
jmp
pop
outs
jne
mov
std
sahf
pop
inc
pushf
int
lds
xor
dec
movs
loop
fs
and
jns
mov
outs
pop
mov
sbb
sbb
pusha
outs
js
in
cmp
dec
sti
test
leave
push
imul
call
std
sbb
xor
test
add
daa
lds
aas
das
dec
call
call
and
dec
jg
fcmove
test
mov
sbb
leave
mov
inc
xchg
test
retf
div
test
mov
mov
or
xchg
mov
(bad)
dec
push
int3
ins
mov
or
dec
push
out
mov
pop
outs
fild
in
xchg
push
push
pop
pop
add
cld
and
test
xchg
mov
or
lock
pop
(bad)
outs
mov
cwde
add
shl
mov
and
mov
cmps
xchg
test
and
cmp
pop
bound
ror
aaa
cld
fcomp
fucomip
jge
test
or
push
imul
xchg
lea
jg
in
cmps
cli
dec
out
adc
movs
mov
cmp
aas
pop
lahf
gs
jno
pop
xchg
mov
retf
jmp
or
inc
aad
test
push
xlat
xchg
jns
call
jne
retf
mov
ror
pop
aam
outs
cdq
mulps
leave
mov
pop
out
adc
and
add
push
imul
cmp
and
mov
std
and
add
mov
fdivr
push
ret
sub
mov
repz
into
jge
mov
into
ret
jnp
movs
push
test
loopne
dec
dec
or
xor
lods
jp
or
pop
(bad)
scas
dec
pop
in
dec
jecxz
scas
add
bnd
cmp
sub
cli
jl
test
mov
pop
jmp
out
lss
xchg
xchg
ret
xchg
repnz
pop
dec
push
enter
push
aaa
cli
pop
rol
and
xchg
mov
icebp
and
xor
(bad)
(bad)
out
or
adc
shl
dec
js
xchg
aas
(bad)
popa
jmp
and
cmp
sub
jg
mov
push
pop
xchg
and
leave
call
push
loope
inc
pop
call
pop
imul
nop
(bad)
inc
add
jnp
mov
imul
inc
shl
dec
mov
cmps
mov
cmp
and
scas
pushf
add
mov
add
mov
(bad)
outs
je
sub
jp
imul
dec
xor
push
clc
fsubr
iret
sbb
xchg
push
mov
enter
sbb
cwde
loop
(bad)
inc
ds
dec
sbb
push
aas
adc
cmps
push
out
ins
fwait
jle
mov
cmc
or
test
cmps
jle
inc
push
pop
je
inc
xor
fbld
fcmovbe
movs
es
lahf
and
rcl
inc
enter
xor
(bad)
push
dec
push
mov
inc
movs
mov
sti
pop
leave
(bad)
mov
mov
push
in
push
xor
test
push
mov
push
loope
loope
xchg
dec
out
sbb
out
test
pop
(bad)
inc
sub
or
(bad)
enter
call
mov
mov
cdq
fdiv
jb
adc
pop
mov
imul
call
pmulhw
sti
dec
add
fmul
cmc
inc
fistp
neg
and
call
add
add
imul
sti
sub
mov
loop
pop
cmp
cld
cmp
in
je
movs
mov
xor
add
bound
inc
test
xor
stos
dec
fwait
or
and
iret
cli
dec
sbb
jo
inc
inc
sbb
aad
adc
outs
xchg
xor
and
fwait
jge
mov
xor
dec
xchg
mov
sub
pop
cli
push
lods
jle
inc
push
out
sbb
fs
inc
and
mov
fs
inc
cmp
scas
scas
pop
mov
push
mov
test
out
pop
mov
sbb
push
push
shl
and
cld
icebp
stc
hlt
or
das
loopne
js
add
sar
xchg
mov
hlt
push
jnp
mov
fidiv
and
push
inc
mov
dec
sbb
and
dec
mov
xlat
add
xor
fild
dec
int3
push
jbe
xor
xor
mov
dec
aas
fild
xor
mov
cs
or
leave
mov
sub
sahf
push
cmps
push
sbb
repz
sub
ror
scas
repnz
les
sub
xchg
cmc
xchg
inc
not
sub
add
ror
sti
sub
and
mov
cmp
push
lds
mov
rcl
lds
arpl
popf
pop
or
retf
clc
and
ins
jecxz
out
loope
xchg
sar
test
scas
mov
push
mov
je
jbe
cmp
inc
pop
(bad)
prefetchwt1
pop
sbb
jp
or
cmp
sbb
sub
lds
ss
push
hlt
js
ret
pop
add
in
cld
(bad)
aas
cs
sub
mov
push
dec
xlat
xchg
jae
push
out
(bad)
mov
ret
and
sub
sbb
iret
adc
aad
aas
addr16
cmps
leave
mov
or
mov
add
(bad)
fdivr
movs
jbe
dec
xor
dec
out
add
nop
leave
add
jns
arpl
test
neg
in
pop
in
mov
mov
and
push
adc
std
push
xchg
rcr
sub
cmc
test
mov
lahf
dec
mov
and
push
xor
mov
fs
jecxz
xchg
push
push
xor
mov
sbb
mov
sub
or
in
cmps
cmps
add
adc
movs
cmp
pushf
push
xchg
dec
outs
and
rcl
loop
call
inc
imul
cmps
dec
push
sub
xchg
cdq
fs
mov
retf
and
or
mov
(bad)
rcr
loop
fdivp
dec
mov
add
scas
xchg
inc
repz
jl
push
in
sti
or
js
xlat
(bad)
push
mov
fucomi
push
out
ss
pop
sub
xchg
mov
leave
bound
add
(bad)
fwait
repnz
ret
push
adc
repnz
(bad)
xchg
jecxz
push
mov
inc
push
retf
pop
jmp
idiv
(bad)
lahf
cmp
call
fs
loopne
xchg
arpl
dec
xor
les
push
lar
jecxz
pop
out
jae
jmp
jmp
adc
dec
pusha
xor
push
adc
imul
aas
lahf
dec
sti
iret
jbe
retf
(bad)
aad
dec
aam
in
push
add
mov
arpl
push
leave
xor
retf
mov
in
push
and
dec
push
in
sub
jg
outs
sbb
lock
jbe
push
push
or
xor
lods
pop
pop
retf
mov
mov
sbb
out
add
aam
or
rcr
test
mov
add
and
push
push
jmp
jmp
ror
out
fsubrp
(bad)
in
and
int
in
inc
repnz
sti
retf
cli
jmp
push
ret
add
dec
add
std
mov
sbb
(bad)
int
push
mov
rcl
add
imul
ret
mov
sbb
push
xor
in
mov
mov
fcomp
xor
test
pusha
push
stos
loopne
mov
xlat
ror
inc
dec
(bad)
jge
and
xor
or
into
ficom
movs
xchg
xchg
ror
and
es
pop
mov
mov
sbb
add
inc
nop
in
jbe
sbb
inc
and
lahf
cmp
xchg
mov
push
push
js
pop
xchg
cdq
arpl
cmp
aas
lea
test
out
mov
in
loop
dec
gs
fdivr
add
cmp
imul
data16
pop
xor
adc
sub
call
xor
dec
inc
cs
xor
daa
jns
test
lea
add
add
into
jmp
je
cmp
add
cmp
xlat
xor
add
cwde
call
xchg
movs
jge
(bad)
outs
idiv
call
mov
retf
dec
imul
int3
les
cmps
push
cli
xchg
cmp
data16
inc
std
pop
inc
aas
xchg
pop
adc
mov
stos
mov
in
mov
pop
pusha
xchg
mov
adc
cmp
adc
sub
or
daa
and
fcomi
in
cmp
shr
pop
and
jbe
in
pop
(bad)
cs
(bad)
xchg
loopne
iret
idiv
arpl
jmp
inc
sbb
mov
jmp
and
sub
mov
fimul
mov
sub
retf
pop
fwait
adc
adc
lahf
popf
imul
pop
cmp
test
loop
scas
in
cmps
push
cmp
dec
or
pop
push
(bad)
aad
(bad)
cmp
test
lea
xchg
sub
cmps
jp
in
outs
je
pop
inc
cmp
cld
shl
(bad)
dec
mov
jo
loope
mov
aad
jecxz
out
and
mov
dec
adc
iret
mov
div
adc
sub
xchg
xchg
inc
inc
ret
imul
lods
es
imul
test
cmc
mov
mov
pop
arpl
jae
aad
xchg
add
jmp
add
adc
mov
pop
inc
inc
cmp
mov
inc
cwde
fistp
xor
jb
add
add
jmp
fld
arpl
sub
inc
repz
sub
sbb
loope
movs
sub
cmp
(bad)
mov
cmp
push
cmp
xchg
cmp
cmc
jp
loopne
inc
mov
in
or
jmp
bound
loop
js
jmp
lahf
lock
fnstcw
int
push
out
mov
add
dec
mov
cli
lahf
outs
es
and
daa
xchg
stc
adc
mov
and
out
cld
mov
adc
xchg
sub
fcom
fs
(bad)
xlat
aas
push
cmc
mov
(bad)
iret
dec
xchg
stc
jl
push
js
ins
int3
int
nop
inc
push
or
ror
movs
xchg
push
out
pop
retf
aad
mov
xchg
inc
xchg
pop
xchg
and
sub
mov
das
inc
loop
call
push
in
ss
in
shr
sbb
lods
shr
leave
sub
jge
stc
hlt
lds
loopne
adc
push
loop
in
push
pop
fisttp
push
push
dec
aad
pop
arpl
xchg
push
lea
setge
push
xchg
push
repnz
imul
daa
sub
mov
or
or
arpl
in
jg
mov
or
lods
pushf
lahf
push
fsubr
scas
pextrw
pop
jecxz
sub
icebp
inc
jmp
dec
jbe
mov
dec
loop
mov
js
hlt
push
cmps
shr
mov
add
(bad)
push
loopne
jb
xor
cs
sbb
mov
aad
aam
je
mov
inc
mov
call
xchg
sbb
adc
imul
pop
nop
mov
or
test
dec
std
mov
lock
daa
push
cmc
fdiv
and
add
(bad)
pmaddwd
mov
jp
and
sub
mov
int3
xor
adc
hlt
repz
in
rcr
push
mov
push
sar
and
push
call
pop
int3
and
sbb
mov
sahf
cmp
mov
cmp
push
dec
xchg
or
call
iret
daa
(bad)
and
jmp
jnp
out
popf
test
shl
mov
jno
inc
and
push
dec
push
sbb
inc
dec
ja
out
mov
rcr
movs
push
adc
enter
push
test
mov
mov
mov
mov
das
pop
outs
push
jl
stc
rcl
es
mov
inc
lahf
pop
stos
and
nop
dec
test
mov
and
fld
test
mov
or
sub
mov
push
dec
xor
lea
(bad)
dec
mov
jns
fidiv
test
dec
mov
or
dec
and
jmp
leave
push
jae
inc
call
pusha
bnd
dec
jle
cmps
mov
xor
sub
shl
inc
movs
jge
jb
aad
push
(bad)
pusha
mov
cli
inc
dec
ins
mov
push
enter
cmp
sub
lds
mov
test
xlat
mov
push
out
xchg
adc
mov
int
dec
push
sbb
mov
and
sub
sar
adc
sbb
idiv
add
xlat
and
repz
(bad)
push
xor
cld
inc
xchg
iret
adc
push
mov
mov
lods
outs
or
xchg
clc
mov
add
lods
rcl
pop
and
test
shr
imul
das
ins
lods
add
mov
lods
das
and
and
xchg
pop
pop
and
into
xor
enter
xor
inc
and
mov
in
adc
xor
nop
inc
cwde
sub
leave
adc
pop
cwde
bound
out
jno
sahf
fiadd
mov
mov
dec
loop
clc
push
enter
mov
inc
cmc
stc
je
ds
jbe
popf
dec
mov
adc
lea
js
mov
adc
jb
js
adc
sbb
and
jmp
ret
cmc
ja
out
mov
xlat
dec
xor
dec
aad
daa
(bad)
mov
or
pop
mov
scas
pop
jle
add
dec
pop
in
mov
sar
sahf
scas
cmps
cmps
dec
int3
test
and
loop
cmp
xchg
aam
sub
dec
popa
data16
es
jns
or
movs
je
cmp
std
pop
xchg
retf
cmps
std
jmp
mov
push
mov
jne
pop
mov
sbb
push
mov
or
cwde
cmp
enter
jne
sti
sbb
ror
(bad)
jns
jne
mov
jns
dec
cmp
hlt
jecxz
xchg
inc
sahf
es
mov
mov
test
cmp
ret
in
(bad)
jmp
add
loopne
imul
hlt
loopne
gs
lea
xchg
and
aam
(bad)
sub
pop
out
pop
mov
inc
mov
jle
inc
div
add
test
iret
push
addr16
into
test
lods
movs
push
retf
mov
xchg
mov
jp
pop
sbb
push
inc
sbb
push
or
mov
pop
loope
mov
popa
jecxz
sbb
dec
daa
lea
ret
xchg
cmp
add
js
(bad)
cwde
repnz
push
cmp
call
cmp
xlat
lahf
dec
fdivr
cmp
sub
jae
pop
xchg
(bad)
das
mov
mov
les
push
loope
xor
pop
inc
(bad)
iret
sbb
cmp
stos
movs
popf
ret
xchg
inc
int
mov
inc
out
sub
fsubr
call
xor
cmc
xor
mov
(bad)
mov
iret
push
out
shr
mov
ret
jb
stos
push
int3
jns
xchg
mov
fldenv
xchg
or
cmp
inc
dec
stos
gs
out
sbb
push
fs
outs
mov
and
sub
push
mov
je
mov
cmps
adc
mov
dec
mov
jmp
stc
or
jb
sahf
mov
fdivr
ret
sub
movs
adc
call
xor
push
outs
push
std
gs
lahf
or
push
mov
lea
jns
jo
call
loopne
call
dec
add
or
cmp
xchg
call
(bad)
into
push
push
clc
jmp
arpl
xor
ss
xchg
inc
xchg
jb
loopne
xchg
mov
and
fs
xor
adc
stc
hlt
and
and
and
push
test
push
add
lea
cmp
(bad)
push
push
hlt
xchg
add
xchg
imul
outs
pop
test
and
cli
xchg
mov
daa
(bad)
movs
dec
cld
xor
push
inc
mov
jnp
pop
int3
fdivr
mov
test
sub
sub
arpl
sti
jae
cmp
mov
aaa
or
jmp
push
jmp
sub
call
retf
std
add
adc
call
fwait
xchg
add
fidiv
push
(bad)
stos
pop
cld
inc
sub
fldenv
shl
and
icebp
sbb
(bad)
sub
xor
adc
xchg
inc
cli
sbb
sub
and
(bad)
dec
mov
xchg
xchg
inc
xor
cmp
or
dec
xchg
sbb
popa
cmc
push
scas
jmp
retf
dec
repnz
out
div
aaa
fisubr
adc
outs
or
cmp
movs
push
inc
repz
stos
dec
push
mov
sbb
or
xchg
cmp
sar
add
sub
stc
(bad)
push
cmp
retf
mov
jmp
push
pop
(bad)
lahf
out
in
retf
movs
es
shr
fld
dec
cmp
push
repnz
and
sub
jbe
mov
psrlq
(bad)
mov
sub
cmps
push
sbb
into
dec
inc
jae
je
fist
fcom
stos
inc
pop
add
push
mov
icebp
lods
test
mov
cmp
add
mov
xor
push
out
xchg
loopne
cmps
jmp
jge
in
cs
inc
push
addr16
add
pop
popf
cmp
cs
shl
stc
hlt
push
jnp
jb
lahf
mov
push
hlt
xchg
repnz
scas
adc
jb
sub
and
hlt
add
jg
(bad)
jae
mov
mov
(bad)
mov
es
dec
xor
sub
inc
push
mov
add
push
dec
out
shr
loope
jg
xchg
jb
add
ret
mov
test
push
jge
dec
sbb
and
nop
or
cli
int
enter
arpl
fnsave
cli
loopne
call
mov
retf
xchg
inc
sbb
xchg
push
aam
jg
push
ins
push
mov
cmp
fld
cdq
mov
xchg
push
pop
dec
test
ins
xor
lahf
jo
int3
xlat
sbb
movs
push
push
js
inc
adc
add
cmp
xchg
js
xchg
xlat
push
add
retf
(bad)
in
scas
jg
dec
stos
lahf
mov
sti
adc
xor
jmp
jns
call
or
stc
mov
inc
mov
fisubr
mov
cmp
xor
dec
xchg
jae
imul
out
xchg
sbb
scas
cmps
sbb
movs
sahf
inc
mov
push
lea
mov
or
cmp
and
sar
add
popf
mov
mov
cld
mov
sub
push
cmps
imul
mov
pop
jge
call
add
jge
sub
or
(bad)
cmp
inc
fdiv
test
in
daa
xchg
add
and
mov
addr16
sub
and
not
les
mov
mov
pop
pop
addr16
test
jo
lods
iret
aam
or
nop
add
jp
popf
ja
push
in
or
scas
xchg
push
jmp
call
mov
add
ss
mov
pop
mov
icebp
sbb
mov
dec
shr
fisub
jnp
or
imul
pop
adc
cmp
adc
inc
aaa
jmp
sub
mov
shl
in
jne
add
pushf
or
call
xor
movs
ins
ins
dec
xor
push
js
icebp
cmc
cmp
in
repnz
mov
mov
(bad)
push
hlt
fwait
popf
scas
sbb
mov
sar
cmp
sahf
popf
add
sbb
or
movs
jmp
push
mov
pmaddwd
in
shl
pop
jl
or
dec
cmp
mov
loope
add
sub
mov
cmovno
icebp
test
pop
addr16
mov
jg
add
or
cs
imul
sbb
mov
and
fcmovnbe
je
jb
add
push
mov
push
mov
dec
push
push
js
call
daa
add
test
aas
addr16
jl
hlt
imul
ja
dec
aam
enter
les
jb
movs
push
sbb
mov
mov
je
xchg
or
ss
add
loope
je
push
sub
lea
adc
ins
and
mov
mov
xchg
pop
ja
jne
imul
xchg
fld
loopne
mov
cmp
jb
movs
call
xchg
push
push
jmp
cmp
leave
aam
push
push
mov
sub
add
sti
faddp
mov
pop
lds
stos
and
stc
cmc
xor
test
sbb
mov
aam
stos
sbb
push
xchg
cmp
add
(bad)
(bad)
(bad)
aas
push
inc
pop
(bad)
scas
mov
mov
pop
lds
mov
test
pop
fld
fs
add
jmp
jmp
mul
push
retf
cmps
div
ret
sub
jl
sar
hlt
lea
mov
ss
xor
int3
in
jle
sub
mov
cmp
sub
mov
outs
imul
test
and
push
call
mov
imul
jle
outs
adc
sub
stos
test
sbb
jb
gs
jg
push
int3
mov
data16
repnz
adc
mov
dec
and
stos
inc
or
cmp
imul
enter
mov
mov
xor
xor
add
fidiv
stc
xlat
cmps
mov
xchg
mov
adc
dec
div
mov
imul
(bad)
ds
mov
mov
xor
inc
inc
dec
imul
fimul
int3
pop
in
mov
sbb
repnz
and
and
mov
data16
xchg
adc
inc
pop
mov
mov
nop
sub
rol
mov
push
push
pop
sub
push
mov
add
fidivr
stos
(bad)
in
mov
inc
xchg
scas
ret
mov
dec
xchg
shl
add
inc
adc
mov
rcl
hlt
(bad)
fdivrp
loope
cmp
cmps
mov
adc
sbb
xchg
lock
retf
jbe
mov
xchg
stc
jl
fucomp
sub
and
and
fsubr
div
call
ffreep
push
and
pop
pop
push
xor
imul
and
call
mov
int3
shl
push
push
lahf
xlat
xor
pop
push
es
push
scas
jno
fisttp
mov
xor
les
sbb
mov
pop
fidivr
outs
sahf
xlat
outs
mov
mov
jne
xchg
mov
sub
cld
cli
lea
mov
push
movs
mov
dec
ret
cmp
mov
push
cli
sub
cmp
jge
mov
sbb
push
pushf
xchg
dec
adc
repz
(bad)
retf
sbb
(bad)
test
add
sbb
mov
rcr
or
fs
mov
popa
movs
pop
div
mov
add
sti
add
sbb
stos
mov
leave
cld
loop
xor
jo
out
stc
sahf
mov
dec
imul
lods
xor
jo
clc
cmps
stos
movs
stos
(bad)
int3
mov
add
fs
movs
enter
mov
rol
fisttp
jge
outs
in
out
add
dec
mov
sar
bound
mov
xchg
xor
dec
imul
adc
(bad)
aas
cs
xor
cmps
xchg
inc
push
push
xchg
pop
mov
mov
adc
in
jp
(bad)
(bad)
cmc
leave
push
mov
sub
xchg
pop
pushf
imul
inc
or
retf
mov
(bad)
retf
mov
fist
push
repnz
and
push
hlt
sti
cmp
out
cld
push
out
fcomp
in
cmp
push
mov
outs
sub
adc
push
sub
inc
or
sub
jge
data16
jge
fucomi
call
test
in
jbe
xor
es
push
out
pop
jno
in
addr16
and
jmp
inc
adc
pop
cmc
push
add
push
or
fwait
lods
cli
jecxz
in
fdivr
(bad)
fisubr
push
adc
push
aad
loope
jmp
lea
cmps
test
test
sbb
loope
stos
add
(bad)
addr16
adc
and
push
push
cmps
push
add
sub
sub
std
ja
lahf
gs
(bad)
loop
addr16
fwait
dec
and
inc
mov
xor
aad
lahf
(bad)
jnp
push
sub
push
sub
xor
adc
cmp
xlat
jnp
(bad)
gs
push
(bad)
(bad)
sbb
nop
push
adc
and
test
fimul
je
xor
fisub
imul
xchg
xor
or
test
jbe
add
push
outs
mov
movs
stos
lods
mov
iret
xor
cmp
cdq
bound
popa
jmp
fdiv
ins
push
dec
mov
mov
rcr
or
iret
pop
not
mov
sti
retf
addr16
lock
cmp
cmp
push
pop
jge
push
stos
adc
mov
hlt
pop
loope
fwait
sbb
and
gs
jmp
js
cmp
inc
dec
adc
jae
outs
xlat
retf
fild
fnsave
(bad)
xchg
sbb
and
ds
stc
jns
mov
out
xor
jg
outs
daa
bound
mov
and
inc
sbb
ror
ja
mov
daa
adc
lods
call
push
aas
sub
aas
cmps
out
pop
push
push
gs
add
das
inc
sbb
(bad)
xchg
retf
sub
and
push
inc
out
fs
adc
into
imul
not
js
fisubr
pop
stos
sub
loope
sbb
push
lods
push
push
cmp
scas
imul
cs
sub
ins
cmp
cwde
imul
sbb
test
jb
ret
call
pop
cmp
cdq
mov
adc
mov
jge
cmp
ins
jb
iret
cmp
sbb
adc
push
xchg
mov
cld
inc
xchg
mov
mov
lods
sbb
(bad)
shr
add
icebp
scas
push
das
jne
test
push
fwait
xor
inc
pushf
mov
adc
mov
and
pop
icebp
cmp
inc
or
xor
retf
(bad)
dec
cmp
pop
xchg
retf
push
shr
push
sub
mov
leave
mov
pushf
fist
cmps
loop
(bad)
or
aas
mov
pop
nop
or
call
idiv
add
cmp
jmp
jl
add
sahf
push
mov
inc
add
jge
jnp
out
(bad)
repz
mov
mov
pop
lea
push
daa
arpl
cmp
fimul
sbb
xchg
mov
cmp
sub
(bad)
add
int3
aad
push
push
aam
mov
jne
(bad)
out
pop
dec
fwait
sti
inc
stos
mov
pop
push
bound
dec
aam
add
add
and
in
lods
in
mov
add
mov
int
or
xchg
xlat
sub
pop
movs
push
adc
mov
fwait
dec
loope
push
sub
lods
in
ds
(bad)
in
loop
rol
sbb
dec
imul
mov
push
inc
loope
outs
cmp
xor
repnz
mov
shl
add
inc
adc
mov
jo
fdivrp
shr
mov
jmp
call
xor
repnz
not
nop
mov
ss
push
aad
in
jns
mov
xor
in
call
in
sub
sub
clc
mov
add
(bad)
mov
cld
lahf
retf
lock
arpl
in
jmp
data16
aad
les
loopne
popa
mov
fcom
xchg
jmp
loope
inc
xchg
and
sbb
dec
sar
sub
fnstsw
sbb
dec
call
sbb
leave
out
sub
jno
imul
jbe
or
xor
and
adc
fs
xor
cmp
inc
test
jmp
mov
xchg
cmp
shr
dec
into
xor
ds
mov
pop
push
push
js
add
push
int
lea
sub
popf
cmp
int3
fwait
je
sub
stos
loopne
sbb
xor
push
and
dec
push
in
test
sbb
ficomp
sub
sbb
in
pop
dec
push
ret
ds
cmps
add
sbb
in
movs
cld
stc
int
out
pop
aam
pop
sub
add
cmp
mov
jo
push
int
call
xor
gs
push
add
add
test
add
in
outs
out
aas
mov
jle
jmp
cmp
popf
inc
or
xor
aad
push
mov
or
add
dec
adc
in
push
call
jne
cmp
push
neg
ins
jle
lods
mov
xchg
mov
jp
mov
bound
jo
sub
repz
mov
mov
(bad)
mov
stos
inc
(bad)
rol
fild
xchg
in
jge
enter
xor
xor
loopne
push
les
cmp
jmp
pusha
adc
pop
loopne
test
inc
dec
dec
mov
dec
neg
mov
arpl
mov
ss
scas
xchg
clc
xlat
stos
sbb
sti
push
scas
cmp
scas
or
sbb
rcl
mov
lock
test
inc
mov
pop
push
sub
mov
daa
push
or
dec
and
scas
loop
ror
test
xor
mov
jns
neg
xchg
ja
push
adc
pop
fst
xchg
daa
mov
mov
test
into
and
mov
push
xchg
dec
addr16
xchg
sahf
jo
mov
mov
add
add
(bad)
push
jno
push
mov
or
xchg
aam
mov
(bad)
fisttp
lds
sbb
outs
xor
add
jo
int3
push
movs
jp
call
(bad)
in
add
add
cmp
scas
ffreep
sub
cld
inc
push
idiv
add
scas
mov
add
sub
stos
sub
sbb
jle
push
out
jmp
xchg
pop
leave
cmps
popf
dec
lods
rcl
dec
sub
inc
and
iret
(bad)
(bad)
in
add
jge
adc
lahf
cdq
inc
push
sbb
lahf
aaa
jae
outs
mov
bound
inc
add
(bad)
sbb
mov
mov
shr
sub
sub
xbegin
jge
dec
js
pushf
loop
dec
(bad)
(bad)
xchg
jmp
add
inc
mov
cmp
mov
or
stos
cmp
shr
aad
scas
jnp
repnz
lds
jnp
fdiv
iret
test
fistp
mov
ins
add
adc
inc
daa
mov
jg
inc
adc
push
xor
sbb
jg
add
std
lea
cs
imul
js
mov
xchg
mov
push
(bad)
and
mov
add
in
aas
ja
sub
jo
stc
mov
mov
mov
shr
push
lods
inc
bnd
sub
and
inc
jb
mov
dec
sbb
jae
mov
fstp
cmp
jno
xchg
(bad)
inc
jb
das
inc
ins
ins
outs
out
jl
push
xor
cmps
in
inc
cmp
rcr
push
xor
jmp
or
push
or
in
jnp
fisttp
lods
outs
cld
call
sub
iret
xlat
iret
scas
adc
leave
xor
mov
es
ins
adc
jp
lods
pop
sti
fmul
stc
add
pop
int
loop
sbb
mov
mov
push
(bad)
fistp
jge
cmp
inc
mov
add
loop
mov
mov
xchg
sub
mov
adc
or
jnp
out
push
fistp
imul
movs
push
dec
sbb
push
rcr
jae
xchg
cmp
mov
stc
xchg
test
daa
dec
loope
push
xchg
(bad)
rol
mov
hlt
call
sbb
push
ss
fwait
rcr
jno
icebp
in
jmp
push
inc
pop
cmp
push
sti
pop
dec
dec
mov
inc
and
fmulp
dec
cmp
jne
fdivr
movs
sub
data16
test
cmp
fbld
mov
add
enter
int
sbb
sub
adc
cmp
inc
sub
xor
xchg
cmp
adc
int3
push
retf
inc
mov
sbb
and
jne
dec
hlt
cmp
mov
mov
and
pushf
xchg
cld
mov
xor
inc
enter
retf
sbb
mov
sbb
or
(bad)
test
push
cmps
and
clc
mov
xor
jmp
xor
cmps
stos
sahf
adc
xor
aad
and
sbb
mov
inc
and
adc
cmps
jmp
cs
xor
jns
push
stc
push
and
rcl
mov
in
inc
xlat
mov
lods
pop
idiv
inc
inc
pop
retf
enter
call
cmp
rol
addr16
repz
nop
retf
test
xchg
fwait
push
jle
loop
add
div
xlat
arpl
adc
push
xchg
xor
imul
repz
and
dec
pop
push
mov
mov
xor
icebp
push
push
imul
adc
je
dec
sbb
into
or
cmps
mov
call
mov
jne
mov
pop
ja
cmp
mov
test
push
out
mov
sub
lea
xchg
cmp
pop
repz
mov
js
scas
push
push
enter
nop
scas
scas
shr
fwait
xchg
or
xlat
not
jl
inc
pop
int
dec
outs
addr16
lock
in
dec
cli
sbb
add
jmp
add
jg
sub
or
int
rcl
mov
pop
pop
dec
push
outs
dec
xchg
shl
cli
jno
call
test
push
imul
in
pop
inc
in
xor
dec
xor
adc
inc
and
popf
inc
scas
shr
outs
in
sub
adc
loope
les
pop
idiv
loopne
ins
mov
test
bound
dec
and
push
xchg
cld
mov
mov
pop
add
xor
or
and
sub
fdivr
mov
test
add
dec
adc
push
and
xchg
in
xchg
out
push
mov
ja
inc
mov
adc
xchg
push
(bad)
fstp
out
jnp
out
retf
push
mov
pop
call
mov
adc
pop
not
daa
xchg
lods
out
(bad)
out
and
dec
add
add
in
(bad)
mov
push
mov
(bad)
bound
test
and
inc
cmc
sub
and
stc
adc
or
cmps
inc
mov
or
xor
inc
mov
test
(bad)
in
mov
aaa
sub
dec
xor
iret
outs
mov
dec
fwait
cmc
aas
mov
lock
sub
lea
mov
outs
pop
aas
mov
(bad)
sub
in
jecxz
sub
sub
mov
adc
mov
int
cmc
jnp
mov
mov
das
adc
mov
into
mov
aaa
pushf
and
jg
cmc
jecxz
daa
fstp
ins
push
xchg
jge
mov
cld
mov
adc
sahf
jg
inc
dec
ins
sbb
xchg
cmp
xor
add
cmc
sub
adc
add
inc
pop
xchg
in
xchg
adc
xchg
dec
out
add
stc
std
mov
or
jns
pop
lock
adc
push
and
jge
xlat
pop
ins
cmps
and
cld
(bad)
pop
sub
adc
hlt
add
jne
and
inc
pop
push
pcmpgtw
inc
pop
lahf
inc
ins
mov
xlat
mov
fs
jno
ror
mov
aad
push
cmps
call
push
test
repnz
loopne
push
xchg
push
ret
popa
iret
cmc
mov
fcomp
jl
arpl
loopne
test
sbb
push
cmp
and
mov
lahf
xor
popa
inc
inc
pop
jl
int3
enter
jmp
jmp
fst
inc
mov
std
cmp
iret
pop
clc
mov
xchg
push
push
sti
or
mov
call
jmp
inc
mov
xchg
sbb
test
push
adc
sub
and
clc
mov
push
jge
neg
stos
cmp
or
ret
aam
push
mov
inc
repnz
bound
cld
test
mov
sbb
aam
sbb
pop
bound
dec
sub
mov
jns
iret
and
push
add
test
jl
mov
cwde
call
sub
lea
in
jmp
push
ror
and
cmps
test
call
xor
and
or
inc
div
in
or
sbb
outs
xor
ss
in
bound
inc
push
sub
xor
adc
jmp
jae
xor
and
jecxz
push
jns
add
out
cld
mov
jbe
rcl
gs
arpl
xlat
fs
or
dec
add
sub
xchg
push
in
mov
imul
nop
pop
scas
xor
cdq
ja
stos
js
inc
xchg
and
hlt
add
adc
mov
stc
pop
lods
cmp
push
add
xor
push
stos
call
pop
xchg
call
or
xor
mov
test
cmps
cdq
(bad)
jb
pop
mov
push
jbe
xchg
fs
inc
inc
dec
and
xchg
repnz
ins
cld
dec
sub
mov
ret
adc
adc
and
je
adc
pop
in
aaa
js
mov
ror
add
movs
sahf
xor
call
cmp
xlat
mov
sbb
test
mov
push
or
les
jnp
add
mov
test
iret
stc
hlt
xchg
inc
push
add
out
mov
out
xlat
add
sub
inc
and
(bad)
stos
aam
mov
mov
aam
inc
add
ds
jmp
(bad)
movs
or
pop
cmp
std
inc
mov
push
lds
push
or
lods
add
inc
xchg
add
out
push
aas
shr
in
cmp
in
cmp
push
inc
inc
jne
test
jl
cmp
ret
add
test
stc
mov
push
sbb
inc
or
mov
jecxz
xor
(bad)
push
rcl
jmp
xchg
sbb
inc
not
lds
inc
or
jmp
hlt
and
adc
pop
bound
or
nop
mov
dec
sbb
add
jnp
bnd
fwait
add
sbb
add
test
jp
lock
dec
pop
push
mov
xchg
pop
iret
cmps
pop
jecxz
scas
sub
mov
mov
xchg
sbb
mov
std
aas
cmps
mov
push
ror
mov
test
mov
add
lods
adc
in
mov
xchg
inc
and
xchg
xor
mov
push
mov
sbb
xor
in
xor
mov
(bad)
pop
dec
pcmpeqd
lods
outs
adc
mov
add
jl
jl
sub
lea
lahf
in
repnz
das
push
fwait
add
inc
mov
sub
cs
sub
hlt
or
mov
sti
dec
xlat
ja
call
jb
add
repz
push
or
rcr
int
push
push
adc
(bad)
jge
in
mov
in
mov
mov
movs
add
sahf
push
or
jp
popa
mov
xchg
lea
or
(bad)
ins
out
retf
fs
int3
pop
outs
add
add
jecxz
cmp
lods
fcomi
(bad)
xor
mov
jecxz
daa
pop
push
push
push
cmps
sbb
int3
or
pop
mul
inc
xchg
push
jno
inc
sbb
pop
jecxz
iret
mov
jmp
mov
(bad)
iret
xor
cmp
add
fsubr
imul
add
lods
js
arpl
(bad)
stc
jp
loopne
(bad)
aad
xor
jo
lahf
pop
push
fimul
das
push
and
(bad)
test
ds
mov
sbb
sbb
add
jp
iret
in
int3
nop
xchg
and
xor
mov
mov
sub
movs
pop
popf
sbb
aam
popa
test
push
push
dec
and
xor
retf
aam
and
ror
cmp
pop
xchg
jae
inc
icebp
lods
push
test
sbb
sub
inc
fsubr
inc
leave
jno
imul
add
test
dec
pop
in
stc
je
into
cld
jp
retf
push
sbb
cmp
cmp
stos
inc
mov
shl
dec
mov
dec
add
std
scas
mov
adc
mov
jmp
jno
hlt
movs
ja
fild
pop
sbb
imul
mov
ds
sbb
mov
je
or
pushf
xchg
jnp
stos
pusha
(bad)
in
bound
xchg
mov
fsub
fidivr
jmp
(bad)
inc
cmps
sub
in
out
cmps
sub
xlat
mov
mov
sub
ror
loop
xor
cmp
out
scas
add
fmul
jmp
inc
jp
nop
cli
pushf
cmp
add
jmp
cmp
sub
fwait
sti
jbe
int3
mov
or
repz
push
pop
push
je
xchg
push
pusha
call
popa
icebp
jns
loope
movs
test
and
adc
(bad)
retf
jo
std
and
jecxz
aas
fbld
xchg
dec
movs
inc
push
push
dec
xchg
sub
inc
mov
stc
hlt
add
and
rcl
jl
dec
in
iret
stc
dec
retf
test
and
test
iret
sbb
cmp
shr
xchg
test
push
sbb
xor
sub
arpl
sbb
lods
ret
xchg
gs
test
mov
pop
in
hlt
fstp
xchg
movs
adc
or
mov
jo
inc
mov
jmp
inc
fwait
sub
les
mov
xchg
xchg
jge
jmp
sub
or
inc
stos
nop
jno
pop
hlt
mov
mov
aaa
mov
mov
push
mov
push
repnz
scas
push
fdiv
lods
push
inc
stos
pop
mov
mov
jp
jns
(bad)
scas
mov
push
retf
add
xchg
repnz
fimul
pop
repz
leave
and
add
jmp
xchg
pusha
add
sbb
aad
push
push
daa
test
cs
popa
mov
xchg
mov
inc
add
int3
hlt
ds
pop
xchg
sbb
neg
push
outs
popf
adc
mov
(bad)
add
or
pop
jp
test
dec
pop
ins
cld
imul
and
mov
adc
retf
xor
add
inc
sbb
(bad)
or
fnstsw
loopne
sbb
push
ret
or
adc
ror
adc
jmp
retf
push
cmc
sbb
mov
(bad)
push
rcl
retf
jmp
leave
and
test
sti
lea
or
xchg
out
push
sbb
hlt
jmp
cwde
bound
jmp
cmp
xchg
jge
jle
or
sub
adc
stos
xchg
inc
jge
push
pop
fcomip
xor
add
pop
(bad)
icebp
test
mov
mov
xor
cmp
test
(bad)
pop
push
ror
imul
push
lahf
adc
(bad)
(bad)
lahf
cmps
(bad)
inc
mov
pop
push
test
inc
adc
popa
pop
in
loop
jmp
inc
hlt
cmp
in
xor
xchg
inc
sub
pop
call
mov
inc
dec
cli
inc
ds
ins
cmp
mov
pop
xor
lahf
cmc
or
(bad)
and
test
mov
jns
ret
mov
lea
and
sbb
push
xchg
inc
xor
cmps
jnp
or
sub
(bad)
push
mov
mov
inc
clc
mov
pop
stc
subps
cmp
add
in
neg
gs
inc
xchg
adc
lods
push
pushfw
dec
dec
sub
mov
or
xchg
cmc
mov
cmp
dec
in
imul
(bad)
int3
int3
ror
pop
xchg
hlt
jecxz
dec
repnz
xor
enter
(bad)
jne
push
std
(bad)
and
mov
pusha
mov
inc
sub
xchg
pop
int
push
inc
jae
jns
push
shr
xchg
leave
mov
std
out
std
mov
mov
rcr
push
jmp
add
jmp
inc
cmp
pop
les
addr16
lds
cmps
dec
mov
dec
add
or
in
sbb
shl
xor
inc
in
mov
(bad)
push
cmp
mov
sub
sub
xchg
fdivp
and
cmp
aaa
or
mov
movs
stc
sahf
push
mov
ins
jae
(bad)
in
adc
ins
dec
rcr
inc
call
jae
sbb
call
cmp
(bad)
imul
dec
repz
ds
sbb
(bad)
fdecstp
hlt
pop
imul
(bad)
adc
or
or
loopne
cli
(bad)
jge
repnz
xchg
mov
test
jecxz
(bad)
scas
sbb
xchg
cmp
and
loopne
add
mov
push
pop
cmp
es
cld
movs
bound
cmp
xchg
ror
cmps
fucomip
pop
int
test
sub
ror
fbstp
mov
ret
jne
push
push
cmps
sbb
sub
scas
xchg
test
inc
inc
pop
or
push
int
inc
push
mov
jne
push
and
inc
xchg
jge
pop
out
jae
pop
cmp
fs
ret
adc
inc
or
ds
and
pop
nop
imul
jecxz
je
cld
int3
ficom
scas
mov
outs
movs
test
repnz
and
sub
inc
mov
dec
sub
(bad)
pop
cmps
xchg
add
xchg
jae
outs
aaa
cmp
js
sbb
mov
loop
xchg
(bad)
mov
pop
jge
mov
out
mov
in
mov
daa
push
mov
jne
jecxz
shr
les
stos
popf
mov
inc
pushw
mov
xchg
jl
push
loop
inc
bound
pop
dec
ins
cs
int
loope
mov
scas
stos
cli
inc
cmps
js
sbb
adc
sub
aam
pop
and
sti
aas
ret
push
cmps
xor
pushf
cmp
push
sar
mov
add
push
cmps
or
jns
mov
stos
xor
inc
adc
test
push
add
sti
xor
mov
push
push
add
or
call
pop
push
pop
stos
inc
push
cld
movs
out
push
lods
inc
inc
push
cmp
jb
and
je
jae
mov
xchg
dec
iret
mov
fs
push
push
enter
push
mov
stos
enter
fsubr
arpl
adc
mov
retf
ins
inc
cmc
jns
sbb
(bad)
gs
or
jp
jecxz
repz
sub
shr
dec
cmps
sbb
dec
xlat
inc
push
and
mov
test
jmp
dec
cld
bound
jecxz
inc
int3
xchg
mov
mov
push
pop
in
inc
rcr
xor
cmp
and
push
lea
in
adc
fwait
push
in
jmp
lahf
call
dec
ins
mov
adc
push
mov
xchg
adc
xchg
movs
pop
lock
xchg
jae
leave
rcl
jae
bnd
mov
pop
or
xchg
add
rcl
ss
and
or
loope
pop
movs
jbe
scas
aas
pop
push
imul
fwait
xchg
stc
push
iret
mov
pop
xor
lods
pop
push
ds
ds
push
mov
fmul
(bad)
ja
fist
sbb
rcr
mov
call
mov
push
add
xchg
inc
and
mov
ret
dec
rcr
mov
xchg
push
pop
ret
add
aam
rcl
sbb
lods
mov
push
in
add
push
ds
xor
ficom
and
dec
xchg
test
es
mov
mov
std
jge
data16
add
cmp
mov
jg
je
jne
lods
mov
shr
das
ds
add
repz
inc
sbb
and
test
sub
sbb
and
sbb
(bad)
jnp
out
retf
fld
gs
iret
xor
sub
sar
cld
mov
fisub
push
daa
cmp
ror
inc
call
push
in
mov
dec
add
xor
dec
cli
pop
dec
inc
enter
adc
fdivp
add
out
sbb
mov
sbb
dec
pop
je
pop
fst
adc
push
pop
xchg
sbb
movs
aad
xor
xor
push
cwde
and
sahf
mov
jne
xor
jmp
xchg
adc
or
sub
xchg
ds
xor
sub
add
xacquire
outs
jb
pop
add
mov
push
pop
cld
xchg
add
pop
or
xor
pusha
mov
or
ja
xor
sub
int3
inc
sub
push
cmps
idiv
push
cmc
jg
jnp
pop
shr
sub
push
mov
and
ret
call
bound
idiv
inc
cs
repnz
mov
xchg
pop
in
int
(bad)
xchg
inc
pop
sti
pop
ins
sbb
imul
adc
lea
and
shl
mov
adc
cmc
cli
jnp
adc
iret
test
je
dec
xor
std
cmp
jge
cli
xchg
mov
lea
lds
mov
retf
add
pop
ret
inc
cmp
xchg
bound
in
jns
dec
into
push
add
add
dec
lock
or
enter
iret
sti
sbb
call
and
aad
push
push
rcl
sub
loope
push
xlat
imul
dec
sub
mov
movs
cmps
test
(bad)
imul
leave
or
(bad)
fdivr
mov
add
out
repnz
std
int3
push
into
mov
xchg
out
pushf
xchg
mov
loope
mov
fs
add
mov
outs
dec
add
mov
mov
icebp
mov
inc
inc
mov
push
call
ror
daa
jmp
mov
out
fwait
dec
nop
inc
inc
sbb
aam
mov
leave
rol
aaa
inc
outs
std
cs
loop
inc
jp
ja
sub
mov
xchg
sbb
jae
mov
jnp
sbb
xchg
leave
or
xchg
cmps
retf
out
inc
fsubr
repz
cmp
in
push
pop
stos
sub
push
mov
dec
sbb
pop
add
fiadd
out
les
mov
cmp
push
mov
repnz
out
cdq
movs
xchg
sbb
cdq
(bad)
jmp
sbb
xchg
xor
mov
fdivr
adc
popa
jno
pop
cmp
add
inc
pop
daa
mov
pop
fs
fdivr
cmps
dec
or
js
lock
push
mov
or
add
cmp
lea
mov
xchg
add
mov
mov
inc
xchg
add
scas
dec
jecxz
sti
xchg
scas
jbe
outs
jbe
scas
sar
jg
pushf
cmc
pushf
pop
sar
mov
test
repnz
cmp
mov
add
and
dec
add
push
pop
mov
test
bound
(bad)
push
test
mov
sub
ins
ins
jg
ins
fwait
mov
inc
jl
jecxz
hlt
gs
ds
pop
jmp
aam
and
and
push
je
out
in
(bad)
in
stos
ss
inc
fcom
pop
push
inc
ret
fsub
(bad)
push
jno
rol
pushf
xlat
arpl
mov
movs
aas
adc
imul
call
inc
cld
sbb
mov
mov
mov
sbb
mov
jb
xor
mov
(bad)
loopne
add
push
into
fsubr
xor
or
push
pusha
je
int
cmp
xor
(bad)
pop
sti
sbb
outs
leave
addr16
repz
repnz
pop
and
js
and
push
mov
pop
cdq
ficomp
pusha
mov
lds
rcl
int
enter
lahf
or
out
push
add
es
mov
icebp
pop
das
jmp
punpcklbw
mov
jl
test
rol
icebp
add
ret
adc
dec
fistp
rcr
fnsave
mov
mov
dec
gs
mov
sbb
xchg
dec
sbb
dec
mov
(bad)
out
pop
xchg
jmp
push
jecxz
aad
mov
xlat
dec
sub
cwde
ins
movs
jne
imul
movs
cmps
adc
xor
jmp
loopne
sbb
test
sbb
adc
(bad)
mov
cwde
in
pop
jne
into
in
in
icebp
sbb
mov
xchg
movs
xchg
jnp
add
fcom
sbb
xchg
sbb
stos
retf
(bad)
push
adc
or
xchg
in
ins
out
imul
jbe
pop
bound
cmp
dec
int3
jno
sahf
not
out
(bad)
fsincos
cdq
imul
movs
xor
dec
add
adc
xchg
fcmovu
push
or
fwait
int
sub
ret
push
pusha
xlat
sbb
pop
xchg
cmp
fwait
std
outs
out
or
push
adc
jp
ins
cmps
xor
imul
and
xchg
inc
scas
xor
stc
mov
cmp
xor
jle
cmp
and
bound
enter
dec
fstp
in
jno
idiv
fldcw
pop
js
hlt
out
sbb
pop
or
xchg
movs
xchg
xchg
jo
dec
pop
cs
sar
xor
fcmove
jg
sbb
test
loopne
pop
dec
bound
push
stc
cmc
(bad)
sbb
xor
gs
test
movs
inc
in
jl
add
mov
out
or
ror
push
push
ins
ins
paddq
push
fwait
sub
ss
sbb
(bad)
inc
push
jmp
(bad)
mov
out
int
cmp
add
sbb
jno
(bad)
push
xchg
fidivr
fist
pop
popf
rol
jb
ror
call
fcmovnu
pop
sbb
sahf
out
cmp
mov
dec
cmps
(bad)
(bad)
cdq
std
fxam
popf
scas
div
jo
mov
(bad)
je
pop
mov
cmp
test
leave
dec
shl
icebp
movs
pop
lods
sbb
lods
mov
cmp
xor
jmp
fbstp
das
fmul
cmp
stos
jle
push
pop
iret
mov
fucomp
imul
push
cmp
xor
jbe
push
(bad)
stos
call
push
push
xchg
scas
sub
rcl
pop
pop
mov
ret
(bad)
fld
and
lock
test
(bad)
fadd
fdiv
or
and
add
xchg
je
xchg
(bad)
(bad)
adc
xchg
(bad)
fs
push
ret
mov
call
xor
inc
xor
in
outs
or
punpckhdq
mov
xchg
in
jge
fdiv
mov
push
lock
pop
jl
sahf
mov
(bad)
xchg
jge
in
rdmsr
in
pop
sti
test
les
xchg
ficomp
js
mov
jo
push
add
pop
retf
stos
or
pop
fdivr
push
test
pop
pop
mov
aad
cld
lds
sbb
scas
adc
adc
cmp
cmp
dec
dec
sub
movs
or
jo
test
pop
test
nop
inc
adc
jns
or
out
jp
scas
imul
sub
(bad)
mov
mov
fadd
bound
push
jmp
pusha
cs
cmp
push
push
sbb
inc
push
push
inc
rol
mov
mov
mov
cmp
retf
mov
adc
jl
test
cmp
repz
sahf
jmp
xor
mov
ds
mov
xchg
xor
push
sbb
sub
imul
mov
xchg
arpl
sub
stos
sub
push
xchg
les
movs
cmc
clc
dec
aaa
popf
mov
dec
push
mov
mov
test
ds
push
stos
test
or
rol
stos
pop
nop
test
out
xlat
in
in
test
sub
mov
test
jo
adc
ss
loope
or
outs
inc
add
push
push
mov
stc
je
out
popa
retf
ds
mov
jbe
mov
and
inc
aaa
adc
xor
leave
scas
dec
daa
retf
xchg
cmp
or
mov
mov
movs
ins
dec
movs
lea
fidivr
push
adc
in
je
fisubr
lea
test
cmp
pop
(bad)
jge
cmp
adc
mov
icebp
mov
or
jnp
lahf
test
sti
sbb
in
aad
xor
iret
sbb
leave
retf
bswap
fdivr
mov
push
inc
mov
lahf
push
push
sub
ret
(bad)
es
pop
inc
sub
rcl
or
jns
mov
mov
mov
rcl
sti
and
mov
jne
stos
outs
pop
push
je
aam
jb
shl
shr
mov
in
jne
test
cmp
lods
js
sbb
or
out
maxps
dec
jmp
mov
cmp
and
sub
movs
call
xchg
shl
and
or
sahf
div
xor
mov
dec
push
lea
aam
popf
js
jns
sbb
push
out
(bad)
(bad)
in
das
mov
mov
add
aam
(bad)
or
mov
or
sbb
in
enter
push
or
mov
add
add
data16
dec
push
mov
mov
xor
test
jno
jl
sahf
mov
cdq
out
fdiv
sahf
sub
mov
daa
xchg
xchg
mov
push
shl
es
jmp
or
mov
(bad)
and
push
sub
mov
mov
jbe
int3
xor
mov
adc
int
push
out
dec
pop
scas
cli
sbb
int
rol
cvtps2pd
xchg
(bad)
ja
xchg
pop
jb
sub
(bad)
mov
sub
shl
mov
sbb
dec
cmp
test
jecxz
imul
in
dec
pop
mov
adc
push
inc
mov
mov
adc
jno
lea
mov
rcl
test
in
jb
jnp
mov
ins
sbb
aad
outs
sbb
movs
push
xor
sub
sbb
pop
loope
jnp
out
pop
sub
mov
pop
(bad)
push
pop
pop
mov
fisub
mov
sbb
aam
adc
jp
scas
inc
fmul
inc
mov
int
adc
sub
cdq
jp
bound
or
(bad)
cmp
cld
fcmovu
shr
les
scas
aaa
xor
out
shl
mov
push
sbb
inc
mov
jmp
popf
int
sbb
pop
test
movs
push
popf
dec
push
add
in
jg
stc
inc
mov
or
cld
retf
mov
cmc
add
push
dec
xchg
push
stos
add
ret
aad
adc
inc
stos
adc
rcr
out
xor
xor
ret
push
or
sahf
loope
xor
add
lods
mov
cs
mul
lods
out
mov
fcmovu
add
out
cld
pop
sbb
sub
inc
xchg
sub
or
push
push
stos
je
ficomp
push
mov
push
pop
hlt
out
pop
mov
fstp
add
popf
movs
jns
push
test
and
leave
add
popf
into
pop
mov
aam
cdq
push
call
shl
inc
daa
test
in
push
or
loopne
pop
push
jne
cmp
test
inc
cmp
call
mov
pop
pop
mov
ins
mov
fmul
push
pop
ins
ins
jmp
(bad)
dec
sbb
jp
sub
sub
ds
nop
xor
clc
mov
scas
pop
loopne
lods
push
inc
loope
aam
mov
test
in
add
jmpw
push
arpl
ja
pop
fisttp
xchg
inc
stos
cmp
xchg
test
mov
mov
xlat
ficom
pushf
lahf
push
inc
jbe
test
push
dec
xchg
cmp
gs
js
cmp
xor
dec
nop
jmp
xchg
inc
aam
xchg
pop
sub
xchg
xor
inc
lods
add
and
retf
mov
dec
cmp
xchg
pop
movs
xchg
push
adc
jns
dec
cs
retf
adc
lahf
and
popf
adc
sbb
pop
sbb
jge
idiv
idiv
arpl
cs
or
pop
aaa
lods
cmps
test
lods
jae
jo
xor
inc
cmp
inc
mov
fild
(bad)
dec
in
jbe
fsub
adc
movs
dec
test
mov
and
mov
mov
push
inc
lock
xchg
icebp
mov
cdq
sahf
push
cmps
pop
outs
ret
ret
add
mov
jns
lods
jecxz
scas
retf
inc
dec
pop
das
xchg
enter
push
test
mov
add
mov
mov
shl
aam
xor
add
jl
dec
repz
int3
jle
sbb
push
xor
add
sub
xor
and
mov
sbb
inc
add
push
sbb
sbb
aam
xor
addr16
std
inc
mov
daa
adc
pop
cld
repnz
mov
sub
mov
and
pop
push
(bad)
jmp
inc
add
sbb
not
leave
push
add
ret
lock
cli
(bad)
or
mov
fwait
loop
jnp
mov
xlat
sbb
push
push
clc
inc
add
add
shr
xor
and
sub
mov
(bad)
jge
pop
lea
jg
ins
lahf
push
jae
mov
dec
nop
(bad)
sbb
popf
das
mov
in
dec
pop
push
cli
ins
mov
lahf
sar
adc
cmps
sub
mov
xchg
repz
add
(bad)
jge
xor
fidivr
xchg
inc
call
mov
cmp
(bad)
mov
adc
and
sbb
aad
inc
dec
cmps
repz
out
and
mov
cmp
inc
adc
jbe
inc
movs
pop
adc
ins
addr16
outs
xchg
jbe
cmp
call
xchg
pushf
outs
mov
adc
push
sbb
pop
pop
xchg
or
and
mov
add
das
(bad)
mov
scas
dec
sti
iret
mov
aam
fcom
sub
cmc
mov
pop
in
sbb
add
(bad)
fist
out
jle
ds
adc
mov
and
cmp
aas
push
push
fucom
shl
xor
movs
aaa
inc
idiv
pop
or
or
cmp
inc
xor
push
dec
xor
inc
mov
icebp
dec
jne
mov
outs
pop
cmp
inc
ror
bound
jno
jmp
jge
je
mov
mov
sbb
push
xchg
inc
iret
sbb
outs
mov
fldcw
push
push
in
in
push
adc
sbb
movs
inc
scas
push
and
int3
pop
and
sbb
ds
mov
shl
add
retf
push
adc
adc
daa
in
inc
mov
ds
pop
cmp
xchg
aaa
aaa
xor
sub
lock
leave
pop
aam
test
adc
mov
sub
adc
pusha
ss
cmp
rcr
jmp
shl
mov
push
xchg
repnz
jb
dec
bound
test
cmp
xlat
push
fsubr
push
xchg
int
pusha
push
xor
or
lods
sub
ror
test
pop
scas
cmps
mov
in
ja
loope
sahf
(bad)
pop
push
(bad)
push
push
add
enter
scas
out
push
(bad)
fnstsw
addr16
test
out
fwait
and
retf
dec
cld
leave
inc
sbb
ror
jnp
pusha
pop
jo
fwait
std
in
push
shl
push
jmp
call
fisub
out
call
add
outs
jne
sbb
push
movs
adc
ficomp
out
push
ror
scas
push
lea
mov
fimul
imul
adc
jne
push
aaa
aas
push
in
jnp
fistp
pop
sbb
sub
inc
dec
sub
sbb
leave
cmp
repnz
sbb
push
ss
push
xor
push
xchg
icebp
adc
aad
inc
jae
mov
xchg
test
ins
sbb
sub
xchg
mov
js
push
mov
pop
cld
cld
mov
jno
mov
sbb
jns
rol
adc
cmp
fs
ret
xchg
call
xor
ltr
shl
not
mov
inc
add
hlt
and
pushf
mov
cmps
(bad)
je
stc
jp
add
or
xor
stc
jbe
dec
inc
dec
sub
add
add
adc
es
xlat
xchg
cmc
not
in
sub
dec
pop
mov
jo
(bad)
cld
jae
int3
loope
inc
push
jg
cdq
test
aaa
jo
cmp
inc
bts
sub
popf
mov
shl
jae
imul
fist
pusha
test
jmp
test
inc
enter
jp
mov
or
hlt
nop
jns
xchg
in
out
jl
and
ins
jbe
jbe
push
test
push
sub
out
popa
call
cld
inc
icebp
pop
mov
nop
mov
and
push
inc
arpl
scas
jp
cli
pop
pop
jl
movs
pop
test
mov
jmp
out
repnz
js
movs
(bad)
sbb
fcmovnb
fsubr
mov
jbe
add
imul
jnp
mov
call
xchg
jmp
in
add
adc
outs
fnstenv
je
dec
and
cmp
cld
fisttp
fmul
cmp
sbb
xchg
pop
test
test
rcr
fsubr
pop
por
das
jnp
push
jne
dec
xchg
or
stc
sahf
cmps
pop
cmps
int
inc
shl
js
push
daa
add
call
and
aad
adc
pop
adc
mov
inc
or
out
mov
jno
adc
cmp
jae
dec
mov
fmul
push
xor
adc
cmps
seta
push
jl
pop
sbb
adc
arpl
lods
jno
push
cmp
inc
add
sbb
ss
popf
and
xor
inc
add
ror
js
or
cs
gs
pop
in
add
dec
setge
or
mov
lahf
xchg
mov
(bad)
fnstenv
shl
xor
push
sbb
and
xchg
xor
je
aam
lahf
mov
add
push
xchg
int
sbb
inc
imul
cmp
ds
loope
cmps
je
or
mov
je
jno
push
stos
adc
lods
jne
add
adc
mov
push
cmp
jo
inc
cmp
mov
(bad)
xor
add
cwde
lds
cmp
mov
loope
enter
jmp
jnp
mov
cmp
add
xlat
and
sbb
adc
cli
faddp
icebp
jno
mov
inc
adc
pop
dec
loope
dec
mov
mov
sub
cs
jmp
sti
inc
and
mov
addr16
cmps
in
jmp
and
mov
daa
fldenv
mov
jbe
inc
or
repz
out
sub
xchg
pop
pop
dec
or
cli
jle
mov
dec
lds
aam
mov
inc
xchg
add
ret
inc
inc
mov
lock
mov
mov
lds
lahf
out
ds
cwde
fiadd
scas
inc
enter
and
sbb
mov
inc
repz
repnz
jp
pop
inc
pop
div
cmps
dec
sub
js
daa
(bad)
adc
cmp
(bad)
fst
mov
lahf
jno
idiv
les
(bad)
adc
and
adc
cli
das
mov
sub
jl
setg
call
sub
mov
mov
cmps
pop
xor
or
test
lds
or
push
dec
pop
cmp
or
mov
inc
shl
pop
and
rep
cmp
in
pop
add
mov
std
inc
mov
in
test
jp
jno
xchg
test
rcl
and
cmp
pusha
js
mul
and
jmp
lahf
sar
dec
ins
paddq
lods
push
pop
pop
cmp
imul
pop
cmp
push
je
fnsave
sub
xchg
outs
sbb
push
adc
imul
and
inc
stos
or
test
shr
or
arpl
cmps
test
mov
jbe
or
mov
sbb
xchg
mov
inc
js
mov
scas
mov
rol
push
mov
or
inc
xchg
mov
mov
sbb
mov
adc
inc
push
sub
push
mov
sbb
mov
and
dec
arpl
(bad)
xor
sbb
mov
neg
inc
jne
xor
adc
nop
jns
xchg
pop
fdivrp
add
mov
aad
das
icebp
mov
mov
or
stos
aam
push
xchg
add
dec
test
add
dec
add
inc
pop
jge
mov
cs
or
sub
out
xchg
xlat
mov
loop
mov
js
stc
mov
jl
leave
jmp
jns
test
push
push
xor
cmp
ja
inc
(bad)
xor
inc
xchg
mov
in
xlat
fwait
jb
xchg
dec
js
mov
and
and
cs
loope
sbb
push
sub
pop
mov
cmps
xor
mov
mov
mov
dec
jecxz
fwait
add
pop
push
ds
ss
jnp
outs
sti
mov
out
daa
cld
inc
jmp
pop
dec
or
mov
repnz
std
mov
aam
cwde
stos
and
test
ins
je
in
fcomp
cmc
neg
fstp
jmp
fs
cmps
cld
popf
push
or
arpl
xlat
mov
aas
aad
push
les
leave
and
jecxz
inc
fimul
bound
inc
pop
xor
jge
not
mov
test
adc
xor
popf
cmp
stos
inc
push
js
imul
std
jl
adc
mov
dec
test
dec
mov
aam
cwde
mov
test
ret
mov
mov
(bad)
xchg
add
inc
daa
dec
clc
xchg
enter
pop
sub
jp
add
mov
xchg
dec
xor
and
pop
push
dec
push
xchg
sub
mov
rol
fcmovu
jb
push
leave
outs
aaa
or
jg
dec
rcr
js
mov
stos
in
pop
mov
ja
adc
test
test
jge
dec
sbb
cmc
call
cld
push
ret
call
sbb
sub
mov
sti
sub
mov
retf
cli
mov
xchg
xor
jae
add
push
int
bound
iret
cmp
pop
xor
imul
push
(bad)
ds
xchg
scas
sub
aam
sub
inc
inc
xor
jge
mov
pop
sbb
inc
iret
stc
push
lahf
jno
test
add
cdq
push
enter
add
stos
test
cli
test
adc
fs
outs
xchg
push
mov
idiv
mov
repnz
xor
jmp
cmp
fs
xor
sub
sbb
jecxz
mov
jge
mov
jl
xchg
jnp
pop
jmp
sbb
out
nop
call
mov
mov
repz
jge
rcl
outs
pop
fidivr
xchg
inc
xor
mov
gs
sbb
vxorps
sbb
mov
fisttp
mov
jo
sar
and
mov
cmc
cmp
mov
les
push
mov
sbb
dec
movs
and
std
sub
in
(bad)
or
sahf
out
push
call
addr16
sbb
push
jb
lock
cmc
cmps
inc
bnd
lds
fwait
cmp
out
movs
arpl
sub
cmp
(bad)
add
sti
inc
ss
je
mov
ret
push
mov
pop
or
sub
data16
fnstcw
mov
inc
prefetch
sub
(bad)
fistp
popa
jae
jg
into
add
add
push
mov
push
call
jbe
test
push
ins
iret
push
jmp
push
aaa
inc
jno
ins
repnz
mov
sub
call
(bad)
pop
mov
sbb
cmp
pushf
(bad)
pop
sub
and
or
xor
sub
test
xchg
lss
in
jmp
mov
xchg
push
test
push
cmp
pushf
mov
and
sub
fs
pop
mov
cmp
mov
mov
(bad)
scas
xchg
sub
push
outs
and
dec
xchg
movs
shr
fstp
adc
and
loopne
bound
dec
out
sbb
adc
test
call
push
and
pop
jg
mov
shl
outs
xor
or
ret
inc
push
jno
pop
in
jae
or
call
ss
inc
aad
inc
mov
fidiv
dec
aaa
aam
cli
sti
xchg
mov
sbb
mov
pop
lock
nop
cmp
call
stos
das
shl
jecxz
xchg
cmps
aas
outs
inc
mov
enter
xor
or
mov
or
inc
and
mov
cmp
fwait
imul
adc
or
push
lahf
sub
sbb
ins
arpl
adc
enter
in
in
hlt
mov
ret
xor
xchg
or
adc
adc
lahf
pusha
leave
pop
call
cmp
pushf
add
jns
sbb
pop
jno
rcr
test
aam
jecxz
call
push
adc
popa
call
mov
(bad)
mov
mov
mov
adc
or
xor
je
mov
mov
xchg
jp
and
pop
inc
retf
jo
bound
in
in
call
mov
mov
and
mov
push
jno
inc
pop
ficomp
cmc
les
inc
loope
sbb
adc
call
outs
fbld
imul
mov
cmp
jne
push
test
inc
dec
sub
aam
pop
nop
(bad)
cmp
fwait
sub
inc
ss
mov
enter
rcl
pop
mov
cmps
jmp
mov
clc
leave
cmp
mov
adc
or
push
jb
into
movs
imul
daa
or
scas
nop
inc
add
call
ja
add
jbe
inc
or
in
je
jb
push
dec
mov
rol
cmp
nop
mov
xchg
sbb
in
jae
int
pop
add
cmp
sbb
cmp
mov
mov
fcom
dec
adc
test
xchg
dec
imul
adc
mov
jne
pop
in
cdq
out
leave
bound
out
xchg
clc
pop
and
sbb
lds
int
mov
in
mov
push
ret
and
mov
push
dec
movs
xor
test
bound
push
idiv
add
or
imul
cmps
cmp
std
mov
jge
pop
hlt
in
int3
les
xor
aam
lods
and
mov
mov
(bad)
retf
movs
mov
sub
mov
xor
mov
or
ds
mov
xor
cmc
sbb
ins
pushf
lods
pop
test
sbb
loopne
test
jo
add
inc
sar
fstp
xchg
jne
int
mov
sahf
addr16
sbb
test
xor
cmp
test
in
pop
retf
sbb
jnp
and
shl
test
loope
push
cwde
cmp
xlat
xchg
adc
cmps
push
movs
xor
call
inc
dec
push
mov
aam
push
push
fs
out
cmps
imul
jns
cmps
mov
and
inc
out
and
ins
fs
adc
in
sub
mov
retf
stos
sti
fincstp
mov
bound
push
cmp
xor
sub
enter
and
xor
dec
sar
or
idiv
sbb
popf
add
lahf
ret
xchg
(bad)
das
cs
(bad)
stc
jp
sub
in
fsubrp
ret
scas
outs
movzx
inc
push
sahf
pop
sub
mov
dec
cld
inc
sub
push
iret
add
rcl
cmps
dec
sub
xchg
(bad)
push
div
jno
clc
sti
dec
jg
add
dec
test
jle
daa
sar
sub
xchg
sar
xchg
cmp
call
std
nop
jg
sti
or
cmps
push
cmps
lods
mov
movs
adc
cmp
jno
scas
add
push
ds
pop
pop
leave
and
jb
mov
fcomp
das
cmc
aaa
neg
repz
jge
xchg
dec
sbb
xor
mov
add
sbb
cwde
(bad)
mov
loope
mov
mov
aas
inc
loopne
fwait
bswap
cld
rep
jae
out
mov
xlat
ins
aaa
or
aas
lahf
xchg
inc
fisub
add
inc
xchg
inc
inc
xchg
arpl
xor
scas
ss
xchg
neg
fadd
aas
dec
cmps
push
dec
nop
jge
daa
mov
xlat
pop
push
pop
sahf
mov
std
aad
lods
push
rep
cmp
imul
mov
cs
push
mov
(bad)
cli
xchg
into
ins
jnp
(bad)
pop
jo
(bad)
je
xor
push
in
xor
shl
sub
or
pushf
mov
push
jl
out
ins
push
push
fwait
pmullw
stos
pop
loop
sbb
repz
sbb
mov
mov
inc
inc
sub
scas
mov
push
cdq
xchg
imul
in
retf
fsubr
mov
mov
or
or
(bad)
push
pop
sbb
jl
xor
xchg
(bad)
cmc
cmp
sub
mov
sub
xchg
test
and
mov
arpl
xor
sbb
test
xor
or
dec
dec
test
jno
jnp
sahf
cmp
repnz
movs
rol
push
pop
aam
out
aas
xchg
cmps
dec
jbe
jno
dec
jae
scas
mov
fsubrp
out
retf
adc
mov
pop
push
xchg
xchg
xor
sub
or
aam
arpl
(bad)
push
aaa
mov
sub
push
retf
les
or
repz
and
int3
mov
test
adc
and
icebp
lds
cli
cmc
pop
ret
add
cwde
fcom
sub
mov
xchg
ins
or
add
test
(bad)
aam
xchg
push
mov
mov
pushf
mov
inc
add
add
enter
sahf
(bad)
xlat
(bad)
seto
fmul
or
jno
fnstsw
dec
and
stos
bound
mov
retf
mov
outs
pop
hlt
sbb
pop
mov
or
in
lahf
or
mov
rol
sbb
retf
xor
lds
outs
adc
test
adc
fs
ret
neg
not
pop
gs
and
lea
add
dec
and
hlt
test
mov
enter
cmp
cmc
jno
cmp
popf
jle
test
adc
sbb
aad
dec
xor
ins
xor
loopne
or
pop
sbb
icebp
in
pop
lods
mov
mov
jbe
push
mov
lahf
fstp
xchg
fidivr
push
adc
hlt
jge
jecxz
sar
add
add
(bad)
and
inc
and
xor
fwait
cli
in
scas
rol
std
add
idiv
xchg
in
push
mov
fs
xor
out
push
shl
fbstp
lea
push
xlat
cmp
and
mov
push
pop
cmp
popf
mov
push
imul
xor
inc
dec
aaa
mov
mov
iret
cmps
ss
and
sbb
js
mov
mov
ficom
fadd
xchg
add
adc
ret
fs
cld
inc
sti
sub
sbb
retf
cmps
(bad)
pop
cmp
mov
and
enter
push
test
aad
fst
fstp
loope
inc
push
sub
cmc
stc
hlt
sbb
mov
push
inc
jne
stc
data16
inc
mov
out
inc
or
dec
mov
dec
cmp
push
ret
nop
mov
mov
lods
js
inc
dec
popa
xchg
add
test
lods
rol
fbstp
test
repz
sahf
aas
sub
sbb
and
and
push
les
js
out
(bad)
jp
aam
ins
jle
stos
push
cmps
push
sub
ror
jo
mov
out
fstp
adc
push
or
mov
push
sub
or
sbb
iret
dec
dec
fisttp
cmp
mov
adc
(bad)
or
dec
into
clc
les
dec
lea
and
movs
mov
dec
dec
icebp
and
sbb
and
icebp
retf
idiv
mov
dec
(bad)
mov
into
sbb
mov
push
lds
shr
jb
mov
inc
sbb
inc
adc
lahf
lahf
jmp
adc
dec
mov
stc
add
test
jmp
inc
das
(bad)
lds
out
sub
sbb
movs
cmp
out
sbb
jp
pop
pop
mov
ficomp
pop
sub
inc
call
out
in
mov
sub
jb
jmp
mov
in
pop
(bad)
xchg
iret
imul
stc
mov
mov
(bad)
repz
sbb
add
fist
xor
sbb
bound
adc
dec
adc
pop
push
jmp
and
cmp
sub
lea
out
jmp
push
cmp
push
xor
and
jg
or
pusha
aad
js
icebp
mov
test
unpckhps
add
and
and
xor
leave
popa
cmps
aam
jecxz
xlat
mul
retf
adc
in
fisubr
data16
mov
movs
cmp
jno
pop
mov
add
into
mov
lods
xor
das
into
cdq
call
scas
mov
fcomp
outs
je
out
loop
push
mov
jne
cmps
xor
dec
movs
push
inc
xchg
inc
(bad)
cli
add
cld
dec
cld
push
fmul
test
jl
cmps
push
inc
clc
inc
cmps
clc
jp
push
inc
cmps
in
adc
cmc
iret
mov
movs
scas
cmp
arpl
je
mov
imul
je
push
addr16
mov
push
mov
mov
jg
inc
(bad)
mov
jp
dec
jo
inc
cld
daa
cmps
out
push
and
push
test
pop
inc
inc
int3
ins
rcr
(bad)
mov
je
mov
sbb
pop
adc
adc
scas
mov
rcl
cmp
sar
add
in
clc
cmps
mov
mov
aaa
aam
pop
and
mov
jmp
push
mov
or
push
repnz
iret
inc
mov
push
xor
xor
mov
and
lods
sub
push
mov
popa
sti
xchg
mov
scas
dec
mov
retf
movs
jmp
mov
inc
push
loope
in
inc
clc
neg
mov
mov
inc
adc
cld
inc
lahf
pusha
jmp
repnz
dec
arpl
mov
adc
add
dec
pop
inc
xor
push
dec
and
push
xlat
sub
sahf
cdq
inc
mov
hlt
sub
stos
inc
mov
movs
mov
mov
cli
jo
cdq
call
mov
or
mov
inc
push
cmps
inc
inc
pop
or
jmp
jp
mov
enter
in
cmp
inc
(bad)
out
dec
xchg
xor
je
xor
dec
sbb
(bad)
loope
scas
adc
movs
jp
mov
pop
pop
test
outs
mov
movs
mov
movs
jmp
dec
test
aam
xlat
inc
mov
in
dec
mov
jge
inc
adc
mov
inc
popa
movs
inc
jmp
or
shl
or
mov
dec
aad
sub
inc
adc
inc
imul
inc
shr
cmc
cli
fcom
pop
nop
dec
or
iret
cli
xchg
ror
inc
cdq
cmps
mov
push
imul
rol
sub
inc
dec
stos
add
push
and
cmp
movs
dec
call
mov
xor
and
loope
mov
mov
outs
jg
outs
stc
pop
sbb
sub
stos
lahf
xor
dec
je
fstp
mov
into
pop
loope
inc
mov
mov
mov
imul
dec
dec
fsubp
xchg
lods
lds
push
addr16
cmc
cdq
jg
leave
or
into
fnstcw
cli
test
xor
dec
dec
adc
cmp
mov
dec
fst
mov
into
push
fsubr
mov
aam
push
ret
in
sub
and
xor
arpl
out
xacquire
push
dec
mov
mov
aad
pushf
sub
add
cmp
movs
sbb
dec
sbb
add
test
sub
pop
mov
mov
xchg
jmp
aas
mov
push
(bad)
loope
retf
cmp
arpl
and
mov
mov
jecxz
cmp
push
(bad)
jmp
add
sub
mov
jp
outs
fcmovb
test
cmps
imul
clc
aaa
mov
xchg
add
or
cmps
jg
aam
out
callw
inc
out
inc
aam
or
sbb
call
movs
xchg
jne
test
adc
cld
pop
push
jecxz
retf
test
aas
test
cld
pop
out
sbb
aaa
aaa
mov
jnp
cmp
xchg
(bad)
jg
mov
dec
in
sbb
movs
test
mov
sbb
scas
je
pop
bsr
add
add
loopne
out
cmp
std
in
dec
cmps
fiadd
mov
sub
cwde
repz
(bad)
out
push
fsub
(bad)
add
nop
dec
xlat
push
mov
or
popa
test
cmp
pop
cmc
adc
cmps
aad
xchg
push
shl
adc
adc
int3
and
adc
ret
aam
xchg
xor
mov
inc
inc
ds
push
jmp
das
loopne
loope
sub
push
rcl
cmps
sahf
lahf
addr16
sub
sahf
dec
(bad)
mov
xchg
fmul
inc
dec
leave
sub
icebp
outs
xchg
cwde
mov
push
cdq
pop
mov
(bad)
xchg
xor
fidivr
icebp
inc
inc
dec
push
push
inc
sbb
(bad)
in
pop
shr
cmc
imul
fstp
inc
xor
mov
lahf
mov
sti
(bad)
outs
mov
js
leave
add
mov
test
movs
mov
sbb
call
sub
loopne
cmp
mov
pop
mov
arpl
enter
imul
jge
es
loope
cmc
push
ds
aad
retf
stc
stc
std
test
(bad)
xor
cld
cmp
mov
dec
test
mov
imul
xor
xor
pop
inc
jecxz
cmovne
pop
sub
outs
pop
mov
inc
xchg
sbb
ins
mov
sahf
or
call
xor
sbb
pop
cmp
ss
fdiv
lea
retf
adc
sahf
sbb
js
adc
cli
sbb
retf
xchg
int
pop
in
jg
adc
push
adc
jno
or
retf
pop
lea
(bad)
sti
into
cmp
adc
outs
xor
push
mov
jb
stos
push
adc
push
dec
aad
mov
fstp
mov
or
sar
and
aas
dec
mov
fnstsw
mov
sbb
ret
mov
shr
sub
sub
dec
mov
call
xor
mov
leave
xchg
push
xchg
cmps
mov
mov
fimul
out
jge
or
dec
sbb
and
or
jae
scas
push
fnstcw
sbb
inc
sub
fwait
dec
push
fs
push
scas
ret
lahf
popf
jp
cmps
cmp
retf
inc
inc
daa
mov
les
xchg
retf
mov
outs
cmps
mov
pop
xchg
mov
out
cmps
movs
lea
push
xor
stc
sbb
shr
pop
ficom
push
cmp
push
std
xor
xor
xchg
shl
mov
pop
inc
pop
mov
xchg
mov
sub
or
and
das
in
push
cmp
mov
pop
add
ds
jmp
lahf
push
push
(bad)
fwait
inc
cmp
pushf
jmp
or
arpl
mov
stos
cmp
aam
test
repnz
mov
imul
xchg
retf
sbb
sbb
push
xchg
dec
and
punpcklwd
and
pop
dec
xchg
repnz
inc
fdivrp
outs
nop
dec
nop
add
sub
jmp
adc
cmps
call
retf
cmp
add
push
arpl
imul
jnp
mov
dec
dec
add
retf
xchg
mov
bnd
out
sub
mov
push
jl
inc
mov
inc
sahf
(bad)
fdivrp
mov
or
xchg
ins
dec
cdq
pop
pop
cwde
cmp
aad
dec
lods
rcl
stos
push
sub
arpl
(bad)
fisubr
clc
jo
sub
add
stos
dec
test
scas
lods
sub
call
sbb
iret
imul
js
mov
stos
gs
cmp
push
and
ror
xchg
imul
in
enter
adc
push
mov
jecxz
jecxz
mov
mov
jmp
push
mov
pop
cmp
sti
movups
lods
sub
jl
in
mov
dec
mov
ss
loope
loope
sub
and
xor
dec
dec
fcomp
mov
imul
cmp
outs
xor
cmps
arpl
imul
(bad)
loope
scas
shr
mov
jb
and
push
loope
or
adc
push
push
dec
push
aam
test
arpl
loopne
pusha
xor
or
loop
cmps
movs
push
sbb
pop
mov
pop
or
neg
mov
stos
clc
pop
and
data16
cmp
imul
dec
pop
in
jmp
or
dec
inc
dec
add
fdiv
aam
fwait
dec
sti
std
mov
xor
mov
outs
mov
call
cmc
xor
(bad)
rcr
jmp
xchg
inc
fmul
(bad)
mov
sbb
dec
pop
stc
mov
sar
pcmpeqw
daa
js
(bad)
mov
mov
xchg
xchg
xchg
out
ror
xchg
sub
sbb
fdiv
push
aas
out
cwde
test
mov
inc
xlat
clc
cmp
dec
ds
mov
mov
push
dec
sub
js
cmps
cmp
retf
push
mov
es
sbb
fstp
out
or
int
mov
in
add
adc
dec
es
iret
pop
div
cmc
enter
or
test
aam
add
sub
inc
dec
rcr
xchg
add
pop
nop
fbstp
arpl
loop
jnp
add
(bad)
mov
dec
inc
xchg
pop
icebp
push
sub
and
add
ret
nop
fucomi
dec
jge
stos
mov
adc
push
add
cld
cli
pop
cmps
cmp
mov
jecxz
fsub
mov
push
add
fdiv
fisub
ja
fsub
out
and
repz
call
int
test
cmps
xchg
push
repnz
adc
dec
jl
mov
in
lahf
addr16
sti
(bad)
js
xchg
les
imul
jne
das
jb
mov
ss
mov
mov
xchg
test
adc
les
add
repnz
or
mov
sub
loop
loopne
int
mov
jmp
imul
mov
cmps
jno
in
cwde
enter
dec
or
imul
in
pop
loope
mov
in
mov
mov
xor
xor
cvtdq2ps
int3
mov
push
int
cmps
sub
sahf
sub
loopne
inc
cmps
inc
and
shl
imul
pusha
sub
in
outs
data16
es
bound
bound
in
sbb
iret
add
or
mov
mov
rol
and
mov
inc
dec
xchg
xchg
cmps
mov
and
fwait
jp
mov
jnp
bound
lea
add
jl
aam
lea
int
xor
inc
add
cmps
mov
jecxz
popa
mov
inc
mov
xchg
sub
stos
stos
ret
retf
and
mov
push
push
mov
pop
add
idiv
xor
(bad)
add
int3
push
mov
jmp
pop
adc
lods
lock
push
push
or
cmp
aas
lahf
and
sub
sbb
mov
pop
inc
pop
fcom
jl
push
addr16
sahf
pop
das
pop
mov
xchg
push
cli
int
js
lods
mov
inc
xor
fisttp
je
int
sbb
mov
and
pop
cwde
dec
add
mov
ss
in
lock
xchg
stc
jne
xlat
jl
mov
pusha
jle
mov
and
cmps
xchg
test
fistp
or
jmp
aas
pop
fs
popa
jne
inc
xor
movs
lahf
retf
(bad)
das
lods
(bad)
in
stos
sbb
lahf
cmps
add
adc
ins
xor
pop
scas
arpl
scas
mov
dec
ins
ins
int3
or
mov
inc
stos
std
pop
jp
int
mov
loopne
cmp
sbb
jecxz
subps
jmp
xchg
cmps
push
pusha
dec
and
sahf
pop
retf
ret
rcr
sbb
dec
mov
jmp
xchg
xchg
pop
gs
xor
add
push
inc
sub
sbb
add
dec
repz
cmps
mov
sub
xchg
lea
xchg
(bad)
adc
div
push
xor
mov
cs
icebp
jge
push
mov
or
fsubp
test
inc
push
sub
mov
lds
aad
add
ret
push
mov
in
pop
lahf
int3
mov
push
cmps
cmp
das
and
ror
int3
push
inc
jge
sub
(bad)
mov
cs
jbe
call
std
popf
or
outs
fsub
fcomi
or
dec
xchg
aad
dec
pop
pop
mov
jl
pop
scas
icebp
rcl
and
scas
jns
push
xor
mov
mov
push
stos
jmp
not
out
div
fmul
je
dec
cmps
ficomp
and
je
imul
ins
outs
mov
mov
sbb
add
bound
mov
mov
sbb
fimul
fs
pop
jmp
cwde
sub
or
outs
ja
push
aad
les
mov
push
jmp
dec
and
xchg
xchg
hlt
leave
xor
scas
lahf
push
xor
jo
pop
cli
and
loope
clc
fnstenv
mov
adc
add
add
hlt
xchg
std
or
add
jno
mov
test
pusha
push
aas
rcr
and
jnp
dec
mov
popa
mov
pop
lea
nop
push
or
mov
xchg
out
or
pop
dec
dec
es
mov
mov
inc
push
dec
push
and
popa
enter
push
mov
ds
ins
mov
int
fcom
push
or
imul
add
jo
aad
call
xchg
cld
ins
inc
test
push
cmp
into
xor
cmp
dec
inc
pop
arpl
dec
dec
ret
xchg
(bad)
dec
push
movs
mov
retf
in
rcl
push
push
stos
push
imul
sub
mov
pop
leave
idiv
in
scas
ins
mov
push
xchg
call
add
dec
push
sahf
adc
bnd
mov
mov
dec
inc
hlt
dec
inc
adc
scas
lahf
push
mov
push
call
inc
sub
adc
pop
call
sub
jae
pop
adc
aam
enter
neg
in
in
sub
adc
adc
stc
xchg
sahf
pop
outs
inc
pop
ins
out
mov
dec
xchg
sahf
cdq
mov
ror
movs
xor
or
jge
jnp
mov
and
add
add
ror
cwde
xor
sub
adc
leave
(bad)
mov
pop
push
cmp
push
das
xchg
add
movs
and
sub
loopne
jns
mov
inc
repz
xchg
fld
popa
hlt
icebp
dec
mov
movnti
mov
adc
mov
dec
sub
(bad)
push
pop
jecxz
ins
sbb
movs
dec
adc
xor
add
cs
mov
xchg
and
mov
bound
aaa
outs
inc
and
in
fimul
(bad)
inc
repnz
dec
cwde
mov
out
in
cmps
retf
mov
sbb
inc
movs
mov
cmp
inc
sub
ins
adc
ja
in
sbb
pop
daa
sar
push
cmps
lea
test
dec
xchg
bound
and
sbb
cmps
sti
sub
test
xor
add
inc
xchg
cdq
sub
xlat
mov
fdiv
cli
jle
xchg
in
popa
xchg
movs
movs
push
cli
test
repz
das
adc
sub
stc
push
cld
repnz
lods
push
imul
push
xor
imul
mov
mov
xchg
mov
sub
mov
xor
or
dec
sbb
movs
jp
cmp
rcl
push
dec
inc
popf
(bad)
pushf
mov
push
pop
xor
lods
test
icebp
iret
out
cmp
out
xor
les
push
inc
imul
icebp
repz
in
push
jecxz
inc
ficomp
pop
jns
cmp
sub
aas
test
cmp
hlt
in
aas
es
(bad)
jnp
(bad)
mov
xor
es
aaa
sbb
stos
stc
push
ret
xor
inc
and
gs
ss
iret
and
xchg
stc
push
jmp
push
stos
mov
movs
add
sar
xor
or
retf
push
lea
jne
and
scas
mov
sbb
loope
jmp
stc
jmp
push
retf
push
push
cmp
inc
fwait
cwde
xchg
arpl
pop
pop
stos
lahf
scas
mov
sub
(bad)
mov
scas
in
loope
mov
mov
ficomp
jnp
dec
out
in
sbb
shl
mov
ja
fstp
cmp
sub
xchg
std
dec
repnz
dec
push
loop
stc
add
outs
test
pop
fcomip
test
add
mov
jle
sbb
js
fdivr
xor
loope
imul
std
sub
mov
loope
or
ret
mov
retf
pop
push
sbb
repnz
les
test
push
push
sbb
stc
push
xchg
call
fcompp
mov
mov
xchg
push
or
sti
js
icebp
ror
push
mov
sbb
lods
inc
aaa
not
xchg
fisttp
sub
popf
les
in
jp
jne
cmp
mov
test
sbb
jo
dec
call
js
sbb
daa
xchg
lods
xor
inc
mov
mov
stos
mov
xchg
dec
sub
push
or
(bad)
in
out
fnsave
dec
sahf
xor
ror
(bad)
fist
mov
push
sub
dec
push
push
pop
sub
lea
iret
retf
cmps
push
jae
mov
lahf
cmc
sub
ss
fcmovnbe
jmp
imul
fidivr
xchg
cld
stos
dec
loopne
mov
sbb
ss
xchg
dec
inc
push
outs
outs
sub
ds
inc
test
repz
xlat
mov
mov
ret
scas
scas
mov
xor
loop
inc
xchg
shr
in
(bad)
jbe
sahf
xchg
mov
adc
xor
adc
adc
cmp
push
inc
test
stos
xlat
inc
popa
in
daa
mov
cwde
popf
adc
cli
xor
sub
mov
mov
xchg
add
scas
jp
cmp
xchg
xchg
push
cmps
leave
push
dec
cmp
and
cmp
push
lds
xchg
js
aaa
sti
(bad)
ds
dec
mov
mov
add
out
fadd
imul
sbb
xor
adc
out
pop
sub
pop
aas
pop
mov
pop
push
popa
lahf
jno
or
cmp
push
(bad)
mov
stos
and
sub
adc
add
sub
mov
xchg
cmps
sbb
into
mov
cmp
fbld
cli
ins
mov
and
sub
pop
xlat
adc
sahf
setg
scas
outs
nop
pop
cmp
je
jg
call
ja
sbb
xchg
mov
xchg
or
mov
push
xchg
xor
(bad)
and
sub
jbe
pop
sub
mov
inc
pop
push
adc
sbb
int3
mov
mov
dec
add
dec
lods
mov
call
cmp
xchg
cmps
test
fs
push
push
pop
and
push
sub
dec
in
int3
ror
fcom
inc
inc
mov
push
push
or
adc
dec
jno
int3
scas
and
jge
jg
fucomi
icebp
dec
xchg
xchg
add
ins
jle
pop
jecxz
and
or
pop
mov
jo
or
inc
stc
out
das
bnd
(bad)
nop
nop
cmp
not
ins
jmp
add
mov
mov
and
lds
repnz
xor
hlt
mov
and
push
xor
push
pop
imul
push
idiv
je
sub
mov
mov
pop
jne
xor
fcomp
mov
mov
push
mov
lock
xor
das
cld
inc
adc
cdq
movs
outs
add
cdq
sbb
mov
dec
bound
ret
inc
stos
out
sub
cmp
mov
icebp
lods
jge
xor
iret
sbb
mov
bound
jb
adc
push
rol
cwde
hlt
sti
xstore-rng
cmps
inc
xor
xor
out
dec
sub
movs
imul
pop
cli
fcom
add
jmp
adc
dec
sbb
leave
daa
pop
cmp
mov
sub
std
movs
push
sbb
sub
ficomp
push
xchg
cdq
and
test
(bad)
sub
inc
or
cmp
out
leave
jb
xor
xchg
push
dec
jecxz
sub
inc
push
sbb
xor
movs
jge
icebp
pop
cs
addr16
push
push
bound
xor
lds
shl
inc
jne
enter
leave
inc
or
call
pop
stos
xor
leave
sub
rcl
lahf
and
loop
jnp
(bad)
jecxz
push
or
jg
stc
stc
cld
mov
cmps
js
sti
cli
fstp
jo
ror
popa
mov
push
imul
ret
xlat
lock
(bad)
mov
or
out
sbb
add
adc
add
bnd
cld
hlt
cmp
lods
rcl
and
push
push
dec
icebp
mov
or
and
pop
outs
push
mov
pop
fimul
popf
dec
jb
ret
mov
mov
dec
aam
xlat
cld
cmp
movs
dec
aad
and
jmp
pop
xchg
rol
mov
aad
fisub
call
cmps
clc
dec
clc
sub
push
add
add
adc
jecxz
pop
cli
je
add
mov
adc
dec
inc
dec
and
jo
jmp
mov
imul
outs
sub
test
inc
push
adc
fimul
or
test
call
mov
xchg
push
(bad)
push
rcl
and
xchg
push
xchg
ds
sti
dec
fist
popa
sbb
mov
scas
lahf
iret
push
popf
add
or
sbb
xor
es
jb
retf
div
out
push
push
and
adc
add
test
adc
dec
and
cli
jae
mov
cmp
imul
xor
or
aas
aad
pop
fidivr
or
push
sub
mov
not
sub
pop
bnd
mov
push
mov
pop
fs
rol
jmp
pop
jmp
or
mov
test
xchg
jo
bswap
mov
mov
data16
lods
rcl
inc
xor
sbb
addr16
cmp
sub
pop
pop
dec
add
xchg
inc
fld
mov
int
loope
and
xchg
push
inc
cmp
pop
ror
mov
xor
inc
pop
shr
fcomp
adc
and
hlt
jns
jno
(bad)
rcl
cmp
pop
fdivrp
in
dec
sub
jmp
in
jl
ja
mov
or
int
movs
and
add
pop
push
sahf
xchg
xor
ins
push
lods
jb
xchg
into
mov
xor
repnz
pop
retf
mov
(bad)
xchg
in
int
mov
xchg
sub
lds
(bad)
aad
das
addr16
sar
add
xor
mov
mov
xor
mov
sar
or
dec
in
xchg
cmps
cmp
xchg
shr
inc
repnz
adc
push
lods
add
push
push
ds
movs
ret
bound
mov
pop
xor
int
cdq
mov
mov
aaa
test
xor
imul
xor
add
inc
hlt
outs
jmp
add
cmps
dec
or
mov
outs
fcomp
jg
retf
cmp
cmp
test
push
xor
adc
stos
mov
fwait
inc
inc
or
in
dec
(bad)
xchg
or
ds
dec
(bad)
mov
inc
push
out
test
int3
je
xchg
xor
mov
rcl
inc
call
and
jmp
xchg
and
sahf
sahf
push
push
and
mov
js
push
cmp
mov
jno
jae
or
dec
cdq
test
mov
jne
sub
add
pop
mov
push
sti
dec
jp
jno
dec
jmp
sahf
and
dec
inc
push
xchg
inc
inc
in
pop
or
(bad)
jg
jle
mov
ret
(bad)
mov
push
push
mov
xchg
jno
pop
add
jae
stos
jmp
pop
mov
es
dec
push
sbb
test
aas
ror
sub
pop
jecxz
(bad)
push
enter
imul
adc
pop
not
lods
imul
sub
cmps
mov
mov
xor
fisttp
sbb
inc
scas
in
push
jne
dec
xchg
dec
(bad)
sub
pop
inc
push
fs
repnz
mov
mov
add
jecxz
inc
sti
cmp
mov
sub
push
fsubr
add
dec
nop
dec
mov
or
js
(bad)
adc
xor
xor
(bad)
ficomp
push
or
mov
add
jmp
mov
mov
daa
mov
push
inc
enter
mov
xor
int
or
or
(bad)
jnp
xlat
push
fnstsw
add
sbb
nop
(bad)
push
dec
sub
in
fwait
mov
cmps
loopne
jno
movs
dec
inc
add
les
repz
pop
and
in
fistp
cmps
stos
dec
push
mov
mov
dec
int3
in
(bad)
movs
adc
xchg
loope
mov
mov
and
xor
lock
gs
mov
add
push
or
and
in
jmp
cwde
ret
and
cmps
das
sbb
jae
lods
jne
or
add
xlat
sbb
(bad)
int3
int
out
aaa
add
pmuludq
adc
ds
add
in
and
xchg
jo
mov
out
push
enter
lahf
mov
(bad)
ret
pop
adc
arpl
das
add
cmps
out
jne
xchg
push
fcom
mov
pop
pop
push
cmp
jns
int
adc
jno
xchg
aas
retf
stc
je
mov
cmp
and
call
stos
cmps
in
popa
loop
push
std
cmp
ins
mov
and
xchg
sbb
cmp
push
dec
gs
sub
shl
mov
sub
fistp
push
pop
cmps
and
repz
in
scas
dec
call
mov
aaa
jo
pop
mov
push
push
add
movs
stos
icebp
add
push
test
inc
dec
cmps
repnz
mov
(bad)
cmovbe
add
mov
jmp
mov
(bad)
adc
aam
lods
pop
aas
cmps
xchg
std
pop
xor
mov
mov
into
int
mov
shl
xchg
iret
movs
movs
jle
xchg
push
es
push
and
cmp
imul
adc
ja
push
mov
sub
fild
imul
mov
rcr
dec
ja
(bad)
mov
daa
dec
push
in
dec
mov
mov
shl
pop
stc
hlt
sub
cmp
push
and
aaa
imul
cmp
outs
popa
sbb
xchg
inc
lods
(bad)
inc
ins
xor
jae
sbb
push
test
in
mov
cmp
stos
lock
inc
push
jmp
inc
ret
inc
cmp
mov
adc
les
jle
or
lea
mov
out
pop
pop
sbb
push
sbb
inc
jbe
push
into
mov
add
imul
sahf
adc
mov
sub
push
pop
inc
xlat
pop
cmc
jbe
jo
shl
xchg
jo
cmp
cmps
test
loope
lds
add
pop
pop
jmp
jg
mov
outs
fld
ror
jp
push
inc
mov
dec
test
cmp
inc
nop
repnz
jl
aad
in
popf
mov
fstp
push
jb
and
imul
mov
gs
inc
dec
mov
fwait
xchg
das
ins
ds
(bad)
mul
ins
pop
and
adc
pop
and
cmp
fdiv
rcr
js
lock
(bad)
call
fdivr
xchg
outs
push
in
xchg
mov
lea
(bad)
scas
jno
(bad)
gs
xchg
movs
stos
push
std
inc
lock
sub
lds
adc
push
xlat
sbb
cmp
pop
xchg
push
mov
xchg
mov
sbb
push
cmp
xchg
aam
lods
add
mov
and
mov
sbb
mov
(bad)
(bad)
(bad)
sbb
test
cmp
fimul
das
rcr
inc
outs
in
add
pop
aas
mov
jl
fimul
xchg
pop
enter
int3
imul
imul
push
inc
sbb
call
int3
jmp
mov
sahf
fst
adc
dec
hlt
inc
(bad)
arpl
mov
arpl
adc
jo
push
popa
(bad)
repnz
push
inc
cwde
fdiv
xor
ret
push
sbb
pop
call
adc
out
fcmovu
sub
sahf
movs
lea
push
sub
test
cmp
int3
lahf
xchg
dec
je
mov
push
inc
mov
dec
xor
and
xchg
dec
push
cmps
push
ret
push
sbb
inc
push
ror
inc
call
mov
xor
pop
ss
or
lahf
xor
mov
mov
xchg
sub
fs
sahf
mov
and
pop
sub
arpl
mov
cmp
ins
mov
or
xchg
arpl
imul
dec
and
int
fcmovne
mov
dec
mov
ins
imul
push
xchg
and
jo
hlt
popa
jmp
xor
jne
dec
cmps
sbb
cmp
cmp
scas
and
jg
jg
sti
mov
xchg
push
and
push
test
xchg
adc
in
push
gs
sub
mov
movs
sub
inc
les
cmp
cdq
dec
pop
inc
pop
js
ja
push
sbb
jecxz
push
push
gs
push
fwait
repz
fadd
arpl
mov
stos
jmp
pop
xor
jecxz
out
lds
or
pop
pop
ds
jns
lahf
xlat
mov
ret
sahf
xchg
xchg
xor
daa
xchg
dec
rol
push
jae
fisttp
xchg
jno
and
arpl
xchg
loope
sar
test
or
pop
stc
loope
(bad)
fist
repz
cmps
(bad)
out
cld
push
jecxz
or
cmp
jne
mov
xchg
aam
leave
bound
mov
mov
div
fistp
and
adc
sub
cld
pop
xor
fcom
mov
dec
xchg
and
add
sbb
mov
in
push
cmp
dec
outs
push
jne
sar
mov
mov
int3
mov
ins
out
(bad)
cld
adc
push
mov
loope
push
mov
fld
sub
push
cmp
inc
push
(bad)
mov
jae
xchg
dec
adc
ins
mov
inc
mov
bound
dec
cld
push
repz
cmps
inc
ficom
movs
xchg
mov
pop
xor
mov
test
sub
(bad)
dec
add
xchg
aaa
mov
pop
mov
loop
enter
mov
add
cli
arpl
mov
inc
outs
pop
pop
fstp
and
pop
add
test
in
mov
and
push
movs
call
cmp
mov
and
pop
nop
xlat
mov
jnp
aaa
sbb
stc
jl
ds
in
xchg
mov
mov
sub
push
dec
xor
aad
add
inc
test
cmp
bound
sbb
aam
or
nop
dec
mov
xchg
fucomip
sti
cmp
pop
rol
adc
pop
es
sub
inc
and
sbb
dec
jmp
and
lods
jo
and
inc
pop
cmps
mov
jns
sub
cmc
sbb
inc
sbb
lods
lods
imul
xchg
push
xor
inc
cmps
call
(bad)
mov
pop
pop
scas
mov
movs
xlat
inc
scas
jo
add
or
cmps
aad
pop
(bad)
leave
call
icebp
jmp
ins
mov
mov
out
cmp
adc
call
jbe
inc
int3
jnp
out
adc
lahf
cs
inc
int3
inc
xchg
test
mov
in
pop
fbstp
into
leave
pop
in
xchg
and
ds
jno
stos
push
cmp
jae
dec
xchg
(bad)
and
and
push
sub
dec
pop
inc
adc
xchg
les
shl
add
fst
(bad)
addr16
aam
movs
push
rol
popf
jp
pop
lods
and
test
loope
or
push
inc
or
js
mov
(bad)
outs
or
movs
in
jg
(bad)
cli
dec
or
sbb
inc
rol
jno
jecxz
sbb
jle
sar
popf
and
jns
int
jo
aas
jecxz
idiv
xor
pop
sbb
mov
movs
pop
jne
aad
pop
dec
aas
xchg
std
inc
inc
popa
in
neg
jecxz
cmp
sub
ss
or
div
movs
js
mov
cs
mov
sbb
fadd
cmp
ret
aam
mov
xchg
xchg
mov
scas
fucomi
pop
xchg
cmp
mov
cmps
and
movs
shl
sbb
push
adc
(bad)
pop
xor
ds
add
adc
xchg
jae
cmp
mov
ja
xor
shl
inc
test
sti
mov
mov
fsubr
loop
push
adc
or
inc
pop
(bad)
adc
mov
mov
leave
ret
cdq
cmps
sbb
fsub
stos
scas
mov
or
(bad)
mov
out
inc
cmp
inc
jmp
mov
hlt
sti
popa
jne
sbb
push
cmp
xor
cmp
jg
mov
(bad)
ins
sub
adc
push
shl
rcr
imul
int3
xchg
xchg
mov
das
(bad)
sahf
cmps
fdiv
sbb
push
sar
xchg
in
(bad)
movs
xor
jge
mov
inc
xchg
sub
xchg
rol
mov
mov
xlat
push
mov
push
pushf
sub
add
mov
(bad)
jg
xchg
aaa
push
push
push
sub
push
out
ins
push
nop
bound
adc
aad
out
sbb
add
aam
xor
cdq
sub
cdq
and
sub
int3
lea
dec
scas
or
inc
int
or
or
adc
je
xchg
int
sti
pop
mov
retf
cmp
movs
dec
scas
inc
dec
sub
call
ror
add
push
out
jnp
gs
ss
dec
mov
dec
scas
popa
test
ror
pop
dec
cmp
js
fmul
pop
fwait
sti
push
ins
fsubr
mov
das
push
sub
add
(bad)
mov
(bad)
fnsave
out
push
repz
add
push
inc
xor
push
sbb
call
fdivr
sbb
jne
test
call
in
ins
add
or
ds
or
dec
in
ins
pushf
shr
sti
sbb
arpl
jl
and
ds
mov
hlt
dec
leave
pop
jecxz
dec
in
lock
out
movs
pop
stc
ds
(bad)
adc
jg
mov
xor
jge
xor
add
mov
adc
xor
mov
mov
adc
jp
rcr
aam
popa
xchg
fs
jb
retf
repz
aas
push
test
ins
ror
ins
push
test
cmps
sbb
jp
rcr
and
arpl
enter
dec
inc
fwait
inc
push
mov
inc
sbb
pushf
pop
mov
jp
(bad)
mov
pop
in
leave
stos
jae
repnz
mov
arpl
sbb
shr
sbb
lea
pop
xor
(bad)
(bad)
outs
fsubr
(bad)
cmp
hlt
fstp
mov
imul
in
(bad)
rol
xor
test
mov
or
fs
test
pop
test
pusha
cmp
test
adc
ins
sub
dec
loope
div
mov
sbb
pop
mov
cmp
into
retf
dec
xor
or
fiadd
pop
xchg
bound
sbb
cmp
ss
pop
cmp
ins
xor
dec
push
in
out
aaa
arpl
ja
jae
mov
bound
xchg
push
push
cld
inc
and
div
jecxz
in
inc
xor
js
inc
and
mov
cs
jl
or
xchg
jg
mov
push
mov
add
mov
pop
jge
cmp
out
push
mov
sbb
cmps
xor
xchg
cmp
ss
(bad)
mov
mov
in
outs
loope
mov
test
arpl
mov
out
or
ins
sbb
add
test
push
nop
(bad)
lods
outs
mov
mov
xor
and
inc
pop
push
stos
dec
retf
out
xlat
lods
test
iret
mov
inc
outs
adc
dec
mov
xchg
push
xor
es
sbb
mov
sub
mov
je
shl
lds
lods
mov
in
aam
je
cmp
retf
sahf
ret
sbb
mov
xchg
pop
aas
aas
mov
(bad)
xchg
std
loope
mov
pop
jmp
sbb
xchg
xchg
adc
push
inc
in
nop
push
pop
aas
or
(bad)
rcpps
aad
add
jbe
ret
xchg
or
loop
repnz
jge
adc
shl
push
mov
out
div
dec
(bad)
push
(bad)
pop
and
pop
fld
fstp
int3
sar
inc
icebp
cmp
pusha
jge
js
test
fistp
out
into
or
cmp
cmps
dec
or
push
mov
ret
icebp
pop
mov
jmp
sub
pop
out
sub
fidiv
(bad)
pop
and
shl
in
imul
dec
pusha
inc
pop
(bad)
push
inc
cmp
xor
push
movs
jmp
mov
pop
ret
into
push
cmp
cwde
ss
adc
rcr
and
mov
lea
and
sbb
dec
movs
mov
xchg
mov
test
aad
retf
add
sub
ret
idiv
aad
and
aaa
lds
push
lahf
push
inc
or
sub
das
ins
cmp
mov
jbe
mov
pop
sub
fs
lds
push
jb
sub
push
in
xor
mov
enter
(bad)
and
inc
dec
dec
cmp
lock
and
xchg
dec
mov
sar
data16
dec
adc
or
mov
ja
retf
lock
jae
mov
in
stc
cmps
cdq
scas
popa
in
aam
out
sbb
sbb
mov
or
xor
cli
out
or
scas
cmps
les
pop
stos
pop
inc
xchg
adc
fwait
push
int3
push
in
jle
pop
bnd
fisttp
cdq
jne
dec
push
inc
add
call
outs
jle
jb
xchg
add
retf
repnz
sti
pop
push
xchg
test
add
push
adc
and
fldenv
test
test
inc
mov
inc
push
push
jo
in
mov
neg
add
rcr
mul
pop
fwait
cmp
mov
or
mov
and
jns
cwde
(bad)
inc
je
std
int3
xchg
ret
or
pop
sub
pop
fwait
inc
(bad)
mov
xor
pushf
stos
or
dec
hlt
pusha
sub
popf
or
das
push
das
xor
pusha
mov
loop
retf
sbb
mov
dec
xor
je
adc
cmc
sub
jo
or
mov
xchg
aam
sbb
hlt
mov
dec
scas
lds
movs
(bad)
push
push
movs
mov
mov
in
cmp
stc
je
mov
(bad)
daa
jae
xor
retf
into
rcl
mov
call
es
add
call
jns
ror
dec
repnz
adc
xchg
push
mov
dec
push
push
ds
adc
gs
les
sub
les
mul
push
ins
out
mov
push
femms
cmp
jge
mov
daa
pop
dec
sub
dec
inc
mov
mov
mov
xchg
aad
xchg
dec
rcl
cdq
xchg
push
adc
(bad)
iret
imul
dec
adc
ins
xor
scas
pop
mov
sahf
ja
jbe
jno
mov
xor
out
popf
cs
and
hlt
fstp
mov
mov
push
push
xchg
push
pop
(bad)
(bad)
ficom
mov
fs
xlat
add
dec
js
cmc
cmps
adc
jae
pop
pop
sbb
mov
std
aam
sub
inc
adc
pop
mov
ret
lahf
sub
cmp
iret
ins
jg
mov
in
rol
retf
rcl
mov
lock
icebp
pop
les
and
pop
retf
popf
aam
shl
xor
and
and
or
push
dec
add
pop
sahf
add
jns
in
pop
mov
repz
out
pushf
sub
push
jl
mov
mov
push
sbb
sbb
je
fscale
sub
pop
xchg
mov
outs
sub
jmp
xchg
dec
mov
mov
fimul
test
mov
push
pop
movs
(bad)
mov
pusha
dec
jbe
daa
fiadd
jne
adc
xor
stos
inc
sub
xor
out
mov
mov
fidivr
mov
test
adc
inc
movs
push
xchg
add
mov
hlt
add
movs
mov
jecxz
loopne
cmp
sub
or
lock
cmps
pop
fisubr
fsubr
test
push
test
add
aaa
gs
adc
ds
cwde
outs
mov
fsub
or
push
mov
inc
sub
dec
retf
div
xor
ins
daa
mov
jnp
arpl
dec
xor
sub
xchg
dec
mov
pop
arpl
sahf
xchg
xchg
pop
cdq
jmp
and
xor
add
mov
sub
adc
sbb
add
fld
gs
imul
and
mov
mov
jmp
js
(bad)
call
js
test
mov
cmps
mov
retf
sub
test
int
ss
pop
jp
jns
movs
leave
(bad)
sbb
hlt
jae
push
xchg
pop
push
xchg
not
fnstenv
mov
(bad)
mov
lock
movs
push
ret
push
aas
popa
pop
push
mov
test
aaa
call
dec
test
mov
sbb
dec
xor
inc
jno
xor
mov
outs
shr
js
xor
push
push
js
int
jecxz
or
clc
scas
dec
mov
das
inc
or
test
push
jmp
mov
jne
mul
out
dec
jo
adc
cld
pop
sub
(bad)
lahf
push
fsubrp
in
mov
loop
and
xor
lods
dec
cdq
adc
mov
cmp
xchg
push
mov
scas
sub
and
push
rol
mov
test
imul
pop
cdq
cmp
mov
xchg
mov
lods
xor
inc
int3
sti
jl
and
hlt
stc
inc
stos
sbb
push
pop
repz
pop
aaa
ins
or
xchg
and
cmps
xchg
push
mov
dec
adc
push
daa
enter
fcmovbe
xor
aaa
cmp
jg
xchg
sbb
mov
jle
jnp
pop
in
pushf
mov
sbb
xchg
push
dec
imul
cmp
jnp
in
enter
aaa
jbe
fldenv
add
inc
dec
cmp
sub
jle
cmp
inc
cld
sub
mov
xor
xor
jmp
mov
std
mov
sub
or
push
push
mov
sub
(bad)
gs
and
mov
(bad)
dec
mov
fdivr
pop
cwde
mov
xchg
mov
(bad)
jne
jnp
in
outs
movs
mov
fisttp
sub
int3
hlt
xchg
(bad)
dec
jg
add
lods
push
lock
adc
leave
xor
push
imul
scas
mov
aad
cdq
or
enter
js
adc
or
lods
(bad)
(bad)
ret
dec
leave
es
arpl
push
(bad)
das
or
js
and
addr16
jmp
mov
js
mov
(bad)
jmp
test
inc
cmp
sub
and
sub
cdq
mov
push
dec
dec
sbb
add
mov
jmp
and
or
jmp
adc
imul
and
div
(bad)
pop
sbb
mov
jmp
fmulp
test
dec
js
test
call
cmp
and
inc
into
mov
adc
outs
idiv
dec
mov
popa
fld
(bad)
icebp
xor
cmp
mov
jns
mov
in
arpl
popa
mov
xchg
push
dec
add
hlt
aaa
outs
mov
and
push
push
sbb
out
fstp
mov
push
push
and
inc
jecxz
lahf
jo
cmp
inc
dec
dec
dec
push
push
es
mov
inc
shl
cld
jle
js
mul
fwait
das
test
(bad)
mov
add
mov
scas
push
sub
adc
mov
sub
cmp
sub
inc
xchg
(bad)
push
adc
out
popa
loope
lock
adc
mov
stos
js
movs
(bad)
adc
hlt
mov
shl
dec
inc
inc
pop
or
jg
xchg
mov
add
xchg
add
add
fistp
xor
lods
repz
sti
sub
xor
add
pushf
fcmove
push
mov
add
inc
or
inc
jp
cmp
xchg
loope
jne
cmp
push
inc
pop
push
push
cmp
mov
jecxz
enter
inc
repnz
mov
mov
mov
xchg
inc
sbb
and
or
sub
xchg
out
sub
and
lods
or
sbb
push
xchg
fsubr
adc
cmp
pop
imul
jge
pop
outs
outs
add
sbb
mov
push
inc
cmp
sbb
clc
ror
repz
inc
jle
clc
jle
mov
jno
jge
cmp
mov
sti
iret
mov
out
aam
push
push
xchg
int3
jg
sub
ret
lods
mov
xchg
mov
adc
mov
sar
push
rol
or
or
pushf
jp
xlat
addr16
push
mov
dec
in
(bad)
int3
jo
inc
loope
cmps
inc
dec
lock
mov
dec
cmp
adc
sub
stc
jne
out
sbb
mov
loope
inc
mov
jl
lods
push
scas
seta
rol
aad
cmps
mov
pop
movs
xchg
jl
in
mov
rcr
or
lods
(bad)
sbb
int3
arpl
retf
data16
jns
jae
retf
movs
mov
push
fld
adc
jmp
pop
icebp
js
call
xchg
addr16
shl
adc
add
test
or
rol
jns
nop
fsub
imul
repz
adc
sbb
cwde
xchg
adc
fld
gs
add
scas
xor
mov
pop
cmp
ins
rcl
cmp
ss
xor
push
dec
xchg
call
stos
and
push
xchg
imul
or
or
cmps
lds
mov
shl
mov
and
cmps
jge
nop
sbb
cmp
retf
mov
sar
out
imul
int
and
ins
pop
std
xor
dec
je
xor
adc
(bad)
jg
(bad)
in
popa
jno
pop
outs
mov
jl
test
sbb
daa
test
rcl
push
mov
mov
cld
add
add
pop
test
sub
jbe
sub
(bad)
xchg
inc
add
cmovb
pop
push
aas
outs
sbb
gs
test
test
jmp
sub
test
and
retf
rcl
mov
xor
inc
test
add
xchg
jge
sahf
cdq
cmp
arpl
xor
movs
repnz
and
or
inc
add
inc
sub
scas
pop
aam
imul
push
sub
xor
mov
movs
inc
push
adc
movs
(bad)
fiadd
scas
in
pop
mov
fs
fld
test
add
add
cmp
in
sbb
jnp
cmc
and
add
jbe
lock
add
addr16
sub
shr
add
jnp
pushf
add
lods
test
xchg
xchg
pop
lock
mov
arpl
popf
ret
out
mov
sbb
inc
xchg
cmp
inc
push
adc
push
out
std
arpl
xor
sub
jnp
fcom
pop
jno
retf
and
push
push
sub
loopne
sub
mov
cwde
lods
and
lea
cmps
nop
test
adc
out
inc
fcomp
jnp
sar
(bad)
mov
imul
push
add
xor
xchg
inc
sub
dec
mov
out
xchg
scas
scas
mov
sub
jo
add
mov
sahf
mov
imul
neg
ret
add
cmp
mov
add
or
movs
pop
scas
inc
pop
jecxz
sub
movs
xor
adc
rol
or
je
inc
sar
aad
ss
sti
push
ins
jl
mov
xchg
mov
aas
xlat
outs
sub
data16
cdq
iret
in
cmps
inc
sub
lea
nop
dec
int
push
mov
sahf
push
mov
pop
arpl
or
std
fwait
pop
(bad)
aad
fs
aas
push
mov
es
rol
mov
xlat
xchg
fisttp
call
xchg
sub
loopne
cmp
xchg
sar
push
dec
shl
ss
jmp
repz
jp
(bad)
pusha
xchg
dec
sbb
jae
pop
mov
jmp
cmp
jb
adc
dec
ror
in
arpl
mov
pop
sub
and
(bad)
shl
pop
sbb
add
mov
cli
fnstenv
imul
cmp
enter
dec
sub
cmp
imul
out
out
add
fld
mov
mov
hlt
jg
outs
add
add
or
sbb
je
cli
out
sbb
imul
scas
pop
push
jae
dec
hlt
rcr
mov
adc
retf
stc
sbb
test
fcom
je
movs
enter
aam
push
pop
sbb
ds
add
mov
in
mov
rcr
mov
sub
push
cmp
hlt
mov
inc
nop
nop
jecxz
(bad)
inc
push
or
inc
push
and
and
cld
std
jge
ins
cmp
mov
fiadd
inc
or
jecxz
inc
xor
je
cwde
and
push
and
sbb
mov
in
loopne
pop
movs
fidiv
push
retf
jp
test
and
and
je
xor
adc
pop
jnp
mov
ins
xchg
gs
push
pop
iret
into
xchg
push
cdq
push
jge
stc
pop
jae
xchg
inc
adc
and
add
cs
push
stos
mov
movs
rol
sub
arpl
cwde
hlt
std
out
loop
je
mov
xchg
bound
out
jge
sbb
test
or
or
add
mov
push
sbb
movs
pop
cmps
inc
cmp
push
inc
call
rcl
push
ins
int
inc
push
ds
push
mov
stos
adc
sub
outs
and
mov
inc
jnp
jecxz
inc
dec
pop
mov
lahf
push
xor
and
xchg
div
daa
and
push
push
or
mov
iret
cmps
cmps
inc
arpl
mov
jmp
(bad)
sbb
mov
call
and
mov
scas
or
adc
stos
fwait
jnp
cmp
xchg
sar
iret
push
xchg
lea
jbe
push
ds
cmps
xlat
xchg
lods
popfw
pop
jns
xlat
loopne
inc
lods
pop
sub
sbb
xchg
cmp
inc
bound
inc
dec
lods
sar
imul
(bad)
sar
mov
sub
sub
cdq
adc
xchg
fsubr
xor
pop
aam
sub
daa
test
push
imul
mov
mov
xor
pusha
mov
js
xor
adc
inc
xor
lods
lea
cmc
mov
push
daa
call
jge
sahf
mov
add
loopne
retf
mov
ret
enter
dec
std
xchg
jmp
in
gs
sub
mov
in
cmp
test
ja
push
sub
dec
repnz
sar
sub
cwde
jmp
sub
imul
repz
int3
(bad)
xor
ret
or
sbb
add
add
(bad)
iret
sbb
lahf
cmc
mov
fs
mov
daa
jne
dec
push
adc
rol
retf
push
movs
sub
sbb
movs
mov
fwait
mov
mov
movs
rol
jp
pop
ret
retf
inc
aam
push
leave
inc
add
push
sub
jmp
xchg
mov
or
rcl
inc
push
test
inc
loope
sbb
stos
outs
inc
pop
aad
jmp
xchg
stos
lock
sbb
add
out
test
adc
loopne
push
repz
mov
test
lods
xchg
cdq
loopne
es
add
pop
push
inc
outs
add
lahf
ret
(bad)
mov
pop
popa
aad
push
mov
push
xchg
inc
retf
cmps
call
mov
mov
test
sbb
and
xchg
ins
dec
push
lods
jecxz
shl
fwait
sahf
push
neg
cli
sti
push
out
xor
dec
jmp
ret
cmp
mov
inc
aas
cli
mov
sub
mov
hlt
and
retf
xchg
mov
and
outs
or
ja
(bad)
adc
add
ror
and
daa
xchg
jl
out
add
daa
loopne
and
ret
pop
call
inc
adc
aam
out
fdiv
jae
inc
or
scas
push
test
imul
inc
outs
scas
adc
sub
push
rcr
test
rcl
ins
pop
int3
pusha
mov
xor
jg
iret
aas
jmp
and
xchg
mov
and
cmp
sbb
aas
popa
lods
jg
inc
cmp
add
popf
jg
stc
je
cmps
or
jg
ins
jg
clc
out
or
inc
pop
retf
imul
repz
cli
jnp
xchg
mov
les
pop
jmp
xor
sbb
in
lahf
inc
repz
xchg
mov
lahf
aas
iret
repnz
je
loopne
mov
das
xchg
in
mov
daa
mov
aaa
push
sbb
pop
std
(bad)
mov
pop
clc
push
sbb
xchg
clc
stos
xchg
ret
pop
or
push
hlt
adc
pusha
mov
sbb
(bad)
scas
dec
xchg
icebp
in
call
push
in
cmp
inc
rcl
cmp
hlt
sti
or
mov
data16
jle
sub
mov
jge
xchg
add
jp
inc
ds
push
and
es
dec
arpl
inc
pop
pop
inc
cmps
xor
mov
fcomip
shl
xchg
jo
add
loopne
or
and
jo
xchg
shl
add
sub
mov
js
inc
sub
mov
ins
or
adc
cli
lods
jo
mov
int
mov
ins
outs
cmp
add
sub
enter
jge
mov
adc
and
dec
in
dec
sub
push
stos
leave
nop
lods
mov
call
adc
inc
adc
push
repz
mov
fisub
inc
cli
adc
jo
add
adc
push
retf
movs
mov
test
imul
aam
or
push
mov
mov
js
xchg
sahf
dec
rcr
stos
cmp
ret
js
gs
aas
pop
ins
clc
mul
jnp
ins
in
cs
arpl
xchg
mov
push
out
lahf
iret
movs
pop
dec
mov
jbe
jo
mov
add
add
sub
sub
cld
xor
test
mov
fisubr
xchg
mov
xor
xor
popa
cmc
mul
ins
jl
mov
nop
fldcw
push
imul
add
xchg
aam
stc
add
xor
das
push
inc
mov
sub
jns
jl
jp
sti
push
xchg
aas
sbb
std
jns
rcr
addr16
push
inc
xchg
or
xchg
dec
push
xor
add
lahf
ins
jae
retf
addr16
fnsave
push
mov
les
dec
jo
xchg
neg
mov
jmp
dec
cmp
shl
xchg
fs
js
mov
in
xor
(bad)
rcr
sahf
mov
add
and
jnp
jbe
pop
gs
fucomip
in
rcr
mov
fldenv
scas
mov
add
add
jnp
adc
dec
int3
inc
sub
inc
sar
add
mov
push
or
bound
pop
les
out
sbb
dec
fstp
mov
mov
in
push
arpl
adc
add
push
aas
in
mov
or
pop
xor
pop
loop
(bad)
mov
outs
inc
sbb
adc
mov
push
push
sbb
idiv
(bad)
cmps
mov
pop
cmp
push
jo
cmp
xor
stc
cmc
push
(bad)
push
jmp
or
test
push
ds
call
nop
std
ror
sbb
shl
sar
not
retf
sub
outs
adc
movs
push
mov
add
mov
mov
sbb
xlat
cmp
xlat
pop
in
fistp
fldenv
sti
ret
sub
dec
adc
and
cdq
mov
scas
ins
movs
adc
push
jecxz
ror
stos
add
xlat
int3
call
jbe
mov
inc
(bad)
into
sub
cmp
adc
cld
cmps
mov
inc
mov
scas
push
gs
jae
push
(bad)
nop
sbb
or
xchg
lahf
lds
test
sub
cmp
mov
dec
cmps
xchg
inc
sub
pop
jns
mov
mov
lods
add
cmp
inc
out
(bad)
and
mov
inc
inc
mov
pop
ss
sub
xchg
pop
mov
cmps
hlt
movs
jb
xchg
and
sub
shl
push
stc
add
cmps
jp
out
jecxz
popf
out
lock
sbb
icebp
dec
inc
in
mov
jp
test
and
arpl
or
shr
adc
sti
jge
cli
jae
ja
data16
sbb
cmp
mov
sbb
push
popf
push
mov
stos
outs
sbb
inc
inc
dec
dec
dec
xor
sub
enter
push
lds
cmc
push
mov
je
(bad)
aam
fisub
xor
dec
push
sbb
jo
pop
and
lock
mov
sub
in
mov
sub
mov
jle
mov
cmp
fisub
jno
daa
pop
fs
add
dec
sbb
adc
push
pop
lahf
aam
cmp
(bad)
pop
(bad)
jo
arpl
stos
sbb
sahf
pop
jle
loope
cwde
rcl
jmp
dec
jmp
add
add
bound
sahf
xchg
push
imul
mov
scas
test
(bad)
sbb
pop
push
inc
mov
xcrypt-ecb
jne
jbe
mov
loop
test
cmps
push
adc
adc
fst
cmp
add
add
sahf
add
cmp
or
xchg
jnp
dec
inc
outs
stos
icebp
clc
cld
jnp
std
ins
mov
clc
int3
lods
mov
jecxz
jp
ins
fist
cmp
test
cmp
mov
adc
dec
cmc
jae
cmps
adc
fcmovu
and
add
iret
hlt
and
sti
mov
retf
mov
xor
adc
lods
jne
jle
jne
inc
dec
mov
loopne
mov
cmp
call
popf
mov
push
or
(bad)
and
inc
push
pusha
nop
mov
add
les
bt
sub
sbb
not
ror
and
pop
(bad)
mov
sbb
stc
out
lds
stos
sub
loop
enter
loop
xor
push
in
call
pop
daa
mov
out
scas
add
mov
(bad)
shl
in
mov
lahf
movs
frstor
push
xor
ror
add
lods
imul
sub
aam
int3
fcomp
xor
add
inc
cmp
sub
mov
cmp
test
sub
dec
xchg
ss
adc
fild
jnp
fdivr
pop
ss
stos
push
lahf
repz
retf
movs
mov
je
pop
jmp
mov
lea
mov
fcom
test
dec
retf
xor
mov
ja
paddsw
cmc
test
dec
xor
cmps
fiadd
into
inc
jmp
dec
pop
xchg
push
cdq
loopne
xchg
pop
add
sub
ror
mov
ret
and
adc
sub
scas
and
arpl
int3
icebp
stos
jmp
mov
(bad)
repz
or
add
pop
cs
inc
jl
test
leave
xor
lods
and
xor
out
push
paddq
ja
xlat
shl
popa
xor
stc
or
jge
xor
rol
xor
out
mov
jmp
jb
popf
imul
in
mov
je
pop
mov
push
shl
pop
cmp
sub
xlat
into
mov
jo
call
mov
sub
arpl
push
les
push
js
ret
inc
inc
xchg
leave
ins
push
pusha
sub
add
push
aad
fdiv
les
xor
and
add
add
inc
retf
push
sub
int
mov
push
or
sub
stos
setge
aas
xchg
fst
mov
ins
mov
dec
pop
aas
mov
rol
mov
or
or
fcomp
in
ficomp
cmp
rcr
pop
cs
push
sub
call
add
fnstenv
idiv
push
push
mov
lea
jle
call
ret
xor
inc
inc
sbb
dec
in
daa
(bad)
sub
aad
xlat
cld
sub
inc
das
jmp
mov
imul
call
(bad)
mov
or
js
xchg
cmc
out
push
mov
enter
out
mov
dec
adc
enter
out
aas
xchg
dec
in
mov
lds
or
cmp
pop
xchg
fstp
iret
pop
pop
jg
out
ja
fisub
adc
add
scas
(bad)
(bad)
mov
int
mov
pop
mov
cmps
test
dec
and
jecxz
jl
fdivr
push
inc
add
shl
dec
out
or
push
sahf
cmp
inc
scas
mov
leave
loopne
call
mov
dec
daa
pop
retf
sbb
arpl
js
mov
jmp
add
cmps
mov
fxch
jne
mov
fidivr
pushf
jb
push
inc
pop
ret
dec
cmp
inc
cmps
stos
enter
movs
add
fistp
mul
outs
mov
dec
or
test
xchg
push
mov
out
dec
lods
inc
or
in
rol
jnp
jge
cwde
add
aad
mov
mov
add
or
fisubr
add
mov
rcl
push
and
out
in
pop
sub
das
xchg
mov
js
out
(bad)
push
push
sbb
xchg
pop
ret
stos
mov
jmp
aam
add
stc
hlt
pop
mov
jge
aad
push
add
mov
inc
inc
inc
or
imul
mov
mov
cmps
inc
xchg
push
pop
dec
push
xchg
cld
movs
xchg
inc
dec
pop
sahf
fidiv
fldenv
into
bound
aad
movs
ds
cmps
xchg
cmp
mov
(bad)
icebp
loope
jp
stos
jp
mov
enter
and
xor
les
mov
or
inc
dec
stos
stc
pop
lods
mov
data16
ins
test
mov
repnz
mov
mov
ins
jl
push
sbb
add
push
jle
adc
int3
and
dec
sbb
dec
bnd
or
test
pop
ins
add
jle
rcr
(bad)
xor
repnz
jmp
(bad)
stos
movs
dec
xchg
fsubr
pusha
push
cmp
and
sar
sbb
cmp
jmp
pusha
stos
add
js
je
sbb
mov
pop
xor
cmp
fld
mov
mov
gs
inc
jo
cs
push
test
hlt
sbb
mov
ror
(bad)
mov
dec
jl
dec
test
fcomp
jle
fistp
cmp
inc
adc
dec
jmp
push
iret
not
aam
sub
hlt
or
out
inc
in
fimul
test
bound
rcl
cmp
mov
leave
or
pop
pop
out
neg
mov
mov
xor
adc
add
jg
loop
cmps
push
mov
mov
sbb
mov
jno
mov
add
(bad)
or
xchg
and
fnsave
jb
ja
cli
mov
pop
mov
loope
ret
mov
jp
jae
les
xor
push
add
mov
imul
rcl
lods
jne
xor
add
in
jbe
sbb
jl
xor
mov
mov
or
fisub
xor
pop
cmp
push
stos
mov
loopne
xchg
movs
mov
icebp
lds
or
push
sub
push
data16
movs
dec
movs
inc
push
aas
popa
aaa
iret
loopne
xchg
jmp
sbb
mov
xor
mov
test
dec
retf
dec
jecxz
jge
in
outs
mov
pusha
or
hlt
push
pop
inc
femms
stos
mov
dec
sar
add
test
dec
sub
sub
xchg
push
mov
sub
jmp
loop
sahf
jge
pop
test
push
xchg
aas
into
movs
hlt
sahf
sahf
fwait
xchg
add
jecxz
imul
mov
jp
ficomp
adc
(bad)
cld
push
imul
jp
pusha
aaa
jb
mov
mov
jle
jne
adc
pop
je
adc
fucomi
in
mov
cdq
in
mov
xor
xchg
repnz
xchg
cmp
scas
mov
cmp
or
mov
ret
mov
xor
stos
sub
sub
sti
stos
into
add
fdiv
(bad)
aas
dec
popa
popa
adc
(bad)
adc
nop
jno
push
ret
pop
fcmove
ins
aaa
or
mov
ds
ds
in
cmp
fdivp
or
dec
fcmovnbe
rcr
in
ror
stos
rol
and
jae
push
daa
push
pop
outs
dec
mov
pop
add
jmp
std
or
imul
mov
stos
loop
inc
pop
fistp
scas
xchg
icebp
push
push
(bad)
xchg
(bad)
dec
xchg
mov
fimul
mov
aad
test
fsubr
push
cmc
fisubr
mov
je
call
jecxz
(bad)
dec
call
xchg
jl
mov
or
je
in
(bad)
les
push
and
and
push
inc
cmps
jp
imul
push
bound
adc
iret
nop
retf
mov
push
sub
dec
test
sbb
sub
fs
sbb
jle
(bad)
xchg
jl
cwde
jns
adc
adc
cli
push
mov
jnp
call
inc
mov
or
adc
movs
enter
xor
bound
or
push
fstp
repnz
in
push
loopne
mov
movs
ret
in
sub
inc
sbb
or
stos
retf
xchg
fs
movs
lods
out
gs
cmps
outs
mov
inc
mov
mov
dec
adc
arpl
in
or
addr16
jle
xchg
sub
xchg
adc
xchg
add
fisubr
and
xor
xchg
stos
and
push
push
sub
pop
push
jns
and
inc
enter
imul
mov
and
mov
out
lods
mov
dec
aas
mov
push
adc
mov
loopne
jmp
iret
in
jo
push
cld
push
mov
imul
jnp
sahf
push
in
ror
lds
hlt
push
stc
hlt
or
ss
fistp
stc
and
repz
push
add
mov
sar
enter
add
es
push
dec
pop
adc
cmp
mov
and
xchg
sbb
shl
lahf
test
add
aam
xor
jns
call
ds
retf
xor
inc
pop
bound
ror
test
jp
nop
mov
(bad)
adc
mov
jbe
xchg
repz
aaa
ds
ins
jo
inc
and
push
aad
mov
into
cmc
mov
jno
and
mov
sub
aam
rcl
nop
mov
sahf
cmp
les
dec
cmps
cmp
test
sti
sbb
cmp
retf
scas
push
or
clc
mov
(bad)
sub
lods
cmp
or
mov
stos
loop
inc
add
in
push
ins
jno
movs
icebp
enter
loopne
jmp
popf
pop
pop
call
sbb
shr
jne
cli
xchg
inc
cdq
pop
outs
cmp
xchg
jl
ror
push
pop
fsubr
jo
pop
fcomip
push
sub
cmp
xor
jge
jp
cmps
out
jbe
mov
mov
leave
repnz
outs
arpl
add
in
sub
xchg
jne
arpl
and
std
mov
arpl
pop
in
std
stos
mov
xchg
and
stc
arpl
ficomp
retf
fld
push
les
jp
sbb
cs
sbb
cmp
jl
call
dec
push
cmp
push
(bad)
out
int
movs
cdq
lea
jg
sbb
movs
repz
xchg
cmp
scas
push
daa
int3
sbb
add
jns
sahf
fbstp
imul
mov
jo
jno
push
pop
sahf
jne
add
push
dec
push
and
add
jle
fdivp
clc
test
(bad)
push
inc
and
imul
and
cmps
mov
fs
mov
add
mov
xchg
imul
cmps
sub
sti
cmp
pop
comiss
out
xor
or
xor
nop
(bad)
in
and
xor
add
xor
xor
jl
lods
jle
jb
push
ins
mov
dec
sub
movs
(bad)
in
test
(bad)
mov
inc
inc
push
or
or
test
mov
xchg
js
mov
sub
and
je
call
fistp
imul
sar
jmp
cmps
and
sahf
and
stos
fstp
inc
jo
mov
dec
xchg
test
js
mov
push
arpl
jne
test
xchg
adc
shl
ins
jns
xchg
in
mov
push
ds
xchg
lea
clc
stos
and
push
push
inc
test
sub
cs
scas
(bad)
jo
mov
(bad)
out
sbb
rcr
inc
out
and
cmp
je
hlt
inc
jbe
pop
loopne
jg
stos
mov
push
xor
add
adc
mov
sub
fist
out
sbb
pop
cs
mov
cmp
dec
push
dec
sub
aam
test
enter
sbb
in
xlat
es
dec
and
mov
mov
xchg
out
(bad)
mov
fcomp
stos
mov
cmp
mov
and
sbb
adc
and
fmul
mov
sub
(bad)
jo
mov
popf
cmp
mov
mov
hlt
fnstsw
test
aaa
jno
xlat
mov
mov
cdq
ins
fld
test
sub
shl
push
lock
scas
cmps
push
pop
int
ds
jecxz
clc
dec
cmps
push
cmps
ror
sar
xor
xchg
shl
push
dec
push
mov
(bad)
inc
pop
or
cli
sbb
inc
cmp
jno
jne
mov
add
jge
fneni(8087
mov
(bad)
ret
xchg
iret
adc
sbb
mov
gs
pop
mov
ds
ret
mov
sbb
dec
mov
pushf
mov
lahf
mov
call
movs
adc
fidiv
push
or
sbb
cmps
mov
out
das
cmp
and
sahf
div
jmp
sti
jge
xlat
jg
jbe
push
test
and
xor
inc
or
xchg
rcl
mov
gs
in
mov
pop
and
jns
sar
sub
inc
mov
adc
aas
inc
outs
pop
sar
outs
out
outs
mov
add
(bad)
shl
cmps
arpl
ds
(bad)
outs
xchg
out
fadd
test
fcmovnb
(bad)
call
mov
push
xchg
clc
jle
(bad)
pusha
mov
mov
dec
cmp
in
push
cmp
push
div
push
pop
cmps
pop
push
cmp
pusha
sub
jmp
pop
jle
addr16
in
sbb
shr
scas
inc
test
das
ret
rep
inc
es
aas
retf
mov
in
sbb
outs
fadd
add
(bad)
xor
and
sbb
inc
xor
test
mov
(bad)
cmps
pop
stc
xchg
or
(bad)
sahf
xchg
ficomp
sub
adc
dec
add
pop
jp
fistp
inc
ret
add
div
and
sbb
or
mov
dec
repz
cmp
add
mov
dec
in
bound
cmp
in
sti
outs
mov
inc
arpl
popf
dec
sub
cmps
iret
lods
sbb
push
pop
out
push
fst
cdq
loope
cli
test
cmp
inc
sbb
pop
inc
out
loope
dec
pop
mov
outs
lods
in
xor
cli
ss
jns
jmp
mov
xor
arpl
ds
test
fcomi
inc
mov
out
mov
add
adc
sub
imul
(bad)
pop
std
sar
lock
jnp
ror
aaa
dec
jne
pop
fisubr
dec
(bad)
fld
or
pop
xchg
push
jp
sbb
xlat
push
ins
mov
jbe
lock
push
jb
push
push
dec
leave
push
mov
aam
faddp
das
mov
mov
ins
(bad)
and
cmp
xor
sbb
or
repz
cmp
not
or
pop
adc
retf
mov
scas
dec
cli
xor
inc
popf
xchg
dec
xor
mov
mov
inc
adc
rcr
ficomp
pop
imul
hlt
pop
mov
dec
out
lds
ror
dec
adc
jle
pop
inc
dec
mov
test
retf
rcr
inc
scas
movs
mov
sbb
add
xchg
in
outs
movntq
out
outs
cwde
out
add
rcr
push
sub
push
jo
ja
jmp
int
fs
push
ds
out
inc
out
jbe
xor
or
adc
sbb
mov
cmp
jl
(bad)
mov
sbb
movs
xchg
call
repz
aas
push
leave
sub
out
and
int
pop
call
mov
push
das
das
repnz
aad
inc
repnz
mov
cwde
(bad)
xor
loopne
mov
jbe
adc
mov
xor
jg
inc
ss
test
sbb
add
aam
adc
std
jp
clc
cld
sti
and
aas
je
jbe
loop
push
and
pop
dec
cmp
rcl
enter
(bad)
call
dec
sub
xchg
fnsave
cld
(bad)
sbb
push
aam
xchg
add
sub
pushf
cmc
es
les
les
dec
mov
inc
xchg
push
popf
dec
pop
jmp
lods
xchg
and
cwde
add
dec
or
add
or
xor
les
aam
in
push
push
cmps
push
call
stos
xor
xor
fild
xchg
cmps
in
xchg
dec
push
add
mov
mov
out
int3
or
call
pop
idiv
push
mov
das
sar
lods
imul
add
cdq
mov
jecxz
xchg
pop
loopne
movs
shr
and
xchg
fdivr
push
push
lds
outs
gs
push
dec
out
sbb
xchg
daa
repz
icebp
pop
or
cwde
or
adc
push
add
imul
nop
add
adc
mov
lods
push
dec
and
int3
push
arpl
adc
int3
or
add
xchg
(bad)
pop
neg
xchg
pushf
jno
stc
(bad)
aas
lock
xor
addr16
sub
inc
js
out
pusha
cmp
push
push
mov
arpl
ret
add
sub
inc
es
imul
sbb
sub
push
cmps
inc
dec
(bad)
mov
add
arpl
adc
(bad)
lock
xchg
mov
sub
mov
pop
push
(bad)
jecxz
jne
shl
push
lods
jns
mov
(bad)
int
(bad)
je
adc
rol
mov
dec
pop
stc
popa
dec
icebp
push
xor
xchg
add
cs
rcr
fsubr
and
mov
retf
or
and
jl
(bad)
mov
mov
mov
mov
mov
sub
les
and
int
xchg
rol
pop
add
loop
sbb
sub
pop
fs
xor
mov
(bad)
mov
out
fs
cwde
pop
xchg
out
add
fisttp
in
jge
not
or
xor
adc
or
iret
push
js
loop
hlt
push
out
cs
fnstcw
sbb
cmps
test
rcl
push
push
repz
push
arpl
pop
pop
mov
pop
loop
sahf
or
xor
and
fwait
mov
sahf
aaa
lea
and
push
and
xchg
test
adc
mov
mov
mov
add
fs
jl
push
adc
sbb
xor
add
add
push
in
std
xrelease
idiv
push
jae
test
lea
or
sbb
push
dec
mov
in
aad
mov
ins
inc
push
push
push
mov
adc
pop
in
xchg
std
ins
std
retf
jns
fldz
stc
jle
inc
dec
mov
add
push
and
gs
movs
mov
das
imul
popf
ret
mov
jp
pop
(bad)
ficomp
outs
xor
xor
sub
movs
push
sbb
aam
dec
mov
jnp
aam
loop
lahf
js
int3
xchg
sbb
shl
sub
cmp
aam
add
retf
adc
xchg
cmp
fnstenv
dec
js
mov
jne
sub
or
jp
or
add
pop
mov
adc
cmc
adc
xchg
iret
push
cld
xor
ds
push
dec
xchg
enter
loopne
mov
movs
fsub
sub
pusha
rcl
adc
sahf
pop
enter
es
push
add
pop
call
cmps
inc
ret
mov
sbb
mov
and
adc
cwde
pop
or
adc
mov
int3
retf
xor
push
lods
cmp
jmp
xlat
mov
adc
sub
pop
scas
dec
push
push
test
adc
call
push
push
gs
dec
pop
add
repnz
push
dec
xchg
cli
cdq
daa
js
inc
push
push
dec
add
dec
mov
jge
ins
outs
lock
push
jno
mov
sar
jo
pusha
xchg
fimul
mov
inc
sub
xor
movs
sbb
or
dec
and
div
push
dec
les
loope
lods
xchg
pop
ins
and
push
les
xchg
mov
mov
loope
mov
(bad)
test
sbb
push
shr
push
outs
inc
fs
leave
mov
lahf
(bad)
mov
neg
cmp
or
aas
out
inc
mov
sahf
shr
fld
mov
cmc
loop
cmp
repz
mov
test
cmp
popf
push
dec
or
or
(bad)
cli
repz
mov
in
shl
xchg
xchg
adc
call
cmc
sub
fstp
nop
mov
pop
(bad)
into
icebp
test
push
mov
jge
cmp
sbb
test
and
push
sbb
jecxz
outs
dec
add
inc
(bad)
in
out
stos
push
jecxz
cmc
arpl
jne
fwait
jb
shr
and
sub
dec
repz
popf
inc
cmp
sub
jge
inc
push
push
and
mov
ror
mov
lods
stos
or
mov
aaa
inc
arpl
test
sub
iret
aam
mov
sub
mov
cmp
fyl2xp1
pop
fs
cwde
mov
push
inc
adc
data16
(bad)
mov
mov
xor
mov
ja
jl
or
cmps
popa
and
xor
sub
jecxz
mov
mov
adc
leave
idiv
mov
pop
pop
stos
adc
pushf
aas
outs
adc
test
cmps
(bad)
pop
ret
mov
enter
jbe
fidiv
mov
shl
pop
imul
push
in
ret
mov
aaa
aad
inc
push
add
fisttp
pushf
in
dec
cmps
inc
idiv
xor
mov
arpl
adc
pop
in
pop
xchg
imul
cmps
xlat
jecxz
or
leave
mov
push
jns
int
mov
sbb
jmp
test
xchg
in
xor
push
mov
rcr
(bad)
(bad)
stos
pop
pop
test
js
inc
mov
mov
xor
sbb
jle
nop
in
cmp
aad
and
repnz
mov
cs
add
retf
add
imul
loope
test
jmp
xchg
outs
test
test
ret
dec
mov
jns
xchg
mov
add
lahf
pop
scas
hlt
push
ror
cli
push
mov
stos
ins
mov
data16
cmc
jns
je
(bad)
shr
mov
cli
mov
neg
mov
sahf
cmps
sbb
stos
or
push
sbb
cld
push
movs
ror
jmp
(bad)
loop
out
adc
pop
sub
adc
sub
push
(bad)
mov
ret
add
push
loop
jo
out
sub
xchg
adc
aam
inc
or
mov
in
and
push
je
or
or
pop
and
xchg
pop
cs
sbb
aad
mov
cmps
les
adc
jbe
push
aam
cmps
xor
jb
(bad)
sar
repz
into
(bad)
nop
repnz
imul
adc
test
cmps
xchg
dec
out
pop
xor
jae
mov
dec
mov
mov
xchg
or
adc
shl
lds
inc
bound
lahf
mov
iret
xlat
jmp
sub
xor
push
jge
mov
enter
dec
imul
cmps
or
or
(bad)
xchg
leave
mov
add
imul
pop
mov
jmp
mov
fcmovb
fcom
mov
pop
gs
mov
loopne
cmps
cdq
sbb
cmovp
inc
add
mov
jo
cmp
sub
fstp
jbe
bound
(bad)
jle
aas
test
pop
mov
imul
mov
sar
retf
lods
mov
mov
fdivr
cwde
ins
out
scas
and
or
and
loop
mov
or
inc
imul
inc
jnp
sbb
sahf
pop
jge
dec
push
out
cmp
fwait
pop
xchg
xchg
es
xor
icebp
mov
pop
fadd
cwde
das
jae
outs
out
jne
xor
sbb
add
retf
cmp
pop
aas
in
je
fsubr
movs
cmp
mov
in
cmp
inc
and
lds
xchg
cdq
fidivr
mov
pop
pusha
mov
rol
int
in
push
idiv
xlat
jo
inc
dec
ins
imul
pop
ds
xor
out
pop
mov
cdq
push
lds
dec
xor
xchg
daa
in
iret
mov
xchg
push
cmc
fsubr
cmp
xor
sbb
xchg
or
popf
gs
cmp
xor
pop
lahf
bound
cmp
push
lea
mov
jae
sub
and
and
sti
lea
loopne
inc
sbb
xchg
push
popf
repnz
rcr
xchg
push
inc
mov
sbb
push
data16
xor
push
xor
ror
jge
xlat
push
dec
inc
mov
sbb
fnstenv
sbb
icebp
nop
lods
inc
or
xor
sti
imul
cmp
sub
and
fnsave
and
xor
push
sub
in
fisttp
data16
rol
xor
push
jns
push
in
pop
pop
jp
push
cmp
pop
fisubr
jecxz
mov
imul
xlat
(bad)
aad
fmul
mov
mov
jne
outs
lahf
or
into
loop
fld
mov
xor
(bad)
movs
jmp
add
sbb
jg
lahf
jmp
pop
push
fs
mov
adc
push
adc
inc
retf
xchg
mov
sub
lods
rol
sub
popa
ds
pop
pop
mov
cmp
cmps
nop
cmps
jp
mov
stos
adc
mov
mov
les
(bad)
ret
xor
inc
jp
dec
cmp
push
pushf
jo
int
sub
jne
mov
mov
cmc
jmp
movs
inc
or
outs
in
imul
push
inc
jg
sti
mov
loopne
stc
lea
mov
add
clc
mov
sub
jmp
aam
int3
dec
cmp
sub
aas
mov
inc
dec
icebp
imul
gs
cmp
mov
xchg
inc
inc
or
mov
mov
pop
xor
neg
shl
push
push
mov
push
imul
or
push
dec
inc
xor
fwait
pop
sbb
xchg
outs
sbb
sbb
pop
iret
aas
retf
mov
mov
xor
cmp
push
adc
call
cmp
and
inc
adc
das
mov
call
repnz
int
retf
test
(bad)
pop
les
out
iret
repz
iret
mov
lock
push
adc
cmp
cmps
add
lea
push
jl
and
sbb
pop
in
inc
sub
ss
out
daa
fucom
out
inc
lods
aaa
and
lea
xchg
dec
pushf
jge
sub
push
push
mov
shl
(bad)
clc
mov
sub
xchg
mov
test
add
dec
lods
jecxz
jge
outs
dec
out
and
sbb
mov
pop
xchg
repz
dec
xchg
int
or
nop
call
(bad)
dec
test
fwait
out
jmp
pop
lahf
or
add
mov
xor
enter
jbe
mov
out
cmp
int3
push
test
fcom
pop
xor
push
pop
add
or
hlt
xchg
pusha
rcl
or
icebp
daa
iret
ror
sbb
mov
lods
scas
and
and
pop
in
cmc
std
lds
loop
daa
test
int3
inc
or
retf
mov
dec
add
shr
in
repnz
pop
lea
sahf
mov
daa
ds
in
jmp
cmp
bound
jae
call
out
adc
push
add
mov
sbb
loopne
mov
popf
dec
jl
dec
pushf
push
push
pop
je
arpl
xchg
adc
xor
pop
aaa
cmp
jge
mov
leave
je
fsubr
xor
or
cmp
std
sahf
popf
adc
pop
icebp
mov
loopne
hlt
sub
mov
pop
jmp
cdq
inc
push
pusha
mov
ss
add
loope
and
or
jno
data16
xchg
out
and
jb
sub
psadbw
mov
push
xor
cmps
push
cmp
or
and
fdivr
pop
dec
gs
lahf
mov
lea
nop
cmp
mov
mov
add
push
xchg
cmp
ficomp
jmp
push
adc
add
dec
cld
(bad)
(bad)
ins
mov
movs
ficomp
xchg
jge
inc
and
sub
ds
xchg
mov
push
pop
dec
das
repz
ds
mov
test
pop
ss
xor
popf
inc
adc
(bad)
sbb
cmp
cmp
sub
cmps
xor
adc
jo
jae
sahf
mov
test
mov
repnz
xchg
mov
or
loope
push
and
(bad)
cmc
iret
sti
outs
imul
jae
mov
xchg
dec
add
add
sbb
pop
jo
ret
mov
loope
dec
push
push
mov
lods
(bad)
adc
mov
imul
out
lods
les
repnz
(bad)
push
lods
pop
fcomp
cli
sti
(bad)
les
ins
adc
cmp
dec
mov
and
mov
popa
push
stos
call
movs
cmps
pop
adc
pop
gs
dec
imul
mov
outs
and
es
es
adc
cmp
ds
ja
imul
sub
or
movs
sub
add
je
mov
(bad)
or
add
mov
push
arpl
lods
mov
push
fstp
enter
and
cmp
pop
das
sbb
aad
(bad)
into
(bad)
mov
xor
xor
dec
sub
push
cmps
or
mov
fs
outs
push
test
adc
dec
adc
or
push
jp
and
mov
push
pop
pop
xor
aad
jnp
cmp
test
xchg
sar
retf
fld
aas
test
loopne
daa
sub
add
add
xor
adc
dec
fucom
mov
cmp
mov
pop
and
ret
pushf
ror
sub
sbb
sub
test
lea
jmp
pop
nop
jge
push
push
fidivr
outs
lea
pop
add
test
(bad)
popf
cmp
rcl
out
(bad)
not
es
jmp
xor
xor
movs
dec
jp
pop
pushf
or
mov
jmp
dec
xchg
sti
pop
xchg
inc
sub
scas
xor
out
dec
pop
repnz
repz
jnp
(bad)
and
and
pop
mov
cmp
mov
aam
mov
or
xlat
mov
out
jg
mov
stos
jno
sub
retf
jecxz
fs
test
cmp
icebp
push
cmp
mov
cmp
push
data16
inc
pop
add
jg
jno
cmp
mov
and
movs
pushf
xchg
ret
shl
hlt
iret
pop
out
imul
push
popf
inc
movs
sbb
loopne
ds
xchg
sbb
and
jne
or
push
ret
adc
rcr
pop
jmp
jg
xchg
dec
dec
mov
mov
cli
inc
pop
ret
pop
adc
jnp
rcl
jecxz
call
inc
es
aam
mov
xor
jecxz
sub
xor
pop
jne
sbb
mov
mov
ss
les
imul
inc
inc
sub
test
mov
in
in
xchg
fwait
(bad)
call
lds
loope
daa
xchg
(bad)
mov
std
dec
fnsave
mov
mov
jge
cs
sbb
dec
adc
inc
cmp
pop
sbb
mov
mov
xchg
mov
neg
cmp
pop
inc
aad
xchg
add
xchg
push
movs
add
(bad)
pop
fcmovu
inc
mov
xchg
mov
js
pop
xchg
push
inc
sub
(bad)
push
das
js
xor
enter
aaa
mov
jae
mov
call
scas
out
mul
inc
xchg
in
xor
sbb
mov
test
fyl2xp1
popw
fucom
mov
xchg
jbe
mov
mov
retf
dec
xor
sbb
sub
in
push
into
or
mov
bound
push
mov
mov
push
dec
pushf
out
loop
in
cld
mov
pop
call
sub
dec
mov
popa
bound
(bad)
inc
call
or
or
sahf
pop
add
loopne
js
adc
cwde
mov
aam
xchg
iret
add
jmp
aad
cmp
adc
and
repnz
je
retf
out
mov
fldcw
sbb
sbb
stos
mov
repnz
pavgw
mov
mov
scas
(bad)
in
retf
xor
xadd
cwde
sub
cmp
test
xlat
jge
push
or
mov
adc
sub
jmp
sbb
movs
or
in
rcr
movs
cmp
jno
cmc
cli
jnp
out
aaa
adc
pop
jbe
test
cmp
repz
or
xor
add
adc
dec
test
xor
mov
stos
push
pop
out
les
sbb
sbb
imul
add
mov
sar
or
and
sahf
dec
out
dec
adc
mov
stos
mov
adc
xor
cs
jge
pop
out
push
xchg
jp
out
and
mov
fistp
ds
ror
or
fnstsw
shl
or
inc
adc
and
and
xchg
out
(bad)
pop
retf
out
inc
push
xor
movs
xor
cmc
or
push
jae
or
int
(bad)
rcr
jne
hlt
in
in
fs
jnp
sub
cmp
stos
adc
dec
sbb
push
jle
bound
sub
lahf
adc
or
push
out
ins
dec
push
and
scas
push
icebp
sbb
ja
dec
mov
xor
push
and
jecxz
cli
dec
in
out
mov
lds
push
adc
sbb
movs
lahf
sub
lahf
mov
cmp
ss
shl
push
push
icebp
movs
js
or
push
or
mov
dec
inc
and
retf
nop
(bad)
mov
push
aaa
icebp
and
xor
(bad)
(bad)
mov
test
jno
cli
mov
mov
add
inc
xor
ror
jns
ss
cmp
inc
dec
ret
sbb
xchg
sub
mov
test
xchg
call
ret
sbb
inc
inc
lock
scas
pop
pop
iret
cmc
imul
mov
pop
test
in
xchg
push
repnz
jae
xchg
jno
loope
out
sub
sub
movs
(bad)
adc
jp
std
popf
xlat
jb
loope
test
lods
rcl
sub
mov
pop
adc
dec
ds
add
jae
jae
leave
imul
sub
push
sbb
repz
scas
ja
pop
scas
sbb
out
nop
movs
jle
pop
das
enter
lea
mov
fild
test
xchg
sub
aad
push
sub
inc
mov
idiv
rcr
xchg
push
fisubr
pusha
int3
push
push
dec
popa
movs
test
aaa
out
gs
retf
stos
leave
mov
adc
sub
loope
mov
xchg
stc
inc
repnz
inc
jg
sub
sub
test
ins
in
jb
mov
push
xor
cmps
add
fdivr
sti
cmc
call
mov
popf
and
(bad)
xchg
popf
dec
dec
push
test
and
ja
mov
outs
outs
imul
push
popaw
movs
lea
mov
adc
inc
call
push
xchg
jns
ja
sahf
push
pop
inc
pop
mov
mov
jecxz
dec
xchg
adc
and
(bad)
xor
jne
ret
or
in
dec
and
jnp
fnstenv
cmp
call
and
(bad)
pop
loopne
out
repnz
(bad)
neg
cmp
dec
xor
xchg
sbb
cld
jmp
ds
idiv
div
ror
outs
int3
in
push
add
inc
sub
mov
mov
arpl
jp
dec
sub
(bad)
fcom
data16
sahf
cmp
jmp
mov
dec
jns
ins
mov
cdq
stos
call
les
iret
dec
loope
sub
and
pop
xor
repnz
sub
xchg
xor
mov
cld
(bad)
int
push
rcr
inc
and
ss
push
or
sub
xchg
jle
sahf
inc
je
fsubrp
aaa
sbb
sbb
xor
cmp
add
data16
(bad)
pop
iret
movs
imul
sub
fstp
mov
mov
dec
and
ret
push
movs
movs
mov
(bad)
cmps
sti
sar
add
cmc
or
nop
push
out
movs
pcmpeqw
call
sbb
les
sbb
inc
scas
cld
pop
inc
idiv
cmps
adc
test
xor
xor
arpl
ins
inc
or
rcr
adc
mov
fwait
jge
xor
cmp
(bad)
lods
mov
xor
cmp
xchg
jb
loop
xchg
jns
ins
retf
es
jo
sbb
add
pop
push
sub
xor
lds
push
mov
test
leave
in
sub
push
cdq
das
repnz
mov
and
sub
cmp
nop
movs
add
sub
repz
out
mov
cli
in
push
movs
lock
in
pop
jb
icebp
mov
push
xchg
ins
xchg
mov
push
mov
cmp
dec
or
aad
shr
fsub
les
jo
in
and
or
sub
movs
sub
popf
mov
pop
push
sub
jle
out
sbb
fldcw
mov
aas
icebp
scas
lock
inc
add
push
loop
sub
out
mov
xchg
dec
sbb
add
mov
aad
sub
jp
mov
inc
aam
and
xchg
cmp
pop
or
and
push
jne
xchg
jb
outs
inc
sar
fdiv
pop
inc
aad
adc
push
cli
xchg
fnstcw
push
cmps
bound
daa
retf
dec
aam
add
imul
sub
test
mov
jmp
packsswb
jl
scas
inc
(bad)
je
pop
sahf
fcom
push
xchg
dec
inc
push
mov
pop
jmp
mov
xor
jp
cld
xor
ror
sub
popf
dec
jg
cmp
les
sub
cdq
outs
ss
out
(bad)
push
scas
movs
js
push
out
pop
iret
test
data16
jg
or
sahf
adc
lds
or
sub
aad
cld
mov
pop
ins
into
(bad)
sar
test
(bad)
rcl
in
sub
pop
xlat
cmp
xor
das
fadd
rol
popf
add
xchg
pop
mov
outs
ss
fnsave
jb
sub
dec
and
push
sbb
mov
xchg
dec
push
movs
(bad)
loope
scas
cmp
push
gs
dec
stos
add
arpl
inc
cmps
dec
push
popf
jne
jge
not
call
test
imul
mov
cmp
rcl
fs
fiadd
imul
sbb
sub
mov
xor
push
test
dec
sti
pop
lods
lds
cmp
push
mov
mov
iret
and
push
push
in
popa
pop
inc
sub
push
or
into
xchg
cmp
sub
xor
pop
add
test
out
std
lods
neg
mov
sti
inc
cmc
ins
not
push
inc
shl
dec
or
loop
scas
sub
add
mov
mov
arpl
add
and
pop
cmp
and
sub
add
shl
xchg
add
inc
inc
movs
jmp
aas
stos
rcl
pop
mov
repnz
cmp
imul
test
loopne
sti
xor
js
pop
adc
(bad)
adc
add
inc
mov
jle
mov
dec
push
sub
lea
jl
data16
adc
mov
mov
daa
in
mov
pop
inc
pop
xchg
shl
xor
sub
dec
dec
bound
sbb
add
jns
mov
adc
add
pop
std
cmp
add
bound
sub
push
mov
or
push
cmps
aam
inc
les
xor
pop
pop
(bad)
scas
mov
fwait
int3
aaa
push
(bad)
loope
cmps
xchg
mov
cmp
out
stc
inc
sub
dec
sub
sub
jge
inc
dec
xor
ficomp
inc
loopne
xlat
cmp
push
arpl
jns
jg
fcmovu
dec
add
jmp
jp
movs
xchg
cmp
nop
movs
push
fmul
inc
cli
stos
nop
mov
inc
stos
imul
xchg
mov
push
xor
(bad)
in
pop
xlat
sub
out
push
jno
sahf
mov
fadd
mov
mov
inc
imul
daa
out
jo
mov
push
and
or
scas
cli
mov
dec
es
sub
or
xor
mov
sti
sbb
jge
pop
call
call
and
adc
in
aas
loop
xlat
int3
je
dec
pop
push
nop
(bad)
ror
and
es
jne
test
mov
jno
xor
inc
inc
sub
xor
sub
inc
jmp
sbb
sub
ins
or
bound
shr
or
and
sbb
pop
pop
dec
push
adc
dec
mov
adc
test
pusha
xchg
loope
inc
xchg
bnd
jne
in
arpl
or
fnsave
repnz
outs
scas
mov
stos
adc
repz
hlt
std
mov
sub
sub
jb
std
cmp
mov
dec
leave
movs
cmp
outs
(bad)
das
jne
clc
pushf
ds
hlt
mov
or
in
cmps
popf
push
pop
leave
and
les
cdq
jne
xchg
loopne
fld
outs
jo
sbb
fs
mov
pop
dec
xchg
jbe
stos
call
stc
push
lods
mov
add
fwait
call
(bad)
sbb
rcr
sbb
push
inc
les
cmps
dec
sahf
xchg
cdq
cli
test
xor
scas
stos
dec
and
mov
addr16
xor
iret
in
push
inc
and
cmps
mov
mov
popa
push
inc
sub
out
jecxz
push
xchg
mov
ror
pop
mov
ror
lock
repz
ret
fmul
(bad)
test
outs
sti
mov
push
cmp
out
js
pop
daa
jb
push
push
pop
test
(bad)
xor
fwait
or
or
btr
arpl
xor
add
imul
push
mov
in
sbb
push
out
movs
mov
xchg
aas
mov
inc
mov
dec
jb
(bad)
dec
xchg
dec
fpatan
jmp
jns
outs
mov
xor
stos
aam
repnz
loopne
ds
adc
add
nop
leave
lea
xchg
xor
std
pushf
jp
imul
sub
or
stc
sbb
jmp
out
or
pop
mov
push
sbb
mov
jle
stos
cmp
retf
sbb
pop
pop
or
hlt
push
out
and
daa
cmp
dec
sub
data16
adc
call
add
jmp
retf
mov
mov
fnsave
(bad)
outs
outs
cmp
cmp
out
jnp
jmp
outs
add
(bad)
cmp
push
push
push
inc
pop
push
cdq
call
push
inc
dec
inc
repnz
aaa
fcmovb
push
pop
sub
cli
pop
out
cmp
inc
ja
push
pop
jns
xor
ins
in
call
pop
pop
mov
dec
sub
or
dec
push
rol
adc
add
cld
rol
fcom
in
mov
adc
add
inc
cmps
xchg
in
sub
and
pop
ins
imul
aaa
push
sub
js
sub
xor
mov
call
jecxz
sub
push
mov
outs
mov
aaa
adc
inc
leave
inc
dec
sbb
lock
push
dec
adc
or
call
mov
or
fwait
cmp
lds
and
push
dec
repnz
xor
mov
inc
xchg
inc
push
shl
sbb
es
lods
test
cwde
lock
out
scas
sub
push
mov
fld
(bad)
(bad)
les
lods
push
inc
pop
test
ins
mov
xchg
inc
add
cld
in
sbb
mov
ins
lea
xor
inc
scas
or
dec
loopne
inc
dec
addr16
(bad)
in
(bad)
xor
or
push
jbe
retf
or
and
fimul
cmp
pop
pop
inc
push
inc
dec
and
sbb
or
add
nop
js
cmp
jnp
mov
stos
jl
push
mov
arpl
scas
dec
dec
xlat
mov
sbb
in
loopne
push
cli
fcmovu
ror
xchg
jnp
mov
pop
sub
mov
pop
xchg
pushf
call
stos
fnstsw
out
push
jae
mov
xchg
push
imul
add
retf
xchg
out
imul
and
les
cdq
and
or
inc
mov
stos
cli
jecxz
sbb
inc
neg
or
inc
adc
mov
pop
enter
jl
cmp
out
in
pop
mov
lods
es
test
cmp
mov
push
cwde
cmp
push
mov
mov
sub
test
add
(bad)
fsub
jecxz
xchg
cmps
sub
mov
sbb
pop
mov
inc
pushf
xchg
fisubr
pop
jmp
xchg
movs
or
inc
ret
pop
stc
push
iret
call
fs
and
fsubr
stos
fcmovb
mov
scas
aam
dec
sub
call
aam
push
test
cmp
fstp
ficomp
pop
push
sbb
lods
div
push
call
fsubrp
jmp
pop
mov
push
inc
inc
dec
sub
ror
push
pop
pop
dec
repnz
jb
(bad)
cmp
and
mov
dec
or
xor
fcom
fldlg2
outs
mov
jbe
lock
sub
pushf
aaa
push
add
loop
(bad)
cmp
out
sti
dec
mov
mov
movs
pop
iret
sbb
push
mov
test
cmps
dec
jnp
xchg
push
xchg
cwde
xchg
and
xor
adc
jo
retf
sub
cs
xlat
mov
mov
adc
in
(bad)
sbb
frstor
inc
inc
test
push
test
jmp
stos
cmc
das
js
sub
push
adc
inc
fldcw
test
xchg
cwde
inc
cmp
adc
fs
sub
add
ds
cmp
outs
xor
mov
pop
or
xchg
imul
(bad)
pop
bnd
jae
sub
push
ja
sbb
in
xchg
dec
scas
dec
push
dec
mov
mov
movs
fxch
mov
xchg
mov
pop
fst
dec
dec
sbb
pop
stc
(bad)
push
xor
mov
cmp
ds
pop
cs
sub
pop
neg
out
jbe
lods
mov
in
and
pop
adc
pop
lods
sub
shl
and
push
sbb
aad
fisubr
xchg
rcl
cwde
int
cmp
lds
inc
and
ins
cmp
aaa
sub
add
adc
inc
jne
pop
inc
(bad)
dec
call
push
bound
dec
or
inc
or
adc
or
sbb
sahf
call
mov
push
inc
stos
enter
movs
mov
mov
dec
and
(bad)
or
inc
ror
xchg
pop
jmp
pop
gs
scas
xchg
mov
int3
jle
dec
stc
hlt
pop
mov
fmul
jns
cmp
cmp
movs
rcr
fiadd
lea
mov
hlt
(bad)
dec
sub
and
push
xchg
int3
push
add
add
dec
jb
jmp
test
add
sbb
fistp
cmp
push
jnp
aaa
mov
pop
enter
add
rol
xchg
hlt
cmp
(bad)
outs
push
mov
aam
fisub
test
mov
scas
sub
inc
pop
mov
int
test
hlt
or
call
and
aam
add
(bad)
addr16
add
pop
outs
fdivr
sub
push
sahf
adc
add
mov
xchg
mov
sbb
mov
cmp
xor
pushf
mov
xor
pop
pop
mov
xor
inc
adc
cmc
push
leave
out
and
mov
mov
dec
mov
lds
push
push
inc
and
sub
and
retf
test
fstp
mov
inc
fild
fdivr
xchg
pop
nop
add
jnp
xchg
ret
jo
lds
daa
movs
jmp
icebp
cwde
sbb
dec
mov
sahf
or
adc
push
xchg
test
dec
fucomi
dec
clc
cmp
fld
das
out
popf
rcr
mov
inc
int
adc
stc
lahf
aas
sub
outs
cs
lods
jno
ins
xlat
pop
inc
test
inc
mov
gs
fs
and
enter
xor
and
sub
cmps
jmp
or
aam
push
push
inc
sbb
sub
jb
sub
pop
dec
cmp
int
shl
in
mov
imul
cmps
les
cmps
add
ret
jns
(bad)
je
cwde
xor
pop
xchg
adc
adc
and
arpl
dec
jecxz
sti
sub
xchg
jp
jmp
fnstcw
push
xor
rol
xor
adc
pop
fidivr
mov
fmulp
mov
dec
sub
mov
push
push
adc
mov
outs
inc
sbb
xor
and
inc
iret
or
cmp
push
mov
out
sbb
sub
rcl
fs
ror
mov
dec
mov
and
test
add
pop
jmp
clc
xchg
mov
add
(bad)
loop
in
repnz
xchg
hlt
jae
in
(bad)
daa
outs
ja
outs
jno
xor
or
xchg
loopne
aad
push
mov
shr
sbb
xchg
lahf
outs
cdq
jecxz
(bad)
fist
ret
nop
mov
adc
push
xchg
stos
sub
sub
rol
adc
add
add
movs
xchg
pop
xor
nop
push
mov
cmp
clc
cmp
push
imul
push
push
add
lahf
push
adc
shr
sub
in
mov
scas
mov
inc
out
pop
xchg
sub
pop
cmp
dec
(bad)
ins
dec
jecxz
and
pop
mov
pop
out
mov
adc
cmp
dec
leave
lds
push
cmp
sub
pop
push
repz
mov
add
jecxz
push
div
pop
aaa
(bad)
sti
(bad)
outs
cmp
xchg
je
clc
retf
gs
sub
nop
push
dec
or
cmc
hlt
std
jge
retf
imul
mov
pop
repz
cmc
aas
out
rcr
mov
arpl
adc
mov
bswap
mov
adc
hlt
movs
fs
lods
(bad)
inc
scas
pop
sub
add
pop
mov
js
stc
mul
fmulp
jmp
add
hlt
or
out
out
ins
movs
mov
retf
xchg
push
jb
pop
imul
dec
(bad)
push
push
icebp
xor
push
repnz
dec
cmp
add
hlt
cmc
or
xor
enter
(bad)
cli
pop
push
fcmovnu
retf
stos
loopne
inc
cmp
sub
jne
imul
dec
out
add
xchg
aad
imul
cmps
arpl
into
ficomp
sub
daa
inc
(bad)
and
and
sub
ret
dec
test
mov
call
mov
sbb
jmp
out
push
xchg
addr16
ins
ror
int3
pop
(bad)
nop
lahf
sbb
shl
mov
ror
xor
mov
outs
outs
pop
fs
sub
mov
in
ret
xor
std
mov
repz
cmps
ret
sub
dec
cdq
and
xor
dec
pop
lahf
stc
cmp
jnp
out
jg
jle
outs
mov
daa
mov
neg
cmps
addr16
xor
push
push
inc
jae
pop
mov
jmp
jmp
out
adc
mov
xor
aas
(bad)
(bad)
jecxz
mov
xor
lahf
dec
cld
icebp
(bad)
push
mov
or
imul
and
scas
iret
scas
push
in
pop
mov
push
sub
bound
mov
fadd
std
inc
repz
int
xchg
mov
push
sti
cmp
add
data16
int
push
fst
inc
nop
les
add
dec
sbb
cdq
in
jge
xchg
cmp
retf
nop
adc
repz
cdq
test
test
xor
movs
stos
test
cmp
xchg
retf
mov
and
ds
mov
mov
mov
xor
jle
out
cmp
ja
shl
loope
sbb
into
adc
add
push
sub
sbb
jb
in
jp
xlat
fs
sub
push
push
(bad)
adc
mov
or
push
cmp
mov
out
pusha
dec
push
push
sub
push
jg
retf
idiv
mov
xchg
out
jno
adc
push
(bad)
adc
push
test
jo
mov
jmp
icebp
stc
sub
bound
(bad)
rcl
ret
dec
mov
sbb
sub
dec
xchg
dec
pop
push
and
mov
inc
cdq
mov
xchg
aad
retf
pop
mov
sahf
pusha
jno
(bad)
inc
(bad)
jne
jb
fwait
fs
jmp
sbb
add
xor
add
cmc
icebp
cmp
mov
test
out
sbb
push
ds
xchg
push
outs
cmp
mov
push
inc
dec
push
push
xchg
cmps
movs
and
inc
adc
ret
sbb
fsubr
(bad)
outs
bound
js
adc
mov
mov
fstp
test
lds
mov
in
push
add
lea
adc
popf
inc
pushf
sub
fistp
retf
xlat
cmp
retf
nop
or
cmc
dec
xor
popa
test
cs
push
int
or
(bad)
mov
mov
les
push
or
inc
clc
xchg
mov
push
jle
or
retf
ins
aaa
xor
rol
push
fsubp
bound
inc
sub
cmps
adc
add
xchg
into
dec
and
push
mov
test
push
pop
xchg
xchg
and
fdivr
rcl
test
add
in
jmp
xor
ds
cmp
daa
test
je
cmp
test
ret
cmp
test
inc
push
push
push
aad
jnp
(bad)
inc
push
dec
adc
mov
lea
(bad)
aas
sahf
jge
shl
out
(bad)
rcr
fcom
imul
lock
sbb
xchg
pop
dec
lahf
mov
std
jge
and
lods
sub
shl
push
pop
dec
lods
xor
mov
xchg
shr
icebp
jmp
cmps
mov
inc
dec
dec
sahf
jge
jp
xor
pusha
das
retf
fwait
pop
fucomip
hlt
add
and
pop
in
pop
or
ror
inc
push
iret
push
adc
push
lahf
test
or
jle
xlat
loopne
jns
retf
cmps
jle
pop
jne
scas
retf
dec
inc
or
pop
test
add
cmp
and
inc
repnz
cli
mov
and
or
mul
xchg
ss
minps
stc
jge
adc
mov
sbb
sahf
dec
push
in
adc
cmp
imul
dec
push
inc
or
add
fimul
mul
jge
xchg
or
xchg
movs
sar
add
adc
mov
sbb
inc
jo
int
ror
addr16
in
xchg
inc
xchg
hlt
xchg
inc
or
rcr
test
mov
mov
dec
lds
imul
jns
(bad)
mov
les
iret
sbb
or
push
out
enter
out
mov
(bad)
xchg
pop
cs
push
sub
iret
int3
cli
sahf
stos
mov
dec
mov
or
aam
das
hlt
mov
daa
gs
iret
lods
jp
mov
adc
add
fcomip
je
add
inc
or
add
jg
(bad)
jl
add
movs
gs
inc
pop
pop
mov
pop
in
je
dec
movs
pop
outs
outs
sar
popa
iret
sar
add
(bad)
mov
sub
(bad)
pop
xchg
mov
mov
add
hlt
sbb
fnstenv
push
pop
shl
adc
sub
cwde
stc
jp
jge
jnp
xchg
push
shl
sub
dec
and
das
nop
mov
stos
mov
and
fwait
jmp
test
sub
bound
mov
mov
daa
sahf
jns
adc
adc
mov
call
or
std
cmc
jo
scas
mov
mov
dec
shr
mov
jae
sti
mov
add
rcl
test
stos
xor
pop
pop
mov
and
ds
mov
lods
mov
jo
(bad)
jmp
push
pop
pop
popa
call
sbb
arpl
clc
(bad)
iret
jmp
popa
xor
cmps
mov
popa
cmp
(bad)
scas
jno
jp
lea
dec
pop
jmp
mov
xchg
lock
pop
hlt
pop
icebp
pop
mov
lds
add
mov
retf
adc
mov
pop
data16
in
mov
enter
mov
(bad)
xor
test
(bad)
repz
mov
jmp
(bad)
and
popf
adc
mov
sub
addr16
mov
fwait
cmps
adc
js
xchg
inc
fwait
cmp
mov
mov
add
jle
lahf
outs
mov
push
or
iret
enter
je
in
mov
cs
or
sub
les
les
push
movs
and
push
test
test
imul
and
sub
(bad)
lock
scas
repnz
je
mov
jne
test
push
dec
scas
mov
fwait
add
in
add
ret
mov
call
sbb
xor
xchg
jle
dec
or
add
mov
sahf
jle
jnp
push
cmp
jp
adc
pushf
lahf
lahf
iret
lods
icebp
mov
sub
lock
(bad)
mov
lahf
dec
arpl
cmps
ret
sar
movs
mov
cmp
ret
or
xchg
sbb
sbb
and
add
fs
xor
dec
xor
stos
and
cmp
cmp
adc
dec
dec
cmp
xchg
cmp
add
(bad)
jns
shl
sbb
sbb
jmp
dec
cmp
push
xor
fdivr
mov
jg
mov
loope
aaa
(bad)
push
popa
mov
sbb
stc
push
mov
dec
sub
scas
btr
lea
sbb
retf
clc
jg
jns
(bad)
adc
push
push
cmp
dec
xchg
sub
mov
test
mov
out
sti
cmp
pusha
add
mov
xchg
pop
lahf
pop
hlt
add
mov
inc
aam
and
jns
xchg
movs
outs
das
arpl
mov
dec
leave
xor
inc
fs
sti
js
mov
or
sub
jecxz
dec
into
sti
jns
mov
mov
hlt
add
jge
sar
int3
adc
xchg
enter
call
je
push
jne
pop
or
mov
xchg
and
je
test
retf
cmc
in
imul
je
lds
ror
mov
mov
js
mov
sub
outs
repz
mov
mov
push
sbb
imul
mov
inc
push
mov
xchg
cwde
aaa
loopne
inc
dec
ins
fpatan
stos
movs
leave
or
popf
add
mov
dec
out
outs
mov
dec
mov
jl
aad
xchg
js
mov
xor
mov
inc
clc
push
add
nop
test
and
sbb
mov
fisubr
aaa
pop
cdq
mov
add
cmps
add
sub
mov
xor
cmp
(bad)
call
repz
and
clc
cli
xchg
movs
sahf
loopne
cmc
clc
mov
aaa
and
mov
pcmpgtd
(bad)
sti
test
cmp
pop
cmp
xor
shr
rcl
shl
imul
jmp
adc
pop
sub
sub
push
sub
test
mov
sar
fistp
mul
cmp
add
dec
test
mov
mov
mul
pop
sub
mov
loope
jmp
imul
jmp
scas
movs
add
mov
adc
sbb
or
jmp
or
(bad)
stos
push
nop
sbb
lahf
aam
or
(bad)
and
faddp
push
sub
push
not
sbb
pop
push
mov
push
popa
fs
mov
mov
jecxz
(bad)
in
jmp
xchg
retf
jge
sbb
and
mov
cs
aaa
jae
stos
shl
push
sti
cmp
in
adc
aaa
mov
aad
(bad)
ficom
aas
sub
rol
movs
inc
mov
mov
or
(bad)
mov
ins
les
cmps
aam
mov
pop
jb
cmp
xor
test
fist
mov
ins
push
stc
pop
mov
dec
inc
loopne
fcomp
xlat
mul
aaa
inc
ret
mov
or
in
push
and
retf
rcr
or
adc
repz
aam
jbe
fist
stc
push
xlat
xor
add
addr16
ret
push
(bad)
cmc
sbb
cdq
leave
xor
push
adc
jns
jns
pop
jno
(bad)
xchg
fimul
sub
sub
test
icebp
(bad)
iret
dec
sub
call
bound
aam
jno
cld
jno
mov
in
bound
int
(bad)
push
addr16
sub
dec
fimul
xlat
jnp
dec
outs
movs
jecxz
ds
in
jne
sub
inc
xor
push
aam
cwde
sub
mov
int3
outs
or
dec
je
imul
mov
(bad)
into
mov
inc
pop
push
mov
mov
xor
sbb
je
mov
(bad)
xlat
test
out
or
pop
sub
iret
and
pop
xchg
xchg
popf
lahf
retf
xor
mov
outs
mov
push
out
div
sbb
je
call
(bad)
test
push
js
repnz
out
fwait
or
sbb
fcomp
loope
lea
call
xchg
retf
(bad)
mov
xchg
ins
mov
cmps
movs
leave
push
dec
cdq
sub
jl
sbb
nop
mov
or
mov
(bad)
sbb
mov
mov
dec
mov
into
test
sub
es
xlat
lds
cmp
xchg
xchg
std
mov
test
sub
sub
stos
lea
lods
popf
mov
idiv
xchg
mov
pop
jne
xchg
adc
xor
in
jmp
sbb
jnp
fucomi
out
neg
cmp
(bad)
bound
test
pop
cmps
daa
int3
sbb
jno
daa
mov
iret
ja
pop
jne
je
sahf
add
mov
adc
cmps
jg
jno
xchg
in
loope
push
mov
nop
jmp
fucomi
adc
test
add
adc
daa
int
inc
push
dec
dec
cld
xlat
in
pop
xchg
inc
das
sbb
jne
dec
or
push
xor
push
push
sub
fs
dec
call
mov
cmp
sbb
xchg
fist
out
repz
mov
dec
mov
enter
xor
and
adc
xchg
icebp
outs
bound
arpl
repz
xor
cs
fistp
xor
xor
bound
js
js
mov
movs
test
adc
pop
fsubp
scas
jae
call
fisttp
cmp
lea
mov
pop
(bad)
lea
xchg
dec
ret
xchg
cld
jns
aad
sbb
mov
repz
mul
mov
stos
movs
(bad)
out
test
call
adc
in
cmp
addr16
enter
out
cmc
pop
fwait
jge
loop
movs
out
jmp
add
arpl
mov
jne
xchg
rol
jg
aas
out
jp
lods
ins
stos
fisubr
xchg
cmps
xchg
cmps
iret
movs
lahf
pusha
dec
mov
mov
xor
test
push
sti
xchg
inc
aas
movs
add
mov
ret
ins
push
mov
cmp
lock
dec
enter
and
and
xchg
(bad)
push
fild
imul
mov
addr16
lea
sub
mov
jle
pop
cdq
mov
pop
retf
dec
and
les
sbb
cwde
mov
xchg
pop
fimul
hlt
(bad)
cmp
out
mov
pop
(bad)
add
jmp
jno
inc
stc
push
mov
push
pop
ins
mov
jle
test
xor
pop
lahf
cli
mov
mov
loopne
js
adc
call
arpl
inc
sahf
jg
xchg
push
add
out
mov
jnp
aaa
stos
mov
inc
pop
sub
bound
sbb
sbb
hlt
sbb
jns
adc
xor
iret
add
mov
out
outs
and
and
dec
ja
push
test
lods
or
xchg
jl
or
dec
dec
clc
jmp
nop
dec
xchg
aas
mov
cmp
fsubr
inc
and
and
push
in
cmp
imul
int3
add
add
jp
mov
mov
cmp
loop
mov
mov
sbb
inc
push
cs
scas
adc
pop
scas
mov
mov
in
in
and
pop
mov
and
sbb
je
pop
xchg
or
sub
fstp
lea
or
icebp
test
sbb
cld
jmp
cmc
fcomp
cmp
adc
mov
xor
les
test
inc
bound
dec
test
in
mov
leave
(bad)
imul
or
dec
xchg
mov
lods
or
call
fld
cmps
cs
or
sub
cmp
pop
mov
inc
enter
jnp
or
pop
push
mov
sti
jge
shr
scas
dec
enter
cli
fmulp
jg
iret
mov
lods
test
ror
int3
cmc
mov
icebp
ins
fcmovnb
inc
xchg
push
cmps
lahf
and
shl
add
pop
nop
cmp
add
ret
mov
leave
test
xchg
mov
adc
and
sub
daa
jmp
mov
and
add
shr
jnp
jmp
xchg
adc
push
mov
dec
jl
imul
mov
movs
cmps
popf
stos
jae
and
mov
jmp
push
not
inc
(bad)
add
iret
add
mov
bound
inc
ror
nop
cmp
stos
mov
pop
push
(bad)
ja
in
mov
mov
xor
add
adc
push
mov
out
mov
fstp
sub
retf
sbb
cmp
xor
adc
or
pop
xchg
test
cmp
mov
(bad)
fcomp
sub
xchg
loopne
ds
repz
xlat
mov
sub
scas
adc
inc
into
xor
xor
add
cmp
mov
mov
mov
cli
jmp
xchg
lea
pusha
sub
push
push
call
dec
mov
(bad)
outs
fldcw
fld
jecxz
icebp
pop
les
mov
pop
retf
jbe
pop
aaa
mov
xchg
mov
push
dec
das
test
inc
push
into
stos
push
(bad)
cmp
and
rol
addr16
inc
fist
add
jle
cmp
sub
arpl
pop
mov
mov
xchg
dec
pop
adc
inc
outs
dec
add
pusha
inc
or
push
mov
inc
cmp
scas
lods
leave
jecxz
push
jle
jnp
es
or
inc
cmp
(bad)
pop
adc
outs
int
push
mov
aam
out
sbb
in
mov
pop
adc
jle
stos
movs
xchg
lods
mov
in
inc
stos
mov
sub
xchg
mov
jb
mov
xlat
fld
cmp
mov
sbb
lods
jp
push
lods
dec
or
ds
out
xchg
stc
pop
xlat
xchg
outs
pop
call
imul
jbe
adc
int3
xchg
cmps
clc
dec
sub
cmp
xchg
mov
fs
aam
(bad)
xor
call
dec
inc
add
hlt
fisttp
lods
in
and
push
cmp
leave
call
xchg
jl
pop
xchg
jmp
jnp
repz
pop
rol
inc
aam
pop
xor
mov
cmps
xor
jge
mov
ja
jge
ds
jge
xor
add
fstp
inc
or
test
out
shl
dec
xchg
inc
xchg
cmps
(bad)
sub
sbb
inc
ret
mov
mov
stos
push
out
scas
mov
leave
dec
add
mov
cmps
push
inc
mov
retf
cmps
imul
(bad)
fstp
shl
mov
(bad)
xchg
stc
xchg
jns
mov
xor
sbb
(bad)
jmp
ret
dec
(bad)
and
int
rcr
jmp
in
xlat
mov
push
mov
out
fs
and
popa
jp
dec
mov
push
lds
test
add
mov
cmps
mov
or
movs
aam
add
jnp
retf
adc
cmps
cmp
sti
int
shl
stc
arpl
loopne
ss
shl
add
lahf
es
mov
jae
sbb
push
xor
mov
inc
test
xchg
jmp
jnp
mov
inc
in
sbb
pop
inc
adc
dec
push
push
lods
pop
cmp
jb
ja
push
mov
sbb
lahf
pusha
mov
push
jp
in
stos
stos
scas
sahf
popf
xor
dec
stos
sub
movs
or
test
adc
and
outs
push
dec
rcr
jne
jnp
push
push
push
sbb
movs
lahf
dec
je
ins
mov
mov
dec
mov
dec
(bad)
push
inc
sub
pop
xor
lock
fwait
out
cmp
and
and
popa
pop
dec
xor
out
sbb
fwait
repnz
xchg
jb
das
pop
fsubr
out
daa
(bad)
adc
mov
fnstsw
xchg
popf
jns
jmp
inc
outs
mov
(bad)
nop
or
es
mov
jmp
ds
rcl
cmc
xor
cmps
cmp
dec
pop
xchg
cmc
idiv
add
jge
sbb
push
js
sub
imul
out
dec
adc
add
retf
jecxz
call
pop
push
ss
mov
push
xlat
mov
(bad)
cmps
fdivr
fsubr
push
hlt
jns
inc
xchg
test
test
call
retf
sbb
test
mov
in
shl
mov
sbb
push
pop
aam
and
jne
jo
outs
test
(bad)
packuswb
inc
cmp
gs
(bad)
sar
pop
cmp
sub
in
mov
cmp
xor
add
mov
mov
mov
sub
sbb
outs
jg
pop
(bad)
dec
cmp
aas
cmc
push
movs
sti
mov
addr16
xchg
xchg
push
mov
lods
push
imul
out
pop
dec
cli
lds
fnstsw
ins
(bad)
dec
icebp
imul
sub
fmulp
loopne
add
lea
push
inc
xchg
es
mov
jg
or
int
repz
push
inc
jecxz
jb
ficom
mov
ror
test
add
sub
push
punpcklbw
(bad)
cmps
addr16
fwait
push
push
cs
dec
push
push
add
aad
jge
in
xchg
cmp
mov
mov
not
movs
mov
test
push
cmc
push
lock
fdivr
pop
cmc
(bad)
stc
enter
xchg
fistp
jmp
xchg
ins
jno
or
(bad)
mov
int3
cmp
pop
sub
add
lods
cmp
sbb
(bad)
inc
rol
sub
ret
loope
mov
ins
and
call
inc
daa
push
out
enter
arpl
mov
jge
mov
cmp
push
and
sub
xchg
popa
call
mov
adc
add
stos
outs
mov
xor
add
push
push
sbb
mov
ds
hlt
xor
sbb
lds
mov
push
int
sub
pop
repnz
inc
je
test
test
xchg
cld
jge
fldcw
and
push
push
movs
jl
sbb
scas
ret
test
add
bound
mov
aas
in
add
cmps
scas
mov
inc
mov
xchg
inc
mov
imul
leave
and
pop
xchg
outs
jb
mov
mov
jne
(bad)
fmul
call
mov
inc
mov
or
inc
mov
mov
pop
sub
into
xchg
lds
mov
adc
ret
(bad)
push
sbb
xor
push
ret
or
push
sbb
aam
shl
and
pop
outs
movs
sbb
repz
cli
(bad)
gs
mov
mov
adc
xchg
loopne
xchg
repnz
jmp
dec
ins
outs
cmc
pop
aaa
aas
(bad)
cmps
sti
(bad)
mov
leave
and
sbb
mov
das
jne
jg
retf
stc
jo
mov
ss
(bad)
mov
jno
ret
sub
aas
jo
jae
sub
dec
xchg
jne
test
dec
cmps
jmp
in
(bad)
and
sahf
xor
jge
xor
rcr
inc
add
shl
pop
int
push
(bad)
xchg
sub
mov
sbb
inc
mov
(bad)
rcr
not
jp
std
out
retf
jecxz
test
icebp
cmc
mov
movs
mov
es
shl
sahf
bound
xchg
cmps
ds
scas
(bad)
ds
xlat
ins
jg
ins
scas
push
dec
add
add
jae
rcl
or
scas
out
inc
ins
mov
cmp
out
fisttp
xlat
cmp
sar
jbe
cs
mov
mov
jns
scas
xchg
pop
shr
mov
jne
cli
add
das
daa
and
stc
mov
jo
adc
cmc
hlt
jmp
jmp
mov
pop
je
popf
inc
sbb
pop
sbb
bswap
popf
jmp
push
push
xchg
js
dec
es
test
gs
mov
cs
movs
mov
push
std
mov
jmp
push
mov
ins
ss
aaa
dec
push
cmc
sub
and
mov
ds
scas
lods
xchg
lods
test
push
inc
out
mov
ds
adc
push
push
rcr
cmp
mov
pop
push
inc
movs
pop
jne
inc
cmp
ins
daa
lock
mov
test
adc
sbb
add
push
movs
push
sub
adc
pushw
loop
arpl
sbb
arpl
lods
test
out
scas
add
push
push
push
test
jmp
gs
aam
cmps
xchg
sub
mov
pop
push
out
bound
jo
xchg
sbb
sub
sti
pop
jns
arpl
loop
nop
pushf
inc
rol
call
stos
push
push
movs
sbb
or
mov
push
mov
xor
pop
(bad)
scas
aam
repz
(bad)
mov
mov
test
js
rol
adc
repz
push
stc
cli
dec
ss
ret
jmp
ins
(bad)
mov
cli
pop
fldcw
inc
sbb
test
repz
push
lods
jp
retf
hlt
in
or
xor
outs
jecxz
jo
add
pop
jmp
imul
inc
test
cwde
inc
mov
pop
mov
loope
call
add
xor
inc
mov
movs
das
sbb
pop
jp
ins
dec
mov
adc
inc
cdq
jg
lahf
iret
mov
in
hlt
mov
out
and
dec
push
mov
fistp
loopne
xchg
lahf
adc
add
or
js
lods
pop
outs
fs
add
push
xor
adc
retf
not
cmp
jo
shl
sub
hlt
xchg
mov
xchg
jl
fsubr
(bad)
cdq
enter
jae
dec
mov
xor
lock
pop
add
sub
inc
xor
sub
cmp
cmp
or
sub
fs
add
dec
cmps
and
push
sahf
push
add
dec
xchg
mov
icebp
jns
and
cmp
and
cli
(bad)
mov
sbb
adc
dec
cld
push
clc
fist
push
mov
dec
xchg
inc
fdivr
xchg
ss
ins
cmc
mov
and
cmps
pop
popf
out
inc
mov
(bad)
aam
es
cli
pop
dec
scas
mov
push
mov
les
in
dec
mov
mov
call
in
stos
pop
mov
sub
cmp
jb
sbb
pop
dec
sti
outs
leave
ds
or
sbb
mov
and
and
lea
shr
mov
jbe
add
mov
inc
aad
sbb
add
sub
outs
(bad)
mov
xchg
cdq
movs
emms
and
call
stc
rol
mov
sbb
xchg
xor
pop
and
mov
and
ja
rcl
shl
movs
push
inc
dec
in
jge
push
hlt
ss
push
call
ficomp
mul
fsubr
outs
dec
in
xchg
call
push
or
inc
outs
xor
mov
push
fild
xchg
jne
push
pop
(bad)
sub
jbe
aad
mov
movs
push
add
or
lahf
ja
imul
fstp
fstp
jnp
(bad)
lods
leave
enter
jecxz
les
ror
jecxz
xchg
mov
pop
(bad)
test
mul
fmul
jmp
movs
mov
aad
sbb
rcl
aaa
mov
cli
cmp
jbe
pop
pop
test
clc
test
sbb
scas
ret
cwde
loop
pop
in
int3
push
lds
into
push
mul
jb
outs
shl
(bad)
pop
sub
mov
dec
or
push
test
mov
push
test
out
in
iret
pusha
mov
das
dec
pop
pop
mov
cmp
jecxz
rol
adc
jmp
mov
ror
popf
or
mov
inc
imul
jmp
neg
push
mov
pop
lods
sbb
sub
rol
neg
xor
or
cmp
dec
mov
lods
add
adc
add
jg
mov
in
nop
xor
xchg
xchg
enter
push
movs
ss
push
lahf
icebp
addr16
pop
xor
adc
dec
(bad)
iret
enter
bound
in
cdq
jno
mov
call
mov
mov
mov
push
inc
nop
(bad)
lods
nop
aam
and
and
adc
cli
xchg
mov
sti
sub
imul
or
mov
test
inc
dec
add
test
add
pop
mov
fldz
jbe
pop
outs
sub
mov
sbb
(bad)
xchg
xor
mov
ss
cmp
pop
call
js
retf
je
add
jo
dec
(bad)
outs
in
pop
leave
mov
les
pushf
or
stos
sbb
cmp
cmp
xor
or
fucomi
pop
and
in
cs
sbb
inc
stos
mov
and
loop
into
mov
pop
inc
fisub
mov
jnp
add
adc
or
jno
xchg
cmp
cmc
push
jecxz
imul
mov
in
mov
sbb
cmp
xor
adc
jp
cs
imul
fdivr
outs
xchg
and
icebp
xor
aad
scas
xchg
lods
or
jp
movs
dec
mov
es
fcmovu
stos
sub
push
sbb
xor
mov
push
inc
pop
push
and
dec
and
jmp
or
mov
arpl
or
dec
aam
cmp
lds
cmp
leave
in
jb
ficom
retf
jb
mov
xchg
es
xchg
enter
mov
or
inc
dec
add
xlat
xchg
mov
xchg
rcl
(bad)
sub
frstor
mov
push
gs
bound
fs
jmp
add
jnp
sub
inc
push
and
sbb
add
xchg
out
sub
push
pop
push
aam
inc
push
adc
push
add
mov
pusha
sbb
jge
add
loop
pop
rcr
cdq
push
jle
inc
lds
jno
imul
pop
popa
or
inc
push
cmp
dec
jmp
xchg
or
std
pop
lahf
push
test
movs
and
mov
les
jno
sub
ror
fisub
push
mov
inc
sub
retf
xchg
mov
mov
push
fwait
std
dec
and
jecxz
dec
retf
cwde
call
rol
inc
inc
repz
jmp
in
cmp
mov
(bad)
jo
outs
adc
mov
and
cmp
cmp
cmp
je
push
jbe
movs
fdiv
hlt
data16
repnz
scas
dec
in
sbb
pop
shl
xor
inc
cmc
add
fidivr
push
add
mov
fsubr
push
scas
cmp
xor
xor
xchg
lds
mov
test
sbb
jo
inc
lock
jne
sbb
jo
dec
dec
pop
or
scas
cmps
mov
test
xor
pop
jnp
ins
ja
fiadd
aaa
push
mov
or
scas
seto
cld
mov
fwait
nop
aaa
push
dec
xchg
and
sar
or
xor
and
dec
mov
out
push
in
pusha
add
cmps
dec
pop
(bad)
cdq
xchg
jns
mov
xchg
cmp
and
outs
bound
les
add
pop
ds
ficom
inc
loope
jae
lock
sub
add
test
jge
xor
neg
and
out
mov
adc
sbb
imul
retf
sbb
xor
jg
popa
sti
fwait
cmp
jmp
dec
aas
rcl
iret
xchg
sti
cmp
imul
call
popf
push
sti
retf
(bad)
loopne
lea
adc
mov
add
push
jne
inc
(bad)
popf
push
or
mov
mov
cmp
ror
aas
pslld
pop
cmps
mov
xchg
cdq
sub
shl
into
sbb
push
nop
sub
int
(bad)
and
push
retf
jmp
fcmove
outs
xor
mov
mov
and
hlt
and
adc
push
test
pop
retf
(bad)
repz
mov
fiadd
out
sbb
leave
(bad)
pop
fdiv
ret
(bad)
xor
shl
xchg
xor
ret
or
or
push
pop
adc
test
bnd
push
inc
add
mov
addr16
jmp
arpl
adc
movs
mov
push
icebp
jo
push
xlat
fild
(bad)
and
mov
sub
dec
push
cmp
mov
jns
mov
gs
cwde
and
pop
pop
adc
push
cmp
mov
xor
fimul
loopne
(bad)
fmul
clc
jmp
jp
ss
push
mov
sbb
iret
mov
inc
mov
push
test
or
jmp
les
jmp
pusha
mov
frstor
adc
add
push
int
int
sbb
jae
ins
jno
(bad)
mov
sub
mov
mov
cld
dec
test
jmp
(bad)
cdq
cs
stos
test
and
repz
mov
sub
dec
and
inc
pop
sub
jnp
scas
(bad)
dec
mov
xlat
xor
fdivr
sub
ins
pop
adc
push
cmps
cmp
ds
xor
dec
iret
sbb
inc
rcr
cmp
add
lds
push
add
or
xchg
cdq
adc
dec
(bad)
pop
call
jo
push
add
test
mov
dec
enter
int3
in
sbb
repnz
jge
cmp
pop
out
and
lods
int
fcomp
std
sbb
movs
mov
dec
adc
sahf
adc
and
sbb
mov
test
(bad)
add
sbb
fst
mov
jbe
fdiv
pop
(bad)
push
jmp
das
retf
test
jb
sub
xchg
mov
hlt
repnz
add
mov
sub
nop
inc
xor
push
sahf
call
sbb
pop
fwait
pop
add
dec
popf
cmp
lock
test
iret
sbb
hlt
sub
mov
pop
pop
imul
adc
aas
addr16
sbb
loopne
jns
in
call
mov
dec
cmp
mov
xor
mov
movs
pop
mov
aaa
out
push
sbb
xchg
call
push
call
pop
sbb
pop
sub
scas
adc
imul
fld
hlt
and
in
(bad)
xchg
pusha
inc
jecxz
or
lahf
cmp
sbb
mov
sti
mov
pop
ror
push
jbe
mov
cmp
dec
jg
pop
pop
sub
(bad)
clc
js
scas
js
lds
icebp
lahf
daa
dec
dec
mov
in
or
mov
(bad)
cmp
push
das
sbb
jp
push
aaa
mov
fwait
ja
mov
ss
jb
push
movs
lock
sbb
nop
mov
in
repnz
outs
mov
cmp
scas
(bad)
sbb
test
inc
test
add
sbb
inc
enter
daa
or
pop
dec
add
cdq
adc
bound
mov
xchg
mov
sbb
mov
adc
and
inc
dec
retf
pop
(bad)
pusha
test
dec
adc
fbld
daa
mov
cmp
xchg
push
and
inc
pusha
or
inc
mov
mov
fs
jns
xchg
xor
push
int
cmp
dec
jge
into
mov
add
bnd
in
scas
lock
lods
add
cmp
mov
repnz
ficom
loop
jno
jb
das
xchg
xchg
push
push
add
in
xor
pop
mov
jne
fldenv
test
test
mov
inc
fst
int3
add
sub
xchg
sub
cmps
push
adc
sub
mov
cli
push
scas
bound
xor
lahf
lds
add
jl
inc
inc
cmp
je
in
push
idiv
jg
test
pop
mov
pop
jmp
jmp
mov
stos
pop
cwde
dec
xor
mov
push
aaa
mov
inc
or
movs
(bad)
inc
inc
imul
mov
push
inc
js
mov
fmulp
and
inc
push
sub
xchg
xchg
aaa
jb
or
std
mov
push
fstp
mov
xchg
test
xchg
dec
push
aas
fst
inc
ins
clc
inc
pop
fnstcw
mov
xchg
mov
inc
push
add
cmp
sub
pop
jne
inc
xchg
ins
or
fimul
in
adc
pop
shl
bound
sbb
and
dec
ins
inc
cmp
enter
jmp
mov
jo
mov
cmps
scas
dec
and
or
mov
rcl
lods
inc
dec
es
and
or
jmp
jge
iret
mov
mov
jno
xor
xor
pop
pop
call
jl
dec
mov
dec
push
push
aad
mov
push
sbb
not
aad
not
dec
fnstcw
push
aaa
sbb
je
push
mov
xchg
xchg
add
dec
push
int
sbb
lock
mov
pop
sub
stos
outs
dec
outs
movs
cmp
ds
pop
in
pop
add
test
mov
inc
sub
push
hlt
or
test
shr
add
pop
push
out
dec
aam
push
mov
add
inc
add
mov
fistp
dec
aam
pop
call
in
jb
jae
add
add
lahf
shl
ret
(bad)
lods
call
cld
fnstsw
inc
cli
inc
dec
ds
jecxz
push
(bad)
mov
pop
cld
jnp
pop
fstp
cmp
into
mov
inc
xchg
pop
cmp
cld
fdivr
jg
gs
cmps
dec
xchg
push
push
leave
sbb
xor
mov
jbe
cmp
mov
jns
pop
xchg
sub
dec
mov
and
inc
jecxz
ja
sbb
mov
inc
push
add
inc
ds
bound
push
sbb
fs
imul
jp
fnstsw
hlt
rcl
gs
dec
repnz
adc
(bad)
je
push
cdq
inc
mov
mov
test
(bad)
jo
xor
and
and
jo
xchg
push
xchg
lds
inc
dec
hlt
inc
jnp
js
test
(bad)
xlat
sbb
imul
stos
mov
cmp
push
dec
loope
rcl
mov
mov
int3
xor
shr
push
loop
loop
in
sar
xor
cmp
add
sbb
nop
sbb
(bad)
lahf
cli
mov
lods
les
xchg
mov
push
dec
add
dec
add
mov
lods
(bad)
pusha
dec
lea
jecxz
test
nop
lods
push
dec
pop
mov
aaa
adc
lods
cmp
les
das
mov
retf
imul
repnz
sub
ror
dec
jne
loop
push
cdq
or
ret
aad
lea
mov
enter
shr
out
jo
pop
aam
mov
sub
fmul
add
rol
aad
push
loop
and
xchg
(bad)
dec
pop
and
rol
lock
pop
ds
hlt
jmp
leave
fdivr
js
cmp
cmc
pushf
xor
(bad)
into
and
call
ret
dec
mov
out
(bad)
cmp
push
arpl
dec
sub
fistp
pusha
pop
movs
push
jecxz
or
mov
add
dec
jp
sub
dec
cmp
cld
adc
push
fisub
and
mov
aam
xor
in
scas
sti
sbb
call
add
std
cmp
mov
and
cmc
xchg
sub
fs
pop
mov
mov
pop
fstp
inc
push
scas
jl
je
jbe
test
push
cmp
leave
iret
in
sar
stc
imul
(bad)
or
mov
dec
xchg
jns
and
mov
push
cmp
add
out
and
xor
mov
ds
mov
scas
inc
xor
test
cwde
cmc
scas
inc
pop
sbb
xchg
fwait
in
movs
mov
inc
xor
push
jo
or
fucomip
outs
(bad)
mov
repz
test
addr16
bound
xor
jl
div
stc
call
xchg
nop
dec
push
inc
and
xchg
inc
pop
add
fst
test
stos
inc
fld
inc
ret
fadd
xchg
aad
xchg
(bad)
daa
and
sbb
cmp
movs
push
dec
test
es
sub
add
(bad)
push
sub
inc
sub
nop
dec
(bad)
mov
in
dec
xor
xor
iret
shl
hlt
pop
jecxz
movs
sub
(bad)
scas
idiv
jbe
pop
push
sub
mov
and
sbb
sub
dec
das
or
cmp
div
test
sub
cmps
outs
into
xchg
inc
mov
inc
mov
cmp
mov
add
pop
pop
and
jmp
push
mov
add
jecxz
xor
xchg
inc
add
sbb
repz
ds
scas
scas
inc
xlat
loop
or
lds
sbb
seta
pop
ffreep
rcl
inc
mov
push
enter
retf
xchg
loope
fld
loop
or
mov
cmps
inc
adc
jns
push
lahf
outs
push
mov
push
lock
mov
inc
and
and
adc
jge
add
and
push
dec
(bad)
out
imul
fld
push
std
inc
inc
pop
adc
in
cmp
dec
loop
pop
mov
mov
sub
jmp
xor
fistp
add
div
jge
push
jne
cmps
pushf
cli
or
addr16
jecxz
stc
ja
mov
mov
push
inc
cmp
(bad)
scas
sbb
inc
dec
ret
lods
and
dec
and
je
imul
imul
add
cmp
dec
dec
cmp
div
daa
mov
or
mov
sbb
push
ret
enter
fadd
jnp
(bad)
rol
bound
push
mov
mov
mov
push
sahf
add
mov
cmp
fs
xchg
jb
and
push
inc
add
push
mov
cwde
fcomp
add
scas
or
dec
xor
inc
pop
test
shr
movs
and
std
and
les
jno
outs
cmp
push
pushf
out
xchg
call
out
fistp
jge
or
push
add
jmp
pop
mov
loopne
pop
addr16
sub
lods
dec
sub
mov
mov
mov
test
outs
(bad)
mov
dec
(bad)
and
icebp
clc
jb
aad
add
xchg
pop
xchg
mov
lahf
pop
test
dec
adc
inc
or
out
test
or
sahf
popf
inc
sub
or
stos
lea
sti
dec
push
fdiv
ror
fsub
int
jno
xchg
ret
bnd
xor
shl
rol
jae
sbb
imul
jns
cmp
adc
sbb
mov
sub
xor
pop
ret
pop
(bad)
push
nop
fucomi
add
inc
loope
iret
pop
aam
inc
aaa
inc
jg
jl
jmp
mov
xchg
js
cdq
xor
inc
dec
xor
lahf
mov
xchg
jo
sub
mov
sub
enter
movs
aad
and
pop
inc
nop
movs
adc
xchg
and
xchg
es
mov
mov
cmp
sbb
mov
mov
stc
adc
and
inc
sbb
(bad)
bound
push
inc
ficomp
dec
jns
or
jmp
and
mov
sti
dec
das
xor
push
and
push
pop
xchg
ror
or
mov
xchg
in
(bad)
sub
(bad)
pop
mul
mov
js
xor
fwait
ds
mov
adc
dec
nop
mov
xchg
push
jmp
dec
nop
pop
aaa
and
lods
mov
mov
addr16
mov
fs
fiadd
mov
add
pop
sub
or
in
loope
inc
hlt
xchg
sub
mov
cmp
scas
cli
mov
leave
push
inc
in
push
cdq
arpl
adc
adc
ins
add
add
(bad)
(bad)
rcr
xor
loopne
imul
add
mov
add
inc
out
ficom
push
enter
js
sub
jg
pop
in
sub
repnz
mov
fwait
dec
and
aam
inc
xchg
mov
sti
xor
and
add
leave
iret
inc
out
inc
add
dec
jmp
push
(bad)
push
nop
cdq
ins
shl
repnz
stos
sbb
pop
mov
and
or
cmps
(bad)
xlat
cli
xchg
sar
adc
lock
idiv
movs
mov
mov
movs
jb
nop
js
daa
mov
jns
jns
movs
sub
aas
cmp
cmps
cmovo
ins
ins
push
retf
inc
xor
in
out
push
ror
sbb
pop
test
xchg
test
inc
js
mov
mov
add
xchg
inc
retf
mov
pop
(bad)
jbe
(bad)
(bad)
aad
sub
pop
adc
sbb
stc
iret
inc
inc
mov
and
lea
and
add
sub
jbe
cli
xor
fcmovnbe
int
ins
es
sub
ins
and
bound
mov
cmps
rcl
out
loopne
sub
mov
pop
push
fisub
sar
inc
sbb
jbe
mov
sbb
xchg
xor
jmp
push
jmp
fbstp
sbb
cmp
xchg
pop
ffreep
mov
(bad)
sti
jnp
push
in
jb
sti
movs
lods
mov
add
xor
add
sahf
lea
and
xchg
or
sub
cmp
mov
outs
pop
ins
sbb
and
cmps
sbb
xchg
push
jge
push
dec
or
rol
sbb
inc
push
pop
dec
lock
push
sbb
push
or
push
rol
pop
icebp
mov
cmp
dec
cwde
pop
shr
(bad)
mov
cmps
lea
or
pop
ja
pop
bound
jp
adc
aaa
fsubr
retf
call
dec
sub
mov
sbb
mov
mov
pop
in
mov
fcmovu
sbb
and
adc
pop
(bad)
jne
loope
sar
sub
mov
jb
cmc
je
fmul
aas
dec
addr16
push
add
add
loope
call
add
pop
or
push
imul
xchg
push
pop
and
add
sub
dec
mov
cmps
outs
sub
mov
xchg
xor
push
loope
push
mov
mov
inc
test
add
movs
cmp
lahf
push
jo
retf
or
cmp
(bad)
push
xchg
(bad)
fbstp
push
sub
xor
int3
les
sub
imul
pop
add
rcl
call
mov
add
fs
mov
lock
ja
fstp
cmp
xchg
mov
and
and
adc
dec
sbb
adc
mov
loop
and
(bad)
retf
push
ins
add
ror
push
push
enter
jae
inc
inc
cmp
push
lahf
lahf
mov
daa
imul
xor
push
push
in
mov
pop
rcl
mov
gs
fistp
xor
call
in
stos
imul
rcl
or
jg
or
(bad)
dec
ret
mov
xor
push
pop
add
jg
sub
ret
cdq
lds
ja
mov
sub
(bad)
ficom
enter
test
fidiv
bound
add
add
neg
(bad)
leave
jb
fild
jl
aam
xlat
sbb
xchg
inc
add
nop
dec
imul
adc
aam
add
clc
mov
test
fstp
imul
dec
out
jp
or
adc
fstp
push
push
mov
popa
dec
loop
(bad)
and
pop
push
out
xor
fsubr
cmp
shl
adc
mov
arpl
jne
jle
fld
and
sbb
inc
push
mov
test
mov
or
inc
xor
dec
inc
xchg
movs
or
mov
(bad)
not
push
cmp
and
imul
sbb
dec
int3
adc
stos
mov
push
add
out
adc
lods
xor
stc
cmps
pop
dec
test
in
cmps
bound
sub
in
xor
xlat
and
mov
add
push
push
aad
std
dec
mov
test
add
xchg
inc
cmc
xchg
fwait
out
jno
or
mov
adc
sbb
(bad)
dec
scas
clc
test
adc
jle
pop
sub
pop
and
add
xchg
test
ins
fdivr
(bad)
dec
mov
xchg
ret
dec
adc
push
repnz
push
leave
lods
dec
push
test
or
(bad)
fidiv
pop
leave
leave
cmp
ja
out
pop
adc
xchg
(bad)
sbb
pop
cs
(bad)
movs
sub
arpl
dec
movs
dec
pop
je
test
sbb
in
data16
adc
ret
or
in
cmps
jns
aad
ror
inc
inc
scas
xor
movs
fdiv
xor
add
push
mov
movs
cmps
mov
loopne
add
add
inc
aas
nop
add
nop
ds
je
inc
xor
pop
xchg
sub
jecxz
cmp
mov
add
xchg
or
std
les
cwde
cmps
test
or
jbe
jmp
cmps
pop
jbe
mov
bound
repz
sbb
ins
mov
or
test
mov
sbb
adc
inc
daa
outs
jl
(bad)
gs
cld
inc
xor
add
mov
mov
outs
repnz
push
inc
pop
addr16
inc
scas
sbb
add
ds
mov
mov
cmp
and
cmc
repnz
or
or
mov
cmp
or
mov
test
sbb
sbb
inc
push
push
xor
mov
add
pop
(bad)
xlat
fdivr
cmps
imul
jo
and
daa
add
hlt
call
inc
aam
xor
push
mov
icebp
and
jb
push
inc
ins
pop
jmp
aas
xchg
sbb
dec
(bad)
mov
mov
add
arpl
dec
cmp
mov
and
push
mov
and
mov
mov
clc
inc
pop
loopne
iret
lahf
push
pushf
loopne
push
sub
mov
inc
adc
stos
push
mov
push
test
jmp
cdq
push
sub
inc
jae
mov
xor
loope
cmc
out
xchg
dec
xchg
adc
dec
adc
sub
inc
jl
pop
xlat
ds
adc
xchg
popf
icebp
push
push
pop
dec
xlat
sti
das
xor
adc
lods
out
inc
add
lea
mov
pop
xchg
and
in
xchg
jns
in
aas
mov
pop
pop
mov
mov
add
ret
xor
inc
jle
sti
xor
mov
into
leave
sub
mov
mov
jae
dec
sub
mov
sbb
add
inc
and
bound
into
rcl
and
jne
cli
sti
enter
xor
jp
xchg
(bad)
pop
bound
mov
cmp
push
iret
push
pop
retf
and
outs
cmc
cli
xchg
clc
and
cld
sti
dec
shr
shr
sub
sbb
cmps
push
pushf
jecxz
(bad)
or
xchg
jge
std
jnp
outs
imul
jg
xchg
mov
(bad)
(bad)
cmps
scas
adc
push
cmp
jae
or
mov
gs
or
mov
dec
pop
dec
gs
push
fistp
out
hlt
jecxz
iret
mov
test
dec
jmp
pop
dec
pop
sbb
fiadd
push
jge
xchg
pop
cli
sbb
or
mov
jb
outs
jl
add
sub
and
jno
aam
inc
cs
imul
add
aam
out
pop
aas
test
or
scas
push
stos
call
mov
mov
pop
pop
mov
scas
add
dec
mov
push
js
in
push
dec
repnz
mov
clc
leave
fcom
jb
sub
ds
push
inc
das
stc
scas
mov
inc
test
stos
cld
pop
jnp
jge
in
mov
dec
xchg
fninit
and
lods
xor
xchg
push
pop
dec
xchg
je
push
mov
add
fcmovb
push
aad
fwait
xor
xchg
sbb
aas
stos
pop
pop
arpl
inc
cmp
cwde
clc
into
fwait
adc
adc
sbb
jp
mov
lea
ds
jne
call
push
std
and
add
inc
or
push
mov
pop
popf
cmps
cmps
push
jg
add
rcl
adc
ret
fdivr
jo
pop
pmaddwd
xchg
cmp
imul
out
inc
cmp
imul
sbb
sub
jl
gs
push
ret
sbb
fnsave
push
xor
sbb
pop
adc
mov
fist
in
(bad)
lock
add
xlat
push
push
cmp
sub
mov
lods
shl
mov
call
mul
loope
push
jo
and
stc
popa
mov
push
stos
movs
sub
push
and
xchg
ins
mov
cmp
bound
or
add
mov
in
int3
call
xchg
sub
movups
bnd
mov
in
mov
ds
mov
imul
movs
xor
adc
push
les
addr16
cs
jl
cmp
(bad)
(bad)
outs
loopne
sub
add
cmc
aam
stos
push
adc
out
adc
jg
vmovaps
mov
call
mov
cmp
nop
test
(bad)
mov
xchg
in
mov
inc
and
stos
dec
push
jbe
loop
jl
push
push
imul
xchg
cwde
xlat
push
pop
xchg
int3
inc
inc
cmp
inc
lods
jg
mov
pop
dec
dec
add
push
push
jmp
dec
popf
in
iret
out
inc
mov
add
dec
aas
loope
mov
push
xchg
out
mov
xchg
inc
add
idiv
push
rcl
leave
mov
fucomip
in
fisubr
imul
test
inc
(bad)
dec
xchg
cmp
stc
icebp
iret
iret
cmps
cmp
imul
inc
ds
and
call
xchg
adc
xor
adc
mov
mov
loop
add
push
and
addr16
aam
psubw
cmc
pop
push
out
push
repz
scas
mov
fs
pop
mov
(bad)
out
inc
mov
ret
repnz
sub
push
xchg
js
dec
dec
push
add
cmp
outs
popa
ficomp
sub
mov
lock
push
fs
stos
xchg
jns
sti
lahf
mov
xor
mov
retf
test
cmp
sub
and
dec
sub
adc
ret
pop
in
popf
popf
mov
mov
xchg
lods
sti
mov
pop
mov
jmp
(bad)
mov
xchg
push
pop
inc
sbb
test
jecxz
jns
jno
imul
inc
js
xor
mov
add
call
inc
xlat
mov
repnz
shr
stos
retf
and
xor
enter
push
lea
daa
repz
ficomp
es
mov
sbb
xchg
jnp
stos
jnp
xchg
mov
add
xor
pop
mov
and
imul
ins
nop
mov
add
pop
jmp
popf
je
and
daa
push
retf
inc
mov
movs
push
shl
adc
test
cmp
int3
cmp
jp
fwait
daa
pop
in
test
imul
inc
cmps
rcl
retf
jne
ret
sbb
imul
retf
mul
test
jae
push
retf
adc
xchg
mov
pop
ret
mov
mov
sub
xlat
cld
xchg
cmp
jae
(bad)
mov
aas
daa
xchg
hlt
cmp
cmp
test
inc
js
lea
jmp
cmp
mov
xlat
sub
inc
fiadd
xor
mov
sub
in
js
lahf
int3
je
mov
and
xor
js
mov
popa
cli
dec
and
pop
fimul
fnstenv
pop
push
pop
nop
pop
outs
xchg
inc
push
pop
mov
fsubrp
mov
dec
mov
cmp
clc
nop
jle
je
push
cmp
and
jecxz
enter
nop
aad
sbb
aad
xor
xchg
adc
(bad)
loop
mov
xchg
lds
sub
repnz
dec
mov
ror
jl
out
dec
loopne
jmp
xor
push
(bad)
cmp
inc
dec
dec
xchg
inc
cmps
and
jbe
adc
cli
pop
mov
fmul
sub
push
add
jmp
jge
ins
shr
lods
dec
dec
data16
fs
js
inc
cmp
jnp
jo
sub
xchg
mov
out
mov
push
les
xchg
jmp
es
sub
aad
and
jge
into
sbb
mov
lds
jmp
jb
push
mov
in
aaa
fnstcw
push
jecxz
lods
(bad)
pop
jb
mov
mov
rol
fs
and
mov
push
mov
push
aam
fidiv
cmp
hlt
cwde
sub
cmps
fst
call
sub
inc
lods
cmp
lds
xchg
xor
retf
xchg
sar
xor
idiv
movs
loop
mov
sub
push
scas
xchg
repnz
and
sbb
add
mov
jb
sub
(bad)
ror
push
lods
sub
pop
fdivr
cmp
iret
and
test
cmps
or
and
sbb
outs
mov
mul
jb
sub
mov
ins
or
xor
repnz
sub
jle
fdivrp
add
cs
aaa
xchg
data16
jl
jae
call
test
test
jp
mov
and
scas
and
dec
cli
pop
jns
dec
fdiv
sub
test
(bad)
stos
xlat
cmc
std
js
iret
outs
inc
dec
mov
xor
cmps
lods
js
loop
pop
arpl
sub
jge
fistp
pop
(bad)
cmps
xor
(bad)
lahf
cmps
mov
mov
cmp
test
push
mov
jecxz
dec
arpl
bound
and
xchg
push
popa
rcl
cld
sti
or
fistp
cli
mov
push
retf
repz
jbe
mov
div
dec
bound
sahf
(bad)
or
push
push
xchg
lods
inc
jp
dec
nop
enter
fcom
sub
mov
or
push
xor
push
enter
push
ret
icebp
in
jmp
add
adc
sub
sahf
or
ja
out
mov
sahf
pop
cmp
and
xchg
push
and
inc
mov
mov
(bad)
push
das
push
adc
in
pushf
xchg
es
xor
or
inc
mov
and
mov
mov
jg
jnp
fwait
xchg
out
mov
fsubr
fbstp
test
dec
test
push
inc
ret
pusha
aad
dec
add
cmps
rcl
cmp
imul
mov
and
popa
movs
and
inc
test
arpl
jne
je
test
xchg
add
jne
clc
movs
jns
xchg
or
push
je
adc
std
jg
mul
mov
pop
sub
aas
cmp
mov
jge
push
into
jmp
xchg
sub
sub
cmp
jmp
cli
(bad)
jae
jecxz
xor
cmp
mov
sub
cmp
xchg
sub
psrlq
outs
dec
scas
imul
add
jge
cmp
push
sbb
inc
jns
jno
sub
in
lods
xchg
(bad)
mov
and
fs
xchg
call
xchg
in
inc
mov
xchg
xor
jle
aas
loopne
mov
ss
test
dec
rcl
test
movs
dec
iret
pop
in
mov
pop
fs
shr
mov
pusha
cmp
fs
addr16
cmp
ins
pusha
sub
sub
inc
pop
or
mov
fisttp
loop
nop
(bad)
or
loop
iret
lahf
mov
pop
gs
out
mov
push
push
(bad)
icebp
mov
test
push
xor
je
stc
sub
mov
fs
addr16
neg
std
pop
dec
push
dec
mov
cmp
aam
cmp
mov
push
enter
pop
add
lods
sub
out
aad
fs
push
pop
and
dec
xor
movs
xchg
clc
jo
xchg
mov
bound
aaa
fstp
lea
jecxz
int
dec
pop
xchg
mov
xchg
cmps
mov
movs
sub
cwde
mov
xchg
adc
pop
pushf
popf
push
and
jns
pop
cmps
xchg
xchg
inc
sbb
sub
mov
mov
lods
(bad)
shl
pop
inc
bound
lock
fwait
retf
and
nop
jns
(bad)
(bad)
cli
sub
mov
fsub
loop
cmp
shl
jmp
xor
dec
mov
lds
call
aam
sub
leave
ss
sub
mov
add
inc
ror
mov
push
leave
push
lods
dec
mov
and
aad
out
js
mov
imul
ja
das
dec
cmps
sbb
inc
push
mov
movs
jns
scas
stos
aas
and
sti
nop
push
rol
aam
or
mov
push
mov
xchg
lods
sub
or
sbb
stc
fwait
(bad)
fld
pushf
inc
jo
push
mov
cmp
sahf
xor
repz
std
addr16
push
imul
out
jmp
mov
xor
pusha
sahf
fwait
sbb
xor
enter
shr
jge
add
sar
(bad)
dec
loope
pop
jns
push
loop
inc
or
popa
sub
rcl
sbb
in
push
imul
xchg
xchg
fimul
imul
(bad)
icebp
sti
cwde
lea
sbb
stos
sub
call
mov
in
mov
jp
mov
mov
pop
movs
test
xor
xchg
ds
outs
(bad)
push
jecxz
fcmovnu
mov
out
xor
mov
arpl
daa
mov
jmp
div
fdivr
xor
and
add
test
loop
imul
inc
rdtsc
inc
adc
inc
ret
push
dec
jge
clc
cli
cmps
mov
stos
stos
mov
mov
xor
addr16
jnp
jecxz
jns
imul
les
cmp
int3
lock
mov
xchg
xchg
pop
cs
(bad)
dec
(bad)
(bad)
repnz
xor
dec
(bad)
sbb
xchg
adc
sub
cmp
inc
and
push
push
test
mov
mov
xchg
mov
out
test
cmp
and
test
sbb
(bad)
cmp
or
adc
test
add
or
push
push
(bad)
mov
xlat
fidiv
pop
pop
pop
out
or
fnstenv
push
test
stc
mov
jae
jle
jp
adc
(bad)
enter
fimul
ror
fimul
mov
icebp
jmp
add
or
outs
sahf
pop
sahf
js
xchg
jmp
iret
mov
fld
add
cmp
jbe
xchg
(bad)
jb
inc
imul
jb
mov
pusha
and
or
adc
push
push
addr16
mov
or
jmp
popa
fwait
mov
mov
call
mul
xchg
fldlg2
mov
mov
imul
sbb
lea
addr16
ins
cld
fcom
shr
jb
push
pusha
sar
rcl
test
xchg
xchg
mov
mov
idiv
dec
out
aam
or
sub
jae
jg
add
rol
cmp
(bad)
push
mov
xchg
xchg
xchg
daa
gs
pop
fdivr
add
shr
pop
mov
or
adc
mov
pop
inc
jo
jl
in
out
loopne
cmp
mov
inc
and
shl
seta
pop
jae
xor
adc
or
or
mov
in
push
add
adc
in
inc
dec
(bad)
mov
jecxz
pop
fdiv
xchg
popa
loop
xor
inc
push
jmp
jns
fmul
pop
out
mov
fdivr
ins
in
push
sub
mov
dec
push
jo
fisubr
or
or
rcl
outs
cmc
inc
fdivr
sub
inc
or
jg
out
std
and
sbb
dec
add
jmp
or
add
outs
dec
rcr
sub
jge
add
jnp
jg
mov
or
clc
jg
rcl
jmp
mov
lods
ret
push
jmp
pop
(bad)
in
arpl
pop
jmp
jmp
mov
cmp
or
sub
and
xor
mov
cmp
retf
mov
and
jne
clts
into
inc
mov
jecxz
xchg
jg
adc
and
cmps
cmp
popa
das
sub
sbb
into
daa
aam
shl
not
ret
xchg
jns
je
scas
int3
dec
push
out
and
cmc
xor
push
cli
pop
fnstcw
mov
das
movzx
into
sar
mov
adc
imul
sbb
js
and
shld
jbe
fist
in
bound
fst
adc
sub
add
sbb
nop
lods
sbb
loop
mov
shl
scas
mov
cdq
dec
pop
jecxz
mov
jecxz
nop
lods
pusha
retf
cmps
mov
out
and
or
add
aas
xchg
cmp
mov
pushf
sub
xchg
pop
test
pushf
inc
xor
aam
imul
push
stos
lods
in
lahf
xchg
cmp
jp
dec
mov
jne
sub
stos
xchg
and
push
and
mov
sub
jnp
(bad)
dec
jg
loope
add
fs
cmp
dec
xor
add
in
retf
fmul
movs
xchg
and
sbb
add
out
dec
jae
xor
lahf
outs
push
jl
cmps
dec
xchg
icebp
cwde
cmps
cmps
sub
dec
jecxz
add
push
and
sub
dec
lds
ins
xchg
outs
jl
jge
or
pop
mov
lahf
cmp
(bad)
ds
xchg
neg
ins
cld
test
xlat
push
pop
mov
ins
push
std
cmp
shr
aam
or
(bad)
gs
cld
fsub
retf
cmp
cmp
std
add
clc
je
(bad)
iret
out
xlat
cmp
outs
adc
and
movs
push
pop
push
mov
mov
idiv
int
sbb
outs
cmc
and
(bad)
mov
pop
dec
mov
fadd
loop
gs
lock
fdiv
sti
dec
dec
fdiv
(bad)
mov
retf
out
jle
or
in
mov
mov
cmp
movs
test
mov
push
ins
in
scas
imul
lea
out
dec
xor
adc
jge
mov
jg
cmp
test
imul
sub
xor
paddq
pop
sub
ds
add
push
xchg
retf
retf
xor
pusha
lods
or
out
into
fcom
cdq
xchg
mov
dec
mov
je
or
mov
sbb
inc
out
popf
add
pop
movs
mov
in
(bad)
xchg
mov
leave
(bad)
or
mov
in
xchg
aad
lods
in
adc
push
aad
fistp
movs
adc
in
icebp
aad
mov
leave
scas
loope
stos
cmp
adc
add
fdivp
xchg
sbb
sub
fmul
sbb
jo
pop
push
sub
lock
popf
and
pusha
fldcw
push
mov
mov
inc
cs
sahf
lock
dec
mov
(bad)
jecxz
jge
mov
mov
in
cmps
shl
test
push
ficomp
mov
mul
imul
pop
fisttp
jnp
je
mov
sub
clc
pop
inc
dec
xchg
lock
outs
mov
cmc
sbb
aam
outs
outs
mov
cdq
dec
div
cmps
shl
mov
je
test
call
int
dec
cmp
fadd
cmp
test
js
add
in
loop
repz
daa
push
popf
push
push
or
or
fcomip
in
and
cmp
adc
jo
pop
inc
push
(bad)
dec
mov
scas
movs
xchg
cmp
jge
nop
xchg
push
ror
dec
sbb
dec
cli
push
cli
xchg
and
cli
pminsw
fnstcw
sahf
xchg
xchg
ror
idiv
movs
cmp
movs
nop
add
inc
cmc
pop
rep
gs
add
add
imul
mov
mov
mov
dec
inc
adc
cwde
cmp
inc
ror
push
xchg
test
pop
add
fsubr
mov
rol
inc
repz
mov
push
arpl
pop
cmp
lahf
adc
rol
hlt
addr16
cld
jne
xor
call
pop
sub
sahf
data16
push
mov
(bad)
stos
mov
(bad)
cs
int
sar
dec
test
popf
inc
cmp
pop
in
out
hlt
pop
jl
outs
aam
mov
sbb
add
push
pop
mov
cmp
jmp
push
es
push
mov
pop
aaa
lea
ss
mov
div
jne
shl
xchg
push
cmps
cmp
pushf
int
jl
push
adc
setns
sti
jle
sbb
push
sbb
ficom
mov
push
addr16
xchg
mov
adc
and
sbb
sbb
into
inc
arpl
test
sbb
cmps
mov
pushf
in
call
pop
outs
sbb
jmp
into
cmps
pop
in
dec
pop
dec
add
jnp
add
outs
adc
scas
xchg
lods
mov
fcmovu
push
(bad)
je
icebp
stos
mov
sbb
push
xlat
jmp
adc
repz
mov
out
and
mov
xchg
std
lahf
das
dec
cmc
pop
pop
cmp
popa
aaa
dec
cmp
and
jecxz
add
add
leave
mov
xchg
mov
aam
push
push
and
push
popa
(bad)
into
dec
arpl
stc
cmc
aaa
jbe
inc
inc
shr
retf
sbb
daa
test
xchg
sub
inc
rcl
jp
test
imul
scas
xchg
sub
test
stos
push
cmp
and
inc
jne
push
mov
rcr
pop
dec
inc
pop
out
into
sbb
fmul
adc
cli
nop
aas
rol
xchg
add
leave
mov
cmps
push
mov
(bad)
jge
jnp
mov
xchg
jp
sbb
shl
add
shr
imul
pusha
stos
popf
in
pushf
retf
cmp
mov
add
and
mov
mov
outs
stos
scas
cs
arpl
test
ins
ds
pop
inc
sbb
inc
mov
or
not
movs
push
push
sub
mov
jmp
lea
outs
repz
and
(bad)
cli
mov
mov
sub
mov
jne
jg
jbe
into
cmps
and
loope
jmp
popa
dec
and
stos
mov
or
mov
mov
or
mov
xor
cmps
mov
add
(bad)
inc
jb
adc
mov
inc
push
push
cli
jnp
out
pop
jnp
mov
stos
xor
add
ss
mov
pop
sbb
loopne
call
push
pusha
test
imul
cmps
int
imul
aas
movs
pop
div
or
push
sbb
ins
ficomp
inc
push
js
mov
or
scas
dec
aas
mov
std
lahf
retf
aam
(bad)
mov
scas
inc
sub
pop
test
dec
or
jo
not
inc
data16
movs
mov
push
mov
xor
cld
stos
push
cld
push
loopne
jl
pop
xchg
retf
mov
or
pop
dec
xchg
inc
shr
test
or
lods
or
shr
rol
inc
xchg
fist
outs
inc
mov
out
loop
test
dec
sub
push
sahf
js
retf
adc
je
jns
sub
or
jo
outs
(bad)
pop
cmp
mov
jp
popf
sub
mov
cmc
fisttp
cdq
das
stos
rol
gs
test
push
pusha
addr16
xchg
enter
xor
mov
lea
adc
dec
mov
push
dec
sysret
dec
add
adc
xlat
aam
mov
mov
rcl
push
test
jo
into
mov
ja
add
fs
xchg
imul
(bad)
mov
add
pop
xor
mov
mov
(bad)
fdivrp
or
mov
mov
adc
mov
les
iret
inc
mov
xor
mov
push
dec
dec
inc
imul
xchg
jns
jp
ds
(bad)
xor
(bad)
mov
(bad)
jne
fs
push
add
sub
or
in
adc
and
pop
mov
rcl
bnd
retf
push
xor
inc
jmp
je
das
jb
push
idiv
pop
clc
mov
movs
xlat
push
mov
shl
bound
or
sub
push
jecxz
movs
mov
cmp
mov
push
mov
and
cmp
dec
and
ss
pop
(bad)
arpl
fwait
addr16
or
test
rol
fstp
mov
xchg
cs
push
adc
push
mov
push
xchg
mov
imul
stos
movs
push
xchg
mov
xor
dec
sub
mov
mov
pusha
test
loop
sub
or
pop
jge
mov
cmp
mov
mov
(bad)
movs
nop
and
hlt
add
mov
dec
sub
rcl
push
data16
iret
dec
push
dec
mov
pop
lahf
inc
test
add
ins
(bad)
mov
je
xchg
xchg
test
(bad)
(bad)
lds
leave
call
sbb
jbe
in
mov
rcl
loope
or
stos
mov
sti
pushf
mov
pop
imul
sti
cld
movs
inc
dec
push
rcl
push
inc
mov
call
push
dec
in
adc
test
xchg
hlt
in
cmc
leave
ins
jo
sar
scas
cmp
cdq
or
jmp
adc
loop
sub
push
pop
or
repnz
pop
inc
cs
ret
nop
leave
cmp
retf
push
arpl
mov
shr
inc
cmps
dec
(bad)
arpl
int
xchg
jbe
push
mov
ret
jp
sahf
call
loop
push
mov
mov
(bad)
lods
mov
sub
data16
mov
jo
mov
push
mov
les
imul
sahf
aam
cmovg
pop
popa
dec
mov
stos
pop
jne
push
jecxz
xor
scas
movs
test
pop
jmp
mov
les
add
xor
int3
or
fsubr
pop
jns
je
jno
mov
or
add
mov
push
out
retf
push
stc
push
lods
pop
add
dec
mov
cwde
call
sub
dec
enter
(bad)
ror
std
jno
xchg
(bad)
shr
lods
jge
int
pushf
ror
data16
repz
mov
outs
cwde
xchg
stc
stc
mov
pop
shr
jmp
xchg
jb
dec
sub
mov
push
(bad)
retf
mov
aaa
imul
ror
popa
dec
addr16
nop
test
push
xchg
mov
out
iret
ror
xchg
push
push
rol
lahf
out
js
sti
push
pop
push
xor
ror
dec
jp
rol
push
enter
stc
cli
jnp
xchg
imul
xor
jmp
call
pop
jb
xor
sub
cdq
cld
clc
out
inc
dec
pop
in
ret
push
iret
sub
pop
cmc
xor
or
and
xor
ins
or
jmp
mov
out
mov
jns
sahf
pushf
pop
frstpm(287
rcl
inc
lock
js
mov
jmp
jp
mov
int
or
sub
mov
or
mov
push
pop
pop
dec
sub
(bad)
in
out
sub
mov
inc
imul
cs
or
sahf
xor
cmps
repz
mov
jmp
ror
sub
and
adc
and
retf
cmc
add
inc
add
pop
icebp
jbe
clc
cmp
popf
mov
add
cmp
out
test
xchg
xor
mov
bnd
adc
xor
jns
xchg
call
pop
mov
mov
pop
bound
(bad)
mov
mul
sbb
cmp
adc
sbb
dec
push
and
add
cdq
mov
pop
ror
loopne
nop
add
cmp
stc
fisubr
xor
mov
aaa
cdq
loope
sbb
int
repnz
inc
test
pop
dec
push
mov
xor
shr
mov
jbe
or
in
cmp
test
shr
xor
es
xchg
stc
icebp
stc
hlt
pop
sti
sbb
mov
push
out
mov
mov
stos
popf
adc
dec
push
mov
push
fcomip
inc
(bad)
std
in
das
ins
imul
sub
xor
movs
imul
wrmsr
out
push
ins
or
sub
fiadd
sub
lods
jo
and
and
dec
call
iret
xchg
leave
in
mov
stos
jbe
int
xor
adc
icebp
push
jo
xor
add
add
cs
call
or
dec
push
add
iret
(bad)
push
add
jmp
or
in
and
cdq
cmps
sbb
xlat
movs
ins
dec
iret
stos
cdq
push
mov
xor
xchg
imul
out
xchg
repnz
add
cmp
mov
or
clc
ror
sbb
jl
pop
mov
loope
stos
pop
(bad)
or
pusha
call
pcmpgtw
and
ss
push
add
xor
inc
test
add
test
out
ja
and
mov
fist
enter
sar
sbb
arpl
jmp
dec
adc
push
sub
pusha
add
sub
or
inc
add
cs
(bad)
sti
inc
sti
fsubr
xor
mov
ret
and
rol
mov
add
ds
repnz
xlat
mov
inc
in
mov
sub
gs
inc
sub
mov
mov
sub
inc
cmps
mov
dec
ds
push
xor
je
mov
xlat
sahf
adc
std
pop
cmp
jecxz
inc
ins
push
shl
sbb
mov
push
fldenv
dec
dec
inc
cmp
mov
in
xor
fstp
push
loopne
or
add
rol
stos
(bad)
call
inc
push
add
xchg
adc
dec
rcr
fcomp
xchg
imul
shl
jne
movs
push
movs
icebp
mov
inc
js
mov
sti
fwait
std
mov
mov
push
in
loope
stos
mov
shl
pop
bnd
int3
adc
mov
sub
dec
xchg
and
inc
add
jno
mov
rcl
mov
push
push
mov
lds
imul
bnd
cld
scas
jle
push
fs
sub
dec
adc
mov
stos
mov
lock
cmp
mov
mov
fcmovb
(bad)
jecxz
ins
xchg
lds
mov
or
jmp
sub
push
add
push
retf
or
lahf
mov
retf
stos
test
xchg
xchg
xchg
inc
sbb
inc
xor
xor
inc
add
add
enter
fcomi
and
jge
sar
inc
leave
shr
fcom
stc
mov
push
(bad)
xchg
scas
cmps
pop
dec
in
in
cs
sub
retf
adc
xchg
inc
dec
cli
shl
push
std
mov
push
cli
inc
enter
fisubr
add
adc
or
xchg
pop
in
pushf
ins
fidiv
cmp
push
fldenv
push
add
push
xchg
dec
or
jge
nop
fidivr
push
js
fs
mov
cmp
push
sub
and
fs
add
adc
fmul
loopne
adc
mov
cmp
adc
stc
je
mov
mov
pop
and
push
rcl
mov
sbb
xor
xor
xor
int
or
xor
xcrypt-ctr
cmps
pop
pop
imul
xchg
(bad)
mov
pop
rol
or
dec
rcl
sub
sub
push
jae
sbb
fucomi
mov
aam
xlat
push
mov
pop
jecxz
icebp
shl
mov
mov
jo
push
retf
cld
aas
sbb
jmp
dec
mov
pop
cmps
or
dec
add
fimul
into
imul
jno
fnstsw
cmp
shl
push
leave
and
cli
bound
ret
push
adc
sbb
push
out
js
push
outs
sahf
retf
shl
ret
ss
mov
push
sub
push
or
enter
pushf
sub
movs
mov
lods
or
mov
cmp
retf
in
sub
sbb
push
mov
xor
shr
jno
iret
hlt
rol
push
dec
shr
mov
mov
jno
xchg
shl
ins
ins
dec
fdivr
xchg
jmp
mov
cdq
ret
mov
ror
inc
mov
(bad)
outs
pop
ret
xchg
jmp
mov
std
push
adc
rep
inc
bnd
sub
retf
ja
loope
and
mov
jmp
aam
push
fdivr
jnp
mov
or
fdiv
push
xor
and
or
ret
(bad)
cmp
adc
sub
fbstp
call
das
push
dec
mov
imul
add
cld
jb
ins
rol
pusha
in
ret
cdq
or
push
xor
bound
bound
fiadd
mov
pop
xchg
(bad)
mov
std
(bad)
mov
fsubr
inc
add
fsin
xchg
mov
int3
les
scas
cmp
sub
inc
adc
fwait
adc
arpl
mov
lahf
xor
fstp
push
jo
retf
movs
out
test
jecxz
test
add
outs
idiv
imul
and
sbb
setg
ds
pop
xor
imul
jmp
jnp
push
inc
test
push
(bad)
rcr
inc
outs
cdq
jecxz
cmc
arpl
loope
add
add
mov
mov
cwde
cmps
dec
mov
push
jg
lea
fcmovnb
sbb
(bad)
mov
mov
jo
xchg
and
iret
xlat
fisubr
ret
cmc
adc
cmps
mov
lock
in
sbb
mov
imul
imul
call
sub
nop
imul
jmp
mov
sub
push
xchg
pop
lahf
push
pop
sti
outs
cmp
jg
mov
adc
sar
adc
cmc
je
sub
xchg
mov
gs
xchg
pop
pop
shr
and
jae
mul
pop
ficomp
sub
and
adc
sbb
pop
or
sbb
xchg
push
push
push
or
pop
sub
cli
mov
sbb
sbb
pop
dec
push
dec
dec
hlt
(bad)
xchg
push
test
movs
dec
xor
jmp
sub
mov
test
ins
loope
jp
dec
clc
push
or
push
into
xchg
cmp
sub
outs
sbb
mov
dec
add
xor
push
jge
call
lea
jb
dec
popa
push
mov
dec
popf
movs
sbb
cli
pop
jb
xlat
mov
mov
adc
aas
lahf
inc
loopne
ja
movs
push
sbb
xchg
inc
mov
(bad)
xchg
cmps
retf
pop
jl
cmp
fcmovne
ror
mov
push
jo
in
loopne
call
es
add
inc
js
add
lods
int3
aaa
fs
enter
test
dec
add
xlat
sub
outs
lods
daa
mov
int3
mov
xchg
push
xlat
add
jne
hlt
int3
mov
xor
cli
test
mov
pop
cmc
sub
sbb
loopne
cmc
sti
pmulhw
ins
jnp
mov
push
xchg
mov
mov
(bad)
push
and
cmp
xor
pop
outs
mov
mov
ret
stos
mov
sbb
xchg
cs
jae
adc
add
mov
outs
ins
or
push
jno
psraw
js
popf
sub
jns
xchg
mov
xor
xlat
jbe
outs
int3
jae
xor
test
push
add
dec
xchg
mov
push
inc
call
jne
sub
mov
ficomp
mov
leave
and
sub
dec
push
lahf
xor
fwait
fwait
imul
sub
mov
push
sahf
add
inc
dec
cmp
lods
jo
push
test
adc
cwde
cmp
scas
inc
pop
jbe
ds
(bad)
dec
push
ja
sub
push
dec
dec
retf
sbb
nop
rcr
jmp
(bad)
sti
jge
add
adc
out
cdq
ins
sahf
iret
js
sub
push
cmp
push
ret
jge
ret
(bad)
(bad)
sbb
lahf
mov
push
imul
pop
ins
mov
mov
sbb
dec
sbb
test
adc
adc
test
jmp
lock
jno
inc
jne
outs
pushf
lea
pop
fimul
in
(bad)
stc
aas
aad
push
popf
outs
or
jmp
sub
outs
fucomip
sti
cmp
cmc
sbb
popf
jo
xchg
cmp
movs
mov
ss
mov
inc
bound
div
aam
mov
daa
test
sti
popa
mov
stos
ret
cmp
xchg
movs
jl
ja
gs
and
leave
in
mov
aam
push
xor
loop
test
mov
jge
xchg
mov
fisubr
in
jns
add
aam
in
push
rcl
xchg
xor
jne
(bad)
mov
sahf
test
mov
and
ret
sbb
loop
mov
ins
outs
ds
bound
cmp
and
mov
les
adc
test
dec
sbb
xchg
dec
adc
pop
gs
les
add
cld
jg
xchg
mov
add
mov
(bad)
jo
clc
sbb
nop
fld
in
fcomp
scas
call
cmp
imul
leave
pop
adc
xchg
adc
aaa
cmp
psrld
not
aas
fs
in
mov
push
xlat
add
pop
movs
lock
iret
or
adc
retf
pop
rol
outs
scas
inc
(bad)
fwait
sahf
loope
and
idiv
popa
fsub
shl
and
sbb
sbb
cmp
inc
xchg
push
push
sbb
pop
inc
sbb
mov
repnz
adc
cmp
adc
add
cld
leave
aas
int3
lahf
cmc
add
(bad)
jmp
cmps
fild
fdiv
jg
adc
dec
outs
or
lahf
push
xchg
mov
adc
jg
test
sub
mul
jb
jmp
jp
cmp
nop
dec
mov
sub
and
movs
xchg
or
nop
movs
jae
dec
mov
sub
(bad)
jnp
mov
push
xchg
add
or
or
test
sub
cmp
aam
enter
les
jno
add
add
aad
inc
inc
push
cmp
sbb
rcr
es
sub
mov
inc
jno
xor
dec
and
stos
test
or
mov
repnz
mov
and
jae
sub
and
fmul
jecxz
ds
jle
out
mov
inc
loope
js
pop
mov
test
mov
cmp
ja
cli
fstp
mov
(bad)
clc
mov
movs
pop
mov
nop
xor
cld
rol
sbb
and
add
(bad)
fxch
pop
jle
ja
mov
push
(bad)
addr16
in
sbb
or
push
fsubrp
inc
out
xchg
scas
pop
jns
cwde
fdivr
adc
add
xchg
sub
push
jns
rol
mov
add
push
pop
lock
and
div
jge
dec
pop
das
retf
mov
inc
xor
sub
shl
sar
xchg
les
div
popa
jo
(bad)
aad
dec
int3
mov
dec
ror
push
sbb
inc
test
shr
or
retf
sti
mov
popa
inc
inc
repz
xchg
cmp
jne
inc
out
pop
mov
dec
(bad)
sub
dec
mov
push
cmp
mov
inc
dec
cmp
and
mov
sub
fimul
mov
xchg
jecxz
push
cwde
fnstenv
or
mov
int3
xchg
add
stos
test
xchg
dec
jae
push
cmp
ss
sbb
jl
sub
gs
xchg
mov
or
out
dec
aam
imul
push
fiadd
xor
cdq
pop
aaa
neg
and
sar
mov
out
ret
ins
mov
inc
jb
adc
std
xchg
fcomi
xchg
add
jmp
xchg
cmc
inc
in
xchg
out
sbb
js
sub
mov
mov
add
outs
xchg
cmc
jecxz
je
push
aaa
mov
movs
xchg
mov
movs
popf
mov
push
repz
aas
sbb
mov
add
fdiv
not
test
pop
xor
lock
nop
add
aam
call
bound
mov
fsubr
jl
mov
and
cli
mov
enter
test
sub
int3
mov
push
jmp
xor
jns
icebp
xor
jne
lahf
ret
push
cmp
lahf
sub
test
xchg
mov
add
ror
aam
imul
mov
scas
in
cmp
xchg
push
(bad)
xchg
jl
mov
and
icebp
loope
fstp
fstp
pop
or
into
fcomp
xor
mov
add
mov
jbe
ins
inc
xor
cdq
sbb
push
and
mov
mov
pop
inc
mov
and
iret
mov
jge
lock
xor
dec
xlat
add
inc
loopne
add
pushf
push
les
(bad)
fidiv
fld
jae
xchg
dec
jmp
add
movs
js
mov
mov
jg
(bad)
(bad)
cdq
lods
jmp
sub
sub
sti
dec
sbb
xchg
adc
xor
nop
xchg
cmp
push
mov
xor
and
pop
daa
out
pop
sub
jno
push
js
or
sub
mov
std
stos
jae
imul
ret
scas
mov
ret
and
sub
cmp
and
adc
stos
into
test
push
mov
ja
ret
mov
retf
arpl
jge
ficom
push
push
or
mov
jmp
xchg
icebp
jge
cmp
in
pop
mov
lock
mov
or
and
jle
ds
inc
inc
jp
jno
xchg
mov
cmps
retf
jo
mov
sub
sbb
sub
(bad)
test
adc
mov
xchg
xchg
cmp
data16
and
fst
and
ds
cmp
cmp
push
cli
mov
dec
mov
scas
xor
xchg
push
lods
sub
mov
sub
rol
jbe
fs
pop
add
stos
xchg
int
xchg
lods
call
adc
jge
hlt
add
cmps
out
sub
xchg
ins
or
push
adc
stos
pop
push
mov
aam
out
daa
mov
jb
(bad)
pop
fistp
cmp
adc
shr
call
sbb
add
ficom
add
mov
(bad)
mov
loope
fbld
lahf
add
adc
ja
jb
int3
push
sbb
or
icebp
ror
push
xor
mov
xlat
gs
stos
mov
loop
loop
lds
(bad)
rcl
sahf
xor
inc
pop
sub
fiadd
adc
out
cmp
hlt
jmp
mov
shl
xor
pop
inc
push
xchg
loop
xchg
test
ins
inc
out
jno
(bad)
add
and
inc
pop
xor
sbb
mov
out
or
call
push
ins
mov
push
popa
mov
mov
inc
arpl
sub
sub
or
retf
jne
ins
and
mov
push
jmp
ss
jo
fcomp
enter
test
xchg
inc
fs
arpl
xchg
sub
sbb
pop
test
sbb
mov
push
out
dec
push
nop
push
retf
(bad)
jg
cmp
cwde
pop
xor
pop
mov
xchg
btr
mov
dec
jbe
aad
sbb
mov
sub
cmp
jns
fdivr
push
nop
sbb
push
pop
rcr
cmps
stc
mov
xchg
cmps
ret
xchg
xchg
pop
xchg
and
dec
(bad)
ds
pop
ffreep
sub
mov
sub
lock
cli
sahf
lds
rcl
lds
scas
dec
pop
dec
and
mov
xchg
pop
out
div
jne
jge
(bad)
fbstp
or
pop
push
pop
popa
dec
mov
(bad)
fst
sbb
xlat
xlat
cmps
sub
inc
(bad)
jmp
in
idiv
mov
aas
adc
cdq
mov
imul
imul
leave
sbb
dec
lods
fisub
bound
or
xchg
mov
cld
mov
push
iret
ja
jo
mov
inc
mov
inc
push
fadd
movs
sbb
mov
mov
sub
xor
xchg
xchg
data16
dec
or
dec
xchg
sub
cli
sar
mov
xor
sbb
ret
mov
int3
out
test
mov
aaa
ror
addr16
aad
movs
adc
ss
push
sbb
sbb
fstp
mov
push
daa
xchg
fcmovnb
push
sbb
sub
rol
stos
sub
aam
bound
fidiv
aas
push
leave
neg
add
xchg
pop
out
inc
or
mov
ss
pushf
in
sub
mov
add
jmp
je
push
loop
ds
adc
push
pop
pop
push
mov
sbb
test
push
mov
dec
adc
rol
in
xor
adc
mov
ja
jmp
and
sub
pop
retf
mov
aam
aas
sub
and
arpl
xchg
dec
xchg
xor
pop
add
call
fs
jb
adc
jecxz
pop
imul
mov
jmp
retf
push
and
sub
xor
pop
fstp
pop
mov
push
dec
sbb
xlat
std
pop
pop
inc
fisttp
xor
and
stos
mov
jmp
and
and
add
movs
lods
fwait
pop
xor
dec
jp
mov
push
nop
int3
pop
push
push
mov
xchg
or
jb
adc
add
scas
inc
stc
mov
dec
movs
mov
push
pop
inc
mov
push
out
add
jno
or
aas
mov
or
dec
ficom
sub
cdq
fs
add
mov
sti
sub
fadd
sbb
adc
in
hlt
and
add
loop
test
cmp
add
cdq
cmp
je
or
in
ret
or
sbb
adc
arpl
inc
test
push
scas
or
iret
xor
or
out
repnz
stos
mov
xchg
jnp
lds
add
add
inc
push
inc
pop
xchg
cmc
aas
ds
shr
jnp
xchg
retf
push
aam
fisub
pushf
jnp
push
into
lea
cmp
mov
daa
into
mov
into
imul
bnd
aaa
add
cs
pop
add
data16
in
push
cmp
mov
test
inc
in
push
mov
fimul
jno
shl
xchg
stos
mov
retf
pop
stc
mov
jns
dec
mov
mov
retf
test
jae
pop
(bad)
in
inc
ds
popf
stc
dec
fimul
in
mov
fstp
mov
lock
pushf
xchg
movs
rcr
mov
cmp
mov
xor
push
outs
mov
jmp
repz
loop
inc
fist
sbb
mov
ds
aaa
into
pop
pushf
ins
cmp
movs
adc
pop
nop
imul
rol
or
scas
dec
ins
push
addr16
in
dec
inc
jbe
retf
and
cli
mov
imul
mov
ficomp
sahf
push
cwde
add
adc
fld
pop
cmps
(bad)
js
cmp
int
das
retf
cmp
cmps
retf
daa
mov
repz
iret
out
mov
repz
call
pextrw
inc
inc
xchg
adc
mov
xchg
retf
and
mov
or
pop
scas
cdq
movs
inc
sub
mov
jecxz
fwait
cli
out
mov
dec
pusha
(bad)
icebp
push
push
xor
into
pop
mov
inc
fucomip
mov
sbb
ins
push
jmp
es
dec
loope
cli
pop
push
inc
xchg
and
imul
movs
hlt
adc
mov
cmps
cmps
sub
dec
inc
jmp
fisub
dec
fdiv
clc
add
pop
pop
jae
xchg
out
sub
sar
pop
arpl
outs
dec
dec
mov
fwait
jae
jo
aad
or
or
mov
sbb
fwait
lods
sub
adc
sub
push
dec
inc
mov
xor
or
(bad)
leave
jp
adc
adc
pop
xor
cmps
inc
imul
cwde
and
retf
cdq
loop
movs
xchg
and
ror
(bad)
add
cli
out
pushf
xchg
xor
mov
inc
add
inc
mov
test
hlt
das
ins
cs
inc
and
pop
xchg
mov
pop
mov
aad
add
push
loopne
jo
push
fsubr
mov
mov
adc
repz
cmp
test
xchg
mov
mov
fmulp
(bad)
xchg
jae
test
or
enter
push
ror
ins
sar
dec
cmc
sub
imul
iret
and
adc
dec
mov
imul
mov
cmc
and
cmps
nop
push
sub
push
mov
xchg
in
xchg
mov
call
jp
sbb
ss
sub
xchg
lods
mov
pop
jp
sub
xchg
(bad)
xor
(bad)
in
cli
add
fadd
data16
mov
xchg
ret
out
xchg
pop
ret
iret
aaa
pushf
stos
int3
jl
push
in
mov
mov
(bad)
add
test
or
aad
icebp
add
and
std
fistp
fwait
pop
mov
mov
adc
das
mov
mov
jo
ror
inc
push
jecxz
stos
pop
push
xor
jg
mov
ins
stos
es
scas
jne
shr
inc
push
and
in
into
push
nop
fisubr
je
ins
mov
xor
adc
mov
nop
pop
lahf
pop
jle
cld
sub
out
outs
fst
stos
data16
push
xchg
call
adc
mov
dec
dec
(bad)
xchg
xor
aas
push
mov
jle
fisubr
int
cli
mov
mov
pop
xor
and
pop
in
(bad)
scas
imul
mov
ins
sbb
xchg
imul
movs
idiv
xlat
cmp
(bad)
rcr
mov
xchg
rcl
in
xchg
inc
in
jge
xchg
adc
cmps
retf
iret
xlat
std
pop
cmp
or
(bad)
sub
adc
int
sbb
jmp
push
aas
pop
vpsraw
cli
fmulp
scas
outs
sub
xchg
mov
cli
mov
lahf
iret
sar
std
pop
cmp
mov
(bad)
loope
movs
and
mov
ds
popa
sti
stos
mov
cmp
clc
jp
jbe
pop
adc
test
stc
je
ins
lea
movs
cmps
mov
adc
mov
xchg
shr
xor
or
cmc
push
test
ja
mov
jne
jp
dec
lods
imul
in
jmp
cmc
test
add
xor
push
inc
jecxz
sahf
pop
pop
jmp
dec
cli
cmp
scas
jns
push
lea
mov
aam
sbb
in
dec
pusha
rcr
push
loope
repz
addr16
sbb
test
pop
(bad)
mov
in
repz
mov
lods
xchg
(bad)
std
data16
sub
in
sub
adc
call
out
pop
xchg
push
out
(bad)
ror
jno
sub
cmp
into
retf
and
in
xchg
and
push
scas
adc
popa
cmc
add
mov
xchg
out
pop
stos
add
cs
mov
in
and
xor
dec
call
sub
inc
cmc
cmp
jp
popf
dec
aaa
jmp
sbb
movs
ficomp
aam
(bad)
aad
mov
xchg
mov
stos
push
xchg
jmp
int
data16
mov
and
add
mov
mov
or
sbb
jne
push
pop
(bad)
pop
mov
movs
jbe
xchg
inc
addr16
rcl
cmps
or
adc
sub
mov
hlt
cld
jle
(bad)
and
pop
mov
out
outs
xchg
enter
loope
cmp
int3
sub
call
leave
cli
xor
ss
jae
cld
lahf
imul
or
rol
stos
sub
imul
fstp
mov
(bad)
repnz
xor
stc
imul
inc
outs
out
leave
mov
ror
psllq
(bad)
jae
ror
and
add
or
(bad)
push
sub
inc
jno
push
adc
xchg
xor
es
mov
push
mov
aam
gs
xor
mov
or
jmp
or
addr16
jne
dec
movs
and
stc
add
fucomi
jg
mov
or
fwait
retf
cli
mov
mov
pop
mov
pmulhw
stos
pop
sub
push
stos
inc
rol
nop
sbb
fdivr
in
mov
xchg
and
jne
push
jl
cmp
cli
adc
fmul
add
lds
ds
push
mov
into
cmp
sub
cmovge
rcl
in
cmp
dec
sar
cmp
jo
add
(bad)
lds
push
cmp
std
(bad)
iret
xlat
movs
aaa
ja
xchg
clc
lds
push
cmp
retf
iret
in
repz
mov
(bad)
dec
jo
and
into
and
mov
cmps
test
sar
jae
loopne
(bad)
outs
ja
mov
cmp
icebp
repz
not
pop
xchg
dec
out
das
ins
shr
je
cmp
inc
aaa
or
sbb
push
xlat
dec
push
xchg
sbb
dec
lea
cmp
inc
and
and
(bad)
(bad)
addr16
pop
dec
in
pop
dec
enter
(bad)
push
and
mov
ja
int
or
add
cmc
cmps
xchg
fnop
(bad)
pop
shr
dec
mov
ret
mov
das
push
xchg
movs
inc
push
ins
inc
lahf
scas
sti
add
pop
dec
mov
stos
test
add
sbb
push
ror
out
jno
stos
popf
pop
gs
mov
call
stc
add
(bad)
pop
scas
sbb
add
sub
pushw
xchg
push
stos
push
push
cld
push
mov
inc
pop
fiadd
xor
rol
xor
iret
cmc
lods
dec
lds
mov
sub
retf
call
jmp
cmp
mov
xlat
fs
sbb
mov
jl
cmp
enter
mov
sar
pushf
into
std
mov
add
jo
push
xchg
test
dec
mov
and
xchg
aad
rcl
loopne
ret
test
mov
cwde
mov
popa
and
mov
(bad)
cmp
and
adc
fimul
fsubp
jmp
cmps
lock
enter
mov
in
ds
mov
push
lock
add
pop
(bad)
das
int3
inc
fcmovne
pop
sbb
dec
and
stos
inc
adc
arpl
push
mov
sub
jnp
dec
in
xor
push
mov
jecxz
jecxz
lahf
pop
jo
call
and
xor
ds
aas
in
sahf
xchg
mov
fs
mov
out
scas
cmp
and
xchg
loopne
xchg
movs
(bad)
cmps
out
jg
cld
jnp
fstp
add
or
popf
sub
movs
xchg
call
sahf
mov
into
mov
shl
ins
in
xchg
in
in
pop
call
popa
jg
outs
scas
jecxz
sbb
outs
push
sub
xor
ds
jge
cmp
pop
jmp
and
mov
jno
or
outs
dec
pop
not
sbb
imul
mov
(bad)
adc
add
sbb
xor
out
push
cmps
inc
mov
mov
push
push
aad
bound
pop
(bad)
popa
sbb
or
xor
push
hlt
xchg
out
push
sub
loope
lahf
mov
(bad)
retf
add
mov
xor
aad
adc
cmp
and
addr16
and
lods
xchg
fmul
sub
lods
test
push
imul
add
inc
das
inc
mov
outs
mov
xchg
in
xlat
aas
test
push
sbb
xor
in
mov
jbe
sub
cmp
fisttp
int
ret
push
sub
stos
mov
sub
adc
in
jg
pop
call
cld
mov
xchg
push
inc
test
lods
push
mov
mov
(bad)
rcr
idiv
pushf
jns
sti
jl
(bad)
in
dec
jno
call
cmp
add
mov
push
leave
(bad)
adc
dec
bound
test
push
dec
dec
mov
icebp
cmps
fld
cmc
test
js
stc
xchg
lahf
mov
cmovle
cs
mov
dec
push
sbb
mov
popf
jp
push
cs
daa
dec
xchg
dec
ret
xchg
mov
inc
mov
sub
retf
stos
xchg
iret
push
rcr
push
out
sub
adc
xor
sbb
sbb
pusha
push
stos
fisttp
pop
and
gs
sub
inc
and
xchg
mov
rcl
mov
inc
mov
mov
arpl
test
repz
inc
xchg
mov
pop
and
ds
imul
aas
dec
sbb
in
mov
sbb
push
mov
and
or
cmp
jae
test
or
push
pop
push
push
add
in
ja
fwait
jge
xor
mov
push
pop
ja
lods
sub
stc
adc
movs
pop
bound
(bad)
rcl
sub
jne
xor
call
jns
adc
ret
pop
mov
aaa
cmp
sub
push
sub
xor
iret
cmp
sub
scas
loop
lods
in
or
adc
or
push
mov
cmp
sbb
enter
ret
pop
dec
pop
xchg
push
cmp
addr16
cmp
sti
test
pop
mov
fcmovne
xchg
xchg
aaa
push
fild
lds
push
add
lock
call
in
xor
and
push
cmp
dec
sbb
jmp
inc
mov
aaa
push
jb
jno
xchg
inc
dec
inc
mov
jnp
cmp
sub
dec
push
dec
and
(bad)
push
repnz
fistp
repz
or
adc
pop
mov
das
xchg
mov
outs
lods
(bad)
imul
aam
inc
(bad)
stos
dec
sub
add
shl
loop
cmp
adc
xchg
xor
stos
gs
push
or
sbb
xor
out
jae
xor
fmul
inc
cmp
pop
rol
aam
push
mov
dec
stc
je
jne
xchg
xchg
xchg
push
mov
mov
pop
xchg
mov
fdiv
movs
or
test
mov
pop
pop
xor
leave
aad
mov
push
push
retf
cmps
push
nop
push
sbb
or
cli
sahf
mov
xchg
sbb
rol
inc
xchg
call
dec
pop
shl
je
pop
inc
sub
pop
ss
sbb
movs
pop
or
dec
dec
stc
xchg
adc
(bad)
out
jno
pop
xlat
and
dec
out
xor
xlat
sbb
add
test
mov
sub
les
pop
(bad)
pop
jecxz
adc
dec
pop
test
retf
pop
dec
(bad)
pop
xchg
lds
mov
aas
mov
jmp
(bad)
push
sbb
sub
repnz
cmp
aam
push
mov
cmps
stos
stos
push
xor
lds
shl
add
mov
das
cmc
mov
mov
add
add
rol
enter
ins
mov
mov
cli
xchg
dec
fcomi
aas
icebp
push
jmp
les
movs
mov
push
or
cmp
data16
inc
jecxz
cmps
out
mov
and
mov
dec
xor
xchg
mov
cmps
js
push
pop
mov
xlat
in
popa
lods
fist
sbb
mov
adc
xchg
sbb
mov
sti
push
ins
imul
call
jmp
fwait
sbb
(bad)
mov
sub
outs
in
mov
mov
stos
test
pop
cwde
loope
sahf
dec
xchg
sub
xchg
cdq
sahf
inc
jmp
in
jmp
push
fisubr
mov
mov
popa
jb
push
pop
popf
rol
xor
inc
sub
sar
mov
mov
and
call
and
retf
mov
jge
fcomp
pop
lods
data16
sbb
in
xor
xchg
push
test
adc
adc
sbb
xchg
or
pop
outs
out
and
loopne
pusha
xchg
outs
xor
xchg
sub
add
sbb
dec
fistp
mov
xchg
and
ins
pusha
aas
pop
add
inc
push
inc
cmp
cmps
into
fs
shl
xor
mov
xor
push
xor
mov
adc
pop
fsub
xchg
mov
scas
scas
mov
xchg
or
or
pop
sbb
mov
bound
or
push
xor
xchg
(bad)
mov
pop
mov
in
jge
ss
fild
sahf
mov
mov
(bad)
pop
js
fdivr
call
mov
jge
in
cli
ret
add
pop
cmp
sub
lods
dec
movs
inc
push
aam
jecxz
adc
pop
pop
ret
push
in
aam
sub
pop
rcr
shr
add
in
(bad)
mov
es
leave
sbb
dec
adc
add
sbb
sbb
sbb
test
push
je
sbb
adc
shr
add
movs
xchg
enter
(bad)
mov
mov
out
push
ret
lds
stc
ds
and
adc
ins
es
(bad)
call
mov
call
jmp
dec
mov
sbb
cmp
cmp
aas
je
or
cmp
sub
bound
jle
nop
(bad)
cld
(bad)
gs
jno
or
iret
cmps
adc
stos
mov
push
cmps
stos
dec
jg
stc
push
bnd
xlat
retf
xor
xor
hlt
cvtpi2ps
ret
xchg
mul
or
cmc
in
xchg
fld
sar
jmp
push
ror
lahf
and
shl
inc
push
movs
cmp
adc
xor
cmp
call
imul
fcmovnb
xlat
push
mov
jnp
(bad)
sub
mov
int
cmp
fisttp
adc
cli
jns
sbb
mov
and
ds
dec
xchg
mov
push
jnp
dec
movs
lods
stos
lods
sahf
jbe
dec
cmp
stos
mov
jecxz
retf
fist
out
and
pushf
dec
fidivr
xor
adc
mov
jb
stc
add
outs
nop
loope
xor
push
adc
xor
xchg
inc
jb
pop
pop
xor
push
fwait
xor
add
mov
nop
outs
in
pop
jnp
xor
movs
pusha
stc
adc
repnz
mov
xchg
push
(bad)
xchg
scas
scas
fcmovnb
sbb
and
hlt
jmp
movs
pop
pop
or
nop
in
push
inc
push
dec
leave
out
scas
mov
mov
ins
jb
stos
call
xchg
mul
sbb
cmp
stos
pextrw
pop
push
cld
mov
push
scas
inc
dec
pop
mov
mov
addr16
sub
mov
dec
adc
lods
sbb
and
in
arpl
mov
mov
add
stc
add
cmp
sbb
dec
add
(bad)
clc
mov
sub
fstp
sub
xchg
mov
fs
lds
push
push
enter
dec
aam
inc
cmc
push
loope
(bad)
enter
mov
(bad)
retf
ds
ins
or
lock
mov
mov
lock
mov
jecxz
test
dec
into
ds
ss
jl
enter
adc
cmp
and
jp
mov
mov
data16
mov
xchg
xchg
sub
cmps
inc
lods
sbb
fisttp
sti
call
add
sub
jnp
out
(bad)
gs
mov
call
mov
test
xor
movs
std
pop
fcmovb
faddp
ss
jae
cli
mov
pop
adc
pop
shl
test
movs
(bad)
or
jmp
inc
arpl
dec
stos
cdq
aad
push
inc
mov
xor
js
mov
repz
cmp
xor
jmp
dec
push
repnz
or
dec
inc
xor
cmps
addr16
fisttp
mov
fistp
cs
sub
lahf
mov
mov
cmp
das
jp
sub
outs
mov
out
mov
pop
in
add
mov
jno
rcl
data16
inc
sub
inc
xchg
inc
dec
inc
test
mov
repnz
aaa
and
ficom
or
xor
pop
stos
jge
dec
pop
test
sbb
push
and
sbb
xor
(bad)
in
xchg
cmp
jg
xor
aad
imul
test
outs
jne
imul
sar
cwde
popa
mov
ins
adc
or
add
shl
(bad)
pop
out
pop
aad
jnp
les
mov
adc
dec
dec
jl
inc
cmp
mov
mov
cmp
pop
mov
(bad)
cmp
ds
in
std
mov
push
jns
sub
cli
retf
mov
mov
shl
ret
in
rol
xor
lods
add
cmps
daa
add
cmps
fcom
rcr
sub
push
fwait
xchg
push
push
mov
inc
cmovae
sahf
cmp
ret
xchg
loop
cdq
xor
push
mov
jg
(bad)
mov
stos
inc
dec
lds
cmp
fwait
leave
jne
cmp
jecxz
in
or
lds
stc
jl
retf
out
in
ret
sahf
jbe
fist
pop
jno
add
movs
call
pop
fwait
aam
mov
cld
cmp
jns
mov
inc
outs
fidivr
inc
aaa
push
lods
jl
or
mov
and
push
cld
inc
xor
fs
adc
loopne
cli
(bad)
dec
xchg
clc
mov
(bad)
mov
aad
add
jge
mov
enter
arpl
in
lock
sub
loopne
cmp
std
mov
mov
rcr
adc
dec
xchg
inc
in
daa
sbb
add
pop
imul
mov
inc
dec
cmp
sub
test
dec
mov
sti
cmp
mov
or
push
push
cmc
add
hlt
inc
pop
fst
mov
cmp
call
stos
mov
int
cwde
enter
dec
lods
mov
ins
cld
aam
sub
inc
cmp
xchg
sbb
hlt
mov
and
test
lock
sti
mov
mov
mov
add
push
mov
loop
push
stos
inc
les
or
adc
push
js
repz
dec
pop
out
sbb
cwde
push
push
iret
push
ds
mov
mov
lea
xchg
int
pop
aas
scas
mov
ds
outs
sbb
rol
add
cmp
mov
pop
repz
jmp
mov
dec
cld
and
pop
mov
fs
pop
mov
sub
push
xor
xor
inc
leave
pop
inc
pop
addr16
xchg
sbb
stos
sub
inc
ret
pop
xor
in
call
xchg
bnd
dec
fs
imul
mov
je
add
mov
xchg
pop
xor
je
dec
gs
mov
fst
arpl
add
add
inc
(bad)
mov
movs
lods
cmc
mov
sbb
mov
std
mov
jnp
add
icebp
mov
jno
loopne
lea
adc
xchg
adc
jns
xchg
imul
and
std
cmp
adc
(bad)
std
mov
loope
(bad)
mov
in
xor
lahf
cmps
dec
dec
lods
inc
inc
scas
scas
ins
inc
dec
das
loopne
xchg
jb
pop
out
in
inc
data16
bound
jmp
mov
dec
or
std
sahf
mov
movntps
call
xor
pop
jae
call
mov
sub
xor
jne
out
not
js
icebp
xchg
loop
push
test
in
je
jmp
cld
in
mov
daa
lods
ret
push
pop
push
arpl
push
aas
stos
mov
outs
cmps
mov
out
idiv
pusha
mov
jmp
pop
push
adc
mov
fistp
mov
lods
xchg
jmp
push
call
dec
test
fs
aad
ins
dec
cwde
std
jnp
xor
push
outs
call
(bad)
push
mov
sahf
jne
sub
jecxz
and
adc
aam
aad
movs
fisttp
mov
ficom
xor
fmul
inc
cmp
jmp
outs
mov
mov
lds
pop
aam
in
push
pusha
les
aad
push
popa
jne
adc
adc
fwait
scas
ins
ins
sub
pop
add
aad
push
xchg
mov
clc
sub
mov
aas
xlat
fcom
scas
neg
lea
ror
mov
mov
add
arpl
mov
push
out
push
cmp
and
(bad)
loop
fs
jle
sub
dec
inc
dec
aad
mov
rcl
xchg
sub
movs
xor
sbb
inc
ss
cmp
jge
adc
outs
fwait
lods
cdq
dec
fiadd
xor
cmp
sti
cmp
add
mov
pop
stos
dec
je
or
pop
adc
sbb
pop
push
call
xchg
xchg
push
movs
xchg
jne
and
push
mov
jmp
inc
jecxz
and
add
jns
xor
push
call
outs
cmps
inc
aaa
sbb
retf
jnp
adc
push
xchg
push
sbb
scas
sahf
adc
out
sub
dec
sbb
movs
mov
sub
xchg
dec
loopne
sub
jmp
int
push
adc
iret
mov
or
mov
xor
sub
pop
sar
call
push
in
mov
dec
mov
push
adc
mov
xchg
and
mov
dec
clc
sti
test
loope
repz
mov
xchg
sbb
xor
cmp
js
sbb
arpl
ins
push
in
(bad)
cmps
imul
sub
lea
jo
fidiv
sbb
xchg
icebp
mov
aad
dec
sbb
in
jne
push
es
icebp
out
adc
outs
push
std
out
ins
nop
mov
pop
sub
sub
and
adc
xchg
mov
inc
inc
dec
scas
cmps
and
xor
jo
pop
cmp
jg
pop
jbe
outs
sahf
fucomi
or
xchg
call
xor
imul
inc
inc
mov
jge
fistp
push
pop
in
mov
sbb
leave
sub
and
into
cli
fbld
mov
outs
icebp
pop
xor
adc
dec
add
xchg
bound
dec
cmp
fimul
dec
scas
outs
out
pop
mov
sub
xor
leave
mov
pop
or
adc
sub
leave
adc
sbb
xchg
std
push
lods
dec
popa
int
imul
inc
sub
aam
mov
dec
or
cmp
das
not
push
sbb
xchg
test
jp
push
add
in
lods
cmps
retf
rcl
mov
sbb
dec
fisubr
and
push
dec
out
lds
push
leave
mov
jge
mov
fmul
std
(bad)
push
aam
sub
adc
nop
jecxz
sbb
(bad)
retf
ss
in
(bad)
fcmovne
test
in
push
xchg
add
add
ins
les
dec
jbe
sub
add
repz
cmp
mov
mov
call
(bad)
(bad)
dec
sub
gs
in
push
pop
call
mov
mov
outs
push
sbb
cwde
clc
inc
sub
adc
cmp
(bad)
sbb
(bad)
shl
dec
inc
pop
enter
adc
shr
ficom
cmc
xchg
dec
and
stc
inc
test
mov
jmp
(bad)
mov
outs
aam
push
inc
mov
jae
ins
not
fcmovnbe
pop
out
xchg
int3
adc
inc
call
test
and
out
pop
vpcmov
stos
mov
mov
mov
push
scas
icebp
imul
enter
fld
popa
xor
js
push
cmps
retf
test
lahf
sub
jmp
sub
push
cmps
loope
sahf
mov
add
mov
sub
das
test
add
ja
push
jae
addr16
addr16
imul
xor
mov
retf
ret
adc
shl
call
dec
call
pop
add
dec
mov
inc
cmp
jmp
enter
dec
push
add
cmp
test
xor
push
je
dec
xchg
imul
outs
xor
mov
lahf
dec
push
add
sub
test
movs
inc
and
jecxz
xchg
out
xor
test
stos
scas
or
jo
mov
add
cmps
inc
cmp
popf
retf
lahf
ins
enter
test
mov
movs
add
add
inc
add
ins
out
pop
in
mov
jb
and
imul
cmc
jl
daa
ds
out
in
mov
dec
cmps
sub
rol
and
lahf
inc
inc
int
adc
push
fisub
adc
retf
movs
movs
test
mov
bound
xor
pop
(bad)
(bad)
jecxz
(bad)
mov
inc
mov
dec
jo
sub
jl
dec
mov
fisubr
fidivr
ds
jmp
(bad)
mov
stos
xchg
fcomp
sub
movs
sub
inc
pop
inc
fwait
and
jo
mov
xchg
pop
or
inc
add
mov
inc
loopne
jnp
mov
hlt
aam
mov
stc
inc
test
xchg
outs
mov
mov
pop
les
lds
fisubr
pop
nop
sub
add
jnp
cmp
cld
cmp
(bad)
mov
(bad)
pop
(bad)
nop
lods
cmps
(bad)
jmp
pop
push
fild
fld
mov
imul
sbb
stc
mov
mov
pop
xchg
mov
mov
stc
push
test
jl
and
movs
xchg
jne
inc
jmp
pop
jmp
jge
movs
out
sub
mov
jl
pop
cs
out
pop
jge
and
xor
pop
retf
add
cmp
scas
cdq
jecxz
cmp
call
sti
jp
fcom
int
(bad)
test
in
add
sbb
pop
push
shl
mov
repz
or
mov
push
fild
mov
mov
add
sbb
push
sub
aam
sub
rol
dec
or
mov
in
add
shr
out
in
aam
(bad)
jnp
aam
iret
cmc
gs
mov
shl
cmp
inc
repz
cmp
test
mov
loop
and
or
mov
add
dec
fucomp
pop
xchg
fstp
sub
and
cs
mov
and
push
ret
mov
dec
mov
sbb
fsubr
(bad)
fsubr
dec
pop
add
adc
sub
add
daa
not
fidivr
out
jnp
das
push
iret
(bad)
fistp
xchg
inc
aam
dec
(bad)
mov
inc
push
lock
jno
cmps
xor
cli
cmp
pop
leave
pop
pop
jge
cmp
push
dec
rcl
pop
repz
mov
repz
adc
cli
or
fwait
daa
and
(bad)
imul
lods
or
pop
adc
jp
mov
addr16
jmp
mov
cli
push
arpl
stc
sbb
dec
push
xor
adc
in
cmps
and
inc
sahf
inc
(bad)
fmul
test
mov
inc
outs
jae
add
sub
das
adc
(bad)
mov
hlt
leave
adc
loopne
cdq
jnp
retf
pop
sti
jno
mov
dec
add
jg
mov
xor
sbb
mov
ds
cs
xchg
loope
loope
mov
adc
hlt
cdq
or
cmp
sub
push
xchg
fwait
sub
sbb
test
push
sub
mov
jge
xchg
fs
lods
outs
and
jb
and
adc
and
movs
stc
jne
jae
(bad)
fucomi
mov
sub
push
aam
push
lock
and
adc
dec
mov
fistp
std
push
inc
and
test
jae
push
mov
and
ret
push
lods
mov
sbb
hlt
and
mov
mov
adc
cmp
mov
scas
(bad)
call
loop
arpl
popa
out
out
push
arpl
dec
push
rcl
movs
push
aam
jl
jmp
mov
outs
ins
out
jecxz
clc
push
jmp
push
ss
je
lahf
jne
or
xchg
or
pushf
push
test
sbb
repz
lea
jle
mov
adc
cmps
int
lods
inc
jnp
mov
add
lahf
mov
nop
jns
popa
(bad)
ja
pop
and
sahf
sbb
mov
or
add
ret
add
and
test
dec
hlt
enter
ins
in
inc
dec
mov
pop
rcr
sbb
jne
pop
(bad)
xor
mov
pop
push
stos
mov
loopne
mov
mov
sti
sbb
or
mov
fdivr
sub
sub
mov
push
add
ja
and
gs
push
sbb
fiadd
adc
iret
adc
in
jg
iret
mov
jbe
pop
out
jbe
mov
lea
cmp
pop
jae
stc
sub
icebp
ret
adc
mov
in
jb
mov
shl
jbe
or
or
add
retf
pusha
stos
cmps
mov
and
cmp
sub
inc
xor
mov
mov
push
out
fist
mov
mov
aam
test
and
test
arpl
pop
lods
fistp
add
push
sti
xor
dec
shl
(bad)
loop
pushf
out
(bad)
pop
mov
xchg
mov
cmp
inc
xor
mov
xchg
ret
mov
dec
inc
xchg
mov
fnstenv
inc
dec
jb
dec
inc
jbe
mov
pop
mov
mov
mov
adc
mov
and
pop
add
daa
cmps
pop
(bad)
in
test
mov
xor
and
dec
push
sbb
pop
imul
push
imul
mov
shr
fyl2xp1
sub
(bad)
in
stos
pop
fadd
call
movs
push
out
pop
rcl
ror
push
imul
ins
movs
pop
mov
mov
cld
std
cmp
retf
movs
jns
and
and
scas
sub
push
fsubr
lods
inc
outs
add
call
call
adc
inc
or
lods
jmp
inc
sbb
movs
push
pop
push
inc
daa
fnstenv
fnsave
mov
and
add
inc
stc
shl
mov
adc
sbb
(bad)
cli
je
retf
in
stos
cdq
mov
sub
lods
das
sub
push
shr
aad
jmp
outs
stos
inc
mov
mov
sbb
mov
mov
ss
inc
cmp
(bad)
cmp
stc
sub
sub
push
loope
es
pushf
adc
xchg
int3
outs
lods
mov
popa
cli
test
mov
and
(bad)
aam
push
dec
retf
mov
loopne
outs
pop
mov
(bad)
and
pop
loopne
and
inc
mov
call
and
sbb
das
xlat
retf
push
sbb
adc
fcmovnu
ins
movs
fist
push
cmps
fsubr
dec
mov
dec
xor
std
cmp
retf
mov
mov
inc
loop
nop
inc
cmps
adc
(bad)
sahf
pop
and
jg
and
cmc
js
add
add
sub
rol
(bad)
sbb
imul
cli
pop
mov
inc
jmp
jns
fdivr
inc
add
sub
aam
mov
push
push
and
push
xchg
aam
adc
test
mov
sti
and
(bad)
sti
pop
xor
jmp
lahf
pop
xchg
cmp
mov
sahf
sbb
sub
lods
jmp
jg
pop
daa
aas
pushf
fnstsw
jb
jae
shr
pop
jb
pop
mov
or
mov
xor
cwde
cli
fisubr
sbb
popf
dec
call
inc
out
and
push
shr
(bad)
fsub
xchg
jbe
add
mov
out
jecxz
mov
fistp
outs
pop
outs
call
pop
imul
lahf
test
jg
xor
bound
sahf
test
jns
xchg
stos
or
fs
inc
mov
fs
stos
pop
push
out
bound
cmps
mov
mov
sub
pushf
call
jmp
mov
cli
xor
(bad)
fimul
dec
mov
ds
sub
jne
adc
sub
cwde
pop
jmp
jmp
xchg
mov
or
stos
and
sub
push
pop
inc
adc
and
mov
or
lahf
lahf
mov
dec
mov
ret
adc
ins
stos
xchg
cwde
or
dec
fcmovu
dec
inc
(bad)
jbe
or
mov
xlat
and
pop
mov
outs
not
(bad)
bound
cwde
jns
cmp
add
jno
mov
fdivr
push
sbb
sbb
cmps
shl
push
inc
pop
sub
mov
jge
ss
mov
jb
mov
lds
repnz
mov
xchg
mov
aam
popf
jmp
or
inc
xchg
adc
enter
jl
ror
imul
aad
dec
add
daa
std
popa
outs
popa
sbb
pop
frstor
sbb
js
cmp
lock
inc
repnz
mov
fcompp
ins
mov
or
lahf
aas
lea
cs
(bad)
test
fwait
sbb
imul
sbb
inc
neg
fcmovne
bound
push
jmp
in
neg
cs
mov
pop
lahf
xor
cmp
jne
dec
dec
mov
push
sahf
cmp
mov
fadd
test
inc
aas
push
add
cmp
int3
(bad)
xchg
cmps
mov
js
std
mov
cdq
jle
fistp
sub
leave
lds
inc
int3
and
loope
pop
xor
cld
push
sub
not
fisubr
mov
sbb
push
mov
not
ss
clc
mov
push
ins
scas
jge
retf
add
inc
enter
sbb
hlt
cmp
mov
xchg
test
repz
test
stc
stos
cmp
enter
pop
mov
iret
push
xor
leave
inc
push
pop
lock
push
mov
mov
outs
mov
jbe
sub
mov
add
in
or
pop
add
pushf
mov
addr16
mov
mov
aam
enter
adc
sbb
mov
cmp
adc
mov
mov
mov
call
in
mov
not
or
clc
jg
imul
sub
cmp
jno
add
outs
adc
push
xchg
push
mov
stos
cmps
cmps
mov
mov
nop
jg
loopne
lods
mov
(bad)
gs
xchg
xchg
push
lahf
fld
xlat
std
pop
jmp
sub
adc
les
and
call
push
inc
outs
inc
out
aas
ret
fdivr
inc
jne
sub
jmp
cmps
lea
and
cmp
dec
dec
shl
shl
jmp
mov
pop
mov
xor
xchg
xchg
and
arpl
jbe
sub
sbb
xchg
ds
mov
dec
pop
or
sub
add
dec
stc
rol
mov
or
cli
sub
xchg
xor
inc
pop
push
aam
push
sub
imul
iret
dec
mov
cli
imul
pop
ins
sahf
jp
mov
call
xor
or
mov
pop
imul
int3
ret
sahf
out
(bad)
les
stc
mov
pop
sbb
lahf
retf
mov
jb
loop
jb
cmp
push
mov
sbb
test
and
cmps
xchg
test
add
mov
fadd
lods
mov
call
pop
jae
js
scas
or
xor
aas
imul
fsub
jmp
dec
leave
ror
out
push
mov
push
mov
test
out
jmp
call
xrelease
push
jmp
jns
ds
std
mov
es
add
lea
fwait
jnp
mov
test
or
dec
mov
stos
xlat
retf
mov
(bad)
rcr
dec
push
xor
mov
cmp
mov
jmp
imul
cmp
push
mov
jl
sbb
xor
or
(bad)
sbb
mov
cs
mov
mov
mov
jno
push
arpl
push
repnz
(bad)
icebp
inc
push
xor
pusha
pop
jne
ins
jnp
push
cmp
jge
jp
add
cdq
sti
cmp
lahf
xor
add
mov
data16
inc
sar
stos
fdivr
outs
mov
mov
movs
xor
sub
pop
xchg
sbb
movs
jge
test
jb
(bad)
sti
mov
push
nop
sub
push
xchg
mul
cmp
imul
cdq
(bad)
inc
push
mov
add
push
push
pop
and
dec
pop
xchg
fs
cmps
arpl
jmp
cs
imul
aam
push
(bad)
inc
loop
add
bnd
enter
ret
push
pop
mul
bound
sub
and
fstp
add
pop
sti
or
out
cmp
sbb
les
mov
stc
mov
out
mov
sub
cmp
jmp
call
mov
push
dec
rcl
cmp
sub
test
mov
xor
loopne
jns
js
loope
addr16
imul
sub
dec
inc
loop
or
jge
leave
jno
push
push
push
scas
int3
out
imul
imul
jne
(bad)
dec
ror
iret
adc
cdq
xchg
sub
fwait
add
push
(bad)
mov
stos
sub
mov
movs
jmp
clc
sub
shl
jb
push
cwde
loopne
(bad)
push
cmc
rep
cmp
in
cmps
(bad)
(bad)
jecxz
inc
xor
sahf
push
adc
xor
movs
mov
xchg
xchg
shl
xchg
ins
outs
cmp
jecxz
inc
sub
cmps
add
jp
dec
cli
jo
daa
jns
ja
js
push
xchg
bound
push
out
in
jl
pop
mov
hlt
ror
sub
inc
sbb
cmp
dec
test
lea
and
or
(bad)
imul
xchg
movs
xor
mov
and
in
dec
movs
push
jg
jge
sub
sbb
pop
pop
push
stos
push
mov
mov
addr16
movs
repnz
pop
xchg
fdivr
mov
mov
jmp
pop
add
pop
repnz
leave
push
sti
fisub
int
add
daa
mov
mov
push
push
xor
dec
jp
iret
add
jno
daa
aas
outs
jecxz
ins
retf
js
xor
lock
mov
inc
popa
inc
pop
jo
adc
dec
dec
cld
aas
and
jg
outs
sub
dec
mov
mov
jg
push
scas
add
outs
in
arpl
push
imul
scas
pop
dec
add
enter
fidivr
pop
inc
test
pop
in
mov
test
data16
push
push
movs
add
inc
aad
leave
xor
movs
jae
xchg
dec
popa
mov
jl
test
push
add
ss
push
icebp
cmps
or
arpl
push
jecxz
xchg
mov
inc
inc
mov
adc
mov
sub
je
stos
fdivr
outs
ja
xchg
mov
xchg
cmp
cmp
lods
paddsw
(bad)
pop
cdq
pushf
popf
sub
jnp
mov
sub
xchg
xchg
dec
test
(bad)
add
aas
das
lock
xchg
dec
outs
in
ror
xchg
push
inc
fild
xlat
shl
sub
fs
push
out
lods
int
mov
loope
push
inc
movs
jmp
xchg
push
mov
jg
in
scas
jg
fisttp
dec
mov
or
jg
jge
jbe
(bad)
pop
xchg
adc
cmc
lods
sub
repnz
int
mov
lds
loopne
sbb
cmc
jmp
push
mov
dec
jno
jecxz
retf
outs
outs
imul
sti
cmp
(bad)
leave
adc
fs
pop
xor
clc
dec
mov
jg
das
das
dec
lock
xor
inc
dec
mov
dec
adc
mov
cmps
dec
xchg
xor
movs
enter
xor
xchg
test
mov
mov
test
mov
int3
lds
shl
mov
adc
movs
imul
icebp
stos
pop
add
in
test
sahf
es
call
stos
xchg
pop
loop
aad
pop
push
lea
cmp
inc
pop
dec
mov
push
repz
or
sub
push
sub
adc
pop
shl
sbb
in
(bad)
and
stos
jne
test
and
push
push
loope
rol
xor
cmp
adc
xor
(bad)
cwde
loopne
shl
mov
cmps
sahf
xchg
test
or
fistp
mov
pop
jnp
fsubr
cs
mov
jmp
mov
call
push
ins
dec
test
mov
repnz
sti
push
arpl
(bad)
sbb
rol
imul
std
cmp
cmp
outs
cmc
test
xchg
mov
inc
sub
cld
push
push
(bad)
scas
cmc
jle
fwait
stos
jbe
inc
sar
call
mov
in
jecxz
pop
hlt
(bad)
rcr
dec
ds
mov
(bad)
and
xor
mov
add
test
and
adc
hlt
(bad)
shl
(bad)
mov
mov
int3
(bad)
and
push
pusha
or
les
stos
fimul
jge
mov
and
jmp
cmps
sbb
push
and
dec
(bad)
(bad)
or
sbb
dec
sar
loope
jae
sub
and
pop
scas
inc
push
jp
jb
pop
fcmovne
sbb
(bad)
(bad)
hlt
mov
pop
mov
fdivr
movs
add
imul
rol
lea
push
xor
add
add
test
rcr
fidivr
dec
inc
es
mov
lock
inc
test
cwde
or
bound
data16
mov
lods
fwait
icebp
popa
hlt
imul
pop
lds
retf
and
scas
jbe
cmp
pop
neg
dec
outs
sbb
jo
cmp
outs
push
cmp
rcl
xchg
xchg
dec
jmp
inc
jmp
jnp
jnp
fwait
fwait
call
mov
xchg
or
sub
cmp
push
addr16
iret
or
mov
mov
test
push
adc
sbb
pop
sbb
and
xor
test
xchg
mov
(bad)
mov
or
xchg
movs
call
jmp
xchg
cwde
xchg
add
es
mov
mov
jmp
repnz
data16
pop
mov
ror
jo
jmp
mov
adc
push
xchg
sbb
inc
sbb
ret
pop
mov
and
cmp
adc
jle
sbb
mov
sar
inc
call
stos
or
mov
jb
in
push
imul
mov
(bad)
movs
pop
sub
pop
xlat
mov
stos
jp
fmul
dec
aam
inc
sbb
push
js
aad
and
mov
or
adc
mov
pop
jle
ret
repz
push
xchg
outs
xor
int
push
rcl
loopne
inc
(bad)
cmp
xor
sub
adc
cmp
push
imul
sbb
add
push
jmp
push
(bad)
push
inc
sub
aam
enter
pop
fst
leave
movs
push
jne
std
(bad)
mov
(bad)
aad
ja
mov
adc
loopne
lds
stc
ds
daa
mov
sbb
test
adc
pushf
jp
stc
je
mov
fcom
(bad)
lock
aam
and
sbb
leave
and
fs
adc
mov
(bad)
gs
enter
rcl
adc
sbb
cmp
cli
inc
xchg
push
xchg
sub
mov
in
repz
jle
adc
cdq
cmp
sbb
fisttp
mov
xchg
push
push
addr16
mov
pop
repz
jge
test
inc
retf
arpl
outs
sbb
aas
retf
movs
pop
sub
fcom
adc
hlt
pop
adc
clc
jg
sti
jp
cmps
stc
pop
xlat
cmp
xlat
mov
leave
sbb
clc
cli
movs
xchg
arpl
jmp
dec
push
je
xor
pop
jnp
ja
inc
(bad)
icebp
(bad)
loopne
push
inc
mov
sahf
cmp
repnz
mov
mov
push
mov
cli
stc
hlt
xchg
lahf
aaa
neg
jb
push
in
popf
mov
inc
xchg
push
push
xchg
xor
adc
mov
inc
enter
xchg
and
aas
and
iret
fisttp
xchg
call
jp
jg
movs
dec
mov
mov
cmps
push
push
pop
push
or
xor
in
mov
out
sahf
fcmovnu
outs
stos
xchg
fnstsw
cld
aas
or
and
sbb
mov
aaa
push
fisub
push
iret
lods
ss
fwait
imul
push
push
xchg
out
xor
shl
mov
fst
cmp
xchg
repz
pop
retf
aas
repz
or
push
(bad)
jmp
push
and
cmc
cmp
dec
mov
lods
cmc
push
pusha
ins
cli
(bad)
(bad)
pop
mov
sbb
inc
lahf
mov
jo
in
hlt
imul
aad
mov
cmp
push
rol
imul
jo
cmp
ja
jns
mov
and
rcl
outs
lods
xchg
cmp
lods
cmp
and
xor
aas
lods
out
pusha
mov
mov
int
lods
or
or
or
lds
dec
ja
outs
mov
mov
mov
jbe
iret
jno
cmps
pop
and
xor
rol
mov
mov
(bad)
shl
jo
jns
xchg
fwait
jo
fst
dec
lea
adc
sub
call
pop
cs
arpl
mov
ror
xor
sub
pushf
mov
jecxz
xor
sahf
shl
jb
mov
dec
or
sub
js
mov
js
cmp
stc
hlt
pop
mov
cmp
call
cwde
not
sbb
ret
mov
xor
cmc
arpl
push
add
pop
js
clc
fs
sub
cmps
movzx
sbb
in
sub
adc
add
mov
add
dec
cdq
mov
xchg
int
or
push
pop
dec
dec
push
in
sbb
sub
rol
clc
not
dec
pop
lea
add
adc
push
scas
xor
movs
div
rol
movs
cmp
(bad)
push
jle
in
hlt
sub
loop
sub
int
push
(bad)
pop
mov
dec
in
adc
lea
stos
adc
mov
dec
mov
adc
xchg
jl
jg
adc
add
sbb
xchg
in
das
mov
jge
sbb
jmp
cdq
inc
and
dec
sub
and
push
and
out
pop
xchg
adc
cmp
dec
mov
(bad)
xlat
enter
xor
sbb
jmp
sub
or
jmp
pop
xchg
out
mov
mov
rcr
(bad)
xchg
and
jns
mov
bswap
in
xchg
stos
xchg
sub
es
and
and
add
push
add
inc
(bad)
or
ins
std
push
nop
cmp
sar
nop
or
jecxz
adc
outs
jbe
mov
xor
add
cdq
jmp
fcmovu
xor
popa
dec
lahf
dec
jae
mov
sub
adc
and
jbe
sbb
jg
fwait
iret
sub
test
inc
cmps
jmp
jp
hlt
loope
movs
jecxz
push
or
xor
lods
push
xlat
pop
in
(bad)
cs
addr16
(bad)
xlat
xchg
adc
imul
dec
stos
out
mov
test
lea
outs
fucomip
cmp
pop
(bad)
sar
dec
lahf
xchg
and
push
sbb
jmp
lea
jno
pop
cmc
addr16
rcl
fisubr
fnstsw
mov
movs
mov
mov
sbb
gs
add
loopne
jb
sahf
ds
nop
mov
pop
scas
or
inc
fldl2t
inc
dec
inc
dec
mov
jge
inc
inc
sub
add
fcmove
add
dec
cld
sbb
icebp
in
cmp
adc
jg
jmp
ins
pusha
popa
xchg
xchg
repnz
pop
sahf
ret
fcom
nop
out
rol
xchg
movs
cdq
cmps
pop
sar
xchg
jg
dec
push
lea
retf
jb
enter
push
fcmovb
ins
cs
cmp
xchg
dec
aas
nop
add
pop
std
popf
sbb
mov
imul
add
push
add
pushf
jge
cmp
pop
push
test
(bad)
in
jno
stc
mov
or
xor
xor
sub
and
lock
mov
cmp
push
sbb
repz
call
icebp
jmp
xor
js
shl
std
mov
push
scas
ja
xor
enter
sub
inc
mov
push
xchg
dec
lods
sub
fisubr
xlat
fsub
imul
pop
ret
div
mov
push
mov
loope
test
in
nop
xor
sub
push
xor
and
aam
jmp
movs
or
and
mov
inc
out
hlt
mov
cmp
mov
jmp
sbb
lahf
retf
cmp
dec
neg
das
cmps
inc
pop
pop
mov
sbb
js
lahf
dec
addr16
fwait
leave
(bad)
ret
adc
rol
jg
fldcw
fisubr
aad
mov
dec
add
aas
xchg
bswap
mov
les
dec
(bad)
fiadd
xlat
and
add
in
nop
idiv
out
push
stc
push
mov
fmul
repnz
sub
add
or
cmp
call
dec
push
sub
inc
dec
and
mov
or
xchg
ins
dec
cmp
pop
dec
sub
jo
cmp
jecxz
icebp
scas
pop
out
imul
aad
repnz
inc
inc
xchg
jp
push
lods
xor
lds
dec
jecxz
popf
or
sub
mov
inc
adc
outs
sub
cld
in
lods
or
and
(bad)
add
(bad)
neg
test
test
repz
stos
js
push
push
and
clc
add
call
push
call
push
cmps
inc
add
dec
ficomp
in
les
test
(bad)
popf
(bad)
fld
cld
sbb
mov
adc
jbe
adc
es
dec
cmp
cdq
dec
mov
out
pop
mov
dec
lds
stc
arpl
out
push
call
push
scas
push
in
jo
jns
jbe
jb
mov
or
mov
inc
imul
in
and
rol
xchg
cmp
aad
aaa
cld
test
int
stos
mov
xor
or
sub
das
popa
and
out
or
xchg
inc
mov
mov
sbb
mov
mov
mov
icebp
jns
jecxz
jne
mov
scas
fdivp
jnp
mov
push
jae
push
add
movs
sub
aam
jmp
std
jg
in
lock
dec
imul
dec
neg
push
mov
mov
rol
add
jmp
nop
push
cmps
push
pop
in
imul
jo
pusha
xor
mov
cmp
call
popf
or
lods
lea
rep
add
pushf
stc
loop
push
jge
cmps
ret
retf
sub
mov
sub
dec
call
call
dec
or
push
inc
inc
stc
adc
pop
and
div
cmps
imul
ss
push
jns
add
xchg
(bad)
mov
fstp
leave
shl
test
xlat
adc
sbb
mov
inc
xchg
push
adc
mov
sbb
sub
jmp
fcomp
push
xchg
add
out
push
stos
or
sbb
icebp
cmps
retf
mov
sbb
nop
push
ins
jl
ror
xchg
shr
pop
push
clc
int
sub
cwde
or
push
push
dec
rcl
xor
shl
mov
sti
into
pop
rol
xchg
fadd
sub
adc
dec
xchg
jp
(bad)
sub
fadd
pop
dec
inc
adc
inc
jp
push
ror
inc
sub
push
pop
aam
push
jl
xchg
lahf
pop
jecxz
push
push
les
jno
jb
xchg
xor
pop
sub
or
ins
outs
pop
mov
push
inc
push
xchg
xchg
in
hlt
and
push
bound
shl
cwde
and
cmp
int
lea
(bad)
sbb
call
mov
in
jmp
test
or
xchg
xchg
jmp
mov
push
mov
push
lahf
dec
pop
or
push
jecxz
pushw
mov
cmps
aas
xchg
rol
jne
popf
push
pop
cld
ds
cmc
cmps
aad
test
imul
jecxz
sub
jne
sar
mov
stos
adc
imul
iret
cmps
inc
ficomp
dec
lds
ins
movs
sbb
mov
lods
imul
mov
push
mov
lock
loope
or
int
aad
daa
cli
lahf
cmc
xchg
dec
bound
adc
push
xchg
out
test
fidivr
inc
rol
movs
push
lods
mov
dec
(bad)
lahf
fld
cmc
mov
pushf
inc
fidiv
cmp
add
mov
jle
pop
jge
push
mov
lahf
xchg
rcl
(bad)
and
gs
and
push
(bad)
lahf
dec
adc
scas
sub
sub
sbb
aam
jle
fstp
push
pop
jo
test
xchg
mov
push
pop
hlt
test
ror
jnp
jecxz
fidiv
pop
div
fisub
daa
icebp
add
push
push
and
mov
mov
inc
dec
inc
mov
adc
nop
adc
je
push
cld
mov
jl
push
push
push
aam
jb
push
push
std
rol
cmp
inc
mov
(bad)
pop
push
outs
in
cmp
mov
mov
out
or
dec
addr16
xor
fidivr
cmp
rcl
aas
mov
xor
push
lahf
adc
xchg
or
or
icebp
popf
mov
mov
xchg
popa
or
neg
sbb
xor
sbb
xchg
enter
jge
cs
xor
jno
dec
shr
(bad)
retf
add
pushf
jns
fdivrp
add
in
ja
mov
mov
nop
dec
xchg
xchg
rcr
inc
and
pushf
sub
pushf
jns
lahf
retf
outs
mov
jns
mov
sbb
test
ror
shl
add
(bad)
ret
xor
xchg
aas
out
rol
jnp
int3
push
sub
loope
mov
jp
push
xchg
fidiv
inc
out
test
(bad)
cmp
push
sbb
pop
inc
push
push
push
jns
popa
loope
pusha
adc
movs
xchg
iret
mov
jno
jp
(bad)
xchg
in
add
mov
inc
repz
aad
sahf
out
sar
arpl
mov
pusha
add
adc
jp
xor
out
test
cmp
jecxz
xchg
out
ror
and
sub
cmps
sub
xlat
mov
push
xchg
inc
dec
adc
push
lar
aam
add
popf
dec
xchg
cmp
mov
xchg
jmp
xor
mov
or
mov
ins
movs
jl
jbe
push
dec
jb
scas
retf
test
ds
add
push
mov
jge
out
data16
fdivr
repz
jg
js
pop
gs
imul
repz
mov
cmp
cdq
jbe
scas
and
std
pop
icebp
jge
gs
pop
inc
sub
xchg
scas
aas
lods
rcr
enter
dec
xchg
or
xchg
adc
xor
aas
xchg
push
mov
stos
pop
out
xchg
push
xor
lahf
div
(bad)
out
in
(bad)
push
lds
aam
xchg
sbb
push
inc
mov
push
nop
sub
outs
in
sbb
xor
repz
scas
bnd
sti
dec
jecxz
addr16
or
mov
or
jno
jmp
cmps
inc
pop
pushf
fcomp
in
enter
sub
mov
sub
stos
daa
and
cmp
inc
sbb
inc
pop
xchg
ins
jnp
daa
sub
jnp
retf
dec
sbb
outs
xchg
scas
stc
pop
retf
and
movs
gs
ror
sub
call
outs
mov
addr16
ficomp
sub
jmp
ror
push
test
xor
and
adc
mov
sbb
ret
in
out
jmp
jno
les
push
add
popf
dec
dec
dec
js
cmp
out
(bad)
jmp
std
scas
xchg
or
stos
sub
dec
xchg
imul
mov
test
faddp
fstp
data16
sbb
movs
loopne
jge
out
add
stos
arpl
(bad)
cmps
(bad)
out
inc
push
loop
(bad)
jae
(bad)
cmp
in
repnz
pop
arpl
add
jno
add
shr
fisubr
xor
jo
and
addr16
stos
jecxz
outs
idiv
cmps
mov
out
imul
leave
int3
ret
inc
push
xchg
imul
(bad)
mov
stc
dec
addr16
mov
mov
mov
pop
adc
fs
mov
out
inc
in
pop
mov
in
sbb
ins
sbb
outs
add
popf
inc
test
call
cmp
push
popa
je
lock
mov
stos
test
loopne
mov
ret
dec
aad
mov
push
dec
jns
pushf
(bad)
fmul
dec
cmp
inc
and
ret
xchg
push
leave
mov
cmp
out
loopne
int3
inc
jmp
xlat
dec
add
xchg
stos
adc
mov
add
mov
scas
xor
movs
retf
retf
add
cmp
and
out
cmc
mov
mov
inc
ret
mov
inc
fcmovnbe
add
xchg
das
cmp
aaa
xor
xlat
push
fisttp
mov
mov
ret
mov
xchg
ins
xchg
push
lea
and
enter
sbb
xchg
lahf
jno
mov
out
imul
inc
push
retf
lods
(bad)
fcomi
jmp
push
lock
shr
mov
cmps
mov
div
std
xlat
xchg
dec
and
into
mov
push
retf
xor
xor
lds
ficomp
hlt
xlat
clc
jge
iret
xor
mov
xlat
xchg
mov
arpl
and
out
adc
dec
dec
jp
lock
(bad)
dec
dec
mov
adc
shr
nop
jmp
mov
cwde
mov
xchg
jae
pop
jae
jns
rcl
fadd
mov
fs
mov
inc
fld
pop
mov
mov
push
sub
inc
push
inc
pop
sub
shl
adc
cmp
mov
or
les
mov
inc
fimul
cld
adc
pop
int
push
repz
inc
inc
mov
mov
xchg
cmp
stc
cli
loop
jae
mov
aam
add
jne
mov
cmp
int3
mov
dec
ds
mov
mov
aas
mov
add
fwait
pop
sti
leave
loope
stc
jbe
movs
xchg
inc
shl
(bad)
inc
adc
(bad)
mov
pop
cmp
outs
sbb
push
push
leave
sub
or
mov
push
loop
sub
and
push
mov
push
push
xchg
inc
test
push
in
cmp
stos
xchg
test
iret
push
jb
mov
out
(bad)
jg
inc
ja
xchg
sub
call
scas
xchg
pop
cmp
rcr
shr
fild
sbb
call
xor
push
sub
(bad)
mov
mov
mov
mov
and
call
and
int3
in
out
data16
repnz
dec
sub
addr16
push
add
cmp
push
jg
jo
sub
addr16
cmps
push
sbb
xor
or
mov
mov
add
sti
fisub
xor
shl
arpl
dec
nop
add
xor
cmp
ins
outs
leave
mov
das
es
ja
xor
jp
aam
test
add
add
mov
and
pop
inc
dec
push
push
stos
cmps
sbb
jne
xchg
jp
jae
sbb
dec
xor
push
adc
sub
or
sti
ja
movs
sbb
mov
int3
lods
pop
pop
add
bound
test
repnz
and
ins
mov
mov
out
sub
fisubr
or
mov
add
mov
in
ins
movs
outs
in
xor
dec
scas
mov
jg
test
xchg
es
ret
fmul
shl
push
punpckldq
sbb
fisubr
cs
pop
sub
lahf
pop
cli
sti
ret
scas
cmp
nop
cld
(bad)
mov
in
sbb
pop
repz
test
enter
inc
mov
test
add
(bad)
pop
lahf
pushf
cmps
fnstsw
int3
pop
push
jecxz
int
jns
sti
cdq
jb
push
or
push
pop
xchg
inc
in
sbb
xchg
(bad)
ins
mov
icebp
adc
mov
arpl
(bad)
imul
jns
fcmovne
xchg
mov
mov
jnp
mov
push
mov
mov
xchg
ror
mov
int
xor
jnp
lods
fwait
movs
scas
push
jmp
nop
data16
fs
dec
xchg
sbb
in
fisttp
in
xchg
jmp
or
push
add
push
scas
adc
add
jmp
out
sahf
push
test
cmc
movs
mov
cmps
and
test
push
and
or
outs
cmp
inc
adc
jns
sub
push
xlat
pop
lea
lock
(bad)
cmp
loop
sti
pop
mov
pop
mov
pop
mov
pop
movs
or
aam
or
in
inc
push
mov
fbstp
ins
cmp
stos
enter
and
sbb
or
sbb
xchg
and
jmp
cmp
gs
push
in
pop
dec
idiv
ror
outs
(bad)
and
xor
cmp
adc
int
inc
mov
js
bound
mov
jns
cmp
or
daa
dec
or
jmp
cmp
loope
gs
repz
test
ss
int
movs
xchg
ret
js
mov
(bad)
mov
xchg
add
arpl
pusha
push
popf
mov
imul
rcl
int
jns
sbb
sti
mov
dec
jno
sbb
das
outs
lock
pop
add
pusha
cmp
test
cmps
jmp
movs
sahf
sbb
fucomp
enter
or
icebp
(bad)
sbb
or
ror
lea
int3
dec
push
mov
jae
scas
fnstenv
adc
inc
sbb
sub
or
xchg
pop
call
xchg
pop
fsub
sbb
ror
xor
sbb
add
daa
and
imul
sub
pop
mov
jne
and
mov
fld
mov
xchg
mov
xor
jns
mov
jnp
das
cmp
stos
add
mov
push
mov
mov
mov
stos
gs
dec
test
bound
daa
push
shl
js
mov
fcomp
out
leave
cmp
mov
add
mov
out
pop
xor
sub
test
repnz
repnz
mov
mov
push
sahf
xchg
(bad)
cpuid
sbb
and
lods
jb
pusha
pop
call
neg
mov
rcr
sbb
sub
cmc
(bad)
mov
out
shr
and
sahf
fistp
inc
push
mov
xor
movs
pusha
sbb
lea
aaa
ret
jmp
cmp
pusha
mov
movs
stos
les
push
xlat
dec
mov
and
sbb
ds
fsubr
xchg
push
retf
sub
or
(bad)
cmps
pop
pop
repz
retf
mov
or
call
push
call
mov
mov
push
xor
fist
push
sti
sbb
sub
pop
ret
add
sub
cmp
jb
arpl
dec
cs
test
or
inc
mov
repz
stos
pop
ror
or
cmp
pop
pop
and
cmp
cmp
stc
shl
imul
repnz
and
ret
pop
test
push
xor
ficomp
add
mov
jl
std
arpl
retf
add
adc
inc
(bad)
call
pushf
sbb
fldcw
push
mov
dec
inc
inc
push
scas
mov
lea
or
fidivr
push
and
mov
cmp
test
cld
fwait
xchg
add
out
fsubp
pop
mov
imul
(bad)
cdq
mov
mov
fwait
std
mov
jnp
loop
add
ret
ds
xor
test
icebp
jmp
xchg
adc
xchg
jns
and
dec
sub
loope
add
and
lods
mov
mov
mov
and
leave
push
xchg
xor
cld
pop
and
mov
or
aas
fstp
data16
(bad)
lahf
adc
jae
arpl
jl
cmc
push
je
sub
sbb
mov
int3
inc
call
test
or
vmaskmovdqu
shl
out
cld
lods
jae
fdiv
stos
loopne
xchg
daa
iret
out
dec
sti
dec
out
(bad)
out
mov
or
inc
imul
ins
and
sub
mov
cmps
push
mov
test
cmp
or
mov
in
cmps
or
pop
iret
mov
cmp
jb
or
pushf
rcr
and
es
mov
xchg
enter
push
dec
push
fidiv
cs
mov
fsubp
sbb
xchg
inc
push
push
dec
xlat
scas
pop
jnp
mov
xchg
sti
sbb
sub
mov
aam
pop
mov
jmp
dec
xor
(bad)
aad
push
ficom
popa
jg
retf
add
dec
loop
inc
arpl
adc
jmp
std
popf
cmp
xor
div
imul
mov
loopne
push
inc
or
loop
loopne
test
fstp
fst
jg
aad
adc
add
das
pop
lahf
sub
nop
mov
add
div
std
cmp
stc
hlt
xor
ins
out
pop
cmp
div
jmp
and
daa
std
loopne
mov
inc
jo
cmp
push
fchs
nop
imul
xchg
icebp
aad
adc
mov
aad
ret
add
movlps
mov
add
out
popa
ins
loop
sbb
jno
aas
div
movs
jl
dec
iret
pop
or
ja
aas
ss
out
mov
mov
adc
test
(bad)
push
jecxz
xchg
cmp
retf
retf
inc
mov
(bad)
call
sbb
push
xor
xor
jns
cs
dec
mov
lea
test
out
iret
jbe
pop
out
fild
pop
adc
shl
stos
call
mov
mov
loop
jbe
and
movs
xchg
and
sub
push
jmp
lea
mov
mul
xor
inc
sub
aam
or
lahf
test
fs
mov
xchg
mov
psllq
pop
jecxz
lods
addr16
cmp
ins
mov
inc
add
lods
sub
test
test
mov
bound
sbb
adc
jge
jecxz
cmp
pop
jge
out
jle
mov
ins
jle
ins
push
hlt
pop
adc
cmp
(bad)
jl
jg
sbb
mov
fcmovnb
repnz
mov
pop
(bad)
xchg
inc
push
cmps
jp
mov
cmp
push
mov
and
ror
jmp
mov
movs
add
and
jg
out
jl
mov
rcr
jmp
mov
jecxz
inc
fidiv
stc
adc
push
jnp
push
fwait
mov
dec
xchg
pop
mov
cmc
out
push
movs
inc
xor
jmp
push
dec
dec
sub
inc
fst
pop
push
pop
out
(bad)
dec
push
inc
xchg
mov
(bad)
mov
dec
xchg
jge
jo
push
mov
cmc
mov
sub
imul
test
hlt
sbb
sub
mov
cdq
mov
push
pop
pop
push
cmp
shl
aad
and
add
add
iret
xor
push
shl
mov
in
loope
inc
imul
xchg
(bad)
loop
mov
and
cmc
xchg
in
scas
cmp
cmp
ins
in
and
scas
push
push
fild
popa
adc
aam
add
dec
or
fs
inc
adc
inc
or
retf
push
xchg
push
rcl
push
popa
xor
add
sub
push
(bad)
icebp
neg
adc
mov
sbb
div
adc
aaa
enter
and
push
pusha
push
add
movs
cmp
(bad)
push
daa
mov
inc
sbb
push
in
inc
xor
or
mov
cli
fcomp
in
in
data16
and
mov
xchg
cmp
mov
test
out
popa
cmp
popf
pop
enter
xor
imul
jle
movntq
out
in
int3
jbe
xor
inc
fiadd
cmp
jmp
arpl
xchg
test
shl
shl
pmullw
(bad)
aam
and
dec
xor
sub
xchg
ss
xchg
ror
inc
jp
hlt
pop
into
scas
sti
aas
mov
sub
push
cmp
add
jnp
mov
aaa
out
arpl
sbb
mov
aas
icebp
pop
dec
xchg
push
and
loopne
inc
mov
addr16
lahf
in
xor
stc
rcr
push
push
scas
scas
pop
inc
(bad)
sbb
and
sbb
cmp
cmp
mov
cmp
and
icebp
out
aas
cmp
arpl
adc
adc
mov
je
cli
outs
out
sub
rcl
inc
xor
adc
sbb
xchg
jmp
mov
and
pushf
push
ja
inc
sub
sub
add
dec
cli
leave
arpl
call
sbb
cmc
sbb
scas
(bad)
push
cld
movs
inc
das
mov
mov
into
loope
in
movs
gs
out
fmul
outs
in
idiv
popa
and
adc
adc
mov
scas
cmp
shr
lods
sub
cld
mov
psubb
shl
imul
and
mov
test
mov
sbb
adc
cmp
shr
or
mov
cmc
xchg
pop
xor
lahf
mov
mov
or
sbb
lods
lds
icebp
push
cmp
sahf
lods
frstor
inc
dec
and
addr16
pop
aam
jno
das
sbb
pushf
jb
sub
ja
fs
out
pop
hlt
call
lods
pop
xlat
cld
std
add
std
into
fcmovb
jmp
in
add
add
sub
mov
jge
data16
pop
sub
mov
and
or
sahf
dec
mov
sub
aas
mov
fisttp
in
sti
ins
(bad)
add
inc
adc
test
xor
lods
scas
push
pop
inc
add
inc
push
je
xchg
pop
ds
repz
xchg
push
movs
mov
popa
cmp
dec
pop
and
test
fs
push
jbe
push
sub
retf
mov
lock
cwde
add
cwde
ficomp
shl
jo
(bad)
jg
sbb
test
movs
jp
fiadd
or
pop
retf
push
iret
sbb
cld
sub
test
pop
(bad)
xor
pop
scas
add
push
xlat
push
mov
and
data16
mov
cmps
repz
sub
or
sbb
and
aad
jmp
loope
push
jne
pop
dec
ss
cmp
retf
out
scas
lods
es
out
sbb
ds
or
es
dec
cwde
ret
test
sbb
dec
dec
pop
in
mov
(bad)
jmp
dec
dec
call
int3
inc
mov
xor
xor
mov
mov
test
xchg
or
lods
imul
xor
sbb
call
cwde
jae
(bad)
xchg
mov
test
push
int
pop
dec
xchg
xor
dec
xchg
sbb
push
sub
ds
pushf
or
loope
push
or
pop
les
call
jno
mov
icebp
jmp
xchg
jo
xchg
add
xor
sar
xchg
xchg
xor
jmp
les
fs
out
sar
ins
cmc
(bad)
cmps
cmp
pop
mov
sub
test
stos
or
jo
jno
xor
adc
jmp
mov
test
cmp
(bad)
and
enter
ret
test
rcl
enter
ret
pop
mov
jmp
cmp
mov
push
popa
inc
and
cmps
in
jp
xchg
dec
addr16
cmp
mov
sbb
xchg
cdq
lea
sub
dec
mov
dec
ret
or
mov
dec
and
repz
jle
scas
mov
test
xlat
aas
jmp
sub
cmps
movs
pop
mov
stos
pop
les
fs
dec
movs
adc
and
or
push
cmp
into
imul
sbb
enter
inc
(bad)
hlt
dec
jge
and
retf
ins
mov
jmp
hlt
loope
jns
scas
xchg
inc
out
lahf
pop
and
and
sbb
adc
in
jle
cwde
pop
(bad)
xor
dec
test
adc
xchg
ds
dec
in
mov
xlat
leave
sub
test
shl
repz
mov
cmp
imul
fs
std
lds
mov
fisttp
aaa
xchg
xor
lock
call
mov
aas
xchg
stc
hlt
retf
push
inc
push
mov
movs
mov
dec
pop
out
stc
add
pop
xor
mov
cmc
(bad)
int
sbb
scas
mov
mov
inc
push
fld
pop
mov
dec
push
loop
(bad)
jl
lahf
dec
adc
scas
es
cmps
mov
cld
loope
retf
(bad)
in
jl
inc
xlat
mov
add
lds
(bad)
pop
in
scas
add
hlt
xor
pop
sbb
dec
out
dec
sub
and
inc
adc
(bad)
adc
xchg
inc
dec
data16
push
movs
xor
int3
xchg
loop
je
push
inc
enter
nop
pop
cli
pop
(bad)
ins
jbe
nop
fmul
mov
stos
mov
cmp
dec
or
mov
push
leave
sbb
and
push
or
adc
es
mov
call
xchg
sbb
call
not
jne
fwait
ror
cmp
jg
mov
mov
push
mov
xchg
js
test
sub
and
jo
js
mov
clc
mov
enter
mov
popf
int3
pop
je
mov
mov
or
fisub
or
or
fidivr
jmp
test
cmps
mov
aad
stos
test
cs
es
dec
rcr
xor
int3
add
push
ret
icebp
adc
inc
push
(bad)
adc
jae
xor
movs
gs
jmp
push
mov
xor
cmp
jae
aaa
pop
jne
shl
mov
enter
test
jl
sbb
test
sub
push
test
repnz
arpl
ja
mov
mov
pop
sub
inc
dec
js
cmp
push
sbb
sti
imul
adc
or
stos
test
ins
jle
sbb
sub
rcl
cmps
nop
bound
push
inc
les
add
jno
std
jnp
cld
cmp
leave
scas
dec
jb
jge
dec
jge
ins
shl
dec
sub
xor
dec
and
pop
mov
mov
push
add
sbb
pusha
add
or
mov
loop
push
idiv
add
fs
aaa
sbb
loopne
jle
jmp
inc
push
push
xor
imul
push
aas
jmp
jns
ins
loop
lea
push
mov
fdivp
imul
out
cmps
mov
std
adc
dec
scas
fs
addr16
mov
inc
mov
fstp
dec
test
dec
pop
fmul
jae
xor
mov
jno
push
jmp
imul
dec
and
push
shr
(bad)
cmps
out
jnp
xor
sti
pop
inc
lods
mov
icebp
or
cwde
jecxz
daa
test
dec
int3
jle
ss
xchg
mov
inc
movs
inc
shr
xor
repnz
into
loopne
and
or
push
stc
jl
push
stc
je
mov
fwait
push
jle
xchg
ins
adc
cmc
outs
xchg
je
mov
pop
dec
sbb
jmp
ror
cmp
inc
adc
jp
adc
sub
and
adc
iret
ss
mov
cmp
bound
dec
jecxz
cmp
inc
(bad)
(bad)
(bad)
scas
add
xchg
or
adc
pushf
cld
clc
hlt
jb
cdq
jge
rcr
cmp
out
inc
cmp
adc
xchg
leave
xchg
int
push
mov
rcl
rcl
stc
pop
sub
mov
xor
repz
mov
mov
sub
jbe
enter
push
or
ds
add
out
cwde
clc
mov
jo
push
xor
dec
dec
add
sbb
pop
jne
cmp
mov
sbb
jne
mov
aam
dec
dec
adc
xchg
pop
arpl
les
repnz
fmul
push
push
mov
inc
ret
daa
mov
cmp
and
(bad)
and
sar
inc
das
loope
jmp
shr
jmp
adc
push
inc
cli
mov
je
and
xchg
and
mov
scas
mov
ror
sub
push
and
aas
xor
lods
pusha
inc
std
add
loopne
push
pop
dec
pushf
test
mov
cmp
pop
xchg
ins
push
sub
stos
pop
pop
mov
mov
xchg
pushf
adc
inc
cld
pop
pop
mov
mov
repnz
stc
imul
ror
test
loope
jo
lds
call
sahf
inc
popf
xchg
mov
js
push
mov
cs
arpl
or
movs
popa
movs
out
outs
movs
push
jge
pop
sub
mov
pop
sbb
cmps
retf
pop
xor
loopne
out
jno
xchg
pop
add
jp
hlt
jmp
mov
sub
ins
mov
adc
cmp
inc
test
mov
fiadd
mov
jle
mov
fnstenv
leave
lods
dec
adc
in
adc
mov
mov
jnp
pop
cdq
xchg
popf
jne
inc
arpl
mov
rol
addr16
push
imul
inc
ss
push
xchg
mov
ja
shl
jle
daa
mov
push
iret
cmp
sub
xor
jmp
popf
js
jg
popa
or
sub
mov
adc
xchg
retf
cmp
test
and
sbb
iret
sbb
push
rcr
movs
jno
cwde
cmc
int
repz
jmp
pop
inc
jmp
or
sbb
test
push
sub
xor
mov
dec
add
mov
pcmpgtb
sar
or
sub
push
std
(bad)
ds
mov
sbb
push
add
in
inc
inc
scas
scas
dec
call
cmp
cmps
xchg
mov
and
(bad)
and
pop
mov
jnp
ja
sbb
jb
pop
mul
movs
js
cld
into
call
mov
push
lods
inc
cmps
add
mov
jge
adc
xchg
loope
and
ss
call
mov
dec
pushw
int3
lea
add
and
lahf
popa
sub
mov
icebp
dec
lods
(bad)
xchg
rcl
push
pop
xchg
dec
retf
mov
and
push
sub
fwait
pop
adc
ficom
or
sbb
mov
xchg
fadd
mul
cmp
in
(bad)
pop
bound
push
and
add
div
popa
jae
hlt
or
retf
out
mov
mov
mov
daa
pop
push
outs
push
dec
(bad)
lods
movs
cmps
test
push
xchg
imul
call
pop
and
jg
hlt
pushf
test
add
dec
jbe
sbb
lea
jmp
push
or
mov
or
aam
(bad)
mov
(bad)
dec
stos
pop
cs
movs
lods
or
cmp
push
inc
div
jne
fst
lahf
scas
clc
jnp
rep
push
hlt
mov
sbb
fiadd
out
dec
push
call
scas
repz
sub
jb
into
cwde
fist
pop
inc
sbb
push
add
mov
call
mov
pop
inc
pop
add
jge
sub
sub
jnp
jmp
ds
test
int3
hlt
push
mov
pop
mov
or
or
xor
and
push
cld
cli
or
xchg
mov
pop
sub
test
sbb
mov
loopne
jecxz
xchg
aam
xor
dec
sbb
mov
(bad)
bound
les
mov
cmp
js
mov
cwde
test
jle
inc
(bad)
xchg
jg
movs
adc
mov
aaa
(bad)
adc
sub
test
aaa
xchg
xor
std
push
fdivp
dec
fistp
add
mov
xchg
push
nop
dec
imul
mov
add
cmp
mov
jge
clc
jns
sub
(bad)
pop
adc
pop
dec
jmp
or
push
inc
cwde
mov
popf
loop
jl
ins
je
mov
fdivr
in
outs
in
push
lods
fs
inc
sbb
ds
(bad)
inc
fwait
std
loope
mov
mov
xchg
mov
enter
push
xor
jg
mov
add
xchg
dec
pop
test
fstp
stos
add
add
in
xchg
jo
scas
imul
mov
xor
mov
pop
push
movs
push
push
in
adc
fwait
repnz
push
pop
mov
inc
sub
add
dec
xchg
test
sbb
mul
inc
in
jge
or
pop
mov
add
pushf
hlt
rcl
cs
push
leave
aas
jmp
pop
bndldx
inc
or
jp
call
not
ss
fcmovbe
mul
sbb
adc
sub
jl
ins
xchg
cmc
sub
xchg
psllw
test
movs
icebp
adc
(bad)
mov
popa
jmp
mov
lock
or
dec
push
int3
daa
mov
or
dec
scas
sbb
std
jle
fdivr
cmps
popf
inc
and
(bad)
lods
inc
psllq
jno
ins
shl
(bad)
shl
ret
jne
aam
push
clc
mov
retf
add
mov
dec
dec
fnstcw
loope
ja
inc
or
fwait
add
ror
and
out
and
and
xor
in
mov
shl
mov
retf
stc
out
jecxz
pshufw
bound
pop
adc
test
mov
jg
loope
movs
lods
xor
mov
cmps
je
push
jmp
push
sub
inc
push
cld
cwde
inc
cmp
mov
inc
mov
int
call
add
cmp
mov
imul
nop
cmp
mov
mov
ja
inc
xchg
and
cmp
mov
pop
xchg
movs
(bad)
in
jns
in
mov
mov
scas
cld
or
addr16
bound
adc
dec
cmc
jo
or
ret
loope
sbb
mov
jo
inc
or
cmp
in
leave
(bad)
scas
dec
leave
test
and
stc
mov
mov
retf
inc
add
rcl
mov
fnstenv
push
xor
dec
aam
out
jnp
fcmovnu
dec
(bad)
fiadd
daa
dec
dec
add
push
xlat
pop
rcr
mov
jnp
scas
jp
retf
stos
jmp
in
test
call
push
sbb
inc
cli
sti
jle
push
mov
push
pop
sub
inc
loopne
adc
retf
sbb
jno
pop
sub
mov
adc
cmp
push
cmp
or
outs
test
popa
sti
add
scas
pop
test
mov
sub
(bad)
and
test
adc
shr
inc
xchg
(bad)
jecxz
cdq
arpl
sub
ins
es
test
sub
in
fbld
ja
pop
adc
adc
enter
stos
cmp
je
out
outs
neg
inc
in
mov
lods
pop
xor
rcr
or
and
jmp
inc
push
aad
push
adc
mov
cmp
or
shr
ins
and
sub
std
addr16
mov
enter
sub
adc
fwait
pop
(bad)
mov
push
fcmove
inc
push
mov
icebp
cmc
call
pop
xchg
ins
out
sub
or
xchg
xchg
scas
and
push
ror
mov
inc
sub
mov
add
mul
(bad)
mov
pop
iret
ins
je
mov
lock
xor
add
hlt
inc
jb
loope
sub
inc
add
loop
xchg
shl
in
leave
mov
adc
cwde
(bad)
push
cdq
or
mov
idiv
int
stos
leave
fcomp
mov
add
push
pusha
cmp
push
(bad)
xchg
scas
sbb
movs
pop
inc
in
dec
add
dec
xor
aam
imul
(bad)
hlt
cld
sti
sbb
add
jne
jno
sbb
int
cmps
cmp
into
mov
dec
dec
das
dec
ds
adc
in
and
sbb
sti
xchg
dec
loope
mov
push
and
inc
add
dec
aam
imul
lods
pusha
stos
mov
jle
in
cmp
xchg
cmp
jmp
sahf
xor
xor
jmp
jle
(bad)
jno
cmp
ins
xlat
in
and
adc
mov
mov
sbb
repnz
mov
data16
xchg
sti
jb
cmps
loope
sub
clc
push
or
cmp
pushf
mov
retf
xchg
inc
sbb
mov
dec
dec
mov
dec
adc
icebp
loopne
inc
sub
push
jne
sub
cmp
inc
xor
push
hlt
mov
call
cmc
(bad)
scas
jo
mov
not
ins
jmp
fs
in
dec
xchg
(bad)
cs
call
jb
es
stos
outs
fcmovnu
dec
(bad)
out
inc
ins
sub
cwde
test
xchg
js
shl
and
std
test
dec
js
xor
fidiv
(bad)
sti
jo
mov
sar
or
lds
xor
push
popf
xor
adc
data16
int3
je
inc
or
movs
fdiv
int3
(bad)
stc
xchg
nop
(bad)
pop
(bad)
in
sub
neg
imul
mov
js
xchg
mov
push
sti
test
add
add
jne
push
outs
cmc
mov
rol
lea
cld
std
add
out
fiadd
popa
add
mov
cmp
les
sbb
outs
(bad)
call
outs
cmps
xchg
cmp
stos
push
sbb
lods
push
(bad)
(bad)
jmp
sub
add
mov
push
inc
push
ss
jns
push
mov
xchg
dec
jae
pop
or
push
dec
sti
arpl
push
repz
fisttp
xor
mov
call
in
inc
inc
and
imul
call
and
fstp
mov
push
cwde
xchg
or
test
mov
shl
jbe
xchg
icebp
adc
mov
dec
or
jns
sar
je
xlat
ret
adc
mul
sahf
ins
(bad)
mov
mov
adc
mov
stos
pusha
aam
cmp
push
scas
dec
jl
ss
xchg
push
push
inc
ins
dec
sub
adc
das
std
or
je
adc
hlt
cmp
mov
mov
sahf
(bad)
ss
fist
lods
sub
popf
push
arpl
push
cmp
imul
sub
cmp
push
scas
movs
dec
jl
adc
clc
jecxz
mov
and
pop
js
mov
(bad)
xchg
and
xchg
imul
sti
jno
not
jg
mov
pop
sub
inc
mov
je
push
rol
fs
push
jp
mov
clc
jmp
xchg
cmp
push
xchg
and
xchg
push
adc
cli
jb
push
rcr
rol
cmp
lea
aas
das
cmc
jo
jg
fucomp
das
in
mov
and
in
dec
js
lea
ja
jns
mov
xlat
dec
and
jmp
cmp
xchg
sbb
loope
mov
div
mov
retf
inc
push
cmp
cmp
fldenv
mov
sub
push
mov
add
shl
mov
test
and
and
fwait
shl
xchg
ins
jmp
(bad)
xor
(bad)
sbb
(bad)
jl
outs
gs
jl
sub
mov
sbb
cmp
and
xor
shr
jnp
loope
mov
neg
mov
(bad)
dec
mov
retf
sub
push
push
gs
mov
repnz
and
and
xor
test
add
addr16
frstor
js
mov
sub
mov
pop
gs
out
jnp
ss
(bad)
mov
fstp
ins
into
rcr
inc
cmp
fstp
lods
inc
adc
dec
add
(bad)
addr16
cmp
xchg
jns
loopne
push
adc
add
sub
sub
add
sbb
ins
idiv
outs
(bad)
jmp
fucomi
imul
mov
xor
sbb
mov
pushf
jp
push
sti
nop
mov
pop
in
(bad)
out
iret
shl
pop
fist
(bad)
dec
xor
sub
cmps
ror
enter
push
pop
jle
xor
xchg
and
dec
es
adc
xchg
in
jne
pop
or
arpl
cmp
sub
(bad)
outs
retf
scas
addr16
sbb
cmp
cmp
mov
cmp
jae
iret
sub
es
and
push
push
or
mov
push
js
add
out
call
push
(bad)
push
leave
sbb
jns
pushf
inc
pop
push
movs
addr16
cli
outs
stos
cs
mov
das
fwait
int
cdq
sbb
xor
pop
je
jecxz
pop
ja
xchg
fs
jbe
aaa
xchg
aam
xchg
pop
jmp
pop
out
jmp
movs
sets
pop
mov
jnp
(bad)
in
lods
in
push
test
adc
jb
in
pop
loop
jns
cmp
xor
sbb
nop
inc
in
dec
lods
shl
sbb
(bad)
adc
add
or
jb
(bad)
mov
or
jb
dec
retf
scas
mov
and
ins
xchg
stc
and
mov
loope
and
inc
ins
dec
jge
inc
or
out
cmp
jecxz
sub
movs
pop
pop
sub
pop
inc
(bad)
(bad)
jle
ins
inc
mov
mov
jmp
dec
and
pop
pop
pop
pop
xchg
jne
ret
mov
imul
(bad)
sub
ret
or
scas
retf
and
in
outs
iret
mov
cmp
jmp
in
jne
sbb
sbb
jmp
sub
sbb
mov
lods
dec
imul
lods
cdq
xchg
(bad)
call
movs
or
adc
sbb
cmp
sub
inc
enter
loope
mov
in
jl
mov
mov
xchg
lds
jge
cmps
retf
cmps
cmp
vpmulhw
rol
repnz
lods
movs
icebp
inc
scas
(bad)
push
imul
fdiv
xlat
push
cmp
xchg
add
cmps
add
hlt
imul
loope
aad
pop
into
and
or
or
rcl
or
sahf
push
jge
sbb
xchg
shr
push
push
sub
inc
adc
or
cmp
xor
sub
xchg
nop
xor
cmp
or
push
in
inc
fs
mov
les
or
xor
adc
pop
push
dec
hlt
mov
jmp
fstp
int
xchg
adc
les
les
sti
xchg
movs
sbb
mov
jo
mov
arpl
adc
jg
add
(bad)
sbb
and
mov
fisubr
movs
adc
sbb
sbb
jnp
jge
xchg
repz
jne
xchg
xor
fs
or
sahf
add
(bad)
ficom
iret
jae
loopne
jno
rcr
lock
(bad)
mov
inc
jmp
imul
xchg
cs
mov
fnsave
fucom
(bad)
fcmovbe
int
aaa
sub
mov
adc
dec
sub
add
(bad)
test
es
xchg
jl
mov
cmp
add
adc
imul
adc
lods
shl
jmp
fcomi
cmp
repnz
or
sub
sub
scas
mov
lea
add
aam
stos
into
or
pop
pop
cs
push
(bad)
shl
pop
repz
aaa
mov
inc
inc
aam
mov
and
jmp
inc
je
dec
sub
jge
mov
fstp
and
push
dec
inc
cld
push
stos
xor
push
dec
dec
pop
jae
mov
xchg
(bad)
mov
mov
retf
test
cmps
pop
push
xchg
xchg
add
push
mov
mov
sub
outs
aaa
inc
hlt
in
mov
xchg
shl
mov
stos
or
test
xor
ss
or
mov
(bad)
and
or
mov
nop
mov
xchg
test
sbb
lds
fdivr
xlat
rcl
lods
push
fdiv
sti
cmp
std
sbb
(bad)
jecxz
sub
in
imul
stc
sbb
repz
dec
mov
dec
pop
retf
xchg
and
(bad)
cmp
xchg
jl
and
popf
nop
push
dec
js
cmc
dec
ins
cmp
add
test
fdiv
or
jp
dec
xchg
push
pop
mov
movs
mov
cs
xor
sahf
xchg
repnz
sub
jle
sahf
call
push
pop
lahf
repnz
sahf
mov
mov
sti
mov
push
rol
hlt
mov
adc
push
mov
fist
jge
cmps
(bad)
imul
dec
scas
test
call
daa
push
add
stos
add
add
rcl
pop
ret
mov
push
mov
mov
(bad)
stc
pop
mov
mov
sbb
mov
inc
nop
cdq
aas
push
jle
sbb
inc
retf
sbb
inc
retf
(bad)
imul
or
mov
dec
scas
jne
push
add
mov
dec
leave
mov
sbb
arpl
fnstenv
dec
test
bound
jo
test
lods
jmp
mov
pop
jecxz
leave
mov
ss
cmp
in
xchg
lods
dec
push
push
add
push
stos
add
pop
cmp
jae
sub
or
inc
mov
push
push
add
test
jecxz
pop
das
int3
div
lea
push
ja
push
xor
(bad)
jmp
(bad)
int
(bad)
mov
cmc
inc
push
cmp
sbb
mov
popf
mov
int3
jb
and
xlat
daa
es
jmp
dec
cmp
push
fs
aaa
mov
inc
mov
dec
xlat
fild
call
(bad)
sbb
pop
push
inc
pop
daa
adc
inc
sti
cmp
xchg
push
ins
jns
xchg
ret
stos
push
push
ss
jne
dec
fld
(bad)
mov
push
sub
test
dec
in
call
not
sti
jae
and
movs
add
xor
jno
jno
xchg
mov
xchg
mov
push
sub
sub
xchg
mov
scas
scas
cs
pop
or
test
xchg
jne
cdq
lods
or
xchg
cs
dec
pusha
mov
shl
out
push
imul
scas
dec
sub
sahf
inc
jbe
movs
cmp
cli
jp
cli
mov
cmps
sub
(bad)
fcmovnbe
xchg
xchg
inc
dec
mov
in
aad
lods
jae
xor
lods
pop
push
scas
cmps
add
sub
in
scas
sar
inc
jnp
int3
pop
fwait
jmp
pop
sahf
ds
hlt
(bad)
xchg
add
xchg
sub
js
xchg
into
add
mov
leave
aam
sbb
dec
(bad)
lahf
shr
in
adc
adc
leave
lods
lock
imul
cld
sbb
xchg
mov
arpl
es
lods
lods
xor
cmp
int
je
rcr
or
jmp
in
and
aas
dec
inc
and
shr
sbb
popa
leave
aas
inc
iret
out
mov
xchg
and
call
mov
mov
les
xor
add
daa
or
xchg
leave
mov
(bad)
retf
inc
cmp
lds
push
dec
and
out
arpl
jecxz
push
inc
sub
repz
das
pop
fstp
outs
out
stc
shr
out
call
repz
jo
dec
out
cwde
jmp
(bad)
ficomp
mov
and
movs
call
movs
xchg
mov
pop
leave
sub
xchg
sub
mov
mov
rdtsc
inc
cld
and
push
repnz
inc
push
mov
xchg
cmp
pop
sub
call
or
sub
rcr
fild
xlat
push
aad
sub
and
retf
sbb
repnz
call
fcomp
xchg
sti
sti
xlat
icebp
and
push
push
aam
xchg
ins
mov
test
(bad)
loope
ja
push
and
sbb
cwde
pop
pusha
pop
mov
test
test
pop
mov
jecxz
imul
pop
enter
aas
xor
call
jo
das
mov
pop
fsubr
(bad)
and
and
pop
(bad)
xlat
push
xchg
mov
xor
cmps
pop
xor
(bad)
mov
call
cmps
push
inc
shr
add
es
or
pop
xor
(bad)
cmp
test
jo
imul
inc
movs
or
dec
and
jns
call
(bad)
hlt
pop
mov
mov
cmps
aas
aad
jp
arpl
mov
add
lahf
push
push
aas
push
in
aas
jne
cmp
fdiv
pop
cwde
add
test
xor
push
mov
dec
mov
fcom
rcl
push
imul
adc
cmp
xor
mov
sti
mov
ret
jbe
adc
aam
cmp
push
jne
xchg
fcom
adc
push
sub
xor
sar
push
sahf
sbb
mov
xchg
aad
fs
and
inc
sahf
stc
sub
pop
test
lea
adc
fld
ds
jns
xchg
outs
ja
pop
imul
shl
push
stos
into
cld
cmc
arpl
xchg
das
fwait
test
inc
pop
pop
push
mov
imul
jo
pushf
dec
sub
and
(bad)
cwde
xchg
jp
xchg
mov
cdq
jecxz
adc
daa
mov
out
and
lods
xchg
xor
(bad)
mov
into
jnp
jns
out
jge
jl
popf
aaa
sbb
and
push
sbb
push
popf
dec
mov
xchg
test
lods
stc
push
shl
lock
test
aam
xor
mov
xchg
imul
mov
rcr
inc
rol
iret
mov
xor
scas
repz
div
jg
iret
mov
push
bnd
movs
jmp
adc
inc
and
into
jmp
mov
scas
fdivr
aad
xchg
je
enter
ins
and
aas
and
sub
(bad)
or
fisubr
push
out
daa
jne
pop
cmps
dec
cmp
nop
movs
dec
movs
test
ins
iret
add
inc
mov
dec
mov
in
and
jb
dec
aad
xlat
aas
data16
cmp
cli
cmps
cmp
repnz
cld
test
cs
dec
xchg
cmps
cmps
cwde
and
(bad)
leave
cli
fisttp
add
repz
movs
xchg
ror
mov
jle
(bad)
adc
dec
and
mov
add
adc
and
int3
jne
jge
add
call
mov
loope
sub
jne
arpl
rol
ret
mov
mov
mov
xor
jecxz
mov
and
call
lahf
dec
lahf
bswap
mov
adc
pop
cmp
ds
dec
push
idiv
xchg
fdiv
test
(bad)
std
js
lahf
xchg
div
mov
push
sbb
ss
pop
pop
repz
and
iret
jns
mov
stos
and
shl
mov
pop
mov
stc
add
xchg
enter
int
mov
into
push
lods
test
test
xchg
(bad)
push
push
rcl
push
jle
not
cmp
xchg
xor
leave
pop
cmp
(bad)
inc
inc
add
sub
or
xor
retf
sub
mov
dec
adc
push
ss
xchg
mov
fcomp
loop
loop
imul
jae
mov
rcr
aad
lea
or
cmps
dec
sbb
cmp
push
pusha
jmp
stos
retf
xor
sub
dec
mov
addr16
ja
dec
and
xchg
dec
and
pop
ds
rcr
jmp
cmc
sbb
add
jg
jmp
push
inc
pop
mov
push
test
pusha
sub
call
mov
mov
call
test
rcl
and
lea
add
add
jecxz
adc
sbb
and
cmps
cmp
jae
push
adc
sar
jne
or
cwde
mov
clc
push
cwde
sbb
fld1
shl
out
mov
dec
jno
imul
fst
inc
mov
pusha
ins
pop
rcr
enter
(bad)
cmp
movs
push
pop
pop
lods
inc
push
movlps
add
cmp
fisub
int
(bad)
jns
pop
push
mov
cmp
jp
or
sbb
mov
sbb
mov
and
imul
ss
jnp
or
outs
add
add
jmp
jg
push
movs
rcr
mov
loope
or
or
or
jno
or
lods
xchg
ss
lds
push
data16
aam
xchg
xchg
jmp
lods
enter
jno
lds
mov
pop
xor
ret
lea
mov
jle
ret
xchg
mov
nop
outs
push
mov
adc
ret
test
adc
or
xchg
inc
stc
cmc
push
jnp
adc
ins
sbb
int
out
dec
lds
or
jmp
and
loope
mov
mov
push
adc
adc
(bad)
adc
movs
cmp
xor
std
cs
jp
push
pop
nop
add
and
inc
xor
aam
ret
add
aam
add
mov
and
adc
pusha
mov
mov
mov
aas
xor
jmp
rol
xchg
xor
adc
iret
sub
inc
lds
std
jge
scas
imul
inc
bound
stc
cmps
int
push
add
(bad)
mov
sahf
sbb
into
stos
or
pushf
aam
pusha
jmp
in
push
pop
and
shl
cmps
add
aaa
pop
jbe
enter
arpl
sbb
repnz
das
scas
inc
push
fcom
retf
out
jno
daa
xlat
cld
sbb
push
(bad)
in
mov
loop
shr
and
push
dec
adc
jge
repnz
add
pop
xlat
in
test
sahf
out
inc
rcr
aas
addr16
cld
mov
cmp
addr16
pop
xor
daa
imul
or
test
add
imul
test
rcl
jge
dec
jge
int
inc
arpl
lods
js
shl
test
int3
loop
aas
jb
inc
ss
pop
sbb
sahf
es
leave
push
push
jp
jns
fiadd
sub
cmp
(bad)
arpl
js
push
repnz
mov
push
mov
jmp
mov
shl
stc
arpl
sub
ja
outs
es
les
sub
and
pop
iret
and
push
ret
jmp
das
out
sbb
xor
mov
hlt
scas
div
loope
jmp
loop
cmps
or
inc
(bad)
icebp
rcl
mov
and
push
sbb
pop
dec
push
cdq
sub
and
int3
cli
in
cmc
inc
punpcklbw
test
outs
sbb
out
dec
(bad)
and
mov
cmp
outs
sub
inc
pop
aaa
jno
aas
mov
sub
sar
push
rcl
dec
test
int3
sbb
sbb
xchg
sbb
sahf
xor
cdq
daa
inc
sub
and
sub
and
push
cmps
dec
in
and
ror
jns
out
pop
push
xchg
or
sbb
sub
xchg
and
mov
ror
add
(bad)
hlt
std
cmp
cmp
(bad)
cmp
adc
push
js
mov
retf
loope
xchg
pop
mov
push
aam
add
adc
jl
(bad)
int
adc
fimul
mov
mov
mov
cdq
cmp
cmp
push
and
xchg
(bad)
icebp
or
xchg
dec
iret
movs
cmps
ins
(bad)
fsubr
jne
add
push
iret
test
jl
push
push
dec
add
cdq
cmp
cmps
es
and
cmp
mul
mov
dec
lock
push
cmp
push
mov
hlt
int
je
inc
jae
push
leave
scas
gs
test
mov
mov
in
inc
retf
es
dec
cmp
or
ret
sub
and
xor
fcomp
in
mov
fisubr
ror
push
sub
test
cmps
movs
jle
outs
fistp
fld
mov
xor
push
cmp
int3
hlt
fcmovbe
sti
jnp
hlt
xchg
loop
mov
nop
lahf
mov
ds
(bad)
sub
push
sub
xor
mov
in
cli
stc
pop
jmp
push
adc
ror
jg
xchg
sub
mov
cmp
pop
push
stos
imul
imul
mov
cmps
pop
and
push
push
jg
xchg
push
push
adc
and
(bad)
fidivr
and
jmp
fmul
retf
lds
fistp
xchg
pop
inc
ret
call
or
add
in
push
xchg
in
xchg
sub
push
sbb
add
push
ja
neg
(bad)
out
sub
repz
loope
push
or
sub
jmp
in
shl
jo
xor
jg
sub
les
retf
loop
mov
mov
pop
inc
ins
(bad)
cmp
mov
cmc
addr16
add
test
lods
push
mov
shr
mov
(bad)
cmps
push
aam
or
pop
cli
fcomp
scas
mov
fsubr
mov
scas
repz
sbb
push
pop
pop
dec
mov
add
sub
int
dec
jmp
ins
stos
ins
jle
xchg
mov
push
push
test
xor
ins
pop
dec
mov
(bad)
ins
(bad)
pop
cmp
jmp
clc
xchg
xchg
movs
push
dec
pop
jmp
mov
cwde
ss
mov
xchg
movs
xchg
in
loop
mov
test
(bad)
mov
cld
adc
mov
out
dec
mov
inc
cdq
add
mov
pushf
je
sbb
mov
and
pop
mov
xchg
add
push
pushf
(bad)
pop
cmp
stos
call
sub
jns
je
lods
jne
test
and
add
jno
lds
add
cmp
mov
xchg
enter
pop
(bad)
ds
push
push
call
pop
mov
cld
test
add
leave
sbb
lea
(bad)
mov
in
call
pop
xor
sub
push
cmps
inc
ds
xchg
dec
mov
add
xlat
lea
xchg
push
xchg
mov
js
xchg
xchg
inc
dec
adc
dec
out
pop
gs
into
in
adc
pop
pop
dec
pop
icebp
and
(bad)
mov
sbb
imul
dec
push
mov
dec
mov
icebp
inc
pop
arpl
(bad)
xor
sub
sbb
out
stos
sub
or
mov
push
jbe
gs
(bad)
cld
(bad)
lgdtd
mov
mov
shr
mov
rcl
test
enter
popf
ret
mov
jnp
mov
fidiv
jne
push
inc
shl
mov
dec
js
retf
mov
rcr
xchg
outs
inc
cmps
sub
iret
and
xor
test
add
xchg
mov
jecxz
sbb
mov
cmc
or
mov
push
xchg
adc
sub
jns
(bad)
out
fdivrp
stos
lods
int
mov
push
push
push
dec
xor
xchg
push
cld
mov
movs
mov
jmp
dec
imul
ins
mov
pop
mov
add
cld
cmp
lods
cmc
mov
loope
test
or
pop
test
dec
dec
inc
add
adc
xor
xor
or
jb
nop
xlat
daa
aad
xchg
inc
hlt
ds
mov
mov
xchg
sub
daa
ins
jmp
lahf
shr
adc
dec
imul
adc
sub
loop
je
paddsw
jne
aaa
and
cli
push
cmp
in
call
add
shr
jno
fist
imul
(bad)
pop
aam
loope
add
or
mov
fiadd
dec
pop
ror
jno
iret
mov
mov
push
and
inc
stc
icebp
sti
imul
cmp
loope
jg
sbb
push
stos
jmp
repz
fcomp
cmp
xor
push
cmps
popf
callw
add
ficom
sti
cli
mov
dec
aas
push
ret
(bad)
jge
sti
xlat
retf
pop
pop
ja
and
push
fdivr
add
movs
xor
iret
test
div
pop
jge
xor
xlat
push
loopne
call
in
fdivr
cmp
cli
repz
mov
ins
mov
(bad)
mov
scas
in
add
test
rcl
inc
je
fidiv
or
ret
clc
inc
pop
imul
cwde
jl
iret
rcr
out
or
push
scas
clc
mov
push
add
hlt
add
mov
jbe
(bad)
sahf
sbb
(bad)
aas
pop
dec
sub
inc
push
enter
test
ins
jg
pcmpgtw
cmp
mov
aas
xchg
inc
aas
retf
mov
ss
(bad)
dec
xor
push
mov
cmps
stos
xchg
xor
jno
mov
cmp
xchg
xchg
jmp
pusha
or
dec
popf
sbb
out
inc
mov
cwde
scas
and
movs
mov
xchg
sbb
xlat
repz
jns
stc
push
mov
mov
popa
outs
test
push
jmp
retf
jle
inc
bound
jg
dec
test
(bad)
rcl
out
call
mov
ret
sbb
jle
add
aad
pop
xor
jle
out
cs
addr16
dec
shl
lock
shl
cmp
retf
mov
retf
loope
jmp
nop
inc
jl
test
inc
mov
pop
inc
dec
repz
out
stos
and
mov
or
inc
stos
bound
add
out
shl
dec
jg
jmp
pop
test
xlat
mov
call
stc
je
(bad)
fdivr
or
mov
dec
in
cld
mov
fstp
jmp
shl
mov
push
add
cmp
clc
mov
mov
retf
daa
ja
into
add
stc
push
test
push
data16
imul
rcr
or
cmps
rcr
pop
cld
jb
mov
jmp
ss
(bad)
movs
sbb
push
pop
xor
fsubr
push
xchg
iret
ret
add
push
inc
add
jg
fcomp
xor
call
test
icebp
mov
cli
push
dec
stos
(bad)
js
adc
mov
sar
paddsw
mov
jb
xchg
mov
inc
push
jmp
jg
inc
das
aas
mov
fwait
jmp
push
inc
mov
into
jmp
mov
inc
mov
jg
ror
inc
cmps
mov
loope
fucomp
(bad)
movs
lea
sub
xor
test
cmp
in
dec
fcomp
pop
jecxz
out
and
retf
inc
popa
push
and
xor
adc
push
mov
stos
(bad)
mov
imul
mov
cs
fdivr
xchg
das
stc
mov
shr
sbb
sbb
scas
repz
fisubr
scas
jmp
push
mov
jmp
jae
stos
inc
cmp
cli
push
retf
adc
(bad)
sbb
stos
mov
lea
dec
call
inc
data16
jb
pop
push
pop
lock
daa
fcomp
or
ins
push
push
and
add
ss
aaa
and
mov
std
jle
mov
and
mov
add
cld
icebp
inc
dec
mov
push
jg
xchg
jmp
push
push
jno
call
or
hlt
sar
aaa
inc
sbb
mov
rcl
div
mov
jmp
pusha
jg
rcl
xlat
inc
push
sbb
cs
push
fcomp
pop
(bad)
cmp
test
mov
push
xchg
ret
loopne
(bad)
outs
imul
inc
js
mov
mov
push
stos
inc
retf
div
sub
das
in
jle
pop
mov
and
dec
fmul
rol
push
scas
imul
inc
jno
mov
adc
rcl
retf
push
lods
and
add
sub
mov
jecxz
out
outs
fmul
pop
out
mov
bound
xchg
retf
sub
mov
jecxz
jecxz
cdq
call
icebp
mov
jg
add
loop
lods
cs
sub
call
adc
cmovb
addr16
shr
lods
push
push
retf
sub
lods
push
sbb
mov
sub
add
call
shr
movs
mov
arpl
in
xor
int3
lds
cmp
cmp
or
loop
aad
xchg
psubq
ja
add
(bad)
pop
sar
push
xor
scas
into
xchg
mov
mov
(bad)
jb
fs
ja
mov
in
jno
cmp
arpl
push
sub
pop
xchg
pop
mov
cwde
rcl
mov
sub
add
stc
cld
jnp
outs
jb
dec
ret
mov
addr16
inc
xchg
xchg
fsub
xchg
sub
dec
clc
sbb
mov
call
scas
xchg
push
push
and
jno
pusha
pop
inc
cmp
jge
fadd
push
xchg
mov
loopne
dec
aam
inc
cs
loop
add
push
inc
movs
add
stc
or
in
iret
push
mov
push
stc
add
dec
xchg
xchg
mov
aam
mov
xor
or
xor
jno
and
cmps
ret
cmp
push
push
jecxz
repz
or
ficom
scas
rol
sub
dec
jae
pop
cmp
fdivr
jbe
ret
out
call
adc
jecxz
sub
xchg
nop
push
imul
outs
mov
movs
jp
dec
enter
jb
xor
pop
xchg
or
sbb
mov
pop
(bad)
add
je
inc
ja
jbe
xor
mov
aam
add
test
inc
dec
idiv
pop
in
shr
jbe
imul
sbb
outs
and
cld
pop
xchg
aaa
jne
mov
icebp
sub
pusha
les
and
scas
mov
ins
rcl
dec
add
popf
dec
out
stos
test
call
dec
fcom
(bad)
cmp
push
ss
scas
mov
stos
les
jp
sti
das
scas
and
(bad)
sbb
ins
ds
sbb
jb
bound
adc
iret
bound
fxch
test
jo
xor
add
mov
pand
int
test
xchg
dec
pop
jno
stos
call
inc
push
mov
(bad)
std
rol
and
sub
rol
xchg
call
adc
int3
outs
leave
push
pop
les
mov
adc
pop
add
cmp
ins
aaa
sub
pop
nop
pop
sub
mov
xchg
jb
lds
pop
mov
std
fstp
add
loop
ror
xlat
idiv
xlat
shr
lods
or
or
js
test
pushf
adc
mov
ja
xor
outs
jb
fnstcw
nop
add
sbb
ret
sub
mov
inc
and
sbb
xor
sbb
xor
xchg
pop
mov
or
in
adc
imul
bound
aad
sbb
movs
aaa
push
dec
add
repz
enter
pop
pop
push
cld
scas
push
nop
cmp
mov
lods
imul
in
xlat
mov
sahf
loope
jle
fbld
push
dec
mov
mov
cdq
cs
mov
les
sub
mov
or
inc
(bad)
(bad)
push
aam
push
in
repnz
frstor
retf
mov
ficomp
push
hlt
mov
ja
fwait
(bad)
cmp
mov
pop
sbb
jo
xchg
arpl
push
xor
xchg
cmps
mov
addr16
cmp
(bad)
mov
(bad)
outs
mov
test
adc
xchg
lea
lods
in
rol
in
push
inc
lods
sub
clc
xor
mov
stos
enter
cdq
(bad)
push
or
inc
retf
cmps
jmp
in
test
aad
rol
or
sub
sbb
xor
test
fcmovne
(bad)
(bad)
movs
push
adc
shr
mov
in
int
adc
jecxz
shl
mov
pop
mov
push
or
mul
pop
cmps
mov
int
mov
outs
aad
icebp
jl
lds
xchg
inc
mov
dec
jns
jbe
dec
adc
and
sbb
or
push
pop
movs
mov
jae
pop
pop
lds
mov
movs
jg
inc
mov
mov
leave
mov
in
inc
push
mov
sub
loope
je
in
inc
fiadd
loop
sub
cli
push
inc
pop
cmp
cmp
shl
lods
dec
out
cmc
gs
xlat
pop
push
sbb
sub
stc
jne
lods
aaa
fs
dec
loope
dec
shr
mov
pop
cld
bound
out
scas
or
ins
pusha
inc
aaa
out
shl
push
int3
mov
and
push
mov
mov
int
fcmovnb
mov
xchg
xchg
jge
mov
movs
fwait
inc
int
push
ins
es
nop
test
(bad)
xor
cmps
add
sbb
push
cmps
jp
pop
fcmovbe
mov
push
clc
mov
push
add
add
popa
mov
std
dec
pop
jge
pop
mov
(bad)
rcl
mov
mov
cld
enter
je
mov
arpl
push
dec
js
push
addr16
outs
dec
lock
mov
sub
add
fdivr
jle
inc
scas
cmc
outs
iret
mov
push
adc
shr
mov
jmp
ds
jb
sahf
mov
sbb
xor
pop
movs
push
int3
mov
cld
mov
xchg
or
dec
jb
nop
stc
(bad)
sbb
(bad)
hlt
adc
aad
cmp
inc
sbb
mov
dec
mov
leave
jbe
clc
mov
in
jecxz
push
imul
ret
mov
fisttp
(bad)
fidivr
lahf
movs
sahf
dec
push
nop
jecxz
pop
clc
test
jge
jno
ds
in
lahf
mov
out
add
idiv
xchg
iret
push
mov
xchg
or
adc
push
pop
out
inc
imul
out
sbb
cmp
test
and
repnz
xor
popf
or
daa
iret
mov
sbb
cld
mov
jnp
repnz
jecxz
inc
test
icebp
cs
test
lahf
je
and
jp
sbb
mov
ss
fwait
xor
jo
div
shl
sahf
loopne
mov
scas
pop
rcl
cmp
jge
xor
scas
xchg
sahf
jecxz
cwde
xchg
(bad)
in
and
mov
push
fdiv
jbe
jmp
jge
iret
xchg
rcr
fldcw
sar
jno
dec
pop
stc
je
out
mov
out
xchg
push
lock
add
cmovb
out
sub
xchg
push
ins
outs
mov
test
retf
dec
add
xor
or
jmp
bound
dec
adc
retf
and
in
jne
cmp
cmp
mov
pop
dec
int
xchg
movs
sub
ret
imul
das
push
jb
pop
test
test
mov
xor
push
jnp
iret
push
fwait
repnz
cmp
push
enter
scas
movs
dec
xor
jmp
or
mov
pop
adc
push
fdivp
xchg
fisubr
lock
sub
sbb
mov
sti
jp
or
sahf
xor
xchg
mov
imul
(bad)
js
jle
les
rcr
cmp
in
and
pop
push
bound
fcomp
nop
inc
lods
hlt
not
(bad)
cmc
out
mov
cmp
push
xlat
mov
xchg
ss
inc
in
ins
scas
outs
xor
push
into
hlt
add
mov
cmps
in
loopne
sub
(bad)
jge
aaa
push
imul
es
(bad)
xor
sbb
ins
xor
push
push
inc
inc
push
jnp
out
and
neg
xor
adc
dec
xchg
rcl
push
ror
fsub
mov
cs
dec
mov
mov
mov
add
shl
push
inc
shr
(bad)
jecxz
lahf
retf
or
mov
push
les
arpl
lods
or
std
leave
pushf
popf
imul
xchg
hlt
and
repnz
mov
jns
mov
fcom
repz
pop
sahf
call
inc
or
jno
cmp
sub
pop
arpl
sub
push
push
mov
cdq
stc
hlt
fiadd
mov
int
sub
add
scas
inc
jmp
in
cmp
sbb
pop
(bad)
out
jmp
mov
clc
jnp
int3
or
test
dec
lea
add
inc
or
or
xchg
imul
ret
sbb
sbb
ins
mov
adc
gs
bound
movs
icebp
mov
mov
jge
(bad)
sahf
shl
inc
rcl
cld
dec
push
jge
inc
std
mov
pop
pop
outs
test
icebp
xor
adc
bound
(bad)
cwde
lock
push
cmp
mov
inc
inc
ss
iret
loopne
inc
rcr
ficomp
jb
pop
mov
aad
jbe
xor
push
mov
jecxz
icebp
inc
int3
out
arpl
jg
push
int
mul
loope
pop
arpl
add
int
mov
sub
cmp
jns
fucomi
imul
ins
aaa
daa
xchg
sar
push
call
or
inc
pop
gs
les
fcomp
jge
mov
dec
pop
xchg
call
shr
pop
movs
xchg
fcmovbe
fdiv
popa
out
sti
(bad)
jmp
cmc
sahf
and
ror
lahf
daa
mov
stc
in
out
out
ins
sub
sahf
dec
int
inc
imul
inc
and
push
icebp
mov
call
push
enter
jecxz
pop
ja
out
out
jl
in
and
hlt
xchg
xor
pop
shl
rcl
sub
pushf
rcl
call
imul
lods
mov
cmps
loope
mov
neg
mov
and
dec
jmp
cmp
fistp
fcmovnbe
xor
mov
sub
test
xchg
xchg
mov
jge
cmp
jge
rol
test
popf
dec
dec
les
stos
retf
inc
cmp
bswap
in
sub
das
jecxz
mov
fidiv
inc
test
imul
xchg
fnstenv
mov
pop
push
rol
loope
mov
add
je
cmp
mov
int3
(bad)
dec
dec
aad
mov
adc
imul
sbb
in
jl
pop
ret
push
loop
test
mov
repz
fidiv
pop
ins
xor
mov
xor
jne
pop
mov
sub
dec
scas
push
cmp
dec
imul
mov
sub
test
(bad)
fs
jl
gs
push
stc
sub
aas
fst
or
aad
pop
pop
push
jecxz
add
pop
fld
outs
fwait
mov
inc
inc
add
push
je
ret
sbb
xor
int
call
jmp
gs
add
jmp
inc
pop
ja
adc
in
rcr
mov
jno
push
jmp
icebp
mov
fisubr
sub
pop
inc
xor
dec
push
ror
je
inc
sub
in
dec
ds
dec
into
aad
jno
in
popa
and
mov
pop
scas
sbb
mov
cwde
adc
jnp
(bad)
cs
in
sbb
and
mov
dec
inc
nop
jne
rol
popf
xor
sub
(bad)
fwait
adc
fld
sbb
add
inc
mov
imul
fsubp
ins
mov
addr16
ret
xor
out
mov
xor
out
dec
out
je
fdiv
pop
jp
adc
adc
jno
jmp
jns
xor
out
adc
add
push
sub
lods
jg
mov
inc
lds
xchg
sbb
push
fnstsw
dec
mov
sbb
pusha
or
add
stos
add
dec
sub
es
std
mov
and
mov
das
or
push
dec
mov
and
dec
xlat
fldcw
jmp
dec
push
pop
imul
inc
outs
mov
ficom
pusha
or
repnz
bndldx
mov
stos
mov
(bad)
xchg
push
dec
cs
mov
mov
loop
mov
gs
fucomp
bound
jo
or
loope
addr16
push
fistp
push
adc
scas
sbb
daa
daa
in
sbb
imul
call
push
or
mov
imul
sub
pop
and
dec
test
push
dec
mov
repz
pop
mov
jae
inc
in
out
icebp
or
mov
call
stc
call
shr
sahf
mov
pop
xchg
loop
jbe
cmp
jbe
sub
xchg
pop
pop
and
xor
mov
std
movs
push
mov
and
add
jle
cmps
int
dec
mov
bound
add
and
push
mov
aaa
or
jne
adc
ins
aad
sbb
and
sbb
dec
xor
xchg
jmp
mov
and
out
xor
push
lock
pop
bnd
(bad)
push
data16
push
cmp
iret
repnz
lods
cwde
dec
std
cmp
and
dec
pop
inc
inc
add
cmc
imul
mov
push
mov
std
xchg
jmp
and
cmp
sbb
push
add
inc
sbb
sub
lods
fs
xchg
or
pop
test
jno
test
xor
and
push
jae
icebp
dec
and
mov
lea
stos
push
and
dec
adc
ins
arpl
and
pushf
jp
outs
or
push
sub
nop
aas
sar
dec
(bad)
outs
dec
jo
into
stos
out
push
and
lea
pop
xchg
mov
mov
push
(bad)
sbb
pop
ret
daa
dec
mov
cli
mov
lahf
outs
cmp
fsubr
pop
pop
mov
push
call
mov
sub
or
adc
jecxz
cmp
cdq
sub
or
mov
ins
push
xchg
push
call
sub
cmc
repz
call
xchg
stc
call
sub
pop
dec
stos
or
add
jp
out
lods
rol
and
mov
sub
outs
idiv
les
fstp
xchg
sbb
(bad)
push
mov
leave
pusha
jmp
cmp
dec
iret
or
neg
cmps
(bad)
dec
mov
scas
add
xchg
jp
outs
mov
hlt
repz
mov
out
mov
call
push
mov
fwait
popa
iret
cld
(bad)
sti
cmps
imul
loope
sbb
mov
xor
(bad)
sbb
in
sbb
lahf
sub
add
mov
mov
cwde
in
fimul
inc
lds
mov
xchg
leave
mov
xchg
or
jbe
xor
jmp
stos
rcl
or
sub
mov
xchg
inc
sub
xor
xor
xor
sub
pop
mov
push
mov
enter
cld
clc
hlt
aas
mov
jae
pop
aam
aam
enter
adc
lods
dec
sub
dec
hlt
sbb
prefetchw
daa
sub
arpl
jno
sub
(bad)
and
fnstsw
sub
int3
xchg
pop
nop
lds
retf
xlat
test
fst
imul
(bad)
ins
pushf
push
jp
push
stos
inc
sub
mov
mov
pop
inc
push
ss
int
test
imul
rcl
sub
adc
sub
xchg
jle
in
shl
mov
daa
movs
sar
xchg
xlat
cmp
fnstsw
ins
fcom
cmp
jbe
nop
nop
je
mov
es
adc
xchg
(bad)
retf
mov
push
and
int3
mov
lods
(bad)
xor
sbb
push
mov
(bad)
add
mov
lds
xchg
sbb
pushf
inc
inc
push
jp
sub
ficom
mov
lods
out
or
mov
push
add
movs
jo
inc
cmp
repnz
jle
mov
sbb
push
aas
and
(bad)
fsubr
xlat
jb
sbb
sub
push
dec
cs
fcom
sbb
xlat
in
inc
pop
comiss
inc
dec
mov
arpl
sbb
mov
or
xchg
cmps
ret
pop
inc
add
jns
mov
ins
jmp
mov
fs
test
xor
and
cmp
stos
leave
push
or
shl
out
imul
sbb
aaa
push
or
mov
std
jecxz
pop
(bad)
(bad)
jb
jae
shl
jae
pusha
in
addr16
xchg
cwde
cli
and
js
adc
ja
push
out
sub
cmp
adc
add
add
scas
xchg
inc
fst
das
add
or
add
cmps
jb
jno
and
data16
jecxz
cmp
test
fdiv
jns
cmps
rcr
add
fst
jns
add
xchg
xchg
aaa
mov
mov
inc
cmps
mov
retf
xchg
repnz
shr
fidivr
push
fwait
ins
out
(bad)
pop
push
mov
push
lods
je
or
push
and
xchg
scas
setg
push
je
movs
lea
mov
nop
cmp
cdq
pop
stos
adc
pop
jl
retf
or
push
sbb
dec
sahf
jmp
stc
jecxz
cmp
mov
fstp
dec
push
and
sbb
and
jmp
add
pop
xchg
inc
std
mov
mov
cmp
push
adc
or
sub
nop
fmul
fdivr
xchg
mov
cmp
sub
div
mov
pop
and
or
test
adc
nop
ins
inc
fdivr
cdq
push
pop
jae
sar
cmps
push
sub
les
push
mov
sar
mov
mov
movs
pop
daa
inc
sahf
xchg
std
leave
sub
mov
sti
pop
loopne
push
or
inc
xor
xchg
movs
test
fadd
int
ret
icebp
je
js
je
jecxz
dec
sub
sbb
inc
dec
mov
daa
push
repnz
sub
dec
daa
sbb
xor
cmps
mov
xchg
mov
pop
mov
hlt
in
movs
mov
pop
jmp
xor
shl
les
push
lahf
sub
mov
pop
push
cmp
in
pop
data16
rcr
ret
jae
mov
fnstsw
ins
pusha
jns
test
inc
mov
cwde
push
jmp
inc
jae
jne
mov
mov
test
sub
imul
jmp
jno
or
sbb
mov
cmp
dec
jo
aad
mov
enter
stos
cdq
xchg
fstp
call
sbb
fisttp
dec
push
sub
pop
jmp
cmps
fwait
sti
enter
jge
xchg
lods
and
mov
movs
arpl
loopne
fwait
jle
cmp
mov
jnp
(bad)
mov
mov
push
xchg
xchg
js
in
mov
hlt
xchg
cmps
xchg
sub
(bad)
je
xchg
pop
xor
dec
mov
cmp
mov
popf
or
xchg
add
and
es
mov
mov
aam
(bad)
aam
outs
dec
fchs
push
push
mov
add
and
enter
retf
jno
icebp
cmp
mov
add
sub
repnz
mov
add
cmps
push
scas
cmp
xchg
cmp
sahf
push
stos
arpl
mov
xchg
or
mov
fwait
jmp
mov
xor
cwde
sti
js
pop
adc
mov
int3
xchg
cmp
bound
ficomp
sub
jb
(bad)
movs
push
mov
xor
sti
push
ror
aas
aas
dec
pusha
mov
jb
and
mov
ins
sub
dec
sbb
test
imul
or
mov
sub
es
and
pop
je
xor
inc
retf
in
popa
movs
push
dec
xchg
pop
fwait
sti
ja
fincstp
jge
loope
sub
adc
xor
and
rol
xchg
fsubr
ins
mov
push
in
sbb
popf
push
iret
jae
sbb
jge
pop
inc
sub
aad
sub
ret
sub
push
inc
xchg
mov
aam
mov
int
add
repnz
into
(bad)
push
mov
mov
add
jae
push
xchg
jbe
or
push
mov
loop
dec
mov
fmul
and
movs
push
mov
neg
dec
pop
dec
or
dec
push
scas
mov
adc
jle
pop
rcr
(bad)
mov
nop
fld
pop
xor
lahf
test
cwde
inc
mov
sbb
test
mov
cmp
dec
sub
stos
ret
out
shl
push
mov
inc
adc
xchg
push
dec
shl
jle
bound
imul
pop
mov
jbe
js
enter
jno
dec
xlat
mov
ret
sbb
jecxz
or
mov
(bad)
ins
call
mov
xchg
sub
adc
adc
mov
lea
cmps
in
add
ret
mov
bound
jmp
aam
shl
jmp
inc
lds
sar
xchg
xchg
sub
xchg
or
cdq
imul
fldenv
jb
mov
mov
icebp
push
dec
int
adc
mov
inc
pop
push
sub
outs
ins
cli
test
xchg
movs
inc
cmps
push
xor
ins
dec
inc
and
or
xchg
inc
inc
mov
rol
hlt
adc
das
mov
add
rcl
je
sahf
xchg
sahf
ins
mov
(bad)
push
inc
shr
add
(bad)
(bad)
scas
mov
xchg
out
fadd
test
aas
fsincos
jp
mov
mov
pop
mov
inc
adc
movhps
icebp
xlat
push
dec
pop
add
and
out
xor
cmps
inc
pop
outs
test
jae
bound
imul
lea
push
lock
sub
sub
sbb
jl
into
sub
inc
cmp
cmp
pop
addr16
mov
xlat
sbb
stos
push
movs
xchg
jmp
aam
mov
std
dec
imul
dec
sti
outs
xchg
push
mov
or
mov
jo
in
scas
test
fisttp
rcr
add
add
and
setns
loope
jne
inc
(bad)
sbb
dec
in
dec
leave
cmps
dec
xchg
aad
mov
popa
adc
ret
sub
aaa
mov
cmc
cmps
popa
lock
or
test
sbb
stc
push
hlt
clc
imul
push
retf
xchg
xor
sub
mov
adc
pushf
test
mov
out
(bad)
cmp
int3
mov
xchg
lds
mov
cdq
push
fwait
and
cld
cli
cmc
jmp
cmp
adc
push
out
jle
leave
mov
test
ret
jb
sbb
push
xchg
aad
mov
or
shl
push
sar
repz
fcomp
ds
fisubr
push
jns
ins
pop
call
xlat
xor
add
jns
mov
or
daa
lea
add
inc
mov
pop
mov
sub
jmp
aam
adc
ins
adc
adc
mov
cdq
push
inc
imul
sub
sub
inc
xchg
scas
pop
cwde
mov
jns
je
(bad)
fild
fst
add
shr
dec
mov
aaa
mov
xchg
movs
imul
inc
sub
xor
push
push
and
mov
push
xchg
dec
icebp
sub
sbb
or
dec
(bad)
pop
stc
shr
call
xchg
sub
cmp
pop
push
jns
dec
sub
(bad)
adc
lods
out
in
inc
addr16
bound
loop
xchg
idiv
dec
into
popf
sub
fst
cwde
add
xchg
push
shr
pop
setnp
sti
cmp
cmp
jne
push
jl
add
sub
out
dec
mov
or
xchg
adc
jnp
lahf
arpl
in
ffree
loopne
pop
xchg
dec
mov
sar
push
push
mov
pop
adc
cmc
sti
cwde
sub
cmp
aam
mov
sub
lds
in
jns
leave
push
push
cmp
jbe
jmp
pusha
movs
movs
and
adc
lods
fild
fistp
cmp
gs
mov
sub
jne
inc
adc
and
cs
pop
add
push
dec
pop
dec
call
cmp
sub
mov
dec
addr16
std
sub
iret
mov
rcl
mov
cmp
and
retf
cmp
ficom
(bad)
retf
lahf
dec
call
push
iret
push
push
xchg
or
mov
push
jecxz
mov
mov
out
push
fwait
jbe
aam
xor
and
or
out
xlat
iret
mov
outs
dec
sub
dec
sqrtps
mov
into
aas
bound
adc
leave
mov
call
push
test
push
pop
pop
jmp
cmp
int3
lock
jno
cmp
rcr
pop
sbb
jecxz
inc
pop
jge
pop
jg
into
popf
cmp
ins
cmp
or
xor
je
push
xor
call
prefetcht2
in
mov
jge
mov
out
sahf
push
pushf
jo
enter
and
jbe
and
mov
sbb
jg
imul
mov
push
xchg
xchg
mov
jno
jle
movs
or
cmps
pop
lea
enter
enter
jnp
fwait
je
mov
xchg
xchg
std
mov
in
cmps
cmp
cmp
xor
mov
inc
pop
adc
lods
xchg
dec
loope
out
dec
push
and
repnz
push
cmp
neg
jno
call
sahf
sbb
out
push
add
xor
sbb
scas
add
jp
push
pusha
idiv
add
inc
sbb
mov
xor
or
and
aas
sub
addr16
xor
add
dec
aam
cdq
inc
outs
imul
test
inc
in
and
mov
je
xlat
mov
xor
jb
retf
in
add
imul
call
int3
sbb
jne
adc
jge
ds
ja
rcr
test
test
mov
test
stc
fdivp
lea
dec
mov
mov
mov
out
jns
push
lods
push
add
sub
lods
imul
jg
ss
loope
out
shr
cmp
sar
pop
add
call
in
pop
aam
inc
or
push
mov
xor
inc
(bad)
lds
scas
jbe
mov
fadd
jmp
xchg
cmps
in
pop
mov
js
mov
clc
out
mov
adc
add
pop
push
and
xchg
mov
mov
xor
ja
jmp
ins
outs
(bad)
sti
dec
into
pop
mov
sub
adc
ret
mov
(bad)
jle
in
jnp
jnp
lahf
jne
out
ins
pop
and
sbb
cmps
sub
cmp
mov
xor
test
and
pop
pop
xchg
cli
icebp
in
push
fcmove
fbld
std
popf
add
ins
mov
push
cwde
push
and
neg
and
push
out
and
add
jmp
loopne
mov
adc
inc
mov
(bad)
pop
cmps
adc
pop
repnz
or
add
add
mov
push
inc
inc
pop
dec
in
add
cld
jnp
jmp
in
jmp
dec
add
movs
cmp
call
ret
(bad)
pop
popa
jb
aas
aad
test
and
rcr
into
pop
test
jecxz
popa
pusha
pop
in
mov
or
mov
adc
dec
dec
lock
sub
mov
mov
hlt
mov
test
outs
mov
xor
(bad)
out
push
in
inc
imul
mov
mov
pmaddwd
leave
ja
adc
cmp
int
xchg
popa
add
add
mov
neg
adc
add
push
mov
mov
mov
mov
js
mov
lahf
lahf
into
popf
cmp
int3
mov
(bad)
loopne
test
xchg
dec
add
jecxz
pop
stc
(bad)
pop
addr16
sbb
enter
fdivrp
add
iret
jecxz
jg
xchg
sahf
adc
dec
and
jg
(bad)
or
cmp
std
cmp
mul
rcl
push
jo
dec
sbb
loope
out
or
jmp
lods
xchg
ins
push
popf
xchg
in
bound
es
ja
mov
jae
jl
cmps
push
xchg
mov
dec
push
sub
mov
xor
mov
xchg
jp
sub
stos
and
pop
push
fst
ins
in
sbb
retf
xor
push
mov
cld
mov
add
push
mov
lods
xchg
jle
out
inc
jmp
xchg
(bad)
mov
mov
ins
jg
stc
sub
jbe
in
nop
int
mov
sub
jl
fs
pop
xor
mov
push
lahf
das
pop
outs
xchg
ins
dec
out
ficomp
mov
inc
add
jno
movzx
sahf
cmps
scas
mov
cdq
in
jns
dec
movs
xchg
imul
xchg
pop
cdq
fcomp
div
dec
xor
inc
test
and
or
or
cmps
push
in
fnstenv
adc
pop
retf
imul
jnp
imul
mov
sub
jb
push
in
push
mov
add
pop
push
sbb
ss
(bad)
mov
jmp
mov
(bad)
cmc
es
dec
adc
cli
or
jae
sbb
jge
mov
sar
fisttp
dec
jb
add
rol
push
in
sbb
call
in
bound
mov
iret
mov
push
cmp
dec
aas
sub
bnd
aaa
xor
enter
add
rcl
jnp
pop
cwde
pop
inc
add
adc
jbe
xchg
pop
adc
push
leave
cmp
inc
add
stc
cld
adc
xlat
cmp
dec
lds
stos
je
push
shl
cli
popf
je
or
inc
aas
cld
push
push
(bad)
cmp
loope
pop
cmp
push
pop
test
neg
ror
jp
pop
mov
ds
adc
dec
hlt
jmp
shl
aaa
mov
sbb
js
lahf
iret
mov
jmp
push
adc
mov
shr
mov
ds
js
push
push
mov
or
std
push
shl
loopne
test
mov
sbb
xchg
mov
sar
lahf
and
repz
popf
sbb
stos
cmp
jge
aas
cmp
(bad)
jne
cli
jp
push
icebp
ret
retf
jmp
out
cmp
sub
mov
cmps
inc
adc
(bad)
mov
outs
push
xchg
mov
dec
stc
bextr
shr
mov
fmulp
repnz
cdq
or
dec
jmp
loope
pop
mov
fstp
dec
push
push
mov
xlat
sbb
jp
sahf
or
pop
push
or
stc
jp
mov
ins
lods
add
jne
mov
aam
mov
fsubr
fdivr
dec
adc
adc
std
sahf
xchg
jl
and
push
stc
or
sub
inc
push
inc
es
xchg
sbb
cs
imul
mov
xchg
dec
mov
mov
enter
xchg
lods
aas
add
(bad)
lods
push
dec
adc
mov
and
loope
lahf
cs
ins
sti
mov
fmul
in
mov
mov
sbb
adc
xchg
xor
call
das
sti
pusha
sub
fdiv
sbb
imul
loop
je
(bad)
sar
mov
jmp
cmps
cmps
inc
movs
jae
or
enter
add
pop
sbb
pop
lods
sbb
(bad)
and
mov
neg
in
arpl
sbb
xchg
aad
(bad)
or
in
pop
lahf
scas
inc
sbb
xchg
leave
and
lock
push
stos
cmps
stc
and
movs
in
int
push
cs
ins
sbb
xchg
lds
cmp
cmp
test
jg
cli
sub
sub
inc
mov
push
mov
fs
xor
jne
mov
ror
imul
pop
dec
jnp
mov
pop
xchg
movs
cmc
adc
loop
pop
and
rol
push
inc
add
test
test
xchg
pop
xchg
and
(bad)
outs
pushf
xor
cwde
in
shl
stc
cmp
shl
jne
sub
pop
sbb
fbstp
mov
cli
pop
pop
jl
pop
push
adc
or
push
and
outs
ins
mov
push
fcompp
movs
imul
sbb
pop
daa
xor
push
pusha
stos
dec
pop
imul
test
mov
mov
push
js
jne
xchg
mov
repnz
xchg
mov
push
sbb
push
scas
movs
jo
pop
leave
mov
(bad)
jmp
sub
add
xor
in
frstor
and
setge
dec
stos
aas
mov
mov
stos
push
imul
inc
push
and
retf
repz
or
add
rcr
jmp
(bad)
cld
mov
nop
inc
cmps
xchg
cld
ins
xor
xor
jge
clc
mov
jecxz
cld
xchg
into
push
out
adc
in
fisub
mov
inc
mov
xchg
ins
loopne
test
int3
popf
jno
ficom
cmp
and
scas
xor
sbb
int
xchg
ss
xchg
outs
into
add
sbb
and
push
(bad)
cdq
(bad)
pop
daa
in
out
mov
jae
retf
ret
adc
xchg
add
mov
push
dec
push
ds
xchg
mov
jmp
test
lea
xchg
mov
mov
sub
push
xchg
adc
leave
sub
in
adc
add
adc
mov
lds
sub
inc
scas
imul
test
sbb
(bad)
sbb
jno
sub
sub
jl
and
adc
ficom
(bad)
cmps
sub
sub
adc
lods
dec
mov
xor
jmp
pop
rol
jne
imul
adc
call
and
push
and
mov
mov
add
xchg
push
add
es
sub
dec
jmp
mov
jle
leave
rol
out
sub
xchg
jmp
cmp
cwde
lds
push
mov
(bad)
rcr
adc
outs
sti
mov
retf
lods
or
jns
and
sbb
call
fsub
mov
es
fimul
int
fisub
in
add
push
mov
sbb
stc
push
xchg
add
jmp
add
xchg
inc
mov
dec
popf
and
mov
cmps
mov
mov
xchg
test
and
add
hlt
jge
sbb
arpl
adc
push
xor
sbb
inc
dec
movs
dec
adc
adc
lds
inc
xchg
test
into
cld
jo
inc
mov
mov
jle
and
add
mov
nop
sub
aaa
retf
cld
std
add
pusha
rcl
mov
aas
and
jmp
push
stos
pop
adc
stc
cmc
mov
cmps
std
xor
inc
adc
mov
shl
ja
cmp
lahf
xor
js
adc
mov
or
xchg
mov
fild
into
mov
and
movs
xchg
mov
xor
mov
addr16
sub
dec
jmp
pop
inc
scas
sub
add
cmc
xchg
jecxz
and
dec
imul
fadd
sti
fstp
jmp
and
leave
scas
add
add
aaa
fwait
jne
das
jae
fnstsw
int3
mov
mov
push
arpl
inc
not
push
xor
addr16
out
std
out
lea
mov
dec
xor
mov
rcl
retf
sub
cmp
stos
and
cmp
sti
mov
jo
jbe
test
inc
rcl
xor
ror
add
out
cs
gs
aaa
fwait
dec
mov
icebp
in
xchg
jmp
push
jno
nop
mov
cld
cmp
and
lds
add
pop
cmp
test
pop
and
stos
nop
push
in
sub
jne
xchg
cmc
idiv
in
mov
ja
xchg
inc
inc
inc
pop
push
mov
ins
in
mul
scas
pop
es
push
mov
cmp
sar
out
ja
arpl
daa
xchg
xor
dec
sub
in
test
imul
push
jno
lahf
and
ds
and
lods
sub
push
outs
mov
adc
lahf
and
imul
inc
mov
aad
stos
adc
dec
in
mov
dec
fucomi
(bad)
push
iret
and
mov
pop
jmp
mov
and
and
nop
movs
das
popf
cmp
iret
dec
push
out
mov
pop
(bad)
xor
or
xor
rol
sbb
add
mov
lods
nop
mov
mov
adc
mov
stc
hlt
popa
jp
cmp
sub
or
jmp
inc
jg
or
jge
mov
out
(bad)
cmp
in
sub
addr16
fnstsw
fwait
imul
jns
in
pop
mov
fistp
jp
mov
mov
ret
mov
fimul
sub
sbb
dec
mov
mov
pusha
aas
xlat
not
mov
mov
sub
add
inc
or
pop
dec
inc
inc
mov
xchg
push
mov
fcom
xor
arpl
mov
push
daa
ja
push
push
nop
add
mov
jb
leave
mov
mov
shr
jo
int
enter
jge
pusha
das
mov
fsub
addr16
dec
add
sbb
cmp
jg
aam
(bad)
mov
loop
fmul
ret
mov
inc
inc
cmp
ds
fs
lock
add
mov
or
or
fidiv
xor
mov
imul
mov
adc
rcl
outs
test
jle
nop
or
adc
pop
int3
addr16
adc
shr
and
dec
push
dec
or
jns
shl
lods
sahf
stc
mov
inc
or
pop
adc
icebp
add
jmp
sub
(bad)
lock
mul
jb
fisttp
ret
add
clc
inc
pop
stc
cmp
fistp
add
dec
mov
sbb
push
adc
jmp
inc
call
jg
ds
xchg
jb
cmc
mov
mov
push
stos
clc
popa
movs
pusha
mov
int3
cmp
mov
je
in
mov
jge
pop
xor
out
mov
pop
icebp
ja
mov
repz
in
sbb
int
loope
xchg
or
push
xor
movs
mov
mov
ins
lods
push
push
lahf
or
jns
xor
lock
add
push
test
mov
shrd
sub
mov
in
jle
or
jg
jle
sbb
(bad)
mov
or
stos
jne
cmp
fxtract
inc
cmps
aaa
lea
xchg
aam
and
inc
cmp
sti
aaa
pop
std
(bad)
movs
cmp
imul
clc
mov
inc
call
dec
cmp
add
xchg
(bad)
pop
ins
jmp
les
inc
or
repnz
lahf
sub
mov
fsubp
sbb
add
push
mov
mov
jmp
fucomp
pop
jno
out
push
popf
fstp
dec
data16
test
dec
mov
sub
mov
repnz
dec
scas
test
mov
ins
mov
div
add
inc
cmc
test
sub
adc
std
fcmovb
push
mov
scas
inc
and
sti
pop
loopne
and
inc
jmp
add
stos
scas
inc
dec
pop
test
jp
inc
jne
add
add
and
pop
pop
cli
fdivr
jge
fimul
mov
push
mov
nop
aas
mov
fldenv
adc
mov
push
sbb
mov
icebp
xchg
cmps
mov
movs
test
mov
pop
pop
lahf
scas
and
movs
xor
outs
test
push
xor
mov
push
pop
nop
xor
push
adc
(bad)
inc
jae
out
cmp
inc
test
sub
add
inc
pop
repnz
adc
aas
ret
dec
pop
pop
pop
sub
cmp
push
js
scas
pop
aam
aas
(bad)
jmp
sbb
adc
ret
(bad)
cdq
aas
xchg
pop
mov
fdivr
dec
mov
add
nop
mov
add
inc
and
sub
cmp
dec
test
outs
cld
cmps
sti
fistp
dec
nop
cmps
mov
nop
cmps
sti
call
jmp
and
push
cmc
and
sub
jp
lods
cs
or
pop
push
addr16
sbb
aaa
repnz
mov
xor
jae
sar
pop
ret
mov
call
dec
daa
push
sbb
pop
ja
dec
sub
ror
popfw
call
test
jns
dec
popa
stc
add
add
mov
es
(bad)
loope
adc
and
pop
adc
adc
pop
jl
hlt
adc
jg
sub
data16
inc
lods
test
jle
xchg
lahf
mov
mov
add
fwait
jno
int3
push
stos
push
xchg
lods
nop
inc
pop
bound
test
xchg
mov
arpl
fldcw
xchg
xchg
mov
adc
add
jp
bnd
mov
scas
jb
mov
jge
ficomp
inc
ins
sub
push
xchg
cmp
pusha
cli
icebp
cmp
fnstcw
stos
adc
enter
cmps
xchg
cmp
rol
sub
mov
sbb
(bad)
ins
pop
pop
(bad)
push
aas
mov
mov
js
xor
cmp
in
(bad)
ficomp
ds
fsubr
push
or
int3
fimul
test
dec
shl
fwait
retf
cmps
es
pop
repnz
mov
xor
jns
push
jg
test
and
xor
pop
inc
push
fsub
or
stos
lods
pop
mov
es
retf
cmp
retf
mov
cs
call
and
shl
daa
(bad)
mov
pop
call
ret
push
xchg
inc
dec
cmp
nop
push
retf
mov
fcomp
xor
lods
mov
add
xchg
movs
sub
iret
sbb
cld
int
sub
aam
push
nop
xor
add
loop
sahf
pushf
jno
out
mov
hlt
sbb
nop
xor
ja
pop
loope
in
cmp
mov
cmp
lods
pop
dec
(bad)
jmp
pop
into
xchg
mov
xchg
out
mov
fbld
ds
adc
movs
shr
icebp
and
enter
push
push
xchg
ins
hlt
mov
arpl
nop
movs
mov
push
mov
in
mov
lods
in
cmp
out
arpl
pop
adc
push
mov
ror
push
fidiv
and
adc
(bad)
or
loopne
push
mov
mov
dec
dec
jl
cs
sub
enter
mov
imul
or
mov
cmc
(bad)
sahf
fidiv
and
sub
jl
cmps
add
cmp
stc
pop
xchg
cmp
lea
adc
push
mov
cmp
les
cld
mov
and
or
call
and
scas
xchg
add
mov
and
add
(bad)
xchg
dec
rcl
stos
out
dec
fnstsw
jge
and
cmp
js
add
sbb
call
in
gs
or
or
adc
pop
jno
hlt
into
lea
cmc
ds
imul
mov
jl
mov
adc
pop
gs
push
frstor
shr
int3
cmp
add
push
cld
stos
cld
mov
mov
js
ror
push
imul
xor
pop
fmul
cmp
aam
jns
pop
mov
mov
das
push
rcl
push
jg
dec
dec
push
rol
or
movs
in
movs
pop
adc
aas
jecxz
ficomp
push
pusha
and
xchg
loope
xchg
inc
and
and
hlt
pop
and
jnp
jno
pusha
test
push
xor
cmp
cmps
aad
jmp
xlat
and
add
in
push
adc
arpl
addr16
in
inc
add
xor
mov
sahf
cmp
pop
mov
push
jns
js
inc
addr16
les
daa
cdq
sub
or
jo
or
push
popf
or
jns
xchg
push
inc
mov
jecxz
call
mov
xchg
data16
or
sub
out
arpl
arpl
mov
scas
stos
out
in
iret
mov
ret
imul
sbb
repz
sub
mov
test
lds
rcr
push
jae
jp
xor
(bad)
ror
dec
xchg
fidivr
not
call
popa
in
icebp
mov
jno
gs
xchg
push
mov
fdivr
imul
xor
rcr
pop
cmc
lods
xchg
pop
xchg
xor
ret
xchg
inc
or
push
mov
into
cmps
dec
or
enter
add
mov
stc
cmp
pushf
cmp
add
inc
xor
jg
fs
inc
xor
pop
arpl
int
jg
pop
xor
mov
sub
js
(bad)
and
repz
push
into
repz
std
mov
mov
bndldx
cmp
inc
add
jp
xor
mov
inc
das
xchg
clc
arpl
inc
and
inc
ja
les
cmp
les
pop
(bad)
mov
push
lods
push
mov
adc
aas
cmp
outs
jg
dec
loop
test
sub
add
cmp
stc
fisubr
pop
sbb
xchg
dec
es
icebp
(bad)
nop
dec
movs
push
(bad)
mov
rol
iret
xor
sbb
xchg
in
dec
and
ins
(bad)
jbe
sub
xchg
loope
lea
js
push
pop
lahf
inc
sti
jge
push
aas
jo
loope
xchg
or
and
adc
push
or
sti
xchg
jns
xchg
scas
jbe
pop
shl
iret
call
dec
out
pop
mov
cld
lods
mov
scas
(bad)
je
nop
push
push
int
or
(bad)
shl
adc
popa
inc
fisttp
push
int
loop
dec
jmp
fidiv
xor
xor
mov
mov
inc
inc
aad
push
inc
add
push
loope
jmp
xchg
mov
jae
retf
pop
das
pusha
outs
out
mov
mov
popa
inc
push
mov
inc
jmp
retf
adc
cmp
pop
cdq
stc
pusha
jo
dec
jp
imul
nop
(bad)
or
fisubr
push
sub
daa
jo
add
sbb
repnz
stc
je
cmps
push
hlt
imul
lods
leave
mov
aas
xlat
fst
mov
xchg
mov
ret
aas
aad
stc
hlt
mov
loopne
jmp
mov
std
xchg
fldenv
loop
or
xor
push
dec
pop
pop
sbb
jg
(bad)
adc
jp
sbb
(bad)
sub
mov
stc
push
push
cmp
dec
cmp
cmp
or
sub
fwait
mov
sub
int3
jnp
cmp
xlat
xor
es
mov
jge
and
sub
adc
or
jno
add
dec
sahf
xor
adc
jl
rcl
outs
rol
shl
mov
cmp
xchg
mov
push
(bad)
jmp
cmps
mov
push
jb
adc
imul
cmps
jmp
jmp
das
bound
inc
inc
inc
sbb
sbb
loopne
call
sub
fiadd
es
dec
add
push
dec
ret
popa
push
mov
sub
nop
mov
loopne
dec
and
icebp
imul
dec
and
ja
pop
push
(bad)
mov
inc
das
dec
or
cwde
mov
mul
sar
hlt
mov
fstp
scas
inc
dec
or
icebp
iret
dec
cmp
enter
(bad)
push
hlt
pop
lock
inc
cmp
cmps
sbb
dec
mov
ds
cs
add
bound
mov
lods
pop
xchg
add
aam
mov
lods
push
mov
xor
(bad)
bnd
cmp
ins
dec
push
mov
daa
adc
call
out
push
mov
repz
add
jecxz
pop
jnp
stc
cmps
jne
dec
mov
mov
jnp
test
mov
addr16
sbb
pop
fnstenv
jno
or
mov
icebp
push
push
jecxz
bound
test
push
jmp
xchg
pop
cmc
popf
dec
out
mov
nop
leave
and
dec
dec
sub
push
xchg
inc
jno
aad
cmp
out
push
or
shl
xor
xor
fstp
aam
aas
mov
enter
addr16
jb
test
add
test
movs
xor
enter
mov
xchg
ja
aaa
xchg
sub
int
push
jl
xchg
add
and
inc
sbb
jmp
pop
push
xchg
sub
sahf
xor
rol
or
lahf
sahf
imul
into
out
fcom
js
stos
jmp
adc
(bad)
cmp
repnz
add
inc
mov
lods
movs
cld
je
stc
fs
das
mov
xchg
adc
xor
mov
mov
lea
push
xor
jne
call
and
dec
ds
loope
dec
mov
into
(bad)
push
(bad)
dec
lahf
add
mov
xchg
mul
and
in
fs
mov
cli
jecxz
inc
call
add
retf
cmp
fstp
into
dec
cmp
push
mov
pop
fist
std
jge
jge
push
fs
(bad)
ins
inc
mov
or
jne
sahf
jle
xor
cmp
sub
push
dec
pop
push
and
fs
jmp
cdq
bound
mov
mov
jnp
push
or
push
xor
test
icebp
mov
adc
sbb
sti
sbb
sbb
retf
push
shl
stos
test
cmp
and
or
shl
loopne
xchg
dec
add
add
dec
mov
jl
shl
jmp
enter
adc
les
into
add
sahf
xchg
cmps
cmp
(bad)
sbb
enter
imul
les
in
add
add
adc
push
and
mov
pop
adc
sub
adc
lahf
aas
mov
movs
xlat
adc
movs
push
call
jmp
push
in
(bad)
repz
outs
ins
in
pop
sbb
in
es
mov
sahf
mov
arpl
xchg
sbb
repz
mov
fnstenv
or
les
rcl
(bad)
mov
adc
sbb
test
sub
push
mov
loop
bound
and
jp
and
loop
imul
ret
inc
add
push
in
push
lahf
push
(bad)
sahf
rcr
push
scas
jmp
pop
xor
sub
push
add
adc
sahf
adc
push
lea
cmp
xor
dec
mov
xor
cdq
adc
jb
lock
fild
or
xor
push
iret
ror
lods
dec
cmc
test
and
gs
add
scas
push
shl
inc
dec
sbb
fimul
gs
cmp
push
jg
mov
scas
adc
adc
mov
xor
sub
mov
sar
jp
ss
or
jecxz
xchg
mov
xchg
out
sbb
or
cwde
pop
adc
xor
test
ror
not
sbb
js
test
lock
or
std
mov
in
mov
push
push
inc
xchg
repnz
pop
push
xchg
test
(bad)
fiadd
xor
jnp
(bad)
mov
jns
ret
cli
arpl
aam
inc
sub
xchg
jmp
or
cmp
push
std
sahf
mov
and
xchg
jp
jge
push
enter
push
dec
pop
mov
icebp
lds
jmp
inc
imul
push
dec
xor
call
shl
jb
add
xchg
xlat
scas
test
mov
sahf
push
or
or
sub
add
add
clc
(bad)
ficomp
gs
daa
sub
outs
call
mov
mov
mov
push
jns
(bad)
in
imul
outs
cmp
retf
fiadd
jp
adc
popa
(bad)
cmp
and
and
xor
pop
aam
popa
imul
mov
retf
mov
cmps
push
and
inc
cmp
cld
jmp
je
jge
stos
fistp
add
xor
pop
pop
cwde
mov
rol
jmp
mov
shl
gs
mov
enter
movs
pop
inc
pop
jb
cs
xor
push
adc
mov
push
inc
cmp
in
cmc
iret
(bad)
lahf
das
outs
into
das
inc
mov
shr
add
push
cs
and
mov
test
cmps
push
(bad)
dec
xchg
fidiv
mul
in
aad
mov
jno
xchg
dec
or
xchg
push
pop
push
add
ret
or
add
dec
stos
or
cmps
sahf
cmp
sub
adc
jge
xchg
(bad)
xor
sbb
adc
test
add
sub
ds
xor
aaa
bound
xchg
hlt
add
scas
sub
mov
enter
daa
(bad)
int3
mov
jno
add
call
aad
rcl
pop
nop
xor
and
lods
and
mov
outs
jg
lods
add
sub
movs
add
(bad)
mov
jmp
fstp
sbb
imul
mov
xor
sbb
cmp
and
sub
xchg
pop
dec
pop
leave
sub
jmp
cmc
jge
cmps
mov
in
dec
adc
in
movs
xor
out
or
push
mov
mov
jo
iret
cmps
cvtpi2ps
(bad)
jle
cmps
ret
push
retf
push
sar
jmp
mov
dec
loope
lea
xor
adc
pop
mov
xlat
pop
lods
ret
mov
mov
push
xchg
mov
jns
mov
(bad)
mov
sub
arpl
adc
add
out
stos
dec
mov
pop
out
in
in
pop
ss
in
fadd
xor
and
pop
lea
sbb
xor
cmp
lods
jb
ds
mov
pop
scas
pop
int
xor
xchg
dec
cld
rcl
aam
mov
jno
stos
cld
push
push
ja
ins
pop
sub
imul
jg
ror
inc
dec
cmc
scas
stos
xchg
push
retf
repz
cmp
push
xor
mov
daa
xchg
pop
xchg
jno
push
div
xchg
cmc
shl
test
add
push
or
dec
jo
sbb
dec
and
call
shl
addr16
loopne
lods
or
mov
and
sti
outs
cmps
clc
jnp
mov
xchg
jns
pop
hlt
xchg
pop
inc
js
and
xor
and
sbb
mov
aam
shl
(bad)
int3
ins
jecxz
inc
rcl
out
inc
dec
cmp
rcr
mov
xor
cmps
and
sub
jecxz
jae
push
xchg
stc
je
loopne
sbb
pop
sbb
bound
xchg
cmp
push
add
stos
sub
int3
dec
daa
ror
(bad)
mov
cs
xor
adc
imul
or
mov
push
push
cmp
retf
sbb
xchg
je
dec
jecxz
push
pop
push
ret
mov
jecxz
stos
test
sti
add
xchg
pop
dec
jns
and
adc
xchg
sub
inc
ret
ds
(bad)
outs
popf
jge
cdq
cs
xchg
xchg
sahf
stos
sub
dec
inc
inc
data16
in
xchg
fadd
movs
mov
cmp
cmps
imul
cmps
xchg
repnz
cmp
imul
xchg
sahf
in
ds
mov
fwait
inc
adc
fldenv
push
xchg
iret
xchg
cmp
scas
xor
mov
inc
push
repnz
push
and
xchg
inc
cmp
xor
jp
jb
mov
jns
mov
mov
sub
and
ret
fdivr
ds
and
adc
cmp
out
cmp
jmp
mov
rol
inc
sub
pop
dec
out
in
and
leave
stos
push
test
rcr
and
retf
jnp
aas
in
ss
jbe
mov
rcl
jno
not
add
inc
dec
mov
cmp
mov
fs
(bad)
out
out
pop
pop
je
jmp
sbb
push
add
add
jecxz
shl
and
inc
(bad)
sub
shr
aad
test
js
mov
ja
div
imul
push
lods
dec
add
lahf
dec
adc
arpl
push
icebp
scas
add
test
lahf
cmps
mov
pop
fisub
cmps
cmps
mov
push
ss
mov
pop
push
pusha
push
xchg
icebp
cmp
loope
mov
enter
sub
(bad)
(bad)
(bad)
(bad)
mov
cs
sahf
xchg
sbb
push
int3
or
ds
lods
and
add
jmp
aas
add
js
pop
xor
cld
cli
pop
in
fild
adc
arpl
and
je
movs
(bad)
ror
jmp
and
xor
dec
das
jmp
test
inc
xchg
(bad)
movs
je
mov
sub
xchg
leave
or
jns
sbb
jmp
(bad)
xchg
fnstcw
mov
out
cld
mov
push
movs
xchg
pop
sbb
js
xchg
lds
jge
fs
bound
std
mov
out
outs
cmp
pop
ja
sbb
inc
sub
int
xor
or
push
jp
mov
pop
inc
mov
xchg
inc
mov
mov
aas
jae
mov
hlt
aas
lahf
addr16
sti
lds
aas
js
dec
or
mov
clc
jp
outs
mov
(bad)
and
pop
mov
shl
test
cmp
and
lock
mov
sbb
add
cld
jl
mov
daa
push
test
aaa
fiadd
lahf
bound
frstor
dec
push
cld
mov
into
mov
sbb
mov
iret
mov
cmps
loopne
pop
push
dec
adc
mov
jp
sbb
dec
or
cmp
(bad)
int
call
push
sbb
xchg
sbb
sbb
mov
(bad)
arpl
push
sub
push
aas
xchg
inc
aaa
stc
mov
sub
lods
movs
mov
loop
mov
inc
jb
ret
sbb
sbb
sbb
neg
xchg
mov
out
dec
test
test
test
arpl
mov
jle
das
mov
repz
or
adc
rol
push
jecxz
ins
iret
(bad)
(bad)
test
mov
sbb
mov
or
adc
inc
push
(bad)
pop
jl
dec
xchg
jmp
and
imul
jnp
call
xor
arpl
ds
aas
out
aad
adc
and
and
fild
movs
xor
mov
mov
stc
sahf
test
mov
pop
aas
aas
out
sub
or
mov
idiv
scas
dec
sbb
dec
ret
inc
addr16
xchg
sar
in
jmp
inc
movs
add
mov
call
pop
sti
push
jns
and
jp
pop
in
adc
shl
add
xchg
and
pop
xor
push
pop
movs
jo
dec
inc
fild
mov
js
cdq
adc
push
aam
call
test
xor
or
mov
hlt
imul
imul
mov
movq
sbb
add
cmc
scas
add
in
(bad)
jge
push
mov
pusha
std
mov
repz
pop
sbb
mov
push
scas
pop
jge
xor
dec
and
inc
mov
sar
dec
pop
push
lock
rol
mov
mov
mov
les
push
pop
not
cmp
sbb
xor
jp
sti
push
mov
sahf
fidiv
loop
sub
inc
xchg
stc
jmp
or
sbb
or
xor
cmc
jae
dec
call
push
and
mov
xchg
aam
repnz
in
push
ret
adc
jne
and
leave
lods
imul
cvtpi2ps
ror
xchg
xor
leave
jmp
inc
idiv
jmp
xor
cmps
dec
iret
inc
mov
mov
push
pop
ins
or
ds
(bad)
pop
jmp
pop
jne
mov
pop
jle
cli
pop
mov
inc
xor
push
out
ret
dec
xor
jge
stc
hlt
shl
call
pop
fcomp
aas
pop
adc
ds
das
xchg
aam
jp
into
outs
out
adc
inc
sub
mov
movs
jp
sbb
retf
fisttp
popf
cmp
inc
dec
ins
mov
out
cmps
dec
pusha
fisub
pop
and
xchg
dec
jo
cmps
iret
xchg
cmp
xor
sar
xchg
fcmovu
fld
push
add
mov
mov
jne
repz
stc
push
arpl
das
lods
das
dec
cmp
sub
cmps
repnz
inc
sti
(bad)
mul
retf
pop
lahf
sbb
xchg
pop
sbb
xchg
add
repz
test
or
mov
sub
add
jno
jnp
add
inc
jp
(bad)
jae
push
xchg
adc
arpl
out
jg
cmps
mul
lods
inc
out
jb
iret
hlt
imul
adc
and
enter
lahf
push
fst
dec
loopne
clc
inc
js
mov
stos
dec
stc
hlt
push
sub
mov
inc
addr16
int
xchg
and
add
movs
push
mov
jge
mov
lods
jo
aam
cmc
push
mov
mov
dec
loop
call
add
push
jo
retf
xchg
loopne
iret
dec
icebp
mov
aam
xor
mov
int3
xchg
xchg
inc
xchg
push
ins
call
xor
cmp
xor
shl
inc
adc
mov
mov
movs
add
pushf
aaa
out
sbb
dec
jle
rol
dec
ins
loopne
test
icebp
bound
sbb
xchg
mov
sbb
cdq
test
push
in
xchg
adc
xchg
lds
imul
push
cmp
sub
pushf
mov
pop
iret
adc
inc
mov
jnp
iret
jnp
mov
ret
retf
sar
js
xchg
call
add
xor
jle
xchg
not
not
out
and
push
push
or
sub
mov
jne
je
jle
xchg
jns
and
push
inc
push
sbb
repz
and
or
in
pop
fsubr
xchg
aam
imul
jno
mov
(bad)
jecxz
mov
xchg
xor
cdq
and
push
mov
dec
cmps
paddsb
sub
dec
dec
stos
fdivr
aas
mov
retf
mov
ret
(bad)
dec
mov
dec
dec
xchg
dec
cmp
dec
test
sbb
aam
ss
mov
ffree
jnp
inc
loope
xchg
rol
push
pusha
or
jne
sbb
jae
add
dec
(bad)
(bad)
and
mov
inc
push
cmp
push
rcr
std
mov
in
push
adc
sub
mov
dec
ret
pusha
xor
mov
loope
aad
push
stos
or
clc
mov
cmp
ss
jge
xor
mov
scas
dec
or
mov
lock
pop
fcmove
xchg
xlat
mov
add
or
xchg
shr
(bad)
fidivr
pushf
and
xchg
fisub
jns
inc
enter
bound
mov
jecxz
loopne
ds
call
dec
sub
inc
jg
shl
popa
mov
inc
mov
(bad)
rol
jb
shr
pusha
(bad)
aaa
gs
iret
jl
fs
shl
sub
rcl
xor
adc
lods
and
sub
jbe
adc
aas
lea
mov
lea
(bad)
jne
retf
adc
xor
mov
outs
dec
call
and
mov
push
jne
xchg
bound
and
aad
ins
fcomp
popf
mov
mov
in
mov
mov
loopne
xchg
clc
int
pop
dec
sub
lods
xchg
mov
and
xchg
dec
sbb
sub
fwait
jbe
addr16
mov
mov
lock
cmps
mov
pop
(bad)
out
(bad)
pushf
dec
stos
xor
push
add
add
pop
loopne
inc
xchg
push
cmp
mov
pop
pop
cmp
fnstenv
push
repnz
std
mov
clc
sub
aam
lods
adc
shr
mov
rcl
scas
in
pusha
mov
cdq
pushf
popf
xor
stos
and
sub
in
not
pop
ret
pop
xor
loop
ret
stos
push
xchg
dec
sbb
dec
cmp
ja
aaa
push
inc
sub
pop
xchg
mov
aam
fs
in
push
add
pop
or
xchg
add
imul
adc
mov
sbb
sub
sbb
mov
ja
jbe
(bad)
mov
xor
pop
mov
xor
push
push
cmp
mov
add
or
ss
lea
test
fcom
xor
ret
jb
adc
imul
mov
xor
sbb
es
call
mov
push
ret
les
je
cmc
push
rcr
mov
stos
div
pop
push
and
sbb
xchg
lods
pop
cmc
pop
cmp
sub
xor
mov
stc
and
jno
bound
add
shl
inc
ins
ss
jbe
ins
push
inc
add
pop
pop
push
out
icebp
cmp
out
fstp
idiv
inc
dec
push
mov
pop
dec
ins
cmp
or
lea
push
mov
push
push
pop
mov
add
in
repnz
mov
mov
push
adc
mov
repnz
add
xchg
push
mov
iret
jne
sahf
aaa
mov
ret
shl
arpl
xor
jmp
outs
ror
bound
sub
add
add
dec
push
shr
inc
xor
aaa
shl
cmps
mov
pop
(bad)
loopne
dec
mov
cmp
repnz
loope
retf
jp
test
or
pushf
shl
cld
sub
mov
ds
pop
(bad)
push
xor
pop
mov
mov
shl
adc
sub
mov
scas
mov
add
out
jg
pop
sahf
push
fstp
sbb
xor
sbb
popf
dec
movs
push
inc
dec
in
popf
gs
(bad)
fldcw
outs
and
out
adc
les
push
xor
imul
(bad)
or
push
stos
add
pop
xor
xor
fist
jge
aad
retf
or
adc
xchg
ret
pop
dec
jnp
mov
push
arpl
mov
jp
xor
jae
cmp
imul
rcl
xor
cmp
and
test
mov
fs
(bad)
(bad)
push
retf
push
xor
call
and
mov
push
das
cmc
and
int3
mov
dec
je
xchg
pop
jg
neg
outs
jae
xor
push
in
jne
pop
xchg
icebp
out
and
in
add
sub
push
add
test
push
xchg
push
(bad)
enter
cmps
std
outs
das
in
dec
add
popf
inc
sti
mov
mov
and
add
hlt
xchg
stos
ins
add
xchg
xchg
inc
mov
mov
pop
xlat
or
dec
mov
jge
shl
aas
idiv
mov
cmp
dec
and
add
stos
mov
out
shr
icebp
out
jecxz
idiv
setge
mov
dec
mov
(bad)
sbb
(bad)
fnstenv
sub
(bad)
mov
out
in
add
aaa
mov
ja
jb
mov
je
shr
in
dec
fnsave
cmp
not
aad
jnp
call
loopne
inc
dec
cmps
ret
dec
imul
mov
push
pop
mov
push
inc
sbb
push
inc
sbb
fadd
xchg
cld
iret
mov
out
pop
inc
or
jnp
in
(bad)
mov
xchg
retf
or
or
dec
adc
cld
cli
retf
int
fimul
push
xchg
jne
std
mov
sub
pop
dec
(bad)
retf
and
jmp
or
add
mov
inc
cmp
clc
mov
and
nop
scas
das
jnp
ror
mov
jnp
push
mov
cmps
pop
fucomp
pop
xor
ficomp
inc
sbb
and
push
push
dec
and
push
and
inc
adc
mov
add
xchg
cmp
pop
fstp
dec
ja
mov
push
jl
inc
pop
scas
cld
push
inc
push
(bad)
ret
sbb
jl
stos
mov
xchg
add
inc
cmp
push
test
(bad)
adc
fdiv
and
cmps
lods
inc
xchg
in
mov
in
xchg
sbb
(bad)
and
pusha
test
sbb
sub
rcl
test
dec
movs
pushf
add
add
push
mov
sub
test
mov
std
cs
out
push
add
dec
cli
sar
pop
add
add
adc
ss
mov
sti
fwait
sub
rcl
mov
xchg
pusha
xor
add
xor
lods
ss
push
mov
data16
loop
mov
jnp
cmps
rol
dec
inc
aad
xor
test
out
out
fcom
cmc
out
pop
xor
lock
clc
mov
push
sbb
or
inc
push
pop
push
es
aad
jl
mov
and
inc
and
cmp
imul
popf
pusha
std
xor
mov
movs
mov
in
ins
xor
fwait
push
test
push
adc
imul
ficomp
jnp
push
sub
je
cmp
bound
xchg
cmp
dec
xlat
dec
mov
push
jbe
test
sub
push
pop
imul
and
sub
iret
sbb
cmp
arpl
or
xchg
dec
xor
in
aad
cmc
mov
int
loop
dec
lahf
nop
sbb
mov
fistp
mov
imul
retf
sub
sub
daa
push
xchg
les
push
dec
mov
push
clc
lods
mov
mov
xchg
ss
(bad)
sbb
push
je
dec
out
dec
hlt
mov
ror
enter
clc
inc
nop
daa
sar
add
(bad)
aas
xor
ret
movs
or
je
and
sub
pusha
push
aad
hlt
psadbw
in
fcomp
pop
je
xchg
scas
es
adc
xor
sub
xor
mov
mov
jbe
dec
cdq
mov
leave
stc
jne
push
std
out
fcmovnb
jmp
mov
les
stos
dec
bound
sbb
sbb
stos
jne
mov
xor
xor
push
dec
pop
test
in
add
add
push
ds
aaa
out
aaa
lods
inc
cli
push
ins
in
sub
inc
scas
aad
mov
add
adc
dec
sbb
cmps
mov
ss
mov
push
scas
and
nop
mov
pop
push
leave
and
add
mov
dec
fnstsw
lds
adc
lahf
xor
in
mov
lods
adc
xchg
sub
pop
and
fild
sub
ficomp
(bad)
fnstsw
fdivr
cmp
push
ss
sti
ficomp
mov
mov
test
loopne
inc
mov
loop
pop
lock
sub
out
jnp
enter
push
and
pop
push
push
and
in
pop
aam
jp
leave
jl
int3
das
mov
xor
and
mov
ret
les
movs
mov
aam
and
push
add
jge
fwait
mov
mov
cmp
imul
pop
sbb
int
cdq
sbb
imul
pop
pop
mov
jmp
es
and
adc
imul
sahf
sbb
inc
pop
mov
cmp
scas
add
mov
xor
or
mov
(bad)
mov
or
imul
mov
das
jg
call
xchg
pop
sbb
xor
push
repnz
addps
int
lds
pop
add
push
sub
aam
jmp
pop
sub
fs
int3
rcl
sbb
adc
add
movs
add
push
outs
add
cmp
pop
xchg
adc
sub
jle
pop
mov
aas
out
ins
mov
ja
push
xor
pop
(bad)
adc
dec
sub
cli
push
adc
push
cmps
add
cmp
jmp
les
shl
stos
mov
mov
loop
nop
mov
sub
mov
test
xor
movs
fnstsw
movs
or
dec
data16
push
test
call
arpl
or
scas
in
push
sbb
je
fistp
push
cmp
inc
jmp
in
retf
loop
push
(bad)
aam
push
imul
and
inc
mov
jnp
cld
mov
xor
lahf
neg
jecxz
mov
aam
push
dec
and
mov
(bad)
dec
adc
les
push
jne
test
jp
xchg
fwait
push
cdq
call
push
cs
cmps
adc
mov
ficomp
mov
ss
push
push
fs
mov
xor
cdq
fstp
out
mov
ds
mov
and
rcr
(bad)
and
in
loopne
jo
js
js
push
je
push
stos
div
xchg
add
and
mov
out
sub
(bad)
fld
imul
scas
lods
movs
adc
xchg
xor
clc
xor
mov
inc
dec
push
xchg
push
out
ins
pop
div
imul
cmc
jle
es
and
sub
imul
inc
sbb
push
fsubr
push
jnp
add
mov
adc
pushf
inc
test
call
xchg
and
add
or
std
sub
ins
jnp
frstor
daa
enter
and
popf
push
std
mov
fwait
outs
push
sub
jo
and
push
push
and
cdq
loope
cmps
mov
mov
pusha
adc
or
jnp
dec
test
sub
mov
in
jecxz
sbb
ror
stc
lock
jle
shl
retf
mov
fld
add
push
xor
jmp
in
sbb
jmp
xor
add
lahf
dec
jl
inc
dec
inc
adc
pop
loop
ss
clc
inc
push
add
gs
xchg
cmps
cmp
rcr
jae
test
fwait
jmp
(bad)
xor
push
stc
je
lods
adc
jmp
add
cmp
pop
inc
(bad)
aad
mov
not
sbb
cmp
pop
call
xchg
mov
sub
mov
jae
xor
retf
lahf
test
ds
sbb
out
or
adc
mov
fisttp
inc
(bad)
dec
xchg
enter
push
and
mov
inc
jae
inc
shl
jmp
ja
(bad)
into
rol
push
stos
push
inc
div
jmp
arpl
mov
jg
mov
mov
jmp
sub
clc
int3
or
dec
test
dec
js
jno
push
(bad)
iret
push
or
fcomi
mov
shl
popa
movs
sbb
add
imul
leave
retf
dec
sub
aad
and
or
add
into
cmps
cmp
inc
pusha
test
movs
outs
push
sub
out
das
jno
fs
ins
call
stos
(bad)
(bad)
in
mov
jns
fsubp
pop
push
xor
push
add
push
inc
out
retf
or
movs
push
inc
call
xchg
cs
mov
call
mov
pop
jl
jle
pop
sbb
and
pop
(bad)
mov
or
stos
add
jg
lahf
repz
inc
pop
pop
ror
mov
arpl
imul
inc
push
not
sub
dec
push
push
mov
sbb
pop
pop
in
jns
pushf
retf
adc
ret
shl
outs
int
sub
mov
mov
mov
or
mov
add
cmp
jnp
and
pushf
cmp
mov
dec
fadd
and
dec
popa
test
in
jg
pop
mov
in
(bad)
gs
and
sbb
fstp
std
into
cmp
out
pop
loope
retf
xchg
mov
jle
in
(bad)
or
inc
sub
movs
test
xchg
mov
add
jp
(bad)
jae
stos
xor
fidivr
outs
add
lods
iret
cli
fmulp
rol
outs
mov
loop
(bad)
mov
add
inc
jnp
imul
cwde
aaa
sub
cld
jmp
jmp
sub
fcomp
enter
mov
lahf
ds
ss
test
ret
dec
hlt
cmps
mov
sti
repz
cld
jnp
lahf
xlat
test
retf
movs
ins
add
rol
stos
inc
pop
jge
(bad)
dec
outs
xor
aam
mov
mov
lock
jge
cmp
int3
push
pop
(bad)
outs
(bad)
cmc
std
aas
lods
std
xchg
inc
and
xor
dec
sub
(bad)
pop
lock
movs
cmps
sub
aaa
movs
ins
inc
xchg
cmp
add
xchg
dec
sub
repnz
mov
inc
mov
pop
mov
je
clc
out
jge
dec
xchg
sbb
(bad)
cmp
mov
xchg
sbb
and
gs
push
add
pop
xchg
in
cmp
push
mov
sar
aas
dec
jns
fdiv
out
fldcw
mov
sub
jns
loopne
mov
cwde
nop
jne
sbb
push
icebp
mov
add
in
mov
add
pop
pop
stos
iret
sub
call
inc
xchg
mov
inc
add
add
sub
mov
pop
mov
inc
cmp
pop
scas
out
dec
adc
sti
mov
xchg
sbb
mov
xlat
push
aad
fld
dec
inc
cmp
xor
fistp
xchg
call
sbb
add
jge
jmp
(bad)
xor
fucomp
fs
fsub
xchg
mov
cs
out
and
sub
dec
adc
lahf
cmp
arpl
ret
or
cli
mov
outs
jae
mov
ret
fsubr
and
sub
inc
sahf
xchg
jmp
inc
and
bound
cmps
loopne
lock
jmp
adc
sub
sub
mov
in
pop
inc
rcr
jnp
sahf
repz
mov
fstp
jns
ret
test
aad
cmp
sbb
xchg
imul
je
in
in
xchg
push
inc
or
xor
push
or
sub
mov
idiv
mov
cmp
push
test
push
and
add
arpl
loop
jecxz
xor
call
cmps
adc
cmp
sub
dec
nop
xchg
pop
push
(bad)
in
fst
adc
push
cdq
and
sahf
inc
push
test
dec
and
call
ins
adc
inc
(bad)
enter
mov
stos
jmp
(bad)
enter
outs
icebp
pop
mov
fstp
mov
push
adc
dec
sub
idiv
and
adc
jae
push
push
mov
jge
sbb
xchg
in
adc
outs
out
pop
inc
addr16
div
mov
mov
and
mov
scas
xlat
push
cs
shl
fisttp
movs
cmp
jb
mov
in
call
push
rol
shr
xchg
sbb
dec
push
mov
mov
dec
sbb
call
retf
call
imul
xor
cmp
rcr
adc
or
(bad)
fmul
(bad)
add
mov
push
jmp
and
xchg
dec
out
mov
inc
add
xor
adc
cmp
jno
xchg
leave
and
adc
addr16
test
mov
push
xchg
xchg
adc
(bad)
push
mov
aaa
ds
pop
in
fwait
xchg
test
mov
cmps
cmp
gs
sbb
jmp
ror
inc
and
int3
fidivr
ror
fdiv
xchg
cs
xchg
(bad)
sti
aas
xchg
dec
inc
arpl
shl
jo
imul
and
mov
stc
jp
dec
fcmovnbe
jno
sub
add
add
neg
(bad)
push
sub
fsub
mov
pop
sbb
cld
mov
test
das
mov
add
pop
jo
cmps
xchg
outs
mov
ins
mov
cmp
dec
inc
sbb
scas
fcmovnbe
hlt
test
sub
fwait
add
add
iret
shr
in
cmp
pop
fld
pop
pop
mov
mov
icebp
sub
adc
pushf
xor
test
sbb
mov
loope
daa
call
pop
xchg
inc
jbe
sub
inc
scas
lahf
mov
repz
dec
and
and
test
lods
sub
aam
cmc
push
jg
std
cmp
push
add
sbb
mov
push
popf
imul
stos
in
sub
dec
test
jp
in
push
inc
push
test
sub
cli
stc
inc
xchg
in
aad
pop
sub
das
jle
pop
neg
xchg
loop
jb
pusha
cmc
inc
pmaxub
cmp
push
xor
mov
jmp
dec
and
iret
enter
enter
fs
mov
push
push
push
mov
jmp
test
call
test
ja
test
or
ds
cmp
or
xchg
dec
adc
push
(bad)
adc
push
dec
push
xor
sbb
mov
ret
rol
or
in
in
inc
scas
aas
int
pop
push
(bad)
sti
lea
imul
mov
or
retf
mov
(bad)
ucomiss
in
push
xlat
mov
inc
inc
sbb
or
test
push
aam
mov
push
push
pop
and
cmp
in
(bad)
mov
pop
outs
and
inc
xchg
cmps
inc
ja
dec
sub
push
inc
xor
xor
rcl
loop
push
xor
enter
addr16
sub
push
sbb
add
and
leave
mov
or
xor
movs
pop
and
mov
xor
jo
lds
or
push
mov
jg
mov
out
pop
pop
jecxz
movs
mov
ins
mov
pop
fnstenv
out
in
(bad)
xchg
arpl
sbb
sahf
jns
cmps
xchg
push
(bad)
jl
xor
xchg
push
or
repz
inc
and
push
aam
push
rcl
xchg
push
sub
sub
test
add
mov
mov
mov
or
jmp
out
jmp
inc
into
repnz
cmps
sub
in
(bad)
mov
inc
mov
aam
dec
sbb
mov
mov
mov
test
outs
mov
out
sar
adc
sub
ins
call
les
xchg
or
xchg
adc
adc
adc
dec
inc
enter
dec
xchg
stc
test
push
cmps
pop
dec
ds
movs
popa
sbb
or
mov
sub
sub
jne
mov
xlat
fdiv
xchg
out
lds
ins
xor
push
shl
dec
bswap
xchg
mov
mov
sub
outs
xor
push
dec
imul
iret
sub
outs
arpl
das
adc
pop
dec
and
aad
xor
jmp
xchg
lods
(bad)
ss
pop
fsub
int
mov
sbb
mov
mov
ror
add
cmc
xor
mov
ret
and
mov
sti
inc
call
call
int
scas
adc
sub
cmp
pushf
ret
jecxz
es
rcr
add
mov
sar
and
push
cld
stos
dec
jo
call
push
popf
pop
sub
lahf
int
jecxz
sahf
adc
call
xor
sub
stos
mov
ret
dec
(bad)
sub
sub
cmp
lock
cmp
loope
mov
ins
jle
jae
clc
mov
in
dec
jb
add
push
sbb
(bad)
or
inc
fsubp
cmp
stos
(bad)
cmp
loopne
hlt
push
ja
int3
push
ror
mov
imul
dec
jle
add
push
push
(bad)
or
dec
inc
scas
call
out
push
(bad)
mov
in
sar
jns
test
aas
mov
xchg
or
xor
add
les
sub
jl
add
jb
sbb
inc
and
test
or
dec
out
enter
pop
(bad)
std
jg
enter
and
rol
jo
mov
or
sahf
cmp
push
fwait
test
data16
nop
push
add
loope
out
int
xchg
bound
mov
jb
sub
add
mov
ins
pop
pop
add
mov
loope
scas
dec
sbb
xor
sbb
sbb
repnz
test
pop
xor
stos
imul
add
lods
stos
xchg
bound
mov
fcomp
pop
ret
loope
xchg
bnd
push
stos
mov
scas
jno
(bad)
scas
pop
sahf
xchg
jne
mov
adc
aaa
xchg
adc
and
sub
and
out
sahf
jge
ins
sahf
mov
clc
xchg
add
aaa
test
aam
jp
inc
aad
xchg
xchg
sti
sti
or
test
jno
push
add
xchg
mov
fs
lds
jae
mov
in
stos
pop
pop
mov
popa
test
cs
or
mov
aas
and
in
inc
push
jno
mov
fisttp
pop
inc
inc
aam
inc
mov
dec
xchg
movs
popf
push
push
aam
lahf
sahf
add
repz
mov
jne
xor
sbb
xchg
pop
inc
and
mov
mov
cmps
xor
xlat
in
jae
repnz
xchg
push
push
rol
sub
test
(bad)
scas
iret
sti
jae
aas
outs
outs
cmps
cmp
push
sub
dec
jg
shl
pushf
mov
or
sbb
sbb
mov
adc
cmps
inc
inc
jae
mov
outs
push
mov
xchg
inc
fiadd
bound
out
dec
mov
outs
dec
sbb
in
push
arpl
pushf
mov
cmp
pop
(bad)
xchg
pop
jno
pop
jg
xor
inc
mov
mov
(bad)
push
enter
test
clc
retf
sub
jmp
dec
mov
sub
int3
fist
mov
mov
cli
std
jge
push
js
xchg
ret
add
dec
mov
cmp
(bad)
repz
xchg
jae
repz
xlat
test
sbb
jmp
shr
mov
dec
js
mov
inc
push
push
cmp
mov
push
out
outs
cdq
mov
aas
retf
cld
fnstsw
bound
jnp
or
lods
stos
cmp
jg
test
adc
cld
mov
(bad)
mov
or
jecxz
jle
aas
push
popa
and
and
inc
mov
add
xchg
std
cmp
xor
movups
inc
stos
pop
pop
mov
cmp
mov
adc
stos
sub
repnz
push
aaa
lods
jne
xor
fimul
(bad)
push
sub
out
sar
inc
lss
imul
inc
xor
mov
push
adc
dec
inc
jnp
lods
inc
add
bnd
pop
adc
mov
sub
clc
(bad)
pop
adc
adc
or
mov
add
jl
xchg
jg
jne
psrad
cmps
push
cmp
out
adc
push
inc
outs
imul
push
loopne
jmp
pop
and
push
add
dec
adc
les
push
xchg
daa
fldenv
xor
xchg
cmp
add
(bad)
das
retf
stos
cmp
add
jle
lock
and
popf
call
push
mov
stc
and
jmp
retf
test
mov
lock
mov
and
add
out
movs
imul
jg
cmps
push
inc
lea
xchg
push
xor
iret
clc
cmp
sbb
aam
sub
movs
adc
xor
add
pop
dec
pop
adc
std
xchg
aam
sub
xor
push
clc
push
add
and
adc
push
adc
inc
xchg
scas
lahf
inc
mov
or
dec
adc
push
lds
pop
xchg
pop
cmp
and
clc
cmp
es
and
or
(bad)
int3
push
inc
cmp
pop
sub
enter
frstor
adc
mov
dec
push
mov
jle
les
call
rol
ins
sbb
or
shl
cmps
ss
or
jle
fwait
in
mov
xor
mov
pusha
imul
bound
loop
adc
mov
aad
loope
or
(bad)
push
sbb
add
mov
and
fwait
clc
mov
rcl
out
jecxz
lods
jno
mov
test
sub
jg
int
push
aad
xchg
dec
xchg
mov
cmps
into
mov
mov
mov
and
push
and
push
aam
xor
add
mov
jne
gs
jmp
fwait
arpl
(bad)
jb
adc
inc
xor
subps
xor
ror
ss
out
aam
ins
repnz
enter
inc
icebp
mov
lock
outs
cmp
in
retf
jb
mov
and
aaa
mov
push
dec
push
xchg
and
(bad)
mov
stc
dec
xor
push
push
gs
cwde
(bad)
sbb
mov
rcl
aaa
mov
mov
mov
gs
dec
sahf
fisttp
cli
jne
(bad)
fucomi
shr
cld
mov
xor
dec
pop
push
aam
jnp
xor
xor
mov
in
lods
xor
stos
inc
lea
sbb
push
iret
sbb
and
jp
stos
mov
lods
jmp
lea
adc
cmp
dec
push
icebp
adc
pushf
mov
fldl2t
mov
mov
add
and
int3
into
add
or
sub
push
aam
pop
xchg
ja
cmps
in
inc
daa
adc
inc
and
inc
ret
sar
pop
jge
cmp
push
mov
and
inc
push
stos
hlt
push
(bad)
fsub
test
sar
add
xchg
bound
lahf
cwde
pop
out
ror
clc
out
add
and
and
mov
into
nop
ins
pop
add
and
dec
stos
cmps
and
inc
inc
stc
cli
adc
mov
ret
add
mov
popa
stc
loopne
cmp
call
in
data16
add
movs
(bad)
mov
or
cs
sbb
fcom
jg
lock
inc
cmp
test
sahf
adc
(bad)
jp
fs
push
xor
or
std
pop
push
popf
push
cs
mov
sar
ins
lds
mov
in
pop
dec
sub
or
es
test
cld
fdivr
cdq
lods
sahf
jb
shr
loop
dec
lahf
divps
ins
lock
retf
ins
mov
xor
scas
repz
mov
and
popa
dec
cdq
in
adc
call
fcomp
ins
lea
add
das
inc
push
sub
js
cmps
inc
mov
loop
and
lock
sbb
inc
pop
sub
jl
leave
rol
pop
bound
retf
xor
cs
xlat
and
mov
dec
adc
xchg
in
sub
(bad)
stc
fs
aas
clc
scas
cwde
out
call
lds
outs
inc
rcr
add
xchg
sahf
rcl
inc
jmp
mov
dec
mov
mov
inc
cmp
shl
push
jbe
les
push
outs
sar
ds
add
cmp
in
xchg
outs
(bad)
imul
inc
std
mov
add
dec
xchg
out
shl
movlps
xchg
mov
repz
push
sub
mov
add
push
ss
(bad)
idiv
icebp
test
pop
sbb
jne
sti
cmp
mov
mov
iret
mov
(bad)
popf
mov
jns
add
cwde
(bad)
pop
sti
add
js
cmp
inc
mov
adc
cld
(bad)
test
add
cmp
sbb
inc
rcl
and
mov
adc
pop
jmp
pop
cld
cmp
sbb
jle
test
mov
sbb
sub
jne
movs
out
adc
test
adc
neg
dec
jnp
or
mov
dec
push
cmc
lahf
adc
out
xlat
int
int3
in
cld
xchg
cmp
mov
dec
sub
xchg
nop
sbb
arpl
cs
shr
push
dec
pushf
jns
sahf
jge
leave
sub
dec
sti
ret
cmp
dec
pop
daa
and
push
dec
nop
out
push
movs
inc
xor
pop
dec
test
imul
add
sub
iret
rol
call
mov
sbb
(bad)
xchg
inc
xchg
aaa
and
(bad)
retf
sub
mov
std
sbb
sti
inc
jae
lahf
xchg
adc
fsub
or
xchg
inc
stos
mov
daa
out
repz
es
sti
and
repnz
movs
inc
iret
or
push
sar
(bad)
pop
(bad)
popa
sbb
icebp
mov
adc
popf
jp
out
push
pop
push
mov
(bad)
test
mov
or
mov
or
dec
stos
call
(bad)
icebp
int3
lods
cmps
retf
loopne
jo
inc
hlt
pop
jmp
test
dec
leave
inc
push
add
imul
mov
and
push
nop
inc
sbb
sar
mov
cld
ss
and
fst
inc
push
push
adc
dec
out
adc
cmps
mov
pop
movs
xchg
or
xchg
mov
adc
hlt
repz
jne
sbb
ins
add
mov
ins
(bad)
jp
and
retf
lods
jle
hlt
int3
push
test
xchg
adc
and
aaa
add
cld
xchg
jo
dec
(bad)
mov
inc
retf
repnz
in
jmp
iret
pusha
loope
fist
and
dec
sub
(bad)
mov
xchg
retf
stos
leave
cmp
ja
dec
test
mov
or
mov
cmp
xchg
movs
mov
sub
repnz
test
scas
xchg
jmp
idiv
je
add
in
add
loopne
call
jnp
lahf
sub
das
pop
(bad)
fsubr
xor
scas
pop
sub
fist
ror
add
mov
xlat
mov
scas
cmps
scas
inc
or
mov
imul
push
loop
std
into
imul
sub
mov
rcl
aam
test
test
add
pop
imul
dec
sub
xchg
push
pop
xor
and
cmc
ret
jb
test
in
pop
fld
out
mov
xchg
add
and
movs
test
adc
cld
sub
cmps
push
rol
and
cld
jae
adc
std
mov
fld
jo
and
fsub
test
cmps
in
enter
repnz
mov
fs
push
sahf
or
aaa
mov
shr
cmp
nop
dec
mov
jne
jmp
mov
mov
cmps
cs
jb
jb
aas
inc
xor
movs
adc
cmp
sub
dec
mov
fisubr
push
mov
inc
and
push
add
inc
les
adc
mov
xchg
stos
xchg
ins
dec
xchg
mov
movs
leave
lds
pop
mov
aam
cli
xor
out
loope
push
mov
(bad)
xor
fsubr
mov
fnstenv
repnz
adc
sub
push
inc
jge
sbb
sbb
pusha
cs
mov
jnp
xchg
test
jb
sub
inc
pop
ret
push
push
test
les
imul
ins
dec
fstp
cmps
das
mov
loop
push
cmp
pop
sbb
(bad)
int3
xchg
int3
test
gs
cwde
mov
fistp
packsswb
pop
in
enter
je
jge
jne
cs
and
or
ret
aam
adc
in
out
popf
ins
daa
mov
xchg
cmp
add
sub
mov
imul
scas
add
out
addr16
les
fwait
pop
inc
dec
jmp
outs
outs
and
cmp
push
std
ds
sti
dec
and
shr
push
mov
daa
dec
ss
jo
cmc
push
iret
pusha
jno
jne
out
(bad)
int3
adc
jp
fs
add
scas
aas
(bad)
cli
jnp
add
loop
mov
sar
xchg
ss
adc
leave
jecxz
xchg
adc
icebp
retf
mov
xor
ds
push
inc
xchg
mov
mov
inc
test
add
mov
outs
fld
mov
mov
sub
movs
in
hlt
xor
test
sbb
fcomp
scas
fcmovu
aad
pop
test
ins
pop
stos
inc
push
dec
nop
retf
call
dec
dec
inc
inc
sbb
inc
xchg
cwde
loopne
or
dec
and
dec
cmp
fbstp
pop
xchg
cmc
movs
dec
shl
xchg
jbe
inc
test
push
lahf
and
cmps
fild
daa
mov
retf
jecxz
inc
sbb
jg
mov
adc
mov
test
pop
imul
ds
popa
sti
mov
lea
in
cmp
jno
pop
icebp
mov
enter
test
xor
xchg
pop
(bad)
les
ja
jbe
mov
pop
xchg
dec
bound
int3
xor
imul
sub
cvtps2pi
shl
xchg
pop
mov
cdq
sub
mov
aaa
aam
inc
sbb
fs
or
xchg
aas
loope
imul
lods
dec
fbld
inc
dec
xor
ret
movs
jne
cmp
aaa
aas
xlat
std
jg
nop
leave
mov
jno
jl
jp
mov
das
mov
rol
aad
stos
sub
and
sub
inc
es
dec
hlt
imul
mov
jo
and
ins
fabs
pop
pusha
jge
mov
jle
out
push
push
(bad)
xor
not
mov
sub
stos
xchg
push
jnp
cwde
cmp
test
mov
(bad)
aas
sbb
call
inc
adc
dec
xchg
push
imul
jecxz
shr
mov
rol
outs
cmp
jge
xchg
push
or
(bad)
sub
jg
xlat
std
cli
or
sub
in
ss
imul
xor
inc
cmp
add
lds
xchg
push
fstp
mov
xchg
fmulp
leave
mov
fidiv
dec
sub
hlt
cmp
retf
inc
pop
dec
lea
or
sub
shl
bound
jg
jg
das
out
es
sbb
jno
xor
xor
loope
or
or
fiadd
xor
out
or
in
or
adc
xor
pop
push
aam
je
inc
test
jne
ins
dec
cmps
int
gs
shl
jbe
xchg
retf
adc
ret
cli
adc
cli
xchg
out
ds
outs
sahf
(bad)
push
cmp
or
push
pushf
jno
cmp
retf
scas
ins
fstp
outs
cmp
test
sbb
inc
sbb
add
and
push
lock
jmp
xor
mov
cmp
sub
outs
and
push
lods
xchg
in
pop
fadd
jnp
test
and
push
sub
sbb
out
mov
fnsave
xor
sbb
sub
fidivr
scas
cld
cs
jnp
ja
jecxz
loop
add
push
inc
test
xchg
je
lds
iret
imul
push
sbb
jecxz
data16
mov
out
push
jecxz
out
sub
leave
mov
stos
or
lock
lods
ds
jge
jns
(bad)
inc
xchg
in
(bad)
fidivr
sub
mov
jo
xchg
push
test
fstp
out
ins
das
pop
jl
clc
lds
out
(bad)
shr
sub
out
sub
sbb
mov
jp
stos
jb
xchg
stos
dec
cld
adc
sbb
sar
push
or
cwde
out
movs
ins
out
imul
and
xor
int
mov
repz
jmp
jecxz
lahf
rcr
(bad)
fsub
and
push
call
sbb
mov
loop
xlat
inc
sbb
cwde
xor
xor
sbb
lods
cwde
enter
repz
(bad)
xchg
out
stc
not
fistp
test
sbb
mov
lahf
pop
cli
in
add
fsubp
lahf
lahf
xchg
popf
outs
outs
cmps
mov
out
pop
inc
mov
rcr
into
dec
out
jge
dec
fdivr
or
dec
add
fwait
sub
inc
cmp
and
stos
pop
stc
arpl
(bad)
sub
cli
sti
(bad)
outs
je
les
mov
frstor
aad
pop
retf
ss
pusha
in
(bad)
seta
in
jns
popf
cmp
xor
ficomp
fsubr
or
sahf
adc
mov
rcl
repz
and
fwait
repz
mov
xchg
mov
xor
jmp
lods
rcl
dec
adc
push
inc
adc
bound
add
add
mov
imul
ret
jl
in
inc
push
push
or
adc
(bad)
call
mov
mov
jne
jo
iret
jno
cmp
fcom
pop
dec
cs
mov
pop
adc
rcl
(bad)
rcl
fldcw
loop
stos
dec
mov
in
cmc
outs
pop
cdq
sub
addr16
push
imul
out
div
fidiv
test
mov
dec
enter
(bad)
fiadd
sti
mov
icebp
ins
jo
dec
sub
outs
and
sbb
aam
add
popf
push
cli
ds
sub
in
call
sti
fwait
jae
out
lods
into
ss
push
xor
lds
push
xor
rcr
ins
fmul
jnp
lds
push
xchg
scas
call
pop
and
enter
xchg
dec
retf
inc
mov
outs
arpl
inc
aam
sub
mov
jno
mov
push
pop
scas
int3
rcr
sbb
lods
inc
mov
out
mov
mov
sbb
and
mov
inc
pop
and
mov
cli
(bad)
dec
dec
mov
inc
mov
cwde
(bad)
mov
out
add
xchg
imul
cmp
loop
imul
inc
mov
rcr
jno
dec
mov
sti
jg
mov
pop
outs
sub
mov
pop
or
mov
lea
out
adc
ficom
popa
or
rcl
mov
sub
xchg
jecxz
mov
(bad)
push
inc
mul
fcom
add
cmps
(bad)
xor
or
mov
adc
arpl
adc
jp
popf
xlat
jae
pop
dec
xor
inc
mov
push
xchg
imul
pop
jmp
sbb
dec
stos
sbb
cmp
cmps
in
jmp
scas
cmp
sub
push
mov
(bad)
cmc
push
mov
xor
adc
xor
xchg
sti
xchg
cli
enter
test
mov
fsubr
jno
xchg
int
ror
push
(bad)
call
mov
inc
aas
fcom
aaa
lahf
retf
inc
cmps
push
mov
mov
retf
push
imul
fld
sbb
sahf
sbb
dec
dec
test
dec
push
movs
js
cmp
in
mov
js
jecxz
cmp
push
sar
xor
cmp
jp
sbb
lods
dec
and
(bad)
ins
outs
(bad)
adc
dec
loop
and
push
movs
aad
int
jle
push
cmps
push
pop
imul
fdivr
jbe
push
jo
fidivr
mov
test
mov
cmp
mov
inc
add
xchg
setl
popf
mov
sub
or
jge
dec
inc
call
add
pusha
retf
stos
inc
sub
push
stos
add
iret
out
out
cdq
retf
sbb
fnstsw
dec
and
mov
es
inc
inc
cmps
mov
add
inc
or
push
mov
hlt
scas
sti
lock
out
or
movs
jmp
jge
sub
icebp
dec
into
pop
shr
and
add
cmp
mov
ss
dec
cmp
add
bound
jno
arpl
and
retf
into
mov
ret
cmp
rcl
cld
mov
cmp
and
jno
adc
or
sub
cmp
push
jb
imul
cmp
dec
imul
lock
repnz
mov
daa
jmp
sbb
arpl
mov
call
xchg
mov
adc
clc
dec
daa
clc
in
int3
push
mov
inc
ds
mov
or
bound
jmp
sub
add
iret
hlt
test
nop
xor
popa
adc
mov
dec
xchg
jmp
mov
xor
and
test
cmps
pop
push
inc
lahf
mov
icebp
mov
mov
fadd
push
mov
pop
ret
std
push
push
in
dec
pop
dec
lock
cwde
xchg
and
fs
mov
mov
imul
mov
jecxz
es
lahf
test
je
loop
and
inc
jl
dec
pop
sub
sbb
aam
sub
lahf
popa
stc
ins
cmps
dec
or
lea
(bad)
cld
push
push
outs
sar
inc
scas
lock
nop
cdq
sub
movs
call
xchg
jmp
loopne
fild
sub
rcl
inc
pop
nop
fwait
in
icebp
je
jno
xchg
inc
jno
push
and
cwde
sub
call
frstor
dec
sub
repz
daa
in
jecxz
jge
cs
add
fcmovnb
mov
cli
movs
imul
cmp
scas
push
inc
cld
and
hlt
adc
sub
not
xor
push
sbb
test
push
push
mov
pop
xchg
data16
lods
js
bound
jg
cmp
mov
ffree
or
or
add
ds
jne
mov
sti
ficomp
pop
in
int
cmp
sahf
cmp
cmp
xor
cmps
gs
sbb
add
ret
cmps
retf
ficomp
mov
push
jne
dec
xor
je
xchg
into
iret
data16
idiv
push
push
repnz
pop
push
and
imul
int
cwde
jbe
cmp
and
and
jns
outs
sbb
push
sub
mov
cmps
mov
jmp
stos
jmp
stos
aas
xor
sub
cmp
jle
ds
and
sbb
aad
or
jecxz
fdivr
fisub
add
jne
cmp
test
cmps
add
mov
mov
fstp
ror
movs
loop
dec
pop
in
dec
push
data16
add
push
sub
cmp
mov
pop
xor
push
xchg
div
pushf
int
mov
scas
pusha
mov
dec
les
leave
test
push
add
xchg
jecxz
call
aam
push
mov
repnz
xor
xchg
add
movs
jmp
(bad)
adc
adc
mov
stc
xchg
(bad)
fsubrp
jge
sti
cwde
xchg
and
lahf
or
or
add
mov
movs
fmul
jle
jmp
rcl
jb
lock
imul
cmp
std
jg
jle
(bad)
push
ror
jle
test
cmp
xor
pop
repz
movs
cmps
and
inc
adc
adc
mov
ret
cld
cli
push
rol
pop
dec
outs
std
pop
std
cmps
cli
pop
lock
xor
imul
push
dec
xlat
out
jmp
dec
mov
inc
leave
cli
pop
jle
imul
(bad)
mov
aam
and
test
xchg
and
jns
cvtpi2ps
add
mov
jbe
shl
xor
gs
std
or
mov
inc
sub
push
cmps
movs
test
ds
(bad)
fidivr
in
xor
cmp
inc
xchg
test
inc
add
mov
mov
or
add
pop
repz
mov
lds
xor
add
inc
add
dec
jo
push
mov
les
pop
mov
fisubr
rep
cmp
out
jp
scas
daa
xchg
outs
pop
inc
dec
and
pop
sbb
xchg
lods
js
push
cdq
cmps
add
out
sti
mov
and
sbb
add
push
add
cmp
or
push
sub
or
xor
xchg
cmp
add
pop
cwde
push
adc
std
jge
out
lods
sahf
cli
jg
add
(bad)
pop
inc
test
sub
enter
mov
retf
mov
(bad)
mov
inc
cmp
clc
icebp
and
(bad)
bound
push
push
(bad)
pop
mov
or
jecxz
hlt
leave
nop
popf
adc
adc
pop
add
(bad)
or
inc
arpl
leave
and
pop
leave
jg
xlat
mov
sub
or
pop
sub
rcl
mov
jno
jne
push
push
jge
mov
sbb
mov
cmp
rcl
(bad)
mov
mov
jmp
or
sub
lods
jo
add
mov
cmp
stos
and
mov
push
iret
add
fimul
and
mov
aad
sub
add
mov
test
lahf
jmp
jecxz
push
cmp
(bad)
scas
xchg
mov
fst
xchg
inc
rol
mov
bound
jne
fs
leave
sbb
imul
add
lock
stos
std
rol
xchg
mov
outs
fcmovnbe
mov
ds
cmp
sbb
jbe
xchg
ror
mov
push
mov
call
jle
stc
hlt
jno
pop
push
aad
lods
cmp
cmps
adc
nop
scas
xor
outs
add
push
pop
movs
push
dec
mov
fimul
ja
mov
mov
mov
pop
stc
add
sbb
sbb
mov
test
push
pop
aam
mov
inc
shl
fnstcw
push
jl
out
stos
mov
out
mov
cmps
mov
adc
mov
push
or
pop
cld
pop
xor
mov
in
pop
and
cmps
cdq
retf
xchg
aas
lahf
cmps
push
jle
into
pop
scas
stc
jp
pop
cs
into
rcl
aam
test
jno
in
cmps
aas
pushf
pop
cmp
push
cs
lods
test
stos
cmps
call
mov
xchg
mov
test
xchg
inc
sbb
in
xlat
mov
in
enter
les
add
push
mov
add
mov
ins
lods
gs
into
jl
or
sbb
inc
xchg
scas
mov
or
push
xchg
daa
call
mov
cmps
repz
dec
xor
mov
cmc
xchg
pop
pop
fwait
fwait
jno
add
aam
and
outs
stos
xchg
jmp
iret
mov
fistp
cwde
imul
(bad)
or
mov
sbb
and
inc
pop
shl
jmp
(bad)
lods
adc
btr
in
sbb
add
(bad)
xchg
iret
clc
fcomp
call
ror
std
mov
dec
add
leave
mov
add
lahf
jmp
je
xchg
inc
add
push
push
stc
cmp
push
dec
sub
and
add
(bad)
cld
sti
dec
sub
jno
xlat
mov
mov
jns
jmp
adc
and
pop
jnp
int3
sbb
hlt
sub
pop
mov
xor
arpl
std
pushf
inc
sti
cmp
cmps
imul
push
jmp
lahf
(bad)
mov
pop
arpl
cmp
pushf
pop
push
not
jecxz
mov
adc
inc
or
mov
js
ret
pop
test
pop
jecxz
mov
sahf
or
xchg
popf
inc
call
movs
movs
xchg
add
mul
jge
xchg
div
ins
and
dec
aas
adc
imul
mov
cmps
or
nop
ds
inc
scas
lods
xchg
test
xchg
aad
push
fucom
call
fisttp
dec
mov
jae
sbb
add
dec
imul
pushf
inc
add
xchg
lahf
inc
mov
adc
dec
cmps
inc
sbb
ficomp
pop
pop
btc
dec
mov
aas
test
test
retf
mov
movs
call
iret
cmc
mov
jecxz
xchg
pop
push
sub
and
in
loope
xchg
sub
sahf
mov
adc
push
mov
jecxz
call
int3
arpl
jbe
cwde
dec
push
push
xor
stos
mov
pop
in
scas
jnp
hlt
neg
fcomp
fisub
push
and
xor
sub
cmp
dec
xor
arpl
sahf
cmp
adc
in
sbb
sbb
cwde
mov
pop
lahf
pop
or
xor
mov
jo
sbb
mov
jo
fstp
repz
lea
dec
mov
js
jg
inc
stos
stos
mov
mov
ja
hlt
es
icebp
adc
pop
sahf
mov
add
loope
push
shl
hlt
mov
mov
int3
and
push
push
pop
mov
ins
jp
je
fsubr
mov
xchg
icebp
loopne
repz
sahf
jl
adc
in
mov
or
xchg
inc
(bad)
rcl
cmp
outs
movs
jg
(bad)
data16
fsub
push
push
(bad)
mov
push
lahf
xor
push
sbb
dec
xor
leave
test
repz
leave
jmp
mov
push
retf
call
mov
leave
pop
leave
cmp
(bad)
mov
outs
outs
sti
enter
inc
sbb
mov
ja
sbb
iret
inc
mov
(bad)
jbe
inc
cli
cwde
xchg
mov
aas
loopne
hlt
in
push
sbb
cdq
and
stc
sub
pop
mov
stos
or
sbb
lods
push
js
outs
mov
pop
cmp
jnp
inc
pushf
lea
je
cmp
push
cdq
movs
lahf
and
adc
mov
ins
xor
mov
dec
push
push
sbb
scas
sbb
push
rcl
xor
movs
mov
or
and
cmp
popa
mov
ins
out
dec
test
adc
icebp
sbb
shr
add
fmul
mov
add
pop
call
and
sub
mov
sbb
mov
gs
test
mov
inc
push
xor
jne
movs
test
cwde
mov
pop
and
mov
push
or
sub
xor
scas
iret
sbb
fadd
mov
adc
test
xchg
sub
outs
pop
aad
pop
push
xor
pop
data16
jns
lods
xchg
retf
xchg
push
or
cmps
mov
movs
imul
cmp
(bad)
idiv
in
inc
mov
inc
jno
inc
cmp
add
jle
imul
push
add
cmps
enter
test
mov
fcmove
push
xor
add
mov
pop
dec
sti
cmp
retf
cmps
retf
cld
xchg
iret
xchg
ja
and
mov
inc
in
int3
or
retf
je
stos
leave
out
ins
jno
mov
xlat
sbb
add
pop
dec
mov
std
jg
lock
cmp
sbb
mov
mov
test
sub
or
adc
sti
jg
mov
and
mov
and
inc
or
idiv
aam
sbb
pop
cwde
inc
movs
enter
ja
(bad)
xchg
dec
push
inc
test
mov
pop
into
and
pop
cmc
xchg
mov
push
std
add
mov
add
test
mov
or
jg
cmp
xchg
dec
rcl
icebp
lods
je
jle
(bad)
in
dec
mov
int
data16
clc
loopne
pop
add
xor
out
jecxz
fcmovnb
enter
stc
cli
dec
fdivr
add
adc
sub
cld
ja
sbb
cdq
lods
aam
iret
push
xor
inc
mov
mov
dec
loope
mov
cmps
mov
push
push
inc
scas
out
jle
mov
sub
xor
inc
(bad)
lock
(bad)
xlat
dec
or
int
mov
mov
js
jmp
pop
not
jno
test
into
mov
repnz
add
nop
pop
jmp
(bad)
jmp
jl
cmp
popf
into
test
lds
ret
enter
pop
test
ret
cli
push
or
popf
leave
clc
cmp
aad
sub
aaa
mov
mov
sahf
and
xchg
retf
jo
sti
push
ins
jae
or
dec
cmp
adc
pop
stos
rol
jle
mov
mov
mov
sar
stc
test
mov
push
cmps
ror
jmp
ror
rol
pushf
(bad)
pop
(bad)
dec
sbb
in
enter
mov
inc
mov
and
aad
or
bnd
inc
scas
inc
mov
xchg
inc
xchg
mov
inc
adc
push
out
jp
loop
pusha
and
xchg
imul
clc
cwde
mov
mov
adc
idiv
mov
std
xchg
pop
leave
and
mov
push
pop
mov
and
int3
or
lods
xor
sbb
xchg
inc
pop
push
dec
fimul
inc
sub
jmp
adc
add
call
add
cli
dec
push
cwde
(bad)
xor
inc
sub
fisub
push
dec
mov
xor
sub
call
lods
dec
test
outs
push
lods
js
fsubr
imul
inc
adc
loop
jmp
cdq
mov
loope
xchg
repz
add
pop
mov
or
test
xchg
sub
dec
movs
pop
mov
movs
mov
cmp
jp
int
pop
cmp
mov
mov
lods
mov
and
pop
sub
out
and
sbb
jmp
rcr
pop
aaa
sbb
and
xchg
call
sti
sub
xchg
pop
int3
mov
and
aas
loop
sbb
add
fs
xchg
lods
rcr
xchg
and
mov
jge
fdivr
mov
cmps
jo
imul
push
xchg
mov
jp
jnp
adc
repnz
or
xchg
dec
push
mov
inc
nop
mov
mov
(bad)
loopne
mov
in
ds
mov
dec
test
push
jp
push
mov
arpl
inc
idiv
std
pop
pushf
jp
retf
inc
hlt
hlt
xor
and
fst
out
or
mov
jb
cmp
out
lods
xchg
xchg
and
test
dec
dec
mov
aam
dec
fmul
or
cld
(bad)
xchg
dec
in
push
inc
push
js
int
mov
xor
test
pop
push
mov
imul
call
pusha
push
pop
popf
sub
mov
push
xor
xchg
dec
sub
aam
enter
out
mov
jbe
and
imul
js
call
pop
push
mov
jg
ret
jns
lahf
stc
xchg
pop
dec
mov
xor
add
iret
sbb
test
ret
retf
adc
mov
or
sub
ror
mov
push
pop
mov
rcr
add
dec
dec
push
stos
push
mov
lods
nop
in
shl
mov
inc
adc
das
pushf
leave
and
in
lds
cmp
pop
push
adc
push
lock
stos
mov
ficom
ss
push
jb
sar
xchg
mov
shl
pop
adc
xchg
xchg
inc
pop
jp
jge
mov
(bad)
fstp
sbb
lods
sbb
or
fcmovb
push
loope
push
inc
in
jecxz
fcmovb
fidivr
cmp
mov
popa
lahf
xchg
xor
inc
or
aam
mov
es
shl
enter
aam
rcl
push
xor
push
pop
pop
cmp
xor
mov
pop
push
call
push
jge
mov
and
cmps
mov
or
cwde
cmps
sbb
cmp
inc
jg
inc
inc
xchg
mov
jnp
shr
cmp
adc
sti
jle
dec
arpl
call
ds
aad
stc
sbb
shr
inc
mov
push
dec
and
repz
xor
imul
call
ss
cmps
mov
and
popf
and
retf
pop
xor
inc
inc
out
pop
test
push
fiadd
sbb
imul
or
and
and
cmps
test
stc
or
(bad)
shl
leave
push
test
mov
mov
push
dec
push
mov
test
out
adc
(bad)
imul
rcl
push
add
inc
cmp
(bad)
jmp
call
add
dec
push
adc
movs
call
dec
sub
aas
pusha
adc
pop
xchg
(bad)
(bad)
jns
mov
adc
add
add
rcr
sub
or
(bad)
frstor
push
mov
xchg
push
or
fdiv
cmc
push
or
in
pop
imul
add
mov
dec
fstp
inc
pop
lds
aam
retf
dec
jg
xor
pop
pop
ds
les
mov
xlat
in
sti
(bad)
mov
ret
jecxz
mov
rcr
jle
inc
addr16
and
in
aad
out
retf
cmps
jp
jae
sahf
inc
and
sar
sahf
call
mov
mov
loopne
pop
xchg
cld
mov
dec
mov
out
add
stc
jno
pop
xchg
cdq
sub
add
pop
pop
loopne
or
fiadd
addr16
xor
movs
stos
sbb
mov
inc
mov
or
push
xchg
clc
ins
sbb
stos
std
inc
test
inc
sub
aad
adc
mov
cmp
xchg
cmc
arpl
cdq
mov
aaa
mov
(bad)
aad
call
jno
fdivr
dec
push
(bad)
cld
pop
jp
rcr
adc
add
icebp
and
pop
adc
das
repnz
add
cmp
add
std
jg
mov
pop
jp
pop
push
adc
mov
sbb
xchg
ficom
repz
aas
inc
in
loopne
arpl
mov
(bad)
(bad)
sahf
jg
cld
cli
shr
inc
pop
inc
and
arpl
or
jmp
adc
mul
xchg
loop
dec
out
imul
or
add
cli
loopne
add
(bad)
inc
sub
out
leave
div
mov
call
mov
fisubr
ja
cmp
loop
xor
mov
fidivr
div
arpl
mov
inc
xor
add
or
pop
call
push
xchg
jge
test
mov
cmp
mov
stos
add
in
or
out
cmp
adc
nop
sbb
mov
je
xchg
mov
je
in
bound
cld
stos
jle
aam
add
xchg
adc
push
iret
add
test
add
call
lea
pop
xor
xchg
sub
inc
cmp
(bad)
fisub
imul
jecxz
jecxz
mov
out
mov
xchg
jecxz
jl
cld
mov
stos
(bad)
(bad)
fsub
lea
xchg
xchg
xchg
sub
clc
ror
cwde
mov
(bad)
fdivr
in
xor
test
ret
movs
popf
repz
cmp
push
(bad)
dec
jb
mov
adc
test
mov
std
add
mov
ss
aam
imul
into
sar
sub
bnd
rcl
rcl
(bad)
and
cmc
adc
inc
cmp
ds
mov
dec
mov
xchg
add
lock
jns
imul
push
not
add
cmp
jecxz
add
xchg
or
fcmovnu
jle
scas
jbe
(bad)
cmp
sti
ja
mov
stos
les
xchg
sbb
int
xchg
unpcklps
or
test
add
inc
(bad)
mov
sub
int
sub
or
fmul
mov
movs
sbb
sbb
push
mov
pop
push
xchg
dec
and
test
xor
push
gs
mov
jmp
mov
fcom
push
and
mov
fdecstp
call
outs
lea
push
xor
nop
jb
mov
mov
imul
int3
push
dec
aad
xor
aad
mov
dec
xor
mov
pop
call
xchg
mov
pop
push
enter
and
pushf
add
in
mov
sbb
cmps
cmp
mov
rcr
jmp
cmp
mov
call
cmc
retf
fs
aas
imul
add
retf
addr16
push
and
sti
xchg
mov
enter
sbb
mov
mov
out
sub
mov
test
cs
out
ss
mov
xor
(bad)
mov
fnstcw
arpl
cdq
mov
xor
lods
inc
aas
xchg
mov
push
call
inc
cmps
ret
in
loopne
jb
cmp
mov
lods
test
inc
ss
jne
outs
push
out
mov
inc
sub
cdq
xchg
dec
rcl
fadd
mov
pushf
push
test
out
mov
xchg
sbb
test
imul
aam
retf
mov
lock
cmp
not
push
xchg
dec
pop
lock
cmp
and
test
mov
mov
pop
icebp
clc
div
out
push
fsubrp
inc
scas
and
(bad)
in
jmp
pop
mul
lds
sbb
mov
(bad)
pop
movs
enter
push
dec
scas
out
add
aas
and
fwait
leave
iret
nop
aaa
or
or
mov
jns
ins
outs
and
aaa
mov
inc
test
jb
cmps
xchg
inc
sahf
jae
es
and
aaa
pop
inc
outs
cmp
push
ss
ins
dec
mov
retf
jp
push
push
cli
aaa
and
hlt
cld
jle
popf
inc
dec
and
mov
xchg
test
xchg
movs
and
aam
jo
movs
pop
adc
aas
movs
(bad)
cmp
in
fisubr
xchg
pop
sahf
es
test
mov
sbb
imul
cmp
fadd
jecxz
add
dec
adc
mov
(bad)
jmp
push
mov
fisubr
icebp
sub
imul
or
or
dec
xchg
pop
aam
jno
js
std
(bad)
into
inc
repz
pop
or
and
push
inc
lods
pop
mov
push
xor
cmps
mov
pop
fldcw
dec
sbb
pop
ret
add
pop
and
test
push
imul
stos
clc
fdivr
leave
imul
sbb
jmp
inc
nop
adc
shl
jle
sti
enter
es
push
inc
push
std
pop
jmp
fisttp
jle
ja
enter
xchg
push
jecxz
or
push
push
or
(bad)
pop
sub
arpl
xchg
jbe
mov
cmps
fsub
jp
mov
sahf
push
in
push
push
inc
js
test
push
mov
sbb
dec
push
cmp
leave
ds
and
cdq
jmp
push
call
scas
fidivr
rcl
out
cmp
dec
lods
mov
sub
or
ja
pushf
daa
call
paddq
(bad)
lahf
popa
pop
jno
push
repz
add
cwde
lods
pop
in
iret
clc
jp
mov
sub
push
loop
push
rol
(bad)
sbb
outs
lahf
xor
pop
adc
and
xchg
mov
outs
add
lahf
pop
xchg
or
jo
aam
sub
dec
dec
cmps
xchg
jle
in
mov
fs
gs
jb
leave
mov
or
cs
retf
lods
(bad)
jae
adc
adc
xchg
jmp
cmps
and
mov
mov
clc
mov
rcl
scas
je
mov
pop
mov
mov
(bad)
xor
imul
(bad)
sti
in
xchg
mov
push
pusha
retf
pop
dec
inc
test
add
push
add
lods
add
mov
jge
idiv
ds
mov
push
loopne
out
cmps
mov
mov
sbb
iret
or
pop
dec
lds
enter
inc
sbb
cwde
in
jb
xchg
add
mov
std
hlt
mov
and
lods
pop
pop
(bad)
pop
test
cmps
push
mov
xor
pushf
iret
jno
pop
fcom
ret
mov
and
call
mov
cmp
movs
dec
sbb
inc
leave
and
in
movs
mov
and
mov
cmp
ds
loopne
fisub
lds
push
ja
mov
xchg
(bad)
inc
mov
jbe
xchg
movs
shl
and
dec
shl
push
(bad)
rcr
xchg
ins
push
rcl
in
sbb
xor
mov
dec
test
push
(bad)
sbb
mov
pop
push
lea
jbe
(bad)
ret
in
aam
rol
and
imul
add
fsubr
loope
ficomp
cmps
or
ret
sub
aad
mov
push
cld
dec
test
test
add
iret
in
jns
push
fst
pop
lods
lods
cmp
pop
adc
inc
jne
cmc
jb
push
dec
sbb
push
imul
or
push
push
add
stos
(bad)
iret
addr16
mov
jg
es
out
dec
push
mov
bound
sbb
adc
add
mov
in
push
inc
mov
lahf
ins
mov
mov
movs
adc
or
cmp
ror
add
stos
jg
iret
ss
sub
sbb
aas
ins
and
dec
inc
push
shl
fsub
das
push
into
into
dec
lock
mov
xchg
inc
push
sti
jp
ja
iret
jmp
(bad)
test
adc
inc
or
popa
mov
sbb
pop
in
scas
(bad)
loope
cmps
dec
clc
in
and
mov
bsf
mov
test
jg
dec
adc
cli
in
addr16
bound
add
rol
add
cmps
lods
repz
lahf
aaa
mov
int3
push
cmp
sub
stos
movs
xchg
ins
dec
dec
arpl
mov
div
(bad)
push
dec
fld
lock
fnstsw
retf
xchg
aaa
inc
mov
sar
or
xchg
jecxz
dec
int
clc
imul
mov
inc
xor
cmps
xchg
push
fwait
pop
cmc
push
in
idiv
(bad)
fsubr
pop
push
pop
inc
sar
cmps
inc
dec
outs
cmp
inc
in
pop
or
jo
push
adc
pop
out
mov
jo
dec
dec
xor
adc
outs
pop
cs
je
and
jmp
cld
jge
xchg
lods
lods
pusha
nop
pop
ja
fcmovnbe
out
ins
(bad)
icebp
aad
fld
push
dec
sub
icebp
cmps
sub
outs
fmul
jp
sub
mov
sub
push
sbb
push
shl
push
mov
pop
scas
and
mov
mov
jnp
push
mov
stc
add
xchg
push
repz
mov
mov
cmp
stos
pop
push
inc
add
inc
push
mov
mov
inc
cld
inc
push
es
ds
retf
dec
xchg
nop
sub
add
mov
xor
(bad)
in
adc
or
sub
mov
cmp
aam
idiv
mov
mov
je
mov
sub
or
and
ror
cmp
xor
imul
inc
add
aad
sti
rdpmc
ss
hlt
rcl
mov
les
inc
push
(bad)
out
ret
pop
inc
push
icebp
sub
mov
and
lods
ja
movs
imul
stc
jne
out
sti
int
in
mov
fstp
sub
sbb
mov
xor
mov
jae
xor
shr
sahf
push
mov
(bad)
mov
mov
fmul
sti
aas
mov
xchg
fld
pop
adc
scas
ds
inc
call
das
or
xchg
sub
xor
inc
sub
or
jmp
inc
adc
xchg
cmp
sbb
xchg
loopne
dec
cmc
and
dec
popa
ins
adc
(bad)
adc
cmp
fcmovnb
enter
mov
(bad)
nop
les
bound
inc
bound
push
adc
push
icebp
and
pop
mov
mov
and
fcmovne
bound
sbb
xchg
add
xlat
jecxz
xor
dec
or
mov
dec
loop
mov
xchg
call
cmp
imul
fs
sbb
inc
int
icebp
and
aas
test
scas
(bad)
push
sbb
icebp
inc
add
dec
nop
or
pop
mov
sub
mov
adc
xchg
(bad)
shl
in
call
sbb
jmp
ja
std
ret
scas
xor
imul
mov
xchg
sbb
add
or
xor
scas
dec
xchg
sub
imul
stos
cmp
in
lods
push
adc
ror
je
adc
ret
mov
test
jno
or
mov
inc
jns
(bad)
aam
retf
sub
sub
sub
je
sahf
cmp
sub
aad
stos
add
not
imul
retf
fs
je
sub
mov
push
inc
sbb
mov
add
retf
jle
cmps
test
rcl
enter
packuswb
mov
shl
cmp
repnz
jge
stc
aas
jb
sbb
test
std
sub
je
mov
stos
cmp
mov
mov
int
fistp
cmp
es
cmc
sbb
(bad)
repnz
and
movs
inc
es
retf
lds
sti
pop
pop
pop
les
mov
jne
push
cmc
add
clc
dec
push
lods
push
nop
movs
push
int3
mov
sub
fld
fldcw
mov
ins
mov
scas
mov
xchg
inc
pop
jnp
mov
adc
add
jb
xchg
jbe
add
cs
push
aas
bnd
jbe
arpl
push
dec
arpl
outs
jo
and
sub
lods
movs
mov
and
rcl
add
and
aam
pop
or
pop
in
xchg
mov
pop
or
inc
dec
enter
push
push
push
stos
add
sub
jmp
inc
dec
movs
inc
jmp
inc
loopne
pop
jge
mov
repnz
iret
dec
pop
in
add
pop
fnstsw
mov
push
loop
and
or
pop
loop
or
push
mov
push
push
xchg
lods
pop
test
mov
or
xchg
dec
movs
sahf
sub
inc
in
fnstenv
rcl
inc
cmp
js
scas
arpl
ins
push
mov
test
cmps
or
inc
push
add
adc
fild
(bad)
outs
(bad)
aam
mov
or
jns
test
movs
xsaves
in
mov
mov
and
loop
mov
mov
cmps
pushf
adc
stos
lea
popa
sbb
(bad)
lahf
addr16
shl
push
cmp
ret
adc
jne
dec
or
ds
fdivrp
in
cmp
out
pushf
fadd
retf
fwait
in
data16
sti
dec
rcr
pushf
cs
mov
mov
dec
add
(bad)
into
ret
ret
mov
mov
jno
int
cmp
hlt
cs
push
or
loopne
cmp
adc
pop
fdivr
(bad)
cs
push
mov
retf
jecxz
sbb
sar
mov
adc
xor
cmp
pushf
adc
xor
pop
xor
sbb
push
xchg
mov
mov
xchg
dec
arpl
pop
retf
test
test
mov
xchg
jle
cdq
sub
in
gs
adc
push
hlt
not
das
mov
dec
and
or
xor
jecxz
stc
cmc
and
mov
fdivr
stos
push
fcom
popf
dec
je
add
test
cmp
xor
adc
dec
lea
repz
cmp
lahf
bound
or
adc
mov
retf
push
mov
dec
jmp
push
xchg
push
jo
imul
push
or
mov
inc
daa
push
xchg
adc
nop
jns
push
mov
fiadd
repnz
(bad)
dec
push
inc
xor
jg
jmp
push
lock
cmp
mov
jl
fsubp
jne
pop
stos
add
xchg
leave
or
mov
adc
jp
mov
add
aam
repnz
pop
mov
pusha
sub
lahf
(bad)
imul
inc
lods
dec
cmp
pop
lea
jmp
pop
bound
jns
dec
or
adc
push
nop
aas
fidiv
and
icebp
jmp
loope
or
push
movs
inc
dec
and
mov
sub
gs
mov
push
retf
sar
push
jl
test
add
pop
pop
or
daa
adc
jecxz
xlat
cmp
div
aam
fst
sub
out
inc
icebp
dec
jle
movs
and
jecxz
sub
sti
js
inc
inc
inc
loopne
mov
sar
arpl
mov
iret
inc
dec
stos
imul
arpl
out
(bad)
push
enter
inc
cmp
push
fidiv
and
(bad)
pop
repz
(bad)
shl
add
lahf
iret
cmp
and
jmp
inc
mov
xor
ds
jbe
aas
sti
stos
cdq
fcom
dec
ins
push
hlt
push
lods
movs
adc
stos
lea
nop
popf
imul
sbb
sahf
push
sub
dec
inc
jo
mov
or
sbb
inc
stc
pop
push
sbb
xchg
push
add
dec
dec
mov
call
xor
sbb
jae
jecxz
test
scas
mov
and
cmp
jecxz
mov
push
add
push
call
jnp
jecxz
lods
ror
jo
aam
sub
push
and
fmul
xchg
add
add
mov
jbe
cmp
xor
cmp
jb
fs
inc
mov
dec
and
fs
imul
push
aas
ret
fnstcw
and
jbe
js
xor
mov
ror
pop
cs
push
push
xchg
cmps
dec
arpl
into
cmp
cmp
cmp
mov
(bad)
stos
xchg
dec
push
sti
push
ret
and
ins
jg
out
es
int
rol
adc
stos
mov
std
sahf
popf
cmp
add
test
add
sub
icebp
test
inc
out
pop
sbb
and
ror
adc
pop
(bad)
xor
arpl
mov
pop
cmp
or
shl
rcr
inc
cmp
pop
sub
out
dec
into
fcomp
cdq
mov
xchg
cmp
cwde
mov
push
lahf
or
inc
mov
in
ret
cli
dec
push
dec
mov
push
inc
(bad)
inc
sbb
scas
lahf
sbb
(bad)
pop
pop
push
pop
pop
fidivr
inc
sbb
and
sahf
jne
add
adc
mov
sub
push
movs
adc
rcr
gs
dec
jp
inc
adc
jmp
sbb
addr16
clc
shr
lahf
inc
mov
pop
les
jg
shl
(bad)
mov
(bad)
pop
scas
jo
fs
xchg
ret
adc
movs
mov
sbb
(bad)
iret
ss
mov
mov
xchg
adc
and
(bad)
js
jmp
mov
adc
sub
(bad)
jl
out
in
adc
jmp
pusha
mov
mov
imul
fs
xor
push
jl
stc
stos
xchg
in
stos
call
xchg
test
inc
mov
pop
sahf
pop
in
mov
or
mov
mov
out
popa
out
ja
(bad)
outs
xchg
imul
xchg
add
arpl
add
xchg
inc
push
mov
xchg
clc
loope
sub
js
bound
adc
cmps
(bad)
adc
fs
mov
inc
lods
pop
aam
std
pusha
stos
adc
sub
push
push
cwde
and
mov
pop
mov
mov
stc
jo
(bad)
shl
sbb
test
jmp
lock
mov
nop
push
hlt
aad
es
push
mov
xchg
js
pop
xchg
stc
add
dec
mov
mov
mov
jge
outs
xor
mov
es
xor
popf
cmp
into
adc
mov
rcr
aam
pop
pop
neg
sar
mov
in
sub
je
rcr
xchg
cmps
dec
or
mov
fmul
cmp
outs
das
jo
sahf
retf
push
je
hlt
call
jmp
sub
aas
popa
loope
int
sub
mov
sbb
dec
jmp
xor
push
jg
inc
mov
sub
sbb
sbb
idiv
pop
push
add
pop
push
in
inc
pop
dec
enter
sbb
les
(bad)
data16
stos
pop
test
mov
push
cld
cmp
dec
repnz
jecxz
div
xor
jne
enter
and
push
adc
fs
pop
in
movs
std
clc
xchg
and
(bad)
(bad)
xor
adc
in
pop
mov
ss
push
js
and
push
stc
cmp
pop
xchg
iret
mov
call
int
cmp
push
jns
xor
jp
jp
mov
push
dec
lea
mov
lds
push
or
add
int
(bad)
(bad)
push
jmp
arpl
daa
xor
int
push
cmp
imul
pop
popf
inc
mov
xchg
neg
cmp
sub
push
lds
loop
mov
scas
rol
movs
aam
sbb
jnp
mul
lahf
ret
mov
pop
pop
hlt
pushf
frstor
add
repnz
cli
mov
jo
push
push
loope
nop
inc
push
xor
inc
hlt
and
stc
fst
push
sub
xchg
rcl
shr
push
ins
inc
adc
stc
add
and
lea
ret
in
call
fisubr
leave
adc
sbb
(bad)
cmc
ret
stos
sbb
mov
and
js
jle
xchg
movs
dec
cmp
int3
loopne
sbb
mov
inc
lods
jge
cld
mov
leave
mov
push
mov
repnz
cmp
sti
push
pop
jecxz
and
lds
inc
cmps
xchg
inc
int
cld
leave
jmp
sub
clc
jnp
sahf
push
mov
cmp
sub
pop
cs
jecxz
imul
inc
lods
sub
push
aam
bnd
fidivr
popa
(bad)
xchg
shr
sbb
or
mul
add
jbe
shr
jg
loop
jmp
mov
xchg
jbe
rcl
add
push
inc
push
add
mov
icebp
inc
push
stos
push
loopne
inc
add
inc
outs
retf
movs
adc
sub
mov
mov
xchg
in
and
loope
adc
in
test
inc
sbb
mov
movs
xchg
icebp
arpl
lds
push
adc
xchg
je
push
lea
xchg
mov
lock
add
aas
outs
dec
cmps
xchg
mov
mov
xor
sbb
pop
add
(bad)
mov
jge
in
cs
sbb
and
xchg
dec
xchg
js
movs
aas
iret
sar
sub
bound
cmps
cmp
cmp
sbb
imul
push
push
mov
imul
xor
popa
in
in
in
in
jnp
dec
movs
bound
in
xchg
dec
in
hlt
add
mov
ficom
sub
pop
cwde
loope
xlat
movs
ds
dec
cmp
sbb
aad
jne
and
aad
cmp
retf
and
fcomp
cmp
rcr
and
dec
xchg
imul
test
arpl
int
cmp
out
scas
scas
push
ins
and
xlat
sub
sub
xor
or
pop
or
popf
jnp
inc
ja
inc
mov
mov
ss
or
ret
dec
push
dec
nop
loope
lods
xchg
fs
push
repnz
pop
cli
push
stos
mov
mov
fidiv
xchg
fwait
xor
sahf
add
cwde
test
push
pop
das
ins
(bad)
push
retf
loopne
nop
stos
and
jle
jno
adc
or
sub
inc
jecxz
xor
mov
lea
repnz
js
cli
inc
(bad)
cs
jge
or
mov
xchg
call
test
or
cmps
cwde
stc
push
retf
cmc
les
int3
or
ss
mov
fsubp
mov
xor
btr
adc
mov
or
test
ins
stos
(bad)
xor
test
leave
lods
gs
xchg
and
mov
sub
ficom
jle
push
je
idiv
push
mov
ret
dec
xlat
sbb
cmp
jmp
jmp
mov
push
add
rol
jp
(bad)
(bad)
sti
xor
pop
dec
dec
outs
mov
dec
loop
inc
jecxz
(bad)
mov
movs
imul
imul
ror
mov
xchg
push
stos
push
dec
mov
lahf
lds
dec
fld
aam
stc
cmc
sbb
ret
retf
cdq
jbe
adc
xchg
neg
ficomp
jl
imul
sub
jo
mov
int3
xchg
je
jbe
in
test
(bad)
(bad)
in
call
int3
fwait
xor
cmps
cdq
inc
xor
pop
push
aam
or
fwait
add
popa
leave
pop
add
pop
jecxz
std
jge
lods
mov
gs
jp
cli
push
test
cmp
mov
mov
(bad)
mov
cmp
aas
xlat
(bad)
not
mov
sbb
xchg
push
stc
xlat
test
jecxz
rol
inc
pop
imul
pushf
jp
add
cmp
pop
push
in
hlt
aas
fwait
jle
scas
mov
int
stos
mov
imul
lahf
repnz
out
sbb
adc
pop
push
pop
or
int
mov
je
and
sbb
dec
ds
push
xchg
mov
pop
cmc
sbb
or
in
xchg
mov
push
mov
push
mov
pop
jmp
cmp
and
or
scas
mov
movs
sar
and
cmc
test
repnz
jp
fucomi
repnz
call
sbb
addr16
sahf
sahf
push
pop
xchg
xor
dec
scas
arpl
dec
xchg
lock
mov
test
inc
pop
and
mov
or
or
mov
pop
call
iret
(bad)
push
xchg
xor
inc
or
cmp
cmps
shl
mov
loope
push
pop
jp
mov
leave
and
xchg
imul
mov
movs
and
icebp
scas
nop
repz
push
jp
xor
xchg
sub
cmc
int3
push
sub
popf
adc
push
loope
imul
mov
int3
aaa
inc
fadd
pop
ror
mov
movs
xor
arpl
aas
aad
shl
or
dec
xor
sbb
ss
fs
dec
dec
lock
daa
dec
cmp
jno
cld
inc
sub
xchg
sub
je
add
push
xchg
test
pop
enter
pop
jp
xor
int
jo
iret
and
xor
or
(bad)
pop
xchg
push
add
cmp
adc
pusha
stc
outs
out
adc
repnz
in
push
sbb
imul
and
cmp
iret
(bad)
into
cwde
inc
mov
inc
movs
int3
mov
xchg
push
dec
and
and
sub
(bad)
or
or
jno
push
sub
iret
fs
xchg
add
adc
inc
test
fs
aam
jg
pop
or
(bad)
lods
jmp
sub
and
xchg
(bad)
jl
and
cld
xchg
jg
neg
test
mov
js
lock
cwde
add
mov
imul
lods
jo
add
imul
ins
dec
fistp
or
and
xchg
data16
aas
mov
ins
inc
pop
rcr
push
xchg
ins
inc
ret
sub
ds
jle
mov
mov
cmc
sbb
cld
mov
mov
adc
mov
push
push
push
push
and
xchg
adc
cdq
dec
call
(bad)
scas
and
ret
imul
mov
nop
mov
pop
test
ds
mov
iret
sub
jbe
sub
jge
xchg
jl
stc
ficom
es
rcr
sub
jmp
sub
mov
lods
jno
adc
dec
mov
ret
das
mov
add
adc
jecxz
aas
leave
ret
repz
test
cmp
in
mov
xor
in
lds
xchg
xor
in
es
ror
inc
jno
or
lock
cld
jmp
cmps
and
add
push
jno
xchg
leave
sbb
and
pop
in
push
shl
fdivr
xor
stos
mov
das
fadd
es
and
pop
adc
adc
dec
fwait
ins
in
fwait
js
inc
scas
pop
xchg
fsubr
cmp
hlt
hlt
sbb
jo
loop
push
sbb
sub
cmp
mov
cdq
jmp
fisttp
mov
and
mov
in
sub
sub
ds
aas
jecxz
imul
push
mov
adc
mov
dec
adc
add
je
add
add
cmps
out
mov
in
jecxz
pop
xor
popa
jecxz
enter
loope
push
mov
(bad)
retf
dec
pop
push
xchg
or
mov
loop
outs
fs
stos
cmp
push
sub
cdq
repz
or
ss
std
ret
cmp
pushf
jae
xchg
stc
adc
sbb
pop
outs
ret
xchg
push
jle
mov
fcomp
xchg
xchg
add
jge
cld
add
mov
ss
stos
jne
mov
mov
mov
xor
cmp
call
rep
mov
mov
dec
inc
mov
repnz
pop
add
or
mov
sbb
jb
retf
cdq
ficom
repz
xchg
clc
lea
test
movs
xchg
sub
popa
leave
cmps
icebp
int3
jnp
xor
mov
mov
dec
push
mov
sti
mov
ins
mov
xor
test
or
clc
aam
cmp
lahf
dec
inc
mov
sahf
fsub
loop
add
pop
test
push
in
dec
sub
pop
dec
and
mov
jecxz
xor
aad
sbb
mov
lahf
dec
push
mov
add
inc
mov
jecxz
push
shl
mov
xchg
sub
push
inc
dec
mov
and
lods
mov
or
add
outs
xor
leave
dec
mov
push
adc
or
lods
aas
iret
aam
rol
popa
sbb
add
mov
or
sub
jne
sbb
mov
xchg
sub
pop
xchg
jns
mov
mul
cmp
sbb
out
xchg
adc
fild
hlt
cmp
xchg
push
sub
shl
mov
call
pop
sbb
pop
lods
mov
in
cmp
inc
rol
inc
mov
dec
sub
jmp
imul
ins
push
fdivr
add
jo
add
jle
cmps
xchg
or
dec
nop
dec
adc
dec
mov
ds
cmp
js
pop
push
mov
gs
dec
adc
stos
push
outs
in
fnsave
shl
out
test
xor
cmp
aas
mov
xor
jo
push
aaa
push
int
loopne
jne
and
mov
mov
mov
cmp
nop
inc
jge
push
mov
(bad)
das
popa
jno
cli
pop
icebp
outs
cmp
jmp
jb
xchg
cmps
inc
jge
leave
aam
fs
add
ret
icebp
jnp
fucomi
mov
inc
aaa
xor
cmp
add
mov
sub
imul
fild
add
(bad)
fucomi
push
ins
sbb
push
jae
or
jl
cli
sahf
pop
gs
adc
or
jmp
mov
imul
je
lock
sub
sbb
mov
add
push
outs
jge
push
push
push
sahf
adc
(bad)
pop
movs
cdq
mov
lods
aas
shr
jbe
sbb
and
pop
daa
cld
movs
xchg
int
stos
push
pop
sahf
cmp
sub
and
jmp
pop
mov
cmp
mov
xchg
or
enter
inc
or
loope
int3
ret
xchg
sbb
push
scas
cmp
push
out
test
mov
pop
sbb
call
pop
mov
add
or
lods
mov
sub
dec
jg
pop
retf
test
pop
call
xchg
mov
push
shl
repz
add
sbb
mov
cmp
iret
loop
jmp
xchg
repnz
xor
cmp
dec
adc
movs
fwait
push
add
or
mov
jae
call
es
mov
jg
popf
pop
imul
push
adc
xchg
sbb
dec
jp
jmp
shl
jl
ret
push
inc
or
jne
mov
jge
xchg
fs
push
ret
enter
(bad)
mov
pop
fsubr
mov
xchg
xor
jl
cld
mov
xor
or
xchg
push
leave
push
or
sub
mov
jo
popf
inc
sub
fadd
jle
dec
pop
push
jle
add
add
dec
and
test
pop
fsubr
outs
cmp
test
mov
mov
cmps
ss
push
push
js
aaa
jbe
inc
push
outs
xor
dec
xor
push
inc
lock
and
iret
rol
popf
lock
imul
and
xor
popf
cmp
dec
push
jle
add
shl
pop
sub
(bad)
lock
push
pop
sbb
xchg
xor
push
out
mov
and
lds
pop
mov
mov
mov
das
aaa
xor
call
dec
jmp
jmp
repnz
sub
add
cmp
loopne
add
add
or
mov
push
jo
cmp
in
into
mov
inc
daa
nop
sub
xchg
inc
ficomp
mov
fild
mov
loope
jg
cmp
pop
imul
out
jns
scas
or
add
popf
mov
ins
aam
ins
xor
xor
or
push
pop
stos
ins
shl
mov
mov
shl
sbb
xchg
leave
pop
fisttp
push
dec
out
test
(bad)
mov
enter
outs
mov
push
fsub
test
push
push
jl
aam
sbb
pop
pop
popf
(bad)
in
in
or
and
mov
imul
dec
ret
leave
mov
cmp
sub
cli
fdivr
jg
cmc
(bad)
xor
sub
inc
loopne
adc
jne
add
dec
movs
test
mov
and
fdiv
vminsd
loope
sub
xchg
clc
jp
fild
hlt
xchg
inc
inc
adc
jmp
lahf
cmps
mov
int
mov
int
leave
push
push
nop
cmp
ja
mov
outs
mov
into
out
sbb
mov
xchg
inc
jl
pop
imul
repz
xchg
in
ja
or
fdiv
dec
sbb
mov
pop
pushf
mov
fwait
xor
bound
cmp
btc
mov
and
pop
jmp
jno
xchg
(bad)
setge
xor
aad
inc
das
mov
mov
mov
pop
fst
cmps
cmp
loopne
xchg
test
xchg
lods
call
jge
(bad)
ds
arpl
pop
cmp
inc
inc
dec
sub
push
push
add
and
sbb
jne
jmp
cs
cmc
test
or
mov
enter
push
cld
mov
jmp
out
addr16
sub
dec
lods
jmp
adc
dec
lahf
cmps
sahf
sub
xor
call
lods
aad
pop
and
(bad)
fcmovb
fsubp
ret
push
jne
stc
mov
push
mov
xor
push
mov
pop
mov
add
add
stos
out
xlat
mov
aam
shl
cmps
inc
and
xor
xchg
aas
test
adc
imul
xor
inc
enter
push
sbb
outs
stc
mul
fist
sahf
repnz
lds
popf
xor
out
xor
push
jmp
(bad)
mov
jmp
mov
cmps
aam
ror
jnp
xchg
popa
lds
jmp
push
add
mov
bound
aas
outs
(bad)
maxps
std
ret
mov
dec
pop
mov
cmp
cmp
ret
mov
popa
movs
fst
push
sub
ds
je
and
adc
cdq
xchg
jecxz
sub
xchg
ror
sub
loope
inc
std
(bad)
(bad)
fld
dec
mov
int
rol
inc
movs
aad
mov
test
pusha
hlt
cmps
fstp
stos
jl
push
scas
mov
test
mov
rcl
cmps
xor
mov
cmps
repnz
mov
inc
pop
nop
xor
imul
repz
sub
xor
pop
pop
dec
fcmovnb
mov
lds
push
add
(bad)
mov
cmp
inc
leave
pop
pop
xchg
mov
cli
out
rol
sub
and
sub
jge
fadd
add
sub
adc
xlat
pop
fisubr
mov
test
call
mov
fdivr
ss
fldenv
mov
les
retf
mov
jecxz
pop
jecxz
mov
fidiv
fisub
in
fcmove
mov
sub
out
pushf
cmp
add
jg
jbe
scas
mov
loopne
stc
mov
mov
loopne
mov
cmp
dec
or
xchg
sar
mov
popf
inc
xor
mov
cmp
iret
aaa
imul
fistp
int3
jb
div
push
rcr
push
aam
mov
push
pop
cmc
in
addr16
fidivr
mov
jg
ret
adc
xor
dec
dec
imul
pop
push
stos
mov
sub
stc
and
xchg
test
loope
cwde
and
call
sub
and
pop
jmp
les
xchg
loopne
mov
sbb
and
add
pop
and
cmp
mov
sub
cmc
push
xchg
jne
and
add
rcl
add
cmp
mov
(bad)
popa
es
inc
lods
mov
xor
lods
adc
xchg
mul
jge
dec
add
stos
fdivr
sub
and
add
adc
ret
out
mov
jmp
sbb
push
sbb
shr
push
cmps
xchg
dec
cmp
(bad)
mov
test
sti
xchg
or
aad
les
std
and
(bad)
xor
addr16
jnp
out
pusha
in
push
fisubr
les
inc
cwde
rcr
mov
jmp
lahf
stc
mov
dec
pop
arpl
sbb
mov
pop
push
cmp
push
dec
xchg
imul
push
mov
daa
push
and
fdivp
mov
hlt
(bad)
int3
not
push
inc
jmp
fcomi
fucomi
xlat
mov
fmul
pusha
xor
mov
imul
leave
call
xchg
jp
push
xchg
jge
and
inc
push
add
pop
(bad)
neg
pop
fst
jl
jle
xchg
into
dec
(bad)
cdq
push
sub
jecxz
adc
stos
fisttp
cmp
sub
mov
sbb
je
enter
jmp
dec
mov
add
cmp
jg
mov
and
and
mov
inc
repz
fcom
pop
mov
out
or
add
mov
movs
push
xor
icebp
add
rol
adc
mov
sbb
xor
aam
jmp
cmps
mov
mov
mov
imul
idiv
mov
fdivrp
jae
cmps
xlat
adc
cmps
lea
sub
seta
lea
ja
adc
test
mov
and
sub
addr16
(bad)
data16
imul
adc
inc
jae
adc
scas
jns
test
(bad)
and
sar
test
xchg
aas
mov
(bad)
fcomp
popa
dec
ss
imul
mov
movs
pusha
(bad)
mov
(bad)
dec
cmp
sbb
adc
inc
daa
jmp
jecxz
(bad)
mov
xchg
stos
scas
pop
js
jge
push
jb
sti
xor
jmp
cmc
cmps
pop
add
sub
ret
push
jl
lahf
pop
pop
test
add
ret
sti
push
in
dec
outs
add
sahf
mov
popf
aad
mov
sbb
pop
jl
jle
hlt
and
in
fsubr
out
(bad)
jl
test
sub
and
imul
(bad)
push
and
push
pop
push
pop
xchg
ins
in
retf
ins
fistp
xchg
cmp
push
jge
fnop
adc
inc
push
or
xlat
(bad)
push
jne
mov
mov
(bad)
fsubr
sub
sbb
mov
xchg
cmc
sub
enter
sbb
add
rcr
xchg
xchg
adc
ror
add
mov
js
push
sub
fdiv
mov
sbb
sbb
lods
jg
hlt
pop
mov
shl
push
fucomi
mov
mov
add
aas
push
nop
adc
scas
sbb
scas
push
sub
pop
mov
ss
mov
out
or
jge
jecxz
fnstcw
sbb
sub
ror
and
fidivr
test
and
rcl
pop
dec
and
rcl
pop
push
jecxz
pusha
icebp
cmp
(bad)
sbb
mov
out
xor
inc
dec
mov
and
push
mov
dec
push
push
call
retf
outs
or
dec
nop
enter
test
inc
cmp
int
lods
icebp
movs
int
sbb
cmp
mov
mov
mov
rcr
inc
xor
jno
inc
das
js
pushf
mov
ja
jb
or
in
(bad)
and
addr16
scas
add
push
inc
add
mov
push
mov
lea
jl
pop
lea
test
mov
dec
push
aad
and
inc
dec
dec
sbb
cmp
and
ss
loope
fucomp
loope
test
ds
pop
push
inc
sbb
add
inc
cmp
test
mov
xchg
in
jecxz
xchg
adc
or
push
mov
mov
push
stos
xchg
jno
pop
nop
mov
fwait
adc
shl
fbld
test
cmps
dec
sub
data16
xchg
and
mov
bound
gs
dec
fs
call
sbb
bound
in
pop
mov
pusha
call
push
push
mov
xchg
leave
int
xor
int3
outs
outs
mov
(bad)
pop
adc
loope
add
add
xor
in
cs
fwait
inc
sahf
pop
push
pop
retf
fidiv
mov
mov
ror
push
xor
xchg
outs
xchg
stc
dec
test
daa
test
aas
mov
cld
pop
or
lods
rcl
rol
jae
sar
mov
dec
and
int
int3
cmp
push
pop
fdiv
fs
ss
rep
and
and
cmps
push
retf
adc
pop
dec
and
cli
mov
shl
jne
xlat
cli
fwait
sti
add
fs
adc
std
cwde
hlt
sbb
inc
sbb
or
clc
mov
ret
mov
shl
gs
mov
dec
es
int
je
push
xchg
and
cmps
cmp
dec
jmp
xlat
fnstcw
mov
pop
fidivr
cdq
push
push
mov
push
inc
je
nop
sahf
adc
push
inc
sub
pop
rcr
dec
iret
pop
popf
sub
cmps
mov
test
xchg
adc
ficomp
inc
push
xor
jg
stos
cmps
sti
dec
jns
outs
sub
sub
adc
sub
or
inc
gs
pop
fidivr
ja
add
add
sbb
cmp
aaa
cmp
mov
jne
mov
or
push
adc
mov
sbb
ins
jecxz
push
sub
jmp
jo
or
xchg
aad
gs
fcomp
aas
stos
rol
jo
in
cmc
neg
mov
mov
scas
inc
xchg
pop
sbb
and
and
das
shl
or
sbb
jo
xchg
and
push
adc
scas
xor
int
add
jbe
jb
stos
jb
xchg
or
xor
xchg
cmp
push
add
sti
xchg
cmp
mov
test
outs
push
or
stos
jns
mov
pop
pusha
push
mov
ins
ja
out
sub
mov
xor
sbb
bound
movs
imul
stos
js
pop
call
cmp
jbe
mov
jg
jae
fwait
or
and
mov
dec
mov
sti
cmp
out
xchg
mov
mov
imul
test
push
xor
(bad)
ins
not
push
sbb
and
cmps
xchg
push
mov
mov
adc
and
and
cmp
inc
xchg
mov
pop
inc
nop
inc
jmp
shl
jmp
not
repz
sbb
cwde
aad
ret
sub
xor
xor
inc
inc
push
(bad)
es
fisttp
mov
push
gs
or
push
cld
cli
push
fstp
mov
and
inc
aam
lods
adc
adc
sbb
dec
dec
dec
inc
fcomp
test
arpl
xor
int
mov
mov
and
sbb
jnp
scas
outs
fisttp
mov
adc
and
cmp
cmps
fucom
sahf
xchg
call
mov
mov
lahf
adc
dec
jnp
jno
call
adc
or
test
ror
push
aam
icebp
std
jge
gs
pop
inc
sbb
fwait
sub
in
pusha
jo
(bad)
nop
scas
xchg
cmp
mov
xchg
push
repnz
sbb
inc
mov
repz
pop
jmp
push
out
nop
jno
add
imul
je
call
in
mov
hlt
dec
cmp
sbb
cli
dec
mov
cmp
adc
call
mov
(bad)
repz
(bad)
and
pop
imul
inc
fisub
xchg
pusha
mov
dec
imul
sbb
lods
in
stos
repnz
push
jmp
and
push
rcr
sub
mov
sbb
shl
fbld
adc
iret
adc
repz
inc
inc
pop
test
stos
push
mov
adc
rol
xchg
adc
mov
popf
or
sahf
add
inc
movs
cmp
test
(bad)
dec
or
mov
push
inc
fcomp
retf
in
sbb
add
mov
test
sub
adc
movs
inc
lidtd
xchg
outs
xchg
mov
enter
lock
jmp
mov
inc
aam
cmps
iret
test
push
js
cs
leave
stos
pushf
nop
inc
loopne
pop
inc
mov
jmp
jecxz
dec
mov
xchg
jge
pop
sbb
jg
sti
dec
sub
test
movs
rol
and
imul
sahf
xchg
aam
(bad)
cmp
test
and
popf
and
pop
mov
push
movs
call
iret
aad
dec
jecxz
das
cdq
and
inc
adc
and
sub
adc
cmp
div
in
cmp
sub
mov
(bad)
cld
mov
mov
mov
cmps
adc
mov
dec
dec
inc
jecxz
ret
push
sbb
dec
cwde
popf
test
dec
mov
jno
movs
jl
retf
pop
(bad)
push
and
shl
jg
sub
sbb
jl
xor
cmps
dec
add
xor
sti
dec
jmp
ss
scas
pop
dec
popf
xor
pop
loopne
push
enter
cmps
pop
std
je
mov
leave
push
and
sub
and
add
jae
std
mov
adc
sub
pop
aas
xor
jecxz
mov
in
inc
pop
sbb
mov
iret
movs
push
std
out
int3
ss
cmp
je
inc
push
adc
and
lods
xchg
cmp
xchg
retf
sbb
mov
sti
mov
add
and
into
inc
mov
adc
rcr
push
add
shl
and
cmp
or
mov
dec
inc
jnp
icebp
mov
hlt
stos
sti
out
imul
and
clc
add
sbb
push
ret
es
sub
dec
gs
cmp
inc
cli
fmul
int3
adc
sub
lds
out
dec
das
loope
retf
cmp
cwde
loop
cmp
pop
fcmove
lahf
inc
xchg
adc
stos
fld
push
xor
fucomip
mov
test
ret
sub
movs
xchg
shl
(bad)
mov
adc
jmp
mov
xchg
loop
inc
xchg
fdivr
rcl
fbstp
push
lods
inc
jg
fwait
and
aas
xchg
in
sahf
lea
push
out
pop
and
push
nop
push
mov
pop
test
mov
sbb
addr16
pusha
pop
mov
dec
jnp
cmp
inc
sbb
mov
sbb
or
hlt
xchg
jb
mov
add
icebp
fisub
(bad)
call
stos
adc
mov
mov
ins
clc
pop
in
repnz
jne
xor
lods
dec
dec
xor
sbb
sbb
and
scas
cld
adc
jns
ret
and
pop
test
cmp
mov
cs
gs
ja
pop
(bad)
and
sub
rol
or
sbb
ret
jmp
or
icebp
loop
cmp
(bad)
cmps
call
push
scas
lea
je
sub
cmps
jmp
sahf
fcmovne
stos
loop
jmp
arpl
add
dec
or
or
mov
addr16
dec
addr16
mov
inc
xchg
inc
test
xlat
mov
push
fisttp
push
push
xchg
mov
test
lods
mov
cmps
(bad)
bound
sbb
mov
and
out
popf
inc
sahf
cmp
mov
fcom
ins
daa
in
pop
mov
inc
add
cld
cmp
lock
and
into
dec
xchg
mov
or
inc
adc
cli
push
jecxz
cli
jg
rcr
jl
cmovae
aam
fidiv
ret
stc
jne
test
cdq
rcl
ins
sub
mov
add
(bad)
mov
jb
dec
mov
push
test
out
jp
sub
jae
lea
fcomp
ins
dec
iret
mov
jb
sbb
rol
movs
and
in
pop
pop
and
xchg
jmp
push
lods
sub
test
aas
push
and
xchg
dec
push
sahf
test
push
xchg
dec
add
or
(bad)
lock
xchg
xor
jmp
repz
(bad)
adc
cmp
stc
lahf
imul
nop
js
xlat
fldenv
aam
lock
and
sbb
leave
and
loope
lock
inc
push
push
test
push
push
adc
xor
mov
inc
scas
add
daa
push
cdq
and
push
data16
cmps
push
sahf
inc
mov
fcom
outs
ins
cmp
aam
inc
fdivr
imul
iret
and
push
push
add
loopne
push
add
jle
retf
pop
push
push
sahf
mov
dec
push
scas
dec
lea
mov
gs
les
mov
movs
mov
cli
lahf
push
sbb
mov
and
mov
lods
mov
shr
push
jg
test
pop
mov
jmp
jecxz
mov
jecxz
test
aam
mov
adc
movs
das
hlt
out
fsubr
imul
cwde
in
mov
call
stc
push
mov
movs
jle
lea
sub
xchg
cmps
lahf
inc
mov
fstp
stos
pop
ins
dec
dec
dec
mov
xchg
mov
push
in
xchg
and
add
sbb
std
xor
jmp
jnp
jnp
mov
add
pusha
add
mov
fdiv
cmp
lahf
push
pop
icebp
(bad)
push
cmp
call
dec
and
scas
movs
lea
xchg
and
jle
in
cmps
fcom
mov
sbb
adc
push
xchg
xchg
cmp
pop
sub
test
out
js
inc
repz
cmp
stos
pop
and
dec
dec
arpl
and
push
mov
(bad)
popa
call
mov
pop
lods
dec
xor
mov
inc
xor
cmp
je
fsubr
sub
xchg
ss
dec
pop
sbb
pop
xor
mov
and
sbb
xor
pop
lock
cmps
xchg
jb
outs
add
test
rol
sti
xor
mov
inc
adc
mov
cld
mov
test
pop
xchg
lock
mov
call
imul
inc
adc
mov
cdq
in
push
pusha
cli
xchg
mov
aas
(bad)
sti
cs
stos
lods
into
shr
pop
push
cmp
push
mov
mov
adc
jg
mov
inc
ror
sahf
mov
ficom
inc
mov
add
cli
pop
xchg
xchg
inc
push
xchg
jnp
sub
sub
mov
(bad)
pop
into
test
mov
adc
or
push
cmps
xlat
cmps
fwait
jmp
mov
dec
add
add
jl
push
inc
mov
xchg
ror
jno
xor
inc
adc
(bad)
xchg
das
aas
dec
cmp
adc
inc
out
addr16
xor
cli
je
neg
int3
push
pop
rcl
sub
add
push
cld
cli
inc
out
mov
jns
dec
push
js
stos
lods
stos
sub
inc
ja
and
inc
rcl
add
dec
(bad)
xlat
fsubr
push
stc
cs
imul
push
xor
sub
dec
mov
pop
out
push
or
push
pop
push
repz
mov
int3
pusha
out
imul
jo
mov
dec
push
xor
aad
jae
xor
pop
in
(bad)
in
dec
adc
stc
data16
rcr
daa
repnz
fld
push
xchg
add
rdpmc
pop
pop
in
es
cwde
ins
fwait
je
imul
mov
test
ret
xor
and
icebp
iret
dec
test
xor
xchg
pop
std
inc
rol
adc
arpl
sbb
dec
cmps
adc
sbb
mov
stos
leave
sub
sub
add
aad
dec
mov
push
in
mov
fidiv
xchg
out
and
push
dec
pop
daa
cld
fnstsw
shl
pop
xor
lods
add
add
fldcw
std
cmp
jg
je
mov
xchg
or
jne
mov
test
bound
adc
rcl
rcl
stos
sub
test
jmp
in
call
cmps
xor
inc
jo
icebp
jmp
pop
jecxz
sub
push
cwde
cmps
cmps
dec
pushf
jbe
cmp
call
push
adc
sbb
add
imul
dec
popa
jge
repnz
popa
outs
push
jb
add
rcl
push
inc
cld
test
aas
mov
ss
mul
in
pop
jmp
rcl
jg
push
push
ror
movs
mov
adc
xchg
xchg
bound
sbb
push
cmp
(bad)
repz
inc
out
xchg
shl
and
loope
loopne
dec
imul
pop
iret
cmps
(bad)
mov
push
push
xchg
cmp
mov
popf
pop
aaa
mov
(bad)
push
dec
scas
dec
dec
(bad)
leave
xor
outs
xchg
fsubr
out
mov
std
ja
adc
push
jg
inc
add
xor
in
jno
xor
sti
dec
add
(bad)
adc
mov
jns
cmps
les
sub
adc
push
or
imul
cwde
xchg
(bad)
sub
cs
push
aad
repz
inc
pop
or
add
cld
test
bnd
jno
fsubr
push
and
lods
dec
pop
aas
cs
jns
(bad)
aad
call
imul
and
sbb
das
sub
or
mov
cmp
ins
xor
and
pop
add
rep
aas
leave
rcl
jb
push
pop
xchg
imul
lods
pushf
call
push
ror
xchg
arpl
(bad)
push
loope
lods
mov
lea
mov
loopne
cmps
xor
mov
ins
out
movs
shl
stc
aas
aam
sub
fsubr
inc
dec
rol
stc
add
xchg
push
loope
fwait
lds
cmp
and
sbb
loopne
push
mov
outs
popa
push
aam
sar
jp
popa
scas
sub
hlt
push
mov
jecxz
je
dec
adc
ror
ror
gs
mov
push
ret
fnstcw
sbb
pushf
push
fs
inc
dec
push
mov
mov
sub
xchg
xchg
sub
mov
jbe
jmp
mov
out
jge
dec
mov
xor
jno
stc
pop
pop
mov
pop
inc
inc
cmps
mov
dec
sbb
add
xor
inc
sbb
sub
popa
mov
add
sbb
fwait
pop
xchg
(bad)
es
or
out
loop
jns
xor
(bad)
cmps
mov
inc
push
imul
and
or
mov
dec
ds
adc
and
jp
call
pop
mov
ds
shr
leave
add
imul
cmps
add
stc
je
out
sbb
lods
cmc
bound
icebp
movs
sub
mov
in
loop
test
mov
xlat
lods
jno
push
sub
inc
retf
mov
inc
test
and
outs
je
out
sbb
and
mov
je
test
and
cmp
loopne
cmp
(bad)
or
push
inc
xor
inc
push
test
or
mov
adc
jge
dec
loopne
std
jge
out
mov
cli
fwait
adc
push
jmp
nop
push
cmp
hlt
(bad)
push
lods
xor
repz
pusha
jp
sub
dec
dec
fcom
adc
mov
jle
mov
nop
dec
xor
sub
jo
in
cld
(bad)
inc
jno
nop
xor
and
pop
dec
cs
jge
loope
jnp
popa
pusha
sti
aam
daa
xchg
cmps
call
xchg
out
(bad)
ins
dec
push
sbb
addr16
outs
aas
push
aad
fs
mov
test
icebp
sti
xor
and
mov
mov
sub
push
out
enter
jmp
mov
push
movs
mov
mov
xor
add
jg
fist
imul
jnp
xor
cli
hlt
nop
js
retf
mov
sbb
pop
mov
(bad)
pop
lahf
sub
outs
loopne
adc
iret
dec
cmp
pop
mov
stc
in
dec
stos
es
sub
add
(bad)
lahf
imul
or
nop
adc
sub
hlt
cdq
loopne
mov
pop
cmp
mov
stc
inc
fdiv
retf
dec
inc
xor
jns
jne
xchg
mov
inc
data16
adc
stc
mul
scas
das
xor
stos
mov
jno
movs
imul
mov
pop
leave
sub
lds
cmc
jecxz
xchg
aam
call
rcl
lahf
mov
aaa
xor
pop
cmps
jecxz
std
jge
es
mov
imul
sub
cdq
stc
cli
hlt
rcr
fsub
xchg
stc
push
cld
cmp
add
push
or
add
test
cld
xchg
ins
int
mov
outs
mov
xchg
out
and
ds
mov
sbb
pop
mov
or
loop
std
mov
iret
in
out
pop
das
xchg
cmps
cdq
cmp
and
mov
pop
jmp
cmps
mov
jmp
pop
movs
js
je
push
inc
push
xchg
sbb
imul
cwde
sti
dec
cwde
sub
push
cmps
push
aam
mov
and
mov
push
pop
mov
mov
iret
fbstp
(bad)
loop
ds
lods
cmp
mov
or
add
test
daa
and
xlat
adc
stos
into
jecxz
imul
sub
cwde
xchg
movs
jecxz
ins
test
push
jecxz
cmp
int3
(bad)
adc
lods
imul
adc
push
sub
daa
ins
outs
mov
or
lock
adc
cs
mov
mov
iret
je
cmp
mov
push
mov
fild
pop
fs
add
push
xlat
ds
and
mov
push
pop
icebp
jg
pop
mov
mov
push
cmc
xchg
mov
dec
pop
call
test
xlat
push
push
out
shl
push
dec
xor
jg
dec
lds
jno
daa
lods
dec
or
add
push
mov
cld
cli
fs
outs
lods
(bad)
mov
add
imul
rcr
test
cmps
mov
fnstcw
imul
(bad)
movs
xchg
(bad)
scas
ins
dec
dec
push
je
xchg
inc
into
pop
add
mov
and
mov
out
idiv
ret
sbb
lea
pop
xchg
and
cdq
or
inc
mov
mov
sahf
fbstp
nop
xor
bswap
mov
sbb
mov
inc
and
adc
mov
call
or
adc
ds
(bad)
push
not
fidiv
rcr
mov
sub
dec
sti
outs
jb
sub
or
das
cmps
push
jle
adc
repnz
xor
push
pop
(bad)
sbb
and
cmovg
inc
mov
pop
mov
adc
xchg
or
fdiv
xchg
add
xor
mov
inc
pop
icebp
stc
hlt
mov
and
stos
scas
sbb
mov
pop
mov
sahf
jge
dec
shl
adc
outs
adc
test
push
push
dec
movs
xor
pop
inc
mov
movs
mov
imul
sub
test
imul
jns
retf
cmps
jmp
add
mov
ins
rcl
pop
loopne
int
test
pushf
adc
dec
in
call
xchg
add
inc
inc
addr16
stos
inc
push
mov
mov
pop
mov
or
inc
xchg
fsub
push
mov
sub
xchg
mov
pushf
xchg
pop
lahf
mov
repnz
pop
or
dec
inc
sub
(bad)
or
mov
cmps
fild
mov
mov
nop
popf
mov
shl
scas
xchg
cmp
aas
popf
sub
pop
imul
xchg
push
(bad)
mov
lods
hlt
cli
jg
mov
push
sub
add
mov
dec
push
leave
repnz
cli
fwait
lahf
sar
mov
or
sbb
loope
jmp
sar
shr
pop
inc
dec
cmc
pop
rep
push
or
jl
dec
cli
dec
cmc
sbb
jp
xchg
retf
std
sahf
cwde
gs
out
push
lahf
jmp
or
in
lds
dec
push
sbb
xor
retf
in
mov
jle
mov
mov
add
or
dec
jno
and
data16
fisttp
jmp
mov
push
pop
cli
jg
mov
enter
push
sub
mov
repz
cli
je
ficomp
add
add
xlat
fnstenv
icebp
mov
lahf
push
pop
mov
xchg
std
sti
mov
or
adc
std
pop
jp
sbb
or
(bad)
loop
retf
jns
std
movs
mov
mov
pop
jne
xor
sti
cmp
mov
frstpm(287
movs
test
hlt
aam
mov
aam
cs
cmp
mov
sbb
mov
ins
push
call
jae
mov
imul
mov
xchg
push
and
adc
pusha
sub
add
call
test
mov
mov
dec
lds
inc
ror
repnz
frstor
sbb
xor
movs
mov
xor
and
xchg
add
add
test
adc
or
push
cmps
push
(bad)
ja
push
cmp
jmp
hlt
and
lods
jbe
mov
mov
loop
repnz
pusha
adc
cmps
les
jno
dec
jmp
(bad)
sbb
push
push
fnsave
push
pop
mov
sbb
lods
lods
mov
mov
rol
push
imul
cmp
add
mov
mov
sub
repz
xlat
mov
sub
mov
outs
nop
sub
push
jg
jno
stos
sub
xchg
aas
aad
daa
test
es
mov
rcl
add
retf
pop
and
mov
sub
dec
jae
out
inc
xchg
xlat
js
mov
(bad)
enter
je
push
inc
sub
push
pop
sub
xchg
adc
stos
fisttp
push
mov
mov
std
jbe
push
(bad)
pop
outs
ds
dec
add
fs
cmps
dec
ins
mov
retf
mov
sbb
and
push
pop
push
xchg
pop
sub
jmp
xchg
cmp
dec
mov
ins
outs
dec
cmp
sbb
rcr
leave
mov
dec
or
add
ins
ret
lods
mov
ja
pop
cdq
addr16
push
retf
inc
inc
pop
sub
xchg
push
xor
pop
pop
(bad)
mov
pop
and
sahf
cmp
pop
inc
fabs
ror
scas
jnp
dec
sbb
stos
xchg
and
movs
enter
aad
(bad)
movs
test
push
rcl
rcl
and
push
dec
or
push
repnz
mov
inc
mov
dec
push
loop
push
push
test
out
sbb
scas
cwde
out
scas
movs
jnp
std
push
es
add
jne
adc
or
jmp
loope
outs
jg
test
call
addr16
lahf
jg
inc
test
in
inc
dec
arpl
jb
inc
cmp
iret
je
ret
and
sbb
mov
cmp
cmps
pop
retf
mov
xor
in
add
xchg
mov
(bad)
xor
mov
mov
test
test
and
test
lds
pop
mov
xchg
push
test
push
mov
cwde
pop
stc
mov
test
push
lods
nop
cdq
add
std
or
movs
mov
lea
cmp
fdivr
ins
sbb
pop
ror
inc
push
jmp
push
xchg
inc
mov
jno
dec
push
add
dec
outs
dec
fidiv
mov
pop
xchg
sar
aad
test
or
shl
mov
cmp
bound
(bad)
fidivr
retf
mov
aad
xor
movups
inc
pop
sub
xor
stc
push
out
fmul
cld
fidivr
(bad)
in
or
out
xor
dec
popf
and
data16
movs
xor
push
adc
cld
scas
xor
mov
popa
mov
hlt
(bad)
into
pop
fmul
das
fmul
xlat
adc
xor
dec
xor
xchg
loope
gs
add
jno
adc
sbb
or
(bad)
sar
sbb
or
mov
xchg
push
xchg
sub
xor
adc
cmp
fnstcw
idiv
movs
gs
jle
int
test
push
sbb
mov
arpl
dec
repz
stos
std
push
jmp
jo
fwait
add
outs
leave
ss
pop
jmp
mov
aam
mov
aas
xchg
dec
retf
jecxz
int
jp
enter
retf
arpl
icebp
push
imul
(bad)
xchg
add
jae
mov
jno
js
loope
stos
sub
mov
cwde
fnstsw
loope
cmp
cmps
push
push
xchg
dec
test
xchg
sub
shl
sub
mov
mov
out
jno
xor
in
fstp
mov
adc
sbb
jmp
retf
lahf
mul
cwde
leave
(bad)
push
pop
push
push
hlt
adc
aaa
aad
cmp
fs
lds
mov
call
add
jbe
add
push
sbb
xor
cmp
loope
pop
iret
shl
jmp
or
mov
repnz
sbb
aam
xor
loop
test
xchg
in
shl
xchg
popa
inc
hlt
loop
ret
sbb
push
sbb
pop
xor
jnp
das
fidiv
mov
xchg
stos
inc
retf
mov
pushf
dec
(bad)
xchg
push
mov
ret
fucomp
nop
rcl
sub
jl
cmp
inc
and
pusha
cmps
or
pop
les
xchg
sbb
or
mov
loope
(bad)
fstp
(bad)
sub
mov
arpl
cmp
pop
mov
out
mov
je
jg
inc
push
(bad)
int3
mov
js
les
shl
mov
xchg
stos
movs
mov
mov
push
mov
mov
sub
cs
cmc
stos
sub
fcomp
bound
je
xor
cmc
xor
repz
xchg
test
mov
mov
sbb
aam
jecxz
jne
ret
and
cmp
cmp
mov
dec
sbb
mov
pop
rcl
mov
mov
pop
in
pop
call
mov
fs
push
xchg
dec
jb
xor
jp
cmp
imul
lea
paddsw
addr16
popa
jmp
push
daa
jmp
and
shr
push
paddsb
pushf
cmp
div
fstp
out
pop
rcr
pop
or
cli
sbb
mov
cld
(bad)
test
fiadd
sbb
add
fdiv
cdq
pop
push
sahf
lss
sti
sub
ins
les
iret
popf
sub
rol
pop
mov
fistp
jl
leave
stos
outs
movs
cmp
ret
push
sar
pop
nop
test
ret
and
aam
cmp
rcr
popf
mov
or
push
les
lea
jo
dec
sub
and
mov
jno
push
hlt
in
sbb
shr
(bad)
mov
dec
pushf
sub
mov
cwde
mov
mov
dec
int3
mov
push
push
nop
sub
pop
arpl
out
pop
mov
(bad)
je
xor
xchg
cmp
mov
mov
sahf
in
(bad)
sti
jbe
jns
jle
out
inc
mov
fisub
ss
inc
dec
push
xor
mov
or
fild
inc
out
jmp
aaa
pop
mov
jmp
div
xchg
pusha
mov
jb
test
imul
arpl
(bad)
movs
in
nop
enter
dec
mov
loop
cli
pop
fsub
call
popf
fs
mov
rol
jle
mov
and
clc
mov
inc
and
ss
shl
mov
xlat
popf
arpl
pop
push
dec
or
sub
repnz
add
pop
cmovs
(bad)
gs
mov
sub
ds
fistp
inc
jecxz
cdq
sti
retf
adc
inc
popf
cmp
pop
jae
cmc
xchg
ficom
mov
dec
sti
fistp
xchg
fisubr
(bad)
fisub
jg
jl
dec
mov
xchg
(bad)
(bad)
movs
(bad)
jns
mov
jmp
mov
or
or
shr
cwde
ficomp
movs
popf
hlt
push
xchg
inc
and
or
inc
push
jae
in
or
leave
or
push
bound
imul
in
bnd
xchg
fst
mov
cmp
imul
jo
cmp
dec
fdivr
push
in
or
jle
jae
pop
inc
and
adc
test
and
jle
(bad)
test
in
adc
adc
mov
fstp
mov
imul
push
push
and
inc
push
push
inc
add
add
sti
pop
and
inc
nop
cs
add
jmp
xchg
les
pusha
nop
push
jbe
mov
inc
mov
dec
pop
in
lods
jle
bound
jae
jecxz
iret
mov
push
fstp
xchg
cmp
and
adc
dec
mov
imul
stos
sub
inc
pop
out
xor
jle
jmp
(bad)
xchg
jnp
adc
push
cmc
stos
xchg
sbb
daa
daa
mul
test
mov
sub
enter
jmp
sbb
xor
shl
adc
xlat
cld
inc
jmp
fs
arpl
push
dec
test
xor
mov
es
rcl
cmp
dec
jle
mov
cmps
call
xor
jo
lods
or
and
movs
pusha
aam
add
in
ror
cmp
sbb
mov
jns
adc
popf
and
sbb
adc
inc
jbe
add
pop
jo
aad
test
push
inc
push
inc
sub
xor
dec
test
retf
(bad)
adc
enter
mov
mov
out
push
pop
retf
pop
aad
push
cmp
test
test
je
xor
and
sub
aaa
daa
icebp
fidiv
pop
sub
stos
call
xchg
mov
lods
stos
enter
pop
nop
sahf
stos
mov
mov
imul
push
push
aad
and
mov
mov
cdq
fisttp
xchg
lds
out
mov
mov
jb
scas
xor
jns
mov
mov
mov
push
dec
cmp
imul
cmp
sbb
pop
adc
aaa
imul
pop
dec
mov
bound
dec
arpl
inc
xor
and
jo
pop
cmp
imul
inc
cmps
iret
jno
xchg
mov
lea
xchg
test
xchg
or
gs
xor
jno
pop
inc
mov
fist
fcom
sub
shl
neg
imul
shl
push
add
push
or
adc
js
jo
clc
dec
xchg
sub
adc
xchg
xor
mov
jp
fs
data16
mov
nop
(bad)
jmp
imul
lea
jg
lahf
jbe
mov
mov
cmp
shl
ds
mov
ins
bound
mov
xchg
call
movs
test
xor
je
scas
int
push
and
and
cmp
mov
rcr
jg
test
jmp
hlt
add
aad
test
xchg
cmp
dec
push
inc
lahf
shr
shr
jbe
xchg
push
into
lds
xor
dec
cld
pop
lea
pushf
add
cdq
jb
dec
jno
sub
jle
inc
retf
push
ins
call
cmp
dec
cmp
div
jnp
cwde
adc
retf
sbb
test
gs
add
pop
xchg
dec
pop
movs
rcr
pop
xchg
int3
out
mov
pop
loop
pop
dec
sbb
push
push
sub
mov
(bad)
and
cld
sti
sbb
jae
out
mov
(bad)
mov
lock
adc
inc
sub
loop
adc
push
inc
push
pop
mov
je
add
xchg
pushf
test
jns
ja
add
push
pop
xchg
cmp
or
mov
sbb
je
push
nop
or
cmp
aad
in
data16
mov
pop
push
jbe
sbb
dec
and
mov
pop
call
inc
ds
mov
mov
jns
push
add
fcom
or
xchg
out
inc
mul
out
(bad)
mov
mov
fdivr
pop
imul
leave
in
sub
inc
sub
cmp
push
sbb
sahf
cmp
(bad)
in
and
popf
popa
rol
and
imul
data16
and
add
nop
or
add
cmp
dec
mov
fdiv
jge
fstp
jno
mov
inc
or
rol
into
sub
dec
inc
pop
xchg
lock
mov
test
mov
mov
icebp
fmul
sbb
cmps
xchg
icebp
shl
jb
adc
and
push
pop
mov
jmp
js
shl
aas
push
inc
bnd
shr
mov
push
sahf
xor
cmp
and
dec
les
mov
push
dec
and
pop
movs
inc
mov
xchg
hlt
jmp
leave
outs
sub
test
dec
test
test
jb
xor
pop
xchg
mov
jnp
and
mov
mov
into
mov
dec
sub
(bad)
adc
and
jle
imul
ins
shl
sub
je
jbe
dec
push
mov
and
xchg
ror
pushf
cmp
sbb
int
sub
mov
push
arpl
xchg
push
jg
sti
fwait
cmp
js
stc
outs
and
cmp
in
add
add
fwait
imul
fcomi
fwait
push
pop
in
loope
fstp
sbb
nop
push
out
add
mov
adc
inc
mov
push
xchg
or
cmp
add
mov
adc
push
in
xchg
out
cld
mov
(bad)
stos
or
or
xor
inc
sahf
mov
adc
jno
out
cmc
mov
jo
js
adc
pop
inc
inc
daa
iret
std
sahf
popf
test
test
push
dec
push
xchg
aas
add
test
adc
into
test
adc
pop
mov
das
ret
inc
jo
aas
jmp
pop
xchg
outs
push
aam
sub
rcl
add
into
mov
pop
lods
lds
mov
adc
cmps
bnd
push
fldcw
mov
mov
adc
and
mov
iret
dec
mov
push
je
test
xchg
adc
or
mov
sub
inc
mov
inc
(bad)
out
pop
mov
xchg
jbe
pop
push
pop
sbb
lds
and
push
mov
push
cld
push
in
inc
or
ror
or
mov
jne
lahf
mov
and
dec
mov
and
je
cmc
jae
shl
out
pushf
in
jae
mov
mov
xlat
(bad)
lods
inc
cmps
inc
xchg
fwait
xchg
mov
nop
mov
pop
in
mov
inc
add
je
out
mov
scas
fstp
xchg
push
ror
(bad)
jp
mov
es
xchg
imul
jne
and
cmc
not
sub
dec
and
lock
push
imul
dec
ins
pop
jno
push
in
and
inc
adc
sub
mov
imul
cdq
jl
rcr
hlt
xor
imul
push
stos
mov
push
push
es
(bad)
cmps
sub
adc
fcmovu
outs
cmp
in
and
icebp
mov
inc
(bad)
xchg
and
inc
lods
inc
arpl
sbb
and
xlat
inc
arpl
dec
xor
or
cmp
cmp
movs
repnz
sbb
sub
fisub
in
rcl
mov
pop
(bad)
sbb
cmps
mov
jle
rcl
sub
pop
add
dec
jns
pop
dec
push
push
mov
mov
mov
jge
fdivr
inc
frstor
jmp
xor
pusha
ret
add
cmp
xchg
pop
cld
movs
push
aad
dec
out
vrcpss
or
push
pop
aas
add
xchg
not
inc
sub
pop
xchg
cmp
mov
fwait
cmps
in
int3
aaa
dec
mov
(bad)
je
sub
push
jno
push
cwde
jmp
adc
xor
out
stos
add
add
mov
in
xor
(bad)
scas
jnp
push
dec
hlt
call
jmp
(bad)
rcr
dec
test
inc
xor
pop
das
xchg
sub
xchg
fwait
jno
xchg
jmp
sahf
or
(bad)
nop
aas
stos
inc
dec
rcr
push
mov
adc
xchg
ficomp
mov
aas
loope
sahf
movs
mov
jge
lahf
lds
xor
sub
xchg
push
in
mov
(bad)
out
fist
(bad)
cmps
cld
mov
cmp
out
xor
iret
adc
sub
loope
pushf
jb
xor
or
cmps
sar
mov
cli
jnp
sub
cwde
adc
je
adc
pop
add
clc
fdiv
pop
retf
cmps
retf
push
inc
stos
cld
add
rol
push
pop
pop
icebp
std
cmp
push
mov
xor
push
dec
(bad)
and
retf
pop
mov
fcom
rol
add
add
enter
call
cmp
outs
dec
dec
cli
mov
pop
adc
or
xchg
jmp
mov
fs
out
ror
outs
mov
dec
sbb
lea
shr
ja
adc
cli
add
fsubr
lea
in
cld
jnp
and
cmp
(bad)
push
ror
add
test
sbb
sub
cwde
fnstsw
movs
mov
mov
pop
loop
or
sti
sub
mov
mov
cmp
xchg
inc
or
es
sbb
jle
in
inc
push
add
inc
mov
inc
loop
sub
movs
arpl
lods
and
bound
cmp
dec
mov
pop
out
lahf
mov
xor
adc
dec
xor
retf
retf
cmps
cs
mov
add
test
loope
out
inc
xlat
ins
sbb
daa
xor
or
adc
push
mov
call
cmps
test
mov
mov
leave
bound
cmp
mov
out
xchg
xchg
pop
or
cmp
add
mov
scas
pop
mov
pop
mov
repnz
enter
cmps
test
mov
xchg
cmp
xchg
and
test
inc
mul
dec
xor
dec
lds
push
xchg
dec
aas
fwait
xchg
push
(bad)
fs
test
or
mov
enter
jb
jl
dec
jno
lods
icebp
mov
aad
push
mov
push
dec
loop
sar
push
mov
dec
xchg
scas
adc
dec
ins
cmp
push
xchg
sub
les
sbb
push
ds
repnz
sub
gs
jecxz
mov
mov
retf
es
dec
inc
and
loopne
js
(bad)
fldl2t
rcr
stos
sub
adc
mov
and
mov
or
psubb
outs
out
push
sub
(bad)
adc
sub
cmp
ins
aad
and
dec
sbb
sbb
rol
outs
loop
jb
out
inc
mov
mov
sub
cmp
jge
outs
or
dec
xor
test
dec
or
stos
scas
add
enter
add
loope
test
inc
and
push
in
pop
movs
fs
(bad)
cwde
sbb
mov
lea
movs
inc
dec
xor
mov
jl
rcr
jl
adc
fcom
dec
add
push
cli
inc
xlat
retf
int3
je
mov
push
rcl
jmp
and
add
dec
xlat
xor
cli
pop
imul
pushf
lock
xchg
scas
fcmovnbe
adc
xchg
xlat
dec
mov
movs
popf
ss
data16
lods
add
out
adc
mov
dec
xchg
neg
inc
icebp
push
mov
aam
loop
adc
push
shl
dec
and
mov
inc
in
and
pushf
icebp
jecxz
(bad)
sbb
mov
and
cmp
dec
mov
dec
stos
loopne
dec
mov
dec
ss
jnp
xor
lea
shr
stos
sbb
jp
fisubr
das
push
out
pop
ds
(bad)
lahf
lods
jge
(bad)
sar
repz
leave
sub
aad
int3
ret
push
xor
lea
bound
(bad)
mov
leave
jne
das
test
imul
push
add
test
xor
xchg
push
or
push
int
jecxz
(bad)
xchg
push
movs
test
xor
lods
mov
clc
out
jle
popf
add
(bad)
cmp
icebp
in
ins
pop
mov
pop
mov
jbe
inc
loop
push
add
xor
mov
inc
cmp
jmp
cs
cmp
fnsave
mov
rol
inc
xor
inc
mov
(bad)
mov
leave
sbb
mov
popf
ss
lea
push
ret
mov
lahf
lock
in
xchg
sub
xor
(bad)
and
movs
add
push
sar
xchg
lods
mov
jno
push
imul
dec
out
pop
and
fld
sbb
dec
in
add
dec
out
dec
pushf
mov
xlat
jae
loopne
sbb
retf
rol
rcr
mov
push
mul
and
or
mov
xchg
movs
rcr
movs
scas
xchg
pop
fs
jne
shl
retf
and
int3
sbb
pop
pop
lods
movs
repz
push
mul
mov
or
mov
sub
mov
xor
mov
jo
sub
sbb
movs
rcl
push
push
adc
mov
pop
jecxz
sub
lods
sbb
push
mov
(bad)
not
div
ret
push
es
aas
setge
rol
test
push
push
and
sbb
inc
sub
lods
jo
dec
push
cmps
icebp
shr
xchg
mov
sbb
jno
adc
test
sar
xlat
addr16
out
xor
lods
(bad)
lock
arpl
(bad)
dec
icebp
mov
add
cmps
js
push
and
data16
mov
icebp
in
mov
fcmove
pop
pushf
cmp
jecxz
lods
pusha
mov
push
(bad)
addr16
ror
jb
pop
loope
xlat
rcr
test
cmp
bound
pusha
mov
es
hlt
mov
fimul
test
popa
hlt
mul
into
jmp
mov
jmp
lock
(bad)
retf
cmp
rsm
scas
pop
xchg
jl
pop
inc
(bad)
and
nop
shl
cmps
xchg
pushf
mov
xor
(bad)
jmp
mov
mov
imul
fcom
push
outs
rcl
add
push
push
jo
rcl
inc
imul
and
mov
stc
push
xlat
and
lahf
enter
fsub
dec
or
movs
mov
(bad)
adc
in
sbb
inc
in
fmul
jle
ret
xor
inc
mov
(bad)
cli
push
pop
jno
add
js
sbb
bound
adc
shl
lahf
push
mov
pop
outs
push
std
mov
les
push
cs
stos
xchg
mov
test
cmp
xor
xchg
clc
inc
pop
popa
repz
jmp
xor
pop
pop
push
call
sub
in
shl
xchg
push
mov
shl
movs
pop
fidivr
inc
cmps
shl
lods
test
retf
pop
xor
pop
xchg
cs
aad
jno
pop
nop
cmp
pop
fldcw
lods
ins
mov
test
or
scas
dec
add
and
push
and
push
cld
mov
sbb
pop
sahf
jp
mov
movs
xchg
pop
mov
gs
or
jnp
dec
push
inc
mov
jno
sahf
mov
js
push
cdq
loop
and
cmp
cld
inc
lahf
in
loope
jp
lea
das
pop
dec
enter
mov
sub
daa
sub
mov
test
push
pmulhw
movs
push
pop
sbb
push
sbb
aas
xchg
jp
out
push
mov
cdq
sbb
add
mov
fstp
movs
js
and
fmulp
dec
(bad)
ins
leave
and
addr16
out
into
mov
lahf
into
xchg
loope
bnd
in
out
ins
hlt
mov
adc
push
cmp
add
hlt
pop
mov
(bad)
mov
fs
jb
mov
ffreep
push
or
jmp
push
cmp
lds
mov
rol
jle
das
cmc
jge
es
sbb
cmp
xchg
mov
pop
sub
and
test
fld
mov
(bad)
das
jb
jmp
mov
in
adc
in
ret
aam
jno
stos
dec
fdivr
hlt
icebp
in
mov
ins
push
ret
and
xchg
push
ins
or
aad
dec
cmp
cmp
jb
pop
mov
adc
jne
mov
int
jecxz
mov
or
shr
sbb
cld
xchg
add
cmp
sbb
sub
cmp
rol
ret
(bad)
push
pop
sbb
cs
rcl
aam
ds
call
jmp
mov
lea
test
movups
mov
fiadd
jmp
cmp
bound
adc
fisub
stc
aam
jp
rcr
mov
mov
mov
fs
cmps
mov
movs
repnz
leave
sbb
dec
loope
dec
shl
bound
sub
jbe
and
fs
xor
mov
cmp
mov
xor
stc
jecxz
mov
retf
mov
xchg
xchg
mov
lea
xchg
add
and
clc
sti
daa
mov
cs
dec
cmp
sub
(bad)
in
iret
push
mov
inc
dec
cmp
cmp
pusha
in
pop
pop
hlt
mov
jge
in
vsqrtpd
cwde
push
add
mov
gs
aas
sbb
xor
or
mov
loop
sub
and
lea
dec
mov
dec
je
outs
or
mov
add
repz
dec
mov
jg
pop
xchg
daa
push
das
or
(bad)
mov
inc
data16
xchg
add
rcr
cmp
in
push
sbb
inc
push
add
dec
ds
test
mov
cmp
xchg
mov
in
div
mov
repz
and
movs
sub
repnz
enter
mov
mov
hlt
cli
pop
jmp
xchg
repnz
cmp
setg
or
sbb
mov
jmp
mov
pushf
fsubr
mov
std
in
stos
adc
stc
out
xchg
sub
jae
test
out
inc
mov
into
repz
arpl
gs
dec
in
mov
repnz
adc
adc
add
adc
cs
mov
xchg
leave
xor
ret
dec
call
pusha
add
call
push
mov
fisub
hlt
loopne
ret
aam
jns
rcl
clc
icebp
and
aas
cwde
movs
cmp
repz
xchg
dec
mov
(bad)
sahf
jg
pop
mov
cmps
xor
aad
jp
popa
xchg
mov
inc
and
cmps
cs
sub
jne
fwait
mov
cwde
loope
fldl2e
dec
cmp
cdq
test
dec
jg
out
or
aas
(bad)
sub
psubusw
cwde
(bad)
xor
cmp
dec
test
dec
scas
je
sub
pop
or
(bad)
mov
rcl
mov
pop
test
sub
hlt
sub
loope
movs
xchg
jae
mov
pop
adc
cmp
sbb
test
cmps
clc
pop
cmps
cmp
mov
add
xor
sbb
mov
repnz
sub
jge
xchg
cdq
cmp
inc
loope
(bad)
add
movs
add
jle
aam
mov
jb
(bad)
lods
ds
stos
fisttp
mov
cli
mov
cs
cdq
add
iret
in
xlat
and
mov
cwde
add
mov
cmps
xor
in
or
out
ds
loopne
pop
jmp
int
cmp
inc
sbb
xor
push
mov
cmps
(bad)
jmp
add
imul
jecxz
(bad)
xor
mov
jns
jecxz
xchg
inc
mov
dec
call
xchg
adc
imul
ds
std
cwde
sti
jg
in
cmc
(bad)
aam
and
cmp
rcr
(bad)
xor
pop
nop
lods
xchg
ds
stc
push
fmul
jecxz
mov
xchg
scas
mov
jb
jl
sub
sub
arpl
test
adc
jge
xchg
add
cmp
push
es
aad
ror
(bad)
sub
mov
dec
int3
outs
out
jmp
cmp
sbb
fdivr
call
ja
jo
sbb
jo
fsub
xor
shl
jle
repz
pop
test
(bad)
push
jecxz
push
cmps
xchg
stos
out
popa
jns
outs
movs
in
jmp
bound
add
out
push
out
div
dec
jns
sbb
test
mov
xchg
jg
mov
cmps
or
das
test
and
sbb
mov
test
jno
sub
dec
div
dec
push
cmp
and
fcomp
cld
jge
pop
jb
aad
or
popf
cwde
out
sbb
jno
jge
pop
rol
cwde
icebp
loop
and
pop
xchg
jno
mov
cmp
and
push
pop
sbb
adc
push
mov
aam
xor
push
pusha
rol
dec
(bad)
cmps
jnp
mov
xchg
sub
in
jno
cmp
aam
and
xchg
js
js
mov
and
add
jae
rol
test
mov
sar
jecxz
retf
mov
jecxz
xchg
in
mov
inc
lods
sub
mov
jle
push
xor
xchg
lods
push
sub
pushf
lods
mov
sub
jo
pop
mov
arpl
clc
mov
sbb
test
xchg
scas
imul
and
movs
frstpm(287
cmp
ror
add
lods
pop
push
push
outs
ja
cmp
in
push
fild
shr
cmp
xchg
fidiv
adc
fisub
jnp
jge
adc
jge
add
icebp
sti
sub
mov
add
imul
pop
mov
rol
adc
add
aam
neg
push
ror
sbb
xlat
sub
retf
and
nop
inc
push
out
add
adc
jne
stc
jp
jg
dec
fcmovnbe
dec
outs
sub
add
adc
and
dec
xchg
cmc
rcl
stos
inc
dec
dec
test
mov
jecxz
pop
cs
lahf
addr16
icebp
test
mov
jne
xchg
mov
sbb
loop
push
mov
mov
push
mov
movs
js
sbb
push
nop
sub
data16
or
add
rcl
jmp
test
and
fist
into
dec
(bad)
pop
pop
movs
inc
aad
jb
aaa
cli
jg
push
inc
push
and
cs
sub
sbb
shl
(bad)
aad
cmp
jle
sub
je
cwde
mov
mov
lods
stc
icebp
xbegin
in
jmp
aas
xlat
std
mov
push
inc
inc
jmp
sar
jp
imul
mov
(bad)
cli
jnp
cwde
and
fnsave
(bad)
and
lea
sub
mov
mov
sbb
(bad)
jl
ret
(bad)
push
fsubr
and
cmc
cmc
cmp
cmps
repz
xchg
cmp
sbb
iret
pop
pop
fst
(bad)
scas
inc
dec
push
dec
pushf
or
daa
lahf
rcl
sbb
pop
push
pop
mov
jnp
imul
icebp
out
pop
ret
outs
and
and
loop
dec
adc
aas
and
aam
adc
jnp
inc
psadbw
sbb
xor
cmp
xlat
sar
dec
lahf
jno
dec
pop
pop
mov
mov
data16
je
bound
bound
lahf
cmps
mov
mov
pop
call
das
dec
in
dec
add
mov
int
and
sbb
xchg
add
mov
gs
cmps
fidiv
es
mov
push
xchg
call
mov
sbb
push
call
mov
cdq
cmp
bound
xchg
add
shl
jo
sbb
add
pop
ds
adc
dec
jae
fdivr
inc
or
test
cmp
sub
mov
mov
push
pusha
call
xchg
popa
std
je
(bad)
into
add
cwde
xchg
jecxz
jnp
imul
jmp
xchg
cmp
push
sbb
js
bnd
and
shl
push
mov
jmp
cmp
addr16
sub
inc
sahf
arpl
fistp
pop
jl
adc
jl
sbb
xlat
in
xor
sbb
add
push
imul
pop
addr16
add
loope
mov
add
mov
push
push
call
dec
movs
cmp
mov
addr16
mov
outs
test
xchg
add
xchg
add
mov
(bad)
popf
cmp
out
jo
cmp
pop
adc
inc
lea
jecxz
xchg
cmp
imul
pop
and
jb
gs
imul
sub
imul
sub
sub
mov
mov
add
mov
cmp
test
sbb
not
jge
jle
in
or
mov
loopne
dec
push
call
dec
dec
dec
ret
dec
pop
mov
or
jmp
leave
xor
jo
add
inc
mov
out
lods
xchg
aas
push
and
jbe
stos
push
pop
xor
cdq
stc
aaa
fld
jbe
adc
xor
leave
adc
push
sbb
push
pop
adc
in
fldenv
test
or
stos
test
xor
inc
nop
int
mov
sbb
cmc
jb
mov
movs
js
fs
les
cld
mov
(bad)
xor
fsubr
mov
push
xchg
movs
cmp
test
popf
mov
fldcw
sahf
loop
sbb
dec
push
xchg
mov
in
mov
add
sbb
mov
cmp
mov
adc
jae
mov
sar
mov
or
imul
out
dec
cmp
mov
bound
dec
inc
inc
cmp
push
sbb
cmps
iret
dec
pop
fld
sahf
push
adc
push
inc
cmps
add
cmp
push
and
xchg
cld
call
push
dec
jmp
dec
iret
mov
push
sub
aam
and
scas
in
xor
dec
(bad)
dec
add
inc
sub
js
hlt
scas
fxch
xchg
fistp
sub
test
mov
outs
mov
les
das
outs
fs
mov
cmp
mov
popa
in
imul
out
fst
sub
ds
test
popf
sbb
(bad)
inc
xchg
(bad)
dec
cmps
lock
cmc
imul
pop
add
push
loope
out
push
call
pop
fldpi
jmp
mov
xor
push
aad
push
or
retf
cmp
stc
push
mov
bound
cmps
pop
mov
sbb
or
add
rcr
dec
ss
movs
xchg
adc
adc
mov
sbb
idiv
pop
imul
xchg
sub
mov
ss
jo
pop
dec
aas
sahf
dec
inc
adc
inc
mov
xor
mov
sti
popa
mov
cmps
sti
aas
cwde
hlt
cmps
dec
adc
cmp
(bad)
ss
int
lods
dec
movs
sbb
xor
fdiv
imul
dec
jae
rol
jle
in
jg
xchg
std
jge
dec
mov
xor
minps
test
in
arpl
add
shl
push
scas
dec
pop
inc
fcomi
add
jg
ds
stc
cmps
dec
in
jp
push
pop
jge
pop
(bad)
sub
repnz
(bad)
push
push
icebp
les
mov
les
mul
adc
call
mov
shl
cmps
or
xor
mov
out
stos
pop
lds
shr
sahf
push
push
inc
and
jno
jecxz
(bad)
out
fadd
ss
and
retf
xchg
call
iret
into
push
xor
retf
add
pop
add
adc
push
inc
push
jmp
(bad)
cmp
lds
mov
loope
mov
fwait
xchg
inc
sbb
sub
mov
inc
fwait
test
xchg
jbe
lock
int
sub
mov
(bad)
cmps
(bad)
sbb
pop
add
cmps
mov
jp
mov
adc
sub
cmp
mov
and
jb
and
push
push
stc
fs
repz
and
fst
aam
out
sub
sbb
push
mov
or
leave
add
cwde
push
and
js
(bad)
pop
adc
mov
int3
lods
idiv
sbb
mov
sbb
jge
xchg
push
xor
mov
cmp
in
fisub
push
les
fmulp
hlt
add
add
outs
cmp
retf
dec
lds
aam
aas
push
imul
push
cwde
cmps
mov
sbb
ins
sub
ins
dec
cli
fmulp
lods
lods
cmps
scas
xchg
push
fdivr
aam
mov
icebp
ins
mov
xlat
or
or
or
cmp
and
cdq
cmp
jmp
arpl
test
loopne
push
sbb
test
arpl
mov
retf
sub
adc
and
adc
data16
and
cld
mov
fscale
cmps
fucomi
outs
adc
and
fisub
and
movs
inc
xchg
lea
mov
mov
movs
into
mov
xor
xchg
int3
rcl
push
(bad)
xchg
(bad)
xor
aam
int
aam
adc
rol
and
inc
push
mov
adc
mov
dec
push
imul
add
dec
cmp
pop
out
(bad)
dec
mov
push
ficomp
mov
je
movs
pusha
imul
(bad)
cmp
fwait
cmps
pop
fst
(bad)
test
push
(bad)
lods
inc
popa
retf
push
dec
xchg
cmps
scas
cmp
inc
movs
xor
sti
leave
cs
fmulp
(bad)
shl
loop
movs
inc
cmp
sub
in
sbb
dec
jns
mov
jge
xchg
fwait
nop
ins
stc
mov
leave
in
in
jns
mov
sub
out
dec
mov
les
les
bound
or
dec
and
gs
in
add
jbe
sbb
cmp
fcom
div
gs
xchg
push
mov
push
outs
push
mov
pusha
jge
and
call
sbb
dec
nop
cmps
xchg
test
sbb
nop
xchg
mov
stos
lahf
mov
pusha
fild
lods
mov
xchg
cmp
mov
jo
xor
scas
dec
or
jl
(bad)
(bad)
cmp
push
ss
inc
push
xor
aas
push
push
outs
cmc
out
in
or
loope
jne
popf
dec
push
jl
or
adc
into
cdq
sti
imul
je
hlt
outs
push
mov
bound
(bad)
cmps
stos
test
iret
push
sub
dec
mov
add
adc
mov
push
mov
push
cwde
idiv
sbb
aas
mov
and
pop
das
xchg
add
pushf
mov
div
mov
pop
adc
nop
adc
mov
inc
adc
sti
pop
jecxz
lds
xchg
fistp
imul
pop
sahf
clc
dec
sar
jno
xchg
xchg
daa
enter
imul
clc
xchg
je
arpl
push
jge
ficom
jbe
push
mov
push
xor
push
add
imul
sahf
mov
out
call
kmovw
ret
inc
outs
sbb
pop
and
scas
jae
dec
loop
cmp
cmps
gs
in
retf
mov
sub
mov
icebp
mov
xchg
and
sub
in
pop
mov
add
xchg
sahf
add
cmp
cld
cli
xchg
aaa
stos
movs
mov
pop
sub
inc
pop
xlat
add
add
mov
pop
stc
or
mov
scas
cmps
xor
adc
and
(bad)
mov
fdivr
les
mov
ret
pop
icebp
outs
scas
mov
das
pop
and
mov
idiv
sti
inc
push
mov
dec
test
fidiv
cs
in
inc
push
ds
loope
push
mov
aam
fst
push
gs
cmc
add
adc
ror
(bad)
xchg
jg
inc
mov
pop
pop
std
sbb
icebp
idiv
(bad)
mov
arpl
retf
rcr
sub
cs
sbb
in
(bad)
nop
push
popf
pop
pop
ret
mov
adc
jmp
jno
inc
adc
sub
xchg
inc
add
and
push
mov
jb
mov
fst
out
mov
cwde
lods
jl
xor
or
jg
xlat
adc
cs
fld
scas
inc
fisubr
mov
mov
xchg
gs
mov
sbb
xor
sbb
xchg
pop
jl
cmp
icebp
aam
call
sbb
adc
xchg
mov
es
push
scas
outs
outs
out
dec
fnstcw
(bad)
fstp
pop
in
loop
sbb
mov
aaa
mov
and
imul
(bad)
pop
xchg
outs
mov
inc
adc
xor
inc
dec
push
xor
adc
and
dec
ins
xchg
call
and
movs
mov
aas
dec
neg
in
ins
imul
push
inc
or
add
outs
fidiv
sbb
pop
dec
movlps
xchg
ret
repnz
dec
pop
repz
xor
lods
(bad)
clc
loope
movs
test
sub
push
ret
and
test
fild
gs
mov
xlat
jne
mov
out
inc
and
push
cli
mov
push
xlat
lods
adc
pop
stos
push
rcl
les
xor
sti
(bad)
rcl
outs
pop
or
mov
cld
mov
fwait
int3
jo
xchg
xor
ss
mov
mov
sub
in
dec
scas
pop
add
pop
xchg
pop
cmc
xor
push
mul
pop
call
sub
sub
daa
mov
ds
retf
div
push
out
fidiv
mov
sub
in
test
fcomp
enter
xor
add
dec
jnp
mov
jmp
push
dec
inc
es
push
jle
sub
sbb
push
call
mov
xchg
mov
fild
arpl
test
push
xor
pop
jbe
je
fsubr
idiv
xchg
jg
vmovmskps
jns
mov
shl
(bad)
movs
scas
pop
jo
push
in
imul
sbb
adc
push
mov
mov
(bad)
ins
xchg
jnp
adc
bound
leave
mov
mov
ret
inc
sub
shl
push
shl
or
lahf
inc
or
xchg
mov
and
cmp
or
in
stos
inc
lods
mov
jne
call
fwait
in
and
lahf
xchg
jp
imul
out
mov
data16
(bad)
cmps
out
fnstenv
add
in
outs
push
xchg
out
fwait
mov
out
inc
in
or
(bad)
dec
dec
cmp
lahf
jp
and
push
out
ds
test
sahf
sub
call
(bad)
les
lods
shl
(bad)
(bad)
sahf
lds
mov
and
jp
add
mov
push
or
sub
xor
pop
es
mov
mov
fdiv
mov
and
and
imul
xchg
jo
pop
mov
mov
xlat
push
jno
sar
inc
sub
(bad)
aam
mov
fsubp
repz
int3
push
mov
xor
(bad)
jmp
sub
popa
push
stos
mov
das
bnd
test
add
xor
out
jg
aad
popa
fistp
add
jmp
mov
add
mov
sub
shr
add
std
mov
jge
dec
lods
stos
xchg
test
push
mov
add
push
mov
(bad)
fsubp
and
lock
(bad)
sub
cmps
sub
cmp
outs
fxch
xor
cmp
ins
dec
loopne
mov
jecxz
cmps
pusha
adc
sub
aad
mov
les
adc
cli
mov
shl
mov
push
stc
jl
jg
movs
outs
gs
sub
inc
mov
test
add
push
out
jecxz
icebp
jns
mov
ror
push
and
pop
(bad)
scas
stos
sub
or
push
add
and
jns
inc
ins
mov
fisttp
dec
cmp
fsubr
pop
jmp
pop
adc
and
pop
cmp
sub
pop
daa
fwait
pop
cld
xchg
cmc
pop
(bad)
jle
jle
stos
pop
in
push
sub
adc
ds
aam
adc
push
loopne
push
add
or
arpl
sub
push
sub
cmp
adc
mov
fiadd
lahf
pop
xchg
push
out
pushf
jmp
in
into
std
loop
adc
fistp
mov
mov
sub
jns
jne
fst
test
sub
sub
lods
loope
pop
jbe
add
test
push
inc
xchg
xchg
xchg
pop
fcomp
int3
pop
bound
ror
mov
adc
cmp
pop
stos
sti
or
lods
jl
loope
mov
cmps
pushf
xor
xlat
stos
add
jae
outs
mov
jle
sbb
xor
adc
adc
loope
pop
dec
mov
and
inc
mov
shr
into
scas
push
addr16
test
push
lea
sbb
test
jmp
fdiv
ss
sbb
adc
stos
dec
sub
push
pop
ins
sub
push
inc
ficomp
mov
mov
xor
loopne
ins
dec
mov
xor
or
pop
sub
cdq
lods
nop
retf
and
(bad)
in
dec
mov
loope
(bad)
add
aam
nop
add
inc
mov
out
mov
jbe
ss
mov
in
in
repnz
mov
dec
or
xchg
and
outs
sbb
pushf
mov
mov
imul
in
xchg
jmp
or
or
idiv
or
ins
mov
cmp
(bad)
cmp
sub
or
call
ja
dec
out
sub
xchg
add
aam
sub
in
xlat
test
fs
sbb
mov
cmps
mov
mov
cmp
inc
lods
cmps
sbb
cmps
jbe
inc
cmps
mov
aam
dec
sbb
imul
(bad)
das
inc
xchg
(bad)
dec
pop
push
daa
cmps
mov
jb
ds
mov
bound
fstp
icebp
pop
retf
test
sub
jmp
test
ficomp
imul
xchg
adc
jmp
cwde
mov
popf
movs
jle
jo
push
mov
ret
jge
dec
clc
add
xchg
fucomip
in
icebp
fisttp
jnp
mov
test
rol
jecxz
add
jne
jg
loopne
int
mov
aam
mov
ret
pop
jno
mov
lahf
nop
jmp
inc
std
loopne
jge
jae
je
mov
push
pop
lahf
dec
xchg
add
sar
ss
pop
aas
scas
mov
dec
jecxz
xchg
push
inc
out
cli
jne
mov
xchg
aam
cld
lahf
cmps
cli
xlat
and
mov
fsub
(bad)
mov
lods
cmp
leave
xor
shl
jo
xchg
int3
test
mov
mov
xor
rcr
sub
cld
push
sub
push
inc
jl
push
push
(bad)
push
sub
dec
rcr
in
jmp
minps
dec
dec
cdq
add
dec
sub
dec
rcr
jp
push
dec
imul
iret
xlat
(bad)
jmp
data16
mov
xor
pop
test
lods
push
imul
xchg
mov
jno
mov
push
dec
icebp
ret
pop
sub
add
cmp
sub
jmp
ret
xor
push
cli
jg
jno
stc
jno
add
sub
jno
and
cmp
push
cmps
femms
and
loopne
sub
xlat
mov
mov
iret
les
jno
push
pop
in
and
sub
push
xchg
push
pop
jns
sbb
jmp
ins
out
mov
fld
inc
test
push
pushf
cmp
ja
fsubr
add
stos
inc
cmp
mov
adc
jo
fnstcw
xchg
fstp
inc
mov
push
sub
mov
sbb
sbb
mov
sub
imul
mov
adc
in
icebp
lods
sbb
inc
cmp
cwde
rdmsr
inc
repnz
or
in
jbe
mov
mov
pop
cmps
jecxz
mov
xor
cmps
or
mov
pushw
mov
xchg
or
sbb
adc
loop
inc
pop
test
dec
inc
dec
pop
xchg
pop
and
mov
fsubp
gs
cmp
ret
and
sbb
and
int3
push
xlat
movs
not
xchg
fmul
push
mov
add
or
(bad)
mov
repnz
mov
jnp
push
dec
int3
nop
inc
and
retf
xchg
sahf
pop
bound
or
das
mov
mov
push
cmps
lods
adc
xchg
push
inc
lahf
hlt
retf
xchg
stc
je
xchg
jb
and
pushf
add
mov
pop
push
sbb
xchg
movs
mov
enter
les
push
push
mov
pop
test
mov
add
mov
xchg
ds
and
cmp
xchg
jae
retf
or
lock
loop
push
push
popf
sbb
rol
and
adc
lahf
and
mov
add
or
dec
or
mov
xor
repnz
scas
push
movs
fcmove
xor
in
cmp
mov
icebp
ror
call
add
arpl
iret
aaa
ficom
cmps
cdq
pop
dec
push
dec
inc
adc
dec
sub
in
out
les
lock
in
test
add
sub
rcl
cmp
out
mov
sbb
push
xchg
lock
xchg
add
mov
int
jmp
pop
test
pop
jl
mov
xor
inc
ret
adc
int
shr
cdq
or
daa
xchg
inc
cld
or
jne
adc
sub
add
jecxz
sbb
mov
jb
pop
jle
rdtsc
push
add
sub
push
cwde
inc
cmovle
sbb
ret
xor
fldenv
data16
dec
sub
mov
dec
neg
pop
pop
nop
and
fcmovbe
xor
xchg
add
sub
test
icebp
mov
push
mov
pop
push
adc
adc
adc
xchg
fcom
dec
and
inc
cmps
fwait
(bad)
sub
test
dec
daa
mov
push
push
xor
cmp
pop
mov
push
mov
ret
into
mov
stos
out
sbb
push
daa
dec
and
fsubr
shr
mov
mul
add
scas
movs
xchg
add
stc
jp
mov
lds
and
in
call
test
pop
pop
scas
in
xor
ins
xor
call
push
and
stos
movs
cmp
mov
cmp
int3
int3
fcom
sub
pop
jo
sub
stos
fs
out
out
and
xor
aas
outs
push
jg
xchg
in
jecxz
fsub
pop
gs
adc
dec
dec
xchg
cwde
pop
sbb
xchg
lds
inc
xor
adc
jb
mov
aas
(bad)
repz
fucom
mov
sbb
push
inc
jo
dec
mov
xchg
jns
(bad)
xchg
mov
into
push
test
add
push
pop
loopne
adc
dec
push
in
dec
xor
push
push
ror
imul
nop
mov
inc
retf
ins
data16
jl
add
and
jnp
sahf
cmp
adc
cmp
and
lock
xor
xchg
inc
cmp
sahf
sbb
pushf
push
lods
fdiv
sbb
lahf
xor
bound
or
dec
mov
xor
add
xchg
std
mov
xchg
dec
jg
mov
les
shr
xchg
xchg
add
cmp
lds
mov
dec
inc
cmp
rol
popf
loopne
mov
sub
inc
mov
jne
jne
inc
mov
mov
(bad)
mov
push
cmp
pop
push
lahf
sub
(bad)
cmc
mov
push
push
push
imul
jge
xchg
adc
test
je
test
push
scas
push
push
pop
out
popa
jmp
sti
je
lock
inc
dec
test
sub
pop
add
out
adc
ror
mov
push
push
jle
adc
pop
das
test
call
adc
cmp
mov
push
ja
cmp
inc
push
adc
jge
in
cmps
out
adc
add
pushf
dec
les
or
ja
out
xor
stos
std
sub
push
mov
add
in
iret
inc
mov
mov
push
stos
sub
adc
ret
out
call
add
lods
in
mov
fimul
adc
int
(bad)
mov
in
sar
ror
sub
inc
stos
scas
inc
push
and
out
xlat
retf
test
lods
cmps
cmps
stos
test
test
imul
adc
test
mov
loop
jb
fwait
cld
jge
fidivr
sbb
mov
xor
lea
imul
(bad)
cmp
les
(bad)
jae
sbb
aas
gs
xchg
push
sub
sub
mov
adc
test
or
dec
and
mov
and
packuswb
xchg
js
dec
and
pop
jmp
push
jp
mov
je
adc
jl
pop
jns
mov
cmp
shl
test
pop
sub
and
push
btc
mov
in
adc
push
imul
push
mov
cmp
gs
(bad)
jae
out
xor
dec
std
xor
xchg
push
in
jl
adc
adc
loope
xchg
inc
xchg
dec
test
enter
mov
dec
test
xchg
push
sub
ds
pop
jb
(bad)
aaa
sbb
loopne
nop
inc
dec
mov
cmp
and
fidivr
mov
or
(bad)
push
(bad)
stos
hlt
and
mov
outs
mov
scas
pop
pop
bound
dec
jmp
mov
and
cmp
popa
fwait
sar
adc
push
xor
pop
das
lahf
dec
addr16
movs
jg
imul
push
adc
pushf
dec
jmp
jp
gs
xchg
cs
test
xor
lods
sbb
inc
lods
inc
out
in
mov
sbb
ret
sub
inc
cmp
repnz
cmp
out
and
jmp
ret
sar
jg
lods
clc
lods
mov
jp
retf
push
in
popa
cmps
xchg
cmp
movs
inc
mov
jmp
aas
(bad)
fxtract
adc
jnp
movs
mov
pop
cs
shr
mov
pop
outs
pop
jb
mov
add
bnd
dec
pop
push
pop
xchg
mov
dec
outs
pop
mov
or
test
mov
adc
rep
shl
ss
fnsave
js
pop
or
mov
push
xor
inc
popa
fst
jmp
fnstenv
stc
(bad)
xchg
sbb
add
in
cmps
jno
xchg
aam
sbb
sbb
arpl
dec
or
xchg
icebp
jne
xchg
cmps
mov
add
outs
int
fcmovne
loop
mov
or
add
popf
push
out
and
in
test
sar
inc
test
sbb
cmp
cs
jae
addr16
xchg
mov
xor
adc
and
jae
and
jge
xchg
mov
xor
push
inc
add
popf
sub
ficomp
cmps
fild
test
xchg
mov
stc
(bad)
hlt
aas
nop
outs
popf
pop
or
push
jmp
pop
push
inc
xchg
mov
(bad)
and
pop
mov
inc
push
xchg
aad
enter
dec
inc
popa
in
shr
xchg
in
in
or
test
jg
test
mov
imul
xor
or
rcr
lock
dec
es
dec
repz
adc
adc
lods
(bad)
pop
dec
jg
mov
mov
jmp
push
dec
mov
rol
xchg
div
nop
sar
test
jns
add
dec
test
mov
mov
pop
call
ja
xchg
stos
fs
fsubr
ret
xor
aaa
xchg
ss
int3
xor
hlt
jecxz
jp
xchg
cs
pop
sub
rol
enter
loopne
shl
mov
or
jbe
pop
inc
daa
out
aas
outs
push
sbb
vsqrtps
sbb
dec
push
dec
sub
xor
imul
and
test
pusha
sti
mov
rol
pop
popa
test
add
aad
ficom
rcl
jae
cld
icebp
repnz
call
add
xlat
test
and
sbb
(bad)
in
and
or
jae
movs
xchg
and
push
add
xchg
in
int
cmp
mov
out
das
cwde
mov
pop
test
xchg
sbb
outs
scas
test
sbb
pop
inc
repz
hlt
cmp
push
(bad)
fstp
pop
shl
cmps
xlat
pop
cdq
sbb
xor
add
shl
lds
push
imul
pop
or
das
pop
pop
dec
mov
xchg
mov
xchg
pop
dec
mov
inc
sbb
call
(bad)
push
cmp
cdq
add
push
adc
sub
lods
cwde
into
iret
(bad)
rcl
fs
stos
aad
jns
inc
sub
and
ins
add
ins
pusha
xor
cmp
scas
in
jne
pushf
iret
sub
inc
(bad)
test
adc
add
dec
addr16
js
pop
push
add
fild
aam
leave
push
or
fsub
dec
js
sub
test
es
push
and
test
shl
loopne
enter
jnp
or
mov
dec
fdivr
push
imul
lahf
cs
jg
cli
test
arpl
push
aam
pop
leave
and
and
es
mov
imul
sub
out
(bad)
neg
cmc
mov
push
test
xchg
mov
sahf
xchg
mov
imul
pop
shr
adc
add
lock
xor
adc
mov
iret
cmc
mov
push
mov
shl
xor
bound
ficom
adc
shl
(bad)
scas
xchg
pop
jg
xor
imul
jecxz
int
add
movs
lods
pop
ins
scas
movs
cdq
dec
mov
mov
xchg
xchg
loope
scas
sub
cld
ds
sbb
stos
mov
xor
dec
lock
cmp
out
pop
or
mov
xchg
mov
pop
movs
test
sbb
in
cmp
fdivr
xor
dec
sbb
leave
and
call
dec
loope
add
mov
xchg
mov
arpl
je
push
mov
sub
rcl
cmp
pop
mov
mov
pop
ret
std
mov
sti
int
ss
(bad)
sbb
push
(bad)
cmps
cld
hlt
(bad)
dec
and
popf
jl
jo
nop
add
out
ss
mov
xor
and
scas
test
xor
xchg
fist
mov
pushf
mov
call
dec
nop
and
icebp
repnz
jmp
cmp
xor
fisub
adc
add
xchg
movs
addr16
arpl
rcr
lods
out
jg
mov
mov
loopne
sub
push
in
test
hlt
jmp
lock
shl
stc
cli
cli
push
cmp
call
jno
pop
test
push
push
jecxz
adc
jp
lea
mov
cmp
xchg
push
cmp
ins
ds
mul
in
push
fld
clc
les
xchg
xor
std
xchg
movs
push
ret
jb
ret
pop
xlat
push
imul
or
fcomi
xchg
and
repnz
inc
rcl
(bad)
and
pop
dec
xchg
(bad)
sub
sbb
mov
jae
cmc
adc
xchg
add
repz
es
jnp
adc
mov
sbb
cld
fdivr
xor
mov
imul
xchg
sub
adc
add
(bad)
aas
push
(bad)
(bad)
stos
test
pushf
dec
sbb
lods
jo
aam
mov
aad
mov
jns
jg
pop
outs
in
jmp
cmp
push
movs
imul
cmp
jo
mov
cli
sti
push
jge
cmc
jbe
sbb
adc
and
ss
cmp
mov
pop
aam
pop
cmp
(bad)
sbb
push
shl
sub
xchg
(bad)
shr
out
lds
mov
push
in
mov
mov
ins
or
jnp
out
mov
sbb
and
loope
inc
or
outs
jle
xchg
das
icebp
push
ja
and
inc
inc
pinsrw
jns
adc
and
(bad)
push
movs
call
jmp
xor
outs
or
mov
not
xor
int
retf
fcom
fs
pop
call
adc
loop
sbb
(bad)
mov
mov
mov
adc
add
test
push
retf
mov
mov
test
jbe
push
or
and
xor
xchg
pop
rcl
repnz
cli
push
mov
fs
mov
jno
ret
adc
cld
mov
adc
pop
add
shl
ins
in
xchg
sbb
ja
movs
jg
jmp
xchg
add
pop
push
stc
icebp
adc
jle
xor
stos
jmp
and
jge
pop
adc
inc
mov
dec
(bad)
cld
cmp
dec
jg
jo
hlt
fldenv
ds
out
add
daa
(bad)
cmps
ds
xor
add
xchg
lahf
dec
in
loopne
jno
(bad)
fisub
dec
mov
jp
inc
(bad)
xor
add
jg
out
rcr
push
jmp
fwait
dec
mov
jmp
push
in
pop
inc
and
lods
mov
int
add
mov
pop
push
pop
jecxz
int
retf
outs
(bad)
xor
(bad)
in
inc
pop
pop
lds
call
(bad)
lahf
aam
xlat
sub
scas
sub
mov
add
xchg
or
xchg
rol
loop
adc
mul
and
das
inc
pop
dec
inc
add
jmp
sbb
mov
push
movs
add
cli
sti
(bad)
fld
jle
sub
xchg
dec
cmp
stos
adc
ret
imul
sar
daa
fucom
mov
es
(bad)
mov
ja
jmp
mov
cmp
push
clc
test
push
push
retf
fstp
pop
and
ja
mov
nop
and
lods
jb
iret
cmp
addr16
popf
xor
dec
fld
jle
aas
int
sbb
adc
nop
stos
call
ss
lahf
and
dec
pop
rcr
sahf
cmp
in
cmp
and
loopne
push
push
inc
add
int
mov
cmps
iret
test
retf
int3
xlat
std
pop
cmp
and
lock
sbb
jge
pop
fs
push
mov
mov
xchg
jb
push
cmp
lds
data16
dec
nop
aas
(bad)
fcomp
sbb
sub
sbb
dec
sbb
enter
shr
pushf
xchg
inc
aad
shr
pop
rcr
mov
mov
mov
fwait
bnd
in
or
push
fdivr
add
hlt
jne
(bad)
js
pop
jno
fsubp
and
mov
popa
imul
ds
sbb
in
aaa
xor
and
and
enter
pop
mov
inc
xor
xchg
inc
cmp
fbstp
xor
repnz
inc
push
sub
push
test
push
in
mov
jp
popf
jns
fdivr
dec
call
or
mov
and
fst
dec
inc
jg
out
sub
cs
mov
mov
xchg
cs
pushf
jp
pop
jne
in
fistp
lahf
push
push
jg
push
xchg
xor
sub
sub
push
cmps
test
and
inc
adc
adc
and
leave
loope
add
loope
test
cld
sub
mov
stc
cmc
adc
pop
lods
scas
mov
std
mov
xchg
push
clc
push
fs
add
stos
jns
push
mov
jmp
cmc
mov
dec
push
fs
loopne
pop
lea
adc
mov
pop
cmc
aas
loop
mov
add
sub
xchg
in
retf
out
repz
iret
pop
add
in
jle
arpl
adc
in
or
mov
lods
js
in
cmc
stc
jmp
aas
adc
jmp
ss
xor
ret
jne
pop
mov
je
add
inc
push
mov
imul
sub
add
sti
nop
cmp
enter
add
sub
shl
bswap
cmps
popf
bound
mov
jnp
jae
adc
pop
or
lock
and
and
or
pop
mov
test
mov
dec
nop
cdq
cmps
cdq
mov
nop
scas
and
adc
cld
or
imul
iret
mov
test
lahf
xchg
jae
(bad)
movs
mov
pop
out
push
mov
dec
xchg
sub
shl
call
or
push
fldenv
or
inc
add
in
mov
dec
dec
inc
dec
cmp
mov
or
aas
in
jp
xor
getsec
cld
std
ins
pop
clc
pop
(bad)
mov
cmps
lods
push
ret
sub
sub
jmp
cmp
push
mov
and
movs
adc
test
and
scas
lods
bound
cli
mov
dec
inc
sub
data16
lods
mov
lea
adc
and
out
test
aad
lds
xchg
mov
ret
push
test
mov
aaa
mov
sar
ret
push
pop
add
xor
rcl
xor
adc
mov
jns
jno
in
pop
(bad)
sub
push
push
setle
sbb
pop
xchg
leave
xor
movs
mov
inc
adc
mov
js
adc
push
inc
cwde
inc
and
mov
out
sbb
rcl
sbb
aad
cmp
ror
cmps
push
inc
push
aam
sub
push
inc
pop
xchg
daa
xchg
ins
leave
sub
stos
mov
dec
pop
outs
inc
mov
cmps
movs
push
mov
jecxz
push
inc
shr
push
adc
push
jmp
xor
sub
shl
call
repz
inc
pop
imul
retf
mov
add
cmp
loope
pop
add
sti
jg
dec
push
popa
movs
in
add
sub
in
bound
loope
shr
xchg
addr16
push
retf
retf
pop
xchg
cli
lea
fs
inc
or
movs
lea
add
stos
xor
inc
sbb
pop
adc
add
add
fsincos
jge
test
test
or
pop
push
inc
xchg
fstp
mov
arpl
dec
mov
ret
push
and
fwait
lods
movs
dec
mov
jp
fs
outs
scas
inc
outs
mov
add
repnz
popf
(bad)
loopne
mov
repz
(bad)
lods
xchg
fdiv
mov
jnp
or
xchg
ret
jb
mov
pusha
int3
sub
mov
or
shl
ins
inc
xchg
mov
fist
cs
(bad)
xor
jmp
cmp
jae
or
push
xchg
jno
test
add
rcr
fwait
stos
jp
and
add
hlt
and
in
lea
std
enter
push
dec
jp
out
ins
fsub
mov
jnp
inc
cmc
ds
in
call
push
fwait
pop
std
add
loop
(bad)
rcr
push
mov
jo
shl
movzx
pop
jge
push
xchg
jge
cld
add
leave
pop
dec
xor
cmc
sbb
dec
adc
cmc
xchg
pop
mov
dec
add
push
or
retf
sbb
xchg
std
inc
ss
sbb
or
mov
cmp
jno
sti
das
cs
in
(bad)
jmp
add
or
aas
cmp
sbb
cwde
mov
call
jbe
les
dec
adc
or
movs
nop
or
loopne
fdivp
sbb
xor
iret
sbb
mov
pop
stc
sahf
mov
mov
push
dec
xor
xor
push
sub
out
jmp
jo
mov
push
ror
pop
push
out
aam
fdiv
push
aad
pop
xor
xchg
cmp
loopne
nop
cmp
push
jns
rcr
push
jo
cmp
sbb
mov
jecxz
dec
es
push
push
or
xchg
test
pop
mov
fild
jg
xchg
iret
xchg
fcomip
popa
inc
mov
and
xchg
or
dec
mov
ins
xchg
dec
jnp
loope
and
imul
les
movs
pushf
xchg
das
fisttp
pusha
out
cwde
cs
ret
aad
mov
push
and
or
jl
or
xchg
push
and
fxch
pop
xchg
mov
int
pop
repnz
push
dec
fiadd
adc
mov
mov
pmullw
cmp
data16
cmps
gs
jecxz
(bad)
jmp
ds
daa
dec
push
bound
pop
pop
ss
xor
mov
cmp
push
popa
(bad)
aas
inc
bsf
in
arpl
sahf
jae
pop
fstp
and
ror
mov
ds
sbb
mov
mov
inc
inc
stc
sub
inc
stos
xchg
lods
mov
xchg
cmp
mov
call
stc
mov
lds
cwde
lods
xchg
xchg
or
loop
jle
retf
test
jo
fst
ret
fidivr
cmp
inc
cmps
cmp
rcr
outs
gs
ja
mov
push
push
pop
ds
leave
hlt
xchg
xor
xor
add
mov
rcr
ds
mov
(bad)
pop
mov
add
test
out
jb
(bad)
outs
in
mov
lods
repnz
adc
mov
es
or
add
sub
in
jl
cmps
(bad)
mov
lds
xor
cmp
loope
mov
jnp
jb
dec
mov
ins
mov
fsubr
fistp
jbe
clc
scas
push
dec
sbb
sbb
xor
jge
xchg
neg
xchg
mov
xor
shr
call
stos
push
adc
mov
cmp
mov
push
rcl
inc
bound
dec
cwde
test
call
mov
xchg
retf
mov
sub
cmp
loop
xchg
dec
dec
jle
hlt
ss
shl
push
adc
test
mov
push
mov
out
adc
adc
xor
push
add
add
mov
clc
jnp
addr16
cmp
add
pop
movs
mov
test
sbb
sar
inc
jno
mov
out
or
dec
fucomi
into
push
cmp
push
cmp
aas
inc
jg
pop
ins
je
pop
in
daa
popf
das
add
addr16
dec
int3
push
and
cmp
jg
inc
lods
sbb
dec
sbb
mov
add
popa
test
mov
loopne
jge
and
sbb
pop
rcr
cmp
aad
mov
rcr
ins
cmps
in
fucomi
or
jmp
aad
inc
mov
test
sbb
jae
cs
gs
xor
xchg
push
sub
inc
pop
mov
not
dec
(bad)
xchg
call
mov
lock
mov
in
mov
popa
sub
inc
test
mov
inc
and
or
lahf
xchg
inc
inc
jnp
in
xlat
xchg
and
dec
xchg
xchg
stos
mov
sbb
jbe
addr16
pop
sub
pop
dec
iret
cld
cmps
test
mov
and
xor
jg
in
hlt
pop
mov
lods
mov
inc
pop
lea
dec
jp
sub
push
test
leave
add
xor
add
cli
(bad)
xchg
mov
push
(bad)
dec
cs
and
and
or
mov
cmc
xchg
scas
jmp
int
jnp
shr
push
dec
mov
sbb
mov
or
push
out
or
loop
and
je
ins
outs
fdiv
xor
pop
ins
push
outs
dec
cmps
jecxz
mov
fdivr
ja
mov
shl
adc
rcr
adc
inc
movzx
fcomp
or
pop
dec
or
ror
or
(bad)
mov
(bad)
pop
data16
dec
gs
jb
clc
mov
push
je
adc
xchg
cwde
or
and
mov
cdq
sbb
test
mov
mov
or
hlt
mov
sahf
inc
mov
mov
push
in
daa
xor
mov
inc
ja
mov
pop
mov
pop
adc
mov
sti
sub
xlat
fstp
jnp
int
retf
ins
int3
(bad)
xor
and
and
stos
mov
lds
jmp
fs
mov
fwait
cmp
fcmovnb
iret
and
cmps
out
popa
test
cli
cld
cli
sahf
out
jns
aam
rol
(bad)
jl
jecxz
push
push
sahf
xchg
cmp
sbb
or
call
xor
dec
push
mov
xchg
or
mov
pop
popf
xchg
jmp
sbb
push
test
pop
cmp
pop
sbb
fs
sub
mov
loopne
out
test
add
mov
loop
jl
inc
push
pop
call
xor
and
jmp
dec
iret
jbe
dec
adc
add
or
jl
jbe
push
loope
adc
sub
gs
add
add
cmp
mov
jbe
outs
cmp
mov
fwait
inc
push
or
mov
add
dec
stos
les
xchg
rol
sbb
scas
adc
and
adc
sub
dec
aam
or
dec
rcl
adc
xchg
popa
out
pop
fdivr
xchg
xchg
mov
or
sub
aad
cld
(bad)
jb
mov
xchg
mov
hlt
sti
movups
mov
push
cmp
add
push
add
inc
or
jmp
mov
mov
and
call
jmp
mov
inc
push
outs
inc
bound
sub
out
stos
jno
xor
cmp
push
push
movs
icebp
lods
dec
and
adc
sti
pop
imul
fnstcw
stos
ss
mov
inc
add
aam
bound
loopne
pop
cmp
cld
sub
cmps
xchg
daa
add
sub
lods
in
sbb
inc
fsub
push
inc
and
sub
jp
inc
fsub
add
(bad)
inc
fimul
mov
mov
push
pop
pop
push
enter
sbb
jns
mov
push
inc
lods
test
movs
hlt
lods
cmp
pop
rcl
(bad)
xor
mov
(bad)
pop
icebp
out
inc
fdiv
mov
cs
icebp
sbb
jecxz
lods
aas
xchg
lahf
pop
mov
mov
pushf
jecxz
xor
test
and
retf
push
out
sub
pop
es
outs
das
mov
mov
mov
sahf
xchg
cmp
pusha
add
mov
test
sar
fcmovne
fidiv
dec
dec
test
cmp
inc
add
stc
pop
jae
mov
add
out
and
mov
test
clc
ins
mov
and
out
aad
push
dec
adc
and
inc
adc
pushf
sub
out
or
cmp
rol
push
mov
shr
dec
stc
push
scas
xchg
mov
fsubr
jmp
and
dec
mov
repz
icebp
add
inc
imul
xchg
mov
cmp
inc
push
leave
stos
ret
sub
cmps
fwait
jmp
jmp
jne
xlat
jg
fimul
movs
test
xchg
push
mov
(bad)
arpl
mov
fmul
bound
sbb
push
mov
cld
push
and
in
jb
inc
push
mov
stos
adc
sbb
add
or
xor
sub
sub
rcr
lds
dec
lea
mov
or
sub
xor
cwde
xor
lds
stos
outs
shl
test
fidivr
and
push
jmp
pop
mov
mov
fnstenv
aam
sahf
aas
leave
(bad)
jg
jecxz
out
aas
and
outs
(bad)
stc
mov
fs
add
add
sbb
xchg
sub
imul
push
cli
fdivr
push
cs
lods
inc
enter
pop
xchg
(bad)
jge
xchg
lea
sbb
xchg
mul
ins
jns
sub
pop
push
sar
pop
fimul
sub
test
mov
or
movs
cmp
iret
mov
out
mov
or
adc
out
sub
ret
and
mov
xchg
lods
mov
cmp
aad
(bad)
push
(bad)
xor
test
sbb
retf
hlt
mov
and
cmp
mov
jbe
mov
(bad)
jb
mov
(bad)
retf
mov
arpl
push
ss
outs
inc
and
ins
cmp
push
arpl
mov
adc
mov
aas
cdq
and
stc
hlt
cmp
or
scas
xor
and
or
loopne
sub
sahf
cwde
sub
add
test
sbb
jg
(bad)
dec
cmp
push
xchg
test
cmp
add
imul
xor
inc
pop
sub
mov
sbb
dec
jb
dec
jmp
jmp
arpl
aam
or
ins
add
add
inc
(bad)
gs
aaa
jge
dec
push
pop
outs
iret
add
adc
jge
sub
xlat
push
in
ret
ficomp
inc
cmp
inc
push
push
push
popa
mov
mov
push
nop
aad
test
lea
inc
cld
fucomp
inc
mov
rol
push
dec
call
adc
lods
jge
mov
sub
and
inc
fsub
jb
jecxz
clc
imul
push
shr
dec
test
nop
mov
ss
psadbw
xchg
fisubr
popf
bound
fwait
dec
sbb
addr16
bound
jle
int
(bad)
jmp
mov
int3
icebp
call
scas
sar
aas
frstor
dec
out
arpl
mov
cld
repnz
mov
mov
jg
out
outs
pushf
mov
nop
jge
and
cld
pop
jmp
mov
lods
sahf
fiadd
movs
sbb
cld
mov
xor
int3
jg
jb
fistp
add
push
neg
xor
jp
in
rol
out
dec
xchg
pushf
lahf
repz
std
dec
pop
stos
inc
jmp
(bad)
mov
pop
sbb
out
lock
jo
mov
push
and
inc
loope
mov
xchg
imul
inc
imul
and
mov
je
fstp
or
sub
sbb
push
shl
mov
popa
(bad)
ins
mov
lods
dec
mov
js
push
lea
es
mov
push
adc
aaa
push
ss
cli
test
dec
or
lock
das
adc
scas
ror
jmp
mov
in
and
xlat
sar
mov
add
adc
cmps
push
mov
and
push
(bad)
sahf
je
push
std
cmps
mov
cmp
sub
adc
push
adc
mov
jl
jae
test
mov
lds
repnz
(bad)
push
retf
pushf
bound
cld
cli
or
out
xchg
and
test
mov
ror
lahf
push
mov
test
mov
jecxz
int3
lods
scas
and
and
inc
xchg
add
cmc
cli
punpckldq
dec
pop
add
popf
mov
adc
add
adc
outs
or
sbb
test
inc
idiv
mov
push
push
(bad)
lods
rcr
mov
sbb
adc
clc
jno
pop
out
pop
das
ins
popa
mov
shr
push
lods
leave
xchg
jmp
loop
adc
push
push
jno
add
add
mov
dec
mov
clc
adc
push
mov
sub
add
hlt
jg
jnp
or
sub
std
pop
js
add
mov
movs
ds
daa
mov
fild
daa
lds
imul
and
mov
popf
arpl
clc
test
xor
dec
call
data16
xchg
inc
sbb
push
ss
inc
or
cmc
xchg
rep
jnp
mov
add
sub
mov
ja
or
mov
cmp
repz
repnz
out
mov
add
lahf
mov
inc
shr
(bad)
sub
out
push
clc
pushf
std
cmp
inc
bound
icebp
xchg
inc
shl
fimul
push
cmp
retf
xchg
pop
ret
and
pop
push
xchg
aam
pop
add
dec
mov
mov
(bad)
in
out
and
cmovbe
or
jo
mov
push
mov
adc
and
and
rol
jmp
push
mov
dec
or
cmp
movs
push
cmp
push
adc
cwde
aad
push
out
lods
dec
sub
lahf
sbb
sub
in
and
inc
push
cmp
bnd
(bad)
scas
or
ins
and
jno
pop
fmulp
lods
and
mov
dec
test
adc
mov
jb
seta
mov
(bad)
pop
sbb
or
nop
sbb
pop
inc
push
into
(bad)
fstp
push
(bad)
pushf
sti
pop
sub
aad
mov
call
stos
fnstsw
xor
jo
fcomp
pop
push
pop
xor
xor
push
and
stos
lods
adc
xchg
dec
add
ret
imul
icebp
jg
mov
ss
adc
jecxz
xor
mov
movs
dec
call
gs
mov
stos
gs
pop
push
dec
mov
pop
mov
push
jmp
js
dec
iret
dec
cmps
fnstenv
mov
(bad)
fwait
jg
push
xor
xchg
adc
push
dec
shr
sbb
pop
outs
mov
fcom
inc
xchg
(bad)
xchg
scas
and
push
popf
lds
jp
jns
fstp
sub
inc
jg
imul
sbb
cmc
cmp
neg
sbb
fst
push
in
in
fs
inc
and
mov
pop
xor
jl
pop
fcomi
out
data16
imul
imul
jae
pop
sar
and
ins
stos
sbb
or
(bad)
mov
(bad)
loopne
add
fsubr
and
cdq
push
ror
dec
push
jp
inc
pop
(bad)
jecxz
test
adc
lahf
in
imul
sub
test
rol
imul
aas
add
mov
mov
adc
push
inc
pop
rcl
ret
fs
ret
ror
xor
imul
inc
lea
push
leave
pop
nop
xor
outs
scas
(bad)
in
mov
sbb
xchg
cmc
(bad)
call
adc
imul
stc
jmp
add
jb
adc
stc
loopne
mov
ins
int
cmc
or
ror
jecxz
shl
repz
push
(bad)
dec
in
pop
mov
mov
add
std
xchg
je
div
mov
jae
out
pop
pop
nop
movs
cmp
sahf
mov
or
adc
popf
inc
push
shl
call
daa
mov
je
push
(bad)
mov
fs
and
xor
dec
mov
je
sub
pop
leave
div
fidiv
pop
(bad)
rcr
adc
pop
daa
push
sbb
adc
push
ror
sbb
movs
mov
das
cmps
cmp
push
jne
xor
sub
fidivr
fs
fldcw
aad
mov
or
xor
cwde
fmul
push
cmp
pop
or
mov
movs
inc
pop
in
xor
cli
je
mov
add
add
jl
xor
xchg
movs
dec
push
xor
(bad)
cbw
add
enter
rcr
jecxz
ret
es
pop
dec
movs
add
jp
imul
mov
imul
mov
inc
pop
inc
adc
stos
push
dec
dec
pop
cmp
call
mov
iret
sbb
sbb
jnp
imul
jbe
or
xchg
les
cli
and
sbb
test
movs
aas
and
bound
inc
and
or
xchg
xchg
xchg
or
cmc
cmps
cmps
les
imul
dec
scas
mov
icebp
lods
jbe
stos
aas
pop
scas
jae
or
push
jge
or
mov
mov
pop
lock
test
hlt
and
jecxz
loopne
(bad)
or
shl
dec
jmp
xlat
xchg
mov
pop
sahf
jg
pop
fidivr
mov
sub
loop
jno
in
sub
out
jno
and
mov
jl
cmp
iret
push
mov
mov
dec
sub
mov
hlt
repnz
push
and
pop
sub
push
(bad)
push
(bad)
(bad)
sti
(bad)
jmp
mov
cmc
push
movs
xchg
out
adc
mov
sbb
push
mov
sub
dec
or
mov
dec
push
(bad)
add
jle
sti
adc
out
(bad)
stos
ret
mov
adc
loop
addr16
mov
icebp
sub
gs
bswap
in
je
nop
jmp
fcom
and
mov
jno
inc
pop
or
jge
xchg
sub
rol
lods
xchg
or
jmp
push
stos
xor
dec
cmp
pop
(bad)
sbb
es
and
sbb
stc
loop
repz
dec
repz
jle
nop
push
rcl
mov
lds
sub
rcr
cmp
lods
push
lahf
leave
mov
sub
imul
dec
mov
scas
mov
sub
inc
or
lods
fwait
jne
cmps
sub
fstp
adc
js
push
add
mov
xchg
das
xchg
mov
mov
dec
adc
adc
mov
dec
cmp
aas
pop
fs
int3
dec
add
xchg
adc
and
and
push
stos
dec
add
outs
add
mov
lahf
dec
loopne
and
push
dec
sbb
mov
ds
lds
rol
ins
mov
push
pop
mov
mov
out
pop
sahf
daa
imul
add
bound
mov
arpl
sub
and
ret
sbb
or
cmp
jno
leave
mov
xor
jns
enter
mov
stos
xchg
fwait
and
in
sub
push
rcr
(bad)
adc
dec
(bad)
sti
fmul
ds
js
enter
jecxz
in
or
int
xor
inc
xchg
xchg
clc
emms
movs
jb
mov
jle
jae
test
stos
stos
test
or
mov
loop
aad
and
cmps
popa
and
and
cli
nop
inc
mov
scas
pop
in
push
std
or
stos
pop
pop
psubusw
cmp
pushf
push
arpl
div
scas
loop
shr
ins
movs
(bad)
rcl
jecxz
xor
dec
mov
cmps
add
and
mov
(bad)
cld
call
scas
inc
fisttp
aas
retf
bound
rcr
imul
cmps
stos
push
retf
cmps
inc
push
fld
and
mov
jp
pop
or
jbe
jmp
jmp
hlt
push
cwde
mov
daa
jae
jmp
sbb
push
and
movups
push
mov
jnp
outs
dec
mov
add
fs
mov
mov
mov
into
inc
leave
pusha
push
pop
push
cdq
inc
icebp
cmp
add
fdivr
pop
xchg
inc
aam
int
nop
add
xchg
imul
loop
add
sti
pop
xor
pop
cmp
cmovnp
into
data16
sbb
lods
xor
movs
scas
nop
xchg
adc
inc
inc
jnp
(bad)
xchg
push
jp
sbb
sub
inc
xchg
inc
loopne
pop
dec
movs
add
mov
add
not
loope
cdq
enter
mov
popf
mov
xchg
call
jle
daa
xchg
add
test
add
adc
inc
jmp
movs
test
imul
mov
xchg
imul
pop
pop
xchg
fcmovbe
mov
sti
imul
inc
popa
or
add
inc
xchg
inc
xchg
stos
test
daa
add
cmps
adc
mov
cdq
adc
push
ret
enter
cmp
(bad)
cdq
cmp
jmp
xor
jge
push
xchg
xchg
dec
jno
in
or
lods
dec
cmp
sbb
test
loopne
gs
ja
sbb
test
cld
mov
push
sub
mov
pop
lea
and
cld
repz
cli
jnp
in
mov
imul
repz
mov
mov
sbb
aam
rcl
pop
jno
cld
xchg
aas
stos
jbe
dec
mov
mov
push
les
push
mov
mov
nop
retf
aam
jb
lods
push
inc
xchg
lahf
sub
mov
imul
sub
imul
jne
mov
lods
jb
push
inc
(bad)
xchg
test
outs
in
mov
xchg
xchg
pop
sbb
cmps
enter
pusha
hlt
ffree
stos
jmp
mov
push
cmp
cmc
xor
adc
dec
push
iret
fdivr
fcom
or
dec
fisub
sub
or
xchg
dec
cmps
mov
mov
or
mov
pop
jmp
lods
cmp
imul
xor
push
dec
retf
add
xchg
stos
jg
cdq
mov
mov
das
pop
(bad)
pop
inc
xchg
loop
ret
inc
and
inc
fs
mov
in
sub
and
sbb
mov
push
rcr
scas
push
hlt
sti
jg
out
mov
frstor
iretw
mov
mov
repnz
mov
push
mov
adc
test
loope
dec
push
and
ins
cmp
mov
jmp
adc
pop
stc
xor
inc
stos
div
cdq
mul
mov
xor
nop
sbb
push
mov
cmps
add
stos
mov
pusha
xchg
mov
enter
movs
mov
and
xchg
lock
rcr
cmp
sbb
push
jno
test
leave
ja
push
shl
movs
scas
in
mov
adc
mov
call
adc
jo
in
push
xchg
and
test
xchg
ss
xchg
or
pop
fwait
icebp
hlt
imul
mov
clc
and
int
call
repnz
dec
aaa
cli
sti
mov
xchg
inc
sub
iret
sbb
mov
jp
sbb
iret
mov
ins
xchg
xchg
je
mov
cmp
mov
rcr
mov
mov
mov
test
dec
push
jl
push
and
out
mov
pop
dec
sbb
enter
and
pslld
adc
stos
mov
push
sub
pop
test
popa
(bad)
pop
cmp
mov
sbb
push
mov
pop
fcomp
jge
retf
retf
xor
cmc
add
jg
hlt
push
mov
sbb
mov
jp
nop
js
mov
lods
sahf
inc
int3
jno
mov
xchg
cs
daa
dec
pop
mov
icebp
jns
imul
cmps
lods
cmps
call
leave
and
mov
cld
xchg
add
jo
(bad)
xor
data16
pop
push
cmc
nop
fist
scas
shr
push
xchg
popa
pop
and
popf
mov
xchg
mov
lea
dec
ds
pop
mov
stos
sub
js
outs
inc
not
out
xor
stc
stc
stc
je
out
mov
(bad)
dec
ror
jecxz
stc
loop
popf
push
(bad)
dec
mov
imul
push
ror
out
inc
fcmovb
enter
sbb
aam
cmp
jmp
mov
push
jo
dec
test
jne
pop
sbb
mov
sbb
mov
mov
xor
call
(bad)
int3
cmps
xchg
cmp
sbb
hlt
std
mov
add
test
and
xchg
fst
loopne
cwde
ret
adc
mov
mov
cs
inc
ror
aam
into
mov
xor
sub
cld
inc
mov
inc
push
xor
mov
shl
rol
and
xchg
pop
lods
aad
hlt
xchg
stos
(bad)
and
in
push
xor
and
xlat
jb
cmp
or
aaa
push
inc
push
dec
and
push
sahf
push
sahf
push
call
mov
xchg
or
jecxz
loope
or
inc
test
jp
xchg
xchg
cdq
in
cdq
(bad)
inc
push
cmp
jne
cld
jno
call
gs
inc
repnz
push
adc
sbb
mov
test
mov
lods
or
push
jmp
adc
iret
lods
cdq
fisttp
push
xchg
and
clc
mov
push
add
and
sahf
xchg
retf
xor
pop
and
mov
and
jmp
lods
xor
gs
fldenv
and
cld
push
hlt
pop
cmc
adc
push
mov
(bad)
jge
pop
push
js
sbb
jnp
(bad)
mov
cdq
pop
cmps
or
pop
dec
inc
pusha
jle
aad
push
fstp
mov
stc
push
fwait
movs
push
xor
dec
adc
adc
push
xlat
inc
imul
inc
xor
inc
sub
and
sub
pushf
call
movs
(bad)
or
and
ins
cmp
xor
pusha
xor
pop
icebp
imul
mov
ret
sti
test
mov
imul
mov
pop
sub
xchg
aaa
push
sub
adc
js
in
ds
xor
mov
test
or
sub
inc
push
pop
pop
rcr
mov
adc
int
mov
sub
or
cmps
and
jne
push
and
fwait
or
jp
nop
inc
rol
je
mov
add
push
mov
push
fisttp
aam
call
inc
mov
ja
pop
jmp
or
jo
cmp
mov
xchg
dec
repz
cmp
add
jb
lahf
lock
outs
fldenv
test
xor
mov
bound
and
jae
mov
js
rol
out
out
add
or
scas
push
lds
or
je
fdivr
lahf
mov
jecxz
scas
fidivr
and
xor
ins
test
adc
sbb
add
ror
jne
cmp
test
mov
jle
push
lea
jl
out
je
loop
hlt
call
mov
mov
sbb
and
in
bound
jg
in
cmp
or
sbb
jno
popa
push
xchg
scas
mov
or
cmps
iret
or
popf
cs
stos
pop
jnp
fstp
int3
push
mov
mov
lahf
or
nop
xlat
repz
sti
inc
cmp
mov
call
leave
inc
adc
jp
jp
sar
jo
xor
jp
cmp
cmp
adc
(bad)
inc
sub
xor
test
lods
and
lods
mov
inc
dec
cmp
jb
shl
fcomp
inc
xlat
mov
fsubr
xor
in
push
into
stc
out
ss
cmp
inc
mov
movs
mov
mov
push
mov
pop
test
aam
js
mov
dec
pop
inc
jno
cs
retf
jmp
sahf
(bad)
mov
pop
or
lahf
push
pop
xchg
loop
sbb
cmp
cmp
push
xchg
paddsb
jge
call
mov
loopne
push
hlt
fcomi
clc
cli
jnp
sbb
(bad)
mov
inc
test
mov
jle
loop
dec
aas
cs
push
xlat
shr
sbb
dec
and
pop
push
add
or
test
in
pushf
mov
dec
xchg
in
jnp
div
mov
rcl
inc
add
stos
in
cld
daa
push
inc
test
rcl
push
push
in
cld
xchg
and
int
dec
out
mov
and
inc
push
pop
push
sub
xchg
test
lahf
mov
adc
lock
ds
jnp
dec
jecxz
mov
xor
and
adc
and
add
mov
push
pop
shl
imul
sahf
dec
sbb
sub
fs
movs
mov
rcr
jne
lods
jb
mov
sti
dec
mov
xchg
test
aas
popf
imul
neg
mov
sbb
sub
add
dec
or
imul
or
pop
aam
add
xchg
pop
cmc
xchg
hlt
mov
cmc
hlt
lods
xchg
mul
std
outs
or
add
shl
cdq
lds
dec
cmps
fild
jmp
shr
stos
stos
fcomp
add
(bad)
btc
aad
inc
aad
or
add
ror
fidivr
ins
jg
sub
sub
adc
sub
scas
repnz
(bad)
push
sub
sti
out
iret
jecxz
test
mov
lock
cli
mov
call
stos
add
in
ss
in
retf
out
inc
int
sbb
mov
(bad)
cmp
push
outs
adc
and
inc
cwde
pop
lods
mov
jg
pop
repnz
fdecstp
fisttp
shl
stc
push
mov
ins
in
adc
mov
rol
dec
shl
or
sbb
sub
or
outs
mov
ja
pop
xlat
xor
lahf
daa
xchg
mov
mov
jecxz
mov
mov
cmc
adc
add
repnz
dec
xlat
cmp
adc
out
cli
push
test
in
mov
cmp
xlat
mov
or
sbb
push
xor
push
test
push
mov
push
xor
mov
scas
retf
arpl
in
outs
fs
fidiv
or
out
pop
in
stc
std
mov
add
out
sbb
fbld
adc
test
mov
scas
mov
sub
adc
test
cmps
xchg
add
add
fist
out
(bad)
popf
lods
jb
adc
sbb
sub
(bad)
outs
add
cs
adc
mov
jmp
jnp
jle
dec
cdq
inc
pop
dec
inc
dec
sub
ror
nop
adc
pushf
xor
pop
inc
fwait
(bad)
mov
xchg
retf
mov
in
sar
pushf
push
bound
pop
push
inc
into
jl
int
cmc
mov
test
dec
sub
mov
stos
mov
pop
rcl
pop
out
popf
(bad)
xchg
inc
mov
sbb
pop
jae
repz
mov
icebp
mov
or
les
ret
(bad)
shr
push
(bad)
push
pop
mov
and
mov
cwde
mov
enter
or
fild
or
es
pop
sbb
iret
adc
in
daa
mov
xchg
hlt
xchg
pop
dec
or
hlt
add
std
jge
ficom
mov
cmp
xor
out
movs
(bad)
jp
sar
mov
pop
ret
cmp
mov
std
cmp
push
mov
cwde
and
and
in
jg
movs
dec
pop
es
add
pop
(bad)
jle
inc
sbb
aas
test
add
push
cld
pop
loope
mov
mov
std
sub
repnz
(bad)
(bad)
std
das
sar
cmp
and
jle
xor
(bad)
mov
cmp
out
jg
cmp
js
inc
mov
rol
inc
sub
or
fcmovnbe
outs
int
int
mov
and
repz
out
cmp
bound
nop
lahf
test
xchg
add
out
xor
mov
retf
out
mov
lea
add
add
jecxz
jnp
in
das
and
and
xor
cmp
(bad)
fisttp
lahf
push
fs
stos
cmp
mov
ret
jno
sbb
or
inc
push
mov
repnz
mov
sahf
xor
mov
mov
and
popa
pop
lea
scas
jne
sbb
ret
mov
frstor
fucomi
adc
xchg
aad
cs
jl
xor
add
js
mov
cmp
addr16
or
mov
rol
nop
ds
popf
repnz
xor
cmp
retf
xchg
daa
js
pop
test
fisubr
nop
fs
jg
mov
test
xlat
jnp
mov
repnz
loopne
xor
stos
jbe
add
test
mov
add
inc
int
ror
sub
inc
xor
sub
or
fs
xlat
popa
push
leave
cs
mov
dec
es
jns
lock
test
dec
jne
adc
sub
jbe
push
les
xchg
and
aaa
xchg
mov
ins
ss
popf
add
or
inc
jo
xchg
add
mov
lods
fild
repnz
std
mov
das
repz
pushf
sbb
gs
push
sbb
movs
addr16
in
push
stos
inc
mov
ret
add
mov
mov
or
in
mov
aaa
daa
rep
jecxz
and
jg
xor
mov
adc
icebp
mov
jmp
fld
mov
inc
test
cs
nop
push
mov
mov
movs
sub
and
inc
push
(bad)
iret
jmp
jae
aad
imul
mov
outs
mov
les
fdivr
inc
stc
aas
cs
jge
ss
cmp
jmp
jecxz
push
and
xor
or
cmp
mov
sti
or
into
mov
xchg
aad
scas
xchg
ins
movs
je
out
push
pop
push
into
mov
pop
popf
mov
dec
lods
outs
jo
lds
or
sbb
mov
out
jae
jo
push
mov
jno
fisttp
xchg
loope
sbb
pusha
mov
cmp
sbb
sbb
push
dec
adc
pop
jae
jns
pop
and
jns
mov
sub
push
rol
popa
in
push
arpl
inc
mov
sbb
outs
scas
pop
lods
push
mov
xchg
test
add
adc
movs
enter
mov
add
mov
sub
out
in
xchg
lods
arpl
mov
mov
fsubrp
sti
in
retf
mov
data16
cmp
cmp
cmc
(bad)
push
xchg
sbb
div
(bad)
xchg
imul
cmp
cmp
jo
call
mov
push
jle
daa
repnz
pop
push
idiv
into
rcr
pop
das
shl
sub
or
pushf
jecxz
cmps
inc
(bad)
in
test
cmp
sahf
and
sbb
inc
pop
and
and
int
push
sbb
mov
mov
mov
sbb
arpl
jmp
sbb
push
test
test
push
data16
mov
mov
push
inc
retf
sub
call
stos
adc
movs
test
push
test
xor
addr16
fst
repz
dec
cmc
cdq
movs
mov
inc
lock
push
inc
add
dec
and
retf
cmp
sbb
inc
or
addr16
lods
mov
mov
mov
out
and
hlt
stc
jne
dec
int3
adc
ror
xor
jmp
mov
sbb
ror
(bad)
push
and
and
pop
and
or
mov
je
enter
repnz
push
(bad)
out
fldenv
or
call
(bad)
lock
call
mov
and
ins
mov
inc
push
and
dec
jne
jne
and
rol
xchg
rol
dec
fstp
pop
inc
jno
jns
int3
xor
xchg
je
lods
outs
fsubr
bound
jb
sub
push
mov
repnz
cli
push
xor
shl
retf
mov
gs
jbe
or
adc
test
icebp
jge
mov
popf
push
jl
xor
sub
ja
stos
add
jecxz
sub
inc
mov
enter
mov
js
shl
sbb
jb
arpl
test
cmps
enter
sti
call
nop
sub
xchg
scas
ja
pop
mov
aad
pop
mov
mov
movs
dec
adc
and
and
adc
jae
jno
lds
xor
add
test
popf
sub
jne
mov
inc
fsubr
inc
shl
fdiv
push
xor
je
rol
mov
inc
ds
adc
dec
fs
in
shl
xchg
lods
pusha
mov
and
push
cmps
mov
(bad)
scas
push
(bad)
lods
pop
out
iret
ja
fstp
ins
xor
mov
lods
push
xor
and
pusha
sbb
adc
xchg
push
push
jecxz
movs
add
shr
mov
dec
add
sar
push
leave
jns
aam
imul
jbe
xchg
pop
psadbw
test
sub
outs
push
lods
cmc
mov
(bad)
daa
scas
sub
jmp
call
xchg
jp
fistp
xchg
(bad)
pop
push
pop
inc
call
call
cmp
retf
outs
or
sub
jnp
mov
std
shr
movs
movs
mov
sbb
cmps
dec
pop
or
stos
dec
repnz
mov
or
lods
sub
adc
push
cdq
mov
lock
add
inc
sbb
jo
sub
push
inc
add
xchg
mov
jo
jne
mov
add
in
ja
(bad)
lock
fidiv
pop
daa
and
mov
pop
lock
push
out
jbe
xlat
jmp
xchg
add
stos
sub
push
mov
adc
inc
mov
es
stos
sbb
pop
out
or
dec
sub
xchg
fsubr
lds
fadd
test
cs
(bad)
fmul
mov
addr16
add
stos
jecxz
add
cmp
push
jp
add
mov
cmp
add
inc
and
push
or
mov
cmps
jno
div
fst
cmc
jp
popa
in
dec
daa
or
mov
push
imul
mov
cmps
xchg
loopne
movs
jns
ret
cmps
test
pop
adc
add
add
xlat
daa
xlat
fwait
sub
cmc
outs
outs
pop
pop
xchg
mov
xchg
repnz
and
jp
jmp
mov
loop
sub
jno
add
imul
jp
shr
jne
sub
scas
jge
xchg
jo
inc
icebp
and
push
(bad)
push
jae
mov
dec
fild
fisttp
mov
mov
cdq
test
mov
pop
sbb
pop
loopne
mov
jb
cs
outs
outs
xor
ins
fstp
adc
mov
adc
cmp
xchg
sbb
mov
fbstp
fcmovbe
in
jle
pop
clc
or
inc
jo
or
xor
imul
inc
aaa
mov
sub
mov
out
ss
sbb
sbb
out
lds
push
outs
or
hlt
xor
and
lock
sub
jo
push
dec
or
push
and
push
push
addr16
test
mov
pop
or
jbe
fidivr
out
mov
outs
jmp
pop
add
ds
cmc
jmp
mov
shl
aad
adc
adc
add
js
stc
cmc
inc
(bad)
pop
or
cmp
gs
bound
cmp
leave
pop
mov
in
xchg
cmp
jge
pop
fimul
mov
mov
pop
dec
jbe
les
xor
inc
cmp
aad
(bad)
nop
enter
add
push
push
lods
push
inc
sub
nop
rol
xchg
aas
ret
(bad)
fist
mov
jne
loop
test
add
xchg
aam
not
arpl
rol
sar
cmc
mov
add
stos
mov
test
adc
test
lahf
icebp
outs
shl
stos
out
pop
fcomp
(bad)
mov
fbld
add
add
push
imul
(bad)
or
push
cmc
add
cmp
fs
dec
ret
mov
in
lock
pop
ds
int
sbb
cwde
das
shr
add
cmp
(bad)
loopne
scas
inc
add
and
mov
xor
call
xchg
dec
xchg
cwde
rcl
ss
mov
iret
sar
inc
scas
in
and
push
sti
dec
jp
in
fwait
add
test
jg
fcmovnbe
xchg
repnz
or
les
dec
mov
jae
int3
hlt
cmp
hlt
js
mov
leave
loope
jmp
gs
mov
mov
cmp
mov
sub
xor
lahf
sub
pop
loopne
add
jmp
cli
int
int3
call
lea
push
mov
imul
or
jno
retf
inc
xchg
lahf
mov
jecxz
mov
xchg
inc
into
cmp
dec
jecxz
outs
sub
inc
leave
mov
(bad)
repnz
pusha
cmp
pop
loope
jno
adc
stc
xlat
mov
add
push
pop
or
add
or
lock
push
sbb
data16
jecxz
data16
add
retf
push
xor
int3
add
ds
mov
jge
jno
dec
push
xchg
and
inc
repnz
dec
out
or
mov
adc
dec
aas
sbb
add
add
or
pop
cmp
outs
mov
jns
gs
xor
sub
adc
js
lock
imul
les
std
jg
sti
dec
data16
je
fwait
test
add
sbb
lock
dec
test
push
pusha
xchg
outs
clc
cmp
mov
sbb
jg
jg
push
test
mov
push
and
es
cli
pop
inc
cmps
aad
jge
mov
and
push
pop
dec
hlt
repz
dec
add
mov
(bad)
sub
std
lahf
scas
aas
dec
push
mov
sar
and
xchg
repnz
inc
retf
movs
add
xor
sbb
(bad)
test
aam
lds
and
stc
jp
xor
or
inc
pop
sbb
mov
mov
push
push
loope
rcr
lods
cmp
retf
repnz
dec
xchg
ror
inc
mov
sub
in
(bad)
jne
or
(bad)
xchg
dec
add
rcr
add
inc
jo
sbb
and
xor
mov
ds
pop
xor
movs
sbb
mov
xchg
cmp
xchg
sub
es
test
fwait
pop
scas
aas
push
loop
jmp
or
sbb
xor
out
and
test
jb
(bad)
daa
jno
xor
xchg
out
jecxz
scas
bnd
mov
inc
push
push
ins
test
mov
add
push
test
inc
mov
push
push
and
neg
fbstp
cmc
and
aam
inc
lahf
pop
sbb
rcr
arpl
sub
mov
lods
jno
lahf
clc
aas
imul
popa
jp
xchg
pop
or
add
popf
and
sbb
sub
cli
mov
add
fucomi
xor
dec
cli
mov
push
nop
xor
xor
sbb
pop
cmp
push
iret
test
out
(bad)
stc
mov
setns
push
add
int
sub
fnstcw
test
inc
sub
aaa
cmps
cmps
movs
movs
movs
add
cdq
dec
dec
push
sbb
jg
ds
sbb
call
push
fs
sbb
enter
outs
fwait
fwait
xor
leave
push
xor
movs
pop
push
dec
adc
hlt
bnd
cmps
mov
xchg
out
sub
lds
imul
cmp
xchg
sub
mov
sub
inc
jg
mov
rol
loope
shl
jp
inc
pop
rcl
sub
push
adc
movs
(bad)
mov
fnsave
push
dec
ins
adc
or
imul
xor
setb
lds
arpl
mov
sub
fcmovnbe
into
loope
mov
adc
mov
cli
jmp
sbb
sub
je
movs
jmp
or
fs
cmp
(bad)
mov
(bad)
mov
pop
aam
(bad)
sbb
or
push
jle
and
aad
xchg
jb
arpl
in
push
aam
les
inc
mov
sub
sbb
pop
mov
xor
mov
dec
and
rol
mov
mov
jb
loope
pop
pop
repnz
imul
mov
cdq
adc
mov
sahf
into
clc
movs
repnz
cmp
push
adc
mov
ret
loope
int
xchg
lahf
pop
pop
aaa
movs
mov
sbb
jge
mov
test
mov
xlat
stos
sbb
popa
mov
and
sahf
aam
mov
mov
dec
xchg
aam
sub
sbb
out
pop
or
lods
pop
pop
xor
daa
sahf
dec
dec
retf
cwde
sub
pusha
inc
inc
and
pcmpgtw
out
adc
cmps
xor
xlat
lea
jle
and
out
push
jl
and
cwde
inc
add
imul
lahf
bnd
out
cdq
das
enter
push
push
(bad)
ins
jge
inc
cmp
cld
mov
sar
neg
lds
jg
in
daa
das
in
in
mov
mov
ror
xor
mov
push
sti
sub
loopne
fild
mov
inc
cmp
fisttp
call
and
cli
cmp
(bad)
lahf
inc
pop
jns
out
push
add
dec
out
neg
loopne
into
mov
ds
js
lods
dec
cmp
cld
ss
loop
arpl
cwde
out
imul
add
jbe
pop
in
test
outs
mov
cmp
dec
mov
sbb
inc
push
add
add
fst
and
test
ds
dec
(bad)
add
xchg
inc
mov
pop
push
imul
jge
or
in
icebp
mov
nop
sub
popf
sub
jmp
or
mov
popa
jbe
jge
movs
call
mov
mov
movs
dec
add
cmps
imul
jecxz
xor
bound
mov
and
cdq
lea
xchg
push
mov
out
popf
pop
cmp
adc
movs
sub
ret
jle
push
arpl
jmp
xchg
cdq
mov
arpl
shr
dec
xchg
sub
mov
push
(bad)
sub
adc
dec
aad
dec
add
add
jmp
cwde
add
lods
imul
cmps
mov
or
iret
mov
add
sub
div
int3
sub
mov
ss
fldenv
sub
cmp
not
js
and
fiadd
test
scas
mov
or
mov
fs
xor
nop
xor
(bad)
ins
je
pusha
push
adc
jge
xor
es
sub
pop
mov
xor
cmps
inc
shl
push
jo
mov
ret
pop
fcomp
movs
lds
xor
cmp
sub
add
cmp
mov
dec
pop
pop
arpl
sub
(bad)
(bad)
test
out
pop
mov
out
inc
sbb
adc
pusha
inc
cld
pop
jnp
inc
mov
cdq
mov
adc
add
push
sub
mov
add
cmp
aad
daa
repz
repnz
inc
xchg
cmps
iret
inc
or
call
xchg
pop
adc
enter
and
sbb
(bad)
pusha
sbb
icebp
pop
mov
jo
or
hlt
pop
jns
mov
mov
out
cld
popf
push
mov
push
dec
dec
mov
clc
sub
ins
pop
push
in
faddp
mov
daa
mov
xor
push
test
ret
cld
popf
adc
sub
push
and
test
out
test
imul
sub
push
ror
(bad)
das
adc
cli
repz
fsub
jb
lods
jmp
nop
pop
add
sub
add
pop
out
ins
js
mov
xchg
and
adc
call
push
jns
push
imul
and
sub
in
test
xchg
cmp
jne
xchg
push
mov
jae
mov
add
sub
fdivr
cli
jle
xchg
dec
hlt
mov
retf
dec
pop
dec
retf
add
sbb
movs
pop
ss
xchg
leave
aas
dec
jp
in
cwde
pop
cmp
shl
jg
xor
test
mov
push
and
test
push
sub
push
or
jg
dec
sbb
push
test
jge
das
(bad)
mov
mov
push
sub
push
jmp
cmp
sub
adc
fisub
or
ds
sub
les
mov
add
sub
rol
out
(bad)
dec
data16
mov
sbb
sar
cmps
pop
cmc
push
mov
int3
add
stos
pop
sub
lods
sub
mov
and
ror
xchg
int3
push
pop
adc
inc
js
dec
add
push
jae
pop
(bad)
(bad)
adc
inc
xor
iret
mov
adc
retf
jbe
cdq
mov
and
and
repz
cmps
cmps
jl
or
jmp
dec
mov
xchg
and
push
push
enter
inc
mov
add
sbb
xchg
pushf
rcl
xor
inc
add
js
xlat
mov
and
inc
xchg
into
pop
adc
cmp
movs
js
add
xor
jmp
into
repz
fs
jno
add
pop
pop
cli
inc
lds
leave
sub
push
jnp
js
push
ret
xchg
(bad)
mov
mov
ja
pop
lods
cld
shl
push
adc
dec
jns
es
pop
push
repz
sti
sub
shr
cmp
enter
arpl
mov
daa
mov
rcr
dec
jge
fstp
jmp
jl
scas
loope
mov
jmp
call
push
pop
mov
movs
jle
out
mov
pop
jge
jp
mov
out
inc
push
div
mov
(bad)
in
xor
pop
bound
mov
es
adc
in
adc
stc
mov
lods
out
sub
ins
fist
aam
or
movs
add
pop
cmc
push
mov
nop
test
movs
xor
add
push
xchg
xchg
out
outs
leave
push
sbb
pop
mov
adc
loope
imul
dec
lahf
dec
and
fnstcw
rcr
test
stc
call
scas
xor
xchg
jp
jno
stos
int3
mov
jae
sub
push
jae
inc
adc
dec
jmp
movs
xor
sti
xor
cmp
scas
mov
dec
call
add
stos
cmp
mov
push
into
rcl
add
rcl
(bad)
pop
jg
sub
lods
lahf
push
sub
inc
cmp
sub
jb
sub
sahf
mov
pop
and
mov
jns
enter
pop
fadd
jae
jno
addr16
add
or
pop
iret
mul
iret
mov
sbb
pop
ins
imul
mov
shr
cs
push
mov
ds
movs
ins
inc
lods
or
das
adc
sbb
imul
gs
mov
xchg
ds
pop
mov
jns
pop
inc
push
dec
add
add
pop
fucomi
(bad)
mov
aaa
dec
inc
jae
outs
imul
xor
adc
mov
jp
int
icebp
jb
cli
(bad)
sti
mov
adc
call
test
xor
xchg
jle
ret
adc
mov
in
ret
xor
das
and
lahf
in
std
das
jae
in
aaa
cs
mov
sub
stc
mov
jge
imul
scas
in
pop
mov
sbb
sbb
xchg
bound
daa
popa
jbe
nop
aas
mov
jge
jge
inc
jmp
or
pop
test
pop
je
in
inc
fucomi
push
mov
mov
mov
mov
std
sub
imul
fcom
gs
push
dec
pop
add
in
pop
scas
je
inc
int3
mov
add
out
xor
sbb
and
xor
cli
mov
std
lea
into
in
push
or
ret
or
sti
ins
pusha
jno
jge
xchg
xchg
stc
jo
push
mov
sub
imul
cmp
ror
push
adc
int3
in
inc
fcomp
jno
push
int
nop
(bad)
icebp
and
pop
lods
dec
in
daa
fwait
xchg
mov
push
xchg
or
repnz
fwait
mov
mov
inc
lahf
int
pop
aas
pop
retf
movs
push
call
mov
inc
les
xchg
push
cmp
jge
cs
cmp
fadd
lods
sti
in
and
cmp
aam
jp
adc
out
pop
mov
jns
jne
push
mov
push
inc
mov
movs
shl
aaa
or
cwde
sahf
in
ds
stos
fadd
imul
jbe
or
sub
in
inc
inc
aaa
inc
sub
popf
not
daa
jno
mov
stos
jg
int3
mov
cmp
loop
popf
adc
mov
mov
ja
or
xchg
and
repz
jne
icebp
and
dec
add
cs
jl
les
or
push
push
cmp
sub
push
inc
sub
repz
sbb
bound
pushf
ret
dec
jmp
pop
loopne
add
push
dec
jg
inc
hlt
dec
mov
pop
xor
stos
(bad)
mov
pop
sti
add
mov
jp
sbb
into
cmp
idiv
int
mov
and
sar
ins
iret
mov
pop
sbb
loopne
adc
or
or
lahf
mov
shl
(bad)
outs
sub
sbb
jmp
add
(bad)
sbb
idiv
scas
jne
inc
mov
add
sub
and
ds
stc
cmc
and
into
mov
xor
test
cmp
dec
lods
adc
cmps
or
ins
retf
push
(bad)
jmp
sbb
shl
imul
imul
pop
(bad)
dec
out
out
push
outs
mov
push
adc
dec
cmps
push
daa
in
jmp
sub
pop
pop
push
repnz
ja
pop
in
push
cmp
mov
and
cwde
mov
pop
adc
les
jmp
fld
test
xor
xchg
retf
mov
(bad)
(bad)
sahf
sub
xor
fistp
xchg
mov
dec
and
mov
(bad)
neg
dec
addr16
or
jp
fld
icebp
mov
test
icebp
and
inc
stos
popf
xor
and
jmp
cmps
inc
aaa
sbb
pop
adc
lock
int3
push
dec
jbe
ret
push
dec
es
rcr
xor
inc
cmp
repnz
pusha
repz
inc
retf
sub
or
test
or
push
and
mov
sub
enter
imul
(bad)
mov
inc
in
ins
mov
pop
mov
cld
pushfw
push
add
push
or
xor
pop
ss
or
jo
jno
mov
push
and
xchg
call
and
cmc
add
inc
rcr
cmc
test
xor
mov
es
add
and
aad
aad
push
pop
into
cmp
cld
lock
sub
out
push
movs
shl
xor
and
inc
call
movs
inc
(bad)
(bad)
mov
push
sub
pop
sbb
cmp
add
leave
xor
inc
add
add
add
imul
fstp
imul
(bad)
daa
lea
jmp
inc
mov
fidivr
jp
push
jae
cld
mov
mov
dec
xchg
or
jp
test
(bad)
jge
daa
jmp
dec
imul
sar
push
test
pminub
dec
call
cmp
sti
and
jno
loopne
jle
(bad)
and
mov
xor
(bad)
or
retf
std
mov
pop
cmp
inc
inc
lds
mov
inc
aas
outs
push
je
and
fild
sub
mov
out
pop
pop
mov
push
push
movs
xchg
out
push
add
cmps
test
ret
push
adc
loope
push
in
ins
out
cmps
dec
sbb
dec
cli
jle
xchg
dec
daa
fimul
cmp
loope
fcomp
mov
cmp
sbb
xor
xchg
inc
aas
mov
and
mov
jg
(bad)
mov
(bad)
mov
lods
push
les
jge
daa
std
pop
xchg
dec
jb
ins
push
cs
mov
add
pusha
cmp
fld
shl
cdq
movs
or
mov
adc
dec
and
xor
out
into
aas
add
add
mov
pop
xchg
inc
pop
mov
and
dec
cli
pushf
inc
ds
cmps
cmp
jp
mov
cmp
jnp
sbb
pop
pop
adc
fst
cmp
ret
sar
std
xor
xor
inc
mov
dec
ss
dec
aas
jmp
push
mov
jne
repnz
sbb
xchg
aas
mov
and
or
loope
mov
(bad)
and
dec
xchg
into
xor
dec
repnz
icebp
pop
inc
sti
sub
adc
leave
stc
sbb
or
pop
aam
push
je
jne
xor
push
jbe
fwait
stc
lds
jl
add
hlt
sub
sub
jecxz
add
stos
js
mov
xchg
xor
daa
das
std
or
pusha
fucom
ja
or
in
cli
push
(bad)
sahf
cmp
dec
inc
in
int
fcomp
mov
test
add
aam
push
adc
mov
cmp
retf
fs
comiss
int
add
(bad)
jmp
or
out
mov
movs
mov
lea
psllq
iret
test
cmp
adc
into
fiadd
sbb
adc
adc
dec
cmp
xchg
sbb
and
mov
jo
div
retf
imul
loopne
add
(bad)
loopne
call
into
adc
loope
jg
sub
xlat
pop
mov
rcr
lds
scas
mov
sub
dec
mov
stos
push
xchg
mov
pop
jb
push
and
inc
mul
inc
push
icebp
je
mov
cli
pop
adc
inc
test
enter
aas
movs
inc
sub
cli
fistp
cmc
cmp
iret
mov
dec
ret
cmc
jle
xchg
mov
cmps
in
in
jmp
mov
jnp
mov
jecxz
sbb
inc
and
jg
movs
in
dec
and
clc
sar
repz
addr16
fist
out
and
jge
or
xlat
fst
cmc
ror
dec
fnstcw
pop
push
(bad)
jg
outs
mov
add
dec
jns
in
aas
popa
(bad)
bnd
pop
test
out
cmps
or
test
hlt
mov
nop
cmp
leave
mov
cld
shl
xchg
pop
sub
mov
push
adc
std
mov
ror
push
fwait
stos
cmps
lods
stos
sbb
jmp
pop
mov
mov
mov
es
sbb
inc
mov
call
dec
inc
xchg
clc
addr16
pop
iret
mov
(bad)
xor
repnz
outs
ss
inc
movs
(bad)
push
icebp
mov
cmp
call
pop
iret
mov
imul
inc
aas
mov
sbb
ret
aam
jp
cmc
cmp
aad
ret
mov
lds
pop
stos
sub
inc
inc
adc
fwait
xor
lods
inc
or
mov
jmp
ins
jge
pop
pop
xchg
mov
push
inc
pushf
and
(bad)
fs
lea
lods
iret
and
or
push
mov
popf
fisubr
xor
or
inc
adc
jmp
ins
aaa
mov
fisub
fadd
call
pop
sahf
jmp
shl
sbb
call
int3
outs
jb
jnp
dec
mov
cmps
adc
inc
mov
sar
dec
adc
repz
jne
pop
pop
xchg
cmc
mov
mov
adc
pop
stos
push
pop
xchg
push
lods
inc
cli
mov
push
ins
jge
imul
in
add
aam
jg
popf
and
adc
push
aas
jmp
pop
and
aad
xor
test
inc
mov
and
pop
fistp
xchg
mov
shr
push
repnz
sub
jae
jo
mov
push
xchg
xlat
retf
mov
call
outs
mov
jno
les
(bad)
xchg
pusha
adc
popf
push
sub
out
jle
mov
sbb
dec
adc
adc
stc
cmp
fwait
mov
fnstenv
mov
mov
push
imul
jno
inc
les
lods
mov
fadd
or
lods
in
xor
pop
enter
jo
(bad)
adc
call
in
cmp
into
outs
lods
frstor
and
movs
sub
add
fiadd
lea
movs
dec
retf
pop
mov
xchg
ds
je
mov
ror
pop
inc
out
adc
sbb
shl
sti
arpl
add
dec
cmp
sub
(bad)
push
mov
lods
movs
cmp
ins
popa
add
and
aam
lds
rcr
lea
cmc
ss
jns
push
imul
fmul
(bad)
hlt
push
mov
or
retf
xchg
cmc
mov
dec
lods
pop
sbb
dec
(bad)
cmp
push
push
pop
sub
cwde
cwde
leave
add
fimul
dec
mov
in
jge
pop
mov
ins
mov
pop
dec
push
jle
cwde
(bad)
fimul
cmp
cmps
jp
(bad)
hlt
leave
(bad)
(bad)
aad
jns
dec
data16
dec
dec
aas
push
outs
in
gs
lods
into
movs
test
sbb
es
shl
adc
out
icebp
aas
imul
fst
fmul
dec
pop
push
inc
add
popa
mov
jp
sub
inc
rcr
xchg
pop
retf
mov
add
jmp
jge
div
ret
xchg
stc
xchg
ret
fld
test
adc
add
call
push
mov
add
jb
lahf
sub
or
dec
sub
mov
and
jecxz
popf
stos
dec
or
call
lahf
mov
rcr
(bad)
sar
out
lods
and
sar
adc
stos
inc
pop
dec
stc
ins
cmc
inc
fsubr
or
mov
pop
cmp
sub
or
pop
cmp
jecxz
cmp
mov
pushf
fs
xlat
repz
in
call
jnp
movs
ja
mov
dec
movs
es
scas
push
call
push
fsubr
push
enter
cmp
mov
and
mov
and
xchg
fdiv
xchg
(bad)
cmp
test
ret
sub
sub
or
jle
fnstcw
bound
add
mov
and
call
sub
mov
adc
frndint
mov
xor
dec
(bad)
cmps
xchg
pop
test
popa
test
arpl
pushf
inc
mov
xor
mov
cmp
iret
push
sbb
aam
test
jmp
fs
mov
leave
jge
aam
push
inc
sub
mov
jmp
inc
aad
mov
or
jecxz
xchg
and
mov
xor
inc
mov
ins
push
xor
pusha
(bad)
iret
scas
fcmovu
sti
inc
fcmovnu
xor
js
(bad)
mov
je
lods
mov
out
dec
iret
retf
lods
loope
out
jge
push
fstp
pop
hlt
aaa
jnp
in
adc
imul
in
sbb
xor
add
movs
nop
add
xchg
test
repz
cmp
inc
dec
shl
dec
and
mov
adc
fadd
jno
mov
pop
push
sub
inc
pop
iret
scas
dec
ins
jnp
fnstcw
mov
sti
xchg
gs
inc
mov
inc
nop
(bad)
stos
into
cmp
movs
sub
push
add
(bad)
xlat
mov
pop
inc
mov
xor
or
mov
jecxz
mov
call
jae
jp
jg
lods
(bad)
in
add
fnsave
mov
popa
sbb
stos
mov
sbb
xchg
or
xchg
(bad)
mov
jl
sbb
hlt
(bad)
sub
ror
push
sbb
popf
add
sub
jge
rcr
dec
hlt
mov
pusha
pop
push
cmp
pop
lahf
scas
adc
(bad)
dec
std
fstp
push
aaa
lods
rcl
jnp
nop
sub
xchg
xchg
bound
pop
or
xchg
pop
test
lds
test
loope
adc
mov
xor
inc
jl
xchg
pop
loop
(bad)
fdivr
mov
sub
clc
imul
lods
js
cmp
cmp
jecxz
dec
pop
outs
aaa
push
sub
and
mov
mov
adc
clc
adc
push
bnd
jb
add
arpl
mov
stos
mov
cmp
pop
out
gs
cmp
test
xor
stos
mov
dec
push
and
je
mov
push
in
push
mov
jle
jb
fs
mov
outs
push
sbb
xchg
sahf
sbb
jle
lea
fs
fsubr
inc
aad
test
int
add
cmc
punpckldq
pop
mov
jae
add
lahf
xchg
sqrtps
mov
mov
push
mov
loopne
inc
push
les
stos
pop
aam
and
dec
mov
xor
push
push
sub
mov
sub
leave
sahf
loope
mov
in
push
jnp
mov
daa
loop
dec
adc
adc
mov
sets
jg
out
or
xor
push
ds
xchg
adc
movs
aam
pop
stos
sub
js
fstp
xchg
mov
leave
add
cli
push
push
fdiv
(bad)
and
push
ss
xchg
and
lock
in
inc
das
pop
pop
std
inc
jbe
stos
bound
mov
push
cmp
dec
bound
jne
inc
cmps
test
dec
dec
ror
mov
sub
xor
in
rcr
fidivr
or
xchg
inc
ins
iret
jae
mov
and
lahf
sub
je
jnp
sub
mov
lods
xchg
push
pushf
pop
pop
fs
jl
add
and
cdq
leave
xchg
jb
lock
shl
bnd
jle
cld
leave
arpl
iret
ins
push
bound
sbb
jmp
mov
cdq
pop
sbb
adc
rcl
xor
cmps
dec
pop
push
sub
dec
clc
jnp
out
or
xchg
jno
inc
jb
lea
sub
adc
(bad)
mov
add
jmp
xlat
mov
sbb
daa
repz
aad
icebp
add
and
fst
add
mov
mov
nop
xchg
push
adc
xchg
arpl
test
inc
dec
jge
ret
mov
fstp
xor
mov
pop
je
fs
mov
inc
jge
dec
iret
lock
test
test
sub
rol
push
syscall
add
out
and
lea
sub
jbe
add
popa
bound
movs
movs
ins
add
or
stos
fisubr
jle
mov
inc
mov
scas
sbb
inc
or
mov
and
add
ins
cmp
pop
mov
adc
mov
push
dec
push
bound
inc
pop
test
add
(bad)
stos
jae
(bad)
shr
(bad)
shl
sub
mov
xlat
cmp
call
inc
jge
sub
dec
mov
jo
cmp
sub
inc
xor
imul
xchg
shl
(bad)
mov
fadd
icebp
cli
add
movs
mov
mov
outs
lahf
jo
(bad)
into
xor
add
out
sbb
and
ja
rol
ret
adc
mov
test
add
jb
jb
mov
mov
aad
movs
jp
inc
inc
dec
stos
dec
and
sbb
inc
sbb
add
cmp
push
adc
les
stc
ror
jl
in
xor
addr16
daa
xor
or
xlat
outs
cs
adc
fiadd
and
fild
js
stos
jl
add
imul
sub
dec
fs
dec
adc
shl
jb
mov
and
and
xchg
test
jecxz
push
xlat
es
pop
mov
mov
dec
lods
add
add
push
push
test
mov
jp
test
fld
mov
mov
mov
sub
rcl
stos
cli
inc
mov
shr
inc
(bad)
push
inc
rcl
(bad)
pushf
cmp
inc
mov
(bad)
mov
push
xchg
and
shr
jmp
mov
retf
dec
repz
in
mov
push
dec
and
and
mov
fisubr
les
inc
sar
mov
ins
jno
pop
retf
xchg
(bad)
jg
mov
rol
inc
push
add
cmc
movs
sub
(bad)
xor
iret
mov
cmp
les
jecxz
xchg
add
push
push
cmp
test
fiadd
jo
add
jg
scas
aaa
sub
and
(bad)
xchg
cli
pop
dec
adc
loopne
inc
popf
inc
adc
loop
pop
jo
aad
xlat
xchg
aad
mov
mov
popf
push
cmps
sub
jmp
pop
nop
jge
jge
fstp
aam
rcl
xor
int3
jne
mov
xor
push
push
push
sbb
jecxz
and
mov
xor
push
inc
sub
call
and
(bad)
sub
pop
push
mov
ret
jmp
lds
daa
pop
inc
retf
push
mov
xchg
xchg
movs
dec
cld
cli
cmc
(bad)
in
or
inc
icebp
push
dec
pop
push
inc
mov
xor
mov
(bad)
movs
mov
adc
add
mov
test
aaa
rdtsc
mov
ret
lock
ds
pop
fsub
cmp
loop
sub
mov
arpl
stc
aam
call
xchg
cmp
mov
mov
lods
cmp
xor
imul
inc
and
sub
movs
cmps
stos
jae
push
ss
jmp
mov
retf
lahf
push
mov
cmp
(bad)
xchg
fst
stos
push
push
gs
push
add
pop
fimul
xchg
inc
dec
mov
stos
shl
xchg
ret
push
ins
sub
nop
ds
adc
jecxz
xor
movs
stos
lds
pop
inc
push
pop
adc
push
mov
gs
or
and
fwait
mov
xchg
cmp
arpl
inc
loope
fdivr
call
mov
mov
addr16
aam
add
retf
jle
mov
or
mov
inc
pop
xchg
frstor
mov
leave
cld
and
jbe
adc
pop
addr16
stos
aam
out
comiss
int
cmp
add
in
sub
inc
sar
push
jecxz
cmp
mov
inc
pop
push
push
pop
cld
inc
mov
push
jg
arpl
rol
mov
je
retf
jmp
sar
add
mov
nop
sub
je
imul
cmp
push
xchg
pop
addr16
inc
pop
(bad)
fwait
jg
or
sbb
test
mov
fs
jb
mov
push
adc
pop
aas
rcl
inc
jo
mov
mov
push
enter
xchg
xchg
or
xor
and
cmp
aam
(bad)
dec
retf
sub
add
pop
adc
stos
lods
add
pop
(bad)
push
jo
mov
(bad)
retf
mov
add
xor
loope
jmp
(bad)
cmp
mov
(bad)
cdq
cmc
inc
push
scas
sub
mov
(bad)
lock
hlt
mov
dec
xchg
sbb
and
push
push
adc
scas
aaa
cmc
pop
push
(bad)
lahf
in
jge
daa
imul
and
push
mov
pop
sbb
or
test
dec
pushf
or
idiv
addr16
daa
adc
sub
inc
test
(bad)
jmp
(bad)
aad
stos
push
mov
pop
mov
mov
shl
pop
and
or
hlt
inc
cmp
pop
or
pusha
pusha
push
cld
(bad)
movs
xlat
mov
cdq
sbb
mov
daa
test
xchg
adc
jo
xchg
pop
test
and
dec
loop
into
loope
pusha
mov
and
add
inc
call
push
test
inc
dec
inc
imul
sub
jmp
scas
inc
repz
or
pop
in
call
adc
inc
jnp
mov
and
in
add
and
mov
rcl
dec
xchg
inc
mov
lds
pusha
loope
pop
into
movs
jecxz
enter
enter
outs
aaa
movs
jb
or
sbb
mov
or
movs
pushf
xor
push
lds
shr
push
add
mov
ret
xor
test
push
popf
lds
mov
movs
or
je
fidivr
push
xchg
dec
sub
in
xchg
iret
xor
sbb
(bad)
iret
push
mov
lods
pop
leave
std
ins
out
and
cs
scas
sub
mov
(bad)
lods
cmp
and
fist
loope
outs
and
mov
aam
lea
mov
sbb
hlt
retf
adc
xlat
movs
pop
sahf
jg
jns
and
add
cmps
adc
dec
xor
lea
push
xor
sbb
outs
sbb
or
pop
inc
push
outs
sar
jecxz
loopne
sub
cmp
(bad)
mov
pop
pop
in
add
mov
popa
xchg
push
test
jmp
sub
mov
test
(bad)
and
cmp
or
rol
xchg
call
fstenv
add
mov
xchg
neg
repz
sub
inc
push
mov
aam
sbb
dec
cwde
test
and
xor
jae
shl
sar
mov
mov
js
jmp
pop
sub
nop
xchg
sbb
dec
repnz
test
outs
jns
inc
enter
mov
mov
(bad)
mov
daa
push
sbb
xchg
fisub
adc
or
gs
cvttps2pi
push
cmp
fcmovnb
cmp
dec
xchg
inc
mov
hlt
repz
cmp
fmulp
and
mov
call
sbb
retf
sbb
lea
aam
fstp
das
xor
lods
leave
jns
add
xor
jo
cmp
xchg
ja
int
cli
mov
push
push
aad
pusha
adc
pusha
aam
nop
inc
sbb
sahf
(bad)
push
jl
jge
dec
xchg
in
ficomp
aaa
lahf
and
(bad)
ins
test
call
mov
sbb
push
cmp
jmp
push
fistp
loope
nop
add
inc
cmps
shr
dec
pushf
push
in
mov
iret
sbb
movs
ror
repz
inc
add
test
cmps
mov
dec
jno
retf
sbb
cdq
and
pop
xchg
push
mov
sub
mov
jns
mov
cmps
mov
jmp
adc
(bad)
test
adc
add
cmp
xor
push
xchg
call
jns
out
lods
in
mov
jp
fcmovnb
sbb
rol
lock
addr16
popf
gs
sub
mov
ret
sbb
(bad)
cmps
aam
pop
(bad)
fsubrp
fisubr
mov
mov
inc
sar
repnz
movs
test
retf
dec
pop
inc
cmp
fwait
dec
xor
jmp
jge
inc
ins
call
movs
fbld
sub
fs
xor
movs
mov
nop
dec
repnz
inc
xchg
leave
(bad)
sahf
dec
hlt
push
sub
pop
int
scas
enter
sbb
and
add
push
adc
jg
sub
stos
xchg
pop
add
pop
xchg
pop
xor
lods
push
scas
xchg
retf
inc
mov
sbb
add
pop
dec
sub
adc
mov
jnp
jae
sub
xchg
into
pop
pop
and
dec
jns
sbb
adc
add
mov
mov
test
cmps
push
jge
dec
stos
xchg
mov
xor
jl
sub
nop
push
push
outs
mov
leave
loop
mov
mov
mov
fwait
sti
dec
or
fucom
mov
leave
mov
jmp
xchg
cdq
mov
mov
and
or
ja
and
shl
pop
or
shr
pop
inc
xchg
leave
push
aam
sbb
retf
scas
mov
sbb
ror
xchg
and
and
push
movs
aam
outs
ds
rcr
fsub
pop
fidiv
sbb
in
inc
adc
pop
mov
sahf
xchg
mov
dec
popf
pusha
jbe
fs
bound
mov
(bad)
cmps
les
rol
out
in
enter
mov
and
std
ss
dec
jno
jecxz
jge
jb
sbb
mov
add
(bad)
sbb
mov
lock
loope
test
cmp
jl
cli
push
fs
es
fstp
dec
pop
inc
dec
xchg
scas
stc
ins
sub
fidivr
jbe
jae
push
push
push
inc
mov
and
pop
push
int
lods
mov
lods
outs
and
jle
mov
int3
mov
push
movs
push
je
ret
cmp
shl
mov
loop
pop
scas
dec
adc
mov
adc
test
aam
push
(bad)
mov
mov
jb
push
add
and
mov
ins
xchg
xor
(bad)
test
add
push
js
pushf
bound
or
jmp
push
movs
sub
mov
mov
mov
sbb
push
aaa
lea
dec
add
mov
add
xchg
in
or
faddp
sbb
mov
ds
cmp
push
pop
addr16
and
jecxz
mov
imul
inc
xchg
mov
shl
mov
ja
mov
jg
popa
ret
mov
mov
sbb
lock
xor
stc
je
mov
mov
mov
mov
xchg
inc
lods
xor
mov
inc
xor
sub
or
aaa
xor
call
cmp
adc
out
or
into
mov
and
lods
je
bound
jae
fisub
test
icebp
dec
mov
ret
and
and
aam
dec
jle
loop
aam
loope
jnp
fld
adc
movs
imul
(bad)
out
clc
fwait
jmp
mov
aas
lahf
repz
cmp
push
(bad)
jmp
sub
push
mov
pop
inc
sbb
aaa
jb
pop
movs
push
inc
jno
pop
or
in
mov
retf
xchg
xchg
add
test
and
add
shr
pop
pop
ret
add
sub
add
xchg
ficomp
pop
sub
and
loope
ror
cli
adc
(bad)
inc
dec
scas
mov
outs
pop
mov
or
stc
jns
jl
nop
aas
ret
rcl
hlt
(bad)
icebp
stos
enter
adc
sbb
gs
and
(bad)
mov
add
cli
adc
bound
ror
push
aaa
into
push
pop
mov
in
sbb
xor
push
dec
shr
js
in
cmp
cs
movs
xor
fcomp
and
xchg
inc
and
mov
icebp
leave
scas
cdq
mov
dec
aaa
mov
idiv
mov
jb
sub
mov
or
les
inc
pop
and
push
mov
in
mov
ins
mov
sar
add
pop
push
out
jnp
pop
cmp
pop
(bad)
adc
clc
aam
xor
popf
jecxz
mov
(bad)
aam
mov
dec
jg
pop
popf
test
ins
nop
jmp
add
aas
adc
call
in
inc
aad
and
imul
mov
iret
mov
mov
cli
jmp
movs
cdq
inc
sbb
dec
sti
test
(bad)
mov
int
jmp
push
mov
pop
fmulp
fmul
cmps
pop
rcr
jmp
jp
retf
inc
mov
xchg
pop
test
neg
jl
and
adc
ror
es
push
stos
push
mov
mov
pop
(bad)
div
les
stos
imul
cmps
adc
xchg
lods
xor
ficom
pop
clc
jbe
push
(bad)
cmps
int3
add
add
pandn
adc
push
xchg
dec
and
enter
mov
mov
jnp
jnp
aaa
ss
push
mov
inc
or
femms
inc
and
mov
rcr
push
(bad)
xchg
jl
add
mov
frstpm(287
ret
push
cmps
cmps
fmulp
jmp
mov
mov
xchg
cmps
xchg
cmp
or
stc
dec
js
int
test
leave
jne
xor
fnstenv
icebp
ins
xlat
popa
mov
std
xor
fs
push
jg
push
xchg
ja
in
cs
outs
fsubr
ins
cdq
lea
test
dec
cmps
les
pop
cld
cmps
clc
jno
mov
popa
cmps
fdivr
lods
xchg
(bad)
out
in
jmp
mov
cli
sub
mov
sbb
in
add
inc
imul
cwde
jge
fsub
mov
fild
push
sub
mov
add
arpl
addr16
mov
pop
test
jge
fisub
fwait
std
not
mov
push
xchg
add
mov
jb
jge
cwde
test
out
pop
and
loop
mov
push
push
into
popa
bound
xor
push
inc
add
lods
imul
int
sub
mov
xor
inc
jae
cmp
mov
mov
rcr
and
js
push
adc
addr16
cmps
push
lds
or
xor
push
fcom
mov
and
pop
jns
lock
outs
push
jl
movs
sub
jg
add
add
(bad)
pop
rcr
gs
add
mov
test
std
push
jmp
and
pop
loopne
shl
pop
mov
xlat
inc
inc
ror
push
outs
jnp
(bad)
or
icebp
daa
sbb
aam
push
push
cmp
and
push
ss
aas
in
cmp
retf
adc
imul
jecxz
xor
sbb
cld
jne
aas
lahf
ja
cs
mov
xchg
jg
rcr
ins
mov
mov
ret
push
stc
mov
lea
sti
sar
(bad)
jge
or
xchg
jmp
add
cmps
sbb
in
aas
fidivr
inc
xchg
xchg
xchg
adc
xor
test
or
(bad)
cmp
in
sub
aad
ror
les
pop
mov
inc
push
rcr
or
mov
mov
and
lods
adc
pop
rol
mov
inc
push
jge
aaa
popf
movs
xchg
mov
mov
sub
ret
fwait
jmp
pop
ins
adc
rcl
repz
mov
or
movs
jb
test
add
and
sbb
rol
pop
or
addr16
or
scas
in
scas
popf
jg
cmc
push
movs
sub
imul
aam
scas
jle
std
js
in
cmp
je
paddusb
int
jmp
jg
cmp
xor
lea
mov
jne
aam
add
push
adc
and
movs
xchg
mov
pop
push
mov
dec
mov
stos
or
push
cmps
ficomp
pop
imul
popa
mov
dec
outs
pmuludq
xor
or
xor
and
aaa
push
push
ret
adc
iret
aas
sar
imul
test
push
xor
sbb
mov
cli
or
push
out
jecxz
cld
jge
cli
fmulp
lods
ss
fwait
xchg
sbb
arpl
(bad)
push
jg
jae
retf
mov
mov
(bad)
fiadd
xlat
add
adc
cmp
sbb
push
push
dec
imul
sbb
mov
test
add
lods
int3
movs
sbb
fcmovne
ds
ins
jbe
jmp
adc
aad
call
sbb
xlat
mov
in
and
adc
xchg
adc
std
dec
sbb
add
jge
fcom
dec
mov
pop
sti
mov
jecxz
bound
mov
push
sbb
xlat
mov
xchg
jmp
adc
push
lea
sub
and
ss
retf
or
std
js
or
stc
adc
push
cmp
push
fistp
sbb
add
in
push
jbe
jb
loop
dec
ror
or
add
sbb
test
adc
movs
lea
add
sub
jbe
sub
repnz
xor
xor
pop
xchg
lock
and
pop
pop
jnp
dec
mov
fsin
mov
jge
das
xchg
pop
dec
popa
out
pop
sub
sbb
add
push
aas
aaa
sbb
rcl
rol
add
jp
cs
xchg
jb
xor
push
adc
jnp
inc
mul
mov
inc
mov
test
inc
mov
call
lahf
cwde
jecxz
pop
mov
or
xlat
(bad)
jmp
idiv
inc
inc
jae
mov
or
dec
ror
lods
or
inc
pop
getsec
mov
or
outs
arpl
xor
sbb
clc
jge
add
and
cwde
mov
loopne
idiv
mov
aad
jle
push
imul
or
fs
jmp
sti
pusha
jp
jb
aas
pop
ins
mov
cmp
push
mov
pop
loop
dec
stc
sahf
loope
rcr
scas
xor
mov
xor
inc
push
dec
div
cs
xchg
inc
aad
xlat
hlt
imul
fwait
jmp
pop
mov
enter
push
mov
fmul
test
fwait
push
adc
add
es
xchg
out
pop
gs
push
mov
mov
popa
pusha
dec
mov
fdivr
loopne
stos
rol
mov
retf
or
mov
adc
pop
dec
(bad)
push
nop
out
jecxz
pop
(bad)
sbb
jg
(bad)
(bad)
stos
push
cmp
dec
loope
mov
scas
sti
ds
inc
push
ss
arpl
mov
sti
push
sbb
sar
std
dec
sub
movs
xor
iret
mov
sub
in
icebp
jo
mov
and
stos
in
outs
loope
mov
outs
aas
loop
scas
aas
loope
fild
cmp
ja
jbe
push
cld
mov
push
retf
sbb
les
mov
les
cmp
ss
jg
xchg
jb
adc
out
cwde
sti
jp
retf
xchg
das
ja
test
stos
pop
out
dec
repnz
ds
dec
push
aam
int3
call
dec
ss
mov
jno
sti
sub
mov
and
clc
ds
jo
inc
fldcw
pop
lds
push
cld
inc
sbb
sub
push
xchg
adc
aam
xor
inc
cmps
jno
push
movs
lahf
dec
loopne
call
pop
or
pop
push
mov
mov
mov
les
call
add
sub
fimul
mov
mov
push
rcr
adc
sar
push
lea
sub
je
sub
sbb
xchg
xor
pop
fist
shl
xor
xlat
adc
dec
xchg
or
or
in
iret
aam
outs
fnstsw
jbe
test
mov
and
mov
loop
sbb
int
psraw
mov
sbb
call
rcl
push
dec
pop
and
xor
dec
dec
jecxz
imul
xchg
push
scas
or
stos
sbb
mov
push
dec
arpl
pop
test
cmp
sbb
retf
xor
cs
aam
add
jp
repz
stos
sar
xchg
dec
xor
sub
mov
mov
ss
inc
rcr
call
push
add
retf
mov
xlat
add
adc
xor
inc
pop
lahf
sbb
movs
pop
push
xor
pop
jecxz
jle
outs
jg
mov
xor
(bad)
push
(bad)
in
sub
mov
(bad)
dec
xchg
adc
fsubp
jmp
imul
push
stc
push
mov
cmp
in
xor
jg
movs
cmc
dec
and
mov
cmp
mov
in
aaa
pop
retf
jp
cmc
inc
imul
sbb
sbb
cmp
cld
stos
jp
aam
lods
push
sbb
jnp
inc
sti
jg
xchg
ds
jns
add
shr
jo
in
pmuludq
lds
mov
test
retf
std
pop
outs
dec
int
scas
test
inc
fisub
pop
xchg
sub
or
mov
dec
pusha
cmps
mov
inc
hlt
push
add
scas
add
jnp
fucomi
xor
and
add
cli
sub
xchg
imul
pop
aas
mov
jae
imul
int3
push
jb
xchg
sbb
retf
sub
and
fcom
std
mov
inc
imul
movs
mov
pop
es
mov
shr
test
out
gs
pop
(bad)
ss
bound
das
dec
scas
fistp
es
iret
je
arpl
in
hlt
repz
sbb
cmp
mov
sub
test
sub
pop
fidiv
jb
fsubrp
sbb
sbb
and
pop
loop
mov
sbb
shl
push
and
dec
jmp
mov
in
into
into
inc
gs
xor
loop
sbb
inc
test
movs
xchg
stos
xor
stos
or
mov
gs
nop
scas
rcl
das
in
out
xor
xchg
mov
mov
call
add
sbb
out
push
jmp
or
repnz
addr16
fisubr
sub
jns
mov
int3
movs
or
add
mov
adc
jb
(bad)
pop
inc
jno
fcmovnu
mov
xor
imul
mov
cdq
pop
adc
popf
int3
inc
stc
sbb
rcl
ss
das
stc
cmp
pop
pop
cmp
into
scas
dec
lods
cli
lds
jnp
mov
xor
mov
stos
rep
out
retf
mov
mov
in
inc
mov
into
xor
inc
push
xchg
lock
cdq
push
push
fbld
jbe
shl
or
mov
es
push
push
pop
outs
push
jge
shr
seta
sbb
push
fbstp
out
sbb
leave
cmp
ss
movs
(bad)
sbb
div
lods
dec
and
mov
pop
je
mov
and
sub
cmp
repz
addr16
std
enter
sahf
jp
mov
fdiv
call
test
xchg
push
fcmovnu
dec
lock
jae
xchg
sahf
in
mov
dec
mov
push
iret
lea
popa
and
bound
adc
dec
test
das
stc
in
ret
mov
xchg
loope
ja
rcr
add
add
adc
cmps
loope
enter
in
jg
jns
clc
pop
fstp
mov
in
daa
and
xor
add
jne
push
jge
push
add
adc
ret
dec
or
or
push
mov
xchg
dec
ds
mov
mov
mov
(bad)
ja
cmp
mov
xor
pop
and
imul
and
(bad)
scas
cmp
pop
sbb
sbb
cs
adc
lea
xor
jbe
outs
cmp
inc
lods
jl
pop
lock
jbe
aaa
aaa
push
imul
out
aas
jno
mov
adc
(bad)
mov
mov
rep
and
pop
shl
jno
jb
shl
inc
adc
iret
addr16
jmp
sahf
pop
int
pop
xchg
(bad)
pop
or
dec
xlat
es
pop
xlat
and
pop
mov
sti
xchg
sub
mov
mov
cwde
in
mov
push
and
loope
pop
lea
push
inc
les
sahf
addr16
aaa
sbb
xchg
retf
shl
sahf
cmp
jns
adc
rcr
mov
das
ss
sub
inc
jo
sbb
add
loopne
cdq
sbb
cmps
cwde
jmp
mov
outs
lods
mov
adc
lods
out
mov
and
out
xor
pop
sbb
xchg
cwde
sub
adc
add
push
sbb
push
sub
arpl
stc
pop
pop
daa
(bad)
inc
cli
mov
jge
pshufw
std
mov
inc
mov
or
sbb
mov
sub
inc
outs
imul
add
mov
(bad)
jecxz
add
test
adc
daa
mov
push
add
fistp
push
xchg
ret
fld
lds
leave
sub
mov
and
dec
sbb
mov
int
in
jg
fmul
retf
cld
inc
popa
jne
ficomp
push
stc
jo
add
push
into
mov
setg
xchg
out
or
mov
jae
repnz
in
scas
and
and
mov
jl
test
push
dec
or
push
jg
ret
sar
and
push
xor
in
cmps
dec
dec
push
and
pop
pop
shl
xor
icebp
in
pop
mov
mov
fdiv
mov
jns
je
repnz
inc
mov
fbstp
leave
scas
lods
sahf
sub
jnp
sub
hlt
and
xchg
or
lea
and
xchg
lea
test
and
jmp
rcl
mov
add
pushf
lock
stc
jge
xlat
sbb
cmc
rol
fisubr
outs
ficom
dec
pop
push
call
mov
jl
bound
retf
dec
xor
jns
and
xchg
inc
and
ret
add
push
jp
imul
in
outs
addr16
shl
sub
dec
iret
pop
test
nop
aaa
sahf
gs
in
ja
scas
test
mov
scas
or
mov
imul
pop
div
or
(bad)
pop
test
xchg
ins
test
adc
aas
aam
clc
imul
repnz
jmp
sbb
pop
out
add
mov
fisttp
jmp
sub
clc
sub
les
dec
adc
or
(bad)
loopne
ins
popf
rol
cmps
stos
test
add
enter
or
inc
sub
shl
cmp
xlat
ja
fs
inc
aad
push
dec
hlt
fldenv
push
fdivp
mov
add
jae
sub
xchg
out
add
xchg
adc
inc
stc
ja
or
lea
mov
sbb
dec
daa
jmp
jo
(bad)
jns
pop
push
mov
inc
sub
ins
mov
cli
push
add
inc
mov
push
fisubr
mov
cmps
cmps
das
outs
xchg
lock
push
push
and
mov
add
sub
dec
pop
cmp
std
ret
inc
adc
mov
xchg
inc
out
in
mov
in
sub
xchg
(bad)
pop
or
fidivr
push
les
mov
lea
stc
hlt
xchg
retf
and
cdq
movs
or
cmc
fist
sti
aaa
mov
xchg
inc
add
test
cdq
cmp
fsubr
or
ja
rol
jae
arpl
add
sahf
sbb
inc
popa
sub
fwait
test
inc
add
jae
fisub
mov
call
pop
in
sahf
xor
jo
sbb
iret
popa
mov
mov
(bad)
sbb
xchg
mov
or
pop
arpl
rol
pop
dec
dec
push
sbb
pop
or
or
and
mov
out
loope
fist
adc
adc
sbb
inc
out
add
in
pop
movs
and
test
push
mov
and
movs
(bad)
out
lods
mov
(bad)
inc
pop
push
mov
sub
sar
cli
jg
mov
mov
int3
jo
ss
push
jp
repz
mov
leave
mov
frstor
cs
movs
jno
in
dec
cmp
sbb
or
or
inc
mul
inc
xlat
jg
stos
sti
xchg
mov
mov
mov
adc
push
les
(bad)
dec
(bad)
push
jmp
cmp
js
mov
jae
nop
stos
inc
dec
addr16
imul
mov
movs
push
movs
xor
sbb
and
imul
(bad)
fs
(bad)
dec
and
test
mov
je
test
xchg
mov
dec
jbe
sub
cwde
aad
mov
pop
xchg
iret
daa
fadd
ins
push
int
and
xchg
mov
aas
mov
pushf
cmp
(bad)
mov
jmp
jo
jbe
pop
(bad)
loop
mov
mov
sub
inc
ins
fwait
mov
mov
mov
adc
sub
sub
fwait
pop
(bad)
jno
es
jecxz
(bad)
mov
outs
jae
sub
jg
pop
fnsave
pop
mov
and
test
test
popaw
pusha
test
add
sbb
and
stos
mov
and
stos
pushf
js
nop
xor
aam
leave
outs
iret
and
cmc
scas
mov
cmc
cld
mov
ror
push
ret
dec
leave
sbb
jno
jmp
fstp
ss
int3
xor
mov
pop
jae
and
push
movs
pop
inc
(bad)
jno
lods
(bad)
mov
scas
xchg
ret
push
jecxz
sahf
popa
dec
dec
adc
adc
jge
stos
mov
and
mov
lahf
mov
not
retf
mov
dec
arpl
icebp
add
jb
cmps
daa
mov
(bad)
fsubr
(bad)
psllq
fdivrp
mov
pop
sbb
xchg
daa
jno
dec
ds
stos
enter
jno
and
sbb
or
sbb
push
add
bound
mov
iret
test
ss
jbe
push
out
cmp
jl
rcl
out
xchg
dec
push
mov
ss
in
cmp
and
jbe
push
push
and
bound
hlt
mov
cmc
out
sub
sub
dec
jae
or
jp
mov
(bad)
sti
call
mov
fst
mov
outs
loop
neg
sub
jo
in
out
stc
cmc
and
ja
fadd
in
mov
add
mov
out
xchg
mov
push
mov
cmp
daa
dec
aam
inc
dec
sbb
dec
push
dec
aad
and
addr16
ins
ffree
out
and
rcl
push
cmp
dec
push
shl
imul
stos
jns
int
and
or
rcl
xlat
xor
arpl
shl
retf
pop
sub
scas
sbb
adc
mov
mov
mov
iret
es
movs
mov
sahf
cmps
pop
stos
movs
stos
cmps
test
cmp
mov
in
jnp
inc
lods
in
or
cmc
popa
lods
pop
dec
icebp
mov
inc
mov
adc
(bad)
mov
xchg
sahf
sub
and
or
jle
es
jmp
mov
cmp
add
mov
ret
jne
or
cmps
push
es
nop
xchg
sbb
cli
scas
or
in
test
ror
add
imul
xor
fiadd
xchg
les
jae
stos
jmp
imul
mov
cmps
enter
mov
movs
jne
xor
or
xlat
aad
pusha
nop
rcl
push
push
pop
out
ss
enter
ds
cs
(bad)
mov
sbb
and
movs
movs
jbe
mov
push
adc
adc
push
mov
push
pop
or
xlat
cmc
push
fldcw
or
xor
jp
loopne
mov
movs
test
call
daa
cmps
jmp
test
jns
pop
lea
push
pop
sbb
scas
call
adc
bnd
imul
rol
pop
add
sbb
or
addr16
push
in
push
inc
xchg
in
xchg
cmp
xchg
and
xchg
xchg
adc
retf
xlat
mov
lods
retf
push
enter
pop
jmp
push
push
jg
dec
dec
(bad)
(bad)
hlt
dec
mov
mov
mov
adc
xor
scas
es
xor
outs
dec
hlt
lock
dec
test
sbb
adc
retf
push
dec
daa
cld
popf
fldcw
mov
mov
arpl
mov
xlat
test
mov
xchg
sub
dec
add
pop
cli
pop
lahf
push
push
xlat
jbe
mov
fdivr
jae
imul
pop
and
cmp
jp
cmp
inc
cmps
xlat
aaa
or
aas
dec
(bad)
cmps
mov
mov
jmp
popa
add
push
jle
cld
and
nop
pop
pop
mul
fcmovu
jg
cmp
je
mov
xor
ret
stc
jle
ds
dec
inc
or
or
sub
and
add
dec
fisub
jl
or
add
dec
sbb
int3
pushf
(bad)
mov
xchg
dec
aam
mov
xchg
scas
sbb
xor
push
ins
and
lahf
enter
je
mov
(bad)
push
mov
in
jnp
cmps
xchg
inc
fistp
push
bound
jne
inc
sub
push
inc
addr16
xchg
in
sub
xchg
push
jne
dec
and
(bad)
lods
pop
cmps
xchg
mov
sub
push
gs
jo
jno
(bad)
jo
push
jb
into
rcr
cmp
adc
pop
push
pop
jmp
jmp
and
dec
sbb
and
cmp
pop
pop
mov
xor
test
dec
mov
inc
and
pop
lahf
dec
ret
pop
loopne
lds
mov
test
pushf
outs
ret
push
push
mov
shr
jp
mov
cs
sbb
push
or
xchg
test
jo
shr
outs
cs
fcmovnb
push
sbb
and
rcr
popf
mov
mov
inc
mov
mul
jne
icebp
js
dec
inc
fsub
int
js
out
xor
cmc
test
adc
mov
sahf
xlat
dec
dec
je
in
lea
dec
or
inc
xchg
stos
dec
stos
pop
mov
(bad)
jg
sbb
mov
push
mov
aas
xchg
inc
div
mov
call
pop
mov
je
pusha
and
movs
or
xor
push
mov
arpl
pop
xor
rol
fwait
icebp
(bad)
mov
in
sbb
mov
adc
xor
clc
jge
or
scas
rcr
adc
das
and
xor
mov
(bad)
movs
xchg
cmp
sbb
sub
pop
push
call
les
pusha
cwde
in
pop
pop
sbb
sbb
scas
jecxz
fdiv
std
aam
nop
and
(bad)
jg
in
push
mov
adc
push
dec
xchg
rcl
sub
push
mov
hlt
pushf
aam
bound
mov
movs
cmp
imul
dec
enter
leave
push
ret
dec
or
mov
ss
mov
in
jge
(bad)
jp
adc
jecxz
frstor
mov
fdivr
pop
xor
mov
jno
scas
into
mov
mov
fisttp
xchg
pop
cmp
inc
dec
adc
jle
pusha
and
out
stos
adc
test
neg
cmps
mov
mov
xlat
pop
mov
dec
mov
mov
pop
xchg
xchg
push
rep
imul
ror
leave
push
in
mov
adc
cld
xor
pop
cmp
dec
in
gs
push
lods
pusha
popf
(bad)
shl
and
lea
inc
mov
pop
cwde
cmps
retf
ret
mov
and
xchg
mov
gs
xor
mov
push
cmp
jl
cmps
cmps
cdq
cmp
fs
arpl
les
cli
sti
xchg
retf
sbb
repnz
mov
add
aam
and
xor
push
(bad)
jmp
xor
stc
push
pop
pop
jbe
shl
sbb
xchg
sub
push
setne
dec
stos
inc
in
(bad)
push
cmp
add
adc
push
stos
xchg
jmp
mov
sti
(bad)
das
inc
cmp
popf
inc
and
imul
mov
xchg
jle
test
in
sub
(bad)
dec
cmp
inc
push
or
into
inc
xchg
inc
adc
mov
dec
dec
call
push
int
mov
ds
sbb
jae
aam
lea
out
jp
mov
outs
cs
fsubr
or
add
mov
out
jg
clc
std
mov
cmp
fistp
pop
dec
jl
jp
fwait
(bad)
lds
ror
outs
mov
cmps
nop
cli
sbb
ret
pop
gs
cmp
sar
push
mov
push
add
inc
nop
cmp
push
out
ds
std
cmc
pop
neg
fwait
adc
cli
or
imul
push
test
cmc
cs
jp
dec
loope
aas
pop
scas
loopne
xchg
sbb
stc
mov
and
sub
loopne
iret
(bad)
xchg
cmp
fs
push
inc
pop
rcl
adc
or
fdiv
pushf
comiss
lock
arpl
push
adc
or
cwde
adc
sbb
data16
or
mov
and
jecxz
sbb
aad
pop
mov
or
lea
jp
add
mov
xchg
cmp
inc
add
pop
xchg
push
xchg
xor
push
push
push
int
aam
push
fdiv
add
mov
mov
je
pusha
mov
retf
sub
add
cmps
(bad)
mov
movs
inc
xchg
in
add
push
push
cli
pop
sub
hlt
sub
pushf
(bad)
rcl
push
(bad)
aam
aad
adc
popa
arpl
adc
mov
(bad)
cmp
fild
icebp
xchg
sub
and
mov
fst
jno
sahf
pop
psrad
std
mov
add
(bad)
sub
mov
icebp
loop
mov
push
jae
mov
jmp
add
pop
data16
xchg
mov
cmp
jg
popa
and
pop
scas
mov
mov
test
mov
sbb
add
sub
inc
in
rol
sbb
repz
xchg
or
stos
pop
sub
xor
add
hlt
pop
jmp
jno
xor
dec
mov
dec
mov
scas
ins
jge
jl
pop
outs
jae
mov
pextrw
dec
add
cli
add
clc
jg
dec
gs
out
mov
xor
das
mov
pop
and
dec
int3
loopne
enter
mov
inc
ja
push
mov
mov
cld
(bad)
xchg
cmp
mov
pop
push
(bad)
mov
mov
mov
sbb
and
iret
add
arpl
mov
sbb
pop
pop
mov
sub
shr
pop
faddp
add
push
jmp
push
dec
xor
cmps
popf
xor
jnp
mov
xor
add
bound
repnz
movs
cmp
cmp
cmps
call
sub
mov
pop
push
outs
push
hlt
xor
rcl
mov
aam
mov
out
pop
jae
in
repz
repz
sbb
push
iret
push
ds
cmp
hlt
lahf
dec
add
psllq
lahf
xchg
in
or
es
movs
adc
sbb
jge
dec
addr16
data16
jns
add
popf
push
loop
jo
jne
jae
aaa
cmp
cmp
je
mov
pop
push
test
mov
lds
je
ins
pop
sbb
sbb
pop
jns
and
sbb
sbb
cmp
dec
adc
out
shr
sbb
clc
mov
and
and
lahf
and
add
fsubr
and
xchg
(bad)
cmp
sub
add
in
scas
inc
mov
and
test
dec
test
push
jne
mov
mov
fstp
xor
sbb
ins
and
mov
fild
and
or
cld
mov
out
jb
and
xchg
movs
jmp
push
movs
lods
inc
icebp
mov
jb
iret
and
iret
mov
gs
pushf
push
(bad)
xchg
nop
pop
pop
and
adc
sub
(bad)
pop
xlat
cld
fldenv
mov
xor
push
rol
pop
(bad)
sahf
cwde
dec
daa
jbe
add
mov
aad
xor
inc
inc
scas
sbb
movs
xor
icebp
cmps
jno
out
mov
add
inc
add
xchg
daa
repz
pop
mov
or
addr16
into
mov
and
pop
xor
push
add
mov
js
and
cmp
push
push
sub
outs
ucomiss
icebp
int3
jmp
sub
daa
ins
pop
retf
sbb
dec
mov
mov
mov
call
mov
shl
pusha
pop
stos
shl
punpckhwd
(bad)
cmps
push
fdiv
in
mov
mov
mov
mov
sub
jae
loope
adc
leave
push
cmp
inc
sub
sub
cmp
loop
lea
sahf
(bad)
ss
dec
push
aam
jl
or
cmp
out
in
inc
ja
cmps
dec
ret
or
sub
sub
pushf
lahf
lahf
dec
sbb
in
inc
lds
hlt
rcl
fild
inc
push
push
sbb
cmp
daa
sbb
push
imul
idiv
fnstenv
loopne
mov
test
inc
mov
retf
cmp
ins
or
leave
or
push
pusha
or
mov
sbb
imul
addr16
jne
dec
mov
in
hlt
repz
loope
pop
xor
xchg
fstp
aad
clc
mov
adc
call
dec
imul
ja
call
push
call
mov
movs
jns
stos
dec
mov
nop
bound
and
fwait
sub
dec
inc
dec
rol
cmc
test
arpl
dec
hlt
and
push
xor
pop
xchg
add
adc
leave
jmp
pop
ss
or
inc
push
(bad)
push
out
ds
or
call
push
mov
mov
loope
(bad)
shl
mov
cwde
dec
add
(bad)
jae
movs
pop
stos
jmp
int
test
loope
sub
test
mov
inc
or
shr
sahf
dec
and
xor
push
test
pop
jle
mov
shl
mov
mov
sbb
jo
out
icebp
sub
cs
shl
pop
xor
lds
je
and
cwde
ficomp
adc
push
cmps
xor
push
sub
cmp
test
movs
scas
mov
pop
adc
ja
outs
add
pop
xchg
mov
jnp
dec
pop
push
in
and
nop
(bad)
ss
jb
inc
sub
inc
daa
(bad)
aam
lods
stc
je
fisubr
sub
adc
or
call
sbb
mov
mov
dec
test
out
push
sub
fwait
ret
fwait
aaa
jl
mov
mov
mov
shl
mov
push
(bad)
push
mov
int
daa
in
jo
(bad)
nop
aaa
sub
sub
mov
push
add
mov
mov
imul
in
dec
(bad)
dec
jo
mov
pop
ss
or
push
mov
rcl
xchg
sti
jle
mov
inc
xchg
mov
mov
loop
pop
aam
push
dec
test
lods
sti
add
inc
xor
test
ret
add
sub
js
hlt
loopne
ret
xchg
imul
fnstsw
jne
arpl
adc
into
mov
sbb
shl
push
push
dec
ss
repnz
stc
or
pop
scas
xlat
ficomp
sub
ja
stos
push
cdq
loope
call
jecxz
push
inc
cmps
outs
loope
js
mov
and
sbb
inc
outs
in
pop
aad
add
jecxz
cwde
ins
inc
jae
mov
stc
(bad)
(bad)
add
mov
push
cmp
xchg
and
inc
dec
or
fist
retf
sub
mov
fwait
test
push
cmp
push
int
adc
les
xchg
cmp
cmps
jno
mov
lods
(bad)
cli
xchg
cmp
iret
mul
fs
mov
xchg
fmul
cmp
adc
cmp
dec
repz
and
movs
sbb
pop
push
add
sub
mov
pushf
push
pop
sbb
sbb
lods
xor
pushf
(bad)
pop
div
mov
sub
scas
movs
inc
sbb
lahf
test
jge
fidivr
(bad)
addr16
ins
xor
ins
icebp
jmp
pop
loopne
nop
mov
inc
pop
loope
sbb
loop
test
mov
or
mov
movs
sbb
mov
inc
push
leave
aaa
test
jbe
aad
mov
cli
addr16
mov
scas
mov
fincstp
repnz
fmul
add
add
xor
push
in
sub
(bad)
push
dec
mov
jp
push
mov
repz
xchg
(bad)
imul
jmp
ffreep
fnsetpm(287
push
lea
stos
repz
test
xchg
or
inc
pop
aad
jmp
nop
mov
pop
dec
and
push
pusha
adc
aas
icebp
jge
imul
add
ins
test
or
mov
push
fild
aam
iret
aas
out
aas
fidivr
fchs
pop
dec
mov
adc
cmp
ror
stos
push
xor
mov
add
cmp
retf
sbb
sub
adc
test
mov
outs
jge
aaa
(bad)
mov
fwait
pop
push
in
lea
xor
jecxz
sahf
dec
aas
inc
(bad)
mov
mov
jns
add
stc
nop
push
mov
imul
mov
sub
loopne
sub
xor
out
popf
call
xchg
sub
fimul
cmp
and
mov
pop
inc
inc
xor
mov
cli
inc
es
mov
xor
into
pand
cmovnp
sub
movs
sub
(bad)
mul
fstp
mov
sub
sub
pop
(bad)
fnstcw
nop
mov
dec
sti
dec
dec
cmp
movs
adc
dec
mov
sub
xor
dec
test
in
mov
(bad)
xchg
cld
movs
ins
push
cdq
and
sbb
stos
ds
jle
push
retf
test
call
sbb
sub
rcr
cmp
iret
outs
add
loop
sub
stos
dec
pop
mov
and
dec
push
sub
xchg
hlt
out
mov
add
mov
jl
xor
and
aas
cs
das
cdq
outs
hlt
aaa
and
aas
aas
pop
repz
mul
xor
ins
ss
jmp
cmp
pop
out
cmc
jl
xchg
fwait
outs
mov
mov
sbb
push
pusha
ins
jns
add
ins
ss
stc
hlt
mov
cmp
cs
pop
imul
xchg
fmul
mov
ja
mov
fadd
cmps
into
pop
(bad)
cmp
push
jp
mov
jmp
ds
cmp
lods
fsubr
movs
sbb
push
mov
push
and
push
push
and
ror
xchg
mov
int3
mov
sub
retf
inc
sub
sub
rcl
adc
movs
cmp
xchg
push
out
ins
sbb
jmp
adc
push
jnp
adc
test
les
sar
std
or
ret
loope
dec
stc
jg
shr
std
into
fldln2
(bad)
mov
mov
add
jle
cmc
jmp
scas
and
dec
imul
push
cld
xchg
cmc
es
fsubr
neg
mov
imul
in
in
or
mul
add
mul
cmps
ja
inc
pop
dec
bound
jne
mov
in
jle
test
out
adc
popa
or
lods
cmp
stos
loopne
bound
pop
dec
adc
(bad)
jmp
enter
or
or
(bad)
leave
mov
ret
and
aaa
jecxz
scas
outs
loop
test
cmp
or
(bad)
retf
in
push
fs
jge
(bad)
push
adc
shl
retf
rcl
dec
and
shl
mov
fcmovu
imul
lods
jecxz
mov
xchg
aad
mov
pop
mov
jmp
sar
jbe
inc
or
mov
loopne
cmps
inc
pop
ins
icebp
inc
shr
sub
call
mov
popf
aam
pop
pop
sbb
cwde
mov
gs
pop
aas
sahf
dec
push
dec
scas
out
enter
and
mov
nop
fsubr
inc
and
sub
push
in
cwde
cmp
jno
add
sbb
dec
les
mov
inc
jae
sub
loope
cwde
inc
push
dec
or
lahf
sbb
mov
and
stos
(bad)
xchg
cmp
lods
std
stos
std
outs
in
mov
(bad)
jp
xor
sbb
bound
mov
ja
cmp
push
sub
or
dec
mov
arpl
and
xor
bound
stos
adc
xchg
dec
mov
mov
test
xor
cmps
lods
imul
push
mov
sbb
sub
rcl
push
div
addr16
xor
pop
call
movs
cmps
push
pusha
test
xchg
inc
fadd
pusha
add
sbb
in
mov
mov
and
jge
push
stc
call
push
retf
sub
inc
push
pop
adc
xor
xchg
sar
adc
daa
fmul
imul
retf
loop
dec
clc
retf
(bad)
ds
mov
aas
mov
(bad)
fcmovnb
inc
cmp
or
lahf
xchg
dec
enter
lea
ins
add
sbb
cli
je
lods
(bad)
dec
xchg
dec
or
add
xchg
jecxz
aam
push
cmps
lahf
inc
cmp
pop
inc
imul
add
add
inc
(bad)
icebp
mul
add
in
shr
xor
std
popf
and
adc
scas
clc
aas
dec
cmc
clc
cld
jnp
lea
adc
lds
cli
js
mov
mov
or
and
out
rcr
mov
icebp
outs
jg
out
scas
mov
in
mov
sub
xchg
retf
cmp
sbb
pop
jmp
outs
imul
or
pop
and
xchg
popf
cmp
dec
pop
aas
cmc
jle
sahf
jo
inc
mov
bound
enter
sar
ficomp
in
out
fmulp
adc
pop
inc
rcl
xchg
cmp
(bad)
jmp
mov
test
jge
loop
shl
jecxz
rol
xchg
adc
jb
int
sbb
and
jmp
jg
(bad)
mov
les
test
(bad)
pop
add
and
fs
mov
add
add
sub
jl
xor
daa
sub
inc
ins
sub
dec
enter
lds
xchg
cmp
and
jns
xchg
fsubr
xlat
pop
mov
adc
add
call
push
in
sub
imul
cld
data16
lock
inc
(bad)
jns
aad
mov
push
pusha
xchg
pop
dec
rcl
mov
mov
adc
push
test
call
dec
stc
cmc
xchg
sub
adc
cli
cdq
xchg
aad
add
(bad)
mov
adc
jo
xor
jle
rcl
xchg
fldenv
popa
and
inc
adc
cmp
(bad)
inc
mov
cld
jbe
mov
inc
and
shr
pop
jmp
mov
cmp
pop
retf
cmps
mov
pop
ins
adc
mov
push
inc
(bad)
nop
les
pop
pop
cwde
pop
aam
pop
jecxz
outs
cmp
sub
sahf
inc
aad
adc
pop
push
rcr
adc
sbb
inc
(bad)
aaa
add
leave
movs
lods
mov
jp
jmp
imul
retf
ins
mov
or
lods
or
(bad)
pop
xor
retf
loopne
test
push
test
jno
lea
push
pop
xor
inc
icebp
add
lock
mov
mov
outs
xor
imul
inc
addr16
cmps
out
sub
stos
idiv
mov
jg
and
mov
ror
mov
xor
add
push
jmp
(bad)
hlt
mov
xlat
rcr
les
inc
pop
jo
inc
out
and
(bad)
pop
retf
cld
sbb
jo
rol
aaa
fst
push
push
nop
cwde
loopne
dec
push
sub
movs
xchg
cmp
push
cmp
xchg
rol
aas
repz
mov
(bad)
(bad)
(bad)
pop
mov
xchg
mov
adc
sar
pop
mov
jae
jmp
xor
sbb
div
and
lock
int
xor
lods
add
push
enter
gs
sahf
lahf
or
xor
aas
iret
test
(bad)
sbb
mov
mov
scas
sbb
fist
es
sub
and
add
aam
dec
pop
out
inc
sub
pop
cmps
movs
sar
test
add
ret
int
test
mov
(bad)
das
or
scas
add
jg
out
push
cwde
scas
mov
imul
ret
xor
inc
cmps
cmps
cwde
add
add
test
push
push
loope
jo
mov
jb
iret
pop
fwait
jno
or
addr16
xchg
xchg
pop
(bad)
iret
cdq
iret
cmps
popf
xor
jnp
adc
(bad)
inc
xchg
jnp
jle
(bad)
pop
fcomp
push
mov
ins
ffree
stc
cli
aam
repz
cmp
lahf
or
std
dec
int
mov
cmc
sbb
data16
jp
fnstenv
cmc
(bad)
pushf
les
push
(bad)
aam
xchg
cs
ss
pop
mov
fcmovnu
pop
out
add
or
sbb
(bad)
push
jnp
adc
rol
test
push
lods
loop
out
xchg
outs
idiv
(bad)
in
shl
xchg
mov
les
inc
pop
jg
daa
mov
cmc
push
or
fst
inc
or
dec
dec
retf
push
dec
lea
pop
xor
lods
into
and
and
add
inc
stos
ins
hlt
mov
test
fwait
call
out
sub
pop
lock
jmp
out
dec
cmp
lock
xchg
pop
je
adc
push
adc
adc
dec
push
sub
test
dec
scas
cmp
popa
in
(bad)
cmp
popa
dec
xor
cmc
lds
xchg
mov
add
cli
test
xchg
(bad)
popa
mov
pop
push
push
sbb
sbb
movs
jg
inc
xchg
fmul
pop
jmp
(bad)
ja
(bad)
data16
hlt
adc
push
mov
cwde
mov
ja
jmp
add
popf
int3
sbb
dec
inc
test
pop
pop
pop
sub
arpl
jne
pusha
nop
outs
inc
mov
adc
ds
mov
mov
and
daa
dec
push
gs
and
cmp
cmc
aad
push
push
xor
or
stos
test
jmp
dec
add
push
sub
call
lock
add
aam
add
iret
inc
scas
mov
je
push
push
cmp
sub
jg
repnz
nop
dec
pop
fadd
ficomp
stos
add
les
test
imul
idiv
shl
inc
cmps
inc
push
sub
mov
enter
shl
jo
mov
jg
dec
mov
xor
aaa
in
lods
pop
jmp
lods
icebp
enter
dec
int3
push
and
or
jo
push
push
ret
xchg
and
and
sub
cwde
cmp
dec
neg
fsubr
test
pop
or
movntq
jge
mov
cmp
retf
pop
pop
pop
sbb
ret
ret
mov
inc
and
out
retf
and
inc
mov
adc
(bad)
sub
cmps
sahf
es
mov
or
jnp
aas
test
cmp
pop
mov
cmp
stc
jo
xchg
jmp
xchg
mov
in
dec
inc
test
jae
xlat
loop
or
cmp
cmp
dec
sub
mov
xlat
aas
dec
push
jb
fnsave
and
out
cmp
mov
mov
outs
sub
dec
es
bnd
pop
mov
aad
in
or
stos
je
aas
pop
aas
out
ds
cs
xor
daa
test
xchg
neg
and
pushf
ror
in
aas
iret
cmps
imul
es
push
or
lahf
push
mov
cmovb
xchg
add
push
xchg
jl
push
test
(bad)
jecxz
xor
inc
lahf
sar
push
dec
sbb
dec
jae
cmp
jbe
mov
xchg
push
push
(bad)
scas
cmc
jns
sub
mov
sbb
sahf
jecxz
pop
fwait
xor
or
cwde
fcomp
in
jnp
push
(bad)
mov
outs
outs
loop
bound
jle
adc
rcl
sbb
inc
(bad)
ror
scas
sti
leave
pop
jnp
out
mov
or
dec
push
iret
and
bts
push
sub
inc
test
test
lods
xchg
int3
xor
cdq
dec
in
inc
push
dec
(bad)
(bad)
sbb
aaa
xor
outs
pop
push
or
clc
pop
imul
(bad)
inc
jge
addr16
movs
fnstsw
outs
jecxz
(bad)
cld
cmp
movs
sub
jle
or
in
mov
ret
test
xlat
les
js
pop
in
or
xchg
inc
sub
xchg
outs
es
pusha
mov
call
xor
lods
pop
dec
test
and
mov
lea
mov
and
mov
sbb
stc
(bad)
xchg
in
das
aaa
cmp
cli
fst
imul
or
ror
sub
add
inc
mov
add
or
mov
push
repz
adc
fs
and
sub
add
add
or
add
rcr
inc
inc
and
adc
dec
pop
and
jns
adc
aas
jae
cmp
call
push
inc
sbb
call
test
jle
lahf
lahf
call
adc
mov
cmp
aam
ret
xor
pop
adc
ss
les
mov
loop
loope
push
fcmovu
cmp
or
mov
dec
fs
sub
(bad)
sbb
aas
es
or
scas
imul
and
test
repnz
and
or
push
dec
add
jne
sub
jno
sub
xchg
jae
imul
add
mov
in
sbb
dec
stos
push
pop
fadd
xchg
fidivr
iret
scas
dec
into
pop
iret
movs
pop
ss
jno
dec
sbb
xchg
test
mov
mov
push
cli
(bad)
leave
in
(bad)
mov
scas
push
and
ror
test
shl
or
movs
xlat
std
in
scas
rdmsr
sub
push
out
popf
jmp
sbb
ins
or
adc
push
outs
cmps
shl
cmc
ds
jg
mov
fild
std
movs
inc
xor
pop
ins
out
fsubr
dec
shl
popa
or
dec
xor
mov
stos
and
and
adc
pop
dec
lock
inc
mov
mov
ds
sbb
ss
mov
dec
pop
imul
xor
shl
push
cmp
lods
mov
fistp
outs
aas
ret
fnstenv
leave
(bad)
ds
xchg
ds
lods
xor
mov
add
das
icebp
sbb
outs
jp
(bad)
or
sbb
push
lods
xor
ficom
lods
sbb
dec
cdq
rol
mov
mov
mov
inc
repnz
test
mov
mov
test
dec
outs
ins
mov
cwde
stos
add
jnp
inc
pop
icebp
push
xchg
and
add
dec
popa
not
jbe
mov
mov
inc
pushf
lods
cmp
(bad)
sbb
(bad)
pop
rcl
and
(bad)
arpl
sbb
sub
cmp
es
cmp
lds
xchg
stos
jne
inc
jl
mov
in
mov
dec
clc
adc
jp
and
adc
in
lahf
dec
xchg
pop
pop
scas
movs
aas
loop
(bad)
ja
mov
arpl
fsubr
and
in
scas
imul
cmps
jmp
iret
pop
icebp
popa
jnp
das
cdq
pop
mov
cmp
imul
mov
stos
pop
sbb
scas
sub
test
jns
add
in
adc
or
out
pop
cmp
les
mov
lahf
xchg
push
xchg
jb
rcl
in
imul
sbb
(bad)
push
mov
dec
lea
mov
dec
mov
movs
enter
lock
jno
jmp
pop
or
je
sub
mov
pop
xchg
pop
movs
jae
(bad)
cwde
xchg
test
pand
call
test
lds
cmp
push
xchg
shl
push
sub
cmc
push
mov
mov
mov
dec
jo
not
cmp
stos
mov
inc
setb
sbb
outs
pop
pop
nop
sahf
es
aas
popa
rol
out
jle
sar
mov
iret
xor
or
adc
test
jb
inc
jle
lea
pop
add
daa
xchg
outs
push
shr
add
xchg
pop
cli
jno
adc
bnd
mov
xor
lods
sub
jl
sbb
ss
xor
aam
and
enter
aam
xchg
push
cmp
js
sub
or
xchg
or
push
or
stc
not
mov
rol
jmp
xchg
jno
jle
xchg
stos
or
cmp
lea
mov
or
lods
lods
sbb
xchg
push
mov
mov
add
dec
and
sbb
pop
lea
imul
fisttp
add
in
add
dec
pop
fiadd
cs
loop
push
mov
adc
inc
pop
and
xlat
sbb
inc
lahf
aas
test
dec
dec
xchg
test
and
sub
xor
add
push
(bad)
jne
inc
mov
jg
mov
jmp
ins
ds
xor
add
test
das
jno
mov
jmp
js
sub
daa
mov
imul
mov
shl
gs
xor
jae
jns
ins
sbb
in
pop
mov
mov
inc
jo
mov
(bad)
mov
add
dec
sub
sti
shl
popa
inc
dec
pop
push
cdq
mov
xchg
add
repnz
pop
xchg
push
or
jo
repz
mov
jns
movs
gs
sar
jle
sub
push
repnz
push
imul
imul
inc
adc
or
xlat
ja
loop
imul
jo
add
pop
mov
pop
jno
mov
sahf
sbb
fsubr
add
aam
call
arpl
js
stc
jg
cmps
pop
jp
and
adc
test
(bad)
pop
ss
xlat
fidivr
and
cld
cli
adc
pop
lods
add
jne
aam
cmps
ret
dec
or
call
and
add
rcr
mov
mov
and
sahf
ja
dec
aam
mov
mov
ja
push
xchg
pop
movs
mov
or
sub
movs
or
stc
or
cmps
fisttp
cdq
data16
fwait
push
cmp
xchg
or
cmp
push
lea
(bad)
add
test
sar
sahf
mov
inc
inc
mov
add
les
xor
add
dec
(bad)
adc
pop
lahf
cs
pop
setl
imul
add
loop
mov
xchg
sub
xchg
or
inc
mov
int3
mov
jmp
push
ret
mov
sub
mov
loopne
push
mov
jecxz
cmp
adc
pop
lock
dec
iret
in
repz
jno
pop
and
inc
push
adc
call
mov
mov
inc
mov
sub
inc
bound
add
mul
xor
sbb
mov
je
push
xchg
sbb
and
mov
and
adc
test
sub
or
dec
xor
(bad)
aas
popa
in
mov
dec
mov
into
fimul
xchg
lods
outs
sub
add
clc
sbb
mov
nop
mov
outs
mov
cmc
imul
push
sar
mov
dec
sub
mov
popf
scas
jp
mov
aaa
arpl
xor
and
or
xchg
(bad)
hlt
ret
fs
mov
cmp
(bad)
push
xor
leave
gs
(bad)
cli
mov
int3
adc
push
aad
psraw
push
ja
cmp
push
sub
inc
stos
mov
push
retf
xor
cs
ret
mov
jno
(bad)
sbb
aad
cmp
retf
sub
fidiv
cmp
mov
xchg
mov
imul
shr
xor
jne
and
xchg
cmp
stc
hlt
leave
xchg
movs
ins
pop
aad
je
rcl
mov
add
sub
mov
add
xchg
xor
hlt
mov
in
jge
ret
jns
fs
jno
add
jmp
loope
and
or
test
pop
retf
(bad)
dec
jge
mov
mov
les
or
and
add
cmp
imul
jle
cmp
aad
adc
test
das
lods
sbb
loop
clc
dec
in
call
push
push
jmp
icebp
dec
mov
int3
or
mov
sar
je
add
arpl
repnz
cmp
pop
or
cmp
rcr
pop
jge
inc
push
xor
mov
mov
mov
ds
lods
mov
outs
mov
enter
pop
jmp
in
or
retf
loope
push
add
fcomp
or
adc
stc
push
dec
gs
xchg
ret
dec
inc
jp
cwde
nop
bound
(bad)
mov
fdiv
ss
cmp
or
sbb
sbb
cmps
(bad)
movs
jecxz
popf
adc
and
stos
popf
inc
mov
jg
dec
push
adc
adc
popa
lods
mov
and
ss
ins
sub
jmp
ror
mov
mov
mov
stos
idiv
mov
imul
icebp
lds
jmp
inc
xchg
inc
jecxz
xchg
xchg
xchg
cdq
inc
rcr
mov
ret
arpl
and
mov
daa
fisubr
in
inc
dec
cmp
lea
cmps
cmp
jp
mov
and
add
loop
les
push
pushf
cli
push
lahf
outs
cld
push
jmp
dec
inc
sub
jp
sahf
or
mov
push
inc
push
jecxz
loopne
out
dec
mov
sub
push
std
ins
ss
mov
popf
inc
stos
dec
nop
push
xlat
clc
pop
nop
xor
hlt
cld
hlt
mov
sub
(bad)
lea
jo
test
shl
sub
xor
sub
cdq
bound
adc
and
es
and
mov
out
fnstenv
popf
pop
mov
jmp
sub
add
adc
repnz
cwde
xor
aad
and
aad
mov
shr
inc
jge
shr
hlt
sti
call
jecxz
mov
jae
pop
xchg
mov
xor
aaa
sub
aas
pop
popa
jmp
mov
inc
and
adc
aam
cmp
mov
mov
popa
jne
sbb
out
mov
test
inc
mov
pop
popa
ds
sbb
xor
xchg
rcl
lods
popa
or
in
mov
mov
dec
sub
ja
or
aas
add
pop
dec
push
arpl
out
pop
push
inc
dec
pop
sub
push
ds
in
hlt
and
into
and
dec
cmps
gs
loop
jle
xlat
ins
pop
mov
and
out
and
imul
rol
adc
iret
push
cmp
test
rcl
cmp
out
out
(bad)
adc
mov
shl
adc
cmps
push
push
inc
xor
lods
(bad)
add
pop
jecxz
jge
repz
and
push
and
loopne
sahf
sbb
iret
test
push
mov
out
jo
clc
aad
pop
test
or
sahf
jge
pop
ss
ja
xchg
cmp
pop
outs
and
push
ins
mov
xchg
dec
pusha
pop
push
(bad)
pop
cli
sti
cmp
cmps
(bad)
push
movs
jo
jne
add
adc
sbb
add
imul
xchg
jbe
inc
cmp
test
dec
cmp
jmp
or
jecxz
push
dec
rcr
mov
aad
push
imul
push
(bad)
mov
xchg
xlat
sub
cwde
loopne
ds
inc
lea
add
cwde
stc
hlt
sbb
add
test
push
fcmovb
rol
adc
adc
(bad)
shl
xor
cld
sti
xor
or
movs
xor
lahf
inc
push
repnz
sub
ret
(bad)
pop
lahf
inc
rep
mov
sub
and
and
repnz
sti
addr16
xchg
jne
mov
ret
and
enter
mov
and
icebp
or
cld
pop
fdiv
bound
pop
mov
and
ins
dec
imul
cmp
ss
mov
adc
movs
imul
pop
sub
repnz
mov
stos
mov
xchg
mov
push
aam
imul
in
cs
jae
adc
jo
cmps
mov
cmps
inc
mov
sub
imul
mov
xchg
push
js
enter
or
jns
pushf
jns
sbb
push
jg
jns
sar
jns
bound
test
nop
lahf
jmp
fdivr
addr16
pop
jmp
push
mov
bound
nop
and
dec
stos
cmps
dec
sub
stos
or
js
(bad)
xor
push
jp
add
jp
in
(bad)
iret
xchg
and
mov
and
fisttp
cmp
fnstcw
(bad)
mov
add
mov
bnd
pop
push
inc
pop
loopne
adc
std
sbb
movs
jle
retf
movs
leave
rcl
pop
cmps
sub
bnd
jmp
jecxz
push
in
div
imul
mov
or
test
cmps
out
dec
sbb
cmc
arpl
mov
push
mov
cmp
inc
imul
(bad)
shl
xor
sbb
inc
pop
push
or
rcl
(bad)
sub
bnd
outs
psrlw
shl
xor
or
pop
ret
mov
jo
pop
mov
push
sub
sbb
das
jb
call
imul
rcl
test
ror
(bad)
iret
movs
cmps
cld
jmp
mov
inc
mov
int
cmp
push
push
jp
mov
mov
jecxz
sub
cmp
aam
pop
aas
stc
mov
add
push
retf
mov
jnp
ins
es
and
adc
cld
jmp
leave
call
retf
jp
imul
hlt
pop
pop
sbb
adc
shl
movs
mov
cmp
aas
mov
mov
fsincos
ror
mov
inc
cmp
dec
push
inc
add
test
jne
data16
mov
mov
aad
push
cmps
inc
scas
push
sub
sbb
iret
retf
add
leave
mov
push
js
es
inc
(bad)
xor
add
push
mov
dec
aad
inc
dec
paddw
push
loopne
aas
fistp
inc
idiv
ror
sbb
mov
or
adc
xor
dec
add
subps
(bad)
mov
das
add
and
cmps
in
cmc
cli
inc
(bad)
mov
(bad)
and
push
mov
jbe
cmp
adc
push
jno
cli
(bad)
mov
and
jmp
jae
(bad)
(bad)
pop
inc
packssdw
lods
push
inc
std
aas
cmp
jae
jae
out
cmp
dec
jae
cld
pop
xchg
dec
jg
sub
pop
shr
std
cs
cmp
mov
lds
sub
mov
cmps
jmp
sub
or
jle
aam
je
add
cmp
adc
adc
sti
pop
nop
inc
dec
aaa
mov
jecxz
push
mov
xor
cmc
xchg
sub
xor
xchg
cld
jp
jg
repnz
jnp
int3
add
cmps
in
jmp
dec
cmp
and
popf
cmp
xchg
adc
xchg
nop
stos
jno
mov
sbb
pop
mov
call
(bad)
rcl
js
or
fisttp
jg
xchg
cwde
cwde
jae
dec
adc
push
ret
(bad)
icebp
test
pop
add
sti
dec
movs
pop
pop
mov
frstor
xlat
xchg
cmps
cdq
adc
scas
xor
mov
shl
lods
mov
shl
cli
jnp
icebp
pop
push
sbb
inc
jbe
inc
push
test
sub
rcl
div
adc
ss
sbb
mov
fistp
sbb
jmp
sub
das
test
outs
sbb
ds
psubusw
sahf
fwait
push
(bad)
xchg
cmp
push
cli
dec
and
jg
not
out
adc
adc
mov
outs
outs
mul
pop
xchg
and
jle
sub
pop
or
mul
rcl
sub
mov
pop
mov
arpl
jg
aam
retf
pop
fstp
out
mov
leave
pop
xchg
push
push
add
mov
hlt
inc
fs
push
shr
add
mov
inc
mov
fcomp
adc
add
lahf
enter
jne
sub
dec
dec
inc
aas
pop
xchg
ins
inc
fwait
add
out
fidivr
pop
aas
mov
or
mov
xchg
sbb
test
(bad)
cmps
imul
out
arpl
mov
loop
add
cld
cmp
stos
shl
pop
dec
sbb
aas
aas
cmc
push
popf
sub
mov
xchg
inc
ins
scas
inc
inc
or
fwait
jbe
xor
cli
hlt
jno
enter
retf
test
jl
scas
test
bnd
mov
(bad)
mov
cmp
mov
outs
lock
(bad)
es
(bad)
aas
dec
sbb
xchg
aam
mov
adc
add
and
cmp
add
arpl
lahf
inc
pop
cmps
ror
cmc
out
inc
ffree
shl
stos
aam
out
mov
or
mov
(bad)
ins
xor
stc
inc
ds
inc
arpl
sbb
jbe
es
lahf
scas
scas
neg
call
aad
test
mov
retf
mov
(bad)
push
cmc
jmp
sub
outs
push
ss
cld
or
jnp
mov
adc
mov
mov
sub
out
pop
retf
xlat
retf
in
cld
cli
test
push
mov
int
das
clc
mul
jg
call
add
dec
imul
shr
cld
jmp
dec
std
ss
movs
adc
jecxz
hlt
jecxz
xchg
sahf
mov
ins
lock
inc
xchg
cmp
dec
lods
test
dec
mov
pop
push
bound
test
mov
dec
test
and
aas
aad
xlat
cmp
sbb
dec
jbe
sbb
sub
fidivr
jbe
pushf
cmp
mov
and
xchg
mov
xchg
inc
rcl
xchg
ds
jbe
and
fwait
xchg
cli
dec
mov
adc
pop
dec
mov
aas
mov
mov
ret
stos
push
clc
jmp
aam
cmp
pop
loope
sbb
test
xchg
pop
adc
sbb
sub
push
jne
mov
addr16
mov
pop
push
inc
mov
dec
sti
jo
shr
add
add
into
push
inc
xchg
xchg
(bad)
sbb
call
or
adc
inc
pop
inc
call
lods
jp
jecxz
xor
sbb
scas
sub
add
stos
stos
test
mov
pop
les
jmp
mov
mov
mov
ins
sub
test
add
or
mov
xor
add
add
jns
lock
test
sbb
stos
jb
push
ret
inc
dec
lea
pop
stos
outs
data16
inc
cmp
push
add
jno
ret
ja
gs
dec
push
jb
(bad)
out
add
div
or
es
dec
clc
scas
nop
add
xor
cdq
inc
daa
inc
out
or
adc
bound
xchg
movs
push
mov
inc
retf
dec
call
and
out
aad
out
or
push
or
in
xlat
sbb
sbb
cmp
in
repz
dec
(bad)
lds
imul
xchg
mov
pop
repnz
xor
cld
jnp
pop
and
push
xchg
add
jo
cdq
and
imul
imul
inc
push
mov
xchg
icebp
sbb
mov
push
mov
inc
lods
cwde
adc
push
out
cmp
hlt
xchg
cmc
add
dec
inc
adc
dec
cmp
imul
jl
pop
sahf
ds
sbb
test
rcl
cmp
add
push
jg
and
nop
in
mov
xor
sbb
repnz
xchg
inc
pop
or
call
icebp
bound
or
das
pop
sbb
and
sbb
mov
jae
imul
dec
test
push
repz
inc
jmp
jnp
mov
and
jle
cmp
sbb
inc
test
mov
sbb
add
sbb
mov
and
push
mov
in
xchg
mov
int3
cmp
daa
lahf
lds
sbb
pop
mov
mov
sahf
cdq
movs
mov
mov
aas
xchg
ins
(bad)
jmp
lods
mov
iret
aam
sar
js
add
psrad
inc
pop
inc
lahf
imul
enter
xchg
seta
mov
push
(bad)
fst
repnz
shl
dec
sbb
ins
inc
push
sbb
addr16
icebp
in
mov
fist
pop
mov
retf
push
ds
mov
in
push
(bad)
js
sbb
ins
and
inc
push
or
mov
call
js
into
cmp
inc
dec
call
pop
cmc
sub
not
mov
mov
imul
fcompp
ret
pmaxsw
push
loope
aam
stc
lock
call
aaa
mov
sbb
int
in
jg
mov
dec
bound
cmps
std
pop
jp
aad
fdiv
sti
pop
xchg
enter
imul
mov
jmp
or
stc
stc
lahf
mov
in
ins
cmp
fsubr
push
in
mov
mov
(bad)
and
mov
or
lock
push
adc
pop
paddsw
mov
dec
cmc
pop
sub
sub
xor
ss
dec
mov
scas
xchg
imul
mov
xor
repnz
pop
push
and
hlt
sbb
aad
lahf
gs
repnz
and
dec
jle
jno
jmp
mov
mov
mov
cmp
call
dec
add
xchg
cmp
ja
push
jecxz
cwde
sub
xchg
imul
mov
cli
jnp
gs
std
cwde
ins
es
xor
adc
xlat
adc
mov
out
fistp
repnz
cmp
or
xchg
dec
cmp
add
xor
jp
jne
cmp
jg
mov
inc
pop
push
dec
xchg
xchg
pop
xor
mov
fst
leave
ss
inc
outs
push
xchg
mov
retf
sub
push
movs
(bad)
data16
jo
les
jecxz
ins
xchg
cmps
(bad)
aad
dec
jecxz
push
jne
test
mov
aad
data16
sbb
(bad)
push
lods
pop
outs
pusha
repnz
sub
aas
xor
inc
test
and
pop
aaa
pop
out
lods
inc
test
ss
push
xor
mov
sti
sbb
cmp
dec
test
das
aam
bound
mov
jg
add
push
pop
lahf
push
mov
iret
(bad)
shr
sub
add
cmp
(bad)
sbb
test
cld
mov
imul
cwde
je
xor
cmp
ret
sbb
inc
push
das
mov
dec
xchg
(bad)
idiv
xchg
in
addr16
mov
stc
je
sbb
fadd
add
int
call
mov
aas
in
int
dec
mov
sbb
cdq
and
inc
ins
add
int
xchg
enter
mov
pop
mov
test
cmp
in
inc
mov
xor
or
shl
shr
add
adc
add
rol
add
leave
jmp
sbb
std
imul
mov
ror
scas
pop
aas
fcmovnb
mov
sbb
stos
push
or
ror
test
retf
add
test
or
inc
mov
sub
shl
(bad)
dec
ins
lahf
jmp
cmp
je
in
ds
inc
loop
add
lods
in
push
ins
fistp
mov
inc
repnz
aas
dec
sub
mov
cmc
mov
sahf
into
mov
popf
cmc
mov
add
inc
fs
mov
inc
lods
(bad)
outs
sub
mov
push
call
mov
fcomp
lock
xor
std
mov
outs
ja
std
adc
jg
jns
iret
retf
test
in
retf
fsubrp
cmps
xor
push
ret
dec
xchg
mov
call
mov
std
(bad)
mov
sub
sub
ror
jmp
sbb
mov
jns
repnz
pop
outs
add
call
retf
jnp
fcomp
(bad)
in
movs
xor
iret
and
mov
dec
mov
inc
add
inc
add
jp
addr16
ins
imul
rol
je
jne
push
cmps
js
mov
rol
xor
and
jp
push
push
sub
test
push
xchg
adc
sbb
jmp
bsf
jmp
inc
jnp
push
or
test
or
xor
mov
push
and
and
fdiv
cwde
xchg
(bad)
dec
test
and
pop
push
ds
sub
test
inc
fbstp
popa
addr16
mov
fmul
dec
xor
test
push
xchg
or
or
hlt
mov
mov
inc
mov
and
cmp
stos
and
add
add
out
push
in
add
pushf
mov
imul
sub
stc
push
addr16
dec
int
cmp
ins
or
inc
pop
imul
loope
(bad)
mov
loope
sbb
leave
adc
mov
call
imul
stos
mov
outs
mov
dec
and
pop
out
arpl
aas
jle
retf
cdq
ins
dec
sub
cmps
mov
mov
or
xchg
call
stc
sbb
out
addr16
add
push
sbb
scas
int
mul
ins
nop
pop
pop
(bad)
ds
dec
arpl
js
mov
outs
cmp
fstp
xchg
sbb
mov
ds
cmp
push
cli
cwde
xchg
jb
ss
jmp
aam
pop
test
dec
mov
mov
push
push
(bad)
popf
pop
in
cld
mov
pop
xchg
or
shr
jg
in
movs
out
add
cmc
mov
xor
xchg
pop
push
hlt
(bad)
retf
sub
sub
hlt
mov
shr
outs
mov
in
inc
inc
sub
out
mov
mov
int
lea
add
mov
(bad)
mov
pop
add
mov
push
fnsave
popf
dec
test
xchg
dec
lock
lahf
das
iret
movs
jle
adc
pusha
inc
mov
pop
daa
jmp
jb
pop
adc
and
jae
xchg
push
pop
sub
cld
std
imul
jmp
jae
mov
sbb
jge
sub
push
mov
add
inc
(bad)
mov
fmul
call
or
(bad)
aam
inc
jecxz
mov
out
xor
add
and
pop
xor
jmp
jnp
jne
and
std
sbb
inc
cmp
jnp
pop
int3
mov
inc
movmskps
repz
sti
fisub
dec
pop
and
jecxz
clc
call
ss
scas
pushf
enter
adc
push
sub
mov
sbb
cmps
xlat
fsubr
cdq
scas
mov
adc
sbb
sub
mov
fdivr
xor
loop
ja
(bad)
mov
fs
movs
dec
bound
xor
add
hlt
inc
xlat
push
mov
xor
outs
shr
addr16
sti
aaa
mov
mov
mov
mov
push
in
adc
rcl
inc
or
push
and
fs
adc
imul
outs
jno
popf
(bad)
cmp
dec
jmp
sbb
retf
rcr
adc
inc
add
cmp
enter
cmp
cmp
mov
sub
push
enter
sbb
xor
mov
popa
out
and
fisttp
dec
mov
not
pop
fstsw
and
xchg
cmps
movs
rcl
cdq
and
hlt
shr
cmp
sub
jnp
pop
inc
jmp
dec
test
jp
mov
push
mov
push
push
mov
lods
sbb
sbb
sub
ins
inc
jmp
pop
lock
jo
shl
aas
out
add
pop
xor
movs
xor
or
mov
pop
mov
lds
rcl
lahf
in
mov
call
jmp
mul
mov
lahf
or
les
(bad)
adc
inc
bound
std
outs
outs
jge
fadd
out
push
lahf
mov
mov
fld
js
inc
(bad)
jnp
daa
pop
sti
sub
mov
icebp
pop
dec
sbb
cwde
or
dec
fwait
pop
fcomp
inc
xlat
(bad)
in
iret
push
mov
xchg
jmp
dec
jns
jg
iret
test
aam
pop
cmps
fdivr
jg
fwait
(bad)
jge
imul
stos
dec
adc
push
sub
sbb
and
das
iret
xlat
std
jae
sbb
sub
mov
push
push
in
inc
xchg
sbb
dec
add
js
xchg
jecxz
hlt
sub
div
dec
cmp
jp
test
ss
sub
sbb
mov
shr
loopne
cs
retf
cmp
mov
sbb
sub
cmp
xchg
loope
xor
cmp
xor
cwde
lock
adc
fcmovu
fist
lods
pop
loopne
imul
push
mov
jmp
fcmovnbe
in
mov
xchg
aad
jmp
xchg
push
adc
fdivrp
rcr
jns
stc
iret
jno
jnp
mov
out
adc
inc
cmp
adc
call
mov
in
xchg
pop
mov
mov
pop
loop
call
mov
push
add
cmp
xchg
in
aad
add
dec
adc
cld
lahf
jae
les
test
outs
in
lea
xchg
(bad)
cmp
out
sahf
popf
arpl
ins
sar
pop
mov
jecxz
ss
(bad)
outs
inc
cmp
mov
(bad)
mov
push
push
inc
in
leave
movs
pop
loopne
loop
outs
leave
jecxz
clc
inc
jge
gs
sub
ins
mov
in
and
test
inc
push
jp
bound
xor
or
sub
sub
dec
and
or
pop
ss
pop
(bad)
test
push
mov
test
ds
nop
sbb
sar
lahf
fld
mov
inc
or
push
cmp
enter
mov
xor
push
pusha
inc
loopne
jo
jmp
adc
sub
add
add
in
and
(bad)
outs
push
shl
sub
pop
icebp
daa
in
mov
cs
and
or
sbb
cmp
xor
sub
(bad)
mov
mov
aam
xchg
jo
(bad)
pop
inc
pop
out
sbb
xchg
push
jo
add
pslld
pusha
jbe
shr
loop
std
ret
push
inc
mov
sbb
push
mov
test
dec
jae
mov
inc
mov
xor
inc
(bad)
mov
inc
test
sub
ret
out
cmp
push
inc
aas
retf
repz
xchg
call
sbb
(bad)
enter
pop
dec
xchg
mov
in
popa
jnp
mov
cdq
jne
cmps
mov
call
dec
jo
iret
mov
add
jbe
ror
loop
xor
pop
or
push
imul
loope
xor
arpl
rcl
xchg
xor
pop
(bad)
es
test
movs
sar
mov
mov
lea
and
dec
leave
test
pop
adc
(bad)
iret
test
ret
mul
mul
dec
jns
aaa
pop
sub
push
std
ret
sub
add
jne
dec
xchg
outs
cmp
xchg
pop
jne
add
js
fs
scas
inc
out
xor
mov
je
aam
push
xlat
stos
ins
test
hlt
push
sub
test
xchg
inc
xchg
scas
or
call
lods
add
jl
and
stos
inc
movs
xor
in
mov
fs
and
jmp
ss
icebp
mov
aam
push
loop
jl
push
pop
icebp
adc
(bad)
repnz
mov
mov
xor
dec
and
pop
push
lds
mov
or
imul
mov
xor
and
mov
inc
jae
mov
sbb
sub
and
push
mov
jle
lahf
clc
sahf
pmovmskb
ja
xor
jno
sub
inc
mov
fnstsw
shl
test
outs
pop
aam
repnz
sub
js
and
push
fadd
repz
dec
pushf
jge
inc
(bad)
jbe
retf
add
mov
jmp
not
or
mov
pop
mov
inc
push
stc
lahf
out
shl
mov
jnp
test
adc
out
(bad)
test
(bad)
movs
mov
les
pop
fwait
push
pop
push
cmp
fsubp
std
sti
gs
(bad)
sub
mov
ror
mov
iret
mov
pop
jae
add
cmc
add
lods
inc
(bad)
dec
push
inc
in
mov
(bad)
clc
xor
or
jb
arpl
cs
dec
int3
cmp
sbb
jge
inc
dec
(bad)
jno
cmc
mov
cmp
and
adc
dec
mov
add
xchg
pop
pop
cmp
xor
mov
pop
adc
mov
cmps
sahf
pop
mov
xchg
dec
cmp
xor
xor
test
fld
popa
adc
shl
adc
pop
cmp
mov
push
or
cmp
fild
and
js
sbb
or
mov
sub
mov
inc
fisubr
jg
call
xchg
sbb
dec
dec
dec
mov
jo
dec
xor
xchg
fidiv
push
je
inc
xor
inc
mov
or
out
sar
aaa
add
dec
movs
sbb
je
scas
inc
jmp
jbe
or
sbb
mov
and
js
mov
stc
inc
icebp
icebp
jp
je
jg
push
cmp
pop
mov
cmp
dec
(bad)
cli
hlt
add
pop
sub
sbb
leave
or
push
dec
and
or
pop
jb
data16
sahf
je
adc
es
cmps
inc
aas
gs
lahf
push
xchg
adc
lea
xchg
scas
loope
int
mov
dec
jl
stos
and
xor
addr16
test
leave
push
jmp
lods
cmp
dec
xchg
pop
adc
mov
rcl
cli
push
sahf
push
xchg
cwde
iret
inc
addr16
sub
rcl
mov
cmps
mov
movs
imul
les
sahf
cmps
dec
sub
cmp
adc
repz
and
inc
neg
cmp
lock
sar
test
int3
add
mov
push
fcomp
jne
aam
stos
inc
fwait
std
pop
iret
test
jmp
inc
inc
push
jmp
fwait
push
mov
pop
xor
movs
mov
lods
xor
sub
inc
in
(bad)
fimul
jno
das
cmc
sbb
adc
xor
cs
sbb
sbb
aam
fbstp
mov
push
call
sbb
jae
add
cmp
test
jae
jbe
push
movs
push
scas
dec
add
push
sub
mov
mov
clc
jb
cmp
fucom
dec
lock
add
cmp
and
mov
cmp
mov
rol
lds
mov
dec
and
stos
add
xchg
pushf
push
iret
mov
mov
adc
pop
das
out
xchg
repz
sub
lahf
ret
icebp
lar
pop
xor
xchg
add
cmp
inc
arpl
out
xor
outs
sub
ret
int3
(bad)
and
rol
sub
aad
loopne
rol
adc
cmps
mov
dec
pop
mov
dec
push
popf
in
and
xchg
mov
cdq
aad
or
mov
pop
push
rcl
mov
add
jp
sub
add
cmp
and
sahf
sbb
xor
mov
adc
pop
cmp
popa
stos
call
cmp
cmp
int3
adc
jmp
mov
dec
pusha
adc
mov
test
adc
add
and
(bad)
mov
inc
xor
inc
popf
dec
sub
sub
mov
cmc
push
retf
repz
cwde
in
lods
je
xchg
push
push
sub
dec
inc
ret
mov
push
mov
jae
aas
cwde
pop
cmc
add
mov
adc
sbb
dec
sbb
xor
add
arpl
xchg
dec
sbb
xor
imul
add
add
pop
(bad)
aam
mov
xor
mov
adc
or
retf
dec
push
aas
fdiv
movs
cmp
cmp
sbb
rcr
xlat
ins
addr16
xor
xor
std
push
mov
mov
add
xlat
adc
out
and
mov
jo
cmp
into
push
mov
data16
lds
jecxz
sub
aad
push
mov
rol
shr
push
pop
and
jmp
pop
jge
ins
stos
push
nop
rol
mov
xor
sbb
ror
movs
xchg
inc
sbb
pop
jecxz
sub
addr16
or
pop
push
mov
(bad)
neg
call
sub
movs
cmps
imul
mov
(bad)
stos
out
iret
ds
ficomp
in
jg
and
push
add
into
cmp
sbb
cwde
ficomp
out
js
pop
sbb
out
movs
sahf
sub
rcl
lea
xor
mov
movs
inc
imul
mov
inc
imul
mov
inc
or
imul
jecxz
cmps
data16
xchg
mov
(bad)
push
xchg
inc
pop
lds
scas
inc
movs
fcomp
push
jne
gs
push
dec
inc
ret
fld
mov
popa
inc
add
call
jp
les
fsin
mov
and
test
jne
sahf
mov
rcr
cmps
test
repnz
push
es
jge
std
cmp
inc
or
test
add
lods
xchg
or
sub
jp
outs
lea
daa
sub
loop
xor
ror
out
and
and
sbb
xchg
mov
pop
ret
dec
lods
mov
push
and
test
or
pop
xchg
inc
fwait
data16
popa
push
add
pop
cs
clc
jo
inc
scas
cmp
mov
iret
test
dec
push
inc
lds
sbb
jl
mov
pop
outs
pop
lods
xor
sbb
pop
movs
pop
loop
int
jns
xchg
push
xchg
mov
xor
sub
add
push
add
xlat
mov
js
in
lea
and
jg
pop
xchg
inc
int
retf
lods
mov
lea
sbb
jae
popf
aad
test
movs
mov
or
xlat
out
jnp
fyl2xp1
popf
ins
mul
add
adc
ror
or
icebp
aam
cdq
(bad)
jge
xor
dec
add
(bad)
cmps
mov
js
mov
shl
sub
mov
push
mov
shl
fadd
push
aaa
xchg
adc
cdq
add
and
outs
jae
jg
inc
push
jmp
xchg
shl
dec
dec
(bad)
lods
adc
inc
lds
or
push
or
adc
repz
mov
jl
shl
cmp
push
inc
and
mov
mov
jecxz
jg
fcomp
outs
scas
popa
and
imul
dec
sub
push
mov
scas
pop
jnp
sbb
gs
jmp
jo
xchg
dec
push
sbb
pusha
mov
(bad)
leave
sbb
add
hlt
clc
mov
ss
ins
scas
loop
(bad)
jmp
cld
std
dec
cli
mov
sbb
or
xchg
sahf
movs
stos
sub
out
popa
mov
mov
dec
dec
jnp
sub
inc
call
add
mov
movs
aad
cmp
push
push
cmp
xchg
pop
mov
out
add
mov
push
js
xchg
pop
data16
mov
ja
lock
push
ja
cmp
fiadd
ja
out
xadd
jnp
gs
out
lds
adc
jns
push
repz
xchg
out
fs
popa
inc
jbe
adc
mov
popf
mov
xor
aad
ins
or
fsubr
out
jp
mov
in
and
in
int3
push
pop
es
cmp
or
or
ins
(bad)
test
movs
retf
push
xchg
adc
dec
jmp
pop
add
adc
jmp
nop
retf
shl
daa
retf
pop
aam
movs
mov
ins
mov
es
or
rcl
cmp
push
leave
dec
fwait
mov
mov
mov
or
push
out
ins
mul
std
mov
sub
les
mov
sub
test
scas
retf
mov
fbstp
lods
outs
and
cmps
mov
cmp
dec
aam
or
cmp
loop
idiv
popf
fnstenv
int
inc
addr16
jl
rcr
jno
les
sbb
imul
mov
mov
cmp
div
xor
or
int
mov
outs
fild
into
loope
ins
mov
pop
fs
aam
add
mov
push
ffreep
and
icebp
add
ret
arpl
loopne
(bad)
jae
punpckldq
cld
mov
add
xchg
inc
ret
pop
rep
outs
dec
cmc
mov
js
xchg
movs
stos
mov
or
fistp
arpl
sbb
and
imul
mov
stos
loop
xor
mov
rcr
and
mov
pop
in
cmps
cli
ins
int3
popa
xchg
push
xor
cld
fsubr
inc
pop
shl
mov
push
and
jp
fdiv
or
fwait
xchg
imul
cld
jbe
mov
push
and
rcr
cmp
add
pop
inc
(bad)
stos
cld
jge
dec
adc
push
fnstcw
fwait
test
and
loope
jle
aas
lahf
dec
mov
jge
mov
jb
pusha
jle
pop
fist
mov
popa
aam
mov
in
add
jge
ret
(bad)
dec
inc
les
pop
shl
imul
(bad)
shr
aam
dec
call
pop
aad
and
std
mov
stos
mov
mov
sahf
jle
cli
jle
fsubr
cld
add
and
xchg
push
xchg
jecxz
addr16
(bad)
pop
inc
cmp
imul
outs
cmp
idiv
inc
aas
fidivr
std
(bad)
inc
loop
xor
(bad)
add
icebp
and
inc
dec
adc
repnz
iret
movs
ficomp
scas
mov
mov
dec
mov
mov
jge
out
stc
mov
inc
pop
push
cmps
stc
push
xchg
mov
mov
mov
or
or
call
mov
add
rcl
pop
mov
pushf
sub
xor
lea
dec
test
add
cld
jnp
(bad)
and
mov
iret
iret
retf
test
ins
add
inc
and
cmp
mov
aad
or
inc
dec
cmp
push
mov
mov
(bad)
int3
mov
mov
in
mov
add
(bad)
sbb
(bad)
xchg
rcr
mov
adc
cmp
xor
dec
xchg
hlt
jmp
bound
ror
dec
or
icebp
dec
adc
mov
sub
inc
out
cmc
push
std
cmp
add
(bad)
or
sbb
rcpps
push
pop
pop
sub
arpl
mov
pop
les
sbb
out
(bad)
ins
cmc
aam
stos
dec
mov
test
pop
in
and
jecxz
push
mov
(bad)
sbb
inc
mov
adc
repnz
arpl
adc
push
xchg
mov
mov
(bad)
aas
test
(bad)
cmp
xchg
iret
test
adc
xor
fwait
jmp
lods
in
sahf
sti
cwde
out
add
cdq
stos
imul
loope
mov
sbb
ret
push
and
xchg
out
jg
je
call
xchg
xchg
mov
xchg
dec
xor
adc
inc
mov
jnp
fmul
fiadd
mov
and
icebp
pop
iret
idiv
sbb
mov
jne
ficomp
call
pop
fst
jne
sbb
push
pop
xor
xchg
sub
dec
mul
mov
mov
cs
inc
or
ins
push
loopne
loope
push
popf
jnp
in
add
out
sbb
jae
in
lods
ds
gs
dec
mov
lods
test
dec
or
sahf
mov
jecxz
lahf
shl
push
adc
lock
rol
ret
sbb
pushf
or
daa
sub
push
sbb
pop
ds
push
push
sub
and
into
shr
test
(bad)
aad
repz
loopne
add
inc
mov
repz
jp
repz
ins
int3
add
fs
cmc
cmp
out
add
and
sub
js
shl
mov
add
call
in
fs
mov
addr16
sub
ds
pop
cmp
in
sub
shl
loop
push
push
pushf
aas
loop
dec
dec
mov
imul
jb
mov
pop
aam
xor
iret
dec
jno
je
jge
frstor
lock
adc
mov
rcl
dec
cs
sub
jne
or
pop
lahf
neg
adc
in
and
mov
pop
shl
idiv
cmc
adc
dec
or
int
fwait
or
hlt
push
or
jecxz
div
pop
jge
lds
or
dec
push
mov
or
jo
iret
xchg
in
jmp
and
and
mov
pop
pop
inc
push
adc
dec
mov
gs
xor
pop
xor
xchg
mov
iret
adc
into
pushf
mov
(bad)
mov
dec
dec
rcr
dec
cmp
stos
shr
(bad)
addr16
ins
aas
push
bnd
nop
mov
sub
mov
inc
adc
sbb
xchg
xchg
adc
cwde
imul
push
push
scas
retf
stc
(bad)
scas
std
pop
push
sub
out
add
bound
fwait
push
and
dec
jne
mov
jae
pop
and
(bad)
jmp
shl
push
mov
ror
dec
mov
retf
push
mov
jno
arpl
adc
mov
cli
cmp
mov
into
and
sar
ja
xchg
retf
mov
push
add
imul
jecxz
jmp
push
call
aam
rcr
sbb
mov
jle
pop
dec
jnp
dec
sbb
scas
sub
jno
and
mov
adc
and
mov
(bad)
cdq
(bad)
iret
sbb
repz
repz
jmp
sub
scas
sub
sar
test
adc
loop
add
jge
inc
call
inc
or
pushf
mov
inc
dec
or
seta
mov
nop
xor
je
outs
retf
int3
out
int
mov
cs
jmp
sbb
jecxz
push
add
cs
ds
(bad)
mov
adc
xchg
mov
dec
stos
in
jecxz
je
fld
(bad)
mov
or
lahf
sub
cbw
and
hlt
xchg
xchg
(bad)
das
pop
test
mov
shl
push
xchg
data16
in
inc
and
sub
inc
pop
xor
pop
(bad)
aaa
mov
mov
or
test
movs
imul
aaa
push
stos
jl
jo
loope
out
xchg
call
sub
call
js
sbb
loope
xchg
mov
xchg
cmp
cmp
iret
adc
sbb
mov
imul
stos
imul
adc
mov
stc
xchg
inc
xor
shl
bound
add
inc
push
iret
sub
mov
adc
and
mov
mov
or
enter
mov
out
test
add
mov
pop
jns
shl
mov
dec
aam
jmp
jo
xor
jmp
add
inc
mov
in
mov
lods
jl
push
out
test
retf
in
jmp
hlt
fcmovb
stos
inc
xor
clc
(bad)
mov
shr
aaa
jno
mov
ds
dec
das
pop
cmp
aad
cmp
cli
jb
std
das
jnp
jg
pop
mov
cmc
and
lods
pop
xchg
dec
(bad)
arpl
imul
lahf
sbb
jmp
ror
ret
imul
mov
inc
and
pop
or
jmp
cmp
mov
std
mov
add
pusha
imul
fst
pop
inc
adc
pop
mov
test
push
xchg
ins
nop
stos
sub
jno
push
in
les
rcr
stos
sub
mov
das
sbb
dec
and
push
(bad)
movs
cmp
jb
push
ins
movs
lods
movs
dec
mov
add
push
cwde
rcl
add
and
inc
adc
inc
or
xor
retf
xchg
lods
jg
imul
test
and
mov
xchg
int3
add
call
adc
pop
pop
add
xor
dec
and
sar
mov
jns
clc
mov
mov
aas
mov
cmp
lea
add
mov
fwait
mov
add
jnp
mov
pop
jp
mov
dec
pop
push
add
stc
out
frstor
sub
daa
fwait
(bad)
jg
shl
in
ficom
test
mov
sbb
xchg
jne
push
cmp
mov
aas
fcomp
scas
pop
aam
fmulp
ins
lea
ja
cmc
sbb
dec
lods
pop
jno
ret
movs
xchg
fs
xchg
push
pop
out
test
push
mov
dec
movs
je
mov
xlat
mov
stc
add
push
pop
imul
(bad)
xchg
test
nop
lods
or
ins
sub
mov
xor
push
loop
aam
sahf
sahf
sub
gs
xor
retf
cdq
retf
add
movs
mov
es
ret
jb
int3
in
dec
lods
xor
mov
bnd
mov
mov
sub
jno
adc
or
movs
in
sub
div
push
lods
jp
daa
fdiv
popa
and
mov
jb
adc
popa
or
movs
xor
fcom
mov
test
inc
adc
lods
test
pushf
cli
aam
into
mov
fcomp
cdq
jns
data16
sub
add
imul
push
inc
pop
lahf
push
jns
xor
(bad)
aad
ja
pop
nop
jg
push
in
mov
jmp
add
cmc
hlt
and
cmp
sub
nop
mov
leave
and
int
add
aaa
jnp
ins
mov
mov
cmp
out
mov
pushf
idiv
scas
call
xchg
fidiv
fidiv
ret
test
xor
sub
je
(bad)
xlat
push
ficom
mov
lahf
scas
mov
pop
loope
add
stc
cmc
sahf
fmul
adc
sbb
lods
add
push
movzx
je
imul
and
mov
mov
mov
pop
mov
lods
jns
or
cmps
les
add
sub
xor
lods
dec
mov
stos
dec
test
cmp
retf
mov
leave
std
cdq
jmp
pop
je
xchg
repz
(bad)
daa
fadd
test
jb
xchg
retf
es
cmc
addr16
pop
in
je
es
pop
or
enter
mov
das
hlt
mul
inc
sahf
mov
add
add
lods
pop
inc
cdq
sar
add
clc
cmp
jp
add
xor
mov
jne
aad
inc
push
popa
xchg
push
xor
hlt
(bad)
adc
mov
add
cmp
int
push
faddp
and
sbb
mov
fidivr
jne
xor
out
fcom
out
mov
mov
in
aam
xor
cs
add
adc
test
inc
sbb
inc
inc
or
inc
pop
dec
leave
pop
retf
or
inc
adc
fcomp
ins
in
inc
retf
jecxz
in
xchg
lock
iret
or
and
ret
pop
fistp
nop
dec
mov
add
lods
inc
test
lods
add
push
(bad)
sbb
inc
test
(bad)
out
and
movs
xchg
cmp
add
retf
je
outs
shr
outs
xor
dec
adc
test
popf
jp
mov
inc
mov
sti
push
mov
inc
inc
sub
xchg
aam
lods
(bad)
out
pop
inc
cld
cmp
dec
jmp
popf
fwait
jmp
or
sbb
inc
mov
and
jg
jmp
imul
outs
cmc
jp
daa
mov
xor
mov
sub
jno
in
jmp
mov
dec
sbb
jmp
retf
retf
xlat
mov
add
icebp
xor
xor
dec
xchg
xchg
inc
sbb
push
and
inc
inc
xchg
rcr
fcomp
pusha
pop
out
sub
jne
pop
mov
cmps
mov
test
jmp
lea
repz
lahf
cld
push
inc
push
loop
sub
lods
push
mov
add
mov
fcomp
dec
mov
xlat
xor
xor
mov
sahf
jbe
(bad)
je
and
call
shl
jno
dec
dec
add
mov
fnstcw
call
sbb
sub
dec
cld
clc
arpl
aad
hlt
stc
and
cmp
aaa
aas
in
sbb
out
jp
push
xchg
sahf
push
(bad)
jge
out
call
(bad)
xchg
pushf
cmp
xor
gs
inc
mov
dec
push
push
pop
xchg
dec
pop
dec
mov
mov
gs
stc
mov
jecxz
push
(bad)
and
cmps
daa
out
out
test
sbb
rcl
push
inc
fidivr
mov
rol
jecxz
cmp
cs
sbb
jge
dec
neg
outs
cmp
mov
ficomp
and
add
shl
dec
mov
in
imul
cs
in
movs
mov
or
js
pop
lock
cld
mov
and
mov
paddq
lds
mov
(bad)
adc
sahf
outs
in
lock
push
in
iret
shr
lea
jmp
mov
cs
cmps
cli
(bad)
cld
cs
push
movs
sbb
cmps
fstp
pop
sub
(bad)
ds
push
xchg
rcl
movs
sub
rol
xchg
scas
aam
clc
ds
push
mov
test
inc
pop
mov
jle
call
retf
std
mov
fsubr
and
mov
inc
movs
mov
lahf
test
mov
out
jns
(bad)
xor
inc
pop
dec
in
xlat
sub
fisttp
stos
xchg
outs
and
sub
dec
pop
push
cmps
cdq
add
pop
mov
mov
leave
push
and
(bad)
(bad)
js
jle
mov
cdq
jnp
mov
push
(bad)
jle
in
in
imul
jo
ss
dec
dec
mul
pop
and
lock
stc
mov
arpl
xor
push
push
push
iret
adc
mov
sar
(bad)
fwait
jle
stc
test
and
adc
repz
pop
pop
sub
and
sub
rcl
mov
fisttp
call
(bad)
xchg
fld
xchg
rcr
imul
mov
repnz
pusha
bound
leave
xlat
and
icebp
div
sub
sub
retf
xor
mov
inc
pop
inc
mov
(bad)
mov
stos
ficom
gs
rol
movs
push
cld
sbb
(bad)
daa
mov
or
sub
push
ret
cmps
aaa
mov
and
jae
out
pop
int
mov
out
push
loopne
push
repz
jmp
mov
ror
mov
fwait
lods
mov
inc
push
icebp
leavew
iret
sbb
and
and
gs
loop
ret
(bad)
rcr
pusha
into
inc
inc
cmp
pushf
xchg
imul
cld
mov
loopne
jp
mov
scas
jmp
add
mov
pusha
inc
mov
xchg
out
je
repz
push
inc
mov
cwde
jne
bound
arpl
gs
fwait
repz
xchg
jns
lock
sbb
add
cmc
push
or
inc
xor
das
push
aas
(bad)
cmps
sti
iret
mov
mov
jmp
imul
movs
pop
das
das
dec
idiv
push
popf
push
cwde
scas
or
leave
mov
mov
data16
call
rol
js
dec
cmp
(bad)
dec
aam
popa
fldenv
inc
outs
inc
in
arpl
lock
ror
xor
mov
div
mov
cmp
add
hlt
mov
cmp
cmp
and
aam
sub
nop
mov
(bad)
int3
mov
jg
std
mov
mov
loope
ss
out
aad
mov
scas
cs
pop
add
xor
(bad)
aad
jge
cli
fisttp
pop
mov
nop
cmp
das
sub
inc
sbb
dec
rcl
sub
sub
jnp
into
xor
in
pop
and
add
loope
mov
or
pusha
outs
adc
(bad)
jmp
add
je
jo
dec
ret
fidivr
dec
add
(bad)
sahf
fxch
or
jmp
ss
cmp
jb
push
outs
xor
adc
rcl
push
and
iret
stc
das
mov
lea
imul
xor
in
push
mov
int3
retf
and
stos
adc
scas
sbb
loopne
mov
xchg
retf
test
cs
test
sbb
add
mov
popf
push
lea
inc
or
js
adc
and
push
add
mov
shl
outs
iret
mov
dec
sbb
mov
push
jbe
inc
push
dec
add
cmps
or
hlt
test
pop
cmps
loopne
cld
xchg
int
pop
sahf
jge
dec
add
popf
fidiv
retf
and
mov
ds
and
pop
push
adc
mov
icebp
in
aas
jne
xchg
nop
jp
imul
mov
mov
xor
sub
sub
fsubr
mov
repnz
sbb
sti
or
sub
and
sbb
and
mov
ror
pop
gs
icebp
inc
add
add
push
and
cmps
inc
push
data16
addr16
inc
cs
call
adc
xchg
dec
and
(bad)
fist
(bad)
icebp
pop
cli
sti
test
fwait
jmp
outs
fs
icebp
sub
and
psllq
add
inc
sbb
retf
xchg
dec
and
xchg
in
cmp
mov
es
loopne
xchg
addr16
jp
(bad)
pop
inc
sbb
cwde
xor
inc
add
jns
scas
inc
sbb
add
jmp
pop
xchg
call
scas
ret
or
shr
xor
push
push
sub
jbe
pop
das
push
or
mov
fst
mov
enter
lods
push
cmps
shl
movs
cmp
out
dec
jns
push
mov
mov
aad
ror
lods
sub
dec
and
or
mov
xchg
jecxz
leave
or
or
dec
add
add
lahf
mov
cs
add
loop
rcr
cmps
mov
les
cmp
daa
test
in
iret
ror
cmp
or
dec
add
add
or
pop
sub
fnstsw
xchg
and
out
pusha
jg
in
call
rol
adc
pop
sbb
ds
(bad)
xchg
jb
mov
mov
xchg
(bad)
loop
mov
(bad)
jecxz
cs
ja
add
jle
popf
and
dec
mov
pushf
xchg
push
pop
fstp
ret
push
sub
hlt
loope
pop
jecxz
fist
jge
test
icebp
sub
mov
inc
push
or
aad
push
dec
daa
mov
sub
mov
xchg
jns
inc
xchg
loopne
in
jg
mov
lds
cmps
ret
(bad)
sub
repnz
inc
pop
mov
pop
aam
jmp
mov
aad
pop
in
pop
xor
pop
pop
push
and
faddp
(bad)
push
cli
mov
scas
cld
push
frstor
mov
je
mul
mov
push
rol
outs
sub
fwait
lock
outs
rcr
cmp
fcomp
lahf
data16
and
hlt
add
lea
xchg
(bad)
xchg
cmps
lahf
outs
imul
sbb
and
inc
pop
mov
and
jne
xor
adc
adc
inc
shl
xor
sahf
mov
mov
sbb
out
fnstcw
ja
push
jge
in
sub
add
jge
addr16
jno
xchg
scas
sahf
aaa
stos
xor
adc
dec
fisub
pusha
data16
(bad)
push
and
mov
xor
mov
adc
cmp
add
mov
xor
xchg
dec
add
add
pusha
xor
mov
sub
cmp
cmps
test
sub
and
mov
or
sub
mov
call
retf
sbb
out
sub
pop
cmp
cmp
pop
adc
(bad)
cmps
xchg
sti
dec
loop
imul
sub
das
or
mov
sub
imul
or
sbb
daa
sub
into
push
or
push
jae
lahf
lahf
inc
aaa
pop
imul
popa
sub
and
jl
jg
aam
into
shr
fwait
pop
pop
mov
dec
pop
pop
xor
jecxz
bound
movs
xchg
xchg
mov
inc
dec
mov
xor
jbe
lea
or
jne
mov
mov
adc
push
movs
addr16
xlat
adc
adc
add
jmp
pop
mov
(bad)
mov
jbe
out
mov
leave
push
or
dec
aad
pop
or
mov
nop
push
arpl
inc
xor
xchg
push
pop
jge
(bad)
dec
add
push
dec
cmp
loopne
cmp
xor
shl
xchg
outs
pop
aas
cmp
and
push
pop
xchg
stos
in
fcmovnbe
stc
dec
mov
mov
mov
test
cmp
xchg
inc
movs
scas
sub
sti
mov
cli
mov
push
call
mov
and
leave
xchg
movs
inc
add
stc
out
push
(bad)
jb
ja
fs
pop
adc
xor
add
ror
push
movs
sub
lds
pop
xchg
les
push
je
test
mov
out
bound
mov
sub
ror
ja
and
vphsubbw
scas
test
push
xchg
adc
adc
int3
cmovne
push
push
nop
mov
jecxz
test
rcl
mov
fwait
jnp
cdq
div
and
or
inc
outs
mov
cld
iret
clc
cmp
imul
pop
jp
cld
mov
xchg
mov
adc
sbb
sbb
adc
sahf
xchg
hlt
les
(bad)
movs
aam
mov
das
in
sbb
or
push
dec
ret
or
(bad)
repz
sbb
popf
xor
sar
pop
retf
movs
cmps
pop
outs
ins
jmp
mov
test
xor
xor
(bad)
pop
mov
retf
dec
adc
add
js
(bad)
pop
pop
bnd
sub
pop
pusha
jl
cld
mov
cld
outs
or
push
sub
sub
push
cmp
add
cwde
adc
or
push
jno
push
call
scas
pop
in
and
add
test
mov
dec
pop
xor
ss
sub
sbb
xor
push
cwde
loope
call
jl
adc
add
or
jge
inc
loope
xor
and
data16
gs
call
adc
xchg
xchg
sbb
push
mov
hlt
fcmovb
sbb
stos
push
(bad)
mov
sbb
mov
mov
ror
mov
imul
enter
cli
mov
jecxz
stos
sub
dec
cmp
jno
or
mov
sbb
cmp
mov
ins
popf
fcmovbe
add
xor
aam
push
and
xchg
ss
pushf
sbb
mov
call
sub
int
mov
xor
fimul
adc
and
sub
cmps
out
push
fdivp
shl
mov
pop
loop
cmp
shr
jae
xor
loop
xchg
cmp
out
fwait
sbb
mov
retf
mov
dec
arpl
(bad)
out
dec
idiv
sti
arpl
jns
fwait
test
add
inc
sub
cmps
sbb
sub
fcom
data16
popa
sbb
mov
bswap
stos
call
ins
fistp
mov
inc
lock
or
sbb
rol
push
adc
push
inc
dec
popa
sbb
jb
push
hlt
loop
mov
xor
push
mov
int
ret
sub
aad
in
push
(bad)
mov
push
mov
add
loopne
imul
arpl
les
mov
bound
xor
(bad)
jmp
sbb
push
lahf
popa
es
add
pop
dec
or
add
and
sub
aad
add
inc
cmp
ss
pusha
outs
sub
pop
mov
cmp
and
sbb
fisubr
push
imul
pop
mov
movs
push
jl
mov
xor
nop
(bad)
mov
daa
out
mov
inc
push
inc
adc
xlat
ds
add
cmc
cmp
data16
mov
mov
adc
dec
outs
or
cli
jge
add
ret
sahf
mov
sub
mov
inc
push
stos
inc
inc
dec
sbb
hlt
inc
jne
fwait
mov
dec
mov
call
mov
push
jbe
xchg
lahf
les
shl
popa
call
gs
cmp
stos
xchg
pop
cli
je
add
dec
inc
inc
mov
xlat
daa
retf
cld
and
pop
iret
mov
aam
int3
les
imul
std
mov
cmp
cmps
and
cmp
hlt
xlat
sbb
cdq
push
(bad)
xchg
adc
jne
dec
movs
mov
or
ja
call
mov
push
call
aas
lahf
push
add
and
mov
mov
fidiv
(bad)
jg
call
mov
xor
push
push
dec
popa
xchg
test
and
xchg
sahf
xor
xlat
cmps
cli
jo
xlat
mov
loope
(bad)
jns
sub
adc
idiv
movs
nop
mov
cmp
js
mov
outs
imul
mov
mov
adc
dec
adc
or
mov
cmps
nop
(bad)
and
outs
frstor
mov
(bad)
xor
mov
inc
add
mov
aad
jmp
push
and
xor
sub
jle
dec
jnp
pop
dec
(bad)
mov
enter
push
pop
cmp
cmp
sub
mov
into
iret
or
in
mov
sub
mul
ins
push
mov
push
mov
icebp
mov
mov
loope
pop
aam
adc
or
or
mov
pop
sbb
jl
(bad)
sbb
into
in
mov
loope
cwde
push
cwde
mov
add
(bad)
push
ds
loope
fisubr
lods
scas
fidiv
push
fs
dec
cmps
push
mov
les
fs
retf
iret
stc
(bad)
jge
clc
mov
enter
cmc
adc
push
mov
test
push
pop
fcmovu
jg
jg
imul
sub
es
cmp
xchg
fwait
push
jmp
ror
fidivr
jns
and
add
and
xchg
leave
jno
cmp
in
push
or
jbe
jmp
add
int3
mov
sbb
xor
pop
cmc
cmps
or
cmp
add
inc
push
push
outs
jecxz
jbe
outs
xor
jmp
jbe
dec
inc
push
leave
adc
ja
or
mov
rcl
shl
(bad)
jge
ins
idiv
mov
shr
das
mov
adc
lds
add
push
pop
sub
jge
es
ret
in
or
imul
or
cmp
int
aaa
push
shl
loop
jns
outs
mov
fldl2e
push
add
(bad)
nop
enter
inc
inc
jnp
inc
outs
outs
je
ds
or
mov
mov
stc
sub
scas
xchg
pop
sub
ins
test
dec
and
inc
sbb
and
mov
jp
nop
sub
dec
(bad)
out
mov
adc
dec
sbb
cmp
dec
addr16
cmp
scas
add
cmp
add
call
jmp
call
sub
int
add
jmp
(bad)
stos
and
mov
fimul
add
ret
mov
xchg
pop
or
mov
mov
or
push
mov
add
cmp
add
sub
outs
jbe
daa
outs
fidivr
sub
push
ret
and
push
sbb
adc
adc
mov
popf
aad
mov
cmc
push
sti
(bad)
mov
in
fdivr
(bad)
push
pop
add
imul
push
mov
dec
bound
mov
cmp
loopne
jns
outs
jge
loope
xchg
(bad)
(bad)
cld
pop
push
or
popa
sbb
rol
bnd
out
scas
jbe
(bad)
fisubr
aam
add
sub
inc
adc
push
sbb
inc
cli
mul
jle
pmulhuw
int3
mov
cs
test
pop
int3
pop
iret
lods
mov
fucomip
jg
mov
add
xchg
dec
(bad)
fs
fstp
js
test
ins
movs
repnz
hlt
mov
clc
test
jmp
and
xlat
add
dec
fcom
in
cli
add
aas
pop
cmc
mov
mov
mov
cmps
adc
inc
cmp
hlt
in
push
pop
inc
shl
fwait
xor
ins
in
sub
or
push
sar
scas
loope
pop
lahf
rcl
shl
sahf
pop
mov
cld
das
mov
(bad)
ficomp
sti
mov
(bad)
aas
sar
ret
test
shr
and
cmc
sub
mov
xchg
add
jmp
xor
in
bound
cli
cdq
dec
dec
lods
cmp
mov
inc
mov
mov
fcom
xor
loope
mov
jl
xor
lahf
retf
stos
popa
shl
dec
test
cmps
movs
call
repz
aam
mov
test
jge
ror
shl
pop
outs
ja
sbb
xor
push
pop
ds
in
inc
pop
repz
das
jp
cmp
ins
cs
push
aam
sbb
sahf
add
enter
push
popf
and
mov
xor
loopne
or
mov
inc
add
mov
std
outs
in
ds
imul
sahf
mov
sbb
pushf
ficomp
retf
dec
stos
cli
lods
fdivr
jns
lahf
retf
cld
fisttp
popa
arpl
sub
(bad)
(bad)
ret
call
clc
adc
inc
inc
test
movs
add
loopne
(bad)
shr
icebp
jns
sub
inc
hlt
mov
xchg
add
aad
dec
or
inc
cmp
pop
lds
cld
inc
retf
pop
out
lods
test
stos
xchg
sar
out
or
(bad)
adc
adc
jecxz
or
in
sti
imul
imul
out
push
jg
sub
xchg
bswap
cli
jl
jg
test
sbb
mov
dec
mov
xchg
mov
shr
call
xor
mov
inc
xchg
lods
verw
ror
mov
add
push
call
xchg
pop
push
push
push
push
pop
cmp
adc
xchg
push
jmp
mov
cli
sbb
push
xor
push
imul
add
jl
push
sbb
fs
mov
mov
adc
mov
cmp
adc
pop
dec
cmps
std
and
call
out
cmc
imul
adc
mov
(bad)
mov
int3
jecxz
stos
dec
int3
(bad)
loop
les
jge
xchg
jmp
push
int
push
push
cmps
stos
push
push
pop
in
shr
xor
xor
or
pop
jecxz
inc
mov
inc
or
push
jle
inc
pop
push
cmp
jp
mov
cmp
jmp
int
sub
mov
dec
gs
outs
cmp
add
sub
bound
fild
or
(bad)
outs
pop
fcomp
dec
fst
inc
(bad)
mov
sbb
mov
ins
cwde
ss
(bad)
xchg
retf
daa
movs
push
inc
adc
(bad)
cmp
pop
push
and
loopne
cdq
movs
mov
mov
(bad)
rol
dec
inc
ins
test
dec
add
xchg
add
jge
inc
push
jno
xlat
cmps
jl
pusha
je
mov
xchg
dec
popf
cmp
add
xchg
fld
or
outs
adc
ror
lods
cmc
push
jmp
outs
dec
xchg
mov
and
les
(bad)
dec
repnz
jl
aas
add
repnz
dec
cs
jne
push
jp
retf
mov
xor
push
lods
jge
cwde
mov
cwde
leave
and
fiadd
ins
push
and
loopne
jnp
sti
aaa
dec
ror
daa
jae
loop
sub
jge
dec
xchg
not
jge
pop
sub
inc
adc
cmp
add
(bad)
xchg
jae
sahf
nop
mov
pop
or
repnz
mov
in
add
and
mov
jno
std
mov
cdq
lods
jecxz
lock
push
rcr
lock
in
jmp
sub
aam
imul
sub
ds
loop
jl
clc
pause
out
out
rcr
sbb
and
and
aas
les
jnp
sub
adc
and
scas
pop
mov
xchg
iret
mov
inc
xor
push
or
stos
inc
rcl
and
rcr
popf
mov
stos
arpl
into
jmp
push
push
adc
punpcklbw
xor
mov
or
mov
lods
(bad)
shr
sub
sub
mov
fbld
and
add
or
pusha
and
push
int3
sbb
bound
xchg
out
xchg
loop
dec
jns
rol
inc
pop
stc
cmc
add
fstp
cmp
les
sbb
push
sub
cwde
rol
push
outs
jg
cmp
je
xchg
retf
add
(bad)
int
xchg
lods
dec
and
gs
lods
pop
push
jg
mul
das
pop
int
cmp
mov
sub
jl
push
aam
adc
jae
mov
stc
jne
jl
ins
and
test
rol
iret
(bad)
pop
mov
jne
shl
das
xor
push
(bad)
push
mov
and
dec
jns
es
mov
add
jg
mov
lea
std
xor
add
sub
cmp
iret
dec
cwde
mov
outs
sub
jge
imul
iret
stc
cld
cli
inc
lds
sahf
jae
mov
push
cmp
push
outs
adc
rcr
push
push
add
mov
js
retf
gs
inc
mov
mov
sub
push
loopne
sahf
test
inc
push
jecxz
push
push
ss
xchg
loope
sbb
movs
sbb
stc
sbb
pop
sbb
sbb
std
mov
pop
adc
fmul
pop
add
sbb
nop
(bad)
cwde
shr
cmp
add
xor
cmp
jp
fist
repnz
call
fisubr
cli
sti
xor
fsub
clc
nop
adc
(bad)
sub
adc
movs
imul
adc
shl
ror
sbb
push
out
lahf
push
test
jno
and
push
cmp
outs
dec
mov
adc
test
adc
call
cli
(bad)
fstp
test
mov
dec
ins
inc
test
xchg
out
clc
scas
cwde
cdq
bound
xor
push
retf
xor
sbb
mov
mov
pop
sbb
mov
push
aam
int3
pop
push
or
and
or
add
sub
push
icebp
shr
and
xor
pop
in
mov
stos
xor
push
mov
(bad)
adc
xor
lods
(bad)
and
lods
sti
mov
xor
mov
jl
xor
jns
add
movs
pop
xor
cmc
and
outs
data16
xor
dec
mov
mov
aas
test
ror
sub
das
jnp
mov
xchg
ret
xchg
dec
push
xchg
shr
test
push
fisubr
ins
gs
movs
pop
xchg
cmp
mov
cmp
jge
neg
into
fdivrp
and
hlt
ret
adc
aas
outs
inc
jb
ins
jge
xchg
outs
xchg
cmps
(bad)
push
or
lods
cmp
hlt
xchg
xchg
pop
cmp
or
xchg
jg
cld
inc
push
into
push
aam
sbb
add
mov
inc
xchg
sbb
xor
ss
stos
enter
mov
xor
mov
jns
lods
jae
cmc
std
mov
not
sbb
jle
mov
mov
repnz
js
jnp
(bad)
mov
adc
scas
sbb
jmp
in
or
push
cs
jae
stos
imul
sub
lea
int3
dec
xor
push
xor
mov
pop
cmps
inc
push
adc
xchg
pop
push
adc
dec
or
mov
nop
call
icebp
mov
pop
neg
sub
cmp
push
test
jmp
idiv
clc
jmp
xlat
and
jg
xchg
inc
dec
lods
test
lods
mov
xchg
mov
(bad)
fidivr
sub
stos
push
mov
ficomp
pop
inc
push
test
mov
icebp
aam
pop
or
xchg
adc
outs
retf
dec
or
inc
ficom
lods
and
test
and
push
dec
fidiv
gs
fwait
pop
inc
out
jmp
pop
mov
test
mov
sub
add
(bad)
sahf
inc
iret
movs
div
push
sub
mov
jp
rcl
pusha
stos
push
das
or
jae
cli
mov
adc
add
out
dec
test
mov
mov
push
(bad)
das
add
dec
in
add
pop
pop
dec
scas
sbb
jge
(bad)
mov
mov
mov
fwait
sbb
add
adc
stc
hlt
lea
add
out
daa
std
arpl
repnz
imul
pop
mov
loope
cld
std
and
loop
and
pop
idiv
cwde
pop
mov
call
std
daa
jmp
push
test
inc
jbe
or
lahf
push
retf
ficom
and
cmp
jnp
push
in
cmp
sbb
jns
xchg
scas
fneni(8087
sahf
dec
or
or
lock
dec
pop
lea
sub
adc
xchg
dec
fidiv
stos
sahf
ins
dec
neg
shl
push
or
out
cmp
and
jno
ret
xchg
cmp
pushf
cmps
push
inc
mov
jmp
sub
xor
jbe
not
pop
ins
call
arpl
mov
mov
xor
jmp
cmp
daa
xlat
movzx
gs
mov
fcomp
(bad)
mov
dec
jb
retf
cmp
jmp
sbb
in
outs
stos
pop
arpl
mov
dec
ret
xchg
loopne
dec
les
js
inc
lods
dec
xchg
sbb
mov
add
pand
enter
sub
mov
dec
loop
inc
lock
ds
push
sbb
dec
loope
mov
xchg
dec
mov
sbb
cmp
in
mov
repz
sbb
adc
push
sbb
or
sbb
or
dec
xor
fsub
mov
xor
jmp
jb
xchg
jo
je
std
(bad)
adc
jl
or
popf
mov
fstp
out
repnz
mov
test
and
mov
adc
(bad)
retf
dec
dec
popf
(bad)
push
rol
xchg
xchg
sbb
hlt
lods
and
test
aaa
and
pop
mov
mov
pop
mov
test
mov
mov
cmc
xchg
fstp
ins
mov
inc
std
(bad)
dec
or
xchg
sub
(bad)
mov
cmp
sbb
sbb
adc
call
bound
arpl
je
adc
jne
dec
or
sub
mov
jecxz
mov
mov
dec
leave
jno
test
or
cli
or
or
push
mov
push
xchg
sub
sbb
mov
pop
mov
mov
push
mov
xor
cli
adc
add
add
fcmovnu
clc
je
mov
or
cmp
cmc
sub
push
fimul
mov
xchg
or
dec
jmp
inc
retf
nop
outs
jno
add
pop
inc
in
out
cmp
add
jp
outs
stc
push
addr16
(bad)
call
xor
xchg
out
jmp
or
xor
neg
fisubr
push
adc
mov
add
arpl
ds
cmp
mov
jne
aas
daa
nop
(bad)
out
and
jae
call
dec
sub
cmps
lahf
ret
xchg
or
push
sbb
nop
pop
inc
and
ins
in
add
xlat
xor
pop
add
fwait
mul
mov
cmp
add
add
mov
mov
addr16
mov
push
test
imul
and
mov
call
mov
jmp
repz
inc
and
push
aad
dec
sub
jecxz
inc
(bad)
jecxz
ret
push
add
mov
mov
add
scas
data16
cdq
adc
fwait
int
pushf
mov
cwde
out
addr16
test
dec
add
je
retf
push
fcomp
pusha
mov
add
jbe
sti
cmp
jo
jge
inc
jl
ins
int
and
cmp
dec
xchg
jp
push
call
and
std
jge
arpl
aad
into
dec
mov
add
lahf
mov
lahf
ret
iret
aaa
dec
test
push
jae
sar
dec
lock
aam
sbb
add
jmp
cmp
pop
cli
jl
fiadd
mov
push
adc
fcmovnbe
cli
dec
je
loope
xchg
adc
retf
icebp
in
add
cwde
sar
daa
cmp
cmps
sar
fnsave
ja
and
ret
sub
or
pop
jecxz
and
xlat
mov
jl
sbb
jmp
inc
aad
push
lahf
fldenv
fsub
sar
pop
pop
movs
jbe
imul
cld
gs
stc
jp
(bad)
gs
out
cmp
lods
push
inc
inc
dec
int3
mov
xchg
leave
js
test
sbb
xor
jae
stos
adc
std
cmp
jg
stc
neg
mov
mov
xchg
or
popf
sub
push
push
retf
pop
jmp
test
rcr
mov
in
fnstsw
inc
or
(bad)
in
shr
sbb
inc
shl
cmp
in
mov
mov
add
je
les
ror
pop
or
in
(bad)
popf
aas
aad
mov
fimul
jmp
mov
dec
jg
mov
out
or
adc
jmp
xchg
push
cmps
arpl
bound
daa
cli
sti
or
retf
outs
imul
imul
jge
rcl
movs
adc
xor
rcr
cmp
sbb
jns
test
pop
and
gs
jge
jle
hlt
repz
mov
fdiv
hlt
icebp
and
adc
jecxz
jp
jmp
mov
int3
fstp
lods
sub
or
add
cld
jmp
push
push
push
mov
es
xor
jg
inc
jbe
dec
lods
std
cmp
xlat
fldz
fnstcw
lods
sbb
imul
fwait
stc
jns
mov
(bad)
pushf
add
jge
rol
inc
xchg
ror
inc
aas
xchg
cmc
mov
fwait
mov
jp
jg
and
add
iret
in
sti
ds
add
stos
push
repz
inc
push
jno
aas
dec
arpl
xchg
loope
jge
ret
cs
fldenv
push
jno
bound
sar
iret
inc
ds
jo
fstp
jnp
adc
adc
imul
aas
shl
ds
not
movs
iret
(bad)
mov
gs
sti
or
stc
add
ja
ins
imul
bound
idiv
sbb
repz
enter
mov
cmp
push
(bad)
xchg
pop
and
mov
sbb
push
xchg
hlt
fadd
stc
and
add
or
cmp
or
cmp
lods
sub
cmc
(bad)
sti
aas
daa
dec
jg
push
cld
(bad)
pop
inc
push
cld
xor
mov
xchg
loope
mov
and
xchg
aad
inc
hlt
je
daa
(bad)
jmp
inc
pop
ss
pop
call
xchg
push
push
sub
aad
xlat
(bad)
pop
sti
(bad)
(bad)
jbe
pop
mov
mov
inc
mov
pushf
xchg
mov
mov
data16
pop
dec
push
mov
mov
push
adc
dec
ja
and
fsub
jns
sbb
jmp
fimul
lea
pop
jns
leave
pop
cmp
adc
daa
scas
imul
mov
clc
mov
and
add
xor
push
repnz
shr
add
mov
mov
int
sahf
mov
dec
push
mov
out
inc
bound
mov
dec
push
dec
inc
and
add
dec
ds
inc
jge
(bad)
mov
xor
inc
mov
add
pop
jl
cmps
push
dec
mov
loope
inc
out
mov
cli
popa
jno
sub
jl
push
sbb
push
sbb
pushf
(bad)
jmp
push
mov
aam
pop
xor
pop
shl
pop
cmp
(bad)
adc
jmp
rol
mov
fiadd
pusha
jo
shl
pop
xor
jbe
retf
stos
fadd
xchg
pop
push
sbb
dec
inc
and
sub
sub
outs
ficomp
mov
mov
fs
push
pop
rol
int
mov
into
imul
mov
cld
ja
xor
hlt
fild
push
or
sbb
push
movs
mov
jecxz
mov
sbb
nop
sub
fcomp
fs
loopne
fmul
mov
stos
test
xchg
pop
(bad)
pop
jge
das
or
or
test
add
retf
retf
lods
mov
inc
inc
push
push
inc
and
(bad)
aam
rcr
daa
inc
retf
outs
scas
mov
out
jge
cs
in
sub
aam
jge
div
jge
sub
adc
(bad)
xchg
inc
push
cmps
dec
sbb
stos
icebp
jns
icebp
aad
sub
sub
xchg
add
jg
jge
outs
in
cs
mov
mov
movs
mov
js
jle
xchg
push
scas
outs
inc
shr
inc
gs
sub
test
add
cmp
scas
aam
jp
xor
jno
push
or
mov
xchg
jo
sbb
(bad)
lods
push
sub
in
or
(bad)
rol
jmp
dec
and
sbb
call
jnp
fld
inc
sub
aad
repnz
adc
in
adc
mov
cmc
sub
push
push
dec
sub
inc
xchg
xchg
call
arpl
and
xchg
pop
dec
push
pop
fimul
inc
mov
or
pop
inc
push
js
adc
nop
inc
xchg
repnz
pop
push
(bad)
loope
adc
fwait
dec
cdq
arpl
dec
push
ror
sahf
fnstsw
mov
xchg
dec
add
lea
mov
int
(bad)
pop
jno
stc
jnp
cmc
loope
mov
fnsave
mov
add
push
xchg
lds
mov
sbb
inc
mov
fldenv
pop
or
pop
stos
dec
fidivr
jecxz
mov
addr16
push
pushf
scas
xchg
stos
inc
pop
cmp
jbe
rcl
rcr
stc
cmp
in
jbe
scas
dec
jns
pushf
mov
mov
mov
xor
push
mov
jg
mov
inc
inc
inc
(bad)
cmp
sbb
fistp
dec
sbb
clc
push
cwde
test
test
push
(bad)
sbb
pop
or
(bad)
call
mov
inc
cli
pop
push
mov
lea
lds
popa
loope
lahf
mov
dec
inc
and
cli
outs
inc
mov
ins
dec
mov
cmc
stos
popf
call
cld
std
or
push
dec
dec
push
addr16
leave
jno
loope
dec
adc
dec
pop
cli
sbb
jge
sahf
frstor
mov
jp
and
and
or
movs
jl
(bad)
mov
push
pop
push
fs
dec
pop
dec
lea
jecxz
call
sbb
dec
scas
lods
jmp
dec
cld
daa
mov
dec
sub
cmp
xchg
stc
addr16
retf
adc
xchg
popf
test
icebp
sar
pop
retf
xor
(bad)
mov
je
inc
ror
pop
cmps
sub
cmp
xor
(bad)
scas
or
xchg
pop
mov
adc
test
popf
dec
adc
add
stc
jg
rol
cli
lahf
jmp
jns
cmc
cmc
daa
(bad)
stc
mov
gs
test
and
into
sbb
mov
sbb
sti
sbb
fs
scas
or
cmps
xchg
jae
cmps
ds
outs
inc
ja
pop
mov
push
mov
loope
(bad)
aas
iret
mov
fwait
sub
jge
inc
push
cmc
xchg
ret
and
test
stc
pop
lock
daa
pop
fsin
iret
mov
into
shl
lahf
push
cmp
ret
cmp
lahf
clc
sub
or
movs
mov
sbb
mov
sub
dec
adc
sbb
lods
(bad)
enter
xor
mov
in
(bad)
(bad)
loope
or
retf
cld
cmp
sahf
cmp
add
jmp
inc
cld
std
adc
fbld
test
lds
cdq
test
mov
mov
jp
pop
mov
adc
sbb
inc
mov
xchg
stc
push
jnp
adc
inc
xor
add
mov
pop
pop
dec
mov
fisub
lock
clc
inc
test
jmp
mov
mov
stos
jmp
in
push
arpl
xor
mov
out
sub
sub
mov
or
aas
and
sbb
scas
mov
sbb
jmp
imul
pop
or
cs
and
cmp
sub
mov
dec
ja
mov
fisubr
cmps
xchg
cmp
je
std
shr
dec
dec
inc
pop
add
inc
dec
imul
jp
in
(bad)
jmp
and
add
cdq
push
and
rcl
cli
mov
xlat
jg
in
jmp
xor
xchg
dec
inc
stos
in
call
rcr
inc
ds
add
out
lahf
loopne
sahf
xchg
inc
or
dec
cmp
push
push
dec
in
jle
lods
cdq
dec
adc
mov
mov
pop
ss
aas
iret
in
stos
add
xor
(bad)
out
xchg
or
mov
and
mov
cmp
inc
mov
ficom
sahf
adc
sub
into
or
inc
(bad)
dec
push
push
sbb
stos
pop
daa
icebp
shl
sub
test
in
push
test
rol
cwde
call
fsubr
xor
and
enter
jl
push
add
xchg
jecxz
and
movs
and
stos
and
test
mov
cmp
in
push
jne
test
sub
inc
mov
mov
or
dec
and
sub
jmp
pusha
sub
xor
sub
cmp
and
jae
jp
cmp
push
pop
jne
xacquire
pop
fidivr
cmp
icebp
ror
or
push
test
mov
mov
jb
cmp
inc
mov
imul
xchg
inc
pop
adc
shl
xchg
mov
mov
enter
sbb
inc
push
and
mov
mov
and
mov
in
mov
jb
mov
lds
dec
mov
inc
sub
inc
and
pushf
rol
jns
jnp
push
mov
pop
out
hlt
sub
outs
mov
cs
daa
sub
push
imul
push
mov
xor
sub
stos
pop
inc
stos
test
outs
mov
cmp
dec
ds
xchg
ret
and
aam
fcmovnbe
arpl
fs
test
dec
or
in
stc
stc
add
sbb
dec
(bad)
test
push
sbb
imul
loop
in
(bad)
push
xchg
and
shr
test
mov
cmp
loop
fwait
lods
mov
and
and
stos
cmps
and
push
push
push
scas
js
adc
in
loope
inc
sbb
pushf
(bad)
adc
out
sub
or
sahf
fistp
jo
lds
pop
cmp
movs
test
add
mov
(bad)
cmps
inc
rcr
xchg
push
adc
jl
je
pusha
mov
and
in
push
jmp
mov
shl
cs
je
in
test
sti
cmp
idiv
dec
test
and
nop
or
sub
std
inc
iret
sub
jge
or
and
xor
xor
mov
inc
mov
in
aas
retf
shr
sub
loope
jmp
adc
xchg
inc
and
pop
ret
(bad)
stos
and
pop
int
(bad)
daa
std
in
jnp
stos
pop
pop
retf
add
mov
add
je
sbb
inc
pop
push
add
lahf
jmp
mov
jecxz
dec
(bad)
or
xor
loope
mov
dec
jecxz
js
popf
pushf
test
push
icebp
jl
bound
push
mov
mov
inc
inc
mov
(bad)
and
cmps
fld
sub
cmp
rcr
sub
pop
add
imul
add
mov
mov
stos
and
cmp
sub
sahf
scas
mov
(bad)
sbb
sbb
xor
push
nop
rol
nop
cmps
mov
push
dec
cmp
inc
xchg
retf
mov
cmp
or
xchg
(bad)
pop
xor
add
lods
enter
or
retf
iret
movs
cmps
lock
push
jp
xor
inc
add
mov
xor
jo
mov
inc
cmps
add
xlat
call
jb
jecxz
les
jg
movs
jle
stos
aas
(bad)
push
add
aas
xlat
aad
or
xor
mov
xor
rcl
inc
sub
dec
arpl
int3
pop
and
sbb
retf
adc
and
sbb
lea
mov
sar
js
movs
xchg
sub
push
and
(bad)
sub
push
iret
add
jne
sub
add
sbb
sub
mov
fild
push
imul
sbb
loop
lods
or
fisub
pop
hlt
mov
mov
adc
sub
jg
lock
stos
call
jmp
jne
adc
fcos
add
add
inc
cmp
xor
iret
sub
push
inc
add
adc
lods
jl
mov
in
mov
mov
push
push
sub
or
push
dec
lock
inc
inc
aaa
pusha
fsubp
fidiv
clc
mov
repnz
dec
sbb
or
or
(bad)
or
push
push
cmp
mov
cli
ins
mov
or
leave
xor
and
leave
sub
or
pop
mov
lock
pop
outs
ror
lea
aas
stos
xchg
xor
push
mov
inc
stc
(bad)
mov
mov
cmps
ds
stos
jno
dec
lds
pop
shl
fwait
cmp
sahf
cmp
adc
cmp
out
jmp
mov
mov
into
in
loop
inc
mov
mov
mov
cwde
loope
mov
scas
xchg
mov
cld
inc
leave
dec
hlt
mov
pop
mov
xlat
xchg
push
and
retf
dec
adc
repnz
xchg
dec
cmps
xor
jle
mov
jg
pop
in
mov
or
mov
mov
sub
std
mov
or
icebp
ss
mov
inc
bswap
cld
or
fcmovnu
xchg
jecxz
jne
cmps
call
cs
adc
mov
xbegin
in
add
mov
pop
and
xchg
(bad)
and
push
xchg
fmul
imul
cwde
imul
addr16
cli
xor
and
push
pop
stos
stos
sub
test
mov
das
and
stos
mov
push
ret
fld
jbe
fadd
call
pop
shl
loope
add
lods
mov
sub
mov
mov
fiadd
cmp
in
stos
xchg
mov
and
shl
push
cmp
inc
add
faddp
mov
inc
sub
out
rol
out
or
out
sbb
mov
pop
and
pushf
sbb
xchg
jmp
mov
jnp
dec
daa
pop
gs
push
xlat
mov
adc
test
cmp
fs
cwde
adc
pushf
push
jle
ins
imul
pop
mov
pop
push
movs
imul
jae
nop
inc
repz
mov
aad
mov
out
iret
push
and
mov
jbe
push
imul
xlat
push
pusha
mov
mul
and
mov
xor
jb
js
inc
fistp
(bad)
stc
adc
xor
imul
cmps
dec
cmp
inc
popf
shr
icebp
pop
push
enter
push
xchg
loope
in
mov
mov
dec
xchg
pushf
xor
fcomp
jne
je
test
pop
jg
jnp
aaa
es
data16
cmp
add
test
sbb
cld
xor
sti
pop
div
gs
push
loop
dec
xor
mov
xor
aam
and
stos
mov
add
lods
jnp
enter
add
jle
jp
jnp
je
movs
retf
rcl
div
xor
xor
stos
cmps
pop
call
cmp
scas
jb
add
sahf
loopne
mov
mov
mov
sub
push
mov
add
popf
pop
mov
mov
pop
in
iret
fld
iret
out
sar
xlat
sti
fwait
xor
mov
xchg
xchg
lds
scas
mov
mov
cs
ss
mov
fldln2
(bad)
int3
adc
xlat
and
dec
jg
push
(bad)
push
or
data16
inc
aaa
push
pop
push
repnz
aam
repz
add
sub
jae
and
sub
in
push
aas
imul
mov
cmps
sub
pop
push
test
lods
mov
ins
(bad)
ret
and
pop
mov
clc
mov
ret
inc
test
mov
sub
sbb
out
fld
lods
mov
sbb
cmp
ja
pop
ret
push
mov
dec
mov
loop
js
aad
sbb
or
pop
or
adc
iret
lods
lea
or
push
sbb
or
cmp
mov
iret
lods
sub
jp
xchg
add
sahf
pop
(bad)
in
aad
cs
xchg
inc
sbb
mov
sahf
mov
mov
jne
imul
pop
or
in
xchg
cmps
xor
push
addr16
and
(bad)
fdiv
imul
jns
fwait
push
cli
xchg
loop
inc
test
inc
or
adc
mov
shl
inc
das
sbb
mov
cmp
(bad)
adc
shr
jge
pop
ja
std
das
leave
or
mov
cmp
stos
test
sbb
out
jg
mov
dec
dec
push
icebp
lds
sub
push
inc
pop
and
cdq
out
outs
ins
lahf
xchg
outs
pop
mov
shl
inc
jge
mov
fldenv
mov
stos
adc
inc
sbb
push
loopne
dec
mov
jmp
sub
mov
pop
cli
sti
fwait
mov
clc
div
xor
(bad)
lea
cmp
jmp
mov
std
das
iret
sti
jg
adc
pop
test
mov
inc
push
cmc
add
aas
lods
iret
mov
mov
xor
into
mov
add
cmp
std
jg
repnz
cmp
cmps
cs
jne
add
sub
dec
cmc
pop
mov
cld
pop
sti
pop
jbe
add
sbb
clc
mov
add
iret
shl
(bad)
mov
sbb
lahf
inc
dec
ins
push
inc
push
pushf
lock
lahf
iret
cmps
sbb
mov
jnp
add
shl
popf
lea
jns
stc
dec
dec
movs
add
stc
jecxz
hlt
mov
mov
inc
fnstcw
and
das
mov
rol
mov
ds
lods
lea
push
ins
cmp
stos
std
fisub
xor
sub
jmp
lds
add
xchg
jae
jne
or
cld
add
(bad)
das
lods
(bad)
cli
mov
pushf
out
dec
das
mov
mov
fidiv
adc
sbb
lods
mov
mov
pop
xchg
lds
jmp
gs
add
dec
adc
cmp
add
arpl
repnz
test
popa
lds
fdivr
add
dec
push
sbb
xchg
pop
test
dec
and
cmps
lods
jle
xor
cs
shl
popa
test
(bad)
fstp
jo
cdq
dec
stos
movs
pop
test
(bad)
cmps
sub
jno
enter
add
mov
and
mov
shr
pop
push
mov
aas
fs
push
jl
and
push
adc
ret
outs
ins
fcmovu
int3
repnz
adc
push
cmps
mov
xchg
fisttp
sbb
push
add
mov
push
dec
std
and
pushf
mov
iret
inc
mov
retf
ins
adc
loop
push
dec
xchg
mov
adc
js
push
pop
push
ret
enter
and
retf
and
popfw
jg
xchg
mov
in
push
loopne
mov
or
jo
cmp
cli
mov
dec
xchg
mov
stos
popf
pop
pop
(bad)
or
call
pop
push
test
pop
jne
pop
pop
jne
jmp
lock
jg
repnz
rcl
adc
clc
shl
jle
sbb
loope
dec
fwait
retw
push
clc
imul
add
push
imul
adc
scas
aas
push
mul
mov
push
mov
nop
inc
push
lahf
push
lahf
dec
retf
js
push
xchg
fs
pop
push
xchg
aas
xchg
dec
sub
sbb
icebp
push
inc
adc
in
xchg
(bad)
pop
int
sbb
push
ja
inc
sub
add
dec
sub
in
(bad)
mov
div
xlat
aam
je
mov
dec
adc
dec
imul
push
sbb
fwait
(bad)
jb
mov
dec
je
in
or
movs
in
push
lds
and
movs
int
push
jno
dec
adc
pushf
stc
cli
je
pop
mov
dec
and
push
mov
adc
add
dec
cdq
loop
popa
and
repnz
pop
in
and
cmp
nop
je
icebp
outs
jge
(bad)
dec
adc
repz
jg
stos
(bad)
icebp
popf
mov
aas
cmp
mov
call
in
cmp
arpl
or
ss
mov
mov
sub
sbb
test
iret
popf
imul
xchg
pop
mov
dec
es
dec
inc
jecxz
out
test
or
push
dec
repnz
mov
call
push
pop
jp
scas
cmp
in
cmp
ja
or
aaa
sub
add
jns
mov
mov
popa
jmp
iret
ins
dec
mov
and
(bad)
aam
pop
mov
dec
mov
sub
les
xchg
pop
iret
mov
mov
mov
push
mov
dec
jno
fidiv
pop
dec
popf
mov
mov
push
shr
nop
jg
pop
lahf
xchg
push
sub
mov
outs
cs
lods
cmps
pop
inc
imul
pop
adc
xor
test
push
cmp
mov
fucomip
dec
neg
div
test
popa
push
inc
push
add
cld
inc
sar
cmp
test
cmp
mov
inc
inc
pop
add
std
xchg
fdiv
jmp
push
push
imul
rol
inc
movs
push
pop
not
iret
xlat
jmp
dec
and
and
xchg
push
test
imul
add
call
cmps
xchg
xor
cmp
out
push
aad
ja
imul
push
mov
mov
rol
jl
adc
das
mov
(bad)
and
in
repz
outs
in
mov
or
ins
fcom
pop
aam
push
in
cmps
out
stc
data16
pop
dec
xor
sbb
aam
pop
loop
push
ds
xlat
add
repz
lds
and
imul
mov
loopne
add
cdq
jl
mov
in
in
pop
addr16
jnp
popf
fld
inc
adc
and
sbb
jge
inc
mov
popf
es
(bad)
push
mov
cmp
push
mov
jmp
ins
sub
sti
scas
mov
dec
ins
push
inc
adc
stos
test
dec
sub
arpl
(bad)
sbb
or
inc
shl
push
out
pop
xlat
into
mov
jmp
call
popa
test
cdq
xchg
mov
movs
xchg
call
dec
adc
(bad)
movs
mov
outs
and
mov
and
ds
(bad)
push
xchg
push
rol
push
cli
mov
add
ret
dec
push
xor
sahf
add
enter
pop
mov
adc
dec
add
outs
imul
icebp
dec
sbb
xchg
sti
jp
inc
leave
sub
mov
dec
cwde
rep
cmp
jge
jmp
dec
addr16
sahf
call
das
rcr
out
retf
stos
ret
fsub
call
cdq
mov
push
stos
jnp
js
xchg
fs
lods
or
add
pop
pop
dec
cwde
xor
push
mov
and
cmc
repnz
sub
sub
inc
mov
sbb
mov
inc
pop
icebp
jg
ss
mov
(bad)
loop
cdq
rcl
in
jnp
inc
push
sub
sbb
xchg
fwait
mov
ins
mov
pop
and
rcl
xchg
mov
daa
cmps
scas
jmp
sbb
ds
push
mov
or
stos
shr
sub
imul
cmp
mov
pop
das
out
pop
pop
iret
ret
inc
pop
adc
arpl
inc
lahf
sbb
or
icebp
cld
and
and
cdq
lods
sub
sahf
arpl
sub
inc
jns
jne
sahf
aaa
repnz
outs
cli
pop
adc
mov
lahf
dec
cld
jnp
in
das
adc
or
ds
cld
mov
hlt
div
and
push
or
adc
ds
test
scas
inc
xor
mov
fwait
xchg
push
adc
mov
ror
add
jns
add
sbb
inc
jb
nop
adc
popf
and
ins
cmp
or
push
pop
test
push
mov
inc
mov
mov
pop
pop
dec
or
xacquire
adc
push
retf
loopne
xchg
out
mov
not
xlat
and
cwde
xchg
and
pop
push
xchg
movs
jae
adc
xor
call
or
div
inc
movs
mov
(bad)
(bad)
imul
dec
sbb
test
movs
xchg
push
rep
cmc
imul
xor
xchg
xor
dec
fadd
iret
mov
movs
aad
pop
push
sbb
in
test
push
mov
mov
mov
cmp
dec
ror
sahf
cdq
mov
pop
xor
dec
add
dec
inc
sub
call
push
test
cmps
lock
cli
pop
fmul
or
add
xchg
dec
out
stc
stos
pop
outs
xor
movs
movs
and
fs
adc
scas
icebp
fxch
xchg
cmps
retf
xor
cmps
pop
call
sub
sbb
bound
push
rol
jmp
pop
imul
(bad)
mov
pop
lahf
inc
stos
jnp
or
das
xor
ds
je
aaa
lahf
pop
int
mov
ret
sbb
mov
push
ins
inc
aaa
jge
adc
mov
xchg
cli
or
ds
mov
push
add
sbb
cld
call
mov
pop
pop
int
dec
mov
aam
mov
mov
inc
ror
push
sub
mov
pop
loope
sti
pop
arpl
push
mov
pop
adc
push
pop
iret
mov
mov
or
or
out
(bad)
hlt
mul
cmp
movs
mov
sub
dec
dec
mov
xchg
pop
ss
(bad)
mov
pushf
(bad)
xor
add
cli
pushf
push
test
xchg
pushf
xchg
mov
ret
call
sti
addr16
jg
(bad)
ins
push
std
pop
inc
mov
cmp
cmps
inc
aas
cmp
inc
in
call
iret
cmc
(bad)
cmps
push
sub
jb
or
cmp
sbb
sub
sub
xor
mov
neg
jae
and
iret
je
aam
inc
js
adc
jb
push
dec
mov
adc
dec
mov
mov
mov
lods
push
out
outs
sub
mov
push
aam
pop
add
adc
xor
pop
repz
push
dec
push
dec
add
add
call
push
and
in
adc
test
pusha
fxch
mov
sbb
pop
aas
and
dec
cmp
jge
or
movs
fnstenv
shr
imul
push
lods
in
inc
sub
mov
(bad)
xchg
mov
inc
sub
xchg
or
push
jmp
inc
lahf
bound
xchg
dec
or
test
mov
test
popf
stos
test
mov
cmc
repz
lods
cdq
fsubr
push
dec
lods
add
or
dec
dec
and
cmp
add
xchg
aas
xchg
pop
fwait
out
pop
xor
test
mov
arpl
fsubr
dec
aam
jle
sub
adc
dec
(bad)
popf
lahf
test
mov
aad
movs
jp
out
sbb
scas
test
add
adc
fdiv
xchg
sti
mov
mov
fbstp
stc
ins
lods
bound
retf
iret
adc
jecxz
mov
pop
ja
push
out
sub
aaa
rol
sar
les
push
daa
or
sub
cmp
(bad)
jmp
xlat
in
mov
push
xchg
scas
les
xchg
movs
cmps
nop
fs
xchg
xchg
(bad)
retf
int3
xchg
jmp
cmps
mov
jge
pop
sub
fisubr
(bad)
(bad)
xchg
sub
cmp
and
(bad)
inc
mov
imul
(bad)
out
jb
rcr
dec
enter
inc
jb
test
mov
dec
xor
xlat
adc
cmp
retf
mov
dec
ffreep
xor
test
repz
xor
retf
sar
(bad)
add
scas
outs
cs
mov
xchg
imul
bound
and
xor
push
repz
dec
out
(bad)
jmp
shr
shl
cmps
rol
mov
dec
inc
scas
jmp
inc
loope
scas
rcr
pop
xor
clc
push
call
push
enter
dec
pop
not
sbb
mov
icebp
in
xchg
mov
out
loopne
mov
pmulhw
jae
lock
scas
aad
int3
cli
data16
jge
push
push
sub
arpl
pmulhw
jae
fistp
mov
ja
xor
in
ret
xor
sahf
push
es
or
scas
inc
pop
dec
fwait
add
cmps
outs
adc
mov
jge
pop
ret
sub
adc
cmps
les
test
xchg
push
shl
(bad)
aaa
mov
into
adc
xchg
pop
stc
sbb
xchg
cmp
jno
pusha
(bad)
xor
fwait
sub
pop
jbe
xor
mov
xchg
movs
cmps
(bad)
push
dec
push
cmp
mov
add
sbb
aam
shl
or
inc
add
inc
int
xor
inc
iret
adc
out
sti
mov
inc
and
movs
cli
jp
inc
inc
sbb
xchg
xchg
push
pop
in
add
push
sub
xor
adc
mov
test
adc
pop
xchg
iret
push
mov
dec
jp
lahf
addr16
in
push
and
inc
or
inc
imul
or
sbb
out
jb
shl
popa
(bad)
icebp
in
jmp
xor
cmp
mov
js
addr16
add
add
pop
repz
in
icebp
das
pop
retf
test
jecxz
daa
add
retf
stc
cmc
retf
push
inc
pop
mov
in
jne
rol
cmc
js
gs
movs
push
mov
jge
outs
cli
mov
pop
in
push
sub
scas
aad
push
rol
and
gs
(bad)
mov
movs
jmp
jmp
push
mov
and
and
push
xchg
sub
cmp
aaa
repnz
sahf
call
stos
or
ret
lds
je
or
jae
lods
add
push
in
sub
inc
or
enter
daa
jmp
mov
xor
ret
das
mov
mov
jge
pop
mov
mov
iret
jb
test
dec
mov
sti
imul
or
add
or
enter
enter
les
xor
push
ret
xchg
inc
push
mov
inc
cmps
push
and
in
fnstcw
rcl
xor
retf
movs
xchg
xchg
arpl
test
sar
sbb
mov
mov
add
cld
cmp
lahf
mov
jmp
into
jbe
call
xor
mov
sar
cmps
in
cld
add
fld
xchg
rcr
repnz
dec
leave
xor
sub
add
stos
sub
rol
jecxz
(bad)
sbb
cmps
pop
neg
dec
stc
imul
sbb
es
mov
xchg
fldenv
add
cmp
jne
imul
push
push
jmp
inc
jl
sub
popa
xchg
leave
sub
xor
push
inc
mov
xchg
stos
fcomp
nop
inc
pop
std
pusha
idiv
out
lock
pop
pop
adc
adc
retf
xchg
call
mov
cmc
ja
mov
js
pop
arpl
dec
jle
adc
ret
jns
aad
sar
jp
in
popf
cmps
mov
call
inc
js
imul
scas
mov
dec
int
xor
idiv
xor
adc
rol
pop
icebp
push
jmp
ss
ret
add
add
ret
out
jmp
inc
mov
pop
jmp
push
mov
daa
inc
outs
into
cmps
and
dec
and
jge
cmp
mov
dec
or
sub
retf
retf
mov
loope
adc
stos
inc
add
xchg
std
cmp
lahf
mov
push
mov
push
pop
loop
add
loope
mov
mov
cmp
jae
jno
fisttp
stos
and
adc
or
sti
add
mov
cmp
int3
cmps
(bad)
sbb
lds
push
mov
aam
int3
fwait
pop
mov
jno
stos
and
push
lahf
in
cmc
fs
push
ss
push
test
xchg
outs
fisubr
inc
jae
leave
and
mov
sub
mov
enter
adc
movs
sub
pop
in
(bad)
cmp
out
neg
and
push
push
xchg
pop
inc
and
push
push
mov
in
jle
jae
std
out
mov
pop
les
ins
sub
push
mov
push
mov
inc
inc
sub
cmp
daa
gs
int
mov
and
int3
sub
mov
in
push
(bad)
repnz
push
ss
movs
shl
push
pusha
(bad)
mov
or
(bad)
shl
loope
stc
jle
(bad)
dec
cmc
mov
or
sub
push
push
pop
cmp
and
mov
push
mov
add
ds
jbe
mov
sbb
xchg
pusha
inc
(bad)
cdq
mov
bound
mov
push
jno
stos
cwde
xlat
jmp
xor
shl
pop
mov
jp
fild
leavew
bound
xor
idiv
(bad)
mov
mov
cs
pop
pop
adc
mov
sub
aas
aaa
mov
imul
or
xchg
push
ds
lahf
fcmovnbe
add
xchg
jmp
dec
mov
movs
mov
sub
xor
imul
sub
out
inc
int
lahf
(bad)
pop
mov
ins
pop
adc
jg
ret
jmp
shr
into
addr16
inc
jb
bound
dec
fcmovnbe
mov
aam
adc
arpl
mov
popf
jp
mov
xor
cld
test
mov
xor
xor
inc
into
and
into
je
dec
mov
or
rol
push
in
dec
cmc
jnp
jns
gs
inc
or
xor
ret
fmul
loope
jns
call
sbb
inc
and
add
test
inc
or
adc
aad
lods
icebp
dec
push
or
mov
retf
or
sahf
adc
lods
or
fidivr
mov
cmps
and
xor
stc
icebp
sbb
pop
gs
out
cwde
fwait
inc
aaa
xchg
and
add
dec
lahf
lahf
push
(bad)
lahf
pop
cmc
cmps
xchg
jg
mov
xor
jo
or
leave
xor
aaa
push
mov
mov
icebp
dec
loopne
dec
nop
pop
ret
push
in
pop
lahf
iret
shl
sbb
iret
pop
add
std
cmps
add
cmp
ja
repz
or
(bad)
and
ficomp
(bad)
out
dec
cwde
test
int
out
add
inc
and
inc
jge
inc
mov
je
rol
sub
leave
arpl
mov
(bad)
call
or
xchg
int3
pop
xchg
fst
mov
jecxz
xchg
pop
inc
sbb
(bad)
rcl
mov
mov
pop
mov
outs
imul
xlat
mov
xor
push
sub
mov
xchg
outs
xchg
or
nop
neg
add
shl
mov
pop
pop
dec
mov
arpl
mov
dec
adc
jmp
dec
sub
retf
cmp
sub
cmp
pop
pop
stos
enter
sub
adc
and
dec
jle
mov
and
dec
pushf
sub
movs
mov
popa
inc
mov
loop
adc
and
icebp
scas
xchg
inc
lahf
dec
pop
mov
aad
adc
test
mov
jmp
mov
inc
xor
mov
xor
xor
loopne
jb
scas
aas
ins
jp
(bad)
test
mov
push
movs
xor
and
add
push
je
jnp
mov
es
push
jle
movs
sahf
inc
push
xor
jbe
dec
lea
out
sti
mov
adc
pop
push
adc
jns
nop
lods
cmp
mov
adc
add
adc
popa
out
jns
mov
mov
mov
jmp
pop
mov
jecxz
xchg
rol
xchg
outs
outs
or
mov
pop
arpl
sbb
sahf
sbb
movs
vmread
jg
xor
jno
aam
data16
pop
aaa
mov
in
js
jno
jg
ror
push
inc
xor
mov
pop
adc
push
movs
lods
sbb
jae
mov
(bad)
jge
dec
loop
aad
sbb
mov
aas
xor
dec
mov
push
pop
add
pop
mov
cli
jno
jge
cmp
ja
ror
mov
xor
imul
pop
mov
jecxz
pop
xor
push
add
sbb
xchg
adc
add
frstor
icebp
xor
addr16
cmp
(bad)
cli
xor
mov
add
out
add
ds
mov
ins
pop
shr
or
push
inc
imul
inc
mov
repz
push
test
imul
sbb
repnz
fstp
sar
push
mov
jns
movs
jae
mov
mov
sti
mov
add
mov
sbb
and
pop
jecxz
hlt
cmp
arpl
cdq
sahf
pop
mov
jbe
sbb
movs
inc
add
and
xchg
movs
mov
or
cwde
mov
loopne
scas
mov
push
rol
xor
xor
mov
shl
sti
jp
fdivr
jae
fxch
jns
lods
in
(bad)
push
push
inc
jg
test
push
shl
je
test
dec
xchg
jmp
inc
pop
test
adc
and
xor
shl
cli
std
jge
cmp
call
jmp
cmps
daa
daa
in
(bad)
repnz
cmp
mov
into
jge
fs
dec
test
lods
dec
pop
adc
pop
push
in
cmp
ror
(bad)
arpl
push
(bad)
mov
add
mov
js
add
(bad)
jge
adc
loopne
pusha
mov
mov
mov
sub
fst
pop
mov
sub
pop
imul
xor
adc
sub
aad
pop
int3
push
nop
inc
xor
fistp
mov
div
jge
dec
inc
lea
aam
mov
call
sti
push
cmc
adc
sti
enter
in
cmp
pop
mov
cmc
and
add
push
and
sub
je
mov
aad
(bad)
arpl
sbb
or
cdq
add
lahf
test
pop
xchg
dec
sub
cmc
push
pop
mov
inc
in
jmp
out
xchg
or
jbe
test
out
mov
ret
sbb
retf
cmps
nop
das
imul
jg
outs
add
shr
add
dec
(bad)
inc
xor
ds
add
jmp
fidiv
dec
daa
test
addr16
test
gs
mov
xchg
dec
cmp
and
(bad)
cmc
jge
dec
(bad)
xchg
jmp
lds
xlat
out
jle
sub
ret
pusha
xchg
mov
dec
imul
test
pop
pop
int3
sbb
fst
xor
and
or
sbb
mov
add
in
cmp
or
or
inc
mov
mov
pop
and
inc
es
mov
sti
sbb
(bad)
loop
fs
mov
sbb
xor
sbb
shr
mov
jnp
jg
aam
push
jmp
cli
nop
sub
sbb
enter
daa
and
je
imul
cmp
fstp
push
add
dec
xchg
mov
push
and
xchg
push
(bad)
loope
dec
mov
iret
mov
mov
and
add
lahf
mov
xor
sub
outs
ret
add
test
cwde
jecxz
std
mov
jns
retf
inc
sub
push
push
in
xchg
or
dec
push
xor
inc
pop
mov
xchg
cbw
stos
daa
stc
retf
fwait
std
ds
mov
sub
stos
inc
mov
cmps
cmp
aas
lahf
lahf
push
mov
adc
sub
cmps
cmps
jge
test
push
and
in
adc
mov
daa
and
repnz
jne
lds
hlt
xchg
cmp
jno
pop
fldz
push
dec
popa
mov
push
push
pushf
add
pop
js
movs
and
jno
xchg
push
dec
(bad)
loope
into
sub
inc
fsubr
ins
mov
mov
lea
add
push
and
dec
mov
mov
fcmovnu
add
js
and
cmp
sbb
mov
mov
test
cdq
iret
pop
idiv
push
ss
mov
adc
push
movs
test
rcl
dec
inc
xchg
les
(bad)
gs
mov
es
cmps
xor
xchg
mov
push
sbb
test
pop
ror
mul
push
in
jmp
fistp
mov
xor
dec
push
and
aam
mov
cmp
inc
dec
bound
scas
ins
out
pop
push
in
dec
scas
inc
dec
cs
sub
dec
jl
xor
add
inc
cmp
dec
cmp
cmps
out
lahf
fistp
addr16
or
sub
(bad)
jno
aam
cmp
and
mov
xchg
adc
enter
add
aaa
cld
lahf
jae
div
mov
(bad)
adc
jle
jg
popf
inc
sbb
mov
aaa
mov
enter
aas
push
sub
add
aam
leave
inc
vpsubb
hlt
mov
xchg
movs
test
dec
or
and
or
or
outs
dec
add
rol
push
daa
(bad)
fdivr
pop
dec
aas
pop
push
bound
mov
cmp
and
scas
dec
jg
xor
dec
cdq
test
test
sbb
push
push
movs
or
dec
fistp
sbb
and
add
dec
cmps
cmovg
mov
sub
std
mov
sti
movs
cwde
pop
fiadd
cmp
xchg
test
add
cmp
std
sbb
inc
sub
test
and
iret
movs
aas
scas
dec
mov
mov
mov
cmp
push
out
sub
dec
neg
pushf
ficomp
jp
add
or
add
mul
ds
and
(bad)
mov
shl
cmp
gs
push
and
stos
adc
fucomi
in
int3
jno
push
mov
retf
xor
mov
xor
dec
sbb
and
push
imul
fcmovb
div
push
ja
jbe
add
arpl
push
or
jno
xlat
cld
fild
cdq
(bad)
js
mov
dec
mov
pop
adc
cwde
inc
je
mov
mov
inc
and
and
mov
mov
dec
sbb
cmp
test
cmps
outs
arpl
mov
adc
movntq
out
shl
pop
xor
and
push
pop
and
jns
xchg
lock
and
fisubr
or
in
and
dec
adc
lahf
in
mov
inc
adc
cld
jle
push
popf
dec
push
nop
movs
(bad)
push
cmp
and
les
mov
loopne
pusha
push
sub
rol
icebp
imul
or
je
xlat
dec
je
scas
xchg
add
jl
mov
or
pop
cmp
es
add
nop
xor
push
xchg
sbb
in
cmp
jae
repnz
inc
xchg
movs
js
sahf
or
rcl
cmps
dec
mov
movs
lea
mov
mov
ss
push
in
cdq
sbb
clc
mov
inc
xchg
push
movs
stos
mov
repz
sub
cli
xchg
mov
and
repz
and
cmp
xchg
mov
outs
in
fdivr
jbe
ins
repz
sub
or
xchg
xor
add
test
cli
sbb
xchg
pop
and
add
(bad)
ss
push
and
add
sbb
retf
fbld
sbb
outs
pop
add
and
inc
call
add
inc
dec
ins
pop
clc
sti
mov
or
inc
pop
push
cld
sahf
test
mov
in
add
mov
adc
xchg
mov
jno
icebp
repnz
inc
jns
arpl
mov
jo
push
cmp
fild
mov
add
lahf
sbb
xchg
cmp
out
push
shl
mov
mov
arpl
(bad)
popa
jmp
mov
loope
test
mov
jl
and
fistp
sbb
xlat
loope
(bad)
cmp
inc
enterw
sahf
push
lods
xchg
mov
aad
div
xor
xor
out
push
dec
or
pop
fisttp
mov
sbb
inc
adc
mov
add
push
movs
stos
xor
std
cmp
jecxz
xchg
int3
mov
xchg
push
into
push
sub
mov
sub
pusha
aas
(bad)
(bad)
pusha
mov
outs
ins
loop
bound
and
dec
or
jge
test
ins
and
dec
retf
add
cmp
stc
push
xor
stc
in
sub
scas
jne
mov
push
mov
test
xor
xchg
push
movs
stos
test
fwait
push
push
cmp
hlt
pop
outs
push
imul
repnz
add
test
lahf
pop
sahf
scas
adc
das
imul
enter
femms
daa
and
adc
dec
fcmovnbe
gs
sub
icebp
push
jae
mov
and
mov
mov
sbb
sub
pop
sub
aam
test
or
jmp
ret
mov
in
imul
stos
aas
shl
pop
ret
pop
adc
(bad)
cmp
(bad)
(bad)
fld
xor
or
pushf
push
or
or
rcl
hlt
inc
ins
aam
cli
lds
push
mov
mov
sub
mov
push
out
scas
mov
in
or
mov
xlat
dec
push
cmps
adc
fsubrp
adc
mov
xlat
dec
add
enter
sahf
mov
jmp
rcl
xchg
ret
or
nop
lods
jb
in
imul
cmps
mov
sti
or
jne
fdivr
ror
jmp
inc
fwait
(bad)
movs
cli
icebp
rcr
out
popf
pop
mov
imul
xchg
adc
fldcw
movs
sti
addr16
jno
sbb
bound
rcr
inc
fild
lods
add
daa
sbb
dec
jns
pop
jno
jge
ret
jge
pop
mov
xchg
loop
stos
dec
fs
aam
(bad)
pop
add
lds
(bad)
dec
in
mov
out
fwait
adc
pop
test
mov
and
xchg
lahf
inc
popa
bound
aaa
mul
mov
sti
jbe
push
fwait
mov
push
inc
or
xchg
pop
xchg
inc
in
in
ss
gs
push
ret
loope
push
out
inc
jl
stc
jo
call
push
out
arpl
mov
test
sub
mov
jo
cmps
in
xchg
ins
mov
(bad)
int
xor
or
add
pop
xchg
mov
fsub
out
sahf
xchg
xchg
stos
jl
fcos
add
lahf
sub
inc
cmp
push
cdq
xor
dec
xor
fiadd
mov
outs
pusha
(bad)
jnp
sub
sbb
retf
sbb
sbb
cwde
bound
sub
push
xchg
test
popf
push
fadd
xlat
push
loope
inc
ja
sub
inc
add
jno
test
(bad)
mov
inc
lods
push
add
jbe
inc
stos
and
ret
fldenv
jmp
pop
sbb
xchg
cmp
inc
dec
sub
jl
dec
test
jge
outs
dec
sub
ds
je
cmp
enter
push
pop
dec
sub
sbb
cmp
push
dec
add
add
push
aam
ja
mov
scas
out
or
stos
and
dec
xchg
movs
add
not
xor
dec
jecxz
mov
push
push
xor
movs
add
shr
lods
xor
inc
sub
fild
xchg
or
mul
stos
xor
cmc
and
sub
cwde
shr
jge
test
or
cwde
daa
(bad)
jns
movs
mov
xchg
cmps
jo
pop
in
pusha
jl
dec
retf
mov
mov
mov
add
cmc
inc
aas
cs
inc
aad
ja
ja
outs
test
nop
mov
test
movs
icebp
push
mov
lods
in
clc
sahf
fsubr
(bad)
sar
jmp
sbb
fcom
add
add
cli
(bad)
into
imul
fcomp
ss
dec
push
movs
fst
loop
cdq
add
xchg
rol
mov
xchg
push
(bad)
mov
(bad)
in
pop
std
(bad)
mov
mov
add
jp
xchg
stos
loop
jmp
imul
imul
icebp
cmc
mov
add
jmp
mov
push
xchg
pop
rcl
scas
daa
push
in
pop
push
cli
pop
bnd
jecxz
(bad)
movs
js
cmp
sub
pop
xor
or
pop
xchg
jg
hlt
div
push
leave
mov
ins
xor
mov
(bad)
sub
pop
in
hlt
jmp
and
mov
test
sub
pop
mov
or
cld
xchg
(bad)
lods
je
xchg
fs
inc
pop
repnz
test
mov
lods
sbb
aas
outs
dec
nop
ret
std
aas
ret
add
std
jge
jns
or
mov
cwde
aaa
cmps
pop
pop
push
pusha
jmp
or
call
lds
jo
cmps
mov
sub
dec
pop
fisttp
xor
in
and
sub
bound
fisttp
dec
add
arpl
fnstsw
ss
xchg
pop
dec
sub
push
push
mov
pop
(bad)
sbb
push
dec
add
cmc
mov
pop
mov
loop
jo
push
cmps
dec
sub
jmp
pop
jo
retf
loopne
nop
sar
sti
ds
cdq
jmp
pop
dec
sbb
add
push
je
push
push
gs
int3
movs
pop
idiv
jnp
cdq
bound
retf
xchg
dec
repnz
adc
repnz
pop
sbb
jmp
cwde
xlat
jb
mov
cmps
or
xchg
pop
jmp
ror
push
mov
sub
dec
scas
scas
mov
loope
(bad)
or
xchg
cmc
int
jg
mov
fisub
sbb
cmp
sub
in
repnz
pop
fs
into
(bad)
xor
xor
aam
mov
push
sub
ret
cmc
sub
xchg
mov
repnz
out
cs
or
test
mov
movs
jno
aam
and
leave
pop
int
cmp
pop
imul
pop
mov
mov
std
inc
ins
or
punpckhdq
cmp
arpl
jecxz
inc
and
push
mov
call
mov
(bad)
dec
xchg
pop
inc
and
add
test
rep
movs
jbe
sbb
neg
xchg
and
mov
xchg
cdq
lods
loopne
mov
sbb
scas
sub
cli
inc
push
popa
push
push
push
inc
nop
jp
imul
xchg
pop
adc
es
jmp
push
sar
inc
adc
ret
jg
mov
(bad)
in
mov
in
add
dec
mov
push
pop
sub
rcr
sub
pushf
shl
inc
xchg
xchg
aas
(bad)
jp
jmp
mov
mov
cs
in
xchg
push
xchg
(bad)
enter
repz
jle
jmp
sub
push
test
mov
movs
xchg
inc
mov
xchg
pusha
push
mov
inc
arpl
popf
mov
push
in
pop
div
mov
xor
(bad)
nop
stc
jl
aad
hlt
pop
push
push
push
(bad)
out
cmps
mov
sar
or
push
std
inc
std
jle
aam
mov
fisubr
stos
xor
sub
cmp
leave
cmp
dec
lods
arpl
inc
pop
adc
dec
cmp
iret
in
mov
add
cs
xor
push
jg
mov
cmps
ins
adc
ror
lods
mov
icebp
pop
ds
mov
pushf
stc
cli
push
movs
push
sar
adc
add
imul
inc
push
xchg
xor
repz
xchg
jb
ret
jne
pop
pop
call
imul
pop
into
mov
ret
inc
inc
data16
xchg
cmp
shr
push
pop
scas
sbb
mov
pop
ins
cwde
fs
xchg
mov
mov
xor
jno
ins
rcr
lods
jge
or
(bad)
(bad)
xor
in
out
and
mov
mov
test
mov
out
jno
sti
retf
lock
pop
xor
push
loope
hlt
dec
mov
jmp
adc
add
mov
pop
cmp
lea
pop
fild
cmp
or
xchg
add
sbb
retf
push
jmp
lock
add
cmc
push
(bad)
add
repnz
je
adc
mov
hlt
jmp
call
push
pop
mov
mov
fld
pop
mov
pop
sbb
add
cmps
xchg
repnz
jmp
loop
add
movs
(bad)
pop
inc
push
mov
lahf
in
jne
cmp
stos
mov
popf
stos
ss
pop
xor
add
leave
push
dec
sub
xchg
mov
cmp
and
fs
sub
loopne
push
add
loope
and
popa
retf
pop
imul
mov
xchg
jnp
inc
cmp
adc
fisubr
dec
mov
test
pop
or
cdq
dec
into
or
mov
shl
push
xchg
repnz
xor
stc
mov
xchg
(bad)
adc
push
cmps
dec
sub
icebp
mov
sub
xchg
rcl
scas
movs
std
sub
fistp
pop
enter
sbb
cmp
xlat
retf
retf
(bad)
lahf
dec
es
xor
pop
movs
cli
lock
mov
sub
inc
aaa
dec
aaa
fnstenv
je
ret
lods
lods
mov
sbb
enter
(bad)
sbb
or
mov
or
(bad)
jae
mov
mov
mov
iret
retf
imul
fmul
or
stos
rcr
add
scas
xchg
pop
inc
test
mov
xor
dec
repnz
mov
sbb
xor
sub
jne
in
cmp
loop
add
pop
sbb
add
ds
int
int3
cld
cli
inc
out
and
lods
stos
xor
in
push
arpl
xchg
cmp
cmps
sub
movs
out
dec
add
fcomi
add
out
add
dec
and
mov
jl
aam
jmp
movs
ret
mov
aas
dec
sbb
lods
fcmovbe
aad
sub
ins
je
push
test
sub
scas
sub
ins
mov
sub
into
inc
xchg
shl
dec
sub
push
aam
enter
xor
mov
push
adc
cmp
jns
sahf
sbb
mov
xchg
pop
fcmovb
inc
es
test
aad
movs
mov
shl
movs
inc
shl
imul
sti
xchg
lods
or
xchg
dec
or
and
add
push
sbb
pop
inc
or
cs
pop
xchg
inc
aad
xor
sub
dec
inc
mov
ds
jle
in
sub
xor
mov
mov
xchg
dec
dec
push
retf
jb
sub
outs
gs
(bad)
or
push
stos
cmp
inc
adc
cs
and
cmp
mov
lods
dec
mov
fwait
aad
add
mov
or
daa
int
cmps
cmp
mov
add
mov
dec
dec
mov
sbb
popa
xchg
ins
sub
(bad)
sbb
arpl
adc
cli
loop
out
mov
or
push
xor
aad
jo
outs
call
and
out
fidiv
mov
push
daa
and
xor
dec
jo
movs
test
push
nop
mov
(bad)
and
xchg
ret
or
sbb
div
jnp
fcmovu
movs
mov
gs
stos
call
jo
cli
daa
xchg
dec
js
mov
cmps
cdq
hlt
jmp
jmp
test
mov
(bad)
test
or
inc
mov
push
movs
inc
dec
imul
shl
clc
and
jg
aas
cmp
mov
mov
xchg
jnp
or
sbb
data16
lock
mov
jmp
cmp
cmps
stos
sahf
mov
push
mov
jmp
add
dec
xchg
push
sbb
adc
or
inc
or
std
pop
in
ja
jno
popf
mov
add
in
ds
mov
inc
jecxz
bound
sbb
cwde
imul
ficomp
pop
add
mov
ins
sub
cmp
jmp
ins
rcl
dec
push
lods
inc
sub
retf
mov
adc
add
sar
mov
jge
(bad)
mov
pop
pop
int
inc
into
js
push
xchg
inc
or
aas
fdivr
jae
test
(bad)
mov
mov
add
mov
adc
sub
mov
les
in
call
cmp
test
adc
add
jge
ins
cmps
push
mov
mov
xlat
push
int3
mov
sub
pop
fimul
dec
sub
clc
cli
mov
jg
jmp
ds
bound
pop
pop
push
aaa
mov
mov
retf
cs
jg
icebp
outs
cmc
mov
lock
jmp
aas
mov
cwde
les
fucomip
inc
out
outs
jge
jmp
add
out
mov
enter
or
mov
inc
jne
mov
and
xor
fsubr
cmps
push
fsubr
aas
rcl
leave
fistp
stc
mov
fwait
ret
sub
push
sbb
test
popf
leave
push
in
inc
sti
mov
mov
add
inc
mov
fstp
outs
mov
mov
jmp
jp
out
div
in
adc
test
push
repz
jp
jb
nop
test
popa
leave
mov
sti
adc
mov
movs
cmc
add
mov
int3
hlt
cwde
call
mov
jmp
daa
mov
repz
jg
inc
in
fldenv
sub
push
in
fdiv
mov
jp
xchg
xgetbv
mov
ins
mov
sbb
adc
dec
jecxz
nop
mov
fdivr
bound
(bad)
add
pop
xor
ds
mov
push
loopne
pop
inc
mov
jns
cmps
lahf
adc
jge
idiv
push
xchg
imul
push
fnsave
jno
mov
xor
mov
sub
or
bound
or
in
stc
mov
mov
stos
lea
xchg
cmp
fist
dec
sub
iret
push
not
mov
and
dec
cmp
sar
mov
icebp
repnz
xor
sbb
(bad)
jne
jge
pusha
mov
imul
sbb
dec
enter
xchg
xor
and
mov
(bad)
lds
fadd
adc
push
call
dec
and
in
xchg
jecxz
cmp
aaa
cmp
mov
not
movs
pop
pop
repz
ins
mov
jne
out
or
sub
(bad)
adc
xlat
repnz
scas
dec
sub
outs
and
ret
jecxz
xchg
mov
xchg
mov
mov
inc
sub
mov
into
jns
fld
je
loop
pop
test
adc
sub
dec
(bad)
sub
dec
mov
outs
aaa
sbb
call
jp
xor
adc
xchg
test
stc
and
call
xchg
xchg
mov
std
and
div
inc
pop
and
add
retf
sbb
inc
icebp
cmps
sub
fisttp
add
fnstenv
in
sbb
(bad)
mov
ret
fcmovne
jno
mov
push
stos
mov
je
lods
mov
jg
mov
addr16
test
xchg
and
inc
stos
std
pop
retf
cmps
das
loope
into
pop
inc
mov
cld
jo
jp
daa
and
ret
jmp
or
setns
std
mov
add
fsubr
xor
lock
jnp
leave
inc
js
mov
aaa
repnz
retf
mov
out
push
adc
mov
adc
pop
mov
enter
xor
ins
and
and
idiv
and
jmp
add
push
xchg
push
mov
jno
mov
push
push
out
pop
loopne
or
xchg
fist
mov
scas
xchg
loopne
test
mov
cs
push
dec
adc
fist
mov
hlt
mov
sub
and
dec
dec
push
lds
fstp
out
push
pop
jbe
(bad)
xchg
out
inc
or
sub
add
xor
inc
mov
xor
push
add
fcomip
pop
xor
mov
mov
inc
arpl
mov
jno
push
sub
cmp
neg
(bad)
jns
ins
cmp
mov
push
mov
test
jge
je
lahf
outs
dec
fbstp
jne
dec
mov
adc
or
dec
data16
rcl
inc
cmp
pop
ins
xor
out
and
shr
int3
cmp
cwde
mov
lock
iret
mov
xchg
in
ja
jmp
mov
cmp
cmps
cmp
xchg
cmp
push
aad
lock
sbb
push
jmp
aad
pop
sbb
pop
push
(bad)
pop
push
cmp
mov
mov
icebp
(bad)
aas
dec
jae
push
cmps
imul
fisubr
push
fs
xlat
lea
xlat
mov
out
sub
mov
mov
sahf
imul
cmps
xchg
cmp
jb
adc
sti
lods
repnz
mov
fld
arpl
out
jno
push
cmp
jg
mov
sbb
mov
xlat
mov
imul
aas
shl
(bad)
out
xchg
int
outs
add
dec
xchg
cmp
xor
fwait
jp
cmc
jno
pop
loope
bnd
sub
jnp
dec
xchg
dec
xchg
mov
or
inc
xchg
mov
stos
mov
add
mov
ja
arpl
mov
enter
cmp
movs
pop
mov
cmp
sbb
lds
cmp
es
adc
xchg
pop
scas
push
jnp
mov
jbe
sbb
or
call
adc
jmp
ja
xchg
adc
sub
aaa
test
jne
cmc
loope
bound
and
push
aas
adc
loope
jge
pop
mov
(bad)
jl
into
retf
lea
xchg
mov
inc
xchg
cmps
mov
and
retf
in
(bad)
int
call
je
fs
xchg
je
xor
push
xor
sbb
aam
lods
jae
jmp
pop
(bad)
in
push
(bad)
mov
adc
scas
mov
jno
adc
scas
xchg
cmps
cwde
xor
jns
(bad)
pop
in
sbb
cmp
xchg
inc
mov
pushf
fcomp
daa
xchg
pop
mov
push
dec
inc
push
dec
sub
sub
movs
add
mov
xor
push
dec
out
xchg
js
xor
sub
dec
push
lahf
push
pop
outs
push
ror
mov
or
sub
mov
popf
add
dec
jnp
cmp
xchg
sub
add
in
jmp
push
jecxz
shr
mov
lock
mov
xchg
dec
sti
xor
cld
sbb
fld
cmp
inc
cmps
pop
xchg
mov
ja
in
sar
xchg
and
jbe
lds
ins
sar
push
dec
adc
mov
and
out
mov
ficomp
lods
repnz
xor
lods
inc
pop
test
sbb
call
test
aad
scas
cmps
mov
push
push
adc
sbb
pop
fsubp
push
bswap
scas
jg
push
sbb
popa
mov
movs
mov
and
adc
leave
cmps
out
aas
mov
sub
jno
outs
adc
jmp
push
call
shr
es
cmp
sahf
retf
jmp
pop
inc
add
movs
movs
leave
push
sar
inc
mov
mov
xchg
add
(bad)
mov
inc
loop
or
add
jbe
ss
cmps
sahf
mov
cmps
inc
lock
imul
xor
mov
in
mov
pop
icebp
loopne
add
jae
cld
pop
mov
add
xchg
rcr
xor
stos
shr
xor
arpl
sub
repnz
lods
cs
ins
mov
mov
(bad)
jne
xor
add
sar
xlat
test
lahf
cmp
arpl
pop
dec
push
mov
es
jo
add
mov
sbb
repz
pop
rol
fisub
aam
pmuludq
out
dec
dec
dec
sbb
pop
inc
xchg
arpl
inc
cmc
inc
(bad)
aad
in
cmps
imul
(bad)
jge
pop
outs
fisttp
movs
stos
rcl
fdivr
mov
loop
cmp
daa
jmp
in
cdq
push
ret
add
or
and
push
jecxz
nop
cdq
pop
push
adc
push
mov
mov
movs
add
jecxz
jg
outs
in
xchg
pop
gs
sub
out
rcl
or
shr
add
rep
mov
xlat
fild
jp
xchg
cmp
mov
xchg
sub
cdq
call
movs
push
xchg
mov
dec
fwait
dec
and
aas
jge
fild
adc
rcl
add
jmp
cmps
jecxz
ret
push
js
dec
leave
lods
add
aas
and
into
inc
call
push
xor
pushf
cmovge
stc
mov
push
push
mov
or
movs
cmps
popf
and
pop
sub
xor
es
fidivr
in
or
xchg
stc
xchg
pop
dec
jns
call
xchg
ja
ja
sbb
or
jmp
push
xchg
and
xchg
aad
in
daa
mov
adc
jne
call
or
push
jle
out
cmps
pop
cmps
sahf
and
add
(bad)
shl
out
ret
push
lahf
dec
adc
out
adc
push
and
pop
lahf
push
adc
out
aad
fwait
shl
mov
or
xor
add
adc
inc
nop
lods
push
daa
jnp
inc
popf
hlt
fcom
pop
jae
pop
mov
js
jno
inc
mov
leave
adc
(bad)
ror
push
movs
(bad)
pop
pop
loope
inc
fist
imul
ror
dec
daa
test
les
add
pushf
dec
inc
inc
add
pop
push
fwait
in
jmp
(bad)
jmp
jno
jg
lods
jmp
mov
jg
cmp
outs
idiv
fisubr
pop
int
pop
push
(bad)
push
inc
jg
jb
fistp
std
sub
cli
repz
cli
pop
fdiv
in
sub
mov
(bad)
cmc
movs
jae
scas
cmp
dec
pmaddwd
cld
inc
mov
jno
cmp
mov
xchg
(bad)
scas
cmc
jp
jmp
icebp
imul
(bad)
neg
ror
fsub
cdq
pop
nop
movs
jp
inc
and
mov
cmc
xor
outs
cmp
cmp
push
add
gs
add
inc
bound
pushf
je
cmp
pop
jp
mov
cmp
inc
mov
inc
dec
mov
jne
inc
dec
mov
add
xchg
pusha
mov
outs
add
mov
add
and
inc
sbb
dec
mov
adc
cld
mov
cs
mov
xchg
mov
push
lds
mov
adc
imul
push
xchg
test
fs
std
les
mov
ficomp
xor
dec
pop
sbb
add
jp
jno
inc
mov
pop
and
dec
fcmove
mov
sbb
push
mov
mov
jmp
cmp
sub
enter
imul
pop
mov
jae
and
add
shl
inc
(bad)
test
repz
mov
pop
pop
ds
push
cwde
stos
or
lock
mov
mov
jno
ss
jmp
mov
add
retf
mov
cmps
test
mov
pop
mov
xor
inc
mov
xor
stos
sub
jnp
stos
ss
xor
adc
fistp
rcr
xor
in
and
sbb
push
dec
nop
cmp
lahf
jmp
bound
dec
push
sar
mov
adc
push
mov
jle
imul
push
rcr
adc
xor
lea
push
jmp
fimul
in
imul
or
and
lahf
xchg
imul
sub
mov
call
mov
pop
push
test
jg
inc
popf
mov
push
pop
adc
cmps
or
(bad)
cmp
std
push
jmp
fdiv
push
retf
push
push
mov
mov
hlt
push
dec
and
and
adc
xor
adc
dec
loope
jecxz
pushf
cld
mov
sub
shl
gs
mov
push
jle
popf
cmp
es
hlt
rol
rcl
xchg
xchg
mov
push
dec
data16
push
mov
rcr
call
ret
mov
add
pusha
hlt
gs
retf
sub
xor
fchs
retf
movs
(bad)
popf
imul
sub
dec
xor
jbe
fs
cmps
fwait
and
call
cmp
dec
lds
pop
jae
ds
ret
fcmovnu
sbb
lods
movs
add
pop
push
cmps
add
mov
sub
cmps
imul
(bad)
repnz
sub
js
pop
mov
cmps
inc
loopne
mov
mov
xor
and
add
jnp
jns
cmc
scas
mov
dec
imul
cmp
pop
add
adc
sahf
lahf
xchg
inc
pop
jns
and
jmp
jecxz
dec
add
gs
ins
fpatan
repz
mov
mov
pop
dec
out
clc
mov
add
push
mov
xchg
ror
in
stc
hlt
out
dec
push
inc
mov
test
fmul
add
sub
call
push
gs
inc
mov
push
adc
enter
rol
mov
sub
adc
push
jb
lods
hlt
jb
in
mov
and
mov
cmp
imul
addr16
sbb
add
mov
cmc
cmp
ret
ror
lea
test
or
mov
and
add
inc
dec
(bad)
sbb
das
xchg
jns
sbb
and
retf
inc
jbe
push
and
dec
daa
push
xchg
cmc
out
inc
mov
add
stos
xor
jo
push
cmps
in
and
sub
push
push
movs
pop
enter
xlat
retf
or
cmp
jo
xchg
and
mov
shl
in
jno
out
sub
sub
in
pop
jmp
push
rcr
jo
xor
jne
inc
xor
xchg
js
sub
std
push
call
dec
push
inc
push
ds
lods
xor
repz
inc
or
xchg
gs
lea
cmps
dec
mov
dec
popf
out
push
mov
add
add
es
mov
popf
pop
nop
mov
add
test
xchg
adc
ret
cmp
inc
adc
je
jmp
sub
int3
movs
jmp
outs
aad
(bad)
mov
rcr
mov
xor
mov
lahf
mov
mov
push
adc
out
jns
repz
int
mov
mov
stos
dec
test
imul
stos
aad
sbb
lods
jne
inc
lahf
enter
mov
xor
not
push
cmp
aam
add
js
shl
rcr
sub
das
lods
sub
dec
adc
add
push
pop
cmp
xor
mov
sbb
jnp
arpl
xchg
sub
cmp
stc
mov
fsubr
(bad)
cld
xchg
pop
adc
ins
fstp
test
mov
adc
in
inc
stc
int
or
sbb
push
mov
sbb
jno
aaa
xchg
adc
sahf
push
sub
pop
or
mov
js
jle
(bad)
out
jbe
cld
jne
pusha
push
pusha
retf
dec
pop
stc
hlt
push
jecxz
dec
int3
lock
cmps
xor
cmps
sub
adc
mov
cmp
jp
add
and
lods
les
mov
clc
ins
popa
adc
xchg
lds
ficom
push
jecxz
mov
pop
mov
test
icebp
lods
cmp
cli
in
jne
adc
xor
aad
leave
push
ins
movs
cmc
xor
jbe
shl
mov
sti
mov
mov
xchg
adc
push
add
adc
movs
std
push
dec
sbb
scas
sub
(bad)
outs
mov
je
or
rcl
dec
je
cmp
aad
dec
fmul
mov
and
loopne
mov
and
mov
sub
cmps
xchg
aad
in
(bad)
loope
movs
sub
cmp
inc
push
xor
test
mov
fcom
int
push
cmp
sahf
xchg
push
xor
xor
or
push
push
or
lods
out
mov
xor
inc
cmp
pushf
add
test
add
push
sahf
add
call
or
dec
pushf
jo
ds
std
mov
xor
nop
mov
xor
leave
push
xor
sbb
xor
call
rcl
in
mov
mov
inc
fs
inc
jmp
pop
adc
sub
dec
mov
and
cmps
adc
inc
push
out
or
inc
outs
sbb
call
push
push
rcl
leave
adc
jb
inc
or
xchg
xor
and
cmc
sub
jmp
retf
(bad)
hlt
pop
xchg
mov
fwait
xor
dec
js
and
aas
addr16
xlat
ja
(bad)
xor
add
mov
and
push
cmp
mov
dec
mov
lea
test
xchg
outs
add
lea
shl
push
int3
rol
xchg
scas
stos
push
cmp
cmps
adc
pop
popf
cmp
xchg
out
adc
test
aas
xchg
push
call
fmul
fidivr
xchg
ins
dec
adc
fmul
xchg
inc
mov
mov
dec
xchg
loop
repnz
mov
mov
ja
push
dec
rcl
in
mov
lods
repz
sub
cmps
mov
cmp
repnz
inc
sbb
popa
jns
mov
ins
dec
pop
lea
daa
nop
or
sbb
xchg
neg
(bad)
cli
call
push
shl
pop
sub
and
inc
sar
hlt
in
jns
inc
movs
inc
or
ret
lock
test
jp
loop
jno
sbb
pop
and
dec
loop
icebp
push
out
(bad)
xor
es
mov
push
shl
dec
leave
sbb
jno
inc
mov
fdivr
jno
adc
or
not
add
sub
fs
cld
aam
test
pushf
dec
sti
and
cdq
les
push
imul
cwde
pop
pop
sub
jmp
rol
(bad)
fsub
push
hlt
lds
xlat
jnp
add
sahf
fld
das
retf
lds
ds
and
and
push
les
push
cmps
stc
hlt
push
jbe
int
dec
or
cmp
retf
push
sbb
xor
sti
dec
das
push
push
and
dec
in
adc
sub
jge
popf
scas
cmps
je
lods
adc
test
sub
or
dec
out
enter
in
mov
push
xor
je
adc
or
les
push
mov
data16
jne
push
in
xchg
mov
xlat
xor
pop
test
jo
aaa
lods
push
mov
inc
inc
je
xor
sub
mov
cli
sub
pop
test
stos
push
aam
add
and
jne
lds
cmp
and
jb
xchg
out
push
cmp
dec
cmp
enter
cmps
xchg
or
addr16
out
mov
push
dec
and
dec
stos
mov
(bad)
enter
mov
rcl
mov
xor
je
dec
add
and
and
dec
lds
cs
mov
jb
jmp
dec
out
sub
mov
pusha
data16
icebp
inc
pop
(bad)
add
mov
test
mov
pop
fcmovbe
jecxz
mov
jl
add
inc
dec
addr16
push
dec
jo
das
out
jmp
push
mov
or
popw
repz
jge
cwde
jns
fcomp
xchg
pop
test
push
jge
inc
sub
xchg
cmp
or
ds
retf
loope
xchg
mul
mov
pop
sbb
jo
xor
test
mov
dec
sub
adc
mov
loop
xchg
lods
arpl
adc
xchg
inc
cmp
scas
xchg
adc
cmp
inc
xchg
in
cmp
mov
cwde
cmp
lahf
enter
(bad)
add
push
cmps
cmp
pop
sbb
or
jbe
xchg
dec
jns
cmps
or
dec
test
mov
aas
dec
sbb
add
outs
pop
add
fs
iret
in
scas
(bad)
es
test
cli
xchg
inc
add
xchg
dec
cmps
cmp
cmp
mov
mov
push
and
pop
out
sbb
xor
sbb
push
push
adc
dec
xchg
inc
outs
mov
mov
aaa
xchg
dec
movs
add
int3
out
cld
mov
(bad)
jmp
sbb
inc
sbb
mov
inc
pusha
jecxz
push
loopne
dec
loope
inc
cmp
inc
jecxz
leave
sti
bound
and
popf
(bad)
ret
jmp
inc
jl
call
stos
lods
(bad)
fld
rcr
push
inc
dec
cmp
sbb
rcl
out
dec
cmp
sub
mov
add
mov
xor
movs
or
arpl
sub
sbb
aas
push
outs
shl
push
xchg
xchg
dec
sub
mov
sub
loop
cmc
jae
xchg
mov
cmps
mov
or
inc
(bad)
cmps
jmp
repnz
aaa
push
shr
xor
sbb
imul
test
adc
test
add
xor
stc
cmc
xchg
sbb
push
inc
xor
mov
imul
mov
enter
jg
mov
fld
dec
push
fcomp
stc
or
shl
imul
push
(bad)
cwde
dec
xchg
xchg
push
cmp
and
lahf
popa
iret
inc
(bad)
aas
lea
jae
jg
out
fs
ins
jle
ret
rcr
aad
add
movs
int3
lds
xor
sbb
nop
cmp
rcl
xlat
jo
cmp
adc
dec
mov
xchg
push
div
fwait
fwait
sub
jb
test
or
add
sbb
gs
push
push
(bad)
lods
pop
xchg
fs
in
in
fst
mov
xor
or
dec
dec
cmp
pop
mov
add
movs
test
inc
xchg
dec
cs
sti
retf
adc
mov
nop
imul
cmp
pusha
jl
fcmovbe
movs
xchg
sbb
add
ror
or
out
inc
mov
push
loopne
push
aaa
jbe
and
sub
ins
into
adc
icebp
call
jp
shr
movs
aas
lahf
in
mov
inc
out
mov
test
stos
mov
imul
dec
sbb
cmp
(bad)
out
xchg
std
jge
mov
xor
inc
pop
xchg
or
xchg
(bad)
cmp
sar
or
out
std
xchg
int
movs
add
push
les
xlat
arpl
test
mov
mov
mov
mov
pop
stc
push
cld
(bad)
xchg
cmc
jmp
scas
stos
mov
out
and
movs
imul
mov
pop
lahf
push
mov
jo
adc
add
fld
cs
push
test
and
sub
mov
jl
cmp
cli
sbb
push
in
xor
push
inc
arpl
shl
pop
repnz
lods
loop
sbb
lods
push
dec
inc
test
cli
push
cs
ins
adc
ret
jbe
push
cmp
xor
dec
fimul
mov
(bad)
icebp
ret
dec
test
mov
(bad)
(bad)
push
cmps
xchg
cs
add
pop
mov
pop
scas
mov
or
aad
fild
aam
sahf
adc
(bad)
cmps
mov
inc
jl
lods
add
lods
ds
jmp
add
movlhps
add
ins
dec
jns
fs
and
(bad)
arpl
mov
xchg
(bad)
mov
mov
xor
push
xchg
add
fsub
rcr
xor
jno
(bad)
aam
mov
inc
adc
out
(bad)
sbb
sub
mov
(bad)
enter
jbe
sub
scas
mov
sbb
fisub
in
test
jmp
xor
mov
lds
sub
and
and
(bad)
cmc
inc
xchg
inc
ficomp
outs
test
in
add
push
push
cmp
(bad)
repnz
inc
lahf
setno
adc
mov
gs
jno
sub
cmps
add
add
jecxz
jbe
test
and
inc
out
jmp
cmp
cmc
jl
jge
shr
or
imul
push
ss
xchg
pop
rcl
mov
lods
iret
and
jp
ds
cld
into
push
ds
idiv
(bad)
mov
pop
cmps
mov
icebp
loope
cmp
and
mov
rcl
int3
mov
push
pop
adc
mov
mov
add
and
es
arpl
dec
daa
xor
repnz
mov
int
inc
sahf
mov
test
nop
scas
shl
test
cmp
imul
push
shl
inc
iret
add
sbb
cmps
cmp
cdq
pop
sub
cs
in
or
sbb
sub
sub
adc
jo
imul
lds
ins
dec
add
ret
ret
mov
xchg
rol
dec
test
sub
push
add
add
cli
(bad)
in
xor
push
push
aam
and
push
leave
add
jmp
jbe
fdiv
or
jle
imul
mov
and
inc
cmc
mov
popf
push
and
sbb
mov
sub
dec
inc
mov
xor
pop
ss
or
addr16
mov
dec
pop
xlat
sub
adc
ret
jne
adc
and
cmps
dec
xor
out
test
push
(bad)
jns
repz
jne
cmps
imul
inc
cld
stc
add
cmp
pop
inc
cld
dec
es
mov
call
or
pop
jns
stos
mov
add
or
xor
mov
xor
retf
inc
and
lea
jecxz
cmp
scas
pop
outs
in
mov
sbb
or
out
test
inc
cmp
and
dec
movs
dec
rol
sbb
sub
cmp
inc
push
inc
loope
sub
jg
popa
imul
mov
xchg
mov
ror
mov
sbb
xor
popf
cmps
dec
popa
dec
and
dec
cld
sub
jno
call
jne
in
jb
je
cmp
(bad)
ja
cmc
ds
nop
and
leave
adc
(bad)
in
adc
in
mov
stc
das
addr16
sbb
add
hlt
sub
(bad)
imul
add
(bad)
mov
arpl
loop
jl
cmp
xchg
jns
sahf
pop
and
adc
shr
or
fdivr
loop
inc
gs
push
mov
jo
add
dec
mov
jecxz
sub
push
or
rcr
add
add
mov
cdq
icebp
into
(bad)
cdq
cmp
and
cmps
cmps
sti
push
push
or
dec
adc
mov
push
(bad)
and
pop
push
or
xchg
mov
fwait
sbb
movs
cmp
enter
jmp
ins
push
aad
cmp
in
xor
pop
loope
sub
push
add
or
mov
inc
mov
sbb
mov
mov
call
pop
inc
pop
aaa
(bad)
retf
pop
das
push
mov
(bad)
scas
or
repz
icebp
aam
push
iret
xchg
mov
xor
dec
jno
pop
pop
jp
aam
xor
fild
pusha
int
cmp
aam
pop
xor
or
or
mov
sbb
push
pop
add
cld
clc
push
xchg
(bad)
push
sbb
cld
aam
xor
jg
enter
sbb
push
cli
mov
mov
mov
xchg
jnp
(bad)
scas
loopne
ins
pusha
xchg
xor
inc
push
xchg
(bad)
adc
into
pop
add
fs
mov
dec
repnz
pushf
mov
cmp
mov
jmp
add
call
fcomp
jmp
inc
mov
adc
loop
stc
lock
mov
ret
cmps
ret
mov
loop
fild
sub
inc
mov
cmp
mov
nop
xor
sub
pop
(bad)
addr16
pop
sub
mov
inc
scas
test
aas
outs
dec
lods
mov
xor
test
mov
mov
ins
aad
call
cmp
xchg
stos
push
xor
ins
xor
mov
xor
div
sti
mov
mov
or
inc
xor
sbb
add
dec
pop
jnp
cmp
mov
jle
stc
pusha
icebp
cmp
shl
xchg
fcom
mov
daa
sahf
rcl
mov
cmp
adc
mov
mov
pusha
pop
mov
arpl
int
(bad)
pusha
or
retf
cld
xchg
mov
call
mov
rcr
test
aad
loope
push
shr
shr
mov
retf
mov
mov
mov
jmp
xor
ret
inc
enter
outs
jg
and
fdiv
mov
test
inc
mov
fwait
push
or
hlt
adc
push
ja
outs
stos
outs
jle
stos
cmps
xor
mov
pop
aad
push
push
aam
popf
(bad)
cli
icebp
cmp
dec
sub
sar
adc
mov
ja
mov
and
ja
repnz
jge
pop
xchg
pop
(bad)
xchg
adc
repz
jg
ret
xchg
icebp
and
xor
fdiv
jo
pusha
add
movs
test
push
jno
xor
sbb
lods
push
mov
das
or
repnz
ret
mov
leave
lea
adc
mov
push
xor
cmp
cmp
adc
test
xor
push
cmp
sahf
push
(bad)
pop
retf
adc
and
jae
ds
daa
fsubr
mov
sbb
and
in
adc
pop
gs
je
inc
inc
retf
xchg
cmp
js
(bad)
mov
dec
xor
mov
push
aas
mov
mov
int
mov
pop
mov
jmp
mov
inc
aaa
inc
in
mov
rol
pop
adc
nop
add
ror
pop
fwait
inc
pop
sbb
mov
mov
retf
lea
ret
adc
arpl
mov
mov
stos
cli
push
pop
push
(bad)
shl
push
mov
call
enter
xchg
pop
rcl
std
mov
jnp
pop
push
xchg
(bad)
retf
je
and
xor
sahf
sbb
dec
pop
test
aaa
mov
jno
imul
and
jg
repnz
adc
mov
and
rcl
mov
inc
pop
pop
dec
lods
and
mov
call
xchg
add
mov
inc
mov
push
sar
ret
mov
pusha
adc
call
jno
add
xor
loope
arpl
add
rcr
leave
cld
fcomp
fsubr
aam
mov
jb
xchg
cmc
scas
dec
in
jmp
pop
stos
popf
push
and
jns
call
dec
ss
pop
sub
imul
sub
fdivr
ins
pop
ficom
cmp
sbb
xor
test
mov
hlt
stc
jne
xacquire
retf
fistp
stos
mov
sbb
test
arpl
jmp
xor
adc
nop
mov
iret
cmp
add
pop
inc
imul
push
sbb
fsub
movs
mov
push
loopne
inc
jmp
stc
cli
je
stos
mov
pop
inc
in
out
add
icebp
jno
bound
pop
cmp
push
mov
lahf
or
mov
add
dec
shr
ss
jg
ds
nop
sub
fs
aad
(bad)
dec
lea
add
mov
jns
lods
pop
add
xchg
addr16
mov
push
in
jmp
xor
cmp
or
mov
ins
dec
jns
xchg
fcmovnbe
cmps
xlat
retf
inc
aaa
stos
(bad)
cmp
dec
xchg
push
mov
jns
je
ins
int
xor
shl
jmp
test
xchg
or
mov
mov
xchg
or
sub
out
mov
inc
lods
fild
push
push
rcl
cmps
js
lods
xchg
not
xchg
push
lds
mov
add
cli
add
xchg
imul
sti
retf
cmps
(bad)
cmp
imul
cld
sti
pop
movs
int
inc
push
push
out
inc
xchg
push
mov
shl
imul
jo
clc
push
cmps
sub
pushf
or
enter
retf
ja
push
cli
add
adc
btr
jo
cmp
mov
mov
jmp
fmul
mov
ins
jae
add
hlt
jo
sti
xor
xchg
push
pop
jp
xor
cwde
and
cmp
into
lods
pop
xlat
icebp
out
pop
mov
mov
adc
xor
lahf
in
je
jecxz
xchg
cmp
(bad)
dec
fist
dec
aad
movs
call
pop
cmp
jns
xchg
ret
xor
cmp
sbb
add
add
inc
mov
aas
jecxz
rol
in
xchg
(bad)
lea
and
out
rcr
in
mov
and
and
add
call
outs
hlt
mov
ret
cld
jae
cmp
dec
mov
push
xor
jbe
mov
aas
mov
or
fld
pop
jns
add
inc
test
add
cs
jne
inc
xor
mov
push
dec
add
and
loope
push
sbb
outs
test
aad
mov
or
into
enter
movs
lock
dec
stos
sub
int3
imul
popf
loope
xor
inc
and
inc
into
ds
inc
sbb
mov
nop
or
sbb
jmp
sub
lahf
xchg
loope
imul
xchg
and
test
mov
sbb
mov
js
lea
dec
mov
sub
lock
mov
stos
fdivp
jmp
inc
std
inc
sub
adc
mov
and
jp
ins
mov
imul
dec
retf
or
xor
mov
jecxz
mov
je
mov
lea
push
sub
dec
out
imul
push
mov
pushf
sub
cmp
push
out
xor
or
test
scas
fild
lods
nop
repz
xchg
inc
pop
hlt
dec
add
jns
add
js
add
inc
ret
retf
and
mov
push
scas
xchg
mov
sahf
scas
jmp
fs
xor
and
into
mov
mov
fwait
push
or
sub
in
adc
fisttp
xor
nop
mov
movs
dec
test
stc
stc
push
hlt
push
mov
fcomp
cwde
push
adc
add
shr
or
dec
in
out
rcl
ret
push
enter
mov
mov
mov
(bad)
xchg
pusha
xchg
jno
test
lock
hlt
(bad)
in
xor
mov
loope
js
push
inc
xor
xor
movs
inc
mov
push
dec
sub
push
cmp
adc
mov
jmp
mov
cmp
cmp
jl
sar
call
pop
inc
fs
and
mov
fiadd
fild
adc
fisttp
xchg
pop
out
pop
jg
imul
imul
ret
sahf
ficom
ins
stos
sub
jne
dec
mov
xor
inc
lock
mov
add
lea
cmp
jno
inc
sbb
add
movs
cld
sti
dec
cmc
mov
push
dec
pop
xchg
add
jo
xchg
dec
test
mov
mov
add
ja
pop
ins
dec
aas
sub
push
(bad)
out
outs
sub
popf
cmps
bndstx
imul
inc
scas
cmp
pop
adc
xlat
xchg
mov
dec
clc
in
pop
adc
pop
push
inc
xchg
in
pop
sub
jmp
pop
adc
leave
inc
or
jo
inc
pop
loopne
mov
jmp
call
stos
ins
mov
sub
rcl
pop
dec
enter
inc
inc
stos
shr
jae
stos
gs
jmp
xchg
mov
cld
inc
cli
xor
xchg
fwait
add
imul
jg
mov
dec
fcmovnbe
not
test
sti
pop
sbb
nop
add
stos
sbb
jmp
jmp
jnp
jg
test
pop
pop
test
fs
cmp
mov
pop
mov
jg
push
mov
rol
jle
fs
test
in
sub
xchg
sub
or
mov
inc
and
or
cmps
scas
(bad)
aad
inc
ss
sub
out
sbb
out
mov
mov
test
add
repnz
pop
xor
pop
mov
in
fadd
retf
(bad)
add
push
ja
rol
call
mov
pop
es
int
push
or
add
retf
test
inc
in
test
and
dec
jmp
outs
inc
jmp
cmps
sub
iret
xlat
pop
iret
mov
fld
(bad)
jg
or
fadd
sbb
inc
inc
or
sub
xchg
arpl
call
push
fwait
aaa
rcr
fwait
or
std
aas
cmps
mov
lea
jecxz
mov
pop
dec
rcr
hlt
jmp
in
mov
fwait
sbb
jb
mov
outs
es
jbe
inc
test
xlat
xor
jle
adc
(bad)
outs
div
mov
fisttp
pop
dec
add
sub
cmps
adc
into
lods
jmp
and
mov
out
imul
mov
fisttp
mov
or
xchg
add
test
inc
adc
jb
add
call
inc
cmp
cmps
mov
sbb
push
or
pop
test
arpl
sbb
lahf
mov
jo
push
cld
mov
retf
pop
mov
lds
inc
inc
mov
mov
xchg
inc
iret
test
inc
adc
adc
pop
push
cli
fmul
jecxz
push
push
ret
lods
ja
mov
sbb
pop
xlat
xchg
mov
jne
inc
jecxz
imul
jmp
ins
test
xchg
dec
cld
sub
dec
dec
fist
push
sbb
add
(bad)
fdivr
push
pop
test
cmps
xchg
es
push
mov
enter
(bad)
cdq
call
cmc
xor
lods
inc
test
cmp
lahf
popa
mov
sti
sbb
push
idiv
or
movs
or
jp
ficomp
out
fld
jle
push
retf
(bad)
test
cld
mov
mov
das
mov
push
cmp
rol
mov
or
(bad)
loop
jle
bound
out
sahf
pop
mov
mov
nop
popf
sub
and
push
push
inc
push
(bad)
fadd
push
sbb
sbb
ficomp
mov
push
lea
loop
sub
mov
mov
sub
test
xor
xor
mov
xchg
fs
cmps
adc
icebp
dec
cmp
loop
jmp
jge
push
retf
daa
out
jnp
xchg
xchg
xor
and
aam
add
nop
pop
lahf
xchg
cmp
sbb
jnp
int
and
xor
int3
push
adc
test
sub
jecxz
jmp
dec
adc
ret
lahf
push
mov
pop
jmp
out
popa
dec
jecxz
or
xlat
(bad)
mov
jl
pop
(bad)
xlat
jge
test
dec
push
push
add
mov
push
and
or
rcr
std
jno
idiv
ror
dec
sbb
mov
cmp
jl
loop
fcomp
inc
mov
ret
(bad)
clc
jp
mov
cmp
cmp
or
inc
pop
lock
and
loop
push
ins
mov
sbb
mov
or
fdiv
or
mov
jle
mov
pop
jge
mov
out
test
sub
aas
rcl
ins
and
sahf
daa
push
js
lods
sub
adc
dec
lea
retf
pop
sub
bound
pop
call
movs
fs
addr16
jecxz
repz
les
ret
rcr
xor
aas
pop
stos
(bad)
sub
xchg
push
aam
out
xor
push
rcl
push
or
loop
xchg
push
adc
mov
cmps
stos
pop
or
and
pop
les
and
js
mov
jl
es
mov
sbb
cld
stos
repz
dec
ins
cmps
shr
leave
adc
sub
inc
lea
mov
push
mov
cdq
mov
outs
dec
mov
in
inc
imul
stos
jne
outs
cs
test
int
sub
inc
or
cmp
in
cmp
sbb
xchg
adc
xchg
inc
cs
push
in
call
xor
lods
(bad)
out
xor
psubusb
mov
add
mov
sub
mov
push
push
mov
shl
jmp
add
push
rcl
jecxz
xlat
stc
inc
cs
fnsave
dec
mov
mov
xor
lods
cs
xor
mov
push
loop
sub
or
in
push
inc
loope
stos
xchg
mov
dec
jae
sti
imul
addr16
iret
or
outs
into
movs
adc
lahf
dec
mov
and
dec
jmp
clc
fs
addr16
xor
add
shl
adc
mov
enter
cmp
scas
xor
popa
outs
hlt
inc
aas
sbb
fild
sar
cmp
je
test
push
fmul
nop
das
bound
sahf
pop
cli
fcmovu
in
cmp
cmp
sub
cmp
cld
std
aas
and
xchg
or
cwde
enter
mov
dec
mov
test
loopne
xchg
cmp
fild
clc
jno
cdq
push
arpl
outs
cmp
fisub
stc
je
arpl
gs
bound
push
mov
stos
sub
test
cmp
mov
push
pop
push
add
jge
sti
add
fdivr
leave
out
add
call
fwait
test
push
push
mov
dec
loope
pusha
add
inc
add
xor
hlt
hlt
push
sbb
mov
adc
dec
xor
mov
fwait
cwde
movs
mov
jns
xchg
mov
push
stc
in
jp
cli
or
push
(bad)
clc
and
scas
sbb
add
ds
xchg
cmp
jp
pop
bsf
push
pop
dec
and
inc
inc
sbb
loope
in
add
or
jmp
sub
dec
ja
adc
aas
cmp
sahf
mov
dec
sub
inc
xchg
in
addr16
les
ficomp
es
cmps
test
mov
test
data16
cmps
pop
or
and
das
push
(bad)
fbld
stc
push
in
out
ins
movs
mov
jge
inc
cld
jmp
jl
xchg
sub
rcl
(bad)
test
xor
sbb
mov
aad
cli
std
das
jb
enter
(bad)
xchg
adc
adc
stos
inc
(bad)
(bad)
sbb
jb
add
cmp
getsec
mov
ret
std
(bad)
rcr
jae
push
retf
mov
pcmpeqw
arpl
sub
int3
push
aaa
xor
shl
push
sbb
rcr
xchg
lea
aas
retf
ins
push
sbb
sub
add
cmps
cwde
adc
std
popa
mov
inc
xor
push
sbb
loopne
in
jmp
shl
adc
xchg
add
or
not
rep
das
pop
(bad)
stos
inc
sbb
xchg
cmps
mov
mov
adc
mov
test
(bad)
imul
test
jmp
sub
fcmovnbe
imul
xchg
test
push
mov
dec
aas
and
outs
out
push
fbstp
fcmove
mov
pusha
push
cdq
and
loopne
and
sub
push
jbe
push
jmp
cli
add
add
(bad)
iret
mov
xor
and
or
sub
call
popa
sbb
retf
mov
inc
ss
or
jnp
icebp
loope
mov
sbb
mov
sbb
lock
inc
cmp
je
and
iret
lea
aam
das
pop
cmp
imul
xchg
push
cmp
push
int
inc
sbb
gs
sbb
cmp
retf
push
pop
cmp
push
dec
add
xor
mov
outs
je
jp
ror
adc
shr
dec
loopne
addr16
scas
push
mov
iret
out
into
mov
mov
sub
mov
xchg
fsubp
outs
call
cli
call
xchg
push
push
iret
adc
mov
popf
fs
and
sub
int3
xchg
rcl
pop
sbb
shl
pop
cmps
and
dec
push
inc
bnd
pop
movs
rol
xchg
xchg
inc
inc
xchg
add
addr16
mul
(bad)
(bad)
xor
sar
adc
jno
sbb
hlt
out
fimul
or
pop
and
jno
push
aas
popf
imul
inc
mov
pop
movs
jp
mov
pop
and
loopne
and
sub
loope
aaa
inc
sub
mov
sub
xchg
imul
icebp
mov
and
cmp
jle
cwde
bnd
shl
sub
fs
in
mov
or
scas
inc
sub
imul
popf
retf
or
mul
mov
pop
push
repz
sub
push
or
mov
test
mov
inc
xlat
movs
mov
sbb
jo
cmps
inc
push
loope
ret
inc
xor
lds
cs
jae
xchg
inc
mov
push
and
add
cmps
repz
or
push
push
inc
xor
nop
test
sahf
pop
dec
inc
scas
stos
sub
and
mov
mov
mov
and
jno
aas
inc
iret
sar
fistp
sub
and
cmp
js
in
cmp
or
outs
fidiv
xchg
cmp
sar
or
retf
inc
pop
es
(bad)
ror
sbb
push
es
shl
push
mov
push
nop
lods
or
fisub
inc
bound
lock
icebp
jno
leave
iret
lahf
push
xor
clc
xchg
call
pushf
lock
fsubr
xlat
sbb
mov
ss
inc
cmps
shr
ret
or
icebp
xor
adc
add
push
mov
jo
mov
cmp
mov
dec
sbb
mov
lock
cli
stc
or
frstor
inc
adc
add
sar
test
fisttp
dec
mov
push
inc
jmp
adc
movs
jae
jno
mov
add
jge
mov
dec
xchg
pop
std
inc
shl
sub
scas
dec
scas
push
dec
cmp
pop
arpl
pop
psubb
adc
xchg
(bad)
mov
xchg
mov
jmp
sbb
jl
xor
sub
add
cmps
aam
xor
xchg
jl
retf
icebp
and
sub
add
inc
pop
mov
add
xchg
scas
scas
dec
jbe
out
sbb
mov
sub
sbb
or
out
or
call
push
xlat
pushf
(bad)
mov
pusha
and
cmc
mov
inc
in
push
dec
inc
je
push
xchg
cmps
xchg
sahf
adc
pop
push
fwait
mov
push
fs
cmp
lea
(bad)
push
adc
pushf
dec
sub
mov
add
movs
pop
cmp
cmps
xchg
das
sti
ror
out
inc
pop
sar
xchg
jb
(bad)
cli
mov
cld
cmp
mov
lahf
ins
js
mov
mov
adc
out
pop
mov
movs
xor
xchg
scas
pop
stos
sti
mov
ret
cmps
mov
mov
je
push
stos
mov
jmp
daa
push
inc
hlt
hlt
push
cli
std
sub
cmps
daa
ins
mov
jnp
and
not
cmc
jl
and
inc
jne
mov
aad
ds
mov
addr16
gs
xor
jne
fs
dec
fs
jne
nop
fcom
dec
(bad)
jecxz
push
add
sbb
lock
xchg
ror
xor
mov
or
mov
frstor
xlat
aam
inc
or
jmp
shr
mov
test
(bad)
mov
or
mov
mov
mov
adc
jmp
xor
repz
je
(bad)
(bad)
call
mov
sub
test
cli
fst
leave
mov
test
inc
cmp
or
ins
mov
inc
mov
aad
inc
sahf
daa
cld
sbb
inc
xchg
lea
xor
cmp
xchg
ror
popf
loop
inc
test
xchg
inc
fdivr
mov
out
out
arpl
or
cmps
xor
sbb
push
dec
aad
or
call
push
repnz
cmp
shl
jecxz
pop
xchg
mov
dec
mov
jp
mov
add
test
lahf
shl
jnp
rol
cmp
xor
or
dec
inc
lahf
sbb
js
popf
xor
mov
aad
lahf
retf
push
lods
inc
cmps
nop
jecxz
jle
hlt
mov
xchg
add
pop
adc
sbb
cdq
push
scas
(bad)
push
aad
jmp
jl
pop
or
popf
fisubr
add
(bad)
hlt
mov
test
add
rcr
cmp
scas
inc
retf
lods
shl
sahf
pop
scas
stos
(bad)
out
test
push
rol
sbb
ror
and
sahf
cdq
sub
fcom
outs
outs
cmc
test
jmp
jmp
dec
lds
xor
pushf
loop
cmp
(bad)
dec
in
pop
aad
loopne
movs
movs
sub
mov
fucom
lock
test
leave
and
movs
sub
hlt
aam
neg
fisubr
push
test
mov
sub
std
xchg
jmp
mov
sub
xchg
xor
push
aam
aad
inc
pop
or
adc
xchg
mov
or
pop
fcomp
jae
mov
mov
ror
jae
jne
add
sub
jne
imul
add
cli
icebp
daa
cmp
rcl
push
mov
fs
dec
arpl
push
sub
mov
jne
adc
ds
addr16
out
sti
add
jns
mov
xchg
push
cmp
stc
je
mov
jl
xchg
repz
sbb
mov
shr
sbb
sub
pop
cmp
adc
sbb
mov
jnp
aam
mov
mov
sub
and
test
inc
mov
(bad)
es
xor
pushf
or
xchg
add
xchg
enter
shl
xor
adc
sub
add
cmps
mov
and
retf
xchg
sbb
(bad)
(bad)
mov
sahf
out
and
xor
cmp
cmp
xor
inc
ror
test
repz
aas
lahf
dec
jp
popf
adc
mov
movs
stos
adc
sbb
lods
xor
pop
out
mov
(bad)
ins
in
sbb
les
je
pop
mov
mov
iret
xchg
aas
data16
lahf
push
mov
call
cld
cld
mov
mov
sbb
cmp
ins
adc
rcl
shr
mov
pushf
sub
ja
in
(bad)
jbe
nop
and
ins
dec
fdiv
sti
out
adc
lods
inc
push
movs
fcom
mov
mov
aam
cmp
pop
mov
outs
inc
pop
stc
cmp
push
sar
cmp
scas
lock
stc
ja
aam
push
xchg
sahf
pop
popf
movs
ds
cld
add
xchg
and
jp
popf
sub
data16
outs
pop
fsubr
add
mov
xor
(bad)
fimul
or
cmp
clc
mov
popa
pop
ret
add
adc
mov
add
cmps
mov
adc
sub
xor
mov
rol
jmp
retf
xchg
dec
loope
ret
dec
xchg
dec
inc
sti
ins
mov
or
icebp
add
pop
cli
adc
dec
jb
xor
jg
mov
cmc
mul
aaa
xchg
xor
dec
mov
dec
xchg
sub
jle
cmp
and
add
lds
mov
imul
popa
fcmovne
nop
imul
xlat
sbb
sahf
scas
cmp
cs
pop
fs
or
cmp
(bad)
sbb
jb
xchg
fld
inc
sbb
int3
hlt
sbb
jbe
lods
leave
mov
mov
pop
pop
inc
mov
add
push
add
repz
gs
bnd
out
adc
repnz
jns
xor
lods
jmp
mov
mov
mov
imul
inc
ds
or
push
in
jp
lds
fsubr
pop
xor
mov
call
pop
in
mov
rcr
xor
adc
pop
test
fwait
rol
enter
rcr
dec
mov
int3
cmp
jge
pop
or
retf
retf
inc
shr
rcl
or
out
scas
fcmovbe
inc
psubsb
mov
movs
sub
les
jmp
xor
inc
call
call
xor
inc
inc
daa
lahf
jo
push
sbb
call
loopne
(bad)
xchg
(bad)
mov
xchg
out
and
icebp
daa
iret
mov
iret
shl
in
inc
xchg
dec
sbb
dec
pop
ja
xor
inc
push
or
mov
mov
in
movs
mov
push
push
xchg
(bad)
popf
dec
repz
mov
and
xor
mov
ret
int
cmp
or
xchg
push
add
cdq
adc
inc
fidiv
dec
dec
outs
arpl
fucomip
icebp
es
or
push
cmp
loopne
rol
scas
push
cli
scas
inc
aas
mov
sbb
repnz
imul
or
sub
pop
mov
sub
jmp
and
test
adc
add
xor
and
outs
sbb
mov
in
iret
push
mov
push
movs
aam
or
adc
xor
lahf
ds
rol
push
push
push
push
sbb
push
push
lahf
es
push
jle
sbb
js
bound
sub
(bad)
push
xchg
cmp
sbb
xor
aas
cmp
shl
call
loop
test
xor
test
mov
das
xchg
inc
(bad)
and
jb
enter
cmp
pop
(bad)
movs
mov
xor
movs
ja
add
sbb
pop
lahf
sbb
movs
jmp
push
mov
cmps
sbb
jnp
mov
hlt
pop
mov
fs
mov
sbb
pop
push
ss
jle
mov
push
mov
push
adc
mov
ins
jbe
ja
add
repz
out
add
adc
loope
jmp
jmp
pop
stos
(bad)
add
mov
cmps
dec
push
aas
inc
in
inc
sub
dec
movs
aad
cmp
test
aas
fscale
mov
cmps
push
xor
push
push
sbb
dec
jno
hlt
add
fadd
push
ror
or
loope
push
ss
sbb
push
fimul
dec
in
adc
in
inc
popa
push
inc
popf
inc
jg
repz
cmc
push
test
add
sub
(bad)
push
ds
xchg
stos
popa
sahf
movs
mov
sbb
push
out
sub
cmc
shl
or
(bad)
dec
inc
xor
fs
xor
std
js
and
push
out
cmps
movntq
out
js
add
add
(bad)
movs
(bad)
or
pop
movs
sub
push
bound
call
jg
imul
pop
mov
pop
gs
push
xchg
jo
(bad)
out
scas
inc
jecxz
mov
cmps
push
cmps
aad
les
movs
inc
inc
or
cdq
out
rcl
or
push
aad
sub
inc
mov
movs
mov
mov
mov
or
or
(bad)
and
jo
stos
mov
icebp
and
cld
stc
mov
sbb
in
jb
cld
mov
push
inc
shr
jle
and
push
xor
xchg
mov
out
inc
outs
ins
fstp
movs
(bad)
outs
mov
adc
stc
jns
mov
and
lahf
rcr
xchg
xlat
add
gs
dec
inc
pop
movs
arpl
cmp
adc
cmp
sbb
std
mov
mov
xchg
and
lds
pop
xor
(bad)
shl
xchg
and
mov
je
sbb
adc
mov
add
add
hlt
xor
pop
jg
jns
inc
add
in
fcom
mov
and
dec
rcr
xchg
mov
(bad)
jg
test
scas
enter
jb
cmc
jmp
sub
sbb
or
dec
test
(bad)
and
sbb
outs
jg
div
ins
and
cmp
push
lock
inc
cld
push
(bad)
push
call
loop
push
(bad)
rcl
xchg
iret
mov
ds
dec
nop
cmp
dec
call
dec
push
shl
int
out
jns
fsubrp
shl
add
loopne
mov
es
mov
call
push
loope
or
adc
cmp
mov
pop
iret
nop
mov
xchg
test
shl
mov
push
dec
imul
mov
pop
push
sub
lds
into
pop
(bad)
jmp
outs
jne
(bad)
push
test
and
pop
sub
test
dec
out
cmp
inc
adc
push
push
mov
test
cmp
jbe
fistp
call
sbb
or
jb
jecxz
xchg
sbb
xchg
loop
in
and
dec
shl
ss
mov
push
push
lea
stos
movs
sub
adc
aam
sbb
outs
cmp
xchg
push
(bad)
sbb
scas
jecxz
int3
adc
inc
cmps
inc
dec
imul
adc
retf
sub
xchg
mov
jae
push
mov
jne
lods
cmps
div
add
das
outs
sahf
pop
push
inc
mov
lods
sub
call
stos
inc
fucompp
pop
push
test
jo
cmp
iret
in
jecxz
sub
pop
cmp
pop
rol
std
int
push
and
mov
cmp
add
fidiv
mov
fdivr
push
movs
test
stc
jl
cmps
jecxz
pop
or
and
cmp
cmc
pop
lahf
iret
test
inc
cmc
pop
fs
pop
(bad)
out
cdq
aad
adc
xchg
bound
push
sbb
outs
retf
mov
mov
cmp
push
dec
inc
cmps
sar
inc
stc
jp
xchg
pop
adc
jg
(bad)
mov
fwait
into
or
sub
dec
and
and
xchg
repnz
xor
mov
paddsw
lds
sbb
stos
xlat
pusha
movs
sub
add
jge
cmp
or
pop
xor
shl
in
adc
mov
mov
jp
sub
and
inc
es
xor
rcr
cmc
mul
mov
inc
mul
icebp
pop
mov
ror
shl
nop
movs
pop
cmp
stc
mov
repnz
pop
je
fcomp
jno
xchg
push
ds
mov
xchg
pop
xchg
std
add
call
dec
call
push
pop
mov
inc
(bad)
fldenv
xchg
inc
push
movs
adc
push
or
cmps
in
sbb
frstpm(287
call
sub
cmps
mov
dec
(bad)
dec
(bad)
or
div
fbld
xchg
(bad)
mov
push
mov
mov
mov
ret
cmc
and
loop
pop
jge
cmp
int
mov
scas
in
inc
or
les
mov
ret
dec
ins
(bad)
pop
lods
retf
(bad)
retf
fmul
cmps
sub
sahf
xchg
xor
xor
stos
pop
dec
jmp
push
fsubr
std
mov
ds
neg
arpl
cmp
and
xor
psubusb
jp
fstp
addr16
mov
jg
out
lahf
repz
daa
or
inc
xor
xor
add
fmul
jge
jnp
mov
div
and
movs
inc
and
ins
xor
movs
sbb
mov
cmp
xchg
ror
mov
enter
outs
sbb
les
loop
add
pop
fst
mov
pop
mov
js
repz
jmp
inc
dec
inc
add
jle
push
mov
fst
dec
sub
xchg
lods
push
imul
sbb
rol
inc
mov
fisttp
or
shr
dec
jle
out
dec
je
fldz
push
ja
loope
stos
gs
push
pop
in
inc
push
scas
inc
fstp
mov
dec
sbb
scas
sahf
cmp
js
push
popf
imul
aam
sub
daa
add
or
xor
pop
xchg
out
mov
and
(bad)
pop
lock
cmp
cmps
mov
and
mul
movs
ror
adc
mov
in
movups
stc
push
std
pop
cdq
aad
dec
fisttp
adc
adc
jns
xchg
inc
dec
mov
in
aaa
popf
scas
call
(bad)
xchg
and
movs
test
pop
pop
(bad)
retf
jae
lods
mov
dec
stc
push
lock
retf
mov
mov
sbb
dec
popf
je
or
in
mov
retf
lods
sub
shrd
(bad)
icebp
pop
aad
sub
sbb
popa
es
enter
repz
das
lahf
repz
cmp
jne
call
test
addr16
bound
mov
cmp
ins
push
repnz
cmp
in
cmp
ret
int3
shr
mov
add
ss
lea
adc
aas
repnz
pop
fld
hlt
mov
inc
cmps
std
push
mov
(bad)
mov
mov
pop
(bad)
sbb
inc
and
loope
dec
subps
mov
dec
ins
jmp
sbb
sub
mov
and
aam
mov
inc
stos
xchg
add
mov
jmp
lds
add
addr16
int
add
out
push
das
cli
mov
test
adc
(bad)
inc
out
daa
fcmovu
out
test
sbb
or
or
jmp
push
int3
ror
pop
(bad)
std
inc
jecxz
in
jbe
lods
jp
mov
call
mov
aam
je
repnz
cmp
(bad)
mov
ror
push
repnz
push
sbb
mov
jle
inc
sbb
pop
fdiv
js
loop
sbb
add
dec
movs
cs
in
in
mov
dec
aad
push
add
pop
sub
in
cmp
mov
push
inc
imul
mov
adc
js
add
ret
cmp
test
xchg
or
adc
jg
sti
xchg
rcr
sub
test
inc
mov
lock
(bad)
retf
jns
pop
and
xchg
adc
ror
adc
fld
xchg
cwde
aad
mov
mov
nop
xlat
cmp
add
std
pop
das
sbb
push
sti
xchg
ins
fsubr
(bad)
lahf
pop
xchg
int3
nop
cmp
inc
aam
add
mov
and
dec
inc
sub
sbb
sub
imul
push
mov
sti
aas
mov
das
adc
mov
sub
aam
out
in
inc
jle
mov
mov
dec
rcl
retf
les
mov
push
xchg
sbb
sar
cmp
fsubr
add
enter
mov
pop
mov
movs
stos
(bad)
rcr
pop
pop
xchg
movs
pop
push
in
xor
and
sub
into
push
fucomip
lods
call
jmp
mov
add
dec
cmc
cwde
pop
test
out
das
repz
mov
ins
pop
jmp
nop
sub
out
jno
enter
add
adc
hlt
cmp
mov
push
ins
ret
xchg
jg
push
cmp
mov
jb
mov
nop
jmp
test
pusha
pop
pop
xchg
jp
inc
xchg
jae
adc
sub
adc
or
cwde
mov
mov
xchg
fld
inc
mov
mov
movs
jmp
cmps
mov
or
and
cmc
lahf
lods
sti
fstp
xor
push
mov
push
push
(bad)
cli
mov
dec
add
cli
mov
outs
xor
cmps
repz
pop
js
jae
stos
ficom
mov
add
jne
retf
idiv
test
and
push
rol
sub
or
(bad)
mov
rcl
add
bnd
or
mov
xchg
mov
or
adc
inc
mov
sti
mov
pop
add
pop
add
fdivr
enter
or
adc
test
pop
adc
in
cmp
mov
stos
sbb
dec
mov
popf
jle
xchg
inc
xlat
popa
jl
enter
push
int3
cs
cmps
lea
sbb
pushf
xchg
xchg
add
xchg
ins
dec
mov
adc
out
bound
pop
idiv
fbstp
or
fcmove
jl
add
add
xor
mov
sub
test
lock
mov
adc
sbb
cmp
stos
sbb
sbb
add
sahf
fcomp
mov
iret
xor
(bad)
imul
stos
sub
mov
pushf
fst
or
stos
stos
mov
in
dec
out
dec
not
retf
jnp
mov
push
mov
xchg
xchg
pop
xchg
dec
sbb
iret
cmc
pop
mov
mov
cwde
popa
push
push
test
sub
cmc
imul
rcr
adc
cmp
dec
sbb
icebp
mov
stc
(bad)
mov
outs
lds
daa
cwde
inc
pop
jecxz
and
add
rol
push
movs
hlt
inc
mov
xor
aam
lods
jle
xchg
in
push
cmp
dec
std
cmp
scas
or
mov
retf
sub
pop
jl
and
stos
add
bound
not
mov
mov
xor
add
test
aas
into
lahf
xchg
inc
ins
ret
jmp
dec
mov
movs
pop
push
xchg
jge
dec
jo
jmp
push
clc
dec
mov
mov
clc
lds
or
xor
sub
sbb
add
stos
xor
push
dec
loope
mov
scas
aaa
mov
mov
(bad)
fwait
cdq
mov
and
out
lahf
add
dec
sahf
mov
push
mov
imul
pop
sub
in
jns
push
add
call
add
icebp
pop
jbe
mov
push
int3
fcomi
in
mov
rcl
rcl
inc
dec
xor
add
inc
lods
mov
mov
shl
shl
dec
(bad)
iret
fdivr
jnp
pop
mov
idiv
ja
out
sbb
retf
popf
pop
mov
push
movs
(bad)
scas
imul
hlt
dec
call
mov
lds
xor
xchg
dec
rol
lahf
popa
jns
outs
inc
mov
push
lods
sub
test
fdivr
stos
sub
shl
arpl
or
cmps
enter
pop
xor
push
rcl
icebp
lds
push
lahf
(bad)
shr
cld
(bad)
repz
in
mov
inc
sbb
cmp
dec
sbb
or
inc
mov
sub
ret
outs
cmp
xchg
jb
inc
add
sti
jl
adc
jge
pop
aam
push
xchg
aam
lds
stc
jne
ror
mov
mov
aam
stos
das
jmp
pop
mov
jecxz
mov
mov
aas
ds
ror
std
iret
xchg
fwait
in
ficomp
(bad)
jo
xchg
mov
inc
inc
inc
shr
push
xlat
push
mov
push
out
dec
cs
aam
push
sub
sti
outs
and
outs
and
add
mov
sahf
jge
out
mov
jg
in
mov
imul
adc
adc
lahf
popf
das
mov
loop
out
sbb
sub
stos
jle
push
adc
dec
xchg
aad
jecxz
fwait
adc
aas
pop
lods
pop
ds
lahf
adc
addr16
hlt
iret
pop
test
mov
div
ror
je
mov
sub
or
add
fstp
dec
ins
mov
pop
push
xchg
pop
adc
in
ds
into
mov
(bad)
jbe
pop
mov
xchg
inc
pop
sub
xor
add
dec
dec
inc
(bad)
lods
imul
and
(bad)
out
(bad)
fscale
lea
dec
push
push
stos
and
push
mov
add
mov
jmp
pop
inc
aaa
imul
mov
sbb
inc
sbb
xchg
pop
adc
add
sti
xorps
outs
ja
and
sub
push
punpckhdq
push
lock
sub
or
dec
lea
add
cld
jnp
xchg
cmp
cmp
pop
in
loop
pushf
movs
mov
lods
cmp
bswap
push
mov
and
fdiv
pop
fcmovb
retf
aas
dec
(bad)
fldcw
adc
stos
sub
push
in
imul
jg
dec
sub
xchg
xchg
xchg
mov
sbb
add
test
test
enter
xor
push
xor
push
inc
xchg
jge
lock
push
shl
push
scas
adc
push
pop
push
cmps
fdivr
cmp
ds
xchg
mov
sbb
(bad)
lods
int3
sahf
imul
inc
add
mov
adc
jle
in
sbb
pop
cmp
icebp
loope
das
xor
(bad)
fnop
push
pushf
sub
(bad)
ja
push
push
or
(bad)
dec
push
sar
sar
mov
test
inc
xor
in
retf
(bad)
imul
xor
adc
xlat
push
xchg
jne
sbb
pushf
xor
clc
jg
jmp
jns
xchg
in
jbe
jecxz
push
sub
inc
mov
push
xor
jge
jp
mov
mov
cli
icebp
(bad)
repz
imul
arpl
pop
hlt
adc
mov
test
sbb
pop
jmp
jecxz
lods
(bad)
cli
div
fnstsw
push
ja
push
(bad)
fcmovnbe
mov
lods
cmps
icebp
call
mov
sub
push
loop
icebp
in
sbb
jl
jecxz
out
inc
repnz
jecxz
pop
cwde
movs
and
es
add
xchg
cmp
outs
mov
cmp
jmp
call
stos
mov
arpl
int
shr
pop
loope
pop
or
jmp
sub
jo
inc
repnz
add
add
inc
inc
adc
mov
inc
rcr
mov
sub
dec
xor
dec
test
ja
xor
and
sub
add
inc
sbb
test
rcl
cld
cli
cs
jb
sbb
aam
fadd
fidiv
mov
leave
inc
pop
icebp
cmp
sbb
pushf
ret
push
dec
lods
cmp
bound
sub
and
out
dec
add
pusha
adc
adc
sbb
sahf
push
mov
sbb
dec
xor
mov
stc
xor
ins
in
and
cmps
retf
xchg
retf
mov
mov
stos
out
add
mov
jae
int
out
mov
or
pop
in
shl
int3
pop
cmp
xor
jne
sub
lahf
push
shl
dec
dec
and
jecxz
mov
rol
cld
adc
daa
fdivr
xchg
or
add
aad
iret
adc
adc
inc
cmp
sbb
inc
popf
aas
pop
pop
aas
jecxz
aad
lods
pop
test
xor
icebp
not
and
ret
dec
adc
push
sbb
add
pop
inc
dec
jbe
mov
mov
pop
jmp
repz
mov
aad
dec
lock
cmps
(bad)
retf
or
gs
xchg
xor
push
fs
sbb
sub
inc
xchg
outs
cwde
(bad)
in
and
mov
les
shl
inc
ds
sbb
stos
lods
psraw
sbb
enter
pop
(bad)
scas
xor
fnstenv
fdivr
cli
adc
xchg
and
jmp
(bad)
hlt
movs
test
lods
cmps
push
lods
jno
or
xchg
mov
jecxz
or
pop
cmp
pop
sub
push
sub
dec
sar
push
adc
aam
xchg
add
jo
adc
repz
lock
mov
frstor
pop
call
sbb
ds
test
jmp
dec
jg
daa
repz
mov
mov
sbb
adc
nop
push
lahf
adc
jne
and
and
or
jns
(bad)
aam
mov
rcr
push
data16
mov
xchg
shr
cmps
fcmovnbe
loop
xchg
test
and
sahf
rcl
sub
sbb
or
inc
movs
jp
outs
jge
(bad)
shr
pushf
inc
je
ins
push
sub
add
jne
sti
add
push
inc
sub
popf
jno
lods
push
nop
fild
test
fdivr
and
test
arpl
and
pop
sbb
mov
sahf
inc
xor
lahf
jae
mov
dec
mov
lds
jp
fs
repnz
adc
and
movs
imul
inc
sbb
sub
and
inc
adc
aas
fiadd
shr
enter
stos
sub
iret
or
mov
adc
aam
stc
mov
dec
dec
add
nop
pop
or
sub
xlat
and
dec
mov
adc
adc
push
add
pop
sub
or
shl
inc
add
jp
ins
rcl
rcl
xchg
stos
(bad)
push
push
dec
hlt
not
push
stos
push
arpl
retf
mov
repz
cmp
mov
mov
push
dec
adc
sub
mov
xor
xor
mov
dec
aam
inc
in
xchg
ret
cmps
enter
stos
jmp
xchg
push
dec
movs
fs
sub
xchg
call
sbb
mov
out
in
fimul
inc
add
stos
cmps
mov
sbb
push
push
xor
aam
in
xchg
dec
push
xchg
mov
push
pop
xchg
out
in
xor
lea
movs
movs
shl
jp
mov
jo
test
or
or
adc
cmp
dec
fcomp
adc
add
aas
mov
lods
les
sub
mov
pusha
dec
mov
sbb
retf
adc
push
gs
repnz
dec
out
or
cmps
out
test
pand
adc
jno
pop
imul
imul
and
xchg
call
jg
jmp
xchg
pop
add
xor
xchg
cmp
fimul
xor
nop
stos
es
retf
outs
mov
sub
pop
call
repnz
cmp
mov
mov
push
popf
mov
test
shl
and
xchg
daa
xacquire
cdq
popa
xchg
pop
stc
mov
lock
or
dec
push
or
xchg
dec
inc
not
sub
(bad)
rcl
inc
mov
pop
inc
call
jg
stc
hlt
lock
mov
push
add
aas
add
cs
fdivr
add
scas
scas
lahf
inc
test
xor
imul
jmp
mov
and
sub
or
cmp
setno
push
std
jecxz
fs
fimul
xchg
jle
(bad)
sbb
add
pop
and
adc
das
sbb
lods
js
mov
dec
xor
cmp
mov
aaa
sahf
push
mov
mov
rcl
div
pop
repz
sub
cmc
(bad)
xor
push
mov
je
dec
or
mov
daa
ret
test
(bad)
mov
popa
repnz
dec
cmps
push
xor
fwait
retf
pop
pushf
cmps
ret
leave
dec
push
sar
mov
scas
test
push
push
sar
xchg
push
mov
in
add
out
and
lds
add
jecxz
cmp
sbb
xor
adc
test
jge
sbb
lods
movs
sar
xchg
cmp
xchg
movs
js
inc
in
call
fdiv
dec
mov
jns
inc
push
mov
lahf
loop
cmp
jp
add
retf
mov
push
add
mov
cmp
xor
in
data16
int3
outs
jl
leave
or
dec
ins
pop
rcl
sub
mov
xor
out
out
jb
add
aas
outs
scas
in
mov
stos
dec
(bad)
aam
jmp
push
cmps
stc
jecxz
mov
scas
pop
(bad)
retf
push
push
fcmovb
or
cmp
idiv
sub
test
pop
push
mov
mov
fidivr
sahf
inc
(bad)
shl
or
inc
fs
nop
sub
iret
sbb
and
add
data16
ins
mov
cmp
dec
and
js
sbb
push
add
loopne
xor
xchg
xor
sbb
lods
js
mov
(bad)
mov
jo
adc
push
adc
jbe
jmp
test
js
retf
lds
fist
inc
(bad)
sbb
push
jo
movs
push
pop
cmps
scas
in
inc
push
je
dec
stc
jle
call
inc
cmp
adc
mov
sub
adc
ins
jns
ds
push
cdq
sbb
cdq
(bad)
popf
xor
(bad)
in
ins
add
ins
jmp
test
cmp
arpl
sub
cmps
jg
jns
xchg
or
mov
lahf
push
test
aam
add
aam
jmp
movs
lods
mov
dec
and
push
pop
cld
sti
cdq
dec
push
xchg
stc
or
mov
push
mov
sub
mov
push
stc
jl
jp
cmps
fstp
leave
mov
imul
mov
adc
repnz
and
inc
mov
cmc
out
and
mov
mov
sub
cmovno
imul
jp
(bad)
aam
cwde
test
adc
add
push
cmp
or
cmp
in
and
push
(bad)
stos
pop
jmp
and
adc
or
jecxz
std
mov
jecxz
inc
dec
add
call
jns
cmps
mov
push
fs
hlt
xor
pop
fldcw
push
scas
dec
mov
adc
xor
iret
xlat
cli
pop
fsubr
ins
xchg
(bad)
push
xor
leave
push
push
xor
add
mov
sbb
cmp
xor
je
in
inc
push
inc
add
and
push
mov
repnz
test
mov
xchg
scas
mov
call
and
mov
nop
iret
inc
push
add
aad
out
scas
mov
jo
(bad)
sti
retf
neg
pop
retf
imul
aam
pushf
sub
push
jl
imul
inc
je
(bad)
stc
push
and
fidiv
js
pop
jbe
add
push
sub
push
clc
in
fdivr
jae
push
xchg
fnsave
aad
jb
sub
push
mov
push
mov
movs
movs
sahf
jp
(bad)
pop
cdq
sbb
cmps
and
pop
icebp
out
jne
xchg
sub
popa
adc
movs
sub
shr
(bad)
enter
jmp
sar
pop
push
push
mov
push
push
mov
or
mov
pop
dec
fwait
mov
dec
mov
repnz
adc
and
sbb
jb
dec
outs
add
outs
(bad)
and
aam
loop
adc
lahf
dec
jo
add
ret
jmp
(bad)
cmp
mov
mov
push
retf
mov
or
jmp
xor
fsubr
daa
ss
sbb
adc
jmp
fdivr
hlt
test
fucomi
dec
lea
dec
sahf
cmps
lea
add
add
push
sar
je
cli
fadd
ss
ficomp
and
mov
lods
and
jecxz
and
std
pop
cmp
test
aam
cmc
outs
in
aam
fs
add
xor
fs
add
push
add
call
push
or
dec
dec
xchg
mov
mov
or
mov
adc
sbb
xchg
push
or
and
xchg
int3
scas
mov
sbb
mov
arpl
mov
imul
or
lahf
lahf
pop
jnp
adc
inc
mov
mov
jg
addr16
sbb
xchg
inc
mov
inc
es
push
sub
fisttp
jne
in
mov
scas
movs
push
sub
sub
push
push
sub
sbb
mov
lds
jecxz
test
shl
inc
and
in
fcom
inc
pcmpgtw
mov
jbe
xor
mov
jno
add
sbb
and
xor
ret
aam
xchg
mov
addr16
stos
fs
or
sbb
pop
mov
int
cli
or
(bad)
jmp
pop
jo
add
lods
cmp
jg
stos
fcmovnb
shl
test
mov
sbb
enter
jg
inc
or
out
fimul
mov
push
inc
dec
lods
arpl
push
pop
rol
push
pop
(bad)
(bad)
mov
ds
push
cmp
shl
jl
inc
push
(bad)
pop
and
push
inc
int
inc
mov
fadd
aas
loopne
inc
inc
mov
fisub
scas
xchg
in
jb
dec
scas
xchg
sub
inc
xor
pop
mov
jno
fwait
jle
mov
jbe
inc
inc
inc
mov
inc
sub
add
xchg
iret
dec
ss
ret
jmp
pop
xlat
in
std
xchg
cmps
dec
push
fisttp
or
stos
mov
loop
shl
inc
mov
int
push
outs
jnp
sub
cmp
jmp
pop
adc
imul
(bad)
rol
retf
jg
iret
push
xor
rcl
imul
adc
mov
mov
push
xchg
mov
and
das
mov
mov
and
adc
stc
aam
add
xchg
fdiv
xor
mov
cmp
dec
adc
mov
and
or
pop
pop
add
push
inc
adc
popf
inc
push
push
jge
mov
mov
jp
add
out
inc
cmp
aas
ds
mov
adc
push
dec
mov
sub
ret
lods
stos
sub
repnz
cmp
test
sbb
cmps
movs
dec
sbb
xchg
sub
mov
test
or
ds
(bad)
jmp
xlat
push
js
in
xor
je
int3
pop
push
shr
repnz
add
retf
cmp
jns
cmp
mov
mov
jno
jmp
jb
icebp
or
xchg
jecxz
es
pop
cmp
xor
mov
stos
dec
and
stos
push
cmp
aad
sub
cwde
in
dec
int
ret
shl
mov
imul
mov
lods
test
and
mov
in
xor
cmp
pop
mov
jmp
push
fisub
pop
dec
and
test
xchg
inc
gs
mov
dec
sbb
and
push
scas
push
mov
fidiv
sbb
cmp
(bad)
pop
jp
mov
ins
push
dec
add
inc
movs
jb
xchg
push
lock
add
adc
ja
iret
outs
(bad)
popf
pop
push
push
ins
cmps
loop
mov
add
push
ins
pop
pcmpgtw
rcr
out
jno
jmp
adc
sub
add
sub
xchg
std
mov
push
in
push
(bad)
mov
lahf
inc
fsub
sar
xlat
ss
mul
mov
jecxz
push
xchg
inc
add
push
lods
sbb
pop
or
sub
dec
or
pop
pop
fidiv
pop
lds
dec
xor
or
and
out
and
xlat
sub
push
out
add
dec
das
cmp
test
loope
popf
sub
imul
cmp
(bad)
adc
int3
rol
bound
xchg
pop
test
xchg
jo
mov
arpl
xor
out
mov
int
sub
shl
je
hlt
iret
pop
push
rcr
dec
mov
dec
cmp
cmps
std
and
push
xchg
xlat
and
lods
jg
test
pop
push
mov
push
int3
and
jg
push
addr16
pop
test
fstp
or
add
mov
dec
adc
sti
loop
mov
push
mov
mov
rol
mov
push
sahf
js
xor
and
and
jo
ret
mov
mov
icebp
(bad)
sbb
shl
int
mov
inc
cmp
rol
add
adc
stc
xchg
pop
stc
jecxz
(bad)
adc
pop
ds
sub
push
stos
push
add
pop
arpl
fld
sahf
sub
imul
dec
xor
call
mov
add
xor
stc
dec
xchg
cdq
into
ret
ret
ins
fsubr
inc
jp
mov
out
mov
ror
sub
ja
inc
in
fsubr
data16
lds
mov
fs
ror
sbb
xor
xchg
pop
ins
rcl
pop
enter
dec
jle
pushf
stc
jo
movs
sub
jmp
mov
rcl
stos
int
loope
cmc
xor
fadd
jg
lahf
js
push
mov
data16
mov
imul
inc
adc
jl
and
rcr
addr16
mov
mov
imul
in
sbb
mov
mov
dec
add
outs
pop
ins
test
jae
jnp
icebp
cmp
mov
addr16
xchg
cld
inc
addr16
add
cmp
call
test
out
scas
movs
fcomp
bound
mov
nop
mov
mul
retf
test
icebp
sti
cmp
or
jbe
test
pop
sub
hlt
call
push
mov
and
jecxz
or
push
jns
xlat
fimul
dec
jne
inc
pop
aas
mov
stc
or
out
popf
dec
outs
daa
mov
mov
pop
enter
push
fs
and
mov
lds
or
pop
dec
nop
scas
movs
and
pop
mov
xchg
loop
aad
push
std
add
cli
mov
adc
pop
sbb
adc
xchg
stc
cmp
lods
(bad)
cmp
pop
sub
mov
push
inc
and
cmps
fwait
inc
mov
jge
mov
or
scas
push
adc
imul
and
sbb
into
cdq
mov
push
jge
add
or
shr
sbb
out
mov
mov
shl
fiadd
(bad)
inc
push
add
stc
push
xchg
ins
or
mov
jb
imul
cli
mov
and
sub
sbb
fs
cdq
les
and
in
or
mov
xchg
imul
(bad)
hlt
aad
xor
add
iret
cwde
sbb
sub
mov
mov
jle
lock
shl
cli
jmp
or
jp
test
and
dec
dec
push
xor
and
cdq
and
cmps
cld
sbb
(bad)
mul
fadd
out
and
rcl
mov
(bad)
push
mov
icebp
stc
sub
add
ss
and
add
add
sbb
add
aas
sub
aaa
data16
movs
sti
test
push
aam
aam
in
test
mov
xchg
icebp
stos
add
test
jnp
jnp
ss
push
mov
jmp
xchg
test
mov
pop
int
sti
ins
fwait
bound
mov
and
sub
inc
adc
test
arpl
fst
mov
mov
pop
push
sub
jb
(bad)
addr16
xor
and
cmp
rcl
jne
ret
stc
scas
ss
xchg
jle
push
jl
cmp
test
xlat
movs
pop
ss
out
aaa
mov
pop
dec
push
retf
mov
xor
jne
mov
mov
and
out
mov
mov
fdiv
and
outs
jge
cmp
and
sahf
cmp
add
sbb
clc
inc
add
mov
and
jg
jecxz
dec
mov
(bad)
mov
push
push
fisubr
movs
lea
push
push
jns
mov
xor
(bad)
mov
mov
dec
xor
jle
sbb
out
pop
jecxz
popf
pop
ja
ins
fisubr
pusha
pop
mov
popa
inc
daa
mov
int3
mov
cmp
pop
test
push
fiadd
dec
pop
test
xor
pop
dec
sub
mov
mov
test
pusha
(bad)
(bad)
dec
push
push
or
sar
add
bound
repz
mov
adc
xchg
js
or
dec
mov
pusha
scas
mov
sub
or
fild
(bad)
jmp
scas
ins
int3
dec
loope
in
arpl
dec
push
add
inc
push
mov
sbb
push
jle
mov
xor
adc
sbb
test
stos
jp
add
je
(bad)
in
jecxz
xor
(bad)
std
jge
lods
ja
sub
xchg
cwde
imul
in
jmp
das
sub
aam
push
push
and
sub
push
sar
mov
and
addr16
or
lea
(bad)
loope
cs
dec
cmp
cmps
jns
inc
imul
jo
jno
pop
into
mov
jp
movs
jle
jb
mov
pop
iret
and
adc
push
stos
dec
ret
jmp
pop
adc
inc
and
adc
or
xor
nop
pop
pop
pop
fst
sub
inc
int3
stc
icebp
aas
addr16
dec
dec
mov
rcl
xchg
pop
aas
rcl
imul
sbb
movs
mov
dec
dec
mov
xor
movs
pop
push
xchg
mov
mov
sub
xlat
add
mov
dec
test
fadd
es
test
into
mov
imul
stc
sbb
sub
sbb
adc
cmp
movs
imul
push
out
pop
sahf
mov
mov
dec
cli
cwde
call
jge
movs
push
pop
aaa
mov
ins
ss
sbb
adc
adc
dec
add
jmp
jmp
push
xchg
cmps
or
leave
cmc
inc
das
xchg
cmp
and
(bad)
mov
imul
cmp
dec
(bad)
neg
les
neg
adc
cld
mov
or
sbb
pop
sbb
jne
sbb
cmp
adc
sbb
add
xchg
aam
ror
sbb
add
scas
sbb
add
jmp
test
fwait
or
leave
jmp
sbb
dec
push
movs
std
movs
cmc
pop
fnsave
out
stos
test
pop
sahf
cdq
push
push
inc
dec
fidivr
xor
test
repnz
sub
xlat
cdq
dec
push
mov
mov
pusha
adc
add
cmp
add
mov
loop
xchg
add
bound
push
adc
cmp
pop
add
mov
xchg
mov
gs
cmps
push
xchg
push
mov
jp
mov
and
mov
in
fistp
mov
jbe
mov
movs
sbb
sub
sti
cmp
jae
cli
movs
and
inc
pop
icebp
test
sub
popf
outs
inc
cld
xchg
dec
js
pushf
addr16
test
sbb
sahf
xchg
xchg
sbb
loop
push
push
hlt
mov
add
adc
arpl
xchg
rol
retf
test
jl
pusha
jp
cmp
repz
test
aaa
sbb
mov
xchg
je
cmp
and
mov
mov
jne
sub
lods
cmp
push
in
sub
aam
aaa
(bad)
cmp
loope
mov
push
push
or
(bad)
out
xchg
jp
pop
fnstcw
mov
inc
sub
cmp
mov
add
and
arpl
in
arpl
in
jle
ret
fldcw
sbb
pop
and
stos
pushf
aam
xor
and
jge
das
cmps
test
or
or
pop
pop
or
cdq
pop
push
jmp
and
push
push
push
adc
clc
out
mov
(bad)
sahf
aad
sub
rol
or
cmps
push
iret
out
jecxz
xor
in
and
pop
outs
dec
mov
jmp
jns
mov
mov
push
jo
push
push
sub
not
ins
cmp
add
lahf
dec
je
iret
std
pushf
push
aam
shl
push
outs
or
sbb
sbb
adc
add
dec
mov
pop
sbb
inc
pop
pop
cmc
std
popf
inc
sbb
arpl
ds
xchg
add
push
pop
retf
cld
popf
pop
(bad)
dec
inc
inc
xor
sub
push
xor
xchg
xchg
arpl
enter
leave
in
(bad)
and
inc
cmp
or
sbb
imul
(bad)
mov
in
xor
hlt
jne
xor
pop
mov
loop
add
loop
in
movs
imul
add
pushf
aam
arpl
adc
push
jo
xor
lods
in
int
mov
inc
inc
pop
pop
adc
ds
jl
sbb
or
add
add
iret
mov
xor
rcr
ret
test
imul
xor
in
es
push
mov
xor
push
out
movs
fld
adc
mov
mov
call
and
mov
cmps
pop
pushf
inc
outs
xchg
mov
dec
or
cmp
fld
mov
stos
shr
cli
jae
rcr
dec
mov
repnz
jge
mov
sub
sti
sti
add
lock
rol
icebp
loopne
aad
imul
stos
sub
xchg
sbb
js
push
movs
push
xor
sub
aam
dec
and
pop
icebp
out
das
aaa
iret
fs
mov
scas
sub
or
jecxz
pop
bound
stc
pusha
bound
add
inc
sub
push
cli
hlt
add
cdq
rcl
add
fs
dec
cmc
in
inc
cli
jle
mov
or
pushf
fdiv
outs
loope
sbb
add
sub
dec
cmp
push
mov
pop
xchg
nop
mov
dec
or
dec
addr16
cmp
movs
inc
push
aas
inc
std
cmp
pop
inc
jmp
pop
mov
adc
mov
add
lahf
pop
movs
les
imul
inc
push
mov
sbb
mov
div
pop
xor
in
push
mov
xchg
in
fcmovnbe
mov
xchg
xchg
pop
out
pop
xchg
xor
les
arpl
xor
cdq
mov
bound
scas
sbb
daa
pop
enter
mov
mov
(bad)
jo
int3
test
les
xchg
add
popf
or
xor
lds
jae
bound
scas
ficomp
or
call
or
repnz
test
mov
lahf
popa
imul
outs
xchg
pop
mov
mov
sbb
and
stos
push
or
fadd
add
mov
pop
fst
fstp
xchg
sub
cli
pusha
or
ins
dec
jp
xor
cmp
lods
xor
rcl
int
xchg
cmp
retf
jb
lahf
bound
loop
rcl
jns
push
repz
mov
mov
mov
out
and
sub
dec
add
cdq
mov
les
mov
jle
(bad)
das
std
pop
add
outs
bound
jmp
inc
pop
aam
cld
mov
dec
pop
xor
jle
mov
mov
ret
cs
push
es
dec
mov
sub
idiv
jge
cmp
push
cli
dec
mov
les
add
xchg
movs
ret
push
(bad)
sbb
xchg
scas
add
mov
outs
dec
ret
mov
adc
mov
push
cld
adc
push
or
xor
sub
jnp
fnstcw
jno
pop
clc
jge
push
dec
and
xlat
cmp
sub
mov
mov
jnp
popf
dec
xor
jmp
fs
jecxz
mov
mov
shl
test
jg
mov
pushf
mov
stos
xchg
adc
inc
sbb
cmp
sti
mov
xor
push
cmp
mov
test
jle
inc
test
sub
xor
dec
imul
push
xor
push
test
jbe
lahf
data16
ja
jo
rcl
sbb
iret
cmp
jns
int
push
lods
mov
hlt
std
add
movs
stos
(bad)
into
xchg
pop
xor
push
nop
movs
xchg
push
mov
cmps
test
mov
mov
adc
or
imul
out
in
popa
ins
xor
and
scas
in
sbb
jmp
imul
jne
mov
mov
sub
adc
dec
add
fidiv
adc
fwait
jecxz
push
sbb
jl
test
and
adc
int
xor
ret
jmp
test
or
push
stc
(bad)
je
ror
xor
mov
dec
mov
lahf
xor
cmc
xchg
mov
mov
fld
dec
lods
ins
loop
xchg
add
cmp
shr
push
int3
push
cmp
fcmovnu
mov
pop
cdq
mov
retf
pop
dec
movs
xchg
or
jmp
(bad)
imul
cmp
mov
and
inc
or
mov
dec
adc
jl
rol
fadd
jbe
mov
ror
repz
and
xchg
xchg
mov
xor
inc
not
xchg
or
and
add
mov
push
lock
or
cmp
pop
dec
jnp
fwait
mov
cmp
xor
leave
mov
cmp
add
pop
mov
stc
je
retf
inc
fwait
arpl
nop
test
xlat
xor
add
sub
pop
and
add
iret
mov
xor
pop
xchg
loop
les
fdiv
in
jecxz
adc
jmp
movs
xchg
jb
loop
out
sbb
jmp
xchg
inc
imul
inc
xchg
push
sub
idiv
outs
pop
sub
leave
lock
sar
mov
sub
mov
and
push
(bad)
mov
lds
xlat
sbb
and
outs
push
loop
or
xchg
ror
cmp
outs
ins
test
or
push
push
or
pop
cmp
and
(bad)
jg
movs
mov
rcl
ror
rcl
adc
nop
sahf
push
mov
mov
sahf
sbb
lods
cmp
in
cmps
bound
xchg
in
sub
call
xchg
push
in
fdiv
push
cmp
push
lods
cmc
sbb
or
call
ds
mov
inc
xchg
xor
mov
outs
push
cmp
scas
lods
dec
rcr
pop
jae
das
repnz
jnp
std
gs
or
push
(bad)
sbb
mov
pop
sahf
pop
in
jmp
les
push
mov
popf
cmp
(bad)
fld
xchg
mov
adc
ins
jo
hlt
cmp
cli
std
dec
iret
mov
mov
aam
mov
adc
pusha
inc
and
xor
out
js
xor
sub
test
shr
inc
mov
jecxz
add
iret
cmp
fisubr
and
inc
stos
mov
jp
jmp
and
mov
das
xchg
inc
push
test
xchg
jns
and
in
jo
inc
pop
jnp
dec
add
jns
mov
lock
or
cmps
sub
jle
xchg
arpl
jle
mov
ins
mov
add
push
cdq
shr
cmps
jmp
xchg
rcl
dec
nop
mov
movs
leave
call
movs
dec
push
sub
std
lds
push
cli
jno
cs
sbb
dec
sbb
push
sub
push
and
repz
es
repz
test
xor
dec
cmps
cmp
mov
inc
add
sbb
inc
(bad)
in
sub
lahf
add
(bad)
sbb
cmps
pop
stc
pushf
inc
arpl
in
push
mov
loopne
test
cmp
jle
outs
(bad)
(bad)
shl
push
mov
pop
push
je
jecxz
jmp
movs
push
xchg
aam
dec
jno
je
(bad)
in
jne
(bad)
in
jmp
dec
jbe
sahf
add
push
(bad)
and
fistp
adc
and
dec
dec
mov
test
retf
shl
jae
out
lds
in
pop
inc
cmp
nop
or
xor
add
or
mov
push
in
into
vphadddq
aad
xchg
xchg
adc
lea
mov
and
dec
dec
cmps
out
fnsave
enter
inc
mov
xchg
sub
mov
xlat
push
bound
inc
mov
cmp
push
stos
lea
(bad)
idiv
mov
in
mov
les
dec
ss
jbe
leave
ret
adc
aam
sbb
inc
jo
fcomi
lods
retf
inc
test
xor
mov
call
add
jae
xchg
jge
mov
outs
arpl
xchg
stos
pusha
loope
mov
sub
push
mov
aam
stc
or
int3
mov
sbb
cmp
push
iret
leave
mov
in
xor
dec
jo
arpl
call
aam
cmp
arpl
fst
sbb
fsubr
imul
fld
(bad)
arpl
mov
sub
stos
in
stos
leave
sbb
and
dec
es
sahf
sub
mov
sbb
(bad)
jmp
into
ins
xchg
pop
cmp
inc
cmps
enter
jp
sti
cdq
cmp
dec
ror
aam
and
rol
dec
lock
dec
dec
adc
cmp
inc
test
push
mov
jmp
bound
xchg
or
shr
lea
push
push
cmp
or
add
lahf
dec
adc
inc
hlt
popa
enter
sub
sub
stos
or
out
pop
test
sti
jp
sub
inc
inc
ret
xchg
jg
out
push
mov
outs
in
shr
adc
cmp
pop
add
lahf
cmps
pop
cmc
pusha
out
jbe
mov
xor
mov
shr
pop
js
jecxz
loope
arpl
pop
lahf
jo
ss
mov
ficomp
not
jp
sbb
mov
mov
aas
cmps
inc
stos
adc
push
cmp
rcl
cmc
gs
inc
push
mov
popf
push
fwait
xor
push
stos
or
mov
xor
repz
gs
(bad)
stos
add
add
mov
jl
and
jge
xchg
and
(bad)
call
mov
sbb
pop
inc
shl
psadbw
test
mov
inc
dec
dec
jecxz
and
cmps
mov
ror
mov
outs
sub
dec
dec
sub
movs
jae
pop
pop
hlt
sbb
sahf
sub
cld
mov
addr16
jle
fcomp
leave
and
mov
jb
mov
sbb
(bad)
push
(bad)
pop
mov
out
and
mov
lea
ffreep
cmp
std
xlat
cmp
inc
xor
inc
test
mov
pusha
mov
sbb
outs
fild
sti
xchg
data16
push
pop
mov
shr
sbb
loopne
and
(bad)
loop
jecxz
inc
jmp
dec
jmp
cmp
lahf
scas
jecxz
or
mov
mov
adc
retf
aad
mov
push
lahf
in
jmp
jno
adc
pop
xchg
iret
pop
cli
jnp
enter
sbb
dec
sbb
adc
xchg
call
aad
mov
xchg
push
out
dec
outs
jmp
cmc
jae
and
fist
std
pushf
je
sbb
ja
sub
xlat
pop
repnz
jp
mov
outs
mov
cmc
adc
push
pop
mov
loope
sub
inc
pop
dec
(bad)
es
cdq
add
fstp
arpl
fcomp
jne
(bad)
int3
enter
(bad)
add
xchg
jmp
sbb
int3
cvtpi2ps
lods
sub
fadd
jne
cmps
add
leave
cmps
hlt
stos
jae
inc
cmp
sti
mov
bound
xchg
mov
mov
xchg
jno
push
(bad)
fmul
iret
aas
xlat
or
add
fsubr
xchg
repz
inc
jb
dec
inc
les
dec
xor
retf
push
xchg
enter
dec
pop
sbb
push
sub
sbb
xchg
cmps
shr
jno
(bad)
fimul
dec
int3
xchg
in
adc
sbb
xchg
in
xchg
mov
pop
les
cmps
aam
repnz
fcmovnb
xlat
mov
push
jecxz
jns
cmp
cmp
mov
imul
xchg
sbb
pusha
jnp
add
cmc
icebp
add
pushf
jmp
and
mov
xchg
pop
(bad)
in
popf
inc
mov
push
sub
test
and
xchg
push
cwde
in
js
movs
cmps
push
retf
push
in
test
in
or
adc
gs
mov
ror
dec
xor
(bad)
mov
mov
pop
pop
outs
inc
push
outs
cwde
xchg
push
xchg
add
out
xchg
lahf
lods
cmp
ficom
mov
cmp
or
mov
pop
push
std
adc
push
inc
add
add
nop
outs
jg
aaa
cmp
jecxz
mov
and
push
xor
in
repnz
mov
pop
mov
mov
js
lods
loop
pop
or
xor
lds
ret
jnp
mov
(bad)
mov
repz
mov
dec
mov
push
int
mov
jmp
push
lea
ret
push
js
add
or
push
test
and
fadd
fwait
inc
clc
push
hlt
nop
das
hlt
pop
pop
ret
(bad)
std
in
rcr
cmp
repnz
or
inc
int3
push
icebp
scas
dec
outs
fs
iret
jecxz
dec
nop
sub
mov
cdq
stc
add
into
xchg
jno
call
adc
popa
mov
inc
or
xor
add
mov
mov
out
adc
pop
dec
arpl
push
je
popf
or
or
add
inc
cdq
jecxz
dec
in
js
dec
push
push
or
pop
ucomiss
adc
call
add
stos
adc
and
enter
leave
cmp
lods
mov
js
sbb
imul
fwait
sbb
sbb
scas
cmps
cmps
mov
sub
xchg
and
mov
fistp
push
lods
add
or
rcr
ds
cld
push
and
call
jle
nop
push
ret
push
adc
or
es
dec
cmps
mov
lds
ficomp
add
push
xor
daa
test
shr
(bad)
out
hlt
lods
mov
aam
add
in
adc
(bad)
inc
xor
or
mov
shl
pop
xchg
into
enter
mov
mov
sub
mov
push
ret
stc
and
mov
loope
sbb
and
hlt
test
xchg
and
xor
jns
sbb
jmp
dec
add
fidiv
pop
stos
push
push
push
or
cli
add
sbb
and
arpl
sahf
sub
pop
pop
add
inc
jns
aas
lock
add
adc
lods
nop
mov
frstor
xor
imul
mov
imul
inc
arpl
and
(bad)
xor
dec
mov
lahf
imul
cdq
call
fcmove
adc
or
jmp
in
ret
sub
in
icebp
or
inc
js
mov
in
mov
push
arpl
fsub
xchg
jmp
mov
jp
jo
mov
dec
inc
mov
xchg
jp
js
loope
ror
dec
addr16
pop
add
xchg
js
ss
inc
retf
jecxz
inc
sub
popf
movs
mov
add
sbb
stos
shl
mov
pop
(bad)
(bad)
lock
push
movs
cmp
cmp
fimul
out
movs
outs
jne
push
test
jecxz
cmp
retf
jno
inc
les
pop
loop
dec
and
movs
push
mov
hlt
in
adc
je
jmp
and
femms
out
bnd
cmp
cmps
mov
mov
imul
cwde
addr16
lods
xor
add
mov
fsub
pop
fldlg2
pop
cs
aaa
or
add
out
add
hlt
sbb
adc
cmp
push
and
jns
call
cmp
jmp
jns
aad
inc
push
lahf
test
mov
and
xchg
or
xchg
adc
dec
(bad)
pop
daa
rcr
test
cli
stos
and
mov
int
icebp
mov
add
js
fidiv
(bad)
or
test
stc
rcl
mov
cmp
scas
(bad)
mov
cmc
cmc
push
rcl
push
inc
push
movs
adc
mov
jle
or
mov
test
sbb
(bad)
cld
cld
mov
and
add
pop
sub
or
add
movs
hlt
mov
sub
mov
pop
retf
dec
arpl
les
sahf
cli
lods
inc
sub
jnp
outs
nop
ins
mov
sub
jno
lock
test
or
inc
test
push
jge
das
cmc
push
test
js
es
retf
dec
(bad)
pop
fld
adc
leave
and
add
fadd
outs
dec
jle
rol
dec
mov
add
gs
or
in
ficomp
aad
cvtpi2ps
repz
dec
sbb
shl
xlat
inc
dec
mov
push
sbb
pop
mov
dec
(bad)
pop
mov
sbb
inc
das
ins
push
loop
add
fwait
dec
movs
shl
cmp
sbb
pop
jg
jno
cmc
adc
xchg
stos
dec
add
lahf
push
cmps
in
(bad)
mov
inc
clc
out
fstp
xor
mov
and
dec
cmp
push
scas
cmp
ins
outs
outs
xor
jmp
lea
push
pop
test
xchg
(bad)
jne
pop
iret
add
mov
data16
push
aas
outs
imul
pop
pusha
in
fistp
mov
jbe
mov
add
mov
and
js
mov
ins
mov
inc
bound
ficomp
pop
jbe
fmul
test
mov
ss
dec
bound
xor
inc
add
sbb
xor
add
sbb
jne
jge
dec
xor
pop
and
int
fisttp
fwait
imul
out
stos
out
and
cmp
add
sbb
in
and
pop
leave
fwait
or
dec
xchg
pop
test
sub
push
stos
mov
add
jmp
std
(bad)
ja
add
sub
pop
adc
pop
jge
call
gs
mov
test
mov
push
call
out
rcl
jns
data16
int
pop
xchg
mov
add
and
xchg
gs
pop
add
ret
lods
imul
fisub
mov
sub
mov
jge
and
sbb
pop
test
or
inc
inc
add
add
repz
cld
cli
pop
in
mov
pop
scas
xchg
movs
call
rol
inc
adc
sti
pop
adc
inc
add
pusha
ds
cli
icebp
cmc
ds
xchg
outs
inc
dec
cmp
fs
push
or
jl
pop
and
add
int
mov
inc
scas
in
sbb
push
pop
adc
dec
repnz
call
mov
xor
and
cmc
aaa
std
not
adc
call
lods
scas
add
daa
rcl
mov
mov
ins
jp
(bad)
sbb
nop
stos
sub
inc
add
in
mov
shl
jns
imul
fnstsw
aas
ds
cs
ret
(bad)
hlt
icebp
addr16
addr16
push
arpl
mov
cmp
push
dec
ds
sub
in
inc
icebp
cdq
iret
cdq
hlt
cld
mov
retf
stc
je
ds
nop
mov
pop
pop
icebp
pop
inc
xor
mov
(bad)
adc
and
or
cmp
ret
dec
in
pop
es
nop
cmps
and
sbb
inc
adc
add
test
out
rol
push
mov
cld
xor
stc
jne
out
push
xchg
jmp
loop
jmp
sub
or
imul
pop
mov
mov
xor
xor
add
push
loop
imul
pop
rcr
fisub
rcr
rol
cmp
xchg
mov
scas
fdivp
les
not
iret
int3
jle
mov
cs
lods
sub
test
fwait
pop
dec
xchg
xor
neg
and
and
ror
xor
pop
into
or
loop
fdivr
mov
and
and
lock
push
imul
xchg
pop
test
sbb
xor
jge
push
dec
sbb
adc
jbe
fsubr
mov
pop
mov
push
popf
inc
xchg
imul
pop
sbb
fiadd
inc
or
mov
push
loope
cmp
pop
or
mov
sbb
out
loop
or
fwait
push
sbb
mov
xchg
sbb
cdq
push
xchg
and
call
jnp
movs
mov
fidiv
pop
mov
(bad)
hlt
repnz
cmp
dec
push
mov
les
xor
js
rcr
div
ss
push
cs
pop
mov
ins
push
sbb
enter
(bad)
xchg
(bad)
cmps
push
jns
das
mov
mov
in
popf
cmp
pop
mov
mov
push
(bad)
jge
pop
xchg
dec
push
push
sbb
inc
dec
pop
pop
neg
sbb
dec
retw
dec
inc
adc
in
fdivr
rcr
jno
xchg
xor
jae
gs
cmp
ins
arpl
or
ret
test
in
inc
mov
jnp
cdq
pusha
cli
popf
push
loopne
fild
jp
pushf
out
out
lea
push
nop
outs
mov
jmp
dec
popfw
lods
cmps
jns
jmp
push
push
loopne
mov
jo
mov
mov
and
lds
dec
jno
call
pop
cld
inc
test
add
stc
xlat
mov
clc
dec
mov
in
int3
pop
lds
shl
sbb
jnp
xor
mov
cmps
(bad)
mov
(bad)
cli
sbb
xor
mov
fnstsw
into
mov
bound
mov
fcomp
cmp
and
push
push
xchg
sub
in
hlt
pop
jnp
stc
mov
adc
sbb
cmp
add
xchg
ins
es
shr
imul
scas
cmp
movs
cmps
and
pop
pop
fcom
clc
xchg
retf
mov
dec
or
lea
add
fs
paddusb
fcmovbe
cmp
out
ins
sbb
shl
adc
add
call
sbb
xchg
adc
sub
mov
dec
ss
pop
pop
stos
ins
pop
dec
mov
in
sub
mov
aad
js
or
in
mov
mov
dec
test
jns
repz
add
pop
fcmovb
add
rcr
push
pop
mov
add
push
pop
aaa
xchg
mov
arpl
and
sub
push
mov
sub
push
push
movs
mov
shl
add
mov
mov
pop
fmul
pop
push
inc
mov
xchg
ret
mov
in
jmp
push
sbb
jae
cmp
out
ds
cs
std
ins
out
repnz
imul
fstp
push
sbb
movs
dec
add
daa
add
aam
sar
xchg
mov
add
(bad)
(bad)
lock
mov
mov
ficom
jp
call
xchg
push
jg
ret
mov
dec
int3
aam
jmp
in
mov
xor
pop
pop
test
ror
and
clc
add
xchg
imul
lods
in
xchg
rcl
dec
jle
ret
test
mov
add
das
push
outs
enter
(bad)
(bad)
je
adc
dec
push
sbb
adc
daa
cs
sub
lea
pop
dec
test
popf
mov
jecxz
jnp
mov
jno
movs
sub
inc
(bad)
ds
cs
(bad)
popa
push
loopne
rcr
repnz
movs
fst
push
imul
nop
cdq
pop
lea
inc
sbb
data16
mov
pop
cmp
fdivr
sub
mov
sbb
add
jecxz
add
clc
lods
cwde
adc
xchg
mov
ret
dec
cmc
stc
and
lods
push
jo
shl
cmps
nop
jmp
iret
ds
cmps
call
sub
lods
mov
xor
sub
jmp
and
xchg
sar
in
aad
not
lods
cwde
int3
xor
imul
mov
fwait
jp
jle
(bad)
ds
dec
xchg
lods
(bad)
scas
jmp
pop
repnz
(bad)
hlt
or
std
loope
test
jno
daa
mov
inc
mov
(bad)
xlat
lea
(bad)
jecxz
mov
mov
retf
push
xchg
mov
adc
mov
enter
xor
mov
sar
mov
mov
stos
or
push
loope
mov
push
bound
inc
push
xlat
push
sar
cmp
pop
int3
push
movs
fcom
pop
pop
xor
adc
dec
outs
stos
jmp
(bad)
and
cmp
in
dec
imul
cmp
add
inc
sub
jge
cli
cmp
jmp
fnstenv
imul
push
cmp
hlt
retf
and
xchg
shr
xor
inc
loopne
or
cmp
inc
ss
sub
(bad)
jno
dec
pop
fs
xchg
add
je
push
es
and
mov
and
adc
pop
jp
sbb
xchg
sub
sbb
adc
xchg
lahf
dec
cli
add
xchg
push
cli
ror
xlat
fstp
js
cmp
jecxz
mov
in
arpl
nop
inc
ja
sbb
xchg
inc
out
cmp
es
int3
out
call
push
cmc
push
stos
and
sahf
inc
push
out
cmps
addr16
pop
jg
in
push
popa
mov
jne
pop
push
mov
pop
xor
xor
jl
inc
jp
mov
aaa
ins
ret
jo
jmp
lock
sahf
xchg
fcmovbe
aad
mov
call
inc
cmps
mov
stos
mov
pop
xor
cmp
neg
ja
pusha
pop
sub
xchg
leave
jb
arpl
icebp
jle
jp
(bad)
call
ret
adc
jle
pop
addr16
pop
std
lods
repz
mov
jo
movs
ret
shl
xor
call
jne
pop
mov
cdq
push
mov
jnp
dec
loopne
out
push
(bad)
mov
ja
jecxz
mov
xor
xor
pop
fidiv
xor
fcmove
cdq
cdq
push
test
cmp
fwait
mov
ja
in
(bad)
outs
jae
jmp
mov
xor
mov
jnp
fisttp
rcr
cmp
outs
cld
xlat
mov
xor
add
addr16
sbb
jl
retf
and
retf
sub
mov
ss
aam
jns
test
pop
rol
test
jno
scas
scas
inc
addr16
xchg
loope
add
sahf
retf
jp
cmp
mov
sbb
in
(bad)
leave
mov
and
and
dec
mov
fmul
jle
mov
in
test
es
xor
fxch
pop
xchg
gs
push
inc
jns
loope
dec
adc
dec
cmps
test
inc
les
push
and
mov
adc
movs
ror
mov
dec
inc
or
stc
mov
xchg
outs
adc
and
inc
cmp
sbb
add
pop
pushf
aam
retf
in
jmp
mov
mov
pop
adc
jl
out
sti
adc
mov
or
fild
add
adc
popa
pop
or
jns
jp
movs
mov
push
call
jno
test
push
cwde
jmp
std
or
sti
pop
pop
push
sbb
xor
std
mov
push
int
cmps
sbb
sbb
add
pop
jnp
mov
inc
aam
jae
sub
and
loope
sti
cmp
jmp
retf
pop
and
add
inc
cmps
jno
movs
sub
je
fnstsw
pushf
dec
push
cmp
mov
push
(bad)
or
bound
aaa
push
push
rol
mov
jle
std
ret
in
lahf
dec
sub
sar
or
and
jecxz
lahf
dec
lock
ds
xor
add
push
jge
stc
sahf
aas
sbb
mov
dec
push
mov
lods
jb
push
dec
cmp
dec
and
pop
ds
ins
das
and
inc
mov
call
push
lods
fldenv
dec
xor
out
xchg
mov
call
push
aad
dec
dec
out
pop
in
rol
popf
mov
dec
inc
add
add
jge
mov
or
sbb
(bad)
int3
arpl
adc
xchg
adc
shl
in
ficom
jp
test
repz
(bad)
(bad)
dec
push
sbb
sbb
enter
sub
mov
je
add
cmp
adc
lods
retf
shl
jecxz
inc
(bad)
or
enter
cmp
fild
or
inc
cmps
add
lods
xor
or
nop
jns
mov
mov
sub
hlt
mov
cmp
movs
or
jle
std
jg
or
les
add
sbb
(bad)
stos
jg
rcr
les
and
push
out
xor
cdq
hlt
loope
cmp
add
push
inc
and
xor
lahf
sbb
enter
je
or
movs
sbb
mov
add
(bad)
in
mov
sub
mov
xchg
inc
arpl
pop
sbb
adc
push
push
add
mov
xchg
xchg
out
inc
rcr
arpl
ret
out
xchg
test
inc
fwait
mov
xchg
jecxz
int3
or
mov
in
aaa
into
push
xchg
jbe
cmp
xor
(bad)
nop
sbb
scas
push
stc
add
pop
fsubr
ror
xchg
cmp
cdq
stos
mov
or
adc
jns
shl
mov
mov
mov
sbb
adc
iret
push
sbb
or
inc
adc
idiv
sahf
jecxz
popf
mov
in
sbb
sub
xlat
jne
pop
mov
push
or
aaa
ins
jbe
aas
arpl
fs
and
dec
mov
inc
and
pop
icebp
or
mov
xchg
xchg
cli
pop
cli
pop
(bad)
cs
repnz
dec
movs
ficom
imul
cmp
(bad)
out
lods
mov
mov
loopne
inc
cmp
xchg
jmp
pusha
arpl
ret
fnstcw
arpl
dec
push
aad
mov
mov
xchg
cmp
(bad)
scas
das
xchg
xor
jl
out
aaa
sbb
leave
cmps
(bad)
jge
adc
cmp
ss
daa
and
add
out
mov
or
fcmovnb
test
cmp
dec
or
aam
push
or
sub
push
jp
int3
aam
in
xchg
mov
sbb
outs
retf
push
dec
fild
mov
lss
dec
fdiv
pop
push
out
push
inc
pop
sti
les
test
out
jns
(bad)
inc
imul
xchg
pop
mov
fcomp
mov
xor
adc
add
pusha
add
inc
cmp
bound
jp
test
add
aad
std
ss
es
movs
out
jb
jmp
inc
test
sbb
xchg
dec
aaa
js
cli
call
rcr
movs
jp
xchg
ret
cmps
mov
xchg
call
inc
bound
rcl
into
pop
cmp
call
mov
mov
es
je
push
cmps
sbb
inc
retf
push
sbb
push
push
ror
ret
lea
xor
(bad)
scas
retf
cmps
ins
scas
std
sahf
ja
int3
mov
shl
inc
ret
xchg
mov
mul
xchg
xchg
lods
loope
ds
jne
fisttp
retf
jmp
pop
mov
inc
nop
or
push
jg
dec
setg
jmp
cmp
pop
inc
xchg
and
add
cli
xor
fwait
inc
mov
cmc
aam
(bad)
push
test
push
ror
sub
xchg
push
sbb
movs
(bad)
sub
sahf
mov
sti
in
scas
aas
nop
sub
jg
div
fcmovnb
cli
mov
aam
xchg
cmps
mov
mov
jbe
mov
mov
push
jno
retf
mov
sbb
push
xor
mov
cmps
dec
sbb
pop
xchg
sahf
xchg
dec
mov
loope
adc
jnp
mov
fs
or
xchg
add
sar
xchg
jb
pop
sar
xchg
add
pusha
jle
xchg
lods
lods
cmp
sub
fisub
test
and
aam
adc
xchg
and
mov
pop
in
std
popf
fcmove
add
mov
xchg
xor
(bad)
jl
sbb
loop
xchg
cmp
jo
imul
mov
fadd
mov
xchg
gs
inc
adc
test
fucomip
inc
rcr
xchg
retf
mov
push
mov
cmp
jo
mov
stc
aam
aas
ds
sub
xchg
sbb
(bad)
and
pop
sbb
fadd
add
pop
or
dec
repz
push
and
sub
test
addps
xor
in
ins
and
lahf
cmp
fdivr
stc
ja
mov
mov
dec
es
mov
cmps
xchg
mov
mov
mov
scas
xor
imul
out
rcl
imul
call
fdiv
sub
or
jnp
stc
aaa
jbe
mov
repnz
rcl
cmp
mov
mov
mov
aam
push
push
push
xchg
push
inc
xor
mov
iret
sar
add
(bad)
aam
arpl
rcl
cmp
push
inc
dec
xor
lea
cmps
pop
pop
adc
fwait
jnp
fcomp
pop
out
daa
push
mov
js
adc
cmp
daa
into
mov
mov
xchg
retf
dec
jne
adc
inc
rcl
xor
cmp
mov
sbb
fs
mov
into
mov
in
fdivr
add
imul
stos
adc
mov
dec
test
push
call
pop
pop
or
cli
pop
inc
pop
ss
rcl
dec
add
sbb
dec
addr16
mov
ficomp
push
adc
pushf
inc
and
mov
add
adc
shr
(bad)
jno
mov
fmul
and
jle
xchg
push
push
push
jae
sar
cwde
out
ror
rcr
add
xchg
test
mov
cmp
dec
mov
rol
rol
push
inc
ds
mov
and
mov
xchg
cmp
mov
and
aaa
dec
mul
adc
or
pop
cwde
push
cmp
xor
jmp
mov
and
mov
push
rcl
sub
in
aaa
aas
xor
xor
not
push
push
fiadd
lock
not
add
cmc
adc
xchg
and
test
mov
test
mov
or
pop
sbb
and
test
push
mov
or
sub
xchg
rcr
fwait
cld
add
in
mov
dec
jmp
xchg
sub
imul
call
jae
aaa
cs
mov
xchg
cmp
les
sbb
aam
push
mov
jnp
jmp
xchg
or
mov
cmc
mov
and
mov
mov
sub
cmc
jg
hlt
sub
mov
cs
test
(bad)
(bad)
pusha
arpl
rol
daa
dec
les
jg
pop
lahf
cmc
mov
sbb
in
push
xor
dec
stos
call
sti
jecxz
imul
lds
jp
mov
test
(bad)
sbb
or
lods
sar
add
ss
(bad)
jnp
in
dec
push
int3
shl
div
jmp
lods
iret
add
xor
(bad)
popf
cmps
shl
pop
mov
(bad)
out
lahf
sbb
bts
inc
or
pop
(bad)
imul
mov
mov
pop
dec
cmp
cs
and
cmps
add
stos
jo
dec
pop
(bad)
lock
call
adc
enter
cli
xchg
rcr
mov
icebp
and
call
push
out
mov
dec
das
push
push
or
xchg
add
sub
pop
and
xchg
xor
mov
jnp
sbb
sbb
ret
mov
sbb
repz
pop
push
or
xor
dec
mov
xchg
inc
les
or
sti
in
sti
xor
push
iret
xor
ror
test
aam
xchg
pop
cdq
xor
mov
add
loope
push
bnd
test
push
test
xchg
and
mov
sub
or
scas
lods
mov
cmps
ss
aam
sub
test
sub
nop
mov
mov
test
retf
fidiv
jbe
pop
pop
daa
lea
inc
sub
xchg
cld
or
mov
pop
push
push
stos
mov
cmp
sub
pop
add
outs
or
fdivr
xor
(bad)
mov
es
or
hlt
sub
xchg
mov
gs
or
rcl
outs
leave
ss
fucomp
inc
das
mov
dec
ffree
or
test
(bad)
int3
lahf
cdq
cmp
pop
bnd
leave
jae
and
push
push
rol
add
jp
mov
stos
retf
mov
iret
pop
cmp
cmp
and
test
add
cdq
and
dec
xchg
sbb
mov
imul
push
pop
push
or
mov
aas
pop
mov
fcmovnu
push
jl
ja
mov
mov
test
mov
sbb
ret
and
nop
mov
jmp
mov
push
push
sbb
dec
and
add
and
(bad)
fdiv
jae
mov
pop
mov
cmp
mov
jmp
fldenv
int3
dec
lds
nop
js
loope
or
xchg
dec
pushf
xlat
add
jle
fisttp
push
cmps
(bad)
not
jmp
push
std
inc
jecxz
arpl
or
inc
and
jo
cld
cli
jbe
out
sbb
dec
xchg
in
pop
ins
mov
lahf
sbb
dec
stc
pop
shl
pop
sub
and
retf
gs
cmps
cmp
sar
cmps
mov
sub
std
mov
cmp
addr16
mov
mov
loope
ja
(bad)
loop
and
cmps
fisub
dec
ds
movs
imul
sub
adc
jnp
cs
dec
mov
xchg
adc
scas
sub
push
out
sub
mov
mov
or
cld
jmp
mov
aas
rcr
in
scas
add
cwde
leave
movs
sub
into
mov
pop
inc
jno
cmp
out
inc
sbb
cwde
arpl
neg
dec
jb
out
adc
(bad)
movs
repnz
sbb
movs
scas
cmp
fsub
fwait
push
inc
sub
xor
outs
mul
ss
sbb
or
push
xor
push
arpl
cwde
call
sbb
jbe
(bad)
bound
mov
or
stos
stos
nop
push
sbb
sub
(bad)
push
(bad)
fisttp
rol
jns
sbb
les
jle
cmp
(bad)
cs
xor
mov
loop
pop
in
push
sub
in
xor
push
dec
add
push
xchg
sbb
add
cmps
jns
push
or
fsub
inc
adc
xor
std
enter
cwde
adc
movs
mov
aaa
lahf
outs
out
push
clc
mov
ds
adc
cmp
jle
div
dec
ins
lea
imul
add
cs
or
out
push
fcom
cwde
test
sub
repnz
int3
test
cdq
es
int3
jb
push
imul
xchg
in
(bad)
mov
xor
sbb
jne
jno
loopne
cmp
gs
data16
jne
or
mov
dec
js
stc
je
(bad)
ret
sub
jmp
sub
loop
xchg
sbb
sti
test
bound
sub
loope
mov
cmp
and
fmul
xchg
scas
dec
push
xchg
sbb
imul
sbb
or
inc
imul
mov
popa
dec
aam
push
iret
test
repz
sub
cmp
not
push
dec
and
sub
aas
cwde
mov
adc
sbb
mov
dec
xor
sbb
xchg
(bad)
cld
sti
inc
mov
retf
jno
test
sbb
add
nop
add
fdivr
sbb
cmps
imul
and
std
push
iret
and
ja
dec
sbb
pop
fdivr
retf
in
nop
ss
sub
loope
add
add
std
stc
xchg
jns
and
mov
dec
dec
(bad)
daa
pop
and
dec
mov
add
jno
dec
rcr
sti
cmp
ins
mov
push
adc
pand
shl
jmp
(bad)
icebp
(bad)
mov
sti
dec
sub
inc
pop
inc
neg
fwait
(bad)
adc
rol
(bad)
idiv
mov
fild
jmp
sub
push
test
mov
movs
cmp
lods
sbb
aas
ret
stc
mov
mov
stos
mov
ds
cmps
cmp
xchg
in
in
dec
push
js
fimul
pop
jmp
(bad)
mov
rol
dec
push
mov
sub
lahf
inc
imul
rcr
jle
cmps
sbb
inc
adc
scas
inc
addr16
mov
in
daa
icebp
aad
ret
sub
push
ror
mov
push
lods
(bad)
xor
cmp
outs
push
in
xchg
lds
jl
push
inc
pop
outs
scas
scas
push
dec
xor
cdq
add
add
cmps
sbb
pop
aas
mov
std
popf
sbb
jne
mov
aad
dec
loop
enter
outs
rcr
mov
ret
push
cmp
push
sub
add
sbb
das
pop
cmps
and
jmp
inc
fiadd
lods
jl
cmps
jg
inc
xchg
pop
sahf
out
fwait
push
jmp
scas
or
push
dec
pop
lods
out
inc
scas
daa
jecxz
push
xor
pop
mov
sub
cmp
cmp
shr
ret
jl
ror
bnd
repnz
mov
fld
movs
pop
jmp
adc
pop
mov
pop
rol
sbb
inc
call
cwde
pop
jmp
add
mov
imul
call
mov
popf
push
and
dec
popf
call
jmp
push
jmp
stos
inc
jecxz
adc
xor
scas
sti
sbb
pop
xchg
xchg
mov
xor
push
add
std
ds
push
adc
repnz
cmp
call
ins
inc
mov
fucomip
(bad)
fcmovnu
ins
mov
adc
mov
mov
shl
in
mov
dec
ds
or
xor
lock
aam
mov
sub
sbb
retf
jo
and
adc
call
dec
in
mov
fdivr
dec
dec
sub
popf
or
pop
xchg
push
xlat
push
imul
xchg
push
push
sub
push
push
sbb
dec
pop
icebp
in
sub
ins
outs
mov
adc
cmp
push
xchg
sti
jp
sbb
mov
stc
je
in
int3
push
pop
cmp
dec
rcl
cmps
movs
push
pop
aam
shl
pop
in
jnp
pop
mov
mov
jno
push
mov
adc
ror
in
pop
(bad)
adc
cmc
repz
cmp
test
hlt
sub
xor
or
sar
jmp
xchg
pop
add
xchg
cmp
nop
push
cmc
pop
xchg
fidiv
out
mov
(bad)
xchg
xchg
xchg
cmps
cmps
cmp
outs
movs
xor
call
je
in
pushf
sub
jp
push
pop
lea
add
in
mov
nop
pop
jmp
jge
cs
push
es
stos
xor
add
pop
xchg
inc
pop
(bad)
in
(bad)
mov
and
pusha
sub
test
adc
shr
push
(bad)
jmp
mov
or
push
imul
mov
and
loopne
sub
xor
aaa
sbb
sbb
call
pop
adc
(bad)
pop
outs
xchg
jmp
int
into
and
xor
fiadd
sub
movs
jbe
push
ins
jecxz
dec
repz
mov
mov
mov
ficomp
dec
mov
inc
lea
nop
test
adc
ss
add
push
sbb
inc
sub
inc
jp
(bad)
jp
test
xor
adc
inc
jne
or
xchg
adc
cmp
lahf
scas
jecxz
push
fld
xchg
inc
push
dec
or
and
sub
scas
pop
mov
imul
scas
(bad)
imul
inc
not
xor
adc
and
add
jecxz
bswap
(bad)
mov
push
pop
out
movs
jo
inc
pushf
jno
cmp
pop
jmp
xchg
pop
or
sbb
mov
inc
imul
icebp
(bad)
adc
fld
cmp
and
inc
inc
pusha
ins
outs
outs
jno
int
int
cdq
pop
inc
dec
xchg
test
push
lods
push
add
dec
sbb
movs
push
lods
test
or
repnz
xchg
test
dec
ins
xchg
push
mov
jns
push
mov
xchg
int3
icebp
aad
dec
pop
rol
mov
enter
movs
loopne
jmp
cmps
add
(bad)
jp
ds
and
(bad)
xchg
stos
inc
stos
lahf
or
jl
inc
cvttps2pi
push
xchg
mov
pop
cmp
xchg
xchg
push
mov
xor
or
stos
xor
sub
std
mov
icebp
jecxz
in
mov
and
jo
and
jmp
mov
cmp
push
pop
mov
add
mov
(bad)
mov
scas
dec
jmp
imul
push
mov
jle
test
jg
ficomp
jno
pop
out
mov
pop
in
lods
iret
mov
mov
test
dec
mov
in
push
ror
in
fisub
push
push
pop
retf
add
mov
sub
inc
sub
pop
jne
loop
or
inc
test
test
fucomip
sti
xchg
dec
xchg
sub
mov
jns
movs
push
xlat
and
xlat
cmp
mov
call
fwait
test
ds
xlat
dec
stos
imul
mov
leave
sub
xchg
push
cmp
imul
daa
test
jnp
sub
push
push
stos
paddsb
mov
cmp
push
ss
adc
mov
push
(bad)
and
mov
fs
mov
mov
jle
mov
jge
pop
pop
js
push
aad
jp
out
pop
mov
jmp
mov
lods
imul
rol
outs
aam
or
jecxz
aas
data16
mov
push
xchg
dec
adc
div
in
mov
stos
or
dec
hlt
test
scas
loop
ficom
dec
and
push
ds
cmp
jmp
sub
push
mov
xchg
adc
xlat
sbb
bound
mov
sbb
cdq
sbb
(bad)
jl
pop
xchg
outs
add
xchg
in
aam
mov
sbb
jmp
adc
sti
jno
sub
repz
sar
icebp
frstor
push
movs
dec
faddp
cli
sti
or
out
inc
xchg
shl
outs
fidivr
cmp
add
(bad)
shl
xlat
inc
dec
stos
or
sub
jmp
push
ins
xor
mov
stos
push
add
sbb
and
push
js
mov
std
jg
inc
jmp
jmp
xor
add
hlt
aas
mov
cmp
mov
dec
push
push
je
test
popf
aas
shl
out
dec
pop
call
lea
or
mov
js
ror
out
cld
jge
pop
jb
enter
mov
cld
cli
cmp
pop
sub
jbe
inc
mov
push
add
pop
mov
and
(bad)
mov
adc
in
je
jmp
ds
mov
jb
add
inc
dec
jno
bound
repnz
std
sbb
repz
mov
dec
push
adc
gs
and
xor
pusha
in
sahf
ror
cmps
dec
or
retf
fidiv
test
sub
mov
inc
push
rol
test
xor
mov
mov
push
push
add
test
arpl
add
aam
dec
sti
shr
pop
popa
nop
rcl
push
pushf
test
leave
adc
adc
aad
or
jb
mov
mov
dec
adc
les
add
aam
xor
jmp
lock
repnz
test
jb
gs
xor
push
daa
mov
cmps
mov
adc
or
mov
mov
lds
inc
js
test
stc
mov
and
mov
adc
mov
pop
(bad)
mov
sti
adc
jne
jmp
hlt
jmp
scas
pop
repz
ins
int
add
ret
sti
push
inc
in
loope
hlt
adc
jmp
lahf
adc
xor
je
cdq
test
es
mov
jmp
sub
xor
loope
dec
mov
repnz
inc
pop
fld
fstp
inc
xchg
jg
dec
retf
test
popf
std
mov
out
and
mov
cmps
stos
sbb
test
sub
inc
or
test
push
hlt
js
push
or
mov
in
mov
scas
bound
test
hlt
daa
lods
bound
mov
inc
sbb
push
add
in
dec
cmp
rcl
shl
lods
cmp
int
mov
std
mov
mov
push
pop
iret
mov
cmp
xchg
shr
aam
sub
rcl
cmps
stos
test
mov
daa
fwait
xchg
inc
js
adc
mov
aad
jmp
or
push
cs
sbb
stc
inc
das
lahf
dec
push
xchg
add
das
mov
lods
movs
jle
sahf
cmps
or
and
dec
push
or
nop
sub
push
add
fcom
in
and
cmp
cmp
inc
add
push
push
or
sbb
push
std
pop
jmp
dec
add
xor
scas
dec
enter
sub
ja
movs
inc
cmp
push
inc
sbb
push
or
sbb
jmp
cs
adc
cli
adc
mov
mov
(bad)
pop
jnp
xor
cmc
jp
add
shl
add
fdivr
cli
(bad)
stc
jg
mov
add
aas
lahf
bnd
mov
inc
dec
add
dec
cli
(bad)
inc
jb
or
call
sti
push
lods
pop
hlt
int3
add
inc
stos
jg
cdq
push
push
pop
inc
dec
mov
jb
sbb
iret
mov
dec
dec
les
pop
xor
or
in
enter
mov
pusha
stos
xor
repnz
adc
mov
aas
in
mov
lock
add
out
mov
cmps
repnz
xchg
imul
mov
jmp
out
out
jmp
sbb
push
xchg
push
pop
bound
sbb
cmps
mov
or
pop
rcr
je
fucomp
repnz
fnstsw
lods
les
sti
cmp
stos
scas
xor
fpatan
sbb
or
cli
push
inc
adc
aas
jmp
jg
int3
jle
sbb
or
aam
dec
mov
jmp
xchg
lds
int
cmc
xor
mov
aaa
cmc
jb
pop
jle
mov
(bad)
out
add
xchg
pop
ds
cs
call
xchg
cmp
movs
pop
cdq
call
jae
push
pop
rol
scas
shl
adc
fldcw
pop
lods
std
sub
or
into
mov
xchg
mov
lods
inc
jecxz
adc
mov
cmp
inc
add
cmp
out
cs
imul
pop
mov
or
xchg
bound
jo
(bad)
(bad)
pop
in
adc
jmp
repz
adc
pop
adc
call
xchg
xor
mov
and
ds
sbb
inc
daa
jmp
pop
or
aad
out
imul
ror
mov
sahf
sbb
or
mov
mov
aaa
add
std
pop
adc
dec
bnd
sti
mov
inc
pop
push
lahf
mov
lahf
iret
test
push
adc
sbb
add
out
jns
jmp
ins
push
aas
outs
out
retf
xchg
jg
(bad)
(bad)
fcmovnu
adc
cmp
cmp
mov
fwait
(bad)
sahf
jle
xlat
daa
repz
push
retf
movs
xchg
enter
addr16
inc
popa
fstp
loope
lock
mov
cmps
enter
push
mov
cld
sub
add
push
cmc
mov
neg
repz
sbb
push
movs
enter
imul
popf
stc
pop
push
sbb
sbb
sub
stc
cld
stos
shl
sbb
mov
mov
xchg
cmp
rcr
fsubr
imul
rcr
push
sbb
sub
sub
repz
cld
std
jp
mov
mov
fimul
inc
dec
mov
(bad)
bound
or
lea
in
scas
cmp
cmp
mov
push
dec
sub
(bad)
mov
sbb
movs
mov
mov
jge
dec
add
xchg
pusha
ja
ja
inc
clc
jmp
js
inc
int
add
dec
test
mov
outs
fldenv
and
dec
xor
sub
ss
rcr
sub
mov
or
dec
cmp
push
and
sbb
add
ret
mov
ja
push
movs
xchg
js
add
fptan
cmc
jmp
int
ficomp
mov
xchg
cmc
lds
popf
movs
xchg
pop
xchg
inc
adc
cmps
sub
hlt
(bad)
mov
aam
jp
js
test
sub
ins
jp
ins
pop
lahf
into
div
test
ficomp
mov
sbb
xor
mov
inc
inc
sbb
retf
idiv
inc
cmps
sbb
adc
dec
pop
pop
and
std
adc
adc
mul
(bad)
xchg
cdq
push
retf
jle
or
scas
xchg
retf
and
jne
call
mov
in
in
jecxz
push
or
data16
mov
jno
mov
repz
repz
ud1
inc
bound
jecxz
test
dec
stos
jno
imul
mov
push
push
jbe
lock
retf
ja
cmp
adc
xchg
cmp
inc
xchg
mov
lds
adc
retf
jno
sub
retf
mov
pop
xchg
js
cmps
cmp
dec
not
sysenter
push
mov
jecxz
xchg
rcl
mov
jp
xchg
and
leave
jge
popf
fs
fcomi
out
inc
mov
in
xchg
aam
or
pop
call
cmps
enter
repnz
data16
jl
push
mov
or
out
cmp
adc
cdq
int3
repz
adc
xor
sbb
pop
fucomip
pop
mov
mov
mov
jecxz
sub
inc
push
add
xchg
inc
lahf
dec
(bad)
sti
je
sbb
imul
js
icebp
loope
(bad)
hlt
push
push
shr
retf
sub
mov
mov
dec
and
sahf
call
xchg
jo
mov
sbb
or
pop
pop
dec
pop
lea
je
mov
test
xchg
mov
(bad)
fadd
push
push
stc
mov
mov
inc
jl
sbb
jmp
jmp
ror
and
xor
xchg
data16
rcl
into
mov
pop
xor
push
mov
(bad)
and
pop
mov
mov
call
cmp
inc
cmp
(bad)
sbb
mov
mov
cmp
dec
shl
(bad)
dec
add
and
mov
cwde
out
int3
aam
dec
or
sub
push
xor
mov
or
xchg
in
imul
mov
shl
inc
fstp
xchg
fwait
or
mov
jg
or
inc
imul
mov
call
or
cld
xor
and
dec
mov
mov
xchg
jmp
pushf
cmps
mov
movs
and
mov
pushf
mov
jnp
daa
push
(bad)
mov
dec
mov
es
jnp
adc
cmp
mov
mov
adc
adc
jp
adc
or
fistp
push
test
jge
ins
xchg
xchg
cmp
rcl
ja
sar
call
xchg
dec
in
sbb
sbb
repz
cmp
mov
xlat
inc
mov
mov
sbb
lods
dec
push
mov
push
pop
xchg
movs
arpl
aad
test
jmp
mov
repnz
in
lock
adc
push
popf
sub
mov
add
(bad)
popf
inc
inc
add
push
push
mov
ret
sbb
mov
jp
adc
call
mov
xchg
loop
push
mov
fmul
(bad)
add
sub
enter
retf
loopne
inc
adc
xor
out
(bad)
out
jbe
ins
xor
adc
inc
retf
adc
add
inc
shr
xor
add
aam
mov
and
dec
add
xchg
mov
aaa
inc
pop
pusha
imul
(bad)
sub
cmp
leave
into
js
and
lods
in
loopne
push
dec
push
rol
lea
pop
mov
inc
movs
cmps
pop
push
mov
pusha
movs
xchg
js
mov
xor
nop
stos
mov
rol
jmp
jae
jae
js
cwde
xchg
xchg
dec
punpckhwd
xor
seta
cli
xor
jae
mov
cmps
sti
cmp
pop
and
xor
mov
dec
cmp
sbb
add
dec
pop
idiv
add
out
jmp
sbb
stos
push
mov
into
mov
cmc
xor
cwde
loope
scas
sbb
lahf
loop
dec
and
or
test
cmp
stc
dec
(bad)
pop
xor
sbb
or
ins
jo
ret
(bad)
call
sbb
or
mov
fistp
sub
(bad)
ds
push
outs
sub
aaa
outs
(bad)
nop
(bad)
stc
and
push
fs
aad
and
dec
mov
rcl
mov
xchg
pop
pop
dec
mov
arpl
sub
je
add
les
push
(bad)
mov
push
push
or
ror
jo
mov
(bad)
retf
mov
inc
test
ja
cwde
aam
push
adc
inc
lea
ret
push
push
mov
pop
scas
fucomip
popa
or
push
inc
or
cmps
cmp
push
or
loop
stos
push
xchg
add
push
vphaddwq
push
sub
leave
adc
xchg
dec
xor
mov
(bad)
sar
aaa
popf
or
mov
fucomip
cdq
das
inc
push
push
or
dec
leave
cmp
rol
adc
push
pop
add
pop
adc
dec
mov
lahf
push
loop
inc
xchg
test
sti
jp
ins
mov
jg
push
or
loope
and
popf
es
arpl
push
add
int
test
add
or
cmp
add
out
ss
cdq
mov
cmp
sbb
cld
test
cmp
add
mul
push
jbe
in
xor
xor
mov
lods
out
dec
adc
aas
jnp
stos
mov
in
push
rol
sub
enter
sbb
jnp
bnd
aam
and
and
lods
ret
mov
and
sub
sub
stos
lock
pop
fcmove
in
inc
rcl
mov
inc
sub
call
outs
daa
xchg
test
mov
cmp
movs
loopne
fidiv
inc
clc
jle
(bad)
cmp
mov
into
lods
sbb
push
ins
dec
add
sub
sbb
mov
shl
mov
pop
jb
or
mov
push
(bad)
in
mov
cmp
in
movs
pop
(bad)
imul
mov
jo
xor
push
sub
movs
mov
xlat
mov
cs
jmp
xchg
lahf
cmp
std
push
sbb
and
pop
cmp
push
push
fwait
pop
cmp
rcr
push
and
mov
retf
scas
dec
and
sbb
xor
aas
ror
rol
sub
push
scas
mov
mov
jne
inc
sub
test
push
cmp
push
imul
fucomi
push
xchg
int3
push
inc
xchg
mov
pop
cdq
pop
gs
sub
data16
stos
mov
xchg
inc
test
jecxz
adc
lea
adc
pop
pop
aas
xor
inc
sub
repnz
call
shl
adc
es
iret
xchg
imul
cli
mov
in
lds
mov
push
loop
movs
fldcw
add
cli
fsubrp
loop
jmp
sbb
cmp
imul
sbb
sub
and
retf
ss
xchg
pusha
lea
cmovns
jg
adc
stos
inc
xorps
call
pop
adc
loopne
inc
dec
addr16
cwde
aad
call
loop
or
in
pop
pop
pop
ins
lods
fmul
and
ror
inc
fwait
mov
xchg
sub
mov
repnz
push
cwde
aas
in
and
jns
mov
jb
out
xchg
not
inc
sbb
cmp
xor
xchg
sbb
mov
js
imul
cmp
out
pop
repnz
or
test
sahf
mov
aad
push
cmp
push
retf
js
push
out
pop
xlat
cmc
cli
jnp
pop
xchg
sbb
lods
sub
xor
or
jne
stc
mov
and
(bad)
out
in
sub
or
inc
ffree
sub
movs
push
push
push
dec
nop
mov
pop
in
leave
popa
dec
test
dec
ret
sbb
push
out
dec
in
jnp
retf
cmps
add
dec
lods
add
add
push
rdpmc
in
inc
xchg
shr
popa
sub
sub
aad
mov
dec
add
pop
cmp
cmp
sub
sub
daa
jnp
test
dec
push
ins
push
int3
rcr
inc
pop
jns
xor
ds
mov
add
sbb
jns
lea
aam
pusha
arpl
and
xchg
inc
or
xchg
test
sbb
test
adc
sub
popa
xchg
cwde
enter
cwde
lods
mov
dec
pop
loope
pusha
lods
mov
jnp
and
lods
in
retf
dec
adc
js
cmp
dec
mov
fcmovnu
inc
cli
add
or
fcmovu
jp
inc
imul
fidivr
sbb
sahf
inc
push
jp
test
xor
push
sub
xchg
nop
in
mov
inc
ja
lock
arpl
adc
stc
jns
stos
cld
mov
sbb
shr
xlat
data16
in
cli
enter
or
(bad)
stos
int
out
stos
movs
push
ficom
(bad)
(bad)
push
pop
jnp
(bad)
mov
popf
cmps
xchg
adc
in
imul
mov
lods
sbb
movs
jo
imul
mov
scas
dec
out
fwait
jae
std
repz
jb
popf
lods
sbb
push
stos
out
add
sahf
push
fucomip
icebp
fimul
test
push
cwde
sub
lahf
and
sub
adc
push
add
mov
call
jge
sbb
punpckhdq
or
sub
mov
out
cld
jb
sahf
sar
ficom
cmp
xor
sbb
inc
aas
push
inc
cmp
cmp
xchg
lods
xchg
jl
call
sub
add
inc
xor
out
fnstsw
daa
mov
jmp
clc
dec
cmp
mov
cli
or
push
cmp
jmp
xor
mov
sbb
sub
or
aam
leave
aam
and
xchg
xchg
sub
inc
mov
push
call
fidiv
lahf
xchg
arpl
pop
mov
push
sbb
cld
cli
add
ret
mov
push
retf
orps
shl
sbb
cdq
sub
add
lods
jnp
cdq
arpl
aam
test
push
mov
xchg
test
sbb
sub
stos
jmp
movntps
mov
int
jmp
mul
mov
xor
les
dec
or
push
arpl
fisubr
shl
ss
sub
xchg
in
int3
sbb
mov
addr16
rcl
add
pop
and
pop
pusha
loope
in
inc
xor
les
dec
inc
shl
addr16
xchg
loope
dec
xchg
movs
mov
push
and
lock
fwait
mov
xchg
in
pop
imul
fldenv
scas
scas
ds
jle
cmc
movs
jp
iret
(bad)
mov
mov
in
fidivr
call
xchg
pop
dec
mov
jmp
arpl
sub
pop
jmp
inc
fstp
in
adc
ins
mov
inc
retf
iret
cld
cmp
and
lods
fmul
mov
inc
shl
jge
xchg
in
pushf
je
mov
adc
sbb
inc
jmp
stc
push
xchg
fcomp
aaa
inc
push
add
add
pop
fld
(bad)
popa
jmp
shr
inc
sub
add
shl
jmp
in
mov
xchg
xor
sub
xor
cdq
test
and
outs
pop
mov
inc
mov
in
loopne
dec
inc
adc
mov
pop
test
push
xor
mov
sub
adc
(bad)
setbe
lahf
mov
into
ja
mov
mov
jecxz
add
pop
adc
or
cmp
sahf
(bad)
shl
(bad)
hlt
test
ins
ins
fsubr
sar
aaa
and
xor
xchg
fwait
das
and
xchg
movs
ja
and
cdq
scas
pop
imul
pop
shl
rcl
mov
pop
movs
adc
push
xchg
int3
(bad)
pop
in
jns
imul
lds
push
cmp
adc
inc
imul
dec
mov
in
xchg
fnstcw
sub
mov
and
xchg
popf
call
or
sub
pusha
int3
dec
(bad)
cmp
(bad)
int
fdivr
mov
(bad)
jg
sbb
xchg
xchg
jle
adc
sub
sbb
shl
sub
push
sub
arpl
std
mov
and
clc
popa
inc
or
scas
add
cmc
mov
xor
push
enter
fs
push
xchg
les
hlt
jge
out
(bad)
mov
fld
das
mov
fs
sub
push
lahf
in
icebp
iret
push
cmps
mov
mov
or
retf
mov
push
lods
adc
pop
retf
and
aam
jae
add
add
jg
in
dec
xchg
or
(bad)
test
pop
pop
aas
cmc
jns
lahf
lahf
push
(bad)
fsubr
jmp
mov
inc
inc
shl
cmp
jns
jg
movs
mov
popa
mov
sbb
sar
add
add
scas
jo
jnp
xor
mov
cli
inc
stos
mov
aad
imul
test
add
jl
add
nop
movs
scas
push
std
outs
in
and
aas
xchg
add
cld
iret
pop
adc
ins
xchg
fdivr
out
imul
xor
add
jbe
xlat
add
ret
mov
sar
repnz
xchg
(bad)
pop
fwait
popa
xchg
add
pushf
out
pop
jecxz
jno
and
xchg
dec
mov
(bad)
jmp
sbb
mov
sub
dec
shl
popf
dec
mov
add
add
(bad)
dec
inc
ss
sbb
add
pop
sbb
push
aad
inc
lea
xor
xlat
and
push
cmc
push
enter
icebp
and
lods
pop
enter
jne
leave
outs
jg
jbe
xor
cmps
movs
(bad)
es
add
pop
jns
mov
pushf
dec
(bad)
xchg
xchg
jne
mov
pop
inc
xlat
std
out
fmul
xchg
in
fldenv
jg
jp
iret
jne
loope
out
mov
adc
test
stos
jecxz
pop
mov
dec
gs
test
rol
ss
and
pop
scas
or
std
jg
jnp
mov
int
adc
lods
sub
fld
mov
inc
or
jo
sbb
or
movs
mov
cmps
and
dec
and
sahf
and
scas
inc
call
and
dec
in
jns
jg
lods
shl
scas
aaa
jle
mov
xchg
inc
mov
dec
add
in
cld
je
inc
xchg
jae
popa
gs
push
sub
cli
add
mov
cmp
or
inc
in
stos
fwait
scas
mov
push
pop
test
mov
cwde
clc
stos
jae
push
rcl
sub
xchg
fs
in
inc
lds
jae
mov
fs
xchg
mov
mov
fcom
mov
jo
push
dec
aas
popf
or
sbb
test
jp
add
fcom
aam
cdq
pop
dec
adc
jg
cli
push
push
shr
mov
std
fwait
pop
jmp
mov
or
mov
sbb
rcl
sti
jp
mov
mov
fdiv
rol
(bad)
daa
fnstcw
inc
inc
imul
cmp
xchg
stos
lahf
xchg
xor
cli
push
rcl
ins
mov
inc
daa
xlat
(bad)
jmp
sahf
retf
gs
xor
dec
add
mov
imul
cmp
repz
jo
xor
shl
in
aam
xor
push
mov
inc
cmp
pop
push
fwait
dec
test
mov
stos
cli
pop
add
icebp
mov
retf
push
mov
mov
in
jmp
mov
cmp
sar
push
dec
in
hlt
jmp
adc
push
sub
std
fsub
mov
xchg
and
sub
cmp
mov
in
jb
mov
imul
push
add
xor
test
xor
mov
lds
jl
std
mov
in
sbb
xchg
xor
test
jp
retf
push
adc
jb
mov
(bad)
rcr
ins
cs
shl
dec
pop
mov
mov
xor
cmp
lods
and
push
or
rol
adc
repnz
ja
fnstcw
fdivr
pushf
mov
sahf
cmp
das
pop
jne
or
add
or
jl
outs
mul
ficom
aad
fwait
pop
lds
push
mov
push
mov
and
aas
movs
jge
bound
add
or
jmp
mov
xor
cmp
(bad)
push
test
lds
add
cmp
(bad)
jmp
sbb
mov
cmp
add
cmovle
cmps
sub
pop
push
in
xchg
mov
test
dec
int3
or
adc
(bad)
and
retf
push
imul
aas
das
out
xchg
pop
popa
iret
icebp
or
jns
test
movs
test
mov
adc
and
dec
into
test
shr
shl
jge
outs
retf
(bad)
sub
xchg
addr16
sub
ret
iret
in
mov
jmp
pop
out
push
xor
adc
mov
sbb
aam
jb
shl
adc
mov
inc
push
movs
inc
icebp
xor
pop
mov
mov
add
lea
adc
hlt
inc
xor
addr16
xchg
push
and
loope
xchg
inc
cmps
into
dec
repz
jo
pop
mov
mov
es
call
cmps
call
gs
rcl
or
pop
retf
loopne
xchg
in
dec
pop
sub
fstp
sti
imul
xor
sub
pop
iret
push
jne
in
iret
inc
xor
rcl
jecxz
xchg
mov
mov
cmc
out
sbb
fiadd
cmp
dec
pop
dec
jg
in
ja
push
sbb
ins
sbb
cmp
into
mov
adc
jmp
jmp
pop
arpl
cdq
call
stos
mov
and
leave
or
sub
dec
push
xchg
or
jecxz
popa
out
cmp
add
aad
dec
dec
in
aas
in
je
js
cmp
test
(bad)
stos
mov
pop
loope
or
push
add
call
(bad)
sub
in
cmps
sbb
gs
lock
sbb
in
xor
jmp
push
(bad)
adc
mov
call
sar
xor
int
pushf
test
stos
and
xchg
inc
adc
cmp
fdiv
retf
sub
jns
or
jecxz
ror
lods
push
call
pop
sbb
sar
jno
jmp
xor
sub
and
add
xchg
daa
xor
arpl
cmp
or
jg
mov
or
repz
mov
dec
sbb
lods
and
aad
push
adc
mov
icebp
jg
push
(bad)
xchg
cmp
lock
push
cmp
or
cmps
jns
loop
xchg
push
nop
push
ficom
jecxz
out
das
out
out
ret
jbe
out
retf
push
mov
cmp
inc
add
xchg
sbb
and
cmps
int3
xlat
daa
stc
je
jbe
push
sbb
(bad)
rol
in
push
inc
test
jecxz
mov
mov
std
rcl
jge
hlt
out
and
bound
wrmsr
xor
dec
fcmovnbe
(bad)
jmp
add
lds
lahf
adc
cmp
(bad)
sbb
jb
xchg
les
adc
mov
jo
add
hlt
in
pop
(bad)
int
mov
dec
add
imul
std
out
aam
mov
cmp
jle
retf
jne
repz
shl
fldenv
mov
sub
(bad)
xchg
fwait
sbb
or
fidivr
scas
fidivr
pop
iret
jo
jae
es
nop
push
adc
push
aam
sub
and
push
add
mov
rcr
stos
test
or
sub
pop
popf
or
retf
not
stos
xchg
and
adc
mov
fdivr
je
inc
arpl
dec
loop
add
dec
sub
jne
mov
lds
pop
pushf
neg
hlt
(bad)
push
pop
rcl
stos
push
adc
inc
sbb
inc
std
mov
mov
popa
mov
dec
lods
aad
dec
xchg
or
jno
add
or
loopne
int3
stc
mov
adc
dec
adc
push
inc
push
push
sahf
xchg
inc
inc
jecxz
xchg
lea
push
ds
jnp
jge
leave
jbe
lods
or
jmp
mov
imul
jmp
vucomisd
adc
dec
add
push
mov
cmps
or
(bad)
xchg
mov
fwait
sub
xchg
and
mov
jmp
and
lahf
ja
fcomp
bound
fidiv
shl
(bad)
scas
pop
dec
lea
ret
pusha
or
lock
cmp
loopne
(bad)
cmps
lods
cmp
mov
pop
sub
dec
and
sub
push
inc
add
inc
mov
popf
cmp
popa
cs
inc
cmp
in
inc
dec
hlt
jmp
ins
sbb
inc
shr
push
js
inc
dec
ret
inc
in
add
data16
stos
inc
js
les
dec
adc
and
fmul
cmc
push
inc
push
not
jge
mov
aas
adc
add
or
sbb
add
add
rcl
outs
addr16
mov
cld
jge
test
fs
fwait
sbb
cmp
lods
inc
jb
push
idiv
rcr
lods
outs
cmp
lahf
pop
inc
or
mov
pop
pop
xor
cmp
jmp
shl
push
pop
(bad)
sti
sub
call
test
(bad)
icebp
in
push
adc
and
mov
mov
mov
mov
shl
xor
add
inc
and
aas
mov
adc
ret
fld
mov
push
sbb
xor
ss
in
addr16
xchg
mov
retf
sub
mov
sbb
mov
pop
pop
outs
jo
jb
dec
pop
mov
in
int3
retf
outs
mov
xchg
jle
nop
xor
movs
add
or
push
jns
adc
test
(bad)
mov
cmp
(bad)
and
sbb
mov
je
bound
lahf
xchg
(bad)
hlt
mov
mov
mov
(bad)
mov
and
sbb
rcl
hlt
mov
icebp
test
lods
sbb
int3
retf
retf
push
xlat
ss
gs
adc
repz
jle
or
xchg
stos
add
out
add
or
icebp
test
mov
xchg
test
xor
cmc
xor
rcr
push
cmp
xchg
sbb
xor
or
add
adc
adc
(bad)
dec
pop
inc
sub
dec
jno
stos
test
sbb
stc
or
mov
xor
jecxz
cwde
add
aad
test
(bad)
pushf
adc
sub
aad
add
jg
test
je
inc
rol
bound
mov
out
xchg
jp
pop
loope
xchg
sub
xchg
fisub
lock
and
sti
inc
push
(bad)
push
aam
push
add
icebp
movs
jno
jl
popa
xchg
mov
cli
push
addr16
loope
jge
or
xchg
scas
sahf
sub
push
aam
xor
movs
arpl
movs
jmp
lahf
inc
add
lahf
iret
mov
scas
xor
add
adc
add
shr
repz
popf
xchg
fcmovu
cwde
fisttp
rol
add
add
xor
sbb
cs
mov
jo
add
jp
outs
mov
fcomp
out
(bad)
(bad)
mov
loope
inc
xor
arpl
sar
pop
mov
aaa
fldz
sub
inc
adc
pop
lock
jg
rcl
mov
cmp
push
push
dec
inc
pop
fst
in
rcl
in
jmp
mov
iret
lods
jge
cmp
mov
sbb
pop
dec
pop
aam
mov
clc
jnp
inc
pop
enter
cld
cli
das
aaa
adc
int
mov
sub
jl
stc
push
cmps
inc
xor
(bad)
xchg
cmp
cmp
stos
cmp
or
mov
call
sbb
nop
pop
dec
mov
lods
xor
jo
inc
and
inc
adc
ins
jmp
inc
pop
add
std
pop
jmp
xchg
retf
bound
push
sbb
sbb
or
data16
test
jg
cmp
popf
pushf
mov
push
xchg
push
jg
aas
lahf
inc
es
ins
sbb
mov
mov
mov
aam
cmp
dec
icebp
inc
and
inc
dec
cwde
les
ins
xor
test
dec
and
and
jle
cmps
repz
pop
mov
test
in
jl
xor
rcr
pop
imul
js
das
jb
mov
sahf
les
sub
xchg
push
cmp
icebp
test
sub
add
inc
pop
pop
icebp
in
loope
call
aam
inc
push
push
mov
pop
imul
out
out
mov
out
call
and
pop
in
iret
cli
mov
cmps
cwde
repz
cmp
iret
clc
repz
(bad)
sub
pop
fcomp
cmp
jmp
mov
add
push
movs
push
ficomp
movs
enter
mov
push
jp
div
imul
sti
jnp
mov
mov
scas
pop
jmp
sub
(bad)
mov
sbb
jmp
ins
dec
lahf
out
pop
outs
fsubr
aaa
aas
cmp
fs
mov
mov
adc
int3
xchg
inc
push
mov
pusha
sbb
xchg
test
imul
sub
ror
das
out
xlat
mov
jmp
or
xchg
push
jp
daa
sbb
popf
and
mov
push
sbb
jno
movs
mov
pop
adc
jae
xchg
inc
stos
ins
retf
sbb
aad
inc
int
cmp
cld
xchg
pop
lods
outs
dec
dec
xchg
push
or
js
stos
mov
(bad)
repnz
(bad)
cmp
push
movs
mov
xor
(bad)
cli
test
int
jg
cdq
xchg
popa
mov
mov
fs
jmp
test
pop
shl
sub
(bad)
neg
dec
aas
test
out
ins
mov
mov
sub
dec
loopne
iret
cld
jecxz
imul
sti
inc
pop
jmp
inc
inc
in
jb
cmps
xchg
test
test
std
mov
cwde
(bad)
pop
fistp
jecxz
sbb
mov
lea
rcl
stc
mov
and
(bad)
push
cmp
daa
lock
dec
mov
mov
fadd
jp
mov
scas
or
hlt
sar
sub
jp
data16
xor
sub
or
leave
jg
and
inc
mov
dec
(bad)
iret
es
je
in
rcl
cmp
jp
out
jbe
lahf
push
shr
mov
dec
jno
test
and
mov
scas
dec
retf
cdq
int3
or
push
aad
xchg
fstp
jne
fidiv
add
sar
xor
fldcw
dec
rcl
add
call
not
mov
mov
mov
test
sub
cmps
js
out
xor
xor
fcomp
sahf
jle
dec
xchg
cmc
xlat
cmp
mov
cmp
mov
imul
repnz
fisttp
cmc
sub
dec
aaa
mov
push
test
cmp
cmp
(bad)
mov
inc
mov
leave
jmp
outs
movs
mov
lahf
lahf
ins
cmp
xor
shl
mov
imul
cmp
(bad)
cmp
pop
fimul
repz
jmp
mov
jmp
push
ja
jo
jge
ret
xchg
in
retf
xor
sti
inc
mov
out
(bad)
call
adc
cmps
cwde
leave
cmc
(bad)
dec
fucomi
mov
ins
and
pop
mov
mov
mov
sub
fmul
jbe
popf
retf
xor
stc
sbb
scas
imul
sub
inc
sub
add
stc
out
scas
inc
and
mov
dec
inc
add
push
aam
clc
stos
test
and
(bad)
pop
add
xor
icebp
cs
clc
mov
inc
inc
aad
adc
(bad)
out
add
jb
test
inc
sub
cmps
jl
pop
ret
mov
mov
and
xchg
daa
inc
fstp
adc
and
mov
fisubr
loope
shr
mov
repz
mov
pop
stos
sbb
sahf
test
add
add
xchg
mov
cmp
mov
cmc
(bad)
lock
mov
dec
test
pop
ret
or
dec
out
das
in
dec
retf
ss
icebp
(bad)
jmp
cmp
xor
sahf
popf
sbb
in
in
mov
pop
and
add
mov
test
dec
js
shl
jp
jge
push
push
and
mov
and
lahf
mov
xor
aam
repnz
das
mov
pop
ds
outs
in
mov
pop
loope
and
(bad)
popf
and
aaa
adc
fnstenv
jo
add
(bad)
adc
adc
adc
mov
int
push
push
inc
push
je
bound
mov
(bad)
push
cmc
into
fbld
in
mov
lds
les
add
xor
pop
sbb
jecxz
mov
sub
mov
inc
mov
pop
xchg
dec
in
mov
and
ins
and
lds
icebp
add
sub
loope
out
mov
(bad)
and
mov
aam
or
in
(bad)
lahf
inc
(bad)
pop
mov
jbe
dec
ss
mov
push
(bad)
sub
movs
test
stos
test
mov
push
(bad)
lock
movs
les
push
(bad)
arpl
inc
sub
sub
fiadd
cs
inc
popa
loope
xchg
cmp
outs
outs
jae
or
mov
xchg
push
sub
movs
imul
call
or
jae
aam
std
imul
dec
push
xor
movs
xor
mov
or
aad
mov
push
inc
call
and
ss
fld
mov
iret
(bad)
imul
jecxz
ins
xor
(bad)
addr16
jmp
lahf
pop
mov
pop
aad
cmp
das
mov
call
rol
xchg
pop
xchg
sub
mov
jge
jle
mov
ins
in
push
dec
fiadd
add
ds
(bad)
mov
add
push
pop
push
pop
adc
jno
cli
sahf
cmp
mov
xchg
xchg
jmp
int
xchg
dec
and
mov
inc
xchg
mov
ds
es
adc
fcmove
(bad)
aad
cmc
sbb
lea
in
push
mov
movs
add
sub
(bad)
test
dec
paddsb
idiv
outs
mov
inc
xchg
cdq
fwait
retf
xor
call
nop
xchg
mov
fwait
(bad)
arpl
xchg
xchg
jo
lods
pusha
push
imul
mov
dec
pop
sbb
mov
in
imul
cli
ja
push
test
test
daa
adc
test
fdivp
inc
and
and
sar
cmp
iret
mov
fnstsw
clc
or
mov
xchg
jmp
jl
rcl
test
repnz
push
ds
adc
call
test
imul
sub
xor
ja
or
mov
pop
jle
(bad)
repz
sub
jmp
lahf
xchg
bnd
mov
push
xor
aam
inc
daa
xchg
jp
ja
dec
sbb
pop
fadd
push
pop
push
mov
cs
adc
sbb
and
add
push
xchg
mov
fs
adc
sbb
jge
pop
(bad)
stc
mov
cmp
(bad)
jns
pop
leave
outs
xor
ror
pop
jbe
out
and
lds
rol
dec
or
jns
add
data16
outs
ror
jb
xchg
or
ds
add
pop
adc
sbb
into
cmps
iret
repnz
ds
call
cmps
push
lods
mov
retf
mov
mov
or
daa
xchg
pop
mov
push
inc
cmps
out
fcom
test
cli
jmp
aas
ret
lahf
xor
pop
test
pushf
imul
xchg
xchg
fcom
adc
sbb
dec
imul
loope
inc
int3
out
and
or
aad
addr16
mov
dec
xor
mov
dec
ficom
cmp
out
imul
shl
add
dec
dec
(bad)
jge
mov
mov
(bad)
call
mov
cmp
sbb
shl
mov
lock
les
xor
mov
test
adc
pop
daa
xchg
sub
xor
(bad)
jmp
and
cmp
xor
mov
mov
jp
aaa
mov
test
push
sbb
jl
cwde
add
xlat
push
shl
sub
add
xor
(bad)
hlt
inc
inc
sbb
shl
jecxz
mov
mov
movs
fstp
inc
mov
cmp
mov
daa
mov
(bad)
popf
sub
cmp
push
enter
inc
mov
push
cdq
jmp
xchg
and
pop
adc
mov
dec
push
pop
inc
mov
repnz
sbb
dec
sbb
sbb
and
adc
test
inc
sub
xchg
shl
mov
loope
push
cmp
arpl
xchg
popa
cmp
jp
jmp
iret
rol
or
sbb
or
lds
pop
fwait
repz
xchg
lahf
and
and
push
mov
(bad)
fisub
adc
sbb
repz
test
inc
out
sbb
jmp
sub
in
xor
test
pop
sub
pop
mov
sub
jno
sub
stos
in
xchg
sub
ss
xchg
xchg
out
add
adc
(bad)
movs
mov
fs
push
jmp
adc
test
js
sbb
std
cmp
or
or
cmp
sbb
(bad)
push
mov
movs
ror
xchg
jl
lahf
inc
(bad)
(bad)
(bad)
dec
mov
and
pop
mov
pop
push
cmp
retf
sub
std
dec
cli
push
outs
(bad)
mov
int3
in
imul
hlt
sar
sub
imul
push
pushf
sub
inc
fcmovnu
xchg
dec
inc
pop
mov
inc
(bad)
jae
std
xchg
sbb
pop
lock
xchg
pop
cld
jge
inc
aad
mov
je
mov
pop
or
(bad)
cmps
mov
(bad)
xor
dec
lea
retf
cmps
cmp
mov
jmp
push
jge
mov
es
gs
enter
scas
daa
stos
shl
cmps
push
rcl
es
(bad)
mov
fcmovb
sub
pop
mov
call
add
mov
xor
mov
mov
jns
lahf
mov
jecxz
cmp
push
adc
(bad)
lods
mov
mov
adc
mov
mov
jo
aaa
sbb
xchg
jnp
inc
lea
pop
pushf
push
add
cmp
xchg
inc
and
and
aad
xor
(bad)
pop
in
pop
or
and
xchg
pop
or
dec
mov
cld
jmp
mov
sbb
pop
outs
out
xchg
mov
inc
push
ds
cmps
repz
mov
or
pop
mov
mov
jmp
in
lds
pop
mov
in
pushf
outs
aas
add
mov
in
(bad)
push
leave
dec
dec
xor
inc
and
div
aam
in
xor
in
ja
in
cmps
out
arpl
mov
sbb
fimul
fs
jae
ror
ins
pop
leave
sbb
daa
retf
stos
mov
out
push
rcl
mov
call
pop
call
and
add
ins
leave
mov
sti
dec
mov
pop
cs
(bad)
cmp
push
in
icebp
and
pop
ror
mov
or
push
adc
(bad)
adc
mov
jnp
and
inc
adc
push
ror
sbb
inc
sub
(bad)
push
sbb
mov
(bad)
(bad)
mov
xlat
imul
add
push
xchg
mov
sar
xchg
iret
mov
mov
pop
stos
lds
aad
inc
sub
xchg
int
es
push
mov
aas
retf
(bad)
in
xchg
leave
ss
mov
mov
dec
pop
push
arpl
and
jnp
fstp
fiadd
aad
adc
or
ds
retf
test
jle
fnsave
mov
push
dec
push
adc
add
lea
outs
push
movs
pop
push
loopne
retf
pop
das
loope
xlat
cld
cmp
inc
stos
cld
(bad)
out
mov
loopne
add
adc
inc
leave
jmp
sbb
and
test
loopne
fdivr
clc
pop
mov
or
arpl
nop
fidivr
lahf
ds
rcr
js
imul
fiadd
div
inc
icebp
data16
(bad)
and
lods
js
sahf
sub
sbb
outs
aaa
and
stos
jmp
lods
dec
movs
pop
xchg
aas
outs
adc
xchg
or
rol
iret
sar
add
iret
xlat
cld
jge
fsubr
cmp
ins
mov
pusha
mov
push
jl
stos
mov
push
test
sahf
xor
cld
maskmovq
test
test
push
imul
(bad)
mov
call
bound
fdivr
add
mov
mov
adc
inc
push
cmp
mov
repz
pop
inc
xor
(bad)
mov
jl
mov
jl
sti
mov
bound
scas
pop
or
iret
push
xor
sub
test
xchg
imul
jmp
push
(bad)
dec
test
add
push
jecxz
lea
and
retf
mov
or
shl
sar
xchg
fcomp
clc
not
push
sbb
mov
adc
jl
sub
loope
pop
inc
aam
enter
mov
mov
loop
dec
(bad)
clc
outs
adc
mov
hlt
and
test
or
stc
bound
xchg
and
pop
lock
jle
push
jns
mul
lds
sahf
adc
jb
test
cmpxchg
xlat
lods
xchg
cmp
imul
and
hlt
push
add
inc
push
dec
sti
jg
mov
xor
sar
inc
(bad)
and
dec
mov
(bad)
sbb
dec
inc
xlat
pop
cmc
ss
push
mov
call
call
and
fdivr
inc
jecxz
sti
or
pushf
lds
fist
xchg
and
(bad)
into
mov
ins
add
outs
imul
cmp
sbb
fidivr
mov
xchg
jno
rol
cmps
dec
and
retf
nop
jge
push
dec
cmp
jns
jns
sbb
dec
jnp
pop
cmp
hlt
mov
inc
imul
add
jae
adc
mov
jmp
loope
and
sub
movs
jge
and
ret
scas
mov
pusha
mov
xchg
pop
sbb
cmps
jp
add
add
push
push
ss
mov
fcmovnbe
shl
push
add
push
sar
pmulhw
dec
mov
cmp
mov
jecxz
sar
loope
adc
sbb
cmp
cmp
dec
push
dec
pop
sub
call
sub
lds
inc
imul
(bad)
fcmovnb
fimul
sbb
push
add
aas
cmps
pop
push
jo
add
cmp
or
push
xlat
mov
xor
xchg
mov
mov
bnd
fnstsw
mov
mov
push
outs
pop
sub
xor
push
push
mov
jecxz
div
push
outs
pop
mov
inc
fidivr
jo
mov
fdiv
out
lods
mov
sbb
add
imul
movs
mov
add
push
das
movs
shld
or
test
mov
add
setne
jp
sahf
xor
mov
mov
xor
clc
test
stos
jg
cmps
xlat
mov
push
outs
cmp
pop
push
jle
mov
cmp
mov
pop
jecxz
fmul
icebp
push
(bad)
mov
lods
jbe
sub
push
in
or
popf
lods
dec
push
adc
(bad)
add
inc
daa
lock
out
jo
push
ficomp
in
adc
jne
sti
popa
mov
sub
retf
(bad)
ret
loop
jl
pop
data16
fsubr
das
ret
cmp
or
cmp
or
cmps
jle
mov
je
out
outs
enter
stos
inc
lock
cmp
mov
pop
fisubr
call
pushf
jae
bound
inc
adc
movs
cmp
add
(bad)
scas
repnz
adc
jp
enter
(bad)
syscall
xchg
inc
xchg
fidiv
mov
setg
push
loop
dec
popf
int3
fldenv
sti
xor
mov
jmp
inc
rol
adc
xor
push
jbe
vpmulhw
and
into
push
xchg
dec
fwait
jmp
int3
fwait
cld
ss
adc
dec
mov
movs
test
and
cmps
mov
mov
fist
xchg
adc
fldenv
pop
or
dec
push
(bad)
pop
add
js
mov
sub
inc
adc
push
sahf
call
jmp
push
push
sar
add
fsubr
mov
test
xchg
xchg
and
jle
pushf
cmp
lahf
jno
std
loope
data16
ja
or
jmp
adc
stos
sub
sbb
(bad)
lea
(bad)
push
push
push
pop
aam
inc
out
(bad)
and
iret
sti
(bad)
dec
sub
mov
lea
(bad)
mov
aas
jmp
sbb
movs
(bad)
push
in
mov
mov
cmps
stos
pop
dec
push
movs
jb
ror
in
or
push
add
mov
ret
adc
add
data16
scas
enter
inc
jnp
jo
mov
pop
dec
sub
push
add
test
or
pop
push
bts
or
dec
adc
xchg
and
call
inc
mov
mov
xchg
sbb
xlat
cmp
call
mov
cmp
or
pop
in
sbb
add
cmc
mov
mov
push
cmp
and
and
lods
jg
mov
or
stos
std
outs
cmc
add
jecxz
mov
cmps
dec
fisub
cmp
jle
jg
stc
je
inc
or
fsub
adc
mov
inc
adc
and
add
call
jne
push
adc
out
jp
push
shl
ss
cs
cmp
xchg
jnp
pusha
das
jnp
add
enter
stos
gs
fisub
enter
pop
cmp
mov
jle
sbb
mov
pop
xor
addr16
xor
jb
jp
xor
inc
pusha
rol
(bad)
jecxz
adc
out
ficom
xor
mov
adc
pop
cmp
push
call
jo
ror
adc
push
mov
ds
shr
jne
leave
sub
jno
adc
aas
jno
add
cwde
rcl
mov
adc
test
mov
pop
or
inc
mov
xor
in
inc
imul
mov
outs
add
pop
and
adc
aas
cmp
add
fwait
imul
mov
ss
xchg
scas
retf
and
test
ja
aaa
jnp
out
mov
sub
scas
js
ds
ins
jp
mov
pop
es
jmp
jo
into
ja
cmc
mov
cdq
fisub
jb
ror
mov
xchg
push
lea
pop
adc
nop
jge
std
mov
cli
jmp
and
shr
cmp
or
fs
xchg
push
inc
shr
iret
cmp
dec
pop
inc
mov
cmp
or
mov
pop
pop
cld
fwait
aam
mov
cli
int3
int
stos
jno
and
leave
or
and
outs
jns
pop
test
test
push
jmp
bound
jl
sub
mov
movs
push
xor
hlt
inc
gs
jmp
mov
push
mov
not
cmps
dec
cli
dec
push
mov
(bad)
mov
stos
mov
test
sbb
sbb
xor
mov
jmp
pop
sub
sub
cmp
cmps
push
pop
jl
and
xchg
scas
ins
in
cmp
scas
add
pop
add
mov
outs
loope
mov
cli
fiadd
add
xchg
sbb
xor
push
mov
push
xchg
or
mov
add
cmps
add
push
sub
aam
dec
inc
jmp
add
mov
jle
xchg
cmp
lock
add
outs
inc
jge
dec
inc
mov
stos
scas
ret
inc
dec
out
sub
or
push
adc
call
jb
mov
in
mov
push
mov
out
pop
cmp
cmp
out
xor
in
add
in
cmp
ds
or
xchg
shr
mov
bound
rcl
xchg
fs
pop
(bad)
sbb
in
xor
outs
mov
out
cmp
fadd
jne
xor
mov
jmp
add
dec
scas
dec
cli
mov
fimul
jns
push
cmp
push
and
push
int3
int3
dec
mov
neg
dec
jbe
pop
imul
stc
fs
pop
daa
rol
in
jg
(bad)
scas
clc
cmp
dec
clc
enter
hlt
cmc
cmp
or
push
cld
xor
mov
daa
repz
adc
inc
fstp
mov
call
sbb
mov
dec
iret
xchg
add
pop
xchg
retf
dec
push
xchg
and
repnz
mov
sub
ja
mov
sbb
les
jnp
fistp
sub
adc
and
mov
push
and
or
sar
mov
mov
pusha
mov
inc
push
fisttp
out
inc
ficomp
fwait
pop
arpl
lds
sub
sub
mov
test
sub
movs
test
iret
fwait
gs
retf
pop
popf
adc
push
push
jnp
in
imul
or
inc
movs
ficomp
mov
mov
imul
retf
cmp
enter
dec
mov
popf
sub
pop
or
mov
leave
leave
mov
stc
lahf
retf
xchg
mov
aam
imul
and
adc
ret
mov
mov
xchg
dec
jmp
sub
or
nop
(bad)
mov
cwde
xchg
imul
inc
pop
rcr
daa
js
jnp
popa
je
ror
int3
dec
(bad)
sub
cli
hlt
and
add
add
jp
call
ret
cmp
or
cdq
fcmove
imul
xchg
xor
in
add
xchg
fwait
push
add
icebp
out
paddusb
or
inc
stos
push
inc
push
pop
loope
cmps
setbe
dec
hlt
or
js
das
arpl
dec
push
jle
or
dec
nop
pop
xor
in
(bad)
mov
call
stos
mov
xchg
lds
movs
imul
sahf
jmp
jecxz
sbb
icebp
adc
test
or
jnp
add
scas
dec
dec
xchg
jo
or
sub
fdivr
xor
xor
pop
int
cmps
sbb
leave
sti
jp
outs
sti
out
std
repz
jmp
dec
pop
jae
js
movs
shl
xor
mov
in
das
in
ss
push
mov
push
mov
test
mov
cmp
hlt
and
jbe
jg
sti
cmp
fldcw
pushf
push
icebp
and
push
aad
cld
xor
mov
xor
jg
or
jbe
and
cmps
and
bound
xchg
inc
shl
xor
sbb
movs
dec
test
push
push
lods
jno
lahf
into
mov
and
arpl
jb
je
mov
jle
enter
add
loope
pop
and
add
pop
test
pop
dec
adc
and
jns
stos
aam
aaa
xchg
inc
add
rol
dec
mov
cmc
push
pop
mov
sbb
shl
leave
test
sbb
cmp
pushf
or
mov
pusha
jo
(bad)
xor
hlt
pop
jne
push
int3
ins
sbb
or
sbb
inc
int
push
int
mov
push
ret
push
dec
mov
xchg
xchg
mov
aam
xchg
les
scas
cwde
test
inc
sar
jne
mov
inc
ror
add
ficomp
gs
pop
cmp
or
sub
mov
cmps
(bad)
in
jmp
stos
xchg
pop
push
sbb
mov
loop
(bad)
out
ret
xor
jg
mov
sbb
cmp
fmul
jmp
jp
xor
shl
mov
push
mov
push
rcl
mov
nop
add
mov
lods
cmp
add
xor
fs
push
jb
scas
mov
xlat
mov
jmp
movs
push
imul
pop
sub
push
mov
in
push
mov
xchg
imul
add
push
inc
paddusw
push
push
inc
and
rcl
mov
sahf
inc
jno
xchg
das
and
imul
pop
mov
or
push
push
in
mov
idiv
imul
add
bound
fisubr
fst
sub
test
imul
mov
movs
dec
jmp
imul
not
or
add
lahf
cwde
(bad)
jge
sbb
loop
arpl
add
aad
xchg
or
pop
sub
movs
mov
fdiv
ret
stos
pop
dec
push
enter
jno
inc
in
test
xor
fldcw
(bad)
test
jno
add
pop
iret
mov
jl
dec
loope
inc
es
rol
nop
js
sub
xor
hlt
aam
mov
cmp
sbb
imul
jno
mov
dec
cmp
movs
clc
(bad)
lods
aas
aad
pop
mov
cdq
jns
out
mov
adc
jae
lods
dec
loope
inc
or
mov
push
cmp
mov
push
dec
shr
mov
and
int
cmc
test
xor
xchg
xchg
cmp
jae
shl
jbe
dec
xor
lds
add
lea
hlt
sub
stos
push
outs
sub
push
pop
fcomp
push
movs
test
dec
jne
xor
jge
ja
mov
ror
jns
push
jb
arpl
test
push
mov
fstp
sub
jle
addr16
iret
xchg
sbb
mov
jl
aam
sub
inc
dec
sub
mov
pop
cli
fdivr
add
dec
and
xchg
sub
xlat
not
int
mov
movs
call
cmps
loop
mov
jmp
fs
cmp
mov
adc
aaa
mov
cmp
jo
push
in
fwait
or
lods
cwde
cli
out
dec
retf
ror
ds
or
(bad)
int3
jl
fist
adc
add
push
rcl
or
or
and
xchg
shr
int3
stos
lods
data16
adc
icebp
shr
push
xchg
cmp
jns
jmp
jl
mov
js
jmp
sub
inc
dec
(bad)
and
gs
loopne
in
sub
mov
loope
leave
movs
ds
jle
xor
jno
push
dec
adc
stos
dec
addr16
cs
dec
mov
jl
nop
dec
inc
pop
sub
dec
fidivr
ror
or
jbe
movs
sub
gs
add
jecxz
in
mul
movs
mov
or
mov
push
lock
add
fstp
push
sbb
neg
movs
xor
add
adc
and
pop
and
pop
dec
cli
jle
leave
push
out
jbe
dec
inc
outs
xlat
popa
les
stc
jecxz
hlt
fs
jmp
arpl
cmp
shl
xchg
test
mov
push
sbb
inc
and
pop
xchg
cdq
fimul
pop
mov
push
mov
jo
shr
lods
push
enter
push
mov
cmp
js
movs
sub
lds
repz
jmp
sub
inc
mov
mov
into
push
call
enter
bound
sub
scas
push
sbb
add
mov
popf
pop
das
div
adc
or
mov
ror
pop
sahf
mov
push
mov
or
push
je
hlt
xchg
pusha
jns
out
in
jmp
cmp
cmc
adc
pop
addr16
lahf
inc
jnp
mov
aad
sbb
nop
sub
push
rcl
cmp
pop
pop
mov
in
cmps
ror
adc
xor
retf
sub
rcr
fdivr
add
neg
mov
inc
pusha
and
pop
mov
out
or
outs
push
inc
cli
out
dec
lock
add
ret
xchg
movs
push
pop
pusha
stos
test
test
std
jg
out
inc
mov
xor
sub
mov
add
popf
push
cmp
sub
(bad)
clc
xlat
stc
mov
jb
jnp
(bad)
jecxz
pop
loopne
(bad)
mov
mov
je
xor
cmps
sbb
inc
pop
scas
push
jl
push
mov
xchg
stc
mov
jnp
pop
movs
jp
cli
push
xor
xchg
inc
push
push
mov
jae
cli
inc
mov
and
push
hlt
xchg
stos
add
fistp
sahf
jge
inc
and
dec
add
data16
dec
cmp
enter
mul
fs
ret
imul
aam
or
iret
sti
outs
cmps
sti
jmp
ja
in
jmp
push
mov
inc
mov
(bad)
mov
sub
push
rol
iret
pop
stos
jmp
fnstcw
mov
aam
jne
scas
nop
dec
test
pop
xchg
add
test
fcmovnu
mov
adc
add
(bad)
sub
sub
cmp
cli
scas
je
mov
(bad)
(bad)
jmp
out
push
push
lock
mov
cmps
mov
pop
xchg
mov
es
loopne
add
sbb
loope
or
ret
sbb
ss
add
popa
mov
mov
dec
jp
xor
fld
nop
out
push
cdq
popa
lods
jne
push
pusha
push
or
lods
jl
dec
dec
cs
mov
add
enter
add
nop
pop
ins
xlat
xor
out
aam
mov
fwait
mov
push
cmp
mov
jo
aas
cs
addr16
xchg
push
adc
inc
mov
daa
test
mov
add
js
sub
cmp
enter
stc
movzx
stos
xor
or
loop
jge
mov
imul
out
pushf
mov
nop
push
(bad)
mov
jmp
cmp
inc
sbb
xchg
and
mov
xor
jg
aas
fldl2t
call
fdivr
xor
mov
xchg
dec
add
inc
lds
push
cmc
int
outs
cmps
retf
xchg
mov
(bad)
shr
and
or
aas
lahf
mov
mov
dec
and
ret
inc
aam
jo
movs
or
outs
(bad)
ss
aam
imul
fidivr
pop
xor
jge
mov
push
popa
jbe
xchg
xchg
cmp
pop
outs
pop
aas
pop
push
fdivr
lahf
cli
xchg
ins
push
out
mov
jecxz
jle
sbb
iret
daa
test
ins
push
dec
xor
imul
add
aaa
sub
and
(bad)
fld
inc
in
(bad)
jge
sub
xchg
sbb
cmp
imul
repz
scas
fwait
cmp
retf
bound
je
imul
jp
fs
xor
or
mov
hlt
and
inc
sbb
mov
sbb
mov
mov
rdmsr
imul
push
arpl
inc
jp
les
jmp
loop
jmp
ja
jge
inc
test
or
pop
movs
push
sbb
cmp
mov
adc
(bad)
loopne
dec
lods
push
imul
pop
arpl
out
and
int3
(bad)
cmps
aam
jle
in
jmp
sub
xchg
mov
rol
xchg
arpl
int
sub
jge
fucomi
jae
aaa
adc
sub
and
push
jl
push
call
pop
dec
adc
sub
shl
adc
push
fld
cwde
jmp
aad
push
pop
cmp
mov
push
dec
popa
cwde
sbb
mov
xor
stos
jnp
enter
inc
sub
xchg
mov
push
icebp
cld
lock
stc
push
cld
adc
movs
cmps
(bad)
in
test
xlat
jge
inc
xchg
push
xlat
cmp
sbb
xor
aas
sbb
imul
and
in
pop
mov
push
jmp
jno
div
or
mov
outs
and
icebp
push
mov
aad
ins
adc
js
daa
xchg
imul
sbb
and
retf
dec
gs
data16
aad
dec
aaa
or
(bad)
jmp
aad
lds
sub
cli
push
(bad)
(bad)
nop
call
movs
loopne
push
push
xor
mov
loope
jae
adc
in
sub
mov
lods
jmp
cmps
aad
sub
aam
adc
call
adc
mov
push
data16
cmps
aaa
pusha
pop
cwde
pushf
jge
pop
fdivr
mov
xchg
pop
or
add
mov
sbb
sbb
add
push
shl
or
adc
sbb
test
icebp
hlt
dec
sbb
retf
nop
(bad)
mov
fs
mov
jecxz
ret
jns
icebp
pop
fld
sub
jno
popf
inc
adc
movs
cli
fs
jmp
frstor
mov
sar
add
mov
imul
cmp
adc
mov
xchg
sar
jnp
(bad)
es
test
jns
icebp
inc
(bad)
sahf
xchg
pop
mov
add
sub
mov
lea
pop
stos
mov
adc
mov
ins
and
call
or
sub
sbb
lods
dec
cld
test
add
mov
cdq
cmc
cmp
sbb
call
sbb
leave
movs
in
fimul
sub
and
or
add
sub
lea
mov
sbb
add
(bad)
cmps
int3
jno
into
mov
mov
xor
mov
mov
je
stos
and
sub
pop
icebp
dec
adc
mov
dec
loopne
push
xor
icebp
arpl
or
jns
je
inc
js
xor
sbb
mov
xchg
xchg
push
sahf
pushf
jg
jmp
in
inc
lea
clc
in
in
mov
xor
push
xor
xchg
add
inc
fcmovu
stc
xchg
jmp
push
add
loope
call
outs
mov
(bad)
xor
push
and
pop
ds
jmp
mov
movs
movs
iret
in
in
popf
push
comiss
ror
push
sbb
and
and
xchg
add
aam
mov
aaa
or
cmp
imul
cmp
inc
je
or
shr
lock
iret
push
pop
test
xchg
add
push
inc
test
stc
jp
ficom
xchg
dec
test
push
ss
cmps
mov
sbb
adc
push
dec
xor
inc
jo
inc
mov
jle
fadd
(bad)
xchg
sub
retf
push
sbb
aad
dec
cmp
test
push
sbb
test
cmp
fld
lea
inc
xchg
out
lea
mov
push
leave
sub
jb
push
cmp
inc
jne
mov
rep
in
pusha
mov
mov
fwait
xlat
or
std
cmps
cmps
inc
ja
dec
arpl
xchg
push
mov
jl
out
shr
cmp
mov
dec
sub
cmp
xor
sub
inc
icebp
xor
pop
fst
loopne
dec
cmp
jbe
inc
fnstenv
and
xor
sbb
adc
retf
ins
scas
adc
push
push
inc
sub
dec
sub
rcr
pop
pop
pop
and
push
push
cmc
adc
cmp
push
loop
sub
sbb
sbb
add
mov
push
or
hlt
pop
(bad)
outs
out
xchg
ret
sub
add
add
arpl
mov
cmps
jbe
push
sub
mov
lea
xchg
ss
hlt
mov
rcr
das
cmp
mov
ffree
fsubr
pop
enter
pop
adc
pop
mov
movs
sbb
inc
int3
mov
xor
clc
or
scas
push
ins
sbb
or
lea
push
rcr
and
inc
jbe
sub
jg
mov
inc
jnp
enter
inc
sbb
mov
test
es
cmp
fistp
and
ins
int
icebp
clc
mov
xchg
add
dec
sbb
pop
retf
adc
dec
test
je
sub
aaa
call
adc
pop
mov
mov
push
mov
les
lods
lock
lahf
dec
sub
xchg
ret
xor
xlat
cmp
test
inc
push
mov
push
sbb
sar
leave
sub
nop
and
and
jmp
div
in
in
out
pop
dec
fistp
in
and
xor
adc
xchg
xchg
pushf
adc
xchg
xchg
adc
sti
scas
fs
fsubr
jecxz
xchg
stc
inc
cwde
jecxz
xchg
mov
dec
sub
fadd
ds
dec
mul
jae
scas
outs
and
add
push
test
sub
or
movntq
ja
mov
dec
test
and
test
call
jb
dec
es
icebp
xchg
xchg
xchg
sub
push
push
lods
mov
addr16
sahf
push
and
adc
pusha
sub
lods
cmc
out
push
js
(bad)
ja
repz
cdq
inc
add
jl
mov
mov
das
aas
inc
jne
(bad)
outs
lods
call
adc
jge
mov
sub
sub
sub
ficomp
in
sahf
cmp
inc
loop
js
js
imul
pop
movs
fcom
pop
in
ret
add
push
cmp
lock
mov
sub
pop
pop
add
adc
je
adc
dec
or
mov
and
inc
outs
or
cli
mov
lods
and
test
ja
push
jnp
(bad)
aas
adc
call
aad
pop
cli
push
push
sahf
addr16
icebp
arpl
popf
into
cdq
sahf
cmps
push
mov
ror
or
sbb
pushf
pop
fistp
mov
fwait
sub
mov
xor
inc
lahf
cmc
jle
cmp
pop
push
push
cdq
sbb
repz
xor
(bad)
stos
xlat
cmps
or
mov
imul
and
pop
add
clc
inc
pop
fninit
outs
mov
call
push
dec
or
test
sti
push
mov
icebp
inc
push
loopne
cli
mov
cld
fnstsw
cld
push
jb
adc
xchg
mov
pop
and
stc
inc
push
and
cmp
in
enter
or
mov
cmp
push
retf
daa
std
sahf
xchg
mov
scas
xchg
xchg
inc
fistp
xlat
ret
retf
dec
daa
test
dec
mov
push
mov
sbb
in
aam
pushf
(bad)
mov
idiv
fdivr
cmp
repnz
xchg
mov
mov
cld
inc
test
mov
pop
retf
jp
shl
push
push
and
cs
iret
xchg
je
xor
mov
inc
inc
pop
dec
test
sub
sub
mov
xor
(bad)
in
push
scas
jmp
adc
fld
repnz
mov
mov
loopne
push
push
cwde
and
adc
dec
lods
jae
lock
add
aad
fdivr
mov
add
push
push
adc
dec
jecxz
icebp
call
icebp
mov
dec
daa
out
dec
add
add
les
popf
and
(bad)
mov
mov
sbb
inc
cmp
cmp
xlat
or
lods
dec
lods
and
push
cwde
sbb
mov
inc
popa
and
aam
inc
test
push
int3
add
addr16
add
pop
mov
and
inc
cmps
mov
and
push
mov
das
popa
test
cs
inc
mov
xor
cs
xchg
adc
xchg
cld
cli
in
push
fidiv
sub
mov
lahf
mov
sbb
push
(bad)
addr16
sub
push
mov
stc
jne
cwde
out
aam
outs
and
sahf
add
fwait
sahf
pmulhuw
pop
test
in
jb
dec
add
ret
mov
jg
popf
dec
(bad)
stos
popf
push
sub
imul
xchg
clc
add
dec
pop
jmp
xor
mov
xor
mov
enter
xor
stc
icebp
(bad)
jge
mov
jp
push
xchg
push
sub
sub
test
shl
or
mov
hlt
test
addr16
stos
sbb
popf
dec
(bad)
sti
dec
popf
mov
in
add
cmps
lahf
xchg
cmp
xor
call
xchg
add
mov
mov
popa
cmps
lahf
lock
mov
xchg
sub
sbb
test
mov
push
jo
retf
ror
rol
adc
dec
inc
loopne
in
and
das
and
or
outs
mov
and
out
inc
in
sub
mov
dec
(bad)
adc
icebp
call
xor
inc
adc
mov
aad
push
cmps
inc
ds
scas
inc
out
out
add
jns
test
ins
mov
lds
aam
icebp
iret
xor
in
imul
outs
jmp
(bad)
mov
(bad)
out
leave
mov
jecxz
push
push
xor
cdq
gs
sub
sub
push
push
push
xor
fdivr
aam
pop
inc
adc
mov
push
mov
add
add
enter
sbb
push
sub
movs
adc
xor
pop
mov
xchg
xchg
(bad)
sub
cmps
fdivr
fst
jecxz
(bad)
push
inc
jno
sbb
enter
std
or
push
pop
iret
xchg
cmp
and
or
(bad)
xor
push
ficom
push
dec
loop
mov
shl
rcr
and
(bad)
in
vcvtdq2pd
fidiv
adc
add
in
cmp
xchg
jne
int3
pop
jmp
rcr
sbb
cmp
push
test
mov
and
test
repnz
dec
test
icebp
aas
fist
and
int
xchg
dec
jae
mov
ja
ins
sub
xchg
or
push
inc
inc
jne
or
sub
dec
(bad)
(bad)
bnd
retf
sbb
cmp
dec
shl
adc
dec
call
(bad)
push
lock
mov
call
pop
dec
and
inc
mov
and
mov
fdivr
mov
aad
aad
push
push
mov
push
int
test
mov
xchg
outs
or
scas
repnz
pop
(bad)
push
mov
mov
fisttp
sub
mov
jg
outs
pop
mov
lods
xchg
ins
push
test
mov
lods
or
jnp
pop
mov
(bad)
(bad)
(bad)
retf
mov
push
adc
jb
mov
dec
lock
cli
xchg
addr16
stc
mov
mov
or
mov
sbb
pop
lds
add
out
xchg
sub
mov
sub
call
sub
dec
inc
pop
fsub
out
lods
je
sti
jp
stc
outs
pusha
adc
mov
je
inc
cmps
or
imul
bound
xchg
sbb
cmp
ins
(bad)
mov
sub
retf
repnz
ins
push
adc
into
xor
cmp
out
pop
sqrtps
dec
mov
or
dec
mov
scas
imul
dec
cdq
iret
fld
movs
hlt
fsub
es
and
ins
inc
inc
test
jmp
xor
inc
movs
loop
add
aaa
sub
xor
jl
repnz
outs
inc
lods
dec
in
clc
jg
cmc
cld
sti
push
xchg
pop
ret
cmp
push
mov
xchg
iret
stc
lock
hlt
shr
out
pop
push
ret
adc
fdivr
dec
movs
movs
or
sbb
dec
test
sub
inc
push
add
aas
in
inc
cmps
clc
jnp
mov
ins
in
sbb
fsub
jecxz
jg
aam
test
pop
mov
inc
(bad)
xlat
sahf
jns
cli
dec
mov
pop
in
not
not
fisubr
adc
inc
in
jecxz
div
push
push
shr
xchg
sub
dec
fimul
add
(bad)
inc
bound
adc
or
mov
(bad)
mov
aam
add
and
cmc
xchg
fsubr
ret
sbb
sbb
pushf
and
shl
or
js
xchg
cmps
movzx
sub
xchg
push
xor
xor
dec
retf
xor
ins
inc
lea
xchg
(bad)
and
mov
imul
pop
and
dec
jns
test
pop
movs
mov
fisttp
movs
xchg
push
jp
mov
sub
stos
les
dec
push
test
mov
aas
in
cmp
sete
repnz
xchg
push
or
leave
js
test
scas
loop
dec
sahf
rcr
dec
sub
jns
mov
loopne
cmps
shl
push
jecxz
call
inc
xchg
rol
and
test
or
add
movs
div
or
jno
movs
pop
cmp
xchg
cmp
or
add
mov
scas
icebp
push
ret
mov
jae
out
int3
push
fisubr
fs
jmp
inc
rcr
mov
sub
sub
push
int3
cmc
dec
sbb
pop
popf
inc
push
or
cs
xor
ds
and
lods
add
lea
cld
aas
in
or
pop
mov
gs
pop
mov
leave
inc
cmps
sbb
mov
mov
jle
pushf
jle
outs
fs
or
in
test
stos
sbb
aad
shr
jbe
retf
retf
push
or
pop
loop
xor
jmp
inc
aad
inc
aam
sub
das
int3
push
mov
out
inc
stc
scas
jg
imul
(bad)
jnp
repnz
inc
mov
pop
adc
and
aad
mov
mov
mov
fidivr
mov
adc
(bad)
lods
push
pop
or
jmp
inc
inc
dec
jno
ds
push
fistp
les
jae
lea
mov
jns
dec
outs
les
(bad)
retf
cmp
jge
adc
sub
xchg
mov
add
iret
out
loop
or
shl
mov
aas
das
das
fcmovnbe
fst
mov
inc
pop
std
imul
add
pop
lea
dec
imul
rcr
dec
lods
sar
dec
(bad)
pop
mov
popf
xchg
push
sahf
sbb
jmp
mov
(bad)
xchg
push
stos
sub
pushf
pusha
jecxz
mov
ret
mov
inc
xor
push
mov
dec
push
and
loop
cmp
xchg
leave
scas
and
cdq
out
cmp
fistp
pop
xor
pop
adc
dec
cmp
jb
fdivr
test
mov
cwde
rcl
pop
sbb
xor
pusha
xchg
xor
or
stos
sbb
lea
jmp
inc
push
adc
movs
test
inc
cmp
add
cwde
aaa
mov
or
(bad)
sahf
repz
sub
sub
dec
add
and
js
push
and
push
hlt
push
sub
shl
pop
out
imul
mov
jle
sbb
pusha
(bad)
and
rol
push
ret
sbb
gs
sbb
(bad)
xchg
dec
and
mov
push
enter
test
cmp
lea
dec
dec
jp
xor
cmp
push
ja
sbb
sbb
cmp
cmp
sbb
xchg
adc
je
adc
(bad)
or
xchg
lds
jnp
mov
cmp
add
and
add
cmp
sahf
and
movs
imul
adc
push
push
pop
stc
mov
aad
cmc
push
call
pop
in
jmp
push
xor
nop
push
sub
and
push
mov
(bad)
fdiv
dec
gs
sub
and
pop
xchg
dec
sub
aam
add
mov
into
cmc
mov
add
and
xor
nop
add
pop
push
or
and
pop
adc
mov
jmp
xchg
push
dec
mov
inc
sub
dec
xor
in
jns
inc
jne
clc
jle
fidivr
fsubr
dec
inc
imul
push
jmp
sub
fmul
or
pop
in
xchg
clc
push
lods
nop
xlat
lods
fisub
mov
mov
gs
add
cmp
pop
std
inc
(bad)
icebp
in
stos
cli
dec
aad
adc
ror
jmp
push
mov
push
and
mov
loope
movs
or
stos
mov
xchg
mov
or
dec
sub
dec
adc
mov
dec
cmp
daa
popf
movs
mov
adc
pop
push
and
sub
push
movs
jo
enter
daa
xchg
retf
adc
xor
stos
inc
add
mov
pop
add
adc
jae
inc
loopne
ds
inc
or
push
retf
add
xchg
neg
outs
aaa
lods
data16
sbb
push
or
sbb
inc
add
push
cld
cmp
add
repz
mov
and
jecxz
xchg
jp
xor
dec
mov
push
mov
xchg
push
adc
cdq
push
inc
add
mov
adc
aaa
jno
bnd
mov
and
sahf
adc
sub
xchg
lahf
bnd
arpl
fsubr
jno
inc
push
adc
sub
cdq
adc
inc
xchg
push
imul
popa
or
dec
rol
push
cmps
bswap
push
cld
cli
das
xchg
pop
mov
cmc
ror
mov
inc
xchg
fs
sub
add
dec
mov
add
jne
cmc
neg
mov
push
std
push
cwde
aas
cmp
mov
sar
and
dec
and
adc
push
xchg
sub
(bad)
rcl
sub
clc
push
and
sub
sbb
(bad)
lock
pushf
int
push
push
dec
jb
lea
jecxz
push
or
mov
inc
fstp
jmp
add
jo
inc
cmps
pop
mov
outs
movzx
push
jne
(bad)
shl
loope
push
test
dec
adc
inc
sbb
test
push
sub
ds
(bad)
ins
xchg
out
cld
icebp
push
inc
lahf
push
or
nop
xor
dec
add
(bad)
aam
shl
jmp
sbb
daa
retf
imul
fst
mov
mov
mov
push
(bad)
sub
in
test
dec
pusha
fcomp
cld
jge
scas
and
or
scas
mov
aas
mov
jnp
das
fsubr
add
xchg
scas
add
fcomp
bound
dec
and
push
push
xchg
and
repz
sti
and
cmp
call
mov
rol
hlt
jmp
pop
enter
je
xor
push
xor
cmp
ja
sbb
je
push
inc
movs
add
xor
fst
xlat
add
dec
and
(bad)
bnd
aam
push
jmp
xor
stc
stc
hlt
std
std
out
fsub
adc
mov
icebp
fsub
push
dec
xchg
xchg
imul
cmp
mov
stos
cli
movs
inc
lods
jb
hlt
push
mov
mov
xor
mov
dec
mov
repz
shl
push
sub
int
call
test
push
dec
add
jg
xchg
inc
ins
mov
sub
adc
test
push
lahf
cmp
xchg
dec
in
xor
gs
adc
stos
cmp
imul
repnz
pop
xchg
xor
movs
jbe
add
add
aaa
xchg
xor
or
dec
or
jno
add
mov
jo
stos
dec
(bad)
push
xchg
or
les
pop
sti
dec
int3
jns
(bad)
movq
jne
push
push
add
adc
jmp
daa
ins
push
nop
iret
add
popf
inc
cmp
test
pop
sub
mov
pop
mov
test
sar
neg
jmp
shl
jmp
jmp
jbe
sub
test
xor
(bad)
aad
int3
bound
dec
push
xor
pusha
test
call
push
push
push
test
sub
imul
jae
ja
mov
xor
push
push
mov
jecxz
sub
or
jmp
inc
mov
add
ror
lahf
inc
xchg
fstp
xor
push
inc
xor
mov
sbb
mov
js
xchg
xlat
push
cwde
mov
jmp
movs
push
sub
add
pop
cmp
call
xchg
mov
cld
mov
fidivr
test
sub
fld
xlat
jecxz
and
out
or
jmp
add
(bad)
sub
inc
outs
fisub
push
push
jo
cmovb
push
push
arpl
mov
sahf
push
add
in
pop
jmp
xor
xor
pop
or
and
arpl
push
ins
sub
push
loopne
push
add
push
popa
adc
je
mov
mov
or
(bad)
inc
xor
sub
cmp
sub
xchg
xchg
sub
cmps
in
rcr
adc
aas
adc
sbb
cmps
fcmovnbe
enter
mov
cmp
dec
pop
addr16
mov
enter
fld
xchg
and
inc
pop
mov
dec
jo
inc
test
push
and
sar
ins
cmp
test
mov
mov
es
cmp
mov
sub
inc
mov
pop
cwde
fcmovu
je
xchg
and
and
add
(bad)
xchg
inc
cmps
xchg
pop
sbb
mov
jno
xor
shr
imul
dec
dec
jl
cmp
stos
sbb
jbe
dec
out
hlt
aaa
mov
pop
les
fstp
fidiv
pop
dec
loopne
das
stos
xor
sub
dec
sub
mov
xchg
mov
aas
mov
movs
push
outs
lods
sub
xchg
push
pop
cmp
in
retf
dec
mov
sbb
mov
mov
lock
jecxz
(bad)
fxch
xor
or
mov
jp
repnz
ins
fcomp
arpl
daa
iret
mov
sbb
gs
and
dec
adc
xor
inc
cmp
push
add
inc
lahf
in
pop
out
inc
mov
leave
push
mov
cld
fs
cmp
stos
mov
xchg
call
fwait
add
idiv
or
popf
add
inc
mov
fcmovnu
mov
mov
cmps
push
test
mov
sbb
or
push
retf
stos
cmp
out
hlt
or
retf
xlat
(bad)
popa
sub
xor
jbe
js
fstp
cmp
push
jo
imul
mov
inc
push
jae
add
idiv
pop
into
test
movs
pop
mov
addr16
imul
sbb
cld
push
push
(bad)
sub
adc
cmp
std
fist
add
jecxz
or
test
ret
adc
scas
jp
ins
imul
mov
xchg
add
loopne
lahf
push
pusha
add
adc
jecxz
pop
cmp
mov
mov
or
sub
sbb
ficom
sub
sub
frstor
cmps
push
in
iret
mov
cmp
mov
push
push
xchg
pop
rcr
xchg
cmps
outs
loopne
shl
sbb
stos
arpl
ret
arpl
inc
and
add
adc
add
mov
fcom
fdiv
shl
dec
and
mov
xchg
dec
icebp
ss
cwde
enter
int3
pop
idiv
sbb
(bad)
fidivr
xor
out
push
mov
jmp
nop
enter
mov
inc
out
push
or
aam
fs
loop
test
adc
arpl
(bad)
aad
test
pop
ds
jmp
pop
in
stos
test
and
mov
shr
xchg
xchg
xor
mov
addr16
int
pop
dec
das
ins
mov
shl
sbb
imul
bound
mov
sbb
rol
dec
js
mov
ins
stos
xchg
jne
(bad)
mov
push
push
popf
xor
xchg
push
inc
dec
(bad)
inc
pop
outs
lds
out
fbstp
cmp
fs
inc
or
cwde
hlt
jecxz
hlt
push
popa
pusha
mov
mov
jg
seta
jge
mov
xor
pop
mov
imul
outs
sub
movs
mov
and
and
sub
cmp
add
test
test
add
aas
ds
inc
jo
dec
loope
les
dec
or
pop
dec
xor
xor
fwait
sub
test
rcr
mov
dec
push
test
add
ds
and
vpaddw
hlt
xor
loopne
stc
sub
or
cmp
push
pushf
cdq
in
loope
adc
mov
jno
add
stc
hlt
mov
pop
sub
sub
popa
out
call
shr
xchg
call
push
xchg
push
(bad)
fcom
out
cmp
fst
pop
fistp
cmp
or
inc
jle
lea
je
mov
mov
inc
inc
imul
test
push
div
jb
in
adc
bound
mov
add
pop
in
pop
cld
cmp
imul
push
rol
outs
add
and
shl
repnz
jmp
sub
adc
pop
in
or
out
in
mov
push
add
aas
in
cmc
lea
sub
cli
jg
aas
dec
iret
mov
cmps
bound
mov
add
out
stc
sub
xlat
in
jp
jmp
push
sub
std
pop
popf
es
enter
jae
sti
std
arpl
(bad)
sub
jno
add
enter
pop
jmp
arpl
iret
out
daa
(bad)
sub
fisub
std
dec
rcr
call
or
xor
cli
hlt
xlat
cwde
mov
cs
aad
or
cld
pop
(bad)
ds
push
aad
aaa
jmp
rcl
je
imul
lds
out
mov
mov
jne
fwait
push
sub
add
repnz
jp
call
fdiv
test
mov
mov
sahf
cmp
test
imul
push
movs
or
ss
jle
sahf
fisub
movs
icebp
(bad)
mov
mov
pusha
add
lods
arpl
xchg
stos
and
adc
loope
aas
mov
mov
cmp
repnz
std
jg
fld
test
push
jb
fistp
xchg
rcr
movs
fmul
mov
push
call
sub
xor
ficomp
inc
test
std
jg
retf
out
push
mov
sub
pop
in
ds
mov
rcr
pop
std
js
std
imul
sub
and
mov
bnd
sbb
mov
mov
(bad)
inc
shr
cmps
and
push
lahf
outs
inc
mov
shl
push
jle
icebp
pop
stc
je
inc
xchg
leave
xchg
in
mov
inc
popa
pop
cli
imul
not
cmps
push
out
mov
xor
pop
adc
or
push
cmps
mov
sub
xchg
sub
xor
cdq
add
cmc
pop
test
repnz
dec
sub
add
push
js
shl
enter
dec
mov
inc
stos
jns
sbb
aaa
aam
out
sahf
inc
mov
add
mov
xchg
(bad)
outs
cmp
lock
pop
cmc
jle
and
sbb
or
cmps
adc
push
pop
repz
jnp
arpl
inc
sub
and
inc
cld
hlt
xchg
rol
fucomi
cmp
jmp
(bad)
push
push
popa
mov
mov
mov
in
outs
sbb
push
and
sbb
cmps
mov
in
iret
dec
(bad)
push
test
push
inc
push
mov
push
cs
lods
pop
test
gs
and
imul
test
movs
mov
shl
cs
dec
add
stc
arpl
xchg
pop
dec
cli
or
movs
test
jae
in
ret
dec
jge
inc
pop
ss
mov
xchg
xchg
inc
leave
or
push
or
push
jmp
add
sub
push
sar
xlat
mov
pop
xlat
aas
icebp
jmp
push
ret
imul
imul
ds
mov
rcl
aaa
icebp
dec
cmp
inc
lea
xchg
and
call
xchg
js
retf
or
ins
in
in
in
imul
add
sub
or
mov
aad
aad
add
jno
retf
mov
fstp
mov
xchg
imul
cmp
imul
push
jnp
mov
repz
fucomp
fcom
das
jnp
fdivr
es
xchg
cmp
jecxz
out
popf
inc
or
mov
sub
cmp
xchg
pop
int3
xchg
jp
in
mov
cwde
fadd
push
mov
mov
loopne
(bad)
sar
push
nop
js
mov
aad
jp
push
inc
adc
pop
push
test
fwait
int
fisubr
push
ja
xchg
test
movs
je
add
adc
stos
dec
jae
push
and
add
pop
mov
mov
mov
jp
pop
mov
dec
sbb
(bad)
call
push
mov
neg
mov
(bad)
rcr
inc
push
or
pop
xor
sub
sub
cmp
jmp
rol
inc
data16
loop
or
in
pop
cdq
jmp
jae
cdq
retf
dec
mov
dec
push
mov
adc
push
aas
xchg
sub
push
icebp
mul
ins
adc
fxch
sbb
inc
and
xchg
add
and
pop
pop
pop
loop
popf
xor
cmp
mov
(bad)
lods
push
aad
add
inc
repnz
jmp
push
dec
sti
repz
adc
sar
test
shl
dec
imul
shl
mov
outs
fwait
outs
fild
std
lods
test
lea
add
test
dec
cmp
(bad)
div
xchg
and
lds
mov
pop
push
cmp
stc
rcr
sbb
inc
mov
xor
enter
cmps
sti
jg
aad
repnz
cmc
dec
shl
inc
test
popf
lods
loop
add
pop
(bad)
lock
push
fs
(bad)
xor
xor
jno
call
cmp
xchg
inc
xchg
iret
mov
inc
push
inc
adc
nop
lods
xor
test
stos
arpl
and
test
add
aaa
shl
mov
xchg
add
push
and
add
inc
dec
cmp
add
mov
(bad)
cmps
mov
cs
dec
lea
ss
mov
mov
stos
and
aad
test
fwait
pop
lahf
push
pusha
xchg
test
push
mov
dec
cs
(bad)
mov
movs
js
(bad)
dec
dec
cmp
imul
dec
pop
jl
inc
pop
ror
adc
and
lahf
jmp
xor
mov
mov
add
add
cs
cdq
sti
dec
iret
lahf
scas
cmps
cmp
ss
and
jp
push
rol
adc
push
shr
std
or
adc
sti
cmp
ins
in
fsubrp
and
mov
ds
sbb
dec
sub
mov
ds
loope
ror
fstp
mov
or
jge
rol
xor
sbb
inc
or
jae
mov
jbe
cdq
(bad)
xlat
addr16
cmp
inc
inc
setne
mov
mov
aam
(bad)
push
mov
jne
pop
cmp
xor
fxch
or
bound
xor
bnd
in
out
pusha
xchg
cmp
and
jno
xor
mov
and
std
xor
mov
test
pushf
stos
cdq
sbb
pop
and
bnd
fdivrp
add
nop
mov
and
scas
inc
mov
retf
jmp
sbb
jne
pop
retf
add
nop
mov
scas
pop
and
cmc
jno
repnz
(bad)
idiv
rcl
dec
jnp
fild
js
scas
pop
inc
xchg
div
pop
add
xchg
cmp
fmulp
outs
fadd
pop
cmps
(bad)
dec
sbb
scas
pop
inc
inc
adc
jl
div
mov
movq
sub
xchg
or
fidivr
ja
and
xor
dec
mov
scas
sub
and
jmp
mov
dec
xchg
repnz
sub
mov
clc
xor
inc
ss
das
out
daa
mov
sub
mov
ds
inc
rcr
ucomiss
add
pop
and
mov
push
ja
pop
lods
jp
je
adc
icebp
in
mov
adc
loopne
loope
enter
mov
add
sti
pop
lahf
retf
cmp
fprem
int3
into
push
stos
and
cmps
movs
les
ja
mov
add
push
mov
les
pop
dec
fistp
pop
sbb
cmp
adc
cmp
jle
cmp
movs
inc
inc
add
test
jg
sahf
mov
out
sbb
ss
mov
imul
jmp
sbb
ret
pop
mov
int
mov
jbe
(bad)
jb
sub
push
cmp
call
call
sub
sahf
lea
cmps
xchg
lea
xor
stos
push
jns
add
leave
iret
inc
pop
sar
fdivrp
jge
xor
test
inc
mov
jmp
push
push
push
xor
pop
(bad)
fmulp
mov
push
fidiv
cmp
push
icebp
jno
scas
scas
sbb
xchg
out
pop
cmp
pop
cmp
cmp
(bad)
sub
imul
cmp
aaa
stc
xchg
cmc
fiadd
cmp
scas
test
aad
mov
adc
pop
(bad)
dec
adc
shr
adc
mov
jnp
pop
outs
mov
adc
push
pushf
sub
jb
ficomp
adc
clc
test
sub
inc
or
test
mov
jb
fldcw
sub
mov
pop
push
and
add
cmp
dec
clc
and
or
call
fbstp
fstp
add
push
push
fisubr
jle
pushf
mov
std
in
cmc
xor
push
pop
dec
(bad)
pusha
and
jge
(bad)
lahf
cmp
cwde
mov
sbb
popf
imul
inc
scas
stos
movs
xchg
push
sub
stos
jmp
xchg
pushf
and
mov
inc
sbb
jg
inc
pop
ins
ficomp
adc
sub
aam
pop
push
fisubr
sbb
jno
shl
pop
pop
out
or
out
inc
fdivr
mov
imul
js
cmp
sub
fistp
xor
dec
pop
xor
mov
out
pop
adc
jge
pop
ins
fwait
dec
mov
jae
jecxz
and
in
push
xchg
shr
add
cmps
gs
stc
(bad)
jmp
(bad)
jmp
cmp
shr
into
bound
push
jns
test
into
or
pop
(bad)
ins
mov
movs
rcl
fld
mov
xchg
call
jno
sub
push
rcl
cmp
repz
es
call
mov
iret
xchg
dec
dec
push
xor
arpl
mov
ds
jg
xchg
or
xchg
mov
mov
jl
jle
(bad)
pop
daa
mov
out
xchg
cmp
pop
pushf
jnp
sub
sti
cmp
ja
pop
in
mov
mov
je
(bad)
rcl
push
(bad)
push
adc
inc
push
daa
mov
xchg
sbb
outs
mov
pop
jno
scas
push
imul
jge
test
mov
sub
fimul
cs
xlat
mov
mov
scas
scas
mov
or
addr16
ficom
mov
das
mov
sbb
sub
lods
jecxz
cmps
fisttp
fs
dec
call
xchg
call
sti
imul
sbb
xchg
add
xchg
aas
aas
aas
cmc
push
mov
lock
mov
xor
sahf
cmp
jecxz
dec
push
add
imul
movs
aam
sahf
inc
jmp
jge
std
scas
lods
(bad)
in
int3
pop
int
ds
mov
movs
xor
jg
shr
sub
pop
mov
xchg
inc
nop
dec
or
lods
push
xchg
dec
cwde
fild
inc
aad
adc
rcl
xchg
inc
and
sub
mov
pop
mov
xor
dec
test
sub
xchg
(bad)
packsswb
inc
inc
mov
scas
push
sub
cmp
xor
push
sbb
mov
xor
cmps
sti
iret
mov
mov
fisttp
mov
jmp
ins
or
push
xchg
popa
test
lods
ds
loop
cmps
jg
jmp
cmc
loope
push
cmps
pop
aad
daa
cmc
mov
xor
(bad)
push
adc
(bad)
mov
stc
or
lods
dec
push
and
push
jg
xchg
fdivr
xor
mov
lea
xchg
push
or
jmp
mov
outs
les
adc
dec
adc
popf
inc
push
push
mov
test
sbb
xchg
add
mov
icebp
scas
inc
int
and
sub
imul
out
ror
mov
in
shr
pop
or
xchg
xor
and
xchg
adc
sahf
dec
push
cmp
dec
adc
adc
push
pop
mov
cmp
dec
xor
sbb
into
cwde
cld
mov
stos
pop
dec
sub
xlat
xor
dec
cmc
pop
xchg
jp
add
push
dec
sbb
mov
push
test
pusha
sti
(bad)
aaa
stc
and
push
cmp
inc
test
mov
int3
dec
loope
mov
adc
mov
inc
call
jb
repz
mov
scas
xchg
lods
cmp
jecxz
hlt
fist
mov
cmps
stos
cmps
mov
push
out
sahf
imul
xchg
les
pop
jnp
fwait
cli
dec
jae
scas
ins
and
jne
movs
test
idiv
add
xchg
dec
dec
jne
and
inc
pop
loope
sahf
pop
jmp
int3
push
pop
xor
sbb
out
pop
mov
out
in
sbb
lea
add
pop
(bad)
not
ja
add
fsubr
mov
jmp
adc
(bad)
jl
dec
cmp
xchg
ja
ret
mov
data16
out
mov
aad
xor
pop
pop
call
arpl
shl
sub
inc
movs
enter
mul
fsincos
imul
daa
je
out
daa
mov
daa
jl
aam
fisubr
sub
jmp
ss
nop
pop
ins
out
xor
push
inc
mov
popf
inc
adc
mov
stos
lods
stos
ficomp
sbb
(bad)
push
dec
inc
sbb
push
lock
mov
mov
aas
mov
fldcw
imul
fisttp
movs
add
or
jge
lahf
(bad)
mov
das
sbb
xor
mov
add
sti
xchg
dec
call
dec
scas
sbb
push
inc
sbb
mov
mov
call
lds
lods
repz
lock
pop
dec
imul
imul
retf
push
mov
ja
cmp
jge
sbb
and
out
loopne
test
add
hlt
push
mov
imul
imul
push
and
dec
inc
(bad)
or
adc
jo
in
bswap
test
in
mov
aam
sbb
push
cmps
cmp
(bad)
xchg
imul
pusha
inc
mov
test
or
das
jmp
punpcklwd
fs
cmps
fidiv
jmp
mov
pop
adc
or
sbb
scas
push
in
jecxz
push
scas
xchg
retf
sbb
out
sbb
xchg
ins
or
ss
std
(bad)
ja
test
int3
pop
aam
adc
cmp
push
jno
out
je
add
bnd
nop
leave
add
dec
or
test
pop
sbb
retf
or
sub
out
jl
sbb
sti
jge
xchg
add
scas
xchg
cmp
mov
cdq
mov
xor
mov
(bad)
push
cmps
xchg
dec
adc
xchg
cmp
ret
cmp
mov
movs
xlat
push
inc
(bad)
out
frstor
(bad)
dec
sub
test
inc
dec
dec
or
in
pushf
pop
(bad)
cmp
aam
push
xchg
and
scas
adc
aas
aas
sub
stos
dec
data16
int3
lods
stos
movs
das
xchg
inc
les
inc
stos
xlat
push
imul
pop
imul
ror
retf
jmp
lods
lods
ret
es
sahf
jecxz
movs
(bad)
mov
lods
cmp
xor
cmp
leave
mov
inc
fisub
dec
push
retf
outs
sbb
xor
inc
aas
dec
cmps
in
cmps
inc
shl
xchg
adc
inc
pop
shl
repnz
jnp
and
arpl
mov
add
pop
pop
inc
in
enter
ds
add
xchg
adc
dec
push
mov
js
ret
sbb
adc
jne
xor
call
pop
or
aad
ja
(bad)
xor
mov
xchg
jmp
push
inc
hlt
repz
sbb
xchg
add
sbb
dec
mov
mov
cmps
sbb
mov
outs
loope
dec
test
dec
cli
mov
sbb
sbb
pop
mov
ret
pop
inc
push
xor
lods
add
ds
xchg
sti
push
outs
das
add
js
stc
mov
xchg
pop
sahf
repz
test
push
leave
test
scas
inc
leave
retf
popf
push
sub
push
rol
aad
pand
push
js
sahf
and
jo
test
ret
std
dec
test
mov
scas
and
add
add
or
dec
cmp
mov
push
mul
test
pop
ins
mov
mov
ffreep
mov
jl
inc
mov
test
dec
cwde
sbb
mov
pusha
movs
mov
lea
and
dec
dec
aad
leave
jbe
shl
shl
idiv
sub
mov
leave
lods
jg
pop
je
push
mov
add
sub
aam
mov
cmp
inc
dec
call
aaa
mov
xor
mov
push
cwde
shr
push
pushf
dec
rol
jnp
je
pop
mov
mov
es
retf
push
jo
aad
aam
xor
push
mov
xchg
nop
jle
int3
and
rol
xchg
clc
clc
xchg
push
sbb
sbb
xchg
xchg
push
pop
aad
jno
pop
ror
mov
fadd
inc
retf
into
jmp
sbb
push
aas
enter
xchg
call
bound
lahf
cmps
loopne
jno
outs
popa
neg
push
aam
jmp
repz
lds
pop
push
mov
jp
enter
repz
retf
test
inc
daa
inc
sbb
(bad)
jae
shr
int
jl
pop
pushf
jno
xchg
(bad)
outs
lods
(bad)
(bad)
out
dec
add
(bad)
retf
in
lods
cmp
add
and
inc
lea
mov
sar
mov
sub
jnp
iret
aad
out
sub
dec
mov
push
add
adc
popa
pusha
mov
fsubrp
pusha
mov
(bad)
in
mov
daa
rol
push
out
aam
scas
shl
jmp
xor
dec
mov
cmp
arpl
dec
adc
sti
or
xor
sub
push
loopne
leave
lahf
loop
push
push
sbb
inc
push
add
inc
push
popf
daa
xchg
stos
cli
psubsw
push
shl
int
inc
cmp
hlt
ss
jp
mov
add
ror
push
add
aas
aas
jecxz
sbb
rcl
xchg
dec
xor
jns
add
cmp
and
lea
test
dec
mov
ret
xor
int
push
mov
and
mov
out
mov
stos
mov
add
cld
xchg
repnz
inc
mov
je
rcl
add
mov
and
stc
add
mov
(bad)
mov
mov
nop
sub
mov
movs
jl
adc
adc
fwait
lahf
iret
xor
cmc
ja
or
int
dec
imul
dec
inc
push
mov
int3
or
je
daa
out
stos
test
push
jge
pop
inc
mov
out
cmp
adc
test
or
add
(bad)
in
mov
adc
cmp
sbb
inc
outs
mov
aam
jmp
ds
push
je
push
ret
push
or
sub
arpl
hlt
dec
push
dec
cmps
pop
add
aad
inc
inc
mov
retf
sbb
mov
xor
pop
adc
add
and
or
repz
jb
loope
and
mov
(bad)
xchg
stc
jp
pop
xor
jnp
dec
shl
push
jno
adc
sbb
lods
test
sbb
dec
adc
sar
fisubr
in
pop
pop
inc
retf
hlt
jo
xor
inc
push
je
test
into
movs
aad
mov
add
mov
sbb
pop
sub
mov
shl
stos
ja
outs
test
call
and
adc
mov
cmc
jmp
jbe
mov
or
sub
push
cdq
adc
sti
outs
out
pushf
xchg
xchg
shl
dec
adc
adc
push
ins
cmp
stos
dec
retf
push
out
mov
dec
xchg
test
xchg
scas
ret
dec
test
sub
inc
outs
pop
push
mov
lahf
mov
sub
push
fadd
adc
jecxz
jecxz
mov
mov
arpl
mov
adc
inc
push
pop
or
nop
cmps
lahf
setno
xor
out
cmp
test
or
and
fstp
cld
rcr
xor
rol
add
jmp
lea
dec
lahf
fst
(bad)
xchg
xor
scas
pop
lods
stos
dec
and
cmp
loope
mov
and
imul
jg
(bad)
in
ror
dec
addr16
mov
pop
cmp
pop
enter
and
sbb
cli
add
out
xchg
shl
test
test
or
sahf
inc
popa
in
pop
or
mov
(bad)
sahf
jecxz
leave
lds
pop
or
(bad)
pop
jo
mov
std
mov
cmps
mov
ret
dec
sbb
retf
dec
aam
or
movs
xor
dec
in
push
fwait
hlt
inc
adc
push
mov
lods
mov
pop
in
push
xor
and
jno
push
jl
sub
mov
sbb
js
jp
test
dec
popf
dec
cdq
call
inc
cmp
test
or
movs
sub
and
jae
mov
pop
jecxz
loop
shl
sbb
jno
(bad)
xor
add
(bad)
sti
fist
sahf
jmp
loope
movs
or
es
jbe
pop
cmc
inc
cmp
nop
(bad)
shr
leave
inc
adc
cdq
or
pushf
lods
jl
imul
sub
std
jle
(bad)
fistp
xchg
cmp
pop
ins
(bad)
xor
jae
(bad)
adc
jecxz
mov
adc
xlat
mov
pop
ret
add
pop
cmp
dec
xor
jp
dec
and
jmp
cmp
ds
retf
push
inc
aad
movs
fstp
mov
mov
aaa
cmps
bound
xchg
mov
lods
or
add
fiadd
xchg
sub
xor
jo
cs
push
cwde
(bad)
dec
adc
or
sahf
xchg
cld
jge
push
mov
stos
lods
sbb
rcr
mov
mov
int
mov
fisubr
data16
out
lea
push
adc
inc
mov
add
retf
dec
and
sub
mov
sbb
fimul
retf
dec
push
imul
mov
sti
xor
mov
lods
push
cmps
pusha
aad
sbb
inc
add
push
xor
adc
sbb
jmp
jge
lahf
call
leave
cmp
ret
es
enter
(bad)
pop
dec
dec
pop
dec
fwait
push
push
fimul
xchg
jg
mov
sub
popf
sub
imul
sub
pop
lods
cmp
je
push
ret
lock
out
jo
mov
neg
in
pushf
sub
cmp
out
cld
push
pop
(bad)
stos
loopne
test
repz
sbb
aaa
(bad)
sub
dec
xor
int3
mov
mov
dec
dec
shl
push
pop
lock
std
nop
fucomp
jbe
xor
cld
mov
adc
shr
out
lods
inc
pop
stos
(bad)
in
add
push
cmp
jp
call
xchg
push
cmp
mov
xor
cmp
nop
fist
push
shl
mov
xchg
push
sub
adc
ror
int3
push
out
rcl
push
push
mov
cli
push
mov
imul
(bad)
mov
mov
push
call
jge
dec
loope
call
stc
mov
sti
and
shl
sub
pusha
not
push
cmp
xchg
dec
inc
dec
les
scas
stos
in
xlat
xor
stc
mov
test
mov
mov
mov
sbb
mov
push
push
jecxz
icebp
mov
scas
call
push
aam
mov
imul
sub
cmp
dec
test
ret
and
dec
call
or
cwde
rcl
imul
aaa
mov
clc
inc
enter
xchg
push
daa
lock
or
xchg
sahf
xor
cmp
(bad)
fwait
dec
mov
pusha
add
(bad)
scas
out
call
pop
inc
cmc
fldcw
sti
mov
mov
jle
inc
xchg
dec
enter
push
nop
pop
add
cli
sti
pop
ds
and
into
dec
cwde
cmps
iret
cld
fstp
lahf
mov
lock
fmul
inc
push
cmp
push
dec
cdq
pop
xor
adc
stos
pop
mov
push
int3
mov
cmp
dec
neg
fld
cli
push
sbb
mov
cmp
mov
pop
pusha
call
enter
clc
xor
adc
mov
inc
push
fs
inc
jnp
fcomp
imul
xor
or
call
lahf
cdq
cmps
inc
rcr
fadd
sub
sub
xchg
call
aad
rcl
cmp
inc
das
sbb
push
test
shr
dec
hlt
std
ins
xor
sub
pop
aad
dec
loope
fs
inc
inc
mov
inc
imul
xchg
jno
sti
add
jbe
sbb
dec
jmp
mov
les
mov
push
add
fwait
nop
aas
xlat
imul
ins
stos
hlt
xor
push
pop
add
in
loope
dec
sub
sbb
lods
lea
inc
add
and
or
icebp
cmp
xor
mov
cmp
sub
push
call
dec
sub
add
sbb
push
fist
mov
and
mov
shl
mov
loop
aam
mov
je
sbb
je
mov
and
mov
sub
lods
push
xchg
repz
dec
xor
cli
stos
mov
enter
jecxz
lds
push
arpl
fs
push
clc
into
movs
add
int
pop
fdiv
sbb
or
xchg
cmp
xchg
and
sub
sbb
mov
jecxz
ds
rcl
mov
push
or
in
cmp
and
ins
int3
jns
jge
pop
std
test
push
aam
pop
ret
pop
rol
pop
enter
xchg
cmp
push
ja
mov
cmp
jno
les
xchg
in
sbb
xchg
shr
mov
add
aam
aaa
mov
fsubr
rcr
enter
cmp
dec
in
xor
mov
leave
and
push
test
cld
inc
jl
mov
ds
dec
stos
xchg
ficom
sbb
mov
cdq
or
popf
add
dec
xchg
hlt
std
mov
js
cwde
and
sbb
(bad)
push
dec
inc
xchg
cmps
shr
cmp
sub
pop
enter
fs
add
icebp
out
ret
js
test
jb
cmovns
arpl
mov
sub
pop
sbb
inc
imul
cmp
int3
cmc
xchg
dec
in
mov
push
cmp
in
jb
mov
out
jae
dec
mov
data16
and
ret
or
loopne
xor
add
test
fisub
sbb
popf
xor
es
js
mov
sbb
ja
arpl
mov
dec
inc
ds
and
sub
sbb
test
pop
mov
jmp
rcr
mov
retf
push
lds
and
lahf
aam
mov
fisttp
ja
push
fbstp
and
jge
push
adc
jo
lahf
scas
push
outs
int
fldcw
jge
aad
xchg
and
sub
test
movs
adc
jmp
test
mov
or
stos
mov
repnz
dec
and
adc
in
sbb
push
and
test
pusha
adc
aam
push
shl
dec
jecxz
jle
xor
lods
sub
iret
out
pop
(bad)
aam
cmps
push
add
push
imul
nop
mov
sub
rcl
inc
xor
jp
leave
sub
mov
jb
sbb
mov
in
xchg
ja
rcl
mov
ror
push
inc
aas
xchg
clc
jg
jecxz
xchg
mov
ret
outs
sbb
and
push
pushf
mov
cmp
and
imul
mov
imul
push
dec
popf
sub
xor
jmp
fadd
jns
push
push
or
cld
repz
pop
cmp
xchg
adc
jns
dec
ror
imul
mov
inc
ror
arpl
xchg
and
pop
jbe
cdq
shr
imul
push
dec
xchg
sti
jl
dec
cmp
(bad)
rcl
push
sub
inc
sbb
dec
dec
adc
test
push
sbb
cli
sub
pop
fimul
push
push
adc
pop
je
int3
and
ss
mov
loop
gs
inc
hlt
clc
pushf
mov
xchg
mov
push
jb
xchg
push
and
stos
fnstenv
mov
int
mov
mov
ins
mov
and
mov
scas
push
pop
pop
sub
in
mov
inc
mov
cmp
dec
mov
js
cmp
mov
adc
adc
push
cmp
icebp
test
inc
loopne
push
cmp
and
loopne
pop
adc
pop
adc
jo
jg
cmps
dec
fcmove
push
cmp
lea
test
stos
xchg
fidiv
or
push
dec
inc
iret
lea
xor
sub
push
aaa
add
cmp
rcl
and
add
or
xchg
or
lods
cmp
sub
popa
imul
jmp
inc
in
jge
fidivr
ds
dec
aam
adc
mov
jp
repnz
add
add
or
mov
mov
sbb
sbb
xchg
mov
jmp
(bad)
sub
jp
push
sar
mov
cmc
pop
push
sbb
cmp
mov
iret
mov
test
clc
mov
fbld
mov
hlt
mul
fsubr
lds
imul
pop
jg
aas
dec
idiv
fisttp
dec
inc
inc
dec
push
fcmovb
cmp
push
ret
(bad)
test
arpl
call
ret
das
lahf
test
jmp
sub
loopne
cli
jae
mov
mov
inc
pop
jp
pop
dec
and
loope
jl
sbb
(bad)
lahf
pop
jmp
mov
sahf
cmp
cs
clc
jg
stc
cmc
shr
sub
in
inc
out
add
cmp
push
and
and
std
sahf
mov
jmp
out
(bad)
clc
sti
rcl
movs
popa
mov
pop
add
add
inc
pop
fst
int3
test
jo
pop
arpl
std
lahf
pop
pushf
jno
mov
lods
jb
lods
cmc
add
jecxz
outs
(bad)
shr
inc
retf
(bad)
mov
mov
aam
and
ror
cli
xchg
cmc
cld
or
fcom
mov
jl
dec
repz
mov
dec
lods
and
xlat
in
inc
inc
mov
inc
jno
xchg
push
pop
movs
ins
mov
adc
inc
stc
mov
fadd
push
xchg
pop
or
pop
jmp
lock
pop
sar
test
retf
cwde
fcom
ret
push
xchg
fcmovnbe
mov
pop
movs
call
inc
fs
dec
fwait
repz
loopne
push
out
mov
xchg
or
xchg
push
lahf
bnd
pop
xor
mov
scas
adc
aas
xchg
dec
cmp
bound
jb
xchg
mov
pop
add
lods
inc
adc
lahf
cmc
mov
addr16
pop
push
movs
add
jmp
push
push
stc
je
jmp
loope
(bad)
mov
movs
or
jmp
mov
or
mov
push
inc
int
add
add
mov
stos
cld
and
jbe
push
test
dec
add
dec
push
adc
mov
loop
xchg
xor
adc
sbb
dec
iret
clc
sti
sub
les
scas
mov
push
jmp
mov
xchg
repz
jmp
and
push
jne
sti
inc
idiv
jbe
mov
jb
jmp
mov
and
lahf
iret
in
fxch
inc
adc
xchg
les
daa
sbb
fdivr
mov
pop
dec
jmp
sub
int3
dec
in
(bad)
cmc
addr16
hlt
call
mov
dec
adc
add
add
mov
pop
nop
ret
in
lods
sbb
int
xchg
or
mov
mov
xor
and
cdq
xchg
lea
scas
inc
fisubr
and
cdq
mov
xchg
jl
jl
cmp
scas
mov
mov
pop
add
xchg
inc
add
lds
hlt
arpl
ror
into
stc
pop
cmc
xor
push
ins
jbe
xchg
into
inc
cmc
dec
and
les
retf
fs
inc
pop
neg
fisttp
jnp
mov
iret
and
std
inc
repz
xor
nop
pop
push
and
cdq
add
add
sar
dec
push
mov
pop
push
xor
ins
push
and
or
inc
adc
xor
arpl
or
push
shl
mov
inc
mov
lds
lods
popf
xchg
leave
sub
in
mov
fistp
jb
outs
push
(bad)
cld
(bad)
mov
push
push
jnp
push
inc
push
iret
int3
pushf
hlt
push
int
xchg
or
mov
add
mov
xor
mov
mov
jmp
push
add
sbb
ins
iret
mov
scas
pop
and
xchg
dec
rcr
retf
cld
cmp
bound
add
pop
aas
bnd
leave
ins
pop
or
dec
dec
mov
ret
pop
push
cmp
dec
repnz
aad
or
add
sbb
sbb
xor
jecxz
shl
push
div
les
mov
xchg
aad
pop
repnz
lahf
cmp
iret
movs
addr16
je
and
adc
sti
mov
rcl
push
inc
cld
inc
or
inc
(bad)
stos
daa
push
stos
in
stos
mov
lods
retf
inc
test
cdq
or
mov
int
inc
sti
mov
fstp
shr
adc
or
adc
mov
jp
repnz
sub
dec
mov
and
dec
popf
push
cli
xor
jne
cmps
inc
lea
pushf
pop
fld
xor
mov
mov
add
sahf
adc
and
add
(bad)
cmps
cdq
movs
imul
js
je
fcomp
mov
ja
adc
push
jbe
mov
out
cwde
xor
and
add
sahf
cmp
mov
lea
add
sub
sti
jp
sub
and
repnz
cli
(bad)
nop
aad
pop
ja
sbb
adc
leave
dec
lock
loope
jmp
cmp
movs
outs
or
ret
fdiv
ja
push
cli
mov
enter
in
(bad)
dec
in
mov
into
add
rol
rcl
movs
sbb
add
or
jne
sub
adc
loop
loope
and
cmps
fisttp
jo
les
mov
shr
mov
lods
aad
mov
fcmovnbe
add
arpl
sub
mov
movs
push
retf
emms
sub
push
jg
mov
popa
mov
and
pop
clc
sar
dec
push
dec
sbb
sar
xchg
in
inc
out
arpl
imul
pop
adc
fstp
mov
cld
mov
dec
in
sub
shl
mov
cmps
mov
(bad)
mov
mov
mov
fld
xor
adc
test
jp
fidivr
sub
cmp
push
ds
mov
in
cmps
sbb
and
bound
and
xlat
sbb
nop
dec
and
pop
dec
pop
(bad)
lods
popf
mov
sbb
enter
dec
push
dec
dec
shl
and
inc
stos
and
inc
sti
push
push
xor
sub
stos
daa
or
xchg
adc
std
dec
jnp
pop
arpl
prefetchwt1
push
inc
push
jge
enter
clc
push
sbb
in
dec
xor
rcl
adc
jle
jmp
push
cmps
jbe
dec
or
pop
out
sbb
mov
sti
ds
sbb
or
stc
jecxz
in
push
call
jmp
mov
push
xchg
mov
adc
jge
loop
(bad)
mov
add
mov
(bad)
jb
jno
loope
ret
popf
adc
xchg
jle
int
sahf
sbb
aas
movs
adc
int3
jle
xor
inc
mov
xor
and
add
dec
cmp
out
jmp
dec
add
rcr
add
nop
lods
ds
push
loope
xchg
leave
jecxz
adc
sbb
retf
push
xor
and
mov
ss
fild
sbb
jo
repnz
lods
sub
pop
jl
in
out
aaa
add
dec
cmps
inc
mov
pop
pusha
cmps
(bad)
lahf
inc
repnz
dec
sbb
push
leave
inc
sub
adc
add
ins
cmc
pop
fdiv
loop
aaa
cli
jns
push
xchg
mov
pop
iret
mov
mov
repnz
lea
test
sahf
pop
(bad)
sti
mov
pop
retf
call
mov
gs
div
xor
sub
mov
mov
xor
scas
popa
mov
dec
xchg
add
hlt
dec
mov
sub
xor
cdq
push
xchg
and
bound
xchg
pop
or
pop
fcomp
fwait
jnp
in
mul
cmp
mov
xchg
sbb
cli
xchg
ss
and
test
sub
ret
repz
push
cmp
sbb
pop
shr
jecxz
ss
rol
cmps
inc
xchg
sub
push
iret
push
mov
mov
repnz
mov
jge
and
cmp
movs
iret
movs
add
outs
mov
xor
jge
adc
jg
inc
sub
jmp
cmp
jge
enter
sbb
xor
cmp
sub
shl
ds
in
dec
nop
bound
gs
add
mov
pop
and
mov
sbb
inc
test
add
imul
adc
xchg
ror
cmps
push
fimul
or
sbb
push
mov
jg
cld
jnp
jecxz
jb
and
ds
loope
hlt
pop
jbe
xchg
inc
sub
xor
xor
cwde
repnz
pop
mov
dec
sbb
sbb
mov
fisttp
inc
mov
mov
stos
add
inc
pop
inc
test
lahf
mov
cdq
sti
add
in
jecxz
or
jae
push
jmp
(bad)
stos
(bad)
movs
icebp
fadd
push
call
mov
xchg
push
sbb
cmp
jmp
fistp
shl
mov
pop
dec
(bad)
mov
push
jmp
sahf
mov
cmp
mov
push
mov
jmp
mov
lods
sahf
cmp
mov
pusha
jl
(bad)
mov
mov
mov
mov
or
ret
inc
div
inc
and
movs
inc
jg
dec
push
push
xchg
and
movs
test
movs
push
sbb
mov
mov
pop
dec
repnz
xchg
push
imul
test
out
rcl
xchg
sbb
dec
pop
or
inc
mov
rcr
movs
xor
bound
sahf
cmp
jmp
test
jmp
gs
jmp
pop
mov
js
cmps
lahf
xchg
dec
or
mov
imul
leave
shl
out
pop
push
push
adc
lds
leave
aad
fcomp
(bad)
mov
movs
pop
shl
jne
repz
jecxz
cmp
jl
push
xchg
adc
aam
mov
dec
das
cmp
jg
mov
push
push
(bad)
push
mov
scas
call
jl
lock
jmp
sub
inc
push
ret
mov
cmc
imul
cli
lock
dec
cmps
ror
fidivr
retf
into
test
repz
mov
mov
in
rcr
neg
pushw
and
out
push
sbb
push
mov
push
sbb
pop
dec
mov
repz
inc
mov
dec
outs
jl
adc
rol
inc
jno
jp
mov
ficom
xchg
aam
push
push
xor
fisttp
call
xchg
call
adc
mov
sbb
push
xor
push
mov
ss
out
jne
in
or
fsubr
and
(bad)
mov
jmp
or
or
cmp
jmp
scas
jmp
xchg
push
mov
sub
cdq
pop
mov
mov
add
cli
add
ins
retf
jl
repnz
rcl
inc
push
push
add
aad
es
cdq
cmp
call
loope
pop
loopne
inc
leave
jmp
mov
inc
lea
inc
cmp
int
pusha
dec
mov
xchg
xor
cmp
jg
jo
inc
mov
xchg
retf
sub
ret
sub
push
lahf
and
sub
repz
loope
xor
retf
retf
xchg
outs
in
call
sub
jl
or
push
int3
shl
pop
movs
lods
enter
mov
out
push
jno
push
rcl
into
dec
imul
xchg
not
js
ss
pop
jno
add
std
mov
fdiv
jmp
xchg
push
cdq
push
push
sbb
push
or
lds
sbb
mov
int
inc
cs
adc
xor
pand
cli
(bad)
enter
mov
cmps
mov
cmp
sub
jne
icebp
dec
scas
(bad)
in
arpl
pop
imul
or
add
test
sbb
call
xlat
std
pop
jmp
cwde
push
arpl
sub
inc
sbb
dec
mov
leave
dec
jmp
cld
sti
xor
mov
push
test
pop
or
jo
mov
rcl
loopne
lahf
clc
xor
mov
jg
mov
aad
cmc
adc
(bad)
and
cmps
inc
mov
sbb
dec
dec
out
int3
icebp
ret
sub
ins
cmp
xor
adc
pop
cmp
lock
sub
xor
mov
push
fidiv
push
cmp
test
inc
push
sbb
xor
popf
push
es
call
xor
movs
ds
in
xor
jb
or
xchg
push
jge
dec
sqrtps
popa
mov
pushf
stc
nop
or
push
rcr
pop
mov
xlat
loopne
stos
and
inc
sbb
jno
cmps
mov
movs
test
cld
sbb
mov
sub
adc
jge
outs
dec
dec
or
cwde
aam
pusha
adc
leave
mov
jecxz
sti
pop
scas
jge
out
lock
sbb
aad
push
mov
clc
inc
push
pop
mov
or
xchg
pop
sub
popf
inc
push
ret
jnp
cmps
xlat
mov
dec
dec
mov
je
jmp
and
(bad)
adc
pop
inc
je
nop
mov
in
push
adc
mov
adc
mov
addr16
mov
cmp
add
movs
aas
addr16
jge
mov
cmp
aam
repz
cmp
loopne
lock
out
aam
shl
call
imul
sub
fwait
test
inc
add
fist
ss
imul
inc
xchg
cdq
iret
sbb
xchg
iret
mov
cs
stos
add
add
jl
sbb
call
push
or
mov
and
jmp
or
jno
cmp
icebp
mov
icebp
or
add
rcl
cli
(bad)
lods
scas
call
jge
sbb
sbb
or
test
aad
sub
aam
pop
pushf
dec
and
sbb
xor
jmp
inc
punpckldq
sub
je
mov
inc
add
out
push
lahf
sbb
nop
scas
jmp
push
inc
sub
push
xor
push
adc
pop
ror
sub
xchg
cmp
shr
gs
cmp
or
xchg
jmp
sbb
xchg
shl
cdq
scas
out
pop
and
jno
iret
push
jp
popa
and
push
sbb
aad
cld
mov
call
push
push
js
inc
and
test
cld
push
(bad)
cmp
das
mov
cmps
(bad)
loop
(bad)
retf
mov
mov
js
add
push
daa
mov
jl
in
rcl
mov
movs
imul
sub
call
add
(bad)
push
in
mov
mov
jmp
adc
addr16
xchg
sahf
and
leave
sub
or
inc
jecxz
inc
cmps
dec
cmp
mov
lods
xchg
repnz
sub
push
cli
(bad)
push
and
jnp
(bad)
mov
xor
mov
inc
arpl
jecxz
dec
imul
pop
call
rcr
inc
popf
ins
and
enter
mov
and
sub
test
push
pop
in
mov
mov
xor
shl
imul
int
cli
in
xchg
inc
xchg
mov
pop
pop
cmps
jmp
adc
and
mov
dec
cs
pusha
jmp
ret
icebp
movs
inc
mov
pusha
int3
or
hlt
cli
jno
mov
pop
cmc
sbb
repz
ins
mov
clc
dec
cmc
or
dec
dec
dec
lods
sub
cmp
call
push
ffreep
aad
and
xor
dec
and
mov
mov
idiv
jle
in
cmp
fsub
xor
fidiv
cmp
add
xor
pop
cmp
jae
xchg
pop
out
adc
shl
movs
rcl
mov
xchg
mov
mov
(bad)
fcomp
int
imul
mov
adc
push
fbstp
hlt
adc
ins
in
scas
stc
inc
jo
push
or
(bad)
push
pushf
jmp
adc
sub
or
mov
inc
dec
xor
or
adc
jo
add
add
in
je
xor
cs
test
add
repnz
fcmovnbe
xchg
push
adc
enter
cmp
inc
push
pusha
scas
or
std
mov
imul
xchg
(bad)
retf
(bad)
push
pop
cmps
push
(bad)
ror
test
inc
push
adc
cmps
dec
dec
mul
push
push
and
mov
jns
mov
dec
hlt
not
in
mov
repnz
inc
call
daa
mov
xchg
in
push
inc
mov
loopne
sub
adc
add
xchg
xor
pop
inc
mov
sbb
movs
int
ror
and
aad
or
(bad)
call
pop
dec
mov
and
pop
iret
cmps
xchg
rol
xchg
aas
loop
ret
mov
into
sbb
icebp
add
and
lods
push
dec
sbb
jno
push
daa
call
std
xchg
xchg
add
hlt
fwait
(bad)
pop
jmp
push
(bad)
jmp
ror
add
fisttp
daa
pusha
jo
je
lods
jno
xchg
test
pop
pop
jecxz
jne
xchg
xchg
jo
pop
pop
jno
pop
(bad)
(bad)
xchg
cmp
dec
and
loopne
pop
jp
mov
and
ret
lods
leave
aad
cld
or
cmps
daa
dec
push
jecxz
sar
add
mov
cmp
xor
call
leave
pop
mov
cmp
sbb
scas
stos
xchg
aaa
inc
xor
push
sub
xchg
jnp
outs
sub
arpl
out
sbb
mov
setns
pop
lahf
add
leave
(bad)
int
pop
push
xor
mov
aas
bound
(bad)
push
dec
mov
lods
xchg
cmp
in
test
dec
mov
pop
inc
mov
sub
xor
sahf
cmp
and
sbb
fmul
lock
addr16
out
mov
or
push
cmp
push
nop
push
ror
mov
adc
mov
mov
mov
pop
in
jg
hlt
das
arpl
and
ror
hlt
and
ds
out
xchg
div
jmp
pop
xchg
inc
dec
sahf
add
sub
call
mov
popf
retf
pop
mov
mov
dec
stos
pop
movs
xchg
pop
nop
movs
sub
xchg
out
push
fldlg2
dec
sub
popf
xchg
pop
mov
pop
sub
adc
push
loope
sub
mov
lods
pop
pop
dec
jno
xor
stos
or
lea
cmp
lahf
pop
jmp
jb
leave
out
mov
test
(bad)
(bad)
mov
cwde
loop
int3
mov
je
in
mov
out
mov
mov
mov
add
mov
push
mov
and
outs
pop
(bad)
xor
jnp
xor
retf
int3
or
xlat
xor
fdiv
enter
cmp
jp
loope
lock
xlat
cmp
arpl
aad
inc
push
pop
dec
mov
jle
scas
mov
jle
dec
repz
movs
outs
por
test
out
mov
add
push
jecxz
sub
dec
fstp
test
xchg
scas
dec
push
push
fidivr
(bad)
sbb
dec
pop
push
bound
and
ret
mov
jne
jbe
rcr
mov
test
xchg
test
jnp
ret
popf
addr16
(bad)
mov
dec
pop
ror
push
push
rol
ins
outs
sub
xchg
dec
push
jecxz
(bad)
dec
and
or
cdq
scas
adc
or
mov
mov
(bad)
mov
xchg
push
adc
cmp
fnsave
clc
pop
add
test
push
xor
je
adc
push
xchg
ins
jmp
mov
mov
push
ja
add
or
loopne
enter
push
jle
or
and
loopne
and
push
retf
and
iret
and
mov
imul
jmp
fdiv
hlt
mov
sbb
lods
push
push
ins
aam
enter
push
or
sahf
arpl
sar
sub
jno
mov
dec
hlt
xor
mov
cdq
loop
fsubr
cmp
dec
push
sbb
mov
stc
hlt
and
fstp
out
frstor
dec
xor
push
mov
test
xchg
xor
lds
and
jg
(bad)
pushf
pop
outs
ins
cmp
jnp
xor
push
xchg
jno
cmp
mov
arpl
xchg
ja
scas
cwde
or
imul
mov
ins
jl
iret
outs
sub
pop
cmp
push
mov
mov
test
retf
in
bound
pop
imul
add
push
ror
leave
leave
mov
test
push
mov
test
inc
xor
push
dec
xchg
inc
mov
pop
xor
jne
add
dec
loope
or
push
ficomp
imul
out
ret
aad
div
sub
leave
and
movs
call
inc
popf
es
lahf
jb
lahf
and
push
pop
es
xor
pop
sar
xchg
imul
jne
es
in
jbe
outs
movs
shl
jb
cmp
and
push
movs
not
sbb
or
xchg
dec
xchg
jns
ja
xchg
jb
aam
(bad)
cmp
mov
sub
call
push
in
dec
in
inc
add
add
popf
cmp
adc
ficomp
ja
cli
enter
aam
or
mov
fisubr
sub
and
test
push
ins
pop
sar
mov
push
xor
or
sub
in
cmp
f2xm1
push
xchg
stos
xor
cs
sahf
inc
push
inc
mov
loop
cmp
xor
cmp
hlt
jmp
stc
pop
jb
mov
stc
adc
inc
dec
test
into
rcl
aam
cmp
daa
sub
xor
inc
ins
ds
adc
popa
fild
rcpps
xor
test
add
div
sub
push
cmps
and
dec
adc
sbb
enter
jp
mov
ss
test
sub
mov
stos
imul
jmp
shl
outs
popa
sahf
popa
mov
push
mov
xchg
push
xlat
mov
lock
call
retf
push
arpl
xor
sbb
xor
push
xor
ins
sub
mov
call
add
mov
jnp
cmp
push
test
jne
sbb
in
inc
jns
pop
inc
dec
xchg
dec
inc
ja
mov
sbb
int3
rcl
aas
jmp
movs
scas
jp
push
xchg
movs
dec
mov
push
dec
cs
add
js
nop
fucomip
xchg
mov
fst
fcom
jle
xor
in
sbb
mov
add
stc
jl
aad
sahf
test
jne
mov
jae
aas
sub
cmc
imul
repnz
dec
movs
xchg
sbb
mov
fnstcw
fldcw
push
inc
icebp
push
jecxz
mov
icebp
jmp
xchg
ret
cmps
enter
scas
jg
inc
scas
push
cmp
jmp
sub
sub
gs
arpl
mov
in
fisttp
aad
inc
leavew
sub
rcr
es
jecxz
call
lock
add
cmp
xchg
add
ss
data16
mov
dec
pop
(bad)
cmp
xchg
(bad)
and
and
ja
pop
nop
mov
xor
mov
out
jae
daa
test
cdq
mov
sub
imul
addr16
push
push
sub
xchg
xor
sahf
sahf
mov
retf
and
inc
movs
push
push
cli
dec
mov
dec
(bad)
cmps
mov
mov
outs
push
xor
call
lods
add
rcl
int3
(bad)
cmp
adc
loope
std
pop
popf
sub
mov
xchg
and
xchg
add
sub
push
sub
mov
movs
xchg
das
push
pop
mov
or
jecxz
in
push
mov
ins
mov
enter
push
xlat
(bad)
popf
jg
inc
jnp
js
push
dec
lods
cmp
xor
imul
jl
in
fld
and
cmps
stos
dec
fisubr
and
jmp
sbb
push
(bad)
mov
imul
outs
and
movs
sbb
loop
ror
or
ror
jbe
or
aad
cmp
xor
aam
test
xchg
bndldx
jbe
xchg
jg
mov
mov
jno
iret
xor
je
imul
lahf
les
mov
ret
and
inc
lahf
popa
jmp
fbld
movs
dec
cmc
fcomp
or
dec
ds
and
mov
jb
xor
mov
loope
ins
pusha
inc
push
iret
mov
cs
bound
loope
add
inc
out
pop
(bad)
xchg
(bad)
retf
adc
mov
popf
test
imul
in
pop
or
inc
add
mov
test
xor
and
push
ins
mov
pop
(bad)
fsubr
push
mov
int3
ficom
and
pop
lock
add
shr
es
mov
cdq
ds
js
mov
lods
mov
stos
fcmovu
ins
(bad)
shr
sub
aaa
ins
bound
cmp
inc
(bad)
mov
add
out
imul
mul
cmp
sub
sub
lahf
xchg
or
and
shl
or
dec
test
ret
shl
push
sub
leave
xor
fs
pop
mov
inc
push
mov
inc
sub
mov
pop
shl
arpl
imul
inc
cs
iret
or
(bad)
out
pop
add
cld
cld
jmp
aas
jmp
stos
iret
pop
push
adc
and
lea
xor
mov
add
xor
and
rcr
inc
jl
add
aaa
dec
sbb
fwait
jmp
jns
jo
xchg
imul
inc
push
loop
push
es
movs
lea
xchg
dec
pop
adc
xchg
aad
mov
mov
dec
xchg
fs
mov
xchg
mov
inc
or
rcr
cmp
lea
movs
aaa
push
pop
repnz
add
test
mov
and
xor
scas
movs
sub
jae
ds
and
sub
dec
ror
xor
add
jo
inc
call
cmc
sbb
mov
int
leave
dec
sub
pop
cli
stc
and
push
sbb
das
outs
jge
imul
push
pusha
in
jns
outs
jnp
call
std
xor
xchg
mov
fcomp
cmps
xchg
mov
pop
dec
loope
or
stos
movs
xchg
add
sub
mov
jae
jnp
(bad)
sbb
idiv
(bad)
(bad)
mov
scas
repnz
arpl
cmps
xchg
enter
sbb
hlt
jae
ja
out
jns
sbb
push
push
(bad)
shl
fiadd
sahf
jp
mov
lods
sbb
xlat
and
test
out
jg
cdq
mov
aaa
popa
(bad)
xor
xor
cli
dec
cmp
ja
inc
sbb
sub
push
sub
jo
out
jnp
call
sbb
int3
mov
ja
inc
mov
dec
pop
pop
out
fcmovu
xchg
dec
cmp
jmp
js
aam
(bad)
into
mov
push
sub
test
(bad)
int3
popa
mov
(bad)
test
push
test
ins
add
add
jp
in
pop
xlat
mov
jmp
mov
lea
and
sub
adc
lds
or
lods
sub
ins
jge
jg
test
aam
or
bound
mov
pop
add
lahf
pusha
test
loopne
jae
xor
sub
cmps
setg
test
sbb
sbb
mov
call
int
(bad)
pop
pop
mov
stos
data16
fimul
enter
push
inc
leave
adc
push
add
stc
jecxz
ss
fwait
popf
mov
xor
cld
mov
clc
mul
out
int
mov
js
xchg
stc
pusha
jp
cmp
xor
pop
shr
inc
lea
xchg
outs
mov
dec
movs
mov
push
sbb
mov
in
mov
rol
push
xchg
and
xchg
clc
mov
sub
sub
xor
scas
and
dec
inc
mov
inc
push
imul
sar
push
push
loope
xchg
clc
jp
pop
and
(bad)
pop
dec
pop
call
retf
adc
and
popf
data16
shl
cld
bnd
sbb
adc
jno
add
data16
add
movs
xchg
cmp
xor
repz
mov
retf
cmps
mov
fsubr
retf
int3
lea
inc
lds
sub
jne
and
mov
xor
xor
mov
add
pushf
jne
mov
and
cmc
xor
or
mov
xor
add
aaa
sbb
in
push
adc
dec
jp
daa
mov
imul
sub
jns
fdivr
daa
pop
push
(bad)
dec
jae
push
inc
cmp
div
mov
repnz
push
dec
push
or
push
out
adc
push
add
lods
mov
adc
cmp
loopne
inc
dec
and
gs
arpl
pop
popf
dec
mov
test
push
lods
dec
add
xchg
ror
sbb
inc
pop
push
movs
cmp
aam
pop
xor
push
shl
push
inc
bound
inc
movs
bound
and
fsub
mov
xor
push
out
adc
push
aam
int
pop
cld
sbb
add
push
push
xor
imul
xchg
add
iret
fisttp
mov
mov
push
jmp
jns
std
(bad)
mov
inc
mov
xor
enter
or
repz
shl
cmc
jmp
(bad)
lock
aas
jmp
iret
mov
hlt
sbb
push
jecxz
ins
dec
stos
neg
pop
jmp
mov
pop
fdivr
xchg
or
mov
icebp
nop
mov
int
xor
fnstenv
cmps
mov
adc
test
push
pop
inc
mov
jecxz
cmp
pop
sbb
call
push
inc
fisttp
push
fwait
sahf
push
repz
jle
fimul
fisub
pop
aaa
pop
inc
add
lahf
jmp
and
jg
mov
loop
xchg
add
adc
and
(bad)
sti
jmp
jae
jp
sub
pop
sahf
or
add
cmp
aas
mov
leave
inc
(bad)
push
call
iret
repz
and
inc
cli
pop
inc
mov
inc
dec
and
cld
mov
xor
push
sar
pop
mov
mov
lea
mov
mov
std
cmp
out
(bad)
(bad)
xchg
scas
inc
push
fdiv
aam
inc
mov
mov
or
ins
jae
jmp
adc
dec
cmp
imul
shl
mov
(bad)
cld
push
inc
push
aas
fs
dec
xchg
dec
pop
imul
add
dec
lods
dec
cmc
push
mov
call
inc
stos
cmp
jl
pop
les
mov
cmp
cmp
sub
mov
mov
cmp
sbb
dec
in
jmp
xlat
push
add
mov
jmp
call
sub
ds
aas
in
je
jecxz
aad
adc
test
push
mov
xchg
push
sbb
inc
cs
stc
mov
enter
dec
push
push
push
scas
cmovg
pop
das
in
aaa
call
std
pop
cmp
(bad)
jne
dec
imul
mov
mov
cmp
dec
sub
jne
push
lahf
outs
pop
jne
and
xchg
push
cli
mov
scas
pop
cld
push
cmps
mov
xchg
dec
imul
jae
cdq
das
push
pop
stos
and
adc
add
ret
repz
shl
mov
jle
cmp
push
loopne
pop
dec
add
add
lods
hlt
not
aam
mov
pop
daa
dec
mov
(bad)
stos
jg
retf
test
das
push
cmp
es
aaa
jnp
and
mov
mov
pop
cs
cwde
rol
stc
jg
cld
sbb
mov
lea
ins
and
nop
cmps
imul
adc
iret
adc
pop
mov
cmp
imul
xchg
cmp
das
mov
push
(bad)
es
loop
(bad)
jmp
xchg
and
bound
(bad)
fsubr
ds
push
mov
mov
mov
rcl
add
les
sub
mov
xor
jnp
xchg
out
mov
inc
push
loope
test
and
mov
lods
xor
add
loope
inc
xchg
and
lds
leave
ds
imul
ja
xchg
jo
mov
gs
cmp
mov
iret
repz
add
imul
xchg
mov
dec
cmp
stos
jbe
cmps
dec
sub
mov
mov
not
pop
inc
or
pop
xor
lea
cli
repz
cmps
dec
js
xchg
mov
jmp
sti
push
aas
iret
ror
sbb
pop
push
cmp
ret
xchg
rcl
out
rcr
mov
inc
push
sbb
add
xchg
mov
mov
push
(bad)
not
cmp
stos
add
(bad)
cli
dec
and
mov
mov
popf
aas
or
(bad)
dec
pop
push
xor
dec
dec
inc
or
and
adc
vaddsubps
shl
mov
pop
popa
and
scas
cmps
mov
mov
retf
and
dec
xchg
ins
jl
dec
fidivr
push
and
call
add
mov
test
adc
(bad)
adc
or
inc
je
out
test
int
jge
push
dec
test
gs
sub
xchg
pop
dec
inc
pop
dec
push
inc
mov
xchg
loope
adc
cmp
mov
das
fcmovnbe
cmp
push
or
rcl
dec
shl
or
test
mov
xchg
cmp
outs
arpl
jmp
out
fsubr
cmp
in
dec
push
(bad)
adc
jge
push
in
jmp
push
jmp
cmp
mov
adc
lods
xor
inc
and
xchg
or
in
nop
xor
lahf
push
in
dec
xchg
push
pop
mov
repz
hlt
pop
arpl
movs
iret
aas
fs
stc
test
in
dec
dec
adc
push
out
fiadd
enter
fcmovb
je
ret
mov
lahf
dec
movs
cdq
retf
push
cmps
in
loopne
mov
lds
jle
pop
call
out
pop
push
add
adc
dec
xor
xor
or
out
in
dec
lods
mov
cwde
mov
(bad)
iret
or
sar
idiv
pop
repnz
stc
hlt
pop
sti
adc
mov
aad
lock
rol
push
ficom
lea
push
add
movs
sub
and
xchg
int
sbb
sbb
add
out
inc
repz
scas
inc
jge
int
jg
leave
das
pop
push
xor
popf
add
mov
xchg
cmps
mov
xor
cmp
rcl
push
push
or
xchg
dec
cmp
xor
sub
pushf
sar
sub
sbb
gs
js
xor
iret
retf
sbb
inc
pop
mov
out
adc
cmp
pusha
icebp
call
mov
test
(bad)
retf
jecxz
movs
adc
(bad)
cmp
leave
add
scas
jnp
push
jb
jo
ins
sub
cmp
clc
dec
adc
int3
out
retf
inc
pop
jl
adc
sub
clc
mov
dec
mov
jg
fistp
adc
movs
nop
int
mov
cld
push
xchg
sub
dec
es
sbb
jb
(bad)
add
aas
adc
cmp
cmp
sahf
pop
ins
mov
mov
add
mov
adc
addr16
stos
lock
add
jg
div
mov
inc
mov
mov
fcomp
test
mov
or
test
loop
fbstp
loope
dec
sahf
(bad)
out
pop
ja
inc
and
jnp
test
gs
pop
icebp
lods
mov
fs
(bad)
pushf
int
mov
mov
neg
(bad)
int3
imul
pushf
lock
jmp
std
xchg
ins
daa
in
scas
push
out
in
lds
xor
push
imul
push
pushf
adc
psrad
adc
(bad)
mov
pop
sbb
xor
daa
out
lds
dec
xchg
xor
add
jge
jecxz
adc
call
stos
xor
loopne
jmp
jmp
jb
lea
dec
lods
xor
jmp
rol
test
push
aas
mov
test
scas
scas
repnz
mov
or
jae
xor
sbb
(bad)
pop
ds
cmps
(bad)
mov
cs
push
scas
stos
jecxz
cmp
mov
and
pop
cwde
test
mov
inc
rol
xchg
xchg
sbb
inc
xor
cmp
fwait
in
call
add
sub
or
cmps
inc
jp
jb
fsubr
movs
icebp
scas
xchg
movs
mov
cmp
bnd
sbb
hlt
mov
dec
cmp
ror
and
jne
lods
shr
push
fwait
pop
mov
jg
dec
ins
fst
mov
stos
sbb
inc
push
mov
js
sahf
sbb
arpl
mov
xchg
lock
mov
pop
sbb
fimul
push
mov
jecxz
or
(bad)
fcom
push
int
(bad)
ss
cmps
imul
je
add
jg
mov
mov
test
movs
repz
pop
and
mul
push
call
push
mov
jle
div
xchg
loope
sar
dec
inc
and
add
imul
fcomp
fidiv
sbb
xor
cmp
ja
push
dec
push
inc
push
xor
cmp
les
iret
not
mov
sbb
lock
jnp
mov
shl
test
xchg
xor
es
repz
call
cld
push
and
call
push
push
add
push
mov
pop
sub
xlat
sub
jmp
ins
stos
sub
sub
mov
mov
jp
and
jecxz
je
loope
and
inc
xchg
and
adc
in
daa
and
loop
repz
xor
cmp
arpl
ds
xchg
daa
adc
jnp
repnz
shl
lea
add
pop
xchg
push
(bad)
lock
mov
pop
repz
sti
inc
stos
xor
cmps
mov
mov
test
xchg
(bad)
aaa
mov
and
rcr
mov
stos
jbe
jne
mov
mov
jb
sbb
or
adc
add
out
push
stos
dec
or
sub
xchg
nop
push
pop
pop
cmp
or
pusha
call
dec
clc
ins
loop
jmp
mov
cmp
inc
adc
sbb
sti
mov
and
push
out
hlt
lods
sub
loop
and
add
rcr
fs
pop
cmc
cmp
and
dec
push
sbb
mov
iret
xchg
scas
pop
dec
push
test
push
sub
sbb
xor
mov
sub
daa
dec
aaa
mov
and
out
pop
pop
cmp
test
push
xor
call
add
push
mov
sub
test
jb
sub
ds
icebp
pop
fcomp
aaa
lods
inc
push
dec
mov
les
sub
sahf
rcr
inc
and
loopne
lea
or
inc
pop
dec
sub
xor
or
inc
shl
jle
pop
sbb
movs
gs
pop
sbb
and
sub
das
fisubr
pop
les
loope
sbb
mov
in
outs
sbb
jnp
sub
sti
jnp
pop
xlat
div
sbb
adc
mov
in
retf
inc
inc
ret
sub
mov
mov
fmul
mov
jmp
lea
mov
and
es
scas
(bad)
out
push
aas
mov
inc
pop
xchg
cmp
jg
dec
xchg
inc
test
mov
movs
cmp
or
xchg
scas
and
mov
int
sbb
sti
jp
inc
jne
or
outs
int
mov
mov
add
lea
retf
cld
xchg
repz
cmp
mov
aas
loopne
loopne
xor
idiv
mov
push
inc
and
dec
dec
sbb
mov
out
dec
pop
(bad)
outs
mov
test
push
icebp
mov
stos
inc
aad
in
xor
or
sbb
sbb
daa
mov
dec
mov
movs
lahf
nop
inc
or
rcr
cmp
sahf
sub
pop
stos
dec
pop
dec
push
test
xchg
(bad)
rcr
push
mov
push
ins
cmc
push
jno
(bad)
and
dec
rcl
xor
dec
push
jno
je
sahf
xor
dec
(bad)
and
xchg
sbb
stc
adc
test
and
(bad)
cs
test
call
mov
push
cwde
call
les
aaa
sbb
jg
pop
ins
mov
icebp
jb
shr
sahf
adc
cwde
xchg
repnz
enter
dec
mov
xor
aam
pushw
cmp
fdivr
add
jb
adc
adc
nop
dec
mov
repz
leave
cmp
pop
or
xor
mov
pop
sti
iret
cmps
push
ss
push
inc
pop
fmul
int
pcmpeqw
test
mov
enter
pop
arpl
dec
adc
jecxz
mov
or
jnp
inc
pop
popf
mov
movs
xor
pop
ds
iret
movs
jp
mov
dec
fsub
arpl
xor
cmp
push
cmp
and
fcmovnbe
cmp
mov
cmp
ins
scas
jp
jp
(bad)
lock
inc
(bad)
dec
jmp
push
xchg
lahf
sbb
movs
pop
push
outs
or
jns
ja
sub
mov
cmp
out
jns
xor
outs
test
xor
mov
push
sub
popf
xchg
jmp
xchg
push
pop
xchg
dec
and
cli
cmc
pop
jb
jns
(bad)
out
pop
mov
adc
add
add
retf
sub
jge
pop
inc
xchg
mov
in
xchg
push
scas
je
jo
dec
sbb
push
mov
xor
mov
or
(bad)
pusha
retf
call
or
outs
hlt
sub
add
jecxz
mov
jg
je
stos
movs
bound
or
add
jnp
cmp
cmps
(bad)
push
scas
loope
mov
jo
mov
adc
icebp
jg
inc
outs
shl
jmp
lds
test
fs
cli
inc
scas
outs
idiv
fist
div
call
and
mov
cli
push
in
enter
mul
sti
sbb
xor
xor
push
or
(bad)
cld
push
(bad)
inc
push
mov
ret
mov
shl
ins
jnp
data16
inc
pop
push
cs
cld
and
in
arpl
mov
mov
cmp
sahf
adc
sub
mov
mov
icebp
outs
js
jno
xor
push
lea
mov
aam
aam
add
push
movs
or
fldenv
mov
ss
movs
retf
mov
mov
and
push
push
and
inc
mov
add
add
pusha
add
ret
int3
xor
mov
or
or
das
lock
mov
sbb
xchg
or
mov
test
mov
add
ins
scas
fcompp
adc
out
mov
xchg
ror
fcmovne
sar
xchg
movs
jb
xchg
imul
cmp
test
lods
mul
cmp
stos
xor
jmp
imul
cwde
push
mov
inc
xchg
repz
inc
dec
rcr
sahf
mov
mov
add
push
inc
into
dec
aas
mov
xchg
fwait
mov
jecxz
cmps
pop
cmp
jecxz
popf
gs
push
jmp
inc
xor
mov
add
or
hlt
jecxz
outs
inc
jno
xor
push
mov
sahf
sbb
scas
inc
jnp
jmp
jae
cmp
mov
dec
xchg
adc
pop
in
out
adc
(bad)
push
xor
jp
js
call
addr16
arpl
sub
aas
in
pop
mov
mov
push
lods
add
push
xchg
mov
rol
or
pop
mov
hlt
sbb
mov
test
loopne
ret
rcl
retf
jne
mov
adc
cmc
mov
jmp
stc
sbb
lds
add
or
bound
jo
and
scas
movs
nop
push
or
inc
adc
shr
int
jl
addsubpd
xchg
rol
sub
xor
js
fsub
adc
push
scas
inc
cmp
cs
cmp
inc
daa
in
xor
mov
dec
adc
enter
xchg
rcl
adc
mov
sub
push
pop
int3
mov
adc
in
pop
loope
(bad)
and
sub
mov
sbb
xchg
fisubr
jmp
ficomp
inc
ror
lods
jg
cmp
fild
lods
pushf
add
cli
xchg
sub
jecxz
movs
jle
call
popf
or
or
cmp
(bad)
push
and
adc
xchg
sub
xchg
shl
or
mov
frstor
mov
xchg
push
mov
cmp
jl
push
mov
xchg
add
xor
stos
mov
das
mov
xchg
ins
ins
or
cmp
aad
in
pop
mov
pop
enter
aaa
out
sbb
xchg
outs
adc
(bad)
jecxz
add
cs
jo
add
(bad)
sbb
fisubr
ins
rcr
mov
and
shl
leave
test
outs
xor
mov
loop
lods
call
xor
retf
or
out
xchg
xor
jmp
adc
inc
and
pop
xchg
dec
(bad)
test
adc
je
mov
sbb
inc
dec
xchg
popa
dec
inc
jmp
cmp
call
sbb
fmul
ret
push
into
and
xor
push
or
lahf
rcr
scas
test
ins
adc
mov
enter
jmp
or
sub
sbb
pop
push
sub
(bad)
lea
inc
push
pop
pusha
aam
int
cmps
mov
pop
xchg
mov
sub
and
mov
lds
dec
sbb
cmc
jecxz
dec
jne
mov
sti
arpl
(bad)
sahf
cdq
loope
sti
jg
inc
adc
pop
repz
pop
jg
loop
sbb
or
dec
sbb
(bad)
loop
dec
aad
dec
test
lods
pop
sub
std
add
cmc
call
pushf
push
lods
or
sub
lock
inc
cmp
or
add
rcl
xchg
sbb
iret
and
repnz
pop
cmps
fs
mov
and
retf
or
push
daa
repz
movs
mov
gs
jge
jle
inc
sbb
div
push
sbb
mov
cmp
adc
movs
mov
add
arpl
mov
outs
dec
inc
mov
aam
es
dec
stc
(bad)
mov
popa
(bad)
test
mov
xor
jb
lds
js
adc
pop
mov
sub
lea
or
mov
cmps
mov
shl
jp
ins
jb
popa
xchg
or
pop
pop
int3
arpl
das
stos
adc
test
popa
sub
dec
sbb
dec
mov
inc
sub
stos
pop
xchg
mov
outs
iret
aam
pshufw
inc
pusha
xchg
pop
dec
mov
dec
pop
mov
retf
cld
mov
xor
pop
pop
(bad)
shl
or
mov
xchg
cmps
xchg
dec
mov
out
ss
rol
mov
push
popa
cmc
test
test
aam
sub
lods
jg
int
lods
neg
test
or
and
js
jmp
in
(bad)
jno
fadd
mov
mov
xchg
dec
pop
push
popa
leave
mov
fist
mov
or
pop
xor
sub
xchg
xchg
sbb
inc
movs
sti
data16
jnp
mov
fist
les
ror
mov
daa
push
adc
ror
dec
ins
ret
rcl
test
mov
mov
xchg
aaa
out
fsubr
loop
mov
adc
add
loope
stos
mov
xor
fnsave
mov
stos
mov
jg
js
mov
xchg
ds
jbe
in
outs
sar
push
cmps
xchg
adc
sbb
push
or
or
and
mov
aaa
sahf
cmp
mov
mov
stc
cld
push
inc
push
push
je
mov
fst
cdq
cmc
fistp
xor
and
jg
inc
pop
add
aam
es
and
test
pusha
nop
xchg
aad
pop
mov
loop
inc
xor
out
iret
pop
arpl
retf
xchg
mov
jge
pop
jmp
movs
xchg
push
lock
inc
aad
mov
enter
xchg
ss
mov
push
sbb
jp
jbe
ins
es
push
and
lea
and
movs
paddsw
outs
cmp
(bad)
std
mov
out
fld
fsubr
into
add
test
dec
and
dec
sbb
add
and
xor
out
movs
xchg
repnz
shl
pop
jne
inc
scas
imul
cmps
inc
mov
push
push
dec
shr
adc
and
xchg
lds
push
mov
mov
jne
jge
cmp
inc
xor
pop
mov
je
or
pop
add
adc
jecxz
imul
cmps
cmp
push
fs
mov
adc
jecxz
sbb
add
out
shr
jmp
into
imul
loopne
fldcw
mov
test
adc
iret
dec
jne
aad
das
mov
jo
imul
push
sbb
jnp
sbb
push
popf
and
dec
push
pop
ficomp
add
or
loope
xlat
bound
xor
add
pop
pop
(bad)
std
(bad)
sti
arpl
push
dec
mov
mov
call
pop
cdq
shl
pminsw
not
test
repnz
and
stos
sbb
bnd
outs
jnp
fucomi
mov
clc
stos
jge
push
jmp
mov
or
fwait
jle
xlat
and
out
cli
sbb
and
iret
repz
mov
cmps
out
mov
xchg
test
sti
xchg
ficomp
inc
mov
or
out
(bad)
das
cmps
mov
arpl
mov
mov
sti
fist
cmp
rol
adc
push
arpl
xchg
pushf
mov
or
xchg
xchg
adc
ret
mov
inc
push
add
out
pop
mov
rol
fstp
test
popf
mulps
retf
mov
jge
sbb
jl
or
pop
cwde
ror
xor
nop
inc
arpl
and
mov
js
dec
fisubr
fbstp
ror
sbb
les
dec
stos
sbb
popa
in
enter
int
ret
sbb
retf
test
dec
xchg
push
mov
fsubr
inc
call
sbb
ins
ret
inc
js
imul
sbb
es
sbb
or
(bad)
in
lods
test
(bad)
popf
add
push
pop
cld
fwait
sub
nop
leave
fiadd
xchg
ret
sar
sub
mov
test
enter
retf
cld
mov
xchg
sbb
xchg
sti
js
(bad)
stos
mov
push
jo
xchg
aam
jmp
lods
movq
sub
xor
fdiv
push
xor
iret
mov
bound
pop
scas
scas
cmps
sub
je
mov
xchg
cmps
(bad)
mov
sub
pushf
xor
sbb
retf
lock
jg
hlt
test
sbb
pop
push
pusha
jecxz
dec
test
pop
sbb
test
movs
outs
add
dec
dec
push
sub
jno
repz
bnd
pop
mov
es
dec
in
pop
bound
js
jmp
mov
outs
sub
push
cmc
mov
pop
jg
fxch
or
aaa
movs
dec
inc
int3
jo
ror
sbb
jne
mov
mov
sub
sub
mov
mov
cli
mov
(bad)
fmul
mov
xchg
inc
dec
iret
or
shl
neg
pop
push
push
(bad)
fcmovnb
and
cmp
popa
xor
xchg
movs
xor
xor
mov
mov
in
jmp
retf
add
jg
not
mov
push
inc
and
repnz
sub
cs
mov
mov
aas
ret
push
jo
pop
dec
enter
mov
push
jno
lea
mov
mov
push
inc
(bad)
fild
fcmovu
sti
push
jle
inc
rol
scas
out
mov
dec
repnz
xchg
iret
or
push
sub
hlt
xchg
fistp
mov
adc
pop
ror
cdq
lahf
or
adc
sbb
and
mov
add
dec
sbb
(bad)
loopne
cmc
adc
pop
imul
and
xor
add
sub
add
xchg
cmp
add
xor
mov
fwait
pop
pusha
mov
push
push
loope
push
jp
repz
cmp
mov
sub
inc
fs
dec
test
movs
jge
popf
fcomp
mov
cli
mov
movs
imul
arpl
xchg
pop
push
sbb
pop
call
push
sahf
jge
jb
jb
push
fiadd
xchg
cmp
sbb
cmp
xor
aas
jo
inc
shl
iret
loopne
adc
sbb
push
mov
mov
aas
addr16
jmp
xchg
inc
inc
nop
pop
mov
stc
cmc
mov
jo
dec
dec
xchg
repnz
sahf
sbb
adc
and
sbb
inc
push
test
data16
push
mov
or
inc
cs
jmp
mov
push
sahf
add
rcr
out
mov
test
fwait
js
movs
xchg
movs
mov
cmc
inc
and
pop
movs
push
mov
loop
xchg
push
cmp
add
sti
pop
lods
dec
repnz
sub
shr
pop
sub
add
iret
scas
sub
xchg
pop
mov
mov
imul
push
dec
mov
xor
(bad)
sbb
push
push
lahf
jmp
out
movs
stos
jns
loop
inc
adc
(bad)
inc
adc
cdq
xchg
pop
sbb
cmps
loopne
push
xlat
test
loop
and
xchg
lahf
and
sbb
scas
xchg
dec
ret
sub
pop
in
dec
dec
scas
push
add
jo
arpl
loope
xor
retf
mov
sub
dec
cmp
jecxz
add
scas
movs
pop
dec
and
xor
aaa
loopne
iret
mov
jne
data16
test
addr16
adc
das
(bad)
push
retf
inc
arpl
(bad)
ds
jg
dec
shr
push
adc
call
outs
dec
xchg
sub
repnz
cmp
imul
mov
test
dec
sub
jp
mov
popa
scas
dec
add
xchg
push
ds
rcr
sti
dec
inc
push
mov
scas
enter
lea
and
jne
mov
xor
push
sbb
repnz
push
dec
or
cmps
test
fsub
jle
int3
sbb
int
mov
mov
cmp
hlt
mov
int
mov
mov
lea
xchg
cmp
dec
jl
scas
fiadd
test
push
and
jmp
rol
aad
dec
hlt
jmp
ds
and
cmc
or
jae
inc
pop
adc
outs
bound
mov
cmp
pop
dec
repnz
scas
out
xchg
rol
lea
push
adc
push
cmps
sub
iret
lods
pop
mov
jecxz
js
daa
popf
pusha
retf
sub
sbb
mov
or
shl
out
leave
mov
popa
dec
pop
mov
jg
(bad)
mov
xchg
mov
(bad)
xor
jb
xchg
and
sub
pop
and
push
mov
sub
in
pop
retf
jo
inc
sub
clc
cld
jnp
and
cmp
adc
arpl
jg
lods
push
mov
cmp
outs
mov
faddp
in
scas
cmp
lods
sub
in
cmps
dec
inc
sbb
pop
ins
ja
fwait
or
in
jle
scas
push
mov
xor
jmp
cmps
mov
cmps
add
rcl
in
jl
(bad)
popf
adc
fdivr
cs
leave
cwde
ret
sbb
outs
sub
call
dec
pmullw
daa
push
or
and
pushf
int3
xchg
inc
mov
add
push
add
leave
mov
(bad)
cdq
out
mul
(bad)
out
ss
or
pop
adc
inc
(bad)
mov
sar
nop
pop
stos
mov
iret
xchg
mov
fdivr
cli
int3
xchg
jb
pushf
xchg
fisubr
stos
aam
retf
dec
xchg
ret
aad
rcl
sub
outs
push
inc
or
imul
pop
out
scas
dec
cmp
inc
inc
pop
sahf
add
lock
repz
dec
xchg
mov
stos
daa
pop
ss
push
(bad)
nop
imul
dec
mov
movs
xor
adc
jmp
sub
(bad)
popa
fisub
out
jmp
sbb
in
push
sbb
rol
add
in
add
(bad)
je
(bad)
adc
mov
sub
push
inc
ror
mov
push
cmp
sbb
push
(bad)
jp
neg
aam
xor
stos
imul
test
call
scas
xchg
ficom
outs
or
mov
(bad)
ret
fcmovne
push
or
xor
or
sbb
scas
pop
dec
lods
daa
pop
jecxz
inc
dec
add
jmp
cmps
in
jmp
sub
ret
push
mov
xchg
mov
push
icebp
aam
loope
sub
les
retf
imul
mov
push
push
pop
(bad)
repz
adc
movs
bound
adc
ds
retf
pop
mov
xchg
dec
pop
ds
iret
mov
sub
or
and
pop
call
sbb
xlat
push
sub
shl
bound
sub
jecxz
movs
mov
cli
add
lahf
pop
adc
mov
mov
pop
add
(bad)
bnd
mov
cmp
xchg
push
stos
xor
ja
in
xchg
stc
mov
leave
es
lds
clc
inc
pop
and
mov
movs
bound
mov
cmovno
inc
push
out
dec
sub
daa
dec
or
in
mov
daa
addr16
pushw
repnz
daa
(bad)
daa
fidivr
jae
or
call
mov
arpl
pop
mov
mov
add
push
cs
shr
and
xchg
jmp
clc
inc
pop
fcom
outs
mov
add
cdq
daa
sbb
pushf
into
int3
cmp
push
inc
add
sub
xlat
cmp
jo
mov
movs
cdq
bound
(bad)
jne
mov
mov
cmc
imul
add
dec
dec
outs
push
fldcw
enter
les
add
fwait
push
sub
int
js
loop
cli
pop
cmc
mov
mov
sub
push
pushf
icebp
loope
stc
lock
addr16
sub
ud1
outs
mov
inc
mov
mov
rcl
aam
int
(bad)
scas
xor
add
adc
ret
or
cmp
pop
(bad)
aaa
aas
xlat
fucomi
and
les
pop
mov
push
aas
jecxz
cmc
cmc
mov
outs
pop
jae
aam
rcr
loopne
mov
(bad)
mov
jbe
mov
add
stos
repz
cli
pop
fcomip
push
(bad)
sub
(bad)
dec
lds
dec
cmc
jg
cld
popf
inc
xchg
or
dec
mov
(bad)
cmp
aas
test
lahf
push
dec
xchg
fst
in
inc
stos
cmp
push
pop
inc
pop
jmp
pop
lahf
lock
inc
sub
cld
mov
bound
mov
cs
xor
sub
inc
stos
adc
inc
sbb
movs
fdiv
push
jnp
xchg
jo
clc
(bad)
repz
out
das
push
dec
or
iret
add
push
retf
es
dec
cmp
cmp
mov
repnz
inc
jge
and
lds
and
cmp
loop
fld
into
jg
push
push
es
dec
cmps
retf
cli
and
jecxz
test
mov
mov
les
aam
push
add
mov
add
out
sbb
push
push
xchg
push
jns
pop
xchg
shl
pop
dec
scas
jg
mov
mov
xor
fimul
cmc
jl
mov
les
test
cmp
sub
inc
or
or
movs
and
arpl
pop
mov
out
sub
inc
jecxz
sar
pop
fmul
sbb
lock
repnz
jecxz
dec
iret
in
imul
sub
pop
push
mov
mov
fdiv
sub
pop
dec
popa
mov
mov
mov
addr16
iret
or
pop
icebp
js
in
movs
inc
push
mov
je
rcl
fs
xor
fdivr
mov
test
mov
and
and
add
out
call
cli
mov
arpl
jmp
jne
mov
and
arpl
fist
push
inc
clc
cld
(bad)
jns
push
aad
or
loope
mov
(bad)
pop
bound
iret
fstp
scas
rcr
and
test
add
or
jne
mov
call
fst
push
push
pusha
ins
cld
mov
push
mov
lahf
jo
in
jne
retf
sub
sbb
loop
jo
fadd
data16
inc
(bad)
ficomp
jbe
or
ret
iret
lods
cmp
jb
daa
sbb
idiv
xor
(bad)
sti
adc
add
sbb
imul
scas
xchg
push
aad
push
mov
fs
cmc
popf
pop
cmps
xor
push
jge
add
cmp
ins
loopne
inc
pop
out
imul
aam
mov
push
cld
inc
inc
mov
lahf
iret
in
stos
jecxz
fimul
arpl
sbb
pop
mov
xchg
cmp
add
cmp
idiv
(bad)
popa
test
mov
mov
cmp
sbb
adc
pop
jmp
sub
mov
mov
mov
sub
or
call
xchg
stc
mov
or
cmp
push
adc
lock
aam
shl
jmp
cmps
push
cdq
and
sub
cmps
imul
sti
jb
je
leave
cmps
in
cmp
(bad)
cmp
adc
cmps
adc
enter
cmp
cmps
nop
inc
dec
daa
inc
hlt
xor
xlat
arpl
icebp
mov
imul
dec
or
iret
adc
mov
inc
mov
or
and
adc
add
sub
mov
pusha
push
xor
bound
aad
and
bound
mov
leave
and
int
mov
retf
ss
dec
stos
push
xor
enter
push
add
daa
mov
push
cwde
xchg
dec
sub
add
dec
xor
movs
push
ins
dec
retf
inc
inc
lea
dec
fdiv
sub
movs
and
leave
in
popa
or
loopne
push
mov
sub
addr16
stos
dec
mov
test
test
push
add
repz
pop
and
shl
xor
pop
sar
retf
and
std
cmp
fldcw
mov
push
stos
add
(bad)
cli
mov
in
les
inc
push
or
mov
jne
lods
data16
addr16
jmp
(bad)
lds
(bad)
cmc
mov
sahf
aam
out
int
pop
jecxz
cmc
or
lods
pop
ret
push
mov
scas
imul
xlat
mov
sub
dec
cmps
and
jns
aas
popf
sub
jmp
pop
mov
test
cmps
push
xchg
or
adc
bound
cmp
xor
pop
dec
daa
ja
xchg
add
out
shr
js
mov
(bad)
idiv
or
pop
push
jns
xor
movs
mov
push
shr
lods
cmp
jae
in
pop
retf
sbb
cmp
outs
ins
cmp
or
jmp
jo
scas
out
(bad)
ss
int
sbb
cmps
mov
cld
push
inc
dec
jmp
mov
xchg
add
push
retf
movs
push
shr
int
lea
test
sub
std
lahf
or
mov
pop
inc
scas
or
cmp
mov
int
fmul
mov
bound
std
inc
add
pusha
lahf
cmp
stos
or
adc
xchg
and
or
(bad)
lds
mov
push
call
add
test
cli
push
ds
scas
xchg
stc
cli
sub
repz
push
test
mov
out
adc
mov
test
ret
sbb
add
iret
and
repz
js
sub
or
mov
sbb
or
icebp
jl
inc
cmp
sbb
sbb
xchg
inc
pop
retf
and
cli
fwait
push
sub
lods
mov
cmp
das
(bad)
and
sbb
pop
iret
mov
les
ds
mov
arpl
jmp
cmp
mov
push
retf
sbb
pop
icebp
inc
push
jg
rcl
jns
aam
outs
xor
xor
(bad)
dec
mov
(bad)
pop
popf
jno
mov
pop
pop
out
adc
jle
jno
jb
and
dec
les
adc
lods
movs
xchg
call
and
jae
and
les
mov
mov
mov
or
arpl
and
lods
jmp
call
scas
inc
dec
pusha
adc
in
mov
sub
add
add
sub
stos
mov
clc
shl
mov
push
dec
gs
adc
pop
outs
sbb
mov
push
dec
loopne
jnp
out
in
outs
and
xchg
adc
lds
mov
js
sub
movs
fwait
gs
stc
stos
loop
dec
sbb
adc
in
cli
push
xchg
jl
sbb
stos
mov
retf
mov
push
stos
sbb
sbb
mov
movs
pop
je
(bad)
xor
jns
test
cmp
iret
cld
pop
inc
cmp
rcr
das
outs
imul
and
jg
inc
sbb
pop
push
pop
gs
dec
cdq
popf
dec
test
dec
clc
xchg
inc
sub
or
push
add
cmc
es
dec
push
int3
xchg
shl
retf
es
xchg
outs
leave
xor
stos
mov
push
push
sqrtps
push
pushf
jecxz
cld
mov
or
stos
inc
rcl
mov
inc
mov
cmp
(bad)
lea
inc
adc
adc
or
push
adc
icebp
imul
mov
sub
imul
rcl
pop
xor
(bad)
fcmovnbe
std
mov
shl
rcl
mov
add
cmp
aad
inc
push
pop
sti
dec
test
pop
test
out
das
jnp
(bad)
std
cdq
and
adc
mov
sbb
add
cld
test
xor
hlt
or
or
push
xchg
jp
pop
jmp
mov
movs
pop
fadd
xchg
mov
scas
mov
enter
push
loope
popf
inc
cdq
scas
scas
enter
je
push
jne
sbb
scas
sahf
ds
pop
dec
int
mov
gs
stc
adc
in
cmps
xchg
int3
mov
loope
xor
add
movs
inc
or
iret
mov
ja
mov
and
pusha
sub
cli
aam
stc
shl
outs
outs
jno
hlt
(bad)
int
dec
xchg
push
push
bound
cld
movs
out
xor
leave
and
fwait
lea
out
sar
sub
sti
(bad)
lea
inc
adc
xchg
mov
or
sub
mov
dec
int3
mov
adc
cli
xor
sub
push
mov
xchg
cmp
mov
test
movs
dec
mov
pop
cmp
pop
mov
jl
enter
sub
mov
push
xchg
fs
int
push
mov
shr
je
cli
jnp
mov
clc
jnp
lods
call
sbb
test
add
mov
fdivr
(bad)
in
leavew
push
inc
out
cmps
push
mov
pop
and
movs
sbb
inc
aam
cmp
jecxz
jl
push
cmp
in
bound
rcr
cmp
and
leave
add
in
fld
mov
inc
bound
inc
mov
pop
xchg
into
sbb
in
pop
jbe
mov
fisttp
jmp
dec
inc
dec
add
dec
enter
sub
(bad)
data16
mov
cwde
dec
dec
dec
lea
daa
dec
xor
leave
xor
inc
imul
or
sbb
call
mov
ins
jb
outs
adc
aam
xchg
nop
jo
xor
push
outs
adc
cwde
neg
stc
jns
push
out
outs
mov
adc
ret
and
mov
data16
data16
add
add
ins
rcr
outs
adc
add
push
addr16
das
xor
rcr
scas
add
stc
add
repz
iret
movs
data16
add
es
imul
scas
inc
mov
cmp
aas
(bad)
repz
mov
enter
push
xchg
out
repz
push
push
test
outs
or
push
adc
add
mov
fstp
fldenv
ldmxcsr
cdq
adc
push
rcl
push
fwait
mov
stos
mov
xor
adc
js
in
shr
jmp
push
sar
xchg
jl
stc
pop
div
and
popf
mov
mov
add
mov
push
mov
ins
gs
pop
mov
aas
push
and
cmps
clc
adc
push
sbb
xor
push
mov
in
je
mov
in
icebp
push
adc
cmps
pslld
ss
imul
mov
push
jbe
cld
xor
sub
add
jge
mov
add
cmps
repnz
or
js
in
shr
inc
ja
jb
mov
pop
pop
pop
aas
cs
loopne
jmp
sbb
push
dec
iret
cmps
gs
call
in
ins
add
mov
jbe
imul
dec
add
pop
xor
pop
inc
mov
ins
into
rcr
adc
push
inc
rol
out
xchg
(bad)
(bad)
xchg
cmp
cwde
mov
dec
pop
pop
cdq
mov
call
add
cmp
add
mov
adc
inc
cs
push
cwde
cmps
pop
mov
jp
fbstp
popa
jae
addr16
sub
shr
scas
push
cwde
jb
xor
jne
es
and
push
and
push
xor
xchg
mov
add
cmp
mov
call
xor
push
daa
test
pop
jno
call
in
add
mov
(bad)
sbb
jle
cmp
jno
sbb
lea
jnp
retf
or
fs
test
clc
xor
inc
pop
fild
lods
aaa
stc
xor
jl
adc
in
pop
in
stos
retf
adc
cmp
(bad)
imul
mov
cmp
jb
div
mov
fst
cwde
mov
imul
xor
inc
aam
test
inc
aam
cli
mov
mov
pop
push
adc
dec
lods
test
bound
das
rol
das
xor
push
stos
cmp
bound
(bad)
push
int
js
jp
arpl
arpl
pusha
add
xchg
adc
add
push
dec
ror
movs
xchg
sbb
sbb
and
leave
bound
pop
cmps
mov
jne
imul
mov
jne
jo
xor
cmp
push
push
jmp
mov
mov
fsubr
(bad)
xlat
xor
mov
fs
pop
enter
retf
mov
inc
inc
pop
fmul
(bad)
xchg
mov
ds
cwde
inc
sub
xor
xchg
add
nop
and
daa
retf
adc
mov
dec
mov
mov
packuswb
mov
inc
mov
pop
in
jp
jae
retf
xchg
cmc
pop
(bad)
std
stc
scas
xchg
push
nop
jno
mov
pop
jnp
(bad)
aas
jmp
dec
aas
aad
sbb
lds
push
xlat
add
push
hlt
call
call
repnz
das
pop
sahf
and
shl
loop
dec
out
je
add
fisttp
jecxz
xor
rcl
shr
and
(bad)
mov
sub
mov
sahf
pop
stc
loopne
sub
shl
and
test
and
pop
scas
ds
jl
pop
mov
mov
pop
sub
ror
div
sbb
retf
lds
test
push
push
cli
call
cli
hlt
xor
push
mov
ror
dec
sti
mov
xor
test
or
fwait
(bad)
pop
test
mov
mov
cmps
movs
xor
sbb
inc
out
repz
push
inc
xor
xchg
cdq
bound
pop
in
push
mov
lock
adc
retf
cmp
jae
cmp
repnz
add
rcl
jg
mov
adc
push
sub
loop
sbb
add
mov
mov
cmp
mov
sahf
cmps
mov
stos
jmp
in
mov
mov
in
dec
fadd
imul
retf
sub
scas
lea
adc
inc
clc
into
inc
mov
call
sub
stos
test
rcr
mov
adc
mov
call
aad
loopne
xor
fwait
adc
ret
shl
jg
in
sub
sbb
jo
into
cwde
(bad)
cmps
inc
adc
loop
int
jmp
pop
sbb
rol
sbb
push
retf
add
neg
jbe
ficom
repnz
iret
bnd
mov
movs
lods
mov
stos
mov
push
or
pop
idiv
pop
loope
sub
stos
push
jmp
mov
xchg
push
xchg
inc
fs
iret
in
sub
mov
pop
mov
shl
mov
in
shl
mov
scas
cld
xor
inc
(bad)
mov
sub
nop
cmps
xchg
imul
push
ret
pop
xor
dec
outs
cmp
xchg
or
js
div
ins
test
ret
xor
stc
cmc
and
jmp
pop
mov
push
jle
(bad)
test
je
jecxz
in
inc
pop
add
jmp
add
and
push
inc
xchg
popa
mov
in
ins
add
xchg
xchg
add
add
cmp
add
nop
pop
clc
jno
imul
shl
mov
mov
cmps
(bad)
mov
cmp
stos
push
inc
(bad)
stos
mov
mov
sbb
mov
add
pop
jns
and
jb
xor
movs
xor
repz
cmps
scas
sahf
das
or
aaa
jl
les
(bad)
test
adc
or
ins
aaa
adc
dec
mov
xchg
inc
jecxz
outs
jl
dec
and
mov
mov
push
frstor
mov
jge
pop
add
xor
inc
and
sub
xor
pop
jmp
xchg
sub
in
ss
movs
xor
cmp
stos
adc
test
(bad)
fdiv
mul
fwait
sar
imul
mov
or
jg
dec
pusha
push
cmps
ins
outs
pop
outs
add
xchg
xor
in
add
loope
adc
and
inc
add
xchg
pop
aaa
fs
dec
mov
cwde
lahf
cmp
xchg
js
inc
ins
or
jecxz
loope
and
xor
inc
mov
sar
xor
test
data16
push
xlat
stc
hlt
stos
dec
movs
aaa
xor
clc
ins
int
adc
xor
stos
retf
mov
mov
sub
fistp
inc
mov
sub
adc
imul
cld
jnp
cmp
enter
aas
(bad)
jl
xlat
repnz
xchg
pop
pop
inc
outs
cmps
inc
push
adc
cmp
push
fcom
loop
xor
dec
sbb
ss
pop
adc
pop
cld
jecxz
cdq
sbb
and
sub
mov
cmps
push
inc
or
and
out
push
retf
mov
adc
jl
jmp
adc
and
in
xchg
mov
or
xchg
pop
pop
add
(bad)
xchg
aaa
daa
fsubr
mov
or
dec
inc
movs
cdq
push
mov
pop
adc
sti
jg
xor
pusha
adc
test
out
cmp
out
mov
dec
and
push
xor
jno
sbb
mov
aad
cli
bound
outs
cmps
repz
push
mov
add
inc
or
jno
cli
push
movs
sti
mov
sbb
cmc
mov
scas
scas
or
push
loopne
xchg
mov
aad
dec
pop
icebp
add
popf
loop
mov
lahf
sbb
fidiv
sub
idiv
mov
xor
push
test
std
mov
ret
push
out
xchg
imul
bound
adc
sub
jle
cmc
add
mov
nop
adc
mov
xor
cmp
ret
pop
ins
xor
cmp
xchg
sbb
aam
test
(bad)
mov
test
or
inc
sbb
imul
lea
pop
test
call
push
push
push
movs
lods
mov
outs
out
add
js
fsubp
bound
pop
adc
sahf
xor
cld
(bad)
es
lds
jmp
shl
shr
fwait
es
call
add
mov
dec
jno
pop
aaa
pusha
jge
in
sti
mov
js
cs
sub
push
aad
fs
dec
xchg
sub
pushf
sahf
mov
cdq
scas
es
test
and
adc
ds
mov
adc
xchg
cmp
loope
neg
rol
push
or
xchg
mov
jle
xchg
add
and
leave
cmp
out
inc
not
sbb
fsubr
cdq
fcmovnb
xchg
les
jo
adc
loope
fld
mov
jg
jge
loope
add
hlt
adc
pop
add
xchg
scas
push
xchg
cmp
mov
stos
scas
enter
cmp
add
push
dec
pop
and
adc
lahf
mov
lods
es
mov
mov
lods
and
or
adc
xchg
lds
in
(bad)
retf
mov
or
mov
mov
mov
inc
xor
sub
inc
sahf
in
dec
aad
aaa
xchg
jg
mov
test
inc
adc
addr16
sbb
pop
mov
mov
mov
xchg
aad
out
mov
cmc
push
cmp
cli
repz
(bad)
idiv
jnp
dec
or
xor
rcl
mov
aam
daa
jo
push
iret
ror
fsubrp
pushf
fcmovb
jmp
lahf
jmp
mov
inc
sub
fisttp
lahf
repz
cld
mov
sub
jecxz
xchg
mov
or
inc
(bad)
ins
fcomp
jns
inc
cs
in
gs
neg
push
in
or
test
mov
test
jmp
je
cli
neg
sub
pushf
sbb
test
pop
jno
ret
sbb
sqrtps
mov
movs
shl
push
aad
mov
(bad)
cmp
das
pop
xchg
jns
and
adc
movs
shr
add
xchg
adc
and
push
nop
out
mov
imul
jne
or
xor
dec
or
fisubr
jne
movs
jmp
sub
sbb
mov
fstp
(bad)
test
bound
out
cmc
mov
mov
movs
jmp
xor
mov
mov
dec
adc
xlat
xor
loope
xchg
push
mov
stos
mov
cdq
loopne
and
xchg
inc
jp
test
inc
pop
test
sub
sub
bound
cdq
mov
and
mov
mov
ret
rol
stc
push
xchg
iret
cdq
jmp
xor
push
stos
test
mov
mov
push
inc
mov
jnp
or
in
cmps
stc
xor
push
cmp
push
or
push
test
icebp
sbb
retf
lods
movs
in
ret
jmp
adc
and
int
push
xchg
js
mov
sub
pop
xor
push
ss
add
and
pusha
pop
push
popa
popa
jmp
lds
jmp
mov
iret
pop
cmps
cmps
dec
les
std
mov
stos
sahf
and
shl
outs
mov
inc
pop
(bad)
and
into
xor
mov
mov
sbb
imul
cmps
jmp
iret
adc
push
sbb
rol
imul
mov
fnstcw
jge
or
fs
inc
shr
int
pop
cwde
movs
jecxz
inc
fstp
std
mov
and
cli
scas
lods
loope
(bad)
not
in
out
leave
xor
mov
xchg
(bad)
jmp
scas
fimul
xor
push
lahf
cs
and
rcl
bound
sub
mov
jns
mov
loope
(bad)
aam
outs
and
scas
lock
jno
lock
inc
jns
test
xchg
push
xchg
xchg
(bad)
cmp
test
scas
movs
mov
sub
cmps
scas
mov
test
aad
and
mov
mov
xor
outs
inc
dec
push
pop
int
imul
pushf
push
call
mov
ins
sahf
repnz
retf
sub
mov
mov
push
xchg
cmp
mov
call
ja
loop
xor
sbb
cmps
movs
xchg
mov
xchg
jne
dec
movs
lods
xchg
lods
test
xchg
add
cld
adc
sbb
mov
sub
js
popf
add
mov
inc
xchg
fisttp
push
test
test
dec
int
mov
push
sub
test
in
push
movs
cmc
fmul
jmp
lea
cdq
es
push
sub
aam
dec
jo
call
push
retf
mov
shrd
inc
fidiv
or
jo
jmp
aad
adc
iret
pop
jmp
ins
jno
ror
hlt
movs
sub
pop
aam
jle
or
mov
pop
pop
fdiv
out
cmp
mov
add
push
pusha
pop
inc
aam
test
arpl
cmp
adc
inc
or
pop
xchg
and
add
push
cdq
leave
add
inc
dec
fsubr
pop
or
adc
call
shl
mov
ds
jne
outs
sbb
sti
and
xchg
loope
push
xchg
cmps
add
test
mov
jle
stc
mov
test
adc
dec
loop
push
int
jns
push
cmp
rcl
mov
mov
add
or
repz
sbb
push
les
inc
jl
dec
add
jmp
ret
mov
stc
shl
adc
jmp
and
mov
inc
inc
sbb
(bad)
xchg
pop
push
fcmovb
xchg
pusha
je
mov
loope
(bad)
in
fcomi
adc
jb
mov
movs
int
inc
shl
jo
mov
add
lahf
jmp
inc
data16
das
pop
xchg
or
lods
movs
cmp
(bad)
inc
push
pop
loope
add
call
repnz
ja
adc
push
std
mov
mov
mov
push
lods
xchg
lods
mov
repnz
mov
jmp
pop
lea
bound
add
addr16
fsub
jp
ret
int3
push
cmp
jo
dec
mov
mov
adc
cmp
(bad)
fnop
push
mov
or
mov
ja
add
scas
xor
inc
test
test
inc
adc
mul
inc
fucomi
jecxz
repz
and
cmp
in
jnp
(bad)
(bad)
shr
lea
mov
sbb
sbb
in
mov
push
test
call
lea
push
test
pop
and
mov
fsub
mov
stc
jge
and
call
and
repnz
lods
inc
push
in
jmp
push
rcl
aam
add
sub
cmp
inc
stos
adc
lods
inc
test
lsl
lds
xchg
(bad)
aad
inc
sub
lds
in
hlt
out
mov
stos
push
test
xor
adc
enter
stos
mov
pop
mov
dec
xchg
fimul
sub
jmp
and
or
pop
dec
xchg
inc
retf
add
pop
(bad)
jae
leave
fbstp
add
aad
lea
out
sbb
cmp
lea
stos
or
add
sbb
push
das
and
mov
sub
call
lea
or
pop
cmps
lahf
movs
mov
loopne
add
rcl
inc
arpl
cmp
jp
mov
inc
pop
aad
scas
iret
std
pop
cld
inc
mov
retf
aad
xor
fcom
mov
push
adc
(bad)
xor
xchg
dec
pop
ficom
mov
jno
out
xor
mov
push
add
test
cld
mov
call
jmp
push
and
xchg
sub
test
pop
cmp
and
in
mov
inc
adc
pop
adc
rcl
ror
js
pop
test
retf
jg
iret
sbb
rcr
leave
aad
xchg
xchg
dec
repnz
pop
cmp
movs
dec
retf
adc
lds
adc
inc
add
addr16
cmp
repnz
cmp
pop
sbb
push
cmp
nop
cli
mov
(bad)
mov
mov
lahf
or
and
xchg
or
push
inc
sub
fldenv
dec
nop
sub
cmps
mov
cmp
fidivr
pop
clc
aam
add
ror
test
mov
mov
adc
mov
or
nop
add
mov
adc
cli
jl
arpl
icebp
push
shl
sub
inc
push
dec
mov
(bad)
mov
and
jmp
sbb
repnz
scas
pop
lahf
push
(bad)
in
outs
addr16
and
scas
dec
sti
sub
repnz
push
sti
sub
fwait
adc
(bad)
fwait
and
dec
mov
jle
mov
js
sbb
ss
cmp
cwde
and
mov
shl
xor
scas
fild
aas
outs
sbb
xlat
data16
out
push
int3
mov
loop
mov
aam
adc
or
pop
call
and
cmps
cmc
mov
or
xor
jmp
add
cmp
cmc
test
jmp
mov
push
dec
pop
rep
test
xlat
test
inc
leave
in
sub
fisubr
repz
lahf
repz
ins
outs
sbb
(bad)
ja
pushf
out
arpl
jno
movs
aam
sbb
pop
rcl
inc
and
push
and
mov
push
inc
(bad)
fimul
push
test
pop
pop
into
shld
inc
add
push
lock
mov
mov
rol
sbb
pop
enter
inc
mov
stos
push
fs
cmp
out
mov
lods
xor
pop
repnz
jns
(bad)
in
mov
imul
sbb
sub
loopne
movs
movs
mov
inc
adc
mov
mov
ins
into
fcmovnbe
sub
mov
mov
inc
and
xchg
jns
imul
aam
loope
mov
mov
popa
push
test
stos
loopne
pop
sub
fstp
fsub
sbb
adc
ss
test
push
sbb
ror
sahf
nop
scas
push
aas
test
pop
aad
xor
loope
add
add
push
stos
sbb
aad
ins
adc
add
lods
mov
les
inc
ret
mov
gs
pushf
in
xchg
rcr
ret
push
scas
sbb
push
aam
shl
movs
sub
pop
clc
test
xchg
mov
sub
mov
ror
jb
xor
ret
rcl
sub
test
iret
dec
xor
xchg
sbb
mov
ror
push
ss
dec
mov
daa
(bad)
sub
test
xor
jno
cmps
xchg
(bad)
cmp
jl
cmp
cmp
xor
add
cmps
(bad)
mov
jp
pushf
out
xor
mov
shl
adc
adc
rol
jns
loopne
mov
fcmovnb
inc
ja
into
mov
or
mov
mov
iret
mov
adc
pop
sub
xchg
out
out
xchg
pop
sbb
cmp
bound
(bad)
mov
sub
and
cmp
jno
jmp
and
stc
cld
mov
clc
sbb
rol
push
sbb
sub
and
mov
jnp
(bad)
ror
out
imul
rol
mov
mov
push
lahf
out
push
mov
push
movs
push
rcr
adc
and
push
hlt
(bad)
adc
loopne
add
sub
mov
or
dec
pop
jnp
loopne
jns
sti
sbb
adc
aas
cvtpi2ps
push
add
mov
push
pop
cmp
xor
mov
and
mov
and
stc
mov
test
cmp
push
test
xor
xchg
adc
cmovno
push
or
aaa
pop
movs
add
or
aas
pop
icebp
inc
pop
fmul
aad
aam
int3
xor
ja
or
fcos
add
leave
adc
out
mov
inc
inc
popa
out
scas
sub
in
push
hlt
mov
aas
inc
stc
jne
scas
cwde
stos
add
pop
repnz
fadd
push
in
arpl
push
imul
adc
leave
mov
iret
pop
push
idiv
xchg
jecxz
arpl
adc
js
in
add
pushf
fist
int
(bad)
and
add
mov
scas
mov
shl
(bad)
inc
popa
cmc
neg
dec
pushf
je
sbb
push
lods
sub
jl
add
(bad)
jle
in
std
stos
inc
(bad)
retf
mov
call
ins
adc
push
pop
movs
popf
dec
cmc
in
pop
xlat
fwait
pop
add
cmp
cli
xor
pop
popa
xor
popa
jmp
inc
push
inc
iret
aam
jmp
pop
lods
imul
mov
cmp
push
cld
(bad)
jmp
loopne
and
jecxz
js
sahf
push
xchg
sbb
adc
add
fnstsw
ficomp
pop
ins
ret
jb
or
ret
enter
out
rcl
add
xor
ss
sub
sub
jno
call
pop
pushaw
shl
ja
movs
mov
fs
sub
sub
adc
enter
add
sub
pop
sti
push
cmp
mov
sub
add
pusha
inc
xlat
lock
and
sub
push
movs
dec
popf
push
cmc
add
dec
or
test
stc
xor
add
fcomp
std
ins
pop
mov
mov
sbb
xor
scas
push
adc
(bad)
cmps
cmp
leave
sbb
push
xor
iret
sar
popf
sub
cwde
mov
dec
push
pop
add
sbb
cli
mov
cmp
and
imul
jno
dec
adc
sbb
cmps
int
test
add
bswap
arpl
inc
out
mov
mov
test
and
xlat
jmp
pop
lods
rcl
iret
cmc
not
xor
mov
ret
shl
bnd
cmc
jg
into
popf
push
pop
(bad)
push
test
outs
mov
fidivr
in
les
arpl
inc
dec
push
and
arpl
aam
lods
xchg
das
and
dec
mov
icebp
pushf
pop
leave
mov
mov
inc
xor
add
stc
jns
push
jb
sub
outs
mov
sbb
sbb
nop
add
ror
push
test
or
rcl
imul
lock
adc
out
mov
pop
inc
inc
mov
nop
sub
or
mov
adc
xchg
aaa
xchg
sub
adc
out
mov
repz
add
dec
movs
push
cmc
test
and
comiss
hlt
hlt
call
xchg
and
test
xchg
call
jecxz
aam
xor
inc
adc
test
jmp
adc
(bad)
fwait
push
loop
xchg
sub
cdq
cmp
add
hlt
sub
adc
lods
inc
xor
out
fstp
iret
jmp
xor
ror
sar
int
popf
push
sbb
imul
mov
mov
and
sub
cld
dec
stos
add
sbb
nop
pop
cmps
test
push
pushf
xchg
jbe
inc
pop
xlat
dec
adc
aam
jp
pop
pusha
mov
fidivr
ficomp
push
mov
out
mov
inc
or
push
pop
cmp
adc
fstp
push
(bad)
fdiv
mov
(bad)
mov
sbb
adc
and
xor
fdiv
xor
stos
sub
cmp
xchg
add
xchg
and
mov
ins
fcomp
push
sub
fs
mov
jge
adc
add
stos
jmp
push
das
nop
retf
and
xchg
and
pop
ror
pop
movs
add
adc
cmp
xor
pusha
test
fs
lods
dec
imul
imul
ja
les
and
stos
inc
jo
xor
test
add
mov
mov
pop
mov
lods
push
jae
mov
out
jecxz
out
not
rcr
dec
sub
or
cmps
mov
imul
into
and
push
dec
jp
sahf
xchg
xchg
and
xchg
fimul
jge
xchg
js
adc
test
fcomp
jmp
jae
sbb
out
cmp
push
sub
xlat
test
fwait
lods
or
cmp
imul
dec
push
test
add
sbb
or
fdivr
add
in
sub
mov
xor
stc
loopne
jg
imul
jbe
push
add
add
ffree
xchg
stos
xchg
xor
inc
mov
xchg
in
xor
fwait
jnp
add
fs
sub
jmp
(bad)
stos
dec
icebp
cmps
pop
cs
mov
mov
sbb
push
cld
pop
nop
scas
inc
pop
jle
push
int3
jg
into
and
retf
push
mov
add
ss
dec
scas
mov
js
loope
sub
mov
jle
sub
div
stc
cli
hlt
aaa
mov
mov
movs
ss
cmp
ror
gs
push
and
xchg
and
ins
xor
(bad)
jmp
cmp
mov
sub
sbb
pop
cmps
add
jle
ins
cmp
ds
cdq
inc
aas
cli
pop
jo
sbb
cmp
and
scas
cmp
and
icebp
mov
cmc
adc
out
leave
out
jno
popf
stos
retf
call
pop
jp
ds
mov
or
push
jb
sbb
repz
repz
das
inc
dec
mov
bound
xor
aam
lock
sub
cmp
aas
sbb
inc
mov
out
pop
in
mov
retf
pop
adc
sbb
mov
stc
je
mov
mov
aad
sub
jo
hlt
loope
pmaddwd
dec
repz
int3
xchg
aad
mov
retf
xchg
pop
les
inc
(bad)
push
loopne
ins
push
mov
nop
xor
push
add
sub
mov
lock
and
test
sahf
cmps
in
loope
shr
gs
sbb
cmps
lods
mul
add
jno
scas
cmp
jmp
add
or
jns
mov
fisubr
xchg
mov
pushf
cld
cli
add
push
rcr
pop
test
aam
mov
push
retf
xor
mov
jmp
pop
int
sbb
xchg
lds
push
cmps
aas
aad
xchg
out
dec
loop
adc
xchg
mov
out
add
test
push
xor
and
je
mov
and
sub
shl
ins
add
(bad)
shl
imul
icebp
movs
push
daa
pop
adc
test
or
xchg
jge
mov
out
fild
xor
sbb
push
stos
add
call
or
push
pop
imul
lock
pop
dec
imul
shr
addr16
xor
frstor
pop
fadd
xchg
pop
loop
jbe
or
add
cmps
cmp
xchg
ret
push
ror
sbb
hlt
mov
iret
mov
sti
(bad)
and
xchg
(bad)
push
adc
mov
and
iret
mov
clc
out
ins
ins
jl
loope
nop
mov
mov
outs
out
shl
mov
test
stc
push
sbb
stc
cld
std
dec
cmps
dec
pop
push
xor
(bad)
lahf
sub
dec
pop
in
push
jl
sbb
lods
sub
lods
mov
mov
outs
in
sbb
adc
sub
fbstp
rol
add
mov
imul
cli
xchg
adc
push
push
push
sub
iret
push
and
sbb
lods
or
mov
(bad)
push
int
jge
(bad)
adc
int
dec
push
add
stc
hlt
je
mov
mov
stc
hlt
adc
(bad)
movs
stos
stos
mov
int
adc
dec
dec
mov
mov
cli
pop
pop
pop
lea
push
add
inc
hlt
out
sbb
in
or
add
fwait
jl
cmp
mov
and
push
hlt
adc
lods
pop
ds
into
imul
test
push
push
outs
and
scas
int
and
add
adc
sti
adc
pop
fstp
into
lahf
inc
add
mov
mov
mov
loope
bound
inc
cmps
inc
ins
(bad)
pop
daa
ds
mov
data16
xchg
cmp
js
cdq
push
adc
mov
cmc
mov
cli
repz
cmp
xchg
int3
sub
and
imul
inc
cmovae
pop
rcr
imul
inc
imul
hlt
mov
inc
lahf
(bad)
jecxz
mov
std
dec
fild
cmc
idiv
mov
sub
pop
xchg
mov
cmp
cmp
jmp
scas
mov
sbb
cmp
fcomi
(bad)
push
push
rcl
test
inc
inc
mov
cli
xchg
mov
or
in
jb
mov
xchg
fsubrp
push
adc
dec
in
push
add
imul
push
push
ror
and
push
sub
add
mov
dec
pop
sub
add
xor
cmp
mov
and
popa
dec
arpl
inc
dec
xchg
stos
imul
stos
mov
jmp
loopne
out
cdq
outs
das
es
mov
inc
adc
mov
mov
and
sbb
enter
lahf
adc
pop
xchg
int
sbb
dec
jbe
outs
popa
mov
dec
mov
push
out
push
push
idiv
mov
xchg
mov
mov
mov
in
fist
mov
scas
ror
sub
es
or
out
cmps
mov
push
test
outs
call
or
push
cmp
arpl
sbb
adc
sahf
(bad)
andps
neg
push
leave
movs
enter
es
(bad)
pop
mov
gs
lds
mov
test
mov
add
pop
int
mov
mov
and
xor
jecxz
push
inc
push
lods
xor
sbb
jp
pop
jge
int
rcr
xchg
out
ins
bound
imul
adc
push
mov
mov
ror
loop
(bad)
clc
lods
sbb
mov
aam
es
xchg
push
inc
push
sub
aad
cwde
nop
dec
mov
fsub
in
ror
fld
inc
dec
sub
dec
xchg
inc
ins
sub
mov
cmps
test
shr
shr
in
jp
jns
push
xchg
clc
pushf
inc
xor
dec
mov
sbb
mov
adc
jae
or
dec
cmp
std
das
in
lea
sub
adc
loop
jl
cmc
jns
cmp
movs
push
xor
inc
fmul
add
add
inc
and
mov
jo
adc
mov
sbb
adc
inc
mov
test
outs
xchg
arpl
movs
mov
pusha
or
lahf
cmp
ret
test
push
or
aaa
push
add
pop
xchg
xor
xor
xchg
add
mov
aas
jne
pop
ins
loopne
mov
aas
pop
gs
cdq
gs
mov
or
(bad)
cmc
push
adc
adc
movs
mov
outs
jecxz
xchg
pop
dec
push
(bad)
scas
out
loopne
pusha
jmp
push
sahf
dec
pop
(bad)
aas
sbb
and
jb
loope
mov
out
and
or
jmp
call
mov
or
or
cdq
mov
mov
test
cli
dec
mov
mov
pop
xchg
imul
jg
in
jge
and
or
(bad)
fidivr
hlt
jecxz
xchg
ins
and
es
push
loopne
mov
sbb
shl
mov
int
call
dec
or
xor
sbb
mov
mov
(bad)
popf
es
push
(bad)
in
and
dec
add
scas
ins
in
inc
cdq
movs
adc
shl
inc
aam
adc
mov
cmp
adc
and
jns
ins
and
or
aad
lock
mov
push
add
jno
pop
and
test
push
bound
xchg
gs
cdq
push
dec
arpl
(bad)
sbb
hlt
mov
(bad)
cmp
int
add
push
cwde
aam
sbb
jge
fnstenv
adc
stos
lock
shl
push
mov
test
repnz
pop
and
stc
pop
ss
out
mov
sub
xchg
push
add
sbb
add
sub
out
retf
retf
sbb
jmp
xchg
inc
imul
mul
dec
push
not
or
add
movs
sub
out
mov
repz
jae
out
add
push
mov
inc
data16
daa
daa
stos
test
fwait
cmp
lea
push
lods
hlt
mov
mov
pop
push
inc
pop
cmc
mov
fsubp
loopne
je
xchg
out
sbb
mov
cmp
sbb
mov
loopne
push
add
retf
test
or
mov
pusha
push
push
dec
xchg
dec
xchg
dec
out
shl
bound
fiadd
ss
or
test
rol
mov
sbb
mov
lods
sahf
xor
cmp
pop
jecxz
js
sbb
cmp
pop
les
call
xor
loope
push
pop
pushw
aaa
outs
sub
dec
push
sub
xor
mov
lea
jmp
push
or
sub
sub
adc
cmp
mov
movs
popa
mov
or
imul
pop
test
xchg
mov
sbb
push
lahf
mov
into
jp
xchg
bound
lods
bound
mov
inc
add
jne
rol
jae
ss
inc
xlat
cli
push
cmp
push
ret
movs
or
push
or
add
ret
(bad)
sub
fcomp
lds
js
(bad)
sbb
lods
leave
mov
sub
add
lods
pop
xchg
pop
pop
je
xchg
xchg
jecxz
movs
mov
push
(bad)
sahf
pop
loopne
out
clc
cmp
js
sbb
dec
jne
xchg
aaa
lods
cwde
xchg
or
nop
jge
scas
test
lahf
das
fldpi
les
test
shr
push
rcl
push
inc
test
xchg
push
mov
or
push
adc
push
jl
aam
push
push
mov
dec
aad
or
movs
fwait
inc
retf
push
inc
jmp
int
aas
lahf
js
int
popa
out
fwait
popa
sbb
jb
jae
or
cmp
int3
cmc
mov
fnstcw
sbb
clc
xchg
pop
pop
add
dec
or
pop
mov
leave
inc
mov
mov
and
retf
sub
cmc
pop
inc
ins
in
dec
stos
sub
adc
mov
cld
sub
stc
gs
lds
mov
loopne
add
(bad)
div
rcl
(bad)
mov
lock
cmp
xor
push
cmps
push
ret
add
iret
mov
(bad)
ficomp
jecxz
adc
icebp
call
ins
ficom
mov
cmp
rcl
add
sahf
jp
icebp
(bad)
sub
in
xchg
or
jp
mov
mov
mov
sahf
inc
mov
sbb
aam
cmp
shl
or
in
push
(bad)
ja
fwait
in
inc
sbb
jnp
sahf
xor
shr
ret
loop
fisttp
mov
lods
adc
xchg
dec
popa
inc
xchg
jle
stc
sbb
pop
(bad)
inc
lods
mov
fidiv
dec
dec
push
add
push
cmps
sbb
enter
fnstsw
sbb
xchg
pop
(bad)
retf
movs
or
ss
dec
addr16
and
xor
xchg
xor
sahf
loopne
add
nop
test
dec
stc
sbb
sar
and
pop
leave
sbb
lea
cmc
inc
jno
out
je
cmp
pop
adc
mov
push
in
cmp
mov
or
sar
nop
movs
or
mov
and
aad
sbb
mov
(bad)
sub
ins
push
jns
add
add
push
ds
daa
add
inc
push
lahf
das
fwait
enter
loop
push
sub
xor
mov
lea
cld
jle
retf
not
or
push
mov
add
hlt
jmp
mov
sbb
pop
out
jae
inc
push
mov
test
and
jp
icebp
push
adc
push
inc
sub
dec
inc
int
pop
dec
or
adc
outs
inc
pop
(bad)
addr16
mov
pmaxub
loopne
and
jmp
mov
mov
hlt
call
jne
retf
cmp
inc
retf
sub
add
mov
xchg
and
adc
mov
mov
mov
cmp
shr
cmp
and
xor
mov
aam
mov
(bad)
ja
fisubr
mov
and
mov
xchg
cmp
jle
movs
or
jno
cmps
je
scas
adc
dec
adc
mov
jge
add
mov
or
scas
ret
mov
jle
or
gs
inc
push
jp
in
pop
mov
mov
loop
pop
cmp
mov
xchg
movs
rep
mov
bound
mov
jae
mov
aaa
push
inc
jp
lods
adc
mov
mov
les
xchg
jo
scas
scas
and
js
push
sbb
stos
icebp
lods
imul
fs
rcr
or
sbb
icebp
ror
add
inc
push
aam
jae
daa
jmp
jmp
(bad)
cmp
jb
or
push
lock
gs
mov
test
fs
sub
fdivrp
sbb
stos
lods
push
lods
adc
call
push
xchg
or
ss
xlat
ror
loope
test
jo
aam
sbb
mov
dec
loopne
jge
push
mov
xlat
adc
ret
retf
cmps
and
xor
retf
inc
js
stc
popa
test
jne
pop
or
mov
add
test
fdivr
lahf
cmovge
stos
push
sbb
or
lock
mov
out
sbb
inc
jno
and
mov
cmps
lahf
pop
ja
sub
popa
sub
push
inc
scas
and
leave
xor
jecxz
xchg
hlt
cli
jnp
repnz
in
jae
xchg
popf
or
push
mov
add
iret
push
fsubr
aaa
xor
dec
xor
mov
bound
pop
(bad)
inc
xor
push
ja
outs
and
inc
jle
int
sub
aad
jno
stos
lea
jp
pop
fcom
test
inc
jbe
ret
pop
mov
inc
dec
cmp
xchg
jo
sub
push
push
out
jnp
stc
aas
bound
jle
punpckhdq
test
lods
dec
jno
fistp
test
js
movs
dec
xchg
sti
lods
lods
(bad)
ds
sbb
arpl
jmp
outs
pop
mov
cmps
loope
inc
loope
pushf
cmp
nop
ds
inc
lds
sbb
xchg
cmp
push
xchg
in
xor
lds
cmp
or
hlt
mov
cmp
cmc
es
out
mov
pop
and
test
inc
xor
loope
je
mov
fsubr
test
jmp
mov
cmp
ds
cmp
sbb
dec
pop
ficomp
xor
les
adc
pop
add
sbb
test
mov
and
in
adc
pop
in
(bad)
xchg
mov
mov
and
jno
je
call
inc
ins
or
js
mov
test
pop
aas
push
mov
popf
pop
idiv
daa
mov
mov
adc
inc
push
call
adc
dec
stos
loope
sub
call
add
ja
(bad)
mov
pop
sbb
inc
or
add
mov
mov
mov
mov
adc
xchg
(bad)
loope
dec
stos
(bad)
call
retf
retf
out
mov
fwait
sbb
rcl
shr
adc
jo
les
and
out
fs
fwait
adc
mov
in
inc
adc
iret
pop
imul
jae
push
mov
xchg
mov
xchg
fstp
push
and
repz
adc
inc
int
call
cmp
dec
sub
test
frndint
jp
mov
arpl
rcl
ins
out
push
fld
mov
or
aas
cmp
in
jecxz
fcmovne
ja
xchg
mov
cmp
inc
lock
xchg
mov
int
dec
push
shr
int
(bad)
out
add
add
xchg
cld
and
je
fdiv
mov
push
inc
stc
je
hlt
in
sbb
std
jle
(bad)
cmps
cld
cmp
mov
sub
jge
in
mov
ret
sub
add
add
ret
and
inc
mov
ret
jecxz
leave
pop
adc
aaa
push
jns
std
inc
mov
shr
fwait
jae
xor
out
cli
sbb
cmp
(bad)
pop
test
mov
popf
mov
loopne
daa
test
sahf
in
inc
xchg
movs
or
icebp
aad
outs
mov
sub
and
into
shl
(bad)
jb
pop
scas
xchg
movs
dec
lahf
loop
mov
jo
mov
(bad)
sub
cmp
aas
adc
or
mov
add
mov
fist
mov
ret
and
sbb
movs
inc
push
test
test
retf
inc
push
lods
rcl
mov
sub
lods
into
iret
mov
outs
adc
push
punpckhwd
lods
sbb
pop
pop
dec
test
mov
inc
retf
sbb
jmp
cmp
jmp
or
adc
fsubr
bound
das
dec
push
cmp
ror
sub
inc
mov
pop
and
mov
adc
sbb
mov
jecxz
loop
sbb
(bad)
xchg
or
cmc
jmp
icebp
push
mov
add
jge
push
test
lods
mov
js
stos
call
sbb
adc
icebp
iret
xor
pop
outs
adc
outs
jmp
int3
or
retf
cmp
ret
and
pushf
icebp
and
mov
and
add
out
dec
xchg
fnstcw
dec
fsubr
mov
push
shl
add
test
dec
xor
pop
sbb
pop
jmp
fsin
mov
scas
ret
loop
cmp
pop
xlat
and
imul
add
out
jne
and
cmps
in
ror
cmp
mov
arpl
add
sub
shr
adc
and
(bad)
retf
jl
rol
dec
dec
rol
push
aam
aas
sub
jge
inc
div
lods
cmps
pusha
adc
test
bswap
mov
mov
adc
push
sbb
test
pop
stos
std
aas
ds
dec
retf
fs
xlat
int3
jl
mov
adc
aad
sub
pop
xchg
jl
bound
adc
pop
(bad)
das
in
jl
mov
gs
arpl
dec
add
dec
jl
add
(bad)
lods
jne
mov
jae
jmp
sbb
(bad)
mov
mov
jne
(bad)
ror
inc
and
add
js
cmps
pop
mov
jle
cmp
xor
cmp
lods
lods
cmc
mul
pop
je
xchg
ficomp
mov
js
(bad)
(bad)
cli
pop
mov
push
push
(bad)
push
mov
das
cmp
sub
lea
mov
test
ins
and
and
les
sbb
or
jae
push
or
(bad)
mov
xor
(bad)
xchg
jg
rcr
arpl
mov
movs
add
std
inc
mov
je
xchg
pop
add
push
clc
dec
cwde
(bad)
push
psllw
in
pop
div
hlt
retf
shr
cmp
imul
ret
inc
sub
(bad)
loopne
fstp
lds
mov
and
xchg
call
xchg
cmp
pop
jmp
push
adc
es
add
cmps
movs
(bad)
dec
test
ffree
mov
enter
leave
movs
xchg
cli
lea
test
xor
bnd
xchg
dec
dec
(bad)
push
cmp
rcl
test
dec
add
outs
(bad)
stos
pop
or
or
inc
and
sub
push
push
sbb
cdq
push
jl
or
and
xor
push
loope
or
jb
fwait
(bad)
sub
loope
scas
cmps
popf
lea
adc
and
ss
daa
dec
sti
pop
popa
(bad)
(bad)
retf
push
stos
call
popf
add
xchg
pop
cmps
aaa
pusha
test
adc
out
pop
ds
call
jmp
sub
and
stos
pop
add
sahf
dec
lods
cmc
neg
ficomp
std
dec
mov
rcl
mov
icebp
jmp
inc
and
aam
js
cs
sub
sbb
sbb
push
adc
js
add
test
jg
iret
ds
jbe
or
(bad)
jno
mov
rcr
push
je
sbb
xchg
inc
inc
out
outs
and
xor
jmp
hlt
lds
je
mov
sbb
pop
add
les
stos
sub
aas
pop
data16
lds
mov
fisttp
ds
sahf
push
add
call
push
into
sbb
lods
mov
adc
sub
sub
inc
push
push
pusha
ja
push
sub
(bad)
and
test
mov
cmp
ret
stos
jns
adc
jp
outs
fdiv
or
gs
loopne
sbb
push
ja
adc
or
push
cmp
pop
cmp
loop
dec
or
in
inc
add
sub
cmp
push
mov
xor
js
call
ins
adc
mov
and
repnz
mov
jae
inc
sub
push
scas
xor
lock
adc
lods
jle
xor
sbb
and
jecxz
shr
das
and
jnp
adc
jle
and
lahf
loope
mov
xchg
jo
scas
in
xchg
pusha
(bad)
xchg
mov
mov
sahf
fnclex
pop
cmp
popf
push
pop
cdq
push
xor
leave
test
mov
mov
sti
xor
out
es
sub
or
adc
movs
(bad)
or
test
jp
ja
push
or
push
repnz
push
xlat
cmc
mov
loop
stos
test
(bad)
adc
movs
mov
jmp
mov
xor
(bad)
test
xchg
(bad)
retf
(bad)
outs
test
or
js
adc
in
push
ss
push
imul
mov
aas
icebp
arpl
outs
push
iret
add
mov
stos
mov
and
in
test
jmp
sti
pop
adc
xor
scas
les
(bad)
fidivr
mov
push
adc
fld
xchg
repz
imul
mov
jo
repnz
iret
enter
inc
xlat
pop
and
pop
add
dec
loop
call
inc
mov
inc
sub
sub
mov
push
js
sbb
pop
add
nop
aas
push
inc
idiv
xchg
loope
std
mov
xor
cwde
adc
sub
and
test
xchg
mov
add
sar
cmp
sbb
in
adc
inc
pop
add
jg
xor
cmp
into
cli
sbb
enter
lock
cwde
lods
js
jle
mov
sub
cs
and
sti
cwde
imul
(bad)
add
dec
xchg
repnz
pop
retf
pop
xor
into
loope
and
loop
rcl
sub
xchg
xchg
inc
xor
adc
pop
push
mov
movs
ds
in
mov
ss
imul
movs
leave
rcl
fimul
mov
pop
jmp
mov
or
in
xchg
in
gs
or
mov
jnp
sub
mov
and
outs
scas
add
loop
xchg
or
pop
add
pop
rcr
stos
push
test
std
pop
dec
push
add
outs
sub
mov
and
(bad)
shr
add
dec
mov
mov
xor
push
shl
or
mov
ret
in
jnp
sbb
(bad)
shl
cmp
(bad)
addr16
push
sbb
xor
inc
add
sub
xor
push
je
(bad)
jbe
cmp
neg
mov
iret
xchg
stos
mov
loope
mov
in
push
es
inc
inc
jge
cmc
jecxz
dec
pop
cs
jmp
fcomp
jae
int3
lods
inc
mov
jmp
retf
jmp
dec
xchg
jno
mov
fsub
leave
pushf
fstp
std
and
test
std
xchg
jmp
xchg
int
push
bound
test
cmp
popf
es
fucomip
mov
dec
inc
pop
sbb
jmp
add
aam
sub
mov
cli
je
mov
or
xchg
xor
adc
add
dec
xor
shr
add
inc
jns
cld
sti
dec
mov
shl
mov
mov
aas
int
div
popf
lods
(bad)
xchg
mov
arpl
jle
movs
xchg
out
test
mov
je
sbb
cmps
cld
push
inc
pop
xlat
popa
les
lds
(bad)
retf
or
jl
stc
jmp
cmps
out
mov
adc
mov
sbb
push
push
lea
fisub
dec
push
cs
(bad)
and
push
dec
rcr
imul
fs
mov
cmp
push
sub
cmps
jp
jb
xlat
cmp
push
xor
push
jnp
pop
sbb
jl
sbb
pop
or
pusha
les
mov
jns
cmc
xor
pop
mov
sub
xchg
jb
xchg
sbb
push
mov
add
pop
jmp
nop
call
push
add
into
xchg
mov
push
or
call
idiv
pusha
sbb
jmp
popf
add
mov
pop
pop
adc
cwde
mov
jb
movs
sahf
push
mov
xor
jns
push
scas
pop
les
hlt
adc
scas
push
test
sbb
lods
mov
retf
xchg
dec
into
inc
or
dec
mov
aam
cmp
inc
fiadd
xor
std
jg
ins
push
in
pop
fwait
ret
retf
imul
dec
adc
pop
cmovno
movs
sbb
push
test
pop
xchg
into
cmp
repnz
out
pop
aam
scas
dec
inc
pop
addr16
test
sub
clc
jecxz
in
repz
cs
gs
and
cmp
inc
mov
int
cmp
add
nop
mov
mov
push
and
mov
jb
sub
sub
repnz
lods
jg
rol
inc
adc
add
mov
in
test
dec
call
sbb
loop
mov
ins
outs
(bad)
int
idiv
test
mov
inc
cmp
inc
push
jge
dec
lods
js
sar
lahf
outs
inc
(bad)
push
pop
retf
dec
push
in
fs
mov
pop
pop
sbb
bound
jno
cld
xchg
in
pop
outs
adc
daa
lea
retf
ds
ds
dec
loopne
enter
dec
push
or
add
inc
dec
jl
push
cmp
sub
add
les
cmc
(bad)
mov
dec
inc
mov
mov
jo
pusha
dec
sub
mov
jg
pusha
jns
repz
mov
or
rcr
inc
loope
cmc
jecxz
retf
(bad)
das
in
push
call
dec
out
sub
push
xchg
std
js
lahf
ins
movs
ficomp
sub
and
in
scas
imul
pop
cmps
arpl
jecxz
(bad)
sti
(bad)
imul
inc
out
jae
cmps
cmp
imul
xlat
mul
outs
cmp
sub
addr16
popa
jecxz
nop
pop
adc
aas
dec
or
push
(bad)
(bad)
popf
pop
cs
and
js
lahf
xor
cmp
fwait
mov
cmc
enter
loope
pop
dec
add
sar
imul
(bad)
fidivr
xlat
jno
and
or
out
outs
cmc
(bad)
ds
out
mov
lahf
push
mov
sahf
rol
cmp
clc
mov
pusha
or
xchg
dec
inc
jnp
nop
dec
add
lods
fnstenv
cmc
int
push
and
add
dec
pop
dec
scas
xchg
je
fisttp
aam
jmp
dec
xchg
and
lahf
mov
jg
in
jmp
pop
sub
dec
(bad)
pop
lock
mov
cmp
js
xchg
call
outs
call
stc
jge
xor
pop
cwde
into
cmp
cmp
push
sub
lods
mov
mov
dec
inc
dec
out
cmps
push
cmp
aam
ins
ret
(bad)
sahf
sar
iret
ins
cmp
cmps
aas
adc
inc
repz
jmp
sub
rcr
stc
hlt
jge
xlat
in
ror
inc
and
enter
es
mov
mov
sub
popf
xor
add
sbb
cld
mov
test
and
inc
setg
pop
dec
push
fstp
pop
inc
stos
push
dec
shl
icebp
sub
pop
lea
adc
call
or
call
push
push
mov
(bad)
mov
adc
cmp
cmovno
push
aas
fprem1
loope
bound
mov
mov
iret
retf
aas
mov
push
xchg
dec
rcl
retf
mov
add
sub
imul
cmp
push
outs
rcpps
sar
fist
gs
cli
adc
out
xchg
daa
dec
je
aaa
lock
stc
sar
add
mov
dec
or
fs
(bad)
fld
dec
adc
inc
xor
into
int3
jbe
pop
outs
sbb
mov
out
ins
test
xchg
sbb
sahf
push
jns
xchg
mov
push
mov
and
jae
pop
fdivr
sar
sbb
mov
retf
mov
mov
mov
fsub
inc
adc
movs
inc
dec
push
pushf
sbb
pushf
lahf
cdq
adc
adc
push
aas
xor
push
mov
pop
ds
or
ds
stos
ds
dec
stos
push
mov
idiv
shr
jge
ss
test
pop
inc
push
cmp
sbb
pushf
arpl
je
mov
xor
or
out
cmp
stos
mov
fistp
out
jb
call
mov
rcr
pop
lds
mov
mov
mov
ret
clc
jno
inc
push
push
movs
jecxz
mov
imul
stc
mov
pop
push
repnz
mov
pop
js
xchg
inc
out
mov
aad
xor
popf
or
xchg
jg
mov
syscall
pop
in
int
enter
aaa
xchg
xchg
sub
fs
xor
mov
or
sbb
ret
out
mov
jae
sbb
push
call
popf
inc
dec
jno
in
ja
into
in
mov
les
lods
lea
push
call
or
fwait
dec
add
add
loope
leave
sbb
dec
lea
add
js
xor
mov
add
add
sar
shl
mov
retf
icebp
xor
mov
shr
dec
adc
mov
sbb
aaa
xchg
and
jle
stc
stc
push
repz
add
and
add
xor
push
imul
and
sub
or
int3
pushf
jno
loop
stc
xlat
in
mov
and
retf
loop
test
pop
mov
cmp
arpl
pop
ficom
into
adc
or
nop
adc
outs
push
mov
push
xor
dec
sbb
add
mov
pushf
jle
stc
xlat
test
test
or
adc
push
push
push
mov
jbe
call
push
adc
in
jmp
jmp
movs
jb
aad
inc
scas
xchg
push
rol
xor
rol
mov
shr
jge
aam
daa
sub
mov
xor
(bad)
sbb
adc
int3
jge
pop
mov
popf
jp
js
inc
and
sub
and
or
movups
stos
pop
sbb
sub
cmp
or
(bad)
cmp
sbb
pop
xchg
inc
ins
push
dec
and
cmc
pop
pop
data16
jno
xor
mov
push
and
xchg
jecxz
icebp
cmp
es
push
mov
inc
pop
scas
inc
outs
sti
(bad)
jp
retf
xchg
dec
and
xor
test
xor
and
(bad)
xchg
ins
mov
xor
mov
add
stc
push
pop
pusha
cmc
cmc
cmp
imul
xchg
loop
add
mov
jecxz
sti
jp
sbb
cmp
push
sub
enter
push
(bad)
int3
popa
ror
lods
lods
popa
test
mov
pop
(bad)
sbb
pusha
inc
jnp
push
lods
imul
mov
mov
sbb
mov
test
fdiv
dec
mov
lods
(bad)
shr
dec
xchg
cmp
sahf
cmps
sahf
sahf
mov
xor
sub
sub
push
outs
test
fild
(bad)
shr
rol
gs
mov
sub
test
call
pop
fs
xchg
xchg
inc
adc
mov
aaa
test
and
mov
cs
jo
xchg
mov
pop
jb
push
les
jg
cld
mov
jmp
pop
xor
and
lods
jo
push
dec
int
mov
call
ror
inc
lahf
mov
xor
sbb
add
popf
mov
nop
jmp
jp
jno
(bad)
popf
dec
inc
bnd
repz
add
fcom
mov
das
inc
mov
jne
in
cmp
xchg
addr16
dec
dec
push
fs
mov
sub
out
aas
xor
pop
rcr
rsm
xchg
jmp
loope
dec
push
pop
xchg
cmp
cmc
call
adc
hlt
mov
(bad)
movs
mov
lods
(bad)
scas
push
and
jmp
cmp
xchg
gs
popa
inc
jmp
add
jle
icebp
iret
jno
and
ret
ret
or
cmp
and
push
pop
and
and
ret
pusha
mov
push
push
inc
aam
cmc
lahf
sbb
imul
shl
push
or
(bad)
push
outs
in
xor
test
int
or
xor
sbb
mov
dec
hlt
add
sbb
mov
lock
mov
shl
mov
clc
sbb
iret
sub
int3
call
dec
mov
mov
in
(bad)
pop
mov
push
ret
xchg
xor
bound
pushf
cmp
sub
cld
push
imul
inc
dec
loop
rcr
xor
out
jmp
call
mov
pusha
add
lds
iret
cmps
clc
jle
scas
gs
mov
jge
sub
jge
pop
and
div
sbb
inc
xor
and
(bad)
mov
jns
pop
sbb
cmps
push
test
sub
ftst
aad
mov
xchg
shl
jno
xlat
mov
adc
aad
scas
dec
xchg
repnz
lahf
cmovle
push
xchg
push
sub
push
inc
mov
movs
in
cmp
lods
dec
mov
in
inc
mov
mov
xor
in
ret
ret
mov
pop
cwde
call
inc
aas
gs
mov
and
lea
xchg
lea
dec
scas
cmp
sub
outs
adc
lods
cmp
call
in
pop
mov
(bad)
add
add
push
int3
ror
nop
fisubr
adc
aad
inc
inc
jge
jp
adc
call
cdq
cmps
xchg
or
inc
cli
(bad)
xchg
dec
sub
inc
jnp
sub
mov
add
push
jp
(bad)
rcl
or
out
loopne
cmp
or
add
jg
mov
jb
xchg
ins
icebp
clc
push
mov
cli
pop
fisub
push
inc
sbb
mov
retf
mov
fstp
xor
mov
push
popf
test
js
pop
mov
daa
add
mov
movs
imul
test
cld
dec
fcmovb
(bad)
mov
jne
fwait
das
stos
icebp
pop
pop
outs
aam
jecxz
or
pop
sahf
retf
movs
stos
retf
clc
jmp
repnz
push
cli
inc
ss
push
stos
jecxz
stc
int
jae
rcr
mov
or
stos
mov
popa
xchg
nop
pop
loop
mov
inc
popf
inc
sub
test
pop
sahf
dec
test
or
retf
stos
sub
cmp
int3
hlt
fldcw
aam
aaa
lock
es
or
adc
fcom
adc
and
div
repnz
mov
push
inc
dec
sbb
stos
push
imul
or
fsubp
inc
push
jmp
mov
mov
cwde
push
push
push
test
inc
outs
test
lods
arpl
cmps
mov
push
mov
xchg
stos
push
inc
stos
xchg
lahf
pop
mov
gs
xchg
les
ja
jmp
dec
enter
add
xor
mov
sbb
aas
mov
fsubr
mov
dec
sub
test
aam
xlat
lea
adc
(bad)
cmp
pusha
jb
arpl
xor
iret
adc
jmp
test
mov
inc
sub
stos
add
ds
neg
(bad)
js
fild
bound
pop
add
aas
push
and
fld
shl
mov
adc
and
mov
test
daa
(bad)
retf
loope
jo
repnz
aas
gs
push
test
dec
xchg
xor
inc
jecxz
imul
fadd
in
stos
pop
pop
ins
icebp
mov
ror
jl
test
arpl
cmp
nop
jno
push
cmpxchg
jp
loop
inc
jecxz
mov
pusha
stos
fst
dec
int3
or
sub
ret
cmc
movs
pop
xchg
inc
jmp
in
cli
push
in
xchg
fidiv
cmc
daa
pop
daa
in
gs
xor
push
icebp
js
pop
cwde
jecxz
aam
scas
in
jmp
xchg
sbb
mov
xchg
daa
xchg
movs
test
mov
rol
jnp
mov
ja
inc
adc
xchg
jmp
std
aas
leave
inc
(bad)
and
das
cmps
jp
and
jb
and
xor
lods
iret
cld
enter
push
shl
cmp
xchg
xor
pop
add
rcl
aas
(bad)
addr16
pop
lds
pop
cmp
inc
cmp
sbb
jbe
push
ficom
call
nop
xchg
jle
shl
scas
push
xor
int3
push
in
inc
jne
dec
push
mov
pop
mov
mov
into
mov
inc
and
jae
sbb
jnp
adc
mov
add
inc
inc
xchg
mov
mov
imul
scas
mov
nop
(bad)
jg
push
imul
pop
test
loope
fdivr
popf
push
cmp
mov
std
add
push
(bad)
(bad)
(bad)
mov
fstp
aaa
xchg
ss
ins
lods
imul
arpl
push
add
xor
jmp
mov
ret
lods
or
rol
jo
pop
or
(bad)
hlt
add
inc
cmp
leave
push
sub
mov
push
xor
cmp
popf
scas
cmc
cmp
pop
inc
jmp
inc
rcr
in
call
pop
int
imul
lods
inc
jg
adc
sbb
lds
aas
dec
hlt
sub
add
jns
js
jmp
test
mov
dec
and
jo
call
pop
pop
inc
fwait
scas
mov
inc
les
add
dec
adc
mul
ds
mov
fcmovne
xchg
je
xor
mov
push
(bad)
pop
fcmovnb
mov
fcomp
test
dec
adc
or
push
mov
pop
dec
not
fldz
lea
sbb
sub
inc
ret
test
or
inc
dec
push
and
pop
pop
movups
in
adc
push
or
lock
pusha
psraw
movs
jecxz
js
hlt
popa
mov
jecxz
repnz
jecxz
mov
inc
test
and
push
sbb
or
sub
or
and
leave
push
leave
jns
stos
test
das
and
xor
aas
push
call
rol
or
mov
cmp
fimul
xor
test
dec
movs
cmp
mov
pop
nop
jmp
inc
aaa
movs
inc
scas
inc
pop
je
ror
movs
stos
(bad)
push
(bad)
dec
out
push
mov
mov
pop
cld
dec
lods
mov
xlat
add
and
dec
mov
into
scas
mov
dec
sbb
sub
loop
pop
retf
mov
sbb
hlt
scas
xor
add
dec
outs
cmp
cmp
pusha
addr16
or
or
mov
sbb
mov
push
in
addr16
fwait
mov
and
movs
in
aam
or
jge
mov
jecxz
pop
and
dec
xor
dec
mov
ss
cmp
and
fcmove
ds
xchg
or
imul
inc
sub
mov
sub
int
aaa
loopne
fstp
pop
sbb
or
jmp
jle
adc
mov
addr16
xlat
inc
in
imul
sbb
inc
cmp
inc
dec
cmp
retf
mov
xchg
dec
sub
dec
xchg
pushf
retf
jno
jg
ret
push
jge
jg
push
cmps
pop
(bad)
sub
add
adc
hlt
mov
(bad)
mov
add
ds
call
loope
stos
or
in
or
mov
cmp
jp
movs
sahf
adc
(bad)
(bad)
aam
sub
mov
xchg
popa
mov
call
adc
jge
xor
mov
les
lea
popf
cmps
xor
jno
adc
add
or
jae
xchg
mov
xor
mov
jp
sbb
pop
and
out
adc
out
cmps
cmp
xchg
inc
stos
push
or
pop
(bad)
mov
adc
in
mov
into
adc
sbb
add
sub
loope
add
add
and
cmp
push
mov
push
aam
inc
sahf
stos
lea
ret
mov
(bad)
fdiv
pextrw
mov
call
add
mov
dec
lahf
push
lods
(bad)
hlt
test
call
inc
or
(bad)
rcl
jecxz
adc
shl
add
pop
(bad)
scas
shr
(bad)
push
clc
sti
sub
ins
or
stc
inc
mov
pop
mov
pop
mov
rol
bound
mov
bnd
mov
sub
(bad)
dec
addr16
xlat
in
mov
mov
clc
cld
jae
mov
sbb
push
cld
mov
sahf
out
add
xchg
imul
scas
das
das
cmp
lea
push
shr
dec
jns
(bad)
pop
fwait
ja
inc
mov
adc
ret
and
jns
(bad)
aam
vpunpckldq
js
test
pushf
adc
sbb
sbb
push
retf
mov
sub
sbb
inc
dec
dec
xchg
jae
rcl
call
push
add
out
test
pop
pop
das
inc
mov
cmp
fld
mov
add
jge
in
inc
add
dec
cmc
loopne
cmp
mov
lds
jno
in
test
fwait
dec
aas
icebp
pop
lea
inc
cs
inc
sub
or
imul
mov
(bad)
addr16
push
dec
cmp
xchg
push
pop
sbb
out
jg
repnz
gs
movs
inc
add
outs
add
jle
cwde
repnz
inc
gs
push
in
cdq
sbb
int3
and
push
aam
inc
fbstp
jae
sbb
repnz
or
jg
jmp
sbb
std
lods
push
enter
mov
iret
cmps
enter
in
mov
imul
(bad)
js
enter
jp
mov
dec
dec
and
push
das
and
aaa
and
or
leave
ins
in
not
jge
movs
xor
pop
cdq
jecxz
jmp
int
lods
xor
and
adc
mov
fisubr
dec
cmps
mov
arpl
dec
imul
jns
pop
fmul
xor
stos
(bad)
and
dec
cmc
push
jne
imul
sub
adc
add
cdq
loope
jmp
retf
into
movs
push
dec
movs
xor
call
dec
mov
mov
push
push
mul
mov
enter
fs
mov
push
jmp
(bad)
mov
mov
xchg
pop
xchg
pushf
out
cmps
cld
pop
inc
fstp
(bad)
jmp
inc
cmp
in
ins
fidiv
aad
loop
sub
push
jecxz
mov
(bad)
push
in
or
ret
add
(bad)
mov
dec
mov
dec
loop
bound
inc
cmp
push
dec
in
fsub
adc
pop
sbb
push
sub
lock
push
mov
ret
push
inc
cmp
mov
push
mov
push
push
mov
cmp
pop
(bad)
(bad)
pop
jae
retf
sub
outs
push
push
sbb
adc
xchg
xor
call
mov
movs
js
test
je
imul
test
xor
adc
je
xchg
dec
or
xacquire
sbb
add
(bad)
fsubp
mov
xchg
(bad)
mov
movs
xor
shl
into
mov
and
xor
push
push
mov
jl
(bad)
pop
outs
inc
jb
shl
dec
push
inc
dec
stos
sbb
cmp
lods
adc
stos
dec
in
xlat
push
add
and
mov
xor
(bad)
dec
adc
or
pop
ja
rcl
cmp
push
push
iret
mov
dec
adc
mov
dec
mov
add
cmps
aam
iret
xchg
ret
adc
test
fsubr
cmc
lea
mov
xchg
rcl
mov
mov
fisttp
les
nop
adc
push
aad
mov
mov
inc
sbb
mov
scas
lods
sbb
jmp
xchg
or
popf
imul
mov
cmp
rol
xchg
ficomp
mov
sbb
adc
dec
and
mov
xor
inc
mov
sub
cmp
inc
or
pop
enter
mov
dec
in
fdiv
push
mov
adc
fld
test
xor
adc
mov
test
dec
dec
sbb
and
add
outs
sbb
shr
call
cdq
call
ffree
(bad)
xchg
lods
adc
repz
loop
jg
xchg
inc
xlat
pop
addr16
leave
push
push
rcr
je
xchg
xchg
cmp
mov
pop
and
push
inc
mov
dec
(bad)
hlt
mov
pop
jnp
inc
and
dec
rcl
inc
cmp
(bad)
retf
xchg
pop
(bad)
sti
(bad)
fdiv
dec
adc
or
push
mov
push
les
lea
jae
fcomp
shl
xchg
sahf
xchg
fisub
pop
add
xchg
adc
in
shr
adc
ja
sub
add
add
lods
jno
pop
add
sbb
shr
mov
cwde
xchg
cwde
push
repz
push
and
dec
cmp
cmp
xchg
sub
push
in
cld
mov
out
push
inc
push
mov
sbb
sub
out
pop
pop
push
push
test
movs
fldcw
fstp
xchg
mov
mov
push
jecxz
xor
sub
dec
(bad)
outs
fisub
add
push
inc
popf
sub
(bad)
push
add
cmps
push
mov
push
mov
xor
lds
dec
mov
mov
shr
cs
cmp
push
push
(bad)
xchg
fisttp
and
add
mov
push
mov
xor
cmc
sbb
fwait
push
and
jmp
and
xor
add
dec
sub
mov
xor
sub
inc
add
jg
jg
ins
movs
rcr
pop
cmp
lahf
and
mov
adc
adc
add
jmp
cdq
mov
sub
xchg
mov
sti
xor
adc
out
cmp
sbb
mov
lods
jno
movs
pop
push
xchg
xor
pop
and
sub
xchg
jmp
in
aad
sbb
push
xor
or
pop
test
and
jg
push
aaa
(bad)
mov
ins
stc
hlt
(bad)
shl
aas
cmc
push
scas
inc
add
xchg
popa
jo
loopne
jmp
mov
push
cmc
jne
xor
or
xor
push
mov
adc
mov
cli
test
xlat
mov
jbe
mov
jmp
repz
inc
dec
dec
jbe
jg
out
inc
push
ins
mov
int3
iret
dec
push
loope
pop
jnp
shr
adc
or
lahf
and
loope
sub
add
int3
cmp
lahf
xchg
(bad)
(bad)
push
xchg
sti
xor
or
dec
push
adc
js
movs
idiv
cmp
or
or
mov
pop
ins
iret
pop
dec
popf
fstp
pop
enter
jo
push
push
arpl
sub
push
das
xor
mov
call
cmps
dec
enter
ret
mov
pop
dec
push
pop
push
les
rol
in
xchg
repz
popf
cmp
outs
mov
xchg
cmps
cdq
push
or
add
sbb
mov
fwait
cmp
dec
dec
sub
(bad)
xchg
push
ret
lea
out
loopne
outs
(bad)
sub
dec
pop
icebp
and
xchg
xchg
and
ja
aam
push
mov
sbb
cmps
cmp
mov
dec
lock
clc
loope
cmps
mov
rcl
stos
pop
pop
js
daa
sbb
cwde
sbb
sub
add
pop
push
in
das
ss
mov
cmp
push
or
inc
mov
addr16
dec
inc
sub
mov
mov
sbb
movs
mov
xor
inc
adc
inc
and
adc
lds
gs
jnp
jns
jns
and
sub
sub
add
int3
or
ret
pop
ds
nop
mov
fldenv
stc
jno
cmove
push
dec
and
fs
loop
and
and
jmp
(bad)
push
scas
pusha
sub
dec
mov
lods
dec
pop
add
lods
push
dec
shl
mov
adc
inc
push
aam
sar
fisttp
pop
mov
lahf
pop
(bad)
xchg
mov
bound
xchg
outs
dec
std
dec
cmc
aas
xlat
cli
jnp
popa
mov
icebp
inc
inc
(bad)
(bad)
cmp
cmc
call
push
dec
cmps
pop
push
pop
pushf
in
jne
mov
(bad)
mov
jecxz
je
loopne
shl
cmp
mov
and
or
jmp
xchg
pop
ret
rep
aam
std
scas
jg
mov
jnp
xchg
xor
or
in
(bad)
lahf
cli
test
xchg
(bad)
jmp
mov
jns
(bad)
cmp
call
pop
iret
hlt
repnz
out
stc
jne
loopne
frstor
and
xlat
xor
aaa
pop
aam
fidiv
xor
loopne
loopne
scas
fucomi
shr
pop
jbe
sub
pop
push
lods
je
cwde
cmps
fcmovnbe
repnz
in
cld
sar
outs
test
mov
xchg
popa
sub
fstp
sub
push
leave
or
xchg
xchg
or
pop
(bad)
or
sbb
lods
jae
(bad)
sub
inc
xchg
push
inc
jae
dec
jno
sbb
je
jne
xchg
xchg
sar
out
int
jmp
and
sbb
push
mov
cmp
in
lea
add
dec
and
icebp
(bad)
xor
(bad)
repnz
aam
in
or
(bad)
jne
xchg
arpl
int
ins
mov
jbe
push
clc
sub
mov
cmp
xor
mov
xor
fs
imul
add
mov
mov
aam
add
gs
(bad)
inc
push
xchg
cmp
js
xchg
sub
sub
jmp
std
mov
scas
shr
xor
arpl
cmp
sub
jle
nop
jmp
dec
(bad)
jmp
sub
inc
adc
cld
repz
mov
and
fs
inc
popa
jb
pop
fdivr
in
adc
outs
lea
stos
or
lock
pop
iret
movs
popf
mov
fwait
call
sub
xchg
iret
push
and
and
dec
sbb
sti
xor
push
daa
push
mov
lahf
cmps
hlt
neg
jo
fiadd
lods
xchg
stos
lock
call
pop
fist
rol
ds
xor
cmp
push
mov
sub
or
jb
xlat
cmc
cli
icebp
in
dec
ins
push
mov
test
xchg
pop
sahf
jl
xlat
mov
cmp
sbb
jl
je
(bad)
mov
retf
adc
out
or
dec
out
mov
pop
in
out
xor
cli
test
and
and
inc
sbb
xchg
out
mov
js
add
dec
inc
dec
pop
test
and
or
xchg
cmp
xchg
adc
fistp
call
dec
ficom
(bad)
mov
addr16
mov
fadd
jne
cmp
jb
dec
adc
psubw
sbb
test
adc
push
in
popa
call
in
pop
inc
rcr
(bad)
sti
xchg
ss
cmp
enter
out
mov
jmp
icebp
or
imul
xchg
mov
arpl
das
fsub
push
or
in
cmps
xor
jae
mov
shl
xchg
(bad)
mov
xchg
jbe
mov
mov
outs
inc
imul
xor
xchg
popf
inc
int3
push
in
add
xchg
mov
fwait
jae
rcl
mov
fmul
movs
mov
push
sub
scas
das
mov
xor
pop
mov
dec
les
seta
push
push
and
hlt
and
sti
jecxz
sbb
mov
stc
data16
xchg
jmp
xchg
ds
xor
mov
arpl
(bad)
hlt
cmc
pop
sti
sub
pop
out
jmp
dec
push
call
cmp
rcl
es
xor
ins
lea
push
loop
ins
mov
stos
test
das
sbb
mov
push
dec
fwait
jle
push
sub
mov
inc
aad
je
repz
dec
sbb
imul
mov
daa
int3
or
jmp
addr16
shr
mov
sahf
pop
sbb
adc
mov
stos
add
(bad)
not
loope
add
and
dec
loope
adc
lods
sub
rcr
ret
sub
add
scas
scas
popf
cmp
rcl
inc
fwait
movs
add
icebp
jns
je
cmps
mov
aad
and
sub
add
xchg
(bad)
inc
mov
rol
mov
and
push
xor
dec
pushf
push
cdq
jmp
jbe
mov
in
jg
mov
pop
xchg
pop
test
xor
popa
mov
push
js
(bad)
cmp
or
outs
jg
ds
out
loop
jle
jmp
test
mov
mov
das
lods
outs
in
out
mov
rcl
cld
(bad)
jp
in
movs
push
pop
dec
dec
push
sub
mov
or
push
pushf
mov
sub
test
ss
push
pop
xchg
scas
outs
das
imul
jo
imul
test
or
loope
out
jne
loopne
shr
mov
movs
sub
push
popa
icebp
cmp
addr16
cmps
sbb
xchg
dec
push
xchg
aad
es
jns
sub
xor
cs
inc
and
sub
add
sub
mov
fidivr
ja
jae
ficom
or
jno
or
mov
jmp
je
push
xor
jb
call
cmc
dec
sbb
addr16
jmp
ret
push
jne
xchg
or
dec
sub
xor
sub
jae
jg
mov
out
cmp
xchg
daa
enter
iret
test
jae
or
mov
mov
mov
(bad)
push
sbb
xchg
dec
loop
add
cmp
sbb
mov
lods
or
jmp
in
add
adc
mov
pushf
cmp
cli
out
mov
pop
pop
rcr
jle
rcl
push
xor
xchg
leave
cmp
jb
mov
jnp
shl
aaa
loopne
outs
in
sub
push
mov
sub
imul
loop
dec
mov
repnz
icebp
xor
test
push
cmc
cmp
jg
mov
imul
popf
add
dec
jmp
push
pop
xor
xor
mov
test
hlt
mov
retf
inc
call
movs
push
push
loope
xchg
mov
cmc
call
jo
mov
mov
pop
pop
cmc
adc
dec
jecxz
mov
jne
aaa
push
and
bound
push
pop
rcl
ins
mov
fs
push
scas
cmp
push
out
cmp
dec
jns
jbe
and
stc
retf
clc
outs
ja
sub
call
aam
push
mov
hlt
and
imul
jae
sub
and
inc
shl
jmp
lahf
xchg
mov
jl
jb
sbb
mov
adc
xchg
xor
jo
xchg
std
adc
leave
loop
call
jbe
cmps
movs
outs
push
mov
lds
dec
push
mov
and
xchg
dec
neg
pop
popa
mov
icebp
pop
or
sub
call
dec
or
cmp
repnz
lea
inc
pop
in
add
mov
fwait
jmp
cmc
cmp
jg
cmp
and
sbb
mov
xchg
jmp
and
leave
(bad)
fld
js
push
pushf
inc
inc
jecxz
mov
or
inc
push
loopne
and
pusha
jecxz
inc
mov
(bad)
nop
adc
dec
add
push
cmp
lods
sbb
inc
popa
cmps
loope
aam
aas
pop
neg
adc
fucomip
int
xchg
jno
xor
pop
xchg
inc
out
or
das
test
mov
sub
call
sahf
dec
mov
lods
popa
stos
sti
test
scas
inc
pop
mov
cmps
fadd
mov
jne
inc
sub
dec
dec
inc
lock
inc
mov
js
jecxz
je
enter
in
and
iret
sbb
mov
sub
mov
pop
sar
mov
scas
jmp
push
fiadd
push
les
jne
lods
xor
cmp
xchg
dec
stc
sub
inc
jb
xchg
sub
pop
test
cli
lahf
iret
mov
cwde
push
sub
rol
imul
push
pop
push
cmps
sahf
inc
sub
mov
lea
mov
fld
jle
ins
hlt
cli
sti
dec
jno
inc
xor
jmp
sub
add
retf
jge
push
jecxz
mov
xchg
add
hlt
xchg
(bad)
mov
aas
fdivr
adc
or
(bad)
fdivr
pop
and
mov
icebp
adc
repnz
gs
test
aas
sahf
js
pop
dec
jmp
cmp
das
xchg
outs
inc
mov
pop
daa
iret
shr
dec
aas
loope
not
div
mov
dec
outs
iret
scas
sub
sbb
jg
clc
inc
lods
out
push
shl
out
add
mov
cmps
mov
clc
fucomi
cmc
loop
out
xchg
xlat
movs
xlat
sbb
mov
jmp
scas
bnd
dec
add
inc
mov
scas
inc
jae
xchg
pop
and
mov
adc
add
jno
add
ds
and
cmp
or
inc
add
(bad)
xor
cmps
sahf
cmp
mov
cmps
dec
test
dec
pop
push
add
outs
pop
and
bound
add
jge
(bad)
sar
jp
jae
xchg
sub
cld
iret
in
dec
inc
stos
xor
add
in
call
sbb
add
aas
lahf
dec
push
ret
andnps
les
jnp
outs
iret
xlat
ficom
jp
lock
test
aam
add
pop
sub
int
(bad)
mov
pusha
ins
cmp
aam
pop
dec
aaa
daa
stos
js
imul
add
push
ss
aaa
ss
pop
jb
mov
stos
pop
fnsave
call
jge
fwait
jbe
outs
icebp
xchg
mov
call
push
rcr
add
pop
pop
in
je
xchg
xchg
xchg
(bad)
push
dec
aad
mov
push
daa
jbe
pop
jmp
std
mov
jl
xchg
dec
and
sub
or
jnp
mov
movs
(bad)
stos
pop
call
pushf
or
aad
repnz
imul
cmp
ror
dec
xor
mov
mov
pushf
fiadd
dec
hlt
push
pop
add
xor
dec
sbb
fidivr
ror
jmp
sub
mov
test
in
sti
outs
adc
inc
sub
repz
xor
shl
iret
inc
jae
inc
icebp
xchg
mov
data16
mov
add
test
mov
push
xor
jp
mov
cwde
(bad)
fidiv
mov
ss
mov
inc
mov
movs
adc
push
cmp
and
or
cmps
xor
mul
(bad)
lahf
or
push
rcl
or
aad
out
and
xchg
test
lods
xchg
cmp
sbb
leave
ret
mov
push
xor
cmc
inc
pop
cmp
pushaw
pop
outs
sub
(bad)
stc
mov
(bad)
dec
dec
jle
imul
fisubr
cwde
lods
mov
mov
ror
sbb
adc
mov
cmc
mov
push
adc
sahf
dec
imul
int
mov
mov
pop
fcmovnbe
ins
adc
scas
ret
push
xchg
pushf
xor
cmp
jbe
push
js
push
fs
call
and
xchg
jecxz
outs
test
jb
cwde
in
pusha
xor
push
xlat
daa
cmp
xlat
retf
out
dec
jne
loope
mov
pop
scas
add
xor
push
test
sbb
dec
test
mov
xchg
xchg
test
add
cmps
mov
push
scas
scas
add
push
pop
xor
cmp
rcr
pop
cwde
cmps
cs
push
cmp
gs
popa
adc
mul
add
retf
and
hlt
sub
in
mov
shl
rcl
xor
inc
outs
cmp
movs
loopne
popa
inc
cld
test
stos
push
sahf
mov
adc
(bad)
in
adc
rcr
lea
mov
mov
cmp
shl
push
mov
sti
cmp
mov
fldenv
pop
cmp
sar
mov
sub
ret
mov
(bad)
mov
pop
jl
jne
sbb
or
hlt
add
idiv
dec
call
in
cmp
jle
je
mov
in
lahf
stos
mov
or
rcl
dec
jmp
xchg
sar
rol
xor
and
dec
js
sub
inc
fmul
(bad)
shr
dec
xor
scas
inc
sbb
cld
fsub
xchg
push
mov
sub
loop
jb
cs
ret
ja
stos
fisub
sbb
addr16
inc
scas
adc
mov
jle
mov
pop
dec
mov
call
repz
test
xchg
in
mov
xchg
cmp
mov
stos
call
je
inc
and
push
xchg
mov
jecxz
push
sub
jge
mov
(bad)
jo
jno
adc
aam
jno
sbb
jno
add
call
hlt
rol
dec
jl
stc
imul
(bad)
mov
cwde
push
imul
pop
adc
xchg
fisubr
(bad)
push
imul
push
mov
jge
int3
inc
cli
push
pop
jl
pop
enter
rcl
sbb
push
adc
fild
mov
push
jl
iret
div
or
xor
cmp
rcl
jne
dec
das
xchg
pusha
test
in
push
fwait
jge
mov
fmulp
enter
loop
add
push
mov
loop
cli
sub
mov
cld
clc
hlt
or
xchg
inc
ror
cmp
inc
push
and
inc
(bad)
mov
mov
pop
inc
cli
cdq
push
add
iret
movs
mov
pop
pop
cmp
in
xchg
mov
xchg
scas
sub
jmp
xchg
into
movs
mov
sub
ret
push
sub
jb
sub
xchg
push
(bad)
jge
leave
pop
jmp
out
push
in
dec
ins
jo
je
sub
pop
out
add
cmps
push
adc
sub
adc
aas
cmp
sbb
jns
test
mov
(bad)
dec
loop
inc
pop
pop
dec
rcl
xchg
jns
push
icebp
mov
add
sub
jnp
jb
mov
push
sbb
test
loope
sub
sub
dec
add
retf
test
call
scas
adc
pop
pusha
dec
sub
fidiv
movs
jo
cmps
push
and
xchg
sub
adc
(bad)
sbb
(bad)
jmp
xchg
adc
mov
cli
sti
(bad)
out
ss
cmp
push
mov
mov
pop
fucomi
push
xor
xchg
push
adc
sub
or
sbb
and
cmc
and
adc
sub
inc
push
dec
adc
sub
movs
inc
aas
jmp
cmps
inc
mov
push
jle
dec
jg
dec
lods
fmul
das
sub
popa
ret
mov
cmp
cmc
adc
je
push
cdq
ins
lds
xchg
sub
retf
arpl
fadd
adc
pop
inc
mov
cli
pop
test
(bad)
dec
adc
shl
jmp
xchg
xchg
xor
lds
test
outs
dec
ret
mov
xchg
mov
sbb
ror
push
ret
jl
and
inc
and
inc
sar
cli
add
cmp
aaa
xchg
xor
and
dec
xor
repz
push
test
inc
cmp
add
or
xor
inc
jnp
not
cmp
and
inc
sub
aam
xor
cmps
sahf
dec
rol
mov
js
shl
cmc
mov
imul
call
in
xlat
test
or
push
inc
push
sub
fyl2xp1
je
cmp
mov
xchg
mov
stos
sbb
mov
or
mov
xor
daa
(bad)
inc
loope
mul
repnz
sub
sub
add
lods
dec
ins
js
cmp
shl
js
test
mov
xlat
cld
mov
scas
sub
repnz
int3
repnz
loop
push
sbb
scas
lods
xor
inc
add
jmp
or
or
or
aas
lahf
xchg
sub
and
adc
lds
cmps
cmps
xchg
and
dec
lds
dec
icebp
mov
jae
push
stos
ins
ins
adc
sahf
push
loopne
jmp
dec
ds
adc
sub
xchg
mov
dec
xor
xchg
inc
sbb
dec
jecxz
add
push
outs
jl
imul
enter
mov
xor
pop
mov
bound
inc
mov
jecxz
ret
cmps
retf
mov
clc
in
mov
scas
xor
adc
adc
and
cmp
adc
cs
(bad)
mov
adc
xor
xchg
shr
xchg
add
inc
and
mov
jo
add
push
mov
jmp
dec
imul
mov
jo
push
scas
adc
or
aam
or
dec
pop
and
test
pop
xchg
(bad)
hlt
jne
int
mov
shr
lods
outs
push
push
and
push
adc
aad
xchg
hlt
test
mov
in
div
xchg
ja
outs
aaa
repnz
mov
sbb
jge
imul
pop
retf
jle
(bad)
je
outs
mov
or
inc
xor
test
adc
or
mov
(bad)
bound
shl
jmp
je
fimul
out
outs
ds
repz
xor
mov
test
shr
popf
(bad)
jb
jae
aam
push
mov
mov
cmp
mov
mov
mov
lds
and
cmps
out
push
enter
pop
out
std
mov
or
ror
jno
dec
dec
test
cmps
sbb
jbe
inc
fnsave
xchg
jmp
lahf
test
out
(bad)
test
jo
icebp
inc
jne
test
sbb
add
adc
in
pop
std
jae
mov
mov
xchg
inc
daa
xlat
sub
cmc
sti
dec
stc
add
imul
jg
mov
push
pushf
mov
jmp
add
mov
iret
xchg
sub
iret
xchg
imul
add
(bad)
pop
call
icebp
mov
in
jnp
jo
rcl
pop
xchg
nop
mov
inc
pusha
cmp
cmp
pop
outs
cmps
mov
aas
jmp
loop
cli
mov
(bad)
std
mov
mov
adc
rcr
cld
inc
push
push
jmp
js
add
inc
pop
pop
repz
and
inc
pusha
cs
sti
(bad)
mov
or
(bad)
push
es
mov
lea
stos
jns
inc
bound
cli
pop
cld
jle
mov
jl
inc
(bad)
lea
es
gs
push
push
sbb
jmp
mov
jp
pop
test
retf
(bad)
das
stos
sar
in
push
xor
cld
aas
in
std
cld
arpl
mov
jl
ror
jno
popf
push
or
fild
fisubr
rol
dec
gs
cmp
repz
out
cmp
gs
(bad)
or
xchg
jecxz
cmp
xchg
hlt
call
fistp
outs
adc
inc
arpl
jns
loope
sti
movs
out
mov
pop
pop
mov
cmps
dec
es
cmps
xchg
sbb
int
stos
popf
sub
xchg
mov
push
daa
jmp
ficomp
sub
adc
cmps
xchg
push
mov
jae
in
cmps
add
pop
push
xchg
cmps
inc
mov
ror
jb
mov
xchg
outs
or
or
cld
int
mov
lea
mov
push
test
pusha
movs
xchg
xor
ret
ins
mov
sub
xchg
fistp
xchg
xchg
out
sbb
push
push
aam
mov
inc
enter
mov
dec
mov
rcr
je
pop
jle
xchg
imul
hlt
pop
cmp
push
jecxz
loop
jge
stos
jns
cmc
je
xor
daa
movs
pop
mov
cld
pop
jnp
fsubr
pop
loop
adc
dec
push
mov
add
jo
ds
sar
xchg
xor
adc
ds
push
in
outs
or
xor
push
dec
daa
xchg
lods
daa
in
retf
les
rcr
sub
jb
in
fistp
cwde
push
rol
aas
outs
xchg
inc
xlat
xchg
cmp
lea
mov
adc
pop
popf
jo
rcr
xor
test
in
jns
mov
pop
jle
addr16
aas
xor
sbb
add
cmps
fmul
jnp
ficomp
arpl
inc
pop
sbb
push
or
mov
dec
movs
xchg
les
add
lahf
loope
inc
xchg
rol
(bad)
(bad)
push
lds
aam
lds
cmp
mov
sbb
mov
sbb
pop
(bad)
add
shl
hlt
mov
xchg
mov
push
push
sub
mov
adc
and
imul
add
cmp
sahf
cmps
and
cmps
scas
xlat
pop
aam
pop
adc
sub
and
mov
(bad)
jecxz
int3
jle
nop
mov
int
outs
in
push
out
aas
dec
or
call
mov
cwde
jmp
add
dec
pusha
push
icebp
repz
cmp
cmp
mov
pop
push
xchg
sub
push
sub
dec
xchg
mov
mov
dec
in
jmp
enter
mov
or
inc
add
out
pushf
std
popf
inc
(bad)
in
fisubr
imul
mov
sub
repnz
lahf
addr16
aam
fdiv
xchg
mov
mov
sub
punpckhwd
enter
dec
mov
sti
and
mov
add
xor
repz
pop
lahf
pop
mov
leave
stos
test
add
sub
cmp
pop
mov
dec
dec
dec
xor
xchg
dec
dec
push
push
inc
ret
mov
jle
mov
fadd
imul
push
add
mov
adc
call
retf
xor
mov
add
push
fisub
mov
add
das
mov
sub
cli
jnp
mov
push
loop
cmps
dec
adc
psllq
cmp
jne
or
adc
fcmovne
push
icebp
add
shl
and
cwde
in
push
rcl
xchg
(bad)
jmp
sub
outs
daa
push
pop
mov
dec
pop
jge
iret
repz
addr16
adc
sbb
sar
repz
xor
shl
add
test
lea
bound
lds
inc
adc
adc
and
arpl
mov
retf
mov
stc
cld
inc
aam
adc
fcom
sahf
pop
loopne
xchg
aad
inc
pop
adc
mov
pop
and
jno
aad
cs
mov
mov
push
pop
dec
sbb
(bad)
push
lea
inc
push
fsubr
imul
xchg
enter
jae
jmp
inc
test
mov
cdq
and
test
push
fmul
mov
mov
mov
pop
repnz
mov
and
leave
outs
push
sub
(bad)
fsubr
add
retf
adc
pushf
lods
dec
mov
sbb
cmp
push
stos
adc
dec
inc
jbe
dec
sbb
test
add
sbb
(bad)
sahf
mov
push
loope
jge
mov
mov
sub
pop
leave
sbb
pop
mov
inc
ret
enter
push
std
cmp
gs
fcomp
adc
xchg
int
jl
scas
push
lds
adc
sub
js
sub
stos
dec
add
test
fs
imul
(bad)
lock
sti
aas
out
loopne
mov
data16
xor
in
inc
cmps
sar
mov
add
pop
add
rol
out
cmp
add
ja
mov
cmp
(bad)
cmc
jg
sub
dec
cmc
push
push
and
loop
or
sbb
pop
pushf
pop
sbb
xchg
loop
xchg
and
jbe
jo
pushf
pop
jmp
leave
mov
xor
daa
push
pop
loope
cs
pop
pop
push
and
lea
in
scas
out
shr
stc
jae
out
popa
ror
and
fstp
loopne
and
cmp
das
sub
data16
push
cmps
les
add
repnz
repz
imul
jnp
lea
into
cmovae
outs
movs
in
in
leave
(bad)
xor
dec
lods
jb
loopne
not
je
loope
push
xor
in
test
lea
in
daa
or
adc
outs
dec
dec
pop
jecxz
xchg
stc
test
int
mov
les
dec
inc
pop
cwde
lds
dec
sub
dec
adc
dec
fidiv
(bad)
(bad)
mov
push
mov
outs
lahf
dec
sbb
cmp
push
and
push
inc
or
jne
mov
es
je
dec
(bad)
inc
les
mov
push
sub
mov
jae
push
lahf
outs
sbb
sbb
xchg
mov
mov
sub
test
sbb
mov
sbb
stos
and
aam
mov
sub
stos
xchg
stc
mov
rcr
mov
clc
test
jno
dec
sbb
into
mov
cmp
ret
adc
cmps
gs
push
std
in
in
push
adc
or
and
lods
retf
and
sar
and
bsf
(bad)
xor
push
pop
test
shl
push
repz
or
imul
cmc
out
in
xor
push
add
sub
and
scas
pop
int
mov
jecxz
xchg
pop
leave
not
pop
pop
test
mov
inc
scas
inc
jns
movs
cmp
add
jle
hlt
stos
fisttp
shl
out
jmp
aaa
cli
jo
jbe
add
add
jnp
push
leave
rcl
jle
jmp
ins
mov
mov
add
leave
loop
sub
push
mov
fidiv
shl
jns
sub
cmp
mov
call
test
mov
shl
iret
call
push
xchg
cmps
or
push
sbb
and
push
pop
fst
rcl
inc
add
adc
jecxz
jnp
call
lods
xor
and
pop
pop
mov
test
mov
pop
add
xchg
xor
cmp
(bad)
ins
ins
sub
inc
pusha
out
sub
pop
es
call
sub
jl
add
fidivr
sar
mov
imul
je
(bad)
test
jae
and
add
xchg
imul
mov
mov
dec
sbb
mov
popa
push
mov
mov
push
call
(bad)
aas
rcr
jns
int
(bad)
push
add
push
mov
iret
add
lahf
dec
adc
and
ret
sbb
in
loope
jg
retf
movs
es
movs
jmp
hlt
mov
push
xchg
and
and
sbb
or
(bad)
pusha
pop
mov
test
mov
loop
clc
dec
ffree
adc
sub
sbb
jecxz
cmps
dec
das
add
pop
(bad)
fcomp
cmc
jns
push
out
dec
cwde
ins
xchg
and
inc
sub
inc
and
aaa
xchg
jp
mov
daa
lods
and
pop
jecxz
lahf
ins
out
mov
xor
aaa
mov
mov
test
(bad)
xchg
lds
cli
push
xor
pop
aam
sbb
cli
(bad)
iret
mov
push
lahf
sbb
push
inc
pop
xor
pop
test
fs
inc
dec
dec
and
cmps
add
xchg
sub
fild
mov
adc
mov
cld
mov
int
dec
jmp
add
retf
iret
xor
call
mov
int3
mov
xor
add
and
in
push
addr16
push
in
scas
push
add
pop
mov
popf
imul
sub
ret
push
movs
xchg
test
ret
push
xchg
loope
int3
mov
shl
(bad)
jmp
xchg
dec
or
(bad)
cli
fld
mov
daa
mov
(bad)
push
std
(bad)
lahf
dec
pop
xchg
and
sub
mov
add
xchg
jo
call
(bad)
loop
je
popf
inc
fwait
adc
fcom
mov
popf
inc
dec
idiv
test
xchg
pop
push
sbb
push
jl
add
xchg
fwait
jg
push
pushw
xor
test
add
mov
std
cmp
push
xor
aam
dec
mov
sbb
je
sub
mov
repz
or
cmps
sbb
into
mov
in
pop
ficom
inc
dec
pop
add
xchg
stos
test
mov
cmp
jp
xor
xlat
aaa
xchg
pop
js
push
jg
test
pop
jbe
push
movs
(bad)
cwde
cmp
xor
jmp
(bad)
push
inc
push
or
dec
adc
imul
arpl
ins
int
and
dec
or
in
pushf
movs
inc
retf
pop
fbstp
pop
rcl
jp
mov
push
mov
std
lahf
jno
pop
lds
xchg
inc
jle
add
sbb
and
dec
nop
bswap
mov
sub
sbb
and
dec
jmp
icebp
add
cmps
sbb
push
inc
addr16
call
movs
sub
icebp
adc
inc
sahf
mov
xchg
lods
add
or
fsub
cwde
mov
aaa
push
adc
push
cmp
push
js
test
inc
or
jo
stos
xor
xor
jns
aad
cmps
add
es
jbe
ins
or
pop
retf
xchg
cmps
push
jnp
add
and
and
cmp
mov
(bad)
jo
out
mov
sbb
mov
xchg
ret
or
stos
push
dec
leave
cmp
imul
or
adc
cmps
dec
xor
into
jp
nop
vunpckhps
mov
sub
sub
scas
stc
cmp
in
scas
and
mov
pop
icebp
add
cld
jnp
mov
idiv
(bad)
pop
sbb
xchg
and
sub
cmp
cld
iret
dec
lods
sahf
dec
xchg
cmps
xchg
inc
test
repz
sahf
cmp
mov
mov
sub
adc
imul
mov
mov
dec
(bad)
movs
mov
loopne
xor
arpl
outs
mov
or
js
xchg
repz
mov
mov
adc
loope
push
out
mov
jmp
cmp
push
aad
js
aas
adc
int
popa
aad
dec
xchg
add
test
call
adc
jno
std
popf
sbb
inc
jns
(bad)
push
add
mov
mov
stc
hlt
push
rol
adc
adc
pop
mov
sbb
inc
loop
jg
adc
mov
ret
in
cmp
cli
jae
or
lds
leave
pusha
or
jg
pop
push
add
data16
and
adc
inc
push
dec
(bad)
inc
sbb
pmullw
jb
cmps
sar
xchg
outs
pop
sbb
sub
(bad)
mov
or
mov
js
jo
pop
and
sbb
shrd
pop
jmp
(bad)
mov
cld
and
cmc
sbb
sbb
cmc
push
jg
push
xor
lahf
cs
pop
and
lock
out
aas
fdiv
dec
jecxz
cmps
xor
sbb
imul
add
stc
inc
(bad)
cmc
aad
push
push
arpl
rcr
loop
aam
test
fbld
push
test
add
(bad)
mov
and
cmp
jge
imul
mov
in
(bad)
push
dec
test
loop
mov
inc
and
lahf
sub
push
xlat
dec
sub
out
iret
mov
mov
sub
jl
inc
ds
add
imul
fidiv
mov
and
dec
imul
ror
push
movs
pusha
dec
jp
scas
lea
fild
sub
sub
out
sub
pop
rol
(bad)
xor
sub
xor
xor
int3
xchg
jmp
push
dec
xchg
out
pop
mov
and
in
and
test
cmc
jecxz
inc
xor
push
pop
out
ss
bound
fcmovnu
int3
ret
mov
mov
out
dec
sbb
pop
adc
push
sbb
jmp
push
push
fwait
das
dec
fwait
adc
mov
call
rcl
dec
or
mov
dec
test
fcmovnu
cmp
lds
lods
test
sbb
shl
test
shl
fldcw
inc
xchg
sbb
add
cmp
cmp
inc
pop
rcl
dec
push
and
(bad)
aam
push
popa
adc
mov
stc
gs
mov
mov
push
dec
jmp
sbb
ret
(bad)
xchg
push
xchg
(bad)
mov
dec
outs
loope
sub
fs
stos
and
cmp
adc
fst
dec
xor
add
dec
fldenv
(bad)
push
mov
neg
shl
sub
sbb
pop
outs
push
sub
ss
cmp
dec
add
bswap
std
inc
test
fsub
out
fiadd
or
(bad)
das
sti
or
call
or
inc
or
outs
mov
fisttp
ret
adc
sbb
push
pop
in
and
or
inc
cdq
push
inc
test
and
or
mov
push
stos
in
mov
mov
adc
mov
pop
adc
push
test
push
mov
cwde
or
ins
adc
in
in
dec
sub
xchg
jnp
push
push
bound
test
sbb
and
sbb
jmp
in
inc
retf
sti
mov
xor
mov
imul
je
mov
loopne
dec
arpl
dec
adc
xchg
or
out
push
xchg
jae
jecxz
dec
pop
in
rcl
inc
ror
dec
dec
push
xor
mov
out
cmp
adc
out
sbb
imul
pop
retf
test
add
shl
in
mov
cmps
mov
add
call
dec
push
bound
stos
movs
nop
aam
push
lods
jo
sbb
pmulhuw
loope
cmp
(bad)
mov
fs
ret
xor
xlat
movs
sti
push
sub
sbb
inc
pop
mov
inc
(bad)
or
push
cmp
ins
cmp
mov
and
sub
cmps
sahf
add
push
sbb
and
sub
jmp
retf
into
add
arpl
mov
mov
imul
lahf
or
test
push
push
push
mov
aam
call
imul
jmp
mov
push
mov
mov
inc
test
mov
jp
repnz
cwde
stos
test
mov
pop
push
jecxz
or
xor
pop
pop
ins
dec
jae
test
jmp
add
xchg
out
push
out
ins
clc
cli
jnp
mov
or
stos
add
mov
fstp
and
dec
(bad)
ins
mov
inc
sti
sub
mov
pop
xchg
sbb
movs
adc
das
sbb
(bad)
sbb
inc
cli
pop
clc
sti
imul
mov
int
dec
sub
add
add
pop
and
(bad)
scas
stc
xor
cld
cli
push
jecxz
xor
stos
aas
xchg
push
call
adc
sub
mov
sub
std
sar
cmp
xor
sub
jmp
or
inc
vpsllw
push
pop
(bad)
std
xchg
push
adc
shl
sub
test
test
jmp
adc
or
js
add
mov
fucomi
cmp
xchg
mov
lods
or
inc
jg
shl
mov
jae
jge
loopne
mov
je
pop
pop
adc
stos
lahf
push
push
inc
mov
or
inc
inc
or
dec
pusha
sti
mov
and
sub
cdq
pop
retf
mov
mov
cmp
pop
jbe
inc
and
xlat
mov
add
push
icebp
sbb
jp
hlt
and
loope
mov
lock
loopne
push
iret
rcr
cld
(bad)
fst
mov
mov
pushf
xor
fsub
in
or
in
fs
(bad)
cmp
sub
adc
and
dec
(bad)
aam
lea
push
fisttp
rol
add
sbb
push
addr16
fcmovnbe
dec
out
inc
das
fsubr
fld
cld
mov
push
xlat
sub
or
xor
and
push
xchg
and
mov
or
outs
pop
xchg
jb
sub
cmps
retf
xchg
lock
sub
push
mov
out
mov
not
loope
scas
xlat
enter
std
pop
mov
in
mov
inc
int3
add
dec
ret
pop
add
adc
add
lds
or
cld
imul
scas
outs
neg
enter
push
icebp
xchg
push
xchg
mov
fwait
movs
jbe
or
inc
and
sbb
cmps
in
neg
sbb
movs
ret
dec
inc
enter
jnp
mov
mov
inc
in
and
xchg
push
jmp
sbb
pop
push
and
xchg
sub
sbb
aam
and
xlat
jne
mov
cmp
mov
add
(bad)
out
push
aas
popa
repz
je
xlat
jno
adc
leave
pushf
popa
xchg
push
dec
and
jmp
sbb
fdivr
add
cmp
jl
out
or
dec
mov
or
jmp
test
dec
xchg
cdq
lods
bound
lds
xchg
pop
cmp
bound
add
(bad)
inc
xchg
retf
xchg
pop
dec
sti
(bad)
xor
push
cmp
inc
add
sbb
ret
outs
xor
pop
dec
mov
fld
inc
and
rol
and
jp
ror
sub
lea
movs
xchg
int
jne
stos
xchg
dec
fiadd
stc
comiss
clc
int3
outs
or
test
fsin
stos
fiadd
and
xor
daa
repz
jno
aas
outs
inc
dec
fwait
jno
jl
pop
push
(bad)
(bad)
rcl
xor
add
lods
jne
mov
adc
mov
pop
push
mov
mov
xor
pusha
xchg
add
pop
movs
sbb
(bad)
shr
adc
fstp
add
jge
pop
retf
movs
xchg
mov
cmp
push
add
dec
daa
pop
mov
add
push
out
inc
lahf
pop
in
push
xchg
sbb
rcr
daa
cmps
popa
mov
jns
mov
adc
push
scas
movs
push
sub
test
push
mov
in
fdiv
inc
add
mov
mov
and
cdq
pop
mov
sub
or
rcr
jmp
and
jno
adc
out
cmp
scas
lock
out
or
sub
rcr
push
push
sub
aam
rol
push
aaa
mov
test
inc
ficom
ja
(bad)
dec
sub
or
in
inc
push
jp
jno
dec
mov
inc
mov
xor
mul
fistp
(bad)
(bad)
popa
stos
test
inc
iret
in
inc
mov
dec
lea
adc
gs
push
shl
push
aam
ret
movs
into
daa
add
repz
cmp
adc
pop
lea
mov
lods
pop
rcr
sub
mov
fsubp
jecxz
inc
inc
fs
in
sbb
sub
add
add
add
ds
mov
dec
fidiv
mov
enter
ss
fwait
pop
dec
lods
out
dec
xchg
push
dec
in
cwde
(bad)
cli
xchg
jb
dec
push
(bad)
inc
stos
std
pop
sub
adc
mov
add
push
mov
jmp
aas
jecxz
addr16
loop
add
push
mov
sub
ror
add
pop
jns
xor
cmp
inc
ins
inc
inc
(bad)
adc
inc
xchg
dec
or
pop
mov
test
fdivr
sti
jg
mov
retf
adc
xlat
retf
movs
adc
mov
sbb
inc
gs
retf
stc
cmc
fnstsw
cdq
xchg
cmps
pushf
add
aas
and
jo
es
fcomip
out
push
into
iret
sbb
lods
aas
aad
sahf
xchg
(bad)
xchg
pop
enter
add
or
js
(bad)
adc
cmp
test
jg
dec
mov
fcom
inc
test
dec
sub
dec
mov
icebp
sub
(bad)
xchg
repnz
xchg
scas
dec
sbb
pop
xchg
scas
adc
loop
stos
xor
out
jecxz
sar
gs
pop
cmp
push
adc
fist
in
leave
gs
push
pop
(bad)
sub
addr16
pop
jp
adc
cmps
dec
push
scas
in
std
jle
repnz
ins
mov
jne
adc
jle
lea
out
inc
(bad)
mov
rol
mov
xor
sub
imul
jle
dec
mov
popa
mov
sbb
je
out
popa
(bad)
outs
(bad)
out
test
jge
imul
cmp
inc
push
jg
pop
mov
(bad)
jmp
mov
cmp
xchg
mov
ret
mov
cli
fdivrp
add
jmp
test
mov
push
xchg
push
fiadd
(bad)
stc
cli
popf
adc
push
or
mov
pop
(bad)
retf
xchg
fbstp
sbb
sub
lahf
hlt
cmps
retf
repnz
hlt
and
xchg
gs
sub
vmwrite
fcomp
lods
test
cmp
add
or
adc
int
inc
inc
sbb
pop
xchg
dec
jmp
xchg
inc
rol
and
inc
ds
add
sbb
in
scas
xor
and
or
rcl
inc
and
add
pop
dec
loop
jne
outs
(bad)
cmps
int3
lds
push
sbb
xor
push
xor
push
inc
adc
rol
retf
outs
gs
jg
out
clc
push
fs
mov
push
cwde
and
sti
jle
sub
mov
inc
add
push
cmps
stos
dec
shl
outs
(bad)
xchg
retf
mov
cmps
fwait
add
retf
les
jl
dec
inc
(bad)
lea
rol
bound
std
add
int
cmp
inc
ja
or
sub
jle
lods
push
xchg
add
test
inc
ins
icebp
inc
lods
mov
cs
mov
aam
lea
xchg
pop
daa
adc
jmp
fs
xchg
mov
xchg
inc
lea
pop
mov
movs
xor
mov
adc
sbb
lods
inc
cmps
and
cmps
push
cli
inc
lods
pop
(bad)
pop
gs
test
lods
sub
hlt
(bad)
mov
(bad)
mov
sub
jl
and
push
pop
gs
dec
push
daa
jmp
mov
fwait
pop
sub
adc
not
mov
dec
(bad)
in
in
in
xor
ret
pop
add
aam
xchg
aad
adc
sub
xchg
and
inc
(bad)
fs
and
xor
call
imul
mov
mov
jmp
movs
mov
inc
xchg
out
call
imul
cmc
sub
sti
dec
xlat
xchg
jbe
dec
sub
rcr
rcl
or
add
loop
lahf
dec
pop
xchg
inc
pop
mov
popa
pushf
icebp
cmps
jp
neg
xor
sbb
(bad)
jecxz
pop
test
mov
inc
stos
mov
out
(bad)
fisttp
lea
pandn
inc
push
cmp
dec
sub
add
xchg
les
jge
fdiv
fnsave
sti
aas
aad
rol
repnz
movs
or
nop
cdq
retf
cmps
sar
adc
ror
or
lds
adc
pushf
aaa
adc
add
or
(bad)
adc
shl
mov
imul
mov
inc
ror
push
or
jp
dec
inc
call
cmp
jecxz
call
xchg
or
or
fld
inc
scas
stos
pushf
div
add
in
sbb
push
xchg
aaa
adc
push
and
test
daa
test
aaa
aam
xor
hlt
sub
in
dec
mov
(bad)
rcr
fwait
leave
xchg
mov
pop
aas
cmp
sub
pop
ret
xor
jo
inc
ret
lea
mov
call
jae
in
enter
push
xor
fidivr
mov
sbb
inc
ins
inc
sub
or
idiv
sti
sbb
inc
rcr
add
jno
jo
add
pop
ds
and
aas
aam
xor
(bad)
ds
aaa
push
push
or
ins
pop
xor
ds
sti
leave
mov
and
scas
repz
mov
xchg
and
inc
cld
jnp
fisubr
mov
mov
inc
add
aas
outs
pop
mov
fwait
cmc
outs
pop
mov
or
jge
push
jnp
sub
xchg
push
lea
nop
sub
adc
inc
jns
xchg
adc
push
ret
popa
out
dec
imul
test
adc
jmp
mov
cmp
dec
fadd
nop
fsub
xchg
stc
xor
push
je
iret
arpl
rol
sti
jbe
aad
or
and
dec
mov
out
jne
fsubr
and
dec
stc
dec
push
test
inc
push
mov
int
mov
mov
repz
(bad)
mov
add
sbb
jns
imul
sbb
in
std
scas
aam
inc
imul
icebp
push
push
sbb
std
mov
mov
mov
dec
ja
add
addr16
bound
push
bound
movs
or
les
dec
in
mov
and
xchg
jmp
push
and
shr
iret
sbb
or
adc
or
or
pop
ds
(bad)
sar
pusha
jge
mov
sub
mov
cmp
push
inc
dec
lock
pop
xchg
cmps
inc
cmp
xor
cmp
jmp
fstp
js
pop
cwde
arpl
test
ret
loop
jp
pop
repnz
aam
cmp
movs
js
in
mov
jnp
cli
ins
arpl
and
pop
jno
in
inc
dec
retf
mov
push
shl
xor
dec
ins
or
js
fcom
fld
fisub
jmp
jg
jle
jmp
and
cwde
pop
popa
jo
inc
lea
cmps
mov
into
jl
into
gs
call
inc
and
fs
enter
push
xchg
xchg
pusha
push
out
mov
in
fisttp
rcr
xchg
sub
and
mov
mov
push
sbb
aam
lds
fnstsw
inc
jne
xchg
sahf
cmp
xor
int
push
in
xor
adc
ret
lahf
int
mov
stos
push
xor
push
and
cmovbe
add
in
pop
test
ficomp
xchg
arpl
add
add
add
(bad)
cmps
sub
(bad)
rcl
ret
enter
div
sbb
mov
adc
out
pop
(bad)
inc
mov
es
adc
pushf
push
jle
sbb
inc
fidivr
shl
in
mov
out
or
leave
retf
cmp
dec
push
ds
sub
and
mov
pop
inc
mov
inc
mov
sub
or
test
xor
lods
mov
pop
cmp
dec
mov
ja
inc
mov
push
outs
dec
(bad)
int3
pusha
stos
sub
push
fnstenv
(bad)
push
bound
mov
aam
cmc
jg
sti
add
sti
(bad)
jmp
test
or
imul
xchg
pop
push
mul
int3
fist
mov
jmp
inc
pusha
mov
xchg
out
pop
cwde
pop
dec
lahf
(bad)
cmps
cmps
rcl
inc
adc
repnz
popa
jbe
cmp
call
test
inc
and
into
push
in
fistp
mov
das
or
faddp
nop
push
xor
jecxz
cmp
xchg
inc
jbe
mov
xor
gs
test
loope
jb
mov
add
scas
int3
iret
push
out
jle
mov
push
sub
xchg
or
fild
inc
mov
fdiv
ficomp
dec
mov
or
add
sahf
mov
fwait
cmp
pop
test
stos
pop
movs
push
or
or
daa
mov
pushf
sbb
push
xchg
inc
dec
mov
push
and
cmp
mul
sti
jnp
fadd
fistp
cmps
lahf
lahf
clc
jp
in
push
ins
div
dec
xchg
(bad)
cmp
add
dec
sub
addr16
stc
xor
test
mov
add
and
cmp
adc
pushf
xlat
repnz
cmp
in
test
pop
shr
inc
cmps
retf
xlat
cmps
mov
mov
pusha
sbb
push
std
ins
and
cmp
lods
cmp
inc
adc
inc
sti
sub
std
pop
loope
shl
dec
aad
nop
inc
fs
sahf
sub
and
add
(bad)
fmul
pop
sbb
add
jns
sahf
mov
pop
dec
lods
nop
cmp
adc
mov
cmp
iret
es
cdq
test
dec
retf
stos
xchg
test
lea
and
rcl
sahf
cmp
(bad)
dec
sbb
pop
jecxz
rol
in
mov
pop
int
dec
cmp
add
inc
dec
sahf
jns
addr16
xor
cmp
sub
push
(bad)
daa
(bad)
movs
jns
pop
push
and
sar
sti
push
ins
jns
(bad)
jmp
dec
dec
movs
mov
adc
xchg
out
jmp
xchg
cmp
xor
jle
inc
repnz
(bad)
mul
push
add
fwait
ins
sar
les
ret
mov
cmp
rcl
lds
call
or
sub
xlat
ficom
push
dec
push
(bad)
int3
push
mov
mov
sbb
or
jl
inc
ds
sub
and
in
shl
push
fild
and
ror
stc
cmp
sub
es
scas
(bad)
mov
ss
mov
imul
and
lahf
in
mov
jae
sub
bound
popf
inc
call
sahf
cmp
or
dec
pop
inc
shl
pop
mov
shl
(bad)
fidivr
adc
push
lahf
sbb
or
jmp
push
btc
xlat
div
outs
cdq
ins
cmps
mov
jno
arpl
add
jle
aad
jl
fnstenv
jl
fst
out
jns
leave
neg
(bad)
fstp
sub
push
inc
inc
aam
and
(bad)
sti
(bad)
out
out
push
mov
dec
shl
jae
push
xchg
cmp
aaa
jmp
gs
xchg
(bad)
xor
iret
in
imul
lds
dec
dec
scas
stos
retf
inc
arpl
into
ror
jo
inc
(bad)
lods
std
test
mov
ins
leave
push
adc
xchg
push
inc
call
cmp
xchg
lods
outs
push
arpl
pop
popf
dec
sbb
loop
jo
test
je
cmps
fimul
popf
xchg
std
retf
clc
stos
mov
dec
xchg
sahf
mov
movs
lahf
adc
ds
sbb
adc
mov
rcl
in
out
ja
mov
idiv
call
loop
jae
push
mov
popf
ret
push
(bad)
shl
pusha
add
popf
adc
movs
mov
xor
cdq
fistp
arpl
popf
cmps
cmps
ficomp
mov
xchg
loope
ror
mov
dec
loope
rcr
test
popa
in
je
in
imul
xlat
pop
xor
es
out
mov
sub
or
push
xchg
movs
bound
jge
imul
ret
adc
pop
add
(bad)
ds
add
pop
push
inc
add
jl
ds
cs
mov
mov
add
mov
jnp
mov
xchg
push
dec
push
mov
shl
mov
lock
xor
push
ret
and
(bad)
sbb
(bad)
push
pop
cwde
xchg
mov
mov
mov
aam
into
cmp
xchg
dec
cmp
and
pop
cld
sti
or
rcr
mov
scas
push
pop
sub
hlt
xchg
imul
xor
adc
push
sbb
mov
out
bnd
push
inc
test
push
mov
adc
dec
(bad)
mov
mov
or
icebp
imul
sbb
sbb
xor
cmps
lahf
aas
pop
das
mov
es
in
mov
inc
mul
mov
leave
sbb
fs
icebp
cmps
add
test
add
xor
pop
retf
sbb
iret
aas
in
je
xchg
jnp
rcl
inc
add
stc
mov
mov
xchg
int3
xlat
cmp
mov
and
xor
xor
lds
inc
dec
mov
(bad)
xlat
jno
ins
jae
and
pop
jge
push
and
push
add
xor
das
lea
lea
ja
lods
push
mov
sbb
inc
fisttp
mov
pop
push
push
dec
das
mov
or
stos
mov
jo
gs
jge
sub
cmp
dec
and
rcr
pop
pusha
jo
scas
iret
(bad)
pop
jecxz
ins
bound
aam
mov
ror
imul
aas
imul
jne
xor
lods
adc
inc
and
and
jle
(bad)
test
(bad)
or
mov
cmp
jle
loopne
xor
aad
jbe
mov
inc
or
int
sub
out
leave
inc
ret
stos
mov
retf
mov
retf
icebp
nop
je
jnp
in
popf
imul
xor
or
cmc
hlt
sti
jp
jle
lahf
mov
push
movs
adc
enter
stc
lahf
pop
push
pop
pop
adc
push
mov
stos
adc
cmp
out
mov
sub
test
fxam
mov
dec
push
js
pusha
and
add
scas
retf
mov
push
ret
and
call
nop
xlat
push
retf
dec
and
repz
push
ja
pusha
jmp
push
daa
imul
(bad)
iret
cmp
adc
adc
xchg
adc
stc
jle
(bad)
stc
jmp
push
dec
jne
dec
jle
hlt
cmps
scas
inc
mov
ins
adc
xor
cmps
sbb
sbb
add
test
lea
push
inc
sub
cmps
push
lea
mov
push
imul
mov
outs
aaa
pop
xor
int3
mov
sub
cmps
mov
cmpxchg
mov
addr16
mov
push
inc
push
mov
rcr
jg
mov
ret
xchg
dec
push
idiv
inc
loope
xor
or
dec
test
movs
mov
add
sub
fsubr
in
jns
gs
retf
jmp
mov
movs
sub
sti
(bad)
in
cmps
cs
ja
and
(bad)
push
add
and
cmp
or
push
pop
sbb
arpl
jecxz
jno
stos
cmp
adc
add
nop
test
ret
cmp
push
ss
dec
sub
daa
mov
popf
dec
popf
mov
xor
lods
jl
cli
xchg
push
sysenter
in
icebp
test
jp
repz
mov
imul
jmp
mov
jo
add
cmc
not
xor
lods
mov
cmp
xchg
or
mov
and
push
jno
out
xchg
lock
(bad)
adc
mov
repz
rcl
shl
jns
sbb
out
sub
retf
ds
sbb
loope
in
pushf
(bad)
jle
lods
movs
or
mov
jecxz
push
push
stc
jno
jmp
ret
jmp
sbb
sbb
adc
jle
pop
mov
scas
mov
test
jmp
xor
movs
inc
sub
sti
sub
xchg
mov
inc
cli
addr16
test
popa
cli
loope
jo
inc
adc
adc
mov
lahf
and
sub
xchg
pop
test
inc
not
pop
ror
cmps
or
add
cld
jge
dec
loope
and
mov
mov
dec
movs
mov
movs
call
pop
pushf
and
mov
or
sbb
xchg
jnp
scas
sub
xor
pop
adc
aad
jmp
cwde
add
push
mov
inc
fdivr
inc
dec
xchg
mov
pop
pop
xor
dec
xor
mov
inc
xchg
inc
lds
dec
push
fisubr
loope
jo
icebp
fbld
ins
dec
pop
push
push
inc
(bad)
ds
lods
add
xor
or
mov
xchg
sub
mov
xchg
dec
mov
mov
inc
mov
std
add
sub
data16
seta
rcl
xor
pop
in
cmps
xchg
retf
int
add
cli
in
and
and
xchg
fs
(bad)
pop
xlat
fldcw
sbb
mov
inc
fdiv
fiadd
stc
mov
sub
cmps
inc
sahf
pop
mov
out
mov
jmp
pop
inc
xchg
cmps
adc
adc
mov
pop
mov
inc
push
or
dec
nop
mov
(bad)
daa
fwait
test
(bad)
mov
std
out
mov
stos
outs
sti
(bad)
add
dec
mov
psubsw
leave
movs
dec
cmp
retf
std
mov
dec
test
mov
push
sub
xor
jl
mov
add
cs
push
outs
fistp
(bad)
pop
inc
loopne
xor
jg
out
inc
mov
loopne
xchg
cmp
pop
ret
pushf
jno
arpl
inc
sbb
test
cld
and
cmp
sbb
ffreep
es
test
and
xchg
cmc
daa
dec
push
mov
jne
xor
out
cmp
pop
fdiv
mov
mov
xor
jo
mov
dec
movs
cmp
hlt
rol
sbb
test
in
out
sahf
add
cs
retf
aam
xchg
repnz
stc
push
sub
xor
jp
xor
push
inc
mov
dec
pop
popf
aas
inc
hlt
mov
ins
jl
mov
mov
dec
adc
loope
iret
mov
imul
das
inc
jne
add
add
pop
push
push
mov
mov
fnstcw
push
sub
jecxz
and
pop
or
mov
in
sub
aaa
test
inc
leave
cmp
push
sub
push
out
js
dec
xchg
xchg
inc
imul
or
fadd
nop
shl
jne
dec
sub
loop
xor
mov
mov
and
arpl
sbb
scas
inc
scas
jae
xlat
push
ds
lahf
stos
inc
sbb
in
or
daa
div
xchg
add
mov
popa
out
mov
xchg
pop
inc
cli
push
dec
adc
xor
xchg
xor
xchg
addr16
or
enter
add
je
push
mov
sti
cmp
lahf
iret
mov
call
mov
pop
sub
cmp
in
add
xor
sbb
psrlq
shl
dec
ins
pusha
push
mov
inc
pusha
or
sbb
sbb
popa
pop
hlt
xor
les
in
jno
pop
in
hlt
pop
mov
pop
out
and
inc
xor
and
pop
jmp
xchg
in
mov
xchg
dec
push
mov
jnp
ss
add
sub
daa
push
inc
pop
dec
cmp
or
xlat
mov
mov
jg
push
jns
aas
addr16
rol
stos
mov
push
cld
inc
imul
push
sbb
inc
dec
mov
or
ss
jne
pop
(bad)
arpl
ins
ret
cdq
pop
cmp
dec
add
lods
or
adc
in
out
push
fsub
shl
add
or
mov
dec
mov
add
pop
or
jle
push
inc
adc
dec
sub
jge
mov
ffreep
or
dec
cli
cmp
mov
jg
stos
mov
push
push
jecxz
add
sbb
mov
dec
daa
enter
fdivr
sahf
xor
push
sub
inc
inc
sub
mov
xor
js
push
sbb
popa
hlt
push
mov
mov
shr
shr
push
sub
and
jmp
xor
stos
out
out
mov
loope
jo
scas
inc
jle
pushf
imul
sbb
cmps
aad
xchg
pop
pop
fs
ins
jne
shl
movs
add
jle
out
and
inc
sbb
add
push
and
ror
into
or
push
js
ds
sbb
je
fdivr
sub
scas
or
test
jecxz
mov
inc
push
dec
adc
test
lahf
rol
push
idiv
outs
cmps
sub
push
test
sbb
or
pop
into
mov
adc
and
sbb
push
fld
adc
scas
sbb
inc
cmp
mov
mov
mov
(bad)
jb
cmp
inc
mov
sub
adc
les
pushf
xchg
ds
push
dec
mov
dec
mov
cmps
xchg
inc
fs
push
xchg
sbb
xchg
pop
inc
add
and
nop
add
lea
push
in
addr16
or
sbb
xor
or
add
push
pop
cmp
xor
pop
addr16
push
test
sbb
mov
es
inc
xchg
xchg
inc
or
aad
movs
lahf
pusha
or
call
dec
push
fmul
adc
mov
loop
mov
fs
lods
push
or
cmps
pushf
or
imul
dec
mov
in
mov
je
lea
das
test
mov
push
sar
fidivr
outs
push
mov
push
sbb
and
dec
jne
inc
movs
mov
adc
ficomp
retf
push
push
(bad)
sub
icebp
scas
lahf
inc
xchg
fist
dec
mov
rcl
adc
xchg
dec
cmps
sub
mov
dec
leave
sti
retf
in
aaa
or
push
test
xlat
iret
xlat
cmp
pop
or
inc
xor
clc
jns
ds
repz
out
into
popf
adc
in
push
mov
sub
loopne
pusha
xchg
and
add
push
sbb
aas
stos
std
outs
aas
ret
fsub
mov
iret
addr16
jbe
push
jo
lds
jg
call
mov
imul
lock
sub
jno
hlt
inc
repz
jo
cwde
adc
push
push
or
xor
push
adc
cwde
daa
movs
and
(bad)
div
fcmovu
(bad)
jg
cli
inc
xor
inc
push
adc
(bad)
div
pop
shr
push
mov
pop
aas
and
mov
add
pop
popf
mov
and
push
movs
inc
mov
pop
push
pop
inc
mov
push
loopne
in
mov
inc
pop
sbb
add
rcl
movs
dec
push
mov
scas
cmp
mov
add
lahf
mov
and
push
xor
mov
push
and
repnz
lods
jg
shl
das
loop
pop
pop
hlt
enter
(bad)
repnz
aam
jp
out
xor
sub
stos
cmps
std
out
mov
push
jp
fs
bound
pop
adc
sbb
pop
(bad)
jmp
jmp
ds
lods
scas
xchg
neg
adc
into
mov
retf
mov
dec
add
xstore-rng
cmps
add
enter
into
movs
(bad)
sub
lods
mov
sub
fld
cmc
push
scas
xor
retf
mov
nop
cmps
ret
(bad)
adc
retf
mov
jne
out
push
ret
(bad)
sbb
and
outs
std
cmp
loope
jne
loope
in
clc
nop
shr
sub
fucomip
inc
aam
or
or
adc
mov
inc
mov
xchg
enter
mov
jae
stos
jmp
lods
lods
jg
cmc
imul
mov
rol
cmp
in
test
add
into
test
cld
test
out
lea
inc
jl
in
fisttp
xchg
mov
mov
xor
jb
sbb
mov
clc
ins
lods
jns
les
xlat
add
or
jle
lods
xchg
cwde
in
fidivr
cmps
mov
sub
cli
nop
ins
outs
scas
lods
pop
ror
cmps
jge
cmps
shl
rcr
pop
call
stc
push
mov
jb
jbe
fst
cmc
fdivp
scas
stos
icebp
std
mov
lock
mov
adc
sbb
daa
jle
and
std
dec
xor
scas
shl
mov
arpl
sub
mov
daa
sub
(bad)
or
pop
cmp
in
ret
gs
dec
xor
mov
sub
add
les
push
call
iret
dec
aam
call
dec
pushf
js
and
xchg
in
test
cld
adc
sub
dec
data16
aam
lea
push
repz
cmp
std
sub
lods
fwait
mov
and
(bad)
das
loop
jae
and
es
fs
sbb
xor
pop
cmp
push
jecxz
jge
sahf
into
dec
mov
das
and
jns
xbegin
hlt
aaa
adc
mov
bound
inc
and
jecxz
xchg
xchg
push
sub
lahf
add
sbb
inc
dec
push
dec
icebp
sbb
aad
sbb
dec
mov
pop
lods
dec
std
cmps
fdiv
mov
cmps
and
fs
mov
shr
sub
cs
sbb
jne
call
fidivr
cmp
dec
retf
cmp
lea
jmp
mov
inc
add
aam
dec
mov
fidivr
push
xchg
stc
push
cld
mov
test
push
jecxz
pop
jecxz
neg
pop
clc
fbstp
jno
xor
adc
fstp
arpl
out
add
cmps
jns
mov
and
imul
pop
pusha
fldenv
adc
repnz
jecxz
lahf
popf
cmp
add
rcr
jecxz
sub
sub
sbb
and
repz
mov
stos
fisubr
ins
outs
inc
jne
jle
dec
or
stc
arpl
sub
xor
mov
in
inc
sub
fnstenv
push
imul
adc
setge
and
es
ret
or
add
lahf
pop
cld
mov
inc
xchg
cmps
or
sbb
rcl
sub
fs
sub
xchg
outs
and
sub
add
or
idiv
sub
je
aad
dec
or
push
movs
inc
pop
out
push
sahf
imul
ins
es
or
jg
shr
dec
dec
sti
arpl
dec
push
dec
or
mov
lahf
clc
jge
sub
cmps
test
cmp
imul
add
mov
adc
add
cmps
into
mov
push
cwde
push
mov
jge
xchg
es
dec
test
(bad)
xchg
cmc
sbb
push
pop
and
int
pop
imul
loope
mov
test
push
sar
inc
out
add
sbb
data16
sub
dec
dec
add
sbb
pop
popa
fidivr
repz
aas
aam
ja
push
dec
mov
push
push
cld
or
sub
adc
sub
dec
fs
jno
sbb
cwde
push
aad
hlt
add
ds
cmp
icebp
(bad)
jg
jp
lds
dec
pop
jg
add
int
repz
push
jbe
outs
nop
(bad)
sub
arpl
and
xchg
(bad)
inc
aas
push
adc
std
xchg
(bad)
lods
inc
push
daa
popa
inc
test
cmp
call
pop
fdiv
xor
lods
imul
mov
cwde
fcmovu
hlt
sub
lods
jle
mov
arpl
jmp
jmp
mov
outs
shr
mov
imul
leave
push
pop
jns
sbb
push
je
lea
(bad)
stos
adc
jl
xor
push
and
repz
push
push
mov
in
(bad)
push
ins
test
mov
mov
lods
fcom
sbb
xchg
mov
push
add
loopne
ins
inc
and
outs
push
xor
dec
icebp
adc
jo
add
cmps
xchg
int3
icebp
daa
test
mov
enter
adc
and
pop
sub
cmp
adc
sub
push
mov
push
nop
(bad)
into
and
and
add
imul
mov
jae
gs
fdiv
push
jl
ret
xor
cmp
and
imul
push
mov
mov
mov
fist
push
retf
iret
xchg
fcmovnbe
mov
in
rcl
in
cwde
or
inc
mov
(bad)
mov
mov
in
test
xor
push
or
sub
pop
mov
cs
(bad)
lods
mov
push
pop
dec
popf
and
or
cmp
aam
add
xor
repnz
xchg
(bad)
cmp
jb
popa
jnp
jecxz
in
aad
pop
add
je
pop
xchg
scas
iret
mov
jae
inc
xor
mov
push
in
scas
ret
push
jmp
fmul
dec
cmp
sbb
and
and
add
cs
mov
lods
pop
jmp
(bad)
(bad)
mov
retf
sub
push
or
mov
pop
xor
jp
lahf
ret
gs
adc
in
adc
adc
push
or
lahf
cmps
ror
outs
sbb
fist
mov
mov
cmp
(bad)
xchg
nop
imul
cwde
call
fild
mov
mov
and
in
xchg
js
fisttp
jb
mov
push
sti
test
cmp
popa
xchg
dec
pop
int3
adc
pop
pop
mov
jb
out
xchg
idiv
dec
xchg
mov
or
test
test
stos
jmp
push
repnz
ds
cmc
ins
addr16
outs
push
jmp
fwait
stos
xor
add
leave
iret
xor
jg
jp
lea
jmp
outs
stc
sbb
xor
dec
adc
xor
jl
jbe
mov
ror
cmp
add
cld
in
in
cli
push
jmp
push
mov
mov
test
pop
inc
cmps
jmp
repnz
sti
sbb
adc
enter
cmp
ror
bound
ds
shr
out
push
rol
jle
xor
mov
adc
ror
ror
in
cdq
mov
test
movs
add
mov
hlt
iret
pop
sti
ja
adc
mov
mov
jnp
xor
ins
add
sub
bound
loope
dec
sub
popf
neg
pop
pop
pop
xchg
icebp
clc
dec
or
add
pop
mov
sub
in
push
add
lock
in
sbb
daa
repz
cmp
sbb
clc
mov
add
or
jmp
mov
mov
mov
enter
mov
sub
xchg
cmp
mov
stos
in
fisttp
and
iret
fs
jae
loop
and
test
jno
aas
xchg
cs
add
xor
push
mov
mov
jae
pop
push
hlt
mov
push
jmp
push
sub
push
adc
jmp
or
ss
inc
push
out
hlt
call
jecxz
xchg
rol
movs
cdq
mov
or
xor
test
loope
cwde
xchg
jg
dec
scas
bound
pop
pop
push
jmp
xchg
cmp
cvttps2pi
or
fsubr
test
mov
dec
gs
mov
imul
clc
jp
mov
rep
jg
rcr
scas
adc
and
fwait
ret
outs
sub
mov
inc
push
xor
aas
(bad)
dec
and
and
(bad)
(bad)
ficom
stos
pop
into
xchg
(bad)
in
jge
xor
addr16
dec
and
xchg
inc
mov
jmp
(bad)
lods
loope
div
adc
mov
mov
stc
sbb
jmp
les
call
cmp
aas
mov
xor
add
ret
(bad)
sbb
ss
aam
inc
in
jge
mov
shl
aad
gs
push
jae
shl
inc
cmp
pop
mov
fs
dec
in
add
adc
movs
pop
adc
mov
scas
test
rol
stc
mov
repz
mov
sub
sbb
mov
imul
int
inc
inc
xlat
and
jmp
scas
aam
bound
ins
into
sub
dec
stos
(bad)
mov
xchg
or
(bad)
jg
jp
push
fld
mov
or
outs
stos
enter
cmc
pop
jecxz
ins
mov
inc
and
push
adc
inc
xchg
arpl
xor
pushf
jg
stc
(bad)
std
test
pop
cs
into
adc
xchg
ins
jno
outs
(bad)
push
fdivrp
test
push
inc
pop
sbb
fsin
outs
xchg
lds
retf
dec
push
push
xchg
mov
sbb
push
jge
sub
push
pop
xchg
cdq
dec
and
arpl
scas
sti
add
or
sub
shr
cmp
sar
pop
nop
cmc
scas
in
jmp
clc
sub
xchg
hlt
pop
cli
fucomip
out
xlat
cs
cmp
mov
(bad)
pop
sub
xchg
or
das
and
cmp
sbb
mov
mov
mov
sbb
mov
test
test
int3
js
nop
add
hlt
jmp
push
xor
and
inc
bound
cmps
cli
pop
call
shl
adc
adc
test
xchg
and
pop
test
push
sahf
add
daa
dec
repnz
cli
pop
idiv
rcl
movs
(bad)
cmp
iret
push
rcl
or
inc
xchg
into
and
push
and
imul
push
ficom
je
call
rcl
test
xor
aam
mov
push
test
jb
push
arpl
and
ins
jmp
test
push
jns
test
jbe
daa
xchg
test
and
pop
dec
push
push
int
enter
push
sub
jg
repz
cmp
enter
mov
sub
cmp
in
sub
arpl
or
push
mov
cmp
js
jns
push
and
push
mov
adc
sahf
inc
pushf
stos
mov
loopne
idiv
shl
and
cdq
push
inc
xor
and
fcmovu
inc
mov
sti
aam
sar
jne
sub
loop
sbb
call
mov
mov
adc
jno
dec
cli
test
icebp
mov
mov
xchg
mov
dec
push
pusha
and
lods
iret
add
popa
jb
faddp
shr
rcr
push
or
shr
inc
mov
neg
imul
inc
jmp
dec
jmp
ficom
sbb
jl
dec
rcl
bound
out
cmc
mov
mov
and
xor
popa
aas
iret
in
cmps
in
mov
push
(bad)
and
and
loopne
(bad)
in
jmp
jp
add
sub
xchg
xor
loopne
stos
movs
mov
inc
push
cli
pop
test
fldcw
pop
mov
sub
sbb
jg
inc
push
push
outs
ss
inc
xchg
cmps
xor
push
fiadd
inc
mov
imul
jae
xor
cmp
jnp
mov
addr16
cmps
inc
inc
sub
xchg
jno
push
pop
out
mov
or
xchg
ficomp
ins
pop
pop
xchg
and
int
imul
mov
sbb
inc
mov
xchg
mov
in
fistp
mov
xchg
jbe
xor
pop
and
push
gs
ror
imul
and
aas
loop
push
xor
es
inc
or
push
xchg
loop
out
xor
and
adc
jb
sahf
iret
add
or
xor
dec
test
push
pop
nop
push
hlt
(bad)
mov
std
add
pop
(bad)
push
xchg
scas
adc
and
jns
jns
adc
mov
xchg
dec
sar
pop
(bad)
and
packsswb
sub
stos
and
adc
adc
inc
mov
dec
add
cmp
loope
add
jmp
adc
dec
repz
je
mov
(bad)
cmp
dec
dec
call
out
cmp
pusha
in
out
cmp
sub
push
add
jno
int
inc
cdq
mov
repz
xor
xchg
pop
ds
sub
xor
out
popf
icebp
adc
mov
arpl
pop
bnd
xchg
(bad)
pusha
push
add
mov
or
fsubr
(bad)
cld
xchg
or
jge
retf
rol
pop
lods
fs
lea
push
dec
and
imul
sar
outs
aaa
or
aad
ret
and
mov
dec
test
push
jmp
dec
xchg
dec
cmps
cli
(bad)
mov
popf
imul
(bad)
cmp
js
lock
enter
(bad)
repz
je
xlat
gs
or
movs
xor
fs
push
jmp
pop
mov
bound
pop
in
lock
cwde
mov
hlt
xchg
pop
(bad)
ja
ds
xor
adc
sub
mov
std
mov
jmp
cld
test
adc
inc
jecxz
sub
addr16
xchg
or
icebp
dec
xor
jae
test
fadd
inc
add
push
lds
sub
repnz
push
pop
xchg
popf
add
and
ds
cmps
xchg
sahf
pop
test
mov
sahf
pop
dec
cmc
sbb
mov
adc
or
out
cli
lds
retf
sbb
movs
pushf
xchg
repz
pop
clc
sub
lahf
test
dec
or
cmp
cmp
xchg
cmp
cwde
scas
dec
dec
inc
es
xchg
xchg
dec
std
int3
mov
dec
adc
cmps
and
or
retf
xchg
shl
inc
pop
fld
push
cdq
mov
div
ins
ficom
data16
pop
xchg
and
ds
mov
femms
cmp
mov
mov
add
and
xor
retf
dec
sub
cld
(bad)
arpl
xchg
(bad)
push
aad
mov
xchg
pop
ss
push
or
lea
into
fld
in
imul
ror
sahf
sahf
xchg
mov
test
inc
stos
push
mov
(bad)
mov
not
pop
fdivr
sub
stos
push
test
mov
movs
adc
nop
mov
arpl
and
jp
shr
mov
xchg
push
cwde
xor
aad
pop
and
dec
arpl
push
sub
loop
adc
test
(bad)
lods
pop
out
rcr
xor
(bad)
mov
add
jno
cld
mov
jbe
mov
js
push
sub
dec
or
lods
js
stos
mov
dec
in
mov
aas
ret
sub
movs
pop
imul
dec
sbb
push
dec
mov
out
jmp
mov
push
popf
into
mov
add
jmp
jns
mov
xchg
mov
stc
out
aam
arpl
fstp
jbe
mov
pop
mov
inc
sahf
sbb
push
fadd
int3
inc
dec
(bad)
out
std
scas
int
xlat
dec
jno
fwait
sub
loop
xchg
mov
loope
test
and
sub
out
sbb
call
leave
sti
sub
sbb
scas
(bad)
push
dec
inc
or
mov
stos
leave
ss
push
sub
add
ja
inc
(bad)
popa
aas
scas
(bad)
or
pop
mov
lods
dec
xchg
push
or
sar
sbb
push
push
ret
leave
sub
push
ror
mov
pop
sbb
sahf
jle
je
jnp
mov
jno
jnp
cld
jnp
sbb
fsubr
xor
pusha
arpl
push
xchg
fisub
and
(bad)
inc
jns
jg
ins
addr16
adc
pop
push
or
mov
out
xlat
mov
shl
cs
aam
add
push
out
repnz
cmp
add
and
pop
mov
retf
push
push
mov
stos
cli
cmps
imul
in
inc
inc
add
fmul
dec
jns
mov
fldcw
imul
dec
fs
in
jmp
cmc
push
outs
xchg
cmp
je
int
mov
loop
nop
imul
pop
xchg
dec
js
test
clc
xchg
add
(bad)
(bad)
cmp
rol
mov
stc
rol
aam
mov
push
add
pusha
or
mov
or
cdq
or
repz
fist
mov
lea
fcom
pop
fcom
out
add
out
add
aad
or
push
inc
xchg
lods
stos
fdivr
cs
fstp
enter
icebp
and
retf
adc
ret
scas
xchg
push
lock
mov
repz
pushf
enter
fsub
inc
movs
lahf
movs
(bad)
mov
scas
(bad)
sbb
aas
xor
cs
xchg
jmp
mov
add
adc
jle
jp
cmp
lods
xlat
cmp
test
ins
sbb
inc
jae
adc
cmp
jmp
outs
js
add
ds
fistp
pop
fiadd
call
je
mov
mov
stos
adc
push
in
pushf
pop
adc
pop
jne
nop
or
mov
test
pushf
adc
jb
fistp
sub
sub
int
stc
jno
add
xchg
je
adc
inc
add
xor
add
push
add
mov
fist
cmps
push
lea
mov
sar
sub
cdq
dec
and
pop
wrmsr
mov
ins
push
test
xlat
or
push
mov
inc
loop
mov
mov
int
call
or
dec
(bad)
mov
dec
cmp
mov
retf
stos
fxch
fld
adc
xchg
xchg
loope
cmp
or
xchg
and
add
cmps
in
movs
imul
mov
and
jp
sub
cmc
push
cmp
rcl
jns
(bad)
out
jg
fistp
lods
scas
loopne
inc
add
or
repnz
xchg
or
push
cmp
add
jo
cld
stos
pop
mov
sub
popa
jae
xor
cmp
fcmovnb
call
cli
xchg
in
sti
ins
(bad)
imul
push
jle
inc
dec
dec
inc
mov
jmp
sub
imul
xchg
sbb
adc
sub
or
enter
gs
add
mov
jno
pop
lods
imul
ficom
hlt
jmp
sub
jne
and
xchg
inc
cli
shl
hlt
popf
inc
sub
mov
aaa
in
jg
inc
es
lds
xchg
and
sbb
daa
(bad)
iret
ds
mov
push
iret
adc
push
test
add
cmp
inc
xchg
sti
hlt
xlat
jo
push
aaa
and
shr
scas
xlat
cmp
fsubr
add
std
sub
xchg
popf
or
and
xchg
icebp
cli
(bad)
cmp
and
fdivrp
xor
xor
cdq
pusha
push
cmp
push
jmp
aam
mov
xor
test
sub
(bad)
sar
inc
(bad)
mov
in
adc
call
mov
pop
push
push
lods
mov
mov
lock
mov
mov
xor
stc
pushf
cmc
mov
aaa
dec
cmc
push
pop
lock
cmp
cmp
hlt
adc
movs
daa
xchg
mov
hlt
mov
sbb
mov
mov
outs
pop
iret
cmp
shr
repnz
push
cmps
popf
or
jl
call
jnp
int
lods
adc
cli
jns
pop
mov
sti
or
mov
test
or
mov
dec
jns
dec
and
inc
lea
inc
jne
push
sbb
std
or
fwait
mov
imul
adc
iret
clc
inc
fidivr
nop
jbe
fisubr
dec
inc
sbb
dec
sbb
ds
inc
cwde
std
mov
mov
mov
fnsave
bound
mov
jns
test
xchg
jns
and
cmps
mov
sbb
jg
mov
outs
ins
outs
mov
and
inc
pop
pop
loop
xor
jp
mov
dec
adc
test
adc
mov
mov
rcl
jl
inc
shl
(bad)
stc
add
fnstenv
(bad)
mov
jno
sub
retf
cs
test
iret
xor
push
cwde
mov
sbb
mov
int
ss
sbb
add
sbb
aad
sbb
aam
adc
push
xor
xchg
test
stos
sbb
(bad)
les
push
pop
mov
push
jge
push
dec
fnsave
mov
jbe
(bad)
pop
inc
call
sub
mov
mov
push
inc
popf
jne
cmc
imul
dec
mov
cli
lock
or
xor
mov
icebp
cmp
mov
dec
jnp
adc
aad
inc
add
jbe
stc
mov
ja
dec
out
ss
fisub
inc
mov
lods
sub
pop
enter
data16
jnp
fidivr
cdq
idiv
xchg
or
popf
fidivr
or
xchg
xchg
sub
stc
inc
mov
and
fcmovnbe
in
cmp
sbb
(bad)
aam
mov
cmps
push
jg
pop
in
into
push
pop
inc
pop
or
mov
sub
jmp
mov
dec
jl
pop
mov
das
jbe
mov
add
enter
or
pop
inc
pop
(bad)
clc
(bad)
mov
scas
mov
or
mov
addr16
loop
push
scas
add
mov
mov
test
mov
ins
not
xchg
cmp
popf
add
or
xchg
xor
mov
inc
sahf
sub
pop
fnstenv
(bad)
loop
retf
int3
push
mov
push
mov
push
push
pop
ret
pushf
pop
stos
pop
adc
sbb
lods
xchg
bound
sbb
xchg
xor
ror
jl
out
dec
cmp
mov
dec
xchg
ins
fild
lea
push
popf
es
dec
or
mov
(bad)
out
call
xor
icebp
(bad)
ins
mov
ins
cmp
popf
ret
push
or
mov
imul
addr16
ds
sahf
ja
push
mov
test
add
xor
sbb
ds
mov
jns
aaa
xchg
xchg
lods
mov
fild
sbb
ins
loope
ss
in
stos
enter
mov
or
cdq
call
(bad)
xor
cmps
mov
inc
stc
jns
hlt
or
xor
push
mov
push
fadd
jmp
cwde
cld
and
push
cmc
neg
jnp
in
int3
xchg
sub
adc
mov
cmps
in
mov
push
nop
sub
sub
push
aas
retf
xchg
mov
fstp
push
xchg
stos
pop
sub
fs
pop
(bad)
pop
adc
jb
gs
mov
mov
std
cmp
inc
aas
div
ja
cmp
gs
or
int3
jmp
jge
(bad)
mov
arpl
stos
xor
sub
push
repz
mov
rcl
sub
mov
mov
les
in
(bad)
ja
mov
pop
ins
call
nop
xor
rol
cmps
cwde
sbb
dec
dec
pop
es
mov
fmul
aam
cdq
mov
movs
or
in
fcmovnu
in
repnz
jle
scas
outs
jne
and
push
cmp
push
int3
push
aaa
test
imul
(bad)
(bad)
or
(bad)
(bad)
mov
out
dec
fistp
stos
movs
mov
lahf
cmps
xor
sahf
xor
dec
sub
dec
xchg
sbb
gs
adc
and
les
mov
stos
sbb
xchg
push
cli
test
aad
lds
push
cmp
fisttp
dec
mov
adc
sbb
and
(bad)
cld
adc
jns
cmp
push
push
not
xor
xor
pop
pop
mov
test
add
leave
shr
mov
stc
cmc
ja
pop
sub
push
loopne
dec
scas
or
dec
jno
mov
arpl
adc
arpl
sbb
push
ret
jb
jmp
push
cmp
fdivr
cmp
(bad)
dec
arpl
push
cmp
sbb
(bad)
iret
mov
mov
out
daa
pop
lea
adc
xlat
and
bound
clc
cdq
daa
mov
stos
fs
sbb
arpl
xor
inc
or
fmul
xlat
sar
jb
dec
cmp
jo
outs
fnstsw
inc
mov
je
call
repnz
mov
shl
dec
push
outs
popf
retf
push
xor
xor
cmp
push
jae
xchg
push
push
or
adc
int
xchg
xor
in
fist
retf
jge
fisub
stos
push
xor
and
xor
mov
repz
xor
(bad)
sbb
popf
xor
loope
out
jo
mov
and
ja
push
pop
shl
mov
cdq
mov
sub
xor
push
dec
popa
push
ss
add
outs
sub
sub
imul
xchg
sub
dec
dec
push
push
dec
mov
pushf
or
call
into
adc
inc
or
mov
not
fisttp
sbb
sbb
scas
mov
(bad)
sbb
xor
inc
xchg
pop
sub
retf
in
sub
rcr
jge
out
std
fimul
dec
sbb
cmc
xor
cmp
pop
xchg
test
dec
mov
push
addr16
xchg
inc
mov
les
pop
les
jl
nop
arpl
mov
fidivr
xchg
xchg
sahf
sub
(bad)
adc
int
(bad)
xor
cmp
sbb
sub
inc
fs
out
pop
vmwrite
sub
xchg
mov
lock
xor
add
pop
(bad)
xor
(bad)
dec
mov
add
push
sahf
cmp
adc
movs
imul
popf
addr16
out
call
leave
shr
ror
cmps
fs
fwait
mov
inc
cli
inc
xchg
fcompp
xchg
retf
jno
fcom
sbb
or
into
push
hlt
(bad)
fnsave
adc
xor
cld
test
mov
leave
push
push
add
cmp
repnz
adc
dec
pop
pop
and
imul
jnp
mov
out
int3
loope
lds
rol
(bad)
push
sbb
retf
xor
in
call
cmp
mov
add
pop
ds
mov
pop
pop
into
ja
jb
fcmovnu
mov
cmp
push
sub
xor
in
inc
dec
xlat
pop
das
mov
pop
fsub
out
sub
or
jmp
cmps
les
mov
ss
sbb
sbb
mov
test
dec
or
ror
dec
push
and
xor
and
retf
stos
popf
adc
cmps
aas
pop
jge
mov
popa
adc
ror
test
add
in
or
sub
and
add
jno
(bad)
scas
cmp
call
mov
inc
sub
xchg
(bad)
ds
stos
mov
jo
cwde
aaa
add
mov
in
jne
mov
add
and
or
xor
mov
hlt
fcom
push
jl
ret
dec
je
mov
sbb
or
xchg
xchg
int3
pop
or
sub
dec
mov
mov
scas
ror
push
movs
xor
repnz
stc
hlt
adc
dec
or
push
push
or
cmp
iret
fdivr
pop
xor
pop
ja
outs
in
scas
lds
movs
scas
ret
pop
push
repnz
adc
inc
add
loope
and
retf
lds
mov
adc
inc
cmps
les
cmps
retf
and
out
std
mov
sub
data16
out
xor
mov
cmp
xor
ja
sbb
inc
mov
das
dec
mov
cmp
mov
sub
imul
or
fsubr
loop
sub
add
or
inc
inc
xor
push
(bad)
inc
retf
fwait
movs
add
add
sub
cmp
iret
mov
mov
test
dec
adc
xchg
jmp
cmp
sti
pminub
cs
movs
fstp
cmps
fsubr
dec
data16
pop
ret
mov
(bad)
jecxz
adc
xchg
ret
scas
jno
pop
outs
dec
inc
push
jecxz
fwait
and
cmp
add
out
in
into
jmp
leave
lds
sub
rol
xchg
cmps
xchg
dec
(bad)
xor
inc
sbb
jg
repz
cmp
jge
dec
push
add
or
pop
ja
cmp
or
adc
add
cmp
jnp
(bad)
movs
mov
out
sbb
dec
cmps
lea
rol
push
bound
out
xchg
xchg
mov
jmp
out
fistp
push
mov
sbb
imul
jae
xor
call
xor
arpl
pop
gs
push
adc
cmps
push
push
fistp
add
mov
dec
fild
repz
int3
hlt
add
mov
pop
sbb
adc
sub
pop
in
lods
aad
hlt
dec
xchg
inc
push
sub
enter
mov
loope
mov
sub
sub
xchg
sub
cmp
(bad)
pop
mov
jnp
mov
jae
push
xchg
imul
push
aas
push
sbb
test
and
test
adc
push
or
push
pop
cli
pop
fnstenv
sub
loop
or
pop
inc
dec
add
lods
inc
rol
aas
or
xor
push
test
int3
add
lea
sub
call
xchg
sbb
adc
loope
pop
idiv
sahf
rcr
mov
xor
bound
jg
sti
cmp
nop
mov
daa
mov
ds
pop
pushf
push
shl
cmps
movs
mov
mov
dec
xchg
lods
or
pop
ja
aam
mov
push
pop
and
jae
popa
retf
or
repnz
add
dec
sub
dec
push
retf
push
mov
xor
retf
cld
test
psllq
add
(bad)
dec
outs
in
sbb
xchg
push
stos
mov
push
mov
pop
repz
lods
pop
fdivr
or
sbb
imul
jge
jl
mov
jmp
mov
cmp
push
add
or
jecxz
pop
pop
(bad)
or
pop
into
in
push
fld
aam
out
icebp
stos
(bad)
inc
add
dec
lahf
lea
inc
(bad)
cdq
test
or
mov
mov
dec
xchg
jne
aas
out
popf
retf
(bad)
movs
(bad)
add
push
int
imul
cmp
pop
cmp
in
xlat
pop
mov
scas
add
lods
dec
test
test
mov
xor
mov
(bad)
pop
adc
ret
dec
scas
mov
stos
push
ds
xchg
and
xchg
cmps
pop
shl
pop
sbb
fld
mov
imul
jb
mov
mov
repnz
or
out
pushf
in
mov
pop
mov
mov
ds
(bad)
rcr
popf
or
cmc
loop
in
and
repz
sbb
xchg
adc
rcr
sub
inc
mov
fnsavew
dec
sbb
jmp
ror
jp
cli
xor
add
sub
mov
in
lea
mov
add
leave
sbb
sahf
outs
push
lods
inc
dec
and
jle
mov
pop
xchg
out
jecxz
jbe
in
dec
add
rcl
mov
ds
xchg
retf
imul
mov
xor
jmp
mov
lea
ins
or
and
inc
push
(bad)
aaa
inc
pop
mov
mov
into
out
sbb
jmp
add
aas
imul
inc
imul
or
add
xor
popf
inc
mov
xor
xor
test
and
jae
lea
mov
jbe
mov
pop
add
xchg
dec
mov
jmp
idiv
mov
push
mov
pushf
xchg
pop
sub
xlat
jo
add
xchg
pop
data16
push
xor
jmp
xor
jg
rcl
xchg
dec
out
arpl
pop
xlat
js
mov
fcomp
mov
jnp
hlt
dec
hlt
sahf
sub
adc
push
call
and
cmp
inc
inc
mov
lahf
cmp
int
mov
scas
mov
xor
ret
or
push
sbb
fs
mov
xchg
ja
in
inc
mov
mov
add
xchg
neg
xchg
lods
jno
das
ror
mov
int
jge
ret
in
and
call
sub
jg
cmp
adc
bound
pop
inc
mov
shl
data16
imul
inc
(bad)
iret
rcr
sub
sub
cmp
mov
out
push
push
jmp
push
sbb
lds
stos
mov
bnd
loop
loope
ret
test
inc
cwde
mov
imul
cmps
retf
jb
xchg
int
out
mov
std
popf
arpl
mov
outs
xor
stos
push
sbb
xchg
pusha
sub
and
dec
add
sbb
push
jne
mov
icebp
inc
sub
xor
push
mov
sahf
pop
icebp
jge
in
cmp
inc
(bad)
in
mov
inc
push
pop
aas
stos
xor
and
inc
dec
arpl
or
or
retf
xchg
push
mov
mov
pop
xchg
push
icebp
sbb
adc
pop
int3
dec
in
jmp
mov
mov
jae
aaa
dec
rcl
sar
mov
leave
fimul
aaa
inc
mov
bound
or
mov
dec
cmp
sbb
fs
int
pop
mov
mov
icebp
push
rol
sbb
jb
xchg
pop
aam
test
cmps
test
test
xchg
mov
pop
cli
fst
sub
cmp
cmp
std
cdq
daa
push
mov
dec
loopne
dec
sbb
fmul
sti
popa
or
mov
jge
mov
scas
cmps
dec
and
sahf
mov
mov
arpl
and
in
push
test
or
shl
in
xchg
stos
or
ret
cs
cmc
pop
lock
mov
iret
xchg
aaa
imul
outs
sbb
jno
out
pop
sub
push
or
mov
push
mov
sbb
shr
mov
call
movs
or
xchg
mov
adc
cmp
outs
stc
mov
fistp
ins
les
fistp
shl
in
out
fistp
(bad)
xchg
popa
push
in
stos
dec
shl
xlat
mov
in
(bad)
mov
or
movs
inc
(bad)
sbb
push
rcl
enter
inc
add
dec
(bad)
std
retf
jnp
es
pushf
mov
cmc
mov
jmp
pusha
jecxz
dec
int
mov
in
pop
adc
push
cmps
sbb
repnz
adc
jns
hlt
adc
dec
mov
jo
movs
(bad)
leave
cdq
push
dec
mov
loope
xor
dec
inc
scas
sbb
int3
sbb
lock
sub
fwait
dec
mov
inc
sub
or
lds
jg
sbb
scas
stc
mov
lds
sbb
stos
fidivr
nop
stos
retf
das
xchg
inc
aam
inc
push
push
not
and
and
inc
add
leave
stc
icebp
stc
add
mov
or
call
fwait
data16
mov
adc
ror
stos
lea
inc
leave
push
lea
scas
fwait
xchg
jge
lods
int
out
inc
(bad)
mov
mov
sahf
fistp
sbb
sbb
cmp
inc
cs
in
ffreep
xchg
sub
mov
jnp
cld
stos
sahf
mov
and
inc
dec
mov
pop
mov
and
imul
retf
punpcklwd
lods
arpl
mov
pop
pop
or
pushf
add
movs
mov
xchg
popf
dec
or
dec
popf
imul
in
dec
lods
cmp
lock
dec
push
sub
cmp
(bad)
aad
ficomp
pop
movs
bound
mov
mov
sbb
mov
movs
sbb
xor
xor
pusha
cld
clc
jle
inc
jmp
and
cmc
jp
into
cmp
mov
adc
inc
les
push
aam
jecxz
mov
repnz
dec
and
sahf
cmp
cmp
(bad)
pop
xor
hlt
(bad)
pushf
inc
js
or
add
test
nop
xor
imul
mov
pop
mov
sbb
add
icebp
mov
in
jecxz
stos
and
retf
out
test
fdiv
push
jge
xchg
lods
test
inc
mov
daa
add
aam
cmp
jne
mov
xor
icebp
lods
imul
repnz
sbb
in
inc
stos
jo
lea
jmp
mov
mov
jmp
test
mov
mov
idiv
out
movs
sar
stos
inc
push
dec
movs
call
mov
mov
(bad)
sti
sub
push
cs
(bad)
xchg
pop
dec
mov
xchg
adc
loopne
dec
jge
mov
sub
aad
mov
(bad)
and
sbb
cmps
sahf
sub
sbb
cwde
enter
and
jmp
mov
enter
cmc
pop
nop
jmp
xchg
pop
and
addr16
dec
rcl
dec
push
or
je
in
(bad)
mov
sbb
xchg
push
je
pop
dec
sbb
into
clc
sub
push
pusha
(bad)
retf
es
popf
lsl
adc
(bad)
sti
inc
std
or
pop
mov
push
xlat
(bad)
pop
jge
call
(bad)
int
pop
neg
mov
and
movs
push
adc
inc
xlat
push
cmp
jbe
jb
inc
lahf
fcmovnu
cmp
cmc
rol
popa
sub
inc
xlat
or
(bad)
mov
je
inc
push
repnz
mov
jnp
gs
(bad)
mov
jle
arpl
jnp
in
xchg
and
add
scas
add
(bad)
xchg
add
push
inc
sbb
test
adc
jns
(bad)
fbstp
mov
push
jg
stos
cmp
cmp
inc
xchg
stc
xor
pop
dec
xor
call
inc
push
(bad)
int
test
cmp
test
movs
(bad)
ret
sbb
in
pop
sub
xchg
hlt
cld
pop
popa
imul
and
mov
sub
add
retf
and
mov
iret
xchg
xchg
lahf
dec
std
scas
aad
data16
or
push
cmps
les
mov
rcl
xchg
pop
sub
dec
fwait
sahf
cmp
and
mov
inc
repz
pop
fist
add
sub
div
out
push
mov
dec
lahf
mov
bound
daa
test
inc
cmps
pop
jbe
jmp
cmp
gs
push
loop
cdq
pop
pop
popf
xor
adc
mov
int
pop
dec
sub
cmp
adc
mov
push
out
not
add
sub
add
icebp
loopne
int3
push
aaa
ins
mov
sbb
jnp
in
push
aam
mov
and
test
adc
ins
jmp
jnp
sub
sub
addr16
inc
fsubr
dec
movs
push
cs
outs
outs
or
jb
retf
xor
movs
stos
xchg
cdq
jno
stos
icebp
sub
pop
jo
sar
(bad)
aas
xchg
jmp
push
and
adc
push
xchg
(bad)
idiv
adc
test
aad
outs
icebp
push
inc
xchg
sub
js
enter
push
xchg
fdivr
shl
in
lods
inc
test
mov
jmp
retf
retf
push
shr
mov
and
das
cmc
daa
fcom
mov
call
inc
push
mov
gs
adc
mov
and
scas
inc
push
pop
jle
add
pop
pop
push
in
bnd
xlat
jmp
inc
xchg
pusha
je
jno
jne
add
lahf
cli
mov
call
add
in
mov
loope
push
into
inc
dec
ror
pop
push
or
inc
push
pop
lock
lahf
xchg
dec
int
fwait
xchg
or
test
sbb
sbb
aaa
mov
sub
iret
clc
sti
sub
sub
push
sbb
dec
pop
imul
jns
sbb
push
pop
(bad)
xchg
mov
xchg
sahf
cwde
(bad)
(bad)
jp
mov
mov
xchg
pop
and
cmp
data16
hlt
inc
pop
jno
jmp
test
shl
xlat
xor
mov
fdivr
arpl
aad
jl
(bad)
jg
repz
aad
mov
imul
hlt
push
jne
sar
inc
hlt
neg
sahf
into
cmp
aam
rol
xchg
or
scas
push
call
cmp
sahf
leave
ins
cli
clc
sub
adc
leave
lods
xlat
lahf
(bad)
dec
sub
dec
cld
sbb
std
mov
out
je
sbb
push
daa
mul
ds
enter
movs
test
mov
push
lahf
dec
lock
mov
pusha
and
dec
addr16
clc
jp
(bad)
dec
sub
iret
in
cmps
(bad)
icebp
cld
cli
loopne
adc
inc
test
push
xchg
daa
(bad)
in
int
aas
ror
pop
stos
xchg
pop
push
retf
in
sbb
(bad)
sahf
inc
iret
repz
mov
inc
or
and
pop
cld
ss
sub
pop
sti
dec
in
hlt
loope
push
inc
jl
jno
icebp
jmp
jl
sub
in
push
std
mov
lahf
lahf
dec
(bad)
sbb
ret
sub
xchg
gs
jmp
sbb
ins
(bad)
(bad)
jmp
mov
dec
dec
push
cwde
sub
or
call
mov
mov
adc
jge
(bad)
aas
cmps
sub
and
pop
add
loope
or
jmp
in
cmp
(bad)
movs
pop
push
enter
mov
xor
jp
xor
retf
xlat
cmps
and
and
add
inc
cmc
imul
sbb
xchg
inc
add
not
(bad)
pop
imul
cmp
jb
add
push
ror
int3
add
jbe
lods
repz
shr
add
add
inc
arpl
jge
push
retf
ret
cmp
iret
push
mov
xor
jnp
aad
imul
lahf
and
jg
icebp
jecxz
xchg
adc
dec
arpl
inc
movs
jge
xor
not
mov
retf
imul
sub
push
mov
test
or
bound
add
std
add
std
ins
jg
mov
fdivr
inc
jae
push
and
push
mov
inc
inc
jno
pop
stc
inc
and
push
rol
xchg
inc
and
imul
xor
sahf
pop
inc
xchg
sub
inc
xchg
push
push
and
pop
div
dec
jno
cmp
frstpm(287
pop
fwait
pop
dec
add
mov
inc
jg
xlat
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
push
outs
arpl
stos
and
je
mov
outs
outs
cmp
push
inc
gs
imul
jo
popa
jb
push
push
gs
and
jno
and
and
outs
outs
jbe
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
and
outs
jb
and
jb
and
and
and
mov
popa
jae
data16
arpl
outs
popa
ins
imul
and
ins
push
jae
add
dec
outs
jbe
and
jb
ret
mov
jae
outs
outs
ret
lods
jbe
ins
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
or
add
and
jb
ret
mov
inc
popa
imul
ins
popa
jb
gs
popa
and
jb
ret
mov
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
pop
add
add
add
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
pushf
jp
ffree
movs
mov
dec
pop
scas
out
call
add
add
ins
add
add
add
add
add
imul
add
ins
add
push
add
inc
add
jb
dec
add
je
add
je
inc
add
popa
add
add
add
add
add
je
add
add
and
je
outs
add
jne
jb
arpl
push
add
add
add
je
das
add
add
bound
je
outs
add
add
imul
dec
add
je
add
add
add
je
cmp
add
and
je
outs
add
add
outs
add
add
add
add
add
je
inc
add
add
sub
imul
popa
jae
ret
mov
popa
jae
outs
outs
jbe
fs
fs
fs
popa
and
jb
ret
mov
outs
ins
jo
popa
jb
or
fs
and
outs
imul
js
add
push
add
or
add
sub
add
or
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
add
jle
add
add
add
and
jb
outs
addr16
add
add
add
add
ins
outs
bound
add
cld
push
add
adc
add
and
dec
inc
add
add
add
lods
add
add
push
push
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
inc
add
and
add
add
cmp
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
jne
add
ins
add
add
add
add
add
add
enter
add
add
scas
add
add
add
add
add
jmp
and
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
mov
add
xlat
add
add
int3
add
add
add
cli
add
add
add
add
add
and
add
sub
add
add
add
push
add
add
xchg
add
add
add
add
add
add
add
add
mov
test
add
add
add
inc
push
push
je
ins
imul
jae
jne
arpl
cs
ins
add
jae
ins
bound
imul
imul
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
je
imul
jns
je
ins
add
gs
outs
arpl
jae
fs
jns
outs
outs
arpl
add
outs
outs
arpl
gs
ins
imul
je
imul
inc
jae
gs
bound
je
jb
bound
gs
push
jne
jo
gs
inc
imul
bound
arpl
add
je
ins
imul
jae
jne
arpl
add
add
arpl
ins
imul
imul
inc
outs
outs
je
outs
ins
jae
inc
push
push
jb
js
push
gs
imul
jb
jae
jne
arpl
add
je
ins
imul
outs
je
outs
ins
jae
push
je
imul
jne
arpl
cs
je
imul
cs
jae
jne
arpl
add
je
ins
imul
outs
je
outs
ins
jae
push
gs
inc
outs
jb
popa
je
imul
jb
ins
cs
cs
jae
jne
arpl
add
je
ins
imul
outs
je
outs
ins
jae
inc
jb
fs
je
popa
ins
jae
outs
jo
je
popa
outs
gs
cs
jb
fs
je
popa
ins
jae
outs
jo
je
popa
outs
gs
cs
cs
jae
jne
arpl
add
je
ins
imul
ja
ins
outs
popa
fs
inc
outs
ja
ins
outs
popa
fs
outs
jb
cs
cs
jae
jne
arpl
add
je
ins
imul
cs
je
imul
outs
jne
arpl
cs
je
imul
cs
jae
jne
arpl
add
je
ins
imul
outs
jne
inc
outs
jb
cs
cs
jae
jne
arpl
add
je
ins
imul
jb
push
outs
ja
outs
jb
cs
cs
jae
jne
arpl
add
je
ins
imul
jb
push
gs
imul
jb
cs
cs
jae
jne
arpl
add
je
ins
imul
jb
outs
addr16
gs
jne
arpl
cs
je
imul
cs
jae
jne
arpl
add
je
ins
imul
ins
jo
popa
je
jae
push
imul
imul
ins
jo
popa
je
cs
cs
jae
jne
arpl
add
je
ins
imul
fs
je
jb
dec
outs
je
imul
outs
outs
inc
outs
jb
cs
cs
jae
jne
arpl
add
je
ins
imul
fs
je
jb
push
jo
popa
je
inc
jbe
imul
popa
ins
outs
addr16
cs
jae
jne
arpl
add
add
add
add
add
push
adc
add
inc
push
push
je
ins
imul
add
inc
add
add
or
arpl
jae
data16
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
or
add
xor
xor
xor
xor
add
add
add
mov
pop
push
sbb
mov
and
push
popf
jle
shl
dec
push
add
retf
ror
test
or
push
add
gs
daa
mov
out
fsubr
dec
mov
mov
push
mov
retf
(bad)
dec
call
je
cmps
in
xor
adc
jmp
adc
or
add
pop
dec
mov
mov
or
lds
adc
movs
xchg
jmp
outs
fst
jno
mov
push
push
jbe
inc
add
clc
pop
out
dec
xchg
loop
dec
mov
xchg
mov
test
push
mov
xor
add
adc
lods
ret
pop
test
inc
add
cmc
out
adc
cmps
inc
cmovle
inc
.byte
.byte
