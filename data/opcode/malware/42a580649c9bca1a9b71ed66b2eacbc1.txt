xchg
mov
fucomp
push
test
cmps
jb
pop
sub
movs
inc
das
jo
push
cmps
jb
xchg
cmc
and
fucom
push
xchg
push
int3
mov
push
mov
xor
cmps
jb
fild
stc
lds
stc
fstp
add
jbe
push
movs
jb
push
(bad)
in
movs
pop
sub
rol
adc
std
test
jb
aad
jle
or
mov
fild
xlat
add
sbb
inc
out
jle
scas
call
clc
sub
mov
das
xchg
add
repz
fcomp
aaa
mov
sub
adc
mov
jge
jmp
or
mov
les
cmps
inc
scas
das
xor
aad
or
test
jb
pop
shl
std
fldenv
daa
or
mov
les
add
stc
aam
sub
xor
outs
data16
inc
cmps
jb
fistp
stc
mov
data16
push
xor
adc
sub
or
push
push
sti
sub
or
or
mov
and
(bad)
xlat
add
pop
icebp
inc
pop
sub
frstor
(bad)
aad
scas
stc
cli
pop
sub
fst
lea
cwd
lock
sbb
ret
pop
lea
bound
push
popa
ja
xchg
in
mov
jb
pop
dec
sub
push
cmps
icebp
inc
pop
scas
mov
ja
jb
push
mov
ret
push
scas
jb
push
int3
jp
pop
fnstenv
aad
jp
xchg
shl
push
cmps
jb
mov
rcr
test
cmps
call
scas
lea
pop
or
push
and
jb
push
sti
sub
fcom
in
and
cmps
jb
mov
cmps
sbb
push
cmps
jb
mov
cmps
jb
add
xchg
jmp
into
outs
inc
adc
sbb
inc
out
shl
das
push
adc
and
add
pop
imul
daa
jle
push
movs
stos
lods
jb
mov
cmp
sbb
push
into
push
inc
adc
sbb
dec
fdiv
test
cmps
lea
xchg
push
inc
adc
sti
movs
inc
data16
push
and
sti
int3
stos
neg
dec
xchg
ret
push
cmps
jb
push
repz
fs
mov
adc
clc
push
cmps
and
add
test
outs
lock
jb
cmp
sbb
cmp
sbb
jbe
xor
push
das
mov
scas
(bad)
and
inc
inc
mov
and
jmp
(bad)
mov
test
and
mov
daa
test
and
or
push
into
loop
adc
inc
test
cmps
jb
xchg
stos
dec
jle
cmps
jb
push
xchg
mov
mov
les
aad
arpl
test
dec
jge
cmp
sti
add
adc
sub
aam
inc
icebp
ins
inc
lock
in
fistp
data16
xchg
xchg
xchg
mov
xchg
sub
jns
sub
jge
int3
jb
imul
(bad)
hlt
pop
pop
pop
mov
das
mov
mov
dec
xor
mov
pop
popf
cmp
(bad)
hlt
inc
pop
pop
jge
add
adc
call
shl
xchg
dec
imul
pop
jae
push
push
jo
push
cmps
cdq
(bad)
fistp
data16
or
xchg
mov
or
mov
rol
icebp
int
add
dec
or
sub
jge
into
imul
sar
and
jb
nop
scas
test
push
xchg
mov
gs
pop
cdq
test
mov
bound
pop
call
pop
pop
jge
cmps
push
adc
mov
pop
xchg
mov
mov
hlt
jb
or
mov
add
sub
mov
push
push
add
pop
dec
leave
push
cmps
lea
ret
xchg
mov
jecxz
or
lea
pop
cdq
vpavgw
mov
jbe
pop
sbb
outs
jbe
adc
xor
push
jb
scas
lahf
mov
inc
pop
aaa
jne
jecxz
mov
fucom
mov
push
jnp
push
cmps
test
scas
das
aaa
jno
jecxz
(bad)
fist
dec
test
cmps
pop
js
popa
add
adc
(bad)
rcl
jae
and
les
pop
lea
test
lods
stc
les
das
daa
jns
clc
sub
repz
fs
cmps
jb
push
dec
not
and
add
push
daa
push
das
stos
or
mov
push
das
stos
or
sti
inc
aad
(bad)
rcl
jae
and
inc
and
lea
dec
pop
or
pop
xchg
ins
cs
push
cmps
lea
popf
setno
dec
sti
pop
addr16
inc
fucom
bound
push
cmps
lea
sub
adc
push
das
stos
test
das
mov
or
mov
rol
stos
mov
stos
int
pop
aaa
jge
fs
inc
fcomip
mov
outs
fnsave
fstp
jp
test
adc
mov
pop
ins
test
das
mov
inc
aaa
cs
lahf
lods
std
sub
inc
fcomip
mov
adc
sub
aam
inc
and
add
stc
fcomp
aaa
jge
iret
xchg
xchg
xlat
jecxz
ins
push
cmps
jb
mov
fdiv
fstp
jp
test
adc
mov
pop
ins
test
das
mov
inc
aaa
cs
lahf
lods
std
sbb
xchg
in
or
scas
mov
dec
cmps
repz
stos
hlt
inc
adc
daa
or
sub
inc
adc
cmc
sub
repz
pop
ja
xchg
in
or
scas
jge
push
sahf
sti
jnp
push
stc
int3
pop
test
mov
sar
xchg
or
pop
sti
inc
push
fs
aam
xchg
mov
or
mov
rol
cmc
and
fst
jp
add
pop
pop
jns
popa
lea
sar
rcl
add
pop
sti
les
cmc
sbb
movs
in
xlat
mov
idiv
fsubr
mov
mov
mov
cmps
jb
mov
aaa
jns
popa
sub
aam
inc
and
add
jge
popa
das
mov
and
jb
nop
int3
jb
push
into
lea
test
int3
jb
stos
shl
xlat
push
mov
test
sti
jno
clc
sub
xchg
repz
fs
scas
int
push
(bad)
sbb
scas
cmps
mov
xchg
and
jb
and
jb
fnstsw
xor
test
pop
and
fbld
xchg
cmc
jp
stos
aad
or
repz
fs
outs
rol
icebp
stc
hlt
pop
sbb
push
fcomip
jbe
div
aad
jb
scas
(bad)
and
jb
xchg
aad
sbb
sahf
add
push
cmps
sti
inc
xlat
push
jo
push
cmps
inc
inc
pop
jge
sbb
pop
popw
xlat
add
stos
jb
cmps
sbb
cmps
neg
or
test
call
and
mov
xchg
mov
adc
test
add
jb
xchg
scas
test
les
xchg
mov
mov
pop
sti
inc
add
jle
pop
sub
lahf
gs
or
cmps
call
icebp
leave
stos
and
mov
dec
add
cmps
jb
push
and
jb
neg
mov
push
lahf
aaa
lea
test
push
cmps
stc
les
push
inc
adc
sti
pop
push
jle
inc
aad
out
xor
jb
dec
pop
out
xor
and
pop
and
aad
out
xor
jb
mov
or
jle
jg
das
mov
movs
int
adc
inc
pop
mov
pop
pop
lea
int3
jae
dec
push
xor
test
and
pop
lea
bound
test
stos
icebp
movs
retf
adc
sti
pop
addr16
inc
fninit
xchg
fucom
jp
push
mov
and
add
push
jb
rcr
(bad)
push
test
jb
xor
add
mov
push
pop
lea
mov
ja
xchg
in
or
push
dec
test
bound
and
bound
adc
sti
les
das
mov
mov
int3
jb
inc
shl
nop
cdq
push
cmps
test
and
inc
xor
popa
push
cmps
stc
les
es
push
sub
jno
sub
popa
aad
bound
mov
jbe
push
cmps
and
pop
and
add
scas
mov
xor
cmps
sbb
in
or
push
and
outs
pop
mov
jb
(bad)
mov
mov
or
jb
jg
das
mov
sub
hlt
popa
sub
pop
test
cmp
ret
push
idiv
mov
push
cmps
sti
les
cmps
jb
xchg
shl
push
es
push
pop
lea
outs
and
mov
push
cmps
icebp
mov
push
sar
retf
add
scas
(bad)
les
das
not
pop
lea
xchg
sub
mov
test
in
or
repz
fs
push
add
int
push
cmp
scas
cmps
mov
xchg
xchg
test
movs
das
pop
jge
mov
push
push
xchg
or
pop
sti
inc
fucom
jp
push
jbe
shl
jb
push
scas
test
jge
cmps
jb
fist
sahf
add
aaa
jne
popa
cdq
cli
fist
pop
push
and
stc
les
adc
cmc
pop
call
push
sub
jno
push
into
loop
adc
call
scas
sti
jns
pop
sti
inc
nop
mov
jb
retf
push
lea
pushw
mov
ret
mov
(bad)
xchg
xchg
and
and
push
xor
push
dec
cmp
scas
xchg
mov
xchg
and
test
mov
(bad)
shl
movs
shl
inc
sub
inc
mov
data16
xor
add
loopne
les
dec
mov
test
lea
xor
add
pop
jb
inc
pop
pop
mov
xchg
fcmovnb
push
dec
mov
add
jb
scas
push
xchg
or
dec
sti
inc
cmp
sbb
cmp
sbb
push
or
cmp
movs
sbb
addr16
sbb
and
dec
adc
or
and
test
push
call
(bad)
jb
mov
sub
sbb
cmp
sbb
and
xlat
and
jb
and
jae
cmps
jb
or
mov
cmp
cmps
jo
mov
cmc
and
in
push
das
(bad)
mov
push
cmps
jb
mov
idiv
lea
push
dec
adc
push
cmps
sti
add
pop
mov
and
imul
scas
mov
shl
jnp
push
push
rcr
push
cmps
test
and
jle
pop
sti
inc
xlat
dec
sub
push
cmps
sbb
push
dec
sub
add
pop
mov
sub
inc
test
outs
mov
and
out
xor
jb
cdq
daa
mov
and
xchg
or
push
lea
das
mov
rol
jg
not
sbb
fstp
aaa
jge
popw
and
push
cmps
inc
pop
mov
into
cli
jb
cmps
stc
add
pop
mov
sub
jb
push
cmps
sti
les
or
adc
jb
shl
jg
not
sbb
fstp
aaa
jge
data16
and
ret
pop
mov
pop
lea
bound
xchg
loope
cmp
pop
mov
jle
pop
fbld
add
pop
mov
bnd
daa
and
rcr
lea
not
sbb
fstp
aaa
jge
data16
jae
jb
xor
lea
push
cmps
repnz
pop
mov
test
jb
push
into
hlt
jb
cmps
inc
pop
mov
dec
enter
icebp
inc
pop
das
mov
fistp
fdivr
pop
repz
hlt
jb
pop
adc
sub
pop
jb
pop
and
adc
ror
or
pop
lea
neg
shl
out
imul
and
jle
pop
mov
push
test
push
cmps
icebp
and
pop
mov
push
movs
rcl
test
and
jle
pop
sti
inc
aad
add
cmps
jb
shl
jae
push
push
xor
push
dec
inc
ja
pop
icebp
inc
pop
fwait
lea
cmps
push
cmps
cmp
sbb
in
or
pop
lea
icebp
call
stos
dec
jle
cmps
jb
pop
popa
imul
push
cmps
jb
mov
jae
mov
test
push
dec
pushf
je
pop
icebp
inc
pop
fwait
lea
cmps
push
cmps
cmp
sbb
in
or
pop
lea
icebp
call
stos
dec
jle
cmps
jb
pop
popa
imul
push
cmps
jb
push
into
stos
jae
cmps
sbb
out
jb
cli
push
lea
bound
test
sbb
ret
push
sub
jl
pop
(bad)
(bad)
mov
and
lea
ror
lea
cmps
jb
push
int3
jae
cwde
push
xor
push
dec
sbb
icebp
inc
pop
fwait
lea
cmps
push
cmps
cmp
sbb
in
or
pop
lea
icebp
call
stos
dec
jle
cmps
jb
pop
popa
imul
push
cmps
jb
movs
in
adc
xor
push
dec
push
je
pop
icebp
inc
pop
fwait
lea
cmps
push
mov
pop
jae
push
cmps
sbb
push
into
and
pop
cmps
call
stos
dec
jle
cmps
jb
pop
popa
imul
push
cmps
jb
push
into
shl
cmps
sbb
out
jb
mov
jle
bound
test
loop
cmp
add
sub
jl
pop
(bad)
(bad)
mov
and
lea
push
into
jmp
cmp
pop
mov
dec
in
jne
pop
icebp
inc
pop
fwait
lea
cmps
push
mov
pop
jae
push
cmps
retf
cmps
jb
mov
mul
test
and
lea
movs
in
jmp
mov
and
lea
push
into
add
cmps
sbb
out
jb
push
push
lea
bound
test
lods
mov
cli
pop
mov
cmps
jb
xlat
cmps
adc
cmp
pop
mov
shl
shl
add
pop
mov
dec
inc
jnp
pop
sub
pusha
ja
xchg
in
xor
ret
add
repz
mov
(bad)
jle
pop
jb
jg
jb
fistp
pop
fbld
pop
push
jle
inc
(bad)
stos
jle
pop
and
sar
jg
idiv
mov
adc
inc
pop
and
add
pop
mov
sub
(bad)
rcr
sahf
(bad)
(bad)
jbe
aaa
jge
gs
adc
inc
pop
and
and
pop
mov
das
stos
test
das
mov
repz
jg
cmps
icebp
cmp
pop
mov
test
jb
loopne
jb
mov
pop
mov
gs
rol
lea
mov
inc
ror
lea
cmps
jb
push
sub
adc
and
jle
pop
and
sar
jg
idiv
mov
lock
or
sub
push
test
push
add
test
sahf
lea
push
das
aaa
jge
data16
adc
mov
or
jb
jg
idiv
mov
push
cmps
sti
les
das
test
xchg
and
test
test
pop
mov
sub
sti
les
outs
jno
push
daa
mov
add
imul
pop
(bad)
rcr
and
or
and
or
and
test
cmp
sub
gs
and
or
and
mov
cmps
jb
mov
and
lea
test
sbb
out
jb
rcr
jg
neg
add
pop
mov
dec
jge
push
cmps
sbb
push
das
stos
test
das
mov
jecxz
lea
sub
jl
pop
(bad)
sar
ret
add
sub
jl
pop
(bad)
sar
and
jae
fbld
inc
shl
lea
movs
jb
ror
jg
das
neg
test
push
lea
idiv
xor
pop
mov
dec
bound
mov
jbe
push
cmps
and
pop
icebp
ins
inc
das
xchg
cmp
jb
movs
add
cmp
pop
mov
sub
sti
les
das
mov
sub
mov
shl
push
and
lea
fbld
add
pop
mov
into
fidiv
cmps
stc
add
pop
mov
sub
jb
push
cmps
sti
les
nop
jo
push
daa
cdq
nop
push
cmps
jb
rol
lea
idiv
add
pop
mov
sub
sti
les
pop
jae
push
and
lea
push
int3
jb
fcmovne
jb
comiss
or
or
pop
jo
frstor
fidivr
pop
sti
add
pop
mov
and
jle
pop
and
fimul
xchg
fild
test
jb
repz
stc
test
mov
out
mov
xlat
or
push
lea
icebp
stc
mov
adc
pop
addr16
inc
aad
mov
push
cmps
icebp
and
pop
mov
sub
or
ds
test
sahf
lea
push
das
aaa
jge
dec
cmc
xchg
push
cmps
jnp
pop
and
cmps
icebp
cmp
pop
mov
test
jb
ror
lea
neg
sub
pop
mov
sub
sti
les
das
mov
sub
mov
jge
adc
mov
test
jb
jmp
lea
cmps
jge
xchg
cmps
jb
(bad)
sbb
pop
and
(bad)
lea
dec
(bad)
jae
pop
icebp
inc
pop
das
mov
fistp
push
jle
pop
sti
pop
push
jle
inc
(bad)
sbb
jle
pop
jb
shr
jb
push
popa
div
pop
lea
mov
jbe
jecxz
lea
sub
jl
pop
(bad)
sar
sti
add
sub
jl
pop
(bad)
sar
and
(bad)
jle
pop
icebp
dec
test
cmps
pop
js
and
xor
pop
(bad)
jle
and
jle
pop
and
rcr
jg
sub
test
dec
pop
in
push
cmps
icebp
inc
pop
das
stos
test
das
mov
push
sub
jl
pop
(bad)
sar
inc
jl
pop
(bad)
sar
and
inc
pop
fbld
cmp
pop
mov
shl
shr
lea
idiv
mov
lock
ror
lea
sub
lea
test
pop
lea
ror
lea
idiv
mov
lock
mov
or
sub
or
push
lea
idiv
mov
lock
ror
jg
sub
lea
test
pop
lea
jmp
lea
cmps
pop
xchg
pop
jb
xchg
fwait
or
test
xchg
(bad)
xlat
pop
and
lea
xchg
jle
sub
repz
dec
jb
aad
cmps
jle
pop
jb
pop
sub
(bad)
rcr
xchg
(bad)
xlat
pop
sub
(bad)
rcr
xchg
(bad)
xlat
pop
sub
(bad)
rcr
xchg
(bad)
xlat
pop
das
stos
test
das
mov
rol
jg
idiv
mov
lock
jmp
dec
xchg
repz
fs
sbb
xchg
in
jmp
xor
jb
push
cmps
and
fild
icebp
ins
dec
cmc
and
ffreep
call
mov
mov
xchg
jecxz
adc
sti
jg
pop
sti
hlt
mov
sub
cmp
jb
xchg
mov
lea
imul
ret
push
cmps
pop
cmp
mov
mov
pop
lea
dec
inc
inc
adc
adc
stc
in
popa
aaa
pop
int
pop
lods
fstp
scas
or
jle
cld
mov
minps
mov
jge
pop
lea
clc
sub
fucom
and
cmps
jb
push
aaa
mov
(bad)
jmp
das
mov
shl
cmp
push
rcl
jmp
dec
xchg
out
cmps
sti
inc
add
out
cmps
sti
jns
pop
sti
inc
or
mov
fild
ins
jb
and
or
dec
or
pop
sti
inc
test
cmps
sti
pop
aad
jbe
push
cmps
jb
sahf
push
xchg
or
pop
sti
inc
rcr
jb
outs
or
xor
das
mov
inc
push
dec
ffreep
push
mov
ja
jmp
jb
push
cmps
jb
cmps
loopne
xor
test
xor
lds
adc
jb
jb
out
adc
repnz
xor
push
cmps
lea
repnz
out
push
and
aaa
jno
mov
fwait
aad
cmps
jb
pop
mov
test
push
cmps
jb
push
out
rcl
mov
dec
ffreep
push
cmps
ja
stc
out
push
pop
ja
stc
out
cmp
inc
sti
les
movs
jb
test
cmps
fwait
lea
jle
fidiv
cdq
stc
out
xchg
and
jno
push
push
mov
pusha
(bad)
call
out
xchg
mul
fcmovnb
push
add
and
cmps
fwait
test
push
mov
push
xchg
fwait
mov
mov
es
stc
out
test
push
ja
stc
out
mov
mov
jo
push
daa
fwait
aas
and
jb
pop
mov
rol
jmp
jb
push
push
xor
test
out
and
inc
inc
mov
daa
fwait
dec
cmps
jb
pop
mov
mov
mov
cmps
jb
fild
dec
fbld
sub
mov
push
xchg
fwait
and
add
ffree
push
movs
sti
dec
outs
sti
inc
xchg
mov
jo
push
cmps
fwait
std
test
lea
fidiv
mov
mov
es
stc
out
sar
sahf
sub
cmps
jae
outs
or
sub
push
xchg
or
inc
sti
inc
(bad)
stos
push
pop
cmps
xor
cmps
jb
test
adc
cs
cmps
fwait
push
push
cmps
jb
adc
xor
push
cmps
fwait
inc
push
cmps
jb
mov
mov
fwait
xor
push
fidiv
mov
mov
daa
cmp
jb
push
sahf
ffree
push
movs
fwait
adc
jb
xchg
dec
xchg
adc
mov
xor
sahf
das
mov
cmps
loopne
xor
test
xor
aad
jns
push
pop
push
add
outs
xor
push
fidiv
mov
sub
ret
push
es
stc
out
sar
xor
sti
out
adc
rcl
jle
sahf
ffree
push
das
mov
add
ffree
push
out
xchg
addr16
jmp
fwait
mov
sti
les
fidiv
cdq
stc
out
rcr
adc
jb
es
xor
fbld
aaa
push
(bad)
ret
ret
push
xor
movs
test
xor
adc
adc
inc
push
cmps
jb
shr
jb
push
es
push
shl
scas
rol
push
daa
fwait
mov
loopne
cmp
out
adc
rcl
(bad)
jb
and
pop
(bad)
fild
test
xor
sub
jl
jg
stc
out
add
or
push
push
xchg
or
dec
sti
inc
fist
or
xchg
sub
cmps
jge
push
inc
ffreep
push
and
add
push
ja
pop
es
push
shl
push
scas
rol
push
mov
jb
aad
jle
push
cmps
jb
dec
das
add
mov
and
cmps
clc
sbb
out
jle
stos
rol
push
pop
jp
push
cmps
dec
test
xor
mov
das
mov
jae
rol
push
cmps
cdq
cdq
fist
or
rol
push
sub
or
fidiv
adc
lea
sahf
ffree
push
lahf
ja
mul
jb
lea
stc
xchg
in
or
push
xor
push
das
mov
fisttp
sbb
jns
pop
sti
inc
test
cmps
sbb
(bad)
jb
fbld
xchg
pushf
in
xlat
mov
add
sti
jns
pop
sti
inc
mov
aaa
aaa
cmps
jb
inc
or
cmp
lock
or
cmp
lock
or
sbb
popa
sbb
pushf
in
xlat
mov
add
sub
fs
push
rol
icebp
leave
dec
xor
jg
mov
ja
xchg
in
jmp
fninit
fcmovbe
test
cmps
mov
mov
daa
cdq
dec
arpl
jb
adc
sti
les
cmps
jb
aad
mov
fbld
in
cmps
lea
ret
mov
adc
sti
inc
aad
cmps
adc
hlt
jb
mov
das
mov
adc
adc
xor
push
fidiv
xor
adc
cmps
mov
loop
jb
push
and
stos
mov
das
mov
sub
push
xchg
ja
push
cmps
and
cmps
jb
push
sub
gs
pop
addr16
out
cmp
jb
mov
das
mov
adc
and
push
sub
and
push
int3
jbe
push
pop
pop
gs
sub
and
pop
pop
and
cmp
call
fidiv
jle
push
sbb
cmp
(bad)
hlt
mov
leave
loop
cmps
sti
pop
jg
sti
inc
test
(bad)
jb
test
cmps
inc
mov
sub
gs
pop
addr16
out
or
inc
cdq
mov
jle
(bad)
(bad)
dec
xchg
stc
sub
lahf
gs
or
jecxz
lea
inc
dec
or
pop
sti
les
ret
xchg
or
jp
les
jecxz
or
mov
int3
scas
and
mov
les
int3
jae
adc
or
dec
and
pop
sbb
cmp
(bad)
hlt
pop
pop
addr16
out
or
push
cdq
(bad)
out
ins
pop
adc
stos
or
pop
mov
(bad)
jmp
das
mov
push
fidiv
mov
lea
popa
xchg
adc
fcom
dec
jle
add
stc
hlt
pop
sub
or
cmps
inc
jle
adc
imul
push
rol
loopne
inc
sub
adc
inc
sub
adc
inc
sub
adc
inc
test
jb
push
test
jb
adc
clc
xchg
push
jecxz
sbb
jbe
xor
sbb
jge
shl
mov
mov
mov
push
cmps
jb
lods
and
xchg
outs
fs
cli
fistp
push
test
mov
cmp
mov
mov
mov
jb
or
mov
(bad)
jb
mov
test
mov
push
call
fist
sti
les
repz
mov
sub
les
jecxz
or
mov
lds
jae
aad
jbe
add
xchg
push
cmps
jb
push
dec
push
mov
jecxz
jmp
mov
mov
jecxz
cmp
ja
xchg
in
add
jbe
add
mov
(bad)
call
aad
jo
push
jbe
push
das
mov
mov
mov
icebp
imul
sbb
inc
fwait
int3
adc
icebp
imul
or
repnz
test
dec
jbe
xchg
mov
jb
push
es
mov
scas
out
repnz
fistp
imul
or
call
aad
jbe
loopne
je
mov
mov
jb
jns
mov
or
mov
sub
pop
aad
jbe
adc
les
adc
add
das
data16
jb
(bad)
call
push
es
xchg
cmp
scas
and
je
and
jno
push
jae
gs
mov
mov
mov
dec
jg
cmps
jb
push
fwait
lea
mov
sub
popa
test
icebp
imul
xchg
push
cmps
jb
adc
lea
aam
(bad)
jle
stc
sub
lahf
gs
or
lock
ret
push
sub
inc
jle
mov
pop
mov
daa
lea
cmps
jb
cmps
daa
lea
cmps
jb
inc
loopne
les
call
jle
push
nop
lods
lea
adc
xchg
xchg
inc
jo
push
push
and
cmps
inc
pop
fistp
pop
push
dec
sub
pop
sub
fidiv
test
call
dec
jb
push
rcl
xor
push
das
stos
adc
clc
xchg
push
xchg
push
xor
mov
mov
ss
push
sub
sti
jae
jl
push
fistp
push
jbe
les
sub
jno
push
push
xor
frstor
jae
jg
sti
jnp
jl
push
aad
jbe
adc
test
inc
dec
cmps
stc
aam
das
bound
fidiv
jle
pop
call
dec
mov
jbe
adc
xchg
cmps
jb
add
mov
arpl
xchg
or
cmp
clc
sub
repz
fs
cli
push
adc
and
add
js
pop
mov
mov
lea
dec
mov
push
cmps
dec
adc
mul
pop
lea
test
fidiv
cmp
jns
jle
shl
loopne
sub
ret
push
cmps
push
fwait
(bad)
sbb
cmc
inc
test
lea
call
and
jb
pop
lea
ret
push
lods
jle
int
mov
stos
jg
call
adc
lea
push
xor
sub
cmps
jge
ret
push
popf
jle
int
lahf
fld
jb
xchg
inc
jo
ret
add
push
rdpmc
cmp
pop
lea
push
mov
and
cmps
repnz
dec
lea
test
lea
data16
add
nop
dec
adc
jb
shr
lea
pusha
div
pop
lea
mov
movs
icebp
mov
push
cmps
jge
int3
mov
out
mov
movs
stc
xchg
inc
neg
rcl
push
mov
jle
fidiv
bound
and
adc
mov
pop
lea
sar
jle
pop
ja
xchg
in
or
jb
jle
das
mov
bound
stos
test
xor
test
xchg
add
sub
mov
das
(bad)
cmp
dec
lea
daa
mov
inc
cmps
jb
retf
push
popf
jle
shl
jle
neg
jle
fidiv
ins
mov
sub
push
into
lea
cmps
lea
dec
lea
adc
mov
sti
les
and
lea
test
pop
sti
pop
xchg
dec
jo
mov
jno
stos
sub
jbe
loop
mov
pop
pop
mov
daa
lea
mov
lea
cmps
jb
pop
das
stos
test
jb
fbld
repnz
test
gs
push
cmps
repz
push
jb
and
(bad)
hlt
stos
dec
pusha
jnp
pop
sub
ror
jle
cmps
jb
push
sub
lea
and
pop
or
jle
mov
lea
jns
jle
fisubr
adc
jge
ret
push
popf
jle
addr16
sbb
addr16
jb
ret
push
popf
jle
and
lea
test
das
stos
inc
mov
movs
aas
jge
stos
arpl
fidiv
stc
adc
dec
lea
inc
jo
(bad)
addr16
adc
jae
(bad)
lods
jo
rcl
jle
daa
iret
jne
pop
lea
loope
ja
xchg
in
add
inc
lods
jle
cmps
pop
fidivr
les
fst
sti
add
js
jle
fs
push
call
mov
add
jmp
js
jle
xor
pop
test
movs
jo
shl
lods
jle
sub
lea
ret
xor
shl
lods
jle
das
imul
shl
jle
das
neg
pop
(bad)
jmp
sub
cmp
adc
daa
(bad)
jb
shl
jle
lahf
idiv
adc
pop
lea
rcl
lods
jle
cmps
neg
pop
lea
jmp
lods
jle
cmps
pop
inc
cmps
jb
jbe
jb
ret
adc
lea
lea
stos
and
pop
cmps
jae
test
pop
cdq
sbb
cmps
jge
ret
push
popf
jle
addr16
sbb
scas
pop
test
jns
jle
stos
addr16
out
mov
xor
arpl
xchg
jbe
xor
test
cmps
jb
mov
das
div
mov
mov
cmps
jb
sub
jae
push
sub
lea
push
cmps
jb
pop
es
push
cmps
jb
dec
cmps
jb
frstor
xchg
pop
stc
xchg
push
cmps
jb
push
and
jo
fbld
xchg
pop
test
js
jle
and
lea
pop
sti
jno
es
and
dec
jo
outs
cmps
pop
lahf
fist
imul
sti
jno
dec
jbe
outs
cmps
pop
mov
push
icebp
imul
cmp
fwait
pop
ja
xchg
in
mov
xor
pop
test
das
(bad)
xchg
bnd
jle
and
pop
test
mov
jb
inc
sub
jb
aad
lea
xchg
jbe
rol
jle
dec
lock
push
popf
jle
cmps
mov
inc
loope
cmp
jns
jle
dec
repnz
js
jle
test
lea
inc
jo
jmp
xchg
dec
mov
push
rcr
push
jo
push
cmps
jb
dec
es
mov
push
shl
push
jbe
push
cmps
jb
pop
es
mov
push
shl
mov
add
mov
repz
loopne
sub
jp
jle
pop
(bad)
push
mov
imul
bound
jmp
lods
jle
cmps
push
ret
aad
xchg
pop
jb
ret
push
popf
jle
addr16
sbb
mov
push
addr16
adc
or
mov
pop
test
pop
div
pop
lea
jmp
popf
jle
cmps
jbe
push
aam
jle
fidiv
jge
pop
repnz
dec
lea
test
lea
data16
add
nop
dec
adc
jb
ror
sub
lahf
gs
or
lock
les
daa
aaa
jge
mov
adc
fidivr
adc
mov
xchg
cmps
mov
add
cld
mov
inc
or
cmps
jb
movs
add
cld
xchg
inc
sbb
cmps
jb
movs
add
les
das
daa
jge
popf
adc
les
in
adc
or
(bad)
aam
pushf
ss
mov
je
adc
push
es
jnp
es
inc
aam
add
pop
loop
push
cmps
mov
scas
cmps
fwait
xor
jb
push
test
ss
mov
jb
cmp
lods
push
cmps
repnz
cmps
dec
inc
push
cmps
jb
cmp
mov
push
cmps
icebp
jns
shl
adc
or
pop
sti
inc
addr16
aam
test
mov
mov
icebp
jnp
sar
lods
mov
xor
push
es
jp
test
xor
mov
icebp
jns
shl
adc
or
pop
sti
inc
addr16
aam
test
mov
push
cmps
dec
add
jb
push
es
jp
daa
pop
jge
shl
adc
mov
lods
test
push
sahf
pop
test
jecxz
test
jecxz
adc
mov
test
cmps
cdq
xchg
fsub
dec
lds
pop
xchg
jecxz
cmp
repnz
scas
mov
mov
adc
les
jecxz
or
pop
jge
push
fwait
icebp
adc
mov
or
sub
repz
fs
mul
xlat
add
sbb
and
stos
jbe
das
aaa
jge
sbb
cmps
jb
cmp
call
and
dec
adc
or
cwde
cs
push
pusha
ss
cmps
cdq
xchg
and
retf
cmps
jb
mov
aaa
jns
gs
aam
inc
retf
cmps
jb
imul
add
mov
xchg
or
pop
lods
jle
das
mov
mov
sub
lea
pop
pop
mov
and
test
(bad)
jb
(bad)
jb
test
cmps
jb
aad
bound
scas
(bad)
xchg
test
scas
(bad)
stc
sub
xchg
repz
add
xchg
int3
adc
rep
sahf
fdiv
cmp
sbb
push
dec
rcl
cmps
sub
fs
data16
icebp
int
(bad)
out
ins
or
int3
jb
(bad)
cmps
jb
cmp
sbb
push
cmps
bnd
scas
call
and
icebp
cld
pop
cmps
push
xchg
jecxz
add
rep
xor
cdq
loop
cmps
and
dec
cmc
jb
fbld
adc
jb
mov
aaa
jne
popa
sti
pop
aad
(bad)
dec
add
pop
sti
jns
pop
sti
inc
cmp
icebp
cld
pop
cmps
push
mov
jecxz
or
push
cdq
xchg
jecxz
or
push
(bad)
hlt
cmps
cmc
(bad)
hlt
stos
lock
push
and
mov
inc
sti
les
std
mov
rol
sbb
push
cmps
sbb
push
int3
jbe
push
int3
jb
push
cmps
jb
test
cmc
jb
fbld
jns
pop
sti
inc
aad
(bad)
hlt
push
xchg
mov
add
jo
push
int3
jb
mov
daa
mov
cmp
sti
inc
aad
(bad)
rcl
jae
and
inc
cmp
call
stos
hlt
and
stos
and
fwait
cmc
jb
cmp
inc
stos
neg
cmp
add
add
(bad)
and
push
cmps
jb
push
cmps
jb
or
sub
repz
fs
mul
jmp
das
mov
outs
leave
jb
mov
das
mov
push
into
repnz
sbb
xchg
pop
pop
mov
das
mov
test
pop
test
cdq
mov
movs
sbb
mov
pop
inc
jns
popa
sbb
test
stos
and
imul
add
cmps
sti
jns
pop
sti
inc
addr16
or
aam
inc
and
add
stc
hlt
pop
popa
aaa
jge
shr
jecxz
mul
cmps
jb
lea
jae
fcomip
mov
loopne
dec
adc
xchg
test
push
xor
push
into
dec
jae
cmps
call
mov
pop
mov
mov
xor
push
and
das
lea
dec
stc
les
das
daa
jge
pop
cdq
mov
call
push
stos
push
jno
into
pop
jae
cmps
call
scas
sub
aam
inc
and
add
scas
stc
hlt
pop
popa
aaa
jge
ror
out
aaa
aaa
adc
mov
adc
mov
mov
xchg
lea
test
sbb
bnd
aad
jp
outs
push
add
retf
mov
jo
xor
push
jmp
aam
inc
icebp
ins
data16
and
in
jmp
add
push
cmps
test
jecxz
or
cmps
jb
xor
add
dec
jb
xor
or
push
push
movs
jb
push
push
xlat
add
setno
je
xchg
jecxz
cdq
push
sub
xor
jg
adc
loopne
lea
aad
ins
adc
repnz
test
retf
sahf
sbb
inc
pop
fbld
in
test
cmps
pop
push
fucom
jle
loope
jo
adc
scas
fistp
pop
fbld
aaa
adc
aaa
adc
jae
mov
shl
cmp
cmp
inc
sti
les
pop
jae
sub
hlt
popf
push
xchg
retf
test
jecxz
or
adc
add
mov
adc
fld
jecxz
or
dec
sti
dec
jge
sahf
mov
jmp
jbe
das
aaa
push
push
jecxz
or
stos
jge
push
mov
(bad)
(bad)
mov
mov
fs
mov
(bad)
mov
(bad)
mov
lea
xor
loope
jp
xchg
xchg
push
das
stos
mov
das
mov
or
mov
adc
ss
out
adc
cli
jecxz
push
ss
repz
adc
data16
(bad)
ss
scas
(bad)
ss
scas
loop
(bad)
xor
(bad)
ss
push
ss
(bad)
xor
(bad)
ss
push
ss
(bad)
ss
pop
(bad)
ss
and
(bad)
ss
in
adc
pop
add
adc
push
adc
data16
(bad)
ss
popf
(bad)
ss
scas
loop
(bad)
ss
inc
push
ss
outs
jle
adc
ss
ins
(bad)
ss
aaa
ss
(bad)
ss
jle
(bad)
loop
(bad)
ss
mov
(bad)
loop
(bad)
ss
cmp
xor
push
cmps
loop
dec
ss
(bad)
sub
loop
push
scas
loop
(bad)
xchg
popa
adc
ss
xchg
mov
mov
std
mov
and
loop
outs
cmps
loop
(bad)
sar
loopne
ss
mov
xor
lea
(bad)
out
repz
adc
jmp
(bad)
ss
out
adc
loop
(bad)
ss
adc
pop
jb
(bad)
ss
rol
ss
in
cli
jecxz
push
ss
pop
(bad)
ss
jg
loop
(bad)
ss
push
(bad)
ss
push
ss
(bad)
ss
dec
(bad)
ss
mov
ss
(bad)
ss
push
ss
(bad)
ss
repz
adc
loop
(bad)
ss
(bad)
ss
mov
loop
(bad)
ss
in
adc
pop
jb
(bad)
ss
rol
ss
in
pop
add
(bad)
ss
jg
loop
(bad)
ss
push
(bad)
ss
push
ss
(bad)
ss
dec
(bad)
ss
mov
ss
(bad)
ss
push
ss
(bad)
ss
cdq
adc
push
adc
loop
(bad)
ss
(bad)
ss
mov
loop
(bad)
adc
(bad)
ss
xor
sub
xchg
add
sub
aaa
(bad)
in
xchg
pop
clc
jle
stos
or
stos
test
das
mov
xchg
jecxz
adc
repz
retf
fucom
jp
cmps
neg
fcomp
fs
aam
movd
je
adc
push
dec
inc
rcl
sti
les
cmps
int
push
cmps
jb
loopne
lea
scas
(bad)
mov
inc
fucom
sbb
pop
sti
inc
fdivp
mov
adc
add
inc
call
push
push
xor
sbb
dec
fidiv
les
push
cmps
pop
nop
fucom
jp
cmps
out
aaa
inc
test
mov
fsub
cmps
jb
pop
into
loop
push
cmps
inc
mov
cmps
jb
loopne
(bad)
rcr
jecxz
and
(bad)
aam
cmps
mov
adc
mov
push
sub
ja
sub
and
div
aad
push
or
dec
sti
inc
aad
je
test
jecxz
leave
outs
pusha
jge
pop
pop
lea
clc
sub
repz
fs
pop
rol
icebp
int3
push
add
bound
mov
dec
cmp
mov
mov
fbld
imul
jnp
mov
sti
push
comiss
jno
push
sti
inc
aad
mov
hlt
pop
xchg
mov
adc
jb
fist
jno
pusha
inc
mov
(bad)
hlt
pop
dec
or
pop
icebp
inc
pop
das
mov
xchg
test
jb
loopne
popf
inc
mov
stc
xchg
imul
ret
push
lea
cli
imul
fbstp
or
dec
and
inc
mov
lea
push
das
lods
sub
ret
push
icebp
call
int3
jb
mov
jb
adc
imul
bound
call
push
daa
pushf
push
push
cmps
jb
mov
cmps
dec
adc
inc
xchg
aad
mov
push
movs
ja
fwait
in
mov
idiv
ret
push
das
aaa
jns
mov
pop
push
jecxz
or
mov
or
and
stos
dec
adc
jno
mov
sub
xor
les
cmps
stc
cld
mov
jge
test
xchg
pop
jno
mov
xlat
dec
xor
sbb
call
jle
ss
je
arpl
movs
or
mov
jmp
fistp
test
dec
leave
iret
push
cmps
icebp
inc
pop
pop
mov
les
push
xchg
or
jb
inc
fistp
les
in
mov
and
mov
test
jecxz
repz
dec
adc
sti
les
movs
aaa
jno
mov
dec
adc
inc
xchg
aad
add
movs
ja
fwait
in
mov
fistp
mov
pop
adc
outs
xchg
ret
inc
mov
push
fwait
in
or
repz
shl
fistp
mov
pop
adc
outs
xchg
ret
dec
mov
popa
fwait
in
or
repnz
mov
retf
call
das
stos
adc
ret
push
neg
add
cmps
sbb
cmps
jb
push
pop
pop
mov
das
aaa
xlat
dec
fst
push
cmps
sbb
test
rcl
sub
dec
in
retf
push
cmps
sti
jno
inc
sti
les
out
fisttp
inc
rep
dec
movs
jb
add
out
adc
push
push
xchg
or
dec
(bad)
jle
das
mov
push
fidiv
adc
jb
mov
dec
jmp
push
sbb
(bad)
rcr
test
pop
jne
scas
mov
sub
xchg
and
cli
adc
pop
lea
push
jae
fbld
les
into
aas
adc
mov
or
mov
mov
inc
aad
adc
ret
jg
pop
repnz
call
test
mov
adc
pop
(bad)
nop
and
test
mov
sti
jno
push
sti
inc
(bad)
lea
pop
and
(bad)
pop
xor
push
sub
jp
pop
(bad)
sar
int3
jb
push
int3
jo
push
int3
jb
push
cmps
jb
(bad)
mov
and
out
jb
fbld
xchg
(bad)
hlt
pop
push
(bad)
pop
adc
and
jmp
push
cmps
sbb
test
mov
mov
jne
pop
lea
in
jb
test
pop
call
fidiv
pop
cmps
in
or
pop
mov
neg
add
sub
jp
pop
(bad)
sar
jp
ret
push
sub
jle
pop
(bad)
sar
cmps
jb
(bad)
dec
aas
adc
xor
push
into
mov
add
pop
lea
into
jb
push
es
(bad)
jb
mov
pop
lea
pusha
and
cmp
cmp
into
jo
push
es
repnz
aam
inc
icebp
ins
inc
cmc
and
fst
data16
lea
aad
cmps
lea
pop
test
jecxz
or
sub
jns
sub
jge
int3
jb
imul
(bad)
hlt
pop
pop
pop
mov
push
(bad)
mov
test
jecxz
or
pop
xor
push
jb
scas
das
aaa
jns
ror
sub
cmps
jb
and
dec
sbb
jb
mov
stc
sub
lahf
gs
or
mov
add
pop
pop
xchg
mov
int3
jae
test
mov
hlt
pop
pop
pop
mov
and
mov
fild
ds
fiadd
push
cmps
sbb
inc
test
test
cmps
jb
aad
push
push
daa
mov
adc
daa
or
sbb
je
retf
cmps
jb
mov
aaa
jne
popa
repz
or
mov
fninit
mov
cmp
sbb
push
int3
jb
push
pop
pop
lea
in
jb
pop
pushw
test
cdq
mov
and
jb
and
push
retf
push
cmps
jnp
and
test
push
cmps
inc
inc
mov
dec
cdq
enter
jbe
cmps
jb
mov
aaa
jno
popa
inc
inc
push
stc
mov
add
shl
adc
int
ins
sbb
scas
cmps
mov
xchg
push
ja
push
cmps
test
jecxz
or
jecxz
sar
mov
jb
and
ror
push
cmps
jnp
and
inc
dec
mul
push
int3
jb
and
loope
push
cmps
jnp
and
sbb
inc
mov
pop
sti
inc
test
out
jb
pop
adc
cdq
or
mov
add
lock
pop
adc
mov
imul
test
sbb
adc
jb
adc
cmps
jb
mov
aaa
jne
popa
rol
adc
scas
data16
int3
jb
xchg
cmps
jb
cmp
sbb
cmps
in
imul
call
das
mov
mov
dec
data16
pop
inc
cmp
jecxz
fimul
outs
mov
fild
cmp
in
sahf
into
fild
pusha
(bad)
mov
xchg
sub
adc
cmps
sti
rcr
xor
cmps
jb
xchg
repz
fs
(bad)
add
stc
hlt
pop
sub
mov
jp
outs
add
pop
jne
push
cmps
sti
pop
mov
stos
pop
mov
pop
pop
pop
push
das
add
dec
(bad)
leave
push
cmps
icebp
inc
pop
das
mov
nop
mov
mov
xor
mov
mov
loope
mov
pop
jge
test
and
xchg
or
mov
adc
test
stos
das
aaa
jns
jecxz
or
push
jae
push
dec
dec
(bad)
push
cmps
sti
inc
fucom
mov
xchg
xchg
mov
add
jle
mov
and
mov
xchg
adc
sti
inc
push
fs
aam
das
stos
sub
pusha
or
pop
sti
les
ret
mov
adc
les
gs
or
lock
les
sub
sahf
or
dec
test
mov
jecxz
sar
das
aaa
jns
popa
mov
(bad)
cmp
call
push
repz
cmps
leave
or
inc
test
xor
pushw
mov
jbe
aad
add
push
xchg
xor
and
xor
jg
cmps
cdq
leave
pop
adc
jg
adc
fistp
fwait
push
cmps
jb
mov
pusha
adc
fistp
fwait
push
cmps
jb
sbb
iret
mov
das
daa
popa
fbstp
inc
aaa
icebp
stc
cld
mov
in
(bad)
mov
and
aaa
jg
adc
jg
jecxz
repz
sub
scas
or
jle
in
das
aaa
push
(bad)
or
push
sub
aam
inc
retf
movs
jb
mov
jb
add
jmp
mov
and
pop
mov
and
lea
fbld
add
pop
mov
pop
pop
lea
and
jnp
and
jns
push
and
lea
pop
loop
and
jb
cmps
xchg
or
pop
pop
xchg
mov
das
neg
pop
lea
dec
cmps
jb
mov
pop
sti
add
pop
(bad)
jle
sbb
cmp
pop
(bad)
jle
sub
lea
pushf
jb
push
cmps
and
ret
sti
add
pop
mov
push
cs
cmps
(bad)
hlt
pop
into
jbe
push
cmps
call
scas
sti
add
pop
(bad)
jle
addr16
dec
test
cmps
pop
js
popa
sbb
stos
pop
jae
add
mov
inc
pop
daa
mov
daa
cmps
jb
add
sub
bound
sbb
sub
cmps
jb
xchg
scas
call
cmps
jb
iret
push
mov
lods
mov
add
test
loopne
adc
loopne
sub
aas
test
pop
ja
jne
sub
loop
cmps
jb
mov
pop
lea
icebp
sbb
mov
and
popf
adc
mov
cmps
jb
pop
cmps
jb
iret
push
mov
lods
mov
add
test
loopne
adc
push
xor
test
call
scas
call
cmps
jb
iret
push
mov
lods
mov
add
test
loopne
adc
dec
cmp
push
cmps
retf
mov
jb
mov
fist
xchg
jecxz
sub
aas
test
sub
(bad)
(bad)
ds
add
icebp
call
mov
hlt
jb
pusha
jo
cmps
stc
add
pop
mov
into
push
jo
cmps
and
jecxz
adc
jns
adc
retf
mov
jb
mov
(bad)
dec
push
xor
test
call
scas
sbb
jecxz
lea
dec
cmc
les
icebp
inc
pop
dec
xor
push
cmps
retf
mov
jb
mov
(bad)
dec
push
xor
test
call
scas
repz
jo
jb
movs
add
pop
(bad)
jge
pop
lea
jecxz
adc
jecxz
sub
aas
test
pop
ja
jne
add
push
cmps
jb
mov
pop
lea
icebp
sbb
mov
and
inc
jno
pusha
call
movs
jb
iret
push
mov
ds
add
sub
pop
test
outs
adc
(bad)
shr
pop
lea
neg
push
cmps
in
sar
and
adc
jmp
scas
and
call
cmps
jb
iret
push
mov
fstp
mov
pop
and
add
cmps
icebp
inc
inc
daa
mov
dec
cmps
jb
pop
loop
sub
aas
test
pop
ja
inc
into
push
adc
lea
pop
mov
(bad)
adc
adc
jmp
scas
and
sbb
in
jle
pop
lea
dec
cmp
push
cmps
icebp
inc
pop
dec
jne
push
cmps
retf
mov
jb
mov
(bad)
dec
push
xor
test
call
scas
repz
test
xor
xchg
frstor
mov
pop
and
int3
push
xor
push
cmps
icebp
inc
inc
dec
int
push
cmps
retf
mov
jb
mov
(bad)
popf
push
xor
test
call
scas
sti
jno
inc
sti
add
pop
(bad)
jle
pusha
call
cmps
jb
iret
push
mov
lods
mov
add
test
in
adc
in
sub
aas
test
pop
ja
jne
and
loop
cmps
jb
mov
pop
lea
icebp
sbb
mov
and
push
sbb
icebp
and
pop
(bad)
jle
dec
sub
push
cmps
lea
das
sub
bound
(bad)
frstor
mov
add
pop
(bad)
jle
and
cli
out
(bad)
jne
push
push
xchg
or
lea
mov
jmp
lea
iret
inc
test
call
push
cmps
jmp
scas
and
mov
dec
cmps
jb
in
jmp
nop
inc
mov
pop
(bad)
jle
jno
inc
aaa
icebp
(bad)
cmp
cmps
lea
into
sub
cmps
(bad)
cmp
cmps
lea
dec
ffree
push
cmps
icebp
inc
inc
pop
test
bound
adc
lea
push
lea
pop
pop
cdq
(bad)
jb
test
pop
lea
neg
in
in
sar
and
inc
adc
lea
mov
adc
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
das
jno
cmps
lea
pop
mov
ret
push
and
xor
push
cmps
jmp
scas
and
sbb
in
jle
pop
lea
dec
dec
ret
push
cmps
icebp
inc
pop
dec
mov
push
cmps
retf
mov
jb
mov
(bad)
dec
push
xor
test
call
scas
repz
pop
(bad)
jle
cmps
jb
test
pop
stc
add
pop
mov
and
add
pop
lea
and
jno
push
sti
inc
mov
sub
mov
pop
fwait
aam
cmps
jb
jmp
jb
test
cmps
jb
xlat
push
mov
les
jb
push
cmps
dec
add
pop
mov
and
stc
add
pop
mov
and
hlt
inc
into
sub
cmps
inc
pop
(bad)
jle
dec
sbb
push
cmps
icebp
inc
pop
sub
jne
pop
lea
sahf
pop
xor
push
jb
scas
das
mov
fistp
mov
jno
inc
sti
add
pop
(bad)
jle
and
inc
(bad)
jb
test
and
add
test
cmps
jb
rcl
jl
neg
add
pop
(bad)
jle
adc
hlt
dec
pop
(bad)
jno
pop
lea
rcr
jg
neg
in
in
sar
and
inc
jno
pusha
call
cmps
jb
iret
push
mov
lods
mov
add
pop
(bad)
jge
pop
lea
out
adc
out
sub
aas
test
pop
ja
inc
into
mov
xor
pop
mov
data16
mov
pop
js
push
cmps
jmp
scas
and
sbb
jecxz
lea
dec
jmp
inc
pop
das
sub
push
lea
jno
push
cmps
lea
pop
mov
and
test
pop
lea
cmc
call
stos
sti
add
pop
mov
data16
rcr
jle
pushf
add
pop
(bad)
jge
pop
lea
out
adc
out
sub
aas
test
pop
ja
inc
into
das
jno
cmps
lea
pop
mov
mov
adc
jae
fbld
pop
imul
mov
lods
mov
add
pop
(bad)
jge
pop
lea
cdq
jb
aad
jp
out
cdq
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
lea
pop
mov
jle
adc
add
pop
(bad)
jge
pop
lea
cdq
jb
aad
jp
cmp
inc
sti
add
pop
(bad)
jle
pusha
call
cmps
jb
iret
push
mov
lods
mov
dec
adc
jmp
scas
hlt
stc
cmp
pop
mov
into
dec
jo
cmps
and
adc
cdq
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
das
jno
cmps
lea
pop
mov
cli
dec
adc
dec
adc
jmp
scas
and
sbb
in
jle
pop
lea
dec
inc
mov
pop
das
xor
test
dec
xchg
mov
push
cmps
jb
mov
(bad)
dec
push
xor
test
call
scas
call
cmps
jb
iret
push
mov
lods
mov
dec
adc
jmp
scas
hlt
stc
cmp
pop
mov
into
dec
jo
cmps
and
adc
push
xor
test
call
scas
sti
jno
push
sti
inc
mov
pop
js
push
cmps
jmp
scas
and
sbb
jecxz
lea
dec
loope
push
cmps
icebp
inc
pop
into
outs
jno
cmps
lea
pop
mov
es
adc
dec
adc
jmp
scas
and
sbb
jecxz
lea
dec
sub
pop
into
push
xor
pop
mov
out
dec
adc
dec
adc
lea
mov
mov
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
lea
pop
mov
mov
adc
lods
jle
pop
and
rcr
jg
neg
and
dec
adc
dec
adc
jmp
scas
and
sbb
jecxz
lea
dec
mov
inc
pop
das
add
push
xor
test
call
scas
call
cmps
jb
iret
push
mov
lods
mov
add
test
fwait
jb
aad
jp
pop
fwait
jb
out
dec
jno
push
aas
test
jno
inc
inc
xor
test
dec
popf
ret
push
icebp
call
mov
jno
push
sti
inc
mov
pop
js
push
cmps
jmp
scas
and
sbb
jecxz
lea
dec
dec
mov
pop
into
lods
outs
adc
lea
pop
mov
mov
push
and
dec
adc
jmp
scas
and
sbb
jecxz
lea
dec
jne
push
cmps
icebp
inc
pop
daa
pushf
rol
jb
jmp
jb
out
lods
jb
push
aas
test
pop
ja
jne
fnstcw
push
cmps
jb
mov
pop
lea
icebp
sbb
mov
and
popf
ret
push
pop
(bad)
jge
pop
lea
call
push
int3
jb
push
int3
jb
push
into
jb
push
out
hlt
pop
dec
inc
mov
mov
push
jae
fbld
xor
pop
mov
push
dec
adc
lea
icebp
and
pop
lea
pop
(bad)
imul
adc
stos
outs
cmps
jb
jecxz
lea
dec
mov
neg
jb
mov
idiv
nop
cmc
call
dec
lea
jle
cmps
push
xchg
or
push
lea
mov
or
mov
add
icebp
int
dec
sbb
or
pop
mov
das
mov
adc
push
das
mov
loopne
(bad)
sar
sub
idiv
pop
(bad)
sar
int3
jb
ror
sbb
pop
and
push
cmps
jb
mov
and
lea
push
aam
jmp
into
dec
outs
adc
sbb
mov
cmps
jb
mov
into
movs
outs
adc
sbb
in
jmp
movs
jb
(bad)
dec
stos
outs
test
das
mov
lahf
gs
or
cmps
jb
add
int
adc
jb
mov
pop
lea
popa
icebp
and
pop
lea
sub
jae
ret
popa
push
das
not
stos
pop
lea
adc
jb
push
das
dec
xchg
cmp
or
dec
sub
aam
sub
adc
adc
pop
lea
pop
inc
jns
popa
and
adc
or
lea
pop
lea
xchg
dec
adc
or
call
pop
mov
xor
ret
ds
jle
lock
ror
and
sahf
jb
fbld
add
lea
pop
lea
push
inc
adc
push
jl
pop
call
pop
mov
lea
bnd
fcomi
jo
adc
out
stos
pop
lea
push
lods
jb
mov
pop
lea
popa
sbb
lahf
nop
jb
fbld
out
test
pop
sti
inc
cmp
sbb
test
pushf
jb
mov
neg
jmp
(bad)
(bad)
jl
pop
and
stc
dec
xor
push
into
jo
push
es
cmp
mov
imul
data16
sti
push
cmps
jb
mov
dec
mov
sti
jns
pop
sti
inc
mov
idiv
pop
(bad)
rcr
and
jl
pop
and
xchg
jb
test
pop
lea
pop
lea
adc
jl
pop
lea
pop
lea
adc
jl
pop
lea
pop
lea
sub
xor
mov
and
out
jl
pop
jnp
and
jb
fistp
jns
popa
inc
inc
mov
into
shr
cmps
inc
pop
lea
dec
sar
jg
sti
inc
(bad)
(bad)
jl
pop
and
pop
mov
neg
imul
idiv
sti
jns
pop
sti
inc
cmp
sbb
test
lahf
jb
aad
outs
or
popa
idiv
test
(bad)
lds
jb
rol
jle
cmps
jb
push
shl
push
cmps
sti
jns
inc
sti
add
pop
lea
popa
icebp
cmp
pop
lea
shr
xchg
and
sbb
popa
inc
pop
lea
dec
cmp
pop
sub
add
add
pop
lea
int3
jb
push
int3
push
jmp
int3
jb
push
sub
jge
pop
(bad)
sar
call
test
jb
jecxz
(bad)
jle
dec
in
mov
cmps
rep
inc
mov
test
pop
sbb
sub
sbb
pop
and
sahf
jb
aad
bound
ror
xlat
push
sbb
stos
pop
lea
into
pop
outs
adc
call
scas
mov
dec
into
call
cmps
jb
rol
(bad)
jle
cmps
clc
add
pop
lea
mov
push
fidivr
cmps
or
push
cmps
repz
or
loop
test
into
jb
push
cmps
call
cmps
jb
(bad)
mov
pop
and
mov
int3
jae
cmp
xor
test
sbb
jle
test
xor
retf
jle
dec
outs
add
cmp
inc
or
icebp
and
pop
lea
daa
mov
cmp
adc
mov
scas
push
xchg
or
ret
test
repnz
adc
(bad)
jle
dec
aad
push
cmps
sti
jns
pop
sti
inc
test
pop
call
cmp
ficomp
das
xchg
add
sub
push
out
das
mov
das
aaa
jno
popa
retf
cmps
jb
mov
aaa
ins
fbld
hlt
pop
dec
fnsave
xor
daa
jg
sar
not
adc
add
jns
inc
sti
les
mov
or
jb
xchg
sar
mov
cmps
jb
xchg
sar
mov
cmps
jb
loope
mov
xchg
mov
or
mov
sar
call
daa
mov
and
setge
out
(bad)
xchg
or
jbe
adc
and
nop
jb
aad
jle
and
ja
mov
das
mov
and
inc
push
mov
inc
adc
aaa
jg
loop
test
daa
jge
loop
add
lods
mov
cmps
and
adc
mov
mov
neg
or
pop
and
push
lock
add
jb
push
int3
jb
xchg
sti
jns
pop
sti
inc
cmp
and
das
xchg
jb
fninit
mov
add
mov
cmps
and
addr16
jb
fistp
jns
popa
stc
les
gs
or
cmps
call
icebp
stc
fcomp
psrlq
retf
cmps
jb
mov
idiv
mov
lea
xchg
cmps
mov
xchg
popa
idiv
dec
cmps
jb
rcr
xchg
jle
idiv
add
inc
lea
into
adc
adc
call
scas
mov
shl
adc
mov
test
pop
call
scas
jnp
and
lea
sar
push
xchg
jb
fistp
jns
popa
inc
inc
push
dec
adc
sbb
adc
jb
rcr
xchg
jle
idiv
add
inc
lea
lock
rcr
adc
(bad)
arpl
jnp
and
lea
sar
sti
xchg
jb
fistp
jns
popa
inc
inc
push
dec
jle
cld
xchg
mov
push
daa
popf
push
inc
cmps
jb
or
mov
cmp
jb
mov
cmc
and
(bad)
jp
retf
sahf
jmp
fist
jno
pusha
retf
cmps
jb
mov
div
pop
lea
nop
cmc
sbb
ja
jb
fist
jno
pusha
sti
pop
aad
(bad)
rcl
jae
and
inc
cmp
sti
pop
push
pop
and
pop
lea
bound
add
add
das
xor
div
pop
lea
rcl
jle
das
mov
sbb
sbb
pop
and
xchg
jb
aad
jp
retf
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
leave
mov
cmps
icebp
inc
pop
push
stc
xchg
test
and
inc
mov
pop
js
push
cmps
jmp
scas
and
call
cmps
jb
iret
push
mov
fistp
jb
test
dec
xor
test
xchg
jb
aad
bound
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
cmp
pop
into
inc
jo
cmps
inc
inc
lea
dec
inc
mov
cmps
icebp
inc
pop
das
xor
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
jns
push
cmps
icebp
inc
pop
dec
mov
push
cmps
retf
mov
jb
mov
fistp
jecxz
jb
out
lds
push
aas
test
sub
xor
sub
xor
and
(bad)
jmp
(bad)
jb
test
push
xor
test
xchg
jb
aad
data16
dec
adc
push
cmps
jb
mov
(bad)
dec
push
xor
test
xchg
jb
aad
jp
pop
push
xor
test
xchg
jb
aad
jp
nop
rcr
push
dec
push
mov
cmps
retf
mov
jb
mov
(bad)
dec
push
xor
test
xchg
jb
aad
jp
push
push
xor
test
xchg
jb
aad
jp
mov
lods
jb
push
aas
test
pop
ja
jg
movs
mov
cmps
retf
loop
cmps
jb
mov
cmps
xchg
jle
icebp
sbb
mov
cmps
xchg
jle
icebp
call
mov
test
in
or
cmps
xchg
jle
neg
add
cmps
jb
mov
imul
pop
lea
nop
dec
stc
mov
cmps
retf
mov
jb
mov
(bad)
dec
push
xor
test
xchg
jb
aad
jp
sbb
and
test
xchg
jb
aad
jp
pop
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
sbb
inc
pop
into
push
add
inc
lea
dec
sub
pop
das
sub
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
pop
mov
cmps
icebp
inc
pop
pop
pop
(bad)
(bad)
jb
test
dec
xor
test
xchg
jb
aad
bound
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
cdq
mov
cmps
icebp
inc
pop
into
jb
adc
inc
inc
lea
dec
movs
mov
cmps
icebp
inc
pop
das
xor
xchg
jb
out
lods
jb
push
aas
test
pop
ja
inc
into
push
adc
inc
inc
lea
dec
fnstenv
pop
dec
adc
imul
sti
push
xlat
popa
bound
jmp
xchg
jle
icebp
sbb
jmp
xchg
jle
icebp
call
mov
mov
cmps
jb
pop
cmps
jb
iret
push
mov
lods
mov
add
mov
(bad)
sar
and
test
and
inc
ds
ret
push
sub
xor
and
inc
adc
jmp
scas
and
sbb
shl
call
scas
call
cmps
jb
iret
push
mov
lods
mov
inc
adc
jmp
scas
hlt
(bad)
cmp
inc
lea
into
sub
cmps
(bad)
cmp
inc
lea
dec
fnsave
inc
into
mov
add
inc
lea
dec
int
push
cmps
icebp
inc
pop
int3
jb
push
int3
jo
push
int3
jb
push
cmps
jb
add
cmps
sti
add
jns
jle
dec
icebp
rcl
inc
inc
lea
dec
int
push
cmps
sbb
test
sbb
test
pop
lods
jle
dec
in
push
cmps
lea
jns
jle
xchg
pop
adc
test
and
inc
data16
das
add
std
mov
add
cmc
and
jmp
push
pop
test
fbld
idiv
pop
sti
inc
aad
out
jl
pop
jb
scas
cmps
mov
xchg
xchg
test
or
jb
(bad)
jp
add
jle
daa
popf
cmp
or
mov
das
mov
mov
jb
push
dec
mov
cmp
xchg
mov
xchg
into
jbe
adc
call
push
(bad)
jle
int3
(bad)
jmp
sub
and
mov
into
jbe
push
cmps
inc
pop
lea
into
(bad)
cmps
sbb
push
cmps
jb
mov
and
jge
out
movs
jb
mov
idiv
pop
(bad)
rcr
and
jl
pop
and
mov
fistp
jns
popa
lea
pop
lea
sub
xor
mov
and
jge
sub
ret
push
sub
jge
pop
(bad)
sar
sub
xor
(bad)
mov
pop
and
mov
mov
das
neg
stos
pop
lea
scas
cmps
mov
xchg
int3
ss
sub
cmp
push
pop
adc
jae
fbld
add
pop
lea
cmps
jb
xchg
and
adc
lea
shr
xchg
and
adc
cmps
inc
pop
lea
dec
ja
test
add
add
pop
lea
int3
jb
push
int3
push
jmp
int3
jb
push
sub
jge
pop
(bad)
sar
call
test
jb
jecxz
(bad)
jle
dec
sub
(bad)
shl
adc
jl
pop
sbb
sub
sbb
pop
and
mov
aad
bound
(bad)
scas
xlat
push
fisubr
stos
pop
lea
into
pop
outs
adc
call
scas
mov
dec
into
call
cmps
jb
rcr
mov
cmps
clc
add
pop
lea
mov
jge
inc
cmps
jb
cmps
add
cmps
sti
jns
pop
sti
inc
mov
not
stos
pop
(bad)
rol
dec
adc
ds
pushf
ret
push
sub
adc
lods
ret
jle
and
lea
push
cmps
jb
shr
mov
mul
imul
jp
xchg
test
jb
push
pop
(bad)
adc
shr
mov
neg
add
sub
sbb
test
pop
call
daa
popf
jge
cmps
jb
jecxz
(bad)
jle
dec
lods
stos
push
cmps
sbb
out
jb
push
into
jns
adc
and
fisttp
data16
dec
xor
push
sub
lea
mov
cmps
adc
test
pop
lea
xchg
stos
cdq
sahf
frstor
out
jl
pop
icebp
imul
(bad)
jle
dec
fst
pop
icebp
inc
pop
daa
mov
arpl
pop
adc
lea
xchg
or
div
mov
das
mov
push
pop
(bad)
and
fwait
(bad)
jb
test
pop
call
cmp
or
stc
sub
lahf
fs
add
xchg
add
sub
sbb
jns
popf
shl
jb
mov
das
aaa
jns
sar
(bad)
(bad)
jb
(bad)
mov
movs
(bad)
mov
jb
nop
daa
mov
push
cmps
jb
add
cmps
push
cmps
and
(bad)
jb
test
mov
push
adc
jb
adc
jmp
lock
out
jmp
int3
jb
repz
jb
fbld
rcr
jbe
das
aaa
jne
popa
sbb
dec
xor
les
xor
push
cmps
sti
jns
pop
sti
inc
fucom
mov
or
mov
cmp
jb
mov
lock
lahf
xlat
popa
push
push
cmps
sbb
(bad)
jb
fbld
ja
mov
sti
jns
pop
sti
inc
ds
jge
push
sub
and
add
test
cmps
cmp
call
stos
dec
jle
cmps
jb
push
das
sub
mov
push
lock
dec
fstp
or
aam
inc
icebp
ins
inc
icebp
int
sub
xor
scas
push
xchg
or
pop
sti
inc
xor
jg
cmps
cdq
jmp
fbld
adc
jmp
fninit
pushf
sar
sub
outs
push
int3
jb
adc
xchg
repnz
call
jecxz
add
dec
xor
mov
and
pushf
sar
sbb
push
cmps
jb
arpl
icebp
test
cmps
repz
outs
mov
xor
adc
jg
pop
jg
fyl2xp1
mov
rol
lock
(bad)
fistp
jns
popa
sbb
cmp
sbb
cmps
sbb
push
int3
jb
push
int3
je
inc
dec
mov
push
cmps
sti
inc
xlat
dec
mov
push
cmps
sbb
arpl
ret
ret
push
dec
ins
test
cmps
sbb
arpl
rcl
test
cmps
sti
jns
pop
sti
inc
cmp
and
pop
inc
add
in
imul
pop
inc
lods
stc
out
imul
pop
inc
popf
repz
imul
popa
sbb
arpl
mov
push
cmps
sbb
arpl
shr
int3
inc
jle
ss
dec
shr
add
inc
jle
rol
ret
push
dec
loope
push
cmps
rep
sbb
and
pop
inc
mov
out
imul
cmps
and
pop
inc
jno
out
imul
pop
test
jecxz
or
xchg
lea
repnz
adc
lea
loop
adc
test
jecxz
or
repz
fs
icebp
int
cmp
popa
or
int3
mov
dec
ffreep
push
dec
mov
push
cmps
shl
sub
cmp
xor
push
int3
mov
es
ret
push
dec
in
cmps
push
cmps
sar
sub
cmp
xor
push
das
mov
das
aaa
jge
popa
sbb
xchg
pop
cs
cmps
call
or
cmp
int3
mov
mov
rcl
cmps
push
cmps
sbb
xchg
outs
and
cmps
call
push
xor
push
int3
mov
mov
xor
test
cmps
call
pop
xor
push
int3
mov
mov
rcl
cmps
push
cmps
rep
leave
scas
jb
cmp
lea
cmps
push
adc
sbb
jb
stos
pop
inc
mov
mov
pop
lea
jp
adc
sbb
jb
stos
pop
inc
add
xchg
inc
jns
popa
sub
fs
outs
xlat
add
pop
mov
enter
pop
sti
inc
ds
lahf
ret
push
pop
pop
mov
das
mov
mov
dec
sbb
pop
icebp
inc
inc
add
repz
mov
and
xor
dec
sar
cmps
mul
pop
lea
cmps
and
adc
les
lea
jno
int3
jb
push
into
jb
(bad)
neg
pop
cmps
in
jmp
cmps
jo
push
dec
fldenv
out
jb
push
pop
inc
mov
out
jmp
neg
mov
adc
imul
mov
adc
xor
push
int3
jb
and
ffree
push
das
mov
das
aaa
ins
fbld
sub
xchg
xor
cmps
sbb
push
cmps
jb
adc
les
int3
and
inc
into
jnp
(bad)
neg
pop
cmps
in
jmp
cmp
call
push
xor
cmp
sbb
cmp
sbb
push
cmps
jb
push
int3
jb
pop
int3
imul
sbb
int3
inc
jle
mov
mov
sub
xchg
xor
cmps
sbb
push
int3
push
jmp
into
jb
push
neg
cmc
mov
dec
xor
jae
jb
sub
xor
push
cmps
sbb
pop
cmps
sbb
pop
cmps
sbb
push
int3
or
jle
jb
push
neg
mov
mov
xor
jae
jb
not
lea
cmps
lea
mov
push
push
cmps
jb
mul
sbb
or
ds
lahf
ret
push
int3
jb
sbb
ffree
push
int3
jb
arpl
jb
arpl
ret
int3
(bad)
jmp
sbb
push
int3
pop
jmp
xor
ins
adc
sbb
push
add
sbb
pop
cmps
sbb
adc
sbb
cmp
sbb
push
cmps
jb
inc
into
jno
(bad)
neg
pop
cmps
in
jmp
cmp
call
or
adc
cmps
sbb
mov
into
xor
retf
xor
fistp
jmp
test
cmps
call
pop
inc
mov
out
jmp
pop
inc
loope
in
jmp
cmp
sbb
push
cmps
jb
sub
jno
(bad)
neg
pop
cmps
in
jmp
cmp
call
pop
xor
bound
xor
ss
xor
push
int3
dec
jmp
or
push
into
jno
(bad)
neg
pop
cmps
in
jmp
cmp
call
or
sub
push
xchg
or
dec
sti
inc
mov
int3
jb
arpl
jb
arpl
ret
int3
(bad)
jmp
into
xchg
adc
jb
push
cmps
jb
ds
ret
push
into
nop
ins
adc
sbb
push
add
rep
retf
cmp
xor
adc
xor
push
cmps
jb
test
mov
adc
sbb
mov
dec
xor
jne
jb
and
xor
bound
xor
adc
xor
ds
mov
push
cmps
sbb
sbb
xor
push
int3
jb
and
fcmovnb
push
int3
jb
arpl
jb
arpl
ret
int3
(bad)
jmp
ds
jae
push
int3
push
jmp
ds
nop
ins
adc
sbb
push
add
sti
jns
pop
sti
inc
cmp
lea
cmps
lea
mov
xlat
ds
jae
push
into
rol
push
cmps
and
pop
dec
xor
push
int3
jb
stos
test
cmc
xor
ret
push
int3
jb
arpl
jb
arpl
ret
int3
push
jp
jb
ds
jb
push
int3
jmpw
repnz
jp
ret
push
into
jnp
adc
sbb
xchg
test
cmc
and
ret
push
int3
jb
arpl
jb
arpl
ret
int3
push
aam
jb
ds
push
int3
jmpw
repnz
ss
into
jnp
adc
sbb
rol
rcl
test
das
mov
push
pop
inc
mov
out
jmp
pop
inc
loope
in
jmp
int3
pop
jmp
cmp
sbb
mov
cmp
into
jb
push
cmps
call
or
cmp
xor
ss
xor
ds
jb
push
int3
jmpw
repnz
jp
ret
push
into
jnp
adc
sbb
pop
test
cmc
xchg
rcl
jle
xchg
ffree
push
int3
jb
arpl
ret
int3
gs
ds
adc
repnz
dec
cdq
ret
push
into
jo
adc
sbb
push
add
call
mov
mov
das
mov
aaa
pop
lea
clc
mov
add
jo
ds
mov
outs
cmps
jb
mov
sar
scas
push
lea
pusha
sbb
in
xlat
mov
and
ffree
push
das
mov
push
pop
inc
mov
out
imul
pop
test
jecxz
or
lock
pop
inc
mov
out
jmp
lock
les
sub
adc
cmps
sbb
push
into
scas
jo
cmps
sbb
in
jmp
mov
add
sbb
pop
cmps
sbb
adc
les
int3
data16
into
jb
(bad)
neg
push
mov
dec
xor
jbe
jb
push
or
sbb
popa
sbb
pop
cmps
sbb
pop
cmps
sbb
adc
les
int3
and
inc
into
jnp
(bad)
neg
pop
cmps
in
jmp
cmp
call
push
xor
cmp
sbb
cmp
sbb
push
cmps
jb
push
int3
jb
pop
int3
imul
add
inc
jle
mov
cmp
test
cmps
sbb
adc
sbb
cmp
sbb
push
es
mov
cmp
int3
jb
pop
xchg
cmc
dec
ffreep
push
das
mov
aam
xor
push
cmps
jb
arpl
rcl
sahf
push
cmps
sbb
mov
into
xor
mov
inc
ins
adc
jb
and
sbb
push
cmps
jb
arpl
rcl
sahf
push
cmps
cdq
xchg
cmp
sbb
push
pop
inc
imul
mov
lea
cmps
lea
mov
push
int3
inc
jmp
int3
or
push
cmps
repnz
jp
ret
push
into
jmp
cmps
sbb
push
add
retf
cmps
jb
mov
aaa
imul
xchg
inc
cs
cmps
sbb
adc
sbb
push
jmpw
jb
movs
jb
push
into
scas
jo
cmps
sbb
in
jmp
dec
sub
lods
stc
out
imul
lea
cmps
lea
mov
add
jb
cmp
data16
adc
xor
push
int3
jb
ja
jb
cmc
rol
ret
push
daa
test
cmps
jb
push
pop
inc
mov
out
jmp
pop
inc
(bad)
jb
inc
int3
adc
cmp
into
jb
push
neg
retf
mov
dec
xor
dec
cmps
jb
data16
cmp
xor
adc
xor
push
cmps
jb
mul
sbb
dec
dec
xor
push
int3
jb
(bad)
mov
ffreep
push
daa
mov
pop
cmps
jb
push
pop
inc
mov
out
jmp
pop
inc
(bad)
jb
inc
int3
and
out
cmps
jb
ds
jb
push
into
jb
push
neg
(bad)
mov
dec
xor
dec
cmps
jb
ret
cmp
xor
adc
xor
push
cmps
jb
mov
jb
cmp
sbb
ror
cmp
int3
jb
addr16
ret
ret
push
int3
jb
arpl
jb
arpl
ret
int3
(bad)
jmp
ds
jb
push
int3
ins
jmp
ds
cdq
ret
push
into
nop
ins
adc
sbb
push
add
sbb
pop
cmps
sbb
adc
sbb
push
int3
pop
jmp
into
jb
(bad)
neg
adc
in
jmp
cmps
jo
push
dec
int
push
cmps
rcr
scas
xchg
mov
xchg
int3
jb
arpl
jb
arpl
ret
int3
push
jle
xor
inc
into
jb
(bad)
neg
pop
cmps
in
jmp
cmps
jo
push
dec
icebp
pushf
push
cmps
shr
push
pop
inc
mov
out
jmp
pop
inc
loope
in
jmp
int3
push
jmp
int3
jmpw
repnz
jp
ret
push
into
jnp
adc
sbb
sbb
ffree
push
int3
jb
arpl
jb
arpl
ret
int3
gs
ds
adc
repnz
dec
cdq
ret
push
into
jo
adc
sbb
push
add
call
xchg
mov
xchg
dec
aad
test
gs
or
lock
lods
xlat
dec
aad
push
cmps
sbb
push
int3
jno
push
int3
jno
push
cmps
jb
test
mov
icebp
jg
test
jb
push
lock
daa
test
cmps
jb
mov
and
aaa
jne
cmps
jb
xlat
popa
int3
fwait
push
cmps
inc
cmps
idiv
les
test
adc
sbb
jmp
mov
cmp
(bad)
hlt
stos
into
sub
cmps
sbb
mov
stos
(bad)
hlt
pop
dec
dec
addr16
das
aaa
jns
pushw
mov
fninit
mov
test
bound
cmp
dec
lahf
push
test
das
mov
or
mov
add
cmc
and
data16
mov
adc
mov
das
mov
nop
out
popa
adc
inc
pop
lea
dec
rcr
dec
cmps
jb
pop
cmps
jb
iret
push
mov
test
das
jle
fisttp
add
cmps
lea
neg
add
pop
jo
inc
into
out
inc
adc
inc
pop
lea
dec
adc
push
push
sti
inc
(bad)
fisttp
cmp
cmps
lea
neg
add
pop
jbe
inc
into
outs
inc
adc
inc
pop
lea
dec
pop
cdq
push
cmps
repnz
test
fwait
mov
push
sub
sub
daa
mov
sbb
je
inc
into
sub
cmps
inc
pop
lea
dec
mov
test
jg
ret
push
sub
sub
movd
arpl
lods
xor
jb
test
mov
adc
mov
xor
in
or
cmps
lea
neg
add
movd
jmp
(bad)
jb
test
mov
adc
mov
xchg
xchg
in
or
cmps
lea
neg
add
pop
jle
inc
into
inc
inc
adc
inc
pop
lea
dec
sbb
pop
stos
jb
(bad)
fisttp
leave
xchg
in
or
cmps
lea
neg
add
pop
jl
inc
into
push
inc
adc
inc
pop
lea
dec
inc
xchg
push
cmps
sbb
mov
dec
xor
test
or
cmp
cmps
sbb
in
jmp
mov
into
mov
pop
cmps
call
mov
jno
push
sti
inc
mov
clc
sub
mov
and
add
scas
int
push
fidiv
cmp
jb
mov
das
mov
movs
daa
test
sbb
push
push
sub
xchg
daa
jge
hlt
call
scas
jnp
and
loope
push
cmps
repz
xor
sub
mov
rep
jle
jb
add
xchg
push
fbld
xchg
jbe
pop
sti
inc
fist
jno
pusha
sbb
jb
ror
jle
neg
imul
aas
test
xor
cmp
pop
lea
shl
jno
xor
test
mov
sbb
pusha
repnz
pop
lea
shl
pop
xor
test
mov
adc
pop
jno
inc
into
adc
cmps
inc
push
lea
dec
test
pop
lea
shl
sub
sbb
pop
and
mov
sub
push
xchg
or
inc
test
das
mov
jmp
mov
mov
mov
push
sub
ins
mov
adc
push
es
jb
pop
lea
xchg
in
or
dec
test
neg
add
push
mov
mov
mov
push
sub
ins
mov
adc
mov
jmp
mov
scas
pop
nop
ds
ret
push
sub
ins
mov
(bad)
adc
lea
xchg
in
or
dec
test
neg
add
push
mov
lods
pop
nop
ds
mov
push
sub
ins
mov
mov
push
das
add
push
mov
lods
pop
nop
ds
mov
push
sub
ins
mov
stos
adc
lea
xchg
in
or
dec
test
neg
add
push
mov
stos
pop
nop
test
ins
mov
jle
adc
lea
xchg
in
or
dec
test
neg
jmp
(bad)
lahf
jbe
pop
and
dec
lea
dec
sub
push
cmps
sbb
out
jb
pop
xor
test
and
cmp
pop
lea
shl
jmp
test
cmps
pop
mov
daa
test
cmp
sbb
sub
or
xchg
test
xor
call
scas
sti
add
pop
lea
data16
xchg
movs
jb
mov
es
jge
pop
lea
push
cmps
repnz
pop
lea
test
jb
jmp
mov
pushf
jge
jle
jb
nop
and
or
sub
jns
pop
(bad)
sar
fwait
cdq
ret
push
sub
jge
pop
(bad)
sar
and
mov
pop
jb
jg
or
inc
sar
imul
pop
dec
fbstp
or
pop
lea
and
push
cmps
icebp
mov
push
rol
(bad)
pop
xor
push
sub
jge
pop
(bad)
sar
daa
pushf
ficom
jb
(bad)
pop
xor
push
sub
jge
pop
(bad)
sar
and
sbb
rcr
jle
neg
add
sub
jge
pop
(bad)
sar
mov
idiv
pop
(bad)
sar
into
jns
adc
inc
pop
lea
dec
gs
push
cmps
icebp
inc
inc
sub
jge
pop
(bad)
sar
sub
jge
pop
lea
xchg
mov
mov
neg
cmp
mov
neg
add
and
imul
and
inc
cmp
sbb
in
or
pop
mov
neg
add
and
adc
add
pop
lea
data16
mov
(bad)
sti
add
pop
lea
push
ja
push
cmps
icebp
jns
test
jb
jecxz
mov
into
loop
adc
sbb
jb
rcr
jle
neg
add
in
or
pop
mov
neg
or
pop
mov
neg
or
jp
jle
dec
push
or
jp
jle
es
test
shl
sar
jle
pusha
test
jge
fstp
jle
and
lea
jg
sti
inc
test
pop
inc
pop
lea
into
lods
imul
add
pop
lea
dec
mov
inc
inc
sub
jge
pop
(bad)
sar
das
neg
pop
lea
pop
mov
icebp
call
jle
jle
sub
xchg
sbb
mov
das
div
pop
lea
pop
mov
test
mov
das
sub
pop
mov
neg
or
pop
mov
icebp
stc
cmp
pop
lea
fidiv
add
nop
push
cmps
inc
pop
lea
int3
jb
jecxz
mov
into
sbb
push
cmps
sbb
inc
cmps
jb
mov
sub
jge
pop
(bad)
rol
pop
lea
push
jle
bound
xchg
scas
mov
rol
(bad)
ins
scas
pop
lea
mov
sbb
pusha
sbb
and
jb
cmovg
or
repz
fs
ret
push
dec
jne
push
cmps
and
add
sti
pop
jg
sti
inc
xlat
push
push
rcl
sbb
push
into
jae
dec
cmps
call
add
inc
neg
jmp
dec
cmp
add
sub
ffree
push
popa
ja
sti
out
adc
mov
and
cmps
call
cmps
jb
ds
ret
push
dec
sbb
add
jb
mov
das
stos
or
jb
(bad)
ret
outs
test
scas
call
into
loop
adc
inc
dec
lea
dec
add
test
fwait
lea
cmps
jge
jnp
jb
aad
or
cmps
jp
jae
mov
push
pop
ja
xchg
in
cmp
jb
mov
dec
lea
gs
jmp
xchg
pop
das
mov
mov
pop
ins
test
das
mov
inc
pop
das
mov
ret
add
ss
nop
call
sbb
ins
test
les
fbld
imul
pop
dec
fbstp
or
push
cli
adc
test
pop
lea
test
data16
stc
dec
lea
dec
sbb
inc
mov
pusha
imul
pop
lea
test
pop
daa
adc
(bad)
sar
ss
ret
push
into
cmps
imul
add
dec
lea
dec
cmp
sbb
pop
and
pop
pushf
jle
neg
or
add
call
add
mov
pop
lea
xchg
mov
jb
cmp
inc
dec
xor
pop
jg
sti
inc
cmp
call
(bad)
into
mov
adc
sbb
out
jb
cwde
dec
xor
push
dec
lods
xchg
push
cmps
(bad)
cmp
dec
lea
xchg
jp
adc
retf
mov
xor
repz
int3
jb
ds
ret
push
into
loop
adc
sbb
in
jmp
mov
sub
test
arpl
call
cmps
and
push
cmps
test
and
ins
test
push
cwde
ret
push
into
loop
adc
sbb
in
jmp
mov
sub
arpl
and
adc
cdq
sahf
dec
cmps
jb
lock
xor
push
into
mov
cmp
mov
adc
sbb
dec
mov
cmps
jb
movs
add
iret
data16
jb
mov
div
mov
int3
jb
push
int3
jbe
push
int3
jb
push
cmps
jb
cmps
fadd
push
dec
lds
loop
mov
cmps
jb
push
int3
jb
push
neg
inc
adc
lea
out
idiv
add
dec
lea
dec
sbb
jecxz
lea
outs
(bad)
rcl
jae
and
sbb
sub
xor
pop
(bad)
(bad)
test
test
inc
out
neg
cmp
add
mov
daa
xor
adc
lea
out
idiv
add
dec
lea
dec
stc
nop
push
cmps
dec
dec
lea
outs
(bad)
rcl
jae
and
sbb
sub
xor
pop
(bad)
(bad)
test
test
inc
out
neg
cmp
add
mov
pop
pop
xor
push
push
cs
push
cmps
test
and
ins
test
dec
lea
inc
jecxz
and
xor
push
adc
rcl
inc
fistp
pop
fbld
sub
dec
mov
les
cmps
sbb
push
das
aaa
push
xchg
jecxz
adc
stos
or
mov
sbb
sbb
push
cmps
mov
xchg
cmps
jb
push
daa
mov
add
outs
jb
push
cmps
inc
jmp
jmp
pop
inc
mov
out
jmp
int3
jb
push
int3
jb
push
int3
jb
push
cmps
mov
ret
push
into
fwait
ins
adc
sbb
push
add
sbb
push
int3
jb
add
call
mov
jb
push
cmps
jb
and
sbb
mov
stos
jb
ds
ret
push
neg
or
push
lahf
jle
das
stos
mov
das
mov
sub
jle
push
lahf
jle
popa
imul
push
cmps
jb
movs
push
aas
adc
(bad)
rcr
and
outs
test
bound
cmp
into
and
cmps
sbb
sahf
xor
push
xchg
shl
jae
mov
push
cmps
call
cmps
stos
or
pop
(bad)
sar
sbb
push
int3
jb
push
dec
pop
(bad)
push
cmps
and
stos
jb
(bad)
fisubr
pop
and
push
int3
jb
call
cmps
sbb
push
neg
jmp
into
xchg
test
cmps
call
sub
gs
dec
movs
(bad)
push
cmps
repz
ins
in
sbb
jb
adc
jb
adc
imul
popw
push
or
sub
mov
aam
inc
rep
push
jb
add
fild
mov
pop
and
jmp
push
cmps
or
mov
enter
dec
cmps
mov
dec
nop
push
cmps
jb
rcr
jo
push
fwait
popa
adc
call
(bad)
ss
cmps
jb
outs
cmps
jb
pop
and
adc
es
cmps
jb
imul
ret
push
cmps
jge
lea
lahf
ret
push
pop
inc
in
xchg
in
imul
pop
repz
loopne
jb
ds
lahf
ret
push
neg
add
pop
lea
pop
jae
fbld
add
pop
lea
pop
(bad)
imul
data16
frstor
mov
jle
loop
rcl
mov
jnp
and
stc
add
pop
lea
and
imul
lea
test
sub
lea
test
xor
adc
pop
lea
jbe
mov
cmps
stc
add
pop
lea
and
or
inc
(bad)
jle
(bad)
neg
pop
(bad)
sar
sbb
pop
cmps
call
push
xchg
or
bound
add
mov
push
cmps
jge
xchg
mov
mov
push
add
rep
fcomp
jb
aad
sbb
cmps
jb
imul
ret
push
cmps
pop
xchg
dec
enter
sub
imul
ret
push
cmps
pop
lea
cmps
call
pop
pop
jns
popa
fwait
std
push
cmps
jb
scas
xchg
mov
xchg
pop
jb
pop
cmps
dec
les
imul
push
cmps
jb
push
dec
imul
iret
jb
mov
pop
lea
popa
rol
adc
jb
test
stos
jb
mov
das
mov
das
imul
pop
lea
xchg
sub
mov
pop
dec
test
adc
dec
test
pop
xor
data16
and
or
and
adc
dec
test
pop
xor
not
dec
test
xor
inc
or
sbb
sbb
mov
and
test
pop
xor
not
dec
test
xor
inc
mov
jle
mov
inc
pop
cmps
jb
test
shl
jmp
push
out
push
cmps
icebp
and
pop
lea
and
lea
fbld
add
pop
lea
dec
jmp
add
pop
lea
clc
je
push
daa
mov
sbb
jb
test
and
test
dec
ffreep
push
dec
lea
push
pop
lea
rcl
push
int3
jb
add
cmp
call
dec
ffreep
push
dec
mov
fwait
js
cmps
jb
mov
sub
sub
(bad)
jle
pusha
div
pop
lea
adc
jae
sar
adc
inc
pop
lea
pop
inc
add
iret
lods
jb
fld
jae
test
out
mov
aad
ja
dec
int3
jae
rcl
sbb
pop
and
lea
bound
test
xchg
cmp
jb
push
dec
test
mov
pop
xor
push
dec
sbb
cmps
jb
mov
mul
pop
lea
xchg
sub
sub
xchg
and
addr16
xor
test
stos
jb
aad
(bad)
jmp
(bad)
jae
test
mov
lea
push
pop
lea
rcl
push
int3
jb
inc
dec
xor
pop
cmps
jb
arpl
mov
fwait
js
cmps
jb
(bad)
mov
adc
add
cmps
sbb
push
int3
jb
arpl
and
cmps
call
mov
jb
test
test
lea
and
test
fidiv
outs
fcom
push
int3
jb
mov
cmps
call
mov
ror
push
cmps
jb
shl
clc
add
pop
lea
mov
cmp
pop
jae
fbld
add
pop
lea
sub
je
pop
(bad)
sar
xchg
cwde
ret
push
sub
je
pop
(bad)
sar
and
jb
push
sub
sub
repnz
call
cmps
lea
cmps
pop
mov
ds
fwait
ret
push
int3
jb
sub
repnz
call
mov
test
and
inc
(bad)
jae
test
push
(bad)
jle
neg
mov
in
or
push
(bad)
jle
neg
add
cmps
jb
shl
lea
add
push
es
sub
sbb
mov
dec
jge
push
cmps
lea
sbb
push
dec
in
adc
jns
pop
sti
inc
(bad)
jae
test
push
(bad)
jle
neg
daa
mov
push
(bad)
jle
neg
add
cmps
jb
shl
lea
call
test
xchg
cmp
jb
push
dec
aad
push
cmps
lea
bnd
push
dec
inc
adc
or
pop
lea
outs
(bad)
rcl
jae
and
jns
rcl
push
int3
jb
dec
xor
pop
cmps
jb
arpl
ins
mov
fwait
adc
inc
rcr
jle
cmps
cdq
mov
test
lea
shl
dec
mov
mov
sbb
mov
dec
inc
mov
lea
inc
jne
push
dec
mov
push
cmps
repnz
pop
lea
sub
jle
pop
lea
scas
(bad)
sub
sub
xchg
and
addr16
xor
test
scas
jb
aad
(bad)
jmp
(bad)
jae
test
xchg
rcl
xchg
repnz
pop
lea
rcl
push
int3
jb
inc
dec
xor
push
cmps
jb
arpl
adc
enter
inc
rcr
jle
cmps
cdq
mov
test
lea
shl
dec
mov
mov
sbb
mov
dec
or
jbe
xor
push
dec
js
push
cmps
repnz
pop
lea
sub
sub
xor
push
jb
scas
test
lea
add
xlat
dec
cmp
push
pop
lea
sub
je
pop
(bad)
sar
xchg
cwde
ret
push
sub
je
pop
(bad)
sar
and
sbb
cmp
sbb
push
or
cmp
pop
lea
scas
push
xchg
or
inc
(bad)
jle
sub
lea
xchg
int3
jo
push
int3
jb
jecxz
mov
dec
rol
xor
pop
xchg
fcmovnb
push
and
dec
adc
or
push
(bad)
jle
hlt
and
data16
sub
cmps
jb
push
sub
jno
pop
(bad)
sar
sbb
jecxz
mov
dec
mov
or
pop
lea
outs
(bad)
rcl
jae
and
sbb
pop
and
fstp
xchg
and
push
mov
dec
rol
and
jmp
into
push
adc
lea
pop
lea
cs
push
daa
test
cmps
jb
jecxz
mov
dec
imul
mov
int3
jb
push
int3
jbe
push
int3
jb
push
cmps
jb
ds
rcl
test
sti
add
pop
lea
dec
(bad)
ret
sbb
test
pop
call
ss
and
dec
adc
or
push
(bad)
jle
hlt
and
(bad)
adc
sub
cmps
jb
push
sub
jno
pop
(bad)
sar
sbb
in
jle
push
mov
dec
popf
test
sti
jns
pop
sti
inc
test
pop
call
(bad)
mov
push
cmps
jb
push
daa
mov
cmps
jb
push
int3
jbe
bound
cmp
into
and
cmps
sbb
loope
lea
bound
push
pop
inc
mov
out
imul
and
inc
mov
pop
pop
xchg
test
scas
call
std
mov
or
lock
jge
and
xchg
or
pop
sti
inc
fucom
jle
push
cmps
jb
pop
and
jns
pop
sti
inc
aad
bound
push
cmps
dec
mov
pop
xor
mov
push
jbe
push
das
mov
arpl
rcl
jle
es
ret
push
dec
std
test
dec
mov
pop
xor
jp
xor
push
popf
inc
lods
stc
out
hlt
pop
pop
inc
popf
repz
imul
pop
pop
jns
popa
dec
mov
add
and
or
cmp
out
hlt
pop
pop
inc
mov
imul
adc
sti
inc
ins
xchg
push
cs
cmps
pop
xchg
(bad)
fwait
push
inc
adc
jb
pop
pop
inc
imul
mov
push
cs
cmps
pop
popf
(bad)
fwait
push
inc
adc
jae
inc
pop
inc
add
scas
movs
jb
mov
pop
sti
inc
addr16
mov
or
and
add
sbb
popa
dec
mov
pop
xor
push
xor
pop
cmps
pop
xchg
mov
sti
jns
pop
sti
inc
ins
xchg
outs
and
cmps
pop
xchg
mov
dec
mov
or
and
pop
xor
pop
cmps
pop
xchg
mov
dec
mov
pop
xor
dec
or
sbb
data16
mov
hlt
pop
lock
mov
sti
jns
pop
sti
inc
or
sub
mov
adc
jb
(bad)
cmps
jb
push
pop
push
lea
jb
(bad)
cmps
jb
push
pop
push
xchg
push
in
adc
cmps
jb
push
pop
push
xchg
push
in
adc
cmps
jb
push
pop
push
mov
(bad)
cmps
jb
push
pop
push
lods
push
in
adc
cmps
jb
push
pop
push
mov
in
adc
cmps
jb
push
pop
push
mov
in
adc
cmps
jb
push
repz
fs
icebp
call
es
mov
fistp
sar
and
mov
xchg
loope
adc
dec
mov
adc
push
test
pop
push
hlt
movs
dec
jae
pop
sbb
xchg
shl
scas
xchg
jb
cmps
call
icebp
sbb
test
push
ins
push
mov
cmp
jbe
imul
test
and
test
sub
mov
test
pop
sub
jg
enter
movs
pop
xor
std
jb
and
pop
cmps
jb
push
pop
push
rcl
adc
cmps
jb
push
pop
push
lds
jb
(bad)
cmps
jb
push
pop
push
leave
push
in
adc
cmps
jb
push
pop
push
int
in
adc
cmps
jb
push
pop
push
rcl
jb
(bad)
cmps
jb
push
pop
push
aad
in
adc
cmps
jb
push
pop
push
fst
jb
(bad)
cmps
jb
push
pop
push
fst
jb
(bad)
cmps
jb
push
pop
push
loope
in
adc
cmps
jb
push
pop
push
in
in
adc
cmps
jb
push
pop
push
jmp
(bad)
cmps
jb
push
pop
push
in
push
in
adc
cmps
jb
push
pop
push
icebp
push
in
adc
cmps
jb
push
pop
push
cmc
push
in
adc
cmps
jb
push
pop
push
stc
push
in
adc
cmps
jb
push
pop
push
std
push
in
adc
cmps
jb
push
pop
push
add
jb
(bad)
cmps
jb
push
pop
push
add
(bad)
cmps
jb
push
pop
push
or
jb
(bad)
cmps
jb
push
pop
push
or
(bad)
cmps
jb
push
pop
push
adc
jb
(bad)
cmps
jb
push
pop
push
adc
(bad)
cmps
jb
push
pop
push
sbb
jb
(bad)
cmps
jb
push
pop
push
sbb
(bad)
cmps
jb
push
pop
push
and
jb
(bad)
cmps
jb
push
pop
push
and
(bad)
cmps
jb
push
pop
push
sub
jb
(bad)
cmps
jb
push
pop
push
sub
(bad)
cmps
jb
push
pop
push
xor
jb
(bad)
cmps
jb
push
pop
push
xor
(bad)
cmps
jb
push
pop
push
cmp
jb
(bad)
cmps
jb
push
pop
push
cmp
(bad)
cmps
jb
push
pop
push
inc
push
in
adc
cmps
jb
push
pop
push
inc
push
in
adc
cmps
jb
push
pop
push
dec
push
in
adc
cmps
jb
push
pop
push
dec
push
in
adc
cmps
jb
push
pop
push
push
push
in
adc
cmps
jb
push
pop
push
push
push
in
adc
cmps
jb
push
pop
push
pop
push
in
adc
cmps
jb
push
pop
push
pop
push
in
adc
cmps
jb
push
pop
push
popa
push
in
adc
cmps
jb
push
pop
push
gs
in
adc
cmps
jb
push
pop
push
imul
jb
push
pop
push
ins
push
in
adc
cmps
jb
push
pop
push
jns
in
adc
cmps
jb
push
pop
push
jge
in
adc
cmps
jb
push
pop
push
adc
jb
push
pop
push
test
jb
(bad)
cmps
jb
push
pop
push
mov
jb
(bad)
cmps
jb
push
pop
push
lea
jb
(bad)
cmps
jb
push
pop
push
xchg
push
in
adc
cmps
jb
push
pop
push
xchg
push
in
adc
cmps
jb
push
pop
push
cdq
push
in
adc
cmps
jb
push
pop
push
popf
push
in
adc
cmps
jb
push
pop
push
mov
(bad)
cmps
jb
push
pop
push
movs
push
in
adc
cmps
jb
push
pop
push
test
(bad)
cmps
jb
push
pop
push
lods
push
in
adc
cmps
jb
push
pop
push
mov
in
adc
cmps
jb
push
pop
push
mov
in
adc
cmps
jb
push
pop
push
mov
(bad)
cmps
jb
push
pop
push
mov
(bad)
cmps
jb
push
pop
push
rcl
adc
cmps
jb
push
pop
push
lds
jb
(bad)
cmps
jb
push
pop
push
leave
push
in
adc
cmps
jb
push
pop
push
int
in
adc
cmps
jb
push
pop
push
rcl
jb
(bad)
cmps
jb
push
pop
push
aad
in
adc
cmps
jb
push
pop
push
fst
jb
(bad)
cmps
jb
push
pop
push
fst
jb
(bad)
cmps
jb
push
pop
push
loope
in
adc
cmps
jb
push
pop
push
in
in
adc
cmps
jb
push
pop
push
icebp
push
in
adc
cmps
jb
push
pop
push
cmc
push
in
adc
cmps
jb
push
pop
push
stc
push
in
adc
cmps
jb
push
pop
push
std
push
in
adc
cmps
jb
push
pop
push
add
jb
(bad)
cmps
jb
push
pop
push
or
(bad)
cmps
jb
push
pop
push
adc
jb
(bad)
cmps
jb
push
pop
push
adc
(bad)
cmps
jb
push
pop
push
sbb
jb
(bad)
cmps
jb
push
pop
push
sbb
(bad)
cmps
jb
push
pop
push
and
jb
(bad)
cmps
jb
push
pop
push
and
(bad)
cmps
jb
push
pop
push
sub
jb
(bad)
cmps
jb
push
pop
push
sub
(bad)
cmps
jb
push
pop
push
cmp
jb
(bad)
cmps
jb
push
pop
push
cmp
(bad)
cmps
jb
push
pop
push
inc
push
in
adc
cmps
jb
push
pop
push
inc
push
in
adc
cmps
jb
push
pop
push
dec
push
in
adc
cmps
jb
push
pop
push
dec
push
in
adc
cmps
jb
push
pop
push
push
push
in
adc
cmps
jb
push
pop
push
push
push
in
adc
cmps
jb
push
pop
push
pop
push
in
adc
cmps
jb
push
pop
push
pop
push
in
adc
cmps
jb
push
pop
push
popa
push
in
adc
cmps
jb
push
pop
push
gs
in
adc
cmps
jb
push
pop
push
imul
jb
push
pop
push
ins
push
in
adc
cmps
jb
push
pop
push
jno
in
adc
cmps
jb
push
pop
push
jne
in
adc
cmps
jb
push
pop
push
jns
in
adc
cmps
jb
push
pop
push
jge
in
adc
cmps
jb
push
