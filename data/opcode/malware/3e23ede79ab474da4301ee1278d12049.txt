sbb
add
inc
ss
stc
xchg
lds
xor
in
mov
retf
mov
mul
and
cmp
push
pushw
push
pop
push
cmp
outs
adc
xor
fidivr
sbb
sub
aad
stc
outs
sahf
push
inc
adc
(bad)
popa
mov
ud0
pop
loope
pop
in
jge
jne
sub
dec
inc
fadd
xor
push
out
mov
mov
adc
adc
xchg
out
mov
sbb
xor
repz
dec
mov
out
mov
out
xchg
add
push
sahf
mov
push
test
jnp
xlat
xlat
neg
shr
std
aad
add
aas
pop
xchg
sub
loop
cwde
add
cmp
pop
inc
fisub
mov
lds
xor
aad
push
(bad)
pop
mov
xor
mov
xchg
xchg
adc
mov
sbb
ss
add
xor
movs
mov
add
call
sub
mov
xchg
lods
xlat
pop
xlat
mov
sub
int3
scas
call
dec
daa
fcomp
outs
fidivr
aad
lods
cmp
sti
inc
pop
sahf
les
(bad)
int3
stos
push
loopne
repnz
fisubr
(bad)
inc
rcr
xor
test
fadd
outs
(bad)
mov
call
pop
les
jmp
test
push
push
movs
stos
and
sub
or
stc
mov
daa
fisubr
pop
xor
jmp
xor
push
fld
js
movs
xlat
pop
mov
xchg
cwde
cmp
pushf
lds
nop
jno
push
in
mov
jo
jge
inc
scas
sbb
and
sub
ror
push
sti
and
(bad)
adc
inc
inc
push
jle
xchg
mov
mov
push
adc
and
das
lea
cli
mov
and
movs
test
pop
jl
pop
jns
cmp
mov
adc
lock
and
test
or
ins
in
and
fcmovne
jp
(bad)
movs
xchg
xor
and
xchg
mov
sbb
inc
mov
dec
mov
leave
xchg
and
xor
jae
addr16
xor
push
popf
lods
scas
pop
aam
and
xchg
ror
mov
in
pop
push
cmp
daa
cmp
mov
clc
mov
jl
in
pop
mov
ret
inc
mov
sbb
jl
sub
push
iret
mov
add
pop
cmp
test
inc
jmp
sbb
sub
add
call
ja
loope
movs
jb
imul
mov
test
mov
sbb
and
addr16
sbb
jp
mov
imul
cmc
(bad)
jecxz
inc
sub
popf
xchg
cmp
adc
xor
push
xor
or
aaa
out
push
mov
ja
(bad)
ficom
pop
and
inc
mov
mov
mov
aad
cmc
out
dec
push
movs
cld
in
mov
mov
sahf
jle
repz
retf
popa
mov
push
jb
mov
imul
pop
stos
fwait
mov
dec
sub
adc
dec
mov
sti
into
pop
ins
std
xor
mov
(bad)
adc
xchg
adc
lods
sbb
sbb
imul
xor
fisttp
and
(bad)
iret
sub
mov
ss
and
cs
call
fidiv
test
push
mov
fdiv
(bad)
or
imul
add
out
sub
add
cdq
mov
mov
(bad)
push
icebp
ds
jo
je
retf
mov
add
dec
sti
ja
mov
xor
and
push
bound
xor
cli
les
ror
lods
stos
push
fsub
sbb
pop
cmps
ins
sbb
push
push
jae
inc
jmp
shr
rcl
push
ret
(bad)
mov
mov
call
xchg
repz
inc
push
add
jno
arpl
mov
dec
cdq
xor
repnz
mov
inc
in
sbb
test
fnstsw
pusha
mov
dec
adc
mov
cli
loop
and
inc
in
nop
arpl
cli
mov
xchg
ror
imul
or
fadd
mov
leave
daa
mov
data16
add
pop
pop
(bad)
in
je
fmul
outs
or
in
mov
pop
test
pop
jnp
test
pop
fld
data16
push
add
xor
lods
jae
jp
xchg
or
xchg
iret
scas
ss
movlps
repz
push
jecxz
daa
ficomp
jecxz
js
ret
lahf
and
cmp
cmp
arpl
sub
and
div
(bad)
pop
push
push
aad
jo
xlat
push
push
movs
rcl
push
sub
and
sub
in
std
ins
ret
in
pop
popf
cmp
(bad)
push
hlt
or
in
sbb
xor
and
dec
js
es
in
in
xor
sub
icebp
sub
sub
stos
cmps
in
inc
fld
xchg
stc
mov
xchg
xor
nop
mov
sub
(bad)
mov
stos
add
adc
lds
cmp
aam
push
inc
movs
rep
repz
mov
mov
fdivrp
bound
and
mov
bound
mov
sbb
inc
jle
xlat
or
pop
retf
pop
call
mov
mov
cs
mov
jp
aad
sub
stos
les
out
fnstcw
jo
int
inc
cli
cmc
jmp
or
pushf
or
jmp
add
gs
int3
ds
les
iret
in
cli
push
pop
retf
mov
fnstcw
popf
sbb
ss
(bad)
push
out
fisttp
xchg
test
mov
mov
xor
mov
pusha
pop
in
sub
inc
sub
xchg
or
sub
scas
sub
test
inc
xor
jo
sbb
ins
or
leave
push
mov
dec
inc
enter
int
dec
pusha
int
rcr
ficom
pop
jecxz
stc
stos
sub
cmps
jo
xor
dec
test
and
push
repnz
mov
mov
fisub
mov
push
sub
(bad)
fdecstp
in
in
pop
fs
push
mov
stc
jl
rol
xor
fwait
loopne
or
icebp
add
push
add
or
push
cmp
inc
dec
add
mov
or
pop
lock
push
outs
ss
iret
xchg
stos
(bad)
sar
jmp
dec
test
add
out
lods
in
(bad)
enter
test
push
movs
stos
iret
cld
add
mov
lea
bound
push
lds
(bad)
jge
pop
jg
retf
jecxz
cmp
inc
rol
dec
cmps
pop
adc
fcomip
add
push
mov
xchg
xchg
sub
sub
call
scas
int
mov
or
cdq
jns
js
mov
add
xchg
mov
add
inc
retf
mov
stos
clc
push
mov
sti
test
push
test
add
rcr
shl
or
in
cmps
or
stos
xor
pop
mov
retf
retf
call
and
fbstp
cmp
add
dec
pop
sub
jge
jo
(bad)
jmp
xchg
inc
jne
adc
jmp
inc
lods
push
add
test
xchg
scas
and
fcom
mov
pop
xor
cmps
aaa
xor
cmp
je
mov
movs
mov
ds
dec
outs
xchg
mov
pop
(bad)
shr
mov
ret
stc
lods
dec
cmp
jnp
sbb
add
out
cmp
lea
xchg
iret
clc
mov
pop
inc
leave
xlat
xchg
cmp
addr16
imul
jge
inc
sti
sahf
mov
rol
xor
adc
sub
int
jne
pop
mov
int
jnp
and
test
(bad)
ja
test
add
leave
push
pop
inc
stos
retf
xchg
or
fidivr
int3
loop
aas
aas
mov
sub
and
sbb
into
aam
or
and
ret
leave
inc
cli
mov
and
xor
jmp
push
inc
mov
adc
(bad)
(bad)
leave
frstpm(287
jp
cmp
fsub
out
mov
stos
lea
fcomp
jmp
dec
lods
push
add
mov
or
mov
pop
xor
outs
jp
sub
jl
lea
test
pop
movs
loopne
je
xchg
or
hlt
inc
and
scas
loope
addr16
or
or
arpl
mov
push
dec
test
lods
sub
icebp
mov
jno
les
lock
int
push
push
les
pop
out
cmp
repz
jmp
xor
jnp
in
cld
movs
sub
inc
int3
or
fadd
pop
retf
xlat
(bad)
lods
inc
lds
aad
arpl
lds
int3
stos
dec
aas
lea
sub
aaa
iret
mov
pop
aad
les
aad
or
add
fist
sbb
in
inc
mov
fwait
cmp
nop
fwait
mov
out
dec
lods
lock
mov
cwde
fimul
jae
add
sahf
mov
mov
mov
pop
rcr
xor
test
xchg
fistp
js
pusha
not
xor
ret
dec
push
jo
mov
jmp
xchg
mov
retf
outs
popa
mov
sahf
push
sub
(bad)
xchg
and
dec
adc
sub
mov
call
dec
js
sbb
or
add
fisubr
ins
jbe
loop
push
mov
in
sbb
xchg
pusha
xchg
push
shl
inc
or
addr16
add
push
add
cmp
mov
loop
test
scas
pop
jge
xor
data16
adc
imul
call
ror
(bad)
into
test
enter
(bad)
retf
add
inc
adc
lea
push
push
stos
cmps
outs
fld
popa
push
or
mov
mov
jp
xchg
push
mov
xchg
inc
xor
jo
push
or
rol
mov
movs
push
movs
or
repz
jp
cmps
dec
mov
ins
mov
push
add
call
jge
daa
lock
mov
xchg
push
mov
sbb
jecxz
and
jg
jle
push
inc
push
div
or
stos
int
dec
inc
sub
push
sbb
and
test
(bad)
aad
jg
cs
xchg
js
loopne
xor
jb
xchg
rol
mov
mov
loope
mov
in
xor
mov
sahf
pop
out
in
bound
xchg
xor
mov
retf
add
and
fld
push
rcr
cdq
xchg
sbb
cmp
out
sbb
ins
add
mov
push
add
test
mov
es
stc
dec
xchg
and
mov
call
add
inc
fadd
sub
xor
jo
jbe
jae
imul
inc
pop
lods
push
pop
enter
test
daa
aam
sub
int
bound
jecxz
fwait
sbb
fisttp
sub
sub
push
dec
ds
push
pop
jl
dec
xlat
and
mov
mov
mov
inc
xor
popf
adc
sbb
(bad)
jbe
into
jo
nop
jo
sar
push
sub
repnz
(bad)
test
push
std
push
scas
mov
ret
fnsave
pop
test
mov
(bad)
push
and
xor
call
sub
mov
pop
dec
lods
aam
in
into
lahf
inc
sbb
or
cld
popa
fmulp
dec
mov
push
imul
jb
sbb
arpl
int3
sub
jecxz
inc
add
test
aad
lea
ins
push
or
jo
jb
mov
push
jae
mul
scas
lea
fwait
push
inc
out
xor
(bad)
and
adc
push
sbb
jmp
pop
xor
xor
add
sub
arpl
sub
mov
jae
jo
and
mov
loope
lock
add
mov
pop
and
addr16
clc
retf
call
add
addr16
mov
or
cmp
xor
push
icebp
mov
addr16
call
push
push
int
stc
inc
push
xchg
add
shr
inc
or
xor
pop
pop
dec
test
pop
push
push
sub
sbb
popa
inc
and
lods
dec
scas
xchg
idiv
rol
mov
aam
push
in
ja
mov
ret
inc
ins
sub
push
pop
and
dec
and
test
mov
inc
test
pop
in
jno
cwde
xchg
hlt
jno
pushf
(bad)
fdiv
jge
je
xor
mov
jge
iret
pop
(bad)
loope
inc
(bad)
or
xlat
les
lods
adc
pop
test
jg
bound
xchg
lods
sbb
xor
xchg
cmps
test
cmp
push
sub
mov
jl
lods
repz
adc
inc
dec
sub
retf
mov
loopne
sub
and
mov
bound
bound
cs
jnp
mov
pop
adc
cmps
push
mov
mov
or
cmps
ror
push
sahf
or
xor
jae
out
arpl
je
xor
inc
les
dec
mov
lea
ret
gs
out
push
popf
popa
xor
sub
ins
xor
add
test
enter
popf
cmp
imul
cmp
mov
jge
aas
sbb
xor
(bad)
adc
xor
sub
mov
fstp
push
and
sub
sar
js
aas
(bad)
adc
daa
cmp
movs
xchg
and
dec
mov
mov
ss
push
push
in
dec
xor
and
outs
jmp
mov
inc
xor
push
lds
cmp
in
cmps
dec
or
pop
dec
xor
pop
sbb
adc
sbb
pop
(bad)
lock
out
daa
pop
out
repz
std
lods
imul
pop
fadd
mov
cmps
sbb
into
push
fsubr
cmp
push
arpl
outs
mov
iret
(bad)
loop
test
push
mov
sbb
daa
add
rcr
cmp
retf
(bad)
pop
add
xchg
in
pushf
jecxz
retf
adc
(bad)
pushf
popa
std
xchg
mov
addr16
test
and
fsubr
or
ds
ret
aaa
mov
clc
sub
mov
cwde
ja
cwde
sub
xor
imul
mov
lahf
push
loope
(bad)
cwde
outs
sub
fwait
adc
and
cmps
add
icebp
fstp
mov
xchg
loop
jmp
xchg
mov
(bad)
jmp
scas
test
mov
retf
scas
xchg
cmp
adc
fcomip
cmps
daa
scas
sbb
or
into
lds
(bad)
(bad)
sahf
retf
(bad)
adc
sub
xor
mov
pop
dec
movs
jne
xor
dec
jne
or
js
setne
inc
xor
dec
push
pop
pop
shl
jecxz
mov
adc
out
daa
xor
add
and
fadd
or
jl
lods
in
das
dec
dec
fs
aaa
pop
mov
add
cwde
pop
push
cmc
data16
sub
adc
cmp
dec
add
inc
sbb
jmp
sbb
xchg
fcmovnu
fild
and
dec
mov
ja
and
jmp
push
(bad)
aad
and
pop
mov
lahf
dec
sub
retf
mov
fs
fsubr
dec
adc
fwait
pop
imul
inc
pusha
out
loop
jle
and
data16
dec
retf
mov
or
push
ins
ret
mov
xchg
xchg
call
push
loope
mov
icebp
popa
xchg
call
xchg
pop
loop
adc
jae
dec
pusha
adc
cwde
adc
shl
ss
and
mov
test
jecxz
mov
mov
mov
cmp
addr16
lods
and
inc
pop
cli
jb
add
mov
inc
xchg
and
mov
xchg
push
mov
arpl
mov
or
pop
jno
add
in
sbb
out
mov
in
xor
js
je
(bad)
arpl
loope
gs
mov
sub
std
ret
xor
sbb
adc
repnz
inc
and
mov
xchg
or
pusha
loope
repz
stos
fwait
xor
es
xchg
pop
aam
out
(bad)
nop
and
iret
mov
and
test
rep
or
adc
jg
lods
lock
in
and
outs
mov
in
push
jle
jp
pop
icebp
mov
(bad)
in
sbb
push
mov
mov
pop
aaa
mov
pop
sub
js
dec
hlt
fs
dec
fnclex
mov
xor
mov
xor
add
shr
inc
jno
pop
dec
nop
out
mov
add
test
pop
call
push
dec
sti
mov
push
das
retf
push
push
lods
mov
push
adc
std
in
xchg
pop
imul
pop
push
rcr
jmp
inc
mov
add
movs
pop
mul
mov
mov
pop
popa
gs
lahf
mov
loope
stos
call
gs
nop
std
inc
addr16
call
sbb
jnp
jmp
jecxz
jno
add
out
mov
pop
mov
int
nop
shl
js
or
xor
push
add
es
and
dec
stos
jo
mov
in
pop
mov
(bad)
pop
imul
inc
test
in
mov
cli
iret
add
or
dec
mov
sbb
std
fadd
pusha
fdivr
daa
lock
push
cwde
leave
(bad)
aam
and
loope
les
mov
sti
das
dec
neg
inc
adc
stos
es
dec
fstp
iret
(bad)
int
call
add
movs
loope
inc
pop
adc
mov
(bad)
mov
inc
test
sub
fisub
aam
inc
adc
jb
lods
mov
mov
dec
xchg
dec
ror
aad
adc
jns
sub
js
pop
add
push
inc
mov
and
mov
dec
push
out
inc
inc
or
mov
(bad)
adc
push
cmc
sahf
push
sub
adc
rcl
inc
add
movs
cmps
fcomp
cmp
mov
cdq
test
imul
fimul
cmp
leave
div
mov
std
inc
mov
call
adc
and
add
jne
mov
bound
in
mov
aad
sahf
xchg
push
mov
push
imul
test
je
shl
dec
xor
cld
(bad)
(bad)
or
mov
dec
jp
xor
pop
adc
sbb
xor
xor
test
ins
add
adc
mov
and
(bad)
dec
inc
rcl
lods
xchg
or
cdq
fsub
retf
in
sbb
or
cdq
sub
or
shl
mov
hlt
adc
repz
mov
lds
mov
leave
sbb
hlt
popa
imul
jnp
adc
jmp
cmp
jbe
add
popa
cmp
mov
popf
outs
inc
adc
add
js
pop
and
je
mov
fs
fcom
loope
push
jle
(bad)
fld
pop
dec
mov
mov
mov
cdq
jl
mov
(bad)
mov
dec
(bad)
ins
mov
pop
push
mov
retf
clc
test
adc
ins
xor
mov
iret
xor
mov
sbb
pop
inc
add
pop
cmp
jge
jmp
sbb
fsub
lahf
sar
push
cmp
popa
cmp
hlt
push
jnp
jp
push
rcr
outs
enter
mov
loope
push
scas
retf
or
xor
aas
push
cmp
stos
jmp
xor
outs
call
cmp
xor
and
push
cmps
ins
in
pusha
mov
mov
pop
(bad)
(bad)
mul
mov
add
sbb
ret
xor
cwde
cdq
xor
stc
add
div
pop
jecxz
cmp
cmps
iret
(bad)
arpl
test
in
in
int3
add
push
push
cmp
scas
outs
fmul
inc
cmp
xor
jb
mov
enter
test
fsubr
adc
cdq
lahf
das
imul
and
sub
call
lea
call
sbb
sahf
adc
adc
fbstp
add
dec
popf
loopne
inc
cli
popa
inc
sbb
pop
and
push
cmp
mov
pop
xchg
mov
aaa
(bad)
and
shr
test
lods
aas
inc
jae
pop
ins
inc
cmp
mov
je
pusha
lods
ins
mov
in
cdq
call
dec
add
dec
push
mov
popa
cdq
push
ror
sub
push
(bad)
xor
or
outs
push
dec
(bad)
popf
int
fldcw
sbb
mov
fs
mov
aaa
add
pop
push
pop
jne
push
xor
shl
cmp
xchg
push
fbstp
test
mov
mov
movs
pop
xor
xchg
lds
cmps
arpl
cmp
mov
ret
sbb
jb
les
pop
jbe
xchg
inc
lods
fbld
fcom
mov
in
aas
cmp
ds
or
sub
xchg
iret
xor
xor
xor
paddsw
dec
ds
or
in
jl
arpl
and
ja
dec
mov
aaa
inc
mov
lock
ret
leave
call
data16
add
ins
mov
dec
inc
mov
leave
mov
retf
dec
push
dec
scas
jl
cmp
fdiv
xor
or
adc
icebp
xchg
repz
cwde
je
xchg
jo
aas
sbb
(bad)
pop
lock
ror
jbe
ret
dec
enter
icebp
lods
add
pop
stc
shl
int
rcl
mov
and
mul
stc
jnp
cld
or
cmps
mov
cmp
out
(bad)
fwait
push
shl
push
jle
pop
lds
adc
fdivr
mov
imul
inc
shl
inc
adc
inc
fnsave
psubb
push
movs
out
mov
xchg
mov
mov
cld
loope
in
cmps
mov
sub
add
push
loopne
mov
adc
pop
xchg
cld
push
jmp
ss
pop
sub
mov
lods
pop
adc
pop
adc
sar
cdq
cld
and
test
jle
ret
xchg
or
or
mov
and
push
les
xor
push
(bad)
jbe
jmp
xor
push
popa
leave
push
dec
lahf
sbb
lock
dec
das
mov
mov
or
jo
adc
mov
dec
sti
adc
xchg
(bad)
xchg
mov
mov
sbb
cmp
inc
pop
inc
dec
(bad)
xrelease
cmp
div
les
cwde
js
dec
xor
mov
imul
mov
arpl
cmp
shl
xchg
sahf
jg
push
push
sbb
sbb
dec
icebp
sar
sub
push
clc
pop
or
repnz
push
xchg
xor
mov
xchg
mov
sub
aas
xchg
imul
dec
in
lock
scas
pop
or
(bad)
push
mov
into
(bad)
call
test
pop
ficomp
jne
sti
push
mov
mov
cs
pop
push
in
fcom
sub
pop
mov
hlt
repnz
enter
pushf
xchg
xchg
dec
loop
pop
(bad)
aam
inc
cld
aas
mov
(bad)
pop
xlat
pop
mov
fdivr
jmp
pusha
mov
(bad)
xchg
sub
syscall
dec
mov
xor
imul
jmp
xchg
mov
cmps
fiadd
pop
loopne
lods
push
dec
daa
pop
mov
xchg
mov
imul
push
je
in
sub
in
cld
pop
mov
sub
sbb
leave
jg
add
and
vmwrite
cld
(bad)
or
scas
jge
push
loope
dec
mov
addr16
mov
(bad)
shr
mov
jb
xchg
jmp
pusha
movs
or
dec
mov
outs
inc
(bad)
jp
stc
fidiv
cmps
iret
cmp
push
dec
jg
xchg
and
sbb
pop
leave
xchg
fwait
mov
(bad)
aaa
adc
in
mov
aaa
jnp
xor
sub
cwde
aas
shl
sub
sub
lods
jp
jle
test
push
stos
add
cli
ds
stos
mov
(bad)
inc
repz
inc
mul
popa
dec
jo
mov
rcl
mov
cdq
pop
or
sbb
lea
add
mov
out
fwait
adc
aad
and
push
icebp
shl
jb
out
adc
mov
jb
call
jg
pop
or
pop
lahf
dec
jae
retf
xchg
out
mov
sbb
pop
jecxz
ret
xchg
es
dec
cmps
pop
sub
bound
sbb
xor
inc
mov
mov
clc
dec
cwde
xchg
loope
mov
popa
push
rcr
scas
cmp
int
add
ss
jnp
jmp
fstp
cmps
cmc
cmp
push
and
out
xchg
inc
xlat
cmp
icebp
fadd
rcl
cld
rcr
das
mov
pop
outs
add
int3
dec
add
sub
or
(bad)
fstp
(bad)
xchg
dec
ret
fucomi
jmp
jp
retf
mov
mov
fmul
retf
push
xor
adc
mov
ss
xlat
and
push
ss
lods
push
jmp
(bad)
dec
mov
or
push
jmp
and
sub
aas
sbb
and
lahf
xor
add
out
ficom
cmp
or
arpl
mov
pop
or
aad
(bad)
cmp
jl
jg
and
in
push
jecxz
mov
popa
add
(bad)
jno
outs
lea
mov
cmps
pop
cld
xchg
in
rcl
and
fwait
sub
or
mov
push
sub
jns
ds
cwde
mov
cmps
mov
jne
push
loopne
loope
add
jne
aaa
jecxz
sub
pop
ret
rcl
ss
test
cmps
cmps
add
movs
mov
in
imul
call
mov
retf
or
sub
push
xchg
test
jmp
lahf
dec
cmps
popf
mov
scas
ficom
cwde
pop
cmp
repnz
movs
push
cmp
shl
call
dec
test
cdq
int
add
mov
gs
(bad)
out
adc
inc
test
int
cli
int3
adc
adc
add
ja
jp
sbb
fld
and
pusha
xchg
ret
in
sub
xor
pushf
test
rcr
or
popf
aam
jno
mov
fucomip
push
stc
lahf
dec
add
popf
fidiv
adc
aad
dec
adc
mov
(bad)
stc
(bad)
jbe
mov
movs
mov
inc
cmp
xor
je
js
adc
sahf
and
sub
jmp
or
imul
mov
inc
rcr
sbb
jmp
push
(bad)
jg
popa
call
idiv
jbe
and
sbb
cwde
(bad)
test
daa
ficom
fldcw
cmps
aas
jl
push
js
xor
stc
mov
enter
add
test
xchg
(bad)
call
mov
gs
mov
mov
fisttp
movs
data16
add
inc
or
fisubr
inc
mov
sbb
call
(bad)
mov
pop
and
xchg
jmp
cld
jecxz
aad
(bad)
and
in
cmp
repnz
pusha
and
call
lods
scas
push
sub
mov
je
pop
popa
dec
mov
cmps
pop
clc
mov
add
cmp
mov
inc
inc
adc
in
ds
out
pop
xor
fwait
cmp
(bad)
aas
pop
mov
mov
push
fst
bound
xlat
or
sub
adc
add
stos
mov
mov
(bad)
repnz
and
sub
outs
dec
icebp
das
addr16
in
xchg
fcomp
inc
mov
mov
sbb
adc
sbb
pop
cmp
sub
xor
sti
jecxz
mov
push
xchg
cs
pop
push
push
xor
xchg
jmp
jb
popf
fild
pop
sbb
mov
jp
sub
mov
adc
adc
pop
test
add
jecxz
inc
mov
inc
or
jecxz
outs
movs
ret
and
mov
mov
pop
add
mov
jge
mov
mov
aas
jmp
adc
shl
sbb
mov
mov
ins
in
out
dec
popf
fcom
test
cmp
push
ficomp
pop
cli
push
pop
popa
mov
xchg
or
and
sbb
push
add
push
outs
fisubr
cmps
xor
std
dec
lods
lds
daa
stos
call
cs
xchg
mov
sbb
stos
sbb
pop
sbb
mov
mov
inc
lea
jle
hlt
in
jbe
push
inc
cmps
adc
push
cmp
mov
les
mov
pop
xchg
add
sub
imul
fidiv
dec
lods
mov
arpl
ret
jne
div
shr
or
pop
sbb
(bad)
nop
rcl
pop
mov
sub
sbb
shl
test
sub
call
push
dec
dec
imul
push
push
(bad)
push
test
fwait
xchg
pop
inc
or
mov
xor
stos
mov
pushf
ins
jnp
mov
repz
in
pop
adc
imul
cmp
jmp
xchg
jle
out
ret
call
lock
jbe
mov
test
jmp
int
(bad)
jae
mov
add
inc
xchg
xlat
aad
loopne
xor
iret
cmps
inc
cwde
inc
sub
inc
ret
dec
pop
sbb
cdq
push
call
adc
imul
(bad)
xor
jbe
xor
dec
pop
in
sbb
xor
sbb
pop
lock
pop
aaa
(bad)
or
or
loop
xchg
dec
sahf
push
xchg
jmp
pop
adc
mov
in
inc
cmp
adc
xchg
cmps
shr
loop
repz
xchg
inc
aam
shl
in
mov
cmp
leave
shr
(bad)
xor
retf
mov
xor
xchg
cmps
int3
leave
loop
cs
jl
ds
mov
dec
sub
into
mov
pop
shr
fnstsw
sub
xor
shl
xchg
jbe
dec
adc
shr
js
jecxz
das
repz
mov
sub
loopne
popa
cmp
xchg
and
dec
or
fwait
mov
outs
inc
pop
mov
stos
mov
dec
xchg
out
sbb
aaa
rcr
mov
jmp
je
fiadd
add
call
mov
test
inc
sub
data16
lock
push
pop
cmp
adc
dec
dec
(bad)
bound
loopne
(bad)
and
or
leave
push
ins
sahf
fcom
in
test
mov
mov
push
les
xor
pop
mov
jmp
clc
push
shr
mov
mov
(bad)
clc
mov
movs
adc
ins
test
daa
loope
xchg
test
out
inc
or
jne
iret
sbb
dec
mov
mov
cmp
dec
sub
loop
cdq
mov
shl
shl
fistp
mov
div
shr
mov
jo
inc
push
dec
pop
pop
aad
pop
lods
(bad)
mov
or
mov
or
xchg
in
jl
xor
hlt
xchg
or
gs
pop
sbb
or
loop
add
test
sub
inc
mov
test
out
cmp
in
push
xchg
test
fisub
sub
scas
call
scas
inc
shl
xor
test
repnz
cli
pop
enter
sub
mov
sub
sbb
inc
test
or
scas
mov
rcl
les
(bad)
cld
jae
test
idiv
cmp
pop
sti
aas
mov
lods
cmps
icebp
xchg
push
add
mov
retf
imul
push
xor
js
xor
xchg
jb
fisttp
into
loope
mov
mov
xor
in
scas
or
sar
dec
into
cmp
cmp
ret
out
mov
xor
leave
mov
in
lods
add
retf
in
xor
push
pop
xor
add
cmp
mov
cmp
mov
clc
(bad)
sbb
cmp
call
ins
push
ja
jne
pushf
mov
cmps
bsf
sbb
addr16
shr
or
cmps
dec
aad
jns
xor
inc
add
adc
scas
std
cdq
inc
and
cmp
pop
lods
jge
mov
or
and
mov
inc
add
sub
and
ds
jmp
xchg
mov
sbb
inc
jbe
jbe
sbb
mov
cmps
ret
mov
popf
mov
add
jae
dec
es
fadd
ret
fs
mov
cld
ins
fist
sub
in
push
add
push
or
mov
lahf
fs
stos
lock
test
jg
mov
add
fist
mov
mov
sqrtps
movs
mov
fist
or
fsub
pushf
pop
jne
inc
aad
call
jb
popa
push
ds
inc
and
ja
in
pop
or
ja
xchg
adc
leave
outs
and
dec
stc
clc
pop
xor
xchg
inc
loopne
pop
test
mov
sbb
sbb
rcr
lds
push
loope
sbb
or
push
dec
leave
outs
icebp
gs
popf
xchg
dec
pop
add
pop
push
jne
(bad)
adc
pop
cwde
test
adc
mov
das
shl
or
out
mov
bound
mul
mov
(bad)
loope
push
adc
fs
(bad)
rcr
mov
fisttp
stos
popf
in
mov
mov
push
adc
fnsave
mov
dec
sbb
push
xlat
push
push
inc
lock
sbb
fcom
sar
inc
mov
retf
adc
loope
mov
xchg
cwde
aad
(bad)
lock
mov
call
out
cmp
int
call
push
adc
adc
sub
mov
push
add
ds
inc
lods
pop
mov
sub
test
repz
xor
xchg
inc
aas
mov
mov
ret
add
xchg
jecxz
inc
pop
bndldx
pop
mov
xchg
in
jnp
pushf
xor
jns
and
icebp
ret
(bad)
clc
adc
sbb
cmp
lods
sub
cmp
stos
cmp
mov
mov
add
and
into
jae
push
and
cmp
loop
mov
fwait
test
xor
shl
push
aam
rol
pop
jecxz
mov
pop
pop
mov
lahf
push
out
push
test
es
in
xor
call
sub
fdiv
jae
dec
arpl
xor
sbb
shr
cmp
xchg
jno
push
aaa
lea
and
inc
push
push
loop
and
jne
movs
call
in
and
sub
push
cmp
sbb
cli
push
push
cmps
(bad)
ficom
stos
cdq
inc
addr16
dec
add
imul
jnp
lds
sbb
mov
out
popf
xor
push
sar
sbb
ror
push
push
cli
mov
xchg
adc
bnd
test
jbe
xchg
cmps
imul
sti
addr16
and
pop
add
sbb
test
stos
lods
xchg
cmps
out
(bad)
pop
movs
sbb
shl
jbe
outs
mov
scas
aam
push
cmc
repz
jmp
jb
imul
ss
jp
repnz
iret
ins
cli
sbb
ds
stos
mov
xchg
mov
and
push
mov
sub
repz
cli
push
jmp
das
dec
mov
out
pop
fs
dec
ins
popa
sbb
xchg
jecxz
scas
inc
dec
inc
es
retf
jno
repz
int
mov
mov
dec
sub
retf
enter
stos
fcom
or
rcl
cmp
rcl
aad
pop
xchg
pusha
mov
adc
iret
cwde
bound
loope
inc
mov
mov
pop
sub
fwait
(bad)
push
mov
xor
ret
ficom
sub
dec
cmps
popf
test
xchg
or
sbb
movs
(bad)
xor
lahf
cmp
xchg
pop
mov
xor
add
ds
in
mov
pop
add
daa
xchg
jb
(bad)
adc
xor
xor
pop
mov
mov
jns
jnp
fiadd
(bad)
jns
aad
ret
push
xchg
cs
add
xor
cmp
and
inc
and
and
jmp
stos
inc
sahf
div
ss
pop
push
fisubr
rol
aam
cmp
loop
mov
xchg
clc
adc
xchg
enter
sub
and
push
mov
or
sbb
sbb
cmps
and
mov
arpl
mov
pusha
jbe
mov
lods
and
add
scas
dec
loope
mov
repz
xor
dec
sbb
ds
cdq
ds
mov
fsubrp
rol
sub
add
mov
cmp
mov
xchg
repz
imul
arpl
cld
pop
aas
jecxz
and
subps
aam
push
fbstp
outs
or
cmc
and
(bad)
ja
fs
imul
rol
mov
dec
test
(bad)
dec
repnz
mov
mov
call
xchg
test
push
push
mov
dec
addr16
jg
jae
gs
pop
mov
add
push
inc
dec
jmp
push
adc
neg
jle
cli
pop
sub
ins
dec
mov
adc
sub
cmps
bound
mov
aad
xor
ins
lahf
mov
pop
cwde
pop
cmp
sbb
addr16
lods
movs
mov
pop
sub
push
cmp
and
sti
frstor
shr
lods
shr
pop
loopne
rcl
dec
pushf
aas
and
fcmove
fld
cmps
lods
sub
(bad)
mov
inc
xor
and
push
shl
scas
mov
sub
imul
jb
and
cmp
into
xchg
test
dec
stc
pop
mov
mov
xchg
neg
pop
jns
push
pop
fldl2e
dec
push
ret
loop
scas
aaa
jb
fiadd
outs
sub
sbb
aad
stos
loop
xchg
cmps
not
dec
cmps
or
dec
aas
fwait
js
jmp
inc
ja
adc
jge
mov
sbb
or
(bad)
rcl
sub
xchg
pop
sub
ror
adc
xchg
push
sahf
dec
dec
jb
jl
inc
push
js
out
mov
jle
and
pop
fcomip
stc
xor
stc
sub
scas
arpl
mov
sar
inc
aad
xor
mov
or
cmp
mov
mov
xchg
test
inc
retf
hlt
sbb
sar
loopne
mov
icebp
in
sbb
xchg
push
xor
dec
or
push
mov
out
loopne
jmp
push
add
ds
into
lea
imul
xor
in
mov
pop
pusha
add
std
cmps
pop
xchg
daa
fldz
enter
fcmovu
call
inc
xor
mov
xor
mov
xor
xchg
sub
inc
sbb
or
push
(bad)
inc
adc
es
sub
xor
mov
jle
test
pusha
jnp
jnp
pop
imul
push
daa
(bad)
xchg
sub
nop
push
(bad)
cdq
adc
popa
daa
cmp
repz
inc
imul
test
arpl
hlt
mov
adc
call
mov
cmp
xchg
mov
imul
jb
dec
fst
add
adc
mov
ja
sti
xor
pop
addr16
and
cli
repz
call
mov
inc
adc
inc
xor
cwde
adc
xlat
je
add
mov
popf
adc
test
(bad)
lods
cmps
and
sub
push
ror
jmp
sbb
xchg
leave
xor
xchg
test
lock
jge
fwait
sbb
add
out
mov
push
inc
push
push
dec
pop
adc
xchg
mov
dec
push
or
cmps
and
push
push
push
stos
pop
mov
jl
sub
pop
bound
mov
loop
fwait
aas
jp
add
sub
add
shl
imul
test
sub
movs
jo
aam
or
mov
and
(bad)
xchg
push
(bad)
and
out
jl
adc
and
stc
sahf
mov
adc
fs
mov
hlt
int3
push
movs
cmps
(bad)
fild
mov
js
jmp
jg
lods
inc
dec
adc
popf
xor
out
clc
jbe
dec
daa
adc
xor
dec
movs
pop
mov
pop
inc
and
arpl
std
mov
cdq
and
gs
jne
int
mov
dec
test
adc
clc
in
aaa
push
ss
xchg
push
adc
jne
in
dec
out
push
fdivr
cmp
imul
sub
les
mov
(bad)
push
lds
mov
movs
xchg
add
sub
dec
ss
(bad)
mov
cli
das
in
adc
add
icebp
inc
dec
in
mov
into
icebp
xchg
jo
loop
or
sbb
clc
clc
dec
pop
xchg
dec
dec
in
(bad)
cmc
sbb
repnz
ss
int3
dec
dec
(bad)
js
mov
ja
fld
out
dec
cli
xchg
hlt
aas
xor
push
jmp
mov
push
push
cwde
jbe
xor
jmp
retf
sbb
ror
xor
ja
and
call
pop
mov
mov
jl
push
fisubr
test
and
mov
mov
jno
fwait
call
fadd
popa
inc
mov
mov
mov
scas
cld
test
dec
enter
repnz
xlat
xor
in
pop
mov
pop
dec
inc
adc
stc
push
pop
inc
adc
retf
dec
push
ja
jmp
add
retf
(bad)
cmp
inc
mov
push
jl
push
es
loop
lock
les
mov
fisub
push
inc
push
mov
jnp
in
and
leave
fidivr
ret
or
fmulp
jp
and
sbb
and
ins
mov
sub
outs
enter
iret
outs
cmp
pop
fstp
adc
or
lock
mov
sub
inc
in
ins
sahf
jo
inc
pop
or
prefetch
test
out
outs
retf
inc
pop
mov
mov
mov
outs
push
sti
retf
nop
pop
cs
mov
scas
rcl
sbb
pop
nop
or
add
sbb
xlat
mov
xor
xchg
jns
xchg
or
add
cmp
and
jno
pop
test
lock
cmp
sub
fsubrp
hlt
test
mov
xor
jns
in
lahf
leave
out
xor
out
mov
sahf
(bad)
lds
jno
stos
aas
push
sbb
outs
xchg
mov
int
dec
inc
pop
inc
push
cwde
sbb
pop
jge
test
xchg
xchg
pop
cmps
cli
mov
lahf
jp
fs
das
jp
cld
pop
fistp
(bad)
sar
pop
and
xlat
jns
jne
div
xlat
fadd
and
jmp
mov
inc
ss
retf
and
call
mov
std
dec
fstsw
scas
(bad)
lahf
lods
rcl
cmp
pop
xchg
loop
pushf
pop
mov
xchg
outs
pop
adc
mov
push
mov
aas
retf
fwait
nop
sti
xor
ret
cld
out
adc
adc
mov
leave
sbb
xor
loop
out
dec
ds
outs
or
and
pop
and
and
adc
add
gs
add
test
pop
mov
push
inc
out
popa
or
leave
cmc
add
enter
mov
jg
es
aas
int
ins
or
cmc
ins
mov
fs
pop
mov
ss
(bad)
sub
repnz
out
push
mov
mov
clc
fwait
dec
and
cmps
mov
retf
dec
cmp
inc
mov
dec
int
sub
inc
jb
call
xor
out
mov
rcl
push
int
jae
movs
dec
xchg
mov
stos
pop
sbb
scas
xchg
imul
jmp
popa
xchg
imul
mov
test
inc
mov
jg
shr
sbb
(bad)
scas
shr
adc
stos
add
mov
(bad)
aam
pop
lar
popa
pusha
addr16
aad
scas
fdivr
mov
push
pop
retf
mov
int
and
psubw
ss
add
and
fsub
rcr
outs
push
push
jbe
adc
std
xchg
adc
mov
ror
lods
sub
dec
frstor
xchg
xor
dec
int3
stos
mov
pop
in
pop
dec
mov
js
shr
repnz
rcr
mov
mov
fwait
inc
loope
rcr
mov
adc
fs
outs
push
call
ins
jae
adc
mov
mov
dec
mov
ja
retf
mul
jmp
setae
or
pop
aam
loope
mov
jnp
and
sti
test
stos
sbb
jae
test
test
in
(bad)
lods
loope
fbstp
jp
jae
loop
adc
cmc
cmp
fdivrp
out
pop
popf
push
imul
jne
jnp
pop
aas
xor
scas
in
jns
cmps
lock
push
sti
xchg
aaa
je
gs
stos
cmp
jmp
aad
mov
ss
and
(bad)
xlat
je
mov
fcomp
dec
inc
mov
sub
add
xor
lock
push
outs
jns
and
rcr
lahf
jle
ja
fisub
iret
scas
or
inc
in
mov
dec
xor
jae
push
sbb
mov
bnd
or
mov
push
repnz
fild
adc
enter
adc
xor
ror
pop
jmp
inc
repz
jb
add
js
out
je
mov
arpl
ds
mov
popf
push
or
ret
dec
add
in
ret
sbb
jecxz
cdq
mov
ror
mov
dec
loopne
test
push
sub
cmp
scas
test
and
enter
cld
jecxz
popa
push
shl
inc
ins
(bad)
repz
imul
and
add
ss
jecxz
pusha
and
inc
fwait
outs
or
mov
pop
dec
inc
les
xor
fs
pop
lock
mov
call
mov
out
and
out
scas
sub
mov
jnp
shl
in
pushf
fs
dec
(bad)
lock
jns
shl
jmp
cmp
or
dec
jo
adc
and
or
dec
out
xor
xchg
cmps
into
ficomp
jno
adc
push
jmp
(bad)
mov
push
sahf
pop
(bad)
sub
dec
call
push
fsubrp
mov
std
sub
fbld
pop
and
iret
shr
or
jne
scas
adc
test
sub
mov
fsin
dec
mov
dec
mov
mov
sbb
jge
sbb
(bad)
ss
pop
les
and
mov
js
scas
xchg
into
mov
adc
iret
iret
mov
hlt
xchg
sbb
dec
push
das
lahf
sub
gs
or
dec
dec
inc
sbb
das
xlat
pop
cmp
gs
addr16
sti
pop
push
add
push
xor
push
into
xchg
cmp
mov
into
shl
lahf
ins
pop
mov
mov
loop
jg
and
xchg
xchg
test
xor
mov
inc
leave
cmp
xchg
in
aam
sbb
rol
sbb
xchg
call
xor
push
(bad)
shl
and
dec
arpl
les
pop
mov
cmp
jecxz
hlt
jae
cld
ja
cmp
and
mov
jg
bound
daa
mov
push
mov
push
jbe
add
fstp
dec
pusha
push
mov
gs
push
lock
jle
in
cmps
sbb
or
pop
dec
push
fnstcw
adc
idiv
mov
jmp
jp
movs
shl
sub
push
inc
mov
jge
aas
sub
adc
mov
jmp
xchg
mov
int3
aaa
pop
sbb
sahf
dec
add
pusha
mov
stos
sti
fs
imul
mov
ds
int3
call
mov
rcl
in
dec
ss
rcr
push
nop
out
sbb
mov
jns
div
pop
push
rcr
rcl
movs
int3
jg
and
out
loope
cld
sub
adc
mov
cmp
jo
xchg
in
in
cmp
je
sbb
cmp
push
cli
addr16
mov
jle
or
dec
aaa
mov
punpcklbw
sahf
dec
inc
bound
push
sub
sub
or
mov
inc
cmps
dec
outs
and
in
inc
jno
sbb
in
gs
leave
arpl
jb
sbb
jmp
ror
jmp
neg
ja
mov
push
not
addr16
arpl
dec
in
adc
inc
ja
loopne
cs
enter
xor
adc
ret
sub
cmp
popa
xchg
and
and
or
cs
pop
mov
je
adc
inc
in
sbb
cmp
ja
xchg
fadd
or
test
sbb
lock
rol
jns
push
inc
addr16
std
mov
jmp
popf
sub
(bad)
xor
jno
js
fdivr
(bad)
pop
ins
jmp
and
cmp
mov
es
int
enter
push
add
scas
mov
jp
mov
test
je
inc
stos
xor
movaps
jb
mov
das
xor
loope
adc
fist
pop
mov
mov
sbb
push
sbb
(bad)
pusha
push
mov
mov
lods
sbb
cdq
jbe
mov
es
and
fs
sbb
call
(bad)
leave
cmps
mov
cmps
and
sbb
stos
fnstenv
in
pop
jmp
idiv
push
or
adc
test
ins
jmp
movs
sbb
mov
adc
cld
mov
pushf
pop
xchg
jge
fisub
cmp
arpl
add
inc
inc
mov
rol
xlat
sbb
adc
sub
sub
in
movs
les
jae
rcr
or
aad
xacquire
(bad)
test
ds
movs
mov
fimul
jns
dec
lahf
dec
mov
adc
je
fld
pop
movs
xor
jb
ja
test
mov
adc
push
xchg
fild
ror
xor
ss
loopne
push
and
fwait
sbb
sbb
fcom
pop
xchg
xchg
adc
clc
in
fs
nop
into
cmps
mov
xor
xor
out
fldcw
js
enter
out
or
gs
repz
pop
test
test
dec
cmp
cwde
and
jns
xor
inc
cdq
sti
lock
mov
movs
adc
test
shr
or
push
inc
sbb
leave
jnp
movs
imul
es
mov
mov
mov
aas
cmp
mov
push
cmp
test
(bad)
sti
and
add
sub
js
sub
jae
xor
(bad)
int3
sub
out
stos
adc
cmps
sar
test
popf
xor
pop
fnsave
mov
je
sbb
leave
mov
scas
pop
xchg
call
fdivr
pop
call
jnp
add
stos
and
push
(bad)
jbe
add
sbb
fbstp
push
out
push
xchg
mov
xchg
pop
add
test
in
rcl
xchg
xchg
pop
scas
jnp
nop
xor
cdq
outs
jnp
sub
lods
repz
nop
adc
inc
cmp
mov
in
ins
mov
hlt
push
jns
int3
xchg
xchg
xor
pop
stc
popf
out
test
fs
test
and
sbb
lods
and
cmp
pop
daa
jns
sbb
or
es
mov
loope
scas
into
push
in
and
aad
mov
loopne
hlt
movs
dec
call
movs
or
and
xchg
ret
cld
jno
xchg
xor
add
mov
call
and
popa
jns
(bad)
xor
sub
fidivr
aas
cmps
cs
cmp
mov
nop
and
pop
arpl
sbb
cmp
jl
mov
fdiv
iret
xchg
cli
in
or
sbb
jns
sub
bound
repnz
mov
outs
test
mov
nop
cmp
xchg
call
gs
xchg
sbb
aas
push
inc
push
leave
shl
out
xor
sub
push
or
shr
sub
retf
xor
bound
jae
add
call
out
dec
scas
cmps
sbb
cwde
inc
shl
push
gs
cmps
sar
dec
push
sub
in
imul
xchg
es
and
inc
jne
fs
cs
rol
sub
loopne
mov
fwait
ins
sub
cld
xchg
in
sahf
dec
xchg
jbe
push
sbb
leave
mov
sub
arpl
in
fcomip
les
mov
mov
scas
inc
push
sahf
adc
out
adc
shl
jge
stc
icebp
jl
mov
or
xchg
out
sub
into
hlt
mov
sub
call
mov
jno
iret
into
lock
shr
jecxz
loope
mov
cwde
ficomp
push
add
shl
xchg
cmc
xor
(bad)
dec
leave
int
sub
fstp
sub
jl
dec
or
data16
jne
shl
mov
adc
sub
in
cmps
in
sub
lahf
jae
gs
mov
sbb
or
or
inc
movs
out
into
sbb
sbb
repz
iret
add
in
hlt
add
jmp
repz
popa
xchg
cmp
ror
jp
fldenv
xor
push
adc
stos
mov
sub
icebp
add
bound
jp
push
sub
xor
in
daa
test
lahf
and
cmps
in
sub
leave
jo
mov
repz
dec
cmp
mov
sub
pop
and
movs
cwde
ins
xchg
dec
shl
xchg
test
xor
arpl
out
ins
mov
arpl
push
cmp
xor
or
(bad)
fcom
add
xlat
and
or
push
int
ja
push
pop
mov
sti
xchg
mov
movs
sub
push
mov
inc
and
xchg
aaa
jno
arpl
cmps
dec
fs
or
mov
xor
jmp
gs
adc
jae
push
adc
or
bound
mov
xchg
push
inc
xor
imul
mov
xor
adc
movs
dec
cmps
cmp
cmp
int3
enter
pusha
dec
mov
or
repnz
scas
mov
push
shr
mov
mov
lock
adc
jmp
cmps
mov
jl
jnp
std
mul
mov
sub
jmp
out
jg
scas
mov
int
cmps
scas
mov
jne
push
mov
retf
test
xchg
scas
int
or
add
retf
gs
in
mov
bound
cmc
dec
ret
jmp
into
scas
ja
int3
int
test
aad
pop
cld
fmul
into
xchg
mov
xchg
ins
or
je
mov
push
dec
outs
cwde
jge
cs
(bad)
pop
mov
push
mov
aas
lahf
mov
mov
cmc
cs
ret
inc
bound
mov
cdq
stc
(bad)
addr16
icebp
pop
retf
ret
clc
push
dec
ss
xchg
idiv
loope
jb
mov
cmp
aad
aam
pxor
jae
std
scas
adc
and
push
lods
mov
stos
mov
jecxz
jne
jno
cmc
leave
loope
retf
repnz
add
and
loop
mov
jbe
bound
mov
mov
mov
inc
adc
dec
movs
aad
jmp
add
cdq
into
addr16
mov
pop
xchg
dec
inc
mov
adc
adc
mov
mov
jmp
or
xor
cmps
mov
inc
pusha
dec
cmps
in
fdivr
push
mov
lods
cli
in
mov
sub
test
inc
adc
or
les
mov
movs
cdq
fcom
mov
retf
mov
in
movs
mov
add
js
rcr
dec
mov
or
inc
sbb
xor
add
mov
retf
out
gs
and
mov
out
mov
sbb
fwait
and
mov
ins
xor
movs
test
(bad)
fdiv
inc
push
push
mov
pop
jnp
adc
sbb
stos
idiv
lods
jecxz
xchg
xchg
fcomp
sbb
in
fs
xchg
arpl
cs
pop
xchg
fs
sbb
jo
and
test
add
aad
enter
(bad)
ss
xchg
cmp
in
cli
je
fsubr
stos
retf
sub
or
call
and
mov
lea
or
mov
or
(bad)
call
cs
push
mov
jg
jecxz
std
mov
(bad)
dec
imul
ror
test
push
retf
push
clc
leave
jmp
iret
mov
dec
pop
push
movs
inc
adc
push
in
pushf
out
sbb
gs
or
mov
in
adc
nop
cmp
movhps
hlt
mov
xor
pop
mov
jns
sbb
xor
jle
push
adc
aas
out
pop
movs
aad
pop
fist
stos
jl
cmp
mov
mov
enter
or
pop
pop
jmp
call
jmp
sar
bound
into
sbb
push
into
or
ins
push
call
fdivr
mov
sub
push
xor
scas
sbb
popf
shl
call
loopne
dec
ja
movs
out
in
fs
mov
iret
das
inc
sbb
neg
(bad)
mov
or
movs
mov
loope
lods
or
pop
cmp
and
pop
sub
lea
sbb
or
stos
in
and
fmulp
push
mov
pop
inc
in
outs
je
nop
(bad)
fild
and
inc
jl
push
jno
xor
push
cmp
call
and
sub
cmps
dec
xchg
shr
stc
pop
sbb
lock
mov
lods
(bad)
in
aas
aad
fstp
jmp
mov
mov
imul
iret
imul
loopne
dec
push
imul
and
jecxz
aas
dec
and
rcl
test
mov
add
xchg
inc
pushf
cmp
cmp
or
in
std
add
xchg
leave
dec
dec
jmp
or
xor
(bad)
sahf
push
mov
add
in
stos
(bad)
cwde
movs
xor
fsubr
dec
sbb
push
sbb
mov
imul
sbb
fstp
mov
mov
call
or
int3
shl
sbb
imul
dec
cmc
rol
mov
sbb
inc
inc
scas
repnz
pop
js
hlt
pop
dec
cmp
das
push
jmp
sahf
adc
dec
mov
in
repz
and
push
jno
pop
loope
loopne
ret
push
xchg
cli
jne
xchg
ret
sub
outs
loop
(bad)
mov
push
xchg
jae
and
cmps
arpl
test
and
mov
or
push
rcr
or
out
push
int
adc
in
push
and
cli
mov
xchg
pop
sbb
test
xchg
retf
push
stos
div
xchg
inc
sub
pop
bswap
mov
pusha
fadd
(bad)
mov
sub
jl
clc
les
mov
mov
push
mov
mov
jmp
jmp
popa
lahf
daa
xchg
sub
or
or
dec
mov
test
in
ins
sbb
mov
inc
(bad)
out
xchg
ds
xor
in
into
push
fistp
movs
inc
cmp
hlt
mov
push
or
daa
daa
js
and
adc
cmp
mov
fs
fs
cmp
fbld
cs
and
pop
mov
sbb
xchg
pop
add
sbb
and
xor
mov
int
xchg
mov
sbb
aaa
add
inc
bound
les
sub
xchg
arpl
push
in
fucomi
out
(bad)
and
xchg
jle
stos
nop
sbb
inc
std
push
add
retf
sar
jnp
push
jno
add
adc
push
xor
fcom
or
je
fs
loopne
cmp
mov
test
ins
ret
and
xchg
ss
push
push
into
cmp
and
int
push
in
jmp
pushf
jecxz
and
pop
in
ja
fsub
jg
int3
cmps
sub
popa
cmp
cmp
call
pop
xor
dec
iret
mov
mov
pop
cmp
fdivr
mov
int
mov
scas
repz
mov
in
bound
xor
and
mov
lock
cli
repz
clc
inc
mov
test
repz
scas
jo
retf
push
add
lahf
pushf
sub
sub
jecxz
mov
sti
or
fwait
push
popa
inc
and
cs
mov
(bad)
xor
das
data16
push
fisub
or
xchg
push
mov
stos
shr
lds
adc
not
ret
sub
inc
fs
mov
add
imul
div
push
retf
sti
jecxz
adc
shl
push
pop
adc
jmp
sbb
mov
xchg
cmc
mov
add
lds
fwait
(bad)
into
lahf
cmp
inc
addr16
pop
xchg
inc
cld
pop
jb
loope
mov
mov
jne
das
ss
or
(bad)
jle
pop
xor
add
(bad)
mov
add
dec
adc
lock
outs
push
add
ss
sbb
std
jp
cmp
inc
or
or
movs
dec
adc
add
or
stos
jno
stos
sub
ins
dec
fisttp
mov
inc
call
nop
xor
dec
xchg
cmp
or
retf
das
mov
lock
pop
mov
outs
retf
test
call
call
hlt
sbb
xchg
pop
loop
jp
jae
icebp
or
xchg
mov
mov
mov
or
test
sbb
outs
popa
or
mov
mov
push
ds
sbb
mov
jge
aam
pop
add
outs
xor
lea
retf
mov
inc
dec
cmp
loope
lock
xor
sbb
sbb
mov
dec
pop
and
hlt
fwait
lods
push
out
mov
loope
(bad)
hlt
push
sbb
cli
call
jns
mov
adc
in
cmp
les
xlat
sub
jne
add
push
scas
arpl
mov
loope
push
cmp
mov
mov
sbb
mov
shl
sub
mov
mov
inc
xlat
mov
mov
xchg
(bad)
pop
push
mov
mov
lea
jnp
or
or
cs
movs
xchg
inc
cmp
push
xchg
adc
sub
scas
les
imul
pop
ja
and
clc
xchg
sub
dec
sub
imul
ret
push
iret
cld
xchg
lahf
adc
icebp
jns
addr16
push
loopne
or
out
neg
das
fbstp
in
(bad)
ficomp
das
add
jnp
cmp
ficom
xchg
sub
repnz
sub
pop
add
dec
push
fstp
inc
xchg
or
adc
xchg
(bad)
cli
jmp
pushf
(bad)
sti
cli
mov
push
mov
cmc
in
retf
(bad)
(bad)
mov
pop
outs
loope
fidivr
add
mov
fbld
jnp
inc
(bad)
cmp
add
add
lds
leave
loope
nop
xchg
cmp
inc
out
fdivr
mov
dec
xchg
mov
cmp
or
enter
ins
mov
ins
mov
fst
stc
dec
clc
scas
test
mov
fsub
aad
aaa
push
jnp
jmp
xchg
into
push
xchg
xchg
ret
iret
jl
jg
pusha
jnp
or
or
and
xchg
popf
jecxz
dec
adc
mov
test
jmp
xor
cs
retf
ja
leave
adc
push
inc
cmc
repnz
or
push
dec
mov
jo
test
in
jl
push
adc
cmp
dec
loopne
push
sub
cwde
add
fs
std
inc
jecxz
in
mov
jno
inc
inc
xlat
cmps
pushf
retf
(bad)
stc
je
aas
ins
mov
push
sar
cmc
fisubr
loope
cmp
loop
sub
je
push
test
xchg
leave
fisubr
(bad)
cmp
ins
cmp
sbb
jae
pusha
jmp
mov
sbb
dec
pop
icebp
push
pop
jmp
imul
call
add
pop
mov
xchg
mov
push
jno
jo
mov
out
push
ja
imul
int3
jne
xor
repz
xchg
pop
mov
or
and
or
dec
adc
sub
popa
jg
adc
push
jmp
mov
add
bound
out
push
(bad)
ret
and
cli
inc
pop
(bad)
test
mov
pusha
sub
jne
add
sbb
iret
(bad)
adc
sub
test
movs
cmp
xor
call
ret
not
stos
icebp
sbb
out
retf
xchg
popf
imul
das
daa
ins
mov
jle
xor
and
inc
nop
push
mov
pop
add
sbb
sbb
fimul
cmp
cld
cwde
mov
xor
ds
and
xchg
(bad)
jno
sbb
pop
test
push
sbb
push
add
pop
mov
pushf
mov
push
mov
push
ss
pop
cdq
stos
jbe
or
ret
outs
mov
ins
test
xor
adc
mov
int
mov
mov
or
add
test
std
dec
stos
stc
(bad)
enter
aam
push
xor
stc
jno
mov
dec
imul
push
push
push
cmp
fiadd
add
hlt
mov
ins
mov
ins
dec
sub
sti
sbb
out
push
add
fcom
push
lahf
add
jecxz
mov
dec
mov
adc
cli
or
addr16
xchg
xor
xchg
dec
mov
mov
jg
jb
mov
(bad)
mov
mov
(bad)
icebp
mov
scas
sbb
pop
shl
xchg
test
movs
mov
fwait
push
add
sub
sub
lods
mov
ins
mov
or
or
add
call
ins
cmps
adc
adc
sub
adc
data16
mov
mov
ins
push
inc
fdivrp
xor
adc
lock
je
js
lahf
lock
xchg
mov
xor
jnp
retf
jcxz
out
and
inc
cdq
xlat
or
scas
(bad)
int
lods
aam
or
repnz
cmp
ret
repnz
add
and
ins
sub
mov
and
inc
jge
cmp
call
in
jae
sar
push
add
cli
stos
sub
sti
or
pop
cli
xor
int3
(bad)
hlt
xor
mov
dec
pop
aad
inc
jnp
mov
add
push
ficom
fbstp
cli
inc
pop
lods
jl
xchg
call
pop
mov
rcr
or
das
push
xchg
sar
add
int
and
and
out
dec
inc
shl
inc
jmp
jl
repnz
iret
scas
icebp
mov
jmp
inc
inc
sbb
in
cmp
pushf
cwde
dec
out
call
pop
dec
jb
pushf
add
out
push
cmp
stos
push
aad
push
out
cmp
cwde
dec
xor
adc
ret
shl
pop
stc
or
fld
test
jl
push
mov
out
scas
xlat
test
mov
sbb
out
and
or
test
cs
(bad)
cld
lahf
cmp
cmp
jbe
pushf
(bad)
popa
add
mov
mov
jne
mov
xchg
jle
xchg
or
xchg
mov
lahf
sub
jle
cmp
lahf
jns
out
xor
and
sbb
sbb
daa
and
or
xor
aas
icebp
cli
outs
dec
cmp
ret
imul
jge
mov
leave
fst
clc
and
adc
inc
ret
or
cmp
adc
sub
pop
adc
dec
mov
sub
mov
dec
in
mov
int3
shl
mov
in
cdq
cmp
pop
mov
dec
leave
mov
push
enter
push
cmp
cmc
fwait
jae
pop
xchg
dec
ret
data16
cmp
dec
es
scas
in
fcmovnb
aad
sub
sbb
pop
pop
test
daa
fnsave
loop
(bad)
mov
inc
inc
cmps
cli
mov
push
mov
jno
das
nop
pop
xchg
scas
rol
mov
stos
psllq
fidivr
jmp
movs
adc
inc
stc
cmp
push
dec
push
sbb
jmp
mov
pop
jnp
xor
dec
popa
xchg
push
loop
hlt
adc
push
or
(bad)
mov
js
loope
jno
cdq
cmps
rcl
mov
fnsave
cmp
xchg
add
mov
ret
out
das
sub
cmp
stos
bswap
adc
push
jb
dec
mov
stc
inc
push
sbb
push
xchg
outs
inc
pop
rep
ret
daa
mov
sti
cdq
call
mov
xchg
arpl
call
cdq
jmp
xor
xchg
mov
icebp
push
mov
test
mov
leave
jmp
js
cmp
adc
add
mov
fimul
fcomi
jg
fild
jnp
daa
cmps
test
and
adc
jae
icebp
(bad)
pop
sub
lahf
jp
retf
cdq
retf
mov
sub
and
movs
mov
pop
idiv
mov
pop
fsub
pop
retf
fcmovu
cwde
push
inc
push
mov
call
in
fwait
scas
mov
jbe
add
into
xchg
ins
ret
mov
(bad)
xor
dec
popf
dec
test
aas
inc
stos
mov
jnp
jo
in
push
movs
loop
ja
dec
aas
jo
mov
stos
pop
movs
in
xchg
sbb
sub
inc
fldenv
mov
jo
adc
sbb
call
addr16
movs
shr
xchg
sbb
test
or
outs
jmp
mov
inc
jp
adc
adc
test
adc
sbb
fdiv
and
xchg
ret
jno
aaa
xor
xor
cld
cld
(bad)
je
je
adc
inc
inc
imul
rcr
lods
lods
inc
or
jecxz
neg
fistp
jp
and
add
outs
dec
xchg
and
scas
xor
adc
outs
call
push
aas
mov
cwde
push
pop
mov
std
xchg
sub
popa
call
fmul
xchg
in
xor
mov
and
test
les
sbb
push
mov
cmc
loope
out
bound
movs
adc
xor
out
push
and
add
jns
inc
leave
leave
loope
pusha
fst
out
test
ds
sub
loopne
push
or
cmp
mov
fild
sbb
sub
stos
mov
pop
xchg
out
dec
xchg
dec
xor
pop
sub
sub
stos
sbb
retf
push
(bad)
pusha
xchg
repz
mov
xchg
fld
out
(bad)
mov
loopne
mov
out
push
fadd
mov
cwde
imul
(bad)
cli
inc
retf
push
cmp
jbe
cmc
cmp
cmp
dec
scas
test
cdq
pop
jae
adc
dec
in
sahf
xchg
inc
loope
call
ins
mov
push
es
sahf
mov
cli
pop
adc
xchg
jmp
sbb
arpl
mov
sub
outs
mov
nop
add
sbb
mov
sub
repz
out
push
mov
mov
int3
in
sbb
mov
fisub
ds
jns
pop
push
xchg
sbb
shr
out
sub
mov
or
cmc
cmp
ins
scas
adc
cmp
jp
arpl
out
lods
sub
out
pop
inc
or
sub
cmc
addr16
mov
sub
jmp
call
pop
dec
cdq
aad
inc
jne
adc
dec
outs
or
mov
(bad)
jns
rcl
jne
es
repz
jns
dec
mov
scas
adc
sbb
out
dec
cld
xchg
dec
jp
xchg
or
mov
lods
jns
je
lea
(bad)
test
in
js
xchg
cmp
sub
shr
ss
aad
add
adc
sahf
stos
inc
xor
push
mov
es
xlat
je
in
fsubp
adc
test
mov
or
adc
pop
nop
call
add
call
cs
es
call
dec
inc
mov
in
je
out
loop
iret
jmp
les
add
ds
adc
imul
leave
fidivr
fsub
push
sub
mov
xor
(bad)
dec
neg
xchg
sbb
out
loope
out
mov
ins
push
pop
or
out
in
sub
(bad)
clc
dec
gs
call
cmp
pop
sub
push
lea
cs
xor
mov
lods
xlat
mov
add
les
lds
add
mov
sbb
mov
mov
sbb
mov
xor
arpl
leave
sar
out
dec
pushf
mov
push
jbe
movs
xchg
pop
adc
imul
dec
jle
js
mov
pushf
hlt
mov
jmp
test
mov
imul
xor
lahf
call
and
mov
jge
push
sub
xor
stos
pop
out
std
push
sti
(bad)
xor
or
loopne
mov
add
repnz
daa
sti
inc
scas
cmp
add
inc
pop
xchg
sahf
xchg
shr
mov
and
xchg
lock
repz
jnp
xchg
retf
jle
cmp
pop
and
dec
mov
mov
sub
push
addr16
std
xlat
sbb
aam
rcr
sbb
jae
pushf
mov
idiv
in
jmp
aad
clc
adc
jno
cld
in
mov
nop
mov
loope
adc
push
aas
popf
shr
push
mov
push
imul
jb
jmp
loope
or
jno
mov
push
cmp
pusha
push
add
loope
add
push
xor
mov
inc
aam
adc
mov
clc
or
pop
sbb
imul
sub
cdq
les
jnp
inc
jl
push
or
aas
sub
push
jge
shr
mov
cdq
in
lods
scas
stos
leave
imul
inc
fwait
xchg
test
fs
icebp
push
jecxz
jcxz
sbb
pop
jnp
sub
in
test
fild
jmp
test
out
adc
push
and
repz
ss
ins
inc
ja
fmul
cmp
push
cdq
sar
pop
aas
movs
int3
aaa
lea
xchg
mov
repz
jb
js
or
fstp
adc
jl
(bad)
jne
mul
sbb
imul
or
add
mov
popf
jle
fist
push
xor
mov
xchg
jo
inc
mov
daa
adc
jle
movs
jne
dec
push
outs
cmp
int3
inc
neg
aas
dec
fdivr
or
leave
jg
jne
test
mov
xchg
(bad)
int
cli
int3
cmp
loope
test
pop
add
(bad)
sub
push
sub
mov
sbb
mov
mov
push
mov
test
inc
mov
mov
ds
jno
and
adc
sbb
jl
pop
je
push
sar
retf
dec
mov
push
fcom
xchg
retf
pop
fisub
sbb
aad
and
push
call
in
mov
retf
jle
xor
mov
adc
out
cld
cdq
nop
cmps
popa
pop
dec
ror
jae
mov
and
fwait
cmps
jecxz
ss
fs
aaa
ftst
push
sub
call
jg
(bad)
pushf
jb
add
fiadd
or
stos
ds
fs
sub
pop
mov
clc
xchg
sub
pop
test
hlt
mov
adc
aaa
ret
push
js
div
shl
push
popa
xchg
movs
mov
sti
loopne
sub
jmp
jb
jg
jp
cmp
push
sbb
sub
mov
xchg
ret
aaa
popf
and
adc
jmp
test
or
inc
in
cmp
gs
aam
adc
lock
icebp
mov
mov
jl
sub
fdivr
out
add
push
add
das
pusha
cmp
jae
cmp
shr
seto
inc
mov
nop
lods
pop
arpl
hlt
xor
scas
popa
loop
cwde
fcmovnu
cli
mov
aad
cld
ja
dec
push
push
xchg
(bad)
fld
ja
cmps
cmp
data16
inc
out
xor
sti
out
dec
xchg
call
xchg
daa
ss
xchg
xor
shl
stc
test
movs
xor
xchg
sub
ins
retf
test
push
mov
xchg
and
outs
out
sub
add
dec
ds
loopne
or
xor
sar
cmp
and
pop
jle
xchg
aad
mov
jnp
mov
and
push
mov
data16
test
inc
(bad)
lock
inc
inc
push
scas
dec
add
stos
inc
mov
cmp
jg
and
adc
int3
add
pop
mov
test
out
mov
pushf
clts
ret
mov
ficom
jno
dec
sbb
sub
xchg
mov
mov
call
in
lock
sbb
sub
adc
mov
loop
xchg
push
adc
bound
push
jg
cmp
add
and
cmp
push
or
jmp
mov
push
jl
ins
pusha
add
jb
stc
pop
nop
ror
sar
adc
fsub
and
inc
call
js
mov
cli
sar
in
rcr
sbb
mov
scas
in
sub
lea
rcl
cmp
pop
push
push
out
jl
arpl
int3
cmp
dec
pusha
dec
sbb
and
fst
aad
jl
(bad)
jae
aad
iret
loop
dec
adc
outs
jb
mov
xchg
pop
in
cmps
adc
sahf
xchg
arpl
push
mov
inc
lock
jne
repz
movs
loope
mov
push
jecxz
iret
mov
and
lock
xchg
popa
dec
push
or
ins
mov
in
lods
sbb
popf
fidiv
sbb
lock
ins
int3
mov
mov
jb
or
nop
pop
xchg
sub
dec
sbb
fstp
sub
cmp
mov
mov
or
js
adc
fcmovnbe
sub
jo
inc
and
and
push
sbb
pop
cld
xchg
sbb
add
call
push
xchg
repnz
aaa
rcl
enter
cmp
jmp
test
int3
inc
mov
sti
dec
adc
outs
popa
pop
ror
dec
mov
mov
jb
shl
mov
mov
push
xlat
loopne
(bad)
jecxz
ins
not
inc
mov
and
xchg
dec
test
loope
nop
ret
std
xchg
ja
lock
push
or
cwde
add
in
push
das
fsub
(bad)
gs
jae
sub
jno
or
paddusb
jbe
dec
mov
push
(bad)
jns
push
scas
iret
mov
dec
dec
lahf
pop
into
push
ds
dec
sar
mov
cmpps
jl
and
xchg
mov
cli
out
int3
adc
(bad)
test
adc
push
jg
out
dec
mov
jb
or
mov
xchg
cmps
imul
test
lods
sbb
lods
jns
jecxz
sbb
je
adc
mov
into
retf
sbb
retf
push
fimul
mov
mov
sbb
cs
sub
xlat
stos
or
lods
cmps
into
jb
xchg
and
adc
pop
loopne
dec
mov
loop
mov
stc
lds
mov
cmp
arpl
fild
jno
dec
jmp
punpckhbw
les
mov
shl
xchg
lds
les
lds
or
fcmove
daa
outs
mov
sar
inc
jle
pop
add
pop
cmp
loopne
sbb
enter
sub
cmp
jp
es
jo
repz
or
mov
sbb
xor
mov
adc
shl
shl
lods
cld
dec
jbe
mov
push
adc
aaa
js
in
movs
push
sub
push
xor
mov
xor
inc
loop
loop
cld
ins
add
mov
and
jmp
popf
jmp
daa
push
in
(bad)
cwde
xchg
mov
sbb
adc
pusha
jo
int3
ja
cmp
pop
xor
jge
and
adc
push
and
fs
cmp
push
ss
out
push
ins
jns
inc
mov
pop
sub
fdivr
fimul
or
jae
jle
xchg
lods
push
inc
addr16
out
jns
lea
mov
push
add
xchg
xor
pop
rol
or
inc
mov
into
sbb
xor
inc
ins
and
dec
xor
pushf
sub
std
je
xor
clc
ins
xchg
fcomp
sbb
cs
dec
sub
movs
sub
cmp
loop
mov
repz
dec
clc
sbb
pop
dec
lds
add
test
fild
pop
cs
scas
push
pop
inc
and
mov
mov
dec
or
lahf
or
xor
xor
retf
movs
jmp
add
loopne
cmp
neg
(bad)
and
repnz
lds
dec
popa
repz
pop
mov
and
(bad)
sbb
rcr
test
jbe
icebp
and
and
mov
lahf
mov
xor
sub
sbb
dec
int3
mov
mov
xchg
xor
push
and
test
cmp
out
jg
frstor
loopne
cmp
sub
xchg
adc
and
inc
or
mov
cld
and
inc
ss
jno
daa
sti
ss
cmp
aaa
outs
push
in
inc
jecxz
out
data16
cld
inc
dec
add
arpl
xchg
fs
ds
inc
in
(bad)
mov
cmp
jno
and
mov
mov
sub
nop
ins
icebp
lds
xor
in
jbe
hlt
in
cs
xchg
cmc
lods
pop
out
mov
mov
sbb
ror
jns
pop
cmps
or
ss
loopne
fcomp
stos
mov
dec
sub
fistp
movs
xor
mov
xor
popa
int3
popf
mov
inc
sbb
out
gs
sbb
into
ins
(bad)
adc
movs
mov
popa
or
mov
dec
dec
cdq
repz
leave
dec
loopne
je
test
pushf
stos
movs
movs
jbe
(bad)
clc
cli
clc
dec
adc
(bad)
xor
push
add
out
ret
out
push
imul
jno
ret
jne
push
cmp
mov
inc
inc
mov
adc
cmp
inc
mov
cmps
js
add
arpl
pop
and
clc
jle
cld
stc
pop
pop
sbb
fisttp
pop
xor
outs
push
add
(bad)
sbb
jg
jg
dec
pop
jg
sub
jo
cmp
add
mov
call
les
pop
xchg
mov
fcmovu
sbb
xchg
pop
pop
xor
loop
scas
jecxz
mov
lahf
xor
push
or
inc
je
(bad)
ins
aaa
push
and
mov
lea
or
inc
into
xchg
das
xlat
scas
jbe
sub
aad
and
mov
push
std
(bad)
movs
rcr
pop
in
dec
sahf
call
inc
cli
mov
cmp
arpl
xchg
cmp
mov
xchg
fst
mov
in
call
push
sub
(bad)
idiv
setle
js
mov
pop
push
aaa
mov
pusha
push
xchg
mov
xlat
mov
mov
pop
push
test
(bad)
and
push
fisttp
ja
jg
fdiv
inc
xchg
sbb
rcr
inc
repz
dec
inc
sti
imul
movs
cmc
adc
sub
ja
fistp
mov
add
mov
in
mov
xor
xchg
mov
sbb
std
mov
cmp
rol
les
fisubr
or
movs
lods
scas
adc
imul
pop
inc
ret
call
lahf
lds
jnp
inc
sti
inc
cmps
popf
add
mov
mov
in
leave
in
sub
or
iret
jg
push
jmp
push
pop
pop
dec
(bad)
fistp
cmp
jmp
mov
test
add
mov
scas
add
adc
push
pop
lods
nop
cwde
das
stos
xchg
sbb
lea
sub
pop
icebp
aaa
jg
data16
imul
loopne
fcmovb
test
sbb
cld
movs
jmp
je
mov
hlt
clc
push
adc
jno
pop
jns
mov
cmp
inc
mov
imul
add
inc
add
int3
cli
sub
ror
mov
mov
and
push
jg
nop
je
pop
(bad)
es
(bad)
add
adc
pop
sahf
or
pusha
add
mov
loope
fmulp
xchg
inc
push
sbb
jmp
daa
jmp
(bad)
in
mov
xor
inc
dec
popf
mov
sti
inc
jbe
pushf
sbb
xchg
dec
sub
jne
int
and
in
pop
inc
mov
cmp
fbstp
shr
(bad)
xchg
push
mov
inc
xor
outs
cdq
dec
lahf
shl
or
xchg
jmp
jb
xor
or
push
fwait
repz
ss
push
aad
test
pop
or
mov
adc
or
popf
fidiv
rcl
xchg
jne
push
call
mov
jecxz
shr
popf
hlt
clc
ss
popa
popf
jge
rcr
movs
fstp
inc
por
jmp
mov
jbe
jecxz
mov
inc
lods
out
mov
mov
and
mov
push
inc
sbb
pop
push
(bad)
jbe
mov
xchg
or
sbb
sti
cmp
ins
int
mov
add
sbb
push
enter
sbb
jns
lods
add
xchg
jb
js
add
jo
adc
mov
loope
xchg
das
pusha
ret
pop
adc
inc
aaa
mov
outs
adc
inc
dec
or
mov
cmp
(bad)
ss
mov
mov
(bad)
mov
xor
add
pop
into
cmp
mov
test
mov
xlat
xchg
and
jnp
enter
or
or
pop
inc
es
mov
int
mov
sbb
frstor
lahf
clc
retf
push
add
jge
bound
std
(bad)
gs
xor
inc
dec
inc
cmp
xchg
cmp
mov
jl
ret
jle
retf
movs
rcr
mov
repnz
jg
stos
xchg
push
aad
sub
sbb
xor
pop
enter
push
mov
sbb
xor
xor
popf
cmps
cdq
out
cmp
retf
mov
in
mov
clc
iret
fistp
enter
mov
ret
mov
inc
xor
fld
ffree
push
into
jmp
sbb
pusha
mov
stos
ss
daa
and
fwait
and
add
in
aad
faddp
outs
pop
stos
push
cmp
xchg
loopne
cwde
(bad)
mov
icebp
inc
clc
adc
mov
or
cmp
pop
or
add
mov
pop
retf
jns
scas
mov
ja
dec
cmps
dec
scas
cmp
or
push
push
in
dec
out
call
mov
(bad)
fild
mov
push
mov
push
ins
mov
div
imul
mov
cmp
dec
inc
icebp
add
cdq
scas
inc
xor
loopne
mov
(bad)
aam
sub
add
mov
(bad)
(bad)
neg
test
into
rol
sub
xchg
movs
pop
mov
dec
repz
in
sbb
jg
xchg
and
mov
sub
sahf
repz
lea
hlt
(bad)
xchg
fs
(bad)
icebp
xor
fwait
and
or
xchg
pop
cmp
jle
lds
es
fldcw
xor
dec
pop
aas
fcomp
jecxz
xor
es
cld
loope
pop
cmps
cwde
popa
mov
dec
call
or
ss
adc
gs
dec
stc
push
pop
jb
adc
jb
mov
fnstcw
xlat
cmp
mov
xchg
es
add
and
mov
fwait
cld
int
and
sub
repz
sbb
cs
(bad)
icebp
cld
push
cmp
in
dec
sbb
push
cmp
dec
sti
mov
mov
mov
jge
sub
cwde
retf
inc
aas
adc
leave
jno
push
mov
hlt
jb
push
xor
neg
mov
xor
out
sti
aad
sti
iret
popf
add
inc
or
xchg
jne
bound
sub
cmp
nop
mov
sbb
sub
(bad)
test
sbb
jmp
adc
adc
cmps
loope
sbb
or
das
inc
jae
out
gs
jmp
daa
test
addr16
stos
add
mov
and
scas
mov
nop
sbb
xor
and
jecxz
pop
sub
xchg
fbld
jo
mov
mov
aad
xor
xor
and
clc
jnp
stc
call
or
xchg
xor
jmp
lea
pop
test
inc
sub
mov
inc
cmps
add
pop
jae
jne
call
mov
ja
push
loop
pop
and
mov
inc
dec
mov
iret
out
mov
cmp
or
fwait
aad
pop
(bad)
xor
jae
and
mov
push
cmc
xchg
test
mov
pop
retf
jmp
sbb
or
jp
mov
aad
call
mov
loop
jecxz
(bad)
rcr
xchg
mov
sub
fstp
dec
int3
cmp
cdq
fisub
inc
into
test
add
loopne
mov
jns
out
(bad)
std
test
jle
xchg
sbb
stos
je
mov
pop
neg
out
or
jmp
call
test
or
lods
pop
dec
ja
pop
xor
jne
repnz
push
push
daa
fcomp
rcr
mov
loopne
mov
jne
sub
idiv
lock
jg
sbb
mov
ins
mov
cmp
cwde
sub
jg
cld
and
(bad)
loope
and
in
mov
jecxz
bound
mov
loope
stos
add
adc
push
push
out
in
push
test
shr
cmc
(bad)
retf
adc
cmp
mov
ja
fst
push
bound
mov
shr
ficomp
lock
mov
sbb
sub
jecxz
rcl
pop
dec
shl
test
(bad)
loopne
clc
and
ds
in
sti
lods
cwde
add
xor
pop
and
mov
sub
cmps
jo
adc
inc
pop
repz
test
mov
and
xor
sub
pop
(bad)
shl
in
imul
sti
adc
cwde
xchg
cli
out
out
jl
dec
and
pusha
je
mov
sub
xchg
mov
lock
xlat
pushf
and
repnz
icebp
cmp
add
fbstp
movs
mov
sub
not
mov
hlt
pop
enter
mov
mul
add
xchg
jbe
dec
pop
push
fdiv
pop
dec
cmc
ds
out
pop
and
mov
jnp
idiv
adc
add
mov
je
aad
stos
fsubr
push
outs
in
stc
sub
mov
cmp
mov
popa
out
test
add
gs
out
push
sub
push
mov
dec
jae
or
sar
mov
sbb
push
dec
push
sar
dec
push
inc
out
call
cld
sub
and
mov
xchg
pop
mov
mov
jne
stc
xlat
stos
mov
shl
mov
mov
cmp
sub
lods
call
pop
sbb
add
aaa
sbb
or
cwde
fld
inc
or
pop
inc
stos
cmp
ret
add
cmp
xor
into
int3
push
icebp
aas
hlt
mov
jg
daa
pop
stc
adc
clc
inc
cmp
xor
xchg
mov
xchg
push
shr
fst
xor
psubsw
jne
inc
ins
scas
mov
loope
fwait
xchg
cmps
mov
sbb
pop
fstp
popf
mov
sti
push
xor
and
out
push
fisubr
adc
div
jns
es
std
push
jmp
in
imul
enter
fadd
dec
inc
in
pusha
stos
das
mov
outs
dec
outs
sub
mov
into
nop
inc
jbe
cdq
pushf
idiv
adc
or
and
test
cli
std
xchg
das
inc
sbb
mov
jg
jmp
pushf
mov
sbb
mov
mov
stos
sbb
fwait
jmp
repnz
cmp
ficomp
fwait
sub
fdivr
mov
popa
in
scas
mov
sub
ins
pop
loope
jmp
mov
pop
cli
stc
lds
xchg
mov
pop
into
sub
data16
dec
jb
xlat
call
lahf
or
sar
les
xchg
jnp
rcl
loopne
sub
int3
cs
sub
xor
cmp
push
pop
pop
cld
arpl
(bad)
cvtps2pd
and
xor
aaa
mov
test
aad
movs
sbb
jmp
jbe
dec
mov
ss
fist
outs
sbb
adc
retf
inc
add
lods
mov
rol
sbb
cld
jmp
dec
xor
inc
test
cmps
into
jl
or
push
je
(bad)
dec
jle
xchg
imul
pop
or
add
mov
repz
sub
push
aas
xor
cmp
mov
(bad)
aam
fcomp
scas
inc
mov
bnd
sti
(bad)
pushf
jecxz
adc
or
push
call
xor
lahf
fwait
xchg
or
popa
and
ins
es
cmp
imul
mov
rol
jo
shl
fidiv
test
aas
xchg
stc
ins
mov
push
(bad)
(bad)
les
or
jne
fsub
dec
arpl
mov
or
jnp
in
scas
pop
int3
pop
js
sbb
pusha
mov
push
in
aad
xchg
add
fdiv
cmps
inc
movs
ret
mov
or
dec
and
imul
pop
xlat
jle
add
fst
psadbw
popa
outs
and
mov
(bad)
lods
aad
sbb
cmp
cs
out
push
test
lods
jnp
arpl
ss
movs
das
cdq
push
outs
paddd
fidiv
jns
int3
sub
out
xchg
ss
retf
push
dec
enter
inc
mov
xor
adc
rcr
fs
repz
jae
xor
inc
imul
mov
or
xchg
in
cmp
enter
stos
repnz
sbb
popf
daa
cmp
imul
sbb
sbb
in
sahf
add
cwde
aas
gs
add
xchg
repnz
loop
xor
sbb
inc
and
xor
and
push
dec
or
push
int3
mov
cmp
pop
xchg
xor
(bad)
fisubr
sar
add
add
jae
enter
xor
ret
jbe
xchg
lock
cs
outs
loop
push
jecxz
stos
pop
jmp
and
repz
jae
inc
loope
das
push
lods
dec
ret
hlt
mov
inc
jnp
int3
xchg
push
stos
lea
jo
xchg
dec
jb
in
pop
out
mov
test
cmp
mov
cmp
sbb
in
cmc
test
or
mov
mov
mov
xchg
les
das
mov
jnp
adc
push
mov
cli
mov
pop
dec
jb
jne
xchg
(bad)
and
aad
imul
in
out
jae
out
mov
jb
sub
data16
push
dec
push
push
arpl
jo
mov
(bad)
popf
inc
cmp
fild
lods
sbb
push
repz
outs
pop
pop
mov
xor
cmp
aaa
inc
mov
and
(bad)
aas
imul
and
ins
mov
add
pop
sahf
lods
mov
ss
fstp
mov
push
xor
lds
xor
jbe
sbb
dec
(bad)
pop
mov
fwait
sub
fdiv
retf
push
pushf
call
int3
cwde
stos
aaa
add
repz
jp
cmp
shl
ficom
lock
retf
fstp
jo
adc
mov
popf
push
push
push
test
jecxz
(bad)
ja
bound
and
sbb
or
dec
retf
jnp
rcr
jno
in
and
out
cmps
repnz
in
sub
js
and
repnz
adc
or
sahf
jae
fst
xor
outs
imul
fisubr
pop
add
outs
jle
(bad)
jmp
shr
in
jne
nop
xchg
fnstcw
fisttp
dec
push
mov
int3
mov
stos
aas
push
cmp
add
sub
push
ret
not
movs
push
mov
adc
mov
repnz
cdq
and
xchg
cld
mov
xchg
cmp
dec
shl
push
mov
push
daa
or
movs
xchg
retf
jl
out
imul
loope
pop
add
mov
xchg
(bad)
or
pop
sub
sub
lahf
pop
fdivr
int3
es
shr
mov
pop
dec
fdivr
sbb
push
iret
scas
mov
and
loopne
add
inc
test
ror
sbb
pop
aad
cmp
ja
js
xchg
xor
fbstp
xchg
repnz
and
or
es
lods
pcmpgtb
adc
jecxz
dec
cmps
push
ins
cli
(bad)
xchg
push
fdivp
outs
mov
mov
fs
stos
xor
call
icebp
sbb
stos
sbb
xchg
pop
in
outs
rcr
add
adc
cmp
sbb
sbb
xchg
inc
faddp
cmp
mov
sub
mov
mov
imul
add
cwde
into
es
movs
jecxz
adc
(bad)
lods
sbb
xor
pop
movs
push
cmp
scas
icebp
pop
inc
aad
push
cwde
inc
mov
lock
rol
not
jl
dec
movs
xchg
mov
repnz
arpl
dec
test
adc
or
mov
push
add
push
jno
jb
mov
inc
jns
call
jl
imul
cmp
(bad)
mov
adc
jg
aas
or
ret
mov
into
xchg
pop
retf
call
shr
fwait
imul
(bad)
jnp
loope
xchg
pop
dec
sub
adc
xor
jp
mov
clc
fs
retf
push
mov
or
inc
inc
mov
push
mov
dec
jmp
xor
cmps
shl
or
sub
aas
lock
lods
aas
movs
mov
ror
loope
out
push
cmp
sbb
mov
fwait
mov
in
xor
cdq
mov
mov
pop
fcmove
or
mov
sub
xchg
outs
cmp
jbe
sbb
ja
dec
xor
mov
xchg
shl
scas
push
inc
ins
outs
add
or
jne
fdiv
jb
mov
ret
sar
inc
mov
dec
pop
mov
push
in
or
cs
retf
iret
or
call
jmp
adc
fwait
jmp
js
jmp
sub
or
enter
xchg
mov
jp
mov
jo
or
lea
cmp
cmp
stc
loopne
adc
dec
fs
cmps
mov
in
dec
and
sbb
xchg
push
and
ror
sub
call
aad
(bad)
scas
cmps
mov
jecxz
adc
dec
pushf
clc
xchg
dec
inc
xchg
cmps
inc
inc
(bad)
fdiv
dec
imul
or
retf
scas
outs
pop
xlat
imul
call
xor
and
and
cmp
retf
xchg
push
mov
retf
cmp
jecxz
stos
bound
in
sub
add
sbb
ficom
push
mov
aas
scas
cmp
movs
push
jp
lahf
pop
push
adc
pushf
pushf
mov
mov
and
pop
add
xchg
inc
mov
xchg
inc
neg
mov
(bad)
cli
and
cmp
lock
mov
std
lds
inc
int
jl
sar
aas
rcl
js
jns
je
push
add
or
out
call
or
mov
pop
and
xchg
or
sbb
ja
sub
cmp
fistp
mov
dec
xor
sbb
retf
lahf
mov
ss
fldcw
rcr
ja
(bad)
jle
pop
ins
dec
(bad)
pop
fadd
push
adc
icebp
(bad)
pop
fild
lods
jmp
cmps
mov
xchg
jge
xchg
mov
rcr
jnp
int3
push
dec
push
iret
cmps
jnp
retf
and
mov
mov
sub
push
std
fnstsw
sahf
inc
(bad)
bound
aas
jecxz
fsub
pop
hlt
jns
cmp
mov
xor
mov
ins
push
test
xchg
retf
cld
lahf
fucomp
test
enter
ja
gs
adc
or
xor
sub
push
imul
mov
add
xchg
mov
das
pop
and
mov
in
loope
add
and
sbb
fst
push
inc
addr16
pop
xor
enter
dec
sub
mov
retf
dec
ja
mov
stc
jecxz
int3
call
cmp
fsubrp
daa
(bad)
cs
push
daa
not
jmp
jle
cmps
stc
adc
ret
adc
div
cdq
fldenv
in
sahf
lods
ja
dec
fnsave
sbb
pushf
xchg
sar
pop
push
mov
test
mov
ins
hlt
sbb
cdq
(bad)
jns
mov
ror
push
jge
xor
std
mov
lods
sub
add
ret
sbb
cmp
push
pop
in
aaa
push
mov
loopne
ret
rcl
pop
cmps
push
push
or
std
sub
sti
xor
sbb
push
(bad)
xlat
pop
mov
leave
shl
hlt
scas
je
inc
pusha
sahf
loop
addr16
scas
xor
(bad)
pop
retf
mov
ret
sbb
push
push
push
loope
xchg
or
pop
mov
lds
push
(bad)
ret
scas
fs
mov
dec
mov
imul
test
popf
inc
cmp
imul
push
adc
sbb
clc
add
cmps
add
jle
xchg
out
add
xchg
cmp
dec
sbb
std
nop
sbb
jle
(bad)
add
pop
mov
cmp
push
dec
mov
ins
cs
retf
push
jno
stos
dec
cwde
rol
sbb
cmp
or
add
jno
fcom
sti
mov
mov
jne
fnstsw
(bad)
push
aad
test
iret
sub
or
push
jmp
(bad)
shl
int3
adc
jns
adc
sub
daa
push
mov
out
mov
(bad)
adc
sub
jg
xchg
or
and
out
icebp
je
popa
pop
out
int
cmp
out
sub
in
ds
cwde
and
dec
mov
jecxz
cdq
lods
mov
jo
mov
mov
mov
sahf
and
add
call
cwde
or
mov
cmps
stos
sbb
out
sbb
dec
dec
out
jge
push
cmps
mov
rcr
jo
mov
jg
jl
jmp
inc
mov
dec
cld
sbb
emms
je
inc
js
enter
and
jle
test
jno
adc
dec
lds
lea
fadd
cli
push
in
call
leave
shl
sub
sbb
int
mov
popa
aam
test
div
in
lea
sbb
mov
call
jmp
mov
adc
mov
scas
adc
push
in
lock
fmul
sub
sub
ror
loope
dec
or
pop
fisubr
iret
sbb
mov
mov
inc
mov
or
push
es
and
xchg
sub
loopne
fs
sub
xor
pop
mov
repz
ss
das
mov
or
xor
inc
push
movsx
add
test
mov
aas
ror
inc
mov
hlt
arpl
outs
lock
loop
hlt
aaa
pop
call
test
ret
cmps
shl
loopne
(bad)
out
ss
sub
push
fmul
xor
jo
cmp
ret
dec
push
inc
repnz
sub
pop
push
leave
lds
push
pop
jmp
jp
mov
xchg
and
adc
shr
sub
sar
push
std
inc
mov
or
neg
mov
aad
cdq
loopne
push
dec
mov
sbb
jae
not
arpl
xor
imul
inc
mov
and
mov
jno
(bad)
pop
jge
and
sti
push
push
sti
pop
dec
icebp
scas
push
sti
sub
jmp
pop
lods
adc
sub
sbb
sbb
call
push
dec
mov
int
ret
fmul
xor
mov
test
ja
arpl
mov
stos
mov
inc
jg
push
outs
xchg
jg
dec
mov
fst
(bad)
jp
push
xchg
pushf
push
push
mov
std
into
fisttp
dec
out
inc
mov
out
cmp
push
jne
ins
mov
sub
mov
cmp
dec
dec
or
pop
std
jmp
inc
lock
mov
jmp
cmp
bnd
outs
outs
(bad)
jno
push
sub
inc
les
mov
adc
sub
test
jb
mov
outs
inc
sahf
in
nop
stos
pop
dec
stc
mov
cmc
mov
or
fmulp
xchg
iret
adc
dec
inc
call
cmps
test
dec
movs
and
sub
mov
out
out
mov
or
jae
and
push
int
stos
push
rcl
jo
mov
out
mov
adc
sbb
loopne
arpl
mov
fldln2
mov
sbb
add
jb
mov
sub
jne
and
lahf
(bad)
pop
xor
xchg
not
mov
pop
jl
stc
lahf
adc
icebp
popa
jl
push
loope
ins
lea
mov
or
or
int3
mov
lea
shl
out
lods
std
iret
int
in
sub
mov
shr
ret
mov
fiadd
xchg
ins
daa
xor
nop
mov
jnp
add
pop
mov
or
inc
(bad)
push
ins
and
mov
stc
mov
xchg
xor
mov
aaa
cmc
mov
shl
fcom
ret
sub
jae
mov
out
sbb
imul
not
mov
dec
sub
stos
mov
bound
sub
sub
je
jmp
cld
mov
mov
iret
loopne
push
jge
dec
imul
push
movs
sbb
mov
lea
pop
fcomip
sub
scas
sbb
cmp
dec
jl
dec
dec
adc
push
sub
fst
stos
adc
sub
int3
stc
loope
cmp
aaa
add
(bad)
or
xchg
adc
mov
push
push
bound
aas
or
adc
or
jno
cdq
shl
inc
mov
scas
(bad)
stc
outs
mov
cmp
jecxz
mov
mov
pop
retf
(bad)
into
push
jp
stos
adc
or
inc
les
call
xchg
rol
ss
scas
fiadd
rcr
pop
cmc
xchg
imul
cmc
add
xchg
fsubp
push
mov
(bad)
push
push
loope
out
dec
(bad)
jp
cld
xor
cmp
retf
fnstenv
icebp
push
push
scas
(bad)
sar
mov
ds
or
xchg
ss
je
call
adc
inc
xor
xchg
hlt
sahf
add
movs
sar
movs
arpl
dec
jo
fs
aas
repz
dec
retf
mov
adc
mov
xchg
(bad)
lods
test
push
inc
imul
into
mov
mov
cmp
in
test
ret
sub
mov
push
int3
nop
fisttp
sub
daa
mov
and
xlat
jecxz
ficom
mov
xchg
scas
push
jnp
sub
add
sbb
add
adc
sub
mov
cli
(bad)
mov
and
inc
jne
fwait
inc
(bad)
mov
add
push
popf
jo
out
repnz
inc
pop
mov
ds
adc
dec
adc
test
xchg
pop
test
add
(bad)
pop
aas
xchg
add
or
pop
int3
test
and
jbe
mov
mov
pop
mov
add
jne
fucomi
push
loop
movntps
cmp
xchg
popa
add
sub
sub
jno
adc
out
ret
jge
inc
ja
data16
clc
xor
das
nop
scas
lock
sub
xchg
xchg
mov
add
cwde
test
add
inc
mul
(bad)
xor
aaa
nop
push
sahf
inc
or
cwde
sbb
iret
add
lods
lea
pop
push
lea
cmps
cmp
sub
lods
in
xor
loopne
jp
jecxz
xchg
cmp
inc
or
xor
mov
into
cmp
mov
dec
add
mov
inc
scas
pop
outs
adc
pop
es
jp
xchg
sar
mov
jb
inc
mov
pop
fmul
xor
popf
call
adc
pop
retf
(bad)
pop
or
and
jge
pop
jo
push
xchg
inc
lds
sbb
inc
pop
xor
mov
imul
cmc
add
jp
mov
pop
ret
movs
push
pop
iret
and
xchg
push
int3
fmul
(bad)
jmp
ss
jb
xchg
fld
jbe
imul
push
int
mov
add
mov
mov
repnz
dec
ins
adc
xchg
arpl
hlt
mov
add
push
jge
cmps
inc
dec
push
cmp
ja
ficom
sbb
xor
jmp
xchg
es
sub
cdq
adc
xchg
imul
leave
jecxz
push
jbe
mov
out
clc
mov
mov
mov
fnstcw
jle
mov
das
repnz
pop
lds
outs
outs
xchg
lods
into
inc
dec
push
sti
pop
cmc
mov
inc
imul
sahf
mov
xor
shr
gs
pusha
adc
dec
(bad)
jge
clc
adc
adc
xchg
scas
add
and
cmc
loopne
xchg
ret
daa
adc
add
scas
repnz
rcl
scas
iret
and
test
xor
test
ds
or
push
cmps
pop
loop
arpl
fwait
pop
loop
cli
aad
pop
and
sti
fidiv
fidivr
(bad)
sub
mov
mov
fnstcw
test
jno
sub
shl
xlat
dec
cwde
mov
xor
sbb
cmp
push
pop
jb
sub
sbb
ins
mov
or
movs
popf
ins
xchg
sub
jae
dec
fsub
fimul
ins
jmp
icebp
and
xchg
sbb
leave
cmp
dec
pop
cmp
push
adc
push
loopne
jecxz
in
jge
push
mov
inc
adc
cmc
sbb
fcomp
gs
dec
ss
rcr
mov
add
inc
sbb
cwde
push
jne
adc
(bad)
or
xor
aad
push
outs
adc
sar
(bad)
lahf
cmps
push
xchg
xchg
div
cmps
mov
ret
mov
cli
or
jg
cwde
mov
add
jmp
pop
jp
mov
or
stc
test
push
stos
scas
(bad)
cmp
fwait
inc
xchg
add
sbb
push
push
xor
mov
lock
dec
in
mov
(bad)
xchg
jbe
loope
retf
test
lea
repz
arpl
shl
adc
inc
cmps
test
sub
pop
daa
or
xor
inc
test
and
xchg
retf
cmp
mov
dec
sub
ret
jl
(bad)
jne
dec
test
lods
inc
lahf
stc
scas
pop
xchg
adc
icebp
jnp
push
mov
xchg
imul
popa
sbb
mov
or
ins
repz
movs
push
mov
mov
fldenv
js
add
adc
loopne
xor
dec
adc
sti
idiv
hlt
and
inc
or
pop
repnz
inc
call
icebp
(bad)
sub
sbb
ja
mov
add
inc
in
jmp
movs
mov
mov
push
mov
dec
in
or
stos
add
test
stos
xor
imul
inc
or
int
sbb
sahf
cwde
push
push
(bad)
xchg
jno
(bad)
xchg
arpl
ds
pop
jnp
dec
in
fcom
ss
mov
rcr
jbe
cmp
ins
inc
and
popa
cmp
out
pushf
mov
clc
in
popf
dec
les
aaa
jecxz
cli
mov
inc
inc
mov
mov
movs
sub
movs
fcomip
mov
call
dec
and
sar
xor
mov
cwde
sub
lock
inc
aad
mov
xchg
aaa
push
div
sbb
mov
add
xor
adc
in
stc
add
ss
repz
dec
dec
iret
pop
imul
pop
rol
fs
call
(bad)
xchg
fst
js
jmp
mov
shl
jg
or
add
lahf
lods
std
jg
cmp
out
out
inc
(bad)
hlt
ficom
pop
adc
adc
sbb
mov
ret
addr16
xchg
add
jno
cmp
jo
mov
cwde
mov
xor
(bad)
out
dec
inc
dec
nop
sti
idiv
popa
cdq
pop
aaa
fnstcw
scas
adc
cwde
push
inc
gs
mov
into
inc
(bad)
sub
dec
je
(bad)
jne
movs
or
fwait
mov
pusha
(bad)
sqrtps
mov
pop
cdq
fild
mov
and
ds
and
js
jb
cmps
mov
icebp
lock
push
leave
jge
ins
sbb
rol
cmp
xchg
jmp
mov
ror
out
sti
add
and
pop
xchg
mov
cmp
mov
inc
repnz
ja
sbb
or
repnz
movs
push
fiadd
jb
pop
xor
fadd
mov
cld
mov
inc
sub
popf
rcr
dec
lahf
cmp
data16
daa
dec
mov
ret
imul
int
sub
imul
test
rcr
mov
retf
jb
sub
les
push
clc
or
fldenv
aaa
ret
(bad)
stc
es
inc
call
jo
test
mov
pop
dec
and
out
and
pop
jne
test
push
ins
scas
out
mov
sub
pop
xchg
pop
jns
dec
leave
xor
add
mov
sub
ret
add
nop
fcmovb
icebp
clc
jmp
inc
add
ins
mov
xchg
inc
mov
imul
ins
mov
lods
in
aaa
inc
int
lds
push
cli
sbb
and
mov
add
mov
cmps
es
out
dec
jnp
adc
pop
and
xchg
popa
loop
fidiv
cmp
and
out
adc
push
popf
shl
je
mov
mov
dec
outs
mov
inc
push
adc
dec
enter
stos
jg
stc
jbe
aad
pushf
(bad)
outs
push
pop
jmp
ret
mov
bound
cmp
ds
lea
adc
test
imul
mov
sbb
xchg
adc
data16
fcom
fs
mov
add
hlt
push
aad
mov
rol
sub
outs
jg
add
mov
int
(bad)
xlat
xchg
rol
inc
repz
(bad)
sbb
movs
jne
adc
xlat
adc
cmp
(bad)
dec
aam
inc
adc
add
fistp
mov
jo
test
mov
test
xchg
call
xor
pop
inc
imul
add
inc
mov
(bad)
xchg
adc
test
fbstp
mov
and
pop
call
popf
fs
sar
inc
cmps
ins
sbb
jb
test
jg
gs
gs
fld
mov
(bad)
adc
push
add
pop
loope
xchg
cmp
pop
aad
cmp
pop
imul
call
xor
cs
jne
dec
aaa
xchg
sahf
sub
cld
mov
inc
dec
ret
mov
pop
add
out
hlt
sbb
or
data16
aaa
jl
dec
mov
cld
push
or
in
adc
mov
ja
dec
ins
jae
lock
(bad)
repnz
rcl
or
jo
xor
dec
or
aad
pushf
ins
push
iret
xchg
pop
mov
jge
and
mov
push
(bad)
les
and
clc
pusha
add
pop
dec
jbe
ret
in
xchg
idiv
cmp
jg
movs
mov
repz
aas
mov
mov
xchg
shr
cmps
mov
sbb
adc
push
and
xor
jns
mov
xor
jne
cmp
jecxz
lock
and
pop
adc
xchg
pop
in
mov
xchg
dec
setp
adc
mov
inc
add
out
adc
inc
ret
xchg
ret
push
adc
cmp
push
push
shr
inc
push
out
mov
aaa
jno
jmp
inc
jnp
loope
adc
arpl
push
ret
std
idiv
retf
dec
clc
sti
add
mov
inc
retf
pop
mov
mov
int3
rcr
jecxz
test
test
mov
xor
dec
dec
std
inc
dec
cli
xchg
add
ret
xor
and
cmp
adc
add
push
into
js
jecxz
sub
gs
bound
sub
pop
dec
int
movs
shl
shl
jae
jno
adc
jmp
in
inc
jne
or
dec
adc
xchg
aam
or
mov
push
movs
and
jl
mov
and
shr
mov
bound
dec
lods
imul
(bad)
push
or
test
inc
xlat
(bad)
cmp
mov
push
pop
jge
fwait
stc
call
(bad)
ss
cs
xor
retf
sbb
xchg
xor
xlat
pop
iret
inc
mov
lods
movs
mov
dec
add
inc
outs
push
sbb
arpl
in
mov
push
ins
adc
fldcw
add
xor
xchg
or
sbb
xchg
and
adc
repnz
xlat
into
cmp
mov
jne
xchg
dec
test
sub
shr
push
(bad)
in
and
lahf
shr
adc
movs
mov
dec
inc
cmp
rcl
fs
xchg
popf
fcomp
pop
out
push
dec
adc
fcomi
mov
and
inc
hlt
pop
jnp
jae
call
call
test
and
loopne
not
test
ror
push
adc
or
xchg
add
hlt
(bad)
mov
cmp
jecxz
jmp
and
das
inc
iret
sahf
(bad)
loop
sub
add
call
inc
push
cs
cmp
dec
fwait
inc
ret
adc
lds
xchg
sub
cmovb
retf
(bad)
in
or
lea
test
mov
rep
das
push
dec
aam
popa
add
(bad)
fist
xlat
jb
and
(bad)
jo
cmp
in
out
or
dec
cmp
out
jb
mov
outs
mov
sbb
inc
xor
daa
inc
js
fistp
cmp
stc
dec
sti
mov
nop
xor
loopne
sysexit
xor
mov
outs
mov
jnp
jbe
loope
hlt
ja
aad
clc
jns
adc
dec
sub
mov
test
pop
mov
addr16
jns
ror
test
outs
lods
repz
sub
jo
fisttp
bound
test
sbb
xor
mov
ret
mov
test
mov
rol
push
pop
iret
xlat
nop
out
mov
neg
sahf
loopne
adc
mov
sub
fdivr
lea
xorps
and
pop
ds
loopne
xchg
add
sub
fwait
xchg
das
sub
fcom
hlt
fidiv
mov
add
cmp
mov
stos
mov
sub
lea
ds
or
(bad)
mov
test
cmp
mov
outs
pop
push
test
int
adc
ss
icebp
or
push
cmc
int
jecxz
stos
adc
in
mov
bound
jg
xor
(bad)
in
sbb
jb
xor
aam
sub
mov
(bad)
xchg
jmp
cmp
ds
mov
fistp
daa
or
jnp
pop
stos
xchg
jmp
xchg
adc
call
fsubr
xchg
xchg
and
ret
inc
or
in
cmp
leave
adc
dec
xchg
dec
out
mov
jbe
js
mov
gs
es
int3
imul
loop
mov
pusha
mov
repnz
jo
add
aad
or
add
fisttp
sbb
lea
adc
mov
fnsave
loope
outs
sbb
xor
fadd
jae
mov
mov
cli
int3
mov
sbb
shr
cmp
mov
push
inc
xchg
test
pop
nop
stc
inc
dec
fsubp
xchg
into
inc
in
ss
add
sbb
mov
test
add
stos
add
mov
test
in
cmp
cmp
jns
xchg
es
repz
lahf
test
mov
ret
mov
dec
fimul
xlat
add
and
rcr
nop
movs
mov
call
je
(bad)
outs
add
scas
mov
stos
or
ror
(bad)
mov
ror
dec
sbb
mov
add
pop
call
sub
cmc
loop
dec
mov
jae
sbb
out
cmp
outs
jmp
out
jmp
xor
lahf
pop
sub
pop
outs
retf
out
jge
rol
lods
jg
fldenv
aad
sti
pop
repnz
jmp
mov
mov
call
outs
mov
jmp
sub
push
cmps
repnz
or
sti
mov
xchg
and
dec
or
xchg
or
outs
shr
cwde
pushf
lods
mov
popa
pop
cld
nop
cwde
mov
cmp
(bad)
or
mov
push
aas
loope
outs
inc
(bad)
mov
inc
bnd
and
push
imul
dec
mov
add
pusha
sub
inc
adc
aas
and
push
jnp
mov
xchg
pusha
nop
fwait
call
jle
mov
push
stos
mov
dec
push
xlat
jg
out
icebp
push
jne
inc
mov
mov
fs
dec
adc
(bad)
mov
mov
xchg
ins
jbe
inc
jne
paddusw
(bad)
sahf
xor
xchg
push
inc
jo
mov
fs
not
xchg
jecxz
jb
xchg
and
cmp
mov
scas
imul
or
scas
mov
(bad)
adc
into
je
je
movs
push
adc
mov
and
dec
les
mov
call
push
inc
outs
xchg
sbb
sbb
(bad)
push
adc
inc
push
cli
data16
test
fsub
sti
in
add
sbb
scas
or
cli
ror
aas
mov
ret
jle
push
loope
out
pop
dec
cld
enter
iret
inc
sub
mov
jge
pop
adc
in
repnz
and
in
pop
xchg
jo
xchg
mov
repz
xor
jl
jb
pusha
retf
cdq
jmp
(bad)
pop
dec
addr16
fsubr
jl
out
movs
mov
dec
jbe
pop
inc
shl
and
sbb
loope
in
jmp
inc
xor
or
pop
stos
in
and
test
mov
jmp
iret
test
aad
lds
jo
jp
push
add
(bad)
mov
sahf
sbb
jno
rcl
sar
xchg
push
mov
movs
repnz
shr
fiadd
sub
add
pop
test
ins
bound
inc
and
les
xchg
xor
or
inc
outs
pop
mov
add
add
mov
jno
mov
push
or
test
cmp
mov
dec
or
jb
mov
lods
popf
mov
adc
dec
and
pop
cmp
cmp
push
in
sbb
fs
scas
arpl
sahf
xor
push
xchg
mov
js
and
add
mov
jp
scas
cmp
test
arpl
mov
shl
dec
clc
jb
into
jge
mov
call
sbb
lock
pop
cmp
daa
outs
push
xlat
fabs
jmp
dec
adc
mov
(bad)
pusha
inc
pop
pop
loop
test
xchg
or
mov
mov
out
repnz
cs
add
lods
xlat
arpl
test
xchg
pop
adc
lods
cmp
sbb
adc
leave
fwait
imul
cli
xor
cwde
or
(bad)
jl
jno
pop
mov
ins
mov
cdq
call
mov
or
push
and
cwde
mov
fbld
xchg
mov
pop
and
mov
xchg
push
mov
xor
inc
sub
xchg
out
stc
xor
mov
ret
sahf
clc
push
xchg
or
out
jnp
dec
cwde
pop
movhps
je
aaa
shr
dec
add
sub
xchg
cmp
not
xor
clc
jnp
into
or
shl
mov
jae
jbe
jne
fdiv
jae
xor
jp
inc
loopne
jp
push
mov
cmovo
mov
add
dec
mov
add
mov
fwait
dec
cmp
jne
sub
dec
sti
into
aad
push
(bad)
mov
fst
aad
jmp
fnstcw
or
fcomi
stc
test
(bad)
fisttp
fisttp
sbb
mov
jecxz
push
je
sub
loop
aam
add
adc
inc
stos
mov
sub
bound
lods
std
loop
test
jb
mov
pop
out
and
(bad)
sub
jb
cmp
add
jbe
fs
pop
add
(bad)
in
push
aam
loope
test
jae
pop
mov
sbb
outs
aas
mov
lea
adc
retf
enter
(bad)
mov
or
add
mov
jmp
jno
mov
push
repnz
mov
push
ror
js
sti
ror
and
jne
push
mov
dec
cmps
push
rcl
rcl
mov
cmp
int3
inc
ds
dec
xor
inc
inc
ret
mov
pop
repz
lock
push
scas
dec
mov
pop
adc
push
in
dec
enter
push
pusha
mov
cmp
cmps
adc
ins
ficomp
cmps
mov
movs
inc
dec
retf
fcom
shl
addr16
dec
dec
out
sbb
adc
dec
cs
cmp
mov
lock
xchg
adc
inc
es
and
lahf
ds
mov
aas
add
fs
and
scas
cmp
test
pop
lods
and
inc
jmp
jmp
arpl
jmp
(bad)
sub
je
aad
jbe
add
xchg
test
and
push
enter
and
adc
xor
mov
ds
outs
or
xchg
jl
lds
stc
lods
(bad)
shl
xlat
cmp
mov
pop
push
enter
push
gs
adc
pop
and
out
call
push
jns
and
push
pop
stos
cmp
movs
sbb
stos
lods
shr
mov
es
call
ret
push
aam
jo
(bad)
sub
ud0
test
mov
rcl
pushf
clc
nop
stc
(bad)
fcomip
scas
adc
push
cli
mov
push
pop
je
iret
popa
call
lock
adc
pop
cld
jmp
out
xor
stc
or
(bad)
shr
enter
jo
int3
aam
xor
lds
mov
xchg
pop
sub
push
lods
push
bound
retf
xor
dec
test
jmp
sub
(bad)
pop
in
fsub
test
(bad)
lock
sar
out
push
xchg
addr16
adc
push
scas
enter
es
push
jge
js
dec
dec
test
movs
fstp
cmp
dec
mov
(bad)
sahf
fisttp
add
pop
fcomp
or
mov
jl
sub
ds
mov
add
jae
push
loopne
lds
mov
fistp
loopne
call
mov
inc
dec
leave
dec
pop
mov
inc
out
pop
mov
ins
push
and
data16
ja
xchg
and
ja
inc
in
xor
xor
jne
ficom
mov
js
cld
cmp
xor
js
push
lahf
(bad)
lea
sub
pop
ins
arpl
jecxz
push
jle
and
xor
or
sbb
das
xlat
push
rcl
pop
outs
and
out
popa
cmp
jb
push
test
adc
jg
inc
push
je
pop
mov
fisttp
retf
iret
addr16
aaa
in
repnz
mov
fidiv
and
mov
div
and
iret
mov
add
mov
scas
mov
(bad)
mov
xlat
in
hlt
xchg
push
mov
sbb
(bad)
xor
repz
cmp
enter
pop
jl
ins
pop
xor
cmp
ins
or
shl
add
mov
cmp
fst
or
test
jo
mov
jo
(bad)
enter
lock
mov
jmp
cmp
fadd
or
cmp
jle
sub
inc
inc
mov
jl
jmp
inc
cmp
pop
stos
inc
push
inc
pop
movs
paddq
mov
xchg
inc
pop
mov
bound
leave
sbb
out
push
push
fcmovb
clc
and
das
jecxz
sbb
add
(bad)
sti
shl
adc
cmp
push
adc
in
xchg
fdivr
mov
je
and
dec
dec
mov
js
shl
jl
xchg
mov
sub
add
rol
xor
int3
pusha
mov
outs
or
es
cmp
inc
repz
pop
movs
push
sbb
repnz
ja
push
pop
add
jecxz
enter
loope
(bad)
cmp
mov
les
sub
jecxz
movs
daa
cld
push
out
(bad)
stos
sbb
jecxz
mov
xor
lea
stos
pop
cmc
jb
adc
xor
xchg
aad
and
rcl
es
adc
mov
fist
das
push
mov
jecxz
xor
mov
mov
push
xor
xchg
out
push
jne
das
sbb
ja
imul
es
in
inc
je
fistp
pusha
lds
lahf
fimul
cmp
loope
repz
cmp
shl
movs
stos
or
mov
sbb
xchg
in
mov
call
pusha
cld
sahf
and
(bad)
push
adc
je
outs
push
clc
loop
inc
xchg
sbb
jmp
adc
mov
js
fadd
sbb
ins
inc
out
jl
lea
out
mov
data16
push
pusha
mov
push
jnp
dec
inc
jnp
adc
cmp
cmp
inc
rol
ds
movs
in
dec
aam
jae
test
rol
or
mov
call
ins
xchg
xchg
pop
sysret
retf
neg
addr16
cmp
pop
enter
jb
dec
in
iret
cld
sbb
sub
inc
xchg
push
fcomp
push
int
push
inc
jo
add
mov
pop
js
into
movs
push
rcr
xor
and
and
jno
adc
adc
popa
data16
jnp
daa
test
inc
adc
mov
pop
fistp
inc
sbb
or
or
mov
push
out
ret
or
sbb
or
sub
mov
outs
cmp
xchg
pop
out
or
push
xor
in
test
(bad)
(bad)
push
jb
out
sub
call
sbb
jmp
movs
mov
out
inc
pop
icebp
popf
call
je
xor
mov
lods
push
movs
add
dec
pop
(bad)
in
call
sub
pop
ror
dec
add
gs
sahf
je
adc
mov
and
movs
or
xor
add
sahf
(bad)
in
mov
pusha
fisubr
push
lea
push
pop
xchg
dec
pop
cmps
push
adc
arpl
mov
dec
mov
or
out
inc
mov
mov
jmp
inc
lds
add
scas
fisttp
rcl
outs
ss
ja
scas
fadd
mov
div
mov
push
fadd
push
(bad)
push
sbb
and
jne
out
pop
out
jbe
xchg
in
or
cmp
sub
aad
es
cld
add
test
popa
rol
xchg
nop
inc
loop
sub
in
jmp
retf
sub
aad
sub
ja
psubusw
pop
repz
jmp
mov
aad
aad
or
jmp
dec
dec
mov
aaa
xchg
inc
mov
jns
test
dec
xor
jb
xchg
adc
xchg
pusha
(bad)
push
cli
sbb
jnp
add
mov
jbe
sti
mov
jmp
out
and
mov
push
repnz
mov
popa
or
sub
mov
push
clc
out
loopne
movs
icebp
xor
imul
pop
jns
add
or
lock
es
into
mov
pop
stc
fs
into
out
ins
dec
mov
sub
scas
sub
add
mov
inc
pop
cmp
test
sub
jl
mul
cmps
xor
xchg
xchg
jb
add
jo
sbb
ins
repz
sbb
add
call
dec
(bad)
mov
mov
mov
out
js
inc
(bad)
mov
or
cmps
or
pushf
lds
repz
sub
(bad)
jmp
out
inc
xchg
xchg
stos
and
pop
test
(bad)
das
imul
inc
xchg
pop
push
stos
mov
out
sub
jo
push
xchg
shl
sbb
jns
popa
daa
sbb
xchg
push
jp
cld
test
ins
int
xchg
push
lock
mov
or
fld
xchg
popf
aaa
mov
xchg
cmc
xchg
bound
sbb
loop
mov
cmp
call
or
aad
dec
or
fld
pop
mov
sbb
push
ss
and
sub
cmp
push
sti
pop
cs
retf
push
cld
mov
iret
sbb
movntq
out
das
sar
sbb
je
mov
aam
dec
inc
scas
jecxz
stc
jl
retf
cmp
dec
pop
dec
sbb
dec
jecxz
ret
(bad)
imul
mov
fidiv
jecxz
fidivr
adc
mov
ja
ss
int
xchg
and
fisub
loope
lea
sti
call
jge
(bad)
xor
mov
les
xchg
(bad)
inc
aam
retf
stos
dec
push
and
js
in
adc
aaa
mov
pop
and
pop
push
add
int
push
mov
xchg
xchg
or
pop
jmp
pop
not
mov
loope
jae
aam
pop
iret
fld
ss
(bad)
test
jp
cmp
out
xchg
ds
and
nop
lods
lahf
sub
xor
loopne
inc
pop
push
jmp
mov
or
push
test
(bad)
push
xor
js
sbb
loop
push
sahf
push
jge
jge
and
repz
fld
pop
inc
inc
das
push
arpl
jns
mov
loopne
pushf
icebp
pop
sbb
cmp
dec
cdq
mov
or
inc
scas
std
ja
idiv
push
addr16
push
out
rcl
int
call
sub
xchg
pop
dec
ret
and
gs
data16
scas
int3
sbb
xchg
iret
pop
mov
and
sbb
cmps
(bad)
aad
test
jmp
call
call
jl
inc
mov
push
std
dec
xor
cmps
movs
or
mov
popf
icebp
push
mov
inc
mov
cmp
lds
stos
call
push
cmps
or
arpl
jnp
sbb
dec
add
mov
aad
xchg
pusha
fs
ret
aas
(bad)
pop
mov
sbb
stc
jae
fadd
bswap
mov
mov
(bad)
dec
mov
pop
inc
shr
and
lods
jg
je
mov
lea
stos
jp
es
inc
pop
add
(bad)
xchg
pop
loopne
mov
call
sbb
and
push
mov
rcl
aaa
inc
push
sbb
dec
push
or
addr16
sbb
aaa
test
sub
les
mov
jmp
mov
and
pop
add
jecxz
xor
int3
cmc
inc
int
fimul
stos
cmps
cmp
fild
aad
test
jno
clc
mov
cmps
(bad)
gs
dec
cmps
stos
and
pop
push
mov
fcmovu
pop
push
jg
stos
ds
dec
mov
xacquire
pop
cs
test
enter
push
jge
int3
das
and
xchg
ss
xchg
and
inc
ret
jl
test
jp
out
lahf
popf
adc
sub
push
push
mov
popf
stc
aad
or
aad
and
push
push
out
mov
sahf
or
iret
mov
scas
adc
cmp
lods
int3
sbb
push
das
call
jl
push
add
nop
cmp
dec
ss
sbb
loopne
jl
into
pop
daa
or
xchg
xchg
pop
xor
jle
sbb
or
and
ja
call
scas
cmp
pusha
xor
ds
jno
test
test
jo
push
mov
cmp
cmc
xchg
xor
imul
xor
or
aaa
test
jmp
int3
(bad)
stos
das
jne
nop
clc
test
icebp
mov
fwait
dec
or
push
movs
pop
xchg
fnstenv
xrelease
sub
pop
and
mov
and
push
adc
lods
mov
ja
lods
or
dec
retf
mov
out
retf
test
cmp
mov
xor
stos
fistp
jp
xor
pop
sub
jo
jbe
test
dec
sbb
test
pop
pop
retf
xor
mov
cmc
cmp
and
adc
fadd
inc
mov
scas
lods
(bad)
jp
xchg
xchg
shl
repz
fld
test
shr
rcr
fcmovb
mov
dec
inc
mov
fld
sbb
shl
mov
sub
stos
dec
jl
int
sar
jmp
add
into
in
dec
cmp
fst
ss
mul
pusha
fst
mov
sub
xchg
ficomp
in
pop
cld
je
cmp
mov
ds
sbb
xchg
cmp
adc
pop
cmps
inc
sub
jg
pop
pop
xchg
cmp
test
retf
jp
or
int
sete
xlat
stos
inc
mov
stc
loop
mov
xchg
ja
pop
jo
or
sbb
jl
cmp
or
and
outs
add
dec
sbb
mov
aam
mov
shr
jne
nop
cwde
pop
xchg
xchg
jnp
jge
in
inc
push
fsubr
inc
jmp
cs
ret
push
inc
mov
dec
sbb
jge
sbb
icebp
pop
jmp
sub
sti
lock
shl
adc
jne
mov
(bad)
cmc
inc
lods
and
lods
inc
test
dec
xchg
outs
xor
add
mov
cmp
add
add
loop
push
jae
adc
sahf
popa
clc
jmp
in
sub
aaa
addr16
xlat
mov
std
or
sahf
icebp
and
xchg
mov
cmp
je
inc
pusha
ins
in
adc
dec
ins
into
cwde
cdq
cmps
fprem1
imul
ds
dec
test
and
mov
(bad)
or
mov
movq
outs
inc
(bad)
loope
push
sar
sti
popf
je
mov
push
sbb
and
push
fs
pop
xchg
dec
aad
xchg
xchg
xchg
pop
sbb
loope
xor
push
loopne
adc
xor
fdivp
leave
arpl
add
adc
sbb
pusha
je
dec
adc
(bad)
aam
adc
jecxz
clc
xchg
sub
adc
outs
int3
adc
cmp
jle
inc
mov
or
mov
pop
movs
fist
xchg
push
and
push
adc
ins
fwait
pushf
cmps
pop
sti
and
xchg
sub
mov
int
mov
mov
jmp
popa
stc
sti
scas
add
es
out
fadd
arpl
nop
fcomp
mov
mov
je
push
or
aad
bound
ins
mov
or
mov
sub
xor
cvtdq2ps
les
mov
div
repnz
xor
jl
adc
lods
pop
pop
inc
lds
aad
addr16
retf
(bad)
popf
add
add
inc
cwde
outs
sub
lods
mov
iret
ds
add
mov
pop
arpl
mov
mov
push
xchg
cmp
das
das
movs
ja
outs
mov
jb
(bad)
mov
lods
xor
lock
sahf
cmp
call
les
cmps
sahf
dec
scas
xchg
sbb
aam
add
(bad)
mov
pop
inc
les
or
mov
push
jbe
loopne
cmp
imul
test
dec
(bad)
pop
jae
push
cld
loope
mov
xor
add
jge
(bad)
aad
fcmovnbe
cmp
mov
xor
cmp
push
xor
sub
fcomp
cmps
adc
or
shl
ror
shl
push
pop
pop
ret
push
dec
dec
jecxz
ins
pushf
(bad)
inc
ret
call
add
cmc
push
adc
jbe
test
xor
push
call
scas
xchg
sbb
sti
dec
and
jp
out
mov
cmp
push
mov
fisubr
sbb
addr16
repnz
stc
push
dec
cld
call
sbb
out
(bad)
mov
push
ins
add
and
(bad)
push
jg
aas
jne
mov
push
pusha
(bad)
out
inc
cli
fimul
xor
les
int3
cmp
scas
ret
push
sbb
mov
or
push
clc
in
mov
es
shr
sub
pushf
shl
dec
imul
test
xor
push
clc
mov
mov
(bad)
pop
pop
adc
nop
or
cmps
sbb
pop
std
pop
add
(bad)
retf
xchg
sub
add
pop
jae
retf
inc
gs
mov
push
jge
stc
push
(bad)
pop
ret
sub
sahf
xchg
adc
sub
adc
out
jnp
sub
mov
pop
lock
adc
imul
sbb
mov
xchg
mov
jge
fild
sub
add
sub
push
mov
xlat
xchg
addr16
push
xor
xchg
je
out
enter
vpsravq
push
push
cmc
add
gs
pop
dec
fwait
add
pop
and
pop
fnstenv
mov
(bad)
mov
mov
or
outs
cmp
and
adc
xor
pop
or
pop
leave
push
mov
mov
aaa
pop
fsubr
dec
icebp
out
lahf
push
push
ss
xchg
in
cmp
shl
retf
test
aam
sub
out
movs
mov
repz
mov
cmc
imul
adc
sar
dec
sub
push
movs
mov
cs
inc
dec
je
cwde
popf
loopne
retf
mov
mov
push
fld
jno
or
loopne
stos
sbb
sub
xchg
push
xor
mov
xor
data16
sbb
jecxz
cmp
inc
and
scas
movs
xlat
out
push
or
mov
sbb
fnstenv
push
sbb
(bad)
enter
push
mov
das
mov
xchg
jecxz
add
movs
ficomp
cld
inc
mov
(bad)
in
inc
popa
and
and
mov
js
cmp
jmp
sbb
inc
and
lds
sbb
(bad)
adc
les
jl
rcl
iret
sbb
loopne
ins
lock
pop
pop
pop
fisub
jmp
pop
push
push
pop
test
xchg
cmps
xor
xor
inc
leave
in
push
repnz
xchg
jle
mov
je
sbb
fxch
movs
out
fmulp
jecxz
adc
cdq
fwait
imul
push
or
mul
push
dec
repnz
lahf
shr
mov
mov
ret
popa
lahf
popa
dec
daa
je
sar
movs
imul
mov
cmp
push
rcl
mov
mov
fcomi
sub
sub
ret
pop
push
into
aaa
xchg
and
mov
inc
scas
retf
push
dec
dec
xchg
loopne
or
mov
jno
mov
daa
cmp
lds
dec
imul
push
xchg
fwait
or
call
pop
cmp
bound
mov
mov
rcr
(bad)
rcl
mov
dec
shr
popa
and
sbb
lods
push
ret
mov
jno
pop
sub
retf
jo
mov
inc
shl
std
mov
sbb
(bad)
bound
jmp
and
sub
jmp
mov
push
mov
mov
jne
xor
in
sub
es
mov
rcl
gs
std
repz
xchg
mov
outs
pop
push
dec
sbb
pop
sub
in
mov
dec
arpl
ja
fiadd
loopne
mov
repnz
ds
inc
sub
sub
retf
js
aad
lea
int
movaps
inc
push
sbb
icebp
aaa
cmc
ffree
stos
es
cmp
inc
popf
lods
cli
add
mov
or
sbb
mov
rsqrtps
pop
(bad)
leave
push
(bad)
loop
adc
jl
icebp
outs
or
(bad)
std
popf
mov
stc
clc
lods
sti
add
inc
xor
jbe
(bad)
aaa
sbb
or
(bad)
cs
aad
stos
sub
pop
stos
in
sbb
pop
mov
dec
jp
lock
imul
dec
add
dec
data16
in
push
div
xor
jecxz
mov
loopne
into
pop
inc
in
fild
stos
jecxz
out
sti
jle
xor
jecxz
daa
call
jmp
or
inc
test
test
loope
gs
jb
mov
mov
leave
shr
and
mov
sub
jg
inc
lahf
lods
jle
jbe
pop
gs
ins
dec
sub
mov
push
shr
push
mul
test
inc
dec
add
ret
mov
outs
rcr
out
jge
inc
into
xchg
sub
push
data16
popf
or
(bad)
cmp
add
lock
mov
or
pop
mov
jns
mov
in
push
add
pop
push
fmul
mov
cmp
dec
sbb
lock
sub
mov
and
push
repz
push
sub
cmp
fmul
or
inc
mov
push
frstor
imul
push
sub
jge
add
out
and
xchg
cmps
xchg
xchg
sub
cmp
repnz
fs
mov
mov
pop
cmp
loop
shl
sub
ins
jge
cmp
sqrtps
cvtdq2ps
ret
mov
cs
sbb
mov
xor
mov
fstp
pushf
sahf
push
sbb
call
push
out
push
and
stos
push
and
cmp
inc
push
mov
frstor
(bad)
mov
or
adc
inc
xor
mov
pop
loop
and
cmc
cmp
fsub
cmc
pop
sbb
mov
(bad)
jb
inc
fstp
rcl
aad
repnz
jecxz
push
dec
xchg
mov
add
pop
ret
enter
hlt
ds
push
push
sub
repz
fwait
(bad)
aam
lock
xor
cli
pusha
sbb
dec
mov
shr
cld
add
pop
idiv
nop
mov
adc
jb
push
mov
repnz
rol
xchg
push
test
xor
repz
aad
cs
mov
adc
mov
imul
movs
les
mov
inc
nop
dec
push
movs
add
stc
sbb
inc
inc
ja
jnp
mov
adc
mov
adc
jo
popf
add
mov
pop
outs
sub
add
div
xor
iret
(bad)
ds
je
xchg
xchg
push
or
pop
fchs
loopne
sbb
pusha
mov
jns
inc
push
mov
xor
into
xor
aas
pusha
and
and
call
mov
ja
mov
imul
ins
pusha
xchg
pop
out
lock
iret
test
pop
sbb
dec
mov
sub
and
out
sahf
loope
pop
dec
or
add
bound
push
jmp
or
out
or
rcr
leave
lods
int
cwde
div
dec
js
mov
aad
gs
cmp
jmp
inc
push
js
pop
retf
mov
cwde
xchg
sub
je
sti
push
test
out
popa
retf
jno
gs
mov
(bad)
jb
push
rcl
mov
mov
test
aam
into
retf
test
popf
jp
pop
daa
cmp
lock
ins
outs
xchg
and
add
mov
dec
aad
cmp
and
jo
xchg
fs
sub
scas
xor
or
and
icebp
xchg
xchg
inc
retf
sub
imul
mov
popf
shr
jno
rol
cmp
adc
(bad)
mov
ins
jnp
into
cmp
dec
sti
ret
repz
cmp
jl
daa
(bad)
mov
ja
imul
(bad)
cmp
retf
aas
push
gs
mov
test
sub
add
lods
mov
call
jmp
pop
cmp
cmp
ja
ffreep
sbb
and
mov
xchg
ins
pop
test
mov
clc
retf
sbb
idiv
mov
pop
pop
shl
std
int3
xchg
test
pop
pop
call
mov
imul
mov
jl
xor
lahf
ficomp
mov
or
dec
pushf
repnz
mov
out
outs
cld
cmp
mov
jecxz
arpl
push
push
mov
push
cli
nop
jle
(bad)
fwait
int
pop
loop
movs
mov
xchg
dec
xor
std
cwde
js
mov
pop
add
xor
in
jmp
data16
dec
jp
in
sbb
call
inc
inc
ret
xor
fstp
mov
jecxz
in
in
gs
ret
xchg
fadd
mov
movs
add
or
jle
in
push
imul
mov
rcr
adc
rol
push
xor
add
jne
retf
mov
or
div
fimul
sar
mov
call
adc
mov
inc
mov
adc
mov
xchg
jnp
inc
(bad)
aad
jo
jnp
fisttp
test
push
jno
lea
sub
int
movs
std
or
stos
adc
ror
lods
or
sbb
fdivr
mov
push
cmp
js
or
mov
repnz
(bad)
xlat
push
lock
cmp
mov
pusha
scas
ret
es
loope
movs
js
adc
aaa
fnsave
pop
pusha
mov
adc
sub
and
mov
cmp
call
adc
jmp
inc
add
retf
inc
inc
in
and
iret
dec
pop
push
jns
and
fwait
push
push
inc
add
(bad)
sub
push
fld
or
test
push
retf
pop
pop
int3
mov
mul
adc
mov
mov
dec
mov
(bad)
mov
sub
out
ror
mov
cmp
(bad)
fcomp
retf
test
adc
movs
jo
sar
retf
pushf
dec
data16
fnstsw
mov
icebp
outs
arpl
aaa
lds
mov
out
or
je
aam
loope
int3
sbb
shr
add
js
or
pop
arpl
or
xchg
or
in
mov
(bad)
jae
pop
addr16
xor
loopne
xchg
add
call
je
mov
add
cmp
jmp
lock
dec
fst
mov
pop
in
test
icebp
and
stos
push
or
jp
mov
jb
es
inc
sar
outs
lods
cmp
xchg
sub
into
xchg
push
rcr
inc
add
mov
nop
cmp
(bad)
sbb
or
xor
inc
dec
sbb
inc
clc
test
movs
or
sbb
xor
hlt
je
adc
imul
mov
xchg
push
mov
mov
out
rol
mov
lahf
mov
(bad)
div
es
mov
test
add
add
jae
xchg
je
dec
(bad)
loopne
fwait
inc
inc
mov
push
or
std
sbb
and
xor
sbb
mov
lock
gs
ja
pop
add
in
mov
fcmovbe
cli
repz
(bad)
mov
add
mov
popf
iret
repnz
or
push
fisttp
sub
loop
aaa
cmp
fmul
mov
sti
mov
not
retf
dec
movsx
movs
ror
int3
icebp
add
mov
sbb
dec
sbb
push
mov
cdq
aaa
movs
pop
pop
dec
mov
and
jl
in
dec
rcr
fadd
pop
imul
and
or
leave
shl
xlat
jnp
inc
sub
(bad)
xor
and
int3
and
stos
mov
call
push
add
loope
lds
add
loopne
xor
push
pop
mov
rcl
xor
in
lods
xor
push
jmp
push
outs
push
sar
popa
out
call
ret
dec
push
popf
retf
movs
stc
jne
jmp
jmp
(bad)
cdq
jno
xchg
repz
mov
js
pop
inc
in
pop
fnstsw
mov
cmps
xchg
or
ret
mov
test
mov
cdq
in
fadd
scas
mul
out
addr16
mov
push
es
ret
test
add
mov
pusha
dec
mov
mov
add
push
or
pop
add
add
dec
xchg
int3
(bad)
jmp
jbe
inc
int
sar
pusha
dec
pop
(bad)
int3
lock
cmp
ss
out
inc
in
leave
pop
(bad)
mov
dec
movs
mov
mov
mov
mov
push
mov
jno
push
mov
ret
add
sbb
ins
nop
lods
push
dec
xor
add
push
ins
pop
sti
cmc
add
mov
push
sar
out
idiv
cmp
daa
or
out
ret
loope
jo
mov
dec
cmp
les
jmp
xor
popa
les
(bad)
mov
sbb
xchg
call
push
or
dec
push
mov
adc
in
inc
fsub
clc
push
addr16
ret
pushf
xlat
xor
mov
inc
pushf
lea
out
dec
cmps
in
fild
scas
xchg
test
ss
xchg
cwde
push
jge
test
ret
cwde
sbb
pop
pop
jns
jmp
cdq
mov
or
lock
inc
leave
adc
test
int3
ret
pop
cmps
fisub
mov
and
pop
retf
leave
jecxz
mov
sbb
add
sti
retf
mov
xchg
ds
fwait
xchg
mov
js
(bad)
xor
repz
mov
ror
adc
pop
sahf
or
test
mov
adc
js
je
gs
pusha
mov
pop
sbb
pop
outs
imul
mov
inc
(bad)
jb
in
movs
loop
mov
out
hlt
pop
aad
jne
inc
jge
add
hlt
jne
adc
(bad)
das
rol
sti
pop
cli
add
push
stos
jbe
dec
outs
jb
fstp
in
jge
pop
xor
(bad)
mov
cmc
lock
pop
mov
in
iret
sub
into
test
jbe
dec
int3
ja
mov
mov
and
mov
add
shr
cmps
jmp
dec
cld
or
fs
mov
rcl
jg
rcr
in
ds
jnp
mov
gs
fistp
push
pop
inc
inc
inc
mov
dec
and
(bad)
mov
retf
push
shl
iret
in
lahf
xor
add
fsub
movs
(bad)
xchg
out
imul
mov
and
ds
es
gs
(bad)
repnz
pop
aad
aam
xchg
xor
push
xchg
sbb
adc
(bad)
out
cld
mov
sar
repnz
sub
mov
fucomi
jg
cwde
js
inc
and
je
jbe
fstp
cmp
mov
into
sub
and
inc
dec
icebp
cli
loope
add
rcl
or
std
ret
pop
(bad)
pop
or
not
mov
inc
jecxz
cmp
movs
cmps
into
inc
mov
jae
xchg
aaa
push
out
test
mov
iret
repnz
and
mov
push
sahf
aas
in
fclex
mov
pop
sbb
arpl
dec
mov
cmp
or
bound
cmp
dec
lock
mov
add
shr
and
inc
push
dec
jb
jge
sbb
or
pop
cwde
cmps
mov
stos
test
aam
add
icebp
dec
sbb
test
sub
aad
sub
jl
out
xor
push
xchg
dec
aam
test
xchg
xor
cld
scas
pop
push
pop
inc
mov
cdq
pop
loope
scas
repz
js
stc
loop
hlt
pop
mov
adc
(bad)
mov
jns
mov
add
ret
mov
arpl
or
movs
sub
mov
addps
dec
outs
(bad)
popf
inc
loopne
sub
jae
sbb
cdq
ss
movs
xchg
mov
addr16
ds
clc
jmp
xchg
jmp
ret
loopne
out
mov
inc
adc
movs
lods
cmp
push
fwait
out
outs
inc
daa
add
jl
int3
xor
adc
pop
cmp
and
lods
pop
movs
cli
xchg
fst
jae
mov
cmp
cmp
inc
mov
rcr
pop
(bad)
jb
icebp
sbb
mov
inc
and
or
mov
in
add
les
sbb
push
inc
mov
out
and
repnz
add
dec
lods
sub
(bad)
cmps
(bad)
jl
xchg
test
pushf
clc
and
popa
mov
hlt
mul
daa
ja
cdq
mov
add
and
imul
sar
add
cdq
and
fisub
sub
fimul
iret
mov
aaa
test
pusha
and
loope
scas
scas
mov
jg
punpckldq
arpl
sbb
or
inc
loope
push
stos
cmp
mov
xor
ret
jmp
mov
(bad)
push
out
add
pop
fcomp
inc
test
mov
scas
push
adc
fcmovbe
test
outs
es
gs
dec
or
stos
lods
rol
dec
jge
jae
fsub
push
mov
mov
push
adc
scas
loopne
pop
mov
fstp
cmp
mov
rcr
dec
adc
jg
int
je
scas
cld
mov
xchg
sbb
hlt
mov
jne
mov
rol
sbb
shl
inc
cmp
jle
pop
add
inc
inc
adc
icebp
jge
retf
cwde
ja
pop
leave
mov
dec
adc
push
push
retf
sub
sbb
mov
pop
mov
dec
movs
sti
rcl
out
icebp
movs
dec
xlat
jle
ret
or
cld
add
mov
clc
pop
addr16
stos
aas
scas
sub
cmps
add
jnp
pop
cmp
fimul
push
mov
leave
mov
and
shl
mov
das
stos
sub
dec
xchg
lock
dec
jge
xchg
mov
cmps
push
mov
push
fsub
mov
outs
or
dec
mov
repz
and
push
in
add
ss
xlat
leave
push
test
pusha
out
(bad)
data16
mov
cwde
jb
jnp
jmp
pop
dec
adc
movs
adc
lahf
sar
lock
inc
stos
inc
add
jecxz
sub
jg
sar
adc
xlat
add
jp
lock
xlat
leave
xchg
ds
outs
jmp
sbb
test
mov
push
fcomp
or
rcr
dec
add
js
add
sbb
test
pop
retf
sub
cs
xchg
sbb
loope
(bad)
iret
jbe
ss
out
pop
aam
mov
stos
stos
stos
mov
pusha
dec
fld
scas
inc
sub
rcl
cmps
icebp
mov
adc
(bad)
cmp
and
daa
sahf
cmp
xchg
je
sbb
mov
or
jne
fs
pop
pop
mov
call
repz
mov
aaa
rol
inc
mov
es
pop
data16
out
mov
outs
sub
adc
scas
inc
cwde
icebp
or
cmc
sbb
sbb
adc
in
mov
retf
and
dec
mov
inc
add
in
rcl
test
(bad)
(bad)
adc
inc
clc
add
or
cdq
dec
popa
cmps
repnz
push
repnz
dec
ret
je
mov
ins
rol
pop
jnp
int
sub
push
jl
jnp
in
(bad)
mov
cmc
lahf
jno
call
call
push
pop
jecxz
(bad)
cli
sbb
pop
cli
setge
in
xor
sti
xor
cmp
xchg
push
or
inc
into
xor
(bad)
aas
push
jl
push
(bad)
xor
pop
lods
and
or
iret
pop
ja
sahf
and
mov
aad
js
pop
pop
in
rol
add
sub
inc
xor
inc
cmps
(bad)
or
arpl
dec
in
(bad)
aaa
jb
in
ret
dec
jg
cmp
pop
lea
sub
mov
xor
or
and
scas
imul
je
mov
and
xchg
mov
sbb
scas
push
aas
out
sbb
sbb
mov
ss
cmp
in
das
jno
iret
mov
out
cmp
ins
xchg
push
push
je
nop
push
sbb
push
mov
xor
(bad)
and
movs
push
pushf
and
pop
ja
int
shl
adc
mov
into
sbb
fisub
test
jae
jae
sub
je
stos
mov
pop
(bad)
(bad)
sub
sub
mov
jae
into
pop
jnp
adc
(bad)
push
mov
inc
sub
push
jne
and
pop
scas
push
push
push
inc
test
cmp
(bad)
idiv
imul
cmps
push
call
mov
cmp
push
sbb
arpl
rcl
mul
cmp
call
js
push
hlt
adc
xchg
and
icebp
sub
mov
cmp
jae
sub
mov
aam
cmp
add
lea
add
xchg
mov
sub
sub
fbld
gs
jmp
icebp
add
test
pusha
dec
add
dec
gs
cmps
adc
jle
gs
push
adc
in
retf
std
clc
(bad)
dec
aas
data16
jne
test
xchg
mov
outs
cmps
pop
pop
test
sub
adc
retf
popa
fisub
lods
sar
test
pop
push
(bad)
and
or
sbb
test
rcl
push
pop
outs
or
lods
and
or
loopne
cld
cmp
adc
mov
pushf
es
cmp
or
push
mov
lahf
xchg
push
das
xchg
das
clc
leave
sbb
push
outs
fistp
mov
jmp
mov
inc
aad
adc
sub
iret
popf
mov
addr16
add
das
jmp
xor
retf
fimul
test
iret
inc
and
jecxz
aam
retf
js
aam
xchg
xor
mov
sbb
jl
add
push
daa
add
cmps
stos
sbb
aaa
sahf
out
imul
mov
leave
sbb
jmp
or
mov
mov
repz
cmp
dec
xor
push
inc
mov
mov
pop
dec
pop
mov
lahf
std
int3
push
mov
popa
scas
xor
out
lahf
sahf
shl
stos
out
outs
push
pop
dec
inc
pop
loope
xor
push
pop
js
movs
aam
jae
test
mov
push
or
ins
xchg
out
imul
bound
fs
inc
dec
and
popa
inc
xor
jno
mov
sbb
aas
pop
rol
push
xchg
shr
shl
sar
(bad)
pop
sbb
cmps
ss
out
fs
inc
clc
inc
movs
in
mov
pop
rol
inc
fnstcw
jp
push
or
pop
xor
jbe
lahf
sbb
xlat
ins
push
std
xor
xor
mov
nop
cmp
and
pop
inc
jno
push
xchg
sub
add
ficomp
pop
inc
adc
xchg
jns
adc
or
popf
mov
(bad)
int3
ins
test
sub
sbb
push
(bad)
push
fadd
mov
jge
js
fsub
cwde
dec
push
xchg
lods
sub
les
push
adc
fdiv
ror
cld
and
sbb
arpl
int
jg
pop
outs
stos
xchg
push
icebp
inc
xor
push
fdiv
push
daa
xchg
jp
std
inc
aaa
(bad)
pop
pop
xor
push
mov
stos
int
out
sbb
push
arpl
stos
jmp
ret
mov
mov
pushf
xchg
pusha
fld
sahf
or
retf
icebp
xor
(bad)
shl
mov
icebp
mov
scas
inc
aas
inc
push
push
add
mov
jnp
sub
enter
fwait
dec
bnd
das
mov
iret
and
mov
fs
int
inc
scas
xchg
adc
pop
pop
dec
in
lahf
sbb
or
sub
sbb
iret
data16
sub
test
mov
ins
and
lahf
push
cmp
addr16
push
mov
add
dec
les
pop
add
cmp
data16
jmp
and
outs
sbb
sub
pop
jns
mov
push
or
cmp
loope
je
xor
(bad)
je
mov
mov
mov
pop
aaa
ins
ret
mov
jge
xchg
jne
mov
out
nop
fwait
outs
xchg
iret
das
xchg
cmp
pop
cmps
pop
jae
xchg
mov
push
mov
or
lds
pop
xchg
mov
pop
nop
dec
mov
dec
jmp
icebp
dec
mov
(bad)
xor
in
xchg
jl
fcomp
xor
jg
cmp
mov
jmp
(bad)
retf
lods
xor
inc
ins
pop
and
daa
adc
dec
xchg
pushf
cmp
cmp
daa
mov
mov
xor
push
fisttp
shl
lods
mov
push
inc
das
lahf
lods
ret
stc
jg
sbb
xor
push
push
lods
nop
xchg
(bad)
out
pusha
pushf
fcomip
mov
enter
inc
add
je
(bad)
stc
xchg
sub
(bad)
scas
into
mov
sub
mov
adc
popa
pop
xchg
inc
mov
adc
repnz
jge
or
inc
ds
cli
mov
mul
add
pop
add
sub
ret
xor
mov
enter
inc
push
pop
adc
mov
ret
aam
popa
stc
arpl
xor
out
add
mov
ja
call
retf
sahf
adc
mov
mov
mov
fdivr
pusha
sbb
sbb
xchg
mov
sub
xor
into
mov
cmp
(bad)
fnsave
(bad)
addr16
shl
jo
cmp
into
in
mov
(bad)
sub
push
xchg
xor
popa
retf
ret
xor
sbb
daa
cld
dec
xor
pop
mov
rcr
(bad)
mov
jne
xor
icebp
retf
(bad)
sti
lahf
(bad)
(bad)
pushf
(bad)
call
cmp
(bad)
xchg
ret
push
fistp
inc
mov
or
jg
sbb
ins
inc
aam
sub
stc
and
rcr
adc
add
mov
aaa
cwde
mov
push
adc
pusha
fbstp
enter
inc
xchg
add
(bad)
fyl2x
(bad)
dec
sbb
dec
inc
sbb
cmp
and
lds
or
es
xlat
mov
add
pop
mov
and
imul
push
addr16
push
ss
aas
mov
xchg
sub
jb
sbb
fbld
dec
(bad)
xor
jae
add
cmp
sar
repz
and
clc
fwait
xchg
add
popf
mov
int3
and
push
or
jg
jns
call
movs
stc
fisttp
add
push
dec
cmp
fld
xor
and
adc
outs
fcmovb
dec
add
sub
movs
xchg
and
jg
jmp
inc
mov
xchg
inc
sar
es
mov
inc
cli
fidiv
retf
mov
adc
(bad)
fimul
xchg
mov
mov
cmc
mov
(bad)
outs
clc
push
pop
loopne
jle
xor
inc
sbb
add
fst
jnp
out
mov
or
lds
ins
cmps
pushf
into
pop
adc
test
outs
mov
jo
push
mov
sbb
dec
xchg
mov
adc
inc
dec
sub
out
push
cwde
sub
rol
fcomp
dec
into
inc
and
push
pop
xchg
fldenv
push
push
adc
pop
xchg
fs
lock
(bad)
call
bound
and
rcl
inc
push
jg
js
in
and
in
xchg
jns
inc
in
xchg
jge
push
imul
fsubrp
rcl
js
int3
ss
scas
sti
pusha
outs
ja
movs
rol
ficom
jl
mov
dec
sub
dec
fiadd
int
sbb
hlt
das
xlat
repnz
nop
(bad)
pop
mov
sar
or
sbb
jnp
push
rcr
std
ds
cmps
xor
lea
fld
dec
jmp
push
data16
pop
int3
or
pushf
out
in
sbb
ds
xor
xchg
push
and
xchg
ror
fidiv
fucom
lds
movs
js
push
inc
add
fiadd
mov
(bad)
dec
in
add
jp
fistp
and
push
mov
push
dec
loop
mov
jecxz
aad
jg
sti
xchg
rcl
inc
mov
xchg
fmul
daa
jmp
ror
dec
jbe
push
sub
jle
mov
xor
cmp
fidiv
mov
(bad)
inc
cs
fmul
test
dec
out
scas
dec
aam
(bad)
out
mov
jne
or
aam
stos
test
cmc
rcl
stos
dec
cmp
mov
push
lock
mov
push
add
adc
and
or
add
imul
call
in
stos
xor
push
jno
mov
pop
int
fmul
hlt
or
fiadd
inc
rcr
xchg
aas
stc
mov
fs
jae
and
fst
jnp
add
push
xor
pop
iret
mov
jecxz
jmp
(bad)
fmul
or
mov
inc
(bad)
sti
sub
and
push
adc
aaa
push
push
dec
jbe
pop
dec
jb
inc
icebp
ret
in
xchg
sub
mov
mov
add
xchg
out
fs
fisttp
ds
xor
repnz
ja
fbld
cmp
cdq
ret
and
xor
loop
out
mov
mov
es
mov
dec
and
fdivr
mov
test
xchg
scas
pop
ds
pusha
xchg
imul
out
xor
ficom
aad
fild
pop
jne
add
jbe
add
xchg
out
popa
sub
das
cli
sbb
in
sub
inc
sbb
dec
test
push
cli
xor
aaa
(bad)
fiadd
push
femms
push
stos
adc
imul
inc
ins
js
out
lock
fidivr
sbb
mov
bnd
pop
aam
popf
(bad)
mov
lock
(bad)
sti
jecxz
(bad)
int3
jp
fidivr
push
cmp
push
push
popf
inc
xor
jae
dec
adc
(bad)
or
cld
mov
retf
dec
dec
mov
push
mov
xchg
mov
mov
cli
cmc
rcr
sub
jae
retf
xor
mov
ins
aad
fimul
jne
test
js
pusha
inc
fist
cmps
push
add
cmc
mov
mov
push
ins
ins
outs
call
test
ja
test
xor
cmp
push
cmp
cwde
or
mov
inc
test
outs
sub
add
rcr
popa
int
xchg
xlat
mov
lahf
out
and
pop
xor
loop
or
cmp
jl
aam
mov
dec
leave
mov
iret
pop
stos
xchg
jmp
stos
sbb
ins
push
hlt
adc
pop
adc
xor
ret
shl
fistp
gs
adc
lods
cmp
jl
cwde
add
and
jmp
(bad)
jb
mov
cmp
sub
not
repz
les
add
sbb
shl
repz
sub
repnz
bound
fisub
test
scas
dec
pop
xor
dec
mov
cmp
jno
inc
cld
and
cmp
aam
mov
out
cmp
add
in
jae
cmp
dec
fs
inc
cmp
sub
int
jmp
and
pop
pop
pop
jae
mov
cmp
xchg
fucomp
inc
jmp
in
or
icebp
pop
sub
mov
scas
cmp
mov
sub
adc
les
jne
push
mov
push
jle
adc
or
xor
(bad)
and
(bad)
and
push
pop
outs
adc
xor
iret
fidiv
lahf
test
cmc
cmp
shr
inc
aas
jge
xchg
std
cmps
loop
in
inc
sbb
les
sub
pop
pop
push
lea
idiv
ins
pop
and
add
loop
sub
sbb
aam
jo
stc
mov
or
aaa
test
aam
pop
fild
retf
loopne
or
mov
out
daa
pop
daa
lock
or
fistp
out
js
and
fmul
and
or
ins
jp
cdq
or
ss
jnp
push
xor
sub
out
or
nop
mov
lea
inc
jp
pop
push
xor
jno
adc
jnp
(bad)
retf
cmc
add
push
or
repnz
cmp
test
sub
dec
mov
popa
jg
(bad)
aaa
ins
es
div
(bad)
push
and
in
pop
jnp
(bad)
aaa
test
outs
icebp
repnz
arpl
add
jle
cmps
mov
xchg
outs
pop
icebp
fnstenv
(bad)
push
jb
pop
push
xor
push
lea
pop
add
jg
inc
cmps
mov
mov
pop
sub
mov
mov
mov
or
pusha
fstp
push
repz
and
sub
and
add
lahf
xchg
jmp
push
fldln2
or
(bad)
mov
or
xlat
sub
jp
fimul
adc
adc
push
jp
sbb
xor
xlat
inc
rcl
sub
pop
fimul
inc
das
cmp
add
jns
retf
mov
sub
in
push
sahf
movs
fnstsw
lock
(bad)
jmp
jne
sub
(bad)
push
das
mov
les
sbb
pop
lea
dec
mov
(bad)
mov
pop
aaa
mov
sti
and
shl
mov
and
iret
inc
and
ret
fbld
mov
test
push
push
pushf
movs
mov
mov
mov
jmp
arpl
pop
ja
je
ror
ins
out
stos
mov
neg
push
sub
add
mov
sub
mov
push
push
jg
sbb
mov
imul
xor
fmul
mov
jnp
dec
into
dec
pop
(bad)
in
sub
jns
mov
inc
adc
push
pop
(bad)
adc
add
(bad)
sbb
out
cli
jg
repz
mov
mov
jp
sbb
mov
cmp
int
dec
setbe
dec
sub
(bad)
lods
lahf
iret
xor
add
inc
fdiv
jb
xchg
mov
inc
mov
sub
push
push
(bad)
shl
es
jmp
push
arpl
mov
cdq
add
pop
stos
in
adc
outs
movs
rcr
xor
xor
pop
adc
leave
or
push
adc
ret
push
sbb
mov
fnsave
into
add
pop
fwait
mov
hlt
mov
mov
pop
call
data16
push
std
lock
jge
call
movs
out
rcl
inc
pop
and
pop
cmp
inc
hlt
gs
pop
test
mov
jns
mov
fstp
dec
retf
mov
iret
or
sub
mov
mov
mov
(bad)
jl
pop
mov
out
xchg
test
or
call
nop
jnp
inc
sbb
loopne
jo
xchg
dec
neg
sub
loopne
daa
mov
mov
stos
push
dec
xchg
add
xlat
push
jmp
mov
cmp
mov
fld
fwait
pop
dec
neg
cmps
lods
sub
jl
(bad)
push
into
(bad)
jmp
js
mov
mov
movs
sahf
cld
hlt
push
lods
ja
adc
retf
mov
test
popf
es
cdq
test
adc
test
js
fnsave
add
outs
out
mov
pop
pop
adc
dec
test
mov
dec
daa
jg
cwde
jne
les
fisubr
pushf
pop
mov
dec
mov
imul
jmp
ret
sub
push
inc
dec
pop
das
repz
adc
sar
sbb
in
das
xchg
das
stos
ds
sahf
or
lahf
pop
rol
pop
hlt
adc
mov
cmp
retf
retf
sbb
dec
cmp
mov
add
add
aas
jmp
hlt
push
in
jp
xor
sti
hlt
ins
(bad)
xchg
or
cmc
dec
mov
adc
ret
xchg
(bad)
xor
jnp
rcl
rcr
rcr
ins
xlat
call
and
mov
stos
pop
push
(bad)
mov
out
pop
cmp
jne
dec
repnz
loopne
push
daa
add
cld
and
out
movs
dec
aas
xchg
dec
outs
(bad)
xchg
gs
jns
adc
stos
cli
ja
jbe
mov
aaa
stc
pop
sbb
out
and
(bad)
movs
sbb
inc
fidivr
dec
je
scas
minps
cmp
cmps
pop
inc
jns
out
jmp
xlat
adc
and
fisub
mov
jg
sbb
mov
mov
js
daa
sub
(bad)
js
mov
add
stos
or
sub
xchg
ret
mov
inc
lods
addr16
dec
mov
adc
test
mov
mov
cmp
loop
outs
js
cmp
cld
jg
fcmovnu
std
sahf
les
lods
sub
ret
gs
mov
mov
xchg
mov
aas
addr16
push
lock
mov
stos
add
push
push
retf
out
cdq
sbb
leave
jmp
inc
add
mov
xchg
and
mov
inc
retf
add
loopne
stos
cdq
mov
lds
fucomi
mov
sub
(bad)
mov
pusha
jne
push
dec
jge
aam
dec
fsub
mov
lds
out
push
repnz
push
repz
cmp
in
mov
jle
cmps
xlat
nop
into
cmps
xor
mov
jbe
jbe
push
jmp
out
push
jmp
mov
shr
rcl
push
sbb
cmp
mov
xor
ffree
icebp
xor
mov
mov
cli
retf
out
cli
int
mov
cmp
scas
out
dec
out
fdivr
stc
cmp
cmp
lds
loopne
and
push
adc
xor
out
sub
jge
leave
xchg
fmul
out
mov
push
lds
pop
push
inc
dec
icebp
cmp
mov
add
sbb
push
hlt
sub
mov
and
dec
data16
xchg
xor
es
add
fdiv
fcmovnb
lds
test
mov
bound
pop
jb
jecxz
loop
mov
and
outs
xor
out
dec
sbb
out
sbb
xchg
loop
fcom
test
xor
or
cmps
adc
loop
(bad)
sub
(bad)
adc
sbb
rcr
loope
dec
adc
enter
xchg
mov
int
adc
and
jl
lock
add
outs
pushaw
push
aas
pop
hlt
imul
push
adc
popf
fisub
jae
(bad)
inc
and
mov
mov
aaa
pop
cld
fdivr
iret
repz
aaa
imul
xchg
adc
loop
cmps
rcl
cmp
jge
mov
push
aad
jmp
pop
bnd
(bad)
gs
std
fdivr
into
or
xor
mov
push
repnz
in
sbb
add
call
xchg
adc
pop
loope
clc
mov
or
repnz
scas
outs
inc
imul
xchg
mov
fsubr
and
les
push
aas
cs
cmp
addr16
(bad)
es
push
or
pop
je
adc
mov
mov
push
push
(bad)
or
mov
pop
xchg
cmp
or
mov
mov
arpl
(bad)
xchg
loopne
bound
cmp
jae
push
lds
dec
inc
dec
cs
retf
fldcw
hlt
cmp
fisub
sahf
sti
sbb
scas
jp
and
outs
lods
xlat
mov
fistp
cwde
test
jo
leave
push
ins
add
cmp
jl
(bad)
mov
cld
pop
stc
add
daa
push
inc
push
scas
mov
mov
inc
ins
cwde
mov
xchg
and
fs
xchg
mov
fistp
mov
xor
mov
sbb
(bad)
psrlw
jns
loop
icebp
ds
popf
push
imul
inc
cmc
pushf
aas
fsub
mov
inc
stos
jg
mov
or
dec
adc
inc
inc
sbb
mov
cmps
jbe
pop
std
pop
dec
stc
repnz
mov
inc
loop
es
sub
movs
in
jne
shl
sbb
mov
push
lock
cmp
dec
lods
loopne
inc
stos
sbb
ret
(bad)
mov
add
adc
loopne
scas
adc
out
loope
inc
pop
(bad)
call
push
lods
in
shl
or
and
xchg
xchg
outs
jmp
fdivr
lds
stos
addr16
mov
pusha
call
mov
fiadd
inc
or
and
add
mov
pop
inc
imul
adc
arpl
cmp
cmp
pop
jl
je
fyl2xp1
test
inc
sub
lea
pusha
adc
push
daa
ins
test
and
pop
mov
(bad)
retf
cmc
and
xchg
add
fwait
xchg
loope
add
cmp
and
xor
sub
and
cmp
lock
adc
pusha
mov
int
mov
and
movs
sub
pop
push
fucomip
cld
jmp
sub
nop
aas
inc
ss
pop
cmp
(bad)
in
clc
(bad)
std
(bad)
ds
enter
mov
inc
mov
sbb
lods
sbb
test
lock
es
or
or
dec
xchg
add
sbb
sbb
scas
hlt
movs
fcmovne
sub
cmp
sbb
pop
fsubr
dec
stc
xchg
adc
mov
in
lea
pop
pop
bound
push
jb
pop
mov
(bad)
cmc
push
fsubr
scas
sti
jb
sahf
mov
in
jge
push
mov
or
dec
iret
mov
cmp
daa
ret
scas
fs
mov
test
adc
dec
dec
cmp
xchg
in
mov
retf
jg
(bad)
fsub
(bad)
xchg
ds
imul
push
add
fwait
nop
add
mov
mov
cwde
hlt
setno
and
add
adc
addr16
out
nop
ins
mov
or
pop
adc
add
jnp
jo
mov
push
adc
or
sar
outs
xchg
std
scas
imul
(bad)
mov
add
add
scas
cld
mov
movs
fsave
enter
movs
jp
movs
mov
fidiv
test
mov
loop
add
test
push
movs
sar
mov
in
(bad)
cmp
mov
xchg
xor
inc
stos
adc
cmc
mov
mov
aaa
fidiv
mov
(bad)
jmp
and
mov
jae
mov
jecxz
inc
add
pop
cli
adc
mov
mov
dec
sbb
mov
adc
and
mov
mov
retf
neg
daa
leave
jge
jno
cmps
and
jne
div
lock
cmps
gs
cwde
xchg
mov
and
repz
mov
cli
mov
jmp
divps
scas
jo
push
fs
cmp
fldenv
sahf
jecxz
jg
xor
or
xor
push
shl
adc
iret
inc
cmp
adc
fisttp
retf
xchg
jmp
xchg
jecxz
pop
jg
jmp
inc
cmc
enter
jle
mov
or
enter
jo
fisubr
inc
cmp
mov
in
lods
jmp
aas
ret
mov
pusha
jg
and
pop
push
in
push
retf
mov
lahf
arpl
cmp
mov
push
dec
mov
fwait
dec
dec
in
into
je
mov
mov
or
fisubr
bnd
dec
je
lock
(bad)
(bad)
and
sub
repz
jns
je
and
mov
es
int3
dec
jno
fwait
push
stos
xor
add
cs
gs
add
pusha
xor
je
push
test
jge
test
sbb
mov
retf
sbb
mov
mov
cmps
mov
pushf
push
xchg
out
fstp
out
dec
or
in
cld
jno
cwde
jne
add
dec
mov
into
or
fld
mov
xchg
jb
leave
shl
movs
(bad)
xchg
(bad)
(bad)
adc
mov
xor
ja
ins
lock
pop
adc
push
mov
inc
pusha
pusha
out
outs
mov
test
sub
movs
mov
sub
addr16
les
das
or
cmps
push
ja
fld
test
aam
jl
sbb
mov
sbb
mov
loopne
(bad)
sub
lods
hlt
dec
add
push
jmp
cli
sbb
adc
ror
test
cdq
sbb
je
xlat
push
imul
clc
out
in
aas
sub
xchg
inc
mov
out
mov
and
pop
pop
or
in
out
xchg
add
fist
ror
repz
mov
ja
sbb
inc
scas
jmp
cmp
jmp
ja
xchg
sbb
add
xor
sub
adc
mov
scas
test
dec
jo
arpl
mov
dec
scas
mov
and
or
jmp
cmp
cmp
adc
pop
fsubr
xchg
fnstcw
pop
shr
mov
data16
push
(bad)
aaa
push
test
ds
fist
mov
fidiv
or
adc
and
mov
test
cmc
push
pop
adc
sub
retf
push
pushf
fdiv
cld
or
out
xor
not
xor
(bad)
(bad)
sbb
mov
cmp
popf
adc
(bad)
lods
jns
add
sub
push
stos
push
cmps
and
stc
dec
out
xchg
test
inc
cmp
cmp
std
mov
pop
xchg
es
popf
mov
fcmovu
cli
cld
out
dec
cmc
js
adc
xor
add
push
lahf
rcr
movs
aas
dec
aas
outs
jmp
out
jno
jbe
push
out
push
xchg
out
jnp
dec
sar
outs
dec
call
enter
jmp
sub
cmp
jecxz
and
(bad)
or
repz
in
pop
pushf
push
jmp
clc
ss
in
inc
add
adc
push
fidivr
cmp
aas
fwait
mov
dec
push
xchg
dec
mov
out
push
jmp
pop
outs
sub
loopne
add
ja
jge
and
mov
ret
dec
push
jmp
les
stc
rcl
icebp
das
(bad)
in
repz
or
push
add
mov
xchg
popa
mov
sbb
mov
shl
xchg
stc
sbb
lods
mov
ret
jmp
addr16
jmp
ror
mov
push
lods
pop
inc
and
mov
xchg
pop
out
jb
cld
sub
mov
xor
(bad)
std
(bad)
out
or
push
cld
mov
scas
es
(bad)
or
pop
add
push
add
sub
pop
mov
das
xchg
xor
cli
imul
jae
push
(bad)
pop
js
push
loope
dec
sub
mov
into
or
stos
adc
out
jae
dec
fild
xor
jne
and
xchg
retf
sahf
xchg
adc
cmps
ds
push
cmp
adc
popa
xor
adc
push
jne
(bad)
sub
push
or
push
out
outs
mov
je
dec
adc
out
jb
jmp
in
add
push
mov
ror
in
xor
ja
outs
aam
les
sub
ins
scas
loope
inc
out
inc
cmp
pop
inc
sub
das
xchg
in
xchg
cmp
test
cmc
pop
cmp
cmp
shl
pop
or
mov
mov
test
xor
std
mov
aaa
adc
(bad)
dec
test
pop
daa
stc
cli
sbb
inc
inc
stos
cmp
je
xchg
push
fild
inc
lods
retf
lods
xlat
adc
inc
xchg
mov
cmp
adc
test
aaa
and
pushfw
test
add
xor
xchg
fstp
ror
out
movs
add
xor
pop
clc
(bad)
fcomp
or
ins
jmp
sbb
outs
sbb
or
sti
mov
scas
pop
xchg
cmps
shl
js
ins
adc
mov
xor
push
inc
or
test
jb
or
xor
loop
sbb
shr
lods
sbb
sahf
and
xchg
mov
mov
mov
stos
test
div
adc
stos
mov
pop
mov
fimul
pusha
inc
cwde
cmp
xor
mov
cwde
mov
cmp
lods
mov
rol
mov
add
xchg
lds
clc
fcomp
(bad)
fst
mov
sub
in
cmp
aaa
mov
test
fldcw
adc
sub
sbb
jbe
lds
xchg
inc
jmp
lahf
add
inc
in
call
add
outs
cmp
xor
push
push
ret
mov
out
outs
imul
pop
mov
pop
inc
mov
xchg
loope
(bad)
call
push
push
loopne
pushf
imul
jmp
or
mov
std
loopne
adc
inc
mov
dec
dec
dec
fdivr
jae
call
es
jnp
add
mov
ins
aad
iret
inc
or
scas
mov
mov
jp
rcr
pop
pop
ins
sub
sbb
jne
push
push
call
ja
test
jl
pop
and
fldcw
cli
mov
jl
sub
shl
sub
pop
out
cmp
cmp
add
xor
addr16
add
test
pop
xchg
push
inc
pop
lock
in
fs
in
or
loope
jmp
ficom
mov
mov
pop
loop
(bad)
imul
int3
sbb
js
in
out
mov
(bad)
cmp
jb
mov
outs
inc
push
sub
sub
or
mov
adc
xlat
std
and
lock
mov
xor
lahf
or
cli
cli
sbb
fild
sbb
(bad)
dec
data16
sub
push
fldcw
popa
stos
push
cld
jno
retf
ds
cmp
nop
dec
(bad)
je
xchg
xchg
inc
mov
jmp
dec
pop
jns
cld
(bad)
sbb
sbb
sbb
cmp
fwait
imul
add
ins
out
cwde
and
and
pop
add
mov
shl
jl
icebp
push
rcr
es
test
sub
adc
mov
pusha
xor
mov
outs
add
add
mov
cmp
shr
xchg
jns
(bad)
scas
jmp
outs
test
ficomp
inc
or
mov
mov
repnz
es
mov
sar
mov
xchg
adc
(bad)
(bad)
sbb
mov
test
cmp
push
mov
fdiv
sub
and
lods
fadd
ret
int3
popa
test
push
fsubr
push
and
jge
adc
adc
dec
sub
in
jmp
push
adc
push
fistp
ret
pop
imul
push
jecxz
push
adc
shl
add
in
jns
add
dec
mov
jno
repnz
inc
dec
pop
inc
cwde
imul
loop
sahf
or
retf
pop
fsubr
iret
mov
(bad)
pop
mov
mov
fldln2
fsubrp
jnp
jbe
pop
and
push
imul
movsx
call
jno
fmul
push
(bad)
and
cmps
adc
scas
or
pop
mov
cmp
int3
ins
push
loope
jnp
cmc
push
mov
or
int3
mov
cli
add
mov
rcl
popf
cdq
stos
inc
mov
push
or
and
mov
mul
push
xchg
push
inc
stc
cmp
sub
fdiv
lds
popf
cmps
mov
lea
mov
adc
test
mov
retf
mov
mov
(bad)
stc
daa
or
imul
mov
inc
adc
jo
adc
adc
bound
add
ja
add
pop
pop
jnp
mov
(bad)
mov
pop
in
xchg
cmps
mov
push
inc
mov
add
data16
lods
jne
mov
jge
and
push
adc
xor
ret
cmps
ins
(bad)
call
or
push
lock
leave
push
call
nop
dec
dec
or
cmp
call
mov
mov
or
jl
mov
adc
bound
popa
cmp
xchg
ret
pop
iret
in
or
dec
repz
push
push
maskmovq
push
dec
inc
and
mov
cmp
jle
cmp
mov
or
add
push
movs
jg
push
shl
call
jmp
push
mov
xchg
mov
or
lahf
cmp
mov
sub
push
inc
js
inc
sub
mov
xor
cmp
sbb
jmp
pop
inc
mov
add
push
call
fldenv
idiv
pop
fist
mov
mov
add
push
sbb
xor
jge
adc
pop
dec
ds
in
cs
xor
mov
je
mov
add
sub
lods
inc
pusha
pop
pop
push
test
fdivr
mov
lods
aam
jle
adc
stc
pop
cmps
and
cmps
inc
adc
pop
out
push
push
hlt
push
stos
adc
xchg
out
(bad)
pop
adc
or
repz
sub
rcl
test
jmp
xchg
or
je
add
or
sub
cwde
adc
and
sub
test
sub
cmp
mov
movs
mov
popf
aaa
mov
inc
mov
xor
inc
std
or
jge
arpl
(bad)
jle
inc
xlat
mov
and
ds
mov
inc
push
test
les
mov
dec
jae
sub
in
les
popa
fldcw
push
fsqrt
icebp
mov
call
or
cmp
out
xchg
pop
push
dec
mov
sub
pop
inc
jbe
jl
movaps
sub
lea
adc
popa
sbb
dec
aas
adc
push
(bad)
sbb
push
push
out
in
dec
mov
(bad)
sub
fist
sub
mov
(bad)
int
xchg
and
pop
mov
call
jnp
cwde
loopne
and
jg
xchg
loop
cmp
push
aas
jp
sub
sub
inc
cmp
push
dec
xor
dec
inc
sub
sub
repz
mov
pop
sub
aam
cdq
cwde
mov
mov
pop
and
std
xchg
nop
add
xchg
pop
mov
jge
dec
ja
loope
retf
dec
xor
ins
pop
les
stos
push
and
adc
add
inc
mov
xlat
push
mov
jno
inc
add
inc
and
xchg
jo
xchg
scas
xor
cmp
out
adc
xchg
sbb
cmps
enter
inc
add
fs
mov
je
jge
cmp
ret
stos
cwde
inc
cdq
sub
dec
ja
scas
call
jmp
jbe
addr16
int
pop
xor
jle
(bad)
arpl
lods
jo
jl
dec
mov
hlt
iret
jg
call
jl
or
aaa
rol
fdiv
aaa
frstor
movs
pop
clc
stc
fucomp
xor
call
mov
jmp
sub
inc
fldenv
or
sbb
enter
xchg
test
in
call
sbb
mov
xchg
sbb
push
inc
fsubr
push
or
imul
shl
data16
pop
and
ror
movs
bound
pop
push
dec
arpl
jge
shl
cmp
(bad)
dec
push
ins
jecxz
dec
adc
(bad)
test
mov
and
xor
sub
sub
test
mov
ror
xor
mov
aaa
ins
push
(bad)
ficom
jne
cwde
inc
pop
cmps
es
into
cmp
xor
rol
aaa
mov
sub
jp
jmp
je
jae
outs
stos
aas
loope
sbb
cld
cld
jg
outs
sub
add
call
cmps
je
test
in
add
out
scas
sub
es
push
xchg
xor
mov
sbb
int
sub
iret
call
imul
push
in
xchg
mov
add
cwde
gs
sbb
mov
stc
imul
das
dec
dec
cld
lock
pop
call
xchg
mov
int
dec
fcmovbe
cmp
xor
inc
pop
js
inc
lods
test
mov
push
add
dec
adc
add
mov
cwde
mov
mov
mov
mov
out
inc
add
add
icebp
inc
pusha
adc
mov
push
push
int
imul
and
fs
mov
sub
sub
mov
pop
jne
mov
adc
fist
movs
lea
out
mov
and
fnstcw
dec
jne
fdivr
js
inc
out
out
push
ror
sahf
ins
aas
lds
dec
ret
cld
vpshad
or
mul
scas
icebp
das
mov
push
jns
dec
stc
fmul
in
rol
enter
pop
stc
sub
sub
sub
or
out
cli
jno
push
and
lds
pop
fwait
test
iret
pop
mov
shr
lahf
test
jae
in
sbb
popf
cmp
pop
inc
lahf
adc
inc
movs
imul
stos
movs
push
pusha
out
sub
cmp
cmps
mov
mov
into
dec
pop
(bad)
aam
sbb
dec
iret
sahf
cld
fstp
pop
xchg
jno
and
stos
xchg
mov
jl
scas
pop
popf
and
inc
stos
or
cli
repnz
rcr
imul
mov
fisttp
sbb
out
xor
icebp
sbb
pop
pop
sub
call
xor
and
out
stos
call
push
sub
arpl
or
inc
mov
pop
jne
popf
mov
inc
push
sub
test
sbb
jecxz
xchg
sub
push
je
lods
aaa
adc
shl
cmp
inc
pushf
sbb
inc
cmp
fst
jne
pop
int
repz
popf
pop
xchg
inc
aas
push
inc
ja
repz
push
aad
mov
cmp
shl
pop
jnp
sub
mov
loope
sub
daa
repz
in
(bad)
fdivr
inc
fild
or
pop
dec
xor
mov
mov
pop
lods
and
dec
adc
ror
fwait
jae
mov
jle
cmps
push
push
loop
repnz
(bad)
in
cmc
inc
and
push
or
sub
fild
(bad)
mov
sar
popf
pop
xchg
leave
xchg
loop
fmul
icebp
neg
cmp
xlat
test
leave
push
push
pop
pop
and
xchg
fst
dec
in
add
push
mov
and
push
inc
dec
cmp
fmul
les
sub
int
in
stc
out
mov
mov
mov
ins
or
stos
cli
mov
ja
rcl
push
loopne
cmp
and
scas
shr
add
add
mov
mov
mov
fbstp
cmp
adc
mov
fcmovb
mov
out
mov
mov
stos
push
das
ss
test
add
fnstcw
add
xor
inc
dec
out
loop
loop
int
jmp
stc
xchg
mov
pop
jo
sar
mov
push
mov
cld
in
push
scas
sar
add
sub
ja
div
mov
pop
cmp
rol
mov
jno
and
adc
(bad)
pop
repnz
cmp
or
jle
xchg
xchg
jae
mov
ins
mov
ins
fidiv
xor
enter
sub
popa
mov
or
adc
mov
ret
repz
adc
dec
sub
int
fadd
and
dec
jmp
mov
stos
sub
fld
add
mov
push
test
outs
and
mov
jmp
out
popf
jecxz
jg
mov
and
add
das
stos
adc
lds
jge
cld
mul
mov
inc
call
pusha
popf
lea
mov
inc
jle
sub
test
fmul
add
or
fwait
sti
pop
sar
pop
or
xchg
cmp
mov
mov
in
cdq
(bad)
jne
dec
push
push
imul
into
or
mov
scas
ins
sbb
fdiv
sar
push
adc
pop
xchg
xchg
xchg
mov
push
js
pop
fs
aam
bound
sbb
xor
push
mov
cmp
jle
xchg
push
loop
add
mov
push
jecxz
(bad)
mov
jno
mov
outs
mov
inc
cmp
push
jmp
cs
aaa
pop
sub
lods
scas
call
call
(bad)
or
ret
push
and
mov
add
cld
or
sti
sbb
xchg
xlat
mov
adc
jbe
mov
or
xchg
adc
jmp
add
pop
push
int
pop
or
test
xchg
mov
push
lods
repz
scas
lahf
scas
xor
stos
xlat
push
adc
or
mov
xor
add
shr
addr16
test
inc
pop
mov
pop
ins
int3
out
cli
mov
repz
push
jmp
bswap
imul
nop
pop
call
add
rcl
xchg
xlat
mov
sahf
mov
rcr
in
scas
test
ins
cs
pusha
imul
leave
sub
xchg
lods
cmp
or
push
cld
push
je
mov
mov
gs
push
pop
mov
ret
inc
cwde
jb
fimul
xor
in
push
xchg
arpl
lds
ficomp
retf
adc
(bad)
push
(bad)
cmp
ins
inc
sbb
or
jl
push
(bad)
popf
movs
cmp
mov
inc
jns
pop
pushf
loop
ret
dec
test
mov
push
add
cmp
cmp
mov
aas
sub
pop
add
inc
push
(bad)
push
push
xchg
pop
ins
jns
dec
inc
dec
jmp
jmp
sub
int3
outs
aas
lds
dec
cmps
xchg
lods
and
lods
mov
test
call
or
and
mov
push
mov
add
sub
inc
retf
ja
jg
add
int3
fwait
xor
jg
scas
out
pop
stos
pminsw
std
jne
sbb
cmp
inc
mov
push
pop
or
push
retf
jmp
fcom
movs
fiadd
xchg
and
xchg
xchg
push
xor
mov
cmp
push
inc
fcomi
jb
fdiv
lahf
adc
dec
cwde
mov
mov
dec
add
push
jb
(bad)
push
mov
lock
dec
call
mov
stos
mov
sub
mov
fcmovu
(bad)
lahf
inc
cdq
push
mov
sbb
sar
movs
pop
pop
fbld
push
test
fcomp
retf
push
sbb
mov
ret
mov
test
cmps
jl
jmp
sbb
and
jb
ss
and
sbb
adc
mov
mov
outs
jae
stos
cmps
fadd
test
retf
out
xchg
outs
fsub
out
xor
pop
xor
mov
test
loopne
aas
mul
add
inc
out
jno
fwait
xor
aaa
cli
sar
call
inc
fs
test
pop
arpl
pusha
dec
rcl
js
ins
outs
add
pop
xor
cld
fs
fistp
sub
out
mov
and
stos
adc
mov
pop
call
sti
mov
fst
mov
out
cmc
jecxz
add
test
ret
gs
mov
xchg
fadd
add
inc
xor
pop
cmps
xor
stos
mov
test
ret
loope
fsubr
or
pop
push
inc
and
xor
and
or
and
dec
inc
mov
aad
push
outs
sahf
xchg
imul
add
lods
movs
scas
sub
cli
scas
repz
call
mov
sub
retf
adc
fyl2x
cmp
leave
dec
fidivr
jno
mov
out
das
pop
xor
mov
ss
mov
scas
iret
mov
inc
jmp
and
lock
pop
sbb
jle
cmc
hlt
xchg
cmp
mov
cmp
jecxz
int
jge
jns
sbb
shl
lock
ins
mov
and
and
(bad)
call
mov
mov
sbb
imul
ins
dec
add
je
es
pusha
sub
lahf
shl
leave
jmp
fcmovne
fsubr
cmp
jb
sti
inc
into
gs
test
dec
(bad)
icebp
movs
cmp
xor
out
cmp
push
inc
adc
movs
(bad)
mov
push
ret
or
cmp
rcl
add
or
sub
sub
mov
mov
adc
sbb
and
fisub
out
(bad)
sti
imul
xchg
mov
or
sub
xchg
dec
sbb
cmp
jns
out
in
push
push
std
std
adc
push
les
pop
fstp
xor
fimul
(bad)
mov
sti
test
dec
or
xor
mov
cmp
pop
(bad)
call
inc
cmp
mov
(bad)
out
int3
xchg
int3
jle
mov
xchg
fs
in
add
push
push
pushf
mov
test
pop
pop
je
packsswb
loope
add
adc
push
in
sub
lods
inc
jge
idiv
xlat
sbb
and
repnz
xor
add
stc
xchg
sub
sbb
xchg
fs
dec
adc
push
repz
or
inc
or
ss
iret
inc
cmc
jae
stc
imul
pop
xor
mov
mov
add
cmp
mov
mov
mov
jmp
cmps
sbb
or
sahf
mov
leave
test
xor
inc
mov
adc
mov
in
ret
jbe
or
push
lock
sub
cmps
out
mov
xchg
outs
jecxz
sub
pop
movs
and
dec
xor
mov
shr
dec
and
movs
out
sahf
add
ds
push
or
inc
sbb
xor
mov
sbb
or
sub
add
mov
sub
jmp
(bad)
std
xor
jp
shl
cld
mov
jo
pop
xchg
push
fstp
mov
mov
loop
dec
(bad)
rol
dec
inc
clc
ins
inc
mov
xor
adc
loopne
jp
dec
in
mov
addr16
mov
add
xchg
aas
mov
(bad)
mov
jge
jo
icebp
enter
pop
mov
clc
mov
int3
mov
add
mov
mov
or
cli
in
outs
or
xor
adc
jbe
loop
call
lahf
shl
mov
cmps
jne
push
mov
in
fdivrp
daa
mov
gs
je
fimul
pop
cs
or
in
ret
clc
nop
inc
int3
pop
lods
lods
into
mov
(bad)
in
loopne
add
sub
in
add
retf
dec
xchg
inc
push
ds
jl
sbb
or
push
sbb
daa
cld
xor
and
sbb
cmp
lock
test
mov
fmulp
sub
stos
out
loop
pop
inc
xchg
pop
dec
gs
and
(bad)
in
mov
or
in
int
sbb
sbb
push
inc
pushf
xlat
scas
or
inc
retf
pop
shl
jge
mov
inc
fstp
fsubr
fmul
stos
dec
js
and
push
or
xchg
enter
(bad)
cld
das
jle
(bad)
mov
mov
jmp
pop
dec
cs
ds
movs
or
adc
jae
hlt
xchg
pop
sub
aas
cmp
push
xor
pop
and
lahf
pusha
(bad)
fist
pop
push
ja
js
inc
int3
jae
pop
mov
push
aam
pop
cmps
jmp
adc
mov
repz
repnz
add
sub
mov
test
push
jmp
mov
xor
lods
jmp
sub
cld
adc
aaa
inc
je
push
(bad)
ins
mov
inc
sbb
gs
and
pushf
fidivr
aam
xor
aaa
sub
jmp
dec
stos
imul
lods
pop
or
daa
mov
cld
push
je
dec
xchg
mov
jne
push
push
xor
inc
mov
(bad)
ficomp
ja
ja
add
test
mov
test
test
ins
jp
xchg
jnp
push
cmp
hlt
fimul
ss
leave
sub
pushf
iret
lahf
and
pop
idiv
mov
in
xor
inc
fadd
push
hlt
pop
jmp
leave
xlat
movs
mov
lds
sbb
add
call
push
mov
fwait
mov
push
inc
xor
push
sub
inc
in
(bad)
dec
add
jl
cmp
push
das
mov
pop
(bad)
mov
mov
jge
inc
jae
xor
jo
repnz
aam
(bad)
ja
jno
push
lahf
push
jl
stos
inc
xor
enter
inc
ss
std
fdivr
xor
sub
cwde
aaa
adc
int
idiv
(bad)
and
mov
ret
jns
leave
daa
aas
mov
add
xchg
sbb
push
lock
and
dec
dec
push
aaa
outs
jp
(bad)
out
fldenv
adc
mov
cmp
jno
inc
test
jno
in
ds
lods
ins
and
mov
sbb
adc
mov
dec
stos
sti
into
jns
shl
jge
cs
jmp
std
dec
lods
mov
out
sbb
push
retf
pop
add
add
sub
out
jmp
adc
push
mov
retf
sbb
es
ficom
and
call
cwde
or
arpl
push
imul
inc
add
dec
inc
sub
lock
arpl
pop
or
shl
daa
(bad)
sub
ds
(bad)
xchg
push
mov
lea
cmp
add
jo
pop
gs
jae
mov
test
(bad)
mov
rcl
mov
push
stos
scas
mov
mov
shl
cmovge
push
out
loop
call
sub
adc
test
test
lahf
push
adc
sub
mov
mov
stc
cmc
pop
repz
stos
mov
cs
fstp
mov
mov
int3
retf
popa
adc
stos
mov
xor
pop
pop
jmp
sahf
sbb
lods
loope
sub
lds
mov
(bad)
mov
jg
sbb
out
daa
xchg
(bad)
fmul
test
lea
pop
or
movs
mov
std
push
pusha
sbb
mov
in
add
adc
jo
pop
and
cmp
dec
fstp
pop
loope
mov
dec
sub
or
gs
scas
out
jmp
movs
aad
xchg
call
cwde
and
jp
and
popa
pop
stc
dec
inc
retf
jnp
aas
fcomp
mov
cs
and
xor
ds
sti
cmp
les
loop
dec
sub
sub
jne
gs
mov
ins
jle
scas
cmps
fidivr
fild
jbe
mov
dec
fnsave
dec
xchg
inc
mov
xchg
pop
mov
cmp
ins
call
sti
mov
add
arpl
fisttp
(bad)
lods
fisttp
cli
and
(bad)
in
scas
mov
mov
sub
fwait
das
outs
jle
in
fistp
push
jecxz
cs
ss
inc
and
arpl
(bad)
xor
aam
pop
dec
jo
cmp
pop
jae
push
mov
in
add
in
sbb
push
(bad)
inc
pop
(bad)
arpl
iret
mov
fwait
xor
add
rcr
push
cmp
pop
clc
rol
mov
inc
add
ds
adc
pop
or
push
cwde
ins
enterw
out
test
mov
shl
sahf
push
pusha
pop
push
ja
sti
adc
dec
imul
jg
and
add
ret
ret
fwait
test
retf
ficom
push
or
nop
push
jbe
jmp
ss
push
loope
jmp
jge
inc
sub
retf
adc
mov
xor
(bad)
jle
inc
and
pop
test
push
mov
pop
dec
and
xchg
sbb
mov
ss
stos
fs
push
mov
sub
xchg
dec
rol
push
push
and
cmp
leave
push
sub
or
mov
fprem1
bound
jb
fmul
adc
pop
test
xor
jnp
arpl
popa
adc
scas
and
push
pop
sbb
mul
mov
mov
aad
clc
dec
aaa
mov
retf
sar
arpl
mov
add
adc
mov
fisub
jae
(bad)
or
retf
add
repnz
xor
cmps
adc
(bad)
pop
scas
loope
bound
xchg
mov
mov
ins
push
push
or
fstp
aad
sbb
jne
push
les
xor
mov
sub
pop
push
out
(bad)
push
repz
(bad)
or
pop
mov
xlat
gs
sub
loope
jbe
xor
xchg
add
adc
not
jg
loopne
add
mov
push
xchg
mov
mov
popa
fstp
out
sti
inc
ins
std
inc
mov
xchg
mov
mov
jns
mov
pop
cmp
hlt
pop
mov
xchg
and
or
push
adc
movs
arpl
and
sti
sub
repz
repnz
push
pushf
dec
ret
mov
lods
fs
sbb
mov
lods
cmc
xchg
push
add
and
mov
ja
cwde
sub
daa
sub
lahf
lds
xchg
and
jl
retf
enter
mov
mov
xor
out
repnz
or
jno
cmp
ss
ret
or
pop
sahf
mov
fidivr
cmp
push
addr16
jge
cmp
pop
sub
inc
sub
sbb
pop
dec
ins
stos
(bad)
das
inc
(bad)
pop
cld
inc
sub
or
xor
and
scas
xchg
fbld
jle
xor
popa
push
bound
inc
xchg
mov
mov
lea
xor
lea
pop
cwde
mov
adc
mov
mov
sub
pusha
fst
pop
scas
add
aaa
fs
rcr
hlt
mov
(bad)
jbe
adc
mov
push
jl
fisttp
nop
jp
nop
dec
out
xor
mov
sub
xor
mov
xor
mov
pop
int3
jmp
push
adc
imul
or
dec
out
and
retf
and
mov
add
retf
call
lods
and
xchg
scas
addr16
cmp
cmp
pushf
mov
mov
mov
mov
pop
mov
mov
cmp
pop
cmp
nop
xchg
in
dec
ins
loopne
out
in
sub
cmp
ret
mov
xchg
cld
cmp
mov
pop
sub
outs
pop
outs
and
inc
test
mov
pop
jae
out
adc
cwde
jecxz
aas
push
lock
push
test
mov
mov
sub
or
test
pop
push
stc
dec
lock
push
jmp
xor
mov
repnz
scas
xor
test
ds
pop
(bad)
in
ja
aam
pop
jmp
push
test
in
pop
and
mov
dec
lock
and
sub
mov
rcl
sbb
inc
loope
and
scas
call
inc
or
je
lock
inc
fs
add
sub
mov
fldenv
pop
xchg
lahf
(bad)
pusha
lods
xlat
loope
xor
mov
outs
dec
inc
inc
dec
push
mov
test
test
fisubr
retf
jge
addr16
mov
mov
or
ficomp
add
test
addr16
ror
(bad)
xor
push
pop
mov
or
sub
inc
and
pop
and
jnp
int3
jbe
xchg
pop
jp
dec
retf
jecxz
and
call
out
push
cmp
das
pop
adc
fwait
pop
(bad)
xchg
mov
clc
out
sub
mov
fs
std
mov
mov
ins
dec
pop
shl
xor
pusha
sbb
jno
mov
push
jnp
int3
xor
mov
das
clc
les
and
sub
xchg
lea
pop
ins
sub
rol
adc
scas
adc
imul
fwait
mov
out
jbe
ret
pop
pushf
jae
rcl
ret
cmp
cli
fisttp
mov
dec
sahf
cmp
imul
sub
mov
push
xor
int3
jecxz
push
push
repnz
mov
sahf
pusha
jbe
inc
inc
mov
and
inc
push
mov
iret
fdiv
test
gs
leave
or
sub
or
test
out
enter
lock
js
push
clc
ret
in
rcr
in
xchg
mov
lock
in
cmps
mov
pop
cmp
mov
add
adc
pcmpgtb
aam
sub
call
pop
lock
test
pushf
jmp
cmp
ror
sbb
and
push
addr16
sbb
pushf
mov
inc
pop
dec
lods
pusha
aas
outs
xchg
imul
addr16
xor
pop
aas
xchg
mov
inc
(bad)
lock
mov
in
arpl
jae
inc
mov
rol
cmp
test
ins
dec
mov
sbb
and
jo
ficomp
(bad)
add
mov
and
fmul
sub
or
stos
call
mov
xchg
test
or
sbb
icebp
cmps
dec
mov
xor
mov
rcl
fsub
fisttp
ins
(bad)
sub
ss
es
std
cmp
xor
cld
ret
jge
cmp
sbb
push
mov
or
mov
sbb
rcr
push
sub
icebp
mov
mov
movs
or
outs
jp
fcomp
adc
sbb
lods
inc
xlat
jle
pushf
cmps
and
pop
dec
cmp
mov
mov
adc
dec
pop
out
sbb
jbe
dec
popf
jge
push
sbb
mov
mov
out
or
push
jns
mov
fmul
jns
or
sbb
repnz
loope
rcr
push
(bad)
jecxz
add
jnp
stc
mov
push
or
jno
inc
adc
pop
adc
sbb
lds
xchg
pop
mov
cmp
cmps
mov
push
test
sub
test
loop
imul
mov
nop
xchg
cmc
adc
adc
fild
pop
push
cmp
pop
adc
scas
gs
fdiv
mov
xor
push
mov
xchg
cmp
or
mov
xchg
fwait
iret
call
add
out
push
lock
mov
mov
mov
inc
pop
iret
and
sbb
adc
and
mov
jecxz
(bad)
xor
mov
mov
add
and
push
add
xchg
sub
mov
jle
push
push
push
call
mov
or
clc
adc
leave
adc
sub
jge
sbb
add
cmp
mov
mov
or
or
aas
ins
stos
ins
add
bound
xchg
sbb
js
ds
mov
repnz
(bad)
pop
add
cwde
hlt
xchg
jl
xchg
dec
mov
sub
cs
xchg
jmp
sar
jae
loop
loopne
arpl
mov
retf
add
jns
imul
outs
sub
xor
es
dec
pop
js
cmp
lock
sahf
inc
int3
fnstenv
fdiv
je
ret
fs
fs
icebp
fs
dec
cmp
xchg
not
add
xchg
out
test
(bad)
cmp
mov
repnz
mov
fsubp
fcmovnb
xor
jbe
xchg
in
xchg
call
int3
inc
push
pop
outs
push
fadd
in
xchg
or
adc
pop
push
xchg
daa
(bad)
sbb
fbstp
adc
inc
xchg
sbb
jbe
repz
movs
cwde
adc
setne
dec
mov
ret
repz
pop
xchg
ret
popa
adc
dec
sub
cmps
add
xor
stos
xchg
in
popf
(bad)
fidivr
fs
cmc
imul
jno
jl
inc
push
mov
xchg
popa
movs
mov
cmp
es
ss
loop
mov
fwait
or
adc
pusha
cld
fwait
cdq
push
jmp
jp
(bad)
mov
cs
pop
jl
jbe
mov
hlt
or
aad
pop
lock
ret
jecxz
fnstenv
hlt
inc
and
adc
xor
mov
jnp
push
leave
or
jne
call
outs
or
cmp
icebp
sbb
dec
lods
and
in
fisttp
sub
jle
xchg
or
fs
ret
sbb
nop
pop
test
ficomp
jno
fisub
and
(bad)
sub
mov
jmp
repz
mov
leave
xchg
mov
dec
int3
mov
mov
push
imul
push
loopne
mov
in
lds
loopne
and
sbb
xor
pushf
cs
xor
sti
in
add
das
cwde
inc
sub
out
out
repz
pop
mov
in
test
test
jp
or
or
mov
inc
pop
(bad)
setge
lock
aas
mov
jb
jns
int
inc
repnz
mov
(bad)
enter
dec
mov
mov
outs
add
frstor
jmp
pop
cmp
and
jp
ds
jns
and
dec
stos
fadd
cmp
jp
idiv
dec
push
inc
stc
bound
xchg
mov
sbb
(bad)
inc
lock
jle
jmp
dec
(bad)
out
rcl
ja
sub
int
push
fdivr
sub
leave
push
adc
push
repz
(bad)
outs
push
push
lahf
mov
mov
loope
sub
aas
sub
or
or
adc
mov
inc
stos
pop
jno
div
rol
ret
iret
in
mov
jle
push
mov
sub
lds
setnp
push
shl
mov
je
call
ds
jae
(bad)
push
mov
nop
mov
fnstenv
ja
aas
(bad)
and
daa
inc
popa
imul
loopne
ins
push
add
enter
and
lds
inc
sbb
call
mov
fadd
cmps
add
iret
cmp
xor
fdiv
and
cwde
in
xchg
aam
mov
aaa
mul
jne
add
leave
jle
arpl
les
data16
gs
gs
(bad)
xchg
cli
jb
adc
mov
sahf
pop
sub
mov
sbb
sbb
rol
imul
in
add
push
mov
xchg
in
dec
retf
jne
jp
popa
or
mov
mov
in
mov
sbb
mov
inc
sbb
mov
mov
or
lea
popa
push
inc
dec
push
xchg
inc
ret
or
in
icebp
pop
xlat
or
mov
sub
repnz
out
and
add
add
hlt
push
add
push
push
fcmove
(bad)
and
sub
(bad)
or
(bad)
pushf
pushf
add
cwde
pop
dec
cmc
aad
pop
test
in
in
xchg
sub
push
inc
fcomi
and
adc
push
inc
jno
push
cmp
fild
push
sub
aas
dec
push
pusha
push
inc
mov
ins
cmp
and
xchg
imul
iret
(bad)
idiv
(bad)
fcom
fisttp
mov
mov
mov
jo
dec
sbb
inc
mov
sub
loope
or
add
test
jg
in
rcr
sub
xor
repnz
jno
xor
repnz
aaa
xor
leave
retf
xchg
int3
int3
aaa
imul
repnz
repnz
mov
arpl
xor
and
enter
mov
(bad)
add
cwde
cli
and
call
push
scas
pop
mov
or
(bad)
(bad)
mov
mov
xlat
adc
inc
cld
and
adc
sub
inc
or
push
add
pop
inc
icebp
div
ror
mov
loope
xchg
pop
pop
aas
outs
adc
inc
sbb
cld
add
mov
sub
dec
sahf
fs
cmps
mov
lahf
cmps
dec
push
cmp
(bad)
neg
jno
add
in
push
sub
enter
sub
jmp
(bad)
mov
and
fsubr
test
and
inc
repnz
das
(bad)
cmp
push
les
xchg
cld
int
mov
cmps
cmp
dec
adc
fld
test
retf
add
mov
push
push
adc
xor
lahf
cmp
mov
pop
lahf
xor
scas
mov
add
test
cmp
and
xor
and
mov
sti
fs
popa
pusha
aaa
test
add
cmp
(bad)
fadd
or
(bad)
out
sbb
addr16
nop
outs
add
ror
jg
(bad)
adc
cli
fisttp
push
hlt
pop
xor
add
xchg
adc
pop
mov
es
in
sbb
adc
adc
shr
les
xlat
push
mov
repnz
scas
adc
in
mov
ret
mov
push
mov
and
les
js
mov
es
dec
aas
pop
push
cmps
add
ins
cmp
sub
dec
sahf
js
xor
xlat
pop
jne
arpl
les
jmp
sbb
ja
mov
push
ret
lahf
sub
das
mov
adc
lea
sub
leave
xor
fwait
lea
int3
xchg
retf
clc
mov
ss
icebp
inc
add
ja
sub
rcl
lock
mov
xchg
jmp
mov
in
xor
sahf
pop
bnd
cmp
leave
mov
outs
fwait
lods
aas
pop
lahf
fs
dec
adc
(bad)
dec
(bad)
mov
push
adc
cdq
lds
shl
add
dec
xchg
cmps
fwait
loope
stos
scas
lahf
dec
into
repnz
cmp
cs
movs
cld
inc
test
ret
jns
dec
or
mov
jbe
loope
xor
jg
inc
repnz
mov
aad
loope
sbb
jecxz
push
movs
bound
stc
lds
sahf
mov
inc
lods
jae
shl
xor
mov
xchg
repz
pop
jno
mov
daa
push
addr16
stos
ror
mov
test
jecxz
std
cmp
mov
xchg
dec
jbe
outs
jne
repz
xchg
and
div
lds
ret
lods
sbb
mov
inc
mov
sub
inc
scas
ret
iret
inc
dec
jno
leave
add
xchg
movs
add
aas
rcr
ds
adc
ja
hlt
mov
movs
les
fld
xchg
and
inc
mov
dec
(bad)
mov
loopne
add
xchg
retf
inc
mov
mov
xor
cdq
lods
jecxz
fnstcw
add
sbb
clc
sbb
add
fistp
int3
xchg
fwait
retf
mov
fwait
in
inc
or
(bad)
lds
retf
cmp
mov
retf
adc
ret
or
jg
mov
cdq
and
(bad)
shl
movs
not
push
or
pop
xor
mov
sub
sub
retf
jl
inc
sub
sbb
retf
mov
xor
imul
xchg
adc
sbb
adc
sbb
inc
mov
addr16
out
add
sub
in
out
mov
fcomp
xchg
sub
pop
lods
mov
push
cmps
outs
mov
mov
nop
(bad)
lahf
stos
pop
fiadd
sub
add
mov
aaa
xor
jg
ins
fs
inc
sub
das
sbb
inc
test
inc
nop
xor
dec
add
mov
xchg
dec
jmp
sbb
repz
scas
les
cmp
cwde
unpckhps
sti
lds
test
pop
sub
mov
(bad)
cmp
into
cmc
lods
gs
sub
sbb
push
dec
mov
test
jecxz
(bad)
cmp
jae
adc
shr
dec
push
sub
mov
cmp
fucomi
mov
xchg
aam
inc
out
jno
mov
add
dec
xchg
lods
pop
sahf
pop
jb
into
add
push
popa
cli
mov
xchg
out
addr16
into
and
sub
loope
dec
loop
add
cmps
fs
adc
lods
mov
cmp
and
retf
pusha
push
cmps
or
sub
ja
cmp
dec
xchg
mov
aaa
aad
retf
sub
adc
ins
push
shl
or
jl
adc
jb
ja
mov
test
push
imul
and
fwait
xor
jne
lds
xchg
jp
add
ins
push
mov
cs
(bad)
mov
xchg
jns
fs
push
aad
cs
cmp
sbb
dec
xor
in
cmp
and
jmp
test
aaa
daa
or
int3
mov
(bad)
fcmovbe
setbe
test
sub
inc
dec
jp
dec
fnsave
sub
xchg
jmp
daa
inc
mov
rcl
cmps
cmp
scas
je
cwde
mov
jne
xor
ins
push
and
lods
jne
cmp
push
arpl
mov
cmp
fucomi
ins
ror
sub
cmp
jle
mov
out
scas
xor
cmps
fcmovnb
test
ficomp
popf
mul
push
ins
shl
or
push
mov
add
(bad)
and
inc
mov
retf
repnz
mov
jb
pop
mov
lock
(bad)
cmp
add
jecxz
or
(bad)
mov
dec
dec
sub
or
jns
add
arpl
mov
sti
(bad)
push
adc
fstp
clc
out
inc
pop
mov
inc
add
movs
bound
jp
loope
call
sub
inc
sbb
cmc
cmp
imul
jb
test
loop
idiv
fiadd
mov
inc
xchg
xchg
mov
adc
and
xor
dec
in
mov
in
dec
jo
(bad)
add
push
inc
adc
inc
shr
(bad)
scas
cmps
fst
(bad)
sub
mov
xchg
mov
repz
mov
push
ins
test
sub
or
mov
mov
dec
lahf
or
push
scas
inc
push
and
sets
movs
jle
pop
inc
lea
xlat
mov
inc
sahf
daa
xchg
sub
mov
inc
mov
test
jo
in
inc
(bad)
loopne
push
call
and
(bad)
sti
push
push
mov
popa
in
and
test
out
xlat
mov
inc
mov
(bad)
fcom
xchg
lahf
pop
dec
pop
mov
dec
fwait
adc
lea
mov
jae
test
popf
pop
add
mov
xor
fldcw
cmp
outs
ror
scas
cmp
mov
or
jno
add
mov
adc
or
scas
sbb
leave
lahf
(bad)
jmp
inc
pushf
ja
mov
fsubr
push
enter
cmp
jg
dec
call
add
or
ja
ss
dec
sub
xchg
outs
(bad)
jmp
add
xor
jecxz
iret
ret
lds
pop
and
sub
mov
and
and
in
stc
lea
pop
iret
adc
sub
pop
jns
xchg
inc
lahf
push
clc
rcl
jle
push
sub
int
xor
popf
push
stc
push
xchg
je
lock
dec
shr
mov
sbb
dec
sbb
ins
mov
into
sbb
mov
in
loopne
mov
iret
push
push
xor
pop
adc
xchg
or
push
cmp
std
cmp
scas
and
cmp
fisubr
add
or
mov
popf
loop
cmp
addr16
stc
das
in
icebp
xor
pusha
xor
daa
aaa
cmc
in
xchg
mov
or
xchg
push
push
cmp
mov
leave
fidiv
mov
arpl
iret
xor
fs
ss
sahf
mov
push
mov
movs
into
xlat
jmp
lock
adc
cli
repnz
push
sbb
fmul
idiv
aam
add
rcl
imul
add
fs
stc
retf
inc
iret
aam
fist
test
sbb
cmp
add
mov
add
push
sub
nop
dec
pop
mov
ins
jb
stc
cld
in
cmp
add
ins
imul
pop
sub
ret
fdivp
sbb
mov
adc
stc
gs
inc
neg
nop
dec
cmp
push
iret
xchg
icebp
outs
cmp
xchg
ret
xor
pop
inc
ds
in
shl
sub
inc
sub
or
inc
div
inc
mov
ret
shr
pop
mov
(bad)
xor
cli
mov
cmps
add
and
mov
jle
xchg
cmp
push
and
(bad)
adc
push
sbb
in
push
xchg
sub
imul
aas
int3
add
sub
leave
or
xlat
popf
mov
xor
bsr
jl
cmp
sbb
inc
inc
jl
adc
into
ror
imul
adc
cmp
sbb
imul
sub
stos
xchg
sbb
push
mov
in
and
aad
jmp
dec
push
lods
pop
js
mov
outs
hlt
mov
inc
mov
(bad)
cld
pop
jo
jb
cdq
or
pop
arpl
xchg
mov
in
dec
aaa
inc
mov
push
jge
mov
(bad)
hlt
pusha
push
xor
mov
scas
push
fild
repnz
push
cmps
pushf
jne
jo
and
mov
test
loope
xor
and
sbb
or
dec
ret
jnp
pop
enter
mov
inc
outs
mov
mov
push
cmp
adc
mov
adc
mov
rol
push
fidivr
mov
xlat
jp
dec
outs
(bad)
sbb
or
adc
mov
and
rcl
adc
aaa
jp
enter
jecxz
add
cmps
sbb
cmp
dec
and
xchg
mov
sub
dec
or
repnz
fcom
fucom
jmp
in
mov
xchg
pop
loopne
mov
sub
mov
and
jnp
sbb
mov
push
movs
push
and
push
and
stc
jge
mov
mov
leave
ins
movs
lahf
sub
aad
loopne
xor
mov
sbb
cmps
cwde
sbb
aaa
pop
sub
mov
and
ror
in
and
aas
sub
aad
jne
pop
ret
mov
xor
push
pop
cmp
jecxz
ja
push
imul
pop
out
push
movs
js
popa
mov
and
xor
or
lea
cmp
iret
or
les
mov
and
fs
jne
out
and
sub
pop
inc
out
clc
cmp
lock
mov
cmp
sbb
adc
(bad)
js
push
aas
daa
sub
xor
cmp
push
std
sbb
mov
out
sub
out
mov
mov
popf
test
call
add
mov
mov
or
(bad)
mov
or
retf
mov
sbb
and
sbb
pop
sbb
mov
jne
jae
fs
sbb
arpl
and
outs
jmp
into
addr16
push
mov
call
cmp
cwde
mov
test
sub
mov
mov
push
ja
frstor
js
call
les
and
or
cs
sub
mov
int
inc
pop
test
loop
mov
fldcw
push
(bad)
hlt
fstp
clc
jg
mov
lods
push
mov
daa
and
xor
icebp
sbb
js
popf
pop
cmp
push
fmulp
mov
push
cld
xchg
test
ss
gs
jae
cmp
and
mov
mov
xor
fsubp
mov
enter
repnz
mov
ins
shl
adc
loopne
rol
int3
pusha
sbb
cmps
xchg
mov
push
jnp
jb
adc
jp
inc
mov
in
jg
adc
outs
sbb
lods
mov
jp
jmp
sub
nop
std
xchg
push
mul
scas
inc
cmc
in
out
jge
fs
mov
mov
push
hlt
lock
loopne
mov
pop
cs
leave
je
(bad)
cmp
sbb
xchg
fnsave
scas
test
repz
dec
les
push
neg
jle
sub
adc
sbb
add
stos
cmps
jno
je
repz
mov
and
xchg
iret
aam
mov
aad
adc
jge
pop
add
push
adc
das
mov
add
sub
and
loop
xchg
stos
mov
adc
fsubr
mov
outs
push
jo
enter
addr16
mov
aas
out
repnz
jmp
outs
mov
lea
mov
and
push
retf
(bad)
dec
push
scas
mov
mov
push
lock
inc
add
push
mov
sbb
aaa
xor
mov
loopne
jmp
(bad)
call
mov
sbb
adc
rcr
pop
pmulhuw
cmp
and
and
dec
mov
or
sbb
scas
and
inc
out
xchg
lods
push
add
mov
mov
mov
sbb
(bad)
lock
out
fist
or
add
dec
cmps
outs
test
or
dec
push
sub
dec
adc
jne
and
idiv
into
pop
add
or
mov
movs
ins
cwde
arpl
xchg
ins
hlt
cli
mov
jns
fild
es
mov
add
(bad)
(bad)
jg
mov
mov
fisub
add
sbb
xor
or
pop
loope
and
inc
addr16
in
mov
fs
jecxz
mov
sub
xchg
xchg
call
ja
shr
lds
add
pop
clc
ss
pop
ja
popa
idiv
sub
bound
jbe
mov
sub
nop
cmps
out
cmp
pushf
test
mov
sub
imul
adc
je
inc
and
add
dec
cld
stos
or
or
imul
ja
lods
loopne
daa
outs
or
in
fadd
inc
(bad)
pop
loopne
xchg
cmp
in
pop
mov
out
mov
or
xlat
outs
inc
jg
inc
cs
and
fnstcw
rcr
nop
daa
sub
mov
xor
retf
int
addr16
sbb
out
out
sub
fdiv
test
dec
xor
(bad)
fdivr
js
mov
fild
loopne
jmp
cmp
icebp
xchg
add
and
pop
ret
cmc
pop
es
pop
adc
xchg
rol
retf
cmp
xchg
aaa
jg
int
push
and
jo
rol
add
into
in
imul
and
mov
jge
mov
scas
jp
cmp
cmp
and
add
mov
into
mov
pop
or
(bad)
and
gs
mov
pusha
rcr
push
and
or
adc
xor
mov
retf
mov
in
scas
mov
pop
and
in
add
mov
and
nop
sbb
jmp
int3
add
stc
test
mov
cmps
push
aad
mov
cwde
stc
or
cmp
call
(bad)
pop
cmps
cmp
repnz
mov
iret
mov
jp
pushf
mov
mov
mov
dec
stc
call
inc
push
out
mov
retf
push
shl
jmp
mov
stos
int
xchg
push
sub
lahf
push
push
jo
imul
mov
movs
lock
movd
stos
cdq
cld
adc
push
push
cmps
xchg
dec
(bad)
pusha
add
xchg
cs
fstp
int3
pop
movs
dec
pushf
mov
arpl
sbb
and
add
lock
push
xor
xchg
and
push
and
pop
push
adc
int
pop
mov
mov
in
mov
jns
add
dec
test
adc
cli
fldenv
cdq
inc
inc
gs
js
loopne
scas
mov
push
add
ins
int
mov
jmp
or
and
test
sbb
test
ins
and
loop
pop
aaa
sub
mov
xor
cmps
ja
push
stos
dec
pop
sub
jns
and
jg
xchg
push
inc
lahf
mov
pop
and
test
mov
inc
arpl
xchg
jae
pop
or
outs
push
mov
mov
cmp
cdq
or
inc
inc
imul
cli
push
out
sbb
test
in
push
cmp
push
xchg
dec
aam
inc
xchg
out
push
pop
lds
mov
inc
shl
icebp
sahf
xchg
fisub
lahf
rcl
jnp
test
scas
lds
mov
xor
fisub
jne
icebp
or
xor
hlt
mov
divps
push
jge
xchg
bound
in
call
test
leave
in
clc
out
push
sbb
es
bound
lds
or
mov
stos
sahf
pop
iret
dec
sar
jp
popf
xor
popa
jns
sub
shl
jge
call
sub
xchg
cmp
mov
fsub
dec
daa
jge
repnz
je
mov
lods
xor
repz
or
in
aas
pushf
cmp
xchg
push
inc
jbe
xchg
push
or
mov
and
test
push
add
neg
or
cs
dec
jl
ins
aaa
pusha
stos
cmp
cmps
mov
inc
cmp
sbb
cmc
int3
push
add
add
and
push
xor
xor
jnp
cdq
loopne
add
adc
scas
test
xchg
sub
and
mul
sti
cld
xor
dec
mov
loope
inc
mov
cs
lea
mov
aaa
sub
fs
xor
or
jns
xor
pop
in
in
fsubr
shr
cmps
mov
sbb
aas
mov
push
mov
add
test
mov
cs
jg
popf
div
sbb
sub
test
psubusw
enter
mov
jp
or
pop
mov
dec
push
mov
or
xchg
fcomp
das
jb
jecxz
inc
mov
adc
stos
popa
dec
retf
aaa
imul
mov
arpl
xchg
pop
xor
fldcw
pop
xchg
stos
pop
scas
adc
orps
dec
mov
mov
pop
sbb
push
cmps
push
inc
mov
push
into
adc
lea
(bad)
loopne
jne
int
inc
retf
pop
inc
jo
ins
xchg
dec
ret
push
fstp
mov
std
loope
lea
repz
xchg
cli
adc
inc
loop
jnp
scas
out
ins
and
adc
cld
cmp
sub
pop
pop
adc
hlt
mov
movs
jmp
mov
or
adc
or
ror
addr16
dec
loope
sub
loope
or
inc
jo
lods
jl
das
jmp
shl
xchg
loopne
xchg
fadd
loop
cmp
mov
adc
and
dec
jmp
fild
sub
xor
xlat
shr
jae
stos
mov
mov
adc
sti
xor
retf
(bad)
sti
(bad)
cld
push
sub
add
or
inc
fsubr
not
dec
mov
jno
mov
push
and
mov
shl
jl
add
xchg
mov
mov
xor
mul
mov
add
(bad)
hlt
and
pop
dec
cmp
test
cmp
(bad)
repz
cmc
int
push
out
or
movs
sti
inc
fst
retf
js
jmp
fild
or
xchg
push
cwde
or
mov
mov
dec
sub
cmp
push
sub
lods
adc
mov
xor
pop
lahf
pop
es
popf
adc
sub
inc
stos
stc
jge
out
call
jmp
mov
mov
lea
mov
in
lahf
inc
lds
jge
push
cli
fldcw
les
pop
mov
pop
adc
out
sub
push
repnz
(bad)
or
test
mov
sti
inc
inc
xchg
in
jge
stc
jmp
mov
inc
imul
loop
cmps
pop
mov
or
xchg
push
sub
scas
or
test
cmps
jae
sbb
add
jecxz
cmp
push
lock
cmp
mov
mov
(bad)
fadd
retf
mov
fisttp
sbb
and
add
in
mov
mov
stc
cmp
int
neg
lds
ins
push
fdivrp
lock
sti
sbb
imul
aaa
sbb
push
fstp
out
xor
cld
jbe
xchg
inc
loop
test
jecxz
cmp
dec
jne
fistp
das
jmp
ret
cld
sahf
pop
cmp
aaa
xor
xchg
or
mov
dec
arpl
xchg
mov
fsubr
push
jl
imul
xor
mov
inc
adc
jecxz
das
cwde
scas
mov
in
repz
adc
mov
adc
or
aam
fst
lods
fs
jmp
movs
rol
lahf
jo
icebp
mov
xchg
push
adc
pop
mov
mov
leave
ret
lock
mov
sbb
push
(bad)
jecxz
mov
inc
inc
pop
dec
add
sub
sbb
push
test
pop
outs
or
test
dec
sahf
sbb
mov
ins
popf
add
or
xor
pushf
xor
mov
sbb
out
loop
arpl
pop
(bad)
loopne
aad
pop
mov
cmp
cmps
mov
popa
and
xor
in
mov
push
or
or
in
and
inc
stos
xchg
movs
scas
hlt
pop
mov
xchg
cmp
mov
es
sbb
push
mov
nop
sub
mov
rcl
xchg
pop
cld
inc
jg
fcomp
repz
add
cmp
jmp
xor
ds
shr
jns
lock
not
mov
into
std
cmc
popf
loopne
cmp
fcmovbe
and
dec
mov
(bad)
mov
daa
stos
pop
mov
inc
mov
pop
fwait
xor
test
inc
xor
mov
mov
cmp
xchg
and
loopne
pop
push
or
sub
and
je
loopne
fstp
cmp
sbb
scas
fcomp
pop
es
cmp
fs
loope
xchg
xchg
or
or
jle
stos
sbb
lods
sbb
je
retf
cmp
cmc
xor
push
and
(bad)
sahf
lods
cld
cmp
dec
les
aas
adc
mov
les
mov
loop
cmp
dec
dec
dec
gs
ins
aam
inc
data16
and
aaa
dec
mov
pop
lahf
aaa
subps
js
retf
or
xor
lods
std
in
mov
movs
sbb
or
jmp
cmp
outs
shr
in
mov
out
add
(bad)
mov
in
push
inc
push
or
(bad)
rol
dec
aam
iret
(bad)
out
sahf
mov
push
pop
cmps
jo
cmp
or
push
pop
out
mov
sbb
or
test
jp
mov
lods
test
movs
cmp
pop
pop
inc
xor
inc
inc
cdq
sti
(bad)
mov
xor
cs
sbb
cmps
lock
xchg
fs
lock
aad
mov
pop
and
xlat
ret
jmp
jnp
jle
iret
lea
adc
jmp
sbb
clc
mov
shl
xor
add
in
in
jb
cmp
jnp
mov
rol
movs
outs
push
ss
cmp
(bad)
mov
(bad)
rol
stc
or
dec
cli
dec
sbb
out
cwde
lahf
push
pop
pusha
adc
daa
adc
adc
test
iret
push
and
lods
add
and
xor
xlat
and
mov
sub
cmp
arpl
call
daa
mov
sbb
iret
out
sub
test
adc
(bad)
mov
mov
mov
call
leave
in
pop
push
dec
adc
jb
mov
call
mov
aas
xor
call
in
mov
outs
sbb
push
and
rol
cmp
sti
fcmovnb
dec
jmp
or
das
and
aam
or
dec
aas
out
sub
aad
jmp
sbb
lock
cld
repz
push
mov
cmps
retf
retf
(bad)
mov
jecxz
xlat
repz
pusha
sub
inc
nop
call
jge
lds
or
frstor
mov
xor
jo
jmp
retf
stc
jbe
cs
in
xchg
or
mov
lea
or
fild
dec
pop
loop
stc
add
out
push
dec
cmc
aas
pusha
sbb
jb
and
inc
stc
and
mov
mov
rcl
or
in
in
inc
sbb
and
add
jmp
xchg
stos
sub
(bad)
adc
imul
cs
lods
idiv
xor
cmc
out
in
aad
shr
ficomp
out
scas
mov
push
mov
jmp
xchg
pop
mov
or
aaa
and
mov
jecxz
or
imul
fidiv
xchg
pop
xor
cwde
scas
sub
into
in
jmp
sub
and
mov
jmp
mov
test
sub
repnz
sbb
rol
mov
inc
cld
pop
sti
test
mov
adc
and
ror
cmp
out
add
pop
xchg
jle
stos
daa
fcomip
sbb
lahf
add
pop
inc
leave
add
sub
pushf
mov
int3
in
jmp
xor
xchg
push
aam
and
retf
push
sbb
xlat
adc
cdq
pop
pop
loop
arpl
dec
mov
jno
(bad)
retf
add
pop
xor
adc
add
not
js
and
push
mov
(bad)
sbb
sub
into
mov
jnp
inc
fs
dec
imul
outs
cmc
hlt
aam
and
popa
and
aas
mov
hlt
stos
retf
fbstp
stc
xlat
leave
stos
sub
(bad)
push
stos
out
das
into
xor
xor
bound
xor
sub
scas
lods
cmp
push
(bad)
xor
push
sub
ds
fcomp
call
and
enter
out
push
mov
push
int
cld
adc
das
js
(bad)
repnz
xchg
xlat
mov
fnsave
push
cmps
mov
ja
mov
test
loope
loope
jg
jnp
(bad)
adc
inc
icebp
jmp
sbb
mov
pop
fsub
jg
retf
cmc
jae
or
mov
rcl
fsub
mov
stc
dec
arpl
arpl
(bad)
cdq
aaa
jnp
xor
retf
push
aaa
scas
iret
cmp
cmps
pop
lock
or
xchg
push
sub
xor
sub
cld
retf
and
xor
repnz
dec
sub
jne
test
jmp
ja
pop
stos
ficomp
in
sbb
jl
pop
call
mov
scas
jbe
stos
test
sub
call
aam
(bad)
cmps
xor
pop
in
imul
sar
pusha
xor
in
sbb
retf
ror
aas
test
pushf
fisttp
inc
add
or
ss
mov
sar
add
mov
aam
mov
xor
sahf
push
enter
and
mov
movs
nop
add
popf
or
pop
retf
inc
adc
push
aas
in
xchg
movs
fisub
stc
int3
stos
cmc
(bad)
int3
jle
xchg
mov
(bad)
in
jmp
outs
adc
rcr
sbb
pop
pop
jns
jno
sar
aad
mov
mov
mov
je
lea
les
xor
cmp
fcomp
and
loope
rcl
lds
fs
in
xchg
mov
dec
outs
aam
pop
movs
test
xchg
jge
or
stos
push
test
dec
inc
dec
clc
movs
push
pop
and
cmp
js
(bad)
xchg
push
mov
adc
fisttp
scas
mov
dec
mov
or
pop
frstor
add
push
dec
add
cmp
scas
test
inc
popa
cmc
inc
(bad)
mov
das
pop
scas
fnstsw
mov
sahf
aam
ret
call
xchg
push
cmp
mov
jne
sbb
or
mov
not
add
scas
pop
loop
hlt
or
inc
sub
mov
add
jne
mov
mov
mov
mov
sbb
xor
scas
dec
pop
out
bound
and
pop
bound
jle
in
jp
cdq
push
lea
into
les
xor
mov
sub
fstp
loopne
sbb
jbe
dec
pop
sbb
das
into
push
shr
cs
daa
cmps
and
stos
retf
cmp
push
sbb
sbb
pop
or
imul
sti
outs
fild
dec
or
les
push
test
cwde
pop
mov
jg
xlat
pop
ss
aad
(bad)
adc
inc
jle
mov
mov
into
cdq
or
mov
repnz
mov
int3
cmps
mov
pop
stos
stos
sar
fmul
fisttp
cdq
cmp
and
inc
push
push
cli
push
inc
inc
xchg
sbb
cmp
retf
retf
inc
jae
fsubr
or
call
mov
retf
ss
mov
push
adc
enter
xor
shl
leave
sub
movs
cmp
lods
add
xlat
mov
inc
(bad)
cld
ins
cmp
dec
ret
pop
int
add
sub
push
jbe
xor
sahf
mov
mov
fidivr
cdq
mov
adc
das
ins
push
imul
push
sbb
fs
sub
adc
lds
mov
sbb
inc
fistp
adc
jg
imul
mov
push
xchg
(bad)
and
nop
dec
test
jbe
mov
jg
in
sub
jecxz
mov
in
mov
stos
mov
mov
xchg
iret
push
cs
cdq
xchg
dec
aaa
ret
push
adc
pushw
fcomp
xlat
cmp
leave
mov
pop
repz
pop
push
lahf
ret
push
bswap
jb
dec
cmp
xchg
jno
adc
div
xchg
es
(bad)
ds
mov
xor
or
jo
fild
sbb
scas
fld
in
and
mov
in
lea
in
iret
fnstenv
xchg
(bad)
std
mov
xor
mov
aad
sbb
jmp
mov
sub
je
dec
aam
pop
inc
fwait
stos
imul
mov
or
and
cs
push
ret
ret
cli
aas
xor
xor
jns
adc
pop
add
or
gs
mov
out
inc
xlat
ins
sub
out
fld
mov
inc
xchg
lods
fs
repz
pop
fdivr
mov
inc
cmps
cld
push
and
mov
cmp
mov
and
ja
fadd
add
mov
loopne
pop
mov
push
fs
test
imul
dec
push
xchg
and
and
out
dec
fdiv
cmp
outs
loop
push
popf
imul
(bad)
in
mov
dec
jecxz
shr
xor
ss
sub
inc
dec
shl
sbb
mov
rol
mov
outs
jecxz
xor
sar
mov
xor
ret
mov
lods
lods
movs
sub
jmp
ds
mov
xor
aas
mov
imul
call
adc
sub
sub
fld
push
dec
iret
or
out
lods
mov
and
int3
pop
inc
push
mov
clc
retf
xor
push
sub
hlt
xor
xor
outs
in
adc
lea
mov
pop
jns
xchg
lods
in
add
ficom
aaa
loop
icebp
xchg
dec
outs
pop
mov
les
lahf
push
cmps
xor
lock
adc
jbe
pop
cmp
pop
hlt
test
push
sbb
stc
inc
pop
mov
mov
adc
xor
add
push
in
sti
cdq
inc
repnz
adc
push
(bad)
loop
test
in
in
inc
(bad)
mov
jl
cli
ror
pop
jp
scas
push
aad
movs
test
sbb
sub
sbb
and
push
xchg
jno
mov
data16
jns
lods
sti
stos
in
push
pushf
js
mov
icebp
sub
out
lea
in
push
test
out
sahf
mov
sub
loope
cmp
sbb
mov
sbb
mov
xchg
fs
(bad)
fnstsw
nop
ds
js
mov
mov
and
inc
mov
mov
retf
popf
xor
shl
mov
push
xor
ins
jp
int3
xchg
xor
sahf
sbb
sub
or
div
cmp
xor
sub
and
jge
icebp
add
cs
and
fst
pop
pop
adc
and
daa
pop
pop
jmp
mov
test
popf
sbb
jo
les
cmps
ins
imul
xchg
(bad)
xor
into
adc
pusha
inc
ds
adc
rcl
mov
push
adc
cmp
ror
ss
pushf
xchg
adc
cmps
or
jbe
sub
(bad)
jg
hlt
das
test
jmp
cwde
jmp
inc
or
cmp
bound
shl
pop
mov
sbb
mov
jae
sbb
push
cmps
pop
xchg
inc
mov
aaa
adc
add
inc
mov
cmps
jmp
push
and
ss
inc
sahf
lds
dec
lods
pusha
xchg
or
sbb
fdivr
push
inc
popa
pop
xchg
mov
fdiv
jnp
das
sub
inc
push
cmps
pop
mov
sbb
or
test
sub
hlt
loop
dec
cmps
cmp
sbb
adc
cmp
mov
jmp
push
inc
dec
bound
push
add
fs
ins
in
mov
lahf
sub
scas
adc
mov
inc
push
iret
js
adc
dec
ds
xor
push
js
dec
pop
scas
cdq
adc
adc
jae
adc
jb
lahf
cmp
jle
add
pusha
into
push
jmp
loop
jmp
xor
stc
scas
cmp
nop
push
(bad)
sub
add
loop
mov
movs
cmp
out
push
data16
iret
sub
rcl
call
imul
les
fimul
add
mov
jl
(bad)
and
cmps
jl
add
sti
(bad)
push
das
or
push
leave
std
mov
or
mov
mov
ss
cs
loop
in
add
cmc
cli
stos
and
bound
ret
test
or
add
sbb
and
mov
or
xor
or
xchg
or
in
mov
jb
and
cmp
adc
and
(bad)
aam
cld
scas
(bad)
mov
and
push
call
xchg
lods
pushf
xor
jne
je
mov
push
and
dec
cmp
push
mov
in
pusha
push
and
in
out
cmc
(bad)
ds
stc
sbb
idiv
fucom
jecxz
out
xchg
pop
out
jno
push
jg
xor
and
test
das
pushf
or
xor
mov
rcl
inc
dec
dec
mov
mov
push
pushf
stos
test
js
sub
sub
int3
pop
jg
es
fisttp
in
call
js
add
inc
mov
or
push
jmp
cmp
imul
or
or
and
sub
(bad)
pusha
push
ret
stc
stos
push
adc
mov
adc
push
stc
adc
aam
mov
out
shl
dec
adc
iret
cmp
mov
adc
add
cmc
ins
dec
sub
jl
pop
hlt
or
cmps
jb
rcr
cli
ja
imul
mov
pcmpgtb
ret
mov
jl
aad
and
or
mov
mov
sbb
into
add
ins
push
or
inc
add
push
retf
push
mov
dec
test
retf
lahf
je
and
inc
inc
sbb
ss
loop
call
ins
push
sbb
pop
jnp
div
jns
add
out
in
push
push
mov
push
cmp
outs
dec
test
sub
or
aad
inc
pushf
cmp
scas
ror
into
pusha
push
iret
jp
aaa
push
add
jl
mov
dec
ja
scas
lds
mov
dec
sub
dec
inc
repnz
xor
into
movs
jl
popf
add
fs
(bad)
leave
(bad)
and
pop
dec
out
push
and
stos
sahf
fimul
aaa
pop
mov
sub
jmp
aam
jnp
leave
mov
loope
mov
ja
test
in
xor
jl
jnp
cmp
xor
mov
xchg
add
jle
inc
or
icebp
je
sar
movs
push
popa
xchg
dec
fwait
arpl
lods
(bad)
and
mov
push
aam
push
test
push
xchg
pop
enter
in
cli
push
std
addr16
imul
push
mov
add
pushf
cmps
pop
cmp
xor
fsubr
ins
shr
movs
cmp
test
out
add
loopne
out
fsubp
(bad)
sbb
cdq
mov
fcomp
retf
jns
leave
scas
popa
mov
pop
and
add
ss
add
xchg
enter
aaa
push
cwde
test
or
shl
or
cmc
sub
loope
push
mov
(bad)
xor
xchg
scas
mov
sub
sbb
ret
xchg
aam
xchg
add
leave
add
test
lods
mov
leave
call
nop
push
adc
mov
(bad)
dec
mov
adc
jg
shr
and
daa
(bad)
out
adc
cmp
and
imul
inc
xor
or
int3
loop
inc
icebp
sbb
cmps
fcomp
cli
jne
jge
add
jae
into
movs
push
jbe
mov
mov
xor
cmp
sbb
into
call
ds
test
(bad)
jp
mov
loop
ss
test
mov
adc
xchg
pop
pop
repz
inc
xchg
shl
in
iret
fs
rol
shl
xchg
adc
xor
js
test
sbb
call
and
call
dec
ror
cmps
jbe
and
rcr
mov
sahf
cmp
xchg
mov
out
mov
rcl
rol
(bad)
jge
outs
in
stc
or
aaa
test
sub
mov
pusha
and
dec
shr
(bad)
push
stc
sbb
(bad)
xor
pop
adc
shl
fdiv
retf
retf
sbb
enter
mov
rcr
xor
cmovbe
loop
cmp
pop
pop
mov
loop
push
loope
lock
sbb
aam
push
pushf
xchg
sbb
repz
stc
mov
(bad)
addr16
adc
xchg
fbstp
test
adc
out
cmp
pop
daa
pop
rcr
retf
adc
test
mov
(bad)
pop
pushf
pop
clc
push
and
mov
mov
or
inc
or
inc
leave
or
scas
imul
adc
cmp
out
adc
cmps
dec
jecxz
fbld
cld
stc
loope
jl
daa
sbb
mov
jno
(bad)
inc
jp
pop
or
mov
nop
push
test
cmp
mov
add
jns
mov
imul
test
cli
lds
jb
adc
dec
dec
lds
repz
and
shr
nop
test
adc
int3
lds
dec
cld
sbb
mov
rol
mov
xchg
lds
test
js
xor
push
jnp
cmp
jg
mov
mov
jmp
fadd
sbb
bound
aas
xchg
xor
jns
push
call
mul
xchg
sar
mov
out
fwait
jne
nop
pop
data16
add
adc
pushf
aas
jae
rcr
xor
jbe
pop
loop
fild
adc
fstp
xchg
xchg
adc
add
sub
ds
repz
hlt
mov
and
sti
shl
xchg
mov
(bad)
cli
out
mov
popf
movs
rcl
adc
data16
popa
outs
mov
cmps
xlat
ret
cmps
push
pushf
movs
retf
shl
or
push
mov
(bad)
int
iret
sbb
lahf
je
out
shr
pop
push
mov
adc
xchg
cmp
iret
jle
push
xor
sub
jo
or
std
mov
ins
in
jg
xor
call
sahf
mov
mov
imul
mov
aas
xor
mov
bound
test
pop
or
mov
test
jecxz
sbb
adc
je
data16
addr16
pop
dec
and
jne
or
push
pop
pop
dec
ins
gs
(bad)
leave
mov
repnz
push
xchg
bound
mov
in
jno
inc
jl
fnsave
add
and
dec
nop
out
sbb
dec
pop
jecxz
bound
loop
ret
xchg
fdiv
stos
call
dec
mov
cld
inc
inc
das
rol
cmps
rol
sbb
retf
cmp
bound
cmp
iret
push
or
sub
(bad)
pop
push
cli
in
push
mov
and
into
rcr
ss
and
sbb
cdq
scas
test
xchg
stos
call
aas
xchg
push
adc
mov
repnz
ret
loope
aam
push
push
dec
lods
out
mov
push
xor
mov
inc
repz
jbe
in
xchg
stc
xchg
adc
push
movs
nop
iret
or
cmc
call
fcmovne
mov
cmp
pop
sti
ins
(bad)
lds
and
(bad)
fidivr
ret
push
in
jmp
add
test
mov
ins
mov
xor
ins
std
gs
or
ror
dec
adc
push
iret
push
popa
out
ret
sub
inc
je
(bad)
jae
clc
jle
mov
ror
fucomi
mov
cmp
popf
xchg
ins
inc
jmp
jl
fadd
xchg
clc
mov
pop
(bad)
push
test
push
xchg
add
in
xchg
pushf
or
jmp
pop
stos
jg
xchg
xor
sub
pop
push
dec
in
je
retf
pop
inc
int3
xlat
mov
outs
cwde
or
inc
rcr
xchg
sysret
sub
mov
cmp
or
pop
or
and
mov
dec
sbb
ret
jmp
test
popf
xchg
xor
retf
pushf
ins
les
imul
jnp
push
icebp
fnclex
add
and
adc
dec
int
pop
mov
mov
mov
cmp
push
fstp
jns
test
repz
loope
(bad)
mov
mov
mov
sub
test
shr
push
cmp
push
loop
push
xchg
gs
into
sbb
outs
push
lock
addr16
xchg
fistp
pop
jo
sbb
(bad)
or
and
aam
jns
cmps
das
mov
sbb
pop
daa
hlt
mov
mov
imul
shl
fnsave
xor
in
sahf
adc
mov
or
call
adc
(bad)
ins
ins
mov
cwde
dec
ret
lods
lods
mov
cmp
fsub
scas
mov
addr16
mov
popa
leave
pop
cmp
jne
out
sti
inc
test
pushf
cmp
call
pop
adc
into
inc
test
mov
jecxz
sub
jmp
call
xchg
arpl
xchg
and
loopne
sbb
ror
fimul
sub
imul
adc
xchg
mov
dec
jle
je
jmp
cmp
xor
sbb
daa
or
fs
movs
push
or
inc
aas
cld
and
pusha
ss
mov
in
pop
jbe
push
aam
and
add
sub
and
jg
shr
mov
into
mov
imul
popa
mov
jmp
(bad)
aaa
clc
mov
fidivr
jl
mov
push
xor
cmp
ds
sub
shl
mov
mov
in
jp
(bad)
dec
or
mov
data16
fs
push
cwde
jno
adc
inc
std
mov
or
jns
dec
jmp
and
push
push
cmc
sub
inc
add
push
imul
jmp
jbe
or
push
frstor
inc
out
and
push
mov
sub
pop
je
xchg
sbb
addr16
sub
aaa
cmc
dec
inc
or
sub
mov
dec
in
dec
ins
out
fimul
adc
(bad)
popf
in
movs
ss
icebp
mov
xchg
pop
push
jp
sub
push
adc
push
clc
add
outs
xchg
mov
sub
outs
push
adc
jp
aaa
leave
mov
sub
iret
sbb
and
bound
jl
stos
push
fnstcw
adc
jmp
cmp
xchg
out
(bad)
aad
out
daa
sbb
or
xchg
add
mov
loopne
xor
jb
sbb
dec
pop
push
aaa
stos
cmp
test
les
dec
jp
hlt
pop
imul
cmp
add
rcr
xor
add
call
dec
ffree
sub
push
fcomp
add
cli
and
lods
mov
les
arpl
jge
bound
xor
repnz
push
xchg
test
mov
inc
mov
dec
aam
mov
mov
dec
mov
xor
daa
jnp
lahf
mov
jmp
jmp
cmp
jecxz
fwait
sbb
in
loopne
cmp
mov
add
dec
cmp
sub
cmp
outs
adc
(bad)
inc
sbb
enter
push
add
or
sbb
in
and
mov
lock
push
ficomp
mov
dec
jno
jb
cwde
fwait
pop
lods
add
jp
test
div
jl
push
push
push
test
sub
xor
aad
or
sbb
popf
mov
cmp
jmp
(bad)
lods
into
jle
ret
sbb
je
sub
imul
movs
cwde
mov
cld
shl
add
std
inc
stos
ins
xor
mov
inc
xlat
xor
and
jne
mul
dec
retf
adc
fcomip
lock
xchg
pop
add
mov
xchg
xchg
out
hlt
jl
arpl
daa
packssdw
jge
clc
mov
aad
cmps
xor
push
adc
cmp
and
pop
xchg
fs
push
inc
sti
push
inc
loop
ror
idiv
ins
mov
and
push
stc
fdiv
mov
dec
stos
jne
in
lock
cs
adc
add
ins
sbb
cmc
loopne
mov
clc
push
shl
lds
call
cmps
pop
sbb
adc
pop
ds
cmps
call
mov
jp
add
je
push
imul
leave
(bad)
dec
(bad)
pop
ins
test
or
jecxz
sub
inc
cwde
les
in
lds
scas
dec
mov
dec
dec
sbb
rcr
movs
(bad)
sbb
push
movs
loope
pop
popf
cld
sub
xchg
arpl
int
hlt
sbb
ins
xor
push
test
sub
loopne
mov
out
push
retf
add
pop
or
inc
enter
jmp
repnz
iret
jo
div
xlat
ror
mov
push
pop
imul
xchg
dec
push
cmc
int
mov
in
sbb
sbb
fistp
dec
xchg
(bad)
cld
push
fmul
mov
retf
or
cmp
aas
or
lods
ins
jo
fiadd
xchg
and
loop
mov
fisubr
push
retf
out
xor
adc
ret
test
push
inc
add
adc
or
pop
and
test
inc
pusha
cs
sub
jbe
ja
loop
cmp
aad
mov
sub
push
movs
daa
addr16
add
jb
inc
lea
jl
ja
or
in
cwde
sub
xchg
xchg
jp
in
cmps
inc
sub
push
mov
mov
sbb
mov
and
jl
sbb
inc
push
jle
fwait
aas
ret
cmp
(bad)
mul
mov
in
add
shr
sti
xor
adc
cld
sub
loope
mov
inc
mov
mov
add
mov
cmp
xor
scas
xlat
icebp
dec
ror
out
gs
mov
ret
jo
sbb
retf
push
popf
repnz
inc
dec
jmp
mov
push
js
push
fdiv
cmps
aam
cmc
sub
aam
test
adc
pop
push
mov
in
aas
adc
mov
ret
and
or
(bad)
cmc
cmp
dec
cli
nop
xlat
outs
nop
pop
inc
in
lea
add
pop
(bad)
cmc
mov
addr16
xchg
xor
push
xchg
fld
loopne
fisttp
scas
sub
call
popa
sub
out
scas
repz
sub
xor
dec
iret
sti
outs
dec
ret
pop
in
ret
dec
jp
pusha
adc
cdq
sbb
xor
mov
pop
out
test
xor
ins
or
sub
arpl
fs
shr
iret
adc
xchg
pop
loope
jbe
jg
stos
sahf
or
in
cdq
push
and
imul
mov
dec
mov
push
(bad)
jp
sbb
or
push
rol
lea
out
and
fwait
sbb
jl
(bad)
inc
sbb
sub
sub
push
movs
xor
jns
icebp
aad
xor
(bad)
inc
stc
sbb
jg
xor
cmps
retf
sub
(bad)
data16
xchg
add
cs
xor
xchg
mov
push
stc
int3
pop
(bad)
mov
and
shl
stc
mov
stc
push
add
push
dec
xchg
mov
leave
(bad)
mov
ror
aas
data16
fsub
(bad)
rol
frstor
ins
lock
pop
mov
fwait
popa
xor
or
mov
cmc
and
inc
xor
fstp
shr
in
dec
mov
lods
aas
mov
xchg
cmc
adc
pop
test
enter
dec
inc
(bad)
in
mov
jle
jbe
loop
jecxz
fs
jnp
aad
sbb
mov
inc
rcr
aas
and
mov
mov
test
adc
icebp
inc
stos
clc
ins
icebp
fisttp
fs
out
or
pop
fwait
aad
lea
imul
xchg
jecxz
push
mov
cwde
arpl
and
ins
xchg
add
fsubr
rcl
ret
pop
mov
rcr
mov
rcr
xor
jp
mov
push
or
jnp
push
inc
in
push
shr
retf
loopne
pop
sbb
(bad)
cs
js
sbb
dec
jne
retf
inc
movs
dec
add
push
adc
pop
bound
rcl
call
popf
pop
xchg
cmps
hlt
cdq
out
sub
jge
test
jle
sub
sbb
cdq
es
popf
ja
lods
std
mov
mov
push
jle
push
jne
or
or
std
stc
push
adc
out
xor
sub
add
pop
stos
pop
stos
out
jns
xchg
ja
aad
call
enter
in
mov
and
cmp
pop
loop
gs
stos
jp
ins
inc
xchg
gs
fs
jge
mov
in
and
mov
movs
ja
jne
mov
jae
jmp
test
add
push
jb
int3
imul
add
xchg
inc
or
and
test
pop
inc
sbb
sbb
enter
mov
pop
jne
cmp
rcr
mul
(bad)
in
clc
and
or
sub
sahf
iret
enter
lock
and
mov
outs
fnstsw
repnz
mov
out
jnp
ret
retf
dec
inc
aas
loop
adc
(bad)
jmp
fcomp
nop
pop
out
cmp
out
push
jg
jge
adc
dec
lods
movs
test
movs
in
(bad)
and
push
sbb
xor
test
mov
push
xchg
jns
mov
jnp
pusha
xchg
clc
mov
pop
pop
and
add
xchg
rol
out
fmul
jb
add
push
in
inc
mov
je
mov
ja
jns
or
dec
adc
int
lods
and
xchg
push
xchg
mov
clc
push
loop
cmp
in
mov
jp
and
adc
adc
ins
loopne
sbb
cmc
aas
mov
cmp
fs
in
jg
add
lods
cmp
inc
rcr
or
sahf
xor
add
scas
(bad)
addr16
imul
xor
sbb
push
in
and
inc
enter
cdq
sub
call
gs
inc
(bad)
idiv
pop
jne
popa
jo
and
fimul
add
loop
or
aam
cmps
mov
push
pop
test
dec
pop
mov
call
lods
test
jbe
inc
xor
bound
popf
addr16
in
mov
fisubr
mov
leave
mov
dec
adc
fs
aam
xor
mov
out
and
xchg
mov
xor
(bad)
lods
faddp
inc
mov
call
add
push
(bad)
test
int
movs
or
mov
retf
push
jns
clc
test
fmul
cmc
add
dec
xchg
ins
pop
sbb
loop
mov
adc
fnstcw
ret
xchg
ret
jp
jae
int3
add
int
xchg
dec
mov
adc
xchg
push
mul
add
jmp
or
scas
sbb
out
es
(bad)
out
adc
push
sbb
repnz
dec
loopne
pop
retf
add
lea
ins
es
nop
sbb
xchg
std
jmp
loop
add
adc
mov
into
mov
adc
mov
add
jns
dec
sti
gs
mov
outs
mov
or
xchg
cmp
xchg
outs
add
xchg
scas
enter
dec
xor
push
dec
rcr
sbb
cmps
dec
shl
or
fiadd
mov
inc
push
retf
pop
scas
into
adc
scas
sbb
and
inc
sub
sub
div
mov
and
call
push
idiv
mov
js
dec
pop
and
and
imul
xchg
add
jle
push
adc
xor
das
std
outs
stc
arpl
jo
inc
pop
pop
scas
cmp
jmp
scas
inc
test
icebp
nop
jmp
and
idiv
mov
xchg
gs
cmp
retf
aam
and
nop
adc
sti
sbb
inc
add
sub
test
(bad)
dec
jp
pop
or
(bad)
adc
stos
dec
inc
dec
fdivr
push
lea
or
pop
fadd
xlat
jle
out
pop
nop
cld
or
sbb
cdq
pop
mov
loopne
cwde
jnp
push
jmp
mov
inc
xchg
inc
in
jne
imul
pop
pusha
sbb
sub
xchg
imul
and
push
xchg
rcl
cdq
inc
xlat
and
mov
int
sbb
sub
ja
push
sahf
add
das
scas
movs
mov
mov
inc
push
lahf
stos
inc
inc
fdiv
adc
jnp
xchg
je
in
lahf
aaa
ss
xchg
mov
loop
lods
vmaxps
std
nop
(bad)
xchg
mov
clc
add
shl
cwde
lahf
inc
mov
add
cmp
aad
xchg
in
pusha
jmp
cmps
(bad)
retf
jo
dec
or
addr16
sbb
sbb
test
pop
push
adc
jg
jne
mov
ja
adc
pop
sub
jecxz
xchg
or
jb
in
mov
cld
das
fbld
jbe
das
lahf
jp
scas
xchg
push
pop
in
sbb
nop
stc
rcl
cmp
(bad)
push
les
xor
ds
sub
dec
nop
sbb
fnstcw
inc
dec
xchg
add
popa
out
out
or
xchg
pop
adc
adc
pop
add
das
je
mov
(bad)
(bad)
mov
das
fisubr
(bad)
mov
outs
pop
xchg
cmps
cdq
mov
mov
mov
mul
test
inc
dec
push
add
adc
arpl
and
mov
in
bound
push
inc
cmp
jp
dec
jno
sti
fidivr
or
retf
inc
test
stc
mov
pop
push
frstor
cmps
call
icebp
nop
leave
movs
jb
clc
or
mov
aaa
and
jb
in
adc
xor
sbb
xor
cmp
cld
stc
xchg
sbb
push
dec
fwait
push
adc
xchg
adc
pop
pop
pop
loopne
dec
push
addr16
ins
mov
mov
sar
fild
rep
data16
xor
data16
push
push
jae
cmc
nop
cmp
stos
xchg
int3
fstp
je
xor
data16
mov
ins
fnstcw
sbb
out
cmp
pop
cmp
sbb
gs
test
pop
xor
cmc
test
dec
iret
mov
mov
(bad)
cmps
test
xchg
loopne
xor
int3
test
ins
fist
int
addr16
call
je
aaa
pop
push
inc
cmp
push
fwait
sbb
inc
push
xchg
lea
inc
das
mul
movs
add
and
cmp
pop
dec
mov
and
adc
push
lahf
pop
aaa
dec
xor
scas
cmp
xor
lds
(bad)
repz
aad
bound
fsub
sub
sub
mov
and
popa
les
fiadd
jmp
jnp
jge
mov
movs
sbb
ins
jbe
mov
std
xchg
xor
ins
int
ficom
jmp
(bad)
lods
lods
addr16
push
dec
mov
and
dec
push
jbe
xor
mov
adc
adc
mov
aas
not
(bad)
loop
stos
dec
mov
jmp
pop
setne
sbb
imul
(bad)
and
ja
add
inc
dec
or
bound
stos
mov
cdq
sbb
test
outs
loop
pop
dec
mov
adc
(bad)
in
xor
ret
shl
xchg
xor
lods
cld
or
or
mov
cmps
retf
xor
sbb
js
adc
icebp
inc
xor
dec
(bad)
mov
sub
test
or
cs
add
add
into
mov
iret
jecxz
in
mov
and
push
pop
or
bound
add
jp
cmp
mov
cmps
add
mov
test
lea
cmp
inc
pop
outs
es
idiv
psrlw
call
cmp
cmp
shl
(bad)
jbe
jae
jge
je
mov
test
mov
sahf
sbb
mov
jecxz
dec
test
out
loopne
and
cmp
lods
dec
cmps
push
mov
mov
ja
adc
retf
in
add
mov
aam
inc
sub
and
std
cmc
lods
sbb
ins
pusha
pop
add
fld
jae
mov
jb
mov
sbb
push
mov
cmp
shl
(bad)
in
mov
popa
js
fild
repnz
retf
cmp
mov
int3
(bad)
pop
cmp
pushf
jp
xchg
(bad)
mov
(bad)
in
push
bound
fimul
mov
and
jb
fs
out
stc
or
jge
or
mov
or
rol
dec
in
(bad)
js
loopne
into
xor
mov
and
outs
out
push
xchg
rcl
push
xchg
xchg
test
leave
and
xor
dec
xor
fmul
xchg
xchg
or
push
adc
jb
xchg
int
mov
sub
outs
mov
dec
addr16
jmp
not
cmp
mov
mov
loopne
xchg
popa
mov
into
inc
inc
xor
ss
mov
dec
stc
out
and
pop
cmp
mov
sub
les
aaa
mov
and
sub
in
push
cmp
stos
xchg
ds
sbb
ficom
mov
pop
push
ja
cdq
add
mov
mov
cmp
adc
test
mov
clc
jne
inc
test
out
movs
adc
(bad)
aad
cmps
fild
or
addr16
mov
aad
out
adc
sbb
(bad)
xchg
sbb
mov
pop
(bad)
adc
or
out
in
(bad)
js
retf
ficomp
xor
dec
inc
push
mov
dec
lahf
mov
xchg
icebp
out
in
test
ins
add
aad
fisubr
fsubp
mov
cmps
cmp
xor
xor
inc
jae
dec
adc
cmp
cmps
call
sub
mov
mov
(bad)
loope
add
mov
add
and
mov
pop
push
or
mov
xchg
jmp
outs
cmc
adc
clc
fldcw
push
push
inc
sub
dec
push
test
movs
test
aam
mov
add
imul
aas
cmp
out
stc
mov
inc
sbb
inc
inc
mov
cmps
jle
(bad)
push
jge
ret
aaa
ror
test
adc
movs
and
mov
not
push
mov
cmp
jmp
shl
sub
and
fimul
xchg
cmp
sub
adc
jmp
mov
popf
ds
jne
mov
jb
or
test
test
pop
jbe
aas
aam
in
shr
in
rcl
pop
inc
inc
sbb
clc
enter
and
stos
cmp
ins
push
dec
cmp
xor
scas
sbb
push
dec
fnstcw
fisub
ret
scas
enter
(bad)
inc
lods
add
inc
mov
jl
push
call
imul
xchg
enter
pop
add
adc
gs
mov
pop
retf
mov
mov
mov
jp
mov
jge
stc
sbb
mov
cmp
xor
scas
push
repnz
ret
inc
sub
jmp
or
sub
inc
sahf
mov
xchg
retf
inc
imul
es
sbb
pop
or
jb
sar
jp
xchg
leave
popf
pop
pop
pop
fsubrp
mov
rol
fidivr
or
mov
imul
dec
mov
(bad)
jl
adc
or
(bad)
mov
mov
sub
js
int3
mov
cmp
aaa
inc
or
(bad)
adc
sbb
and
out
call
xchg
push
hlt
mov
add
into
sub
dec
data16
mov
push
adc
inc
aaa
sar
adc
mov
lfs
xchg
in
jmp
mov
lds
mov
mov
xchg
(bad)
jle
jp
dec
in
dec
jg
sub
mov
aas
mov
fcom
in
dec
inc
pop
push
xchg
outs
mov
lds
scas
jo
data16
jo
pop
pop
test
ds
scas
call
lock
and
clc
shr
fbld
arpl
js
imul
lea
push
push
add
dec
in
adc
shr
push
cmps
(bad)
mov
or
aas
push
out
test
aas
sbb
mov
sahf
je
int3
xchg
lods
stos
pop
shl
jecxz
jge
xor
push
int3
mov
fidiv
loopne
pop
pop
ds
sbb
std
push
mov
dec
mov
add
pop
test
xchg
stc
xchg
sbb
fld
lea
adc
test
stos
add
lea
mov
mov
stc
bound
dec
sti
inc
dec
pop
cmp
push
mov
es
adc
not
lds
cmp
fistp
sti
inc
shr
outs
jne
adc
jae
xchg
sub
js
pop
or
(bad)
loopne
mov
cmps
je
iret
adc
leave
dec
dec
jnp
loop
pop
sar
sbb
inc
pop
dec
and
cmp
cmp
xchg
mov
nop
leave
cld
xor
outs
in
pop
pop
sahf
sub
mov
jns
dec
pushf
pop
sub
cs
enter
(bad)
jecxz
push
scas
inc
push
in
xchg
pop
push
mov
rcl
cli
(bad)
adc
enter
cmc
pop
lea
dec
jns
(bad)
sub
xchg
jb
ins
pop
fidivr
push
xor
xchg
daa
add
fwait
scas
pop
jnp
popa
xor
retf
(bad)
mov
fiadd
mov
jl
jo
jns
ss
clc
sub
mov
dec
loop
xor
sbb
test
out
aam
retf
fsubr
jnp
shl
push
xchg
ss
fisttp
add
pop
jp
out
or
fst
fs
inc
pop
inc
fidivr
aaa
clc
xor
ret
cld
push
add
or
mov
pop
arpl
mov
ins
xor
xchg
mov
xor
outs
hlt
cwde
jecxz
scas
daa
out
jmp
mov
push
stos
jp
add
sbb
mov
jge
out
inc
cmps
jne
dec
cmps
in
adc
(bad)
es
nop
lds
into
pushf
imul
mov
and
xchg
jno
mov
jle
or
movs
lods
xchg
inc
jge
aad
jae
in
mov
leave
cmp
xchg
jecxz
lods
push
jge
ja
retf
add
dec
daa
sub
mov
xchg
inc
jae
fst
iret
push
hlt
out
mov
sub
stc
dec
pop
dec
xor
xchg
sbb
jp
dec
cmc
xor
sbb
jne
mov
aas
jbe
pop
test
mov
sub
cmp
cwde
mov
sbb
pop
jnp
pusha
fld
or
fdivr
fsub
les
adc
mov
inc
mov
test
cmc
mov
in
or
inc
jle
pop
jl
xchg
pop
pop
shl
mov
jo
and
mov
jns
jle
test
mov
test
ins
retf
mov
fstp
cmp
int3
inc
mov
icebp
add
das
out
xchg
rep
push
or
lock
les
fisubr
jns
mov
stc
cmp
mov
pop
addr16
aaa
lods
mov
xchg
sub
rol
cmc
adc
add
or
mov
(bad)
inc
cmps
and
imul
dec
xchg
push
mov
sbb
(bad)
sbb
cld
jecxz
jnp
test
xchg
retf
mov
mov
repnz
add
mov
mov
or
and
jmp
ret
sti
js
jecxz
lods
and
sbb
stos
pop
mov
cld
enter
push
mov
daa
in
icebp
lods
xor
mov
out
adc
gs
stc
pop
xor
jmp
push
pop
fcom
xchg
fld
push
adc
sbb
fs
xor
clc
jg
call
xchg
fs
lods
sub
je
out
outs
call
push
loopne
inc
js
das
loop
dec
rol
aam
vmulpd
or
adc
sub
mov
fsub
mov
(bad)
mov
pop
fwait
loop
ret
jae
popa
into
inc
sbb
pop
loopne
add
ins
push
and
dec
test
pop
push
in
cbw
dec
mov
sub
in
xchg
push
or
push
xor
adc
ss
mov
pushf
aaa
or
jnp
(bad)
ins
(bad)
mov
xchg
into
sahf
es
mov
adc
and
mov
out
aad
or
inc
push
inc
test
dec
mov
int3
fcmovnu
adc
jecxz
mov
imul
iret
mov
add
repnz
push
inc
not
dec
push
cmp
fsub
jg
call
cmp
nop
xor
out
fsubr
(bad)
mov
and
call
jecxz
sbb
call
or
mov
fwait
push
or
(bad)
loop
push
rcl
cmp
sbb
adc
lock
push
popa
fidivr
or
mov
movs
(bad)
fs
mov
adc
add
and
xchg
xchg
fidivr
fdiv
cdq
mov
sub
adc
or
xchg
jb
fdiv
les
mov
sub
jmp
ss
imul
outs
dec
push
aaa
cmp
pop
adc
sub
daa
jmp
inc
cmp
retf
adc
es
push
xchg
out
faddp
mov
and
jns
out
ficom
inc
fcom
or
or
(bad)
jge
dec
outs
repz
pop
adc
js
test
enter
mov
sub
in
inc
cmp
(bad)
cmp
iret
dec
add
push
aam
inc
xor
rcl
repz
movs
sub
sub
stos
les
sub
jb
ins
jmp
cmps
scas
jno
pop
adc
mov
imul
jno
adc
fist
adc
or
outs
clc
adc
push
std
test
push
mov
sub
outs
jle
lds
sti
sbb
push
mov
fidivr
cmp
xor
cmp
and
lahf
jle
pop
dec
repnz
bound
fadd
fwait
mov
mov
fdivr
mov
out
pop
dec
arpl
out
in
push
fwait
shl
das
out
xchg
mov
mov
(bad)
arpl
add
dec
sub
std
mov
or
lods
jg
mov
aad
sti
iret
retf
mov
xchg
jmp
sub
push
dec
xchg
jg
xor
shl
cli
sbb
and
repz
and
add
xor
mov
pop
mov
bound
sub
ror
mov
sub
pop
inc
test
cmp
or
push
int3
cmps
xchg
inc
mov
ror
scas
add
ds
out
push
mov
pop
and
loop
dec
xor
pop
int
sbb
and
aad
adc
or
mov
pop
mov
dec
mul
xchg
or
pushf
ficomp
and
ret
xchg
ret
outs
sbb
add
adc
mov
repz
inc
pushf
pop
push
push
dec
pop
sbb
sbb
dec
icebp
arpl
cld
int
(bad)
pop
pusha
push
dec
add
push
popa
dec
(bad)
sti
sub
or
mov
aad
mov
inc
ror
pop
fnstenv
dec
and
add
aad
rcl
cld
leave
add
or
addr16
or
out
es
mov
popf
adc
leave
stos
outs
xor
mov
mov
test
jo
and
ins
in
int3
jno
fstp
sub
lahf
cmp
jl
adc
mov
xor
cmc
aaa
mov
inc
mov
or
xor
scas
pop
retf
in
retf
rol
loope
cmp
xor
inc
je
dec
das
dec
fld
cs
je
pop
push
push
pop
xchg
inc
mov
pop
add
sub
test
adc
leave
icebp
sbb
ficomp
(bad)
into
sub
sub
cmovb
scas
or
lds
scas
shl
cmc
or
iret
push
jns
aam
hlt
lds
push
mov
inc
scas
or
call
mov
mov
mov
add
sbb
test
mov
aaa
sbb
pop
or
add
sbb
adc
jecxz
add
adc
mov
mov
dec
(bad)
aam
mov
lahf
cmc
push
add
dec
call
and
loop
sub
pop
mul
xchg
movs
jecxz
fistp
jle
mov
pop
mov
xor
ret
mov
xor
jo
mov
adc
stos
pop
xchg
pop
sub
les
jns
sar
outs
adc
mov
add
mov
imul
or
call
test
lea
jp
call
nop
imul
in
push
inc
js
out
mov
es
xor
addr16
retf
xor
cmc
fisub
enter
arpl
arpl
in
add
sub
ins
dec
and
mov
push
xlat
xor
mov
stos
rcl
xchg
fstp
popf
sub
mov
dec
add
repnz
rol
push
adc
leave
dec
sbb
retf
and
into
out
inc
dec
push
inc
out
aam
dec
pop
add
in
jmp
imul
sub
ss
xchg
mov
pop
in
pop
push
sub
mov
jle
and
mov
imul
ret
hlt
mov
and
xchg
pop
jecxz
imul
int
push
mov
xor
mov
jb
iret
jae
std
mov
pop
test
in
out
mov
xchg
imul
dec
inc
inc
dec
daa
aaa
loope
inc
test
lock
out
test
inc
mov
and
fbstp
dec
shr
ins
mov
movs
out
outs
loopne
mov
or
mov
and
adc
mov
aam
or
push
cld
movs
jnp
pop
mov
scas
adc
xor
es
pushf
movs
lods
pop
mov
cdq
push
in
adc
sub
ror
and
repz
cmp
sbb
push
fbld
xor
pop
xchg
div
and
jnp
add
or
pop
xor
ficom
add
fdiv
add
xor
adc
cmp
jmp
pop
or
enter
loopne
mov
xor
xor
loop
mov
icebp
ds
push
leave
out
fucomip
sbb
scas
fld
xchg
and
fmul
rol
in
jae
stc
adc
outs
in
xchg
out
int
mov
retf
lods
xchg
(bad)
sti
adc
stos
cmp
ss
xchg
mov
pop
(bad)
mov
xor
cmp
call
test
rcr
jb
mov
mov
xor
test
sub
inc
(bad)
cwde
repz
fcom
lods
out
leave
jo
fld
cmp
push
out
in
mov
inc
cmp
neg
test
aaa
data16
mov
ds
clc
out
mov
push
int
push
shl
xchg
rdmsr
add
lock
aam
jmp
bound
push
imul
std
add
inc
out
dec
int
push
mov
cmp
shl
je
mov
jmp
xchg
sbb
bound
mov
xchg
add
fs
in
xchg
hlt
imul
push
adc
push
outs
xor
mov
outs
or
sub
xor
adc
add
test
inc
fistp
lock
xchg
repz
xor
mov
mov
sub
das
ret
push
movs
sub
icebp
ins
inc
push
jno
xor
or
mov
mov
int3
jbe
daa
mov
sbb
les
js
xchg
push
inc
mov
and
mov
scas
sbb
dec
sub
xor
mov
mov
pop
cs
adc
shl
test
out
imul
int
(bad)
adc
cmc
cli
ret
jle
jne
fwait
mov
popf
jge
fcmovu
xor
push
xchg
mov
inc
xchg
icebp
sub
sbb
test
push
adc
aad
pop
mov
push
mov
test
cmp
pop
mov
push
push
cdq
lea
jl
jmp
pop
mov
xlat
push
xor
mov
push
push
dec
push
sar
fldcw
inc
ret
mov
push
mov
cmp
push
mov
sub
in
add
mov
pusha
push
(bad)
adc
scas
clc
jle
rcr
(bad)
dec
out
ret
or
lock
pusha
repz
scas
rol
popf
jbe
fucomi
rcl
clc
sbb
aaa
retf
or
jno
daa
shl
add
data16
pusha
pushf
jp
(bad)
aas
mov
std
(bad)
fidivr
xor
or
rcl
pop
cmp
out
pop
das
idiv
inc
or
(bad)
sub
pop
push
pushf
aaa
mov
mov
test
inc
in
lock
movs
xchg
sbb
mov
imul
dec
gs
es
imul
inc
stc
or
scas
ja
adc
lds
fwait
test
inc
shl
ffree
std
mov
sub
es
add
sub
mov
or
add
movs
test
xchg
push
fs
sub
pushf
inc
fadd
fidivr
lock
sub
adc
adc
jmp
es
shl
nop
xor
icebp
xchg
cli
pop
movs
xchg
cmp
(bad)
sbb
push
inc
xchg
or
scas
jae
mov
mov
ja
aas
sar
lahf
pop
inc
cld
pop
jbe
push
pusha
push
xchg
sub
dec
lods
enter
inc
mov
inc
lods
jecxz
call
mov
retf
xor
std
add
mov
or
enter
and
fisubr
inc
pop
hlt
mov
pop
dec
adc
stos
aaa
mov
idiv
mov
rcl
pop
add
or
pushf
(bad)
push
jg
retf
inc
mov
lds
sti
xchg
into
cmp
gs
iret
shl
pop
cmps
add
fmul
repnz
adc
xchg
shr
test
pop
js
dec
xor
mul
or
sub
mov
mov
lahf
repnz
push
test
pop
ja
push
or
push
mov
aad
addr16
into
ds
bound
pop
nop
mov
iret
das
sub
pop
es
adc
xchg
and
(bad)
push
push
jp
rcr
mov
cmp
inc
sbb
push
dec
in
push
stos
jmp
inc
leave
mov
in
call
int3
mov
sbb
mul
xlat
xlat
mov
into
cli
(bad)
mov
sub
addr16
outs
aad
mov
(bad)
ror
fst
jb
cmp
add
mov
cmp
xchg
out
shl
push
pop
sbb
mov
dec
loop
jne
dec
fidiv
fldl2t
bound
xor
and
xlat
out
xchg
loope
test
jb
iret
cli
jge
push
shl
enter
and
cdq
stos
add
jmp
mov
outs
inc
scas
cmc
mov
icebp
loopne
gs
in
push
int3
xchg
loope
aaa
mov
adc
jl
xchg
jl
mov
lock
iret
out
mov
icebp
rol
lahf
sbb
jno
push
cvtps2pd
inc
xchg
call
push
ins
shl
das
je
and
xor
and
add
retf
add
adc
jmp
out
sub
inc
pop
js
shl
inc
fnstsw
cli
cmp
into
xor
stos
ret
std
push
js
fwait
mov
cmp
adc
pushf
pop
retf
jecxz
dec
iret
(bad)
pop
jle
cld
stos
mov
loop
add
bound
push
push
jecxz
mov
jo
(bad)
imul
retf
sbb
aas
or
cmc
call
dec
mov
arpl
adc
mov
jmp
push
mov
push
jnp
mov
or
mov
mov
push
sub
imul
sti
jno
(bad)
mov
sub
xlat
pop
shl
cmp
repz
(bad)
pop
inc
adc
sub
test
aas
mov
das
jne
(bad)
sbb
gs
cdq
and
fstp
mov
sbb
pop
jl
jbe
or
scas
outs
inc
mov
mov
push
pop
push
loop
dec
movs
pop
mov
dec
std
dec
cmp
jns
jmp
jl
out
push
inc
cmp
mov
in
rcl
rcl
xor
fisttp
and
cmps
fdivr
inc
aam
xor
mov
in
movs
inc
mov
sbb
test
dec
fidiv
cmp
lods
dec
mov
pop
imul
(bad)
xor
popf
aas
jnp
add
js
jmp
push
sub
pop
out
xor
or
data16
jmp
movs
idiv
adc
retf
leave
adc
aaa
aad
mov
cmp
jecxz
loopne
dec
sahf
xor
ds
xchg
mov
push
push
xchg
dec
dec
rcr
das
mov
add
push
mov
mov
pop
adc
in
jns
clc
ror
ret
cmp
out
bound
pusha
adc
cli
ins
dec
pop
outs
pop
mov
in
nop
outs
sbb
fidiv
jne
jb
mov
sbb
add
adc
pop
enter
sti
mov
enter
fisttp
xchg
nop
out
cmp
ror
fisubr
inc
ins
retf
shl
mov
sub
iret
out
fwait
int3
mov
sti
iret
ins
jno
(bad)
out
adc
adc
lods
inc
sub
aam
je
sbb
cmp
cmp
add
mov
push
les
jle
popf
pusha
pop
push
in
imul
mov
pusha
mov
pop
push
fs
and
pop
(bad)
lods
mov
loopne
or
nop
mov
fwait
(bad)
dec
ins
icebp
mov
mov
inc
adc
jge
mov
push
(bad)
dec
daa
jge
and
jl
pop
or
(bad)
mov
lahf
adc
or
xchg
popf
bound
inc
mov
out
test
mov
fidiv
xor
pop
daa
mov
jmp
movs
xor
jbe
out
pop
or
das
inc
push
js
fisub
mov
xor
mov
cs
imul
xor
lock
mov
fist
inc
sbb
pop
mov
mov
and
rep
lods
jne
in
fisttp
sub
pop
adc
push
nop
call
add
mov
and
inc
scas
movs
leave
cmp
mov
add
loope
or
mov
ret
xchg
dec
pop
jl
inc
(bad)
inc
test
lods
mov
aas
xor
das
and
mov
daa
jno
dec
mov
lahf
dec
mov
inc
scas
(bad)
push
dec
pop
mov
jb
cmp
repnz
jno
mov
mov
xor
sub
xchg
push
inc
mov
pop
sahf
ins
add
adc
stc
pop
stos
push
add
pop
pop
jbe
sbb
test
(bad)
xor
and
jg
pop
fs
outs
pop
jnp
mov
xchg
cmp
pop
punpckhdq
aad
test
cmp
inc
jbe
sbb
or
rol
leave
or
call
mov
or
xchg
jecxz
iret
stos
shl
(bad)
sub
(bad)
add
mov
es
dec
out
test
ja
add
enter
mov
add
addr16
or
add
jg
mov
gs
sub
shr
ror
adc
aaa
lahf
cs
jmp
mov
or
lahf
dec
test
jne
push
inc
enter
cmp
mov
js
and
mov
js
nop
push
add
stc
cmp
xchg
shr
jecxz
fsubr
cld
movs
inc
cs
cmps
fcom
pop
sbb
sbb
push
add
retf
mov
call
dec
mov
daa
lods
dec
test
xchg
fdivr
jbe
loope
or
dec
fnstcw
test
fmul
out
loope
cmc
xchg
sbb
cmp
and
fist
sub
mov
pop
xchg
call
push
js
arpl
jmp
popf
xchg
cmp
inc
test
call
add
xchg
scas
neg
lods
cli
pop
cmps
iret
hlt
push
clc
jno
out
mov
into
in
sub
mov
jo
jle
or
adc
cmp
xchg
fadd
or
pop
jmp
scas
inc
add
lock
imul
add
cmc
mov
shr
cmp
imul
jg
sti
xlat
pop
push
gs
popf
lahf
add
jp
mov
shr
or
int3
push
(bad)
es
out
test
mov
mov
mov
sub
in
sar
hlt
test
fstp
call
imul
(bad)
cld
addr16
ffree
xchg
aas
test
lock
rcr
imul
mov
sahf
(bad)
or
push
push
pusha
mov
leave
pop
in
inc
ficom
push
retf
or
cli
inc
push
xor
out
jmp
int3
neg
lahf
push
mov
addr16
push
jle
mov
pop
pop
sbb
ret
cmp
xlat
out
xor
jmp
mov
push
test
inc
pop
jb
clc
nop
fidiv
call
mov
mov
pop
pop
dec
mov
pop
popf
push
je
(bad)
inc
fs
(bad)
xchg
or
mov
cmp
inc
sahf
sub
out
sahf
repz
push
xchg
dec
addr16
icebp
shl
add
in
sub
out
or
mov
mov
push
pop
call
xor
les
js
out
mov
ds
sbb
retf
inc
jno
xchg
jmp
mov
cs
add
mov
gs
xchg
mov
gs
iret
mov
cwde
push
or
shr
inc
push
inc
cli
rcr
fsubr
mov
sub
in
bound
mov
fwait
ror
cmp
mov
jg
push
jb
push
dec
xor
aaa
and
enter
int3
fmul
loopne
mov
fnstenv
push
mov
or
in
dec
cmp
jl
into
icebp
js
sub
fidivr
xor
xchg
adc
fcom
mov
xor
mov
and
das
dec
pop
aam
inc
bound
jmp
and
data16
xor
int3
aas
int
movs
sbb
push
pop
ins
sub
imul
jg
xor
ret
arpl
ds
stc
dec
sbb
lock
add
cdq
inc
or
les
stos
push
push
icebp
loope
add
fist
out
mov
repz
bound
pop
pusha
jle
(bad)
nop
or
cs
pushf
jo
jne
ja
ins
out
(bad)
in
sbb
push
and
adc
adc
and
or
outs
mov
scas
mov
and
mov
dec
cmp
cmc
test
dec
jo
std
mov
scas
adc
lds
nop
push
dec
mov
jno
cmps
sub
lahf
sub
iret
hlt
mov
pop
inc
jno
push
sbb
test
call
xchg
aad
xor
clc
xor
addr16
and
xor
push
mov
inc
ss
adc
mov
mov
pop
leave
push
ss
xchg
fisttp
pop
add
pop
mov
out
enter
adc
xor
js
imul
mov
push
add
fbstp
fdivr
sti
gs
cmp
icebp
xchg
sub
repnz
(bad)
gs
adc
mov
xchg
fwait
ret
sbb
imul
mov
pushf
dec
dec
cmp
jmp
lock
mov
lods
cs
sbb
mov
cmps
imul
add
dec
lea
and
xchg
mov
aas
aaa
outs
pop
ffree
push
sub
mov
ds
sbb
pop
sub
xor
mov
loop
jge
test
jge
and
sbb
je
dec
cmp
xchg
add
xchg
sub
clc
leave
mov
xchg
mov
cmp
lods
or
test
pop
iret
rcl
sbb
shl
ror
(bad)
stc
jl
push
mov
adc
cmps
pushf
(bad)
jnp
out
pop
pop
icebp
mov
pop
mov
or
int3
pop
dec
out
jnp
imul
sbb
and
mov
adc
daa
mov
imul
ret
repz
dec
test
cmps
xchg
dec
jne
xor
pop
data16
cmp
add
adc
test
xchg
jbe
fld
add
mov
or
sti
push
add
adc
xchg
push
adc
inc
test
mov
dec
out
scas
mov
cmp
xchg
cmp
sar
pop
ins
cmp
dec
js
stos
pop
ds
inc
xchg
test
(bad)
aas
cmp
mov
lods
add
retf
data16
jmp
push
xchg
shr
mov
or
lods
cmp
pop
fsub
and
push
xchg
push
pop
and
(bad)
addr16
sbb
sbb
xor
xchg
dec
push
and
int3
repnz
push
jo
inc
jge
sti
(bad)
jo
inc
mov
add
aas
or
mov
shl
(bad)
push
mov
mov
mov
aaa
loope
sub
add
jle
or
add
dec
cmp
stos
mov
addr16
repnz
xchg
sahf
push
stc
pop
sub
in
xlat
out
add
sub
mov
and
clc
push
int
outs
mov
dec
inc
cwde
stos
cdq
out
jl
int
sbb
mov
pop
rcl
dec
cmps
nop
shl
call
adc
clts
jbe
xchg
bnd
push
push
hlt
add
push
add
pop
pop
mov
gs
repnz
cmp
mov
test
js
mov
pop
enter
inc
data16
pop
inc
adc
push
mov
add
cmp
outs
or
movs
xor
add
push
cmps
xchg
scas
iret
mov
xchg
pop
ret
xor
cmps
mov
popa
fwait
or
out
imul
hlt
xchg
lds
jp
mov
dec
retf
dec
add
int3
sub
or
mov
pushaw
xchg
jl
in
xor
iret
shl
mov
xor
mov
loopne
or
loop
adc
repz
pop
inc
xlat
add
es
and
std
idiv
inc
iret
push
icebp
clc
push
or
ins
jp
jmp
loop
mov
push
pushf
gs
sbb
inc
test
retf
xor
jnp
retf
mov
pop
loope
jb
mov
retf
lahf
ret
jno
mov
sub
add
jae
and
shr
ds
in
call
ins
lods
inc
in
xor
push
nop
sbb
push
fistp
lea
arpl
ret
inc
inc
lock
mov
shr
div
popf
mov
lds
and
mov
dec
sub
cmp
rol
dec
jmp
fdiv
xchg
jg
leave
fsubr
mov
xor
cwde
and
xchg
sbb
hlt
rcr
mov
dec
nop
fxtract
and
mov
cmps
push
fistp
mov
int3
pop
movs
add
or
or
and
inc
aam
pusha
adc
jbe
jns
mov
mov
loope
fs
mov
in
shr
xor
loop
bound
es
test
fisttp
sbb
xchg
and
shl
pop
ins
xor
ret
inc
gs
cmp
inc
mov
push
mov
sahf
in
clc
push
cwde
daa
mov
ret
pop
aam
mov
push
inc
push
xor
fwait
mov
mov
pop
pop
loop
loope
add
into
jle
add
jle
loopne
xchg
dec
push
(bad)
jne
mov
sbb
xor
mov
jle
nop
sbb
xor
push
mov
jecxz
nop
push
jle
inc
inc
aas
mov
popa
sub
dec
pop
subps
lds
add
pop
mov
xchg
push
xchg
movs
neg
fwait
mov
lock
adc
or
push
ficomp
jp
popf
hlt
or
or
rcl
dec
jmp
push
push
sbb
int
test
add
jbe
mov
cmp
adc
test
xchg
bound
cmp
dec
jge
push
push
and
xchg
and
mov
enter
gs
sbb
add
add
movs
in
pop
pop
int3
scas
xchg
inc
aaa
test
pop
int
xchg
mov
sbb
xchg
aas
or
mov
(bad)
inc
sbb
mov
jle
mov
or
pop
div
and
movs
push
pushf
neg
add
cmp
xor
add
sub
jnp
clflush
add
add
aaa
shl
jo
xchg
push
mov
mov
arpl
xor
pop
and
mov
push
ror
out
adc
lods
push
cmp
xor
stc
rcr
(bad)
nop
cmp
test
sahf
stos
div
ret
mov
mov
add
popa
shr
lods
cmps
push
pop
jp
jno
(bad)
out
int3
jbe
sub
add
stos
les
sub
aaa
dec
push
jmp
dec
adc
and
push
jns
pop
imul
loop
add
pop
in
dec
shl
xor
popa
xor
jge
dec
punpckhwd
jne
addr16
mov
dec
ja
call
and
xchg
cld
les
pop
ja
mov
stos
push
jge
push
ins
xor
jle
lea
xor
iret
xchg
inc
jmp
out
xchg
xor
mov
cmp
rcl
pushf
hlt
xchg
xchg
idiv
dec
cmc
aad
mov
mov
mov
push
or
or
lods
sbb
out
push
inc
adc
mov
out
repz
inc
mov
and
out
(bad)
(bad)
aaa
das
add
adc
and
ins
add
dec
dec
lock
push
cmc
jns
push
cli
xchg
pop
inc
cmp
call
pop
inc
add
neg
adc
leave
test
push
inc
(bad)
(bad)
in
aam
pusha
push
sar
out
push
stc
jmp
jmp
sub
dec
mov
xchg
setnp
and
dec
in
lods
sbb
pop
ror
fadd
in
xor
or
aaa
dec
sub
gs
nop
mov
rcr
cmp
(bad)
fisttp
jne
lods
out
xor
push
fcom
fcomp
or
daa
call
test
inc
lahf
stc
adc
outs
call
(bad)
fisttp
fstp
jnp
push
and
loop
mov
dec
add
dec
(bad)
vphadduwd
xchg
shl
push
jge
lea
scas
cli
lea
push
pop
mov
enter
push
inc
jmp
adc
adc
or
fld
pop
and
sbb
mov
sbb
int
test
push
and
fsub
(bad)
clc
xor
aam
xchg
jle
jbe
sar
or
mov
(bad)
hlt
mov
sahf
sub
cmps
dec
mov
lods
cwde
sub
aad
arpl
or
inc
iret
cmc
push
cli
fild
pop
xchg
icebp
or
push
(bad)
xor
or
pop
xor
xor
mov
not
pop
ret
jmp
hlt
aas
les
pop
push
mov
add
pop
es
push
test
sub
sbb
inc
rcl
pop
cmps
sub
adc
enter
(bad)
sbb
in
jl
mov
mov
xchg
(bad)
sbb
mov
movs
popw
loope
or
outs
test
test
stc
mov
leave
out
mov
mov
push
popa
and
push
sub
pushf
ja
push
js
and
iret
add
mov
sbb
add
dec
jl
fist
pop
inc
add
scas
and
std
lahf
xor
or
sub
sub
gs
mov
cmp
adc
and
add
data16
aam
sub
mov
mov
jmp
push
call
dec
lds
inc
jl
mov
xor
int
push
sub
fldenv
xor
pusha
adc
test
add
gs
mov
gs
into
dec
nop
xchg
mov
daa
xchg
les
aam
inc
mov
into
into
repz
mov
xor
pop
ret
(bad)
test
movs
cmp
dec
cld
mov
sti
adc
mov
ins
push
enter
pop
sub
icebp
rol
pop
call
pop
adc
sbb
pop
jmp
hlt
aad
push
dec
xchg
pop
jno
push
inc
mov
fsub
push
fstp
stc
iret
int3
adc
and
imul
or
test
xchg
(bad)
jmp
adc
ja
les
sbb
lods
sar
push
icebp
pop
das
repnz
jo
sbb
fld
dec
dec
xor
mov
push
fwait
rcr
mov
sbb
adc
lahf
lods
jae
les
jmp
arpl
mov
mov
pop
fcomp
ror
adc
clc
mov
push
mov
or
mov
adc
iret
pop
cli
mov
mov
iret
in
test
into
push
loope
js
pop
adc
fucomip
ins
call
jp
cld
push
imul
and
arpl
or
push
call
test
pop
cmc
cmp
cmp
enter
out
jnp
push
lock
jbe
in
call
mov
into
int
ss
mov
stos
repnz
push
mov
jo
ret
cdq
repz
repz
add
ss
stc
and
and
into
adc
dec
(bad)
sahf
xlat
jp
mov
jne
das
(bad)
out
pop
jle
inc
bound
jae
sti
arpl
add
adc
mov
pop
shl
add
je
sub
shl
ror
out
xchg
xor
add
lock
fidivr
mov
inc
pusha
dec
fbld
sbb
or
and
xor
loopne
jae
xor
icebp
add
dec
xlat
mov
xchg
shl
push
or
jmp
or
xchg
mov
mov
jbe
fimul
(bad)
ret
not
cmp
push
mov
(bad)
jnp
arpl
data16
imul
cmp
xor
and
fldcw
test
push
cli
or
(bad)
mov
test
loop
ret
pop
cld
jb
imul
cmc
pop
loope
jl
pop
stos
rep
add
pop
jo
bound
jne
cmc
mov
sti
iret
jnp
ficom
pop
lahf
shl
cmps
xchg
lea
dec
add
rcr
dec
and
inc
clc
cmp
mov
pusha
mov
mov
jo
mov
push
popf
cmp
or
pop
cmc
dec
adc
dec
(bad)
call
dec
bound
mov
mov
sub
sbb
test
test
fldpi
jle
xchg
leave
push
sbb
mov
in
stos
cli
and
mov
sub
mov
add
inc
ret
push
mov
and
pushf
inc
cmp
dec
push
fabs
gs
xor
xor
test
ja
fwait
pop
pushf
aam
stos
ja
dec
mov
mov
retf
lods
cmc
test
pushf
(bad)
mov
shl
fwait
fwait
int3
sbb
enter
int
jp
retf
addr16
pop
test
sbb
xchg
adc
mov
out
lods
cmc
xor
stos
jle
out
jmp
aad
iret
xchg
jbe
stos
push
xor
sbb
repz
int
jp
iret
sbb
cmp
mov
mov
push
jo
je
dec
stos
adc
out
push
pusha
mov
and
movs
test
aad
(bad)
xor
pop
cmps
stos
fcom
push
ret
daa
push
cmp
or
lea
jg
jae
sub
or
repnz
(bad)
dec
jp
lahf
ins
test
or
add
xchg
lods
adc
inc
(bad)
jae
outs
ss
test
in
push
cmp
push
ss
fwait
test
mov
repnz
jns
sub
push
repnz
sub
dec
pop
mov
cwde
out
pop
inc
inc
ret
mov
rcl
push
adc
mov
leave
ins
imul
add
cmps
add
setle
sbb
ins
jae
arpl
mov
xchg
repnz
add
xchg
movs
nop
mov
rcr
(bad)
sub
and
fild
jns
mov
xor
mov
mov
icebp
sahf
dec
bound
or
es
stos
cmp
and
cwde
adc
cmps
xchg
fbld
frstor
mov
cwde
aas
mov
mov
inc
push
(bad)
or
mov
(bad)
dec
jns
scas
adc
sahf
addr16
xchg
jnp
shr
mov
inc
(bad)
pushf
add
test
test
push
in
mov
adc
xor
cmp
sub
cs
mov
push
pop
mov
repnz
xlat
dec
or
call
jp
xchg
inc
mov
(bad)
cwde
data16
xor
daa
mov
int3
sub
mov
(bad)
out
inc
in
retf
add
push
psubw
inc
or
dec
scas
add
or
lods
sbb
call
pop
adc
mov
pop
outs
cmp
push
and
ret
mov
call
push
sbb
adc
scas
lea
push
inc
test
popa
jo
mov
shl
jno
shl
dec
jae
iret
and
pop
sub
fisub
inc
inc
xor
sub
add
nop
cmp
mov
ss
jnp
out
jg
imul
dec
js
imul
sahf
lods
(bad)
loope
inc
dec
jo
(bad)
inc
lea
push
mov
push
rcr
and
cli
jb
scas
add
pop
sar
mov
mov
cwde
or
mov
cmp
pop
inc
mul
pop
push
rcl
add
in
dec
mov
adc
je
sub
sub
mov
dec
fbstp
dec
jg
mov
(bad)
outs
mov
xor
std
mov
jnp
ds
lods
jle
mov
ja
popa
(bad)
sub
hlt
or
sbb
add
popf
jae
movs
add
mov
jne
ins
je
push
(bad)
ss
movs
out
mov
loop
pop
cmps
ja
cli
call
or
imul
or
bound
out
fcomp
pop
sbb
in
xor
push
xor
sub
pop
sub
pcmpgtd
bound
jbe
inc
sub
in
leave
pop
or
mov
mov
push
stos
mov
(bad)
out
add
mov
and
popa
fisttp
das
movs
lahf
inc
xor
movs
js
shr
ror
fldenv
dec
ds
imul
ja
aad
mov
pop
(bad)
in
test
fcomp
call
arpl
jg
and
ss
xchg
lock
out
dec
xchg
adc
sbb
push
or
mov
add
test
ins
sar
mov
iret
mov
or
dec
sub
mov
pop
fmul
add
pop
loop
neg
mov
adc
push
mov
ds
pop
add
cdq
sbb
in
test
xchg
push
stc
xor
and
cmp
sti
or
dec
test
js
(bad)
int
lea
mov
loop
test
data16
out
push
jg
test
or
mov
stos
xchg
mov
inc
and
ds
push
adc
mov
or
dec
(bad)
lods
jbe
mov
adc
icebp
ret
sbb
sub
cmp
jbe
mov
imul
jmp
cs
fstp
aam
shl
jmp
fxtract
inc
push
push
sti
mov
test
sbb
out
bound
or
ror
push
ds
jl
cld
fidivr
out
inc
repz
pop
xor
push
mov
aas
ds
mov
sub
lds
add
mov
jle
push
inc
cmps
inc
or
xchg
jnp
cli
lods
std
add
sbb
add
gs
stos
xor
movs
jge
sti
in
or
fstp
mov
mov
aaa
pop
out
repz
pop
cmp
arpl
inc
jno
loop
call
cmp
xchg
(bad)
mov
push
adc
dec
sub
data16
add
push
inc
leave
mov
bound
(bad)
push
fldcw
cli
inc
inc
leave
inc
cmps
cmp
sbb
data16
js
jae
lods
fist
xlat
mov
out
dec
jne
xor
add
leave
inc
jns
sbb
fwait
mov
lods
push
mov
lds
inc
int
(bad)
push
shufps
cwde
shr
test
dec
mov
js
ins
fwait
les
mov
test
test
dec
sbb
fwait
stos
mov
cmp
ja
dec
movq
add
es
popa
daa
es
cmp
push
xor
cmp
shl
fucomip
cs
outs
in
out
call
and
or
xchg
stos
jecxz
mov
retf
mov
xchg
arpl
xchg
movs
push
rol
mov
xchg
ja
arpl
ja
nop
add
lods
imul
aam
loop
cmp
adc
mov
ror
cmp
cld
in
into
jbe
sub
pop
or
outs
sti
pop
push
lods
mov
(bad)
jae
lods
hlt
inc
aam
mov
sub
adc
and
mov
fnstsw
dec
je
call
ins
sbb
xor
movs
leave
pop
fdiv
pop
dec
adc
xor
in
xor
cmp
test
inc
jbe
mov
jl
enter
xor
hlt
or
(bad)
rcl
addr16
shl
xchg
xor
mov
cmp
popf
cmps
and
ret
fdiv
iret
fs
repnz
lahf
fs
inc
pop
jns
or
clc
push
out
xor
jg
push
pusha
cmp
lea
aam
daa
or
jb
xchg
out
div
sub
adc
imul
add
jmp
jb
sahf
and
xor
popf
pusha
pushf
outs
enter
rcr
lods
js
jno
stc
(bad)
sahf
jge
(bad)
jno
jns
xor
sbb
int
xor
jnp
ja
inc
in
repz
xor
xchg
dec
nop
xor
imul
inc
push
cdq
pop
(bad)
jno
xor
jns
call
scas
adc
mov
sub
cdq
push
out
repz
xor
cmp
add
xchg
pop
push
mov
clc
jp
aas
cmp
jo
int
mov
and
mov
pmaxub
inc
retf
mov
push
cmp
scas
test
fsubr
lods
sbb
fnstcw
int
je
mov
fsub
dec
test
jge
lods
sub
sub
fwait
std
and
or
jmp
bound
xchg
or
add
cmp
aad
push
sub
(bad)
into
test
cmc
cmc
js
mov
std
movs
jmp
fcmovb
inc
or
ins
enter
sbb
pop
cmp
enter
loop
push
cld
sub
xchg
push
push
fistp
in
cdq
sub
test
and
jno
add
mov
popa
fwait
lods
push
lods
test
mov
popf
adc
mov
ret
jns
dec
mov
cwde
push
je
shl
mov
adc
push
repnz
dec
push
pop
lds
fild
daa
call
sub
out
inc
fnstenv
mov
push
xchg
shr
mov
jnp
pop
gs
mov
mov
cmp
jmp
pop
xchg
inc
push
jmp
das
mov
jns
repz
and
scas
(bad)
xchg
inc
xchg
mov
xor
xchg
(bad)
pop
push
in
imul
and
(bad)
or
mov
mov
inc
ins
loope
fbld
shl
add
fisttp
daa
and
adc
sar
ss
sbb
call
mov
xchg
lahf
xor
mov
mov
xor
add
xchg
jl
inc
mov
in
push
in
ret
mov
stos
mov
sbb
into
push
push
push
test
fsub
jb
je
sahf
pop
inc
lahf
xor
or
adc
(bad)
mov
data16
stos
mov
sub
jmp
and
(bad)
(bad)
cmps
inc
xchg
inc
rcl
icebp
add
stc
add
and
add
adc
xchg
inc
adc
in
sub
push
dec
mov
cmp
and
add
je
add
and
lock
lock
jns
leave
push
mov
mov
loopne
pop
ret
not
xor
(bad)
mov
rcr
xor
loopne
inc
scas
and
movs
xchg
enter
shl
mov
sub
ja
gs
ins
imul
ret
ret
mov
movs
aam
or
(bad)
mul
in
sar
loop
rcl
xchg
cmp
xor
dec
cmp
iret
sbb
rcl
mov
mov
or
adc
jb
in
pop
xchg
mov
push
mov
jo
lock
movs
not
retf
(bad)
data16
rcr
nop
out
lds
repz
mov
push
lods
retf
mov
dec
or
mov
scas
nop
push
sub
jmp
repnz
les
sub
int3
push
fadd
jle
pop
add
xor
pop
aam
pop
sub
mov
ins
in
(bad)
les
enter
mov
sbb
shl
xchg
aad
fidivr
push
cdq
ret
add
in
hlt
loope
fist
push
repnz
inc
je
js
adc
xchg
sar
dec
fdivp
add
lea
push
dec
xchg
ror
int3
xchg
add
addr16
push
add
mov
shr
sbb
xchg
lods
pop
adc
xor
jg
cmp
(bad)
mov
iret
dec
mov
rol
jle
into
mov
movs
push
jo
or
dec
imul
inc
pusha
inc
mov
inc
and
add
movs
lods
mov
or
add
fidivr
loope
shl
(bad)
(bad)
pop
xor
push
xor
sub
mov
mov
xor
(bad)
sbb
fld
xor
mov
push
(bad)
stos
lods
inc
mov
popf
and
rcl
push
push
pop
cwde
add
test
imul
pop
call
(bad)
pop
enter
out
arpl
and
pop
js
and
es
push
inc
in
inc
mov
cmp
int
les
jo
jno
mov
mov
sub
shl
leave
xor
or
fs
add
and
cmp
iret
loopne
adc
pusha
adc
jp
jle
and
xchg
ret
xor
scas
mov
repz
retf
scas
call
rcl
outs
push
push
push
loope
sti
push
dec
jns
shr
adc
mov
push
inc
int3
jp
inc
and
retf
cli
daa
inc
dec
jecxz
lds
inc
test
mov
rol
aad
mov
inc
mul
sub
cmp
sbb
fwait
push
sbb
add
adc
dec
mov
jno
push
jbe
data16
pop
mov
mov
sahf
inc
mov
add
mov
fild
push
ror
add
inc
imul
ret
jmp
cmp
inc
ret
dec
ror
ja
cmp
cli
test
rcr
sbb
aaa
mov
call
or
push
xchg
pop
sub
xchg
mov
inc
pop
repnz
xor
add
dec
xchg
dec
mov
out
mov
shufps
xchg
movs
imul
stos
(bad)
pop
sbb
add
ds
dec
pcmpgtb
and
push
leave
or
xchg
jae
sbb
test
cmp
sub
cli
sbb
arpl
jnp
and
or
mov
(bad)
lahf
sbb
or
push
push
test
les
ins
lods
inc
lods
pop
movs
ret
sbb
mov
push
jbe
mov
fistp
(bad)
daa
std
push
push
pop
jb
cmp
ret
ds
pop
inc
stos
adc
leave
retf
pop
addr16
inc
add
stos
test
rcl
pop
lods
aaa
out
pushf
lock
or
out
sar
mov
retf
(bad)
mov
pushf
dec
jne
mov
sar
push
mov
cmp
add
popf
pushf
ficom
dec
mov
pop
mov
(bad)
clc
aad
mov
or
and
(bad)
xlat
out
fst
aaa
and
sbb
mov
mov
dec
pop
push
mov
and
mov
loopne
test
fucomp
xchg
mov
jl
aas
arpl
push
mov
(bad)
div
dec
mov
dec
pop
das
push
xor
das
xor
or
xchg
push
mov
or
loopne
mov
repz
pop
adc
outs
push
cmp
repnz
fs
pop
rol
arpl
leave
push
fwait
icebp
daa
mov
cli
adc
fidivr
ret
(bad)
in
aaa
sub
(bad)
iret
sahf
leave
repnz
jg
jno
fldcw
or
jg
call
push
adc
sbb
retf
nop
mov
push
out
(bad)
aas
lock
add
pop
mov
jbe
out
inc
loop
scas
pop
lea
pop
push
imul
fidiv
jb
in
xchg
mov
dec
std
jb
fnstcw
xchg
fdiv
fsubr
aaa
int
push
mov
jmp
push
ss
loop
ja
inc
cmp
xor
mov
pop
lds
add
addr16
fdiv
mov
dec
scas
addr16
(bad)
retf
push
pop
and
neg
mov
das
mov
pop
mov
add
pop
mov
jg
mov
rol
push
icebp
xor
pop
imul
popa
std
shr
neg
add
mov
call
aas
imul
leave
lods
test
outs
sub
mul
mov
loopne
call
xchg
loop
inc
push
frstor
xor
jne
push
aam
pusha
mov
adc
jae
jns
xchg
call
cmp
ret
popa
jge
add
scas
leave
stos
inc
dec
push
sub
int
add
push
es
(bad)
and
pop
movs
push
les
loop
mov
loope
push
push
clc
sub
mov
movs
or
jmp
pop
cmp
or
nop
push
jb
adc
sti
sbb
sbb
xchg
not
dec
sub
fsubr
(bad)
rcl
add
xor
jmp
xlat
popf
or
pop
inc
into
mov
outs
xchg
and
jmp
dec
adc
pusha
fs
aaa
jno
imul
push
jns
dec
popa
icebp
out
mov
aam
enter
cmps
adc
out
inc
adc
add
pop
pop
addr16
inc
pop
jo
sub
ins
icebp
retf
ja
add
jle
push
xchg
adc
jmp
or
sbb
aas
add
fimul
sbb
in
fadd
push
adc
adc
aas
mov
cmp
and
inc
cwde
in
(bad)
out
repz
pop
push
cmp
cmp
xchg
rcr
sti
aaa
mov
aad
fidiv
(bad)
fild
xchg
pop
inc
mov
mov
(bad)
cmps
mov
and
stos
and
pop
cmp
leave
sub
fldcw
cmp
cmp
fcmovbe
out
stos
lea
in
pop
xchg
xor
mov
xor
add
sbb
das
push
repnz
call
scas
mov
sbb
cli
arpl
test
addr16
dec
sar
mov
scas
and
jae
dec
(bad)
add
add
xor
addr16
imul
or
out
mov
mov
cli
sub
dec
mov
and
div
cmc
jnp
mov
mov
fidivr
or
dec
inc
cmp
xchg
ficomp
jb
jmp
fld
mov
test
(bad)
leave
mov
xchg
inc
add
xor
and
loopne
rcr
push
pop
jno
and
test
out
test
push
bound
icebp
xchg
es
(bad)
pop
test
mov
push
aas
pop
ds
jp
data16
cs
sub
dec
fdivr
test
push
push
(bad)
aaa
add
arpl
sub
sbb
cmps
repz
cmp
sbb
mov
and
mov
mov
xchg
call
aas
adc
shl
sub
repz
and
cmp
xchg
push
dec
icebp
pop
cmp
jno
stos
std
sbb
mov
mov
jne
and
adc
push
movs
pop
mov
fwait
popf
xchg
pop
les
mov
cdq
leave
leave
dec
adc
sbb
mov
xor
mov
or
popa
mov
or
sbb
enter
arpl
sbb
cli
icebp
dec
inc
inc
jmp
push
fnstsw
not
dec
in
dec
bnd
jp
or
hlt
push
adc
mov
ins
cli
xchg
movs
mov
ins
or
(bad)
sub
xchg
jge
adc
dec
xchg
sub
pop
xor
adc
mov
or
movs
repz
pop
ret
nop
mov
sbb
sbb
rcr
es
out
add
stos
jge
sbb
dec
jne
dec
jmp
cmovno
mov
sub
jo
mov
push
test
mov
pop
push
ror
mov
xchg
ds
out
in
cmps
stos
aas
or
dec
add
mov
fld
xchg
or
adc
xor
push
rcr
test
das
sbb
pop
les
stos
push
repnz
mov
iret
cmps
mov
(bad)
mov
sub
cli
loopne
sub
loope
sahf
inc
(bad)
xor
pushf
inc
mov
cmps
jbe
xor
xchg
imul
pop
loopne
jnp
cmp
xchg
rcr
pop
inc
mov
ret
pop
in
call
stc
sbb
jmp
out
xchg
xadd
movs
daa
sub
into
aaa
mov
mov
push
mov
cmp
nop
pusha
cmc
cmp
inc
leave
retf
mov
loope
imul
jecxz
fild
fst
sar
xor
xchg
xchg
(bad)
rcl
iret
xchg
and
ins
shr
sub
push
repz
loop
loope
and
out
cdq
adc
dec
test
out
mov
adc
xchg
pop
int3
jns
inc
imul
pusha
jno
lahf
(bad)
lds
xchg
std
ret
in
mov
stos
dec
dec
loop
out
dec
mov
push
cmc
cmp
retf
call
jge
dec
ror
jle
sub
out
lock
adc
outs
scas
call
aaa
xor
jmp
push
pop
mov
push
outs
sub
cmps
lods
in
(bad)
movs
outs
call
xor
loop
out
mov
stos
add
loope
jb
dec
add
pop
or
push
add
pop
and
add
and
adc
adc
out
mov
movs
jae
das
inc
retf
xchg
movs
(bad)
fsubp
cmps
push
push
cmps
pop
in
xchg
xchg
ss
dec
sub
lods
test
ss
lea
test
inc
icebp
inc
repz
(bad)
fdivp
enter
clc
jmp
in
push
movs
mov
push
cmp
add
outs
and
ins
iret
mul
cld
pop
sub
mov
into
add
sbb
ror
mov
jae
xor
cwde
add
mov
sub
mov
sub
inc
pop
(bad)
fnstcw
xchg
xchg
(bad)
out
xchg
ds
push
mov
jge
fild
dec
xchg
ds
loop
in
sub
jg
fs
inc
nop
lods
ins
mov
sub
jl
out
mov
pop
sub
aam
pop
data16
cmc
jbe
jbe
scas
into
adc
arpl
aaa
cmp
xor
shr
cwde
add
cdq
dec
call
cwde
idiv
dec
retf
das
cmp
jo
mov
add
mov
cmp
test
xor
or
jo
pop
mov
pop
cmps
push
sbb
pop
arpl
in
push
loop
lods
mov
mul
scas
dec
pop
sub
and
aad
(bad)
mov
adc
sub
xchg
dec
ja
xchg
push
lds
mov
xlat
jg
push
jmp
dec
out
pop
pushf
dec
je
pop
xchg
popf
pusha
sub
in
and
mov
add
jb
adc
sbb
nop
push
test
inc
icebp
test
outs
add
jbe
push
mov
je
push
(bad)
mov
and
or
and
xchg
sti
rcl
dec
adc
ret
out
jge
stos
sti
sub
movs
xchg
in
push
jbe
pop
and
repnz
sub
jp
lahf
movs
loop
xchg
int3
push
jb
mul
add
repnz
jne
iret
dec
pop
jecxz
call
fisttp
call
jle
rcl
sbb
es
ficomp
(bad)
and
scas
mov
inc
xor
xchg
xor
adc
pop
pop
imul
popa
mov
movs
mov
pusha
cmps
mov
(bad)
aad
xchg
repnz
dec
test
jnp
sbb
(bad)
shr
scas
xchg
aaa
add
dec
push
dec
test
in
cmp
mov
dec
mov
adc
cdq
xchg
sti
mov
lds
push
xchg
mov
ret
inc
add
adc
pop
call
push
nop
sub
mov
mov
bndldx
jl
fcom
imul
cmp
adc
ja
jns
stos
sub
add
mov
test
test
ret
repz
pushf
movs
retf
xor
and
jle
mov
icebp
std
scas
mov
and
mov
ret
sbb
leave
inc
push
xor
add
jle
add
movs
dec
mov
popa
retf
or
cmc
adc
mov
mov
mov
push
add
loope
loope
arpl
fcom
xchg
xchg
sbb
(bad)
scas
cli
inc
adc
std
aaa
ficomp
pop
adc
hlt
cmc
stos
sbb
outs
aam
xchg
xchg
bound
into
mov
dec
jno
jbe
std
mov
xchg
call
in
mov
sbb
js
xchg
dec
rol
inc
sub
dec
test
mov
push
int3
mov
add
cmp
sub
leave
ret
outs
fimul
fld
mov
sub
add
mov
mov
add
xchg
xor
and
inc
hlt
(bad)
mov
jns
mov
out
push
mov
mov
jno
mov
mov
cmp
mov
mov
mov
or
add
add
push
scas
dec
xchg
shl
inc
sub
mov
mov
fcomp
jmp
imul
int
dec
jmp
adc
aaa
fstp
add
pop
sbb
xor
call
mov
ja
(bad)
pop
test
jecxz
xor
pop
div
mov
dec
cmp
pusha
sub
mov
push
cmps
movs
mov
jno
addr16
fadd
cmp
mov
js
ss
inc
or
sbb
pop
add
fwait
mov
adc
rcr
lods
fdivr
adc
mov
sbb
pop
mov
mov
js
cmp
arpl
inc
push
in
jecxz
mul
and
push
cmp
sti
jne
xor
fisubr
xchg
mov
jmp
push
dec
cmp
dec
(bad)
pushf
fwait
mov
outs
dec
call
int
inc
cdq
mov
aad
jnp
mov
(bad)
xor
inc
pop
jae
pop
mov
mov
jle
mov
push
dec
loop
test
sbb
push
add
(bad)
xchg
sbb
popf
aaa
mov
jmp
xor
and
xchg
fadd
xchg
sub
jbe
ja
mov
mov
push
std
fsubr
or
test
cli
pop
or
add
sub
(bad)
mov
repnz
dec
out
lods
mov
enter
or
sub
push
ret
std
jp
mov
ficomp
sub
test
repz
pop
mov
shl
and
jg
ss
sahf
cdq
shl
mov
std
jecxz
imul
repz
sub
jnp
call
sbb
fisttp
mov
sub
mov
out
push
xchg
out
ins
sti
mov
outs
pop
add
mov
(bad)
inc
xor
xor
(bad)
push
scas
cmp
mov
scas
xchg
daa
xchg
dec
mov
aam
and
or
cmp
(bad)
popf
cmp
xchg
mov
cmp
add
shl
sti
in
lods
pop
and
or
inc
std
mov
in
fsub
inc
int3
call
iret
push
iret
sub
xlat
leave
call
mov
jp
mov
fs
in
inc
(bad)
push
push
out
mov
in
pop
outs
xlat
mov
sahf
outs
shr
out
(bad)
push
cdq
bound
jne
mov
mov
cmps
inc
push
mov
cld
scas
lea
(bad)
sub
xlat
mov
stc
into
sub
lods
cmp
aas
sti
loopne
pop
mov
loopne
lahf
pop
cmp
adc
sti
inc
movs
mov
jno
icebp
daa
fisttp
push
fst
add
mov
rcl
mov
stc
dec
dec
and
imul
push
ror
sbb
inc
shr
gs
pushf
out
dec
mov
ds
out
into
and
and
xor
mov
xlat
mov
into
ins
cmp
lods
inc
outs
push
adc
mov
mov
pop
jns
sbb
call
xchg
sar
jge
(bad)
daa
iret
cmc
enter
ja
ins
lds
(bad)
push
xor
dec
fwait
xchg
add
loopne
jg
mov
fisttp
or
mov
int3
mov
inc
xchg
push
add
add
lock
sub
sbb
pop
mov
stc
sub
or
mov
enter
and
stos
jmp
rcl
adc
retf
in
lahf
out
add
bound
dec
cs
pusha
pop
sbb
mov
adc
mov
(bad)
repz
stos
je
jecxz
pusha
lds
pop
int
push
stos
sub
jnp
mov
sub
mov
mov
in
mov
push
cmps
ret
fbstp
mov
mov
popa
and
outs
outs
jge
cmc
sbb
sbb
imul
mov
int3
adc
int3
jmp
bound
mov
je
add
scas
push
fcomp
or
test
mov
mov
(bad)
shl
adc
sbb
push
scas
test
or
call
jb
pop
inc
std
iret
pop
sbb
sub
xchg
fmul
movs
pop
addr16
push
stos
cmps
scas
mov
xor
mov
shl
or
cld
sub
jb
jae
cmps
mov
xchg
das
adc
iret
or
push
jmp
inc
push
jne
(bad)
cmp
mov
outs
jge
ins
ret
xor
jno
mov
(bad)
push
repnz
xor
jle
push
pop
fbstp
and
mov
out
je
add
push
mov
hlt
mov
jg
mov
cli
and
div
(bad)
icebp
dec
push
push
and
sahf
pop
cwde
cmp
and
lea
icebp
imul
push
ins
xchg
call
movs
aad
call
jae
inc
(bad)
xor
test
mov
jl
xor
nop
fist
dec
push
sti
into
or
dec
pop
jns
inc
leave
ficom
sbb
(bad)
adc
cmp
dec
aam
or
and
mov
movs
(bad)
fprem1
lock
pusha
fs
mov
lock
aaa
shl
retf
sti
aam
popf
bound
mov
jbe
push
xor
cmp
imul
add
xlat
les
out
sub
push
or
shr
shl
jmp
jb
mov
cmp
mov
je
aad
lock
iret
inc
jl
imul
jnp
push
cli
cmp
das
cmp
inc
adc
pop
or
mov
outs
push
addr16
imul
cli
dec
mov
xchg
imul
lea
nop
mov
call
xchg
fnstcw
cmp
(bad)
push
cmps
imul
mov
or
(bad)
xor
xlat
mov
push
stos
xor
inc
js
cmp
push
mov
mov
cmp
add
iret
inc
fdiv
cmc
lea
push
and
sysenter
int
mov
push
shr
mov
jge
mov
aam
sub
xchg
jbe
sub
dec
push
mov
aaa
cmc
mov
mov
and
mov
mov
push
push
fist
mov
cdq
sub
add
fistp
xchg
mov
movs
mov
push
cli
xchg
cwde
push
sbb
cli
or
jp
test
das
and
shr
inc
cld
test
jne
imul
ja
inc
mov
test
movs
jae
sbb
xchg
jbe
clc
push
mov
ror
push
and
fwait
(bad)
gs
stos
push
add
test
jae
pop
rol
rol
(bad)
pop
ret
imul
loope
mov
mov
push
mov
add
push
pop
and
or
fs
pusha
leave
popa
dec
or
mov
cmp
push
push
xor
add
mov
mov
jle
cli
pop
xchg
es
mov
adc
daa
ficomp
or
in
xchg
add
adc
pop
mov
add
inc
and
xor
xchg
pop
dec
adc
mov
push
sbb
fcom
add
not
adc
sub
stos
test
mov
xor
scas
(bad)
sbb
sub
xchg
sbb
sub
mov
or
push
xchg
call
sub
jae
shl
add
out
ins
jle
pop
aam
scas
push
adc
add
(bad)
out
mov
neg
div
jbe
hlt
and
adc
test
shr
mov
jbe
(bad)
mov
fcmovbe
lahf
xchg
pop
jae
test
repz
inc
cmp
lea
cmps
mov
push
sbb
sub
pop
clc
mov
mov
jae
xchg
push
jle
sbb
dec
adc
fdiv
int3
ret
xor
jb
xor
test
fld
jne
add
aas
ja
fnstcw
test
xchg
(bad)
pop
ror
scas
dec
mov
das
cli
rcr
sbb
in
cld
cmp
cmc
call
out
adc
xchg
cmp
pop
iret
(bad)
mov
aad
push
or
cli
cmp
push
pop
push
out
mov
das
lock
pop
adc
call
(bad)
dec
or
mov
mov
dec
add
data16
mov
adc
adc
nop
mov
sub
in
stos
mov
in
(bad)
ins
call
sub
pop
pusha
add
push
in
jnp
nop
movs
lahf
cmp
neg
cmp
xor
sub
mov
jmp
add
ja
aaa
xor
xchg
jb
pushw
das
(bad)
loop
ja
fs
out
jge
push
hlt
or
cld
dec
(bad)
(bad)
mov
jo
push
popf
xchg
int3
aad
pcmpgtb
frstor
sbb
adc
jmp
les
mov
(bad)
imul
mov
pop
shl
int3
movs
sbb
in
push
pop
mov
xor
push
xchg
(bad)
jge
mov
cdq
call
sub
jo
mov
or
call
jecxz
adc
stos
pushw
mov
popf
mov
ret
jne
add
popf
mov
mov
mov
inc
imul
inc
cmc
xchg
sahf
idiv
icebp
inc
ror
scas
push
and
add
shl
jg
xchg
std
mov
mov
or
pop
add
(bad)
jno
xchg
jmp
fwait
jle
and
add
sbb
ins
sub
out
push
add
jle
mov
jp
xchg
cld
lods
mul
or
aas
jl
sar
dec
fild
retf
hlt
mov
daa
pop
ds
xchg
add
in
or
jmp
inc
aas
mov
cli
cdq
loopne
cmc
stos
pop
cld
mov
cmp
ja
pop
cmps
imul
dec
inc
icebp
stos
shl
fdiv
in
jb
mov
mov
pop
loopne
int3
sbb
push
cmp
adc
mov
mov
dec
rcr
pop
mov
bound
sbb
addr16
sub
test
(bad)
xchg
stos
fiadd
cs
jb
fmul
in
xchg
out
lods
cmc
adc
and
xor
mov
fwait
mov
sub
jecxz
adc
test
push
bound
jl
movs
mov
adc
ins
push
mov
mov
lea
mov
mov
je
mov
retf
adc
ret
call
cld
dec
jecxz
mov
push
pop
xor
sbb
push
lds
shl
and
xor
pop
out
push
xor
stos
scas
rol
push
jle
sar
ret
lea
inc
and
mov
popf
sbb
es
push
jmp
imul
cmc
ret
in
(bad)
call
inc
lds
adc
aas
aas
test
and
ins
mov
lods
je
(bad)
sbb
jl
jecxz
jbe
cmp
repnz
xor
dec
ds
icebp
or
or
xchg
jmp
aaa
(bad)
rcr
enter
lds
xchg
scas
jmp
mov
mov
ret
out
adc
mov
nop
cld
fdiv
pop
and
sub
das
fdivr
xchg
adc
sub
cmp
std
fisubr
aad
dec
dec
push
sahf
xchg
and
jge
push
imul
inc
retf
(bad)
or
or
ror
mov
pop
or
ss
push
sub
adc
cwde
fwait
mov
ja
cmp
jno
or
(bad)
cmp
shl
mov
mov
push
push
mov
std
mov
ficomp
cmp
fucomi
lock
add
add
xor
jns
scas
pusha
clc
lock
cmp
push
xchg
bound
dec
aad
gs
repnz
mov
call
imul
jns
jmp
das
dec
xchg
sahf
sar
gs
dec
adc
lds
scas
cmp
lea
stos
cli
jbe
es
enter
pop
jmp
xchg
push
bnd
pop
test
cdq
je
jnp
mov
stos
out
(bad)
retf
adc
mov
ja
jbe
mov
(bad)
mov
fdivr
sbb
ds
xchg
cmp
addr16
bound
sti
push
cmps
mov
jne
push
ds
mov
add
dec
sahf
loopne
sub
std
pop
mov
test
mov
ja
adc
xchg
jmp
ja
jge
jp
jae
les
rcl
fstp
imul
push
inc
stos
and
sub
ds
or
jle
mov
das
inc
in
mov
pop
mov
movs
test
inc
push
sahf
enter
out
or
sbb
pop
jnp
mov
loopne
arpl
or
ret
push
dec
mov
mov
std
xchg
sub
push
mov
clc
loope
inc
jo
in
movs
cwde
imul
out
xor
(bad)
into
push
pop
add
or
jne
add
adc
xlat
inc
mov
cmp
aam
add
hlt
shl
mov
outs
xchg
stc
jbe
fistp
jb
pusha
xchg
dec
xor
(bad)
jg
or
ret
pop
pop
push
ds
fs
lea
fdiv
repnz
adc
jg
(bad)
xor
jl
pop
dec
or
mov
(bad)
mov
retf
push
cmp
out
jp
jle
dec
adc
sub
dec
pop
xlat
pop
pop
sbb
(bad)
mov
xor
retf
push
pop
jne
sub
push
pop
or
mov
test
dec
adc
retf
push
(bad)
in
bound
mov
push
lahf
sub
adc
mov
jecxz
mov
cdq
retf
pop
adc
jl
pop
add
cmp
inc
fwait
aad
pop
(bad)
mov
push
in
lods
ret
sub
mov
jle
mov
movs
xchg
jmp
ins
sbb
sbb
mov
and
(bad)
pop
and
mov
clc
sub
outs
pusha
ins
lods
cwde
mov
sbb
clc
clc
cmp
aad
std
mov
sub
sbb
call
in
sbb
push
movs
aad
lea
mov
enter
or
xchg
mov
mov
fistp
inc
sub
lgs
xchg
inc
or
or
es
shr
in
mov
jb
pop
sbb
push
push
sub
cli
sub
xchg
or
sbb
pop
fcom
mov
jne
stos
jmp
push
mov
or
jbe
lds
jnp
mov
dec
adc
movs
icebp
jo
imul
jns
popf
aaa
add
fimul
push
ins
out
xor
(bad)
test
loopne
(bad)
mov
add
aad
mov
mov
in
cmp
test
loope
pop
jmp
mov
push
push
cmp
cld
xchg
mov
xchg
adc
jmp
addr16
dec
xchg
imul
mov
sub
fnsave
es
sub
test
gs
jns
nop
test
xlat
inc
xchg
out
add
pop
push
aaa
mov
fmulp
rcl
ds
xor
add
sbb
pusha
cwde
hlt
aad
in
test
push
push
mov
adc
inc
iret
movs
shr
sub
adc
loope
add
adc
jnp
out
mov
sbb
jecxz
mov
mov
imul
add
push
arpl
and
push
sub
out
push
ficomp
je
pop
jp
rcl
mov
imul
dec
out
cmps
mov
dec
dec
mov
loopne
adc
add
pop
add
inc
(bad)
sar
mov
xchg
(bad)
fwait
mov
(bad)
jp
(bad)
scas
ins
mov
sbb
into
jmp
out
sbb
inc
jno
xor
xchg
repnz
mov
sbb
test
rep
retf
cmc
sub
sub
or
in
inc
and
pushf
das
imul
push
jp
cld
sar
jecxz
movs
cmp
xchg
movs
iret
imul
dec
mov
sbb
sahf
cmp
dec
shr
mov
loope
cmc
push
inc
or
enter
pop
in
pop
lahf
jmp
or
or
and
sti
inc
push
ficomp
cmc
(bad)
and
out
mov
dec
jbe
lahf
push
sbb
rol
xchg
jae
jmp
dec
lods
push
xlat
imul
sbb
xchg
loope
mov
ja
popa
ss
or
bound
(bad)
sbb
pop
movs
jecxz
adc
dec
lea
std
je
sbb
push
leave
(bad)
sub
xchg
into
in
retf
mov
or
cmps
sbb
sar
pushf
push
push
fild
or
pop
mov
jmp
lods
repz
pop
push
push
gs
xor
mov
pushf
mov
es
sub
std
in
mov
pushf
dec
jmp
popa
aad
cmp
out
inc
out
xchg
test
es
out
loop
adc
or
jne
(bad)
fistp
inc
sbb
mov
mov
cli
jno
aas
sbb
lds
hlt
jne
inc
ins
and
push
add
pop
add
bnd
and
push
hlt
out
gs
mov
out
pop
nop
outs
test
cld
(bad)
adc
mov
sub
mov
into
leave
mov
inc
test
mov
or
jecxz
cld
jg
mov
adc
xor
(bad)
sub
jmp
frstor
jno
inc
xor
inc
xlat
pop
mov
inc
loop
or
test
dec
les
push
enter
sbb
cmp
inc
stc
xor
push
jmp
xchg
les
push
sbb
ja
stos
ja
push
add
dec
test
in
or
sbb
in
jp
pop
retf
in
mov
adc
push
add
cmp
fld
imul
sub
or
inc
lock
inc
xchg
je
mov
mov
jne
stc
int
lods
cdq
cmp
cdq
mov
xchg
or
sbb
mov
jno
pop
pop
mov
jbe
adc
pop
mov
sete
mov
cmp
fwait
loope
mov
cmp
or
push
nop
mov
cmps
or
retf
pop
out
and
ds
jmp
loope
push
div
in
std
xchg
loop
add
dec
mov
xchg
mov
inc
inc
xlat
jmp
das
inc
dec
ja
pop
add
lea
cmp
xchg
mov
sub
movs
nop
push
mov
es
jb
dec
imul
jbe
cmp
rol
jae
je
mov
and
not
call
push
mov
out
xchg
push
add
outs
xchg
mov
push
ret
sub
mov
jne
push
mov
loopne
sub
ret
xchg
adc
inc
xchg
mov
jl
dec
mov
mov
cmps
sbb
movs
xor
adc
jge
inc
or
lods
add
jno
clc
xchg
pop
cmp
or
test
pushf
adc
sbb
movs
or
pop
retf
lahf
mov
and
and
add
push
mov
jle
fstp
jmp
movs
cli
push
outs
outs
mov
mov
and
inc
xchg
add
mov
(bad)
adc
sbb
int
dec
inc
or
stos
fs
or
mov
xchg
mov
xchg
ins
jo
or
daa
jnp
(bad)
pushf
xor
mov
inc
xchg
push
lods
sub
dec
xchg
cmc
mov
cmp
dec
dec
jp
xor
cmc
mov
and
std
pop
inc
ss
retf
sbb
sbb
add
outs
lea
nop
(bad)
xchg
push
jno
fbstp
sbb
inc
mov
das
fidivr
out
inc
hlt
dec
jmp
and
mov
xor
mov
in
jo
dec
push
jp
cmp
jmp
int3
sub
mov
shl
aaa
das
cmp
cmp
jp
sbb
out
dec
popf
mov
add
sti
fldcw
mov
dec
xchg
cdq
fcmovnb
jge
inc
inc
cs
add
std
out
not
sti
push
sbb
dec
fdivr
mov
dec
xor
jp
push
inc
push
pop
in
xchg
mov
ds
addr16
fnclex
push
jl
and
and
pop
pop
or
in
in
xor
popa
in
in
outs
mov
xor
sub
mov
arpl
test
jo
push
fnstenv
das
pushf
mov
jmp
and
xor
adc
pop
sti
mov
xor
inc
sahf
add
enter
inc
xor
mul
(bad)
add
cmp
add
rol
and
lds
mov
scas
sbb
xor
shl
enter
pop
fwait
pop
add
xor
fnsave
jne
aam
addr16
loop
sub
cmp
xchg
aad
adc
cmp
dec
push
sub
or
sbb
scas
aaa
(bad)
push
pop
out
shl
mov
xor
pop
sbb
jmp
(bad)
or
jb
mov
mov
pop
daa
cmp
xlat
jbe
imul
ja
out
sbb
pop
sub
lods
pop
pop
jmp
add
movs
shl
pop
out
in
stos
mov
ss
int3
jp
add
add
fcom
xlat
push
sahf
xchg
xchg
xchg
pop
call
stos
pop
call
or
jne
jmp
sub
test
lahf
cmp
call
call
xor
lea
xor
sub
ret
cld
pop
xchg
sub
(bad)
ins
scas
aad
dec
cmp
push
inc
cdq
dec
xor
shr
test
ret
icebp
into
(bad)
push
cmc
add
out
lahf
mov
pop
and
loop
test
fdiv
push
sahf
ror
stc
xor
xadd
and
dec
xor
xchg
pop
fisub
sbb
push
jnp
outs
jecxz
outs
mov
icebp
mov
add
fmul
out
xor
fstp
cmp
mov
add
repz
data16
in
mov
dec
pop
cmp
sub
dec
popa
jbe
mov
add
cmp
adc
dec
push
(bad)
pop
jge
mov
imul
and
dec
fdivr
aas
fisttp
mov
test
adc
pop
xchg
jecxz
outs
fadd
adc
fdivrp
test
movs
je
xchg
out
and
dec
mov
out
mov
mov
and
adc
add
mov
xor
sbb
(bad)
xchg
mov
push
sub
or
loopne
fcom
and
jmp
std
push
xor
push
pusha
mov
add
xchg
or
xchg
or
sbb
test
(bad)
xchg
clc
in
jg
cs
mov
push
sub
lods
inc
cmps
mov
cdq
cmp
aad
int
movs
sub
(bad)
and
cmp
lods
addr16
or
fadd
or
cs
mov
push
mov
inc
jno
bound
(bad)
xchg
lea
sub
cmps
out
and
clc
les
imul
sar
push
dec
ins
sti
aaa
int3
xlat
xchg
pop
push
push
push
repnz
sub
iret
das
push
imul
sub
shr
push
cmp
fs
mov
sti
inc
hlt
popf
(bad)
dec
mov
(bad)
iret
jmp
repnz
pop
int3
xchg
loopne
and
cmc
add
fsubr
xchg
fistp
imul
fist
cmp
(bad)
cli
push
pop
popa
fiadd
rol
out
jmp
mov
lahf
sbb
aaa
mov
out
fwait
xor
add
and
(bad)
jle
sbb
pop
sbb
in
shl
sti
jmp
mov
jae
mov
inc
or
adc
push
sub
mov
push
mov
scas
mov
xor
jmp
xchg
inc
outs
fisub
sub
or
mov
aam
call
inc
xchg
jb
xor
xchg
jbe
jmp
inc
inc
inc
pop
mov
ret
jmp
pop
cmps
ret
in
fwait
push
sub
push
fmulp
mov
xor
push
adc
mov
movs
jae
cmps
je
test
js
pop
push
rol
in
mov
lods
test
jno
mov
lock
mov
std
sub
imul
dec
test
push
or
fs
inc
and
mov
inc
movs
dec
inc
ins
lea
pop
jge
push
cmps
adc
retf
mov
loope
mov
jmp
mov
ficomp
in
cld
jno
and
xor
test
cmp
je
and
jb
xor
pop
call
pop
mov
mov
(bad)
nop
imul
js
pop
push
or
sbb
dec
sub
adc
jge
mov
sub
push
lods
mov
xchg
sbb
or
fs
push
inc
sbb
das
jns
pushf
mov
cli
pop
scas
sti
xor
imul
xor
and
paddsb
mov
out
or
mov
inc
ds
jle
sub
push
scas
xchg
ins
mov
inc
rcl
jecxz
or
cmp
inc
js
jg
sar
pop
shl
retf
xor
mov
xchg
adc
sbb
shr
stos
sbb
inc
pop
cmp
inc
pop
xlat
xchg
pop
push
call
aad
or
or
ins
push
sar
or
mov
jae
out
arpl
push
cs
inc
mov
add
ja
mov
arpl
xor
jb
xchg
ret
fnop
bound
call
stc
and
push
test
pop
loopne
stos
call
or
jmp
fwait
out
pop
in
outs
rcr
mov
rcl
fwait
repz
dec
das
stos
mov
mov
imul
sub
arpl
aad
iret
mov
jo
ss
adc
ja
test
mov
inc
js
xchg
rol
in
aam
pushf
bound
fwait
mov
inc
stc
cli
xchg
mov
and
pop
xchg
dec
nop
or
arpl
popf
lea
test
inc
rol
aaa
mov
pop
add
test
push
sbb
iret
and
stos
fisttp
mov
ds
ficom
add
cdq
pop
dec
pop
test
icebp
scas
lock
sbb
ficomp
sbb
dec
xor
xchg
nop
test
or
loopne
rcr
xor
jmp
jp
jecxz
repz
sbb
cmp
sbb
sbb
aaa
and
test
data16
xor
push
into
hlt
cwde
xor
pop
mov
mov
xor
fimul
out
ss
in
call
xor
jg
mov
push
cli
rep
xchg
cmp
pop
shl
popa
xor
imul
fldenv
jge
jmp
inc
or
in
(bad)
dec
pop
push
(bad)
sbb
cmc
xchg
xchg
pop
lods
ja
jnp
in
dec
jns
fmul
pop
dec
mov
call
jl
adc
mov
stos
push
mov
add
jl
mov
xchg
in
jmp
(bad)
fwait
mov
dec
aad
push
mov
loope
push
ss
mov
lds
adc
imul
mov
cli
fmulp
xchg
mov
dec
jge
cmp
xchg
nop
add
lar
add
loop
pop
jns
cmp
pop
in
aas
dec
push
jmp
es
mov
xchg
or
daa
dec
je
retf
fidivr
cmps
push
mov
scas
and
jge
sar
dec
addr16
inc
cmc
in
adc
repz
mov
outs
and
sbb
pop
sahf
push
or
popf
cmp
adc
adc
cmp
xchg
int
fs
sahf
pop
jecxz
xchg
jae
mov
gs
sbb
mov
ins
mov
pop
mov
adc
push
call
int
into
push
xchg
out
(bad)
aad
into
out
sub
inc
and
and
loopne
loope
mov
xor
into
js
jmp
jns
outs
arpl
cwde
mov
jbe
jge
imul
fidivr
jp
add
fsub
ror
(bad)
fwait
cs
push
clc
mov
sub
sub
sti
xor
xor
mov
lods
cdq
pop
pop
mov
mov
rol
inc
mov
nop
cmc
rol
cld
dec
mov
mov
outs
mov
dec
aad
sbb
mov
shl
mov
add
mov
and
popf
jcxz
stc
jge
aas
movs
aam
loop
out
test
scas
jb
mov
xor
inc
push
sar
les
jmp
mov
mov
push
sbb
cmp
jmp
arpl
jns
scas
mov
call
push
mov
ss
add
cmps
sbb
adc
xchg
ror
pop
stos
loope
rol
test
aas
inc
call
sbb
mov
jb
jmp
dec
xor
adc
jmp
cwde
add
cmps
pop
sbb
test
inc
add
pop
sub
push
push
lea
sahf
out
dec
fs
sbb
inc
mov
push
push
adc
enter
rcl
sahf
loopne
mov
in
sar
aaa
in
mov
pop
jle
jecxz
jmp
test
outs
inc
push
jl
mov
ret
shl
(bad)
cld
imul
xchg
int3
jbe
pop
aas
mov
leave
xor
jnp
lods
inc
inc
ins
push
jmp
leave
fbstp
mov
movs
add
mov
jmp
push
cmp
xor
imul
and
adc
sar
jge
jnp
(bad)
and
int
aaa
pop
sbb
jne
sub
lods
xchg
out
(bad)
rcr
inc
es
ror
pop
and
sub
and
retf
sbb
mov
ja
adc
fiadd
or
push
into
lahf
jecxz
mov
xchg
ins
scas
into
xchg
and
or
inc
xchg
pop
lods
and
repz
mov
mov
fstp
fwait
mov
mov
outs
mov
in
or
popf
pusha
inc
call
adc
loop
cmp
test
rol
or
nop
movs
sbb
push
mov
mov
dec
mov
cli
arpl
pop
stos
jbe
add
sbb
fisub
sbb
cmps
jge
aam
mov
call
lahf
cmp
jnp
gs
push
pop
popa
ror
rol
int3
push
mul
inc
mov
stos
and
and
fdivr
xchg
ja
and
pop
lock
fs
in
pop
mov
rcr
mov
jnp
lea
adc
pushf
lods
xchg
sub
mov
xor
daa
dec
inc
in
mov
cmps
pop
sti
and
ins
daa
dec
sbb
mov
cmp
sbb
mov
fldcw
dec
pop
add
add
inc
xor
mov
dec
pusha
test
popa
in
gs
(bad)
pop
push
or
inc
sub
jp
or
add
adc
jo
es
cmps
jmp
repnz
not
xor
jg
mov
or
fild
and
xor
mov
retf
repnz
and
lock
add
fsubrp
fs
test
fisubr
jl
cmp
and
push
outs
hlt
mov
movs
mov
jae
loopne
cmps
addr16
aas
xchg
popf
mov
ror
xchg
in
cmp
xor
je
fild
mov
add
lods
test
jbe
mov
out
mov
mov
pop
mov
dec
sub
mov
or
neg
stos
xor
cmp
cmp
mov
xchg
rcl
inc
ins
les
push
dec
aad
xor
mov
iret
jns
sti
cmp
outs
mov
int
lahf
push
lods
lods
rcr
lods
retf
movs
gs
fadd
sbb
cmp
or
add
push
(bad)
mov
outs
popf
icebp
int3
fisttp
stc
call
loop
cmp
xor
adc
popa
js
test
jne
(bad)
je
rol
sub
inc
cmp
xchg
push
mov
jnp
jbe
jmp
adc
xchg
fisub
stos
push
cmps
imul
repnz
xchg
pop
inc
fs
ds
popf
jge
cdq
lock
jl
pop
test
inc
popf
aad
sub
fsub
les
data16
cmp
ret
mov
fstp
imul
std
jge
and
dec
sbb
sub
out
sahf
adc
push
add
jae
int
push
jg
xchg
repz
loopne
(bad)
jmp
jmp
out
aad
lds
cld
mov
loopne
xchg
ficom
cmp
sub
mov
lods
mov
and
xor
data16
mov
call
cld
sti
stc
adc
sub
push
add
(bad)
fiadd
test
sbb
push
jle
push
jmp
jl
sbb
jecxz
pop
inc
ds
out
push
popf
(bad)
in
call
sbb
mul
sbb
call
cmp
aad
mov
push
xchg
addr16
test
ds
mov
jecxz
sbb
and
arpl
test
dec
stos
rol
push
jo
jnp
sahf
and
sahf
les
push
test
inc
jl
mov
inc
cmp
fidiv
sbb
pop
mov
cmp
test
in
sub
sbb
push
iret
outs
jo
aam
test
dec
lods
sar
push
dec
sub
int
aad
push
shl
fmul
pop
imul
ja
jno
je
inc
sub
ret
cmps
iret
aaa
ror
sbb
in
xor
mul
or
sub
rcl
xor
leave
jecxz
dec
shl
ja
cmps
mov
pop
xor
jmp
push
imul
ins
aas
jmp
push
ss
jp
outs
js
popa
(bad)
int
add
ja
sbb
dec
xchg
push
dec
(bad)
nop
aam
(bad)
bswap
mov
xchg
ins
jo
pop
shl
fcmovnb
sub
sbb
cmps
int
and
push
(bad)
xchg
mov
retf
push
and
cmp
jno
jo
xchg
sbb
enter
lock
mov
fmulp
mov
addr16
ret
mov
enter
mov
sbb
mov
mov
or
out
leave
(bad)
jg
ret
ds
leave
cld
lea
adc
xchg
std
aaa
mov
imul
pop
and
jmp
ret
cmp
fs
sbb
lods
mov
rcl
mov
xchg
iret
pop
adc
push
adc
stos
sbb
sbb
mov
out
outs
pushf
inc
adc
and
lahf
cli
pop
or
ror
fcmovnb
mov
adc
(bad)
nop
pop
sbb
dec
adc
in
int
jns
adc
sbb
in
sub
popa
shl
imul
repz
stos
neg
in
repz
inc
cli
and
fcmovbe
lods
inc
hlt
test
iret
test
push
test
jl
mov
shr
mov
pop
int
add
mov
and
hlt
inc
lea
inc
sysret
xor
adc
outs
pop
dec
xchg
push
mov
jle
xchg
out
ins
call
repnz
push
mov
sub
out
test
fs
ror
cmp
lds
fcomp
mov
iret
clc
sbb
and
mov
lods
addr16
mov
and
cmp
ins
lahf
retf
and
cmc
dec
mov
stc
or
test
fld
lods
je
push
ds
xor
inc
call
lds
dec
cld
push
push
(bad)
aad
(bad)
jbe
in
jl
push
dec
rcr
cmp
(bad)
mov
dec
jge
in
mov
inc
mov
mov
mov
ins
fidivr
in
sbb
aaa
jns
inc
int3
dec
jo
lock
(bad)
cmc
and
mov
loope
adc
ja
(bad)
fnstcw
scas
xchg
sbb
je
in
xor
(bad)
leave
rcl
dec
ins
pop
scas
jge
test
fs
iret
cld
outs
lock
mov
rcl
and
gs
mov
lea
add
sar
scas
or
pop
push
jecxz
jp
add
pop
add
sub
into
sbb
xor
push
sub
or
dec
loopne
in
sysret
lods
fwait
in
inc
(bad)
mov
call
dec
mov
sub
pop
inc
std
jp
push
fwait
xchg
cmp
bound
jo
hlt
stos
mov
das
sub
(bad)
sub
jmp
adc
pop
div
out
mov
adc
clc
ds
jbe
cld
push
aas
pop
dec
push
add
sub
mov
jb
cld
sbb
pop
ror
leave
xchg
jo
cli
pop
gs
mov
pusha
clc
gs
jp
shld
(bad)
ss
das
out
and
les
mov
xor
jnp
(bad)
les
out
imul
xchg
leave
mov
dec
add
and
dec
pop
mov
pop
(bad)
sub
xchg
gs
mov
loop
(bad)
int3
cmp
(bad)
stos
cmc
retf
push
jns
xor
(bad)
ret
inc
xor
in
cmps
or
mov
lds
sub
add
(bad)
mov
pushf
bound
xchg
push
or
inc
xchg
(bad)
and
rol
jle
add
pop
ss
adc
cmps
int
mov
sahf
mov
scas
call
xchg
mov
inc
jle
mov
add
out
imul
fsincos
dec
ret
jo
inc
cmp
push
cmp
aaa
cmc
aas
outs
outs
xchg
mov
popf
retf
imul
les
sbb
push
jp
xchg
xchg
fldenv
mov
xchg
jp
mov
mov
push
(bad)
and
or
div
jge
push
int
sbb
leave
lea
loope
mov
and
inc
repnz
loop
das
ins
adc
loopne
pushf
mov
idiv
xor
dec
les
popf
pushf
cmc
fld
in
nop
and
or
mov
pop
nop
sbb
jbe
imul
shl
test
cmp
or
fwait
imul
lds
je
leave
jnp
sbb
pusha
out
jmp
mov
cmp
cdq
sbb
jns
mov
cmp
push
and
dec
sub
fcom
(bad)
lock
adc
repz
int
out
leave
fistp
scas
jmp
mov
dec
jg
inc
jb
lahf
push
inc
sub
sbb
sbb
sti
popa
pushf
jae
adc
sub
loop
in
cmp
stos
and
in
mov
and
dec
repnz
xchg
pop
js
push
cmp
sbb
mov
jle
ror
jbe
xlat
push
repz
ret
pop
aas
push
enter
popf
shl
repnz
xchg
mov
jg
std
cmps
repnz
imul
xchg
sahf
xchg
pop
pusha
rcl
add
add
aad
stc
jb
aad
jle
jae
pop
sti
cli
(bad)
aam
pop
int
xchg
xchg
ja
mov
mov
sti
adc
cmp
test
mov
mov
ja
mov
adc
(bad)
lds
sar
jno
jae
sar
mov
sar
mov
mov
mov
into
mov
cmc
inc
sub
int3
movs
mov
(bad)
mov
mov
jbe
push
imul
dec
(bad)
cmp
or
jns
sub
inc
movs
cmp
mov
and
mov
push
xchg
lods
xchg
arpl
clc
jecxz
call
movs
imul
aad
loopne
add
int
cmp
lods
fs
iret
add
sub
inc
shl
lahf
or
cmps
inc
mov
mov
arpl
pop
mov
mov
call
cli
pop
(bad)
cmp
and
test
jne
loop
mov
fimul
cmc
xchg
(bad)
jno
lahf
cwde
and
pop
ror
pushf
int3
inc
inc
retf
xchg
rcr
xor
out
or
push
xlat
(bad)
stos
jp
push
mov
movs
xchg
iret
mov
dec
mov
jmp
aam
sub
jno
xor
clc
cmps
jae
mov
add
shl
(bad)
out
daa
jo
shl
add
pop
fnstenv
sahf
stos
mov
hlt
inc
inc
in
jl
pop
jne
or
fwait
pop
frstor
inc
les
pop
inc
lods
imul
mov
scas
sar
nop
cmp
xchg
in
push
jnp
add
int
pop
jbe
int
push
and
xlat
mov
aas
leave
jge
xlat
mov
std
fisttp
enter
mov
daa
arpl
seto
push
push
pop
pop
hlt
div
push
push
adc
sub
adc
push
and
dec
pop
pop
adc
rol
lods
dec
sub
and
fsub
lock
xor
call
xchg
shr
and
rcl
cmps
adc
jno
sub
or
pop
pop
push
inc
nop
imul
mov
enter
clc
jmp
(bad)
(bad)
aas
sbb
mov
mov
nop
cdq
sub
or
cmp
fist
dec
cwde
or
dec
(bad)
adc
mov
jmp
mov
push
(bad)
push
fisub
lds
pop
sub
rol
aam
pop
and
sub
fdivr
les
or
jns
js
lea
ja
test
jge
clc
shl
call
or
cli
cmps
inc
jle
pop
sti
(bad)
dec
fisubr
jns
mov
sub
dec
mov
loop
push
cli
ja
cmps
xchg
xchg
in
inc
jne
xchg
dec
lods
aaa
push
push
int3
loopne
xchg
and
sub
aam
in
cmps
mov
cmp
push
in
push
sbb
mov
loope
mov
jne
push
or
inc
xchg
inc
lods
mov
outs
fild
mov
dec
push
mov
jmp
aad
jae
das
inc
pop
or
inc
pop
(bad)
outs
aas
jle
adc
cwde
les
xor
pop
ss
push
leave
or
mov
adc
mov
test
out
cmp
xchg
outs
mov
jmp
les
cmc
mov
out
out
js
cmp
stos
in
mov
inc
or
push
cmp
push
fs
push
inc
dec
adc
mov
addr16
sub
ins
rcr
and
dec
adc
add
popa
sbb
test
out
and
es
loope
xchg
mov
sar
daa
pop
(bad)
or
loope
mov
es
int3
fs
jo
pop
imul
xchg
adc
stos
jns
mov
xor
jmp
and
mov
lock
mov
lods
jno
loopne
pop
and
std
mov
fld
out
mov
sbb
and
shr
mov
dec
push
retf
mov
cmp
dec
cmp
mov
add
js
jge
icebp
pop
shr
push
fcom
push
ja
or
mov
loopne
call
pop
stos
adc
lock
test
nop
mov
imul
add
ror
mov
out
pop
ss
jbe
mov
in
push
mov
mov
mov
and
mov
mov
mov
pop
test
aad
mov
xchg
sub
xor
daa
mov
sbb
mov
xchg
mov
sbb
(bad)
xor
repz
mov
xchg
xor
cmp
ret
scas
add
retf
out
cmp
xor
shl
sub
cs
dec
mov
jp
out
mov
inc
or
dec
mov
std
daa
lods
xor
inc
fist
jl
(bad)
test
xor
(bad)
or
push
pop
cdq
mov
jne
cmps
loop
cmp
adc
call
and
in
imul
and
sti
or
jecxz
sar
lds
push
and
xor
adc
xor
leave
mov
fcomp
dec
cld
push
out
xor
mov
cld
mov
cmps
hlt
mov
(bad)
shl
mov
les
lods
fisttp
leave
mov
fldcw
mov
add
std
aam
cdq
call
in
dec
fdivr
lahf
sar
sbb
enter
mov
repnz
mov
iret
mov
cs
or
dec
push
stos
push
out
(bad)
mov
xchg
xchg
adc
in
xchg
sbb
retf
mov
jmp
xchg
fs
inc
or
test
outs
push
push
lea
mov
jmp
dec
push
loopne
sbb
sbb
push
inc
mov
out
and
mov
adc
or
imul
pop
int3
cdq
jg
pusha
sub
jne
xchg
ret
sahf
ror
mov
(bad)
adc
sub
sbb
outs
mov
mul
push
sub
jmp
jecxz
jge
ret
jae
cdq
dec
scas
(bad)
xchg
mov
data16
mov
mov
mov
jnp
imul
out
lods
(bad)
repnz
adc
mov
mov
jnp
cmps
sti
stos
bound
lods
ja
mov
fnsave
out
bound
push
pop
sbb
dec
adc
ror
sahf
fiadd
(bad)
stc
aam
push
xlat
dec
and
in
out
jge
lds
fs
out
cmps
xor
add
mov
xchg
pop
and
ins
mov
cmps
in
pop
mov
sub
lds
mov
(bad)
ds
push
jg
fs
xor
into
test
mov
mov
js
sub
ja
call
fist
cmp
repz
int
adc
repz
or
cmp
clc
movs
rol
sbb
or
xchg
mov
ja
in
mov
sub
ror
bound
xor
clc
add
mov
outs
aad
int
cld
push
push
pop
loope
iret
(bad)
(bad)
retf
pop
jnp
cmp
dec
icebp
push
sbb
rcl
sbb
adc
jle
and
adc
push
mov
in
pop
test
in
hlt
mov
(bad)
idiv
jge
lock
scas
clc
sar
mov
sbb
xchg
mov
in
pusha
popf
je
scas
call
cmp
repz
popa
push
xchg
sahf
xor
fild
cmp
(bad)
xor
fwait
jg
lds
sbb
sub
adc
mov
clc
push
mov
mov
shr
call
jp
nop
pop
mov
xchg
retf
inc
inc
ret
jbe
sub
fs
xchg
aam
sub
cmc
mov
or
cmp
sar
add
xor
xchg
pop
fsub
xchg
xchg
loopne
xor
jo
add
push
(bad)
stc
(bad)
jnp
fisub
jbe
mov
jno
push
cld
ror
shl
arpl
sbb
shl
rcl
call
ss
or
mov
sar
sub
mov
or
test
cmc
les
pop
je
mov
jmp
mov
cmp
ds
je
outs
dec
mov
and
fcmovnu
dec
add
pop
xor
shufps
outs
xor
in
cmp
dec
dec
int
xor
dec
sahf
sar
jbe
xor
mul
and
lods
sbb
push
(bad)
mov
fwait
ret
add
mov
nop
sub
repz
clc
xor
jge
addr16
push
push
sub
mov
(bad)
push
or
pop
cmp
or
or
inc
xchg
jmp
into
ss
in
stc
setns
in
mov
mov
(bad)
js
loopne
pop
mov
stos
cmp
cwde
dec
pop
add
lahf
dec
sub
add
rcl
dec
pop
loope
enter
(bad)
pop
call
aad
mov
xchg
pop
les
shr
repnz
and
add
nop
cmc
fnstsw
mov
rcr
dec
ins
repz
adc
mov
dec
mov
jns
pop
xchg
push
sbb
in
sub
and
pop
(bad)
shr
pop
mov
cmp
or
push
mov
mov
xor
xchg
ss
mov
das
or
loope
(bad)
push
dec
pop
sti
jno
in
pop
mov
shr
jg
stos
jns
cmc
aaa
lods
repnz
jge
mov
in
leave
lods
scas
inc
pushf
adc
push
out
(bad)
repnz
cmp
mov
cwde
cld
fdiv
inc
mov
jge
sub
jmp
and
sbb
icebp
jno
pop
test
cdq
dec
dec
and
es
jg
mov
lods
push
inc
gs
inc
sbb
int
es
pop
lods
mov
jle
inc
pop
int3
movs
xor
(bad)
mov
mov
adc
pop
or
push
ror
cld
cmp
sti
fistp
mov
push
mov
sbb
and
adc
(bad)
hlt
ins
call
stos
adc
int
ret
sbb
dec
mov
push
jge
pop
inc
jmp
xchg
fcomp
rcr
repnz
into
sbb
fwait
int
in
mov
jno
jle
stc
inc
push
and
shl
jno
lea
test
psubb
test
test
mov
jae
mov
mov
sti
clc
call
add
sub
jg
(bad)
iret
daa
fs
(bad)
scas
sub
cmp
shr
dec
jnp
psubsb
ins
(bad)
(bad)
cmovns
adc
movs
mov
scas
fstp
pop
and
(bad)
aam
rcl
xchg
push
in
jne
cmp
leave
leave
cmp
push
leave
(bad)
fs
mov
jae
push
cmp
enter
sbb
push
and
test
call
jnp
pop
mov
sar
repnz
jb
bnd
scas
xlat
push
test
(bad)
in
sub
mov
sub
and
mov
push
jno
jge
loope
mov
or
hlt
outs
cmp
sub
nop
(bad)
mov
leave
or
test
sahf
and
cmp
fdivp
sbb
jmp
sbb
sbb
dec
pop
push
xchg
cmp
test
loop
cli
cmp
jae
inc
(bad)
pop
mov
addr16
sbb
pop
out
mov
dec
test
shr
out
movs
pushf
std
lock
xor
fs
aad
mov
pop
mov
div
pop
cmps
or
push
inc
ret
out
push
scas
(bad)
ins
jle
sub
popa
jl
jno
jmp
jno
fiadd
mov
ret
xchg
mul
and
sahf
and
test
pop
dec
jne
mov
and
ror
xchg
repnz
int3
pop
push
jl
test
enter
out
ror
and
pop
neg
jb
pop
inc
pop
mov
pop
mov
pop
lods
push
jg
mov
lock
nop
pop
sbb
retf
sub
je
dec
pop
mov
add
hlt
leave
in
out
rol
or
test
retf
movs
out
add
ds
xor
mov
push
repnz
adc
fistp
inc
js
jmp
cmps
lods
ja
or
imul
dec
mov
mov
mov
push
sub
jnp
das
(bad)
jae
ds
jns
dec
dec
ret
popf
movs
jae
cmps
and
cdq
mov
or
outs
jns
cmp
rol
sub
xchg
mov
lods
out
test
xor
jne
pop
lea
mov
sub
xchg
mov
int3
out
jmp
(bad)
push
test
iret
jg
sub
add
or
cmp
das
icebp
cli
pop
jbe
in
pop
hlt
inc
or
dec
push
inc
movs
jmp
sbb
mov
xor
xor
xor
sub
jnp
test
or
rol
inc
xor
fimul
lahf
scas
jo
aam
mov
xchg
cmp
cdq
out
jl
pop
sub
test
mov
addr16
bound
sti
push
cwde
clc
popf
pop
xlat
sbb
inc
xchg
or
js
aad
aaa
jle
ss
push
inc
xchg
mov
fild
push
sub
imul
add
xchg
or
cli
xchg
test
mov
inc
pop
pushf
xchg
cmp
mov
div
cmps
mov
shl
cvtps2pd
les
imul
std
test
into
enter
add
dec
cmp
and
cdq
push
stos
ss
dec
xchg
inc
mov
stos
mov
jle
push
sub
jno
hlt
bound
and
pop
jmp
pop
add
cmps
lds
dec
sbb
mov
rcl
(bad)
lea
lahf
cmp
sbb
movs
pop
iret
mov
mov
outs
pop
mov
add
dec
sbb
push
ins
arpl
push
xchg
ins
and
out
xchg
mov
or
rol
pop
retf
mov
lahf
lea
retf
adc
loop
cmc
dec
and
dec
call
mov
and
cmp
jno
cmp
ret
sub
dec
pusha
push
mov
(bad)
mov
stos
dec
mov
mov
inc
sahf
rcl
ds
jns
adc
repz
int
push
pop
mov
cli
sahf
ins
pop
add
mov
repnz
or
mov
dec
in
bound
ja
mov
adc
mov
adc
fist
mov
push
cmp
jmpw
ret
pop
jo
xor
shl
mov
mov
vcmpsd
mov
xor
pop
mov
xchg
adc
or
rcr
or
scas
pop
repnz
pop
(bad)
shl
sbb
nop
inc
scas
fs
idiv
push
movs
fist
pop
jns
jne
lods
test
push
ss
adc
enter
adc
push
pminsw
or
mov
push
call
dec
xor
cmp
retf
inc
push
lea
pop
ror
shl
lods
in
and
jmp
sub
je
mov
adc
jecxz
(bad)
fisubr
sub
jl
jno
popa
clc
mov
leave
sub
add
movs
mov
movs
lock
push
nop
push
mov
cdq
(bad)
out
in
mov
cmp
adc
and
push
test
cmp
and
jo
inc
test
mov
mov
out
cmp
mov
inc
cli
shl
pop
pop
mov
test
mov
mov
adc
jmp
sbb
xor
mov
mov
push
stos
mov
stos
fwait
and
loope
cmc
add
je
mov
stos
push
sbb
call
jge
xor
jecxz
inc
setae
test
call
xor
gs
arpl
mov
jl
and
pop
nop
mov
lods
sbb
jmp
mov
push
iret
mov
fdiv
js
mov
mov
or
sbb
jae
mov
and
or
jp
push
jb
and
mov
xor
leave
sub
pop
push
jecxz
cmp
mov
and
(bad)
clc
aam
aad
pusha
add
jle
test
push
mov
inc
leave
or
cmc
je
scas
inc
(bad)
jg
mov
sti
inc
adc
das
mov
pop
xor
push
mov
jmp
cmp
xlat
sub
add
mov
jmp
xor
mov
xor
in
mov
pop
out
jmp
push
push
xor
ds
xor
outs
fwait
movs
mov
mov
cmp
rol
popa
jno
hlt
inc
pop
inc
outs
loopne
xor
retf
in
jmp
clc
mov
into
test
scas
add
rol
enter
push
and
mov
pop
fldenv
mov
push
jecxz
in
pop
add
mov
repnz
jo
cmp
cmps
mov
jmp
xor
(bad)
imul
imul
ss
jl
pop
mov
sbb
jbe
inc
and
pop
cmp
mov
adc
clc
add
bnd
add
xchg
adc
dec
cmp
pop
retf
inc
out
jmp
or
jge
pop
cmps
jno
imul
shr
push
addr16
sar
rol
push
inc
cld
cli
mov
and
xor
mov
sub
add
call
xor
leave
test
mov
push
fidivr
test
jb
xchg
test
test
pop
add
pop
mov
ins
shr
inc
test
cmps
fdiv
loopne
cmp
rcl
stc
enter
xor
fild
inc
and
jne
ins
imul
sub
loope
in
and
jl
pop
lds
leave
lds
loope
pop
pop
cmp
cmp
xor
js
dec
test
imul
fucomip
ja
inc
push
xchg
js
test
movs
sbb
jns
xchg
xor
frstor
inc
fsubr
imul
clc
ret
pop
xchg
addr16
jp
sub
jno
pop
xor
cld
je
iret
and
and
(bad)
call
cmp
mov
pop
jnp
lahf
sbb
push
int
jmp
stos
(bad)
(bad)
cld
cmc
pop
ret
cmp
pop
shl
cmp
and
fwait
inc
mov
or
inc
jbe
jmp
mov
pop
std
je
cmp
pushf
retf
mov
leave
sbb
test
sub
addr16
mov
mov
mov
movs
test
mov
jmp
leave
cmc
xor
adc
gs
push
ja
adc
stos
lea
and
loope
xchg
cs
mov
dec
and
cmc
and
push
xchg
stc
inc
lods
dec
lods
dec
mov
and
xchg
aaa
sub
jecxz
add
and
cmp
cmp
mov
out
ins
xor
xchg
push
mov
sub
add
mov
aad
ins
pop
sbb
xchg
cmp
inc
aaa
sub
pop
or
ror
je
fwait
dec
or
sbb
push
js
inc
add
and
scas
and
mov
fwait
push
fbstp
xchg
ficom
inc
dec
pop
push
test
das
std
dec
lods
sbb
xchg
mov
inc
pusha
arpl
or
pop
repz
leave
dec
out
and
retf
stos
and
pop
loope
xchg
imul
cmp
lock
loope
push
mov
aaa
repnz
xor
xor
pop
xchg
mov
push
mov
or
fwait
iret
imul
xchg
test
ins
repz
or
arpl
jmp
mov
push
or
int
add
sti
adc
jge
ret
int3
stos
mov
dec
cmps
inc
adc
xchg
add
push
jp
repz
push
mov
cmp
jae
sub
adc
xchg
xchg
ja
cmp
push
ficom
mov
cmp
inc
inc
adc
add
out
or
popa
adc
pop
arpl
inc
mov
mov
aad
loopne
mov
cwde
cmps
add
xor
adc
xor
mov
push
sub
sahf
inc
aam
sbb
popf
jge
ret
je
loopne
xor
push
bound
jbe
fbstp
sbb
cld
lsl
cmc
daa
adc
xchg
xlat
mov
cmp
fld
out
ja
mov
and
retf
push
std
int3
cmc
arpl
iret
push
es
(bad)
pop
jmp
(bad)
jle
imul
and
(bad)
(bad)
adc
rol
movs
pop
push
mov
in
mov
imul
int3
add
pop
cld
sub
mov
mov
jmp
sub
xor
add
leave
or
dec
mov
jmp
int
jnp
inc
fs
stc
adc
fidiv
inc
test
bswap
mov
fwait
pushf
add
sti
adc
push
mov
jle
test
cmp
dec
dec
sub
jg
ficom
shr
fimul
jae
or
jnp
mov
add
or
movs
mov
push
pop
imul
das
popa
cli
aad
jb
sbb
adc
inc
xor
xchg
inc
test
retf
mov
push
stc
in
loopne
jge
nop
and
scas
mov
mov
jp
cmp
xor
sbb
mov
adc
push
and
adc
push
inc
out
mov
shr
es
xchg
push
jae
add
jbe
daa
dec
in
fstp
(bad)
jbe
scas
mov
rcl
call
scas
adc
or
icebp
pop
add
(bad)
jmp
sub
cmp
out
js
aad
not
xchg
clc
cmc
(bad)
das
jg
pop
lock
iret
call
shr
jne
sbb
(bad)
dec
sub
jno
test
daa
jbe
jmp
push
and
xchg
mov
mov
cwde
add
test
dec
lds
add
pop
add
cdq
mov
sub
and
pop
aas
add
sub
jo
data16
cdq
(bad)
pop
sub
das
mov
push
int
stos
jae
pop
cmc
imul
xchg
push
and
rcr
or
(bad)
cmc
jae
pop
sbb
(bad)
mov
call
dec
pop
push
into
sub
pop
add
xor
pop
push
repz
mov
xchg
mov
mov
and
adc
std
and
rcl
loope
sub
aaa
add
inc
jo
cs
cmps
std
je
add
cmps
xchg
or
(bad)
pop
sti
adc
icebp
cmp
mov
loop
push
mov
int3
and
xchg
sub
sub
add
sub
cli
mov
push
dec
or
fcomip
enter
std
xor
int
fidivr
and
jl
sbb
(bad)
(bad)
and
loop
inc
jo
je
fdiv
mov
xchg
std
add
xchg
or
xchg
pop
sbb
mov
sbb
mov
pop
add
mov
cwde
jmp
or
push
push
stos
idiv
mov
jbe
je
jecxz
sbb
cwde
addr16
ficom
mov
outs
or
pop
fsubr
add
test
cmp
and
aaa
jns
add
test
inc
or
mov
stc
sub
retf
rcr
fadd
pop
retf
scas
ror
out
mov
not
inc
out
mov
daa
mov
sub
mov
lds
pop
fbstp
(bad)
scas
push
stos
pop
std
dec
in
mov
movs
popf
dec
or
stc
and
pop
paddd
out
loopne
in
inc
cmp
add
inc
and
sub
test
pushf
cmp
mov
dec
sar
mov
push
pusha
test
and
push
sbb
cmp
push
and
mov
xchg
and
arpl
pop
js
shl
jge
cmps
ins
pop
ret
gs
int3
jne
pop
(bad)
xchg
jnp
inc
les
dec
adc
mov
jg
xor
(bad)
jp
in
pushf
scas
add
hlt
adc
push
vpaddb
adc
(bad)
aam
and
inc
je
adc
imul
outs
iret
push
push
mov
xchg
repnz
dec
mov
rol
inc
jg
fsub
es
jo
ss
test
xchg
retf
aaa
xor
or
jbe
dec
push
pop
cmps
cmp
clc
xchg
mov
not
mov
jge
or
test
mov
inc
pop
dec
xor
idiv
dec
sbb
cld
sub
sbb
jp
sbb
(bad)
movs
ins
cmps
pushf
push
adc
pop
mov
dec
out
sahf
push
lods
xor
xlat
out
or
mov
fisubr
dec
jbe
cmp
xor
sbb
adc
test
std
call
xchg
mov
mov
(bad)
out
pop
out
or
or
jl
pop
cs
adc
(bad)
adc
push
mov
cwde
shl
push
(bad)
sbb
jno
mov
adc
adc
adc
push
movs
xchg
push
jno
fsub
(bad)
fdiv
iret
xchg
cmp
inc
sub
fdiv
sub
das
test
test
das
int3
lea
or
test
inc
(bad)
cmp
push
adc
cmps
das
in
mov
dec
mov
dec
xor
sub
iret
add
daa
frstor
and
jecxz
cmps
fs
ja
jo
xor
inc
data16
push
xlat
push
pop
sub
es
fisttp
in
xchg
ret
xor
xor
or
mov
jmp
add
aaa
inc
mov
aas
je
sar
in
(bad)
fiadd
sub
cmp
mov
mov
daa
mov
aam
and
push
jnp
mov
(bad)
mov
sub
push
jmp
cmps
ret
mov
and
jo
jl
fs
jle
inc
sub
aad
loop
mov
push
and
and
cmc
sub
xchg
dec
shl
dec
mov
mov
cmp
and
pop
test
inc
imul
lock
stos
cmps
mov
jp
loope
not
rcr
inc
and
or
fst
out
add
loope
cdq
push
jnp
(bad)
or
push
pop
sbb
mov
clc
pop
in
sbb
sbb
sub
pop
test
(bad)
ja
cdq
or
xchg
pop
loopne
cli
pop
mov
mov
rcl
jmp
cmc
dec
test
xor
out
xchg
sahf
fidiv
mov
jecxz
inc
push
jle
xor
dec
jp
lahf
cli
xor
sti
xchg
out
inc
push
(bad)
mov
cvttps2pi
daa
push
push
pop
imul
mov
test
les
outs
mov
(bad)
(bad)
lods
fdiv
aam
out
int
or
dec
push
cmps
fwait
add
ins
mov
neg
pop
xor
cmp
mov
repz
and
dec
mov
cmc
test
scas
jecxz
cmps
pusha
js
out
cvtps2pd
inc
imul
aas
jmp
sbb
sub
fwait
or
push
stc
ins
mov
test
shl
sar
repz
in
retf
je
imul
test
in
mov
rol
test
and
mov
(bad)
xor
cmp
dec
stos
mov
outs
and
not
loope
out
push
adc
outs
inc
js
call
sub
addr16
mov
dec
xchg
lock
pop
ins
xchg
fist
xor
cmp
aaa
adc
sbb
cmp
pop
push
sbb
or
sbb
ret
fs
je
call
jb
and
jae
mov
adc
jae
test
push
lea
dec
test
test
adc
mov
dec
in
sub
outs
sub
and
or
and
sbb
(bad)
mov
add
or
sub
cld
push
mov
aad
shl
dec
pop
or
inc
xchg
fcomip
push
mov
xchg
jmp
icebp
mov
pop
pushf
rol
and
add
test
aaa
cli
das
push
cmps
outs
push
and
dec
leave
xlat
loop
xchg
xchg
outs
cmp
and
shl
sub
jnp
lahf
in
imul
sbb
out
lods
rcr
(bad)
fdivrp
repnz
std
xor
sar
jg
adc
aas
mov
int
sbb
cmp
fdiv
sub
xchg
scas
fdivr
retf
(bad)
push
cmp
bound
and
push
cmp
mov
(bad)
mov
xlat
sti
xlat
loop
sbb
loopne
mov
es
in
sar
fisubr
cmp
add
cli
xchg
mov
mov
and
mov
cli
inc
jno
inc
sbb
add
out
mov
dec
mov
adc
inc
lahf
dec
xchg
mov
fsubr
xchg
outs
add
lods
and
mov
jo
loopne
cmp
scas
add
mov
imul
jb
cmp
mov
jns
xlat
lock
dec
push
pushf
cmp
loop
imul
sahf
sub
shl
rcl
mov
sub
repnz
scas
sub
out
inc
fistp
arpl
loopne
jmp
aas
into
pop
dec
xchg
out
dec
imul
ja
fisubr
mov
repnz
ds
not
mov
pop
arpl
js
mov
bound
loope
fisub
pop
sbb
inc
cld
or
cmp
add
call
js
mov
lods
mov
cmp
scas
cmp
fsub
jg
pcmpeqw
mov
push
mov
or
pop
imul
push
add
mov
dec
mov
xor
enter
addr16
adc
popa
jmp
dec
jecxz
mul
inc
add
jne
jecxz
sbb
mov
add
aam
lahf
int3
out
mul
inc
mov
popw
jno
loope
lods
ins
imul
mov
in
pandn
out
jcxz
jno
rol
fdiv
and
stos
call
inc
push
xor
int3
fsubr
cdq
pushf
mov
popa
jge
dec
and
or
mov
push
sbb
mov
outs
cdq
lds
jle
mov
jp
inc
add
jle
clc
mov
les
ret
jns
xchg
adc
aaa
mov
add
cmc
jp
mov
frstor
jno
cmps
push
xchg
push
add
pop
xlat
sub
rcl
test
push
neg
add
mov
jmp
enter
rol
ds
push
mov
push
not
sub
push
imul
popf
and
dec
shl
jmp
popa
mov
sbb
int3
pop
lds
jne
jo
ins
ret
push
je
push
mov
int
std
xchg
sbb
add
add
mov
je
mov
rol
clc
dec
in
and
ss
add
mov
add
pop
mov
fld
cmp
adc
js
lods
leave
xor
ins
jecxz
xor
dec
mov
push
aaa
stc
mov
loope
sbb
inc
jne
dec
mov
add
ss
or
loope
rcl
js
mov
ret
push
cld
sti
test
xchg
pop
add
pop
enter
jle
ins
lahf
js
cmovno
pop
arpl
sbb
enter
sar
dec
push
add
pop
xchg
lods
mul
cwde
int3
inc
jle
outs
fcmovne
cmps
out
or
push
fs
cmc
sub
pop
std
pop
mov
jg
das
bound
imul
sahf
push
pop
xchg
in
jne
add
cmp
mov
add
loopne
std
cli
into
(bad)
sahf
popf
jge
ror
push
rcl
xor
mov
in
fmul
scas
pop
ja
pop
mov
(bad)
mov
out
imul
add
mov
cmp
sub
sahf
iret
inc
retf
enter
mov
(bad)
aas
xchg
movnti
test
sub
scas
mov
fs
mul
cld
ror
add
ret
push
sahf
jnp
out
sahf
hlt
dec
push
sbb
cmps
lods
loop
cdq
into
scas
jge
push
and
out
sbb
icebp
mov
push
dec
outs
stos
and
adc
leave
adc
aam
rcl
jae
aam
leave
rol
mov
mov
cmp
and
sbb
push
mov
mov
cmp
aad
and
scas
lahf
outs
call
jmp
(bad)
retf
retf
rcl
fwait
hlt
leave
fnstcw
adc
ret
or
or
push
inc
mov
not
sub
out
push
lahf
pop
fld
cmps
imul
aad
imul
pop
call
(bad)
sti
das
mov
dec
lods
adc
and
adc
xor
and
inc
in
jb
push
xlat
data16
pop
adc
mov
retf
xchg
pop
outs
sub
arpl
push
int3
dec
lock
int3
cmp
fadd
jge
pop
fisubr
jecxz
sub
cdq
xchg
jl
iret
jnp
imul
iret
arpl
addr16
test
inc
scas
xlat
cld
cmc
mov
push
dec
jnp
frstor
or
sbb
inc
idiv
jo
in
dec
mov
mov
ins
in
in
push
aam
pop
xor
sbb
aaa
hlt
add
sub
adc
add
adc
dec
cmps
cmps
inc
dec
imul
mov
adc
xor
mov
push
fnstenv
xchg
lahf
mov
setg
push
enter
mov
or
sar
pop
add
repnz
xchg
pop
push
xchg
add
loop
fstp
test
adc
xor
xor
neg
int
call
aam
and
cmp
loope
mov
aam
retf
add
sub
and
(bad)
cli
int
mov
shl
dec
jnp
ins
stos
fstp
adc
jmp
iret
jmp
cwde
jb
movs
clc
scas
or
out
sub
je
fincstp
loop
push
mov
or
(bad)
clc
sbb
adc
hlt
mov
or
movs
or
dec
popa
(bad)
dec
outs
push
mov
fdiv
bnd
fdiv
cmp
adc
icebp
lods
sub
js
xor
not
jle
mov
mov
ins
add
in
inc
pmullw
fwait
pop
sub
addr16
mov
cmp
adc
push
rcl
xor
xor
jp
mov
dec
sub
dec
mov
mov
into
inc
sub
cmp
pop
xchg
js
fist
stos
imul
ins
mov
push
imul
push
loopne
or
and
cdq
cmc
sbb
xchg
sti
enter
pusha
addr16
xchg
call
push
fcmovbe
sub
mov
in
pop
cmps
and
outs
pop
rcr
bound
addr16
add
stc
fcomp
pop
inc
jb
loopne
dec
cmp
inc
imul
pop
pop
jmp
mov
cmp
(bad)
push
das
iret
push
or
or
mov
daa
loopne
add
ret
sbb
push
mov
into
push
call
cld
mov
lods
fucomip
js
cmps
test
div
in
ror
push
fisub
cmps
push
mov
push
add
popa
sub
fs
mov
es
jl
rcl
cld
mov
icebp
cli
mov
shr
jae
(bad)
jl
and
rcr
hlt
aam
add
les
xor
nop
cmp
clc
sbb
js
mov
sbb
(bad)
and
jb
or
cmp
nop
hlt
ss
adc
inc
pop
ret
lds
(bad)
cmp
xor
pop
fstp
dec
out
inc
push
aam
hlt
or
and
cs
arpl
pop
hlt
ret
xchg
xchg
add
ficom
adc
in
call
mov
mov
mov
mov
in
rcr
adc
ror
pop
jae
xchg
jo
cmp
sub
or
push
stos
inc
stos
push
dec
inc
scas
mov
add
push
inc
test
pop
(bad)
leave
adc
test
xchg
test
mov
mov
xchg
sbb
ja
rol
xchg
sub
push
cmp
aam
(bad)
dec
loopne
add
imul
hlt
and
shl
test
dec
fmul
sbb
and
sub
pop
adc
or
mov
add
in
fs
jmp
and
out
mov
mov
xchg
shl
adc
mov
loop
int
aad
cmp
(bad)
xor
inc
xchg
dec
lds
in
fwait
adc
jbe
daa
stos
cmp
ins
cmp
jg
scas
(bad)
jp
fld
dec
fst
das
mov
test
mov
out
enter
push
xchg
cmp
mov
xchg
iret
bound
sub
xchg
adc
outs
pop
out
stos
cld
xchg
mov
push
stos
clc
mov
fbld
fidivr
jecxz
adc
mov
out
fwait
cmp
mov
adc
sti
or
cmp
push
mov
adc
retf
repnz
test
bound
(bad)
sbb
movs
pop
shl
jecxz
mov
arpl
jmp
aad
fdiv
xor
iret
dec
cmp
imul
dec
(bad)
xor
and
dec
jns
jp
mov
ins
push
cmc
les
mov
sbb
ret
popw
(bad)
pop
ret
mov
mov
pop
inc
sub
ins
shr
mov
xchg
test
push
sar
ss
inc
lock
sbb
icebp
popa
jle
cmps
cwde
repz
adc
mov
mov
inc
fnstenv
loop
add
mov
fild
pop
shr
adc
scas
int
and
xchg
fimul
cmp
pop
dec
add
(bad)
imul
fisttp
mov
pop
fild
add
push
cld
aaa
inc
cmp
test
pop
cli
mov
enter
xor
js
xchg
pop
mov
and
or
pop
enter
and
push
ins
fnstenv
or
mov
(bad)
cmp
call
pop
xor
in
add
movs
sti
stc
dec
cwde
aam
sub
mov
xor
jne
xchg
or
cmp
sub
aad
xchg
xor
cmp
pop
mov
dec
dec
out
add
pop
push
sub
cdq
loop
pop
scas
daa
shr
mov
mov
push
adc
add
xchg
into
or
pop
xor
jmp
int
adc
dec
call
or
adc
push
stos
iret
iret
loope
xchg
fwait
xor
push
psubsw
ins
jnp
popa
fsubr
dec
cmp
adc
lahf
push
sbb
cmps
inc
repz
outs
push
fcomp
sbb
ret
mov
xor
sbb
aad
push
cmp
sbb
sub
pop
dec
add
sar
nop
jns
sub
das
or
sbb
jns
cmp
aad
and
sub
fldcw
sbb
shl
dec
adc
stc
mov
out
sbb
int
sub
push
enter
push
adc
jg
jmp
cs
jge
push
add
nop
or
push
mov
out
adc
scas
loopne
call
cs
cmp
cmp
sbb
mov
mov
scas
mov
or
xor
inc
addr16
mov
add
jae
gs
lea
mov
mov
xor
add
sbb
jecxz
je
add
jle
test
call
ins
clc
dec
in
fwait
cmps
ror
sub
retf
xchg
out
cmp
dec
mov
and
shl
nop
popf
mov
pop
jmp
test
out
mov
xchg
jge
jp
mov
inc
jp
cmp
std
fcomp
arpl
adc
mov
shl
sub
sub
dec
xchg
outs
jmp
dec
js
data16
inc
js
push
aas
test
repz
xlat
in
fstp
stos
out
adc
imul
xchg
pextrw
jo
in
cs
lds
outs
dec
lahf
mov
or
xchg
jne
and
mov
add
pushf
and
icebp
retf
mov
dec
cs
dec
lods
fwait
mov
jge
retf
pushf
fs
sub
pop
std
xor
adc
(bad)
pop
xchg
pop
call
fs
pusha
imul
scas
jmp
dec
dec
push
push
out
(bad)
cdq
adc
fs
(bad)
mov
add
push
push
mov
loope
cwde
jmp
xchg
cld
arpl
hlt
jp
(bad)
adc
sbb
adc
repnz
push
and
inc
cmp
push
sub
jnp
sahf
js
add
push
add
push
mov
push
adc
add
cmp
sahf
jecxz
out
cs
test
loope
and
mov
(bad)
jmp
xor
or
lods
jmp
push
cmp
int
inc
jmp
test
pop
sub
in
fucom
aaa
lds
add
rcr
or
aam
ror
out
jns
xchg
add
ret
out
ret
imul
sbb
or
add
push
mov
xor
pop
cs
push
outs
in
push
mov
call
mov
pop
fs
sub
sub
push
data16
sbb
pop
dec
push
fidiv
scas
in
push
jb
imul
and
shl
popa
pop
data16
mov
cmp
popa
scas
inc
mov
dec
jbe
mov
arpl
add
xchg
fld
lods
sbb
dec
bound
(bad)
js
pop
pushf
sahf
xor
pop
mov
cmps
sub
sub
cmps
xchg
mov
hlt
dec
add
sub
pop
or
sbb
movs
pop
xchg
popa
push
mov
and
sub
or
loop
or
mov
and
iret
cwde
popa
shl
pusha
int
fwait
movs
je
test
add
pop
arpl
inc
pop
imul
dec
cdq
lds
clc
(bad)
add
stos
xchg
movs
psadbw
sbb
imul
cli
jnp
mov
cmps
pop
mov
pop
clc
jg
cs
fldcw
pop
inc
popa
dec
push
inc
inc
bnd
adc
lahf
push
std
inc
push
inc
ret
into
sahf
jne
sub
mov
xchg
(bad)
call
xor
das
jmp
test
lods
pop
push
fild
cwde
lock
lods
nop
jmp
test
or
cmp
sti
jecxz
push
inc
shl
push
adc
sbb
emms
int
lds
aam
ins
call
xchg
call
ja
ror
mov
xchg
into
push
clc
cld
push
(bad)
mov
xchg
in
mov
adc
out
mov
test
xor
hlt
ror
(bad)
in
sub
imul
out
scas
jmp
mov
loopne
ret
xor
xor
adc
popf
cld
js
push
int
outs
jmp
fcomp
jmp
in
add
repnz
addr16
in
cld
mov
fld
aaa
sbb
loop
sbb
sti
pushf
add
bnd
add
test
adc
shr
jns
jmp
mov
fs
pop
es
stos
mov
mov
dec
pop
mov
mov
aam
jo
shl
loop
nop
xchg
nop
in
movaps
pop
mov
mov
xchg
mov
outs
mov
pop
es
aad
js
adc
(bad)
jnp
jae
xchg
aam
cmps
jbe
loopne
sub
sbb
mov
inc
jmp
mov
pop
mov
xchg
mov
add
pop
ins
jbe
mov
(bad)
call
xor
retf
fidiv
movs
pop
pop
ror
and
lock
shr
fiadd
and
sbb
mov
jmp
and
or
xchg
outs
push
cmc
xlat
jg
leave
jns
mov
scas
jmp
(bad)
xlat
push
xchg
and
add
imul
mov
inc
test
adc
mov
in
xchg
mov
sar
inc
xor
add
sbb
mov
(bad)
jmp
into
movs
(bad)
iret
js
mov
jbe
ins
(bad)
lahf
mov
mov
xchg
jae
scas
or
push
aad
xor
inc
pop
loopne
stos
inc
inc
push
inc
push
push
out
jne
ret
ja
cmp
ins
pusha
adc
popf
xor
dec
pop
mov
cmp
ret
jne
scas
sub
(bad)
out
jbe
cli
cmp
pop
pop
push
in
hlt
cmps
(bad)
mov
adc
test
mov
add
in
cli
pop
in
test
xchg
mov
mov
jbe
sbb
push
daa
mov
iret
(bad)
hlt
cmps
sub
les
xchg
arpl
in
or
fs
add
loopne
cmp
push
xor
daa
xchg
ror
and
jbe
fwait
push
lock
mov
push
icebp
cmp
out
test
mov
and
pop
(bad)
rcr
test
xchg
mov
clc
loop
adc
mov
cwde
jl
cmp
jne
or
adc
bound
es
movs
sub
daa
nop
(bad)
(bad)
mov
mov
jmp
add
sub
mov
pop
or
and
lahf
pop
cli
stc
div
mov
out
inc
stos
inc
sub
inc
inc
add
mov
push
push
xor
xchg
mov
fisub
jns
sub
or
(bad)
cmp
bnd
mov
cmp
dec
mov
xchg
mov
iret
adc
aam
lods
aam
neg
daa
push
push
adc
icebp
ja
and
push
add
retf
sbb
outs
shl
lock
lods
daa
or
not
push
fimul
sub
sub
pop
push
les
pop
repz
xchg
pop
push
cmp
test
adc
mov
ins
fwait
xor
aaa
jno
lods
repz
push
dec
mov
ja
sub
and
mov
shl
lods
dec
inc
push
test
cld
in
not
popf
ds
nop
xchg
or
fs
retf
cs
push
mov
xchg
push
xor
jns
push
jecxz
inc
cli
ror
cmp
mov
xchg
fdiv
jle
movs
das
and
jge
ss
mov
and
icebp
leave
inc
leave
retf
cmps
stc
xor
inc
cmp
hlt
xchg
je
test
xor
inc
(bad)
pop
inc
outs
lock
mov
adc
push
add
push
addr16
pop
js
xor
js
(bad)
stc
(bad)
dec
adc
jo
clc
adc
mov
inc
retf
out
test
aas
stos
sbb
pop
push
mov
cmp
push
jo
xchg
ins
or
scas
fstp
add
sub
scas
js
(bad)
or
sub
(bad)
and
ins
add
push
mov
mov
into
sbb
pand
pop
js
cmp
push
xor
lods
or
jns
jb
xor
arpl
xchg
xchg
or
xor
fcmove
enter
xor
ss
fcomp
jp
faddp
cs
mov
cli
(bad)
clc
push
mov
repz
int
in
cmp
mov
cmp
pop
outs
call
movs
std
cmp
xor
adc
mov
shl
in
lock
pop
mov
shr
loope
ret
daa
test
push
ret
repz
adc
mov
inc
cld
mov
jo
js
xor
scas
imul
ja
mov
xchg
inc
ret
and
scas
ins
or
aad
mov
dec
fisubr
aaa
jmp
es
enter
div
(bad)
inc
das
jno
push
xor
dec
cmps
clc
and
cmp
sub
push
cmc
in
in
push
mov
test
xchg
les
mov
push
adc
jns
push
mov
imul
mov
pop
add
fcom
push
mov
and
pop
in
fs
and
push
dec
and
cdq
push
loop
sbb
sub
inc
movs
arpl
push
call
add
dec
sub
mov
stc
fneni(8087
pop
fbstp
jae
push
dec
xchg
ret
imul
xor
xchg
xor
xlat
test
rcl
ror
jns
shl
and
xchg
rol
pop
pop
pop
ret
aam
test
push
outs
mov
sub
jle
enter
mov
mov
das
adc
aaa
push
sbb
mov
mov
xor
in
arpl
ror
dec
pop
lock
or
mov
mov
nop
loopne
aaa
mov
hlt
ja
sub
ja
inc
pop
xchg
retf
jmp
ret
repnz
arpl
popa
pop
pop
dec
xlat
jl
and
and
push
shld
inc
and
or
test
mov
jne
and
fild
repz
adc
xor
popa
sbb
lods
jle
loope
js
scas
mov
(bad)
scas
aas
cmc
fs
pop
xor
push
xlat
sbb
or
mov
enter
loop
aas
dec
sub
out
test
shr
mov
or
(bad)
cmp
imul
sub
inc
add
mov
je
outs
xor
pop
xor
pop
test
loop
push
ins
outs
aam
sbb
mov
xor
lods
cdq
xor
add
in
fwait
xchg
(bad)
rcr
mov
aas
xchg
and
das
or
mov
popa
cld
pusha
sbb
test
mov
mov
sub
add
lea
dec
rol
popa
adc
gs
mov
or
stos
add
out
xchg
cli
xor
les
outs
push
(bad)
daa
scas
dec
in
push
ret
inc
(bad)
push
sub
pop
jecxz
or
mov
(bad)
dec
or
jb
jmp
loop
xchg
and
into
and
sub
sbb
cwde
gs
add
(bad)
adc
jp
js
cmps
daa
dec
inc
push
daa
fcmovbe
mov
xor
sar
add
lods
cdq
mov
dec
in
in
fild
mov
cmp
dec
cmc
fnstcw
test
popf
in
add
mov
sub
xchg
out
(bad)
mov
inc
pop
mov
xchg
in
xchg
cmp
mov
push
and
mov
cmp
je
test
loopne
pop
lea
sbb
shl
cld
ret
push
mov
imul
push
mov
pop
mov
adc
mov
test
xor
mov
neg
icebp
adc
daa
push
movs
out
dec
popa
int
pop
pop
repnz
fisttp
sbb
mov
cmp
dec
jge
addr16
repz
es
iret
scas
pop
mov
lahf
call
dec
xchg
mov
xor
fistp
aas
cmps
data16
das
push
mov
adc
leave
lea
(bad)
lods
jmp
sbb
xchg
clc
pop
out
repnz
cs
adc
jg
inc
adc
jecxz
cmp
mov
sub
ficom
cmp
addr16
inc
xor
sub
xchg
ss
mov
je
mov
cdq
out
shl
mov
mov
pushf
loopne
dec
or
repnz
ret
arpl
adc
das
jns
mov
mov
les
out
sbb
shr
dec
add
ja
add
adc
fs
pop
lods
enter
sbb
push
ret
jle
pop
and
push
scas
inc
in
dec
xor
and
xor
xchg
es
lock
mov
inc
sub
mov
(bad)
test
sbb
cs
inc
pop
popf
sub
jns
or
jmp
pop
mov
cmp
aas
and
sbb
movhps
int3
(bad)
retf
fnstsw
sti
outs
adc
cld
je
(bad)
icebp
mov
push
in
inc
inc
das
xchg
and
mov
lock
dec
jle
mov
mov
cmp
imul
mov
jle
jno
pop
jge
fmul
ror
and
jno
mov
inc
fs
adc
adc
cmp
(bad)
jl
pop
iret
(bad)
fstp
fs
xor
mov
jnp
es
(bad)
fmul
xchg
hlt
outs
call
mov
inc
sbb
bound
cmp
(bad)
fldl2e
(bad)
cmp
push
aas
and
adc
lods
test
(bad)
mov
fmul
mov
cli
fwait
mov
and
xchg
or
fs
in
retf
dec
push
lods
jo
and
out
mov
aam
loop
rcr
arpl
sbb
sub
scas
and
pop
push
mov
addr16
xor
mov
(bad)
not
stos
ds
xor
fisttp
add
call
pop
xlat
in
mov
mov
mov
loopne
jge
fidiv
and
loop
sbb
gs
cmp
sub
xchg
retf
retf
jge
sub
jp
mov
(bad)
cdq
xor
lods
not
out
loop
cmp
gs
mov
(bad)
(bad)
sub
pop
movs
movs
dec
ins
(bad)
call
xchg
and
out
or
add
ret
push
inc
adc
adc
mov
gs
jmp
hlt
shl
out
cmc
ja
mov
outs
out
xchg
sbb
retf
jb
mov
ret
cwde
or
add
cmps
sbb
mov
sbb
pop
adc
pop
shl
xor
pop
mov
hlt
lahf
cwde
mov
lea
fisttp
shl
jno
leave
lds
(bad)
mov
adc
jecxz
(bad)
adc
add
cmp
aas
cmc
adc
sub
push
push
dec
and
stc
lea
and
sbb
xchg
xor
mov
test
mov
mov
cmp
loopne
jbe
inc
repnz
inc
jecxz
or
pop
or
xchg
jbe
inc
rol
push
stos
iret
rol
or
pop
retf
jnp
xchg
jg
imul
je
and
mov
retf
pushf
xchg
lea
popf
xor
mov
push
and
stos
out
xor
scas
dec
mov
outs
pop
cmc
imul
push
es
iret
mov
xchg
(bad)
xor
pop
punpcklwd
and
jp
neg
mov
stos
or
xor
dec
ds
cs
iret
pop
not
loope
dec
loopne
stos
sahf
push
adc
pop
pop
or
dec
ret
test
sub
inc
loop
xchg
mov
lds
or
cmc
lods
pop
adc
(bad)
mul
test
(bad)
call
mov
push
out
lods
arpl
or
lds
cmp
aam
mov
in
push
or
xchg
lea
mov
jecxz
dec
cmps
xor
and
(bad)
retf
fs
lods
xchg
add
jns
stc
enter
mov
mov
push
sbb
loopne
int3
dec
sub
call
pop
mov
ins
imul
div
cmp
(bad)
enter
jmp
mov
gs
cmc
(bad)
aad
or
(bad)
mov
bound
push
push
faddp
push
call
movs
bound
aaa
popf
fbstp
lea
sti
loop
out
fwait
jl
push
sbb
shr
sub
ds
jp
push
sub
jo
cmp
adc
cmps
pop
push
cmp
xchg
inc
fisubr
rcr
lea
mov
xor
cmps
inc
lods
jo
gs
and
add
ret
lea
jecxz
pop
and
cdq
in
jl
cmps
cmp
add
popf
mov
inc
ficom
jg
stos
cli
iret
mov
out
push
add
fsubrp
mov
inc
adc
jmp
sti
int3
test
jns
dec
jle
ja
mov
test
and
retf
inc
sub
pop
adc
jmp
dec
pop
shl
stos
mov
ja
retf
(bad)
pop
xor
aam
movs
cld
jle
out
lea
inc
call
mov
ror
(bad)
hlt
jns
xchg
in
push
inc
xchg
ins
cmp
cmc
adc
mov
stc
loope
scas
in
push
inc
aad
test
loope
repz
jle
pop
push
or
cld
add
ins
mov
push
sub
sbb
and
inc
cwde
push
xchg
(bad)
in
add
shl
mov
dec
loop
mov
jbe
popa
mov
ds
repnz
xor
inc
xlat
je
jno
sti
mul
and
sbb
mov
(bad)
jne
inc
test
xchg
jge
jbe
shr
fidivr
rcr
cs
inc
out
cmp
sbb
adc
pop
push
sub
das
mov
jae
xchg
sbb
adc
imul
repz
jmp
das
cmp
scas
pop
lahf
loop
and
ins
mov
sbb
jle
xchg
js
xor
jnp
rcl
retf
pusha
pop
push
cli
daa
div
repnz
out
jae
data16
pop
cmps
dec
cwde
push
sub
mov
or
out
cmp
mov
movs
xor
ror
scas
lods
mov
test
pop
arpl
outs
xor
test
arpl
inc
add
push
retf
cdq
das
dec
jbe
push
shl
pop
pop
ins
and
push
mov
adc
pop
xchg
mov
jle
psrlq
pushf
xchg
inc
push
and
fwait
out
inc
sar
repnz
fsub
xor
das
push
add
aas
adc
je
addr16
into
das
sbb
dec
std
in
daa
std
or
xor
jno
fsubp
push
(bad)
push
dec
mov
fadd
cmp
imul
fld
pusha
xchg
push
add
push
mov
mov
mov
test
and
sbb
lahf
sub
mov
or
mov
std
repz
dec
daa
popa
retf
mov
mov
std
or
dec
cmp
add
inc
or
sbb
loop
sub
mov
lods
and
mov
cmps
inc
inc
lea
scas
jmp
icebp
cmp
daa
pop
lods
stos
jge
fimul
or
inc
or
sbb
in
pop
inc
gs
imul
push
ja
dec
scas
jmp
or
shr
data16
sub
inc
mov
in
fwait
(bad)
sub
aad
repz
mov
loope
cmp
repz
xchg
cld
add
mov
and
loopne
stos
xchg
stc
je
fadd
pop
mov
xor
(bad)
hlt
ds
cmp
or
fcomp
or
cmc
scas
inc
push
pop
shl
pop
add
dec
cmps
lahf
jbe
outs
movs
fst
sbb
rol
scas
jne
push
ficomp
mov
popf
pushf
inc
lahf
icebp
cs
aad
mov
sbb
frstor
in
mov
pop
aad
adc
pop
adc
fistp
and
imul
retf
ret
pop
push
lock
sbb
cmp
pop
add
cwde
mov
addr16
mov
movs
bound
jp
jnp
test
arpl
jp
xchg
enter
dec
shl
mov
rcl
cmp
jp
out
mov
shl
and
lock
and
push
jg
shr
sti
add
(bad)
pop
fmul
xor
fdiv
jb
dec
imul
imul
mov
inc
frstor
adc
pop
sub
ror
mov
lea
sub
cmp
sti
stos
cli
aaa
rcl
inc
ret
sub
ins
xchg
ins
in
je
cmp
xor
std
mov
(bad)
fsubr
cmp
and
sbb
mov
retf
inc
xchg
scas
test
add
repnz
shl
mov
dec
out
xor
and
out
dec
push
inc
cld
dec
mov
inc
pop
scas
inc
pop
cs
jne
sub
sub
jb
mov
push
hlt
pop
(bad)
out
jecxz
jno
lahf
cli
add
outs
call
fisubr
mov
push
xor
pushf
pop
(bad)
adc
cmp
dec
ja
fcom
mov
jmp
int
inc
and
and
mov
bound
call
jae
inc
cmp
mov
push
pop
mov
pop
or
inc
sub
fcom
and
push
mov
not
leave
xor
inc
push
push
push
adc
cdq
jbe
movs
mov
adc
cmps
sbb
mov
xor
fst
mov
mov
jmp
sub
aad
out
rcr
fbld
push
dec
lods
in
inc
ret
pop
dec
pop
gs
sbb
test
fild
cmps
dec
out
into
cs
sbb
push
jmp
inc
mov
ret
mov
or
js
xor
mov
ja
jmp
leave
jp
adc
xor
push
loop
jb
aad
and
or
sbb
push
jmp
imul
jg
jmp
(bad)
sti
cs
and
cmp
sub
xor
ins
push
mov
sbb
jmp
jecxz
stos
add
add
fild
gs
xor
and
push
inc
push
cli
push
rol
or
div
xor
xchg
inc
jmp
les
push
dec
int3
cmp
sub
push
fwait
movs
mov
adc
lea
fwait
and
fcmovb
jno
jl
scas
jo
pop
mov
mov
out
into
out
mov
sti
and
gs
sub
and
mov
push
shr
out
cmc
dec
mov
sti
mov
out
fstp
fadd
loopne
jae
add
ss
loope
fucom
xor
leave
movs
sub
xchg
sbb
mov
and
jmp
sub
gs
stc
retf
clc
fucomp
push
add
add
mov
push
dec
call
stc
movs
ds
call
je
pushf
call
(bad)
mov
push
call
sub
mov
sbb
sub
xchg
sbb
dec
inc
sbb
jmp
pop
daa
dec
mov
fild
clc
popa
mov
lahf
test
repnz
adc
(bad)
test
ins
enter
fwait
repnz
mov
les
push
sar
mov
sub
out
sub
fsub
mov
push
inc
(bad)
sbb
pop
icebp
scas
mov
sar
dec
or
ins
xchg
pop
push
(bad)
mov
mov
fisttp
imul
iret
cmp
in
lea
sbb
mov
fistp
arpl
lods
in
ret
pop
arpl
inc
jnp
xchg
sub
sbb
mov
xchg
mov
dec
out
dec
fsubr
stos
pushf
sub
mov
xchg
cmp
lods
cmps
xor
data16
ins
mov
(bad)
add
scas
pop
xor
mov
(bad)
iret
out
inc
jb
enter
push
les
(bad)
or
int3
or
inc
jbe
lods
sub
xchg
rol
ret
fild
adc
adc
(bad)
cmp
stc
xor
pandn
aaa
popa
cmp
outs
shr
mov
test
scas
mov
leave
fidiv
xor
lods
mov
out
pop
stos
push
fs
xor
push
fmul
push
ins
jns
cwde
sbb
imul
cwde
mov
pop
in
sub
lahf
popa
popa
aam
dec
cmc
dec
retf
fcomp
add
dec
sub
mov
push
sub
loopne
clc
(bad)
sti
mov
dec
add
add
ins
nop
push
stc
dec
xor
ins
jl
xor
xchg
std
(bad)
outs
add
retf
sbb
ror
pop
inc
loope
jl
fdiv
(bad)
stc
mov
mov
add
int
mov
aaa
jmp
sbb
xchg
enter
out
mov
and
clc
movs
test
xchg
push
xor
dec
pop
pop
mov
and
pop
cmp
dec
inc
pop
adc
lea
or
test
xor
rol
mov
and
dec
enter
inc
mov
sub
mov
shl
icebp
shr
hlt
arpl
jns
cwde
lahf
aas
call
inc
jns
repz
mov
mov
push
sbb
imul
call
xor
or
mov
ins
test
mov
movs
sub
mov
rcl
je
ins
ficom
add
stc
push
(bad)
cmp
loope
fdivr
push
mov
pop
jmp
cmp
js
div
add
into
xchg
ficomp
lea
xchg
in
add
es
cmp
add
je
retf
retf
sub
mov
push
mov
jmp
lods
stos
pop
in
cs
(bad)
adc
mov
ins
or
pusha
in
shl
jnp
pop
sbb
mov
push
push
sbb
icebp
(bad)
jno
ror
leave
add
loope
iret
imul
popa
push
push
mov
jne
push
hlt
mul
or
mov
cli
xchg
jne
and
aaa
xor
mov
dec
imul
xchg
js
mov
push
jae
call
cwde
mov
mov
mov
div
into
(bad)
or
lods
and
cmp
mov
pop
mov
mov
sbb
pop
aaa
ins
push
mov
out
xor
mov
push
pop
pop
rcr
std
shr
or
fld
inc
pop
imul
(bad)
iret
mov
mov
or
or
cmp
test
out
jmp
jns
pop
aas
cmp
fbstp
fnstcw
retf
xlat
les
sub
xor
fild
imul
imul
cmc
mov
jnp
or
or
mov
xor
mov
test
adc
(bad)
aaa
mov
xor
rol
aas
(bad)
adc
add
sbb
jle
in
popa
mov
aad
mov
cmp
sbb
pop
adc
cld
or
mov
pop
std
call
fadd
or
(bad)
das
xor
push
test
outs
ss
pop
xchg
mov
push
movs
das
(bad)
scas
xchg
js
aam
int
push
clc
dec
lods
mov
inc
(bad)
out
push
inc
fld
fxch
add
and
push
jmp
jb
xchg
aas
xchg
ss
sub
cld
clc
lea
inc
std
dec
fwait
add
inc
xchg
mov
fistp
cmps
or
mov
fs
push
push
inc
aaa
dec
and
push
aad
and
mov
mov
dec
and
mov
xchg
jae
mov
fisub
pop
inc
into
jmp
scas
xlat
fst
fiadd
adc
hlt
scas
call
cmps
test
cmp
mov
inc
cdq
jns
test
xchg
fbstp
pop
jmp
cld
push
call
jno
push
jns
xchg
fnstsw
clc
cmps
sbb
jne
movs
inc
inc
outs
sbb
jnp
popf
mov
cmp
test
mov
mov
popa
aas
hlt
pop
or
icebp
cmp
push
mov
adc
push
cdq
mov
sub
mov
iret
js
inc
popa
fisub
lods
test
or
ret
jnp
ins
mov
in
push
stc
daa
aaa
(bad)
push
out
xchg
dec
repnz
jb
jb
or
mov
push
sbb
jmp
sub
mov
xchg
or
cmp
out
mul
pusha
hlt
xchg
adc
out
call
inc
fwait
inc
fs
str
add
add
xchg
adc
inc
sbb
and
or
movs
imul
mov
pop
out
mov
leave
jo
and
adc
nop
ds
and
enter
sub
pusha
inc
cmp
mov
sbb
mov
out
xchg
inc
mov
dec
push
stc
lock
pusha
pushf
inc
push
iret
push
outs
dec
pop
movs
mov
or
je
mov
repnz
shl
sbb
shr
in
nop
mov
or
in
xchg
ror
and
addr16
cmp
out
hlt
push
nop
je
in
fs
loope
dec
scas
mov
(bad)
enter
push
push
xchg
jno
ss
push
push
cwde
sub
les
clc
fldcw
pop
shl
inc
mov
out
pop
lea
mov
add
add
cmp
test
xor
sbb
jnp
lods
ret
xor
and
(bad)
or
ror
mov
(bad)
fs
sbb
dec
or
ins
mov
xor
mov
lahf
add
adc
cmps
mov
push
lods
aas
not
or
inc
enter
inc
mov
icebp
pop
cld
cmp
cmp
push
dec
movs
test
xor
xchg
fs
stos
mov
push
bnd
sub
outs
add
push
inc
pusha
mov
lods
loope
mov
push
repnz
test
sbb
mov
dec
or
je
sub
pop
int
lods
xor
inc
shl
ds
shl
mov
mov
jmp
pop
xchg
cmp
mov
push
add
mov
pop
jp
mov
adc
aas
loop
popf
push
xchg
mov
push
dec
jmp
test
add
sar
aaa
cdq
pop
pop
and
cdq
int3
imul
retf
dec
ja
or
cmp
pop
mov
sahf
or
add
div
adc
scas
in
xor
cli
sub
mov
add
mov
icebp
push
fs
cmc
(bad)
movs
mul
fidiv
mov
push
in
dec
fld
je
push
push
inc
jge
cmp
cmc
fsub
or
loop
xchg
jo
and
and
sbb
and
fisttp
iret
push
sub
add
retf
loope
adc
jle
and
jb
lods
movs
pmaxsw
imul
xchg
movs
loop
repnz
mov
mov
(bad)
int3
shl
pop
adc
js
dec
shl
jno
cmc
adc
mov
mov
rcl
push
je
sbb
pushf
sahf
push
push
mov
sbb
add
add
jp
sbb
cmp
enter
dec
icebp
call
sahf
jo
bswap
push
pop
mov
sub
mov
or
std
or
jo
jno
xor
sar
iret
(bad)
(bad)
mov
xor
sti
test
out
dec
and
out
loope
dec
xchg
sahf
adc
adc
and
xchg
inc
pop
(bad)
das
cmc
jle
dec
push
enter
das
and
cmp
imul
inc
mov
ret
loopne
mov
push
pop
lods
xchg
sti
mov
push
ret
xchg
jmp
and
and
dec
pop
mov
cs
mov
fimul
jmp
sub
ss
ins
sub
in
(bad)
sbb
int
xchg
loop
and
inc
aas
ficomp
xchg
mov
push
jecxz
sbb
(bad)
leave
fsubr
inc
imul
lods
mov
adc
(bad)
mov
lods
lock
pop
sub
jg
stos
add
loope
out
add
mov
fdiv
mul
icebp
cmp
movs
jbe
mov
outs
das
jbe
inc
je
loop
popf
ins
(bad)
sub
jmp
ja
out
dec
int3
sub
mov
xchg
inc
xchg
dec
push
hlt
jae
mov
xchg
stc
push
(bad)
push
test
in
loopne
xor
sub
in
movs
fbstp
mov
clc
jmp
pop
mov
cmp
jo
loop
sub
pop
xchg
ret
xchg
push
imul
inc
add
gs
jp
jg
out
fcmovnb
cmp
sub
push
jae
fdivr
in
xchg
pop
(bad)
mov
sub
or
jge
add
pop
xor
and
and
xor
(bad)
mul
in
mov
adc
xchg
loop
dec
fistp
mov
stos
imul
sbb
iret
mov
mov
dec
cli
sti
popf
push
arpl
fwait
mov
loope
dec
jg
lea
int3
loope
pop
outs
cdq
pop
retf
xchg
jbe
push
dec
and
dec
dec
stos
cwde
mov
rcl
xchg
xchg
(bad)
repnz
or
inc
adc
sub
lods
and
sbb
xchg
(bad)
call
popf
cli
jmp
mov
or
lea
add
push
mov
dec
or
jns
adc
fisubr
sub
hlt
xchg
pop
mov
les
add
adc
jne
shl
sbb
push
ja
xchg
loop
test
js
sbb
push
xchg
ds
in
test
(bad)
jp
jae
dec
stos
lea
xor
mov
sbb
mov
cmp
enter
inc
sbb
loope
push
sub
jno
test
fprem1
mov
and
jnp
push
test
add
call
pop
jecxz
arpl
or
pop
and
sub
xchg
rcr
fsub
mov
getsec
dec
sbb
sbb
call
movs
stos
nop
jb
cmp
push
ja
or
ins
cmps
pusha
shl
inc
fldcw
push
sub
cwde
rcr
inc
inc
loopne
mov
cld
xor
cmc
pusha
arpl
push
jl
loopne
shl
les
mov
adc
(bad)
jns
int
in
retf
jo
cmp
cmp
test
sbb
cmp
pop
push
pushf
dec
mov
out
push
adc
ss
ins
lods
adc
test
in
(bad)
sub
mov
and
sub
push
push
call
icebp
mov
enter
sbb
cmp
pop
aas
jmp
mov
inc
push
jne
push
inc
in
sub
mov
arpl
mov
cdq
pop
addr16
inc
test
aas
sbb
mov
xchg
popf
call
sbb
repz
ins
mov
pop
push
mov
out
mov
jl
xor
sbb
test
add
movs
cmp
jge
push
lds
aas
inc
and
lods
mov
pusha
aaa
jo
cs
ss
nop
test
mov
daa
mov
sbb
mov
push
ds
jo
pop
push
in
mov
ss
adc
mov
xor
jbe
lock
cmp
stc
into
enter
rcr
test
pop
aaa
and
sbb
mov
adc
and
retf
add
mov
xor
je
imul
xor
nop
popa
sub
js
adc
jge
imul
ds
mov
(bad)
aam
ret
pop
jg
or
push
fldenv
pop
inc
fcomp
popa
push
push
or
mov
dec
xor
push
sbb
add
mov
mov
xchg
and
sti
out
push
div
pop
(bad)
shr
lds
mov
mov
jo
sbb
jp
pop
lea
shr
dec
pop
sub
push
bound
scas
xor
or
repz
or
push
in
push
ret
mov
dec
(bad)
loopne
xor
adc
rcr
or
push
enter
adc
jmp
inc
add
lahf
fldcw
and
adc
test
push
sbb
dec
sub
rcl
mov
inc
adc
fdiv
rol
lods
sar
scas
outs
pop
inc
daa
pop
jp
retf
sbb
das
mov
out
xchg
das
push
cmp
cmps
pop
in
mov
pop
push
jns
aaa
sbb
cmc
or
sub
inc
fbstp
pusha
cmc
rcl
ret
push
in
aas
and
stos
in
sub
pop
add
xor
in
mov
dec
dec
add
xchg
xchg
mov
retf
mov
(bad)
fs
out
cmc
dec
loope
pop
cwde
loope
fcmovnu
rcr
mov
jnp
xchg
inc
rol
inc
mov
or
ror
mov
cmps
je
call
imul
lock
push
das
push
arpl
js
mov
in
push
mov
cmp
daa
or
cmps
adc
fdiv
mov
std
xchg
push
add
mov
xchg
push
daa
xlat
mov
imul
inc
mov
in
retf
arpl
in
sbb
or
add
adc
jge
nop
imul
adc
rcl
(bad)
dec
adc
mov
push
std
call
jp
cmp
push
(bad)
in
mov
xchg
push
inc
dec
pusha
cmp
mov
push
daa
lea
in
test
adc
dec
sbb
inc
(bad)
mov
add
stos
arpl
push
outs
inc
call
xchg
add
pop
mov
je
cmps
mov
cmp
out
pusha
adc
popa
gs
movs
jmp
popa
push
cli
xchg
pop
aas
inc
inc
add
int3
dec
push
out
rcr
sbb
jg
or
imul
jbe
jl
push
mov
call
rcl
jns
in
dec
pop
out
jb
jnp
mov
jae
xchg
repnz
jne
scas
not
ds
inc
pushf
xor
in
inc
jne
lods
sub
dec
or
int
arpl
mov
movs
imul
ins
dec
mov
push
xor
shr
(bad)
repz
mov
mov
add
aad
icebp
out
test
ror
fnsave
call
fild
iret
enter
mov
imul
movs
add
push
push
sub
(bad)
adc
push
(bad)
in
xor
daa
sti
sbb
retf
cdq
mov
add
pusha
sub
fistp
pushf
cmp
sub
std
fmul
les
mov
fsubr
loop
mov
mov
cmp
pop
int3
jne
mov
push
imul
xor
mov
popf
jno
iret
inc
adc
jmp
xor
and
ss
dec
repz
sub
sti
fimul
jl
mov
mov
sar
or
add
sub
sahf
fild
sub
pop
push
push
inc
xor
push
or
rcl
jmp
sub
add
sbb
arpl
pop
sbb
(bad)
dec
test
adc
sbb
cli
jb
push
bound
movups
push
mov
movs
push
lock
cmp
adc
jb
ss
stc
in
sub
add
test
dec
std
sahf
outs
inc
in
xor
mov
gs
jne
ins
xchg
retf
cld
call
xchg
pop
xchg
push
add
js
and
jbe
lods
lods
mov
and
inc
lea
mov
xchg
dec
imul
dec
dec
adc
add
jl
ret
fst
test
pop
or
cmc
jp
cmp
mov
pop
fdivp
(bad)
aaa
mov
int
xor
or
(bad)
mov
out
xchg
pop
and
arpl
ins
enter
(bad)
push
sub
mov
js
push
or
out
fnstenv
pop
nop
aas
sbb
pop
sti
jle
xchg
xchg
clc
mov
pop
inc
pusha
fs
out
mov
cmp
addr16
jg
or
jb
jns
clc
xchg
(bad)
movs
and
aad
(bad)
push
rcr
pop
mov
inc
in
fld
sbb
into
jl
adc
adc
or
pusha
mov
pop
adc
jns
add
sbb
jmp
and
hlt
icebp
jmp
and
cmps
pop
in
fsubr
xchg
dec
out
je
xor
mov
jmp
cs
fdivr
push
ins
movs
mov
shr
or
jnp
mov
cmp
loope
dec
jne
in
cwde
leave
nop
push
call
pop
loop
push
movs
mov
out
mov
arpl
out
mov
add
je
jb
xor
dec
sub
jp
sub
xchg
leave
dec
pop
cmp
mov
mov
inc
pop
adc
push
inc
fs
fsubr
inc
sbb
jl
test
lahf
clc
cmp
les
xor
jb
cli
add
(bad)
ror
jp
add
nop
xchg
sub
inc
sub
pop
int
aaa
mov
and
fcmovnbe
push
pushf
xchg
push
rol
dec
outs
into
sbb
cwde
and
jp
mov
shr
xchg
xchg
push
inc
in
dec
sbb
dec
out
pop
adc
enter
xchg
jmp
ret
adc
xor
push
addr16
outs
sbb
mov
fisub
ds
imul
in
xor
call
shl
cmc
adc
xlat
and
fstp
inc
xor
pop
xchg
rcr
iret
mov
mov
pop
push
shl
xchg
(bad)
sub
lahf
add
pop
inc
retf
xor
out
pusha
or
xor
std
pop
push
jmp
repz
xchg
adc
mov
cmc
sbb
bound
fst
shr
cmp
(bad)
cmp
mov
xor
add
int3
cmp
dec
xchg
pop
call
mov
test
div
mov
jb
xchg
or
fmul
fwait
jp
fmul
sub
sbb
push
movs
fcomp
popa
ds
xchg
nop
movs
(bad)
stc
xchg
ja
movs
inc
daa
stos
(bad)
ret
mov
jl
aam
out
jp
mov
mov
fwait
arpl
das
test
retf
ins
mov
jg
sub
imul
stos
dec
ret
jge
lock
not
int3
add
xchg
ins
inc
mov
enter
push
mov
int
mov
add
gs
pop
nop
xor
pop
lock
rol
pop
gs
push
fs
xchg
push
imul
out
adc
out
mov
int
adc
ins
ficomp
cs
xchg
sbb
dec
in
push
repz
cdq
cmp
mov
push
sbb
or
fidiv
xor
scas
add
dec
fmulp
sub
mov
mov
les
hlt
inc
cmp
stc
imul
daa
cmc
pop
bound
jl
jnp
or
inc
stc
pop
push
rcr
mov
movs
inc
sub
mov
ins
xchg
(bad)
out
ficom
dec
or
or
imul
push
outs
push
sub
mov
mov
cwde
add
aas
je
enter
out
sub
mov
ret
mov
nop
cmc
sub
cmps
repz
in
xchg
scas
ins
cld
cmp
retf
inc
pop
mov
xchg
adc
imul
push
inc
push
js
dec
xor
push
mov
cmp
lods
jno
fisttp
mov
jae
mov
lods
arpl
or
and
(bad)
fidiv
xchg
in
xor
cwde
pop
dec
rcr
or
add
adc
loope
jno
xchg
sub
ins
mov
push
mov
in
ds
xor
sbb
scas
dec
out
stos
add
pop
push
int3
cmp
iret
push
aaa
push
xor
stc
push
call
xor
aaa
ret
cli
imul
lds
push
xchg
sub
xchg
cdq
loope
and
lods
pop
pop
bound
int3
jg
or
push
cmps
mov
fnsave
jno
aaa
movs
movs
lea
jno
or
adc
pop
jecxz
xor
mov
push
test
push
inc
loope
and
repz
jbe
jge
pop
jge
and
jmp
sub
test
or
dec
add
cmp
push
mov
scas
das
clc
test
stos
xchg
lahf
or
pop
repnz
enter
inc
pop
adc
fst
pop
loope
mov
jno
push
xor
repz
xchg
call
aaa
jno
mov
push
cmp
test
rcl
xchg
inc
sbb
int
jno
mov
xchg
or
pop
push
jb
or
mov
mov
xor
xchg
jb
sub
push
jbe
cdq
mov
sar
mov
scas
popa
and
stc
sbb
jge
lds
movs
push
cmps
outs
xchg
sahf
lahf
pop
pop
pop
xchg
call
dec
ret
pop
fstp
aas
jnp
stc
cmps
dec
push
out
push
xor
call
(bad)
cld
(bad)
fld
test
inc
sub
pop
jbe
sar
xchg
(bad)
(bad)
jmp
xor
pop
dec
cmp
test
(bad)
shr
mov
mov
fwait
inc
call
mov
pop
outs
rcr
and
test
push
stos
xor
pop
(bad)
addr16
shr
sbb
mov
or
pop
mov
adc
sub
cdq
xor
fnstsw
into
ret
hlt
out
jb
jl
adc
(bad)
push
pop
xor
test
loope
add
pop
sahf
or
(bad)
(bad)
pop
scas
(bad)
cmp
fisubr
cmp
or
mov
push
push
jns
or
mov
push
push
xor
fidivr
test
sbb
dec
mov
or
div
jns
scas
and
fcmovbe
stos
mov
adc
sti
adc
cwde
jno
sbb
adc
div
cmp
cmp
popf
ja
inc
xor
adc
cmc
sbb
and
jb
div
cmp
mov
cmp
inc
push
bound
mov
stos
ins
je
dec
inc
sbb
xor
stos
add
jae
ret
and
mov
push
xchg
in
(bad)
out
fucomi
adc
mov
sbb
mov
push
cwde
add
imul
bound
sub
xchg
jg
popf
cmovge
(bad)
mov
(bad)
mov
in
fdivr
add
out
arpl
(bad)
add
aad
pushf
jno
pusha
mov
mov
in
in
shr
lock
fbstp
retf
shr
push
mov
dec
data16
mov
icebp
adc
or
push
in
pushf
inc
jbe
aad
pop
xor
pop
xchg
pop
(bad)
jp
sub
fsubr
inc
leave
adc
jmp
xor
xchg
test
push
cmc
pop
jg
retf
adc
loop
dec
scas
in
in
ds
adc
adc
test
add
or
cmps
mov
inc
jb
ret
adc
rcr
iret
mov
pop
addr16
adc
mov
out
cmp
mov
ja
sbb
into
dec
sbb
mov
push
add
mov
inc
jbe
or
arpl
jmp
movs
and
aas
mov
lds
mov
std
push
stc
test
jno
add
test
aas
scas
push
stos
jbe
sub
loope
cmp
mov
(bad)
(bad)
lahf
sbb
outs
cmp
addr16
imul
popa
dec
push
jb
repnz
ret
sbb
push
sti
ins
fdivr
gs
fnsave
jle
dec
add
sub
fbstp
sub
cmp
cmp
fprem1
mov
push
cli
out
(bad)
jg
js
ss
(bad)
in
stos
xor
stos
xchg
clc
fsubr
addr16
mov
imul
call
dec
arpl
mov
sbb
cli
and
and
and
mov
xor
(bad)
mov
mov
dec
movs
inc
and
jmp
inc
xchg
call
jbe
fucomi
fsub
mov
dec
dec
ins
xor
push
sbb
iret
add
pop
loope
iret
sub
cld
jmp
sub
arpl
aaa
(bad)
push
in
test
sub
jp
and
mov
ror
ret
push
pop
out
(bad)
(bad)
aaa
retf
mov
push
repz
into
scas
or
aad
xchg
in
mov
push
in
aam
fcom
stos
mov
sbb
xchg
loopne
ficomp
outs
les
mov
dec
jbe
cdq
sub
ja
mov
xchg
gs
xor
mov
and
xor
xchg
bound
sbb
nop
es
rol
lds
das
in
jns
xchg
pop
pop
pop
xor
jmp
repz
cmp
loopne
xor
aas
outs
jle
push
std
mov
push
or
xchg
or
loop
push
fidivr
mov
mov
clc
inc
jns
inc
and
in
mov
loope
stos
cmp
dec
inc
jmp
jecxz
mov
sub
jo
scas
sbb
cmps
sbb
stos
loope
out
sub
popf
push
shl
cmp
sbb
aad
mov
add
and
fisubr
fimul
ins
mov
iret
push
lea
mov
adc
sbb
divps
and
or
ret
sar
mov
jae
ja
jmp
mov
adc
mov
mov
add
push
stc
scas
xchg
aaa
mov
and
dec
ja
in
mov
outs
into
sbb
test
dec
lea
sub
cmc
mov
push
mov
push
jb
xor
mov
or
outs
es
and
sbb
iret
and
int3
add
sbb
pop
cmp
call
push
dec
and
pop
adc
repnz
jno
in
movs
sbb
mov
or
cli
aaa
ins
mov
sbb
pcmpgtw
rol
mov
fwait
int
jnp
dec
mov
js
or
jl
mov
stos
imul
rol
cmc
fist
fmulp
test
adc
mov
inc
sar
addr16
ss
mov
jbe
ficom
sbb
xor
mov
pop
or
or
sub
mov
invd
sti
iret
popa
or
js
clc
out
adc
dec
or
cmps
scas
ss
in
mov
xchg
test
jne
sub
ins
sbb
ss
dec
sti
add
out
dec
xor
js
ds
and
cmps
inc
pop
(bad)
mov
pop
in
push
jo
sbb
test
not
js
mov
jno
bound
push
mov
sar
sub
iret
mov
mov
push
fstp
int3
dec
ficom
jns
out
inc
pop
imul
pop
inc
push
xchg
cli
cmp
cld
jns
mov
xchg
pop
jb
or
call
inc
jmp
dec
xor
(bad)
(bad)
push
cmps
sub
ret
mov
inc
xchg
test
ja
lahf
xchg
xchg
lahf
xchg
and
push
inc
cmp
mov
loop
push
fild
shl
lahf
pop
retf
dec
and
dec
inc
jle
xchg
xchg
inc
sti
adc
std
dec
pop
pop
(bad)
and
sub
aam
mov
scas
xchg
dec
xchg
fsub
mov
fmul
repz
add
mov
scas
ss
pushf
or
call
push
push
pop
retf
jne
xor
push
jg
dec
popf
dec
sub
xor
xor
xchg
inc
lock
mov
daa
jb
pop
scas
mov
jbe
(bad)
cmp
sahf
jle
rcl
outs
inc
cmp
cmps
inc
mov
stos
int
stos
(bad)
pop
add
jmp
add
add
inc
sti
sub
stc
sbb
mov
stos
pop
hlt
out
retf
addr16
test
rcr
pusha
movs
xor
jmp
pop
lea
std
mov
movs
add
repz
lock
mov
xchg
sbb
lahf
xchg
outs
ins
fild
ror
mov
cwde
adc
add
daa
lds
fild
js
ins
mov
cmp
sbb
sar
ret
and
mov
adc
jno
mov
pop
push
and
and
arpl
mov
cmp
out
inc
fprem
cld
or
mov
test
jmp
nop
inc
rcr
xor
mov
or
lods
mov
mov
inc
jae
nop
js
push
mov
xchg
(bad)
icebp
mov
pop
stos
xchg
jle
jb
pop
push
xor
mov
and
xor
xchg
leave
scas
cdq
mov
sbb
test
xor
test
(bad)
jmp
sbb
xor
fadd
adc
mov
test
inc
and
inc
(bad)
push
xor
addr16
ror
outs
mov
inc
fisttp
cmp
push
stos
sub
mov
push
stos
dec
cmp
mov
out
mov
shl
adc
test
stos
add
(bad)
cmp
xor
arpl
data16
repnz
mov
add
pusha
mov
push
sbb
xchg
and
movs
jg
ss
mov
std
jg
in
scas
xchg
xlat
push
mov
lods
sbb
and
(bad)
mov
mov
lock
std
mul
loop
inc
jo
dec
mov
inc
je
jg
ret
pop
arpl
push
jmp
daa
ja
xor
inc
add
mov
cwde
add
dec
push
pop
xor
adc
mov
push
lods
mov
push
add
cmp
inc
fisttp
mov
push
pop
lods
xchg
icebp
imul
jbe
test
xor
sahf
movs
dec
push
stos
sahf
push
xchg
sbb
adc
repnz
adc
sbb
mov
sub
adc
jo
ret
cwde
gs
pop
xchg
movs
inc
fxch
and
enter
adc
jp
fbstp
push
mov
lods
(bad)
add
sub
jne
in
lahf
dec
or
xor
icebp
cdq
sbb
mov
pop
cmp
popa
pushf
inc
push
loopne
lahf
mul
ret
icebp
adc
sahf
lds
sbb
add
adc
add
(bad)
adc
mov
jbe
lds
neg
and
imul
rcl
jo
leave
outs
cmp
cmc
dec
aad
test
xchg
push
stos
addr16
inc
xor
mov
scas
and
cmps
jge
or
je
pushf
iret
or
mov
scas
pushf
adc
mov
in
ins
stos
dec
fwait
pcmpeqb
push
jmp
bound
jno
fistp
in
leave
shl
lea
mov
test
inc
and
mov
sbb
jmp
js
popa
pop
(bad)
out
inc
or
repnz
popa
sbb
push
push
jg
xor
xor
int3
(bad)
jmp
lea
call
mov
cmp
out
(bad)
or
out
shr
dec
rcr
sbb
pop
mov
out
xor
sar
nop
push
loopne
mov
dec
push
rcl
repnz
movs
push
jbe
hlt
js
mov
pmaxsw
ret
rcr
(bad)
es
or
dec
jecxz
pop
popa
sbb
inc
es
dec
mov
aas
jmp
mov
push
out
cmp
es
jae
add
dec
push
jo
dec
cld
cmp
and
mov
add
sbb
pop
pop
push
cmp
jbe
cmp
iret
mov
lods
pushf
loop
aad
inc
imul
enter
add
pop
xor
pop
mov
push
cmps
add
stos
(bad)
stos
int3
pop
and
or
stos
(bad)
pop
fisttp
pop
cmp
retf
fidivr
idiv
cwde
mov
loop
mov
xchg
fistp
loop
push
mov
sbb
mov
mov
inc
and
mov
adc
pop
dec
sub
pop
mov
jbe
call
push
and
nop
push
clc
xchg
add
pop
hlt
mov
pop
(bad)
imul
js
sbb
mov
mov
push
ja
sbb
sbb
or
test
lea
dec
sub
fmul
jmp
dec
or
push
lods
loope
jne
ja
pop
ja
xlat
clc
cmp
sti
out
iret
ret
mov
or
or
test
mov
xchg
data16
dec
inc
out
sbb
and
mul
in
pop
sbb
ss
scas
push
int3
cmp
mov
push
sahf
cdq
adc
jg
pop
jg
jmp
xchg
mov
mov
fcmovne
adc
adc
ins
fistp
pop
push
cmp
mov
(bad)
rcl
int
icebp
jmp
daa
movs
jmp
mov
xchg
adc
(bad)
icebp
push
jmp
cmp
pop
(bad)
mov
sbb
(bad)
test
or
cmp
pop
outs
push
add
aam
or
sahf
sub
enter
hlt
imul
sahf
aam
mov
jl
scas
addr16
repz
add
out
arpl
dec
add
adc
inc
dec
mov
sub
jp
int3
mov
jp
outs
mov
dec
lods
fidivr
dec
inc
(bad)
dec
loop
jne
jge
retf
cmc
and
retf
imul
in
aaa
cmp
fild
xchg
cli
adc
es
addr16
fstp
in
sbb
mov
arpl
sar
lods
hlt
cmp
fwait
add
stos
jmp
mov
xchg
cmp
or
push
retf
cld
adc
out
xor
or
ret
inc
ss
xchg
jl
jmp
jb
sbb
sub
add
cmps
push
xchg
jp
push
shr
stos
cli
add
mov
icebp
cmp
jno
jae
jbe
mov
mov
push
or
out
pop
mov
jnp
pop
add
cmps
sbb
dec
sahf
mov
mov
lods
movs
fimul
and
xchg
mov
(bad)
push
push
and
push
loop
fnstenv
movs
(bad)
std
cld
pop
repz
inc
aas
sbb
lock
pop
mov
inc
sbb
sbb
mov
mov
aam
jmp
jns
lods
adc
shl
jle
movs
ins
das
les
test
sbb
xor
test
mov
jmp
and
fsubr
xor
sbb
sub
dec
sahf
pop
mov
dec
ret
gs
scas
jns
bound
int3
(bad)
adc
jb
xchg
sub
dec
inc
push
push
jo
mov
ficom
test
mov
js
stos
imul
mov
data16
xor
xchg
xor
fdiv
mov
out
outs
or
test
iret
jl
xor
cmc
rcl
std
inc
mov
push
pop
push
fidivr
sbb
xchg
test
and
(bad)
movs
sub
jecxz
jnp
call
inc
test
retf
iret
jb
int
imul
jge
lds
popf
or
mov
adc
ror
push
mov
in
ins
xchg
jg
mov
dec
sub
pop
(bad)
mov
mov
mov
fild
movs
fnstcw
mov
fld
fs
or
or
mov
shl
mov
in
jns
inc
(bad)
push
ins
gs
or
jp
ins
mov
inc
lods
adc
xchg
dec
ja
mov
inc
push
mov
shr
sbb
or
mov
sub
int
dec
inc
das
lahf
scas
imul
imul
lods
pop
inc
jle
pushf
dec
daa
xchg
fidiv
test
shr
dec
inc
jb
cld
push
or
push
fidiv
sti
shl
xchg
inc
pop
inc
xor
fcmovnbe
mov
inc
mov
arpl
push
mov
gs
and
and
xchg
add
scas
cmps
repnz
in
loope
pop
inc
lds
jne
adc
push
inc
mov
dec
adc
mov
adc
rcr
inc
mov
add
pop
in
push
pop
fmul
mov
(bad)
adc
cli
push
call
enter
sub
pop
(bad)
fldenv
add
lds
jnp
xchg
mov
leave
das
mov
push
mov
sub
ins
fadd
jnp
push
push
dec
leave
pop
pop
lods
jp
ins
out
movs
hlt
push
mov
add
test
sahf
sbb
pusha
les
test
inc
scas
xor
icebp
popf
xchg
pop
scas
mov
test
fwait
retf
inc
xor
jg
and
sbb
mov
sub
xchg
xchg
push
cmp
mov
out
push
test
shr
leave
push
xchg
aam
ss
cmp
xor
pop
loope
mov
arpl
cld
stos
cmp
movs
add
or
iret
pop
fadd
in
mov
test
in
jae
mov
add
rol
jmp
fdiv
mov
mov
mov
(bad)
dec
jg
xor
inc
movs
sbb
jb
inc
das
mov
pop
jns
icebp
ret
cmc
rol
inc
sub
in
mov
xchg
and
stos
xor
inc
int3
pop
int
cld
and
sbb
xor
or
push
pop
out
fmul
nop
mov
popf
enter
fs
mov
push
push
stos
cmc
lea
ins
stos
call
xor
aam
jbe
xor
and
push
(bad)
jae
push
sub
fst
pusha
sbb
xor
ss
je
sub
push
outs
cmps
scas
int3
pop
mov
in
sbb
movs
addr16
add
pop
xor
das
inc
cwde
jo
adc
push
test
movs
(bad)
jmp
mov
sub
lock
mov
sti
mov
mov
cmp
jp
inc
mov
mov
push
sbb
scas
and
fisttp
mov
cs
push
xchg
retf
scas
or
in
mov
cwde
adc
mov
retf
adc
fdiv
bound
loope
and
int
cmp
(bad)
mov
shr
pop
adc
daa
leave
dec
cmp
jecxz
in
jp
add
es
rcr
scas
mov
and
rcl
mov
jmp
cmp
std
jo
adc
cs
test
mov
xchg
xchg
sbb
nop
out
test
jmp
out
test
pop
pop
add
mov
sub
sbb
xchg
sub
aam
adc
jmp
jbe
fnstcw
test
sbb
jo
inc
mov
sbb
xor
aas
cmps
sub
sar
pop
(bad)
sahf
jmp
cmp
adc
into
lock
cld
add
pop
sahf
cmc
xchg
pusha
adc
xor
jbe
fist
in
call
ror
stc
or
cwde
dec
test
cmc
cmc
pop
sbb
push
xchg
xor
aaa
aas
xor
mov
test
mov
outs
gs
and
add
adc
adc
popf
call
sub
xor
loopne
mov
cmp
test
mov
mov
mov
adc
cwde
xlat
lods
gs
lods
int
adc
arpl
shr
dec
adc
stc
mov
push
mov
mov
pop
pop
add
mov
fnstcw
dec
(bad)
daa
inc
outs
sbb
les
test
ss
mov
cmp
hlt
outs
pop
mov
mov
fstp
cmps
dec
add
shr
jno
push
mov
call
dec
scas
mov
mov
mov
mov
int3
lock
sbb
mov
push
clc
ja
xlat
xchg
sbb
sbb
movs
out
jle
push
gs
sbb
shl
aaa
clc
jge
mov
scas
scas
icebp
jg
push
xchg
movs
adc
cmp
sti
jl
push
pop
push
mov
call
inc
hlt
and
push
jne
inc
xchg
ins
movs
or
mov
test
lds
lahf
mov
movs
mov
ror
popf
sbb
pop
xchg
jg
nop
mov
rol
popa
cs
es
or
or
and
fs
lods
arpl
into
xlat
cmp
(bad)
fmul
adc
js
and
inc
cmp
in
push
sbb
xor
pop
cmp
outs
cmp
das
jae
(bad)
addr16
push
push
addr16
sbb
and
adc
push
xor
mov
or
movs
loope
cmps
add
jmp
dec
and
pause
adc
(bad)
call
(bad)
pop
enter
fistp
test
add
fld
jmp
outs
je
cmp
gs
and
ffreep
mov
scas
fwait
xchg
ret
adc
test
xor
and
xchg
xchg
icebp
sub
push
and
mov
cmp
jmp
cwde
sahf
in
rcr
aaa
rcr
sahf
outs
mov
or
stos
push
adc
jnp
loopne
jne
pop
inc
dec
fsubp
test
jg
or
and
cmp
pop
aas
jbe
ds
xchg
add
inc
mov
js
(bad)
xchg
xor
es
and
or
test
in
retf
jno
lods
jo
jmp
scas
fs
(bad)
shr
sar
cmp
shr
mov
in
mov
and
fisub
xlat
outs
mov
sbb
ret
lds
cmc
mov
mov
mov
mov
adc
xchg
or
mov
out
cmp
shl
or
dec
icebp
into
movs
dec
(bad)
in
iret
lods
adc
sar
sti
std
test
jnp
add
or
mov
(bad)
mov
or
or
mov
xchg
jae
imul
xchg
pop
(bad)
mov
mov
xchg
out
push
mov
aas
sbb
mov
jmp
adc
adc
nop
sbb
sub
or
mov
iret
test
mov
int3
in
pushf
push
popf
pop
dec
mov
lock
movs
sar
xor
inc
repz
pop
aam
xor
loope
cli
in
mov
lahf
fistp
mov
xchg
addr16
mov
sti
out
push
das
pop
outs
in
and
add
adc
cdq
cwde
jo
push
and
aas
rcl
push
test
ret
or
or
adc
mov
das
jmp
icebp
sbb
aad
and
pop
mov
imul
add
xor
mov
arpl
adc
pop
inc
pop
mov
xchg
popa
stos
xchg
cld
nop
imul
aaa
fdiv
and
mov
call
inc
mov
push
inc
xchg
inc
sbb
pop
sub
sbb
popa
xchg
ins
or
test
push
test
retf
mov
and
enter
cmovno
push
mov
test
cmp
add
xchg
arpl
ror
mov
jns
ja
fs
mov
rcr
push
imul
out
sbb
pop
mov
mov
xchg
aad
cmp
enter
sahf
js
jg
and
icebp
out
cmc
sbb
addr16
dec
or
inc
sub
in
xor
out
out
inc
pop
bound
cmp
pop
fild
clc
pop
push
cdq
mov
int
adc
repnz
das
cld
dec
pop
outs
or
xor
and
fs
xor
loopne
mov
mov
cmp
xlat
mov
sbb
adc
loop
fwait
aam
dec
or
or
aas
sub
jne
mov
jae
pop
ins
ja
cld
xchg
std
inc
(bad)
or
repz
mov
xor
xor
dec
pop
dec
scas
aad
outs
daa
add
dec
fldenv
(bad)
out
inc
jmp
sbb
xacquire
loope
ds
cmp
stos
push
cdq
push
cmc
sbb
aad
or
popf
push
rol
mov
and
inc
mov
push
and
fs
sub
stos
sti
xchg
nop
es
ins
mov
add
cwde
cmp
xchg
dec
xchg
mov
or
jae
add
mov
fstp
lds
sbb
add
and
xchg
cmps
ret
es
sar
cli
jge
test
lods
mov
mov
cmp
cs
shr
pop
dec
sbb
jg
mov
and
rcl
in
add
sbb
mov
mov
stc
(bad)
dec
pop
mov
xchg
test
ja
pushf
mov
ins
sbb
arpl
inc
mov
sbb
das
push
jnp
outs
mov
dec
mov
mov
repnz
sbb
out
lods
jmp
neg
xchg
pushf
inc
or
mov
mov
xchg
pop
imul
xchg
leave
fsubr
sti
mov
loope
jbe
inc
pop
sbb
or
mov
sub
adc
das
lods
sbb
test
sub
inc
push
scas
sahf
pop
mov
xchg
outs
xchg
ret
jmp
sub
pop
xor
cli
fidiv
aas
xor
xchg
arpl
or
std
pop
mov
jns
cmp
push
in
cld
sbb
inc
sub
stos
scas
test
daa
xchg
sbb
ds
iret
fwait
or
fdivr
loope
(bad)
cmps
loop
fwait
push
fsub
cmc
xor
dec
add
je
mov
cmps
mov
jmp
pop
ret
mov
xchg
sub
icebp
jle
les
dec
xor
cmps
jle
ret
fisubr
ret
cmp
and
and
pop
imul
mov
or
xchg
xchg
dec
mov
cmp
push
lea
xchg
pop
pop
push
dec
inc
lahf
and
test
rol
sbb
xor
xor
jno
adc
js
mov
push
pop
fdivr
(bad)
pushf
xchg
adc
idiv
mov
inc
inc
mov
(bad)
push
out
and
call
aad
std
mov
nop
mov
fcmovnu
sbb
scas
inc
cs
xor
jle
bswap
mov
adc
sub
movs
lahf
int3
fidiv
add
push
int3
js
cmp
test
pop
cmps
push
pop
xchg
shl
or
push
arpl
imul
inc
call
ret
dec
mov
jae
xor
call
adc
and
test
aas
jno
(bad)
int3
sub
dec
push
mov
scas
dec
shl
add
(bad)
fwait
mov
int
mov
fcomip
movs
fidiv
fistp
cmp
mov
pop
xor
pop
pusha
in
pusha
xor
mov
adc
retf
adc
push
mov
xchg
fild
in
retf
push
jge
or
pop
popa
mov
xlat
xchg
or
cmp
xchg
pop
mov
(bad)
cmps
inc
out
ins
sub
xchg
push
fild
jb
jp
ins
hlt
rcl
cmps
test
jne
imul
movs
jbe
dec
sahf
pop
inc
xor
adc
inc
push
js
stc
pop
es
jl
dec
daa
and
xor
aas
add
sbb
mov
dec
sub
mov
jae
push
dec
xlat
dec
aad
fnsave
or
stos
out
(bad)
mov
dec
push
jg
and
xor
or
out
dec
ror
sub
int3
icebp
jp
or
(bad)
adc
push
in
clc
je
sar
push
nop
cmp
(bad)
pop
xor
cld
sahf
lds
rcr
adc
in
mov
sbb
clc
push
outs
pop
mov
mov
lds
or
loopne
add
adc
push
aas
lahf
push
cli
out
jge
(bad)
loopne
stos
(bad)
aad
pop
stos
cmp
jg
mov
int3
aaa
das
(bad)
fdivp
push
inc
in
(bad)
out
mov
xor
clc
or
sub
sub
cmp
jle
in
fcom
dec
add
hlt
outs
scas
and
pop
cmp
(bad)
fist
xchg
dec
movs
loopne
cmp
push
pop
sub
mov
jae
mov
mov
mov
add
clc
(bad)
jecxz
push
xchg
mov
dec
test
dec
adc
sbb
(bad)
mov
dec
push
jecxz
ins
or
into
inc
scas
outs
pop
jecxz
inc
push
or
sti
pop
call
fimul
pop
imul
inc
fdivr
or
mov
add
je
cmp
cli
loop
repnz
jb
mov
sub
int
fld
fisttp
pop
test
push
dec
enter
inc
hlt
(bad)
cld
call
push
mov
pop
xchg
and
sub
daa
enter
mov
cmp
fdivr
sti
add
mov
add
aad
clc
lods
shr
out
int
pop
lods
xchg
mov
mov
mov
mov
std
scas
push
adc
xor
(bad)
fstp
data16
cdq
inc
je
mov
int
daa
aaa
xlat
jae
jb
ss
ds
jge
inc
movs
xor
mov
push
loopne
add
das
cmps
push
mov
iret
fwait
dec
out
or
sti
sbb
popa
jbe
jo
(bad)
or
lahf
retf
es
mov
xchg
cmp
test
jle
inc
or
sahf
sub
das
mov
fdivr
dec
pop
in
push
mov
mov
outs
sub
retf
inc
push
cmps
in
mov
cmp
pop
add
imul
cld
push
mov
gs
cld
add
loopne
ins
test
fldcw
popa
outs
cwde
rcr
cdq
retf
test
scas
mov
mov
imul
out
rcr
and
enter
aam
outs
test
sahf
daa
xor
mov
lds
or
push
dec
js
stos
ret
sbb
sbb
cmc
adc
stos
xchg
fdivr
outs
mov
int
jo
inc
stos
aad
or
or
pop
mov
mov
sub
nop
int
mov
xor
dec
mov
xor
stc
xrelease
xchg
jmp
std
push
inc
dec
es
inc
iret
and
add
xor
in
retf
sti
jmp
scas
mov
cmp
loop
pop
icebp
and
stc
inc
retf
jbe
mov
scas
push
fsub
(bad)
(bad)
in
fcmovne
pop
mov
mov
push
fdivrp
pop
sbb
mov
push
push
mov
sahf
push
and
adc
add
nop
rol
xchg
push
and
jbe
sahf
cmp
mov
mov
mov
dec
sub
nop
pop
mov
test
push
lods
sbb
mov
jmp
(bad)
das
cmp
xchg
leave
push
lds
popf
pop
or
jecxz
jno
push
outs
loope
and
rol
xlat
cmp
mov
adc
dec
cwde
cli
jbe
push
mov
xchg
cld
fadd
add
cmps
pusha
call
and
ins
jnp
fnstenv
dec
xchg
or
sub
push
sti
or
push
mov
es
mov
inc
test
test
punpckhdq
imul
retf
jnp
pop
in
pop
push
hlt
mov
out
jae
xchg
mov
push
(bad)
cmps
mov
mov
shl
js
sbb
xor
nop
push
pop
dec
mov
and
fldenv
push
mov
pop
mov
lahf
mov
and
pop
sub
pop
add
jae
scas
add
mov
dec
mov
push
sahf
arpl
cmp
retf
jmp
xor
push
imul
pop
int
push
push
xchg
jnp
lahf
mov
jg
jne
fcmovbe
sti
ins
push
jb
test
int3
sbb
xor
cld
shr
mov
cmp
sbb
jno
cs
inc
push
out
or
nop
mov
jmp
cmp
inc
stc
sub
daa
aaa
mov
xchg
retf
mov
mov
leave
push
fwait
or
retf
pop
ja
stos
sbb
add
icebp
adc
push
xchg
xor
mov
sti
pushf
aas
dec
in
mov
data16
or
mov
aam
mov
rol
xchg
mov
xchg
cmp
(bad)
push
adc
inc
add
xchg
rol
sbb
sub
xor
pushf
inc
jae
mov
sbb
test
aas
lods
inc
repz
gs
mov
ficom
scas
aas
mov
cmp
pop
cmp
(bad)
xor
test
inc
sar
mov
or
test
movs
bound
cmc
(bad)
inc
fcom
je
mov
push
jecxz
sub
lods
pusha
pop
inc
lods
sti
popf
cmp
scas
test
cmps
pop
xor
movs
adc
dec
in
sub
hlt
push
fidiv
dec
call
sti
in
jb
jp
jmp
sbb
(bad)
pop
mov
mov
sti
mov
in
enter
retf
or
ror
xchg
pop
xor
rcl
movs
xchg
addr16
jo
inc
jl
in
popa
pop
retf
mov
xor
cs
add
sbb
stos
bound
sbb
xchg
push
adc
push
shr
xor
int
sub
jg
xchg
test
scas
test
xor
inc
pop
inc
jo
push
das
dec
cld
pusha
jo
pusha
loop
push
mov
retf
nop
sbb
sahf
xchg
mov
xor
in
hlt
inc
jo
mov
add
aam
dec
aam
jae
movs
stc
das
mov
xor
add
cmp
lods
jle
movs
cmc
add
jg
xchg
adc
cmp
mov
cmps
popa
xchg
shr
rcl
mul
push
(bad)
dec
sub
call
mov
not
or
test
pop
pop
jb
leave
and
(bad)
stc
retf
add
and
retf
push
add
or
adc
sub
push
xlat
push
mov
cdq
std
mov
out
mov
inc
cli
in
lea
dec
sbb
stos
sub
inc
mov
push
out
sbb
jecxz
jne
xchg
fidiv
inc
ins
cdq
cld
pop
jo
aaa
jno
adc
popf
inc
imul
jmp
jae
into
or
xor
lahf
jmp
jge
ins
cli
cmp
dec
jne
icebp
xchg
int3
sti
into
xor
(bad)
xchg
popf
ja
dec
pusha
je
xchg
test
xor
or
inc
dec
pop
mov
dec
or
ins
sbb
inc
xor
std
cmp
fld
push
xor
xchg
scas
inc
cmps
inc
inc
cs
adc
mov
retf
pusha
push
dec
mov
cwde
xchg
sub
mov
test
sbb
mov
dec
int
ficom
loop
das
adc
sub
xchg
push
mov
inc
int3
fisttp
movs
sbb
rcr
mov
stc
and
ret
jmp
push
and
or
add
pop
sbb
sub
push
loopne
mov
push
leave
inc
push
mov
stc
not
sahf
sub
loopne
hlt
mov
or
jbe
adc
mov
push
pop
inc
and
sti
push
xor
aaa
pop
daa
cdq
test
xor
add
pop
mov
inc
inc
or
sub
mov
pop
imul
push
inc
test
xor
ret
sbb
mov
(bad)
cmps
int3
jns
add
mov
mov
push
pop
fstp
icebp
jl
mov
aaa
popf
mov
jbe
and
cmp
mov
scas
iret
sahf
dec
scas
push
daa
sahf
mov
aam
pop
dec
dec
movs
xchg
(bad)
into
and
(bad)
pop
scas
sub
adc
push
mov
aad
dec
xchg
aad
sbb
or
mov
push
xchg
ds
(bad)
mov
scas
stc
or
shr
stos
xchg
mov
sbb
hlt
inc
sahf
movs
imul
mov
xchg
repnz
les
pop
adc
fdivr
loop
nop
enter
mov
lods
sbb
jb
popf
fcomp
jle
arpl
(bad)
jl
arpl
cmp
mov
mov
jle
mov
je
(bad)
and
adc
aam
dec
sar
jo
xchg
cmp
call
pusha
fst
and
and
lods
lea
cmp
dec
rcr
ret
lock
xchg
aad
nop
mov
jno
fidivr
mov
dec
cmp
shl
sbb
xchg
xchg
ins
ins
add
in
xor
jge
cwde
sbb
add
rep
pop
and
sbb
adc
nop
xor
outs
push
sub
retf
push
enter
dec
(bad)
adc
mov
jecxz
(bad)
sbb
pushf
pushf
out
rcr
fisubr
and
adc
mov
pop
daa
cs
xchg
add
pop
movs
sbb
aaa
dec
push
xor
outs
fmul
mov
push
cmp
shr
pop
push
xchg
or
jmp
adc
mov
sti
shr
and
icebp
sub
(bad)
imul
xor
scas
std
cmps
aam
cmc
pop
mov
jns
lods
dec
(bad)
mov
push
dec
outs
loope
xchg
or
jle
mov
inc
aaa
mov
mov
push
(bad)
call
sbb
ret
cmp
push
xor
icebp
idiv
mov
pop
pop
push
icebp
add
inc
pop
js
ins
cmps
clc
je
imul
dec
push
adc
add
mov
jecxz
les
mov
cmp
mov
in
pushf
fist
add
push
(bad)
data16
jmp
push
jge
mov
jg
mov
in
pop
xchg
cmp
and
imul
leave
jmp
ds
fistp
adc
cmp
mov
inc
std
push
xor
movs
inc
pop
test
cmp
and
into
sbb
inc
movs
mov
test
lods
dec
sbb
popf
fistp
jo
xchg
ret
push
jae
or
ret
push
jge
fild
mov
xor
nop
(bad)
jno
mov
mov
repnz
es
loop
call
movs
movs
and
inc
mov
retf
mov
push
jnp
inc
jno
jae
or
pusha
mov
dec
cmp
sub
add
out
rcl
stos
sar
and
popf
mov
adc
cmp
mov
mov
cmp
add
mov
mov
pop
call
call
adc
int
sbb
inc
dec
xor
aad
(bad)
mov
jns
or
mov
stc
je
add
sub
(bad)
arpl
dec
adc
cs
mov
jmp
cmps
fistp
or
shr
cmp
fstp
std
jmp
inc
loope
lock
xchg
ja
sub
mov
retf
cmc
xor
adc
retf
pop
inc
add
mov
mov
fnstenv
jne
sub
fld
and
in
fsub
jnp
adc
push
dec
es
sub
add
push
push
jmp
out
ja
sub
sbb
dec
xchg
adc
sbb
adc
ins
shr
in
popa
jbe
pop
call
loop
iret
push
mov
dec
cmps
or
add
sti
adc
pop
out
fld
clc
cmc
pop
pop
test
add
loope
out
rol
scas
dec
sahf
test
cmp
imul
jge
(bad)
lock
mov
shl
jp
pop
sub
in
das
scas
mov
shl
pushf
mov
popa
mov
and
xlat
inc
cwde
mov
mov
push
lds
push
call
adc
sub
addr16
movs
cmp
lock
cmp
inc
jb
cmp
or
sub
jne
sbb
pusha
xor
neg
pop
sbb
cmps
xchg
test
lods
xchg
daa
adc
cmp
aaa
push
sbb
lods
inc
mov
(bad)
mov
daa
js
cs
xchg
push
dec
(bad)
pop
loop
(bad)
in
sbb
mov
dec
add
jmp
sub
call
push
mov
dec
dec
pop
mov
ret
lods
not
mov
jecxz
ja
test
cdq
sub
loop
out
enter
in
or
arpl
dec
inc
iret
std
fld
addr16
inc
in
xchg
fidiv
adc
outs
loope
mov
adc
push
shl
test
sub
bound
test
mov
jp
xchg
xor
pop
sbb
mov
mov
or
push
mov
sub
loope
wbinvd
sub
jne
push
addr16
xchg
sbb
pop
js
mov
mov
ins
add
xor
mov
xlat
or
call
ja
int3
inc
xor
sbb
cli
jmp
cmps
push
arpl
test
mov
cmps
jno
sbb
(bad)
pusha
movs
and
mov
xlat
not
into
sbb
xor
add
enter
sbb
mov
test
ror
pop
sub
das
and
xor
jne
xchg
mov
in
in
retf
and
(bad)
fbstp
ds
fistp
push
(bad)
cmp
mov
xor
mov
adc
push
and
cmp
mov
aam
push
jmp
div
mov
cwde
mov
adc
cwde
pop
add
cmp
dec
icebp
aaa
ins
fsubr
imul
sub
push
jl
mov
arpl
dec
sbb
push
mov
hlt
cmp
push
inc
ins
push
inc
add
adc
hlt
and
int
adc
adc
pop
scas
cmp
daa
lods
punpckldq
pop
add
addr16
jp
dec
push
(bad)
addr16
sbb
cmps
nop
fs
jmp
fadd
aas
cmps
jno
aas
ins
fwait
cmp
mov
dec
test
dec
call
pusha
cmp
xor
adc
(bad)
mov
jbe
push
inc
lods
pop
inc
scas
xor
inc
call
test
pop
jp
mov
mov
iret
loopne
pop
sbb
pop
pop
or
pop
sbb
xchg
mov
push
dec
lods
sahf
(bad)
lock
and
cmovle
push
xchg
stos
test
aas
dec
pusha
call
mov
adc
mov
jmp
add
add
mov
push
push
js
pop
popa
ja
pop
mov
dec
ins
jmp
mov
(bad)
in
ret
xchg
adc
mov
(bad)
clc
cdq
jecxz
repnz
push
loopne
inc
cli
pushf
scas
inc
jl
mov
stos
dec
dec
mov
push
jecxz
cmp
stos
inc
sbb
shr
in
xchg
add
test
lds
push
(bad)
jp
jo
fs
and
inc
add
ror
fucom
mov
scas
mov
imul
leave
sub
mov
push
dec
cdq
dec
or
mov
popf
xchg
pop
fmul
xchg
sbb
loopne
jbe
test
in
pop
mov
sti
je
mov
jo
pop
pop
pushf
push
adc
adc
mov
inc
out
test
mov
xor
xchg
cmps
jbe
and
and
push
pop
aas
and
test
aam
fs
xchg
mov
movsx
xchg
(bad)
add
jae
pop
daa
fs
push
or
mov
scas
stos
add
xlat
lods
ins
lds
mov
test
stos
cli
jmp
(bad)
and
xchg
mov
ret
sbb
xor
push
ret
inc
mov
(bad)
outs
shl
sahf
rcr
or
mov
(bad)
adc
xor
inc
or
mov
mov
mov
cmp
scas
jle
repnz
push
add
lahf
mov
mov
mov
cdq
nop
test
adc
and
ins
rol
ror
xor
pusha
fmul
sahf
and
xlat
lea
data16
retf
pop
dec
scas
out
push
jae
scas
or
fwait
inc
jbe
jbe
pop
ds
imul
pop
addr16
outs
bound
repz
inc
and
pop
fwait
pop
cmc
sbb
cdq
mov
xchg
xchg
mov
lods
loop
xchg
jg
call
push
std
cs
add
jno
stc
xchg
(bad)
mov
pop
xor
adc
into
es
adc
daa
imul
cmp
xor
mov
mov
sub
loopne
sub
call
cmp
scas
lods
lahf
pop
js
sub
push
mov
int
pusha
arpl
xor
lods
jmp
pop
outs
stc
popf
mov
cmc
imul
xor
inc
adc
icebp
xchg
fild
jle
mov
push
rcl
nop
sub
adc
test
push
in
out
fwait
lahf
repz
repnz
mov
les
sub
std
test
fild
cs
mov
(bad)
cmp
cmp
xor
mov
icebp
or
test
out
jnp
fdiv
loopne
mov
stos
push
aad
mov
in
sbb
out
scas
mov
retf
fldenv
lods
jle
pop
mov
cmc
leave
mov
sub
mov
std
cwde
pop
xchg
lock
sbb
dec
scas
cwde
sti
int3
add
cmp
cli
xor
stos
mov
outs
pop
mov
test
jecxz
jmp
lahf
scas
mov
dec
pop
cli
push
into
pop
mov
mov
and
cli
pop
lods
(bad)
xchg
jmp
sbb
shr
push
or
int3
cld
call
jmp
add
lods
and
or
mov
xor
pop
and
mov
mov
repz
add
and
jne
push
cmp
pop
stos
addr16
jno
sbb
rcr
nop
jg
inc
popa
dec
in
fld
loope
aad
add
addr16
imul
jp
fist
jmp
jnp
dec
das
rcr
mov
or
arpl
inc
cmp
sub
cli
cmp
pop
mov
int3
sbb
movs
scas
jge
adc
jno
int3
xchg
mov
rol
fs
es
push
push
test
imul
out
(bad)
out
emms
pop
test
and
dec
repz
icebp
push
and
mov
mov
lds
push
pop
clc
pop
mov
xor
lds
loopne
cmp
repnz
leave
xchg
mov
or
out
(bad)
jns
cmp
inc
push
pop
push
aaa
cmps
enter
xchg
icebp
xor
call
push
pop
mov
xchg
sub
xchg
fistp
or
out
int3
in
imul
sahf
cdq
sub
arpl
push
jns
cmps
retf
and
fidivr
or
stos
push
sub
enter
cdq
dec
mov
ret
xchg
rcr
cmc
inc
inc
mov
jp
imul
jbe
push
push
scas
je
call
sbb
fwait
add
or
xor
shl
mov
enter
(bad)
or
xchg
pop
cmc
add
in
sbb
int3
(bad)
sar
pop
call
mov
sbb
xchg
jmp
aad
aas
leave
test
xor
popa
imul
std
stc
mov
out
jmp
push
into
push
jmp
lods
data16
out
ss
mov
loopne
dec
movs
cmc
push
pop
scas
xor
shr
sbb
cmc
(bad)
cli
or
adc
adc
call
jle
push
out
mov
xchg
sub
jmp
cmp
xor
sub
in
addr16
mov
sahf
int3
xchg
test
mov
mov
movs
(bad)
dec
std
aas
imul
push
xchg
mov
retf
movs
xor
cmc
cmp
and
mov
jb
ins
cdq
jb
test
mov
push
pop
ins
cmps
push
or
xchg
test
lods
push
aam
or
stc
cmp
cmps
dec
mov
pop
jb
ins
cdq
ins
push
push
out
add
test
mov
scas
mov
xchg
out
mov
cmp
dec
and
dec
retf
movs
out
pushf
dec
pushf
gs
dec
(bad)
mov
inc
fs
lea
or
cmp
sub
call
shl
sar
rol
fs
aaa
jle
clc
fs
mov
or
adc
mov
adc
mov
push
add
gs
movs
aad
or
adc
sbb
xor
mov
jmp
mov
ret
jb
sbb
inc
dec
imul
inc
mov
mov
sbb
xor
fnsave
cmps
mov
xor
xor
mov
ins
retf
(bad)
mov
xor
sub
loopne
enter
cmps
dec
and
add
dec
pop
sbb
push
cwde
add
push
pusha
add
cmp
pop
fsub
push
mov
loopne
pusha
dec
inc
jb
fild
jl
jne
ss
aad
cli
not
ja
inc
lods
cs
cmp
popa
or
and
retf
inc
push
aam
and
outs
int
aam
ret
cmp
push
lods
dec
mov
bound
(bad)
pop
iret
inc
out
lods
loope
out
push
jmp
sub
sbb
aas
mov
cld
jnp
fsub
push
jne
scas
sbb
outs
test
fild
movs
daa
out
movs
cmps
push
scas
xchg
push
movs
xlat
fcom
rol
sub
jno
retf
push
or
out
pop
sub
sub
xchg
jno
push
mov
sbb
repz
push
sbb
mov
xor
movs
ins
push
and
lahf
mov
mov
xor
mov
jo
pop
loopne
add
mov
inc
inc
push
scas
cmpps
or
inc
xchg
out
andnps
mov
pop
out
repz
mov
sqrtps
inc
add
(bad)
hlt
pop
(bad)
into
test
test
(bad)
sub
out
xor
movs
imul
jmp
(bad)
pop
push
inc
(bad)
test
stc
jmp
mov
(bad)
sahf
out
int
sar
jnp
(bad)
rol
sbb
mov
sub
adc
or
fnstenv
sub
xchg
iret
repz
mov
cwde
add
aaa
sbb
gs
mov
adc
fisttp
cld
rcl
xchg
fcomp
arpl
ins
jp
sbb
mov
mov
pop
add
jecxz
push
mov
inc
fwait
inc
pop
dec
aam
cmc
test
(bad)
in
pop
ja
push
and
sub
mov
sbb
or
cmps
(bad)
ret
stos
push
and
pop
pop
xchg
scas
loop
jo
mov
push
sub
push
out
popa
jne
mov
adc
sbb
sub
bsf
and
jg
sahf
inc
sbb
push
xor
or
fsubr
pop
dec
dec
imul
fcom
mov
jmp
cmp
xor
jmp
mov
pop
adc
adc
popa
sar
imul
push
ds
les
inc
cdq
push
sbb
and
pushf
mov
jns
and
cwde
out
cmp
fdivr
jl
pop
pop
adc
cmp
shl
sbb
popa
imul
idiv
hlt
or
adc
inc
mov
aam
xor
mov
push
les
dec
xor
or
sbb
popf
mov
mov
daa
sub
in
jae
cmp
push
movs
cmp
cmp
iret
mov
loop
adc
or
sub
sub
in
mov
inc
cmp
fs
inc
fidivr
sub
ja
sbb
cmps
cmp
pop
cdq
xor
mov
adc
daa
aad
popf
jp
mov
or
cdq
sub
inc
dec
ja
or
retf
call
and
inc
das
xchg
adc
inc
push
outs
loop
sub
call
push
push
pop
add
loop
popf
mov
fs
(bad)
xor
iret
(bad)
or
jmp
fild
popa
pop
mov
(bad)
dec
test
cdq
ret
cmps
jae
imul
mov
dec
leave
push
std
mov
das
lahf
push
bound
retf
bound
sbb
push
out
mov
or
mov
xor
jecxz
ins
loope
das
pop
loopne
mov
fcom
sbb
xor
arpl
leave
repz
cld
icebp
addr16
shl
add
cdq
and
int3
jo
cmp
sti
xchg
call
sbb
push
dec
out
fadd
dec
cmps
sbb
push
pop
fistp
je
cmp
mov
jae
ss
movs
popa
ins
adc
mov
movs
hlt
fst
mov
imul
adc
or
sbb
jne
loop
in
push
sbb
inc
pop
int
adc
jp
cmp
add
rcr
adc
ins
inc
xor
and
ret
cdq
shr
push
jl
ret
mov
xor
jno
inc
and
or
dec
ss
imul
add
and
daa
movs
pop
mov
jmp
(bad)
call
sbb
bnd
sbb
mov
cmp
jbe
xor
push
inc
repnz
cld
jno
lahf
jmp
ja
sbb
dec
call
test
rol
jle
mov
xchg
xchg
dec
leave
push
int
push
(bad)
lods
icebp
add
xchg
mov
shr
xor
xchg
imul
push
pop
lahf
mov
or
les
repz
call
test
repz
mov
mov
inc
das
mov
in
mov
adc
fidiv
out
inc
das
js
sbb
dec
pop
repnz
sub
mov
cmps
pop
sub
inc
xchg
and
mov
pop
xchg
mov
jp
fst
jne
inc
sti
stos
pop
cmps
(bad)
jae
retf
imul
jae
call
push
pop
out
adc
sub
and
jmp
test
movs
test
outs
mov
rcl
cli
xchg
retf
retf
cmovge
push
sbb
and
sub
clc
xchg
or
pusha
into
mov
or
call
push
fwait
or
(bad)
mov
movs
add
dec
pop
xchg
call
inc
(bad)
xor
std
xlat
add
aam
je
dec
or
cmp
inc
pusha
or
jbe
fucomp
in
js
mov
scas
pop
adc
loop
dec
adc
dec
iret
ins
mov
pop
(bad)
mov
push
rcr
out
mov
(bad)
jg
and
fist
add
jl
add
or
mov
mov
out
jmp
je
mov
pop
xchg
cmc
push
xchg
aad
xchg
arpl
bound
(bad)
mov
adc
fsubr
push
push
stos
push
pop
sub
clc
mov
aaa
repnz
jl
arpl
mov
mov
adc
stos
call
mov
sbb
test
mov
div
push
jo
mov
test
jecxz
cwde
push
fs
iret
cmp
lods
mov
frstor
add
sbb
and
push
movs
sbb
push
mov
dec
fdivp
add
inc
sub
cmp
icebp
pusha
lods
jae
pusha
fstp
sbb
jmp
dec
lahf
int
test
sbb
jne
lock
shl
mov
xchg
push
xor
arpl
cmp
jnp
cmps
outs
add
cmp
movs
jnp
jge
pop
mov
rcl
sbb
ja
shl
outs
inc
jnp
add
mov
jle
jg
fwait
lods
sbb
xlat
jns
cmp
jbe
sti
push
scas
aad
xor
ja
imul
jnp
(bad)
call
xlat
pop
jns
nop
push
fcom
je
xchg
cmp
pop
or
adc
push
scas
adc
ins
rcr
sub
fld
mov
xor
inc
mov
sub
adc
add
popa
inc
mov
mov
iret
or
cmp
xchg
sub
out
push
es
ins
dec
sbb
imul
xor
mov
xor
jnp
jp
or
mov
jo
sub
mov
mov
pop
sbb
js
push
pop
fcomp
ds
lea
xor
movs
rcr
sbb
mov
push
push
adc
daa
fist
add
scas
inc
out
in
int
in
add
xchg
and
ins
push
ficomp
jmp
inc
test
cwde
cmp
mov
add
test
mov
or
push
sbb
(bad)
ins
fcmovnbe
sub
jne
inc
cmp
arpl
cdq
and
fild
push
adc
imul
push
cmp
sub
popf
(bad)
xchg
xchg
adc
and
int
jbe
jnp
or
and
xor
cmp
inc
fs
leave
jmp
leave
out
out
pop
push
sub
add
cmp
inc
jmp
sub
(bad)
lahf
sbb
dec
dec
in
call
movs
stos
hlt
addr16
ror
and
ds
push
outs
(bad)
in
inc
or
xlat
add
(bad)
xor
jnp
sbb
ret
mov
bound
sub
add
dec
lods
pop
sahf
ss
retf
mov
out
sar
hlt
adc
add
sbb
cmp
sub
(bad)
push
ins
push
jo
mov
mov
cld
jb
sbb
lea
mov
inc
imul
ret
push
ja
mov
fsub
into
and
adc
xchg
inc
and
sub
neg
cmps
xlat
pushf
outs
pop
xor
pop
repz
inc
push
stc
test
xchg
inc
aas
pushf
pop
push
out
mov
or
call
imul
xchg
jle
sub
sub
fs
add
jecxz
pop
call
addr16
sub
aas
xor
clc
test
and
sbb
jg
xor
sub
call
xor
xor
jns
pop
mov
mov
sbb
jl
test
popa
or
outs
movs
push
retf
and
in
cmp
cwde
mov
fcmovbe
mov
cmp
neg
adc
and
push
clc
shr
pop
sub
xchg
clc
cld
int3
jae
jg
leave
push
jecxz
mov
lods
dec
adc
jb
call
mov
sbb
test
ret
lds
clc
sub
dec
imul
jb
pop
sub
lea
nop
push
inc
jecxz
loop
mov
out
iret
stos
bound
pop
and
(bad)
xchg
pop
mov
data16
test
and
les
cmc
mov
fdivr
sub
(bad)
mov
popa
jne
push
lock
xor
cmps
rcr
rcl
xor
add
(bad)
ror
adc
and
cmp
rol
xchg
mov
sbb
push
inc
dec
leave
retf
rol
sbb
or
std
ret
adc
adc
fistp
outs
push
in
ss
fild
fadd
cli
jecxz
out
cmp
repnz
pop
push
test
dec
sbb
ret
jo
or
cmp
xchg
pushf
clc
pop
lods
adc
jae
outs
push
mov
or
dec
pop
and
push
fadd
test
mov
aas
fild
popf
inc
push
push
addr16
ss
ins
mov
cmps
bound
jge
fbld
mov
and
std
mov
cmp
push
sbb
test
xchg
int3
popf
xor
daa
fwait
sub
mov
out
std
(bad)
addr16
retf
iret
push
xchg
pop
dec
mov
cdq
adc
iret
pop
(bad)
aad
nop
pop
ins
sub
push
lods
sbb
jb
mov
scas
pusha
xchg
nop
or
in
adc
jmp
push
pop
ret
rcr
mov
cdq
xchg
loopne
dec
jb
test
clc
xor
mov
mov
dec
sbb
dec
jnp
das
adc
and
shl
movs
pop
cmps
js
mov
lods
push
mov
lods
mov
xor
sbb
ret
pop
enter
xlat
imul
hlt
test
cmps
pop
inc
xor
mov
in
push
xor
xchg
jnp
mov
adc
push
add
js
(bad)
in
dec
seta
mov
jl
inc
cmp
loopne
mov
test
hlt
fimul
mov
or
lods
push
cmc
into
mov
mov
fmul
mov
fldcw
add
test
mov
call
push
in
dec
mov
inc
xchg
mov
jp
or
sub
ja
jae
sbb
int3
cmc
pop
test
movzx
push
jge
dec
inc
add
fdivr
lds
xchg
(bad)
ret
ret
sub
retf
loopne
out
pop
mov
pop
adc
outs
call
stos
xchg
mov
shl
mov
cwde
push
(bad)
cdq
pop
pop
fwait
cwde
inc
and
jmp
xchg
nop
in
xchg
sub
jns
repnz
scas
loope
cli
cld
add
imul
and
pop
push
jnp
or
icebp
xlat
scas
mov
lods
sbb
cli
xor
adc
and
out
hlt
mov
cli
or
add
push
(bad)
fmul
xlat
(bad)
repnz
add
xlat
xchg
test
pop
test
js
mov
enterw
std
ins
or
or
cld
arpl
push
lea
xor
adc
jbe
pop
mov
(bad)
out
ficom
(bad)
jmp
pop
and
call
inc
outs
fadd
mov
mov
and
clc
mov
icebp
pop
pop
dec
rcl
(bad)
jl
rcl
enter
fsub
pop
mov
xlat
out
shl
mov
mov
add
sub
inc
test
adc
ins
mov
jb
dec
cmp
out
lods
(bad)
push
adc
or
sbb
(bad)
je
out
adc
repnz
ret
outs
sti
pop
jge
mov
jl
pop
ins
(bad)
adc
sub
lahf
mov
mov
add
jno
iret
stos
or
add
sub
push
ins
mov
loopne
(bad)
test
dec
(bad)
ficom
je
cmps
xchg
cmp
div
sub
inc
push
jmp
push
mov
xor
ret
cmp
mov
ficom
int
ja
pop
mov
add
fwait
sub
or
fisttp
or
pop
xchg
sbb
cld
lock
pop
pop
and
out
out
ins
mov
xor
ins
ins
jmp
(bad)
aam
repnz
ins
sub
xchg
retf
retf
arpl
out
imul
pavgb
dec
push
stos
mov
cmc
outs
mov
jns
mov
pusha
adc
xchg
jmp
repz
jb
mov
int
dec
jecxz
sub
xor
imul
test
pop
fs
mov
mov
inc
sub
jmp
pop
sbb
cs
or
inc
inc
sar
dec
dec
push
mov
pop
mov
adc
cmps
iret
pop
gs
stos
cmp
cmps
pop
sub
mov
(bad)
mov
mov
js
pop
dec
gs
or
inc
xlat
adc
dec
test
js
jp
cwde
xor
pop
pop
test
mov
jno
mov
jae
mov
or
daa
test
adc
test
call
add
fstp
pushf
loopne
icebp
adc
sub
cmp
cmp
out
popf
sar
or
mov
in
fidivr
jmp
test
(bad)
sbb
sbb
inc
imul
ficom
mov
mov
(bad)
call
push
retf
(bad)
arpl
lock
jmp
xor
sub
sub
daa
dec
cwde
adc
cli
xor
out
enter
jg
cmp
movs
sbb
or
push
xchg
leave
clc
clc
push
pop
cmc
rol
icebp
ins
push
mov
stc
lods
aad
xor
in
mov
es
or
pop
ins
fnsave
pop
lock
in
pop
jp
adc
sub
jmp
imul
es
ins
or
fadd
mov
out
cmovae
mov
or
jle
ja
sbb
push
mov
pop
loop
imul
xor
jecxz
clc
pcmpeqb
ins
sahf
mov
jo
push
pop
imul
sbb
adc
scas
adc
lods
rol
in
nop
sub
fstp
mov
mov
cmp
sbb
fist
fwait
mov
jb
push
stc
in
jno
outs
sti
mov
scas
adc
fs
adc
out
and
repz
xchg
mov
aaa
push
nop
je
js
sbb
push
mov
cmp
outs
fnsave
sbb
and
cmp
stc
pop
ins
push
bound
sbb
adc
ins
mov
xlat
pop
fdivr
cmps
(bad)
lods
add
ins
xor
jecxz
mov
loopne
fisubr
ds
or
cmp
mov
pop
nop
jle
adc
mov
dec
adc
sub
outs
fucomip
push
aam
mov
mov
inc
addr16
movs
xchg
outs
and
sbb
loope
cmp
sub
cs
sbb
call
ds
add
pop
int3
push
pushf
and
sbb
popf
sbb
jo
inc
lods
sub
rol
mov
cs
lods
test
fsub
loopne
ficom
pop
push
jl
int3
bound
loope
push
fist
xchg
inc
jae
shl
pop
movs
out
mov
adc
les
sub
cmp
cdq
loope
out
mov
xchg
xchg
xor
cmp
pop
ins
cld
ficom
mov
push
in
ror
mov
xchg
enter
sti
pop
sbb
cmp
jo
movs
push
add
test
mov
jno
(bad)
adc
push
pop
call
cmp
add
add
(bad)
xor
cwde
inc
adc
aad
and
sbb
dec
(bad)
xchg
stc
sub
fucomp
icebp
sub
clc
fadd
arpl
mov
sub
push
push
pop
call
in
mov
push
xor
rcr
and
or
syscall
mov
cld
cmps
add
jl
mov
jbe
outs
jmp
push
jge
sub
dec
(bad)
stos
pushf
repz
inc
repz
pop
ret
jbe
shufps
xor
push
fimul
xor
ins
or
or
cmp
sub
jg
and
push
sub
cmps
mov
shl
xchg
jmp
imul
or
dec
cmp
push
lds
les
add
imul
mov
xchg
xchg
in
xchg
xchg
(bad)
test
inc
pop
cwde
add
inc
(bad)
cmps
sbb
call
xor
mov
scas
inc
xchg
mov
xor
cmp
adc
fidivr
xchg
lea
cmp
out
cmps
mov
mov
add
add
enter
stos
clc
int3
mov
add
jmp
adc
cli
push
and
dec
lahf
and
sbb
pop
sbb
xchg
xor
jg
inc
inc
mov
std
add
mov
xchg
jmp
test
aad
hlt
add
rcr
pop
bound
in
lds
retf
out
adc
pusha
jns
sbb
call
or
loope
jecxz
fwait
loop
dec
or
sbb
mov
mov
fiadd
pop
call
mov
shl
in
scas
or
bound
push
add
lea
xor
sti
jge
mov
jbe
mov
sbb
xchg
aad
mov
nop
mov
adc
jle
mov
mov
fcom
sbb
pop
sub
jbe
sbb
aad
sbb
bound
shl
pop
lds
sbb
push
in
aam
aaa
sbb
daa
add
sub
scas
pop
dec
out
mov
(bad)
(bad)
or
cmp
xchg
sub
shr
aam
call
(bad)
fwait
out
cmc
(bad)
(bad)
cmps
mov
ret
mov
cs
rol
or
cdq
xchg
mov
dec
add
add
pushf
int3
fsub
and
jns
loopne
and
aam
ror
mov
pop
inc
dec
adc
int
push
inc
lock
fild
and
mov
ficomp
pop
pop
imul
shr
ret
fwait
and
push
fbstp
or
push
pop
pop
mov
(bad)
cdq
inc
popa
adc
cmovns
xchg
mov
mov
pop
pop
iret
test
aam
call
sub
hlt
jnp
sbb
jnp
push
add
fstp
sbb
pop
lods
mov
test
icebp
cli
mov
test
popf
ror
(bad)
outs
dec
push
aad
enter
xlat
or
add
iret
xchg
pop
xchg
stos
cmps
cmp
sti
test
cmp
jmp
out
fistp
push
test
mov
out
clc
mov
push
ror
dec
aas
mov
movs
dec
jae
or
push
or
and
fs
std
(bad)
aam
or
test
mov
mov
(bad)
mov
je
sbb
mov
sbb
push
xor
enter
xlat
nop
dec
sub
xor
push
adc
cmp
(bad)
cmc
jbe
stos
test
rcr
shl
fnstsw
pop
xor
and
popf
mov
sti
xor
std
cmp
stos
push
popf
out
leave
push
mov
aam
scas
test
push
fwait
les
pop
ret
dec
add
(bad)
ror
push
cmp
push
jo
out
shr
js
test
mov
loopne
out
retf
mov
mov
mov
dec
je
pop
fwait
dec
or
sub
out
ret
div
push
fnclex
mov
movs
mul
outs
aas
sub
ret
sbb
lahf
pop
dec
adc
or
inc
dec
test
out
inc
ins
pop
ficomp
and
xchg
out
jae
(bad)
jmp
jo
mov
or
std
cs
aaa
adc
pop
test
loope
mov
popa
or
daa
mov
xchg
and
and
sbb
or
inc
pop
cld
js
xor
inc
bound
cwde
ret
cli
movs
cs
mov
int3
in
pop
inc
mov
movs
push
pop
arpl
call
cmp
inc
or
cmc
rcl
(bad)
cld
xchg
cmp
outs
jg
pop
je
std
js
mov
xchg
and
mov
enter
ins
dec
jg
retf
bound
pop
pusha
cli
xlat
or
clc
(bad)
(bad)
std
adc
cmp
mov
retw
(bad)
leave
(bad)
ins
(bad)
dec
pop
or
or
pop
xchg
push
xchg
dec
or
mov
(bad)
rol
xchg
in
lds
and
lock
jns
pop
or
fdiv
pushf
pusha
mov
pop
mov
(bad)
xlat
push
cmps
inc
movs
fld
scas
and
and
lea
jecxz
mov
ror
dec
outs
popf
cmp
dec
inc
mov
mov
push
jge
in
in
cmp
test
data16
rcl
push
push
inc
mov
pop
cmps
and
je
fsubp
loop
retf
sub
dec
or
sbb
jl
pmulhw
retf
and
pusha
add
pcmpeqw
loop
push
or
ret
and
js
sub
rcr
call
cmps
push
dec
int
mov
pop
xor
fwait
jnp
mov
div
cmp
jnp
sbb
aad
xchg
hlt
aam
push
add
pop
mov
ffreep
inc
xchg
push
arpl
in
or
or
pop
mov
inc
out
lea
movups
pop
dec
ja
xchg
inc
lods
adc
adc
jb
dec
jb
xchg
pop
adc
and
jnp
out
and
push
call
cmp
mov
(bad)
imul
movs
out
jne
fsincos
retf
stc
inc
push
loop
sar
aad
ss
pop
add
inc
dec
jle
dec
les
xor
into
push
mov
jmp
lahf
(bad)
pop
xchg
mov
mov
push
mov
out
jno
sahf
test
loope
xchg
mov
pop
stc
sub
mov
out
pop
push
push
xchg
mov
cmps
(bad)
popf
or
ja
add
or
push
rcr
xchg
outs
jecxz
stos
call
into
jne
mov
inc
sbb
repnz
xchg
add
push
pop
jmp
cmp
mov
dec
xchg
jno
pop
mov
add
(bad)
mov
push
adc
sar
fld
inc
or
shl
loopne
push
xor
sub
retf
mov
ss
lds
scas
push
cmp
sahf
(bad)
call
cld
loope
dec
and
scas
inc
lods
mov
ds
push
mov
shl
aas
dec
jp
push
mov
sub
cwde
mov
outs
and
sub
pop
jg
lea
cmc
aaa
cs
fwait
or
pop
shl
xor
add
cmp
push
dec
outs
test
and
dec
int
jae
push
xchg
and
mov
inc
out
jecxz
inc
test
cdq
nop
call
push
jae
xor
sbb
xor
mov
daa
iret
or
and
mov
mov
out
xchg
cwde
pop
dec
popa
and
jo
movs
dec
push
ds
or
out
push
aas
cmp
xchg
xchg
sub
das
adc
pop
xor
push
push
and
test
out
cvtpi2ps
aas
out
lods
int
mov
inc
inc
mov
pop
xor
gs
(bad)
das
dec
aaa
sub
or
push
xchg
push
xchg
sahf
push
xchg
pop
sub
out
or
mov
jge
cmps
sub
jbe
xchg
fsubr
or
(bad)
mov
stos
aaa
jge
stos
nop
mov
push
loop
cli
sti
xchg
cmp
xor
jl
mov
push
int
or
popf
bound
push
inc
fld
out
jmp
push
inc
out
retf
cs
jg
cli
mov
imul
repnz
shl
adc
and
add
cmps
push
daa
xchg
pop
aas
ins
and
mov
inc
push
xchg
and
add
pop
arpl
pop
inc
mov
add
mov
(bad)
lock
dec
mov
out
mov
xchg
inc
push
add
idiv
add
push
mov
call
mov
xor
(bad)
or
inc
shr
loop
jmp
push
jmp
xor
dec
mov
cwde
jb
mov
mov
mov
shr
mov
icebp
mov
cmc
cmp
xchg
into
cmp
xchg
shl
in
dec
iret
sub
mov
inc
imul
dec
out
arpl
adc
push
ds
dec
cmp
aad
gs
aas
loop
jl
sub
(bad)
sub
xor
push
aad
test
iret
fisttp
movs
pop
or
inc
xor
mov
push
xor
and
push
dec
dec
and
adc
fiadd
fwait
push
in
iret
cld
pop
dec
rcl
aad
and
xlat
or
sub
lods
scas
xchg
stos
mov
jbe
xlat
out
jecxz
inc
aaa
mov
inc
inc
loop
jmp
mov
sub
leave
inc
mov
sti
or
cmp
add
sub
jmp
dec
movs
in
iret
nop
retf
cs
rcl
stos
inc
dec
outs
sbb
nop
sbb
outs
fdivr
js
xor
adc
test
dec
cmc
xchg
mov
imul
sti
outs
mov
xor
pop
pop
(bad)
stc
and
mov
in
stos
inc
cmp
int
and
outs
sbb
and
enter
inc
or
jle
nop
xor
test
jmp
loop
mov
mov
ss
mov
out
sub
mov
jecxz
cmp
mov
pop
pop
push
sti
mov
adc
imul
loop
(bad)
sar
sahf
xchg
gs
clc
mov
pop
fsubp
outs
test
add
lock
movs
adc
and
jecxz
jle
rcl
mov
cmc
in
stc
repnz
mov
loopne
xchg
movd
add
mov
pop
push
fimul
push
sub
lods
dec
mov
imul
push
inc
ror
pop
sbb
jae
adc
out
arpl
(bad)
or
ret
sti
test
mov
aas
lea
pop
jb
mov
repz
leave
adc
mov
cli
dec
dec
lds
popa
call
sti
xchg
cmc
cdq
test
mov
and
xchg
loope
jne
fcom
ds
pop
daa
inc
mov
xor
mov
and
ss
repnz
ins
sub
retf
or
lods
cmp
fiadd
mov
retf
outs
cmc
cmpxchg
adc
ins
xlat
dec
sub
and
dec
pop
dec
xchg
in
clc
in
shl
test
retf
imul
xchg
sti
jbe
lock
stc
or
adc
js
mov
pushf
cmp
jnp
(bad)
xchg
fdivr
xor
aaa
in
loop
(bad)
jo
mov
repz
or
in
clc
mov
push
in
mov
repz
jae
and
dec
int
scas
repnz
ficomp
dec
mov
aad
jb
xor
mov
(bad)
cmps
and
dec
xor
nop
or
sub
sub
add
fnstenv
fist
test
inc
fsubr
pusha
out
icebp
xor
pop
dec
xor
sbb
movs
fimul
out
add
enter
scas
sub
jmp
push
mov
mov
je
fbld
sub
adc
pop
fcmovb
sub
and
mov
pop
pusha
mov
repnz
cld
je
and
movs
out
dec
movs
cmp
sbb
inc
das
jl
add
pop
ret
(bad)
mov
jp
idiv
mov
pop
cmp
mov
jp
dec
push
pop
movs
jbe
imul
mov
and
adc
jmp
cs
push
cmp
cmps
pop
outs
inc
add
fisttp
xor
test
arpl
dec
mov
ins
fbld
adc
jnp
ror
lea
loop
mov
inc
jle
ret
cld
cmps
mov
pop
fidivr
into
mov
mov
stos
push
mov
xor
mov
pushf
mov
jo
jl
jmp
sti
into
sti
in
das
xchg
test
(bad)
lods
cli
std
xchg
test
pusha
fild
jns
scas
mov
cwde
(bad)
out
sub
addr16
les
jae
push
data16
mov
leave
dec
or
jns
mov
inc
push
mov
pop
cwde
mov
sar
push
push
stos
sti
ficomp
pop
inc
or
fdivr
lods
lock
mov
psllq
fld
cmp
adc
shl
hlt
pop
push
out
push
inc
movs
jno
inc
mov
pushf
mov
loopne
sbb
jo
push
ds
fld
and
jns
sub
xor
and
enter
xchg
(bad)
pop
xor
stc
cmp
and
pop
xchg
push
rol
sbb
xlat
in
jb
xchg
and
test
dec
cmc
outs
arpl
add
dec
add
jb
pop
pop
xor
or
je
inc
and
adc
xchg
push
adc
mov
daa
xchg
or
or
shl
xlat
fld
sahf
jmp
sub
fwait
mov
sub
and
in
(bad)
stos
or
and
int3
push
xchg
retf
mov
and
mov
loop
xchg
xchg
or
fcomp
pop
xchg
cmps
pop
push
mov
xor
out
out
(bad)
sub
scas
(bad)
ss
mov
xor
xchg
jb
sbb
cs
shl
jle
loop
cmps
into
fist
das
jnp
rcr
popf
sub
mov
test
mov
lea
pop
push
enter
int
call
jo
jb
xchg
int
push
dec
loopne
mov
xlat
push
imul
xor
inc
(bad)
jmp
and
cmp
movs
sbb
cli
xor
in
(bad)
ins
repnz
cmps
loop
push
sub
fdiv
jne
cmp
cmps
pop
call
ins
mov
cmps
dec
inc
scas
les
cs
jb
adc
inc
aad
(bad)
movs
mov
adc
cs
fild
cdq
jg
add
fsub
cmp
or
and
xchg
rol
pop
jp
mov
shl
ds
inc
out
xchg
pop
adc
inc
mov
lds
sub
call
mov
int3
add
xor
pop
mov
lods
xchg
repnz
int
or
inc
jg
rcr
xor
push
cmps
mov
popa
sbb
rcl
mov
and
cmps
test
lods
inc
and
lahf
or
js
sub
fidivr
add
add
cmp
movs
stos
mov
aad
pop
adc
push
fcom
into
movs
push
test
cmp
mov
dec
ret
mov
clc
test
loop
js
sub
das
nop
push
ss
aaa
mov
sar
out
repz
inc
dec
rol
mov
sti
mov
sbb
mov
or
or
fisubr
arpl
inc
add
pop
adc
mov
add
call
sbb
not
jno
pop
enter
or
mov
xor
and
and
(bad)
aaa
cwde
sahf
ins
fs
pop
daa
js
sti
sar
add
lock
mov
ins
imul
shl
pop
mov
inc
pop
leave
inc
push
and
xchg
xchg
js
neg
xchg
jle
push
pop
add
and
shl
jmp
push
ds
push
or
movs
(bad)
clc
jne
addr16
cli
inc
xor
xchg
or
aas
aam
push
ficom
(bad)
and
dec
pusha
je
ins
inc
dec
add
pop
jns
mov
sar
mov
push
(bad)
ss
fstp
sti
sbb
outs
mov
push
mov
popf
in
jl
rcr
adc
or
int
adc
ins
and
jle
sub
retf
stc
aad
lds
push
push
(bad)
retf
adc
pop
sbb
aaa
push
cmp
mov
gs
dec
ss
jae
std
and
mov
(bad)
jp
fsubr
xor
add
xchg
pop
jp
test
sbb
fld
sub
mov
push
mov
ss
out
jge
jns
scas
sub
jb
sub
movs
mov
cmps
mov
out
(bad)
aam
loope
add
adc
shl
push
mov
cmp
mov
cmc
shl
lds
xchg
retf
xchg
cmc
mov
div
push
popa
stos
push
push
stc
les
cmp
imul
lahf
clc
xor
adc
imul
sbb
out
aam
bnd
in
loopne
sub
push
fcompp
sahf
pop
xor
dec
scas
push
mov
iret
ss
int
int3
sbb
mov
cdq
inc
(bad)
sbb
xchg
clc
es
out
adc
int
and
pop
xchg
scas
and
inc
mov
push
pop
inc
pop
xchg
pop
sbb
test
ins
mov
hlt
xchg
xor
(bad)
into
cmp
cmc
(bad)
xchg
jbe
xlat
out
call
pop
mov
retf
jo
stos
sub
dec
adc
inc
inc
adc
xchg
or
inc
fnstcw
jns
jne
inc
adc
ins
jmp
es
jecxz
test
push
jl
ins
dec
repz
frstor
inc
loop
arpl
(bad)
xor
ret
xchg
add
and
test
pop
or
arpl
or
(bad)
push
cmp
pop
jns
jae
mov
push
popa
mov
shr
sbb
and
hlt
add
bswap
adc
mov
mov
fwait
popa
adc
(bad)
enter
push
in
cld
in
sub
div
ror
cmp
cwde
or
sub
fs
nop
lods
mov
mov
je
fwait
or
mov
jmp
lock
repz
xchg
sbb
scas
mov
mov
cdq
cmc
jmp
repnz
or
add
cmp
mov
jno
cmp
ja
xor
inc
cmp
push
data16
jbe
fld
hlt
test
dec
and
je
lea
pop
in
enter
fs
mov
jnp
mov
cmc
loopne
or
mov
aam
arpl
mov
cmp
not
or
add
cmps
mov
or
imul
cli
repz
or
pop
sub
add
pop
jmp
icebp
icebp
or
jmp
mov
xor
xchg
mov
add
mov
jge
(bad)
and
les
stc
in
(bad)
gs
add
sbb
jmp
scas
push
xchg
loop
loopne
mov
dec
adc
clc
sti
loop
movs
in
jl
mov
ror
adc
fcmovnu
ror
xchg
push
out
jae
sub
into
pop
pop
inc
ja
sbb
jb
or
jb
add
movs
mov
cmps
xor
cli
jmp
je
std
ins
jecxz
(bad)
dec
sbb
pop
cdq
mov
adc
mov
adc
aaa
pop
lds
pop
repz
inc
adc
fucom
push
mov
xor
xchg
xor
mov
cmp
scas
mov
mov
ret
push
sbb
inc
xor
or
lods
or
out
sbb
movs
xor
out
xlat
dec
mov
pop
add
jecxz
out
int
xchg
arpl
inc
stos
test
xor
xchg
jb
(bad)
stc
xchg
retf
xchg
ret
mov
sub
fisttp
pop
push
sub
int
jae
or
pop
pop
cmp
xor
dec
ficom
adc
cmps
addr16
push
inc
mov
pop
cwde
lods
test
mov
js
test
nop
add
xchg
popf
int3
mov
cld
mov
inc
div
dec
(bad)
pop
inc
sbb
jmp
pop
xor
enter
add
jb
jns
inc
sbb
dec
mov
sbb
nop
pop
push
cmp
jmp
pop
add
or
test
xchg
dec
mov
sub
adc
in
std
jmp
scas
outs
aad
jbe
xchg
loop
mov
add
loope
lock
pushf
aam
fucom
mov
aas
push
in
jo
dec
sub
(bad)
mov
cmps
and
pop
adc
out
mov
int3
jae
xchg
sbb
lods
mov
add
cdq
jge
popf
rcl
scas
es
add
fistp
adc
add
cs
scas
dec
lods
aas
push
xchg
(bad)
xchg
stos
pop
fcom
cli
mov
jl
in
cwde
push
cmp
inc
jb
ds
dec
fcmovb
in
xor
xchg
sar
xor
call
int3
mov
bound
mov
(bad)
adc
cmp
jge
cmp
mov
ja
cmp
(bad)
and
and
aam
pushf
xor
adc
cmc
into
mov
aas
popf
adc
adc
or
stc
fcomp
in
mov
push
mov
cwde
jo
cwde
lea
jmp
cld
data16
mov
or
sub
xlat
lods
mov
cli
rol
mov
cs
not
push
push
cld
push
mov
adc
dec
pop
addr16
push
inc
xor
sub
cs
adc
xchg
mov
pop
mov
outs
mov
add
(bad)
rcl
test
mov
xchg
nop
ja
jl
mul
call
xor
mov
(bad)
call
ins
fst
retf
cdq
add
cmp
shl
retf
mov
xchg
jmp
mov
ret
pop
push
dec
icebp
cdq
mov
out
out
(bad)
iret
push
push
std
or
hlt
(bad)
inc
xlat
pop
dec
xchg
pop
push
inc
and
cmp
cmp
inc
pushaw
sbb
push
and
out
std
xor
inc
adc
xor
(bad)
loope
ins
mov
sahf
mov
cmps
mov
jle
dec
mov
mov
jmp
sub
or
js
jp
clc
adc
rcr
loop
arpl
inc
aaa
inc
cmps
and
add
jg
call
pop
cmp
mov
icebp
inc
xchg
fcmovb
sbb
shr
inc
fsubr
mov
and
mov
mov
sub
or
outs
lods
stos
es
cmp
repnz
aaa
jbe
sub
mov
add
xlat
neg
iret
nop
jp
jne
add
out
jnp
or
loope
add
dec
push
fdivrp
sub
out
movs
stos
dec
mov
push
push
jecxz
mov
xor
cdq
je
jnp
loopne
punpckhbw
sti
cmp
jmp
arpl
aas
and
pop
sub
and
mov
mov
jmp
pop
jno
jno
fist
retf
push
xor
es
add
jp
mul
dec
repz
stos
cmp
sbb
ja
jnp
mov
jne
xchg
mov
mov
(bad)
ins
loopne
retf
ss
stc
icebp
mov
jge
mov
imul
adc
mov
stos
mov
cdq
add
rol
jne
imul
jecxz
sub
enter
popf
push
sbb
push
and
in
ja
mov
cmp
mov
adc
popf
mov
jmp
jmp
xor
out
inc
rcl
mov
xchg
adc
repnz
pop
aad
int3
jbe
loop
mov
cmps
inc
mov
dec
sub
imul
pop
aad
(bad)
mov
jo
jns
inc
out
aas
lods
inc
push
int
lods
push
xchg
dec
test
or
mov
dec
loop
add
loop
add
inc
pop
test
add
loope
lea
out
pop
jecxz
rol
pushf
enter
fs
(bad)
fild
test
inc
aad
push
xchg
scas
pop
gs
lods
ins
dec
in
xchg
dec
adc
and
vsubss
inc
in
movs
int3
mov
movs
mov
xchg
or
lods
loope
mov
xchg
mov
cmps
retf
pop
pop
xor
dec
fsub
rcl
ja
mov
popa
xor
sub
retf
add
stc
adc
pop
ret
pop
loope
aad
adc
sub
retf
ss
mov
push
enter
rol
lock
mov
jo
mov
pop
arpl
icebp
aad
cmp
xor
aam
jae
add
hlt
loop
repz
(bad)
push
sub
inc
cmp
sbb
test
arpl
scas
mov
inc
sub
bnd
dec
push
repz
repnz
mov
imul
mov
adc
lahf
cmp
or
jmp
ret
outs
add
pop
into
jae
outs
pop
popf
mov
test
mov
popa
xchg
sbb
xchg
repz
inc
sbb
sbb
and
faddp
xor
add
sbb
pop
jb
iret
div
leave
ret
dec
cmp
mov
dec
(bad)
int3
lahf
inc
jp
mov
(bad)
cmp
fbstp
xor
xchg
cmp
call
mov
lds
jbe
add
out
dec
ja
xchg
dec
loop
outs
pop
leave
mov
mov
or
cmp
and
adc
mov
mov
or
movq
pushf
sar
push
stos
clc
cs
out
mov
stos
mov
pop
fs
inc
or
add
add
test
repz
add
ds
mov
push
rcr
dec
sub
mov
cwde
lock
js
out
sbb
mov
add
inc
xchg
sub
jle
je
aaa
leave
rcr
imul
into
inc
js
mov
push
shl
jb
adc
fcomp
add
mov
jle
adc
lock
mov
(bad)
xor
inc
(bad)
das
retf
mov
pop
pop
push
cmc
or
aam
cli
jl
cmp
mov
sub
arpl
cmp
xchg
hlt
(bad)
ja
pop
retf
jle
jp
dec
dec
adc
cli
push
adc
mov
les
jg
or
daa
xchg
jecxz
push
std
(bad)
outs
int
mov
and
shl
popa
mov
pop
in
push
int
(bad)
push
pop
sbb
fadd
cmc
mov
jb
stc
push
retf
add
add
mov
fwait
in
dec
daa
mov
jle
dec
xchg
inc
stos
cld
adc
pop
cmp
ret
outs
cli
mov
outs
and
or
sub
ret
loop
out
or
fsubrp
dec
jb
or
and
lods
mov
adc
push
ret
sbb
mov
and
leave
pop
ret
aam
addr16
outs
outs
lock
nop
sub
or
push
int
mov
add
out
adc
ja
mov
cmp
cwde
dec
lahf
fistp
clc
jns
adc
je
stos
in
into
sbb
repnz
push
fld
cli
ret
aas
mov
inc
mov
jnp
xor
scas
dec
mov
mov
aas
sbb
clc
jno
mov
arpl
add
cld
pop
pusha
mov
loop
add
jb
inc
sar
xchg
repz
retf
mov
pop
pop
cmp
pop
push
mov
stos
mov
xor
jno
(bad)
shl
and
or
add
push
adc
aam
scas
mov
mov
std
sub
adc
imul
jg
ds
movs
cmp
sbb
push
or
movntq
out
cmc
rol
adc
cmp
je
in
scas
out
sbb
fistp
les
and
pop
movs
data16
lock
lea
push
push
adc
cmp
mov
inc
shl
mov
mov
sar
bound
pushf
in
push
and
fwait
xor
mov
fcomi
mov
adc
les
imul
add
xlat
jns
mov
(bad)
cmp
mov
and
rcr
mov
fldcw
popf
loopne
inc
pop
aam
cmp
dec
add
(bad)
shl
dec
shl
mov
arpl
sub
jl
lds
ret
jbe
sub
es
push
sti
dec
in
adc
or
loopne
xor
adc
inc
popa
out
stos
sahf
repz
or
idiv
and
pushw
call
ja
lods
sub
loopne
mov
shr
aam
jnp
inc
push
sub
mov
add
sub
in
mov
add
adc
sub
sub
jg
ds
ret
mov
pop
jb
lods
rol
sub
sbb
mov
adc
push
test
pop
add
push
sbb
shr
sbb
dec
adc
cmp
cmp
sub
inc
sbb
in
sbb
or
retf
pop
push
je
sar
push
jecxz
add
push
add
mov
movs
push
das
jmp
xchg
je
sub
fcomp
(bad)
mov
cli
je
sub
imul
mov
idiv
cmp
imul
sbb
dec
inc
dec
sbb
jne
clc
inc
cmovne
mov
clc
iret
jno
out
mov
cwde
lock
and
xchg
jmp
jne
inc
sar
pop
pop
mov
lock
mov
xchg
gs
jae
mov
inc
add
ins
dec
cmps
clc
jg
sub
cdq
push
rol
cmps
iret
or
clc
sti
rol
shl
jmp
fidivr
push
out
arpl
pop
les
fnstsw
xchg
loope
jae
mov
(bad)
loope
pop
(bad)
mov
lahf
dec
in
xchg
popf
add
dec
data16
fimul
stos
ins
loope
push
cdq
ins
cld
cld
clc
nop
aam
das
aaa
jmp
or
add
(bad)
jb
ds
pop
xor
mov
cmp
xchg
jo
or
mov
xchg
jae
(bad)
in
int
dec
dec
ret
gs
test
retf
cmp
popf
pop
fwait
out
jnp
cli
cli
and
mov
ret
stos
cmps
or
pop
pop
out
sbb
add
rcr
aam
and
pop
inc
imul
(bad)
daa
out
or
jb
mov
adc
shr
ins
mov
aad
dec
dec
xchg
fwait
shl
pop
or
leave
jp
stc
in
mov
js
stos
int
outs
inc
mov
ds
add
jbe
adc
call
sbb
ret
in
pop
sbb
ja
pop
stos
jl
mov
mov
dec
je
sbb
or
ret
push
xor
sub
out
es
sub
xchg
pop
push
cmp
adc
pop
cmp
std
push
adc
in
and
rcl
ret
cs
out
(bad)
out
gs
es
sub
pushf
pop
(bad)
cdq
jmp
fistp
inc
pop
aas
inc
xchg
ret
fldcw
popf
mov
pop
pop
or
and
clc
jle
sbb
inc
xor
xor
xor
dec
mov
ret
popf
outs
inc
mov
push
test
lahf
fadd
dec
or
test
shr
scas
pop
loope
rol
ret
sbb
and
fwait
jge
mov
test
and
jne
lds
or
aas
push
mov
mov
daa
inc
mov
and
retf
sbb
push
push
xor
xchg
mov
mov
mov
and
jecxz
push
jmp
sbb
mov
mov
push
adc
lods
sub
dec
sbb
mov
pop
ins
cld
mov
adc
sub
nop
or
push
dec
sbb
mov
jle
add
inc
add
sub
sbb
fdivr
jae
pusha
push
xchg
addr16
mov
std
fld
(bad)
out
pop
add
test
movs
mov
cmps
test
stos
pushf
std
dec
pop
cdq
(bad)
sahf
cmp
in
cmps
dec
xchg
push
je
inc
retf
fldenv
inc
mov
(bad)
push
push
movs
out
mov
pop
push
ins
xchg
sar
(bad)
sub
pop
sbb
loope
aaa
inc
les
adc
leave
push
and
cwde
mov
lahf
cdq
and
pop
std
leave
push
adc
inc
retf
adc
fisttp
aaa
aam
scas
add
or
mov
ror
or
popf
leave
pop
push
adc
mov
addr16
add
sub
or
push
fidiv
mov
int3
fnstenv
test
ja
test
pop
push
shl
movs
iret
jp
les
pop
xchg
in
pop
cmp
jp
scas
push
ja
in
mov
ja
ds
mov
outs
xor
and
mov
push
in
movs
mul
std
inc
add
js
cmp
inc
xchg
mov
daa
pusha
sub
in
mov
ds
iret
scas
cs
dec
cmp
pop
fstp
xchg
movs
or
cs
fiadd
xor
sub
bound
in
lock
inc
and
aaa
sbb
in
hlt
or
add
jo
dec
jmp
xlat
rol
mov
mov
mov
enter
fwait
mov
iret
mov
dec
pop
jo
xor
bound
sbb
shl
into
jo
call
mov
mov
aas
push
inc
pushf
ror
test
jmp
add
sub
xchg
add
xchg
cmps
push
shl
add
xor
jno
neg
daa
mov
and
push
jp
xor
fs
sub
dec
nop
ins
icebp
sub
cmp
aam
shl
loop
out
mov
mov
push
sbb
xor
repnz
imul
push
in
fist
dec
out
sbb
ins
push
inc
std
xchg
(bad)
pop
or
ja
xchg
retf
push
or
ja
inc
bound
jle
xor
xor
sti
pop
push
mov
rol
(bad)
jmp
xchg
cmc
push
and
ret
js
pop
je
mov
jle
push
jp
add
ja
adc
out
mov
xchg
or
(bad)
retf
cmp
call
inc
push
jo
pop
dec
pop
out
pop
fisub
inc
and
inc
push
std
mov
out
dec
xchg
sbb
xchg
sahf
mov
inc
pop
pop
dec
jmp
in
mov
sub
adc
mov
sub
retf
lea
enter
mov
lahf
mov
rol
leave
jne
inc
nop
mov
inc
int
in
das
mov
push
adc
cmp
mov
lahf
aaa
cwde
and
jmp
sar
or
mov
sbb
mov
test
shl
es
cmp
mov
dec
xor
stc
mov
stc
daa
mov
aaa
rcr
test
sub
aam
mov
add
pop
lahf
rep
sbb
mov
out
aad
test
inc
loope
or
ds
cwde
dec
inc
bts
pop
fnstcw
push
mov
call
pop
mov
push
or
cld
mov
cmc
inc
imul
pop
nop
mov
jle
js
and
sti
push
mov
retf
or
dec
inc
imul
sbb
(bad)
fst
out
mov
aam
addr16
cmps
rcl
loopne
push
cmp
sub
push
sbb
out
cwde
and
jno
add
add
and
or
(bad)
into
movs
popf
mov
push
and
and
adc
or
rcl
out
pop
mov
sbb
mov
jno
pop
mov
pushf
dec
in
sbb
adc
data16
xchg
imul
inc
sub
cli
sub
and
lock
in
sub
pop
push
movs
cld
cmc
retf
jnp
fld
sahf
jno
loope
fnstcw
gs
cmp
test
inc
xor
in
movs
pusha
mov
lahf
mov
and
add
icebp
push
mov
adc
xchg
lods
repnz
sub
gs
xor
js
xor
or
imul
js
cli
aad
push
jle
scas
lods
pop
mov
push
fiadd
mov
lods
sub
imul
push
cmp
scas
in
cdq
clc
jmp
(bad)
es
pop
fwait
call
test
pop
shl
in
js
pop
push
push
scas
js
mov
mov
mov
mov
pushf
jmp
mov
test
inc
in
mov
and
mov
or
add
pop
adc
cmp
sub
sbb
movs
xchg
xchg
pop
fnstenv
aaa
sbb
add
or
and
adc
pop
movs
mov
enter
addr16
add
movs
mul
ins
dec
in
stos
cmp
adc
arpl
mov
and
jmp
pop
sbb
shr
sbb
xlat
es
daa
mov
mov
inc
and
and
sbb
test
mov
retf
pop
pop
aam
icebp
xlat
outs
sub
aaa
pop
sbb
sbb
iret
jmp
and
mov
test
test
xchg
js
pop
jno
jb
push
sbb
mov
xor
outs
add
dec
sub
scas
mov
loop
adc
sbb
es
xchg
cmp
xchg
sti
jle
jb
add
ins
jmp
push
push
fwait
pop
ja
sbb
(bad)
adc
aad
jp
sub
cmc
aam
or
mov
pop
jle
jmp
jecxz
or
pusha
mov
nop
pop
(bad)
outs
les
loopne
clc
jb
mov
sahf
push
cs
xor
(bad)
je
xchg
popa
sub
stc
daa
int
stc
cli
gs
push
sbb
outs
push
aad
mov
fwait
adc
outs
outs
xrelease
outs
or
icebp
imul
push
lds
mov
cs
mov
pop
call
jge
cmp
mov
cmp
jmp
cld
fimul
stos
mov
outs
or
sti
aaa
cmp
stos
mov
xor
or
in
fsub
sub
das
add
std
mov
call
sbb
rcr
outs
add
arpl
inc
xor
mov
(bad)
out
loopne
dec
sub
int
les
cmp
adc
das
vpblendvb
into
iret
pop
mov
adc
cmps
mov
ins
mov
and
and
pop
inc
cwde
arpl
xchg
sub
icebp
push
mov
xchg
push
shr
out
dec
sub
outs
push
cs
xchg
out
sub
into
push
shl
ins
je
cmp
icebp
mov
sub
imul
or
jnp
in
repz
push
adc
dec
mov
mov
adc
data16
xchg
push
sub
pop
jns
pop
std
arpl
aam
lea
pop
cwde
daa
leave
fwait
pop
jmp
jbe
mov
mov
jnp
and
pushf
push
mov
cs
jns
in
push
bound
mov
sbb
and
fdiv
xlat
cli
jmp
dec
push
push
jge
mov
sahf
retf
shr
mov
sub
xchg
dec
clc
jns
push
pop
adc
fdiv
push
sbb
out
in
push
mov
enter
jp
arpl
stc
push
sbb
sub
repnz
(bad)
iret
cmp
test
sti
aas
in
imul
fadd
pop
cmp
mov
mov
and
mov
jns
sub
jl
ret
pop
(bad)
js
or
scas
ret
jnp
imul
pop
call
test
shl
inc
sahf
rcr
xor
lods
jmp
enter
mov
out
imul
fcomi
inc
pop
retf
cmp
test
lds
sbb
outs
mov
repz
add
or
push
push
sbb
lea
mov
lds
and
dec
jbe
aad
or
add
mov
jl
and
xchg
jl
add
call
jmp
fst
sar
clc
jo
add
nop
rcl
dec
int
icebp
cli
pop
xchg
sahf
push
pop
sbb
imul
xchg
cli
fistp
jl
das
cld
fisttp
ja
cli
sbb
fst
dec
add
outs
pop
shl
sbb
clc
popa
fdivr
pop
icebp
pop
div
and
push
(bad)
push
adc
xor
push
aad
imul
cdq
xchg
push
lock
call
(bad)
pusha
inc
in
ficomp
es
es
xchg
mov
fcmovb
dec
push
out
jecxz
ds
mov
aam
inc
add
sti
les
and
call
sub
cmc
jno
mov
arpl
mov
jecxz
cld
ja
in
mov
cs
xchg
push
jecxz
adc
lods
mov
xor
jecxz
lods
ds
loope
mov
(bad)
or
cmps
clts
push
cmc
xchg
rcr
je
sbb
fisttp
inc
imul
ror
mov
test
pushf
push
arpl
icebp
xchg
arpl
out
nop
adc
mov
and
inc
mov
leave
inc
jbe
movs
int
ret
stc
js
in
jmp
(bad)
movs
jbe
(bad)
push
jmp
cdq
jo
lea
sub
lods
mov
frstor
pop
adc
add
inc
in
or
shl
pusha
dec
push
mul
add
sub
aas
retf
popa
pop
push
lds
adc
pop
mov
sar
and
pop
pusha
test
gs
dec
popa
sbb
inc
mov
int
inc
movs
lds
stos
outs
jmp
mov
mov
movntps
jge
cli
xchg
push
dec
or
xor
cmp
xchg
mov
adc
stos
out
xchg
ret
out
mov
mov
js
lods
sahf
xchg
dec
inc
mov
add
(bad)
xlat
imul
push
and
out
mov
mov
int
fst
dec
dec
jecxz
push
shl
out
or
sbb
sbb
movs
dec
mov
mov
mov
adc
inc
dec
scas
popf
pop
and
jmp
rol
xchg
pop
sar
loopne
or
jae
mov
stc
push
xchg
jns
addr16
dec
add
and
rol
push
arpl
ja
xchg
pushf
repz
inc
inc
sahf
mov
cmp
jno
dec
fadd
ret
imul
lods
adc
sbb
and
fnstsw
sbb
adc
clc
stos
shr
cmp
arpl
into
sbb
pop
das
add
iret
leave
push
sub
aam
call
cmc
xchg
sub
iret
pop
jae
jmp
fwait
mov
jge
ret
sti
lahf
xchg
mov
xchg
cmp
and
cmp
and
cmp
mov
cmp
xchg
in
dec
jb
push
and
jns
mov
inc
dec
inc
mov
dec
xor
dec
jl
add
mov
xor
jb
jbe
xor
aaa
je
mov
jmp
or
or
dec
mov
mov
xlat
pop
sar
ret
dec
sub
or
int
or
mov
fild
mul
mov
addr16
aam
loopne
inc
jmp
and
std
daa
sub
jg
ds
push
mov
jnp
xor
(bad)
cli
inc
icebp
push
sub
jmp
or
or
test
inc
mov
push
repz
and
pop
mov
stc
dec
mov
mov
jl
jbe
jmp
mov
sti
das
cli
mov
sbb
mov
push
shr
cld
loope
pop
out
sbb
test
add
scas
xor
int3
push
and
pop
pop
adc
sub
pop
xchg
xor
test
rcr
adc
out
xlat
or
mov
cwde
adc
add
ins
lock
cmp
jns
push
fnstenv
mov
iret
lea
push
inc
cmp
retf
div
mov
mov
scas
js
cmp
(bad)
pop
arpl
sbb
add
mov
dec
iret
dec
lods
shl
mov
add
in
or
xchg
out
cli
inc
mov
(bad)
pop
or
fcom
add
jnp
sbb
add
pop
fmulp
out
xchg
ja
cwde
(bad)
fabs
dec
in
mov
adc
and
fsubr
retf
dec
arpl
mov
ror
fcom
sub
or
vmwrite
sub
icebp
xchg
fistp
xchg
push
popa
mov
stos
retf
loope
out
sub
imul
mov
xchg
bound
push
mov
fidiv
icebp
or
call
scas
pop
popf
loopne
ins
fmul
jbe
into
lahf
dec
js
add
mov
data16
hlt
push
call
push
and
lods
arpl
ror
ins
rol
ror
sti
xchg
(bad)
mov
cli
ret
and
cmp
add
fcomp
call
into
and
nop
and
fldcw
cwde
cmp
sub
sar
xlat
(bad)
mov
(bad)
test
mov
cmp
(bad)
mov
data16
imul
jg
fmul
in
test
jae
lods
push
lea
orps
fmul
push
les
mov
dec
add
adc
iret
or
push
dec
stc
add
into
dec
in
mov
daa
push
jb
gs
xchg
add
not
pop
pop
not
cwde
xchg
inc
mov
out
in
adc
adc
(bad)
out
add
mov
push
fisubr
inc
and
mov
(bad)
sub
(bad)
pop
add
mov
(bad)
fisub
loop
mov
push
stc
lods
and
stc
adc
sub
fstp
test
mov
fsubrp
hlt
xlat
mov
mov
loopne
pop
xlat
cmc
lods
push
daa
xchg
sub
daa
arpl
outs
in
mov
cmp
pop
add
cld
sbb
inc
sub
adc
jbe
dec
iret
idiv
inc
(bad)
and
(bad)
mov
add
data16
cmp
mov
(bad)
cmps
inc
call
xor
test
enter
mov
lods
std
and
test
stos
jmp
inc
mov
inc
cmps
idiv
add
mov
sahf
bnd
add
or
push
jns
jp
push
push
xchg
cmp
adc
xchg
mov
jle
xor
jno
push
xor
xor
es
into
jae
cli
jb
out
push
aaa
ror
adc
pusha
mov
inc
test
lea
inc
js
pusha
mov
je
sbb
and
inc
and
sub
inc
sbb
div
jbe
test
rcr
mov
adc
mov
mov
add
xchg
inc
cmp
push
lods
mov
hlt
add
frstor
int3
adc
dec
xchg
pusha
mov
rol
ds
mov
fld
mov
nop
sub
dec
imul
shr
push
jbe
dec
mov
pushf
es
lods
sbb
mov
call
push
cli
lock
outs
jnp
fidivr
pop
je
cmp
fild
pandn
xor
movs
in
fist
test
pushf
mov
clc
add
push
addr16
cmps
(bad)
push
and
xlat
xor
je
and
nop
dec
sub
adc
out
inc
mov
mov
mov
dec
ins
clc
xchg
out
ins
stos
retf
pop
mulps
sub
sar
push
add
xor
aad
gs
pop
(bad)
inc
(bad)
adc
mov
stos
jno
or
sub
push
sar
xchg
loopne
pushf
nop
add
into
jnp
sub
and
mov
mov
mov
mov
inc
sub
sub
int
imul
push
sbb
pop
loopne
mov
mov
fucomp
cmp
cmp
loopne
xchg
adc
pop
add
jmp
push
jo
mov
lods
jno
adc
and
outs
scas
add
jmp
or
dec
jae
inc
mov
ins
lods
or
adc
jnp
adc
push
std
xor
sbb
sub
cmp
lods
test
loope
lods
fmul
or
cdq
jnp
aad
sbb
dec
xchg
or
lock
cmp
cmp
cmp
(bad)
stos
xchg
jecxz
cmp
push
mov
add
pop
mov
rol
(bad)
jne
mov
call
mov
out
mov
and
ret
pop
sbb
pop
xor
sbb
push
jl
cmps
int
mov
mov
mov
rcr
jne
(bad)
pop
and
dec
push
sti
cmp
xchg
sub
adc
shl
cs
inc
cld
inc
mov
add
hlt
std
not
(bad)
cs
fs
mov
push
clc
in
xchg
enter
mov
ins
icebp
sub
xor
pop
and
cmp
jmp
xor
retf
bound
mov
gs
ja
inc
jl
mul
or
iret
or
je
mov
cmp
pop
push
dec
adc
in
addr16
hlt
xchg
dec
inc
dec
cmp
cmp
jae
jo
mov
ds
ret
int
mov
cdq
cmp
sahf
ja
ret
push
jb
push
outs
sub
cs
ja
and
mov
push
repz
xchg
stos
jl
mov
aas
stos
jnp
nop
out
jne
mul
arpl
inc
pop
sub
push
add
dec
in
out
add
mov
inc
frstor
push
xor
sbb
cli
adc
and
dec
out
jecxz
jge
ret
xor
ds
(bad)
fs
sbb
scas
mov
xor
fcom
js
aaa
div
loopne
and
inc
jne
or
fwait
in
ins
icebp
test
jae
cmp
jmp
xchg
pop
sub
stos
aas
adc
pop
and
jno
(bad)
sahf
fnstenv
gs
int3
test
xchg
ficom
and
pop
test
int
ins
cld
cmps
mov
das
sbb
pop
into
mov
cmps
pushf
push
mov
inc
xor
bound
lods
or
sbb
into
scas
call
mov
mov
jge
movs
fnstenv
lods
jl
or
loopne
inc
push
xchg
mov
jmp
and
or
pop
cmps
fidivr
daa
mov
jbe
sub
scas
pop
xor
pop
xchg
mov
(bad)
sub
pushf
daa
mov
fild
call
scas
mov
xchg
fisttp
push
pop
std
lea
pop
data16
repnz
test
(bad)
popf
jnp
mov
pop
std
test
lahf
jp
cdq
sahf
push
and
sbb
dec
sbb
test
into
mov
int
cdq
inc
pop
lds
jmp
test
dec
out
retf
int
shr
cmp
les
inc
test
inc
ins
fcmovnb
mov
sub
out
mov
test
and
push
push
mov
push
inc
mov
push
mov
pusha
mov
pushf
jg
xor
repz
sar
cmovnp
aad
mov
xchg
mov
adc
mov
fwait
pop
dec
les
(bad)
in
aaa
xchg
pop
mov
nop
aad
push
pusha
es
int3
inc
mov
sbb
xchg
inc
cmp
lahf
sub
cwde
pushf
aas
imul
sub
sub
jns
leave
mov
sbb
test
dec
shl
pop
push
mov
inc
push
imul
out
sbb
add
sub
pop
xchg
cld
or
sub
sub
sbb
imul
mov
icebp
or
pop
retf
jbe
jle
or
enter
dec
dec
inc
mov
mov
icebp
mov
mov
jle
jmp
lods
dec
scas
cmps
xor
(bad)
rcl
inc
iret
jg
je
push
inc
jecxz
mov
sbb
jmp
or
aaa
das
and
outs
out
ins
aas
das
add
arpl
iret
daa
pushf
sub
xor
cmp
push
push
mov
repz
aam
repnz
xchg
cmp
pop
dec
sbb
clc
pop
fnstcw
fnsave
adc
sbb
push
pop
cmp
icebp
cmp
addr16
pop
or
jle
sub
sbb
sti
das
mov
loop
mov
ins
cwde
cmp
ret
and
push
das
sti
addr16
sbb
jne
pop
aad
fcom
mov
(bad)
adc
fs
jno
add
adc
cmp
fnstsw
sub
cmps
adc
fst
xor
or
(bad)
cmp
sub
out
popa
mov
jle
in
sub
into
jg
dec
jecxz
cmc
jp
mov
test
loopne
or
pop
sbb
fistp
jge
ja
inc
mov
mov
add
push
dec
ror
push
mov
mov
sbb
pusha
mov
pop
or
xchg
or
mov
dec
sti
fistp
pop
aas
or
cmc
mov
(bad)
test
mov
add
call
or
ror
(bad)
enter
sbb
dec
cs
addr16
into
mov
push
push
xchg
and
mov
add
(bad)
call
adc
mov
pusha
push
(bad)
mov
push
(bad)
add
jmp
push
repnz
psubw
outs
adc
ds
pop
jns
cli
out
jo
mov
cs
sub
mov
aad
hlt
out
inc
outs
and
fisubr
ins
aas
gs
cwde
hlt
stc
lods
pop
stc
push
adc
clc
iret
(bad)
jl
or
ins
xor
movs
cmp
mov
dec
xchg
dec
clc
imul
xchg
int3
jmp
retf
and
xchg
xor
cs
push
sbb
mov
push
in
push
jecxz
dec
loop
or
xor
out
movs
and
dec
int
ins
loope
sbb
mov
mov
push
inc
mov
mov
pop
fdivr
push
dec
fcmovnbe
inc
push
mov
add
out
or
xchg
test
cwde
stc
or
sub
shr
shl
push
arpl
jbe
rol
push
je
pop
jae
out
js
sbb
gs
xor
mov
jp
jge
adc
aam
mov
inc
jmp
xor
cli
lock
pop
pop
lock
pop
jecxz
sub
or
adc
test
outs
cs
test
cmp
mov
push
jnp
test
je
inc
mov
add
dec
inc
pop
jmp
and
pusha
push
loop
les
aad
xchg
cmp
mov
loop
ja
jle
js
inc
sbb
jmp
fwait
ret
out
jnp
dec
adc
stos
cmp
mov
lgs
and
cmp
xchg
out
adc
(bad)
out
jno
int
xchg
neg
fimul
xor
cmps
xchg
gs
mov
in
scas
and
mov
xor
shr
in
add
xor
retf
pop
sub
popf
dec
mov
aam
std
pop
mov
dec
xor
push
mov
jmp
hlt
sbb
xor
movups
mov
test
je
stos
pop
je
fs
fnsave
sub
leave
aaa
pop
jne
mov
jb
or
jp
outs
(bad)
lds
push
mov
into
std
jo
dec
xchg
jp
push
mov
xchg
add
cmc
out
cmps
cmp
sbb
cmps
add
in
pop
lahf
pop
in
call
or
je
push
fld
pop
jb
pushf
push
pop
xchg
dec
fcmovne
pop
dec
dec
or
out
fmul
jmp
out
inc
push
in
pop
mov
stos
mov
cmc
mov
leave
out
add
mov
push
nop
and
pop
add
pop
stos
ret
sub
push
fsubr
movs
repz
mov
push
adc
mov
(bad)
iret
pop
cmp
fnstsw
aam
es
cmp
adc
jg
mov
(bad)
pop
sbb
daa
addr16
fcom
fisttp
mov
mov
pop
in
add
or
lds
(bad)
call
sahf
pop
pop
xchg
push
les
leave
push
es
push
(bad)
cli
enter
ds
xor
push
icebp
test
rcl
sti
in
bound
or
bound
fistp
jbe
ror
cmp
fwait
clc
stos
dec
imul
test
dec
fs
out
and
xor
lea
xchg
clc
js
in
les
cld
int
rep
and
leave
(bad)
in
mov
add
fisub
std
or
stos
aam
movs
imul
sahf
mov
(bad)
out
cmps
push
div
xchg
xor
fst
mov
sahf
push
xchg
leave
aam
inc
mov
adc
inc
add
mov
and
(bad)
mov
or
test
repz
in
jno
out
sti
xchg
adc
add
inc
out
push
int
push
movs
cmp
mov
sbb
cld
cmps
xchg
in
add
and
enter
inc
jecxz
outs
pusha
shl
cmp
clc
test
push
and
pop
stos
or
stos
dec
mov
add
add
ret
daa
pusha
xlat
cmp
fimul
jl
popf
jmp
jno
push
sub
sub
or
xchg
push
jae
(bad)
jne
cmp
cdq
add
push
pushf
cwde
push
stc
int3
imul
mov
dec
movs
mov
mov
and
sbb
out
mov
outs
neg
int
ret
stos
adc
je
int3
test
xchg
les
inc
or
mov
lahf
shl
(bad)
jg
popa
rcr
int
push
popf
shr
call
and
call
and
sbb
push
stos
or
fisub
pop
lahf
jns
stos
sar
push
push
push
pop
mov
gs
adc
dec
jmp
fsub
mul
mov
movs
gs
ret
daa
and
mov
adc
dec
mov
out
in
pop
jmp
fs
out
and
in
test
lock
fmul
or
xchg
cmp
dec
jno
fidiv
in
jns
(bad)
xlat
adc
cmp
add
fdivr
clc
push
cmps
stos
retf
xlat
push
jns
sar
(bad)
test
push
mov
jb
xchg
jnp
mov
mov
(bad)
daa
shl
addr16
ds
pop
mov
clc
pop
push
aas
cs
fwait
cli
jns
aam
movs
jl
jle
test
mov
jo
lea
leave
mov
mov
je
call
inc
popf
or
push
ret
dec
mov
jge
xchg
pop
mov
xor
mov
mov
cmp
sub
lods
jl
das
and
rcr
in
aad
mov
ret
test
popa
fild
xor
shl
dec
xchg
scas
dec
nop
retf
mov
scas
mov
add
or
inc
fs
test
(bad)
data16
adc
cmp
xor
push
mov
rcr
mov
outs
mov
mov
pop
movs
addr16
inc
jg
aam
jb
cmp
cmps
mov
fs
sub
mov
xlat
jo
adc
cmp
sub
mov
pop
aad
cmps
and
mov
les
and
pop
pop
mov
shl
repz
pop
mov
pushf
je
mov
adc
repz
shl
addr16
(bad)
mov
xor
dec
or
fstp
push
xlat
sbb
clc
gs
cs
shl
(bad)
int
mov
adc
xchg
jae
mov
cmp
mov
dec
(bad)
adc
sbb
sar
cmp
sbb
dec
fild
icebp
and
fucomp
scas
je
jne
cmp
or
and
sub
fnstsw
sub
lock
loopne
sahf
pop
(bad)
sbb
mov
out
lock
cwde
mov
jnp
leave
ins
cmp
sti
pop
setp
test
mov
mov
jae
mov
xor
xchg
pop
scas
sti
cs
ds
loope
add
push
cmp
jg
(bad)
sbb
pop
push
inc
xchg
cmp
cld
adc
pusha
aas
sub
mov
aas
mov
aad
jne
sub
push
es
aam
pop
fstp
xchg
push
dec
ret
or
scas
pop
lahf
and
sbb
enter
std
add
neg
es
push
push
jp
jne
jmp
das
jmp
and
nop
inc
push
inc
leave
adc
sbb
out
aas
fadd
gs
mov
add
mov
or
push
mov
cwde
mov
dec
ds
std
mov
lds
xchg
push
push
xor
mov
mov
leave
xor
enter
cld
popf
push
lods
ins
aad
ja
(bad)
cmps
shl
cmps
popf
sbb
int3
jmp
js
clc
mov
popa
pusha
mov
mov
rcr
sahf
push
jae
mov
cli
mov
fnclex
inc
pop
jb
mov
xor
ret
cmp
cmp
inc
pop
sbb
arpl
or
sbb
cwde
cmp
jp
inc
cld
cmp
adc
out
push
and
jge
rcr
mov
inc
shl
pop
sub
es
dec
leave
adc
push
call
and
adc
shl
sub
ja
push
ds
fdiv
and
pop
push
add
sub
cmp
mov
mov
dec
in
inc
push
pop
cmp
mov
push
and
fst
popf
mov
hlt
pop
sbb
sbb
mov
add
lahf
or
push
mov
mov
jnp
sub
into
arpl
cmc
xor
sub
pop
xchg
mov
dec
daa
lea
lods
cmp
dec
rol
mov
fst
mov
shl
inc
cmc
push
inc
ret
mov
popf
sbb
inc
pop
sti
jmp
fist
xor
inc
jmp
mov
aad
call
icebp
mov
xchg
dec
xchg
mov
sbb
in
pop
xor
xor
xchg
setge
pop
sub
lock
lods
fistp
jle
les
ret
mov
out
mov
sub
push
cmp
ss
scas
js
in
push
mov
dec
xchg
push
jmp
repz
idiv
jo
mov
fmul
loop
add
iret
out
cmp
aad
scas
xchg
mov
sub
push
data16
sbb
leave
out
repnz
jo
and
fld
mov
dec
ins
repz
jne
cmp
sub
push
repnz
jae
or
int3
jecxz
iret
adc
dec
xchg
jns
mov
hlt
aad
aam
push
push
push
adc
retf
arpl
xchg
xchg
out
fucomi
adc
ss
loope
icebp
or
outs
cld
out
cmp
sub
jne
rcr
pop
es
popa
stc
pop
sahf
mov
or
or
fisttp
js
mov
pop
pop
sub
mov
addr16
imul
sar
loopne
repz
fnstcw
mov
pusha
inc
mov
icebp
push
out
into
xchg
aam
hlt
xchg
push
inc
mov
clc
das
out
ss
add
shr
pop
xor
pop
std
or
out
bnd
mov
push
test
inc
fwait
xchg
lds
jmp
cmp
dec
push
cli
pop
sar
jmp
push
clc
xchg
adc
vmovq
(bad)
ds
int
out
or
addr16
cmp
fs
xchg
loope
push
mov
xchg
(bad)
mov
pop
cli
ret
pop
gs
xchg
bound
xchg
mov
mov
repz
jge
mov
mov
int3
jmp
push
stc
add
pusha
shl
mov
sub
push
shr
popf
and
jle
mov
popf
pop
movs
or
jmp
ins
jnp
fistp
jo
into
cmps
idiv
lea
dec
popf
pop
out
(bad)
cs
aas
xchg
bound
mov
lahf
gs
rol
(bad)
icebp
sub
push
fadd
jecxz
push
in
mov
pop
inc
rol
rol
scas
jmp
cwde
jge
mov
(bad)
dec
fwait
int3
pusha
add
shr
xor
jne
sub
xchg
xchg
push
jle
jge
push
scas
mov
mov
jmp
pop
jns
imul
mov
xchg
jmp
sbb
cmp
inc
jbe
cmp
jmp
pause
add
fld
cmp
jb
sub
lahf
cmps
dec
retf
mov
hlt
xchg
loope
xchg
dec
adc
loop
adc
rol
add
movs
cmp
shl
push
lods
psubusw
movs
sahf
push
das
fcom
nop
sub
adc
xchg
pop
adc
fidiv
dec
mov
leave
lods
outs
push
ror
mov
xlat
sub
lods
push
sbb
test
or
jp
mov
dec
pop
std
jmp
lock
mov
js
push
addr16
xor
pop
mov
jmp
mov
in
imul
jg
inc
sub
push
(bad)
sub
cmp
and
inc
popf
shl
pop
add
imul
in
push
and
mov
xchg
aam
jnp
push
nop
xchg
add
xor
jg
test
cmp
add
fs
out
test
lods
cwde
(bad)
cmp
xchg
outs
aam
pop
cld
fsub
xchg
test
inc
fmul
inc
ret
cmc
sbb
sbb
push
jl
pop
sub
inc
in
adc
xor
test
ret
add
pop
test
pusha
cmp
int
movs
or
adc
(bad)
aaa
imul
dec
cmps
pushf
jnp
je
jbe
mov
pop
or
sub
sbb
mov
ins
xchg
xor
inc
push
imul
sub
jae
sbb
retf
push
xor
mov
xor
xor
xor
or
adc
fistp
(bad)
inc
jp
fmul
or
sbb
mov
push
xor
mov
scas
loopne
mov
xchg
int
jl
int3
ins
push
(bad)
arpl
stc
xor
jae
loope
mov
test
jmp
dec
sbb
loop
sbb
push
push
stc
or
pop
stos
adc
jl
and
push
gs
sbb
sbb
test
retf
push
push
fwait
push
popf
sub
mov
inc
test
or
xchg
and
call
icebp
dec
popf
int
lea
(bad)
or
mov
sbb
mov
sbb
xchg
cwde
inc
(bad)
std
inc
push
mov
push
mul
xor
rol
push
jmp
test
jl
fiadd
jmp
movs
popa
mov
mov
sbb
gs
enter
std
loopne
xlat
fldz
js
mov
jb
sbb
fmul
fwait
call
ret
sti
imul
xor
inc
retf
dec
repz
loopne
stos
aas
fcomp
push
daa
out
sbb
les
xchg
add
xchg
ret
pop
or
test
mov
jle
movs
cli
pop
dec
xchg
js
les
aam
dec
sbb
fld
pop
maxps
add
aam
pop
mov
not
push
add
jnp
shr
cmc
lods
push
loopne
aad
sahf
scas
mov
into
outs
xor
movs
mov
adc
cmp
add
cmp
lds
sub
out
xor
sub
jmp
int3
pop
sbb
xchg
inc
dec
outs
in
shl
psubw
xchg
xor
jle
sar
push
dec
nop
les
(bad)
pop
inc
jecxz
mov
adc
push
sub
icebp
test
inc
mov
push
ja
stos
push
stos
sbb
std
mov
ins
dec
into
inc
fs
mov
mov
sbb
xchg
mov
push
(bad)
jecxz
daa
xchg
(bad)
mov
mov
in
(bad)
cli
push
lods
push
stos
sbb
xchg
lahf
cwde
hlt
ss
div
sar
push
div
jge
sbb
xchg
push
outs
movs
xor
mov
out
jno
cli
mov
or
jbe
imul
test
push
inc
mov
dec
xor
mov
push
std
stos
jp
pusha
mov
add
aas
(bad)
cmp
arpl
pop
jae
sbb
outs
and
mov
icebp
inc
scas
ja
daa
movs
(bad)
dec
ror
outs
and
out
add
cmc
scas
push
ficomp
out
inc
mov
ds
not
movs
pop
lds
repnz
fisub
jle
inc
sbb
xchg
inc
mov
xor
shr
push
inc
test
xchg
cmps
jno
pop
ficom
fst
loope
pop
repnz
mov
xor
or
fwait
and
hlt
ret
and
jbe
or
sub
inc
adc
fwait
rcr
push
pop
pop
add
fild
sti
xchg
jl
sub
or
shr
cmc
and
std
mov
mov
add
jl
retf
cmps
fs
or
ins
push
movs
iret
xor
jmp
gs
retf
mov
mov
adc
jb
xlat
mov
popa
xchg
adc
(bad)
cmp
jne
dec
lods
inc
scas
cmp
pusha
ja
jne
movs
or
cmc
mov
cwde
psrlq
in
pop
jmp
lods
daa
aas
imul
loopne
jmp
adc
push
sbb
addr16
cmps
loope
bound
aaa
or
jge
mov
or
aaa
sbb
jnp
shr
inc
mov
jp
rol
inc
movs
add
add
clc
jno
jle
(bad)
sbb
and
or
adc
das
pop
sahf
push
or
jg
cmc
ins
sbb
pop
dec
jp
icebp
pfsubr
adc
sbb
test
out
inc
enter
test
jmp
dec
mov
lods
test
pop
sahf
sbb
das
popf
mov
sub
push
jnp
mov
or
push
lds
movs
sbb
push
sahf
and
lods
inc
cli
imul
xor
sbb
xor
les
mov
push
xor
adc
(bad)
daa
das
das
add
repz
nop
(bad)
push
inc
jmp
mov
int
(bad)
(bad)
call
mov
bound
pushf
retf
fstp
or
and
mov
xor
sub
pusha
ret
stos
ja
das
sub
pop
in
add
sub
dec
add
ins
push
lock
xchg
push
cmc
xchg
lahf
addr16
pop
inc
mov
xchg
inc
int
in
cdq
push
jno
cmp
mov
inc
ja
es
mov
pusha
or
repz
lods
movs
fsub
mov
mov
add
mov
popf
out
jo
mov
movs
outs
or
jle
xchg
idiv
push
adc
xchg
bnd
rcr
push
push
es
movs
dec
adc
add
repz
outs
mov
or
out
fldl2e
and
int
pop
sahf
test
mov
int
xor
jmp
xlat
mov
inc
stos
inc
das
mov
rol
(bad)
in
jnp
xor
movs
(bad)
jnp
xchg
fistp
adc
add
aaa
call
les
mov
cmc
mov
pop
push
popf
mov
mov
(bad)
pop
iret
sahf
lods
lods
sub
pop
pop
int
vsubss
cmp
inc
dec
nop
mov
jns
loopne
cmp
aad
fiadd
jne
outs
inc
movs
sbb
sar
xchg
xchg
cmp
bound
mov
mul
or
sbb
scas
push
jg
pop
(bad)
sbb
or
mov
in
lods
push
push
idiv
sub
aas
push
cwde
inc
and
aaa
repz
(bad)
xchg
xlat
repz
jmp
sub
retf
pop
jecxz
or
cmps
cmp
popa
stos
into
aas
lods
ds
jl
shr
cmp
pop
fdiv
int3
cwde
cmp
push
mov
or
push
mov
xchg
ror
push
cmp
pop
mov
inc
pop
xor
xor
lock
imul
pop
dec
pop
inc
cmp
cmp
les
popa
xchg
cmp
fld
push
mov
or
xchg
or
jns
mov
ins
repz
jns
or
inc
mov
ins
jnp
(bad)
aas
sar
xor
xor
jbe
int
outs
dec
jle
xor
je
sub
push
mov
sub
xchg
out
sub
and
xor
push
mov
fnstcw
push
shr
sub
sub
add
movs
mov
mov
mov
jmp
rcl
sbb
icebp
in
fbld
imul
ja
mov
or
lahf
sub
test
mov
test
loope
push
push
sbb
mov
mov
xchg
pop
or
mov
mov
push
sbb
inc
stc
adc
sub
popa
sub
xchg
push
mov
mov
outs
xchg
sar
jbe
mov
lahf
push
push
xchg
cmp
and
in
or
pop
jmp
stos
(bad)
mov
mov
sbb
ret
shr
jae
daa
lods
xchg
push
pop
in
shl
test
or
add
push
aas
adc
push
mov
jp
adc
frstor
push
and
or
outs
xchg
test
test
fs
push
jo
mov
sub
aas
mov
nop
cli
je
sub
rcr
mov
push
jmp
nop
hlt
jmp
cli
scas
mov
mov
cli
shl
and
inc
lahf
add
push
stos
push
push
push
hlt
push
and
std
pop
xchg
or
popa
mov
test
dec
movs
sub
mov
sar
xor
or
push
shr
out
cdq
(bad)
lds
movs
mov
fs
push
add
popf
mov
push
xchg
jb
push
(bad)
and
fldenv
test
stos
sbb
dec
std
ss
mov
and
fwait
shr
xchg
push
and
test
lahf
test
(bad)
adc
scas
aas
loope
cmp
mov
cmp
inc
cmp
mov
dec
fwait
push
lea
jbe
inc
push
mov
les
jp
sar
imul
sbb
ja
cli
leave
sub
push
inc
or
(bad)
jge
stos
dec
jl
add
cmps
xor
sbb
pop
sub
mov
inc
into
fs
pusha
cmp
mov
mov
jmp
les
pop
pop
adc
les
lahf
div
push
jo
ins
cmp
adc
ficomp
pop
jbe
adc
test
(bad)
outs
ret
jl
popa
push
pop
xchg
into
or
aad
sub
aad
popf
les
fisttp
pop
mov
push
icebp
imul
sub
ficomp
xor
stos
sub
xchg
imul
scas
repz
clc
cmp
int
jmp
or
push
pop
jge
adc
repnz
imul
bound
push
sub
out
nop
and
(bad)
mov
cmc
sahf
call
cmps
dec
sub
pop
add
mov
adc
cmp
fs
add
pushf
rcl
hlt
call
xor
and
lods
test
add
fcomp
xchg
(bad)
faddp
mov
sar
int
cmp
int3
pop
cmp
ret
in
pop
and
js
aas
loope
xchg
jmp
jb
sub
stos
jl
sahf
int
ins
outs
rol
mov
cld
stos
ins
fcomi
sbb
lock
in
mov
dec
pop
mov
xchg
xchg
(bad)
bound
scas
popa
(bad)
pusha
aam
cmp
shr
mov
pop
or
adc
sbb
cmp
jae
jmp
stos
test
hlt
mul
aas
and
add
loope
jg
jae
xor
shl
mov
and
repnz
ja
mov
fimul
add
sbb
inc
lea
loopne
daa
lock
xchg
sub
enter
xor
xor
stc
stos
jecxz
xchg
in
jmp
cli
fisttp
movs
ret
sub
outs
pop
call
mov
clc
movs
imul
or
cmp
add
adc
rcl
and
and
push
sbb
out
imul
rcl
jge
pop
add
xor
stos
cmp
jg
jnp
std
jb
adc
(bad)
outs
loop
lea
xor
xlat
cmp
out
aad
adc
mov
pop
push
add
cwde
inc
outs
shl
rol
and
cmp
jmp
cwde
pusha
xchg
dec
arpl
or
std
jmp
cmp
sub
inc
icebp
lods
xchg
add
xchg
dec
loop
jae
jl
xor
shl
pop
push
mov
es
sub
pop
(bad)
pop
cmps
call
sbb
pop
movs
pop
(bad)
movs
pop
sub
pushf
xor
push
inc
xchg
xor
xor
dec
cmp
stos
daa
out
sbb
ret
(bad)
call
out
int3
js
imul
push
mov
adc
cmp
inc
lock
ja
popa
ja
mov
mov
loop
dec
xchg
iret
push
int3
addr16
leave
add
call
movs
sbb
xor
jne
retf
fdiv
jp
pop
and
call
mov
loopne
push
mov
inc
xlat
lahf
cli
sbb
mov
adc
aas
sbb
das
iret
sub
mov
lock
mov
test
push
outs
call
ins
call
ret
fadd
out
out
fwait
mov
adc
adc
pop
jnp
mov
push
aaa
ss
loop
pop
movs
mov
mov
add
fs
in
push
jmp
dec
mov
popf
fwait
test
lahf
fidiv
inc
push
gs
cs
lds
and
cli
test
(bad)
xchg
pop
dec
pop
xchg
push
pop
jp
or
sub
fbstp
push
push
int
sbb
jmp
in
pop
adc
in
loopne
pop
sbb
imul
js
mov
iret
and
pop
clc
mov
pop
mov
ss
out
dec
gs
outs
(bad)
(bad)
mov
lea
ds
xlat
aad
fisttp
aad
test
js
sbb
scas
cmp
outs
mov
repnz
and
aam
sbb
or
push
mov
pop
fisubr
es
enter
ins
and
leave
fwait
jmp
fsubr
xchg
mov
test
cmp
popa
xchg
mov
adc
mov
arpl
push
es
in
pop
add
mov
data16
and
popf
ret
push
jmp
pop
std
cld
loope
add
xor
pusha
or
jo
rcr
cmp
ins
add
mov
mov
mov
cld
mov
pop
jmp
or
xlat
xchg
fdiv
and
dec
and
popa
add
frstor
mov
xor
cmc
sub
aaa
cmc
push
adc
ins
sbb
mov
pop
lds
and
xchg
or
cmp
mov
adc
mov
sub
lahf
add
add
push
cmp
daa
push
and
loopne
outs
push
mov
outs
jg
sub
mov
out
pop
and
push
sub
adc
std
stos
out
jbe
push
sbb
mov
pop
mov
sbb
into
pop
xor
div
or
nop
imul
std
mov
cmp
mov
inc
jmp
add
scas
imul
out
adc
xchg
dec
nop
(bad)
xchg
mov
mov
out
sbb
xchg
mov
out
fdiv
cs
xchg
loope
(bad)
xor
(bad)
retf
and
xchg
xchg
leave
pusha
sar
jecxz
out
pop
mov
in
jno
xor
or
dec
(bad)
sub
ins
mov
push
popa
adc
rol
dec
call
daa
ja
push
lds
loope
adc
aas
mov
fdivr
or
add
jmp
push
pop
jmp
jg
repz
enter
repz
pop
nop
push
outs
dec
mov
mov
jb
push
imul
nop
in
ins
jg
sahf
je
fdivr
fcom
push
gs
cmp
ja
addr16
hlt
cmp
jb
or
jmp
aad
or
and
ret
mov
psadbw
jmp
pushf
dec
xchg
int
dec
addr16
and
stos
mov
inc
fadd
addr16
jmp
fcmovb
pop
fild
mov
cmp
js
mov
xor
adc
mov
xor
mov
jo
neg
ins
add
ds
not
popa
data16
jmp
test
loop
and
stos
test
dec
(bad)
adc
retf
add
in
cmps
push
arpl
pop
xchg
jno
pushf
mov
bts
jl
loope
repz
add
sub
xchg
pop
aam
rcl
sub
jnp
pusha
scas
das
rep
pop
loope
rcl
mov
xchg
sub
test
stc
cmp
sub
addr16
inc
dec
adc
mov
sbb
xchg
sbb
jne
jg
pop
cmp
test
push
push
xor
mov
sub
sub
adc
jb
dec
(bad)
lfs
add
pop
scas
cwde
in
call
mov
mov
ins
xchg
lods
sub
std
and
sub
inc
pop
arpl
push
jge
and
add
(bad)
mov
shl
pop
in
add
rol
dec
iret
mov
shr
(bad)
pushw
aaa
les
shr
outs
scas
shr
scas
inc
push
push
adc
cmp
inc
mov
shr
pop
repnz
mov
push
add
push
push
aad
test
xor
or
shr
push
aas
in
ds
jns
and
push
or
shr
inc
mov
jg
mov
xchg
jo
and
mov
jecxz
imul
adc
ds
push
push
sbb
push
call
jb
cli
add
adc
dec
push
jbe
mov
dec
out
rol
out
mov
or
fs
test
adc
push
mov
iret
add
xor
sbb
sbb
dec
fcmovnbe
fidivr
push
jae
jg
js
ins
(bad)
in
fcmovnb
add
push
mov
dec
pop
push
sti
dec
cmp
push
inc
scas
lods
inc
sub
stos
dec
sbb
xor
pandn
dec
movs
jl
fsubr
out
and
mov
inc
add
movs
cmp
mov
cwde
mov
popa
cmps
cmp
lds
data16
(bad)
cmc
jbe
out
mov
movs
cmp
cmps
je
cwde
mov
daa
inc
or
aaa
scas
push
inc
adc
jmp
loope
xchg
cmc
call
aam
xchg
xor
lahf
mov
rol
push
(bad)
sub
loope
cmps
sub
add
shl
test
jae
loope
sbb
xchg
and
lods
inc
js
cmp
pop
cmp
mov
adc
sbb
movs
dec
rcr
stc
inc
repnz
dec
imul
adc
add
xchg
jl
mov
popa
jmp
mov
mov
mov
mov
inc
mov
cmp
es
retf
(bad)
dec
or
dec
mov
adc
and
dec
jbe
shr
scas
xchg
jp
pop
pushf
scas
into
enter
jns
xchg
cmc
inc
js
and
mov
jns
std
popf
and
scas
dec
pop
xor
dec
xor
daa
fs
or
imul
pop
pop
xchg
mov
lock
lahf
(bad)
repnz
jo
jecxz
addr16
cmp
je
lods
in
shl
mov
jge
sbb
loop
xlat
dec
stos
push
jae
pop
inc
inc
or
ficom
shl
stos
outs
push
scas
int
pop
cmp
bound
add
das
xor
das
add
aas
(bad)
popa
mov
inc
push
cmps
dec
(bad)
inc
cmps
adc
aad
dec
call
lds
lahf
movntq
and
add
das
and
ds
repnz
and
xchg
mov
pop
push
loopne
lods
addr16
outs
jb
(bad)
ss
aad
mov
icebp
ret
xor
inc
imul
mov
pop
and
sub
imul
jp
jno
dec
push
adc
mov
cs
push
dec
or
stos
xchg
push
or
sub
jmp
addr16
je
pop
loop
xor
clc
ficom
ret
mov
add
lods
mov
sub
icebp
(bad)
add
push
inc
and
pushf
or
cs
add
jle
aas
call
sub
xor
push
dec
and
mov
(bad)
sub
push
lahf
pop
jb
mov
test
sbb
add
push
and
adc
pop
or
pop
xor
push
sbb
sbb
jb
or
ja
repz
jns
test
add
pop
aas
stos
sbb
loope
mov
lods
dec
rcl
sub
add
xor
mov
stc
jnp
loope
push
cmc
pop
(bad)
lock
ins
test
xchg
bound
pushf
add
(bad)
jg
push
inc
or
mov
dec
inc
repnz
add
retf
jo
loope
fidiv
xchg
xor
cmp
cmps
into
add
xchg
(bad)
and
adc
imul
nop
or
adc
pop
jge
aam
add
mov
arpl
cmp
repz
fisub
in
pusha
sub
adc
in
ret
mov
dec
mov
jns
stos
mov
xor
outs
ins
ror
pop
ror
jo
fstp
or
iret
pop
adc
dec
sbb
adc
mov
adc
daa
mov
mov
movs
int
stos
inc
xchg
and
scas
or
shl
out
ja
xchg
dec
cld
sbb
mov
(bad)
mov
mov
or
inc
mov
push
sub
out
mov
mov
mov
adc
ins
push
loop
jmp
sub
lea
loope
leave
cmp
mov
adc
pop
pop
lods
sub
ss
out
arpl
sbb
push
xchg
xchg
inc
fstp
hlt
adc
mov
inc
jmp
inc
push
loopne
sub
jbe
sbb
test
loop
iret
sti
iret
out
xor
mov
test
mov
hlt
pop
pop
mov
leave
sbb
mov
or
jns
pop
jnp
mov
push
jbe
lods
movs
xchg
jnp
pop
inc
lds
sub
into
cmp
cmp
adc
out
fs
repnz
cmps
in
inc
ins
in
mov
jne
push
cmp
(bad)
and
mov
and
int
cmp
out
loop
push
daa
mov
inc
pop
enter
jnp
dec
ret
loopne
jecxz
pop
lods
dec
add
call
std
neg
mov
cld
mov
sbb
inc
jb
mov
inc
dec
mov
ja
adc
mov
and
out
daa
and
pop
inc
neg
inc
repnz
loop
pop
jno
cmp
movs
push
mov
xor
push
cli
icebp
and
cmps
adc
loop
xor
pop
outs
cld
push
ret
hlt
add
dec
sub
add
into
arpl
pop
push
scas
cli
and
adc
stos
repz
outs
cmp
push
fdiv
xchg
std
xchg
imul
mov
jne
clc
xor
mov
xchg
jne
and
enter
lods
out
ret
hlt
outs
sbb
and
jle
pop
cli
xchg
add
retf
mov
pop
xor
dec
(bad)
cmc
mov
pop
imul
das
ins
xor
inc
loop
es
das
ret
push
leave
outs
push
dec
lea
gs
(bad)
cld
jne
xlat
xor
inc
xchg
or
mov
shl
pop
out
test
xchg
or
cmp
and
pop
jmp
cmp
test
retf
jae
and
ds
jle
scas
ja
loope
movs
retf
out
mov
lea
inc
mov
jmp
jo
pop
enter
dec
mov
lahf
sbb
or
xchg
adc
sub
cmp
popa
push
rol
sub
jle
out
cli
int3
xchg
xor
mov
cmps
cs
xchg
jne
in
das
add
fbld
cmp
and
pop
jns
cmc
lea
les
or
mov
push
iret
pop
in
ret
mov
adc
inc
aas
mov
mov
mov
or
clc
(bad)
cld
pushf
mov
pop
les
mov
pusha
jmp
iret
cmps
aad
int3
xor
lods
movd
shl
outs
xchg
ja
cmp
lahf
dec
adc
retf
push
adc
inc
xor
cwde
shl
dec
mov
and
int
aad
or
xchg
push
aas
push
fwait
xor
sbb
dec
icebp
xor
std
sti
mov
ins
dec
mov
pop
xor
retf
jle
sbb
jb
mov
cmc
and
mov
movs
or
push
rcr
sub
dec
fimul
idiv
mov
(bad)
push
or
std
inc
push
stos
imul
mov
test
cmp
mov
dec
out
test
push
cmp
adc
xchg
pusha
mov
cmp
adc
cmps
aaa
inc
cmp
ins
pop
into
inc
inc
nop
les
pop
push
inc
or
int
fcomp
cmp
jns
pusha
push
lahf
data16
pop
mov
mul
push
fistp
addr16
xor
(bad)
(bad)
mov
push
aas
sar
jg
pop
rcr
sbb
les
or
jbe
paddusw
int
pop
pop
sbb
(bad)
cmp
dec
jge
js
sbb
mov
fstp
movs
or
fnstcw
and
sub
fisttp
mov
mov
icebp
mov
push
add
lods
sub
inc
daa
retf
stc
repnz
add
or
call
loop
outs
cdq
scas
clc
aas
les
mov
push
fnstcw
pop
xchg
(bad)
jo
xchg
ja
mov
stc
out
gs
out
cmp
push
test
(bad)
das
mov
push
mov
stos
xchg
loop
or
(bad)
fst
sar
xchg
sar
xchg
ins
test
mov
sub
sbb
pop
addr16
fstp
and
retf
sti
aas
and
push
cmc
scas
dec
jbe
xchg
push
outs
call
dec
inc
data16
sahf
(bad)
fwait
jge
mov
mov
lea
scas
call
jge
push
out
(bad)
(bad)
dec
mov
repnz
push
lds
loope
add
push
add
pop
push
int3
mov
popa
cmp
fst
ins
scas
xchg
out
cmp
in
cmps
call
xchg
shl
sahf
mov
or
aas
mov
inc
xchg
xor
pop
sbb
(bad)
(bad)
xor
ins
push
mov
xchg
cmp
iret
and
mov
xor
test
rcl
cmp
int3
and
mov
mov
imul
push
in
(bad)
fimul
int3
mov
sahf
pusha
cmp
retf
jae
je
cmc
loope
inc
xor
mov
mov
add
test
xor
clc
cli
or
sbb
fistp
sahf
pop
mov
fnstcw
test
adc
popa
mov
clc
stos
jb
mov
sbb
fcom
mov
mov
jne
repz
(bad)
cmc
iret
jl
jbe
add
mov
sbb
lods
add
lea
fsubr
lds
in
repz
jbe
shl
loop
cdq
pop
sub
jb
rcl
xor
sub
inc
test
add
mov
add
jg
mov
bound
mov
ret
jmp
mov
ss
ficom
jnp
mov
dec
push
mov
lods
(bad)
imul
lods
mov
movs
(bad)
ror
mov
ds
sbb
test
mov
jg
ror
popf
jbe
inc
jmp
jle
clc
in
push
aaa
(bad)
rol
fdiv
or
pop
leave
cmps
mov
(bad)
adc
ret
lods
iret
xor
pop
in
dec
clc
mov
repz
out
mov
mov
pop
ins
cmc
sub
pop
mov
rol
mov
lods
(bad)
data16
xchg
std
add
in
dec
mov
outs
rcl
pop
(bad)
xchg
imul
cld
leave
cmp
or
sbb
add
xor
pop
sbb
and
mov
ja
cmp
in
mov
hlt
nop
ds
popa
daa
add
mov
bound
jmp
idiv
aad
mov
gs
sub
push
out
gs
rcl
das
push
popa
aas
sahf
clc
pop
or
imul
mov
or
xor
add
mov
icebp
mov
push
ss
mov
pandn
in
mov
fstp
mov
xchg
pop
pop
sub
push
push
rol
or
mov
ins
loop
loope
push
inc
data16
(bad)
loop
dec
je
in
xchg
xchg
loope
mov
jnp
mov
mov
or
xor
push
sbb
push
fsubr
cmp
pop
ror
(bad)
and
(bad)
es
push
cwde
mov
(bad)
jl
ret
and
adc
cmp
out
inc
aaa
xor
and
stos
imul
jo
out
je
mov
mov
pop
mov
(bad)
pop
pushw
idiv
nop
test
xchg
inc
xlat
imul
leave
(bad)
mov
cmps
dec
push
fs
aaa
movs
ds
loope
scas
hlt
jg
jbe
mov
loope
stos
push
sub
xor
adc
test
or
scas
push
stos
mov
push
aam
scas
ins
fild
sub
in
lods
pop
frndint
sbb
jg
dec
ins
jp
imul
xor
cmp
add
xor
jo
xchg
mov
out
stos
cmp
inc
push
mov
retf
mov
cwde
outs
xchg
fcom
adc
addr16
sbb
test
std
int3
loopne
jg
lods
sar
jge
cmp
jecxz
jnp
sbb
xor
popf
cmc
or
mov
adc
leave
icebp
fbstp
cdq
arpl
push
rcl
pop
(bad)
les
setae
lock
cmp
pop
dec
clc
out
and
inc
cmc
dec
nop
adc
gs
ret
out
outs
aaa
cmp
fs
sub
mov
lods
ror
ret
int
xchg
pop
pushf
jle
xchg
sub
(bad)
movs
ret
xchg
pop
inc
scas
jb
test
rcr
and
cmp
jecxz
pop
cs
cli
cmc
ror
mov
cld
mov
mov
out
pop
push
mov
jmp
repnz
imul
ins
ret
fdivr
mov
es
pop
and
stos
(bad)
xor
xchg
jnp
(bad)
bound
popa
add
scas
cmp
das
dec
push
(bad)
adc
int3
fwait
dec
data16
scas
jns
pusha
pushf
push
mov
das
retf
mov
mov
jmp
xchg
add
mov
test
scas
ret
out
ss
enter
inc
imul
and
mov
push
mov
int
push
enter
xor
je
nop
cmp
inc
xchg
jbe
adc
and
movs
ins
pextrw
dec
pop
sbb
dec
mov
mov
cmp
add
jne
in
dec
imul
mov
fcomp
(bad)
rcl
sub
inc
inc
ja
scas
fld
cmp
sbb
cmp
pop
inc
xor
pop
push
out
aas
adc
push
loop
and
inc
scas
cmp
inc
in
mov
out
jmp
jbe
pop
rol
cld
mov
int
lahf
aam
das
sbb
jne
push
inc
clc
ret
daa
or
(bad)
push
fisub
xchg
daa
xchg
fsub
(bad)
and
test
jb
call
add
pop
jb
mov
leave
bound
inc
pop
dec
int3
outs
(bad)
xor
sbb
dec
push
call
and
aaa
fild
sub
call
sbb
ds
pop
div
cwde
fcmovnb
imul
push
push
sbb
fwait
pop
loope
movs
lock
inc
mov
dec
fisub
sub
mov
xor
add
and
fwait
sbb
mov
and
and
jmp
xchg
xchg
mov
js
fdivr
je
fwait
cld
add
call
lea
cdq
mov
retf
push
jmp
clc
bswap
test
in
outs
dec
les
adc
movs
push
movs
push
mul
movs
iret
inc
pop
xchg
jnp
xor
dec
icebp
mov
into
lds
pop
shl
cmps
fsub
and
gs
out
sti
dec
pop
or
out
cmovge
mov
retf
enter
sub
stos
call
arpl
and
xor
and
enter
pop
add
mov
pop
shl
mov
sbb
aam
ret
mov
mov
pop
mov
imul
xchg
mov
jae
cmps
add
pushf
ret
in
push
jb
and
(bad)
fbstp
push
ins
inc
push
jle
xor
mov
call
stos
push
jp
add
mov
shl
dec
dec
and
or
sub
jmp
ins
repz
shl
push
retf
fwait
mov
and
jmp
lds
icebp
xchg
jle
arpl
push
or
jmp
jl
and
adc
sbb
inc
fisubr
imul
lahf
push
push
cmp
pop
push
add
or
hlt
hlt
mov
dec
sahf
xor
ficom
cmc
inc
adc
xchg
(bad)
stos
(bad)
mov
cmp
cmp
out
jge
inc
or
in
and
jno
ret
gs
cmp
cmp
js
leave
out
fisubr
adc
pop
shl
cs
or
pop
cmp
mov
mov
dec
mov
dec
mov
(bad)
clc
lods
out
fisttp
sbb
xchg
out
outs
mov
push
(bad)
mov
sub
push
test
xchg
cmp
dec
dec
add
sbb
movs
daa
pushf
mov
mov
nop
mov
xor
popa
xor
sbb
xadd
fwait
push
xor
outs
push
add
xchg
mov
push
and
sti
jmp
fst
mov
out
fucomip
out
mov
add
mov
nop
dec
pop
sbb
outs
retf
sbb
or
mov
not
leave
hlt
fsub
mov
sbb
movs
sbb
aam
adc
repnz
(bad)
add
add
mov
cli
add
pop
jge
lods
rcl
push
lds
xchg
inc
sub
sbb
pop
cld
dec
fcom
xor
call
push
fs
pop
jle
pop
mov
(bad)
sub
in
push
in
stos
dec
ds
(bad)
out
fidivr
popa
and
inc
mov
fcmovbe
das
movs
xchg
add
call
repz
stos
mov
xor
jnp
jecxz
cwde
call
hlt
push
stos
jmp
mov
cmc
ins
in
pushf
pmaxub
jne
(bad)
aad
pop
or
mov
pop
push
or
scas
fcom
call
lods
out
mov
jle
mov
jge
and
pop
repz
out
pop
push
test
xlat
jecxz
adc
cmp
addr16
pop
xchg
pop
ficom
push
nop
xchg
retf
lods
xor
cmc
adc
xlat
sbb
dec
jmp
inc
lods
ss
mov
out
mov
gs
xchg
(bad)
cmps
jp
mov
(bad)
fistp
cmc
out
mov
shl
xchg
and
call
push
pop
mov
mov
ret
or
jne
retf
jmp
xor
stc
jecxz
aam
addr16
mov
mul
mov
nop
fist
repnz
xchg
pop
xchg
daa
inc
and
bound
sbb
ins
add
xor
ret
push
mov
enter
ror
das
sar
xchg
mov
push
mov
jl
pop
sbb
mov
xchg
and
test
pop
push
xor
aam
inc
scas
sahf
je
jo
xchg
jmp
bound
fdiv
out
xchg
sub
cmp
fldenv
sbb
fdivp
fsubr
addr16
dec
sbb
inc
push
jno
js
push
sub
mov
push
mov
pusha
xor
stos
mov
icebp
test
or
xchg
add
test
pop
shr
addr16
jecxz
aaa
or
call
mov
(bad)
fmul
out
stos
add
loop
jnp
push
std
outs
and
cmp
mov
repz
fiadd
mul
fmul
ja
cdq
mov
stos
or
or
nop
ror
dec
retf
xchg
adc
jle
sbb
dec
pop
pop
xor
jo
push
ficomp
lahf
inc
lahf
aam
int
loope
call
outs
or
push
xchg
cld
sub
lahf
ja
lds
fsub
dec
out
push
push
pop
push
xor
dec
mov
popa
in
jl
adc
and
xor
xor
pop
(bad)
and
loop
ins
mov
cli
movs
mov
push
xor
push
aas
sbb
dec
lock
push
dec
(bad)
jmp
inc
aaa
out
mov
fadd
outs
lods
fist
or
repz
div
push
and
push
(bad)
cmp
add
xchg
and
pop
pop
popf
lock
test
push
mov
rcr
pushf
int3
int
mov
ins
pop
or
inc
cld
int
adc
ja
jmp
je
sbb
sub
jo
out
and
sub
cwde
in
ins
add
or
mov
dec
mov
inc
ret
iret
inc
cld
(bad)
cli
loop
es
int3
jo
push
mov
push
stos
cdq
cmp
bound
js
adc
sub
outs
popf
sbb
lock
ficom
push
push
mov
pusha
ret
mov
xchg
(bad)
int3
jge
jmp
int
xchg
imul
out
ja
pop
aam
inc
stos
inc
mov
js
lds
(bad)
test
outs
(bad)
repz
xor
pop
pop
mov
or
or
pop
pop
push
mov
scas
fucom
pusha
repz
jecxz
stos
sub
ror
in
in
dec
js
(bad)
mov
mov
cmps
cmps
(bad)
xchg
es
fldenv
mov
js
dec
mov
aad
shl
jae
or
mov
shr
ja
push
mov
sub
nop
sub
mov
add
cmp
pop
jle
xchg
fnstenv
scas
pop
pushf
xor
in
pop
dec
jmp
int3
inc
pop
sahf
push
sahf
sub
cwde
out
retf
cmp
retf
dec
ins
pop
mov
adc
jl
ja
aaa
mov
pop
adc
sub
pop
cld
pushf
jno
dec
mov
cs
loopne
pop
out
movs
cdq
es
icebp
add
fisttp
es
stos
ds
dec
jmp
sbb
scas
xor
xchg
mov
push
fnsave
lods
adc
lahf
or
push
hlt
jbe
pop
ficomp
loope
jo
test
and
cmp
cmc
mov
mov
jmp
add
sti
jmp
daa
repnz
(bad)
jmp
fbstp
dec
popa
cmc
jl
popa
jg
stos
or
and
sbb
mov
ins
jle
mov
cmp
imul
(bad)
mul
movs
mov
inc
sub
mov
mov
fadd
push
mul
push
test
sub
mov
sbb
cmps
lods
pop
out
xor
adc
sbb
ins
xor
enter
js
add
jecxz
mov
scas
sbb
loope
je
data16
imul
jns
mov
(bad)
test
mov
add
shr
dec
sbb
xchg
int
jae
cmp
(bad)
clc
lds
adc
inc
and
and
jnp
cmp
test
push
adc
es
and
clc
hlt
sub
push
xchg
mov
(bad)
push
push
daa
fmulp
sub
fcomi
pusha
fcomp
cld
or
mov
repz
xor
mov
or
popa
inc
jmp
inc
and
cdq
movs
popf
(bad)
sbb
fwait
and
push
neg
ss
push
ret
bound
push
out
xor
fild
shl
addr16
push
and
stos
xchg
pop
push
daa
push
or
in
mov
(bad)
pop
pandn
mov
leave
push
sub
adc
rol
jmp
test
or
xchg
mov
pop
call
sbb
or
sbb
sbb
mov
and
mov
or
imul
mov
repnz
shl
idiv
push
inc
in
cmp
push
out
inc
cmp
cmp
and
jno
cmc
adc
cld
or
iret
lea
loop
adc
bound
push
enter
cmps
jno
mov
cmps
mov
pop
and
cmp
into
lds
sahf
fsub
cmp
push
(bad)
pop
pop
dec
sbb
adc
sar
jnp
shl
arpl
jne
xor
mov
xchg
xchg
in
mov
sti
inc
fisubr
jns
test
ins
push
in
sbb
in
cld
pop
frstor
xchg
sbb
fisubr
push
mov
mov
in
call
pop
dec
sbb
xchg
adc
sbb
pop
inc
out
dec
jl
mul
int3
pushf
jle
data16
ficom
sti
sub
rol
leave
mov
inc
out
imul
in
add
mov
adc
inc
(bad)
lods
jno
clc
jnp
std
xor
test
mov
or
pop
fwait
fwait
add
out
popa
or
pop
mov
push
xor
pop
ret
out
stos
or
neg
in
add
xor
loope
in
sti
jae
xlat
mov
jecxz
dec
jno
add
mov
xor
in
xchg
(bad)
sbb
cmp
xchg
dec
adc
push
nop
sbb
(bad)
push
hlt
cmp
mov
ds
aas
jae
hlt
xor
xchg
xor
sub
jnp
fidiv
aad
mov
jne
adc
push
fbld
or
shr
jbe
lock
push
jmp
in
and
sbb
les
pusha
mov
jge
es
ins
test
xchg
mov
popf
mov
mov
sahf
ins
jecxz
aam
pop
stos
retf
daa
inc
test
lods
pushf
repz
xor
xchg
jle
cmp
sub
mov
adc
mov
lock
adc
sub
ins
jo
pusha
in
mov
imul
mov
sbb
jb
(bad)
hlt
nop
movs
scas
imul
pop
loopne
out
mov
xor
ins
cdq
cmp
fild
mov
mov
in
cmp
jle
xor
mov
fimul
cmps
jbe
call
jle
push
jp
dec
xchg
adc
ins
std
mov
add
jp
jmp
adc
jnp
hlt
jno
and
sub
xor
in
fdiv
scas
pop
test
shr
push
mov
sbb
out
pop
xor
pop
or
into
inc
and
cmps
daa
dec
loope
bound
jge
addr16
(bad)
iret
mov
pop
sub
inc
add
cli
loop
movs
enter
out
sub
mov
mov
cmp
sub
imul
shrd
or
imul
push
in
es
xchg
mov
pop
jmp
int3
mov
loopne
add
mov
fbstp
inc
stc
mov
sub
loope
xor
pop
addr16
dec
push
jp
push
fcom
ss
push
das
sbb
in
mov
mov
add
movs
jp
mov
mov
fisub
outs
in
and
xor
mov
cmp
jmp
test
bound
ins
div
call
repnz
ins
je
xchg
jbe
cmps
pop
cdq
jb
or
inc
aam
cmp
cmc
adc
mov
retf
sbb
add
pop
xor
adc
mov
and
call
in
sbb
scas
dec
shl
aas
adc
inc
xchg
push
(bad)
mov
(bad)
jbe
or
inc
jb
inc
mov
cmp
lock
into
fbld
mov
xlat
repz
sub
les
adc
xor
inc
jmp
clc
adc
pushf
mov
das
or
dec
in
mov
retf
jmp
cdq
je
push
push
or
inc
jns
or
jecxz
xor
push
mov
cli
sub
out
fdivr
loop
xor
jb
xor
ret
nop
enter
movs
out
jmp
sub
and
inc
scas
push
mov
push
imul
es
int3
xor
adc
pop
sub
sub
std
ret
mov
cld
sub
jmp
jbe
out
xchg
retf
ins
int
scas
loope
pop
(bad)
cs
mov
data16
test
lds
mov
xchg
push
movs
xor
dec
(bad)
mov
pusha
daa
std
push
std
lods
(bad)
mov
pop
(bad)
mov
mov
mov
sbb
popa
dec
cmp
push
sub
repnz
jo
js
mov
sub
scas
xchg
xchg
arpl
dec
jp
sbb
sub
stos
jbe
cmp
add
sub
js
cmc
xchg
loopne
fnstenv
and
sbb
push
mov
cwde
arpl
sbb
mov
out
sar
idiv
shr
adc
rcl
add
sub
fnstcw
into
push
adc
ins
mov
push
fidivr
and
and
pop
cld
leave
and
int3
fbstp
cmp
jp
add
fsub
push
stos
xor
movs
rol
scas
daa
push
aas
mov
cli
(bad)
scas
ins
fdivr
cmp
adc
fwait
push
lock
call
pop
jb
mov
dec
mov
sti
or
jnp
lods
and
stos
ss
cmp
cwde
jmp
outs
push
ins
mov
imul
pushf
cwde
xor
push
sti
outs
jg
pop
inc
pop
dec
pop
mov
mov
out
mov
sbb
imul
loop
push
aas
rcr
cmps
or
test
push
and
fidiv
pop
fist
pop
(bad)
lods
jne
in
dec
xor
sbb
or
loopne
jae
xor
xor
mov
fs
dec
adc
shr
mov
leave
stos
dec
cmp
add
cmps
test
adc
stos
add
ror
jbe
test
pop
sbb
loope
mov
inc
mov
cmp
sbb
dec
sahf
popf
mov
pandn
push
add
outs
pop
mov
stos
pop
outs
daa
mov
sti
adc
push
mov
(bad)
add
mov
or
add
xchg
cmp
xor
fmul
adc
stos
retf
mov
nop
inc
lahf
add
(bad)
jge
xchg
aaa
into
xor
fstp
icebp
sub
push
pusha
xchg
xor
inc
lahf
fist
in
clc
(bad)
dec
xor
dec
cdq
movs
in
ins
push
inc
mov
jb
cmp
add
cmp
mov
ss
sub
adc
shl
pop
add
xchg
mov
sbb
add
cli
sbb
mov
xchg
(bad)
loope
sub
daa
adc
lahf
pop
and
cmps
cmp
or
push
test
add
(bad)
jbe
or
rcr
xchg
fadd
aaa
sub
push
test
test
and
xchg
add
add
mov
push
mov
ror
das
jns
mov
adc
cli
daa
aam
dec
sbb
loope
sub
out
(bad)
fnstsw
push
pushf
in
pop
movs
in
jle
mov
loopne
inc
nop
cmc
pusha
mov
or
test
retf
call
fcmovnb
dec
jge
xchg
mov
hlt
adc
jmp
pop
push
cmp
push
(bad)
ins
mov
push
xchg
test
sahf
loopne
cmp
pop
(bad)
and
inc
out
aad
fmul
out
sbb
loopne
in
sub
fadd
jno
pop
inc
popa
in
cmc
cwde
xchg
in
cmp
xor
pop
xor
xchg
sbb
(bad)
mov
les
call
jbe
mov
push
out
in
arpl
dec
pop
push
fmul
loope
jns
mov
xor
inc
sbb
xchg
fwait
movs
dec
lods
mov
leave
enter
inc
jae
mov
jbe
push
fnstsw
sbb
dec
jl
gs
fsub
cs
(bad)
imul
cmp
dec
(bad)
loope
cmps
mov
mov
add
or
(bad)
int
push
mov
daa
jg
xchg
sar
xlat
inc
or
mov
out
jne
mov
(bad)
stos
mov
cs
dec
jmp
mov
dec
mov
(bad)
cmp
rol
cmc
retf
push
mov
fwait
push
push
jae
or
push
pop
sbb
paddb
mov
inc
lea
pop
ins
fwait
sahf
lahf
int3
mov
push
test
popf
(bad)
jp
call
pop
adc
pop
cwde
push
test
jne
pop
scas
ins
mov
push
inc
push
das
out
shl
fxch
adc
mov
ret
and
adc
sub
pop
(bad)
repz
push
ins
adc
test
mov
adc
cmps
jo
into
push
sbb
imul
cwde
nop
sbb
mov
popf
cmp
push
mov
pusha
xor
mov
(bad)
pop
or
outs
leave
jle
mov
int
add
or
jno
mov
in
push
fisubr
push
lea
jne
cmps
jle
cmp
dec
dec
mov
sbb
pop
sub
out
dec
fdivp
neg
outs
xchg
int3
rcl
adc
fcmovu
sub
lea
es
inc
jno
lods
aas
xor
sbb
sub
push
bound
out
mov
adc
aad
das
sub
dec
dec
cld
inc
push
dec
push
popa
repnz
into
daa
inc
mov
sub
sbb
cmc
movs
mov
inc
mov
clc
mov
mov
adc
xchg
jno
call
in
(bad)
fstp
or
mov
and
adc
adc
sbb
mov
pop
add
xor
jg
rcr
in
out
ror
retf
mov
push
adc
lea
ins
or
(bad)
jp
xchg
inc
cmpps
enter
mov
and
arpl
outs
pop
jno
sbb
mov
je
stos
cli
cmps
push
xchg
scas
dec
cmp
fild
aad
xchg
push
hlt
into
pushf
or
jg
and
pop
fiadd
cmps
ds
nop
enter
mov
fwait
dec
int3
xchg
adc
shl
or
imul
pop
push
add
js
and
icebp
cmp
loope
stos
repz
hlt
mov
cld
add
pop
sub
mov
mov
mov
aaa
sub
jle
mov
gs
dec
dec
sbb
(bad)
pop
cli
into
imul
ret
push
inc
rol
rcl
adc
in
rcl
mov
iret
scas
push
je
inc
inc
aam
adc
in
jle
sti
shr
mov
lahf
or
dec
sti
sbb
and
call
add
add
fs
movs
and
xor
addr16
push
out
cmp
call
push
sub
jne
pop
cli
cs
hlt
jnp
jno
movs
ins
stc
xchg
fistp
das
push
out
or
push
mov
and
inc
sub
mov
pop
out
out
jmp
fild
lahf
pop
sahf
add
inc
popf
jb
dec
add
xor
mov
ja
out
pusha
mov
adc
cmp
stos
(bad)
in
lods
inc
sar
mov
fimul
xlat
mov
dec
retf
fiadd
dec
aam
mov
cmps
mov
int
pop
jmp
pushf
lods
jl
mov
pop
(bad)
inc
loope
jg
push
inc
pop
jl
mov
jge
push
pushf
jle
repnz
sbb
repnz
xchg
xchg
adc
test
mov
adc
pop
mov
iret
lods
pop
test
jae
fsub
gs
sbb
outs
inc
loop
cmp
retfw
jmp
mov
and
push
or
fadd
push
cmp
mov
pop
xor
sub
push
sbb
and
call
lods
cs
push
mov
or
ds
stos
adc
jmp
push
call
push
movs
mov
in
ds
xchg
aam
or
add
and
ja
xchg
out
(bad)
rol
jnp
(bad)
test
dec
xlat
sub
push
xor
or
or
enter
jl
inc
out
imul
xor
addr16
dec
cld
popa
in
lods
sahf
mov
xchg
addr16
addr16
xchg
fneni(8087
cmp
sahf
mov
ret
stos
popf
jb
xor
push
jbe
call
pop
sbb
out
daa
cmp
pop
nop
cmp
push
jb
xor
add
arpl
fimul
sub
in
push
xchg
lock
xchg
stos
retf
mov
jmp
cmp
pop
psubusw
das
add
and
fadd
xor
test
pop
dec
stos
rol
xchg
bound
stos
into
popf
jo
jge
mov
xchg
fild
ss
je
xor
pop
and
adc
push
fchs
cld
loope
jg
fwait
aad
push
jns
test
imul
fs
aas
add
leave
dec
aam
out
inc
mov
test
mov
xchg
add
sub
xchg
cmp
cdq
(bad)
xor
sub
daa
and
ins
push
push
test
cld
lods
ins
inc
mov
sub
hlt
dec
and
pop
fstp
mov
scas
xchg
mov
std
in
pushf
and
jmp
sub
or
xor
repnz
cmc
dec
dec
in
not
cmps
push
cmp
dec
dec
push
sbb
xchg
dec
movs
rcl
nop
movs
aam
clc
into
test
xor
jae
arpl
ins
dec
add
mov
cwde
call
(bad)
ficom
cli
popf
sub
mov
addr16
std
push
int
push
aas
popa
push
cmps
xor
pop
pop
cmps
mov
sar
fisubr
and
ret
and
xor
sub
cs
nop
nop
push
cmp
in
sub
inc
push
test
out
add
xchg
xor
jmp
xchg
cwde
int
(bad)
jl
dec
movs
jecxz
sar
adc
pop
mov
fcomp
sub
jmp
aad
inc
mov
xor
mov
pop
je
sbb
jmp
sbb
mov
loopne
loope
pop
std
and
pusha
inc
scas
fcmove
(bad)
adc
div
je
pop
pop
mov
mov
sbb
(bad)
(bad)
adc
mov
in
xor
ins
retf
in
and
jle
and
mov
jmp
or
and
fsubr
not
fld
inc
pop
xchg
je
mov
pusha
xchg
(bad)
push
mov
cmc
ds
push
xor
test
test
je
outs
cld
nop
daa
repnz
jle
jb
mov
int3
loope
push
sbb
or
fcmovne
movs
sbb
jne
lock
jbe
jmp
pop
cld
pop
sub
inc
mov
pusha
push
mov
xchg
in
mov
call
inc
iret
pop
xchg
or
xor
iret
(bad)
cli
xlat
or
outs
movs
cmp
ins
sbb
jmp
pop
int3
retf
mov
sbb
push
retf
je
mov
push
pop
sub
sub
cli
xchg
mov
fisub
test
add
imul
jb
jg
es
in
loope
scas
cmp
gs
or
lea
and
(bad)
mov
cli
sbb
stos
cdq
cwde
dec
call
jl
cmp
das
daa
xchg
inc
sbb
addr16
sub
ret
out
mov
xor
loop
mov
popa
push
adc
pushf
mov
(bad)
jo
adc
rcr
inc
rcl
jmp
movs
fwait
lea
cmp
xchg
jo
shl
not
pop
scas
dec
mov
int
push
test
jecxz
shl
jns
repz
sar
hlt
enter
or
das
jg
in
enter
xchg
push
popf
(bad)
std
sbb
ja
xchg
aad
leave
push
idiv
push
popa
je
data16
arpl
xchg
push
push
jbe
cwde
dec
mov
fimul
dec
mov
ret
icebp
lods
push
adc
jbe
add
fcom
(bad)
fnsave
sti
int3
popf
jg
inc
call
leave
fist
imul
xchg
jp
xor
popf
xchg
cwde
lods
mov
sbb
ins
and
mov
pusha
or
icebp
sti
rep
popa
pop
cmp
xchg
xlat
jl
gs
inc
push
loopne
shl
sub
pop
ss
icebp
arpl
(bad)
pmaxsw
jmp
inc
imul
(bad)
mov
sub
psubd
scas
cli
and
add
jnp
repnz
jo
enter
outs
cmp
jp
inc
lds
fwait
xchg
lea
adc
jmp
out
repnz
stos
lods
popf
idiv
daa
sub
test
inc
pop
add
xchg
shl
out
adc
xor
adc
xchg
mov
mov
dec
aaa
push
mov
pop
sbb
jp
pop
dec
test
shr
push
inc
sub
cmc
adc
mov
fdiv
in
fistp
cmp
mov
mov
call
dec
loope
sub
aaa
cmp
add
mov
jae
mov
push
fdivr
cld
xchg
xchg
dec
test
mov
test
imul
in
dec
lods
mov
test
adc
push
loop
or
adc
not
out
adc
les
dec
and
inc
iret
scas
cmps
sub
sbb
int
push
dec
popf
push
aam
mov
xchg
sbb
add
ret
add
(bad)
pop
xor
out
ja
jne
movs
jo
call
dec
call
mov
and
mov
add
test
sub
scas
out
mov
push
and
std
push
call
sbb
dec
dec
fst
shl
xchg
(bad)
xchg
in
adc
or
cmc
sahf
inc
popf
fild
pop
out
rol
popa
push
in
adc
lahf
fistp
ret
cdq
pop
out
jl
cmc
in
lock
or
test
retf
test
clc
(bad)
mov
push
fimul
jmp
repz
mov
pop
add
pop
xchg
sbb
fidiv
cmc
or
add
sub
xchg
sar
out
sbb
icebp
cmp
data16
gs
fist
shr
test
xchg
out
inc
je
out
js
fwait
mov
test
stos
imul
jmp
sub
mov
fstp
mov
loope
nop
jbe
lods
fist
in
xchg
jecxz
sub
loopne
ss
inc
xchg
cmc
pushf
fisttp
test
and
mov
leave
imul
mov
imul
(bad)
dec
xor
mov
pop
push
ins
mov
mov
cld
enter
stos
mov
mov
pop
repz
test
sub
popf
mov
out
jp
ret
movs
mov
jb
cdq
fwait
dec
pushf
mov
xor
iret
jmp
mov
cmc
push
cmp
mov
add
xchg
dec
push
movs
sti
mov
leave
es
test
pop
(bad)
push
dec
aad
sbb
js
shl
jns
cmps
out
call
xbegin
ss
jno
or
push
ficom
add
xor
cmp
pop
mov
adc
xor
fist
jne
rcl
stos
popa
add
and
aas
(bad)
jbe
mov
jle
xor
or
sub
xchg
jo
loop
aam
scas
call
adc
cmp
jp
sub
fadd
outs
pushf
and
shl
iret
and
ja
mov
aaa
pop
mov
or
pushf
add
inc
pop
and
push
sub
addr16
je
pushf
adc
inc
xrelease
cmp
loope
mov
(bad)
loopne
sbb
fisubr
in
inc
add
sub
or
mov
repnz
sub
jne
repnz
jbe
data16
js
imul
enter
fdiv
jno
fwait
jge
mov
pop
in
jecxz
sbb
adc
push
daa
cwde
std
jae
in
push
pop
lea
bound
arpl
and
mov
push
push
add
or
cmp
ror
(bad)
imul
push
ss
fwait
add
movd
jno
loopne
mov
xchg
das
add
or
mov
test
dec
in
enter
cmp
(bad)
xchg
jno
ss
inc
dec
fmul
ret
jo
xor
jb
leave
add
div
lahf
iret
loop
daa
cdq
cmp
sub
(bad)
outs
sub
je
out
mov
mov
cld
fidivr
inc
mov
(bad)
mov
mov
and
inc
jmp
add
cmp
hlt
pop
sar
xor
pusha
test
outs
jbe
pushf
cmp
push
xchg
loope
sub
jle
clc
pop
push
push
test
mov
gs
xchg
push
repnz
dec
mov
and
out
stos
jp
pop
dec
jecxz
and
clc
mov
popf
test
add
push
mov
sub
xchg
repz
pop
pop
(bad)
int
aad
xchg
mov
cmps
pop
mov
cmps
aad
mov
mov
pop
fsubr
aaa
inc
fwait
cmp
pop
mov
(bad)
mov
jno
pop
sbb
aas
or
icebp
xchg
ror
(bad)
ins
call
ret
adc
loopne
sbb
fs
dec
xor
test
lds
xchg
jnp
sbb
push
pop
dec
xchg
sbb
push
inc
std
out
ins
add
imul
test
jmp
sub
adc
xchg
imul
adc
adc
mov
fimul
cmp
lahf
std
jp
pop
add
movs
add
push
inc
and
cmp
push
adc
adc
js
and
fst
mov
daa
call
dec
pop
(bad)
inc
xchg
aad
neg
je
inc
out
sbb
sbb
scas
pushf
fs
push
cmp
cmc
mov
push
pop
inc
shr
icebp
or
xor
sub
xchg
call
mov
mov
ins
xor
sbb
push
or
jne
scas
or
cmp
mov
das
cs
sub
into
jae
mov
xlat
xchg
mov
and
inc
push
dec
aas
(bad)
jle
rcl
out
test
dec
retf
sbb
pusha
inc
mov
sub
jg
push
(bad)
ins
call
sbb
push
out
icebp
enter
scas
addr16
es
sbb
inc
call
shl
jl
mov
mov
pop
adc
mov
jmp
js
sub
dec
jne
adc
cmp
xchg
cmp
adc
je
inc
leave
outs
test
out
and
(bad)
lock
ret
adc
(bad)
xor
inc
lods
into
lahf
inc
push
fwait
cmp
mov
adc
mov
popa
jle
xchg
js
dec
push
fldcw
fnstcw
or
xchg
das
daa
enter
push
xchg
cmp
outs
cld
test
push
sar
cmp
mov
pusha
ja
mov
push
mov
pop
mov
inc
in
fdivr
out
or
and
mov
lods
sahf
mov
neg
push
in
xchg
add
cmp
and
stos
xor
test
icebp
jae
fisub
jmp
sub
xor
mov
repnz
cmp
ret
and
jmp
cmp
sbb
data16
add
in
mov
daa
sub
dec
or
scas
sub
dec
sub
retf
and
aas
jo
hlt
adc
mov
jb
clc
add
fwait
dec
hlt
mov
mov
mov
rcl
(bad)
imul
les
mov
mov
adc
sub
mov
nop
adc
(bad)
les
cmc
fild
(bad)
in
mov
mov
cmovge
dec
inc
cmp
sar
mov
pop
ror
dec
xor
xor
retf
bswap
fs
inc
stc
cmp
xchg
or
int
mov
pop
jle
mov
int
jb
cmps
inc
jne
div
sub
out
mov
add
mov
push
es
stos
inc
in
aad
add
and
pop
xchg
aad
ja
dec
(bad)
aad
mov
jle
or
cmp
out
cwde
daa
jbe
cmp
in
mov
pop
pop
cmps
xor
xchg
jmp
in
and
or
int
pop
(bad)
in
xchg
imul
call
and
movs
cmc
imul
adc
push
cmp
lahf
sahf
pop
aam
sub
sub
sbb
cmp
pushf
enter
push
fst
stos
push
fldcw
cmps
sbb
test
cmps
dec
mov
(bad)
sar
dec
sbb
addr16
push
dec
popf
out
jbe
repz
mov
inc
test
fadd
push
pop
push
(bad)
in
pop
pxor
mov
imul
pop
inc
out
pop
addr16
cmp
jle
cmp
push
cmp
push
jbe
enter
xor
test
imul
pop
pop
data16
cwde
loop
mov
or
adc
in
sahf
cmp
adc
and
lods
cs
js
pushw
add
push
pop
pop
or
popa
mov
imul
push
add
mov
lods
ins
ret
sub
or
inc
in
aas
xchg
pop
jmp
pop
dec
imul
je
call
mul
je
adc
mov
sub
jns
out
sub
cmps
popa
imul
push
fwait
out
dec
sbb
sub
inc
sbb
popa
push
push
mov
push
shl
add
push
inc
mov
dec
in
sti
jmp
std
mov
ror
dec
adc
cs
icebp
and
test
mov
jbe
xchg
in
adc
jns
stos
pop
leave
mov
mov
mov
mov
in
push
inc
mov
adc
pusha
and
mov
sbb
fst
or
outs
(bad)
push
xchg
repnz
ja
mov
stos
(bad)
ftst
push
xlat
imul
mov
xchg
jmp
and
adc
neg
xor
jae
mov
and
mov
lea
mov
mov
fwait
inc
ror
jecxz
sti
push
jo
xchg
jp
int3
inc
or
inc
jns
pop
adc
adc
sbb
inc
jp
push
es
ret
mov
cmp
mov
call
add
add
push
(bad)
daa
inc
xchg
std
mov
and
inc
out
xchg
sbb
arpl
adc
dec
je
js
and
mov
sti
xor
call
mov
out
fmul
or
sub
in
test
loop
ret
sbb
cmp
mov
mov
cmp
sbb
lods
cmp
fadd
mov
outs
out
xchg
jo
aam
icebp
jne
pusha
lock
sahf
mov
mov
adc
stos
fucomp
or
mov
leave
xchg
xchg
in
repnz
fs
adc
fstp
int
sbb
jnp
movs
into
fwait
arpl
add
loopne
add
xchg
movs
popf
jne
pop
(bad)
and
nop
out
nop
data16
sahf
push
ret
cli
into
scas
add
cmp
test
loope
test
mov
in
enter
mov
fiadd
sbb
sub
shl
in
add
xchg
pop
and
sub
lahf
and
imul
(bad)
(bad)
fidiv
out
or
xchg
jle
addr16
pop
fisttp
stc
into
test
mov
cmps
and
je
mov
adc
mov
or
scas
pushf
sbb
mov
pop
jmp
cs
inc
int3
(bad)
adc
pop
push
loope
call
jnp
adc
pop
add
xchg
push
mov
fild
push
shr
lea
jle
icebp
outs
pop
push
test
fisttp
(bad)
nop
mov
dec
xchg
jge
hlt
shl
(bad)
out
test
fistp
ins
ja
rcl
sti
add
inc
mov
pop
and
(bad)
jb
test
jns
pop
lea
fst
in
mov
(bad)
test
jb
ffree
sub
ins
xor
jecxz
sub
cmp
(bad)
adc
fsub
int
lods
scas
inc
pop
fld
dec
in
pop
fs
mov
pop
fisubr
mov
jle
lea
mov
mov
shl
inc
nop
mov
sub
jmp
(bad)
pop
dec
shr
pop
gs
sub
mov
das
lea
mov
push
sbb
jns
je
adc
push
jbe
stos
mov
lock
inc
lahf
fidiv
mov
fld
add
(bad)
aam
pushw
imul
mov
cdq
xchg
xchg
fimul
add
imul
pusha
arpl
call
retf
call
les
movs
jecxz
inc
fs
mov
push
fst
inc
out
jno
push
imul
push
cli
(bad)
fstp
pop
lock
cwde
adc
lea
pusha
and
sub
fwait
std
stos
popa
xchg
lahf
push
hlt
xor
jbe
and
jb
dec
sbb
dec
mov
push
mov
mov
inc
out
test
out
or
add
add
xchg
pop
call
popa
retf
jecxz
addr16
sar
bound
aaa
sub
sub
dec
or
mov
inc
sbb
int3
imul
sar
pop
rcr
lahf
xchg
shl
xor
arpl
xor
cmps
sub
popa
inc
mov
adc
jns
outs
sub
fs
dec
fstp
es
mov
dec
ficom
push
mov
xchg
das
adc
dec
lea
mov
lahf
shl
mov
or
pop
ja
or
pop
pop
pop
push
push
push
loopne
and
mov
loopne
ss
repnz
cmp
jg
jns
mov
add
jecxz
fsubp
fldenv
jecxz
push
lods
mov
xor
pop
and
sbb
pop
shr
popa
mov
out
aaa
lods
sbb
mov
jae
push
call
iret
call
es
aam
sbb
dec
arpl
mov
mov
daa
imul
mov
rcl
xchg
inc
mov
ror
in
sub
mov
xor
mov
push
aam
ss
jns
inc
sub
mov
ret
jl
add
fs
adc
push
shr
neg
lock
sub
jg
outs
mov
pop
pop
push
lahf
sub
dec
mov
inc
fcmovbe
test
sbb
or
add
push
loope
das
push
inc
push
sahf
jp
call
mov
cld
pop
inc
(bad)
mov
imul
(bad)
cmp
(bad)
scas
adc
fnstsw
les
pop
(bad)
leave
test
movs
push
xor
stos
inc
adc
ret
xchg
inc
push
dec
push
mov
inc
pop
adc
pop
jbe
rcl
pop
aas
jne
cmp
push
push
add
adc
sbb
into
loop
ret
cmp
cwde
mov
xor
xor
jb
sti
fstp
sahf
push
out
aaa
push
pop
sbb
out
fistp
ds
pop
das
jnp
mov
jge
mov
or
in
pop
mov
repz
pop
into
rol
bound
mov
mov
pop
and
(bad)
clc
movs
pop
pop
movs
or
sar
xchg
xchg
inc
push
dec
jns
inc
scas
hlt
popf
push
fdivr
mov
in
add
cmps
js
shl
mov
jmp
stos
ins
das
mov
xor
popf
into
aas
les
cmp
mov
ror
retf
lods
sbb
push
jae
or
push
jmp
push
adc
inc
cmp
add
push
xchg
call
sbb
jns
mov
jmp
(bad)
adc
and
push
aaa
ret
enter
cmp
fucomp
cs
clc
inc
mov
ins
dec
(bad)
xlat
mov
aas
in
adc
jge
mov
sbb
add
std
or
cmp
test
xchg
test
dec
sub
movs
sbb
cdq
in
aam
sbb
jle
test
data16
(bad)
jp
ins
or
js
aaa
popf
shl
popa
js
add
les
daa
fs
adc
mov
mov
adc
int
sub
out
push
sbb
sub
push
cmc
or
push
mov
pop
outs
call
add
pushf
jb
inc
stos
sub
mov
xchg
les
scas
add
fistp
mov
or
mov
movs
adc
dec
stos
push
fsub
inc
pushf
mov
outs
cmc
dec
enter
cmp
jmp
shl
or
push
sub
enter
xor
or
imul
(bad)
pusha
jmp
or
xor
sub
push
test
mov
pop
cmp
int3
aaa
pop
push
dec
inc
(bad)
adc
arpl
mov
fbld
fadd
push
xchg
mov
xchg
pop
add
dec
ret
(bad)
dec
ja
or
dec
xchg
add
ret
jg
sbb
in
inc
(bad)
ficomp
sub
cmc
cmp
pop
outs
aas
(bad)
enter
loopne
loop
sbb
push
sbb
mov
mov
jmp
stc
inc
jnp
popf
sub
jo
push
fistp
into
in
cs
xchg
cmps
jne
out
or
and
jecxz
xchg
int
push
xor
adc
icebp
lahf
adc
(bad)
jo
dec
push
dec
xor
loope
fldcw
bound
in
add
lea
inc
test
sahf
retf
retf
(bad)
out
adc
les
ds
sbb
mov
cwde
sbb
xor
cld
std
ins
cmp
(bad)
jbe
js
inc
mov
jle
cwde
dec
add
jbe
mov
and
clc
rcr
shl
leave
fwait
jns
jbe
mov
and
xchg
jmp
dec
std
ret
dec
xor
jo
jl
jno
ins
rol
shr
sub
xchg
aaa
lods
aad
sbb
or
xchg
pop
stos
push
es
xor
fdiv
mov
fisttp
fwait
popa
xor
pop
mov
push
mov
inc
and
js
mov
sub
adc
das
cli
cmp
mov
push
cmp
fwait
inc
sbb
sbb
mov
jmp
lea
ins
es
out
dec
sub
ins
xor
mov
jp
xchg
mov
push
clc
aaa
mov
into
mov
cmps
jnp
pop
push
data16
ins
shl
jp
cmp
add
ficom
add
rol
int
nop
mov
mov
scas
pop
cmp
xchg
cmc
imul
jae
cmp
mov
icebp
stos
and
test
xchg
stc
sbb
jmp
arpl
ret
xchg
retf
shl
call
sbb
mov
sti
inc
(bad)
stos
inc
dec
lock
nop
jmp
popf
cs
adc
inc
js
jnp
enter
aas
jno
and
gs
jo
xor
xchg
inc
enter
cli
mov
out
sub
inc
xor
out
out
jns
mov
dec
fwait
cmc
push
add
mov
movs
cld
cmp
ins
mov
inc
push
inc
aad
jae
xchg
fidivr
mov
fild
iret
retf
in
ins
or
add
retf
outs
jp
jae
mov
mov
repz
mov
cmc
jno
dec
mov
adc
cs
lods
jecxz
and
popa
mov
cmp
mov
push
test
pushf
pop
push
sub
clc
cmp
mov
or
outs
repnz
sbb
mov
clc
fist
pop
mov
or
mov
iret
pop
mov
push
aad
fisub
retf
ret
fnstcw
aam
fcmovnu
add
aad
pop
ret
cdq
hlt
(bad)
ss
movs
mov
inc
repnz
cmc
test
rol
sbb
sbb
adc
sub
push
mov
jp
pop
scas
pop
mov
jl
cmc
sub
adc
xor
aas
sub
and
dec
adc
cmc
xchg
outs
dec
(bad)
call
call
xor
or
jg
or
mov
and
or
out
xchg
jbe
lods
and
inc
sub
bound
fmul
ss
mov
jecxz
jbe
loopne
inc
and
mov
jns
push
pop
push
ror
mov
adc
push
repz
fiadd
leave
enter
bound
dec
inc
daa
ja
iret
adc
push
leave
fidiv
dec
fistp
aaa
iret
inc
in
mov
xchg
push
mov
sbb
gs
jge
cmp
inc
push
and
add
rcl
cmp
xchg
imul
sti
in
lahf
out
adc
and
and
sbb
sar
inc
jecxz
lds
retf
test
inc
iret
xchg
cs
or
or
xor
cmps
fwait
or
sub
mov
fld
ins
cmc
adc
push
cmp
mov
inc
add
bound
in
movs
inc
les
(bad)
xor
push
(bad)
enter
inc
inc
sahf
and
in
dec
adc
scas
dec
push
or
test
and
inc
int3
add
ins
xchg
add
loope
fld
jbe
pop
(bad)
ds
fisub
mov
sub
clc
cmp
and
out
loope
call
jecxz
stc
pushf
push
add
cmp
adc
dec
repnz
ins
mov
mov
and
ins
dec
leave
jle
push
push
out
loopne
pop
mov
bound
sbb
mov
jae
pushf
jns
add
test
push
mov
lahf
cdq
push
mov
icebp
fstp
ins
ins
jb
push
aad
inc
pop
adc
jbe
xor
inc
push
inc
loop
(bad)
ret
inc
mov
outs
leave
icebp
or
fs
hlt
cdq
ret
push
mov
add
and
lods
mov
repnz
scas
je
cvtps2pd
jmp
into
mov
mov
add
fst
fsub
and
xchg
and
push
inc
retf
scas
fwait
pop
push
stc
mov
jge
cli
sbb
or
sbb
pop
lods
loop
mov
pop
into
gs
mov
mov
mov
pop
inc
cmp
dec
dec
or
mov
mov
sbb
je
mov
or
les
shr
push
pop
fcmovb
mov
and
jle
push
ss
repz
fucomp
js
sub
pusha
push
loopne
in
sub
add
sub
pushf
(bad)
cmp
jo
mov
mov
jmp
loop
sbb
cmc
inc
mov
fbld
pop
jp
mov
pop
lds
inc
hlt
xchg
cmps
sub
inc
adc
mov
inc
rol
inc
xor
pop
jg
or
je
cmc
loopne
jo
add
js
daa
push
rol
push
adc
icebp
dec
enter
lock
nop
cmp
push
cmp
mov
xchg
sub
pop
jecxz
push
jge
pusha
xchg
in
push
xlat
pop
dec
icebp
mov
cmps
adc
mov
(bad)
retf
jne
lea
in
lock
mov
pop
adc
xlat
cmp
dec
ret
loop
pop
mov
arpl
repnz
mov
add
fsub
addr16
xor
xchg
jns
fprem1
arpl
rol
aad
imul
fild
sbb
movs
(bad)
lods
test
test
sbb
maxps
pop
ss
test
test
inc
nop
fucomi
and
and
imul
fist
cmovns
pop
sbb
popa
sbb
ds
xchg
or
bnd
jp
and
(bad)
fstp
push
mov
mov
mov
sub
pop
(bad)
std
xchg
pop
in
and
movs
inc
xchg
pop
xlat
lock
es
mov
pop
pop
dec
mov
stc
rcr
test
sub
(bad)
test
cli
cmp
ja
sub
ins
xor
sbb
(bad)
fcom
stos
fucomi
std
lock
imul
lods
cmp
out
pop
in
call
test
mov
je
mov
lods
scas
ds
lea
push
jmp
jae
movs
in
(bad)
dec
imul
adc
(bad)
mov
jmp
pop
arpl
cmps
out
adc
mov
clc
push
inc
movs
push
mov
cli
push
push
mov
in
cmp
test
jbe
stc
adc
test
cdq
cdq
inc
adc
fdivr
inc
adc
fwait
adc
loop
call
sbb
imul
jecxz
int
test
cmp
nop
in
mov
push
sub
aas
or
push
popa
rcl
mov
hlt
lods
cmp
retf
icebp
lods
cld
mov
sbb
sub
mov
fst
jno
xchg
daa
inc
aas
rol
clc
pop
sahf
adc
jecxz
push
inc
push
mov
idiv
mov
leave
fld
rcr
cwde
mul
fnstsw
fcom
and
jmp
sub
cmp
push
mov
sbb
out
jp
xor
sub
arpl
pop
push
repz
or
out
jae
jmp
sahf
fisubr
kandnw
(bad)
mov
fmul
push
pop
mov
mov
out
(bad)
pop
out
inc
cmps
cdq
aad
mov
mov
sbb
ss
sub
sub
neg
xor
push
mov
cmp
div
adc
xor
ror
stos
call
xor
mov
fs
inc
mov
jecxz
mov
inc
cli
mov
sar
dec
pop
cmc
in
fsubp
push
cwde
xlat
retf
pushf
jb
cwde
cli
xor
xor
push
(bad)
iret
sahf
jnp
mov
jle
push
xor
loop
cmp
inc
push
shl
dec
sub
or
push
xchg
and
cmps
outs
les
gs
stos
adc
cdq
sub
arpl
jp
rcl
int3
outs
je
fsubr
sbb
xor
push
imul
mov
sub
dec
or
cmp
pop
imul
xor
sub
sar
mov
pop
xchg
popa
add
pop
std
or
cmc
sbb
sub
in
jb
in
call
inc
arpl
jge
lods
sbb
out
popf
push
and
xchg
jp
adc
mov
pusha
mov
sbb
call
ins
and
mov
xchg
xor
dec
retf
stos
adc
xlat
pop
(bad)
sti
pop
sbb
movs
pop
fld
shl
xchg
(bad)
cld
or
call
bound
sar
(bad)
lods
ja
inc
aaa
add
or
jno
(bad)
inc
daa
sub
dec
out
cwde
test
xor
dec
leave
aaa
cmp
out
push
mov
push
dec
cmp
push
punpcklbw
es
add
pop
inc
jl
call
and
xchg
out
push
mov
or
sbb
push
or
test
lar
adc
sub
push
or
mov
fidiv
mov
mov
mov
jb
xor
pop
pusha
add
push
(bad)
mov
sbb
lahf
push
clc
adc
adc
mov
jl
adc
inc
dec
pop
mov
sti
dec
call
mov
jp
lock
sub
out
in
daa
xor
rcl
cmps
adc
sbb
xor
sbb
scas
and
repz
xchg
adc
int3
daa
push
xlat
in
mov
sbb
sahf
pop
into
jb
mov
xchg
out
xor
je
and
hlt
popa
mov
xchg
scas
in
sbb
fcom
lds
sub
jns
dec
js
add
sub
or
fimul
dec
mov
ror
pop
mov
aas
inc
pushw
jmp
add
(bad)
mov
push
jmp
nop
add
jns
inc
push
mov
xor
adc
cdq
test
sbb
aaa
ins
aam
mov
jg
cdq
jnp
xchg
xchg
dec
test
outs
jns
fwait
and
repnz
push
ins
retf
inc
rol
ret
(bad)
push
jae
imul
cmp
fs
in
ins
or
jp
ja
jmp
nop
lods
outs
sti
out
or
stc
xchg
stos
loope
cmp
aam
ins
adc
lods
inc
je
mov
ins
inc
out
adc
sub
jo
dec
jae
sbb
mov
adc
mov
sti
dec
mov
mov
mov
ds
(bad)
fsub
je
xor
pop
xchg
or
lods
mov
xchg
fst
adc
mov
outs
out
cdq
sub
cmps
pop
dec
call
mov
dec
shl
cmp
call
or
lds
outs
test
xchg
mov
inc
daa
mov
mov
loopne
loop
(bad)
cwde
jmp
and
stos
jmp
adc
inc
mov
div
cmc
push
in
sbb
mov
jns
nop
push
enter
mov
xor
cmp
test
pop
jnp
inc
mov
sbb
mov
add
hlt
lahf
mov
stos
dec
(bad)
fstp
or
dec
jmp
dec
clc
pop
outs
xor
inc
add
lea
jbe
sbb
adc
mov
mov
sbb
xchg
xor
into
out
cmps
xlat
movs
(bad)
mov
add
sbb
mov
icebp
mov
jb
out
inc
and
aam
test
inc
aaa
adc
lods
pop
or
pusha
jae
lods
mul
cmp
std
ins
adc
test
arpl
or
aam
loopne
mov
adc
mov
sub
repnz
sbb
popf
sub
add
jae
xchg
mov
ds
stc
mov
cmps
pop
rol
pop
jg
jp
cld
or
aam
mov
retf
shl
xchg
sbb
mov
mov
inc
push
or
(bad)
mul
test
outs
xor
mov
push
in
xlat
scas
ror
adc
sahf
add
shl
(bad)
mov
icebp
xlat
cld
outs
xor
mov
cdq
dec
mov
ins
(bad)
jmp
push
inc
gs
nop
ss
xchg
pusha
cmp
mov
sbb
dec
icebp
outs
mov
mov
mov
xchg
mul
sub
gs
or
mov
pop
and
jne
imul
sub
add
push
and
fsubr
dec
sbb
cmp
jo
mov
sbb
xor
dec
mov
into
inc
jns
add
sti
xchg
dec
loopne
aas
jae
xchg
cmps
and
test
jp
std
gs
xor
push
cmps
lods
lea
std
push
mov
or
dec
enter
adc
lahf
sti
fs
xlat
push
xor
into
into
pop
and
aas
movs
(bad)
or
adc
push
sub
cmp
int3
lea
push
in
adc
cmc
pop
mov
mov
aas
xor
push
push
fisubr
hlt
xor
sbb
mov
retf
mov
pop
fnsave
movs
imul
jne
je
fwait
push
xor
cdq
cli
stos
or
shl
pop
or
aad
inc
inc
cmp
cmp
jp
and
mov
dec
retf
shl
cld
push
fs
push
mov
pusha
cld
inc
jnp
cli
stos
xchg
xor
mov
popa
(bad)
mov
cmp
pop
sbb
lds
enter
xchg
jbe
sbb
xchg
push
xchg
scas
iret
jmp
jnp
lahf
(bad)
jnp
jp
or
scas
hlt
cli
fwait
arpl
(bad)
(bad)
jg
arpl
push
rcl
cmp
repz
daa
fcmovnb
mov
loopne
popa
sbb
mov
dec
neg
shl
sbb
inc
mov
sub
xor
cmp
xchg
jns
into
jne
cwde
dec
in
pushf
ret
les
adc
add
sub
push
pushf
stos
jg
enter
std
imul
adc
xchg
jmp
jne
sti
adc
lahf
mov
mov
mov
pop
je
lock
dec
xor
inc
cmp
aam
dec
jnp
sub
adc
int
pop
xchg
out
fs
jl
pop
ss
mov
out
daa
icebp
jmp
xchg
jns
int
sbb
xor
(bad)
aad
sub
inc
adc
or
(bad)
jns
or
in
loopne
push
adc
dec
jg
nop
adc
hlt
test
push
mov
cmp
data16
cli
xchg
icebp
pop
adc
pop
jae
lds
mov
retf
pop
xor
xchg
inc
repz
clc
inc
push
dec
fwait
in
call
call
lahf
push
xchg
jl
push
add
ins
(bad)
das
cli
fprem1
outs
call
and
pop
push
jbe
lahf
ffree
mov
cmp
and
xchg
ja
cmc
shl
cwde
dec
jo
daa
mov
ins
mov
cmc
outs
imul
add
addr16
fmul
addr16
mov
outs
in
mov
lea
aas
js
mov
and
sub
bound
into
or
mov
mov
mov
jmp
and
pop
imul
push
stos
fs
push
push
rcl
bound
or
mov
push
mov
mov
xor
and
and
dec
and
repnz
(bad)
adc
xor
fwait
cmp
cmps
dec
cmp
or
jp
push
loope
fimul
and
mov
mov
iret
outs
hlt
jmp
xchg
lods
and
and
or
jle
mov
pop
aad
sahf
adc
mov
jmp
fmul
(bad)
out
btr
xchg
pop
fwait
imul
cld
sahf
or
sar
in
jnp
jo
xchg
mov
mov
inc
outs
jb
(bad)
xchg
mov
cmps
(bad)
std
inc
mov
add
push
xor
leave
pop
or
pop
pop
mov
cs
es
aaa
push
jecxz
cmp
out
adc
mov
inc
add
aam
repz
cmp
fwait
outs
add
cmps
ins
in
aaa
fstp
jmp
pop
mov
fsubr
call
mov
jnp
pusha
pop
daa
rcr
push
xor
retf
inc
mov
mov
xor
pop
push
xor
push
push
pop
mov
jp
ret
sub
lds
js
int3
retf
imul
pop
shl
dec
fst
(bad)
jg
push
xor
jl
dec
repnz
mov
mov
cmp
sub
leave
push
add
sbb
adc
call
out
inc
add
and
arpl
push
popa
inc
adc
mov
or
xor
adc
(bad)
adc
hlt
ins
push
sbb
in
imul
retf
or
call
mov
mov
(bad)
call
dec
mov
je
shl
in
fs
xchg
inc
mov
dec
pop
dec
movs
icebp
clc
mov
ret
sub
mov
jmp
mov
test
mov
cmp
data16
mov
js
xor
push
ret
mov
pushf
dec
int3
jle
xchg
scas
pop
inc
(bad)
adc
cmp
rcr
ja
push
fidivr
out
popa
icebp
mov
adc
int3
movs
pop
push
jmp
jmp
pop
jmp
mov
push
or
mul
lods
mov
ror
push
stc
dec
test
inc
xchg
retf
add
aaa
sbb
adc
stc
add
in
jmp
pop
sahf
xor
mov
mov
jg
mov
add
sbb
dec
fisub
pop
push
leave
cmp
or
sbb
dec
pusha
out
jbe
mov
fmul
cmp
jae
sahf
fs
lods
xor
scas
cmc
mov
dec
dec
iret
ss
movntps
and
xor
shl
lods
or
aas
mov
div
push
sti
or
std
into
jmp
in
retf
aam
mov
dec
ds
popa
mov
lods
jp
aam
adc
or
lock
sub
fimul
pop
inc
mov
inc
cmc
in
xlat
stos
pop
mov
in
stos
and
out
xchg
adc
bound
iret
sti
loope
inc
xor
inc
push
loop
mov
call
std
test
jbe
push
and
xor
ins
push
jge
lock
push
ds
pop
ret
lods
mov
fiadd
ret
cmp
adc
mov
cmp
cdq
int
in
lods
popa
jne
or
inc
xor
cmp
xchg
dec
dec
cdq
sub
cs
mov
mov
aad
mov
push
pop
cmps
vprotd
fldln2
dec
les
push
ins
movs
lock
movs
outs
jns
retf
sub
ret
div
(bad)
pop
bound
aaa
push
add
out
xor
jl
iret
mov
scas
call
mov
xlat
sbb
xlat
repnz
mov
jno
(bad)
pop
adc
test
fldcw
icebp
int3
cli
mul
cld
sar
fcomp
pop
dec
pop
adc
mov
test
push
jae
ds
movs
xor
pushf
dec
add
movs
shl
xchg
jecxz
pop
nop
pop
fild
aas
push
sbb
inc
movs
sbb
cmc
pop
ins
imul
mov
jl
xchg
xchg
cmps
aad
pop
push
jecxz
shl
push
xchg
fcom
dec
sub
and
out
ja
mov
arpl
aaa
fimul
call
fwait
xchg
sub
inc
jne
inc
fsin
add
retf
scas
sbb
sub
pop
xchg
push
xchg
mov
(bad)
iret
add
shl
xor
stos
ins
sub
xchg
sahf
mov
cs
in
pop
pop
sti
outs
push
and
popa
adc
sbb
or
or
jns
cld
aad
dec
out
test
pop
jle
dec
or
addr16
mov
or
xlat
enter
js
data16
ja
inc
dec
pop
rcr
or
or
xor
aad
neg
dec
jge
and
lea
adc
adc
cmp
ftst
sbb
pusha
jle
aad
outs
cld
adc
pop
int3
(bad)
jbe
data16
ja
inc
mov
pop
pop
mov
inc
mov
(bad)
mov
sub
fldcw
mul
and
cwde
cmp
and
mov
test
int3
jae
lock
in
cld
gs
or
mov
popa
xchg
in
mov
cmp
mov
mov
mov
test
sbb
out
adc
gs
and
sub
sahf
xchg
ret
mov
sbb
aam
mov
inc
sar
dec
or
es
je
(bad)
and
rcr
jle
sti
xchg
imul
daa
add
and
sbb
scas
into
jg
dec
sbb
sahf
mov
lahf
jb
std
retf
in
jno
pop
loope
test
in
les
xchg
and
push
(bad)
loopne
xor
stos
add
leave
es
jbe
jnp
imul
pop
out
xor
cmp
clc
xchg
push
dec
repnz
push
icebp
shr
in
fimul
add
and
push
push
mov
pop
jbe
mov
add
test
mov
push
mov
push
fild
pop
adc
add
push
call
test
pop
add
jno
sub
inc
adc
pop
push
sbb
or
add
ds
mov
mov
push
jecxz
addr16
pop
or
dec
jl
cli
dec
mov
dec
dec
xor
pop
addr16
xchg
mov
jl
sbb
cmc
test
xchg
jl
inc
push
jo
shl
outs
jnp
mov
ss
mov
ins
or
dec
sbb
sbb
outs
cdq
xor
push
or
and
mov
inc
cmp
es
stc
lods
(bad)
add
mov
mov
call
arpl
movs
sub
sbb
fadd
add
nop
pop
rep
mov
seto
lahf
mov
xor
xchg
pop
and
and
stos
retf
mov
push
mov
push
or
stos
mov
popf
xor
jmp
mov
mov
push
repz
inc
(bad)
xchg
test
xchg
ds
fsubr
mov
aaa
pop
int3
push
call
mov
jmp
cpuid
movs
xor
rcr
adc
adc
loop
xor
inc
jae
ret
pop
dec
sub
(bad)
aaa
popa
push
shl
(bad)
lea
sub
xor
add
mov
mov
sar
push
sbb
outs
icebp
cmp
push
pop
and
in
mov
out
mov
xchg
xor
xlat
mov
lock
inc
stos
jae
push
aas
jge
lock
sti
push
and
push
push
(bad)
pop
cmp
and
mov
jmp
out
xchg
or
es
xor
sbb
pop
mov
jecxz
mov
lock
jns
repz
lahf
es
sbb
or
cmp
rcl
sbb
je
int
dec
mov
call
cmps
lea
pop
arpl
arpl
fdivp
into
ss
push
xchg
fbstp
mov
mov
cli
repz
pop
retf
mov
out
popa
sar
aaa
jb
shl
adc
jno
int
inc
sbb
push
adc
inc
pop
es
adc
xchg
inc
cmp
cmp
push
add
mov
ins
enter
dec
(bad)
cmps
lds
addr16
and
aaa
mov
sbb
inc
outs
dec
(bad)
vpxor
(bad)
fcmovnu
cmp
sbb
pop
cld
sbb
outs
mov
imul
fwait
or
in
cwde
fcmovnu
repnz
mov
sbb
and
outs
dec
gs
xor
xchg
aaa
jb
ret
adc
hlt
pop
inc
xor
enter
into
or
pop
sub
pop
out
pop
xchg
call
xchg
sbb
adc
cmp
sub
sub
cmp
out
mov
loope
push
rol
inc
dec
jmp
lods
mov
clc
push
dec
jl
lahf
ror
add
mov
and
push
icebp
and
and
xor
mov
push
push
es
hlt
xchg
div
inc
out
mov
pushf
mov
and
mov
jmp
int
out
loopne
add
inc
mov
outs
mov
sbb
sbb
mov
xor
jp
jg
test
pop
mov
push
adc
shr
lahf
pushf
test
xchg
push
dec
icebp
xchg
cld
les
inc
xor
mov
or
sub
mov
inc
push
es
clc
aad
pop
xchg
pusha
scas
cmps
imul
jmp
out
add
xchg
mov
xor
xchg
dec
inc
sub
fld
outs
xchg
bound
fdivr
fs
xchg
fmul
icebp
mov
adc
(bad)
mov
cmp
lds
jl
fist
out
add
inc
outs
(bad)
call
pop
retf
ss
div
mov
mov
rcl
out
or
aaa
xchg
adc
neg
push
movs
sbb
inc
push
cmp
adc
mov
pop
add
push
ret
push
push
sub
add
jmp
loopne
pop
mov
xlat
dec
mov
(bad)
test
aas
mov
hlt
push
sub
aas
mov
mov
jnp
imul
out
jmp
pop
cmp
sbb
scas
mov
xor
in
stos
int3
popf
dec
mov
add
mov
push
mov
sbb
mov
sahf
loopne
in
lods
loop
add
cmp
jge
mov
clc
dec
es
fnstsw
fsubr
movs
mov
xchg
jnp
sbb
cdq
ins
dec
mov
adc
jg
stc
pop
jle
sbb
or
shl
data16
push
ins
push
outs
or
sub
(bad)
loopne
repnz
and
ret
ins
aas
pop
mov
fmul
dec
push
xor
js
das
ins
mov
in
out
ins
(bad)
out
jno
jmp
pop
jp
fldenv
enter
setno
push
pop
mov
cmp
pop
jae
dec
dec
sbb
cmps
pop
adc
bound
repz
mov
cmp
(bad)
lods
inc
and
xor
jge
add
dec
mov
mov
mov
push
pusha
adc
ins
arpl
jbe
xor
push
xchg
xor
add
adc
jne
sub
retf
add
and
(bad)
enter
xor
lods
sbb
cmp
sub
cmps
cmps
add
mov
popf
daa
mov
sub
(bad)
pop
sub
mov
shr
sub
pop
cmp
mov
push
push
or
mov
fstp
not
xchg
sar
or
fstp
jae
rcl
inc
fs
push
gs
and
sahf
(bad)
push
lahf
mov
or
mov
pusha
xchg
jl
sub
fidiv
out
inc
js
ss
xchg
pop
or
bound
fiadd
jae
dec
mov
jne
shl
pop
add
adc
mov
retf
cld
in
aad
push
mov
fmul
mov
cmp
imul
push
scas
out
adc
mov
dec
push
mov
(bad)
in
stos
jp
aad
mov
xor
fwait
xchg
jmp
fs
and
add
mov
jno
cmp
mov
mov
call
mov
es
push
pop
add
jle
movs
mov
jmp
and
(bad)
or
(bad)
mov
out
dec
ret
jnp
outs
pop
sub
mov
fild
lods
pusha
jno
pop
push
mov
mov
inc
mov
cmps
pop
dec
cdq
pusha
rol
or
fwait
rcl
sbb
arpl
adc
movs
in
mov
imul
mov
xchg
mul
stos
scas
shl
pop
out
mov
imul
push
lods
pop
mov
pop
cmp
pop
mov
push
ins
pop
or
(bad)
in
test
xchg
mov
inc
push
jmp
pushf
adc
inc
test
push
loopne
loopne
stos
lods
sbb
mov
jmp
dec
cmp
sbb
lock
das
add
leave
xor
adc
ret
push
in
cmp
rol
enter
mov
bound
cmp
jge
mov
and
loopne
sti
mov
pop
jge
(bad)
xor
aaa
xchg
shr
jge
jno
fcmovb
adc
inc
rsm
and
jmp
inc
sbb
mov
mov
test
sub
and
int
push
mov
cld
push
add
mov
inc
mov
jl
mov
mov
je
das
xchg
inc
imul
inc
mov
xor
out
scas
in
xchg
push
dec
xor
mov
and
test
fs
pop
mov
dec
retf
out
push
ret
arpl
js
ins
push
pop
mov
inc
jge
cmp
mov
cs
in
mov
icebp
xchg
pop
imul
bound
ret
jecxz
sbb
in
jl
ret
pop
mul
and
push
movs
dec
mov
or
sub
aaa
or
mov
inc
iret
sub
cmp
fadd
movs
mov
mov
adc
xchg
popf
test
jl
cmp
bound
lods
das
cmovs
mov
clc
cdq
xchg
daa
push
scas
sub
xor
popf
xlat
sbb
cmp
or
nop
inc
popf
adc
fsubr
pop
dec
mov
shl
lock
adc
pop
add
out
out
test
and
jo
inc
xor
jecxz
loop
pop
test
(bad)
and
dec
jnp
addr16
add
add
mov
fsub
push
pop
jo
(bad)
mov
cwde
outs
or
shl
movs
jge
xchg
jnp
imul
not
xchg
shl
in
xlat
jae
xor
adc
xor
jns
test
sub
jecxz
fiadd
lock
ret
sub
mov
aaa
cmps
imul
and
pop
movs
aas
gs
adc
test
jmp
mov
ror
(bad)
loop
lds
popw
inc
ins
ds
xchg
fsubrp
arpl
add
in
fisub
sti
ret
js
or
xchg
mov
xchg
repz
loope
inc
or
inc
and
dec
outs
cmps
outs
mov
jge
(bad)
call
sub
repz
movs
xchg
or
dec
adc
mov
sub
aaa
xchg
push
dec
jl
mov
(bad)
stc
or
mov
xlat
and
xor
mov
jmp
mov
xor
pop
push
dec
fist
mov
out
dec
mov
ins
push
and
dec
or
pop
icebp
cli
pop
push
push
inc
or
pop
lahf
dec
mov
scas
fisttp
add
std
sub
push
mov
or
int3
fisub
add
add
ja
repz
into
push
cmp
int
mov
fs
push
cld
int3
pop
dec
inc
mov
bnd
call
sbb
int3
leave
mov
inc
jbe
test
mov
sub
adc
sub
and
cmp
into
xchg
adc
sub
std
dec
enter
aas
adc
cdq
addr16
fisttp
or
addr16
mov
rcr
sbb
add
and
jno
in
arpl
inc
add
mov
mov
scas
push
xor
mov
(bad)
shl
imul
outs
xlat
daa
mov
aad
ins
mov
xchg
jbe
lods
sub
adc
jp
mov
xchg
sub
push
jns
push
xchg
mov
fcomp
push
jo
dec
mov
xchg
jnp
xchg
dec
jae
cdq
retf
mov
call
or
mov
pop
sub
(bad)
arpl
inc
jae
sub
mov
or
jo
or
stos
fnstenv
test
ins
jmp
dec
aad
aam
loop
out
sub
pop
dec
mov
xchg
(bad)
div
dec
shl
cmp
push
add
dec
shl
rol
push
mov
aaa
inc
sub
xchg
xchg
int
imul
mov
in
xor
ret
sub
loope
xor
jmp
sub
mov
mov
mov
pop
out
push
pop
out
sbb
sahf
rcr
test
js
(bad)
or
call
and
jge
cwde
sub
sub
(bad)
retf
and
sbb
fcmovnb
xchg
imul
cmp
jp
rcr
and
pop
xchg
sub
enter
iret
sar
mov
sar
mov
inc
in
pop
jbe
or
push
popf
cmps
xor
loop
and
pusha
pop
xchg
dec
push
xchg
mov
inc
jg
rcr
arpl
jo
mov
push
shr
adc
movs
mov
sti
test
sub
loop
ret
dec
loope
dec
fnstcw
pop
clc
lds
ret
ja
adc
cmc
lahf
retf
lods
jmp
imul
fst
fnstenv
nop
repz
sahf
fst
pusha
nop
pushf
outs
popa
jle
shr
push
bound
and
aad
jmp
push
push
in
jg
retf
pop
in
cmp
dec
jmp
mov
stos
jae
mov
cmp
in
ret
sub
pop
(bad)
sub
add
mov
push
cmp
pop
je
pop
clc
adc
fisttp
and
mov
jp
(bad)
ins
mov
int
mov
nop
sub
retf
rcl
adc
fstp
out
jnp
out
shl
xchg
jle
sahf
mov
clc
sbb
pushf
pushf
add
or
jne
int3
mov
push
cmc
xchg
xor
loop
push
and
retf
sub
add
mov
int
and
scas
repz
movs
xchg
nop
fsub
add
adc
(bad)
mov
sti
cli
xlat
or
out
data16
pop
repz
outs
pushf
sbb
sub
dec
jno
int3
stos
fadd
xor
add
xor
cmp
icebp
jne
jge
inc
aam
lahf
fisttp
fimul
(bad)
push
shr
paddq
sbb
out
pop
push
mov
xchg
inc
lea
sbb
xchg
push
push
sbb
and
mov
add
sub
fcmovne
cmp
dec
jmp
pop
xlat
cmc
push
retf
ret
inc
das
nop
jp
shl
mov
addr16
cmp
shr
cli
jmp
xchg
or
jle
add
add
push
and
mov
lea
mov
xchg
nop
bound
sub
mov
scas
sub
outs
push
aas
shl
push
and
jge
movs
(bad)
xor
std
sub
add
fwait
rol
pop
das
std
cmp
cmp
jne
cmps
(bad)
addr16
cmp
inc
fcomp
test
(bad)
xor
and
test
(bad)
jmp
inc
mov
mov
cmps
xchg
xlat
ds
cdq
pop
sub
retf
jbe
in
lds
mov
cmp
pop
sahf
cs
fiadd
aam
cmp
xchg
aas
icebp
sub
ret
cmc
shl
xchg
and
sub
data16
(bad)
cmp
add
xchg
fcom
xchg
mov
xchg
pop
mov
inc
gs
ror
cli
int
pop
int3
test
mov
test
or
out
nop
push
pop
(bad)
stc
pop
and
push
outs
add
cld
ins
mov
jge
push
movs
xor
call
sbb
jo
cs
popf
jp
fdiv
mov
xor
test
shr
lahf
stc
inc
mov
xchg
mov
mov
adc
lds
mov
dec
int
sahf
aaa
mov
lock
mov
xlat
adc
repnz
into
mov
jae
je
mov
pop
das
fwait
cmp
hlt
in
or
dec
cmp
and
sub
in
call
push
jne
xchg
lds
inc
xchg
lahf
xor
push
hlt
mov
xchg
jmp
shl
mov
and
xchg
out
popf
inc
mov
dec
adc
inc
leave
add
add
pop
xchg
push
sbb
outs
add
iret
iret
pop
mov
jge
out
in
mov
out
cmps
pop
xor
outs
lods
(bad)
push
or
inc
iret
jle
loope
shr
inc
jnp
fiadd
enter
dec
sbb
mov
jp
mov
push
xchg
push
in
pushf
fldenv
(bad)
adc
xchg
cmps
inc
xor
loopne
fs
loop
adc
jmp
shl
lahf
fcom
cmps
mov
push
add
dec
jmp
pop
popf
jne
fisttp
call
push
cmps
push
mov
jecxz
shr
leave
or
call
out
xor
fisub
iret
fstp
cld
mov
fcmovne
ins
dec
ins
dec
inc
push
pop
(bad)
cli
and
dec
iret
shr
je
shr
push
push
dec
inc
loop
xlat
ret
jg
pop
adc
xchg
or
add
loope
mov
dec
push
aam
fcmovb
(bad)
fidiv
cmc
jmp
cld
les
adc
call
nop
sbb
mov
dec
push
ss
adc
repnz
jg
std
adc
movs
shr
sar
aas
and
ficomp
adc
fdivr
leave
ret
fisttp
cmp
ja
iret
in
jle
push
dec
inc
adc
lahf
mov
scas
mov
mov
out
retf
pop
inc
mov
out
push
jmp
jp
repz
add
outs
sbb
and
aad
mov
add
inc
add
aas
fld
out
adc
xor
scas
lahf
or
jmp
in
(bad)
repz
mov
test
ret
sbb
loop
inc
leave
sub
std
jl
into
xchg
push
xor
mov
mov
ins
push
cmp
xchg
pop
in
mov
sub
test
or
arpl
fs
gs
es
cmp
cmc
push
cld
jne
fnstenv
push
dec
imul
add
aam
clc
add
and
mov
mov
xor
pop
pop
or
int
fiadd
sbb
and
inc
into
mov
push
les
sub
sbb
shr
loope
(bad)
icebp
daa
inc
scas
or
daa
clc
arpl
sbb
iret
int3
pop
ss
(bad)
sti
adc
sbb
jp
xor
xor
jecxz
mov
arpl
mov
push
inc
pop
mov
lea
or
jecxz
repnz
push
cmp
push
add
and
imul
cmp
stos
sahf
rcl
adc
sub
(bad)
sbb
scas
and
or
dec
inc
ret
push
leave
jno
lods
dec
mov
pop
or
or
jle
mov
push
cmp
ficomp
ja
fadd
out
adc
or
jae
jmp
in
cwde
(bad)
mov
and
scas
mul
sub
movs
cmp
cmp
xor
les
stos
jns
lahf
inc
iret
rcr
cli
jmp
fldenv
(bad)
fdivr
aas
sub
ror
jno
xchg
jmp
sub
cdq
pop
std
mov
fwait
dec
jg
ret
fild
test
add
pop
inc
test
outs
mov
jb
rol
push
cmps
sub
jle
scas
mov
or
fimul
in
xchg
jmp
sub
into
or
icebp
jp
dec
daa
push
mov
push
movs
lds
out
cmp
adc
(bad)
push
jae
dec
xor
sbb
cmps
lea
xchg
ficomp
mov
out
in
mov
jnp
enter
xor
or
in
call
lahf
adc
mov
jbe
lods
or
cmp
or
jp
les
bound
test
fs
xchg
loop
jmp
fcomp
add
and
sbb
(bad)
aaa
cs
push
or
dec
sub
push
test
sti
clc
out
shr
jle
jecxz
ss
loop
cmps
mov
xor
sub
stc
les
add
repz
cwde
enter
call
mov
outs
mov
lock
mov
test
repz
cli
cmps
movs
xor
and
rcr
leave
dec
xchg
sub
cdq
mov
ins
pop
inc
mov
repz
stos
or
jae
hlt
out
and
mov
fmul
push
ins
out
jb
sub
push
xchg
std
pushf
inc
mov
popa
outs
push
popf
add
mov
ds
jmp
xchg
movs
inc
mov
pop
or
pop
mov
aas
das
aas
in
push
xchg
push
aam
pusha
adc
xlat
add
stos
push
in
mov
lahf
cmp
mov
test
nop
adc
dec
cmp
aas
out
arpl
repz
sub
add
scas
and
jp
aam
rol
jmp
mov
or
test
push
cmp
pop
inc
imul
adc
pop
cmp
fdivr
push
add
movs
cmp
cmp
or
or
je
jmp
dec
movs
xor
arpl
es
clc
pop
adc
dec
dec
or
popf
scas
jae
popa
push
push
xchg
mov
cdq
xor
clc
jl
lds
loop
jbe
loope
cdq
xchg
test
cmp
lods
mov
test
mov
or
xchg
cmp
mov
jo
cs
nop
clc
out
test
fmul
xchg
arpl
test
jp
lods
pop
pop
std
cmp
jbe
xor
inc
(bad)
mov
jno
gs
sbb
lods
inc
retf
outs
dec
or
and
cmc
loop
add
inc
pop
add
ins
scas
pop
and
inc
lods
pop
loop
mov
cmc
sub
add
add
cmp
cli
lahf
adc
(bad)
aam
cmp
dec
stos
pop
mov
push
jl
jne
add
mov
jns
and
repz
mov
mov
ror
adc
push
popf
ss
inc
cdq
in
add
ss
xor
adc
stos
mov
pop
and
iret
dec
push
nop
sub
ret
jl
idiv
outs
fidiv
or
gs
mov
call
loope
mov
push
mov
imul
jbe
add
cmp
retf
cmp
es
or
sbb
dec
iret
mov
xchg
add
call
jo
outs
(bad)
fadd
xchg
or
adc
je
add
cwde
sub
stos
jbe
out
dec
mov
mov
xor
jmp
loopne
and
and
scas
rol
and
cmp
sti
cmc
lods
(bad)
mov
rol
hlt
jge
movs
xor
sub
retf
imul
sahf
push
or
(bad)
push
lea
mov
inc
lds
mov
or
jge
add
test
lock
and
pop
call
push
mov
ror
je
jmp
je
push
mov
shrd
jp
fist
scas
sbb
sub
pop
push
scas
cdq
jae
dec
push
sbb
pop
pop
sahf
call
ret
mov
sbb
imul
outs
out
jo
stos
cmp
inc
nop
out
jmp
push
or
loopne
mov
(bad)
jne
adc
pop
and
rcr
in
and
jb
pop
mov
or
out
pop
mov
push
shl
add
retf
je
cld
and
popa
inc
in
pop
aad
and
xchg
cmps
mov
retf
sub
add
test
fmul
mov
ins
mov
(bad)
pop
sti
adc
cmp
mov
js
mov
sbb
in
(bad)
in
dec
inc
and
loopne
pop
inc
rcr
sub
aad
arpl
out
mov
popa
cdq
pop
push
adc
cmp
test
or
data16
pop
add
or
pop
sub
sbb
(bad)
imul
sbb
jge
aad
std
(bad)
(bad)
dec
xchg
xchg
jg
mov
mov
repz
loope
pop
dec
adc
mov
sbb
mov
mov
and
sahf
clc
sahf
dec
loopne
push
pusha
les
(bad)
mov
ja
js
adc
jg
(bad)
(bad)
cmps
add
daa
repnz
push
js
(bad)
cs
sub
xchg
clc
call
into
(bad)
das
aaa
mov
(bad)
dec
inc
jbe
daa
push
ret
dec
push
mov
add
dec
cmps
cmp
cdq
mov
fucomip
mov
fiadd
or
ja
mov
sbb
cmp
xor
(bad)
jp
add
data16
stc
ja
xchg
push
sbb
test
call
fistp
ret
sar
adc
out
sub
sub
and
ins
mov
hlt
out
mov
ss
retf
gs
shl
lea
cmp
sub
and
mov
push
cmp
cmp
xchg
imul
call
loope
nop
xchg
mov
xor
popf
and
lds
pop
or
sar
xchg
lea
in
inc
(bad)
call
mov
jbe
inc
or
loop
inc
cld
mov
sbb
lds
into
or
js
dec
out
adc
cmp
pop
lods
jno
pop
fdiv
cmp
movs
stos
call
pop
fst
daa
lods
cmp
push
sbb
sbb
jns
in
(bad)
mov
inc
into
out
or
mov
in
popf
shr
ret
add
sbb
retf
sti
xchg
imul
adc
xchg
mov
leave
sbb
jge
popf
xchg
jecxz
adc
cmp
push
adc
mov
cmp
popf
es
out
test
es
cmps
iret
es
xchg
pop
cmp
gs
and
int3
xchg
xchg
xchg
imul
iret
aaa
out
pop
adc
js
inc
cmp
(bad)
fisubr
dec
fdiv
jge
rcl
jb
add
add
pushf
or
retf
mov
(bad)
mov
add
push
xchg
and
lahf
mov
fwait
lahf
mov
(bad)
add
in
and
clc
es
xchg
clc
sbb
out
ja
in
pop
mov
mov
jns
dec
inc
add
pop
lods
ret
and
lea
xor
movs
sbb
adc
sub
or
fs
jno
loop
mov
(bad)
push
das
xor
inc
xchg
cmp
in
jbe
idiv
jbe
cmp
push
aad
dec
xchg
adc
push
rcl
mov
nop
xchg
push
inc
push
mov
xchg
mov
adc
ja
call
jbe
inc
sahf
cmps
stos
out
add
rcr
mov
and
popf
scas
jae
cwde
xor
jl
add
icebp
and
mov
je
ret
test
fsubr
push
das
pop
js
xor
test
or
fisttp
fimul
call
sti
dec
dec
pop
fld
enter
scas
ja
int
stc
pop
bound
test
or
scas
sbb
add
mov
cmp
aas
mov
mov
cs
adc
or
cmp
dec
shl
pop
ins
jb
(bad)
sbb
stos
jg
inc
push
adc
mov
jmp
inc
aad
mov
hlt
les
call
xor
or
push
cli
sub
aas
inc
shr
mov
jg
inc
mov
and
push
xor
outs
(bad)
sbb
mov
push
cli
or
inc
out
sub
mov
xchg
gs
movs
outs
pop
jae
push
loopne
pusha
icebp
cmp
cmc
lods
push
cmp
xchg
sahf
aam
and
sbb
shr
pop
movs
jne
inc
mov
les
push
fld
scas
inc
pop
mov
lds
push
cwde
inc
sbb
inc
jg
movs
loopne
and
push
or
(bad)
pop
sub
popa
mov
mov
jno
push
fldcw
sub
loope
xchg
jo
jp
sub
outs
pop
mov
shl
test
aad
jbe
mov
lods
punpcklwd
adc
sbb
popa
clc
mov
mov
pop
adc
inc
cwde
jmp
loop
push
out
stos
sahf
jo
lods
fsubr
fdivr
xchg
lods
dec
sub
loop
cmps
bound
repnz
repnz
fs
inc
inc
push
cmp
mov
movs
rcr
mov
out
sub
arpl
xchg
scas
xor
jg
add
cmp
add
jmp
jmp
fcomip
icebp
add
std
(bad)
or
xor
xor
lock
jae
jp
xchg
scas
cmp
leave
leave
or
xchg
jbe
sub
inc
pop
std
push
jo
xchg
xor
stos
call
pop
pop
mov
or
pop
retf
pop
push
fstp
pop
pop
dec
or
inc
push
add
enter
stos
pop
add
inc
test
fstp
mov
mov
push
movs
or
cmp
ds
leave
jle
(bad)
push
xchg
fcomp
loope
inc
pop
pop
loopne
sar
mov
or
paddsb
xor
repz
xor
or
sbb
jmp
sbb
jg
sub
and
mov
(bad)
mov
pop
xchg
push
jno
fcom
sbb
inc
inc
rcl
push
cmp
repz
sbb
mov
daa
outs
or
pop
cmp
jns
sub
and
pop
daa
cmp
icebp
test
pushf
cmp
repz
dec
push
jb
nop
(bad)
movs
stos
mov
add
mov
(bad)
pop
stos
fidiv
jecxz
fcom
mov
sub
pop
cmps
js
test
fstp
gs
cmps
call
daa
cmps
nop
push
fdiv
jge
mov
call
sti
push
mov
adc
jae
inc
and
fistp
jl
imul
jg
shr
xchg
pop
iret
sub
ret
ret
adc
mov
mov
push
jne
lock
add
movs
and
sub
outs
addr16
add
in
lods
stos
xor
(bad)
add
mov
jo
cmp
leave
retf
dec
ds
sub
into
lods
mov
pop
cmp
sar
ja
push
mov
jns
lods
and
fidivr
popf
or
ins
cmp
ds
dec
cmp
xor
lods
adc
pop
(bad)
mov
clc
retf
cld
pop
add
sub
mov
adc
ror
lock
sahf
xchg
mov
or
pop
lods
out
inc
dec
xchg
clc
push
ins
repz
and
xchg
ret
mov
jno
mov
push
test
cmp
in
(bad)
fist
icebp
sub
mov
(bad)
mov
dec
pop
xchg
mov
cmp
and
(bad)
sbb
jecxz
ss
pop
cli
adc
ins
xchg
and
mov
in
mov
int
inc
cmp
cmp
add
sbb
je
mov
shl
xor
nop
lea
sub
jmp
(bad)
or
push
in
or
arpl
arpl
mov
lods
lahf
adc
lock
add
ja
and
jae
add
ins
pop
pop
add
push
mov
cs
cwde
repz
in
sti
js
(bad)
test
rcr
out
jecxz
mov
scas
sub
idiv
xchg
push
mov
dec
mov
aad
push
jo
out
cmp
mov
addr16
call
movs
bnd
es
shl
test
pop
movs
popa
lods
jmp
cmp
cmp
test
or
mov
jge
test
mov
mov
xchg
cwde
fld
add
pop
push
dec
sar
xchg
pop
sub
cmp
dec
adc
in
js
enter
dec
jns
pop
xchg
push
sub
(bad)
in
lock
mov
push
jb
mov
inc
jb
adc
aam
lock
jp
dec
outs
or
cmps
cpuid
mov
pop
dec
int3
sub
inc
jne
mov
pop
pop
scas
mov
hlt
pop
enter
mov
jbe
call
rcr
pop
sub
mov
inc
ja
enter
(bad)
xchg
push
jbe
stc
repz
mov
mov
sbb
add
adc
rcr
adc
mul
jg
ds
jecxz
fisttp
out
out
dec
test
pop
pop
sub
and
mov
lsl
out
jle
push
jnp
xor
jnp
jae
push
movs
cld
xlat
inc
daa
jp
cmps
lds
push
(bad)
xor
xchg
aam
nop
in
seta
inc
sub
pop
fs
jp
sbb
popa
sub
bound
dec
pop
(bad)
int3
cmp
push
lods
iret
popf
jge
std
outs
mov
not
les
inc
fmul
cmp
jecxz
and
(bad)
std
fsubr
out
add
aam
ret
jbe
sahf
shr
imul
push
in
adc
add
pop
fild
mov
shl
mov
jno
push
cmp
aas
(bad)
arpl
sbb
mov
sbb
dec
arpl
lea
loop
std
or
ja
jne
and
int3
mov
cli
xor
fs
jno
and
mov
(bad)
or
or
call
sbb
push
test
xor
dec
imul
jbe
or
push
jo
ret
cmp
dec
ja
or
add
xchg
inc
xchg
jle
stos
imul
ins
add
lock
das
repz
mov
ss
shr
sub
sbb
(bad)
div
push
mov
lods
adc
inc
pusha
les
push
cwde
clc
mov
mov
cwde
mov
inc
xlat
xchg
fisub
jae
mov
lea
imul
xor
cmps
loope
(bad)
lock
mov
mov
or
adc
cwde
ror
into
and
mov
dec
shld
push
inc
mov
ja
ss
and
fstp
retf
dec
or
aas
cmp
pop
xchg
loope
xchg
xor
test
jnp
les
stc
mov
xor
adc
pop
sub
sar
aas
inc
push
fs
jecxz
jns
pop
inc
mov
pushf
mov
popf
(bad)
xchg
fstp
pushw
test
sub
push
dec
push
xor
jmp
cmc
inc
mov
fs
ret
shl
popf
cmp
sti
fiadd
repnz
sahf
scas
sahf
not
jnp
adc
jp
pop
jo
pop
nop
mov
mov
mov
adc
xor
into
lods
popa
mov
sahf
adc
fistp
or
mov
jbe
aas
fisubr
mov
inc
inc
add
(bad)
or
jge
popf
sub
push
inc
test
scas
lds
test
aad
retf
and
xchg
loopne
jle
inc
aas
icebp
add
imul
xchg
adc
mov
cdq
and
sub
dec
adc
push
iret
add
or
add
jb
sub
inc
jmp
jns
push
and
or
mov
sub
data16
and
cdq
enter
dec
mov
(bad)
sti
cmp
xchg
dec
mov
inc
sbb
push
jge
call
or
jb
mov
mov
call
mov
dec
or
ja
or
inc
mov
mov
ss
sub
jp
js
data16
lock
mov
(bad)
cmp
or
pop
inc
dec
(bad)
and
jno
data16
cmp
out
and
hlt
jo
nop
cs
(bad)
mov
sub
sar
repnz
iret
jbe
fwait
sar
jne
inc
xchg
dec
adc
pop
jl
mov
add
std
xor
movs
add
add
aad
mov
inc
aam
pop
cmps
jnp
movs
inc
cmps
dec
mov
jno
js
cmps
jo
mov
jp
scas
(bad)
fidiv
adc
mov
push
xor
out
jge
es
adc
xor
cmp
cmps
and
xchg
mov
fild
stc
sar
push
jnp
jecxz
ja
call
add
and
ret
cmp
fprem
fs
(bad)
mov
jbe
pop
ret
outs
fsubr
jno
clc
stos
or
hlt
dec
enter
scas
push
add
jl
xchg
in
xchg
int
shr
xchg
(bad)
and
pushf
inc
adc
cmp
jb
popf
(bad)
scas
push
(bad)
jmp
sbb
(bad)
push
test
cwde
mov
push
(bad)
adc
ja
clc
adc
dec
cli
inc
jno
mov
mov
push
jl
les
pop
inc
and
jl
add
sbb
js
adc
mov
push
xor
xchg
sar
clc
dec
xchg
sti
cmp
stos
arpl
jb
imul
sub
(bad)
jmp
xchg
push
stos
inc
pusha
pop
dec
out
je
pop
or
dec
ins
in
stos
xchg
in
daa
pop
mov
or
inc
mov
clc
pop
aam
push
push
out
in
or
dec
mov
das
xor
clc
jns
cmc
aad
movs
jp
inc
jmp
cmp
jp
adc
repz
inc
sub
pop
or
or
fadd
in
dec
jp
cwde
dec
mov
(bad)
out
xlat
repnz
out
sbb
cs
mov
mov
shr
pop
arpl
loope
out
lds
ror
or
push
sub
push
les
test
mov
call
xor
mov
jns
mov
lds
mov
mov
ins
in
retf
fcom
and
loopne
mov
inc
bound
sbb
iret
and
lahf
mov
test
hlt
push
retf
dec
xor
push
imul
loope
jb
xlat
icebp
mov
push
ins
jae
jo
data16
(bad)
push
inc
mov
and
out
shr
pop
stos
outs
inc
and
call
sbb
add
pop
ss
or
out
lahf
xor
hlt
repz
adc
clc
scas
adc
xor
jmp
adc
addr16
es
sbb
sub
and
movs
jno
dec
das
aas
in
inc
jnp
test
cmp
mov
xchg
je
leave
pop
sub
jne
xor
mov
std
lods
mov
mov
xor
dec
xchg
jmp
adc
xor
cmp
mov
pusha
lahf
mov
fidiv
out
fdiv
mov
enter
sub
push
dec
dec
(bad)
pop
add
push
jl
adc
aas
stc
dec
gs
outs
mov
ds
sub
inc
fdivrp
pop
inc
dec
dec
lea
dec
ret
xlat
stos
sahf
cmc
jmp
or
out
push
push
add
mov
mov
imul
inc
mov
fs
rol
xchg
mov
mov
or
sti
ss
adc
mov
out
dec
ror
adc
and
mov
xchg
sbb
xchg
stos
(bad)
mov
movs
pop
pop
and
xor
cmp
fist
xchg
pop
inc
shl
jns
or
loopne
mov
(bad)
fs
out
outs
add
push
mov
cwde
int
adc
pop
xlat
and
repz
adc
sub
lods
(bad)
pop
jecxz
adc
add
stos
imul
in
cmp
retf
inc
xchg
pop
jo
dec
cld
mov
test
pop
push
call
jnp
rcr
jecxz
mov
aaa
mov
cmp
adc
gs
sbb
sub
(bad)
fnstenv
mov
xlat
sub
xchg
and
shl
movs
add
mov
test
imul
iret
imul
pop
inc
mov
bound
lods
cmp
ins
sub
bound
mul
in
push
push
inc
jne
lahf
ror
aaa
fimul
fbstp
sbb
sub
bound
xchg
icebp
stos
mov
test
fs
xchg
fadd
push
cmp
jbe
lsl
jnp
and
fimul
fmul
pop
mov
jne
ret
inc
loope
sub
mov
pop
or
cmp
and
ret
jmp
inc
jmp
fucomi
xchg
dec
out
push
mov
mov
(bad)
(bad)
adc
xor
jbe
jl
ret
ret
adc
dec
cmp
jp
outs
and
stos
jb
push
cmps
xchg
mov
or
int
mov
cdq
jecxz
ins
clc
add
mov
jae
xchg
cmp
xor
pop
test
push
lods
stc
push
les
shl
scas
xor
push
mov
push
push
sar
jne
jae
inc
xchg
or
cs
pop
or
jmp
lods
mov
pop
xchg
pop
daa
add
cmp
and
ja
add
ror
dec
mov
lock
cmp
xor
out
jmp
outs
mov
and
or
test
loopne
es
int
sti
lahf
dec
push
xor
imul
xchg
inc
mov
sti
les
push
jl
push
into
fs
in
ins
fldenv
mov
ins
pop
inc
and
inc
cmc
and
aam
out
mov
push
sub
mov
stc
adc
mov
and
int3
adc
das
pop
and
dec
mov
iret
neg
pushf
adc
(bad)
jecxz
out
sub
push
add
test
dec
inc
add
iret
es
outs
pop
sahf
sbb
int3
jnp
clc
add
jmp
or
and
dec
mov
dec
repz
pop
mov
test
mov
data16
ret
push
adc
in
hlt
mov
and
pop
xchg
stos
adc
mov
fisubr
cmc
hlt
sub
pop
sub
(bad)
fs
mov
dec
mov
dec
clc
(bad)
shl
adc
aad
push
or
into
out
push
xchg
inc
ds
or
ins
xchg
addr16
xor
in
sbb
(bad)
mov
iret
mov
pop
mov
fdiv
jns
nop
or
loop
mov
pop
xchg
sbb
dec
ret
add
and
jecxz
(bad)
mov
es
inc
inc
inc
into
fsub
test
jno
sbb
mov
cmp
mov
adc
add
push
clc
xor
call
test
ret
call
jle
(bad)
jb
pop
xchg
dec
xlat
dec
add
rcr
sub
jl
(bad)
jmp
leave
cdq
mov
mov
mov
add
xor
repz
mov
and
dec
xor
popf
rcr
out
in
inc
push
fisttp
jno
popf
adc
xor
leave
mov
sbb
pop
(bad)
adc
inc
xchg
aam
sbb
pushf
int3
retf
inc
(bad)
sbb
lea
out
push
leave
inc
sbb
test
lahf
add
fcmovnu
lods
outs
inc
cmp
out
bound
movs
sbb
jne
outs
dec
adc
sub
lock
in
adc
popa
jae
out
inc
mov
xor
and
rcr
pop
adc
push
mov
shl
mov
jns
jecxz
(bad)
and
cmps
lea
test
sub
mov
gs
js
inc
sbb
data16
pop
sti
mov
in
int3
or
(bad)
xor
movs
add
and
aad
lods
enter
les
mov
mov
jge
(bad)
das
dec
(bad)
dec
adc
in
cmp
xchg
hlt
ins
push
(bad)
adc
pop
push
pop
inc
push
and
inc
cmp
hlt
cs
in
gs
test
adc
pop
dec
add
stos
pop
daa
mov
dec
rep
cld
or
ret
(bad)
jmp
fcomp
xchg
mov
xor
sbb
imul
add
xchg
outs
test
push
pop
aaa
pop
jle
mov
xor
jmp
pop
daa
jo
(bad)
shl
push
add
cmp
popf
sbb
and
cmp
dec
pop
jl
sbb
push
fsubp
lds
and
fimul
stos
jb
gs
pop
rcr
xor
xor
inc
xor
push
push
int
adc
sti
add
sbb
ins
clc
mov
mov
cmp
fsubr
jno
pop
sub
fistp
mov
shl
in
mov
jns
sub
mov
into
cmp
pop
and
cmps
stos
daa
rcr
lea
cmc
hlt
mov
(bad)
call
aad
mov
call
das
data16
aaa
jg
sti
lea
jmp
xchg
bound
call
mov
call
stos
push
jae
test
mov
push
into
in
add
shl
and
mov
sbb
les
cdq
adc
cdq
test
movs
lds
jne
xchg
add
mov
mov
aaa
add
outs
aam
ins
mov
xchg
loop
sahf
xlat
xchg
xor
and
out
pop
aas
rcr
dec
cmps
retf
hlt
push
mov
inc
int
pop
adc
and
adc
fiadd
and
nop
mov
and
sbb
addr16
mov
scas
aam
and
scas
xchg
leave
pushf
pcmpeqd
xor
(bad)
out
lods
fnsave
and
retf
je
dec
push
int3
aam
mov
lods
push
aas
lahf
xor
je
cmp
sub
push
jmp
in
mov
mov
mov
(bad)
retf
dec
push
in
fucomi
sbb
cmp
add
test
mov
aad
mov
arpl
mov
cmps
xchg
cmp
hlt
cmp
xor
fcmovu
scas
lock
xor
pop
add
cmp
add
xchg
pop
bound
in
xlat
jl
clc
dec
mov
mov
sub
leave
jmp
call
xchg
cmp
rol
ror
mov
or
enter
cwde
ret
pop
aad
in
in
je
lods
inc
std
mov
iret
and
add
jmp
arpl
shl
(bad)
out
sbb
into
add
jge
int
js
pop
loop
loope
mov
ins
xor
fdivp
repnz
mov
and
ds
jmp
xchg
pop
xchg
push
mov
into
cmps
adc
and
sar
jle
adc
fist
(bad)
repz
fcmovu
dec
scas
push
int
xor
int
scas
lock
test
jo
pop
(bad)
loopne
test
int
int3
add
or
pop
mov
pop
fnstsw
in
not
cmp
(bad)
data16
and
mov
ret
les
pusha
mul
push
lock
ret
sbb
or
jae
add
push
test
lock
fimul
sub
out
lods
lahf
cwde
or
pop
and
sbb
loope
stos
push
sbb
add
loopne
(bad)
cmp
fisub
sbb
mov
dec
fs
jns
loopne
lea
shl
push
out
scas
mov
jnp
dec
dec
stos
xchg
mov
mov
test
sbb
jl
jo
call
push
jne
movs
ss
retf
add
add
ins
pop
mov
ret
test
sbb
test
mov
ins
lods
addr16
sub
lods
and
(bad)
(bad)
outs
push
lods
mov
aaa
cmps
push
int3
mov
rol
cli
ucomiss
jl
sbb
(bad)
cs
mov
cwde
mov
into
jmp
xor
mov
es
xlat
ja
stc
push
dec
dec
lahf
xor
std
pop
inc
inc
cmps
sbb
lds
xchg
dec
loop
or
jbe
dec
adc
out
sti
arpl
jg
mov
push
loop
push
xor
mov
js
inc
retf
adc
adc
mov
pop
ss
ret
lds
les
inc
add
jl
nop
add
cli
adc
addr16
sbb
fucomi
xor
icebp
lock
mov
jl
sbb
and
dec
cmp
into
jno
cs
cmps
(bad)
(bad)
ins
movs
mov
ds
push
mov
lahf
imul
dec
dec
mov
stos
sub
dec
cmp
imul
jo
or
test
cmp
shl
inc
cmp
arpl
mov
inc
outs
push
mov
lods
retf
stos
inc
mov
retf
dec
loope
cs
sahf
iret
xchg
inc
adc
xor
add
jbe
nop
and
imul
and
add
into
adc
(bad)
fcom
fsubr
gs
sub
loop
pop
mov
mov
stc
inc
inc
dec
cmc
or
xchg
mov
jp
sbb
mov
jl
xchg
mov
div
lock
(bad)
outs
cld
test
xchg
xchg
cwde
cmc
das
jg
adc
jge
shr
push
das
dec
pop
je
sbb
push
push
scas
fwait
aaa
hlt
dec
mov
push
adc
mov
shl
jb
jmp
adc
or
jbe
and
and
mov
mov
xchg
(bad)
dec
ins
mov
pop
loopne
push
xor
mov
sub
xchg
fcom
lock
aad
or
mov
dec
ret
cmc
sbb
leave
fld
inc
int
cmps
les
test
popa
loopne
into
mov
inc
ror
js
aam
push
add
int3
daa
mov
(bad)
inc
lahf
call
and
icebp
out
rol
adc
mov
cmp
push
movs
and
dec
xchg
(bad)
xchg
sahf
and
inc
pushf
movs
in
stos
ja
xchg
retf
sub
xor
push
(bad)
stc
shl
add
lods
push
adc
jmp
mov
xchg
jge
repz
pushf
in
shl
and
imul
or
sbb
icebp
mov
xor
ficomp
sar
jecxz
or
mov
lahf
sti
pop
xchg
pop
dec
or
push
pop
xchg
xor
(bad)
push
xor
push
jecxz
and
xor
or
dec
push
stos
ret
lock
add
xchg
mov
sbb
(bad)
ror
and
sbb
inc
imul
jg
aam
outs
jl
mov
pop
jecxz
fs
xchg
dec
arpl
test
pop
ss
mov
xor
inc
push
sub
cmc
pop
repz
push
fmul
imul
push
add
xor
ror
cmp
(bad)
out
dec
fsubr
sbb
jecxz
push
fdiv
pusha
cs
test
lds
jno
cmc
jle
xchg
ss
rep
int
dec
pushf
outs
add
add
mov
mov
push
jmp
cmps
adc
mov
and
fidiv
loopne
mul
pop
and
dec
scas
push
cmps
mov
lds
adc
cmp
rol
out
int
or
and
mov
push
push
cwde
xchg
stc
pop
sahf
jmp
xor
sbb
lea
or
pushf
fcomip
mov
inc
inc
arpl
mov
outs
std
dec
imul
fmul
xchg
pop
adc
cli
cld
mov
sbb
add
aad
pop
dec
cmp
mov
aaa
mov
test
(bad)
outs
jecxz
mov
cmp
adc
cmp
or
icebp
ret
fnstsw
aad
sar
imul
adc
pusha
sub
lock
ficom
mov
(bad)
fld
adc
mov
sbb
lods
loopne
sahf
outs
mov
mov
in
mov
mov
or
or
ret
jae
add
orps
addr16
xchg
mov
popf
dec
repz
retf
dec
out
mov
adc
retf
and
call
sahf
mov
addr16
dec
dec
mov
sar
sbb
push
jecxz
xchg
push
jg
stos
inc
inc
test
jmp
pop
inc
cs
(bad)
les
test
and
xchg
popf
dec
sbb
outs
mov
sbb
add
cmc
xchg
lea
sub
(bad)
push
(bad)
xchg
jle
nop
outs
js
gs
push
mov
jae
mov
mov
sbb
imul
dec
cmp
clc
cdq
dec
repnz
mov
test
or
sbb
mov
mov
ss
shl
push
inc
xchg
or
movs
mov
daa
sti
add
push
or
cmp
ds
pop
or
pop
(bad)
lods
sti
imul
dec
ss
add
dec
mov
pop
cmps
xchg
aas
xchg
fsub
add
jg
jo
pop
jle
sub
mov
(bad)
or
ret
add
leave
xchg
and
stos
pushf
je
icebp
ret
inc
cdq
aas
inc
push
fldcw
mov
ss
inc
ins
movs
fstp
xchg
jns
loope
mov
mov
inc
jl
push
std
inc
ss
sbb
pushf
leave
shl
sub
cdq
mov
mov
and
sbb
shl
jno
or
into
inc
outs
cmps
sub
mov
fmul
retf
ror
dec
mov
push
enter
pop
loop
(bad)
pusha
push
pop
jg
add
cmps
imul
je
adc
data16
or
(bad)
pop
int
leave
xchg
addr16
add
sbb
adc
nop
fst
outs
arpl
pop
popf
in
xchg
clc
fwait
xchg
and
gs
cmp
mov
jmp
inc
movs
repz
jp
mov
pop
sub
into
add
les
mov
dec
out
call
dec
in
pop
repnz
mov
mov
pop
cmps
inc
dec
retf
inc
or
cmc
xchg
mov
in
or
addr16
pop
add
adc
and
mov
sahf
mov
ficom
pop
fimul
jne
cmp
ja
dec
popf
jno
lods
jmp
loopne
enter
stos
xchg
stos
jp
arpl
mov
pop
xor
data16
in
nop
ror
fldenv
daa
ret
bound
mov
(bad)
pop
inc
cld
jmp
jmp
out
or
rol
jae
push
mov
mov
lods
mov
fisub
adc
adc
sar
dec
sbb
pop
jmp
cdq
jo
mov
int3
sub
cmc
xor
in
aas
addr16
and
fdiv
mul
ret
pop
or
sar
dec
out
pushf
xchg
aam
outs
push
aaa
repnz
pop
mov
imul
push
test
mov
or
pop
fadd
lock
push
push
into
nop
pop
pop
push
cmps
lods
lahf
push
mov
in
scas
adc
shr
jbe
retf
sub
stos
repz
push
cmps
arpl
xor
add
cmps
mov
retf
into
mov
or
repnz
movs
aaa
shr
cmp
xor
mov
call
and
data16
lds
jg
sti
lea
bound
pop
mov
call
mov
push
sbb
xchg
outs
mov
imul
sbb
les
ja
mov
inc
dec
sub
cmp
das
fimul
mov
jbe
cwde
(bad)
loopne
inc
xor
pop
retf
add
fcom
jbe
xchg
into
jb
lods
mov
jl
sub
xlat
ins
mov
xchg
out
enter
sbb
push
sub
lock
icebp
stos
(bad)
mov
push
xchg
movs
mov
add
mov
lea
ja
jmp
xchg
push
(bad)
stc
push
shl
call
out
lea
repz
add
sbb
pop
(bad)
ss
mov
push
add
jp
pop
out
cld
inc
cmps
push
or
(bad)
retf
xor
pavgw
addr16
(bad)
jmp
outs
out
pusha
mov
loop
adc
ss
mov
inc
mov
fisubr
outs
cmp
ins
sbb
jne
sar
jl
jne
xor
xchg
sbb
push
ins
stos
jmp
std
mov
fwait
adc
sbb
pop
jbe
xor
mov
xor
bound
test
movs
sbb
mov
jne
or
push
loop
nop
sub
jge
ja
and
xlat
mov
mov
repz
stos
xchg
(bad)
iret
xchg
jle
cmp
and
rcl
pop
and
mov
add
shr
lea
fisttp
pop
jae
aaa
bound
(bad)
cmp
mov
dec
test
adc
push
dec
pop
loop
mov
jmp
out
(bad)
call
add
out
dec
jnp
inc
icebp
xchg
push
lea
aad
sub
mov
ss
popf
call
inc
scas
xchg
vmread
stc
inc
sbb
push
stc
lea
cld
adc
xchg
add
dec
sbb
mov
inc
(bad)
adc
xchg
and
xor
cmp
jecxz
cld
sub
mov
mov
sub
mov
ror
scas
adc
pop
jns
sub
pop
fld
and
ror
ins
push
div
adc
rcr
push
jne
leave
and
jb
ss
mov
das
popf
sub
mov
sbb
mov
xchg
ret
xchg
jne
pusha
popf
ds
mov
push
popa
adc
popa
mov
ds
mov
push
pusha
mov
mov
add
inc
loopne
cmp
loope
bound
popa
or
test
inc
jl
push
pminub
jns
mov
jnp
or
shl
mov
in
aas
mov
mov
adc
shr
adc
retf
int3
mov
iret
mov
push
add
push
cli
mov
loopne
push
aaa
and
(bad)
mov
pop
clc
(bad)
jnp
adc
sbb
or
sti
cmps
push
mov
xchg
lods
jb
and
aaa
mov
popf
int
sbb
xor
ja
or
jl
and
stc
sbb
push
add
push
mov
retf
div
cmps
ret
imul
cmp
aad
(bad)
mov
pushf
jne
mov
retf
es
enter
and
xchg
icebp
lods
out
fiadd
shl
popa
pop
ja
test
mov
arpl
movs
jp
adc
xor
xchg
aas
test
mov
push
pusha
cmp
mov
jne
push
and
push
outs
xlat
push
pusha
adc
ins
mov
sub
adc
imul
dec
and
aas
and
inc
aam
rcl
icebp
popf
cdq
cmc
inc
pop
jne
sub
mov
add
xlat
inc
cmp
enter
aad
sub
pusha
repnz
pop
mov
(bad)
push
lock
jo
dec
(bad)
ret
push
and
mov
ffreep
ja
into
add
scas
es
jns
mov
xor
mov
call
sti
cmp
daa
shr
test
cli
rcl
and
jns
fld
je
add
mov
lods
data16
cwde
mov
sub
movs
inc
and
and
sub
and
je
sbb
or
sbb
pop
cs
int
test
mov
enter
and
sub
push
cmp
out
in
jge
aas
mov
cmp
out
(bad)
jmp
xor
sub
jge
xchg
imul
test
mov
or
sbb
scas
(bad)
ds
ss
dec
add
dec
dec
push
lds
ret
in
in
mov
push
out
idiv
dec
mov
mov
inc
rcr
call
jecxz
dec
sub
or
xor
push
push
inc
xchg
sub
add
inc
xchg
aad
pop
mov
shl
sbb
cwde
cmp
jle
test
adc
bound
cld
xlat
stos
jl
xchg
js
or
push
loop
jmp
pusha
mov
into
add
repnz
shl
and
mov
push
dec
jae
lods
stos
xchg
cmp
adc
mov
dec
popf
lock
xchg
mov
mov
adc
pop
dec
lock
xchg
and
rcr
sbb
xchg
pop
sbb
jle
pop
leave
cmps
sub
or
lds
data16
jnp
hlt
test
push
aad
je
dec
add
data16
fimul
xchg
out
mov
loop
inc
xchg
pop
jg
jne
pop
add
push
jno
imul
jl
sub
fmul
jae
inc
test
jns
push
and
pop
cwde
movs
jle
pop
mov
shl
jmp
hlt
cmps
popf
test
loope
and
mov
mov
dec
call
in
pop
lock
dec
icebp
pushf
cli
sub
outs
and
sbb
stos
not
inc
fs
xchg
and
cmp
retf
adc
pop
push
xor
data16
mov
ror
mov
stos
sub
test
cmc
les
inc
js
sbb
(bad)
or
and
xchg
cld
xchg
mov
out
pop
jmp
mov
loop
test
das
ficom
popa
cs
jecxz
sub
lds
out
adc
mov
ror
js
dec
cli
lods
sbb
repz
cli
sub
cmps
push
and
xchg
test
aas
xchg
in
scas
push
test
call
mov
push
sbb
xor
outs
ins
jns
jmp
mov
popf
stc
aad
dec
jmp
lahf
(bad)
mov
mov
inc
mov
xor
inc
cs
aas
rcr
aas
sar
pop
xchg
adc
mov
jg
jle
cld
aam
xor
movs
retf
ret
pop
bound
in
lods
addr16
or
or
scas
pop
and
into
icebp
mov
jnp
aas
push
xchg
sub
and
nop
out
outs
arpl
les
dec
or
sub
fwait
jl
mov
call
jae
fdiv
jbe
lods
or
(bad)
imul
inc
pop
sbb
clc
fwait
in
lahf
cmp
and
cld
in
or
lahf
ja
xchg
cdq
es
scas
adc
or
mov
(bad)
inc
std
(bad)
scas
jl
bswap
mov
movs
adc
sub
xor
dec
fisubr
arpl
ror
loopne
lds
lds
test
xor
cmp
xchg
push
out
test
lahf
inc
cmps
adc
push
popa
inc
cmp
xchg
ret
icebp
test
push
jmp
jo
js
xchg
or
into
(bad)
or
pusha
xchg
jbe
test
cmp
jmp
das
xchg
mov
xchg
sbb
or
mov
xor
(bad)
sub
sbb
sub
retf
call
cmp
cmp
pushf
stc
sbb
ins
clc
(bad)
xor
jmp
jae
pop
pushf
loope
pop
pop
aas
int
mov
in
pop
jg
cs
pop
fidivr
jae
jnp
push
fdivr
inc
fwait
dec
xchg
or
sbb
add
mov
sbb
mov
mov
mov
ins
aas
xor
sahf
test
xchg
cmps
sub
jb
mov
(bad)
fisttp
mov
xchg
sub
add
repnz
ds
cwde
imul
jae
jp
(bad)
xor
adc
jmp
cs
jge
das
pop
jbe
pop
add
sbb
test
sbb
xchg
lods
mov
popf
call
bnd
dec
push
xchg
xchg
xchg
mov
mov
in
idiv
add
mov
xchg
xchg
test
sti
cmc
stos
scas
sub
ins
bnd
mov
and
cld
push
push
test
inc
sar
je
rep
sbb
mov
pop
jmp
(bad)
hlt
cdq
cdq
das
jge
mov
push
lds
mov
fstp
out
fwait
loopne
jle
popa
lods
or
les
sahf
arpl
jb
push
movs
ret
movs
popf
jmp
inc
imul
push
inc
inc
stos
jo
mov
nop
cmc
mov
movs
popa
jecxz
pop
adc
or
mov
sbb
inc
fwait
sbb
je
push
or
xor
or
sub
adc
pop
int
clc
dec
cmps
fisub
mov
mov
(bad)
lock
mov
not
clc
rol
jge
jne
push
fnstenv
sub
jne
popf
push
shl
and
pop
sbb
inc
addr16
xchg
test
ins
jno
test
loope
int
xchg
jo
dec
retf
fst
retf
inc
pop
or
cmp
pop
cmc
adc
jmp
inc
jp
adc
into
ds
cmp
pop
xor
int3
stc
cmp
fcomp
adc
mov
in
into
mov
test
pop
(bad)
jns
aad
xchg
dec
sub
xchg
sbb
leave
test
popa
(bad)
faddp
je
or
cwde
jbe
adc
mov
push
push
mov
ins
sbb
jg
dec
clc
or
out
pop
xchg
cmp
and
in
call
push
repnz
push
shl
xlat
sbb
and
sub
(bad)
jb
sar
xchg
push
aam
xor
pop
mov
fcmovu
jo
mov
lock
in
out
ret
fisubr
xchg
sbb
pop
popa
mov
sub
ficom
in
clc
call
xchg
and
mov
(bad)
pop
inc
inc
cvttps2pi
in
ds
sub
mov
mov
cmp
idiv
stc
aad
(bad)
or
fistp
neg
retf
mov
(bad)
jno
rol
loop
lock
sbb
cld
dec
ins
retf
sub
loope
cdq
adc
repnz
jae
call
(bad)
xchg
mov
das
inc
test
aaa
mov
in
mov
inc
ss
neg
cmc
xor
cmp
fidivr
mov
dec
out
test
add
jmp
dec
mov
(bad)
inc
xchg
jb
jle
and
shl
inc
dec
mov
mov
pop
out
std
push
shl
jmp
jp
cmp
jns
dec
sar
enter
lahf
pop
loopne
(bad)
movs
loopne
xlat
cmp
sub
mov
frstor
gs
sub
pop
stc
xchg
cmp
and
std
adc
repnz
js
sbb
pop
scas
sub
stos
ja
xchg
mov
jp
push
iret
dec
mov
mov
mov
arpl
gs
mov
adc
in
sbb
in
mov
fadd
jbe
fwait
jno
and
add
into
aam
fwait
add
pop
fcomp
and
(bad)
adc
stos
lock
sar
popa
popa
mov
movs
jg
add
jo
push
sbb
push
or
pop
cmp
dec
sub
xor
call
sti
sbb
push
sub
sub
imul
mov
in
jbe
or
rcr
iret
xchg
stos
jnp
push
sub
push
dec
popf
mov
mov
lods
add
mov
sahf
mov
aam
or
out
movs
pop
out
xchg
push
xchg
mov
pop
mov
(bad)
lea
sar
xchg
mov
(bad)
ror
mov
fist
fild
xchg
push
stc
xor
push
je
cmp
and
pusha
data16
movs
cmp
daa
cmps
and
inc
adc
call
(bad)
jg
fdivr
pusha
fiadd
push
jle
mov
rol
movs
loopne
popf
movs
cwde
fs
push
mov
adc
jmp
imul
test
add
cs
xchg
aas
lods
or
or
dec
mov
ins
(bad)
pop
cmp
cwde
leave
pop
iret
mov
jo
aas
push
data16
aaa
arpl
inc
mov
pop
lods
sbb
dec
es
fdiv
ins
mov
pop
pushf
mov
adc
test
rcr
inc
jle
dec
int
add
lea
gs
and
xor
fst
sbb
pop
push
ficomp
scas
cs
ss
test
pop
xor
call
push
mov
out
inc
mov
stos
int3
xor
sub
(bad)
jl
rcl
fst
dec
in
fcom
jmp
inc
scas
sub
cdq
push
ins
test
push
mov
dec
out
cli
test
pop
mov
rol
inc
or
daa
mov
sbb
imul
sub
outs
in
out
xchg
adc
ins
push
and
movs
movs
test
out
cld
inc
pop
fadd
retf
add
scas
xor
pop
sahf
mov
ja
mov
int3
pushf
adc
test
push
inc
mov
sbb
jg
xor
xor
mov
fisttp
stos
addr16
mov
mov
jns
jnp
cdq
mov
or
mov
add
dec
sbb
loope
push
cmp
mov
jbe
xor
cwde
cmp
fbld
inc
cwde
xchg
in
bound
sbb
cld
mov
test
jo
jge
jle
and
lock
xor
int
vrsqrt14ps
in
sub
dec
pop
stc
lods
mov
pop
pop
mov
inc
out
iret
fist
pop
sbb
mov
mov
imul
scas
push
out
sbb
sub
ins
pop
push
call
sub
inc
call
xor
push
mov
in
test
jae
ret
pop
cli
adc
xchg
sub
cmp
jl
test
cmp
int
leave
aas
adc
rcl
scas
ins
pop
fimul
jg
cmp
jns
sub
xchg
cld
or
lahf
rcl
pop
ss
sub
sbb
and
push
ret
pop
push
cmp
mov
ss
xchg
xor
icebp
xor
mov
retf
mov
cli
dec
sbb
retf
cmp
int3
mov
cmp
in
mov
jbe
dec
and
xor
xchg
jp
scas
(bad)
popf
sahf
mov
jbe
pop
aas
daa
clc
mov
xchg
mov
sbb
mov
mov
(bad)
std
int3
mov
data16
sub
or
cmp
scas
dec
push
push
or
jge
sub
pop
sub
adc
lods
add
jne
out
or
shl
xor
clc
or
in
fs
mov
xchg
or
ins
ds
ret
aaa
dec
call
ror
jne
or
push
pminsw
cli
jle
push
ficomp
ins
jp
imul
jg
inc
std
sub
or
mov
(bad)
jns
mov
out
sar
mov
movs
sar
gs
shl
push
repnz
mov
stos
nop
mov
jne
xchg
(bad)
repz
sar
ficom
mov
xchg
pop
bound
or
sbb
pop
pop
cmp
or
xchg
add
call
push
dec
out
jmp
inc
popa
jmp
frstor
(bad)
pop
add
inc
or
int3
dec
repz
test
pop
dec
xor
pop
mov
mov
push
es
adc
outs
jle
mov
ficomp
and
mov
mov
ja
out
cmp
xchg
and
scas
push
jb
pusha
sti
mov
lock
adc
(bad)
mov
mov
xchg
push
int3
push
rcr
scas
aas
fstp
mov
ja
lods
in
mov
jg
adc
(bad)
in
fwait
stos
push
xchg
sbb
cdq
mov
movs
in
aaa
rep
jle
jg
cmp
cli
aad
sbb
jecxz
cmovns
adc
ror
ficom
call
cdq
(bad)
ds
retf
jmp
adc
mov
xchg
pop
into
cld
push
push
xor
pop
aas
adc
shr
ins
or
sbb
popf
push
dec
daa
lods
loop
js
pop
xor
jle
mov
pop
sbb
jg
fdiv
jmp
bound
mov
lock
mov
adc
or
mov
scas
retf
sti
xchg
fwait
mov
daa
daa
xor
add
out
leave
scas
mov
xchg
jne
or
xor
xchg
dec
xor
inc
mov
imul
(bad)
imul
inc
jnp
and
out
test
add
add
mov
cwde
mov
lods
aam
push
or
mov
and
or
adc
inc
leave
addr16
dec
in
into
cdq
in
mov
shr
repnz
gs
cmp
add
arpl
cmp
cmp
enter
fdiv
jecxz
lds
inc
xchg
ja
pop
inc
jge
lods
push
fsub
movs
jnp
jnp
adc
mov
gs
inc
stos
test
test
sub
xor
pop
movs
mov
fcom
pop
inc
int
(bad)
fidivr
dec
mov
mov
sahf
pushf
inc
repz
ret
pop
or
cs
jge
jmp
cmp
lods
bound
cmp
adc
fld
add
jl
fcmovnbe
shr
add
iret
cmp
jb
adc
jb
sub
fist
mov
dec
dec
cmp
inc
inc
iret
scas
fimul
scas
fcom
out
lock
test
and
fdivr
int3
pop
dec
popa
ins
jae
xchg
and
jnp
imul
mov
pop
mov
jb
xor
adc
(bad)
repz
movs
inc
dec
ret
aaa
addr16
cmc
dec
xor
rcl
fcom
cli
bound
xor
pop
shr
xchg
ss
(bad)
add
rol
loope
push
fiadd
imul
cmp
arpl
test
mov
in
aas
mov
imul
fcmovnu
mov
cmp
shld
jmp
pop
mov
mov
js
adc
in
inc
pop
push
je
mov
mov
test
rcr
inc
sbb
add
enter
loope
(bad)
xor
or
xor
sbb
push
dec
or
cmp
xlat
xlat
loope
jmp
xchg
pop
jp
mov
jl
pop
cli
(bad)
leave
into
jbe
push
in
lea
inc
mov
daa
sbb
lock
push
cli
xor
and
add
fstp
(bad)
pop
fidivr
gs
sub
xor
call
icebp
mov
mov
or
add
add
setl
mov
mov
sbb
add
sti
sub
and
pop
inc
aaa
ja
gs
lods
hlt
jge
in
push
sub
outs
sub
pop
adc
lds
jmp
fldenv
dec
stc
int
push
movs
and
test
int3
or
mov
mov
lods
imul
or
pushf
adc
or
(bad)
dec
and
mov
pop
pushf
rcr
outs
inc
test
dec
mov
es
test
inc
mov
cmp
mov
mov
mov
mov
aam
cld
stos
je
cld
test
or
jne
mov
icebp
inc
inc
or
mov
dec
or
xor
scas
ret
xchg
mov
clc
adc
xor
loope
dec
fwait
and
inc
retf
cmp
push
daa
push
jmp
mov
push
imul
les
call
or
inc
stc
pop
addr16
adc
(bad)
aaa
add
ret
push
cmp
sti
xor
pop
and
in
repz
repz
out
and
mov
adc
add
sub
cmc
sub
mov
imul
cmp
mov
jae
ins
xchg
push
push
lods
cwde
mov
ret
in
scas
test
test
outs
ins
push
dec
inc
push
jmp
les
inc
xor
mov
leave
adc
mov
xchg
mov
dec
or
cwde
and
mov
in
inc
not
(bad)
fsubrp
ja
pop
(bad)
mov
or
in
(bad)
outs
loope
loope
xchg
leave
pop
scas
push
adc
iret
cmp
stos
ds
jne
xchg
jecxz
pop
out
pushaw
popa
cmps
bnd
in
and
jae
stos
push
cmp
sub
pop
call
shl
mov
call
nop
ror
cli
push
(bad)
cld
jp
mov
inc
dec
gs
dec
mov
jnp
cli
mov
or
jno
dec
jae
jp
mov
dec
fwait
cld
int3
jge
ja
scas
cmp
sub
clc
retf
out
aas
jo
dec
inc
imul
pusha
push
adc
sub
sbb
mov
or
push
pop
lods
repnz
shr
sub
mov
inc
push
sbb
mov
add
lea
dec
mov
and
retf
mov
dec
retf
xor
out
pop
shl
test
dec
or
sbb
mov
jmp
mov
aaa
js
sub
aam
(bad)
sbb
fmul
pop
xor
and
cwde
into
js
enter
fdiv
cmps
xchg
push
xchg
add
call
ins
inc
jl
fwait
ds
mov
or
push
mov
push
jle
inc
les
fidivr
jo
xor
daa
popa
push
jl
mov
test
test
gs
jne
mov
mov
and
in
sub
idiv
dec
daa
sub
lods
cmps
ret
sub
ja
ret
push
pop
sub
or
fwait
clc
jp
and
idiv
hlt
mov
fimul
push
jp
and
xchg
mov
dec
icebp
jns
mov
shl
cmc
ss
cwde
inc
icebp
xchg
push
mov
cld
add
sub
test
push
mov
adc
repz
out
jge
push
push
xor
sub
sub
jle
xchg
enter
into
and
lods
rcr
xchg
cmp
xchg
xchg
sbb
inc
pop
mov
shr
popa
sbb
dec
mov
in
cdq
pushf
cmp
sbb
cs
inc
ss
fwait
add
stos
adc
or
mov
mov
cwde
dec
in
call
popf
push
jns
xlat
repnz
sub
pop
xor
pop
sbb
(bad)
mov
jge
(bad)
sub
mov
popf
ffree
cs
xor
loop
pop
inc
frstor
or
arpl
dec
push
imul
xor
sbb
dec
sub
fs
sbb
and
mov
jo
adc
fidiv
and
ror
out
lods
cmc
outs
mov
jmp
mov
test
xchg
ja
mov
jbe
(bad)
mov
inc
sbb
sti
pop
mov
hlt
or
pop
mov
aaa
(bad)
cmp
cmp
and
sub
xchg
pop
add
fisttp
inc
and
retf
std
fmul
and
sbb
or
cmps
cwde
add
je
loopne
out
div
pop
retf
lahf
cmp
xchg
xor
fcom
sbb
mov
das
popa
xchg
fldcw
cmp
xchg
out
(bad)
div
or
or
pop
in
push
sar
xor
xor
lea
adc
fdivr
push
pushf
xchg
lock
not
push
out
std
fcmovu
fwait
jmp
mov
mul
and
mov
loopne
push
and
in
pusha
stos
inc
(bad)
cmc
sub
mov
popa
mov
fldenv
adc
fs
push
and
test
pop
gs
mov
pop
call
push
cmc
cld
out
pop
inc
xchg
popf
mov
cwde
es
nop
cmc
pop
mov
pop
dec
jmp
test
shl
dec
or
sti
cmp
test
movs
dec
scas
daa
mov
mov
xchg
or
jmp
ss
pop
add
push
cmps
leave
stc
sub
loope
adc
aam
ins
sub
add
sub
jmp
jo
push
scas
xor
call
mov
enter
int
ins
xchg
pop
aam
aas
out
adc
xor
cli
dec
iret
dec
jmp
adc
jmp
mov
in
mov
in
push
mov
or
shl
es
mov
enter
sar
jnp
push
stc
inc
(bad)
leave
xchg
cmp
push
hlt
pop
push
fwait
xchg
scas
push
xchg
sub
idiv
retf
mov
or
ja
xor
std
out
mov
jo
mov
cmps
push
mov
mov
xchg
int
add
xor
or
ins
int3
retf
mov
add
call
xchg
and
mov
js
adc
mov
xchg
mov
mov
nop
repnz
mov
imul
jle
sub
arpl
sahf
lock
cdq
inc
add
ret
cmp
mov
lahf
inc
aad
sbb
je
and
imul
leave
push
sub
ss
stos
add
xor
ror
in
ja
(bad)
dec
or
into
sub
push
xchg
and
mov
fdiv
mov
call
add
scas
mov
inc
jmp
push
out
sbb
mov
mov
rcl
inc
dec
xchg
hlt
pop
cmp
lods
mov
js
cmps
rcl
jp
(bad)
loopne
aas
sub
and
cmp
push
push
sub
push
dec
std
or
(bad)
lock
in
sbb
cs
mov
adc
cmp
pop
hlt
mov
xchg
mov
push
and
in
std
cmp
push
shl
fidiv
mov
popa
or
les
mov
out
xor
popf
aad
or
mov
mov
jne
stos
int
fcomp
inc
test
bound
adc
stos
scas
test
and
arpl
pop
iret
mov
fnstenv
lea
(bad)
and
fisttp
jmp
pop
sub
jae
push
xor
inc
enter
mov
xor
out
mov
inc
mov
lock
stos
or
stos
add
adc
dec
out
pop
sub
cld
(bad)
dec
cli
sbb
fistp
loopne
pop
js
mov
pop
mov
cmp
and
dec
repnz
sub
cmc
or
enter
pop
jo
mov
mov
fild
std
pushf
mov
and
jl
add
adc
sub
(bad)
sbb
out
lods
mov
aad
imul
push
xchg
hlt
gs
shl
adc
dec
jno
xor
or
in
mov
mov
fisubr
xchg
cwde
pop
push
test
or
sub
and
mov
and
sbb
out
rol
xlat
sbb
(bad)
inc
cwde
neg
bound
mov
mov
jno
je
pusha
imul
sub
lahf
mov
jmp
mov
or
clc
ret
inc
mov
xchg
xor
arpl
dec
icebp
(bad)
push
mov
adc
push
loop
scas
ins
add
inc
aas
movs
call
aam
pop
into
loope
in
int3
mov
jg
jbe
jbe
push
push
js
cmc
dec
stc
adc
pop
cmp
push
ss
push
push
imul
dec
loopne
inc
and
pushf
aaa
jge
push
jg
ja
and
and
dec
sar
leave
mov
rcr
repz
pop
jbe
pop
inc
out
jl
push
test
jns
jne
sbb
call
pop
popf
add
shl
rol
jbe
aam
sub
inc
rcl
add
push
cmp
test
dec
mov
fnstcw
popf
jae
xor
data16
hlt
jbe
xchg
sbb
ja
xor
out
mov
or
retf
pop
mov
popf
ja
sbb
icebp
cmps
ss
mov
(bad)
jp
(bad)
jl
mov
xor
mov
into
push
mov
outs
mov
sahf
jecxz
push
mov
jge
sub
cmp
js
call
add
lahf
xchg
cmp
psrlq
xchg
adc
and
xor
fwait
pusha
adc
pop
(bad)
scas
pushf
mov
inc
push
sbb
mov
mov
and
gs
inc
sub
stos
jp
sub
push
or
jae
xor
xor
stos
pop
sbb
cdq
and
mov
outs
sub
xor
loop
rcl
ins
pushf
mov
or
lods
out
push
xor
mov
mov
mov
add
mov
sbb
mov
cmp
dec
jl
dec
cwde
imul
mov
movzx
add
mov
cmps
fwait
inc
out
lods
clc
xor
shl
mov
(bad)
in
add
inc
xchg
(bad)
dec
push
hlt
dec
addr16
adc
pusha
inc
stos
aam
pusha
pop
lds
daa
inc
dec
or
cmp
mov
ret
dec
(bad)
mov
xchg
adc
mov
out
push
push
mov
int3
in
adc
(bad)
sub
add
mov
inc
mov
call
cs
add
sub
xor
mov
ret
xor
cdq
mov
dec
jmp
ins
mov
fxch
cmp
adc
fwait
cmp
push
cmp
cld
mov
sahf
(bad)
dec
pop
dec
retf
jle
in
inc
pop
xchg
jecxz
and
dec
and
jo
cmc
and
pushf
jb
pop
xor
fcom
mov
cwde
inc
fnsetpm(287
jo
fistp
lahf
jns
or
dec
loopne
mov
sub
ins
pop
xchg
sbb
adc
inc
xchg
and
sti
(bad)
push
sub
stos
jns
pop
push
ret
jle
out
add
sub
cmp
test
and
pusha
adc
inc
into
ficom
push
xor
test
pop
inc
std
inc
addr16
mov
scas
mov
imul
ret
adc
enter
movs
add
imul
outs
mov
inc
lahf
push
and
fbstp
pushf
imul
push
dec
shr
sub
xchg
cmps
ss
inc
retf
int3
stos
popa
cmps
addr16
mov
(bad)
cmps
add
icebp
das
cmp
fcom
(bad)
retf
or
xchg
mov
cld
push
in
cmp
loop
adc
retf
int
push
pcmpeqb
fist
(bad)
fsub
mov
popa
loope
mov
cli
outs
ret
test
loopne
pushf
mov
mov
popf
inc
push
shr
jo
cs
mov
pop
in
into
pop
sub
cmp
(bad)
cmp
push
ins
jl
test
fisub
jno
dec
(bad)
xchg
jb
aaa
in
mov
data16
sub
rcl
push
or
pop
pop
popa
inc
xchg
jns
ins
pop
test
mov
mov
push
push
movs
in
or
inc
dec
sbb
jmp
xor
(bad)
pop
inc
mov
movs
or
push
aaa
fwait
jo
add
dec
fcmovu
and
cmp
sbb
inc
in
mov
hlt
int
scas
call
scas
sub
adc
retf
push
mov
retf
sub
or
ins
in
cmp
lea
shr
dec
push
(bad)
jmp
jno
test
jno
out
sar
mov
loopne
push
pop
or
pop
xchg
pop
xchg
mov
mov
popa
loope
pop
mov
fmul
xor
dec
outs
test
adc
xor
xchg
push
call
mov
mov
fadd
ret
cmp
inc
imul
push
test
pop
cmp
out
mov
cmps
pop
add
ds
cld
xchg
jl
inc
dec
or
sar
ss
stos
daa
xchg
(bad)
call
add
pop
xchg
neg
pop
adc
xor
jle
ss
out
mov
add
test
mov
xchg
movs
mov
in
xor
gs
xor
or
loopne
cmp
(bad)
mov
or
pop
pusha
pop
mov
js
(bad)
retf
lods
shr
sahf
std
cmp
aas
xchg
adc
popf
jmp
mov
stos
stos
ins
sbb
push
xor
rcr
mov
and
push
xor
stos
aas
ror
(bad)
loopne
xchg
test
jp
xchg
push
hlt
int
push
add
pop
or
out
and
inc
dec
stc
daa
test
pop
pop
pop
adc
mov
mov
rol
bound
(bad)
and
std
and
clc
stos
xchg
pop
push
sub
test
rol
add
shr
sbb
lods
inc
hlt
repnz
sub
adc
lea
push
jl
pop
std
inc
and
out
(bad)
call
push
std
fist
stos
ins
pop
cmps
lahf
dec
xchg
mov
pusha
mov
test
in
add
push
mov
mov
xor
cmps
adc
popf
or
outs
data16
and
int3
out
fwait
outs
dec
sub
data16
aas
push
mov
ds
lock
push
gs
(bad)
iret
mov
cmp
cmc
ror
(bad)
fwait
movs
in
mov
aaa
jbe
std
das
dec
xchg
shr
push
jmp
push
mov
jecxz
adc
daa
jno
jmp
dec
pop
popf
pop
or
int3
in
xchg
cs
aas
jbe
mov
stos
retf
push
mov
xchg
mov
pop
and
mov
test
adc
xchg
shl
inc
jmp
test
(bad)
pop
movs
pop
leave
sti
jo
jb
mov
add
fld
mov
sbb
and
jl
ret
xor
(bad)
jmp
pop
inc
inc
xlat
xchg
and
ss
xlat
es
mov
mov
fidiv
push
fnstcw
movaps
cmp
cmps
fsub
dec
stos
xchg
sbb
shr
push
cmp
in
adc
int
out
(bad)
cdq
push
outs
xchg
mov
dec
test
mov
jnp
test
(bad)
sbb
jecxz
lock
inc
ret
push
sahf
dec
mov
rol
jl
fs
xor
dec
push
fcomp
or
push
fnstsw
sti
pop
scas
js
add
xor
xchg
movs
lock
enter
dec
mov
or
adc
(bad)
cmps
movs
adc
rcr
dec
pop
fs
clc
mov
movs
add
add
push
mov
mov
cmp
rol
lods
jecxz
jmp
xor
xlat
dec
jo
aaa
xchg
mov
es
jns
(bad)
inc
adc
push
or
fld
mov
adc
js
dec
jne
push
fcomp
call
das
call
loop
mov
xchg
jmp
into
lds
jmp
adc
shl
loop
add
call
cmp
adc
or
pop
lea
sbb
shr
not
mov
jmp
mov
(bad)
pop
or
shl
pop
mov
xor
xor
pop
mov
cmps
mov
or
loope
test
aaa
test
sub
ret
dec
fucom
ror
cmp
mov
aad
xor
add
sahf
popa
test
and
mov
lock
add
in
jp
inc
inc
jb
mov
and
loop
mov
fcom
or
sbb
jbe
sbb
inc
sub
sbb
repnz
aam
popa
mov
fld
test
enter
adc
fdiv
fucomi
daa
out
adc
leave
aaa
adc
(bad)
jns
sub
jmp
dec
cli
retf
mov
shl
sar
fmul
cmp
adc
sub
in
popf
sbb
mov
jmp
add
sub
add
push
adc
adc
push
dec
ins
add
inc
pop
jb
loopne
add
jecxz
imul
mov
push
ins
dec
add
repnz
jnp
push
cld
pop
es
jb
clc
push
dec
dec
je
aaa
adc
out
push
mov
pop
outs
cmps
cmps
pop
xchg
jne
xchg
stos
lea
sar
xor
cmps
rcl
and
gs
retf
mov
loop
stos
test
mov
stos
add
scas
test
jge
push
mov
je
push
imul
int3
dec
movs
rol
jb
or
test
mov
adc
add
loopne
lods
mov
xchg
push
push
fs
(bad)
or
mov
pop
jg
test
(bad)
push
mov
inc
je
push
cmp
and
and
clc
mov
sti
loop
enter
lds
je
mov
gs
jge
push
dec
frstor
xchg
hlt
add
sar
sub
and
(bad)
xor
jle
jae
fs
mov
das
cli
xor
and
cld
fwait
xor
fwait
mov
lock
or
mov
sub
sub
aad
in
add
mov
sar
pusha
inc
addr16
mov
cs
mov
enter
xchg
(bad)
fcomp
xchg
leave
xor
cmp
int
rol
add
sar
cs
jns
ins
mov
inc
lods
callw
bswap
cmp
add
inc
inc
push
xchg
push
inc
dec
jp
mov
add
das
xchg
in
xchg
add
movs
xchg
sti
ror
cmps
pop
ins
and
and
xchg
inc
ss
test
cmc
movd
xor
cmp
sbb
sbb
dec
lds
outs
xor
es
ss
stc
mov
leave
inc
add
push
fisttp
hlt
lods
imul
cld
test
es
xchg
arpl
xchg
jnp
xor
call
fadd
mov
pop
mov
enter
out
ret
stos
xor
inc
or
xor
pop
mov
neg
jo
mov
out
xlat
ss
shr
cmp
dec
call
ins
iret
mov
mov
pop
mov
push
add
in
mov
leave
or
popf
jbe
inc
ja
sub
jecxz
mov
adc
jl
jle
packuswb
and
outs
or
pop
sbb
ins
cmps
xchg
icebp
nop
mov
stos
add
dec
jg
jbe
ss
adc
ja
dec
jp
xor
ficom
mov
retf
aad
fild
or
inc
int
jle
sub
movs
ficom
pushf
paddw
mov
xchg
pop
scas
push
mov
jmp
cmps
frstor
mov
cmps
add
mov
xchg
call
xor
pop
outs
out
inc
jle
(bad)
fistp
fs
cmp
mov
or
fs
sbb
push
xchg
pop
out
icebp
ja
sub
popf
les
aas
ins
mov
movs
adc
loopne
sahf
cmps
aam
aad
movs
aaa
fstp
sub
mov
aas
mov
mov
retf
in
jp
mov
xchg
ret
fmul
gs
sar
xchg
nop
pop
enter
call
sti
mov
mov
push
clc
(bad)
xchg
mov
(bad)
in
movs
mov
mov
pop
sub
movs
lock
jecxz
adc
hlt
dec
int
add
mov
test
pop
or
pop
data16
cmp
ins
mov
(bad)
mov
inc
sbb
std
xchg
cmps
les
add
es
fldcw
call
inc
call
nop
pop
cld
ret
mov
test
bound
xor
outs
sbb
xor
mov
cmp
push
(bad)
jmp
xor
mov
sbb
inc
mov
in
push
test
xchg
test
add
push
adc
lds
mov
arpl
shld
push
ret
loopne
pop
call
xchg
push
mov
ret
(bad)
jge
xchg
psraw
popa
mov
fsubr
fwait
sar
jbe
xor
mov
ds
pop
scas
in
push
ficom
jle
inc
std
(bad)
fisubr
cmps
mov
xchg
dec
pop
xchg
lea
and
in
mov
lea
or
inc
or
xor
lods
loopne
(bad)
(bad)
sub
call
sub
call
int
rcr
dec
jns
retf
stc
bnd
outs
inc
lahf
neg
sbb
in
or
stc
addr16
cmps
push
repz
jae
pop
sbb
pop
pushf
xchg
cwde
clc
adc
sub
jl
mov
aad
sbb
or
and
fistp
lods
test
fild
dec
int3
sbb
mov
fsubr
sar
xor
cs
pop
pushf
nop
inc
sub
dec
cmp
push
push
mov
ins
and
out
lods
add
aam
add
dec
jecxz
int3
enter
out
in
push
mov
das
dec
sub
mov
loope
shr
ror
data16
jmp
lahf
or
jno
mul
xchg
mov
mov
sbb
cmp
in
xchg
dec
mov
mov
fcom
xchg
adc
and
xchg
xchg
jmp
jae
ja
push
(bad)
mov
dec
fs
mov
xchg
sub
loope
cmps
fs
ret
mov
nop
or
mov
rcr
in
mov
in
or
iret
and
mov
sbb
adc
mov
movs
(bad)
mov
jp
pop
jmp
lea
jo
outs
add
test
js
int3
(bad)
cmc
inc
jge
push
sub
mov
fst
cmp
push
xor
sbb
(bad)
mov
cmp
ins
(bad)
push
inc
or
or
sbb
lock
adc
jecxz
int3
fist
push
jmp
in
sub
je
mov
daa
sbb
mov
pop
mov
inc
inc
sub
or
(bad)
call
jno
mov
loop
fcom
add
movs
stos
cmp
(bad)
mov
xlat
mov
mov
stos
mov
(bad)
mov
inc
mov
ss
movs
mov
out
mov
add
movs
mov
call
shl
(bad)
sti
adc
pop
adc
add
add
mov
push
call
pop
(bad)
inc
sbb
inc
xchg
call
xchg
push
je
(bad)
add
inc
and
rcr
jb
pop
cmp
mov
sar
sbb
pusha
mov
mov
xor
and
in
aam
sar
stos
dec
mov
sbb
cmp
push
pop
cli
jmp
mov
movs
dec
inc
arpl
pop
xor
mov
xchg
popa
dec
mov
and
(bad)
fnstenv
ins
leave
mov
add
aam
cmp
outs
push
pushf
scas
add
fnstsw
mov
cmp
pushf
jo
pusha
repnz
xchg
sbb
imul
jecxz
shl
or
mov
addr16
js
push
lock
lock
xor
pop
bound
and
scas
mov
jne
push
add
enter
add
dec
or
mov
scas
pop
dec
das
retf
push
cmps
mov
pop
cmp
out
out
test
icebp
xor
pop
stos
aam
mov
mov
scas
fist
iret
fist
mov
loop
mov
xor
add
adc
or
pop
inc
cmp
xchg
inc
ret
int3
sti
int
jnp
loopne
cmp
mov
fwait
dec
and
cmp
cmc
xchg
sbb
retf
xchg
adc
fucom
sbb
pop
push
push
out
or
loope
and
call
pop
gs
retf
rol
test
movs
fisubr
jns
add
sbb
or
mov
and
addr16
nop
jl
xchg
inc
or
sbb
pop
jae
xchg
push
xchg
push
cmp
xor
inc
pop
pop
outs
shl
push
sub
inc
aaa
cmps
sahf
loop
ror
cmp
adc
cmp
aaa
les
out
xor
ins
je
sbb
xchg
(bad)
dec
push
dec
sbb
popf
xchg
jmp
cmp
xlat
dec
sbb
mov
xchg
call
add
and
(bad)
retf
lds
int
jmp
and
sar
sub
cmps
icebp
call
inc
jne
fs
aad
shr
inc
or
out
je
pop
(bad)
retf
and
cmps
test
iret
jo
pusha
mov
(bad)
mov
cmp
or
mov
cmp
shr
mov
pop
xchg
xchg
mov
push
fadd
mov
sub
fidiv
pop
sar
ja
jp
cmp
mov
cmp
adc
mov
js
out
fbstp
xlat
cs
inc
movs
ds
imul
dec
jle
and
enter
sbb
pop
fcom
cld
dec
repz
rcr
mov
aam
pop
fcomp
mov
mov
or
int
push
adc
lods
(bad)
aaa
mov
dec
iret
je
pop
add
and
pusha
xchg
call
and
loop
(bad)
xlat
dec
pop
cmps
jle
js
jl
imul
add
or
mov
test
and
into
and
movs
inc
dec
ficomp
push
cs
sub
xchg
mov
or
js
mov
popa
or
mov
retf
push
fmul
xchg
push
pop
popf
jmp
data16
imul
dec
cwde
jae
stos
shr
dec
loop
dec
and
cmps
test
jecxz
cmc
popa
and
jl
pop
adc
pop
adc
push
imul
dec
inc
add
fcomp
add
in
lock
mov
pop
mov
daa
int
mov
mov
test
xlat
push
mov
lods
out
and
xchg
and
cmp
dec
adc
xchg
arpl
cmp
push
or
xchg
in
sbb
sti
add
cmp
sub
leave
or
xchg
and
push
jge
xchg
mov
mov
imul
aam
test
out
mov
push
ror
inc
loope
push
jl
inc
mov
xchg
sub
jp
jp
int
and
mov
fisub
cs
pop
mov
rcr
sbb
push
mov
sbb
adc
sti
or
mov
mov
xchg
add
clc
rcl
adc
mov
cmc
lea
lock
retf
sbb
aas
xchg
mov
fs
mov
lods
enter
jae
ret
sub
jl
call
call
xor
rcl
sub
cwde
imul
icebp
add
dec
movs
jbe
test
test
inc
cmp
test
dec
adc
cmps
fwait
sbb
mov
mov
inc
xor
push
mov
ficom
shl
and
gs
jecxz
dec
outs
nop
(bad)
fldcw
push
mov
lahf
movs
cmp
rcl
and
jbe
xchg
push
hlt
loope
iret
xchg
mov
jp
and
out
sub
ficom
popf
jl
loop
inc
mov
inc
pushf
std
dec
jnp
or
mov
dec
push
(bad)
imul
cmp
mov
fcomp
out
adc
pop
jne
sbb
mov
mov
or
sbb
leave
test
sub
push
push
(bad)
push
aam
mov
add
cdq
xor
inc
ret
push
sub
sar
stos
jl
cmp
pop
ins
test
in
bound
pop
pop
cmp
fwait
cmc
add
rcr
and
(bad)
mov
mov
jecxz
mov
jp
mov
xor
out
inc
and
nop
fimul
adc
sar
push
or
(bad)
pushf
mov
mov
scas
xlat
pushf
mov
shr
outs
cmp
xacquire
test
add
stos
call
push
xor
jns
sbb
add
mov
mov
jbe
xchg
mov
lods
imul
cmp
push
ret
adc
mov
dec
cmovs
test
sbb
sbb
cmp
fstp
movs
rol
pop
mov
xor
mov
movs
enter
mov
out
test
cld
jns
cmps
push
int3
adc
jl
pop
rcr
mov
shr
pop
sbb
es
lods
xor
outs
cmps
(bad)
inc
adc
dec
add
fiadd
inc
out
xchg
sub
lea
mov
sahf
aas
data16
lea
pop
dec
aas
mov
dec
fwait
or
mov
mov
pusha
test
or
out
mov
lds
hlt
aam
xor
ret
xchg
mov
outs
rcl
repnz
ret
jbe
out
inc
xor
mov
dec
daa
aaa
lods
std
ret
out
sub
stc
push
fist
push
shl
cmc
scas
mov
adc
(bad)
fstp
pusha
pop
jno
popa
(bad)
xchg
out
mov
dec
sub
sub
push
jns
mov
arpl
push
movs
mov
dec
sar
xchg
dec
(bad)
jecxz
gs
adc
lods
jnp
add
aad
jo
mov
in
sar
(bad)
rol
dec
xor
les
sbb
bound
enter
cmp
lods
xor
cmps
stc
xchg
call
mov
or
mov
pop
int3
push
pop
popf
fldenv
fwait
cmp
jp
add
test
mov
mov
mov
pop
sub
add
jle
dec
sbb
pushf
mov
inc
jl
add
pushf
add
and
outs
stos
jne
adc
inc
rcl
dec
mov
mov
cs
popa
lock
imul
rcl
dec
cmps
sub
cs
fistp
les
call
push
fstp
leave
xchg
(bad)
sbb
stos
sbb
arpl
jp
repnz
adc
jmp
or
or
cdq
fldenv
adc
xchg
pop
mov
loopne
movs
scas
push
rcr
fdiv
fwait
mov
mov
inc
cmp
add
add
mov
cs
sub
mov
push
xor
arpl
imul
jmp
pop
mov
sub
test
xchg
aaa
leave
jb
in
adc
sub
rol
dec
push
fsubrp
xor
pop
fist
mov
mov
fld
cmps
inc
paddusb
and
daa
or
adc
cli
jbe
ins
scas
push
mov
mov
out
mov
jns
aaa
mov
(bad)
xor
dec
dec
aam
jmp
or
fisubr
pop
pushf
push
cs
mov
pop
sbb
out
daa
popa
pop
and
sub
fsubr
adc
and
inc
xlat
test
addr16
arpl
pop
je
sahf
movs
add
scas
xchg
xor
xchg
adc
inc
neg
cmp
cmp
and
(bad)
cmp
sub
jmp
or
es
rcr
cdq
cmp
sub
mov
xlat
mov
call
push
mov
not
cwde
ins
and
dec
sar
(bad)
xchg
xlat
arpl
inc
nop
adc
sub
mov
add
push
sbb
inc
or
(bad)
cmps
sar
ficomp
xchg
dec
cmp
pop
shr
add
jmp
push
adc
shl
dec
ins
test
mov
loope
mov
enter
shr
dec
sar
pop
mov
retf
sbb
movs
add
or
cmc
push
cmp
xchg
adc
xchg
mov
adc
mov
xlat
out
mov
imul
xchg
xor
adc
loope
shl
inc
fs
adc
ins
retf
jbe
add
(bad)
cwde
pop
aaa
inc
add
ins
fsubp
inc
jecxz
ror
jg
cmc
loopne
inc
adc
(bad)
and
jle
stos
aad
xchg
mov
dec
pop
pop
cmps
or
sbb
(bad)
in
arpl
or
push
mov
mov
mov
cmp
aam
dec
jne
pop
pop
xchg
cs
inc
push
stos
mov
pop
or
jns
inc
in
mov
sub
int3
adc
cmp
xor
addr16
xchg
jmp
xor
ins
push
sub
aaa
lock
les
jnp
sbb
push
(bad)
mov
sbb
fwait
jle
cmp
or
pusha
stos
pop
in
push
pop
out
aad
sahf
xlat
arpl
leave
sub
fucomi
mov
pop
cmp
mov
lock
push
fdiv
adc
fwait
inc
mov
pop
rol
cli
mov
and
mov
or
xor
jb
lods
in
sub
push
adc
xor
pop
cli
fst
jnp
push
mov
cmp
test
pop
jae
(bad)
aaa
xor
dec
xor
hlt
sub
into
push
imul
pop
not
add
adc
lock
adc
adc
xchg
jb
push
cmp
test
mov
cmps
call
jo
cmps
pop
int
sbb
xor
mov
sbb
lods
std
pop
xor
rol
in
es
dec
fsubr
enter
fwait
je
jnp
das
(bad)
cmp
pop
or
sub
and
idiv
call
jb
jmp
(bad)
test
adc
in
and
mov
inc
cmps
call
(bad)
push
inc
pop
sti
mov
retf
aas
leave
cdq
outs
sbb
pop
dec
cmp
cs
dec
adc
mov
leave
add
dec
pop
pop
xor
stc
pop
gs
mov
in
jo
mov
test
sar
gs
sub
dec
or
sub
mov
adc
sbb
mov
sub
mov
cwde
inc
mov
cmp
aas
mov
push
mov
xchg
and
dec
in
lock
call
(bad)
or
mov
es
cmps
sbb
dec
push
cmp
xchg
std
mov
mov
adc
cli
cli
or
mov
cmp
xlat
push
popf
cmps
ret
int
pop
push
stos
in
pop
add
stos
scas
xor
lock
out
sub
fcomi
pop
xor
sub
sub
jbe
pop
mov
sbb
or
repz
out
push
dec
movs
adc
xor
xchg
sub
repnz
sub
fdiv
repz
fimul
jmp
test
call
hlt
adc
push
cmp
pop
aaa
pop
or
mov
mov
mov
jae
cs
mov
mov
sbb
sub
or
addr16
int3
aas
mov
jl
mov
push
push
jmp
int
icebp
ins
cmp
cli
xor
pop
sbb
xlat
mov
jl
add
mov
xchg
nop
dec
adc
in
cmp
adc
xchg
(bad)
and
push
mul
stos
and
mov
push
mov
or
xchg
fs
sbb
addr16
and
out
pushf
mov
imul
imul
sub
jae
stc
xchg
pop
stos
sbb
movs
dec
adc
cmc
imul
mov
fxch
dec
cmp
out
sbb
mov
in
or
or
cmp
add
pop
cmp
add
ret
and
dec
scas
xor
xor
add
push
loop
inc
mov
sub
xchg
or
out
arpl
(bad)
into
stos
adc
dec
inc
inc
aaa
cli
cmp
mov
sbb
(bad)
pop
inc
fldcw
xlat
push
cmc
lds
mov
or
xor
mov
or
movs
shl
jno
xchg
add
and
or
jno
mov
sti
sub
mov
pop
pop
pop
add
adc
scas
sbb
cmp
push
inc
movs
icebp
or
inc
(bad)
or
or
mov
cmp
popa
sbb
xchg
jmp
pop
outs
and
ret
ret
mov
in
pop
lea
std
inc
stos
shl
neg
lds
xchg
pop
gs
xor
jecxz
fldcw
or
sar
cmp
popf
or
icebp
into
pusha
stc
mov
mov
outs
outs
aam
xchg
dec
mov
mov
(bad)
out
iret
or
std
(bad)
mov
inc
push
cmp
add
stos
pop
sbb
leave
inc
popa
sbb
push
push
pop
xor
call
add
outs
call
scas
mov
jmp
sbb
mov
jns
daa
xchg
add
jge
xchg
cmp
lea
(bad)
sbb
jl
sbb
sbb
inc
retf
setno
sub
pushf
fdiv
add
icebp
lods
adc
scas
cmps
mov
push
aam
push
jmp
loope
mov
pop
inc
xchg
sbb
pop
dec
pushf
jns
pop
cmp
sub
or
sub
push
mov
xchg
addr16
jns
cmp
sbb
sbb
pop
jge
sub
pop
ins
sbb
loope
sbb
pop
int
dec
div
outs
jg
mov
or
mov
xlat
test
jb
mov
sbb
sbb
push
iret
jb
je
jno
daa
push
addr16
mul
fcom
rep
shl
out
jl
adc
sub
cld
aad
mov
sbb
inc
shl
aad
cwde
aam
mov
scas
ds
inc
out
outs
lock
retf
pop
scas
in
and
mov
adc
pop
ins
mov
pop
popf
cmc
shr
xor
imul
sub
loopne
mov
mov
movs
in
repnz
or
xchg
fild
pop
out
mov
fcomp
in
ror
arpl
ins
fisttp
int3
cmp
cmp
in
movs
enter
inc
(bad)
adc
fdivr
ds
in
add
xor
inc
jg
loope
repz
movs
inc
data16
jmp
pavgw
sbb
sub
loop
push
test
mov
xchg
jo
mov
fwait
data16
xor
inc
inc
mov
lea
adc
add
mov
mov
test
aaa
mov
call
push
jae
xchg
xchg
leave
push
(bad)
ds
jle
aaa
and
loopne
and
xchg
sbb
cwde
daa
fdiv
out
sar
mov
ins
in
les
and
(bad)
xor
xchg
scas
sahf
fwait
push
inc
mov
inc
jb
ret
ins
dec
je
int
inc
pop
mov
push
adc
jno
out
(bad)
mov
dec
cwde
cmp
test
pop
dec
rcr
inc
inc
outs
ds
sub
fdiv
ins
ret
lea
setno
add
stc
or
scas
jno
icebp
push
pop
add
push
jle
jno
xor
or
es
dec
inc
xchg
cwde
push
add
(bad)
fcmovb
popa
fcomp
repnz
pop
iret
aas
and
test
test
dec
sub
arpl
pop
imul
neg
jecxz
(bad)
in
mov
add
mov
scas
mov
lods
lea
xlat
retf
movs
push
cmovg
mov
and
les
xchg
sbb
(bad)
hlt
mov
cmp
js
adc
pop
xchg
test
shl
cmp
pop
cmps
mov
loopne
ins
(bad)
shl
adc
je
push
adc
jb
and
pushf
icebp
ins
xchg
outs
mov
or
mov
dec
add
into
scas
jle
xchg
popf
scas
jno
int
xchg
inc
fmul
pushf
cs
push
mov
jnp
sub
cmps
mov
sub
mov
ja
pop
int
icebp
stos
(bad)
cli
rcl
and
dec
pop
dec
lods
ret
sub
sub
cmp
(bad)
cmp
fidiv
(bad)
push
hlt
dec
cmps
xchg
mov
xor
ss
test
call
push
and
jg
push
fimul
push
cmp
or
ret
cmp
cli
ror
cmp
mov
mov
jae
xor
push
cmp
std
or
mov
and
sub
daa
ss
das
in
sub
sub
sti
sub
es
out
test
test
mov
push
push
out
pop
inc
addr16
enter
popf
push
xchg
mov
cmps
push
mov
xchg
cdq
xchg
mov
aas
mov
jae
xor
gs
out
fsubr
repz
js
inc
lea
cmp
fcmovb
jae
mov
xor
pop
xchg
das
aas
mov
cmps
xor
mov
xchg
shr
shl
lods
push
stc
fcomp
cmp
push
pop
adc
call
mov
dec
add
xchg
stos
sub
cdq
fsubr
push
pop
mov
add
ds
ficom
inc
mov
xor
(bad)
pop
mov
lahf
and
ds
dec
mov
xor
mov
int
or
adc
sbb
es
ins
sahf
mov
jnp
into
shl
cwde
xor
mov
sub
cld
in
retf
sub
inc
mov
ja
fcmovb
lods
jns
in
mov
mov
or
stos
outs
fsub
daa
cmp
push
shr
xchg
and
test
icebp
adc
ins
dec
cmc
out
jmp
jg
bound
out
mov
js
cmps
or
jge
into
in
xor
mov
je
leave
dec
or
dec
inc
retf
bound
out
stos
fistp
call
cmps
sbb
cwde
push
sbb
pop
dec
scas
pop
xor
add
sub
out
adc
push
inc
mov
rcr
addr16
das
push
aad
sbb
inc
ror
pusha
jle
mov
xchg
arpl
mov
cmps
pop
xchg
mov
inc
imul
xchg
sbb
iret
xchg
test
mov
out
sbb
xor
adc
adc
push
xchg
add
adc
mov
adc
ins
and
movs
cmp
adc
dec
xchg
gs
sbb
mov
dec
sbb
repz
mov
cmp
cmp
cmp
cmp
jp
add
pop
fisttp
mov
ds
outs
dec
(bad)
das
fadd
mov
xor
cmp
mov
inc
mov
aaa
adc
or
aas
clc
add
cdq
jo
loopne
ret
xchg
or
pop
adc
xor
sub
outs
sbb
fwait
dec
jmp
enter
jno
imul
or
rol
ins
les
sbb
dec
xor
outs
fwait
mov
test
inc
jae
add
xchg
sub
push
(bad)
ins
mov
mov
mov
or
jno
es
xchg
fsub
jmp
aad
push
sub
mov
lock
ja
in
cvtpi2ps
leave
sub
sub
push
add
lock
je
add
mov
jae
inc
mov
stc
retf
mov
sub
gs
daa
rol
dec
mov
inc
adc
push
inc
xchg
mov
sti
scas
dec
sbb
sar
mov
mov
cmps
(bad)
push
push
adc
dec
out
call
or
jmp
movs
fcom
test
dec
or
fs
inc
inc
or
jp
shl
outs
sbb
int
jecxz
aas
enter
daa
pop
fldenv
jmp
outs
std
test
cmp
(bad)
movhps
pushf
fstp
xor
cmps
and
add
adc
xor
dec
inc
adc
mov
mov
call
das
int3
dec
sub
or
push
xor
inc
call
mov
in
or
nop
inc
jmp
sub
scas
les
dec
push
outs
jae
cdq
int
out
mov
loope
cmps
mov
(bad)
(bad)
add
cmp
or
out
push
pop
mov
addr16
xchg
cmp
(bad)
ins
call
pop
xlat
pop
mov
nop
jnp
xlat
mov
fild
pop
pop
and
retf
push
lds
(bad)
adc
aam
cmp
lock
sti
cs
jmp
push
push
or
pop
movs
cli
into
mov
cli
not
dec
add
movs
imul
mov
cmp
cmp
jne
(bad)
xchg
popf
ss
fldenv
pop
mov
pushf
fxch
aad
hlt
add
(bad)
hlt
mov
rcr
xchg
test
dec
stos
inc
movs
pop
jmp
(bad)
adc
cwde
(bad)
and
xchg
mov
inc
pop
inc
mov
fwait
in
popf
sbb
adc
or
pop
in
add
mov
cmp
shr
jl
inc
mov
fiadd
call
pop
and
push
add
int
call
jns
and
cmp
cmp
mov
dec
and
cmc
pop
xlat
sahf
push
sub
inc
xor
pusha
in
jo
ja
mov
add
add
cmp
pop
pushf
jl
sar
inc
and
cmp
jo
jne
es
adc
out
jecxz
push
adc
in
cmps
(bad)
fwait
and
jl
rcl
xchg
clc
call
jmp
dec
nop
or
movs
push
add
(bad)
lea
dec
cli
push
push
xchg
xchg
xor
xor
inc
stc
icebp
jb
add
(bad)
mov
push
or
(bad)
and
add
dec
adc
pop
and
add
or
pop
repnz
lock
pop
cmp
imul
cld
and
scas
popf
xor
cmps
jge
mov
mov
fiadd
pop
or
ins
push
sbb
mov
(bad)
pop
cmp
nop
xchg
jno
mov
jp
ins
pop
sbb
dec
iret
inc
test
scas
pop
ja
pop
fidiv
cwde
pop
les
cmp
adc
cld
and
push
dec
pop
pop
loope
loope
fisubr
add
xchg
mov
jno
mov
out
mov
outs
mov
jg
xchg
jmp
xchg
das
adc
jb
cmp
jns
in
ror
push
xor
jecxz
mov
repnz
jg
dec
fsub
mov
sbb
fwait
shl
call
dec
je
and
add
adc
inc
push
cmps
mov
mov
pop
mov
into
adc
mov
repnz
ffree
dec
packssdw
add
and
inc
test
test
dec
mov
jno
add
add
adc
xchg
mov
int3
mov
adc
jmp
mov
and
cmp
addr16
(bad)
and
retf
mov
sahf
xor
cmc
call
ss
movs
mov
popa
fwait
test
mov
daa
stos
adc
xor
pusha
cmp
and
in
lea
cmp
fucomp
add
scas
sub
push
bound
mov
ret
out
dec
push
jge
pusha
fisttp
jmp
inc
mov
in
test
cld
ret
into
jl
leave
pop
outs
movs
movs
mov
mov
rol
in
mov
ror
(bad)
aad
xor
gs
xchg
shr
mov
shr
enter
pop
sbb
push
push
pop
clc
pop
cmps
xchg
inc
leave
mov
in
xchg
or
or
repnz
dec
cmp
clc
iret
dec
cmp
adc
cmps
test
test
push
in
in
mov
pusha
inc
cmp
lods
xchg
add
jbe
call
movs
fprem1
aad
cmp
outs
mov
imul
and
pop
arpl
jecxz
mov
mov
aad
mov
sar
leave
push
sub
dec
inc
xchg
xchg
sbb
jg
and
mov
jno
or
sub
jmp
cmp
adc
sub
mov
dec
pop
daa
add
aam
pop
and
dec
pop
ret
mov
lods
(bad)
loop
inc
cmp
int3
xlat
or
enter
pop
sbb
cmp
xor
(bad)
xlat
movs
repnz
les
sub
fldcw
mov
ror
iret
ror
arpl
es
sub
add
jg
lds
or
retf
fwait
(bad)
hlt
xor
imul
(bad)
imul
sub
jmp
mov
mov
addr16
pushf
out
push
or
out
pop
test
lods
nop
pusha
(bad)
imul
adc
leave
int
mov
mov
inc
loop
push
idiv
mov
addr16
xchg
into
mov
(bad)
jmp
cmp
cs
add
cmp
mov
imul
xor
pushf
xor
push
popf
mov
aam
pop
js
inc
mov
inc
int3
xchg
(bad)
in
and
sar
inc
push
push
sub
mov
test
in
or
lahf
lods
jle
loope
std
xor
and
adc
daa
inc
pusha
or
sbb
retf
mov
dec
and
jl
into
push
mov
push
add
mov
xchg
cs
nop
aad
shl
inc
out
xor
ror
mov
(bad)
xlat
in
mov
inc
repz
add
ret
lods
jmp
addr16
fadd
lds
mov
ja
cmp
(bad)
mov
jbe
fcomp
clc
sub
inc
jo
retf
fcmovbe
je
loope
sar
clc
rcr
jmp
not
push
push
lods
mov
xchg
push
mov
(bad)
mov
pop
dec
xor
rcr
adc
shr
xor
leavew
sub
(bad)
xchg
imul
mov
sub
cld
mov
add
addr16
pop
mov
lods
mov
mov
ja
daa
loop
dec
stos
jnp
ins
xchg
pusha
mov
call
cwde
enter
or
cmp
clc
cs
lds
mov
pusha
adc
mov
fadd
cdq
xlat
pop
cld
enter
stos
adc
xor
sti
test
iret
popf
push
pop
in
inc
in
xlat
pop
xchg
jl
push
iret
rol
or
mov
leave
adc
fcmovne
mov
inc
sbb
mov
(bad)
or
push
je
push
mov
mov
jne
or
mov
int
sbb
call
inc
lds
inc
fist
sbb
sahf
xlat
je
xchg
adc
dec
in
pop
aas
out
ds
std
pop
push
pop
in
sbb
(bad)
int
les
xchg
sub
mov
fidivr
imul
dec
jnp
js
mov
sub
pop
sahf
push
das
mov
shr
jne
mov
sub
or
push
ds
inc
call
inc
mov
sbb
mov
push
add
jae
das
outs
jae
sub
pop
jp
fsubr
in
movs
mov
imul
cmp
test
pop
mov
cmps
popa
inc
imul
bound
add
js
test
aam
jl
cmps
aam
mov
push
rcr
pop
sub
jo
(bad)
mov
dec
jnp
shr
push
push
bound
int3
sbb
in
xor
(bad)
shl
mov
nop
push
and
mov
lods
sahf
iret
popf
test
lock
push
or
inc
mov
push
add
or
test
xchg
cdq
cld
sub
add
inc
adc
out
mov
sub
call
das
loop
inc
mov
sub
cdq
idiv
test
pop
jb
or
xchg
jmp
push
leave
add
loop
sub
movs
call
(bad)
int
push
or
pop
xor
cmp
adc
mov
inc
ins
sub
sbb
or
pop
retf
inc
adc
sti
push
xchg
mov
cmp
inc
mov
cli
pop
jo
xor
xor
repz
adc
push
dec
pop
daa
push
out
mov
inc
cli
pop
std
out
bound
fwait
adc
cmps
fwait
lea
mov
pushf
mov
iret
ror
lds
cmp
cmp
add
fild
fnsave
mov
ins
retf
and
in
jmp
mov
loopne
jb
pop
in
inc
ret
bound
pop
adc
into
xor
pop
js
shl
mov
xchg
jmp
push
xchg
mov
es
fidivr
sub
cmc
jae
pusha
adc
push
rcr
dec
jns
call
das
xor
test
cwde
mov
pushf
inc
push
or
add
jmp
pop
cmps
push
push
addr16
cmc
dec
lods
aas
jge
stos
outs
loop
push
aad
int
test
mov
jo
jle
(bad)
stc
jp
mov
inc
cmp
int3
mov
adc
mov
lods
add
int3
and
mov
out
mov
cmp
stos
lods
outs
in
dec
loopne
(bad)
cmps
ret
adc
cmp
jae
fwait
push
lds
mov
push
sar
and
xchg
mov
fisubr
call
mov
jbe
dec
add
fs
pop
outs
sub
inc
jmp
cs
repnz
jb
adc
mov
xor
test
and
mov
adc
pop
loopne
das
cld
dec
mov
test
(bad)
mov
les
ret
xor
sbb
clc
mov
xor
sti
or
out
imul
sub
cwde
and
xor
add
adc
jmp
cmp
sahf
hlt
sub
mov
stos
xor
xchg
jmp
adc
ss
out
or
ss
dec
or
not
into
mov
cmps
adc
add
lock
cmp
fmul
call
cmc
test
rep
mov
mov
sub
adc
cmc
movs
into
mov
idiv
test
std
jg
scas
pop
in
pop
add
and
and
call
or
jne
and
adc
jne
xchg
icebp
shl
cs
sbb
clc
das
rcl
jmp
cwde
jbe
pop
popf
mov
sub
cmc
loopne
mov
movs
jns
xor
push
adc
add
daa
jno
push
dec
push
jg
fmul
jo
out
and
pushf
jne
lds
lods
int
xchg
xor
mov
push
or
ins
cmps
out
scas
mov
push
pop
pop
mov
dec
aaa
js
adc
inc
jl
pop
call
aad
adc
xchg
xor
lahf
pop
mov
je
std
adc
xor
nop
push
push
aas
cmc
icebp
test
push
pop
xchg
mov
aad
push
aaa
lea
adc
mov
int3
stos
pop
popf
ins
mov
int3
xor
add
jge
js
push
addr16
(bad)
sahf
and
ss
jp
pop
pushf
cmp
lods
mov
stc
mov
test
mov
mov
xchg
fsub
cmp
hlt
jns
lea
div
sbb
cmp
or
adc
movs
mov
leave
jmp
xor
je
mov
jmp
jbe
leave
push
daa
sahf
stc
leave
pushf
in
outs
dec
and
cmp
inc
stos
pop
sub
adc
mov
stos
adc
inc
lock
iret
stos
popa
stos
pop
idiv
test
test
cmp
or
ins
mov
dec
fistp
fidiv
sbb
leave
cwde
sub
popa
push
aad
std
ds
ret
aam
jns
jp
neg
mov
jb
lods
test
and
je
ret
(bad)
in
push
call
or
pop
mov
dec
test
push
xchg
push
pop
mov
cld
int3
(bad)
sahf
addr16
ret
call
mov
out
jmp
sub
fist
push
mov
sar
mov
add
pop
sbb
cmp
adc
sbb
push
in
stos
jle
repz
fcmovu
adc
shl
adc
retf
aas
dec
push
cld
jns
add
dec
push
xchg
add
cdq
(bad)
test
call
mov
push
repz
pop
dec
inc
and
pop
call
or
imul
add
out
rcr
jmp
sub
mov
arpl
inc
push
into
in
aaa
xchg
mov
dec
pop
xor
into
or
stos
adc
xor
pusha
lock
das
dec
inc
inc
sbb
mov
cmps
add
dec
xlat
mov
ins
cmp
pop
ins
test
pop
test
out
scas
cli
retf
out
fdiv
pop
ins
ja
scas
or
sub
mov
push
push
jne
pop
add
pushf
ins
push
and
imul
jne
add
aas
clc
pop
jnp
int3
sbb
jmp
lods
in
sbb
jge
fsubr
aad
ret
loope
xchg
jno
jne
inc
add
je
push
dec
push
xchg
xor
sbb
mov
mov
xchg
dec
pop
call
clc
fmul
mov
clc
(bad)
xchg
mov
lods
pop
dec
scas
movs
ret
in
sub
mov
fimul
jmp
test
jmp
shl
data16
das
sub
pop
popa
aad
mov
push
jecxz
inc
test
nop
ins
pop
jno
out
sbb
dec
jmp
test
pop
push
lods
in
popf
push
scas
lea
(bad)
aam
fst
stos
jg
pop
shr
pop
pop
and
aad
and
jno
and
cld
ret
jae
(bad)
idiv
imul
xchg
in
test
xor
fdivr
jge
add
sbb
push
add
push
mov
aam
aas
mov
in
fadd
xor
mov
aam
int
daa
fwait
mov
cmc
cmp
push
or
xchg
jg
iret
sbb
mov
mov
in
pop
jg
adc
xchg
sub
jp
outs
imul
cdq
cdq
js
ins
mov
jno
cmps
or
inc
lds
test
stos
call
inc
outs
out
xor
and
add
adc
and
adc
loop
push
or
sahf
outs
shl
push
inc
dec
inc
dec
jae
pop
retf
inc
adc
jb
push
aaa
sbb
pop
test
fst
ret
test
aam
shl
in
mov
or
in
(bad)
mov
test
enter
or
ja
push
pushf
sub
xor
mov
call
loopne
out
div
jae
xchg
xor
jbe
pop
cdq
mov
fdiv
cmp
ins
(bad)
imul
enter
dec
inc
sbb
push
test
cmp
and
jae
pushf
shl
pop
loope
or
and
test
mov
inc
cwde
lahf
adc
out
clc
pop
call
add
popf
push
dec
(bad)
cld
js
mov
fimul
sbb
inc
push
mov
cs
daa
js
or
int3
mov
ret
rcl
adc
pop
into
add
or
das
sbb
dec
not
js
xor
and
xchg
test
add
add
mov
push
inc
xchg
sbb
pop
pushf
cmp
and
cmp
push
scas
dec
sbb
aas
aas
jae
outs
sub
adc
cld
jmp
cmps
mov
divps
push
sbb
popf
inc
xor
nop
fldcw
rcl
out
and
cmp
mov
ret
fstp
mov
and
and
mov
mov
push
push
dec
mov
sbb
out
sbb
sub
pop
data16
xchg
je
push
je
(bad)
fsincos
xchg
sti
imul
adc
out
inc
or
mov
xchg
addr16
pop
aaa
popf
lods
sti
sub
(bad)
js
fwait
pusha
lock
xchg
cli
pusha
les
mov
xor
mov
shl
or
push
test
mov
stc
ret
mov
mov
sub
jle
and
and
xor
daa
je
addr16
jae
leave
mov
and
push
movs
dec
cmps
adc
iret
adc
mov
or
popf
hlt
xchg
hlt
rcl
sub
dec
lea
or
mov
cdq
mov
cmp
in
int3
jnp
ss
or
push
shr
stos
adc
or
fmul
inc
pop
xor
cmc
aad
int
jae
clc
sub
retf
and
test
sub
cmp
std
stc
pop
fcom
ss
pop
jns
or
ins
mov
sbb
daa
out
push
call
lds
cdq
gs
addr16
xor
jg
pop
xor
ds
jg
mov
std
mov
std
and
push
stos
cmps
dec
adc
push
test
dec
xchg
imul
push
(bad)
sti
or
xor
sbb
pop
data16
pop
test
mov
mov
jae
and
scas
out
sti
scas
sub
jle
mov
imul
je
pop
dec
not
add
(bad)
iret
jb
loopne
xchg
cs
out
les
mov
mov
mov
add
addr16
(bad)
ds
adc
mov
mov
(bad)
mov
retf
push
mov
pop
repz
jb
sti
adc
mov
jo
test
retf
lahf
or
sbb
dec
xor
dec
inc
test
fidivr
lds
out
xchg
shl
imul
dec
lahf
mov
mov
pop
retf
ins
lods
jno
dec
push
xchg
pop
unpckhps
mov
cli
xor
daa
ins
addr16
outs
adc
mov
jnp
fwait
int
pop
stc
aas
pop
cmc
call
mov
sub
pop
sbb
aas
sbb
std
in
adc
sbb
push
cmp
ret
push
push
iret
inc
lock
dec
out
add
int3
mov
xor
and
cmp
in
xor
test
aas
jmp
sti
(bad)
clc
movs
scas
dec
mov
xchg
xchg
mov
cmc
in
daa
sub
loop
push
and
jg
(bad)
jb
adc
aaa
ins
mov
js
inc
shl
pop
das
es
in
fnstcw
lock
xchg
sbb
push
ins
push
push
dec
loopne
std
lfs
jne
push
dec
cmps
jnp
push
in
push
loopne
call
xor
cld
mov
rcr
jle
pushf
adc
sub
aas
test
cmp
mov
xor
xchg
ret
test
sbb
in
fld
dec
sbb
in
xor
fucom
fistp
lods
arpl
fmul
test
pop
scas
out
sub
xor
jge
push
jbe
jg
xchg
stos
lea
push
push
or
aas
dec
fbld
iret
or
jnp
dec
or
cmp
pop
push
fnstcw
or
imul
in
or
cmp
jne
inc
test
cmc
psadbw
mov
xchg
out
call
icebp
ja
lods
leave
inc
push
fmul
outs
stos
aam
pop
cld
imul
std
imul
push
add
imul
movs
cli
xchg
mov
psraw
jnp
jmp
mov
das
xor
fistp
mov
sbb
leave
out
stc
ja
int3
ins
scas
push
enter
jnp
movs
loope
fs
mov
xchg
mov
shl
bound
jns
or
push
sbb
xor
jge
mov
jmp
in
mov
inc
xor
cmp
pop
adc
in
jb
inc
push
fs
dec
xchg
jle
jns
dec
pop
div
out
(bad)
mov
jnp
into
mov
jp
add
and
push
(bad)
jmp
(bad)
mov
cwde
push
sbb
sbb
or
adc
call
xchg
(bad)
xchg
and
xchg
hlt
inc
pop
adc
movs
pop
xor
sar
mov
repnz
pop
mov
in
mov
pop
inc
mov
mov
push
xor
mov
sub
cli
loop
and
fidiv
sbb
pop
dec
pop
cmps
mov
xchg
cmps
lea
test
or
ss
aaa
aam
pop
sbb
loopne
push
xchg
cmp
mov
jmp
stc
imul
cmp
nop
sub
sti
paddsb
and
daa
mov
das
dec
xchg
call
fs
sahf
mov
inc
jbe
(bad)
mov
jo
sti
push
adc
jnp
mov
mov
dec
push
dec
mov
not
stc
outs
jecxz
add
out
call
or
dec
and
adc
sub
stc
lahf
mov
push
adc
jmp
movs
outs
cmp
js
inc
adc
mov
mov
or
adc
ret
fmul
fdivr
push
add
and
int3
inc
cmp
push
hlt
xor
add
(bad)
sbb
jg
inc
lea
xchg
gs
test
sbb
lds
popf
fwait
sbb
ds
vpalignr
test
xor
xor
push
scas
mov
inc
call
das
dec
cmp
loope
in
ret
or
adc
jg
(bad)
fisttp
rcl
cwde
add
pop
pushf
ss
ins
stos
and
jbe
fcomp
inc
ins
(bad)
sbb
xchg
lahf
popa
aam
push
mov
in
pop
push
add
fldenv
(bad)
fwait
xchg
ins
test
(bad)
xchg
or
imul
or
out
cmps
cmp
sub
mov
pop
adc
mov
sbb
adc
sub
arpl
ins
pop
test
push
xchg
or
or
popf
mov
mov
inc
cmp
or
xchg
pop
out
pushf
clc
xor
xlat
pushf
push
mov
ins
iret
cmp
pop
hlt
gs
adc
mov
xor
mov
out
test
fstp
push
loopne
mov
add
jno
ds
jns
imul
out
imul
jp
cdq
loop
pop
call
ins
mov
cwde
(bad)
sbb
push
das
cmp
das
adc
add
arpl
ret
fnsavew
jmp
jge
jmp
push
push
and
adc
jno
push
sti
ds
ror
cmc
(bad)
adc
mov
mov
shl
mov
dec
add
scas
sub
jecxz
adc
fld
xchg
mov
mov
push
cmp
push
arpl
jmp
imul
out
lahf
ret
je
fisubr
mul
sub
jmp
retf
inc
xlat
(bad)
mov
add
je
div
mov
inc
gs
loopne
mov
lods
push
(bad)
sub
and
mov
popa
clc
xor
inc
imul
arpl
jp
dec
in
mov
je
mov
cld
ins
mov
fst
out
or
cmps
movs
aam
mov
pushf
and
xchg
xchg
dec
ja
shl
fstp
adc
movs
std
dec
mov
inc
ins
repz
int3
jg
ret
pusha
js
push
inc
adc
push
enter
jg
int
shl
adc
inc
or
icebp
inc
jae
sub
cmc
mov
xor
sbb
cmps
pop
pusha
sahf
xchg
fsubr
mul
frstor
xchg
xchg
int
pushf
dec
ret
sbb
inc
push
aad
or
aam
inc
or
lods
fbld
cmp
stc
adc
and
enter
or
and
retf
jge
jle
jmp
mov
loop
jmp
cmp
das
push
inc
push
test
mov
and
test
push
or
sub
repnz
pop
add
int
xchg
push
jnp
and
inc
mov
stos
mov
add
cmps
loopne
and
inc
clc
test
mov
mov
stos
dec
icebp
mov
(bad)
sub
cmc
js
jecxz
fadd
jp
enter
popa
and
mov
imul
in
fsubr
sub
icebp
mov
dec
dec
push
gs
inc
xchg
jmp
xor
dec
rcr
sub
and
call
rol
lahf
pop
mov
jns
push
mov
push
in
jmp
pop
scas
ss
cmc
sahf
fisttp
inc
dec
add
xchg
cmp
add
(bad)
movs
mov
jg
jo
ret
sub
nop
test
xor
test
sbb
xor
dec
xor
ret
xchg
lock
fwait
(bad)
jb
inc
hlt
les
or
mov
push
pop
or
jmp
stos
add
push
int
cmp
jne
mov
outs
cmp
enter
lahf
jl
stos
dec
addr16
pop
out
imul
pop
loope
inc
cmp
cmp
or
mov
ins
ja
test
mov
movs
leave
lods
pop
dec
sub
daa
or
push
dec
sbb
jmp
call
push
xchg
mov
in
cld
push
bound
push
(bad)
mov
jge
or
rdtsc
les
jle
xor
lock
fprem
gs
fwait
push
adc
jnp
push
pop
clc
push
sbb
adc
xor
mov
pop
adc
jmp
retf
and
inc
loope
add
jbe
rol
and
mov
out
call
rol
sub
add
pop
jmp
mov
jno
les
adc
mov
add
adc
popa
and
das
jno
retf
popa
cmps
stos
or
sub
stc
aaa
popf
loopne
and
out
out
mov
xor
outs
dec
inc
mov
jl
lods
pop
mov
adc
adc
call
retf
inc
add
xor
call
fwait
xchg
mov
psllw
das
add
push
push
aaa
fst
xchg
jbe
test
inc
adc
cmp
jge
scas
outs
xchg
das
pop
mov
int
mov
test
and
mov
push
mov
test
dec
sahf
push
xchg
(bad)
pop
dec
loope
sbb
and
(bad)
daa
mov
test
mov
or
les
pop
push
stos
mov
nop
fld
lods
mov
rcr
ja
rcl
ret
repnz
cmp
sbb
int
adc
push
fsub
push
inc
loop
xor
repnz
and
mov
mov
push
sub
jmp
ins
inc
jl
pop
fs
in
movs
cli
xchg
inc
stos
xlat
pop
inc
(bad)
ret
pop
leave
aad
jl
inc
in
js
out
addr16
mul
pop
lock
pop
xor
push
mov
ret
pop
sahf
popa
and
stos
push
inc
dec
lods
scas
lea
int3
sub
mov
lds
adc
xchg
imul
aaa
cs
ins
loope
xchg
int
cmp
mov
xor
pop
movs
mov
push
pop
mov
je
push
call
adc
ror
je
jnp
in
fldlg2
out
dec
sub
fist
push
cli
dec
outs
pop
popf
test
sub
mov
stos
xlat
fimul
mov
sub
inc
pop
loope
add
pop
adc
out
(bad)
fcomp
cmp
adc
adc
push
out
jb
adc
imul
xchg
or
std
call
push
or
dec
pushf
inc
outs
adc
loop
cmp
mov
mov
jecxz
fwait
cld
retf
(bad)
sbb
dec
inc
aam
inc
sub
int3
out
sahf
ss
pop
hlt
xchg
mov
jno
(bad)
es
data16
movq
pop
out
in
out
cmps
ret
pop
sbb
xor
in
adc
imul
adc
(bad)
into
shr
loop
add
dec
clc
dec
cmp
push
outs
mov
daa
jae
outs
popa
addr16
aam
sub
dec
add
arpl
jle
or
ins
and
leave
call
add
pop
mov
es
or
or
xor
inc
mov
scas
lea
sbb
movs
push
popf
out
dec
scas
ror
daa
or
aas
aad
and
mov
sub
shr
and
(bad)
call
jno
pop
jle
repz
sbb
imul
cmc
mov
fldcw
stos
call
sub
xchg
jns
mov
push
dec
jae
pop
dec
jb
addr16
imul
loope
jle
js
jno
jnp
jbe
xchg
cmp
leave
(bad)
cli
fcom
shr
cmp
retf
gs
jns
fdiv
out
cmp
hlt
xor
imul
out
outs
dec
pop
imul
mov
jg
in
scas
outs
jns
jle
dec
dec
cli
ja
aad
shl
sub
cld
mov
outs
dec
xchg
rcl
cmp
push
inc
cmps
imul
sub
(bad)
jge
test
outs
xchg
cmp
sar
popf
xor
inc
in
sahf
fstp
pop
out
hlt
lods
dec
pop
mov
jmp
lods
xchg
xchg
aas
sahf
xor
mov
pop
fprem
setg
ds
add
add
lods
daa
xor
xchg
(bad)
aam
imul
jp
push
pop
mov
(bad)
or
sbb
xchg
rcl
in
outs
stos
adc
dec
sub
fmul
out
xor
fisubr
(bad)
test
fs
or
push
push
mov
aam
ret
sub
cwde
fs
jns
mov
ret
ror
cli
xor
retf
dec
aaa
idiv
or
inc
retf
jb
xchg
mov
sub
mov
scas
mov
add
fild
sti
xchg
loop
inc
cmp
sub
jae
add
dec
ss
mov
ret
add
outs
cdq
mov
repnz
inc
xor
call
adc
(bad)
mov
movs
mov
fisttp
xchg
cmps
mov
jmp
adc
xor
mov
and
shr
or
push
sub
or
cmp
push
rol
mov
or
cmp
cmp
pushf
retf
movs
dec
popa
jnp
sbb
mov
push
lahf
fild
ins
lods
lea
stc
pinsrw
sar
adc
xchg
sub
je
not
test
xchg
sbb
popf
loop
inc
(bad)
(bad)
mov
loopne
cmc
add
loop
in
arpl
inc
cmps
xor
out
leave
aam
hlt
movs
in
arpl
hlt
push
jbe
add
push
loope
ds
cmp
xchg
in
scas
pop
lds
push
int
and
inc
popf
enter
sbb
int3
stos
pop
int
adc
loopne
adc
pushf
push
shl
repz
xlat
loope
addr16
sub
pop
daa
paddw
es
retfw
fisub
mov
ror
mov
fidiv
xor
mov
imul
cmps
inc
jno
addr16
xlat
sbb
retf
push
mov
add
sar
or
pop
pop
adc
outs
imul
in
inc
pop
loop
retf
adc
sub
stc
inc
dec
sbb
add
fs
and
cmp
scas
test
jg
sub
out
popf
jae
dec
fidiv
pop
stc
movs
xor
pop
ja
mov
ins
rcr
and
cmp
sub
push
jbe
pop
enter
out
mov
repnz
cmps
lea
xchg
cmp
jns
nop
(bad)
out
push
push
dec
adc
push
fidivr
jnp
(bad)
push
ss
sub
rcr
or
cmp
xor
cli
jp
push
or
push
stos
xor
add
push
popf
sub
shl
nop
sbb
push
div
adc
test
ret
mov
inc
sub
xor
rcr
aaa
test
fisub
(bad)
push
or
xchg
sysenter
fs
shl
dec
pop
dec
in
lods
mov
sub
neg
adc
push
add
adc
cmps
daa
cmp
les
jmp
xchg
ret
mov
repz
aam
and
inc
mov
and
mov
jno
mov
es
and
push
ins
cmp
neg
push
adc
stc
adc
cmp
mov
dec
cdq
mov
pop
push
adc
push
or
sub
jns
stos
adc
cmp
and
in
lock
xchg
and
cmc
cs
or
xchg
test
inc
push
push
test
mov
adc
jne
leave
xchg
cmp
xchg
sub
add
(bad)
jae
aad
sbb
push
dec
sbb
(bad)
sbb
test
call
cmp
stos
movs
and
test
xor
fmul
aas
push
test
add
jns
or
int
into
mov
sbb
dec
stc
push
fs
jecxz
adc
cmp
sbb
inc
xor
out
sub
cmp
ds
xor
inc
ja
lods
fld
hlt
iret
popa
std
repz
cmp
mov
popf
adc
push
jmp
inc
(bad)
cmp
dec
pop
repnz
push
xlat
loop
mov
(bad)
shl
daa
mov
add
in
jp
std
daa
fisttp
xchg
mov
xor
jge
dec
mov
test
js
mov
hlt
adc
mov
jecxz
mov
not
(bad)
std
leave
das
lock
pop
push
cmp
iret
icebp
sub
mov
mov
mov
jmp
je
adc
adc
repz
jge
or
into
jb
adc
and
fwait
sbb
inc
or
pop
das
out
and
mov
inc
or
sub
xchg
dec
mov
fsubr
leave
add
jns
lds
jmp
addr16
outs
jl
iret
xor
mov
pop
xor
gs
in
adc
sbb
arpl
popf
mov
scas
dec
stos
dec
xor
mov
cwde
push
in
lods
add
jns
jns
adc
in
inc
clc
pop
push
jl
jno
sbb
in
xchg
cld
dec
jmp
xchg
iret
mov
adc
fmul
call
adc
mov
fisttp
cmp
call
or
mov
push
lods
mov
frstor
in
repz
dec
adc
jl
jge
fdiv
in
mov
sub
sar
mov
mov
(bad)
sti
jns
repnz
jno
xchg
lock
add
and
push
ds
into
push
sub
and
sbb
jns
push
scas
(bad)
stos
mov
add
mov
cmps
jmp
out
pop
push
mov
mov
push
rcr
shr
fst
hlt
or
jl
in
pop
js
jae
jnp
mov
mov
pushf
in
dec
dec
push
hlt
cwde
or
icebp
push
in
clc
stc
mov
outs
sub
jo
shl
or
popf
push
or
and
inc
aam
call
push
sbb
mov
jmp
ins
(bad)
fs
(bad)
je
and
push
sub
enter
iret
loope
xchg
jl
or
mov
push
pushf
test
inc
ja
jmp
push
mov
xor
cmps
mov
fstp
lock
sub
mov
mov
jno
and
push
out
fwait
out
push
pop
aam
jle
pusha
xchg
mov
sbb
in
sub
inc
bswap
sbb
mov
sub
or
stos
out
outs
ficom
mov
imul
loop
inc
lea
jmp
out
aam
push
pop
adc
call
or
sbb
cmp
pusha
mov
sbb
div
mov
and
and
movs
outs
mov
push
xchg
in
inc
test
fld
test
cld
loope
cmp
add
mov
push
fdivr
cmp
ss
dec
out
test
mov
inc
jp
fcom
cwde
jmp
xchg
movs
pop
inc
fmul
cld
dec
sub
ss
push
inc
imul
lods
xor
dec
setp
or
cld
mov
mov
mov
or
sbb
mov
cmp
sub
mov
sub
mov
pop
rcl
add
xor
mov
mov
cwde
push
stc
es
(bad)
shr
(bad)
xchg
(bad)
fstp
add
out
adc
ins
mov
lods
pop
dec
jmp
seto
adc
jg
leave
fadd
cli
inc
jecxz
rol
dec
rcl
ins
and
mov
fld
cmp
mov
xor
dec
test
iret
outs
in
pushf
mov
loopne
es
adc
call
cmp
add
xchg
dec
lds
movs
pop
mov
in
push
mov
cmp
ficom
cmp
push
mov
pop
push
sbb
sbb
out
out
dec
pop
fwait
iret
nop
sub
inc
cmp
mov
icebp
stos
xchg
mov
xchg
(bad)
push
test
xor
mov
not
push
fidivr
xor
inc
cmp
dec
cmp
shr
rcl
xor
outs
shl
pop
xchg
jmp
std
adc
mov
clc
jnp
sbb
dec
ins
ins
call
iret
jno
jmp
mov
push
push
addr16
jg
mov
dec
mov
test
test
dec
mov
or
mov
xor
in
push
cmp
in
or
sbb
push
xor
mov
add
and
cmp
(bad)
aam
xchg
dec
dec
or
mov
loopne
mov
xchg
lods
in
ds
mov
outs
jno
push
cmp
mov
int
js
push
push
sbb
(bad)
enter
xchg
cmp
lods
sbb
cwde
mov
je
mov
gs
xor
fs
cs
arpl
push
aas
ror
mov
data16
sub
push
(bad)
icebp
mov
or
xchg
cmc
dec
pop
push
(bad)
fld
dec
inc
add
dec
test
(bad)
xchg
ins
mov
enter
aad
repz
mov
call
dec
push
ret
jmp
outs
sbb
jnp
mov
movs
dec
sahf
cmp
mov
fdivr
into
mov
test
imul
pop
jge
loop
or
and
cs
push
outs
sar
pushf
pop
pop
shl
or
hlt
das
push
in
rcr
add
mov
rol
repnz
jae
cld
pop
sar
(bad)
and
sti
jo
movs
push
push
jle
outs
addr16
out
stos
mov
aas
fild
dec
sub
push
mov
mov
add
into
call
cmps
out
xor
lods
push
les
inc
or
push
pop
jmp
mov
xchg
pop
dec
lods
jg
jl
mov
sub
out
imul
sahf
fisttp
or
pop
lods
test
jecxz
pusha
push
pop
jno
call
int
movs
lods
(bad)
enter
push
mov
cmp
add
cs
xchg
push
inc
mov
add
inc
ins
loop
mov
cld
test
dec
ss
push
pushf
mov
push
xor
dec
cli
retf
jl
ins
aaa
inc
jg
sti
lock
leave
rcl
ins
sti
and
test
mov
pop
gs
aaa
ins
in
jmp
jnp
xor
dec
ins
gs
(bad)
mov
sub
xchg
mov
xchg
push
je
add
cmp
stc
xor
adc
mov
sub
out
mov
fisubr
stos
fldcw
sar
cmps
lock
or
jnp
adc
mov
xor
mov
jae
repz
mov
jle
es
or
adc
jbe
mov
clc
inc
scas
mov
aaa
xchg
adc
fisttp
pop
stc
imul
bound
jecxz
inc
or
jo
or
adc
inc
adc
nop
pextrw
jne
mov
xchg
jno
cmps
mov
scas
sbb
pop
retf
call
in
lods
popa
popa
lods
leave
dec
cli
shl
pop
add
or
sbb
inc
dec
mov
(bad)
xor
cmc
inc
outs
xor
add
popa
cwde
fidiv
gs
std
dec
adc
lock
call
dec
repz
add
mov
xor
in
leave
jo
mov
call
mov
dec
mov
mov
mov
sbb
sbb
call
mov
jle
add
fsubr
and
gs
dec
repnz
pop
push
add
sbb
std
hlt
adc
jne
nop
movs
pop
adc
into
test
xchg
cwde
xor
mov
movs
mov
add
mul
xor
gs
data16
test
jo
ret
inc
js
mov
xor
leave
sub
icebp
push
jge
jbe
sbb
fstp
(bad)
pop
inc
xor
pop
sti
(bad)
inc
retf
in
cmp
xor
xor
pop
jne
ins
and
add
addr16
bound
push
(bad)
or
add
sbb
jge
pop
pop
xlat
pusha
in
xchg
test
push
ins
jne
repz
vmread
push
enter
jp
cli
sub
out
addr16
add
fld
push
sbb
jmp
sub
dec
add
pop
cdq
int
pop
mov
sbb
inc
lea
xchg
data16
mov
jbe
push
out
ret
outs
retf
pop
push
mov
outs
js
mov
sbb
mov
call
(bad)
aad
pop
bound
inc
sbb
cli
pop
loopne
and
add
sub
mov
ror
fldenv
mov
sub
push
stos
pop
out
cld
jl
dec
add
jb
js
inc
call
push
daa
jo
or
pop
mov
(bad)
cmc
adc
and
pop
(bad)
mov
add
int
or
lods
mov
fdivp
test
xor
adc
mov
and
jbe
add
int
jno
inc
(bad)
fcmovnu
lods
mov
jp
std
movs
movs
call
sub
call
sti
test
xor
push
in
repnz
jecxz
es
push
mov
inc
cmc
cmp
in
add
xchg
jo
into
inc
jae
fstp
xchg
shl
dec
addr16
push
fstp
rcr
and
xchg
push
cmp
add
jb
adc
aas
(bad)
ror
jo
mov
es
inc
std
inc
adc
out
nop
sbb
jl
outs
cmps
jp
lea
fisttp
add
ins
int
mov
adc
pop
or
xor
mov
ucomiss
sub
sbb
dec
(bad)
mov
mov
cmp
out
aad
nop
xchg
adc
cmps
xchg
cmp
push
dec
mov
retf
std
xchg
sub
push
loop
mov
ins
jp
or
fmul
loope
mov
inc
add
call
sahf
push
inc
clc
inc
pop
call
(bad)
out
pop
sub
xchg
mov
adc
out
ror
and
cld
out
(bad)
add
push
mov
and
fwait
pop
imul
pop
inc
(bad)
dec
fidiv
xor
mov
pushf
outs
inc
push
sbb
loopne
call
imul
(bad)
in
push
jmp
xchg
xchg
call
mov
mov
scas
test
adc
or
dec
int
les
xor
inc
lea
stos
add
gs
jnp
mov
mov
imul
lds
push
dec
pop
or
jbe
pop
cmc
or
sysret
dec
sbb
xchg
neg
cmp
add
dec
mov
adc
in
test
xor
push
jo
push
push
or
loope
popf
test
cld
add
in
cmp
xor
fwait
dec
xor
hlt
mov
or
push
cli
dec
mov
dec
cmps
sub
icebp
xor
pop
aaa
stos
cmp
out
(bad)
or
rcl
out
inc
push
push
lea
push
movs
movs
lock
mov
mov
movs
ins
add
pop
aam
inc
in
push
push
rcr
pop
xor
das
loope
xchg
mov
arpl
mov
xchg
xchg
loope
or
fwait
jle
dec
call
and
lods
jmp
(bad)
sbb
add
jb
rcr
call
xor
into
cdq
sbb
xchg
clc
inc
cmp
inc
aas
rcr
fucomi
jge
xchg
adc
idiv
xchg
out
inc
daa
loop
push
xchg
in
nop
and
inc
push
popa
std
je
fs
push
mov
xchg
or
mov
and
jl
and
loop
adc
pop
cdq
sbb
call
add
(bad)
clc
and
dec
(bad)
sbb
dec
xor
xchg
rol
push
xor
popa
call
mov
test
dec
mov
and
and
aad
dec
inc
xchg
sub
jnp
xchg
imul
inc
retf
cmp
ja
push
inc
sub
jl
dec
cmp
popa
aaa
(bad)
xchg
fsub
iret
push
dec
cmp
jnp
jg
fld
bound
xor
pop
ins
call
push
inc
xchg
add
mov
out
inc
dec
inc
mov
xchg
mov
dec
sbb
into
mov
imul
ja
and
fcom
inc
movs
imul
into
cmp
jmp
xchg
ret
int3
test
inc
cmp
and
adc
adc
add
push
mov
in
mov
js
(bad)
pop
xor
inc
rep
push
add
arpl
and
lds
add
inc
fstp
mov
cs
(bad)
in
jns
rcl
cld
or
xchg
into
or
pop
fdiv
cmp
push
jo
(bad)
push
dec
loopne
sti
push
xchg
push
xor
xor
and
ret
lahf
jnp
add
(bad)
aas
sbb
repz
push
(bad)
adc
push
mov
in
into
(bad)
loop
add
stos
xchg
fiadd
push
ins
sbb
ss
mov
cmp
push
pop
adc
(bad)
lock
into
bswap
data16
fst
repnz
or
rcl
aas
and
push
jle
sti
cmps
pop
sbb
cmp
mov
xor
stos
mov
push
pop
jecxz
shl
cmp
out
das
or
lods
iret
sahf
jns
cmc
and
test
add
imul
loopne
mov
lods
jb
inc
xchg
push
jno
ror
mov
inc
pop
out
rcr
and
fcom
cmp
test
shl
test
mov
adc
cmp
(bad)
cld
les
sahf
sbb
repz
popf
das
and
loop
jae
xchg
jae
xor
retf
adc
add
fmulp
fwait
adc
cmps
push
nop
mov
mov
or
call
adc
shr
pop
adc
adc
popa
pop
ja
or
mov
ins
push
pop
icebp
and
adc
out
lahf
adc
and
jno
jp
(bad)
fcomip
das
inc
js
pushf
jo
je
test
xor
or
mov
std
fidivr
xchg
pop
mov
das
jae
cs
pop
inc
int3
stc
and
test
xor
dec
and
mov
and
mov
sub
dec
push
in
xchg
or
fisub
mov
push
push
push
inc
push
jp
jb
mov
jo
sub
mov
dec
cmp
and
gs
push
or
mov
pusha
hlt
inc
lock
leave
in
or
call
mov
xor
icebp
adc
xlat
fnstsw
xchg
js
sub
data16
pop
outs
popf
mov
sub
in
sub
movs
pop
cmps
out
(bad)
adc
jle
out
jbe
jae
stc
stc
mov
les
add
out
rol
hlt
fidiv
or
stos
xor
add
outs
mov
scas
dec
imul
f2xm1
out
scas
aam
add
push
repnz
cs
cmp
push
inc
jg
mov
sbb
cli
inc
cmp
xor
cmps
push
call
adc
cld
mov
repnz
in
dec
xor
sbb
push
xor
in
sub
pop
cmp
xchg
jb
ret
retf
xor
fisub
inc
arpl
jo
jecxz
mov
sub
call
inc
cmc
ins
mov
imul
inc
jo
dec
or
pop
ins
jnp
push
cmps
pop
lock
mov
scas
xchg
lahf
sbb
jecxz
jo
jae
scas
loop
sub
gs
jmp
lock
mov
stc
stos
dec
xchg
js
xchg
into
inc
pop
inc
addr16
test
mov
sub
mov
inc
jp
jb
and
xchg
ficom
lea
ss
sahf
sbb
fsubr
push
mov
sub
inc
(bad)
shl
or
pop
aaa
xchg
lds
lahf
mov
pop
dec
inc
cli
in
and
daa
dec
addr16
std
pop
pushf
inc
mov
js
inc
push
in
xor
cmps
add
mov
outs
(bad)
aaa
xlat
ret
mov
pop
pop
mov
lahf
xor
pop
je
or
or
enter
daa
pop
nop
add
movhps
pushf
je
add
neg
les
(bad)
inc
or
sbb
and
jmp
repnz
ins
iret
add
cmp
repnz
push
int3
xor
or
(bad)
(bad)
sar
inc
scas
data16
jge
mov
call
mov
fsub
std
mov
jns
fcom
popa
je
xor
je
mov
dec
repz
imul
or
push
mov
ja
push
sar
sbb
sub
cmp
stos
push
push
loopne
mov
jns
pmullw
jmp
fstp
inc
outs
cmp
mov
movs
adc
inc
push
cmc
mov
lds
(bad)
cmp
mov
sub
jp
jnp
and
ffreep
shl
sub
inc
add
pop
test
dec
(bad)
cmc
fisttp
push
xor
sub
pop
(bad)
stc
fiadd
xor
shl
pop
mov
mov
(bad)
mov
xor
stc
sub
dec
mov
xor
push
mov
rcr
adc
je
mov
mov
jo
sbb
(bad)
and
xor
clc
sub
sti
xchg
in
dec
adc
stos
loopne
cmp
jg
xchg
aaa
mov
mov
(bad)
ja
icebp
mov
fsubp
mov
xchg
mov
in
push
loope
gs
or
mov
bound
adc
and
out
dec
sbb
ins
ror
xor
sbb
loop
pop
call
repz
pusha
sbb
jmp
sbb
sbb
and
mov
imul
inc
dec
jb
inc
movs
scas
ins
jae
aaa
outs
sub
cmps
pop
jle
adc
cmp
or
push
cld
sbb
pop
mov
mov
ss
xchg
push
mov
repnz
inc
and
aas
leave
push
xor
loop
cmp
push
test
and
stc
cmps
pop
out
fsub
xor
push
pop
popa
cwde
(bad)
ss
stos
sti
jns
or
outs
and
retf
xchg
ja
faddp
inc
inc
shl
sub
pop
movs
push
sti
mov
movs
in
push
push
sbb
push
call
sub
in
inc
pop
movs
jle
jmp
jns
out
fimul
mov
les
into
rol
in
push
rcl
jmp
pop
enter
jo
mov
xor
mov
call
ret
call
or
(bad)
jb
mov
bound
inc
leave
enter
and
mov
fidiv
adc
jb
aaa
mov
pop
xchg
adc
push
or
pop
sbb
cs
dec
cmc
mov
fdiv
ds
xor
in
and
dec
and
iret
in
xlat
xor
push
dec
xor
push
xor
inc
mov
cmp
retf
xor
dec
mov
mov
gs
inc
int3
scas
dec
repnz
push
push
fsubr
lods
mov
imul
call
gs
mov
div
setnp
pop
mov
das
js
int
xchg
popa
neg
pop
dec
push
mov
add
not
inc
fsub
leave
push
cdq
addr16
in
xchg
mov
in
lods
mov
sbb
movs
pop
dec
or
cmp
leave
loop
scas
inc
arpl
fnstcw
inc
sub
data16
mov
inc
and
mov
push
stos
push
jge
push
repz
inc
cmp
cli
cdq
shr
cld
lods
in
sub
addr16
dec
int
or
jl
rol
sub
loopne
movs
jbe
bound
mov
inc
les
pop
jmp
cdq
lds
inc
push
mov
inc
cmp
jbe
cs
mov
test
hlt
sbb
cmp
adc
pop
or
push
mov
sbb
sbb
(bad)
pop
pop
xor
loop
(bad)
or
call
mov
aad
sub
lahf
mov
shl
dec
mov
fst
push
fcmovnu
jnp
aas
or
int
or
adc
ins
aas
rcl
pop
add
xor
das
fidivr
out
and
pop
push
pop
je
jno
push
mov
cmps
xchg
cwde
in
jae
dec
inc
push
jb
push
xor
fdiv
pop
ja
mov
cmp
adc
(bad)
mul
aaa
sahf
scas
inc
outs
adc
mov
jmp
cmps
pop
pop
outs
retf
mov
sbb
mov
lahf
cmc
jle
pop
jbe
mov
xchg
add
xchg
and
mov
sub
add
je
cs
mov
push
sub
ja
cli
movs
inc
push
ins
add
adc
cld
or
lods
adc
mov
mov
data16
nop
pop
sbb
jge
sub
loopne
or
push
dec
adc
aaa
mov
lea
cli
mov
add
pop
pusha
pushf
xor
dec
xchg
stos
push
sbb
xchg
push
or
ficom
push
sub
inc
and
cmp
push
push
ret
mov
push
xor
add
mov
inc
(bad)
popa
stc
pop
sbb
pop
xor
lods
hlt
test
jp
scas
jmp
cmp
popf
loope
xchg
not
test
stc
(bad)
sub
loop
adc
std
inc
dec
push
jnp
inc
std
cs
ror
xchg
push
push
pop
test
dec
xchg
jp
cmp
(bad)
mov
sbb
cmp
inc
popa
cmp
mov
inc
mov
pop
push
push
cmps
in
imul
cs
aad
xor
pop
movs
sti
xor
lahf
cmp
mov
inc
call
pop
adc
push
pop
jmp
mov
add
int
mov
adc
add
mov
push
and
(bad)
gs
adc
mov
prefetch
or
fild
into
add
daa
push
repz
cmp
mov
jae
or
jecxz
fndisi(8087
adc
xlat
xor
mov
out
and
pop
sub
inc
cmps
inc
add
xchg
xchg
test
test
mov
mov
fwait
dec
test
xor
dec
arpl
push
inc
(bad)
push
jne
fbstp
hlt
js
out
leave
pop
mov
cwde
pop
imul
dec
add
push
push
call
out
xchg
fcomp
(bad)
jno
mov
push
dec
jecxz
mov
mov
bound
popa
mov
adc
jle
cli
cmp
mov
or
xor
jge
and
sar
cmp
mov
mov
mov
lods
loop
cmps
fsub
cli
and
add
xchg
cmc
ds
(bad)
adc
push
shl
jbe
xchg
outs
cdq
xchg
or
push
cmc
add
aas
(bad)
repnz
icebp
sti
scas
jecxz
xchg
jg
or
sti
fisttp
inc
sbb
xor
aas
xor
adc
push
dec
push
loopne
or
xlat
pusha
jnp
lock
(bad)
popa
imul
sub
fs
cmps
dec
dec
xchg
or
jecxz
dec
jmp
dec
stc
xchg
mov
sbb
push
push
in
popa
mov
cmp
out
jbe
popa
mov
call
pusha
call
xor
adc
adc
inc
cmp
cmp
push
pop
cld
lds
dec
shl
movs
mov
ja
pop
jg
shr
fcomi
mov
(bad)
mov
mov
mov
inc
pop
into
pop
mov
and
cmp
leave
xchg
cdq
or
dec
aam
int
clc
jmp
cmp
sbb
fs
shl
out
or
mov
arpl
out
mov
movs
stos
mov
pop
sbb
cmp
pop
test
sbb
add
mov
jne
pop
repnz
out
ror
repnz
push
dec
aas
repnz
sbb
xor
popa
cdq
inc
cmp
aaa
xchg
test
mov
xor
sbb
mov
push
das
xchg
js
repnz
sbb
fisubr
push
(bad)
int
lods
mov
(bad)
(bad)
xlat
cmp
lea
stos
inc
add
outs
cmp
push
and
loop
mov
inc
stos
mov
pushf
(bad)
inc
stos
push
inc
ds
jno
in
mov
(bad)
cmc
out
out
js
stos
jnp
ja
cmps
enter
adc
in
je
pop
mov
and
aas
dec
fisub
inc
and
out
mov
pushf
xlat
cdq
test
sub
rcl
cmp
enter
aad
out
dec
sub
out
aaa
pop
jecxz
out
fwait
ss
inc
js
jo
cdq
inc
aaa
out
sbb
sbb
ret
retf
jbe
and
sbb
popf
int
sub
lahf
pop
push
sub
pop
outs
test
pushf
mov
icebp
jnp
mov
dec
sysexit
xor
mov
in
je
call
sbb
and
push
inc
dec
inc
fldcw
stos
or
das
inc
sub
pop
ds
jne
sub
ret
loop
adc
pop
or
pop
mov
or
add
mov
lods
sbb
repz
or
mov
jg
push
lods
xor
fs
push
pop
fisub
daa
inc
jmp
cmp
(bad)
jno
outs
test
push
test
cmp
fs
xor
stos
jmp
out
ror
xor
ret
stos
cmp
dec
imul
and
les
adc
sub
add
bound
adc
mov
loopne
rcr
mov
inc
mov
cld
or
mov
jg
scas
enter
retf
mov
in
push
jg
ins
jp
mov
push
add
gs
mov
inc
add
(bad)
jmp
movs
mov
js
pop
stos
jp
lahf
test
rcr
push
ss
jmp
pushf
std
ins
mov
(bad)
or
cmp
and
sub
into
cmc
jnp
pop
mov
inc
ja
dec
pop
imul
xchg
repnz
je
test
add
jae
test
mov
pop
push
daa
popf
loop
dec
sub
xchg
fdivr
cdq
in
ror
(bad)
cmp
jecxz
pop
cmc
xor
mov
ror
jnp
ficom
outs
push
test
jb
inc
pop
arpl
call
mov
lds
sahf
xor
jecxz
out
fistp
jg
loope
push
inc
xor
retf
xor
xor
xchg
fadd
dec
mov
movs
retf
into
xchg
ins
cli
sti
pop
popa
xor
test
pushf
bound
dec
pop
add
or
loopne
adc
adc
sbb
push
sbb
or
rol
pop
call
dec
in
cmp
inc
loopne
aad
push
dec
cli
sbb
in
pop
xchg
arpl
js
inc
xchg
mov
clc
test
cmps
dec
mov
mov
xor
adc
push
cmp
jno
icebp
jmp
adc
les
clc
inc
add
loopne
mov
push
imul
movs
pop
fisttp
lock
dec
push
out
jge
mov
mov
lods
out
clc
xchg
or
xor
mov
(bad)
sti
push
sub
add
jp
out
daa
xchg
adc
pop
cmp
push
mov
dec
call
fsubp
pusha
mov
xchg
in
or
out
popf
sahf
pop
int3
outs
scas
loopne
add
jne
xchg
mov
stos
mov
cmps
in
sub
jne
repnz
add
jne
add
movs
mov
call
out
mov
gs
inc
sar
scas
pop
in
ins
fisubr
iret
inc
iret
xlat
adc
(bad)
pop
dec
test
jge
sub
push
inc
out
test
cdq
jmp
rcr
dec
loopne
mov
push
xchg
mov
cmp
es
pop
add
adc
jo
jne
cmps
cmc
fdivr
imul
fdiv
mov
inc
xor
mov
jl
fwait
adc
adc
rol
jge
enter
(bad)
jmp
sbb
aas
mov
(bad)
scas
or
arpl
in
add
xor
sub
cmps
lea
in
std
mov
sub
pop
into
xchg
gs
mov
dec
aam
jns
imul
mov
sar
mov
clc
div
cmp
test
push
mov
sbb
test
sub
out
xor
xchg
sbb
rol
pushf
jb
(bad)
jne
sub
les
test
hlt
sbb
mov
pop
popa
adc
test
cmp
cmps
mov
lock
mov
mov
daa
hlt
cmc
das
add
or
lahf
lds
pop
daa
cmp
mov
xor
mov
push
mov
sub
cmc
fmul
inc
scas
jno
sub
cmp
test
push
stos
sub
inc
xlat
pop
xchg
push
imul
clc
and
shr
pop
outs
imul
shr
pushf
test
(bad)
adc
cmp
add
xor
mov
mov
push
mov
adc
test
addr16
shl
inc
fcomp
inc
inc
nop
in
dec
xchg
das
inc
sub
xor
mov
jae
ja
out
(bad)
int
xlat
xor
xor
bound
or
out
imul
inc
cmp
push
lahf
sbb
cld
fnclex
sub
add
pop
dec
lods
jnp
push
or
and
(bad)
sub
push
lea
sub
inc
pushf
shr
loopne
mov
imul
cli
daa
in
jno
fnstcw
inc
cmps
(bad)
leave
hlt
fisttp
xchg
sbb
pop
cwde
push
int3
shl
xchg
add
repnz
push
std
adc
movs
xlat
cmp
xlat
mov
leave
retf
jae
sbb
and
shr
sbb
add
mov
hlt
jecxz
add
dec
xor
aam
pop
jnp
push
xchg
mov
push
sub
jbe
xor
ins
dec
xchg
popa
dec
lods
mov
stc
inc
push
clc
outs
mov
jl
jle
in
and
leave
mov
pop
iret
and
push
and
pop
cmp
stos
push
and
cmp
push
mov
ret
ja
mov
inc
lahf
inc
mov
mov
aas
push
cmp
rol
and
jecxz
dec
mov
dec
jbe
jp
and
inc
(bad)
in
ret
mov
xor
dec
xchg
das
mov
push
fiadd
or
js
ja
inc
outs
bound
inc
add
test
mov
sar
xchg
add
div
mov
mov
enter
pop
dec
rcl
push
push
mov
imul
out
cmp
retf
cmp
cmc
adc
xchg
cmc
or
inc
bound
rol
in
mov
and
xlat
outs
out
outs
dec
mov
inc
adc
test
test
push
cdq
jmp
or
fnsave
mov
push
xchg
ret
pop
or
and
hlt
pop
sbb
enter
sbb
icebp
(bad)
jle
adc
jg
retf
data16
adc
or
sub
fisubr
push
in
fcomp
ror
sub
jo
mov
and
(bad)
mov
inc
sbb
sar
pushf
adc
mov
in
push
retfw
mov
inc
out
popa
mov
or
inc
stos
dec
fadd
outs
lock
jmp
fiadd
int3
mov
clc
stos
loop
lds
ud0
jg
cmp
inc
sub
in
hlt
out
jl
mov
pop
je
pop
call
shl
fidiv
loope
jl
adc
or
mov
test
add
cdq
push
add
test
pushf
mov
adc
xchg
ret
fild
ret
jnp
jl
cmps
xor
mov
xor
sub
mov
and
shl
outs
mov
and
in
mov
jns
cmp
lods
sub
or
dec
push
push
(bad)
mov
adc
inc
jle
fadd
cs
pop
and
sub
mov
mov
retf
dec
sub
jg
xchg
xor
xchg
adc
int
fisub
adc
inc
iret
xor
loope
jns
mov
jmp
cmps
sar
pushf
xor
cmps
aad
add
adc
or
mov
pop
xor
ds
push
mov
cwde
or
mov
xchg
inc
jle
push
lock
push
adc
hlt
ret
xchg
lahf
lahf
rcl
pop
xchg
jo
push
lea
pop
je
leave
sbb
or
ja
xlat
out
or
push
into
sbb
jns
mov
xor
popa
xor
lock
sub
dec
les
dec
sbb
sub
and
jmp
cmps
mov
adc
fwait
stos
cmc
mov
push
pusha
leave
sub
fmul
push
fcom
mov
pop
mov
jmp
push
add
or
push
ficomp
popf
loop
movs
cli
sahf
test
popf
xor
call
dec
shl
jmp
mov
adc
cld
lods
dec
sets
jb
xchg
mov
mov
call
jmp
(bad)
cs
pusha
jp
push
mov
loopne
loop
neg
push
(bad)
or
popa
mul
mov
or
test
pop
sbb
inc
xor
mov
je
inc
xor
and
mov
(bad)
mov
or
ds
repz
sahf
fcom
xchg
and
mov
cmp
rcpps
movs
stos
retf
in
jbe
mov
cwde
hlt
(bad)
out
sub
adc
inc
xchg
(bad)
into
daa
rol
mov
aad
inc
sti
or
xchg
or
pusha
add
xlat
jp
stos
addr16
mov
(bad)
mov
cli
sbb
out
jmp
ins
inc
(bad)
add
dec
dec
xor
push
std
push
nop
(bad)
je
xchg
or
mov
jmp
(bad)
not
fwait
mov
pop
fild
adc
stos
mov
daa
push
rcr
inc
jae
loop
mov
pop
sbb
dec
cmp
mov
jge
scas
in
ror
outs
inc
cld
ret
push
pop
sub
push
mov
outs
nop
lea
jb
xor
fwait
aad
jecxz
outs
aam
inc
xchg
cmp
test
sub
push
jno
pop
icebp
cmp
ins
or
pusha
and
mov
je
arpl
retf
arpl
mov
mov
sbb
daa
jg
xchg
scas
icebp
retf
mul
push
mov
js
push
sbb
ret
or
dec
in
adc
aam
je
es
test
movs
and
lods
push
fwait
shl
aad
push
sti
(bad)
mov
or
push
call
sub
cmc
inc
jnp
ret
dec
test
add
retf
sar
dec
clc
ja
xchg
jae
xchg
mov
pop
inc
xlat
loop
icebp
stos
test
sub
jle
adc
in
push
adc
loope
and
push
imul
sub
outs
mov
mov
(bad)
(bad)
retf
retf
rcr
dec
jp
inc
pop
jb
fld
ret
xor
xor
out
fcomp
arpl
div
cld
ret
pop
xchg
lods
mov
add
fs
jns
cmp
jmp
jnp
push
push
ins
jge
mov
fnstsw
xchg
jp
cwde
mov
mov
ja
outs
dec
loope
jnp
sub
aas
jno
js
push
or
pushf
jmp
shl
sub
sar
loopne
daa
dec
mov
out
sub
popa
fs
lods
pop
push
jmp
or
inc
and
mov
popf
cmp
jbe
call
push
xor
mov
jg
xor
push
push
movs
add
or
add
sub
retf
leave
mov
cmp
leave
arpl
push
ror
stc
repz
call
imul
fcmove
add
adc
(bad)
jle
arpl
mov
mov
movs
push
test
mov
in
(bad)
cmc
adc
sbb
jl
cdq
pop
xchg
fcomp
cmps
(bad)
pmaxub
sar
or
jo
mov
xlat
push
and
mov
or
hlt
adc
icebp
out
loop
sub
aad
add
sar
cmp
mov
or
ror
mov
and
call
jbe
xchg
mov
jp
fcmovne
mov
or
std
fisub
jne
add
mov
mov
or
int3
sub
in
sub
outs
jmp
xor
out
dec
je
retf
std
pop
lock
and
jmp
es
sbb
adc
loope
sbb
mov
xchg
push
cmp
add
adc
cmp
aad
xchg
cli
add
xor
cmp
push
mov
stc
lock
or
repz
mov
mov
adc
jmp
push
jge
dec
dec
aaa
cmp
ss
repz
sti
mov
loop
(bad)
or
aaa
jns
sar
pop
loop
aaa
cmp
aam
mov
inc
dec
movs
bound
cmp
call
mov
enter
arpl
daa
cmp
inc
cmps
push
and
sbb
sar
push
adc
sbb
aam
loope
leave
and
mov
jnp
xchg
mov
mov
leave
lds
repz
pushf
movs
xlat
pushf
cs
les
dec
pop
xlat
adc
mov
out
mov
sbb
repnz
pop
dec
adc
sbb
out
mov
push
imul
mov
test
mov
dec
jae
mov
xor
out
mov
js
pop
out
push
pop
push
push
jmp
xlat
pusha
xchg
call
adc
cmp
push
push
xor
in
jns
pop
shl
push
inc
loop
jecxz
pop
or
jmp
test
sub
pop
(bad)
sti
mul
fwait
lods
xchg
cmp
lods
fistp
idiv
out
loopne
out
dec
push
popa
ins
dec
or
pop
xor
jbe
sbb
xchg
mov
xor
gs
or
data16
scas
add
clc
leave
hlt
jmp
test
(bad)
test
test
out
mov
call
(bad)
push
stos
ret
jge
sub
inc
lahf
jns
lods
xor
(bad)
clc
test
clc
in
arpl
es
jns
mov
inc
in
fdiv
scas
add
xchg
jmp
mov
lods
mov
call
and
icebp
sti
bound
mov
pop
pop
mov
pop
xchg
cmp
imul
popf
aaa
xor
(bad)
in
and
bound
inc
xor
clc
sub
gs
syscall
lods
iret
jbe
popa
fist
sub
lds
sbb
popa
or
inc
pop
mov
aam
(bad)
mov
jb
or
shl
mov
ror
mov
gs
jmp
imul
scas
and
in
adc
mov
pop
jb
and
inc
mov
cs
add
push
and
sbb
pop
imul
(bad)
xor
xchg
jno
fbld
inc
jnp
stos
add
pop
stos
inc
pop
pop
xor
pop
inc
test
add
add
(bad)
push
mov
shr
into
loop
xor
cld
scas
outs
pop
lds
jbe
scas
sub
add
fdiv
push
jae
mov
ja
or
adc
cld
sti
aaa
sub
xchg
pusha
cmp
mov
outs
outs
repz
xchg
int
or
mov
push
and
pop
sbb
cmp
imul
adc
dec
cmps
and
xlat
inc
mov
cld
sub
xor
mov
js
in
xlat
cmp
test
bnd
jmp
sbb
idiv
sbb
push
xchg
push
push
cmp
fadd
mov
add
push
stos
and
push
arpl
push
sahf
pop
sub
pop
movs
stc
jb
pop
fld
nop
in
not
mov
mov
and
or
fcmovbe
mov
inc
xchg
pop
xchg
cmp
xor
mov
ins
sbb
mov
sub
pop
stc
mul
cmp
mov
dec
mov
sbb
xchg
movs
call
cmp
loop
je
ins
push
xor
mov
ins
loop
popf
fdivr
cmp
jno
xlat
ret
sbb
dec
mov
mov
call
dec
je
jb
pop
sub
data16
fdiv
inc
or
stos
das
mov
mov
dec
(bad)
pop
stos
pop
scas
push
push
jmp
addr16
and
test
clc
sbb
stos
fwait
pop
ficom
je
mov
icebp
jbe
inc
cwde
dec
inc
push
adc
jbe
arpl
xor
sub
mov
jb
and
leave
test
xor
xchg
mov
mov
sbb
mov
call
fidiv
inc
pop
mov
mov
and
repz
repnz
push
lea
(bad)
js
je
leave
stos
sbb
cmp
push
and
(bad)
aaa
inc
jp
(bad)
jle
fcompp
or
(bad)
add
es
dec
out
mov
mov
ins
inc
fld
xor
popa
cmps
sub
xchg
pushf
push
mov
xchg
cmps
sub
dec
ffreep
pushf
enter
or
icebp
and
mov
mov
pushf
rcr
aad
jb
movs
hlt
xchg
push
mov
jo
and
das
push
bswap
loop
movs
cmp
jl
sbb
repnz
xchg
xchg
mov
(bad)
test
jle
inc
pop
jnp
leave
pop
mov
xchg
rcr
add
scas
movs
xchg
mov
inc
ss
in
jp
xchg
xlat
inc
icebp
adc
outs
sbb
and
sbb
stc
cmp
cmp
dec
fnstenv
in
in
jp
mov
cmc
push
ficom
retf
push
sti
shl
push
sets
and
push
mov
test
xchg
loopne
or
or
aas
cmp
std
push
and
xor
int
cmp
dec
div
repnz
mov
ret
mov
add
daa
push
iret
in
add
sub
sub
push
clc
ss
mov
dec
jmp
repz
adc
pop
jg
into
(bad)
ss
mov
repnz
enter
mov
cmc
push
mov
and
rol
xchg
inc
imul
jb
dec
sub
xor
ss
ja
dec
dec
mov
rol
adc
inc
push
jecxz
in
loope
dec
or
imul
cdq
mov
repnz
and
mov
cmp
xor
gs
stc
jle
sbb
dec
mov
sti
xchg
mov
xchg
frstor
fstp
adc
sbb
lods
movs
xor
aad
sbb
int
sbb
scas
repnz
scas
out
call
jle
outs
pop
movs
jp
mov
and
xchg
faddp
push
in
cwde
dec
push
fcomp
pop
cli
pop
stc
push
jns
push
(bad)
and
mov
or
jge
jbe
pushf
dec
mov
ins
jl
int3
pop
sbb
inc
push
js
sbb
inc
sahf
sti
mov
loope
jmp
push
mov
sbb
sti
mov
sub
sbb
loopne
out
xchg
pop
stos
jmp
mov
jo
in
(bad)
rcl
and
jle
inc
popa
lds
cmps
dec
jmp
fdivr
adc
cmp
daa
add
stos
fwait
mov
xchg
and
in
fbld
cmps
cli
stos
out
mov
pop
aad
test
outs
pop
scas
ret
jo
bound
neg
sub
ror
retfw
dec
sbb
hlt
out
adc
shr
and
in
push
sub
cmp
dec
mov
loopne
xchg
inc
dec
repz
jle
dec
jns
int3
inc
out
mov
xchg
pop
cvtps2pi
pop
fstp
pop
stos
es
or
retf
cwde
jle
jae
sub
sub
xlat
cmp
mov
(bad)
xchg
sbb
mov
ds
xor
cmp
sbb
cmp
xchg
ss
mov
push
lds
mov
cmp
icebp
iret
gs
fidiv
mov
cmps
xchg
dec
mov
sbb
jge
cli
jbe
in
add
or
dec
push
movs
gs
jge
js
lock
les
pop
movs
mov
jb
mov
fisttp
xor
xchg
pop
fnstcw
and
(bad)
pop
push
out
mov
jno
inc
jbe
and
xor
pop
lahf
rol
outs
outs
pop
shr
push
out
cld
and
jmp
jo
sub
adc
push
cmc
pop
mov
clc
fs
mov
jno
pop
scas
jl
cmovp
scas
push
and
scas
jmp
cs
sub
xchg
call
lods
std
mov
and
(bad)
lea
jo
pop
push
mov
loope
xor
std
cmp
popf
mov
dec
jmp
repnz
add
scas
imul
test
(bad)
icebp
fs
sbb
cli
pop
push
mov
in
mov
sub
in
fdivrp
movs
push
imul
(bad)
jmp
call
lea
popa
into
and
lods
ret
or
or
dec
or
adc
iret
cdq
xchg
fnstenv
push
jns
dec
cld
push
mov
mov
out
sbb
mov
fndisi(8087
sbb
push
lock
icebp
rcr
xor
add
ins
or
lea
xchg
imul
ins
or
fcmovbe
lea
or
adc
fs
and
lods
aad
aad
es
es
cmps
pop
lock
pop
cli
pop
sti
ja
loop
js
sbb
and
sub
adc
ret
ja
ret
xchg
repnz
add
ja
fmul
ja
pop
(bad)
jo
pop
or
das
(bad)
fcomp
inc
pop
sbb
call
xchg
push
fwait
lsl
inc
or
mov
pop
fcom
and
rol
sub
lahf
cmp
(bad)
retf
in
fidivr
loope
add
lahf
ret
xchg
ss
fadd
aas
out
or
jo
call
je
repnz
loopne
clc
or
out
mov
gs
movs
ds
imul
retf
fwait
dec
dec
adc
fcmove
sahf
int3
and
in
adc
or
lods
call
pop
jno
sahf
sub
icebp
sbb
movd
leave
pop
push
cs
and
and
mov
xor
and
lods
cdq
sbb
fisttp
xor
or
cdq
(bad)
mov
out
add
call
sbb
inc
movs
loop
jo
in
(bad)
enter
mov
push
(bad)
hlt
shl
mov
rcr
push
aad
push
ror
add
xchg
push
in
xor
int3
cs
add
ret
push
in
cli
sbb
fwait
into
xchg
mov
cmc
sub
jmp
push
jbe
fsub
sub
loope
xchg
cs
mov
(bad)
shld
jno
jge
xor
inc
int3
(bad)
movs
aad
movs
retf
cmp
add
arpl
(bad)
(bad)
sbb
add
loop
scas
dec
aaa
movs
cld
stos
push
jg
jecxz
cwde
sbb
(bad)
jns
and
dec
retf
mov
push
je
sbb
gs
test
dec
push
gs
push
cli
cmp
dec
add
inc
jno
sub
pop
mov
int
aas
outs
push
(bad)
mov
dec
loope
arpl
in
loopne
test
das
(bad)
xchg
push
adc
mov
hlt
fstp
xchg
inc
fidiv
pushf
and
outs
lods
mov
push
xor
shl
fisub
jecxz
lds
cmp
loopne
jae
stc
xor
retf
mov
adc
enter
xor
ins
dec
dec
pop
sub
fcom
in
pop
sub
(bad)
xchg
and
sub
punpcklbw
adc
sub
repz
jmp
adc
and
dec
movntq
jecxz
push
std
add
mov
push
stc
mov
fxam
into
daa
or
inc
inc
enter
aas
mov
mov
repz
xchg
ror
jns
dec
idiv
add
mov
xor
scas
push
and
daa
dec
dec
adc
les
fsubr
dec
imul
pop
int3
shl
stos
sbb
mov
ja
pop
xchg
fcomp
fwait
gs
cmp
xor
jmp
movs
iret
mov
out
jmp
cmp
push
cwde
jl
mov
pop
fimul
movs
call
mov
popf
xor
aad
loop
jp
in
cmc
js
fcmovnb
mov
dec
hlt
xor
ror
les
stc
ja
and
test
push
es
dec
in
adc
retf
in
mov
adc
daa
fdivr
mov
adc
mov
inc
test
jg
sbb
gs
js
aam
pushf
mov
xor
dec
shr
cwde
xor
lods
add
add
rol
push
or
sub
inc
mov
stc
cwde
mov
rol
sub
data16
push
mov
xchg
mov
add
adc
and
cmp
addr16
pop
into
dec
data16
fs
or
aas
je
push
int3
mov
clc
and
inc
mov
icebp
lock
mov
xor
pusha
outs
jbe
cmp
div
or
je
ds
call
cli
aad
data16
adc
stc
std
mov
or
fld
rcr
rol
test
xchg
cli
push
lods
aas
les
push
je
xchg
data16
int
pop
mov
inc
mov
inc
dec
lods
arpl
jns
and
dec
xor
outs
xchg
push
mov
and
or
je
mov
mov
mov
push
cld
ds
xchg
aas
push
mov
aad
push
into
inc
mov
sub
cmp
test
ficomp
push
mov
mov
lock
lahf
lods
xchg
cdq
ss
cmp
daa
stos
jo
push
or
je
jne
cmp
imul
shr
xor
jmp
push
sahf
sub
add
jle
sbb
retf
loope
mov
adc
outs
jns
fwait
test
adc
push
xor
retf
cmp
mov
xchg
xor
xor
inc
jmp
pop
sbb
push
cmps
and
cmp
cmp
(bad)
xor
add
ins
dec
inc
cmp
dec
lock
or
and
mov
pop
dec
retf
ins
mov
xchg
jae
xor
or
imul
repz
out
imul
mov
retf
loop
xor
je
jns
inc
pfrcp
arpl
jns
sbb
ins
fadd
mov
mov
leave
push
pop
arpl
or
xor
and
retf
xchg
icebp
adc
dec
hlt
jns
pusha
mov
add
ins
fld
stc
ficom
or
imul
mov
pop
mov
mov
sub
xchg
into
mov
into
aam
jns
mov
jl
mov
loop
fisttp
xchg
rcl
sub
lods
jns
cmp
out
stc
inc
cdq
aam
cmp
sub
push
mov
fist
xchg
adc
pop
push
not
ss
rol
inc
fnstcw
imul
ret
ins
cwde
xor
pop
xor
inc
gs
retf
pop
jle
mov
(bad)
jmp
cmp
pop
ds
pop
pop
imul
lock
fld
jne
call
jle
loop
mov
sub
mov
jg
fmul
mov
add
js
scas
mov
mov
cmp
mov
jmp
cmp
dec
sbb
cmc
pop
sbb
add
scas
orps
retf
and
stos
mov
aam
in
add
jg
jns
ret
jmp
mov
mov
nop
arpl
dec
sbb
cmp
(bad)
in
push
arpl
scas
(bad)
test
dec
clc
jge
add
and
arpl
or
mov
jl
cmp
aaa
mov
cmp
out
xlat
ficomp
out
aas
xchg
add
loopne
push
push
and
gs
imul
sub
push
lahf
loope
jb
push
lock
inc
jns
je
xor
sbb
out
inc
push
rcr
repz
iret
inc
xor
and
std
adc
in
xor
push
sbb
pop
ja
jge
mov
jp
idiv
sbb
push
out
jecxz
add
rol
or
inc
shr
cld
test
enter
aas
cmps
sub
sbb
imul
mov
or
imul
retf
or
mov
fld
sub
shl
fwait
test
lea
sub
jle
aaa
jnp
loopne
push
xor
and
out
les
addr16
imul
sub
repnz
sbb
sbb
adc
sbb
sbb
in
icebp
cmp
cmp
shr
or
loopne
mov
test
mov
xor
or
xchg
sar
fwait
mov
pusha
mov
aas
xor
mov
test
push
mov
mov
(bad)
mov
sar
addr16
and
jnp
(bad)
in
pop
sbb
aaa
mov
adc
inc
push
fwait
jecxz
mov
adc
test
jbe
lods
data16
scas
inc
push
sub
in
(bad)
and
dec
fcomp
mov
jl
(bad)
inc
(bad)
imul
add
shl
call
pusha
cli
jne
fnsetpm(287
adc
enter
aad
pop
jbe
call
fcmovb
fild
xor
stos
dec
in
mov
lea
push
sbb
mov
icebp
in
pop
(bad)
ins
mov
(bad)
mov
shr
sub
mov
pop
xchg
push
sti
pop
gs
hlt
push
retf
xchg
ss
sahf
fdiv
mov
std
jne
add
xchg
movs
mov
jmp
jmp
add
push
mov
mov
mov
ds
(bad)
ins
cmp
cld
gs
mov
dec
out
(bad)
adc
mov
(bad)
ja
push
(bad)
pop
and
iret
and
lds
enter
fsubr
add
push
repnz
mov
cmp
cs
dec
dec
jmp
add
retf
mov
dec
xchg
xchg
ins
in
xor
in
add
cli
fnstsw
nop
adc
mov
pop
mov
gs
imul
jae
cld
add
mul
jbe
sahf
fnstenv
sbb
sbb
inc
xor
in
cwde
jbe
pop
(bad)
fs
mov
adc
rcr
loop
or
test
dec
js
jo
push
icebp
ret
mov
popa
cmp
ds
out
pop
shl
mov
scas
leave
xchg
jne
inc
in
pop
add
sub
push
and
fldcw
fstp
or
sbb
cld
ss
inc
repnz
push
adc
xor
mov
mov
sub
popa
sbb
mov
xor
push
adc
sbb
mov
fistp
mov
into
repz
sbb
push
stos
pop
add
lods
xor
push
push
js
inc
mov
mov
bound
push
lahf
mov
xchg
int
mov
sub
xchg
jecxz
cmp
aad
call
aaa
xchg
or
jne
xor
push
adc
in
lock
es
xor
sub
inc
jns
add
repz
addr16
or
dec
push
push
mov
inc
pushf
push
sti
clc
dec
retf
cdq
mov
fsub
sub
xrelease
jbe
cmc
aam
inc
aaa
out
add
jnp
sbb
das
pop
test
push
adc
(bad)
add
ds
and
fidiv
lock
out
lgs
sahf
movs
xchg
xchg
clc
cdq
cmp
and
sub
mov
popa
mov
leave
sbb
fs
or
shl
cmp
jne
in
xor
fs
jg
movs
adc
push
sar
dec
int
xor
cmp
xchg
dec
je
push
xchg
mov
stos
pusha
mov
jg
cmp
ja
mov
mul
pop
sar
pop
ss
stos
xchg
call
dec
xchg
inc
fwait
or
lods
xor
mov
push
sahf
push
stc
fsub
push
rcr
cmp
sbb
(bad)
cmp
nop
imul
fdiv
or
lds
jae
out
mov
pushf
adc
jb
mov
xor
or
sbb
fisubr
sub
mov
addr16
stc
inc
sbb
xor
movs
inc
in
cmp
mov
(bad)
jmp
sub
adc
movs
dec
mov
sti
loope
xchg
cmpps
xor
cld
xchg
loop
mov
jno
add
imul
mov
repz
in
inc
mov
mov
adc
dec
jmp
push
call
jno
hlt
sub
int3
(bad)
neg
cmc
jmp
dec
les
push
(bad)
ds
bound
jg
sti
out
fistp
ret
push
or
push
pop
xchg
stos
inc
iret
push
stos
xchg
repnz
loopne
es
fsubr
pop
jne
nop
or
fdivr
push
daa
add
xchg
fxch
movs
mov
rcl
(bad)
clc
sbb
cli
ss
push
imul
adc
mov
xor
dec
rcl
or
and
test
fidiv
shl
data16
and
dec
dec
dec
stos
push
cmp
jno
xlat
data16
mov
scas
adc
les
pop
popf
(bad)
mov
mov
fcom
push
sub
out
aad
inc
test
add
ficomp
xchg
mov
(bad)
aas
inc
popf
test
pop
(bad)
fistp
fdiv
and
pop
inc
or
data16
dec
dec
xchg
mov
pop
out
es
fild
add
pop
jp
or
inc
loope
ss
push
les
mov
inc
mov
mov
dec
or
cmp
(bad)
pusha
sbb
sub
pusha
imul
pop
dec
push
int
lods
cmp
movs
nop
into
xor
stos
sbb
lods
push
hlt
dec
outs
push
and
rcl
push
dec
inc
dec
call
repnz
jae
pop
jp
mov
mov
xchg
stc
in
retf
dec
xchg
int
mov
popa
pop
inc
shl
jmp
cmp
in
xor
test
(bad)
shr
pop
pop
mov
sbb
push
sub
add
sub
es
fsub
xchg
mov
add
push
ja
push
pop
or
adc
inc
mov
or
mov
push
mov
mov
das
enter
loopne
xor
or
mov
loopne
mov
retf
cmp
mov
fidiv
cmp
cld
jmp
pop
jns
push
mov
fadd
mov
xor
loop
pop
scas
pop
sti
jmp
cmp
mov
and
(bad)
jnp
in
jns
or
and
pop
jne
faddp
mov
cdq
mov
push
or
dec
shr
fmul
add
adc
cmp
ja
retf
sbb
push
test
cli
xlat
or
push
pop
xchg
cld
(bad)
iret
push
mov
sahf
cmp
or
add
les
xchg
and
add
sahf
lods
in
cmps
and
jbe
mov
xchg
lds
or
xchg
add
xchg
mov
dec
mov
sub
jno
pushf
xchg
xor
adc
sbb
cmp
mov
pop
pop
and
clc
jmp
test
cdq
xchg
add
lods
cdq
jmp
cmp
idiv
out
jle
mov
mov
and
dec
cmp
push
scas
ja
cmp
xor
sysret
int3
fbld
jnp
add
fidivr
adc
add
not
dec
sbb
popa
mov
test
push
imul
rcr
pop
mov
scas
adc
aam
adc
xor
jge
int
(bad)
mov
cmp
adc
dec
xchg
sbb
mov
inc
aas
int3
ja
mov
xchg
ds
ins
in
mov
test
adc
inc
mov
cmps
mov
xor
jg
sbb
movs
xor
xchg
jne
ss
mov
xchg
inc
xchg
in
or
push
mov
cmp
mul
pop
add
ins
cmp
xlat
jle
mov
sub
setb
cli
jo
sub
jno
mov
enter
push
mov
into
mov
jns
and
mov
bound
addr16
xor
das
pop
pop
cmps
fimul
sbb
retf
sub
imul
jmp
xor
das
neg
jg
movs
fdivr
scas
xor
jl
cs
sti
aad
pop
int
ret
dec
repz
xchg
dec
outs
call
add
lods
add
pop
and
cmps
jle
nop
cmp
test
and
mov
dec
ja
xchg
loop
lds
jecxz
inc
dec
loope
sti
add
bound
mov
push
or
push
enter
jne
int
xlat
cmps
push
test
ds
icebp
(bad)
push
test
inc
je
movs
or
inc
cmp
ss
dec
pop
push
sbb
dec
outs
std
cmps
cs
mov
mov
sub
rcl
and
ins
add
sbb
pmullw
push
xchg
mov
xchg
push
xchg
(bad)
mov
arpl
push
repz
iret
push
mov
push
loop
xchg
cwde
rol
xor
adc
loop
psubq
xlat
push
add
out
loopne
(bad)
enter
mul
mov
out
mov
js
adc
cwde
pop
pusha
add
push
ret
xlat
rol
sahf
test
sub
jae
fcmovu
mov
fstp
das
mov
sub
pop
int3
addr16
sub
les
gs
scas
or
jno
aaa
adc
lods
mov
jmp
sub
pop
sbb
ret
(bad)
outs
cld
dec
cs
fistp
rol
dec
sbb
ja
sbb
sbb
daa
cmps
pop
loopne
xchg
popa
addr16
mov
xchg
and
mov
xchg
xor
mov
scas
cmp
rol
repz
push
jl
jle
shl
jb
jle
push
mov
shl
push
les
repz
fnstcw
aas
mov
test
push
arpl
pop
sub
(bad)
in
repnz
loope
xchg
adc
push
test
mov
pusha
adc
mov
imul
adc
test
push
push
int
outs
aaa
or
push
add
inc
into
xchg
(bad)
frstor
push
cmp
jo
addr16
mov
or
ins
(bad)
cmp
cli
cmp
int
mov
das
mov
mov
xchg
loop
ins
jno
pop
imul
add
hlt
call
repnz
out
sub
jae
imul
jecxz
mov
adc
lahf
xlat
and
mov
add
mov
sub
mov
pop
jne
xchg
int
and
xor
or
sahf
lds
inc
sti
in
and
movs
adc
fnsave
rcl
out
call
out
jbe
pop
push
repnz
int3
push
js
push
lods
xor
mov
mov
dec
and
jecxz
arpl
js
sti
xchg
fwait
pusha
mov
dec
ds
xlat
xchg
xchg
pop
cmp
xchg
popf
movs
aaa
aam
test
inc
push
sbb
mov
sbb
xchg
xchg
mul
xor
je
sbb
ins
jns
ret
xchg
pop
std
inc
adc
cmp
movs
cmc
cmp
adc
fidivr
xor
mov
xchg
imul
cmp
mov
pop
outs
in
sub
pop
lahf
sub
lods
inc
imul
push
aam
in
jnp
pushf
cmp
cs
jge
sbb
mov
mov
movs
fwait
jp
pop
sbb
and
cwde
push
les
test
icebp
cmp
xlat
pop
or
cmp
mov
mov
and
add
mov
push
fistp
adc
std
shr
iret
clc
retf
bound
popf
sub
icebp
daa
sbb
mov
hlt
xor
cmps
sbb
ret
(bad)
fdiv
and
mov
xchg
mov
popf
pop
fsub
push
cld
cwde
xchg
hlt
pop
cmp
xor
lods
jle
fidiv
(bad)
xor
dec
je
int
xchg
xchg
jnp
neg
inc
cdq
mov
fs
push
adc
aam
jae
sbb
lahf
(bad)
cld
mov
or
leave
xor
mov
xor
ins
gs
fsubr
mov
and
push
jmp
jne
arpl
pusha
jns
xor
dec
call
into
sub
dec
pop
mov
xor
pop
(bad)
clc
dec
loop
lds
ret
inc
popf
out
sbb
adc
shl
mov
sbb
test
add
and
adc
xchg
mov
in
add
adc
fdiv
getsec
jecxz
push
mov
and
inc
pop
cmc
cmp
mov
inc
in
scas
stos
mov
mov
lahf
sub
push
sub
xacquire
fwait
ja
retf
outs
xchg
pop
popa
mov
fist
push
and
cdq
retf
pop
imul
fsin
push
(bad)
xchg
movs
xchg
ds
popf
shl
out
fisttp
push
adc
shr
push
in
rcl
fcom
movs
pop
mov
mov
hlt
xor
jne
bound
push
rol
add
pop
mov
(bad)
xchg
xchg
or
or
(bad)
fstp
dec
(bad)
rcl
add
jmp
mov
or
pop
pop
out
mov
and
fadd
jmp
(bad)
sbb
cld
call
sbb
mov
aad
lea
mov
fidivr
push
mov
jb
mov
les
imul
leave
outs
fisttp
xchg
es
mov
mov
test
add
mov
inc
and
jbe
movs
test
mov
imul
and
popf
push
sbb
pop
add
rcl
(bad)
jmp
cdq
das
or
jg
repnz
fsub
add
retf
ss
xor
xchg
enter
xchg
push
pop
mov
push
ds
dec
call
out
xor
(bad)
xchg
cmp
and
xor
ins
or
xchg
or
xlat
pop
inc
into
dec
ds
sbb
outs
loope
mov
nop
xchg
imul
mov
sbb
je
jmp
inc
jge
xchg
mov
add
scas
out
scas
xor
push
inc
mov
push
add
dec
loop
jge
sub
sub
dec
retf
mov
lods
fisttp
xchg
rcr
xchg
mov
mov
neg
mov
test
mov
pop
popa
cmps
data16
push
daa
sbb
std
push
sub
jbe
and
sbb
jl
adc
xor
cmp
cmp
pop
sbb
mov
sub
cld
adc
pop
xor
loop
mov
stos
je
sti
cmp
js
mov
enter
ins
mov
jle
bound
test
gs
xchg
rol
andnps
or
jp
and
cmp
xchg
(bad)
xchg
xchg
lock
dec
cmp
push
sbb
and
fs
lods
mov
xchg
inc
lahf
jg
adc
(bad)
imul
jb
loopne
xchg
outs
push
neg
jae
adc
jmp
frstor
imul
sub
jg
mov
in
imul
lods
aad
lods
push
sub
xchg
jo
out
aas
mov
in
or
aas
push
test
hlt
jo
or
mov
test
cmp
pusha
sbb
jp
xchg
dec
pop
repnz
sub
(bad)
push
xlat
psrlq
inc
test
adc
cmp
dec
add
adc
and
or
mov
and
mov
arpl
sub
mov
repnz
arpl
inc
inc
mov
(bad)
rcr
pop
pop
gs
int3
sub
sub
mov
pop
xor
(bad)
aam
push
fld
out
add
push
jbe
out
pop
push
jmp
cmp
pop
iret
aad
inc
jmp
cmp
test
add
in
xchg
and
push
pop
ja
push
outs
add
jo
dec
dec
sub
arpl
push
inc
xchg
iret
shl
icebp
mov
icebp
clc
dec
jl
jbe
jge
sar
cld
inc
mov
retf
sub
mov
push
fisubr
add
psubusb
fstp
add
mov
mov
xchg
mov
stos
dec
in
out
std
loop
into
icebp
scas
shl
(bad)
sbb
fadd
push
je
or
or
cmps
cmp
xchg
rol
jnp
fild
mov
imul
push
adc
push
repz
pop
push
pushf
ret
(bad)
gs
js
dec
inc
push
sub
popf
sub
adc
(bad)
add
sbb
adc
xor
mov
adc
cli
push
mov
movs
and
int3
dec
or
mov
sbb
xchg
mov
fdivr
jmp
adc
pop
jb
xor
jp
stc
cmp
fs
in
mov
mov
clc
mov
out
dec
fwait
les
xor
(bad)
inc
mov
sbb
jae
gs
cli
mov
push
addr16
inc
cmp
jo
sub
sbb
dec
mov
lods
sub
rcr
mov
adc
inc
shl
jb
or
ror
pop
mov
in
and
mov
fidivr
sbb
sub
xor
cmp
shl
sbb
dec
xchg
dec
sbb
jmp
mov
sar
lea
inc
xchg
ins
cmp
adc
add
int3
aas
pop
cmp
int
sub
push
jecxz
fcom
mov
lods
loope
mov
push
hlt
push
clc
inc
and
stc
mov
mov
push
xchg
test
movs
sub
add
arpl
sbb
jo
or
pop
fist
out
test
jmp
test
xor
ror
sub
in
(bad)
lock
fisub
xlat
xchg
or
stc
jecxz
mov
pop
ja
sbb
cmp
pop
fwait
bound
dec
ds
daa
enter
pop
cdq
mov
pop
mov
cmp
jge
xchg
out
adc
xchg
and
repnz
ins
jmp
xlat
and
fld
sbb
jo
fbstp
ins
sub
xor
std
add
sbb
daa
dec
sbb
push
fadd
fisubr
cwde
pop
in
jns
sbb
push
aas
pop
push
sub
cmp
inc
push
loopne
call
cld
sub
pusha
pusha
and
mov
or
cs
adc
pop
xlat
push
out
jmp
xlat
xchg
cdq
ins
push
sub
xchg
sub
fmul
sbb
mov
cmc
inc
addr16
lods
rcr
cmp
pop
add
inc
stos
arpl
jno
sahf
or
pop
add
das
mov
int
in
jns
fwait
or
das
jb
jae
addr16
(bad)
cmp
pushf
stos
arpl
sub
ret
inc
imul
sbb
hlt
loopne
sbb
pop
mov
mov
mov
sbb
add
stos
fdiv
xchg
mov
or
mov
xchg
ret
(bad)
adc
mov
mov
arpl
mov
inc
mov
xchg
out
adc
jecxz
bound
mov
ret
lods
mov
xchg
(bad)
jo
and
lods
and
in
movs
mov
cmp
or
test
je
stos
repnz
dec
push
hlt
pop
mov
loop
mov
das
lods
pop
mov
sub
in
add
clc
into
sub
psllw
lock
into
in
shl
scas
out
je
mov
or
dec
and
mov
je
pop
cmp
mov
jb
into
mov
fst
dec
jmp
or
inc
cmp
cmps
sbb
xchg
jmp
pop
test
cdq
sbb
test
mov
dec
push
and
push
fst
outs
mov
push
cdq
xor
es
cmp
(bad)
sbb
scas
(bad)
mov
pop
inc
pop
xchg
sar
add
lock
push
sti
pop
ret
or
pop
or
push
stc
and
mov
sub
clc
pop
scas
in
div
add
out
sbb
adc
mov
xor
dec
test
ret
mov
xchg
push
pop
inc
jmp
in
sar
int3
xor
js
pop
xchg
stos
(bad)
mov
jle
lahf
inc
pop
sbb
push
js
xchg
ja
push
xchg
add
mov
outs
and
sub
ss
adc
sub
popf
movs
and
mov
fdivr
mov
retf
jge
movs
mov
sbb
ja
sar
(bad)
mov
std
inc
cmovp
inc
fimul
test
or
mov
cmp
cmp
mov
inc
sub
jmp
sti
(bad)
cmps
fld
push
sbb
sub
pop
data16
loopne
sbb
out
inc
pop
data16
mov
arpl
in
jb
adc
js
pop
stos
daa
cmp
cmp
test
aam
mov
repnz
mov
(bad)
jl
cld
or
dec
sub
xchg
pop
pop
rcl
sbb
jmp
call
cld
lods
out
paddsw
cmps
(bad)
arpl
xchg
lahf
cmp
jae
outs
cdq
jnp
mov
xlat
mov
inc
scas
sbb
sub
outs
ror
fcomip
iret
xchg
aam
inc
jae
mov
gs
fwait
rcl
lock
pop
hlt
repz
push
and
inc
(bad)
shl
push
in
push
add
mov
pop
je
inc
fmul
sub
pop
std
xor
push
leave
push
(bad)
xchg
xor
mov
out
add
sti
popf
aaa
sub
fist
out
(bad)
neg
aad
dec
xor
test
scas
and
fyl2xp1
dec
test
std
cmps
inc
mov
jne
or
in
jg
repz
in
sub
call
leave
xor
cld
mov
rcl
out
cwde
and
ror
sbb
xor
sbb
xchg
or
imul
shl
int
call
and
call
pop
into
out
gs
in
cmps
rcr
stos
mov
jno
mov
mov
cwde
mov
ror
pop
jmp
xchg
arpl
cmc
adc
mov
mov
jo
sar
mov
neg
jno
sbb
adc
and
inc
jl
js
div
rol
cli
xchg
fiadd
lods
dec
push
sahf
ror
js
adc
xchg
outs
push
xchg
lock
into
or
in
cmp
fnstsw
out
or
xchg
or
push
inc
popf
jp
add
das
inc
test
add
loopne
enter
or
and
xchg
mov
pop
rcr
(bad)
jl
jle
popa
fdiv
test
or
mov
sbb
aaa
xor
cdq
jp
jmp
enter
pop
cmps
cmp
mov
lea
shr
rol
rcr
jne
outs
in
cs
mov
cmp
retf
cmc
rcr
push
mov
xlat
and
jmp
lahf
push
xchg
push
or
shl
cmps
je
or
sti
xchg
test
xor
inc
test
adc
nop
inc
xchg
mov
ds
xlat
mov
add
enterw
and
daa
mov
push
bound
add
sbb
add
fst
mov
bound
xchg
jp
mov
call
outs
nop
cmp
fndisi(8087
(bad)
test
mov
fwait
push
mov
loop
out
dec
inc
inc
pop
cmp
pop
mov
jge
lds
mov
inc
add
jno
fisub
adc
or
push
or
and
das
add
xchg
mov
(bad)
lahf
fwait
mov
loope
rcr
push
add
call
dec
popf
das
test
dec
fidiv
sbb
add
push
stos
sub
sub
xor
dec
cmp
mov
pop
leave
xchg
pop
xchg
out
pop
sti
repnz
xchg
jmp
xchg
dec
dec
(bad)
call
xchg
cld
icebp
repnz
adc
mov
iret
mov
mov
in
push
sub
cmp
pop
xlat
add
xchg
popf
(bad)
scas
add
repz
in
test
jo
cdq
loop
mov
mov
loope
cmps
cmp
adc
jg
mov
(bad)
jecxz
pusha
lods
or
and
sub
dec
adc
jae
js
mov
xchg
mov
vmread
fcomp
les
rol
addr16
call
dec
retf
int
ss
sbb
daa
sbb
and
cmps
mov
cmp
xor
scas
pop
test
dec
cmp
mov
outs
(bad)
imul
inc
or
lock
sub
(bad)
push
dec
add
fsubr
fiadd
pop
ror
enter
inc
push
xchg
sub
xor
sub
std
dec
mov
push
pop
shr
pusha
xchg
sbb
pushf
dec
fisttp
addr16
scas
js
retf
bound
and
push
and
inc
push
pop
mov
cmps
and
cmps
scas
cmp
ins
in
pop
cmp
retf
pop
mov
xchg
mov
xor
dec
icebp
je
adc
mov
shl
sbb
mov
and
add
fst
fmulp
cli
(bad)
in
sub
loop
inc
mov
cmc
imul
jae
test
push
push
mov
pop
jmp
leave
stos
lods
mov
add
pusha
dec
rol
xchg
mov
jo
rcl
inc
adc
xor
fisub
sbb
cvtps2pd
dec
xor
leave
mov
add
fs
lahf
pop
fs
sub
dec
and
cmp
stos
inc
mov
cmp
popf
in
(bad)
in
xor
pop
jo
lds
mov
or
fdiv
cmp
sbb
mul
(bad)
mov
iret
xchg
retf
jge
dec
pop
cmps
push
push
fs
out
mov
jmp
inc
enter
cdq
in
mov
cli
sbb
retf
pushf
mov
push
and
mov
daa
pop
push
or
lahf
not
push
stos
cmovnp
test
aaa
sub
cmp
dec
test
in
pop
fwait
pop
sub
and
int
xor
sbb
aaa
fstp
test
jmp
mov
imul
sub
fist
or
mov
cmp
ds
mov
and
xchg
xor
sar
cwde
jl
mov
scas
jle
push
(bad)
(bad)
inc
sub
mov
dec
mov
inc
test
into
dec
add
stos
mov
pop
mov
sub
adc
jmp
test
or
fsubr
ss
add
add
mov
or
lock
xor
cmp
lock
sbb
mov
scas
(bad)
xchg
jne
mov
aad
(bad)
ds
inc
mov
xchg
cld
dec
adc
lea
inc
jp
mov
loopne
cmp
aam
inc
push
sub
push
ret
lds
add
fmul
mov
xchg
push
in
lock
jl
xor
into
sahf
mov
in
jo
add
sub
add
and
retf
aas
lods
mov
push
push
jns
mul
retf
stos
adc
push
test
pop
shl
add
stc
jns
lods
xor
(bad)
cmp
mov
jge
in
das
mov
push
mov
mov
jp
jae
rcr
sub
je
pop
inc
mov
and
jg
outs
or
sub
sbb
call
es
push
aam
jmp
movs
jge
mov
sub
retf
mov
mov
(bad)
xchg
aaa
push
pop
mul
add
dec
data16
or
and
aad
fisttp
mov
test
mov
int
fnstenv
adc
mov
and
sub
sti
add
adc
cmp
scas
sbb
lds
mov
adc
clc
loop
add
ret
(bad)
xor
aas
mov
pop
jmp
sbb
add
enter
(bad)
pop
fld
imul
mov
cmp
fisubr
shr
pop
into
add
js
adc
pop
(bad)
lods
pop
inc
jge
inc
mov
mov
jo
clc
dec
popf
hlt
push
bswap
ss
dec
pop
add
fldcw
ja
sub
dec
les
mov
sub
cmps
mov
call
fs
xor
outs
mov
adc
retf
pop
push
pushf
xchg
dec
dec
fndisi(8087
xlat
loop
mov
and
sbb
retf
or
push
adc
or
sar
sahf
stos
test
ds
mov
(bad)
cwde
outs
cmps
xchg
mov
add
and
in
mov
mov
rcr
pop
xchg
fsub
mov
dec
mov
jmp
add
pop
jo
adc
pop
ins
lds
jle
ja
add
jl
xor
es
aad
mov
stos
int3
repnz
mov
cmp
xor
xchg
call
push
les
xchg
xlat
push
dec
pushf
cmp
(bad)
fstp
int
pop
pop
jmp
mov
ret
loop
mov
jnp
jp
sub
jp
add
fidiv
cmp
js
and
(bad)
add
sbb
mov
(bad)
sub
dec
iret
mov
lahf
adc
push
cmps
jb
bound
dec
jle
out
push
xchg
cmp
cmc
jmp
mov
adc
pop
mov
movs
inc
aad
jmp
adc
loope
pop
add
dec
sbb
push
and
arpl
int
and
mov
jmp
push
sub
mov
or
bound
pop
mov
pop
stc
aas
cmp
pop
out
dec
rol
scas
or
in
ins
fwait
call
ss
clc
xor
shr
mov
das
mov
ret
mov
stc
cwde
fnstenv
outs
jno
idiv
mov
jnp
jg
xor
sahf
push
popa
lds
(bad)
cmc
jno
pop
loope
pop
fdiv
pop
fldenv
mov
ja
xchg
ins
outs
cmps
nop
(bad)
jle
add
mov
addr16
pop
add
pop
ins
outs
aad
inc
or
inc
cld
push
in
mov
loopne
ret
xor
mov
cmps
push
sub
dec
mov
pop
add
jnp
imul
and
jmp
movs
mov
or
ret
call
or
add
mov
sbb
in
sub
fist
mov
inc
mov
inc
jnp
(bad)
fimul
(bad)
cmps
setg
pushf
js
push
push
(bad)
cmps
ins
push
mov
jmp
cdq
push
mov
call
push
push
mov
repz
loope
popf
jae
or
mov
int3
mov
fisub
addr16
mov
cmp
jmp
jmp
xor
sbb
mov
jno
mov
adc
or
and
rcl
cmp
repz
cmps
pop
outs
ds
addr16
cwd
or
sub
xchg
inc
lahf
pop
dec
out
push
mov
dec
or
repz
iret
dec
xchg
(bad)
enter
out
adc
adc
test
aas
in
repz
add
inc
fnstenv
pop
inc
add
xchg
(bad)
aad
push
xchg
shl
repnz
jmp
sbb
(bad)
mov
xor
mov
xchg
hlt
jg
inc
or
sbb
(bad)
sahf
and
shl
sub
fdivr
jbe
xor
into
add
xor
push
fst
mov
fnstsw
stc
sbb
in
out
ins
ror
xchg
jns
(bad)
sbb
inc
aad
fstp
dec
fst
mov
pop
ins
cli
imul
xchg
mov
cmp
inc
in
mov
iret
mov
jecxz
ja
sbb
fimul
or
loope
xlat
leave
data16
jp
mov
sbb
lock
cs
mov
jge
jmp
mov
sbb
push
mov
adc
pop
mov
ror
loop
jo
jmp
shr
call
js
dec
and
xchg
ror
inc
cwde
add
sbb
add
stc
test
push
ins
fs
push
stos
and
mov
les
popa
cmps
pop
js
mov
pop
aad
sbb
test
xchg
pop
xchg
sub
push
push
stos
adc
mov
jle
sar
sub
cmps
sub
out
pop
neg
sub
mov
mov
jp
leave
movs
sbb
and
cmp
dec
out
(bad)
lahf
in
fidiv
push
xor
pop
(bad)
aam
inc
retf
xchg
jmp
dec
xchg
and
imul
ror
mov
jmp
xor
dec
mov
cmp
sub
dec
out
sub
pop
test
sbb
adc
xchg
cwde
lds
cmp
push
pop
hlt
mov
push
test
sbb
shl
and
mov
and
js
leave
jmp
sbb
or
xchg
lea
mov
or
adc
fcom
pop
xchg
repnz
cmp
and
int
cmps
jle
fs
sub
push
fdiv
imul
xchg
jae
mov
or
aam
repnz
xor
loope
pop
cmc
mov
addr16
rcl
outs
mov
outs
sar
mov
popf
aas
fwait
ret
stos
jl
(bad)
repz
sbb
stos
call
pop
sub
ret
dec
call
push
jno
loop
fmul
mov
xchg
sub
stos
test
fiadd
or
pop
mov
add
js
mov
fcomp
dec
pop
(bad)
jmp
or
outs
lock
dec
mov
mov
mov
xchg
add
xchg
jb
(bad)
cld
lods
sub
dec
imul
test
and
leave
or
in
add
fldcw
add
repz
sub
xor
adc
int
mov
pop
sub
test
mov
adc
pop
popf
cmps
sbb
shl
(bad)
jmp
jle
(bad)
aam
or
sbb
dec
mov
mov
cdq
xor
jecxz
mov
enter
cld
sbb
inc
push
lods
movs
or
dec
in
fcomip
pushf
adc
in
sbb
std
(bad)
inc
pop
xchg
jg
mov
fst
retf
dec
in
mov
or
test
push
or
popa
mov
repz
(bad)
dec
pop
mov
fwait
jge
stos
mov
mov
cmp
or
mov
ret
into
je
and
call
dec
sahf
std
mov
call
hlt
xchg
les
adc
jne
sub
jbe
int
iret
push
dec
jg
mov
jmp
shr
fwait
test
mov
aam
xlat
add
add
add
ror
pop
add
jl
xor
pop
mov
loopne
inc
imul
mov
rcl
aad
pop
pop
or
fild
sbb
mov
and
popf
push
arpl
mov
ficomp
dec
xor
dec
mov
xchg
xor
jno
and
(bad)
into
lds
jnp
inc
neg
lahf
(bad)
xchg
push
push
int3
out
adc
or
scas
sub
xor
dec
pusha
jbe
mov
mov
cmps
mov
(bad)
sti
pop
adc
test
cmp
push
or
jge
dec
jno
cmp
ja
cmp
outs
cmps
sub
sub
shr
adc
push
adc
sub
mov
les
pusha
and
mov
sbb
lock
pop
(bad)
mov
xchg
aaa
es
or
sti
test
or
aad
daa
scas
add
(bad)
jnp
xor
jae
daa
iret
sub
out
or
and
repnz
inc
iret
enter
pop
inc
repz
or
push
repnz
and
xor
leave
jge
out
ja
fcom
frstor
sub
add
mov
dec
ret
in
sbb
adc
je
cli
test
cmps
cmp
push
(bad)
push
cmp
pop
xchg
les
stos
xchg
add
test
sti
sbb
sahf
lods
push
pop
xor
cmp
mov
jg
sub
loopne
mov
adc
mov
sbb
rcl
pushf
xchg
cs
movs
fsub
je
add
mov
sub
push
scas
sar
mov
out
fisttp
popa
or
imul
mov
sub
mov
addr16
pushf
mov
mov
ins
inc
jg
les
sbb
outs
je
iret
mov
repz
pop
push
mov
fld
jnp
pop
push
inc
dec
add
aaa
jae
xlat
xchg
lods
movs
jne
ret
idiv
pusha
int
les
in
sub
pop
push
stos
scas
push
jmp
(bad)
jmp
or
enter
dec
jnp
loopne
pop
test
cld
mov
loop
xchg
adc
mov
out
jl
ror
push
mov
nop
jg
push
and
ins
pop
les
out
ficom
enter
mov
inc
add
pop
and
mov
(bad)
ins
std
xchg
xlat
dec
(bad)
adc
test
in
pop
xchg
cld
scas
(bad)
popf
xchg
test
mov
mov
or
pop
sub
aam
add
out
sbb
push
jp
add
ror
rcr
add
push
dec
shl
cld
sbb
xor
out
fs
test
mov
push
adc
pop
adc
pop
aas
jo
in
xlat
pop
test
sub
sbb
dec
pop
sub
mov
std
pop
out
pop
lods
or
mov
lock
dec
out
aam
xor
int
movs
dec
scas
push
movs
in
push
repz
pop
mov
jb
arpl
mov
shl
aam
not
push
test
daa
aad
mov
jmp
in
(bad)
push
inc
iret
jo
inc
dec
shl
and
ins
cmps
mov
mov
sub
push
pusha
add
and
mov
mov
ins
shl
imul
ret
mov
jle
add
push
shl
outs
xchg
push
fbstp
or
movs
pop
push
fidivr
dec
leave
jge
lea
jo
(bad)
imul
fwait
sbb
mov
enter
repz
clc
(bad)
mov
add
and
inc
xchg
hlt
(bad)
add
cmps
cwde
icebp
inc
stc
mov
cdq
push
icebp
retf
not
fldcw
scas
xor
jo
or
cli
psubusb
mov
mov
pop
dec
mov
dec
mov
or
movs
loop
int3
inc
leave
xlat
sbb
bswap
test
int
adc
dec
mov
out
add
pop
jl
sar
js
mov
mov
dec
mov
iret
xor
pusha
inc
pop
pop
ror
jmp
int
stos
jp
bnd
mov
sub
mov
dec
cmps
xchg
ds
push
lods
test
and
cmp
les
mov
xor
push
jb
cli
jecxz
adc
arpl
inc
jb
cld
sbb
test
loope
dec
cdq
sbb
loope
pop
adc
mov
movs
ret
push
xchg
mov
add
lods
jbe
jle
jp
ins
sbb
pop
test
mov
dec
dec
push
mov
inc
pop
push
hlt
adc
(bad)
inc
loop
xchg
out
mov
sub
loopne
jne
jnp
movs
cmp
inc
mov
mov
cmp
pushf
sub
add
popf
adc
icebp
adc
adc
jg
fidivr
ret
pop
lods
inc
into
lods
out
in
aas
push
pop
fisttp
xchg
dec
mov
dec
pusha
call
push
outs
lds
adc
sub
out
jo
jg
fs
fmulp
mov
cmps
inc
cwde
gs
les
inc
(bad)
push
mov
mov
lock
dec
retf
mov
jg
out
(bad)
aaa
dec
lods
push
sbb
lods
icebp
cmp
or
fbstp
and
adc
data16
sahf
push
stc
adc
arpl
cmp
mov
inc
jle
push
clc
mov
dec
jo
pop
in
retf
jge
and
dec
rcr
cmp
xchg
pop
and
and
into
rcl
mov
sub
push
inc
or
ret
scas
cmc
dec
push
mov
sahf
sbb
or
movs
mov
mov
mov
xor
cdq
pop
or
add
iret
adc
pop
ins
adc
mov
inc
push
out
xor
outs
dec
adc
pop
jmp
mov
mov
cli
add
xchg
push
aas
lods
lods
xor
or
sub
fsubr
(bad)
push
out
lea
clc
pop
and
jge
jne
out
add
inc
cmp
in
mov
adc
(bad)
and
addr16
loopne
call
lahf
add
jnp
xchg
nop
jp
ret
mov
inc
mov
or
rcr
xor
jbe
cmc
adc
and
nop
jmp
add
push
sbb
and
std
dec
(bad)
movs
fiadd
mov
lock
push
popf
je
push
fwait
in
jmp
int
hlt
inc
mov
fidiv
or
jo
retf
loope
inc
xchg
sbb
mov
jbe
push
xchg
popa
ja
push
gs
scas
jg
mov
pop
mov
and
stos
not
test
retf
mov
mov
movs
lds
cld
das
cmp
(bad)
mov
(bad)
aam
jecxz
nop
test
sbb
mov
scas
inc
outs
inc
add
push
hlt
inc
out
ret
shl
mov
ins
jne
cmp
ins
adc
lods
(bad)
jns
ja
enter
sahf
pop
(bad)
jle
push
(bad)
mov
std
loope
mov
xchg
int
mov
mov
sbb
(bad)
ret
stos
fstp
push
cwde
jge
cld
mov
cmp
mov
dec
std
mov
mov
ins
rcr
mov
sbb
ds
jge
movs
sub
dec
mov
outs
sub
xchg
inc
mov
sub
mov
(bad)
imul
jmp
loope
push
in
cdq
repnz
loope
lods
scas
and
push
addr16
dec
fsub
jae
enter
pop
push
sar
out
mov
out
aam
mov
test
mov
cld
cmp
xor
cs
sub
mov
push
gs
stos
aad
clc
cmp
int3
hlt
icebp
fstp
std
pop
xchg
dec
outs
mov
int3
imul
out
sbb
loopne
cli
xchg
and
xchg
jp
xchg
jbe
jl
mov
jne
sbb
stos
scas
cwde
mov
cmps
and
repz
push
xchg
sbb
scas
aaa
sub
loop
adc
xlat
loope
and
sbb
fst
fwait
xchg
pop
ins
cmps
retf
add
retf
mov
in
push
add
sub
cld
sbb
add
cmp
jmp
mov
or
inc
aaa
jbe
mov
hlt
jo
push
and
xor
push
lock
loope
push
in
je
dec
push
rcl
push
dec
stos
add
push
pop
(bad)
jp
sbb
rcr
mov
xor
jnp
jmp
dec
inc
rcl
movs
jle
lds
imul
ficomp
lahf
ins
sahf
mov
pop
cmc
push
loope
stc
jns
hlt
jl
test
sbb
adc
cld
inc
add
sub
call
mov
out
cmp
adc
adc
xchg
cmps
into
dec
inc
xor
lods
xor
xchg
mov
sti
jle
pop
inc
fimul
dec
pop
aam
mov
or
nop
lock
jmp
add
and
inc
js
test
mov
mov
icebp
stos
jmp
cdq
sub
inc
shl
jmp
add
fs
pop
sub
(bad)
push
int3
popa
(bad)
fcmovnb
pushf
sub
adc
lock
in
and
xchg
gs
ja
jl
scas
adc
xchg
lods
lods
push
inc
(bad)
adc
push
jno
loopne
xchg
push
(bad)
pop
movs
jnp
xchg
cmp
stc
mov
js
ins
pop
loopne
std
push
bound
hlt
cs
cli
dec
fst
stc
cld
pop
or
or
mov
(bad)
jnp
mov
dec
jo
mov
dec
xor
jb
pmullw
adc
sahf
data16
pusha
cld
ret
cld
pusha
ja
xor
adc
and
or
enter
sbb
jecxz
shl
and
mov
call
cli
rol
retf
lahf
add
inc
adc
out
and
cwde
jmp
adc
shr
push
lahf
dec
and
mov
xor
(bad)
sub
data16
jg
mov
mov
push
std
dec
adc
push
out
mov
inc
aad
imul
mov
pop
pop
repnz
sub
jno
push
cmp
stos
mov
adc
repnz
sub
xor
shl
add
lock
test
enter
and
mov
mov
sub
in
out
dec
mov
sbb
not
fwait
ret
push
mov
xchg
(bad)
das
push
sti
popf
aam
movs
cmp
shl
in
clc
stos
jbe
dec
adc
jno
fdivr
in
movs
out
push
xor
adc
js
cmps
jmp
and
call
scas
outs
stos
pop
stc
inc
mov
scas
jl
and
push
xchg
mov
bound
sti
arpl
test
ror
in
and
add
(bad)
repz
nop
sub
sbb
mov
inc
or
mov
repnz
dec
adc
inc
imul
push
mov
in
cmp
outs
inc
scas
push
bound
xchg
inc
adc
jmp
into
mov
fwait
add
js
cmc
xor
lods
pop
push
(bad)
les
cdq
arpl
inc
outs
rcl
pop
fisttp
inc
mov
leave
nop
and
rcr
jmp
pop
popa
jmp
je
sub
add
sbb
mov
sahf
les
cmp
mov
jmp
pop
cmp
arpl
test
cmp
sbb
xchg
mov
sbb
in
hlt
adc
sbb
shr
cmps
out
std
call
mov
pusha
sub
push
aam
sub
pop
mov
push
fdiv
jecxz
sahf
adc
xor
rcl
out
sbb
pop
pushf
push
mov
inc
fwait
ss
hlt
cwde
dec
mov
xor
test
dec
(bad)
pop
cmps
mov
mov
mov
inc
push
ins
xor
jne
cwde
lock
jns
jbe
jns
int3
fiadd
lock
sbb
shl
add
jns
adc
ds
gs
mov
sub
cmp
sbb
sub
adc
fsub
leave
cs
(bad)
pop
nop
or
and
xchg
arpl
add
fild
test
ins
mov
sub
jno
cmp
pop
jg
jp
popa
pushf
rcr
mov
push
mov
clc
nop
sbb
mov
and
shr
jno
stos
sbb
scas
nop
adc
outs
inc
add
xchg
call
pusha
nop
cmp
pop
scas
push
loopne
mov
xchg
sbb
addr16
mov
or
or
pop
sbb
mov
dec
adc
jmp
test
icebp
sub
jmp
inc
sub
in
pop
in
mov
lods
out
jns
pop
push
mov
arpl
and
out
out
push
push
cmps
(bad)
icebp
mov
pop
mov
mov
jp
shl
jno
cmp
add
inc
fiadd
leave
enter
or
enter
ror
cmp
fdiv
lahf
dec
or
mul
and
jne
(bad)
lods
add
mov
repz
fiadd
cs
push
mov
int3
popf
or
jno
lods
and
enter
inc
daa
inc
and
dec
inc
iret
mov
jl
out
mov
push
out
xchg
and
pusha
add
jp
and
gs
jne
(bad)
stos
push
xchg
inc
mov
movs
add
xchg
xchg
imul
xor
test
adc
inc
test
div
jecxz
pushf
jns
or
push
test
adc
(bad)
or
or
mov
add
mov
icebp
mov
popf
icebp
inc
les
std
add
and
inc
sbb
rol
dec
cmp
jae
jne
sub
rcr
stos
xor
sub
or
or
and
push
(bad)
cmp
ss
adc
pusha
fsubr
adc
adc
shr
mov
cmp
rcr
cmp
div
loop
imul
ss
cli
jns
sub
out
sahf
stos
cmp
dec
adc
cmps
mov
mov
mov
mov
mov
cmp
mov
les
mov
addr16
add
ret
sub
sub
push
xor
out
mov
and
push
fs
adc
dec
push
ja
imul
adc
or
stos
cmp
hlt
push
(bad)
test
mov
sti
dec
pop
xchg
xor
pop
sub
mov
mov
nop
jns
dec
mov
adc
mov
jo
sahf
(bad)
mov
inc
sar
push
add
(bad)
xor
mov
jg
shl
mov
sub
loopne
mov
mov
mov
nop
cdq
shl
mov
dec
mov
call
push
hlt
or
loopne
jns
addr16
dec
ins
in
and
rcl
pop
xchg
lods
dec
aaa
dec
movs
mov
out
and
mov
in
sub
inc
pmaddwd
mov
leave
iret
fist
cdq
dec
or
and
fwait
sub
shl
cdq
or
fist
sti
push
adc
inc
call
lea
push
aam
push
retf
(bad)
sbb
imul
aad
jo
or
push
loope
or
push
and
fadd
outs
pushf
inc
mov
mov
mov
push
in
sub
fs
icebp
pop
icebp
jmp
add
lods
mov
ds
test
xchg
movs
push
jge
adc
sar
out
fnstcw
inc
jmp
sub
fst
and
jmp
or
jno
xchg
(bad)
pop
adc
repz
dec
pop
and
pop
jp
sbb
add
aaa
ja
add
dec
pop
inc
jns
jg
gs
pop
les
enter
jne
jle
xor
xchg
ret
adc
mov
mov
xor
mov
imul
cmps
jnp
fisttp
or
test
mov
push
cdq
and
push
fistp
addr16
or
lahf
sub
mov
and
lock
ret
inc
push
or
(bad)
ficomp
xchg
push
imul
(bad)
outs
cmp
mov
test
pop
cmp
add
mov
mov
cwde
stos
add
ret
pop
xchg
sub
fimul
sbb
add
sub
in
inc
push
sbb
es
cmps
xor
push
lea
jp
out
arpl
inc
arpl
sub
fsubr
neg
ins
outs
std
dec
pusha
enter
pop
rcr
sbb
arpl
std
(bad)
push
sub
shr
jecxz
mov
jmp
push
push
scas
or
popa
jmp
or
add
(bad)
retf
pop
(bad)
(bad)
int3
iret
cmp
add
pop
mov
or
push
movs
std
dec
out
bound
and
or
out
xchg
adc
ret
mov
sbb
cmp
mov
inc
add
data16
pop
cmp
jnp
fld
(bad)
add
dec
mov
inc
push
rcl
cmc
shl
xor
addr16
xor
cmps
not
inc
jae
or
xchg
mov
mov
pop
sbb
jo
inc
jae
or
adc
add
addr16
mov
mov
mov
and
fisttp
add
fild
push
fs
popa
adc
lods
jno
add
dec
dec
jle
icebp
fcmovb
mov
sbb
mov
aad
jno
mov
sbb
mov
mov
ficom
fld
test
adc
js
je
pop
xchg
in
jae
(bad)
mov
fst
std
jo
mov
push
adc
xchg
lods
stos
adc
cmp
sub
sub
sub
push
retf
clc
mov
sbb
fldcw
push
adc
outs
loop
add
jnp
imul
ficom
aas
into
pop
test
add
retf
inc
fs
sbb
cmp
in
loope
xchg
jnp
scas
pop
dec
daa
dec
and
mov
fwait
popf
jo
sbb
sbb
out
bound
(bad)
mov
fld
out
pop
xchg
sub
rcr
sub
fwait
lgs
stc
cmp
cwde
jae
(bad)
sbb
ret
nop
data16
dec
mov
repnz
aaa
jg
popa
xlat
and
arpl
xchg
sub
or
ror
aam
dec
xor
mov
test
sbb
mov
pop
out
imul
(bad)
(bad)
adc
jecxz
repz
pushf
jns
adc
fldcw
push
cmp
push
(bad)
test
sub
jbe
xchg
xor
mov
xchg
push
push
clc
sub
push
clc
sahf
stos
jmp
icebp
and
cmps
popf
cmp
stc
ror
sub
pop
jle
test
xor
das
pop
outs
pop
cwde
cmp
adc
test
dec
dec
mov
mov
mov
push
inc
mov
movs
mov
xchg
mov
ffree
fisubr
sub
cmps
loopne
lock
cdq
mov
inc
mov
mov
es
xor
dec
pop
sub
js
dec
(bad)
pushf
fs
loope
push
sahf
syscall
or
xor
call
jno
jne
shl
imul
in
inc
std
mov
out
out
jmp
push
lds
ret
into
add
call
outs
adc
in
jnp
in
mov
jnp
sub
mov
nop
data16
inc
hlt
cmp
pop
or
mov
sub
call
add
out
hlt
inc
shl
pop
mov
mov
pop
xchg
cmp
stc
sub
test
hlt
and
inc
lods
fs
pushf
repnz
and
mov
mov
jno
stos
adc
aas
inc
inc
cmps
outs
pusha
push
dec
push
and
sbb
push
mov
xchg
aam
jo
shl
shr
add
xchg
push
mov
add
fnsave
aam
mov
cld
daa
xor
rep
xor
dec
xchg
jecxz
into
inc
xor
or
test
js
and
jne
cmc
repnz
leave
aaa
imul
xor
lahf
dec
loopne
sbb
retf
and
addr16
nop
adc
je
lods
mov
or
inc
sub
gs
pushf
call
(bad)
test
add
sbb
mov
sub
lods
xor
mov
outs
xchg
jb
add
mov
and
in
mov
mov
jne
xlat
fldenv
mov
xor
pop
and
mov
push
dec
sbb
inc
dec
push
inc
mov
jp
repz
dec
cmps
lods
xor
inc
pop
test
and
fiadd
test
retf
push
and
mov
ins
push
pop
push
int3
cmps
add
es
sbb
pop
lahf
mov
popa
sbb
rol
stos
cmp
jg
int
movs
mov
mov
mov
clc
daa
std
ds
cmps
sub
(bad)
sub
out
cmp
cmps
mov
push
xor
xchg
(bad)
push
retf
push
je
or
pop
movs
add
jae
cmp
add
rol
ds
jo
outs
mov
ret
push
pop
fcom
pop
push
repnz
ret
cmps
jno
les
stc
adc
or
into
cmp
and
test
shr
mov
xor
fsubr
hlt
lahf
or
inc
jecxz
es
je
je
inc
sub
sub
jae
cwde
xchg
mov
jae
in
dec
jns
out
pop
sub
mov
loopne
ds
daa
xchg
cmp
jle
pop
adc
call
push
push
cmp
addr16
cld
add
sbb
push
dec
cmp
jbe
push
rol
sub
out
sbb
or
cdq
cmovp
sub
push
or
sub
out
leave
cmc
xchg
(bad)
inc
js
fbld
div
xchg
push
cmc
xor
bound
je
inc
popf
mov
inc
jns
cpuid
movs
scas
sub
jnp
pop
out
or
out
push
shl
push
sbb
sahf
cmp
(bad)
fcomip
loope
dec
sub
push
pop
cdq
mov
(bad)
xchg
sub
inc
add
xchg
ror
xor
jecxz
or
pop
mov
xchg
retf
lahf
fisub
mov
outs
inc
inc
jmp
mov
xor
and
and
shl
cmc
and
das
sub
loop
xor
and
dec
xchg
enter
rcl
cdq
mov
fld
(bad)
dec
push
fbstp
sar
popa
cmp
aas
test
cdq
out
sbb
sub
sub
mov
push
xchg
mov
mov
aam
popf
aam
ret
nop
mov
sbb
pushf
add
rol
gs
fwait
out
stos
ins
lahf
xor
xor
or
into
mov
mov
mov
enter
ror
pusha
mov
fdivr
in
ret
es
add
fld
sub
jmp
mov
push
cld
push
push
nop
mov
fsubr
pop
mov
jnp
adc
xchg
fs
or
inc
sbb
jbe
pop
push
daa
jp
lods
mov
je
icebp
adc
cwde
test
lock
jecxz
outs
push
cmp
cmp
fs
or
push
inc
aas
mov
arpl
ds
out
mov
cli
xor
imul
arpl
lods
out
pop
imul
div
scas
leave
hlt
(bad)
sub
call
mov
mov
adc
mov
lock
cmp
aam
mov
jnp
mov
add
push
xlat
cmp
dec
mov
test
mul
mov
enter
sar
popa
call
iret
bnd
fldcw
pop
(bad)
adc
jl
cmps
or
or
(bad)
mov
iret
lds
mov
mov
push
iret
xrelease
mov
stc
dec
fs
(bad)
jnp
adc
out
cmps
sub
retf
xlat
jbe
pop
in
fild
xor
int
iret
ss
pop
das
fist
adc
(bad)
push
or
inc
jle
(bad)
push
test
xchg
pop
mov
mov
lea
dec
and
sub
push
cmp
push
jbe
je
xchg
mov
cmp
inc
push
popa
dec
test
imul
test
jb
les
or
or
fmul
ins
(bad)
adc
cmc
ja
push
ret
xchg
loope
iret
xor
inc
and
mov
push
(bad)
scas
add
add
jmp
mov
leave
xor
push
xchg
jmp
adc
sahf
addr16
mov
mov
jae
and
mov
cld
lods
outs
leave
mov
mov
adc
mov
jmp
dec
ret
lods
and
js
(bad)
mov
call
sbb
dec
pusha
clc
mov
jmp
push
jo
jae
xor
xor
xchg
fsubr
cmp
adc
inc
jns
test
xor
mov
std
add
fwait
les
aam
call
in
lds
sbb
xor
push
or
mov
pop
fisubr
jno
inc
iret
in
jns
adc
jns
and
inc
imul
pop
cmp
aam
and
dec
repz
push
jo
jmp
(bad)
fs
pop
dec
pop
sbb
ret
jl
jmp
dec
fdivp
int
adc
fs
xlat
stos
mov
mov
jne
push
xchg
push
les
xchg
(bad)
dec
jg
and
mov
(bad)
mov
arpl
cmp
inc
daa
rol
outs
mov
lods
js
mov
dec
push
std
xor
inc
mov
cmp
sub
sub
jmp
or
jns
mov
xchg
cwde
addr16
outs
xor
or
mov
inc
ret
push
repz
cwde
std
int3
jne
retf
stos
mov
sub
inc
ins
outs
xchg
inc
pop
cdq
stos
popa
adc
xlat
aas
pop
cwde
xchg
pop
mov
dec
fs
(bad)
out
add
je
mov
dec
in
cmps
pusha
out
xchg
mov
lea
imul
fsubr
dec
and
pop
inc
jb
out
xor
mov
or
pop
pop
xchg
pop
add
outs
loop
sbb
push
and
xor
fnstenv
ins
mov
loop
push
test
push
xchg
ffree
mov
adc
dec
je
imul
and
lock
std
out
sub
(bad)
xor
and
test
cmps
mov
out
add
jmp
xchg
pop
cdq
push
sub
push
rcl
(bad)
push
fcmove
dec
cs
mov
and
in
sub
sahf
pop
xchg
and
movs
jecxz
call
sti
fld
bound
adc
xchg
pop
cmp
lahf
pop
lds
loopne
jmp
mov
call
mov
mov
int3
ret
dec
sbb
sti
xor
xchg
adc
std
adc
sbb
scas
xor
and
adc
imul
sub
icebp
cwde
enter
mov
sbb
sbb
push
jmp
add
mov
leave
inc
js
out
jmp
and
ss
(bad)
cmp
mov
jg
or
repz
out
fistp
inc
std
push
repz
outs
dec
sub
hlt
repz
or
or
pop
mov
jo
xlat
mov
stos
shl
lahf
nop
dec
or
arpl
loopne
mov
mov
paddusb
out
in
fucomp
stos
shr
imul
hlt
bound
dec
dec
sti
movs
imul
mov
into
jl
pop
test
mov
scas
fcomp
loop
push
icebp
aad
xor
sub
mov
out
test
inc
mov
(bad)
test
cdq
or
ret
scas
ins
or
xchg
out
pop
push
loope
gs
dec
pusha
or
xchg
mov
popa
jle
mov
mov
pop
gs
in
inc
cli
xchg
repz
sahf
mov
mov
pop
push
dec
add
cdq
fcomip
addr16
fld
and
adc
jno
das
xor
dec
out
push
jp
xchg
fcmovu
stos
add
sub
jnp
and
mov
into
out
pop
xlat
mov
cmps
ficom
cmp
nop
ret
inc
jb
or
call
sbb
sub
das
popf
push
mov
out
out
fild
jg
xchg
sub
out
(bad)
lahf
adc
and
push
mov
outs
pop
dec
add
cvttps2pi
fs
outs
add
(bad)
push
aam
cwde
sub
mov
js
movs
div
clc
xchg
cmps
ret
data16
aas
jnp
xor
out
and
scas
lock
adc
js
daa
pop
pop
ja
inc
pop
mov
retf
xor
aaa
repnz
dec
inc
cmp
xchg
es
popa
je
arpl
test
xchg
mov
gs
lock
icebp
and
inc
ror
and
hlt
ja
sbb
mov
sbb
repz
gs
fadd
mov
jp
cmc
fmul
ror
or
xchg
fsubr
(bad)
xchg
loopne
sbb
sbb
cli
adc
ret
sahf
repnz
xchg
out
xchg
push
loopne
ror
dec
clc
test
dec
jmp
mov
xchg
in
mov
jmp
stos
fwait
jmp
sbb
ja
push
sub
rcr
push
mov
cmp
push
sti
mov
loopne
lods
inc
out
in
push
adc
cld
dec
nop
idiv
adc
cdq
add
push
xor
mov
adc
inc
call
push
push
sub
xor
shr
and
out
gs
repnz
mov
or
cmp
jne
cld
mov
mov
jmp
or
test
mov
adc
or
rcr
sahf
cmc
xchg
cli
fist
jl
mov
xchg
lods
ja
or
push
add
cli
pop
loop
pop
fimul
adc
call
mov
mov
stos
sub
and
add
sbb
inc
jb
leave
sbb
sti
jo
or
and
imul
mov
out
xchg
inc
outs
jbe
pop
cmc
and
iret
aas
shl
aad
retf
adc
dec
sbb
mov
sub
jl
jmp
shl
xchg
in
dec
or
cwde
mov
repnz
ret
xor
xor
mov
jns
adc
jecxz
fsubrp
mov
(bad)
lahf
dec
(bad)
cli
add
xchg
sahf
and
push
repz
rcr
add
fistp
adc
inc
mov
cmp
xor
(bad)
imul
fdivr
jbe
push
fs
push
std
add
repz
loopne
fmul
xchg
mov
xchg
fdiv
jmp
xor
lods
adc
dec
pop
popa
cmp
mov
js
out
xor
sbb
xchg
outs
xchg
and
add
mov
cmps
aaa
push
loop
int
jmp
icebp
mov
sub
(bad)
(bad)
mov
jg
sar
dec
sub
fstp
aad
fnstenv
outs
lahf
pop
repz
jb
fnsave
push
dec
mov
sub
test
ror
test
add
test
add
push
adc
xchg
fild
loopne
scas
dec
sar
sub
xchg
pop
popf
fisttp
movs
mov
out
xor
and
stos
je
xchg
leave
xor
or
in
push
mov
ror
into
adc
add
mov
es
in
repz
and
(bad)
aad
fxch
int
stos
cmp
xor
lods
pusha
sbb
add
loope
jg
push
pop
jo
aaa
shr
push
pop
jmp
adc
push
(bad)
push
xor
fs
and
jecxz
adc
pop
adc
fwait
inc
shl
mov
outs
arpl
retf
scas
rcl
cmps
jecxz
loope
leave
pop
sub
jae
or
xchg
aaa
dec
and
pop
xchg
dec
sub
add
sti
jns
dec
jo
sbb
imul
aad
mov
pop
loope
lods
dec
fld
fwait
add
mov
loopne
cld
imul
mov
adc
push
mov
jmp
cld
or
jns
ins
enter
adc
sti
cs
(bad)
mov
pop
out
ror
test
retf
mov
jmp
mov
pop
add
mov
js
push
inc
iret
aas
push
add
and
cmp
rol
sub
xchg
stos
mov
sbb
imul
(bad)
dec
jge
push
aam
sbb
sti
(bad)
stc
inc
push
add
xchg
push
enter
clc
pushf
mov
mov
pushf
xor
stos
ds
mov
retf
pop
sbb
scas
or
stos
ss
add
or
xor
cmps
dec
jnp
ins
add
ds
jb
cld
ret
inc
jo
mov
dec
pop
or
jb
rcr
rol
xor
mov
(bad)
add
(bad)
adc
adc
mov
into
iret
xchg
xor
lods
push
enter
xor
add
ds
and
push
jmp
inc
dec
add
push
fld
inc
lea
out
mov
mov
pop
repz
inc
cmps
pmuludq
div
cdq
push
mov
lock
mov
das
mov
je
ins
cmps
xchg
xchg
jmp
out
call
cmp
xlat
mov
jl
and
push
mov
jae
jmp
aaa
and
das
jne
mov
lods
pop
push
cld
test
xor
rcr
jae
add
mov
sub
dec
and
iret
inc
call
out
push
lods
ja
clc
pop
xchg
mov
test
lock
sub
sbb
mov
movs
(bad)
push
add
jp
hlt
ss
int
mov
inc
inc
mov
neg
lock
xchg
adc
aam
icebp
sbb
xchg
in
nop
and
hlt
movs
lea
jp
je
inc
jg
or
push
xchg
xchg
popa
jg
scas
ss
stc
sub
mov
outs
les
fnstenv
mul
mov
xchg
fnstcw
sbb
pop
sub
loope
int
cld
lahf
sbb
cld
ds
xchg
mov
adc
pop
add
out
repnz
sahf
shl
add
dec
and
scas
adc
stc
adc
stos
adc
dec
imul
push
ret
jecxz
and
pop
cmp
dec
and
(bad)
cmp
dec
test
xor
cmp
xlat
std
mov
lods
and
add
pop
sub
xchg
pusha
mov
and
or
xor
repnz
call
xor
loop
sbb
lds
ss
xlat
cmp
fisttp
cld
addr16
push
pop
hlt
scas
mov
nop
mov
inc
arpl
add
cmps
test
mov
mov
stos
push
mov
js
xchg
mov
sub
or
fwait
and
mov
aad
into
add
jmp
or
pop
(bad)
out
lds
in
xor
xor
ins
or
sub
or
push
sub
cmp
sbb
adc
xor
imul
mov
inc
and
add
mov
clc
xchg
lock
ins
punpckhwd
movs
test
cmp
sbb
jg
enter
and
lods
xor
dec
fs
jl
es
jl
push
cmp
and
mov
nop
push
or
test
(bad)
jae
push
xchg
jge
movups
xchg
fwait
sbb
sbb
test
fisttp
mov
sar
mov
add
mov
ja
mov
push
and
les
add
ret
int
hlt
daa
mov
in
pop
(bad)
outs
cs
sub
push
push
or
outs
scas
sbb
sub
xlat
gs
arpl
sub
out
or
push
(bad)
xor
mov
dec
mov
sbb
xchg
jle
inc
cdq
adc
call
jmp
popw
sbb
jmp
add
add
adc
mov
pop
lahf
cmp
shr
in
push
in
adc
jne
mov
add
out
ret
cmc
xlat
pushf
xor
(bad)
mul
inc
cli
mov
mov
push
xchg
jns
in
retf
jecxz
out
ins
cmp
xchg
cld
sbb
leave
pop
mov
das
push
xchg
clc
inc
jnp
out
jl
xlat
lds
call
ror
jno
add
adc
and
and
mul
dec
pop
mov
jp
sbb
sahf
lea
adc
sbb
cli
push
add
inc
push
stc
mov
mov
xlat
mov
dec
retf
scas
enter
test
cli
cmc
adc
sub
push
pop
fsubr
aas
or
or
jae
jp
push
mov
add
cmp
or
les
adc
je
scas
lods
shl
loope
cs
xchg
mov
mov
or
inc
jge
xchg
rol
ret
mov
adc
hlt
adc
add
xchg
ja
mov
pop
inc
stos
and
mov
js
and
push
fadd
mov
cs
in
dec
stos
fsubr
(bad)
or
jecxz
test
cmp
mov
add
lods
enter
lods
mov
mov
cmp
mov
mov
xor
fadd
(bad)
gs
lods
mov
inc
mov
jp
xlat
cmp
mov
jo
fwait
inc
lds
inc
fadd
repz
icebp
xor
xchg
and
xlat
push
loopne
movs
in
fwait
xor
add
lods
push
movs
test
pop
pusha
rol
call
test
sub
(bad)
sbb
jg
dec
div
je
shl
jne
dec
pavgw
enter
adc
js
jbe
fnstcw
mul
std
sbb
mov
lock
push
pop
push
mov
and
push
nop
pop
rcl
mov
leave
mov
ret
mov
and
bnd
out
(bad)
int3
xor
dec
sar
neg
add
movs
int
xlat
sahf
xor
cmp
push
je
int3
call
xchg
push
mov
and
std
jecxz
or
aas
rol
pop
sbb
mov
aas
js
call
rcr
pop
adc
cmp
adc
cmp
stos
push
cmps
in
dec
lea
fild
mov
sbb
dec
push
and
rol
out
out
not
mov
xchg
lds
pop
sub
mov
xor
aam
or
mov
push
push
int3
repz
add
jecxz
inc
cmp
lods
test
retf
mov
daa
or
test
fcomp
mov
adc
call
inc
shr
jnp
inc
mov
in
mov
push
scas
in
sbb
movs
and
test
in
(bad)
ja
adc
imul
pop
push
xlat
sbb
(bad)
xchg
mov
adc
mov
shr
jecxz
adc
mov
or
adc
scas
loope
mov
cmps
aaa
or
mov
add
push
jnp
pushf
adc
stos
pop
fs
test
call
sbb
popf
mov
ror
scas
clc
test
inc
cmp
xchg
mov
cwde
add
mov
mov
and
pop
sub
(bad)
in
movs
ret
cmp
sbb
in
and
xor
push
and
ins
cli
fbstp
out
(bad)
inc
sbb
sahf
in
mov
inc
xor
mov
ds
stos
data16
in
dec
(bad)
ds
cmps
add
adc
inc
xchg
push
adc
mov
out
rcl
scas
mov
aaa
mov
adc
inc
or
lahf
fs
xor
fcomp
jmp
xchg
cmp
sub
push
test
ins
jmp
mov
lds
out
inc
fsubrp
cmp
out
mov
das
mov
and
ret
fistp
mov
lahf
movs
popa
mov
data16
pop
sar
or
xor
mov
and
iret
scas
les
mov
and
cmps
into
ret
call
xchg
fmul
mov
sub
or
push
sub
lds
dec
xor
xor
jns
push
fisub
pop
push
add
dec
(bad)
sbb
xchg
outs
aas
loopne
xchg
dec
cmp
add
mov
inc
call
xor
jg
fs
out
inc
jnp
mov
pusha
outs
shl
or
jge
sub
xchg
jle
add
pop
push
movs
les
cmps
adc
mov
dec
ins
mov
adc
or
je
add
(bad)
pop
gs
xchg
fnstsw
leave
(bad)
jp
push
scas
pop
pop
movs
xor
popf
lods
std
enter
fchs
pop
mov
push
cld
inc
cmps
rol
cmp
lods
dec
pop
je
imul
pushf
jno
loop
pop
mov
je
int
fmul
popf
push
out
arpl
inc
ss
div
out
test
add
lock
stc
mov
rcl
push
mov
xor
jecxz
fwait
adc
cli
mov
inc
pop
imul
mov
in
je
or
loopne
repz
inc
cmps
test
jmp
cmp
sbb
ins
enter
mov
popa
hlt
rcr
pop
push
xchg
xchg
scas
fxam
mov
pop
jg
mov
push
int
inc
jmp
lea
mov
mov
mov
ror
push
or
shl
dec
(bad)
aad
lods
retf
aaa
jmp
outs
outs
call
lea
inc
jns
push
cwde
gs
ss
jle
loopne
stos
aam
cmps
jg
imul
push
dec
cdq
out
inc
mov
fisubr
fldcw
jnp
pop
and
(bad)
cmps
sbb
pop
mov
mov
mov
(bad)
cwde
mov
adc
movs
adc
fcomp
fucomp
add
push
xchg
pusha
add
movs
cmp
push
dec
jge
xor
xor
test
sbb
loop
adc
popf
add
not
lea
and
ds
inc
scas
push
leave
cmp
mov
or
pop
jl
inc
mov
ins
mov
(bad)
loopne
enter
pop
fistp
pop
jl
pop
fcomp
test
dec
sbb
scas
scas
sub
jns
invlpg
mov
push
scas
lock
jbe
stos
push
hlt
jmp
bound
pop
jg
test
aaa
xchg
mov
shr
sub
pop
mov
fistp
push
ficomp
xor
xchg
in
jnp
pusha
das
aas
mov
loopne
sub
repz
adc
loop
mov
shl
cmp
pop
stos
mov
fcomp
cmps
aas
jg
mov
and
pop
push
cmp
shl
inc
add
sahf
popa
jbe
repz
jne
dec
out
jmp
(bad)
lahf
push
push
into
xor
icebp
cmc
pop
clc
adc
or
xor
dec
mov
inc
das
(bad)
test
jnp
dec
mov
dec
or
sub
xchg
cmps
and
push
mov
bound
pop
call
jmp
push
jl
push
cmp
xor
mov
into
push
rol
movs
or
or
push
lds
jmp
mov
push
adc
mov
xchg
retf
ss
lods
mov
and
adc
or
nop
cmp
sbb
sbb
lods
bound
fdivr
push
and
pushf
pop
loopne
call
call
dec
sbb
dec
ss
(bad)
retf
dec
outs
stc
inc
(bad)
jle
mov
sahf
dec
daa
(bad)
pop
mov
rol
jae
xchg
rol
pusha
push
adc
outs
push
cmc
fild
inc
test
(bad)
ins
add
jnp
cmps
inc
jmp
mov
mov
(bad)
repz
jl
mov
fcmovu
or
test
lahf
jg
popa
dec
mov
and
shl
pop
jg
int3
ins
les
and
iret
das
scas
mov
mov
cmp
outs
xchg
nop
or
fstp
jns
lds
dec
pop
mov
mov
sbb
iret
sub
and
rcl
fldcw
jmp
out
xor
mov
mov
jg
mov
sbb
ja
or
in
push
sub
je
sti
mov
fwait
push
jnp
shr
out
or
out
call
push
adc
nop
cmp
mov
xor
shl
adc
add
dec
cli
and
or
inc
mov
sub
sub
jmp
cli
fisttp
push
and
pop
loopne
xchg
pushf
and
sbb
push
xor
iret
push
nop
push
cmps
cmovnp
adc
dec
test
or
pushf
mov
mov
push
movs
xchg
mov
push
shl
sbb
jl
(bad)
sahf
repz
mov
imul
aas
loop
aas
jge
mov
cmp
in
sub
sbb
sahf
sbb
or
into
clc
or
mov
lods
xchg
int3
mov
adc
out
fstp
inc
jmp
sahf
lahf
or
jmp
dec
adc
pop
xor
or
push
into
adc
retf
retf
jp
mov
popf
mov
das
inc
jge
and
mov
dec
fsub
fild
xor
adc
aam
call
sub
(bad)
mov
cmovle
jbe
jns
repnz
or
aad
ja
jmp
ret
or
int3
inc
pop
retf
push
push
jns
cmps
lods
adc
xor
xchg
push
adc
mov
mov
cmc
mov
pop
inc
enter
dec
xor
test
inc
jnp
add
sbb
mov
push
jbe
xchg
dec
movs
mov
dec
xor
into
dec
or
es
or
xchg
stos
nop
pop
jnp
ins
cld
sub
adc
cmp
enter
retf
lods
cld
or
fist
dec
mov
in
jp
jmp
jno
cli
inc
pusha
inc
xchg
test
fcomp
movs
mov
sub
xchg
icebp
rcr
mov
push
in
inc
xchg
lea
sub
adc
inc
inc
rcl
cmp
xor
in
js
sub
and
mov
pop
in
aad
pop
in
pop
ficomp
fidivr
cdq
mov
cmp
mov
test
xlat
add
adc
rol
les
es
mov
int3
fwait
mov
iret
lods
int
xor
pushf
push
lods
pop
jg
leave
pop
push
pop
mov
cmp
out
nop
cmps
cmp
mov
(bad)
hlt
mov
sbb
sub
loop
push
pop
sub
mov
es
push
popa
test
fidivr
cmp
(bad)
imul
push
cmp
lods
mov
icebp
inc
push
xchg
data16
pushf
sbb
jbe
dec
scas
jno
cdq
adc
mov
rcr
cmp
pop
cmps
jp
mov
ja
jmp
xchg
push
dec
daa
clc
mov
jne
aad
sbb
adc
sbb
jae
stc
gs
sbb
(bad)
adc
cmp
fisttp
push
dec
fmul
jb
sub
add
adc
push
int3
sbb
cmp
pop
jbe
add
or
test
mov
es
sti
xor
cmp
push
mov
dec
inc
das
and
fiadd
push
pop
cmp
leave
pushf
mov
jno
cdq
pop
cmp
es
aam
dec
ins
scas
jmp
out
xchg
mov
sbb
lods
mov
je
cmp
ds
sbb
fsub
cmps
add
jp
movs
pop
and
aas
xor
pop
outs
jnp
push
jmp
imul
(bad)
call
pop
sbb
mov
mov
adc
(bad)
or
dec
fstp
mov
ror
jg
xlat
pop
mov
push
retf
xchg
fcmovb
daa
cmps
dec
popa
in
repnz
xor
cmp
js
aad
fist
pusha
xchg
mov
pop
push
lock
in
xchg
mov
cli
jne
mov
gs
adc
jg
in
arpl
adc
or
imul
sub
stos
pop
mov
aam
jmp
ret
xchg
inc
mov
xor
addr16
xchg
enter
les
add
cmp
inc
cmp
adc
and
movs
xchg
xor
jmp
or
ror
test
fld
inc
jp
cwde
xchg
fdivr
pop
xor
and
xor
movs
hlt
mov
lahf
adc
jmp
jmp
clc
leave
inc
xchg
in
retf
and
pushf
shl
fwait
outs
data16
jg
add
loopne
mov
pop
mov
and
and
mov
cmp
leave
dec
lods
adc
out
call
xor
xor
xor
aas
or
mov
in
cdq
sbb
rcl
cmps
hlt
sbb
sub
rcl
rcr
sbb
cdq
pop
or
mov
lock
addr16
nop
xor
sti
std
push
inc
mov
mov
popa
push
jne
and
(bad)
mov
clc
sbb
push
push
pop
xchg
sbb
or
mov
jae
stos
popf
sub
out
pop
cwde
mov
push
(bad)
clc
aad
push
iret
stos
stos
fmul
sub
lds
sub
mov
ret
jno
add
dec
dec
lods
push
sbb
(bad)
mov
pop
mov
mov
mov
in
(bad)
movs
xlat
or
leave
(bad)
jb
push
mov
mov
imul
clc
push
xchg
inc
push
addr16
add
repnz
cli
in
pop
div
in
sbb
stc
mov
pushf
dec
jno
jne
pop
ins
xchg
cmps
mov
pop
fcmovu
pxor
cmp
add
repnz
mov
test
dec
cdq
clc
cwde
jnp
ds
ins
aam
js
dec
popa
xchg
push
mov
adc
fstp
in
(bad)
je
outs
and
repnz
mov
mov
icebp
push
sub
repnz
xchg
xor
fstp
xor
push
or
pop
movs
das
xchg
or
jmp
fucomi
retf
pushf
int3
push
je
out
ficom
(bad)
loopne
push
jmp
icebp
les
int
test
or
push
or
cmp
adc
and
scas
sub
mov
dec
push
sbb
mov
(bad)
aam
imul
fst
(bad)
and
pop
or
arpl
out
adc
cmp
dec
sbb
icebp
mov
js
jmp
cs
add
mov
scas
rcr
sub
ins
mov
dec
gs
ret
or
cmp
cld
sbb
int
inc
sbb
pop
xor
ss
add
(bad)
and
push
int
push
scas
cld
mov
rcr
mov
dec
mov
jmp
mov
in
mov
pop
lock
inc
push
fbstp
out
jnp
mov
mov
jnp
push
cmp
pop
dec
jecxz
xor
xor
(bad)
loop
jnp
aaa
mov
inc
pop
dec
mov
dec
xchg
xchg
jno
pop
jecxz
sub
pop
clc
push
mov
mov
mov
ror
shl
add
shr
sti
sub
mov
dec
cmp
les
cdq
mov
shl
sbb
pop
mov
mov
and
repz
mov
loopne
and
(bad)
fcomp
sub
xchg
les
and
cld
call
(bad)
xor
jmp
dec
jae
gs
mov
adc
mov
cdq
shl
or
in
jns
test
jbe
cmp
mov
xchg
fild
jmp
outs
iret
sar
(bad)
int3
cmp
jb
push
ficomp
out
xchg
loope
pop
inc
jl
sbb
nop
inc
inc
popf
push
out
sub
cdq
clc
outs
push
retf
jg
retf
push
jne
popa
jmp
jmp
lods
pop
sbb
scas
inc
fbld
ret
(bad)
sbb
xchg
add
add
test
lea
nop
xor
fs
ror
lahf
and
pop
pop
inc
dec
xor
popf
repz
push
ins
fadd
mov
inc
sub
sbb
rcl
rol
ins
push
js
(bad)
mov
and
sar
xor
ds
pop
scas
in
jle
fcmovnb
jns
adc
loopne
ror
ss
add
mov
das
sub
shl
add
sbb
int
mov
mov
adc
mov
iret
sub
idiv
sbb
fs
adc
push
push
ja
xchg
mov
je
sub
pop
xor
mov
sub
pop
cwde
cmp
ret
mov
xlat
mov
mov
cmp
retf
mov
call
xchg
xlat
and
mov
dec
cmp
sbb
mov
sub
or
jg
adc
aaa
push
(bad)
and
mov
adc
or
loope
pop
rol
push
inc
jo
inc
enter
test
xchg
pop
loope
aad
in
leave
dec
retf
push
ds
jb
inc
into
push
pop
or
xor
inc
and
sbb
not
idiv
test
jae
test
pop
clc
das
or
lods
cmp
out
adc
(bad)
in
je
aas
mov
inc
jg
test
mov
inc
xchg
jecxz
pop
xor
mov
push
gs
inc
fmulp
push
push
aad
or
mov
mov
ins
pop
sub
aam
dec
inc
std
mov
(bad)
lds
mov
cmp
fbld
pop
fstp
cdq
or
mov
lea
shl
mov
lahf
cmc
jnp
repnz
or
sub
lods
mov
fldenv
call
es
sub
mov
sti
sub
mov
xchg
call
mov
js
lea
cmp
xor
adc
fistp
and
cmps
lods
sbb
add
push
dec
xor
cmps
mov
sbb
aad
add
sahf
movs
aad
jnp
inc
xchg
jne
push
add
xchg
ret
je
test
sbb
pushf
in
or
mov
sar
int3
shr
cmps
ret
mov
mov
outs
fimul
sub
dec
xchg
lods
inc
in
lea
pusha
adc
push
stc
jns
mov
aas
mov
xchg
jo
sub
out
pop
mov
push
mov
popf
inc
test
or
sub
push
lock
sub
mov
test
fs
mov
push
ins
rcr
mov
xchg
or
dec
in
mov
sub
test
sbb
(bad)
jae
xor
test
cmc
or
mov
pop
push
dec
push
mov
dec
jns
add
in
xchg
xor
imul
pop
lea
adc
adc
fldz
test
hlt
js
lods
je
dec
loope
into
xchg
push
mov
and
pop
mov
xchg
test
repnz
inc
fdiv
stos
pop
(bad)
cdq
out
push
mov
jnp
dec
fistp
mov
jmp
ss
bound
rcl
(bad)
mov
ret
cdq
and
jg
loope
adc
leave
add
or
ficom
mov
lods
pop
mov
sbb
test
mov
test
cmps
daa
mov
int3
or
jns
sub
or
test
sahf
jne
xor
xor
fisttp
dec
mov
push
cli
adc
mov
hlt
jmp
mov
aam
test
mov
pushf
psllw
clc
repz
inc
mov
in
in
pop
fs
and
or
jns
sti
mov
pushf
xchg
test
and
imul
or
out
pushf
push
jmp
fwait
stos
imul
push
xor
dec
sbb
inc
cmps
jl
out
sar
cli
and
inc
ins
popf
cmps
aad
push
lock
adc
mov
jge
jne
xor
push
mov
jmp
jl
add
add
(bad)
in
(bad)
xor
rcr
jmp
daa
mov
mov
fwait
int
cmp
fwait
pop
mov
adc
pop
das
jnp
mov
ss
inc
xor
and
test
retf
sbb
fucompp
pusha
and
jecxz
ficom
mov
retf
push
mov
mov
(bad)
fbld
nop
inc
ja
aad
and
xchg
(bad)
lock
mul
call
adc
pop
pop
not
inc
inc
hlt
cmp
aam
lods
pop
shr
mov
pop
cmps
popa
or
mov
ja
fld
dec
push
cmp
dec
cli
adc
mov
sub
pop
push
mov
xor
jmp
fsubrp
inc
add
sub
sub
test
or
icebp
rol
pop
mov
cli
shl
push
cli
push
push
pusha
inc
sbb
lea
jl
inc
test
jbe
in
in
fnstsw
movs
jno
push
and
sbb
icebp
jmp
jns
xlat
sub
adc
mov
or
cwde
aad
shl
movs
pop
adc
dec
mov
std
mov
mov
dec
(bad)
mov
hlt
repz
enter
lea
cmp
(bad)
sti
lods
mov
imul
adc
out
xor
push
dec
mov
lock
lds
aas
add
jle
enter
outs
out
adc
out
lods
cmp
inc
js
outs
cmp
mov
cmps
xor
out
push
mov
add
or
push
sahf
jmp
add
sar
scas
pusha
rcr
pop
int3
es
js
xor
xchg
imul
sti
neg
in
mov
sbb
jb
jmp
add
mov
pop
ret
or
outs
imul
daa
xchg
or
iret
cmp
push
dec
not
pop
test
pop
out
lock
pop
fisubr
sbb
inc
adc
dec
das
pop
fisttp
mov
xor
push
sahf
loope
out
push
pop
dec
dec
loope
test
daa
pushf
test
sub
xchg
std
push
int
div
test
push
mov
sub
push
ss
call
lds
imul
fdiv
ins
or
shr
cmc
add
inc
inc
jns
and
add
fiadd
add
jp
dec
sti
mov
xor
sub
leave
push
ins
dec
mov
sbb
data16
les
pop
xor
jmp
cmp
movs
xchg
adc
push
lods
inc
mov
jbe
ret
pushf
repnz
adc
inc
sub
lds
push
ja
xor
cmp
xor
test
imul
rcl
dec
ret
pop
retf
add
cli
xor
xor
retf
jb
pop
imul
outs
(bad)
mov
dec
sti
mov
mov
retf
xchg
jns
in
xchg
dec
add
jb
(bad)
stc
in
repz
lods
sahf
int
add
adc
or
xor
idiv
jmp
inc
les
(bad)
mov
pop
fdivr
sbb
out
js
mov
into
or
and
sbb
retf
or
std
or
shl
inc
in
inc
jno
sbb
fld
data16
(bad)
jnp
inc
js
fneni(8087
fcomi
add
add
addr16
cmps
sub
stc
adc
push
xor
or
pusha
sbb
(bad)
daa
test
sub
xchg
mov
call
push
xchg
fadd
hlt
sbb
out
int3
jo
(bad)
je
subps
sbb
mov
pop
fadd
adc
pop
icebp
adc
fadd
cmp
out
scas
aaa
jle
mov
dec
inc
xchg
jnp
inc
stos
ja
push
xchg
xchg
jmp
pop
clc
out
daa
(bad)
push
jl
mov
or
(bad)
mov
out
fdiv
pop
mov
mov
push
test
vpmulhw
out
mov
sub
shl
and
mov
ss
iret
fnstcw
pop
mov
mov
mov
cli
jl
fdiv
(bad)
stos
add
pop
imul
je
xchg
or
clc
stos
neg
jno
movs
imul
scas
(bad)
repnz
rol
mov
in
or
retf
add
cmp
xchg
push
sahf
stc
repnz
cdq
mov
aas
imul
and
std
add
jmp
xor
jp
adc
xor
test
mov
mov
add
sub
inc
mov
cwde
cmp
inc
pop
push
xchg
cmp
call
inc
gs
out
mov
(bad)
add
rcr
jl
int3
imul
xor
and
adc
adc
xchg
jecxz
in
ss
xor
dec
ret
out
jle
call
adc
fs
stc
(bad)
jbe
inc
sbb
dec
fild
int
dec
into
jl
scas
shr
rol
xor
xor
sub
shr
mov
mov
in
pop
js
adc
or
daa
ins
mov
adc
mov
(bad)
pop
fbld
lea
push
inc
test
rcr
cmp
sbb
inc
or
sahf
adc
cmps
repz
add
jp
jmp
cmc
xor
(bad)
cmp
mov
cmps
inc
xor
pop
or
push
jnp
mov
xor
sbb
cdq
aas
lea
loope
sbb
push
push
iret
mov
jbe
rol
pop
das
add
test
and
jge
and
scas
loop
or
aad
loope
push
cmp
mov
cmp
sbb
stos
mov
adc
ficom
jo
je
stos
sub
pop
repnz
cld
cmps
arpl
movs
push
ja
icebp
mov
cmp
lock
pop
dec
sub
mov
xor
loope
cmp
pop
sbb
dec
push
add
sbb
idiv
add
mov
pop
addr16
aad
jnp
and
hlt
mov
pop
jb
or
outs
cdq
adc
lahf
cli
call
rol
jp
adc
iret
mov
arpl
popa
daa
pusha
xor
pop
add
jo
fidivr
retf
jmp
inc
ja
mov
ror
sub
cwde
imul
push
aad
test
mul
in
mov
xchg
jle
cmps
xor
mov
adc
mov
(bad)
retf
in
repz
sub
sub
jecxz
mov
ret
and
adc
stos
mov
(bad)
jp
fidivr
xchg
lds
test
or
ja
fsubr
out
jcxz
pop
mov
and
inc
adc
pop
rol
cwde
test
stc
mov
cmps
test
mov
cmc
es
cmp
aam
(bad)
fld
test
xor
out
fimul
dec
cwde
xchg
loopne
push
fldcw
movs
inc
xor
out
dec
pop
or
inc
add
xor
and
arpl
cmp
or
mov
retf
test
(bad)
adc
mov
xchg
(bad)
pop
jnp
push
iret
sub
push
add
mov
mov
aam
xchg
mov
fidiv
cmp
xor
sub
jne
lahf
call
jl
sbb
cmp
xchg
mov
outs
sub
bnd
xchg
psrlw
mov
ror
icebp
jbe
gs
leave
mov
push
mov
jl
enter
mov
and
xor
dec
or
std
imul
jmp
and
push
scas
(bad)
xlat
push
xchg
dec
pop
test
add
iret
daa
pop
or
inc
iret
ds
xlat
in
pop
(bad)
les
push
test
jecxz
xor
arpl
out
jb
add
imul
or
jb
sub
fwait
and
xchg
pop
test
mov
movs
call
movs
mov
mov
dec
xchg
jp
sbb
fcom
dec
mov
mov
std
stos
bound
fstp
jg
rol
pop
and
mov
mov
xor
dec
xchg
repz
ins
test
ss
mov
loop
jp
inc
inc
pop
xchg
xor
test
or
repnz
cmp
adc
sub
mov
pop
cli
jo
arpl
sub
jns
std
mov
int3
lods
mov
xor
cmp
and
xor
fiadd
aaa
jl
shr
dec
shl
les
or
lods
sbb
push
(bad)
jle
and
je
sbb
and
xor
sti
push
pop
pop
dec
scas
(bad)
into
(bad)
xchg
js
mov
xchg
dec
inc
ret
mov
add
sbb
inc
mov
jmp
js
mov
push
scas
inc
aam
lods
int3
call
or
gs
cmp
and
inc
push
je
jnp
cmp
mov
xchg
sub
sub
and
mov
rcr
imul
ret
xchg
adc
sbb
daa
cmp
enter
xor
xchg
lahf
pushf
or
scas
adc
inc
mov
pop
push
jg
push
mov
or
clc
arpl
fist
inc
or
fst
or
mov
test
mov
push
das
popf
gs
pop
and
sub
stc
rcr
stc
xchg
xchg
xchg
xor
sbb
mov
sbb
pop
lds
xchg
mov
dec
jne
sahf
ins
sahf
retf
mov
jmp
sar
popw
fnstsw
mov
daa
out
fucomp
pusha
add
lahf
mov
jmp
addr16
jge
ficom
in
jo
lahf
movs
dec
scas
adc
inc
packuswb
mov
push
xor
xchg
xor
es
jae
mov
jmp
or
add
dec
add
inc
cmps
loopne
add
mov
sahf
sub
fld
adc
ins
mov
cdq
rol
sbb
mov
xor
jmp
ret
outs
dec
pop
sub
das
and
fild
mov
stos
cmp
jle
cmps
xchg
xchg
xchg
mov
jno
sar
scas
dec
sub
or
or
dec
push
xor
pop
mov
sbb
daa
or
out
hlt
call
adc
cmps
mov
call
cmps
xchg
jle
jae
or
mov
clc
in
or
rcr
out
shl
fwait
xor
mov
repz
sub
xchg
sbb
aas
mov
lahf
sub
sub
js
adc
mov
pop
jno
div
and
fnstcw
stos
in
das
test
into
sub
jmp
push
add
ja
pop
push
std
xor
jcxz
jg
push
adc
rol
mov
mov
mov
pop
fadd
mul
jne
push
fs
(bad)
fnstenv
outs
mov
and
push
mov
rcl
push
shl
push
nop
test
cmp
mov
std
lock
push
leave
xchg
mov
xor
outs
das
fsub
(bad)
repz
mov
ficom
cmp
cld
ins
cmps
fsubr
in
cli
push
arpl
dec
xchg
push
pop
test
shl
inc
push
inc
cwde
xchg
mov
mov
jnp
fwait
addr16
cmp
lahf
mov
jno
or
mov
imul
clc
mov
(bad)
je
dec
inc
lods
mov
push
add
jge
outs
popf
lds
push
aas
dec
iret
sahf
mov
mov
in
pop
sar
sahf
into
inc
cli
or
adc
ss
das
icebp
(bad)
ss
jecxz
clc
or
mov
mov
clc
mov
out
into
add
sub
pop
inc
push
cwde
jp
xchg
push
int
pop
and
cdq
outs
jle
hlt
aaa
ss
retf
xor
fs
cmp
aaa
mov
push
in
(bad)
cmps
mov
cmp
inc
out
std
dec
rol
inc
sub
test
pop
rol
xchg
fwait
mov
xchg
push
cwde
in
icebp
adc
daa
and
shr
and
mov
cmp
sbb
mov
adc
jnp
push
add
jns
sub
xor
mov
pop
aas
and
outs
mov
pop
imul
or
test
pop
arpl
fiadd
xchg
mov
adc
stc
inc
fidiv
jmp
mov
imul
inc
and
call
js
lds
aaa
mov
movs
adc
loop
mov
stos
jne
or
jle
in
mov
adc
es
ror
cmps
dec
jmp
daa
jmp
dec
push
shl
dec
(bad)
dec
sar
test
xchg
push
xchg
inc
movs
or
ds
aaa
jecxz
jecxz
xor
mov
icebp
sbb
or
(bad)
mov
lods
pushf
pop
xor
xchg
stos
jnp
sbb
cmp
out
adc
imul
mov
(bad)
out
imul
xchg
inc
or
scas
sbb
cwde
ins
push
mov
gs
cmps
mov
mov
out
sbb
cli
lods
mov
and
and
mov
pop
nop
adc
inc
inc
and
and
in
mov
pop
dec
and
sbb
cmc
(bad)
pop
pop
mov
adc
and
jp
dec
mov
sbb
ja
jns
ret
push
out
xlat
xchg
daa
adc
fidivr
adc
push
pushf
mov
test
adc
or
xor
adc
out
hlt
out
jno
iret
jae
pushf
push
jge
fs
(bad)
loope
aam
fidiv
call
mov
add
and
mov
retf
ret
retf
xchg
stos
xor
add
popf
iret
add
jno
out
fimul
dec
in
call
or
jl
or
pop
scas
in
(bad)
mov
loope
aas
les
ins
scas
mov
add
and
xor
hlt
adc
cli
sub
in
mov
stos
pop
es
sahf
mov
mov
call
sbb
mov
sub
bound
xor
inc
pop
sub
cld
sub
or
mov
jmp
mov
scas
repz
aas
push
pop
sub
push
ds
xchg
cmp
scas
hlt
fs
test
ss
stos
out
nop
inc
sbb
loopne
adc
push
cmp
repnz
jecxz
pushf
lea
mov
push
mov
(bad)
sub
cs
push
in
mov
ss
mov
sub
sub
jno
retf
mul
fyl2xp1
sub
add
push
data16
xchg
dec
mov
out
stc
jecxz
leave
sbb
enter
xchg
fcmovb
mov
jecxz
mov
cs
js
cld
not
in
vpunpckhwd
inc
sub
movs
shl
xchg
call
push
mov
out
xchg
mov
push
fimul
xor
imul
call
mov
sbb
int3
stos
mov
(bad)
jle
int
sahf
mov
pop
shr
xchg
push
shl
add
lods
jmp
fs
into
mov
je
ret
lods
ds
mov
jmp
jle
fcom
xor
or
xchg
shr
jp
cmps
inc
test
jp
sbb
add
out
pop
cmp
mov
cmp
sbb
xor
shr
aad
out
fidiv
adc
mov
xor
inc
out
or
jb
sar
inc
cmc
ret
cmp
cmc
sbb
cmps
cmps
pop
fstp
dec
mov
cmp
aad
test
(bad)
adc
jp
lahf
sbb
mov
and
sub
aas
imul
push
sbb
out
out
push
call
lahf
ret
xchg
sti
inc
imul
movs
out
sbb
jns
xor
add
mov
adc
mov
bsr
and
adc
movs
imul
pusha
(bad)
lods
cmc
movs
jp
pop
cli
outs
xchg
sti
sub
(bad)
jmp
out
mov
into
stos
pop
aam
push
fidiv
dec
repnz
push
fild
(bad)
call
jns
sub
retf
ror
mov
das
xchg
xchg
iret
shr
out
add
xchg
cwde
mov
sbb
mov
mov
out
push
fcomp
lahf
popa
fisttp
push
push
pop
push
call
jmp
arpl
add
xchg
cwde
cmp
pop
popf
push
or
enter
push
adc
call
je
push
pusha
mov
fnstenv
jmp
ja
pop
sbb
cmp
adc
retf
mov
inc
fldcw
call
loope
add
or
cmp
mov
sub
mov
xlat
dec
mov
std
mov
(bad)
cmp
mov
sub
add
add
inc
sbb
mov
lahf
mov
add
xor
daa
es
repz
pop
xor
test
es
retf
cmp
push
test
jo
pop
add
retf
cmps
push
sbb
push
pushf
xchg
movs
jmp
xor
or
jo
fwait
test
xchg
fs
int3
push
cmps
movs
test
iret
lods
ja
xchg
nop
mov
add
div
je
push
ja
mov
movs
(bad)
int3
or
shr
daa
adc
cmps
sti
std
ret
imul
mov
imul
in
mov
ret
stc
sbb
ins
pop
aaa
cld
popa
cmp
cmp
mov
pop
jecxz
scas
sub
cmp
stos
push
mov
dec
(bad)
in
test
xchg
retf
sbb
out
jg
jb
push
aaa
(bad)
mov
inc
xchg
cmps
rcl
fstp
sbb
mov
mov
jae
fs
enter
cmp
inc
arpl
mov
aam
xor
lods
scas
sub
cli
or
mov
leave
xchg
adc
cmp
aas
(bad)
cwde
jge
ret
icebp
je
and
scas
repz
mov
cli
dec
mov
dec
popf
div
pop
adc
and
ror
lahf
adc
jns
mov
mov
into
sub
adc
(bad)
xchg
lahf
mov
jns
hlt
popf
mov
popa
lahf
je
repz
pop
mov
sbb
mov
imul
mov
mov
fisub
jns
test
and
call
adc
clc
cmp
das
xor
test
sbb
sub
and
push
mul
adc
inc
sbb
(bad)
cmp
xchg
retf
lock
cmc
repz
popf
push
push
or
repz
cmc
cmp
adc
icebp
or
cmp
and
mov
lods
outs
ss
mov
int
fmul
mov
loope
pop
leave
mov
cld
sbb
scas
scas
dec
into
cmp
clc
sub
in
mov
sbb
xchg
adc
pop
outs
cs
or
cli
fcom
sbb
inc
sub
pusha
add
call
sbb
or
addr16
icebp
fst
or
sbb
into
mov
in
pop
leave
mov
sub
ss
push
mov
ins
imul
xor
scas
mov
jae
mov
stc
movs
pop
jb
popa
call
jns
mov
xchg
arpl
jb
push
add
popf
retf
jmp
into
adc
pusha
adc
push
mov
adc
in
ror
jmp
rol
movs
mov
dec
inc
sub
or
bound
int3
mov
imul
jnp
cmps
mov
or
sub
xchg
sbb
xor
fnstenv
cmp
fidivr
mov
adc
lahf
or
sub
dec
iret
ds
pop
mov
int3
and
call
ret
adc
sbb
add
jns
fstp
push
out
(bad)
dec
add
pusha
lods
jge
aas
pop
cmp
pop
cmp
xchg
sbb
movs
pushf
push
jnp
bnd
cmps
mov
mov
sub
fmul
scas
pop
pop
pop
sub
js
adc
bound
sti
shl
je
add
jno
aad
(bad)
xor
and
daa
or
sub
push
sbb
push
mov
jle
fsub
cwde
cmp
add
sub
mov
mov
adc
aam
hlt
fst
clc
cdq
test
jne
dec
mov
(bad)
jp
push
mov
mov
jo
bound
jp
lods
adc
nop
add
in
xchg
sbb
fwait
and
call
popa
xchg
cmps
in
retf
jg
inc
mov
test
sub
cmc
ss
int
or
int
inc
jns
mov
mov
mov
ret
in
jl
xchg
repnz
or
stc
dec
aam
(bad)
jne
push
loopne
iret
cmp
aaa
in
xor
lock
jne
shr
(bad)
mov
sub
sub
jo
(bad)
pop
inc
pop
xor
jl
jno
mov
mov
movs
fnstcw
or
ja
jp
xor
jb
icebp
adc
xchg
(bad)
ret
leave
push
jmp
je
mov
jns
(bad)
xor
pop
push
scas
xor
addr16
pop
scas
xor
jecxz
mov
nop
pushf
in
jo
add
and
mov
mov
inc
ret
mov
rcl
pop
outs
xor
jg
xchg
dec
test
dec
in
fstp
xor
in
mov
or
jle
pusha
add
ret
stos
cmp
dec
ret
mov
das
xchg
adc
jno
imul
mov
push
xor
popf
add
and
arpl
pusha
dec
gs
loope
push
xchg
out
pop
pop
xor
out
ins
fisub
xchg
scas
dec
retf
cwde
pop
sub
push
add
dec
icebp
mov
out
push
fisub
adc
retf
mov
dec
(bad)
add
push
loop
cmp
movs
scas
lds
(bad)
cs
mov
pop
fstp
mov
fcom
jae
movs
scas
into
or
inc
lahf
jmp
push
ds
mov
xor
add
jne
mov
fbld
aas
ins
sbb
cld
rol
mov
into
in
stos
pusha
clc
push
inc
and
inc
dec
and
(bad)
xor
mov
mov
imul
xchg
shl
xchg
test
adc
mov
mov
cwde
mov
loopne
mul
dec
pop
adc
and
std
jmp
push
or
pop
inc
push
xchg
xchg
mov
fimul
(bad)
pop
xchg
dec
clc
pop
jmp
mov
mov
in
add
pop
lock
ja
sub
(bad)
jo
loope
or
lahf
mov
pushf
and
adc
xchg
jle
jnp
stos
adc
stos
jecxz
gs
imul
inc
out
inc
dec
cld
cmps
ja
push
add
or
das
sub
lods
sub
std
pop
cld
psubsw
mov
inc
(bad)
pop
lds
outs
adc
cdq
push
mov
sbb
fs
scas
cmp
sahf
xchg
adc
mov
es
sbb
sahf
std
push
ror
arpl
xchg
mov
pushf
adc
movnti
mov
xchg
sub
fld
jb
jb
sbb
aaa
jb
(bad)
cmp
in
cmp
lock
fcom
pop
push
mov
stos
push
in
add
sub
das
fimul
loopne
push
mov
mov
jecxz
sbb
push
icebp
jp
xor
call
pop
das
lods
imul
fist
mov
mov
enter
ja
arpl
cli
inc
aas
cmp
std
sbb
sub
ret
(bad)
pop
and
jmp
stos
ins
jg
das
sub
popf
stos
push
pop
add
lea
xor
push
ret
push
retf
std
call
jbe
call
xor
pop
dec
dec
out
movs
int
fdivr
mov
inc
push
cmps
inc
addr16
dec
sbb
rcr
fs
xor
adc
or
outs
or
mov
ss
pop
test
mov
sbb
cli
jle
sbb
les
repnz
imul
es
push
push
out
ss
xchg
adc
(bad)
add
call
bound
jp
cdq
pop
outs
push
dec
lds
mov
sar
cdq
cmp
adc
and
sahf
fisttp
push
xchg
movs
retf
cmc
pop
es
push
int
pop
popa
mov
pushf
dec
jecxz
xor
jmp
push
jo
popf
test
test
loop
mov
jbe
sahf
mov
mov
xor
lods
mov
loopne
or
gs
inc
cmp
lahf
mov
lahf
arpl
inc
cmp
adc
lea
sahf
les
push
test
mov
cmp
jmp
clc
ss
and
(bad)
out
cld
or
scas
and
fs
inc
cdq
ja
mov
add
imul
clc
inc
aas
jb
push
push
pop
mov
adc
push
inc
fisub
xor
js
push
outs
sahf
gs
jnp
add
push
pop
xor
mov
xrelease
std
pop
dec
fdiv
jecxz
popf
mov
outs
cmp
pushf
pop
mov
ss
push
adc
and
cld
pop
mov
inc
call
mov
cmp
mov
cmps
sar
out
inc
stos
cld
add
cmp
aad
sbb
inc
outs
jo
test
cli
in
jg
or
aad
and
pushf
gs
mov
icebp
lock
sbb
fdivrp
das
mov
cmp
xchg
mov
cmp
sbb
iret
dec
fidiv
add
cmp
inc
int
jp
int
jmp
inc
ja
(bad)
arpl
pop
cmp
and
pop
jp
push
cmp
icebp
js
sahf
xchg
and
rcr
jns
xchg
lods
mov
add
and
or
jl
call
mov
mov
jae
test
mov
lahf
in
into
leave
ret
mov
mov
jne
jl
pop
shl
mov
or
das
xchg
mov
rol
inc
test
sti
shr
(bad)
ja
cmp
and
adc
dec
mov
sub
into
(bad)
mov
adc
ins
push
or
jmp
data16
jg
and
test
inc
and
push
bound
je
push
sti
popf
ins
(bad)
out
(bad)
test
jbe
in
and
cs
lock
jae
inc
(bad)
cmc
into
scas
push
es
in
cmp
in
retf
outs
mov
das
mov
push
cmp
ins
rcr
fisub
dec
je
mov
(bad)
or
inc
adc
aas
stos
adc
inc
jno
jge
(bad)
fcomp
xor
js
shl
das
or
xchg
fnsave
adc
retf
sahf
outs
pop
(bad)
retf
cld
mov
jb
dec
cmp
nop
push
into
mov
sti
retf
cdq
loopne
test
jnp
js
xchg
push
mov
xchg
imul
mov
scas
sub
mov
adc
push
xchg
sahf
aaa
cmp
mov
cld
mov
lahf
inc
push
retf
(bad)
or
shr
dec
movs
(bad)
loope
jmp
sbb
jl
jne
adc
lods
pop
enter
xchg
mov
das
jmp
arpl
mov
imul
adc
dec
cmps
shr
frstor
mov
call
dec
movs
fsubr
out
movs
push
sbb
loope
cli
rcr
dec
retf
(bad)
ins
adc
sbb
sbb
mov
out
push
test
std
repz
cmc
jbe
adc
es
mov
sbb
popa
push
je
js
jg
aam
aas
mov
cdq
cmp
sub
clc
mov
lods
lock
scas
loopne
mov
push
jmp
je
mov
sbb
push
out
iret
sub
xor
sbb
sub
lea
mov
mov
outs
or
in
dec
arpl
jl
(bad)
add
mov
rol
out
adc
push
jb
jp
jnp
out
test
push
dec
pop
es
mov
sub
adc
push
pushf
mov
cmps
retf
retf
mov
ja
mov
mov
imul
mov
or
aad
sbb
xchg
cld
sahf
push
sbb
enter
dec
inc
adc
pop
data16
lods
scas
ins
test
cmc
icebp
js
mov
xchg
xchg
inc
lods
sub
popa
fs
outs
xor
cld
and
iret
mov
mov
mov
out
pop
push
lock
lock
test
into
mov
push
cmp
fdiv
push
push
(bad)
jmp
jo
(bad)
sti
pop
ins
sub
adc
sub
jnp
ret
adc
sbb
and
xchg
ds
dec
shl
jno
mul
and
xchg
test
cmp
cmp
cmps
mov
sbb
pop
arpl
int3
pop
pop
(bad)
clc
push
dec
add
test
lods
es
cwde
out
and
sub
bound
or
ficomp
push
scas
xor
sbb
push
repz
jo
jmp
jo
shr
sub
neg
mov
(bad)
push
push
rcl
inc
scas
or
dec
repz
xor
rcl
cs
outs
sub
xor
fidiv
ins
xchg
xchg
cld
gs
(bad)
pop
ret
div
fisub
jp
popa
aam
adc
sbb
gs
mov
addr16
cmp
sub
gs
mov
dec
pop
mov
loop
lock
xor
jb
loope
jge
pop
es
movs
mov
cdq
dec
jne
mov
and
jge
sti
cmps
imul
idiv
shr
mov
call
sub
push
push
jecxz
adc
ds
je
mov
pop
sbb
jmp
js
pop
cmp
mov
das
jns
loopne
mov
ds
inc
adc
xchg
add
push
dec
fst
sub
and
dec
jecxz
add
std
sbb
cmp
and
imul
mov
jno
in
xor
nop
rcr
addr16
xchg
or
sub
xchg
xor
fnsave
out
pop
pop
pop
sbb
inc
mov
xor
dec
ret
in
popa
test
stc
or
les
adc
call
fld
dec
add
dec
or
sub
cwde
xchg
bound
push
cld
sub
mov
ret
push
ds
push
cmps
add
xor
mov
(bad)
cwde
mov
or
jg
cmp
retf
or
push
les
push
scas
dec
and
mov
mov
xor
xor
fistp
sub
daa
dec
(bad)
popf
enter
(bad)
jns
mov
xor
sar
jne
lahf
imul
inc
jle
cmc
test
outs
xchg
ja
ss
jne
into
mov
lds
(bad)
leave
retf
ins
xor
pop
and
xor
ins
ret
dec
push
push
xchg
cld
cwde
daa
xor
sub
shl
sub
dec
ins
mov
mov
mov
iret
push
movs
xor
int3
in
xor
push
jae
jle
daa
mov
rcr
out
mov
adc
cmp
inc
pop
jmp
sub
push
icebp
gs
cmp
std
fdivr
shr
push
inc
ja
aam
jmp
jnp
arpl
fimul
mov
push
mov
ret
inc
sub
iret
push
jp
aad
sbb
jecxz
sub
jmp
or
(bad)
ss
fld
cmp
int3
or
popf
iret
or
je
ds
movs
jbe
fs
cmc
jbe
repz
mov
jmp
pop
fdiv
jecxz
popa
mov
add
jo
add
js
jp
and
test
into
bound
repnz
test
pop
lea
push
(bad)
mov
xor
jmp
xchg
sub
pop
lods
inc
leave
and
lahf
sub
inc
in
lock
pop
outs
ja
les
ror
ret
pushf
sub
mov
enter
mov
aad
mov
or
cmps
nop
test
mov
mov
jmp
hlt
pusha
mov
cs
out
and
cmp
add
js
mov
jae
ja
lods
mov
fdiv
lods
es
mov
jne
add
out
mov
outs
jbe
pushf
xor
cmps
inc
and
(bad)
fldenv
inc
out
test
clc
cwde
push
inc
jae
pop
jecxz
rcl
and
repnz
fwait
xchg
sbb
xchg
ror
inc
fst
lea
repz
scas
xacquire
or
outs
cmps
or
movs
movs
xor
loope
inc
mov
xchg
cmc
mov
or
or
xor
mov
mov
mov
js
shl
out
or
push
fadd
shl
add
mov
addr16
inc
neg
push
int
mov
jmp
cmc
push
mov
xor
xor
out
adc
cmp
mov
and
ins
or
lahf
in
daa
cld
sbb
mov
imul
xchg
test
mov
pusha
imul
fwait
bound
(bad)
mov
xor
mov
retf
xor
dec
scas
loop
xchg
inc
jbe
push
stos
inc
inc
xchg
stos
mov
dec
cld
mov
pop
or
cli
sub
rcl
mov
jge
xlat
inc
xor
fstp
add
jae
in
inc
popa
shl
inc
mov
push
btc
popf
inc
xor
and
gs
cmc
daa
fdiv
inc
out
out
or
repz
test
jl
add
scas
and
out
js
mov
mov
fidiv
retf
mov
(bad)
loope
retf
push
stc
sub
push
icebp
sti
nop
test
je
sbb
scas
sub
jecxz
sbb
in
dec
jo
stos
retf
cmp
sub
adc
int3
ror
push
dec
daa
call
cmp
xor
pop
scas
(bad)
dec
ret
ins
call
dec
xchg
repnz
inc
(bad)
fsub
les
test
mov
and
xchg
adc
jmp
stos
imul
or
push
mov
ret
jae
mov
push
xchg
inc
pusha
mov
push
shr
xchg
xchg
loope
movs
ss
scas
pushf
and
adc
aaa
jb
xor
mov
jg
cld
xor
ins
mov
lods
pop
mov
out
es
in
dec
xor
sbb
cmps
aam
xor
popf
xchg
out
or
scas
inc
rcr
popf
cli
lock
adc
pop
jmp
idiv
push
push
loop
dec
pop
scas
icebp
or
pop
cmp
push
dec
jg
(bad)
out
cs
lods
push
dec
dec
inc
mov
pop
mov
xchg
test
call
mov
inc
mov
dec
pop
retf
retf
bound
mov
mov
dec
aad
je
int
add
add
push
jecxz
adc
pop
pop
sbb
push
fisttp
adc
cmc
(bad)
jle
push
sub
dec
adc
pop
lock
inc
lock
mov
jg
cmc
pop
push
xor
cmps
cmp
rcr
mov
popf
xchg
clc
mov
push
lds
pop
js
push
ficom
in
inc
xchg
movs
jne
or
stos
add
in
xor
aam
sbb
into
icebp
pop
xor
addr16
jbe
outs
ins
jle
inc
dec
js
adc
sar
mov
in
(bad)
loop
fisubr
js
pop
jb
test
out
nop
pop
sar
dec
cs
dec
and
mul
cmc
rcl
(bad)
push
sahf
int
sub
pop
and
mov
or
je
in
add
sar
aad
dec
mov
gs
dec
or
mov
jnp
push
jns
test
rcl
dec
ins
out
mov
(bad)
movs
iret
xchg
mov
add
push
movs
and
jno
pop
xchg
mov
cli
or
jne
(bad)
call
in
xchg
mov
xor
out
dec
xor
lea
(bad)
je
or
mov
mov
enter
sbb
cmps
int3
out
jmp
xchg
adc
mov
and
imul
dec
mov
cdq
or
les
cmp
pop
pop
mov
emms
dec
(bad)
cli
out
in
mov
xchg
xor
loope
xor
jg
mov
push
retf
pop
popa
sbb
mov
repnz
xor
cmps
and
sbb
sbb
or
and
add
ret
into
dec
xor
test
pusha
stc
inc
scas
and
cmp
mov
pop
aam
rcl
jbe
fimul
adc
dec
out
xor
inc
outs
push
jae
add
ja
loope
push
push
(bad)
dec
sub
adc
nop
je
dec
dec
xor
mov
jo
adc
hlt
test
call
add
mov
push
mov
in
xchg
or
jecxz
dec
out
popw
or
xchg
dec
int3
repnz
imul
(bad)
mov
jg
mov
scas
add
in
loopne
jmp
shl
not
mov
jmp
add
add
mov
pop
mov
mov
movs
pop
push
push
mov
xchg
dec
adc
adc
je
or
xchg
das
push
icebp
dec
jae
and
xlat
cdq
or
stc
aam
jmp
aaa
and
sub
movs
jmp
jl
mov
stos
mov
and
fistp
jecxz
movs
dec
mov
xor
into
push
mov
retf
dec
push
jae
xor
sahf
bound
(bad)
or
and
ins
sbb
rcl
pop
popf
jne
push
retf
outs
(bad)
xchg
push
or
adc
xor
xor
xchg
daa
push
mov
or
ins
sub
nop
cmp
sar
xchg
nop
xchg
imul
sub
iret
dec
stos
add
inc
mov
sbb
mov
cmp
mov
(bad)
mov
js
lods
xchg
sbb
fcomp
mov
in
(bad)
enter
or
les
lahf
call
int3
in
ss
cmp
daa
or
repz
test
imul
push
sub
mov
and
sar
jecxz
adc
or
add
aad
lods
mov
ins
retf
xor
or
xor
push
jl
mov
sti
(bad)
(bad)
icebp
jmp
mov
push
xchg
sub
mov
push
sub
or
int
mov
int3
fld
push
sbb
lock
pop
push
daa
jae
fucomip
loope
jb
add
pop
cmps
into
clc
in
(bad)
jb
int3
(bad)
clc
pop
or
scas
(bad)
test
dec
stc
mov
jne
xor
in
int3
aas
fcmovne
jp
iret
outs
popa
pop
pop
jnp
pop
sbb
mov
jmp
pop
push
dec
in
cdq
adc
dec
push
(bad)
ss
dec
or
repz
iret
pop
test
imul
sti
(bad)
jno
out
iret
and
mov
fsub
sub
or
pop
mov
arpl
xor
inc
jae
dec
pusha
les
adc
mov
je
add
sbb
mov
(bad)
dec
ret
test
mov
daa
inc
lods
les
stos
sub
int3
movs
cmp
addr16
push
push
int3
(bad)
loope
pop
push
ss
mov
pop
cmp
or
jo
in
sub
rcl
(bad)
pop
mov
iret
lock
cdq
add
inc
(bad)
dec
mov
add
dec
cdq
inc
stc
(bad)
mov
sbb
int3
jge
and
jo
clc
mov
fcomip
fisttp
aad
mov
(bad)
jo
sub
or
pop
mov
call
int3
movs
hlt
add
dec
mov
sti
lock
add
or
cmp
cli
stos
(bad)
and
popf
fwait
xchg
mov
ss
sbb
push
mov
push
inc
fwait
mov
cmps
ins
es
fidiv
(bad)
aad
fdivr
popa
sti
(bad)
fwait
ds
sti
hlt
int3
popa
add
mov
retf
mov
pop
jg
shl
and
int
lds
xor
(bad)
jns
dec
fcomp
(bad)
gs
dec
fdiv
dec
xor
jge
push
add
nop
xchg
outs
test
add
fwait
out
xchg
loop
jmp
dec
mov
jns
xchg
sahf
int3
adc
std
jno
ss
and
in
std
rcr
fwait
mov
ror
mov
xor
lods
xor
outs
mov
retf
or
popa
adc
popa
scas
cmp
push
push
push
ds
push
mov
aas
ret
popa
in
or
mov
lock
and
in
or
or
pop
pop
and
jne
(bad)
pop
mov
sbb
cs
xor
mov
cli
adc
sub
int3
icebp
pop
cdq
push
and
ins
mov
push
int
jecxz
(bad)
das
pushf
xor
ss
and
in
outs
into
and
(bad)
xchg
jbe
dec
shl
bound
rol
shr
mov
es
jp
pop
push
pop
sahf
ret
shl
jnp
mov
jbe
pop
pop
push
cs
icebp
cwde
push
or
iret
dec
jg
mov
pusha
push
les
cmps
lds
retf
frstor
popf
mov
in
dec
sbb
mov
and
sar
scas
sbb
ret
mov
gs
mov
in
mov
shl
retf
lock
push
(bad)
sub
mov
jg
inc
jnp
ret
scas
and
fistp
and
cmp
dec
mov
xchg
and
pop
jns
popa
sub
mov
(bad)
lods
mov
and
es
out
add
outs
jno
lock
je
sbb
mov
jo
or
cmp
imul
sbb
sbb
adc
push
xchg
aas
aad
xchg
int3
je
out
popa
adc
jp
inc
and
xor
test
(bad)
adc
test
loop
repnz
adc
cmc
(bad)
fcomip
inc
jecxz
xlat
pop
mov
xor
fisttp
aaa
call
xor
pushf
mov
rcl
call
leave
test
fldcw
in
adc
loopne
stc
(bad)
dec
jge
dec
fild
ret
int3
out
or
mov
sbb
retf
sub
mov
push
fwait
inc
fmul
mov
mov
retf
dec
xchg
je
rcl
mov
and
addr16
jne
sbb
xlat
aam
dec
(bad)
jae
and
jbe
mov
adc
(bad)
push
arpl
xlat
icebp
pop
sbb
mov
push
pop
retf
sub
xchg
push
movs
es
sbb
mov
sbb
test
mov
nop
rcr
aaa
mov
dec
pusha
jge
mov
scas
push
push
arpl
leave
pop
push
mov
sbb
pop
push
ret
aam
sbb
js
lds
xor
xchg
mov
pushf
shr
out
pop
jno
pop
jmp
xor
daa
sub
mov
inc
adc
out
int3
and
pop
aad
shl
xor
pop
mov
mov
cmp
xor
sub
push
daa
rcr
cmp
shl
xchg
scas
inc
loop
dec
mov
dec
adc
adc
scas
pop
pushf
xor
add
lods
ss
mov
scas
mov
and
pop
int3
push
aas
cmc
pusha
cli
pop
(bad)
dec
mov
and
cwde
loope
adc
push
ja
inc
push
push
icebp
mov
and
jmp
iret
mov
imul
push
lahf
jo
mov
ja
cs
cmp
jmp
pop
int
pop
and
xor
xacquire
pop
inc
add
lea
adc
leave
push
jl
mov
daa
dec
mov
scas
(bad)
xor
cwde
test
lahf
push
(bad)
adc
xchg
fisttp
mov
in
add
aam
and
scas
imul
mov
inc
and
xor
test
cmp
iret
and
aaa
mov
(bad)
inc
movs
push
popf
dec
adc
sbb
lods
push
xor
arpl
ins
jae
inc
xor
sub
ins
cli
movs
je
mov
shr
hlt
mov
cmp
jns
inc
pop
aam
cmps
pushf
xchg
or
mov
jns
push
int3
or
scas
mov
(bad)
movlps
iret
out
inc
inc
loop
push
add
dec
fst
pop
test
pop
xchg
fadd
lock
or
aaa
jp
ret
mov
leave
add
loop
mov
mov
push
mov
adc
pop
daa
xchg
push
lahf
lds
jmp
pushf
iret
mov
daa
cmp
cmc
jmp
mov
inc
cmp
je
sub
mov
cmp
(bad)
jbe
sahf
xor
inc
fnstcw
sbb
loopne
xchg
add
fbld
push
mov
cmp
jno
jge
nop
mov
cmps
pop
jnp
frstor
inc
cwde
xchg
shl
cdq
arpl
push
call
ss
inc
pop
adc
mov
pop
rcl
inc
std
pop
xor
ja
sub
rcl
and
push
push
or
das
xor
pop
adc
pushf
inc
in
push
dec
jl
ins
sub
sbb
ror
pop
and
iret
jl
mov
xchg
inc
bound
cld
mov
cmp
jb
pop
fistp
sbb
cld
jmp
imul
pusha
and
and
pop
or
ins
jl
mov
iret
push
test
mov
cmp
jmp
clc
sar
pop
mov
iret
push
mov
dec
sub
cmp
repnz
cs
pop
aad
bound
add
cmp
mov
or
retf
test
xor
jl
fistp
and
aad
outs
adc
jo
outs
loop
inc
rcl
mov
into
and
enter
ins
adc
and
lods
jmp
arpl
mov
or
xchg
mov
push
xchg
lods
mov
inc
adc
clc
test
push
pop
xchg
mov
fwait
or
bound
cdq
sub
in
cmp
cmp
fistp
jbe
mov
jp
jns
inc
or
int
scas
stos
lahf
cwde
retf
lock
ja
arpl
dec
inc
inc
adc
dec
mov
sub
jmp
(bad)
(bad)
and
and
jl
add
sub
loope
test
inc
outs
and
fisttp
xor
mov
ja
cld
jl
gs
push
push
push
pop
jns
mov
mov
jne
rcl
xor
jmp
add
std
mov
and
add
mov
inc
mov
mov
sub
and
nop
mov
outs
les
inc
lds
mov
ss
jbe
mov
(bad)
mov
gs
dec
test
outs
loop
dec
inc
mov
adc
mov
jne
repz
rcl
mov
or
loope
inc
cmp
dec
dec
es
cmp
adc
xor
retf
int3
add
jecxz
sahf
leave
pop
(bad)
loop
shr
inc
inc
jmp
rcr
mov
push
test
xor
xchg
push
mov
add
cmp
jno
ins
xchg
jg
aam
fst
std
movs
pop
jge
dec
xchg
fdiv
ss
lahf
or
adc
cdq
push
cwde
mov
fstp
call
(bad)
loopne
xor
clc
xlat
sbb
cld
push
pop
fwait
enter
and
ret
mov
adc
sbb
and
dec
jmp
sar
fist
adc
sub
add
loop
push
xchg
mov
pushf
xchg
jg
jno
ss
mov
lahf
dec
ud2
push
ret
stos
ins
sbb
dec
mov
je
fcom
(bad)
sub
fbstp
pop
push
test
xchg
js
arpl
(bad)
cli
int3
ins
adc
adc
pop
jb
lods
(bad)
(bad)
icebp
scas
jo
mov
jl
jl
xchg
pop
and
mov
scas
fidiv
repnz
lock
dec
fcmovnb
sub
push
adc
call
bound
pushf
jbe
push
sbb
cmp
retf
push
iret
iret
mov
test
aas
cmps
dec
push
test
mov
adc
pop
xchg
pop
add
cmp
cmp
pop
mov
sbb
push
pop
cmps
es
mov
mov
push
lds
and
mov
pop
js
push
pusha
lods
sub
les
imul
jecxz
repnz
loop
push
loop
xchg
add
mov
inc
add
jl
lock
fisub
idiv
outs
scas
ins
sbb
aam
inc
stos
push
rcr
in
pop
xor
inc
inc
je
adc
cli
movs
xor
aas
jne
ret
sub
gs
xor
mov
sbb
cmp
aaa
and
lock
xchg
icebp
xchg
mov
aam
cmp
jnp
jo
mov
ja
push
adc
aas
aaa
add
xor
sar
mov
sahf
xchg
enter
xor
cmc
sbb
loope
mov
test
mov
sub
cmp
xor
(bad)
sets
mov
ret
or
ins
jle
sub
dec
inc
loope
iret
push
sub
inc
add
cmc
stos
int3
popa
jbe
adc
test
pushf
pop
rcl
jecxz
out
icebp
fcomp
cmc
mov
fnstcw
xor
rcr
push
rcl
and
xor
cmp
(bad)
jmp
repz
into
sub
add
or
or
inc
pop
dec
rcl
test
and
stc
cmp
and
std
add
dec
lahf
rcl
jbe
popa
mov
fidivr
mov
dec
dec
pop
cwde
mov
pop
lock
cmps
aas
jno
dec
test
bound
mov
retf
aas
rcl
jmp
push
jae
imul
sahf
xor
jmp
movs
dec
cwde
pop
ror
aam
imul
sbb
adc
and
and
xchg
shr
(bad)
ds
xchg
jl
push
mov
loope
aad
sbb
or
or
or
fcomp
outs
add
lods
inc
dec
mov
cmp
xor
dec
sub
imul
retf
cdq
adc
mov
or
inc
retf
cdq
inc
push
test
sub
lods
js
into
ins
arpl
add
dec
push
inc
test
inc
dec
aaa
push
push
pop
pop
or
sbb
aas
dec
(bad)
jne
addr16
mov
movs
mov
arpl
rcl
dec
dec
mov
jecxz
and
add
xor
repnz
push
xchg
in
push
mov
cmps
dec
(bad)
cmp
cmp
out
mov
sub
inc
out
shl
mov
fnstenv
movs
ss
adc
data16
les
into
mov
int
adc
jge
mov
mov
push
push
inc
loopne
sbb
inc
int
push
(bad)
lods
sub
std
dec
lods
adc
jmp
or
hlt
cli
leave
hlt
out
dec
fwait
test
dec
aad
shr
sub
movs
cmp
int3
es
xchg
out
frstor
int
pop
sub
xlat
add
gs
(bad)
mov
leave
aaa
sahf
pusha
(bad)
and
jo
outs
loope
cld
sti
mov
movs
mov
pusha
cmp
int3
std
mov
jp
jns
mov
inc
xchg
lds
(bad)
pop
add
pop
scas
xchg
push
xor
aas
adc
data16
pop
in
jecxz
and
add
out
xchg
xchg
add
lds
xchg
jl
lods
retf
adc
or
ret
xchg
and
jns
xchg
or
pop
adc
rcl
in
pop
popf
sbb
sub
or
xor
mov
fadd
stos
mov
jno
adc
push
es
inc
ss
pop
ror
shl
sbb
mov
xor
jmp
jg
and
add
jmp
xchg
rcr
(bad)
retf
sub
sbb
sub
lea
sub
ins
(bad)
ins
pusha
mov
imul
adc
pop
jmp
lds
jecxz
int
xchg
rol
and
sub
lds
lods
add
mov
mov
das
sbb
and
add
in
mov
cmp
push
push
mov
sub
enter
jno
stos
mov
outs
int
xor
iret
lds
add
adc
je
xor
movs
data16
jmp
outs
sub
cmp
std
mov
stos
jle
mov
mov
es
fdivr
repnz
dec
fistp
push
daa
retf
add
add
xchg
or
mov
adc
sbb
inc
sar
aas
sub
cs
sti
inc
iret
inc
mov
or
and
or
out
fistp
jo
out
add
xchg
ins
fmul
pop
(bad)
xor
pop
in
xchg
cmp
mov
push
xchg
das
mov
push
js
inc
mov
(bad)
leave
lods
push
push
mov
movs
inc
mov
xor
hlt
outs
or
call
inc
lods
in
cmp
dec
inc
ins
hlt
out
ja
xchg
xchg
push
test
dec
out
fs
sbb
cdq
jb
push
in
or
xor
lss
or
xor
xchg
jg
pushf
add
xchg
mov
test
js
lock
xor
in
movs
sahf
bound
xchg
push
jnp
cmp
imul
xor
out
or
push
mov
fucomp
fs
inc
sub
dec
(bad)
int3
mov
adc
or
(bad)
mov
ss
es
lods
in
popf
xchg
pusha
out
jg
xlat
jp
or
lahf
sahf
pop
add
loope
retf
pop
ja
(bad)
mov
pop
adc
xor
dec
sub
mov
adc
jmp
cwde
fcom
mov
in
lea
sub
and
mov
push
arpl
lock
jecxz
mov
xor
enter
fiadd
adc
add
lea
dec
in
or
imul
jl
ds
fs
(bad)
ss
call
cmp
xor
push
sub
xor
push
pop
(bad)
mov
push
adc
xor
cdq
xchg
movs
sti
loopne
mov
ss
mov
repnz
mov
mov
add
fcos
(bad)
jnp
(bad)
dec
in
mov
outs
jmp
mov
in
dec
xchg
and
mov
jnp
dec
rep
test
mov
and
iret
bound
xlat
xor
xchg
mov
xchg
div
fwait
arpl
cdq
xchg
cmp
data16
jo
lods
in
mov
loopne
test
repnz
scas
ins
ins
pop
mov
xchg
sub
leave
cmps
fimul
mov
cs
cmp
xor
pop
jge
jle
in
jmp
and
jno
test
jbe
push
sbb
mov
stos
cmp
retf
sar
add
sub
jnp
pusha
imul
jg
pop
push
push
add
jp
ins
cmc
and
aad
pop
dec
push
js
xchg
lds
cli
call
jnp
ins
mov
icebp
aam
jecxz
sbb
(bad)
mov
adc
xchg
xchg
dec
cdq
pop
aas
sub
mov
adc
lock
jb
cmp
icebp
arpl
iret
xchg
cld
mov
int
inc
or
mov
stos
adc
push
mov
pop
nop
mov
sub
and
inc
pop
call
mov
outs
ficom
sahf
push
fmul
xchg
cmps
enter
retf
fstp
sbb
pop
jecxz
mov
mov
div
ret
popf
lea
lock
mov
sub
cmp
das
ins
mov
add
pusha
sti
clc
ins
pop
lock
fs
(bad)
pop
sbb
and
mov
push
mov
xor
jns
push
xchg
sti
xor
rcl
(bad)
sub
out
mov
jmp
mov
cmps
sub
push
fld
dec
neg
out
std
lock
push
inc
fadd
or
ss
jl
daa
adc
imul
call
add
aaa
aaa
fs
xor
or
adc
adc
dec
movs
fsub
push
dec
pop
aaa
outs
adc
fst
iret
loope
loop
pop
sbb
xor
int3
xor
jp
xor
push
or
pop
add
ss
mov
popf
sbb
hlt
cmp
push
or
cmp
or
jecxz
and
mov
imul
out
xor
add
add
das
retf
cmp
jne
xor
in
add
aaa
jb
popf
je
outs
jg
jns
jmp
pop
test
loop
adc
push
push
mov
ins
fsubr
inc
xchg
inc
fstp
add
jae
call
inc
out
call
adc
cmps
mov
out
push
dec
outs
arpl
mov
mov
pop
or
xor
xchg
popf
sub
loop
popf
or
cmp
mov
test
xor
jmp
(bad)
pusha
mov
mov
ds
mov
pop
data16
xchg
pop
pop
mov
or
sti
mov
out
into
sti
movs
ja
mov
aaa
xchg
pop
xchg
(bad)
xchg
add
cld
test
mov
and
pop
pushf
mov
push
test
inc
inc
lea
and
shr
fsubr
imul
arpl
lods
adc
stc
pushf
mov
or
push
fidivr
xor
dec
or
mov
(bad)
cmp
mov
jb
sub
cmp
test
leave
movs
les
inc
sti
dec
add
jnp
mov
imul
and
ja
adc
rcr
push
cmp
adc
ds
jbe
pop
stc
push
fnsave
sub
addr16
int
push
into
out
into
rcr
jbe
lods
mov
push
push
xchg
push
mov
xchg
mov
inc
pop
inc
loopne
outs
dec
movs
repz
push
sahf
ffreep
fstp
dec
test
retf
(bad)
adc
retf
test
repz
out
in
sbb
inc
dec
xchg
popa
dec
add
mov
pop
test
sub
jo
imul
(bad)
sub
(bad)
pop
adc
cmc
ret
sbb
(bad)
pushf
out
mov
and
jnp
adc
cs
and
std
sub
lods
or
sbb
mov
cmp
inc
xor
xor
data16
stos
out
jnp
(bad)
aam
push
stc
or
or
pop
(bad)
mov
jmp
imul
fs
int
frstor
or
jns
xchg
and
(bad)
mov
mov
xchg
dec
or
mov
test
add
push
cli
jb
outs
sti
imul
add
inc
aad
pop
das
add
dec
xchg
sub
mov
inc
ja
fcmovne
inc
mov
jl
enter
pop
call
mov
mov
rcr
les
sbb
in
xchg
sub
in
lea
popa
fwait
jne
xchg
push
jge
in
adc
push
aas
cmp
cmps
mov
sbb
adc
cmps
xchg
sub
jp
lods
add
daa
adc
cli
mov
popa
sbb
jne
cli
inc
adc
mov
repz
adc
inc
sbb
sbb
adc
sub
jmp
xor
cmp
(bad)
push
push
jne
sub
pop
mov
scas
ror
pop
ss
pusha
push
test
push
out
xchg
lds
stos
xchg
dec
(bad)
test
daa
jmp
adc
dec
sbb
adc
cs
imul
mov
adc
dec
das
adc
mov
mov
(bad)
cli
jo
into
lock
xor
push
inc
cmp
jg
xchg
out
xor
or
sti
(bad)
and
inc
ret
jge
and
out
sbb
fisttp
popa
iret
out
dec
cwde
and
xchg
jb
popf
jns
iret
dec
sbb
jae
loop
mov
das
jp
push
and
and
xchg
pop
jle
sbb
(bad)
test
push
mov
out
jg
pop
push
mov
les
mov
popa
mov
stos
adc
or
jne
mov
std
cmc
jnp
sbb
dec
jle
jns
dec
std
xchg
out
mov
push
imul
xchg
repz
xchg
dec
outs
xor
in
test
retf
lods
add
pop
jg
dec
fstp
xor
dec
leave
lods
sti
shl
jbe
pushf
cmp
mov
ins
js
push
jbe
imul
adc
mov
dec
imul
ins
inc
push
xor
(bad)
cmc
jns
(bad)
stc
imul
repz
(bad)
fcom
scas
call
or
jmp
in
and
into
push
dec
mov
mov
sbb
add
adc
(bad)
pop
in
pop
and
mov
scas
ins
cmps
xchg
movs
cmc
cmp
sbb
xchg
call
jne
cld
shl
out
jb
inc
dec
ret
xchg
mov
jge
test
cmps
adc
icebp
fcomp
xchg
adc
rcl
sti
xchg
mov
pop
scas
in
add
fs
inc
sub
call
rcr
fnstsw
into
and
jo
and
loop
jecxz
imul
ret
leave
aad
in
mov
arpl
sbb
lahf
mov
cmova
test
inc
inc
sub
adc
ins
or
ins
mov
xchg
push
pop
xor
loopne
adc
in
xchg
sbb
add
inc
sbb
cmp
and
or
xor
lods
clc
mov
mov
mov
or
test
mov
push
imul
cmps
out
or
xchg
neg
inc
cwde
xor
cmc
bnd
jecxz
(bad)
(bad)
out
in
pop
xchg
aas
setns
xchg
and
adc
inc
cdq
in
cmc
sbb
je
outs
shl
mov
mov
pop
jns
mov
mov
adc
ins
xchg
pop
out
out
scas
out
aad
xor
pop
sbb
fild
inc
push
pop
cmps
push
jmp
in
inc
or
pop
push
and
mov
push
jle
js
or
push
sub
fild
leave
out
ds
and
adc
xor
ss
sub
(bad)
cld
push
push
cmp
pop
add
in
mov
add
cmp
mov
loope
mov
push
and
ins
push
pop
aas
add
setne
cmp
popa
rol
or
xor
sub
repz
or
inc
mov
iret
pop
xchg
mov
ins
out
mov
pop
mov
inc
iret
or
jnp
test
idiv
cwde
pshufw
call
mov
pop
test
fucomip
add
loop
xchg
xor
inc
lock
leave
ins
mov
les
pop
pop
xor
std
xchg
xchg
sti
inc
adc
sub
or
enter
call
cmps
mov
jle
ins
dec
aaa
xor
jbe
std
jo
xor
inc
rcl
mov
call
dec
mov
xor
and
js
pop
out
(bad)
icebp
int3
in
rcl
loopne
scas
mov
sub
pop
mov
outs
loope
pop
adc
lea
mov
and
lock
inc
mov
push
popw
inc
(bad)
movs
mul
fbld
cmc
mov
pushf
add
jae
mov
push
cld
icebp
push
movs
jmp
xchg
cmp
test
adc
dec
data16
(bad)
fld
and
mov
scas
sbb
pop
cwde
daa
bound
push
sub
jbe
push
sbb
mov
adc
mov
mov
or
into
dec
add
jmp
dec
ret
mov
sbb
stc
sub
jmp
scas
add
xchg
xchg
pop
les
mov
retf
sbb
(bad)
outs
adc
rcr
xchg
xchg
rcl
xchg
arpl
imul
jno
out
and
xor
and
icebp
push
adc
loope
mov
sub
loop
cld
cmp
sbb
mov
(bad)
into
mov
sub
fadd
mov
test
push
adc
adc
mov
inc
int
xchg
inc
cli
ds
pop
aaa
out
cwde
sbb
xchg
ins
mov
movs
mov
push
scas
in
out
ins
data16
push
retf
fld
jnp
push
dec
or
add
push
pop
mov
jle
mov
pop
jo
jecxz
dec
mov
popa
sub
call
call
mov
pop
push
aam
inc
mov
cld
or
(bad)
loopne
and
and
cmp
and
out
nop
lahf
pop
fdiv
push
xor
lds
push
(bad)
stos
ja
hlt
mov
jg
push
push
xor
(bad)
mov
lods
stos
leave
push
and
mov
mov
(bad)
dec
jns
aad
lahf
enter
add
mov
repnz
stos
hlt
ds
lods
xor
or
fwait
mov
cmc
push
dec
or
sub
fnstenv
adc
adc
jo
pop
add
push
xor
pop
(bad)
jno
xchg
xchg
test
test
jae
retf
jne
push
repnz
pop
mov
cdq
cmp
inc
shl
cld
inc
push
push
fisub
pop
aam
jle
dec
clc
sub
mov
call
jg
dec
sub
test
call
pop
cli
outs
cdq
inc
dec
sub
jmp
test
or
xchg
popa
mov
mov
scas
sub
lods
pop
rcr
jno
xor
fstp
in
mov
sti
mov
or
mov
daa
repnz
xchg
dec
scas
call
mov
mov
mov
sub
aam
sub
data16
or
ds
lods
push
stos
mov
pop
lahf
adc
cdq
icebp
add
loop
add
add
in
jp
das
adc
daa
mov
inc
dec
pushf
ret
mov
sub
jo
xchg
or
in
xor
sar
pop
ror
(bad)
and
dec
add
cmc
bound
shr
stc
add
pusha
enter
xchg
enter
adc
sub
leave
pop
mov
movs
clc
and
cmp
mov
dec
lods
(bad)
loope
jae
jp
cmp
call
or
mov
(bad)
inc
std
adc
jle
xor
xchg
fisub
sub
cmp
mov
sub
ficom
rcl
loopne
cmps
push
dec
div
in
cmc
cdq
dec
test
lods
inc
in
push
aaa
test
adc
sbb
das
fist
dec
shr
jmp
push
stos
inc
daa
add
push
fcmovu
fadd
xchg
push
shl
cmp
dec
mov
(bad)
mov
das
push
jp
call
mov
mov
xchg
jb
jae
stos
bound
das
scas
cmp
leave
sbb
popf
into
loopne
pop
das
ins
mov
movs
mov
scas
ret
jb
(bad)
cmp
(bad)
in
fild
inc
fadd
(bad)
xchg
dec
call
imul
test
cmp
jmp
jecxz
jns
xor
hlt
jg
mov
xchg
not
mov
push
loopne
push
dec
std
mov
mov
das
xchg
test
pop
xor
and
mov
jp
iret
push
inc
push
sub
or
mov
stos
sbb
inc
mov
sbb
adc
adc
icebp
into
test
test
adc
xor
and
jns
fimul
lods
sub
loopne
xchg
out
sahf
loop
or
loope
(bad)
fidiv
cmp
test
sub
mov
or
dec
adc
or
jg
jmp
mov
fdiv
jg
clc
dec
push
iret
in
repz
push
push
cmps
lahf
das
ins
(bad)
or
adc
push
pop
add
or
mov
xor
push
xlat
sbb
ja
inc
sbb
int3
inc
mov
bound
cmp
fdivrp
test
js
or
(bad)
in
imul
inc
js
and
(bad)
mov
icebp
jmp
loopne
push
in
imul
xchg
ins
inc
mov
not
add
mov
test
mov
dec
retf
add
push
jl
into
sub
stc
push
cmp
add
stc
(bad)
rcr
inc
rcr
sbb
retf
sbb
add
jp
(bad)
std
sub
sub
lahf
push
xchg
daa
dec
les
enter
retf
inc
popf
push
scas
jg
aaa
fcom
or
xchg
hlt
les
enter
xchg
std
ret
clc
ja
or
push
mov
xor
xchg
ret
pop
sbb
ins
mov
daa
sbb
sbb
dec
cmc
mov
enter
or
xchg
mov
adc
sbb
cmp
mov
push
scas
sbb
pop
push
and
mov
outs
(bad)
pavgw
stos
loope
xchg
arpl
pop
cld
arpl
and
lods
dec
lds
pop
jecxz
shl
lock
loopne
out
or
imul
out
aam
mov
stos
or
in
test
fisub
jp
mov
into
jge
push
mov
mov
push
es
push
cmp
jno
popf
fwait
xchg
xchg
inc
popf
or
inc
cld
cwde
outs
(bad)
mov
cli
cwde
aad
(bad)
int
or
xor
scas
mov
and
fisub
mov
inc
repz
mov
or
mov
dec
adc
mov
sti
ins
mov
and
retf
out
mov
sbb
punpcklwd
cmc
mov
jge
push
mov
ins
jmp
mov
adc
bound
in
mov
out
clc
jnp
ds
sbb
and
jmp
jp
adc
sub
or
sbb
cdq
fmul
mov
dec
(bad)
out
xchg
stos
mov
test
push
in
dec
mov
movs
aaa
ret
lock
mov
sbb
mov
ds
jb
adc
sub
dec
jo
adc
hlt
sahf
dec
jne
movs
sahf
adc
xor
loopne
jmp
jmp
push
cmp
lea
mov
cmp
sub
and
ins
aaa
mov
lods
xor
xchg
mov
cld
mov
int3
xor
not
and
lds
pop
lds
xchg
out
jge
rol
fisubr
sbb
inc
mov
stos
xor
jns
mov
outs
shl
adc
push
mov
imul
popf
leave
ja
cmps
cmp
inc
push
dec
ret
xchg
test
dec
push
lock
icebp
xchg
test
hlt
cwde
pop
mov
and
js
popa
int3
inc
mov
adc
dec
jmp
mov
mov
arpl
js
sbb
mov
mov
popf
mov
movs
shr
cmc
mov
jo
jo
sbb
addr16
loope
sbb
out
loopne
sahf
dec
mov
shl
cli
jge
mov
arpl
mov
and
adc
daa
sub
scas
push
push
inc
in
mov
je
xchg
mov
jge
dec
ja
push
adc
xchg
xor
shl
inc
mov
push
in
mov
aad
int
pop
call
nop
sbb
jbe
pop
bound
cmps
xchg
stos
fistp
stc
mov
sub
(bad)
call
call
or
mov
pushf
jb
std
dec
pushw
mov
sbb
popa
lock
stc
outs
div
inc
dec
outs
shl
nop
or
out
loope
repnz
repnz
inc
mov
xor
in
test
jmp
xchg
cs
jecxz
retf
xor
jae
xor
jle
push
sub
and
in
call
cmp
inc
jg
push
xchg
imul
in
jl
pop
add
pop
jno
xchg
test
jge
xor
out
lahf
(bad)
fcom
inc
test
in
and
cmp
ins
or
sub
mov
mov
cmps
and
xor
push
movs
push
dec
xchg
imul
iret
mov
pop
inc
fs
jb
and
and
mov
sbb
inc
or
test
(bad)
mov
(bad)
mov
aaa
and
fdivr
ds
imul
aaa
mov
push
jns
cwde
xchg
dec
or
lock
imul
cdq
cdq
add
popf
mov
(bad)
push
push
xlat
(bad)
rcr
mov
repnz
xchg
mov
retf
js
push
mov
mov
outs
sti
int3
loope
pushf
mov
mov
aaa
idiv
sub
hlt
pop
jne
ss
(bad)
(bad)
ret
(bad)
in
out
loope
mov
add
add
lahf
sbb
mov
shr
mov
lahf
into
or
xchg
fidiv
cmps
addr16
loope
jecxz
mov
cmp
ds
pop
out
and
and
cmps
iret
pop
add
enter
repnz
mov
loopne
mov
adc
call
cmp
fxch
and
adc
sub
inc
inc
fs
inc
cwde
leave
push
iret
mov
pop
mov
inc
dec
cmps
mov
dec
call
jge
jne
lea
mov
aam
xor
push
std
pop
push
push
xlat
inc
or
adc
ficom
and
inc
pop
fstp
cli
xor
jp
cld
shl
aam
stos
mov
scas
cdq
mov
pushf
xchg
jl
adc
push
mov
push
shl
fidivr
cmc
test
mov
xchg
jg
xor
push
pop
ret
stc
jecxz
retf
adc
push
test
test
dec
inc
push
xor
cmp
sub
in
mov
inc
mov
aas
jmp
ror
pop
inc
pop
in
xchg
mov
pop
jnp
xor
out
and
lahf
idiv
int
mov
pusha
pop
js
mov
leave
in
repnz
into
outs
call
dec
mov
pop
ror
dec
inc
out
mov
gs
xchg
aam
or
fadd
mov
or
push
push
inc
inc
inc
call
sar
and
in
scas
adc
adc
out
push
push
shl
sbb
inc
dec
clc
and
pushf
lods
aas
or
mov
inc
test
loopne
xor
push
in
mov
dec
out
mov
scas
sbb
psadbw
icebp
sub
cmp
pop
mov
cmp
xchg
or
ja
hlt
mov
outs
jnp
lock
in
cmp
fdivr
add
cmp
xchg
(bad)
jno
cmp
xchg
into
cld
call
fsubr
sub
or
popf
push
xchg
fidivr
stc
pop
mov
add
loope
ja
or
sar
jg
jne
clc
mov
jl
loop
mov
hlt
inc
fwait
das
out
or
retf
xlat
stos
cmps
test
xchg
dec
cmp
fadd
xchg
ror
mov
repz
add
nop
mov
inc
pcmpeqb
or
xor
out
add
mov
jns
and
pop
and
pop
and
je
(bad)
jnp
mov
pop
jae
jg
out
cmp
pop
push
cmp
or
inc
daa
bound
add
add
sti
int
je
fst
fwait
cmp
das
repnz
(bad)
ss
sahf
loop
aam
dec
sbb
(bad)
inc
dec
lock
call
mov
xor
mov
jnp
enter
adc
jp
sahf
mov
jmp
jmp
fwait
push
push
xor
xchg
add
or
xchg
xor
shl
sub
adc
gs
mov
aam
inc
cmp
jmp
jb
das
mov
std
pop
pop
cmp
and
shl
jns
aad
je
mov
sub
xor
jne
loop
mov
popf
movs
dec
leave
fs
mov
add
mov
es
lods
and
clc
push
lds
jle
xor
outs
xchg
cmp
cmp
popa
dec
aas
stos
ja
and
push
mov
xchg
pcmpgtw
int
push
shl
nop
push
ins
pop
jb
call
mov
aam
adc
push
sub
sub
(bad)
cmps
jmp
pop
je
aam
data16
xor
out
cmp
dec
mov
in
fwait
mov
popa
clc
inc
mov
cmp
retf
shr
js
sub
mov
scas
jecxz
sbb
call
push
test
xchg
mov
dec
push
push
xor
adc
gs
adc
cmp
test
mov
pop
leave
mov
in
in
ficom
cmp
push
movs
(bad)
rcl
dec
xor
stc
popa
gs
xchg
add
mov
shl
ret
cld
jnp
fisub
cmp
fwait
jmp
xchg
shl
jge
les
nop
jle
xchg
ja
call
xchg
iret
add
adc
xor
movs
cmp
out
dec
je
sbb
int
fisttp
jb
dec
jmp
(bad)
into
or
js
adc
cmp
push
mov
cmps
sahf
mov
clc
adc
lahf
pushf
das
repnz
pop
adc
add
pop
add
int
dec
lods
push
cmp
std
add
not
mov
and
fst
(bad)
call
enter
nop
mov
sbb
loop
clc
mov
cli
inc
mov
mov
(bad)
(bad)
int3
inc
ds
scas
push
imul
call
out
jo
mov
aaa
imul
sbb
fnstenv
cdq
aas
ss
jp
neg
pop
mov
jmp
sbb
sub
aam
call
mov
and
or
adc
ins
out
and
sub
aam
loopne
mov
xor
enter
aam
jno
mov
(bad)
mul
sub
inc
jbe
xor
cmps
repnz
in
sub
lea
cmc
jno
test
pop
movs
imul
push
js
push
movs
jp
lds
or
pop
cmp
outs
fcomp
inc
adc
jecxz
sbb
call
daa
fs
dec
inc
scas
add
xchg
ins
or
je
call
hlt
in
mov
mov
shr
inc
popf
jbe
call
dec
fs
fsubr
inc
retf
gs
add
test
out
or
stc
add
pushf
hlt
pop
push
xchg
cmps
mov
rol
jno
xchg
or
jo
cmp
xlat
sbb
inc
inc
(bad)
inc
jle
outs
out
ja
dec
dec
sbb
sub
cld
mov
repnz
dec
in
nop
stos
int
inc
imul
cld
adc
call
pop
sub
ins
add
movs
dec
stos
inc
ja
mov
mov
xor
add
xchg
aam
outs
xchg
shl
mov
(bad)
ficom
cdq
mov
xchg
loop
cmps
movs
push
mov
adc
int
pop
mov
int3
adc
pop
xchg
mov
adc
adc
(bad)
iret
mov
lods
add
mov
(bad)
xlat
jle
div
dec
in
pop
mov
add
xchg
push
ficom
fcmovnu
inc
lea
mov
popf
icebp
enter
aas
les
ret
mov
inc
xor
(bad)
rcr
dec
xlat
dec
push
imul
xchg
or
mov
sti
clc
out
cld
jge
dec
push
lock
add
jbe
mov
test
or
jmp
in
cmps
mov
and
dec
fwait
xchg
dec
cmp
push
repz
mov
or
call
cmp
or
ret
xor
mov
mov
sti
push
mov
movs
push
ss
scas
add
mov
push
fdiv
xchg
ins
int3
push
cmc
xor
and
fstp
icebp
sub
pop
ss
pusha
imul
and
mov
jns
iret
mov
inc
int
movs
popf
xchg
ret
repz
jg
repnz
xor
out
jl
dec
pop
das
push
sbb
push
push
push
sti
scas
test
xchg
popf
sub
(bad)
(bad)
fwait
sbb
push
xchg
mov
add
test
cdq
jmp
pop
xor
bound
test
lea
and
add
or
shl
push
jnp
push
test
pop
sbb
pop
sbb
lock
popf
and
das
sti
jns
sub
inc
mov
test
bound
sbb
test
xlat
xchg
inc
test
loope
das
stc
dec
test
jbe
push
xor
pop
sbb
add
jns
pop
(bad)
mov
sbb
mov
mov
(bad)
jae
xchg
inc
push
ja
ins
xchg
fadd
inc
pop
(bad)
(bad)
cmc
or
arpl
xor
push
mov
loop
pusha
jle
mov
jmp
jbe
inc
loopne
push
pop
outs
xlat
bound
jge
repz
int
pop
push
mov
and
out
aaa
bound
ds
movs
out
adc
out
sti
inc
(bad)
(bad)
mov
push
sub
inc
imul
lea
push
je
xchg
ret
inc
fidivr
mov
mov
mov
cmp
cs
push
lds
test
pop
jbe
pusha
hlt
xchg
les
fs
loop
pop
outs
sub
int
out
or
push
test
jecxz
dec
and
cwde
shl
sar
xor
mov
in
into
xor
daa
repz
mov
jnp
jg
das
jl
mov
in
out
xchg
or
pop
nop
clc
fwait
inc
adc
push
out
ss
sub
ficom
(bad)
ss
setle
lods
jecxz
into
jbe
test
in
dec
std
add
not
outs
mov
sti
test
push
inc
inc
inc
cmp
sar
lahf
dec
cwde
pop
mov
popf
fsub
jnp
sub
pop
and
lea
and
lods
xlat
adc
hlt
loope
cli
sti
inc
ret
retf
stos
outs
inc
and
and
dec
push
daa
jnp
mov
sbb
xor
cmp
lds
adc
retf
sbb
sar
push
call
mov
inc
xchg
jo
mov
push
inc
in
add
jmp
lock
daa
cmp
fidiv
jmp
sub
jno
(bad)
fnstenv
xlat
xchg
push
mov
mov
push
mov
mov
(bad)
mov
shl
add
fstp
xlat
push
aam
clc
vpmacssdd
mov
xor
mov
jb
test
pusha
xchg
push
jmp
pusha
jbe
cmp
xor
or
cmp
adc
xor
shl
and
pusha
fild
add
or
leave
repz
push
and
ins
repz
rcr
mul
jae
lods
add
or
call
not
fcmovnu
out
sbb
fldpi
cmps
pop
inc
adc
test
push
out
mov
mov
lds
lods
cld
lods
fnsave
popa
popa
mov
sahf
jg
lea
mov
out
in
in
icebp
jns
jnp
add
pop
mov
adc
fs
lods
ficomp
scas
mov
mov
add
or
into
jecxz
adc
mov
arpl
inc
xor
add
sbb
test
popf
cmp
movs
in
pop
xchg
and
(bad)
pop
mov
arpl
mov
add
mov
xor
ss
cmp
pop
adc
test
push
mov
jae
adc
mov
fst
icebp
(bad)
lds
shl
pushf
xor
iret
imul
pop
mov
out
(bad)
sub
cmp
pushf
repnz
int3
sbb
and
retf
xchg
(bad)
lahf
sbb
and
dec
adc
push
jns
pop
pop
xchg
cmp
pop
call
call
or
add
imul
fadd
in
stc
out
and
outs
sbb
xchg
shr
add
add
fndisi(8087
xchg
cmc
push
push
adc
inc
mov
xchg
into
cli
movs
sbb
dec
and
push
inc
imul
call
(bad)
mov
and
fwait
sub
xor
add
jecxz
enter
in
call
aas
mov
int3
add
pop
jmp
add
in
inc
adc
lods
divps
sub
pop
inc
int3
push
dec
cli
inc
mov
mov
push
sbb
aam
mov
mov
aad
lea
fild
les
jae
jl
addr16
mov
fwait
xchg
in
aad
xor
cmc
call
xor
jmp
pop
(bad)
mov
xchg
xchg
add
pop
movs
gs
int
jle
jb
stos
(bad)
je
in
xchg
fmul
mov
xchg
bound
mov
(bad)
xor
inc
dec
jno
arpl
dec
in
in
mov
sub
inc
fwait
outs
cmp
dec
add
js
xor
add
call
pop
or
outs
mov
daa
dec
push
inc
sbb
int3
adc
ret
in
lock
ret
retf
lods
enter
mov
dec
aam
stc
or
dec
dec
dec
cmp
cdq
stos
mov
jne
dec
jmp
cdq
push
ror
imul
test
sub
xor
rol
sar
jo
mov
(bad)
test
popf
push
(bad)
(bad)
dec
data16
stos
xchg
inc
cwde
jl
sahf
in
jnp
fsub
test
xor
jns
stos
scas
add
int3
aad
jbe
xor
ins
mov
outs
ret
add
dec
pop
xchg
mov
jmp
pushf
loopne
in
sbb
jns
jns
pop
cs
stc
cld
mov
pop
pop
repnz
ret
xchg
call
fs
and
inc
movs
pop
push
cs
xchg
sub
daa
cmp
cmp
rcl
jne
jg
adc
and
pop
std
ins
sbb
jecxz
mov
das
shl
jecxz
adc
mov
ds
repnz
mov
ds
mov
loop
cmp
(bad)
sahf
xchg
out
dec
fild
pop
jnp
xor
mov
(bad)
mov
leave
std
cs
mov
mov
sbb
xor
lahf
or
and
mov
push
inc
mov
call
sub
lods
fsubr
ins
enter
nop
jp
js
mov
scas
shl
gs
iret
outs
pop
and
in
pop
adc
or
sub
fsub
mov
mov
mov
popa
cmc
ret
cmps
pop
xor
jle
ret
dec
or
jbe
das
push
xchg
add
sbb
repnz
fldcw
int3
(bad)
xor
movs
push
mov
std
test
adc
mov
add
aaa
mov
sbb
imul
push
sbb
fstp
sbb
mov
add
aad
add
imul
cmps
push
int
daa
xor
mov
pop
jmp
and
mov
(bad)
push
sub
jnp
push
aaa
xor
push
icebp
and
into
sbb
pop
mov
out
test
test
repnz
fdivrp
add
jmp
dec
jecxz
adc
js
icebp
dec
outs
fstp
mov
add
out
mov
popf
mov
loopne
push
inc
nop
dec
push
or
mov
scas
std
pop
addr16
loopne
jo
cld
rcr
add
add
aad
je
push
mov
sub
stc
or
mov
jmp
cld
adc
into
push
rol
int
les
pop
adc
cmp
add
xlat
sub
scas
addr16
mov
in
aas
xchg
adc
cli
outs
mov
or
clc
push
pop
xchg
int3
pusha
rol
dec
xor
sar
add
inc
repnz
imul
outs
inc
cld
or
es
mov
dec
cdq
call
xor
ret
mov
dec
inc
loopne
add
add
cmc
shl
(bad)
cmp
jle
adc
std
fld
(bad)
mov
sbb
mov
add
into
xchg
mov
sub
dec
(bad)
pop
movs
leave
gs
cmp
mov
mov
cmp
(bad)
leave
repz
pusha
imul
sub
hlt
lods
push
aas
scas
mov
in
cmp
adc
mov
(bad)
icebp
pusha
pop
sahf
inc
and
cmps
push
in
or
sbb
pusha
addr16
xor
stc
xchg
pushf
push
int
or
repz
dec
retf
sbb
(bad)
mov
add
dec
outs
wbinvd
(bad)
(bad)
imul
mov
cdq
jns
cwde
int3
mov
test
pop
adc
pop
mov
aas
icebp
inc
pop
dec
(bad)
dec
mov
dec
pop
sbb
fisubr
jae
(bad)
jmp
jecxz
sub
push
shl
mov
mov
jge
push
add
xlat
in
xchg
add
push
sahf
jb
pushf
std
mov
add
outs
or
(bad)
movs
mov
jae
call
jae
push
icebp
xrelease
cli
retf
inc
pop
xchg
fs
sbb
xchg
cdq
test
xor
shr
lahf
retf
jge
jle
out
stc
lds
pop
mov
xchg
stos
mov
pop
sbb
sub
sahf
(bad)
nop
ss
and
cmps
loopne
push
or
movs
bound
(bad)
push
(bad)
sub
pushf
gs
cmp
into
jmp
xchg
aam
jne
push
aas
sbb
jo
ror
mov
jg
(bad)
add
dec
hlt
sub
xchg
mov
es
je
out
pop
das
dec
cmp
mov
stos
xor
scas
inc
pushf
lahf
xor
xchg
retf
in
push
ffreep
inc
jmp
fiadd
cli
and
ss
and
movs
popf
cmp
jmp
rol
out
mov
jecxz
(bad)
fisttp
test
cmc
movs
ja
sbb
xchg
ja
pop
push
inc
pop
jle
cmps
xlat
int
out
enter
sbb
es
lods
ja
stc
outs
test
push
or
jns
or
call
fbstp
cmp
push
pop
(bad)
ficomp
test
je
fst
test
inc
cld
pop
push
xchg
shl
(bad)
and
cwde
in
xchg
and
pop
in
cmp
ja
ss
push
outs
movs
and
cli
rcr
xor
xchg
add
clc
test
stos
fucomip
fisub
mov
cld
mov
mov
(bad)
xor
sti
repnz
jp
xchg
mov
pop
add
pop
jae
shl
data16
aaa
in
push
movs
sbb
sbb
xor
dec
mov
(bad)
movs
mov
sar
jae
out
dec
cs
addr16
mov
adc
cld
aad
pushf
push
mov
nop
repnz
adc
sbb
in
inc
mov
and
jmp
sbb
leave
enter
sbb
sahf
retf
mov
ror
ins
lahf
pop
mov
popf
mov
cli
cmps
mov
mov
dec
mov
stos
add
dec
aad
dec
mov
je
data16
ins
mov
imul
xor
push
add
stc
mov
es
xchg
shr
loopne
or
mov
xor
cld
cmp
mov
clc
sub
push
cld
div
(bad)
jae
push
in
call
and
loope
and
cmc
movs
leave
mov
sbb
cs
imul
cs
jge
inc
ds
ror
rcr
mov
mov
adc
lea
pop
push
pop
addr16
test
jnp
mov
xchg
rcr
and
push
mov
mov
fmul
loopne
push
xor
sbb
inc
out
adc
(bad)
ja
sti
cmp
pop
in
cmp
call
inc
xor
sbb
fdivp
pop
dec
pop
enter
sub
je
push
dec
cmp
push
(bad)
std
ret
fstp
jmp
lods
add
or
mov
xor
or
ins
mov
inc
sbb
aas
dec
stos
or
pop
or
mov
aas
imul
mov
fcomp
ret
xor
lds
out
rcl
push
pushf
mov
xor
pushf
dec
stos
in
popf
(bad)
jmp
or
enter
sub
sahf
call
inc
sbb
mov
xchg
push
add
not
mul
adc
push
cmc
pop
mov
push
int3
aad
xor
xchg
dec
retf
pop
outs
(bad)
mov
clc
xchg
int
jg
cs
mov
dec
imul
or
lods
stos
cmp
jecxz
add
pop
out
retf
xlat
adc
jl
call
xlat
mov
adc
cld
sahf
rcr
mov
ror
sbb
aaa
push
fwait
call
jno
in
loope
dec
mov
mov
daa
enter
fcmovnb
movs
pop
lds
adc
jno
ins
(bad)
or
cwde
cld
jecxz
into
clc
adc
xlat
or
mov
jmp
sub
rol
ret
ret
retf
sbb
xchg
outs
push
xor
ins
cmp
mov
xchg
dec
sub
xor
mov
test
daa
into
je
movs
jnp
clc
rol
fcomp
fcomp
jo
jne
fmul
jecxz
xor
gs
xchg
rol
das
cmp
ins
sbb
out
je
retf
push
mov
cmp
js
fmul
daa
in
pop
adc
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
call
dec
add
add
