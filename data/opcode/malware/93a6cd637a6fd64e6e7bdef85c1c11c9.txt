add
push
add
add
add
add
add
add
add
add
add
add
mov
add
sbb
add
iret
xor
fiadd
fwait
dec
mov
rcl
xchg
rcr
popa
adc
pushf
jne
shr
sbb
jmp
pop
push
add
add
add
pop
add
and
add
sbb
add
sub
add
adc
and
add
add
add
out
ss
or
or
or
adc
or
add
es
add
add
push
push
pop
push
add
adc
add
add
add
and
add
sbb
add
xor
add
add
add
add
push
add
and
and
cs
or
or
add
or
add
or
add
es
add
add
push
push
pop
push
add
add
pop
add
sub
add
sbb
add
xor
add
add
add
add
in
add
or
and
and
add
adc
adc
add
adc
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
add
sbb
add
sub
add
add
and
and
fnstenv
inc
or
push
or
add
or
add
add
add
push
push
pop
push
add
adc
add
add
add
sbb
add
sbb
add
das
add
add
add
adc
and
add
pop
jbe
and
stos
add
or
dec
or
add
push
add
or
add
add
fiadd
add
push
pop
push
adc
add
add
add
add
sbb
add
and
add
pop
add
adc
and
add
add
pop
or
or
add
or
add
add
add
push
push
pop
push
adc
add
add
add
pop
add
sbb
add
add
add
add
adc
and
add
add
add
or
int
es
or
or
adc
adc
add
adc
add
fiadd
add
push
pop
push
add
add
add
pop
add
and
add
sbb
add
sub
add
or
add
add
movs
push
add
or
pop
push
or
es
ds
add
sldt
or
add
add
add
push
push
pop
push
adc
add
add
add
pop
add
sbb
add
sub
add
or
add
add
pop
add
and
popf
inc
inc
or
or
or
add
es
add
add
push
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
add
adc
and
add
jl
pop
jno
adc
adc
add
adc
or
add
es
add
add
push
push
pop
push
adc
add
add
add
pop
add
sbb
add
add
add
add
add
lods
pop
add
or
pop
jae
and
pop
das
or
add
adc
add
es
add
add
push
push
pop
push
add
add
add
pop
add
and
add
sbb
add
add
add
and
and
rol
or
jg
add
push
and
xor
xor
adc
add
adc
outs
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
xor
add
sbb
add
cmp
add
push
add
adc
and
add
or
push
or
adc
or
mov
add
push
adc
add
adc
add
add
add
or
add
add
add
push
push
pop
push
adc
add
add
add
das
add
sbb
add
aas
add
add
add
adc
and
pop
add
or
and
sbb
inc
or
mov
add
or
sbb
inc
or
adc
add
add
add
or
pop
add
add
add
push
push
pop
push
adc
add
add
add
add
adc
add
sbb
add
adc
add
add
imul
aad
add
push
pop
jbe
and
or
add
add
add
adc
add
adc
add
adc
add
add
cmp
and
ret
or
or
add
sub
xor
add
add
add
add
adc
pop
jne
and
mov
and
int3
int3
int3
cmp
out
or
stos
add
or
add
add
add
xor
add
add
add
add
adc
pop
inc
or
sbb
pop
adc
pusha
arpl
add
add
add
adc
add
push
add
add
add
add
dec
or
pop
les
add
and
lods
add
or
or
add
adc
add
sbb
add
adc
and
and
or
jg
add
push
and
or
add
adc
add
and
add
push
add
adc
pop
jno
pop
push
or
call
inc
or
add
add
pusha
(bad)
call
add
add
add
add
xor
add
add
add
add
adc
pop
ins
or
call
and
add
or
or
add
push
or
add
add
add
add
xor
add
add
add
add
adc
and
int3
int3
int3
in
add
inc
or
es
add
and
int3
int3
int3
in
(bad)
inc
or
or
add
add
xor
add
add
add
add
adc
pop
or
ds
add
and
add
push
or
add
adc
add
adc
add
sbb
add
add
dec
or
pop
mov
add
pop
or
add
sub
xor
add
add
add
add
adc
and
test
add
and
add
or
pop
or
or
add
xor
add
add
add
add
add
mov
add
or
xor
xor
repz
jmp
sub
or
add
xor
add
add
add
pop
or
sbb
jl
add
or
pop
stos
add
or
add
add
add
adc
add
sbb
add
push
add
adc
and
add
push
and
data16
(bad)
inc
or
or
add
sub
xor
add
add
add
add
adc
pop
or
xor
add
pop
push
or
or
add
xor
add
add
add
add
adc
pop
dec
or
xor
inc
or
out
retf
or
or
add
adc
add
pop
add
add
add
adc
and
inc
sub
pop
or
and
or
add
add
add
add
xor
add
add
add
add
adc
pop
sub
add
or
ins
or
or
add
xor
add
add
and
add
add
jns
and
cmps
add
or
jbe
and
add
push
or
add
add
add
adc
add
adc
add
and
add
add
or
cli
mov
or
add
sub
xor
add
add
add
add
adc
pop
data16
sbb
or
add
sub
xor
add
add
add
and
cmps
add
or
mov
pop
or
add
sub
adc
add
push
add
add
add
adc
and
movs
add
or
not
add
pop
adc
and
or
add
add
add
add
adc
add
sbb
add
adc
pop
or
lods
rol
or
add
and
mov
add
add
add
add
add
xor
add
add
sub
add
add
xor
xor
xchg
call
push
or
or
add
sub
xor
add
add
add
add
adc
and
add
push
pop
dec
or
int
int3
int3
or
out
or
lea
adc
add
add
add
xor
add
add
add
add
adc
and
and
pop
js
and
add
add
add
add
adc
add
and
add
sub
add
add
inc
add
or
or
or
xor
xor
outs
out
or
add
add
add
add
xor
add
add
add
add
adc
and
add
add
and
add
add
pop
or
add
sub
adc
add
sbb
add
sub
add
add
mov
and
and
call
add
sub
add
xor
add
add
sub
and
call
mov
or
or
add
sub
xor
add
add
add
add
adc
and
and
int3
add
or
fisub
or
add
adc
add
push
add
add
add
adc
and
popa
add
or
add
or
or
add
adc
add
pop
add
add
add
adc
and
xor
xor
mov
inc
or
mov
or
dec
rol
push
or
add
xor
add
add
add
add
adc
pop
data16
sub
and
add
push
and
mov
add
or
add
add
add
add
add
xor
add
add
add
add
adc
and
jle
inc
or
add
add
pusha
inc
jmp
mov
add
or
add
adc
add
push
add
add
add
adc
and
add
or
sti
rol
or
aas
or
mov
add
add
add
add
adc
add
or
add
adc
pop
outs
or
imul
or
add
sub
add
adc
add
push
add
add
and
add
or
imul
xchg
mov
or
add
adc
add
pop
add
add
add
adc
pop
daa
or
test
add
and
or
or
add
xor
add
add
adc
and
mov
popw
cs
or
int
int3
int3
cld
(bad)
out
or
add
inc
inc
or
add
add
add
add
xor
add
add
add
add
adc
and
or
or
and
and
or
add
add
add
add
adc
add
adc
add
cmp
add
add
inc
mov
lods
test
or
add
sub
adc
add
adc
add
cmp
add
add
cmp
adc
pop
or
add
sub
xor
add
add
add
add
adc
and
or
xor
xor
adc
or
add
sub
xor
add
add
cmp
add
add
dec
or
pop
or
add
sub
xor
add
add
add
add
add
adc
pop
or
or
add
sub
xor
add
add
add
and
pop
push
or
xor
or
add
adc
add
push
add
add
add
adc
pop
inc
or
jmp
add
or
xor
or
add
adc
add
sldt
add
add
adc
and
pop
or
or
add
sub
adc
add
and
add
inc
add
adc
and
add
push
and
add
or
inc
mov
add
pop
retf
or
add
add
add
adc
add
sbb
add
inc
add
adc
and
add
add
and
push
add
or
inc
or
or
add
adc
add
adc
add
inc
add
adc
push
or
xchg
pop
pop
or
or
add
xor
add
add
add
add
add
push
mov
add
and
data16
call
inc
or
or
add
add
xor
add
add
add
adc
and
and
and
mov
or
add
adc
add
sbb
add
inc
add
adc
pop
push
or
fcmovnb
add
push
pop
xor
ins
or
add
add
add
add
xor
add
add
add
add
add
jne
add
or
sub
pop
or
add
sub
adc
add
and
add
inc
add
adc
and
and
mov
or
out
dec
inc
or
mov
or
add
add
add
add
add
xor
add
add
add
add
add
shr
or
add
add
mov
out
or
or
add
add
xor
add
add
add
add
add
add
add
pusha
addr16
or
stos
leave
add
push
and
or
or
add
xor
add
add
add
add
add
jecxz
add
or
jmp
mov
add
or
call
inc
or
add
add
add
adc
add
sbb
add
dec
add
adc
and
rol
push
pop
or
add
push
or
adc
add
pop
add
add
adc
pop
jge
pop
jo
and
push
or
add
add
add
xor
add
add
add
add
add
int
int3
int3
int3
movs
call
mov
or
or
add
sub
adc
add
sbb
add
dec
add
adc
and
xor
xor
push
in
or
cmp
or
add
sub
xor
add
add
add
add
add
pop
mov
cmps
add
or
out
add
push
or
add
adc
add
adc
add
adc
and
or
and
or
or
add
sub
add
adc
add
sbb
add
push
add
adc
pop
or
xor
or
or
xor
adc
add
add
add
adc
add
adc
add
push
add
adc
pop
inc
or
or
mov
add
or
or
add
adc
add
sbb
add
push
add
adc
and
add
or
pushf
lds
add
and
or
or
add
adc
add
push
add
add
adc
and
and
mov
add
pop
ins
or
inc
movs
add
or
add
add
add
adc
add
sbb
add
adc
and
int3
int3
int3
pushf
in
in
or
popf
mov
add
pop
or
or
add
add
add
add
xor
add
add
push
add
adc
pop
cmp
and
xor
xor
pop
or
add
sub
xor
add
add
adc
pop
push
pop
jp
pop
or
add
sub
add
adc
add
adc
add
pop
add
adc
and
jne
add
and
pop
or
add
sub
adc
add
adc
add
pop
add
adc
and
mov
dec
push
add
pop
or
add
sub
adc
add
push
add
add
add
add
dec
or
shl
add
add
lds
adc
add
add
add
adc
add
push
add
add
add
add
pop
or
push
pop
add
or
mov
imul
or
add
add
add
adc
add
sbb
add
pop
add
adc
and
or
adc
or
xor
inc
or
or
add
xor
add
add
add
add
add
or
mov
add
or
test
in
lods
add
or
add
add
add
adc
add
push
add
add
add
add
mov
add
push
and
mov
add
and
push
or
add
add
add
adc
add
adc
add
pop
add
adc
and
add
or
fiadd
add
or
or
add
sub
adc
add
adc
add
pusha
add
adc
pop
imul
xor
xor
shr
or
add
sub
xor
add
add
add
add
add
mov
and
pop
or
add
sub
adc
add
push
add
add
add
add
repnz
push
or
add
add
xor
adc
add
add
add
adc
add
adc
add
sub
and
(bad)
cmp
and
mov
pop
or
add
sub
xor
add
add
add
add
add
or
addr16
add
push
pop
or
add
sub
xor
add
add
add
adc
and
rol
or
add
add
or
call
and
mov
add
add
add
add
add
xor
add
add
adc
and
pop
or
mov
sub
sub
or
add
add
xor
add
add
add
add
add
imul
add
pop
das
or
or
add
sub
add
adc
add
adc
add
add
adc
and
and
sub
sub
or
add
xor
add
add
add
add
add
pop
rol
push
pop
sbb
and
or
or
adc
add
adc
add
imul
dec
mov
and
lods
add
or
or
add
sub
xor
add
add
add
add
add
pop
or
add
add
push
pop
or
add
sub
add
adc
add
adc
add
adc
and
add
and
add
push
pop
or
add
sub
add
adc
add
and
add
ins
add
adc
and
int3
add
or
cmc
mov
and
scas
add
or
mov
and
add
add
add
add
adc
add
pop
add
add
add
add
les
pop
ud2
pop
or
int
int3
int3
cmp
jmp
add
add
add
add
xor
add
add
adc
and
or
mov
add
push
pop
or
add
sub
add
adc
add
push
add
add
add
add
sub
dec
mov
or
push
or
sub
or
add
add
add
add
add
add
add
mov
add
add
push
imul
add
add
dec
or
test
inc
jmp
bound
cld
add
jmp
add
add
push
add
shr
add
jo
mov
call
add
add
or
stos
add
xor
add
add
hlt
push
add
add
push
add
xchg
shr
call
add
add
inc
push
dec
add
add
add
outs
add
arpl
(bad)
add
jae
jo
inc
test
add
add
sub
add
popa
je
inc
add
jbe
push
imul
in
add
outs
add
push
add
mov
add
xor
add
adc
add
add
add
jne
add
add
mov
outs
add
call
add
inc
popa
mov
add
jmp
add
cwde
(bad)
jmp
add
add
add
add
rol
add
call
add
add
push
add
add
inc
add
imul
add
add
adc
jb
jmp
add
inc
add
add
cmp
push
gs
add
nop
add
sub
xor
dec
add
add
sub
add
inc
and
je
add
add
popa
imul
add
add
push
dec
inc
add
add
bound
add
add
sar
dec
push
add
xor
inc
add
xchg
add
and
(bad)
inc
add
add
fisub
ret
mov
add
and
add
add
push
cs
add
or
xchg
mov
clc
inc
add
add
add
add
add
add
add
(bad)
add
push
push
push
jb
add
adc
add
push
add
add
mov
in
sub
test
clc
add
add
add
add
lea
call
inc
add
or
jb
jle
add
mov
fdivr
add
add
add
add
add
add
add
mov
add
add
ins
(bad)
fcomip
inc
rol
add
fiadd
add
mov
adc
add
add
add
add
dec
xchg
and
add
aam
inc
add
rol
push
pusha
add
or
add
add
add
add
dec
jmp
add
in
add
add
add
add
add
and
inc
add
push
popa
add
add
add
add
add
mov
mov
ret
push
add
add
add
xor
add
add
inc
ret
rol
add
add
add
(bad)
jns
test
xor
push
xchg
mov
add
jmp
push
push
add
xor
add
xor
add
add
add
add
jb
add
ins
add
add
cs
inc
lods
add
dec
add
jmp
add
inc
dec
dec
rol
add
inc
add
mov
mov
add
outs
or
jne
jne
sub
add
add
pop
dec
inc
dec
add
add
push
add
add
jmp
add
ins
add
add
or
inc
jb
add
inc
popa
arpl
add
add
add
add
sbb
mov
add
(bad)
call
add
or
xor
jne
add
pop
add
add
add
inc
add
xlat
add
add
cld
add
mov
mov
add
mov
add
mov
add
add
push
add
scas
jb
dec
je
add
rol
fsub
jmp
jne
add
ins
xor
add
inc
add
push
add
inc
ret
add
add
fisubr
xor
rol
fdivrp
add
add
in
addr16
add
std
add
add
or
jmp
add
cmp
add
add
add
add
pop
add
add
inc
outs
add
add
pop
jb
add
jmp
add
add
add
adc
add
add
rol
add
js
sub
add
(bad)
add
add
jno
pop
add
test
add
jns
aaa
cld
jmp
in
add
scas
add
add
ins
inc
outs
add
add
add
call
jmp
sub
add
add
add
cmp
lock
add
mov
add
add
add
or
outs
adc
jae
add
(bad)
mov
mov
add
in
add
jmp
add
mov
pop
add
mov
adc
push
add
jmp
add
mov
gs
add
or
add
add
or
add
stos
lock
jns
add
xchg
mov
and
je
sbb
ret
add
add
add
add
add
xor
jbe
imul
add
add
add
push
add
add
add
add
add
dec
add
cmp
add
shl
jmp
mov
add
add
dec
add
add
add
rol
add
add
xor
add
add
add
add
xor
add
and
add
add
test
mov
add
add
push
std
add
inc
push
sti
add
xor
xlat
add
mov
add
add
push
push
push
add
push
(bad)
jmp
add
xlat
and
add
rol
inc
test
add
mov
outs
add
jb
and
inc
add
dec
add
push
add
add
add
add
xor
inc
add
xchg
add
mov
sar
dec
add
add
fcos
add
push
add
and
add
call
jmp
je
ins
add
add
add
lock
add
cmp
adc
dec
add
(bad)
cld
push
pop
add
add
add
sbb
sbb
and
sti
retf
add
push
add
add
add
add
xor
add
imul
icebp
add
add
add
in
dec
add
add
je
add
jmp
add
add
aaa
add
sub
add
sbb
add
(bad)
call
add
cmp
fcmovu
add
add
fild
call
cld
add
add
add
add
add
add
add
mov
jne
add
inc
add
(bad)
leave
add
add
and
inc
(bad)
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
inc
add
sub
add
inc
add
cmp
add
add
daa
add
fadd
or
add
mov
inc
add
inc
add
adc
add
add
add
add
add
add
rol
inc
or
cmp
add
add
add
aaa
add
add
add
add
(bad)
inc
add
add
mov
add
add
shl
add
je
loop
add
popa
xlat
mov
cs
or
push
add
add
add
add
add
add
add
mov
add
mov
lea
sub
add
add
add
gs
add
pop
add
cs
add
dec
add
add
push
je
inc
add
dec
mov
scas
stc
call
add
jmp
add
push
add
jecxz
add
add
add
out
(bad)
fadd
add
add
dec
lea
(bad)
jmp
jb
mov
add
push
inc
add
imul
sub
add
add
pop
imul
sbb
add
add
rcl
add
inc
add
add
outs
push
add
push
test
add
add
inc
and
mov
dec
add
add
ja
call
jae
push
add
jb
add
push
mov
add
add
inc
dec
ins
add
add
or
outs
pop
popa
outs
add
add
add
add
add
mov
push
add
adc
add
add
add
add
add
popa
ins
add
add
int
rol
int3
add
sti
add
jmp
(bad)
clc
(bad)
inc
popa
add
jmp
add
add
fiadd
(bad)
stc
push
ins
add
add
retf
jne
pop
jge
lock
add
push
add
add
add
add
push
add
add
add
add
in
add
add
inc
add
arpl
add
add
je
popa
push
inc
add
arpl
movs
sldt
add
cld
mov
add
add
(bad)
jmp
push
add
add
pcmpeqb
pop
and
add
add
add
rol
gs
jmp
add
and
add
imul
(bad)
call
and
dec
add
add
dec
add
mov
add
xor
push
push
add
add
inc
add
add
inc
add
outs
add
outs
add
outs
sldt
add
arpl
add
inc
add
scas
ins
push
pop
add
sldt
mov
inc
scas
add
sub
xchg
add
js
enter
add
ins
xor
outs
push
xor
jge
add
enter
add
mov
popf
add
mov
mov
adc
add
sti
add
ins
add
ja
(bad)
mov
add
inc
add
imul
push
add
sbb
add
ins
add
js
and
add
push
fldcw
add
outs
add
gs
fild
push
add
add
add
add
rol
jl
add
mov
add
add
add
fadd
add
add
inc
cld
add
inc
add
clc
add
add
add
add
dec
pop
add
add
add
or
cli
add
aaa
add
add
push
add
jmp
mov
dec
add
dec
push
call
push
fs
add
inc
cmc
ins
add
xor
mov
add
add
or
push
add
xor
add
inc
xchg
popa
inc
jae
add
dec
(bad)
(bad)
addr16
add
cld
add
add
add
fist
add
add
or
inc
dec
inc
add
imul
add
add
add
inc
mov
sbb
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
sbb
add
add
add
jo
add
add
inc
ins
add
jmp
add
add
add
mov
add
ins
add
stc
add
add
cmp
add
mov
add
imul
xchg
pop
jns
and
add
add
rol
shl
jge
add
add
add
add
add
je
add
add
and
add
add
add
add
add
add
add
jo
xchg
add
add
add
add
push
inc
add
add
inc
adc
jmp
add
add
add
dec
add
dec
jno
xchg
inc
add
and
add
or
mov
add
add
add
add
push
lea
inc
add
add
add
add
add
sub
jmp
and
sar
(bad)
inc
or
push
add
add
add
inc
add
add
aam
push
inc
add
add
rol
push
add
add
add
add
imul
add
inc
mov
inc
add
(bad)
add
push
mov
inc
add
ins
add
add
add
add
add
lods
jmp
add
add
add
fiadd
add
jmp
adc
mov
push
add
inc
add
add
add
dec
add
add
add
add
jge
add
mul
add
add
add
add
adc
push
repz
add
imul
add
add
outs
add
test
rol
cmp
rol
add
add
add
add
sbb
push
add
add
add
mov
add
scas
add
sub
add
add
add
add
dec
mov
jne
add
add
jns
rol
add
add
cld
add
add
add
jmp
lock
add
mov
adc
add
add
jmp
outs
add
jmp
add
add
add
je
add
cli
dec
add
add
add
add
add
add
xor
add
add
add
(bad)
repz
test
add
dec
add
add
inc
add
or
test
add
adc
mov
add
mov
add
add
and
mov
cmp
add
add
verr
les
cli
add
cld
add
dec
add
fs
add
add
add
enter
add
add
add
push
je
xchg
add
sub
add
add
clc
add
add
and
add
add
add
add
test
inc
ja
add
dec
add
(bad)
dec
outs
inc
vmwrite
add
add
add
add
jmp
stc
or
nop
add
gs
dec
fimul
add
add
add
jle
add
add
add
add
add
push
add
cs
add
add
adc
add
push
add
iret
jmp
add
add
add
imul
ret
add
mov
add
add
cmp
add
add
jmp
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
arpl
fcomp
add
mov
test
add
outs
push
add
mov
dec
add
sub
add
add
add
jmp
push
add
add
inc
mov
adc
pop
sub
add
add
add
jmp
add
mov
push
outs
add
sahf
jae
ins
add
add
inc
add
xor
push
add
mov
outs
add
add
add
enter
fild
add
loopne
rol
push
pop
cs
add
add
add
add
add
add
cld
add
sbb
aam
add
add
push
add
add
add
push
add
add
push
add
adc
pop
add
add
jne
add
add
call
and
leave
add
inc
add
push
add
imul
add
add
clc
push
add
popa
clc
add
add
je
add
add
mov
add
xor
add
iret
add
enter
jo
sbb
add
sbb
add
add
add
inc
add
push
dec
add
mov
add
add
add
add
add
add
add
add
add
inc
add
ret
cs
add
arpl
add
mov
mov
add
dec
dec
rol
xor
inc
add
add
add
add
sar
add
jb
mov
add
add
push
add
clc
add
push
add
popa
add
add
push
imul
mov
imul
add
and
in
add
add
dec
add
add
dec
and
jmp
fadd
add
add
add
add
add
add
dec
add
xor
outs
pop
add
add
add
add
sub
cmp
push
outs
add
dec
add
lea
add
add
mov
add
add
add
inc
add
(bad)
test
add
jae
add
sub
push
mov
add
add
add
jmp
add
add
add
add
jmp
popa
add
add
add
lock
add
add
push
rol
rol
add
je
add
add
inc
inc
inc
sub
add
add
xor
(bad)
fiadd
add
add
add
rol
arpl
add
add
addr16
cmp
add
push
jae
add
in
inc
add
add
sbb
test
add
add
add
clc
inc
gs
add
add
add
add
outs
inc
popa
add
add
je
leave
and
sub
add
add
add
shr
cmp
neg
adc
test
cmp
add
add
add
gs
add
add
add
add
add
jns
add
add
add
mov
add
add
add
add
push
xchg
add
outs
add
add
out
inc
add
add
add
mov
add
inc
add
push
loope
fadd
add
add
jb
add
add
mov
cld
add
add
add
add
inc
add
mov
add
add
add
mov
add
mov
pop
add
add
inc
add
je
add
and
add
add
add
test
add
add
add
add
shr
mov
add
outs
mov
add
add
jmp
add
add
add
add
outs
ins
ins
add
push
and
jmp
jmp
dec
push
add
and
loop
add
sub
add
add
add
mov
add
add
add
mov
add
add
add
xor
add
call
add
add
add
add
add
add
add
add
outs
add
call
inc
push
add
add
push
add
add
add
sldt
add
je
add
mov
add
sti
add
gs
add
add
inc
add
add
add
add
call
adc
fs
scas
arpl
add
inc
stc
sldt
test
add
add
add
xor
inc
(bad)
jmp
add
push
add
add
add
outs
add
add
add
imul
add
jmp
add
ins
mov
mov
add
add
inc
add
je
xor
add
add
add
shr
add
je
add
and
add
outs
add
pusha
jb
add
add
xchg
sub
dec
add
jne
add
adc
add
mov
add
mov
or
add
add
add
add
jmp
mov
or
inc
add
add
add
bound
push
dec
add
add
inc
pop
or
adc
add
jb
add
add
jbe
imul
in
add
rol
add
add
add
dec
inc
into
add
outs
add
push
add
add
je
ins
add
add
je
add
pop
add
add
rol
mov
mov
(bad)
adc
test
xor
add
xor
add
sldt
add
je
add
add
jle
pop
add
add
add
inc
add
lods
add
mov
and
add
xor
add
call
xor
add
add
add
add
add
push
jb
add
into
mov
xchg
jmp
sub
add
add
nop/reserved
jb
add
arpl
add
rol
add
add
ltr
aam
dec
pop
outs
add
add
shr
add
add
push
inc
add
xchg
add
lock
add
mov
imul
add
add
add
jmp
add
add
add
inc
add
cld
pop
add
in
add
add
scas
push
retf
fild
leave
jne
add
cld
add
add
outs
add
add
add
add
add
add
add
add
inc
add
add
add
call
add
add
add
add
add
add
add
add
add
add
jne
add
fiadd
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
daa
add
add
or
add
dec
inc
add
add
add
jb
add
add
add
jb
add
enter
rol
add
jne
mov
add
add
test
add
inc
jns
add
add
add
add
lods
add
add
inc
mov
add
add
inc
add
add
add
add
(bad)
call
popa
add
jmp
cmps
pusha
add
jb
add
add
inc
push
add
add
add
add
jne
add
add
jne
add
add
jb
add
lea
or
add
push
add
or
add
add
add
add
add
rol
push
add
add
xchg
add
add
inc
add
add
add
imul
add
dec
rol
pop
add
test
or
jne
add
add
adc
fbstp
add
cld
inc
push
arpl
jmp
add
add
add
add
add
add
add
and
je
adc
add
add
add
add
add
test
add
test
add
adc
add
cld
add
add
cld
add
push
add
add
jb
add
lock
cmp
call
mov
add
outs
mov
add
add
add
add
add
add
mov
adc
mov
dec
add
daa
and
outs
add
add
popa
stos
and
add
icebp
add
enter
add
add
imul
jmp
add
outs
outs
add
inc
add
add
jb
cmp
add
add
fiadd
inc
ins
gs
add
inc
dec
add
add
cld
add
add
add
add
add
push
jmp
add
add
ret
add
add
loopne
add
add
cld
outs
hlt
push
add
inc
push
add
mov
int
add
add
add
fild
add
add
add
inc
jne
add
add
ins
shl
inc
scas
add
add
add
test
jmp
add
ror
jo
add
add
add
add
add
add
push
add
adc
fld
push
loopne
inc
add
add
add
jge
imul
add
add
add
or
add
outs
fiadd
add
add
inc
add
clc
add
add
cld
add
add
add
in
add
add
add
add
add
push
mov
add
add
je
ins
test
add
add
add
xchg
add
xor
add
add
add
je
add
add
add
cld
mov
rol
add
add
push
add
add
add
push
ret
add
inc
add
dec
rol
add
add
add
add
add
and
test
test
ins
add
add
add
add
add
add
add
(bad)
add
dec
add
hlt
inc
add
add
add
add
imul
test
outs
arpl
add
xchg
add
add
add
idiv
add
dec
add
ins
inc
add
add
cld
add
add
inc
gs
add
lock
push
add
push
add
add
inc
xchg
add
add
add
add
ja
add
add
add
add
add
push
add
or
or
adc
add
inc
add
fild
add
add
add
(bad)
(bad)
cld
add
lea
add
outs
add
add
add
add
in
arpl
add
jmp
add
shl
add
test
jp
add
add
add
add
adc
scas
add
add
rol
dec
add
add
add
cld
cld
inc
imul
sub
addr16
add
add
jmp
add
rol
push
add
adc
add
add
pop
mov
add
add
jae
add
add
add
xchg
or
(bad)
push
add
push
add
add
add
clc
adc
imul
popa
add
add
gs
add
add
xor
add
add
inc
je
jg
rol
adc
push
add
pop
inc
add
and
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
mov
rcl
add
add
add
add
inc
add
add
add
add
add
dec
sub
(bad)
cld
add
dec
add
add
(bad)
push
add
rol
add
add
jmp
add
mov
add
add
arpl
gs
add
jge
rol
mov
hlt
add
outs
add
add
mov
cmp
add
cmp
inc
add
add
add
outs
add
add
add
add
or
jbe
add
add
inc
outs
add
std
dec
add
add
add
add
add
or
rcl
add
xor
xor
test
add
add
inc
inc
shr
je
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
mov
inc
add
or
ins
add
jmp
add
dec
je
add
add
mov
jns
add
add
add
popa
add
add
je
xchg
add
popa
jmp
add
arpl
test
sbb
push
add
add
add
test
add
cld
mov
push
jo
add
pop
add
add
add
fidivr
add
call
repnz
add
add
add
add
push
add
inc
add
jle
je
sub
add
add
add
add
add
add
mov
inc
add
retf
sti
add
mov
arpl
lock
add
lock
add
ins
add
add
leave
add
adc
add
add
add
add
add
add
jo
into
add
jmp
hlt
add
add
add
add
adc
add
add
add
inc
add
add
scas
add
add
add
add
add
jecxz
add
xor
xor
add
add
gs
je
inc
add
add
add
add
add
add
jmp
add
ror
add
jb
add
add
add
jmp
add
test
mov
add
lock
xor
push
add
dec
add
inc
sti
and
ins
add
add
add
imul
add
popa
(bad)
inc
cld
jmp
sub
add
das
push
add
add
add
in
add
add
add
add
add
mov
inc
imul
dec
add
add
dec
push
add
add
lock
not
push
add
add
add
push
call
add
mov
mov
add
and
add
ins
add
outs
inc
add
add
ins
ret
inc
add
add
add
add
add
xor
add
push
add
add
add
add
jb
add
lds
(bad)
jmp
add
add
add
jbe
popa
and
push
add
add
add
add
jmp
outs
add
add
add
add
pop
cli
push
cs
imul
add
dec
add
add
add
add
add
mov
test
add
add
mul
add
add
cs
add
add
add
or
add
inc
add
inc
adc
add
add
add
add
add
add
add
add
add
push
add
add
inc
mov
mov
add
bound
ds
add
add
inc
add
add
jge
add
add
sub
retf
add
add
jbe
gs
add
add
popa
call
add
jmp
jo
mov
add
and
xor
add
add
add
add
inc
lock
push
inc
in
call
scas
sbb
cmp
add
add
add
jmp
inc
add
cld
sti
arpl
div
mov
cmc
add
pusha
push
mov
xor
add
xor
jne
rol
add
jb
add
add
or
add
mov
add
add
or
add
add
add
ror
add
jmp
add
add
cli
add
clc
and
imul
add
mov
add
add
ins
jmp
add
jne
add
add
add
(bad)
je
sub
add
add
inc
add
je
inc
retf
add
jb
cmc
jmp
add
add
add
popa
push
add
sub
add
add
add
add
add
dec
popa
add
loopne
mov
add
push
dec
add
add
je
push
imul
(bad)
inc
cmc
jmp
add
imul
push
add
add
jge
outs
add
add
add
add
add
add
add
add
add
jge
inc
add
add
std
mov
mov
add
str
add
add
inc
inc
mov
sbb
add
add
inc
aam
add
jb
add
icebp
and
rol
push
add
mov
jne
add
inc
add
add
add
add
add
add
add
push
add
add
ud0
add
add
add
mov
test
add
pop
add
clc
xor
add
add
add
je
add
dec
xchg
add
fld
add
add
add
adc
add
call
add
add
add
add
add
add
or
add
add
add
add
ins
add
add
add
add
add
add
add
add
js
add
cmp
add
inc
add
cld
add
add
add
push
add
add
je
xlat
push
add
add
add
add
add
rol
gs
popa
add
add
add
add
add
inc
add
push
add
add
add
add
cld
cld
add
add
and
add
add
add
add
add
jmp
and
add
add
(bad)
cmp
xchg
add
sbb
push
add
xor
add
add
add
sbb
inc
and
xor
xor
int
int3
int3
or
out
sub
add
or
imul
and
add
add
add
inc
dec
mov
dec
add
or
add
or
and
adc
add
adc
add
add
add
or
pop
and
add
adc
pop
adc
pop
adc
add
(bad)
sbb
add
and
add
pop
add
or
or
jbe
add
and
add
push
add
inc
inc
and
add
pop
pop
sub
add
adc
dec
add
add
or
inc
push
inc
dec
mov
dec
add
push
adc
unpcklps
adc
push
adc
adc
outs
sbb
add
and
add
adc
and
stos
add
adc
adc
adc
adc
add
or
and
adc
jmp
add
push
adc
inc
adc
add
sbb
and
add
pop
add
or
pop
pop
adc
aad
add
pop
sub
push
adc
pop
js
sbb
sbb
xchg
add
add
add
inc
dec
mov
dec
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
add
push
pop
dec
adc
and
aaa
and
adc
adc
outs
sldt
or
and
mov
and
adc
and
and
and
add
add
add
add
pop
add
or
and
sub
push
adc
and
add
add
daa
adc
and
add
inc
push
inc
dec
mov
dec
add
sub
sub
add
or
and
jo
add
sub
sub
sub
add
or
and
sub
adc
adc
sub
add
and
add
pop
add
or
cs
jno
test
push
and
add
add
icebp
rol
push
push
add
adc
and
add
add
xor
xor
ret
add
add
inc
dec
mov
dec
add
xor
xor
xor
xor
add
or
xor
bound
add
xor
clc
retf
adc
adc
adc
outs
sbb
and
mov
add
sbb
sub
add
and
add
pop
add
or
cmp
and
data16
cs
and
mov
jg
add
push
pop
add
push
adc
and
add
add
cmp
cmp
dec
add
add
add
inc
dec
mov
dec
add
cmp
cmp
or
add
and
data16
inc
adc
adc
adc
adc
outs
push
add
or
and
add
adc
call
and
sub
add
and
add
pop
add
or
inc
push
and
retf
and
and
mov
add
xor
add
adc
xchg
add
add
inc
adc
add
add
add
inc
dec
mov
dec
add
inc
adc
adc
add
and
adc
adc
inc
outs
adc
add
mov
add
add
dec
and
dec
add
sbb
and
add
pop
add
or
dec
and
stos
add
push
ja
inc
sub
dec
and
add
adc
and
add
add
add
inc
dec
mov
dec
add
dec
adc
sldt
or
pop
adc
fstp
dec
adc
push
adc
push
adc
adc
adc
push
adc
pop
add
or
and
push
inc
inc
adc
out
xor
push
and
push
add
lea
add
add
add
pop
add
or
push
and
retf
push
add
add
pusha
sub
test
pop
mov
pop
add
push
adc
int
add
adc
pop
and
add
inc
dec
mov
dec
add
pop
adc
sbb
add
es
mov
and
xchg
adc
adc
outs
adc
add
es
push
adc
inc
adc
cmp
pop
add
add
add
pop
add
or
pusha
pop
dec
pop
jne
and
mov
add
dec
sub
add
adc
in
add
adc
bound
push
add
add
add
inc
dec
mov
dec
add
arpl
arpl
add
or
and
xor
xor
in
adc
adc
adc
add
mov
add
add
data16
add
adc
adc
sbb
add
add
pop
add
or
imul
pushf
int
inc
pop
dec
sub
add
push
adc
add
add
imul
and
add
add
add
inc
dec
mov
dec
add
ins
adc
ins
adc
outs
or
add
es
push
adc
int
int3
int3
mov
outs
adc
jo
adc
jo
jno
and
add
add
and
add
push
jb
pop
adc
pop
or
and
add
pop
add
or
je
cmp
add
int
int3
int3
pop
ret
in
sub
add
push
adc
sub
add
adc
jbe
pop
add
add
add
inc
dec
mov
dec
add
ja
ja
and
add
and
js
push
rol
push
jns
or
jp
adc
adc
adc
add
or
jge
sbb
cmp
jle
xor
xor
jecxz
out
adc
sbb
and
add
pop
add
or
and
es
inc
and
push
add
push
adc
add
adc
and
add
inc
dec
mov
dec
add
adc
adc
test
adc
adc
or
and
xchg
xchg
xchg
add
or
mov
outs
mov
and
adc
sub
add
and
add
pop
add
or
mov
pop
pop
and
retf
add
push
and
cmps
add
push
xor
add
adc
adc
add
add
add
inc
dec
mov
dec
add
mov
mov
add
or
(bad)
and
jno
add
nop
adc
xchg
adc
xchg
adc
add
or
xchg
and
mov
xchg
push
adc
add
add
xchg
and
mov
addr16
sub
add
adc
add
cwde
adc
add
add
inc
dec
mov
dec
add
cdq
adc
call
add
or
and
add
adc
xor
cmp
inc
adc
outs
adc
add
and
add
adc
add
lahf
add
lea
add
add
mov
fstp
add
push
ret
push
adc
add
adc
add
mov
add
add
add
inc
dec
mov
dec
add
mov
mov
add
or
movs
and
data16
out
adc
adc
outs
add
or
test
inc
adc
add
adc
and
add
pop
add
or
lods
pop
es
scas
add
sub
add
adc
add
scas
adc
add
add
inc
dec
mov
dec
add
scas
adc
mov
scas
adc
or
and
adc
mov
or
add
es
adc
add
lea
add
add
mov
pop
ins
and
add
pop
and
les
add
xor
add
adc
add
mov
mov
je
add
inc
dec
mov
dec
add
mov
adc
outs
or
add
es
popa
adc
add
mov
adc
mov
adc
adc
or
and
mov
add
shl
mov
add
adc
sbb
add
push
adc
pop
adc
adc
and
add
inc
dec
mov
dec
add
lds
lds
add
or
and
test
inc
adc
and
add
adc
and
mov
enter
adc
outs
sub
add
es
adc
push
adc
add
adc
cmp
add
add
and
add
push
out
ss
and
rol
push
push
add
push
adc
and
add
adc
adc
and
add
inc
dec
mov
dec
add
iret
adc
rcl
iret
adc
outs
sbb
add
adc
and
rcl
adc
and
test
add
aam
adc
adc
(bad)
adc
adc
outs
sub
add
es
adc
and
add
adc
push
adc
add
mov
ret
pop
adc
adc
adc
xchg
pushf
pop
push
and
and
gs
inc
sub
add
adc
and
fist
(bad)
xchg
add
add
add
inc
dec
mov
dec
add
fcom
fsubr
add
or
and
mov
add
fst
ficom
fisubr
add
or
fbld
or
loopne
outs
adc
and
loop
add
int3
pop
pop
adc
adc
adc
mov
add
push
mov
dec
add
sti
(bad)
(bad)
jmp
xchg
add
push
and
add
add
inc
pop
jno
pop
add
push
adc
and
add
adc
adc
and
add
inc
dec
mov
dec
add
in
adc
adc
adc
outs
sub
add
adc
and
call
add
jmp
jmp
xor
add
adc
push
adc
and
add
adc
and
add
adc
add
adc
cmp
add
add
and
cmp
add
adc
and
add
add
lock
pop
sub
add
inc
dec
mov
dec
add
icebp
adc
repnz
(bad)
adc
adc
adc
adc
outs
sub
add
add
mov
hlt
and
add
adc
adc
not
not
not
imul
add
or
and
adc
and
add
stc
add
mov
ret
pop
adc
adc
adc
xchg
pushf
and
xor
xor
in
pop
pop
sub
add
push
adc
and
sti
adc
and
add
inc
push
inc
dec
mov
dec
add
cld
adc
std
adc
adc
outs
sub
push
adc
pop
imul
and
add
dec
add
adc
push
add
dec
add
add
or
push
add
and
push
add
add
adc
pop
pop
adc
adc
adc
mov
add
push
mov
dec
add
repz
(bad)
jmp
sbb
push
push
dec
add
pop
and
dec
add
inc
dec
mov
dec
add
push
push
add
or
add
add
or
pop
dec
dec
pop
add
add
push
or
adc
push
or
dec
add
add
or
pop
data16
or
and
add
push
push
or
add
adc
cmp
add
add
pop
adc
dec
add
push
dec
or
pop
ja
push
or
add
dec
inc
push
inc
dec
mov
dec
add
push
push
add
push
(bad)
dec
add
or
add
add
or
push
adc
pop
data16
adc
and
mov
add
push
adc
adc
push
adc
adc
push
adc
dec
add
or
add
add
or
and
cmps
add
dec
adc
push
push
add
adc
add
push
push
pop
add
adc
adc
adc
and
jl
add
mov
add
push
dec
sbb
and
add
add
push
sbb
dec
add
jnp
add
inc
push
inc
dec
mov
dec
add
push
sbb
dec
add
add
or
and
push
sbb
and
test
add
push
sbb
and
cmps
add
push
push
sbb
push
add
push
pop
add
or
add
or
add
add
or
and
mov
add
push
and
pop
jl
push
and
pop
push
dec
and
add
adc
pop
pop
adc
adc
adc
dec
mov
dec
add
mov
and
push
and
and
add
add
push
and
dec
add
fld
add
inc
push
inc
dec
mov
dec
add
push
and
es
or
add
or
add
add
or
and
add
add
xor
inc
dec
daa
add
ins
mov
sub
adc
push
sub
adc
push
sub
dec
add
or
add
add
or
push
sub
and
sahf
out
dec
sub
add
adc
cmp
add
add
and
aaa
inc
and
scas
add
pop
push
and
int3
int3
int3
cld
call
cmp
add
dec
sub
add
dec
cs
or
add
mov
add
inc
push
inc
dec
mov
dec
add
push
das
add
or
add
add
or
and
dec
xor
and
dec
xor
and
add
dec
xor
adc
push
xor
dec
add
add
or
pop
cmp
push
xor
add
mov
ret
pop
adc
adc
adc
xchg
pushf
pop
push
add
jb
add
dec
xor
add
dec
ss
or
add
sgdtd
add
add
inc
dec
mov
dec
add
push
aaa
add
push
cmp
dec
add
or
add
add
or
pop
inc
dec
cmp
pop
sub
adc
push
cmp
dec
add
add
or
and
push
cmp
pop
jno
push
cmp
int3
pop
pop
adc
adc
adc
mov
add
push
mov
dec
add
fdivr
(bad)
jmp
xor
xor
adc
add
push
dec
add
pop
dec
aas
add
or
add
inc
inc
push
inc
dec
mov
dec
add
push
inc
add
push
inc
add
or
add
or
add
add
or
pop
dec
inc
add
jb
push
inc
add
push
inc
add
push
inc
add
push
inc
add
or
add
or
add
or
add
add
or
and
push
inc
add
sbb
dec
add
push
adc
cmp
add
add
and
add
push
arpl
int
xor
dec
pop
dec
sub
add
push
dec
dec
add
add
add
push
dec
add
or
add
movs
add
add
add
inc
dec
mov
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
or
add
or
add
or
add
or
add
add
or
push
dec
add
pop
dec
push
add
push
push
add
push
push
add
or
add
or
add
add
or
push
push
add
jns
push
push
add
sub
push
push
add
adc
adc
adc
adc
xchg
pushf
pop
cmp
call
add
push
dec
push
add
jb
add
dec
push
add
or
add
inc
add
add
add
inc
dec
mov
dec
add
push
pop
add
push
pop
add
or
add
or
add
add
or
push
pop
add
jl
add
dec
pop
add
cmps
mov
add
push
pop
add
mov
push
pop
add
push
pop
add
or
add
add
or
pop
push
dec
pop
add
add
int3
pop
pop
adc
adc
adc
mov
add
push
mov
dec
add
mov
jg
pop
inc
sub
add
dec
pusha
add
sub
add
dec
popa
add
or
add
mov
add
inc
push
inc
dec
mov
dec
add
push
bound
dec
add
add
or
pop
popa
dec
arpl
and
int3
int3
int3
ins
(bad)
out
dec
add
mov
add
push
add
push
add
push
add
dec
push
imul
dec
add
or
add
or
add
add
or
push
push
and
add
add
push
imul
push
adc
cmp
add
add
and
xor
xor
push
add
push
dec
ins
add
pop
add
add
push
ins
add
or
add
add
add
add
inc
dec
mov
dec
add
push
outs
add
or
add
add
or
push
outs
add
retf
add
push
jo
and
push
jno
and
add
dec
jb
adc
push
jae
adc
push
je
dec
add
or
add
add
or
pop
jbe
push
jne
add
mov
ret
pop
adc
adc
int3
xchg
pushf
and
clc
cs
pop
xor
push
add
push
dec
jbe
and
add
add
push
ja
dec
add
pop
add
add
add
inc
dec
mov
dec
add
push
js
adc
push
jns
adc
push
jp
adc
push
jnp
dec
add
or
add
or
add
or
add
add
or
and
and
add
push
jge
adc
push
jle
dec
add
add
or
pop
dec
dec
jg
add
adc
pop
pop
adc
adc
adc
imul
add
or
add
sar
(bad)
call
pop
cmp
add
imul
add
test
add
dec
add
and
add
add
add
inc
dec
mov
dec
add
push
add
dec
add
dec
test
dec
add
or
add
or
add
add
or
and
push
add
dec
test
adc
push
xchg
dec
add
add
or
and
les
add
push
xchg
and
add
push
push
mov
add
adc
cmp
add
add
sub
and
xor
xor
cmp
inc
pop
and
inc
sub
add
dec
mov
and
add
dec
mov
dec
add
scas
add
add
add
inc
dec
mov
dec
add
push
mov
adc
push
mov
dec
add
or
add
add
or
and
push
lea
push
dec
mov
and
inc
inc
dec
pop
adc
push
nop
add
or
add
add
or
and
ins
in
dec
xchg
add
jb
push
xchg
add
int
inc
inc
dec
xchg
add
adc
adc
adc
int3
xchg
pushf
and
int3
int3
int3
cmp
in
pop
sub
add
push
dec
xchg
add
dec
add
add
push
xchg
add
or
add
mov
add
inc
push
inc
dec
mov
dec
add
push
xchg
add
push
xchg
add
or
add
or
add
add
or
push
cwde
add
addr16
cdq
add
push
call
cmp
add
dec
fwait
add
dec
pushf
add
add
int3
pop
pop
adc
adc
adc
imul
add
or
add
(bad)
(bad)
(bad)
jmp
shl
and
cmc
lods
add
push
sub
mov
add
add
push
dec
popf
add
je
add
dec
sahf
add
or
add
inc
inc
push
inc
dec
mov
dec
add
push
lahf
add
push
mov
mov
mov
add
or
add
or
add
or
add
add
or
push
mov
push
movs
add
push
movs
add
or
add
add
or
push
cmps
add
mov
push
cmps
add
mov
dec
test
and
mov
add
push
adc
cmp
add
add
fnstsw
xor
xor
shl
inc
and
sbb
add
push
dec
stos
add
popa
add
add
push
stos
add
or
add
or
add
inc
dec
mov
dec
add
push
lods
add
push
lods
add
or
add
or
add
add
or
push
scas
add
dec
scas
add
into
retf
add
push
push
mov
adc
push
mov
dec
add
add
or
and
xchg
out
dec
mov
pop
inc
dec
mov
and
add
dec
mov
add
mov
ret
pop
adc
adc
int3
xchg
pushf
and
xor
xor
sub
add
push
dec
mov
and
push
mov
dec
add
mov
add
inc
push
inc
dec
mov
dec
add
push
mov
adc
push
mov
add
or
add
add
or
and
xor
xor
out
dec
mov
mov
mov
add
or
add
add
or
and
mov
add
push
push
mov
int3
pop
pop
adc
adc
adc
imul
add
or
add
mov
(bad)
call
inc
and
add
pop
bound
push
push
mov
add
dec
mov
add
aas
add
add
add
inc
dec
mov
dec
add
push
rol
dec
rol
or
add
or
add
add
or
pop
das
dec
ret
xchg
add
add
push
ret
add
xor
adc
push
lds
dec
add
add
cmp
push
mov
ficomp
add
push
mov
cmp
add
add
and
stos
add
push
push
and
aad
inc
pop
daa
pop
adc
push
dec
enter
add
add
push
leave
add
or
add
push
add
add
add
inc
dec
mov
dec
add
push
retf
or
add
add
or
pop
inc
dec
retf
add
mov
push
int3
add
push
int
adc
push
into
add
or
add
or
add
add
or
and
data16
inc
jmp
add
or
rol
and
data16
sub
inc
dec
rol
add
mov
ret
pop
adc
adc
int3
xchg
pushf
pop
push
and
mov
add
push
dec
rol
and
add
add
push
rol
dec
add
cdq
add
add
add
inc
dec
mov
dec
add
push
aam
dec
add
add
or
and
add
dec
aad
adc
push
(bad)
add
or
add
add
or
pop
jne
push
xlat
add
dec
fadd
pop
ja
push
fld
add
adc
pop
pop
adc
adc
adc
imul
add
or
add
sar
(bad)
call
push
inc
and
add
add
push
sub
push
dec
fiadd
and
add
add
push
fild
dec
add
push
inc
push
inc
dec
mov
dec
add
push
fadd
adc
push
fld
dec
xor
add
dec
add
or
add
or
add
add
or
pop
dec
dec
fild
adc
push
loopne
dec
add
add
or
pop
outs
dec
loope
push
dec
loop
and
add
dec
jecxz
add
adc
cmp
add
add
and
data16
inc
and
add
add
nop
mov
cmc
mov
jno
add
dec
in
and
push
in
dec
add
inc
dec
mov
dec
add
push
out
dec
add
add
or
and
add
dec
out
adc
push
call
add
add
or
and
push
jmp
adc
and
adc
int3
xchg
pushf
and
sub
add
pop
jb
add
add
mov
call
add
push
dec
jmp
dec
jmp
dec
add
sti
add
add
add
inc
dec
mov
dec
add
push
in
add
push
in
add
or
add
or
add
add
or
and
xor
xor
push
out
add
push
out
add
push
lock
push
icebp
add
or
add
or
add
or
add
add
or
push
repnz
push
lods
add
dec
repz
scas
movs
add
dec
hlt
add
add
int3
pop
pop
adc
adc
adc
imul
add
or
add
sar
jmp
ss
add
push
dec
cmc
add
xchg
add
add
push
test
or
add
pop
add
add
add
inc
dec
mov
dec
add
push
test
outs
inc
add
or
and
movs
add
dec
clc
add
push
stc
add
push
cli
add
or
add
or
add
add
or
and
add
add
push
sti
add
test
add
push
cld
add
data16
inc
dec
std
add
push
adc
cmp
add
add
pop
dec
push
pop
push
sub
add
dec
inc
and
add
dec
inc
dec
add
sbb
add
inc
dec
mov
dec
add
push
add
dec
add
add
or
and
pusha
add
dec
add
pop
dec
add
and
int3
int3
int3
cld
dec
out
dec
add
adc
push
add
dec
add
add
or
and
mov
add
add
dec
push
add
adc
adc
adc
xchg
pushf
and
add
pop
or
push
dec
pop
add
jl
add
dec
or
dec
add
rol
add
inc
push
inc
dec
mov
dec
add
push
or
adc
push
or
dec
xor
add
dec
add
or
add
or
add
add
or
pop
dec
or
adc
push
or
add
add
or
and
cmp
inc
dec
push
add
add
int3
pop
pop
adc
adc
adc
inc
push
mov
dec
add
in
(bad)
call
pop
push
and
int3
int3
int3
int3
shl
sub
add
push
dec
lar
sub
add
dec
adc
dec
add
mov
add
inc
dec
mov
dec
add
push
adc
adc
push
adc
push
dec
adc
dec
add
or
add
or
add
add
or
and
inc
inc
dec
adc
adc
push
adc
add
add
or
and
retf
dec
push
add
lahf
stos
add
dec
pop
add
call
inc
dec
sbb
add
adc
cmp
add
add
push
pop
js
int
int3
int3
fdiv
inc
sub
add
push
dec
sbb
and
push
sbb
dec
add
mov
add
inc
dec
mov
dec
add
push
sbb
dec
add
add
or
and
add
dec
sbb
and
add
add
push
sbb
add
push
push
push
add
push
pop
add
push
and
dec
xor
add
dec
add
or
add
or
add
add
or
pop
dec
and
add
mov
ret
pop
adc
adc
and
add
push
push
add
push
dec
and
and
push
and
dec
add
cmps
add
add
add
inc
dec
mov
dec
add
push
and
add
add
or
and
push
add
push
daa
add
push
sub
dec
add
or
add
add
or
and
push
aas
inc
dec
sub
add
adc
pop
pop
adc
adc
adc
dec
mov
dec
add
(bad)
(bad)
jmp
call
inc
and
test
inc
and
add
push
mov
sub
add
dec
sub
and
add
add
push
sub
dec
add
pop
add
add
add
inc
dec
mov
dec
add
push
sub
adc
push
sub
add
or
add
add
or
push
add
addr16
add
dec
das
add
push
scas
add
dec
xor
adc
push
xor
adc
push
xor
dec
add
or
add
add
or
and
add
push
xor
add
adc
cmp
add
and
mov
add
cmp
outs
and
mov
add
sub
add
dec
xor
and
add
push
xor
add
ret
add
add
inc
dec
mov
dec
add
push
ss
or
add
add
or
and
push
aaa
add
push
cmp
dec
add
add
or
pop
jns
push
cmp
and
int3
int3
int3
dec
mov
inc
dec
cmp
and
add
add
push
cmp
add
mov
ret
pop
adc
adc
and
jno
add
jge
add
push
out
inc
inc
sub
add
push
dec
cmp
pop
pop
dec
cmp
add
ja
add
inc
push
inc
dec
mov
dec
add
push
add
push
aas
add
or
push
add
add
push
inc
add
dec
inc
add
dec
inc
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
and
test
inc
add
push
inc
add
or
add
add
or
and
add
push
push
inc
add
dec
mov
add
push
inc
add
dec
dec
add
add
int3
pop
pop
adc
adc
adc
dec
mov
dec
add
cmps
(bad)
(bad)
call
sub
add
push
dec
dec
add
push
push
dec
add
or
add
jp
add
inc
dec
mov
dec
add
push
dec
add
push
dec
add
or
add
or
add
add
or
push
dec
dec
add
push
dec
add
or
add
add
or
and
push
dec
add
aad
add
dec
push
add
dec
mov
push
push
add
push
adc
cmp
add
add
and
pop
dec
pop
adc
daa
mov
mov
add
xor
add
dec
push
add
cmp
add
dec
push
add
or
add
fwait
add
add
add
inc
dec
mov
dec
add
push
push
add
or
add
add
or
pop
xor
push
push
add
push
push
add
or
add
add
or
pop
dec
push
add
push
stos
add
push
push
pop
add
mov
dec
pop
add
adc
adc
adc
and
add
add
out
pop
outs
pop
js
sbb
add
dec
pop
add
push
add
dec
pop
add
or
add
jecxz
add
inc
push
inc
dec
mov
dec
add
push
pop
add
push
pop
add
or
add
or
add
add
or
and
stos
add
dec
pop
add
push
pop
add
or
add
add
or
and
mov
push
push
pusha
add
add
int3
pop
pop
adc
adc
adc
dec
mov
dec
add
in
(bad)
jmp
mov
add
sub
add
dec
popa
add
or
push
bound
dec
add
clc
add
add
add
inc
dec
mov
dec
add
push
arpl
adc
push
fs
or
xor
add
dec
add
or
add
or
add
add
or
and
mov
push
data16
dec
add
and
add
push
push
imul
add
or
add
or
add
add
or
and
jae
add
push
imul
push
adc
cmp
add
add
and
add
push
sub
add
dec
ins
add
or
add
dec
ins
add
or
add
aaa
add
add
add
inc
dec
mov
dec
add
push
outs
add
push
outs
add
or
add
or
add
add
or
push
jo
and
dec
jno
adc
push
jb
dec
add
add
or
pop
dec
jae
pop
dec
je
add
mov
ret
pop
adc
adc
and
les
add
and
stos
add
push
add
push
dec
jne
and
add
add
push
jbe
dec
add
sbb
add
inc
push
inc
dec
mov
dec
add
push
ja
adc
push
js
dec
add
or
add
add
or
push
jns
and
push
jp
pop
cmp
push
jnp
adc
push
jl
adc
push
jge
dec
add
or
add
add
or
and
pop
sub
push
jle
and
inc
inc
dec
jg
and
rol
push
push
add
add
int3
pop
pop
adc
adc
adc
dec
mov
dec
add
retf
(bad)
(bad)
jmp
lods
xor
das
add
push
dec
add
add
push
add
or
add
xor
add
inc
push
inc
dec
mov
dec
add
push
add
dec
test
dec
add
or
add
add
or
and
push
test
adc
push
xchg
adc
push
xchg
dec
add
or
add
add
or
pop
dec
mov
and
add
add
push
mov
and
int3
add
push
push
mov
add
adc
cmp
add
add
and
sub
push
pop
pop
sub
add
push
dec
mov
and
add
add
push
mov
dec
add
xchg
add
add
add
inc
dec
mov
dec
add
push
lea
adc
push
mov
push
dec
pop
dec
add
or
add
add
or
and
add
dec
nop
add
dec
xchg
add
push
xchg
add
or
add
add
or
push
dec
xchg
add
adc
adc
adc
inc
mov
add
push
mov
add
pop
add
push
dec
xchg
add
fiadd
add
dec
xchg
add
or
add
pop
inc
push
inc
dec
mov
dec
add
push
xchg
add
or
add
add
or
and
add
dec
xchg
add
push
cwde
add
or
add
add
or
and
add
push
push
cdq
add
inc
dec
call
pop
adc
adc
adc
push
mov
dec
add
repz
(bad)
jmp
hlt
ret
add
and
xor
add
dec
fwait
add
std
add
add
push
pushf
add
or
add
js
add
inc
push
inc
dec
mov
dec
add
push
popf
add
or
add
add
or
and
mov
add
push
sahf
add
adc
add
dec
lahf
add
xor
add
dec
mov
mov
add
add
or
pop
push
dec
mov
and
add
and
inc
mov
and
push
add
sub
add
add
fsubr
add
add
or
inc
and
and
scas
add
push
pop
add
push
dec
mov
add
dec
movs
add
or
add
mov
add
inc
dec
mov
dec
add
push
movs
add
or
add
add
or
and
push
cmps
add
push
cmps
add
push
test
dec
add
or
add
add
or
pop
jne
push
test
add
push
push
stos
add
push
push
stos
add
pop
dec
sub
add
dec
lods
add
add
add
push
lods
add
or
add
mov
add
inc
push
inc
dec
mov
dec
add
push
scas
add
or
add
add
or
and
push
scas
add
(bad)
mov
mov
adc
push
mov
dec
add
add
or
and
lods
add
dec
mov
add
jmp
add
push
data16
out
and
cmps
add
push
inc
mov
add
pop
add
push
dec
mov
and
add
dec
mov
dec
add
mov
add
inc
push
inc
dec
mov
dec
add
push
mov
adc
push
mov
dec
add
add
or
pop
push
dec
mov
pop
push
dec
mov
mov
mov
mov
add
or
add
or
add
add
or
push
mov
add
dec
mov
imul
add
push
int
cmp
pop
add
push
dec
mov
add
dec
mov
add
jb
add
inc
push
inc
dec
mov
dec
add
push
rol
or
add
add
or
push
rol
fwait
mov
ret
dec
ret
add
push
les
dec
add
or
add
add
or
and
scas
add
push
push
lds
and
movs
add
dec
mov
adc
dec
mov
pop
ins
and
add
and
add
push
outs
add
push
dec
enter
add
add
push
leave
add
or
add
test
add
inc
push
inc
dec
mov
dec
add
jmp
add
add
push
retf
dec
retf
add
or
add
or
add
add
or
and
add
inc
dec
int3
add
lods
mov
add
push
int
adc
push
into
add
push
iret
add
or
add
or
add
add
or
push
rol
and
dec
rol
adc
push
rol
adc
push
rol
adc
push
aam
dec
add
or
add
or
add
add
or
and
aad
and
push
(bad)
add
add
xlat
add
push
fadd
dec
add
add
or
and
push
fld
adc
push
fiadd
dec
add
add
or
push
fild
and
dec
fadd
and
add
push
push
fld
and
push
fiadd
adc
push
fild
adc
push
loopne
dec
add
or
add
add
or
pop
dec
dec
loope
and
test
add
push
loop
adc
push
jecxz
dec
add
add
or
and
dec
in
adc
push
in
adc
push
out
dec
add
add
or
pop
jle
push
out
adc
push
call
jmp
add
or
add
add
or
push
jmp
dec
jmp
pop
push
dec
in
add
mov
in
add
push
out
add
or
add
add
or
and
mov
add
push
out
add
ins
dec
lock
push
icebp
add
push
repnz
or
add
or
add
add
or
and
mov
add
push
repz
push
hlt
add
or
add
add
or
and
dec
cmc
add
inc
dec
test
xor
inc
inc
dec
test
add
or
add
add
or
and
mov
add
push
stc
add
push
cli
add
push
sti
add
or
add
or
add
add
or
push
cld
add
retf
retf
add
push
push
std
add
push
inc
dec
add
add
or
and
add
add
push
inc
and
add
dec
add
adc
push
add
adc
push
add
dec
add
or
add
add
or
and
cmps
add
dec
add
adc
push
add
dec
add
add
or
and
int3
int3
int3
dec
ret
in
dec
add
push
add
push
pop
add
push
or
dec
add
or
add
or
add
add
or
and
push
or
adc
push
or
dec
add
add
or
and
xor
xor
sbb
inc
dec
or
pop
inc
dec
or
adc
push
or
push
add
or
xor
add
dec
add
or
add
add
or
sbb
push
adc
and
test
add
push
adc
and
push
adc
adc
push
adc
adc
push
adc
dec
add
or
add
add
or
and
movs
add
dec
adc
push
add
push
pop
add
dec
sbb
dec
add
or
add
or
add
add
or
push
sbb
and
push
sbb
and
push
sbb
and
add
add
push
sbb
adc
push
sbb
add
add
or
and
mov
push
add
int
cs
dec
pop
add
push
and
adc
push
and
adc
push
and
dec
add
or
add
or
add
add
or
push
and
and
push
and
and
add
dec
and
add
dec
add
push
daa
add
or
add
add
or
and
add
add
push
sub
and
add
dec
sub
and
add
push
push
sub
add
dec
add
add
or
push
lea
push
dec
mov
cmp
or
add
or
add
add
jns
dec
mov
sbb
add
dec
sub
and
push
sub
add
mov
add
inc
push
inc
dec
mov
dec
add
push
add
dec
das
add
or
add
or
add
add
or
pop
dec
dec
xor
and
push
add
dec
xor
adc
push
xor
adc
push
xor
adc
push
xor
dec
add
or
add
or
add
add
or
push
xor
data16
cmp
add
dec
retf
add
push
push
aaa
add
pop
dec
cmp
add
or
add
add
jo
pop
add
or
push
cmp
and
movs
add
and
and
and
test
add
sub
add
push
dec
cmp
and
add
dec
cmp
dec
add
mov
add
inc
dec
mov
dec
add
push
cmp
adc
push
cmp
add
or
add
add
or
push
add
sbb
es
dec
aas
add
push
inc
add
or
add
add
or
push
dec
inc
add
mov
add
dec
inc
add
and
aas
and
je
add
std
add
add
inc
add
push
dec
inc
add
add
push
inc
add
or
add
and
add
inc
push
inc
dec
mov
dec
add
push
inc
add
push
inc
add
push
inc
add
or
add
or
add
or
add
add
or
push
dec
add
push
dec
dec
add
push
dec
add
or
add
add
or
and
data16
jp
inc
dec
dec
add
dec
dec
add
dec
dec
add
add
pop
mov
add
sbb
dec
inc
and
leave
add
and
sub
sub
add
dec
dec
add
sbb
push
dec
add
or
add
or
add
inc
push
inc
dec
mov
dec
add
push
push
add
or
add
add
or
and
dec
push
add
cmps
pop
add
dec
push
add
sbb
push
push
add
push
push
add
push
push
add
or
add
or
add
add
or
push
push
add
mov
dec
push
add
push
lea
add
add
push
pop
add
and
mov
stos
add
push
add
xor
add
dec
pop
add
xchg
add
dec
pop
add
or
add
ins
add
add
add
inc
dec
mov
dec
add
push
pop
add
push
pop
add
or
add
or
add
add
or
and
mov
add
push
pop
add
add
add
loopne
out
dec
pop
add
call
push
pop
add
push
pusha
add
push
popa
add
or
add
or
add
add
or
push
bound
pop
inc
dec
arpl
pop
dec
add
add
add
mov
push
add
dec
add
or
add
add
or
pop
cmp
dec
ret
pop
inc
and
add
and
add
push
dec
add
push
dec
add
mov
add
dec
addr16
or
add
pop
add
add
add
inc
dec
mov
dec
add
push
push
imul
dec
add
add
or
push
push
push
dec
imul
call
inc
dec
ins
add
push
ins
add
or
add
add
or
and
add
dec
outs
add
add
xchg
add
add
add
call
inc
and
push
add
push
dec
outs
add
test
add
push
jo
dec
add
sbb
add
inc
push
inc
dec
mov
dec
add
push
jno
dec
add
add
or
and
add
dec
jb
pop
imul
jae
and
push
je
adc
push
jne
adc
push
jbe
dec
add
add
or
and
pop
add
dec
ja
and
add
push
push
js
add
fiadd
add
les
and
add
sub
add
push
dec
jns
and
add
dec
jp
dec
add
dec
inc
push
inc
dec
mov
dec
add
push
jnp
dec
add
add
or
and
push
jl
adc
push
jge
dec
add
and
push
jle
and
push
jg
add
dec
add
pop
dec
mov
dec
add
or
add
push
mov
dec
add
xor
(bad)
call
sub
add
dec
add
loop
add
dec
add
and
add
add
add
inc
dec
mov
dec
add
push
add
dec
add
dec
test
dec
add
or
add
or
add
add
or
push
test
and
add
push
push
xchg
and
rol
dec
xchg
and
leave
add
push
push
mov
adc
push
mov
adc
push
mov
dec
add
or
add
add
or
and
int3
int3
int3
mov
push
mov
add
add
inc
sbb
add
add
add
sub
add
or
add
xchg
add
add
add
add
xor
add
add
add
add
add
sbb
and
les
add
and
add
or
xchg
add
add
add
add
add
xor
add
add
add
retf
add
and
mov
add
add
push
or
xchg
add
add
pop
and
add
inc
adc
jae
xor
adc
or
add
or
and
add
or
adc
add
add
add
or
and
stos
add
push
pop
pop
adc
add
adc
pop
cmp
and
int3
int3
int3
in
(bad)
out
sub
add
adc
and
or
or
dec
add
add
add
inc
adc
jae
add
or
or
sldt
or
and
inc
inc
adc
push
outs
sldt
or
and
mov
add
(bad)
cmp
add
add
add
pop
adc
and
mov
ins
mov
add
push
adc
and
add
adc
adc
and
add
add
add
inc
adc
jae
aas
add
adc
adc
adc
adc
or
add
and
adc
inc
adc
adc
sbb
sbb
add
or
and
adc
and
xor
xor
das
out
adc
add
adc
xchg
adc
and
pop
sub
add
push
adc
in
add
adc
add
add
add
inc
adc
jae
add
push
adc
pop
adc
adc
outs
add
or
and
sub
and
and
and
adc
and
and
add
or
and
add
adc
add
or
pop
xchg
pushf
and
in
inc
push
sub
add
push
adc
and
add
adc
adc
and
add
inc
push
inc
adc
jae
cmp
adc
sub
sub
add
or
sub
imul
adc
sub
sub
add
or
pop
jg
das
and
add
push
xor
add
or
pop
adc
pushf
and
pop
and
sub
add
adc
and
add
adc
adc
and
add
add
inc
adc
jae
push
add
xor
xor
xor
add
adc
adc
xor
or
and
add
adc
and
cmps
add
push
aaa
and
add
cmp
cmp
cmp
add
or
cmp
lods
add
add
cmp
js
cmp
jecxz
add
adc
fs
bound
add
push
mov
and
add
add
jae
add
and
add
sub
add
adc
and
aas
adc
and
add
add
add
inc
adc
jae
sub
adc
adc
add
and
addr16
inc
adc
adc
inc
outs
sbb
and
and
add
adc
add
add
int
xor
lods
pop
add
pop
pop
sub
add
adc
inc
add
add
inc
adc
xor
add
inc
push
inc
adc
jae
add
inc
adc
dec
adc
dec
outs
or
add
and
adc
(bad)
mov
add
dec
and
stos
cmp
dec
adc
dec
adc
add
or
and
add
add
dec
pop
adc
dec
add
mov
lea
adc
and
xor
xor
xchg
push
add
and
add
adc
add
add
adc
push
and
add
add
add
inc
adc
jae
xor
adc
push
adc
sldt
or
pop
sub
push
adc
push
adc
push
adc
push
outs
or
add
and
add
adc
cmps
rol
push
push
add
pop
jp
add
add
int
int3
int3
fcomp
inc
pop
push
and
add
pop
push
and
mov
add
adc
mov
add
adc
pop
and
add
inc
push
inc
adc
jae
inc
add
pop
adc
pop
adc
pop
outs
push
add
adc
push
rol
adc
add
adc
adc
pop
outs
adc
add
and
add
add
jp
inc
adc
test
and
popa
add
or
pop
adc
pop
inc
pop
and
jae
add
enter
push
adc
add
adc
mov
arpl
arpl
ins
add
add
add
inc
adc
jae
add
adc
add
or
and
mov
adc
adc
adc
add
es
adc
inc
adc
add
or
inc
push
inc
adc
jae
cld
sti
(bad)
call
dec
pop
jno
mov
pop
jo
add
push
sub
add
adc
mov
push
push
test
add
add
inc
adc
jae
add
imul
adc
ins
outs
add
or
ins
pop
outs
adc
(bad)
scas
add
adc
adc
jo
imul
or
jno
sbb
jb
sub
add
xor
add
add
add
add
add
sbb
xor
xor
and
pop
or
add
add
add
add
xor
add
add
add
adc
push
or
jae
add
or
inc
or
or
add
adc
add
adc
add
pop
add
adc
and
stos
add
or
shl
or
or
add
sub
adc
add
adc
add
jne
add
add
pop
mov
rol
add
or
or
add
sub
adc
add
sbb
add
jbe
add
add
and
add
push
pop
imul
mov
add
or
add
add
add
adc
add
or
add
ja
add
add
push
push
or
or
add
sub
xor
add
add
add
add
add
mov
cmp
and
and
add
or
or
or
add
add
add
add
add
xor
add
add
add
add
add
dec
nop
das
inc
or
push
or
int
inc
inc
or
or
add
add
add
adc
add
sbb
add
adc
and
mov
out
mov
jbe
add
or
or
add
add
add
add
xor
add
add
add
add
add
popa
test
addr16
or
or
add
sub
adc
add
add
add
add
jae
and
data16
shr
sub
add
or
in
add
or
and
add
add
add
inc
adc
sub
adc
or
outs
or
add
and
(bad)
inc
inc
adc
adc
add
add
or
and
adc
and
add
add
or
addr16
adc
add
je
add
add
mov
cs
pop
or
inc
pop
add
pop
jg
inc
add
push
adc
and
add
adc
adc
pop
inc
push
inc
adc
sub
or
or
sldt
or
pop
inc
adc
add
push
adc
unpcklps
adc
movups
outs
sub
add
es
outs
adc
add
or
xor
xor
mov
jg
add
sub
add
push
adc
and
add
pop
je
mov
add
sub
adc
sbb
das
inc
pop
jg
aas
push
add
and
add
add
inc
add
push
adc
push
and
sub
pop
or
and
push
adc
add
bound
add
xor
ss
and
xor
xor
push
call
add
adc
and
xor
xor
shr
add
and
add
adc
and
mov
add
mov
add
sub
add
adc
and
xor
xor
add
push
adc
and
mov
and
ds
inc
sub
add
push
adc
and
cmp
or
sub
add
adc
and
add
sub
add
adc
data16
out
pop
sub
add
push
adc
add
dec
mov
add
pusha
add
push
adc
and
mov
add
int
int3
int3
jl
call
add
adc
and
mov
and
add
add
outs
pop
inc
sub
add
adc
and
add
push
hlt
imul
add
push
mov
add
push
inc
test
add
jne
add
adc
and
add
add
out
push
sub
add
push
adc
and
add
and
mov
add
push
adc
and
add
pop
adc
sub
add
adc
pop
mov
add
push
and
leave
add
sub
add
push
adc
add
fcmovb
add
push
call
add
pop
outs
sub
add
adc
and
scas
add
and
add
push
push
sub
add
adc
and
sbb
sub
add
add
loopne
call
add
sub
add
adc
and
mov
add
jns
add
and
mov
add
add
xor
xor
mov
jmp
add
adc
and
push
add
add
int
inc
inc
and
add
push
sub
add
push
adc
and
mov
add
push
out
das
inc
and
push
sub
add
adc
pop
sub
add
adc
add
call
inc
and
test
mov
sub
push
adc
and
int3
int3
int3
lods
add
inc
pop
sub
add
push
adc
and
jle
add
adc
pop
cmp
dec
ret
push
and
add
add
xchg
push
add
adc
pop
pop
sub
push
adc
and
mov
add
and
add
add
add
add
add
out
inc
inc
sub
add
adc
and
add
push
pop
pop
push
sub
xor
pop
dec
and
lds
add
and
add
push
xor
add
adc
scas
jo
add
das
cmps
add
push
adc
add
adc
and
add
push
sbb
pop
pop
ja
pop
add
push
adc
and
ret
pop
sbb
dec
fidiv
inc
and
das
inc
and
xor
xor
and
add
adc
and
xor
inc
inc
sub
add
push
adc
and
retf
add
and
lods
add
and
mov
pop
js
xor
add
adc
and
mov
add
add
add
xor
sub
pop
pop
and
sub
add
adc
and
cmps
add
and
xor
add
adc
push
stos
add
push
gs
fnstenv
inc
pop
pop
and
sub
add
adc
cdq
mov
sub
add
push
adc
and
int3
int3
int3
pop
mov
inc
and
add
push
adc
and
add
sub
add
adc
and
pop
add
and
add
pop
and
add
push
adc
out
sub
jae
add
adc
mov
and
add
adc
add
adc
add
sbb
add
jl
add
add
ja
add
or
in
add
add
and
add
add
or
add
add
xor
add
add
add
add
add
call
or
and
or
add
xor
add
add
add
add
add
and
and
or
add
icebp
mov
adc
add
add
add
xor
add
add
add
add
add
add
das
inc
or
dec
or
xchg
add
or
or
add
adc
add
adc
add
add
adc
and
or
ja
pop
inc
or
or
adc
add
adc
add
add
imul
and
mov
or
add
sub
xor
add
add
add
add
add
int
ss
or
int
xor
sub
or
add
xor
add
add
add
push
or
or
sbb
jae
or
add
add
add
add
xor
add
add
add
adc
and
push
add
or
cmp
pop
mov
add
and
scas
add
push
or
add
add
add
adc
add
sbb
add
test
add
add
xchg
mov
adc
mov
add
or
or
add
add
xor
add
add
add
and
push
add
or
and
jne
add
adc
adc
or
outs
or
add
es
add
add
push
push
pop
push
add
adc
add
add
add
sbb
add
sbb
add
xor
add
xchg
add
add
mov
add
mov
and
mov
adc
add
adc
push
add
or
add
add
add
push
push
pop
push
add
adc
add
add
add
and
add
sbb
add
xor
add
xchg
add
add
and
add
or
and
mov
pop
sub
or
adc
sbb
add
adc
add
fiadd
add
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
and
add
or
and
add
add
adc
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
xor
add
mov
add
add
mov
add
or
and
add
or
lods
rol
or
or
add
sldt
or
add
add
add
push
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
and
add
and
adc
adc
or
outs
adc
add
adc
fiadd
add
push
push
pop
push
adc
add
add
add
add
sbb
add
sub
add
mov
add
add
cmp
add
add
inc
or
or
add
or
add
add
add
push
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
mov
add
or
adc
or
jge
add
or
adc
outs
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
sub
add
sbb
add
add
add
and
add
or
and
adc
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
sub
add
mov
add
add
xchg
add
add
add
call
leave
add
or
or
add
es
add
add
push
push
pop
push
add
add
pop
add
and
add
sbb
add
cmp
add
pop
add
add
mov
add
xor
xor
ror
in
or
mov
push
or
adc
outs
or
add
es
add
add
push
push
pop
push
add
adc
add
add
add
sub
add
sbb
add
das
add
add
and
add
dec
or
cmps
mov
add
or
adc
outs
add
or
add
add
fiadd
add
push
pop
push
adc
add
add
add
add
sbb
add
das
add
add
and
push
add
or
and
add
add
in
or
or
add
or
add
add
add
push
push
pop
push
adc
add
add
add
add
sbb
add
sub
add
adc
and
pop
add
or
and
add
or
daa
mov
add
adc
or
add
or
add
add
add
push
push
pop
push
add
adc
add
add
add
and
add
sbb
add
cmp
add
xchg
add
adc
and
add
or
and
jae
add
and
ret
push
and
add
push
adc
add
adc
outs
or
add
es
add
add
push
push
pop
push
adc
add
add
add
das
add
sbb
add
aaa
add
add
aaa
add
add
add
dec
or
stos
test
and
add
add
adc
outs
or
add
es
add
add
push
push
pop
push
adc
add
add
add
add
sbb
add
sub
add
xchg
add
adc
and
add
or
push
or
int
int3
int3
pop
ins
out
or
or
add
es
add
add
push
push
pop
push
add
add
pop
add
and
add
sbb
add
cmp
add
xchg
add
adc
and
add
or
and
xor
or
or
adc
adc
add
add
or
add
add
add
push
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
and
push
add
or
push
or
cmp
or
jg
adc
add
adc
outs
and
add
adc
add
add
add
push
push
pop
push
adc
add
add
add
daa
add
sbb
add
add
add
and
add
add
add
dec
or
adc
or
outs
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
daa
add
add
and
add
add
add
and
adc
or
add
or
add
fiadd
add
push
pop
push
adc
add
add
add
add
sbb
add
sub
add
call
pop
add
or
pop
jle
adc
adc
push
adc
or
add
jno
add
add
fiadd
add
push
push
pop
push
adc
add
add
add
pop
add
sbb
add
xor
add
fwait
add
adc
and
pop
add
or
and
add
or
pop
mov
pop
cmp
add
sldt
or
add
add
add
push
push
pop
push
add
add
add
pop
add
add
sbb
add
and
add
pushf
add
adc
and
add
pop
push
or
or
add
or
add
add
add
push
push
pop
push
adc
add
add
add
pop
add
sbb
add
xor
add
adc
and
and
arpl
add
and
add
push
and
adc
add
add
adc
add
es
add
add
push
push
pop
push
add
adc
add
add
add
sub
add
sbb
add
add
add
and
push
add
or
and
add
add
pop
or
or
adc
jae
add
adc
add
fiadd
add
push
pop
push
add
add
add
pop
add
and
add
sbb
add
add
add
and
push
add
or
and
add
or
jp
adc
adc
add
adc
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
and
add
sbb
add
xor
add
mov
and
add
or
and
adc
push
adc
adc
add
or
push
add
add
add
push
push
pop
push
add
add
pop
add
sub
add
sbb
add
xor
add
mov
and
add
and
and
add
or
leave
lods
add
or
add
jne
add
add
fiadd
add
push
push
pop
push
add
add
pop
add
sub
add
sbb
add
cmp
add
mov
and
pop
add
or
pop
push
and
add
push
adc
adc
add
adc
adc
add
add
or
pop
add
add
add
push
push
pop
push
add
add
add
pop
add
add
sbb
add
xor
add
mov
and
add
add
add
(bad)
mov
adc
adc
push
adc
or
add
jbe
add
adc
add
fiadd
add
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
imul
mov
or
or
add
or
add
add
add
push
push
pop
push
adc
add
add
add
add
sbb
add
add
add
and
add
mov
add
push
and
add
push
and
add
or
add
ins
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sub
add
sbb
add
add
add
and
add
scas
scas
add
or
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
sub
add
cmps
add
adc
and
push
add
or
and
add
add
adc
adc
or
outs
push
add
or
add
add
add
push
push
pop
push
add
adc
add
add
add
sbb
add
sbb
add
xor
add
test
add
add
rol
add
add
inc
mov
add
and
mov
add
or
adc
sbb
add
adc
add
fiadd
add
push
pop
push
add
add
add
pop
add
add
sbb
add
xor
add
test
and
add
add
add
or
jb
adc
adc
add
adc
add
or
add
add
add
push
push
pop
push
add
add
pop
add
add
add
xor
add
add
add
and
add
or
and
add
or
mov
or
or
adc
or
add
es
add
add
push
push
pop
push
add
add
add
pop
add
add
sbb
add
xor
add
stos
add
adc
and
add
add
add
pop
or
or
push
mov
add
adc
add
adc
outs
or
add
es
add
add
push
push
pop
push
adc
add
add
add
daa
add
sbb
add
add
add
add
add
or
and
outs
add
or
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
add
add
and
add
cld
les
add
adc
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
sbb
add
sbb
add
sub
add
scas
add
adc
and
add
or
and
add
push
adc
adc
or
outs
ja
add
es
add
add
push
push
pop
push
add
add
add
pop
add
push
add
sbb
add
sub
add
scas
add
adc
and
pop
add
or
and
inc
sub
adc
adc
or
outs
sbb
add
adc
fiadd
add
push
push
pop
push
add
add
add
pop
add
push
add
sbb
add
sub
add
adc
and
add
(bad)
cmps
add
push
and
cmps
xor
or
or
add
es
add
add
push
push
pop
push
add
adc
add
add
add
and
add
sbb
add
sub
add
mov
add
add
fs
and
scas
add
or
adc
or
outs
xor
add
adc
fiadd
add
push
push
pop
push
add
add
add
pop
add
push
add
sbb
add
xor
add
mov
add
add
cs
add
or
pop
pop
or
jecxz
add
or
or
adc
add
or
push
add
add
add
push
push
pop
push
add
add
pop
add
sub
add
sbb
add
cmp
add
adc
and
add
add
add
push
or
or
add
add
or
adc
adc
adc
add
outs
js
add
adc
add
add
add
push
push
pop
push
add
adc
add
add
add
xor
add
sbb
add
and
add
mov
add
add
cdq
add
add
add
or
or
add
or
add
add
add
push
push
pop
push
add
add
add
pop
add
push
add
sbb
add
add
add
and
push
add
or
pop
or
int
int3
int3
pop
mov
jmp
add
push
adc
add
add
jp
add
adc
add
fiadd
add
push
pop
push
add
add
add
pop
add
sub
add
sbb
add
add
add
and
add
or
pop
sbb
pop
inc
or
or
adc
adc
add
add
or
pop
add
add
add
push
push
pop
push
add
add
add
pop
add
sub
add
sub
sub
add
add
add
add
xor
add
add
add
jle
add
add
sub
add
push
inc
or
sub
add
jo
inc
add
add
jg
add
outs
add
or
add
or
push
add
add
jle
add
add
sub
pop
sub
adc
add
or
add
mov
jle
add
add
sub
push
sub
add
add
add
adc
add
and
add
mov
sub
das
add
jo
add
add
add
or
push
je
add
add
sub
pop
sub
add
adc
add
and
add
mov
sub
cmp
add
add
add
or
push
je
add
add
sub
pop
sub
add
add
add
adc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
xchg
lods
std
movs
loopne
mov
sbb
add
add
add
pop
add
add
inc
add
je
je
add
jae
add
add
add
add
add
add
add
popa
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
aas
in
ror
stos
dec
sub
icebp
adc
push
inc
int
out
outs
pusha
xchg
fcomip
or
mov
out
cvttps2pi
add
mov
jb
jp
mov
add
push
add
inc
sbb
call
or
call
push
pop
jmp
add
sar
sbb
push
or
call
adc
call
dec
dec
sbb
clc
push
push
push
push
call
outs
jmp
sbb
xchg
(bad)
icebp
jmp
sar
inc
outs
jmp
and
(bad)
sti
or
push
or
call
sbb
call
adc
xor
cs
jmp
or
sub
and
lods
jmp
pop
mov
push
or
(bad)
out
add
jmp
or
xor
dec
jmp
xchg
call
or
push
add
jmp
cld
push
(bad)
cmp
dec
(bad)
fcomp
cmp
ins
sbb
push
or
call
jmp
or
jmp
push
lods
push
adc
retf
(bad)
aas
sbb
dec
(bad)
jmp
adc
jmp
pop
sar
cld
cmp
and
add
pop
dec
jmp
add
inc
add
(bad)
jp
adc
ja
cmp
std
inc
push
sbb
jg
aad
das
or
xchg
add
pop
(bad)
cmp
pop
xchg
aaa
sbb
push
(bad)
scas
inc
sbb
dec
pop
mov
inc
pop
jb
sub
cld
(bad)
fisttp
sbb
fld
scas
inc
add
pop
add
mov
jmp
or
inc
push
mov
mov
mov
outs
sti
mov
fcom
pop
inc
adc
jmp
add
push
adc
jmp
(bad)
jmp
adc
or
dec
(bad)
xor
jl
sub
(bad)
adc
jmp
adc
jmp
adc
sbb
pop
adc
jmp
add
movs
dec
pop
mov
add
or
dec
sbb
jmp
call
push
xor
xchg
adc
call
sub
adc
dec
push
or
inc
loope
dec
add
jmp
push
jp
mov
retf
add
hlt
pop
mov
inc
sbb
xor
nop
jmp
cmp
xor
iret
jmp
std
cmp
push
call
sbb
and
fdivr
lea
jne
iret
push
sti
push
pusha
push
jmp
push
and
jmp
adc
call
(bad)
push
and
call
pmulhw
jg
mov
add
or
dec
or
add
push
or
imul
jmp
push
xchg
call
sahf
jmp
pop
jmp
sbb
push
fcos
and
(bad)
jmp
or
call
add
push
mov
or
dec
dec
sbb
cdq
push
stos
inc
retf
call
push
out
inc
pop
ins
(bad)
ficomp
clc
jmp
sar
(bad)
or
jp
and
ret
dec
xchg
dec
outs
jmp
or
call
or
call
adc
call
pop
inc
or
push
cld
idiv
les
call
add
inc
(bad)
add
push
cli
or
fild
jns
daa
adc
jmp
sbb
jmp
add
(bad)
mov
push
mov
xchg
sbb
call
add
push
adc
(bad)
ficomp
in
inc
popa
jmp
sbb
(bad)
fst
cmp
out
ins
inc
adc
(bad)
jp
retf
push
xchg
push
or
jmp
or
jp
sbb
cmc
pop
dec
inc
push
mov
or
fcos
mov
dec
adc
dec
cmps
das
ret
js
or
cmps
pop
movs
stos
add
jnp
loop
push
popa
stos
xor
jmp
mov
out
jmp
loopne
scas
pop
inc
push
or
aas
push
(bad)
movs
fist
jne
aas
nop
retf
add
into
mov
arpl
cmp
inc
inc
jno
sub
or
movaps
add
and
inc
mov
(bad)
int
inc
push
push
jnp
cmp
stos
pxor
mul
jle
lahf
sub
and
in
fdivr
fisub
or
fist
(bad)
cli
push
jno
imul
add
mov
xchg
test
jle
in
adc
push
adc
adc
mov
stos
mov
mov
(bad)
and
add
sahf
xor
push
mov
sub
in
std
movs
test
push
and
leave
push
sbb
xor
ins
out
arpl
cwde
fidivr
mov
stos
scas
ret
test
movs
stos
call
cdq
aas
into
push
test
pushf
sahf
dec
xor
stos
cmp
aas
stos
push
rcr
(bad)
mov
int
shl
in
sub
aam
dec
mov
fild
and
push
in
mov
pusha
mov
inc
je
(bad)
cli
xchg
add
push
ds
int
xor
xchg
cmps
jbe
ds
pop
pop
dec
sub
test
addr16
loope
sbb
sub
outs
lods
jo
xor
xchg
test
ret
push
(bad)
arpl
push
mov
stos
movs
pop
and
mov
mov
add
add
rcr
push
stos
cli
xchg
fcmovnb
in
ret
mov
mov
das
and
int
push
xchg
sti
add
jo
sbb
inc
mov
pop
pusha
xor
addr16
fwait
jmp
adc
fist
jp
(bad)
ror
sub
cmc
sbb
iret
ds
inc
mov
xor
aaa
mov
sbb
daa
and
jmp
adc
and
xchg
(bad)
adc
xor
test
mov
push
movs
mov
scas
sbb
jmp
hlt
sub
adc
aaa
push
aad
xchg
scas
sbb
inc
movhps
test
into
fs
mov
cld
arpl
jmp
clc
cmp
mov
movs
sbb
repz
lods
loopne
push
jge
and
dec
hlt
dec
xor
fcmovnbe
mov
jmp
icebp
and
sub
inc
scas
and
mov
push
add
jnp
lds
lods
mov
adc
jp
inc
mov
stos
repz
in
xor
retf
dec
repnz
jp
pop
call
xor
sbb
bound
inc
and
aaa
xlat
dec
inc
push
add
mov
hlt
or
jle
inc
ins
dec
test
arpl
les
sahf
push
push
rcl
adc
pop
lock
mov
pushf
fs
test
icebp
mov
arpl
xor
fwait
mov
jle
cli
push
out
xchg
(bad)
adc
ficom
(bad)
inc
jo
rcr
sub
nop
mov
ins
push
addr16
cmps
inc
mov
pop
data16
mov
inc
mov
mov
int
sbb
dec
jnp
movs
in
cmps
dec
xchg
sahf
pop
hlt
imul
mov
retf
lods
push
(bad)
mov
test
or
push
jbe
cs
adc
mov
jl
adc
adc
retf
(bad)
shl
mov
ss
arpl
cmp
jle
mov
mov
mov
lahf
lods
mov
aad
mov
cmp
adc
mov
sti
shl
and
pop
stos
mov
or
into
int
gs
dec
cmp
js
xchg
and
jno
dec
imul
stc
fst
adc
xchg
jl
sbb
inc
outs
jg
xchg
mov
adc
sbb
xor
aad
and
add
popf
push
leave
dec
mov
pushf
mov
mov
outs
dec
cs
(bad)
ins
cwde
cli
dec
push
xchg
call
inc
pop
jmp
mov
or
fndisi(8087
dec
lahf
ret
mov
or
outs
mov
test
jae
pushf
out
sbb
test
push
jp
jmp
xlat
add
mov
sahf
aam
fistp
sbb
adc
stc
push
xchg
call
movs
shl
leave
dec
adc
add
rcl
cmp
pushf
outs
popa
pusha
sbb
sub
sub
(bad)
popa
xlat
dec
push
mov
jmp
rol
inc
add
push
addr16
call
aam
and
dec
aad
xchg
imul
call
adc
add
xchg
inc
mov
sub
das
sub
data16
aaa
(bad)
mov
xchg
mov
out
out
inc
pop
daa
int
jecxz
mov
cmp
dec
dec
push
push
cmps
neg
mov
ja
nop
dec
inc
loopne
popa
pop
sub
adc
not
jns
jne
popa
outs
mov
push
jecxz
lahf
pop
pop
pop
out
xor
jne
dec
push
fnstenv
fsub
icebp
sbb
sbb
aaa
add
scas
pusha
fwait
push
inc
pop
mov
inc
and
cmp
inc
scas
fs
push
stos
call
sub
or
stos
fwait
sbb
retf
push
nop
jecxz
lock
inc
cdq
sub
retf
jecxz
sbb
jbe
xchg
dec
fistp
lea
sbb
inc
inc
sar
add
inc
fs
xchg
push
lock
xor
call
addr16
(bad)
mov
dec
nop
pop
pop
mov
ins
iret
sbb
das
and
adc
mov
cmp
xchg
xchg
jno
loop
sbb
jae
sub
sub
(bad)
dec
out
push
fwait
pop
std
fimul
or
adc
mov
mov
push
xlat
addr16
sub
mov
test
push
out
or
loopne
mov
sti
xor
in
adc
lock
add
and
out
cli
into
adc
push
sar
jo
jmp
and
mov
sub
in
mov
sub
not
push
mov
les
push
cdq
jp
xchg
xchg
sub
mov
jecxz
mov
lea
cmp
inc
xchg
push
ins
sbb
pop
js
mov
popa
push
xchg
xchg
ins
xor
push
std
mov
(bad)
dec
mov
mov
pop
mov
jae
fs
in
xchg
ret
fwait
inc
dec
jmp
(bad)
sti
jo
push
idiv
dec
ffree
push
inc
aaa
sti
das
mov
push
cdq
dec
in
repz
jno
inc
add
outs
in
cmp
push
std
outs
test
jo
pop
xchg
inc
jno
repz
sar
xor
addr16
sub
jl
fbld
lods
int
xor
mov
mov
push
das
push
aad
out
jmp
push
aaa
dec
fld1
mov
(bad)
cmp
daa
dec
xchg
stos
sub
std
xor
inc
xchg
jb
mov
movs
int3
rcr
mov
and
push
push
dec
jne
dec
jne
add
pop
inc
mov
ins
push
mov
loopne
inc
in
rcl
loopne
jns
stos
js
pushf
push
bswap
jmp
ja
aad
mov
cld
mov
cmps
test
in
leave
mov
xlat
cmps
jp
lods
mov
inc
pop
xchg
ins
pop
xlat
iret
call
mov
ins
addr16
push
push
aad
push
inc
inc
mov
push
push
pop
(bad)
pop
mov
imul
(bad)
fdivr
push
pop
cli
imul
fcomp
pop
lods
adc
and
cmp
jno
xchg
movs
push
xor
imul
arpl
rcr
hlt
adc
test
mov
mov
gs
sbb
jnp
je
mov
inc
add
pusha
pop
add
ret
xchg
push
and
add
lea
and
sbb
jmp
ret
frstor
inc
popf
dec
mov
push
dec
test
repz
xchg
mov
bound
cmp
sti
out
clc
or
sbb
push
cmp
xlat
adc
div
jns
sbb
and
inc
add
add
mov
cmp
imul
pop
pop
call
es
push
test
jbe
mov
pop
ins
outs
pusha
call
jge
pop
or
add
or
xchg
lods
gs
mov
jecxz
movs
mov
mov
mov
ficom
sub
mov
cmp
xchg
es
mov
les
mov
jmp
dec
adc
cmp
leave
xlat
lods
daa
xor
repnz
jne
lock
das
push
push
mov
data16
mov
iret
add
pushf
xchg
in
sub
and
push
rcl
mov
push
sbb
ins
movs
idiv
sub
xor
xor
out
and
mov
mov
dec
stc
popa
mov
repnz
mov
idiv
pusha
add
pop
(bad)
stc
mov
dec
dec
scas
aad
daa
mov
sub
not
sub
nop
mov
sti
cmp
xchg
sbb
sbb
pop
xchg
pusha
out
fld
sub
outs
mov
or
popf
and
out
jne
in
jmp
in
adc
cmps
inc
cmp
scas
xchg
mov
mov
push
call
call
js
mov
jmp
arpl
loope
adc
aaa
movlhps
inc
pop
xchg
dec
and
rol
and
jns
add
xchg
xchg
and
mov
and
aas
gs
jle
(bad)
add
popf
inc
movs
sbb
mov
or
lds
dec
dec
enter
adc
pop
jne
inc
mov
fldenv
sbb
cli
sub
add
dec
gs
mov
jmp
sbb
(bad)
mov
and
loopne
push
int3
push
in
(bad)
dec
pop
adc
sahf
or
cmp
lods
dec
mov
cmp
mov
cmp
inc
push
popf
jge
or
pop
mov
jb
arpl
sbb
pushf
ret
aad
xchg
cld
inc
(bad)
gs
(bad)
mov
rcl
xchg
jne
sahf
pusha
push
jno
lea
push
pop
add
stos
stc
iret
cwde
jp
or
xchg
sar
jne
sbb
and
add
sbb
sub
and
inc
dec
adc
pop
push
icebp
movs
jns
sbb
xchg
ins
shr
loope
je
mov
mov
xor
pop
sbb
mov
inc
sbb
xchg
cmps
mov
inc
mov
xor
sbb
mov
mov
rol
push
retf
jmp
vpandn
out
cmp
and
bound
imul
mov
out
sub
adc
pushf
xchg
xchg
pop
clc
fwait
out
jbe
sbb
fdivr
inc
inc
mov
and
xor
inc
lods
inc
rol
bnd
lea
jmp
dec
push
movs
icebp
in
and
dec
stos
mov
cli
aad
aam
jmp
jl
je
cmps
pop
adc
and
sub
mov
mov
fcmovb
sbb
xchg
ret
xor
mov
cwde
add
pop
or
or
jle
jmp
outs
inc
int
pop
or
jnp
mov
push
add
lods
jo
popf
xlat
push
aas
and
mov
inc
jmp
fsub
dec
(bad)
mov
das
stos
ja
jecxz
xchg
in
call
push
jge
scas
ins
test
sub
aas
add
pop
outs
adc
mov
test
adc
xor
mov
cdq
sbb
in
push
cmp
les
xchg
pop
cmp
and
push
mov
add
es
pop
pop
(bad)
mov
jle
jmp
in
add
aas
sbb
mov
ins
aaa
adc
pop
add
test
adc
mov
jbe
leave
inc
mov
fild
movs
in
sahf
or
cmp
dec
push
cmp
mov
hlt
mov
dec
sbb
data16
leave
or
cmp
in
hlt
ret
rcl
imul
cmps
mov
fs
aas
mov
and
mov
pop
pusha
inc
out
cdq
mov
lea
xchg
cmp
push
mov
adc
rcl
or
cmp
mov
aad
push
mov
pusha
out
jmp
cmc
call
mov
test
pop
cmp
or
(bad)
mov
stc
inc
call
ret
scas
inc
jb
aam
and
ret
dec
lods
(bad)
jns
cmps
repnz
mov
ins
mov
sub
pop
retf
mov
addr16
cmp
out
add
loop
mov
mov
popa
mov
mov
retf
sbb
jmp
mov
xchg
int
aad
out
out
cmps
das
or
scas
xor
das
xor
nop
xchg
cmp
(bad)
retf
inc
adc
cmps
add
pusha
add
aaa
pop
mov
(bad)
mov
pop
sahf
add
push
cmp
iret
js
and
pop
gs
dec
pop
or
cmp
jecxz
or
sub
ss
xchg
push
ret
js
lods
xchg
stos
xchg
sbb
jmp
std
dec
bound
pop
sub
push
mov
jl
jne
popf
and
cmc
arpl
cwde
mov
xchg
pop
or
into
push
mov
cmp
xor
push
mov
aaa
cmp
adc
inc
add
retf
xor
aam
stc
cmp
xor
cmp
add
mov
push
adc
pushf
daa
repnz
add
rol
out
popa
inc
or
cmc
cmps
jp
sbb
retf
pop
clc
ffreep
or
in
jg
popa
aaa
xor
jg
dec
test
in
call
loope
and
mov
stos
(bad)
fs
aaa
push
fild
pop
jl
in
cmp
xor
pop
sahf
movs
push
hlt
jns
repz
outs
into
xchg
push
jle
xor
sbb
mov
dec
mov
jns
cmp
sbb
ret
and
and
test
(bad)
int3
jmp
xchg
faddp
(bad)
ds
xchg
push
shr
rcr
adc
fs
xchg
out
movs
js
mov
stos
popa
in
aaa
xor
test
shl
mov
cmp
mov
lods
add
sub
dec
inc
inc
push
sub
aaa
lods
das
aas
lahf
add
jle
es
nop
ss
shr
(bad)
jb
fdiv
std
jmp
int
bnd
jae
pop
iret
shl
mov
stos
retf
jne
cmp
lahf
popa
retf
repz
daa
std
vmulsd
repz
scas
inc
cli
pop
cs
test
dec
xor
loopne
and
not
mov
or
in
mov
fs
inc
fwait
ds
sub
lods
mov
js
int3
arpl
ret
pushf
shr
jecxz
hlt
shl
loope
fadd
push
jmp
and
mov
push
add
mov
arpl
jo
cmp
add
dec
xchg
sub
fiadd
jge
(bad)
or
ret
xor
xchg
mov
or
lock
mov
push
inc
aaa
pop
mov
pop
add
sar
cmp
push
pop
in
pop
mov
mov
nop
adc
pop
movs
push
iret
sbb
cli
push
and
jns
xlat
mov
xchg
inc
ret
sbb
lahf
mov
cli
xchg
arpl
in
xor
fldln2
xor
sub
sbb
out
sahf
mov
cmp
rcr
xchg
push
xor
fild
aaa
imul
aam
inc
adc
aaa
loope
stos
sub
adc
pop
jl
test
jmp
push
sar
rol
pusha
adc
jo
je
jae
pop
pop
in
dec
adc
gs
nop
pop
aas
(bad)
leave
push
jg
xchg
(bad)
xor
sbb
aas
mov
xchg
mov
(bad)
mov
not
es
fistp
pop
and
dec
fwait
xchg
div
fisub
fmul
mov
xor
xchg
ret
outs
arpl
and
adc
mov
cmc
pop
fcom
in
aam
xor
jbe
jns
pop
dec
add
test
aad
cli
sbb
enter
or
pop
sbb
xor
pop
ret
sbb
sub
pop
test
(bad)
and
lea
or
jge
retf
aam
repz
inc
addr16
lock
add
ss
iret
adc
lea
push
push
xchg
stos
jmp
and
mov
pop
pop
into
cdq
(bad)
(bad)
je
daa
lods
sub
cmps
movs
leave
jae
jb
sti
dec
mov
test
inc
push
(bad)
fdiv
outs
lds
jbe
or
push
push
jnp
adc
push
popf
pop
mov
push
and
pop
dec
packssdw
pop
adc
int3
xlat
inc
jae
xor
mov
adc
fdivr
mov
lahf
push
sbb
fisubr
outs
xor
lods
ins
ret
pop
adc
test
cli
mov
push
outs
cmp
(bad)
ins
xor
out
push
sub
and
add
cmps
mov
arpl
cmp
popa
(bad)
or
pop
pusha
add
(bad)
jle
cmp
and
mov
jmp
(bad)
iret
cmp
in
jae
mov
sub
dec
and
jmp
adc
or
daa
fneni(8087
pop
(bad)
pusha
add
repnz
arpl
add
je
arpl
dec
popa
loopne
bound
add
mov
daa
mov
pop
clc
test
sar
xor
rol
cmp
jno
pop
xchg
popa
lods
inc
and
pop
stc
dec
pop
cmp
jb
icebp
push
xor
in
loop
push
pop
adc
nop
mov
(bad)
sub
mov
adc
xchg
fidiv
jne
xchg
fldcw
fld
test
scas
mov
cmp
sti
(bad)
mov
aam
fistp
xchg
pop
xchg
jge
pop
dec
xchg
leave
ins
pop
mov
not
sub
push
mov
mov
ret
loop
sbb
daa
push
and
pusha
cmps
lock
das
aas
gs
cs
test
mov
in
mov
push
nop
popa
dec
cmp
xchg
jge
cmps
mov
iret
sbb
sbb
sub
mov
movs
jg
inc
icebp
xor
int3
(bad)
loop
mov
inc
push
xchg
in
aaa
icebp
xor
add
push
ins
push
lock
push
push
push
or
test
pop
add
adc
lahf
pop
nop
push
outs
mov
movs
pusha
push
fcmovu
stc
or
lods
cli
jge
nop
inc
or
ins
dec
mov
and
in
mov
adc
loop
xor
cmp
stos
cdq
push
xor
es
into
imul
sbb
jb
enter
pop
and
clc
or
stos
lods
cs
xchg
pushf
inc
fwait
inc
push
and
addr16
out
imul
scas
aaa
je
add
cmp
push
fistp
lock
cs
aas
dec
add
mov
pusha
mov
sbb
fsubr
aam
pop
xchg
pop
mov
retf
into
imul
in
push
push
loop
pop
imul
fst
and
mov
mov
xchg
int
(bad)
sub
sub
cmp
je
sub
bnd
mov
xchg
xor
pop
mov
push
shr
or
out
mov
sbb
aaa
inc
fs
int
rcr
clc
inc
pusha
dec
pop
mov
je
(bad)
sar
(bad)
cld
push
or
mov
xor
dec
push
aas
jmp
aad
repz
scas
into
sub
adc
fwait
call
pop
ds
mov
sub
push
sbb
ins
repnz
sub
js
das
pop
cmp
mov
mov
jp
cmp
sbb
shl
mov
pop
pop
pop
xor
jmp
lods
mov
cdq
mul
fldenv
enter
mov
mov
stos
fcomp
out
pop
xor
push
sbb
out
dec
in
test
ret
retf
or
sub
in
inc
sbb
inc
cdq
inc
test
in
ds
std
jmp
dec
mov
(bad)
xchg
or
add
inc
xchg
jmp
mov
or
(bad)
jle
movs
cs
scas
outs
js
or
mov
pop
jge
cmp
dec
ds
cmps
mov
stos
in
fild
pop
xchg
arpl
jns
cmps
adc
je
into
xchg
xor
add
xor
xchg
xor
jmp
push
ins
add
int3
mov
loop
push
stc
push
ja
pop
xchg
and
push
xchg
in
not
and
arpl
lea
(bad)
fsub
daa
mov
fwait
addr16
push
jecxz
jmp
mov
repnz
jae
popa
cwde
mov
div
cmc
xor
jge
sub
out
je
mov
adc
(bad)
dec
rcl
and
bound
mov
repz
outs
test
mov
push
iret
or
clc
data16
jecxz
fistp
sub
fidiv
ja
retf
lahf
xor
add
test
in
jno
mov
add
test
sbb
(bad)
and
lock
(bad)
adc
push
pushf
ja
inc
and
mov
in
pushf
adc
bound
and
push
neg
adc
in
scas
in
fsub
pop
mov
xchg
jae
mov
and
mov
push
cmp
lds
or
movs
push
retf
ins
push
aad
adc
pop
scas
cmp
popa
pop
pop
xchg
mov
inc
cmp
mov
add
sbb
xor
sub
stos
sti
sbb
fnop
movntps
or
mov
sbb
int3
jnp
push
pop
vmovntpd
test
enter
cs
outs
pop
in
add
add
ret
clc
ss
inc
mov
push
sbb
std
and
pushf
(bad)
xor
add
sbb
imul
cwde
scas
mov
push
rcr
jg
bound
cli
int
push
add
cdq
inc
mov
gs
jg
cs
in
js
pusha
xor
repz
(bad)
std
lods
xor
xor
es
cli
or
cmp
not
or
jp
and
int3
test
push
add
mov
(bad)
fcmovnu
pop
lock
popa
lea
das
aam
fwait
jae
lahf
dec
imul
not
jnp
jmp
mov
push
mov
lahf
arpl
int
mov
mov
sbb
mov
mov
and
sbb
mov
jmp
xchg
ja
ins
sbb
xor
xor
push
pop
adc
ja
cmp
scas
outs
mov
pop
adc
inc
call
fld
mov
dec
fldenv
es
fcom
icebp
sbb
pop
movs
cwde
dec
adc
pop
adc
xor
push
and
setp
pusha
pop
loopne
sahf
outs
mov
rcl
loope
clc
fsub
jecxz
fcomip
mov
add
adc
add
fisubr
push
mov
cmp
add
or
test
test
cdq
sahf
(bad)
scas
pop
or
test
rcr
iret
fwait
jns
mov
mov
sbb
scas
sub
fmul
les
lahf
ds
ds
ror
aas
loop
mov
and
inc
mov
fs
(bad)
out
xchg
aam
jg
jmp
in
lods
inc
mov
jno
xor
add
push
scas
cdq
push
dec
addr16
jl
(bad)
or
push
or
loopne
jmp
push
push
fisttp
sbb
dec
pusha
call
movs
ja
mov
sub
iret
inc
adc
pop
in
lods
or
xlat
loop
xchg
push
mov
mov
dec
jmp
pop
add
fdiv
xchg
test
or
sub
inc
sub
pusha
cmp
aas
das
mov
jle
inc
pop
jae
push
(bad)
ins
gs
hlt
xor
push
and
sub
jg
jge
inc
cmps
cmp
mov
jo
call
shl
jle
popf
or
repz
add
in
cmc
dec
clc
mov
or
mov
mov
jecxz
leave
adc
icebp
std
pop
dec
lea
cmps
in
(bad)
adc
rcr
dec
enter
out
std
aaa
mov
gs
stos
push
dec
mov
inc
xchg
shl
jae
aas
jge
call
or
fnclex
in
inc
test
test
sbb
push
outs
daa
(bad)
sbb
int3
and
or
push
pop
mov
push
lds
xchg
fisub
xor
fisttp
push
mov
test
mov
imul
std
xor
jl
mov
dec
xor
mov
sub
jmp
jmp
adc
mov
adc
push
ret
sub
mov
mov
mov
in
push
call
pop
push
fld
mov
out
mov
pop
mov
push
jge
test
or
loope
dec
mov
fs
mov
xor
dec
dec
addr16
lahf
sbb
fnstcw
mov
outs
popf
mov
jle
rol
add
out
imul
loope
lds
data16
push
adc
fs
imul
adc
mov
fstp
inc
mov
push
sbb
shr
jne
mov
sbb
std
pop
adc
pop
into
loopne
jb
out
mov
and
and
pop
sbb
outs
sti
mov
div
imul
fistp
xchg
mov
enterw
mov
dec
dec
fdivr
sbb
dec
cli
or
xchg
pop
fs
jle
or
mov
bound
dec
mov
mov
adc
repz
cmp
stc
call
mov
xor
sub
adc
push
push
cmp
push
lock
jne
pop
or
les
movs
fwait
mov
inc
mov
ins
push
dec
out
test
and
or
rcl
retf
loopne
repz
mov
dec
retf
iret
retf
sbb
fistp
xchg
arpl
or
out
sub
aam
mov
ins
and
dec
push
mov
jle
inc
fistp
rol
and
fst
(bad)
add
ds
pop
sub
test
cmp
push
xchg
and
push
cmp
pop
imul
daa
outs
push
push
sub
test
shl
sub
mov
pushf
das
outs
mov
(bad)
cmp
inc
test
mov
neg
pop
jmp
sub
and
out
mov
push
aas
ror
push
mov
jmp
clc
pop
scas
jae
aas
sbb
jmp
loope
fld
sbb
jecxz
xor
shrd
inc
clc
dec
out
int3
cli
xor
xor
and
jl
mov
fisttp
push
xor
add
xchg
stos
xchg
test
cmp
and
(bad)
mov
sub
not
xchg
mov
mov
iret
addr16
outs
adc
xchg
shl
dec
sub
sub
pop
sbb
lock
cmp
jne
mov
(bad)
shl
mov
mov
movs
mov
lea
push
cmp
iret
in
test
mov
jmp
sbb
les
enter
dec
jl
ret
imul
or
sbb
jae
push
mov
push
(bad)
and
mov
in
dec
add
sub
mov
pop
add
arpl
(bad)
jmp
ss
sbb
dec
and
mov
scas
iret
jo
ret
xchg
lock
loop
dec
sub
adc
xor
mov
fidivr
outs
pop
push
push
xchg
das
je
(bad)
ficomp
xchg
push
fidiv
dec
rol
mov
push
xchg
cmp
mov
stc
fs
jecxz
aad
lods
xchg
cmp
and
jmp
push
test
xor
popa
jp
lahf
ins
aaa
lahf
or
lock
movs
fistp
out
xchg
inc
push
and
fs
xor
lock
test
or
in
dec
sub
mov
xchg
pop
fs
out
pop
inc
loop
dec
adc
sub
pushf
aam
add
stos
shr
mov
inc
pop
mov
fnsave
sahf
sahf
loope
xor
lock
xor
sbb
sbb
fadd
cmp
mov
mov
mov
xchg
stc
stos
push
mov
mov
adc
jle
fdiv
xor
retf
dec
mov
add
mov
add
hlt
hlt
mov
sbb
rcr
cmp
scas
je
repnz
pop
daa
add
inc
adc
test
jo
mov
clc
mov
movs
and
stos
pop
(bad)
mov
jnp
cmp
loope
out
xlat
mov
dec
scas
sbb
cs
mov
dec
xchg
sub
jne
pop
imul
mov
xchg
sbb
pop
sar
jle
fnstsw
mov
mov
into
clc
and
cmp
nop
ss
fcomip
adc
jmp
nop
cmps
test
pop
dec
jmp
fdiv
sahf
data16
inc
aas
call
pop
lea
loopne
sbb
xchg
sbb
outs
cmps
jmp
bound
test
jnp
in
arpl
push
and
jle
jo
mov
and
jl
cld
xchg
sub
es
hlt
pop
ss
das
(bad)
xor
jmp
mov
sbb
or
and
sahf
inc
test
inc
(bad)
clc
cmp
in
xor
xor
addr16
mov
loope
pop
push
hlt
hlt
sub
clc
rcl
xor
pop
jp
jmp
icebp
inc
in
data16
and
sbb
(bad)
lds
cld
rcr
add
inc
adc
mov
fld
xor
adc
push
mov
dec
shr
repz
popa
sbb
in
not
xor
push
push
outs
mov
add
mov
jmp
xor
mov
es
ins
adc
and
and
mov
mov
repnz
cdq
and
psadbw
dec
daa
pusha
loop
sar
mov
stos
scas
jmp
dec
add
mov
scas
sub
es
pop
rcl
call
dec
mov
popf
movs
mov
push
js
push
hlt
clc
test
ror
cmc
icebp
xchg
sbb
mov
inc
mov
lahf
push
pusha
push
mov
loope
and
les
and
int
rcl
out
jnp
sahf
mov
movs
movs
repnz
imul
xchg
lea
cmc
pop
clc
(bad)
and
inc
mov
imul
outs
inc
lods
push
cwde
cmp
sbb
imul
(bad)
mov
mov
jmp
aam
shl
xchg
mov
das
mov
jnp
fld
push
xchg
xchg
mov
mov
rcr
xor
add
sbb
gs
and
pop
mov
mov
push
mov
dec
cmc
ins
ins
or
daa
mov
xchg
or
add
movs
dec
xor
cmp
cld
xor
sahf
stc
mov
xor
or
lods
pusha
jecxz
adc
cld
xchg
into
cmps
repz
jecxz
sbb
mov
mov
call
shl
push
mov
or
inc
stc
cld
mov
or
ins
or
scas
in
cmps
mov
fldl2e
jmp
shr
ins
rcl
xor
ja
inc
ds
je
mov
mov
je
jnp
jbe
pop
les
test
sub
fidiv
pop
jno
arpl
mov
test
push
enter
jmp
in
repnz
shl
es
push
enter
mov
inc
push
es
or
and
imul
mov
cmp
ss
loop
in
ror
lahf
leave
or
or
and
movs
cld
xchg
aaa
dec
cmps
aad
cli
mov
push
daa
stc
imul
out
jne
mov
sbb
jmp
into
cld
xlat
test
jmp
movs
mov
or
(bad)
js
sbb
pushf
pop
mov
xchg
into
jecxz
out
dec
cmc
jb
push
sbb
inc
add
inc
mov
fdivr
pop
les
mov
and
test
les
cmp
xor
mov
(bad)
mov
push
or
aas
in
test
imul
sti
mov
inc
lds
fnstsw
xrelease
push
(bad)
sti
enter
adc
out
(bad)
into
mov
xor
xchg
aas
je
cmp
cmps
dec
into
stc
cli
mov
clc
movs
inc
xchg
mov
aas
xor
jae
jg
mov
pusha
icebp
adc
sbb
(bad)
daa
das
inc
aam
sub
cmp
push
je
vmaxsd
jge
pushf
call
inc
inc
dec
(bad)
iret
inc
sti
(bad)
out
cmps
cmp
mov
jle
(bad)
mov
into
sub
pop
retf
shr
das
addr16
call
mov
sbb
xchg
into
test
pushf
adc
dec
loop
outs
jns
ins
adc
xor
pop
push
movs
out
ins
jge
(bad)
mov
outs
stc
mov
daa
cli
cmp
les
int
lea
out
mov
push
add
stos
cmp
xor
fnstenv
aas
cli
pop
imul
fldln2
(bad)
or
push
dec
(bad)
cmp
rcl
jp
fld
mov
and
cmp
mov
sbb
xor
sub
out
jp
add
xchg
lods
ficomp
pop
push
cmp
loop
repz
mov
icebp
pop
or
cs
movs
dec
sbb
jge
call
(bad)
cs
jo
fild
sub
lods
pop
stos
inc
(bad)
jae
add
icebp
pop
mov
inc
dec
push
xor
dec
dec
pop
in
js
pop
push
inc
leave
call
cmp
mov
mov
sbb
adc
jno
bound
xchg
cdq
xor
push
pop
dec
retf
xchg
sbb
inc
dec
out
pop
jmp
add
cs
arpl
cmps
retf
jl
add
cmc
xor
mov
mov
adc
popa
mov
mov
xchg
das
or
jne
mov
fiadd
or
std
out
pop
inc
xchg
out
gs
loop
stc
sub
aam
(bad)
popa
xchg
arpl
std
jp
or
dec
ins
pop
mov
pop
jmp
jbe
fistp
fs
iret
or
push
inc
push
adc
cmp
dec
popa
ja
stos
(bad)
leave
fstp
mov
popf
cmp
lods
sub
fs
sub
inc
dec
fcom
xor
lods
enter
inc
mov
in
xchg
leave
and
movs
jae
pop
js
dec
sub
cmp
cmp
inc
adc
fiadd
in
xchg
out
xchg
out
sub
jbe
mov
mov
mov
pop
nop
scas
mov
sub
pop
test
cmp
hlt
gs
mov
fild
test
pop
mov
xchg
sub
or
mov
cli
push
ltr
lds
push
ja
dec
fnstcw
in
in
mov
pop
adc
xlat
(bad)
xchg
dec
push
dec
cmp
sahf
mov
movs
cmps
aas
cli
std
mov
js
sar
ss
mov
repz
adc
(bad)
std
adc
je
in
jp
xchg
cmps
pop
loopne
mov
retf
in
adc
and
cs
mov
mov
jb
lods
jne
jne
movs
pop
fldenv
adc
xchg
out
cdq
dec
lea
inc
pop
and
popf
jbe
mov
test
pop
and
xor
fsubr
shr
in
sub
and
pusha
pmullw
pop
jne
ins
jle
adc
sub
xchg
test
pop
bound
xchg
push
daa
lea
div
imul
push
cmps
push
test
aam
jbe
jne
add
sub
or
int3
cli
xor
inc
adc
pop
mov
xor
dec
repnz
retf
leave
sbb
ins
mov
retf
mov
sbb
stc
sti
int
pushf
aaa
lock
jge
in
pop
faddp
adc
pop
jns
test
add
inc
test
pusha
arpl
mov
idiv
jns
sub
jg
push
and
cmp
sbb
ss
retf
pop
pop
pop
adc
mov
jnp
in
mov
fimul
inc
xchg
mov
(bad)
mov
mov
movs
pop
mov
push
popa
mov
js
mov
adc
pop
dec
add
lea
or
enter
leave
int3
loop
cli
inc
nop
xchg
leave
iret
fidiv
loopne
out
stc
mov
pop
aas
neg
inc
xor
adc
(bad)
das
sahf
sbb
fcomp
std
(bad)
cmp
mov
lea
adc
adc
popf
test
pop
retf
mov
repz
mov
add
push
test
js
(bad)
xor
inc
xor
add
call
jge
jae
mov
or
and
lds
push
add
push
mov
jbe
les
jg
popa
xchg
or
jg
jno
repnz
scas
inc
clc
mov
or
dec
test
sub
xor
dec
jg
lahf
mov
push
(bad)
cld
das
aam
loopne
test
pop
mov
sahf
xchg
(bad)
rol
mov
int
call
movs
gs
xchg
aaa
mov
es
popa
pop
pop
jns
stos
arpl
call
pop
clc
dec
jo
jno
shld
sbb
mov
mov
shl
scas
mov
mov
std
cs
into
imul
sbb
daa
inc
mov
je
push
mov
fwait
sub
add
pop
cmp
mov
mov
pop
ins
and
sbb
push
pop
jg
dec
sub
xchg
add
mov
mov
or
es
cmp
and
adc
xchg
dec
dec
rcl
cmp
mov
xor
loope
jecxz
push
or
sub
das
mov
(bad)
out
jg
mov
add
and
pop
cmp
mov
adc
inc
push
xor
nop
test
mov
add
shr
aaa
dec
sbb
xchg
addr16
sub
imul
rol
lds
in
mul
jle
add
jge
test
clc
lods
push
or
out
add
lds
repnz
jbe
mov
cmp
pop
pop
pop
pop
retf
hlt
(bad)
xor
loop
push
in
mov
int
xor
mov
mov
ret
sbb
div
jnp
inc
sahf
pop
mov
ret
stos
or
mov
jno
inc
add
jne
stos
xor
pusha
mov
or
dec
aaa
fimul
and
sbb
data16
add
sbb
or
xchg
jae
shr
or
adc
mov
sar
xor
add
(bad)
cmp
inc
stos
ins
or
jecxz
inc
ja
scas
inc
in
(bad)
test
jb
leave
ret
out
dec
rcr
cli
sbb
push
daa
inc
out
add
mov
inc
cmp
cs
jl
cli
mov
adc
imul
outs
mov
inc
or
xchg
int3
out
rol
or
push
outs
sbb
(bad)
jmp
inc
fnsave
mov
inc
pop
imul
mov
ins
push
inc
popa
clc
mov
stos
push
jge
repnz
pop
push
xor
in
xor
inc
sbb
sahf
ins
lea
lea
int3
pop
iret
sub
ins
xchg
outs
jmp
aad
movs
mov
push
sbb
ret
jns
ss
sub
and
jmp
outs
mov
adc
mov
jno
mov
test
mov
cdq
push
fisttp
sub
loope
aas
lahf
cmp
test
mov
cmp
leave
or
int
cmp
jne
pop
jl
(bad)
dec
mov
cmps
(bad)
pop
mov
jae
shr
jmp
lea
jae
pop
xor
jmp
sbb
adc
cwde
dec
sbb
enter
push
xor
aaa
xchg
jae
cmp
int3
add
jns
mov
into
or
cmp
or
adc
push
mov
xchg
xor
sbb
int
jmp
mov
fadd
pushf
add
rcl
xchg
xchg
fs
push
nop
dec
adc
stos
sbb
xor
das
xor
cmp
ds
out
push
sbb
jl
fstp
mov
mov
in
cmps
pop
ret
pushf
jno
push
aaa
jo
or
nop
mov
adc
ret
int3
dec
mov
xchg
ror
lea
cmp
fcmovbe
into
xchg
xchg
ins
inc
jb
aaa
arpl
mov
(bad)
shl
retf
dec
push
xor
xchg
mov
retf
iret
mov
xchg
and
(bad)
bound
in
lock
(bad)
outs
ret
mov
push
imul
inc
mov
ficom
aaa
(bad)
test
movs
lods
sahf
adc
jns
lea
stos
add
cli
sbb
dec
pop
mov
jnp
jle
stos
daa
pop
stos
cmp
imul
mov
cld
cmp
fild
mov
and
and
add
mov
imul
or
in
into
popa
loope
lock
dec
cmps
mov
stos
adc
imul
dec
or
sub
sub
jb
shr
jp
push
enter
pop
pop
not
pop
cmovle
out
sbb
pop
lods
pop
jp
sbb
mov
movnti
cli
lods
or
jl
or
cmp
push
mov
adc
pop
retf
xchg
pop
(bad)
faddp
and
aad
es
jb
(bad)
je
push
in
(bad)
stc
mov
jecxz
jns
or
fild
pop
and
out
test
and
sub
cmps
cmp
fbld
cmp
shr
inc
inc
xor
das
xor
scas
scas
xor
push
cmc
rcr
es
dec
hlt
adc
sbb
loopne
loop
ret
xor
cwde
cdq
jnp
xor
or
psrad
ror
xchg
aaa
fstp
or
adc
std
stos
dec
aad
shl
gs
xchg
sbb
jge
mov
rcr
mov
jne
add
out
mov
jno
jge
push
mov
mov
fwait
jecxz
xor
mov
lock
jns
cmp
mov
ins
sbb
fdivr
lock
stos
sub
mov
mov
xchg
loop
in
movs
inc
mov
push
lea
das
xor
add
inc
xchg
mov
jne
mov
arpl
cwde
jl
je
cs
cwde
retf
push
leave
bnd
jae
test
(bad)
and
sbb
xchg
xor
aaa
sub
loope
sbb
jmp
not
rcr
fild
xor
fnstenv
sbb
sub
fiadd
push
push
cdq
jns
pop
mov
add
push
adc
sahf
je
mov
bound
pop
add
push
jecxz
and
adc
mov
sub
inc
aam
add
push
mov
xchg
xchg
test
(bad)
retf
jecxz
pop
test
mov
jnp
retf
repnz
sahf
push
fs
sbb
mov
sbb
adc
in
pushf
data16
test
sbb
and
mov
adc
sub
repnz
xchg
mov
xor
sti
mov
inc
mov
push
sbb
xchg
jmp
or
push
cmc
shl
cmp
sub
or
push
fwait
sub
mov
sti
mov
cmp
les
out
sbb
xchg
cld
cmp
dec
shr
jb
or
icebp
out
shr
das
add
add
retf
stos
dec
dec
xor
sub
out
mov
sbb
cmp
mov
bound
stc
outs
ins
sub
or
popa
imul
xchg
repz
jae
inc
xchg
imul
icebp
and
or
jno
es
popa
nop
movs
ja
xchg
sub
cmps
pop
fst
push
nop
xor
jnp
frstor
call
rol
add
iret
dec
or
retf
or
idiv
xchg
mov
popa
inc
mov
jecxz
mov
daa
fs
xchg
push
inc
adc
and
mov
adc
call
sbb
push
fisttp
frstor
div
adc
add
xchg
sar
loope
sbb
push
mov
imul
pop
mov
arpl
mov
test
inc
aaa
jmp
addr16
jmp
fs
scas
jnp
mov
aam
js
ds
and
xchg
cmp
adc
clc
lahf
retf
cmps
xchg
add
mov
cmp
gs
sub
xor
outs
scas
(bad)
loop
cld
mov
movs
addr16
jmp
or
mov
shl
sbb
test
mov
arpl
(bad)
inc
mov
daa
xor
mov
jno
mov
out
pusha
add
imul
daa
je
out
inc
es
(bad)
cmp
rcr
or
rol
mov
movs
inc
push
fnstcw
sub
adc
outs
into
bound
fucomp
call
nop
movs
mov
stos
pusha
out
(bad)
or
mov
jmp
pop
sub
scas
jg
cmp
sub
pop
das
pusha
jecxz
mov
jp
cmps
ins
sub
out
mov
shr
and
adc
fwait
dec
call
movs
jmp
mov
xchg
test
cld
adc
add
inc
pop
jl
fnstenv
je
popa
mov
repz
jmp
or
xlat
ret
(bad)
stc
inc
dec
xchg
inc
mov
cmp
lods
nop
inc
xor
stc
jl
jne
add
xchg
inc
jge
mov
popa
js
mov
addr16
aam
div
sahf
sbb
mov
fsubr
mov
jae
inc
ins
fdiv
mov
adc
loop
int3
mov
mov
lods
jge
test
out
sub
push
into
mov
fnstenv
xlat
or
xor
mov
xor
add
sbb
andnps
pop
jns
xor
mov
aad
in
std
jp
in
mov
mov
cs
ret
ins
mov
mov
add
out
iret
adc
ja
out
mov
lds
jns
je
jb
rcl
xchg
xchg
aaa
fcom
push
rcl
std
(bad)
mov
arpl
inc
call
or
aas
push
call
adc
fadd
cmps
jp
rcr
sub
mov
cld
clc
shr
sti
(bad)
mov
ret
aas
pop
dec
addr16
scas
sbb
fistp
mov
fist
cmp
fs
icebp
sbb
push
cli
sub
xchg
test
popf
ja
xchg
jns
sbb
dec
ss
movs
cmp
fimul
retf
xchg
rol
fisubr
lods
stc
das
mov
mov
sbb
mov
push
test
push
sahf
or
mov
loop
cli
and
shr
mov
xchg
cld
outs
inc
out
lods
or
hlt
(bad)
cmp
pop
or
test
dec
inc
or
pop
xchg
adc
repz
sbb
loopne
xchg
sti
in
and
repnz
outs
jge
pusha
adc
adc
mov
inc
pop
daa
nop
ins
inc
loopne
aas
sbb
jnp
out
dec
loopne
jnp
std
and
(bad)
aaa
call
mov
and
scas
rcr
int3
xchg
inc
movs
nop
imul
cmps
xchg
inc
out
cmc
cmp
push
mov
imul
xor
das
cli
ret
repz
aas
fdivr
push
add
sub
jbe
(bad)
mov
xor
push
inc
fcmovbe
jnp
repnz
out
repnz
and
and
add
jnp
cmp
cwde
sub
ds
mov
mov
stos
mov
push
xchg
fisubr
push
loop
aas
retf
or
sahf
cwde
pop
adc
inc
(bad)
and
mov
addr16
sub
cdq
xlat
xchg
retf
inc
sahf
dec
test
xor
xchg
lahf
xor
dec
or
iret
pushf
pop
repnz
stos
test
mov
imul
inc
mov
pop
call
retf
xchg
out
mov
in
jge
sti
bnd
push
dec
aaa
sbb
shl
push
outs
sub
fdivr
pop
cli
pop
(bad)
cs
xchg
xchg
rol
mov
push
pop
jbe
xor
sbb
dec
rcr
les
push
mov
and
sub
cmc
call
enter
inc
das
mov
scas
sub
lods
idiv
in
std
stos
adc
aad
fsubr
sbb
std
scas
into
movs
ficomp
push
cmps
popa
call
cmc
test
push
push
mov
xor
outs
jmp
push
sbb
or
icebp
ins
xchg
cli
mov
int3
jnp
jle
lahf
sbb
(bad)
jmp
jge
mov
or
add
sbb
pop
ja
mov
jns
gs
es
call
cmp
hlt
jg
sub
std
jmp
xor
sbb
popf
xchg
retf
pop
jae
jne
stc
sbb
push
iret
data16
mov
retf
and
scas
dec
push
mov
inc
xor
fadd
inc
addr16
imul
pop
inc
in
test
(bad)
dec
adc
mov
arpl
xor
sbb
pushf
mov
pop
push
shr
mov
dec
test
loopne
jl
mov
cmps
push
xor
inc
(bad)
cmps
rcr
or
js
add
dec
call
jge
rol
fcmovu
add
adc
cmp
dec
div
nop
cdq
sbb
mov
xor
sbb
aad
ins
std
rol
lds
je
mov
mov
ss
call
mov
outs
addr16
adc
scas
stos
ficomp
sti
nop
imul
xor
dec
ret
aaa
and
cmp
lea
repz
sbb
cmp
aam
cli
jo
aad
pop
xor
mov
movs
adc
and
retf
xor
retf
lods
mov
push
ror
adc
test
jo
dec
lock
call
loop
mov
imul
mov
sub
cmp
and
sub
lods
xchg
sbb
pop
push
pop
(bad)
(bad)
inc
in
inc
cmp
mov
jnp
shl
pop
pop
iret
aad
xor
clc
test
dec
loopne
clc
cs
cmps
xor
lods
adc
and
push
mov
outs
stos
push
fist
dec
in
test
int3
pop
scas
mov
call
(bad)
lock
push
inc
dec
fdiv
(bad)
sub
or
bound
gs
adc
mov
cld
inc
fwait
and
add
mov
lock
cmp
sbb
cmps
add
mov
movs
mov
dec
jnp
leave
clc
loope
(bad)
popf
mov
xor
shr
test
sbb
and
rol
push
adc
push
jle
shr
out
xchg
add
pop
add
test
xor
pop
fnstenv
iret
inc
int
sti
stc
jbe
inc
in
mov
shl
jbe
loope
retf
mov
fadd
popf
sbb
jb
mov
retf
fwait
loope
mov
rcr
sub
sbb
fs
xchg
xchg
das
cmps
cmps
cdq
aam
cmp
pop
jl
fwait
test
pushf
dec
mov
stos
out
mov
clc
xchg
sbb
adc
push
das
pop
imul
ins
sbb
loope
xchg
jo
fucom
xchg
fwait
adc
add
xchg
or
inc
ret
mov
lea
and
add
jae
repz
in
sub
aam
push
out
sub
aaa
int
fadd
dec
loop
and
fwait
test
inc
scas
jmp
test
dec
(bad)
lods
gs
mov
clc
and
pop
imul
ja
lods
jle
arpl
lea
add
adc
mov
jae
xchg
cmc
and
adc
or
jbe
sti
xchg
mov
pop
inc
sahf
dec
in
jb
lock
cmps
xchg
rcr
mov
mov
lahf
test
(bad)
in
push
cld
idiv
imul
mov
pop
enter
dec
popf
int3
dec
ins
aaa
push
(bad)
mov
test
add
sbb
push
mov
dec
sub
mov
test
cmps
repz
push
inc
add
sub
adc
push
cmps
dec
cmp
nop
mov
imul
iret
mov
or
in
push
das
sub
shr
cmps
(bad)
dec
mov
sub
inc
mov
xor
jae
ins
sub
retf
inc
std
cmp
call
jge
mov
push
add
rep
dec
pop
xchg
cmc
out
scas
xchg
inc
jl
popf
lods
cmp
lods
in
test
fstp
enter
fdivr
xchg
mov
mov
adc
push
xchg
push
push
outs
push
cdq
add
lods
sti
mov
xchg
out
lock
out
mov
mov
pop
push
dec
jge
in
outs
lods
or
cwde
ins
inc
cmp
fimul
imul
dec
and
jne
xlat
inc
jns
mov
iret
sbb
retf
adc
ins
popf
push
dec
and
and
dec
sub
push
xchg
inc
add
movs
ret
dec
ret
xchg
jnp
in
or
inc
dec
inc
push
and
fadd
jg
dec
and
mov
into
xchg
in
aaa
imul
or
jbe
pop
push
out
mov
sbb
pop
xor
scas
mov
shl
xchg
js
scas
leave
cli
and
add
ret
jmp
mov
iret
jo
dec
loope
mov
pop
pop
xchg
mov
and
or
cs
xchg
or
test
addr16
out
sbb
aam
jge
and
retf
cs
jb
fstp
dec
outs
jnp
pop
xor
mov
xor
loope
jmp
mov
xchg
or
push
jmp
mov
mov
pusha
(bad)
lock
cmp
cli
pop
mov
into
imul
loop
idiv
sbb
fs
adc
fdiv
(bad)
leave
dec
mov
xlat
outs
mov
xchg
ds
pop
push
lds
xchg
pop
cs
push
or
in
in
mov
add
lds
test
dec
lods
sub
or
(bad)
push
aad
cmp
stos
je
cmp
fs
mov
mov
inc
pusha
mov
cmc
jmp
lahf
outs
mov
call
cmc
mov
jns
rcr
xor
mov
sub
movs
scas
outs
clc
lods
lods
jb
adc
mov
xor
mov
mov
int
cwde
test
pushf
scas
mov
test
jle
xchg
pop
or
in
addr16
jns
jmp
stos
lods
test
stos
cdq
xor
pusha
repnz
push
pop
mov
xchg
mov
pop
div
jo
pop
ret
enter
dec
mov
adc
cwde
push
lods
mov
(bad)
imul
pushf
iret
sbb
push
inc
jl
popa
pop
and
retf
sub
test
xor
movs
data16
sbb
and
es
mov
xor
inc
out
fcomp
push
add
cli
jmp
fs
sbb
and
cmpps
enter
jl
adc
inc
shl
and
test
sbb
add
repz
test
dec
adc
jno
test
test
test
fs
and
gs
adc
xor
out
cmp
and
addr16
mov
mov
cwde
mov
xor
mov
xchg
mov
and
add
jle
adc
inc
adc
xchg
ds
cmp
cli
fist
cwde
(bad)
pop
sub
mov
push
pop
jge
int3
xchg
daa
jmp
daa
ret
nop
xor
or
lods
push
adc
out
mov
(bad)
ficomp
cmp
mov
fild
mov
(bad)
lea
mov
in
mov
cmp
int3
and
dec
(bad)
mov
xor
jecxz
sub
montmul
cmps
(bad)
cmp
sbb
mov
pop
mov
rol
cmp
sbb
test
cmp
pop
xchg
jle
iret
add
fst
jne
mov
sbb
mov
cmps
ja
rcl
push
pusha
(bad)
aad
mov
std
cdq
icebp
call
imul
cmp
push
lods
or
loop
loope
cmc
push
repnz
mov
mov
or
mov
xor
shl
fld
push
addr16
xchg
pusha
xor
jg
aaa
dec
xor
(bad)
in
cmp
loop
call
test
lds
add
and
pop
aad
ja
jbe
sbb
lods
ins
xor
or
arpl
jecxz
dec
jb
int3
rol
in
aad
ss
dec
add
ja
inc
mov
jl
push
or
dec
cwde
inc
push
ret
xchg
je
push
xchg
cli
cwde
mov
inc
retf
pop
push
lock
outs
dec
jno
out
xchg
sbb
cli
out
call
or
mov
add
fild
mov
xchg
cdq
pop
mov
and
pusha
pop
lahf
int
pop
cmp
pop
lea
or
ror
pop
mov
shl
jecxz
cwde
mov
jmp
jl
jbe
push
sub
in
jle
dec
retf
(bad)
mov
(bad)
stos
(bad)
ins
cli
add
xor
or
out
not
repnz
pop
cmps
or
adc
add
daa
inc
daa
test
mov
test
or
sub
jecxz
jo
imul
mov
movs
pop
movs
int3
jae
jns
adc
test
adc
xor
xchg
ror
ds
lock
cld
jp
inc
rcl
cmp
pop
cmp
mov
inc
(bad)
popf
retf
push
xchg
add
add
sahf
stos
movs
call
popw
dec
and
fwait
inc
push
add
pop
fisubr
in
pop
pushf
push
stos
push
mov
test
sbb
test
xor
jae
test
sbb
add
xchg
(bad)
(bad)
dec
(bad)
push
jecxz
xchg
mov
sub
out
push
adc
fcom
clc
push
ss
pop
je
ficom
push
cmp
mov
test
or
test
arpl
add
test
xchg
sbb
in
sbb
sbb
hlt
mov
jbe
cli
addr16
js
add
sahf
sbb
push
adc
sar
call
dec
push
popf
xor
xchg
inc
pusha
ss
sti
mov
je
mov
dec
out
clc
mov
dec
imul
stos
stc
mov
jns
jb
cs
cmc
xchg
cmp
xchg
scas
adc
mov
pop
inc
mov
cmp
pop
popf
rcl
sar
pop
and
sbb
push
pop
repz
es
cmp
inc
xor
mov
mov
jae
addr16
(bad)
aaa
fsub
add
mov
mov
dec
fild
xor
hlt
push
dec
repz
add
and
cmp
(bad)
imul
in
lods
pop
es
(bad)
lahf
push
push
inc
clc
dec
pushf
sbb
pop
shr
shl
cmp
stos
pop
dec
addr16
adc
pop
(bad)
scas
stc
fs
test
cmps
jbe
call
mov
dec
push
loope
fistp
mov
jmp
cmps
xchg
mov
movs
jns
stos
mov
ds
fadd
and
xchg
mov
dec
cmp
(bad)
mov
loopne
push
mov
sahf
out
loopne
dec
icebp
jmp
and
mov
add
mov
jo
ret
pop
jne
push
stc
cdq
dec
mov
push
mov
sbb
icebp
ret
fst
push
fs
jnp
add
(bad)
add
mov
sar
sbb
pop
mov
ret
shl
lahf
sti
ret
adc
bound
mov
in
xor
out
call
mov
jno
cmp
ja
aaa
fdivr
sub
mov
push
sbb
push
retf
sub
ins
jmp
xlat
call
sub
in
mov
bound
dec
jg
adc
or
mov
push
aam
inc
push
push
pop
mov
cmp
inc
shl
(bad)
mov
adc
bound
in
xchg
shl
bound
and
outs
cmps
jge
inc
mov
std
jmp
inc
in
inc
pusha
ins
push
and
xchg
cli
pop
or
shl
pop
mov
xchg
aaa
mov
and
ficom
xchg
fist
lds
jl
enter
call
sbb
es
ins
and
and
retf
push
gs
mov
pop
xor
pop
popa
adc
aam
mov
xchg
cmps
mov
(bad)
xchg
lods
cmp
pusha
mov
pop
fs
aas
cmp
retf
pop
daa
stos
sahf
jmp
jnp
add
test
or
adc
push
call
inc
sti
xchg
sti
mov
xor
cs
mov
nop
xor
in
fild
stos
add
mov
add
mov
mov
cmp
sbb
arpl
inc
push
(bad)
cld
cmp
mov
jo
fstp
jnp
pusha
mov
mov
and
adc
aad
mov
jp
retf
jbe
or
retf
fs
sbb
mov
jb
and
jae
icebp
jmp
in
xlat
test
or
(bad)
dec
sub
jo
int3
aam
adc
bnd
lea
xchg
lods
ret
ret
loop
jmp
or
aam
sbb
imul
addr16
add
adc
jo
jmp
pop
jmp
xor
dec
fcom
retf
ds
pop
imul
mov
jle
jmp
cs
mov
jae
adc
push
data16
pop
sub
fcom
pop
fs
dec
aas
dec
and
ret
rcl
ja
sbb
mov
fidiv
or
adc
(bad)
mov
and
inc
dec
ss
xor
mov
pusha
fnstsw
mov
(bad)
call
push
int3
jmp
test
enter
shl
xor
xor
ror
rcl
pop
jl
xor
ds
inc
imul
pop
push
(bad)
jl
mov
nop
push
push
aaa
(bad)
lods
or
test
mov
lahf
cmp
inc
mov
xchg
pusha
mov
mov
ss
(bad)
das
inc
in
outs
jnp
mov
aas
and
sub
test
mov
cmps
sahf
das
sbb
test
fistp
and
dec
cmp
cmc
pop
out
dec
jle
add
adc
and
js
cmp
test
sahf
pusha
cmp
cdq
sbb
lock
mov
sti
mov
and
inc
and
aaa
jne
hlt
push
jb
add
int3
and
pop
sar
nop
daa
dec
push
adc
enter
push
bound
pop
fcomp
pusha
cli
jp
xchg
push
push
pusha
(bad)
jmp
mov
adc
aas
cs
repnz
inc
lods
cmp
shl
stc
jns
ds
inc
cmp
cmp
retf
movs
cmp
es
add
xor
rcr
aad
sti
sahf
ds
and
and
scas
adc
xchg
pop
inc
cs
sbb
cwde
in
mov
pop
dec
jmp
xchg
jp
or
push
popf
pop
adc
outs
rcl
punpcklwd
das
lds
loopne
stos
test
mov
cmp
out
je
mov
pop
(bad)
add
push
enter
in
xchg
jg
adc
into
inc
xlat
cli
leave
mov
add
dec
mov
cli
fidiv
retf
jno
and
loop
fst
jg
dec
push
pop
mov
adc
push
pop
push
and
jp
mov
clc
xor
cwde
jns
xchg
push
jmp
sbb
add
ret
mov
(bad)
jae
aad
fs
xor
neg
push
fdiv
xor
jmp
test
jg
in
(bad)
in
push
into
dec
cmc
iret
push
mov
sti
movs
push
cmc
dec
std
pop
xchg
mov
jmp
scas
push
cld
loopne
movs
jne
pop
mov
pop
xchg
in
loope
adc
dec
ret
lahf
pusha
jp
out
shl
retf
mov
into
(bad)
jae
out
movs
(bad)
loope
stc
test
sub
or
pop
dec
(bad)
add
rol
lods
mov
popa
int
in
cmp
mov
pop
leave
push
pushf
pop
jae
sub
scas
dec
and
in
call
inc
popa
mov
push
jne
and
std
sbb
shl
jno
sub
hlt
push
fnstcw
sub
lods
sub
shr
sahf
dec
or
pop
jae
test
pop
cli
test
div
repnz
jmp
aas
mov
lods
call
jle
cmc
cs
test
push
mov
pop
in
addr16
imul
rep
mov
(bad)
jno
sbb
xor
pop
and
cdq
xchg
xor
lock
jl
mov
add
test
or
rcr
cmps
or
inc
into
xchg
adc
test
aas
ror
xchg
je
push
movs
ins
and
xchg
jae
add
gs
imul
or
jl
dec
dec
out
repz
sar
(bad)
and
ds
sub
scas
adc
das
sub
ret
(bad)
ins
lea
in
mov
sahf
xchg
movs
mov
aaa
jle
add
cmp
loop
cdq
sbb
fcomp
cmp
mov
pop
jge
cmc
jne
pop
mov
sub
repnz
xchg
sub
(bad)
lahf
xchg
cmp
test
and
nop
inc
(bad)
popa
inc
xchg
movs
sub
(bad)
hlt
pop
adc
cmp
cmp
mov
sub
inc
lock
pop
mov
clc
jnp
inc
pop
out
cdq
inc
pop
ret
dec
call
mov
stos
lods
jge
fdivr
mov
jmp
and
sbb
cmc
jmp
xchg
inc
repnz
aaa
inc
jecxz
cli
mov
pushf
ds
push
dec
(bad)
jge
xor
xor
inc
cmp
mov
rol
pop
fst
xor
pop
mov
jp
inc
or
leave
ror
pop
pop
retf
ins
call
sbb
pusha
into
(bad)
mov
jg
mov
sub
lods
adc
xor
loope
ss
data16
xor
xchg
xor
fsubr
jecxz
scas
in
fnstcw
inc
pop
or
xor
stos
mov
jae
push
mov
repnz
cmps
inc
sub
pop
cmps
mov
add
clc
lock
cmp
adc
fst
xor
fcmovu
out
mov
xor
jg
test
jge
rcl
push
in
icebp
in
call
pop
in
sbb
dec
sbb
pop
jns
xlat
xor
scas
stc
shl
ds
pop
mov
adc
mov
cwde
dec
pop
(bad)
push
fwait
int3
cmc
lahf
mov
cmp
mov
mov
cld
cli
add
mov
push
xchg
and
jno
inc
inc
lea
mov
and
and
sbb
inc
mov
rcr
js
outs
jp
dec
mov
call
shl
mov
movs
lods
mov
js
je
push
stos
mov
xlat
ds
fmul
out
rol
iret
jg
les
ins
or
xchg
jmp
cdq
inc
xor
int
int3
push
test
cdq
push
mov
test
push
inc
mov
mov
scas
push
xor
and
inc
fcmovne
outs
jne
or
imul
(bad)
inc
dec
jmp
lock
or
jge
fsub
jbe
out
push
adc
pop
cmp
(bad)
(bad)
loopne
inc
mov
aas
push
fwait
push
fisubr
push
pop
xchg
js
jae
pop
cmp
aam
lods
aad
ficom
pusha
add
ss
in
jnp
inc
pop
out
and
cmc
add
fxch
push
or
xchg
push
cmp
jmp
cmp
jb
out
sar
out
movs
fimul
addr16
xor
pop
mov
xor
sub
pop
sub
nop
mov
sbb
xor
scas
loopne
inc
fstp
ins
push
pop
cmp
add
cmp
and
mov
jge
nop
mov
pop
push
sbb
inc
mov
loop
ins
dec
ss
test
int
inc
mov
int3
test
mov
xchg
imul
jae
pop
lahf
jp
cmp
ror
add
ret
cs
push
iret
sub
sbb
inc
push
pusha
pop
test
and
enter
pop
aam
jns
rcl
and
retf
dec
sahf
adc
cmp
xor
mov
jae
jge
mov
add
pop
hlt
mov
div
jno
inc
dec
dec
in
xchg
cdq
jle
dec
outs
je
enter
ret
int
xchg
adc
sbb
rol
xor
or
push
retf
stos
or
popa
scas
in
adc
add
add
lea
cmp
jns
cmp
push
push
add
mov
mov
push
sub
push
xor
inc
mov
push
sub
in
imul
inc
mov
out
imul
test
inc
add
mov
push
or
mov
dec
xor
js
sbb
xchg
jmp
dec
jge
out
mov
outs
stos
lahf
fiadd
mov
shr
add
sbb
iret
out
pop
inc
retf
rcr
lods
push
out
je
outs
sub
clc
cmc
movs
loop
loope
mov
sti
mov
cmp
pop
sbb
out
shr
sub
sahf
xchg
aas
sub
push
push
js
jp
fbld
adc
ins
(bad)
cli
loop
sahf
xor
and
push
and
std
loope
movups
push
cmp
leave
dec
adc
daa
into
loope
vpaddq
push
loopne
add
test
or
push
cs
scas
icebp
fiadd
mov
sahf
push
lods
fistp
or
repz
ds
mov
xchg
(bad)
xlat
jmp
aam
jle
daa
lock
addr16
adc
dec
jle
xchg
push
out
or
xor
mov
add
popf
inc
inc
pop
int3
xor
jmp
aad
adc
idiv
(bad)
cmp
outs
push
ds
ds
jne
or
xor
push
adc
nop
mov
dec
aaa
imul
nop
pop
and
bnd
mov
jnp
push
daa
mov
retf
or
cmp
pop
mov
push
lods
aaa
fnstcw
mov
mov
add
inc
adc
dec
and
mov
and
cmps
ret
cmps
arpl
in
das
adc
xor
push
sbb
mov
push
push
cmp
jbe
and
cmp
adc
shl
test
mov
cmp
and
adc
push
shl
adc
leave
cmc
repnz
lea
push
mov
outs
mov
jmp
add
inc
sbb
add
push
cmp
jl
mov
lahf
ins
test
mov
call
and
cmps
movs
sub
dec
not
retf
ret
and
pop
cmp
and
pusha
fiadd
cmc
loope
push
(bad)
out
fwait
mov
test
scas
fs
push
rcr
icebp
sbb
sahf
inc
add
imul
and
xchg
scas
stos
xor
inc
jne
gs
hlt
and
lods
or
inc
and
cmp
sbb
sub
xchg
mov
(bad)
sub
ins
sub
inc
sub
mov
dec
retf
sub
and
mul
mov
adc
std
fild
inc
fsubr
ja
lods
inc
pop
test
faddp
loop
fild
scas
pop
cmp
add
lods
iret
mov
ror
xchg
fadd
inc
jo
jecxz
add
or
fistp
xor
(bad)
pop
shl
mov
call
lahf
and
cwde
pop
push
fs
in
xchg
(bad)
cmp
jne
or
mov
cmp
sbb
sahf
fldln2
into
popf
pop
(bad)
(bad)
jmp
pop
leave
shl
dec
xor
(bad)
xchg
push
in
das
add
jo
sub
cs
out
pop
mov
adc
retf
add
inc
inc
jnp
jns
nop
(bad)
icebp
scas
add
into
or
sub
in
fs
or
jnp
xchg
outs
push
gs
in
cwde
add
bound
sbb
test
cwde
and
pusha
ficomp
pop
(bad)
and
xor
or
es
mov
xor
add
inc
jg
loop
pop
xrelease
leave
jle
and
push
mov
push
cmp
cdq
sbb
nop
call
rcr
ret
loop
mov
and
add
mov
aam
lock
mov
ret
xchg
sbb
mov
retf
sub
mov
inc
mov
in
inc
lahf
adc
xor
dec
mov
xor
xor
cmp
pop
push
or
addr16
ja
(bad)
mov
sub
or
cmp
adc
xor
movs
xor
pop
pop
mov
mov
mov
mov
je
add
shl
push
mov
jmp
mov
adc
and
fstp
mov
shl
or
inc
sbb
jno
cs
push
xchg
bound
(bad)
shr
emms
jb
mov
ins
cmp
stos
cmps
mov
arpl
and
stc
test
xchg
scas
or
cdq
dec
sbb
ja
add
in
mov
xor
xlat
je
push
pop
mov
shl
mov
iret
push
dec
push
outs
in
cmc
jg
call
dec
stos
sar
aad
mov
int3
sub
mov
in
xor
mov
pop
xchg
lds
mov
shr
jmp
sti
loope
jnp
sub
mov
jp
outs
jb
xor
mov
dec
loopne
ins
mov
retf
sub
iret
cs
pop
inc
xchg
das
ret
xlat
call
cmp
cmps
outs
stos
push
push
xor
in
fnstsw
mov
add
addr16
cmc
push
pop
add
imul
shl
jne
icebp
fadd
mov
cmps
cmp
cmp
je
leave
(bad)
loopne
(bad)
mov
push
xchg
lods
add
mov
retf
jecxz
shl
mov
mov
jmp
and
push
(bad)
sub
mov
mov
mov
pop
das
dec
fdiv
dec
cli
push
jno
mov
imul
cmp
popf
sti
mov
mov
aaa
out
pusha
pop
mov
sub
jne
arpl
adc
mov
(bad)
stos
pop
out
adc
gs
cmp
movs
dec
add
ja
mov
shr
mov
(bad)
ficomp
dec
scas
mov
nop
enter
sub
xchg
sbb
xchg
inc
mov
push
jns
in
in
sub
mov
sbb
mul
add
popa
stos
adc
fadd
in
mov
stos
add
mov
(bad)
sti
mov
push
lds
xor
cmps
pushf
mov
repz
ins
sbb
jbe
data16
push
sbb
push
aam
call
pop
loop
rcl
xchg
daa
jle
add
mov
hlt
add
sub
std
mov
loope
das
scas
fild
or
popf
or
cmp
pop
mov
test
xchg
movs
gs
mov
daa
je
jp
movs
or
out
jns
add
hlt
into
mov
mov
jo
jbe
ss
pop
adc
sub
outs
out
scas
ja
dec
in
cmp
ret
in
adc
sub
test
retf
mov
rol
scas
sahf
add
hlt
lds
sub
add
dec
pop
enter
push
xchg
mov
xor
push
inc
loope
dec
push
add
jbe
ret
xor
sbb
push
lods
sbb
ret
movs
xor
push
retf
clc
cwd
add
cmp
cmovne
inc
or
lds
(bad)
adc
adc
jle
or
daa
imul
in
ja
jb
push
xor
fadd
out
xchg
nop
sahf
push
push
sub
enter
mul
mov
arpl
call
lds
scas
xchg
pop
mov
xlat
mov
loop
retf
mov
rcl
les
mov
fwait
xor
adc
jae
gs
dec
mov
(bad)
and
adc
and
push
out
in
out
loopne
xlat
stos
lods
xor
fsubr
sub
sbb
cmp
or
iret
adc
loop
not
sub
std
push
cmps
add
scas
sbb
(bad)
sbb
loop
dec
cmps
xchg
in
cmp
loopne
xor
adc
test
add
jae
cdq
dec
js
adc
add
cmp
jne
xchg
push
jno
sbb
iret
into
push
ficomp
imul
or
dec
iret
cmp
ins
cmps
sub
gs
ss
jo
jp
xor
scas
jmp
and
mov
jmp
aaa
xor
sub
sbb
test
xor
xor
es
pushf
loop
(bad)
xchg
mov
mov
pop
and
nop
jnp
call
cmps
cmp
outs
xchg
test
int3
add
retf
or
icebp
mov
mov
into
lahf
mov
outs
pop
test
dec
cmp
jmp
jne
and
pop
mov
pop
xchg
jae
out
inc
push
(bad)
es
xchg
xchg
adc
jo
popf
dec
in
xchg
sub
test
aad
div
adc
add
or
sbb
xor
pop
es
ins
out
push
cli
sbb
push
and
cdq
mov
lahf
jge
add
shr
repnz
std
push
mov
rol
and
test
dec
cmps
jne
shl
cld
lds
push
je
sbb
call
push
adc
jmp
inc
mov
sbb
pop
xchg
jecxz
inc
or
inc
jae
ja
xor
jne
ss
sub
popf
adc
mov
gs
dec
pop
cmp
push
sti
mov
push
xchg
jecxz
div
xchg
pop
xchg
add
cmp
lods
mov
pop
ins
ret
push
mov
retf
(bad)
outs
mov
test
jnp
mov
xor
neg
push
not
scas
jo
ret
scas
or
push
add
cld
push
jbe
jmp
sar
out
test
add
fwait
dec
lock
push
ja
stc
movs
les
and
cli
mov
push
lea
test
sub
mov
mov
pop
push
movs
into
mov
xor
out
push
jb
les
cmp
rcr
sub
popa
int3
jo
xchg
mov
or
or
mov
inc
push
call
mov
inc
aad
xchg
mov
pop
fdivr
sbb
outs
add
push
mov
arpl
inc
cmps
lods
out
out
sahf
lock
mov
in
mov
xor
dec
push
pop
mov
sub
or
push
sub
out
cmp
sbb
add
aad
cmps
popf
cwde
mov
jg
aas
mov
inc
or
jns
fdivrp
adc
mov
lahf
push
or
mov
add
cld
into
loop
mov
xor
in
je
jg
cld
mov
mov
xchg
iret
fs
pushf
ja
add
ins
aas
hlt
repnz
xlat
cmc
mov
sub
mov
fcmovnb
push
cmp
ror
nop
pop
rcr
xor
jecxz
sti
xchg
xchg
ins
jae
inc
and
adc
push
mov
aas
ficom
mov
pop
cli
mov
lea
xchg
adc
pop
mov
xor
lods
mov
cmps
fstp
pop
daa
mov
sbb
pop
popf
jns
xchg
pop
pop
xor
cmp
inc
enter
es
mov
sbb
ficomp
sahf
sti
in
and
push
xchg
scas
mov
aaa
xchg
popa
ja
jge
xchg
aam
sbb
loopne
(bad)
imul
xor
cmps
jb
ds
jbe
mov
push
in
(bad)
call
adc
or
ds
paddw
sbb
sub
xor
adc
lds
ret
pushf
sbb
push
lock
mov
out
test
adc
pop
add
dec
lods
std
inc
arpl
push
inc
ficom
(bad)
xlat
(bad)
mov
inc
fnstenv
adc
movs
mov
inc
dec
pop
cmp
pop
mov
sbb
or
mov
mov
rcr
fnstcw
dec
sub
jle
xchg
lods
aad
push
rcr
movs
loope
push
sti
xchg
ss
or
(bad)
out
add
pop
xor
neg
or
pop
sbb
aam
pop
ficomp
test
sbb
das
dec
je
loopne
fbld
jle
push
pop
sar
fucomp
adc
cs
cmp
mov
adc
fistp
movs
daa
arpl
and
sbb
or
or
call
fwait
or
int3
loopne
mov
mov
aas
cmc
jns
dec
in
pop
cs
punpckhdq
mov
enter
cld
dec
cs
cmp
mov
push
clc
and
xchg
cld
jmp
shr
xor
into
jl
and
clc
aad
sub
push
xor
sub
cmp
and
aas
xor
xchg
xor
jl
pop
daa
int3
bound
xor
loop
das
pop
lahf
cmp
jae
xor
adc
popf
add
inc
add
aam
sahf
mov
inc
mov
xor
mov
xchg
ror
call
lock
test
(bad)
je
inc
dec
test
sbb
sti
aas
les
push
loope
xor
repz
sub
test
push
and
jle
lahf
xor
push
repz
cld
push
hlt
pop
clc
mov
mov
sub
xlat
jbe
test
into
repz
pop
les
cmp
dec
popa
pusha
pusha
imul
xor
aas
enter
gs
test
push
xchg
inc
or
jae
pusha
xor
shl
push
jmp
mov
ret
xor
outs
iret
ret
push
and
cdq
pushf
sub
dec
adc
add
loop
sar
jae
mov
cmp
push
fisubr
xor
or
ins
popf
arpl
mov
push
dec
xchg
push
(bad)
(bad)
gs
jno
rcl
out
mov
or
push
pop
ss
call
and
lds
add
clc
xor
jle
aaa
fisub
inc
sub
cwde
fdivr
ins
(bad)
js
push
xchg
sti
ror
mov
pop
mov
xor
dec
mov
push
std
repnz
pop
add
mov
cli
sbb
jno
push
stos
jmp
or
fwait
and
and
es
pop
stos
push
sbb
or
rcl
add
repz
or
push
ja
cmps
fst
mov
mov
jne
xchg
fucom
add
fs
xchg
nop
inc
aam
in
mov
sbb
dec
mov
sbb
retf
inc
mov
or
jae
pushf
jge
es
jno
shl
test
imul
cmp
xor
add
or
in
cld
xchg
or
ins
(bad)
mov
lods
outs
ss
xchg
cmps
std
daa
xor
fwait
neg
sub
shl
xchg
add
lahf
cmp
fsubr
adc
pop
mov
push
call
fadd
out
sub
div
mov
or
icebp
aas
xchg
mov
add
sbb
xchg
fidivr
push
jecxz
dec
add
mov
out
aaa
mov
jecxz
mov
repz
loope
scas
loop
clc
sub
mov
test
repnz
xor
scas
cmc
push
loop
xchg
jg
xchg
push
ror
nop
aam
gs
adc
clc
jno
fs
push
pop
lock
cmp
popf
mov
popa
loope
nop
add
int3
jge
dec
sti
push
mov
outs
sahf
lods
dec
leave
scas
xor
dec
ror
push
jg
dec
and
cs
dec
(bad)
jle
push
mov
or
(bad)
pusha
dec
push
cmp
or
sub
pop
mov
adc
pop
inc
es
loopne
dec
cmp
or
imul
or
mov
in
jae
xchg
sbb
xchg
push
or
ror
push
xchg
jg
stos
dec
inc
popa
jne
jl
and
jp
and
outs
stos
fld
outs
mov
and
nop
shr
aad
in
jne
shl
loop
adc
jae
mov
jne
mov
mov
(bad)
jle
or
add
push
movs
dec
xchg
xchg
pop
movs
int
xchg
ins
retf
sub
cmp
fistp
div
mov
stos
sbb
test
iret
adc
in
adc
or
sbb
jno
xor
dec
inc
stos
imul
and
or
xor
mov
pop
and
mov
in
mov
xor
enter
push
(bad)
mov
ret
ret
gs
(bad)
mov
lea
out
add
sbb
fs
adc
imul
mov
inc
cmp
cmp
xchg
test
inc
fstp
aad
(bad)
or
jae
cs
mov
or
pop
aam
int
dec
in
stos
in
and
pop
lods
dec
(bad)
neg
int
jl
cmps
(bad)
cs
in
lods
dec
je
and
in
cmc
dec
mov
mov
ret
push
inc
in
xor
push
int3
push
fwait
sahf
shl
dec
sbb
add
adc
repnz
or
push
sti
xchg
cs
std
mov
pop
pusha
and
and
sub
ss
jne
bound
ins
nop
hlt
jmp
jno
ret
pop
add
push
pop
dec
xchg
jbe
scas
pushf
jno
mov
xchg
push
push
pop
loopne
shl
or
add
jns
or
mov
mov
pop
mov
push
sub
jb
(bad)
gs
dec
inc
xor
ret
mov
ror
pop
add
(bad)
imul
sub
sbb
jg
cmp
mov
xchg
pop
xor
xchg
push
out
imul
mov
sbb
test
adc
or
pop
in
mov
mov
pop
in
sbb
mov
add
pop
adc
pop
fst
dec
fsubr
sub
fiadd
adc
mov
push
stc
pop
and
fsubr
xchg
pop
jg
dec
test
mov
sub
sbb
sub
rcl
mov
pushf
das
outs
iret
push
dec
jle
fldcw
ja
adc
gs
hlt
sub
enter
jmp
jmp
jo
xchg
out
pop
adc
sbb
jmp
mov
add
js
sar
cdq
fs
mov
push
push
add
xchg
jle
lds
jb
mov
daa
scas
mov
or
cmps
dec
popf
and
mov
arpl
pusha
fstp
int3
lods
and
or
retf
mov
jnp
xor
push
xchg
shl
pusha
pushf
jae
adc
test
scas
out
pop
outs
adc
jne
pop
jne
dec
aas
cli
retf
jle
dec
pop
jb
adc
and
dec
mov
pop
mov
outs
mov
cmp
adc
xchg
mov
ins
dec
cdq
jl
lock
cmp
jg
lods
pushf
push
push
aas
les
and
inc
cmp
scas
ins
pop
xchg
dec
dec
mov
add
in
fs
icebp
pop
and
sub
ror
jmp
stc
or
xchg
imul
cmp
sbb
fsubp
ficomp
pop
movs
mov
into
rcl
es
aas
aad
gs
inc
out
test
ds
push
fiadd
push
mov
push
int3
in
mov
xchg
mov
lahf
lods
cmp
or
in
retf
mov
(bad)
jb
aam
out
add
mov
ret
stc
jns
pop
lock
mov
mov
fnstenv
jge
push
ret
(bad)
pop
daa
mov
mov
imul
out
mov
cs
scas
test
add
out
jbe
dec
add
sub
test
add
adc
pop
mov
sub
punpckhwd
rcr
out
jmp
jb
mov
inc
int
out
sar
and
mov
mov
ret
div
(bad)
cmp
outs
adc
loop
test
icebp
(bad)
sub
push
xor
lods
imul
shl
cmp
rcr
xor
repnz
icebp
movs
add
test
and
jne
mov
inc
sbb
cmps
(bad)
ja
out
xchg
in
mov
outs
jb
and
cmc
cdq
cmp
pop
sub
mov
dec
fidivr
or
nop
cmc
jg
popa
mov
and
lods
mov
or
test
pop
inc
out
dec
jp
stos
fadd
jle
push
xor
repnz
mov
sahf
add
ds
into
mov
je
idiv
push
leave
fs
lods
push
jno
fbstp
cwde
jl
mov
mov
mov
or
test
xchg
call
inc
or
lock
push
imul
and
push
loopne
repnz
cdq
rcl
cmp
cli
clc
fldcw
mov
lea
sub
inc
pop
sub
ficom
nop
pop
jne
sahf
jg
ret
scas
jo
ret
mov
jge
mov
or
pop
not
fs
sbb
arpl
add
add
loope
jmp
loope
xchg
mov
sbb
add
loop
cli
test
lds
add
outs
adc
add
add
aam
retf
call
test
dec
inc
imul
or
rcr
mov
dec
mov
lock
or
(bad)
(bad)
outs
scas
sub
xchg
add
jnp
imul
call
cdq
adc
fs
mov
daa
jns
jnp
push
xor
(bad)
repnz
cmp
cdq
pop
jg
fsubr
mov
jge
cmps
jbe
popf
pop
xor
dec
sub
jmp
ins
jns
out
sbb
and
and
icebp
cmp
push
(bad)
(bad)
push
(bad)
or
fsubr
dec
sub
or
test
add
push
in
and
push
scas
iret
test
adc
fnstcw
mov
xlat
retf
dec
lea
mov
sub
mov
mov
mov
mov
rcr
jbe
iret
xlat
repz
mov
xor
dec
dec
jge
mov
ins
sar
(bad)
push
xchg
outs
mov
rcr
sahf
sti
loopne
pop
in
mov
test
xchg
jle
add
pand
push
test
pop
xor
imul
jbe
cmp
test
pop
int3
pop
jmp
fnstsw
cmps
and
add
rcl
xchg
mov
jge
sbb
out
push
cdq
outs
dec
pop
sti
icebp
(bad)
cmp
mov
mov
jp
scas
jge
push
adc
mov
jne
sub
xrelease
or
mov
sub
mov
xor
out
(bad)
push
mov
mov
add
movs
scas
add
fwait
pushf
add
and
stos
pushf
add
popa
mov
pop
cwde
in
and
scas
lock
xchg
mov
pop
hlt
xchg
les
xchg
dec
mov
jbe
push
jns
out
mov
movnti
rcl
cli
cmps
inc
(bad)
sbb
cmp
mov
jge
or
adc
js
test
sub
xchg
in
push
mov
cwde
lods
aas
aaa
in
into
jg
sbb
or
mov
int3
jle
inc
push
scas
jl
retf
(bad)
clc
sahf
sub
and
cmps
mov
mov
mov
int3
stos
dec
push
jno
xor
sub
inc
jno
inc
out
inc
xor
cmp
std
add
int3
imul
add
fld
(bad)
aad
rcr
test
cs
jg
retf
push
sbb
mov
and
(bad)
ds
lods
and
nop
jmp
xor
dec
jne
mov
and
arpl
imul
arpl
adc
add
std
mov
mov
leave
repnz
fstp
ja
add
les
lea
sbb
mov
sbb
fidiv
xchg
jne
repz
add
mov
ss
cmp
imul
movs
sar
cmp
shr
xchg
mov
jle
lods
retf
add
das
xor
xchg
jmp
sar
mov
jnp
loopne
fcom
int
in
mov
adc
jb
dec
fs
dec
mov
js
sti
(bad)
out
stos
ss
arpl
call
movs
inc
mov
inc
fadd
mov
mov
push
xor
sbb
sbb
push
in
in
in
pop
imul
fimul
or
or
add
adc
and
jne
out
cmp
jmp
or
test
cmps
cmps
loopne
shl
test
movs
jnp
sub
xchg
and
cmp
sub
cmp
push
inc
mov
ins
leave
inc
outs
adc
jne
cld
mov
arpl
cmp
pop
push
fimul
dec
addr16
jp
call
or
dec
push
outs
jnp
xchg
retf
mov
and
int3
jmp
repz
xchg
cmp
push
inc
test
jl
test
or
inc
cmp
xchg
and
or
cmp
mov
pop
pop
sti
sbb
cld
pushf
sbb
clc
rol
popa
add
aad
cmps
imul
test
mov
push
mov
jbe
cdq
call
gs
mov
jae
mov
call
rcr
ret
es
xor
addr16
retf
fisttp
inc
sbb
fwait
or
inc
(bad)
repz
retf
mov
fucomi
ds
imul
sbb
mov
pushf
repnz
mov
mov
cmp
pusha
rcr
pop
jo
scas
pushf
mov
sbb
fcom
xchg
xchg
mov
pop
bnd
imul
mov
test
retf
jmp
jno
pushf
jl
xor
ret
inc
mov
int
mov
pop
pop
or
hlt
call
adc
inc
xchg
fsubr
adc
ret
mov
jae
and
arpl
xor
add
cli
sbb
dec
in
dec
sub
(bad)
icebp
mov
push
xor
mov
xcrypt-cbc
cmps
push
xor
and
lods
ret
push
sub
(bad)
lods
adc
std
pop
jno
jecxz
cdq
mov
push
mov
in
(bad)
sar
dec
sub
iret
faddp
cli
adc
xchg
dec
pop
test
das
outs
inc
mov
aam
outs
mov
call
fadd
adc
scas
shl
out
nop
lods
mov
cmp
(bad)
lods
aaa
jge
xor
jp
push
sbb
jecxz
in
aas
sub
and
or
cmp
and
das
ret
add
test
(bad)
xchg
inc
or
lock
mov
jns
and
(bad)
fsubr
and
push
call
fisttp
jle
cmp
adc
es
in
inc
push
test
fsub
xchg
mov
nop
stos
inc
and
mov
sub
jl
cmp
adc
mov
add
in
sbb
push
xor
push
xor
push
ret
out
mov
stos
jae
jo
fs
addr16
in
clc
es
add
cdq
stos
mov
push
mul
sbb
fdiv
and
retf
sub
add
shl
test
cmp
or
rcl
jno
mov
mov
pop
cmp
cs
mov
xchg
(bad)
mov
pop
stc
pop
adc
in
inc
mov
(bad)
out
mov
add
inc
cmp
dec
ret
call
pop
xchg
int3
frstor
fdivrp
push
in
sbb
pop
jo
add
js
xchg
enter
ss
mov
mov
lock
mov
xchg
mov
fcmovu
cmc
xchg
jo
xor
jmp
cmp
fistp
push
pusha
jl
jb
fsub
sbb
test
cmp
cmp
cld
mov
xchg
lds
cmp
inc
sub
cmp
sbb
ins
mov
gs
xchg
mov
jne
mov
cmps
test
pop
cmps
xor
fst
dec
lahf
imul
or
aaa
sub
imul
rcl
in
dec
fstp
in
xchg
dec
icebp
xor
cmp
mov
pop
cdq
jae
(bad)
mov
mov
inc
fcomp
(bad)
jmp
mov
mov
dec
push
fiadd
sub
xchg
ds
cwde
das
in
sbb
and
lods
mov
loope
psrad
push
mov
xor
in
dec
outs
jnp
mov
loope
repnz
pusha
dec
movs
cmp
xlat
inc
xor
retf
pushf
and
movs
daa
dec
out
lds
jmp
test
arpl
in
arpl
nop
test
imul
aaa
bound
jmp
push
and
cmp
mov
inc
mov
loope
inc
clc
mov
cdq
inc
sub
jae
jne
mov
cmp
lods
or
rcl
outs
push
inc
sbb
sub
test
std
sbb
imul
das
add
int
sbb
pop
dec
mov
sub
and
fs
jmp
lods
xchg
(bad)
and
pusha
pop
mov
cmp
inc
addr16
scas
sbb
xor
adc
adc
sub
out
dec
sub
cmp
pop
(bad)
jae
mov
jge
xchg
mov
xor
push
jns
add
pop
mov
xchg
adc
adc
push
das
jmp
aaa
icebp
imul
dec
jo
lods
fmul
ds
cli
shl
inc
pop
in
loop
xor
inc
cmp
retf
aas
or
mov
or
mov
ss
xchg
mov
ins
fidiv
adc
xchg
jmp
in
xchg
mov
test
fld
loop
test
and
callw
call
ficom
and
pop
and
cmc
cli
inc
and
mov
inc
(bad)
ds
push
mov
jecxz
pusha
mov
in
push
push
test
loop
and
lods
or
aad
sbb
mov
sahf
pop
mov
les
mov
mov
das
loopne
js
stos
fwait
imul
aas
pop
sub
or
aaa
stos
jno
sbb
retf
xchg
cmp
es
stc
jno
inc
sub
mov
fsubp
loop
xchg
cmp
xchg
mov
jmp
jmp
mov
push
push
jne
mov
ja
pop
fadd
cmps
ds
cli
inc
and
push
cmps
mov
test
xor
cmps
(bad)
cmp
arpl
in
nop
data16
cmp
xor
pop
fs
lods
ret
sbb
popf
das
lds
xchg
and
ret
mov
sbb
xchg
clc
inc
sub
add
ror
or
dec
add
hlt
jl
dec
call
add
xchg
sub
jbe
sub
or
jg
stc
add
addr16
jb
jmp
call
dec
in
xchg
mov
daa
addr16
pop
std
mov
push
fld
stos
jg
les
scas
and
pop
mov
add
stos
jb
data16
dec
mov
dec
sbb
and
push
outs
test
xor
nop
xor
mov
dec
(bad)
aaa
ficomp
outs
outs
cld
mov
ds
mov
(bad)
in
es
hlt
xor
in
pop
pop
aam
in
ins
rcl
mov
pop
xor
loopne
movs
lds
or
fst
and
les
ins
gs
call
imul
pop
xchg
pop
imul
mov
int3
sub
mov
jecxz
sahf
add
sar
adc
pop
add
push
inc
popa
lods
mov
pop
imul
rcl
bound
ins
(bad)
es
pop
(bad)
jge
push
stos
aaa
mov
mov
sbb
cld
adc
fild
mov
xchg
out
or
sub
dec
jae
retf
nop
shl
daa
retf
movs
sbb
jmp
push
xor
add
out
(bad)
mov
or
outs
scas
stc
mov
or
ret
(bad)
dec
ins
(bad)
push
or
sbb
ss
fwait
xchg
dec
cmps
mov
push
and
rsqrtps
jmp
pop
and
test
mov
pop
in
lahf
in
pop
push
dec
xchg
adc
push
ret
sbb
sbb
hlt
fnstenv
das
jg
cmp
ja
mov
mov
sahf
or
dec
idiv
xor
mov
fwait
vpsadbw
es
push
mov
mov
js
movs
xchg
and
int3
mov
adc
or
mov
pop
outs
pop
cld
test
jnp
jge
dec
sahf
fisub
(bad)
xchg
xchg
sub
jl
inc
pushf
fxch
mov
and
scas
mov
xor
xchg
(bad)
(bad)
repnz
daa
fstp
int3
mov
adc
dec
nop
stc
mov
add
push
lahf
scas
movs
add
cmp
arpl
dec
or
sub
add
xchg
ins
fadd
(bad)
scas
test
sub
sub
xchg
fstp
or
aam
jg
xor
pop
mov
ins
imul
sub
je
cmps
adc
aad
dec
jo
jg
pop
add
ret
mov
rcr
push
jecxz
pop
fwait
mov
fcmovb
inc
push
add
inc
dec
dec
mov
rcr
lock
mov
pop
adc
pop
aam
pop
add
fbld
push
cld
fs
fstp
sbb
stos
and
inc
pop
aad
pop
jns
sar
shl
sub
xchg
rcl
xchg
loop
sub
push
test
and
dec
aas
cmp
push
mov
fcomp
cdq
out
xchg
sbb
cmp
pop
mov
sahf
push
sbb
mov
pop
lds
sar
cmp
xlat
mov
lock
stos
adc
xchg
outs
inc
push
rcr
xlat
xchg
add
mov
sub
mov
call
jle
adc
aas
push
out
pop
pop
xor
in
mov
std
inc
test
push
pushf
bound
scas
xchg
xor
fsubr
in
(bad)
imul
cmp
les
mov
xor
dec
hlt
aas
arpl
dec
lds
cmp
cli
xchg
mov
gs
jmp
mov
mov
inc
fidiv
nop
add
mov
mul
xor
sbb
movs
pop
fisttp
push
xlat
mov
xor
icebp
mov
hlt
and
enter
(bad)
imul
and
pushf
addr16
(bad)
jge
js
mov
xchg
fnstcw
sub
(bad)
sbb
shl
or
loop
out
test
enter
pop
repz
push
cmp
jge
imul
popf
imul
and
and
push
movs
in
rcl
mov
pop
lds
pop
push
sbb
dec
loop
or
xchg
mov
aam
jne
jnp
hlt
jecxz
leave
outs
jg
popf
mov
cmp
pop
push
loope
adc
adc
in
xor
adc
out
dec
mov
inc
mov
mov
sub
call
push
(bad)
mov
pop
outs
loop
popa
fdivr
mov
test
clc
inc
shl
lock
sti
and
and
push
and
stos
dec
mov
pop
mov
lea
sub
lock
push
push
cmp
add
push
out
cmp
or
cmp
test
shl
adc
repz
aam
out
or
enter
inc
not
scas
scas
pop
enter
mov
add
fwait
cli
outs
mov
std
int
xor
fld
outs
inc
xchg
adc
scas
(bad)
xchg
sbb
xlat
pop
cmp
fs
fstp
sbb
xor
test
loopne
push
lock
cmp
mov
xchg
leave
in
out
push
mov
cmp
sub
xor
dec
jne
xchg
mov
or
(bad)
push
xchg
popa
push
or
retf
fld
add
and
push
inc
mov
retf
sbb
fwait
or
pop
(bad)
fcmovnbe
out
jge
dec
xlat
addr16
dec
jb
cmp
sub
nop
ret
inc
popa
std
fnsave
sbb
out
jmp
movs
lea
xchg
ss
hlt
addr16
icebp
add
or
cmps
out
mov
loope
fwait
mov
inc
dec
repz
or
dec
clc
mov
add
(bad)
gs
mov
in
and
dec
pop
stc
jl
stc
sbb
fwait
repnz
popa
div
xchg
fimul
idiv
cld
movs
(bad)
lods
pop
out
loop
inc
push
push
add
js
dec
xchg
inc
arpl
fcom
jnp
mov
fld
add
int3
mov
sub
and
loopne
sub
sahf
sbb
adc
sbb
(bad)
mov
mov
mov
mov
addr16
es
inc
stos
ins
outs
jo
mov
sbb
jno
mov
xchg
xor
fsubr
(bad)
sti
and
fcmovbe
out
xchg
test
in
xor
mov
pop
inc
sbb
mov
test
cli
adc
ins
loopne
into
jmp
ficomp
add
ds
or
ret
add
pop
ja
xor
xchg
mov
and
xor
and
dec
and
jmp
loope
cld
hlt
push
popa
scas
jmp
jp
lds
xor
dec
rol
jg
(bad)
sar
pop
call
jb
mul
xor
sbb
jl
cmp
sbb
mov
lods
movs
mov
jne
cmp
call
(bad)
xor
jno
push
test
cmp
mov
loopne
mov
add
dec
pop
mov
mov
adc
jb
(bad)
sub
or
mov
daa
add
xchg
push
add
mov
dec
sar
or
pop
lods
fcomp
jl
and
stc
adc
fiadd
lahf
cmps
sbb
adc
aaa
pop
xchg
outs
mov
dec
mov
js
stos
adc
push
shr
mov
cs
adc
fiadd
pop
lods
pop
icebp
mov
lahf
and
in
bound
(bad)
sub
addr16
mov
jo
fstp
add
in
pop
dec
out
hlt
inc
xchg
xchg
and
cmp
sbb
test
xor
mov
mov
mov
mov
stos
jb
jbe
pop
fst
sub
int
cmp
loop
adc
lds
imul
movs
ins
jge
jo
imul
(bad)
sti
adc
ss
test
xchg
mov
or
pusha
xchg
push
xor
ret
out
and
retf
(bad)
xchg
ret
pop
sar
aam
or
call
fdivr
out
dec
dec
mov
aad
adc
sbb
jne
sbb
js
mov
pop
mov
mov
fwait
jmp
mov
xchg
pop
ja
push
xchg
lock
(bad)
and
cmps
sub
adc
ss
aaa
sub
es
push
rol
ret
pop
push
cmp
retf
sub
mov
xchg
rol
and
fcom
cmp
cs
mov
mov
jb
loopne
xchg
cmc
mov
or
xor
cwde
cmp
sbb
and
inc
dec
mov
dec
ret
xchg
enter
imul
nop
dec
in
push
cdq
push
call
scas
lods
in
push
cld
jmp
fstp
mov
add
adc
xchg
mov
mov
mov
add
data16
mov
mov
lea
xor
dec
adc
call
sbb
aas
fcmovne
cmp
sti
mov
imul
adc
push
jae
xchg
popf
xchg
fsubr
stc
fcom
pop
cmp
xchg
sub
dec
mov
mov
fisubr
arpl
mov
aaa
shl
or
rol
pop
loope
or
sbb
mov
mov
mov
(bad)
or
mov
int3
scas
sub
pop
mov
call
mov
(bad)
xor
dec
rcr
push
xchg
mov
dec
push
add
xor
jbe
in
push
xor
(bad)
xchg
cmps
outs
call
imul
(bad)
xor
jp
in
addr16
sbb
sbb
and
or
jne
test
jb
cli
pop
fwait
pushf
or
(bad)
adc
sti
pop
daa
push
fucom
(bad)
and
mov
hlt
sbb
das
xchg
div
imul
ins
int3
push
mov
leave
daa
and
adc
mov
inc
xchg
in
popa
daa
movs
mov
or
sub
test
pop
das
clc
mov
xchg
pop
sub
sub
lahf
sar
push
cmp
jmp
aad
stos
mov
xor
rcr
and
adc
dec
sbb
dec
test
es
rcl
test
inc
add
xor
mov
xor
pop
adc
in
mov
or
dec
mov
sub
test
rcr
inc
scas
sbb
imul
mov
pop
jmp
sbb
push
leave
test
mov
je
ja
mov
adc
fst
movs
fld
and
inc
and
ret
cmp
enter
sub
sbb
mov
shl
mov
mov
retf
daa
(bad)
jmp
hlt
icebp
std
(bad)
mov
das
push
cmp
repnz
repnz
pop
imul
or
dec
sbb
jp
movs
mov
mov
pop
mov
outs
scas
push
inc
or
push
lods
rol
sub
lock
sbb
dec
and
inc
mov
dec
sbb
adc
jns
xor
ja
mov
jb
fmul
xor
mov
popa
cwde
loope
out
fcom
es
test
retf
hlt
popa
mov
scas
out
stc
mov
or
orps
mov
mov
dec
dec
enter
scas
loopne
xchg
mov
lock
sbb
lahf
jo
test
daa
sub
and
lock
setbe
clc
add
popf
outs
mov
outs
movs
je
pop
in
inc
mov
mov
sbb
and
mov
loopne
loope
inc
out
mov
or
das
int3
mov
jle
in
dec
push
arpl
cmc
jno
mov
dec
mov
shr
xchg
ins
sbb
imul
std
add
xor
push
icebp
inc
mov
mov
inc
jb
stos
mov
push
movs
int
push
xchg
xchg
jbe
mov
into
jp
xchg
sbb
jg
rol
ins
mov
push
test
cmps
sbb
xchg
and
std
icebp
lods
adc
call
sahf
cdq
in
push
(bad)
jae
push
dec
fidivr
fldcw
inc
mov
fsubr
(bad)
(bad)
mov
cwde
jno
movs
std
daa
inc
pop
les
in
outs
popf
movs
mov
inc
adc
push
hlt
and
pop
adc
inc
jecxz
push
add
and
sub
test
jno
sub
push
mov
push
mov
push
cmp
dec
inc
mov
cmp
test
jp
inc
mov
imul
imul
cdq
push
gs
(bad)
push
xor
(bad)
or
sbb
out
jnp
or
mov
or
shl
push
pop
cdq
popa
sub
or
and
cmc
gs
(bad)
test
mov
data16
pop
icebp
shl
lock
pop
dec
aad
scas
(bad)
pop
out
ds
les
cmp
imul
fsub
rol
aaa
inc
add
push
stos
imul
imul
jno
add
(bad)
movs
sar
out
rcl
jno
xchg
xchg
stc
dec
mov
xor
jo
repnz
and
inc
arpl
mov
std
mov
repnz
mov
movs
rol
push
rcr
mov
mul
pop
mov
jl
imul
ret
and
lahf
fdivr
dec
push
stos
in
xchg
add
repnz
adc
lods
xchg
aad
sti
iret
jnp
ins
dec
arpl
dec
sbb
dec
dec
push
call
ins
push
das
sbb
dec
fwait
sti
pusha
repz
mov
outs
ret
jno
call
stos
sti
push
test
push
mov
jge
mov
or
gs
sbb
pop
(bad)
ret
mov
out
dec
jecxz
or
test
inc
rol
paddusw
pop
and
and
stos
fadd
adc
data16
pop
sub
ins
mov
xchg
aad
aas
lahf
push
imul
fdivr
(bad)
imul
cs
and
out
mov
push
leave
popf
mov
sub
pusha
jbe
sbb
ins
dec
lds
jp
pushf
push
sub
call
aaa
cmp
jg
jge
mov
or
jo
or
sbb
jge
repnz
fstp
push
dec
inc
cmps
bound
scas
adc
add
stos
mov
xlat
dec
fdivr
xchg
nop
adc
inc
out
xchg
jnp
pop
sbb
in
sti
sub
outs
xchg
xor
inc
pop
ds
mov
ret
iret
jnp
sbb
xchg
xor
loopne
fnsave
xchg
pop
hlt
sub
jnp
cmp
addr16
mov
in
aaa
je
dec
fisttp
retf
(bad)
popa
mov
dec
int3
push
fdiv
inc
mov
push
cld
sbb
and
push
dec
fcom
idiv
fsubr
pop
or
dec
pop
ss
sub
mov
cmc
jge
lock
dec
pop
mov
in
and
(bad)
adc
xchg
not
dec
retf
cmp
jecxz
and
pop
and
ins
xor
pushf
inc
pop
imul
iret
sub
sub
fst
sub
add
sar
pop
sub
into
outs
fs
(bad)
mov
and
dec
or
add
pop
xor
into
sub
xchg
jle
cdq
in
rol
pop
icebp
in
mov
pop
in
sbb
inc
xchg
pop
add
push
push
sub
test
outs
ret
inc
add
stos
mov
sbb
out
test
pushf
jno
mov
pusha
pop
out
mov
add
stos
push
xor
sbb
aaa
imul
sub
test
dec
ret
fdivr
ror
enter
retf
or
sub
popa
loope
or
add
icebp
loopne
adc
call
mov
adc
sbb
enter
imul
fmulp
pop
sbb
out
in
sub
fsub
pop
adc
add
inc
xor
jb
push
shl
lods
das
add
mov
xchg
adc
jmp
jb
icebp
jg
lahf
cld
inc
dec
out
lahf
xchg
xchg
pop
(bad)
or
xlat
add
jo
jmp
inc
adc
aas
pusha
sub
inc
imul
jmp
hlt
xor
mov
xor
fadd
lods
test
push
pop
xchg
jl
push
dec
xor
movs
pusha
cmovge
xor
mov
add
xchg
call
inc
and
(bad)
sub
addr16
das
inc
xchg
mov
arpl
cmp
xchg
xlat
dec
addr16
cmps
adc
xchg
or
mov
out
xchg
pop
sub
inc
push
sbb
inc
and
mov
inc
mov
mov
mov
inc
cmp
out
add
hlt
movs
push
push
call
cmps
xchg
les
lahf
jb
neg
add
add
xor
jae
sub
shl
sahf
or
pop
pop
sbb
jg
pop
out
adc
pop
add
mov
call
mov
cld
add
cpuid
push
retf
into
jbe
xchg
popa
jp
aad
xor
pop
pop
js
adc
mov
mov
cmp
push
sbb
lods
popa
jge
pushf
pop
cmp
sar
das
sahf
stc
call
cmp
popf
dec
add
fidivr
add
repz
call
add
loopne
je
sub
pop
iret
or
xchg
or
outs
rcr
cli
cmp
pop
pusha
icebp
jns
dec
pop
mov
and
je
fs
mov
daa
adc
mov
cmc
sahf
adc
push
add
cli
sub
leave
retf
pop
dec
ja
(bad)
xchg
adc
or
popa
cmp
mov
mov
xor
adc
jno
mov
test
inc
xor
adc
cli
sub
cmp
jmp
sbb
test
test
in
retf
sbb
xchg
xor
ds
and
bound
mov
scas
sbb
vmovaps
(bad)
gs
mov
call
inc
jl
pop
xlat
scas
push
test
adc
adc
or
sub
push
stc
in
loope
jmp
mul
cmp
retf
mov
fmul
ror
sbb
hlt
mov
fstp
or
push
inc
dec
mov
xor
mov
mov
sub
arpl
pop
cld
lods
mov
nop
mov
add
mov
mov
sahf
movs
mov
pop
or
push
enter
stc
(bad)
jle
sbb
push
mov
out
lds
cmps
fstp
mov
inc
sub
or
cmc
addr16
mov
pop
(bad)
xor
add
(bad)
leave
xchg
out
in
jmp
and
ror
mov
sub
loope
sub
aad
jl
retf
popf
and
imul
xchg
sbb
stos
pop
mov
xlat
jecxz
call
jmp
rcl
xor
push
(bad)
into
add
lock
call
mov
dec
push
mov
or
repnz
adc
and
push
inc
xchg
inc
fwait
push
ds
mov
inc
inc
pop
mov
cs
aaa
ja
aaa
in
inc
into
test
sbb
jae
loop
sub
fcom
or
add
je
push
xchg
repz
or
(bad)
sub
mov
sbb
cmp
adc
inc
sub
test
repnz
jecxz
imul
mov
add
xor
and
adc
fcom
loop
mov
sbb
int3
xchg
jp
or
ret
mov
jge
adc
add
in
test
mov
aas
clc
xchg
cmp
call
or
xchg
bound
mov
(bad)
fadd
xor
out
sbb
in
out
xchg
push
mov
fbstp
push
cs
pop
jp
and
jnp
int
adc
xchg
xchg
ss
inc
adc
lods
push
lea
gs
cmc
ins
push
add
mov
add
xor
inc
mov
ins
mov
push
xor
fmulp
sbb
push
in
xchg
(bad)
or
daa
lea
aaa
and
fdivr
jp
sbb
mov
arpl
call
mov
pop
fs
push
(bad)
(bad)
loope
outs
inc
pop
mov
mov
aaa
cmp
cdq
pop
test
int
cwde
enter
es
sahf
ror
ss
mov
adc
in
jg
cmps
sbb
vxorps
jecxz
ins
ficomp
(bad)
cli
push
push
popa
push
stos
push
shl
dec
sbb
js
cmps
cmp
lods
dec
mov
xchg
cmps
ds
dec
mov
test
in
and
mov
out
mov
jns
mov
jmp
rol
daa
test
nop
mov
(bad)
stos
inc
mov
or
pop
xor
enter
test
pop
leave
sbb
sbb
iret
mov
(bad)
out
pop
or
in
pop
sbb
jns
out
dec
std
fisttp
xor
sbb
pop
nop
adc
push
jmp
orps
cmps
outs
push
xchg
push
fld
pop
jmp
push
xchg
xchg
adc
out
popf
jl
pop
mov
ins
add
fbstp
outs
inc
repz
(bad)
movs
mov
pusha
shr
add
int3
fdiv
icebp
and
movs
mov
inc
cwde
(bad)
mov
sbb
pop
dec
xor
inc
nop
xor
xor
add
leave
mov
mov
iret
push
inc
loopne
add
mov
and
and
dec
stos
out
mov
mov
adc
shl
loopne
cmp
mov
mov
cmp
xor
cmp
pop
(bad)
mov
lahf
imul
(bad)
(bad)
or
xor
push
hlt
push
scas
call
ret
cmp
jns
sahf
adc
mov
xchg
jg
mov
push
mov
dec
movs
aaa
fdivr
adc
loope
cmc
mov
in
ss
fs
push
dec
jp
mov
loope
sub
pop
jno
nop
lods
jmp
popf
push
rcl
dec
push
lahf
call
mov
sub
adc
jecxz
mov
xchg
mov
ret
or
outs
pop
inc
cli
leave
jb
je
repnz
int3
cmps
adc
xchg
shr
and
jmp
mov
mov
fst
js
add
sub
sub
sbb
jno
rol
xor
out
call
cdq
mov
loop
nop
ret
ins
jne
popf
inc
fcmovne
xchg
inc
dec
jge
sbb
cdq
mov
inc
and
mov
push
mov
les
aaa
xor
mov
test
dec
mov
out
outs
pop
pushf
adc
cwde
out
pop
inc
jns
push
mov
cmp
mov
ins
mov
(bad)
mov
push
adc
pop
sbb
ds
in
push
(bad)
adc
mov
icebp
push
sbb
inc
mov
bound
pop
test
js
cmc
cmc
and
pop
scas
fmul
adc
push
in
or
cmps
mov
jmp
inc
cmp
fnstcw
pop
jle
(bad)
sub
aad
in
addr16
iret
test
(bad)
ret
jns
xor
jbe
jmp
aas
adc
cli
xor
repnz
cmc
push
loop
fidiv
push
dec
pop
loop
fisub
sub
aaa
repnz
mov
fistp
xchg
test
mov
mov
fisttp
sub
cwde
ret
inc
outs
or
xchg
test
out
clc
push
fs
jle
fs
ret
cmp
jecxz
pop
jne
fwait
inc
add
lock
and
ja
or
add
call
loopne
sbb
xor
sbb
or
(bad)
fnstcw
(bad)
aad
push
mov
cmps
stos
mov
xchg
push
test
sbb
jecxz
sbb
cld
and
jmp
dec
jge
test
fmul
push
sti
(bad)
xor
and
(bad)
popa
daa
sub
pminub
add
fwait
out
je
cmp
push
imul
outs
out
inc
out
mov
mov
mov
(bad)
test
(bad)
jl
scas
dec
pop
mov
(bad)
jnp
out
dec
cwde
lock
add
in
sahf
enter
xchg
or
fsub
(bad)
jne
push
out
xor
mov
jmp
mov
add
ret
jae
stc
ret
repnz
dec
scas
and
fwait
ret
adc
cs
sub
sub
ror
xor
into
shl
push
ds
and
adc
(bad)
std
out
sahf
test
mov
call
hlt
mov
cmps
je
jecxz
inc
adc
scas
inc
shl
push
pop
mov
sti
in
repnz
jno
jo
push
sub
and
shl
pop
nop
(bad)
mov
push
dec
je
fcomip
add
das
(bad)
xchg
xchg
or
push
test
add
aam
in
mov
jb
int
mov
xchg
cmp
mov
jp
movs
push
or
lahf
loope
push
hlt
shl
dec
mov
mov
sub
pop
ror
inc
enter
push
add
fldenv
jecxz
stos
cs
jecxz
arpl
xchg
es
out
into
jle
fs
dec
rcr
mov
push
sbb
dec
or
jnp
outs
iret
mov
sahf
xlat
push
clc
sti
out
rcl
jbe
(bad)
mov
pop
in
and
xchg
sub
iret
xor
push
loop
mov
jp
push
mov
pop
xor
add
stos
cwde
add
and
and
or
add
out
stc
push
fisubr
push
inc
sbb
popf
add
and
pop
into
inc
jae
mov
imul
jge
cmp
data16
aad
outs
stos
retf
mov
xor
jb
push
hlt
(bad)
loope
sar
cs
pop
xor
mov
and
movs
push
sub
cmp
jmp
adc
sbb
cmps
sub
test
adc
clc
xor
fidiv
and
mov
cmp
mov
push
dec
xchg
repnz
clc
ret
xchg
sub
or
scas
jg
mov
push
stos
(bad)
sbb
dec
dec
and
stos
not
cmp
inc
int
mov
popa
ja
loope
sbb
pop
mov
out
lods
fsub
popf
jns
shl
daa
adc
inc
(bad)
mov
xor
sbb
nop
pop
ret
xchg
xchg
xchg
lea
adc
mov
mov
outs
int
jno
ins
movs
cwde
xchg
loopne
je
test
popa
mov
leave
adc
retf
fst
shr
or
push
add
rcr
xor
dec
or
adc
push
cmp
gs
into
mov
inc
inc
arpl
jg
lds
data16
outs
xor
and
sti
adc
out
(bad)
sub
not
add
frstor
sbb
loope
dec
pop
loope
and
push
adc
mov
(bad)
mov
retf
je
sbb
dec
mov
jae
inc
out
jge
cmc
pop
mov
in
out
xchg
into
pop
(bad)
sub
mov
shl
and
jns
pop
push
movs
sub
push
or
xor
stos
movs
pusha
cmp
and
loopne
or
(bad)
pop
mov
nop
jl
sub
fimul
xchg
inc
dec
in
jno
stc
jmp
dec
sbb
lds
xor
xchg
cmp
repnz
jns
repz
mov
push
mov
sahf
dec
pop
xchg
sub
cs
lea
inc
cmp
cmp
scas
rcl
mov
push
jp
daa
loop
pop
(bad)
in
popf
loop
(bad)
scas
ret
mov
movs
sti
mov
xchg
xchg
cmp
fcom
xor
adc
sbb
mov
jmp
(bad)
cli
pop
loopne
xchg
popa
popa
enter
cdq
xor
add
daa
pop
push
xor
xor
dec
ret
fst
in
xor
sub
es
jo
xor
std
mov
repnz
(bad)
and
ja
iret
mov
push
push
and
cmp
test
push
mov
pop
jmp
cmp
sahf
cmp
xchg
xor
fimul
stos
enter
xor
fisubr
imul
stc
cdq
stc
jl
sub
test
dec
add
lods
in
cmp
pop
(bad)
jae
aam
and
bound
cmp
push
lahf
cmp
sbb
adc
adc
dec
(bad)
(bad)
fnstsw
lods
xor
mov
aas
imul
and
cmp
adc
mov
mov
adc
ins
call
aad
je
rol
daa
popf
repnz
stos
or
je
adc
jmp
adc
sbb
push
mov
mov
in
xor
loopne
cdq
push
cwde
test
lods
retf
sahf
adc
dec
inc
mov
push
and
xchg
mov
inc
cmp
movs
imul
push
aam
sbb
mov
in
adc
push
outs
repz
lds
pop
jno
jmp
cmp
popa
fist
es
test
(bad)
pop
pop
loop
das
imul
or
push
and
stos
jmp
lods
loopne
rcr
mov
push
jecxz
pop
pop
sbb
jg
dec
ds
aas
xchg
loope
mov
test
es
fninit
movs
icebp
test
adc
loopne
or
jae
push
jbe
cmp
ret
inc
cmp
xchg
adc
xchg
push
pop
cmp
lea
pop
sbb
aad
jl
sti
mov
or
jmp
pop
inc
nop
pop
ins
sahf
mov
dec
in
mov
jmp
es
mov
mov
fsub
and
push
inc
movs
cmp
jecxz
pop
mov
inc
xchg
lea
mov
and
mov
pop
popa
stc
mov
sti
push
inc
rep
out
or
call
sub
(bad)
std
cmp
es
mov
push
in
das
mov
xlat
(bad)
jmp
jg
push
lods
lods
aas
addr16
stos
sbb
adc
xchg
adc
adc
sub
out
shr
lods
sti
inc
xor
push
test
popa
adc
adc
mov
test
frstor
popf
cmps
dec
add
ret
xor
vsqrtpd
repz
loop
mov
loopne
jl
cdq
pause
push
push
jnp
push
lahf
test
cmp
out
mov
push
mov
jne
imul
test
push
pop
jnp
push
ja
and
outs
outs
cdq
jge
outs
mov
sbb
ret
inc
and
cmp
jne
mov
jge
and
pop
test
mov
sbb
mov
sub
mov
test
and
in
cmp
call
(bad)
mov
inc
lock
push
dec
movs
pop
sti
mov
and
push
xchg
das
(bad)
(bad)
call
pop
jmp
mov
stc
sbb
jmp
push
push
jb
lock
jae
dec
jle
mov
repnz
xor
or
lock
ins
pop
jnp
add
mov
mov
xor
xchg
mov
shr
cmp
add
aad
cmps
das
mov
cmc
xchg
aam
pop
sub
jne
mov
jge
popf
jb
push
fdiv
pop
loopne
(bad)
mov
rol
mov
cwde
test
nop
mov
adc
add
(bad)
fnop
dec
adc
adc
test
mov
jmp
aam
push
or
xchg
adc
cmp
add
push
jmp
lods
and
ret
(bad)
pusha
addr16
cmp
dec
lock
jno
fsubr
mov
bound
arpl
out
or
or
pop
shufps
je
(bad)
cwde
jg
and
add
or
mov
lods
clc
mov
movs
pop
and
or
(bad)
loopne
jmp
imul
and
mov
call
test
loopne
cmps
push
dec
sub
pop
add
outs
inc
jae
(bad)
arpl
cmps
test
jmp
enter
aam
xchg
fwait
stos
cmc
mov
js
xchg
rcl
dec
shl
fwait
mov
mov
jmp
xchg
lods
mov
push
(bad)
ins
jge
push
imul
add
call
add
shl
cmp
jae
add
fistp
or
int
xchg
xor
dec
aaa
test
int3
call
js
jmp
or
mov
inc
dec
jnp
out
sub
dec
sahf
push
and
pushf
out
retf
jmp
xor
fcmovnb
mov
je
imul
mov
(bad)
xlat
mov
jo
cwde
fmul
loope
movs
dec
adc
mov
pop
lods
shl
xor
mov
loope
loopne
cmp
sub
int
je
add
lea
int3
pop
retf
das
cwde
int3
loopne
scas
cwde
xchg
push
push
imul
ficom
js
cmp
adc
cmp
das
xchg
ficom
xchg
out
dec
test
jne
int
or
xlat
xchg
dec
in
mov
xor
pop
xchg
popa
aam
adc
cmp
push
adc
jecxz
out
in
fisttp
inc
scas
ja
dec
xchg
ins
jno
mov
jmp
mov
rol
mov
inc
arpl
add
push
add
and
dec
dec
out
push
out
jns
add
rcr
pop
in
aam
cmc
rcl
(bad)
mov
int
scas
outs
jl
cmc
test
mov
mov
xchg
cmp
js
adc
add
clc
jbe
mov
nop
pop
add
or
push
xor
xchg
rcl
cs
aad
cmp
sbb
jb
test
rcl
lock
jnp
aaa
jle
sbb
and
sub
das
and
loope
mov
add
and
mov
sbb
lods
adc
loop
mov
add
or
ret
xchg
sub
std
pushf
xchg
jae
fwait
xchg
cdq
sbb
test
cmp
jno
inc
mov
movs
add
jbe
cmp
push
rcr
or
ss
or
push
jbe
ret
cmp
mov
push
inc
cs
mov
outs
outs
push
mov
and
mov
pop
cs
(bad)
sub
push
xchg
aas
(bad)
mov
into
das
aam
outs
add
push
xor
adc
push
cdq
ror
sbb
cmp
cld
repz
sub
xor
inc
sbb
test
sbb
xor
mov
(bad)
and
pop
mov
loopne
push
fs
cli
shr
xchg
pop
test
ror
not
add
dec
jmp
iret
sahf
div
arpl
sbb
sub
push
imul
pop
mov
aad
sbb
and
add
jmp
lods
cwde
pop
retf
and
sbb
mov
pusha
jno
sub
xor
int
out
dec
outs
dec
and
add
syscall
xchg
dec
das
sahf
ins
and
xchg
test
ja
hlt
dec
ss
mov
push
add
and
jne
ss
lods
mov
mov
mov
xchg
fdiv
sub
cmp
out
fdiv
xor
movs
mov
pop
shr
mov
lods
movs
mov
jbe
test
jbe
mov
std
ins
aad
jb
jmp
or
dec
clc
das
sbb
fwait
or
sub
nop
inc
or
mov
data16
jae
shl
arpl
in
or
out
cmp
out
or
and
adc
mov
inc
ret
shl
int3
in
cwde
aas
mov
ret
dec
push
sbb
ret
ds
xchg
lds
cmp
aam
xchg
xchg
and
js
inc
push
and
rcr
les
xor
call
push
sub
retf
shr
aas
outs
pop
inc
cwde
loope
fld
test
mov
mov
js
repnz
mov
add
push
pushf
ret
imul
(bad)
cmp
cwde
das
sti
stos
adc
push
and
or
fwait
jnp
sbb
push
jmp
sbb
lds
push
cmp
dec
xchg
sbb
push
cmc
sub
je
je
mov
retf
hlt
mov
test
push
dec
and
cmp
mov
and
jmp
jae
jnp
mov
sbb
xchg
retf
xlat
sub
fs
bnd
xchg
mov
xchg
xchg
cmp
cmp
in
xor
bound
push
push
(bad)
loopne
cmp
(bad)
mov
push
iret
mov
fcom
loop
jp
dec
xchg
push
and
and
or
data16
movs
std
scas
cmps
add
bnd
cmovae
rol
loope
rcl
jno
mov
push
dec
je
(bad)
pusha
test
xchg
or
sbb
push
rcr
stc
mov
mov
int
mul
bound
test
pop
fisttp
jmp
dec
xor
dec
mov
in
fld
adc
dec
shl
ror
jbe
loop
xchg
repnz
in
(bad)
ins
push
push
cli
sub
xchg
add
xor
dec
(bad)
gs
push
adc
inc
xor
(bad)
sub
and
sub
sub
xchg
pushf
stos
les
stos
iret
and
scas
(bad)
and
push
je
and
push
js
dec
or
nop
bound
sub
xchg
push
pop
cmp
mov
dec
outs
jb
xor
adc
test
adc
inc
push
ds
mov
add
mov
lods
xor
xor
sbb
cmp
and
(bad)
jnp
aam
test
sbb
cld
and
sub
add
dec
cld
in
outs
adc
loopne
repz
jae
icebp
pop
and
mov
int3
jle
cmp
dec
pop
push
sahf
push
mov
xor
loop
sbb
fcomp
dec
scas
dec
ins
popa
mov
push
lods
fist
nop
mov
movs
mov
sub
call
lods
not
push
or
ficom
xlat
or
add
mov
push
movs
aas
pop
data16
jg
cmp
fdiv
dec
inc
icebp
clc
aad
scas
lahf
push
or
dec
mov
push
popa
add
jp
call
in
ret
mov
stc
outs
jns
mov
pop
or
leave
dec
imul
sub
jp
repz
xchg
xor
cmp
(bad)
(bad)
push
or
test
gs
push
ins
inc
xchg
or
ret
lds
cdq
xchg
mov
xchg
push
add
adc
mov
ror
cmp
add
inc
dec
and
xchg
adc
pop
nop
mov
out
out
and
and
mov
in
faddp
jno
in
daa
bound
js
int
stc
jmp
sub
lea
jle
pop
push
jg
sahf
push
(bad)
pop
enter
jmp
retf
push
cdq
aam
rcr
inc
nop
inc
sbb
xor
sub
fisttp
inc
mov
jo
mov
push
mov
xchg
mov
std
xchg
out
mov
jo
sar
push
xchg
or
out
pop
push
push
pop
cmp
jae
aam
sbb
mov
ss
jmp
out
je
loope
les
popa
or
or
mov
test
loopne
jmp
mov
lahf
jmp
mov
ja
stos
pop
out
call
adc
xor
cmp
xchg
mov
fbstp
lahf
push
call
test
xchg
push
and
aam
stos
aad
jb
push
xchg
cld
mov
adc
cmp
adc
ror
sub
mov
push
pop
jnp
adc
es
sub
cmp
mov
movs
test
out
loopne
imul
shl
jb
dec
mov
cmps
or
stc
or
sbb
mov
call
or
pop
das
mov
fstp
cdq
mov
popa
hlt
push
loop
enter
push
mov
scas
push
mov
test
cmp
mov
push
sub
jmp
xchg
sbb
inc
or
imul
cdq
and
mov
fiadd
jge
popa
or
test
lds
or
jecxz
pop
xchg
mov
scas
dec
xor
jnp
jg
enter
nop
dec
fst
popf
call
iret
xor
ror
(bad)
jne
inc
jmp
or
out
mov
ds
test
std
repz
cmp
add
loop
into
cmp
xchg
jge
idiv
and
push
ds
shr
jle
and
sbb
lods
aad
mov
xchg
adc
push
in
mov
fist
or
cmp
out
cmp
jl
jg
xlat
xor
hlt
dec
daa
inc
xchg
adc
dec
sub
mov
jbe
xor
and
idiv
js
or
shr
adc
jae
aad
mov
xchg
pusha
fisttp
sbb
dec
xchg
imul
jmp
add
retf
push
add
aaa
out
cmp
cld
pop
mov
sbb
mov
ins
aas
ret
inc
and
icebp
xchg
mov
cli
in
cmp
add
pop
mov
icebp
mov
sub
ins
fidiv
mov
adc
rcr
movs
cld
add
retf
xchg
int
(bad)
in
bnd
inc
xchg
jmp
jmp
mov
addr16
xor
loop
je
cmp
call
add
call
aad
ret
retf
or
fnclex
push
(bad)
xchg
inc
enter
add
adc
jno
mov
dec
rol
aam
sbb
xor
push
mov
test
push
inc
mov
es
js
jb
pop
in
push
fwait
sbb
test
pop
jmp
sub
leave
es
inc
outs
pop
dec
out
daa
das
sbb
cwde
in
xor
mov
ror
pop
mov
inc
pop
hlt
xor
dec
aad
sub
pusha
cmp
mov
add
dec
jno
jge
ja
or
mov
mov
inc
jle
sub
scas
push
cwde
jle
push
add
sbb
sub
inc
cs
outs
or
mov
jle
shr
(bad)
aas
lea
adc
jg
or
cld
sbb
dec
add
pop
add
ret
fstp
test
test
(bad)
jns
dec
push
sbb
call
ins
mov
inc
mov
pop
pop
xlat
loope
push
lea
test
call
pop
data16
mov
icebp
mov
jp
arpl
xor
jge
push
inc
xor
cwde
call
in
cmp
mov
mov
mov
test
(bad)
cmp
or
cmps
jg
out
lahf
add
jb
mov
sbb
sbb
cli
cmps
pop
jle
xchg
gs
ror
call
pop
out
in
outs
xor
sbb
mov
bound
retf
pushf
mov
push
cmp
sub
cmp
push
add
ror
mov
xor
test
hlt
push
sub
mov
in
push
sub
mov
and
xchg
daa
cmps
jmp
sub
mov
out
xchg
out
enter
and
add
fsubr
xchg
pop
mov
int
in
ds
fcomp
dec
and
add
and
sar
ins
and
inc
pop
mov
in
imul
imul
xor
push
push
xlat
jno
pop
pop
push
popa
dec
adc
rol
test
or
push
dec
pop
dec
pop
or
popa
test
cmp
stc
sub
mov
test
xchg
xor
or
retf
iret
leave
in
push
scas
movs
daa
push
or
xor
out
xchg
jae
pop
adc
dec
pop
fdiv
ds
add
xchg
adc
push
sbb
mov
bound
jmp
neg
lea
adc
lds
scas
into
add
cmp
mov
xchg
bound
pushf
push
jle
inc
mov
mov
sub
aad
fimul
inc
push
std
jle
push
ficomp
xor
dec
sbb
xlat
xchg
mov
lea
xchg
cmps
out
push
mov
adc
inc
fstp
mov
cmps
and
mov
std
mov
xor
ins
or
adc
fmul
sar
sbb
mov
xchg
add
call
dec
xor
pop
or
sub
xor
inc
and
movs
mov
mov
fwait
inc
mov
cmp
mov
lods
mov
mov
movs
das
mov
retf
xlat
jmp
popa
add
popa
ja
(bad)
addr16
mov
lea
and
xchg
or
test
std
int3
jmp
ds
push
jecxz
les
jno
test
movlhps
mov
xlat
push
push
dec
fldenv
movs
xchg
popa
sti
xchg
xor
sahf
pop
push
cmc
dec
sub
cmp
dec
or
sub
xchg
pop
cmp
pop
cmp
xor
sub
sub
ret
jae
lock
push
sbb
add
(bad)
xchg
mov
pop
jge
fstp
pop
and
jmp
dec
add
lds
jns
inc
cs
loope
leave
mov
inc
mov
ret
pop
dec
cmp
dec
inc
jno
mov
test
(bad)
cmp
mov
gs
ins
sub
outs
inc
mov
mov
gs
mov
and
ss
imul
inc
cli
aad
cmp
push
xor
pushf
or
sti
dec
int
adc
xor
popa
js
pushf
fnstcw
or
xchg
clc
in
cs
sbb
xchg
cld
dec
xor
dec
mov
xor
add
fmul
mov
in
movlps
dec
mov
cmp
push
mov
dec
out
mov
dec
in
pop
mov
sbb
add
and
sbb
fwait
sbb
xor
es
pop
add
pop
mov
(bad)
sub
pop
popf
idiv
mov
or
retf
mov
cdq
jp
in
mov
fld
jae
pop
inc
sub
mov
push
push
(bad)
movs
add
push
jns
push
sub
and
or
mov
iret
das
dec
in
sti
adc
mov
add
mov
pop
adc
pop
xchg
(bad)
jb
add
frstor
gs
in
pop
push
sub
sub
xor
sbb
in
fxch
sbb
mov
loop
ja
mov
arpl
jo
jns
jne
icebp
cld
mov
xor
xchg
sub
mov
loop
out
mov
cmp
ins
xor
data16
sar
inc
jmp
retf
fdivp
xchg
pop
dec
jbe
cmp
(bad)
gs
xchg
or
mov
sbb
pop
imul
sti
pop
sub
(bad)
dec
iret
retf
pop
repnz
pop
std
mul
(bad)
mov
movs
push
jl
push
jb
sbb
jl
adc
mov
dec
sub
adc
cmp
cmp
(bad)
push
cmps
in
out
shl
call
aas
ret
inc
pop
popf
push
vpavgw
jle
dec
cmp
out
pop
fmul
fstp
test
dec
inc
icebp
inc
(bad)
push
ficom
shr
pop
fs
and
cs
xchg
out
es
(bad)
cmp
and
retf
or
xor
inc
lods
js
dec
jbe
scas
lods
pop
push
xlat
ret
fs
inc
fiadd
sub
aam
pop
xlat
or
outs
imul
inc
sub
ret
(bad)
aas
xor
pop
(bad)
(bad)
xchg
ss
dec
push
pop
xchg
pop
mov
pop
mov
mov
test
mov
mov
stc
mov
ins
pop
pop
cmps
mov
add
pop
mov
ret
int3
sti
fisubr
jo
cmp
mov
push
call
(bad)
mov
aaa
cmp
pop
js
dec
call
repz
and
fwait
in
clc
inc
stos
ins
lea
pushf
shl
sub
(bad)
leave
sbb
mov
enter
hlt
imul
xchg
inc
or
cmp
out
nop
out
fistp
repz
pop
mov
add
mov
sub
sbb
sbb
mov
fcom
clc
cmc
adc
sub
ss
jnp
out
fiadd
adc
(bad)
sar
xor
loop
pop
mov
mov
in
adc
repnz
repz
fst
add
jecxz
xor
sbb
mov
pop
(bad)
scas
icebp
mov
jp
call
je
add
test
xchg
inc
cmp
jbe
jbe
xchg
xor
jmp
and
test
push
mov
jo
sbb
mov
pop
cdq
xchg
push
outs
lahf
adc
imul
sbb
mov
(bad)
ret
push
das
dec
inc
xor
add
xchg
aam
in
inc
out
sysret
fcom
sub
xor
mov
inc
fadd
arpl
ffreep
add
lods
mov
jg
or
xlat
imul
mov
imul
cmps
mov
xor
pop
mov
fisttp
jg
idiv
jge
xchg
inc
pusha
test
jne
or
scas
gs
inc
pushf
iret
ins
in
add
jg
les
dec
adc
dec
rcr
ins
in
cwde
in
test
and
sbb
bnd
std
ror
xor
cmc
fimul
test
sbb
aam
adc
add
out
adc
adc
push
rcl
pop
test
(bad)
loopne
jae
test
sbb
cmp
dec
jmp
imul
pop
sub
mov
aad
imul
or
inc
loop
and
sub
pop
lds
sub
xchg
mov
adc
repnz
(bad)
fdiv
(bad)
adc
xor
es
pop
out
xchg
mov
cmps
js
ficom
imul
pop
fild
repnz
adc
xchg
push
in
rol
loope
jg
push
lods
pusha
mov
(bad)
xor
ret
inc
cdq
cmp
fistp
cmc
push
fwait
repz
js
iret
loope
inc
sbb
fsub
lods
mov
mov
or
mov
ds
ss
cs
(bad)
in
and
pop
outs
and
adc
repz
aad
lods
movs
adc
fidiv
test
aaa
mov
sub
rol
add
jge
leave
(bad)
mov
xor
or
rcl
sub
cmp
fiadd
mov
cdq
jb
mov
clc
cmp
mov
test
push
jb
data16
aam
add
cmps
ds
xlat
popf
cli
das
ror
push
xlat
and
sub
fmul
mov
xor
xor
and
cmp
out
cmps
mov
sahf
and
dec
ss
jo
ror
out
in
nop
pop
movs
push
aaa
icebp
(bad)
mov
ds
push
push
sbb
adc
mov
mov
(bad)
sbb
les
pop
push
scas
mov
push
adc
mov
nop
xlat
pop
pusha
dec
ins
imul
js
cmp
neg
imul
sub
sar
push
adc
int
jnp
lock
int
cmps
jmp
ffree
call
aam
jmp
inc
daa
and
cdq
shl
adc
mov
xchg
jl
xchg
mov
das
daa
push
loop
pop
sub
xor
dec
aas
shl
cli
push
add
or
arpl
xchg
mov
sub
xor
arpl
stos
mov
add
push
jb
pop
outs
outs
out
frstor
retf
enter
stos
jp
fidiv
pop
xor
sbb
pop
cmp
leave
jecxz
mov
shl
sti
xchg
mov
add
pop
xlat
test
mov
and
xchg
mov
popa
fsin
mov
mov
xor
stc
inc
cwde
aad
adc
data16
and
or
inc
popa
mov
(bad)
jg
mov
ret
(bad)
ret
stos
add
std
ret
mov
pop
pop
xor
rcr
sbb
dec
dec
retf
add
test
test
and
aaa
sub
inc
mov
and
dec
out
mov
inc
pop
dec
inc
xlat
add
out
inc
out
loopne
outs
enter
adc
mov
cmps
stos
jo
cmc
cmp
and
push
cmp
imul
add
sbb
lea
lock
(bad)
ins
push
xor
jnp
loope
into
out
jbe
cmc
aam
les
cmp
ss
add
sbb
jl
adc
sub
jae
mov
or
jae
jg
mov
loope
add
or
dec
popf
xchg
mov
pop
addr16
nop
dec
xor
movs
sub
and
or
arpl
test
dec
xchg
jb
dec
cmps
jmp
sub
xchg
inc
addr16
pop
jle
test
xchg
cmp
ja
push
and
jo
retf
push
xchg
cs
test
xchg
jnp
add
mov
sbb
push
scas
cmps
aaa
jecxz
ret
popa
push
loope
jg
sbb
adc
fmul
inc
je
and
sti
mov
mov
add
sbb
into
xchg
add
cmp
(bad)
lods
xchg
mov
xchg
push
cmovns
mov
inc
jecxz
jnp
or
xchg
frstor
mov
xchg
js
lock
mov
out
in
mov
icebp
repnz
(bad)
mov
mov
arpl
lahf
xor
loop
and
pop
in
add
cmp
inc
iret
pop
mov
adc
lods
movs
mov
add
xchg
sub
jae
push
jno
ret
aaa
nop
popf
push
das
mov
pop
inc
mov
test
push
dec
and
push
pushf
xchg
fisttp
into
enter
mov
mov
dec
or
jle
(bad)
fnstenv
std
(bad)
and
pop
jb
(bad)
shl
dec
out
outs
push
stc
lods
sbb
cmp
sub
movs
sbb
mov
xchg
fimul
jo
pop
mov
fld
xor
loopne
push
pop
outs
jbe
mov
sub
std
jbe
push
test
adc
cmp
mov
mov
test
ja
push
xor
mov
fdiv
sbb
sbb
movs
cld
push
inc
fstp
pop
xchg
and
xor
xchg
outs
sub
scas
(bad)
sbb
mul
or
sbb
popa
cdq
iret
jp
jns
sbb
call
retf
shl
pop
enter
pop
dec
ds
sub
sar
rol
dec
loope
dec
inc
push
(bad)
das
xchg
pusha
mov
popa
sub
xor
out
into
fdiv
fdivp
xchg
test
pop
jmp
rcl
loope
fdiv
xor
sbb
inc
mov
ficomp
or
stc
mov
sub
lea
sbb
adc
mov
popf
cwde
ja
sub
sub
test
dec
adc
cmp
push
imul
push
jo
push
test
sub
outs
sbb
pop
icebp
jp
aad
(bad)
loopne
hlt
sub
loop
cmp
mov
cmp
fsubr
ins
ds
cmp
test
cdq
sub
push
arpl
push
mov
int
loopne
fsubr
dec
and
xor
fdivr
not
data16
pop
fsubr
lea
les
js
add
aam
pop
xchg
int
jmp
or
xor
mov
xchg
and
jmp
loope
jmp
repz
test
jbe
sub
stc
popf
mov
pop
xchg
pop
ds
out
lock
push
das
scas
xlat
lds
jae
push
(bad)
fnstenv
xor
mov
mov
les
sbb
or
inc
cmp
xor
pop
in
dec
dec
retf
push
xor
shl
inc
jle
push
fs
dec
std
sbb
mov
add
(bad)
jns
inc
cli
cmp
or
test
xchg
push
repnz
push
jae
dec
cmp
dec
idiv
xor
pop
push
sub
push
(bad)
push
xchg
aaa
call
inc
push
retf
aas
call
popf
data16
xor
loope
pop
stc
xor
xor
mov
adc
fadd
mov
sbb
push
test
jno
jno
push
or
dec
ret
or
or
popa
jl
xlat
pop
mov
jnp
sbb
xlat
cld
sbb
rcl
scas
dec
loopne
aad
xchg
lods
lods
aas
out
cmp
arpl
jne
add
(bad)
les
adc
and
repz
mov
adc
dec
sbb
push
or
mov
pop
sahf
dec
mov
mov
movs
jns
retf
mov
cmp
in
sbb
xchg
gs
scas
mov
arpl
and
fisub
push
xor
mov
dec
int3
mov
xchg
push
xchg
push
sub
stc
cmp
popf
fwait
mov
xor
mov
in
pop
dec
lods
mov
pusha
xchg
xor
xor
jp
inc
or
mov
addr16
int3
xor
adc
push
push
mov
js
rol
fbld
cmp
push
imul
(bad)
cmp
pop
sub
and
and
dec
ds
loopne
and
daa
or
fmulp
push
test
sbb
std
inc
(bad)
addr16
es
or
sub
mov
xor
sbb
aas
push
arpl
dec
arpl
and
dec
scas
sub
xchg
mov
mov
bound
cmp
mov
pop
pop
aaa
pop
inc
pop
imul
pop
pop
jo
test
aas
fstp
ret
imul
sub
arpl
shl
pop
movs
cmp
xchg
int
pushf
(bad)
das
mov
cmp
adc
pop
mov
or
clc
or
jmp
aad
xchg
loopne
jg
sbb
repz
shl
xchg
mov
push
or
mov
sti
xor
pop
jae
imul
mov
imul
ja
cdq
jle
imul
lea
push
mov
sub
dec
mov
and
daa
sub
jl
lds
jno
shl
mov
pushf
and
jne
sbb
sub
add
inc
sub
lock
cvttps2pi
gs
fcomp
jle
jle
mov
cmps
pop
outs
popf
push
adc
dec
daa
out
sub
mov
mov
ficomp
inc
cmp
push
repnz
into
hlt
pop
out
jle
add
fdiv
sub
pop
sub
pop
dec
fcom
jmp
cmps
idiv
repnz
adc
popa
cmp
push
dec
es
dec
cmps
or
add
dec
jne
cld
ror
aam
inc
sbb
ins
into
add
mov
jno
das
and
ret
cmp
add
bound
sub
jae
and
or
outs
int
inc
sub
icebp
scas
fisubr
loop
pop
push
dec
ins
dec
mov
mov
imul
out
pop
std
push
(bad)
pop
nop
mov
(bad)
push
adc
fs
jecxz
sub
(bad)
mov
sub
jne
add
mov
loope
out
rcr
or
(bad)
cmp
xchg
gs
ja
push
retf
mov
aas
pop
add
popf
aad
out
push
pushf
test
push
call
push
div
cs
or
add
fistp
stos
xor
jb
xchg
jo
jb
inc
cmp
shr
cmp
jbe
adc
stos
mov
mov
pusha
dec
pop
cmp
mov
setnp
(bad)
les
jae
jo
test
adc
jnp
sub
ins
jo
scas
mov
shl
aad
mul
fild
or
in
mov
cmps
xlat
loopne
fcomp
mov
in
jecxz
pop
scas
mov
push
loopne
or
je
dec
jb
test
push
mov
fcmovnb
add
jge
xchg
xor
test
mov
dec
fist
int3
stos
push
jecxz
jl
pop
popa
mov
repz
jge
dec
jbe
xor
ins
dec
push
cmp
addr16
scas
jno
test
adc
mov
test
xchg
mov
adc
add
sar
mov
ds
ins
inc
mov
vphsubwd
popa
or
ins
sar
mov
jle
jae
add
mov
cmps
mov
mov
xchg
or
pop
(bad)
push
fisub
jne
fdiv
lahf
dec
fadd
aam
pop
cmp
je
and
inc
sub
fld
pop
adc
jmp
cdq
add
sub
in
test
and
int3
div
xor
add
hlt
sub
retf
retf
add
(bad)
push
fcomp
dec
mov
imul
sub
add
mov
or
sbb
sbb
xor
repnz
lea
xchg
les
jne
mov
fadd
je
lea
cdq
mov
pop
sbb
fdivp
les
(bad)
mov
jo
into
mov
jne
mov
mov
lahf
lock
jl
sar
adc
xchg
mov
mov
sbb
pushf
clc
xchg
in
call
cs
mov
jg
loop
iret
icebp
mov
or
and
add
jae
rep
lods
aam
jp
cli
std
and
stc
ins
push
mov
mov
mov
addr16
push
mul
add
pop
xchg
loop
cmp
pop
(bad)
pop
lods
es
sbb
dec
lods
lods
sbb
sbb
loope
hlt
icebp
ds
jo
mov
frstor
js
dec
lods
cmp
push
jns
js
bound
adc
cld
(bad)
pop
push
fst
lea
shl
inc
add
es
adc
movs
fstp
add
cmp
data16
jmp
scas
xor
add
cli
xor
les
pop
(bad)
in
outs
adc
add
sbb
jns
adc
ds
and
push
add
popa
aas
stos
vpunpcklwd
cmp
shl
out
movs
add
xor
dec
push
repz
inc
fdivr
cmp
cmp
les
cs
sbb
test
sbb
cmp
ds
jb
sbb
popf
retf
mov
sti
push
sub
xchg
xchg
add
fst
xor
xor
inc
push
inc
push
cwde
(bad)
mov
push
out
ficom
inc
cld
int
mov
addr16
and
scas
xchg
lds
and
lahf
cmp
or
inc
sbb
fcomi
add
data16
cdq
sub
pop
call
hlt
push
adc
es
(bad)
fist
and
bound
in
in
dec
je
scas
cmc
pop
xchg
stos
lock
std
dec
repz
pop
pop
rol
repz
jns
fimul
or
loop
sub
(bad)
sub
pop
adc
mov
xchg
ja
jmp
adc
or
(bad)
push
inc
sbb
mov
dec
in
aaa
jg
add
mov
(bad)
popa
(bad)
push
fdiv
data16
sti
dec
sub
stos
inc
jmp
je
mov
dec
test
jg
sub
xor
xchg
xor
mov
scas
rol
jae
jg
mov
pop
enter
pop
jge
jns
ret
cmps
fnstsw
inc
dec
dec
dec
cmps
sub
les
mov
pop
arpl
xchg
push
nop
mov
mov
lea
pop
and
lock
dec
test
mov
push
sub
int3
inc
push
push
dec
sub
lahf
lods
test
enter
jo
mov
loopne
shr
cmps
mov
bound
ss
dec
mov
mov
mov
mov
xor
aam
jmp
and
into
or
pop
and
jno
and
pusha
inc
lock
popf
xor
iret
mov
sti
pop
sbb
je
jl
jb
cmps
jb
shl
jns
mov
sbb
xor
imul
shl
push
(bad)
aas
and
scas
sbb
ror
adc
jl
test
sbb
in
int
test
fld
daa
adc
repz
sahf
dec
scas
sahf
pop
pop
data16
out
pop
or
mov
fdiv
stos
mov
push
ins
(bad)
fnstenv
cmovae
fcmovb
sar
mov
mov
aam
ret
js
cwde
xchg
or
gs
test
xor
cli
dec
fcomp
dec
test
out
fnstsw
out
or
test
inc
mov
pop
mov
inc
xchg
and
fild
(bad)
sbb
sub
xchg
sub
ret
ds
jne
mov
int
push
mov
data16
xor
arpl
jmp
add
sti
daa
js
arpl
sar
xchg
fcmovu
lea
fstp
push
mov
jne
das
add
mov
and
jbe
cwde
mov
mov
xor
mov
fidiv
ins
mov
or
cmp
dec
or
mov
dec
jmp
pop
jo
fidivr
leave
dec
mov
xchg
jae
pop
fcom
popa
rol
(bad)
int3
test
mov
dec
jno
je
loopne
mov
dec
das
sub
xchg
xchg
mov
ret
(bad)
jnp
outs
xchg
iret
add
imul
push
jae
adc
outs
cmp
cwde
and
mov
sti
inc
sbb
push
test
adc
pop
sbb
or
xchg
hlt
fstp
bound
test
pop
jnp
cmp
dec
push
movaps
enter
leave
ror
jns
retf
loopne
sub
out
sbb
inc
fmul
jne
jb
jne
movs
pop
(bad)
and
dec
daa
sti
sbb
mov
or
ficom
adc
cmp
lahf
push
sub
inc
arpl
mov
and
sub
sti
xor
out
cmp
mov
or
mov
arpl
dec
(bad)
dec
xchg
xchg
mov
mov
pop
or
dec
imul
inc
nop
int
jl
xor
jge
inc
outs
jecxz
add
mov
and
add
xor
jl
sbb
and
mov
push
and
stos
jmp
jne
push
fmul
std
push
push
stc
ror
or
scas
mov
cli
xor
xor
stos
sahf
cmp
test
jbe
test
mov
(bad)
or
adc
xlat
rol
push
stos
bound
in
jae
sbb
sub
or
hlt
enter
and
xor
ins
jb
pop
cwde
pop
enter
sub
(bad)
scas
xchg
rcr
ss
jnp
push
mov
cs
ins
movs
inc
aas
imul
popf
ret
jne
adc
outs
leave
test
out
cmp
dec
out
jg
js
jmp
mov
ret
pop
sbb
retf
test
pop
jmp
dec
add
push
push
sub
hlt
in
add
ja
sar
adc
jl
dec
mov
clc
mov
f2xm1
mov
sub
(bad)
leave
cmp
rcr
inc
push
popa
jb
mov
inc
mov
or
sub
push
pop
std
pop
into
jmp
cmp
jmp
pop
add
int
mov
xchg
inc
neg
sbb
or
mov
cwde
xchg
xor
movs
imul
test
dec
shl
sbb
out
inc
not
data16
movs
inc
jl
push
cmp
ja
aas
(bad)
test
adc
psllw
iret
int3
stos
in
dec
sbb
xor
add
aas
pop
mov
mov
or
(bad)
stc
inc
adc
test
and
popa
loope
iret
xchg
xchg
push
mov
mov
ins
movs
mov
xchg
rcl
sbb
xchg
shl
pop
mov
and
mov
xchg
push
cwde
jl
pop
mov
sti
outs
mov
fsub
inc
mov
xor
call
jae
shr
mov
sbb
mov
(bad)
ja
int3
add
push
lds
xor
nop
test
shl
add
xchg
loopne
mov
dec
mov
jo
xchg
jp
pop
rcl
(bad)
xlat
and
mov
push
pusha
sbb
retf
aas
outs
mov
xchg
in
neg
pop
je
mov
hlt
retf
sub
mul
cwde
aam
stos
push
push
adc
movs
jmp
add
movs
retf
push
jecxz
in
fdivr
cwde
add
cld
leave
push
sbb
inc
push
out
jmp
sub
movzx
movs
add
mov
(bad)
lahf
push
(bad)
arpl
xchg
fs
xchg
sub
mov
icebp
aad
inc
fst
inc
ds
loop
xchg
movs
hlt
sbb
jg
(bad)
mov
stos
adc
xor
lods
jbe
nop
sbb
mov
dec
push
adc
or
push
loop
ds
(bad)
cdq
pop
inc
xchg
pusha
es
pop
pop
jp
sub
jae
mov
test
xchg
sub
dec
mov
xchg
std
inc
addr16
jns
arpl
xor
xor
dec
sbb
emms
stos
nop
popa
sahf
inc
aaa
rol
pusha
jno
ret
inc
push
shl
aad
and
js
ins
ret
clc
cdq
pop
mov
jb
test
push
mov
(bad)
gs
mov
and
daa
fidiv
dec
int
call
pop
push
xlat
dec
leave
cld
xchg
andps
iret
cmps
dec
pop
jge
sar
sbb
mov
rcl
inc
or
fdivr
cmc
cdq
xchg
xchg
mov
daa
fwait
in
aad
xor
jbe
cmp
sub
inc
cli
dec
sub
add
dec
or
clc
dec
lods
push
test
popa
xchg
out
or
std
mov
fadd
push
test
sub
sbb
or
mov
nop
fisub
jp
xlat
dec
in
and
sbb
ffree
adc
cmp
inc
push
imul
ror
pop
call
shl
retf
xchg
dec
aam
bound
mov
mov
or
xor
jmp
lahf
es
arpl
stos
ret
jg
push
or
adc
fbld
in
out
push
call
pop
das
std
shl
outs
mov
in
or
adc
(bad)
mov
out
or
cmc
pop
lods
xor
popa
das
jno
loope
jecxz
xchg
mov
dec
aas
jbe
inc
test
mov
xchg
cmps
int
outs
or
jg
pushf
bound
pop
mov
lds
push
(bad)
out
and
lock
enter
jg
lea
jge
xor
or
xorps
sub
mov
fiadd
fldenv
sbb
jo
mov
(bad)
inc
pusha
push
ret
fisttp
sbb
ret
test
movs
ror
sbb
mov
adc
jg
push
sahf
lods
outs
cmp
sbb
sub
mov
(bad)
punpcklwd
inc
mov
test
ss
pop
or
out
or
pop
inc
in
pop
jb
adc
and
push
inc
xchg
push
ins
fsub
adc
sbb
(bad)
iret
sbb
pop
xor
mov
sub
xchg
scas
cmc
ins
ror
cdq
sbb
imul
fisubr
fnsetpm(287
jge
aas
loopne
sub
cmps
pop
xchg
out
ror
and
mov
jno
enter
push
movs
jp
dec
pop
push
stos
sbb
xchg
and
btc
jo
and
popa
das
cmc
retf
lods
pop
lahf
and
push
jae
enter
das
mov
mov
jb
ins
(bad)
mov
ins
gs
out
test
repnz
jge
cmp
jge
int3
inc
push
into
add
mov
jnp
test
xchg
xchg
pop
sbb
loopne
mov
sbb
loopne
pop
xchg
inc
mov
push
mov
mov
mov
or
punpcklbw
std
sub
push
xchg
push
adc
and
daa
in
out
add
ret
popf
pop
(bad)
stc
cwde
sub
sub
std
jns
dec
frstor
dec
sub
cdq
(bad)
ss
xchg
push
outs
push
shr
xchg
cs
mov
push
aad
mov
lahf
jg
lods
das
mov
sbb
mov
xchg
xchg
pusha
fnsave
inc
mov
and
and
stos
out
mov
shl
xor
mov
jg
mov
std
cmc
test
mov
add
mov
cld
mov
scas
retf
in
jb
out
mov
outs
mov
loopne
call
mov
xchg
mov
sub
jo
jo
push
mov
daa
mov
push
clc
retf
mov
stc
inc
add
retf
mov
and
cmps
or
sti
inc
pop
movs
aas
lods
in
outs
lea
cmp
push
adc
repnz
sti
fs
adc
movs
cmp
cmps
popf
into
addr16
mov
je
mov
fcmovnb
shl
cmp
cwde
std
sbb
cs
cmps
lods
mov
xor
dec
loop
pop
pusha
add
cwde
out
inc
push
pop
fstp
jno
arpl
or
idiv
mov
test
sbb
fwait
push
xchg
cmp
jne
(bad)
jge
inc
jmp
popf
mov
dec
mov
inc
pop
dec
sub
pop
jmp
sub
outs
or
and
jp
mul
fadd
adc
addr16
inc
in
stc
in
mov
and
mov
or
fild
js
sbb
xchg
and
xor
push
mov
mov
cwde
lea
fneni(8087
in
mov
enter
adc
mov
std
aam
arpl
repz
add
dec
ds
xchg
cmc
mov
bound
lods
js
ins
nop
push
repnz
xor
pop
leave
ja
cmp
es
add
adc
mov
ret
cld
(bad)
sbb
(bad)
mov
cmc
sub
out
pop
sbb
xor
pop
pop
cmp
aaa
shr
pop
cmc
rcl
lahf
js
sbb
dec
jge
bound
mov
nop
or
stc
mov
jmp
repnz
in
cmp
call
jb
pop
or
and
jp
mov
lds
mov
push
aas
jmp
int3
pop
xor
ins
add
mov
pop
mov
cli
push
pushf
xchg
and
inc
retf
ins
das
sub
out
jnp
clc
es
in
mov
je
jno
(bad)
int
cmovns
loope
stc
retf
mov
cmp
dec
mov
pop
dec
add
add
or
cs
or
clc
out
pop
mov
repnz
je
stos
xor
dec
gs
sub
mov
sbb
repnz
cmp
cs
aam
push
adc
or
add
shr
imul
(bad)
hlt
mov
ja
cmc
and
std
pop
(bad)
stc
dec
adc
sub
mov
add
loope
adc
adc
mul
pop
fcom
mov
js
mov
paddw
jno
adc
imul
push
in
xor
sbb
fwait
sub
(bad)
mov
adc
cmp
js
or
xor
hlt
xchg
xor
xlat
leave
sbb
in
mov
xchg
mov
pop
mov
ins
ins
pop
pop
clc
and
test
ss
(bad)
xchg
xor
ds
xlat
pop
(bad)
ret
jge
or
outs
jns
xor
fnstsw
jecxz
movs
cld
mov
test
push
js
xlat
ret
jns
je
out
xor
push
sbb
mov
adc
add
dec
es
lahf
lock
fcomi
sub
enter
dec
jg
(bad)
fisubr
cmp
shr
enter
add
stos
lds
add
ds
dec
sub
hlt
adc
push
xchg
xchg
(bad)
out
add
int
mov
xor
adc
out
inc
fild
jge
jno
pusha
fcmovnu
inc
ins
mov
mov
je
mov
mov
mov
in
xor
sbb
push
sbb
popa
xor
out
test
aaa
scas
mov
inc
pop
(bad)
(bad)
mov
int
lods
lock
sti
imul
push
stc
xor
das
lods
xchg
jnp
stos
or
xor
hlt
mov
push
add
adc
outs
test
dec
sbb
pop
push
out
adc
jecxz
push
hlt
shl
icebp
sti
pusha
outs
adc
or
aad
fwait
popf
xlat
daa
xlat
popf
lods
push
aad
sub
sub
add
mov
(bad)
int
pop
popa
shl
mov
add
(bad)
or
scas
ins
in
push
mov
aaa
call
mov
push
inc
movs
cdq
xchg
leave
frstor
sbb
or
(bad)
xlat
cmp
mov
int
mov
fcomp
or
dec
test
ss
jp
(bad)
push
mov
add
xor
sbb
pop
leave
sbb
out
loop
(bad)
mov
dec
mov
and
fisub
push
mov
adc
int3
or
call
cmp
sbb
and
add
fcmovnbe
pushf
pop
stc
xchg
cmp
ss
outs
add
jne
int3
cmp
push
or
ret
sub
mov
pushf
jno
cmp
rcl
bound
cmc
fisubr
adc
or
outs
call
retf
fs
daa
pop
ins
cmp
push
xchg
and
js
ins
and
neg
clc
inc
jae
test
sti
mov
xchg
jbe
shl
push
jno
sti
outs
jno
push
nop
into
push
sub
sub
or
fidiv
shr
clc
cmp
addr16
loop
cwde
dec
bound
mov
pusha
xor
xchg
jae
xchg
aaa
cmp
xchg
popf
(bad)
lea
mov
aad
push
sub
push
jecxz
stos
aad
dec
adc
xor
push
arpl
out
mov
(bad)
scas
jbe
jg
mov
jae
jg
icebp
jg
lods
xchg
xchg
jmp
cmps
fldcw
mov
int3
sbb
xchg
sub
xchg
and
jbe
nop
leave
loop
lock
aaa
nop
ins
in
ss
dec
push
ror
pop
xlat
inc
pop
add
daa
adc
jo
in
movs
push
or
xor
(bad)
push
pop
and
jmp
(bad)
inc
aas
dec
cmp
mov
loopne
int3
push
test
cmp
inc
fistp
in
lahf
ror
arpl
repz
lods
xchg
jmp
clc
ins
xchg
add
hlt
jp
mov
push
mov
mov
push
aam
pop
aaa
sbb
mov
cli
add
sbb
pop
fcmovne
in
cmp
or
js
add
mov
nop
sub
div
in
cmp
jnp
int3
adc
data16
je
sub
fist
or
lahf
mov
mov
mov
push
shl
fldcw
inc
sahf
xchg
std
outs
cwde
outs
xchg
mov
pop
mov
lock
push
in
jo
fistp
lods
sbb
xchg
lds
xor
inc
loop
into
ins
aaa
inc
and
inc
shr
arpl
adc
out
pop
lods
or
xor
sbb
sbb
and
scas
mov
ja
sub
add
and
aad
in
fisttp
iret
in
or
dec
jle
adc
or
(bad)
clc
dec
rcr
imul
xchg
push
arpl
cld
mov
sub
retf
sahf
push
or
xor
(bad)
cmp
mov
xor
popa
push
pop
push
test
cwde
cmps
inc
mov
push
(bad)
cmp
mov
push
lea
stos
sbb
in
push
pop
cld
lahf
push
jb
lods
sub
(bad)
xchg
lea
dec
jg
jae
dec
lods
mov
dec
pop
outs
ja
jmp
sbb
movs
adc
mov
lods
out
dec
sar
iret
gs
mov
test
jnp
or
in
ss
add
fs
aaa
inc
jnp
jecxz
mov
fnsave
pop
pop
add
mov
test
bound
sbb
cs
mov
xor
(bad)
fwait
aas
mov
xor
cs
in
leave
lahf
out
in
cmp
movs
aas
push
ret
jae
xchg
add
icebp
enter
es
mov
dec
fcmovne
mov
loop
je
or
fdivr
sar
jno
adc
arpl
loopne
jnp
cwde
test
xor
inc
addr16
or
sbb
retf
jmp
ss
in
push
and
dec
or
mov
and
mov
outs
int3
sub
dec
inc
je
dec
pushf
push
xchg
mov
mov
mov
pop
repnz
test
mov
in
adc
jmp
xor
mov
in
dec
lds
push
cmp
in
(bad)
(bad)
push
cmp
in
jae
jp
sbb
bts
add
pop
xchg
mov
push
cmp
arpl
cwde
fnstsw
mov
mov
push
mov
movs
lahf
xchg
push
add
sbb
loope
(bad)
dec
test
mov
cmp
adc
movs
daa
xchg
mov
pop
test
push
cdq
push
xchg
fcom
ror
mov
mov
out
call
xor
mov
xchg
loop
and
jmp
addr16
fistp
add
jecxz
inc
pop
jp
cmps
jmp
xchg
sbb
dec
cmp
xchg
add
sbb
cwde
lods
test
pop
mov
and
jg
inc
shr
jo
fsubr
cmp
jp
add
ins
cmp
inc
shl
cmp
cmc
lods
mov
out
fsin
stos
and
mov
sub
jo
xor
push
mov
icebp
sub
daa
fldenv
mov
cmp
in
cmps
subps
push
pop
das
jp
push
sti
shr
mov
mov
xchg
repnz
in
ret
hlt
ret
mov
movs
pop
test
cdq
ins
mov
or
mov
xor
in
in
xor
cmp
jge
add
(bad)
cmc
mov
cdq
mov
jp
cmp
adc
xchg
push
out
test
cmps
in
movs
stos
sub
push
xchg
sub
inc
add
sti
jmp
jge
jmp
les
xor
aas
int
pop
aaa
not
jecxz
inc
add
fs
and
mov
sahf
imul
mov
aam
movs
mov
(bad)
stos
cs
adc
jl
adc
cmps
mov
(bad)
push
mov
jnp
lahf
add
retf
inc
dec
cmps
in
test
in
inc
mov
push
cmp
sbb
fst
fimul
das
mov
inc
xor
mov
ja
push
int3
inc
stos
div
sub
clc
mov
fwait
mov
mov
push
cmp
jecxz
mov
lds
pop
dec
mov
hlt
xor
cmp
add
fadd
lods
fbld
xlat
dec
mov
ja
(bad)
mov
ss
pop
xchg
stc
(bad)
in
stc
les
outs
sti
fisub
mov
pop
mov
sub
in
(bad)
fistp
mov
shl
add
push
xor
mov
sahf
arpl
xchg
jge
sub
mov
mov
fbstp
inc
xchg
jp
add
jp
fiadd
push
mov
pop
ss
jns
std
fsubr
aad
sti
jmp
sbb
push
sbb
aad
sbb
(bad)
imul
icebp
cmp
neg
jo
out
mov
adc
xor
iret
sbb
fisttp
pop
pop
jnp
jecxz
call
adc
add
int
adc
add
push
call
pop
cmps
or
lods
and
inc
inc
add
cs
or
repnz
inc
pop
rcr
cmp
push
pop
mov
pusha
push
add
mov
sbb
add
nop
push
xor
mov
pop
push
cmovbe
lods
jmp
xchg
cld
pop
push
popa
cmp
cli
ja
rcl
ret
mov
jmp
cmp
gs
ss
push
imul
pop
js
jnp
or
ret
in
mov
fild
jp
popf
in
ss
out
jbe
aaa
push
sub
push
movs
mov
mov
fcomp
jnp
push
cmp
cmps
or
aas
movs
out
lock
aas
les
retf
inc
gs
push
pop
dec
popa
outs
pop
inc
jl
mov
sahf
cmps
cdq
(bad)
inc
out
push
mov
mov
mov
loope
out
dec
jecxz
stos
add
movs
ja
sbb
pop
rol
ins
in
ficom
pop
cmp
retf
mov
cwde
call
adc
fisttp
mov
mov
inc
dec
pop
outs
jne
loope
rcr
test
into
xlat
leave
mov
xor
movs
jo
(bad)
or
stos
mov
fldcw
in
cmp
xchg
das
inc
pop
stos
or
std
pop
mov
repz
or
lahf
jmp
and
popf
xor
ss
xchg
push
cmps
or
cmp
in
mov
pop
jle
pop
mov
cmp
loop
icebp
addr16
push
retf
xchg
shl
aad
fcom
popa
xchg
cmp
sub
shl
popf
ds
xor
jb
xchg
in
xor
shld
inc
fild
adc
push
test
pop
ins
lahf
jnp
or
pop
push
je
aaa
and
mov
mov
retf
xor
push
xor
mov
or
pop
sub
ss
stc
lds
cli
sbb
push
js
mov
cmc
jno
sub
push
mov
jle
sahf
enter
(bad)
rol
ret
arpl
pop
cld
int
mov
hlt
sbb
or
iret
mov
jl
sub
adc
int
int3
jb
sub
xchg
mov
repnz
jb
sub
div
loop
das
jnp
and
and
scas
mov
(bad)
popa
call
(bad)
pusha
in
pop
cmp
enter
sub
fdivr
adc
and
test
cmp
test
lea
push
inc
test
arpl
xchg
les
sar
xor
push
push
mov
out
xchg
je
dec
dec
sub
(bad)
sbb
or
aam
dec
aad
loop
setns
pop
mul
mov
sbb
add
fsub
mov
outs
mul
daa
inc
inc
adc
jmp
mov
push
or
mov
inc
xchg
(bad)
loopne
sar
push
sub
jae
ret
pop
popf
adc
jo
mov
dec
hlt
rol
fxch
ss
stos
push
retf
das
jno
loope
cmps
leave
ret
mov
jp
push
sub
xchg
mov
sbb
jb
push
add
mov
mov
lods
lea
mov
dec
inc
push
fistp
pop
push
(bad)
mov
lar
lods
lods
adc
out
jnp
pop
sbb
mov
push
in
and
clc
clc
dec
xor
leave
adc
adc
ret
movs
sar
sti
jb
imul
jl
push
lds
mov
and
push
mov
outs
jge
adc
xchg
jge
pop
test
js
pop
leave
sti
pop
pop
push
mov
inc
ds
jle
loope
sub
jne
scas
xchg
dec
fiadd
push
bound
das
jle
ss
push
in
push
jnp
sub
sub
mov
cmp
sbb
out
clc
stc
es
jl
test
mov
and
xor
pop
sbb
popf
pop
cmps
scas
sbb
xchg
xor
or
adc
lds
sub
ret
ret
sahf
std
push
jl
pop
add
adc
shr
inc
dec
fstp
push
xchg
sbb
rol
rcl
mov
jmp
cmp
out
mov
call
lock
mov
pop
cmp
jmp
int3
das
out
xor
lods
arpl
dec
and
push
cdq
add
lock
(bad)
sub
(bad)
loopne
arpl
out
push
adc
sbb
sub
inc
mov
mov
mov
jmp
and
adc
call
aam
stos
js
xchg
cmps
sbb
mov
xchg
pop
pop
xor
cli
fdiv
mov
pop
push
push
daa
xor
adc
push
mov
xor
int3
imul
fs
imul
iret
sbb
test
ins
retf
call
mov
div
sbb
rcr
popf
outs
loop
jo
sbb
test
retf
pop
and
stos
push
data16
or
pop
xor
ja
and
shl
mov
push
outs
jno
pop
pop
xchg
push
fs
xor
cs
and
push
jg
dec
mov
es
adc
dec
mov
gs
xor
leave
dec
mov
aas
push
xchg
mov
push
inc
stos
daa
frstor
in
sbb
fsin
sbb
mov
sbb
std
inc
adc
mov
movs
push
jmp
ss
fisttp
in
jo
xchg
movs
daa
cmp
test
jne
or
popf
xor
shl
aad
mov
in
xor
inc
sub
dec
in
inc
pop
xor
mov
pushf
aam
mov
outs
sti
push
(bad)
jg
ss
mov
bound
inc
repz
pop
clc
cmp
mov
mov
jl
call
stos
mov
push
dec
push
cmp
xlat
sub
mov
push
stos
mov
lods
addr16
sti
js
mov
mov
xor
mov
jo
add
lds
jno
nop
push
(bad)
push
mov
fnstenv
push
call
rcl
pop
test
in
dec
shr
test
inc
(bad)
dec
inc
dec
shl
in
or
sub
cmp
aad
in
push
fdivr
(bad)
sbb
inc
in
sub
sub
les
sub
es
jle
test
ss
aas
xor
mov
cwde
(bad)
xchg
pop
pop
repz
sbb
push
and
mov
xchg
pop
sub
lea
push
jl
and
mov
sti
xchg
jb
pushf
nop
lea
pop
adc
jns
push
call
jb
jle
sub
lahf
fnstsw
jle
push
lea
mov
add
jne
ja
in
outs
pushf
mov
fsub
jno
nop
pop
mov
mov
sbb
or
(bad)
out
xor
and
jno
jno
push
(bad)
adc
jnp
movs
jmp
sub
or
cld
jb
inc
(bad)
push
daa
sbb
inc
push
add
into
es
sub
dec
lods
fcom
les
in
xchg
sub
xchg
cmp
mov
mov
lahf
push
iret
cli
add
push
stos
imul
je
pop
movs
or
sbb
mov
push
xor
dec
scas
gs
fild
xor
sbb
xor
ins
sub
out
inc
loope
xor
adc
jae
jae
into
cmp
shr
ds
jecxz
mov
mov
test
fs
xor
push
sbb
and
sub
push
jl
cmc
push
jp
xor
mov
ret
push
xor
push
out
mov
int3
cmp
inc
and
sub
cs
in
mov
mov
sbb
inc
shl
(bad)
sbb
adc
fnstcw
hlt
idiv
lods
das
add
sbb
sbb
das
sub
outs
pop
mov
xor
lds
inc
sub
xlat
cs
mov
(bad)
mov
mov
shl
cli
mov
and
push
inc
test
ss
sbb
call
lods
jnp
fcmovnb
push
mov
xchg
shr
popf
dec
pusha
adc
hlt
push
mov
ret
iret
dec
in
push
movs
dec
lea
mov
dec
add
sub
test
xchg
mov
neg
cmp
mov
pop
xchg
xchg
bound
and
jecxz
dec
mov
mov
xchg
mov
xor
xchg
xchg
(bad)
mov
mov
int3
sub
or
push
(bad)
pop
cmps
cmp
xor
xor
pushf
ret
ret
nop
mov
fucomp
push
xor
cmp
dec
xchg
cmp
inc
jge
cwde
jae
jb
loope
pop
test
movs
cli
call
xor
sbb
or
add
into
xor
out
mov
inc
loope
aam
fmul
in
ret
or
fsubrp
addr16
sbb
push
mov
mov
pop
push
push
movs
ret
nop
in
cld
in
jno
dec
adc
lahf
inc
inc
push
aaa
fidiv
xor
adc
push
cmp
cwde
in
inc
xchg
stc
es
js
outs
hlt
rcr
pop
xchg
inc
dec
pop
cs
push
jnp
adc
sar
loop
jb
orps
cmp
xor
mov
es
mov
xor
repz
imul
les
pop
lahf
adc
add
shl
(bad)
jne
ret
inc
imul
mov
jno
sub
push
daa
adc
jecxz
mov
int
int3
pushf
and
retf
or
pop
mov
pop
clc
shl
mov
daa
into
inc
mov
sti
and
or
ret
pop
sub
ror
test
lods
inc
clc
add
int3
std
push
sbb
hlt
inc
dec
retf
push
push
mov
stos
xchg
or
repz
dec
repz
addr16
pop
clc
mov
mov
sbb
sub
sub
fucomip
dec
jl
call
push
jnp
push
jne
inc
(bad)
cmp
inc
xchg
sub
sub
push
cmc
xor
sbb
jg
sub
add
pop
inc
mov
mov
jno
jmp
cmp
ret
rcl
call
cdq
pushf
xchg
mov
setne
fnstcw
ins
out
(bad)
gs
movs
call
push
out
(bad)
shl
hlt
sub
(bad)
sub
xchg
fsubr
jbe
movs
int
into
pop
fdiv
int3
(bad)
mov
outs
jmp
or
loopne
(bad)
popa
add
sbb
and
pop
xchg
cwde
cli
lods
cs
mov
lods
add
mov
mov
mov
push
scas
cmp
cmp
mov
inc
jae
in
xor
pop
and
add
ins
hlt
in
cmp
int3
mov
in
mov
mov
or
xchg
pop
inc
jmp
arpl
dec
pop
mov
int3
mov
ins
pusha
fninit
sbb
push
into
push
pop
aad
lea
ss
sub
mov
push
lods
cs
push
prefetcht1
fidiv
mov
mov
pusha
shl
push
fdiv
mov
fiadd
lds
sbb
cmp
sub
shl
test
lock
or
and
add
daa
scas
pop
sbb
test
dec
dec
in
cmps
sub
stos
cmc
add
mov
addr16
out
cmc
in
or
dec
sub
push
ret
sub
add
push
xchg
loopne
push
cld
rol
das
mov
jg
mov
lock
sub
push
mov
mov
arpl
and
add
outs
test
das
jmp
xchg
push
xor
ret
adc
and
cli
ret
jl
imul
lods
mov
adc
pop
in
and
push
sbb
popa
das
mov
test
enter
inc
push
or
and
add
loop
inc
push
fbld
mov
pop
push
or
addr16
movs
dec
sbb
xor
or
pop
loopne
xor
test
cli
les
pop
ja
mov
mov
mov
xchg
pop
out
cli
mov
xchg
push
inc
clc
xor
fistp
stos
jg
mov
gs
sub
bound
cmps
(bad)
push
cmp
int
fdiv
dec
inc
pop
pop
popa
pop
retf
fcomp
push
xor
les
leave
push
(bad)
repz
xlat
or
es
adc
pop
ja
mov
dec
cmp
aad
lods
jle
lds
push
xchg
stos
dec
data16
fsub
sub
in
mov
movs
in
pop
push
stc
pop
or
xchg
jp
or
enter
sbb
adc
pop
fild
jns
ds
retf
sbb
sbb
mov
(bad)
sbb
test
push
(bad)
lock
test
xchg
push
adc
je
mov
into
sahf
mov
cwde
jl
pop
adc
addr16
pop
jle
stos
push
pusha
push
ins
pop
in
adc
(bad)
xchg
jbe
sub
and
(bad)
mov
jnp
and
push
jns
xor
inc
nop
push
inc
sar
push
fnstenv
sahf
fistp
push
sbb
ret
mov
jl
cs
sub
or
add
add
ret
pusha
mov
add
dec
ja
push
dec
neg
loope
nop
jbe
jnp
pusha
inc
(bad)
data16
add
in
call
ins
pop
sbb
mov
jnp
pop
mov
cmp
rol
xor
lods
mov
sub
or
cli
jecxz
adc
inc
mov
nop
inc
icebp
or
xchg
stos
out
mov
nop
and
cmp
mov
dec
outs
mov
loope
daa
cs
jecxz
mov
xor
sbb
or
dec
sbb
push
in
lahf
lahf
xchg
xchg
sti
scas
inc
movs
cmp
les
mov
aaa
push
push
fistp
pop
xchg
std
pop
pop
je
test
mov
jnp
scas
test
into
imul
lods
and
mov
mov
retf
nop
and
xchg
sbb
lea
mov
sub
mov
jbe
ja
mov
sbb
popa
scas
lds
loopne
xchg
push
arpl
jecxz
mov
sti
fmul
movs
adc
mov
xor
jmp
rcr
daa
stos
std
idiv
out
(bad)
call
mov
xchg
ret
ins
stos
sub
pop
adc
jb
cmp
call
mov
cwde
mov
into
js
pop
test
or
outs
cmp
ret
(bad)
or
xlat
popf
pop
mov
cmp
nop
gs
or
fdivr
out
ret
push
adc
shl
jl
fldenv
add
dec
cwde
dec
mov
and
pop
mov
into
push
mov
jp
in
scas
retf
aas
into
movs
and
inc
enter
and
pop
inc
(bad)
cdq
jb
ret
xor
xor
nop
fs
jae
daa
pop
loopne
xchg
mov
inc
lds
sub
xor
sub
(bad)
ins
adc
outs
jl
cmps
pop
ror
pop
div
xchg
ret
test
call
mov
push
in
fistp
xor
out
in
repnz
inc
inc
mov
or
ret
sub
sub
adc
out
daa
pop
jo
cmp
fld
(bad)
jle
fiadd
jb
inc
mov
icebp
inc
retf
repnz
cmp
in
dec
vmread
fimul
jo
push
sbb
mov
inc
leave
mov
xor
add
jne
jge
dec
shl
sti
jge
sub
test
pop
xchg
lds
cwde
call
les
arpl
add
sub
jmp
cmp
shl
jg
jp
push
cmp
cmp
into
pop
jl
imul
xchg
mov
adc
sub
retf
xchg
pusha
dec
rcl
ss
retf
and
mov
movs
in
js
std
sbb
repnz
push
mov
test
test
jg
xchg
cmp
mul
xor
xor
not
xchg
in
inc
push
mov
mov
mov
movs
and
(bad)
in
xchg
xchg
inc
ja
mov
cmc
push
shl
sbb
push
jmp
xchg
outs
push
pop
outs
jbe
and
shl
mov
(bad)
shr
mov
cmp
mov
dec
mov
push
movs
cmp
push
add
ret
cmp
cmp
sub
mov
xchg
leave
fs
rol
mov
ret
shl
test
mov
xchg
sbb
dec
sub
stos
or
sub
jle
pop
pushf
inc
mov
cmp
sub
push
daa
sbb
ret
nop
adc
push
xchg
mov
mov
push
push
pusha
xchg
mov
in
cld
inc
jnp
add
cs
stos
rcr
xchg
pop
xchg
(bad)
rol
inc
rol
jp
add
pop
mov
fisttp
xor
aam
in
addr16
xchg
cmp
scas
out
hlt
jno
xchg
push
push
hlt
enter
jo
mov
daa
xlat
fnstsw
sbb
dec
pop
inc
inc
jmp
addr16
addr16
or
fcom
dec
lock
loope
jbe
movs
mov
popf
in
adc
xchg
je
lds
and
retf
dec
mov
and
adc
outs
movs
mov
inc
adc
adc
iret
inc
shl
icebp
pop
xor
daa
aam
aaa
mov
not
jle
std
scas
pop
push
push
cmp
add
dec
pushf
shr
mov
lds
ficom
test
jge
aas
jl
xor
icebp
jp
das
mov
movs
retf
gs
mov
mov
sub
sub
in
aas
std
mov
mov
daa
repz
sar
ret
in
cld
cmps
daa
sbb
mov
sub
adc
(bad)
mov
loope
ins
mov
push
lock
jle
shl
loope
loopne
test
or
das
fild
imul
add
jmp
dec
stos
sbb
out
pop
lea
push
dec
mov
icebp
push
jg
lock
jle
cmps
(bad)
mov
les
rcr
fst
cmp
mov
sub
cmp
or
rol
imul
scas
out
jecxz
or
out
jmp
pop
add
xor
add
dec
sub
jl
push
dec
push
pop
stc
aaa
call
mov
mov
test
icebp
cmps
xor
dec
add
ror
add
ret
imul
movs
ficom
pop
dec
cwde
ja
mov
(bad)
jbe
jp
or
mov
push
xor
cmc
ret
or
jle
xchg
shl
jle
popf
sbb
int3
xchg
test
mov
pop
gs
mov
test
fisubr
or
sbb
inc
in
adc
movs
jnp
ja
add
cmps
dec
push
mov
inc
les
retf
mov
retf
lock
sub
sbb
iret
idiv
inc
sbb
jae
xchg
shl
cmp
or
sbb
mov
imul
push
xchg
dec
cmps
iret
pop
test
rcl
stos
test
(bad)
fsubr
mov
into
outs
call
mov
jae
lds
pop
add
or
sub
loope
xor
mov
imul
fbstp
jnp
bound
je
mov
mov
mov
pop
mov
and
pop
jle
push
cmp
pop
ss
jo
repz
cmp
xor
pop
dec
ins
push
add
movs
push
pop
pop
xchg
mov
enter
ja
mov
shr
adc
xor
adc
sub
xor
mov
adc
xor
loop
je
add
sbb
jnp
inc
sbb
retf
(bad)
sbb
or
sub
ror
xor
jl
inc
inc
out
call
push
pmulhuw
mov
push
loopne
push
repnz
cmp
xor
rol
bound
jnp
shl
lds
pop
push
jno
sub
lea
(bad)
int
fisub
xor
xor
scas
(bad)
ds
adc
bound
add
add
sbb
ret
push
ins
add
mov
sbb
cmps
jbe
xchg
or
pusha
xchg
aaa
mov
mov
mov
cs
jmp
or
push
out
jle
mov
dec
mov
pusha
push
cwde
lea
xor
adc
outs
in
jne
xchg
iret
movs
pop
cmc
push
inc
sbb
xchg
jb
in
repz
int
push
inc
add
jle
dec
add
sub
enter
fwait
dec
mov
jno
add
je
mov
(bad)
popa
jl
ss
pop
push
clc
shl
and
push
ret
mov
push
jb
inc
popf
fdiv
stos
push
lock
inc
test
cmps
lea
out
cmp
mov
push
outs
(bad)
add
xchg
popa
jg
jne
ret
(bad)
fld
jg
ja
cmp
xchg
push
push
sbb
loopne
mov
mov
ret
enter
mov
cmp
push
inc
test
adc
test
fnstcw
call
jmp
cmp
push
int
cmp
push
or
test
fwait
in
outs
xchg
fsub
push
movs
cmps
add
popa
jmp
pop
ret
lods
in
cmp
test
mov
icebp
pop
dec
out
xchg
out
sbb
pop
imul
arpl
jae
xchg
gs
xor
out
hlt
push
aas
jl
paddsw
xchg
pop
pop
xor
shl
pop
xor
and
outs
popf
sub
sahf
repz
push
leave
das
rol
xor
jp
and
das
lods
cmp
ret
push
aad
dec
inc
xchg
fmul
dec
adc
out
repz
inc
adc
pop
or
mov
out
(bad)
sub
loope
mov
retf
pop
les
call
push
mov
test
stos
out
adc
add
push
ins
push
mov
pop
lods
pop
sub
idiv
mov
cmp
pusha
push
adc
adc
hlt
xchg
mov
jae
mov
jg
outs
jno
xor
rol
nop
and
mov
sub
mov
call
or
nop
out
rol
jl
push
cld
mov
cmp
xchg
sbb
or
mov
out
in
jo
and
mov
push
scas
adc
fstp
and
or
or
data16
data16
je
movs
cmps
adc
mov
outs
fisubr
fist
pop
jge
cmp
sub
repnz
jle
push
mov
push
jp
hlt
push
sbb
mov
mov
jge
jbe
movq
fcomp
pusha
imul
(bad)
aas
iret
test
xchg
push
xor
imul
shl
hlt
leave
int
mov
inc
jl
pop
inc
aam
mov
je
in
ficomp
shl
in
adc
push
pushf
shl
add
fs
ret
or
test
inc
and
mov
pop
sub
cld
sub
daa
push
mov
idiv
movs
cdq
les
or
xchg
dec
das
(bad)
mov
jmp
inc
inc
pushf
push
pop
stc
(bad)
dec
cwde
pop
pop
push
fwait
jmp
(bad)
push
ror
adc
test
jmp
mov
jbe
sub
repz
jle
test
adc
mov
cmp
mov
pop
int3
push
adc
push
sub
cmp
imul
movs
sub
cmc
and
iret
jle
pop
or
or
sbb
cdq
adc
fist
jle
sahf
jns
fabs
pop
rol
loope
ret
adc
xchg
in
push
lock
imul
push
sahf
ins
jl
lea
jg
js
and
cvtpd2pi
mov
in
mov
rcl
lock
pop
sbb
pop
clc
iret
ins
sbb
and
inc
into
daa
push
mov
mov
je
ja
je
pop
aam
jne
call
mov
xor
sbb
jne
jecxz
out
pop
mov
jno
retf
mov
xchg
fiadd
rol
add
lahf
add
sbb
call
dec
and
xchg
and
pop
xchg
jb
nop
adc
(bad)
pop
inc
scas
aas
mov
repnz
data16
ret
or
dec
sub
hlt
dec
fistp
std
imul
mov
jge
xchg
jb
ins
cwde
(bad)
fnstcw
mov
cmps
and
add
inc
dec
jbe
js
iret
sub
push
fwait
ss
and
scas
cmc
jecxz
pop
push
mov
out
int3
(bad)
std
addr16
xchg
xchg
fwait
leave
lods
mov
xchg
sbb
int3
bound
dec
sub
inc
ret
gs
xchg
cs
or
lds
retf
add
fcom
xlat
xchg
pop
(bad)
xlat
cmps
mov
xor
mov
bound
mov
pop
jae
and
sbb
movs
dec
add
test
(bad)
pushf
stos
dec
mov
outs
rcl
outs
mov
dec
pop
popf
ret
fs
push
xchg
mov
cwde
sti
add
add
add
add
ret
and
aas
inc
mov
(bad)
pop
stos
xchg
push
or
push
add
addr16
mov
cmp
stos
mov
cli
dec
sub
lea
fdivr
test
mov
xor
xlat
ficomp
mov
int3
rcr
movs
sub
fbld
cmp
mov
push
pop
mov
cmp
push
jl
mov
pop
add
inc
loop
ret
xchg
mov
push
cmp
push
lods
fsub
mov
gs
sub
push
or
fidivr
mov
clc
shl
push
and
jo
sub
mov
rcl
les
jge
lds
clc
adc
adc
rcr
in
(bad)
ins
fist
lahf
mov
scas
fs
gs
test
pop
test
rcl
repnz
das
cmp
js
rcl
sbb
push
inc
fldenv
and
mov
fist
adc
int
sbb
sar
sbb
ins
xor
loopne
push
in
inc
and
mov
add
sub
(bad)
mov
lods
les
in
sub
or
push
movs
movs
jl
out
shr
lods
out
clc
jb
mov
out
mov
in
or
cmc
cmp
jne
jne
in
lds
add
xchg
repnz
in
call
mov
inc
push
dec
mov
cmps
push
push
adc
add
lock
arpl
imul
pusha
lahf
into
mov
loope
push
xor
int
xchg
(bad)
mov
mul
lea
or
mov
into
jae
mov
lds
bnd
(bad)
cld
mov
mov
aaa
dec
pop
dec
test
and
jmp
call
mov
fdivr
xor
ds
cmps
call
dec
addr16
pop
pop
dec
and
adc
pop
out
push
out
mov
cmp
ret
dec
leave
dec
xor
std
push
leave
loopne
mov
fild
mov
fistp
jle
cmp
mov
jecxz
cmp
arpl
into
out
aas
push
or
jmp
fidiv
in
and
cmp
jbe
jecxz
dec
jbe
fwait
iret
dec
scas
into
test
mov
jno
stos
jbe
and
stos
cli
call
sub
fisub
daa
sbb
or
(bad)
jle
mov
bound
cli
daa
imul
jae
adc
push
adc
xor
mov
test
lock
sbb
cdq
cdq
push
push
(bad)
sbb
inc
lahf
into
jmp
mov
sbb
data16
dec
adc
int
mov
mov
dec
outs
xor
inc
bound
movs
iret
sbb
sub
repnz
sub
pop
add
mov
pop
dec
mov
test
inc
shr
or
or
lahf
lods
retf
sub
dec
mov
mov
mov
scas
scas
mov
into
and
in
gs
and
repnz
add
push
fist
xchg
xchg
xor
dec
mov
lods
gs
aam
dec
aam
push
adc
test
xchg
inc
mov
add
pop
pop
sbb
out
jns
sub
mov
xlat
jo
int3
std
int
xlat
outs
inc
sbb
cdq
fisub
mov
push
jmp
jmp
std
dec
addr16
(bad)
shl
xchg
pop
gs
(bad)
fucom
and
cs
mov
jo
sub
jle
lds
fnstenv
aad
(bad)
data16
rcl
inc
jbe
test
add
arpl
push
int3
addr16
dec
cmp
or
pop
imul
js
add
mov
jecxz
push
mov
mov
ins
movs
(bad)
sub
inc
lods
aam
xor
outs
stc
lahf
push
adc
add
xchg
int3
or
cmp
ret
mov
out
sub
sub
push
fmul
popf
mov
mov
add
push
fstp
cmps
idiv
mov
aas
mov
and
test
cmp
fcomp
sub
mov
leave
add
fcom
fidivr
push
push
sbb
popa
jbe
mov
stc
das
lods
xor
push
clc
inc
inc
in
std
dec
movs
mov
sbb
xor
cmps
fadd
add
ins
pop
pop
arpl
ret
xchg
rcr
(bad)
push
lahf
gs
popa
js
leave
jnp
mov
mov
jnp
mov
(bad)
sahf
mov
jo
in
rcl
mov
sub
mov
je
sbb
add
add
nop
inc
push
lea
sar
leave
push
ds
jo
cmp
lahf
push
ss
outs
fld
bound
pop
cmp
mov
and
fld
sub
sub
stc
add
imul
mov
and
clc
jle
jge
cmp
and
or
jbe
pop
push
inc
mov
cmps
jmp
faddp
test
lahf
ret
xchg
jae
loope
in
jo
js
xchg
jle
inc
inc
in
xchg
sub
dec
mov
sub
mov
scas
out
scas
push
xor
jb
(bad)
jmp
sbb
push
std
imul
(bad)
jmp
xchg
mov
fcos
xchg
scas
mov
or
xchg
es
cmp
(bad)
test
adc
xchg
cmp
clc
popf
mov
out
push
xchg
adc
gs
outs
outs
mov
shl
xchg
jp
add
outs
xchg
and
add
rcr
or
dec
push
or
sbb
cmp
(bad)
div
popf
fadd
loop
ret
loopne
jo
pop
sub
push
inc
push
or
loope
mov
adc
test
xlat
aas
jns
mov
cdq
push
mov
xchg
push
cmp
rcr
jne
clc
pushw
sbb
sar
xor
dec
sub
inc
std
or
test
xor
imul
jl
mov
jae
fs
jecxz
adc
cmp
or
test
fldenv
pop
inc
js
jmp
mov
sbb
cmps
mov
xchg
add
jae
mov
pop
mov
bnd
and
dec
out
xlat
jns
pop
cwde
cs
rol
pusha
push
dec
mov
mov
jge
scas
xor
lods
inc
dec
xchg
cdq
xlat
movs
stos
frstor
repnz
mov
push
call
mov
rcr
adc
jne
ja
out
mov
pop
sti
cmp
shr
xor
movs
cmps
jns
mov
les
fnsave
push
inc
out
(bad)
(bad)
and
cmp
pop
lods
pop
ds
xlat
adc
ret
xchg
dec
ins
or
jns
push
sub
call
sub
sar
dec
jl
mov
shl
inc
fwait
pop
imul
aam
mov
and
stc
jne
pop
js
stos
push
dec
xor
(bad)
je
cmps
mov
cli
push
aam
int
out
and
mov
push
repnz
aas
and
cmps
(bad)
ror
data16
retf
rcl
or
daa
idiv
pusha
js
cmps
in
pop
push
cmp
ins
mov
mov
mov
mov
push
cmp
cwde
sahf
enter
mov
out
jle
int3
jno
arpl
ds
dec
pop
bt
in
cmps
aaa
xor
cdq
lods
xlat
sbb
xchg
test
lods
xchg
shl
das
retf
fdiv
(bad)
mov
add
sbb
ja
inc
push
and
jns
dec
mov
sar
mov
xor
cmps
jno
cmp
sbb
rol
cmc
cmp
mov
daa
cdq
sub
cli
cmp
lods
push
cmovbe
push
and
dec
cwde
jmp
lahf
imul
mov
cs
outs
cmp
in
push
into
test
mov
lock
mov
inc
jmp
xchg
add
js
jns
mov
mov
cmp
cmps
dec
imul
pop
ins
in
fstp
sbb
xchg
test
sub
xchg
in
push
shl
fstp
daa
adc
popa
fsub
dec
fcomp
jb
mov
out
pop
push
in
xor
adc
cli
push
mov
pop
iret
(bad)
ins
pop
into
xchg
jle
xchg
add
xchg
add
push
hlt
add
sbb
add
pop
div
lock
fwait
pop
outs
xchg
shr
add
cld
clc
fsubr
addr16
addr16
xchg
cmovs
jne
into
pop
sahf
push
aas
sti
out
aaa
sbb
add
vpsubd
pop
scas
xor
jmp
dec
jmp
pusha
or
jp
in
inc
vcvtps2pd
inc
in
pop
pushf
mov
xchg
inc
or
int3
int3
fwait
or
jmp
int3
xor
sbb
mov
dec
pop
ja
or
(bad)
pop
push
sub
icebp
or
push
sub
daa
js
mov
(bad)
push
add
sar
dec
sbb
movs
ins
out
push
mov
pop
(bad)
in
or
jo
call
stc
cs
sbb
or
dec
inc
push
out
inc
add
jmp
and
fcomp
loop
call
push
minps
cmp
push
bound
(bad)
imul
add
shl
pop
inc
sti
shl
adc
pop
mov
adc
pop
mov
pop
adc
(bad)
fbld
stos
lock
movs
test
sbb
push
(bad)
cmp
mov
lea
mov
mov
ret
or
jmp
cmps
out
arpl
into
test
and
clc
inc
(bad)
daa
dec
adc
(bad)
in
dec
out
sbb
ds
imul
repz
repz
scas
je
sbb
cwde
cmc
inc
imul
xchg
adc
jg
es
xor
mov
xchg
outs
stos
mov
pop
fld
push
call
jbe
jns
cmp
inc
push
cld
jbe
clc
cmp
out
and
rcl
pop
pop
enter
or
xchg
push
aas
xchg
jmp
push
std
mov
push
movs
(bad)
enter
or
loopne
mov
icebp
push
cmp
lods
mov
popf
push
mul
mov
data16
mov
(bad)
cwde
rcl
push
mov
xor
daa
movs
or
mov
scas
fstp
stos
iret
rcl
fs
cmp
sbb
add
add
imul
pop
(bad)
or
and
ret
aam
call
bound
call
call
fucom
mov
mov
push
out
shr
pop
(bad)
jge
xchg
scas
in
or
jmp
leave
sub
mov
xchg
and
stc
jmp
cmp
jne
aam
push
(bad)
adc
xchg
ret
xor
movs
int
xlat
or
in
enter
in
jle
and
mov
je
add
daa
jl
pop
cs
or
addr16
adc
sub
fdiv
jns
pusha
push
es
add
adc
cmp
mov
lgs
pop
fwait
pop
ret
inc
jnp
xor
sbb
outs
ret
sahf
or
mov
mov
pusha
cli
shl
neg
sti
sbb
mov
(bad)
or
and
mov
adc
push
jo
ror
jmp
mov
lods
jbe
xchg
ror
(bad)
pop
fwait
shl
sbb
dec
es
sbb
jb
add
jae
pop
sub
jae
push
addr16
xchg
imul
mov
and
mov
add
jmp
ins
test
lds
push
(bad)
test
fstp
mov
sub
int
xor
inc
cmp
mov
in
ins
xchg
fwait
push
sahf
shl
out
pop
xor
jo
cmp
mov
rol
mov
mov
mov
loope
(bad)
mov
jmp
repnz
dec
loop
ss
and
or
mov
into
push
push
add
ficomp
pop
inc
pop
mov
outs
mov
push
call
cmp
repz
cmp
pop
dec
ret
pop
sbb
and
aad
inc
xchg
aam
or
fisttp
mov
sbb
ror
jmp
sub
push
push
xor
mov
jp
sub
adc
push
inc
fimul
in
mov
ins
sti
jge
aas
push
sbb
xor
xchg
ror
cmc
retf
mov
jge
das
jno
in
mov
mov
pop
or
(bad)
push
ret
inc
jae
inc
push
stos
mov
loopne
cmc
sub
or
jl
xor
jno
push
xor
jmp
test
cmp
dec
outs
push
jno
and
sar
ins
iret
fs
ret
dec
cmps
adc
mov
rep
iret
dec
jle
cmps
push
ss
cmps
adc
lds
scas
mov
or
xchg
ficom
mov
test
out
hlt
mov
and
add
xor
mov
dec
cmp
bndstx
cs
mov
icebp
call
xor
cwde
jno
xchg
repz
xor
(bad)
pop
jmp
(bad)
jmp
sub
icebp
rol
inc
cmp
retf
sub
pop
dec
retf
dec
mov
das
ret
xor
stos
dec
or
mov
push
xchg
push
and
xor
push
ja
mov
mov
sub
push
repz
sub
jle
or
xchg
push
push
stos
dec
ret
sub
xor
mov
jae
rcl
mov
mov
sub
sbb
iret
stos
mov
inc
push
or
ja
cmp
adc
in
dec
xchg
lahf
cmp
mov
(bad)
push
xchg
cmp
stc
push
mov
out
push
mov
pop
push
cmp
and
and
fwait
inc
xlat
out
sub
cld
xchg
(bad)
ffree
sar
js
not
sbb
inc
es
pop
out
shl
loopne
cld
adc
dec
jle
pop
and
jns
lahf
pop
mov
frstor
or
inc
lds
jmp
dec
and
jmp
pop
fs
mov
faddp
mov
leave
aas
fiadd
mov
push
rcr
inc
out
mov
ror
les
popa
les
dec
adc
cli
cmp
das
mov
cwde
js
push
into
cwde
lods
pushf
or
jae
xor
(bad)
mov
mov
dec
jne
sahf
mov
pop
scas
lds
mov
sub
sub
lea
sub
sub
bound
aam
adc
add
push
call
mov
outs
lods
dec
push
lahf
aas
rcl
mov
out
jle
xchg
pop
sub
loopne
rol
(bad)
enter
mov
adc
(bad)
into
mov
ins
(bad)
cmp
test
outs
pop
pop
push
pop
sbb
mov
add
dec
scas
in
mov
mov
es
push
mov
aad
mov
pushf
xor
in
mov
dec
jae
popa
mov
(bad)
and
mov
xchg
mov
pushf
pushf
(bad)
fstp
rol
leave
jl
adc
jp
es
dec
dec
lods
mov
jmp
in
aad
hlt
push
cmp
mov
mov
test
lea
inc
jmp
xchg
lds
popf
in
popf
dec
sahf
sbb
sub
aaa
ret
pop
and
mov
lods
std
push
stos
out
(bad)
repnz
mov
ffreep
lock
jbe
jp
inc
bound
outs
and
in
jno
jg
cmp
not
outs
cmp
push
add
mov
cmc
rcl
fldenv
leave
bnd
xchg
jo
mov
adc
fbstp
shl
(bad)
and
inc
test
shr
mov
shr
ins
ds
inc
mov
inc
or
xor
xor
loope
int
data16
and
test
into
inc
xor
ins
scas
sub
adc
xor
movs
mov
mov
icebp
xchg
sti
int
cmp
ja
(bad)
jae
dec
add
stc
sbb
hlt
and
stc
push
cmps
fisttp
dec
test
test
adc
ror
push
xchg
test
sbb
ret
repz
xor
dec
xlat
nop
and
dec
pop
pop
movs
loopne
(bad)
xor
cmc
lea
fmul
aaa
or
mov
arpl
sbb
movs
push
ja
fimul
xchg
add
dec
mov
(bad)
fdivr
pop
xchg
scas
or
inc
mov
jbe
aam
pop
xchg
mov
out
xchg
add
mov
jae
inc
pop
jns
inc
popa
repz
mov
cmps
fidiv
dec
mov
pusha
mov
xchg
or
pop
jno
inc
sahf
add
outs
jae
fcomp
lock
and
rcl
add
sar
fucom
add
loopne
fimul
sbb
js
mov
or
jl
xchg
dec
inc
or
js
mov
lock
or
pop
lock
mov
stc
ret
lea
vprotb
lods
xchg
pop
jge
iret
iret
inc
xchg
sahf
inc
adc
jo
aas
(bad)
and
mov
scas
pusha
cmp
add
sbb
aam
xchg
jmp
xor
cmc
jg
pop
and
push
lods
fwait
lock
cmp
mov
jnp
inc
ins
pmaxsw
mov
jmp
bound
pop
xor
mul
ja
fisub
push
shr
je
inc
out
xchg
jmp
arpl
adc
jmp
mov
sub
push
xchg
idiv
jmp
stos
scas
sahf
enter
jge
inc
sbb
xor
loope
test
jmp
sar
cli
stos
jne
pushf
jmp
shl
inc
pop
cdq
jb
fdivr
pop
shl
push
call
pop
cmp
hlt
test
lea
test
inc
shl
mov
in
pop
mov
cs
xor
xor
mov
sbb
je
jle
mul
jg
mov
fwait
sbb
in
pushf
mov
and
add
rol
imul
popf
jge
add
sub
cmp
fldcw
xor
sbb
call
scas
inc
push
sbb
hlt
dec
or
xchg
inc
jne
test
xchg
sub
jp
pop
or
dec
push
jmp
test
xor
xchg
mov
pusha
sar
jnp
repz
stos
push
dec
push
cmps
fs
test
scas
and
cs
jp
call
hlt
add
add
adc
xchg
push
int3
push
in
add
daa
add
ja
jg
pop
mov
arpl
cmp
into
fs
mov
xchg
dec
push
scas
aad
out
mov
mov
mov
push
push
clc
popa
pop
pop
xchg
mov
in
bound
add
enter
dec
cwde
je
sti
iret
mov
(bad)
mov
cmps
pop
not
ret
dec
or
dec
(bad)
data16
pop
push
push
pop
xchg
push
mov
loop
inc
fisub
int
mov
dec
sbb
sbb
add
pop
ss
pop
mov
in
cmps
sbb
enter
loop
mov
jg
mov
(bad)
rcr
and
out
xchg
or
jge
stos
xor
nop
test
add
adc
sahf
test
xor
enter
test
addr16
mov
fst
es
dec
cmp
pop
mov
out
movs
data16
mov
mov
lahf
fistp
out
cmps
ja
cli
bound
les
adc
cmps
pusha
lds
lea
cmp
arpl
pop
ror
icebp
and
cmp
nop
or
imul
mov
scas
arpl
call
or
js
inc
std
cs
or
and
call
xor
add
or
or
xor
dec
leave
(bad)
sub
sbb
sub
inc
std
pop
fmul
scas
mov
xor
xor
cwde
jne
pop
jo
sar
push
mov
jp
add
add
sbb
jg
cmp
mov
dec
inc
push
mov
xchg
xor
cdq
iret
push
(bad)
nop
js
xchg
or
std
mov
mov
mov
out
scas
xor
cmp
mov
enter
iret
fbstp
lea
pop
aam
pusha
cmp
pop
sub
rol
or
push
stos
cmp
pop
fdiv
arpl
inc
test
cmps
pushf
sbb
ret
lahf
dec
cs
(bad)
(bad)
ror
aam
and
xor
jecxz
sbb
mov
add
sbb
(bad)
pop
jmp
mov
xor
lds
inc
sbb
test
lods
adc
dec
inc
in
sub
scas
cmps
add
lahf
xchg
xchg
call
push
repnz
das
pusha
in
pop
xor
loopne
gs
xchg
xor
add
jo
pop
xchg
mov
mov
in
fmul
lock
or
sub
ffreep
outs
cmps
dec
xchg
movs
mov
or
mov
rcr
cwde
and
jnp
jns
jp
div
inc
mov
or
add
clc
mov
inc
out
mov
and
in
adc
daa
call
jl
call
out
jmp
xor
leave
xchg
jnp
push
adc
push
js
xchg
mov
xchg
(bad)
retf
cwde
inc
in
sub
and
and
daa
dec
mov
pop
xor
or
jecxz
mov
fwait
push
mov
in
popf
mov
je
sub
fstp
addr16
and
dec
rcl
jns
popf
xor
les
pop
ucomiss
dec
sub
(bad)
jmp
ins
sbb
test
sbb
inc
xchg
inc
cmp
jb
repz
lock
xor
fistp
cmp
je
add
arpl
aas
or
nop
cwde
xchg
cmp
adc
pop
data16
hlt
out
push
cli
push
pop
loop
xchg
mov
lahf
or
and
daa
adc
push
mov
add
loop
sar
mov
clc
dec
cmp
test
or
push
xchg
or
mov
outs
movs
data16
out
xor
mov
or
(bad)
gs
adc
into
push
loop
push
ss
pusha
xchg
add
cmp
fcom
cmp
icebp
inc
mov
pop
jbe
sar
fisttp
jp
ss
or
cdq
jmp
mov
loop
pop
out
xchg
xlat
push
std
xor
cmp
ins
js
mov
lds
mov
pusha
loope
sub
cwde
sbb
out
add
mov
cld
out
jecxz
in
xor
xchg
pop
cmp
nop
shl
jge
xor
jne
cmp
repz
ja
xchg
dec
jo
push
xchg
repnz
test
inc
cmp
mov
or
cmps
fcmovbe
jbe
inc
sar
cmp
ss
or
push
in
push
cmc
sub
das
cmp
in
in
lods
aas
lds
mov
or
movs
addr16
sbb
arpl
shl
ja
movs
cmp
leave
sbb
(bad)
push
and
jmp
jle
outs
dec
and
adc
ss
mov
cmp
lahf
jl
es
ins
in
sar
daa
sbb
mov
mov
repz
mov
lods
test
(bad)
lea
sar
mov
or
pop
inc
adc
loope
add
dec
push
dec
push
retf
es
push
cld
lea
adc
mov
inc
imul
or
dec
test
inc
cmp
push
mov
out
sbb
iret
mov
bound
or
and
cwde
mov
push
clc
sbb
in
and
mov
push
mov
push
idiv
fwait
cld
jb
movs
jmp
mov
pop
retf
xchg
and
xchg
xor
jmp
or
push
int
add
nop
add
pop
mov
test
mov
or
dec
sbb
sar
addr16
outs
mov
adc
cmp
push
adc
jg
inc
dec
mov
push
mov
addr16
retf
mov
mov
shl
or
pop
in
inc
sbb
adc
add
sbb
imul
gs
jns
jmp
push
scas
sahf
icebp
data16
jge
mov
xlat
cwde
(bad)
jge
dec
push
ss
sub
push
dec
cmp
inc
sub
push
retf
ins
in
push
push
ficom
inc
out
lods
mov
enter
out
push
pop
fidiv
pop
inc
add
stos
mov
pop
xchg
push
retf
pop
ss
adc
add
and
dec
jmp
test
inc
xor
inc
out
bound
cwde
cmps
and
stos
fsubp
push
into
call
fistp
in
out
xor
xor
push
mov
pushf
fidiv
mov
fisubr
(bad)
sti
jmp
test
xchg
stos
sbb
add
adc
popf
adc
dec
ins
sbb
jmp
fst
inc
push
test
or
jl
dec
jg
hlt
in
lds
pop
sbb
ins
pop
mov
(bad)
pop
pop
ficomp
cmp
adc
xchg
fisub
xor
rcl
xor
ret
lods
mov
add
ficom
cmps
jno
push
fwait
push
jecxz
aas
inc
xlat
and
mov
jmp
clc
sub
stc
jb
push
jmp
cs
sti
shl
mov
cmp
jp
xor
push
sbb
jmp
cdq
inc
jbe
fsub
sbb
add
int3
ins
mov
dec
loope
mov
dec
or
jmp
shl
rol
enter
xchg
(bad)
mov
jl
cmps
repnz
pop
cmp
arpl
jp
cs
lea
xor
add
cmps
mov
test
pop
hlt
mov
popf
and
dec
dec
mov
sub
pop
ds
pop
cmps
fs
push
mov
int
adc
stc
out
movs
push
sub
adc
ds
mov
xor
push
lock
cmp
jno
and
and
jg
pop
push
clc
xor
cld
dec
rcl
jne
xchg
xchg
pop
jo
jmp
jge
dec
mov
ret
cmp
adc
iret
fidivr
dec
and
into
push
iret
enter
xchg
inc
in
aas
leave
cmp
mov
or
jmp
(bad)
fcmovu
dec
jmp
lds
jbe
(bad)
jl
data16
aas
fidivr
add
push
call
mov
add
fwait
mov
sub
inc
cld
dec
sbb
call
lods
xor
or
inc
test
cli
repz
popf
mov
call
fisub
cwde
dec
xchg
cmc
(bad)
jno
pop
sub
test
pop
jae
ins
dec
xchg
ins
jmp
aaa
pop
add
imul
fs
add
adc
inc
mov
(bad)
xchg
push
mov
jmp
cmp
jae
pop
mov
sbb
or
sub
(bad)
(bad)
adc
adc
or
les
cmps
stos
and
in
fisubr
lods
out
add
addr16
clc
mov
cmps
cmps
test
popa
and
or
inc
push
sub
clc
xor
sub
and
scas
fcomp
repnz
xchg
cmc
xchg
cmp
cmp
dec
inc
jmp
mov
call
loope
push
xchg
popf
pop
arpl
into
and
stos
es
jo
lods
pusha
aam
fwait
mov
dec
dec
jns
lods
lods
push
push
cmps
add
dec
dec
cmp
lea
add
pop
fwait
call
mov
add
into
js
mov
icebp
cmp
jl
mov
mov
or
leave
movs
mov
mov
call
add
fnstsw
dec
sbb
in
push
xchg
adc
jmp
pusha
jb
cs
sbb
push
test
mov
mov
jl
test
jle
or
retf
sar
pusha
xor
fidiv
inc
cmp
popf
in
add
cmp
test
mov
add
or
sti
jnp
aas
rol
or
xor
stos
jl
and
cmc
or
pop
jb
mov
cmp
inc
pusha
lea
cmp
inc
xchg
not
outs
nop
pop
xor
pop
xchg
retf
xor
shl
cs
xchg
xchg
rol
and
mov
inc
mov
jmp
(bad)
dec
lods
sub
cmp
shr
add
popf
test
mov
mov
mov
xor
jl
gs
pop
push
cmp
sbb
jmp
cmps
mov
cmp
out
or
adc
jecxz
outs
pop
sbb
adc
clc
dec
pop
inc
(bad)
das
aaa
jmp
inc
repnz
outs
jnp
pop
int3
push
ss
or
mov
inc
(bad)
mov
cmps
jmp
xor
dec
sub
sub
shl
mov
fcom
pop
clc
mov
xchg
inc
jl
arpl
enter
push
adc
mov
cmp
popf
daa
scas
or
in
or
push
jae
in
aam
lea
dec
add
sbb
fcomi
lea
out
mov
mov
push
xor
jae
jge
or
ins
frstor
pop
add
int
sar
xchg
xor
mov
scas
pusha
add
pop
jle
jecxz
aam
jmp
lds
push
movs
push
add
adc
and
aas
fild
or
dec
fcomip
xor
fcmovnb
push
fstp
je
sbb
std
push
mov
aaa
imul
cld
xchg
jnp
ror
into
rcl
jmp
inc
mov
cwde
icebp
and
sbb
sbb
jb
dec
mov
mov
fidiv
fidiv
jne
cmps
sub
mov
cwde
sub
pop
dec
sub
pop
and
loope
pop
push
mov
push
arpl
and
es
push
mov
mov
xchg
mov
and
sbb
int3
add
aam
fimul
dec
mov
imul
mov
sbb
ins
cmp
fwait
test
cs
jns
call
imul
in
inc
je
mov
sub
in
sub
pop
cs
adc
pushf
ret
imul
mov
(bad)
mov
inc
dec
dec
cwde
imul
fstp
mov
mov
dec
clc
jnp
xchg
retf
or
mov
xor
imul
mov
dec
(bad)
xchg
fiadd
pop
enter
dec
stos
ret
fstp
dec
retf
test
in
inc
and
cmp
cmc
pop
lods
jbe
out
test
in
bound
fs
and
and
push
out
out
xor
dec
xchg
shr
pop
add
dec
xchg
(bad)
repz
inc
loop
or
xchg
mov
mov
in
adc
xor
daa
sbb
sar
mov
mov
aas
or
clc
in
jb
loopne
(bad)
ror
sub
ins
lods
pop
or
scas
scas
mov
outs
cmps
in
clc
cdq
sub
repz
in
mov
std
leave
fisub
aas
sbb
popa
mov
icebp
sub
jnp
stos
sub
sub
add
fcomp
pop
jb
cmps
lods
mov
aad
ss
jge
test
fcom
push
dec
loop
icebp
xor
fwait
cwde
pop
and
xchg
and
inc
push
(bad)
(bad)
mov
xchg
cs
sub
adc
add
dec
push
and
sbb
inc
popf
push
pop
mov
xchg
(bad)
mov
scas
popf
popa
add
not
sub
int
adc
imul
stos
mov
iret
leave
inc
shl
sub
fdivr
stos
jo
fnsave
mov
pop
jl
into
call
addr16
sbb
lds
mov
stos
push
cmp
rcl
repnz
and
pop
test
popf
scas
adc
jnp
pop
mov
or
sti
enter
out
les
add
pop
repz
xor
jne
jbe
jge
es
push
push
movs
jp
mov
dec
jmp
jnp
sahf
adc
aam
xchg
test
shr
shl
arpl
mov
popa
xchg
jo
cmp
xchg
lods
je
outs
leave
out
(bad)
pop
jge
das
fs
int3
jnp
add
ret
push
adc
imul
retf
sbb
ins
xor
cwde
and
ficom
(bad)
cld
sbb
test
ja
and
sar
nop
fnsave
movs
imul
mov
or
rol
leave
fnstsw
jo
(bad)
(bad)
(bad)
pushf
popf
aaa
mov
repz
push
push
jbe
(bad)
frstor
pop
mov
repnz
(bad)
xor
or
mov
call
jne
(bad)
shl
hlt
mov
mov
cmps
(bad)
lea
stos
adc
add
mov
mov
add
(bad)
mov
push
and
push
test
sub
jp
mov
xor
mov
data16
rcr
ficomp
inc
or
sahf
movs
cmp
push
mov
ret
gs
pop
dec
jl
jnp
dec
jecxz
and
xor
sbb
popa
ja
jno
enter
(bad)
push
pop
sbb
fnstenv
repnz
sbb
inc
jno
ret
jecxz
push
stos
test
lds
std
fwait
pop
xor
jecxz
mov
jae
and
sar
outs
and
in
xchg
push
push
mov
dec
call
shl
dec
ins
loop
movs
js
xchg
mov
or
push
sbb
scas
pop
test
sti
cmps
jns
clc
inc
out
dec
neg
out
or
mov
sub
sub
leave
ret
outs
jmp
sahf
fsub
(bad)
adc
inc
mov
(bad)
inc
pop
sbb
mov
outs
or
loopne
pop
sbb
movs
repz
cmp
pop
sbb
cmps
arpl
stos
sub
jns
fdivr
mov
adc
xor
mov
cmp
fcom
test
cli
(bad)
clc
mov
jmp
xor
inc
arpl
call
add
nop
pop
sbb
cmp
cli
aad
aas
sbb
or
inc
mov
fnstsw
test
sbb
das
jmp
adc
sub
repnz
xchg
cmp
(bad)
ins
mov
out
push
cmc
cmc
adc
enter
or
add
jno
jb
je
movs
arpl
push
bound
adc
jmp
in
sar
test
jns
(bad)
enter
push
outs
sbb
fwait
popa
es
jbe
push
ret
in
fst
outs
and
or
in
add
fcmovnu
push
cli
cmps
xchg
jb
mov
lods
or
jmp
loop
mov
xchg
(bad)
repnz
pusha
push
test
jl
jl
enter
aas
cmp
(bad)
rcr
cmp
int
sbb
(bad)
lods
cmc
fstp
mov
mul
jl
xor
push
enter
imul
test
shl
mov
jl
push
dec
push
xchg
cmp
out
mov
inc
out
mov
stc
fist
fild
aaa
ins
dec
lahf
xchg
(bad)
mov
xor
jmp
aaa
jg
xchg
or
cmp
xor
scas
mul
dec
mov
or
(bad)
div
call
or
int3
add
out
std
test
fdivr
mov
mov
adc
xor
mov
or
and
push
loopne
ins
sahf
mov
mov
cmp
mov
mov
inc
test
aam
sub
adc
ins
mov
mov
jns
sub
mov
add
pop
leave
retf
pop
xchg
sub
lahf
cwde
and
int3
pop
cmc
adc
jmp
fidivr
pop
ds
push
jp
aaa
xor
xlat
loop
push
icebp
pop
je
inc
mov
arpl
repz
pushf
popf
data16
cmc
das
das
xor
(bad)
jno
mov
jmp
push
les
cmp
out
adc
jno
ret
pop
iret
or
sbb
imul
jg
add
mov
cdq
iret
dec
fs
stc
data16
iret
les
xchg
xor
xchg
push
add
in
outs
mov
loop
gs
in
bswap
pop
pusha
xor
outs
js
cwde
test
call
cmp
int3
inc
mov
fsubr
mov
mov
mov
push
leave
mov
jns
call
jns
fist
push
mov
sbb
mov
and
movs
mov
jnp
scas
(bad)
in
xlat
inc
or
xor
hlt
mov
movd
out
sub
xor
loopne
cmp
lods
and
xchg
into
ins
sub
fdivr
pop
or
in
out
inc
imul
out
push
data16
and
cmp
push
cdq
mov
jge
clc
sahf
adc
cld
adc
popa
fsubr
fistp
out
imul
push
gs
inc
mov
push
push
pop
hlt
mov
or
mov
test
mov
mov
std
fdivrp
addr16
and
movs
inc
jp
sbb
inc
std
xor
lods
xor
movs
leave
jmp
cli
pop
pop
stc
jbe
jo
or
mov
test
std
and
mov
call
fnstenv
loop
nop
push
and
retf
add
mov
fsubr
mov
(bad)
mov
sbb
in
push
cmc
mov
repz
or
cmp
sub
pop
inc
ret
inc
in
push
xor
js
retf
out
jnp
mov
jp
and
inc
pushf
dec
sbb
call
push
sub
push
mov
test
add
call
xlat
bound
inc
pushf
pop
ror
dec
test
fstp
sub
ins
in
cmp
ret
push
pop
jno
out
mov
adc
sub
and
xor
or
or
das
jno
rcr
mov
push
imul
bound
xlat
call
inc
xchg
cmp
retf
jle
sbb
dec
ins
jg
fisubr
(bad)
nop
sar
add
sub
aad
add
xor
xor
pop
dec
sti
dec
out
sti
xchg
out
sbb
icebp
cmc
cmp
pop
into
dec
jb
aas
mov
fisttp
xor
mov
push
mov
ret
sub
sub
xchg
ins
into
dec
push
aas
adc
xor
sbb
jmp
pop
adc
sbb
cmp
or
cmps
outs
in
int3
cmp
inc
popa
cli
in
jb
xor
daa
movs
nop
xchg
add
cmp
or
xchg
cmps
out
jge
inc
or
mov
cmp
ins
(bad)
dec
rol
icebp
cli
rcl
addr16
gs
std
inc
jb
push
aas
inc
push
push
mov
loopne
sbb
jge
add
addr16
std
stos
fistp
sub
xchg
int
fst
in
adc
jnp
mov
cmc
sub
leave
sbb
(bad)
or
aaa
cmovg
jmp
lahf
pop
jno
push
xchg
xchg
mov
sahf
pop
dec
test
(bad)
int3
sub
xor
in
jbe
not
out
jge
sub
(bad)
leave
out
mov
popa
jle
jae
ds
inc
jecxz
and
push
inc
push
jg
aaa
jmp
dec
loopne
aaa
pop
dec
adc
stos
push
in
cmps
sbb
xchg
nop
sbb
mov
mov
stos
aad
mov
ja
cs
jbe
(bad)
retf
and
(bad)
fnstenv
clc
clc
sub
pusha
pop
imul
mov
jbe
sbb
push
in
sub
ins
sbb
jg
sti
ja
adc
jmp
mov
loopne
aam
pop
mov
cmp
adc
loop
cmp
cwde
sti
xchg
mov
adc
mov
push
pop
xor
addr16
mov
cmp
aam
sub
jae
loope
movs
xchg
into
add
stos
pop
xor
pushf
cmps
sbb
ins
and
pop
fbld
cld
adc
mov
mov
es
bound
(bad)
and
jmp
ficomp
or
push
sub
jmp
push
dec
pop
lock
dec
push
out
ins
jns
add
push
rol
js
into
aaa
out
lahf
add
jb
inc
(bad)
jmp
pop
xlat
adc
pop
lds
jns
cmc
mov
mov
mov
mov
mov
inc
push
mov
retf
ret
push
xchg
add
hlt
cmp
pop
sbb
into
or
push
cmps
fidiv
pop
shl
jmp
lahf
leave
inc
and
sub
push
add
mov
dec
jmp
xchg
scas
pop
inc
inc
lahf
cwde
hlt
adc
fldenv
xchg
rcl
int
and
mul
daa
pop
adc
push
fcmovb
mov
xor
gs
or
sbb
mov
(bad)
adc
movs
call
mov
fsub
push
scas
data16
dec
mov
push
or
out
out
mov
jns
adc
adc
jne
sbb
in
or
test
sbb
imul
lea
push
fist
mov
aas
stc
push
jne
mov
aad
not
pop
arpl
rcr
pop
jle
sub
rcr
enter
xor
cmc
(bad)
pop
loop
jnp
cmps
out
cmp
jmp
and
pop
les
inc
mov
aas
in
data16
ret
sbb
out
clc
xor
sub
dec
aas
ret
mov
and
dec
icebp
inc
lods
cmp
stos
lahf
es
jp
mov
stos
cmp
pop
and
or
adc
addr16
popf
jae
jnp
sub
mov
stos
mov
repnz
jle
push
or
jns
xlat
bound
icebp
xchg
xor
sub
mov
xlat
cmp
cmps
sub
inc
mov
imul
add
div
sub
push
mov
mov
mov
add
sbb
ins
jl
xchg
not
repnz
xor
scas
push
sar
cmp
cmp
or
nop
mov
stos
nop
xor
shr
jl
rcl
lds
sahf
xchg
ins
mov
jnp
fisubr
jg
mov
mov
xchg
cmp
mov
xor
ins
gs
xchg
or
push
lods
xor
jno
add
aam
adc
rcl
mov
sbb
sub
lds
xor
aaa
fwait
jns
test
nop
dec
dec
scas
or
inc
add
pop
sub
add
xchg
aad
test
aas
xchg
pop
push
mov
pop
adc
(bad)
int3
aad
pushf
inc
stos
inc
dec
inc
int3
cmps
pop
ret
movs
int
fsubrp
push
xor
dec
push
(bad)
shl
outs
inc
push
sub
and
jp
push
into
sysexit
sub
mov
in
jmp
jl
jg
fwait
jp
shl
test
cli
pop
es
mov
lahf
movs
jb
xchg
cli
cmp
inc
or
scas
leave
and
fld
in
in
es
add
aas
sbb
xchg
adc
sub
fs
push
nop
lahf
adc
mov
inc
adc
aad
xor
mov
in
mov
inc
das
sbb
fisub
stc
stos
cmps
call
push
push
pop
into
push
jnp
or
and
out
test
dec
in
adc
or
cmp
movs
scas
pop
dec
dec
into
add
es
pushf
das
push
mov
and
test
test
pop
or
push
sub
sbb
imul
cmp
xchg
add
lahf
xchg
es
stos
pop
int
fs
mov
outs
adc
imul
das
xchg
ret
mov
sar
dec
jno
and
xor
push
loopne
adc
jg
jl
loop
fisub
mov
mov
cmp
xchg
inc
outs
jne
loope
in
es
adc
(bad)
pop
gs
xor
aas
push
cmp
lock
ficom
scas
iret
imul
je
cmc
pop
(bad)
jmp
(bad)
cld
jns
xchg
stos
sub
inc
xchg
adc
or
sar
mov
dec
scas
loop
mov
ja
je
fwait
mov
mov
sbb
popa
dec
hlt
ja
sub
cmp
cmp
shr
sub
jo
(bad)
(bad)
mov
out
es
imul
mov
sub
xor
outs
xchg
cmp
push
ja
inc
mov
mov
(bad)
cld
cmp
jno
jl
lock
adc
out
sub
mov
push
xchg
xchg
cmp
(bad)
int
call
jg
mov
or
fbld
lahf
mov
iret
ins
fdivr
movaps
sbb
mov
push
fs
fsubr
mov
cdq
adc
test
jbe
mov
adc
icebp
mov
xchg
je
aas
adc
data16
and
add
push
popa
jl
mov
xchg
repnz
sbb
cld
mov
pop
js
pop
sbb
ret
leave
js
add
xchg
icebp
pop
xchg
push
sbb
xlat
retf
in
add
cli
xchg
mov
mov
push
sub
outs
ja
add
add
sub
xchg
xchg
in
lds
mov
icebp
sbb
add
cmp
mov
inc
push
scas
icebp
xor
xchg
mov
(bad)
xchg
je
push
mov
(bad)
cli
out
(bad)
loope
cmps
adc
xchg
pop
imul
inc
bound
push
sub
push
adc
or
iret
inc
mov
leave
dec
or
sar
xchg
ss
xor
mov
jns
test
xor
jg
sbb
mov
nop
cld
xchg
mov
inc
adc
or
mov
call
or
out
lods
add
aaa
inc
cmp
leave
stos
mov
in
sbb
sahf
mov
daa
stc
jge
jp
mov
xor
repnz
mov
stos
ror
or
adc
push
mov
inc
jne
test
jl
sbb
xor
xor
cld
movs
add
lods
stc
cs
fcom
and
mov
ds
sti
push
stos
inc
pop
inc
cmps
mov
shl
add
push
cs
mov
adc
mov
and
lods
sub
aam
pop
je
jne
sahf
mov
ins
jge
push
cdq
ret
cli
adc
in
sbb
sub
add
ja
in
jl
fwait
repz
jb
mov
xchg
push
retf
inc
jp
aad
cmp
jle
or
mov
in
xor
push
shl
add
mov
mov
call
and
enter
push
mov
jns
push
cwde
pop
ds
outs
pop
out
mov
adc
cmp
loope
jecxz
(bad)
pusha
pop
cwde
dec
lds
jbe
pop
gs
pop
cmps
inc
inc
push
je
das
sub
shr
inc
or
cwde
sti
cmp
repz
fs
mov
loop
xchg
inc
cmp
and
cmps
in
xor
lahf
adc
fsub
movs
ud2
jge
fld
sub
mov
jp
lods
or
dec
ja
(bad)
test
add
adc
mov
(bad)
cmp
jnp
cs
and
enter
mov
sub
mov
pop
(bad)
into
adc
cmp
mov
out
mov
fild
and
xor
push
cli
cs
(bad)
leave
ficom
jl
pop
cmp
imul
sub
cmp
in
out
push
and
adc
sub
cdq
xor
inc
inc
shl
imul
enter
mov
mov
(bad)
nop
fwait
pop
inc
inc
dec
scas
in
fist
add
out
outs
sbb
gs
ret
or
out
mov
test
pop
mov
daa
sub
(bad)
cli
cwde
push
arpl
imul
mov
jge
fcmovne
sub
sbb
jno
popf
pop
jne
mov
outs
clc
leave
xchg
push
add
not
dec
movs
fiadd
nop
pop
cmp
xor
stc
jo
pop
int3
or
cli
sbb
xor
inc
xor
sub
cmp
xor
add
push
add
dec
and
loopne
xchg
sbb
xchg
mov
xchg
sahf
sti
stc
sbb
std
xor
in
mov
dec
out
int
pushf
mov
ret
push
xchg
std
ins
sub
xor
mov
mov
sar
aam
scas
je
push
xchg
adc
mov
movs
out
jae
clc
cli
les
mov
mov
cdq
(bad)
loopne
ins
imul
xchg
shl
jbe
pop
int
jno
mov
mov
jb
in
jge
mov
ins
popa
mov
(bad)
jns
push
pop
sub
bound
xchg
in
cld
dec
xchg
and
mov
mov
mov
ins
adc
test
test
adc
fs
adc
and
(bad)
fisubr
je
add
movs
enter
and
js
sub
inc
jmp
enter
pusha
xchg
mov
xchg
js
sbb
clc
adc
in
lods
cwde
mov
imul
xor
idiv
xor
mov
inc
cmp
mov
repnz
push
push
rcl
xchg
les
mov
jae
mov
sub
dec
outs
leave
mov
xlat
add
fs
gs
dec
pusha
loop
push
dec
loop
xchg
mov
loopne
nop
pop
iret
xchg
xor
fadd
sbb
pop
push
sub
add
mov
sbb
shl
out
cmp
enter
(bad)
fisttp
dec
sbb
add
jg
ret
cmp
dec
imul
sub
cwde
cmps
mov
cmp
(bad)
scas
jl
push
xlat
mov
cmc
fs
shl
xor
ret
cmps
sub
arpl
and
ins
in
addr16
dec
push
scas
into
into
sar
jl
dec
repnz
mov
sub
or
add
ficomp
aas
in
sbb
out
jo
daa
cmp
(bad)
jno
daa
mov
pop
jmp
add
out
fidivr
popf
sbb
out
adc
mov
shr
aaa
mov
ins
out
xchg
add
sbb
and
xor
fiadd
hlt
or
imul
pop
jp
rcl
out
nop
inc
imul
shr
rcr
clc
inc
lods
sti
cs
xor
sar
(bad)
and
dec
cmp
lods
(bad)
push
xchg
loope
cdq
or
int
sub
call
xlat
aas
movs
mov
pop
sbb
add
push
jo
repz
dec
mov
dec
test
imul
and
jecxz
sar
enter
sbb
std
dec
mov
xor
jl
push
pop
or
mov
cmp
sub
inc
bound
push
add
scas
mov
jb
pop
push
push
xchg
(bad)
jmp
out
push
cmp
adc
mov
jmp
pop
addr16
jmp
add
and
xchg
mov
fs
xor
and
pop
adc
and
sbb
push
and
pop
inc
cmp
pcmpeqw
cs
xor
int3
mov
sub
add
cdq
repnz
xchg
ja
repnz
fldcw
xor
lds
outs
sbb
push
bsf
jae
lods
mov
add
(bad)
xchg
cmp
lods
pop
push
inc
cld
dec
or
push
xlat
push
add
lea
fs
xchg
ret
dec
mov
or
clc
movhps
push
stc
lea
pop
mov
xor
add
add
push
and
jno
stos
test
xchg
or
pusha
clc
pop
dec
and
cmp
add
mov
loopne
xor
sbb
mov
inc
ret
or
or
call
push
dec
xchg
push
push
retf
xchg
cmp
pop
pop
sbb
pop
or
aas
enter
popa
fs
pop
gs
pop
mov
cmp
add
xchg
scas
adc
test
stos
sbb
cmp
call
push
stc
bound
sub
add
ss
test
add
xor
sub
sub
outs
call
xchg
push
jp
fwait
movs
cmc
and
test
rcl
das
ins
test
jmp
scas
jle
jae
mov
jno
add
or
data16
loopne
xor
rol
test
mov
sub
inc
test
fsub
push
push
sub
inc
fiadd
xlat
inc
mov
mov
out
clc
pextrw
dec
hlt
or
mov
(bad)
jo
add
push
add
dec
int
push
dec
push
ins
stos
inc
adc
cmps
fidivr
adc
cli
inc
(bad)
pop
in
xlat
dec
(bad)
test
popf
mov
pop
ja
(bad)
outs
adc
icebp
pop
hlt
push
fild
sbb
iret
adc
sbb
cmps
sbb
xor
push
out
outs
aaa
(bad)
xchg
loopne
sub
xor
or
or
aaa
xchg
add
push
cmps
or
das
xor
inc
inc
or
and
mov
mov
(bad)
fisttp
lea
rcr
add
ret
add
xchg
sub
rol
or
push
pop
fnsave
jmp
xor
cmp
div
cli
shr
jbe
xlat
pop
xchg
div
push
aas
sbb
lock
adc
cmp
loopne
xor
sub
mov
(bad)
sub
mov
jp
and
rcl
enter
int
mov
(bad)
outs
mov
call
addr16
stos
xchg
fcmove
test
pusha
repz
jb
jmp
push
or
jns
mov
icebp
test
fisubr
push
fisub
pop
test
or
lock
and
aas
mov
inc
jge
dec
stos
dec
mov
outs
xlat
push
imul
mov
xchg
lea
lods
inc
ins
adc
ins
test
lods
mov
mov
sub
inc
jbe
mov
xor
lods
mov
add
lods
stos
lea
sub
mov
popa
push
rol
sbb
scas
push
sahf
out
neg
xor
fs
xchg
xchg
sub
adc
and
pop
stos
sub
mov
sbb
push
aam
or
jmp
paddsb
jne
scas
pusha
cmp
hlt
inc
mov
xor
cdq
aam
popf
mov
js
jecxz
xor
hlt
xchg
(bad)
xor
(bad)
frstor
ret
sahf
int3
mov
jnp
std
mov
retf
int
jl
mov
test
add
aam
fcomp
imul
repz
imul
shl
pop
push
fsubr
clc
les
push
popf
mov
sub
xor
sub
dec
pop
mov
(bad)
sub
xor
pop
jb
and
push
stos
sbb
adc
mov
and
dec
mov
lea
jle
repz
push
push
cmp
fld
sub
pop
or
dec
dec
test
retf
push
gs
sbb
or
jmp
xor
cmp
lds
xor
frstor
ret
les
retf
repnz
cmp
daa
lds
adc
pop
add
pop
pop
sub
mov
ss
mov
repz
pushw
pop
aaa
outs
cmp
xchg
inc
adc
xorps
cmp
and
out
mov
dec
sbb
bound
jmp
pop
mov
sub
pushf
inc
out
lods
jno
rol
mov
dec
adc
xchg
dec
xor
outs
adc
adc
dec
xchg
sub
push
push
shl
fucomp
sbb
jmp
aaa
cmp
inc
xor
jmp
xor
pop
mov
div
mov
pop
mov
hlt
and
adc
dec
loopne
mov
xor
out
sbb
and
nop
in
and
sar
outs
dec
into
jle
dec
mov
pop
push
cmp
fiadd
ja
jg
shl
pop
sub
jmp
cmps
push
mov
fwait
xor
or
fmul
dec
pop
mov
test
es
mov
mov
dec
add
and
cmp
pop
cmps
fsub
loopne
xchg
push
loop
mov
cwde
fsubr
cmp
push
push
pop
mov
inc
loop
icebp
mov
ja
mov
cmp
mov
inc
das
inc
retf
cmc
and
mov
mov
xchg
xor
aas
retf
gs
xchg
ret
xchg
out
push
xchg
push
pop
aaa
fsub
cmp
xlat
pop
dec
mul
sbb
and
cmp
cwde
mov
add
fdivr
push
lods
sub
call
inc
dec
lds
push
adc
mov
push
inc
hlt
int
aas
jno
ror
addr16
daa
mov
sbb
sbb
aas
xchg
xchg
cwde
out
jl
sbb
rcr
and
(bad)
mov
leave
and
cmp
(bad)
int
jmp
xchg
lea
test
data16
rcl
sub
push
mov
fimul
sub
sar
xor
mov
cwde
les
jp
lahf
mov
das
cmp
add
push
dec
mov
rcl
add
mov
ret
aas
inc
cs
call
cmps
jbe
rcr
adc
dec
mov
xchg
inc
stos
pop
repz
les
adc
xor
push
mov
or
xchg
lds
sbb
dec
idiv
sub
mov
adc
jp
push
fnstsw
(bad)
push
or
and
or
stc
and
cmps
xlat
xchg
aaa
push
rcr
fwait
push
ror
retf
out
mov
mov
add
inc
push
aad
dec
fidivr
push
xchg
adc
mov
cmc
cwde
xor
sub
mov
stos
cmp
jecxz
push
in
mov
in
dec
mov
and
mov
adc
and
mov
push
cmp
arpl
dec
inc
ja
push
mov
pop
add
call
and
mov
and
shr
dec
nop
shl
and
scas
imul
repz
xlat
in
pop
into
enter
mov
daa
cmp
test
inc
cmp
adc
add
out
call
ds
ja
push
and
cmp
pop
lea
into
aad
movs
lods
mov
inc
into
xor
gs
inc
adc
push
hlt
push
popf
int
retf
or
push
xor
push
or
cmp
in
mov
cmp
push
(bad)
pop
jno
out
pusha
ins
xchg
inc
sbb
lods
stos
cmp
mov
mov
dec
in
in
jae
jae
sub
mov
push
add
adc
adc
nop
lods
inc
daa
fcom
call
mov
call
mov
mov
xor
inc
repz
add
push
sub
rcl
jle
daa
leave
leave
(bad)
int
arpl
sub
and
js
clc
in
mov
shr
push
das
and
ins
lea
xchg
dec
pop
adc
add
adc
leave
mov
(bad)
jns
pushf
xchg
jmp
or
ret
(bad)
push
xchg
sbb
mov
sub
aas
addr16
mov
mov
rol
sub
jmp
cwde
sahf
xchg
xchg
inc
mov
movs
or
(bad)
fcomip
inc
lods
jmp
cld
push
adc
mov
fs
mov
ret
(bad)
out
in
fwait
loopne
dec
lock
outs
mov
add
icebp
dec
jmp
dec
jns
cli
inc
or
dec
nop
mov
div
test
ret
or
jl
and
xchg
addr16
adc
inc
int
adc
or
aam
dec
dec
pusha
ins
rcl
add
out
push
leave
not
pop
sub
and
js
mov
gs
inc
les
dec
inc
sbb
shr
enter
push
xor
mov
cmc
rcl
push
sbb
loope
and
aaa
in
mov
int
in
dec
pop
fist
jecxz
fist
shr
cdq
dec
sti
or
test
sub
fincstp
dec
(bad)
xchg
aas
adc
fst
xor
ficomp
(bad)
mov
ret
mov
cmp
inc
xor
jno
jns
int
stc
and
loopne
imul
pusha
inc
sub
dec
retf
test
inc
cdq
inc
xchg
pop
and
pop
in
ja
jmp
cmps
mov
and
jb
stos
in
(bad)
cld
mov
xchg
das
xlat
dec
inc
je
and
push
xchg
lea
out
retf
mov
pop
lahf
mov
jmp
ins
push
pop
pop
jb
rcr
fidivr
loope
out
inc
jae
or
adc
(bad)
pop
and
and
jb
(bad)
xchg
hlt
and
enter
pusha
sbb
pop
mov
xchg
jno
jmp
sbb
mov
xor
inc
xchg
je
jmp
jmp
cmps
in
int3
leave
jbe
popf
sub
lods
cmc
dec
cmp
scas
sbb
sbb
ret
and
mov
ja
test
cmp
add
fst
lock
mov
out
mov
or
sbb
pop
dec
mov
out
cwde
nop
dec
sbb
ins
mov
fs
(bad)
shl
or
inc
lock
js
retf
push
pop
addr16
mov
sbb
push
in
jecxz
lock
aam
stc
push
jmp
xchg
fcomp
int3
dec
add
jne
in
mov
pop
mov
jae
aaa
add
push
add
aaa
and
stos
in
dec
hlt
lock
push
pop
sahf
mov
mov
push
push
cmps
sub
fmulp
and
xlat
cdq
cmp
push
or
in
and
dec
(bad)
xor
dec
mov
xchg
mov
mov
inc
(bad)
sub
ins
ja
shl
rcl
(bad)
push
mov
fimul
jl
jecxz
fs
out
fidivr
pop
or
imul
lea
je
ins
jno
(bad)
cmp
out
push
inc
push
pop
sbb
pop
cmp
ret
mov
dec
mov
aaa
jg
cmp
dec
xor
nop
dec
ja
push
add
mov
in
xor
fmul
inc
sbb
jae
leave
add
ss
cli
ret
out
or
pop
shl
inc
nop
fwait
call
icebp
mov
js
push
sbb
lock
pop
cmp
sbb
retf
inc
iret
cmc
addr16
mov
mov
adc
rcl
sub
stos
jg
inc
ins
cmp
push
ins
ss
cmp
sub
inc
jecxz
xchg
ror
mov
xor
push
jmp
push
mov
fsubr
rol
jnp
ins
aad
mov
fsincos
(bad)
js
dec
outs
in
push
or
cmp
ds
stos
(bad)
in
jo
ja
push
mov
sub
or
out
test
jecxz
out
mov
push
or
les
das
dec
scas
xchg
mov
(bad)
icebp
dec
stos
jno
mov
xor
gs
jl
jl
and
xchg
fucom
in
(bad)
cmp
push
add
into
mov
fucomp
pop
xor
mov
rol
mov
icebp
int3
pop
cmps
rcl
cli
jle
fst
test
inc
(bad)
loopne
call
push
mov
dec
daa
inc
mov
das
jo
(bad)
mov
dec
mov
adc
or
or
jae
into
dec
xor
sub
fisubr
pop
(bad)
adc
ror
sub
out
mov
pushf
inc
mov
daa
out
aaa
div
adc
and
test
shr
push
dec
sbb
test
je
xchg
loope
mov
sbb
adc
sub
mov
out
pusha
xchg
push
in
bound
arpl
and
sar
xor
sbb
push
add
jno
div
mov
(bad)
retf
mov
xor
aas
test
hlt
push
inc
lods
mov
push
stos
pop
add
je
mov
mov
sbb
js
ins
xchg
es
mov
jmp
jns
fbld
xor
cdq
xchg
ds
jbe
mov
or
sub
and
sub
ror
push
push
idiv
movs
and
daa
jmp
mov
sti
mov
and
scas
sbb
lods
mov
(bad)
inc
lahf
add
lea
js
add
nop
cmps
xor
or
(bad)
jo
mov
aad
push
xlat
sub
faddp
jne
pusha
lea
mov
xor
jnp
sbb
jmp
push
fsub
imul
sbb
lock
pop
jmp
bound
loope
int3
popa
stos
xchg
das
push
and
les
push
mov
or
pop
inc
mov
adc
jge
jbe
fistp
call
stos
pusha
pop
jle
push
je
cmps
pop
lahf
bound
imul
mov
into
inc
les
jno
bound
ds
bound
loop
leave
lods
(bad)
adc
inc
(bad)
out
enter
jl
inc
sub
xchg
jle
cmp
fcmovnu
das
ror
adc
xor
dec
movs
push
mov
fisttp
jae
dec
fnsave
sub
push
mov
pusha
mov
lds
and
fidiv
push
fmul
xchg
mov
pop
(bad)
aad
test
movs
(bad)
mov
inc
add
sub
psadbw
dec
mov
dec
push
int3
ins
ret
icebp
mov
push
and
push
cmp
fmul
vpaddw
pop
in
fcmovbe
jae
mov
or
call
repnz
clc
jne
movs
pop
leave
imul
hlt
cmps
cld
rdmsr
xchg
push
pop
sti
and
xchg
sub
mov
test
aaa
sahf
xor
push
out
add
and
pcmpgtd
push
pmullw
xchg
out
sub
movs
adc
cmp
pop
push
push
in
push
imul
inc
jp
xchg
xchg
test
pop
fisub
out
rol
cmp
inc
add
test
cmps
cmc
mov
pop
lods
xor
xchg
xchg
mov
fld
xchg
dec
add
ret
fwait
jmp
mov
imul
aaa
cs
or
sar
jmp
movs
outs
cmp
push
cwde
pop
stc
(bad)
adc
jecxz
stos
inc
push
gs
cld
(bad)
xor
fidiv
and
sti
fimul
ret
sbb
xchg
cmp
rcr
pop
shl
mov
es
mov
jmp
adc
(bad)
pusha
mov
stos
dec
xor
and
sbb
xchg
sti
inc
xchg
jg
shl
cmps
inc
push
xchg
not
std
and
outs
jns
jmp
int
fucom
xchg
dec
push
rcl
jbe
fs
and
xchg
ror
push
leave
scas
add
movs
ds
fstp
addr16
xor
mov
sti
inc
popf
dec
fimul
fistp
pop
int
adc
cli
sub
loop
test
jmp
out
mov
add
inc
mov
sbb
adc
fdiv
pushf
jmp
cmp
and
or
jmp
sub
add
shl
cmp
stos
nop
imul
push
cli
mov
push
bound
daa
movs
mov
in
xchg
mov
pop
jmp
push
push
fdivr
cmp
xchg
js
fwait
and
adc
mov
movs
mov
pop
(bad)
fdiv
jmp
and
adc
cli
cmp
clc
sbb
xchg
not
mov
fcmovu
daa
pop
mov
sbb
rcl
dec
shl
in
out
js
retf
push
inc
mov
arpl
mov
jp
dec
int
les
mov
(bad)
stos
adc
push
bound
push
pop
adc
mov
mov
stos
xor
daa
out
(bad)
cmc
ja
adc
fcomp
adc
inc
push
in
fs
repz
data16
aas
pusha
mov
inc
clc
es
out
mov
xor
push
xor
daa
xor
add
fucomp
das
stc
mov
add
outs
push
popa
mov
xchg
mov
jbe
inc
outs
and
cdq
pop
dec
jmp
pop
jmp
push
ret
popa
pop
pop
inc
inc
aaa
jp
lods
ret
ja
pop
mov
cmp
sbb
fs
aam
adc
push
jne
iret
pop
xchg
inc
out
dec
adc
shl
imul
test
jmp
or
mov
push
clc
cmps
(bad)
push
shl
pop
jno
jne
fild
ss
js
cmp
pop
ins
inc
movs
dec
jg
popa
inc
fs
dec
xchg
and
xchg
and
pop
pop
adc
ss
xor
js
push
stos
xchg
pop
cmp
jae
mov
push
push
adc
fisubr
pop
(bad)
adc
scas
fistp
fs
jae
push
hlt
lods
push
cdq
pusha
sbb
lods
push
add
popf
and
test
fisubr
sbb
xchg
jnp
scas
mov
out
pop
cmps
jbe
stc
out
fst
shr
loop
xor
mov
out
cmp
dec
stc
jne
mov
ficom
mov
push
xchg
pop
xor
shl
icebp
mov
dec
add
lods
popa
xchg
sbb
sub
jbe
fs
out
outs
adc
and
adc
scas
mov
bnd
sahf
cmps
rcr
or
neg
in
xchg
arpl
mov
xchg
pop
adc
sub
dec
inc
rcl
jecxz
lahf
in
sbb
jle
adc
jnp
daa
iret
push
inc
mov
adc
and
pop
aaa
loop
cli
push
push
pushf
icebp
mov
xor
std
lods
and
mov
push
cmp
pusha
cmps
imul
or
lock
push
mov
jge
push
xlat
mov
sbb
(bad)
outs
sub
mov
dec
push
add
out
rcl
clc
jae
sub
sbb
xchg
in
add
dec
das
loop
jp
dec
cvtps2pi
sub
add
pop
mov
jns
push
fdivr
imul
add
cwde
adc
adc
mov
outs
cmp
inc
mov
and
dec
push
mov
dec
or
fstp
add
jns
call
or
and
arpl
push
(bad)
dec
jp
stos
inc
mov
xchg
imul
(bad)
fsub
dec
ja
cmp
push
adc
test
test
xchg
mov
int
outs
add
mov
dec
mov
mov
shl
pop
adc
mov
inc
inc
push
mov
add
jg
lock
std
push
loope
loopne
sti
jmp
mov
call
jle
fisub
and
dec
outs
mov
xchg
mov
(bad)
add
fwait
adc
sub
retf
outs
xchg
xchg
mov
mov
mov
xchg
cwde
mov
cmp
and
and
stc
sub
mov
fld
ss
dec
xlat
fsub
repnz
rol
inc
push
push
jl
dec
scas
pop
movhps
push
xor
call
mov
xor
fild
and
xchg
fistp
cld
mov
pop
popf
test
pop
jle
jg
mov
mov
fsubr
mov
enter
jg
jmp
dec
sti
mov
stos
push
lods
dec
mov
cli
(bad)
call
and
push
rol
call
dec
pop
mov
adc
mov
repnz
in
(bad)
ret
ja
mov
push
mov
test
(bad)
in
not
repz
or
popf
ins
stos
xchg
cmps
aad
ja
pop
mov
mov
inc
cmp
popf
les
test
ss
dec
jae
mov
sbb
mov
sbb
and
test
js
sbb
(bad)
dec
es
imul
inc
xchg
call
shl
xor
mov
es
int
sbb
cwde
sub
fwait
dec
mov
loopne
inc
pop
xchg
jnp
imul
scas
sbb
xor
sub
and
jo
in
push
and
icebp
adc
retf
ds
xchg
imul
imul
ffreep
push
cwde
jne
xlat
mov
inc
push
bound
aam
push
mov
sar
dec
push
and
jmp
mov
test
push
ficomp
pusha
pop
inc
push
shl
inc
mov
imul
ins
xchg
arpl
aad
adc
sub
push
sub
(bad)
or
js
or
cld
int3
gs
inc
dec
retf
and
push
and
int
push
mov
or
or
add
hlt
jge
mov
push
dec
out
push
in
lea
loope
into
or
clc
aam
adc
fsub
sub
and
or
(bad)
outs
(bad)
mov
aad
cmp
in
add
aam
bound
pop
and
jl
fist
ja
dec
xor
pop
cli
pop
std
adc
xchg
sbb
inc
xchg
jle
out
std
adc
imul
loopne
mov
mov
ds
push
rcl
mov
cwde
mov
mov
add
pop
and
push
frstor
sar
sub
push
rcl
movs
rcr
pop
sbb
leave
ror
sbb
imul
jmp
jns
pop
dec
loopne
xor
out
sub
cmc
push
(bad)
pusha
(bad)
fldcw
idiv
dec
outs
imul
push
inc
aas
fdiv
cmps
or
dec
jle
pop
fimul
pop
pop
lahf
loop
icebp
aad
pushf
mov
mov
ror
int3
ror
pop
sub
in
sbb
movs
leave
dec
pop
shl
mov
clc
loopne
cmps
iret
test
test
int
inc
das
cmp
movs
pop
xlat
ret
sub
test
(bad)
sub
sub
jbe
fs
shr
jecxz
push
fldcw
cmp
cmp
fisttp
dec
pop
jmp
jb
retf
xchg
ins
mov
stc
mov
sar
test
inc
jno
scas
mov
pop
(bad)
adc
pop
or
loop
icebp
jmp
mov
ja
fwait
mov
dec
test
popf
call
inc
and
dec
lods
pusha
adc
jle
xor
xchg
in
jl
sub
and
pusha
or
pushf
loop
inc
and
mov
push
pop
imul
mov
jmp
rcr
mov
xchg
mov
cmp
adc
int
dec
rcl
leave
mov
push
xchg
jmp
sub
call
jo
test
cdq
fwait
push
add
mov
mov
mov
sub
add
jno
lahf
mov
not
aaa
and
sub
jno
js
xor
and
dec
sti
fistp
and
pusha
and
xchg
sar
sahf
test
das
lods
jle
movs
iret
cmp
dec
mov
sbb
xchg
jnp
(bad)
and
sbb
shr
mov
xor
aas
call
bound
pop
std
adc
pop
arpl
mov
sub
enter
retf
sahf
jle
dec
call
cli
fdiv
adc
pop
call
int
out
inc
stos
into
or
add
jg
push
cmc
pusha
pop
pop
sub
into
scas
lds
cmp
int3
and
fwait
xchg
call
ss
loop
push
sub
add
test
imul
xor
stos
adc
xor
lods
es
iret
ds
inc
stos
cmps
sub
les
cmp
ins
pop
mov
sbb
adc
pop
jl
popa
sub
add
sub
jnp
cmp
mov
add
pop
pop
push
ror
mov
jmp
inc
mov
sub
cmc
push
push
inc
cmp
jo
xchg
nop
and
imul
push
lods
js
xor
mov
into
jl
jo
pop
(bad)
ror
sbb
xlat
pop
jecxz
shr
xor
retf
pop
inc
xchg
xchg
pop
jb
(bad)
stc
sti
enter
jecxz
pop
cs
jne
jno
ret
push
je
pop
push
daa
inc
std
cli
fstp
fdiv
add
xor
push
jno
bound
dec
dec
dec
sbb
pushf
mov
jno
out
into
jnp
sbb
inc
test
sub
mov
or
jl
mov
lods
adc
clc
mov
cdq
mov
hlt
scas
iret
sub
xchg
aaa
cmps
or
add
inc
imul
add
out
jae
aaa
and
cmp
push
int3
push
jp
ja
sub
cmps
push
into
shl
mov
out
repnz
pop
and
mov
pop
retf
mov
and
je
adc
ror
xchg
xchg
int3
je
cmp
daa
out
adc
jle
xor
dec
mov
das
fcmovbe
sub
xchg
test
jbe
jae
xchg
test
les
pop
sbb
outs
jmp
bound
clc
loope
pop
out
stos
dec
bound
or
test
stos
mov
pop
pop
inc
neg
jns
cmps
mov
mov
and
mov
dec
add
jb
ret
int3
sbb
in
mov
mov
js
xor
add
adc
jbe
pushf
inc
xchg
fxch
sub
and
mov
sub
dec
call
enter
pop
fisttp
mov
loopne
or
jecxz
cwde
push
xlat
add
cmp
or
fsubr
jmp
adc
push
xor
mov
arpl
xchg
loopne
pushf
int
and
xor
ja
jle
(bad)
stos
mov
sub
jae
mov
and
xchg
(bad)
mov
sub
aas
in
(bad)
arpl
xchg
mov
bound
or
(bad)
mov
mov
add
mov
into
fmulp
cmp
and
dec
sahf
or
loope
xor
retf
aam
rcl
adc
dec
pushf
sub
jl
jo
aas
movs
jne
ret
jb
xchg
in
adc
mov
int
inc
mov
sub
push
add
fnstenv
xchg
aas
std
jns
mov
pop
imul
dec
(bad)
jg
dec
mov
pushf
sti
shl
call
pusha
dec
and
inc
xchg
stos
sub
mov
aas
lea
in
or
jecxz
(bad)
cmc
popf
xchg
div
cmp
sbb
and
xchg
stos
cmps
call
xchg
mov
adc
loopne
jne
ror
bound
and
loop
(bad)
lock
jl
loop
mov
dec
mov
test
(bad)
std
sbb
pop
pop
outs
xor
call
test
ror
or
adc
test
lods
mov
jbe
sub
cmp
mov
fmul
sub
fdivp
cli
cmp
mov
mov
push
push
or
xchg
cmps
and
fwait
pop
dec
dec
rol
ret
ret
cvttps2pi
test
es
inc
(bad)
mov
dec
loopne
mov
and
shl
cmps
inc
dec
je
movs
and
or
sbb
add
xchg
ror
jge
mov
jmp
(bad)
mov
je
pushf
ss
jecxz
dec
or
or
mov
adc
imul
adc
sub
inc
mov
jl
pop
test
pop
clc
outs
into
inc
lea
inc
aaa
(bad)
retf
mov
out
jae
fisttp
ins
iret
cmp
sub
mov
mov
pusha
mov
js
mov
icebp
in
mov
jmp
pop
bound
rcl
dec
lock
cmps
push
push
or
dec
daa
pop
add
leave
and
lea
mov
add
adc
pop
add
cld
in
aaa
push
cmp
mov
call
cmp
push
push
sbb
mov
shr
mov
xchg
jecxz
icebp
and
fldl2e
jmp
bound
xchg
fcom
mov
push
data16
adc
sbb
icebp
pop
repz
sbb
mov
mov
out
mov
pop
and
fs
push
daa
icebp
mov
sti
shl
inc
mov
push
xchg
test
movs
jbe
push
or
adc
dec
scas
(bad)
daa
popa
cmp
(bad)
retf
jmp
test
(bad)
sub
jns
and
int
push
lea
and
inc
fst
cmp
rcl
mov
mov
aaa
movs
push
pop
out
ja
xor
jns
inc
mov
and
xchg
push
push
xchg
and
fcomp
fs
cmp
and
xchg
neg
mov
outs
push
std
imul
jne
jmp
cmps
loopne
jns
std
add
cwde
adc
add
aaa
cld
jmp
cmp
dec
sub
fistp
and
and
jno
cmp
push
out
mov
mov
adc
xchg
retf
fwait
pop
ficomp
int
mov
pop
mov
psadbw
and
popa
mov
mov
or
mov
xchg
loopne
fimul
adc
cmp
push
lds
push
pop
(bad)
cmp
sar
inc
xor
out
xchg
mov
jne
adc
pop
fwait
in
dec
cli
cmp
inc
jp
in
cmc
pop
test
sbb
movs
pop
test
imul
fidiv
adc
add
or
in
pop
out
jbe
xchg
inc
or
inc
add
rcl
(bad)
test
cmps
inc
and
outs
(bad)
das
pushf
pop
stc
push
or
push
jp
inc
fmul
cmp
pop
cmp
sbb
add
inc
jle
dec
bound
cmp
cli
xlat
and
xchg
jl
nop
movs
lock
jae
push
retf
ror
arpl
xor
es
ds
cmp
lods
out
sbb
(bad)
popa
mov
add
retf
mov
rol
push
mov
adc
pop
jge
pop
pop
cdq
mov
ror
inc
push
adc
mov
pop
int
or
jmp
sub
adc
cmp
(bad)
das
imul
jecxz
or
pop
pop
cmp
in
jnp
and
xchg
scas
sbb
push
mov
out
push
or
mov
idiv
sub
sbb
shr
jne
jp
and
stos
jmp
pop
jnp
mov
dec
ficomp
jmp
stos
push
jns
popf
pushf
lds
mov
fcomp
repz
cmp
cmc
adc
push
repz
mov
push
mov
dec
xchg
xchg
or
cmc
xchg
xchg
leave
mov
ja
adc
xor
retf
mov
mov
or
lea
ss
xchg
xor
xchg
ret
leave
mov
xchg
pop
and
mov
shr
inc
test
xlat
mov
sub
jmp
and
out
es
fisub
push
sub
mov
push
pop
enter
out
into
test
cdq
push
dec
movs
int
xlat
mov
lea
ror
add
push
lock
inc
cmp
sbb
int
ja
dec
push
test
ror
or
in
arpl
mov
adc
jp
push
aad
shr
and
sbb
dec
lods
jno
push
and
scas
clc
push
stos
adc
test
outs
push
push
ss
(bad)
popf
shl
jne
rcr
mov
jecxz
test
inc
inc
or
pop
mov
out
jp
and
pop
in
(bad)
les
outs
fidiv
retf
adc
cmc
(bad)
cmp
shr
lds
or
pop
sahf
jns
push
cdq
inc
xor
in
lock
(bad)
icebp
xor
cdq
xor
adc
es
out
inc
sti
push
das
push
mov
pop
mov
sbb
jb
repz
mov
mov
dec
fnstsw
add
pushf
cmp
jmp
push
adc
xchg
int
(bad)
mov
lea
xchg
push
movs
aam
add
mov
sbb
(bad)
jmp
aas
sub
jge
mov
fiadd
addr16
push
adc
jb
sbb
sahf
sti
add
ja
mov
repz
stos
ret
mov
jmp
pop
mov
sahf
add
cwde
sbb
outs
fsub
sbb
cmp
out
pop
jae
nop
nop
and
pop
cmc
ins
adc
and
outs
sub
js
lods
mov
xchg
add
ret
es
fstp
fcom
loopne
aaa
pop
xchg
mov
(bad)
xor
sti
loope
mov
jge
inc
cmp
xchg
sbb
(bad)
sbb
xchg
dec
sub
fwait
push
idiv
add
cmp
mov
and
mov
mov
movs
push
dec
cli
xchg
pop
mov
cdq
je
jno
push
ss
outs
xchg
sbb
adc
push
add
popa
pop
lea
(bad)
jle
iret
push
mov
mov
dec
dec
mov
jb
xchg
scas
popa
jmp
cmps
(bad)
mov
in
ficom
or
add
popa
ins
icebp
ss
mov
les
mov
push
adc
mov
jae
ins
stos
and
nop
adc
dec
dec
and
imul
das
jmp
mov
sbb
rcl
movs
adc
dec
sbb
je
iret
test
jmp
push
inc
shr
popf
ret
xchg
mov
test
or
jge
es
fsubr
ins
sbb
dec
neg
ja
ins
or
test
mov
xchg
cmc
pop
dec
add
sti
mov
scas
inc
sub
loop
gs
or
mov
fstp
cmp
ins
data16
cli
xchg
pop
xor
iret
shl
adc
or
push
movs
add
jnp
pop
pusha
aas
or
sti
mov
mov
mov
xchg
inc
jbe
in
clc
pop
sub
xor
jo
outs
ja
adc
and
pusha
aam
jp
or
shl
jl
jg
xchg
dec
jno
fild
inc
imul
leave
add
stos
sti
test
cmp
sahf
xchg
movs
sahf
mov
inc
pusha
cmps
adc
les
adc
std
rcr
jo
inc
loop
mov
aam
cli
ins
in
inc
retf
loope
mov
add
inc
sbb
loope
retf
repz
xchg
stos
sub
cdq
into
cmps
stos
popa
loope
push
stos
mov
or
jecxz
lock
xor
and
inc
pop
push
mov
sbb
or
mov
nop
stos
clc
mov
adc
sbb
cmp
ins
(bad)
lods
aam
hlt
mov
mov
cmps
mov
mov
cli
daa
fsqrt
dec
pop
sub
imul
sbb
jnp
hlt
int3
cmp
adc
retf
rcr
inc
xor
sti
pusha
movs
or
adc
nop
daa
es
mov
scas
inc
popf
lods
jb
in
dec
fucomi
xchg
mov
stc
or
mov
aad
ret
xchg
mov
stos
repnz
ss
mov
shl
pushf
cmps
push
xchg
lds
ret
push
cli
mov
jge
mov
sahf
lock
inc
mov
mov
ret
arpl
mov
mov
cmp
outs
and
sbb
adc
mov
and
imul
sub
mov
cmp
loopne
sub
jno
int3
call
push
add
pop
call
xor
sub
xor
xor
and
xchg
push
adc
shl
mov
xchg
mov
fidivr
cs
out
push
mov
sub
lds
mov
jle
fidiv
mov
dec
movs
cld
sub
jbe
shl
pop
xchg
imul
cld
sbb
lods
or
xor
push
out
icebp
dec
in
test
ficom
das
or
pop
xor
lock
ret
fmul
push
inc
push
and
cmp
cmp
mov
cs
fcmovnb
xchg
cmp
loopne
mov
jae
cmps
jle
loopne
fmul
pop
jb
and
cmp
out
(bad)
mov
cmp
xor
pop
scas
into
jne
xor
pop
dec
xchg
pop
retf
aaa
call
and
(bad)
sub
cmp
mov
pop
mov
sbb
data16
xchg
sbb
xchg
jmp
jmp
rcl
cmp
out
jmp
adc
call
mov
push
push
add
push
mov
scas
jns
mov
jmp
fcomp
hlt
mov
push
mov
xchg
loope
sub
mov
repnz
in
add
and
dec
imul
mov
fs
clc
punpcklwd
and
push
retf
or
pushf
and
mov
nop
jnp
sbb
xchg
mov
mov
cmp
ins
sub
mov
jl
stc
push
dec
in
adc
mov
xor
popa
xchg
sbb
xor
pop
and
add
and
(bad)
jp
fwait
inc
xor
sub
jnp
push
mov
mov
add
mov
ret
popf
or
cwde
aaa
sub
pop
pop
stos
inc
mov
sbb
inc
ret
push
sbb
sub
aaa
jle
sti
ret
iret
scas
iret
(bad)
mov
and
push
dec
sub
stc
sub
sub
loopne
mov
cmp
push
dec
pop
outs
xchg
scas
inc
(bad)
das
sbb
pop
pop
pop
and
xrelease
das
and
jo
mov
cmp
popa
or
leave
loop
rcl
xchg
cmp
and
test
(bad)
xchg
xor
push
mov
push
mov
adc
mov
inc
aam
sahf
dec
jnp
and
sbb
icebp
test
pusha
push
stos
fwait
daa
pop
fiadd
mov
out
pusha
bound
in
retf
dec
sbb
shl
pop
outs
lods
sub
and
mov
cmc
xchg
ror
pop
sti
das
pushf
adc
pop
and
sti
mov
ret
xchg
adc
inc
mov
sub
xlat
fwait
mul
pop
jno
leave
xchg
aam
(bad)
iret
call
icebp
sub
xor
bound
mov
push
xlat
pop
push
sti
xor
adc
and
es
lea
cld
xchg
xor
mov
ja
sbb
xor
pop
inc
sub
scas
in
inc
jne
mov
sbb
shr
fwait
bound
lea
clc
cli
cmp
jge
xor
mov
cmp
scas
cmp
test
mov
and
dec
rcl
lods
mov
leave
mov
clc
adc
jae
test
jb
cmps
test
cmps
pop
pusha
cmp
cmp
ds
dec
(bad)
(bad)
in
mov
cmp
or
jge
xchg
inc
xchg
add
inc
cmc
or
jbe
mov
xchg
cmps
adc
(bad)
and
movs
lods
add
inc
sub
outs
and
sub
cmps
cmp
mov
mov
cs
addr16
out
xchg
mov
mov
jmp
loope
clc
fstp
xchg
ins
(bad)
mov
xchg
mov
pop
add
cli
jmp
retf
jo
cwde
arpl
dec
int3
aad
lods
std
push
add
cmp
adc
data16
aaa
popa
outs
shr
dec
test
shl
sbb
inc
xchg
push
imul
aas
loop
loop
and
std
push
jmp
push
adc
daa
mov
imul
sahf
xor
imul
push
data16
push
jmp
jmp
pop
fdivr
xchg
test
adc
retf
shr
dec
cmp
fs
xchg
xchg
add
ret
mov
dec
repz
mov
repnz
vmulps
and
sub
or
nop
add
inc
lea
addr16
imul
fdivr
inc
jmp
fwait
push
test
ret
mov
jae
and
clc
pop
xchg
(bad)
ror
mov
mov
jbe
pop
int3
mov
out
mov
(bad)
mov
xchg
pusha
mov
stc
(bad)
enter
dec
mov
xor
xor
pop
adc
sti
inc
sbb
push
and
in
fcom
loop
popf
add
xchg
aaa
imul
in
dec
mov
or
add
adc
push
arpl
jmp
sub
cmp
inc
push
call
or
aam
xchg
pop
cmp
pop
mov
repz
add
sar
cdq
push
dec
inc
add
pop
fnstcw
jae
ret
fld
aas
add
stos
mul
fwait
or
xchg
das
sbb
popa
stos
shr
xor
aam
and
xchg
rol
pushf
cdq
sub
and
test
in
xlat
add
pop
aam
(bad)
xor
cdq
cmc
pop
das
mov
imul
cmp
jno
mov
fiadd
cmp
xchg
cmp
or
in
cld
arpl
xlat
xchg
out
xor
jecxz
pushf
add
out
inc
test
gs
mov
aad
fs
aas
cmps
fs
or
mov
push
or
jno
mov
test
sub
and
scas
mov
xchg
ss
sub
rcl
bound
xor
pop
mov
call
movs
sub
cld
push
xchg
pop
push
adc
loop
into
repz
jae
ins
jmp
ja
adc
sub
retf
add
shr
shr
sbb
imul
jmp
mov
inc
pop
inc
call
sub
(bad)
dec
xor
(bad)
fcomp
dec
and
loope
addr16
test
push
cwde
xchg
push
jge
aaa
xchg
inc
mov
in
out
mov
fwait
mov
push
pop
sub
inc
push
mov
cmp
scas
in
pop
data16
pop
je
std
mov
inc
mov
add
or
sar
mov
add
xor
pop
cmp
mov
sti
mov
out
ja
pop
jae
(bad)
sub
fs
mov
cdq
aaa
pop
cmp
aam
es
mov
mov
enter
cmps
imul
inc
mov
adc
add
dec
shl
mov
(bad)
adc
mov
dec
in
jg
or
movs
pushf
mov
ret
cmp
cmp
xor
ja
adc
les
add
sti
jae
sahf
daa
(bad)
aam
lods
popf
rol
jns
sbb
mov
inc
inc
jg
addr16
jecxz
cmc
stos
mov
jle
or
dec
scas
push
cdq
or
and
ficom
cld
jns
rol
sbb
jns
xchg
aad
in
aam
and
dec
lods
(bad)
js
cs
mov
dec
and
mov
movs
push
jecxz
push
mov
and
jno
movs
adc
cli
lods
mov
xlat
xchg
popf
sub
adc
pop
shr
xor
leave
sbb
jae
loop
inc
adc
lods
mov
push
std
inc
add
jbe
mov
sbb
les
push
rol
es
fwait
cmp
adc
adc
and
xchg
and
sbb
leave
push
push
fst
shl
out
lods
mov
test
mov
cmp
add
in
div
cli
(bad)
out
sub
cmp
xchg
jge
std
push
fisttp
lahf
ror
sub
(bad)
cmp
xor
mov
dec
mov
fiadd
fadd
icebp
rol
shl
leave
push
push
div
or
inc
ds
inc
hlt
cdq
push
outs
test
shl
jmp
or
mov
test
lds
test
dec
cs
xchg
pop
inc
ret
in
retf
inc
jmp
enter
(bad)
gs
ss
and
push
sbb
icebp
test
cmps
cs
call
shl
xor
jmp
dec
jle
inc
fstp
mov
add
dec
fist
sbb
stos
adc
jmp
dec
retf
push
xor
ds
ins
scas
jnp
pop
(bad)
jnp
mov
mov
hlt
or
pop
div
into
dec
test
mov
inc
xchg
cmp
dec
in
xchg
iret
or
addr16
imul
in
xor
mov
repnz
aas
lea
inc
jnp
adc
mov
mov
xchg
dec
or
pop
scas
hlt
aad
add
push
retf
cmp
cmc
mov
push
inc
cmps
jmp
push
and
dec
outs
(bad)
adc
mov
push
jle
inc
pop
das
dec
cwde
dec
add
jne
and
push
cmp
adc
call
retf
imul
and
jmp
xchg
stos
xor
pop
in
loopne
mov
dec
shl
loopne
xor
sbb
(bad)
cli
jle
jecxz
inc
int
dec
ret
in
or
fdivr
mov
add
pop
sub
and
(bad)
shr
retf
push
scas
xchg
adc
sub
pop
cmps
mov
mov
jp
inc
push
pop
fs
pop
xchg
fmul
movs
add
mov
jo
shl
inc
sbb
jmp
push
test
cmps
add
pop
stc
repnz
sbb
push
imul
push
test
inc
(bad)
pop
ins
imul
pop
adc
data16
cmp
cmp
hlt
repnz
adc
inc
cli
mov
mov
adc
pop
sub
cmp
cmps
mul
rep
pop
sbb
sub
int3
ins
inc
cmp
test
pushf
std
add
or
jb
aas
movs
adc
cld
adc
stc
push
fldenv
stos
(bad)
push
jnp
and
mov
sahf
ins
repz
cdq
shr
out
xor
fst
repz
inc
inc
scas
xchg
mov
int3
aas
adc
mov
daa
fist
pop
popf
jo
scas
sbb
rcl
xor
xor
push
test
int3
nop
sbb
out
jl
cld
retf
push
bound
ret
not
cmps
xchg
mov
hlt
jg
imul
fs
mov
es
mov
stc
daa
lea
push
fwait
jle
inc
xor
xchg
xor
sbb
mov
into
arpl
js
jnp
out
and
adc
arpl
test
jne
xor
jo
mov
sar
inc
or
imul
and
sub
loop
jmp
call
xchg
push
or
mov
push
mov
jo
pop
add
or
mov
int
jns
dec
push
mov
retf
in
sbb
or
mov
sar
std
mov
push
pop
sbb
mov
mov
ds
icebp
sbb
in
adc
aam
push
pop
mov
xchg
xchg
ja
cmp
xchg
xchg
mov
xchg
dec
jne
call
clc
stos
or
rol
lods
sub
cmp
adc
add
into
lea
loope
mov
test
dec
cmp
mov
dec
cwd
(bad)
ja
pop
retf
(bad)
jl
imul
xor
movs
dec
pop
retf
xchg
sbb
mul
push
je
out
xchg
jo
cmp
mov
adc
fild
mov
iret
inc
cmps
mov
jle
out
mov
xor
sbb
test
lock
pop
xchg
push
aaa
imul
cmp
jle
fwait
xchg
adc
scas
fstp
in
sbb
(bad)
adc
sub
out
inc
mov
jmp
xor
and
lods
dec
repz
dec
push
jmp
inc
retf
sub
push
sbb
push
dec
pop
lahf
loopne
mov
pop
test
sbb
(bad)
scas
jb
sbb
mov
sbb
ffree
jo
pop
pop
inc
cmp
mov
pop
mov
fsubr
stc
mov
mov
sub
push
push
mov
xor
hlt
push
push
in
cmc
aad
jne
stc
out
pop
shl
icebp
push
cmp
cmp
jno
scas
dec
(bad)
loop
mov
test
mov
and
scas
xchg
lahf
aaa
inc
fwait
add
fnsave
jns
add
and
jmp
dec
in
ret
test
shr
add
imul
loopne
sar
inc
push
and
sbb
mov
lock
or
xchg
fiadd
and
pop
stos
daa
test
daa
lea
xor
fiadd
fwait
mov
rol
fucomip
stos
stos
dec
ficomp
cs
push
shr
xchg
shl
pusha
jnp
das
mov
xor
mov
int
fcomp
sub
nop
adc
out
jne
add
retf
in
mov
mov
mov
repnz
jns
clc
dec
cld
in
mul
fldenv
push
pop
fldcw
inc
sub
mov
fbstp
hlt
ins
jecxz
jle
pop
(bad)
fwait
dec
jge
repnz
outs
repz
push
movs
shl
loope
ins
and
xchg
cmp
in
mov
mov
ret
xor
inc
jmp
pop
stos
test
xor
sbb
push
xchg
xlat
fstp
cmp
das
xchg
dec
adc
in
sub
mov
ss
call
xor
pusha
mov
int3
push
pop
xor
and
cmp
bound
dec
mov
js
sub
movs
ret
outs
xor
bswap
cmps
pop
xchg
cwde
xor
fs
je
mov
aam
dec
push
mov
sub
jge
push
ficom
push
fdiv
lock
movs
pop
mov
icebp
rcl
pop
nop
xor
loop
xchg
fidivr
adc
pop
enter
push
sbb
jb
add
adc
add
push
and
rol
clc
pusha
fdiv
popa
sbb
mov
sub
sbb
loop
xchg
call
jne
pop
loope
cmps
xor
stos
cwde
pop
fistp
inc
sahf
icebp
push
inc
fdivr
add
lock
(bad)
fldenv
sbb
sub
cwde
cli
fnstcw
test
cmp
sub
cmps
inc
mov
sub
xlat
rcl
sub
fidiv
push
lock
fs
xchg
cld
(bad)
cmp
shl
push
pop
and
fild
xor
pop
cs
(bad)
and
and
and
pop
mov
or
(bad)
call
imul
or
pop
fsubr
(bad)
sub
jne
aas
sub
pop
jae
push
push
stos
in
push
add
mov
out
dec
xchg
test
not
jne
lods
cmp
(bad)
xchg
add
or
repz
or
les
push
sub
xchg
push
inc
int3
inc
mov
cmps
jl
push
sbb
je
lods
or
add
rol
sub
sar
outs
jo
jbe
pushf
aas
xchg
ror
stc
mov
es
cld
push
inc
push
dec
pop
xchg
cmps
enter
loop
aaa
jae
fld
test
scas
sar
sbb
inc
dec
sub
jae
mov
les
dec
mov
pop
inc
lods
bound
and
hlt
mov
or
xor
popa
xor
sar
mov
(bad)
lea
push
mov
add
(bad)
adc
mov
sbb
aam
dec
das
(bad)
out
int3
pop
out
jmp
aas
cld
mov
dec
mov
in
fldenv
xchg
cld
iret
rcl
cld
outs
jns
out
fldcw
imul
dec
and
pushf
xlat
adc
jle
test
mov
mov
lds
fidivr
or
call
mov
test
add
jbe
iret
in
lahf
aam
pusha
cmp
cmp
pushf
(bad)
pop
rcl
sbb
mov
repnz
jne
cmps
cwde
test
xor
lahf
inc
imul
ficomp
add
xor
mov
addr16
nop
fcom
js
jp
sti
add
adc
pop
(bad)
xchg
mov
in
push
dec
pop
xchg
call
adc
rol
in
lds
addr16
pop
lahf
in
int3
pop
test
jnp
pop
scas
rcr
jne
popa
in
sahf
loop
push
inc
mov
cmp
pop
xor
push
push
out
xchg
movs
mov
fdiv
call
das
call
push
add
jne
dec
pusha
xchg
dec
mov
int3
dec
cmps
cmps
sub
push
shr
adc
clc
scas
pop
(bad)
sub
mov
pusha
jae
fst
inc
sbb
mov
scas
imul
cmp
aad
nop
or
jecxz
add
xchg
and
adc
and
out
les
(bad)
in
push
and
sub
sbb
add
jmp
or
bound
jmp
daa
rcl
push
or
cmp
mov
stos
fdiv
retf
(bad)
sbb
xor
pop
sbb
inc
adc
xor
jns
cli
jmp
popf
daa
dec
stc
sub
push
aad
lahf
fadd
adc
xchg
out
push
fistp
xchg
mov
mov
or
mov
loop
pop
fdiv
add
bound
jmp
in
xor
fxch
mov
shl
pop
dec
loope
add
dec
ds
and
scas
sahf
xor
retf
(bad)
jp
repnz
sub
or
test
aad
out
rcr
ds
dec
adc
int3
inc
add
fcomp
push
jo
call
inc
sub
xor
sub
add
mov
lock
and
jmp
sbb
dec
jecxz
jle
pop
xlat
jnp
out
jnp
xor
pop
rcl
scas
leave
and
mov
push
xor
mov
mov
loope
push
outs
lahf
xchg
xor
jns
cmc
int3
cmp
sbb
pinsrw
mov
inc
movs
cmp
push
sub
adc
push
popa
mov
inc
xchg
scas
shl
lds
je
xchg
and
test
cld
sar
test
cmp
out
jg
sahf
jmp
jl
lods
aad
out
mov
scas
mov
addr16
movs
cmc
gs
(bad)
neg
aam
fstp
or
fiadd
jbe
popf
dec
pop
daa
outs
and
push
pushf
jnp
dec
pop
movs
sbb
adc
pop
(bad)
lds
dec
mov
ret
sub
(bad)
pop
inc
push
push
push
and
(bad)
shl
jl
cld
xchg
xchg
mul
pop
sub
mov
ins
pushf
mov
nop
sbb
cmp
pusha
push
sbb
adc
sbb
adc
mov
nop
jnp
xor
enter
cmps
inc
out
xchg
mov
into
neg
inc
xor
pop
inc
(bad)
iret
lea
shl
div
xor
(bad)
test
sbb
push
call
les
std
or
ins
loope
push
mov
fld
cmps
(bad)
mov
sti
ins
mov
fmul
loop
or
xchg
jne
and
sub
lds
aad
mov
(bad)
repz
(bad)
sar
cmovbe
out
das
sbb
mov
pop
(bad)
jg
and
in
out
pop
jo
sbb
inc
(bad)
and
sbb
mov
popa
and
adc
and
inc
lea
out
enter
dec
push
clc
mov
mov
ss
pushf
jg
xor
cmp
xor
bound
arpl
aad
jbe
addr16
xchg
stos
adc
adc
shl
inc
ficom
je
inc
mov
imul
sub
and
sub
xlat
rcr
jp
fucomp
jae
jo
ins
xchg
sbb
mov
out
inc
mov
shr
or
inc
jmp
push
shrd
mov
add
push
retf
jg
mov
scas
(bad)
enter
dec
hlt
in
leave
js
icebp
cmp
cmps
or
pminsw
je
cmps
mov
cli
mov
(bad)
xlat
dec
(bad)
lea
cmp
(bad)
popa
ret
cs
inc
test
jno
std
and
(bad)
jae
retf
xor
and
ja
lods
sbb
fsub
cdq
mov
rcr
sbb
and
mov
push
inc
ins
mov
retf
jg
je
xchg
fnstcw
ds
jmp
add
adc
ret
loope
mov
push
cmc
fsubr
mov
fiadd
adc
les
test
mov
fimul
push
aad
out
into
push
jns
iret
enter
cdq
dec
ror
je
xor
outs
mov
scas
lds
aaa
jnp
mov
fsub
mov
stc
inc
into
ins
fnstcw
or
adc
shl
dec
dec
sar
fld
in
push
xor
(bad)
push
xchg
out
mov
mov
adc
cmps
jecxz
add
stos
bound
cdq
(bad)
je
adc
test
cmps
pop
sar
pop
sbb
les
aam
jb
inc
fwait
push
jle
cli
mov
(bad)
fnstsw
sbb
xor
sub
pushf
mov
xchg
pop
sar
adc
out
cmp
xchg
pop
and
pop
ret
pusha
mov
inc
std
xor
lods
xchg
dec
fldcw
scas
cdq
dec
aas
mov
jle
sbb
std
xor
outs
mov
sbb
push
repz
(bad)
jge
or
ins
xchg
aaa
jg
inc
les
push
add
jp
xchg
jmp
repnz
pminub
push
aaa
push
sub
repz
pop
adc
jle
sbb
jne
pop
and
cmp
adc
out
cmp
ins
push
jle
ret
out
lock
loop
and
fcom
imul
inc
xor
push
daa
xor
je
dec
mov
jnp
push
into
sbb
(bad)
cs
int
jmp
and
stc
mov
test
push
gs
fild
push
push
and
mov
jmp
xchg
push
mov
push
add
int3
mov
xlat
sbb
addr16
xor
rdpmc
jmp
sti
pop
cmp
sub
ds
inc
movs
loopne
pusha
push
xchg
xchg
or
mov
pop
mov
mov
gs
iret
mov
test
xor
daa
aaa
ror
sub
mov
cmp
(bad)
shl
inc
or
fsub
jle
pop
add
jecxz
repz
xchg
lds
cld
dec
add
xchg
pop
in
out
retf
hlt
jl
imul
xor
xchg
aas
jne
or
push
aas
daa
cmp
jle
inc
sbb
test
aas
and
daa
inc
ins
repnz
mov
outs
aas
ficomp
xor
cld
pop
fdiv
sub
cdq
mov
adc
pop
inc
pop
sub
sbb
fsubr
xchg
sub
xchg
cdq
mov
pop
nop
arpl
in
scas
lods
std
mov
std
adc
add
(bad)
sub
inc
and
cwde
hlt
inc
and
mov
inc
mov
pop
test
test
jbe
inc
lahf
(bad)
jns
add
mov
jno
repz
aam
fst
cmp
xchg
mov
mov
dec
pop
scas
xchg
hlt
test
push
jmp
xor
xchg
call
add
add
jb
xlat
outs
test
cmps
inc
mov
mov
cdq
ret
xchg
jle
jge
jb
sub
(bad)
in
sar
mov
cdq
pushf
clc
or
inc
or
scas
mov
outs
fstp
leave
jg
pop
xchg
jge
shl
adc
sbb
test
int3
sti
outs
inc
in
ror
test
cli
xchg
popa
jg
mov
jne
sahf
ins
nop
sub
mov
jbe
cmp
cld
and
jg
pop
scas
addr16
pusha
add
push
sbb
ss
pop
(bad)
or
ss
and
mov
add
mov
inc
mov
adc
ret
cld
adc
mov
dec
push
out
or
mov
repnz
fsub
push
jb
pop
sub
rol
mov
pop
int
adc
mov
mov
pop
lds
sbb
mov
out
dec
pop
sub
outs
pop
gs
fdivr
pop
jl
push
(bad)
dec
mov
(bad)
adc
ins
call
ss
xchg
or
xlat
lds
add
mov
imul
mov
push
fldenv
mov
adc
retf
jl
inc
pop
jecxz
inc
pop
pop
shl
add
scas
clc
pop
fdivp
push
adc
js
hlt
jo
dec
es
das
js
retf
pusha
rcr
mov
jecxz
sbb
and
fwait
adc
pop
or
add
xchg
xchg
stos
sahf
jnp
lock
lea
cld
jp
push
jne
dec
inc
fsub
push
arpl
cmc
cmp
imul
mov
adc
xor
ja
cmp
jmp
cs
adc
mov
pusha
mov
loopne
jmp
adc
dec
xchg
(bad)
cmovns
sbb
fld
and
cmp
adc
ret
mov
sub
ret
push
hlt
add
psubd
mov
bound
jmp
xchg
adc
mov
loope
lea
cmc
enter
sbb
xlat
test
push
fild
mov
xor
add
mov
xor
and
(bad)
js
iret
and
in
cmps
sbb
(bad)
inc
adc
dec
inc
(bad)
jge
mov
mov
mov
aam
fs
xlat
jg
sbb
fsubr
data16
scas
mov
call
inc
mov
fnstenv
sbb
in
jb
leave
stos
mov
psubsw
adc
mov
bound
scas
aas
test
into
hlt
xchg
mov
adc
dec
pop
test
jp
xor
or
push
dec
stos
dec
and
nop
in
inc
in
and
arpl
dec
je
pop
mov
(bad)
sbb
xchg
aas
pop
xlat
retf
les
cwde
mov
fs
xchg
(bad)
xor
cld
cli
lds
cmps
mov
jmp
clc
mov
ror
or
sub
test
addr16
push
or
enter
rcl
pop
fild
push
dec
aas
cdq
lods
dec
ins
add
int
aaa
cs
pop
idiv
pop
fld
stc
push
add
and
push
out
or
xlat
cmp
push
xchg
push
push
adc
mov
xchg
pop
sub
pop
daa
jns
ds
adc
mov
mov
bound
mov
sub
cmps
and
retf
jp
cs
push
mov
sbb
icebp
push
xchg
mov
scas
lea
push
dec
popa
xchg
out
adc
add
xchg
mov
cmp
popa
inc
adc
fs
jne
retf
aam
mov
inc
sbb
jle
xor
cwde
neg
mov
mov
pop
or
call
xor
mov
arpl
xor
ins
(bad)
stc
inc
in
dec
icebp
movs
(bad)
jno
pop
cs
arpl
test
aas
xor
jp
ss
mov
pop
sub
xor
xchg
xchg
jecxz
je
lock
push
scas
aad
sub
xor
mov
sub
pop
pextrw
mov
mov
pop
imul
sbb
add
pusha
xor
mov
ja
sti
push
xchg
inc
cmc
xchg
cmps
adc
mov
mov
(bad)
fs
bound
hlt
push
xlat
call
rcr
adc
mov
mov
popa
cs
lds
int3
mov
xor
push
push
inc
push
lds
shl
imul
div
add
shl
mov
ror
lods
aas
fcomp
pop
cmc
loopne
rcl
lahf
in
enter
and
cmp
inc
mov
sub
pop
ss
sub
outs
scas
daa
push
push
cwde
inc
pop
mov
(bad)
adc
or
and
add
idiv
out
push
jl
loop
fs
or
jecxz
(bad)
out
mov
addr16
mov
js
mov
push
mov
push
inc
mov
retf
or
push
in
cmp
test
adc
into
and
movs
aaa
mov
xchg
push
dec
mov
enter
jno
xchg
sti
and
loop
pop
fcom
mov
retf
punpckhbw
mov
rcr
frstor
push
aad
stos
imul
jg
push
pop
out
(bad)
jmp
or
dec
xor
add
popa
in
ins
sti
in
sbb
adc
add
ja
mov
push
push
ins
cmp
in
movs
test
scas
fdiv
mov
pop
retf
iret
or
dec
cmp
cmc
mov
xchg
or
and
out
cmp
cmp
mov
rcr
inc
lahf
and
dec
es
hlt
sti
es
push
fsub
imul
xchg
test
retf
sub
cdq
xchg
xor
jmp
and
leave
and
sbb
cmp
jae
and
aaa
xchg
mov
push
inc
rcl
dec
das
out
cmp
pusha
or
loopne
dec
call
mov
shl
cwde
addr16
sub
pop
pop
fcmovnu
inc
cwde
sbb
xchg
sub
or
test
rcl
adc
mov
int3
xchg
daa
imul
mov
fmul
cmp
cmp
int3
mov
test
cld
xor
add
mov
mov
fild
daa
jl
mov
in
cmp
int
popf
pop
jge
sar
fld
push
xchg
rcl
cmc
leave
or
cld
loopne
std
mov
cmp
in
cmp
cmp
imul
jne
pop
shr
jmp
mov
sar
stos
cmps
gs
rcl
push
aad
jmp
cmp
jmp
movs
inc
pop
dec
inc
fdiv
ja
sbb
mov
dec
mov
jae
sbb
(bad)
mov
jo
xchg
cmp
bound
aam
pop
js
icebp
sahf
jge
pop
pop
out
mov
mov
ja
js
les
jp
jp
and
jae
das
inc
out
rcr
int3
sub
push
lock
dec
jne
lahf
add
xchg
dec
cmps
(bad)
in
or
imul
or
and
xchg
into
popf
int3
sbb
pop
push
adc
jns
rcr
jne
jmp
ins
daa
lods
jg
mov
cmp
mov
cmps
or
or
push
je
call
fwait
and
sub
call
mov
call
sub
sbb
and
out
stc
(bad)
ffree
or
pop
pop
int3
add
and
cmp
(bad)
jecxz
cmp
and
add
mov
pusha
cmp
or
imul
adc
dec
adc
cmp
and
mov
lea
xor
out
and
pop
lock
rcl
call
jae
call
hlt
push
or
fsubr
cld
xchg
sbb
and
fcomp
enter
xchg
imul
cld
out
scas
mov
(bad)
ss
int3
xor
ret
jae
xchg
out
mov
stos
dec
(bad)
jmp
sahf
jno
test
rcr
repnz
int
xchg
lds
ret
fbstp
retf
or
mov
ins
fnstenv
ror
fadd
test
jle
(bad)
std
fild
inc
sti
ds
pusha
and
cmp
movs
and
mov
out
and
dec
or
iret
dec
inc
loope
sbb
mov
(bad)
pusha
push
pop
out
add
(bad)
in
inc
cs
xchg
xchg
push
cmc
es
imul
cli
adc
adc
jle
retf
cmp
iret
add
test
adc
push
xor
call
cmp
dec
fstp
or
loop
cmp
xor
and
xor
sub
sub
push
add
xor
and
mov
push
cmp
jmp
add
test
and
mov
out
xor
imul
push
popf
push
ss
lods
pop
or
jbe
pop
inc
jmp
movs
push
lods
cli
fild
outs
(bad)
das
jge
lods
mov
mov
movs
add
movs
dec
js
mov
pop
pop
(bad)
out
leave
scas
dec
lock
sub
cmp
aam
sub
mov
test
mov
adc
xor
stos
out
sbb
cmp
sbb
test
or
adc
sub
mov
push
xor
pop
stc
pop
mov
cli
ja
cmp
mov
push
dec
test
(bad)
outs
add
add
adc
cli
lods
aad
xor
jp
adc
in
test
pop
std
pop
sbb
mov
jnp
adc
xor
data16
fsub
fmul
ins
int3
scas
test
push
dec
sub
mov
lods
imul
nop
push
sub
mov
jecxz
or
ficom
or
sbb
in
add
out
lds
stos
xchg
add
xor
jmp
mov
xchg
jno
sub
jl
inc
xor
es
cmovge
ds
inc
lods
icebp
aam
ss
mov
inc
out
mov
cmc
push
popa
aam
push
gs
xchg
leave
sub
pop
sub
and
jmp
pop
lods
outs
outs
jecxz
das
xor
mov
dec
mov
in
push
out
(bad)
dec
pop
adc
dec
das
inc
imul
inc
les
mov
xor
hlt
jp
repnz
push
fnstsw
jbe
mov
sub
jmp
(bad)
idiv
mov
imul
dec
jmp
aaa
ficomp
pop
outs
test
sub
jo
mul
repz
and
test
adc
adc
xor
test
aaa
xor
test
call
js
int
leave
daa
pop
cmp
jne
ins
or
pop
adc
push
lock
movs
rol
test
(bad)
out
pop
mov
hlt
mov
pop
sub
movs
scas
enter
rcr
mov
xchg
jo
lods
or
shl
pop
ins
mov
je
add
js
lea
mov
pusha
mov
jnp
jno
xchg
mov
out
mov
lds
repz
adc
jl
sahf
add
ret
cmp
call
mov
(bad)
aad
mov
sub
scas
xlat
mov
add
sbb
bound
jbe
pop
inc
xchg
ficom
mov
arpl
ja
jno
ja
lods
mov
mov
nop
or
pop
sub
fdivr
xor
jbe
ins
arpl
jns
mov
repz
icebp
icebp
lock
pop
mov
jne
(bad)
jl
rol
arpl
xor
mov
xor
cwde
ret
(bad)
sti
(bad)
in
adc
inc
retf
lahf
imul
int3
imul
adc
sub
push
fistp
jmp
movs
cmp
inc
imul
aad
mov
jmp
sbb
pop
xor
icebp
imul
ret
mov
sar
mov
pop
inc
pop
sub
jno
adc
cmp
jmp
or
dec
xchg
push
aaa
ins
mov
mov
ins
cmp
or
add
inc
jecxz
mov
or
sbb
dec
in
sbb
push
sub
push
pop
stos
and
push
cld
mov
push
jnp
test
xor
ficom
cld
rcl
cmp
movs
test
dec
(bad)
int3
mov
xor
mov
rol
xor
movs
mov
lds
sub
add
mov
out
inc
xor
push
cmp
jecxz
mov
sub
repnz
and
adc
and
cdq
daa
call
dec
out
outs
inc
int3
fst
xchg
dec
fild
cld
xor
add
xor
into
movs
push
in
pop
dec
or
je
pop
sub
outs
sahf
ret
hlt
nop
jecxz
test
das
sub
jge
jge
mov
mov
jecxz
xor
mov
arpl
pop
call
cmc
stc
jmp
nop
or
ds
and
out
fldcw
test
xor
shl
push
(bad)
mov
sub
sub
daa
shl
cmp
cwde
pop
cmp
jmp
jmp
pop
xor
pushf
push
xchg
cld
les
loop
sub
and
pop
int
add
cmp
ret
inc
daa
xchg
inc
push
mov
cmp
pop
sub
(bad)
clc
mov
inc
repz
dec
ror
outs
stos
aad
jae
ret
ror
pop
pop
shl
and
cmps
out
mov
ins
inc
push
out
je
out
jbe
xchg
in
imul
retf
cld
pop
sub
aad
sbb
sub
outs
je
test
stos
leave
and
pop
call
sahf
repz
jmp
repnz
pop
loopne
jp
mov
pop
cmp
in
sub
call
das
or
sub
cmp
fmul
outs
gs
dec
es
lods
cmps
push
push
stc
pusha
xchg
inc
push
sbb
fiadd
mov
icebp
js
out
test
clc
xor
loop
cwde
retw
xchg
ja
or
xchg
nop
adc
ins
and
shl
push
ja
or
adc
mov
and
xor
stos
jno
adc
sbb
bound
adc
les
outs
xor
mov
ins
enter
push
pop
not
outs
jle
pusha
(bad)
sbb
dec
pop
sahf
pop
xor
pop
or
add
sbb
jle
inc
cmp
fisttp
sbb
outs
mov
mov
jbe
mov
jmp
jns
push
mov
or
mov
cmp
clc
mov
push
dec
jge
cmp
xor
cmp
test
mov
push
adc
and
xchg
cmp
mov
repz
pop
sbb
mov
xchg
mov
loop
xor
ja
mov
ds
mov
pop
ss
fs
sub
mov
icebp
(bad)
or
jne
xor
sub
cmp
out
punpcklbw
aaa
std
mov
outs
pop
add
ds
std
and
repnz
ds
pop
xchg
add
inc
xchg
jbe
jno
popa
sub
mov
outs
push
or
dec
mov
popa
sbb
sahf
pushf
sbb
ds
push
dec
cmp
ror
arpl
push
dec
xchg
add
pusha
in
push
jge
mov
popf
pop
fidiv
shr
adc
ins
pop
jbe
aad
adc
sub
or
movs
(bad)
jecxz
cmp
loope
and
clc
inc
lea
jnp
push
outs
inc
mov
dec
push
pop
adc
aas
dec
jbe
nop
or
mov
mov
jo
adc
mov
cdq
mov
mov
fst
es
lods
cdq
mul
scas
aas
lds
cmps
mov
jae
jbe
jge
shl
xchg
pop
cmc
mov
jecxz
stos
shl
jle
xor
mov
(bad)
repz
add
nop
aas
lahf
lds
enter
mov
in
aaa
dec
loope
data16
add
jmp
ret
mov
inc
push
in
enter
inc
add
xor
cmovb
int3
and
or
sub
pop
jno
int
mul
dec
mov
sub
sar
mov
popa
mov
fsubr
jp
mov
push
pop
mov
mov
dec
outs
(bad)
retf
jmp
in
and
shr
retf
xchg
cmp
jp
loope
es
mov
mov
out
xchg
xor
inc
sbb
xchg
inc
or
lds
xor
sub
loope
ret
mov
mov
push
jnp
out
inc
cwde
iret
out
mov
int
xlat
xchg
outs
das
pop
adc
scas
xchg
and
or
out
popf
movs
(bad)
pop
jmp
pop
fiadd
ja
and
push
cmc
je
fstp
inc
or
mov
das
xchg
add
ficomp
ins
pop
cmp
loop
mov
mov
std
jmp
(bad)
call
inc
add
inc
lods
jns
mov
push
(bad)
lahf
adc
imul
cmps
cmps
iret
jns
push
add
and
xor
mov
pop
jae
mov
xor
or
aas
mov
push
fcom
jb
in
je
cmp
pop
mov
test
(bad)
data16
inc
pop
mov
in
das
jb
dec
sar
mov
jmp
inc
ss
sbb
mov
pop
popa
push
(bad)
cmp
std
aad
xor
xchg
mov
fwait
add
aas
pop
push
mov
jno
cwde
dec
or
add
popa
cmp
adc
in
pop
inc
cmp
jl
pop
cmp
push
or
(bad)
add
out
mov
ror
iret
das
jne
mov
xor
shl
popf
jle
ins
rcl
(bad)
push
cwde
(bad)
jns
call
or
mov
mov
enter
(bad)
shr
jns
mov
push
in
rcr
pop
push
xor
loopne
adc
pop
adc
fstp
lods
push
mov
cwde
lods
jb
pop
ror
push
mov
enter
jbe
mov
imul
and
mov
and
retf
rcr
or
jl
aad
(bad)
movs
mov
push
sti
outs
rol
hlt
(bad)
fbld
push
push
push
std
or
xchg
test
stc
xchg
adc
jle
leave
xor
or
jg
push
xchg
fidivr
mov
sahf
out
jl
sub
mov
sub
fisttp
popa
cmp
push
loopne
popf
pop
shl
cmp
adc
jmp
lods
fdiv
pop
ret
ins
add
mov
call
mov
jne
in
loop
mov
adc
ret
ins
adc
mov
pop
add
mov
sahf
out
push
cmp
aad
lock
mov
mov
jbe
ins
inc
sar
loope
cmp
inc
xchg
push
pop
outs
aad
cmp
fistp
xlat
pop
dec
pop
adc
std
stos
call
mov
test
xchg
push
sub
dec
arpl
dec
mov
xor
or
jge
jae
dec
sub
inc
xor
xchg
add
cli
and
repnz
xor
fistp
out
imul
aaa
scas
mov
xchg
loope
mov
push
cmp
dec
mov
popf
(bad)
call
bound
xchg
(bad)
jns
adc
not
dec
mov
lods
and
pop
test
inc
mov
(bad)
pshufw
jl
xor
mov
pushf
sar
ror
pop
push
mov
push
mov
dec
inc
loopne
repz
daa
sbb
fs
dec
or
fcom
(bad)
xchg
mov
popf
xor
pop
lds
sbb
(bad)
sub
arpl
pop
or
nop
loop
fild
fiadd
das
cmp
sub
aas
aaa
or
test
rcr
mov
cmc
int3
and
ficomp
pusha
xchg
sahf
sbb
cs
and
push
jecxz
ja
cmp
push
popf
mov
gs
mov
and
inc
bound
inc
imul
movs
sub
sub
dec
push
jge
gs
cwde
mov
xchg
std
jecxz
inc
mov
ret
rep
inc
sub
lea
xchg
mov
adc
mov
or
rol
dec
pop
mov
daa
lock
xor
scas
or
adc
shrd
xchg
push
fadd
mov
into
dec
ret
cmp
in
mov
xchg
dec
(bad)
in
(bad)
js
push
sahf
pop
mov
ins
dec
cmp
test
push
inc
stos
sbb
stos
stos
dec
dec
mov
leave
daa
push
sub
adc
adc
(bad)
idiv
js
test
inc
inc
mov
imul
mov
xor
sti
out
or
mov
sub
imul
sar
iret
mov
retf
(bad)
dec
cmps
fnstenv
rol
push
stos
push
movs
add
and
shl
push
pop
addr16
ffree
or
add
stos
call
pop
sti
bound
or
dec
adc
or
jmp
jp
mov
das
aam
cdq
pop
std
or
push
enter
jnp
pop
mov
pop
jnp
add
aad
fild
imul
cmp
lds
jno
out
cmp
outs
sub
push
xlat
repnz
and
test
or
arpl
(bad)
adc
and
mov
sbb
and
jae
mov
retf
and
iret
loope
lahf
imul
and
xor
(bad)
retf
mov
mov
jge
sbb
push
movs
cmp
adc
cmp
and
into
mov
dec
add
scas
test
inc
inc
(bad)
imul
aad
mov
fs
repnz
cmp
xor
mov
shr
mov
sahf
jge
loopne
mov
push
(bad)
adc
outs
leave
push
scas
xor
addr16
icebp
aaa
dec
adc
sub
into
aam
es
cmps
ror
cmp
push
sub
and
stc
cwde
mov
ins
xor
or
and
cli
sbb
lds
(bad)
stos
xor
fwait
xlat
xor
test
sbb
push
and
pop
and
jp
jbe
inc
mov
out
xchg
ror
mov
in
shl
cmc
push
pushf
fxch
int
fstp
clc
mov
arpl
data16
and
and
adc
inc
(bad)
pop
inc
cmp
pop
mov
seta
sub
cmc
cmps
add
jb
hlt
jns
ret
mov
aad
leave
imul
pop
rcl
mov
and
ficom
mov
push
and
call
xlat
lock
lock
push
fwait
dec
xor
test
push
xchg
setne
(bad)
addr16
pop
sbb
scas
dec
add
dec
ja
cli
loop
xchg
mov
pop
inc
sbb
repnz
mov
and
or
stc
push
mov
add
inc
jbe
mov
fisttp
call
jge
or
gs
out
das
jae
sub
test
lods
lods
push
aaa
das
ja
imul
retf
adc
ret
push
mov
test
xchg
das
mov
addr16
jl
into
loopne
push
call
inc
mov
or
jb
in
clc
add
sub
dec
lds
inc
repnz
cdq
(bad)
out
lods
int3
bound
mov
jg
call
std
repz
in
in
call
push
sub
test
push
jle
fnstenv
popa
cmp
stos
jmp
iret
imul
jo
into
fldenv
push
xchg
pop
stc
sbb
inc
sub
xchg
not
nop
adc
mov
or
test
into
repnz
mov
adc
outs
pop
mov
inc
mov
clc
fwait
push
mov
ins
or
xor
addr16
(bad)
xor
pusha
fimul
sub
out
or
loop
mov
or
aad
sub
hlt
mov
jmp
jge
scas
repnz
retf
icebp
cmps
sub
std
stos
pop
adc
popa
jmp
test
movs
in
cmps
push
pop
loop
or
ja
(bad)
hlt
add
pop
push
ins
jo
fld
and
mov
js
es
cmp
movs
cmp
push
sahf
fdivrp
jne
aam
div
inc
mov
call
and
and
inc
mov
sbb
rol
loope
adc
mov
stc
cmp
jmp
clc
adc
aas
cli
in
mov
es
cdq
out
xchg
pop
add
push
dec
inc
mov
mov
popa
xor
ret
arpl
pop
les
les
nop
fisttp
or
xor
in
cmp
dec
shl
push
dec
sahf
mov
inc
xchg
mov
fadd
and
in
xchg
push
imul
fisttp
pop
ss
inc
out
cmp
mov
imul
stos
dec
fs
ret
sbb
xor
ja
inc
push
xchg
daa
jle
add
jge
rep
retf
fild
dec
js
and
inc
sahf
push
(bad)
out
pop
mov
test
lock
sahf
test
fxch
dec
xchg
nop
mov
(bad)
jb
sbb
es
xchg
pusha
in
imul
xchg
sub
cmps
retf
out
sub
xor
aad
inc
dec
xchg
aaa
aam
sbb
cmc
sbb
int3
dec
shl
xor
and
sub
add
fidiv
adc
dec
in
mov
inc
lock
or
aam
push
sahf
hlt
jmp
jns
mov
out
jmp
out
(bad)
cld
call
cmps
imul
jg
xchg
xor
pop
mov
ins
mov
cmps
in
or
or
pop
(bad)
sar
inc
sbb
mov
sbb
and
adc
jbe
movs
pusha
dec
mov
push
push
adc
inc
xor
push
xchg
mov
xchg
retf
imul
inc
clc
and
mov
xor
xchg
sbb
data16
mov
in
push
mov
out
test
push
adc
mov
cmp
outs
loopne
js
or
sub
push
sub
xor
cwde
scas
adc
pop
jnp
or
pop
jge
jmp
call
pop
cld
pop
ret
fldz
dec
dec
bound
cmps
xchg
cli
daa
cdq
xchg
push
mov
test
mov
cmp
aam
fwait
sbb
stos
pop
cwde
lods
ds
lds
sbb
cwde
adc
inc
movs
jno
imul
dec
xor
sbb
pusha
mov
js
pop
pop
and
hlt
nop
cwde
mov
scas
jmp
sub
out
inc
mul
cmp
mov
jmp
adc
push
retf
xchg
mov
es
push
jns
cmp
mov
sbb
cmps
lods
dec
sub
jl
imul
xchg
je
add
push
retf
data16
cmp
sbb
std
xchg
outs
imul
lea
aad
sub
scas
jp
sub
shl
ds
ins
(bad)
test
mov
and
and
xor
add
cmp
push
or
fstp
je
pop
xor
stc
(bad)
into
stos
cmps
lods
mov
jae
pop
lods
lahf
push
das
into
aaa
inc
je
es
fnstsw
and
add
test
in
std
fcom
inc
add
and
cmp
adc
add
movs
push
sub
xchg
das
pop
retf
popa
fmul
push
scas
push
mov
adc
out
bsr
xor
out
jle
push
scas
or
(bad)
(bad)
in
cmp
call
mov
ret
ss
sar
xchg
iret
adc
pusha
dec
or
inc
scas
inc
mov
jl
ret
call
outs
test
dec
fs
or
cmps
and
popf
cmps
(bad)
ja
push
add
push
test
fmul
call
and
rol
sub
xor
push
aad
sbb
arpl
mov
out
test
(bad)
push
jge
xchg
sub
lods
dec
fisttp
adc
xchg
inc
mov
movs
xor
cmc
pushf
sub
loopne
adc
sbb
push
enter
xchg
cmp
jo
xor
sub
hlt
shl
loop
test
mov
dec
or
inc
and
xchg
fist
mov
popa
jae
xchg
push
or
sbb
sbb
(bad)
(bad)
mov
mov
scas
xlat
(bad)
cld
cmp
sub
pushf
push
dec
fincstp
adc
in
mov
(bad)
sub
fld
cmp
or
adc
inc
(bad)
(bad)
xchg
rcl
sbb
jne
dec
pop
xchg
inc
lds
mov
dec
(bad)
ficom
mov
sbb
retf
scas
in
lods
pop
cmp
js
jg
shl
rol
pop
aad
add
mov
stos
fiadd
jo
jb
movs
jmp
fld
cdq
and
add
dec
pop
hlt
lds
out
push
jns
dec
adc
bound
fcmovne
aad
not
pop
or
sbb
push
fs
test
aaa
adc
retf
push
push
pusha
push
mov
std
mov
xor
and
mov
inc
(bad)
or
mov
je
cwde
sbb
movq
dec
xchg
dec
imul
add
pop
jne
loopne
dec
loop
push
mov
push
xchg
adc
or
fnstsw
xor
push
out
aas
cli
shl
loop
pop
inc
das
inc
bound
or
pop
out
inc
rcl
mov
sbb
pushf
out
ins
popf
repnz
dec
pop
jo
mov
imul
test
popf
jo
pop
les
jb
add
retf
mov
and
aam
in
inc
xchg
cs
push
loop
push
jecxz
aaa
xor
push
dec
cmp
mov
push
jl
jne
mov
rcr
fdivr
(bad)
hlt
lods
loop
pusha
(bad)
push
xchg
cmp
pop
adc
out
rol
outs
sub
addr16
std
adc
dec
fimul
call
out
test
cmc
test
or
mov
mov
pop
add
sbb
loope
jns
imul
mov
shl
mov
pop
adc
xchg
adc
int3
mov
loope
jnp
cmp
gs
add
retf
pop
push
nop
shl
mov
push
data16
xor
pop
mov
jno
repz
inc
xchg
xchg
xchg
mov
cmp
sbb
pop
loopne
jo
pushf
out
jmp
jno
jae
pop
std
fs
cs
jne
push
mov
sbb
popf
dec
test
fnsave
jge
jmp
loopne
std
rcr
adc
ror
nop
lahf
outs
mov
std
mov
cmpps
imul
cmp
xor
push
cwde
or
mov
movs
mov
lea
xor
mov
inc
iret
ret
int
push
xchg
or
retf
mov
push
aad
xor
dec
hlt
stc
xor
jo
push
mov
js
ins
xor
cmp
mov
dec
rcr
imul
or
cmps
or
lods
xchg
aam
mov
adc
mov
fmul
xor
jmp
mov
xlat
cmp
fwait
mov
adc
out
jecxz
icebp
mov
popa
xor
sbb
mov
pushf
imul
inc
dec
ins
sbb
inc
jmp
pop
and
in
int
jb
fnstenv
push
xor
jmp
js
loop
inc
mov
push
sbb
hlt
xor
jmp
cmp
pop
not
push
(bad)
mov
and
mov
jae
pusha
xchg
mov
int
jne
dec
cmps
ins
sbb
cmp
test
rol
xor
cwde
sbb
pusha
aas
push
rcl
mov
push
mov
mov
or
jg
dec
mov
adc
jmp
imul
push
or
mov
retf
sbb
push
ficomp
(bad)
xlat
cwde
(bad)
push
std
sbb
nop
in
inc
push
out
mov
jl
fcmovb
xor
stos
ja
repnz
xchg
pop
cmc
xchg
shr
(bad)
and
in
push
dec
pop
shr
sub
js
add
push
lock
xor
jecxz
cmp
in
pop
pop
mov
mov
int
or
push
xchg
scas
or
mov
call
mov
push
inc
lock
mov
(bad)
aad
push
outs
jmp
fild
out
iret
mov
jmp
push
ins
sub
js
arpl
fidiv
cmp
(bad)
push
faddp
push
adc
jo
aas
mov
and
inc
cdq
dec
std
push
mov
retf
cli
jnp
push
retf
xor
pop
inc
push
or
mov
fisttp
sbb
add
dec
sub
stos
gs
inc
adc
inc
mov
push
test
ins
repnz
fsubr
icebp
ins
mov
les
mov
dec
daa
sbb
je
dec
ret
or
ins
jae
cmps
mov
ror
fwait
xor
aas
leave
test
jge
imul
inc
inc
xchg
mov
outs
ret
mov
mov
mov
loopne
lahf
scas
ins
add
sbb
sti
fidivr
cmp
jne
sbb
pop
gs
pop
(bad)
xlat
idiv
mov
mov
xchg
lahf
shl
pop
sbb
or
repz
push
cmp
popf
mov
repnz
add
sti
or
or
cmp
mov
ds
call
addr16
cmp
aaa
call
cmps
push
push
jmp
arpl
jo
cs
jmp
fbld
(bad)
sti
stc
mov
loopne
push
and
jb
lahf
jae
sbb
pop
jb
push
add
adc
push
mov
mov
add
pop
adc
mov
push
aas
adc
push
clc
dec
jmp
mov
enter
sahf
mov
jecxz
es
pop
pushf
jl
fidivr
jp
lds
enter
movs
into
push
loop
cdq
not
and
outs
lods
out
jno
inc
outs
pop
mov
xlat
into
cmp
mov
(bad)
xor
fcmovnu
sti
lea
(bad)
in
ins
into
xlat
aad
icebp
ret
mov
stc
das
jecxz
mov
xchg
in
pushf
mov
dec
xchg
dec
and
xchg
mov
sbb
out
cmp
repz
push
dec
xchg
addr16
int
xor
jmp
movs
pop
ss
xchg
movs
xchg
lahf
push
std
lds
call
jno
cmc
retf
and
jp
popf
mov
stos
mov
outs
jle
sti
lock
xlat
push
loopne
sub
add
int3
sbb
sbb
and
cli
mov
hlt
xchg
cmp
shl
push
shr
sbb
sub
pop
mov
test
or
stos
jbe
cli
jmp
push
ss
cmps
pushf
mov
mov
fs
jmp
push
out
aas
mov
ja
mov
(bad)
test
je
sub
mov
inc
or
jne
shl
push
mov
jne
mov
sbb
loop
sti
retf
sti
push
adc
mov
repnz
arpl
movlps
inc
fsubr
fidiv
sbb
xchg
ror
call
rcl
(bad)
push
jmp
xchg
ror
test
or
mov
call
fidivr
xor
fiadd
adc
ss
jl
ret
mov
iret
into
dec
pop
add
xor
iret
pop
clc
movs
shr
sbb
push
pop
loop
xor
ror
rcl
push
mov
mov
icebp
jmp
ds
cmps
std
inc
shr
stos
sbb
dec
push
out
sub
rcl
imul
repnz
mov
cmp
sub
fmul
imul
popf
mov
jns
pusha
xchg
dec
add
fwait
addr16
push
or
into
mov
setle
dec
cmp
mov
push
mov
push
lods
inc
ss
inc
rcr
inc
fnstsw
mov
daa
or
dec
mov
imul
in
add
lds
test
repnz
mov
rcl
adc
scas
xchg
(bad)
sti
shl
xor
(bad)
ins
xchg
mov
sub
cmp
popaw
adc
push
in
call
mov
mov
add
fwait
sub
repnz
xchg
(bad)
pop
mov
push
xlat
mov
test
inc
mov
enter
sbb
test
mov
add
inc
mov
dec
push
lds
push
jnp
sub
cld
test
ds
push
mov
lds
int3
cmp
retf
popa
cmp
dec
into
mov
cmp
(bad)
sub
stos
or
scas
mov
lock
xchg
cwde
dec
mov
hlt
xchg
jmp
aas
leave
jne
scas
pushf
js
in
mov
xor
nop
cmp
adc
mov
in
adc
sbb
mov
and
xchg
pop
cmc
push
imul
jae
aad
(bad)
push
(bad)
ficomp
retf
gs
inc
jmp
mov
(bad)
ror
jb
lahf
and
add
push
xchg
into
and
cdq
ins
loopne
xchg
mov
(bad)
pop
xlat
lds
mov
(bad)
aaa
jne
mov
pop
inc
mov
mov
sub
or
or
mov
stos
and
sbb
lds
arpl
rcl
inc
sbb
cmc
cmps
or
sti
aad
dec
push
xchg
(bad)
cmp
mov
sub
pop
pop
ror
pop
mov
push
int
call
mov
cli
push
mov
mov
add
dec
stc
dec
dec
call
cmp
dec
je
icebp
mov
ds
aaa
jg
ret
mov
mov
xor
inc
fbld
jl
pushf
stos
bound
dec
fld
xor
adc
jo
frstorw
retf
shl
pop
div
aam
jbe
std
mov
jae
ret
push
aas
cmp
jg
fstp
mov
cmc
(bad)
or
add
shl
adc
xor
(bad)
mov
mov
add
outs
icebp
pop
push
cwde
lods
cmp
sub
gs
pop
mov
dec
dec
sbb
lahf
stos
fcomp
cmps
jecxz
add
jmp
fwait
popa
aas
icebp
sar
(bad)
mov
mov
xor
mov
add
lds
iret
fcomp
and
rol
mov
repnz
mov
fucomip
sub
add
lods
push
and
inc
test
loop
xor
js
cmps
cs
leave
sbb
push
lahf
inc
or
jb
mov
aaa
aaa
push
mov
icebp
mov
inc
aam
pop
movs
mov
fucom
jecxz
(bad)
pop
dec
mov
and
stos
xchg
ret
and
xor
in
dec
add
inc
cmp
mov
scas
pop
ret
push
inc
mov
sub
movs
mov
arpl
int
xor
shr
jle
sbb
movs
stc
cmp
loope
fsubr
cmps
dec
push
sbb
test
push
pop
mov
push
sub
lods
sbb
shl
out
hlt
mov
cwde
push
sbb
xor
hlt
mov
add
xor
(bad)
jmp
leave
cmp
cmp
mov
xchg
aaa
int3
or
retf
mov
or
movs
call
mov
in
jnp
sub
leave
enter
jge
mov
(bad)
pop
push
mov
dec
arpl
jecxz
icebp
repz
pushw
data16
or
ins
aam
sbb
dec
push
push
fnstenv
mov
shr
adc
xor
rcl
jge
cmp
pop
or
xor
add
lds
movs
push
std
(bad)
aaa
pop
out
sti
sahf
xor
cdq
add
inc
mov
mov
pop
push
mov
add
pop
sub
aaa
repz
arpl
cmp
inc
jb
or
xor
adc
stos
or
jns
test
data16
rcl
(bad)
ins
and
sbb
call
dec
xor
movs
mov
sbb
test
ins
xor
cmp
mov
inc
stc
jge
dec
in
fistp
cmp
jae
call
adc
jnp
test
push
clc
test
jl
sbb
push
test
mov
pop
or
xchg
inc
jp
mov
sbb
cs
mov
add
add
add
jb
cmp
dec
icebp
cmp
push
lock
in
mov
pop
sbb
mov
fwait
mov
jl
push
xchg
and
aam
xor
mov
inc
pop
lahf
call
xchg
xchg
lds
jmp
jns
or
adc
sbb
mov
dec
inc
sbb
in
scas
call
xchg
test
mov
xor
(bad)
std
std
jo
sti
mov
push
repz
retf
sbb
mov
sub
out
mov
mov
aam
ins
push
lds
dec
mov
outs
js
xchg
ds
pop
fld
xchg
dec
movs
mov
xor
lock
pop
or
lea
leave
(bad)
stos
adc
and
pcmpgtd
xor
or
leave
lods
mov
outs
push
xor
repnz
imul
cmp
pop
cmp
xor
pop
dec
or
mov
into
pop
inc
pop
fdivr
neg
mov
and
call
int
dec
out
(bad)
into
dec
(bad)
and
jl
or
xchg
mov
(bad)
push
data16
sahf
xor
lds
fist
imul
or
sub
enter
push
shr
add
pop
aad
adc
mov
pop
jp
lds
pop
xchg
out
pop
int3
hlt
aas
dec
pop
jo
pusha
mov
push
and
cmc
push
pop
pop
sub
mov
mov
inc
mov
out
cli
in
movs
aas
shl
(bad)
mov
(bad)
mov
sahf
mov
xchg
data16
fcom
je
mov
lea
clc
ss
jo
pop
jnp
and
(bad)
add
ja
mov
mul
inc
pop
mov
mov
mov
jp
sub
xlat
mov
jns
push
jne
out
or
inc
xchg
push
fwait
mov
jge
into
jmp
test
loope
pushf
movs
cs
and
jo
add
or
and
and
test
std
add
jns
mov
push
aas
mov
xchg
lods
call
repnz
adc
movs
imul
stc
xor
loop
xlat
repnz
cmps
jno
xchg
sbb
inc
stos
es
fistp
lods
pop
or
les
sub
in
dec
gs
ja
cli
add
bound
test
jmp
leave
pop
sbb
add
add
or
enter
adc
add
add
jl
inc
ds
jnp
dec
xor
cmp
push
cmp
ret
jae
and
aam
push
js
mov
dec
jne
das
and
jbe
inc
movs
das
dec
push
into
push
pop
iret
cmp
jp
sub
adc
pop
call
jnp
call
pusha
movs
retf
arpl
push
mov
pop
cmp
xor
outs
mov
(bad)
push
sti
xor
stc
xchg
arpl
sbb
add
dec
sbb
sar
push
jne
out
cvtps2pd
scas
inc
cmp
cmps
fnstenv
cmp
scas
ja
inc
dec
mov
jae
std
push
daa
xchg
dec
push
cmps
sbb
clc
imul
or
mov
push
into
pop
loopne
and
sub
lods
mov
jb
pop
mov
bound
outs
jnp
imul
mov
cmp
and
fadd
or
cmps
movs
iret
clc
mov
sbb
dec
push
stos
add
nop
fmul
mov
dec
push
inc
xor
dec
add
call
sub
or
push
sub
frstor
les
jae
add
(bad)
mov
inc
jle
mov
inc
shr
push
jg
std
pop
adc
shr
xchg
rsm
jo
mov
add
in
outs
push
and
xchg
xchg
push
rcr
xchg
pop
sti
and
cmp
dec
mov
inc
or
int
pop
ins
add
push
out
xchg
pop
shr
loopne
push
add
mov
and
push
test
shl
test
cld
pop
movs
fstp
popa
pop
xchg
arpl
fadd
mov
arpl
or
add
dec
nop
scas
fild
push
or
or
cld
inc
pop
hlt
add
pop
leave
je
sbb
ss
movs
enter
jmp
imul
mov
(bad)
add
rcl
and
out
xchg
lds
in
cli
xor
and
and
scas
pop
adc
adc
sbb
stos
mov
mov
xlat
fsubr
inc
mov
cmp
les
push
(bad)
sbb
mov
(bad)
mov
pusha
aam
mov
mov
cmp
mov
lds
mov
cdq
test
pop
fnsave
(bad)
push
dec
inc
cs
dec
lds
sbb
xlat
pop
rcl
scas
lods
arpl
loopne
dec
das
push
aad
ja
mov
jb
sysexit
sahf
popa
icebp
xor
dec
xor
mov
push
lock
je
jne
dec
in
out
dec
inc
inc
aaa
mov
inc
sar
(bad)
lods
mov
mov
push
pop
add
std
jne
outs
mov
xchg
push
js
jmp
pop
jp
neg
fidiv
xchg
push
jnp
std
sub
fcom
iret
jl
popa
and
loope
int
leave
pop
xchg
or
loop
pushf
and
imul
pop
(bad)
pop
jae
repz
adc
pushf
mov
jp
xchg
mov
lock
mov
adc
rcl
imul
neg
pop
mov
jb
sub
lods
mov
pop
xchg
pop
hlt
ds
fisubr
mov
lods
jl
imul
loope
xlat
test
gs
sahf
lods
cmps
repz
jle
mov
lds
movs
xor
pop
xchg
add
stos
stos
das
mov
outs
cmc
scas
mov
xor
mov
ins
sar
fwait
mov
in
push
jb
mov
push
mov
or
dec
outs
push
sar
adc
xchg
sbb
xor
movzx
mov
sbb
dec
or
(bad)
dec
retf
or
mov
push
sbb
push
mov
cmp
adc
shl
ja
loopne
test
out
(bad)
retf
cli
pop
int3
aad
inc
(bad)
mov
dec
mov
or
imul
push
cdq
mov
(bad)
sbb
in
xor
push
into
inc
sub
sbb
jns
pushf
sub
pop
mov
dec
sbb
sbb
inc
or
or
add
push
sbb
fdivr
cli
jl
push
cdq
mov
and
adc
movs
or
xchg
mov
mov
mov
cmps
push
jae
(bad)
sub
sub
xchg
add
inc
sbb
xor
rcr
lahf
stc
push
(bad)
cli
xchg
out
cdq
pop
call
mov
jne
adc
test
aad
jl
inc
jmp
mov
mov
inc
daa
loope
vcvtpd2ps
lock
lahf
xchg
push
popf
adc
xor
mov
shl
dec
inc
jmp
dec
fistp
cs
jmp
shr
outs
retf
ds
fcom
lock
paddd
mov
bound
jmp
inc
fsub
xor
adc
clc
scas
cmp
dec
mov
and
stos
stos
mov
shl
mov
test
rol
push
push
xor
sub
mov
shl
clc
mov
lock
mov
pop
mov
mov
adc
mov
mov
int3
mov
mov
fild
lahf
cmp
(bad)
retf
and
mov
das
(bad)
fimul
sbb
cwde
push
inc
pop
jge
cmps
sub
xchg
std
stc
adc
xchg
into
inc
mov
or
xor
bound
add
retf
dec
mov
stos
xchg
fnstcw
in
fwait
xor
mov
es
and
popa
fimul
pop
popa
cmp
icebp
inc
loopne
mov
(bad)
in
adc
add
das
mov
cmp
imul
in
and
mov
jmp
arpl
outs
mov
cmp
lea
mov
fstp
int
arpl
mov
shl
xchg
sbb
cmp
imul
call
test
bound
sub
pop
or
scas
pop
test
jae
cmp
mul
ins
call
test
aad
call
cmc
ret
in
sbb
cmp
pusha
jmp
push
adc
add
push
fistp
inc
mov
cwde
es
mov
jge
mov
cs
mov
pop
cmp
push
cmps
bound
cmp
lods
mov
loop
mov
arpl
pop
mov
push
pop
clc
retf
lods
aam
xchg
xor
mov
push
pop
push
fcomp
mov
in
nop
mov
jo
cmp
cmp
rcl
mov
jg
stos
pop
sbb
xchg
dec
xlat
pop
push
lods
add
xor
push
or
push
inc
xchg
jmp
in
mov
out
mov
into
mov
lods
inc
cmp
ret
xchg
xchg
stos
adc
mov
push
movs
in
lds
push
js
inc
lods
(bad)
mov
imul
xchg
data16
jb
ret
aam
adc
or
dec
in
adc
ja
push
jl
sbb
out
fs
fsubr
popf
jne
lods
and
push
ss
movs
dec
cmp
aad
ret
or
movs
push
rol
fild
dec
pusha
imul
(bad)
adc
inc
mov
jmp
inc
pusha
cdq
jb
mov
cmp
push
test
xchg
enter
cmp
mov
(bad)
js
enter
sub
outs
rcl
xchg
and
jbe
es
mov
jns
or
and
(bad)
(bad)
adc
adc
mov
mov
mov
dec
adc
jnp
jnp
fucomip
sbb
hlt
jns
sbb
xor
xchg
jp
cmp
fwait
mov
pop
dec
out
push
bound
xchg
dec
shl
pushf
pop
rcr
pop
jmp
(bad)
push
or
out
cmp
xchg
mov
cld
mov
mov
xchg
loop
ret
or
cmp
push
stos
mov
fist
jne
test
arpl
jl
pop
movs
jmp
mov
push
int
nop
push
xchg
hlt
lods
cmp
add
xor
fsub
or
mov
push
jns
shr
lea
mov
cmps
shr
jmp
sbb
jmp
xor
out
sbb
jmp
cs
mov
push
jae
js
sub
pushf
sub
jo
and
sti
pop
push
lods
add
mov
mov
jnp
adc
mov
sbb
xlat
dec
mov
cmp
mov
adc
je
sar
shr
ss
lods
mov
movmskps
ret
xor
jp
xchg
lock
xor
fdiv
lds
cmp
and
jecxz
fmul
shl
sbb
iret
push
je
mov
inc
std
mov
xchg
cmp
test
call
mov
jae
out
push
dec
cmc
inc
and
test
imul
dec
cs
push
stos
out
jae
out
mov
lahf
push
adc
cli
xchg
frstor
in
mov
cmc
int
pop
add
loope
ja
jne
xchg
pop
push
push
jnp
xor
outs
jg
push
mov
fsub
inc
cli
ss
dec
add
pop
dec
mov
test
cmp
pusha
dec
sbb
pop
dec
std
aam
loopne
fisttp
pop
jne
jle
jp
dec
call
jo
add
imul
dec
fild
cld
cdq
iret
cmc
out
arpl
es
daa
test
lds
mov
sar
jns
jmp
mov
clc
mov
xor
out
outs
push
inc
and
mov
add
or
xor
dec
les
les
and
jb
inc
popf
push
pushf
push
or
and
sbb
add
shl
xor
ja
fsubr
dec
out
sbb
icebp
sub
push
mov
sahf
xchg
sahf
inc
mov
pop
bnd
and
xor
push
add
mov
addr16
int3
imul
push
pop
arpl
mov
sti
push
adc
and
into
out
loop
icebp
or
mov
xor
cmps
sbb
mov
sbb
or
adc
lods
xor
popa
push
pop
pop
push
jmp
jge
div
sub
iret
cli
(bad)
push
xchg
retf
xchg
test
push
arpl
movs
push
rcl
or
and
jle
dec
push
or
icebp
in
fidiv
mov
pop
push
arpl
mov
imul
stc
movs
pop
daa
push
outs
outs
rcr
cmps
stos
xor
mov
scas
fwait
in
inc
mov
cmps
shr
repz
pusha
pop
push
shl
cmps
fild
jns
push
jmp
push
loope
xchg
lods
mov
pop
pop
test
mov
or
and
sbb
stos
xchg
popf
gs
mov
out
addr16
cli
fcomp
mov
ds
pcmpeqw
mov
dec
(bad)
cmp
cmp
sub
pushf
fldl2e
test
push
inc
or
or
test
cmp
repz
arpl
mov
jo
jne
test
sbb
mov
mov
stos
pop
stos
adc
dec
inc
ja
sub
mov
sub
les
mov
xlat
xor
xchg
test
iret
sbb
push
lds
sub
mov
ss
test
das
push
test
in
test
mov
packuswb
xchg
mov
or
aas
mov
dec
mov
test
mov
mov
push
push
iret
cdq
shl
shl
cmp
imul
test
hlt
jmp
mov
cmps
push
imul
mov
dec
mov
retf
cmp
mov
sub
mov
(bad)
jno
ret
sbb
sub
mov
lock
xor
mov
or
cdq
or
ins
or
iret
dec
pusha
outs
cmc
mov
or
enter
sbb
shr
mov
out
imul
jbe
mov
aaa
cmp
push
ss
mov
test
gs
mov
enter
sub
jns
mov
in
out
fcmovb
jg
gs
pop
cmp
imul
out
cmp
icebp
sbb
push
es
xchg
rcr
gs
test
mov
xchg
xchg
adc
mov
mov
mov
cmp
(bad)
loopne
stos
popf
lahf
aaa
dec
jnp
cdq
or
or
lahf
sbb
adc
jmp
mov
jnp
loope
xlat
adc
pop
push
inc
jge
rol
std
mov
loop
mov
rcr
mov
mov
icebp
popa
push
add
dec
cs
jns
cmp
mov
and
aam
loop
adc
out
jnp
push
jb
sub
out
imul
sub
loopne
lods
test
imul
out
and
xor
xchg
adc
mov
mov
cmp
out
stos
ret
cs
or
pop
adc
jne
test
mov
cmp
pop
call
out
into
dec
sbb
lds
bndldx
or
hlt
cli
addr16
push
and
imul
mov
mov
cld
enter
stos
sub
call
call
xor
movs
mov
inc
sbb
ins
or
mov
(bad)
lock
movs
in
add
and
repz
pop
sti
mov
pop
retf
add
retf
xchg
mov
scas
mov
adc
shl
push
mov
rcl
inc
xchg
jmp
mov
scas
push
aas
adc
push
add
push
cmps
pop
and
inc
or
push
test
xchg
out
fidivr
xchg
int3
shl
mov
repnz
push
repz
xchg
pop
jp
push
jnp
scas
out
mov
icebp
cmp
lds
xchg
add
aad
xor
sbb
in
jae
mov
push
lock
es
pop
mov
push
ret
loope
repz
xor
psllq
daa
lods
jp
lock
jg
iret
out
dec
adc
or
pop
push
xor
bound
pusha
xor
xchg
cwde
loope
inc
pop
ss
jecxz
or
je
pop
pop
sub
aam
ds
les
loop
out
fs
lea
sub
sub
arpl
out
sub
inc
fldenv
sti
push
inc
das
data16
adc
out
dec
fcomp
sbb
loop
stos
pop
lods
jge
xor
push
jne
sti
sbb
stc
jae
imul
dec
xor
sar
aaa
lods
cwde
xor
jo
ret
mov
mov
adc
mov
aam
hlt
mov
(bad)
fmul
sbb
and
stc
sbb
es
rol
cmp
mov
push
arpl
shl
loop
cmp
sub
pop
jl
mov
push
lods
fs
xor
add
lods
push
inc
nop
xchg
stos
(bad)
out
xor
test
jbe
les
sahf
daa
push
sbb
sbb
jmp
dec
or
mov
mov
(bad)
fmul
jno
add
add
adc
mov
fld
xchg
push
sbb
in
mov
adc
int3
mov
out
dec
push
(bad)
out
pop
xchg
lods
mov
fwait
mov
cli
(bad)
xor
cld
cmps
adc
std
push
and
adc
lds
dec
or
and
fbld
and
xlat
adc
pop
cvtdq2ps
cmp
dec
xchg
ins
add
(bad)
fcom
mov
add
cmp
and
mov
in
xchg
add
pop
stc
retf
sub
jecxz
mov
mov
call
and
icebp
push
imul
mov
test
mul
ins
sub
inc
scas
xor
pop
std
mov
push
sar
mov
icebp
out
fld
sub
add
cdq
hlt
fs
fwait
div
pop
retf
pop
into
mov
mov
lahf
xor
fist
and
jmp
jnp
enter
fbstp
xchg
jae
pop
rol
leave
cmp
sbb
mov
out
jae
dec
jb
push
(bad)
in
sar
push
or
dec
iret
inc
ja
rcl
sbb
dec
sub
sub
setbe
test
fwait
call
hlt
into
push
mov
loopne
jp
jbe
jl
imul
jp
sar
in
scas
push
mov
pop
cli
arpl
arpl
pop
jbe
ss
(bad)
pop
push
stos
in
test
ror
jg
sub
loopne
repz
and
sub
cwde
dec
popf
mov
pushf
sub
enter
push
push
add
mov
mov
cwde
pop
cld
xlat
xor
cmp
imul
(bad)
mov
pop
loop
pop
push
frstor
lock
jns
cwde
je
fldl2t
mov
clc
xor
and
or
mov
fadd
sbb
push
neg
ins
jbe
xchg
hlt
lock
mov
movs
fdiv
ss
sub
jb
add
cli
xor
sbb
and
icebp
fcom
cdq
or
je
imul
dec
pushf
and
pop
mov
jp
mov
add
cwde
es
fs
push
pop
push
xchg
mov
pushf
cmp
icebp
sub
in
imul
fmul
xor
scas
mul
jns
or
inc
mov
sbb
add
cmp
movs
js
ss
mov
lods
mov
or
movs
loopne
cmp
jno
in
in
mov
fyl2xp1
cmp
gs
pusha
dec
stc
ret
fidiv
(bad)
outs
cwde
std
scas
xor
dec
sbb
mov
cmp
fcmovb
mov
loop
cli
rcr
outs
pop
fisttp
mov
pusha
test
test
call
adc
xchg
fldenv
push
fst
icebp
out
fdiv
sbb
inc
pop
dec
ds
mov
(bad)
arpl
xchg
push
into
jbe
adc
sbb
push
sahf
jle
sub
xchg
mov
fs
push
inc
vshufps
pop
shr
adc
inc
je
jmp
dec
(bad)
lock
or
test
popa
cmc
shl
leave
or
cmps
jl
or
sub
aaa
int
ret
mov
pop
adc
inc
push
add
xor
ss
jo
in
popf
add
ds
bound
xor
bound
jne
jle
push
jae
es
cwde
and
jnp
ds
mov
enter
popf
mov
mov
xadd
mov
ins
mov
cwde
dec
aaa
mov
stos
mov
or
pusha
add
int
stos
popa
sbb
sub
and
or
mov
icebp
popa
xchg
adc
sub
sti
push
scas
into
ins
movs
xor
and
retf
inc
sar
mov
sar
call
pop
xchg
pop
mov
push
pushf
mov
loopne
movs
sbb
(bad)
cmc
das
call
stc
mov
int3
jbe
(bad)
jmp
jno
(bad)
jle
loop
jl
mov
je
adc
popf
mov
fcmovbe
repnz
push
cmc
cmp
fcom
jmp
imul
push
bound
sub
pop
leave
mov
hlt
and
stos
xor
add
mov
addr16
pop
in
mov
stos
inc
test
iret
out
mov
jo
inc
or
jp
sar
sub
ret
xchg
dec
mov
jo
add
adc
lahf
cmps
jnp
jge
xchg
mov
fist
fnstsw
xchg
push
xchg
pop
jbe
imul
dec
cli
sub
push
push
jle
or
xchg
fsubr
fmul
adc
retf
jl
and
(bad)
cmc
loop
sbb
in
add
jbe
adc
sub
idiv
xor
push
(bad)
iret
gs
jb
jg
xchg
adc
repnz
mov
in
or
outs
lods
mov
and
mov
and
mov
xor
sbb
stc
ret
out
(bad)
pop
xor
cmps
fcomp
pusha
clc
movs
cmp
ret
lds
test
dec
fld
out
mov
enter
or
daa
cdq
xchg
sub
(bad)
jl
arpl
push
cwde
dec
lds
test
or
outs
addr16
sahf
sbb
sahf
ins
mov
dec
or
mov
hlt
push
pop
aaa
in
call
jnp
jns
inc
and
shl
ss
mov
sub
out
xchg
add
bound
push
inc
hlt
cmps
ds
pop
or
pop
jno
ret
sub
(bad)
stos
fs
out
movs
movs
sub
clc
(bad)
xor
mov
retf
pop
sub
add
movs
dec
pop
lods
dec
jp
fmul
jbe
pop
je
pop
enter
jns
mov
and
fadd
xor
out
pop
mov
popf
scas
cmps
adc
sbb
repnz
add
test
adc
lock
movs
sub
add
adc
jg
repnz
cli
fwait
xor
int
out
ror
mov
push
bound
fstp
jp
push
xlat
ja
sbb
xchg
into
mov
and
popf
pop
xchg
jp
cmp
popa
arpl
(bad)
or
mov
add
loop
cmps
loopne
das
mov
nop
ds
jns
rol
mov
pusha
pop
pop
jmp
fistp
mov
std
xchg
pop
lea
(bad)
bound
test
sub
cmp
dec
in
add
sbb
mov
adc
xchg
aad
pop
pusha
stc
outs
js
fisttp
dec
pop
pop
(bad)
pushf
in
pop
(bad)
fs
cmp
xor
iret
mov
pushf
jo
cmp
or
xchg
mov
mov
pop
add
push
push
jge
out
dec
test
add
inc
clc
mov
bound
fisub
sbb
outs
int
xchg
adc
fsub
(bad)
sbb
loope
ret
mov
sbb
(bad)
inc
addr16
cmp
pop
adc
rcr
daa
push
cmps
jno
rcl
movs
push
push
cmc
push
jnp
xlat
jmp
jbe
cmovne
mov
outs
mov
xchg
loop
pop
loope
fs
push
push
xchg
xor
jp
dec
add
add
icebp
std
sbb
sbb
repz
add
inc
push
pop
aad
xor
pop
stc
outs
inc
scas
mov
xor
shl
outs
pop
cmp
and
imul
shl
aad
mov
mov
sbb
out
jecxz
xlat
inc
test
xchg
jne
jmp
mov
lahf
addr16
mov
push
xchg
xor
popf
inc
into
and
mov
push
mov
cmp
por
or
cmps
or
inc
cmp
inc
cdq
retf
push
ret
or
push
inc
jmp
or
jmp
mov
and
cmp
call
mov
dec
fstp
scas
mov
shl
mov
add
mov
sbb
mov
test
xchg
inc
or
pop
fild
out
cld
sub
(bad)
scas
adc
bound
shl
dec
sar
mov
inc
sub
mov
dec
ds
add
push
mov
addr16
nop
mov
add
push
arpl
arpl
xlat
test
iret
popf
sbb
cmp
clc
and
mov
and
mov
xor
leave
xchg
jl
cmp
retf
sti
shr
stc
push
inc
push
js
ins
mov
retf
rol
and
adc
add
scas
xor
and
xlat
stc
fisubr
sub
jg
repnz
mov
add
xor
sub
gs
lods
stos
fwait
(bad)
das
dec
jle
out
sub
xlat
pop
ret
stos
xor
mov
iret
jae
(bad)
imul
push
lock
pop
xchg
pusha
mov
ret
js
cmp
jbe
imul
mov
ins
test
fmul
jp
inc
mov
jle
or
mov
or
jnp
or
or
mov
out
mov
push
lahf
dec
dec
add
imul
xor
adc
push
fld
fcomi
or
lock
jg
outs
aad
or
push
loop
(bad)
fcomp
(bad)
(bad)
jl
xchg
stc
mov
ss
scas
rcr
push
mov
push
mov
pop
lods
mov
xor
add
pop
pop
fwait
call
add
pop
(bad)
clc
add
xchg
movs
sub
repnz
fisttp
mov
mov
aad
leave
push
push
dec
xlat
push
bound
ja
lods
push
jno
inc
mov
mov
xchg
ja
scas
sub
cwde
sub
test
sbb
sub
cli
adc
arpl
in
xchg
fdivr
xchg
addr16
dec
jb
push
jmp
xchg
push
addr16
or
adc
sti
add
jecxz
xor
mov
adc
bound
and
lea
and
lock
pushf
cmps
in
fsub
sbb
push
pop
sub
cmp
jge
sub
dec
popf
adc
jecxz
xor
mov
xor
mov
(bad)
rcl
mov
popf
jge
ds
sbb
loopne
inc
lea
pop
xor
test
mov
or
loopne
push
lahf
cmp
movs
pop
add
stos
fidiv
jb
pop
rol
jno
jg
push
add
xor
into
(bad)
std
and
and
lea
mov
or
cmp
int3
push
ss
xor
pushf
rcl
(bad)
xchg
xchg
test
or
cmp
push
push
pop
xchg
cmp
pushf
mov
sub
loopne
jnp
xor
pop
pop
and
fisttp
pop
push
pop
mov
fs
pop
ss
mov
sub
fmul
or
sbb
aad
repnz
out
cmps
cli
div
es
pop
dec
xchg
in
xchg
(bad)
or
inc
inc
imul
stos
jl
jns
push
add
retf
cmp
sahf
fadd
sahf
xor
pop
or
aad
and
inc
lods
cmp
mov
or
mov
ror
fcom
inc
cdq
imul
push
jmp
(bad)
rol
js
call
movs
sti
ss
sbb
mov
mov
test
dec
inc
sbb
call
pop
mov
xor
xor
iret
mov
xchg
loop
arpl
inc
icebp
retf
leave
cmp
retf
adc
xor
dec
mov
out
sub
into
xchg
outs
push
lds
iret
jnp
mov
mov
jmp
ror
ja
sub
sub
ret
add
imul
loop
fwait
mov
mov
jnp
mov
sbb
ret
clc
or
xchg
mul
sub
sbb
jmp
jo
daa
dec
imul
inc
cld
add
repz
dec
sbb
add
and
into
stc
fldenv
mov
pushf
cmp
lods
xchg
movs
iret
(bad)
sbb
popa
fs
mov
adc
lds
mov
imul
popa
cmps
aaa
repz
and
test
jle
mov
movs
sub
mov
(bad)
xchg
pop
retf
into
mov
xor
stos
mov
cwde
pop
jno
dec
jne
sbb
xor
fcomp
mov
out
sbb
cmc
push
test
add
jmp
nop
test
and
sub
xor
sub
(bad)
sub
rcr
jns
add
adc
jne
clc
fisub
sub
fnstcw
cmps
push
imul
lahf
pop
movs
xchg
idiv
int3
lahf
mov
xchg
and
jecxz
push
mov
icebp
std
imul
ror
in
lods
xor
sbb
push
jmp
push
jl
mov
xlat
pop
mov
test
mov
adc
repz
(bad)
jnp
mov
jo
dec
xchg
cmps
push
mov
test
fcomp
adc
cdq
inc
lods
movs
jp
lea
mov
jo
lea
cmp
and
and
aas
test
cmp
xchg
or
stos
jecxz
fcomp
lods
or
rol
fstp
or
fsubr
jns
ret
or
mov
jl
fldenv
or
fisub
stos
mov
cmc
je
clc
inc
sti
call
cmp
rcl
hlt
lock
nop
(bad)
lock
adc
ja
daa
ror
fwait
stc
pop
xor
cmp
push
scas
ins
push
mov
pop
into
xchg
cmp
push
xor
mov
sbb
jecxz
dec
inc
(bad)
(bad)
or
loope
xchg
addr16
mov
xchg
jecxz
sub
xchg
dec
stos
out
(bad)
mov
imul
jecxz
idiv
inc
movs
imul
jno
mov
inc
hlt
jae
pushf
aaa
add
xor
jl
or
outs
push
pop
into
call
jmp
sub
(bad)
std
inc
repnz
call
not
fnstcw
mov
jnp
pop
fistp
dec
add
ss
not
push
enter
jmp
mov
add
inc
jmp
push
xor
xor
test
and
mov
lock
aas
sti
inc
push
in
push
xchg
mov
mov
fisub
or
stc
and
ret
add
mov
aaa
gs
fs
out
lods
jle
cmp
ds
dec
xchg
jecxz
lea
mov
inc
shl
frstor
dec
mov
and
sbb
xor
aam
ins
imul
add
outs
ror
mov
(bad)
mov
add
pop
adc
inc
inc
in
das
lds
(bad)
fbstp
inc
mov
cwde
(bad)
movs
lock
lods
leave
push
into
push
repnz
aas
mov
push
adc
int
aam
add
in
add
cdq
jle
repz
mov
test
pop
push
addr16
add
lahf
push
pop
adc
nop
imul
push
xor
aas
adc
les
call
mov
jae
iret
and
ss
xchg
jmp
mov
xor
lahf
icebp
push
cmp
sbb
rol
data16
or
clc
popa
and
sbb
push
mov
pop
jp
test
cmp
dec
mov
and
adc
arpl
sub
lahf
cmp
test
test
jl
mov
dec
int3
pavgw
aas
pop
icebp
xor
jle
mov
aam
and
cwde
(bad)
mov
adc
ins
shl
inc
cmp
iret
or
mov
aas
jmp
or
aas
xor
stos
adc
and
add
popa
push
push
push
lods
mov
xchg
pop
dec
sub
xor
loopne
mov
dec
inc
mov
push
or
shl
int
fwait
fs
cmps
ins
in
fnstsw
and
dec
outs
out
aad
in
mov
add
push
mov
out
mov
inc
fisubr
jp
jmp
push
cmp
repz
out
gs
push
aam
add
adc
lods
in
pop
sub
mov
clc
into
ror
dec
push
mov
push
adc
pop
aad
mov
xchg
pushf
mov
imul
test
xchg
sbb
add
mov
mov
leave
xor
fsub
mov
add
loopne
out
sar
add
adc
xchg
mov
adc
push
fist
loope
add
imul
inc
jp
mov
pop
push
cld
ja
sahf
lahf
pop
cmps
pop
jns
add
ficom
add
pop
adc
mov
stos
mov
stc
pop
(bad)
cs
imul
gs
mul
repz
adc
das
add
mov
inc
sbb
call
repz
sbb
inc
jmp
and
mov
(bad)
test
pop
pop
retf
jle
push
inc
shl
mov
(bad)
stc
std
or
cmp
int3
out
scas
add
xchg
pop
push
pop
xchg
aam
mov
movs
mov
jnp
mov
jg
mov
loopne
add
(bad)
or
mov
push
mov
mul
das
call
imul
xor
sub
fisttp
movs
sti
movs
cdq
sub
stos
mov
add
lock
js
and
movs
xchg
push
stos
dec
sub
dec
inc
sbb
popa
in
push
ror
jg
push
fcomip
ins
and
or
mov
icebp
sbb
jnp
mov
cmp
mov
(bad)
outs
sub
pop
xchg
lahf
mov
outs
mov
test
add
(bad)
retf
movs
inc
ror
sahf
mov
mov
push
pop
repz
jp
inc
shr
push
pop
ret
xor
cmps
push
and
imul
cs
jge
mul
outs
dec
mov
cmp
dec
adc
pop
es
data16
movs
mov
jbe
push
ins
and
(bad)
mov
outs
push
popaw
sbb
mov
mov
dec
loope
outs
sar
scas
push
aaa
movs
stos
xor
out
mov
xor
and
sbb
or
jne
mov
cmp
call
inc
adc
or
cmp
or
retf
xor
hlt
xor
xchg
sub
es
pusha
into
sub
stos
xor
mov
mov
imul
repnz
fcom
adc
cmps
ja
jbe
ror
adc
jg
mov
mov
dec
in
adc
sbb
push
movs
pop
cmps
inc
jecxz
out
jmp
fild
adc
sbb
adc
iret
sbb
xchg
aad
imul
(bad)
popa
test
xor
xchg
cmp
dec
movs
cdq
add
jge
test
movs
mov
movs
repnz
inc
push
cmc
retf
mov
aam
dec
xchg
cli
jae
cmp
and
pop
mov
stos
jbe
pop
inc
fsubr
es
mov
xchg
jbe
adc
mov
lea
sar
cwde
sub
cmps
xchg
add
ret
inc
rcr
jecxz
jbe
sahf
adc
or
mov
jae
sar
inc
lods
cli
imul
adc
dec
bound
cwde
fldcw
xor
pushf
and
mov
cmp
ins
fmul
call
push
ficom
sti
xor
retf
test
(bad)
push
xchg
jge
ss
(bad)
bound
mov
pop
cwde
sbb
adc
sbb
cmp
sbb
push
ds
repz
or
(bad)
in
loope
mov
call
in
mov
add
xor
or
mov
in
bound
loope
cld
scas
and
out
mov
jmp
jne
adc
dec
xlat
mov
push
add
cmp
in
mov
test
adc
mov
dec
jle
test
jno
sbb
add
shr
jl
jle
call
int3
mov
(bad)
and
jge
xchg
or
ret
xor
push
loopne
stc
jecxz
(bad)
cmp
adc
push
xor
adc
jmp
and
mov
mov
add
out
jmp
aad
push
push
jg
push
mov
popf
jle
or
jmp
or
nop
out
das
pusha
nop
repnz
shl
or
out
jae
mov
dec
mov
push
stos
xchg
leave
pushf
mov
ss
push
lock
aas
(bad)
jnp
xor
xchg
in
(bad)
std
out
or
pusha
push
retf
jns
ds
fwait
int
ficomp
ja
rol
add
xor
pusha
js
int3
ficom
inc
sub
push
movs
test
jg
sbb
push
push
into
xchg
mov
fld
daa
mov
xor
dec
jbe
jle
loopne
js
xlat
and
mov
push
int3
retf
cmp
div
cmps
fs
jp
jmp
dec
outs
or
mul
iret
dec
(bad)
and
or
pop
je
loope
scas
sub
sbb
lods
bound
ins
js
cmp
xchg
in
int3
ret
loope
popa
mov
nop
add
xor
aam
mov
inc
addr16
sbb
cmp
call
push
fwait
push
sub
cdq
fisttp
jns
add
mov
cmp
arpl
js
pop
and
fcmove
push
outs
scas
pop
cli
aad
xchg
ror
ins
lea
sbb
lock
int
sub
test
add
add
out
dec
jmp
retf
push
cmps
jns
pusha
mov
pop
jg
adc
and
inc
xchg
adc
repz
(bad)
dec
ror
xor
jne
dec
push
daa
mov
ins
inc
movs
sti
dec
xchg
(bad)
or
mov
jmp
pop
and
mov
data16
push
fwait
(bad)
push
mov
jne
push
jp
imul
sub
push
leave
or
inc
add
cmp
jno
push
and
fcmovne
xchg
lods
mov
pop
lds
hlt
lock
jmp
arpl
in
sub
sub
in
jbe
mov
jb
sub
dec
js
aaa
cmp
repz
pop
inc
cmp
or
push
xchg
cmps
into
hlt
dec
sbb
out
xor
jns
or
or
cmp
mov
sbb
out
mov
lock
repnz
dec
(bad)
out
adc
(bad)
fucom
cmp
jnp
pop
ss
push
fldenv
imul
add
push
pop
scas
and
push
sbb
dec
sub
shl
je
test
sbb
inc
pop
add
pop
into
loope
xor
inc
rcr
fnstcw
fbld
mov
xchg
inc
data16
adc
loope
pusha
xchg
clc
ret
sbb
leave
sbb
pusha
xor
call
xchg
and
mov
test
cmp
(bad)
imul
lods
stos
mov
xlat
lock
push
pop
(bad)
fcmovb
ds
jo
xchg
push
lods
sub
je
aad
xchg
(bad)
daa
jp
sub
cmc
cwde
mov
cmp
add
push
xchg
ror
dec
cld
lods
push
data16
cs
xlat
shl
sbb
xor
xlat
push
jo
iret
(bad)
cmp
fwait
mov
test
xor
je
xchg
and
mov
sysexit
dec
jb
(bad)
xor
ret
repz
das
mov
sub
retf
aam
jge
sub
dec
stos
add
or
mov
aam
mov
fnstcw
aas
sub
xor
mov
leave
cwde
mov
(bad)
movs
sti
jg
cli
xor
xor
mov
scas
and
pop
dec
jp
add
inc
sbb
shl
hlt
aam
sar
scas
cs
retf
and
hlt
mov
add
cwde
cmp
add
dec
loope
enter
rol
xchg
sbb
popf
out
or
das
sub
push
mov
adc
mov
imul
sbb
adc
sbb
mov
pop
mov
fucom
xchg
adc
fmul
inc
in
mov
jno
shl
jne
in
scas
add
inc
jg
jae
(bad)
test
(bad)
movs
xlat
out
or
nop
fld
int3
sub
xor
or
jl
aas
add
cmp
mov
jge
adc
hlt
inc
fimul
adc
push
daa
das
and
inc
out
adc
cmps
fist
mov
cmp
nop
jecxz
jae
cld
xor
xchg
mov
sbb
pop
or
ss
push
dec
push
jle
test
dec
fidiv
jecxz
sbb
sub
push
mov
dec
repz
xchg
call
ret
ret
jne
lods
jle
inc
neg
mov
ja
aas
test
aaa
cwde
jbe
xchg
lods
jo
cmps
mov
lahf
fld
and
lahf
adc
dec
mov
pop
cmp
(bad)
xchg
mov
and
jl
mov
or
pop
and
test
dec
sbb
jae
inc
fcomp
jae
push
dec
stc
add
test
pop
push
mov
mov
leave
lods
mov
cdq
inc
outs
mov
fs
jmp
mov
cmp
mov
mov
xor
cmp
pusha
sbb
fcom
js
movs
cld
rcl
imul
gs
xchg
or
jnp
sti
dec
fldcw
jno
enter
xchg
imul
dec
mov
popf
lea
fdiv
sbb
jecxz
cmps
mov
push
adc
dec
or
sub
(bad)
push
aas
adc
aas
outs
ret
push
in
icebp
jno
mov
cld
mov
(bad)
push
fs
pushf
jb
pop
popa
pop
push
test
lds
(bad)
neg
stos
push
fs
retf
inc
in
jmp
dec
enter
ins
in
lahf
hlt
sbb
mov
repnz
cmp
call
xor
ret
or
adc
loop
jo
(bad)
and
sub
jp
sbb
mov
pop
cmps
add
pop
xor
fidiv
stos
cmps
inc
repnz
fstp
push
loop
inc
xchg
fstp
scas
pop
inc
xor
xchg
xor
movs
push
outs
or
scas
cmp
xor
push
lock
pop
jns
fsubr
sub
rcl
cld
retf
inc
into
leave
jg
push
subps
lds
rcl
mov
in
xchg
jb
int3
sbb
inc
and
sbb
mov
jg
retf
adc
stc
add
xor
pop
int3
jns
mov
mov
or
jle
jecxz
pop
shl
jne
sti
mov
lods
sahf
addr16
fdivr
sub
dec
push
sub
xor
xchg
push
or
data16
cmp
jge
adc
in
mov
outs
(bad)
or
lods
mov
jge
mov
in
enter
hlt
adc
clc
js
fdivr
pop
mov
sub
inc
scas
xor
xor
(bad)
xor
cs
outs
cmc
xor
call
pop
dec
in
daa
(bad)
or
adc
popf
daa
pop
and
cmp
and
dec
sti
and
mov
sbb
hlt
cld
adc
xchg
cmp
je
jns
cld
das
fadd
mov
mov
cmp
xor
xchg
adc
out
test
dec
shr
dec
inc
add
in
stos
and
pop
in
push
into
nop
or
scas
add
outs
cwde
dec
sbb
xchg
dec
into
sbb
retf
rcr
sub
(bad)
jae
fwait
(bad)
mov
outs
(bad)
cmp
dec
push
sub
out
sbb
movs
std
mov
mov
aad
cdq
adc
dec
pop
(bad)
(bad)
sbb
mov
pushf
lahf
sub
dec
aam
leave
jo
mov
inc
mov
bound
jb
leave
xchg
imul
or
ins
jle
push
mov
mov
adc
aad
hlt
cld
test
shl
jl
mov
cmp
cmc
lahf
cmps
or
test
pop
and
and
outs
scas
push
(bad)
shl
mov
xor
(bad)
ins
lahf
xor
or
sub
adc
mov
pop
data16
add
xchg
adc
jmp
cmp
fadd
enter
js
mov
call
sub
into
adc
clc
pop
daa
mov
adc
cdq
addr16
or
adc
dec
cmp
pop
popf
std
shl
xchg
rcr
loope
mov
add
clc
loopne
aaa
rol
mov
xchg
xor
add
pop
mov
push
xor
cmps
pusha
mov
fcomip
jne
test
cmp
mov
stos
dec
movs
in
jg
test
sahf
inc
mov
daa
jnp
js
inc
sbb
inc
stos
or
dec
mov
mov
fs
xchg
mov
mov
sbb
loopne
retf
cwde
or
enter
xchg
jbe
push
inc
adc
mov
adc
fldcw
addr16
jbe
mov
push
out
repnz
dec
leave
addr16
jbe
fld
aaa
push
clc
mul
xor
fstp
(bad)
cmp
jmp
lock
xchg
idiv
in
xchg
xor
fs
sbb
xchg
jne
mov
jb
adc
xor
cmp
movs
inc
aam
cmps
loop
mov
(bad)
xchg
neg
sbb
sbb
lods
stc
mov
aam
test
xchg
xor
jle
repnz
fild
xchg
movs
(bad)
fsub
push
push
mov
repnz
dec
add
jns
cmp
in
rcr
(bad)
aad
mov
sti
jge
jnp
iret
stos
sub
mov
lds
and
cwde
rol
stos
push
mov
pusha
imul
repnz
je
jo
scas
add
mov
mov
dec
retf
jmp
pushf
cld
in
adc
push
sbb
fisub
xchg
lea
mov
xchg
bound
out
pusha
and
jno
adc
or
out
add
shr
out
mov
mov
jecxz
fst
ins
ds
lods
push
lock
leave
cwde
or
pop
jns
addr16
pop
jno
retf
add
cmc
fwait
pop
and
repz
test
mov
dec
mov
sbb
js
test
inc
jne
xchg
add
mov
mov
imul
ror
mov
mov
ins
inc
or
retfw
dec
sub
pop
and
adc
mov
jl
rcl
fisubr
fisttp
xchg
mov
dec
sub
sar
cs
(bad)
cld
xor
push
add
push
shl
push
add
pushf
push
bound
mov
cmp
lock
std
leave
cmc
mov
retf
cmp
mov
mov
pop
pop
fs
arpl
and
neg
jae
xor
mov
or
test
jmp
pop
jnp
mov
out
mov
mov
pop
fisubr
icebp
je
and
popf
in
push
or
add
xchg
push
and
int3
mov
xbegin
push
out
mov
pop
pushf
cmps
adc
add
sbb
int
dec
cmp
and
enter
loopne
fdiv
cdq
das
inc
retf
mov
jo
aad
movs
pop
mov
loope
mov
in
sar
pcmpeqw
shl
mov
or
inc
pushf
mov
add
inc
jae
shl
cli
sub
rol
test
in
sbb
push
jge
jno
in
outs
jne
in
cmps
into
test
je
xchg
jp
clc
jb
mov
add
retf
movs
dec
imul
or
xor
scas
in
push
sub
add
and
mov
cmp
dec
dec
mov
out
jge
inc
dec
dec
mov
jb
pusha
pushf
out
aad
push
inc
movs
sti
dec
lock
je
cmps
and
dec
push
and
mov
scas
or
adc
push
std
inc
adc
aas
std
retf
xchg
cld
fldenv
into
jge
jecxz
or
and
inc
neg
(bad)
xor
push
lock
jmp
dec
xlat
inc
ficom
add
xor
aam
mov
fbld
jb
ja
xchg
xor
popf
outs
es
xlat
hlt
mov
jne
pop
jno
jno
xchg
ret
mov
adc
jl
hlt
into
mov
adc
loopne
ror
popf
sub
inc
and
daa
add
cs
mov
xor
dec
test
inc
imul
mov
adc
jbe
sub
inc
stos
xor
jnp
fwait
jge
dec
test
inc
ins
leave
bound
ror
pop
scas
add
imul
scas
in
mov
push
in
xor
hlt
call
out
jno
out
pop
push
(bad)
dec
adc
jmp
dec
cmp
sbb
xchg
xlat
jmp
loop
repnz
add
sbb
dec
mov
push
mov
mov
cs
fldenv
and
test
jne
rcr
ja
popa
repnz
std
shl
fs
inc
jnp
pop
adc
ins
push
not
or
and
test
lahf
or
xor
ins
ja
imul
std
rcl
enter
neg
mov
pushf
fdiv
xor
lods
sbb
sbb
xlat
ja
jbe
(bad)
ficomp
mov
xchg
out
dec
repnz
lods
push
jmp
and
adc
dec
scas
xchg
cmp
cmps
test
out
out
jmp
pusha
(bad)
pop
nop
and
shl
jge
shr
out
into
jmp
jb
mov
cmps
mov
mov
mov
push
hlt
push
and
xchg
aam
xchg
outs
jnp
jnp
rcr
mov
mov
in
xor
outs
and
ins
clc
arpl
fisub
in
repz
cmp
sbb
outs
push
jp
pop
lahf
aas
sbb
sbb
stos
or
push
aad
retf
fsubr
test
fcomp
xchg
dec
stos
dec
add
cmps
aaa
sbb
xchg
cmp
enter
xor
push
push
enter
mov
dec
int3
outs
(bad)
je
jmp
in
imul
cmp
jae
stos
icebp
inc
push
fstp
jbe
test
xor
movs
loopne
fdiv
mov
fcmove
inc
sbb
outs
pop
mov
(bad)
jnp
lods
aaa
add
cmp
mov
push
mov
jmp
mov
mov
lock
dec
sub
push
mov
xchg
inc
mov
sar
pop
les
test
adc
xor
cli
push
fisub
cmp
sub
movs
fwait
jnp
ins
adc
inc
inc
adc
jp
jmp
out
add
ins
lahf
iret
sub
and
adc
adc
leave
mov
arpl
shl
xchg
mov
mov
mov
xlat
(bad)
or
stc
cdq
aaa
push
pop
(bad)
popf
fcom
cmps
ins
jne
stos
dec
loopne
mov
leave
xor
rol
dec
mov
fiadd
cmp
bound
gs
jmp
clc
ret
xchg
(bad)
retf
out
xor
mov
jae
sub
imul
stc
movs
scas
hlt
fstp
sti
mov
lahf
adc
cmp
add
std
mov
pop
mov
cmp
pop
dec
mov
mov
cmp
pop
and
or
sbb
out
add
jl
cwde
jge
sbb
and
ret
popa
stos
xor
(bad)
out
push
call
aas
sub
adc
loopne
push
push
loop
fs
scas
repnz
and
dec
js
imul
inc
push
popa
pop
sbb
dec
push
js
push
movs
(bad)
mov
push
popa
lods
and
pop
jbe
lahf
cmp
inc
push
sar
sub
add
inc
jge
cmp
adc
and
mov
ret
ins
sar
xchg
jecxz
sub
das
sbb
into
pop
jle
pop
mov
add
cld
mov
imul
(bad)
mov
jmp
and
scas
sub
movs
ret
mov
mov
mov
jge
xor
movs
inc
mov
xchg
adc
xor
call
adc
xor
in
or
cmp
(bad)
adc
sbb
dec
ror
or
add
in
sbb
push
gs
xlat
mov
pop
aad
movs
jmp
xchg
imul
daa
scas
mov
cmp
mov
and
and
push
cmp
dec
cmps
sbb
daa
cmp
sub
ret
xchg
call
jno
fcom
in
mov
jle
mov
or
push
dec
stos
cmp
mov
popa
add
sbb
data16
jb
adc
mov
cmc
es
out
out
ret
add
stc
inc
dec
xor
mov
jo
(bad)
sbb
test
(bad)
int3
fscale
pop
pop
lahf
dec
les
scas
imul
cmp
rol
lea
cwde
movs
hlt
data16
es
and
push
cmp
out
repnz
leave
daa
cmp
fdiv
std
mov
outs
jmp
jns
call
or
sbb
dec
sub
inc
test
xor
mov
mov
jg
mov
jle
fidiv
inc
sub
inc
repnz
into
and
inc
cmp
ins
fild
dec
inc
popf
mov
pop
pop
lahf
movs
xor
repz
xchg
sub
ret
xor
gs
std
(bad)
jle
fistp
les
adc
ss
push
mov
daa
pushf
outs
fwait
dec
mov
call
out
pusha
cdq
and
imul
idiv
loopne
jg
jp
repnz
dec
imul
leave
mov
in
call
aam
pop
(bad)
cld
jmp
and
cmp
push
bound
push
sub
js
and
fwait
sub
dec
push
imul
arpl
mov
lods
cmp
mov
(bad)
std
aad
ret
(bad)
mov
mov
cdq
fnstsw
pop
inc
jno
add
xor
mov
add
add
dec
xor
jle
sub
outs
push
add
adc
fnsave
mov
ins
dec
nop
mov
mov
into
ror
inc
stos
call
test
jne
stos
and
lock
jne
add
mov
mov
lahf
leave
les
popf
pop
push
dec
outs
sbb
add
mov
in
xor
fsubp
or
nop
push
dec
aaa
in
mov
sub
sub
xchg
pop
inc
(bad)
jl
cwde
jg
iret
jae
callw
cdq
or
inc
popf
clc
aam
lea
push
imul
ja
jp
mov
repnz
and
test
jge
jp
sub
aaa
mov
cmp
sbb
sti
add
add
bound
stos
pmaddwd
push
ja
xchg
cmp
and
fs
aam
jae
cmps
jge
out
ins
fild
shl
dec
mov
test
mov
xchg
addr16
sub
(bad)
push
mov
mov
and
rcl
push
mov
out
and
loope
out
jle
das
mov
pop
mov
mov
pop
jle
jb
mov
call
in
jl
les
jne
das
ds
fcom
xchg
mov
jns
pusha
mov
cli
ret
(bad)
out
icebp
sbb
xor
jge
inc
pusha
arpl
add
fistp
retf
scas
and
mov
cdq
or
lods
sbb
bound
cmp
push
adc
mov
push
ds
lods
inc
mov
and
adc
mov
pop
push
adc
in
ins
cmp
dec
add
mov
or
pop
dec
cmp
sub
cmps
mov
jg
dec
lahf
jnp
xchg
fsubr
xchg
dec
mov
jmp
push
mov
mov
bnd
mov
pop
xor
mov
(bad)
jno
imul
lds
xchg
xchg
stc
sub
into
pop
cdq
dec
cmp
sbb
test
pop
fucomip
dec
daa
dec
ror
lock
ja
out
pop
fmul
inc
and
and
ja
cmps
mov
outs
les
sub
pop
loopne
fisttp
push
push
push
stos
mov
ds
mov
enter
pop
in
setb
rcr
add
add
lahf
bound
adc
xchg
pop
int3
lahf
jmp
and
es
and
dec
aas
in
repz
int
inc
mov
repz
(bad)
in
stos
(bad)
(bad)
ss
dec
pushf
sbb
dec
jle
mov
sbb
cmp
div
popf
sbb
jle
in
or
fcomp
gs
jmp
adc
fwait
rol
jg
pushf
aam
lea
push
mov
pushf
in
mov
not
daa
clc
aad
iret
pop
out
xchg
dec
xchg
jle
out
(bad)
leave
sub
and
pop
lahf
cmp
stos
cmp
xor
fstp
in
and
daa
mov
adc
mov
aam
sbb
clc
sti
push
(bad)
xchg
push
cmc
or
loope
call
js
jbe
lods
leave
fcmovnbe
mov
int
popa
data16
ror
in
leave
call
inc
or
rol
arpl
inc
cdq
xchg
mov
fucomi
scas
sub
adc
sbb
inc
loope
xchg
hlt
mov
inc
test
ds
loop
push
mov
je
fstp
stos
jl
push
mov
pop
fnsave
xchg
pop
ds
mov
mov
mov
pop
ficom
jns
loope
adc
test
std
retf
jbe
shr
mov
jo
sub
popa
or
call
and
dec
xchg
div
sub
push
repz
or
movs
test
mov
add
sub
mov
call
nop
js
jne
sbb
cmp
fsubr
fisubr
ja
sbb
pop
push
mov
fst
mov
dec
aam
mov
in
pop
mov
cmp
(bad)
xchg
stc
xchg
test
add
aad
cmp
fstp
mov
push
lock
add
bound
push
cmp
scas
pusha
not
jle
sbb
je
cmps
or
inc
(bad)
int
dec
mov
adc
mov
and
cmps
imul
loope
xchg
les
adc
push
ins
out
sbb
movs
push
mov
xor
push
ds
ins
dec
mov
aas
int
mov
push
(bad)
aas
in
and
pop
xchg
fs
div
add
inc
outs
(bad)
test
dec
in
into
aas
xor
pop
test
nop
xchg
jnp
cmp
pop
or
xchg
push
jge
adc
push
gs
out
mov
xchg
sub
hlt
add
xor
sub
(bad)
cmp
fisttp
jl
push
cwde
ja
push
sbb
pushf
test
iret
dec
cmp
inc
in
pop
arpl
xchg
mov
sub
push
lock
push
cmp
pop
jne
add
(bad)
(bad)
bswap
add
stos
in
add
mov
jo
add
hlt
test
mov
scas
rol
ror
lock
fs
in
or
mov
and
lods
inc
aam
push
push
push
push
popf
mov
ja
mov
fstp
out
push
adc
cmp
test
bound
sub
sub
mov
xchg
dec
adc
dec
(bad)
pop
pop
sbb
mov
sar
xchg
(bad)
xor
pop
inc
jecxz
jns
mov
cmp
fdivr
les
mov
rcl
retf
into
fs
cmp
fucomip
jmp
adc
jbe
cwde
xlat
dec
daa
xlat
aam
pop
jmp
scas
mov
dec
ins
cmp
(bad)
loope
add
retf
adc
mov
ror
test
inc
cmp
and
not
bound
xchg
(bad)
rol
inc
push
in
pop
imul
rcl
cmp
aam
int3
inc
cmps
loop
pop
lea
mov
popa
inc
jbe
(bad)
int
in
xor
xchg
or
push
inc
add
add
rol
test
stos
pop
adc
sub
and
xor
mov
jge
jns
mov
call
sbb
dec
cmp
pop
sahf
mov
jo
sub
sar
inc
and
inc
push
adc
jno
dec
inc
jmp
sbb
push
mov
jns
cvtpi2ps
out
iret
rcl
into
retf
sub
inc
inc
aas
and
repz
dec
fbld
mov
add
xchg
push
mov
test
fs
mov
test
out
mov
mov
pop
sbb
push
rcl
shl
repz
sbb
outs
sahf
out
(bad)
hlt
dec
jge
jg
xchg
push
js
jns
repnz
sar
stos
js
lds
sub
cmp
lods
mov
ins
imul
mov
jns
sub
inc
and
sub
stc
cmp
adc
(bad)
mov
xor
retf
neg
jbe
aad
ins
mov
fbstp
pop
fbld
imul
stc
mov
int
mov
int3
push
cmp
and
arpl
sub
dec
fdivr
lods
push
xor
jne
pusha
ja
and
in
shr
xchg
mul
jns
(bad)
xchg
jae
imul
xor
xchg
mov
sbb
mov
test
jg
sub
add
sbb
mov
pop
push
(bad)
jb
inc
loope
cld
pop
jle
cmp
jl
(bad)
test
sbb
pusha
shl
int
arpl
sbb
jge
pop
inc
ja
adc
repz
pop
mov
imul
pop
jmp
xchg
(bad)
test
jl
sub
push
outs
stos
adc
push
lds
xor
pop
xchg
dec
mov
test
retf
mov
xor
sbb
inc
push
das
cmp
nop
std
out
dec
add
xor
xor
popa
arpl
sub
pop
aas
cmps
into
das
stos
jmp
xor
addr16
retf
test
add
push
jl
cmps
jecxz
xor
push
add
cmp
(bad)
dec
leave
jge
pusha
xchg
push
and
scas
xlat
sub
fwait
mov
out
inc
xchg
adc
xchg
call
ins
mov
push
inc
rcl
sub
(bad)
sub
sbb
mov
jnp
jge
or
push
jmp
fstp
inc
sub
cmps
and
dec
loop
sbb
cld
push
pop
xchg
xor
fild
xchg
pusha
cmp
mov
pop
outs
and
mov
pop
and
popa
loope
sbb
xchg
jns
mov
std
push
pushf
jmp
pop
ins
mov
push
ficom
imul
xchg
add
hlt
scas
xchg
(bad)
sti
cmp
jns
sbb
aaa
shl
(bad)
sbb
adc
outs
lds
scas
shr
leave
pop
add
lods
inc
push
jge
mov
fisub
sub
jmp
jle
inc
or
or
(bad)
and
add
xchg
inc
inc
mov
push
outs
test
mov
mov
fist
pop
pop
push
xor
outs
sub
lds
int3
dec
int
dec
mov
pop
das
sub
sbb
xchg
stos
adc
add
test
add
(bad)
dec
aaa
mov
clc
and
sbb
mov
out
xor
cmp
push
(bad)
rol
add
popf
movs
(bad)
and
xchg
cdq
sub
outs
xor
(bad)
clc
hlt
mul
scas
mov
scas
lahf
xor
repz
mov
push
jmp
sub
mov
pop
push
cmps
ficom
xchg
div
push
sbb
arpl
jle
ja
push
stc
xor
cmps
add
lock
ror
xchg
jecxz
jmp
xor
push
into
mov
loop
fs
loope
jg
dec
aad
les
and
mov
aam
pop
sbb
int
cmc
xor
popa
mov
std
arpl
ins
xor
repz
sbb
fimul
outs
out
sahf
dec
fcmovnb
outs
stc
pop
mov
and
xor
callw
shl
adc
adc
nop
scas
push
adc
xlat
or
loopne
jno
int3
shr
dec
aaa
lahf
adc
or
jne
sbb
pop
inc
inc
mov
adc
xchg
out
std
outs
aad
cli
in
out
xor
test
cmps
rcl
int
(bad)
fsub
call
jmp
dec
mov
push
jne
cwde
sar
retf
inc
js
mov
pop
jbe
pop
ret
cmp
scas
jo
(bad)
cmp
sbb
xor
and
cdq
imul
sub
ss
fst
xor
lea
rcr
mov
(bad)
sub
adc
jecxz
(bad)
scas
pop
retf
inc
mov
call
xchg
jecxz
push
mov
pop
(bad)
int
cli
cmp
inc
dec
sti
mov
push
xlat
sub
sar
cmc
cs
add
xchg
xlat
aad
pop
pop
xor
addr16
pop
mov
ds
jne
mov
inc
arpl
lods
mov
pop
in
xchg
sub
pop
cld
fwait
push
sbb
sti
mov
clc
pop
pop
in
sti
fldenv
sbb
dec
sub
mov
xchg
xchg
aam
hlt
bound
retf
ins
push
xchg
mov
rcl
xchg
pop
dec
pop
fsub
mov
or
and
into
mov
aaa
push
sar
xor
dec
ror
cmc
ret
jnp
push
xor
sub
cdq
xchg
dec
fnstcw
adc
stos
jmp
cwde
les
pinsrw
pop
(bad)
stos
jmp
xor
test
mov
je
adc
mov
rol
into
loope
push
and
add
lds
sub
adc
adc
out
scas
(bad)
cld
dec
stos
and
mov
push
in
push
mov
mov
outs
popa
aam
push
jge
push
sbb
push
cmp
dec
fidivr
cmp
loope
and
dec
pop
xlat
sbb
push
cmp
mov
pop
inc
(bad)
push
cmp
mov
das
das
pusha
jmp
mov
scas
jo
jae
out
mov
rcr
arpl
aad
cmp
sbb
inc
neg
das
mov
ins
inc
jbe
push
out
sub
xor
mov
jmp
mov
add
xor
xor
cmp
mov
pop
outs
pop
adc
xchg
mov
cmp
scas
pop
jg
mov
or
jnp
stc
idiv
or
data16
or
pop
shl
jne
or
sar
mov
mov
sbb
es
jl
jge
adc
mov
inc
and
mov
ja
call
push
jne
xor
movs
mov
mov
mov
in
int
dec
xchg
and
stos
and
pop
fadd
daa
push
cmc
hlt
pop
sahf
lds
popa
loopne
mov
test
push
or
stos
cmc
iret
retf
retf
mov
pusha
mov
sub
jp
rol
ins
outs
sub
cdq
popa
outs
sahf
sbb
sub
pop
popf
movs
xor
loopne
(bad)
outs
add
xor
mov
jo
popa
inc
push
shr
nop
add
dec
jmp
push
pop
xchg
jb
sub
and
cmp
push
jns
cmp
xor
icebp
cmps
lods
pushf
imul
jb
gs
cmp
jns
ds
mov
loope
fwait
in
sti
ins
inc
sahf
mov
(bad)
ins
push
out
sahf
fbld
dec
data16
mov
loop
loopne
mov
adc
push
and
stc
or
aaa
test
sbb
stos
cwde
mov
hlt
pop
sub
sahf
bound
fs
jle
mov
mov
fwait
shr
aad
mov
push
lock
or
jp
or
pop
js
mov
push
xlat
mov
ror
xor
mov
js
cs
dec
pop
repz
fcmovb
or
mov
dec
shl
out
add
mov
xchg
fcmovu
add
repz
or
sub
daa
ret
or
cwde
in
jmp
icebp
(bad)
(bad)
in
int
jmp
aad
pushf
jne
push
push
stos
mov
jmp
cli
or
cmp
fsub
lock
popf
mov
loop
and
fnstsw
aas
sar
adc
and
cmp
mov
dec
add
sahf
mov
rcr
mov
dec
repz
push
jb
(bad)
xchg
stc
jl
inc
push
sbb
cmp
fwait
pushf
aad
(bad)
pop
(bad)
jmp
jb
push
mov
mov
hlt
cwde
xchg
ins
add
sti
and
push
jle
fst
in
sbb
jo
ds
mov
jmp
push
retf
fsubr
mov
jno
aam
push
sbb
xchg
push
mov
in
sbb
scas
lods
jb
popf
mov
adc
cmc
std
loopne
add
xchg
popf
lds
stc
sub
(bad)
and
push
push
and
jb
loopne
mov
and
cmc
or
fmul
pusha
scas
test
fstp
mov
inc
adc
dec
fsubr
mov
xchg
jo
mov
push
inc
out
pusha
push
pop
loopne
nop
sbb
lock
inc
loopne
fnsave
imul
test
lahf
aaa
adc
dec
sub
add
mov
test
mov
stos
sub
dec
mov
lods
dec
and
dec
leave
in
call
or
dec
pop
sub
loopne
jecxz
stos
xchg
outs
add
movs
cli
(bad)
jo
addr16
shl
pop
mov
cmp
cmp
push
nop
sti
dec
xchg
jl
push
std
mov
jle
ins
int
pop
adc
jl
dec
push
pop
outs
in
(bad)
mov
jbe
jo
shr
dec
inc
fidivr
pusha
and
sahf
cdq
retf
pop
mov
dec
aaa
out
jle
add
xor
ret
xchg
push
adc
jl
stos
inc
xor
sub
and
jo
rol
je
xchg
push
aaa
(bad)
stos
or
cld
mov
cmps
sbb
push
inc
repnz
mul
fild
(bad)
test
inc
jmp
sub
fadd
cmps
loop
lods
cmps
mov
ror
dec
sub
jns
xor
sbb
cmp
sub
ror
add
cdq
je
sub
or
movs
xor
mov
scas
xchg
adc
jle
rol
or
nop
aam
mov
xor
pop
leave
cmps
rcr
push
repnz
fwait
ins
mov
les
sub
jb
cmp
mov
jo
div
and
into
mov
stos
xchg
loope
nop
mov
(bad)
(bad)
mov
aad
inc
in
stos
js
mov
cmp
add
je
lds
daa
cwde
mov
hlt
ficomp
mov
shl
jnp
pop
xchg
idiv
inc
mov
jle
jo
jmp
cwde
loop
(bad)
sbb
jp
sahf
fcom
xor
jecxz
mov
imul
cmp
out
add
in
push
iret
out
js
sub
pop
fnstsw
mul
sti
fs
mov
add
and
push
mov
dec
and
loope
mov
or
pop
push
mov
outs
push
out
icebp
mov
leave
and
movs
jno
cld
or
cs
(bad)
mov
call
or
int
pop
ins
sbb
mov
sbb
outs
xchg
mov
jg
jmp
sbb
cmp
inc
adc
iret
mov
or
call
imul
or
mov
stos
mov
adc
retf
jl
mov
scas
call
into
sahf
push
mov
je
pop
pop
push
push
push
fnop
and
and
(bad)
dec
pop
dec
jb
test
loopne
jno
bound
es
test
ret
inc
(bad)
jb
jge
dec
pop
les
mov
mov
aad
int3
sub
mov
bound
jl
jns
enter
inc
scas
(bad)
out
xchg
jge
mov
lock
lods
cwde
and
scas
dec
cmp
adc
lds
jae
jl
fild
aaa
pop
fs
ds
inc
dec
mov
or
sub
jb
test
lods
push
mov
pushf
and
shl
and
mov
push
bound
cdq
sbb
mov
push
bound
jne
pop
or
ds
iret
push
scas
add
add
outs
and
in
das
scas
test
push
push
out
pop
pop
and
into
int3
and
jmp
push
and
call
push
jnp
adc
int
lahf
scas
mov
push
mov
fiadd
sub
inc
retf
mov
shl
pop
addr16
cmp
ds
push
(bad)
das
bound
sti
xchg
ss
sbb
fistp
sahf
bound
mov
sub
inc
(bad)
and
add
hlt
call
outs
lods
in
sahf
adc
sub
in
fisub
mov
out
sbb
popa
dec
data16
dec
cmps
sbb
inc
mov
push
mov
jp
loop
shl
aad
outs
in
pop
retf
and
fdiv
sbb
jb
mov
and
cmovns
jno
imul
loope
int3
sbb
push
mov
jmp
mov
out
mov
dec
dec
push
ror
add
outs
in
jl
lea
inc
or
aam
cmc
mov
jmp
mov
xchg
lahf
inc
sub
or
cld
or
fmul
jae
sbb
pop
and
pop
and
xchg
(bad)
ja
mov
hlt
out
out
jno
mov
sub
xchg
bnd
inc
dec
nop
imul
aaa
mov
adc
push
popa
mov
lea
lock
sbb
inc
or
cmps
(bad)
adc
sbb
(bad)
cdq
and
pop
movs
jg
(bad)
pop
repz
loopne
gs
sub
lea
mov
ror
(bad)
pop
dec
fwait
repnz
mov
sar
adc
inc
sub
mov
jp
inc
mov
add
int3
add
pop
call
pushf
pop
xchg
jno
outs
push
or
shl
lods
in
or
add
add
xchg
sub
mov
arpl
mov
daa
jns
int
neg
mov
mov
(bad)
stc
mul
cmp
xchg
xchg
call
cmp
adc
popa
inc
push
imul
inc
(bad)
bound
sub
not
adc
nop
daa
mov
repz
inc
and
dec
jmp
scas
inc
xchg
mov
dec
lods
int
xchg
sti
xlat
inc
retf
das
mov
inc
sub
and
ds
jge
dec
sub
push
in
pop
movs
mov
xchg
ret
dec
and
and
dec
arpl
not
test
xor
ret
out
das
adc
inc
cmp
test
daa
cli
fsubr
sub
icebp
or
and
jno
loopne
xor
sub
lea
add
or
loope
jl
dec
hlt
inc
(bad)
idiv
sbb
xchg
xchg
mov
shl
jge
test
and
xchg
sub
rcr
add
rol
not
(bad)
(bad)
pop
cld
enter
adc
in
int3
sbb
int3
lds
jmp
dec
push
sbb
mov
dec
cmp
scas
lods
and
mov
xor
movs
cmc
aam
nop
dec
pushf
loop
jge
aas
mov
mov
ds
jbe
jb
push
dec
sti
jns
or
push
xor
imul
ins
mov
mov
push
ins
lods
xchg
call
jb
in
and
scas
pop
adc
das
cwde
aam
out
sahf
sub
mov
stc
sahf
push
in
push
add
loope
dec
pop
clc
mov
cmp
pop
aad
mov
int
jle
retf
outs
inc
fsubr
dec
iret
xchg
test
adc
jmp
add
out
cli
loope
in
not
inc
xor
push
mov
inc
iret
movs
inc
in
mov
mov
add
pop
dec
int
inc
dec
cdq
xchg
in
stos
adc
jge
(bad)
js
mov
scas
pop
pop
std
cwde
aad
adc
aad
xchg
pop
mov
and
inc
mov
cmps
pop
ror
and
pop
mov
inc
mov
jns
mov
pop
(bad)
ins
fcomp
cmps
lods
jmp
cmp
fcmovbe
jne
pop
jl
jmp
sub
mov
les
enter
(bad)
ret
cmp
mov
call
mov
pop
ror
mov
push
leave
mov
jecxz
mov
inc
mov
add
inc
test
sbb
ins
push
xor
inc
in
(bad)
adc
call
adc
popf
xor
stos
cmp
and
jnp
inc
xchg
cdq
sbb
cmc
pop
mov
cmp
inc
sub
ret
xchg
xor
ret
call
imul
push
dec
adc
aad
sbb
mov
daa
inc
test
or
loop
ja
dec
(bad)
cdq
adc
or
push
hlt
fld
cmp
dec
and
inc
nop
or
push
mov
in
leave
pop
leave
lods
inc
xchg
adc
pop
xor
mov
jbe
retf
pop
push
push
sbb
sub
adc
dec
mov
sub
dec
aas
mov
inc
popa
aaa
popf
icebp
test
fiadd
push
sub
push
js
xchg
xor
fucomp
sbb
pop
pop
mov
out
jae
cmp
jmp
cmp
out
mov
test
scas
ror
jae
mov
cdq
jmp
mov
sbb
adc
mov
mov
(bad)
fidiv
xchg
jmp
jp
xchg
popf
leave
retf
jg
sti
jp
inc
movs
scas
pop
push
jne
and
pop
mov
pop
jp
test
aaa
iret
test
push
cmp
nop
fucomp
push
pop
dec
push
outs
sub
push
and
pop
pop
push
retf
in
ins
xchg
mov
dec
int3
retf
sub
loopne
out
or
adc
pop
mov
popf
and
icebp
cmp
sahf
pop
push
pop
daa
push
call
jge
and
mov
push
pop
fist
dec
in
(bad)
retf
es
mov
stos
xchg
push
pop
inc
xchg
sub
inc
sub
(bad)
pop
cmc
into
leave
cmps
pop
inc
jmp
(bad)
xchg
or
jmp
add
pop
sahf
mov
jns
push
sbb
fist
hlt
sbb
push
sbb
mov
add
js
mov
add
in
movs
sbb
add
ins
aam
xchg
push
bound
sbb
push
mov
lds
add
mov
gs
xchg
xor
call
inc
xor
xchg
and
fcmove
in
xor
repz
push
and
pop
in
add
jnp
retf
pop
in
lods
js
fmul
or
fld
outs
push
mov
out
mov
lahf
dec
mov
mov
les
and
xor
(bad)
(bad)
test
out
clc
inc
sub
test
out
dec
ret
(bad)
sbb
pop
sbb
in
retf
add
nop
shr
pop
sub
sbb
stos
stc
loope
sbb
adc
jns
sub
sbb
xchg
popa
aaa
jle
out
stos
jmp
gs
push
inc
mov
pop
pusha
popa
js
scas
jp
int3
nop
adc
mov
cmp
xchg
sbb
enter
aas
mov
jle
(bad)
pop
aas
jge
xchg
fisub
nop
inc
fsubp
lahf
xor
popa
leave
fisubr
cmc
sti
(bad)
xchg
sub
test
push
popf
push
adc
add
aad
ror
es
jb
shl
mov
xchg
je
or
mov
movs
jg
shl
sbb
std
mov
pop
test
cdq
imul
call
sbb
jne
and
add
test
jmp
mov
pusha
mov
dec
popa
leave
fist
fist
xchg
push
pop
in
fdivr
bound
in
push
add
add
aas
and
fwait
xchg
loop
retf
shl
pop
push
or
dec
fistp
jp
add
cmps
fcmove
cs
cli
movs
cmp
adc
icebp
inc
imul
dec
lods
fmul
pop
inc
movs
rol
cmp
std
sub
lea
or
popa
push
push
pop
fild
inc
inc
in
and
or
dec
push
mov
movs
ja
aas
xchg
inc
jecxz
jmp
jg
sub
lds
pop
and
push
xor
inc
xor
or
mov
stc
cmp
push
cmp
je
loop
add
mov
aad
sbb
push
mov
cmp
mov
mov
bound
repnz
popa
mov
or
ret
sub
cmp
or
in
mov
aam
clc
pop
lods
mov
pop
mov
xor
mov
pop
jg
jae
xor
inc
mov
adc
xchg
jmp
stos
test
mov
das
inc
mov
test
in
in
loop
mov
jecxz
lods
push
sahf
mov
stos
mov
bound
sahf
or
pop
mov
stos
inc
rcl
repz
inc
pop
(bad)
xor
or
push
jmp
sti
sub
mov
mov
mov
sbb
sbb
inc
popf
jbe
iret
pushf
dec
popf
push
push
repz
pop
cmp
lods
shl
xchg
lods
js
lock
xchg
inc
into
mov
test
test
std
dec
sub
icebp
in
dec
mov
pop
pop
jb
mov
or
pop
push
add
dec
xor
mov
and
cmp
dec
mov
aas
pop
add
dec
adc
int3
or
pop
or
xchg
jo
pop
call
fiadd
jns
pop
jno
or
cmp
xchg
lods
xchg
pop
sub
das
inc
xor
push
bound
pop
adc
iret
xchg
add
out
xchg
sbb
jmp
xor
xor
fist
cdq
and
fwait
and
cmp
fstp
mov
retf
inc
enter
mov
xor
push
test
jecxz
sbb
scas
add
call
loope
(bad)
aad
add
push
shr
cli
inc
cmp
(bad)
ss
mov
adc
and
imul
fcmovnbe
fstp
push
rcr
outs
push
fldcw
xlat
retf
aas
jge
aaa
mov
push
inc
loopne
pop
sub
fcomp
mov
xchg
imul
add
mov
cmps
outs
xchg
xchg
popf
add
pop
pop
jg
cmp
mov
mov
aad
or
ds
xor
push
or
sahf
iret
inc
xchg
pop
sbb
xchg
icebp
jmp
jmp
ins
into
add
xchg
pop
in
outs
and
dec
jl
pop
xor
shl
mov
aam
outs
(bad)
xchg
loop
ss
vmovdqa
mov
and
sahf
adc
cmps
jl
cdq
hlt
cdq
fucomi
iret
mov
cmp
mov
push
xchg
in
and
out
jns
add
sub
jae
push
gs
add
out
rol
popf
pop
icebp
call
adc
dec
int
lock
and
push
jge
icebp
ds
call
data16
inc
cmp
into
mov
inc
sbb
fsub
movs
jne
cmp
repz
(bad)
mov
in
mov
mov
pop
mov
and
mov
mov
lods
mov
outs
mov
xor
mov
add
mov
pusha
xchg
sti
push
addr16
xchg
sar
das
mov
call
jnp
mov
pfmul
fs
push
xchg
fld
(bad)
in
cld
add
sub
jle
fbstp
ss
stc
lods
xchg
outs
mov
lea
in
(bad)
cld
and
xchg
sbb
dec
test
push
cs
test
cmc
mov
out
pop
adc
sahf
stos
mov
or
pusha
inc
push
add
mov
mov
mov
iret
loopne
repz
mov
sbb
sti
mov
cmp
mov
popf
jbe
jle
cwde
pop
aad
xchg
xchg
sub
rol
adc
(bad)
(bad)
fadd
sub
sti
mov
imul
or
and
add
es
shr
jp
lods
jne
push
adc
bound
stos
(bad)
cld
test
out
imul
aad
in
ret
cmp
ins
ret
sbb
pop
aas
push
cmp
lea
add
inc
and
pushf
jno
int3
inc
test
add
and
outs
xlat
sub
sbb
mov
mov
inc
out
out
pand
mov
scas
fdivr
jnp
xchg
fistp
(bad)
mov
mov
ja
inc
inc
and
xchg
ret
stos
pop
or
mov
pop
xchg
mov
mov
mov
stc
xor
gs
fldcw
mov
fimul
xchg
imul
sar
mov
jne
arpl
mov
and
cld
aas
and
pop
sub
in
cmp
dec
(bad)
dec
add
(bad)
xchg
lahf
add
cmps
add
sub
(bad)
loopne
inc
mov
loope
mov
into
ja
icebp
out
cmp
inc
int3
je
or
xchg
or
mov
cli
ret
sbb
mov
pop
cs
cmp
int
fdivr
push
push
pop
addr16
and
xchg
cmp
stc
xor
div
in
sub
mov
pushf
mov
cmp
pop
sar
or
pop
mov
idiv
mov
add
stos
ror
fldcw
add
out
in
dec
retf
xchg
add
into
dec
in
ss
(bad)
mov
pop
(bad)
adc
cdq
adc
movs
movs
fs
sbb
jno
jp
jne
or
push
test
pop
sbb
popf
push
cli
in
addr16
dec
dec
cmp
or
gs
rcl
add
mov
sti
mov
or
mov
ret
mov
cdq
mov
cld
cli
repz
nop
jns
push
test
fmul
ror
rcl
stc
movs
out
loope
cld
and
jl
lahf
in
jns
call
sub
jo
jmp
adc
stos
or
jo
mov
xor
mov
cmp
stc
xchg
mov
call
cmp
bound
dec
adc
jp
jne
and
js
cld
int3
mov
es
push
loope
add
jb
lds
xchg
mov
shr
pop
jns
iret
retf
lds
xor
(bad)
aad
cld
bound
cmp
mov
sbb
inc
loop
in
dec
inc
in
shl
add
or
sub
mov
loop
xchg
mov
or
out
dec
in
or
(bad)
sbb
cdq
mov
mov
xchg
jae
into
jmp
xor
or
jno
mov
mov
pop
fisubr
fcomp
dec
push
cmp
push
add
div
mov
sbb
inc
adc
push
mov
cmps
xor
fiadd
scas
mov
lahf
outs
popf
mov
in
sub
out
jmp
mov
clc
ror
pop
ds
repnz
add
ficom
jle
inc
mov
push
(bad)
cdq
scas
scas
arpl
or
xchg
das
add
cmp
jmp
push
push
mov
outs
and
cmp
repz
push
add
push
sbb
cdq
mov
inc
xor
xchg
pop
push
ret
enter
in
inc
(bad)
int
mov
lods
pop
xchg
xor
cmps
adc
cld
out
leave
jns
sub
mov
jnp
fdiv
inc
pop
push
or
or
mov
mov
icebp
popa
ds
mov
daa
adc
mov
in
mov
outs
cdq
test
jbe
add
push
fs
xchg
inc
fdivr
mov
fwait
shl
xchg
sub
push
vdivps
cmp
outs
inc
push
and
cwde
arpl
xchg
test
fnstenv
jmp
or
ja
ja
not
or
stos
iret
ins
scas
add
mov
imul
fwait
sub
stc
xchg
sub
add
js
sbb
leave
loop
mov
mov
jge
cs
lds
aas
or
(bad)
loopne
sub
rcl
lahf
arpl
cmp
outs
stc
ret
push
jge
imul
jp
mov
(bad)
repnz
or
out
add
repz
gs
mov
movs
daa
je
adc
mov
loope
sbb
dec
cs
pop
call
cmp
aas
ret
clc
and
mov
ror
div
adc
adc
into
fidivr
inc
cs
pop
shr
push
std
add
test
les
push
clc
ror
test
movs
push
mov
xor
int3
mov
add
dec
push
shl
add
das
mov
pop
mov
in
push
pop
or
add
cmp
lock
pop
in
ins
xchg
rcl
mov
mov
gs
(bad)
dec
xchg
cwde
sti
cli
rcl
inc
inc
(bad)
mov
push
scas
test
mov
sub
mov
xchg
sbb
push
xlat
out
lea
lods
data16
in
cli
xchg
test
in
sbb
out
pop
mov
pop
mov
or
xor
push
rcl
(bad)
sbb
cli
cmp
(bad)
arpl
add
adc
mov
dec
or
cmp
inc
les
cmp
dec
clc
into
das
jno
std
aad
out
pop
mov
mov
enter
(bad)
rol
jl
dec
mov
xlat
out
xchg
inc
or
add
ins
pop
js
or
shr
test
mov
lea
sub
cmc
mov
ret
out
cs
aam
xlat
mov
dec
mov
pushf
cmps
mov
xor
xor
mov
out
xor
and
sub
jl
jl
mov
jp
mov
mov
in
jnp
scas
loope
hlt
inc
xchg
inc
mov
pop
mov
inc
pop
pop
cmp
imul
icebp
mov
out
add
adc
ret
sub
add
and
sbb
jns
xchg
mov
jne
mov
pusha
sub
cmp
jg
cmps
adc
mov
mov
ins
sbb
mov
mov
push
shl
xchg
popf
call
shl
not
lods
lea
jb
das
loop
call
test
jle
in
and
test
mov
loopne
jl
lock
outs
loope
cli
cmp
cmc
xor
push
stc
adc
iret
adc
mov
mov
xchg
je
bnd
(bad)
sub
call
gs
loop
(bad)
stc
retf
sbb
pop
sub
dec
or
sub
out
in
and
push
pop
fistp
xor
xor
popf
and
sti
in
pushf
daa
repz
dec
or
sbb
daa
sbb
imul
push
(bad)
mov
loop
in
leave
and
pop
ss
add
cmps
dec
pushf
scas
or
mov
repnz
adc
sbb
pop
outs
sub
in
mov
mov
in
mov
(bad)
(bad)
dec
fild
scas
(bad)
jbe
sbb
mov
repz
adc
jns
in
imul
xor
mov
repz
push
int3
dec
in
icebp
loope
hlt
popa
neg
lods
cld
jae
mov
cmp
sbb
ds
std
retf
push
mov
inc
stos
in
test
jmp
dec
jbe
mov
in
int
in
mov
iret
sti
jno
inc
iret
xchg
std
enter
dec
and
iret
inc
xlat
dec
fbld
addr16
inc
outs
in
js
mul
xor
popa
daa
vcomisd
xchg
fld
xor
mov
data16
in
outs
fisub
shl
or
shl
cmc
dec
sbb
call
and
aam
pusha
sub
mov
pop
into
sbb
sbb
mov
mov
data16
cld
cmp
and
cld
test
push
push
pop
out
ret
out
test
aaa
mov
pop
rol
mov
pop
test
jne
pusha
das
sbb
jbe
mov
mov
lock
push
push
add
fstp
or
fwait
xchg
fbld
and
ret
loop
pop
sub
sub
inc
mov
pop
(bad)
clc
push
or
xchg
sub
cdq
jl
enter
mov
push
in
push
ror
arpl
push
psubsb
jecxz
push
outs
fld
jge
jl
fidiv
jle
pop
enter
rcr
adc
mov
sahf
mov
add
movs
jmp
loope
pop
cmp
sbb
movs
call
ins
imul
push
(bad)
and
cs
mov
pop
sub
hlt
dec
retf
mov
inc
adc
fldenv
mov
or
enter
mov
cwde
call
jmp
ins
popf
adc
sbb
addr16
js
mov
sub
inc
push
jg
je
add
cwde
mov
test
ficomp
mov
in
aad
lods
add
(bad)
imul
in
fcmovu
jmp
cmp
jmp
and
fsub
jnp
jp
jl
and
hlt
inc
call
mov
push
sbb
jmp
scas
pusha
inc
ficomp
xchg
and
or
and
je
xchg
push
adc
(bad)
jb
ins
clc
aas
loopne
outs
dec
sahf
jecxz
ds
and
lods
sub
(bad)
push
bound
scas
movs
pop
aad
pushf
pop
xor
ffree
dec
mov
xchg
les
xchg
cmp
out
add
add
push
mov
xor
movs
jbe
add
mov
repz
adc
push
in
jg
stc
inc
and
fwait
xchg
std
add
ja
icebp
iret
adc
inc
shr
and
cwde
fbstp
dec
jno
add
jbe
xchg
(bad)
int3
ds
and
ds
hlt
add
mov
enter
pushf
repnz
inc
jl
inc
loop
daa
cmp
xor
jns
cmp
ins
call
mov
xchg
std
ret
out
retf
sar
in
or
test
ret
outs
inc
int3
mov
lds
inc
inc
sub
stos
sar
jo
das
cli
icebp
aaa
mov
add
ret
aaa
loope
inc
mov
or
xchg
fcmovb
stc
xor
and
inc
adc
push
mov
or
cmp
fs
aam
rol
call
dec
cdq
xor
imul
int
(bad)
mov
dec
out
push
call
je
mov
mov
call
pop
push
jbe
jge
cmc
retf
sti
adc
and
mov
outs
push
es
jo
xchg
jbe
dec
repnz
pusha
popf
out
mov
dec
mov
int3
ins
push
xchg
vdivsd
push
loopne
and
out
rcr
sbb
imul
inc
or
or
xor
es
pusha
add
call
aaa
idiv
xor
je
test
lods
call
(bad)
pop
rol
add
mov
out
xchg
dec
arpl
sub
aam
loope
jg
jge
add
in
int3
jle
mov
sub
pop
in
int3
pushf
inc
mov
dec
jmp
je
add
nop
in
jg
or
pop
sbb
push
cld
pop
ss
xchg
sbb
ret
stos
push
loopne
and
pop
cmp
fnstsw
lds
jmp
loop
push
movs
fsubr
mov
mov
xchg
cmp
cmp
shl
jb
xchg
stos
mov
add
inc
inc
lods
pop
(bad)
sbb
lods
outs
jecxz
dec
(bad)
in
mov
scas
add
mov
pop
add
mov
mov
jle
rcl
mov
loop
xor
das
lock
mov
mov
cli
dec
cmps
je
in
cli
sub
add
sbb
dec
inc
sub
cld
add
je
dec
jbe
cmp
adc
bound
pop
mov
or
xchg
lock
jmp
inc
dec
int3
cwde
jmp
sbb
leave
imul
jbe
add
pop
mov
mov
add
mov
push
lea
shl
or
bound
(bad)
repz
jmp
xor
call
imul
jl
icebp
pop
inc
mov
ds
in
push
add
fmul
je
sub
scas
sbb
dec
mov
stc
gs
ret
adc
cmp
cmps
les
xchg
push
or
xchg
test
fdivr
aam
ret
frstor
pop
inc
jno
nop
daa
xor
add
enter
arpl
fcmovb
mov
pop
xchg
leave
inc
shl
(bad)
sahf
pop
les
ins
inc
sub
mov
ja
lock
nop
mul
int
inc
into
inc
sbb
cld
sar
or
movs
aad
mov
ret
mov
bound
int3
lea
gs
shl
add
adc
(bad)
scas
fdivr
inc
inc
xor
jge
fdivr
adc
xchg
popa
js
sbb
pop
sahf
or
add
aas
retf
icebp
xor
push
out
cmps
mov
pusha
mov
mov
jge
shl
cmps
jae
fsub
mov
(bad)
icebp
cmp
adc
mov
dec
lahf
fwait
cmp
out
je
pop
int
xchg
mov
ror
add
call
and
jno
pop
dec
aas
sbb
add
daa
ror
ret
cmp
rol
frstor
popa
fst
adc
mov
in
imul
mov
adc
push
repz
inc
daa
push
nop
inc
shl
xor
or
test
fist
xor
pushf
enter
sbb
or
imul
inc
imul
xlat
adc
mov
popa
jnp
outs
in
std
daa
(bad)
sub
add
adc
in
addr16
add
push
dec
adc
enter
pop
fld
ja
cmp
stos
mov
fcomi
pop
push
xchg
jne
adc
mov
aas
sub
cmp
sub
in
es
inc
mov
std
push
xchg
es
into
sub
retf
test
movs
and
rcr
mov
mov
sar
fdivrp
dec
retf
lods
dec
dec
out
push
in
pushf
sti
aam
mov
daa
mov
mov
addr16
or
(bad)
imul
mov
xor
int
in
jg
mov
push
out
js
icebp
push
sub
and
not
xor
call
xor
clc
ficomp
addr16
jl
ror
out
enter
scas
fld
ficomp
sbb
fidivr
pop
(bad)
enter
push
mov
cmp
xchg
test
pop
sub
dec
pop
adc
aad
repz
das
(bad)
mov
cmps
stos
add
cmc
fcmovbe
ror
lods
std
sbb
cmp
(bad)
in
in
inc
fst
adc
mov
cmps
outs
loope
pop
popa
jae
jno
push
dec
scas
pop
inc
sub
cmp
push
jg
in
mov
jmp
xor
fsub
push
pop
loopne
jne
xor
xchg
test
mov
test
in
push
outs
and
pop
test
test
and
add
cs
and
test
lods
dec
push
mov
pop
and
add
dec
push
mov
push
mov
adc
loope
mov
jmp
retf
jp
xor
xor
mov
dec
xor
adc
pop
dec
xor
fs
movs
out
or
fs
xchg
or
or
xlat
fnstenv
pop
mov
(bad)
out
ja
call
jb
mov
mov
cmp
sub
into
dec
std
push
pop
mov
outs
lahf
sbb
hlt
gs
add
push
push
aam
cli
sub
sti
loop
mov
test
xor
cmp
xchg
pop
jp
cdq
cmp
mov
aaa
in
into
inc
sbb
add
rol
dec
retf
imul
add
jmp
xor
adc
les
les
push
or
ins
fisttp
rcl
iret
mov
xor
sbb
and
(bad)
pop
adc
adc
xor
add
add
adc
fcomp
test
mov
icebp
loope
rcr
test
add
lahf
inc
shl
ret
or
xchg
cmp
in
(bad)
sbb
icebp
cli
push
cmps
lds
pushf
outs
and
jle
inc
lds
pop
fisubr
add
sbb
xor
stos
or
mov
loopne
mov
push
cdq
sbb
sbb
in
stos
pop
inc
bound
xchg
(bad)
out
lock
daa
sbb
inc
or
adc
cmp
or
test
sbb
sbb
gs
sbb
add
stos
repnz
loopne
sbb
rcr
hlt
cmovae
std
popa
inc
push
(bad)
movs
popa
fisttp
xchg
inc
jmp
add
push
pop
mov
push
stos
push
mov
data16
punpckhwd
mov
sub
into
(bad)
outs
dec
dec
leave
xchg
pushf
xor
cmps
mov
jecxz
out
xor
mov
dec
pop
push
pop
jmp
retf
fs
push
pop
loopne
shl
mov
or
mov
repnz
pop
ins
call
sbb
nop
pop
xchg
pop
bound
ins
(bad)
cmps
test
cmps
cmp
cmp
add
push
pusha
cmp
adc
popa
pop
scas
wbinvd
add
jbe
ror
(bad)
in
pusha
mov
xor
dec
out
pop
xchg
fdiv
push
sbb
ss
repz
in
jmp
lock
sahf
jae
push
jnp
popf
xchg
and
jge
iret
rol
adc
test
adc
popa
(bad)
inc
test
out
shr
sti
stc
(bad)
pop
add
imul
mov
les
(bad)
ins
xor
jle
std
sub
(bad)
mov
sti
inc
or
sbb
test
pop
mov
fisub
fcomp
push
mov
cmp
mov
les
xchg
ret
shl
test
pop
hlt
outs
jno
pop
lods
retf
sub
push
movs
dec
mov
cli
add
dec
loopne
ins
xchg
push
ins
(bad)
mov
(bad)
ja
mov
fnstsw
mov
push
push
popa
hlt
int3
xchg
add
in
jecxz
pop
test
sbb
inc
mov
sub
mov
inc
(bad)
cli
mov
or
shr
pop
mov
retf
out
add
rep
mov
stc
or
(bad)
xor
int
je
lahf
or
idiv
in
movs
and
shl
jecxz
or
xor
cmp
retf
mov
ins
in
daa
and
mov
test
inc
pop
mov
lock
push
mov
cmovns
retf
not
mov
mov
sbb
sub
test
fcmove
cdq
sub
aad
mov
dec
adc
arpl
iret
mov
adc
jecxz
mov
inc
jae
in
mov
push
push
daa
add
repnz
cld
stos
and
lds
inc
push
mul
inc
dec
mov
push
add
imul
aad
out
xchg
ja
out
loope
mov
outs
call
out
pop
pop
into
lods
in
push
jmp
pusha
(bad)
out
push
jae
mov
sub
test
add
aas
call
pop
add
xchg
dec
xor
retf
xchg
stos
jno
mov
xchg
in
and
jo
xchg
movs
xchg
ins
dec
cmp
neg
idiv
jp
jb
loop
adc
in
shl
push
or
popa
add
mov
dec
imul
test
mov
test
xchg
icebp
sub
push
inc
neg
nop
mov
and
mov
and
test
push
cmp
sbb
aas
loop
inc
pop
jns
movs
push
push
icebp
movsx
dec
pop
out
inc
popa
sbb
xchg
jnp
mov
jmp
popa
jl
dec
xor
cmp
mov
sar
adc
push
mov
add
mov
sbb
sbb
mov
leave
push
retf
mov
mov
cmps
dec
movs
xchg
test
lock
push
fisttp
pop
cmp
and
adc
mov
aas
popf
or
fsub
cmp
sbb
arpl
sub
out
sbb
lock
test
push
pop
test
cmps
xor
ror
imul
cmp
add
dec
pop
loopne
cld
pop
call
pop
bound
mov
pop
adc
mov
sub
out
and
sub
fadd
idiv
mov
push
adc
push
sub
std
icebp
push
sar
scas
cmp
data16
stos
test
add
pusha
sub
pop
xchg
retf
fadd
push
out
int3
xchg
jno
ds
push
push
jmp
iret
dec
call
jecxz
mov
fwait
xchg
mov
sbb
in
mov
add
dec
dec
pop
mov
mov
aas
retf
xchg
pusha
push
(bad)
cs
cmp
mov
sbb
pshufw
cmps
cmp
out
ins
mov
jmp
daa
fcmovu
pop
sbb
xor
xchg
mov
mov
mov
lds
mov
scas
push
sahf
cld
gs
xchg
add
popf
mov
pop
loopne
std
xlat
jns
push
aam
outs
daa
retf
cmp
pop
xlat
mov
push
and
pop
jae
jmp
cmp
mov
bound
std
lds
add
mov
inc
sub
leave
test
leave
pop
lea
cld
xchg
xchg
pusha
pop
dec
add
xchg
sub
add
in
mov
les
imul
cmc
pushf
fcom
push
inc
jle
xor
and
fistp
mov
mov
maxps
xor
aad
dec
ins
or
mov
mov
pop
retf
xchg
inc
push
pop
jmp
int3
inc
ror
mov
push
or
pop
cmp
outs
lock
push
cmp
sub
jmp
not
lods
cmp
pop
or
ins
out
pushf
mov
cld
or
mov
and
or
xor
jg
cdq
mul
push
sub
jmp
add
call
jg
inc
(bad)
dec
popa
or
cmp
cmp
and
xor
jmp
hlt
mov
mov
sti
mov
jecxz
ds
inc
in
bound
mov
and
mov
shl
mov
ins
(bad)
in
(bad)
stc
jne
and
push
pop
sbb
mov
cmps
test
pushf
jb
xor
mov
out
nop
out
(bad)
repnz
mov
or
fdivr
jmp
add
mov
icebp
ins
cmp
out
and
jp
ror
stos
cmp
inc
xchg
pop
mov
mov
mov
aad
dec
jmp
dec
imul
fdivr
sub
push
inc
in
pop
lea
cdq
aas
add
in
out
mov
inc
pop
inc
daa
adc
stos
add
ror
xchg
jmp
push
mov
push
adc
jns
loopne
lds
sbb
cmps
inc
pop
mov
outs
shl
pop
je
test
mov
sbb
cmp
in
mov
and
retf
cmc
repnz
add
sub
push
push
movs
ficomp
cmc
sahf
in
shl
sbb
add
inc
cdq
fwait
push
inc
ja
cmp
frstor
loopne
fdivr
leave
ror
mov
xchg
and
jg
mov
loopne
mov
repz
mov
jg
in
cmp
pop
sbb
fwait
dec
jl
call
sbb
push
imul
adc
add
out
stos
pop
movs
shl
push
dec
and
and
xor
and
inc
std
mul
jmp
dec
push
xlat
push
lea
(bad)
cwde
dec
fisttp
call
pop
rol
out
repnz
pop
in
jl
add
push
lea
jne
imul
or
(bad)
retf
and
gs
cmc
in
rcl
xor
xchg
push
lock
dec
addr16
push
mov
fdiv
int
dec
mov
xchg
jns
loopne
adc
or
mov
jecxz
jg
add
pusha
in
ins
mov
das
fsubr
or
ret
out
and
push
jp
sbb
or
loop
jp
adc
push
or
out
loope
inc
mov
stc
mov
add
sahf
icebp
ffreep
jmp
les
icebp
int
mov
push
and
shl
stos
mov
mov
cmc
cmps
into
xor
setnp
jns
pop
and
mov
movs
repnz
dec
adc
int3
dec
imul
jle
xor
ud1
sbb
test
in
dec
mov
dec
dec
and
ds
icebp
dec
inc
das
dec
inc
pop
leave
and
ss
cmp
mov
cmp
fst
es
or
sbb
and
xor
imul
pop
in
sub
pop
push
and
jo
mov
dec
fmul
stc
pop
push
mov
mov
and
(bad)
mov
lods
add
mov
ins
jmp
jge
jmp
adc
jp
mov
movs
(bad)
add
retf
jle
mov
scas
xchg
adc
mov
adc
js
sbb
or
das
mov
dec
out
in
dec
sub
or
rol
loop
jo
or
xchg
jl
adc
pusha
push
fistp
test
jp
retf
pop
lahf
rcr
mov
inc
sbb
pop
fwait
aaa
push
ds
ret
inc
jle
test
xor
in
sbb
sub
not
xchg
(bad)
scas
xor
adc
(bad)
pop
dec
(bad)
push
or
ret
mov
frstor
in
xchg
cmc
and
add
leave
out
jno
std
jecxz
push
cmp
gs
sbb
mov
pop
hlt
mov
jge
loop
cmp
push
jg
xchg
ins
xor
ror
sahf
fdiv
mov
bound
lds
psrad
imul
or
lea
lds
fldcw
aad
enter
xor
(bad)
das
hlt
fcmovbe
scas
mov
sub
aas
xchg
and
imul
or
push
jo
cmps
inc
pop
scas
push
mov
or
add
jb
test
outs
xchg
leave
xchg
inc
jbe
in
enter
push
or
in
mov
mov
daa
ins
mov
call
rcl
sub
or
data16
and
xor
mov
mov
pushf
sub
js
cwde
mov
imul
jae
stos
(bad)
adc
sbb
cdq
jg
out
je
push
imul
xor
rol
adc
sub
mov
iret
sub
cmp
push
imul
loopne
fisub
xor
fs
add
cmp
test
imul
xor
out
push
mov
push
(bad)
mov
jae
mov
dec
pop
sub
adc
sar
(bad)
or
fisttp
test
clc
movs
xor
sahf
dec
fsubr
push
rcr
sahf
fstp
push
cvtps2pi
pop
pop
ss
xchg
loopne
mov
or
mov
fiadd
je
test
clc
rcr
es
out
jne
mov
dec
inc
in
cld
mov
(bad)
retf
add
sub
cmp
cmp
sub
jmp
(bad)
in
data16
push
test
call
test
dec
mov
in
int
pop
xor
jae
ds
mov
lods
sahf
mov
int
jne
shl
jae
or
jmp
push
mov
mov
fdiv
cmps
and
mov
loopne
pusha
movs
arpl
loopne
jp
into
retf
outs
hlt
mov
adc
xchg
sub
lea
push
(bad)
fwait
jle
push
cld
xchg
sub
loopne
inc
sub
jae
das
xlat
inc
push
and
or
lods
imul
into
loopne
inc
mov
pop
fsubr
inc
ins
cwde
stos
dec
xlat
outs
pop
in
dec
(bad)
pop
inc
inc
adc
push
and
(bad)
sbb
es
mov
movs
cmps
outs
cmp
jge
push
aaa
fs
xor
cdq
(bad)
ss
cli
push
push
jmp
lods
mov
and
fnstcw
fwait
mov
fimul
int
mov
mov
inc
call
scas
pop
aam
mov
and
(bad)
xor
inc
in
mov
mov
loop
or
mov
fbld
pop
movs
inc
in
pop
jns
ss
cs
scas
xlat
jmp
xchg
fs
and
xor
pop
aaa
jp
mov
jnp
rol
into
lock
push
fld
cmc
fdiv
test
pop
hlt
movs
in
or
push
arpl
cmp
fsqrt
mov
dec
add
pop
mov
pop
adc
sub
push
cmp
jb
je
xor
mov
movs
ins
sbb
pop
stos
jl
jne
add
cmp
push
adc
pop
movs
jg
lods
dec
dec
mov
dec
imul
push
jg
add
rcl
jnp
lock
psllw
sar
fcmovu
inc
mul
in
call
scas
pop
cmp
lods
mov
mul
xchg
jecxz
pop
mov
or
adc
and
sub
stos
or
pop
aad
stos
bound
das
inc
test
popf
mov
out
retf
mov
add
ret
leave
mov
inc
add
inc
or
xor
out
cmp
pop
(bad)
loopne
cs
test
(bad)
in
push
cmc
pop
push
sub
jp
mov
ds
add
adc
jo
cmp
mov
jae
clc
jge
jns
cdq
inc
fisubr
add
pop
lods
push
mov
push
test
inc
retf
stos
push
xchg
je
outs
and
inc
mov
out
or
test
and
aad
xor
cli
inc
bound
adc
cmp
mov
imul
(bad)
out
arpl
xchg
es
sbb
movs
dec
mov
sub
retf
add
faddp
jl
outs
int
test
je
mov
pop
inc
test
sub
idiv
js
jmp
pushf
scas
leave
pop
mov
mov
cmc
sbb
xor
mov
div
mov
cmp
ss
jle
fisttp
addr16
bound
retf
ja
clc
lock
fimul
push
dec
out
into
out
popf
sti
sbb
mov
xor
fstp
out
jmp
xor
sbb
shl
add
sbb
xchg
rol
call
aam
add
ja
nop
sub
cdq
ret
pop
xchg
dec
pop
and
mov
push
repz
rol
scas
(bad)
dec
mov
popa
push
jmp
sub
cmp
inc
inc
mov
out
pop
push
cli
jmp
xor
push
sub
sbb
ror
(bad)
xchg
rol
gs
pushf
cmp
fst
(bad)
outs
scas
mov
fcmovbe
add
mov
cmps
lahf
inc
cld
mov
inc
inc
jecxz
inc
in
lea
mov
or
pop
xchg
out
pop
jb
scas
jecxz
jl
push
std
lea
xchg
nop
pop
mov
cmps
shl
cmps
xlat
pop
adc
sbb
(bad)
repz
mov
loop
mov
std
jmp
jb
sahf
dec
fidiv
sub
loopne
aad
sbb
in
ds
mov
mov
xchg
(bad)
cdq
xor
cmps
xchg
dec
and
pop
cmp
lahf
loop
sbb
dec
and
rcr
(bad)
mov
jns
mov
sbb
fild
lahf
(bad)
aad
inc
dec
cmp
fist
xchg
clc
es
jbe
mov
mov
xchg
shl
fdivr
mov
movs
imul
daa
fs
cmp
sub
pop
rol
(bad)
cmp
inc
mov
sar
out
adc
pop
sbb
adc
inc
add
shr
cmp
mov
jmp
mov
add
jge
cli
daa
add
mov
fs
xor
push
add
fst
push
fisttp
in
mov
dec
sub
and
adc
cmps
mov
stos
mov
add
or
push
(bad)
js
dec
fsubr
adc
or
inc
jno
pushf
rcr
leave
mov
movs
push
inc
xchg
pop
xchg
xchg
sbb
dec
pop
lods
jp
dec
int
inc
and
int3
dec
push
sbb
and
or
sub
pop
fisub
out
lods
dec
std
adc
mov
movs
out
fwait
add
test
fsub
mov
lds
dec
(bad)
dec
ja
dec
cmc
test
push
mov
cdq
ins
dec
dec
test
mov
mov
mov
jmp
push
mov
retf
jge
mov
jmp
movs
cmp
stos
xchg
jle
loope
test
xor
test
add
inc
stos
add
jl
cmps
pop
mov
push
and
sub
lea
xchg
in
out
sub
or
or
(bad)
push
cmp
inc
outs
or
cmps
sub
neg
pop
jno
xor
and
sbb
sub
sbb
adc
fstp
outs
fs
push
dec
retf
ret
aas
and
mov
xchg
push
sub
mov
jns
sub
jns
cmps
sbb
sbb
daa
jnp
sub
aas
sbb
or
aam
loop
cld
jnp
pop
das
inc
jbe
push
mov
adc
(bad)
ffree
sti
push
popa
xchg
dec
aad
fbld
leave
not
in
shr
xchg
xchg
std
xchg
xor
sbb
(bad)
mov
mov
gs
nop
inc
mov
(bad)
and
mov
pop
(bad)
and
lea
jnp
popa
xlat
lock
mov
push
jp
jnp
and
sub
sub
xchg
mov
out
cmps
mov
nop
mov
xchg
cmp
sub
dec
xor
clc
push
cmp
jno
mov
cmp
mov
sbb
aaa
sti
sbb
hlt
stos
pushf
mov
not
sahf
or
and
mov
ins
push
jl
lahf
in
movs
push
fnstsw
iret
cmp
cli
jl
mov
xor
push
xchg
pop
sbb
lock
int3
ret
ror
out
adc
or
and
lea
push
and
in
xchg
xchg
(bad)
and
imul
lahf
sahf
sti
pop
outs
pop
iret
push
mov
mov
push
xchg
ins
mov
test
scas
adc
in
sub
add
pop
scas
push
or
fsubp
jecxz
xor
and
adc
shl
push
mov
cmps
cmp
icebp
pop
in
push
scas
jb
inc
push
mov
mov
pop
call
mov
daa
mov
fcmovb
xor
stos
gs
out
je
fstp
dec
imul
call
adc
jmp
pushf
jne
dec
retf
mov
movs
scas
push
out
pop
ins
add
xor
enter
push
ror
repnz
outs
jbe
pop
out
in
pop
adc
out
aaa
sub
rcr
xor
push
sbb
mov
stos
std
jl
dec
sahf
imul
push
jb
adc
pop
jnp
stc
adc
add
and
push
out
(bad)
rcr
outs
mov
addr16
push
or
je
imul
and
stc
add
mov
pop
shl
enter
cmps
and
test
or
adc
add
ret
xchg
sar
cmp
mov
cmp
jo
imul
push
jbe
pop
and
push
mov
(bad)
jmp
and
jnp
pop
and
(bad)
rcl
rdpmc
push
adc
jne
lds
lea
scas
mov
sbb
movs
out
or
cmc
sub
pop
das
push
mov
ficom
stos
and
pop
xor
ficom
xchg
jae
xchg
pop
cld
repnz
aaa
jno
cmp
cmc
rcl
push
inc
clc
data16
ja
and
daa
test
in
pop
mov
sub
sbb
mov
in
or
pusha
je
mov
xchg
aad
dec
jmp
add
arpl
push
fsubr
sahf
add
push
add
cmp
sbb
pop
add
jne
aad
mov
jp
das
int3
cmps
pop
cmps
xchg
das
dec
and
sub
pop
sbb
add
into
mov
pusha
fsubr
arpl
sub
xchg
pusha
cs
sbb
cs
leave
inc
(bad)
mov
inc
mov
mov
pop
jl
ss
or
jp
aam
daa
mov
mov
mov
fiadd
mov
mov
pop
and
sysexit
xor
mov
stos
jecxz
stos
cmp
inc
repnz
jl
rol
je
jae
aaa
arpl
ins
push
add
ss
pop
or
int3
push
fwait
pop
jmp
and
aaa
les
clc
loopne
mov
adc
add
mov
ins
in
jmp
xor
scas
test
xchg
arpl
inc
mov
mov
mov
arpl
push
dec
add
xor
pop
pop
scas
mov
stc
cmp
hlt
adc
stos
adc
push
sub
nop
call
cli
shl
adc
inc
jle
lods
inc
rcl
mov
jge
(bad)
sub
cs
jbe
idiv
adc
(bad)
rol
stos
mov
lahf
jle
pop
out
jbe
jbe
outs
cmc
sbb
push
sbb
cmc
fsubr
dec
adc
push
mov
loopne
cmps
dec
mov
sbb
dec
cmps
cmp
pop
xchg
jg
cmp
scas
jmp
daa
mov
and
retf
pop
sar
out
pop
and
cmp
cmp
dec
mov
push
mov
push
xchg
jae
test
das
aad
(bad)
icebp
adc
mov
bound
dec
shl
add
(bad)
das
ins
(bad)
mov
sbb
push
dec
push
xchg
pop
sbb
rol
xor
mov
mov
shl
in
cmc
pop
rcl
mov
sbb
sbb
cmp
dec
jae
mov
arpl
sbb
mov
sbb
mov
aas
fdivr
add
(bad)
sbb
mov
mov
test
inc
in
call
int
dec
cmp
or
les
idiv
rol
jns
imul
jge
repnz
pop
dec
arpl
faddp
push
scas
add
jns
not
sbb
sbb
sbb
pusha
call
cs
inc
(bad)
out
add
(bad)
lods
push
out
int
mov
dec
ficomp
(bad)
cs
aas
or
pop
shr
sahf
pop
cwde
mov
or
ror
dec
push
int
mov
and
push
push
pop
add
xchg
in
dec
push
stos
cld
adc
inc
stos
push
sbb
fdivr
call
or
(bad)
xchg
xor
xor
xlat
retf
xlat
pop
add
dec
out
add
call
mov
data16
(bad)
aad
push
add
jae
sub
pop
dec
add
xchg
adc
call
or
nop
arpl
pop
test
inc
lea
push
test
inc
pop
repnz
push
arpl
stc
pop
sub
fwait
xchg
das
sbb
pop
dec
shl
lods
inc
xchg
xor
retf
es
bnd
lods
pop
mov
and
mov
xchg
dec
xchg
fcomp
xchg
lods
retf
adc
mov
inc
cdq
sub
sub
enter
mov
cmp
cmp
js
ror
and
test
dec
xor
clc
xchg
mov
cmp
pop
repnz
mov
or
neg
inc
xor
xchg
in
sub
inc
lock
adc
rcr
gs
sub
out
sub
pushf
sti
cmp
mov
push
into
stc
aaa
mov
inc
pop
ins
dec
mov
rcl
push
ret
mov
xchg
mov
sbb
fst
jmp
mov
fsubr
dec
mov
sbb
jle
fst
pop
xchg
lock
retf
xor
jg
fisttp
and
sti
repz
in
(bad)
sub
and
xchg
int3
je
repz
xchg
sub
push
mov
dec
mov
jp
ror
fst
inc
mov
add
dec
inc
mov
repnz
das
ins
and
push
in
mov
test
xor
loopne
aam
pop
adc
or
outs
dec
(bad)
jns
xchg
popa
jnp
pinsrw
jle
push
sub
xor
and
fs
sbb
inc
xor
movs
call
sub
lahf
in
fstp
sbb
sar
clc
repz
and
and
jecxz
fimul
jle
add
lods
call
clc
cmp
shr
ins
adc
and
arpl
xor
cs
bound
iret
cmc
dec
addr16
and
cmp
cmp
std
xchg
and
dec
das
retf
dec
(bad)
xchg
push
repnz
fnsave
into
pushf
mul
loope
adc
push
mov
test
loopne
je
jo
or
sahf
cmc
ror
push
aaa
jmp
ret
fwait
outs
ficomp
xchg
inc
rcr
mov
jbe
inc
or
sub
test
outs
in
ins
dec
xor
fisub
mov
data16
mov
pop
push
dec
fisttp
or
pop
test
sbb
mov
mov
jae
sub
cmp
mov
mov
pop
or
inc
lods
jo
and
mov
and
imul
out
in
shr
inc
mov
fadd
mov
mov
lea
adc
sbb
adc
xor
js
les
sahf
sti
xchg
jmp
aas
mov
inc
xor
lods
retf
mov
pop
inc
aas
mov
(bad)
jl
inc
lds
iret
push
and
or
dec
repnz
cdq
outs
xchg
jp
inc
dec
pop
mov
retf
xor
sub
mov
test
mov
retf
inc
(bad)
or
xor
jl
mov
adc
add
addr16
shr
sbb
(bad)
or
test
addr16
mov
jmp
pop
clc
cld
sbb
int3
dec
mov
retf
pop
cli
pop
and
sbb
push
push
call
and
aaa
jge
outs
pop
xor
sbb
adc
cmps
mov
jbe
je
cli
sub
adc
arpl
jno
mov
xchg
mov
movs
mov
jmp
xor
outs
inc
xor
jp
push
pop
xor
jge
xchg
xor
lock
in
sub
std
scas
jmp
xchg
loop
fs
std
in
pop
je
and
js
xor
ss
mov
fcmovb
sub
(bad)
retf
daa
cmp
mov
mov
(bad)
mov
aad
inc
jb
cli
mov
ret
jecxz
pop
pop
sbb
stc
mov
test
out
adc
fst
clc
(bad)
push
cmp
loope
shr
jmp
ins
out
rcr
and
rcl
dec
dec
aad
call
pop
jl
pop
call
out
xchg
(bad)
jmp
leave
fs
mov
cli
mov
add
jae
lds
add
xchg
test
enter
stos
stc
es
dec
pushf
inc
sahf
out
dec
fld
jecxz
or
and
mov
mov
sbb
test
cld
fisub
sbb
push
sub
movs
int
sub
sub
(bad)
pop
pop
push
adc
cld
iret
imul
or
mov
pop
outs
cdq
popa
push
pop
add
cmp
out
(bad)
sbb
or
retf
inc
clc
(bad)
jp
dec
jp
popf
rcl
xchg
pop
fs
in
jp
and
and
in
out
daa
sbb
add
(bad)
lock
hlt
mov
jae
mov
mov
pop
pop
jb
xor
(bad)
retf
pop
jno
bound
not
ins
gs
sub
mov
imul
add
jge
adc
ins
mov
pushf
outs
or
leave
mov
jbe
inc
or
sub
cmp
in
dec
cs
sti
ds
sub
fldcw
dec
jl
push
out
dec
lds
or
retf
nop
sahf
xchg
push
sqrtps
xor
mov
inc
in
leave
jmp
jl
mov
mov
ins
call
jecxz
(bad)
mov
aam
mov
jo
out
test
fisub
mov
sahf
adc
retf
dec
mov
sbb
test
cli
push
out
sbb
mov
call
jb
jno
imul
dec
push
stos
fcmovb
xor
dec
es
es
mov
aad
add
movs
xchg
xor
shr
cmp
add
(bad)
xlat
test
adc
shr
pusha
ja
dec
aas
push
push
ret
sbb
push
retf
or
adc
loope
cmc
and
mov
popa
xchg
je
jl
inc
cmps
adc
lods
xchg
rcl
shl
and
mov
push
fnstsw
clc
pop
mov
(bad)
push
sar
xchg
outs
dec
ins
fwait
adc
push
and
movs
push
and
pushf
test
(bad)
out
iret
daa
pusha
mov
cmp
sar
jle
cmc
or
push
inc
cmp
pop
push
xchg
test
jno
sbb
and
cmps
pop
in
sub
xchg
jg
mov
ret
sub
xor
mov
js
mov
test
das
cmps
stos
scas
(bad)
mov
or
jmp
or
mov
out
(bad)
mov
jmp
xbegin
xchg
cmc
inc
(bad)
icebp
je
retf
dec
fstp
inc
into
and
imul
mov
rcr
repz
mov
mov
das
dec
sbb
mov
jle
std
jmp
ss
fldenv
dec
popa
lods
sar
push
ja
sti
pop
in
hlt
sbb
aaa
retf
mov
ret
aas
add
out
or
sub
out
mov
call
pop
loopne
aad
xlat
adc
jo
mov
cmc
xchg
aad
cld
push
mov
sti
push
sar
inc
push
and
movs
jg
fwait
cmp
adc
mov
lea
in
bound
adc
jne
fiadd
out
aam
jl
push
mov
popa
sbb
xor
out
pop
loope
inc
mov
cmp
ins
aam
shl
push
jge
and
mov
movs
js
fwait
imul
mov
or
test
int
xchg
iret
mov
xor
shl
int
into
test
add
lahf
sbb
xor
sub
maskmovq
idiv
cmc
loop
push
out
test
test
or
sbb
xor
outs
jmp
and
(bad)
in
xor
fnstsw
test
clc
repz
sub
aam
psrad
enter
cwde
jp
dec
dec
(bad)
mov
mov
push
push
icebp
out
call
push
mov
lea
dec
and
rcl
sbb
test
pushf
arpl
inc
lock
xor
bound
and
adc
jno
mov
(bad)
js
xchg
out
or
and
mov
arpl
sbb
cmp
inc
test
mov
dec
dec
lock
inc
adc
pop
jae
std
jae
xchg
int
push
sti
push
cmp
std
hlt
js
lods
sbb
ss
call
dec
cli
pop
repz
(bad)
movs
inc
mov
mov
int
movs
jae
fimul
push
xchg
push
inc
loopne
inc
xchg
fdivr
lods
push
lahf
adc
mov
xchg
rol
std
sub
jns
sbb
xchg
ficomp
call
sbb
(bad)
lods
add
and
imul
xchg
enter
mov
xor
scas
fnstcw
sub
retf
dec
fadd
sub
sub
lods
pop
pop
das
scas
cmp
and
movs
imul
mov
push
mov
into
mov
pop
pop
out
fcmovne
adc
inc
cmp
jecxz
push
push
(bad)
sub
je
jmp
push
stos
ror
pop
add
sbb
movs
cmp
jle
imul
iret
rcl
sub
(bad)
bound
sub
xchg
call
stos
adc
mov
test
aas
test
pop
ja
jge
or
xchg
addr16
dec
scas
mov
push
(bad)
jb
stc
sub
sub
sar
mov
inc
xor
shl
add
xchg
cwde
mov
sbb
ss
mov
lds
sub
dec
sub
and
das
xchg
sub
xor
dec
mov
sub
xor
jg
pusha
jne
mov
jae
cli
adc
inc
loop
out
addr16
repnz
push
or
inc
bound
dec
outs
fcomp
push
rcl
xchg
adc
dec
mov
xchg
adc
lea
push
repnz
movs
inc
xchg
out
(bad)
mov
iret
ins
mov
(bad)
data16
sbb
add
adc
inc
data16
std
jb
stos
inc
enter
mov
add
pop
mov
inc
sub
cli
sbb
inc
mov
mov
data16
inc
mov
inc
mov
sub
sub
add
push
movs
add
xor
push
mov
sub
imul
mov
inc
mov
pop
jmp
cmp
call
cmp
xlat
sbb
xor
or
push
out
add
lahf
pop
add
ins
in
mov
out
inc
(bad)
jns
add
int
adc
dec
lea
add
xchg
jp
add
fdiv
gs
pop
loopne
dec
outs
bound
inc
ror
pop
dec
and
add
cmp
or
and
(bad)
lock
inc
sbb
pusha
add
push
xchg
cmp
and
push
jmp
and
push
mov
fisub
call
out
bound
shl
mov
mov
mov
out
adc
push
mov
(bad)
mov
cmp
sub
xchg
fsubp
pushf
enter
sar
mov
ret
sbb
inc
pop
in
test
mov
sbb
ins
pop
stos
pop
sahf
popa
pop
inc
dec
sbb
out
inc
clc
or
je
shl
and
adc
loop
pop
sbb
pop
sub
xchg
mov
(bad)
and
xchg
test
xor
jns
movs
mov
push
jg
add
mov
add
sub
hlt
inc
movs
ret
fmul
arpl
fnstenv
lods
pop
test
push
int3
jne
and
cld
lock
(bad)
fisttp
xchg
(bad)
cwde
vpminub
out
push
mov
push
lahf
add
icebp
inc
repnz
loope
ja
pop
sub
pop
iret
int
or
loopne
inc
mov
pop
push
jns
pop
pop
aas
(bad)
(bad)
mov
sbb
mov
adc
retf
setb
push
retf
shl
cmps
inc
pushf
mov
jle
dec
daa
icebp
es
push
mov
xor
cmp
and
mov
hlt
(bad)
(bad)
repnz
test
repnz
sbb
jmp
mov
daa
fadd
cld
inc
xor
jo
sbb
mov
in
xchg
sub
in
push
xchg
or
sahf
xor
ficomp
out
loopne
cmp
jmp
mov
cld
mov
add
stc
add
xchg
fnsave
push
sub
fldenv
(bad)
inc
mov
sub
add
and
pop
push
call
push
push
sub
cwde
jbe
and
test
push
cmp
and
mov
popa
xor
dec
fsub
xor
push
push
inc
push
fbstp
call
or
dec
addr16
sub
adc
aad
fcmovnbe
push
(bad)
or
mov
in
das
xor
scas
pop
ins
pop
mov
and
mov
fdiv
dec
dec
sahf
fadd
mov
adc
and
and
aam
stos
add
in
push
into
popf
lock
xchg
sbb
push
pushf
jg
sti
xchg
pushf
in
aaa
pop
xchg
dec
(bad)
aaa
or
jl
in
fwait
pop
jp
leave
or
and
or
out
push
pop
fnstcw
and
cs
jmp
pop
stc
psubq
clc
push
into
(bad)
sbb
mov
pop
jnp
loope
iret
and
sub
pushf
adc
or
dec
add
sub
mov
push
xchg
push
cmp
pop
fdiv
lahf
jmp
cmc
ret
psllq
xor
cld
pop
mov
ins
outs
mov
stc
out
cdq
mov
inc
add
push
movs
ficomp
ja
mov
mov
adc
enter
inc
ins
or
outs
mov
jecxz
push
sbb
(bad)
jb
or
push
mov
mov
mov
mov
sahf
enter
aam
add
add
cs
fist
xor
movs
mov
cmp
adc
in
or
repnz
mov
icebp
mov
enter
(bad)
pushf
rcr
ins
inc
shr
xchg
out
dec
dec
dec
xor
ds
pusha
(bad)
fimul
mov
xor
outs
out
sar
fcom
pop
(bad)
push
sbb
push
mov
sti
jae
pushf
and
xchg
push
push
cmp
bound
adc
mov
jle
xlat
jae
ffreep
rol
jmp
(bad)
dec
pop
xor
jo
xor
ins
dec
and
xchg
pop
aas
sbb
push
fwait
sbb
ja
lods
call
fs
pop
adc
dec
je
sub
mov
sub
push
add
jne
shl
mov
pop
lds
dec
mov
fucomp
movs
cs
pushf
repnz
in
int3
inc
push
jb
sbb
push
jae
xor
outs
stc
xor
ja
pop
dec
stos
inc
std
pop
push
xor
and
shl
add
loopne
or
mov
mov
mov
outs
sbb
push
adc
nop
push
je
cwde
inc
jmp
inc
jo
jae
cmps
int
push
adc
out
(bad)
xchg
mov
icebp
push
mov
std
jae
test
add
adc
push
cmps
jge
pop
rcr
jnp
push
in
cmp
inc
pop
(bad)
fidiv
aas
push
sbb
(bad)
push
test
sub
cld
pop
aad
mov
inc
fst
ja
int3
test
test
daa
sbb
movs
sti
xchg
hlt
imul
mov
inc
and
mov
mov
cwde
repnz
mov
mov
fcom
mov
cmps
adc
xchg
sbb
(bad)
xlat
add
pop
mov
dec
xchg
sub
fist
dec
xchg
jle
cmp
sti
mov
test
add
outs
jmp
imul
cwde
cmp
lea
mov
out
jmp
call
(bad)
lds
mov
push
retf
clc
dec
jl
sub
cmp
repz
lock
call
hlt
jo
pop
aas
or
test
sbb
adc
addr16
or
retf
push
xchg
push
cmp
rcl
jp
dec
outs
in
scas
daa
xchg
jns
jle
sub
ror
add
clc
jle
adc
cmp
jmp
pop
test
ins
dec
and
mov
adc
test
pop
aaa
pushf
adc
mov
enter
(bad)
sbb
icebp
das
test
cmp
fsubp
mov
popa
dec
inc
fnstsw
sub
cwde
mov
cs
retf
mov
adc
ds
repz
add
rcr
out
ss
out
fild
xchg
jo
xor
mov
and
aam
js
cmp
push
out
loope
and
gs
fimul
sbb
sbb
cmps
pop
jae
nop
cmp
xor
cmps
aas
add
lock
pop
in
pusha
cmp
cmp
sbb
lea
popa
dec
sbb
push
rcr
cs
cld
popa
xor
pop
sub
shr
pop
xor
sub
inc
ds
aad
push
sub
or
jne
cmp
mov
cmps
cmp
and
mov
stos
inc
mov
sbb
sub
pop
push
(bad)
jbe
popa
shr
cld
pop
test
arpl
pop
popf
fs
stos
jg
sbb
pop
push
xor
test
cmp
adc
jnp
jp
stc
add
cmp
(bad)
test
xor
retf
mov
cmp
dec
cli
out
test
xchg
dec
arpl
imul
cld
leave
mov
and
dec
(bad)
cwde
mov
(bad)
shl
mov
and
cmp
int3
sahf
popf
mov
push
jge
fmulp
xchg
lock
xchg
sub
sub
test
sub
cmps
push
data16
jle
movs
push
sub
mov
clc
xchg
popf
xchg
imul
cmp
loop
jmp
sub
pop
inc
xor
scas
call
fld
mov
sar
jmp
in
or
hlt
fmul
mov
(bad)
and
xchg
addr16
pop
xchg
shl
into
ror
xchg
cld
cmps
pop
(bad)
aad
sub
leave
lods
mov
cmp
cmps
or
dec
lds
loop
ins
std
retf
or
jl
retf
in
and
ror
pop
jno
xchg
cmp
mov
adc
add
outs
cmp
lock
call
xchg
int
and
sub
adc
loope
sbb
cli
ret
adc
rol
fist
ffree
xchg
leave
test
sub
pop
outs
cmps
adc
fsubr
mov
inc
movs
jo
add
pop
or
out
addr16
dec
lahf
loope
pop
push
clc
jl
cmps
cmps
and
push
cmp
dec
int
jmp
std
mov
lods
lds
push
clc
enter
xor
mov
rcr
xchg
lds
addr16
and
jmp
shl
push
pop
fidivr
(bad)
fstp
adc
ins
sub
pusha
mov
cli
lock
add
mov
jb
ins
pop
(bad)
(bad)
mov
cdq
dec
outs
movs
xchg
loop
ret
and
jmp
xor
test
clc
ins
add
daa
movs
inc
push
jge
out
loopne
mov
jp
call
push
std
retf
adc
mov
xchg
sbb
mov
xor
mov
mov
hlt
out
xchg
cmp
xor
adc
lahf
lock
sahf
mov
and
out
mov
lds
push
inc
call
pop
fld
loop
mov
loope
jno
es
js
mov
rcr
sub
xchg
ss
jnp
fwait
adc
call
enter
add
and
enter
in
outs
aas
sahf
lock
out
call
jns
fstp
inc
sbb
mov
sub
scas
stc
or
bound
mov
mov
mov
push
js
out
rcr
aas
sbb
xchg
adc
and
clc
mov
test
dec
mov
mov
inc
adc
mov
cmp
pop
push
sub
pop
mov
push
push
outs
(bad)
sub
adc
mov
arpl
leave
aam
sub
mov
mov
sub
clc
or
sbb
test
fadd
fistp
xchg
lods
sub
js
push
mov
xor
push
out
sbb
out
pop
lds
les
cmp
lods
ret
mov
int3
retf
in
not
movs
es
mov
or
test
sbb
into
lock
sub
push
scas
enter
push
and
or
aam
mov
dec
xor
fwait
jge
sub
or
xor
stc
(bad)
shl
(bad)
jp
ins
mov
inc
pushf
ret
push
adc
aam
bound
loope
jb
cmp
std
movd
repz
lods
stos
daa
dec
rcr
adc
pop
fldenv
pop
xchg
je
mov
pop
in
addr16
xchg
jge
hlt
shr
jmp
lds
clc
pop
xchg
retf
imul
ins
sahf
fstp
loop
cli
loop
dec
js
push
sub
jp
pop
pop
jae
pop
cli
fiadd
lea
lock
cli
lods
cdq
(bad)
stc
test
lods
cs
xchg
fwait
scas
jmp
pushf
add
xchg
push
and
mov
ss
xchg
mov
xchg
jmp
push
dec
sbb
pop
sub
pop
jbe
adc
rcr
mov
inc
mov
adc
push
cmc
popa
adc
std
and
adc
push
fld
jns
sub
cmp
ror
sub
int
jp
aaa
adc
mov
push
lahf
cmp
test
adc
loop
lods
outs
pop
imul
jp
ins
ja
lock
leave
mov
loop
or
inc
lahf
daa
inc
shr
or
pop
pop
push
mov
push
mov
xchg
int3
mov
pop
pop
jl
mov
add
(bad)
es
into
cmps
push
je
push
or
mov
pop
or
push
popf
das
aas
cs
inc
repnz
nop
mov
xchg
cmp
mov
ret
dec
xor
es
daa
loope
mov
ja
ins
loop
sahf
popf
imul
sti
pop
inc
sub
push
mov
mov
sbb
pop
cli
fisub
adc
loop
cld
in
xchg
ja
mov
adc
push
fld
inc
outs
pop
inc
inc
sar
or
add
push
cmp
xlat
sub
leave
imul
pusha
sahf
xor
jae
or
push
data16
pushf
popa
out
push
cmps
jecxz
jb
test
sbb
inc
cmp
retf
mov
sbb
push
test
xor
jle
stos
pop
dec
push
mov
sbb
in
cmps
loope
sbb
mov
fstp
xchg
dec
fidiv
jno
add
jmp
mov
cld
aaa
cwde
jmp
mov
jl
movs
mov
inc
stc
xchg
dec
ins
neg
sbb
jecxz
fwait
ret
mov
add
arpl
arpl
sbb
mov
aad
(bad)
xor
neg
mov
mov
or
mov
fsub
mov
arpl
pop
adc
sar
iret
call
not
retf
pop
rcl
cld
inc
inc
push
or
hlt
lea
cmp
lds
into
and
push
stos
push
xlat
inc
loopne
mov
or
or
retf
or
hlt
dec
pop
inc
pop
fmulp
push
fdivp
or
rcl
dec
push
jle
cli
mov
(bad)
and
sbb
aam
(bad)
sti
xadd
lds
dec
push
es
mov
xor
mov
jns
dec
cmp
stos
dec
add
push
ret
mov
sub
xor
sub
out
lds
jo
pop
sub
mov
rol
int3
jg
ds
mov
dec
xor
fs
xchg
add
jbe
pusha
mov
(bad)
std
out
xlat
jmp
cmps
mov
rcr
mov
bound
nop
mov
sbb
xor
add
sbb
test
jbe
call
aaa
out
inc
pusha
sbb
popa
mov
jae
outs
push
push
mov
popf
add
movs
jmp
dec
lahf
pop
pushf
or
das
and
(bad)
pop
iret
in
mov
and
ror
mov
test
mov
add
ins
call
mov
ficomp
call
xor
out
jg
les
xchg
clc
in
ss
inc
retf
lods
pop
add
jns
mov
push
fisttp
sub
rcr
enter
xor
es
push
add
das
inc
int
das
mov
hlt
cmps
adc
sub
(bad)
retf
dec
jmp
lea
adc
(bad)
xor
pop
dec
inc
and
mov
bound
sbb
and
inc
xor
xchg
ja
pop
push
mov
mov
in
adc
inc
pusha
(bad)
idiv
xlat
int
mov
mov
enter
jne
jb
data16
mov
add
ins
iret
sar
in
xchg
add
push
in
into
mov
call
ins
push
xchg
mov
and
xchg
loop
xchg
lds
xlat
jmp
cld
call
cmp
mov
pop
dec
push
call
lods
pop
je
and
fld
ret
js
jg
les
mov
mov
sar
inc
cmp
push
sbb
adc
ins
sbb
mov
stos
jmp
mov
es
pop
mov
xor
or
pop
mov
mov
mov
std
inc
std
test
cmp
pop
les
retf
mov
jo
mov
aas
cmp
neg
pop
inc
cli
retf
add
push
add
test
adc
or
jle
push
lods
add
sub
pusha
lahf
add
or
push
adc
cmp
or
test
push
xchg
mov
les
cmps
rcr
jne
xchg
in
fsub
inc
jno
adc
stc
(bad)
into
adc
mov
arpl
and
adc
test
push
call
into
jg
das
jecxz
xor
fs
jnp
ficom
rcr
adc
sub
and
dec
mov
xor
mov
inc
bound
sub
push
cmp
out
stc
push
shr
les
cmp
inc
and
push
rol
mov
fst
jmp
fistp
mov
mov
popa
stc
xchg
cmp
adc
sar
repnz
dec
mov
popf
stos
leave
pop
dec
add
(bad)
jne
jne
push
push
fsub
sahf
imul
jge
or
pop
push
mov
cmps
pop
int
retf
mov
ret
mov
and
call
fsubr
lahf
pop
pop
cmp
add
push
pushf
dec
xchg
sub
ins
stos
cmp
xchg
xchg
jge
pop
outs
add
arpl
jecxz
fsubr
and
sbb
cld
jo
cmp
mov
clc
rcl
sbb
ins
cmp
xlat
lock
dec
cs
jmp
fistp
xor
pop
in
mov
adc
jmp
xchg
pop
xchg
cmps
jo
pop
xchg
shl
lds
(bad)
(bad)
cmps
aaa
jns
cmp
loop
out
dec
fadd
and
fimul
outs
out
rol
jnp
sbb
pop
bound
adc
mov
mov
jo
and
mov
and
pop
stos
inc
pop
jmp
mov
fcmovnu
sub
retf
icebp
int
loop
adc
dec
js
jbe
add
nop
inc
mov
sti
(bad)
int3
outs
cmp
push
mov
inc
ret
sbb
inc
sub
cmp
and
retf
xor
in
pushf
xchg
rcr
xor
jne
or
inc
nop
(bad)
retf
clc
sbb
out
sub
push
cmps
xor
addr16
iret
daa
test
in
pop
ret
dec
imul
push
sub
add
jp
or
cmp
pop
and
fsubr
push
inc
jp
pop
(bad)
int3
bound
fdiv
lahf
nop
cmps
jmp
lods
in
xchg
shl
mov
lock
pop
cmp
dec
dec
cmps
icebp
push
and
jnp
dec
mov
jp
lahf
pop
xchg
pop
mov
(bad)
mov
xchg
push
sahf
repnz
mov
in
mov
mov
std
jmp
sbb
push
add
mov
add
lods
rdmsr
ins
mov
cmps
dec
dec
lods
pop
mov
sub
mov
push
in
xor
mov
add
iret
das
inc
dec
mov
sub
mov
jmp
or
lods
mov
or
sub
mov
xchg
hlt
sbb
ficomp
gs
movs
xchg
outs
aad
out
cmp
pop
cmp
rcr
push
stos
xchg
nop
fiadd
(bad)
pop
mov
fsubp
out
inc
mov
aas
pop
push
sub
mov
mov
pop
mov
aam
sub
adc
nop
out
pop
aas
fadd
xlat
scas
in
inc
jmp
cs
xlat
add
and
out
fisttp
xchg
sub
cmps
pop
cmp
sub
out
fimul
cli
(bad)
pop
(bad)
mov
out
jo
pop
adc
mov
push
pop
adc
arpl
movs
xchg
and
sbb
mul
mov
jg
sbb
and
or
xchg
jo
fcomp
jp
cmp
popa
push
or
bound
xor
pop
enter
lods
loopne
fsub
sub
sbb
test
cmps
frstor
sub
stc
stc
xchg
and
mov
cmc
pop
sub
jmp
jl
jnp
pop
imul
stc
xor
ins
sub
cs
xchg
in
mov
(bad)
sti
xchg
gs
adc
loope
fcmovb
ret
popf
je
rol
push
mov
pusha
push
inc
addr16
ds
aad
inc
shr
add
sahf
jmp
jne
or
mov
aad
lock
ss
cmp
fist
js
test
or
mov
repz
ret
push
in
inc
xor
push
jae
scas
ror
movs
das
jp
nop
(bad)
push
dec
jns
cld
sub
mov
push
xor
das
lea
sbb
add
add
pop
cmp
call
fild
push
bound
sbb
mov
lods
int3
fcomp
jmp
dec
sub
mov
inc
cwde
arpl
mov
out
movs
sbb
push
jmp
cmps
icebp
xor
iret
pop
mov
pop
mov
mov
lahf
pop
and
mov
(bad)
cmps
or
pop
out
mov
mov
test
pop
scas
call
xlat
pop
pop
cmp
inc
popf
pop
add
mov
lods
std
bound
outs
es
pop
je
mov
mov
inc
mov
call
push
or
iret
repz
ficomp
mul
rcr
mov
(bad)
mov
fsub
je
adc
pop
call
mov
fsub
sbb
mov
movs
pusha
jns
scas
pavgw
inc
mov
mov
sub
scas
inc
adc
popa
fild
(bad)
out
adc
push
into
(bad)
out
push
dec
vmwrite
dec
and
sbb
shl
jne
mov
arpl
push
add
cmp
or
mov
retf
sahf
and
rcr
mov
jecxz
pushf
clc
mov
adc
lods
ret
hlt
je
not
sub
xor
and
mov
inc
push
les
push
fwait
repz
aad
cli
adc
mov
xchg
xchg
out
cmp
in
sub
or
(bad)
std
gs
inc
gs
(bad)
mov
push
inc
test
(bad)
shr
fild
mov
into
push
or
and
adc
add
mov
mov
inc
pop
pop
and
sahf
jp
jo
push
pop
or
imul
loope
in
icebp
dec
cli
or
xchg
loop
outs
adc
cmp
jmp
fist
fs
push
outs
jg
adc
ret
cmp
int3
bound
outs
ret
sub
int
ret
and
jmp
int3
loop
sbb
or
push
test
(bad)
jp
je
push
test
int
call
pop
ins
ss
daa
aas
push
jae
adc
loope
cmps
inc
xlat
ret
scas
fisub
sti
mov
fbld
setbe
and
jecxz
out
ins
dec
data16
adc
mov
leave
lahf
inc
sbb
pop
outs
(bad)
cmp
mov
sbb
jl
mov
lock
push
cs
push
sar
xor
xchg
sbb
sub
xchg
ficomp
movs
mov
enter
fidiv
and
pop
mov
mov
adc
push
stc
sub
outs
lods
in
mov
push
mov
ins
pop
xchg
mov
out
nop
adc
loopne
or
cmp
xchg
mul
push
cdq
dec
lods
jne
and
(bad)
sub
mul
push
dec
sbb
pop
out
xchg
int3
sti
not
ret
loope
fadd
xor
dec
leave
inc
add
jbe
ret
out
aaa
(bad)
xchg
xchg
(bad)
and
or
or
mov
add
(bad)
mov
out
xchg
push
stc
out
add
adc
xchg
stc
jg
lock
in
int
test
int
mov
ret
rcl
aaa
arpl
push
xor
sahf
movs
scas
pop
test
mov
bswap
sbb
cdq
fldcw
fmulp
push
movs
mov
cwde
outs
push
les
mov
ins
stos
lds
and
cmp
inc
ret
jns
out
mov
sbb
pushf
jp
and
repz
jne
(bad)
xor
aad
repnz
push
(bad)
pop
jmp
ins
mov
add
sub
fisttp
aam
cmps
stc
gs
push
add
das
fistp
adc
or
test
xchg
arpl
sahf
out
lock
xchg
cdq
(bad)
mov
ds
call
xchg
jnp
shl
test
push
jae
push
add
cmp
mov
lock
jns
cmc
pusha
repz
mov
mov
in
push
scas
test
mov
push
xlat
clc
pushf
jl
icebp
outs
cmp
inc
aad
sub
outs
xchg
ret
rol
mov
ss
mov
in
sbb
mov
and
nop
fcomip
repnz
jle
neg
into
test
push
addr16
mov
mov
or
xchg
repz
loop
mov
pop
jmp
sbb
sbb
stos
daa
aas
adc
(bad)
enter
(bad)
jp
and
jae
das
lds
out
shl
pop
xor
add
dec
xchg
aas
mov
test
cmp
sbb
inc
mov
pop
int3
rol
nop
pop
iret
mov
mov
pusha
xor
inc
pop
shr
fstp
dec
repnz
retf
retf
retf
mov
sub
jecxz
mov
aas
pop
retf
lods
mov
outs
icebp
push
push
and
mov
adc
das
les
adc
cwde
mov
xor
in
xor
in
pop
pop
stc
ins
push
pushf
jnp
imul
inc
jne
scas
loopne
pop
and
(bad)
stc
sbb
mov
jno
jnp
mov
out
out
js
xor
nop
test
and
dec
xchg
cmp
jle
das
test
jmp
dec
mov
(bad)
lock
lock
pop
(bad)
cmc
xor
int
xlat
push
loop
mov
cld
fistp
mov
stos
movs
push
sbb
pop
mov
sbb
adc
pop
push
aad
ret
push
(bad)
cld
adc
add
inc
imul
inc
data16
or
mov
fistp
jge
mov
test
xor
test
shl
xor
icebp
add
movs
pop
loop
push
leave
inc
xor
xor
clc
ror
dec
add
cwde
les
out
pop
jbe
sar
cs
jnp
sbb
test
push
rcl
xor
xchg
adc
fist
jg
pushf
push
cli
xor
push
push
dec
push
jo
shr
sbb
iret
mov
(bad)
cmp
test
in
mov
sbb
cmp
movs
jbe
sbb
jmp
sub
dec
sbb
dec
cdq
clc
xchg
aas
add
pop
popf
out
fucomp
push
xlat
seto
in
add
dec
bound
or
pop
mov
adc
mov
sub
cmp
sbb
test
push
movs
aas
sub
xchg
outs
out
cmp
inc
xor
pop
jmp
movs
inc
inc
outs
push
fstp
dec
mov
js
sub
pop
inc
out
test
xchg
jl
mov
in
jge
mov
sbb
addr16
adc
add
sub
xlat
jg
pop
hlt
inc
mov
rcr
mov
jo
pop
out
test
(bad)
mov
pop
add
dec
loop
fcomp
push
sub
dec
mov
ds
push
leave
or
fisub
mov
repz
sub
sahf
jo
push
push
icebp
movs
inc
stos
loope
xlat
add
and
adc
sbb
ret
out
(bad)
mov
and
xor
je
push
push
adc
pusha
mov
mov
or
fsubr
sbb
or
mov
mov
loopne
inc
pop
dec
scas
mov
push
xchg
imul
lea
jbe
cmp
test
add
xchg
xor
mov
push
inc
sti
mov
mov
mov
push
aam
movs
aaa
and
movs
fistp
lods
idiv
imul
xchg
adc
sub
ss
inc
dec
mov
xchg
pop
inc
add
cmp
inc
pop
ins
add
std
xchg
mov
ffreep
int3
cs
or
loope
loopne
frstor
mov
adc
leave
enter
nop
ds
and
and
dec
sbb
dec
dec
mov
pop
scas
xchg
fxch
loope
and
add
out
cmp
scas
jb
push
retf
fwait
push
jecxz
(bad)
loop
add
jno
stc
mov
pop
cmp
repnz
push
(bad)
dec
hlt
lahf
xor
fsub
and
push
outs
push
or
push
mov
test
dec
mov
cld
xchg
out
inc
adc
push
adc
fld
adc
xor
outs
and
inc
xchg
mov
sub
cmp
mov
dec
in
shl
jecxz
push
imul
mov
popf
shl
shl
int
imul
and
jmp
mov
sub
adc
xor
std
(bad)
jge
pop
mov
mov
das
xchg
sbb
stc
mov
dec
loopne
frstor
ss
adc
nop
in
and
dec
mov
inc
loopne
js
inc
mov
inc
(bad)
push
pop
les
mov
rol
mov
je
add
inc
pushf
ret
dec
mov
arpl
inc
pop
adc
mov
gs
cs
xor
sbb
push
data16
add
sbb
push
idiv
push
gs
mov
add
sbb
pop
int
sbb
cmp
push
shr
and
int
sbb
jne
pop
jo
fnstsw
dec
(bad)
test
mov
jnp
dec
dec
jns
cmps
mov
adc
fneni(8087
add
pushf
push
jge
inc
les
or
test
mov
mov
loop
addr16
xchg
push
icebp
jmp
and
imul
cmp
and
shl
retf
mov
dec
outs
xor
and
cmc
mov
xchg
out
mov
add
or
xor
push
les
mov
pop
stc
inc
lds
cmps
imul
adc
pop
jmp
dec
retf
pusha
mov
icebp
xor
sbb
sub
push
nop
outs
into
out
(bad)
cmp
xor
mov
dec
xor
jp
cli
jns
push
sub
cmps
fld
mov
cwde
push
mov
and
xchg
in
nop
push
ins
movs
jns
dec
push
sub
fwait
dec
dec
fimul
dec
popf
inc
push
mov
lea
jp
scas
ficomp
adc
push
scas
stc
xchg
xchg
mov
lods
test
clc
mov
mov
sub
(bad)
fnstcw
sahf
sub
cmp
adc
mov
out
iret
cmps
or
int3
jle
addr16
fcomi
adc
and
mov
retf
jle
sub
xchg
pop
jge
pop
retf
(bad)
mov
inc
stos
dec
and
jl
pop
add
sub
xlat
jns
icebp
jge
add
or
scas
jns
(bad)
mov
std
xor
dec
iret
jbe
cmps
cmp
jno
pop
or
xor
jae
retf
sbb
in
xor
xor
or
mov
dec
mov
les
aaa
fisub
das
rol
or
xchg
stc
push
xor
sub
ret
push
enter
pop
fs
mov
push
adc
push
push
jmp
pop
cwde
sbb
std
cs
imul
and
pop
das
dec
cmps
leave
mov
arpl
retf
ror
lock
jbe
push
adc
jecxz
sbb
add
idiv
jmp
ins
int
jo
aam
test
inc
adc
shl
add
(bad)
pushf
inc
sti
mov
fist
(bad)
sub
test
pop
mov
pause
jmp
das
inc
cmps
cdq
scas
mov
xchg
(bad)
and
pop
xchg
and
cmps
push
mov
mov
sub
inc
mov
cld
jge
int3
(bad)
adc
jle
jno
mov
lods
ja
int
adc
mov
mov
loope
fcomp
xor
in
sub
sbb
das
fdiv
mov
and
sti
and
cmp
lods
in
lahf
scas
ret
add
add
movs
test
jns
imul
cs
ja
scas
into
dec
or
aas
mov
mov
pop
dec
inc
push
inc
mov
or
cdq
sbb
jnp
cld
push
mov
and
mov
lock
ficomp
xchg
ins
push
mov
stc
repnz
mov
daa
mov
shr
pop
mov
enter
inc
dec
or
adc
and
jge
shr
jle
(bad)
push
frstpm(287
cs
shl
jae
ja
aas
xor
rol
dec
ftst
pop
in
addr16
pop
add
arpl
ss
jle
inc
and
outs
cmp
mov
mov
loop
dec
jmp
jmp
inc
cli
pop
xchg
ins
out
inc
sub
sub
jmp
inc
(bad)
(bad)
push
sub
(bad)
xchg
outs
mov
sub
outs
mov
cli
adc
iret
jne
cwde
mov
rcl
jge
pop
hlt
scas
into
out
icebp
stos
add
adc
cmc
inc
inc
test
icebp
outs
cmps
cmps
fnsave
not
jle
mov
call
cmps
mov
movs
stos
(bad)
lds
out
sub
adc
add
jg
call
test
out
pusha
fmul
cli
std
and
pop
ins
sahf
add
dec
ins
push
je
pop
sub
rcl
xor
push
stos
xchg
cmp
add
adc
stos
mov
outs
lea
gs
jbe
xlat
das
mov
pop
inc
sbb
mov
adc
ins
push
add
out
push
jp
out
or
rcl
rep
push
out
mov
cmc
xor
jecxz
(bad)
xor
push
pop
lea
lods
test
mov
daa
cmp
lock
mov
imul
outs
sbb
rcr
adc
mov
sbb
inc
push
clc
into
stc
cmc
stos
pop
fs
inc
mov
xlat
cmp
dec
xor
and
sbb
in
pop
out
ficom
mov
sub
push
scas
sub
inc
ins
out
(bad)
fimul
test
mov
mov
fs
and
cmps
sub
test
sub
mov
push
xchg
or
mov
xor
rcr
mov
ficomp
sbb
inc
push
push
out
inc
inc
ficomp
push
fmul
mov
mov
(bad)
fstp
sub
ret
xchg
(bad)
push
retf
xor
push
loope
test
mov
sahf
dec
shl
xchg
push
fwait
stos
(bad)
dec
cmps
int3
out
fwait
ret
retf
mov
call
(bad)
sbb
pop
sbb
or
adc
arpl
xchg
pop
lds
lahf
loop
frstor
mov
cmp
sbb
add
jp
dec
jns
sub
cmps
popa
stos
mov
rol
push
mov
xor
push
stos
add
sub
fstp
sub
xchg
pop
stos
imul
or
cmc
in
(bad)
in
adc
pop
divps
xchg
ja
test
lea
jns
mov
dec
xor
call
ja
mov
jnp
adc
push
cwde
dec
xchg
mov
stos
(bad)
lahf
mov
jmp
test
repnz
mov
pop
push
inc
or
loop
retf
(bad)
push
and
adc
or
xchg
shl
inc
sub
in
lahf
mov
sub
icebp
xor
and
cmp
(bad)
pop
test
in
cwde
dec
out
jb
jecxz
call
sbb
mov
leave
mov
lock
pop
leave
lods
sbb
mov
pop
cmp
daa
pop
cmp
lods
push
das
cmp
inc
push
ins
cmps
fidivr
cmp
call
pop
ins
outs
repz
imul
mov
adc
pop
xchg
lds
sub
(bad)
fsub
push
cmp
dec
sar
daa
and
jne
mov
outs
xchg
mov
mov
outs
nop
xchg
or
mov
xor
std
call
add
mov
mov
push
ins
sahf
cmc
test
out
adc
cmp
loop
xchg
jmp
cs
xor
js
dec
(bad)
lahf
ret
jl
in
fs
mov
or
sub
jo
in
cs
sbb
loopne
cmp
test
or
inc
(bad)
mov
popa
mov
retf
dec
jecxz
outs
loopne
push
sar
hlt
cmps
or
mov
jecxz
icebp
xchg
les
cmp
pop
cmp
cmp
dec
fsubr
cs
test
mov
xor
dec
mov
pusha
test
aas
sbb
xor
pop
mov
and
or
push
inc
mov
add
xor
pop
mov
rcl
xor
rcl
sbb
pop
aas
stos
loope
clc
fidiv
stc
sbb
lahf
inc
mov
dec
stos
in
xchg
or
inc
jl
xor
icebp
xor
push
xchg
jecxz
test
mov
or
pushf
jno
call
mov
xor
ret
mov
lods
sub
cwde
fistp
sub
in
rcr
mov
fsub
imul
nop
clc
dec
aam
cwde
cwde
cmp
lods
jmp
je
repz
je
pop
in
mov
pushf
jbe
ins
mov
jno
xor
mov
retf
pop
test
and
gs
fs
out
mov
inc
pop
mov
iret
cmp
lods
cs
jns
mov
mov
adc
neg
arpl
aas
sub
jae
jp
lock
lahf
or
fidiv
jle
adc
jmp
dec
out
sti
nop
shl
inc
and
jae
sub
add
inc
mov
(bad)
pop
cmc
jbe
adc
mul
jge
jnp
mov
sub
and
jge
add
pop
xchg
xchg
repz
outs
push
inc
retf
rcr
imul
nop
mov
cmps
push
dec
push
rcl
cli
repz
je
bound
std
jle
cmp
jle
pop
dec
icebp
fs
xchg
sub
mov
js
and
xor
mov
sub
xor
xor
push
enter
(bad)
sbb
jl
pushf
inc
ret
jo
pusha
jae
and
adc
add
mov
push
repz
add
sbb
jbe
lods
(bad)
jno
jmp
outs
inc
clc
pop
push
movs
mov
mov
mov
cmp
jl
test
add
push
jp
xchg
in
test
push
sahf
jmp
movs
out
add
shr
jmp
dec
add
dec
fistp
stc
xor
dec
pushf
adc
loopne
cli
loop
out
pop
cmp
cmp
cmps
outs
cmp
cwde
cmp
or
rol
imul
push
push
jns
mov
sbb
test
lods
inc
repz
pop
cli
les
pusha
(bad)
daa
add
add
inc
mov
mov
dec
adc
ret
cdq
mov
cmp
jne
push
sub
clc
push
sub
dec
cmp
sbb
mov
mov
ror
push
xchg
scas
pop
sar
arpl
jno
dec
lahf
mov
jnp
stos
add
es
aaa
out
xor
sti
pop
lock
scas
pop
je
adc
arpl
lods
out
arpl
cwde
pop
pop
enter
cli
sub
xchg
int3
cwde
fwait
imul
div
sub
lea
test
fild
dec
enter
fild
jmp
ins
cld
push
push
(bad)
cld
stc
jmp
adc
outs
pop
push
adc
cmp
(bad)
push
enter
xor
std
loop
lea
scas
aad
aas
cmp
outs
and
fidiv
fnstenv
mov
loopne
(bad)
pop
out
rol
lock
cmp
bound
sbb
fs
or
mov
pop
cmps
repz
test
loope
push
dec
call
mov
xchg
les
add
retf
jmp
int
adc
dec
cmp
sbb
imul
adc
mov
das
inc
scas
stos
inc
fnstsw
fnstsw
inc
push
mov
xor
xor
adc
lods
ins
xor
pop
pushf
pop
mul
mov
push
lea
(bad)
jne
add
cld
in
jle
jne
cmc
pop
ja
mov
mov
mov
hlt
xchg
xor
in
jmp
in
push
outs
inc
xchg
les
inc
mov
jg
jmp
leave
pop
jmp
clc
jmp
cdq
sbb
out
aam
ja
cmp
cmp
cmp
popa
jge
in
sbb
dec
mov
(bad)
or
shl
bound
cmp
loopne
xchg
out
and
and
sti
mov
cdq
fwait
or
xchg
sbb
jmp
mov
ds
fimul
sub
jmp
mov
xchg
pop
sub
repz
addr16
pop
movs
fstp
imul
fist
popf
jno
aas
inc
add
aas
rcl
mov
ss
pop
cwde
push
pop
mov
movs
ficomp
clc
dec
(bad)
rol
punpcklbw
or
les
movs
in
mov
cld
cmp
add
pop
aaa
cmp
aad
mov
sbb
sub
(bad)
repnz
mov
mov
hlt
leave
dec
pop
mov
lds
mov
cwde
call
out
mov
outs
sbb
pmuludq
push
add
xchg
xor
or
dec
mov
into
iret
stc
cld
add
lea
and
jns
xchg
or
sub
iret
sub
dec
xchg
loope
in
(bad)
jns
fs
jo
movups
push
add
mov
ds
cmp
movs
pop
mov
shr
xchg
in
jbe
call
sbb
mov
mov
cmp
jns
sub
mov
xlat
ror
jle
pop
cs
in
(bad)
mov
or
push
add
pusha
not
mov
mov
xchg
sub
or
retf
aam
inc
les
shl
aad
es
inc
loop
stos
adc
ret
aaa
mov
xchg
add
dec
aas
test
sbb
gs
xor
jbe
loope
sbb
xchg
jle
es
push
inc
adc
out
(bad)
jae
call
sbb
cli
jmp
ret
call
ss
popf
scas
xor
std
test
dec
xchg
mov
adc
fidivr
test
sbb
repnz
inc
ret
jmp
xor
(bad)
std
push
mov
dec
cmp
mov
mov
mov
push
ficom
shl
xchg
cwde
xchg
fstp
retf
ret
scas
into
mov
stc
cmp
sub
js
cmp
push
xchg
push
pop
sysret
push
aas
jb
sbb
shr
cmp
adc
loopne
div
fadd
ins
dec
cld
ds
xlat
std
pop
sahf
test
out
mov
into
sub
popa
inc
inc
cmp
or
in
(bad)
cli
push
clc
pop
add
test
jbe
stos
and
inc
pop
xor
or
jmp
sub
cs
mov
pop
jne
ss
out
mov
fstp
test
fsub
dec
pop
lods
and
jo
clc
mov
xchg
(bad)
xchg
test
inc
shl
adc
xchg
mov
push
popa
xor
inc
cwde
fdivr
mov
add
sub
fwait
dec
sbb
cmps
or
sahf
outs
into
rol
pop
into
jns
dec
xchg
fwait
cld
xchg
push
pusha
lahf
xchg
jo
xchg
int
popf
out
std
cmp
es
popf
mov
xchg
lea
ins
jae
jo
push
call
add
add
(bad)
daa
scas
call
inc
sub
push
ret
push
fninit
jmp
fst
add
pop
das
bound
sti
ja
dec
xor
inc
cs
(bad)
mov
loope
sti
fwait
push
jne
cmp
and
push
cwde
sub
arpl
and
cwde
(bad)
or
push
push
or
sbb
jp
xchg
es
test
shl
mov
xchg
dec
ins
cmp
sub
adc
(bad)
stc
xchg
std
xor
push
sbb
inc
jmp
fsubr
mov
mov
pop
jl
jne
or
inc
and
dec
mov
ret
push
aam
popf
jbe
call
mov
arpl
idiv
xchg
(bad)
and
adc
jno
int3
jae
ret
mov
outs
js
popa
push
inc
add
xchg
(bad)
mov
sub
loop
test
adc
cmp
pushf
cmp
cmp
mov
dec
imul
lods
push
push
inc
xchg
jmp
push
pop
dec
dec
sub
cwde
sub
aad
and
ret
cmp
out
push
mov
mul
and
fsub
test
xor
add
sub
push
mov
push
and
push
es
fcmovbe
mov
ret
ja
pop
mov
in
push
into
and
imul
and
imul
mov
mov
pusha
sub
mov
sbb
mov
xchg
nop
add
les
push
fsubr
adc
cmc
gs
sub
daa
mov
movs
dec
ret
mov
out
sti
mov
adc
mov
push
sbb
(bad)
inc
fwait
(bad)
(bad)
out
xor
loopne
adc
mov
pop
mov
fidivr
loopne
lods
fiadd
stos
cli
mov
inc
int3
push
imul
inc
jmp
in
jg
repz
push
imul
addr16
add
mov
enter
dec
test
fs
and
or
mov
sbb
xor
(bad)
add
cli
mov
jbe
sahf
fdiv
sub
test
pusha
test
mov
out
cld
mov
add
add
cmp
cmc
mov
in
(bad)
ins
pop
imul
xchg
in
jae
dec
and
in
push
or
sub
jb
(bad)
aad
mov
in
wrmsr
mov
stos
mul
sbb
xchg
aas
lods
adc
cmp
cmp
sbb
jae
pop
xchg
scas
(bad)
aas
arpl
ds
inc
sbb
dec
cmp
ds
xor
mov
xor
mov
add
int3
add
cdq
jle
rol
lock
outs
pushf
inc
shl
in
adc
inc
mov
sbb
inc
pop
popa
mov
mov
sub
fld
scas
pop
ror
xchg
jle
sbb
jmp
xchg
sbb
enter
sub
fmul
in
dec
jge
ds
add
idiv
dec
jle
sbb
mov
loop
and
xor
aam
lods
xchg
shl
sub
jno
pop
enter
sahf
sub
ja
aaa
push
fwait
out
xchg
fsubr
jl
ins
gs
lahf
sbb
mov
adc
inc
jnp
push
aaa
fild
and
xor
inc
inc
pop
fsub
std
mov
xchg
les
mov
cs
popf
mov
stos
arpl
fucom
jnp
push
ins
mov
pop
pop
mov
icebp
inc
les
xchg
out
or
jle
into
mov
rcr
push
mov
je
cdq
push
js
mov
ja
or
aam
scas
rcr
movs
stos
call
test
in
jg
and
inc
ret
stos
fcom
sub
jp
sub
and
imul
pop
cdq
loop
aaa
ret
loopne
xor
popf
loop
aad
inc
sbb
das
sti
push
ret
xchg
adc
repnz
movs
push
inc
mov
hlt
push
and
and
jmp
or
push
retf
movs
inc
in
sub
or
pop
mov
sahf
call
jns
in
test
cmp
add
retf
or
and
jne
ja
jl
jno
jb
adc
out
in
jno
rol
adc
out
(bad)
lock
mov
push
int
rol
pop
pop
cmp
push
mov
sub
sub
mov
fnsave
mov
(bad)
xchg
imul
outs
xlat
inc
adc
das
fdivp
cmps
add
push
or
fcmove
dec
ficomp
mov
push
jb
push
xor
sar
popf
je
xor
pop
je
cmp
pop
mov
jge
cmc
mov
in
push
sub
lods
ja
cmp
mov
ss
mov
cdq
jle
mov
mov
pop
mov
xchg
jp
(bad)
mov
push
or
(bad)
repz
or
cmp
in
cmp
pusha
xchg
or
jne
dec
mov
jae
add
push
mov
jb
add
adc
jp
inc
jbe
sub
fs
mov
loope
or
pop
xchg
addr16
in
adc
addr16
cmc
nop
mov
mov
stc
mov
cmps
inc
js
stos
dec
idiv
add
out
mov
xchg
xor
test
movs
shl
dec
loop
mov
int
inc
outs
int
mov
pop
aam
out
mov
loope
pop
sub
(bad)
(bad)
jmp
and
aad
rcr
xchg
sbb
or
sbb
xor
sbb
xchg
mov
or
pop
mov
ds
call
in
adc
les
mov
dec
fsubrp
jne
jns
jo
jecxz
(bad)
jg
shl
and
out
mov
dec
pushf
mov
dec
jae
pop
cmps
sbb
pop
inc
call
call
jmp
(bad)
fistp
adc
mov
nop
or
daa
push
add
les
adc
gs
es
or
and
imul
jbe
dec
sbb
jno
or
ja
add
test
call
dec
inc
and
lahf
lea
lahf
inc
inc
arpl
dec
push
jmp
mov
shl
into
loope
sub
mov
jl
mov
adc
cld
or
iret
sub
or
mov
int3
movs
jp
mov
movs
push
jecxz
cmp
xchg
xchg
pop
inc
addr16
dec
jmp
pushf
inc
jmp
mov
xchg
pop
iret
aam
sub
dec
pop
jecxz
addr16
jo
jns
(bad)
ja
pop
arpl
jge
icebp
popa
jns
push
dec
loope
imul
bound
cld
cdq
jl
mov
sahf
mov
ins
xchg
mul
jae
adc
pop
fcomi
or
and
je
sub
iret
mov
push
add
aas
out
and
push
sub
sub
mov
jns
std
jle
and
jno
loope
in
mov
les
enter
scas
sub
test
mov
cs
fisttp
test
retf
mov
inc
iret
inc
clc
or
adc
push
inc
xchg
mov
pop
pushf
xchg
mov
inc
stos
xor
int
dec
test
cmp
fild
xchg
jmp
(bad)
fiadd
dec
push
bound
data16
fnsave
jmp
add
sahf
loopne
clc
hlt
hlt
inc
jo
cmps
scas
inc
sbb
ins
mov
ret
inc
push
fwait
xchg
dec
xor
mov
cmp
push
or
lock
dec
cld
and
hlt
(bad)
push
pop
jl
xor
les
test
(bad)
add
pop
shr
xchg
sbb
mov
pop
ins
mov
and
pop
mov
stc
shr
jle
xor
or
fdivrp
adc
aad
repnz
adc
lods
mov
sbb
and
ret
xchg
mov
aam
cmc
stos
cmp
sub
int
pop
movs
jmp
mov
ror
jge
fbld
xchg
dec
mov
out
jo
mov
add
cdq
stc
jbe
in
jmp
in
sbb
inc
push
xchg
push
pop
xchg
ss
and
je
inc
loop
ins
mov
pop
pop
adc
movs
or
adc
(bad)
cmp
data16
addr16
sbb
jecxz
test
xor
pop
mov
xor
push
dec
das
xchg
jl
popf
xor
loope
inc
xchg
arpl
cmp
inc
fimul
lahf
sub
es
imul
inc
in
ror
outs
iret
aas
cmp
pop
stc
hlt
(bad)
in
xchg
loopne
jnp
cmps
mov
arpl
add
jns
add
adc
test
jmp
cmps
and
or
loope
sbb
cmps
push
frstor
adc
call
mov
mov
xchg
xchg
hlt
mov
jno
sub
mov
es
push
add
xor
sub
and
gs
sbb
mov
ds
int3
fidivr
jmp
mov
xor
scas
daa
mov
xlat
sbb
fcomi
nop
cdq
mov
stos
sub
sub
loopne
(bad)
imul
cld
pusha
(bad)
std
jb
(bad)
(bad)
loope
jp
cmps
js
movs
lds
mov
jle
dec
rcl
pop
pusha
adc
sub
and
fwait
imul
mov
push
jle
sbb
mov
loopne
inc
data16
loop
ret
mov
or
and
jmp
jmp
int
ds
sbb
jg
cmp
das
out
imul
je
sbb
loopne
mov
fs
pop
div
(bad)
cld
ja
xchg
mov
push
icebp
pop
std
sbb
xlat
cdq
sahf
and
aad
shr
pusha
imul
cld
repz
(bad)
jecxz
in
mov
out
and
or
mov
out
sbb
ret
movs
fdivr
fmul
mov
jbe
lds
aas
inc
fnstsw
sahf
jnp
mov
and
push
fstp
stc
inc
loope
xchg
shr
mov
pop
shr
jmp
cdq
pop
das
cwde
push
adc
mov
loop
jmp
repz
jge
adc
jl
sub
xchg
ret
fisttp
test
add
cmp
imul
xchg
(bad)
pop
inc
out
jnp
cmps
or
and
rol
inc
cwde
shl
mov
fiadd
xor
add
fs
jg
loopne
sbb
enter
mov
sub
sub
push
lgs
add
mov
mov
test
mov
les
retf
fdiv
sar
ins
scas
push
ins
adc
popa
dec
in
mov
sbb
and
(bad)
cmp
test
scas
cmp
jmp
mov
mov
jae
out
and
cs
mov
mov
loopne
adc
iret
mov
or
mov
bound
jne
test
les
fisub
and
sub
rcl
iret
out
ins
mov
loopne
jp
cmp
ds
into
cmp
bound
fst
fidivr
push
cmp
outs
(bad)
push
in
mov
aad
mov
pop
in
xchg
xchg
dec
les
and
jne
out
ds
mov
push
in
leave
pop
cmp
sub
into
test
xchg
push
test
scas
gs
sub
jl
mov
push
add
popa
imul
jbe
push
cmps
and
ins
fild
or
aam
lea
mov
jmp
mov
mov
daa
jne
mov
inc
test
push
xor
sar
cmp
inc
ficomp
enter
js
push
jge
jg
icebp
inc
imul
in
cmp
ds
cmp
pushf
test
test
xchg
pop
mov
leave
je
retf
fwait
xchg
push
dec
mov
push
or
aas
aam
ds
push
cmps
pop
mov
adc
sub
cmp
ins
mov
stc
sbb
cmp
rcr
push
aad
adc
push
add
stos
and
(bad)
sbb
xor
and
inc
dec
test
pop
iret
int3
push
nop
fnsave
mov
pop
sub
outs
cmp
mov
test
cmc
das
aaa
adc
xor
ss
mov
xor
xchg
xchg
pushf
dec
mov
addr16
or
mov
or
icebp
jmp
or
or
add
aaa
xchg
jge
push
jl
cmp
lods
push
test
mov
loop
cmp
idiv
inc
(bad)
mov
(bad)
out
fnsave
or
or
fild
out
pop
mov
jge
div
cmc
pop
or
and
push
ret
jae
popa
xor
leave
ds
leave
outs
pop
pop
dec
test
xor
shl
leave
fild
pusha
addr16
sbb
sahf
(bad)
test
mov
xchg
mov
shl
adc
dec
sub
mov
or
mov
scas
sub
sar
mov
dec
mov
sbb
leave
pushf
adc
sub
adc
repz
or
fsubr
imul
jg
push
icebp
es
fdiv
call
fwait
xchg
pop
int
sub
nop
fist
push
xor
jae
les
adc
loop
mov
popf
pop
xor
fbld
inc
inc
sahf
out
cld
fwait
sub
stos
fbld
ja
es
test
mov
call
adc
int
std
mov
mov
clc
data16
cdq
sub
sbb
cs
mov
and
into
push
add
mov
push
sbb
and
pop
jno
sub
mov
push
movs
repnz
pop
mov
jmp
int
ss
inc
dec
jbe
lods
pop
loope
pop
call
add
clc
jl
jge
xlat
or
sbb
mov
sub
je
(bad)
sub
add
and
pop
pop
mov
(bad)
push
daa
cwde
push
mov
cwde
xor
loope
cld
pop
(bad)
push
scas
adc
cmp
popf
mov
inc
sti
aam
movs
jle
sbb
outs
jb
aam
call
les
fstp
cli
(bad)
leave
into
or
add
and
mov
sar
mov
and
lods
fdivp
das
adc
pop
mov
add
push
loop
jmp
cmc
sbb
popf
push
mov
cmovg
push
inc
stos
inc
add
fisubr
xor
jecxz
in
leave
std
std
je
aad
inc
pop
ins
dec
dec
push
xlat
aam
adc
pop
aas
push
xchg
pop
scas
adc
adc
mov
loop
loop
mov
movs
fmul
scas
fcmovnb
xchg
fwait
retf
jno
pusha
xchg
push
mov
inc
xchg
push
jno
xlat
dec
iret
outs
mov
pop
pop
sti
rcl
jns
push
ss
sub
push
cmp
leave
inc
mov
mov
repz
inc
mov
mov
add
or
shl
int3
sbb
sbb
sbb
dec
out
pop
push
xlat
pushf
sti
retf
ret
aas
xchg
add
jnp
mov
xor
push
or
mov
and
div
xor
add
cmps
xor
xchg
xchg
inc
and
sbb
imul
in
jnp
push
stos
push
adc
test
fadd
in
das
dec
out
or
mov
neg
xor
out
aam
mov
mov
mov
push
arpl
pop
push
mov
xor
cli
lds
ja
sar
mov
xchg
leave
ss
in
mov
ins
mov
sbb
pushf
mov
dec
out
push
stc
sbb
daa
lahf
mov
cli
mov
push
aam
(bad)
pushf
in
xor
inc
in
test
mov
call
jae
sti
fisub
gs
test
test
ds
dec
add
inc
mov
aad
rol
sub
add
mov
or
cli
mov
ins
mov
push
mov
movs
sbb
ins
mov
jl
jns
stos
cmp
push
stos
ret
sbb
pop
lea
sub
xchg
test
sbb
cmp
mov
push
scas
(bad)
dec
dec
sahf
rcl
pop
div
push
lock
test
jae
cmp
fimul
outs
or
inc
inc
movs
mov
mov
(bad)
int3
adc
cmps
add
add
push
std
fistp
mov
jno
rcr
lods
push
ins
or
push
push
dec
or
sub
mov
dec
pop
xchg
stos
sub
daa
mov
ds
call
mov
ficomp
stos
stos
out
dec
fbld
mov
or
pop
mov
pop
enter
mov
sar
adc
ret
pop
mov
(bad)
into
and
arpl
(bad)
stc
mov
add
inc
xchg
ror
in
shl
dec
adc
lds
icebp
sub
mov
int3
adc
pushf
je
push
mov
mov
inc
push
enter
pop
mov
cli
(bad)
jmp
adc
rol
xor
sti
fwait
add
mov
or
mov
mov
sbb
lahf
mov
and
push
pop
pop
call
and
ins
push
lds
xchg
adc
push
jl
dec
xchg
cmps
inc
xor
cmp
ds
das
inc
add
mov
add
dec
out
call
enter
inc
xchg
stos
push
es
push
into
jg
push
add
mov
jl
sbb
jge
dec
sub
iret
clc
mov
xchg
adc
push
rol
adc
pop
dec
hlt
neg
cmp
icebp
mov
pop
stc
xchg
inc
(bad)
push
jne
push
mov
mov
das
pop
xchg
xlat
jb
lods
xchg
fsubr
inc
add
push
pop
(bad)
dec
shl
push
mov
movs
test
add
in
cld
and
dec
pusha
sar
inc
test
inc
add
mov
aaa
or
(bad)
dec
xor
push
shr
add
test
(bad)
mov
test
fisub
xchg
popf
lods
int
sar
bound
mov
cmp
cwde
ret
dec
add
or
mov
ret
bnd
mov
ds
cli
cli
adc
popf
push
or
ins
cmp
mov
fsubr
adc
push
in
cld
mov
aas
cmps
sub
and
inc
ret
or
xor
aam
(bad)
rol
pop
hlt
push
jl
(bad)
jg
pop
jp
cwde
ds
inc
push
fmul
and
adc
imul
cmps
or
lea
dec
inc
xchg
cwde
adc
xor
add
mov
xor
push
add
pop
inc
cmp
mov
xchg
test
pop
fnsave
adc
push
(bad)
outs
push
add
lods
mov
mov
retf
aam
ja
imul
pop
mov
mov
push
fs
daa
cmp
daa
pop
popa
out
ins
or
add
sub
push
pop
mov
ja
jmp
cmp
add
push
pmaxsw
in
xor
shl
sbb
xor
xor
or
imul
ja
call
inc
mov
loopne
test
jmp
jbe
sub
jns
in
jp
cmp
lea
add
jo
lods
mov
cmp
xchg
jl
pop
stos
retf
retf
test
rcr
lahf
shl
sbb
aaa
sub
rcr
pop
mov
stos
mov
ret
cmp
pop
or
xchg
cld
(bad)
fadd
repnz
xchg
and
loopne
scas
xor
call
sahf
xor
inc
mov
dec
mov
retf
ja
or
jle
xor
fiadd
test
pop
mov
push
clc
push
jmp
bound
and
shl
mov
mov
or
aam
inc
dec
add
sub
sbb
push
dec
or
fcmove
xchg
out
cmp
sbb
sbb
add
popa
movs
pop
xor
dec
inc
and
ins
ja
sbb
(bad)
div
(bad)
(bad)
stos
jo
cmp
sub
js
jo
add
ins
ret
or
iret
and
mov
sti
inc
mov
push
push
popa
mov
das
mov
push
cwde
in
sbb
xor
add
iret
pop
lods
xchg
jnp
mov
dec
adc
pop
xchg
inc
cmp
mov
mov
push
nop
pop
sub
call
xor
mov
inc
in
outs
inc
xor
xor
int
iret
sti
adc
push
stos
ss
std
mov
into
fdivr
pop
nop
rcl
jae
inc
jle
test
or
push
lock
imul
enter
mov
lea
fldcw
xor
leave
xchg
sbb
idiv
dec
scas
xchg
test
fst
pop
mov
push
cdq
ja
pop
push
mov
cmps
loop
fwait
xor
adc
in
push
call
cmp
cmps
out
cmp
imul
imul
pop
cmp
shr
outs
push
mov
(bad)
jg
pop
test
(bad)
ss
mov
mov
mov
cmps
add
inc
xor
mov
cmp
seto
js
lods
lock
mov
fld
sub
fld
jmp
mov
hlt
repnz
and
or
xor
mov
icebp
cmp
enter
cdq
adc
jnp
popa
pop
cmps
test
jno
outs
adc
adc
and
jle
adc
dec
and
sbb
push
and
scas
mov
scas
arpl
call
int
retf
push
js
pop
pop
and
cmps
push
stos
gs
daa
jae
cmp
or
test
movs
fbld
add
fwait
out
push
adc
(bad)
sti
and
lods
mov
loop
sbb
pop
inc
mov
aam
jno
cld
dec
cmc
pop
push
fwait
lods
or
jp
or
inc
pop
xchg
dec
rol
movs
std
out
dec
or
out
jge
pop
inc
shr
jo
push
cmps
ja
xchg
sbb
sbb
sub
mov
pop
xchg
popf
sbb
popf
mov
and
add
mov
inc
pop
fcmovne
fsubp
xchg
adc
jp
xchg
fisubr
cwde
adc
pop
hlt
mov
cmp
sbb
cli
test
ds
mov
or
mov
adc
loop
stos
jnp
and
aad
cdq
mov
jbe
ins
retf
adc
cwde
stc
cmps
dec
push
hlt
sbb
ins
inc
inc
cmp
mov
inc
push
stc
and
xchg
out
mov
jp
cmp
inc
push
or
(bad)
jae
xchg
pushf
jb
dec
mov
nop
push
cdq
sub
mov
test
or
dec
retf
outs
sub
gs
and
imul
inc
es
sub
stc
inc
mov
ja
mov
mov
les
arpl
cmp
mov
cld
movs
lods
sub
imul
push
mov
push
cmps
addr16
or
mov
sub
jg
add
stc
mov
icebp
fdiv
into
or
pop
dec
sub
je
or
(bad)
pop
xchg
xor
mov
adc
cmp
pop
lock
retf
iret
xor
ficomp
pop
inc
jno
pop
add
sub
mov
test
sbb
push
imul
pop
pusha
out
ins
adc
push
mov
sbb
pop
ficom
fcmovbe
mov
xchg
enter
mov
imul
cmp
mov
mov
sahf
in
mov
add
fisub
xchg
xor
pop
clc
cmp
mov
jg
sar
dec
in
js
leave
pop
or
fimul
dec
(bad)
(bad)
jae
popa
test
and
call
pop
mov
xor
stc
int3
jnp
mov
js
lods
inc
mov
aam
fdivr
dec
cwde
arpl
push
mov
int
mov
pop
or
add
ret
jg
inc
cli
sbb
sub
inc
dec
rol
loop
and
cmp
jg
icebp
pop
(bad)
pop
or
mov
iret
pop
mov
inc
pop
ret
jge
lahf
push
fdivr
jle
pop
and
sub
mov
addr16
push
inc
or
xor
xor
inc
xor
mov
fist
pop
jns
ins
jno
cld
xor
mov
stos
mov
mov
cmp
not
rol
arpl
jecxz
scas
adc
enter
sti
dec
cmc
and
hlt
cli
(bad)
mov
jae
cmps
repnz
dec
jecxz
and
mov
cmc
or
daa
cmc
out
push
or
mov
xchg
popa
or
sub
enter
and
push
inc
jne
mov
inc
out
movs
adc
cmp
aaa
sub
pop
add
sbb
mov
pop
add
cs
pop
minps
repnz
sbb
popa
pop
sbb
out
mov
cmp
bnd
pop
push
or
cli
fmul
call
or
ficomp
(bad)
xor
cmp
mov
imul
sbb
jle
mov
mov
cli
fsub
scas
sbb
or
mov
or
stc
pop
or
sbb
into
add
ror
push
out
and
pop
and
pop
dec
or
out
jnp
xor
jecxz
pushf
pop
je
out
popa
ss
push
fsub
(bad)
adc
dec
fisubr
outs
rol
mov
or
dec
and
jb
jo
movs
test
add
sbb
cmps
mov
push
add
push
dec
imul
jnp
jecxz
adc
sbb
enter
and
jp
pop
mov
inc
out
scas
fs
fisttp
out
and
xchg
dec
into
jle
inc
jo
sbb
std
adc
mov
mov
push
mov
xchg
popf
sbb
add
mov
xor
adc
mov
arpl
mov
mov
jmp
xlat
adc
ret
(bad)
lea
or
cmps
cmp
lods
fnstenv
mov
cmp
jnp
add
into
sub
mov
dec
or
or
(bad)
sahf
push
or
mov
push
sti
sub
sbb
leave
sub
jl
inc
xchg
cs
sbb
fld
(bad)
fwait
cmp
push
into
push
int3
mov
je
(bad)
enter
jl
push
cdq
popf
mov
test
out
mov
cmp
cwde
cmp
ds
movs
jge
mul
lods
lds
xor
dec
out
sbb
jno
leave
jl
loopne
das
aam
pop
fistp
push
adc
dec
adc
mov
stos
adc
imul
hlt
mov
sbb
xor
mov
push
and
ret
cmp
js
sahf
push
mov
jp
pop
add
mov
sbb
push
ja
sbb
shl
inc
push
call
pop
mov
btc
xor
loopne
jmp
cwde
stos
push
add
pop
fcom
imul
mov
add
lods
pop
cmp
(bad)
adc
outs
mov
test
adc
retf
push
ret
fsubrp
mov
aaa
jnp
(bad)
mov
loope
(bad)
pop
jo
jecxz
dec
ret
rol
or
lea
ja
mov
adc
cli
fs
jecxz
fdivr
add
pop
fs
mov
push
mov
pop
adc
cmp
xor
sub
mov
mov
daa
mov
jns
sub
jl
xchg
push
push
(bad)
ficom
inc
pop
push
mov
retf
cmp
outs
fwait
scas
jae
xor
inc
pop
sbb
pop
xchg
repz
out
pop
inc
push
push
cmp
call
retfw
xchg
fwait
cmp
xchg
push
lods
aam
aam
and
test
cmp
add
push
mov
sub
in
jge
out
out
adc
fist
outs
pop
pop
movs
sub
cmp
cdq
cmovb
movs
out
cmp
sbb
add
je
scas
pusha
sub
in
je
adc
repz
mov
or
or
repnz
lea
xor
int3
jmp
pop
dec
mov
nop/reserved
push
dec
adc
inc
aam
jecxz
adc
or
stos
sbb
das
inc
and
sbb
sub
dec
sub
cld
mov
cli
and
(bad)
loop
mov
mov
(bad)
dec
xchg
fist
pop
jecxz
jnp
lock
mov
mov
mov
enter
les
lods
push
push
aas
les
retf
mov
test
cmp
inc
fwait
lds
addr16
sar
shr
(bad)
jge
out
mov
mov
push
ret
ja
ret
popa
icebp
mov
repnz
call
mov
imul
pop
or
aas
mov
jae
and
shl
cwde
das
rcl
xchg
cmp
jnp
sbb
pushf
mov
shl
mov
push
pop
bound
xor
es
icebp
push
inc
inc
into
xchg
movs
xchg
dec
sar
cli
add
pop
mov
pop
fmul
jae
retw
(bad)
push
sbb
stos
lea
out
dec
fs
push
mov
mov
scas
xchg
movs
sub
es
or
mov
sub
ret
aam
jns
add
push
aaa
or
jbe
pop
inc
pop
mov
mov
sub
inc
xor
mov
loop
mov
inc
sar
mov
pop
adc
jge
mov
jl
push
pop
jl
fld
add
std
xor
push
bound
pop
aas
das
push
test
cmp
enter
out
pop
mov
sub
hlt
(bad)
fsubr
ss
or
jg
jae
rol
je
out
fsub
stc
mov
push
imul
mov
rcr
dec
cmp
or
push
cmp
outs
pop
hlt
loop
out
jae
fiadd
iret
stos
movs
in
sbb
arpl
jecxz
push
outs
adc
pop
inc
and
int
pop
daa
test
out
leave
les
dec
adc
pop
and
retf
add
loopne
cld
mov
sbb
lods
jecxz
or
stc
fist
mov
(bad)
in
ror
jp
xlat
pop
sar
pop
adc
dec
in
fld
jns
je
mov
add
inc
add
add
and
jne
pop
cmps
jns
cmp
out
push
mov
out
sbb
shl
mov
xchg
push
shl
or
test
ins
fs
loopne
pushf
lods
sub
mov
and
arpl
int
out
cs
mov
sti
inc
pop
jecxz
std
stc
outs
rcl
xlat
push
movs
loopne
xor
pop
scas
push
lods
jecxz
out
cmps
mov
test
test
ror
and
sbb
jmp
jns
test
xchg
test
mov
das
mov
sub
fdiv
jno
lods
jb
leave
xchg
imul
inc
inc
outs
pop
sti
xor
sbb
fldenv
sbb
push
popa
xchg
neg
ins
test
xor
inc
push
jb
repz
jbe
lahf
aaa
sar
out
push
outs
lahf
mov
fnstenv
push
push
sbb
dec
xor
test
loope
lea
pop
mov
arpl
pop
imul
jg
add
inc
mov
jae
sbb
xchg
lock
inc
jle
loopne
sbb
jp
mov
and
and
pop
out
dec
loope
aad
in
mov
pop
inc
pusha
js
out
xchg
rcr
adc
jl
dec
jne
leave
imul
sbb
stos
inc
fidivr
cmc
retf
loopne
or
sbb
sbb
push
sub
ds
js
imul
arpl
lods
mov
push
leave
or
cdq
jnp
pop
push
pusha
jg
lea
xchg
les
call
or
bound
inc
adc
rol
pop
jg
push
lea
mov
arpl
jg
cmp
push
imul
mov
cmp
cmp
and
dec
inc
push
dec
mov
stc
add
int
pop
(bad)
or
xor
aaa
(bad)
cmp
push
fcmovnu
push
fisttp
push
(bad)
es
sub
dec
jne
pop
lds
shr
and
xor
aam
fstp
push
jne
aam
sbb
in
std
push
inc
(bad)
hlt
out
fidiv
scas
jns
(bad)
jnp
mov
inc
pop
cld
loope
pop
cmp
shr
inc
xor
push
bound
imul
jle
pop
daa
jmp
mov
mov
jae
xchg
adc
pop
sbb
loopne
mov
jg
or
mov
cli
cld
inc
jno
dec
mov
mov
jecxz
jmp
in
test
iret
mov
mov
cli
mov
call
lods
pop
xchg
pop
movs
jge
fs
or
mov
fild
popf
cmp
inc
jo
rcr
repnz
sub
ins
or
(bad)
stc
shl
movs
scas
mov
call
xchg
retf
push
push
mov
mov
scas
imul
in
jmp
mov
cmp
out
aam
popa
pusha
ins
stc
sbb
inc
mov
jle
push
in
aas
js
(bad)
mov
cmps
lock
nop
(bad)
gs
mov
pushf
das
pusha
std
push
sar
cwde
movs
sbb
xchg
ja
pop
jae
mov
mov
ret
ret
sti
and
out
loope
cmps
das
fwait
dec
push
push
mov
xchg
xchg
std
pushf
in
ss
lods
xchg
repz
mov
pop
push
sbb
clc
dec
sahf
jmp
cmp
(bad)
mov
mov
adc
mov
outs
fs
push
dec
lods
mov
sbb
xor
xor
retf
sub
cmp
xor
xlat
adc
out
inc
mov
(bad)
fs
shl
es
sub
jmp
inc
sahf
and
mov
mov
jae
aaa
dec
jge
adc
enter
or
ds
stos
jecxz
ins
(bad)
or
or
or
jbe
fisttp
xchg
push
aam
mov
jmp
add
cmp
enter
mov
add
pop
xor
mov
sbb
or
sub
stos
push
cdq
test
xor
adc
out
lds
aam
push
into
(bad)
dec
repnz
jl
push
enter
addr16
out
pop
test
mov
scas
bnd
dec
sub
xchg
ficomp
stos
add
xchg
pop
and
scas
mov
adc
adc
nop
mov
scas
mov
inc
push
inc
sub
jl
mov
jne
test
in
or
xor
push
test
(bad)
or
pop
mov
pusha
ss
sub
fucomip
aam
aaa
push
push
test
call
push
movs
in
mov
cmp
add
push
stc
and
mov
in
cwde
inc
pop
ret
mov
stc
jp
std
sbb
cs
cmps
mov
jp
js
dec
daa
jmp
sbb
mov
stos
test
nop
mov
xchg
jecxz
out
jns
cmps
aam
fld
pop
dec
and
mov
fistp
loopne
and
pop
das
fnsetpm(287
push
push
dec
jnp
stos
scas
cmp
inc
push
rcr
mov
data16
inc
ret
pop
xchg
data16
xlat
ss
mov
fadd
ins
pop
add
adc
jp
dec
loop
rol
cmps
imul
jle
cld
push
mov
dec
mov
int
pop
hlt
bound
mov
stos
and
adc
je
data16
mov
pop
mov
xor
(bad)
pop
mov
cmp
dec
fld
ror
in
and
clc
sbb
out
jb
adc
jnp
fldenv
test
push
pop
sbb
dec
in
sbb
jne
mov
ret
sub
ror
cmp
test
lahf
lods
xor
(bad)
in
dec
mov
call
es
mov
xor
dec
jp
mov
fstp
and
mov
cld
mov
dec
and
das
bound
pop
daa
fld
pop
mov
mov
cwde
cmp
shr
mov
xor
adc
push
cmp
pusha
push
cmp
xor
ret
pop
loope
add
leave
adc
and
jbe
xor
scas
add
lahf
fbstp
cmps
add
adc
movs
ja
jae
movs
jmp
mov
cmp
sbb
jo
jae
bnd
mov
fimul
loope
ds
rcr
mov
popf
pop
push
push
and
mov
fdivr
and
cmps
mov
aad
mov
repnz
les
cli
lods
push
fidivr
scas
mov
loope
or
dec
jbe
inc
xor
loop
dec
add
xor
fcmovbe
inc
mov
jle
jecxz
stos
pop
das
push
jmp
add
mov
je
mov
cmp
cmp
or
aad
sub
in
dec
adc
pop
cmp
int
or
(bad)
sub
dec
(bad)
inc
loopne
push
pop
adc
repz
dec
call
mov
jmp
ds
out
or
out
fucomp
sahf
sub
and
and
in
mov
aas
aad
or
sub
movs
loopne
ds
xor
out
ret
jmp
pop
xlat
xchg
stos
push
jae
sub
div
push
fld
scas
xchg
dec
cmp
mov
and
cmp
mov
out
jnp
daa
test
mov
pop
hlt
fwait
(bad)
mov
cmp
sub
cmp
xchg
xor
dec
lahf
fwait
inc
push
xchg
mov
cwde
pop
mov
jmp
clc
clc
pushf
or
shl
sbb
push
pop
add
adc
std
int3
or
and
loope
out
or
mov
adc
call
enter
jg
dec
das
inc
jo
or
or
add
xor
adc
(bad)
std
jmp
and
cmp
cmps
jne
pop
sub
pop
out
mov
in
retf
movs
push
cmc
in
cdq
fbstp
jmp
pop
push
mov
in
das
mov
pop
cmp
and
clc
test
cmp
shl
and
pusha
es
or
xor
xchg
sub
test
mov
sub
or
in
mov
mov
call
xor
jo
into
xor
outs
mov
aad
cmovb
mov
jae
pop
adc
ss
sub
dec
jmp
mov
test
lods
out
mov
jne
movs
dec
or
add
call
leave
fwait
jnp
cmp
leave
int3
enter
mov
push
movs
mov
cmp
fimul
xor
sahf
arpl
mov
add
mov
loopne
add
shl
arpl
mov
sbb
jmp
lea
pop
ror
jno
push
ins
shl
cmp
jnp
nop
sbb
mov
or
cmc
add
ja
cmp
ss
hlt
push
add
mov
mov
xchg
repz
push
mov
mov
fimul
sub
fsub
test
and
(bad)
call
fisubr
jne
fs
push
sbb
out
xchg
clc
sub
das
xor
inc
fwait
jb
xlat
xlat
stos
xor
movs
jmp
mov
stos
jge
rep
jae
leave
loope
push
mov
pop
add
or
popf
lods
or
add
stos
adc
sbb
add
aad
(bad)
pop
scas
repnz
neg
lds
jecxz
test
movq
daa
out
lea
mov
mov
in
jecxz
cmps
jmp
pop
push
sbb
fisubr
pop
sub
ss
arpl
jmp
stc
scas
cmp
xchg
stc
dec
cwde
pop
jmp
mov
mov
mov
ret
in
lock
rcl
jns
cmps
dec
mov
cwde
int3
mov
inc
das
adc
inc
cmps
test
or
or
push
mov
inc
xchg
jno
xchg
fcom
out
jbe
sub
adc
mov
(bad)
mov
mov
(bad)
fadd
pop
nop
add
fiadd
je
adc
jle
fadd
fwait
mov
add
mov
add
rol
jns
stos
les
outs
jp
cmp
pop
jnp
ficom
xor
in
add
pop
mov
pusha
jo
push
fwait
(bad)
xchg
fnstsw
repz
jg
fmul
jle
xchg
xchg
int
push
jmp
dec
aas
adc
jmp
cmp
or
cmp
movs
cdq
adc
fst
jmp
cmp
loop
test
push
cmp
mov
aam
xchg
pusha
lds
(bad)
xor
push
mov
btr
pop
push
mov
pop
mov
sub
xchg
jle
pop
lahf
fwait
add
sub
jne
aaa
lock
ret
fnstenv
das
inc
ins
inc
cmps
(bad)
cmp
in
repnz
test
scas
int
add
mov
adc
imul
leave
lods
and
das
dec
xor
push
mov
movs
outs
inc
mov
outs
inc
pop
cmps
add
adc
mov
test
lea
cmp
push
adc
scas
mov
ror
jno
xchg
pop
xchg
test
ins
adc
dec
and
xor
imul
inc
gs
retf
jae
sub
mov
cld
cmp
loopne
xchg
push
es
test
push
push
xchg
js
sbb
je
pusha
add
ror
imul
dec
in
adc
mov
push
data16
ficomp
sbb
repz
sbb
inc
aaa
xlat
jmp
cmps
jecxz
pop
jecxz
aas
pop
mov
cld
mov
push
cmp
sbb
pusha
lds
jo
pop
fs
ror
bound
imul
mov
add
dec
cmc
mov
xlat
jecxz
or
ret
dec
inc
fist
fiadd
or
fnsave
clc
cld
pop
gs
mov
add
in
mov
push
push
imul
ror
push
shl
add
nop
loope
ror
ds
js
iret
push
inc
add
jmp
sub
ja
inc
jp
xchg
dec
and
ss
push
cmp
gs
inc
popa
xchg
cmp
shr
pop
out
jae
sar
call
out
ins
icebp
bound
je
imul
inc
mov
dec
mov
pushf
repnz
adc
push
inc
pop
fst
lock
xor
jo
xchg
inc
(bad)
pop
inc
xchg
sub
in
ror
mul
push
hlt
push
fs
pop
add
xor
scas
dec
pop
xchg
adc
xlat
test
cmps
adc
pop
stc
mov
pop
or
stos
push
or
xchg
pushw
imul
call
pop
outs
pop
cmp
jmp
lea
jmp
test
or
in
xchg
mov
xchg
mov
arpl
bound
hlt
hlt
and
cmps
xchg
xor
cmp
fnstenv
add
ins
(bad)
fisub
icebp
imul
push
pushf
jp
adc
test
lahf
or
and
pop
fild
cs
sbb
mov
sbb
in
out
mov
pusha
and
icebp
xlat
pop
xchg
push
and
out
mov
cld
imul
ins
adc
push
iret
lahf
popf
imul
stos
push
or
inc
lock
movs
ss
(bad)
mov
loope
push
repnz
jmp
fs
sbb
and
(bad)
push
enter
jl
in
mov
cmps
or
ret
mov
sbb
xchg
or
inc
mov
add
bound
dec
push
mov
not
das
mov
fistp
cmp
mov
jmp
jae
ds
sub
sub
mov
sbb
mov
call
cwde
inc
sbb
frstor
ins
push
daa
cmps
jmp
mov
dec
pushf
adc
cmps
test
sbb
push
mov
mov
jbe
fsub
int
neg
out
sub
and
lds
ds
mov
cmc
mov
enter
pop
mov
aam
cmps
xlat
or
lods
es
mov
rcr
in
or
pop
cwde
in
or
pop
mov
xor
xchg
pop
jnp
test
jae
sbb
xchg
add
mov
and
(bad)
(bad)
(bad)
in
pop
add
add
mov
cmps
xor
mov
pusha
or
push
repz
(bad)
rol
mov
mov
pop
dec
out
push
inc
jbe
leave
test
push
js
adc
pop
stos
inc
cmc
xchg
add
xor
mov
dec
in
cmp
mov
push
loop
in
(bad)
adc
ror
xchg
mov
retf
(bad)
pop
inc
data16
jle
mov
(bad)
mov
jecxz
sub
bound
and
test
popf
aad
aam
xchg
sahf
fsubr
jae
int3
fs
test
mov
aam
ss
cmp
inc
lods
out
scas
addr16
lods
inc
push
jp
cdq
test
dec
or
inc
and
sbb
jl
and
pop
addr16
cdq
popf
movs
add
mov
std
mov
out
aaa
sbb
ror
push
es
cwde
and
xchg
inc
xchg
xchg
mov
mov
fdiv
sti
mov
adc
fdivr
push
pop
push
push
sbb
jl
xor
daa
or
cli
jl
adc
sbb
inc
(bad)
imul
lods
cmps
push
pop
test
ror
xor
arpl
xchg
jne
inc
and
adc
aas
rcr
sub
aam
mov
popf
pop
sub
arpl
xor
cmp
sbb
bound
adc
and
xor
les
imul
imul
fisub
mov
loope
ret
inc
mov
loop
pop
pop
xor
fwait
jmp
sar
es
pop
daa
dec
fwait
push
mov
scas
fcom
mov
int3
push
push
pop
mov
push
mov
cmc
jge
pop
fnstsw
pop
daa
push
cli
mov
(bad)
jmp
ret
jle
les
mov
push
arpl
es
popa
pop
push
scas
inc
imul
mov
gs
loop
jns
sub
test
sub
fdivr
idiv
pusha
fucom
and
mov
movs
sub
mov
mov
call
push
mov
add
mov
cmps
add
outs
mov
shl
lock
ja
add
lahf
pusha
xchg
cmp
iret
ret
outs
and
pop
fild
inc
and
and
enter
inc
sahf
mov
nop
xchg
sub
stos
mov
mov
fwait
inc
mov
ds
pop
pop
icebp
jecxz
pop
(bad)
cmp
test
jae
stc
es
nop
jmp
dec
or
std
jp
mov
fistp
inc
jecxz
(bad)
pop
xor
jp
inc
cmps
xor
data16
leave
xor
(bad)
adc
sbb
jo
mov
mov
lea
mov
shl
xchg
sbb
fwait
mov
jbe
pushf
adc
rcr
movs
sub
pop
adc
pop
icebp
rcr
fisub
aam
dec
cmp
mov
fcmove
and
ins
xor
sub
adc
sbb
xor
xchg
push
jg
add
xchg
int3
and
mov
mov
movs
leave
adc
pushf
ss
pop
pop
lock
retf
inc
sbb
pusha
sti
pop
addr16
push
mov
in
cld
and
xor
mov
push
cmp
sbb
stos
sub
inc
pushf
inc
dec
lods
mov
scas
jns
push
cmp
fild
or
or
dec
in
dec
pop
ins
jno
push
push
fbstp
icebp
(bad)
and
fwait
sbb
pop
xchg
xor
aad
(bad)
nop
mov
jmp
mov
jecxz
adc
int3
push
push
sub
sub
icebp
cdq
adc
inc
test
add
add
in
lea
cli
rcl
mov
inc
push
pop
inc
test
retf
imul
retf
(bad)
rep
jns
fadd
push
enter
add
xchg
dec
aad
jbe
add
sub
sti
dec
jge
call
push
inc
retf
jmp
mov
sub
pop
jb
pop
neg
repz
push
cmp
dec
or
push
dec
pxor
xor
mov
dec
jb
sub
pop
fsubr
pusha
xchg
mov
iret
fwait
movs
outs
(bad)
mov
fisub
loopne
icebp
je
rcr
(bad)
addr16
pop
push
dec
pusha
xchg
sub
xchg
fwait
dec
lods
or
pop
add
mov
test
push
inc
inc
mov
and
gs
fs
mov
and
mov
ret
popa
fdiv
movs
(bad)
rcr
xchg
push
rol
fs
(bad)
cmp
jge
mov
and
bnd
add
aam
cmp
fmul
mov
jnp
(bad)
icebp
jle
sub
ret
sbb
lds
mov
dec
leave
jecxz
addr16
push
int3
outs
sahf
push
xchg
inc
mov
repz
shl
pop
loop
out
cmp
(bad)
out
add
cmps
jle
ficomp
mov
iret
mov
and
inc
mov
xor
leave
test
shl
in
pop
loope
push
xor
pop
nop
test
xchg
sti
adc
xor
xchg
test
jecxz
call
jo
dec
sbb
sub
imul
(bad)
push
stc
mov
xor
fxch
out
mul
and
mov
(bad)
es
jne
mov
inc
jle
jecxz
mov
inc
je
movs
xor
mov
aad
rcr
jl
inc
fistp
stos
mov
inc
addr16
dec
jle
adc
nop
mov
cmp
mov
adc
and
in
and
pop
mov
ins
cli
inc
sbb
push
jae
xchg
dec
fs
ret
fwait
int3
push
jb
clc
push
xor
neg
mov
mov
scas
mov
pop
jns
test
retf
and
(bad)
jmp
out
int
ja
shl
call
jmp
inc
or
stos
int
push
test
retf
push
mov
rcr
sub
jbe
out
xchg
jo
adc
std
sar
dec
sar
fcom
fcomp
sbb
sub
mov
push
inc
bound
xchg
movs
pop
movsx
push
fdivp
lods
xlat
sar
add
cmps
add
sbb
cmp
popa
ss
xor
push
movs
jg
ins
inc
push
jp
pop
fmul
inc
shl
pop
or
ins
loop
movs
addr16
or
dec
lods
cmp
je
cwde
inc
xor
pop
dec
sub
nop
xchg
add
dec
mov
sub
mov
mov
pop
or
popf
in
shl
leave
add
jecxz
in
xchg
popf
jmp
in
imul
jmp
add
aam
retf
fiadd
imul
out
dec
push
push
dec
bound
(bad)
push
push
std
sbb
les
(bad)
or
sahf
mov
or
fdiv
ins
ss
jl
sub
out
cmp
frstor
mov
or
rol
dec
test
pop
mov
daa
push
aaa
push
cmc
pop
or
mov
(bad)
hlt
push
fsub
inc
aam
xlat
and
idiv
pop
shl
mov
sub
pop
repnz
shl
fldenv
jmp
ds
xlat
aas
jae
rcr
dec
push
shl
hlt
test
in
push
mov
sub
rcr
mov
(bad)
fwait
loopne
ss
stc
sbb
jno
je
sub
jmp
mov
(bad)
out
mov
sub
push
and
jecxz
aaa
cld
xor
add
out
add
fild
mov
pushf
(bad)
sbb
cmps
repz
mov
inc
mov
lds
sbb
ret
out
lds
test
dec
jg
xchg
xor
jle
mov
aaa
add
pop
lock
mov
cmp
add
and
pop
nop
jecxz
mov
out
mov
push
fisubr
ins
es
adc
fmul
clc
ret
cmp
inc
push
xor
inc
jle
push
inc
popf
sbb
push
loopne
movs
(bad)
and
stos
ja
mul
mov
icebp
jmp
test
adc
or
leave
sbb
in
mov
mov
sub
call
sbb
test
mov
je
push
enter
and
out
add
daa
repnz
test
test
dec
stc
jb
inc
sub
pusha
dec
das
or
cmps
mov
dec
shl
adc
and
jle
outs
jb
aad
lahf
out
push
sub
int3
jge
stc
dec
sbb
enter
mov
test
adc
push
jbe
and
mov
in
(bad)
into
ds
call
inc
jmp
or
fst
pop
je
loopne
daa
xchg
fsub
in
sbb
(bad)
xchg
out
ins
(bad)
in
and
xchg
dec
fldenv
inc
mov
enter
call
icebp
pop
leave
pop
stc
(bad)
dec
ja
xchg
cmps
shl
enter
lds
pop
pop
jo
inc
mov
jnp
ret
cs
and
imul
xchg
sbb
aas
daa
xor
or
and
mov
jle
push
xchg
retf
mov
dec
push
cwde
imul
pop
fidivr
iret
call
xchg
sbb
pusha
aaa
push
dec
enter
pop
mov
inc
dec
pop
mov
cmc
cmc
fild
inc
adc
mov
ror
cmps
sub
stos
sbb
inc
add
pop
xchg
mov
push
inc
test
inc
mov
aam
push
cdq
push
in
neg
inc
inc
idiv
call
and
test
out
dec
cdq
sub
jecxz
idiv
sbb
and
push
pop
ins
sbb
adc
and
mov
das
mov
sub
cmp
mov
xor
(bad)
loope
sbb
outs
mov
sahf
pop
loopne
mov
data16
cld
xor
cmp
cs
push
mov
sbb
outs
or
and
cmp
stc
mov
ja
ds
push
(bad)
push
lods
and
jbe
test
sahf
push
jmp
je
mov
xchg
hlt
int
pop
enter
push
sar
cmps
xchg
xchg
push
mov
mov
cmp
inc
cmps
lods
inc
push
stos
push
popa
movs
inc
xchg
pop
mov
cmp
scas
fs
push
mov
mov
inc
in
cmp
jp
or
loopne
(bad)
sti
aaa
sti
aas
push
fsubr
movs
bound
add
cwde
sbb
mov
(bad)
test
pop
ficomp
adc
imul
push
mov
mov
retf
pop
adc
ret
in
stos
jg
pop
mov
inc
push
xlat
ins
mov
fcomip
xor
gs
xchg
cmp
or
xchg
(bad)
repz
(bad)
out
push
and
jmp
ss
repz
lods
call
sar
sub
mov
cld
cmp
and
jg
inc
outs
lods
and
mov
xchg
mov
and
retf
ja
std
addr16
cmp
out
ja
adc
dec
clts
int3
xchg
pop
mov
mov
jne
pop
jns
fs
popf
js
jb
stos
aam
inc
add
aam
out
jmp
sbb
data16
gs
add
push
imul
xchg
rcl
fs
sub
xchg
pop
and
mov
push
xor
ds
jge
movs
push
std
push
test
jp
mov
sar
dec
(bad)
push
leave
pop
clc
scas
add
xor
pop
pop
and
jmp
fiadd
fcmovb
jecxz
xchg
jo
fild
iret
fdivrp
and
rcl
xor
adc
mov
dec
and
icebp
loope
in
inc
imul
aam
mov
js
stos
sbb
push
addr16
cmp
sub
(bad)
adc
je
sbb
add
dec
mov
gs
pop
cmp
and
dec
inc
cdq
mov
cmp
jg
or
xor
bound
sti
gs
or
dec
sbb
cdq
enter
pop
in
ds
cld
pop
inc
loope
pop
cmp
pop
cld
fmul
and
call
push
adc
out
(bad)
jl
mov
sub
outs
leave
jno
call
mov
sahf
mov
mov
lods
cmps
push
push
jne
sbb
hlt
mov
and
jns
enter
aam
pop
sbb
pop
sbb
mov
(bad)
stc
mov
enter
loopne
test
into
ror
popa
cmps
and
fnstenv
xchg
sti
cwde
(bad)
sub
and
push
sti
and
pop
rcl
ja
sbb
xor
sbb
jbe
retf
outs
jl
xor
push
icebp
cmc
pop
into
pushf
jecxz
jge
test
shl
and
inc
and
sub
and
add
cdq
pop
fldcw
add
adc
jle
add
sbb
out
ds
shl
dec
inc
mov
mov
rcr
(bad)
sub
push
shl
push
adc
cmp
cs
xchg
adc
not
sbb
rcr
int3
adc
std
dec
dec
adc
in
jns
pop
inc
in
xchg
mov
mov
mov
dec
ror
mov
push
jb
xchg
fnsave
fwait
data16
test
push
jnp
ret
dec
jnp
(bad)
sbb
jne
aas
cvtps2pd
pop
pop
xchg
fwait
push
or
or
or
mov
xchg
dec
in
adc
xchg
or
pushf
in
push
lds
mov
xchg
cmp
jae
jno
shl
sbb
sbb
pop
push
fcom
lahf
addr16
addr16
push
and
addr16
arpl
dec
pop
js
inc
mov
js
cmps
stc
clc
je
jecxz
mov
push
or
mov
xor
out
ins
push
rol
sbb
inc
jmp
cmps
xor
xor
adc
dec
and
loopne
sar
xchg
pop
test
sub
sbb
das
mov
fisttp
xchg
aad
xor
adc
jle
(bad)
mov
inc
and
imul
lods
and
push
call
call
jge
rcl
repnz
xlat
mov
mov
pusha
jle
stos
adc
push
nop
std
adc
push
retf
push
xchg
jecxz
sbb
(bad)
push
push
fist
repz
xchg
sbb
test
popa
hlt
mov
popf
aaa
inc
imul
dec
or
mov
pusha
ficomp
mov
mov
mov
mov
or
mov
jge
std
mov
fld
inc
pop
cdq
or
or
popf
jg
jmp
sub
push
adc
add
xchg
les
xchg
repnz
xchg
mov
je
dec
enter
jbe
xor
mov
leave
xchg
xor
sub
mov
in
inc
mov
sti
and
cmp
clc
ds
xchg
pop
out
sub
sub
dec
push
inc
pop
mov
(bad)
jnp
das
or
cmps
arpl
mov
repnz
or
out
pushf
idiv
xchg
loope
push
push
fidiv
ret
mov
mov
or
jns
inc
cmp
gs
fwait
mov
inc
ins
xchg
sub
sahf
movs
imul
cmc
inc
xchg
xor
ror
sub
daa
add
mov
mov
(bad)
fsubr
sub
add
cmp
es
stos
mov
mov
xchg
cmp
xor
stc
popa
sbb
call
add
cmp
dec
push
mov
dec
mov
push
mov
jmp
popf
ins
scas
shr
out
and
in
cmp
push
mov
sub
stc
clc
cmp
ret
inc
mov
popa
std
xchg
or
(bad)
mov
nop
jo
loop
mov
add
jbe
xchg
jge
inc
mov
bound
addr16
xchg
jmp
sub
jo
cmps
in
mov
sbb
icebp
inc
sub
or
stc
scas
sub
xchg
scas
xor
inc
bound
ins
lock
fild
repnz
adc
dec
push
push
dec
in
add
lods
ds
in
jecxz
inc
(bad)
int
pop
ins
stos
dec
retf
ret
ret
mov
scas
das
nop
mov
push
retf
jle
ss
test
cmp
mov
adc
sbb
dec
jae
dec
push
fwait
mov
sub
adc
test
fsubr
pop
xor
cld
ins
das
cdq
push
mov
jmp
test
test
popf
fsubrp
xchg
sbb
movs
or
inc
xchg
pop
or
dec
or
mov
(bad)
aam
push
cmp
test
sub
add
adc
fs
shl
test
sub
mov
and
push
dec
pop
rcl
imul
test
loope
mov
aaa
fmul
pop
pop
movs
aaa
xchg
daa
add
ret
sar
pop
jmp
iret
add
lods
mov
xor
fsubr
repnz
add
cli
add
cdq
jb
xor
leave
ins
add
mov
push
cmps
hlt
or
xchg
pop
inc
nop
lods
inc
fwait
in
inc
pop
scas
loopne
inc
mov
inc
add
mov
pop
hlt
addr16
ins
push
dec
stc
js
call
aam
test
dec
imul
int
xor
and
(bad)
in
repz
add
aas
xchg
fcomp
sub
idiv
mov
and
stos
and
out
repz
cld
jge
jnp
shr
fidivr
adc
and
bound
fiadd
xor
adc
jno
lock
lea
pop
mov
xor
ror
ficomp
loop
add
nop
and
jp
outs
push
adc
int
xchg
mov
push
dec
cmovbe
dec
ja
sub
dec
mov
jg
retf
pushf
adc
inc
dec
cmp
inc
jmp
loop
fwait
(bad)
or
ja
pop
lea
cwde
xor
test
adc
popa
stc
out
dec
or
mov
das
movq
sbb
mov
dec
xor
loope
repnz
enter
mov
sbb
push
inc
sbb
jo
pop
pop
xor
mov
outs
or
dec
pop
aam
push
aaa
jnp
adc
std
jne
in
enter
push
enter
adc
pushf
cli
adc
cli
jne
mov
jae
push
fwait
jp
xchg
xor
mov
fadd
pop
call
jbe
push
shl
xchg
push
lods
mov
jp
daa
mov
and
popa
xchg
inc
and
sbb
mov
mov
or
test
shl
jnp
push
mov
add
add
push
cmp
lods
loop
retf
retf
icebp
into
mov
pop
data16
int3
cwde
mov
sbb
fs
scas
jns
stos
add
retf
mov
push
xor
pop
cmp
outs
(bad)
mov
xchg
pusha
sar
adc
adc
fsubp
sbb
or
push
xchg
out
inc
push
push
and
xor
stc
dec
rcl
pop
popa
mov
push
push
adc
inc
scas
movs
or
push
dec
pop
data16
cmps
mov
mov
imul
test
and
jnp
outs
cmovns
dec
icebp
fdiv
xchg
mov
fs
lods
pop
test
outs
(bad)
pop
data16
mov
jne
cmps
xor
dec
pushf
mov
add
out
push
(bad)
pop
dec
mov
shr
pop
std
add
pushf
jmp
fidivr
or
adc
imul
jo
outs
lea
nop
sub
cmps
imul
fisubr
xor
pop
jae
ret
stos
cmp
mov
cs
(bad)
iret
add
ja
(bad)
mov
adc
repnz
cmp
jmp
aad
push
inc
and
sbb
mov
in
mov
push
fbld
pop
pop
in
mov
pop
leave
lds
mov
pushf
sbb
cmp
inc
popf
xchg
call
xchg
fst
div
cld
dec
arpl
inc
adc
cmp
gs
mov
outs
icebp
pop
jbe
test
jae
pop
mov
push
arpl
mov
je
xor
mov
fdiv
and
inc
xor
(bad)
jmp
and
fist
push
and
dec
loop
adc
jb
loope
mov
les
pop
and
test
adc
cdq
gs
mov
test
push
js
in
mov
lea
push
int3
sbb
sbb
push
stos
mov
rol
ror
sar
mov
push
sub
in
pusha
test
jne
add
pop
adc
cmp
jb
mov
je
push
push
adc
data16
pop
add
(bad)
jns
lds
test
call
or
lock
dec
mov
aad
rol
(bad)
jl
adc
nop
pop
stos
rcr
lods
lahf
loop
gs
mov
mov
or
cld
leave
cmp
stos
arpl
lods
or
mov
jmp
loope
leave
mov
mov
out
xor
jmp
aam
repnz
fild
mov
fldenv
sbb
fwait
pop
mov
jmp
sub
stos
adc
push
add
mov
pop
ret
xor
mov
xchg
and
mov
adc
leave
rol
adc
push
enter
test
push
cmp
jmp
mov
jae
sbb
and
repnz
xchg
dec
das
mov
(bad)
loop
daa
iret
add
out
mov
(bad)
mov
add
and
in
lods
sar
cmp
jb
sbb
sbb
call
cmp
mov
jne
popf
mov
mov
imul
fldenv
vshufps
xor
jl
cld
pop
scas
cmp
movs
push
rcl
push
out
ret
jns
shl
lea
call
ins
or
ret
mov
out
cmp
loop
test
mov
lahf
enter
call
js
shl
add
repz
out
add
lahf
sti
repz
je
push
test
dec
cmp
dec
mov
add
sbb
sub
call
inc
ja
mov
xchg
das
sub
(bad)
pop
scas
or
mov
imul
mov
xor
cmp
jae
or
test
mov
xchg
pushf
and
mov
push
outs
dec
xchg
push
xchg
add
mov
adc
sub
shl
or
jl
ins
jl
pushf
mov
sub
and
daa
aaa
arpl
cmc
(bad)
clc
xor
cmps
std
mov
jp
mov
out
cmp
cmp
and
sahf
sbb
jnp
jmp
mov
jl
push
lds
sub
fmul
cmovl
inc
ror
les
add
xlat
and
inc
mov
fdivp
cli
call
mov
sbb
add
sbb
into
xor
inc
hlt
xchg
std
add
enter
jg
pop
(bad)
stc
xor
daa
inc
in
in
inc
loop
pop
mov
mov
push
and
int3
adc
aaa
(bad)
push
and
shl
retf
ret
adc
lods
xor
movs
pushf
dec
mov
pop
pop
pushf
sar
ins
mov
cmp
push
mov
dec
test
sbb
dec
(bad)
lock
fiadd
xor
mov
cmp
pop
das
dec
cli
scas
sbb
xlat
mov
call
mov
dec
jae
aad
pushf
adc
imul
push
inc
pop
mov
mov
outs
hlt
pop
and
imul
sbb
push
push
sub
fmul
push
mov
push
repnz
call
rol
repnz
out
adc
repnz
inc
ret
nop
add
pop
sbb
mov
jno
xchg
stos
neg
cli
sbb
into
fdiv
js
push
jo
sbb
mov
(bad)
es
mov
test
xlat
in
and
mov
and
retf
bound
mov
xor
imul
jns
mov
out
pop
add
pop
je
add
test
jae
lock
iret
jmp
out
aad
jmp
out
inc
push
inc
fisttp
cmps
dec
sub
loopne
inc
cmp
int3
stc
jp
xchg
sub
loop
pop
ror
repnz
push
pop
xor
mov
mov
sti
les
mov
xor
add
test
test
sub
pop
movs
pop
dec
adc
jns
loope
popa
jbe
popf
sub
out
frstor
and
dec
idiv
scas
jne
fimul
daa
sub
sub
jae
frndint
mov
aas
pop
push
rcr
(bad)
or
movs
pop
je
pop
sub
repz
xchg
dec
aad
jnp
dec
jnp
sbb
popa
pmaxsw
aad
sbb
popa
sub
adc
ror
adc
(bad)
stc
out
addr16
xchg
fisttp
inc
f2xm1
movs
sbb
out
daa
repnz
pop
mov
dec
cli
mov
jno
mov
in
cmps
sbb
jg
fdivr
jnp
sbb
lahf
add
jb
xchg
scas
dec
dec
call
dec
fcom
pushf
inc
sbb
and
add
pusha
pushf
outs
or
and
dec
in
inc
movs
jmp
ss
push
jmp
mov
ret
(bad)
pushf
jmp
pop
or
xor
ret
(bad)
jl
popa
mov
lock
sub
pop
cmp
scas
xor
cs
pop
cmps
inc
loopne
test
sti
cmps
sub
add
mov
and
xchg
mov
daa
les
popa
dec
cmps
dec
data16
outs
bound
(bad)
repnz
mov
push
and
jle
inc
or
xchg
xchg
pop
dec
int
int
inc
inc
xor
add
loope
inc
cmp
or
addr16
lock
outs
push
pop
adc
aad
loopne
mov
loopne
adc
jecxz
fcmovne
sub
sahf
or
pusha
js
xor
in
movs
dec
ds
mov
mov
push
jg
ror
icebp
inc
jnp
mov
aas
inc
add
bound
(bad)
cmp
cmp
push
xchg
pusha
jbe
jge
repnz
outs
pusha
mul
fs
add
out
jno
mov
enter
jge
sti
pop
add
mov
jp
mov
mov
mov
mov
push
push
adc
in
mov
lods
pop
stos
test
fs
aad
in
pop
cld
jge
hlt
addr16
fst
sti
xor
(bad)
jbe
test
xor
and
xchg
repz
adc
pop
and
aad
imul
outs
sub
sti
push
xor
push
or
cmps
movups
ins
pop
mov
pop
jbe
retf
inc
push
jnp
xlat
jge
xchg
(bad)
pop
sub
or
pop
cmp
jmp
loopne
inc
(bad)
pop
div
jbe
sbb
lods
lahf
pop
push
stc
orps
mov
jp
fnstenv
fwait
and
push
pop
imul
out
fwait
jbe
retf
or
ja
iret
push
cmc
aad
xchg
outs
mov
mov
mov
scas
fmul
cld
ds
lods
adc
enter
mov
push
cmp
xchg
xor
popf
call
cmp
push
xchg
gs
lods
daa
outs
(bad)
xlat
ss
jle
inc
ret
sub
inc
sbb
jne
enter
into
sahf
fmul
fsubr
adc
inc
(bad)
aad
adc
push
cmps
mov
mov
or
jmp
es
xor
xchg
ins
into
inc
sbb
or
fsubr
dec
bound
sbb
and
adc
xchg
out
jbe
out
test
das
mov
fs
es
and
inc
push
dec
sbb
stos
dec
mov
add
popf
inc
leave
loop
sub
push
dec
and
mov
xchg
xor
and
stos
or
sbb
scas
pop
mov
dec
pop
add
out
mov
sbb
imul
cmps
push
inc
xor
retf
dec
or
mov
outs
lock
fisttp
cmps
dec
sbb
jecxz
dec
pop
sti
fdiv
fcomp
test
dec
stc
cmp
icebp
mov
ror
scas
xor
setge
mov
sar
(bad)
xlat
test
ds
popf
icebp
sub
adc
mov
(bad)
mov
jecxz
push
nop
clc
jmp
fmul
jp
sbb
mov
pop
add
ss
push
test
adc
ret
mov
pop
shr
in
stos
mov
sub
jbe
xchg
jmp
aas
jne
test
xor
loop
xchg
sar
sbb
fldenv
or
das
fs
cs
jne
xchg
jnp
pop
or
mov
jbe
or
mov
xor
sbb
sahf
sbb
imul
push
stc
mov
and
inc
fdiv
adc
inc
push
mov
gs
jb
xchg
out
mov
push
inc
data16
lahf
icebp
mov
test
add
jo
xchg
retf
cwde
repnz
clc
sub
mov
mov
sbb
push
mov
or
ins
je
dec
imul
inc
pop
adc
mov
leave
cmp
outs
call
push
sub
enter
push
das
cmps
rcl
js
pop
outs
and
in
shr
xchg
sub
push
imul
xor
xchg
sbb
loop
or
fild
fs
outs
retf
cmp
in
bound
push
xor
cld
dec
(bad)
xor
cmp
fsubrp
loope
xor
cmp
sub
cs
inc
outs
and
adc
sbb
mov
fsubr
pop
and
or
or
jo
stc
sub
iret
je
call
pop
mov
cs
imul
in
sub
inc
add
shl
xor
push
cdq
mov
sbb
ret
adc
sbb
or
mov
push
xchg
mov
retf
jnp
imul
xchg
cmp
mov
je
and
(bad)
popa
adc
sub
mov
out
add
call
sbb
jp
push
add
mov
pop
adc
mov
xor
mov
jmp
xchg
mov
pop
imul
pop
push
aam
add
mov
lock
or
fwait
out
add
sbb
fist
push
popf
dec
lods
jmp
pop
push
adc
mov
pop
aam
sti
xchg
xchg
and
add
leave
ss
cwde
pop
jae
sar
push
mov
mov
call
ss
daa
jle
lock
nop
mov
add
xchg
(bad)
sti
mov
addr16
fldcw
cmp
mov
xor
and
movs
xchg
pop
(bad)
daa
pushf
inc
movs
dec
adc
cmp
stc
xchg
icebp
pop
mov
in
mov
and
mov
test
push
sbb
xor
mov
sbb
jle
mov
stos
add
hlt
pop
mul
lods
lods
cmps
push
adc
mov
lds
push
test
retf
rol
sub
push
sub
xchg
cmps
sub
sub
and
dec
xchg
mov
mov
fs
in
jecxz
shr
pop
popa
mov
sub
imul
push
xor
aam
add
fsin
push
jmp
or
int3
jnp
dec
pushf
and
mov
loop
dec
dec
cli
addr16
out
pop
stos
xchg
jg
xor
xchg
lock
sar
shr
sbb
or
jl
popa
push
nop
dec
iret
ins
sahf
xchg
xor
xchg
stos
(bad)
(bad)
in
sub
inc
mov
nop
lahf
movs
jbe
popa
daa
dec
mov
cmp
cwde
xor
jecxz
shr
rol
and
aam
sbb
in
or
stos
xchg
fsub
add
cwde
clc
lea
add
imul
fwait
inc
push
mov
jns
imul
adc
mov
mov
fcom
sub
jns
xor
ror
inc
dec
fnstcw
fisubr
push
add
mov
cmps
or
xchg
cmps
xchg
std
(bad)
ror
fistp
sub
push
mov
test
dec
and
jle
cwde
iret
mov
inc
push
(bad)
dec
enter
and
dec
mov
sti
movs
pop
shr
xchg
sub
stc
lahf
lahf
imul
inc
mov
ins
cmp
not
in
sbb
mov
pop
jo
mov
xchg
xor
scas
dec
dec
dec
sti
lahf
cmc
fstp
add
lods
inc
adc
daa
cld
jae
add
pop
and
scas
dec
in
pop
(bad)
sbb
cs
push
mov
je
fidiv
icebp
jnp
push
clc
inc
leave
dec
loop
mov
lds
push
rcl
ret
xchg
dec
xor
rol
sbb
sub
pop
cmp
pop
push
xor
mov
loopne
sbb
ins
mov
ret
mov
adc
ins
mov
lods
xor
les
test
jno
xchg
cmp
stc
sub
pop
push
pop
jnp
rol
sbb
adc
sub
lods
sub
pop
clc
xchg
movs
and
jbe
jbe
inc
outs
(bad)
pop
add
add
mov
add
jge
fs
cmp
mov
fwait
mov
fs
dec
mov
in
ins
test
cmp
mov
test
lods
inc
dec
dec
xchg
rcr
int
mul
hlt
push
scas
repnz
ret
push
mov
test
push
pop
js
mov
inc
pop
movs
cmps
inc
mov
js
mov
ss
outs
inc
retf
pop
adc
push
lds
adc
pop
in
imul
sub
dec
int3
sub
call
jno
jmp
cli
xchg
jne
inc
add
mov
outs
sub
sbb
addr16
(bad)
ja
arpl
cmp
sbb
mov
mov
xor
jmp
lods
mov
(bad)
or
shl
jl
push
jo
rcr
xlat
bound
jnp
inc
lods
das
xor
sbb
js
mov
jecxz
aaa
dec
add
mov
lods
mov
movs
cs
movs
push
sub
adc
into
sub
iret
in
mov
scas
cmps
imul
pop
ins
retf
add
arpl
(bad)
cmc
pop
add
(bad)
retf
add
lahf
das
test
push
mov
cwde
test
mov
mov
xor
adc
add
pop
sahf
ins
mov
call
dec
retf
je
and
xor
sub
mov
(bad)
add
scas
inc
repz
imul
xchg
add
test
add
sub
std
inc
fstp
imul
jmp
add
sub
int3
test
push
ret
cmc
mov
push
xor
inc
sub
dec
jne
or
imul
mov
cmp
inc
sti
stos
and
and
aad
mov
cli
add
xlat
test
fidivr
dec
sub
imul
aam
sbb
mov
dec
jp
dec
inc
inc
inc
cmp
iret
sti
mov
sahf
mov
in
retf
mov
inc
inc
jmp
jnp
pop
jle
xchg
lea
daa
iret
xchg
dec
push
xlat
inc
mov
jo
movs
add
loope
pop
es
sub
in
(bad)
sbb
pop
icebp
pushf
xchg
daa
(bad)
and
ss
shl
ja
mov
test
jne
cmp
inc
shl
adc
cli
xchg
sbb
loop
clc
mov
add
cmps
cld
xor
in
inc
gs
mov
xchg
adc
out
sub
sbb
scas
mov
add
xchg
mov
push
rol
mov
and
scas
aaa
or
jne
cmp
movs
add
lahf
lahf
xchg
jmp
data16
dec
adc
outs
mov
lahf
sbb
jae
ret
stos
not
addr16
xor
cmp
shr
imul
jl
xor
(bad)
mov
add
xor
mov
dec
and
inc
sub
xlat
mov
mov
pop
stos
shl
movs
repnz
dec
ret
das
push
stos
sbb
mov
(bad)
rcl
out
call
leave
pop
imul
leave
mov
repz
(bad)
sti
das
rol
mov
repz
test
icebp
repz
push
dec
jns
in
fnsave
push
retf
rcr
(bad)
and
ss
adc
adc
inc
jo
jge
fnsave
pop
mov
xor
ret
jno
inc
das
adc
popf
and
mov
cmp
stos
dec
in
(bad)
rcl
jmp
inc
xor
(bad)
dec
cmps
popa
add
out
hlt
iret
aad
scas
push
ja
(bad)
(bad)
out
add
add
sub
dec
int
inc
loop
xor
in
jbe
add
xor
cs
sbb
inc
ficom
pop
adc
xchg
xor
adc
fwait
dec
cdq
mov
push
pop
xchg
push
inc
adc
(bad)
and
sar
aaa
sbb
inc
(bad)
push
sar
std
cld
je
std
xor
jg
int3
hlt
jae
push
sub
in
idiv
idiv
xchg
pop
cmps
retf
jnp
clc
(bad)
xchg
or
repnz
mov
psrlq
fnstsw
es
out
shl
add
pop
jo
mov
mov
cli
(bad)
adc
into
cmp
dec
mov
pusha
dec
rcl
shl
lods
dec
movzx
pop
rcl
mov
dec
popa
sub
sbb
adc
repz
cmp
(bad)
cs
shl
mov
pop
add
and
sbb
popf
jp
das
inc
jnp
outs
dec
sbb
push
sbb
(bad)
fild
mov
das
lahf
enter
(bad)
mov
mov
push
test
inc
les
rcl
add
pop
mov
or
xlat
mov
je
(bad)
call
pop
iret
xor
lods
mov
jmp
and
push
cmp
sub
fdiv
dec
xor
adc
rcl
arpl
and
cmps
jno
aad
inc
xchg
outs
test
and
xchg
inc
mov
out
add
xor
add
mov
cld
xor
dec
bound
popa
call
loop
fmul
ins
add
pop
pusha
mov
ret
scas
and
mov
cmp
mov
xor
cli
xor
add
add
rol
inc
adc
or
das
and
jns
test
push
fdiv
and
test
loopne
(bad)
pop
clc
movs
lds
data16
je
dec
cmp
fstp
or
push
rcr
iret
push
js
xor
rol
movs
loopne
stc
and
sbb
aad
inc
sbb
push
fidivr
fimul
sbb
test
lahf
(bad)
scas
rol
push
jbe
cmps
lods
(bad)
and
aas
lds
test
inc
push
mov
and
jg
dec
call
enter
cmps
mov
mov
and
xor
sbb
popf
fcomp
adc
adc
or
and
push
rcr
imul
popf
inc
or
test
inc
sbb
into
push
mov
(bad)
addr16
ds
ja
retf
es
sub
clc
test
rcr
popf
(bad)
es
div
sub
mov
movs
out
jae
cmps
jl
bound
sbb
int3
cmps
into
hlt
ins
inc
shr
xor
sbb
pop
mov
add
cmps
int
xchg
jbe
sub
dec
inc
sub
xor
out
leave
dec
or
xchg
retf
shr
or
push
cmp
inc
ja
ins
cs
xchg
pushf
pusha
sbb
jecxz
mov
mov
imul
rcr
pop
repnz
in
sub
outs
jle
repnz
push
jl
(bad)
mov
not
xchg
popf
xor
inc
es
retf
cmp
sub
cmps
mov
call
sbb
mov
ins
addr16
hlt
lds
sbb
dec
enterw
iret
add
pusha
adc
loope
dec
jmp
cli
mov
ins
push
fild
sub
sub
in
push
lea
adc
pop
pop
stos
clc
push
ficomp
inc
(bad)
sbb
xchg
pop
leave
ret
frstor
mov
jecxz
cmps
add
clc
xor
add
jge
not
dec
push
cli
mov
jno
cli
sub
push
movs
or
popa
xor
dec
repnz
adc
fisttp
mov
or
cli
test
jle
in
xchg
inc
icebp
push
retf
sbb
in
fcomp
xor
mov
pop
sbb
jg
fidivr
add
gs
cmp
xor
or
and
push
mov
(bad)
cmp
retf
xor
mov
inc
xchg
stos
jns
je
loop
xchg
std
sub
mov
adc
sbb
sub
pop
xlat
test
add
cdq
jne
gs
pop
enter
sar
imul
push
ficomp
daa
sub
jmp
pop
xchg
repz
popf
test
cmc
scas
pop
ins
push
div
sub
imul
inc
int
cmp
retf
inc
cmp
and
push
push
imul
rcr
aaa
(bad)
and
push
pop
call
cmp
xchg
inc
mov
xchg
push
cwde
out
loope
adc
pop
sbb
outs
nop
inc
punpckhbw
(bad)
mov
mov
dec
mov
repnz
fld
adc
stc
pop
xor
add
aaa
jae
gs
mov
cmp
mov
and
hlt
dec
movs
ret
pop
dec
and
cmps
jp
xor
adc
jae
sbb
cmps
and
aaa
setge
pop
mov
push
pop
or
rcr
pusha
idiv
push
xchg
pop
enter
std
pop
jge
inc
push
scas
lock
test
sbb
sub
retf
or
sti
xchg
imul
js
pandn
icebp
sub
add
xchg
inc
ret
nop
mov
lods
and
xchg
into
push
mov
imul
pop
into
jne
pop
jg
repz
mov
es
sub
push
pop
ins
cmps
cmc
test
call
in
mov
call
and
inc
sub
mov
xchg
dec
cld
cmp
push
mov
cmp
retf
sub
pop
jg
mov
arpl
ds
scas
mov
push
(bad)
fcmovb
push
mov
sub
mov
pop
cs
in
movs
ins
add
pop
(bad)
add
sbb
lea
inc
out
cwde
ja
fwait
jge
icebp
call
adc
call
xor
push
jne
pop
leave
or
add
inc
movs
(bad)
mov
mov
push
pop
adc
or
jb
jge
or
xor
das
iret
and
icebp
add
jae
mov
aad
mov
imul
mov
xchg
aas
cmc
jb
adc
cmp
jno
mov
rcr
retf
push
loop
xor
xor
sti
fsub
cmp
mov
and
std
sub
rcl
out
push
iret
mov
inc
out
push
enter
ret
and
xchg
movs
adc
inc
cmps
pop
xchg
sub
cli
rol
fs
jne
jle
outs
mov
loopne
cmps
cmp
and
icebp
cmp
mov
push
sub
inc
cmps
std
dec
test
cmp
push
std
push
outs
test
aam
add
shr
mov
scas
dec
hlt
bound
and
daa
sbb
outs
cmp
test
dec
into
inc
ja
mov
arpl
aas
sub
xor
and
cmp
lock
cdq
cmp
add
retf
add
stc
cmps
test
xor
(bad)
(bad)
js
pop
mov
in
sti
xlat
nop
xchg
enter
push
(bad)
adc
arpl
daa
jmp
(bad)
sub
rol
bound
sahf
(bad)
jg
les
int3
sahf
sbb
mov
mov
rol
jecxz
and
inc
and
lods
movs
jno
adc
test
rcl
inc
dec
mul
sti
les
sbb
(bad)
stos
cmp
sub
jno
adc
push
int
inc
sbb
jmp
imul
mov
mov
push
sti
add
jbe
sbb
lahf
scas
(bad)
rcr
ja
jge
jle
mov
fld
popf
jmp
and
retf
call
(bad)
adc
dec
add
test
lods
es
jl
fwait
punpcklbw
shl
fst
ret
mov
or
in
rcl
inc
rol
xchg
icebp
into
xchg
enter
xor
or
add
jno
pop
adc
rcr
adc
test
(bad)
push
pop
fdiv
icebp
and
mov
push
xor
pop
lea
std
retf
xchg
mov
cmp
mov
or
cmp
xchg
add
mov
mov
and
inc
jae
and
jmp
adc
xchg
out
xor
push
add
mov
cmp
fild
fist
add
xchg
xchg
mov
jmp
pop
out
cmp
cmp
ja
mov
mov
push
in
(bad)
and
fcmovne
pop
jg
movs
paddusw
and
sub
mov
aaa
test
pop
xchg
xor
jmp
mov
cmp
cmp
aas
pop
inc
adc
inc
ins
sbb
mov
cwde
dec
jbe
cmp
add
aaa
sbb
call
inc
in
repz
call
outs
jb
fwait
rol
cdq
in
adc
dec
bound
mov
push
mov
enter
movs
and
mov
sbb
push
cli
mov
cmp
cmc
push
cli
repnz
xlat
dec
adc
popa
test
sbb
sbb
xor
pop
cwde
sub
jl
fwait
je
loope
xchg
ret
xor
jb
jmp
cmp
mov
stos
or
or
or
pop
out
inc
push
bound
jo
dec
xor
nop
ins
pop
jno
rol
sahf
into
out
movs
scas
js
inc
mov
out
les
ins
fist
jb
inc
sbb
lods
fnsetpm(287
inc
sbb
xor
push
loope
push
les
iret
mov
xor
push
mov
test
sub
xchg
loop
lahf
or
ss
cmp
pop
cmp
cmp
dec
jl
(bad)
pop
mov
adc
jns
pop
movs
pop
add
inc
mov
xchg
cmp
stos
jns
iret
jns
fiadd
pop
call
push
jae
ret
inc
jge
ret
pusha
pop
in
and
add
aaa
push
leave
aam
xchg
or
test
cmp
inc
adc
adc
push
dec
mov
or
pop
(bad)
std
mov
inc
jo
xchg
dec
inc
leave
jl
or
imul
fisttp
popa
xor
ds
mov
xor
dec
dec
fst
jbe
jno
inc
mov
sbb
fdivp
es
push
inc
add
mov
popf
fs
inc
out
jg
ins
pop
pop
cld
cli
add
int3
mov
and
loopne
mov
stc
pop
sbb
push
js
fisttp
jg
mov
inc
out
and
pop
or
sti
and
jne
ja
xchg
aas
cmp
repz
aas
fsubr
cld
cld
pop
xor
pusha
aaa
and
inc
cdq
pop
cmc
sub
(bad)
cmp
popf
sub
push
cli
mov
xor
loopne
repz
repnz
mov
push
pop
into
arpl
sub
pop
int3
pop
mov
test
or
nop
adc
sub
hlt
mov
push
das
mov
hlt
shr
sbb
mov
lea
push
mov
retf
dec
push
addr16
mov
(bad)
pop
out
addr16
dec
mov
mov
mov
aam
cli
dec
bound
jne
sbb
jns
mov
jae
or
(bad)
mov
ins
pushf
std
sbb
push
xchg
addr16
shl
sbb
fsub
das
xor
mov
call
jmp
jne
xor
pop
mov
mov
xadd
(bad)
mov
sbb
pop
sub
aas
test
xchg
sbb
out
jns
ret
or
arpl
inc
(bad)
sub
mov
cli
jno
dec
mov
hlt
int
in
adc
cmp
bound
xor
dec
pop
dec
mov
lods
xlat
xor
fistp
cmps
cmc
ret
cli
call
test
call
push
add
cmp
push
add
push
(bad)
jg
jecxz
mov
jmp
loop
int3
lahf
popf
lock
retf
ins
xor
rol
xchg
loope
sub
dec
into
xor
push
test
outs
pop
sub
cli
loop
jns
adc
push
int
bound
shl
into
ds
xor
enter
cdq
clc
cmc
dec
aam
idiv
daa
lea
mov
sti
mov
outs
stc
add
mov
adc
sbb
and
shl
fbld
sbb
or
xor
imul
cmps
sti
sti
inc
xchg
dec
repnz
mov
nop
sub
ret
imul
ins
mov
jmp
mov
in
mov
loope
stos
jo
inc
pop
popf
sbb
shl
lods
pop
push
scas
js
stc
mov
nop
stos
mov
aas
mov
pop
push
mov
jg
js
test
aad
ret
maxps
push
outs
les
rcl
jle
jae
push
sbb
shl
rol
and
push
fs
outs
rcpps
popa
scas
inc
fst
movs
dec
add
pop
vprotb
mov
aam
cmc
jns
fcomp
ret
hlt
mov
xchg
clc
or
rol
ja
out
adc
fs
imul
cmp
fist
in
mov
push
dec
pop
daa
pop
or
add
cmp
dec
js
stos
aad
push
test
xchg
inc
cwde
call
pop
daa
es
scas
add
mov
dec
fwait
or
enter
mov
ret
adc
ja
das
cld
dec
cmp
dec
jns
push
int3
dec
inc
mov
push
in
cmp
pand
cdq
push
inc
and
push
out
cmp
jnp
loop
adc
or
mov
adc
stos
or
loope
xchg
test
in
mov
adc
xchg
lea
cmp
inc
mov
stc
outs
adc
mov
sub
inc
sbb
scas
adc
aam
lahf
popa
cmp
inc
cmp
push
xchg
cmc
rol
xchg
icebp
xor
push
sbb
pop
sbb
xchg
jecxz
or
mov
push
lock
inc
and
test
test
out
add
pop
popf
je
cmc
inc
dec
dec
stos
dec
mov
retf
sar
rcl
xchg
push
inc
les
leave
lahf
push
xchg
test
add
cmp
std
(bad)
enter
inc
or
test
mov
pusha
xor
clc
fimul
dec
xor
(bad)
call
push
mov
jns
push
imul
dec
dec
sub
dec
shl
push
int
clc
lods
sbb
cmp
cmp
add
and
aam
fsub
pusha
mov
mov
(bad)
push
sbb
fsubrp
sub
out
iret
cli
or
enter
lahf
xor
rol
dec
xor
sub
xlat
cmp
push
add
push
dec
sbb
inc
dec
in
out
cmp
scas
pop
lods
mov
(bad)
call
popf
or
addr16
jno
gs
jp
lods
adc
jl
pop
pop
push
je
xor
push
test
and
push
call
cld
inc
xor
jg
inc
fadd
pushw
mov
add
xchg
jnp
aad
mov
push
rcr
out
(bad)
jo
or
mov
mov
adc
xchg
push
clc
xchg
outs
rcr
xchg
push
xchg
push
jmp
add
mov
retf
into
(bad)
pop
jo
inc
jno
aaa
pop
rol
mov
cwde
mov
jnp
dec
repz
mov
arpl
xor
adc
ret
lock
std
pop
std
adc
xchg
xor
jecxz
mov
jae
mov
test
cdq
pop
fucom
mov
out
daa
cmp
pop
mov
dec
jmp
jmp
xchg
add
call
pop
xor
fild
pop
sub
pop
add
in
or
jo
push
sbb
jno
or
push
jnp
mov
sti
jo
movs
cwde
pop
cli
dec
sbb
jne
retf
xor
xchg
sub
loop
mov
fidivr
out
dec
leave
dec
es
sub
sub
aam
and
retf
sbb
mov
xor
sub
mov
fstp
xor
imul
pop
jno
push
iret
adc
or
push
jno
outs
mov
fldcw
jmp
in
push
outs
xor
mov
outs
loopne
pop
jo
(bad)
js
or
retf
lds
call
or
xor
fisttp
neg
lea
gs
inc
or
cli
retf
dec
mov
dec
nop
sub
and
arpl
push
mov
outs
idiv
adc
pop
and
push
pop
mul
mov
bound
add
rcr
inc
neg
imul
dec
cmp
add
std
mov
loop
mov
ret
addr16
inc
inc
mul
jno
adc
xchg
xchg
jns
(bad)
add
cmp
les
jne
(bad)
popf
xchg
movs
in
xchg
push
movs
mov
jae
dec
xchg
dec
outs
or
inc
push
mov
adc
sahf
adc
or
push
scas
adc
xor
leave
push
aaa
inc
dec
out
jge
cld
sbb
add
push
cmp
mov
xor
inc
and
push
sbb
cld
mov
and
cld
push
test
nop
es
or
(bad)
outs
adc
jg
das
jge
je
in
scas
call
ret
or
jecxz
inc
out
fcmovnb
outs
sbb
push
repnz
call
leave
mov
jno
loopne
(bad)
fcom
xchg
xchg
icebp
clc
ja
pushf
(bad)
jmp
fldenv
fbstp
or
xor
mov
add
mov
faddp
pop
or
xor
adc
pop
mov
mov
data16
clc
mov
dec
inc
inc
pop
mov
mov
adc
adc
jns
pop
xor
imul
or
jle
das
xor
xchg
inc
mov
rol
and
sbb
and
pusha
sub
js
sbb
cmps
jno
(bad)
mov
fcmovu
(bad)
or
sub
cmps
push
xchg
fdivr
add
icebp
dec
add
clc
pushf
mov
cmp
sar
imul
jmp
and
imul
mov
mov
stos
adc
fiadd
cld
jle
imul
inc
jle
je
mov
in
call
pop
dec
lahf
hlt
and
ret
cmp
push
mov
add
dec
shl
add
imul
into
mov
pop
adc
outs
cmps
mov
mov
and
lea
call
popf
fcomp
xchg
or
repnz
loop
cmc
ret
int
mov
(bad)
push
addr16
inc
bound
jno
in
repz
jo
or
dec
jmp
call
data16
das
or
outs
cmp
push
inc
add
rcl
aaa
aaa
lea
mov
(bad)
jg
out
ins
inc
push
cmp
bound
mov
mov
lea
scas
jle
nop
scas
fsubr
and
imul
inc
jns
mov
jno
movs
rcl
bswap
jge
(bad)
dec
add
rcl
cld
mov
adc
int
cmp
out
add
xchg
je
jae
mov
idiv
push
mov
adc
popa
mov
data16
and
mov
test
cli
pop
adc
movs
inc
cmp
hlt
mov
hlt
dec
repnz
pop
xchg
sub
fcom
add
push
xchg
cmps
clc
pusha
outs
cld
ja
adc
jnp
hlt
fstp
xor
mov
jbe
mov
mov
inc
cwde
imul
and
fs
add
hlt
imul
mov
xlat
daa
leave
cmp
mov
pop
movs
push
hlt
inc
xchg
push
cmp
je
cmp
aas
repnz
mov
sbb
inc
jp
dec
inc
not
mov
pop
hlt
fstp
adc
and
mov
fwait
jmp
mov
cmp
js
sar
fild
dec
jl
es
(bad)
out
daa
add
bound
adc
cmc
dec
inc
cmp
shl
inc
cmc
inc
pop
cmp
jp
push
xor
call
jmp
xchg
inc
pusha
lds
sar
in
repnz
adc
push
out
jno
in
add
jmp
pop
cmp
cmp
xchg
ins
lods
inc
call
frstpm(287
cs
js
xchg
icebp
es
pop
add
inc
inc
loop
xor
(bad)
xchg
jno
sub
xchg
xchg
test
(bad)
repz
push
xchg
mov
in
out
mov
aam
out
add
inc
sbb
cmp
pop
cmp
jb
push
push
scas
fistp
in
add
cmp
call
pop
xchg
fwait
sub
and
sub
enter
out
outs
cmp
shr
push
add
push
pop
call
sbb
xchg
jb
rol
sub
outs
retf
pop
push
push
enter
push
mov
pop
dec
fcom
push
popf
outs
jmp
adc
push
xor
test
mov
push
cmp
jbe
repz
pop
mov
and
cmps
das
and
test
xor
or
popf
lods
aad
mov
outs
pop
mov
mov
cli
dec
and
sbb
loop
fadd
leave
jns
lahf
hlt
add
shr
inc
data16
(bad)
mov
pop
out
call
or
fist
cmp
fnstsw
lods
push
into
jae
and
add
inc
add
outs
jmp
adc
cld
xor
jmp
mov
mov
ins
or
ret
jne
push
push
loop
cmps
cs
scas
jg
push
mov
stos
(bad)
mov
xor
cmps
xor
gs
sub
movs
nop
test
aas
pop
push
dec
popf
enter
mov
or
mov
pop
xor
outs
(bad)
aaa
jmp
in
in
push
mov
in
stos
add
aad
daa
shr
add
out
shl
and
das
retf
daa
cs
mov
xor
or
clc
fsub
movs
pop
jmp
push
pushf
movs
lahf
imul
retf
es
adc
jp
or
cmp
ret
(bad)
sbb
mov
popf
aad
dec
pop
adc
xor
pusha
movs
inc
xchg
push
lods
aad
and
out
cwde
test
jbe
xchg
rcl
jns
scas
(bad)
and
and
cmp
jb
sub
into
retf
cs
jp
retf
(bad)
push
inc
outs
mov
call
dec
pop
out
rcr
jbe
mov
or
or
je
(bad)
int3
scas
or
cmps
imul
mov
dec
inc
rol
iret
push
std
(bad)
mov
mov
add
test
push
inc
mov
loope
pop
or
mov
push
std
std
(bad)
adc
icebp
jb
pop
or
test
xor
lea
aam
sbb
and
inc
stos
popa
pop
(bad)
cmp
sub
sub
adc
adc
cmps
xchg
call
xchg
xchg
ins
pop
cwde
rcr
call
xchg
push
sub
pop
mov
push
sub
inc
(bad)
jecxz
sti
adc
cmp
push
pop
mov
es
cmps
mov
bound
sub
ins
fiadd
iret
pop
fisubr
fadd
jae
push
jmp
pop
sub
pusha
lock
pop
and
mov
retf
sbb
xchg
aad
sub
add
or
fwait
mov
(bad)
shr
cmp
sbb
stc
lock
loope
pop
adc
push
mov
mov
push
fwait
jnp
pop
sub
aaa
test
dec
imul
xor
fld
xchg
stc
movs
mov
dec
mov
push
dec
arpl
xor
xor
fs
call
outs
div
sub
(bad)
(bad)
xchg
pop
lods
test
mov
dec
je
xchg
(bad)
mov
ret
pop
mov
les
call
ins
movs
call
mov
dec
push
(bad)
xchg
jno
push
(bad)
outs
stc
shl
sub
sar
push
out
test
push
mov
fsubr
loopne
and
scas
adc
sub
xchg
or
fmul
push
push
hlt
mov
sar
mov
jbe
ins
adc
xchg
pop
xchg
(bad)
push
fst
mov
inc
je
stc
or
ret
(bad)
cmps
(bad)
mov
imul
rcr
outs
mov
cmps
mov
arpl
test
ss
jns
inc
xor
cli
jo
dec
rcr
push
mov
(bad)
into
mov
jno
xor
dec
pmovmskb
call
mov
test
popf
jecxz
ins
pop
push
sub
jo
test
sbb
add
pusha
cmps
add
popf
mov
pop
popa
dec
adc
test
ret
mov
imul
mov
stc
pusha
jp
lea
add
xor
xlat
dec
clc
sbb
xchg
(bad)
out
test
(bad)
out
add
sub
cld
mov
xchg
movs
mov
jmp
mov
stc
lods
(bad)
ss
repnz
adc
sub
test
jecxz
xor
aad
or
imul
loopne
outs
loop
sub
and
jns
inc
xlat
pop
xchg
sbb
retf
mov
jg
shl
jns
test
inc
bound
pushf
mov
cmps
add
pop
cwde
dec
sub
out
les
shl
std
dec
cmc
cmp
xor
sub
adc
in
fnstcw
sbb
inc
adc
repz
xchg
aam
call
push
popa
loope
sbb
mov
inc
jno
ds
aam
scas
sub
mov
inc
or
ss
imul
sub
cmp
sbb
inc
push
sbb
int3
or
jbe
add
cmp
push
stos
and
sbb
sub
enter
mov
inc
push
jge
mov
aas
jns
mov
neg
out
push
pusha
mov
sbb
lds
pushf
cmps
(bad)
push
mov
imul
cmp
les
js
dec
in
ss
push
fimul
arpl
pop
xchg
dec
sbb
inc
pop
adc
mov
mov
test
(bad)
rcr
iret
cmp
cli
and
push
loope
sbb
jp
lahf
cs
or
pop
ss
das
imul
mov
(bad)
aas
dec
popf
or
test
iret
in
inc
xchg
mov
dec
fild
jae
pop
cwde
inc
xor
sub
repnz
pop
mov
xor
push
sbb
in
sbb
jp
cmp
sbb
mov
enter
sub
add
out
cmp
and
jmp
jns
xor
aaa
fisub
sti
icebp
or
into
dec
rcl
sub
fisttp
sub
loope
xor
icebp
mov
lea
retf
into
adc
sbb
in
pop
das
sbb
out
aad
sti
jecxz
mov
sti
sub
jmp
mov
dec
retf
and
int3
push
imul
out
lahf
outs
jo
leave
icebp
cmps
std
jns
push
scas
sahf
xchg
jns
inc
aam
popa
cmp
push
add
sub
dec
out
popa
mov
div
or
popf
dec
popa
in
add
mov
mov
lock
xchg
pop
scas
(bad)
xchg
add
jbe
adc
xlat
mov
inc
push
hlt
fwait
movs
repnz
fidivr
es
add
cdq
mov
cmp
ror
mov
aam
xor
pusha
popf
cmp
sbb
cdq
adc
sub
fcomp
push
popf
mov
inc
shl
mov
int3
cmp
ds
inc
mov
ja
push
sub
sub
add
lods
sbb
adc
mov
dec
pop
mov
xchg
cld
ret
mov
lds
jae
icebp
(bad)
cli
out
test
lds
mov
es
mov
jge
sub
push
mov
or
mov
cdq
out
push
push
jg
fsub
add
xchg
arpl
ret
adc
xor
fldcw
sbb
loope
fist
not
rol
pop
or
call
fnstenv
ret
mov
or
mov
lods
es
cmc
push
lock
outs
xchg
push
pop
or
mov
mov
lahf
dec
retf
dec
les
(bad)
hlt
and
imul
push
mov
in
add
cdq
inc
xchg
out
test
in
push
push
push
sbb
mov
cmp
cmp
sub
or
mov
iret
jne
mov
ret
(bad)
jmp
test
call
add
mov
sub
cmp
and
jmp
and
sub
xor
lock
jae
aas
nop
fcomp
mov
dec
mov
retf
out
leave
add
in
sbb
data16
jo
jge
sub
and
cwde
je
cmps
or
scas
adc
out
sbb
dec
cmp
mov
idiv
sbb
pop
mov
xchg
loope
shr
fisttp
scas
ror
xor
sbb
loop
scas
imul
add
(bad)
(bad)
and
ret
inc
call
out
mov
inc
(bad)
scas
imul
retf
xor
xchg
test
push
xor
in
in
adc
ficomp
inc
xor
adc
mov
cli
lods
sub
inc
adc
inc
(bad)
repnz
test
mov
push
aaa
daa
jp
jmp
(bad)
cli
pop
or
and
bound
adc
mov
add
fstp
(bad)
pop
aaa
sbb
jle
mov
dec
shl
pop
push
jno
mov
adc
leave
test
cmps
cmp
fistp
and
jmp
mov
add
outs
pop
fldenv
adc
add
cwde
inc
inc
call
inc
js
adc
fiadd
push
shl
in
mov
clc
inc
jno
dec
mov
inc
pop
mov
icebp
push
inc
pop
fistp
loope
cmp
mov
loopne
xor
dec
imul
pop
cs
cdq
mov
test
push
mov
mov
lods
stos
stc
mov
xchg
and
iret
mov
movs
mov
mov
imul
jo
mov
ins
sti
jecxz
xor
add
aad
outs
mov
jmp
cld
aad
mov
lods
hlt
add
fild
xor
add
and
imul
stos
sbb
inc
(bad)
ret
retf
jp
fisttp
lock
syscall
es
adc
jne
jbe
xor
push
mov
outs
cmp
and
adc
retf
bound
loopne
pop
and
push
xchg
jl
cmps
bnd
shr
sbb
lea
dec
xchg
push
scas
mov
ret
dec
mov
add
jp
lea
imul
push
into
sbb
sub
ins
jp
inc
cld
fist
int
mov
bnd
rcl
cmovge
ins
jle
pop
dec
das
pop
push
pop
out
call
sbb
adc
mov
lahf
mov
popa
outs
or
leave
gs
into
xchg
hlt
cmps
and
clc
xor
mov
ss
push
add
cmp
inc
jae
shr
mov
or
das
jb
mov
inc
push
push
jae
in
mov
push
rcr
mov
(bad)
sbb
jg
cwde
cmps
xor
add
pushf
or
fnsave
cld
xchg
clc
and
push
xchg
adc
ret
into
dec
sub
js
sbb
push
or
push
aam
xchg
or
mov
or
inc
pusha
test
outs
scas
nop
into
fstp
mov
pop
xchg
out
xchg
loope
test
mov
fld
and
sub
sbb
jmp
aaa
iret
mov
mov
lea
dec
je
retf
jge
cmps
inc
sub
in
sub
fstp
stos
stos
div
push
jmp
dec
jae
mov
arpl
lods
in
mov
or
mov
imul
push
pushf
mov
jae
sahf
fsubrp
lahf
jns
adc
xchg
ja
mov
jmp
fisub
xchg
std
shl
cmps
popa
push
push
adc
and
mov
jp
jp
out
or
retf
sub
movs
lahf
mov
push
lock
pop
cmp
jmp
sbb
xor
push
push
mov
xor
scas
cdq
jbe
push
adc
call
pushf
shl
mov
mov
push
dec
(bad)
xor
leave
xchg
xchg
push
les
imul
out
push
sub
adc
(bad)
xchg
jle
mov
mov
(bad)
mov
das
fnstsw
ror
fsub
sbb
dec
mov
sbb
es
xchg
les
mov
div
neg
je
mov
in
lock
inc
pushf
(bad)
xchg
sbb
dec
loop
(bad)
mov
dec
mov
sbb
push
pop
adc
mov
mov
xchg
mov
ror
dec
jae
imul
mov
loope
and
sub
shr
fisubr
ror
inc
outs
jmp
nop
(bad)
dec
inc
mov
ins
add
ins
jmp
outs
ja
xchg
lods
cmc
ins
shr
std
mov
out
fadd
out
jp
push
lds
sti
jle
arpl
xchg
sub
cmp
popf
stc
fistp
fstp
inc
into
ins
fs
mov
and
jne
sbb
inc
movs
sbb
scas
mov
inc
into
pop
mov
leave
lahf
mov
cmp
scas
inc
dec
inc
rcr
cmp
inc
sahf
pop
xchg
pop
add
sbb
xchg
sub
inc
mov
shl
out
dec
inc
sbb
int
bound
pop
iret
(bad)
mov
data16
cmp
push
dec
push
pop
in
sti
into
repnz
stos
fiadd
popa
(bad)
mov
dec
lock
lods
jnp
lock
lds
(bad)
ds
cmp
push
or
cld
aad
in
scas
lahf
push
add
xor
cmp
mov
int
adc
xor
cmps
data16
lock
jl
xor
mov
sbb
adc
inc
mov
mov
rcl
sbb
ds
scas
xor
pop
hlt
std
lea
in
xchg
sub
sbb
sub
xor
sahf
nop
std
(bad)
popf
pop
pop
add
imul
retf
mov
push
out
inc
cdq
xor
push
fldenv
fs
inc
js
or
fld
in
stos
sub
jle
xchg
xchg
dec
int3
cmp
adc
int3
rcl
inc
clc
xor
pop
aad
push
fisub
or
rol
daa
and
fistp
repz
xlat
pop
jmp
stc
cdq
bound
fcompp
inc
addr16
(bad)
mov
test
jns
push
mov
mov
adc
dec
arpl
and
mov
(bad)
push
js
or
xlat
arpl
inc
cmp
sti
sahf
not
repnz
daa
movs
jae
mov
(bad)
fsubr
leave
ret
fistp
cmc
xor
iret
jbe
sbb
add
(bad)
mov
ficom
(bad)
pop
inc
shr
int3
xlat
inc
mov
sub
cmp
test
sbb
(bad)
daa
mov
(bad)
pop
jne
sbb
loop
xor
(bad)
jae
jbe
fwait
inc
mov
sbb
mov
and
add
(bad)
xor
cmp
xor
dec
mov
sub
xchg
mov
pop
bound
mov
out
(bad)
pop
dec
fsubr
daa
test
ror
xchg
dec
movs
push
xor
outs
pop
imul
cs
xor
pop
sub
xchg
cmp
inc
js
fsubrp
mov
dec
mov
test
and
popa
mov
mov
stos
int
mov
pop
in
ss
inc
cmps
cs
ftst
test
and
pop
xchg
pop
imul
jmp
push
(bad)
cmp
add
es
sbb
in
or
inc
fimul
in
ss
in
retf
add
scas
jl
mov
cmp
ins
xchg
or
nop
pop
(bad)
mov
movs
int3
sbb
cmc
in
loopne
sbb
dec
add
ret
xor
lods
fadd
cld
push
repnz
adc
push
out
out
pop
sbb
ds
rcr
sub
fist
dec
imul
jge
sub
inc
dec
call
jg
mov
adc
lds
sbb
sub
sbb
or
jnp
scas
dec
jne
add
stc
jnp
mul
stc
mov
scas
add
xor
push
mov
lods
add
cmps
or
out
ins
scas
in
pop
cmp
push
sbb
jge
xor
push
leave
sahf
mov
stc
push
sbb
xor
lea
push
xchg
jns
or
out
adc
xor
and
hlt
stos
add
mov
or
cmc
or
inc
xchg
mov
adc
out
mov
inc
inc
test
test
pop
aas
outs
iret
gs
int3
jns
mov
jp
mov
scas
jmp
ficom
or
(bad)
je
retf
mov
(bad)
movs
jns
add
mov
jp
push
lahf
sti
mov
jb
or
mov
aas
stos
stc
xchg
int
pop
cdq
pusha
popf
jg
aad
bound
ins
adc
loope
cli
cld
xor
enter
cmps
fsubr
inc
dec
mov
jp
jecxz
adc
cmp
fldcw
jecxz
inc
in
pop
cmps
pop
les
or
dec
lahf
jp
aam
mov
lods
adc
xchg
xchg
mov
lahf
retf
imul
jp
fisubr
jg
dec
push
inc
jmp
and
push
cli
sbb
outs
shl
icebp
call
sbb
inc
clc
ror
push
dec
or
(bad)
mov
sahf
repnz
cs
lock
movs
out
dec
pop
repz
into
mov
loope
pop
dec
pop
xchg
sbb
sub
clc
ss
xchg
retf
mov
xchg
rcl
arpl
fs
sahf
mov
or
imul
sti
sub
jo
fnstenv
and
scas
fild
mov
mov
outs
jns
sub
and
mov
fild
inc
or
cmp
leave
jns
lds
sar
std
xchg
adc
test
ret
inc
fsubr
or
cmp
pop
scas
(bad)
aaa
push
(bad)
outs
outs
jo
inc
lahf
pop
jmp
sbb
jle
pop
or
push
cmp
mov
jo
fidivr
cmp
jmp
pop
pop
clc
push
movs
adc
movs
inc
scas
sbb
jns
xchg
cmps
fldpi
xchg
retf
retf
jmp
call
push
ds
fcomi
push
pop
xor
push
fdivrp
and
(bad)
sbb
inc
and
pop
jne
inc
cdq
and
jg
or
xchg
mov
pop
out
retf
imul
lahf
popf
push
and
sbb
jp
mov
repnz
mov
stc
adc
(bad)
outs
stc
cdq
loop
cmp
sti
jbe
scas
mov
push
push
and
add
mov
and
fild
jo
xchg
jmp
sub
cmp
pop
pop
pop
stos
or
sbb
pop
mov
xchg
inc
clc
sahf
add
das
adc
cmc
xor
repz
mov
add
adc
lahf
dec
imul
push
sahf
xor
mov
mov
cld
mov
xchg
mov
pusha
sub
cmp
clc
fwait
push
xor
mov
jmp
adc
jmp
icebp
push
cmp
inc
aaa
loop
pop
mov
xchg
out
cmp
push
retf
push
xlat
repnz
pop
jmp
gs
cwde
xchg
enter
xchg
cmc
push
mov
dec
gs
aad
push
lgs
jg
int
dec
rcr
outs
jnp
outs
jnp
pop
mov
xor
mov
xor
pop
loope
(bad)
push
leave
(bad)
jmp
add
daa
aad
inc
sysret
xchg
inc
xor
dec
imul
rol
inc
push
lock
or
js
js
das
inc
sub
in
mov
xchg
cmp
mov
inc
div
mov
fs
in
mov
das
jmp
ja
xlat
xchg
retf
(bad)
aam
addr16
xor
mov
dec
mov
cmps
jg
cmc
inc
fistp
cmps
fldenv
xchg
xchg
push
dec
xchg
aaa
mov
jns
push
out
sbb
cmp
mov
mul
jae
jge
fs
fidivr
push
aad
adc
sbb
xchg
sti
add
ret
(bad)
sbb
pop
sub
mov
jge
cs
neg
(bad)
jns
ror
mov
lds
cmp
add
jecxz
mov
aas
gs
or
sbb
leave
inc
mov
daa
pop
sbb
shl
in
and
push
mov
bndstx
out
shl
push
add
icebp
arpl
int3
dec
in
jg
jo
mov
lods
repz
or
(bad)
in
cld
dec
sub
push
out
test
out
pusha
mov
loopne
cs
repz
jle
mov
mov
sub
sbb
mov
inc
imul
(bad)
adc
jnp
lea
push
or
jecxz
sti
clc
loop
dec
fs
test
jns
pushf
xchg
ret
sar
enter
cmp
jg
jmp
hlt
jl
xchg
leave
push
sbb
icebp
dec
pop
push
ds
jbe
icebp
pop
fcomp
lahf
push
pop
(bad)
sub
sub
xor
sbb
setle
push
lock
jae
add
sub
inc
push
xchg
sbb
cmp
jg
inc
and
push
inc
test
(bad)
fidiv
out
adc
aaa
mov
push
dec
add
xchg
cld
imul
and
call
adc
loope
xchg
mov
sbb
add
mov
mov
inc
push
inc
push
repz
cmp
retf
outs
push
(bad)
stos
fimul
sub
jl
mov
mov
push
frstorw
lods
add
lds
mov
test
lea
push
push
rol
mov
sbb
adc
pusha
stc
jp
(bad)
loopne
adc
ja
fidivr
cs
cld
das
mov
sub
clc
lea
es
fsubr
std
and
test
leave
and
rol
stos
mov
inc
out
cmp
push
jecxz
cmp
mov
mov
mov
mov
push
rcr
mov
xchg
clc
sti
or
ds
sbb
pop
add
xor
out
dec
and
aam
(bad)
hlt
mov
jno
test
pop
movs
fcom
jae
cmps
inc
or
iret
test
(bad)
shr
sbb
sahf
mov
xchg
inc
cdq
cmp
out
xchg
jmp
adc
xchg
dec
popa
jmp
mov
push
sbb
mov
neg
idiv
xor
es
lds
pop
(bad)
sub
mov
(bad)
cli
rcl
push
push
inc
adc
inc
cmp
jle
mov
fnstenv
jmp
test
std
mov
ret
ja
jmp
jae
sbb
sbb
aaa
js
mov
movs
sbb
aaa
cmps
jl
dec
in
inc
mov
jg
pop
push
pop
push
lds
push
test
ss
(bad)
int3
mov
mov
pop
cmp
das
pusha
cld
lock
sbb
stos
push
pop
hlt
pop
xor
mov
cmp
ins
and
lea
jl
mov
out
iret
push
xchg
jle
xchg
fwait
(bad)
mov
out
stos
iret
mov
fnstenv
data16
mov
mov
pop
push
and
test
pop
jnp
sbb
mov
(bad)
xor
dec
loop
hlt
data16
bound
ja
mov
push
xchg
xchg
and
mov
cdq
sbb
jbe
rol
ins
mov
cmp
mov
rcr
fdiv
dec
gs
shl
sbb
xchg
add
xor
xor
jge
fistp
push
pop
mov
pop
arpl
xor
xor
mov
out
sbb
jecxz
repnz
call
arpl
inc
mov
mov
adc
mov
sbb
jnp
aam
loopne
scas
shr
push
cs
imul
xchg
xchg
stc
jnp
push
aad
xor
rcr
mov
clc
inc
mov
and
inc
cmp
in
push
mov
mov
popa
int3
add
pop
pop
loopne
add
ins
xchg
sbb
inc
xchg
xchg
push
aam
scas
pop
leave
pop
movs
aad
call
dec
sbb
mov
sbb
ins
inc
in
mov
popa
cli
out
je
cld
lods
out
jo
sub
leave
pop
pusha
ret
imul
mov
ret
sti
xchg
outs
cli
sbb
nop
int3
pop
movs
sahf
cld
dec
mov
ja
cmc
push
mov
and
cmp
or
in
push
push
push
xchg
jb
fistp
retf
(bad)
jo
es
retf
push
push
mov
cwde
mov
inc
add
adc
fs
iret
(bad)
adc
pop
out
sbb
lock
jecxz
pop
or
into
test
out
push
jmp
cwde
sti
das
adc
int3
xor
rcr
pushf
cwde
xabort
sbb
movs
add
inc
out
jbe
xchg
imul
mov
mov
pop
cld
imul
daa
in
nop
lods
ret
dec
add
je
dec
xor
dec
lock
dec
jae
jbe
imul
out
jns
lds
or
adc
add
xor
je
enter
ret
not
xor
call
fs
jne
enter
inc
repnz
sbb
or
jo
stos
in
jp
inc
push
test
sub
movs
arpl
dec
dec
cmp
adc
scas
mov
cmp
and
sbb
ficom
add
dec
xchg
repz
fisub
mov
pop
cmp
les
push
scas
xchg
fs
jecxz
sub
inc
and
push
or
sahf
push
imul
pop
cmp
test
aam
and
ja
cmp
aad
push
push
dec
jnp
adc
aas
sahf
cdq
add
sub
(bad)
leave
xchg
aas
retf
pop
rcl
pop
adc
mov
pop
jl
nop
jecxz
mov
inc
jnp
mov
push
aad
(bad)
in
(bad)
int
mov
and
(bad)
cli
cmp
mov
(bad)
aam
push
int3
cmp
mov
mov
xchg
or
mov
and
push
dec
jns
dec
inc
cs
(bad)
mov
cli
inc
dec
mul
fisttp
push
ficomp
cwde
mov
lea
dec
push
(bad)
retf
test
add
shl
mov
out
ffreep
cli
push
push
int
and
in
xchg
loop
les
pop
fnstcw
push
sub
test
scas
mov
loop
xchg
mov
or
cmp
jl
jmp
cmp
neg
out
and
fisubr
addr16
icebp
lahf
retf
pop
fnsave
push
mov
sub
popa
faddp
popf
inc
enter
fbstp
inc
jle
repz
adc
cmp
xchg
fisubr
out
sbb
mov
sbb
adc
lea
movs
test
inc
dec
xchg
(bad)
loop
ins
es
jp
ds
mov
mov
data16
leave
std
js
add
(bad)
das
cld
out
lea
sbb
jl
mov
mov
shl
mov
mov
xchg
sbb
imul
(bad)
jmp
jl
cmp
lods
out
jns
add
mov
cmps
xchg
pop
test
push
jno
push
jmp
mov
(bad)
pop
hlt
and
inc
fwait
dec
xor
xchg
unpcklps
mov
lea
sbb
sar
in
call
and
sbb
sbb
xchg
mov
ins
xchg
cmp
out
les
aad
xchg
shr
into
xor
fldcw
scas
push
out
test
cmp
out
sbb
icebp
iret
mov
push
push
push
(bad)
lods
cld
scas
or
fisttp
out
into
adc
add
fwait
or
movs
popa
xchg
mov
mov
xchg
push
mov
fsubrp
aaa
movs
and
mov
jbe
and
lods
add
pop
leave
ffreep
js
in
inc
rcr
pop
push
fcmovnb
and
cmp
sbb
dec
iret
cmp
xor
or
inc
pop
movs
fld
out
and
mov
inc
mov
add
xchg
push
inc
dec
jne
sbb
pop
icebp
pop
and
aad
iret
mov
cdq
lds
jle
mov
jmp
ds
xchg
xchg
mov
daa
rol
mov
add
xor
test
mov
mov
push
out
cmp
jle
leave
push
sub
scas
sub
lahf
cmc
xor
test
in
movs
mov
repnz
test
push
addr16
adc
mov
adc
mov
ins
pop
loope
adc
sbb
addr16
in
ret
lahf
pushf
mov
dec
bound
lods
jecxz
out
fcom
iret
stc
ja
stos
test
lahf
or
cs
mov
test
shl
sub
fiadd
shr
cli
icebp
test
mov
pop
jecxz
dec
sete
cmp
icebp
f2xm1
leave
cmp
sub
mov
imul
sbb
aad
ds
adc
(bad)
mov
mov
xchg
cmp
pop
jle
xor
pushf
das
popa
movs
mov
pop
ud2
push
imul
xor
cmc
push
test
adc
out
xor
fnsave
adc
push
xchg
and
pop
jo
sub
imul
xlat
xor
retf
loopne
cmp
xor
jae
pop
mov
nop
xor
lods
daa
call
xchg
push
aas
mov
inc
pop
out
outs
cmp
pop
jge
sub
inc
cmp
ficom
xor
or
pop
(bad)
lea
mul
dec
dec
sbb
jne
jbe
imul
aam
pop
loopne
test
mov
or
mov
push
adc
mov
inc
sbb
out
daa
or
mov
adc
jle
dec
cmp
add
(bad)
fsub
mov
mov
and
dec
repnz
pop
lods
xchg
(bad)
sub
loop
adc
rcr
inc
adc
xchg
cdq
daa
sub
push
lahf
mov
pop
fldenv
lea
ror
push
div
loopne
push
lds
dec
add
jnp
jae
xchg
icebp
pop
mov
add
mov
mov
mov
shl
xchg
mov
mul
adc
mov
int
cs
and
jae
push
mov
call
mov
xor
add
mov
cld
adc
inc
call
xchg
fs
or
inc
in
mov
stc
cmp
cli
ret
push
xor
rcl
and
bound
and
xlat
cmp
jbe
cdq
inc
ins
mov
pop
leave
mov
sahf
ins
jbe
and
mov
pusha
jns
sbb
inc
xor
(bad)
adc
scas
out
cmp
call
sbb
xor
test
inc
hlt
(bad)
pusha
push
sti
push
cmc
icebp
fild
mov
mov
xchg
nop
dec
dec
mov
inc
outs
dec
lock
bnd
push
fwait
add
dec
push
dec
test
push
xchg
rcr
cdq
sbb
fmul
or
fld
iret
adc
cli
lock
push
dec
(bad)
icebp
(bad)
jo
and
jns
push
arpl
push
scas
push
inc
sbb
es
pushf
and
sbb
add
xchg
pop
adc
xchg
test
dec
pop
jecxz
inc
and
or
lock
int
shl
pop
jne
popa
inc
and
inc
pop
xchg
sub
lods
xchg
mov
data16
hlt
mov
dec
shr
push
fs
jne
add
sub
hlt
dec
test
fnstsw
test
fisttp
mov
and
jnp
xchg
int3
push
cs
cwde
aas
dec
bound
jp
jbe
adc
lea
or
push
mov
jmp
pop
jo
(bad)
xchg
out
into
cwde
sbb
jge
les
loopne
sub
push
push
mov
out
xor
or
add
jle
dec
add
ins
and
inc
pop
addr16
push
(bad)
cmc
mov
cld
add
aam
fs
and
jmp
lea
aaa
les
push
aas
xchg
mov
cmp
bswap
xor
ins
(bad)
sbb
ds
mov
sar
xor
dec
jl
(bad)
push
push
pop
cmp
inc
inc
add
mov
shr
mov
jne
mov
and
pop
add
jle
nop
jmp
fild
outs
sbb
mov
xchg
test
sar
mov
mov
inc
mov
sti
jno
cmp
call
fsubr
or
mov
sbb
in
movs
cmps
outs
dec
imul
hlt
inc
push
(bad)
pop
cmp
and
jae
add
or
mov
mov
test
or
iret
sub
ror
lahf
stos
or
lods
mov
lds
test
leave
fwait
repnz
pop
gs
cld
add
cmp
div
into
cmp
adc
rcl
aas
shl
arpl
add
movs
or
add
push
inc
jns
push
dec
xor
not
jmp
out
cdq
out
dec
jns
lahf
pop
and
mov
xor
call
dec
sbb
dec
pop
(bad)
xchg
or
add
xchg
shl
hlt
push
jl
lahf
popa
sub
mov
jbe
jns
or
xchg
loop
fstp
adc
(bad)
mov
ins
mov
pop
popa
sbb
xchg
or
iret
ins
cdq
push
in
jnp
xchg
sbb
push
xchg
mov
push
aam
lock
pusha
xchg
push
(bad)
std
pop
adc
cmps
sbb
shl
pop
xchg
inc
pop
or
sbb
add
adc
pop
cdq
jl
aad
mov
push
fcomp
add
mov
add
and
mov
adc
int3
lock
(bad)
fcomp
fmul
shl
aam
fcmovne
cdq
jne
outs
shl
popf
shl
fst
adc
or
popf
push
cli
lods
adc
inc
push
xchg
add
dec
inc
inc
rcr
cli
(bad)
fadd
jb
inc
sbb
neg
and
scas
leave
cmp
inc
dec
in
jae
hlt
test
lea
push
adc
sets
icebp
jg
cmc
mov
add
sub
ret
gs
idiv
xchg
sbb
sub
xchg
rcr
or
xor
mov
int
(bad)
xchg
mov
and
out
jnp
push
push
xchg
add
push
push
in
add
cmc
push
pop
cwde
popa
and
cmc
mov
and
js
cmps
test
movs
es
rol
add
pop
rcl
xchg
lock
retf
(bad)
jmp
inc
ds
pop
movlps
xchg
lods
inc
cmp
mov
sub
mov
in
inc
pop
dec
popa
lea
jb
retf
sub
bound
add
add
mov
mov
stos
out
sbb
popa
lock
cmp
xor
xor
call
ret
mov
push
cmps
push
sar
jmp
js
jo
xchg
xchg
ss
mov
adc
sbb
mov
sar
cmp
lahf
imul
sbb
adc
hlt
adc
aam
push
pop
stc
popf
ins
cmps
add
test
js
addr16
and
add
std
xchg
lahf
cmps
sub
lahf
jbe
imul
mov
jp
enter
bnd
xor
idiv
mov
ins
arpl
les
and
push
jle
iret
push
cmp
mov
inc
enter
fisub
sbb
out
popf
fsubr
fiadd
cmps
ret
in
jl
jmp
push
test
shr
arpl
scas
mov
or
and
cmp
pop
mov
leave
adc
xor
jb
push
hlt
inc
addr16
cmps
enter
or
dec
adc
or
jnp
or
xchg
xchg
push
and
pop
add
sub
movs
sub
mov
cs
lods
int3
add
mov
xlat
ret
add
mov
push
xor
dec
dec
pop
pop
pushf
loope
fmul
fcomp
repnz
mov
mov
jmp
ss
mov
mov
sbb
cli
adc
out
push
inc
imul
mov
xchg
sub
std
sub
sar
mov
aas
cwde
jmp
cmp
cmp
mov
rcr
rcl
push
(bad)
pavgb
outs
retf
cmps
mov
arpl
sbb
and
aam
mov
adc
fwait
or
out
int3
xchg
pop
inc
push
call
in
arpl
push
sub
mov
mov
adc
stos
push
sub
(bad)
mov
or
add
popf
push
not
fisttp
adc
pop
sti
shl
xor
stc
sbb
fidiv
adc
jno
inc
fstp
push
push
int
imul
idiv
pop
cs
jmp
pop
repz
(bad)
push
movs
in
push
call
lds
mov
icebp
jle
cmps
and
into
push
jge
dec
dec
pushf
push
in
(bad)
push
dec
push
add
stos
imul
mov
mov
daa
jl
xor
mov
sahf
lahf
into
gs
add
pushf
in
in
ret
shl
aad
mov
or
repz
inc
mov
pop
inc
in
cmp
cmp
loop
gs
cmps
mov
daa
jmp
or
test
add
test
mov
int3
out
push
or
mov
retf
nop
loope
nop
rcr
fadd
fnstcw
call
mov
pop
mov
and
sub
sbb
hlt
call
dec
pop
cdq
jne
pop
imul
out
xchg
cs
jp
mov
and
ss
loopne
fs
aaa
sbb
mov
cwde
cmp
and
jg
adc
push
mov
push
xchg
push
dec
push
fdiv
cli
fild
aaa
ror
fcmovnu
out
jg
sbb
test
ds
sbb
xlat
fnstcw
dec
mov
push
(bad)
popf
imul
sbb
in
or
outs
out
and
enter
adc
les
sub
mov
sbb
clc
pop
cmps
mov
(bad)
jb
jecxz
or
adc
bound
sub
sub
mov
int
or
cld
inc
fs
inc
pop
jmp
jle
aas
inc
xchg
inc
clc
mov
cwde
jbe
xchg
mov
out
mov
imul
mov
bound
iret
inc
popa
iret
mov
xchg
iret
in
push
imul
mov
in
ds
out
dec
xchg
loopne
(bad)
mov
jne
pop
mov
mov
mov
push
(bad)
ins
std
pop
fistp
xlat
cmps
push
cs
mov
hlt
dec
shl
les
inc
mov
lock
adc
rcr
pop
xchg
sahf
xchg
stc
scas
test
or
pop
arpl
cmp
shl
xor
and
into
dec
fisttp
fwait
xchg
cmp
aam
idiv
outs
arpl
pushf
mov
push
cmp
pusha
ror
je
and
sti
mov
adc
icebp
call
inc
adc
pop
adc
sbb
ins
mov
dec
dec
adc
mov
test
loopne
sbb
jae
sahf
xchg
sahf
(bad)
xor
shl
loopne
pusha
push
inc
(bad)
and
out
ret
push
mov
mov
mov
pop
push
push
jmp
shl
sahf
jae
xor
stos
in
dec
fdivr
es
aad
inc
xchg
push
ins
jmp
inc
pop
(bad)
mov
sbb
mov
or
cwde
das
or
adc
pop
out
add
lock
in
dec
sub
mov
mov
mov
repz
fild
scas
push
clc
aas
fisttp
ins
(bad)
repz
sbb
leave
inc
cmp
icebp
gs
popf
sar
or
add
aam
dec
loop
or
mov
xchg
cmps
scas
xchg
jns
xchg
ret
adc
test
and
lds
mov
les
outs
xchg
xor
jge
inc
add
dec
mov
jae
mov
cwde
or
imul
push
repnz
mov
adc
daa
adc
leave
mov
nop
js
aaa
int
imul
iret
in
outs
mov
ffreep
enter
fisttp
xor
sub
retf
push
dec
lahf
neg
inc
dec
push
pop
pcmpeqw
aad
int3
and
sar
stos
or
lods
mov
aad
aaa
push
pusha
sahf
pop
pop
or
das
nop
mov
enter
xchg
cmp
xchg
scas
lock
inc
add
cdq
sub
mov
mov
sub
adc
mov
pop
mov
and
(bad)
daa
xor
mov
mov
adc
iret
cmc
and
stos
and
dec
enter
retf
mov
outs
sbb
xchg
sbb
cmp
adc
inc
in
add
shl
lods
(bad)
pushf
loopne
fwait
out
test
mov
dec
call
arpl
arpl
ror
int3
aas
jl
jns
push
cmp
cmp
xor
xor
jmp
sti
lock
es
movs
or
int
or
ss
lea
pop
ret
loop
mov
in
in
dec
aad
dec
out
xor
out
(bad)
and
cmp
push
jae
inc
inc
mov
sub
push
test
fild
mov
imul
fdivrp
pop
ins
mov
cmp
mov
push
outs
les
movs
cld
lea
cwde
ror
movs
addr16
cmp
pop
ret
pop
test
ficom
cmp
and
int3
aam
xor
test
xor
loopne
push
jg
add
lods
cmps
add
jle
inc
add
pop
out
sub
xchg
mov
push
sub
cmp
cmp
int3
outs
cmps
pop
movs
ds
or
jg
aam
mov
ins
adc
test
movs
cmp
or
dec
pop
fcomp
xchg
mov
pop
push
mov
mov
aad
iret
lahf
imul
dec
push
test
leave
sub
pop
out
sub
lock
aad
push
ret
and
pushf
jbe
mov
push
stc
into
add
cdq
or
test
sub
sbb
sub
push
push
and
cld
xchg
data16
cmp
xchg
iret
out
bnd
loopne
adc
cmps
sahf
and
retf
add
pop
in
cmps
adc
add
add
test
movs
stos
dec
mov
loop
cmp
add
jle
push
lods
cli
mov
sahf
mov
cmovle
cmc
cwde
jp
mov
cmp
test
retf
pop
(bad)
xchg
cmp
daa
xchg
push
stc
add
int
mul
pop
inc
jle
retf
add
pop
cs
jp
mov
int3
inc
loope
cdq
xchg
fldenv
mov
cli
mov
fmul
sbb
mov
jo
or
mov
clc
push
pop
pop
xchg
inc
mov
out
inc
or
dec
mov
pop
out
adc
test
shl
fidiv
adc
das
dec
in
rcl
inc
inc
jne
and
mov
test
lock
adc
inc
dec
popf
dec
scas
retf
sub
pusha
call
jmp
(bad)
pop
jmp
mov
aas
inc
xchg
je
aam
jecxz
test
add
pop
sbb
jecxz
dec
sbb
test
jp
sbb
(bad)
jno
mov
mov
in
xchg
jmp
pop
mov
movs
leave
mov
(bad)
jp
rcl
inc
retf
inc
mov
sub
sbb
or
mov
(bad)
retf
outs
popa
jmp
retf
dec
out
in
sub
fild
xlat
sbb
inc
dec
out
xchg
ss
or
pop
pusha
stc
or
or
cmp
fsub
loop
dec
popfw
pop
push
aaa
jae
sbb
mov
cmp
xor
loope
mov
or
cwde
and
arpl
add
shl
jmp
adc
add
es
jmp
(bad)
xor
jmp
and
rcl
das
or
inc
retf
push
movs
xchg
(bad)
leave
push
sti
pop
popa
outs
mov
add
lods
int3
mov
dec
enter
pop
xchg
or
lock
sbb
mov
cdq
xor
sub
loopne
jo
bound
test
xchg
xchg
int3
je
lds
fnstenv
sbb
push
adc
sti
mov
pushf
pop
push
jmp
jmp
bound
mov
pop
pop
fistp
adc
pop
dec
cmp
in
mov
pop
mov
xchg
cmp
pop
or
lods
jae
into
adc
fadd
mov
into
add
mov
mov
lds
ins
loop
call
fldenv
or
jb
xchg
jl
mov
dec
adc
and
xor
fst
jnp
test
popf
es
push
mov
ficomp
call
dec
enter
mov
neg
mov
jmp
sub
sbb
mov
ja
scas
inc
add
pop
sub
in
push
jl
cdq
out
js
pushf
std
adc
xchg
in
xchg
clc
ja
mov
in
mov
(bad)
xchg
mov
rol
dec
jns
jge
int3
mov
inc
(bad)
pop
xor
push
mov
dec
outs
in
scas
stc
aad
aam
stos
in
mov
in
xor
sub
mov
cwde
mov
lods
and
scas
das
call
out
jbe
shl
sbb
enter
clc
idiv
pushf
aad
dec
mov
rcr
(bad)
repz
mov
ins
scas
dec
les
inc
sbb
lds
jmp
and
adc
add
mov
inc
mov
jnp
mov
mov
inc
ins
xchg
clc
sbb
jle
es
(bad)
cdq
into
in
pushf
or
or
mov
push
pop
pop
std
test
xchg
xchg
inc
fpatan
mov
test
sbb
out
push
out
stos
nop
test
sbb
xchg
outs
jnp
adc
pop
shr
mov
pop
popf
int
retf
daa
inc
cmp
(bad)
sub
mov
xchg
dec
push
sub
sub
push
mov
push
jbe
ret
pop
cmp
xor
fst
aas
adc
ret
xchg
hlt
push
pop
xchg
or
aas
mov
add
fisubr
jle
push
sbb
pop
push
sub
test
in
jns
inc
adc
enter
rcl
jne
xor
jnp
or
or
mov
in
mov
in
mov
ret
rcr
or
fcmovbe
jge
pop
jp
mov
mov
movs
or
adc
adc
fidivr
rcr
jno
hlt
outs
cs
xor
push
xchg
shr
iret
add
(bad)
fisttp
jns
movs
jbe
mov
mov
mov
mov
add
popa
sbb
loop
xor
or
mov
xchg
pusha
push
xchg
xor
popa
xor
aad
cld
cmps
pop
js
neg
fdiv
ret
pop
pop
icebp
aam
or
mov
enter
aam
jmp
pop
and
icebp
inc
jno
test
add
jmp
cwde
sar
xchg
xchg
adc
stos
stc
adc
lahf
mov
sub
cwde
stc
into
dec
(bad)
sub
xor
jl
fistp
adc
aaa
enter
shld
jg
imul
push
sub
imul
stc
loopne
(bad)
bound
enter
aaa
push
xchg
xor
mov
outs
neg
(bad)
je
outs
mov
popa
cmp
das
sbb
loope
movs
out
pop
sub
in
mov
push
repnz
mov
ret
mov
sub
cdq
dec
pusha
ret
dec
ja
mov
mov
addr16
ss
shl
popa
mov
bound
push
or
sub
(bad)
scas
pushf
or
xchg
sbb
aam
(bad)
out
mov
js
mov
adc
sub
inc
xor
mov
and
cmps
jae
aaa
inc
test
test
xchg
or
sbb
inc
mov
inc
adc
fist
dec
ins
and
jb
and
xchg
jp
std
outs
cmps
shl
les
(bad)
sti
jbe
stos
stos
imul
in
rol
fadd
inc
push
cmp
test
push
sbb
ret
jne
add
jne
ins
push
inc
cmp
aaa
bound
(bad)
mov
xchg
nop
nop
dec
dec
jnp
push
jge
xchg
jno
fimul
loopne
sbb
push
mov
xor
icebp
ins
sbb
cwde
pop
std
stc
movs
or
in
inc
adc
int3
cmp
sbb
jae
ins
in
ins
inc
or
xchg
fisub
enter
stos
mov
stos
mov
adc
sbb
popa
movs
retf
pop
cs
inc
sbb
div
mov
mov
or
adc
add
lods
xor
retf
test
in
mov
xchg
jge
sbb
mov
add
mul
xchg
xlat
(bad)
ficom
pop
add
pop
pop
fwait
or
test
lahf
xor
dec
cmps
inc
aas
ins
loope
scas
or
jge
in
mov
xor
(bad)
xor
rcl
test
ror
mov
sub
shr
jb
fisttp
mov
sbb
lock
mov
sbb
adc
xchg
xor
(bad)
mov
dec
jns
push
shl
leave
xor
xor
aad
mov
int
test
sbb
sbb
aam
lea
fsub
mov
sbb
jecxz
sub
(bad)
push
(bad)
fmul
enter
jno
xchg
shl
hlt
pop
pop
shl
jl
movs
bound
or
mov
pop
mov
dec
int
sub
xchg
fnstenv
rcr
xor
int
dec
rol
(bad)
fcom
adc
or
repz
mov
retf
mov
mov
jmp
mov
jge
pushf
xor
pop
mov
out
xor
ja
cmps
xchg
xor
test
xchg
jle
aad
sub
pop
and
inc
adc
repnz
jge
call
cmps
mov
sbb
xchg
sub
loopne
adc
jmp
cmps
fidiv
pusha
div
push
push
int3
fxch
add
test
mov
loop
sub
inc
push
sbb
enter
lds
ds
inc
inc
fidiv
retf
mov
dec
int
jle
or
pop
sbb
cs
jge
cwde
adc
cmps
inc
std
jns
out
fs
out
frstor
xchg
mov
mov
inc
scas
imul
jmp
dec
inc
jb
(bad)
jle
mov
pop
inc
dec
sar
mov
jmp
retf
cmp
cmps
xchg
mov
fwait
cmp
and
rol
mov
les
dec
jns
jnp
cmc
imul
in
pop
addr16
repz
fldl2t
pop
ret
in
sti
dec
mov
jle
sub
xchg
dec
mov
rcl
dec
mov
movs
mov
cmp
(bad)
pop
loope
lds
pop
out
push
xchg
inc
or
imul
rcr
xor
dec
outs
inc
sbb
aam
mov
or
imul
int3
iret
lds
aam
scas
call
aas
mov
(bad)
iret
fidiv
or
mov
or
and
imul
lahf
leave
sub
in
out
cmp
cmp
fst
dec
clc
xor
sub
pop
and
and
add
mov
sar
aas
jmp
add
retf
jb
ret
(bad)
push
cmp
ret
xor
retf
pop
pop
imul
test
add
pushf
stos
aas
mov
xchg
or
mov
mov
mov
and
cwde
stc
mov
int
outs
retf
xor
push
jmp
mov
fdiv
mov
ret
outs
adc
mov
(bad)
jb
jg
mov
mov
push
push
and
push
movs
gs
out
sub
test
xchg
es
repnz
push
test
pop
fcomp
dec
loopne
repz
lea
leave
push
mov
(bad)
sub
xor
cmp
movs
or
mov
int
scas
ficomp
mov
iret
test
int
in
mov
push
cmp
mov
mov
dec
hlt
jne
cmp
mov
mov
pop
icebp
mov
lock
je
repnz
fldcw
int3
(bad)
xor
push
xor
inc
stos
mov
imul
mov
mov
ins
retf
inc
call
dec
sbb
cmp
pop
or
xor
out
shr
jb
dec
push
imul
fnstsw
sar
jmp
mov
(bad)
leave
in
repz
xchg
fisubr
push
jge
vmwrite
sahf
mov
test
dec
push
ss
movs
(bad)
mov
pop
daa
ret
je
sub
mov
ds
out
sbb
pop
cmp
mov
into
lds
aaa
popf
arpl
sar
add
(bad)
retf
in
pop
addr16
and
sub
ja
push
in
stos
or
dec
mov
or
sbb
mov
popa
loopne
pop
iret
sub
test
shrd
lods
loop
aas
or
xchg
xor
adc
dec
push
(bad)
js
and
add
xchg
lea
call
fcomp
xor
shr
xchg
xchg
pop
jno
call
xchg
or
imul
push
inc
xchg
mov
or
xchg
pusha
in
std
cs
cmp
icebp
xchg
inc
or
loopne
add
jle
out
xor
mov
sahf
ffreep
fwait
push
popf
std
xchg
xchg
xchg
test
pop
(bad)
stos
mov
fisubr
mov
push
std
rol
rcr
or
pop
xchg
jecxz
(bad)
cmp
mov
in
inc
pop
sub
pop
stc
leave
inc
es
add
cmp
cmp
sub
addr16
lods
mov
add
retf
pop
ficomp
adc
cld
inc
mov
or
jnp
xchg
fldenv
mov
stos
repz
(bad)
jmp
cld
jnp
sbb
add
(bad)
(bad)
das
pop
std
ss
(bad)
je
jecxz
push
jg
movs
lds
mov
add
call
push
jecxz
retf
arpl
test
xchg
adc
pop
mov
movs
jo
cmp
mov
pop
pop
pop
in
mov
stos
mov
or
leave
test
enter
pop
mov
jno
(bad)
sbb
aad
jge
fisubr
mov
es
jo
inc
cld
fwait
in
(bad)
out
sub
add
xchg
jge
mov
aad
push
dec
loopne
push
pop
cmp
repz
rcr
mov
or
sub
int
cs
pop
adc
lahf
jne
rol
lds
xor
retf
adc
lds
lahf
ds
or
movs
xchg
jns
cwde
push
loop
das
cmps
retf
loopne
pop
data16
outs
xor
int
(bad)
test
dec
inc
mov
mov
xor
mov
cmps
test
mov
push
or
inc
adc
cmp
repnz
stos
xchg
jle
xchg
adc
ins
adc
adc
repnz
shl
retf
popf
or
mov
adc
cmp
pop
add
jae
mov
ret
hlt
mov
push
dec
xchg
sbb
lods
sbb
sbb
add
push
in
dec
fiadd
xchg
sub
ins
mov
ss
push
cmp
scas
jnp
and
daa
es
jnp
add
or
mov
dec
call
stos
fbstp
mov
ror
stos
pop
sub
(bad)
arpl
ds
xchg
int3
call
or
and
sar
mov
push
out
sbb
nop
jg
adc
push
pop
jns
add
out
sbb
outs
inc
mov
fxch
stos
in
pop
fs
inc
in
push
add
fsub
je
sub
movs
pop
inc
das
pop
(bad)
sub
icebp
enter
cli
mov
xor
idiv
pushw
push
into
push
inc
in
xchg
mov
sahf
adc
or
push
addr16
jo
cmp
mov
ja
pop
(bad)
lock
fnstenv
add
xchg
push
shr
mov
fdivr
outs
mov
fsubr
add
push
inc
in
adc
outs
stos
in
pop
popa
cmp
fcmovu
rcr
clc
add
aas
sub
scas
and
hlt
test
lock
push
fwait
in
pop
arpl
sub
and
pop
mov
jbe
icebp
jno
xor
out
jno
in
mov
loop
out
rcr
int
xchg
movs
jp
adc
adc
movs
test
in
jmp
retf
mul
jb
cvtpi2ps
pushf
aam
sub
jg
scas
ds
jo
cdq
pop
and
dec
pop
sbb
clc
in
cld
xor
jae
std
movs
dec
imul
ja
(bad)
cs
sahf
and
pop
and
ins
mov
stc
dec
(bad)
jg
pop
mov
daa
je
(bad)
out
mov
adc
call
out
adc
cmp
mov
aas
push
out
jp
les
dec
cmp
pop
in
sub
out
inc
jbe
add
std
aas
std
push
mov
inc
mov
call
popa
lahf
jbe
dec
sub
test
pop
xor
xchg
lods
ss
add
jmp
retf
xchg
mov
repz
lea
cld
(bad)
jmp
pop
gs
mov
data16
xor
mov
jmp
jnp
xchg
jmp
xchg
add
call
cmp
adc
add
push
(bad)
fcomp
cmps
add
stos
mov
and
jg
into
aaa
ret
jo
xchg
cs
cmp
pushf
daa
popf
sbb
dec
ror
pop
and
pop
pusha
test
dec
sbb
loopne
xor
aas
adc
pop
lds
xor
pushf
in
arpl
and
jp
ret
xchg
xor
aaa
fimul
mov
pop
inc
popf
inc
addr16
ds
or
int3
cmp
jno
movs
leave
jb
push
push
in
enter
stos
popf
jecxz
sti
pushf
stos
cdq
mov
mov
inc
icebp
xor
push
and
aam
adc
lea
cmp
in
xlat
stos
jbe
outs
xchg
test
dec
enter
push
jecxz
mov
xor
mov
cld
xchg
mov
cmp
outs
or
ret
daa
pop
mov
and
rcr
mov
jle
pop
dec
ins
mov
mov
add
pop
ja
jo
neg
mov
xor
inc
push
xchg
mov
mov
adc
fsub
xor
adc
int
in
(bad)
or
mov
cmps
call
mov
in
pusha
push
jmp
test
aas
jo
pop
add
cmp
push
mov
push
(bad)
xchg
daa
cmp
mov
xchg
xchg
pop
xor
pop
ins
pop
ins
(bad)
sub
mov
std
add
shr
and
sbb
cmps
jle
scas
fs
jne
cwde
add
mov
inc
pop
adc
fwait
sub
jae
mov
pop
out
(bad)
xor
adc
adc
inc
mov
inc
or
fmul
mov
outs
sbb
mov
jnp
sub
jecxz
xlat
cmps
fsubr
dec
push
inc
cmp
div
mov
adc
mov
adc
mov
jnp
xchg
movs
out
mov
in
fist
mov
cmc
jo
sbb
or
xor
mov
jb
sub
aas
inc
push
xor
inc
test
fiadd
cdq
gs
lock
and
mov
jg
push
xlat
movs
xor
sub
mov
sub
sbb
int3
or
mov
mov
(bad)
fldcw
push
cmps
dec
push
int
aaa
sbb
inc
jae
sub
xchg
push
xchg
sub
xor
loop
or
ins
dec
xchg
mov
or
sahf
sub
adc
mov
mov
or
mov
ja
jge
fsub
and
sbb
iret
inc
ret
sub
scas
retf
cmps
pop
lahf
je
add
mov
push
xor
fimul
arpl
dec
in
and
gs
jecxz
aaa
loop
pop
mov
xlat
jle
or
add
jecxz
inc
sbb
jecxz
ins
dec
pop
fsub
mov
(bad)
das
add
outs
xor
loopne
push
cmp
retf
jno
scas
xchg
fcom
and
popf
stos
dec
fwait
xor
(bad)
mov
fs
sbb
(bad)
mov
out
and
or
sub
sbb
jmp
push
leave
sub
sub
(bad)
jae
xchg
mov
lds
xor
test
dec
clc
xchg
sysexit
cmp
jne
mov
out
and
sub
push
and
mov
out
inc
dec
and
mov
add
xor
test
inc
adc
sub
inc
inc
sbb
add
loopne
cmp
loopne
adc
mov
adc
inc
xor
mov
pusha
xor
js
inc
clc
mov
test
jne
cmps
(bad)
adc
js
sub
js
and
cmp
stos
push
xchg
adc
ins
mov
jecxz
iret
test
jle
shl
jnp
adc
sub
(bad)
ss
test
dec
fsub
and
pop
and
popa
xchg
(bad)
rcr
je
mov
das
sub
fucomi
nop
mov
jge
rcr
xchg
dec
inc
push
xchg
int3
sar
push
not
pop
cmps
jo
push
jbe
iret
ret
adc
icebp
js
fwait
push
hlt
imul
in
scas
inc
inc
xor
in
fdivr
xor
(bad)
and
jle
(bad)
fild
stos
dec
lahf
rol
leave
aam
aad
in
and
imul
add
sbb
lods
fist
or
leave
adc
inc
int
jl
call
pop
xor
mov
and
ins
cmp
sti
push
cdq
sti
xor
sar
js
lds
or
xchg
test
loopne
xchg
data16
lds
pusha
int3
adc
xchg
pop
jecxz
js
mov
sbb
mov
inc
fsin
idiv
push
cmp
xor
in
dec
ret
xchg
and
sub
and
xchg
add
mov
movs
mov
pop
scas
mov
icebp
scas
test
outs
mov
xlat
outs
bound
sbb
fstp
retf
dec
push
push
pop
cld
pop
imul
pop
dec
out
mov
retf
ss
out
cmp
and
or
cmp
mov
ss
in
dec
out
stos
and
mov
push
xor
adc
sbb
test
aad
lock
mov
mov
mov
sub
and
call
mov
call
loop
add
lock
fild
adc
je
pop
shl
out
xor
inc
popa
test
ds
arpl
add
jno
jo
(bad)
jae
clc
mov
pusha
jne
xchg
inc
mov
add
add
aad
add
test
repnz
sbb
loope
push
scas
in
cmp
adc
loopne
adc
jmp
sbb
lds
callw
mov
cmp
pop
xchg
sti
or
sub
cdq
into
dec
xchg
mov
inc
inc
data16
cmovno
jmp
(bad)
dec
loop
jmp
lock
sbb
retf
mov
movs
call
xchg
pop
pop
es
jno
and
out
mov
sbb
mov
int
ror
shl
mov
dec
xor
cmps
fnstcw
movs
or
or
jp
mov
or
arpl
jb
xchg
loope
dec
jne
push
xor
je
outs
ret
adc
adc
out
push
sub
pop
and
dec
aad
lods
shr
xchg
or
imul
lock
cmp
mov
jle
mov
outs
cmp
mov
or
movs
rol
icebp
xchg
inc
loope
movs
scas
popf
popa
sbb
xor
cmp
stc
fucom
jae
or
loope
pop
xchg
sbb
xor
cmc
icebp
in
leave
cmp
daa
inc
inc
dec
mov
js
data16
mul
or
lds
jno
lock
jbe
add
sbb
and
retf
sbb
xchg
ret
scas
jb
mov
pop
dec
shl
mov
mov
pop
cmp
jns
mov
addr16
or
mov
mov
leave
loop
xchg
out
jge
lods
mov
sbb
xor
ret
and
movs
mov
cmp
dec
or
in
jp
xchg
pop
jns
icebp
or
or
inc
push
jecxz
jecxz
ret
jmp
mov
das
rcl
push
ficom
sub
es
dec
jmp
call
aaa
and
adc
mov
sbb
xor
iret
out
leave
push
jecxz
iret
jnp
mov
mov
lods
movs
shr
jae
in
dec
or
aam
ja
jo
shl
bound
fist
jne
out
sbb
mov
iret
test
cli
jl
lahf
push
cli
jge
out
fidiv
dec
adc
dec
fist
push
lods
int3
push
pushf
xor
pop
jg
in
pusha
sar
test
arpl
push
jae
mov
cmp
lock
dec
bound
xchg
popa
pop
push
mov
xchg
xchg
mov
adc
outs
xor
inc
push
sbb
pop
push
inc
test
call
pop
imul
dec
les
inc
inc
mov
mov
dec
rcl
test
adc
addr16
stc
aaa
in
sbb
popf
dec
jns
xchg
test
(bad)
int3
call
and
and
call
jmp
mov
dec
fwait
pushf
stc
mov
fwait
pushf
inc
mov
std
fisttp
push
jne
scas
loop
pop
dec
cmp
pop
out
jne
push
dec
or
or
test
shr
jecxz
in
push
movs
dec
sbb
pop
std
(bad)
mov
idiv
leave
inc
loopne
add
test
inc
xchg
mov
dec
cmp
cwde
fsubr
add
int3
in
pop
mov
(bad)
dec
sbb
xchg
movs
ss
jmp
std
ret
cmp
popf
out
cdq
popa
jno
fldcw
ficom
cmp
mov
push
sti
add
adc
push
ficom
std
popf
sub
ficom
sub
lahf
jns
or
inc
push
xchg
jno
data16
push
fst
ficom
or
mov
jmp
fbstp
xchg
jle
or
inc
imul
or
into
ds
dec
push
call
and
dec
jl
mov
xlat
add
std
call
gs
es
mov
sbb
xlat
imul
ins
push
push
lds
xchg
jbe
push
xchg
ja
adc
popf
lock
jecxz
lea
cli
jle
mov
pop
test
mov
fldenv
xchg
inc
jmp
and
or
or
xchg
and
xchg
sti
aaa
popf
push
push
dec
pop
lahf
ret
test
xlat
(bad)
dec
and
fwait
push
xchg
pop
daa
mov
dec
out
lods
or
ret
pop
xchg
pop
cmps
call
add
add
push
and
ins
sbb
cmp
mov
mov
mov
add
pop
dec
es
xor
scas
call
je
loopne
jno
out
ror
mov
add
adc
pop
jl
adc
or
jl
stos
les
nop
sbb
in
inc
test
cld
daa
cld
jmp
call
push
(bad)
mov
scas
arpl
pop
loop
enter
inc
push
xchg
mov
mov
inc
in
sub
push
add
dec
inc
shl
das
or
adc
sbb
fstp
pop
xor
fld
dec
mov
bswap
cmp
cwde
cmps
int
sub
stc
push
mov
(bad)
mov
mov
xlat
es
rcr
into
pushf
fstp
mov
mov
dec
lock
or
adc
mov
stos
in
dec
pop
mov
cwde
or
call
je
or
pop
jb
call
pushf
pop
fcmove
cli
mov
stos
xor
scas
int
out
lods
add
mov
pop
mov
aad
push
xchg
dec
xchg
xlat
cmp
xor
dec
mov
test
ins
pop
repnz
out
ret
retf
or
ss
mov
push
lds
push
fst
js
jecxz
pop
mov
dec
clc
inc
or
arpl
sub
or
gs
cmp
je
(bad)
mov
inc
sahf
fisub
push
add
nop
pop
xchg
stc
push
inc
cmp
mov
fnsave
mov
es
lahf
pop
movs
aas
lods
dec
inc
and
popw
pop
mov
and
or
lahf
mov
inc
rcl
mov
loope
in
xchg
mov
ds
test
push
in
pop
sbb
sbb
push
mov
icebp
or
retf
sbb
repnz
fidivr
dec
push
stc
xor
mov
push
pop
fs
push
lea
lahf
cmp
sbb
jbe
lahf
out
mov
pop
or
cmp
dec
imul
arpl
mov
cs
and
stc
push
pop
inc
popa
in
mov
jae
icebp
cmp
outs
leave
dec
(bad)
ret
and
xchg
lea
mov
pop
cmps
(bad)
test
xor
mov
stos
push
pop
(bad)
pop
add
pop
add
inc
scas
or
push
out
pop
leave
inc
inc
aaa
sub
and
xchg
mov
movs
cmps
cmp
mov
xchg
stos
inc
imul
cmc
jg
jae
fild
in
and
xor
(bad)
mov
mov
or
or
out
xor
sbb
add
mov
movs
retf
adc
sbb
fldenv
jmp
clc
ins
cld
and
pop
out
leave
mov
cmp
in
mov
or
dec
imul
mov
inc
shl
(bad)
cmp
into
xchg
xor
out
int
bnd
push
add
xor
push
test
push
dec
inc
dec
mov
inc
test
in
pop
adc
jecxz
inc
enter
movs
iret
cmp
sub
rcl
scas
aas
cmp
enter
out
scas
das
dec
aam
adc
sub
in
add
loop
(bad)
in
or
loopne
stos
pop
jl
dec
cmp
(bad)
lahf
ins
xchg
mov
add
cdq
iret
pop
std
adc
push
loop
inc
outs
fcom
pusha
test
add
mov
inc
add
movs
jnp
in
aas
das
mov
ror
xchg
in
mov
stos
add
xor
adc
xor
out
mov
(bad)
ficomp
xchg
sub
aad
xor
xchg
sub
imul
adc
call
push
mov
rol
gs
mov
mov
jns
shl
mov
jle
out
data16
xchg
popf
push
inc
jne
into
les
out
sub
ret
std
aam
scas
jae
(bad)
in
int
in
in
pop
cmps
xor
jmp
shl
sub
cs
push
aad
or
iret
mov
adc
jmp
jmp
pop
dec
ret
es
jecxz
inc
out
push
rcl
shr
mov
and
pop
dec
pop
dec
dec
xchg
xor
sbb
loop
scas
dec
xchg
icebp
pushf
xor
fist
rcl
addr16
fisttp
cdq
pcmpeqd
setge
dec
in
add
push
(bad)
push
movs
fbld
add
stos
cwde
cmp
fst
out
cmp
jbe
ret
inc
popf
sbb
mov
or
mov
xor
sahf
fwait
aas
fld
nop
xchg
ret
adc
dec
ss
jecxz
out
jg
addr16
pushf
xchg
inc
movs
fnsave
in
cmp
jno
mov
adc
xor
pop
rol
inc
lea
call
mov
call
gs
xor
cmp
push
push
ficom
out
pop
xchg
xchg
and
add
aad
lahf
scas
or
and
mov
test
dec
mov
lds
mov
mov
dec
shr
gs
arpl
mov
xchg
repz
rol
inc
test
push
pop
lahf
imul
pop
inc
or
mov
jl
neg
cli
inc
inc
sbb
pop
push
fmulp
push
push
mov
xor
pop
clc
icebp
loopne
adc
mov
pop
mov
aaa
push
inc
fdivr
test
scas
call
mov
(bad)
popa
jns
aaa
(bad)
(bad)
inc
rcl
test
push
pop
inc
std
add
adc
rcl
dec
mov
pusha
mov
pop
(bad)
mov
das
(bad)
in
pop
pop
inc
push
stos
push
xor
fsqrt
div
scas
je
push
(bad)
aam
jg
cmp
retf
xchg
adc
nop
(bad)
jle
pushf
inc
gs
push
push
pop
add
popf
sbb
shl
dec
mov
je
and
int
in
xchg
fidiv
das
mov
and
call
mov
adc
inc
jae
(bad)
ds
ins
cmps
cwde
lahf
mov
retfw
sbb
call
stc
mov
xor
jnp
cmp
stos
test
ror
je
add
aad
in
ja
arpl
pop
ins
push
add
rcr
cmp
cmc
xchg
sbb
or
shr
ret
mov
aas
push
inc
test
add
fwait
shl
and
imul
(bad)
loop
dec
xchg
sub
jecxz
sbb
dec
dec
(bad)
jbe
fld
aas
arpl
sub
sbb
or
scas
or
lods
into
mov
pop
adc
mov
loope
mov
jg
push
lods
cmp
pop
push
js
xor
push
addr16
test
push
dec
out
shr
call
jae
mov
mov
inc
daa
movs
jns
cmps
push
inc
pop
mov
push
pop
inc
dec
pop
sar
stos
sbb
les
xchg
xchg
clc
shl
mov
sbb
pop
(bad)
mov
out
jmp
dec
popa
push
addr16
shr
xor
mov
enter
sub
scas
(bad)
repz
adc
arpl
stos
pop
jnp
pushf
popf
push
jmp
(bad)
(bad)
scas
sbb
inc
hlt
int3
pusha
enter
pusha
pop
adc
jg
pop
cmp
test
mov
leave
push
push
sbb
jne
out
jbe
nop
push
sbb
loopne
mov
mov
dec
mov
mov
jae
in
mov
mov
xlat
xchg
adc
scas
add
adc
mov
fild
(bad)
dec
sub
mov
dec
outs
inc
ins
ins
not
and
mov
xchg
in
mov
fcom
test
shl
push
cmp
loopne
mov
into
pop
push
cmp
aaa
outs
xor
aaa
xchg
outs
fist
sub
rol
sbb
adc
loop
call
sub
fsubr
repnz
adc
mov
ja
aaa
inc
push
addr16
cmp
or
aad
mov
test
mov
sti
call
mov
leave
leave
pop
cmp
rcl
icebp
clc
mov
cmp
add
mov
sti
mov
in
sbb
daa
mov
pushf
sub
arpl
and
pop
int
(bad)
jo
daa
dec
xchg
mov
push
dec
dec
or
inc
mov
popf
sar
mov
mov
mov
xchg
fisub
add
push
mov
out
jne
pop
sahf
out
sbb
imul
pusha
ss
add
add
out
inc
pop
mov
mov
mov
dec
jp
sub
mov
cmp
dec
pop
call
push
mov
lock
inc
ja
jns
popa
mov
cmp
cld
not
sbb
jle
popf
dec
les
je
cmp
push
pop
lds
cmp
(bad)
pop
je
mov
add
jmp
test
push
jns
dec
loope
rol
cmp
mov
outs
into
inc
pop
mov
mov
or
jb
clc
ss
adc
and
cli
xchg
adc
mov
and
push
push
retf
mov
mov
jecxz
cmp
mov
inc
pop
push
int
mov
inc
pop
(bad)
test
sub
lock
lea
sbb
cmp
std
push
fsubr
call
add
leave
sbb
adc
sub
iret
mov
jnp
les
dec
jnp
fldenv
mov
adc
hlt
xchg
dec
ficomp
push
mov
mov
mov
mov
add
mov
mov
(bad)
ins
adc
lahf
xor
popf
mov
adc
data16
data16
sbb
fmul
(bad)
push
push
cmp
jge
popa
inc
sti
les
dec
test
lahf
cmps
cmp
mov
lods
imul
sbb
and
not
push
ror
fsubr
test
sti
addr16
dec
sar
das
adc
sbb
inc
pop
(bad)
lods
inc
les
cmp
pop
add
dec
mov
(bad)
pop
push
mov
cmp
inc
(bad)
fcmovne
jb
adc
out
dec
aam
int
mov
shl
lahf
aaa
aaa
cmp
jle
sti
push
mov
mov
fcom
iret
pop
movs
push
push
ss
into
ret
imul
push
mov
jecxz
adc
xchg
aam
jno
and
xchg
sbb
mov
xchg
cmc
and
loope
pop
push
pusha
sub
dec
shl
sbb
hlt
cwde
jne
pop
and
xor
sahf
cmp
pmulhw
push
cmps
cdq
sub
jnp
push
(bad)
inc
sub
in
out
movs
or
and
push
(bad)
dec
jmp
jmp
xor
inc
test
mov
xchg
xor
nop
jp
sahf
inc
mov
mov
stos
pop
enter
mov
jmp
fs
jg
sbb
sar
dec
inc
gs
in
sub
lahf
out
cmp
push
gs
and
add
push
dec
call
jg
push
retf
in
or
(bad)
pop
and
into
push
das
sub
loop
mov
jnp
adc
ret
push
add
sbb
mov
push
xchg
inc
xchg
cmc
or
xor
dec
aas
cs
fimul
shr
inc
je
cs
test
movs
dec
inc
icebp
and
lods
fwait
stc
xor
repz
movs
jae
aas
xchg
adc
inc
pop
pop
or
lea
jp
mov
and
xor
or
cwde
into
jecxz
xor
pop
lods
inc
and
loop
cmp
xchg
into
(bad)
dec
rcl
jo
adc
mov
xchg
test
sti
call
xchg
scas
retf
loopne
cmp
xor
xchg
add
(bad)
rol
push
cdq
sub
inc
mov
cwde
inc
addr16
scas
ds
retf
test
pushf
stos
test
ret
dec
cmp
sub
into
cwde
dec
repnz
call
pop
cwde
ds
add
leave
push
sbb
das
retf
cmp
push
fldcw
test
int3
ret
xchg
mov
mov
and
ret
out
sub
inc
jno
sub
jp
(bad)
aas
aaa
stos
xchg
sub
repnz
add
pop
lds
adc
in
cmp
sub
loopne
rcr
cli
mov
loope
xlat
mov
lods
popa
adc
call
test
xchg
in
xor
add
call
xor
add
movs
push
movs
pop
shr
dec
mov
clc
addr16
push
std
in
in
lods
xlat
daa
xor
mov
(bad)
or
mov
pop
and
jo
stos
mov
and
xor
retf
pop
lods
cli
xor
gs
or
push
adc
jle
(bad)
push
adc
sbb
add
mov
sub
cmc
or
add
add
ins
xor
(bad)
dec
jge
mov
in
xchg
in
adc
lahf
mov
mov
xor
jl
fsubr
in
cmp
mov
inc
lea
scas
xor
int
ds
lods
(bad)
aas
push
mov
push
fyl2x
mov
pop
adc
in
movaps
xchg
xchg
aad
dec
push
xor
sub
push
out
in
sub
and
and
jnp
inc
lds
aad
hlt
or
cmp
inc
out
in
mov
add
test
adc
dec
jmp
xlat
fscale
aaa
xchg
cmp
sbb
gs
jb
clc
hlt
jne
cmc
int
mov
push
mov
dec
mov
inc
pushf
inc
test
sub
int3
dec
cdq
sar
retf
ja
mov
inc
outs
scas
std
movs
movs
addr16
cmp
xchg
mov
fs
jnp
push
mov
xlat
lods
adc
daa
rol
in
sbb
lahf
ss
mov
or
dec
call
test
push
ret
(bad)
mov
push
or
xor
cmp
cdq
push
enter
add
push
fild
cmps
(bad)
pop
inc
fcmovne
cmc
and
adc
push
vpmacsdqh
sub
pop
jns
movs
cmps
xchg
stos
mov
or
ds
sahf
dec
out
mov
xchg
mov
ds
inc
push
add
push
xchg
pop
sub
mov
add
push
mov
in
inc
mov
test
adc
jmp
push
and
and
mov
sbb
mov
pop
and
add
mov
ins
imul
cdq
loope
push
or
inc
dec
enter
mov
inc
imul
aas
sbb
cwde
movs
mov
fstp
inc
pop
sar
cli
dec
cdq
sub
jl
retf
cld
aad
data16
pop
pusha
xor
call
push
or
test
ins
jo
or
mov
repz
fdivp
fist
xor
xor
nop
add
dec
inc
sub
push
sub
mov
jl
jmp
mov
fwait
das
je
and
xor
out
add
hlt
mov
sub
mov
retf
and
in
jle
xchg
jg
scas
outs
enter
call
push
and
ret
fiadd
push
mov
sub
cwde
pop
mov
sbb
jle
sbb
movs
push
mov
bound
data16
dec
mov
jg
repz
push
inc
popa
pop
sbb
adc
sbb
jmp
test
inc
fmul
fcom
mov
fcmove
retf
div
mov
and
mov
mov
ins
pop
mov
fstp
adc
pop
ss
push
xchg
push
fsubr
stc
ss
dec
push
or
or
rcr
mov
icebp
test
or
int3
inc
fwait
jo
mov
loope
loopne
into
rcl
mov
(bad)
fild
lods
sbb
pop
cdq
pushf
aam
cmps
aaa
adc
popf
retf
adc
xchg
pusha
mov
cmp
das
ds
fsub
stos
loop
fadd
test
adc
and
popf
add
inc
ret
(bad)
push
arpl
hlt
pusha
outs
cwde
or
and
es
add
sbb
std
cmps
aam
mov
es
jb
stos
mov
out
inc
adc
or
xchg
repz
call
and
cmps
lds
pop
mov
adc
pop
push
add
or
in
mov
cmp
sti
out
cli
mov
pop
mov
outs
daa
fnstcw
icebp
pop
add
xchg
xchg
add
xchg
jno
test
add
pop
push
out
cli
or
mov
push
mov
and
mov
shl
iret
or
icebp
xchg
outs
mov
arpl
nop
js
dec
clc
(bad)
cmp
test
pop
sub
mov
lods
pop
(bad)
aam
loope
imul
pop
fnstcw
dec
outs
stos
pop
imul
jge
out
inc
sbb
adc
dec
sbb
jns
out
inc
mov
mov
cmps
or
repnz
mov
(bad)
sbb
dec
sti
jnp
jno
(bad)
in
xchg
dec
adc
mov
mov
imul
fcmovnb
sbb
jns
or
pop
pop
jne
or
bound
lea
mov
outs
aas
hlt
mov
int3
pusha
je
dec
mov
pop
daa
in
mov
cli
mul
in
sub
cmps
mov
test
stc
cld
add
and
stc
or
out
sbb
jg
in
adc
(bad)
jmp
fcomp
enter
pop
xchg
pop
das
or
(bad)
fild
(bad)
out
xor
push
adc
push
sbb
xor
mov
mov
inc
(bad)
data16
sar
push
pop
mov
pop
jne
int
push
int
scas
in
mov
shl
dec
pop
mov
mov
push
bound
mov
stc
or
jmp
lea
fbstp
int
fbld
pop
mov
cmc
jge
adc
sub
js
ficomp
mov
(bad)
xchg
adc
int3
push
data16
lods
push
stc
xchg
mov
ds
xchg
inc
jp
fxch
sub
in
cmp
push
sub
dec
mov
stos
push
out
cdq
lods
loop
call
pop
loopne
(bad)
out
add
inc
jbe
and
daa
xor
xchg
xor
jmp
xor
(bad)
outs
cld
push
fs
addr16
imul
mov
push
push
mov
adc
or
sbb
inc
jns
mov
sbb
mov
repnz
daa
stc
(bad)
cmp
or
call
jmp
mov
mov
inc
sbb
xchg
cmp
cli
cmp
je
inc
push
nop
sti
ins
sbb
clc
xchg
mov
pmaddwd
in
rcr
or
lea
gs
test
(bad)
push
cli
jp
sbb
xchg
xchg
mov
mov
mov
popf
loopne
out
add
push
das
leave
cwde
adc
out
push
in
or
movs
aaa
dec
mov
cmps
mov
mov
jp
fstp
add
test
fld
ins
mov
inc
outs
repz
cmc
jmp
jecxz
or
cmp
daa
fcom
mov
add
imul
mov
sbb
fadd
in
or
stos
scas
xor
mov
es
fdivrp
arpl
and
sbb
fstp
inc
sar
cmps
lods
and
dec
sub
mov
dec
xchg
mov
jnp
lahf
mov
out
xor
mov
neg
cli
push
cmp
jp
push
and
fldenv
adc
dec
outs
mov
test
add
out
movs
test
cmps
arpl
xor
std
ror
push
or
jo
fistp
aam
adc
mov
jmp
add
daa
out
push
adc
mov
out
std
dec
pop
lods
jg
fsubr
aad
sar
jp
push
test
mov
inc
imul
shl
mov
les
cmc
int3
enter
ficom
jae
lods
iret
jp
or
bound
sbb
scas
ret
mov
push
lmsw
scas
mov
daa
or
add
adc
jg
mov
mov
loope
push
mov
ins
dec
out
(bad)
out
add
inc
test
xchg
in
pop
mov
mov
outs
call
and
loopne
call
inc
outs
movs
xchg
jl
adc
mov
(bad)
int3
push
xchg
lea
mov
(bad)
pop
dec
pushf
out
jb
int3
data16
inc
push
xor
mov
fstp
cwde
add
lock
pop
pand
ss
fcom
mov
(bad)
pop
test
push
cwde
pop
imul
sub
adc
push
fcomp
jns
fcmove
cmp
cmc
fs
cmp
jno
mov
enter
and
je
cmc
cli
sub
mov
js
mov
and
sub
loope
add
neg
ins
add
sub
cdq
jns
pop
scas
jmp
out
ins
jl
sub
int
sub
inc
and
jle
hlt
inc
mov
add
gs
call
pop
data16
data16
iret
loopne
pop
xchg
nop
xchg
fidivr
inc
cmc
cmp
outs
add
xor
frstor
or
or
cmps
mov
sti
(bad)
loopne
daa
push
sar
or
(bad)
ins
xchg
and
fidivr
ror
add
sete
movs
inc
mul
loop
leave
pop
ret
scas
pop
xchg
add
imul
cmp
xchg
je
inc
lds
xlat
es
sub
mov
dec
and
xor
mov
adc
inc
jnp
mov
iret
mov
inc
xchg
pop
(bad)
hlt
push
push
shr
jecxz
cmps
push
fstp
(bad)
dec
in
enter
imul
mov
sub
out
daa
mov
(bad)
mov
retf
leave
aam
pop
sahf
test
push
push
rcl
stos
out
mov
pop
jg
mov
outs
mov
push
popa
pop
xchg
xchg
loopne
add
lds
dec
cmc
fs
loop
mov
xchg
addr16
cmps
push
push
push
into
sbb
dec
jne
push
mov
add
cmps
test
in
stos
mov
or
das
and
push
stos
push
push
aaa
call
mov
pop
push
cmp
(bad)
or
or
jl
xor
repnz
pop
fcmove
sti
adc
arpl
shr
adc
cmc
icebp
loopne
push
sub
mov
sahf
jle
retf
and
xchg
jno
ins
or
mov
jle
mov
sub
xlat
ds
imul
add
es
add
lods
mov
xchg
call
enter
jno
jno
mov
les
fisubr
ret
ss
jbe
stos
aam
bound
in
retf
sub
stos
xchg
mov
fst
pop
xchg
inc
int
inc
jnp
push
or
or
fstp
adc
cdq
fldl2e
and
mov
(bad)
mov
call
xor
pop
mov
in
psubsw
mov
xchg
jmp
hlt
sbb
mov
dec
cmp
(bad)
rol
mov
mov
popf
jl
mov
ds
out
push
or
aad
lods
retf
adc
xchg
jnp
mul
sbb
dec
in
iret
dec
push
pop
jo
jne
stos
jnp
fst
mov
sub
fs
cmps
sar
inc
push
xchg
lods
outs
fdivr
xchg
outs
mov
sub
inc
(bad)
test
dec
into
mov
or
jg
in
es
pop
jae
ins
sub
xor
das
pop
cmps
pop
mov
repnz
repnz
push
add
inc
fimul
fidivr
call
cmp
jg
sub
sbb
nop
mov
add
push
push
mov
jecxz
adc
(bad)
dec
fisttp
ja
(bad)
xor
jle
add
cmp
leave
aam
into
xchg
(bad)
cmps
fild
adc
xor
in
sub
fsub
dec
nop
mov
mov
dec
adc
sub
call
lea
sbb
arpl
xchg
int3
sbb
call
xlat
adc
xchg
mov
loopne
aam
mov
pop
pop
inc
and
arpl
(bad)
jmp
xchg
jmp
and
add
jecxz
int
add
mov
adc
sub
pop
dec
mov
inc
ds
jmp
ins
arpl
mov
mov
call
cmp
fs
arpl
das
aam
mov
mov
fld
sbb
dec
loopne
lea
jle
or
pop
pop
in
daa
std
push
or
mov
push
xchg
repnz
(bad)
mov
inc
pop
test
fs
stos
scas
dec
dec
es
or
push
jb
xchg
out
les
lahf
pop
mov
dec
xchg
mov
inc
fwait
pop
push
(bad)
xchg
jge
dec
arpl
(bad)
rol
lods
jmp
ds
ficomp
mov
dec
pushf
dec
mov
shr
jle
sbb
mov
hlt
xor
jecxz
push
push
das
mov
fcomp
shr
lahf
pop
sbb
in
shr
adc
jne
psraw
loopne
cmps
push
jmp
loope
out
cwde
mov
aam
push
dec
cmp
enter
pushf
xor
lea
mov
loop
js
jl
mov
sbb
push
lods
stos
xor
ins
jle
mov
or
and
fisttp
fidivr
bound
inc
stos
sub
mov
dec
(bad)
mov
pushf
std
ret
or
inc
retf
xchg
xor
sbb
sub
pop
and
mov
push
scas
dec
jecxz
ja
call
jne
fcom
scas
sub
ds
sahf
fst
mov
inc
sbb
daa
addr16
test
adc
test
sti
push
std
jae
adc
xchg
add
pop
mov
jo
popa
push
sbb
cli
jmp
and
add
inc
imul
sub
cmps
fwait
gs
sbb
dec
not
and
mov
mov
dec
or
ss
xor
out
jmp
in
pop
mul
sub
js
cmc
aaa
call
jae
jmp
sub
mov
push
stos
xchg
push
enter
out
jp
(bad)
cld
(bad)
sub
pop
inc
mov
mov
iret
dec
popa
(bad)
cli
shl
pop
mov
mov
in
stos
inc
jp
jbe
mov
mov
sub
(bad)
call
inc
push
dec
dec
push
add
fsubp
mov
add
ror
xor
xchg
cwde
mov
push
aad
sub
repnz
push
xchg
ds
xor
pop
xor
imul
and
lds
xor
test
pop
lahf
out
mov
fidiv
je
scas
or
dec
cdq
pop
pop
xor
call
loopne
out
mov
xchg
jmp
add
sub
cmp
or
push
repz
mov
int3
push
xchg
dec
push
or
in
ins
(bad)
imul
stos
jo
xchg
stc
push
arpl
push
aam
es
ficomp
and
call
dec
mov
repnz
dec
lock
mov
loop
inc
sbb
fild
shr
retf
jmp
or
jb
cmps
inc
fimul
or
shl
cdq
aad
imul
fcomip
xor
pop
je
xchg
lods
rcr
adc
mov
ret
es
cmp
mov
jnp
and
iret
push
call
test
test
in
mov
idiv
rcl
lods
out
xchg
mov
xchg
mov
call
lea
xchg
mov
mov
rcl
mov
enter
jo
je
push
shr
mov
mov
iret
xor
inc
nop
dec
mov
jne
lds
inc
xor
and
cli
mov
dec
cs
fist
lods
ror
dec
dec
pushf
xchg
dec
or
inc
outs
jns
cmc
push
out
sub
inc
jecxz
or
loop
imul
mov
push
pusha
dec
mov
sub
mov
fidivr
push
sub
mov
fidiv
jns
cwde
shl
mov
ret
outs
in
and
or
test
adc
cwde
dec
shr
mov
mov
fisttp
mov
push
loopne
cmp
push
jg
(bad)
ret
cmp
and
adc
ficom
adc
ja
mov
hlt
loop
mov
mov
shl
lds
dec
xor
je
sbb
movs
inc
and
mov
js
test
add
lahf
jno
cmp
out
mov
or
xor
or
sub
rol
lods
cmps
rol
inc
std
test
imul
xor
inc
adc
push
jle
mov
fnop
pusha
(bad)
loop
inc
lods
pop
popf
cli
mov
mov
imul
ret
inc
outs
mov
retf
mov
sub
aaa
inc
pop
in
ins
mov
(bad)
es
not
fimul
add
xor
aaa
outs
cmp
push
out
jmp
in
cli
xchg
sub
sti
pop
inc
push
shl
mov
shl
mov
cmp
mov
je
sbb
mov
(bad)
ja
in
mov
(bad)
retf
dec
rcl
stos
sti
jecxz
or
rcr
push
mov
cmp
mov
mov
sbb
add
dec
aaa
das
ds
cmps
xor
or
cmp
mov
xchg
ffree
inc
inc
xchg
mov
push
imul
mov
cld
jno
mov
adc
movs
dec
xor
mov
(bad)
in
xor
mov
movs
or
(bad)
xor
mov
mov
inc
pusha
ins
icebp
inc
mov
dec
xor
or
mov
jmp
rcr
dec
push
sub
popf
mov
leave
retf
cmp
cmc
jmp
pop
test
jns
and
cli
add
add
or
mov
addr16
fist
rcr
sbb
push
push
jmp
push
cs
cmp
and
test
sar
dec
inc
je
(bad)
and
or
jnp
mov
imul
cmp
mov
and
inc
aas
loope
push
aad
pop
inc
sbb
xchg
mov
push
adc
or
jns
mov
sub
aam
dec
inc
je
xor
jmp
jmp
xchg
addr16
mov
inc
sahf
ficom
ja
rcr
xor
imul
shl
xlat
daa
dec
inc
test
arpl
mov
and
mov
xchg
ss
xor
dec
xor
cmp
mov
mov
cmp
push
push
sbb
push
sub
std
xchg
(bad)
dec
cdq
je
pop
ds
stos
mov
hlt
ds
mov
jb
shl
inc
shl
retf
rcr
mov
ins
mov
jns
xor
scas
mov
push
mov
mov
jmp
retf
add
out
add
pusha
in
out
fimul
cwde
sub
mov
jae
cmp
push
dec
sbb
jb
icebp
pop
dec
xor
(bad)
cld
fsub
outs
pop
cmp
sahf
fild
inc
xchg
stos
or
inc
popf
jmp
ja
cmp
fidivr
dec
mov
mov
push
dec
out
adc
inc
stos
cli
xor
and
add
lods
cmc
mov
sbb
mov
shl
xor
add
aaa
cli
add
xor
int3
pop
push
sub
arpl
and
movs
pushf
loopne
gs
dec
mov
popa
in
sbb
adc
cmc
shl
inc
xlat
sbb
rol
pop
and
loop
adc
in
outs
sar
adc
mov
fsubr
xchg
loop
cmp
xor
loope
mov
scas
pop
mov
jno
outs
add
loope
pushf
mov
xchg
add
stos
movs
int
adc
mov
stc
loop
leave
les
out
adc
pop
cmp
cmp
pop
push
xor
enter
inc
mov
jmp
les
push
adc
lods
in
icebp
pop
mov
dec
into
bound
aas
cmp
cmc
mov
jg
mov
push
das
xchg
xchg
dec
mov
cmp
dec
jo
and
icebp
adc
push
jns
fisub
jne
fimul
jo
je
fwait
dec
and
jecxz
xchg
call
push
mov
ins
or
add
hlt
sub
sub
and
xchg
push
lahf
ror
push
mov
jns
test
and
pop
push
mov
mov
add
jmp
pop
cmp
xchg
out
bound
inc
pusha
adc
imul
xor
mov
hlt
bound
add
data16
sub
ja
cwde
sub
xchg
(bad)
sub
dec
xchg
repz
popf
in
test
retf
shr
popf
and
cmp
(bad)
mov
mov
(bad)
iret
into
mov
cmp
cs
push
cmp
test
jo
jno
mov
dec
adc
in
sbb
jle
cmp
aad
loop
fcom
mov
and
fbstp
cmp
les
jbe
shl
inc
dec
ins
or
sbb
popw
pusha
cmp
push
mov
mov
push
lock
mov
fst
mov
dec
mov
inc
and
(bad)
push
aaa
mov
xchg
test
add
pushf
cwde
sub
stos
(bad)
push
sub
xor
and
int3
in
fbld
mov
sbb
or
xchg
xchg
fst
sub
mov
pop
cmp
xlat
aam
pop
xchg
xor
stos
leave
adc
fiadd
add
sub
add
(bad)
mov
fistp
pop
mov
push
dec
sti
xor
lods
mov
arpl
sub
push
pop
push
adc
sbb
addr16
dec
sub
movs
inc
aaa
pop
loope
iret
scas
sbb
mov
dec
aam
cmp
inc
fsub
in
add
and
retf
mov
add
xor
(bad)
adc
jb
or
inc
inc
shl
pop
jo
jmp
stos
and
aaa
pusha
cs
sbb
sbb
pop
test
sti
cmp
arpl
add
(bad)
neg
sbb
loope
fwait
shl
retf
sub
and
rcl
int3
sti
dec
(bad)
retf
xor
pop
fldenv
call
xchg
(bad)
std
stos
leave
cmp
(bad)
mov
inc
div
pop
or
popa
and
dec
mov
cld
xchg
mov
xchg
pushf
fcom
mov
dec
ret
loope
cli
in
jbe
int3
adc
lods
mov
mov
sar
sahf
test
xchg
mov
cmps
mov
es
xchg
or
mov
imul
int3
imul
cmp
xchg
pop
jecxz
(bad)
jge
test
mov
cld
xchg
inc
dec
ror
cmps
aam
enter
test
les
pop
jmp
xor
or
mov
dec
xchg
in
pusha
sti
out
std
inc
icebp
and
iret
sub
inc
out
out
mov
loop
scas
lds
sub
pop
mov
xchg
pop
sub
loop
or
mov
cmp
jmp
repnz
stos
xchg
out
sub
add
push
stos
add
in
add
lds
mov
jo
jbe
outs
pop
mov
stc
mov
cmp
stc
lock
(bad)
jg
clc
mov
cdq
mov
or
in
ins
and
adc
mov
cmp
test
(bad)
cmp
push
into
js
sub
stc
icebp
movs
les
aam
inc
sar
and
iret
inc
push
or
fimul
cwde
mov
fmul
(bad)
stc
fcom
xchg
adc
ins
and
or
cli
pop
aad
test
repz
inc
pop
int
sbb
dec
aad
sub
xor
mov
push
xor
btr
xchg
call
cmp
(bad)
popf
and
test
icebp
cmps
mov
(bad)
cld
jbe
or
pushf
daa
mov
cwde
rcl
sbb
es
sub
push
jmp
jmp
(bad)
ss
and
mov
pop
or
dec
pop
add
mov
or
retf
cdq
sbb
xor
mov
lds
push
adc
jbe
cmps
sub
jnp
mov
icebp
out
mov
pop
outs
sti
pop
rcr
call
mov
(bad)
ror
call
ffreep
pop
sub
pop
in
test
mov
adc
xchg
fwait
rcl
sub
das
mov
mov
(bad)
fadd
dec
mov
(bad)
fiadd
push
adc
stc
out
aam
and
inc
loopne
cmc
idiv
jle
call
test
mov
loopne
pusha
xchg
rep
adc
cmps
jns
sbb
jae
fcmovb
aas
add
lods
lds
int3
xchg
scas
mov
outs
xor
ins
or
call
cmp
mov
sbb
mov
aaa
hlt
pusha
cmp
stc
rcl
push
xchg
jge
sti
mov
mov
int
jnp
push
jmp
retf
cmp
lods
xchg
fsub
movs
dec
dec
enter
adc
push
cmp
shr
cmp
or
mov
cmp
xchg
mov
stos
inc
adc
fbstp
mov
and
call
sti
jp
fld
cmp
sti
xchg
lods
ss
repz
int3
data16
jg
cdq
fcomp
scas
push
adc
jg
sbb
jo
imul
xor
loopne
mov
loop
pop
jmp
es
ja
jo
jp
ss
scas
(bad)
mov
jo
xchg
dec
cmp
mov
mov
repnz
inc
es
js
test
mov
inc
cmp
mov
in
dec
xchg
pop
jne
(bad)
lahf
pmuludq
adc
xlat
ins
push
mov
or
push
adc
jb
fidivr
inc
mov
mov
xchg
loope
xor
in
push
inc
fwait
scas
jge
int3
test
int
mov
push
loop
outs
lods
mov
pop
enter
mov
add
sub
adc
xor
cwde
inc
stc
div
(bad)
pushf
mov
push
in
mov
push
out
mov
ins
cmp
xchg
jmp
fcomp
mov
pop
popf
adc
xor
in
leave
jae
fcom
es
sbb
mov
aad
ds
jns
pop
add
pop
test
inc
push
mov
cmp
sub
ins
pop
cmps
hlt
hlt
dec
dec
mov
pop
dec
ins
pop
rcl
and
mov
adc
movs
movs
movs
cmp
sub
push
inc
xlat
sub
add
or
mov
cdq
data16
out
(bad)
les
adc
stos
lock
retf
je
mov
push
pop
and
ins
dec
clc
pop
inc
and
xor
or
loope
sub
push
push
inc
jne
into
ret
or
mov
pop
cli
adc
mov
push
pop
dec
xchg
jne
call
test
cmps
(bad)
pop
adc
dec
xor
leave
pop
loopne
jo
stos
push
jg
push
mov
xor
movs
cmp
ret
sub
mov
push
xor
jmp
cmp
imul
jno
jno
mov
or
adc
push
xchg
outs
sub
into
in
repz
xchg
das
repnz
cli
lods
xor
push
jno
in
test
test
sub
mov
xor
movs
xchg
pop
out
les
shl
xchg
lods
sbb
aas
dec
sub
mov
enter
out
jge
inc
cmp
pop
imul
rcl
int3
pop
arpl
jmp
inc
adc
or
loop
adc
popa
add
mov
or
std
cmp
aas
popa
sbb
ret
cmp
test
imul
mov
stc
sub
jnp
addr16
and
aad
mov
mov
(bad)
nop
push
scas
mov
sbb
gs
das
repnz
fst
stos
fdivr
sar
dec
int3
add
adc
adc
out
jle
push
in
mov
dec
call
jbe
mov
dec
test
or
cmp
paddusb
sbb
(bad)
or
push
or
jp
into
mov
in
and
mov
icebp
fs
cs
adc
frstor
jns
in
jecxz
and
cmc
sbb
stos
fbstp
sbb
push
xchg
out
popa
nop
repnz
xchg
pop
cmp
jb
lahf
inc
sub
enter
lods
aam
pop
aaa
sar
test
jbe
outs
mov
imul
outs
repz
pusha
(bad)
sbb
gs
xchg
xchg
and
or
adc
pop
jecxz
js
adc
gs
jecxz
sub
repz
es
sub
(bad)
outs
pop
out
(bad)
jmp
out
pop
stc
mov
inc
xchg
nop
or
outs
pop
ins
adc
xchg
adc
jnp
sahf
jns
sbb
cdq
outs
sub
push
ficom
inc
cli
sub
fs
sub
popf
mov
push
mov
push
cld
mov
mov
jecxz
sbb
(bad)
dec
pop
add
sub
mov
xor
or
clc
or
mov
retf
mov
sti
je
pop
sti
lods
shl
jne
leave
jbe
dec
fisttp
(bad)
jns
cwde
xchg
push
clc
jns
add
dec
cmp
cmp
jmpw
not
ja
and
dec
pop
popa
daa
push
(bad)
faddp
outs
xchg
push
sub
dec
outs
(bad)
stos
fmul
jle
cld
lea
mov
mov
popf
or
out
push
fsubr
cmp
mov
pop
mov
jno
sbb
pop
ret
add
test
adc
mov
push
mov
mov
mov
pop
mov
outs
push
push
pop
mov
cmps
std
inc
je
iret
xor
jns
dec
mov
add
(bad)
and
dec
lods
adc
xor
fsubr
xor
xchg
push
aad
movs
jns
hlt
cli
xor
je
les
jge
jae
mov
ret
cwde
jae
jns
jb
mov
xchg
sub
int
js
push
mov
in
pop
adc
xchg
in
ret
xlat
or
dec
mov
shl
push
push
push
mov
push
sbb
mov
mov
loope
cld
mov
mov
in
and
jmp
xor
lahf
loope
neg
pop
shl
push
mov
ficom
add
xchg
icebp
lahf
nop
test
jge
into
dec
mov
pushf
jae
mov
mov
dec
adc
fnstsw
xchg
in
std
pop
add
loop
in
sub
div
adc
sub
inc
cmp
or
inc
and
and
fcom
(bad)
retf
shl
dec
cmp
mov
jg
iret
jmp
test
cdq
add
hlt
ins
xor
ret
out
lods
push
je
xchg
mov
into
(bad)
shl
jne
inc
(bad)
into
sbb
mov
jmp
mov
ret
mov
in
xlat
sub
inc
jp
lds
loop
dec
jno
cli
lods
jb
mov
sbb
inc
mov
das
sti
(bad)
xchg
or
fstp
in
dec
ja
loopne
(bad)
mov
scas
loop
adc
push
pop
or
push
sub
sbb
out
push
push
ins
fimul
ds
push
aad
cli
lahf
mov
pop
xchg
dec
xlat
movs
imul
mov
std
cmc
mov
in
push
add
pop
adc
jbe
pop
adc
dec
push
jmp
fcomi
outs
xchg
clc
std
mov
mov
call
pop
icebp
lods
sub
cmc
push
jg
jns
xchg
push
stos
test
jmp
mov
mov
out
jmp
mov
xchg
adc
inc
fmul
add
pop
cwde
mov
sar
rol
sbb
or
ret
sahf
push
js
fistp
jp
aam
mov
(bad)
sahf
jecxz
dec
lea
mov
cmc
cmp
rcl
inc
shl
jo
into
cli
or
jb
lock
adc
sti
pop
adc
mov
aad
pop
cmp
ins
mov
psrlw
cli
mov
sbb
mov
and
xor
ins
dec
jge
out
adc
cmp
stos
jno
adc
xchg
lds
shr
fimul
int3
cmp
dec
not
and
xchg
sti
mov
pushf
pop
mov
(bad)
in
add
mov
outs
mov
xor
out
(bad)
jge
out
cmps
adc
push
mov
call
xor
(bad)
in
and
or
sub
cld
push
cmp
sbb
jne
test
fidiv
mov
sbb
jp
lock
mov
push
xor
repz
jp
xchg
imul
xchg
inc
icebp
sub
xlat
rcr
jg
pop
and
rcr
xchg
or
or
pop
push
cmp
stos
(bad)
add
aaa
cmps
mov
xchg
cmp
push
movs
push
fprem
popa
adc
ss
sbb
xchg
test
mov
mov
enter
add
pop
jno
mov
retf
or
dec
jno
push
pop
into
aas
pop
mov
lods
pop
into
xchg
mov
dec
enter
mov
push
pop
or
xor
repz
div
clc
adc
add
adc
push
lahf
dec
or
inc
test
shl
ins
call
sub
xchg
repnz
pop
and
in
sar
leave
xor
stc
cmp
adc
mov
int
push
push
jbe
sub
fcom
push
fnstenv
lock
test
jb
retf
xchg
loopne
rcl
jb
out
dec
and
sub
xchg
jns
push
dec
fidivr
jne
xchg
les
outs
xchg
and
cwde
inc
ret
push
and
mov
pop
cdq
jbe
cmp
shr
push
mov
and
shl
adc
stos
out
mov
leave
ss
mov
popf
call
or
test
xchg
push
pop
jmp
cmp
adc
imul
fwait
adc
movzx
add
movs
mov
into
or
cdq
cmps
hlt
fidivr
and
push
pop
into
es
or
popa
lds
imul
and
fnstenv
push
mov
cmps
hlt
not
cmc
fs
rcr
inc
cmps
add
xchg
lods
les
push
push
sbb
adc
jg
aad
enter
cmp
lock
outs
mov
mov
lahf
dec
aam
adc
fist
loope
(bad)
adc
and
dec
adc
retf
or
mul
jle
bound
outs
xor
add
(bad)
add
cmp
adc
mov
inc
hlt
pop
ds
xchg
adc
stos
xchg
pushf
push
jae
or
push
fcom
out
pop
adc
xor
pop
xlat
adc
dec
retf
xor
iret
push
or
sahf
leave
lahf
xchg
inc
mov
sbb
xchg
aaa
sti
popa
mul
cmp
mov
idiv
push
test
xchg
mov
mov
test
or
push
push
pushf
cmps
jae
pop
dec
mov
ret
and
inc
push
enter
and
sub
(bad)
out
int3
push
ins
aas
pop
or
push
loopne
pusha
lock
call
xor
shl
jg
dec
dec
add
loopne
mov
out
pop
(bad)
repnz
or
sub
sub
xor
xchg
sub
es
in
or
xchg
sub
jnp
aad
push
fadd
rcr
sub
movs
enter
inc
dec
mov
push
ss
mov
leave
inc
imul
dec
into
jns
lea
shl
es
repnz
or
fsubr
push
mov
fsubr
or
xchg
jnp
pusha
aas
mov
add
aaa
inc
lahf
jno
xor
mov
pop
push
push
gs
cli
push
gs
dec
add
(bad)
dec
lds
inc
xchg
out
mov
mov
push
xchg
push
loop
popf
jb
mov
je
iret
mov
les
jnp
mov
pop
mov
cmp
mov
fisubr
into
dec
xchg
mov
dec
das
int3
retf
push
cs
fstp
xchg
lds
stos
fcomp
and
add
sbb
push
sbb
pop
inc
retf
outs
out
cmps
dec
in
and
jne
add
pop
mov
in
xor
jns
idiv
(bad)
push
xlat
or
or
out
aaa
jbe
fild
mov
jne
push
fist
mov
(bad)
dec
pop
hlt
arpl
cmp
or
push
push
xchg
popa
jmp
outs
cmc
clc
pop
lea
icebp
out
in
mov
sbb
scas
fnstenv
jg
stos
vunpckhps
shl
add
or
pop
aam
pop
ss
mov
retf
in
cld
pusha
leave
or
xchg
jno
imul
push
out
xchg
retf
mov
(bad)
dec
and
mov
xor
add
cld
(bad)
push
push
popf
ror
aad
mov
inc
hlt
call
inc
inc
cmp
mov
arpl
mov
push
ss
stos
movs
push
or
push
pop
sbb
test
jno
jmp
mov
lahf
xchg
pop
psllw
into
inc
add
fs
pop
lods
nop
xor
mov
lahf
jp
mov
mov
adc
push
jb
adc
int
sti
enter
mov
xchg
mov
data16
inc
add
cmps
mov
inc
mov
ficomp
sub
cmp
add
cmps
jae
retf
jnp
call
scas
mov
jp
mov
(bad)
jb
out
xor
ja
ins
sub
repz
stos
adc
inc
lods
test
push
mov
sbb
mov
sub
test
scas
mov
ins
arpl
pushf
mov
sbb
mov
jl
sbb
inc
add
mov
dec
add
pushf
xchg
xchg
clc
scas
mul
push
xor
push
dec
dec
(bad)
xor
inc
shl
mov
jns
loopne
dec
mov
xchg
inc
xor
(bad)
adc
fwait
ret
adc
mov
xchg
(bad)
loopne
rcr
fidiv
jl
cmp
(bad)
and
cmp
popa
xchg
std
rcl
or
ins
cwde
pop
nop
aam
mov
out
inc
fisubr
push
push
stc
mov
lahf
xor
sbb
jmp
rcr
add
imul
dec
xor
nop
ins
hlt
push
imul
ror
mov
sbb
rol
dec
xchg
(bad)
jle
ficomp
cmps
adc
in
adc
jno
cmc
mov
rcl
pop
lahf
das
push
add
iret
add
inc
test
sbb
push
sahf
xlat
js
xor
sti
pop
xchg
add
mov
pop
jbe
cmp
jae
ins
scas
repz
mov
mov
xlat
or
inc
js
(bad)
dec
push
mov
and
lsl
aaa
sub
(bad)
out
cmp
hlt
xchg
test
out
and
aad
in
dec
stos
dec
pop
std
ins
inc
ins
mov
and
push
inc
call
sub
(bad)
cmp
jno
mov
inc
add
add
imul
(bad)
push
xor
bound
repnz
test
xchg
scas
int
into
xlat
mov
test
xchg
es
cmp
loopne
test
sbb
ret
cmp
imul
enter
repnz
mov
pop
leave
push
mov
pop
jmp
lahf
leave
mov
popa
aam
xchg
call
js
mov
and
daa
adc
out
shr
inc
mov
add
mov
shr
mov
test
popa
add
retf
lea
movs
sub
and
mov
push
jno
gs
stos
sub
nop
ins
repz
sub
mov
sbb
push
push
pop
jg
mov
out
cmp
xchg
sub
shl
(bad)
pushf
call
(bad)
loopne
jbe
or
cmp
(bad)
jge
repnz
or
imul
cmc
cmp
adc
icebp
mov
lock
sahf
and
sbb
jmp
psubusw
aad
and
and
sub
cwde
mov
mov
sahf
or
enter
call
push
out
push
stos
ss
jnp
xchg
pop
adc
mov
jg
rcl
js
sub
xor
ror
movs
dec
xor
inc
xor
in
adc
nop
pop
jge
stc
cmps
xor
or
cmps
pop
mov
pop
mov
push
xchg
aad
push
add
cwde
xor
lock
jmp
imul
inc
ret
jbe
stos
mov
ja
or
mov
push
add
jns
mov
xor
jns
cmps
cmp
loop
push
inc
jle
jmp
mov
mov
or
dec
int3
jne
in
retf
sub
enter
xchg
xor
jne
or
cmovo
dec
repnz
(bad)
pop
adc
sar
test
and
imul
retf
push
jmp
or
popf
sub
sub
(bad)
clc
mov
retf
mov
ror
mov
sub
test
mov
daa
inc
iret
sub
aad
mov
aaa
fdivr
test
or
call
cmps
enter
adc
shr
cld
daa
mov
into
jge
fs
test
cli
push
lds
imul
pop
pusha
add
cmp
push
cs
push
add
idiv
into
stos
dec
daa
js
adc
mov
jecxz
jmp
mov
cli
outs
cmp
mov
or
jb
ins
test
cmp
mov
add
cmp
xchg
dec
addr16
jnp
push
dec
mov
sub
sub
ret
push
adc
jl
xlat
mov
adc
mov
mov
(bad)
mov
or
and
add
lock
adc
xor
inc
mov
pop
jo
mov
mov
push
ds
in
scas
loopne
ja
adc
imul
dec
sahf
or
and
addr16
outs
dec
lods
mov
xor
push
pusha
sub
xchg
add
sbb
rcr
je
fcmovnb
out
hlt
jl
xor
(bad)
call
js
dec
and
or
jbe
add
scas
cmp
or
inc
cmp
cld
lahf
fcmovbe
dec
pop
jmp
cld
mov
push
das
add
lods
add
mov
pop
jl
jecxz
in
jae
fcomp
retf
inc
(bad)
sub
movs
lahf
fidiv
dec
aaa
cwde
scas
jg
xor
movs
sbb
fsubr
in
stc
nop
je
mov
mov
mov
cli
rcr
shl
sbb
nop
push
fcomp
jle
jns
test
sbb
ds
xor
ins
inc
mov
(bad)
lea
js
cmp
mov
gs
jg
imul
jmp
adc
pop
mov
retf
add
push
enter
mov
cmp
xchg
mov
fcomp
test
push
sbb
retf
xchg
pop
push
int
xchg
add
hlt
addr16
mov
mov
outs
ins
mov
jae
add
xchg
sbb
xor
lds
and
xchg
mov
jmp
pop
retf
fld
jg
fcomp
sbb
dec
repz
mov
cmps
aam
out
pop
adc
leave
pusha
(bad)
imul
fild
out
add
das
pop
pop
fist
popa
mov
dec
nop
sahf
cdq
xor
push
xchg
jecxz
sbb
fisttp
push
jl
cmp
xchg
and
lahf
in
std
test
sbb
and
add
xchg
aaa
neg
hlt
(bad)
pop
jb
lds
jne
dec
cli
stos
popa
in
(bad)
push
jecxz
xchg
(bad)
jno
mov
push
daa
dec
int
js
(bad)
fadd
fs
fiadd
bound
pop
sbb
les
dec
fcmove
lea
inc
adc
jnp
fimul
test
aaa
int
jmp
aaa
mov
xlat
nop
mov
stc
clc
into
or
ret
inc
fwait
dec
xchg
adc
(bad)
mov
mov
xchg
or
mov
mov
jae
ins
mov
inc
lods
stos
cwde
adc
loope
mov
add
pusha
hlt
cmovne
sbb
cmps
mov
xchg
(bad)
mov
data16
sub
(bad)
push
stos
sub
sub
and
sbb
pop
stos
xor
inc
pusha
push
fldcw
inc
lea
cmp
pop
jns
in
fcomp
gs
xor
inc
pcmpeqw
dec
sbb
mov
inc
sub
adc
xor
push
lock
test
xlat
xor
lahf
aam
dec
stc
and
in
cmps
and
pop
adc
dec
jae
cmp
pop
test
retf
bound
inc
sub
nop
int3
add
xchg
sbb
jmp
mov
mov
adc
ins
xchg
repnz
mov
add
out
call
shl
popf
(bad)
inc
inc
push
cmps
mov
cli
cmps
or
push
out
inc
dec
(bad)
pop
xchg
mov
arpl
movs
inc
mov
mov
mov
cmps
call
sub
mov
xchg
add
sbb
pop
mov
dec
pushf
rol
cmp
cmp
or
out
or
lock
in
cs
pushf
pushf
cmp
pop
cmps
xlat
popf
cmp
mov
cmps
sbb
lea
(bad)
mov
(bad)
test
sar
retf
iret
sbb
add
repnz
dec
mov
cld
sbb
pop
(bad)
sbb
test
shl
xor
dec
outs
aas
fild
cmp
push
or
xchg
retf
cmp
out
test
sub
dec
js
ja
jns
adc
dec
stos
aad
fidivr
sar
and
jmp
push
fld
inc
push
add
mov
jns
dec
and
dec
mov
(bad)
pop
jns
push
cmp
xchg
cmc
arpl
aas
test
jmp
sbb
pop
ja
repnz
movs
and
inc
cmp
mov
or
sahf
jnp
ins
inc
addr16
psubq
lods
out
push
leave
xchg
repz
push
sub
mov
sbb
and
xor
dec
int
daa
(bad)
(bad)
push
shl
add
dec
mul
outs
fist
mov
jno
cmps
(bad)
add
movs
adc
push
shl
mov
inc
sbb
mov
sbb
mov
adc
mov
into
mov
in
mov
mov
add
xor
inc
fdivr
dec
std
(bad)
scas
pop
xchg
ror
out
or
dec
cmp
xchg
das
or
rcl
or
sub
js
popf
or
cmps
sti
pop
jae
dec
inc
call
cmp
adc
fcom
pop
loop
retf
out
cmp
push
adc
or
in
lds
inc
adc
dec
sbb
icebp
jl
add
mov
in
pop
cmps
out
sahf
mov
test
inc
std
outs
sub
mov
addr16
fdiv
and
add
out
dec
pop
mov
into
rcl
adc
mov
popf
jge
rcl
mov
fwait
pushf
loope
ss
adc
pop
loop
aad
sahf
inc
mov
or
fisubr
lock
aas
test
jae
stos
movs
mov
adc
jmp
and
loope
aam
jp
cmps
or
dec
cdq
xor
push
adc
scas
sbb
mov
mov
bound
outs
cmp
adc
sbb
(bad)
xchg
jo
test
lock
xor
(bad)
fistp
lock
lods
btc
pushf
dec
sahf
pusha
cmps
mov
fcom
idiv
aam
enter
jne
outs
rol
loop
xchg
dec
xor
cld
fisub
in
scas
outs
mov
ds
sub
dec
sub
xor
push
sub
in
push
add
clc
dec
xchg
pop
mov
enter
(bad)
sbb
xlat
js
cld
call
icebp
cwde
fwait
cmp
cmp
sbb
sbb
repz
in
xor
lahf
cmp
mov
inc
inc
jbe
out
inc
mov
cmc
xchg
(bad)
shl
mov
adc
scas
mov
leave
inc
repnz
sti
xchg
or
add
(bad)
test
or
xor
fdiv
push
cli
xor
dec
std
nop
scas
dec
test
push
outs
xor
jmp
stos
out
cmp
sti
imul
mov
and
sbb
push
mov
test
pushf
pop
loop
test
ret
pushf
add
or
xchg
popf
jne
test
mov
stos
xchg
inc
lea
cmps
sbb
cmp
jnp
dec
shr
in
lahf
sahf
and
lods
data16
ja
retf
ins
mov
mov
test
outs
sub
sub
test
or
ja
rcr
sbb
call
addr16
loop
or
cmp
xchg
dec
jp
das
push
(bad)
push
ds
(bad)
cmp
sub
int
addr16
hlt
or
pop
jae
mov
movs
movs
out
xchg
mov
daa
adc
and
std
cs
gs
jnp
lea
jle
loope
mov
sahf
sbb
fmulp
pusha
add
adc
jmp
jbe
xchg
test
sbb
or
xchg
and
push
movs
call
or
mov
loopne
mov
pop
mov
fwait
in
sub
sub
inc
imul
pop
inc
hlt
add
ins
pop
mov
out
or
adc
lods
leave
fbstp
movs
in
lock
mov
cmp
idiv
lods
add
fs
adc
sahf
ror
dec
ss
pop
jmp
jl
shr
lods
je
and
sbb
push
iret
jg
or
leave
jbe
fcom
in
cdq
rcr
dec
mov
sbb
inc
sub
mov
push
js
xchg
pushw
mov
mov
jmp
mov
ffreep
out
rol
adc
mov
(bad)
aaa
fldcw
popf
mov
push
sub
mov
rol
push
cmp
out
test
call
ss
sbb
call
(bad)
clc
jo
add
mov
int3
(bad)
fmul
push
ss
int3
mov
jl
fnstenv
cld
xchg
mov
pop
ins
pop
sub
sbb
addr16
sub
cmp
push
shl
gs
adc
sbb
push
xor
fwait
xlat
fisttp
push
sub
fmulp
cmp
pop
fs
push
and
sbb
mov
xchg
hlt
adc
mov
lock
test
out
add
cld
aaa
adc
push
pop
outs
shr
cmp
ja
int3
sub
movs
std
fwait
test
adc
out
adc
pop
mov
mov
xchg
pop
jmp
add
aad
push
and
(bad)
push
mov
cmp
out
jle
cmp
stc
add
xor
cmps
adc
je
lods
push
mov
mov
test
sbb
lea
pop
and
xchg
push
aad
out
xchg
push
into
xchg
leave
lds
fsub
or
out
imul
lods
add
add
sub
pop
jmp
(bad)
mov
lds
jo
pop
and
push
out
xor
mov
inc
jl
jge
imul
imul
push
imul
mov
lods
sbb
jge
pushf
das
adc
add
jle
test
fs
dec
pop
idiv
rcl
rcr
loopne
test
repz
bound
jg
stos
jg
lods
or
cs
fisttp
(bad)
scas
ret
sbb
ja
leave
jge
leave
mov
test
in
fcmovne
stc
(bad)
aas
mov
cmp
retf
sub
pop
call
lods
retf
fst
jbe
xchg
ins
sub
movs
ret
rcr
fstp
fidiv
mov
and
add
xlat
or
test
and
in
(bad)
fldcw
neg
xchg
mov
int3
mov
pop
repnz
xor
mov
pop
shl
mov
mov
xor
or
pop
inc
cmps
(bad)
push
rcl
outs
fisub
mov
(bad)
cmp
adc
jns
dec
xlat
jmp
xor
fiadd
(bad)
mov
sbb
mov
std
pop
rol
(bad)
(bad)
mov
in
cli
mov
jmp
push
rcl
jp
ror
adc
fisub
add
loopne
mov
cmp
dec
jno
or
inc
adc
out
sub
and
ds
cmp
xchg
fs
or
ins
or
mov
inc
inc
(bad)
jae
pop
inc
es
add
inc
cmc
xor
(bad)
mov
cmps
inc
dec
cmove
test
cmp
and
test
and
out
fldcw
aam
pop
jnp
scas
mov
retf
test
js
lods
sahf
mov
into
adc
mov
push
sub
loop
cld
sub
or
jle
xor
and
pop
mov
into
cmp
sub
ins
xor
mov
pusha
mov
push
loopne
pop
das
add
mov
ret
movs
int3
and
xor
adc
dec
and
mov
ror
sbb
cmps
dec
outs
mov
ret
add
push
sbb
adc
mul
ffreep
push
into
les
push
pop
adc
sbb
imul
imul
test
pop
jb
add
pop
fs
fsub
adc
lods
mov
mov
enter
mov
in
les
in
mov
scas
mov
fisttp
mov
enter
shl
outs
xlat
adc
shl
sbb
mov
fldcw
jbe
xor
mov
jns
mov
xor
mov
cmp
mul
xchg
sbb
out
or
fcmovnu
inc
cmp
scas
cmp
ja
gs
mov
mov
cmp
arpl
jle
push
add
aas
jae
xchg
adc
add
call
or
sahf
sbb
sub
or
shl
sbb
xor
(bad)
in
xchg
pop
or
aaa
xchg
stos
mov
out
cmps
in
dec
pop
(bad)
test
sub
and
pop
dec
dec
jmp
adc
les
xchg
pusha
dec
shr
sub
mov
js
mov
mov
sub
mov
sti
or
stos
scas
ins
mov
jg
jg
fisub
cmp
cdq
aam
stos
sub
cmp
daa
inc
in
xchg
std
fcomp
enter
cmp
in
push
loopne
pusha
fsubrp
ret
xchg
dec
movs
sub
push
hlt
leave
mov
loop
pop
mov
cs
rol
mov
mov
add
pop
push
xor
ror
(bad)
pop
ud1
xor
scas
xchg
or
ret
ret
dec
ins
sub
ficom
pop
and
adc
push
xor
add
mov
ds
cs
mov
jno
in
dec
jo
sub
sti
push
add
add
cmps
mov
xor
lods
ja
dec
xchg
cmps
sti
js
lods
loop
ret
in
jmp
lods
xchg
dec
push
add
test
jnp
add
in
push
hlt
hlt
and
test
sub
or
cdq
ret
and
sub
stos
mov
pop
cmps
inc
(bad)
mov
in
sbb
movs
mov
mov
addr16
xchg
or
test
sahf
cmp
cmp
cwde
lahf
pop
ret
jns
or
mov
and
mov
and
shr
sbb
mov
cmp
loope
cmp
sub
pushf
or
xchg
out
cmc
mov
xor
push
push
cmp
mov
push
mov
out
fcomp
cmps
stos
sub
(bad)
mov
fidiv
mov
aaa
(bad)
es
mov
fidivr
in
fld
mov
(bad)
mov
mov
pop
pop
data16
sub
sbb
lahf
jae
jb
cld
lock
pop
cs
jp
dec
mov
mov
cmp
jns
lods
dec
cmp
sbb
shl
sar
push
pushf
es
mov
(bad)
daa
and
xlat
or
xor
mov
test
ss
inc
test
ins
dec
fwait
dec
xchg
mov
lds
or
mov
mov
call
cli
out
adc
fdiv
repnz
and
adc
mov
xlat
(bad)
jno
jg
stos
or
inc
and
jmp
dec
ins
pop
std
xchg
mov
mov
stos
cld
mov
sub
sbb
mov
cmp
test
call
into
not
xchg
xor
test
inc
jne
xchg
sahf
jmp
and
sahf
mov
lock
(bad)
repz
fsubr
xchg
or
sub
fwait
jmp
mov
out
inc
push
out
mov
(bad)
hlt
mov
sbb
loop
outs
mov
mov
in
adc
cmp
xchg
mov
sahf
xor
dec
sar
jmp
adc
jge
shl
pop
adc
or
inc
test
nop
cmc
pop
movs
repnz
xchg
fcomp
mov
cmp
cdq
push
inc
mov
push
icebp
(bad)
cmp
sub
sbb
mov
repnz
test
js
mov
sub
push
add
loopne
jle
ret
rcl
lock
cmp
or
inc
int3
dec
pop
test
jecxz
push
adc
pusha
stc
sbb
mov
(bad)
jmp
les
(bad)
pop
xor
(bad)
xchg
push
pop
inc
imul
out
push
pop
mov
and
into
dec
ins
rol
inc
push
es
scas
mov
(bad)
icebp
leave
in
pushf
push
xor
mul
ds
ret
icebp
inc
jecxz
rol
push
adc
pop
adc
dec
dec
fs
js
repnz
rcr
cwde
adc
xchg
pop
ret
xchg
or
aad
into
nop
outs
jns
sbb
inc
arpl
lods
cld
std
xor
inc
sbb
aas
sub
cmps
sahf
dec
fcmovne
sub
aam
xor
scas
ss
(bad)
lahf
fucomi
lods
and
out
aas
fsub
pop
(bad)
je
shl
push
sub
push
push
sahf
ret
test
xchg
and
ins
stc
pop
inc
mov
jg
jne
sar
and
into
popf
inc
pop
test
ins
pop
mov
shr
enter
sub
mov
and
sbb
mov
out
xor
div
cli
(bad)
loop
test
adc
ins
push
fst
mov
or
inc
push
stc
add
pop
test
add
fld
inc
cmp
jae
sub
leave
stos
push
pop
loope
push
jge
loope
test
test
sub
imul
mov
xchg
es
shl
pushf
add
int
es
sbb
fist
fadd
push
dec
outs
pop
shr
xchg
fsub
rcr
dec
mov
xor
ss
cwde
xchg
into
mov
mov
jb
test
pop
dec
out
lock
int
inc
jg
fild
test
in
loop
mov
push
adc
iret
mov
lock
pusha
push
mov
xchg
or
enter
test
dec
scas
pushf
sub
xchg
das
pop
shl
or
or
pop
(bad)
mov
ret
mov
adc
dec
xchg
push
movs
push
add
js
mov
test
xor
inc
mul
mov
loopne
pop
in
or
cwde
mov
outs
or
cmp
ja
cld
loopne
cdq
push
jae
imul
xlat
retf
jbe
sbb
in
mov
xlat
(bad)
xchg
imul
(bad)
jp
movs
push
rcl
mov
inc
dec
adc
add
mov
sub
mov
mov
cmp
daa
add
pop
in
pop
ins
add
push
das
sub
loop
aad
repz
jge
inc
add
mov
sub
lahf
xor
jmp
iret
in
mov
in
inc
arpl
in
popf
call
inc
fcom
xor
fnstenv
push
dec
sbb
hlt
mov
mov
mov
popf
xchg
pop
mov
xor
adc
inc
push
lds
sbb
adc
cmp
bnd
sbb
scas
and
pushf
(bad)
push
sub
dec
mov
inc
fbstp
sub
sti
cdq
vpsubw
iret
in
mov
int
cmp
cli
pop
mov
mov
mov
test
push
test
sub
push
mov
mov
std
daa
and
jo
int
cli
inc
fadd
jecxz
sub
mov
addr16
dec
les
xchg
mov
pop
mov
inc
cld
je
mov
rcl
jmp
pop
push
enter
rcl
pushf
shl
outs
mov
fcmovbe
or
xchg
imul
pop
cmp
adc
cli
jae
mov
push
sar
xor
adc
add
mov
mov
and
jb
movs
cmc
cdq
sub
outs
icebp
repz
enter
xchg
in
fistp
add
dec
es
sbb
(bad)
fwait
dec
sbb
aam
push
push
mov
idiv
stos
inc
or
pop
dec
shl
mov
retf
pop
xor
hlt
lds
aaa
mov
jl
mov
xor
call
pop
jecxz
icebp
or
rol
(bad)
fwait
sbb
rol
stos
xchg
dec
or
mov
mov
mov
push
add
or
scas
push
cmp
and
dec
out
jp
clc
mov
sbb
pop
xor
add
xchg
stc
jge
das
pop
xchg
ret
rcl
push
ins
xchg
push
push
pop
jo
in
mov
cmp
les
loopne
add
inc
jns
sub
fmul
push
loope
jle
lds
sub
adc
fs
cmp
loopne
pop
sbb
hlt
adc
add
fld
(bad)
cmp
sub
jg
or
jnp
dec
sbb
call
pop
(bad)
call
xor
cmps
sub
inc
test
call
pop
cmp
in
add
dec
mov
mov
dec
pop
fld
sahf
mov
sbb
inc
mov
adc
or
nop
mov
pop
clc
jbe
gs
test
mov
adc
mov
outs
push
pop
mov
push
cmp
aam
sti
add
test
cmp
sub
in
add
mov
sar
stos
push
repnz
ds
test
add
mov
mov
cmp
mov
xor
lock
aaa
mov
fst
imul
pop
(bad)
fimul
sahf
mov
inc
enter
in
cdq
test
loope
enter
jecxz
aaa
xor
shl
inc
sub
popa
xor
xor
mov
add
(bad)
add
or
test
(bad)
lock
push
or
cmc
mov
ss
inc
jl
xor
sbb
ins
sub
daa
cli
cmp
dec
mov
mov
ror
les
dec
xchg
xchg
xchg
lods
jne
aam
mov
add
sti
pop
xchg
inc
stos
xchg
loop
repnz
cmps
sbb
outs
inc
add
fnsave
xchg
js
loopne
add
nop
cli
ret
mov
mov
frstor
loopne
jle
ins
stc
fsubr
mov
popa
inc
adc
movs
push
or
(bad)
fadd
(bad)
mov
mov
sub
add
pop
inc
fs
data16
call
cmp
fnop
lahf
icebp
int
inc
loopne
add
es
add
je
arpl
arpl
scas
data16
enter
cdq
push
cs
mov
pop
cmp
int
push
push
adc
out
xor
inc
pop
rcr
aaa
dec
fcomp
xchg
inc
dec
ror
call
jae
jmp
ins
aaa
and
dec
lods
add
iret
jmp
xchg
xchg
mov
mov
sub
sbb
push
shl
dec
in
adc
(bad)
hlt
daa
lock
(bad)
xor
inc
sar
or
enter
pop
push
xlat
fadd
scas
sub
or
dec
inc
cmps
div
mov
mov
cmps
cli
inc
ret
mov
arpl
jb
es
mov
stos
and
xchg
hlt
retf
cmp
dec
hlt
rcl
jecxz
je
push
(bad)
jb
xchg
mov
mov
jg
enter
xchg
fs
xor
sub
xchg
clc
aam
mov
sahf
out
mov
movs
adc
test
fldcw
fmul
cmps
jp
in
test
popa
sub
aad
sbb
mov
call
js
es
pushf
js
rcl
bound
push
ja
sar
std
xchg
push
sbb
stos
and
push
sub
mov
icebp
in
inc
cmps
pop
dec
call
cmp
pushf
out
jecxz
data16
mov
add
scas
mov
xor
push
add
add
daa
add
add
adc
adc
loop
dec
ja
jp
rcr
jg
push
les
dec
pusha
scas
mov
jecxz
(bad)
(bad)
sub
push
(bad)
mov
fmul
inc
pop
mov
mov
aas
arpl
mov
in
hlt
inc
repz
jae
scas
nop
outs
and
aas
dec
pop
mov
lea
pop
jbe
mov
enter
lods
mov
je
pop
lods
(bad)
shr
les
xchg
adc
cmps
js
and
push
inc
push
mov
inc
nop
nop
bound
ret
mov
out
dec
rcl
or
leave
arpl
in
sbb
or
loop
push
and
mov
pop
jno
cmp
mov
mov
dec
leave
outs
retf
lahf
iret
dec
mov
xor
mov
ss
cs
jbe
(bad)
dec
jle
sub
in
ds
push
sbb
mov
pop
sbb
js
imul
mov
(bad)
mov
std
in
repnz
xchg
add
sbb
or
cli
jle
mov
repz
mov
pushf
xchg
pop
inc
push
cld
stos
xchg
ja
cmp
jae
retf
jge
xlat
adc
lahf
ds
out
jbe
or
adc
push
push
pop
scas
sbb
ret
mov
popf
pop
into
loope
cmp
mov
hlt
loope
xchg
sub
(bad)
pop
adc
mov
jnp
je
in
repnz
call
lods
lahf
mov
mov
sub
push
std
jb
mov
test
(bad)
aam
(bad)
jecxz
cmp
imul
sti
and
inc
in
mov
cmp
xchg
add
shr
push
jnp
push
push
bound
and
push
mov
(bad)
or
adc
and
pusha
fisubr
jb
mov
xor
xor
adc
scas
pop
popa
int
cmp
les
scas
int
test
sub
cmps
adc
gs
cdq
pop
pop
jb
jg
sbb
mov
movs
add
xor
cmps
int3
scas
addr16
imul
mov
or
jp
in
test
(bad)
push
outs
test
stc
mov
push
xchg
dec
xchg
into
adc
cwde
sub
cmp
fstp
clc
mov
cld
fsub
in
pop
or
or
mov
rcr
adc
push
mov
and
jp
xlat
xchg
push
jecxz
fmul
aad
ds
imul
lock
xor
nop
mov
sub
jg
ret
pop
ret
inc
bound
adc
mov
ret
nop
mov
pop
jle
jmp
sbb
cmps
not
xor
call
dec
xchg
cwde
in
mov
and
jns
into
cdq
in
jb
sub
(bad)
call
cwde
jge
mov
rol
cmp
daa
mov
and
mov
(bad)
and
mov
or
adc
in
add
sbb
jle
inc
fdivp
inc
xor
cdq
aad
inc
sub
mov
pop
dec
enter
adc
popf
test
test
idiv
and
pushf
inc
clc
push
shr
cld
fdivr
or
dec
mov
push
pop
lea
leave
or
inc
das
jne
rol
out
or
int
inc
leave
add
mov
adc
mov
xor
aad
jo
cmp
cmp
mov
jl
test
sub
push
in
xchg
sahf
fdivr
or
xchg
or
nop
mov
and
and
cmp
and
loopne
xchg
movs
imul
retf
popa
rcl
add
and
ror
add
lahf
ja
inc
out
gs
xchg
pop
jne
retf
test
push
mov
call
mov
push
ss
push
xor
(bad)
ja
inc
cdq
or
sbb
fldenv
adc
test
push
cmp
push
pop
pop
fisttp
clc
cmps
mov
imul
dec
shl
jmp
leave
mov
ja
add
outs
xlat
pop
fnsave
jae
add
sub
fldcw
loopne
adc
out
mov
add
cli
cdq
cld
push
xchg
lea
xchg
adc
mov
cwde
nop
icebp
cmpxchg
jae
hlt
imul
and
inc
fdivr
je
jp
push
xlat
daa
fcmove
lea
aam
es
call
ret
jge
inc
xchg
pop
iret
aas
(bad)
leave
xchg
sub
push
dec
inc
push
fst
sar
mov
lods
test
movs
std
sbb
rcl
xor
test
test
jp
pop
add
sbb
lock
out
xchg
pusha
cmp
jmp
test
cld
push
push
in
imul
add
mov
out
and
push
xor
(bad)
lods
push
pop
in
movs
inc
cmp
into
icebp
lods
push
xor
cdq
lea
push
clc
or
popf
pop
in
lds
mov
pusha
mov
fld
bnd
cs
or
xchg
(bad)
mov
mov
fs
ds
sahf
fsub
mov
mov
dec
fs
ret
mov
fdivr
mov
inc
sbb
and
mov
imul
jle
jle
hlt
jb
ins
outs
xchg
cmps
xor
or
push
xlat
push
mov
popa
adc
adc
jecxz
data16
push
mov
jp
jecxz
dec
jmp
ret
hlt
cmp
mov
add
mov
jno
js
dec
outs
adc
push
leave
sub
retf
cmp
or
js
mov
mov
ins
int
retf
fwait
lock
mov
in
xor
fadd
push
inc
(bad)
sahf
mov
jp
adc
cmp
push
icebp
sub
in
je
outs
mov
inc
cli
nop
jae
push
hlt
mov
mov
fcmovnu
sar
dec
fmulp
jmp
dec
mov
outs
loop
repnz
(bad)
jg
retf
pop
xchg
sahf
sbb
(bad)
fstp
push
jns
jmp
sub
push
inc
test
jno
cwde
pop
movs
jmp
jbe
aad
or
test
or
push
sbb
pop
sub
pop
(bad)
stc
jge
cmps
dec
(bad)
in
sbb
std
imul
outs
pusha
jae
push
mov
sbb
mov
sbb
xchg
push
in
dec
jmp
adc
fbstp
shr
mov
stc
pusha
dec
repnz
mov
mov
and
aas
jmp
and
sbb
scas
pop
jno
mov
push
pop
test
pop
not
jbe
out
adc
mov
xchg
fisubr
push
push
scas
gs
dec
fldcw
out
js
mov
pop
mov
xlat
cs
popf
lods
push
xchg
icebp
push
out
repnz
pushf
mov
repz
les
call
push
cmp
xchg
test
and
fisub
pop
pmaxsw
push
and
cmc
retf
test
xor
call
cmps
adc
mov
imul
adc
sbb
cmps
fstp
sar
adc
pop
dec
mov
pop
cmps
mov
jmp
mov
or
pop
xor
inc
or
fcomp
mov
outs
push
scas
and
and
out
movs
push
sub
stos
xchg
aam
in
push
dec
dec
mov
inc
fisttp
imul
rcr
xchg
fcomp
(bad)
jecxz
add
xchg
cmps
push
cmp
popa
out
clc
inc
(bad)
iret
imul
jl
sub
jae
fild
adc
xchg
inc
push
dec
sbb
xchg
push
xchg
mov
stos
(bad)
inc
out
(bad)
and
scas
gs
shl
dec
ficomp
pop
dec
sbb
push
xchg
or
imul
push
adc
mov
xchg
(bad)
cli
jae
sbb
dec
cmp
mov
mov
push
jmp
cmp
fwait
jp
es
push
xchg
in
es
rep
loop
lahf
add
sbb
outs
cdq
pop
adc
sub
push
cld
shr
fisubr
scas
xor
cmps
loopne
cmp
dec
popf
pop
jle
fmul
jne
mov
push
js
cmp
or
push
push
movs
xchg
dec
cmp
and
xor
xchg
sbb
(bad)
retf
fmul
and
ja
or
loopne
fist
es
adc
hlt
and
add
rcl
mov
clc
cld
jo
lock
cmp
das
(bad)
aam
loopne
js
das
push
mov
xchg
dec
mov
repz
cld
int
jg
(bad)
pop
inc
hlt
loop
scas
pop
mov
movs
inc
mov
or
pusha
push
add
add
push
test
jne
lods
fcomp
cmps
pop
or
pop
push
in
mov
leave
xor
nop
test
or
test
les
inc
sbb
rcr
sbb
lds
pop
(bad)
mov
jns
inc
ins
bound
pop
adc
xchg
cmc
out
out
mov
ret
cld
inc
mov
mov
mov
mov
std
cmp
add
cmp
sbb
lock
jp
sbb
or
inc
mov
adc
(bad)
shl
repnz
stc
sbb
inc
loope
stos
xchg
test
movs
fwait
sti
pop
fild
push
fcomp
test
shr
js
inc
clc
mov
sub
jp
and
or
and
jmp
mov
dec
inc
fucomi
or
inc
xlat
inc
cmp
inc
or
stos
cmp
sub
lods
dec
imul
(bad)
(bad)
sbb
rcl
jg
dec
or
stc
mov
aas
retf
push
and
stos
inc
pop
cmps
add
icebp
xchg
adc
aaa
dec
mov
es
mov
adc
push
sub
retf
test
stc
or
daa
xchg
jle
adc
sar
ins
dec
rol
inc
or
mov
das
push
ret
dec
cmp
mov
das
sbb
push
das
add
or
bnd
pop
(bad)
ficomp
in
jl
dec
outs
mov
scas
dec
sub
fsub
mov
dec
xor
mov
jae
sub
mov
sub
sub
ja
shr
sahf
jle
jns
ds
das
sub
jae
mov
push
mov
pop
das
das
aam
mov
cdq
fdiv
push
aas
pop
push
xchg
xchg
push
idiv
movs
push
out
inc
sbb
mov
push
rol
xor
xchg
inc
inc
fisub
cmps
jge
sub
cwde
and
or
adc
stos
shr
jbe
add
cmps
inc
push
pop
or
or
add
ss
pushf
xchg
imul
sbb
outs
aaa
test
pop
stos
and
jns
xchg
pop
fs
(bad)
sub
jo
pusha
fwait
shl
xchg
nop
sub
push
xor
lds
mov
stos
repnz
mov
int
rol
int3
(bad)
xor
jmp
jmp
fld
test
add
dec
test
(bad)
pusha
int3
test
jo
inc
push
fistp
dec
icebp
mov
push
pop
mov
push
and
push
sbb
mov
test
dec
and
mov
sub
jo
sub
into
xor
add
inc
aaa
call
or
add
dec
aas
cmp
mov
push
inc
and
add
xchg
test
mov
pop
jb
outs
dec
in
shl
fadd
xlat
cmc
popa
pop
ret
ret
or
hlt
stc
pushf
push
jl
test
(bad)
sbb
fwait
pushf
cmps
pop
mov
cmp
jp
xor
inc
inc
mov
inc
imul
cmps
inc
xlat
dec
clc
mov
xchg
mov
pop
(bad)
lods
cmps
fst
push
mov
ins
cmps
sub
inc
cmp
inc
cmp
jns
sbb
aas
mov
fnstenv
shr
xor
nop
stos
pop
xchg
and
stos
xchg
cmp
inc
sbb
cmp
jns
scas
or
sub
shl
fs
add
dec
test
jge
in
test
adc
imul
es
sub
dec
jae
mov
(bad)
sti
mov
jecxz
mov
mov
aam
test
in
and
sub
cmc
fnstenv
mov
jl
xchg
dec
mov
or
sub
dec
push
in
mov
and
sar
jno
jno
neg
dec
jecxz
mov
sahf
sbb
ja
scas
(bad)
pop
aaa
aam
jb
adc
addr16
sub
jbe
into
pop
adc
add
loopne
push
popf
fistp
jo
fisub
ficom
es
mov
xor
fwait
mov
xor
adc
dec
xchg
mov
xchg
cli
dec
xor
outs
fidivr
scas
daa
mov
xor
shl
adc
xchg
lods
fist
fstp
retf
out
fsubr
dec
push
movs
and
shr
or
xor
mov
sar
sti
fld
fidiv
das
out
and
mov
lock
(bad)
and
ret
mov
sub
ficom
adc
retf
dec
or
pop
(bad)
sub
ss
jecxz
mov
leave
or
add
shr
(bad)
stc
jl
and
adc
inc
call
jecxz
sub
loopne
(bad)
inc
mov
jno
idiv
jl
call
stos
xchg
mov
push
out
test
mov
jge
es
iret
outs
push
cmc
and
mov
fldenv
addr16
lds
sbb
mov
add
add
sbb
xchg
repnz
jnp
jno
neg
daa
push
and
adc
imul
mov
inc
pop
ins
fnstsw
clc
int3
ins
cdq
gs
xchg
cwde
mov
fld
iret
push
bound
imul
frstor
fwait
mov
les
(bad)
rol
aam
jl
pop
push
shl
inc
rol
arpl
daa
movs
adc
ret
xchg
xor
test
outs
sti
jmp
pop
pusha
pop
sbb
xchg
mov
xlat
in
adc
add
in
rcl
ret
cmp
cli
jns
sub
outs
shr
cwde
call
cmp
mov
ds
shl
jp
add
ret
nop
hlt
mov
dec
pop
out
pushf
mov
fldenv
or
jmp
xor
cmps
mov
mov
cli
xor
call
xchg
int3
(bad)
sub
mov
push
adc
dec
adc
pop
cmp
cmp
inc
sub
xchg
cmp
fistp
sub
pop
sar
ja
shl
and
pop
(bad)
cld
xchg
sbb
push
add
jle
xor
mov
dec
loope
push
or
les
mov
sub
and
mov
inc
sub
shr
pop
sub
dec
imul
lods
in
add
shl
in
dec
adc
push
push
popa
cmp
daa
call
in
mov
repnz
mov
push
mov
add
jnp
cdq
mov
mov
cmc
jp
ss
push
hlt
mov
jne
and
sbb
xchg
gs
mov
inc
outs
test
hlt
adc
mov
fidivr
mov
mov
mov
pusha
cmp
retf
dec
push
dec
test
out
mov
cmp
inc
pop
jns
imul
pop
shr
punpckhdq
push
lea
es
popa
add
retf
out
iret
xor
and
sbb
sti
in
cmc
xor
out
scas
mov
sahf
lea
inc
push
cmp
mov
outs
lahf
cwde
shl
inc
scas
fucomip
ja
mov
add
push
fldcw
mov
(bad)
push
test
mov
mov
push
outs
jbe
data16
ss
jp
or
es
sahf
xchg
xor
dec
or
push
xor
mov
fistp
retf
cmp
ja
cmps
xlat
movs
add
push
dec
sbb
imul
push
jmp
fst
lea
idiv
stos
jg
aaa
shl
call
adc
ja
stc
jl
fld
pop
push
push
sahf
ror
push
mov
mov
jl
sbb
cld
test
in
push
mov
pop
push
sub
add
outs
xlat
jb
adc
push
cwde
bound
aad
scas
clc
pop
xchg
sbb
ficomp
icebp
mov
pop
inc
outs
push
adc
rcr
rcl
dec
add
dec
mov
xchg
push
mov
fcomp
xchg
cdq
xchg
aam
cmc
gs
mov
xchg
movs
xor
push
pop
cld
xor
pop
retf
push
dec
jecxz
dec
lods
pop
mov
dec
loop
push
lock
fstp
je
cmc
push
cwde
sub
and
jg
dec
add
mov
mov
push
push
int3
push
imul
das
mov
mov
add
add
(bad)
pop
mov
loopne
and
mov
in
clc
mov
jge
loop
out
rcr
gs
in
cdq
xor
int
imul
inc
cmp
push
test
ret
xlat
mov
mov
or
cmp
and
mov
dec
call
(bad)
nop
pop
xchg
inc
iret
sub
or
aas
jne
hlt
mov
sub
push
imul
jmp
or
xor
xchg
xor
jno
sbb
push
jbe
jns
test
into
push
cli
pop
jle
push
stc
sahf
(bad)
jmp
jge
nop
stc
dec
mov
pop
add
sbb
cli
jecxz
mov
mov
mov
aas
es
jno
arpl
scas
sub
arpl
rcl
add
loope
nop
inc
test
(bad)
icebp
push
loopne
and
xchg
cwde
and
sbb
mov
mov
xlat
fimul
mov
xchg
retf
inc
les
call
push
jp
push
sbb
pop
ret
mov
sub
repz
mov
pop
mov
(bad)
jecxz
sahf
imul
pusha
mov
xchg
mov
xor
repz
in
aad
retf
push
mov
mov
xchg
mov
mov
fimul
(bad)
mov
cli
std
enter
test
xchg
stos
cmp
fcomp
es
mov
out
inc
stos
sub
jo
inc
scas
sub
shl
ins
mov
adc
dec
mov
loope
fs
ds
neg
mov
sub
dec
sti
loop
fs
repz
lock
xor
popa
jbe
sub
mov
imul
fiadd
cmps
ds
rcr
xor
cld
ss
push
or
and
xchg
push
jne
mov
pop
mov
mov
sbb
add
or
dec
adc
clc
das
cmp
retf
jmp
cmps
pusha
cmp
xchg
and
inc
rcl
inc
out
cmc
cmp
sub
pop
fs
mov
adc
in
pop
in
cmps
sbb
xlat
xchg
repz
les
ja
sub
addr16
inc
mov
fstp
js
es
push
fdivr
mov
sbb
fild
aad
xchg
lods
neg
or
push
pop
lods
outs
sub
lds
jmp
movs
cmp
ja
retf
mul
mov
pop
div
sub
dec
(bad)
fsubr
push
icebp
mov
jmp
jns
loope
pop
xlat
adc
push
xor
sub
xor
out
cmp
shl
add
xchg
cmp
and
int3
hlt
jbe
fstp
lds
test
les
or
mov
pop
jb
and
lea
fs
adc
add
push
mov
mov
shl
out
mov
bound
mov
fs
push
cmp
sbb
imul
or
jle
sbb
jmp
clc
jne
test
jl
gs
stos
sahf
inc
sbb
enter
scas
rol
push
jnp
(bad)
test
ror
fstp
sti
push
jp
jmp
fcom
push
and
mov
sbb
add
and
shl
lea
cmp
push
adc
call
shr
pop
pop
or
fs
stc
xchg
nop
jo
add
sub
addr16
dec
mov
mov
adc
sbb
push
out
scas
pop
stc
out
push
cdq
imul
data16
cwde
mov
aaa
mov
xlat
retf
popa
(bad)
mov
fcmovbe
xchg
inc
test
push
push
mov
enter
ins
adc
aas
mov
nop
fmulp
inc
mov
push
jge
adc
sub
pushf
std
jmp
fistp
pushf
repz
or
shl
(bad)
sub
call
jle
adc
es
movs
mov
or
(bad)
inc
mov
lds
cmp
pop
and
out
push
mov
imul
jbe
popa
xchg
pusha
rsm
adc
popa
jge
jle
and
inc
jmp
cmp
test
jo
jg
cmp
(bad)
jnp
neg
imul
xor
mov
and
and
imul
push
push
call
cmp
add
cmc
(bad)
es
push
lss
mov
shl
jp
sar
xchg
cmps
inc
pop
stc
inc
test
jp
sahf
sbb
jge
sbb
lods
xor
ja
pushf
(bad)
repnz
mov
pop
retf
(bad)
jle
out
push
jnp
(bad)
push
mov
pop
(bad)
in
xor
out
daa
jbe
ret
add
mov
data16
and
mov
push
(bad)
retf
or
jne
mov
call
sti
in
rcr
outs
addr16
mov
pushf
cli
arpl
(bad)
clc
xchg
push
fs
leave
out
or
fcomi
scas
in
xor
cmp
clc
int
sbb
test
mov
test
add
add
(bad)
xor
icebp
call
cmps
cmps
jl
or
sub
repnz
jecxz
jno
pop
int
mov
fiadd
sbb
out
nop
popa
pop
mov
push
sub
(bad)
nop
arpl
cmps
add
xor
cmp
or
stos
jns
(bad)
lahf
mov
test
jne
mul
or
addr16
nop
mov
ins
das
mov
adc
mov
das
inc
jno
cld
pop
xor
xor
or
pop
fistp
iret
dec
jns
mov
cmps
dec
movs
mov
sub
imul
and
jle
je
icebp
xchg
out
fisubr
push
mov
iret
cmps
movs
jmp
cmp
adc
cwde
mov
dec
sbb
dec
push
pop
mov
ins
cmps
stos
dec
or
imul
inc
dec
sbb
rcr
stos
in
ja
xor
mov
push
jmp
pusha
ds
mov
gs
int
dec
rep
ror
nop
call
and
xchg
int3
inc
xor
mov
cwde
ds
arpl
neg
fist
jae
movs
mov
inc
pushf
sbb
sbb
lods
mov
(bad)
retf
inc
push
push
fld
paddw
jle
xor
mov
shr
push
add
out
enter
add
cmp
fs
cmp
es
clc
jp
call
dec
cmc
mov
ins
clc
repz
imul
inc
adc
leave
sbb
mov
xor
add
cmp
dec
cmp
scas
inc
cmp
and
xor
retf
cwde
div
push
int
jmp
jae
mov
(bad)
add
and
fwait
cld
add
cmp
mov
mov
shl
mov
sbb
mov
sbb
mov
jnp
sub
push
cmp
fimul
mov
mov
fdivrp
xor
xchg
nop
xchg
shl
arpl
int
dec
cmp
dec
jnp
in
hlt
es
or
js
inc
sbb
xchg
lods
and
dec
adc
pop
loope
out
sbb
sub
scas
and
push
addr16
scas
shr
mov
and
mov
mov
dec
stc
pop
(bad)
inc
ins
or
sbb
js
or
inc
fnstsw
xchg
std
lahf
xchg
xchg
inc
pop
inc
inc
mov
loopne
clc
retf
les
mov
lods
inc
mov
ins
jp
je
cmp
ins
mov
mov
out
movs
sbb
popa
and
cmp
sbb
cmp
stos
push
dec
adc
arpl
test
dec
fist
ss
int3
shr
ret
inc
mov
xchg
ficom
jl
out
ror
xchg
test
mov
(bad)
iret
add
mov
push
jg
leave
fisttp
test
lahf
jp
out
(bad)
or
xlat
in
jb
test
movs
test
into
data16
cmp
mov
sbb
or
push
dec
or
ins
adc
inc
push
xor
push
ins
arpl
mov
mov
jge
out
mov
out
mov
pop
jge
lea
mov
jo
inc
inc
ja
or
aaa
pop
cdq
push
aam
mov
xchg
in
mov
push
push
xchg
dec
pop
cmp
mov
scas
cmps
inc
xchg
or
(bad)
dec
jo
push
in
inc
or
lea
sub
out
loope
mov
and
dec
push
add
js
xchg
repz
xor
push
retf
xor
jo
ins
xor
pop
das
push
test
cmp
sub
rcl
popa
stos
std
out
sub
sbb
push
add
xchg
jle
jge
cld
bound
mov
cmp
pop
fild
jge
sub
lds
push
mov
(bad)
retf
loop
movs
mov
ins
mov
push
pop
shl
loope
enter
cli
int3
stos
loop
mov
cdq
(bad)
aad
pushf
and
pushf
sbb
mov
xchg
pop
test
xchg
neg
loopne
and
retf
dec
jnp
sub
sahf
add
out
iret
jae
pop
push
ret
jge
pop
std
rcr
rcr
xchg
cli
inc
xchg
div
call
cmp
and
ror
rol
stos
pop
popa
cmp
test
add
cmp
repnz
cmp
pop
lahf
push
mul
jnp
mov
and
fs
jp
xor
stos
push
dec
test
mov
sbb
mov
dec
mov
mov
xor
jbe
in
dec
inc
xchg
ja
out
inc
jmp
xor
aam
inc
push
stos
out
xor
mov
or
add
loop
ret
or
and
fstp
cmp
jge
inc
fstp
ins
dec
push
repnz
(bad)
mov
xchg
pushw
pop
scas
shl
(bad)
ss
retf
out
sbb
mov
pop
cmp
aaa
sbb
adc
fwait
ret
es
and
pop
inc
or
shl
fld
inc
sar
out
jb
mov
ret
fcmove
sbb
mov
movs
pop
pushf
xor
hlt
sbb
jp
ret
push
push
in
jnp
jb
fs
jmp
shl
das
pop
and
shl
out
cmp
or
xor
imul
mov
xchg
fst
pop
out
jle
test
jmp
mov
stos
ins
sub
int
retf
mov
push
dec
lahf
stc
mov
cwde
mov
cmp
dec
mov
sahf
fst
fdiv
je
mov
cmp
sahf
push
lock
cdq
leave
jno
add
outs
icebp
add
and
es
and
jle
and
or
xchg
push
jbe
inc
add
push
mov
dec
loop
out
mov
xchg
mov
sbb
test
les
mov
pop
sbb
pop
ins
(bad)
or
mov
mov
pushf
into
mov
sbb
push
inc
(bad)
jecxz
mov
and
fcmovb
pop
popa
pop
je
dec
pop
xchg
sti
pop
lods
aam
stos
cmp
add
sub
sbb
xchg
(bad)
adc
add
sti
cmp
mov
and
push
xchg
clc
xor
xchg
cmps
int3
add
test
mov
movs
scas
mov
fild
pop
loopne
inc
or
push
js
jmp
stc
cmps
mov
cld
jo
jmp
cmp
cmc
push
es
mov
push
cmp
adc
fnstcw
mov
fwait
sub
retf
bound
jle
xor
pop
mov
in
add
clc
xor
jnp
mov
pop
fmul
xor
stos
jo
and
dec
fsub
shl
repz
div
adc
mov
out
aaa
scas
ja
inc
imul
xchg
sbb
and
xor
push
jecxz
mov
jp
pop
out
retf
nop
in
aas
ficomp
pop
(bad)
mul
add
and
sub
clc
sbb
dec
push
sub
sub
sbb
xchg
sbb
push
dec
fwait
mov
jp
lahf
in
test
sbb
jge
dec
pop
xlat
loope
gs
cdq
div
gs
adc
out
clc
sbb
xor
fsubr
inc
push
inc
(bad)
std
xchg
test
lods
xchg
sbb
out
out
pusha
mov
cmps
shl
test
xor
mov
xchg
shl
addr16
jecxz
mov
mov
push
adc
mov
cmp
aaa
adc
and
lods
(bad)
mov
sub
mov
and
daa
(bad)
dec
test
pusha
add
mov
aad
in
jg
jle
cdq
(bad)
mov
sbb
pop
daa
cwde
out
inc
mov
inc
aad
jbe
dec
xchg
cwde
leave
jl
xlat
test
xchg
jns
es
dec
inc
hlt
and
shr
call
out
cld
xchg
add
fsubr
inc
cs
(bad)
loop
push
ins
push
cmp
cmp
ins
call
add
data16
loop
ret
jle
sbb
inc
push
cmp
test
adc
lods
lods
mov
cwde
pop
aaa
call
dec
loop
xchg
and
sbb
push
sbb
rcl
and
or
je
or
or
xchg
mov
stc
fldcw
or
push
ret
ror
inc
cmp
sub
xchg
xor
movs
ins
aam
jge
jbe
lods
ins
xor
das
xor
mov
push
loop
pushf
pusha
pop
mov
jb
jae
jge
dec
jb
cwde
or
pop
(bad)
mov
jge
mov
mov
push
ins
inc
xchg
fcom
out
xchg
xchg
repnz
lods
(bad)
xor
out
pop
mov
sub
shl
xchg
js
cwde
jmp
shr
xchg
jnp
mov
push
mov
aad
push
xchg
inc
mov
sub
mov
arpl
pop
pop
ss
retf
rcr
xor
scas
cmc
mov
inc
loopne
mov
mov
fld
mov
xchg
xor
sti
mov
dec
xchg
call
rcr
or
or
(bad)
jmp
js
inc
shl
test
lds
inc
dec
call
add
dec
sbb
std
and
jb
retf
dec
imul
icebp
daa
test
mov
inc
aam
dec
adc
in
fstp
ror
xchg
pusha
lods
pop
shl
hlt
leave
pop
jmp
js
adc
xchg
cwde
stc
cmp
out
adc
add
into
pop
jnp
inc
adc
scas
mov
test
cld
or
xchg
outs
scas
das
arpl
mov
fld
aaa
dec
clc
in
cld
cld
daa
(bad)
adc
pusha
mov
and
inc
gs
dec
and
dec
(bad)
or
jnp
leave
out
adc
adc
aaa
push
dec
pop
aas
dec
repnz
jmp
sbb
and
push
jbe
cmp
ins
jmp
movs
leave
sub
mov
test
pop
cmps
xchg
jbe
jmp
and
fild
pop
sbb
inc
enter
dec
je
call
sahf
icebp
xchg
pop
dec
push
(bad)
movs
push
pop
call
adc
loopne
cwde
scas
xchg
pop
cmc
scas
pop
sbb
add
movs
leave
xchg
cmp
(bad)
test
int
xchg
int
daa
dec
jb
sbb
mov
mov
sub
bound
not
rcr
sbb
mov
int
mov
sahf
inc
in
stos
sbb
inc
imul
loope
fs
and
pop
cmp
adc
jl
push
dec
fstp
dec
dec
add
push
adc
and
and
push
ds
cld
mov
push
frstor
es
cli
loopne
fmul
inc
cmp
add
lds
mov
fnsave
js
dec
rol
dec
add
scas
push
sub
test
sbb
data16
jecxz
leave
push
jge
jo
add
cmps
popw
ja
cmps
jmp
push
cli
inc
jns
test
inc
push
xlat
ror
sbb
loopne
cmp
pop
or
push
mov
jno
push
ror
popa
in
or
add
ror
mov
pop
dec
mov
mov
xchg
sub
add
ins
xor
add
push
and
jp
nop
cmp
aaa
test
xor
pop
test
xchg
add
push
addr16
cwde
push
arpl
or
pop
jge
add
add
pop
daa
push
test
push
mov
or
fld
test
(bad)
stc
or
int
(bad)
icebp
push
inc
and
adc
outs
jmp
jecxz
rol
gs
adc
mov
mov
inc
cmp
mov
js
(bad)
out
xchg
(bad)
push
ror
aad
or
pop
shl
xchg
mov
lahf
addr16
arpl
push
inc
and
inc
dec
test
jp
fwait
mov
cmp
mov
push
add
pop
aaa
jge
mov
loop
sub
xchg
push
jmp
icebp
jne
xor
and
cwde
and
test
push
push
in
sar
adc
aad
pusha
pop
inc
lds
loopne
mov
xchg
xchg
adc
(bad)
out
sti
ja
mov
sub
cwde
or
and
push
lods
cmps
div
inc
lock
sbb
or
scas
pop
dec
jmp
loope
in
xchg
adc
shl
mov
test
repz
(bad)
pop
addr16
xor
popf
je
sub
pusha
dec
jo
cli
push
xchg
mov
xchg
cmp
arpl
ins
stos
fdivr
and
and
je
repnz
imul
mov
cld
lahf
mov
jo
data16
stc
push
sbb
out
xchg
cmps
outs
ss
nop
sub
xchg
xchg
jecxz
jle
cmp
out
sub
mov
test
sbb
(bad)
sbb
cmp
test
ror
add
mov
adc
and
rcr
(bad)
dec
loope
aam
fcomp
sub
pop
scas
mov
test
ficom
push
mov
jmp
push
lahf
push
add
inc
fiadd
push
sub
imul
pop
mov
hlt
cmp
xor
jmp
rcr
shl
stos
mov
jmp
xor
stos
sahf
dec
or
mov
sub
sub
call
cdq
push
add
push
repnz
leave
scas
out
jnp
mov
mov
pushf
push
iret
jmp
mov
pop
out
push
sti
sar
fst
sbb
sbb
pop
add
idiv
dec
repz
outs
das
popf
fldcw
cmps
mov
sbb
call
scas
xor
mov
xor
or
and
and
mov
mov
loope
mul
dec
adc
fisttp
sub
loop
mov
add
mov
pop
std
cmps
cld
pop
mov
push
nop
pop
dec
or
mov
test
dec
mov
push
sbb
cs
xchg
hlt
adc
mov
and
ficomp
loope
jns
and
or
push
jae
hlt
add
mov
dec
cmc
mov
xor
sub
lods
movs
(bad)
popf
(bad)
xchg
jne
lock
adc
mov
aaa
fdiv
sub
aas
das
mov
or
xchg
inc
xor
mov
cmc
xchg
cwde
mov
jo
(bad)
or
stc
xchg
iret
push
(bad)
fild
test
mov
push
push
daa
std
pop
std
jp
ss
out
imul
(bad)
sti
(bad)
fiadd
outs
fld
retf
div
cdq
or
or
daa
inc
mov
jns
jg
xor
sbb
fadd
dec
(bad)
lock
in
sub
std
scas
fmul
mov
jmp
push
repnz
shl
test
ficom
cmp
add
popa
inc
xchg
push
bound
mov
and
jae
push
lea
inc
arpl
add
dec
fwait
mov
mov
jnp
xor
mov
not
clc
nop
pushf
pop
xchg
fidiv
addr16
loopne
inc
mov
nop
pop
inc
test
or
and
mov
push
sub
xchg
ret
or
pop
inc
icebp
(bad)
pop
push
lods
push
add
inc
sbb
mov
lods
retf
cwde
scas
mov
fucomi
test
push
(bad)
out
je
in
or
cmps
jp
push
dec
sgdtd
fild
mov
xor
(bad)
dec
xchg
pandn
jo
imul
cmp
xchg
adc
jle
pop
sub
iret
int3
jo
inc
sub
int3
mov
call
mov
out
(bad)
xchg
(bad)
and
mov
ficomp
repnz
shr
mov
mov
out
adc
mov
xchg
(bad)
js
stc
jmp
mov
xor
pop
push
inc
movs
adc
jae
mov
push
mov
xor
inc
mov
repz
jecxz
pop
bound
adc
mov
das
sub
jo
fldenv
mov
or
add
add
ss
rcl
rcr
imul
push
jmp
jg
lods
in
cmp
add
movs
mov
mov
out
jge
outs
jmp
push
pop
jae
jns
and
clc
call
xchg
loopne
sub
mov
xchg
ficom
mov
jp
mov
add
sti
and
jge
scas
jae
stos
iret
jns
fwait
pop
or
das
pushf
sbb
inc
dec
popa
sar
mov
fdiv
(bad)
ja
mov
rol
pop
aam
and
dec
and
(bad)
iret
inc
fcomi
dec
lock
push
fstp
ins
retf
jl
imul
sbb
into
out
loope
call
mov
or
mov
sti
xchg
jl
sub
jmp
sbb
push
push
mov
mov
adc
xchg
mov
push
or
mov
or
inc
jo
repnz
push
jo
push
outs
in
mov
or
jl
or
enter
jge
fild
shl
pushf
jp
psrlq
mov
cmp
xchg
pop
sti
or
fisub
in
sbb
lods
cmp
jge
sbb
int3
pop
ret
pop
cdq
mov
jb
shl
inc
shl
push
mov
fbstp
jl
nop
jp
lock
arpl
xlat
pop
or
dec
das
ret
data16
fsub
cli
push
push
fwait
in
cmp
test
cmps
mov
sbb
repnz
xchg
adc
aam
clc
clc
jmp
xchg
xor
mov
sbb
adc
loope
out
xchg
cmp
(bad)
jo
fstp
push
ret
gs
jmp
push
popa
adc
push
adc
pop
(bad)
stc
pop
hlt
int3
es
sub
mov
cld
jns
jbe
pop
cli
xchg
rcl
cmc
cmps
push
and
mov
sub
adc
ins
es
push
das
jo
movs
(bad)
jp
loop
mov
(bad)
xchg
out
scas
mov
pop
mov
xlat
pop
sub
inc
cmp
mov
scas
mov
and
in
jle
pop
ss
imul
mov
icebp
je
aaa
ds
xadd
mov
(bad)
movs
pop
cmp
mov
mov
fmulp
adc
hlt
sbb
fsub
push
shr
ret
jbe
jo
cmp
jmp
aas
mov
repz
mov
fld
ficomp
in
loop
cmp
(bad)
hlt
cmps
fmulp
call
jg
push
sbb
and
call
inc
cmp
dec
pop
lds
mov
scas
inc
ds
push
les
repz
sub
jg
adc
adc
pop
imul
imul
popa
pop
sbb
retf
xor
dec
mov
pop
lods
cwde
(bad)
jmp
adc
fiadd
ds
mov
cld
jmp
sar
inc
sub
cmp
ja
and
push
out
dec
cs
push
in
gs
ret
fidivr
or
leave
test
lds
call
jmp
mov
les
xchg
movs
and
pop
dec
ins
adc
add
fs
retf
out
xchg
jnp
xor
ins
neg
mov
stc
mov
pop
sub
sub
cs
xchg
ds
add
inc
rcr
sub
mov
(bad)
ffree
call
add
inc
sar
stos
and
cmp
mov
add
mov
add
push
push
push
adc
outs
call
rcr
jo
jecxz
cmp
and
adc
xor
hlt
mov
push
push
retf
cmp
ins
jb
stc
(bad)
imul
inc
mov
sbb
mov
sub
(bad)
cmp
sub
sbb
mov
arpl
sub
and
out
shr
ja
(bad)
adc
fldenv
sub
inc
retf
cdq
push
in
mov
adc
xor
mov
les
and
xor
pop
mov
shr
mov
cmps
rcr
(bad)
xor
inc
fistp
repz
sub
mov
jp
ret
jp
repz
outs
(bad)
mov
jg
jp
or
and
or
and
sar
cmp
pop
pop
aad
add
cld
inc
loope
jae
aad
add
push
sub
mov
jl
mov
jl
pop
and
dec
call
lods
stos
cmp
repz
imul
(bad)
aas
adc
shl
mov
xchg
loope
dec
sbb
dec
and
sub
imul
mov
or
sub
rcr
ja
sbb
mov
loope
std
sbb
pop
(bad)
xor
pushf
jae
xchg
lea
mov
cld
sbb
add
or
add
leave
jns
sbb
into
fld1
(bad)
or
push
scas
ret
das
jmp
inc
fcmovnbe
mov
pop
mov
mov
jle
(bad)
ror
stos
into
(bad)
push
mov
lods
add
sub
mov
stc
mov
push
(bad)
jle
xlat
shr
cmp
sub
xchg
and
mov
jge
adc
cli
daa
daa
dec
(bad)
loop
enter
lea
fst
cmp
loope
or
mov
repz
adc
dec
nop
loopne
fs
push
pop
stos
scas
inc
mov
movs
mov
cmp
test
repz
call
dec
int
enter
mov
push
jmp
adc
xor
sub
or
lea
add
sbb
ror
xchg
mov
push
lods
test
xchg
cmps
cmp
bound
dec
retf
mov
leave
retf
jmp
jnp
and
dec
rcr
aam
inc
or
xsaveopt
loope
jmp
and
pop
jb
sub
(bad)
and
(bad)
fcom
mov
and
push
mov
cmp
and
inc
cmp
movs
mov
cmps
fldenv
fdivr
out
inc
repz
outs
xor
clc
bound
ins
lods
xchg
push
mov
xor
cmp
cwde
shl
push
sbb
xchg
inc
popa
stos
xor
bound
xchg
iret
out
test
mov
test
out
sub
neg
dec
or
xchg
out
jg
dec
ja
or
test
xor
cli
xchg
retf
fiadd
movs
or
push
sub
(bad)
sub
cmp
or
(bad)
movs
mov
fcomp
je
and
xor
pop
mov
xchg
xchg
sub
jns
add
and
add
push
pop
and
adc
mov
sbb
or
les
xchg
mov
xchg
mov
mov
add
jmp
aas
inc
xchg
xchg
inc
mov
xor
daa
popf
ret
stos
fcom
stos
ds
(bad)
dec
aaa
(bad)
les
pop
adc
and
(bad)
(bad)
nop
mov
jle
dec
cmp
mov
cmovle
pop
mov
lea
dec
push
xchg
xchg
lock
imul
adc
int3
push
call
lock
aam
push
test
dec
leave
mov
arpl
stos
cdq
cmp
mov
add
or
sub
sbb
inc
xor
popa
std
or
jno
jge
add
cmp
loopne
data16
cwd
or
test
clc
jo
mov
xchg
outs
and
xchg
fisub
fild
cmp
pop
sub
pop
jmp
and
(bad)
ins
mov
mov
aaa
jmp
icebp
cmp
or
mov
loope
cmc
inc
lds
popf
int3
fsubrp
sbb
push
pop
in
add
jp
mov
mov
dec
ins
sbb
sti
pop
xchg
es
sub
loopne
cmp
sub
inc
fnsave
mov
test
or
lods
in
push
dec
mov
movs
xor
inc
inc
sahf
and
or
shl
les
loope
dec
dec
cmps
xchg
pushf
mov
cs
ins
mov
jl
jne
and
rcl
daa
call
jne
clc
adc
inc
in
mov
mov
ins
and
inc
(bad)
pop
and
sbb
lahf
lds
xlat
mov
test
xlat
xor
icebp
and
xor
push
sub
sub
and
hlt
dec
cli
mov
jne
adc
cs
mov
push
xchg
mov
adc
xchg
cmp
scas
and
add
pop
(bad)
mov
fprem1
jb
fistp
(bad)
push
test
dec
dec
in
push
and
cmp
repz
or
push
mov
pop
lds
push
jle
sub
mov
sbb
xor
es
ror
push
jns
jno
cmp
pop
fdiv
jae
mov
aas
adc
dec
rep
pop
or
mov
shl
dec
pop
je
ins
out
xchg
inc
idiv
outs
mov
inc
pop
or
jmp
jns
(bad)
fcmovu
out
xchg
es
call
test
pop
mov
loopne
in
push
ror
fimul
cmp
ret
stos
dec
out
iret
jg
stos
cs
and
cmp
push
dec
stos
jg
xor
hlt
mov
xchg
mov
xchg
int3
adc
lds
lock
aad
jb
and
mov
aad
fptan
dec
mov
mul
dec
ret
scas
pop
or
inc
pop
adc
leave
mov
ins
inc
clc
add
movs
sub
mov
aaa
rcr
stc
mov
push
mov
sti
daa
cld
jg
xchg
iret
sbb
mov
mov
loope
xor
movs
scas
gs
jo
pop
sbb
mov
aaa
fbld
loopne
mov
out
loopne
xchg
pusha
mov
push
repz
adc
pop
dec
push
dec
cmp
and
nop
sub
lods
lods
ds
into
jbe
push
sub
and
and
movs
rol
mov
in
aas
ror
movs
ret
mov
dec
sbb
mov
cmps
cmps
push
sub
xor
fbld
push
(bad)
(bad)
cmp
sub
adc
cmp
les
pushf
or
je
mov
mov
(bad)
pop
and
stos
sub
(bad)
xchg
popa
add
movs
xchg
sar
hlt
mov
xchg
test
and
xor
loope
leave
xchg
lock
jmp
xchg
icebp
xchg
clc
push
dec
sub
jo
jns
mov
nop
ja
(bad)
movs
ror
movs
dec
inc
daa
outs
mov
mov
hlt
mov
das
movs
vmwrite
adc
jne
pop
mov
hlt
scas
cmp
loope
shl
jns
pop
mov
mov
mov
jbe
jns
dec
mov
repz
or
js
jbe
data16
fimul
add
or
adc
sbb
or
xlat
or
in
in
loop
inc
add
(bad)
int3
imul
fistp
ret
test
cvtpi2ps
cmps
pusha
and
jecxz
call
push
les
mov
cld
or
and
push
xor
pushf
scas
test
pusha
add
test
push
pop
in
mov
mov
push
mov
adc
push
imul
cmp
loopne
cmp
mov
jle
pop
(bad)
jnp
or
dec
cmps
dec
cmp
pop
retf
ret
bound
pop
popa
xor
mov
cmp
adc
outs
xchg
pop
pop
mov
push
mov
shr
dec
ins
bound
or
imul
out
fdivr
out
xchg
pop
adc
mov
lods
pop
xchg
mov
into
imul
xchg
push
jne
mov
mov
sti
in
adc
cmp
mov
pop
in
mov
lods
add
inc
xchg
out
jbe
mov
in
imul
mov
scas
clc
(bad)
pop
repz
(bad)
jmp
pop
out
mov
fisub
jns
test
in
mov
mov
push
mov
bound
int
xchg
je
fistp
cmp
push
push
inc
loopne
dec
popf
imul
mov
lea
shr
icebp
or
mov
stos
rol
lods
add
dec
sahf
jge
nop
add
cmp
jmp
out
fisubr
inc
test
dec
sub
mov
xor
dec
inc
std
scas
sbb
push
mov
test
or
ds
inc
call
or
rcl
mov
movs
sub
jo
jmp
jle
fcom
das
mov
into
xor
outs
jnp
mov
test
mov
(bad)
out
mov
shl
imul
es
push
pop
xchg
adc
jo
xor
pop
and
jne
aad
sbb
adc
aaa
xchg
mov
sbb
xor
push
push
mov
mov
lahf
xchg
sub
adc
out
fld
xor
adc
pop
pop
mov
repnz
nop
fisubr
push
push
dec
fimul
push
mov
inc
imul
push
add
sbb
xchg
mov
xchg
enter
pop
add
or
cwde
fcom
add
mov
xlat
adc
push
adc
dec
cmps
adc
fdiv
push
mov
aaa
sub
mov
adc
fadd
test
outs
aas
(bad)
sahf
xor
mov
adc
cmp
adc
mov
popf
ror
lds
push
fild
arpl
imul
mov
leave
out
test
retf
sub
dec
mov
dec
ins
stos
loop
dec
xchg
sub
jg
out
and
sub
push
jl
pop
fld
add
push
rol
retf
cmps
sti
das
mov
mov
std
shr
push
push
xchg
dec
stc
sbb
rol
pop
aam
pop
pushf
xchg
jmp
adc
push
add
jo
pop
add
in
inc
add
jnp
dec
and
stos
scas
or
iret
ror
push
jne
xchg
outs
xor
stos
pop
adc
pop
aaa
pop
arpl
push
jle
push
jne
les
in
fldenv
fidiv
add
adc
fwait
add
js
jge
mov
jns
adc
ss
rol
lds
repnz
add
inc
sbb
popa
xchg
pop
inc
cdq
stos
bound
out
retf
inc
and
popa
into
mov
dec
int
xchg
(bad)
sub
cmps
push
leave
cmp
xchg
lock
ja
push
add
and
mov
jmp
jo
cdq
push
call
inc
jle
scas
xlat
xchg
dec
aas
loop
jne
push
inc
and
mov
fdivr
shr
ja
cmps
mov
int
fdiv
scas
lock
mov
xchg
outs
int3
add
mov
mov
popf
dec
les
test
adc
cwde
jo
test
(bad)
fld
pushf
mov
sar
arpl
cmp
out
add
aas
(bad)
push
repz
fscale
popa
sub
pop
int3
call
clc
push
ins
into
sti
and
mov
ja
mov
mov
inc
cmp
push
push
xor
ret
push
xor
push
pop
movsx
and
mov
push
pop
jb
shr
retf
ja
es
sub
je
pushf
mov
dec
pushf
scas
mov
fnstsw
inc
cmp
xor
stc
jecxz
popf
iret
inc
(bad)
nop
push
fwait
(bad)
pop
xchg
and
popf
movs
cmps
dec
push
mov
test
cmp
pop
pop
and
int3
in
fidiv
(bad)
repz
shl
inc
hlt
in
fstp
cmp
push
sbb
pusha
aam
push
shl
inc
mov
(bad)
cmp
mov
stc
movs
jecxz
push
mov
inc
add
je
outs
ins
cmp
(bad)
repnz
cmp
cmp
jnp
in
ror
shl
pop
out
es
lods
mov
je
lds
fisttp
inc
ja
enter
(bad)
aad
movs
sar
xlat
lods
scas
repz
pop
add
jb
ja
fild
sbb
cdq
add
stos
imul
sbb
not
add
pop
xor
repnz
movs
or
add
jae
xlat
and
fisub
adc
sbb
das
fistp
lahf
or
sti
and
jo
sub
jl
pop
push
jmp
adc
cmp
xor
sti
sub
push
ins
inc
into
outs
fistp
fist
dec
loope
jno
mov
and
cmps
add
jnp
in
mov
mov
mov
into
cs
movs
adc
sbb
adc
sub
enter
fwait
xchg
call
inc
add
aas
sub
(bad)
and
repnz
cdq
sub
mov
and
call
cmps
xor
mov
dec
fsub
mov
loop
or
rol
lds
jmp
ss
sub
mov
pop
ins
stc
js
adc
inc
sub
xlat
push
push
adc
cmp
test
(bad)
sub
popa
jae
mov
push
test
call
sbb
xchg
int3
adc
outs
pop
(bad)
sub
sbb
icebp
inc
or
call
xchg
sub
push
adc
jo
lods
sub
lahf
xor
(bad)
out
mov
add
inc
and
cmp
mov
addr16
mov
xchg
nop
pop
mov
xchg
xchg
inc
pop
push
cli
pop
call
cli
ins
or
stc
ds
or
inc
arpl
inc
mov
and
mov
pop
xchg
add
imul
inc
jns
xor
push
cmp
into
and
hlt
es
mov
popf
mov
cmps
inc
movs
js
or
xchg
arpl
(bad)
mov
lods
sbb
int3
cwde
(bad)
pop
icebp
ret
scas
nop
push
out
mov
add
mov
stos
pop
sbb
(bad)
and
pop
lock
pop
popf
add
jmp
lods
mov
retf
mov
nop
push
inc
mov
dec
mov
add
mov
mov
inc
mov
enter
jae
adc
pop
shr
cld
(bad)
stos
sbb
jns
jg
push
xor
mov
mov
xor
ins
rol
push
xchg
shl
mov
pop
jb
inc
pop
add
xchg
rol
pop
imul
call
pop
dec
xchg
cwde
or
das
xchg
cmps
dec
inc
jge
(bad)
cmps
rcr
or
sub
jle
loope
xchg
mov
or
jmp
xlat
mov
mov
sub
pop
pop
xor
inc
cs
in
inc
mov
fnstsw
in
pop
lea
addr16
iret
loope
cmps
xor
pop
icebp
pop
push
sub
dec
daa
mov
stc
adc
cmc
leave
pop
pop
fisttp
jno
call
push
pop
mov
jnp
popa
xor
jge
and
xchg
ds
shl
xchg
addr16
loopne
ins
push
in
pop
cmps
mov
inc
repnz
mov
adc
xchg
cwde
lods
lods
not
mov
jge
test
scas
add
mov
les
repz
sbb
mov
(bad)
cld
jb
push
(bad)
push
in
out
popf
test
xchg
xchg
rol
push
out
test
cmp
jg
test
xor
lods
add
sbb
addr16
(bad)
clc
push
(bad)
cld
xchg
stos
mov
loope
(bad)
(bad)
retf
jbe
dec
aam
inc
scas
jno
jmp
movs
pop
fsubr
sti
into
aaa
retf
(bad)
mov
call
pushf
sub
inc
sbb
cmp
adc
(bad)
mov
cmps
xchg
loope
mov
sbb
cmp
add
ret
ret
bound
and
xchg
jnp
mov
or
rol
dec
sbb
xor
sbb
dec
stos
leave
dec
enter
push
mov
push
pop
in
or
daa
aad
cmp
sub
jbe
lahf
mul
sbb
xlat
fwait
sub
sbb
int
clc
sub
aas
inc
repz
(bad)
sub
sbb
scas
sub
jae
and
inc
loopne
sub
fsub
mov
psraw
sar
xor
mov
aaa
cmp
ret
fs
cmp
add
clc
pop
dec
test
movs
pop
inc
xor
or
jmp
and
movs
or
fild
hlt
mov
(bad)
int3
xor
test
pop
pop
and
dec
fwait
mov
ss
dec
ss
xchg
push
in
(bad)
dec
dec
mov
push
int3
mov
jmp
or
out
push
cld
sbb
xchg
mov
call
not
mov
and
dec
cmps
or
outs
ja
imul
ins
and
loope
test
adc
mov
fisub
add
mov
pusha
iret
imul
(bad)
cmc
push
pop
aad
xchg
xchg
lods
jne
arpl
mov
iret
arpl
adc
sbb
mov
sbb
cmp
and
and
mov
les
push
mov
je
dec
mov
mov
loopne
loop
test
out
adc
js
push
xchg
jle
and
retf
stos
push
(bad)
pop
add
xchg
cmps
mov
stos
sub
retf
mov
cld
enter
lea
sbb
imul
adc
cmp
mov
xchg
jne
push
gs
call
loopne
jns
fidiv
es
fwait
lods
cmc
imul
sub
add
sahf
inc
imul
aad
je
(bad)
jecxz
dec
mov
push
push
iret
dec
pop
xchg
jns
imul
mov
movs
scas
mov
pusha
adc
clc
lods
adc
retf
(bad)
sbb
ror
rcl
call
jnp
movs
xor
sub
out
mov
xlat
adc
mov
popa
std
in
fs
inc
nop
lods
jns
xlat
cmp
addr16
aaa
out
repz
fisubr
add
cdq
push
sub
mov
pop
fst
stc
pop
pop
push
cmp
ret
jl
aas
mov
push
jmp
cmc
sbb
hlt
imul
ret
std
pop
and
sub
inc
pop
enter
ss
in
loope
lods
idiv
popf
cs
sbb
add
push
stos
xlat
or
jmp
(bad)
sub
(bad)
popf
pop
cli
test
xor
(bad)
mov
mov
mov
scas
rol
(bad)
fcom
dec
popa
in
out
jo
xchg
and
retf
xchg
dec
test
jl
std
cmp
mov
clc
(bad)
lods
mov
adc
daa
xor
sahf
xor
cmp
mov
and
push
push
add
inc
movs
cs
jbe
(bad)
shl
mov
inc
mov
data16
lods
popaw
ins
nop
jle
sbb
(bad)
jge
cmp
and
fcom
iret
pusha
pop
sbb
popf
sbb
adc
into
sbb
bound
fstp
cmp
push
clc
fwait
cmp
mov
jmp
xchg
pop
inc
add
mov
mov
call
sti
shr
movs
cmp
jae
(bad)
(bad)
cmp
sbb
(bad)
fild
push
enter
lock
je
push
cmp
jo
xchg
mov
dec
out
jecxz
xchg
nop
xlat
inc
sar
addr16
pop
(bad)
and
mov
xchg
sbb
cmps
push
mov
mov
push
ins
shl
add
xchg
fs
jmp
xchg
mov
lods
aaa
jae
fimul
xlat
mov
mov
mov
inc
sub
mov
and
es
sub
and
repnz
jbe
jmp
movs
or
imul
lods
mov
loop
xor
leave
aas
mov
cli
jb
loope
dec
jmp
repnz
es
shr
scas
inc
cld
xor
dec
aad
and
daa
mov
jge
hlt
out
sub
sti
movs
scas
jle
out
mov
push
ja
pop
fcomp
pop
and
mov
scas
push
lock
ds
jno
xchg
scas
jo
sbb
mov
adc
data16
adc
dec
popf
movs
pop
sub
addr16
mov
xchg
test
dec
fucomip
cli
les
cmp
mov
push
lahf
mov
mov
(bad)
push
data16
(bad)
out
push
add
cwde
loop
stos
mov
fs
pop
imul
in
out
cwde
jg
sub
out
imul
into
stos
jnp
fiadd
stos
add
inc
dec
xor
out
pusha
jmp
scas
sub
add
loop
pop
cmps
jmp
and
sub
imul
push
data16
adc
test
xchg
inc
cmps
lods
fwait
(bad)
call
cmp
out
dec
daa
sbb
xchg
mov
xor
shr
sbb
xchg
retf
fwait
add
shl
xor
addr16
sub
lahf
pushf
sbb
arpl
mov
xlat
outs
cmp
cmps
repnz
mov
mov
aaa
fist
movs
push
stc
sub
and
jmp
mov
imul
push
or
retf
jno
dec
and
mov
pop
mov
in
jmp
lock
xchg
adc
mov
pop
jge
and
test
mov
pushf
pop
mov
shl
and
stos
mov
mov
push
dec
mov
dec
inc
xor
jno
fcom
sub
push
pop
lock
mov
inc
sahf
scas
loope
test
add
repz
int
(bad)
repz
ins
stc
aad
fimul
sti
data16
dec
cld
std
jo
lea
retf
xor
mov
jnp
xor
push
stc
xchg
stos
push
xchg
mov
push
push
pop
(bad)
arpl
mov
inc
lods
jae
addr16
mov
shl
cmp
xchg
push
mov
pop
shl
lds
jl
jae
retf
test
jmp
xor
int
iret
jne
ret
out
fwait
test
aas
arpl
punpckhdq
stc
cmp
cmp
test
sub
lock
mov
cmp
call
popa
mov
mov
scas
iret
not
mov
(bad)
dec
adc
xchg
repz
mov
movs
mov
jmp
dec
push
xchg
push
into
and
jle
mov
sbb
adc
jbe
ins
and
add
sub
cmp
push
mov
jle
cmp
(bad)
mov
mov
pop
adc
ds
fnstsw
movs
pushf
lea
inc
les
and
imul
(bad)
test
retf
test
adc
mov
xchg
jle
and
test
and
je
pop
les
into
lea
push
icebp
cld
lods
stos
cli
call
into
mov
jg
pop
fnsave
push
ins
int
ins
add
neg
cld
xchg
sub
add
loope
add
shl
retf
xor
into
inc
in
imul
jp
loope
mov
mov
adc
in
fwait
sub
popf
xchg
pop
adc
cmp
jo
sub
xchg
js
mov
cmovne
pop
mov
loop
jp
xor
push
dec
or
fwait
push
in
jns
aam
xchg
lahf
mov
lds
in
push
pop
push
test
inc
jge
loopne
mov
sub
sub
ja
inc
pop
pop
jnp
jbe
jg
cdq
or
jbe
mov
sbb
out
test
fdiv
leave
aaa
lods
dec
bound
add
movs
push
mov
jecxz
retf
imul
jge
out
clc
out
jmp
or
call
clc
or
loop
jno
sub
pushf
sbb
sbb
ds
data16
pushf
cmp
jo
aaa
or
pop
out
add
out
mov
cmp
mov
jo
(bad)
xchg
jmp
std
loope
inc
push
lods
sbb
fadd
sbb
push
loopne
mov
(bad)
leave
test
cmps
outs
add
push
stc
addr16
ret
mov
pop
js
scas
adc
jo
(bad)
iret
(bad)
lds
adc
xchg
jb
(bad)
aam
jne
lods
mov
fadd
pop
xchg
jnp
nop
test
push
or
push
loopne
cmp
adc
iret
out
sahf
das
movs
out
popa
cmp
adc
mov
adc
pop
cmp
inc
pop
sub
pop
cmp
fbld
adc
jge
or
cmp
mov
dec
fld
cmp
fild
jno
jo
ret
push
sub
add
daa
mov
ret
adc
mov
ss
dec
(bad)
and
dec
aad
fwait
xchg
loopne
lods
xchg
das
sti
xchg
movs
outs
xor
dec
cs
adc
xor
push
xor
mov
cmp
xor
cwde
sub
les
outs
jnp
sbb
mov
push
bound
pushf
mov
sbb
adc
fidiv
lods
dec
mov
call
pop
xor
ror
pop
mov
div
repnz
pop
jl
mov
add
or
fadd
inc
mov
test
pop
(bad)
xlat
in
scas
loop
jns
and
adc
xor
pop
xchg
aam
or
or
cmp
lods
je
int3
int
jae
fwait
(bad)
adc
adc
adc
retf
cmp
leave
retf
mov
rcr
pop
mov
scas
call
mov
cmp
mov
lock
inc
pop
sbb
add
std
hlt
add
or
push
cmp
jp
or
jne
mov
adc
mov
mov
xor
jmp
inc
dec
aaa
outs
pop
arpl
push
loope
adc
cdq
daa
jmp
mov
outs
pop
sbb
lahf
pop
inc
adc
mov
adc
cs
sub
sbb
xlat
adc
jbe
mov
jmp
add
mov
push
adc
popf
inc
xchg
in
into
fst
jbe
adc
xor
in
or
pop
pop
sahf
lods
sub
(bad)
repz
icebp
mov
cmp
aad
ja
inc
movs
add
dec
push
xor
push
xchg
aad
ja
pop
clc
mov
jp
pop
pop
scas
jmp
fcmovnbe
rcr
inc
sub
cmp
cdq
cmp
bound
scas
lahf
fnstcw
sti
add
pusha
cmc
push
dec
xchg
jl
sub
(bad)
and
sbb
mov
stc
arpl
cmp
xor
ins
push
jbe
sub
inc
mov
jno
and
mov
fsubr
neg
cwde
mov
(bad)
(bad)
fmulp
neg
rcr
pop
inc
retf
jge
ret
aaa
cld
retf
in
pop
aas
xchg
pop
mov
cwde
mov
out
scas
or
mov
ror
xlat
adc
mov
push
jl
in
or
gs
xor
xchg
jge
inc
jnp
xchg
mov
daa
jp
je
mov
lahf
jno
aas
call
stc
fistp
popf
mov
inc
(bad)
in
stos
add
leave
movs
fist
aad
mov
dec
push
jns
mov
in
mov
into
or
pop
cwde
push
shr
ja
sahf
mov
mov
icebp
inc
or
loop
fstp
sbb
cmp
call
ins
lahf
inc
cmp
sub
jno
in
sbb
push
cmp
fldcw
int
int
inc
out
pop
ds
and
mov
icebp
or
cmps
test
scas
and
leave
cmps
adc
push
mov
ins
mov
cmps
mov
and
jne
sub
les
add
mov
push
mov
aas
push
shl
je
xor
rcr
lods
cmps
popa
push
arpl
div
stos
mov
movs
pop
movs
cmp
sub
movs
movs
shl
pushf
push
lea
push
(bad)
cmps
test
jle
jbe
push
daa
push
(bad)
(bad)
pusha
xor
out
mov
fidivr
int3
pop
cs
jae
cmp
inc
pop
fst
xchg
mov
xchg
jnp
push
ret
les
(bad)
popf
out
or
push
push
and
fdivr
mov
ds
adc
lods
inc
cmc
pop
pushf
rcr
mov
js
clts
inc
lahf
push
(bad)
sbb
mov
add
xor
sub
mov
jp
sbb
mov
hlt
xchg
call
int3
loope
call
xor
aas
pop
jmp
cmps
addr16
int
lahf
or
jecxz
out
sub
icebp
cmp
jle
out
add
and
add
sahf
loope
jmp
and
sbb
out
cmps
inc
lods
vandnpd
popf
push
dec
or
xchg
mov
pop
cmp
jle
cmp
std
movs
mov
retf
mov
xchg
popf
add
clc
mov
ja
int3
adc
pop
xor
jl
inc
and
in
fsub
cmp
mov
dec
int
movs
lods
jne
or
push
ins
movs
fs
cmc
les
pop
cwde
lods
fistp
adc
xchg
bnd
mov
xor
scas
mov
adc
push
mov
pop
mov
arpl
inc
ret
push
sub
add
addr16
add
pushf
and
jnp
push
fcomp
jle
sub
nop
fcmovnb
mov
jecxz
pop
dec
or
shr
push
cmp
gs
(bad)
cmps
pop
inc
out
ins
mov
out
fimul
push
xchg
in
outs
cmp
push
mov
jmp
stos
mov
call
cwde
push
imul
adc
mov
loopne
stos
mov
leave
mov
pop
ins
ror
add
or
test
inc
jp
stos
pop
test
retf
movs
xor
sbb
(bad)
jno
shl
aaa
mov
(bad)
addr16
frstor
dec
push
pusha
jae
call
adc
je
push
dec
mov
(bad)
in
mov
sub
mov
jmp
or
fmulp
jge
fistp
movs
shr
in
mov
jo
xor
xchg
sub
std
and
or
push
mov
test
add
repnz
add
push
imul
out
sub
sub
or
ds
mov
jl
push
pop
cwde
pop
scas
or
adc
in
(bad)
repnz
jo
into
aas
push
js
xchg
sub
or
cmp
daa
outs
or
mov
sbb
jb
loopne
loop
mov
xor
leave
mov
mov
mov
aam
jns
popa
js
inc
loope
push
jae
hlt
jae
fnsave
bound
dec
(bad)
xor
test
sub
xchg
dec
int3
push
cmp
loopne
js
add
pop
add
fdiv
jp
xchg
aad
ret
or
adc
fild
mov
ja
out
and
jne
gs
add
jne
sub
push
bound
ds
xchg
jg
pop
mov
mov
or
mov
aaa
iret
mov
out
jns
dec
mov
loope
and
or
pop
loope
mul
mov
inc
ins
lods
jno
xchg
add
add
xchg
mov
retf
jle
imul
push
and
mov
nop
fistp
xor
mov
test
xor
or
idiv
sbb
imul
add
aas
adc
cld
sbb
jecxz
iret
jb
jmp
or
test
popa
mov
cld
daa
push
inc
cwde
push
das
adc
fisub
xor
outs
push
push
dec
mov
adc
retf
hlt
mov
mov
mov
add
les
repz
ins
pop
call
cwde
stc
jb
and
pop
(bad)
add
mov
pushf
add
out
pusha
and
xchg
cmp
cmp
adc
mov
adc
enter
mov
imul
push
cmp
pop
mov
cmps
lahf
jno
mov
fild
sub
or
dec
neg
mov
not
dec
mov
add
pop
(bad)
movs
test
neg
(bad)
test
mov
inc
push
sbb
xchg
xlat
fwait
sub
sbb
lods
cs
int
cmp
frndint
lods
and
jle
mov
or
out
cli
xchg
and
or
rcl
fcmovu
in
xchg
neg
retf
push
cli
or
hlt
mov
gs
pop
ret
sbb
jmp
loopne
enter
cld
and
mov
jg
xchg
xchg
sbb
mov
fistp
push
xchg
add
mov
not
inc
pop
std
and
in
and
and
add
jl
jne
lods
test
jb
pop
sbb
sbb
add
and
mov
rol
mov
add
lock
cmp
and
inc
jo
jge
aad
cld
pop
push
sahf
dec
sti
leave
mov
je
xchg
mov
mov
inc
or
push
adc
adc
gs
js
mov
sbb
xor
push
addr16
jl
(bad)
mov
ret
js
or
pop
push
cmp
lahf
cmps
outs
(bad)
out
push
cmp
cmc
sbb
jne
xchg
bound
aas
push
push
dec
cmc
ins
arpl
add
out
or
mov
es
and
sbb
push
inc
(bad)
pop
add
and
loopne
jl
cmp
aam
add
loopne
mov
mov
push
xchg
rcr
xchg
in
mov
es
fiadd
shr
and
retf
cmp
daa
inc
dec
and
xchg
mov
cmp
sti
lods
outs
ss
adc
pop
or
lock
inc
aaa
xchg
or
addr16
jnp
jae
xchg
xchg
xchg
jo
icebp
(bad)
out
sbb
adc
leave
add
arpl
add
push
pmulhuw
and
push
sbb
lock
iret
mov
xor
jecxz
hlt
push
add
popa
xor
pop
dec
mov
pop
xchg
out
aam
ins
arpl
nop
(bad)
sub
std
dec
or
out
push
rcl
lods
cmp
pushf
es
xchg
mov
jg
mov
jle
or
dec
ficom
int3
or
out
xor
sbb
ins
imul
push
mov
in
xchg
mov
ss
into
sbb
ret
cmp
pop
push
inc
adc
xchg
jmp
sub
pop
scas
jle
clc
dec
mov
movs
jb
je
sahf
retf
in
mov
adc
ja
cs
js
js
fmul
test
add
scas
lds
add
sub
adc
scas
hlt
jne
mov
fsubr
rcl
(bad)
stc
jae
(bad)
cmp
sbb
and
jg
loope
(bad)
test
pop
iret
and
out
dec
clc
cli
inc
push
push
(bad)
call
mov
(bad)
lods
mov
cld
pop
jmp
mov
mov
es
push
pusha
cld
jns
je
lds
neg
imul
mov
jmp
add
xlat
iret
and
push
pop
xor
mov
xchg
pop
mov
sub
jmp
sbb
out
mov
mov
ret
push
retf
cdq
fs
enter
test
xchg
(bad)
jno
cmp
mov
sahf
sbb
mov
inc
addr16
jle
mov
sub
pusha
cmps
(bad)
jo
pop
mov
or
jl
mov
sbb
push
das
jb
xlat
sub
sub
push
daa
and
adc
adc
mov
cmps
dec
ret
inc
out
dec
out
nop
jns
(bad)
adc
fs
cmp
xor
jno
xor
xor
xchg
(bad)
jne
jmp
jo
cmp
call
cld
outs
or
push
(bad)
stc
xchg
jb
aam
loop
sbb
push
xor
pop
ss
dec
imul
cmp
jmp
mov
pop
pcmpeqb
jae
push
pop
or
xchg
mov
iret
adc
cwde
in
cmc
pop
adc
shr
push
call
xor
not
adc
pop
dec
nop
idiv
or
cli
jbe
loopne
xchg
mov
scas
xchg
test
scas
push
rol
int
dec
repnz
gs
and
call
xchg
push
jp
sub
cmc
enter
dec
std
mov
inc
add
and
loope
xchg
xor
adc
cdq
adc
stc
daa
aam
pop
push
fidiv
icebp
fnstenv
iret
jo
dec
push
mov
movs
xor
dec
adc
pop
cli
out
dec
jp
out
test
or
and
adc
outs
and
stc
or
mov
outs
mov
into
adc
dec
dec
or
lods
leave
test
int3
mov
push
fucompp
fwait
jg
pop
push
push
aad
shr
enter
mov
xor
dec
sub
jne
mov
inc
mov
mov
arpl
mov
or
cs
sbb
adc
or
add
adc
bound
in
jle
cs
add
cmps
cmps
std
inc
pop
cmc
(bad)
std
int
popf
test
adc
(bad)
repz
repnz
pop
in
or
sub
xchg
ret
(bad)
mov
retf
sbb
sub
arpl
in
jp
xchg
xchg
fbstp
mov
mov
cmps
call
sub
mov
cli
repnz
pop
aad
arpl
mov
mov
pop
and
jmp
pushf
cmp
lahf
push
test
lods
call
js
sub
and
daa
adc
jnp
fstp
je
mov
jp
in
leave
push
arpl
xchg
mov
mov
out
sbb
mov
xor
add
pop
scas
mov
sub
mov
ins
dec
xchg
add
sahf
out
fld
mov
mov
(bad)
lahf
in
jg
mov
sbb
mov
or
add
int
jp
jmp
jg
jne
cmp
int3
dec
push
arpl
enterw
mov
jmp
ret
or
jae
lods
sub
nop
lahf
or
popa
repz
sub
pop
mov
adc
mov
or
clc
push
push
popf
pop
lock
popa
inc
sbb
mov
or
jns
imul
mov
retf
sbb
js
shl
or
out
mov
mov
lods
cmps
dec
mov
test
mov
inc
mov
push
xchg
ss
inc
jge
push
popa
mov
ins
sub
adc
(bad)
rcr
cmp
xor
outs
push
into
add
mov
cmp
cs
loop
xchg
(bad)
xor
in
daa
push
inc
push
inc
icebp
(bad)
icebp
fcmovnb
into
ins
pop
xchg
outs
sub
inc
cmc
cmp
or
imul
es
jno
fmul
or
jmp
pop
aad
sub
clc
add
pop
or
pop
xor
stos
mov
adc
mov
dec
push
aad
sar
mov
dec
dec
xchg
xchg
xchg
out
sub
call
(bad)
les
adc
dec
pop
lea
mov
shl
mov
inc
xchg
mov
jp
cli
jl
(bad)
mov
cli
cmp
ror
mov
movs
xchg
mov
test
ins
shr
xchg
pop
or
mov
mov
dec
xor
dec
mov
mov
je
(bad)
add
(bad)
sahf
xor
dec
mov
sbb
mov
cmp
xchg
test
push
pop
rol
arpl
mov
cs
cmp
sbb
lahf
ror
push
(bad)
mov
add
mov
(bad)
js
or
fidiv
sbb
data16
dec
push
or
ret
aad
mov
outs
xor
inc
loop
sbb
xchg
mov
or
pop
mov
and
jbe
cmps
fstp
or
mov
mov
sbb
cmps
mov
mov
pop
pop
jo
fadd
xchg
test
pop
xor
call
xchg
jmp
jecxz
popa
xor
add
cmps
push
xchg
(bad)
xor
xchg
sbb
jge
ins
lahf
arpl
push
shl
sbb
xor
or
cmp
push
cli
inc
ins
mov
cmp
mov
(bad)
cmp
aad
in
test
loope
in
int3
push
cld
add
outs
aam
lods
in
out
push
mov
pop
mov
jmp
or
shr
lock
mov
xor
loopne
sbb
and
xchg
lea
mov
and
shr
js
pop
mov
popf
sub
test
imul
or
jmp
xor
sbb
ror
xchg
sub
xchg
test
pop
xchg
not
adc
xchg
xor
(bad)
sub
cmp
nop
scas
mov
push
(bad)
loop
popf
inc
xchg
out
pop
dec
das
(bad)
jmp
add
and
pop
ficom
add
inc
repz
ror
xor
inc
fwait
retf
inc
icebp
pushf
mov
bound
pop
fs
push
xor
int3
push
leave
jmp
dec
(bad)
popa
cmp
sub
pop
add
xor
sub
cmp
stos
aam
loopne
push
jbe
loopne
pop
push
sbb
aam
(bad)
xchg
retf
(bad)
(bad)
push
push
(bad)
loopne
jl
inc
in
and
dec
in
mov
jo
or
std
xor
or
xchg
enter
jbe
pop
leave
arpl
cmp
pop
mov
mov
rcr
shl
add
ins
imul
fld
in
push
inc
gs
ret
cmp
jl
adc
inc
fwait
xchg
xor
inc
xchg
add
jmp
pop
and
imul
jb
push
cli
cmp
inc
adc
(bad)
jo
and
and
fisubr
mov
je
out
cld
mov
pop
adc
call
dec
imul
sub
aaa
lahf
sub
in
pop
ins
pop
inc
mov
clc
retf
ins
adc
sbb
(bad)
imul
or
push
jb
mov
mov
jl
xor
js
daa
xchg
jns
mov
mov
adc
std
dec
push
je
dec
mov
inc
fcmove
add
and
mov
popf
cs
dec
aas
test
and
push
fs
mov
mov
loop
mov
cmp
sbb
fsubr
repnz
jecxz
sub
adc
test
pusha
fidiv
mov
std
mov
jmp
loopne
sbb
call
loopne
xor
xchg
repz
pop
(bad)
(bad)
(bad)
inc
add
mov
xchg
sbb
test
icebp
je
imul
xor
loop
ja
cmp
(bad)
jp
js
add
mov
or
idiv
je
adc
jl
cmp
fst
outs
mov
push
mov
int3
inc
test
cld
jl
mov
iret
fmul
lods
add
jp
add
out
hlt
stos
inc
call
loope
rol
dec
(bad)
aaa
sti
pop
mov
movs
cmp
or
neg
shl
aaa
or
daa
mov
int
mov
mov
popf
cwde
cli
mov
mov
das
xchg
outs
or
inc
sbb
adc
das
jbe
sub
stos
cmps
fiadd
lea
mov
enter
sbb
out
in
mov
daa
mov
arpl
and
adc
cwde
push
into
jns
inc
sti
out
(bad)
push
pusha
outs
sbb
js
movs
xchg
loope
pop
dec
mov
pop
mov
hlt
add
adc
dec
fisubr
push
std
movs
pusha
push
inc
daa
out
dec
inc
or
lea
dec
into
jge
jecxz
sbb
sub
adc
sbb
(bad)
jp
xchg
lds
or
pop
lods
(bad)
mov
leave
fs
xchg
mov
fs
adc
ss
cmp
shl
mov
dec
icebp
or
das
int3
add
jg
outs
or
mov
cmp
mov
cmps
sub
push
cmc
dec
in
sub
push
leave
repz
in
jge
call
and
repnz
sbb
lea
sub
mov
sub
test
jg
jmp
xchg
adc
push
out
jno
call
mov
and
pop
div
cli
dec
rcl
ja
aas
lods
mov
cli
not
mov
mov
cdq
test
imul
jmp
push
hlt
inc
jnp
repz
adc
dec
std
push
cmp
imul
xchg
inc
daa
add
call
cli
stos
lahf
inc
iret
xchg
mov
jns
adc
xchg
fdivr
fwait
pop
cwde
push
jmp
xlat
mov
jne
mov
cmp
xchg
addr16
nop
pusha
or
outs
or
out
sub
push
sti
push
in
jge
xchg
and
pop
jns
jecxz
inc
adc
xor
inc
fsub
xchg
aaa
mov
mov
adc
jg
fsubr
ret
cld
adc
sub
pop
mov
retf
xchg
sbb
sub
jae
mov
jno
fnstcw
xchg
pop
inc
sbb
cmp
ds
push
sub
mov
mov
shr
repz
adc
or
movs
into
mov
das
dec
push
call
sub
cmp
sub
js
hlt
out
mov
ds
mov
aas
ret
cmp
add
sahf
fucomip
xchg
stc
shl
xchg
push
jno
pusha
xor
pop
pop
cld
mov
sub
jbe
xor
dec
cmp
xor
add
mov
icebp
aaa
out
outs
stos
jnp
pop
pop
bound
in
scas
push
data16
ds
mov
addr16
stos
cs
ss
stos
inc
mov
xchg
mov
push
stos
mov
retf
cmp
push
mov
mov
xor
aas
dec
jecxz
test
push
mov
popa
xor
ret
repnz
jns
or
xchg
aaa
je
nop
pusha
jmp
enter
push
cs
jge
and
call
(bad)
cmp
cmp
push
pop
push
cmp
lahf
test
arpl
pop
out
mov
test
popf
mov
movs
ins
sbb
scas
imul
pop
hlt
ds
(bad)
retf
stc
xor
inc
and
mov
mov
or
loopne
inc
inc
jmp
jle
mov
xchg
jno
add
inc
in
xor
mov
dec
inc
or
fs
lahf
pop
sub
fcompp
outs
push
xor
call
cld
sti
and
sbb
inc
mov
shl
sub
sbb
rol
jge
rcr
ror
adc
ret
cs
adc
imul
out
xchg
push
mov
(bad)
data16
loope
retf
mov
adc
or
jbe
aam
dec
xchg
es
mov
jge
sahf
pop
pop
adc
add
sub
inc
adc
mov
retf
test
sub
mov
pop
mov
ret
xor
dec
inc
push
icebp
mov
pop
mov
(bad)
mul
es
mov
or
xor
or
int3
dec
xor
xor
pop
xchg
fst
cmp
xchg
adc
cmp
fidivr
sub
mov
xchg
lahf
cwde
idiv
add
xor
pop
push
icebp
hlt
xchg
aas
sub
xor
inc
mov
mov
loopne
inc
stc
stc
int
int3
test
aad
call
test
aam
rcl
mov
push
ss
dec
dec
xor
adc
fimul
cmp
or
clc
xchg
je
or
add
cmp
pop
add
stos
pop
cmp
call
aaa
cmp
ficomp
mov
les
push
push
xor
inc
rcr
pop
mov
test
sbb
aaa
adc
and
ins
int
fcmovnb
or
shl
xchg
add
aas
xchg
dec
xor
je
(bad)
xor
nop
es
sbb
out
jo
cmp
js
mov
imul
adc
push
dec
push
pop
loope
dec
jmp
and
jae
cmp
and
push
add
xchg
test
iret
ror
push
out
js
inc
stos
add
enter
neg
jb
cmps
stos
mov
xchg
cld
inc
out
pop
imul
fldenv
ret
adc
push
cmp
pop
mov
sub
mov
test
add
xchg
xor
and
add
sub
leave
adc
add
sub
fld
jecxz
imul
out
ss
(bad)
adc
test
ror
retf
cmc
pop
(bad)
clc
sti
ror
arpl
out
adc
adc
mov
es
out
mov
mov
mov
mov
je
std
leave
(bad)
les
push
jl
popf
ret
adc
lock
sub
cmps
lock
fs
dec
int
(bad)
and
sbb
js
mov
xchg
cli
inc
ja
arpl
pop
push
cli
cdq
and
xchg
cmc
shr
and
cmp
daa
pop
mov
aaa
test
mov
into
call
pop
leave
iret
pusha
or
js
cwde
fwait
jo
mov
mov
sub
adc
jle
popf
and
adc
and
hlt
imul
ret
add
test
dec
dec
nop
add
mov
jmp
bound
push
sbb
cs
xchg
xor
je
ds
jge
push
cmp
gs
sti
xor
cmp
das
fstp
sbb
mov
rcr
jb
inc
fwait
ins
mov
and
in
mov
je
push
popa
les
js
outs
ret
fcomp
jmp
sub
stos
xchg
or
ja
cmps
mov
sahf
dec
call
test
jno
push
(bad)
xchg
test
inc
fdiv
rol
loop
ret
loopne
push
xchg
test
sub
aas
jecxz
shl
and
shr
or
and
clc
jmp
adc
jne
mov
push
xlat
dec
xor
or
cmp
aad
xlat
je
xchg
mov
inc
(bad)
imul
retf
cmp
clc
sub
add
cdq
xchg
stc
lock
fstp
pop
fmul
clc
out
gs
cmc
or
mov
xor
lahf
pop
imul
mov
cmp
push
lahf
les
and
lea
ds
test
enter
js
sbb
call
pop
and
adc
test
xlat
sbb
add
adc
iret
or
loopne
mov
rep
jmp
pop
inc
mov
out
mov
nop
xor
adc
les
xor
les
out
push
fmul
mov
lea
jmpw
xor
mov
cmp
int
jmp
xchg
push
xor
sar
cld
bound
call
pushf
pusha
iret
xor
arpl
(bad)
jge
mov
or
pop
rol
adc
ror
mov
das
adc
es
daa
loope
popf
test
bound
enter
js
ins
outs
mov
out
mov
ret
retf
mov
enter
and
and
or
push
xor
popf
outs
dec
xor
mov
mov
or
mov
pop
cmp
mov
enter
lods
mov
pop
mov
imul
xor
aam
push
repnz
imul
lods
add
pop
(bad)
fstp
add
xchg
not
and
(bad)
adc
sub
push
push
push
cmc
test
or
das
pop
mov
movs
mov
dec
mov
xchg
imul
and
int
jb
or
test
dec
mov
mov
fld
push
fwait
imul
adc
pop
in
int
loop
cmp
cdq
js
mov
ret
dec
cs
xchg
jno
aaa
test
jno
inc
(bad)
mov
jnp
push
cli
sub
fdivr
jle
add
xor
fld
mov
and
mov
mov
jns
popf
fisub
push
bound
xor
xchg
dec
jno
or
jns
aas
lea
xchg
ins
xor
adc
mov
or
arpl
mov
leave
pusha
xor
xchg
(bad)
es
aad
mov
sbb
adc
popf
jmp
dec
jl
cmp
pop
xchg
das
enter
outs
adc
jb
or
inc
mov
repz
lods
pop
sbb
add
shr
push
fldcw
fsubp
(bad)
mov
jno
ja
icebp
mov
retf
cmp
lea
adc
xlat
fld
ins
lods
aad
cld
or
pop
rol
shr
loope
addr16
inc
aad
(bad)
adc
popf
ficom
out
sub
mov
sbb
add
jge
xchg
lods
adc
mov
dec
push
aad
nop
aaa
inc
inc
ja
mov
mov
sbb
push
imul
scas
ss
loopne
xor
and
scas
test
push
stc
inc
inc
push
jno
mov
push
into
jp
jnp
sti
dec
xchg
in
cli
mov
and
(bad)
push
push
dec
les
mov
test
or
pop
push
mov
jecxz
(bad)
fistp
cmp
in
sbb
icebp
add
cmp
or
retf
ret
fisttp
mov
shr
and
sub
scas
loop
or
jge
inc
dec
imul
rcl
or
sub
jo
mov
pop
hlt
neg
mov
push
lea
cmp
xchg
dec
stc
pop
retf
in
and
stos
mov
cmps
xor
fsubr
jp
stc
aaa
jo
jle
stc
sbb
test
add
cmps
ret
mov
aaa
mov
and
xor
outs
xchg
scas
inc
loopne
inc
cmp
jg
ds
daa
stos
sbb
jg
gs
adc
bound
sti
pop
int
jl
ins
stc
xchg
cmp
leave
mov
push
rcr
add
les
mov
(bad)
in
pop
popa
inc
mov
fmul
inc
jno
mov
repz
test
xor
or
sbb
(bad)
adc
mov
or
mov
and
lea
mov
push
ins
cld
scas
addr16
retf
pop
push
adc
ja
jle
xlat
retf
cmp
nop
out
dec
jge
stos
cmp
jb
popf
pop
stos
mov
adc
mov
je
adc
fwait
cmp
dec
bound
test
js
and
inc
cli
inc
xchg
dec
daa
outs
sub
aas
jmp
cwde
sub
pop
adc
loopne
xchg
adc
cmp
xchg
xchg
stc
scas
sub
cmps
and
cdq
std
mov
mov
sti
dec
push
adc
pushf
mov
fadd
xor
daa
leave
mov
popf
arpl
clc
stc
fcomp
scas
popf
inc
in
sbb
mov
pop
test
int3
adc
and
inc
push
test
adc
mov
(bad)
out
xor
cmps
cmps
sub
lock
jecxz
jae
ss
loopne
or
adc
xor
sub
mov
fild
inc
sbb
sbb
ret
(bad)
cld
arpl
enter
cmc
dec
sub
out
cmp
(bad)
fistp
std
call
push
add
les
pop
test
ins
ds
adc
sub
mov
ret
mov
test
pop
add
cmp
ds
add
ret
loope
retf
int
dec
mov
dec
inc
loop
enter
pop
mov
popa
mov
cmp
push
or
out
fs
push
jmp
mov
mov
sahf
jg
loope
xchg
jecxz
ret
retf
imul
aam
push
sbb
rcl
fmul
cmp
test
fsubr
sar
adc
(bad)
enter
xchg
ret
and
pop
pop
or
mov
add
add
int
adc
pop
and
mov
ja
inc
or
mul
nop
aad
repnz
out
and
cli
retf
add
shl
add
bound
pop
xlat
popa
inc
push
xchg
imul
iret
outs
inc
mov
sub
iret
dec
cmp
idiv
jge
adc
xchg
fwait
in
stos
jle
(bad)
pushf
neg
dec
inc
push
int3
xchg
sbb
inc
scas
fs
test
xchg
xor
jns
fwait
sub
cs
fisttp
lods
mov
push
ins
repnz
(bad)
push
mov
mov
mov
gs
outs
and
shr
add
inc
ins
stc
sub
in
xor
(bad)
leave
push
repnz
sbb
jnp
shl
jne
xchg
pushf
jmp
je
sbb
mov
add
adc
push
cwde
pusha
mov
imul
imul
xchg
(bad)
std
pop
pop
mov
xchg
jno
in
nop
mov
(bad)
xchg
sbb
xchg
pop
sub
xlat
test
mov
inc
faddp
or
xchg
adc
lock
bound
inc
pop
dec
js
(bad)
test
inc
mov
push
in
(bad)
xor
shl
cmc
inc
or
in
(bad)
in
push
and
call
nop
xor
mov
aam
fimul
(bad)
jae
mov
ins
adc
mov
mov
jae
aam
sub
jmp
mov
icebp
push
out
push
mov
sbb
frstor
sbb
push
pop
dec
jns
pushf
and
lock
sub
inc
xor
std
iret
xchg
repnz
test
jmp
push
cld
adc
fnstenv
in
inc
add
out
daa
shl
mov
jo
and
pop
cli
fs
inc
fnstsw
out
mul
test
mov
inc
pop
mov
xor
sets
fsub
jbe
in
xor
aam
hlt
xchg
sbb
push
pop
cmp
jmp
sbb
xor
cmps
movs
cmp
jmp
jnp
dec
mov
aaa
push
cli
mov
ins
ds
dec
jl
leave
out
mov
rol
popa
enter
sar
outs
xor
add
push
ja
jbe
cmp
mov
add
or
sbb
inc
sbb
add
fstp
in
cmp
and
rol
and
sahf
mov
fwait
inc
(bad)
cli
cmp
cmp
das
sti
xchg
jg
sbb
jle
inc
push
jb
stos
fild
test
mov
sbb
or
or
xchg
(bad)
or
cmp
aam
xchg
adc
dec
ret
jecxz
aam
stos
dec
in
stc
cmps
out
xchg
or
add
dec
jno
test
mov
(bad)
jg
mov
xchg
nop
cmps
jge
adc
push
sbb
sub
into
gs
stos
cmc
mov
mov
lods
in
pop
lods
outs
sub
cmp
daa
push
data16
cmps
sub
sbb
mov
outs
jo
sbb
xchg
xor
aaa
sbb
retf
popa
dec
xchg
jno
(bad)
in
fldcw
xchg
pop
stos
mov
(bad)
cdq
loop
imul
dec
xchg
xchg
or
inc
lods
push
(bad)
(bad)
loope
inc
lds
shl
jne
sub
cmp
xchg
std
add
fld
fimul
pop
adc
test
mov
cmp
or
aas
scas
leave
loopne
sti
out
jmp
mov
sbb
inc
psllq
push
xchg
sub
cli
sub
push
mov
inc
repz
movs
seto
jecxz
ficom
cmp
push
adc
arpl
std
adc
inc
repz
repz
push
jae
pop
cmp
shl
(bad)
inc
mov
and
cmp
repnz
dec
outs
fwait
test
jg
ins
mov
push
pop
mov
add
movs
ins
jae
sbb
jg
fucomip
test
jg
cld
xchg
repnz
icebp
adc
cmp
mov
mov
jnp
loopne
ss
test
int3
(bad)
cmc
add
jne
jmp
dec
adc
and
or
mov
movs
and
sub
add
je
cs
mov
movs
ret
and
hlt
fisttp
das
pusha
adc
mov
push
or
xchg
fwait
jge
push
inc
cdq
cdq
sub
call
and
xchg
mov
faddp
sub
push
add
mov
outs
cmp
xor
mov
gs
loopne
add
sbb
fwait
rcr
jmp
loopne
in
mov
pop
enter
pop
jecxz
pop
ss
movs
mov
fcom
mov
mov
jg
mov
fdivr
movs
ret
mov
and
mov
imul
and
push
jns
ret
or
and
pop
cmp
fistp
or
xchg
jb
push
jge
pop
xchg
shr
mov
xchg
and
sub
mov
add
mov
rcl
mov
aad
neg
or
adc
aam
xchg
mov
jmp
(bad)
in
data16
cmp
imul
in
or
rol
xchg
in
xor
mov
xchg
rol
ror
mov
xor
out
(bad)
jmp
or
loop
pushf
in
pop
xor
mov
jle
repnz
cld
adc
sbb
cmp
addr16
outs
xlat
push
repz
push
mov
xchg
in
(bad)
jge
jno
xor
push
adc
add
fcom
push
xchg
(bad)
jae
retf
jecxz
cli
rol
bound
imul
and
dec
shl
js
push
icebp
cmp
sub
dec
aas
mov
sbb
(bad)
test
es
fidivr
aad
lahf
repz
out
push
pushf
pop
or
jmp
dec
pop
sub
or
cmps
test
cs
mov
mov
add
inc
ins
xor
mov
sub
and
xchg
cmps
xchg
pushf
bound
ja
dec
pushf
sbb
adc
adc
pushf
sbb
xor
inc
xchg
jne
sub
jnp
pop
shl
les
pop
sbb
adc
or
sub
or
xchg
inc
and
inc
out
sbb
scas
(bad)
pop
sub
add
cli
push
jae
mov
mov
or
jb
mov
out
leave
js
jmp
or
ret
pop
int3
sub
and
lods
fisubr
add
sbb
mov
enter
sbb
and
inc
mov
aam
add
mov
mov
repnz
add
xchg
mov
cmp
imul
pop
loopne
out
mov
lahf
shr
popf
movs
push
mov
cs
out
inc
cmp
test
(bad)
pop
sbb
loopne
mov
inc
loope
mov
mov
(bad)
xor
sub
pop
inc
ins
pushf
cmp
jne
or
retf
xor
or
sub
jl
push
enter
cmc
inc
dec
jg
les
jbe
xor
push
scas
push
inc
sbb
cmc
ret
push
inc
int
push
shl
cli
shl
cs
bound
div
xor
mov
repz
leave
cli
sbb
inc
pop
dec
cmps
stos
pop
push
cmp
xlat
or
lock
and
xchg
or
dec
jb
out
aas
mov
pop
lods
fcom
js
out
mov
xchg
fdivr
sub
scas
mov
mov
add
pop
add
mov
retf
mov
sub
clc
sti
jl
pop
jmp
movs
mov
xor
mov
sbb
ja
retf
mov
push
(bad)
sub
shr
push
jle
imul
in
into
and
(bad)
mov
pop
xor
call
mov
aaa
arpl
pop
js
adc
push
lahf
in
inc
call
adc
clc
test
test
and
jecxz
push
fs
push
retf
cmp
pop
push
pop
cld
cs
adc
mov
cld
mov
lds
adc
js
and
(bad)
sti
in
sub
push
add
cwde
imul
and
xor
mov
push
call
mov
loop
ror
mov
out
add
sbb
pop
mov
out
fcmovb
in
das
xchg
test
adc
mov
mov
out
ins
pop
fwait
cli
clc
xchg
jp
push
xchg
xchg
push
cmp
or
aam
lahf
dec
and
mov
pop
idiv
loop
inc
call
ror
adc
out
pop
imul
nop
(bad)
dec
cs
es
ins
push
retf
nop
push
data16
mov
push
sbb
fs
pop
adc
into
push
movs
sub
xchg
push
mov
(bad)
pop
aam
aas
push
repnz
shl
jmp
enter
rol
xchg
push
add
fsub
fld
and
mov
xchg
mov
inc
pushf
imul
(bad)
sub
cmp
jae
sub
or
dec
sbb
jbe
out
movs
fsubr
mov
cdq
imul
sub
mov
mov
fcom
shl
inc
outs
cmp
and
dec
dec
pushf
xor
mov
repz
sub
jns
sbb
iret
scas
mov
loop
stos
inc
ss
jmp
leave
inc
test
lahf
lea
mov
lds
ret
adc
xchg
movs
push
add
sar
inc
fwait
add
adc
push
les
cli
mov
enter
imul
pop
movs
sbb
imul
add
bnd
jo
std
mov
push
jg
fdiv
cld
sahf
adc
lea
jmp
lea
jg
fdivr
fadd
mov
ret
call
add
jo
xor
mov
imul
repz
ret
add
(bad)
int
add
outs
mov
daa
daa
(bad)
fld
cli
test
mov
adc
mov
out
or
retf
retf
gs
inc
push
push
mov
shl
jno
mov
inc
jg
jne
jnp
jbe
ss
daa
js
out
and
(bad)
scas
jne
or
call
icebp
xor
fstp
pop
ror
dec
(bad)
sti
mov
jmp
test
icebp
sub
sub
inc
into
and
sbb
push
xchg
and
retf
lock
call
xor
cwde
add
or
rcl
sub
cmp
pop
inc
pop
imul
pop
(bad)
(bad)
jno
fs
lods
fsubr
mov
adc
leave
xor
add
pop
jns
xor
adc
inc
sbb
cmp
and
inc
mov
outs
sub
mov
xchg
pop
cmp
push
mov
dec
and
jg
dec
jne
popf
hlt
cmp
js
sbb
xchg
inc
adc
dec
hlt
inc
ficom
loop
retf
lock
enter
(bad)
dec
jecxz
push
fcomp
outs
pop
pcmpgtw
mov
mov
cmp
xor
add
iret
sbb
jns
jl
mov
into
loopne
(bad)
jle
dec
inc
pop
popa
xchg
test
add
repnz
retf
push
mov
xchg
adc
dec
and
es
cmp
les
fs
ror
cmp
add
and
mov
mov
and
jbe
push
outs
pop
jmp
in
inc
jmp
daa
cmp
inc
pop
ror
or
lock
xor
mov
dec
icebp
mov
js
cmp
in
pop
ins
enter
mov
movs
sub
out
lea
dec
mov
pop
repnz
je
loopne
lds
enter
mov
ds
jmp
fsubr
mov
push
jne
mov
fcom
ret
mov
inc
fdiv
test
mov
xchg
in
mov
ins
pop
mov
cmp
inc
pop
or
mul
shl
cli
xchg
test
push
jle
pop
and
jo
je
daa
mov
add
ins
lock
fld
jge
cmp
imul
mov
into
mov
fild
stos
mov
(bad)
jmp
ins
add
mov
cmp
in
cwde
xor
out
dec
scas
xor
(bad)
gs
sbb
dec
add
xchg
xor
out
mov
jae
retf
ret
das
mov
xchg
sar
ins
ffree
push
loop
outs
sbb
jns
outs
xchg
inc
mov
pop
repnz
push
or
cmp
mov
cmp
in
jne
lahf
mov
sub
sub
das
push
mov
pop
out
js
dec
into
dec
stc
lods
jle
dec
test
outs
inc
inc
push
mov
in
fwait
bound
outs
inc
push
sbb
pop
ins
fadd
or
cmp
outs
pop
dec
in
pushf
adc
mov
(bad)
setne
cmp
popf
pop
add
in
les
inc
into
pushf
in
pusha
xor
retf
test
rcl
dec
jne
fldenv
and
lea
ja
mov
les
mov
imul
add
pop
mov
retf
in
or
dec
loope
sub
mov
test
out
mov
cmp
(bad)
xor
add
dec
jl
out
iret
sub
movs
ret
mov
mov
sbb
in
call
push
mov
jp
push
pop
push
call
bound
push
mov
pop
aaa
nop
dec
mov
xchg
sbb
inc
out
or
jb
in
and
adc
xchg
sbb
std
icebp
dec
xlat
pop
and
dec
pop
(bad)
enter
test
mov
stos
lock
outs
or
xchg
and
mov
mov
imul
mov
sar
(bad)
mov
sti
dec
push
les
and
cmp
dec
push
push
jecxz
pop
retf
outs
cmps
and
lock
es
(bad)
out
ins
jbe
(bad)
cmp
sub
dec
mov
jb
shr
shl
retf
arpl
sbb
fild
mov
or
popa
(bad)
inc
aad
sti
aad
iret
icebp
mov
es
dec
push
movs
aad
cwde
add
jg
(bad)
sub
ds
cli
clc
sub
or
push
sbb
sub
nop
fwait
and
sub
retf
mov
xor
stos
push
movs
(bad)
pop
pop
mov
repz
std
jmp
mov
push
cs
add
ret
or
int3
es
jns
ficom
lahf
in
sub
leave
(bad)
in
and
xchg
sub
mov
inc
retf
mov
xlat
add
cmps
xor
mov
xchg
sub
and
pushf
cwde
hlt
xor
sub
sub
imul
shl
imul
cmp
or
shr
pop
and
adc
push
cwde
sti
and
test
hlt
cli
hlt
inc
fs
imul
lea
aad
outs
mov
pop
push
mov
shl
fimul
adc
or
lods
pop
mov
cmp
mov
icebp
and
mov
nop
shr
mov
dec
jle
push
add
loop
mov
nop
sub
pushf
and
scas
test
inc
mov
lods
sub
mov
add
mov
sbb
fstp
ror
hlt
sbb
dec
loope
push
sub
lea
sbb
mov
test
test
add
adc
jb
or
cwde
adc
nop
add
shl
sbb
mov
dec
(bad)
into
jmp
cmps
or
js
sub
rcl
bound
(bad)
xchg
fldcw
xchg
or
popa
mov
cmp
jbe
push
rcr
outs
xor
(bad)
cld
xchg
clc
into
test
add
jne
mov
ds
adc
gs
lahf
outs
pop
jne
retf
push
mov
add
and
sbb
ficom
jle
sti
ror
arpl
out
cmp
lock
inc
and
stos
pop
dec
aaa
push
inc
mov
pop
imul
xchg
push
pop
adc
jb
stc
xchg
pop
sub
cwde
sub
mov
sbb
ffree
inc
ret
mov
add
add
pusha
mov
cmp
js
xchg
stc
ja
push
cdq
fmulp
lods
jae
in
pop
mov
push
inc
movs
mov
add
push
sahf
xor
dec
mov
add
push
fsub
jne
nop
les
outs
cmp
jecxz
add
ret
hlt
sub
add
xor
sub
jne
inc
into
adc
xchg
inc
pop
mov
and
xor
push
adc
not
out
xor
sub
fld
adc
push
add
dec
push
std
and
push
xchg
cdq
(bad)
cmc
lea
aaa
(bad)
test
dec
mov
pop
cmc
add
inc
mov
push
push
hlt
xor
shl
fimul
and
ret
add
call
mov
add
pop
mov
xor
les
dec
jo
lahf
inc
in
push
cdq
adc
fsubrp
push
and
jbe
push
push
jge
bnd
leave
imul
jmp
out
xor
repz
es
sbb
imul
push
shl
ficomp
mov
push
cdq
mov
imul
or
call
leave
out
mov
cmp
jg
jno
out
xchg
add
fadd
(bad)
loope
fstp
dec
add
mov
gs
dec
es
pop
popf
push
out
push
in
and
pop
inc
cmp
xchg
hlt
mov
pop
jne
mov
addr16
nop
stos
test
lds
stos
outs
mov
stc
(bad)
cmp
jmp
mov
inc
je
sub
push
xor
add
jg
fld
lods
inc
fistp
ret
cmp
(bad)
mov
dec
arpl
pop
or
aad
mov
cmp
add
cmp
pop
sub
jae
pop
(bad)
push
sub
push
inc
mov
add
loopne
mov
push
add
popf
push
sbb
sbb
adc
inc
push
cdq
(bad)
std
adc
fdiv
(bad)
mov
push
mul
xor
adc
dec
jge
lahf
dec
stos
cli
ja
cmp
pop
dec
jnp
retf
push
rcr
repnz
jae
nop
push
daa
dec
or
mov
cmc
(bad)
out
mov
call
stos
repz
pop
fsubr
enter
nop
pushf
sahf
add
jbe
repnz
mov
xor
and
sahf
call
das
test
call
out
or
pop
or
add
aas
(bad)
bts
pop
clc
jmp
or
xlat
add
sbb
mov
addr16
ja
jnp
add
adc
jnp
jb
mov
mov
ss
mov
enter
imul
mov
cmp
jge
popa
popa
adc
and
fs
mov
(bad)
(bad)
push
mov
ins
sar
pop
test
sbb
loope
rcl
jne
cmp
sbb
not
repnz
mov
or
retf
xchg
popa
push
icebp
test
jge
sub
and
(bad)
cli
and
mov
adc
out
mov
js
aam
mov
mov
mov
es
push
mov
inc
or
out
fwait
shl
out
push
mov
mov
sub
mov
adc
lock
test
xchg
packssdw
pop
or
and
dec
dec
mov
jb
adc
cld
inc
fwait
mov
cmps
popa
aad
sub
mov
loope
adc
repnz
into
inc
mov
inc
and
test
lods
jg
out
mov
jmp
test
lds
loopne
dec
dec
inc
iret
imul
pop
xor
ret
jecxz
xchg
xor
retf
sub
jg
mov
push
sbb
movs
(bad)
fild
xchg
ficom
rcr
ins
stc
movs
push
cmp
jne
xchg
mov
loopne
(bad)
mov
cmp
inc
cmp
inc
pop
frstpm(287
xor
fimul
mov
call
call
popa
test
idiv
dec
cli
sub
adc
add
test
push
sub
popf
and
pop
loop
stc
xor
(bad)
cmps
or
mov
out
inc
retf
outs
add
shl
out
leave
cdq
sub
or
or
mov
or
cmp
lods
clc
push
mov
stos
mov
cmps
xor
dec
push
and
lods
dec
int
(bad)
sbb
fwait
jbe
cdq
sbb
push
dec
outs
adc
ficom
loopne
stos
jne
test
jbe
pop
loop
outs
sahf
xor
popa
pop
in
aam
arpl
aad
loop
mov
test
mov
adc
add
ja
pop
or
shl
sbb
ds
or
in
sub
es
test
sbb
aam
push
push
mov
std
xor
in
jmp
imul
push
imul
and
sub
loope
sbb
jb
ss
cwde
or
cli
add
mov
loopne
or
mov
popa
inc
jnp
xchg
lods
in
push
(bad)
jo
je
outs
xor
sub
enter
sub
mov
test
mov
in
sub
cmp
jo
inc
mov
les
pop
dec
sbb
mov
xchg
not
push
cli
out
test
test
clc
scas
jl
jno
sub
(bad)
pop
jb
cmp
jmp
or
xchg
fiadd
cmp
add
adc
cmp
inc
test
mov
mov
mov
mov
push
fcmovne
mov
in
cmp
mov
out
sub
push
inc
cdq
or
js
fidiv
int
dec
jb
cmps
sbb
gs
cli
mov
adc
mov
into
dec
cmp
shr
fst
popf
dec
jns
push
cld
(bad)
xchg
add
dec
pop
and
cwde
sub
pop
push
xor
loopne
aaa
inc
jno
fwait
loopne
xor
rcr
add
(bad)
ins
aas
mov
xchg
out
inc
daa
sti
out
test
movs
push
cdq
inc
and
cli
push
inc
aad
sub
adc
add
dec
lds
out
scas
sbb
cs
jmp
cmp
and
rol
jno
adc
dec
push
cmps
ins
jle
sahf
xor
fiadd
xchg
ins
loop
mov
retf
pop
sti
enter
sar
jb
xor
retf
adc
mov
xchg
cmp
(bad)
int3
aaa
and
pop
mov
ins
dec
xor
jnp
xchg
iret
in
cmp
pop
bound
jbe
inc
fstp
(bad)
push
(bad)
push
jb
jle
or
clc
pusha
outs
mov
addr16
jmp
push
cwde
jo
mov
push
mov
fst
pop
sub
push
stc
std
(bad)
sbb
xor
pop
test
lods
dec
inc
xlat
or
stc
jge
(bad)
mov
mov
mov
sti
xor
cmps
pop
xor
(bad)
xlat
jp
sub
rcr
test
or
adc
xchg
ret
in
mov
mov
pop
ud0
xchg
outs
sbb
jmp
out
xchg
outs
mov
call
imul
jle
icebp
xor
loop
push
retf
mov
push
fadd
dec
adc
fisttp
sbb
mov
ret
or
push
push
sbb
mov
add
jp
inc
jmp
js
into
xchg
pop
push
pop
jbe
mov
push
ss
rcr
and
shl
cmp
and
fist
mov
fs
scas
add
out
or
xchg
push
addr16
inc
addr16
(bad)
ja
test
jmp
in
je
out
(bad)
mov
outs
jae
mov
xchg
retf
ds
mov
test
ins
push
jmp
out
xchg
ss
xor
fwait
push
bound
jp
icebp
pop
jle
sub
cmp
fbld
jns
scas
in
cld
add
retf
stc
dec
xchg
jg
call
punpcklwd
sahf
es
adc
or
sub
addr16
add
ds
pop
clc
mov
lods
popf
sti
and
pop
xchg
inc
gs
shl
sbb
cmp
sbb
pop
jae
mov
add
ret
adc
or
retf
retf
sahf
cld
jge
and
jnp
pop
or
jmp
scas
or
mov
and
jmp
jmp
inc
lahf
cmps
(bad)
mov
xchg
ss
fimul
mov
addr16
jno
rcr
add
into
push
cmps
jecxz
mov
adc
mov
push
cli
les
ja
sahf
stc
jbe
aas
dec
fmul
cmps
mov
aas
or
jmp
mov
pop
pop
xchg
adc
mov
in
mov
ins
mov
pop
out
lds
add
mov
(bad)
push
mov
xor
push
sbb
ret
push
icebp
enter
data16
mov
cmp
outs
pop
push
ja
xchg
inc
(bad)
fcomp
xchg
ss
jb
pop
movsx
lahf
and
cmp
lock
inc
mov
fwait
mov
push
fnstenv
pop
or
mov
and
adc
inc
call
sbb
fs
cld
jecxz
ja
lods
pop
push
jmp
jb
lods
pop
mov
add
(bad)
sbb
xchg
inc
ins
aas
lods
test
(bad)
jmp
inc
sbb
imul
aaa
mov
push
call
xor
mov
add
outs
gs
fdivp
cmp
push
xchg
movlhps
clc
jno
xchg
jo
(bad)
movs
mov
mov
retf
inc
pop
ficomp
xchg
cli
es
rcl
sar
mov
lods
ja
cmp
mov
out
shl
cmp
jmp
mov
xor
mov
gs
outs
mov
out
sahf
mov
and
mov
sbb
lock
rol
mov
movs
and
popa
fldenv
mov
repnz
pop
mov
sbb
call
cmps
cmp
pop
in
fisub
pusha
pop
popf
dec
test
lea
test
add
fsub
in
inc
aad
push
pop
adc
inc
or
loope
lds
inc
mov
xchg
dec
dec
xor
test
call
push
add
sub
dec
mov
lods
mov
mov
push
mov
in
pop
inc
loope
sbb
xchg
xor
xchg
jge
or
gs
add
sub
cs
scas
jg
inc
dec
call
fisub
push
cdq
cmps
sub
call
add
rcl
or
(bad)
adc
mov
sbb
(bad)
(bad)
jmp
xor
jb
retf
fisttp
and
lahf
xchg
int3
adc
jge
lods
call
and
ds
or
jae
(bad)
test
out
ret
jg
dec
xchg
scas
pop
inc
enter
rol
mov
stos
sar
pop
adc
int3
dec
mov
xchg
mov
test
sub
xchg
daa
and
lock
xor
fdiv
pop
es
fldcw
cmp
sbb
je
outs
and
std
adc
push
inc
stc
xor
jb
ret
scas
lods
add
mov
ins
enter
cld
push
enter
scas
sar
adc
mov
xchg
pop
movs
(bad)
xchg
lahf
mov
or
sub
clc
jp
adc
adc
adc
rcr
inc
out
lahf
xor
stos
and
imul
int3
pop
mov
int
sti
and
ins
lods
test
imul
imul
xchg
xchg
mov
(bad)
aam
sbb
push
adc
ret
movs
cli
push
jb
rcl
push
cmp
out
scas
pop
jecxz
xor
loope
sar
adc
inc
and
inc
xchg
and
pop
pop
inc
cmc
repnz
inc
push
out
xlat
adc
shr
in
sbb
icebp
iret
call
(bad)
movs
(bad)
js
jne
jmp
xchg
shr
retf
mov
inc
enter
shl
jecxz
pop
add
sub
inc
rcr
sub
jg
cmp
dec
rcl
inc
inc
xchg
pop
ds
cld
rcl
fisubr
xchg
push
mov
sahf
mov
inc
(bad)
dec
fstp
cmps
inc
bound
xor
pusha
xor
call
sub
mov
fstp
leave
mov
pop
jne
mov
ficom
mov
xchg
xor
jl
mov
scas
xor
mov
jbe
rol
push
mov
in
add
jmp
or
pop
xchg
xor
push
mov
in
mov
xchg
pop
adc
xor
cmp
inc
jge
xchg
out
fisttp
cmp
fsubr
sub
push
jmp
jo
stos
sbb
fadd
jbe
retf
les
inc
inc
test
or
rcl
or
out
cmc
int
out
mov
leave
fild
pop
daa
mov
inc
mov
aam
mov
cmps
pusha
and
retf
shl
int3
xor
mov
cld
and
inc
add
pop
sub
pop
imul
cld
sbb
in
adc
int3
fiadd
mov
xchg
pop
cmp
mov
ins
mov
xor
jo
shr
ficom
jb
(bad)
pop
mov
xchg
push
dec
test
or
es
dec
fdivr
push
adc
sub
mov
and
popf
inc
loopne
mov
mov
sub
mov
rol
gs
jg
mov
jl
stos
mov
xchg
dec
mov
ins
mov
stos
leave
sete
adc
movs
ins
pop
enter
adc
mov
and
pop
or
mov
inc
pop
mov
add
sub
scas
std
xchg
pop
aad
icebp
mov
loope
bound
adc
jb
stos
leave
div
add
mov
xchg
popa
adc
jae
in
dec
sub
(bad)
cmp
adc
pop
ins
leave
out
xchg
xlat
sbb
or
and
shl
pop
jns
ror
push
inc
jl
fdivr
mov
aad
bound
push
or
push
fwait
mov
outs
xor
pop
int3
sub
xchg
pop
scas
fisubr
mov
pop
test
sbb
iret
inc
pop
sbb
xor
cmc
and
pop
(bad)
sti
mov
test
js
mov
dec
int
in
aam
sbb
fadd
fnstcw
outs
dec
enter
mov
add
sar
cmps
pusha
test
(bad)
sub
mov
inc
cmp
push
aaa
pop
add
jg
mov
sbb
push
push
push
fld
add
ins
and
out
fnstcw
lock
ret
jmp
popf
pop
jp
mov
adc
aad
pop
mov
test
mov
fcmovbe
jns
dec
or
or
clc
cmp
inc
repnz
cmp
repz
jb
adc
fcmovb
sub
(bad)
in
cmc
xor
sbb
xchg
sbb
popf
je
jo
gs
or
adc
test
and
ja
mov
dec
repz
jo
aad
sub
stos
dec
retf
mov
sub
inc
cmp
repz
jbe
jae
pop
(bad)
jnp
mov
repnz
mov
add
xchg
mov
out
out
mov
mov
out
ror
xchg
aam
jl
push
adc
(bad)
scas
mov
jmp
mov
call
xor
mov
push
rcr
fcmovu
cmps
fcomp
pop
or
cmp
bound
mov
scas
mov
cmp
or
call
cld
pop
cmps
cmp
outs
aas
adc
mov
mov
mov
pusha
push
push
ss
(bad)
std
fucomi
outs
pop
fstp
and
jne
add
cld
pusha
in
pop
(bad)
jge
cmp
xor
add
gs
iret
ret
fmul
ja
(bad)
sbb
ror
int
mov
inc
add
cs
dec
push
repz
shl
sbb
mov
adc
rol
lds
ror
push
inc
test
outs
or
call
jge
or
push
jg
pop
call
mov
out
cmp
adc
rcl
rcl
lea
cmp
out
loope
pop
mov
sahf
pop
ds
sahf
clc
pop
ds
mov
sub
les
jnp
push
mov
xchg
fwait
test
call
mov
and
pop
jbe
xor
inc
out
data16
mov
jmp
test
sub
outs
mov
das
ins
mov
or
loop
pop
div
sub
stos
add
test
fcom
imul
jbe
mov
lahf
push
xchg
cwde
cmp
or
popa
scas
dec
push
hlt
xor
mov
push
mov
push
jl
adc
jns
sbb
dec
cdq
and
sbb
pop
es
mov
and
stos
jmp
push
into
dec
call
ja
fsub
fst
scas
push
inc
and
test
sbb
(bad)
xor
retf
test
inc
adc
add
pop
push
bound
aas
adc
rcl
imul
pop
dec
xor
push
or
call
xchg
enter
int
inc
prefetchw
fwait
int3
jbe
mov
inc
popa
and
movs
dec
cs
lea
inc
and
xchg
push
push
xchg
adc
loopne
mov
dec
adc
inc
mov
sub
neg
push
jp
pop
scas
sbb
mov
aas
jmp
adc
adc
scas
push
sbb
pusha
adc
mul
dec
icebp
hlt
sbb
pop
adc
enter
fsub
cmps
push
aad
xor
inc
pop
sub
or
sbb
xor
daa
mov
xlat
push
rcl
mov
fcomp
ds
jb
std
daa
(bad)
out
out
xor
adc
std
or
scas
mov
mov
pop
inc
mov
rcr
push
push
shr
dec
adc
or
cmc
jl
fwait
nop
jmp
(bad)
mov
(bad)
pop
sub
push
dec
inc
cmp
fild
nop
fs
cmps
lods
and
sti
(bad)
mov
retf
mov
(bad)
das
stc
pop
dec
xor
jg
jmp
adc
shl
inc
loope
ja
xchg
repz
je
ret
dec
mov
repz
into
cmp
es
or
lock
pop
pop
aas
repnz
retf
mov
mov
mov
mov
addr16
clc
xchg
cld
jl
rol
inc
sbb
adc
aas
rcl
pop
mov
int
jle
in
mov
shl
sbb
lods
add
in
or
mov
rcl
jne
(bad)
fild
pushf
inc
rcl
mov
xor
xchg
ins
or
in
push
cld
jecxz
ror
pop
pop
sub
add
fild
xchg
cmp
mov
inc
push
push
in
ja
or
mov
loopne
loope
outs
mov
xchg
gs
data16
inc
mov
mov
pushf
or
jmp
sub
into
in
ja
iret
pusha
fwait
rcr
jns
outs
in
pop
cwde
mov
lea
les
jmp
xor
aad
dec
adc
push
test
or
adc
out
hlt
cmp
adc
sti
(bad)
loop
add
pop
jl
icebp
shl
repz
xchg
into
pop
(bad)
mov
cmc
cmp
mov
inc
fwait
test
jp
fistp
imul
and
sbb
pusha
xor
mov
lods
jecxz
arpl
cmps
imul
push
fcom
pop
mov
sbb
sbb
ficomp
add
mov
jns
js
rcl
jae
cmps
add
cmps
loop
sbb
inc
outs
dec
fwait
sahf
mov
mov
fneni(8087
scas
es
rcr
inc
mov
gs
test
mov
xchg
jl
lods
mov
push
daa
int3
jb
mov
(bad)
and
retf
sub
rol
ret
cs
jae
aas
xchg
and
cmp
nop
or
pop
add
pushf
sbb
pop
movs
xor
fisubr
mov
mov
cld
aam
std
sub
sbb
neg
dec
lods
dec
sub
loop
das
(bad)
das
ror
mov
in
sub
sub
mov
sbb
xlat
sbb
mov
loope
pop
ss
xor
mov
mov
mov
xchg
cld
cdq
and
xchg
div
inc
hlt
adc
fadd
jae
lods
dec
push
les
pushf
fcmovne
add
cmp
aam
push
push
pop
retf
adc
(bad)
push
push
out
fst
iret
lds
repnz
inc
mov
dec
or
mov
xor
(bad)
aam
out
adc
aas
loope
add
inc
mov
pop
cmc
std
cli
push
sub
push
lahf
call
mov
cld
xchg
inc
icebp
dec
in
xchg
xchg
lahf
mov
jnp
lods
fidivr
ror
cmp
fiadd
fnop
(bad)
into
jmp
sbb
fist
aad
add
adc
xor
cmp
push
loope
mov
inc
sti
or
dec
lods
shl
into
daa
dec
es
jbe
adc
add
jae
xor
and
aaa
mov
cmp
leavew
jne
pusha
scas
out
sbb
mov
add
xor
and
push
cmps
cs
rcl
mov
mov
lea
mov
inc
xchg
dec
inc
sub
sub
imul
std
lds
fs
sbb
fsubr
xlat
ss
mov
pop
jbe
stos
jle
daa
scas
iret
push
shr
mov
lock
add
xchg
lods
enter
ret
iret
loope
mov
cmp
xchg
popa
jae
outs
je
mov
jp
inc
xlat
xor
dec
jmp
jp
push
xchg
cwde
aam
pop
repz
data16
inc
xlat
jle
cmp
aaa
sbb
ja
cs
pop
call
and
adc
div
and
xor
jg
inc
jo
mov
xchg
clc
xor
jmp
pop
adc
rcl
pop
jmp
fmul
into
pusha
js
cmp
or
daa
jmp
sub
lds
repz
xchg
xchg
dec
jp
adc
int
dec
jb
cmc
mov
sar
dec
test
mov
jns
pushf
shl
dec
je
fwait
adc
mov
add
pop
movs
out
aam
mov
in
ret
or
sbb
cmp
dec
jns
vcvtss2si
cmp
int
add
push
das
dec
popf
dec
xor
fisttp
pshufw
jae
cmp
dec
ret
cmp
cmp
fild
das
mov
inc
xchg
sub
mov
test
dec
fs
mov
call
cwde
jnp
ret
jno
stos
mov
mov
stos
inc
ins
push
adc
cmp
je
and
push
(bad)
jle
mov
dec
mov
jae
dec
leave
cmps
icebp
das
por
pop
cmp
js
daa
aas
in
xor
jecxz
xchg
es
pop
mov
mov
mov
cmps
pushf
mov
adc
rcr
and
dec
push
test
sahf
movs
icebp
mov
xchg
push
cmps
nop
mov
adc
jmp
mov
je
leave
pop
prefetchw
test
push
(bad)
push
fidivr
fstp
sub
pop
sbb
jmp
pop
les
mov
jae
push
pop
push
sar
repnz
jno
icebp
fldenv
call
adc
xchg
inc
cli
add
cli
arpl
xchg
stos
mov
and
rcr
xchg
pop
push
mov
mov
popa
cmc
xchg
xchg
fsubr
xchg
imul
xchg
xchg
cmc
or
call
adc
arpl
push
jle
mov
sub
call
repnz
aam
test
push
outs
jecxz
mov
xor
push
inc
popf
sub
jecxz
clc
mov
enter
es
outs
aas
enter
mov
daa
or
(bad)
not
sbb
add
jmp
jb
mov
sbb
in
sbb
cmps
bound
pop
fcom
mov
leave
cmps
in
mov
sahf
mov
lahf
shl
inc
and
dec
mov
or
cmps
mov
test
add
add
sbb
push
xchg
test
add
mov
mov
jle
(bad)
push
scas
and
fisubr
xor
push
add
mov
push
ins
push
push
mov
std
push
cmc
mov
sbb
and
aad
(bad)
popf
mov
or
cmps
and
dec
sub
(bad)
and
rol
stos
ins
into
push
int3
mov
inc
stos
push
int3
movs
jbe
dec
adc
xchg
mov
cdq
pop
push
cmp
sar
cld
pop
jbe
pop
lods
call
je
call
mov
inc
inc
popa
gs
leave
out
and
push
pop
loopne
mov
mov
ins
inc
(bad)
(bad)
jne
xchg
pop
cs
fldcw
xchg
dec
mov
add
cmp
addr16
xor
ins
jg
cmc
pop
(bad)
(bad)
ficomp
bswap
stc
call
js
pop
nop
mov
lods
lods
and
add
sti
test
and
jb
push
sbb
mov
cmp
mov
and
cmps
in
cdq
inc
retf
dec
xor
pop
xchg
outs
sahf
pop
push
xchg
cmp
push
pop
push
dec
xchg
stos
loopne
popf
aas
outs
dec
xchg
into
loopne
sahf
inc
and
les
dec
xchg
jo
mov
(bad)
mov
inc
pop
jecxz
push
and
push
shr
xchg
sbb
mov
ins
or
pop
adc
or
scas
popaw
out
adc
(bad)
call
inc
jmp
sub
or
ror
out
lock
push
inc
mov
fmul
imul
ins
stos
dec
lock
cdq
pop
or
ins
inc
les
cs
test
mov
mov
jp
lods
repnz
aas
or
jmp
add
test
push
neg
cwde
adc
stos
add
lock
dec
retf
mov
ret
mov
je
sbb
push
pop
mov
out
das
push
xchg
and
fldcw
pop
fidiv
pop
inc
test
shl
mov
lods
mov
out
outs
xor
jne
pop
jmp
dec
pop
cmp
fcomp
int
test
or
cld
sbb
mov
cmp
mov
rcl
retf
sbb
les
mov
lds
sub
dec
adc
xor
mov
stc
mov
push
add
push
cmp
add
std
retf
mov
cwde
mov
push
jmp
xchg
mov
xchg
add
jecxz
jne
and
(bad)
mov
(bad)
fisubr
add
test
hlt
adc
fldenv
pop
arpl
aaa
dec
or
push
or
stos
movs
mov
xchg
shl
enter
cld
pop
loop
or
xchg
sub
out
adc
dec
aad
je
retf
outs
cmc
mov
in
lds
aad
arpl
xchg
frstor
in
push
cmp
aas
jmp
je
clc
lds
(bad)
sar
mov
bound
out
cwde
add
mov
xchg
out
or
jno
es
sbb
(bad)
out
hlt
xor
cmp
jne
or
pop
dec
xor
test
fsub
out
and
jbe
je
aas
data16
or
xchg
lock
js
adc
enter
xchg
adc
push
addr16
sbb
das
mov
call
call
retf
aam
sub
sbb
or
push
dec
pop
retf
scas
xchg
and
adc
push
dec
and
int
out
or
mov
sti
cmp
pop
cmp
mov
and
or
jecxz
idiv
(bad)
hlt
cmps
cwde
sbb
pop
retf
pop
mov
jp
add
movs
jl
ror
imul
jns
scas
mov
aaa
mov
cli
dec
jbe
mov
fadd
push
dec
add
adc
aas
adc
push
test
jmp
int3
jl
cmp
sub
test
xlat
ins
in
add
pop
les
and
push
lods
adc
inc
mov
retf
rol
push
arpl
pop
cli
mov
pop
mov
sbb
cmp
mov
sub
test
enter
jmp
inc
push
or
cmps
imul
or
pop
xlat
xor
std
es
push
cs
fsubr
rcr
cmps
inc
push
div
aad
test
jg
dec
rol
xor
dec
dec
add
psadbw
ja
push
and
ja
pop
jg
div
fst
sbb
xor
imul
mov
rcl
imul
sbb
cmp
push
pop
mov
adc
ficom
jle
mov
mov
(bad)
mov
inc
jmp
retf
out
mov
dec
pop
cmc
cmp
push
(bad)
(bad)
push
retf
mov
or
inc
mov
or
lods
push
xchg
jmp
add
ins
cdq
ret
xchg
aad
mov
les
push
sbb
push
dec
in
dec
in
je
xor
pop
cwde
inc
pop
adc
jp
xlat
push
or
xchg
shl
rcl
jmp
cld
cmp
shr
cmc
cmc
cli
shl
fdiv
adc
xchg
add
cmps
mov
sbb
rol
mov
xor
add
or
gs
cli
imul
outs
aam
outs
jecxz
cdq
jae
dec
ja
data16
sbb
xor
fnsave
sub
loopne
loopne
daa
mov
cmp
pushf
addr16
xor
pop
stc
daa
repz
jmp
jp
not
jge
pop
xchg
mov
ret
inc
xlat
push
push
lds
je
pop
inc
sub
add
dec
sbb
dec
div
xchg
xchg
outs
push
fidiv
rcr
sub
add
jmp
loope
stc
sub
pop
out
pop
int3
nop
call
inc
or
div
add
sti
cmp
jnp
or
out
mov
je
mov
aad
aam
jo
test
pop
or
xchg
add
out
out
push
sbb
mov
sub
scas
movs
cdq
mov
mov
outs
mov
jno
clc
ins
in
sub
dec
jmp
add
cwde
dec
outs
adc
ret
push
mov
out
xlat
jle
mov
aad
das
aad
clc
and
fsub
popa
or
in
mov
clc
jo
popf
dec
pop
mov
ret
test
ret
(bad)
out
and
lds
cmc
add
cli
sub
int
xor
mov
dec
sbb
inc
dec
dec
je
dec
xor
adc
(bad)
lock
cmp
mov
mov
inc
fild
sbb
add
cs
jl
or
fmul
and
add
xor
imul
add
fcmovbe
jge
ds
push
mov
int
dec
icebp
(bad)
add
pop
shr
stc
cmp
loop
das
ror
mov
fist
cmp
sub
and
sub
dec
adc
or
lea
fimul
ror
or
push
clc
mov
mov
cs
gs
repz
in
mov
mov
cmp
add
pop
imul
jmp
rol
xor
inc
iret
sbb
clc
enter
out
and
add
iret
sbb
test
lock
rcl
or
jle
popa
clc
into
or
fiadd
adc
dec
push
mov
sub
movs
jecxz
lds
sub
mov
cwde
lock
pop
or
rep
or
push
mov
add
imul
or
jae
test
mov
in
stc
pop
xor
sbb
imul
into
loopne
and
push
(bad)
imul
jbe
mov
or
xchg
neg
cmp
xchg
int
pop
pop
mov
(bad)
fld
mov
loop
repz
dec
jecxz
aas
dec
pop
imul
outs
popa
cmc
mov
loop
xchg
dec
call
test
xchg
test
out
inc
lods
sbb
clc
cmp
mov
lds
mov
movs
jecxz
push
scas
or
loopne
xor
dec
or
mov
pop
mov
cmp
loop
test
mov
mov
jl
pop
aaa
cmp
je
xchg
(bad)
adc
cld
int
loopne
repnz
bound
loopne
push
popf
mov
sbb
hlt
pop
xchg
cmp
mov
lds
or
pop
retf
adc
loopne
jbe
bound
iret
mov
or
pop
mov
fstp
xchg
(bad)
fidivr
jle
jae
push
xor
ficom
xchg
stos
sbb
jge
xchg
jecxz
std
push
(bad)
stos
mov
out
ror
loope
sub
and
add
leave
xor
fld
jnp
fdivp
mov
call
cmp
test
lods
cmp
adc
xlat
xor
jp
mov
mov
icebp
and
aaa
in
in
clc
xchg
xor
pop
ret
sbb
push
(bad)
loop
add
and
push
(bad)
push
jle
and
scas
cdq
not
add
mov
clc
xchg
mov
and
cdq
xlat
loope
js
xchg
mov
xchg
mov
cmps
dec
shl
test
fcmovnu
sbb
lods
movs
pop
pop
add
jbe
and
cmps
mov
jbe
out
adc
cs
imul
push
pop
sbb
fwait
cmp
scas
test
fwait
rcl
inc
mov
mov
(bad)
gs
or
call
inc
jmp
adc
mov
icebp
call
outs
inc
std
loope
push
leave
dec
(bad)
mov
in
scas
inc
jg
jns
je
and
fcom
jne
mov
push
sub
xor
pop
or
xor
mov
in
sbb
shr
inc
pop
fcom
jge
adc
test
cmc
jmp
xchg
xor
out
dec
pushf
repz
dec
pusha
rdpmc
jp
(bad)
push
jnp
fild
call
pushf
add
push
test
and
inc
scas
add
lds
xor
popa
repz
cs
dec
cli
xor
xchg
lahf
outs
push
xchg
popf
je
xchg
xchg
sub
xor
pop
scas
mov
fs
jecxz
ins
cld
shl
call
fwait
mov
dec
bound
ja
mov
ror
sbb
xchg
stos
mov
mov
int
xor
adc
cli
mov
loop
inc
cmp
add
inc
cli
dec
push
loope
cmp
mov
mov
adc
leave
jmp
movs
cmp
js
loope
bound
xchg
mov
and
lods
jge
loop
jecxz
mov
ins
shl
mov
(bad)
mov
sbb
sar
scas
(bad)
pusha
mov
push
lahf
call
aam
xor
or
aaa
mov
inc
mov
or
aam
jl
sbb
lahf
add
mov
fisub
xchg
in
into
push
ins
js
sbb
jmp
aaa
(bad)
stos
cmp
test
loopne
inc
mov
xor
ds
mov
cmc
daa
out
aam
stos
(bad)
neg
mov
mov
fs
pop
sbb
inc
adc
mov
test
cmp
pop
jl
mov
xchg
out
xor
mov
sbb
or
mov
test
dec
xchg
push
push
icebp
push
mov
or
leave
int
in
nop
add
and
sub
js
mov
ss
xchg
jo
std
add
mov
pop
inc
cs
mov
xchg
or
out
pop
std
add
or
mov
or
cmp
aas
pop
sbb
daa
push
push
aad
les
mov
xchg
cmp
stc
jle
int3
and
cmc
or
pop
cmp
imul
jbe
cmp
loopne
fucomip
inc
sub
and
and
mov
jno
out
push
mov
or
aaa
daa
and
inc
shl
pop
std
pop
xor
and
(bad)
pop
test
push
mov
xchg
aas
pop
das
ja
fsubrp
jg
out
inc
add
test
fidiv
pop
movs
loop
jmp
and
cmp
and
inc
mov
cdq
in
pusha
push
add
je
lock
mov
cmp
mov
push
pushf
sbb
push
arpl
sub
mov
cmp
loope
and
jb
sahf
call
(bad)
xor
push
mov
retf
mov
pop
jg
div
pushf
add
int
jo
sti
mov
sub
popf
in
retf
push
jg
xchg
lods
mov
xchg
pop
push
lahf
mov
cs
js
push
dec
dec
adc
(bad)
sbb
ja
inc
pop
or
loopne
xor
mov
retf
ins
cmp
jno
cmp
mov
or
mov
clc
mov
pop
sbb
push
cmp
mulps
mov
pop
mov
shl
mov
rcl
stos
mov
cli
or
fcomp
sbb
mov
je
and
daa
xchg
or
jge
sub
inc
pop
mov
or
sub
push
push
xor
sub
mov
sbb
xor
(bad)
jb
jns
cmp
ret
xor
pusha
push
aas
mov
cmp
or
adc
cmp
test
cmps
xor
nop
call
pop
inc
mov
lds
mov
cmp
pop
lds
mov
inc
xchg
(bad)
ror
lds
mov
clc
ficomp
inc
xchg
je
inc
dec
adc
adc
cmp
xchg
cmp
fidivr
mov
or
lods
scas
dec
repnz
xchg
add
(bad)
aad
loop
(bad)
and
add
jae
mov
mov
push
jmp
test
mov
loop
cmc
mov
lods
cli
sahf
dec
rol
iret
adc
aaa
mov
cmp
out
fsub
lods
sahf
push
xchg
cmp
aad
push
push
pop
fs
sub
add
fsub
(bad)
les
pop
(bad)
sub
hlt
popa
pop
mov
mov
cmp
cmps
jecxz
jb
scas
adc
mov
jg
push
push
jae
push
or
les
jae
or
enter
mov
retf
jns
mov
cmps
push
fs
lds
push
sub
xchg
push
jae
adc
cwde
jg
rcr
and
add
fsub
sub
in
dec
lds
add
push
cmp
dec
cli
sar
cmp
jae
jmp
add
sub
adc
out
(bad)
xchg
jo
aaa
ret
or
push
xor
mov
scas
hlt
mov
and
jge
js
sbb
pop
mov
mov
mov
xchg
pusha
in
push
pop
cmp
cli
xchg
sub
sahf
stos
pop
jb
jno
(bad)
es
pop
jo
mov
lods
nop
lahf
aas
movs
pushf
idiv
je
pop
pop
iret
mov
sub
jmp
adc
push
inc
int3
xchg
or
mov
adc
adc
add
leave
fwait
mov
ja
xor
or
movs
int
shl
daa
mov
mov
push
cmc
js
ins
mov
rcl
call
add
push
jne
ja
outs
pop
mov
pop
pop
aas
inc
in
jns
mov
fisubr
mov
cmp
mov
test
movs
jno
jmp
pop
xor
add
mov
test
loop
or
shr
lods
jmp
inc
dec
xor
int3
fstp
in
imul
mov
(bad)
movs
and
cmp
cwde
pop
fcomip
pop
int3
repz
mov
sti
lea
fsubr
jp
dec
out
arpl
dec
xor
cmp
daa
mov
fist
sbb
scas
sub
ret
push
lds
repnz
lods
inc
jg
mov
mov
cmp
mov
jg
add
pop
add
pop
lods
xor
lea
push
pop
(bad)
cmc
pop
jg
sbb
and
xchg
arpl
dec
xor
add
sub
cmps
xor
outs
jmp
mov
sub
push
fidiv
in
mov
jmp
je
pop
sub
je
xchg
pop
lahf
div
mov
and
push
adc
data16
mov
lock
or
xchg
adc
shl
cdq
mov
cmp
fiadd
push
int
aaa
dec
push
les
les
cld
jno
in
mov
stos
pop
pop
cmp
dec
adc
xor
loopne
imul
dec
jns
call
mov
push
(bad)
xlat
dec
sub
xchg
ins
push
dec
pushf
jmp
in
sbb
or
popa
xchg
jl
add
jmp
imul
enter
lds
add
adc
mov
pop
(bad)
iret
pop
aaa
cli
jnp
leave
outs
pop
out
fcmovnbe
gs
add
jg
or
adc
lds
inc
or
mul
jne
push
les
arpl
cs
movs
mov
mul
push
mov
dec
aad
pusha
bound
adc
jmp
int
in
pop
xchg
imul
sbb
ret
pop
or
mov
fistp
push
xlat
push
xchg
pop
pop
pop
cmp
xor
xor
mov
not
pop
(bad)
sbb
mov
or
jge
push
fwait
(bad)
daa
nop
push
fxch
inc
sbb
ret
rcr
xchg
(bad)
jns
xor
push
pop
fmul
out
inc
out
xchg
(bad)
pop
popa
dec
sbb
loopne
or
pop
mov
jno
jne
dec
or
pop
or
into
stos
imul
(bad)
fimul
int3
jb
mov
sbb
aad
fsub
pop
pop
outs
cmp
mov
xchg
jmp
inc
jp
xchg
movs
inc
dec
jmp
fist
sbb
cmp
call
paddusw
pop
jnp
imul
xchg
ret
jmp
sub
lahf
cmp
jbe
xchg
aas
mov
xor
arpl
adc
rol
jnp
aam
(bad)
mov
xlat
daa
das
movnti
jmp
and
xor
sub
mov
lock
sbb
and
jbe
jb
pop
sbb
out
or
(bad)
hlt
inc
pop
mov
aam
xchg
jnp
or
repz
sbb
cmp
lods
adc
ror
aas
std
cmp
pop
cmp
std
jbe
cmc
stc
ins
shl
or
xor
mov
push
ja
cld
gs
gs
aaa
jge
das
cmps
iret
pop
gs
sub
adc
dec
enter
mov
js
fistp
outs
pop
push
and
push
and
shl
imul
repnz
call
pop
jno
mov
lahf
das
jno
push
mov
data16
cdq
ret
ret
inc
and
jge
shl
push
cdq
dec
mov
jmp
inc
and
jne
test
mov
jne
push
push
pop
shl
lods
or
xchg
mov
bound
pop
dec
mov
cmps
jbe
push
or
mov
push
stos
push
les
fcmovnb
dec
icebp
jecxz
jmp
jae
in
call
es
lds
lock
int3
(bad)
push
fidiv
stc
mov
loopne
(bad)
cli
ret
rol
fldenv
dec
test
xor
jns
jo
jmp
pop
cmp
push
nop
mov
jae
adc
push
mov
dec
pop
mov
out
(bad)
frstor
or
popf
cmp
sub
add
xchg
mov
ror
mov
inc
or
mov
cmp
and
push
les
xchg
(bad)
cmp
add
das
xchg
in
sub
mov
sahf
test
push
ret
rol
and
xor
xor
sahf
nop
jae
ret
fldcw
test
jns
xor
hlt
aaa
inc
push
ins
shr
jmp
sahf
cmps
lds
xchg
mov
mov
xor
test
push
pop
mov
add
cmp
mov
adc
inc
xchg
loop
into
mov
movs
pop
pop
out
sub
popa
cs
and
std
repnz
test
dec
mov
dec
rcl
cmp
jg
mov
adc
cmp
clc
iret
cs
lds
sub
(bad)
call
mov
jecxz
cdq
xchg
jge
call
pop
out
pop
xchg
cmp
push
in
jle
in
in
shl
and
jmp
ds
jecxz
mov
jne
dec
push
ins
inc
sub
jmp
aam
cwde
mov
push
cmp
ins
aam
mov
xchg
and
pop
rcl
shl
jge
inc
outs
add
outs
jno
imul
xchg
pop
pop
mov
pop
sbb
fisub
xchg
jl
jecxz
out
sub
sub
pop
sub
inc
je
inc
loope
scas
mov
not
jmp
leave
xchg
loop
lea
sti
add
fmul
inc
stos
cmp
xor
sbb
neg
or
stos
(bad)
ficom
arpl
mov
fbld
adc
rcl
jne
add
sar
nop
in
cld
mov
imul
jle
cs
mov
fadd
sub
inc
imul
rcr
iret
pusha
dec
rcr
fisttp
mov
sub
xor
pop
or
inc
xchg
dec
inc
xchg
outs
adc
pusha
add
jl
mov
hlt
add
inc
mov
push
inc
dec
jae
or
cwde
clc
ret
dec
mov
jp
xchg
fnstsw
rcl
xchg
dec
mov
sar
js
mov
lds
jo
aas
jo
fwait
(bad)
ja
out
add
mov
cmp
add
mov
pop
mov
call
cmp
jecxz
xchg
mov
jno
and
inc
stos
pushf
lds
pop
sbb
bound
xor
jo
inc
pop
xchg
sub
mov
call
mov
int3
aas
cwde
mov
fbstp
push
dec
adc
dec
ins
sub
mov
dec
inc
or
mov
inc
mov
adc
or
sbb
retf
pop
jbe
xchg
add
sub
mov
xchg
xor
inc
adc
(bad)
cmp
or
out
jmp
cmp
stos
aam
jns
pusha
xor
dec
xor
add
and
jb
pop
mov
dec
clc
in
sub
push
mov
stos
ins
retf
mov
add
scas
xchg
xlat
jge
sub
ins
call
rol
clc
addr16
icebp
pop
test
add
repnz
and
test
jns
in
fcmovu
fsubr
std
fnstenv
mov
adc
sbb
aam
push
or
es
repz
mov
sub
or
inc
arpl
pop
cwde
inc
pop
pop
adc
clc
adc
cmp
das
cs
lahf
inc
js
jle
jne
xchg
jno
repz
(bad)
or
jmp
lea
sbb
call
test
gs
push
scas
jo
pushf
clc
shl
push
xor
add
xor
push
int
sub
cmp
ss
pop
mov
xor
cmp
adc
jnp
jecxz
add
(bad)
dec
jae
sti
or
or
ja
jnp
aad
jb
xchg
and
mov
sbb
aad
pop
sbb
mov
pop
out
jle
hlt
mov
dec
sub
shl
fsubr
inc
cmp
inc
cmp
lahf
adc
adc
(bad)
sub
int
out
call
xor
dec
leave
jmp
nop
xor
mov
cmp
mov
or
mov
push
stc
and
(bad)
into
loop
aad
push
xchg
pop
call
dec
retf
push
scas
cmp
cmps
or
jb
jge
mov
push
pop
pop
inc
mov
popf
shr
lods
dec
je
pop
mov
sub
cli
mov
repz
and
ret
dec
rcl
and
inc
rol
dec
inc
mov
mov
sub
out
dec
cs
dec
and
cld
test
jno
adc
dec
jl
and
std
fbstp
inc
xchg
xor
mov
out
retf
inc
pop
jne
mov
stc
cmc
xchg
(bad)
test
gs
jns
js
dec
push
pop
mov
lea
dec
fst
repz
mul
pop
bound
int
or
pop
xchg
dec
imul
fadd
(bad)
in
dec
xchg
retf
(bad)
push
add
(bad)
idiv
xchg
fs
sbb
add
fisttp
xor
cmps
or
aad
or
ja
jg
lock
cmp
jp
cs
loope
test
xlat
pop
jecxz
jo
addr16
movs
mov
fst
outs
sbb
mov
dec
xor
je
cmp
push
dec
xchg
in
inc
(bad)
aaa
xchg
fsubr
retf
push
clc
iret
out
and
sbb
jb
inc
sub
cdq
adc
dec
ss
dec
mov
sub
add
xor
mov
ret
repz
push
fild
sub
imul
sub
push
das
jnp
loop
outs
pop
fcomp
scas
push
out
mov
or
test
test
inc
pop
sbb
push
cmc
pop
xor
xor
ins
out
push
xor
mov
adc
add
mul
rol
xchg
jle
movs
push
test
(bad)
xchg
xchg
and
popf
adc
aaa
jle
add
stos
xchg
dec
repz
cmps
inc
push
ret
or
js
ror
lds
inc
lods
inc
movs
int
jg
test
push
movs
stc
inc
xor
mov
and
int3
js
lea
test
(bad)
rol
sbb
into
ds
mov
js
cmp
push
cmp
cld
test
and
into
fisttp
test
jp
aas
push
cmp
out
mov
jmp
outs
mov
add
loopne
xor
jnp
add
dec
and
xor
out
and
movs
cwde
mov
mov
imul
call
cli
and
cmp
adc
movs
and
retf
jg
leave
stos
pop
test
mov
and
pop
xchg
mov
(bad)
jb
clc
inc
dec
pop
pop
jl
imul
outs
shr
iret
out
enter
xor
dec
add
out
mov
das
dec
mov
sbb
and
inc
retf
xor
push
adc
push
lahf
pop
cwde
mov
shl
pop
stos
mov
sbb
fnstsw
inc
and
in
imul
mov
or
jbe
jno
dec
dec
loopne
pusha
pop
xchg
pop
enter
bound
shl
add
jnp
in
cld
xor
jge
sbb
or
test
ret
mov
xor
mov
sbb
loop
(bad)
popa
les
(bad)
cli
mov
into
xchg
push
push
or
pop
xor
outs
test
xchg
neg
call
int3
jb
pop
into
xchg
std
sub
clc
jg
outs
sub
outs
(bad)
daa
in
sahf
and
xor
icebp
jge
test
test
xor
call
sahf
lahf
inc
cmp
popa
jg
lods
adc
mov
and
mov
sti
jbe
dec
sub
gs
sbb
(bad)
jae
cmp
fadd
movs
test
cmp
push
mov
out
or
dec
adc
fldcw
(bad)
jbe
jnp
mov
sahf
adc
cmp
(bad)
retf
dec
fld
data16
repnz
test
pop
stos
jg
and
(bad)
js
and
ss
ret
fidivr
addr16
sbb
test
xor
mov
push
cmp
cmp
loope
jg
and
rol
mov
xchg
call
xor
mov
xchg
push
pop
cmc
xchg
icebp
pop
and
movs
sbb
dec
inc
repnz
pop
xor
ja
sti
or
pushw
pusha
mov
adc
test
cld
ins
sub
inc
push
pop
mov
(bad)
adc
push
cmp
dec
sahf
mov
push
sub
js
pop
push
inc
push
sar
daa
cli
adc
ret
shl
nop
inc
cmp
mov
popf
frstor
fld
sub
cmp
cmps
push
jecxz
push
arpl
push
mov
(bad)
jb
mov
test
pop
test
or
out
xchg
test
jo
inc
popf
jno
sbb
xchg
jl
xor
ror
enter
mov
cmp
fwait
cmp
sti
xor
cmp
mov
sar
shl
fcomp
rcr
xchg
test
in
es
into
leave
aaa
dec
add
mov
div
push
psubusb
fwait
xor
stos
lock
pop
int3
ret
movs
push
xchg
jnp
adc
mov
(bad)
in
sbb
inc
pop
dec
xchg
repnz
mov
pushf
adc
mov
and
cmp
jmp
pushf
ret
mov
(bad)
and
outs
lods
or
push
jbe
add
jecxz
stos
inc
pop
out
fadd
je
or
mov
lds
sub
fwait
addr16
or
test
lds
adc
mov
pusha
mov
std
mov
mov
inc
adc
mov
pop
rol
xchg
pop
xor
pop
test
lods
pop
aaa
stos
ret
dec
sub
and
data16
add
in
lods
sti
cld
out
retf
ja
cmp
xchg
or
daa
sbb
or
inc
loopne
(bad)
div
push
std
leave
gs
loope
lods
xchg
push
xor
xchg
pop
cmc
(bad)
or
inc
rcr
jns
mov
cmp
sar
hlt
push
dec
fsubr
push
sbb
sbb
neg
popa
add
inc
or
lods
sar
pop
adc
pop
jne
cli
push
daa
je
push
(bad)
mov
neg
mov
imul
and
xchg
(bad)
lods
lods
repnz
lahf
mov
mov
xor
sahf
fnstenv
fs
or
push
xchg
pushf
mov
xchg
imul
mov
jle
add
rol
inc
push
out
pcmpeqb
jmp
nop
sbb
das
mov
movs
mov
pop
aas
xor
mov
sbb
inc
sbb
mov
cmp
sub
and
jmp
loopne
adc
sub
mov
adc
int
and
mov
lods
inc
adc
dec
das
fadd
shl
mov
inc
mov
(bad)
(bad)
sbb
inc
xlat
and
cmp
mov
or
hlt
mov
ret
adc
dec
shl
sbb
call
push
test
scas
cmps
dec
in
xor
stos
arpl
mov
mov
inc
cmp
xor
fs
int
shld
pop
xchg
cmp
cmps
gs
mov
test
loop
jbe
adc
adc
movs
shl
stos
(bad)
sbb
push
rcl
pop
push
ror
jbe
xor
xchg
fidiv
jnp
xchg
xor
fadd
mov
or
mov
outs
push
add
aam
mov
pop
loope
(bad)
nop
mov
mov
add
punpcklbw
sbb
aas
push
inc
fisub
stos
mov
(bad)
popf
jg
fdiv
and
sub
cld
mov
out
mov
popa
or
inc
push
aas
out
mov
int3
inc
(bad)
(bad)
and
dec
pop
out
sahf
adc
add
fst
mov
or
jl
das
aas
dec
jno
inc
dec
iret
xor
pop
cmp
cwde
rcr
gs
push
enter
inc
mov
jecxz
test
xor
inc
dec
mov
and
push
jle
sti
mov
sti
adc
dec
xchg
lds
test
mov
je
mov
dec
sar
mov
popa
pop
stos
loope
mov
mov
inc
push
inc
mov
xor
imul
aas
movs
test
jo
mov
or
or
lahf
out
stc
mov
sub
(bad)
or
repz
fcomp
stos
sub
rol
sub
xor
pusha
fwait
leave
jge
repz
inc
mov
add
pop
or
punpckhbw
and
sub
inc
fld
jmp
movs
ja
pop
scas
imul
loop
test
rol
sbb
fdiv
adc
jmp
rcl
xor
pushf
add
pop
mov
xor
pop
adc
jle
pop
scas
cs
sbb
sub
sti
jae
in
xor
sar
lds
mov
cmp
lahf
mov
ficomp
add
dec
movs
lods
xor
xchg
in
or
cmp
mov
out
jecxz
jg
xor
movs
push
jae
call
add
fwait
jne
mov
xor
push
or
sti
xchg
cmps
pop
fwait
xor
out
xor
pop
pop
fild
jmp
mov
je
daa
js
adc
lea
push
push
mov
xchg
mov
pop
push
leave
call
test
mov
inc
jo
inc
add
pop
shl
ror
jbe
in
(bad)
(bad)
jecxz
or
add
imul
popf
loope
xor
push
fwait
and
imul
out
dec
mov
popa
jnp
push
dec
nop
stc
xchg
cs
mov
push
jmp
shr
sahf
add
push
mov
cwde
movs
push
fimul
(bad)
popf
add
xchg
les
xor
pop
push
inc
icebp
int
mov
mov
pop
adc
jnp
gs
scas
ficom
jg
lods
hlt
mov
xchg
push
imul
rol
ins
push
sti
jo
inc
sbb
stc
ficom
test
or
cmp
in
stos
and
xor
mov
call
out
lahf
push
cdq
push
cmp
push
arpl
repnz
fcmovbe
cdq
inc
cmp
sbb
xchg
mov
aaa
inc
dec
loop
rol
dec
retf
sbb
shr
pop
ret
mov
sbb
add
(bad)
and
(bad)
mov
mov
dec
aaa
test
sbb
hlt
fisttp
mov
mov
jp
in
push
leave
xor
xchg
xor
outs
xchg
add
dec
push
nop
mov
mov
adc
pop
add
jmp
dec
test
xchg
adc
je
xchg
jl
jnp
inc
fbld
int
sub
scas
imul
jle
and
mov
add
sub
(bad)
(bad)
mov
pushf
mov
or
jnp
cmc
jmp
bound
inc
xchg
sub
out
pop
scas
loope
push
and
int
cmc
sub
jbe
inc
ror
popa
sub
and
push
mov
jmp
xrelease
stos
push
inc
hlt
sbb
sbb
mov
loopne
and
push
js
fild
sub
lea
fsubr
in
movs
mov
add
div
mov
mov
inc
in
mov
adc
lock
aam
std
stc
aaa
xchg
ds
repnz
ins
cmp
cmp
into
cmp
jns
inc
jg
pushf
adc
cli
adc
jge
stc
inc
pop
sbb
into
mov
jns
sar
fsubr
mov
dec
mov
rcl
imul
shr
and
inc
sbb
push
fs
mov
iret
xor
pop
cwde
jecxz
and
add
inc
gs
jbe
inc
daa
cs
inc
(bad)
int3
(bad)
and
push
xor
or
jg
xchg
(bad)
jne
mov
jo
hlt
push
cld
xor
sahf
sub
or
nop
jecxz
lock
dec
pop
dec
inc
fwait
out
cs
in
push
paddusw
inc
pop
and
fstp
inc
lods
push
push
jge
or
add
jmp
adc
adc
in
xchg
data16
sub
loopne
test
mov
pop
es
inc
stos
jno
pop
test
jb
fcomp
xor
cmp
sub
xor
ja
cli
lods
call
sub
lods
cmc
sub
jns
mov
mov
jmp
cli
int
jl
push
int
je
mov
(bad)
fs
push
add
test
into
sub
sbb
stos
aaa
push
sub
sbb
xor
loop
xor
jp
imul
push
sub
ins
sub
aas
imul
leave
outs
scas
lods
int3
add
pop
sub
shl
xlat
jae
push
dec
ret
mov
retf
stos
adc
adc
ja
into
xor
push
push
mov
shl
shr
adc
and
popf
lods
dec
push
mov
sahf
stos
push
pop
xchg
mov
inc
or
in
mov
fcom
js
mov
fisttp
push
and
ja
sti
jae
adc
popf
jmp
push
push
xchg
cmp
xchg
daa
pop
adc
cld
mov
pop
add
or
test
or
je
icebp
push
cli
stos
jecxz
xor
sub
ins
adc
repz
in
pop
dec
dec
cli
movs
cmp
pop
in
or
call
or
sahf
fwait
imul
mul
ds
into
sbb
popf
dec
cmp
mov
cwde
adc
mov
inc
adc
sub
fstp
mov
imul
rol
mov
outs
mov
sbb
iret
jmp
cmp
jecxz
rcl
xchg
push
jno
jmp
(bad)
and
lahf
push
push
and
mov
aas
loope
dec
addr16
or
rcr
mov
sbb
stos
lahf
cli
mov
loop
pop
out
or
xor
test
inc
cdq
cmp
sbb
jmp
adc
in
popa
xor
js
es
dec
into
push
mov
mulps
mov
sub
mov
(bad)
nop
xor
jbe
out
cmp
sub
dec
scas
shl
mov
xor
xor
xor
sub
ds
mov
dec
div
xor
jmp
stos
lds
call
dec
sbb
rcr
fs
out
shl
nop
push
(bad)
fidivr
mov
out
pop
call
out
imul
(bad)
jle
inc
jns
cwde
inc
xchg
jl
popf
dec
push
into
pop
jns
nop
movs
xor
jecxz
test
aaa
adc
fisubr
and
xchg
loope
push
(bad)
repnz
and
dec
mov
loop
pop
or
mov
or
out
sub
out
push
ins
sbb
daa
mov
xlat
or
mov
cmp
pop
push
gs
sbb
sbb
push
repnz
push
stos
jns
xchg
and
mov
out
fwait
xor
mul
outs
data16
pop
and
lds
sbb
loopne
test
icebp
fwait
push
pushf
add
loop
inc
pusha
loop
js
cdq
pop
in
sbb
push
fisttp
fisubr
jnp
and
mov
xor
retf
cmps
or
jne
mov
popf
pop
sub
dec
add
sub
hlt
das
xchg
je
(bad)
(bad)
pop
lds
pusha
ficomp
jne
leave
sbb
sar
adc
xchg
rol
mov
adc
adc
or
out
pop
xor
jge
lods
cli
and
loope
mov
sub
stc
dec
xchg
hlt
nop
fs
jne
dec
pop
outs
ds
mov
in
mov
inc
push
inc
push
mov
sub
xchg
into
cli
lock
gs
popa
xor
leave
add
or
mov
mov
mov
pop
rcr
add
jns
outs
imul
push
pop
sub
adc
xlat
fwait
mov
add
les
sahf
jmp
inc
xlat
jne
mov
mov
dec
daa
pop
pop
loope
sahf
sub
bound
cmp
int3
jmp
add
adc
ins
jo
jg
xor
sub
mov
mov
cmps
push
jp
fistp
mov
mov
leave
ret
in
out
lods
sub
imul
clc
fcom
les
inc
aas
sbb
mov
rcl
bswap
sbb
bnd
les
add
retf
or
push
jbe
jl
pop
pushf
jno
loope
data16
dec
paddsw
dec
mov
mov
jg
jns
pop
cmps
push
xchg
jle
pop
pop
add
mov
adc
and
inc
sbb
js
jbe
dec
sbb
mov
jp
mov
jmp
jnp
jbe
rol
add
in
ret
push
xchg
mov
xchg
loope
(bad)
cli
xchg
arpl
inc
adc
es
and
sub
push
daa
dec
scas
mov
std
jmp
popf
cmc
mov
das
repnz
clc
mov
movs
js
ds
pusha
rcr
cmp
jne
adc
fstp
add
lea
jne
retf
lds
push
lds
add
mov
and
in
inc
push
cs
xchg
inc
sub
jb
inc
jmp
pop
push
leave
and
mov
dec
or
add
out
jmp
retf
(bad)
xchg
sub
jnp
stos
(bad)
stc
call
jge
dec
dec
jnp
jmp
(bad)
xchg
cmp
dec
out
xchg
xchg
pop
fs
repz
or
rcr
fucomp
xor
mul
addr16
xor
scas
push
pop
movd
leave
and
push
in
ins
xchg
scas
mov
add
loopne
mov
push
into
push
pop
rol
pop
repnz
cmp
jo
rol
pusha
add
or
push
push
push
fdivr
test
xchg
loop
test
or
stos
sbb
js
icebp
sbb
enter
pop
pop
xor
inc
cmps
leave
scas
adc
leave
lods
or
scas
retf
mov
push
popa
ds
or
das
aaa
jno
mov
test
or
and
or
push
pop
mov
sbb
mov
sar
movs
add
daa
sar
std
mov
fwait
gs
mov
mov
mov
cs
jmp
pushf
bound
leave
mov
push
(bad)
cld
pop
jle
outs
inc
xchg
mov
dec
rol
sub
xor
sub
cdq
cs
add
lea
ficom
mov
dec
inc
lea
icebp
mov
jbe
cld
in
sbb
cmp
sub
and
or
xor
jp
or
stos
inc
jge
cmp
push
push
mov
aad
xlat
pop
retf
out
loopne
sbb
psrld
dec
stc
repz
or
rol
into
fidiv
mov
(bad)
stos
pop
xchg
movs
xchg
dec
inc
out
cmp
mov
sbb
and
stos
int3
into
push
outs
(bad)
ja
or
aas
add
test
xor
fisttp
xchg
bound
repnz
xlat
pop
ret
push
iret
(bad)
add
int
or
imul
inc
and
sbb
fld
xor
loop
lahf
push
dec
push
cmps
or
sub
(bad)
fisubr
out
sub
dec
sub
into
jae
mov
xor
sbb
cmp
mov
mov
outs
sbb
push
xchg
mov
mov
repnz
xchg
dec
arpl
aas
icebp
inc
pop
in
test
xchg
inc
push
xlat
dec
out
and
xor
add
loope
ins
cmp
mov
pop
int
sar
(bad)
nop
mov
and
out
fwait
clc
mov
ins
xchg
and
and
les
enter
cmp
adc
pop
adc
xchg
test
push
inc
out
ins
add
jg
daa
ror
lock
jl
jo
repz
cmp
and
pusha
enter
adc
mov
inc
sub
inc
adc
test
test
in
(bad)
aam
and
cmp
cwde
adc
and
in
push
ins
xor
push
aaa
sub
and
push
fwait
inc
in
mov
xchg
cmp
xlat
fnstenv
aam
add
mov
push
push
mov
mov
xor
push
sbb
mov
(bad)
pushf
nop
inc
push
add
stos
je
in
repnz
xor
sub
fnstcw
jmp
cmp
fwait
and
lods
nop
popa
in
pop
jae
stos
fdivr
ret
lock
fistp
mov
cdq
je
fs
int3
xchg
cmp
scas
pop
shr
movs
dec
(bad)
sub
jnp
stos
and
xlat
pushf
sbb
xor
cld
das
mov
jno
or
xchg
sub
popf
sahf
jg
aas
jmp
(bad)
cdq
xor
mov
lods
into
push
and
xchg
jae
push
outs
loop
mov
es
ficomp
add
fwait
and
pusha
mov
push
out
pop
xchg
enter
mov
mov
fcomi
popa
jmp
dec
hlt
mov
mov
out
push
sar
push
loopne
je
daa
out
aad
jp
inc
pop
loopne
sub
out
(bad)
mov
enter
mov
imul
mov
mov
pop
das
xor
add
pop
jmp
addr16
add
mov
pop
xor
(bad)
(bad)
repnz
popa
repnz
jno
push
or
jo
mov
fwait
cwde
arpl
lock
push
sbb
pop
or
mov
int3
xchg
push
pop
aaa
mov
aad
mov
inc
imul
or
fimul
dec
outs
sub
outs
neg
and
ret
jbe
fld
add
fadd
jne
je
adc
push
mov
inc
ret
push
addr16
sbb
adc
adc
hlt
push
or
xor
mov
aad
adc
retf
inc
mov
or
pop
fild
out
(bad)
sbb
(bad)
fiadd
out
fidiv
inc
jae
fild
test
push
cmps
scas
stc
inc
in
and
mov
pop
sub
mov
pop
fdivp
and
rcr
pop
out
xor
loop
inc
add
in
or
das
mov
dec
and
jp
cwde
enter
fsubr
daa
lods
jae
sar
xchg
in
in
es
gs
call
rol
xchg
or
pop
cdq
sbb
icebp
ret
add
shl
aaa
outs
inc
pop
pop
ret
xchg
fisubr
adc
or
cmp
inc
or
mov
sub
scas
lahf
mov
outs
pop
ret
xchg
sbb
cmp
ja
jnp
inc
or
shr
les
inc
push
cmp
movs
in
add
mov
xchg
(bad)
sub
add
neg
(bad)
jl
push
add
inc
push
lock
sbb
std
cmc
dec
sahf
dec
test
or
rol
ins
lds
mov
ret
inc
cmp
add
adc
dec
jl
jg
into
inc
jne
ins
ret
pop
xchg
(bad)
ror
scas
pop
(bad)
cmc
inc
xor
data16
and
inc
sub
mov
ja
jge
mov
push
int3
mov
imul
retf
out
(bad)
fdivr
jmp
sub
jl
fisttp
cdq
idiv
sbb
jge
or
arpl
ffree
div
std
xor
mov
push
mov
or
aas
push
or
xchg
cli
pop
lods
push
xchg
mov
mov
xchg
push
xchg
mov
xor
in
cmp
ret
sub
arpl
mov
jle
jge
cdq
or
pop
push
pop
push
push
dec
sub
sti
push
mov
push
not
je
js
pop
sar
das
leave
jg
xchg
fisubr
ins
cmp
jecxz
aam
pop
nop
and
cmp
add
cwde
call
adc
out
cmps
mov
jmp
out
add
add
lahf
cmp
rcr
das
cmps
loope
test
lods
fisubr
retf
push
scas
cld
mov
rol
cs
mov
inc
stos
in
pop
lahf
xor
jecxz
ds
in
in
or
js
push
sub
es
adc
xlat
cs
daa
ret
(bad)
rol
cld
rcl
jg
dec
test
push
shl
xor
test
xor
xor
xchg
mov
jge
retf
movs
call
fstp
pushf
pop
mov
jns
jae
mov
add
es
repnz
and
sub
(bad)
push
pusha
cdq
xchg
jle
jno
jl
or
and
xchg
cmp
push
mov
movs
and
push
xor
pop
cmc
jb
sbb
inc
sbb
push
cmp
jle
xchg
mov
xor
mov
add
inc
or
shr
adc
cld
or
dec
dec
mov
pop
pop
and
movs
arpl
loop
ficom
jp
fadd
xchg
call
mov
push
jae
shl
jno
cmp
and
ffreep
sbb
pop
mov
stc
fwait
adc
pop
mov
add
xchg
mov
pop
or
mov
hlt
arpl
ds
xchg
pop
cmp
fidiv
mov
fistp
mov
repnz
nop
sbb
xchg
les
arpl
icebp
(bad)
adc
cdq
arpl
pusha
clc
add
jmp
call
dec
test
out
jo
push
(bad)
fnstenv
xchg
mov
jmp
jbe
mov
dec
xlat
cmc
stos
mov
add
inc
inc
sbb
sbb
or
ffree
push
es
outs
lods
in
sbb
xchg
sbb
jle
out
cld
(bad)
aam
inc
dec
add
in
shl
popf
jns
add
lods
popa
lods
(bad)
fldcw
sbb
(bad)
sub
sbb
add
inc
and
or
sbb
movs
push
sbb
fisttp
stos
(bad)
inc
or
fwait
xor
ds
xor
sbb
or
js
push
in
outs
cmp
aas
xchg
sahf
hlt
fst
rcl
and
pop
es
mov
or
push
pop
iret
gs
sbb
push
fwait
loop
jbe
es
fistp
adc
in
out
xlat
rcr
shl
push
mov
fwait
adc
cmp
adc
jmp
aam
sub
fbld
(bad)
jl
add
dec
cmp
ds
mov
pop
xchg
loope
movs
add
ds
sub
inc
xor
push
imul
push
sbb
in
loop
mov
sbb
movs
cmp
push
daa
fistp
xchg
jnp
pop
(bad)
fstp
mov
cmp
fcom
fst
pop
lods
xchg
outs
xor
xlat
jmp
fidivr
js
test
cmp
inc
jle
aas
pop
(bad)
in
fild
sbb
dec
(bad)
push
enter
push
fsubp
pop
add
mov
jecxz
adc
pop
cmp
fst
mov
cmp
imul
or
std
mov
xor
jle
fwait
sub
lahf
xchg
push
pushf
aas
cmp
inc
cmp
stc
ins
xchg
call
sbb
stos
stc
xchg
stos
fisubr
fbstp
sbb
in
mov
icebp
ficom
imul
(bad)
xor
xchg
cwde
mov
cmc
mov
pop
push
sub
pushf
push
jbe
mov
jmp
(bad)
push
fcom
adc
popf
test
mov
push
push
adc
jmp
sbb
into
enter
ja
or
and
outs
dec
in
popf
sub
rcr
mov
(bad)
cld
jnp
mov
push
test
cld
fcmovu
retf
lods
push
mov
lods
aam
and
pop
pop
lds
pop
daa
arpl
call
jnp
and
lea
xchg
sub
clc
dec
pop
inc
outs
sub
mov
cmp
clc
mov
push
xor
aam
xor
lds
jp
shr
or
in
std
sti
mov
stos
les
push
inc
push
mov
jno
rcr
iret
add
movs
mov
dec
test
or
jmp
aam
mov
adc
pop
nop
dec
and
pop
jg
xor
xor
lahf
aaa
xor
mov
cmps
mov
or
jmp
in
xchg
xchg
jp
(bad)
cmps
mov
xor
sub
sub
cwde
in
or
mov
add
ins
sahf
lahf
mov
hlt
(bad)
cli
popa
add
cmp
mov
(bad)
fidivr
mov
xchg
mov
cmp
popf
jnp
imul
inc
push
xchg
bound
sbb
xor
lahf
dec
jp
xchg
fst
fxtract
mov
mov
(bad)
loop
int3
call
mov
sub
imul
popf
push
call
scas
pop
pop
outs
sub
and
lock
(bad)
hlt
inc
push
push
push
xor
pop
mov
shl
fwait
mov
pop
xor
mov
enter
jns
dec
das
ins
sub
mov
pop
clc
out
nop
jae
arpl
stos
xor
jns
xchg
push
inc
inc
add
pushf
cld
jbe
xor
icebp
into
rcl
inc
ins
jmp
shl
inc
push
(bad)
inc
ins
add
aas
mov
and
test
retf
in
call
jle
mov
adc
daa
mov
mov
das
add
jecxz
sahf
xchg
cwde
and
dec
xchg
rol
dec
mov
arpl
inc
mov
inc
sub
and
popf
lds
add
or
bound
push
mov
push
mov
push
inc
jmp
push
pop
mov
cwde
fimul
mov
cmp
xchg
jp
into
mov
pop
sub
jecxz
(bad)
hlt
jp
fst
adc
jmp
sbb
xor
fcom
jl
scas
aad
pusha
pop
push
fistp
stos
and
js
inc
stos
fimul
repnz
jbe
jmp
outs
mov
push
sti
test
mov
push
(bad)
adc
lea
call
stc
ds
rol
imul
or
ss
inc
mov
jbe
aam
cwde
jne
sub
inc
aam
neg
or
imul
add
xor
pusha
jae
mov
xchg
push
adc
ja
test
fs
stc
jp
sbb
and
ds
and
adc
vmaxpd
mov
jne
retf
or
mov
idiv
lock
nop
retf
stos
sbb
or
xchg
out
adc
xchg
sbb
aam
push
call
bound
push
push
mov
cmps
enter
mov
fwait
out
add
xchg
add
push
sbb
leave
into
movs
jecxz
and
lahf
inc
or
ret
xchg
inc
out
mov
jb
jno
push
mov
xchg
in
fdivr
adc
sbb
pop
mov
push
add
mov
leave
cmp
out
adc
xchg
mov
dec
out
lods
xor
out
inc
xor
daa
daa
lods
int
adc
in
cmps
lahf
rcl
lock
jns
pop
sbb
push
movs
(bad)
push
xchg
loopne
stos
mov
and
xchg
xchg
mov
pop
dec
sahf
mov
mov
les
sbb
adc
cmps
sbb
dec
dec
test
pusha
in
sub
imul
pop
sub
mov
add
inc
sub
pop
mov
enter
(bad)
jmp
add
sahf
lods
aad
rcl
push
push
mov
add
(bad)
into
sbb
(bad)
in
dec
or
adc
test
sahf
fsub
movs
or
push
iret
xchg
add
xor
inc
pop
xor
cmps
xchg
adc
jecxz
(bad)
pop
nop
fstp
nop
inc
push
jl
ret
and
test
ss
sti
cwde
outs
adc
adc
push
inc
pop
pop
lods
cwde
sub
outs
pop
pushf
int3
mov
rcl
sbb
push
scas
mov
mov
xchg
dec
lea
leave
outs
enter
mov
pop
aad
idiv
fsubr
in
jge
push
add
repnz
mov
(bad)
lea
jb
lock
(bad)
shl
in
pop
dec
xlat
inc
lods
mov
sub
mov
mov
push
mov
add
loope
ror
add
jne
xchg
ins
loop
repnz
jns
inc
gs
inc
jge
lea
fs
cli
sub
dec
int
cmp
sbb
mov
push
call
inc
in
jmp
arpl
xor
fidivr
pop
xchg
and
dec
sub
inc
lahf
dec
mov
cmp
retf
cmp
fidiv
dec
shl
outs
adc
xchg
jl
adc
adc
add
fwait
jecxz
xor
mov
xlat
push
sar
dec
outs
hlt
or
xchg
or
popf
das
xor
push
test
xchg
jge
jg
shl
test
xchg
mov
in
(bad)
mov
mov
xor
out
(bad)
retf
clc
push
mov
mov
pop
push
jle
pop
xchg
repnz
push
dec
loopne
or
cdq
adc
cmp
adc
aaa
cmp
jmp
into
jnp
scas
sub
rol
in
stos
and
ins
cli
loopne
or
push
push
repnz
loope
jns
and
mov
mov
xchg
sbb
jo
std
test
mov
jno
add
outs
mov
mov
(bad)
bound
(bad)
push
sbb
mov
mov
xor
cmc
test
movs
cmp
arpl
daa
loop
lock
les
and
bound
fbld
cmp
jl
push
dec
imul
inc
fist
loope
xchg
mov
in
adc
inc
popf
lea
sub
aas
call
and
fild
adc
scas
imul
aad
xchg
add
jmp
cmp
or
push
imul
movs
sbb
mov
and
xlat
aam
sub
pusha
mov
mov
(bad)
cmp
adc
(bad)
mov
push
pop
jnp
pop
(bad)
es
add
in
sbb
pop
shr
daa
cmps
add
aas
sub
push
mov
outs
xchg
sub
push
mov
nop
push
add
jb
and
repnz
nop
and
int
mov
xchg
jo
jmp
cld
and
jge
stc
stc
popf
aam
jg
or
push
mov
outs
adc
sbb
clc
fadd
jbe
or
xchg
jo
pop
and
jne
mov
or
leave
jecxz
addr16
or
pop
xchg
int
push
in
dec
and
jmp
mov
sbb
dec
xchg
xlat
daa
mov
sub
mov
mov
push
fsub
jno
pop
sbb
in
std
es
and
frstor
push
and
jmp
out
mov
jg
movs
adc
imul
jns
dec
fist
inc
sub
ror
jecxz
inc
or
es
ficom
adc
in
pop
test
into
pop
cmps
mov
pop
retf
popa
push
inc
mov
jge
mov
adc
sbb
imul
cli
mov
(bad)
stos
(bad)
ror
inc
ins
loope
push
dec
test
sub
xchg
movs
out
or
leave
jb
fidiv
out
fsubr
mov
syscall
call
push
xchg
sbb
icebp
lock
inc
clc
xor
dec
fwait
shl
or
mov
cmp
mov
sahf
jp
mov
sub
pop
mov
outs
xchg
int3
(bad)
push
mov
mov
nop
(bad)
scas
call
mov
and
jb
repz
push
mov
dec
push
mov
xchg
xchg
outs
lods
xlat
and
adc
mov
jno
cmp
cmp
idiv
jb
mov
pusha
xchg
jb
xor
outs
test
inc
xchg
retf
mov
sti
sub
mov
sub
ret
inc
cmp
push
retf
lods
aaa
xor
jne
mov
or
lods
push
jne
sbb
lock
div
scas
stos
mov
shl
xchg
cli
sahf
pop
cmp
cli
retf
and
repz
sub
sti
mov
push
jno
mov
pop
mov
(bad)
sti
rcl
ret
push
add
add
or
popa
pop
add
loope
hlt
sub
fimul
cmp
fs
add
cmp
sub
dec
(bad)
cmp
mul
jbe
or
into
ficom
ret
mov
or
repz
lds
push
pop
jle
mov
or
sub
add
dec
mov
mov
adc
les
jg
cmp
adc
mov
test
loop
mov
fcomp
or
or
dec
cmp
inc
in
ins
cmp
sub
repz
push
movs
mov
clc
xchg
xor
jbe
sub
cmps
fbstp
xor
dec
add
es
ins
inc
popf
adc
aad
addr16
hlt
stc
sti
bound
iret
mov
pop
aas
push
xchg
pop
test
mov
std
sub
clc
mov
jmp
iret
or
out
popf
mov
mov
mov
(bad)
and
arpl
cmp
xor
imul
mov
mov
pop
pop
dec
and
mov
out
pusha
or
cmps
adc
imul
loope
ds
dec
or
addr16
nop
sbb
fild
push
ds
fimul
mov
xor
sub
mov
hlt
push
mov
mov
std
inc
pusha
pop
sbb
lods
out
jecxz
or
call
pusha
in
bound
je
xor
(bad)
mov
aaa
jp
mov
dec
push
pop
sub
rcl
cmp
cmp
xor
loopne
sbb
test
cmp
aas
dec
dec
iret
cmp
(bad)
push
xor
or
xor
scas
pusha
mov
loope
out
out
jecxz
push
nop
lea
int
jo
xor
sbb
or
pop
lds
and
and
sub
in
cmp
inc
push
push
sub
sahf
in
pop
(bad)
fidivr
das
mov
mov
stos
sub
sub
and
loop
pop
push
loop
mov
mov
(bad)
pop
shr
cld
test
xor
pop
adc
retf
push
dec
in
les
cmp
retf
pop
and
add
loop
shr
jmp
adc
adc
sbb
retf
jnp
(bad)
cli
xor
pop
out
push
jl
push
es
ins
fistp
cmp
mov
push
leave
push
inc
dec
retf
(bad)
movs
out
or
mov
dec
clc
(bad)
pop
jns
rcl
xchg
mov
pop
(bad)
and
hlt
cmps
shl
and
shr
push
add
adc
rol
fs
cmp
pop
push
mov
and
ds
lahf
mov
out
dec
scas
push
(bad)
sbb
mov
mov
add
aaa
imul
addr16
cld
fbld
frstor
jp
and
adc
dec
call
sbb
adc
ins
sbb
stos
(bad)
push
fbstp
vmovaps
mov
inc
(bad)
(bad)
test
sbb
xlat
shr
cmp
pop
cmp
cmp
sub
inc
or
retf
xor
test
cld
mov
out
cmps
(bad)
rol
scas
mov
sbb
mov
call
pop
call
pushf
lods
jecxz
fimul
add
addr16
or
rcl
cli
pop
lea
xchg
loopne
or
inc
mov
(bad)
fst
retf
add
je
movs
add
or
inc
adc
aaa
sti
xchg
addr16
adc
out
aam
loopne
jl
mov
test
cmp
dec
stc
mov
cmp
nop
dec
mov
lahf
imul
sub
cmps
fwait
iret
fsubp
pop
add
sub
retf
sub
mov
add
cs
pop
test
xor
popa
jl
adc
fiadd
sub
xchg
scas
enter
push
sbb
dec
ret
sub
imul
and
js
mul
inc
mov
adc
mov
sbb
cld
adc
div
fdiv
repnz
je
push
xchg
xor
pusha
test
dec
stos
and
imul
adc
mov
or
push
sub
jmp
jl
jmp
into
mov
fcom
repz
inc
adc
dec
add
icebp
ins
lds
pop
jo
movs
leave
ins
add
mov
push
jl
sbb
sbb
lods
mov
stc
pusha
push
test
mov
mov
and
pusha
cmp
cmp
test
icebp
test
call
in
xor
mov
ret
loope
je
add
dec
retf
mov
call
sbb
out
fs
pop
push
imul
pop
arpl
into
and
(bad)
fist
sub
or
enter
daa
push
mov
popf
inc
inc
aam
jle
ret
mov
std
cs
jnp
jnp
push
pop
aam
ins
xor
and
mov
cmp
jno
cmp
ins
dec
cli
pop
mov
jle
xchg
das
popa
mov
or
xchg
in
jno
cwde
js
xor
aas
adc
cs
xchg
add
je
and
mov
pusha
leave
pop
jmp
aam
pusha
cmp
add
inc
xor
shl
xchg
mov
fadd
adc
sub
fisubr
sahf
arpl
nop
test
push
in
mov
or
sub
(bad)
repnz
in
jp
retf
(bad)
fldcw
rol
and
iret
xchg
mov
jmp
adc
adc
inc
xchg
cmps
pop
push
sahf
es
mov
xchg
pop
into
jns
inc
inc
jmp
jno
inc
in
and
xor
push
sub
jl
and
fs
(bad)
cmp
ins
xchg
jo
sahf
adc
mov
popa
jmp
nop
mov
jecxz
in
test
jno
push
dec
cmp
int3
sub
cli
mov
push
cmps
xor
adc
out
inc
or
shr
jae
mov
outs
(bad)
ss
jns
xor
ret
(bad)
(bad)
fwait
or
outs
sbb
pop
mov
add
mov
mov
or
jbe
mov
jmp
dec
imul
xchg
imul
pop
int3
ret
clc
add
arpl
call
jp
sub
push
lea
push
xadd
or
or
push
add
lods
clc
add
cmp
or
or
pop
push
xchg
or
lahf
enter
mov
nop
jno
shl
movs
aaa
ret
addr16
mov
push
cmp
mov
movs
pop
test
rcr
mov
sbb
sub
into
and
mov
not
jle
fild
repz
sub
out
xor
xchg
cmp
es
xchg
push
lods
ins
mov
fadd
inc
jg
xor
jbe
cs
sti
inc
sub
mov
cld
mov
add
fcom
push
int
cld
ror
imul
and
lods
mov
add
std
arpl
clc
add
lds
ja
xchg
xor
cs
inc
pop
jae
fidivr
jne
cwde
sbb
xchg
cmp
int3
cmp
jb
mov
es
inc
repz
adc
test
cmp
les
stc
sub
xor
xchg
add
pop
repz
sub
pop
jp
cmp
jmp
ja
(bad)
mov
mov
or
bound
or
inc
mov
iret
jnp
sbb
into
jg
mov
dec
(bad)
nop
stos
pop
cmp
test
scas
jmp
bt
pop
push
loopne
xlat
sub
pusha
cwde
mov
in
xor
test
dec
mov
pushf
jo
dec
sbb
cdq
push
jbe
fstp
cmp
or
add
mov
mov
jo
lods
adc
cli
pop
sti
std
push
add
add
mov
outs
out
sub
inc
iret
mov
cwde
div
aas
mov
mov
fnstcw
xor
xor
stos
dec
cmp
ss
adc
enter
js
sub
pushf
daa
jns
sbb
fwait
sbb
mov
jns
test
ficom
mov
mov
add
push
stc
and
stos
xlat
packsswb
and
add
out
psllw
push
fcmove
lea
mov
in
mov
cmovb
mov
jecxz
cmp
dec
cmp
pop
push
lahf
adc
or
push
push
inc
dec
dec
jae
sub
out
add
test
inc
push
sar
mov
fisub
adc
lods
add
add
adc
daa
and
cmp
add
mov
dec
stos
push
mov
ret
shl
push
add
xor
mov
outs
mov
repz
addr16
inc
addr16
or
sar
or
pop
or
pop
je
(bad)
or
pop
call
in
clc
std
add
jae
pushf
test
mov
arpl
xchg
sbb
push
xlat
add
adc
stos
aaa
and
lods
fiadd
loop
stc
iret
push
or
add
in
ret
inc
rol
mov
call
push
adc
mov
dec
call
stc
adc
push
xchg
cmc
mov
prefetcht0
pop
rol
jmp
dec
cmp
push
sbb
mov
sahf
int
movs
scas
push
shl
jns
(bad)
push
mov
mov
shr
jle
mov
adc
repnz
adc
rol
mov
ret
dec
retf
cmp
stc
xor
jns
and
inc
and
repnz
rcr
xlat
mov
ss
or
test
fst
bound
hlt
in
ffree
jmp
in
rcl
movs
lock
mov
cwde
adc
push
adc
adc
lods
or
jge
aad
not
(bad)
retf
jns
adc
mov
sub
das
cmp
test
pop
dec
aaa
xchg
sbb
add
sub
xor
loope
ja
xchg
sbb
mov
movs
ins
dec
push
test
add
test
popf
clc
adc
inc
xor
int3
fwait
ins
fs
icebp
sub
aam
sbb
xor
(bad)
sub
adc
sub
jo
push
jl
das
or
bnd
pop
call
jne
cdq
ja
sub
jp
call
pop
icebp
mov
xchg
arpl
jns
outs
in
cmc
shl
add
cs
call
or
shl
mov
adc
arpl
inc
jae
aam
outs
ret
sbb
ss
dec
loopne
gs
ins
std
loop
rcl
xchg
gs
scas
aaa
push
xchg
js
jb
xlat
jne
jne
gs
fnstsw
addr16
shl
push
in
ja
ss
cs
jns
cld
mov
inc
pop
inc
mov
jecxz
add
sub
dec
imul
add
fisubr
cmps
outs
scas
loopne
inc
js
and
jp
hlt
mov
sbb
and
or
mov
mov
shr
xchg
mov
push
xchg
sub
jp
add
ss
mov
imul
xor
test
inc
mov
test
int
cmc
bound
inc
mov
outs
cmc
sbb
ror
pushf
dec
adc
push
idiv
test
adc
jae
ins
outs
mov
(bad)
cdq
les
lods
div
mov
pop
xchg
mov
or
inc
dec
aad
leave
int3
push
adc
and
or
frstor
cwde
jne
dec
fsubr
idiv
loop
pushf
cmp
pop
fimul
xchg
sahf
mov
push
lds
fld
jns
loope
shl
fstp
push
mov
nop
mov
aad
pop
jmp
xor
push
dec
push
adc
call
ret
add
in
jmp
jl
xchg
(bad)
js
idiv
jns
pusha
shr
and
cmp
inc
sbb
ins
cli
retf
rcl
js
push
fidivr
xchg
call
inc
mov
(bad)
push
mov
add
pop
sub
or
add
and
mov
dec
pop
push
jne
jae
pushf
into
and
jnp
push
and
loope
jbe
ins
xor
stos
add
repnz
ds
movs
pop
out
sahf
push
and
add
adc
add
aad
mov
or
test
data16
lods
push
loop
ret
sti
pop
lods
bound
(bad)
jmp
mov
not
les
push
mov
push
or
stc
xor
xchg
test
daa
sub
jmp
mov
mov
scas
sbb
push
xlat
jle
jl
jae
pop
mov
jmp
jge
inc
dec
push
sar
xor
cld
and
into
xor
mov
adc
iret
(bad)
jle
cmp
jmp
mov
xchg
sahf
fnstcw
xchg
ss
loopne
stos
mov
sbb
mov
sbb
and
dec
popa
sbb
sti
mov
out
mov
out
dec
nop
pop
aaa
adc
icebp
xchg
mov
fdivp
mov
in
cmp
test
sbb
mov
xchg
push
adc
call
inc
pop
daa
fs
fiadd
or
adc
or
cmc
cmp
arpl
cwde
aam
aaa
test
xchg
mov
enter
mov
call
sub
xchg
sbb
jg
int3
adc
sbb
lahf
jle
xor
mov
stos
div
push
je
lds
lods
jo
xchg
xchg
mov
or
adc
mov
stos
adc
ss
int3
nop
fst
in
push
stc
sub
stos
(bad)
dec
sar
adc
out
nop
mov
fwait
xor
dec
mov
int3
dec
repz
les
pop
mov
inc
adc
les
in
ret
lds
dec
jmp
imul
and
popf
lods
jb
in
mov
dec
and
scas
test
sbb
xor
out
push
xchg
xor
test
pop
jne
dec
jp
stc
rol
std
(bad)
fsubr
or
sub
out
gs
jmp
test
out
in
add
loop
daa
sbb
xchg
es
(bad)
jle
add
shr
cs
xor
out
adc
adc
add
sbb
push
sbb
or
sbb
call
mov
push
repnz
dec
xor
iret
push
ja
scas
cmp
jmp
jp
(bad)
cmp
lock
mov
mov
xchg
push
cdq
ss
push
icebp
fwait
xchg
ds
jmp
repnz
repnz
or
mov
push
add
mov
mov
ret
int3
pop
mov
scas
outs
mov
push
dec
add
adc
imul
test
imul
lds
pop
icebp
adc
iret
pop
push
(bad)
fucomp
dec
pop
(bad)
mov
or
iret
mov
out
cdq
fsub
ficom
repnz
test
cmps
jmp
shl
fsub
sbb
add
xor
retf
sub
sbb
and
ret
xor
sbb
repz
dec
js
pop
and
pop
jmp
sbb
xlat
jmp
sbb
pop
xor
fmul
jo
or
scas
(bad)
loopne
addr16
sar
ins
cmps
sbb
lock
push
push
jno
jno
call
ret
daa
inc
mov
cmp
ss
scas
add
xchg
dec
xor
jmp
inc
mov
adc
hlt
arpl
cli
jge
or
pop
mov
xchg
push
loopne
and
dec
mov
addr16
nop
(bad)
imul
outs
mov
mov
and
push
sub
nop
nop
gs
push
aam
dec
aam
out
or
jae
and
adc
mov
mov
and
xchg
xchg
jnp
(bad)
scas
adc
pop
call
outs
repnz
mov
mov
and
in
outs
cmps
pop
ret
xchg
fidivr
mov
jno
mov
(bad)
jae
adc
xchg
cmps
push
rcr
pop
pop
mov
or
mov
dec
fnstsw
adc
sbb
rcl
jo
(bad)
jne
fcomp
mov
ror
popf
add
cmp
cmp
mov
add
jl
dec
dec
adc
mov
push
out
push
pop
js
(bad)
and
and
xchg
push
and
ds
mov
rol
pop
das
scas
stos
cmp
daa
dec
xor
push
jns
xor
shl
dec
ss
outs
je
cs
repnz
jae
out
retf
push
iret
push
popa
dec
xchg
or
push
imul
test
mov
dec
push
and
inc
xlat
and
hlt
sub
pushf
adc
push
pop
(bad)
icebp
dec
adc
jl
mov
fcmove
stos
sbb
push
jnp
mov
imul
(bad)
push
sbb
xchg
mov
data16
out
retf
hlt
jnp
push
test
inc
xor
iret
cmp
call
and
ficom
ss
clc
inc
mov
mov
leavew
xor
data16
and
lock
inc
lock
sar
mov
mov
mov
lds
les
pop
adc
icebp
inc
add
iret
lock
xor
pop
ins
and
sub
dec
and
pop
xor
adc
mov
xchg
rol
mov
xchg
imul
ret
(bad)
push
push
out
add
pop
(bad)
mov
or
pop
cmp
mov
scas
pop
dec
add
or
lock
fnstcw
lods
mov
push
jmp
addr16
(bad)
cmp
sbb
pop
dec
jns
sub
xor
call
repz
jmp
sbb
add
mov
test
in
aaa
retf
inc
pop
mov
and
push
push
push
data16
pop
pop
lahf
(bad)
es
mov
movs
iret
movs
jmp
cmps
push
cli
ror
xchg
inc
ret
call
ror
ins
shr
ins
lds
mov
in
rcl
sub
ror
pop
xor
(bad)
add
jb
lods
hlt
stos
cwde
dec
or
rcr
sbb
sub
xlat
pusha
retf
into
add
pop
out
push
stos
jbe
jecxz
sahf
cmc
in
cld
bound
cmp
(bad)
ret
sub
jecxz
sbb
hlt
lahf
loope
xchg
xchg
or
lea
scas
pop
sahf
call
adc
in
(bad)
inc
inc
push
jmp
and
jo
cmp
pop
shr
adc
mov
popa
out
movs
pusha
mov
in
cmc
push
push
sub
xchg
cdq
mov
cld
mov
pusha
out
and
dec
out
je
test
pop
jb
fisub
and
push
jp
out
cmp
shl
adc
add
mov
aad
inc
or
int3
dec
xor
sbb
in
test
xchg
int
test
sbb
pop
jmp
int
ss
xor
jecxz
adc
lds
and
lock
cmp
or
sahf
test
cmp
inc
stos
ins
iret
ror
stc
in
test
or
add
ret
adc
or
mov
mov
scas
pop
jp
movs
jecxz
mov
dec
xchg
lock
mov
cld
retf
mov
je
mov
pop
jp
hlt
mov
sbb
and
call
outs
gs
sahf
aas
(bad)
fbstp
aas
jge
and
into
cli
xor
sub
sub
stos
pop
mov
ret
jo
clc
sbb
mov
or
je
ins
jmp
and
adc
fs
cmp
jmp
fsubr
xchg
enter
adc
jnp
jns
xor
or
ins
daa
xor
lea
(bad)
cs
cmp
jno
sub
xlat
out
(bad)
xchg
cmp
loopne
adc
shl
dec
retf
pop
mov
out
shr
push
jmp
movs
inc
sbb
mov
aad
add
lea
in
cmc
(bad)
fisttp
mov
shr
out
xor
xchg
cmc
jp
inc
and
xor
int
rol
sub
dec
scas
mov
ins
mov
add
fmul
add
je
jb
mov
inc
stos
rcr
jmp
sub
sbb
push
je
xlat
ret
mov
mov
adc
pop
lods
sti
imul
mov
int3
cmp
jl
out
cwde
adc
or
xor
rol
in
cmp
pushf
mov
test
neg
(bad)
xchg
movs
mov
nop
mov
inc
gs
retf
xchg
push
mov
sub
inc
loopne
or
sub
fiadd
sbb
ret
pop
int
int
add
xchg
in
(bad)
cmc
push
out
mov
xor
sub
or
mov
push
lahf
data16
mov
mov
stc
sahf
jne
aas
mov
push
dec
xor
sub
push
cmp
test
push
mov
or
sbb
jnp
mov
adc
fnstcw
push
mov
pop
push
sub
scas
imul
lods
shr
and
jl
sbb
ss
pop
and
or
xor
cmp
or
sub
test
inc
sub
mov
cmp
mov
jge
cmc
sbb
pop
mov
and
sbb
sar
sub
fdivr
and
mov
loop
enter
jecxz
add
sub
xchg
cmps
jle
sbb
jecxz
push
cmp
fwait
in
mov
sub
jl
cmps
ja
add
pop
js
(bad)
push
out
test
push
cmp
daa
out
mov
cld
xor
mov
inc
inc
outs
aad
and
or
xchg
jle
stos
test
fild
sub
cmp
push
out
dec
sbb
jb
mov
fcomp
call
cmp
push
and
dec
sbb
mov
mov
dec
xchg
mov
in
aaa
sub
xchg
test
dec
pop
rcl
es
inc
mov
or
sub
xchg
leave
out
mov
ret
es
xlat
inc
pop
loopne
(bad)
mov
cmp
mov
out
sbb
push
ret
js
jne
add
pop
ins
adc
adc
mov
push
or
mov
adc
xchg
pop
mov
and
or
sbb
jo
dec
popa
stos
icebp
cmp
sar
add
pop
sbb
leave
imul
xor
pop
jp
xchg
add
xchg
test
mov
sub
mov
leave
lea
mov
push
pop
es
mov
popf
or
out
scas
loopne
aad
stc
scas
mov
jb
jno
mov
mov
(bad)
jl
mov
xchg
(bad)
pop
nop
(bad)
cmp
imul
ss
aad
not
les
int
ret
stos
clc
enter
ja
iret
outs
out
add
(bad)
add
loop
cmps
(bad)
jecxz
push
sub
int
cs
jb
xor
leave
out
jae
jg
push
jle
imul
mov
sbb
out
loopne
pop
adc
cmp
jne
jns
shl
dec
pop
xor
xchg
daa
push
adc
or
mov
xchg
fnstenv
pop
bound
retf
mov
sbb
adc
push
sbb
mov
(bad)
jno
and
mov
jne
adc
mov
adc
scas
dec
in
ret
pusha
repz
repz
repz
fdivr
scas
es
and
sahf
(bad)
out
sbb
sbb
(bad)
repnz
retf
xor
adc
sbb
hlt
and
cld
imul
add
lods
push
iret
outs
mov
nop
push
ja
daa
push
movs
ffree
sar
adc
in
fist
shl
push
mov
leave
hlt
pop
jmp
std
inc
xchg
jb
adc
pop
lods
jp
jne
lods
retf
push
push
push
dec
not
scas
dec
xchg
inc
or
or
mov
xor
or
adc
fimul
repz
pop
xchg
mov
imul
adc
sub
mov
xor
or
ror
stos
gs
and
mov
adc
mov
retf
sahf
leave
or
cmps
jb
mov
sbb
jmp
sbb
cmp
mov
inc
mov
fcom
push
add
adc
cld
arpl
push
pop
stos
push
mov
mov
mov
aas
mov
movs
(bad)
cmp
mov
(bad)
clc
and
push
add
out
push
jmp
scas
adc
pop
jmp
xchg
lahf
imul
hlt
xor
dec
push
dec
dec
jae
pop
sahf
push
in
addr16
cld
sub
inc
test
mov
outs
and
sar
push
mov
cmp
imul
repz
cmps
xchg
fistp
enter
in
sub
sub
push
jb
adc
lods
out
add
es
adc
push
pop
xor
dec
cmps
push
push
dec
adc
into
pop
bound
mov
or
in
xchg
lods
mov
add
jmp
fwait
xor
pop
jae
shr
fcmovu
adc
add
push
sub
out
pop
outs
nop
jle
xchg
inc
aas
rcr
or
mov
sbb
jmp
jp
(bad)
xchg
fstp
in
sub
test
xor
mov
(bad)
(bad)
sub
in
cmp
loop
dec
xchg
(bad)
jae
loop
xchg
rcl
pop
jo
inc
repz
popf
test
cmp
inc
imul
stos
mov
dec
aad
lock
aaa
lock
lods
ret
xor
mov
mov
xchg
mov
push
jg
cmp
mov
ss
mov
mov
cmp
mov
imul
retf
xchg
sub
pushf
mov
cmps
jns
jle
iret
sbb
jno
jnp
gs
mov
pop
inc
and
mov
cdq
cmp
xchg
push
jb
push
push
in
sub
jecxz
div
cmp
add
test
push
leave
push
loop
jne
fistp
jg
and
stos
popa
int3
jmp
cmps
jp
jge
rcr
fsubr
and
mov
je
mov
xchg
cmp
add
dec
inc
sbb
ror
ins
ds
adc
sub
mov
icebp
fdiv
xchg
inc
es
addr16
and
repz
jge
(bad)
pop
mov
fild
out
mov
arpl
pop
add
clc
ret
cmp
(bad)
jle
push
push
mov
or
call
je
jb
mov
test
mov
mov
sysexit
dec
into
jns
jl
push
mov
(bad)
in
mov
mov
jmp
dec
loopne
jae
push
cmp
inc
sub
int3
out
stos
inc
paddw
mov
dec
sub
loopne
mov
mov
mov
push
cmps
jns
stos
fistp
clc
sbb
out
adc
hlt
test
out
jmp
adc
push
cmps
icebp
jp
cli
lods
or
movs
mov
dec
xchg
ins
jbe
aas
fsubr
pop
pushf
add
sti
mov
xchg
xor
scas
inc
scas
rcr
pop
add
sbb
ror
mov
movs
and
adc
xchg
mov
pop
dec
jne
mov
(bad)
and
push
jmp
sti
sbb
push
(bad)
xor
dec
jns
dec
sub
jnp
mov
stc
cld
es
and
jle
je
jp
mov
js
int3
pop
fdiv
lea
dec
jle
xchg
dec
push
add
cmp
push
rcr
(bad)
pop
mov
mov
test
pop
mov
xor
ja
jmp
retf
out
fistp
cmp
(bad)
std
push
imul
jg
lahf
imul
adc
mov
mov
mov
cwde
mov
cmps
sbb
xchg
outs
pop
push
xchg
xlat
xor
fadd
jnp
call
bound
fs
xchg
movs
stc
scas
push
lock
and
mov
cmp
ror
mov
les
test
and
or
mov
cmp
or
add
fwait
sbb
scas
(bad)
pop
cld
add
inc
xchg
fistp
dec
int
pop
xchg
neg
mov
push
mov
mov
leave
pop
outs
fld
iret
mov
sbb
adc
push
xchg
push
jno
rcr
cli
add
movsx
mov
jnp
cmps
xor
daa
or
mov
es
or
mov
adc
cmp
fdivr
ret
jnp
mov
aas
fst
and
cmps
add
mov
loope
stos
cmps
and
push
dec
jmp
sbb
or
pop
scas
scas
ins
and
fwait
imul
sbb
sbb
shl
movs
push
cmp
js
inc
aaa
sub
xchg
ret
cmps
jge
sbb
daa
pop
fild
add
inc
sti
add
mov
mov
jns
jae
sub
xchg
adc
imul
inc
jge
imul
stos
cmps
or
gs
and
jp
out
mov
adc
sub
bound
leave
xchg
mov
ins
mov
std
pop
mov
lahf
es
popa
(bad)
and
inc
pop
cmps
dec
adc
mov
jle
(bad)
jecxz
sub
jmp
sbb
rol
jge
(bad)
icebp
test
sub
retf
call
repnz
aam
test
rol
rcl
(bad)
xlat
add
test
ins
cs
icebp
fcmovnb
test
dec
ret
cmp
je
ret
shr
popa
inc
or
repz
ror
loopne
(bad)
mov
mov
es
xor
mov
into
sub
addr16
push
je
xchg
sub
pop
pop
mov
test
lods
inc
js
lds
stos
lods
cmp
in
mov
cli
push
sbb
test
pop
adc
pusha
add
sbb
inc
cwde
inc
sub
mov
div
push
test
lds
mov
xor
fistp
rcl
xchg
xchg
outs
push
movs
into
add
dec
jmp
xchg
in
into
popf
ins
lea
bound
push
fldcw
jecxz
adc
rol
call
mov
test
loope
jle
loopne
retf
aas
mov
jo
popa
xor
repnz
push
mov
inc
out
push
pop
and
pop
leave
es
setae
xchg
ds
cmc
xor
jmp
or
lahf
mov
retf
std
sti
inc
cmp
adc
cmps
adc
add
add
ins
add
xor
push
bnd
clc
mov
or
rcr
das
adc
jecxz
loope
pop
retf
or
lock
int
rol
cli
addr16
pop
jo
xchg
add
stos
mov
sbb
cmp
cmp
mov
(bad)
mov
shl
out
hlt
test
sbb
add
imul
fild
mov
out
call
mov
cmp
push
fidiv
gs
jl
or
add
sbb
and
mov
cmp
sub
cmps
js
jmp
int
mov
or
dec
or
rol
xor
adc
dec
adc
cmps
jg
jmp
sub
dec
xor
sbb
sbb
stos
fdiv
push
inc
xchg
add
dec
stc
jno
(bad)
pop
lods
out
popf
adc
int
adc
jb
xor
mov
iret
jmp
adc
or
sub
mov
pop
js
stos
scas
adc
outs
rcr
stos
rol
push
test
push
fild
pop
shr
pop
and
push
xchg
pop
mov
clc
mov
push
jbe
xchg
and
cmp
mov
test
jge
xor
imul
ret
popf
push
lods
dec
xchg
stos
inc
scas
or
mov
mov
mov
arpl
push
mov
jbe
mov
sbb
cmp
int
mov
(bad)
mov
sub
jecxz
jle
fidivr
push
inc
mov
outs
into
popf
pop
(bad)
xor
das
les
sub
rcl
pop
mov
push
or
int
xchg
retf
xor
hlt
movs
push
mov
adc
mov
sti
add
xchg
call
out
mov
mov
pop
hlt
nop
test
int
popf
ja
int3
jge
out
ss
mov
xchg
push
jmp
cmc
pop
movs
push
fs
in
sbb
inc
inc
cmps
lds
popf
scas
inc
outs
sub
shr
inc
scas
pushf
add
dec
adc
mov
xlat
mov
and
inc
xor
jo
pop
sub
sub
(bad)
into
mov
inc
(bad)
arpl
xor
pop
dec
aad
mov
aas
test
mov
scas
and
rol
imul
in
jns
imul
sahf
les
or
mov
pop
dec
scas
aam
mov
lahf
add
sti
iret
neg
push
lea
aad
xor
out
mov
mov
dec
adc
not
aad
fadd
cdq
shr
push
rol
jnp
dec
mov
je
test
sub
cdq
or
mov
push
inc
shl
mov
out
sub
xor
inc
and
leave
int
aad
dec
sub
pop
cld
xlat
mov
cdq
or
(bad)
cld
push
mov
into
fwait
(bad)
push
arpl
sar
repz
jecxz
jmp
xor
adc
aam
cdq
stos
test
or
xor
sub
bound
mov
jbe
adc
and
cmc
leave
loope
iret
push
jmp
dec
popf
pop
ds
loope
imul
inc
dec
shr
aam
dec
push
js
mov
xlat
sub
aas
ret
and
das
fisubr
cmp
mov
push
pop
add
xlat
xor
or
inc
mov
xor
popf
xor
sbb
sub
hlt
sub
iret
pop
or
mov
ja
or
std
xchg
fistp
sub
push
call
test
outs
sbb
inc
movs
pusha
adc
inc
test
sbb
mov
retf
sub
inc
and
jmp
fldenv
xchg
or
(bad)
xor
(bad)
lahf
inc
popf
iret
ss
(bad)
sbb
dec
pushf
adc
adc
inc
or
push
mov
pop
fwait
and
inc
xchg
es
ins
cmp
stc
mov
test
test
leave
sub
cdq
rcr
or
js
or
mov
or
aaa
das
pop
inc
(bad)
cld
dec
rcr
popf
mov
inc
fistp
imul
pop
ds
mov
push
clc
(bad)
lods
fwait
je
mov
lods
dec
pop
pop
mov
(bad)
(bad)
in
ins
push
pushf
cs
imul
or
sbb
shl
adc
xlat
xchg
add
pop
adc
mov
pop
inc
jle
push
stc
mov
and
xchg
jne
jmp
cmp
inc
in
aaa
inc
cwde
xchg
ror
pop
pop
frstpm(287
mov
mov
sbb
movs
fcmovb
sub
cmp
push
out
daa
dec
cs
inc
pop
cmp
push
nop
xchg
xchg
dec
test
std
dec
jnp
jp
pop
mov
jp
(bad)
aas
jmp
ficomp
push
mov
and
std
clc
mov
jns
add
leave
cli
or
cmc
comiss
jmp
dec
sbb
xchg
(bad)
daa
fs
lods
scas
xchg
ret
jno
addr16
jne
dec
shl
pusha
cwde
out
cmp
pop
and
int3
out
aad
push
push
aad
pop
mov
add
in
in
je
xchg
repz
inc
pop
movs
aaa
push
ficomp
and
sub
movs
mov
pop
jb
dec
xchg
xor
cwde
imul
cmp
pop
or
sbb
std
add
dec
push
push
das
dec
pop
jge
jle
mov
mov
test
shl
xchg
dec
mov
clc
sbb
sbb
adc
dec
popa
cld
or
fsub
daa
movs
and
js
inc
sub
pop
ins
mov
rcl
push
xlat
jmp
ins
push
movs
mov
push
and
cld
movs
pop
lds
adc
std
or
jmp
add
in
fsincos
loop
push
mov
enter
inc
cmps
jle
lahf
sar
cmp
stos
stc
aas
mov
fwait
test
pop
adc
gs
sar
int
or
jg
jns
aas
ret
jns
inc
fdivr
lods
jp
pop
add
jp
pop
(bad)
mov
aam
sub
(bad)
dec
and
jg
mov
jmp
sub
xlat
loopne
mov
add
dec
adc
cld
adc
pop
pop
call
cmp
push
std
enterw
xchg
js
cs
cmp
fwait
les
mov
and
cmp
inc
dec
fwait
or
loope
mov
jmp
xchg
or
mov
xchg
inc
jmp
and
mov
iret
jo
adc
add
call
out
arpl
stos
in
jg
test
data16
lea
int
push
sub
lahf
xchg
mov
int
mov
stc
outs
popf
jb
add
enter
inc
mov
push
adc
sbb
pop
daa
fsubr
or
push
xchg
push
push
fucom
xor
loopne
out
fcom
aam
push
fsubr
xchg
fisttp
je
stc
dec
sbb
pop
sbb
leave
scas
mov
je
ror
inc
call
pusha
xor
mov
mov
lea
test
lahf
call
jnp
out
stc
iret
add
call
jge
dec
leave
xor
call
push
es
das
shl
and
or
xor
jne
or
mov
adc
lods
loop
fs
out
adc
mov
sbb
(bad)
lahf
cmp
ins
(bad)
pop
imul
ret
mul
push
mov
loop
add
shl
test
push
jno
xchg
in
pop
neg
ror
mov
xchg
(bad)
jp
mov
aam
push
sbb
and
mov
push
push
repz
in
mov
sub
push
xchg
jmp
into
jecxz
fimul
int3
outs
sub
in
lahf
(bad)
and
test
ret
not
cmp
mov
jo
xchg
mov
fcomp
jmp
pop
cmp
add
sub
jg
sahf
push
push
and
pop
in
cdq
iret
imul
jo
sub
push
pop
xor
sbb
mov
ins
adc
mov
inc
(bad)
mov
leave
cmp
stos
push
sbb
and
xor
mov
mov
xor
pop
nop
mov
enter
push
out
mov
adc
int
xor
mov
add
aaa
adc
inc
cld
retf
arpl
push
xchg
data16
out
push
das
pop
adc
pop
adc
xchg
cmp
dec
and
xchg
cmp
mov
pop
adc
mov
inc
pop
xchg
inc
cmc
call
loope
inc
iret
dec
mov
test
repz
stc
nop
mov
dec
push
jo
xlat
dec
pop
sub
xchg
add
pop
dec
addr16
nop
movs
mov
cmps
sub
add
sub
push
push
sti
sbb
jge
fistp
rcl
pop
mov
(bad)
xor
loopne
push
xor
mov
add
jns
mov
pop
pop
retf
cs
lods
or
mov
sar
xor
aas
mov
add
sub
sahf
sbb
inc
fdiv
rol
stc
sbb
pop
aaa
addr16
add
(bad)
outs
mov
xchg
inc
sbb
enter
xchg
movs
lea
mov
add
imul
pusha
fistp
sbb
add
and
loope
inc
lahf
inc
mov
mov
sub
neg
cmp
mov
nop
or
mov
cmp
jle
addr16
add
push
mov
mov
xchg
push
and
mov
and
or
jno
pop
fs
test
int
dec
adc
push
xor
stos
int
xchg
push
pop
adc
xor
fcmovne
ficom
aaa
aam
hlt
stos
xlat
xchg
push
lods
fwait
sbb
(bad)
dec
mov
jnp
les
adc
sahf
jecxz
dec
out
push
shl
lds
adc
pop
mov
(bad)
xchg
call
inc
pop
mov
add
adc
dec
leave
mov
mov
mov
dec
ins
push
mov
lods
sbb
push
lea
ror
cs
mov
(bad)
and
popa
sbb
cld
and
lds
adc
adc
retf
(bad)
jp
mov
aaa
sub
adc
data16
sbb
jmp
cmp
inc
or
mov
cli
cmp
outs
mov
push
mov
jnp
mov
mov
lahf
sahf
and
xchg
ret
(bad)
jnp
push
out
mov
sar
mov
sti
fsubr
dec
sbb
mov
pop
inc
lahf
lds
out
xor
mov
jmp
mov
mov
pop
fisub
out
pop
pusha
add
dec
inc
ss
cdq
jne
icebp
stos
pop
fcomp
sbb
cmp
enter
jb
popa
pop
sbb
test
daa
rcl
pop
jns
mov
xlat
push
push
pushf
or
or
mov
lods
aam
movs
xor
cwde
jge
pop
imul
fcom
pop
jb
and
mov
mov
push
or
inc
test
pause
imul
jo
sbb
jo
cmova
scas
arpl
sbb
xchg
movs
mov
cmc
pop
stos
inc
jns
dec
mov
sbb
lea
mov
and
adc
iret
cmp
int3
add
mov
fs
and
or
mov
mov
adc
jl
push
and
leave
dec
popf
push
sar
cwde
inc
ins
dec
cmc
into
imul
int
int
ja
pop
adc
xor
dec
mov
aaa
cmp
add
addr16
call
and
cmp
call
and
sahf
and
dec
xor
out
imul
repnz
js
movs
fidiv
pop
pop
mov
ret
daa
lea
or
mov
xchg
(bad)
js
add
scas
out
sub
mov
jns
mov
xchg
push
fisubr
icebp
jbe
cmp
dec
mov
arpl
neg
jmp
ret
lock
pop
add
and
leave
aas
jb
pop
push
adc
fbstp
jbe
fadd
jecxz
inc
xor
neg
aaa
out
daa
loop
dec
xchg
lock
scas
mov
sub
(bad)
shl
cmc
test
add
mov
mov
sbb
xchg
mov
add
shl
push
arpl
cld
mov
nop
stos
(bad)
fild
test
mov
retf
sbb
dec
(bad)
pop
dec
out
push
in
mov
jl
xlat
out
not
and
cmps
push
test
push
or
in
fcom
sahf
cdq
lds
mov
scas
xchg
fst
and
push
cmp
mov
mov
mov
stc
test
lds
pop
popa
pop
mov
adc
push
inc
scas
enter
mov
stc
imul
aad
out
cmp
mov
sbb
cmp
hlt
aam
xlat
fadd
test
push
sub
add
inc
mov
push
mov
jl
inc
mov
ret
shl
push
pop
mov
add
or
stc
sbb
das
jg
cmp
mov
cmp
xchg
cdq
aaa
repz
call
dec
ficom
scas
sub
shr
jns
dec
mov
(bad)
sbb
and
sub
jmp
xchg
mov
fld
xor
or
(bad)
fild
fs
xor
call
iret
mov
pop
inc
mov
xor
jl
adc
xchg
add
scas
xor
(bad)
jne
call
mov
je
out
sar
aas
fucomi
sub
lahf
mov
adc
xchg
sbb
cmp
adc
sbb
inc
pusha
xor
mov
je
ret
jecxz
or
stc
loop
sbb
and
dec
push
cmp
mov
fisubr
inc
ins
adc
pop
inc
cmps
jns
call
sub
call
addr16
jo
aam
imul
adc
and
arpl
out
or
sub
xchg
push
loope
jmp
stos
jmp
nop
or
sbb
adc
ror
jmp
sar
int3
std
movs
adc
aad
fistp
retf
cmp
sti
and
fld
lahf
iret
hlt
cmp
mov
xchg
mov
loopne
jg
sub
test
push
cmp
imul
cmp
pop
test
jnp
or
int
xchg
xchg
cdq
or
ret
jae
xor
test
and
jbe
sbb
adc
dec
pop
dec
cmp
mov
inc
inc
jbe
sub
push
mov
(bad)
daa
movs
clc
mov
add
mov
cmc
cmp
stc
icebp
stc
dec
scas
ret
or
scas
inc
sub
fldcw
call
dec
lahf
and
add
pop
shl
mov
outs
pop
sub
call
xchg
arpl
fnstcw
or
pop
add
fst
stos
out
push
push
(bad)
(bad)
imul
or
pop
mov
in
rol
out
ret
out
fidiv
jmp
iret
inc
repz
enter
aaa
mov
push
sub
ja
(bad)
xchg
mov
lods
daa
js
call
out
dec
lds
adc
sub
imul
out
push
fdivr
dec
fst
call
or
movs
fisub
aaa
jle
shl
jnp
and
ud1
jle
js
cmps
iret
mov
scas
out
fimul
sub
outs
les
sbb
lods
stos
mov
sbb
inc
aam
jnp
mov
push
or
cs
push
or
xchg
push
jmp
popa
out
mov
xchg
arpl
xor
dec
sahf
out
xor
or
aaa
cmc
je
mov
enter
mov
xor
leave
push
or
gs
add
sbb
and
or
and
data16
pop
jbe
test
in
inc
lahf
pop
ds
es
js
add
or
add
add
push
pop
fnstcw
sub
fs
scas
stos
repnz
pop
fbstp
adc
xlat
push
clc
movs
sub
mov
push
into
sub
sbb
(bad)
out
or
aas
sub
retf
mov
shr
sbb
std
in
mov
repnz
cmps
imul
xchg
jl
ds
xor
sub
(bad)
out
mov
add
pop
add
das
or
jp
inc
add
call
pushf
jmp
sub
aaa
inc
in
inc
or
cmp
dec
std
push
gs
das
xchg
sub
mov
fimul
outs
and
or
and
fwait
cs
and
mov
inc
pop
or
sub
fmul
xor
push
mov
xor
ficom
in
cmp
jns
stos
xchg
fst
push
repnz
adc
adc
push
add
push
push
fdivr
pop
pop
xor
in
arpl
mov
push
xor
sbb
sahf
out
fsub
and
sbb
mov
aam
push
repnz
fnstsw
xor
movs
js
shl
pop
mov
adc
pop
mov
dec
repz
push
lods
dec
push
inc
cdq
ss
fs
in
dec
mov
mov
in
test
jmp
xchg
mov
js
fs
xchg
sub
push
mov
mov
pushf
aad
or
dec
push
rcr
mov
jp
js
cld
and
adc
pushf
pop
ss
push
xor
xchg
xchg
sar
jo
lahf
test
or
in
(bad)
cli
jmp
fild
fistp
scas
cmc
sti
and
je
test
dec
in
add
and
sbb
shl
sub
fs
rol
js
shl
out
cmp
mov
xchg
(bad)
loope
mov
push
dec
mov
ins
test
push
add
mov
cdq
stos
in
dec
in
dec
inc
jecxz
jmp
push
ret
jnp
sub
mov
adc
or
hlt
je
push
lods
lods
shr
mov
cdq
sub
mov
sahf
push
movs
cmps
repnz
(bad)
into
(bad)
not
push
dec
jno
mov
(bad)
int
xchg
or
mov
push
mov
cmp
mov
sub
xor
out
in
popf
mov
das
ficomp
push
ror
scas
fcmovnu
sub
dec
sub
gs
pop
push
movs
adc
jp
jae
sti
add
in
and
lods
enter
mov
jle
push
sub
fdivrp
popa
cmps
push
fsubr
pop
jecxz
mov
push
fcomp
ror
fistp
push
pop
enter
call
push
mov
or
and
(bad)
sbb
xor
adc
xchg
mov
(bad)
xchg
cmc
or
cld
dec
xor
or
cmp
push
outs
mov
xor
out
add
xor
xor
shr
mov
dec
adc
dec
xchg
push
(bad)
xchg
push
dec
add
mov
outs
xchg
pop
lock
adc
(bad)
mov
fmulp
xor
push
dec
inc
inc
dec
adc
jb
mov
clc
cdq
jns
mov
xor
inc
sub
lea
mov
push
xor
add
loop
test
mov
cmp
jb
inc
cmp
sbb
push
cmp
das
cwde
jmp
fs
rcr
sbb
shr
lods
push
adc
test
cdq
lea
mov
fcom
sbb
sbb
sub
pop
xchg
stos
retf
lods
ins
sar
xbegin
mov
pop
jmp
fidivr
jb
pop
je
sub
call
xor
icebp
ror
push
jno
aam
ja
cs
jo
(bad)
std
in
push
sar
sub
bound
mov
inc
pop
ror
inc
adc
fcom
cmc
xchg
dec
push
adc
icebp
xchg
push
repnz
jns
mov
pop
frstor
or
rol
mov
or
and
data16
mov
imul
(bad)
mov
loop
stc
sbb
fild
xor
shl
stos
push
clc
les
outs
call
dec
sub
ja
ds
add
jns
mov
imul
gs
jns
pop
in
mov
cmps
xchg
dec
or
fimul
sub
push
push
mov
cmp
add
xor
retf
jnp
pop
add
sub
jmp
ss
js
add
je
push
xchg
sbb
lds
pop
pushf
or
(bad)
mov
clc
pusha
sbb
inc
movs
neg
xor
dec
data16
inc
pusha
leave
mov
jle
mov
rcr
mov
je
mov
in
mov
xor
fisubr
(bad)
push
mov
mov
jecxz
push
jo
addr16
int
sub
stos
cld
xchg
(bad)
cs
inc
lods
mov
xchg
push
aas
and
jmp
in
cli
jnp
mov
mov
add
mov
dec
(bad)
sbb
mov
jmp
push
sbb
push
bound
cmp
mov
ror
shl
clc
sub
(bad)
xor
push
dec
cdq
nop
xchg
ins
or
ret
out
xchg
xor
stos
aad
stc
pusha
mov
ds
(bad)
xchg
ret
xchg
or
shl
dec
lea
lea
xchg
adc
jg
cmp
js
or
push
mov
sub
jle
sbb
rcl
mov
movs
xchg
aad
fucomip
neg
cwde
and
jle
jecxz
test
cmps
push
xchg
movs
(bad)
scas
int3
sub
dec
inc
hlt
fs
add
xchg
sbb
loopne
stos
nop
fdivr
std
cmp
push
sub
sar
dec
shl
or
cmps
dec
adc
imul
loopne
push
adc
into
sub
cmps
fisttp
mov
xor
(bad)
cmp
bound
add
mov
mov
(bad)
mov
and
rcr
mov
mov
mov
push
mov
sub
xchg
add
hlt
popf
ret
or
mov
les
mov
dec
cmp
sub
(bad)
jo
add
and
sub
cmp
out
push
mov
push
je
fwait
xor
pop
out
mov
popf
cs
push
arpl
dec
sbb
int
shr
mov
xchg
test
jo
inc
sar
shl
xor
mov
bound
aad
xor
push
mov
ret
pop
les
fst
out
fsubr
sbb
scas
ins
inc
jmp
cmp
(bad)
idiv
dec
sbb
pusha
and
push
sub
xchg
push
add
repnz
mov
mov
or
call
idiv
leave
ins
das
jmp
fisttp
xchg
mov
pop
enter
out
call
cs
mov
sar
push
inc
test
scas
fidiv
cdq
sbb
jmp
sbb
cld
call
lahf
lods
(bad)
mov
out
or
retf
jl
sbb
call
(bad)
pop
retf
add
dec
cld
leave
inc
and
pushf
fmul
mov
ret
xchg
stos
jg
and
int
movs
pop
xchg
push
clc
jo
outs
xchg
adc
mov
or
and
out
add
rcr
push
cwde
or
les
pop
adc
mov
cmp
mov
test
add
cmp
ret
(bad)
mov
mov
add
aam
push
and
push
mov
ja
sbb
icebp
cmp
push
jne
fsubr
scas
inc
mov
ins
rcr
inc
mov
add
dec
and
fadd
inc
push
stos
xchg
and
push
in
daa
adc
push
(bad)
and
int3
xor
adc
ins
sbb
adc
pusha
ficomp
mov
mov
mov
fcomp
jo
data16
and
sub
jg
adc
cmps
into
lds
fcomp
lods
sub
pop
or
clc
or
fsub
jnp
test
pop
lahf
movs
sub
cmp
out
leave
hlt
imul
(bad)
xchg
sbb
jns
xor
in
cli
push
icebp
mov
data16
popf
(bad)
imul
ins
xlat
psubsw
inc
mov
sbb
sub
in
pop
cmps
dec
pop
fadd
lahf
or
mov
test
scas
dec
mov
pop
out
jg
mov
cld
mov
mov
and
rcr
xor
cmps
sbb
inc
enter
test
jns
mov
jne
dec
jmp
fdiv
repnz
js
jl
jp
mov
jle
std
adc
xor
in
and
ret
fcompp
shr
inc
ss
call
repnz
lds
gs
daa
enter
shl
dec
inc
popa
push
outs
push
fwait
pop
rcr
adc
dec
xlat
cmp
repnz
cmc
adc
cwde
out
dec
mov
xchg
cmp
jae
pop
clc
xchg
aaa
ds
sub
add
cmp
lock
jns
sub
ret
and
das
pop
jecxz
and
or
mov
dec
push
dec
push
push
push
push
int3
lock
fld
(bad)
iret
pop
dec
inc
dec
ins
cmp
fdiv
fimul
add
repnz
or
xor
jno
mov
loope
adc
sub
push
xchg
push
sub
shr
stos
sub
or
push
into
cmc
jecxz
xor
mov
xchg
imul
fdivp
movs
pop
jo
push
rcl
or
pusha
lods
inc
jmp
ss
inc
push
inc
sbb
cmp
xor
mov
mul
xchg
imul
push
inc
daa
dec
mov
pop
imul
pop
fdiv
pop
push
out
xchg
push
push
test
or
int3
gs
std
loopne
imul
xchg
sub
mov
or
dec
lds
push
fucomp
(bad)
sub
or
bound
subps
push
test
into
mov
aam
in
pop
sub
mov
retf
jp
fsubr
jnp
ja
in
jnp
(bad)
inc
add
fidiv
cmp
call
cmp
and
pushf
pop
out
xchg
(bad)
popa
pop
xlat
bswap
or
xor
(bad)
ins
addr16
cmc
cmp
push
and
loop
mov
and
sub
adc
shr
out
push
xor
inc
push
arpl
dec
cmp
js
push
xchg
cmps
push
in
mov
fucomi
gs
sbb
adc
mov
in
xlat
sbb
dec
adc
lds
mov
add
dec
movs
retf
(bad)
clc
xchg
jno
data16
das
aam
imul
and
ja
and
sbb
push
push
in
pop
js
adc
add
repnz
idiv
nop
sbb
shl
fdivrp
jmp
adc
jle
cmp
mov
shl
adc
cmp
inc
ss
add
mov
sub
adc
xor
icebp
in
sub
test
xchg
lds
aad
scas
imul
cld
fcom
in
dec
jbe
gs
push
js
cwde
sbb
mov
(bad)
sub
inc
pop
adc
jno
inc
sbb
popw
xor
loop
pushf
arpl
mov
add
pop
xchg
(bad)
rcl
inc
mov
inc
iret
fist
and
call
les
test
mov
popf
sub
mov
mov
lds
lea
stos
js
inc
cwde
or
rcl
mov
lods
cmps
mov
mov
cmps
lea
sbb
pop
dec
cld
sub
imul
fnstsw
addr16
cdq
sbb
mov
adc
pop
jle
pop
stc
or
and
push
loopne
ins
enter
scas
das
sbb
loope
lods
jbe
push
mov
shr
ret
xor
dec
xor
rcr
rol
aaa
xchg
mov
jecxz
loop
loop
jle
cmp
xor
repz
icebp
mov
mov
adc
jae
test
arpl
in
mov
movs
pop
xor
mul
sbb
pop
pop
xchg
add
cdq
add
and
shl
mov
pop
mov
test
push
inc
mov
popf
jle
xor
cmp
ss
sub
test
rcl
ja
xor
out
daa
retf
inc
sub
or
xchg
adc
test
repnz
nop
sbb
sbb
push
and
push
pop
(bad)
cmp
xchg
fnstenv
inc
xor
dec
xlat
mov
aaa
xor
xchg
add
imul
mov
and
mov
fstp
fld
outs
test
jl
rcl
pop
retf
mov
sbb
loop
out
pushf
das
in
repz
dec
push
adc
fidivr
mov
ds
sbb
cmp
cmps
and
fistp
add
cmp
js
sub
mov
call
mov
fmul
in
(bad)
jno
shl
or
inc
outs
push
rcl
xor
jmp
out
jle
repnz
mov
pop
dec
in
fadd
iret
adc
cli
sub
fmul
pop
dec
jo
xor
dec
push
push
push
lea
std
imul
imul
rcr
pusha
xor
inc
and
mov
mov
push
pop
jecxz
lds
movs
ret
stos
push
push
mov
add
cmps
(bad)
aas
retf
xchg
call
das
pusha
fimul
jl
stc
inc
popa
dec
or
mov
sub
icebp
xlat
push
sbb
inc
jae
push
jne
bound
outs
int
hlt
imul
pop
popf
cmp
mov
das
add
ffree
jno
pop
or
mov
std
fnstsw
pop
dec
and
jno
sahf
xor
inc
and
sub
add
leave
pushf
rcr
movs
test
lock
jge
and
inc
sub
dec
in
popa
jg
pop
dec
pop
scas
ficomp
outs
dec
scas
dec
(bad)
stc
cwde
test
xchg
shr
stos
dec
xlat
dec
test
adc
retw
dec
push
in
xchg
test
inc
dec
fmul
mov
je
cmp
clc
pop
jnp
dec
imul
mov
or
adc
push
sbb
std
push
adc
jo
xor
pop
jbe
ret
stc
and
jp
lea
dec
dec
adc
adc
loop
dec
imul
dec
push
xor
xchg
ds
xchg
test
aam
pop
xchg
mov
data16
push
es
xor
shr
add
imul
push
fiadd
out
loope
mov
arpl
push
and
test
movs
test
data16
jmp
pop
aad
cwde
clc
jo
ror
(bad)
adc
cmp
sbb
scas
push
sbb
mov
or
out
jb
gs
shl
mov
and
(bad)
jnp
mov
jns
or
retf
test
push
xlat
and
xor
imul
js
xchg
cmp
aad
fcomp
or
pop
pop
mov
mov
not
cwde
dec
pop
sti
call
aas
imul
adc
push
mov
xchg
daa
sbb
ja
std
rcr
(bad)
pop
call
dec
mov
cmp
repnz
xchg
inc
(bad)
aas
mov
add
int3
jnp
cmps
inc
push
fwait
mov
xor
ret
dec
fld
nop
add
inc
pusha
ret
push
xchg
call
jns
xor
sub
inc
mov
pop
fucom
repz
popa
dec
mov
test
cdq
or
sar
daa
stos
ja
cld
loope
xor
aam
mov
mov
mov
lods
movs
cmp
xor
jmp
pop
ss
mov
scas
and
mov
in
call
adc
int
add
xor
inc
push
arpl
push
jnp
mov
mov
jmp
out
outs
or
pop
or
fwait
out
pushf
mov
dec
pushf
mov
and
das
push
sub
popa
lea
or
pusha
bound
test
or
sahf
inc
cmp
mov
push
add
nop
movs
arpl
aam
cmp
jmp
sub
sub
cmp
shr
enter
cmp
xor
imul
jmp
lock
call
int3
mov
jl
jnp
sub
pop
push
push
jp
enter
xor
test
sar
inc
mov
inc
in
out
mov
in
or
shr
cmp
fcomi
dec
cmp
and
adc
pop
mov
icebp
jle
push
(bad)
fadd
pop
jne
aaa
dec
pushf
jg
cmp
xor
stos
pop
clc
push
(bad)
adc
cmp
cmp
mov
into
cs
enter
xchg
stc
push
not
mov
jno
iret
sub
sahf
pusha
mov
fcomp
call
inc
cwde
mov
pushf
xor
xchg
movs
or
addr16
pop
pop
push
gs
aas
xor
loop
mov
cmps
int
dec
add
(bad)
push
mov
xchg
dec
dec
add
push
into
mov
sbb
stos
pusha
out
cmp
int
mov
test
sbb
adc
or
xchg
loope
mov
mov
dec
dec
int3
rcl
cmp
xor
dec
in
loope
sar
mov
pop
add
sti
mov
popa
stc
data16
test
xchg
mov
inc
add
or
retf
std
pop
aad
rcr
push
ss
xor
xor
mov
cmc
rcr
outs
xchg
add
leave
pop
xor
shl
add
add
dec
push
pop
sub
int3
ja
pop
stc
add
sahf
call
xor
rol
aas
shr
adc
and
inc
rol
add
das
pop
push
call
cwde
fnstenv
xor
cmps
(bad)
cs
icebp
inc
ror
adc
mov
std
push
push
popa
push
shl
repz
fldenv
dec
in
movs
mov
pop
mov
and
dec
test
pop
jle
mov
cmp
pop
mov
xlat
jge
sbb
movs
dec
cmp
push
mov
mov
icebp
adc
sub
push
je
fild
xor
aam
lahf
js
sub
icebp
movs
fwait
into
xchg
jae
fs
in
jae
and
clc
out
fisub
inc
push
jecxz
mov
or
add
vpsrlq
xor
pop
pop
clc
movs
inc
jno
pop
add
cmp
scas
fnsave
(bad)
jno
in
iret
sbb
into
out
fdivr
sbb
mov
popa
mov
dec
cli
xchg
jmp
add
shr
(bad)
mov
outs
(bad)
test
ficomp
adc
jmp
jnp
xchg
ret
sahf
jle
int3
adc
movs
cmp
jmp
push
mov
jge
sbb
push
inc
jecxz
or
js
lods
mov
in
stos
pusha
cmp
xchg
sub
cmp
dec
pop
stos
sbb
es
psllw
sbb
or
pop
sbb
ss
into
mov
mov
pushf
adc
clc
xlat
mov
fiadd
add
mov
pop
dec
stos
inc
retf
add
push
add
out
fsub
pop
lahf
mov
push
cvtdq2ps
loopne
adc
fcomp
pop
mov
enter
movs
ret
pop
cmps
retf
out
(bad)
sub
retf
cmp
mov
bound
jne
jg
scas
jnp
pop
shl
movs
test
cmc
mov
and
inc
loopne
fbld
ror
std
or
clc
movs
push
outs
outs
mov
mov
pop
(bad)
or
arpl
pop
add
adc
std
xor
xchg
call
mul
fmul
cmp
xor
test
pop
mov
scas
fldenv
adc
sar
dec
jl
js
push
sahf
test
pop
pop
stc
ret
jnp
xchg
iret
dec
out
out
add
jle
sub
mov
std
sahf
mov
push
and
or
jmp
and
add
adc
xor
mov
ret
lahf
sub
ffreep
inc
jecxz
daa
pop
hlt
rcr
dec
jmp
call
sbb
in
sub
jns
das
push
xchg
movs
movs
dec
cmp
scas
sub
cs
sbb
scas
bound
mov
pop
jge
(bad)
enter
nop
lahf
mov
cmp
std
mov
inc
pop
mov
hlt
outs
ins
out
xor
xor
push
adc
ds
fwait
mov
sub
mov
stos
add
ret
jmp
pop
sub
es
mov
mov
lahf
adc
dec
test
mov
inc
and
xchg
lods
sbb
repnz
xchg
test
sbb
push
(bad)
lea
shr
mov
test
and
push
push
jae
add
mov
jl
xor
push
fidivr
adc
ss
xchg
push
lahf
cmp
push
mov
ins
sbb
fsin
xor
dec
cld
inc
push
sbb
loopne
(bad)
pop
mov
and
dec
fs
in
xchg
in
cld
ret
shl
push
pop
add
lock
cmp
fisttp
stos
fimul
ins
push
or
enter
dec
xchg
sti
outs
push
test
cmp
add
loope
stos
sti
(bad)
jg
or
int3
idiv
push
mov
sbb
ins
call
jbe
pop
jb
inc
cmp
scas
and
adc
lds
inc
(bad)
enter
mov
aaa
in
daa
leave
sbb
and
jnp
jmp
sub
sub
mov
pop
pop
pushf
inc
xor
inc
pop
mov
rcl
sub
jne
ret
and
movs
sub
mov
aas
sub
cld
stos
movs
xadd
or
and
pop
sbb
imul
mov
fidivr
dec
(bad)
mov
ins
mov
xor
pop
xchg
xor
cs
sti
cmp
push
je
mov
clc
adc
xchg
jmp
shr
sbb
jge
pushf
cs
cmps
pop
retf
mov
loopne
sub
sbb
enter
out
xor
and
iret
fsub
mov
sub
jmp
cmp
add
mov
jg
xchg
cmps
in
dec
jg
mov
pop
or
mov
mov
int
popf
addr16
xchg
cs
out
push
jb
cmp
push
mov
xor
out
push
xchg
mov
in
mov
cmpxchg
cmps
inc
dec
or
sub
test
les
fld
sahf
pop
inc
pop
and
add
fsub
xlat
sub
sbb
fsub
cmp
xchg
and
stc
sti
add
mov
cmps
cmp
mov
clc
fdiv
dec
fcomp
test
sbb
push
push
xchg
nop
pop
loope
das
push
or
pop
stos
jl
inc
scas
inc
nop
dec
lea
dec
leave
dec
rol
test
jmp
ss
fnstsw
outs
movs
push
mov
aad
add
cmps
or
je
push
xor
pop
xchg
mov
pop
pop
mov
cmps
cmp
push
inc
inc
adc
mov
imul
push
test
xchg
mov
icebp
and
fld
push
sbb
ss
xor
icebp
mov
jecxz
stos
mul
mov
dec
(bad)
js
push
pop
cmp
pushf
imul
and
ds
mov
inc
mov
or
jbe
mov
out
cwd
loopne
xchg
xchg
xor
add
fidiv
mov
leave
test
inc
pop
ss
pop
fsub
or
adc
push
ret
daa
mov
inc
out
rcr
cmps
cs
push
gs
adc
push
lea
cwde
jp
mov
and
add
in
pop
dec
dec
pop
or
sub
ror
mov
shl
jecxz
push
push
cwde
das
popa
dec
arpl
outs
xor
xor
hlt
mov
mov
jl
jns
or
add
icebp
adc
sbb
jl
add
mov
cmc
movs
test
leave
in
pusha
or
fistp
xchg
adc
(bad)
(bad)
aam
test
pusha
or
dec
call
mov
es
jb
xchg
stos
mov
call
cmp
popf
mov
sbb
lds
in
ss
and
in
mov
mov
cs
mov
and
rcl
xor
cs
push
mov
popa
test
aad
js
cmp
les
cli
jle
jg
mov
retf
cmp
jle
sbb
outs
sub
sbb
sub
clc
push
xor
fiadd
mov
mov
add
fadd
add
mov
rcl
int
fwait
sub
and
aas
jle
xchg
in
in
repz
xor
sti
hlt
aaa
sahf
add
cmp
pop
push
adc
mov
movs
jae
push
push
lods
jge
cmps
fild
mov
sbb
scas
rol
pop
fwait
mov
nop
stos
xor
sbb
mov
and
inc
mov
arpl
and
sbb
rol
fdivr
dec
jmp
pusha
mov
and
repz
dec
(bad)
sahf
es
in
ins
(bad)
jno
dec
(bad)
in
inc
enter
cmp
(bad)
mov
repz
pop
add
lea
inc
daa
ja
loopne
mov
(bad)
push
test
(bad)
push
jecxz
loop
cli
cmp
pop
jns
jmp
cmp
shl
jle
push
inc
jmp
adc
push
cli
sbb
out
pop
imul
rol
pop
xchg
jbe
push
jns
mov
xor
pop
pop
inc
jo
xchg
fstp
mov
fsubr
cmp
mov
test
lds
xchg
ffreep
repnz
and
loopne
stos
mov
adc
ja
pop
pop
gs
into
adc
push
fwait
retf
into
sbb
inc
inc
mov
ins
jbe
pop
(bad)
xor
ins
xor
sub
jmp
push
fistp
imul
jb
imul
inc
stc
call
xchg
xchg
repnz
cmp
enter
mov
xor
jmp
shr
mov
movq2dq
(bad)
adc
xchg
std
movs
into
pop
push
sbb
pop
push
retf
sbb
add
fist
loop
jo
fwait
int3
repnz
xor
(bad)
mov
cmp
idiv
pop
mov
test
or
or
sbb
mov
xor
or
push
mov
iret
mov
test
jns
aad
mov
rol
repz
xchg
cmp
or
imul
bound
(bad)
cmp
or
dec
push
imul
pop
movs
out
push
push
stc
jnp
popa
fndisi(8087
rcl
xchg
inc
sub
sbb
cmp
lods
stc
jg
adc
in
or
ret
sahf
(bad)
fs
inc
ins
or
shr
mov
shl
pop
xchg
push
jbe
in
jmp
xchg
ss
iret
inc
adc
cmc
stos
das
mov
mov
mov
sub
mov
push
push
test
push
cdq
ss
mov
jno
shr
jl
mov
call
cmp
imul
xchg
or
sub
and
(bad)
sbb
cmp
dec
cmc
out
and
push
sti
or
xlat
mov
push
(bad)
sbb
xchg
mov
inc
add
adc
pop
retf
xlat
jmp
add
xlat
das
pop
and
and
pop
add
adc
push
ins
add
sahf
retf
adc
call
jmp
lods
push
bound
xor
imul
sar
aad
lods
dec
cmps
stos
fstp
neg
loop
in
push
sbb
sbb
aaa
div
and
or
push
xchg
mov
bound
push
mov
jbe
adc
(bad)
or
and
movs
xor
js
hlt
or
lea
loop
push
cs
mov
inc
jmp
imul
push
or
adc
xchg
xchg
pop
mov
inc
outs
mov
(bad)
mov
mov
arpl
inc
jge
mov
xchg
fwait
and
cmp
gs
and
or
cmp
in
lea
mov
jl
jae
gs
jns
ret
(bad)
in
sub
pop
add
sub
xor
xor
sbb
cmp
jge
out
jbe
xor
pushf
inc
popf
cs
aam
push
in
pop
inc
cmps
jmp
int3
push
std
mov
adc
fdivr
out
call
xchg
dec
neg
sub
mov
int3
mov
mov
dec
sbb
xor
jg
xchg
imul
cmp
jo
or
stos
fisttp
iret
test
xchg
cmp
jo
imul
sbb
fdiv
mov
and
js
adc
retf
aas
les
loope
bound
and
xor
dec
jne
retf
jecxz
std
sahf
add
dec
xlat
mov
or
inc
xchg
popf
fidivr
enter
cmp
nop
jb
test
ins
xchg
mov
test
mov
or
and
mov
test
xor
pop
inc
rcl
mov
push
shl
scas
or
adc
push
(bad)
fist
or
leave
ret
push
pop
xchg
fwait
inc
lock
retf
mov
adc
ins
mov
cmp
jmp
sub
adc
jmp
xor
mov
imul
mov
push
pusha
adc
int
leave
(bad)
not
jo
push
add
pop
mov
sub
sbb
out
dec
push
retf
ret
xor
inc
imul
popa
add
xchg
jmp
popa
je
(bad)
out
mov
jl
mov
mul
xchg
gs
inc
cwde
and
cs
pop
ds
lahf
cld
retf
enter
jecxz
jecxz
(bad)
mov
add
sbb
ins
aad
dec
repz
sub
ja
pop
push
aaa
inc
xor
(bad)
sar
stos
aas
jmp
xor
push
cli
mov
int
push
adc
ins
cmps
imul
push
add
imul
xor
jne
mov
loopne
push
daa
test
dec
sub
xor
xor
mov
jnp
dec
data16
add
arpl
lods
out
mov
sub
das
ror
jmp
sbb
in
xchg
sti
jmp
ins
sar
fwait
or
popa
pop
fild
push
mov
or
and
jg
or
es
or
or
inc
in
add
add
fidiv
in
sub
push
mov
push
movs
shl
fcomp
cmp
and
cmc
in
xor
(bad)
out
mov
fnstenv
(bad)
sub
mul
sbb
adc
push
or
(bad)
xlat
jae
mov
aad
sti
mov
xlat
jmp
adc
sub
stos
sbb
xor
rcl
stc
mov
ins
mov
add
dec
xchg
fbld
cs
jg
push
adc
mov
mov
mov
jg
inc
mov
push
inc
ficomp
out
xor
mov
sbb
test
jmp
and
or
jp
test
or
xchg
js
mov
scas
inc
jb
imul
push
jle
add
pop
jmp
inc
(bad)
sub
jbe
pop
stos
aas
adc
push
lea
and
retf
lock
xor
xchg
add
sahf
sbb
jne
icebp
leave
jmp
mov
cmc
inc
popf
sbb
test
inc
xchg
cmp
xchg
hlt
scas
into
js
sub
inc
aaa
cmp
pop
scas
jecxz
out
sbb
push
jge
mov
add
and
out
push
das
fcomip
push
leave
call
std
inc
(bad)
jl
pop
daa
pop
inc
imul
pop
or
sub
pop
push
ins
and
jmp
mov
sbb
loop
outs
add
or
(bad)
lahf
imul
jmp
dec
test
(bad)
repz
fnstcw
cmp
das
idiv
sbb
mov
fxch
mov
mov
or
out
pop
mov
push
jmp
sbb
test
xchg
jae
dec
mov
sbb
out
ins
xchg
xchg
adc
stos
jmp
and
ror
add
mov
loop
and
mov
jle
cwde
dec
ret
ds
aam
aam
loopne
ins
sar
stc
sub
data16
inc
(bad)
gs
imul
dec
fmul
mov
mov
cmp
repz
int
(bad)
int3
out
leave
cmp
or
inc
nop
pop
pushf
or
in
dec
pop
in
inc
idiv
xchg
and
mov
popf
test
les
dec
sbb
(bad)
cmp
int
mov
pop
sahf
lea
adc
loop
fisub
inc
inc
mov
jne
mov
hlt
sub
fcmovnu
(bad)
mov
add
movs
cmp
jmp
mov
fwait
push
mov
aaa
dec
mov
cmps
and
sti
sub
outs
push
pop
enter
cld
fmul
sub
dec
and
xor
lock
arpl
outs
fwait
lods
cmp
aad
mov
pop
sub
inc
imul
mov
fiadd
test
mul
loope
iret
(bad)
and
dec
or
ret
and
stc
add
mov
jo
movs
sub
sbb
jmp
inc
lds
mov
sub
sub
xchg
dec
or
out
aaa
mov
xor
add
jmp
loopne
fs
jnp
xlat
cmp
not
jns
mov
pop
or
jne
fprem1
xor
xchg
jg
int3
mov
adc
aaa
jge
movs
mov
mov
retf
jne
movs
and
xchg
lea
ds
adc
ds
pusha
lods
and
jge
mov
push
mov
sub
mov
ret
not
pop
xchg
ds
xchg
jg
sbb
test
mov
lea
inc
div
ja
sbb
xor
xchg
(bad)
out
xor
fwait
pop
icebp
aam
push
inc
dec
(bad)
mov
jmp
sbb
jmp
movs
lock
ins
cdq
cmc
nop
dec
fsubr
pop
ins
in
aam
push
cmp
push
xchg
and
aad
sti
mov
scas
inc
lock
add
shl
jl
jmp
cmp
pop
sbb
inc
repnz
dec
xchg
mov
loope
fiadd
dec
aam
jmp
xchg
sub
in
lahf
add
test
cdq
(bad)
mov
repnz
push
mov
into
xchg
push
jle
adc
test
rol
test
idiv
rol
fldcw
mov
or
mov
ja
jle
or
nop
dec
int
or
push
loopne
xchg
push
sahf
leave
cmp
pop
or
(bad)
bswap
ds
jo
mov
movs
jecxz
repnz
jg
xor
push
xor
mov
lds
jae
dec
scas
inc
adc
adc
mov
mov
stos
popa
imul
ret
dec
cli
in
daa
mov
cmps
call
pop
scas
dec
adc
and
xor
in
call
push
out
xchg
dec
dec
mov
mov
dec
dec
jg
cwde
cmps
push
lock
mov
mov
pop
sub
daa
xlat
jmp
xchg
and
mov
pop
or
jb
pop
mov
dec
inc
leave
repnz
aad
je
sub
xchg
arpl
push
push
jne
test
loop
(bad)
xor
xchg
test
mov
ins
in
movs
jbe
jl
inc
fcomi
mov
and
dec
cld
arpl
movs
aaa
pop
adc
xor
ror
jno
test
jge
lods
movs
fbld
addr16
int
jmp
or
xor
call
aad
ret
jmp
pop
or
cld
stos
call
ja
retf
and
xchg
mov
xor
mov
fs
inc
adc
out
mov
cmp
sub
fwait
sub
popf
nop
idiv
outs
xor
pop
imul
stos
sub
out
sbb
gs
ret
fiadd
into
mov
dec
sub
test
or
or
mov
dec
stos
dec
mov
lods
push
je
popf
xchg
sbb
jae
sbb
fwait
push
addr16
dec
sub
jo
pushf
sub
lods
mov
ins
es
clc
imul
jp
sar
jbe
mov
sbb
sbb
mov
and
shl
addr16
addr16
pop
div
inc
mov
mov
mov
xor
add
pop
dec
rcr
std
stos
out
xchg
push
mov
leave
bound
mov
loopne
rol
aaa
add
cwde
push
(bad)
(bad)
(bad)
and
rol
sti
cli
add
fwait
pop
fsub
fptan
out
ret
test
jle
stc
pop
cli
mov
lds
cmps
fsub
jg
std
mov
lods
test
dec
and
xor
mov
xchg
sahf
jmp
pop
cmc
shl
add
in
pop
inc
push
sub
and
dec
mov
mov
push
out
ficomp
cld
pusha
(bad)
lock
neg
fsub
outs
xor
pop
(bad)
(bad)
div
adc
jb
xchg
cmp
test
mov
adc
cmc
pop
mov
mov
jl
cmp
mov
or
mov
cwde
(bad)
imul
test
jb
out
cwde
mov
inc
or
outs
jg
rol
or
mov
xchg
sub
sbb
(bad)
cmps
or
js
(bad)
dec
in
push
pop
push
jmp
xor
pushf
inc
xchg
or
test
cmp
rol
pop
xchg
gs
mov
dec
jp
nop
pop
jmp
scas
or
mov
add
and
ins
fadd
in
pushf
dec
leave
leave
xchg
aad
sub
data16
fcmovb
inc
and
mov
lods
pop
ficom
stos
xchg
xor
enter
adc
or
push
push
jle
ja
mov
in
iret
cmp
ss
shr
outs
sbb
out
adc
inc
add
lods
aad
or
mov
call
shl
mov
int3
test
int3
xor
or
inc
add
dec
xchg
mov
int
xor
popf
and
mov
pop
shr
or
pushf
jle
push
pusha
and
call
ror
add
(bad)
mov
xor
sub
adc
adc
loope
out
faddp
mov
sbb
aaa
push
cmps
sub
popf
xchg
mov
je
(bad)
out
mov
push
pop
outs
jmp
xchg
aad
(bad)
mov
(bad)
idiv
push
pinsrw
pop
(bad)
xchg
xchg
cmp
jb
bound
test
or
mov
mov
mov
iret
jo
mov
sbb
add
push
push
inc
test
stos
aaa
mov
mov
sub
mov
div
fwait
rcl
mov
addr16
aas
lods
fild
lahf
mov
fcomp
pop
mov
and
push
pop
mov
jp
ja
aaa
fwait
sahf
jp
xor
xlat
xlat
sub
ja
and
or
and
fwait
repz
ror
mov
jmp
sbb
push
or
xor
and
sub
and
mov
out
repnz
pusha
xchg
or
lods
movs
mov
ds
dec
mov
add
shr
rol
adc
and
push
xor
ret
jns
mov
mov
add
add
jnp
adc
inc
hlt
lahf
out
jne
pop
fs
pop
gs
adc
mov
mov
jno
(bad)
jecxz
and
fimul
(bad)
stos
scas
cmp
push
mov
xchg
repnz
std
dec
mov
add
aaa
xchg
pop
(bad)
retf
and
jns
enter
ret
sahf
shr
in
leave
mov
fwait
into
js
jne
cdq
jl
inc
or
rcr
dec
mov
inc
(bad)
push
addr16
test
mov
imul
test
cmp
pushf
jmp
test
je
ins
pop
mov
dec
outs
in
test
fdiv
leave
in
adc
jo
sub
leave
ins
or
jmp
pop
(bad)
pop
std
retf
sbb
call
test
or
repz
mov
xchg
push
mov
inc
mov
loopne
xor
inc
inc
or
jne
aad
mov
ins
and
les
and
test
push
(bad)
adc
xchg
(bad)
mov
mov
dec
rcl
mov
hlt
lock
ins
jecxz
(bad)
pop
mov
(bad)
js
or
test
push
mov
xchg
mov
pop
loope
inc
sub
jo
ror
daa
mov
outs
adc
mov
or
ret
and
push
jnp
les
cmps
call
ins
fdivr
jne
cmp
mov
xor
shl
mov
push
inc
dec
sub
pop
in
xchg
adc
cmps
cmp
mov
cmp
sahf
jo
neg
push
xor
push
jbe
stos
rcl
aam
pop
mov
shr
in
and
int
jle
add
mov
(bad)
push
pop
fld
in
shr
pop
out
stos
cld
fld
lods
sar
dec
push
xchg
fidiv
add
or
pusha
je
jbe
add
std
mov
pop
loope
es
pop
xchg
out
mov
cmp
sub
cmc
mov
push
loop
int
inc
das
arpl
das
test
mov
push
adc
bound
xchg
bound
fld
rol
shl
pop
clc
mov
pop
cs
scas
stos
shl
sbb
xor
loopne
inc
ds
loopne
mov
jecxz
push
jnp
imul
arpl
test
aas
sbb
cmc
pop
movs
mov
out
popa
into
jge
xor
push
lds
sbb
out
ja
dec
add
sub
xchg
xchg
das
in
mov
inc
das
xchg
mov
int3
inc
inc
dec
push
retf
imul
dec
mov
xor
std
xchg
and
pop
rcr
dec
cmp
test
and
shl
in
call
mov
retf
xchg
and
cmp
push
xchg
leave
or
push
cdq
rol
and
ins
sub
mov
sub
adc
fsubr
sbb
fsub
jl
adc
add
mov
and
pop
sub
clc
jecxz
mov
stos
lahf
clc
or
inc
(bad)
clc
cmps
adc
int3
test
rol
arpl
push
xor
jg
mov
mov
xchg
push
jl
dec
xor
push
scas
mov
out
scas
adc
ret
pop
outs
rcr
fsub
mov
test
mov
dec
mov
loope
outs
mov
cwde
ds
pop
movs
test
sahf
xor
cmp
lahf
dec
adc
test
mov
inc
add
inc
and
dec
out
mov
or
stos
repnz
vmwrite
lock
enter
test
cmp
inc
into
std
mov
mov
adc
mov
xchg
jne
xor
dec
add
dec
mov
fdivr
lea
xor
cmp
push
sub
jle
ds
es
(bad)
dec
aam
xchg
repz
cld
in
xor
sbb
in
cmp
test
(bad)
js
sub
pop
dec
mov
outs
retf
in
mov
jge
repz
icebp
or
popa
inc
fild
sub
sahf
xor
in
ja
sbb
stos
sbb
data16
jnp
and
pop
std
xchg
sbb
xchg
dec
icebp
sbb
jno
clc
aas
cmp
mov
test
test
stos
int
add
mov
mov
call
inc
xor
pop
mov
sbb
out
xlat
xchg
jecxz
jb
xchg
ret
in
sub
mov
inc
lods
loopne
sub
pop
iret
and
xchg
xor
pop
imul
and
aas
nop
lods
jp
(bad)
rcl
pop
mul
icebp
ror
fstp
call
push
lods
mov
repnz
pop
adc
jp
xor
mov
nop
stc
xchg
scas
mov
pusha
inc
and
shl
mov
bnd
mov
les
sahf
ja
lea
bound
and
inc
push
xchg
bsr
call
sbb
mov
pop
out
push
(bad)
adc
mov
fild
pop
jae
dec
shl
cmps
xchg
dec
inc
and
or
sbb
jnp
bound
jle
push
sub
enter
js
aam
(bad)
in
hlt
into
loope
and
xchg
shr
xchg
jne
shl
retf
jo
fstp
das
push
jecxz
mov
push
or
(bad)
sti
or
shl
inc
mov
fmul
dec
mov
movs
adc
icebp
and
sub
adc
sti
mov
and
and
inc
repz
and
xor
inc
mov
movs
(bad)
fstp
cmp
dec
data16
mov
je
ins
inc
int
jmp
xchg
and
pusha
cmps
push
xchg
and
sbb
inc
pop
push
lldt
push
inc
jae
dec
das
scas
cmp
sub
jecxz
jl
add
xchg
jno
lods
cdq
mov
rcl
inc
inc
pushf
ins
stos
int
ret
mov
retf
sbb
jg
cdq
mov
out
in
pop
(bad)
in
lods
or
jb
daa
and
pop
jle
cmp
sbb
lods
test
jecxz
dec
inc
call
int
cld
push
(bad)
inc
ret
mov
push
jb
iret
inc
mov
lds
std
cmp
or
mov
and
rcl
add
gs
push
aad
jecxz
add
loopne
stos
dec
ds
add
ja
inc
psubq
dec
xor
jmp
pop
push
fstp
jbe
adc
popa
jnp
pop
and
xchg
out
sub
or
mov
shr
in
das
xlat
or
gs
xor
xor
pop
daa
mov
arpl
repz
push
jecxz
or
push
addr16
push
cmp
or
adc
jns
cmp
fdivr
stos
aad
in
push
push
xor
push
out
mov
sbb
adc
out
and
adc
in
outs
mov
das
arpl
push
fdiv
pop
loop
push
adc
popf
retf
push
es
into
nop
movs
addr16
loopne
div
sbb
xor
rcr
cdq
retf
pusha
mov
(bad)
ins
and
aas
sub
out
jp
cwde
icebp
xchg
pop
inc
jbe
pop
(bad)
ficomp
or
mov
ins
sar
xchg
add
and
cmps
sub
sub
push
fst
test
mov
sub
fidivr
fwait
xchg
xor
cmp
mov
pop
sbb
mov
jne
lds
mov
je
ret
jl
or
inc
xchg
inc
push
mov
push
push
sub
and
mov
dec
add
fdiv
lds
xchg
mov
xlat
and
sub
ror
and
int3
lock
pop
loop
cdq
cmp
xor
push
clc
es
and
aas
in
jb
and
pop
fistp
loopne
mov
or
fmul
and
jae
call
rcl
scas
push
push
leave
fadd
mov
mov
xor
test
or
arpl
xor
inc
movs
push
and
adc
push
data16
stos
inc
aad
sub
dec
dec
aad
shr
add
sbb
mov
jle
jo
push
stos
add
push
mov
xor
leave
adc
mov
sub
mov
outs
aaa
loopne
pop
fadd
out
iret
xor
dec
jne
jge
stos
inc
sub
pop
dec
xchg
add
add
loope
fisttp
fild
popf
mov
(bad)
loopne
std
xor
sub
outs
rcr
sbb
sub
fstp
fstp
not
sti
push
or
jbe
mov
stos
mov
(bad)
fwait
or
sub
jbe
fbstp
mov
hlt
call
lds
dec
in
xchg
idiv
rcr
rol
jo
jae
dec
add
or
rol
sar
and
xor
fwait
cmps
daa
fist
mov
aam
xlat
stos
daa
push
cmp
fidivr
and
out
mov
push
mov
lock
call
adc
sbb
cmps
stc
bound
mov
xchg
xchg
cli
adc
loope
out
sub
retf
shr
lds
rcr
cmps
xchg
test
int
cmp
jmp
outs
cmp
cmp
jb
es
movs
xor
add
inc
and
not
jb
and
jne
mov
push
mov
call
das
jge
mov
mov
cmp
mov
pop
sti
mov
les
sub
out
cmpxchg
mov
xchg
sbb
aam
jge
inc
adc
xor
adc
push
aam
and
scas
or
popa
lea
cli
cli
inc
dec
in
xor
mov
jb
(bad)
and
outs
hlt
test
and
xor
shr
setg
jg
mov
std
sbb
sub
jno
sbb
push
mov
test
je
in
aam
push
imul
or
jle
adc
les
cmp
mov
jns
aad
xchg
dec
mov
leave
(bad)
or
jg
pop
das
loop
inc
mov
pop
fmul
(bad)
sub
test
int
pop
rcr
cld
out
jmp
adc
mov
fs
fst
ja
adc
fs
xchg
loope
iret
or
jecxz
mov
imul
sar
call
cmp
retf
dec
mov
ja
mov
mov
push
ja
cs
cmc
hlt
pop
daa
mov
xchg
ins
push
push
ins
(bad)
pop
mov
mov
(bad)
ret
cmp
and
sti
iret
inc
xor
dec
add
pop
adc
loope
inc
inc
and
mov
push
ds
stos
pop
das
jmp
sub
addr16
push
sub
pop
clc
inc
retf
push
sbb
pop
jl
ret
xor
dec
adc
mov
jp
push
cli
mov
fwait
lds
fstp
mov
xchg
aad
pop
xor
scas
mov
sub
test
dec
outs
shr
sub
or
xchg
or
aaa
push
les
push
out
mov
xor
fnstsw
xchg
adc
pushf
sar
mov
sbb
inc
pushf
movs
sbb
cdq
dec
fwait
ins
sub
ins
pop
lock
dec
jp
mov
sbb
mov
les
call
das
test
xchg
cmps
adc
inc
shl
xor
stos
test
and
jmp
ins
pop
mov
mov
lods
push
or
mov
mov
pop
jbe
or
stos
leave
push
push
es
mov
and
and
enter
mov
pushf
cld
mov
mov
jge
mov
inc
pushf
adc
jmp
push
sbb
lods
push
mov
jl
inc
or
in
or
bound
test
add
cmp
mov
adc
dec
call
mov
push
je
pop
xchg
mov
adc
inc
jae
and
cmps
out
dec
popa
pop
pop
test
mov
mov
enter
xchg
push
fwait
mov
ret
fs
sar
dec
or
mov
cmc
or
push
add
push
sbb
cs
loopne
ror
fwait
pop
fisttp
and
lds
mov
mov
retf
imul
ins
data16
int
gs
and
xor
xchg
mov
call
mov
push
xchg
(bad)
mov
push
loope
pop
fs
test
fwait
jno
outs
pop
inc
lods
aaa
push
aaa
sbb
dec
cmp
add
pop
pop
pop
and
test
dec
cmp
ss
je
loope
mov
aas
jno
push
pop
pop
push
sub
cmp
and
xchg
xchg
jg
test
sbb
jmp
jns
xchg
(bad)
aad
mov
jo
call
cmps
mov
mov
or
std
ss
xchg
adc
outs
aas
cmp
inc
cmp
sub
mov
imul
jb
cmp
sbb
(bad)
je
mov
xchg
sub
dec
ins
aaa
shl
das
(bad)
iret
dec
(bad)
cmp
xchg
std
adc
dec
or
mov
arpl
or
push
addr16
dec
xchg
mov
xchg
pop
xchg
sar
push
movs
mov
in
jno
add
add
or
sub
jp
in
xor
sbb
xchg
outs
(bad)
xchg
sbb
ficomp
imul
cld
inc
or
jmp
loope
pop
dec
and
sub
push
sbb
inc
mov
and
mov
jae
imul
lahf
mov
adc
ins
ja
jmp
xchg
cmp
lock
(bad)
adc
(bad)
leave
push
fimul
xchg
jbe
dec
or
push
pop
or
xchg
pop
popf
out
pop
fadd
imul
mov
push
fstp
sbb
or
jecxz
sbb
pop
sub
sbb
adc
mov
ins
(bad)
sar
cmps
je
jnp
sub
rol
push
xlat
outs
retf
adc
je
sub
jb
ror
pop
add
dec
sahf
gs
cs
xor
fisttp
ss
or
jmp
es
mov
movs
lods
mov
ins
jle
out
pop
xor
or
fmul
das
aas
xchg
pop
pop
xchg
int
or
dec
addr16
mov
mov
addr16
adc
cmp
cmps
jg
pop
aam
dec
int
mov
stc
ret
enter
inc
dec
iret
xor
lods
jno
sub
jge
ret
jmp
jb
cmp
and
cmp
xchg
adc
es
dec
(bad)
xor
test
mov
pop
jne
push
popf
es
jns
mov
(bad)
addr16
das
or
inc
jbe
mov
aas
cmp
daa
daa
mov
out
sbb
or
out
stc
jb
call
cmp
sbb
cwde
outs
jne
jmp
in
std
jl
xor
xor
les
gs
add
movs
in
push
dec
push
ds
retf
aam
retf
cmp
repnz
ficom
ror
int
or
fmulp
or
aam
jb
std
push
mov
mov
push
cmp
not
ja
inc
das
push
mov
cmp
outs
add
ins
popa
ins
xor
nop
popa
xchg
xor
fdivr
xchg
sahf
lock
out
xchg
call
stos
xchg
(bad)
int
aas
and
es
xlat
int
push
mov
xor
je
mov
lea
hlt
pop
sbb
scas
mov
push
lds
add
pushf
stc
pop
hlt
and
adc
adc
mov
mov
inc
mov
and
les
retf
jg
cld
popf
loopne
clc
icebp
pusha
addr16
inc
xchg
adc
xor
mov
aaa
dec
ds
lea
mov
pop
cmps
cmp
pop
xchg
mov
out
dec
mov
xchg
popa
gs
xchg
mov
imul
xor
imul
sub
sbb
mov
adc
mov
std
cmps
lock
aam
push
push
dec
jmp
mov
cmp
mov
mov
outs
cmps
lods
xchg
arpl
loop
adc
nop
shr
repz
(bad)
ins
in
ja
mov
push
push
(bad)
sub
xchg
mov
mov
jp
in
jecxz
pop
jnp
push
xchg
pop
frstor
lahf
cmp
fdiv
pop
inc
push
jae
cwde
cwde
mov
push
lock
int
jo
dec
mov
std
mov
cmc
invd
inc
adc
xlat
sbb
shl
fistp
xchg
cld
test
test
pop
xchg
mov
inc
sbb
mov
aam
add
mov
dec
cmps
scas
push
pop
jae
cmps
addr16
movs
or
pop
add
cdq
mov
movs
or
adc
push
add
or
cmp
mov
add
rcr
mov
adc
mov
mov
mov
cld
pop
push
and
fdiv
add
mov
pushf
push
jne
pop
movsx
js
xchg
leave
gs
add
adc
addr16
hlt
jge
dec
aad
sub
popf
xor
bound
add
retf
ins
lea
jb
mov
pop
mov
in
sub
out
in
retf
hlt
and
aas
(bad)
fmul
sub
dec
adc
out
ret
fimul
lods
or
into
adc
sar
les
lock
cmc
sbb
sbb
loope
add
lock
(bad)
pop
shl
cmp
mov
pop
aam
leave
mov
int3
mov
les
inc
jge
jno
add
pop
outs
lods
movs
and
stos
mov
fs
shld
scas
movs
(bad)
out
lahf
xor
dec
call
mov
push
jge
xchg
pop
pop
lods
xor
mov
and
push
xchg
add
sub
ss
scas
cmp
scas
sub
and
jmp
pop
jns
and
ret
not
pop
movs
push
mov
aas
jb
aaa
movs
mov
ror
mov
push
int3
xor
fstp
adc
mov
rol
div
popf
pusha
into
pop
movs
fld
add
cmp
lds
sub
nop
mov
nop
sbb
mov
std
into
imul
xchg
cwde
inc
shr
ret
xlat
sar
jg
in
aas
lods
pop
mov
fst
cmps
lahf
icebp
add
cmp
mov
mov
mov
pop
push
cmp
pop
(bad)
arpl
jmp
mov
xor
outs
jge
dec
scas
jns
mov
hlt
outs
bound
mov
adc
push
mov
icebp
aad
cmp
(bad)
in
xchg
and
mov
shl
test
pop
test
pusha
shl
dec
sbb
je
out
adc
call
dec
pop
bound
pop
sbb
xchg
pop
into
mov
in
jno
test
jle
push
pop
bound
mov
popf
imul
fisubr
lods
hlt
clc
movs
pop
or
jecxz
xor
push
in
adc
adc
push
jns
and
cdq
jle
bound
cmp
in
shr
mov
call
sub
mov
pop
(bad)
cmp
xchg
sahf
inc
mov
das
cli
iret
push
lahf
pushf
inc
push
jmp
or
lahf
lods
popa
clc
mov
add
ds
jno
bound
or
(bad)
add
dec
mov
ins
mov
gs
fs
rol
mov
add
and
in
pop
in
xchg
jge
fist
mov
imul
or
inc
dec
pop
push
xchg
sti
std
pop
mov
xchg
ins
mov
mov
inc
push
retf
pop
dec
imul
(bad)
mov
mov
dec
fs
jb
xor
inc
enter
lods
fild
sbb
outs
popa
dec
push
push
jmp
sbb
push
xchg
outs
and
outs
pop
cmp
sar
jbe
mov
inc
retf
ror
mov
xchg
pop
(bad)
bound
mov
popf
out
stc
les
inc
sbb
je
xchg
stos
dec
push
xor
adc
retf
mov
pop
sub
popf
lds
jl
std
cld
push
in
dec
mov
and
mov
cmp
fisub
or
lea
sub
jnp
out
sbb
shl
mov
js
leave
mov
in
xor
aad
jge
push
or
add
push
cld
push
iret
es
aaa
xchg
dec
jg
add
ret
jns
jae
inc
jns
(bad)
dec
in
push
dec
or
stos
dec
int3
mov
jo
in
neg
or
cdq
inc
rcl
lea
movs
cs
(bad)
stc
mov
lods
(bad)
or
loopne
jne
sar
repnz
ins
cmps
xchg
mov
stc
(bad)
es
icebp
imul
int3
mov
call
call
bound
pop
rsm
loope
leave
dec
mov
out
rcr
xchg
push
stos
aam
mov
lahf
lds
or
sbb
sahf
rol
call
ins
(bad)
aaa
jle
dec
out
stos
mov
lahf
in
push
push
jbe
pop
retf
pop
leave
push
repz
rol
pushf
mov
add
mov
sbb
jl
lods
or
push
pop
call
dec
pop
mov
in
add
mov
add
dec
jle
out
cmp
push
in
inc
aad
in
mov
imul
push
jl
pop
mov
or
in
jae
dec
in
push
retf
pop
fisubr
popf
loope
ret
fyl2xp1
sub
and
cli
scas
lds
sbb
adc
jle
and
inc
and
movs
aad
xchg
mov
mov
fst
sbb
or
sahf
inc
xor
aaa
mov
mov
aas
inc
shr
mov
pop
loopne
xor
or
cld
jmp
xchg
sbb
loopne
ins
push
sahf
in
add
fstp
push
dec
pop
mul
mov
or
cmp
mov
in
test
nop
sub
mov
jg
xor
push
sub
in
stos
dec
inc
jle
cmp
ds
inc
leave
aas
or
outs
add
cdq
ret
inc
not
add
fnstcw
cmps
mov
jecxz
outs
xchg
mov
inc
ret
sbb
jp
pop
sbb
xchg
aaa
popf
mov
fidiv
sub
(bad)
or
jne
inc
std
rol
daa
sbb
and
dec
ja
jecxz
jmp
loop
xchg
and
test
inc
test
(bad)
ds
sar
aam
xchg
inc
fidiv
aam
mov
rol
push
(bad)
and
push
stc
jecxz
pop
mov
in
fs
mov
movs
aam
fwait
bound
scas
jle
pushf
scas
or
dec
inc
sbb
push
rcr
sbb
ins
stos
cmps
dec
pop
movs
xchg
or
mov
mov
scas
push
cmp
push
frstpm(287
shr
fcmovbe
in
adc
cs
pop
adc
dec
mov
jae
hlt
xor
sbb
mov
mov
push
sub
adc
add
sbb
push
gs
out
das
inc
xchg
xor
adc
cmc
call
cmp
sbb
test
xor
jbe
xor
dec
push
push
add
mov
push
in
adc
xor
mov
in
shl
pop
add
mov
iret
pop
cmp
fwait
sti
sbb
add
pop
ret
fisubr
add
jnp
test
call
jle
loope
int3
inc
dec
cmps
mov
imul
cmp
ja
mov
vcvttsd2si
outs
retf
les
add
aam
das
mov
aam
sub
mov
je
lahf
(bad)
adc
pop
xor
or
push
pop
std
cdq
pushf
fld
jle
mov
sbb
sbb
pop
les
(bad)
call
leave
pushf
add
push
js
inc
outs
add
es
push
mov
mov
sbb
iret
in
pop
sub
aam
jle
ret
retf
cmp
mov
jo
ss
sti
stos
mov
and
nop
push
and
xchg
add
shr
push
js
arpl
mov
mov
xor
push
mov
add
sbb
sahf
jecxz
scas
fdiv
in
mov
imul
or
jge
clc
and
inc
cmps
pushf
scas
sub
sub
cmp
(bad)
mov
mov
stos
sub
and
repnz
stos
arpl
daa
and
cmp
in
iret
imul
sbb
jecxz
mov
or
cmps
mov
adc
out
or
mov
adc
jne
sbb
pop
cwde
sub
sbb
je
or
cmp
sub
ds
jns
pop
and
adc
cs
das
fdiv
or
call
test
mov
popa
je
mov
pinsrw
arpl
xchg
push
jecxz
sub
cmp
sti
mov
push
xor
sar
inc
enter
fwait
call
cmps
xchg
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
inc
inc
push
pop
inc
in
into
xor
add
or
mov
rcr
test
dec
or
sub
inc
push
dec
or
sub
inc
push
dec
or
cmp
fidivr
and
lock
dec
out
add
add
dec
inc
scas
inc
pusha
or
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
je
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
hlt
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
xchg
mov
add
cli
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
mov
clc
es
push
add
daa
out
push
add
daa
out
push
add
out
push
add
out
push
add
out
push
add
add
daa
scas
daa
xor
(bad)
daa
add
push
add
add
add
pop
push
add
jo
adc
mov
mov
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
push
add
sub
push
add
pop
sub
add
add
add
sub
sub
add
add
sub
sub
sub
add
les
push
add
mov
pop
push
add
sub
sub
sub
daa
push
add
add
in
push
add
add
add
add
add
sub
add
add
out
push
add
add
pop
push
add
int3
sub
add
add
add
mov
push
add
add
das
mov
das
mov
xor
add
add
add
add
add
xor
xor
add
xor
sub
add
sub
add
add
xor
xor
xor
xor
es
add
les
adc
cmp
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
add
stos
sub
add
int
jp
adc
stc
xor
xor
add
add
mov
xor
xor
add
pop
sbb
jp
gs
add
add
add
xor
sub
add
xor
cmp
add
in
push
add
add
add
xor
aam
mov
xor
sbb
out
or
inc
ss
add
(bad)
push
add
add
add
les
push
add
ss
adc
or
mov
aaa
pop
sub
add
aaa
jo
push
add
push
aaa
push
add
add
add
add
aaa
in
push
add
aaa
pop
push
add
cmp
aaa
push
add
cmp
cmp
cmp
add
mov
cmp
cmp
cmp
sub
add
cmp
sub
add
cmp
aaa
adc
adc
mov
cmp
cmp
add
pop
cmp
add
add
add
add
cmp
cmp
cmp
push
add
add
cmp
cmp
sub
add
(bad)
push
add
add
cmp
sub
add
add
add
cmp
sub
add
cmp
xor
add
cmp
cmp
cmp
sub
add
inc
cmp
add
add
add
retf
cmp
sub
add
cmp
sub
add
cmp
sub
add
cmp
sub
add
cs
add
retf
sub
add
jmp
sub
add
add
add
add
cmp
cmp
add
cmp
sub
add
cmp
adc
add
cmp
pop
cmp
jp
ins
cmp
mov
cmp
ret
cmp
fidivr
stc
cmp
adc
xor
push
add
ds
cmp
add
mov
push
add
sub
push
add
les
push
add
xchg
push
add
add
add
add
ds
or
in
pop
cmp
add
ds
push
add
add
aas
sbb
aas
mov
aas
add
aas
mov
aas
sar
sahf
aas
jo
or
mov
add
aas
mov
aas
fistp
push
add
aas
stos
sub
add
inc
in
push
add
add
inc
cs
adc
push
inc
mov
inc
inc
cmp
add
add
inc
les
push
add
add
add
inc
retf
sub
add
inc
pop
adc
push
inc
mov
inc
add
inc
les
or
dec
inc
jp
adc
pop
inc
mov
inc
jp
adc
test
sub
add
int
sub
adc
jecxz
jmp
sub
add
add
mov
inc
jo
push
add
pop
push
add
sbb
inc
xchg
push
add
add
add
inc
les
push
add
inc
jo
push
add
inc
jo
adc
sub
sub
add
mov
inc
cs
mov
mov
inc
xchg
push
add
inc
rol
add
inc
mov
inc
sub
push
add
inc
les
adc
inc
inc
mov
inc
jo
push
add
in
push
add
add
inc
les
adc
fadd
push
add
inc
out
aaa
or
adc
or
test
add
inc
out
aaa
push
add
les
adc
push
inc
mov
inc
out
aaa
adc
xchg
inc
mov
inc
test
add
add
inc
les
push
add
inc
(bad)
inc
push
add
inc
outs
xor
retf
sub
add
inc
pop
or
inc
inc
pop
cmp
add
jp
or
pusha
inc
pop
cmp
add
add
add
add
inc
les
push
add
inc
jmp
or
les
push
add
inc
xchg
push
add
inc
adc
push
mov
inc
xchg
push
add
add
add
add
inc
mov
inc
mov
dec
out
aaa
push
add
dec
les
adc
xor
add
add
dec
mov
dec
xchg
xor
add
add
add
dec
add
dec
in
push
add
dec
les
push
add
dec
pop
push
add
dec
les
push
add
dec
out
aaa
push
add
sub
add
les
push
add
rol
add
add
add
dec
les
push
add
dec
les
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
adc
les
adc
add
mov
adc
les
adc
add
iret
sub
adc
les
adc
add
push
add
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
test
add
add
add
add
test
add
add
add
xor
add
add
add
or
cmp
pop
sub
pop
adc
or
push
sub
stos
sub
in
sub
sub
outs
pop
adc
arpl
jae
adc
les
add
add
xchg
adc
or
xchg
adc
pusha
das
xchg
pop
adc
xchg
das
movs
pop
adc
mov
xchg
pop
adc
inc
xor
add
add
add
add
xchg
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
add
or
sbb
jl
add
add
xchg
add
or
sbb
add
add
add
add
and
xchg
add
sbb
and
sbb
add
add
xchg
add
and
sub
dec
and
xchg
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
in
and
xchg
add
add
add
add
xchg
add
add
add
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
cld
add
add
xchg
add
add
and
add
add
xchg
add
add
inc
daa
add
add
xchg
add
add
fs
add
add
xchg
add
add
add
add
test
add
add
xchg
add
add
shl
add
add
xchg
add
das
add
in
daa
add
add
xchg
add
pushf
add
sub
add
add
add
sub
add
add
xchg
add
add
add
add
add
sub
add
add
add
mov
add
add
shr
add
add
xchg
add
add
sub
add
add
add
sub
add
add
xchg
add
add
push
sub
add
add
add
sub
add
add
add
cwde
sub
add
add
add
shr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
loopne
add
add
xchg
add
add
sub
add
add
add
add
add
add
add
add
add
add
xchg
add
push
js
rol
sub
add
add
add
add
add
add
add
sub
add
add
add
add
sub
xchg
add
pop
xchg
add
add
sub
xchg
add
pop
cwde
add
add
add
add
xchg
add
pop
mov
sub
xchg
add
add
add
add
add
add
sub
xchg
add
mov
xlat
add
sub
xchg
add
mov
add
add
xchg
add
rol
add
add
add
add
add
add
add
xchg
add
add
xchg
add
shr
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
pop
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
xchg
add
pop
or
cli
add
das
add
add
xchg
add
adc
cld
add
xor
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
shl
add
add
xchg
add
cmp
clzero
xor
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
push
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
xchg
add
or
inc
add
xor
add
add
add
or
add
add
xchg
add
or
xor
add
add
add
push
add
add
mov
add
add
xchg
add
add
xor
add
add
xchg
add
lds
dec
add
add
add
xchg
add
leave
add
push
xchg
add
add
add
js
add
add
xchg
add
fild
push
add
add
add
enter
add
xchg
add
add
mov
add
add
add
or
add
add
mov
add
add
add
dec
mov
add
add
add
js
add
add
xchg
add
or
add
mov
add
add
int3
mov
add
add
add
in
mov
add
add
add
call
add
add
adc
xchg
add
or
add
xor
add
add
xchg
add
or
xchg
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
call
test
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
add
pushf
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
xchg
add
or
add
add
pushf
add
add
xchg
add
or
add
add
xchg
add
or
add
add
add
add
add
popf
add
add
xchg
add
or
add
add
sahf
add
add
xchg
add
add
add
add
add
add
xchg
add
or
jecxz
add
add
add
xchg
add
add
add
add
add
xchg
add
or
out
mov
xchg
add
or
jmp
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
xchg
add
or
add
add
mov
xchg
add
or
add
add
add
add
add
add
add
add
xchg
or
ja
sti
add
xchg
or
jl
sti
add
add
add
add
xchg
or
add
mov
xchg
or
add
add
add
or
aam
add
add
fisttp
in
or
cli
or
add
add
add
or
add
add
pop
push
add
add
and
add
add
das
push
add
add
ds
add
add
dec
push
add
add
push
push
add
add
popa
push
add
add
outs
push
add
add
jge
add
add
mov
add
add
cdq
push
add
add
movs
push
add
add
mov
add
add
mov
add
push
add
add
(bad)
push
add
add
loopne
add
add
out
push
add
add
std
push
add
add
or
add
add
sbb
add
add
sub
add
add
xor
add
add
inc
sldt
add
push
sldt
add
pop
sldt
add
ins
sldt
add
jl
add
add
mov
add
add
xchg
sldt
add
mov
add
add
add
sldt
add
fmul
add
add
loope
add
add
in
sldt
add
test
add
add
add
add
and
add
add
adc
add
add
adc
add
add
add
add
push
adc
add
add
add
add
ins
adc
add
add
add
add
adc
mov
add
add
fwait
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
lock
add
add
add
adc
add
add
add
add
pop
adc
add
add
adc
add
xor
add
adc
add
add
add
add
add
add
bound
add
add
jno
add
add
jle
add
add
mov
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
jecxz
add
add
add
add
adc
add
add
adc
add
add
adc
add
and
add
add
xor
add
add
cmp
add
add
inc
adc
add
add
add
add
pop
adc
add
add
add
add
jbe
add
add
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
adc
add
add
pop
adc
add
add
add
add
cmp
add
add
add
add
add
add
pop
adc
add
add
add
add
jbe
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
or
add
add
add
add
add
sub
add
add
adc
add
add
add
add
dec
adc
add
pop
adc
add
add
add
add
add
jg
add
add
mov
add
cdq
adc
add
add
add
add
adc
add
iret
adc
add
add
add
adc
add
add
adc
add
add
adc
adc
add
adc
sub
add
add
add
add
push
adc
arpl
jo
add
add
jg
add
add
mov
cdq
adc
cmps
adc
mov
add
add
ret
adc
rcl
ficom
jmp
adc
push
push
add
add
adc
add
push
add
add
sub
add
push
add
add
dec
push
add
add
push
push
add
add
pusha
push
add
add
outs
push
add
add
jge
add
add
mov
add
add
cdq
push
add
add
mov
add
add
add
add
push
add
add
(bad)
push
add
add
in
add
add
add
add
push
add
add
pop
pop
add
add
push
pop
add
add
and
add
add
sub
add
pop
add
add
inc
pop
add
add
push
pop
add
add
pusha
pop
add
add
push
add
add
jbe
add
add
test
add
add
xchg
pop
add
add
mov
add
add
add
pop
add
add
rcl
add
add
loope
add
add
in
pop
add
add
sti
pop
add
add
pop
sbb
add
add
sbb
add
and
add
add
add
add
add
add
dec
sbb
add
add
add
add
add
add
jne
add
add
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
fstp
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
xor
add
add
aas
sbb
add
add
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
pop
sbb
add
arpl
add
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
hlt
sbb
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
pop
sbb
add
add
add
add
js
add
add
sbb
add
add
add
add
mov
add
add
ret
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
sbb
add
add
add
add
add
das
sbb
add
add
sbb
add
dec
sbb
add
add
add
add
add
jae
add
add
sbb
add
lea
add
add
add
add
ret
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
or
adc
add
sub
add
add
cmp
inc
sbb
push
sbb
pop
sbb
push
add
add
add
sbb
sbb
pushf
sbb
test
add
add
add
sbb
aad
add
add
add
add
sbb
call
or
add
add
sbb
add
add
and
add
add
xor
add
add
ds
add
add
dec
push
add
add
push
push
add
add
gs
add
add
outs
push
add
add
jge
add
add
add
add
add
add
add
lds
add
add
rcr
add
add
loope
add
add
jmp
add
add
cli
push
add
add
or
add
add
add
add
pop
add
add
cs
add
add
cmp
add
add
inc
pop
add
add
push
pop
add
add
gs
add
add
add
add
add
add
mov
add
add
xchg
pop
add
add
popf
pop
add
add
add
add
add
pop
add
add
iret
pop
add
add
fstp
add
add
call
add
pop
add
add
add
add
add
adc
add
add
pop
and
add
add
and
add
add
add
add
add
push
and
add
add
add
add
push
add
add
jne
add
add
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
pop
and
add
add
add
and
add
add
and
add
add
add
add
inc
and
add
add
add
add
pop
and
add
add
add
add
jae
add
add
and
nop
and
add
pushf
and
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
add
add
and
add
add
add
add
add
dec
and
add
add
add
add
and
add
add
add
add
and
mov
add
add
fwait
and
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
add
add
daa
and
add
add
and
add
add
add
add
push
and
add
add
add
add
imul
add
add
add
add
xchg
add
add
xchg
and
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
add
and
add
add
add
add
cmp
add
add
add
add
push
and
add
add
add
add
push
add
add
ja
add
add
xchg
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
adc
sbb
add
and
aaa
and
inc
and
dec
and
pop
and
and
add
jbe
add
add
and
add
xchg
and
mov
add
add
add
and
(bad)
and
in
add
add
out
and
clc
and
add
add
add
adc
add
add
sbb
add
add
sub
add
add
aaa
add
add
inc
add
add
push
add
add
pop
add
add
push
add
add
jns
add
add
test
add
add
xchg
add
add
mov
add
add
leave
add
add
aad
add
add
loopne
sub
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
push
mov
or
fwait
sub
add
add
add
add
jmp
sub
add
add
add
add
add
push
add
add
add
add
jae
pop
add
add
sub
pop
add
leave
add
add
push
pop
xchg
add
sub
jmp
pop
pop
add
add
mov
cmp
mov
mov
pop
leave
add
sahf
pop
leave
add
leave
das
pop
pop
leave
add
das
scas
pop
leave
add
std
add
add
pop
add
leave
add
add
xor
pop
test
pop
stc
add
js
sbb
xor
fld
leave
add
xor
add
add
pop
sbb
cmp
mov
and
inc
sub
pop
leave
add
xor
pop
leave
add
xor
pop
leave
add
xor
or
add
xor
or
cmp
and
sbb
inc
add
push
or
add
or
or
or
add
xor
or
mov
add
xor
add
pop
add
add
cmp
mov
popa
add
xor
jno
daa
xor
rol
xor
mov
popa
xor
xchg
add
jae
xchg
add
pop
pop
icebp
add
add
cmp
mov
test
or
add
jae
leave
add
ins
or
add
pop
leave
add
xor
xor
pop
jmp
or
add
add
or
add
das
mov
icebp
add
or
add
add
add
add
xor
or
add
sub
or
add
fwait
or
add
xor
or
add
test
ss
leave
add
inc
pop
mov
nop
xor
mov
mov
dec
add
or
add
add
inc
jae
xor
inc
sub
inc
pop
push
inc
pop
push
leave
add
fs
adc
imul
inc
rol
pop
mov
add
scas
add
add
or
pop
adc
out
test
leave
add
xor
test
adc
pop
jne
jae
rol
inc
or
mov
adc
add
add
or
xor
adc
add
push
adc
or
dec
jae
leave
add
pop
pop
dec
or
inc
adc
dec
or
dec
or
scas
dec
mov
xor
ror
adc
add
dec
xchg
adc
add
popf
adc
add
dec
mov
popa
or
mov
add
adc
add
add
adc
add
add
add
rcl
add
add
add
adc
add
add
add
add
adc
add
add
add
adc
sbb
adc
pop
or
add
pop
or
add
mov
pop
add
(bad)
sbb
add
add
sbb
add
inc
add
add
add
add
cmp
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
dec
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xor
inc
add
pop
add
jb
js
jg
xchg
pushf
add
scas
add
ret
add
fild
hlt
add
or
adc
sbb
and
daa
push
sub
push
inc
push
dec
push
push
push
pop
push
pusha
push
pushw
ins
push
jb
js
add
push
pop
xchg
push
lahf
push
movs
push
stos
push
mov
mov
push
into
push
aam
fiadd
loope
out
in
push
repz
sti
push
add
or
mov
push
and
sub
das
sysexit
(bad)
cmovae
dec
rcpps
pop
shrd
(bad)
cmpps
(bad)
(bad)
pmaxub
out
in
psadbw
add
or
adc
push
adc
adc
adc
dec
adc
adc
adc
adc
mov
adc
adc
adc
adc
adc
adc
adc
pop
adc
outs
adc
adc
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
pop
add
push
add
or
enter
or
loopne
add
or
call
add
push
add
or
clc
push
add
or
add
add
push
add
verr
push
add
adc
add
add
pop
add
add
inc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
pop
xor
pop
pop
cmp
add
cmp
aas
ds
push
jb
call
sub
jle
loop
adc
sbb
inc
outs
arpl
ins
popa
jb
xor
xor
add
je
outs
jb
xor
xor
add
je
push
cmp
add
ins
ins
imul
add
ins
popa
outs
imul
push
jne
gs
xor
outs
jae
arpl
ins
imul
push
push
cmp
xor
outs
fs
jb
xor
aaa
xor
inc
gs
je
outs
xor
xor
add
ins
popa
jns
cmp
xor
outs
jb
gs
xor
je
outs
je
outs
outs
jae
xor
inc
jb
bound
xor
xor
inc
bound
je
xor
push
jae
xor
xor
push
jb
outs
jae
je
ss
push
outs
gs
fs
push
imul
jns
xor
jb
gs
xor
xor
add
ins
jae
xor
ins
popa
imul
xor
gs
xor
xor
add
outs
jae
xor
add
arpl
gs
add
arpl
ss
add
arpl
gs
ins
gs
ss
add
imul
fs
xor
xor
push
jb
outs
imul
xor
cmp
inc
fs
outs
arpl
xor
add
arpl
gs
xor
inc
popa
outs
je
ins
xor
xor
imul
xor
jae
jb
outs
outs
ins
imul
push
jo
outs
popa
fs
add
gs
ins
outs
imul
push
imul
xor
cmp
add
arpl
jo
imul
add
popa
je
imul
cmp
inc
ins
outs
popa
je
aaa
ss
add
jb
gs
xor
push
imul
add
imul
add
je
gs
xor
outs
ins
jne
imul
xor
add
fs
ss
push
ja
popa
jb
jb
xor
inc
jae
outs
imul
add
fs
gs
xor
cmp
inc
ins
bound
imul
add
popa
je
je
fs
xor
cmp
push
imul
xor
xor
push
outs
je
jb
fs
add
jae
ins
jae
xor
add
jo
arpl
xor
je
ins
outs
jo
jae
cmp
add
jb
popa
fs
xor
xor
push
outs
ja
popa
jo
xor
push
push
jb
outs
addr16
aaa
xor
popa
arpl
ins
ins
outs
fs
aaa
xor
arpl
je
arpl
xor
xor
gs
outs
outs
imul
add
push
xor
gs
xor
xor
inc
ins
imul
add
popa
je
gs
arpl
addr16
add
outs
je
je
xor
xor
ins
jae
outs
jb
imul
gs
add
push
arpl
jne
push
xor
xor
inc
outs
je
arpl
outs
je
cmp
xor
push
popa
jb
outs
jae
xor
xor
inc
bound
popa
imul
xor
inc
imul
jae
xor
xor
inc
jb
ins
ins
gs
push
gs
imul
cmp
inc
gs
gs
xor
xor
add
ja
ins
aaa
xor
push
xor
xor
outs
ins
ins
jns
ss
xor
inc
gs
outs
xor
xor
push
jne
je
popa
arpl
aaa
xor
outs
jne
imul
inc
jo
jb
jae
fs
push
je
outs
gs
jb
xor
xor
push
popa
arpl
popa
ins
xor
cmp
push
jb
popa
je
outs
je
aaa
xor
add
imul
xor
ins
outs
gs
bound
xor
add
popa
jbe
outs
addr16
xor
add
imul
xor
popa
outs
outs
outs
imul
cmp
add
jae
popa
ins
xor
xor
add
xor
xor
gs
arpl
jb
jne
aaa
xor
add
je
jae
aaa
cmp
add
fs
imul
xor
xor
push
jne
ins
popa
jb
outs
gs
xor
push
popa
je
jb
imul
add
outs
outs
arpl
je
jae
xor
inc
popa
jae
gs
jns
cmp
aaa
add
popa
jo
jae
cmp
aaa
add
popa
jae
jae
xor
xor
jae
xor
cmp
add
jae
outs
outs
popa
jb
xor
aaa
add
jb
jns
xor
xor
push
gs
cmp
add
jb
popa
bound
je
xor
add
je
gs
xor
cmp
add
outs
jne
gs
xor
aaa
add
fs
gs
cmp
add
jb
ins
xor
cmp
push
outs
outs
ins
imul
add
bound
popa
outs
arpl
xor
xor
inc
ins
jo
imul
aaa
xor
inc
popa
je
push
xor
cmp
push
outs
jae
popa
arpl
xor
xor
add
ins
bound
imul
xor
inc
ins
outs
fs
cmp
add
outs
jae
popa
je
bound
aaa
cmp
inc
gs
je
imul
xor
xor
outs
jb
gs
popa
je
xor
inc
popa
jb
popa
jb
jne
xor
xor
add
jo
outs
jae
ss
cmp
inc
popa
fs
cmp
cmp
push
jb
imul
xor
inc
outs
outs
imul
xor
inc
gs
ins
outs
ja
cmp
xor
inc
popa
jb
imul
xor
add
bound
aaa
cmp
xor
inc
arpl
je
imul
push
gs
imul
push
outs
jae
imul
xor
add
bound
popa
outs
arpl
xor
xor
je
ins
jne
ss
inc
fs
outs
outs
imul
xor
add
addr16
inc
popa
je
ins
gs
xor
outs
jb
imul
cmp
add
ins
imul
cmp
push
popa
imul
xor
xor
imul
add
jb
jns
xor
xor
add
jo
ins
imul
xor
add
addr16
jb
popa
outs
xor
xor
add
jb
jo
gs
cmp
add
addr16
jb
popa
outs
xor
add
outs
fs
cmp
push
jb
bound
xor
xor
push
outs
fs
fs
xor
add
cmp
aaa
add
imul
add
jae
outs
xor
ss
inc
jne
jne
outs
xor
inc
je
imul
xor
xor
push
outs
ja
imul
add
je
outs
je
jbe
aaa
xor
xor
push
jne
gs
je
je
xor
xor
add
ins
ins
imul
xor
aaa
xor
outs
jbe
jb
xor
aaa
add
jb
jb
jae
xor
push
imul
aaa
xor
add
jae
arpl
xor
pop
gs
ins
ss
add
jb
ins
outs
je
outs
xor
xor
jb
gs
xor
cmp
add
ins
ins
gs
xor
xor
add
jne
push
xor
jo
jb
imul
xor
inc
imul
outs
bound
imul
add
push
addr16
xor
add
jo
outs
jae
je
jb
xor
xor
push
je
outs
outs
xor
xor
add
gs
inc
imul
add
jb
imul
aaa
xor
push
je
outs
jbe
ss
push
ja
gs
outs
xor
xor
add
popa
je
jb
bound
xor
push
imul
xor
add
ins
gs
cmp
add
arpl
gs
cmp
aaa
add
popa
imul
aaa
xor
jae
popa
jae
imul
xor
inc
ins
outs
outs
ins
jae
xor
xor
popa
fs
xor
ss
add
outs
fs
outs
addr16
xor
add
je
jne
push
xor
push
outs
bound
xor
xor
add
je
ins
imul
add
jae
jb
cmp
add
gs
jb
cmp
xor
push
outs
push
cmp
aaa
add
jb
gs
ins
xor
inc
outs
je
outs
ins
gs
xor
and
push
je
gs
xor
xor
jb
outs
outs
ins
imul
push
imul
cmp
push
popa
ins
jo
fs
push
outs
addr16
arpl
jne
aaa
xor
add
outs
imul
push
gs
ins
je
ins
gs
cmp
je
xor
xor
add
jne
je
outs
xor
xor
inc
je
outs
jae
push
xor
add
imul
add
jns
outs
xor
add
jo
imul
xor
add
outs
jo
popa
addr16
xor
add
ins
cmp
jne
jb
jne
fs
xor
inc
gs
popa
jbe
xor
xor
inc
jb
popa
je
gs
xor
xor
push
jne
fs
xor
push
outs
imul
add
jo
jb
jne
gs
xor
xor
push
popa
ins
jo
jb
outs
cmp
xor
jne
imul
ins
outs
outs
fs
xor
inc
outs
popa
ins
addr16
arpl
xor
xor
push
jb
arpl
xor
add
jae
je
je
outs
outs
xor
xor
add
ins
jo
xor
xor
jb
push
ss
cmp
add
cmp
add
ins
popa
je
jb
ins
xor
push
gs
jb
cmp
cmp
push
je
outs
outs
imul
add
jb
outs
ja
jb
xor
xor
push
imul
xor
jne
ins
imul
add
jo
jb
ins
xor
xor
add
popa
outs
arpl
xor
cmp
add
addr16
je
xor
xor
gs
outs
jb
fs
push
outs
je
outs
popa
bound
xor
popa
jbe
jb
cmp
xor
add
je
jb
outs
xor
add
fs
imul
aaa
add
arpl
jb
xor
xor
add
ins
imul
xor
xor
add
je
addr16
jo
jae
xor
xor
inc
ins
outs
outs
fs
gs
xor
cmp
inc
outs
je
popa
ins
xor
cmp
add
arpl
ss
xor
gs
fs
cmp
add
ins
outs
ja
xor
jne
outs
gs
xor
add
je
jbe
je
outs
outs
xor
inc
jb
je
gs
xor
arpl
jb
gs
xor
popa
ins
aaa
xor
bound
gs
popa
je
cmp
xor
inc
imul
jb
cmp
ins
ins
imul
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
arpl
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
addr16
dec
ins
popa
xor
addr16
inc
gs
gs
ss
aaa
xor
inc
jne
je
jb
add
popa
xor
inc
gs
gs
ss
aaa
xor
inc
outs
je
je
jne
je
xor
xor
inc
jb
addr16
xor
inc
imul
xor
xor
ins
ins
imul
add
jo
xor
aaa
add
jae
aaa
xor
push
popa
jne
gs
cmp
add
jne
imul
add
imul
xor
add
jb
gs
imul
add
je
aaa
xor
bound
push
add
bound
gs
push
jb
imul
aaa
add
je
jb
jae
imul
push
jb
imul
aaa
xor
inc
ins
bound
imul
add
outs
imul
popa
je
ins
outs
ss
cmp
add
jae
outs
jae
ss
cmp
inc
imul
xor
xor
push
je
outs
je
fs
xor
xor
inc
data16
jb
xor
xor
push
gs
bound
xor
xor
inc
data16
outs
popa
xor
xor
outs
outs
outs
outs
imul
xor
inc
popa
ins
arpl
popa
je
jb
xor
cmp
inc
jb
popa
outs
imul
add
addr16
xor
push
jne
outs
outs
jae
xor
xor
push
jne
jo
popa
outs
je
outs
xor
xor
add
imul
cmp
add
outs
ins
gs
xor
xor
add
je
arpl
popa
je
ss
inc
jo
outs
jb
imul
xor
push
jne
bound
gs
xor
push
jb
imul
cmp
inc
outs
ins
bound
xor
xor
jb
gs
ss
xor
add
imul
xor
xor
inc
jb
je
ins
gs
arpl
xor
aaa
add
outs
xor
cmp
add
ins
gs
jae
xor
cmp
add
arpl
xor
xor
inc
outs
ins
gs
outs
arpl
xor
add
outs
jae
imul
xor
ins
gs
xor
inc
bound
outs
outs
fs
xor
push
push
gs
xor
outs
outs
outs
jne
arpl
xor
xor
add
popa
jb
xor
xor
add
popa
jb
bound
xor
xor
add
jne
push
xor
add
jae
jb
xor
xor
gs
xor
add
addr16
outs
xor
cmp
push
outs
popa
arpl
jo
popa
bound
xor
inc
jne
imul
ss
jae
jae
xor
cmp
push
je
jne
aaa
aaa
xor
add
bound
outs
ja
aaa
xor
xor
push
jb
popa
imul
xor
xor
inc
outs
fs
ss
cmp
add
jae
gs
aaa
xor
add
jae
gs
aaa
xor
add
popa
jo
gs
xor
push
jb
jae
gs
xor
xor
inc
jae
outs
jb
aaa
cmp
xor
gs
cmp
add
ins
popa
jp
cmp
js
outs
addr16
xor
add
jae
je
bound
cmp
add
arpl
imul
outs
fs
xor
push
jne
jb
popa
ins
imul
add
ja
jae
outs
ins
xor
cmp
add
ins
imul
add
jo
jb
outs
xor
xor
jne
gs
xor
add
jae
imul
cmp
xor
inc
ins
outs
outs
fs
outs
je
xor
cmp
push
popa
imul
cmp
aaa
add
bound
ins
jae
xor
xor
ins
gs
xor
add
ins
jae
xor
cmp
add
ins
gs
cmp
xor
inc
arpl
jae
imul
cmp
inc
popa
outs
arpl
ins
popa
je
ss
inc
outs
je
popa
ins
xor
xor
add
jae
outs
jae
je
outs
xor
push
popa
xor
xor
add
gs
jne
gs
xor
xor
inc
outs
ins
fs
inc
jne
outs
ins
popa
je
arpl
xor
add
jo
imul
xor
add
jo
xor
xor
add
ins
imul
xor
add
ins
bound
imul
xor
inc
jb
push
add
je
arpl
je
xor
inc
ins
gs
xor
xor
push
popa
imul
outs
aaa
cmp
add
outs
gs
xor
add
jb
gs
popa
ins
imul
aaa
aaa
xor
inc
outs
imul
cmp
add
gs
xor
cmp
push
gs
imul
xor
popa
arpl
popa
jae
ss
inc
gs
ins
ins
gs
xor
xor
push
outs
bound
jb
fs
push
popa
jo
jb
jae
je
cmp
xor
push
imul
imul
push
jne
xor
xor
add
fs
ins
imul
add
fs
imul
xor
inc
outs
outs
gs
outs
addr16
xor
xor
inc
bound
imul
xor
add
ins
jae
xor
add
imul
add
arpl
popa
ins
xor
xor
add
je
ins
outs
je
ss
cmp
add
ins
bound
xor
gs
ins
jns
xor
aaa
xor
push
outs
fs
xor
xor
cmp
add
jae
jne
imul
inc
ins
imul
xor
xor
push
imul
xor
add
imul
push
outs
fs
jb
bound
ss
gs
jb
bound
xor
xor
inc
outs
imul
cmp
push
popa
jb
xor
jo
jns
xor
aaa
add
je
imul
xor
xor
push
outs
outs
ss
xor
ins
popa
bound
imul
imul
xor
outs
jb
jne
popa
je
cmp
inc
data16
outs
je
xor
xor
add
arpl
outs
gs
jae
xor
xor
inc
imul
xor
push
imul
xor
xor
fs
imul
add
imul
xor
aaa
add
bound
arpl
outs
cmp
add
je
imul
add
jae
gs
ss
inc
bound
imul
add
push
xor
xor
push
outs
jae
arpl
jne
xor
inc
jb
jp
outs
xor
inc
popa
fs
jbe
jb
xor
xor
add
arpl
fs
xor
cmp
push
outs
jae
outs
gs
xor
jne
jo
imul
xor
add
addr16
jne
fs
xor
cmp
inc
imul
xor
add
jae
outs
popa
ins
jae
aaa
xor
add
ins
imul
cmp
add
jb
je
push
ss
gs
popa
je
fs
xor
inc
popa
outs
outs
gs
push
outs
je
jae
gs
xor
outs
fs
xor
add
jo
jae
push
cmp
add
je
outs
jb
jae
je
aaa
cmp
add
ins
outs
addr16
xor
add
ins
imul
aaa
add
popa
jb
push
xor
add
jb
jae
imul
inc
je
ins
imul
add
outs
outs
gs
xor
xor
add
jo
popa
outs
outs
gs
cmp
add
jno
gs
je
imul
inc
jne
jo
gs
xor
add
outs
jae
arpl
ss
inc
imul
jb
jae
xor
push
gs
je
cmp
cmp
push
imul
inc
jae
imul
aaa
cmp
add
je
ss
aaa
add
jo
jb
imul
push
popa
je
jb
xor
aaa
add
jb
outs
addr16
push
imul
cmp
inc
jb
imul
xor
cmp
add
jo
gs
xor
cmp
push
jne
je
outs
addr16
xor
xor
inc
popa
outs
outs
gs
ss
jne
fs
ins
outs
xor
inc
popa
jb
gs
jb
xor
gs
jae
xor
add
outs
ss
push
jb
outs
arpl
jb
aaa
xor
push
jne
gs
je
jb
xor
gs
imul
xor
cmp
inc
popa
ins
ins
outs
outs
outs
imul
add
arpl
jae
aaa
xor
add
jae
je
jb
xor
cmp
inc
jb
jae
ins
xor
xor
add
outs
ins
gs
aaa
xor
add
popa
jo
jb
arpl
xor
aaa
xor
inc
jne
je
outs
ss
je
jne
fs
cmp
inc
ins
jne
imul
add
js
outs
jo
xor
push
outs
arpl
jno
gs
ss
xor
add
je
jb
gs
xor
inc
outs
je
outs
outs
imul
xor
push
ja
gs
jb
xor
cmp
push
outs
arpl
jo
outs
ins
imul
pop
gs
imul
add
gs
je
gs
xor
xor
jae
jae
cmp
cmp
push
imul
xor
add
outs
fs
jb
gs
xor
add
jae
push
imul
inc
jbe
jb
gs
xor
inc
outs
jae
gs
outs
addr16
cmp
add
xor
cmp
add
je
ins
outs
jo
xor
xor
push
popa
jb
imul
add
ins
imul
ss
je
outs
xor
xor
gs
xor
push
jb
imul
xor
ss
imul
xor
xor
jo
gs
ss
xor
add
popa
imul
cmp
arpl
gs
xor
xor
push
jb
push
cmp
push
gs
imul
xor
aaa
add
bound
jbe
popa
je
cmp
ins
imul
aaa
xor
add
jo
outs
outs
imul
add
je
xor
aaa
xor
push
outs
fs
arpl
ss
aaa
xor
inc
jb
imul
xor
gs
jb
imul
push
je
outs
outs
je
jne
xor
aaa
xor
inc
outs
je
outs
outs
imul
add
arpl
jne
popa
jb
xor
push
gs
jo
jb
ss
ins
imul
cmp
inc
outs
je
gs
xor
jne
jo
fs
push
jne
jo
outs
gs
xor
add
outs
imul
aaa
add
ins
bound
fs
outs
xor
push
push
je
arpl
aaa
xor
add
jne
gs
xor
jae
gs
outs
addr16
ss
add
arpl
imul
add
popa
je
fs
jo
ss
xor
push
push
jb
ins
popa
ss
xor
add
outs
je
xor
jne
jb
outs
popa
je
outs
aaa
cmp
cmp
inc
popa
ins
arpl
popa
je
jb
xor
xor
push
jb
arpl
xor
xor
add
gs
arpl
fs
aaa
cmp
inc
popa
outs
popa
jo
jae
xor
xor
inc
jne
je
jb
ins
imul
popa
ins
arpl
popa
je
outs
ss
push
imul
jns
xor
add
jo
outs
jae
je
outs
xor
inc
arpl
gs
xor
gs
bound
xor
aaa
xor
inc
gs
imul
xor
outs
jae
popa
je
jb
aaa
xor
add
arpl
je
ins
imul
inc
imul
inc
jne
je
xor
xor
add
je
jb
jae
gs
ja
je
push
inc
jne
outs
ins
popa
je
jae
aaa
xor
add
outs
outs
fs
popa
imul
add
bound
je
popa
bound
xor
inc
popa
jb
jae
cmp
add
outs
cmp
xor
imul
jo
cmp
xor
arpl
ins
outs
outs
ins
jns
aaa
xor
add
je
js
jne
gs
xor
add
outs
outs
jae
xor
aaa
xor
outs
outs
popa
xor
jae
gs
cmp
xor
push
ja
ins
ins
outs
ja
outs
xor
aaa
xor
push
outs
fs
ins
ss
cmp
add
outs
jb
ins
imul
add
outs
gs
aaa
xor
xor
push
popa
ins
imul
xor
inc
popa
jb
imul
xor
inc
jne
imul
xor
add
jb
popa
ins
jae
xor
xor
push
je
popa
outs
ins
imul
xor
pop
gs
gs
aaa
xor
inc
data16
imul
xor
xor
inc
ins
jo
ins
jae
xor
cmp
inc
gs
outs
jae
xor
xor
outs
outs
ja
xor
xor
arpl
outs
popa
je
fs
push
outs
fs
xor
add
jo
outs
js
ins
popa
je
cmp
inc
je
outs
imul
inc
js
outs
ins
popa
je
arpl
xor
xor
ss
outs
jb
popa
fs
cmp
add
je
outs
jb
xor
cmp
inc
popa
jae
imul
add
popa
outs
fs
outs
xor
xor
inc
outs
je
arpl
xor
xor
inc
popa
outs
outs
outs
je
xor
xor
push
outs
fs
popa
outs
je
xor
aaa
add
je
outs
addr16
xor
xor
bound
je
ss
popa
jb
imul
xor
push
popa
jbe
jae
xor
aaa
add
jb
je
ins
xor
cmp
inc
popa
jae
outs
jae
ss
add
jb
gs
xor
xor
add
ins
arpl
gs
aaa
cmp
inc
jo
gs
ins
popa
je
outs
xor
inc
ins
imul
outs
xor
jo
ins
imul
add
popa
je
gs
xor
inc
outs
ins
gs
xor
add
jbe
outs
je
jb
jae
xor
xor
push
outs
jns
addr16
xor
xor
push
push
outs
ss
xor
imul
add
jo
jb
popa
imul
aaa
add
je
ss
inc
jae
popa
jae
imul
add
jo
jb
imul
xor
jne
xor
push
outs
arpl
jo
xor
xor
outs
je
arpl
outs
ins
cmp
xor
inc
jb
outs
ja
xor
xor
add
outs
je
xor
add
je
gs
gs
cmp
push
outs
popa
fs
jo
imul
add
je
xor
xor
add
fs
imul
xor
push
je
jo
popa
addr16
xor
aaa
add
jne
push
add
jae
imul
add
arpl
addr16
xor
xor
push
gs
popa
jo
outs
jae
xor
add
jae
imul
add
outs
jae
outs
fs
xor
fs
jb
gs
xor
aaa
add
ja
jns
xor
xor
add
jo
gs
popa
ins
ss
xor
add
bound
je
fs
cmp
add
imul
add
cmp
add
outs
ja
xor
inc
jne
push
jae
xor
xor
ins
jo
ins
imul
add
ins
outs
jb
gs
xor
add
outs
jb
push
xor
add
imul
xor
inc
jae
outs
fs
cmp
add
outs
jo
gs
xor
push
jb
outs
jae
imul
xor
inc
popa
ins
outs
jb
ins
gs
xor
xor
ins
jae
xor
cmp
inc
jne
je
arpl
xor
xor
push
jo
gs
imul
add
outs
imul
xor
gs
addr16
xor
push
imul
add
je
outs
jae
xor
add
je
jb
jb
outs
je
xor
cmp
push
je
popa
ja
popa
outs
xor
aaa
aaa
add
popa
jne
imul
xor
xor
push
popa
jae
fs
jns
xor
xor
add
push
jae
imul
xor
inc
jb
imul
xor
add
bound
arpl
xor
push
push
gs
outs
fs
aaa
xor
add
gs
imul
add
outs
xor
cmp
add
outs
jae
outs
je
ss
cmp
push
imul
xor
jb
jns
cmp
gs
ins
xor
xor
add
gs
imul
xor
aaa
add
ins
jbe
outs
addr16
xor
ins
popa
outs
arpl
ss
inc
ins
imul
cmp
push
popa
jae
popa
outs
imul
push
je
popa
addr16
gs
aaa
add
outs
ins
gs
xor
inc
outs
imul
xor
imul
jb
jae
imul
add
outs
imul
cmp
xor
outs
imul
add
jae
imul
xor
push
push
xor
xor
add
jo
jb
outs
ja
jb
xor
xor
push
outs
imul
jo
xor
add
arpl
outs
arpl
xor
cmp
push
outs
fs
gs
outs
ss
xor
add
jb
jns
xor
arpl
imul
cmp
inc
ins
ins
outs
arpl
gs
xor
xor
inc
imul
cmp
add
ins
jns
xor
xor
add
ins
ins
popa
bound
xor
aaa
add
addr16
popa
je
jae
cmp
xor
imul
xor
aaa
add
je
ins
outs
cmp
add
jo
outs
imul
xor
push
jb
ins
ins
jae
aaa
xor
add
ins
gs
xor
xor
push
arpl
xor
jae
xor
cmp
add
jb
imul
add
imul
jbe
outs
xor
xor
add
outs
ins
gs
outs
je
xor
jo
jb
imul
add
outs
jb
jae
outs
xor
xor
add
imul
cmp
cmp
push
jb
jae
jae
xor
je
outs
ins
outs
imul
add
outs
outs
imul
xor
add
outs
fs
xor
xor
push
popa
imul
xor
xor
push
gs
je
gs
outs
addr16
xor
popa
je
jb
arpl
cmp
xor
inc
gs
add
outs
fs
xor
xor
add
imul
xor
outs
outs
imul
push
outs
fs
imul
aaa
add
popa
xor
push
outs
fs
ins
jae
xor
gs
imul
cmp
add
arpl
je
imul
inc
je
outs
fs
xor
push
popa
jae
imul
add
addr16
cmp
push
jne
je
xor
xor
add
gs
arpl
jae
xor
aaa
add
fs
xor
add
jb
jo
gs
xor
xor
push
outs
fs
popa
jb
jae
xor
add
outs
je
xor
xor
add
je
jbe
jae
jae
xor
popa
jae
gs
cmp
add
ins
ins
popa
bound
aaa
xor
add
jo
popa
bound
imul
add
jb
ins
ins
gs
ss
fs
add
jne
ss
inc
jo
imul
xor
add
ins
popa
je
arpl
ss
ins
ins
imul
xor
push
popa
jb
outs
jae
cmp
add
ins
popa
fs
jae
xor
add
arpl
jo
imul
xor
inc
arpl
je
imul
gs
outs
ins
cmp
xor
inc
popa
arpl
xor
je
outs
ins
ins
gs
xor
push
popa
outs
fs
jae
cmp
cmp
push
popa
jb
popa
outs
je
cmp
xor
add
je
jae
cmp
xor
push
gs
arpl
jae
xor
outs
gs
xor
add
outs
jae
outs
jb
popa
ss
inc
ins
bound
xor
xor
add
jo
gs
xor
inc
ins
outs
bound
xor
xor
push
ja
outs
imul
add
outs
outs
imul
inc
je
outs
xor
xor
arpl
gs
je
xor
push
jb
ins
jo
ins
imul
add
arpl
je
jae
gs
arpl
aaa
xor
cmp
inc
popa
jae
xor
ss
xor
xor
add
jo
popa
outs
popa
je
outs
ss
inc
jb
push
xor
xor
inc
jne
imul
xor
inc
ins
ins
outs
je
outs
je
xor
data16
outs
ss
push
jb
arpl
xor
cmp
inc
jae
imul
xor
popa
outs
popa
jo
aaa
xor
xor
push
jne
jae
jb
imul
add
gs
xor
add
outs
jae
imul
cmp
inc
ins
outs
outs
imul
add
jb
popa
bound
xor
jne
fs
ins
outs
ss
cmp
push
popa
bound
popa
jb
xor
xor
outs
outs
jo
cmp
xor
add
gs
bound
cmp
add
ins
jne
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
popa
arpl
popa
imul
imul
je
jb
ins
ins
jns
inc
gs
gs
je
add
outs
outs
add
jae
gs
cs
gs
push
jo
outs
popa
fs
imul
gs
fs
jbe
outs
je
popa
outs
fs
gs
inc
jno
popa
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
imul
dec
imul
outs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
outs
outs
je
push
fs
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
add
fs
outs
fs
jb
js
jb
jae
imul
ins
gs
popa
jns
jne
push
je
ins
gs
outs
ins
ins
arpl
outs
add
ins
outs
jbe
inc
je
push
popa
bound
popa
jns
jne
inc
outs
ins
jne
outs
push
je
ins
gs
outs
ins
ins
arpl
outs
add
jb
outs
add
push
jo
gs
push
outs
push
je
imul
je
ins
cs
jne
je
ins
gs
gs
outs
je
outs
addr16
gs
fs
je
cs
xor
jae
xor
xor
add
popa
jo
popa
jae
ss
imul
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
outs
outs
jbe
jb
gs
dec
push
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
je
jb
jo
jb
imul
outs
jb
gs
arpl
ins
gs
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
outs
je
jb
jb
jae
push
gs
imul
jo
imul
dec
inc
inc
je
jb
bound
add
jae
gs
cs
push
imul
outs
ins
jo
gs
outs
outs
inc
popa
ins
ins
bound
imul
jns
je
ins
cs
gs
push
outs
arpl
je
add
dec
imul
add
je
popa
jae
inc
outs
fs
jae
gs
cs
dec
add
jbe
dec
outs
je
outs
jne
fs
js
gs
imul
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jb
popa
ins
imul
dec
outs
outs
inc
outs
jne
gs
je
jb
push
popa
bound
popa
jns
jne
inc
gs
ins
push
popa
imul
je
popa
outs
fs
gs
push
popa
bound
popa
jns
jne
inc
gs
ins
push
popa
imul
je
jb
jae
dec
outs
jbe
imul
jb
jo
jb
jns
gs
jb
jo
outs
jb
outs
ins
ins
arpl
outs
add
je
jb
jo
jb
imul
gs
jo
outs
inc
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
gs
add
arpl
gs
popa
ins
ins
bound
imul
data16
inc
gs
gs
inc
push
jns
add
outs
inc
outs
outs
jbe
jb
push
outs
add
outs
ins
gs
outs
add
je
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
inc
xor
inc
sub
sub
sub
sub
inc
xor
inc
xor
xor
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
add
ins
gs
outs
xor
xor
xor
aaa
xor
xor
push
jne
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
dec
inc
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
je
arpl
ins
imul
arpl
je
outs
outs
add
je
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
xor
inc
outs
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
je
je
arpl
jb
jns
outs
imul
jp
cmp
add
ins
gs
outs
xor
xor
xor
aaa
xor
xor
inc
imul
outs
add
je
jo
imul
jae
outs
ins
dec
outs
imul
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
xor
inc
je
jb
bound
add
je
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
xor
popa
ins
imul
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
ins
gs
outs
xor
xor
xor
aaa
xor
add
je
xor
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
aaa
add
jb
popa
ins
imul
gs
add
jb
popa
ins
imul
dec
outs
outs
add
je
bound
arpl
je
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
aaa
xor
cmp
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
aaa
xor
cmp
and
ins
gs
outs
xor
xor
xor
aaa
xor
xor
add
ins
jo
outs
outs
je
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
inc
outs
fs
outs
jbe
imul
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
xor
add
arpl
imul
add
arpl
imul
inc
outs
arpl
imul
gs
outs
xor
xor
xor
aaa
xor
xor
add
push
popa
ins
imul
push
xor
xor
aaa
xor
xor
add
inc
ins
ja
jns
dec
outs
jb
popa
ins
imul
je
inc
jb
fs
imul
add
jns
jbe
outs
je
jb
jae
dec
gs
outs
je
jb
inc
imul
gs
je
outs
fs
jb
push
popa
ins
jne
jae
js
ins
jne
imul
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
aaa
xor
xor
dec
gs
bound
dec
outs
outs
add
je
jne
je
ins
inc
je
jb
bound
gs
inc
gs
outs
jbe
arpl
imul
add
popa
outs
fs
jb
push
popa
ins
jne
jae
outs
ins
ins
arpl
outs
add
je
je
outs
fs
jb
push
popa
ins
jne
jae
inc
jae
gs
bound
inc
jae
gs
bound
popa
ins
add
je
popa
ins
add
je
jns
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
addr16
gs
popa
imul
push
jae
outs
outs
jae
add
outs
je
gs
bound
arpl
je
add
outs
jo
jb
jns
gs
jb
jo
outs
jb
dec
outs
fs
data16
je
je
outs
fs
jb
push
popa
ins
jne
jae
jne
jo
jb
gs
fs
js
jb
jae
imul
arpl
outs
add
fs
js
jb
jae
imul
je
imul
outs
jne
inc
jbe
outs
je
popa
outs
fs
gs
inc
popa
je
push
popa
outs
addr16
jbe
outs
je
popa
outs
fs
gs
inc
popa
je
push
popa
outs
addr16
jbe
outs
je
jb
jae
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
inc
jb
ins
push
je
imul
jo
jb
jns
outs
outs
add
je
outs
outs
jae
popa
outs
je
popa
ins
jne
add
gs
gs
jb
jo
imul
imul
inc
jne
ins
inc
outs
ins
jo
outs
outs
je
popa
ins
add
ins
ins
inc
ins
gs
outs
je
inc
jbe
outs
je
popa
outs
fs
gs
inc
gs
arpl
jbe
outs
je
popa
outs
fs
gs
inc
outs
outs
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
inc
popa
jae
inc
js
gs
imul
je
outs
fs
inc
outs
jns
inc
outs
fs
jns
gs
gs
outs
arpl
outs
ins
ins
arpl
outs
add
add
jae
je
dec
gs
outs
fs
outs
jbe
imul
inc
arpl
gs
popa
ins
ins
bound
imul
arpl
gs
popa
ins
ins
bound
imul
data16
inc
jb
popa
je
inc
popa
ins
ins
bound
imul
data16
push
arpl
ins
imul
je
outs
jb
push
je
gs
ins
add
je
je
gs
ins
add
outs
fs
inc
gs
arpl
gs
dec
je
jo
imul
push
jb
imul
ins
arpl
outs
add
jo
push
outs
add
outs
popa
jb
push
gs
fs
inc
ins
outs
jae
add
inc
gs
jne
je
je
jb
bound
add
outs
imul
je
ins
cs
jb
ja
outs
addr16
gs
outs
add
outs
jo
jb
jns
popa
ins
jne
push
dec
dec
je
ins
dec
outs
jbe
imul
outs
fs
gs
push
arpl
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
push
imul
jns
gs
push
imul
jns
gs
outs
fs
jb
dec
inc
gs
arpl
outs
outs
je
js
add
je
outs
jb
popa
je
ins
popa
addr16
inc
jb
ja
gs
add
jae
gs
cs
jb
ja
outs
addr16
gs
add
outs
je
outs
ins
ins
arpl
outs
add
jo
jae
add
jne
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
outs
imul
je
outs
outs
inc
ins
gs
outs
je
dec
jae
gs
fs
outs
ins
jns
dec
outs
popa
add
jns
arpl
ins
jo
gs
fs
jbe
outs
je
popa
outs
fs
gs
inc
jae
outs
arpl
ins
jo
gs
fs
jbe
outs
je
jb
jae
push
dec
inc
jne
jae
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
fs
jae
dec
outs
outs
jb
popa
je
outs
outs
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
je
jb
xor
dec
push
inc
fs
jae
dec
outs
outs
jb
popa
je
outs
outs
add
je
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
ins
ins
arpl
outs
inc
popa
jae
add
gs
jb
inc
gs
jb
popa
je
dec
outs
jae
popa
outs
arpl
jne
jo
jb
gs
arpl
gs
inc
gs
outs
arpl
gs
dec
outs
fs
add
je
jns
gs
inc
popa
je
inc
jb
fs
imul
outs
jae
push
popa
imul
je
jb
jae
inc
popa
je
inc
jb
fs
imul
je
popa
jb
jae
push
popa
imul
gs
dec
gs
outs
fs
outs
outs
add
je
gs
outs
add
jae
gs
cs
jb
ja
outs
addr16
ins
popa
imul
addr16
je
jb
bound
gs
inc
ins
gs
jb
outs
dec
jo
inc
outs
outs
jbe
jb
push
outs
push
je
imul
outs
je
outs
addr16
jne
jb
addr16
je
push
gs
arpl
add
je
outs
outs
je
bound
arpl
gs
outs
fs
popa
jae
add
arpl
gs
js
gs
imul
bound
imul
data16
inc
jne
je
jb
dec
outs
outs
inc
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
dec
cs
jae
ins
popa
je
fs
je
jb
add
outs
ins
popa
je
fs
je
jb
addr16
js
gs
imul
je
imul
outs
outs
jbe
jb
gs
dec
outs
jae
inc
js
arpl
imul
gs
add
je
outs
je
arpl
imul
ins
gs
gs
arpl
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
addr16
arpl
popa
je
outs
outs
add
ins
inc
je
jb
bound
add
jo
outs
ins
popa
imul
popa
ins
imul
jb
jb
jbe
outs
je
popa
outs
fs
gs
dec
outs
jae
data16
je
gs
outs
jb
inc
js
gs
imul
imul
jp
outs
addr16
je
jb
bound
add
imul
inc
js
gs
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
jb
popa
ins
inc
js
gs
imul
inc
outs
jb
popa
je
js
gs
imul
je
ins
cs
outs
je
jb
jb
jae
push
gs
imul
ins
jo
outs
jae
je
outs
addr16
gs
jne
arpl
popa
outs
popa
addr16
dec
outs
addr16
arpl
add
popa
inc
jb
fs
imul
inc
fs
jbe
outs
je
jb
jae
push
jne
jb
inc
arpl
jae
imul
dec
gs
jo
jbe
outs
je
popa
outs
fs
gs
push
je
je
jae
popa
jb
jb
ja
je
ins
inc
jbe
outs
je
jb
jae
inc
outs
outs
ins
gs
outs
inc
outs
outs
jbe
jb
gs
inc
popa
je
push
imul
gs
outs
outs
jbe
jb
gs
inc
ins
popa
jae
dec
outs
je
jb
popa
arpl
je
jb
bound
add
popa
inc
jb
fs
imul
gs
fs
gs
ins
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
gs
jne
arpl
js
outs
jae
jb
inc
je
jb
bound
add
jae
gs
cs
jb
ja
outs
addr16
jb
outs
je
outs
add
imul
jae
ins
jne
imul
imul
gs
gs
dec
jo
arpl
jns
outs
outs
jbe
jb
gs
inc
jo
ins
imul
inc
jb
inc
outs
popa
bound
inc
je
jb
bound
add
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
push
outs
ja
je
ins
add
ins
outs
popa
fs
je
imul
ins
gs
fs
jbe
outs
je
jb
jae
push
gs
jne
arpl
outs
outs
jae
ins
jo
imul
imul
popa
je
inc
outs
ins
fs
jbe
outs
je
jb
jae
dec
bound
arpl
outs
ins
imul
imul
outs
outs
jae
jb
arpl
outs
push
gs
outs
outs
jae
add
fs
outs
ins
ins
outs
je
je
je
ins
outs
je
outs
ins
ins
arpl
outs
add
arpl
je
outs
outs
inc
ins
popa
jae
inc
je
jb
bound
add
popa
inc
jb
fs
imul
push
popa
ins
jne
inc
jbe
outs
je
jb
jae
push
gs
jae
inc
jbe
outs
je
jb
jae
push
dec
outs
je
ss
outs
outs
jbe
jb
gs
dec
gs
outs
jb
inc
fs
jae
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
push
outs
outs
ins
bound
inc
outs
ins
jo
outs
outs
je
inc
jb
popa
je
outs
addr16
jbe
outs
je
popa
outs
fs
gs
dec
gs
inc
outs
outs
jbe
jb
gs
dec
outs
inc
gs
jb
popa
ins
imul
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
cs
gs
popa
ins
imul
add
jae
popa
outs
arpl
gs
jb
jo
outs
jb
push
outs
popa
jo
dec
popa
ins
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
addr16
gs
fs
je
add
popa
jo
je
jb
bound
add
je
ss
outs
outs
jbe
jb
gs
inc
js
popa
outs
fs
bound
bound
arpl
outs
jbe
jb
gs
inc
gs
jne
je
jb
jo
jb
jns
je
jb
bound
add
popa
jb
fs
jb
jo
jb
jns
jb
jne
dec
popa
outs
popa
addr16
inc
ins
popa
je
jne
je
outs
inc
jo
gs
jb
outs
arpl
push
jns
je
ins
cs
gs
arpl
outs
cs
ins
imul
jb
jns
jne
ins
fs
inc
gs
outs
gs
jb
outs
jae
arpl
outs
add
jae
push
gs
jne
arpl
gs
inc
js
arpl
imul
gs
add
popa
outs
fs
jb
inc
outs
ins
ins
popa
outs
fs
inc
outs
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
inc
push
jne
inc
js
gs
imul
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
je
push
jne
je
jb
inc
popa
je
inc
outs
ins
fs
jbe
outs
je
popa
outs
fs
gs
dec
jne
je
arpl
je
gs
gs
je
add
arpl
gs
gs
popa
arpl
outs
je
popa
ins
ins
bound
imul
data16
push
imul
outs
jb
jae
jns
arpl
outs
outs
imul
inc
outs
outs
je
js
add
outs
je
ins
popa
jae
inc
je
jb
bound
add
jae
gs
cs
gs
gs
push
outs
jne
add
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
inc
popa
je
inc
jb
fs
imul
jbe
outs
je
popa
outs
fs
gs
push
gs
popa
ins
imul
dec
bound
arpl
outs
popa
addr16
inc
arpl
gs
gs
popa
arpl
outs
je
popa
ins
ins
bound
imul
outs
fs
popa
bound
inc
imul
popa
outs
fs
gs
inc
ins
gs
add
jae
ins
jbe
dec
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
push
push
inc
xor
inc
outs
arpl
imul
ins
imul
inc
arpl
popa
je
outs
outs
inc
je
jb
bound
add
ins
ins
arpl
outs
inc
push
inc
jbe
outs
je
popa
outs
fs
gs
push
outs
popa
jo
outs
je
je
gs
inc
outs
fs
outs
outs
jae
jb
arpl
add
je
outs
jb
inc
gs
jb
jo
imul
arpl
outs
add
popa
jo
imul
jb
bound
add
imul
inc
fs
jae
dec
outs
outs
jb
popa
je
outs
outs
add
jb
imul
data16
fs
jb
jo
imul
addr16
inc
outs
fs
jb
ins
imul
jb
jae
imul
je
ins
cs
gs
inc
outs
outs
imul
je
outs
outs
add
jno
gs
inc
popa
arpl
outs
addr16
arpl
outs
add
jne
gs
jbe
outs
je
popa
outs
fs
gs
inc
outs
fs
imul
gs
outs
arpl
js
jb
jae
imul
imul
jbe
jb
gs
push
gs
outs
ins
jo
ins
popa
je
outs
outs
dec
outs
outs
add
ins
outs
popa
fs
jb
addr16
jae
inc
push
fs
jbe
outs
je
jb
jae
push
imul
gs
gs
inc
outs
outs
jbe
jb
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
gs
dec
popa
imul
js
gs
imul
js
gs
imul
addr16
jo
imul
ins
jo
outs
outs
je
outs
popa
ins
gs
jbe
outs
je
jb
jae
dec
imul
je
push
imul
ins
gs
ins
popa
jo
gs
jbe
outs
je
jb
jae
dec
popa
jns
jne
inc
jbe
outs
je
jb
jae
inc
gs
outs
gs
outs
popa
fs
inc
outs
fs
imul
ins
popa
add
outs
je
xor
outs
jbe
jb
gs
inc
outs
outs
outs
arpl
outs
dec
popa
outs
popa
gs
outs
je
ins
gs
outs
je
outs
ins
ins
arpl
outs
add
jae
ins
bound
ins
outs
jb
je
ins
dec
fs
je
jb
bound
add
ins
jo
outs
outs
je
push
outs
addr16
jbe
outs
je
popa
outs
fs
gs
dec
push
inc
push
push
inc
je
jb
bound
add
ins
arpl
outs
push
popa
outs
addr16
outs
outs
jbe
jb
gs
inc
outs
fs
popa
ins
gs
popa
arpl
outs
ins
ins
arpl
outs
add
ins
je
ins
imul
outs
addr16
outs
outs
jbe
jb
gs
inc
outs
outs
je
outs
outs
jbe
jb
gs
push
jo
imul
arpl
inc
jbe
outs
je
jb
jae
push
imul
jbe
jb
gs
inc
popa
je
inc
jb
fs
imul
inc
outs
outs
je
js
dec
outs
jne
je
imul
fs
jbe
outs
je
jb
jae
inc
imul
bound
imul
outs
je
popa
outs
fs
gs
push
imul
outs
outs
inc
js
gs
imul
pop
push
gs
jne
arpl
jb
je
jb
dec
outs
je
xor
outs
jbe
jb
gs
inc
popa
je
inc
jb
fs
imul
push
popa
ins
imul
jbe
outs
je
popa
outs
fs
gs
push
jb
gs
outs
fs
outs
outs
jbe
jb
gs
dec
push
inc
fs
jae
add
je
imul
gs
jb
push
popa
jb
gs
inc
outs
outs
outs
arpl
outs
dec
popa
outs
popa
gs
outs
je
arpl
outs
add
popa
jo
outs
jns
jb
add
jae
gs
cs
outs
je
jb
jb
jae
push
gs
imul
je
jb
popa
ins
add
outs
gs
je
dec
gs
fs
je
add
ins
ins
popa
bound
outs
outs
jbe
jb
gs
inc
outs
ins
ins
arpl
outs
inc
outs
outs
jbe
jb
gs
inc
popa
outs
arpl
add
outs
ins
outs
popa
fs
jb
addr16
jae
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
inc
outs
ja
ins
outs
popa
fs
jb
addr16
jae
inc
push
fs
jbe
outs
je
jb
jae
inc
popa
je
inc
jb
fs
imul
outs
ins
ins
arpl
outs
add
popa
inc
jb
fs
imul
push
push
push
outs
ja
inc
outs
outs
jbe
jb
push
outs
add
ins
gs
jae
inc
ins
ins
push
gs
jne
arpl
add
outs
jne
fs
gs
popa
ins
imul
add
je
imul
fs
dec
jae
ins
push
ins
popa
arpl
bound
inc
popa
je
inc
jb
fs
imul
inc
jbe
outs
je
jb
jae
push
outs
popa
jo
popa
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
ins
jo
ins
gs
popa
jb
ins
gs
jb
add
ins
push
je
imul
push
outs
fs
jbe
outs
je
jb
jae
dec
outs
je
jb
popa
arpl
jne
jne
outs
addr16
je
jb
bound
add
jns
gs
outs
outs
jbe
jb
gs
push
outs
outs
ins
inc
popa
jb
jne
je
outs
inc
ins
imul
je
popa
outs
fs
gs
push
jb
je
arpl
push
imul
outs
inc
js
gs
imul
je
arpl
je
push
inc
fs
jae
dec
outs
outs
jb
popa
je
outs
outs
inc
outs
ins
ins
arpl
outs
add
jo
imul
dec
popa
ins
gs
je
jb
bound
add
je
push
fs
jbe
outs
je
popa
outs
fs
gs
inc
outs
ins
jne
outs
push
imul
addr16
jbe
outs
je
popa
outs
fs
gs
dec
popa
jb
push
jb
arpl
gs
js
gs
imul
je
ins
inc
outs
outs
je
add
ins
dec
popa
outs
popa
addr16
ins
jo
jb
push
je
ins
add
imul
outs
fs
add
outs
jae
dec
popa
outs
popa
addr16
push
jb
gs
outs
fs
outs
jne
gs
outs
jbe
jb
jbe
outs
je
popa
outs
fs
gs
push
outs
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
gs
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
push
outs
popa
jo
je
ins
imul
je
outs
outs
jbe
jb
gs
push
outs
outs
ins
bound
dec
je
ins
inc
je
jb
bound
add
jae
gs
cs
dec
cs
outs
jb
jae
push
gs
popa
ins
push
imul
gs
jbe
outs
je
jb
jae
dec
inc
outs
ins
ins
arpl
outs
add
imul
dec
imul
outs
outs
je
js
push
gs
popa
ins
imul
jbe
ins
imul
ins
inc
js
gs
imul
outs
je
jb
gs
imul
popa
jo
imul
gs
gs
imul
gs
je
dec
gs
jae
jb
ins
outs
je
jb
jo
imul
ins
popa
jae
inc
je
jb
bound
add
imul
inc
popa
outs
outs
outs
je
gs
jo
outs
gs
js
gs
imul
jb
dec
outs
outs
imul
arpl
inc
jbe
outs
je
jb
jae
push
gs
jne
arpl
jb
je
jb
inc
fs
gs
jne
arpl
popa
je
add
ins
outs
jb
outs
outs
jbe
jb
gs
push
gs
outs
arpl
outs
outs
jbe
jb
gs
inc
fs
popa
ins
jne
add
popa
jo
add
arpl
jae
data16
push
imul
gs
popa
outs
fs
gs
inc
jb
je
arpl
dec
popa
outs
fs
gs
gs
dec
jb
imul
dec
jae
outs
jbe
ins
imul
imul
ins
ins
arpl
outs
add
je
push
push
outs
popa
jo
outs
outs
je
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
arpl
je
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
jae
gs
bound
jne
ins
fs
inc
popa
je
inc
jb
fs
imul
je
je
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
push
jb
gs
imul
gs
gs
outs
outs
jbe
jb
gs
push
popa
jb
popa
outs
je
jb
jo
gs
push
jns
gs
outs
outs
jbe
jb
gs
je
jb
bound
add
jb
outs
jb
outs
outs
jbe
jb
gs
inc
outs
fs
gs
gs
je
inc
jb
popa
je
inc
js
jb
jae
imul
ja
outs
outs
ins
push
imul
inc
jb
jae
push
outs
outs
ins
bound
inc
outs
ins
jo
outs
outs
je
inc
jb
popa
je
fs
jbe
outs
je
jb
jae
dec
outs
jo
je
popa
outs
addr16
addr16
push
fs
jbe
outs
je
jb
jae
inc
outs
fs
jns
gs
gs
bound
inc
outs
ins
ins
arpl
outs
add
fs
jns
gs
gs
bound
add
gs
outs
jb
popa
jb
gs
outs
inc
je
jb
bound
add
outs
jb
inc
jbe
outs
je
jb
jae
push
jb
push
jns
gs
outs
outs
jbe
jb
gs
dec
outs
je
xor
outs
outs
jbe
jb
gs
push
popa
gs
popa
outs
fs
add
je
popa
outs
fs
gs
jae
outs
jbe
ins
imul
popa
outs
fs
gs
gs
dec
jb
imul
dec
jae
outs
jbe
ins
imul
imul
gs
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
je
je
xor
xor
addr16
cs
jae
jne
arpl
add
add
dec
add
imul
inc
add
outs
add
add
add
add
add
add
push
add
add
or
popa
add
add
add
pop
inc
add
je
je
add
jae
add
add
add
add
add
add
rcl
dec
mov
fidivr
add
pop
push
sbb
mov
push
pop
add
or
add
or
add
or
pop
add
add
push
or
add
add
or
or
or
add
add
or
or
add
or
add
add
add
add
or
add
or
add
add
pop
pop
add
push
add
add
or
add
or
push
or
add
or
pop
add
pop
or
add
or
push
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
pop
or
or
add
add
pop
add
add
or
or
add
add
or
add
or
add
or
add
pop
add
or
add
or
add
or
pop
push
or
push
or
add
add
or
or
add
add
or
add
push
add
add
or
push
add
add
add
add
add
or
or
or
or
add
add
add
or
or
add
add
or
or
add
push
or
add
or
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
or
or
add
add
add
or
pop
or
add
add
add
push
or
add
add
or
add
add
or
pop
add
add
add
add
add
add
or
add
or
or
add
push
add
add
or
add
or
add
push
add
pop
add
add
add
or
add
or
add
add
or
push
or
add
add
or
or
add
add
or
add
add
pop
add
add
or
add
or
add
add
add
or
or
add
sbb
add
pop
or
add
or
add
or
add
or
add
add
add
or
pop
add
or
or
add
add
add
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
or
add
or
push
push
pop
add
or
or
pop
add
push
push
or
add
add
push
adc
add
adc
add
add
or
add
or
adc
jg
aad
cmp
add
adc
add
or
add
or
adc
add
push
add
xor
or
and
sbb
pop
add
adc
and
add
pop
add
dec
sbb
pop
add
adc
pop
add
push
sbb
pop
add
or
pop
or
and
push
or
push
push
add
add
push
push
pop
add
add
popa
add
imul
or
ins
adc
or
add
adc
pop
add
or
adc
pop
add
jns
add
add
or
add
adc
pop
push
push
or
or
pop
and
add
or
or
adc
mov
and
adc
sysret
or
or
or
adc
lea
pop
add
push
add
or
pop
add
pop
pop
pop
add
push
push
pop
add
or
or
pop
add
or
pop
pop
pop
add
or
or
or
push
pop
add
or
add
or
add
or
pop
add
or
add
or
or
or
add
or
push
add
push
pop
add
or
or
pop
add
add
pop
add
pop
add
pop
pop
add
or
or
add
push
add
add
or
or
add
add
add
pop
add
or
pop
add
or
push
or
add
or
pop
add
or
or
pop
add
or
add
or
or
pop
add
or
pop
add
or
add
push
add
add
pop
add
add
or
pop
add
add
add
or
pop
add
or
pop
add
or
add
pop
add
add
push
pop
add
add
or
pop
add
add
add
add
pop
pop
add
or
pop
add
push
add
push
pop
add
or
push
pop
add
or
add
or
or
pop
add
add
or
pop
add
or
pop
add
add
or
or
or
pop
add
or
add
or
pop
add
add
pop
add
or
pop
add
pop
or
add
or
pop
add
or
pop
add
add
or
pop
add
or
or
pop
add
or
pop
add
add
or
add
add
add
push
push
pop
pop
add
pop
pop
pop
add
push
push
pop
add
or
pop
pop
add
pop
pop
pop
add
add
add
or
or
or
pop
add
pop
add
or
pop
add
pop
push
pop
add
add
add
add
or
push
pop
add
add
add
or
add
or
or
pop
add
or
pop
add
or
or
pop
pop
add
push
add
add
or
add
adc
sbb
add
adc
add
xor
add
cmp
and
adc
sbb
imul
push
and
sbb
push
adc
add
adc
sbb
sbb
push
adc
xor
adc
add
adc
cmp
adc
cmp
adc
or
and
add
imul
sub
push
adc
sbb
add
inc
pop
and
adc
and
adc
add
or
add
adc
add
adc
sbb
and
add
sbb
imul
add
or
or
and
push
sbb
and
add
adc
sbb
add
rol
add
sbb
and
sbb
push
and
add
sbb
xor
cmp
add
sbb
add
adc
sbb
pop
add
adc
and
add
xor
cmp
and
adc
adc
and
sbb
imul
adc
adc
add
sbb
and
sbb
sbb
or
or
sub
add
jns
cmp
mov
or
xor
cmp
add
adc
sbb
add
add
ins
or
add
sbb
add
int
adc
add
aad
or
sbb
adc
or
sbb
sbb
loope
add
adc
jmp
add
in
sbb
or
cmp
or
sbb
or
xor
or
sbb
xor
adc
sbb
and
push
adc
sbb
add
add
or
add
adc
or
imul
or
adc
adc
adc
add
add
sbb
pop
or
sbb
and
or
and
add
add
adc
imul
adc
cmc
adc
push
or
adc
push
pop
push
adc
push
push
or
sub
ror
or
xor
or
push
or
or
or
xor
cmp
or
cmp
add
add
sbb
add
add
pop
or
adc
or
or
or
sbb
or
push
or
pop
adc
adc
add
or
or
sbb
add
adc
pop
or
or
and
adc
and
cdq
add
or
adc
or
adc
adc
adc
imul
or
adc
pop
adc
or
adc
sbb
adc
or
and
push
adc
or
add
add
adc
adc
add
or
sbb
add
adc
or
or
sbb
or
adc
adc
or
sbb
or
or
or
imul
adc
and
or
sub
add
or
adc
adc
mov
add
or
or
and
mov
adc
push
pop
pop
or
adc
mov
or
or
add
add
pop
add
adc
adc
leave
or
or
add
or
adc
adc
adc
adc
adc
or
xor
adc
or
or
sbb
or
adc
push
push
add
sbb
or
or
sbb
adc
or
adc
in
add
or
adc
xor
or
adc
adc
adc
or
add
add
adc
or
and
or
or
or
or
or
adc
add
adc
adc
adc
int
add
or
push
adc
adc
and
or
adc
sub
xor
add
xor
add
add
adc
sbb
adc
adc
add
adc
jno
or
adc
inc
sbb
or
adc
add
adc
inc
sbb
adc
add
adc
adc
or
and
add
and
adc
adc
adc
or
imul
adc
add
gs
lea
add
sbb
imul
adc
sbb
pop
add
push
or
sbb
adc
or
or
or
xor
cdq
add
sbb
imul
or
adc
adc
sbb
and
imul
or
or
cmp
or
add
test
or
or
or
or
or
adc
sbb
or
adc
sbb
pop
pop
add
add
sbb
sbb
movs
or
and
sbb
adc
je
or
cmp
sbb
add
sub
or
adc
add
cmp
adc
pop
or
and
or
adc
add
adc
or
add
adc
adc
or
adc
add
adc
xchg
or
add
adc
or
or
adc
adc
or
adc
push
adc
pop
or
and
adc
or
xor
sub
add
add
pop
add
or
add
or
pop
add
or
add
pop
add
push
pop
pop
add
add
pop
add
add
inc
add
adc
add
in
add
adc
or
add
or
or
or
pop
push
add
pop
or
or
push
or
add
pop
push
add
or
add
push
pop
add
add
add
add
or
pop
add
pop
push
pop
add
add
pop
push
pop
add
add
add
or
pop
add
add
pop
add
or
pop
add
or
push
push
adc
add
xor
sbb
pop
push
push
or
add
pop
add
add
pop
add
adc
push
add
imul
add
test
push
add
pop
adc
adc
add
pop
add
or
adc
or
adc
adc
pop
push
push
add
adc
pop
add
or
or
add
or
adc
push
or
adc
push
add
add
or
add
add
and
add
push
sbb
push
or
adc
or
push
add
test
sbb
or
adc
push
or
test
add
or
pop
add
aad
or
pop
add
adc
add
pop
add
adc
add
push
add
sbb
pop
add
test
pop
and
adc
pop
push
add
adc
push
or
add
adc
add
adc
push
sbb
and
sbb
add
pop
push
push
or
test
add
pop
add
or
test
pop
add
adc
pop
adc
add
sbb
pop
push
push
or
adc
push
push
add
adc
push
pop
or
test
or
push
push
add
or
test
pop
pop
add
push
adc
or
test
and
or
test
or
test
pop
add
mov
or
add
or
test
pop
adc
or
pop
push
add
adc
push
or
add
adc
or
push
add
xchg
adc
or
add
add
test
add
add
pop
or
add
adc
or
add
push
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
add
adc
add
cmc
pop
and
add
adc
adc
adc
add
add
or
push
adc
adc
push
and
add
test
add
add
add
add
inc
outs
jo
jb
addr16
jae
outs
fs
jo
gs
ins
outs
outs
outs
gs
add
aas
add
cmp
imul
jne
je
jb
fs
jb
popa
outs
gs
imul
gs
and
outs
imul
ins
arpl
imul
outs
outs
add
adc
add
inc
gs
je
inc
popa
je
gs
gs
add
add
push
jb
jo
push
jns
gs
gs
and
gs
outs
jo
outs
addr16
outs
outs
and
jb
outs
jo
popa
jae
imul
push
imul
add
xor
xor
xor
add
sub
popa
ins
arpl
jb
push
jne
jb
imul
jb
outs
imul
ins
gs
jb
jo
add
or
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
and
add
add
add
add
add
mov
push
add
push
inc
push
jl
jno
mul
imul
inc
leave
mov
add
add
pop
outs
push
popa
inc
jo
dec
dec
pop
push
jo
jno
pop
bound
push
fs
data16
dec
pop
jo
jb
fs
ins
dec
inc
addr16
bound
add
add
and
add
and
add
and
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
