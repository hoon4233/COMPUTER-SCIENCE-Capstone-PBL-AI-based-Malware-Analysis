and
adc
bound
add
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
(bad)
push
bound
xchg
neg
push
dec
bound
or
mov
imul
sub
push
outs
(bad)
cs
bound
les
jecxz
ret
stc
test
sar
js
or
imul
jbe
popa
mov
pop
xor
in
cli
xchg
sti
lds
pushf
test
inc
push
dec
sub
cmp
cmp
daa
aaa
stos
jne
xor
mov
sub
pop
dec
dec
aas
adc
ror
paddusw
test
sub
dec
popa
nop
jne
dec
fisub
inc
inc
add
inc
addr16
out
jno
es
sar
test
(bad)
(bad)
outs
in
or
int3
test
mov
popa
dec
cmps
cwde
pop
test
adc
icebp
pop
sbb
icebp
mov
push
xor
mov
dec
ss
sbb
movs
je
aad
cmps
sahf
fdiv
lds
adc
and
dec
mov
cli
fisttp
jmp
nop
sbb
xor
jo
pop
scas
pop
dec
fisub
inc
loope
adc
mov
pop
sub
lods
or
mov
and
cmp
push
mov
push
jo
repz
add
fstp
push
and
dec
js
stc
sub
sbb
push
fdiv
ret
xchg
adc
ds
and
loope
and
dec
scas
js
adc
cmp
xchg
daa
jmp
ds
cmps
cwde
int3
(bad)
(bad)
int3
pop
add
mov
and
cmp
aaa
gs
aam
shr
(bad)
outs
xor
xlat
push
cmp
jo
nop
cwde
inc
xor
or
jns
dec
mov
xchg
(bad)
je
aam
test
int3
pop
(bad)
push
mov
popa
loopne
fdivr
push
test
mov
adc
stos
stos
or
xchg
es
mov
aad
or
leave
out
in
sti
jnp
add
cmc
ja
mov
ins
aam
div
out
into
or
cdq
nop
sub
xchg
js
(bad)
mov
jno
xor
outs
dec
mov
(bad)
mov
scas
push
and
in
xor
jg
push
stos
iret
lods
xchg
sbb
cmp
je
adc
inc
dec
xor
pop
push
cmc
lahf
retf
xchg
(bad)
cmp
mov
in
adc
xchg
xor
pop
pop
add
dec
sbb
sub
mov
in
aas
jmp
inc
and
into
les
retf
sbb
(bad)
fcom
dec
dec
mov
pop
xchg
test
shl
out
je
in
pop
inc
cld
cmp
int
fidiv
dec
test
sub
movs
nop
imul
int3
in
stc
fild
aas
sub
and
mov
hlt
pop
push
fisub
in
sub
jp
inc
pop
push
movs
dec
js
aam
xchg
(bad)
test
xor
add
add
(bad)
push
xchg
popa
ds
add
call
mov
stc
jg
pop
and
push
add
or
es
sub
icebp
movs
out
xchg
arpl
add
stc
ds
inc
push
lds
addr16
into
pop
cmp
sbb
rol
mov
adc
sbb
fwait
movs
jae
data16
sbb
mov
xchg
mov
cmp
leave
rol
sub
pop
retf
sub
mov
in
xor
and
mov
sbb
add
or
mov
inc
jb
cdq
in
adc
(bad)
dec
adc
frstor
ret
adc
les
or
cvtps2pd
pop
adc
cmps
mov
scas
push
jge
ds
or
(bad)
ins
dec
sbb
icebp
xor
jb
mov
push
inc
gs
sub
in
pop
jp
dec
shl
add
sbb
ror
hlt
or
adc
cs
or
mov
mov
add
sti
mov
push
xchg
mov
scas
inc
jl
repz
mov
jecxz
and
sub
pop
cmp
mov
das
int
(bad)
push
movs
pop
popf
sahf
jl
xchg
mov
aad
int
ins
leave
in
rcr
jle
scas
mov
movs
(bad)
pop
nop
mov
dec
adc
jmp
push
std
hlt
mov
cli
pop
cmc
es
pop
in
scas
mov
and
mov
inc
bound
sbb
mov
sbb
in
neg
out
mov
lds
jmp
add
fsubr
gs
jno
xchg
in
cmp
push
xor
daa
inc
mov
jmp
sub
inc
mov
mov
loopne
mov
xor
jne
dec
push
mov
out
adc
dec
adc
xor
aam
lock
pushf
repz
out
push
dec
(bad)
xor
or
cmps
sbb
out
iret
sahf
mov
mov
popf
mov
xchg
in
mov
jl
xor
(bad)
pop
(bad)
ds
sti
clc
xchg
clc
sub
(bad)
add
xchg
add
xchg
and
adc
test
add
mov
jae
enter
loopne
xchg
mov
mov
imul
pop
push
iret
sahf
out
clc
das
jecxz
push
mov
cmp
inc
mov
mov
jo
push
or
add
pusha
push
das
push
hlt
push
cmc
loop
arpl
popf
retf
in
xor
int
cs
mov
inc
std
call
adc
mov
and
cmp
mov
add
cwde
movs
fsubr
pop
or
rol
jnp
sbb
jp
and
mov
or
jns
(bad)
std
add
mul
or
pusha
ss
clc
inc
mov
fbstp
mov
mov
cmp
mov
(bad)
mov
xor
addr16
ret
mov
and
cmp
pop
retf
adc
and
sti
push
or
cmp
adc
sub
in
push
iret
push
iret
outs
and
sti
pushf
inc
xor
mov
(bad)
in
push
mov
in
shr
cmc
lea
repz
jmp
ror
jg
lar
std
xchg
jg
inc
test
jo
sbb
jmp
daa
or
sahf
jno
dec
mov
mov
push
jne
fld
jp
mov
in
jle
cmps
adc
jo
sbb
sbb
jge
cmp
xchg
jnp
jge
jl
scas
call
xchg
fld
sbb
or
call
inc
lods
icebp
mov
inc
sub
jp
xor
(bad)
push
mov
stos
stos
leave
ror
jge
gs
outs
in
and
cmps
aas
pop
aam
sbb
int
and
sbb
shr
into
ret
lods
mov
repz
in
and
mov
adc
ficomp
xor
scas
into
mov
push
push
outs
je
pop
cmp
addr16
xchg
stos
je
lods
(bad)
jnp
sub
jbe
repz
lea
pushf
adc
stc
mov
int
pop
sub
add
cmp
retf
repnz
jo
stos
shr
sqrtps
ja
inc
(bad)
mov
pop
pop
mov
rcl
sub
push
les
stos
adc
jmp
inc
or
dec
scas
and
dec
retf
scas
loop
lea
or
ins
xchg
mov
sub
pop
(bad)
out
in
push
mov
add
in
lea
(bad)
pop
xchg
rol
int
cmps
pushf
stos
xor
ret
lods
sbb
pop
movlps
cmp
or
add
push
jo
inc
jmp
pop
cmps
xchg
mov
and
mov
jge
rcl
ret
push
aaa
sar
fist
jmp
push
push
call
mov
movs
cmp
ins
mov
hlt
cmp
jecxz
test
jmp
dec
mov
in
push
xchg
dec
cdq
or
push
movs
sbb
adc
cs
cs
sbb
jle
and
pop
enter
ret
and
xor
imul
in
mov
cs
mov
jno
sbb
or
sar
push
out
imul
mov
push
cdq
cmp
dec
fsub
ficom
sub
xchg
sub
inc
fild
nop
mov
cld
pop
arpl
cld
adc
mov
in
call
es
scas
ret
stos
fs
cmp
ja
es
push
pop
inc
cmp
pop
not
sub
sub
retf
shr
sahf
cmp
push
and
(bad)
ja
sbb
dec
and
inc
cmps
in
out
popf
cwde
mov
stc
add
cmp
int
sub
cmp
cwde
xchg
pusha
mov
lods
outs
jp
jp
cmp
repnz
pop
cmps
call
icebp
xor
popf
xchg
inc
add
cmp
inc
out
(bad)
imul
pop
shl
mov
rol
dec
ins
je
retf
and
pushf
inc
mov
sbb
jl
or
xchg
cmp
push
lahf
jns
pop
shl
push
in
rcr
retf
out
test
cld
xchg
sub
cs
xor
push
xor
outs
push
pop
jae
adc
icebp
scas
xchg
retf
call
es
in
cmp
(bad)
retf
dec
lds
inc
shr
mov
call
in
cmps
inc
ds
das
or
int
jne
dec
pop
mov
inc
cld
dec
clc
or
shl
xchg
cwde
xor
fmul
mov
imul
js
jge
xor
test
or
jge
push
push
outs
xor
mov
je
hlt
add
ins
or
and
push
fidivr
cmp
(bad)
push
sub
or
add
loope
push
gs
pushf
mov
les
add
loop
cmp
and
inc
arpl
fisub
lahf
(bad)
outs
inc
pop
jle
fldcw
xor
and
jmp
icebp
je
movs
mov
mov
jg
or
test
lea
mov
shl
jmp
xor
(bad)
sub
imul
dec
adc
sahf
lods
push
or
cmp
cmp
(bad)
adc
lds
jg
mov
push
into
into
loope
fs
inc
sbb
adc
mov
adc
cmp
ret
mov
stc
sub
mov
mov
xor
rcl
nop
add
call
or
imul
add
mov
fs
repnz
icebp
jne
cmp
pop
(bad)
jle
pop
gs
fwait
outs
fwait
clc
mov
adc
mov
sti
sbb
push
xor
xor
mov
xlat
outs
cmp
and
pushf
dec
dec
iret
ds
push
and
scas
mov
out
mov
call
test
int3
mov
or
push
out
adc
mov
push
movs
cmp
adc
sbb
call
pop
inc
stc
ds
int
mov
sub
out
mov
stos
push
out
or
jmp
mov
and
out
push
ins
push
leave
test
add
fld
bound
and
retf
adc
imul
fnstenv
lahf
push
adc
test
sbb
and
dec
in
xchg
add
add
mov
push
push
cmp
ins
dec
jns
loopne
shr
cmc
lods
pusha
xchg
jl
aam
push
mov
and
pusha
sbb
and
out
dec
out
dec
jb
addr16
ficomp
dec
pop
xchg
jmp
mov
jnp
clc
shl
call
push
pop
xorps
and
jne
inc
sti
lea
sbb
pop
idiv
sbb
sub
and
outs
xchg
push
xchg
dec
sbb
or
jg
inc
lock
push
out
mov
jge
loopne
add
or
pop
or
dec
shl
es
sbb
cmc
xchg
aad
jmp
cmc
jmp
lods
shr
mov
aaa
sbb
jl
pop
ret
in
jge
dec
pop
(bad)
adc
loope
mov
test
enter
nop
add
add
ins
sub
and
(bad)
fsubr
mov
fisttp
sub
xchg
and
push
int3
mov
ja
int3
sub
jle
and
mov
and
aaa
xor
jmp
bsf
jmp
xor
mov
push
mov
ss
stc
and
cmp
push
xchg
xchg
jnp
outs
in
(bad)
loop
push
xchg
sbb
scas
push
or
jl
adc
jmp
inc
xchg
or
int
xchg
jo
push
xor
mov
mov
sub
adc
or
in
push
cmp
mov
add
fst
outs
test
je
sub
push
mov
inc
scas
outs
jno
(bad)
std
fwait
imul
xchg
mov
xor
rcl
xchg
mov
xor
(bad)
push
(bad)
or
and
fst
stos
inc
fnsave
add
dec
in
pop
lock
xchg
sub
jmp
ror
mov
in
loopne
adc
mov
ins
sub
out
clc
leave
mov
push
push
out
cs
out
jbe
xchg
ins
retf
fld
int3
outs
imul
addr16
xor
jle
popa
or
aam
leave
sbb
jmp
icebp
jae
dec
jle
push
sbb
mov
movs
pop
test
and
aas
out
mov
or
sahf
imul
sar
jmp
add
dec
sub
lds
mov
aas
cmp
push
sar
loope
fsub
pop
cli
or
push
fsubr
stos
imul
adc
xor
ds
push
(bad)
push
push
fidiv
sbb
or
mov
jle
sub
(bad)
aam
shl
aad
or
ins
jnp
add
loop
xlat
imul
movs
adc
cmp
push
sahf
out
pop
sahf
sahf
ja
retf
add
cmp
or
jge
mov
scas
(bad)
push
pop
mov
int3
out
in
mov
test
dec
stos
out
xor
stos
cli
dec
retf
sbb
pop
rol
mov
fdivr
lods
or
mov
xchg
sub
mov
xchg
aad
or
pop
retf
xor
mov
enter
movs
add
cmps
sbb
xor
add
pop
pop
pop
pop
jp
mov
sar
sub
pop
and
push
leave
inc
and
sbb
inc
pop
lods
mov
sub
dec
inc
imul
inc
loop
retw
sbb
mov
iret
mov
imul
mov
push
xor
movs
mov
mov
mov
xor
pop
mov
lods
rcr
push
out
add
adc
arpl
mov
dec
mov
push
lods
cs
or
xlat
sbb
xchg
cmp
xchg
cmp
cmps
mov
or
push
test
sub
test
movs
add
popa
aad
cmp
jp
test
adc
addr16
add
jl
cmp
lods
vunpcklps
sbb
lods
fdiv
icebp
jnp
inc
mov
into
jmp
int3
(bad)
sti
push
jae
jl
mov
sub
adc
add
pop
mov
mov
movs
jg
pushf
push
push
push
fsubr
mov
jp
nop
scas
push
inc
repz
mov
xchg
sbb
sub
or
aaa
sub
aas
jne
xor
bound
imul
mov
ja
popa
pop
data16
je
dec
std
adc
mov
mov
addr16
inc
out
das
loopne
cwde
data16
sbb
xchg
jg
int3
outs
and
rcr
mov
add
ja
cmc
inc
fcmovbe
xchg
bound
(bad)
arpl
push
aam
sub
mov
inc
cmp
mov
jge
dec
retf
xchg
mov
clc
push
adc
stos
pop
sub
cdq
popa
mov
mov
jbe
aas
outs
push
test
add
jno
mov
inc
fisub
cmc
idiv
into
hlt
ins
cli
mov
sub
pop
mov
inc
and
jmp
jg
mov
add
xor
test
xchg
push
lods
fst
outs
jb
stc
(bad)
je
pop
in
sbb
mov
xchg
cmps
push
fprem1
pop
sbb
or
sti
cli
cmp
cmp
push
push
in
sti
lahf
int3
pop
mov
call
rcr
add
dec
mov
test
outs
es
js
retf
jo
push
imul
sbb
jns
or
xchg
lahf
out
sbb
jl
adc
lods
lock
sbb
xchg
xor
stc
or
add
mov
jecxz
pop
jl
mov
add
in
icebp
test
or
loopne
lods
mov
scas
or
add
and
dec
mov
xchg
ret
lds
aaa
dec
sub
jl
adc
adc
nop
pop
lds
call
stc
mov
mov
ret
or
test
les
sub
jmp
retf
sbb
fbld
mov
cmc
test
jl
out
jb
xchg
or
(bad)
lock
in
mov
imul
stos
xchg
cli
or
push
and
mov
jg
mov
movs
cdq
push
pop
sbb
in
or
mov
cmc
xor
cmp
stc
pop
cld
not
sub
daa
icebp
sub
sub
adc
mov
xor
mov
xchg
cmp
jns
jp
movs
add
fisttp
cli
clc
jbe
bound
adc
sbb
pop
fwait
sbb
pop
sub
imul
fimul
or
dec
popa
cld
mov
xor
adc
loop
adc
xor
fmul
pop
jge
or
pop
call
or
cmps
out
inc
mov
add
imul
in
sbb
lods
shr
push
clc
xchg
loope
and
cmc
xor
add
adc
aas
mov
cmps
sbb
out
ret
loop
push
fwait
data16
mov
jmp
mov
rol
xor
jns
push
inc
clc
add
inc
dec
aas
inc
iret
xor
mov
adc
std
pop
rcr
fwait
xor
retf
cli
addr16
add
add
inc
lock
jbe
adc
sbb
ss
push
xor
imul
lock
in
xor
cmp
cmovnp
les
sti
(bad)
ret
or
iret
popf
push
jg
gs
mov
add
fistp
call
(bad)
jl
in
fcmovnu
jmp
stc
jo
xor
fisub
jmp
xor
iret
push
inc
movs
or
adc
xor
sbb
dec
push
fild
cmp
sbb
sub
dec
loop
pop
inc
xchg
cmp
sub
sub
inc
add
and
add
sbb
or
stos
xchg
push
pop
add
or
jmp
or
dec
push
ds
cli
pop
inc
or
xchg
popa
inc
(bad)
or
jmp
cmp
stc
call
xor
dec
in
bound
pop
jmp
and
shl
and
mov
dec
stc
mov
cmp
cli
push
pop
dec
addr16
xchg
cld
shl
pop
inc
or
into
jnp
or
add
mov
jmp
es
inc
mov
dec
dec
jmp
jno
js
jmp
test
xchg
push
in
add
cmp
mov
js
data16
clc
sub
cld
mov
and
call
mov
push
into
fistp
add
popa
in
and
mov
and
test
xchg
jge
ins
push
imul
xor
xor
ins
in
jne
sbb
xchg
sbb
or
xchg
sar
inc
gs
mov
pop
int3
stc
rol
mov
sub
xor
out
push
fsubr
mov
and
or
mov
fdiv
mov
lods
cmp
push
cmps
pop
mov
lods
scas
mov
retf
imul
lahf
mov
into
push
ds
dec
stos
pop
repz
loop
mov
popf
push
and
lea
mov
mov
fcom
mov
std
lods
jnp
jo
mov
cmps
clc
inc
mov
mov
movs
push
hlt
inc
adc
dec
neg
(bad)
(bad)
cvtps2pd
jl
stos
int
xchg
jp
xchg
push
fild
pusha
fcmovnbe
fcmovu
cmps
mov
inc
xor
dec
fwait
sbb
(bad)
test
fcmovnbe
sub
cmp
hlt
data16
fwait
rol
add
xchg
add
imul
or
sub
jg
sub
inc
jmp
(bad)
or
add
pushfw
cmp
xchg
mov
jnp
dec
retf
add
add
repz
dec
xchg
cmps
push
enter
test
(bad)
dec
pop
pop
dec
dec
push
in
push
sub
int
xor
popa
xor
sub
dec
cli
ret
pushf
pop
pop
jecxz
mov
or
test
sbb
xchg
mov
aaa
or
pop
ins
aad
cmp
fcomp
in
dec
mov
add
xchg
push
scas
sysenter
sub
adc
ret
pop
lods
sub
or
test
and
add
dec
xor
push
xchg
std
cmps
pop
dec
sbb
xor
fwait
or
addr16
sub
fwait
or
(bad)
aas
pop
xchg
push
iret
add
jmp
mov
cmp
das
not
fwait
ret
in
xchg
sbb
lds
push
pusha
mov
idiv
shl
fcmovnu
mov
(bad)
ret
sub
inc
inc
inc
popf
ins
pop
adc
(bad)
jo
out
mov
xchg
sti
ds
cmp
sahf
cs
(bad)
imul
mov
add
xrelease
ret
fsubp
and
xor
mov
mov
fstp
(bad)
aaa
sbb
xor
rcr
aad
out
adc
pop
enter
je
cwde
xor
sub
xor
mov
fcomp
add
ins
cmps
jl
push
push
mov
fincstp
add
inc
adc
pusha
aam
sub
push
mov
pop
mov
in
adc
inc
and
pop
rcr
push
mov
ds
popa
call
sub
mov
mov
inc
dec
mov
or
retf
jo
into
mov
movs
popf
xchg
jbe
fcomi
aas
or
sub
add
cwde
es
iret
pop
mov
or
nop
movs
pop
test
add
test
sbb
xchg
push
jne
push
cmp
jmp
scas
push
mov
pop
dec
add
mov
cs
push
mov
lea
sbb
mov
cli
sti
xchg
in
fild
lods
push
repnz
icebp
sbb
add
sub
ret
fwait
mov
js
inc
or
push
out
pop
and
es
push
and
lods
cmp
xchg
lahf
cmp
mov
adc
add
xor
pop
push
xor
inc
movs
xor
outs
push
mov
pop
mov
xchg
sbb
and
ror
test
cld
ror
sub
enter
daa
sti
inc
jle
mov
lds
mov
rcl
movs
push
dec
aaa
pop
shl
dec
rcr
inc
cmps
xchg
dec
jmp
adc
mov
jmp
push
ret
push
or
outs
mov
xchg
adc
(bad)
xchg
xor
inc
mov
stc
je
movs
inc
dec
xchg
lock
adc
data16
push
out
push
mov
clc
push
frstor
test
dec
push
mov
adc
xor
or
pop
push
movs
push
data16
mov
push
dec
mov
pop
in
add
sub
in
push
pusha
sbb
sahf
cmc
dec
add
jbe
add
and
inc
ror
push
and
jb
adc
fistp
xchg
jmp
leave
out
lahf
fstp
inc
sbb
ret
xor
stos
ins
mov
ins
imul
fist
fdiv
sbb
xor
cld
or
ins
dec
clc
(bad)
out
(bad)
and
clc
enter
jmp
inc
cmc
dec
sbb
cld
clc
das
mov
inc
out
push
cmps
in
iret
add
jno
cmp
and
jbe
sub
jnp
and
pop
sub
and
clc
test
fistp
shl
fcomp
ret
or
mov
pop
or
mov
mov
ja
dec
pop
pop
popf
rcr
push
xchg
jp
or
pusha
jle
mov
repz
pop
cmc
loope
adc
inc
loope
test
sub
sub
or
sti
and
rcl
les
xchg
nop
cdq
cwde
pop
std
pop
sub
lds
mov
pop
in
inc
add
bound
add
cmp
or
movs
and
rcl
mov
(bad)
mov
mov
or
mov
add
std
and
leave
pop
jmp
push
pop
jae
fxch
adc
mov
or
(bad)
sub
ins
jae
inc
pop
and
push
fnsetpm(287
lods
pushf
push
jecxz
mov
movs
mov
repz
jg
hlt
adc
sub
xchg
pop
lahf
imul
add
mov
adc
adc
jp
adc
dec
pop
ja
sti
js
and
inc
lock
pop
aam
sbb
jbe
lock
cmps
or
sub
cmp
addr16
mov
ror
jbe
pushf
cli
sbb
(bad)
gs
fidiv
call
jecxz
pop
adc
mov
outs
sbb
adc
fs
hlt
retf
or
cld
inc
cs
lea
(bad)
popa
dec
sbb
pop
pop
sub
addr16
stc
and
jl
push
lea
xchg
fwait
push
adc
fiadd
xchg
adc
repnz
adc
std
xor
imul
adc
cmp
add
adc
cmp
arpl
sub
int
mov
fnstsw
and
mov
test
stos
in
cdq
and
xchg
sub
jge
ficomp
es
addr16
ins
clc
test
push
xor
sub
lea
or
or
adc
fnstsw
(bad)
mov
cmp
in
and
dec
jnp
jecxz
push
clc
push
add
pop
repnz
xchg
leave
jg
or
add
and
sbb
adc
add
repz
mov
mov
pop
lds
xchg
ret
push
mov
cmp
lock
cmp
add
mov
inc
pop
jbe
and
rol
pop
into
test
inc
xor
xchg
inc
mov
push
das
mov
sbb
ret
mov
(bad)
into
int3
mov
mov
xchg
loopne
ret
mov
mov
std
mov
pusha
adc
push
(bad)
add
inc
pusha
add
xor
lahf
sbb
fld
or
aad
push
mov
pushf
in
inc
arpl
dec
pop
mov
popa
fwait
jecxz
add
int
dec
imul
dec
adc
push
sbb
xchg
ret
xor
enter
gs
scas
sahf
repnz
arpl
popf
mov
addr16
adc
lock
pop
std
mov
push
test
iret
shl
inc
cmp
mov
int3
lahf
pop
scas
gs
sub
pop
mov
cmps
sbb
enter
fiadd
pop
pop
xor
xor
(bad)
sbb
imul
xchg
mov
mov
pop
aam
shl
add
(bad)
push
ret
ds
mov
push
ins
leave
fsub
out
jge
mov
mov
out
or
sbb
or
scas
es
inc
and
int3
mov
dec
fsub
and
jp
sbb
sub
int3
jns
cmp
leave
lea
(bad)
test
hlt
fwait
dec
dec
fsub
mov
enter
cwde
stos
inc
idiv
mov
sti
inc
or
leave
rcl
inc
add
mov
lods
dec
loopne
cmc
jbe
movs
pop
repz
xor
jecxz
mov
dec
xchg
push
retf
and
inc
int3
int
adc
clc
js
add
inc
ins
pop
data16
sbb
jns
dec
pushf
push
and
iret
push
pusha
adc
lods
adc
cmp
and
mov
add
add
inc
add
add
cmps
pop
jnp
push
sub
mov
sbb
addr16
rol
jbe
in
mov
(bad)
and
jno
pop
retf
push
add
imul
es
push
test
icebp
das
inc
fsub
mov
out
movs
pcmpeqw
int
mov
(bad)
fadd
mov
mov
jecxz
sbb
imul
not
hlt
mov
rol
popf
push
mov
cmp
pop
outs
add
dec
hlt
sub
repz
(bad)
lds
and
ds
push
xlat
scas
cli
movs
pop
pop
sub
pop
sar
ja
(bad)
mov
in
dec
fndisi(8087
push
jmp
jl
sbb
sbb
mov
mov
nop
xchg
cld
adc
add
mov
ins
mov
repnz
repnz
imul
repnz
(bad)
xchg
xchg
mov
out
adc
cmps
pop
mov
sbb
je
scas
enter
jl
add
dec
xor
in
jg
pop
fist
pop
adc
repnz
sub
pop
sub
(bad)
cmps
and
gs
leave
sbb
outs
rol
push
dec
test
dec
fdiv
test
sti
push
int3
mov
les
pop
jg
lea
inc
adc
lds
leave
aam
mov
sub
loop
int
dec
push
leave
push
test
out
aad
scas
call
xor
cmp
sahf
retf
das
pusha
push
in
sbb
adc
sub
stc
repnz
dec
rol
outs
dec
cmps
push
test
pop
cmps
cmps
inc
mov
call
faddp
cli
jb
lea
iret
shr
int3
mov
aas
mov
mov
test
jmp
jp
jle
xchg
shl
clc
sbb
test
jb
push
into
loopne
xor
outs
out
ret
jle
dec
xor
pop
dec
cs
or
pop
out
dec
les
jle
lahf
out
xor
in
xchg
adc
stos
neg
imul
in
push
leave
out
mov
and
pushf
ror
or
xchg
xor
mov
adc
popf
push
jae
das
(bad)
dec
dec
mov
jg
leave
mov
(bad)
rcl
pushf
dec
xchg
inc
mov
or
lock
push
jb
loope
sub
sbb
sub
in
xchg
dec
cmp
push
lea
jecxz
sbb
in
enter
push
adc
repnz
mov
jne
and
or
lock
lods
pop
jmp
adc
outs
pop
pop
jmp
xchg
push
add
add
aaa
loopne
xchg
jle
mov
ficom
in
sbb
xchg
into
(bad)
daa
rol
or
stos
imul
ins
sar
or
add
fidivr
adc
loop
cmp
dec
mov
or
push
aad
clc
cmp
dec
xor
aam
xchg
cmps
push
pop
cmp
jp
jg
and
xor
cmp
push
movs
rcr
push
add
sahf
add
mov
mov
popf
add
idiv
out
shr
adc
dec
in
add
jo
inc
aad
adc
loopne
jg
pop
adc
ins
jecxz
hlt
test
mov
jl
push
fisttp
adc
stos
xor
lea
inc
push
add
rcr
jns
je
cmps
es
push
push
scas
pop
(bad)
cmps
popf
(bad)
popa
repz
stos
xor
call
nop
jmp
ja
mov
add
cmp
jmp
or
loope
inc
aad
test
js
xor
fidiv
aad
xchg
xchg
push
jo
xchg
test
xchg
jl
adc
add
fwait
add
ror
and
mov
int3
iret
xchg
sbb
pop
mov
cld
movs
out
cmps
cld
jle
push
retf
xchg
cmp
xlat
movs
(bad)
fcmovne
(bad)
xchg
(bad)
popa
in
mov
mov
inc
std
js
pop
add
push
lea
mov
jge
xor
cmp
mov
in
jge
add
cmp
inc
push
(bad)
fimul
(bad)
lea
pop
pop
mov
pushf
jne
inc
pop
je
call
retf
jo
jmp
push
ret
cwde
mov
mov
pop
and
fiadd
inc
mov
popa
popa
out
and
out
xor
fadd
fadd
aas
arpl
stos
mov
xchg
sub
jnp
movs
(bad)
stc
xor
and
add
dec
pop
aad
jbe
or
int3
jge
inc
mov
sar
xor
ss
mov
add
lods
test
push
mov
rol
in
pop
sahf
pop
retf
xchg
and
jl
repnz
mov
daa
jge
(bad)
(bad)
jle
into
(bad)
dec
push
imul
out
out
or
jns
pop
setno
mov
sahf
mov
cmps
aam
add
das
dec
sub
inc
addr16
or
nop
dec
inc
pop
push
aas
(bad)
sbb
in
sub
out
loopne
xor
or
and
mov
mov
xlat
cld
call
and
outs
adc
xchg
cli
ret
jp
cs
add
add
fld
push
popa
cli
cmps
mov
fbld
aam
rcl
ins
mov
add
push
push
mov
or
mov
xchg
sbb
inc
push
inc
and
sub
xchg
pop
retf
jb
(bad)
ss
cli
lahf
push
loop
pop
test
call
mov
aaa
cmp
out
ins
mov
xchg
mov
into
add
imul
jns
aad
ins
or
dec
aam
cmp
test
mov
and
hlt
ins
cmp
inc
mov
jmp
inc
jo
add
cmp
push
(bad)
sub
mov
xchg
lock
mov
shl
hlt
sahf
jb
lock
ret
push
jbe
push
jmp
jge
jb
xor
or
mov
mov
loope
fist
sub
jmp
add
mov
cli
mov
cmp
mov
shl
lods
dec
std
inc
movs
xchg
add
rcl
xchg
lea
test
jl
adc
daa
mov
mov
mov
xchg
xor
stc
lods
adc
retf
in
scas
push
pop
ja
dec
pop
into
stos
popa
test
lock
inc
fild
movs
retf
(bad)
fisttp
fsubr
jecxz
shr
mov
pop
or
ret
or
xchg
pop
adc
pop
or
xchg
push
cmps
ret
xchg
mov
(bad)
mov
sbb
inc
mov
jecxz
mov
(bad)
and
test
add
std
inc
fisubr
mov
mov
nop
adc
push
fstp
add
mov
stos
dec
ror
pop
jp
not
adc
lock
push
je
push
jmp
and
xor
sbb
and
fidivr
mov
pusha
enter
aas
mov
in
es
adc
cmp
or
(bad)
cld
mov
jnp
pusha
cmp
inc
aad
mov
mov
sub
lods
pop
shl
inc
mov
xchg
int3
(bad)
addr16
mov
inc
sbb
cmp
addr16
dec
push
(bad)
jne
fld
clc
stos
ins
test
xor
add
dec
jp
add
mov
xchg
or
fiadd
mov
cmp
scas
adc
pop
bound
jnp
xor
sbb
ins
pop
arpl
cmp
pop
push
lods
xchg
inc
(bad)
jmp
gs
sbb
adc
pop
mov
loope
lahf
sbb
add
retf
cs
xlat
or
push
xchg
stos
pusha
jmp
fbld
in
in
pop
ds
mov
(bad)
adc
dec
int
sti
mov
or
push
pushf
dec
mov
cdq
cmp
gs
mov
sbb
pusha
arpl
add
dec
dec
mov
pop
call
outs
push
mov
dec
sbb
stos
add
inc
jb
outs
stc
pop
and
xchg
and
sub
retf
add
aam
xchg
push
mov
jns
dec
(bad)
pop
(bad)
push
call
lahf
add
xor
lods
f2xm1
enter
jmp
scas
mov
ret
xchg
fcom
push
pop
mov
sahf
pop
jg
pop
out
or
mov
das
call
retf
mov
mov
out
pop
out
dec
idiv
add
xchg
cwde
repnz
sub
out
aad
aaa
cwde
cwde
ret
adc
rcl
pop
xchg
mov
int
add
add
sub
xchg
push
or
ins
popf
jbe
inc
or
dec
mov
pop
shl
adc
imul
mov
sub
movs
mov
mov
mov
repz
movs
push
call
in
(bad)
jne
jo
(bad)
cwde
movs
pusha
adc
imul
imul
cld
lods
mov
and
dec
inc
xor
jns
sbb
xchg
call
dec
or
iret
sbb
add
repz
mov
(bad)
(bad)
shl
popa
fstp
stos
xor
xor
pusha
movs
jb
add
mov
xchg
cmp
xchg
adc
mov
(bad)
imul
(bad)
xchg
xchg
ss
sbb
or
push
jge
sbb
pop
xchg
leave
out
hlt
mov
scas
outs
mov
inc
cmps
mov
in
bound
cmp
out
mov
jmp
jge
inc
lahf
scas
sti
xor
adc
cs
fnstenv
adc
ins
push
jns
cli
push
add
sar
ret
mov
inc
cdq
popa
jg
ret
mov
loope
(bad)
cli
fst
mov
jle
arpl
or
mov
xchg
(bad)
push
dec
js
ins
adc
jle
pop
jg
push
clc
xchg
fwait
div
imul
jle
mov
add
ret
mov
adc
imul
fcomp
icebp
call
mov
fisttp
add
jmp
adc
push
loop
(bad)
inc
mov
xchg
not
shr
sub
and
xor
mov
jns
aaa
dec
scas
stos
aas
pop
xchg
call
scas
clc
rcl
or
pop
jnp
add
sub
dec
cli
push
in
mov
out
outs
mov
cdq
popa
scas
pop
sub
int
mov
mov
dec
and
mov
sbb
data16
and
fstp
sbb
mov
cmps
add
and
or
mov
mov
xchg
pop
dec
clc
cmps
loopne
shl
in
sar
xchg
mov
add
xor
inc
mov
adc
aam
call
je
sbb
ja
pop
retf
dec
mov
pop
dec
in
sub
push
les
hlt
fnstcw
xlat
outs
sbb
nop
shr
adc
popf
stos
cwde
jle
mov
(bad)
mov
dec
lock
iret
mov
outs
dec
push
fchs
test
shl
adc
mov
jp
fmul
adc
inc
adc
pop
pusha
dec
movs
ret
xor
retf
loopne
xchg
cli
test
mov
das
adc
xchg
sub
addr16
add
dec
out
sbb
push
mov
rcl
xor
or
inc
push
add
mov
pusha
out
dec
adc
add
es
popa
aad
dec
cmps
and
cmp
daa
inc
fidiv
pop
lds
xchg
mov
test
scas
and
cld
test
repnz
jge
arpl
mov
xchg
ret
cld
mov
mov
cmp
cmp
gs
outs
push
push
outs
cmp
ja
aad
and
clc
cli
loop
pop
push
test
add
push
push
mov
inc
adc
pop
push
fiadd
lds
mov
rcr
xlat
repnz
imul
push
adc
jle
adc
and
test
(bad)
imul
pop
clc
lods
in
cmp
bnd
dec
dec
push
(bad)
rcl
idiv
push
jle
(bad)
std
xor
xchg
push
js
xchg
mov
inc
mov
clc
and
push
mov
ss
jge
jb
mov
cmps
add
lods
inc
frstor
lea
pusha
cld
(bad)
and
adc
sub
add
mov
push
retf
loop
push
push
mov
scas
js
and
xchg
sub
mov
push
cmp
inc
xchg
push
jne
dec
dec
retf
lds
cmp
sbb
mov
jae
mov
nop
or
pop
inc
sub
fbstp
loope
xchg
xchg
adc
add
add
adc
pop
mov
scas
sub
jns
add
int
mov
mov
adc
or
idiv
add
gs
pop
adc
mov
aad
(bad)
fild
ret
sbb
xchg
inc
or
in
adc
das
(bad)
adc
mov
aam
loope
pop
mov
in
sbb
add
mov
mov
xchg
jmp
add
ss
popf
(bad)
std
jb
clc
inc
ret
add
and
fistp
cmp
xchg
push
les
adc
cmp
ja
pushf
arpl
dec
scas
add
push
xchg
dec
dec
repnz
push
out
rcl
dec
in
or
stc
ret
shl
jae
outs
call
xchg
add
mov
jmp
adc
add
dec
cmp
out
push
cmps
loope
push
pop
lods
inc
and
and
fwait
and
cwde
cmp
out
adc
dec
leave
outs
and
popa
lods
or
jmp
add
movs
test
icebp
xchg
push
stc
sub
inc
sub
mov
mov
leave
repnz
inc
and
ret
ficomp
fild
imul
mov
pop
sar
cmp
mov
push
cmp
push
nop
xchg
mov
sbb
in
imul
inc
and
lahf
sar
pop
popf
shr
retf
cmp
fs
jmp
push
clc
sub
lds
jo
mov
les
sub
pop
xor
(bad)
out
(bad)
imul
jb
add
pop
push
out
inc
loopne
cmps
dec
xchg
and
push
mov
test
xchg
mov
jo
sub
stos
add
add
repnz
pop
mov
rol
(bad)
pop
add
(bad)
sub
pop
fistp
sbb
add
repnz
jno
cmc
repnz
into
(bad)
nop
sub
and
mov
cmp
jno
jno
(bad)
outs
test
push
pop
jno
lds
adc
jge
add
mov
xchg
mov
adc
jmp
and
clc
dec
repnz
xor
into
xchg
push
cmp
jl
xchg
adc
adc
xor
add
cdq
mov
ja
mov
mov
into
popf
pop
(bad)
add
pop
push
scas
stos
fidiv
out
sti
test
ret
mov
ror
outs
xchg
leave
ret
dec
(bad)
ds
mov
ins
ins
iret
pop
mov
cmp
gs
jns
cdq
repnz
test
push
bound
es
or
repz
mov
sar
lea
enter
iret
inc
xchg
jbe
xor
jecxz
push
(bad)
repz
mov
add
mov
call
cmp
pusha
mov
cli
mov
cdq
fst
push
jge
dec
sub
pushf
bound
out
shr
sbb
into
cmp
and
inc
stos
mov
addr16
out
out
mov
(bad)
setg
scas
push
push
and
mov
repnz
imul
inc
cvtps2pi
nop
adc
sub
mov
mov
div
dec
and
mov
outs
xchg
(bad)
int3
dec
int
mov
cmp
call
imul
out
sub
rcr
(bad)
mov
leave
in
ds
loopne
sbb
mov
and
dec
add
cmps
sar
(bad)
push
mov
scas
jno
aas
pop
cli
popa
jno
inc
jmp
jge
xchg
sbb
fdivrp
mov
loope
pop
out
add
jl
dec
xor
mov
mov
outs
adc
or
mov
inc
jp
ins
ret
outs
in
cld
push
ror
in
mov
fisttp
jo
jns
add
in
add
sbb
loopne
dec
aas
inc
push
cmp
dec
jecxz
cmp
ret
push
loope
xchg
mov
push
fidivr
rol
lea
mov
push
mov
push
jmp
sbb
sti
xchg
inc
jmp
push
test
pop
ins
and
outs
xchg
jne
cdq
xchg
pop
mov
retf
pop
and
pop
pop
mov
iret
pop
sbb
pop
fcmove
jb
cmp
adc
movs
push
push
aas
ds
mov
arpl
cwde
inc
in
test
or
sub
cmps
(bad)
ins
push
mov
fcmove
outs
imul
or
and
and
add
sub
inc
(bad)
and
mov
sub
ror
scas
add
(bad)
xor
xchg
mov
pop
repz
add
fxam
stc
adc
bound
sbb
in
fldl2t
out
mov
dec
sbb
xor
mov
sub
mov
sub
pop
xchg
push
fld
or
adc
mov
repz
popf
mov
jp
ja
ja
xchg
dec
mov
xlat
and
ins
(bad)
sub
retf
rcl
xchg
push
aad
loope
xchg
xlat
sbb
(bad)
xchg
int3
and
mov
sahf
cmovnp
pop
div
mov
mov
rol
enter
mov
mov
cmps
push
je
pop
xor
imul
rol
adc
mov
and
xchg
test
(bad)
mov
and
ret
sub
frstor
xchg
les
out
(bad)
loopne
push
and
xchg
jne
inc
into
(bad)
jo
out
dec
adc
stos
fwait
in
ror
mov
jp
sub
and
sub
sub
sbb
dec
or
sub
in
push
add
pusha
or
inc
xchg
ror
mov
and
ins
pop
add
(bad)
fcom
push
fnstsw
lds
retf
sub
test
push
jno
xor
cmps
mov
push
xor
mov
or
fwait
stos
xchg
and
add
or
rol
std
rcr
popa
iret
outs
inc
adc
add
test
retf
push
out
ins
das
pop
inc
outs
fimul
shr
cmp
out
fldenv
adc
sub
hlt
fwait
jp
xchg
inc
inc
lods
mov
cmps
sahf
fld
dec
sti
pop
mov
jmp
pop
loopne
add
lock
shl
movs
or
gs
mov
in
adc
fiadd
mov
test
dec
push
add
imul
push
adc
mov
jae
dec
push
movs
xor
sub
imul
js
mov
mov
jl
inc
dec
(bad)
xrelease
imul
push
xchg
mov
jle
test
sti
jb
loope
sbb
jmp
aas
mov
xor
mov
out
jno
fdivr
sahf
aad
xchg
ret
jmp
scas
clc
loopne
or
jns
jecxz
outs
add
jmp
sub
jnp
jae
int
mov
inc
dec
retf
dec
pusha
lock
xor
jo
push
mov
xchg
and
fbld
or
lods
(bad)
mov
pop
loop
cmps
retf
or
or
pop
mov
xor
out
mov
iret
ror
test
mov
in
pop
xchg
out
push
(bad)
loop
test
dec
pop
adc
sub
inc
inc
mov
xor
nop
movs
cmp
in
push
cmp
jmp
mov
pop
call
test
hlt
jne
push
push
mov
cmps
push
movs
dec
addr16
or
les
loope
jns
and
add
jne
xor
out
lods
cmp
mov
fs
mov
ss
jb
rcr
mov
xor
call
rol
mov
test
pop
push
in
mov
out
outs
div
retf
pop
daa
test
out
icebp
daa
dec
sub
jge
xlat
loop
inc
movaps
jno
das
repnz
fiadd
(bad)
addr16
ret
mov
push
mov
dec
push
cwde
xchg
add
add
push
mov
mov
cmps
out
add
inc
xchg
ret
test
fcmovb
fcomp
movs
add
lea
es
jmp
xchg
loop
mov
in
enter
sub
adc
push
push
cmp
pusha
aam
arpl
pop
sahf
and
movs
stc
in
cld
add
pop
mov
fsubr
imul
call
mov
cli
adc
leave
dec
jnp
and
mov
bound
cmc
fsub
jle
push
in
push
cmps
shl
loopne
sbb
(bad)
sub
outs
mov
jmp
inc
cli
pusha
aad
xchg
lock
dec
sub
xchg
xor
icebp
sub
adc
xchg
mul
and
movs
loop
sbb
or
fst
(bad)
xchg
ret
mov
adc
cmps
pop
test
fstp
jns
js
adc
xchg
pusha
mov
pushf
xor
mov
cmp
out
add
lea
cmp
aaa
cmc
call
scas
or
mov
mov
leave
xchg
jbe
stc
movs
xchg
jle
stos
push
add
imul
out
jno
or
mov
stos
inc
(bad)
mov
add
inc
jb
rcr
outs
fwait
cmp
loope
pop
std
cmp
aam
jae
sbb
fild
outs
pop
mov
ins
mov
stos
push
leave
mov
cmp
dec
repnz
(bad)
movs
fs
(bad)
bnd
enter
rcl
and
lock
inc
sti
call
jg
jns
mov
sbb
dec
cmp
pop
xchg
lahf
pop
clc
(bad)
idiv
inc
fisubr
xchg
xor
adc
dec
jl
bound
sbb
pop
jl
dec
xor
and
lock
sti
sahf
sbb
scas
es
push
stos
and
sti
xor
and
push
inc
sub
xchg
cmc
sub
(bad)
call
push
scas
lods
inc
lods
inc
rcr
adc
xlat
mov
das
in
cmp
lahf
sbb
retf
xlat
adc
int3
std
aas
xor
add
rdtsc
call
xor
inc
imul
inc
sbb
int3
call
fwait
add
xor
pop
push
dec
or
scas
push
enter
(bad)
bnd
hlt
call
mov
in
daa
sub
mov
sub
popa
jne
in
addr16
js
adc
mov
and
repnz
inc
fadd
sub
daa
mov
(bad)
scas
and
jmp
inc
hlt
or
fsub
or
and
into
and
(bad)
ins
add
jae
pop
cmc
popa
push
sbb
mov
hlt
adc
shr
and
sbb
fisub
jno
adc
pop
dec
(bad)
xlat
pop
cwde
xchg
push
stos
cld
dec
aaa
sub
xchg
jge
fld
(bad)
sub
mov
repnz
ins
mov
inc
and
xor
(bad)
add
ja
jp
and
push
test
out
bound
lods
(bad)
xchg
dec
loopne
xchg
xchg
iret
mov
mov
mov
or
sbb
pop
xchg
dec
gs
dec
add
inc
sub
in
cmp
push
icebp
jno
sub
pusha
and
cli
sbb
mov
sub
jo
test
or
ss
push
jae
add
mov
xchg
push
loop
push
fsubr
mov
daa
mov
and
dec
es
repnz
jns
je
jg
cmp
outs
stos
mov
inc
inc
xlat
cmp
fabs
mov
cdq
mov
adc
add
or
int3
in
cmovge
push
fnsave
sbb
loope
mov
add
clc
xchg
in
ja
jle
sub
pop
ins
movs
mov
jb
jle
popa
div
test
ficomp
cs
cld
in
mov
les
push
sbb
nop
push
mov
ins
adc
(bad)
and
pusha
ss
and
cmps
(bad)
xor
xchg
adc
adc
repnz
aaa
aas
(bad)
cmp
stos
call
out
dec
xor
outs
outs
and
repz
mov
or
pop
ds
push
scas
sub
mov
out
aas
xchg
push
or
xor
pusha
xor
adc
popa
jns
jmp
test
jo
jp
mov
push
ror
shl
(bad)
inc
aaa
icebp
inc
add
jg
inc
sbb
push
cdq
sbb
sub
ds
cmp
fisttp
jg
test
clc
push
dec
mov
mov
aam
jnp
xor
call
out
xlat
(bad)
es
mov
sub
pop
stos
sar
outs
std
add
retf
mov
outs
call
add
dec
jo
aas
pop
cmp
fdivr
dec
pop
mov
xor
mov
ss
sbb
xor
fucomp
ss
xor
jecxz
scas
mov
sbb
les
xor
imul
repz
sub
aad
xchg
jle
ins
mov
jg
(bad)
repz
inc
dec
dec
mov
jae
clc
jno
mov
xchg
sbb
jns
test
(bad)
ret
outs
mov
call
bound
repz
mov
mov
pop
xor
add
mov
pop
aaa
out
das
pop
inc
mov
jl
imul
(bad)
mov
leave
and
push
sbb
jl
cld
imul
addr16
inc
mov
in
jl
push
mov
pop
(bad)
push
out
xor
retf
leave
in
punpckldq
jmp
in
call
add
cmp
inc
cmp
in
bound
gs
xchg
or
pop
or
or
dec
xchg
cmp
imul
int
sbb
inc
sub
mov
std
dec
inc
push
scas
add
pop
mov
cld
xor
jl
cmc
push
rol
push
es
mov
cld
cld
mov
ret
inc
mov
or
outs
sahf
mov
icebp
fwait
pop
(bad)
inc
jle
and
movs
and
int
pushf
scas
leave
jbe
push
daa
frstor
cmp
sbb
push
jmp
jge
push
sar
xchg
push
inc
and
or
mov
mov
sbb
clc
sar
push
lahf
cmp
out
xor
out
push
icebp
stos
jno
ins
sbb
push
jle
jnp
movs
jae
dec
stc
pop
pop
jmp
pop
int3
jp
and
dec
rol
dec
or
or
ins
in
dec
xor
jp
push
xchg
inc
pop
inc
das
nop
mov
call
xor
mov
pop
cmp
sbb
mov
(bad)
mov
pusha
lea
xchg
dec
mov
pushf
xchg
and
out
mov
dec
not
push
adc
ins
push
xchg
scas
into
stos
ror
jecxz
and
xor
inc
push
js
mov
push
push
lahf
sub
ins
in
mov
dec
push
imul
push
lds
sub
dec
sub
dec
daa
sbb
push
outs
aaa
jno
lock
jae
loopne
or
aad
pop
sub
aad
inc
and
jecxz
xchg
add
sahf
fdivr
push
xor
mov
xchg
jg
inc
dec
sbb
aaa
mov
push
in
cli
xor
clc
nop
jge
jecxz
cmc
aas
jge
ds
call
repz
sbb
retf
mov
mov
xchg
mov
loope
and
(bad)
inc
or
and
xchg
ret
cli
or
jbe
xchg
ds
ss
aam
(bad)
fcom
sbb
sahf
pop
and
fadd
xor
rcl
inc
sbb
sbb
std
push
pop
push
pop
xchg
mov
pop
jl
sub
movs
jbe
movs
jo
in
lahf
jmp
or
or
inc
popf
bound
pop
dec
ror
dec
mov
scas
and
sub
fimul
mov
xchg
cmp
jbe
call
dec
xchg
sbb
pop
es
add
xor
(bad)
stos
push
jo
retf
mov
cld
popf
mov
jne
aam
push
jp
dec
adc
bound
aad
nop
stos
mov
div
fisub
sub
xchg
ror
inc
fwait
push
popf
jp
popa
sub
repnz
jecxz
pop
(bad)
or
pusha
dec
sbb
out
(bad)
jge
ss
or
jne
(bad)
dec
mov
sub
xchg
jbe
cdq
mov
push
push
pop
ds
fdiv
pop
sub
rcl
dec
cmp
push
add
outs
cld
clc
dec
rcl
call
fstp
sub
clc
cwde
pop
(bad)
jno
test
iret
and
clc
les
mov
lds
in
or
sub
push
cmps
jmp
dec
iret
push
push
sub
pop
ins
daa
(bad)
xrelease
leave
shl
fs
cld
lods
stos
push
push
mov
nop
fs
mov
aam
push
mov
and
dec
fs
mov
mov
cmp
fild
lods
sti
shl
cmp
xchg
jmp
js
pop
dec
aad
pop
(bad)
stos
add
inc
inc
push
jle
ja
fst
mov
movhlps
jecxz
and
outs
mov
cwde
bound
sbb
fnstenv
adc
sbb
xchg
mov
test
iret
dec
sub
into
ja
cdq
xor
mov
not
aam
dec
dec
sbb
cmp
call
imul
in
or
add
movs
xchg
push
das
jmp
and
sub
pusha
ret
mov
and
lock
cmp
adc
mov
mov
(bad)
cli
retf
sub
pop
into
fbstp
and
ret
push
(bad)
inc
movs
cmp
loope
adc
jg
fstp
cmps
das
cmp
test
mov
out
cmc
les
mov
test
fbld
cmp
xor
cmp
xor
jmp
iret
ret
xor
out
sbb
adc
test
sar
xchg
xchg
xchg
pop
dec
dec
cmp
loopne
repnz
sti
int
test
je
jle
aam
fs
sub
icebp
rcl
and
mov
adc
jnp
sbb
sub
mov
lods
imul
scas
xor
test
fistp
jp
pop
mov
mov
loop
repz
mov
cmp
mov
jle
cmps
cmpxchg
cmps
pop
lods
mov
and
jge
inc
bound
loop
xchg
mov
es
in
std
xchg
mov
jbe
call
dec
push
cld
mov
fidiv
call
xchg
pop
test
sub
ds
mov
(bad)
sub
mov
icebp
xchg
mov
ret
xchg
cmp
adc
dec
ret
cmp
mov
xchg
mov
push
dec
fcmovnbe
and
add
jge
out
shl
icebp
xchg
arpl
cld
cmp
dec
sbb
mov
push
jp
mov
push
rol
pusha
or
lahf
mov
and
push
stos
dec
icebp
retf
std
sub
or
out
outs
loop
mov
cmps
inc
aad
fisubr
sbb
in
and
jbe
lock
sub
rol
adc
xor
retf
jmp
fdivr
neg
adc
loopne
ret
mov
push
adc
loope
pop
jo
subps
leave
pop
pop
inc
mov
jmp
xor
push
and
enter
mov
inc
stc
mov
adc
cmp
or
xchg
fwait
pushf
test
mov
mov
cwde
xchg
mov
aam
inc
arpl
and
repz
lods
jnp
adc
inc
mov
(bad)
sub
dec
push
inc
leave
test
pop
(bad)
les
gs
xor
addr16
jmp
mov
jb
fnstsw
jno
dec
loopne
mov
sub
ror
iretw
fimul
jle
cld
stos
dec
add
ret
xor
pop
out
mov
imul
lods
push
repz
imul
xor
adc
out
adc
xchg
shr
push
popf
out
and
fsub
xor
out
sbb
ds
push
push
ror
mov
retf
xchg
mov
pop
iret
shr
lods
and
xchg
shl
mov
out
jb
leave
inc
ret
aaa
and
popf
rcl
and
and
ret
cmp
loop
dec
push
push
add
xchg
inc
mov
mov
jp
xchg
inc
mov
sub
mov
ins
out
mov
mov
inc
or
fdivr
mov
sbb
in
test
lds
icebp
es
push
adc
and
jae
or
fiadd
pop
xlat
or
dec
dec
enter
push
jecxz
mov
or
mov
add
out
in
nop
lods
pop
or
hlt
jb
dec
fbstp
inc
add
std
add
test
das
test
shl
retf
imul
jmp
cmps
ins
cdq
loope
cmp
push
shl
scas
fidiv
rcl
nop
push
add
cli
jno
sbb
loopne
mov
icebp
jl
xchg
jb
sbb
test
ins
ss
out
in
ss
mov
lock
in
fisttp
mov
mov
jo
std
pop
mov
movs
mov
dec
inc
outs
mov
sbb
test
push
sbb
neg
mov
outs
inc
scas
shl
movs
jmp
bound
shl
add
adc
ss
cmp
adc
fdivr
inc
out
jmp
jne
pop
js
repz
loopne
fbld
fmul
leave
or
and
lds
enter
inc
xchg
mov
pop
sub
jl
xchg
rol
and
popa
pop
mov
rol
inc
or
jb
dec
ss
add
(bad)
xchg
ret
(bad)
jl
ret
test
test
ror
inc
int
mov
or
scas
xor
xor
adc
inc
pushf
or
outs
lock
fild
dec
mov
jne
enter
mov
add
aad
sbb
sahf
sbb
je
push
or
lods
mov
or
push
dec
es
aas
arpl
cmc
movs
retf
mov
ret
xchg
adc
pushf
jmp
aas
out
push
xchg
ud1
nop
dec
fidiv
pushf
mov
push
inc
repz
mov
push
or
repnz
jae
ror
push
mov
cmp
push
fwait
push
adc
je
jg
jns
xor
sahf
add
ss
into
and
inc
pop
push
or
ds
or
sahf
fdiv
(bad)
mov
adc
mov
xchg
imul
dec
(bad)
aad
xchg
repz
cmps
pop
mov
jno
jg
jl
xchg
cmp
jp
jne
cmp
dec
mov
out
retf
and
mov
xchg
scas
push
xor
mov
cmp
aas
inc
enter
mov
ins
jmp
and
dec
push
cwde
jb
imul
mov
sar
mov
mov
(bad)
in
mov
xor
add
push
repz
xchg
jmp
add
(bad)
jnp
adc
loop
not
jns
pop
jl
adc
xor
nop
mov
mov
sbb
out
jmp
ret
pop
and
pop
xchg
xor
mov
cmp
lods
jbe
retf
jl
pushf
jnp
sub
inc
dec
movs
jne
mov
aad
xchg
cli
leave
pop
mov
ins
cmp
sub
add
(bad)
cli
retf
xor
and
test
test
and
mov
cld
jecxz
ja
add
(bad)
dec
ret
pop
adc
fst
pop
sar
xchg
dec
mov
sub
pop
add
mov
xchg
inc
pop
sti
xchg
mov
mov
sbb
ret
jb
test
jle
fnstenv
pop
das
dec
xchg
into
cmp
jge
lods
sub
pop
test
pop
mov
mov
mov
ret
std
sub
jae
ins
dec
outs
or
movs
idiv
ins
arpl
lods
xchg
xor
repz
lods
mov
mov
jo
outs
push
adc
mov
jne
fmul
sahf
adc
out
shl
addr16
adc
xchg
std
xlat
jl
adc
push
fiadd
mov
fiadd
das
adc
das
cdq
icebp
retf
and
pop
clc
in
bound
push
cmp
push
test
or
xchg
inc
int
adc
or
cmp
xchg
les
scas
rcl
mov
ficomp
or
pop
push
fcmovne
dec
push
outs
ret
(bad)
mov
nop
gs
mov
jg
sub
xor
mov
mov
lea
movs
scas
gs
push
clc
and
fadd
scas
jge
ret
xor
dec
xor
jns
inc
jmp
sbb
mov
mov
cmps
imul
push
pop
cmp
clc
mov
sbb
stos
pop
mov
inc
out
fst
bound
push
mov
push
xor
pusha
cmps
mov
cmove
loopne
div
aaa
push
jle
push
jl
add
test
adc
inc
das
cs
xor
mov
mov
pop
ds
std
and
test
pop
mov
js
mov
jge
xor
dec
ret
or
fninit
retf
enter
push
in
or
inc
mov
std
aam
addr16
dec
sbb
ins
cli
cmp
mov
retf
jnp
mov
sti
loop
cmp
in
add
inc
push
push
retf
bound
pop
lods
push
in
stos
in
cmps
lahf
(bad)
push
push
fadd
or
rol
stos
or
shl
retf
sub
cmp
lahf
paddsw
add
jb
fisub
dec
sbb
jle
lock
pop
call
dec
pop
push
lea
dec
dec
stos
inc
mov
cld
and
jge
rol
jb
push
jmp
adc
lods
daa
out
lock
push
mov
mov
outs
(bad)
test
cmc
pusha
xchg
jge
inc
and
fldenv
jns
es
jnp
xchg
xchg
mov
sbb
(bad)
pop
(bad)
mov
pop
ins
call
(bad)
out
mov
or
fsubr
outs
std
push
je
std
sar
and
movs
ins
stos
or
jge
ins
loopne
nop
and
pop
outs
mov
and
add
mov
fnstenv
adc
stos
scas
in
gs
popa
(bad)
jnp
xchg
ins
pop
pop
popf
inc
or
je
cmp
jg
pop
jp
dec
loope
ss
js
ins
mov
dec
jne
mov
xchg
adc
scas
mov
inc
mov
sub
inc
cmp
sub
or
adc
xchg
rol
mov
outs
ins
jno
dec
sbb
xlat
push
adc
lds
adc
mul
mov
test
push
or
push
xchg
cli
lahf
xchg
cmp
jmp
dec
sbb
add
lods
ins
jbe
aam
sar
cmps
int
push
and
jle
call
arpl
adc
xor
out
xacquire
mov
xchg
jnp
mov
outs
sub
into
jbe
push
jecxz
(bad)
addr16
mov
add
xchg
sub
pop
addr16
sbb
dec
sub
push
aad
lock
and
vsqrtpd
pop
fdivr
icebp
loope
neg
mov
push
mov
mov
ins
push
push
stc
ret
inc
std
loop
xchg
push
pop
hlt
imul
test
push
out
adc
retf
adc
div
and
les
ret
lods
jg
mov
push
mov
xchg
pop
pop
call
push
das
(bad)
pushf
fistp
cdq
jg
cmp
fcom
cmp
mov
shr
in
mov
push
and
jmp
fsub
mov
jp
pop
inc
(bad)
xchg
xor
cmp
or
sbb
dec
sub
mov
push
push
fbstp
mov
jmp
sbb
cmps
xor
in
cmp
pop
mov
mov
js
jl
ins
cmp
mov
push
sar
mov
sbb
bound
dec
mov
sub
jmp
test
mov
pop
adc
ret
leave
mov
ficom
add
or
sti
les
fstp
push
icebp
adc
cmp
mov
outs
lock
xor
leave
test
xchg
imul
xor
or
outs
adc
cmp
mov
sub
pusha
dec
inc
js
or
xor
shl
cmc
adc
hlt
add
adc
add
in
mov
dec
es
pusha
mov
mov
add
jo
cs
xor
fs
fadd
mov
push
lahf
xor
hlt
daa
scas
(bad)
dec
and
fsubrp
push
adc
add
adc
mov
xchg
popa
cmp
je
int3
cmps
repz
cmp
xchg
push
push
sbb
cmp
cmp
inc
and
mov
mov
fisub
xchg
push
lahf
pop
sub
mov
test
mov
and
ja
(bad)
repnz
jae
fs
mov
add
in
dec
add
iret
jp
jp
jns
push
cmp
daa
addr16
pusha
mov
mov
cmp
mov
sbb
bound
jle
xchg
add
inc
push
and
leave
dec
xor
push
shl
lea
ss
out
mov
sub
xor
dec
xchg
xor
call
push
sbb
push
sub
push
and
cmp
gs
cmp
mov
or
and
dec
test
xchg
int
dec
mov
push
stos
mov
out
(bad)
ror
jecxz
add
xchg
es
push
fwait
movs
daa
js
in
xchg
pop
shr
push
movs
jl
cs
movs
cmp
xor
xor
push
adc
loopne
adc
ficom
daa
bound
loop
in
not
popf
adc
mov
(bad)
scas
(bad)
cs
mov
mov
test
loopne
movs
jne
mov
movs
or
dec
sbb
jmp
arpl
shr
int3
(bad)
xor
push
cld
mov
test
sub
fwait
int3
sbb
xchg
sub
pop
popf
jp
jg
xchg
ins
and
mov
mov
psraw
mov
mov
and
ins
add
in
xchg
in
adc
in
push
or
mov
sbb
aad
pop
in
jl
loopne
push
add
xchg
add
mov
dec
ret
leave
cmp
mov
leave
mov
inc
inc
sbb
and
pop
cmp
pop
jecxz
frndint
mov
jbe
push
fst
xchg
and
inc
inc
and
pusha
cmps
retf
and
test
add
je
pop
sub
daa
mov
movs
mov
test
test
add
add
cmp
pop
nop
(bad)
lea
inc
daa
jmp
inc
xor
repnz
jg
rcl
push
inc
push
retf
add
fisttp
mov
sub
shl
add
repnz
sbb
(bad)
sbb
mov
add
or
popa
out
mov
or
call
shl
push
imul
push
data16
in
hlt
push
jo
pop
push
jb
jg
cmp
push
sub
aas
add
mov
jne
addr16
ins
inc
jl
mov
fadd
ret
inc
jl
xor
sub
jle
ins
lahf
xchg
es
shl
pop
push
arpl
ret
lea
push
push
push
push
(bad)
std
or
inc
aaa
(bad)
fmul
sub
inc
bound
adc
mov
mov
push
jge
scas
jle
and
push
sti
sub
jno
loopne
(bad)
(bad)
test
jmp
xor
in
int
aas
adc
push
cmp
and
dec
add
inc
add
sahf
popf
pop
pop
inc
cmp
repz
mov
call
xchg
ins
sti
add
inc
push
cmps
mov
sbb
adc
pop
sbb
sub
lods
ins
dec
sti
add
cmp
hlt
xor
call
iret
mov
frstor
or
frstor
sub
rcr
xchg
retf
stos
mov
and
addr16
fist
pop
cbw
adc
cmps
mov
jmp
mov
adc
or
imul
pop
jg
enter
jb
cmp
int3
jle
mov
mov
add
jns
nop
inc
jae
jge
(bad)
push
cmps
push
leave
cmp
mov
rol
sbb
pop
int
ret
mov
adc
shl
pop
(bad)
sub
int
jbe
adc
pushf
mov
xor
or
aaa
ror
mov
(bad)
push
dec
inc
ins
or
inc
sahf
es
ficomp
pop
xchg
fadd
pushf
or
cmps
mov
arpl
adc
addr16
adc
js
(bad)
adc
lods
scas
mov
mov
mov
pop
leave
xchg
inc
jbe
shl
popa
inc
xchg
jae
or
mov
add
or
stos
xor
push
cmp
repz
mov
in
xor
stc
(bad)
cli
repnz
dec
out
xchg
data16
pop
pop
or
jb
mov
jb
adc
(bad)
mov
out
sub
movs
mov
mov
dec
jge
xor
adc
ret
cmp
js
dec
mov
movs
pop
add
and
enter
and
cmp
or
call
stc
jae
mov
pusha
add
xchg
xchg
mov
mov
shr
rcr
test
jle
sti
xchg
jge
or
mov
loope
xor
xchg
xchg
inc
lods
jge
mov
fdivr
out
fisttp
add
xchg
jno
pop
scas
add
imul
and
ja
jmp
imul
loop
dec
xor
imul
sub
inc
(bad)
mov
dec
rol
jns
mov
jns
push
push
mov
add
das
xchg
add
push
in
int3
or
sub
fdiv
jnp
mov
gs
mov
jl
cmps
sbb
aaa
fs
add
sub
fisub
or
dec
or
jne
mov
(bad)
mov
jno
loop
jne
cmp
pop
mov
inc
ins
out
clc
pop
jl
add
mov
mov
icebp
lahf
aad
loop
imul
add
dec
xor
push
adc
xor
sub
pusha
js
mov
fiadd
sti
stos
and
std
sub
fcmovnb
adc
stos
mov
nop
cmp
add
jo
mov
pop
inc
jp
scas
inc
out
test
dec
ins
lahf
std
xchg
jl
sbb
mov
mov
mov
dec
xchg
repz
sub
rcl
je
and
int3
pop
sub
inc
pop
inc
push
xlat
fwait
or
mov
sub
mov
lods
mov
fild
jbe
int
mov
jl
inc
adc
sub
mov
mov
ret
pop
push
sub
aam
pop
shl
jb
mov
and
fs
mov
call
jnp
pop
mov
inc
xor
jge
outs
out
rcr
xchg
pop
or
and
ror
dec
ret
dec
and
mul
inc
clc
test
adc
xchg
arpl
mov
mov
ret
mov
aam
dec
cdq
into
loop
xor
push
mov
sar
pop
and
mov
stc
outs
mov
sbb
ins
and
sti
retf
les
ss
or
xor
mov
lea
rol
lods
push
loop
pop
dec
adc
cld
or
jg
outs
cmp
js
push
dec
retf
das
hlt
stc
sbb
and
scas
rcl
mov
imul
jp
loope
icebp
ret
js
adc
call
outs
add
jns
jl
(bad)
pop
dec
sbb
jge
sub
pop
shl
in
test
and
aad
(bad)
xchg
push
jo
sar
imul
push
dec
mov
vpaddw
and
cli
or
ret
push
cmps
pusha
pop
pop
cmp
adc
das
sub
fisttp
std
shr
sbb
pop
lods
(bad)
xchg
sbb
cmp
lahf
test
sub
rcl
xchg
out
mov
repnz
(bad)
fisub
and
aad
mov
gs
(bad)
into
sub
out
or
mov
ficomp
jl
fldpi
sub
pushw
dec
imul
(bad)
pop
cs
xlat
push
adc
fild
push
sub
stos
sti
mov
push
stc
pop
std
xlat
mov
ja
pshufw
sub
mov
mov
inc
out
xchg
sbb
test
out
repnz
les
iret
mov
inc
dec
push
sbb
adc
das
ins
or
cmp
push
mov
push
aam
cs
in
imul
push
test
add
repnz
and
cmp
fwait
mov
mov
mov
sub
hlt
cs
jge
xor
push
xchg
out
cmc
cdq
shl
xchg
mov
and
jb
leave
cmc
into
jl
jmp
mov
adc
push
hlt
mov
xchg
sub
adc
or
mov
nop
cwde
dec
test
or
loope
stos
mov
adc
jnp
push
popa
pop
data16
shl
push
jge
out
sub
fcmovne
mov
mov
dec
ss
daa
rcl
lds
aas
fstp
sub
xlat
scas
leave
popa
scas
repz
dec
in
mov
retf
pusha
enter
mov
adc
jnp
fwait
sbb
and
mov
lods
es
movs
dec
xchg
xchg
mov
pop
nop
out
stos
loop
xlat
sub
jne
jno
pop
or
bswap
aam
pop
dec
push
cmps
mov
js
imul
mov
jg
ret
lods
pop
pop
test
movs
(bad)
mov
push
sub
xchg
cmp
retf
out
push
pop
pop
in
and
imul
add
std
call
and
sti
in
xchg
aam
jb
jbe
repnz
enter
dec
jle
call
cmc
test
and
movs
and
adc
lods
sbb
and
pop
xor
jne
lock
add
adc
dec
rcr
hlt
mov
pusha
loopne
imul
or
pop
retf
pushf
dec
push
push
add
push
in
jge
sub
push
pop
jg
(bad)
retf
add
xchg
mov
pusha
xchg
retf
loopne
in
enter
lock
stos
data16
mov
data16
fdiv
stos
xor
mov
lock
xchg
and
lods
cdq
sahf
scas
pop
dec
jmp
jp
push
cmp
inc
inc
int
ins
mov
repz
push
and
cmp
cli
(bad)
jne
call
leave
(bad)
mov
(bad)
fimul
vpackuswb
inc
and
fstp
ret
mov
ret
jle
clc
dec
mov
jmp
fst
and
pop
in
mov
cmp
scas
jg
ds
stos
in
or
and
aad
sbb
mov
sar
and
xor
mov
xor
addr16
dec
mov
cdq
jno
scas
xor
js
fimul
icebp
fst
pop
cmc
loopne
dec
mov
aaa
aam
data16
push
fsubr
xchg
dec
mov
(bad)
cld
aad
clc
in
xchg
je
leavew
or
jns
cmp
fadd
jns
icebp
inc
cli
lea
inc
jl
pop
(bad)
test
or
inc
jle
or
xchg
mov
daa
retf
pop
fdiv
hlt
out
std
in
ins
and
xchg
xchg
cmp
sar
fisubr
leave
cli
fld
ss
movs
push
out
add
xor
xor
adc
cmp
lods
scas
xchg
mov
mov
sbb
mov
jno
(bad)
mov
lods
push
js
mov
sub
xor
(bad)
mov
dec
adc
sbb
mov
jnp
test
mov
push
lock
add
test
daa
dec
adc
ss
cmp
popf
pop
dec
add
mov
not
cwde
add
jl
dec
or
cs
out
cmp
adc
xor
fst
(bad)
jo
jns
and
jle
mov
sub
jnp
push
mov
sbb
fwait
jg
inc
push
jne
rcl
call
cwde
pop
loop
xchg
aam
fild
mov
ror
push
lods
bound
lds
(bad)
pop
dec
mov
xor
loopne
and
loop
lds
out
adc
adc
in
pop
mov
fld
(bad)
sub
rcl
sub
add
fs
dec
ins
dec
stos
push
addr16
(bad)
and
daa
rol
ins
jecxz
xor
shr
jmp
jle
jne
push
pop
adc
pop
push
fist
lock
cmp
push
out
test
mov
push
sub
inc
add
dec
sbb
xor
cmp
es
xchg
and
(bad)
loop
dec
pop
and
cmc
aad
cmc
xchg
sub
or
into
fimul
std
je
cmp
push
mov
dec
sbb
ins
jmp
xor
test
int3
test
dec
lods
push
dec
sub
and
pop
ins
mov
sub
cmp
lahf
inc
out
or
xor
pushw
push
pop
xchg
and
in
pop
xchg
cmp
dec
ins
iret
cmps
je
cmc
mov
stc
retf
mov
rcr
rcr
push
test
sub
lods
inc
pushf
inc
ss
fist
mov
cdq
inc
(bad)
into
mov
xchg
sbb
adc
xchg
ret
mov
(bad)
data16
repnz
pop
ret
push
add
mov
data16
(bad)
xchg
ds
hlt
and
sar
sub
mov
sbb
inc
dec
dec
lods
(bad)
and
dec
shl
fwait
mov
test
mov
mov
in
push
mov
xchg
sub
clc
add
aad
aas
jns
mov
popf
or
inc
sbb
jmp
push
mov
push
call
push
pop
in
jbe
cmp
adc
inc
outs
shl
cmp
mov
or
push
es
nop
int
mov
mov
inc
std
(bad)
shl
jg
shl
(bad)
jno
inc
sub
mov
test
mov
daa
je
cs
movs
jle
dec
push
call
dec
stos
adc
fcomip
jne
jns
outs
mov
jg
into
inc
mov
ror
push
sbb
rcl
add
fimul
aas
aam
push
cmp
into
(bad)
jb
jns
popf
or
aas
sbb
push
pushf
icebp
aaa
fsub
jae
ins
cdq
jae
and
ins
dec
lods
cwde
ret
cwde
fiadd
into
jle
adc
jae
xchg
call
xchg
sbb
and
add
jne
and
and
out
aaa
sub
or
jle
xor
test
(bad)
mov
cmp
sbb
dec
mov
push
jb
adc
js
test
jg
or
ja
xor
dec
or
sub
sub
leave
mov
lahf
xor
aad
fwait
shl
lods
adc
jnp
mov
and
int
pop
sub
mov
iret
inc
out
or
mov
pop
imul
add
jl
fistp
xor
call
daa
push
or
jns
aad
push
int3
mov
dec
add
aaa
call
add
test
iret
aaa
cli
mov
movs
inc
xor
lock
mov
call
(bad)
adc
test
test
neg
shl
add
mov
mov
ja
dec
mov
pop
fistp
jmp
fsub
dec
imul
jae
fistp
js
dec
xchg
enter
mov
and
cmp
jle
cmp
sbb
or
or
or
aas
jmp
fnstenv
fldenv
pop
das
xor
test
mov
aaa
or
pop
int3
mov
outs
dec
fdiv
mov
std
leave
repnz
jg
pop
mov
jp
dec
sbb
mov
mov
mov
movs
jo
mov
out
imul
aam
retf
jmp
pop
pusha
cmc
(bad)
sbb
retf
enter
out
ins
xchg
sbb
shr
repnz
cmc
aad
adc
pop
stc
mov
imul
dec
push
mov
sub
stos
add
ror
lahf
mov
dec
push
int3
push
lods
xchg
(bad)
sbb
cmp
jmp
mov
cmps
into
push
movs
rcl
jmp
dec
adc
dec
or
and
fstp
fldenv
mov
retf
ror
loop
sub
mul
je
pop
add
mov
stc
xchg
push
sbb
sahf
lods
cmps
inc
cdq
mov
hlt
sub
mov
pop
cs
call
fistp
hlt
xor
cld
pop
push
test
mov
inc
clc
xlat
fisubr
xor
loop
add
adc
mov
pop
jb
imul
scas
std
adc
inc
jno
cmp
in
ret
pop
pop
lock
mov
or
cmps
or
test
sbb
cmp
mov
clc
lock
jmp
ins
mov
in
cwde
sub
jb
dec
xlat
ret
shr
xor
fadd
std
enter
(bad)
pop
and
cli
fs
stc
pop
mov
bound
pop
mov
xchg
int
or
fcomi
xchg
lea
and
add
out
add
scas
fidivr
sahf
add
pop
push
pop
out
lahf
mov
xor
push
xchg
push
pop
js
lods
push
iret
(bad)
repz
push
push
mov
bsr
jns
jmp
add
pop
mov
or
adc
in
mov
dec
pop
jmp
scas
xchg
pop
out
fwait
clc
xlat
xor
sbb
sar
pusha
test
fidivr
mov
inc
and
out
add
jne
mov
outs
fsubr
xchg
imul
mov
(bad)
in
and
adc
inc
push
add
sbb
mov
pushf
pop
test
and
sub
push
pop
dec
xor
inc
test
fst
(bad)
jbe
std
xchg
js
div
cmc
test
jle
gs
add
movs
(bad)
(bad)
leave
shl
sub
ds
out
push
cmp
call
cli
loopne
xchg
dec
inc
enter
fidiv
cli
fldl2t
movs
das
sub
mov
in
sub
(bad)
retf
je
jle
lahf
mov
pop
mov
test
xor
mov
repnz
push
mov
shr
add
xchg
test
popa
fmul
mov
fild
mov
int3
sub
push
loope
stc
mov
popf
shl
push
out
lods
(bad)
iret
lods
iret
push
ds
xchg
fsubr
mov
shr
xchg
add
out
cmp
rol
repnz
or
mov
xchg
xchg
jbe
das
sub
and
xor
pop
mov
ss
inc
xchg
gs
aad
or
jmp
pop
jnp
xchg
inc
das
adc
xchg
test
or
lahf
lock
push
sbb
mov
pusha
loop
mov
leave
sbb
inc
mov
pop
repnz
pop
les
and
test
leave
jbe
sbb
repnz
aas
call
mov
mov
ret
lods
add
push
xchg
mov
neg
mov
pushf
mov
in
add
mov
jnp
dec
je
xchg
push
pop
sbb
daa
xchg
jne
shr
mov
gs
test
cli
mov
xor
inc
jns
push
fild
push
data16
and
jle
jno
pusha
out
arpl
cmp
fsubr
adc
lock
pop
jns
(bad)
in
cmp
inc
add
pusha
push
lds
sub
loopne
adc
jl
sub
cmp
(bad)
ret
data16
adc
jmp
push
dec
push
shl
test
cmp
dec
daa
xchg
lds
into
inc
jmp
cwde
dec
cli
(bad)
mov
inc
fild
xor
push
sbb
clc
inc
sub
stos
xchg
inc
push
aad
movs
mov
cmp
jb
call
rol
sub
iret
inc
cmp
sub
das
mov
movs
ins
xor
push
sti
movs
and
xchg
out
loop
neg
into
shr
mov
clc
mov
add
sahf
mov
xor
and
clc
je
(bad)
mov
fidiv
jb
dec
push
sti
sbb
dec
(bad)
out
pushf
xchg
fcmovne
xor
or
mov
sbb
arpl
mov
sub
or
and
in
fldenv
push
inc
fidiv
cmp
sub
leave
dec
lods
mov
mov
fiadd
loopne
or
nop
dec
pop
cmp
bound
mov
push
cmp
imul
aad
scas
stc
movs
xchg
sbb
imul
sar
stos
dec
fsubr
out
cwde
not
outs
sub
push
adc
xchg
xlat
in
sub
arpl
js
imul
retf
movs
or
popw
and
loopne
sub
icebp
arpl
call
rcr
(bad)
(bad)
jle
xor
movs
and
xchg
out
push
mov
adc
push
aas
mov
xchg
mov
jbe
jns
out
add
outs
rol
push
(bad)
jae
lahf
cmp
jl
repz
mov
test
mov
adc
jmp
hlt
test
into
cmp
jecxz
push
fxch
cmp
cmps
div
xchg
cdq
pushf
cmp
out
mov
call
pop
dec
xchg
sbb
cmp
xor
mov
cmp
adc
clc
ja
mov
arpl
leave
sbb
push
shr
pop
iret
sub
(bad)
jg
xor
cli
and
and
cmp
xchg
xchg
in
and
lods
sub
cmp
pop
inc
mov
fxtract
push
sahf
shl
bound
(bad)
(bad)
retf
pop
pop
sti
xor
or
call
cdq
int
jb
cmp
scas
mov
push
sbb
ins
inc
loope
(bad)
movs
inc
repnz
cmps
push
adc
sub
xor
movs
cmp
push
(bad)
loope
mov
push
adc
imul
mov
sbb
inc
dec
push
ret
std
sub
into
mul
and
add
mov
adc
adc
mov
dec
sub
jae
or
movs
mov
out
icebp
inc
test
adc
ds
pop
cmp
into
jno
fs
sbb
scas
loop
ficomp
out
sub
inc
xchg
fbstp
fiadd
pop
adc
xor
(bad)
fwait
sub
ret
out
jbe
jo
and
jmp
cmc
pop
sub
mov
lods
call
ins
pusha
das
sub
fcmovne
inc
and
push
pushf
xchg
sub
test
in
shr
jge
clc
or
(bad)
es
aam
cvtpi2ps
jnp
or
and
sub
sti
xchg
fcomp
adc
imul
(bad)
std
dec
nop
rcr
fmul
lds
adc
mov
jne
jno
dec
(bad)
sbb
add
mov
cmp
imul
push
jl
in
pop
cmc
inc
push
xchg
scas
in
dec
(bad)
add
or
sar
mov
and
jl
adc
push
inc
adc
xchg
ret
out
push
loope
cmp
into
pop
xchg
test
jg
sar
ror
mov
imul
inc
xchg
in
push
xor
pushf
out
mov
pop
shr
inc
xor
outs
push
loop
das
lods
cmp
adc
js
push
loope
enter
out
add
or
jbe
xor
mov
mov
cmp
sub
sub
gs
pop
cmp
inc
call
enter
outs
(bad)
push
out
push
fsub
in
push
stos
push
loop
leave
pushf
dec
sub
xor
or
aad
inc
ja
xor
sar
(bad)
mov
pop
inc
gs
jbe
mov
push
xchg
push
xor
add
imul
shl
outs
adc
pop
push
ins
pop
test
in
adc
adc
gs
out
out
and
mov
mov
push
jl
jle
xchg
add
cmp
xor
push
adc
rol
mov
stc
icebp
movs
xor
pop
int
or
sbb
mov
icebp
retf
or
push
pusha
mov
xchg
pop
jg
sub
mov
xor
shl
test
(bad)
xor
inc
inc
rol
add
jnp
bound
fild
pop
inc
iret
pop
test
loope
dec
daa
test
push
sub
and
fisttp
xchg
xlat
pushf
add
mov
inc
inc
pushf
mov
sahf
push
jb
stc
repnz
mov
rol
cdq
es
push
int
pop
xchg
ins
fcom
ds
add
mov
adc
(bad)
(bad)
lods
push
pop
jne
and
jb
dec
adc
ret
clc
(bad)
rol
jb
dec
push
xchg
pop
push
add
push
jl
xchg
adc
push
push
in
push
ja
inc
out
outs
jle
adc
mov
mov
push
mov
jb
cld
outs
enter
or
jnp
sbb
mov
and
cmc
ror
mov
iret
cmp
xchg
into
cmps
mov
sub
sub
in
push
test
sub
or
mov
js
movs
mov
rol
ja
pop
push
test
inc
ficom
pop
pop
jge
or
lahf
cmp
shr
lahf
cmps
ins
inc
into
hlt
xchg
or
cmp
(bad)
mov
xchg
mov
mov
xor
sahf
inc
jge
lahf
leave
mov
out
cmps
push
movs
lahf
mov
iret
(bad)
(bad)
enter
retf
enter
mov
mov
das
jge
and
pop
mov
xchg
lock
inc
pop
or
repnz
cmp
and
sbb
dec
adc
rcr
push
sub
mov
sbb
bound
mov
mov
retf
es
lahf
add
jmp
lahf
mov
jo
xchg
pop
xor
sub
sahf
loopne
ins
sub
ins
cmps
out
out
dec
jmp
mov
sub
or
ins
(bad)
or
push
pop
jb
sbb
(bad)
jmp
lahf
lahf
pop
inc
out
sar
das
lds
push
mov
inc
pop
adc
jns
out
int
mov
xchg
test
mov
pop
mov
sbb
fdivr
movs
mov
daa
(bad)
mov
inc
out
mov
std
ins
enter
movs
addr16
jl
lods
xchg
jp
and
invd
mov
lea
lods
test
mov
cmp
xor
mov
jmp
adc
mov
ds
cmp
mov
popfw
xchg
and
add
lods
sub
aad
aas
cwde
jle
out
(bad)
call
sbb
cmp
outs
cmp
or
popa
std
lock
mov
mov
clc
test
iret
out
jmp
call
fisttp
xchg
ret
pop
or
push
pusha
mov
(bad)
mov
hlt
pop
lock
fbld
movs
push
adc
mov
repnz
push
push
xchg
fist
lea
push
popa
les
test
fcom
xchg
mov
or
test
xchg
inc
iret
or
outs
movs
mov
jl
(bad)
mov
dec
or
push
sub
mov
push
pop
adc
pop
fcom
push
stc
and
imul
or
int3
xchg
test
in
pop
fld
inc
clc
(bad)
sbb
push
adc
ins
inc
and
inc
mov
cmp
or
ret
fsubr
inc
shr
mov
sbb
cmp
mov
js
aam
or
pop
call
push
ins
dec
dec
dec
xchg
dec
loopne
pushf
sub
imul
and
dec
or
push
pop
push
add
xor
sub
pop
out
cmps
add
dec
jnp
aad
jge
stc
mov
pop
ja
push
mov
or
in
mov
in
cwde
adc
pop
leave
gs
test
loopne
pop
mov
dec
aaa
test
xchg
out
cdq
test
cs
inc
sub
movs
gs
icebp
cmp
repnz
adc
push
ja
pop
dec
mov
sbb
add
das
(bad)
jecxz
shl
out
repz
sbb
shr
or
popa
idiv
mov
addr16
mov
mov
out
dec
std
repz
jno
int
pop
fcom
cld
adc
mov
xor
sbb
mov
jge
jb
repz
ret
inc
outs
dec
jnp
pop
add
push
(bad)
push
adc
xchg
cmp
fnsave
leave
add
jmp
dec
xchg
fistp
loope
lahf
or
push
fst
push
sub
dec
imul
jl
mov
fild
outs
into
lods
sub
cdq
fistp
inc
xchg
aas
pushf
sub
or
adc
hlt
mov
aam
bound
xchg
sbb
lea
loope
popa
xor
sbb
mov
sub
or
fldenv
es
iret
cmp
es
ds
ja
push
fisubr
cmp
and
pop
jg
out
nop
std
ss
mov
(bad)
aas
and
js
adc
inc
add
xchg
mov
rol
xor
in
dec
mov
inc
imul
cld
sbb
idiv
mov
add
les
pop
shl
sub
outs
pushf
or
cwde
ret
scas
in
pop
mov
movs
cdq
mov
jl
pusha
inc
cwde
mov
(bad)
mov
push
xchg
or
cmp
cld
add
mov
gs
mov
pop
test
lahf
ffreep
add
stos
fs
or
push
daa
jnp
mov
and
cmp
stos
dec
mov
inc
push
cmps
ror
ja
dec
mov
push
loopne
in
gs
ins
fldenv
mov
xchg
push
pop
xchg
jb
pushf
retf
fwait
lea
cmc
xor
cmp
xor
into
test
ins
push
pop
sbb
fimul
mov
mov
cmp
call
(bad)
jbe
cld
sbb
pusha
not
mov
in
push
in
xor
fcomp
xor
adc
fldenv
push
cli
mov
js
loopne
test
push
mov
fiadd
pop
sub
jbe
jnp
test
inc
lods
sub
cmps
sbb
pop
push
int3
xor
mov
sub
mov
sub
sub
loop
ss
out
jp
test
bound
or
adc
push
push
rcr
cld
pop
bound
cmp
adc
jae
jl
test
push
cmc
scas
mov
(bad)
sbb
xchg
rcl
fiadd
repz
inc
jmp
push
(bad)
sub
or
repnz
and
ins
cdq
push
sahf
call
or
xor
leave
arpl
xor
aaa
movs
add
jmp
test
call
and
mov
clc
adc
scas
mov
lods
cmp
loop
daa
call
mov
pop
jbe
mov
push
sbb
mov
rol
mov
or
mov
add
cmp
mov
lds
xchg
inc
repz
sub
cmp
mov
cwde
push
ds
gs
into
movs
add
or
rcl
(bad)
dec
xchg
jnp
add
out
inc
or
dec
into
test
iret
cdq
adc
out
xor
loope
push
sti
mov
enter
inc
std
cmps
xchg
mov
sub
mov
mov
pop
mov
push
dec
jmp
jne
sub
xchg
(bad)
sti
scas
jmp
mov
loope
add
fst
mov
out
fmul
mov
cmp
shr
fisubr
jmp
daa
sbb
or
dec
mov
jg
js
mov
xor
pushf
scas
std
ins
ins
or
sbb
cmp
dec
out
sub
ret
out
sbb
xor
and
leave
mov
hlt
ror
ins
and
movs
cmp
jo
xor
cli
icebp
pop
mov
xrelease
add
cli
jno
ror
loope
pop
mov
(bad)
sub
xchg
lock
pop
cli
scas
test
dec
pop
call
mov
xchg
sbb
lock
call
pop
ror
sar
addr16
test
inc
mov
retf
ins
push
push
xchg
mov
mov
jne
out
adc
enter
movs
sub
les
(bad)
jno
ret
cmp
and
lss
mov
xor
and
push
inc
call
loope
xchg
pop
xchg
lahf
inc
cmp
in
into
out
lods
mov
or
or
fwait
repz
or
ret
push
int
adc
sub
push
ret
add
cld
iret
dec
fs
aaa
pop
push
cwde
push
(bad)
and
daa
jns
(bad)
jmp
call
retf
dec
aas
sub
sub
jge
aaa
inc
and
sbb
ja
fs
add
mov
stc
scas
je
ins
dec
xlat
xchg
mov
xlat
or
rcr
cmps
or
xor
cmp
imul
movs
push
push
mov
scas
add
cmp
ins
inc
jp
gs
movs
arpl
das
pop
mov
adc
data16
movs
jl
push
xchg
push
jge
lods
push
jo
push
add
mov
pusha
sbb
fs
fiadd
and
lods
shr
(bad)
adc
pop
gs
dec
push
xor
pop
sub
sub
xor
je
stos
pop
sub
dec
jae
and
jae
mov
cmp
or
cli
pop
mov
ret
xchg
sbb
add
(bad)
ja
cmp
shl
aam
int3
inc
push
sbb
dec
test
adc
cmp
xchg
sahf
daa
xor
fnstenv
rol
dec
out
xchg
adc
ins
fisttp
(bad)
test
pop
iret
ja
mov
aam
loopne
dec
mov
mov
mov
scas
cli
xor
dec
data16
ret
ss
jns
mov
xchg
(bad)
pop
mov
push
enter
mov
fnstcw
div
push
psubsb
js
or
rol
mov
ficom
out
pop
sbb
or
dec
mov
and
es
fsubr
adc
inc
ret
sahf
cmp
xchg
(bad)
cmc
mov
mov
or
xchg
xchg
push
mov
xchg
sbb
mov
mov
cmp
push
dec
aad
xchg
cmps
enter
xchg
mov
mov
cmp
cmps
xchg
aaa
cmps
add
jge
adc
xor
mov
inc
sub
add
mov
fnstsw
pop
push
xchg
loopne
add
mov
loopne
jmp
push
ret
sub
jp
push
sub
aam
and
int
push
cs
sti
push
sbb
mov
loope
dec
repz
shl
daa
les
jg
xor
das
pop
or
imul
mov
fsubr
ja
mov
dec
pop
test
jp
sbb
push
mov
pop
mov
jle
gs
adc
loop
leave
gs
push
jne
or
or
sbb
or
dec
pop
test
ins
shr
stc
or
push
lds
or
jmp
into
call
std
jnp
pusha
cmps
fadd
push
call
and
sar
push
ret
xchg
push
imul
inc
jge
test
lods
loopne
inc
jecxz
shl
movs
dec
jle
outs
jno
push
rol
cmp
(bad)
xor
and
aad
(bad)
xor
fiadd
leave
fisttp
hlt
in
jb
push
mov
adc
out
test
aaa
mov
inc
dec
mov
mov
cmp
addr16
jbe
jbe
pushf
shr
xchg
je
pop
sahf
leave
mov
mov
cwde
adc
mov
mov
pop
mov
dec
xor
sub
rcl
fcmovnu
jo
mov
push
or
bound
cmps
mov
jle
and
add
and
cmp
inc
das
jne
sbb
add
sub
inc
pop
sti
test
mov
es
mov
sbb
add
test
dec
leave
shl
shl
inc
data16
loop
push
call
mov
jle
inc
lahf
aad
and
pop
inc
mov
enter
add
jns
clc
dec
fidivr
shr
ret
mov
mov
hlt
push
rcr
fst
or
addr16
cmp
xlat
push
call
mov
std
or
in
rol
and
fucom
test
adc
imul
(bad)
std
test
fcomp
nop
fldenv
push
lahf
xchg
repnz
jg
fcomp
dec
xchg
mov
sub
repz
add
jge
cmp
add
pop
mov
xchg
jno
fst
jg
mov
fidiv
xchg
add
mov
cmps
pop
xor
and
in
movs
fs
dec
dec
push
xchg
adc
xor
mov
mov
pop
dec
icebp
push
fisub
xor
and
inc
cwde
dec
orps
mov
inc
in
in
dec
or
(bad)
(bad)
stc
sahf
shl
mov
scas
jnp
pop
ret
cmp
push
sbb
std
repnz
retf
xor
ins
ja
gs
pop
bound
das
sahf
mov
pop
fwait
pop
pop
lock
(bad)
in
shl
jecxz
cli
cmp
inc
leave
pop
call
clc
xor
xor
mov
jl
jg
iret
xor
fwait
and
cmps
mov
add
mov
retf
xor
call
cmc
push
movs
push
jecxz
(bad)
and
not
rcl
mov
adc
sti
call
enter
arpl
mov
xchg
gs
or
rcr
test
adc
add
bound
mov
inc
jmp
lods
icebp
pop
mov
clc
sbb
mov
sbb
sub
jno
ins
cmps
jbe
xor
(bad)
repz
jg
sub
nop
imul
push
cs
lock
and
cmp
and
jge
outs
dec
add
xchg
xlat
call
cmp
and
ret
sbb
jp
mov
fistp
and
jg
icebp
add
jns
int
or
sub
lods
xchg
cld
(bad)
push
adc
lds
fisubr
xchg
sahf
xor
ja
dec
xchg
outs
or
xor
pop
push
add
in
test
movs
pop
das
adc
test
or
str
aam
movs
inc
ficom
out
xor
(bad)
cwde
call
sbb
pop
cdq
xor
jmp
cmc
cmp
add
push
jbe
adc
xchg
adc
add
or
leave
xchg
ins
push
arpl
arpl
inc
in
sar
pop
or
mov
sar
sbb
jp
dec
arpl
push
jae
mov
sub
mov
cmp
imul
jmp
xor
je
mov
cmp
mov
out
into
in
inc
ja
add
xchg
push
pop
jbe
sub
cmp
jbe
mov
out
dec
pop
jnp
loope
data16
out
(bad)
cmp
mov
(bad)
out
retf
xor
mov
jo
sbb
xor
stos
int3
xchg
jo
cld
inc
dec
outs
ret
mov
cli
mov
xor
cmps
inc
or
popf
out
push
mov
dec
dec
adc
pop
pop
and
push
data16
mov
jbe
jo
je
aad
jmp
or
mov
aam
retf
in
cdq
ror
adc
data16
jge
mov
es
xchg
mov
sub
cmp
test
and
add
adc
das
inc
sub
nop
loopne
into
mov
jle
sub
out
sbb
leave
in
inc
je
je
xchg
test
jne
mov
cmp
addr16
cmc
(bad)
mov
mov
add
fld
dec
adc
addr16
sbb
xchg
pop
pop
scas
jmp
outs
test
mov
mov
dec
rcr
sub
mov
jmp
sub
xchg
xchg
push
int3
and
loopne
loop
pop
cwde
iret
(bad)
push
imul
jecxz
mov
mov
jmp
popf
cmp
push
jl
sti
mov
test
imul
fidiv
in
pop
popf
leave
fsubr
lods
stos
push
xchg
addr16
rcl
lds
(bad)
xor
outs
pop
les
sub
(bad)
fldl2e
jbe
jns
rcl
add
mov
or
or
movs
stos
fcomp
push
jb
sti
neg
icebp
les
in
psraw
mov
out
jbe
adc
shl
sub
or
add
lds
xchg
jecxz
fcmovnb
fcom
inc
enter
mov
dec
cld
fist
xor
leave
das
rcl
pop
pop
mov
pop
mov
bnd
repnz
push
jp
fsub
xchg
popa
pop
push
mov
xchg
add
cmps
retf
bound
jecxz
cmp
js
mov
sub
push
(bad)
lea
add
jg
xchg
xchg
mov
push
fisttp
and
lea
cld
cld
in
sub
scas
jge
inc
jne
mov
test
jb
jbe
outs
cmp
imul
xor
xor
fdivr
sub
jbe
inc
mov
movs
fsubr
xchg
add
aas
lods
scas
pop
shl
mov
cmps
sbb
sbb
inc
lods
jp
pop
shl
out
adc
out
bound
pop
popa
dec
out
add
lds
mov
js
xor
xor
std
cmps
fwait
mov
cmc
inc
repnz
popf
test
pop
adc
shl
or
(bad)
nop
cmp
cs
pop
and
mov
jmp
ret
repnz
int
lock
pop
pop
mov
push
cld
jge
je
sub
inc
not
loop
outs
pop
std
inc
pop
pop
or
adc
mov
test
sub
push
shl
shl
cmp
pop
push
(bad)
nop
jp
icebp
mov
sub
or
add
xor
mov
push
cmp
pusha
outs
xor
movs
in
mov
xchg
push
jle
rol
mov
mov
pusha
aad
and
pop
push
mov
adc
mov
fistp
arpl
inc
mov
movs
jecxz
add
cld
je
call
mov
arpl
dec
push
scas
pop
cmp
dec
cwde
pop
xchg
aaa
outs
fcom
sbb
or
ret
sbb
cli
push
out
push
lahf
out
out
(bad)
jle
movs
nop
aas
lods
in
sub
cmp
hlt
jp
xor
xor
pop
call
mov
call
dec
and
adc
loope
pxor
pop
push
lods
or
leave
enter
jbe
(bad)
sub
sahf
das
cmp
loop
add
lea
out
mov
sub
loopne
(bad)
daa
ss
xor
stos
jge
push
(bad)
shl
test
push
dec
bswap
push
lods
outs
mov
xor
outs
leave
loope
repnz
cmps
inc
retf
push
push
push
ficom
clc
lods
jl
mov
jne
hlt
inc
aaa
lea
loopne
add
push
mov
mov
(bad)
je
inc
inc
add
mov
mov
jg
rol
pop
mov
mov
call
pcmpgtd
ds
rol
adc
mov
sub
cs
jle
sbb
mov
scas
xchg
pop
xor
lds
aam
in
sbb
call
fcmovbe
jbe
ret
and
sub
loope
mov
inc
add
bound
inc
pop
add
jp
aas
jge
dec
imul
xchg
dec
ins
(bad)
and
pop
ss
(bad)
pop
pop
add
mov
imul
jns
ror
xchg
imul
(bad)
and
aad
jge
inc
test
shr
mov
(bad)
out
xchg
cmp
imul
cmp
mov
push
dec
pop
or
xchg
pop
jb
and
push
xchg
xchg
movs
(bad)
fimul
xchg
outs
shl
pushf
push
mov
loopne
push
aas
inc
fwait
fs
int3
ds
or
lods
test
fld
add
mov
enter
jbe
cmp
lock
or
or
aaa
sub
popa
pop
es
mov
pusha
cmp
xchg
fdivr
out
test
xchg
mov
ror
iret
sbb
dec
movs
js
mov
or
test
jno
out
push
mov
daa
jns
jge
mov
stc
ja
xchg
inc
ret
inc
ins
std
xchg
gs
ja
(bad)
retf
rol
and
ds
ret
loope
call
stos
push
std
xchg
retf
aas
mov
or
push
mov
test
fild
leave
pop
pushf
pop
lea
push
xor
and
cmps
adc
push
and
ins
je
pop
xor
push
jo
cmp
ret
pop
xchg
lods
fwait
ds
ss
add
lds
jmp
movs
mov
cmp
out
loopne
pop
cmovne
push
ror
inc
retf
in
ret
or
and
mov
cmps
loop
or
fcmovnu
and
repz
int
push
sub
mov
jge
inc
aas
cmp
xor
inc
push
pop
call
jno
jecxz
jbe
cmp
pop
push
pop
xchg
out
cdq
pop
cmps
mov
adc
jmp
hlt
add
pushf
jecxz
or
ja
pop
mov
das
je
pop
dec
inc
int3
add
adc
push
lock
sbb
jmp
out
fistp
movs
ror
cmp
out
sub
sbb
out
sbb
or
or
ins
and
call
aaa
popf
mov
mov
stc
sub
mov
push
mov
popf
cmp
jmp
push
and
aam
mov
dec
jbe
imul
pop
xchg
out
xor
sub
xchg
ret
sbb
sub
daa
stc
aad
dec
push
lods
fild
cmps
fisubr
je
pop
not
or
inc
ret
xor
sub
test
fwait
das
push
pop
jnp
icebp
(bad)
in
sahf
jmp
or
mov
jae
mov
nop
or
dec
sub
sub
rol
das
sbb
loop
mov
imul
inc
add
add
jge
shl
pop
outs
and
mov
or
jae
or
nop
jl
or
push
xchg
sub
add
jo
and
inc
mov
cli
xor
mov
call
data16
cli
mov
push
enter
movs
xor
pushf
stos
sub
mov
mov
jb
dec
sti
sbb
test
xchg
call
dec
and
pop
test
lahf
add
xacquire
cmp
clc
inc
or
cwde
pop
mov
xchg
call
les
imul
fidiv
or
cmps
add
adc
inc
test
jge
jp
mov
inc
and
adc
sbb
mov
clc
(bad)
out
popf
out
shl
mov
xchg
retf
jl
adc
int3
mov
inc
jo
jb
dec
out
mov
jle
jns
stos
(bad)
sub
xor
add
dec
scas
outs
rcr
mov
in
sub
mov
call
xchg
test
(bad)
pop
mov
scas
push
(bad)
push
fsubr
cmp
in
lock
jge
outs
call
mov
aad
in
or
pop
add
cmc
sbb
lock
dec
cvtps2pd
add
mov
push
mov
adc
sub
mov
jecxz
sar
pop
adc
mov
adc
sub
adc
cli
and
sbb
push
pushf
out
arpl
adc
fild
add
cld
pop
mov
pop
das
ja
lods
inc
scas
in
inc
dec
adc
int
fsubr
js
test
or
scas
stos
leave
cdq
mov
data16
popa
loope
call
mov
xor
jbe
bnd
and
and
adc
pusha
sub
out
test
pop
dec
pop
or
mov
push
jo
and
push
mov
fist
(bad)
ins
js
and
es
or
cli
add
dec
xchg
or
dec
fs
nop
xor
cmp
xchg
jmp
xchg
lods
out
xor
sbb
movs
or
lock
jmp
pop
inc
fisub
fldpi
popa
inc
cs
mov
sbb
and
cmp
popf
add
stos
iret
or
bnd
cmc
(bad)
xor
sub
dec
jge
or
dec
mov
xor
xor
xlat
test
xor
ret
addr16
sub
lock
out
fidivr
pushf
sbb
push
cmp
cmc
mov
loop
mov
pop
xchg
sub
add
mov
add
ins
xchg
mov
out
fwait
outs
pusha
js
pushf
les
jmp
and
cwde
mov
repz
(bad)
xchg
(bad)
xchg
xchg
daa
enter
movs
xor
cmps
dec
jmp
adc
add
adc
xlat
sbb
xchg
push
ss
je
cmps
mov
hlt
jl
pop
mov
enter
in
inc
pop
inc
addr16
out
(bad)
jl
mov
aad
out
out
in
movs
fmul
push
push
xor
pop
lea
shl
or
jle
cs
pop
lahf
mov
mov
pop
mov
out
cmp
adc
mov
inc
push
dec
sti
and
push
daa
pop
test
mov
mov
cmc
inc
or
dec
or
leave
scas
jmp
sbb
cld
ror
fadd
and
jmp
loop
push
retf
jle
jmp
sbb
jne
(bad)
aaa
sbb
ins
inc
out
aas
inc
dec
lds
test
sti
pop
xchg
sbb
mov
and
jg
mov
xor
out
dec
(bad)
imul
sti
inc
ds
es
jecxz
in
dec
push
pop
xchg
push
loopne
mov
imul
xchg
dec
jns
dec
jnp
mov
mov
js
(bad)
not
mov
ret
out
dec
jg
je
addr16
ret
shl
mov
pop
into
push
mov
sub
sub
cmps
sub
cmps
popf
sbb
push
rcr
inc
mul
add
scas
clc
outs
add
retf
dec
cld
in
jmp
push
xor
xor
in
daa
mov
mov
in
call
xchg
mov
xchg
add
test
lds
popf
aam
in
not
iret
push
mov
and
mov
jb
cmp
(bad)
hlt
inc
cmp
dec
push
(bad)
sti
fxch
das
test
(bad)
test
jmp
lds
mov
jne
clc
lahf
rcr
in
imul
or
xchg
xchg
repnz
loop
outs
push
repz
jp
inc
jecxz
pop
repz
sar
aas
jno
aam
and
outs
ss
in
aas
or
adc
out
frstor
dec
push
cs
movs
pusha
into
mov
hlt
stos
mov
mov
(bad)
jnp
pop
test
aas
jle
adc
xchg
xchg
push
frstor
push
inc
sub
push
adc
mov
jl
(bad)
mov
jae
scas
mov
pusha
cmp
aad
cmc
dec
pop
mov
mov
fmul
mov
cli
pop
test
scas
inc
(bad)
call
(bad)
stos
imul
mov
lds
ret
add
repnz
push
mov
xchg
sbb
aad
or
ds
(bad)
cli
call
xlat
shr
sbb
int
leave
or
and
jmp
jne
fwait
pop
jne
and
or
fisub
push
jmp
lods
push
dec
mov
ret
add
jge
or
mov
sub
cmp
pushf
call
and
pop
mov
test
push
mov
les
mov
sbb
xor
std
mov
daa
stos
dec
fwait
ds
pop
loopne
aaa
inc
and
mov
ror
or
dec
push
call
into
inc
pushf
mov
retf
push
das
lahf
adc
test
push
nop
add
and
sub
pop
push
lahf
cmps
adc
jbe
push
ja
sub
push
mov
mov
xlat
sbb
cmp
mov
cmp
xchg
lahf
ror
push
mov
popa
or
or
or
xlat
popf
mov
inc
lea
or
xor
dec
lods
addr16
imul
xchg
sub
jl
sbb
xchg
ins
push
mov
ins
outs
jbe
dec
mov
mov
std
jbe
pusha
push
into
div
leave
test
data16
or
cmp
mov
dec
sbb
pusha
(bad)
popf
repz
popf
xlat
(bad)
mov
in
add
outs
scas
jmp
bound
mov
shl
aad
movs
cmps
gs
xchg
sub
mov
pop
movs
shl
pop
add
mov
ret
sbb
push
mov
jno
push
div
rol
mov
xlat
in
stos
inc
sbb
adc
mov
cmc
mov
in
sub
pop
push
test
mov
push
or
push
ins
outs
mov
xchg
pop
call
dec
pusha
sbb
mov
mov
int3
dec
jns
fmul
sub
pop
ins
mov
xchg
mov
ret
xor
pop
data16
mov
xchg
daa
adc
push
ror
adc
pop
add
or
scas
mov
(bad)
in
ja
(bad)
mov
mov
mov
inc
sahf
fist
xchg
int
fidiv
mov
je
loope
fwait
xchg
or
shl
fstp
test
mov
sbb
push
pushf
dec
(bad)
dec
js
cmp
cmp
aas
pop
mov
les
outs
test
mov
repnz
cmp
sub
fisttp
mov
mov
mov
ja
cmp
popf
jecxz
add
sub
cmp
dec
push
(bad)
out
or
test
add
fbld
pop
sahf
in
and
jns
xchg
cmp
jno
bswap
pop
xor
repz
fcom
jns
pop
jecxz
or
inc
loopne
mov
sub
jge
adc
stos
imul
outs
(bad)
jnp
push
sbb
and
pop
iret
into
in
mov
cmc
enter
adc
cld
mov
loopne
test
rcr
(bad)
mov
and
pop
adc
lds
or
and
xchg
jo
or
sub
(bad)
pop
cdq
jl
lods
pop
iret
jecxz
out
push
cmp
repnz
aaa
jp
call
ficomp
ficomp
sub
xchg
jo
stc
sub
cmp
inc
push
les
add
scas
lea
mov
push
mov
imul
sbb
inc
cdq
cwde
jmp
xchg
(bad)
repz
pop
push
fwait
ret
push
dec
cmp
mov
loopne
push
(bad)
in
sbb
fsubr
cmp
sub
nop
dec
ja
stc
pop
sbb
sub
out
nop
sub
inc
xchg
jae
imul
mov
pop
jg
ss
pop
jno
push
in
stos
cli
fnsave
sahf
xchg
sub
jp
add
js
adc
popa
(bad)
dec
pop
outs
and
sbb
xchg
jl
cmp
sub
call
cmp
addr16
dec
movs
mov
cmps
test
std
dec
(bad)
jmp
push
dec
rcl
iret
inc
mov
test
sbb
cmp
hlt
xchg
mov
cmp
or
test
jecxz
adc
cld
dec
das
ss
pop
jne
xchg
push
mov
mov
shl
fs
jecxz
mov
out
lods
es
jl
adc
retf
std
(bad)
jl
cmp
gs
mov
mov
sub
fimul
inc
cmps
dec
fld
push
cmps
(bad)
inc
outs
jnp
mov
enter
pop
ja
xor
stos
cmp
fnstcw
mov
mov
jecxz
outs
or
pop
fistp
add
mov
xchg
mov
in
adc
dec
ins
push
(bad)
adc
rcr
dec
int3
add
or
iret
mov
jo
(bad)
mov
dec
cwde
loope
push
out
push
mov
gs
push
add
into
clc
(bad)
fyl2xp1
int
cld
addr16
jmp
ret
jge
in
pushf
xchg
test
outs
mov
cmp
movs
push
lds
xor
jb
sbb
push
sbb
aam
fcmovnbe
iret
jns
inc
adc
mov
es
pushw
mov
cmc
std
fbld
lds
lods
bound
jnp
or
add
push
aad
push
daa
mov
cli
jno
mov
inc
fidiv
push
push
pushf
test
mov
loop
nop
push
stc
test
es
cmp
mov
mov
movs
fst
sbb
cli
jno
das
jecxz
rcl
fwait
xchg
adc
jo
das
cs
mov
aaa
popa
sbb
ins
or
add
inc
cmps
je
ins
sbb
mov
int3
fs
cli
daa
lods
aas
repz
jbe
pop
mov
fstp
lods
fsub
jo
xlat
arpl
iret
jnp
push
loopne
xor
cmp
stos
cmp
shr
(bad)
push
inc
inc
cmp
push
shr
pop
fs
popa
jmp
cmp
dec
mov
jno
and
pop
xchg
clc
and
pop
test
jmp
push
xchg
data16
lds
cld
cmp
dec
add
ins
dec
sbb
clc
out
out
or
mov
js
fs
sbb
or
or
sti
and
mov
cli
(bad)
cld
mov
nop
add
mov
xor
data16
add
mov
(bad)
movs
inc
sub
aam
mov
test
das
movs
inc
jbe
mov
jmp
(bad)
in
jp
xor
cmc
cmc
pop
stos
push
lock
pop
icebp
mov
retf
sub
sub
or
call
je
dec
imul
sub
and
ds
xor
sub
fs
and
sbb
popa
mov
inc
adc
jg
imul
and
bound
int3
cdq
cld
cmp
jnp
aaa
test
mov
jmp
push
sahf
pop
mov
jns
imul
loope
cmp
jle
(bad)
out
fidiv
mov
les
xchg
stos
jmp
stos
bndstx
jmp
or
daa
cmp
fdivr
test
cmc
std
sahf
adc
scas
lock
les
out
jl
stos
in
mov
inc
dec
dec
iret
imul
dec
movs
mov
pop
push
adc
cli
(bad)
sub
sbb
fisttp
data16
pushf
or
dec
leave
xchg
dec
fmul
imul
mov
nop
push
fwait
pop
sub
or
pushf
cdq
lock
sar
push
bound
mov
clc
mov
aad
mov
sbb
bound
xor
push
push
inc
lods
cmp
jo
dec
jecxz
pop
ins
push
inc
push
or
inc
call
adc
pop
adc
das
shr
fmul
jl
(bad)
(bad)
(bad)
push
dec
xor
dec
or
adc
dec
out
xchg
jns
lahf
or
ins
hlt
mov
loopne
call
add
cs
dec
add
cli
into
pop
or
adc
lea
neg
dec
pop
int3
loopne
mov
into
lock
fld
fld
cwde
sti
outs
and
ja
xor
out
xchg
and
xchg
fwait
out
add
adc
cs
pop
jnp
cld
jns
js
and
js
outs
addr16
dec
pop
pop
add
daa
enter
xor
into
lds
in
push
dec
shr
dec
rcr
push
movs
and
mov
jge
rcr
cmc
clc
fisttp
loopne
call
adc
js
les
adc
xor
jl
mov
pushf
cmp
test
inc
and
(bad)
mov
sti
add
cmc
adc
imul
adc
repz
fadd
adc
jmp
adc
cdq
push
ret
inc
xor
ret
add
sahf
jmp
cmp
call
stos
xor
ror
out
int
jno
repz
sub
pop
(bad)
xchg
or
aas
push
test
call
test
test
ret
mov
adc
xchg
add
fsub
sbb
dec
popa
mov
out
lods
mov
jmp
std
dec
adc
fsub
push
shl
test
cmc
xchg
push
out
and
jno
jo
or
jle
fs
js
xchg
aad
inc
sti
sbb
mov
fistp
arpl
adc
jle
cmp
cmp
add
xlat
js
sbb
mov
enter
mov
pop
imul
or
jae
mov
rcr
mov
dec
fdiv
adc
sbb
xchg
jmp
(bad)
pop
hlt
fst
lds
push
(bad)
mov
movs
xchg
gs
cli
add
add
sar
stc
rcl
aam
pusha
jmp
or
jg
pusha
sbb
mov
and
and
lahf
out
shr
jle
jge
aaa
pop
cmc
push
aam
jae
or
test
imul
(bad)
sub
sub
add
push
fdiv
jno
mov
and
dec
jb
mov
into
js
cmp
xchg
loopne
fisub
sbb
inc
pusha
cmp
mov
scas
into
push
rcr
push
mov
sti
dec
imul
sbb
and
adc
aam
mov
push
jno
mov
sub
movs
adc
jmp
gs
daa
xor
mov
std
pusha
xchg
lock
pop
mov
jge
shr
pop
or
sub
nop
shr
arpl
int
cmps
lock
aaa
adc
mov
jnp
(bad)
xlat
outs
popf
(bad)
jne
out
push
jle
dec
sar
add
(bad)
and
and
sub
fisub
xchg
imul
sbb
cmp
add
into
movs
xabort
imul
dec
cmps
clc
push
sbb
call
fcmovu
mov
in
jb
test
mov
scas
int
aam
test
ins
sub
sub
or
popf
cmps
push
mov
js
push
fwait
call
pop
push
sbb
inc
push
aaa
bound
or
inc
mov
cmp
mov
sti
mov
gs
xor
enter
sub
in
lods
nop
(bad)
xor
std
outs
mov
sub
aaa
and
mov
cwde
add
dec
sub
fwait
in
dec
outs
sbb
jae
xor
test
std
popf
mov
in
jb
mov
shl
push
dec
cwde
xchg
mov
fadd
cmp
cwde
inc
fdiv
call
icebp
push
inc
jmp
repnz
pop
jnp
fst
cvtdq2ps
fiadd
dec
pop
dec
cmc
dec
mov
fiadd
xchg
and
push
mov
dec
cwde
dec
xchg
adc
push
add
iret
xor
std
out
daa
and
mov
jl
cli
pop
push
aam
mov
scas
aaa
mov
jmp
push
fnstcw
jmp
outs
popf
cmovbe
js
xchg
out
xchg
outs
push
sub
jmp
shl
ja
ins
enter
stc
or
jecxz
add
enter
shr
jne
and
int
sub
int3
popf
mov
fiadd
sbb
jecxz
sbb
ds
adc
xchg
test
mov
shr
xor
push
int3
mov
fwait
push
aad
sub
out
sub
out
sub
xchg
xchg
enter
bound
push
retf
and
cli
jmp
inc
and
xchg
pop
cdq
and
sbb
out
mov
add
inc
push
scas
ins
(bad)
and
sub
fld
jne
cmp
pushf
fmul
xor
cwde
xchg
sub
loopne
mov
cwde
dec
inc
sub
mov
js
mov
jbe
in
gs
aad
neg
imul
cmp
call
pop
test
and
fs
retf
and
xchg
clc
hlt
test
mov
and
xchg
push
mov
lock
leave
mov
xchg
mov
xor
adc
in
add
jne
test
or
pushf
retf
inc
jo
clc
test
fisub
mov
mov
and
sbb
mov
lds
cmp
idiv
push
test
fistp
pop
cdq
es
popa
es
stos
in
data16
cmp
mov
popa
sub
inc
(bad)
xor
mov
loopne
sub
ror
cmps
aaa
mov
mov
mov
push
sbb
sub
dec
xchg
xlat
xor
and
xchg
cli
repz
sub
pop
stos
push
inc
inc
xchg
inc
xchg
pop
mov
les
aaa
add
and
imul
inc
mov
or
add
pushf
push
sub
mov
jp
js
jp
pop
cmps
lods
xor
mov
xor
xlat
fsubr
out
cmp
jge
fwait
loop
(bad)
es
sub
fidiv
fwait
add
lock
into
ror
jo
push
pop
fmul
xor
cmp
test
push
loopne
and
cmp
xor
ins
adc
sbb
(bad)
cwde
push
xchg
in
xor
cli
lods
pusha
pop
mov
or
mov
mov
fld
mov
jp
sub
into
push
dec
push
push
arpl
add
jae
mov
scas
pop
js
add
add
je
in
xchg
retf
dec
mov
out
add
xchg
dec
pushw
mov
aad
ror
xor
clc
mov
out
xor
in
addr16
frstor
aas
mov
cs
push
mov
ficom
aam
out
xchg
test
(bad)
fcmovne
sub
lgs
jecxz
mov
dec
or
mov
jno
call
xchg
add
leave
mov
sub
cmp
mov
dec
push
jp
(bad)
cdq
mov
pop
xor
scas
mov
push
push
xchg
shr
jmp
mov
in
dec
jmp
and
push
nop
addr16
enter
lahf
fs
xor
(bad)
push
or
and
jmp
je
or
pop
les
mov
jmp
scas
push
mov
rcl
mov
(bad)
aam
loope
fsubr
push
mov
jg
sbb
push
inc
cmp
mov
pop
xadd
imul
xchg
mov
jo
or
test
add
add
test
lahf
icebp
pop
push
jb
mov
sbb
dec
lahf
iret
and
pusha
test
push
data16
dec
cdq
ficom
loopne
sub
mov
addr16
jg
cmp
pop
sub
cmp
les
repnz
je
imul
fld
lahf
fdiv
adc
out
fucomp
pop
mov
dec
push
pop
sbb
push
mov
jp
cld
pop
jecxz
push
mov
imul
outs
fnstsw
or
sub
bound
ret
ins
adc
pop
popf
stos
push
sub
mov
ror
es
sub
jb
mov
sbb
jns
push
into
ins
popa
imul
pop
test
les
dec
ret
hlt
out
xor
call
dec
cld
loop
pop
jne
popf
mov
idiv
clc
ins
cmps
mov
lahf
sbb
mov
mov
inc
mov
jecxz
or
shl
and
das
js
add
mul
mov
test
adc
fwait
sti
mov
iret
push
mov
or
or
mov
ins
js
or
enter
jl
and
movs
shr
cmc
mov
sti
add
call
ins
popa
sti
dec
es
inc
test
nop
ror
sbb
dec
in
and
adc
xchg
push
pop
pop
mov
xor
jb
aas
sbb
mul
jb
xor
mov
shl
adc
repz
fs
sbb
push
rcr
mov
pop
adc
outs
outs
mov
and
in
push
popf
icebp
movs
sar
sbb
jmp
push
jp
or
sar
xchg
pop
sbb
sti
call
dec
out
xor
jnp
adc
rcr
daa
cmp
sbb
dec
add
add
dec
test
nop
xchg
push
out
xchg
inc
leave
cwde
inc
les
mov
fs
xchg
adc
retf
sbb
cmps
and
xor
push
lahf
lock
jmp
movs
cmps
stc
ret
shl
daa
pop
jecxz
stc
pop
jge
xchg
xchg
xlat
and
xchg
ja
mov
inc
pop
mov
nop
call
push
enter
(bad)
out
inc
xchg
scas
or
rcl
pop
mov
push
stc
xchg
bound
jle
xor
jecxz
ror
mov
push
xor
hlt
(bad)
imul
aad
cmp
pop
adc
das
push
pop
xchg
jmp
and
pusha
push
retf
pusha
and
and
and
(bad)
dec
nop
xchg
cmp
pcmpgtd
scas
or
scas
mov
imul
shr
stos
push
xor
dec
xor
jno
push
mov
jbe
test
dec
repz
xchg
dec
fld
add
call
loopne
xchg
popa
imul
push
pop
jmp
popa
and
jmp
xchg
jnp
fdiv
call
or
push
jmp
inc
(bad)
sub
jp
repz
cmp
mov
mov
add
xchg
cli
xor
lods
test
add
popf
fs
repz
mov
dec
mov
fcomp
scas
std
fs
test
xchg
lock
push
inc
pop
and
or
inc
pusha
data16
jp
xchg
inc
jno
jg
jnp
and
adc
ins
cmps
js
and
ins
sub
addr16
ins
fmul
cld
inc
fstp
data16
(bad)
call
cmps
add
icebp
call
fld
jne
inc
shl
in
into
(bad)
imul
mov
dec
(bad)
fistp
mov
data16
fs
push
inc
xor
popa
sub
pop
cmc
cmp
jl
jp
pusha
loop
mov
lock
or
adc
fidiv
sub
loop
jnp
fldln2
ret
and
inc
push
movs
cmps
pop
mov
pop
ret
pop
push
push
pop
stc
push
mov
cmps
xor
push
test
scas
imul
ds
fbstp
cmp
popf
bound
and
and
loopne
cli
(bad)
mov
gs
xchg
mov
pop
cmp
outs
ja
in
call
jp
mov
loope
les
add
daa
mov
xchg
and
iret
mov
ror
hlt
adc
push
loope
mov
cmp
popa
dec
mov
push
shr
cdq
add
sub
leave
cmps
push
lods
repnz
dec
in
cmp
imul
and
adc
or
dec
mov
jmp
fdiv
xlat
add
xor
mov
fs
ror
mov
inc
(bad)
push
and
cwde
add
sbb
in
fidiv
push
out
out
daa
js
loopne
pusha
mov
add
gs
ins
fstp
mov
mov
add
add
push
jle
pop
mov
outs
sbb
lods
inc
xchg
imul
scas
dec
gs
mov
jmp
xchg
push
js
fsubr
daa
pop
fs
xchg
out
lahf
push
es
dec
mov
jp
push
and
pop
ror
repz
mul
idiv
shl
aaa
outs
in
push
inc
push
xchg
dec
mov
lock
cmps
rcl
pop
rcl
or
jns
ja
in
popa
pop
loope
inc
xor
shl
xlat
fadd
jp
or
pandn
sub
mov
mov
fwait
or
mov
(bad)
(bad)
push
jge
pop
jp
push
loop
sub
mov
mov
ret
repnz
xchg
int
aas
mov
inc
or
aaa
mov
retf
inc
push
pop
(bad)
xchg
fcmovu
inc
inc
jnp
imul
outs
or
push
hlt
(bad)
in
pop
sub
(bad)
shr
xchg
adc
xor
push
ret
shl
rcl
iret
or
push
inc
and
xor
pop
adc
je
in
cmp
mov
dec
enter
sbb
cld
popf
adc
xor
sbb
pop
or
push
pop
add
inc
fwait
xchg
rcl
dec
or
lds
xor
push
dec
jne
add
aam
add
push
push
pop
pop
cld
sub
fstp
push
std
xchg
push
mov
out
sub
dec
xchg
mov
mov
mov
mov
nop
dec
add
arpl
shr
fbstp
pop
jp
retf
mov
mov
pop
neg
mov
xlat
mov
jmp
sbb
(bad)
fcmovnbe
push
pop
adc
cli
lahf
or
pop
pop
mov
movs
shl
sub
add
es
cmps
pop
cmc
out
mov
popa
push
dec
mov
jnp
mov
xchg
cld
sbb
jle
pop
pop
jo
mov
cmp
sub
fwait
xlat
in
mov
int3
jnp
push
sub
jl
mov
xchg
sub
gs
mov
popf
mov
iret
data16
js
jmp
(bad)
cdq
stc
es
sub
sub
jmp
iret
or
pop
bound
fcmovne
push
int3
shl
retf
jle
inc
gs
or
jp
in
xor
std
mov
add
sub
lds
cmp
retf
rcr
fscale
adc
ja
lock
ja
outs
jmp
sbb
lea
das
fnstcw
pop
out
jmp
ss
xor
and
jae
jb
xchg
jmp
jg
jo
adc
sbb
daa
cwde
inc
movs
pop
mov
sti
test
inc
mov
les
adc
xor
jmp
loop
push
or
xor
lea
pusha
test
cmp
mov
pushf
add
jae
inc
out
mov
and
adc
jo
xchg
xor
adc
xchg
imul
scas
outs
pop
movs
jo
mov
sbb
arpl
int
retf
add
dec
fsub
mov
push
int
push
cmp
(bad)
stc
lea
dec
or
push
fchs
cmc
in
inc
movs
loop
mov
or
pop
or
ret
rcr
jecxz
jl
inc
(bad)
fld
fcos
ins
cs
inc
daa
enter
or
add
mov
lds
ror
pop
imul
stos
mov
stos
test
loopne
pop
dec
mov
push
jmp
cmp
bound
cmp
fs
(bad)
bound
fdiv
fucomp
mov
aam
dec
and
jo
repnz
sub
das
mov
mov
inc
mov
mov
inc
test
fimul
call
imul
pop
les
push
xor
add
pop
fs
adc
and
xor
or
inc
jmp
xor
mov
test
je
mov
nop
ds
xchg
ja
xchg
test
movs
fisttp
or
jmp
cmp
or
add
inc
stc
aaa
inc
xchg
not
inc
push
test
or
addr16
push
retf
jl
push
iret
dec
mov
aas
jmp
and
retf
test
mov
shr
lock
cwde
jo
fcomp
fistp
data16
mov
ss
xchg
aaa
and
inc
adc
push
push
xchg
sub
and
pop
shl
inc
fcmovnbe
mov
jmp
inc
dec
xlat
aas
jne
jg
dec
push
mov
mov
cmps
cmps
mov
inc
ds
mov
outs
xchg
stc
pop
xor
adc
or
cs
(bad)
dec
in
pop
push
int3
xor
cmp
stos
pop
(bad)
pushf
xor
mov
xchg
and
adc
cli
pop
mov
mov
rcr
jle
out
scas
into
push
xchg
js
adc
rcr
aas
jae
out
push
loop
mov
lds
dec
xor
xchg
xor
or
xor
pop
sbb
cmps
xchg
fcmovbe
movs
test
arpl
mov
and
or
mov
sbb
imul
xchg
push
fdiv
sub
sub
jmp
js
or
into
xor
aas
or
jb
cld
test
enter
je
cmps
or
jle
int3
xlat
cmc
add
sti
das
sbb
icebp
push
or
(bad)
neg
mov
pop
cmovge
retf
jge
mov
jns
pop
das
(bad)
(bad)
clc
cmp
xchg
test
cmc
sbb
mov
out
es
ss
cmp
imul
repz
shl
inc
into
movs
loope
sahf
sbb
rcr
inc
adc
(bad)
es
pop
(bad)
fcmovnbe
cmps
imul
ins
dec
in
imul
out
fs
push
mov
(bad)
push
adc
cmp
and
or
int3
int3
pop
bound
pop
pop
in
cmp
lods
jmp
clc
dec
inc
adc
mov
push
int
pop
mov
in
jecxz
mov
inc
mov
mov
xor
jge
push
mov
fs
pusha
shl
jl
jno
sbb
enter
cmc
sbb
pushf
lock
mov
retf
cmps
inc
fldenv
mov
sbb
sbb
jg
xor
mov
call
mov
adc
push
iret
pusha
cwde
inc
sub
in
and
push
addr16
addr16
pop
(bad)
std
mov
mov
imul
inc
iret
(bad)
mov
jge
inc
xchg
out
or
loopne
and
int
repnz
pusha
data16
dec
ret
mov
or
xor
mov
sbb
sti
cmps
sti
sbb
ret
and
xchg
mov
shl
sbb
pushf
add
fidivr
dec
fidivr
fdiv
adc
icebp
retf
mov
xor
pop
outs
adc
mov
jl
in
add
rcr
test
std
dec
or
(bad)
rcr
sub
mov
and
(bad)
scas
adc
jnp
es
mov
jno
push
add
or
ja
into
popa
ins
jns
retf
test
mov
jb
sub
out
bts
(bad)
cmp
test
ss
sbb
je
xor
(bad)
sub
pop
inc
mov
xor
mov
inc
stc
rol
or
and
ds
aam
mov
pop
lods
push
mov
or
in
jb
daa
test
nop
ja
cs
stos
ins
out
data16
inc
dec
xor
add
cmp
sbb
inc
cdq
mov
fst
ins
jecxz
clc
pop
mov
pop
test
nop
pop
mul
inc
test
inc
push
add
leave
imul
lds
idiv
imul
in
pop
sbb
push
mov
(bad)
(bad)
sbb
aad
mov
pushf
out
nop
adc
dec
jge
or
or
rol
jecxz
in
add
jge
loope
(bad)
sub
pusha
not
pop
stc
cmps
jle
dec
push
and
add
retf
pop
call
sub
imul
xor
pop
add
in
inc
sbb
bound
rcr
scas
(bad)
fisttp
popf
js
aas
cmp
les
push
push
cld
call
mov
push
div
pop
pop
mov
xchg
and
pop
test
loope
pop
cld
fcom
push
mov
push
jne
popf
push
in
jo
inc
dec
(bad)
clc
jmp
pop
dec
dec
mov
fistp
push
sub
push
and
mov
shl
fadd
push
push
and
je
mov
sahf
es
mov
xchg
jno
or
mov
cwde
xchg
out
cmp
mov
pop
cmp
push
retf
adc
sbb
jnp
and
sub
aad
mov
add
sub
into
and
outs
scas
push
stos
sub
push
test
push
cmp
int
and
test
push
retf
in
sahf
inc
(bad)
or
add
icebp
xchg
adc
mov
call
pop
call
and
dec
mov
push
outs
in
add
xchg
cmp
sub
cwde
mov
lds
or
inc
xor
fist
sbb
inc
scas
add
imul
ror
xor
stos
mov
jbe
xchg
es
dec
xor
loope
dec
movs
loopne
ret
mov
add
sar
ss
pop
popa
inc
lea
test
in
out
mov
repz
inc
enter
js
out
add
sbb
pop
xlat
pop
fldcw
mov
adc
(bad)
dec
push
push
ds
idiv
dec
sub
pop
adc
mov
push
adc
ins
xor
push
xor
lock
lods
out
xchg
loopne
or
cmp
jmp
xchg
fmulp
(bad)
fldcw
test
fild
stc
jo
clc
sahf
cmp
lds
mov
adc
jnp
sub
fisttp
sbb
pop
fild
pminsw
inc
gs
pop
arpl
sub
ins
inc
mov
pop
(bad)
outs
ja
pop
je
or
ja
sub
in
test
test
fistp
cmps
inc
nop
mov
gs
and
mov
mov
rcl
cdq
imul
pop
call
fnstsw
retf
dec
test
in
call
mov
xchg
pop
jne
ja
xor
cmp
dec
mov
dec
div
pop
repz
sub
cmp
gs
enter
push
dec
sub
stos
pop
dec
sbb
(bad)
xor
mov
enter
xchg
jmp
rcr
aas
sbb
mov
xchg
test
push
add
sbb
adc
or
fidiv
ss
xor
bound
pop
pop
and
addr16
jbe
ret
xor
add
jmp
sahf
ret
out
pop
adc
push
aad
sub
loop
mov
push
xchg
frndint
sub
push
fdivr
fisubr
cmps
jmp
jecxz
dec
cld
ret
mov
cdq
loopne
test
test
pop
jnp
lea
popa
sub
push
push
fsubr
jg
cmp
xchg
inc
jle
pop
push
mov
ret
stc
mov
and
clc
in
(bad)
lea
(bad)
into
fnstcw
stos
jp
das
lds
pop
and
outs
pop
push
fmul
mov
xor
add
out
mov
aam
(bad)
sbb
xor
(bad)
loopne
sbb
ds
(bad)
outs
mov
lea
test
xor
jns
loopne
aam
pop
xor
and
les
inc
(bad)
shr
mov
out
add
lahf
cmp
push
hlt
aad
popa
cmc
aad
xor
cmp
popf
push
je
mov
ud1
cmp
(bad)
fmul
stos
xor
dec
daa
js
pop
(bad)
aaa
popa
mov
arpl
add
or
test
test
test
and
(bad)
mul
lds
cmps
dec
push
aad
push
into
fprem1
retf
cmc
xchg
(bad)
daa
stos
xor
add
shl
xor
dec
rcr
inc
xchg
mov
sub
adc
xchg
lea
push
xlat
mov
out
loopne
arpl
iret
xor
fiadd
(bad)
js
(bad)
(bad)
xchg
cmp
add
clc
jmp
pop
loopne
jo
cmc
push
loope
sub
mov
sbb
sub
les
lss
cmc
loop
and
lds
sub
gs
hlt
jle
sub
daa
cdq
enter
stc
mov
jae
and
jle
lahf
sub
xor
adc
repz
pop
mov
mul
cs
push
popa
xor
loopne
pop
fwait
mov
iret
popf
cmp
dec
mov
retf
adc
push
jg
mov
cdq
loope
push
dec
xchg
cld
(bad)
in
mov
mov
add
imul
jmp
lahf
pop
shl
pusha
ja
pop
inc
shl
stos
cmp
jae
jg
rcr
push
stos
retf
iret
xor
dec
pop
repz
aad
or
sbb
outs
jg
mov
mov
xchg
push
mov
stos
and
sbb
mov
add
lods
push
adc
inc
(bad)
jmp
pop
mov
lea
adc
into
jl
and
xor
lock
scas
movs
xor
jecxz
cmp
dec
loopne
dec
and
xlat
shl
or
pop
push
sar
mov
je
dec
mov
pop
retf
xchg
inc
pop
pop
cmp
sbb
(bad)
push
pop
inc
xchg
pop
sub
jmp
pop
dec
popf
test
aaa
pop
scas
stc
inc
cli
out
mov
jns
retf
out
xchg
xchg
add
iret
mov
and
sahf
adc
loop
jp
cld
xor
cmc
dec
pop
test
stos
retw
ss
cmp
jae
jbe
xchg
ds
pop
xor
jmp
inc
sub
stos
sbb
jmp
dec
jno
out
cmp
sbb
sub
sbb
sti
add
and
out
in
mov
nop
mov
jae
xor
push
(bad)
pop
mov
test
daa
jmp
jnp
or
mov
pop
push
xor
add
fist
xchg
push
test
jmp
fld
loopne
cmp
jge
push
cmp
lock
pop
(bad)
cmc
xor
mov
rcr
bswap
mov
jnp
pop
sbb
leave
das
push
mov
int3
data16
or
or
cmc
call
outs
push
fs
stos
ret
cmps
sub
mov
jle
xor
div
or
retf
loop
and
xor
jmp
push
sar
lea
push
mov
mov
lea
stos
jmp
xchg
add
push
pop
add
pop
dec
aam
retf
das
or
add
lea
xchg
pop
xchg
xor
in
pop
adc
and
push
shl
test
jmp
movs
jbe
mov
rcl
xchg
shr
push
xchg
ss
lods
cmps
int3
xchg
inc
or
fs
jns
xor
(bad)
cmp
xchg
mov
mov
fcomp
call
inc
or
pop
or
jg
test
cli
shl
and
mov
mov
adc
fisttp
dec
mov
pop
xor
xor
lods
int
push
push
dec
fdiv
bound
inc
cmp
push
(bad)
sbb
test
lock
pop
fldenv
push
nop
cmp
(bad)
addr16
aad
adc
pop
push
cmp
lock
sbb
mov
adc
fmul
push
mov
push
xchg
mov
xchg
or
daa
call
and
nop
xor
or
jns
mov
jmp
mov
cwde
std
mov
mov
dec
leave
cmps
xor
ja
inc
jnp
xchg
adc
(bad)
stos
dec
or
cmp
dec
fild
sub
push
loope
mov
pop
cmp
pop
fwait
sub
fist
repnz
dec
fist
outs
in
retf
in
out
ss
jae
and
jg
fs
jecxz
sub
jle
pop
mov
test
cmp
fiadd
push
mov
and
aad
mov
std
adc
sbb
inc
inc
push
sti
ficomp
dec
mov
int
push
jmp
sub
dec
cmps
add
xchg
push
cmc
mov
fist
imul
lods
scas
or
pop
es
xchg
xchg
adc
cmp
and
ret
cmps
ins
icebp
adc
xchg
ja
mov
fs
ss
or
stos
jmp
stos
push
ret
pop
arpl
outs
sbb
push
xchg
jge
inc
jb
cs
enter
inc
(bad)
(bad)
ds
pop
out
inc
xlat
fadd
imul
aaa
pushf
pop
mov
js
int3
xor
int
mov
xchg
(bad)
in
xor
je
stc
mov
dec
(bad)
mov
cmp
icebp
pop
sub
adc
cmp
outs
jb
adc
jmp
mov
lock
push
jno
mov
xor
ret
mov
(bad)
cmp
dec
mov
(bad)
rcl
xor
add
mov
jmp
and
sti
xlat
adc
and
fsubrp
aas
rol
mov
aas
cmc
outs
into
pop
call
cld
nop
pop
add
pop
xchg
push
sar
inc
xchg
adc
jge
mov
stos
ss
in
gs
in
or
pop
in
or
mov
cmp
aad
lea
cmp
and
and
push
xor
lea
(bad)
jbe
cld
or
dec
sar
(bad)
pop
mov
xor
push
aaa
add
ret
jg
in
or
dec
fild
add
loop
pop
in
xchg
lea
push
lods
add
cld
sbb
dec
gs
pop
mov
add
lahf
sbb
mov
nop
in
pop
lods
push
loop
ds
jno
add
test
ja
adc
into
test
(bad)
js
dec
xchg
mov
pop
mov
jne
and
repz
sar
cdq
lea
mov
and
mov
add
ins
movs
ret
imul
stc
sub
in
push
inc
dec
cmp
xor
dec
into
push
popa
cld
pop
xchg
pop
pop
and
push
fld
lods
sub
push
adc
pop
mov
xchg
test
xor
fld
cmc
inc
adc
push
sub
mov
dec
or
repz
les
clc
mov
dec
das
int
rcl
and
inc
stc
mov
popa
xchg
rcl
xchg
mov
mov
fnstsw
pushf
scas
and
out
das
cmps
xlat
xchg
inc
jmp
mov
or
and
sbb
mov
xor
pop
ficomp
ret
sub
mov
jae
movs
icebp
(bad)
pmullw
inc
sbb
cwde
popf
popf
(bad)
xchg
mov
outs
cmp
pushf
push
dec
add
test
imul
mov
movs
addr16
mov
stos
outs
jb
push
mov
mov
xchg
cdq
mov
jno
js
ins
or
xor
jnp
jge
daa
push
hlt
adc
cmp
int
mov
ret
pop
pop
repz
inc
dec
out
mov
sbb
(bad)
out
inc
cmp
xor
lock
mov
dec
outs
lods
sbb
or
mov
std
arpl
leave
shr
movs
xor
push
retf
mov
xchg
lahf
ret
sahf
add
(bad)
pop
add
adc
xchg
je
fnstcw
xchg
sar
cmp
inc
iret
inc
(bad)
pop
mov
push
push
cld
(bad)
xor
push
cwde
cmps
retf
arpl
cmp
inc
bnd
adc
pusha
xchg
in
jns
rcr
fbld
les
rcr
jp
pop
inc
bound
sub
pushf
jge
push
jmp
mov
(bad)
iret
adc
mov
pop
add
dec
movs
mov
sub
jb
jno
xchg
ror
mov
fldcw
mov
jne
or
out
jo
pop
xor
aad
sub
ror
imul
xor
cs
lea
pop
stos
fcomi
and
xor
jo
fisubr
xchg
pop
push
xor
pop
and
xchg
loope
push
sbb
xchg
sbb
imul
cmp
lods
test
stos
imul
icebp
aam
out
mov
sub
mov
into
adc
shl
and
pop
adc
jbe
cmp
cmps
outs
shl
cmps
jmp
(bad)
ss
add
mov
retf
adc
and
mov
imul
js
pop
ins
jg
add
hlt
iret
iret
jle
and
inc
loope
and
push
enter
dec
cdq
sub
repnz
cmc
lods
inc
mov
cwde
nop
xchg
cmp
mov
repz
mov
xchg
jmp
retf
add
data16
lds
popa
rcr
jmp
aad
jnp
xchg
jle
pushf
jo
repnz
ins
loop
rol
in
rol
and
push
pop
pusha
ror
jnp
sub
push
test
pop
enter
adc
jl
cdq
push
mov
jo
retf
je
adc
push
sbb
(bad)
icebp
cs
out
mov
loopne
hlt
and
pop
add
iret
leave
gs
mov
cmp
fcom
int
jecxz
and
xchg
xor
in
cs
mov
xor
in
dec
pop
into
mov
sbb
sbb
jmp
mov
inc
retf
add
out
in
lods
aam
ss
mov
or
out
push
fcom
ficom
dec
or
bound
rcr
into
movs
and
dec
cli
xor
mov
call
inc
fnstsw
ror
pop
push
sub
int
cmp
cli
das
ins
jae
mov
mov
out
cmp
add
and
paddusw
and
xor
sbb
sub
sahf
sub
arpl
jmp
lahf
xlat
aad
mov
aas
xor
call
xor
hlt
jns
pusha
xchg
cmps
dec
das
push
mov
cmp
inc
movs
into
daa
je
dec
(bad)
jne
cmp
jl
loopne
retf
pop
pop
fsubr
mov
ret
shl
dec
and
lods
mov
jmp
adc
mov
cmp
out
(bad)
dec
lahf
shr
jb
fisttp
mov
and
test
lds
adc
mov
pop
xchg
icebp
fidiv
out
inc
and
les
pop
adc
xor
movs
adc
cwde
in
out
sub
sbb
adc
mov
jl
ins
lahf
sub
ds
jle
mov
mov
or
mov
sub
movs
cmps
or
int
pop
mov
ficomp
jge
cld
aas
dec
sub
mov
adc
jmp
scas
mov
mov
outs
dec
lock
xor
loopne
jno
push
mov
int
xor
outs
shl
call
jmp
aam
sub
fucom
loopne
popf
jae
mov
push
jne
or
in
sar
sbb
jb
sar
ins
sub
jmp
xor
lea
cmp
(bad)
(bad)
cmp
jbe
sbb
xchg
fcmovne
jle
(bad)
sub
sub
scas
xchg
and
mov
inc
xchg
icebp
outs
mov
inc
inc
fild
cmp
fstp
dec
daa
dec
je
and
sbb
test
add
nop
sbb
dec
dec
add
jl
aas
pop
push
nop
add
movs
xor
jnp
sub
push
mov
fnstsw
mov
xchg
sbb
test
outs
inc
jae
mov
aad
jmp
xlat
xor
test
xor
bound
(bad)
mov
jle
and
into
pop
hlt
cli
cmp
sbb
jg
cmp
push
popa
test
or
call
sbb
inc
fstp
test
sbb
inc
pop
dec
loope
sub
adc
sub
pop
xor
test
pop
mov
outs
mov
mov
out
or
sti
in
pop
pop
jb
jmp
sbb
xchg
jb
imul
push
dec
rcl
lock
mov
jg
dec
jge
mov
dec
nop
add
jl
xchg
(bad)
out
inc
shl
test
ret
or
inc
dec
pushf
retf
pop
fcmovne
xchg
in
xchg
add
adc
cdq
dec
scas
outs
ret
(bad)
stos
add
das
fcomp
in
shl
sti
mov
ins
inc
sub
dec
loopne
xchg
xor
hlt
mov
loopne
out
cld
fsub
cld
add
ins
cmp
push
cmp
(bad)
call
cmp
and
sub
mov
inc
ret
jmp
mov
retf
jecxz
xchg
xor
add
mov
mov
inc
jge
dec
imul
and
fidivr
mov
push
push
or
mov
dec
sar
lahf
mov
popf
jb
dec
add
jmp
push
xchg
ret
fistp
mov
mov
dec
sub
lock
popf
and
sbb
or
xchg
sbb
mov
scas
xchg
add
inc
mov
dec
sub
neg
sub
or
fdiv
mov
xchg
test
loopne
in
pop
retf
and
mov
neg
or
jmp
retf
test
push
mov
pmulhuw
data16
dec
mov
outs
mov
movs
gs
shl
mov
push
pop
rol
loopne
test
push
les
and
xor
lahf
das
mov
jnp
sbb
(bad)
ss
mov
mov
dec
mov
jmp
out
pop
mov
iret
lahf
adc
mov
cmp
sub
(bad)
bound
cmp
xchg
arpl
add
int3
or
xchg
jmp
xchg
mov
aam
xchg
outs
fld
lahf
mov
push
xchg
mov
(bad)
pushf
ins
outs
jmp
mov
jb
mov
or
mov
fistp
lods
test
das
mov
inc
out
or
or
std
rol
das
jecxz
sbb
retf
sbb
jl
call
mov
call
jecxz
popf
popf
inc
and
pop
in
dec
xor
pop
jns
xor
aaa
mov
dec
jmp
or
jnp
outs
aad
adc
mov
pop
cs
inc
cld
iret
ss
xchg
sbb
mov
mov
xchg
jecxz
mov
jb
add
pusha
in
arpl
rol
lds
mov
fs
push
push
sbb
outs
fdivr
lea
mov
icebp
loopne
lods
in
test
(bad)
jge
mov
mov
adc
jl
jb
and
sar
lock
mov
adc
stos
ins
jne
cdq
fistp
in
push
sbb
adc
icebp
cli
fcomp
or
pop
stos
sub
jecxz
xor
mov
repnz
push
push
pop
shl
mov
lea
jbe
or
sub
jp
in
loopne
mov
xor
cmp
mov
xor
data16
int3
dec
shl
ret
fidiv
xchg
test
test
inc
sbb
dec
imul
fnstsw
(bad)
mov
ins
aam
enter
cmp
fs
pop
xchg
lods
call
push
jo
or
out
or
sub
repnz
mov
push
lock
les
jg
sbb
inc
mov
xchg
cmps
iret
jecxz
xchg
bnd
sti
or
outs
into
xchg
sub
ja
fnstenv
pop
add
lods
mov
imul
ret
add
inc
jb
repnz
xor
xor
lea
aaa
imul
inc
fild
add
jmp
test
jecxz
pop
pop
fsubr
inc
out
xor
movs
jmp
and
mov
iret
rcl
jg
mov
mov
retf
div
lods
dec
cwde
add
adc
in
retf
sbb
pop
xor
mov
div
test
aaa
hlt
loop
scas
sub
test
dec
mov
mov
sbb
addr16
mov
fwait
jne
mov
sbb
arpl
addr16
mov
push
dec
xor
or
shr
dec
test
aas
hlt
adc
jo
test
push
dec
add
icebp
hlt
fucomip
and
aad
or
outs
ret
inc
inc
sbb
push
inc
ss
push
fs
inc
loope
shr
push
cmp
xchg
pop
imul
push
add
call
leave
xor
xlat
and
cmp
push
push
sbb
loopne
pop
(bad)
push
inc
pop
xor
dec
xchg
std
out
imul
cmps
pusha
adc
arpl
push
cmp
mov
jg
xor
sbb
retf
sbb
adc
ja
inc
ins
cmp
xchg
xlat
xor
sbb
shl
xchg
mov
cmp
mov
pop
es
pop
xchg
ss
push
pop
in
rcr
jp
jg
and
mov
and
sbb
xor
dec
gs
jmp
mov
lahf
jb
add
jb
jo
cli
xchg
push
pop
add
shl
mov
into
mov
inc
pop
cli
mov
(bad)
or
xchg
enter
sti
xchg
mov
ja
rcr
neg
call
xor
jne
or
mov
popa
(bad)
mov
les
test
cmps
inc
repnz
add
out
(bad)
cmp
jmp
cmp
mov
cmc
(bad)
xchg
psubsb
int
into
jle
mov
std
sti
enter
das
rcr
sub
jmp
pusha
push
jmp
jae
mov
xchg
jmp
call
xchg
cmp
mov
idiv
ja
(bad)
ds
mov
(bad)
cmp
mov
xor
test
jge
mov
jns
mov
mov
xchg
in
and
push
rol
sub
stc
in
mov
add
and
fwait
mov
int
dec
imul
popf
jmp
dec
lahf
mov
jg
or
inc
out
push
mov
movs
cmps
pop
mov
jbe
pop
ins
mov
imul
enter
retf
xor
arpl
dec
sub
push
sbb
add
cmp
je
add
(bad)
addr16
add
add
aas
jl
jmp
fwait
cld
sbb
sbb
retf
fucomip
int3
ss
add
sub
mov
mov
mov
jno
jge
cmp
lock
ss
inc
or
in
ficomp
in
lods
mov
in
push
imul
repz
mov
test
mov
jnp
test
ins
mov
pop
das
push
mov
stos
or
test
xor
xor
jo
aaa
jecxz
sub
std
in
mov
mov
cwde
(bad)
adc
mov
pusha
sahf
sbb
mov
push
ins
sub
in
add
loop
pop
add
and
popf
add
frstor
sbb
and
mov
out
mov
or
push
dec
nop
add
dec
sbb
mov
pop
xor
or
mov
pop
sbb
xchg
int3
jb
push
sub
pushf
shl
mov
sub
mov
jmp
and
pop
jnp
int3
iret
dec
mov
inc
gs
cmp
out
push
pop
leave
aas
add
jae
(bad)
aaa
mov
scas
je
sub
movs
out
or
mov
loop
add
ss
cmps
outs
cdq
js
pop
mov
sbb
cmp
repnz
stos
outs
fsubp
xchg
pop
push
jp
imul
pop
in
xor
lods
test
and
inc
outs
or
nop
cmp
mov
das
push
mov
movs
jle
add
push
lods
mov
imul
add
test
and
punpckhwd
test
mov
test
push
and
lds
mov
not
mov
cli
jle
je
pop
adc
ins
std
mov
pop
test
add
shr
dec
add
jnp
or
xchg
retf
or
jp
fbld
push
movs
out
adc
rcl
jns
mov
push
ret
ins
data16
cmps
fwait
push
lahf
or
inc
repz
or
mov
nop
push
in
fs
in
(bad)
xor
jp
popf
adc
add
adc
sahf
icebp
ins
pop
jmp
outs
add
cdq
nop
inc
retf
or
psubsw
lea
imul
pop
pop
cdq
out
ins
call
scas
xor
out
push
xchg
stc
jns
call
add
and
lods
adc
test
std
(bad)
inc
mov
dec
pop
sub
mov
js
push
sbb
out
fldenv
fistp
push
daa
mov
dec
rcl
xor
lock
addr16
lods
adc
mov
jne
jmp
mov
jo
popf
ds
iret
aaa
pop
shr
xor
cmp
in
and
test
mov
push
inc
retf
push
lea
es
jns
push
wrmsr
cld
push
xchg
xchg
jnp
xor
jecxz
pop
dec
add
mov
or
or
inc
fnsave
sbb
inc
mov
or
call
push
aaa
je
adc
xchg
ins
mov
out
pop
imul
xchg
test
mov
rol
fs
pop
not
pop
jle
movs
mov
out
cs
test
mov
rol
mov
and
mov
fdivr
xor
add
jno
sub
inc
repz
fs
js
cdq
and
call
loope
int
sub
fs
mov
pop
jmp
or
cmp
sbb
mov
pop
push
add
push
lahf
adc
and
pushf
aaa
fxch
mov
mov
fild
cwd
pop
push
add
lds
in
ret
jno
stc
pop
cmp
or
pop
iret
jge
fdivr
sbb
fcomi
dec
call
mov
ja
cmp
sar
pop
leave
int
jl
cs
lock
test
test
jmp
das
ins
push
shl
aaa
add
bound
cmp
cmp
sbb
pop
mov
movs
movups
sbb
lahf
or
mov
shr
or
fnstenv
and
cmps
add
pop
mov
mov
test
test
adc
cmc
mov
dec
jg
div
xchg
push
cwde
mov
add
and
fdivp
sbb
aaa
loop
or
mov
adc
loop
add
add
sti
dec
push
add
cmp
pop
adc
call
repz
xchg
xchg
fiadd
bsf
adc
retf
les
cs
(bad)
push
and
xorps
mov
in
or
outs
mov
pop
xchg
out
sbb
lock
add
sbb
sub
cmp
nop
imul
jl
movs
sub
test
and
retf
mov
jge
push
inc
ins
mov
push
mov
clc
cmp
fcomp
iret
out
pop
rol
fnstcw
jmp
arpl
push
imul
test
lea
enter
sahf
mov
mov
and
push
les
std
ror
arpl
or
popa
imul
cli
mov
mov
jge
or
aaa
add
mov
cmps
push
mov
ss
cmp
stc
and
fistp
dec
push
push
push
ret
pop
add
add
mov
neg
aam
fwait
sahf
adc
imul
icebp
push
push
jmp
femms
cwde
xor
or
jp
dec
(bad)
sub
loopne
push
mov
and
loopne
sbb
(bad)
mov
mov
xor
into
adc
(bad)
pop
cdq
jmp
cmps
push
fs
inc
cs
jbe
sbb
mov
jne
pop
es
pop
mov
sar
in
sbb
or
jle
or
dec
(bad)
xchg
out
lods
lahf
(bad)
outs
aad
(bad)
push
cwde
sysenter
or
arpl
and
loop
push
xor
jno
int
dec
nop
push
adc
adc
sub
vmptrld
clc
out
jg
sahf
mov
pop
inc
adc
mov
pop
fucom
mov
es
push
xor
cli
or
add
pop
(bad)
lea
cmp
ss
daa
or
mov
test
adc
std
pop
xor
scas
gs
mov
repz
ss
jae
pop
cmp
jp
in
xor
or
ins
(bad)
das
jecxz
ja
cmps
call
xchg
sub
loope
adc
or
jnp
dec
dec
mov
xor
inc
mov
add
jmp
sbb
(bad)
jb
mov
jmp
leave
sub
div
sti
shl
aad
sbb
xchg
mov
sub
mov
or
rcr
sar
xchg
out
es
sbb
retf
dec
in
cmps
cmps
aaa
(bad)
retf
jae
hlt
cmp
lods
and
xchg
jle
stos
cmps
pop
popa
jbe
and
dec
mov
jmp
sbb
push
inc
cmp
cli
aas
test
and
adc
in
imul
or
pop
call
in
push
jbe
jmp
rol
dec
add
les
pop
pop
pop
imul
bound
into
sub
jp
sbb
aaa
(bad)
mov
dec
sbb
adc
jp
mov
ret
rcr
stos
mov
ss
ret
add
cmp
sbb
fidiv
or
push
jo
ret
pop
mov
cwde
leave
cmp
xchg
adc
fwait
loopne
(bad)
adc
add
fisubr
sub
dec
lods
enter
sbb
call
aam
pop
mov
sbb
(bad)
cmp
push
pushf
push
sti
ret
inc
push
sub
mov
mov
les
fmulp
lds
scas
mov
pop
sbb
rcl
mov
push
sbb
aaa
call
mov
sbb
outs
pop
jbe
in
cmp
dec
(bad)
ds
call
sub
xchg
push
cwde
mov
mov
ins
inc
popf
retf
mov
lds
mov
pusha
or
rcr
jb
sub
mov
test
xor
ret
cmps
cmps
add
cmp
and
mov
jbe
mov
mov
in
cmc
xor
inc
mov
movs
jl
add
cld
into
repz
xchg
cmp
jne
xchg
movs
call
ins
push
out
in
mov
mov
out
ins
icebp
xchg
dec
cmps
push
add
pop
ins
xchg
rol
clc
nop
js
mov
cld
push
and
add
mov
mov
std
fadd
sub
mov
dec
inc
ret
jp
cmps
inc
push
sub
jmp
lods
mov
pop
dec
stos
inc
cmp
fisubr
scas
lods
fmul
mov
jmp
sbb
popf
mov
sub
into
pop
icebp
loopne
pop
jl
test
mov
ds
jae
leave
pop
not
fwait
out
or
mov
sbb
ret
push
jae
lahf
pop
fst
mov
and
cmps
and
add
inc
jp
jns
cmps
add
leave
ret
adc
or
(bad)
add
or
std
call
mov
sub
adc
adc
out
or
(bad)
lods
mov
outs
add
popa
shl
imul
sub
in
and
js
xor
sbb
lds
shl
cwde
dec
in
adc
imul
call
push
cdq
xchg
mov
(bad)
(bad)
out
mov
inc
inc
in
add
hlt
sub
mov
mov
mov
iret
xchg
in
adc
jmp
outs
mov
jge
(bad)
rol
aam
cli
loop
xchg
sar
in
neg
and
fs
imul
imul
daa
xchg
or
(bad)
(bad)
in
popa
ficom
push
fdivrp
les
mov
inc
sti
pusha
push
cdq
loop
push
sub
movs
push
add
or
push
call
daa
sbb
dec
dec
add
push
or
adc
adc
inc
nop
sub
mov
out
sahf
xchg
mov
push
outs
mov
out
add
ja
ror
sti
add
popa
fs
inc
cmps
movsx
mov
pop
int3
cwde
outs
into
xlat
fnsave
push
xor
loop
mov
shl
jge
inc
sbb
push
or
shl
leave
jo
and
jbe
jbe
stc
repnz
ss
jmp
sub
dec
pop
dec
(bad)
pop
loopne
push
loope
xabort
dec
push
out
imul
mov
es
mov
dec
nop
sub
stos
sbb
jmp
xor
and
jbe
js
jno
daa
sbb
fsubr
loopne
sahf
pop
test
jno
movs
je
push
es
mov
cmc
jae
dec
inc
adc
dec
and
dec
leave
cdq
gs
or
sub
das
xor
xchg
push
push
push
rol
mov
xor
(bad)
ficomp
dec
es
test
cmps
sub
push
ds
imul
rcr
xchg
xchg
sub
cld
leave
mov
xchg
(bad)
inc
aam
fldenv
add
mov
cmps
sahf
popf
pop
(bad)
pop
push
dec
jg
fcmovnb
xchg
sub
cmp
jno
sahf
pop
inc
out
xchg
mov
dec
cdq
in
inc
mov
xor
pop
xchg
and
cli
lock
mov
lock
popf
imul
movs
fisttp
push
sbb
sbb
or
ins
inc
pop
loopne
or
jns
add
sub
iret
fsubr
test
inc
inc
cmp
call
adc
sbb
retf
lods
fadd
outs
xchg
dec
(bad)
cmp
stos
jmp
retf
(bad)
scas
push
(bad)
ficom
mov
add
jmp
out
lock
push
cli
dec
gs
xchg
loope
aam
mov
dec
pop
movs
mov
xor
popa
sbb
push
adc
into
xor
pop
ret
into
and
dec
jp
sbb
hlt
mov
sbb
mov
sub
cwde
cs
jmp
pop
out
iret
dec
dec
popw
jb
xor
out
pop
or
dec
cmp
push
into
mov
movs
mov
retf
xchg
ds
stc
pop
aas
out
test
nop
inc
mov
call
repnz
fwait
sbb
mov
dec
push
push
mov
dec
imul
or
sti
pop
sbb
adc
outs
test
pop
stc
adc
or
add
or
ret
sub
inc
mov
mov
mov
mov
pop
ss
push
imul
or
cwde
pop
mov
dec
imul
cwde
aad
stc
jmp
fsubr
ja
cmp
jno
sbb
sahf
mov
(bad)
mov
icebp
arpl
dec
mov
int
mul
jno
ret
fisubr
repnz
cli
stos
enter
les
jno
iret
mov
cmp
sub
bound
cmp
pop
cmc
or
gs
ror
pop
rol
or
mov
mov
push
fsub
fldcw
push
in
and
mov
jecxz
push
aam
pop
addr16
fcomi
xor
jae
cmp
xchg
sub
inc
mov
int3
retf
cmp
bnd
rcr
push
or
and
dec
outs
pusha
in
pop
push
in
inc
arpl
in
pop
popa
das
movs
dec
ja
adc
in
push
inc
arpl
mov
aam
xchg
mov
sub
xchg
jle
(bad)
imul
mov
js
(bad)
retf
sub
mov
mov
push
fdecstp
icebp
cld
mov
jbe
mov
fiadd
sub
jg
fmul
outs
fst
out
(bad)
jmp
stos
ret
or
inc
pop
mov
sbb
stc
out
scas
ret
inc
sbb
and
or
sbb
mov
push
and
iret
in
jmp
and
mov
popa
inc
ret
push
das
sbb
call
pop
push
add
or
jae
aad
or
(bad)
sub
xlat
mov
stos
add
or
(bad)
cld
clc
rcr
jp
push
mov
ficomp
std
pop
inc
loop
mov
adc
out
xchg
jns
mov
mov
dec
push
fstp
cld
mov
jp
xor
scas
sahf
inc
mov
outs
push
cmp
dec
or
mov
add
data16
adc
and
iret
push
popf
(bad)
lock
dec
jge
movs
xchg
stc
dec
push
inc
xchg
(bad)
iret
test
fnsave
fcom
gs
mov
jle
sbb
mov
add
pop
ds
mov
adc
push
out
and
jp
and
outs
inc
ins
xchg
adc
sub
in
ficomp
inc
mov
push
call
sub
not
gs
imul
clc
mov
sub
es
(bad)
xchg
int
push
adc
sub
inc
aas
pop
test
out
jge
inc
stc
jmp
into
cdq
mov
xchg
xor
iret
mov
inc
std
push
mov
mov
loopne
push
pop
shl
jnp
bound
jmp
xor
and
int
imul
xchg
jo
(bad)
mov
jl
mov
je
not
jne
xor
dec
push
cmc
js
mov
mov
mov
push
xchg
in
mov
sub
iret
adc
mov
or
mov
add
hlt
jecxz
neg
in
lods
sbb
(bad)
cwde
stos
mov
sbb
fst
(bad)
in
push
iret
sbb
iret
and
mov
and
inc
xchg
rcl
mov
sub
enter
in
push
call
sbb
adc
cli
call
loopne
sahf
push
xor
ror
cdq
loop
fsub
push
cmp
mov
outs
or
ret
rcr
cmps
mov
out
movs
xchg
inc
mov
add
pop
push
test
cdq
cmp
dec
mov
dec
jnp
(bad)
push
mov
lahf
sub
mov
and
xchg
loopne
call
clc
std
mov
mov
imul
gs
aam
and
popf
cmc
xor
mov
push
fidiv
add
stos
inc
push
sub
mov
shr
push
les
ret
leave
mov
mov
fmul
shl
xlat
cmps
xor
in
mov
ror
cmp
in
xchg
jl
cmp
jb
sub
adc
popa
or
ret
data16
or
(bad)
hlt
inc
adc
lods
xchg
lods
push
add
into
repz
adc
leave
fsubr
loop
mov
and
outs
mov
xor
leave
inc
(bad)
sub
outs
lock
outs
fild
and
inc
inc
outs
fsubp
lods
mov
lods
shr
scas
cmp
icebp
lods
retf
jmp
jno
push
hlt
jle
mov
cmp
cld
cld
adc
jl
mul
xor
mov
lea
push
push
inc
or
(bad)
hlt
(bad)
xchg
sub
jecxz
test
push
pop
sbb
ret
sbb
dec
and
pop
pop
dec
pop
movntq
cld
in
and
lahf
push
xchg
test
es
and
xor
cmc
cmps
call
pop
jle
(bad)
int3
js
je
sub
dec
cmp
out
(bad)
loopne
retf
dec
ret
test
fs
(bad)
sub
lahf
mov
mov
outs
xchg
(bad)
push
and
fldenv
or
loopne
aas
xchg
test
jmp
jne
(bad)
out
pop
xor
push
add
clc
cmp
sbb
(bad)
xor
mov
or
in
adc
xchg
mul
adc
imul
jmp
and
mov
test
movs
pop
in
inc
jae
push
test
stos
jnp
xchg
loopne
mov
sub
in
inc
clc
fscale
pop
push
push
add
xor
fs
inc
mov
out
jmp
mov
push
out
push
jecxz
pop
pop
mov
out
jge
dec
arpl
ror
sub
mov
ja
int
xor
inc
cmp
call
(bad)
repz
aaa
mov
push
out
int3
or
loop
push
inc
adc
adc
mov
data16
pop
jg
mov
sahf
aaa
jno
inc
sbb
inc
shl
inc
retf
mov
leave
dec
mov
test
outs
jge
xor
pop
aas
stos
ret
nop
xchg
push
jmp
cdq
mov
repnz
addr16
aaa
inc
call
and
stos
int
jge
mov
out
arpl
int
inc
pop
ss
mov
cmp
jecxz
mov
mov
pop
pop
mov
ret
xchg
adc
es
cdq
repz
push
jmp
mov
outs
mov
push
pop
sbb
or
xchg
mov
aad
adc
(bad)
out
cld
push
push
pop
mov
mov
pop
mov
int
push
dec
lods
imul
fimul
aad
push
xor
push
add
ds
aas
jo
pop
sub
jp
test
mov
in
ret
push
in
mov
(bad)
mov
into
sub
out
mov
inc
sbb
mov
inc
cmps
add
call
ret
xchg
aad
loopne
push
std
dec
call
popa
xlat
addr16
out
push
and
fwait
mov
jo
inc
add
cmp
fsub
sub
pcmpeqw
sub
in
js
pusha
fs
retf
add
jno
xor
out
push
inc
cmp
push
cmp
fisubr
pop
in
fist
enter
leave
outs
sbb
inc
xor
add
mov
mov
daa
sub
push
mul
push
iret
mov
stos
sub
int
(bad)
out
push
pop
pop
cmp
adc
jle
jns
clc
and
or
jge
push
mov
push
push
ins
mov
test
xor
add
call
mov
shl
shr
pop
leave
push
sbb
dec
lds
ins
cmp
cmp
enter
or
inc
mov
fadd
frstor
sub
or
mov
inc
sub
mov
ins
addr16
mov
call
adc
scas
pop
mov
or
shr
pop
sub
in
rol
loope
add
adc
fwait
add
daa
ss
push
std
xor
call
popf
dec
mov
xor
cdq
sub
pop
cmp
mov
inc
jbe
dec
into
scas
test
xchg
cmp
adc
loop
push
(bad)
cmp
mov
std
movs
ret
push
lahf
div
xchg
dec
es
idiv
cmp
loopne
cmp
mov
xor
dec
fdiv
sar
and
test
fmul
pop
rol
xchg
pop
in
dec
or
repnz
loop
lock
inc
add
jg
sbb
cmps
(bad)
pop
push
into
mov
pop
out
jne
inc
jmp
or
fdivr
mov
pusha
shl
std
imul
test
loope
bound
in
push
jge
lods
mov
inc
scas
ret
mov
fistp
aam
cdq
aam
test
jae
mov
cmp
xchg
xchg
mov
mov
mov
cmps
pushf
cmp
test
add
mov
mov
retf
cmp
xchg
mov
sti
sub
div
(bad)
ficom
pop
push
int
sti
loopne
daa
test
das
xlat
(bad)
jo
fidivr
jge
xor
xor
int
pop
(bad)
cwde
gs
adc
pop
je
popf
and
jp
inc
pop
inc
repnz
adc
sub
aaa
inc
mov
jle
ss
arpl
and
dec
and
es
or
mov
adc
push
je
mov
mov
pop
int3
mov
push
test
mov
push
add
mov
push
cmps
sub
xchg
call
push
dec
icebp
sub
aaa
loope
pop
mov
add
jle
or
pop
push
popf
movs
xchg
add
push
mov
scas
imul
jecxz
sub
inc
sbb
retf
and
cdq
(bad)
cmp
mov
rol
cmp
jne
fisub
and
(bad)
sub
repnz
pop
js
sbb
out
mov
cmps
push
test
popf
sar
jge
shr
sbb
test
cwde
mov
aam
cmp
ins
or
scas
shr
sub
mov
pop
cmp
jle
jno
sub
mov
shr
fucom
(bad)
neg
and
imul
leave
outs
push
ret
jg
inc
call
push
sbb
retf
(bad)
cmp
push
retf
sbb
push
inc
(bad)
cdq
dec
cmp
adc
dec
icebp
(bad)
(bad)
sbb
xor
test
imul
(bad)
jg
pop
outs
mov
hlt
jo
icebp
or
mov
xchg
(bad)
int
imul
push
inc
xchg
mov
dec
xchg
jge
hlt
jae
ins
and
xchg
dec
xor
jp
dec
fs
xor
mov
cmp
dec
mov
or
mov
shr
cmp
dec
push
dec
jno
bound
dec
dec
aaa
mov
cli
shl
adc
jle
loopne
stos
fist
add
push
mov
jb
jno
xchg
cmp
ror
aam
inc
mov
mov
into
popf
xor
lea
(bad)
iret
mov
int3
aam
push
add
xchg
inc
cs
in
test
std
cli
ss
and
and
sbb
ss
(bad)
addr16
outs
fild
int
call
pop
pop
jge
and
mov
aas
mov
out
mov
sahf
fwait
std
or
cmc
jne
or
push
ss
push
loop
daa
jle
add
ret
mov
ss
jb
lea
(bad)
jge
je
mov
pop
adc
push
cli
std
into
sar
fistp
adc
int
inc
jle
ja
outs
pop
leave
jmp
data16
mov
cmp
mov
dec
fucom
retf
mov
call
pusha
mov
lock
add
inc
ret
xlat
ss
bound
loopne
fdiv
jmp
ss
mov
mov
xor
daa
jnp
aas
cmp
mov
clc
shr
mov
out
push
mov
movs
sub
ret
xchg
xor
loop
push
mov
fmul
add
dec
loope
mov
push
mov
fwait
adc
push
sub
dec
jno
ret
shl
mov
dec
dec
fldenv
push
ret
clc
ds
(bad)
or
(bad)
fisttp
mov
fs
mov
pop
dec
stos
push
lahf
ja
mov
xchg
mov
cwde
loopne
scas
dec
dec
cmp
fild
xchg
xor
es
dec
in
adc
cli
aas
bound
aam
sti
sbb
arpl
mov
stos
xor
gs
dec
cli
sub
mov
sub
std
inc
jp
sub
mov
xchg
and
add
leave
inc
movd
rcl
cdq
jmp
mov
imul
sub
add
push
hlt
xor
fst
sar
xchg
jl
sub
aaa
aam
test
lods
xor
jmp
jle
push
inc
inc
in
loop
dec
push
or
pusha
push
xor
mov
ins
push
test
sbb
mov
pop
or
jl
sbb
xchg
cwde
push
dec
nop
mov
stc
mov
ins
push
jmp
dec
in
push
dec
dec
and
loope
sbb
sub
int
mov
rol
inc
(bad)
add
inc
repnz
inc
repz
in
dec
(bad)
sub
ror
leave
sub
out
dec
lahf
jp
into
imul
sti
pop
jle
mov
push
leave
loop
arpl
add
fldcw
inc
loope
sbb
jl
push
retf
cmp
cdq
and
adc
dec
mov
cmp
retf
mov
xchg
(bad)
inc
jno
inc
sbb
or
clc
sbb
push
xchg
jbe
repnz
add
xor
pop
test
das
sub
addr16
ins
jb
adc
jp
jge
pop
mov
sbb
dec
imul
inc
mov
ins
mov
or
lock
ins
cmc
mov
push
(bad)
daa
test
fwait
data16
pusha
popa
rcl
outs
adc
imul
daa
movs
clc
out
jne
push
mov
out
pop
mov
gs
dec
(bad)
cld
data16
add
sbb
(bad)
sbb
xchg
xor
icebp
inc
jmp
xchg
add
and
mov
cmp
clc
jne
shl
aam
add
out
pop
inc
push
push
mov
sbb
or
js
dec
adc
mov
or
into
mov
fucomp
lds
xor
pop
ins
and
fldcw
stc
enter
lea
clc
mov
rcl
fidiv
ficomp
movs
mov
push
ffreep
push
push
jae
pop
daa
pop
rcl
bnd
(bad)
gs
neg
mov
into
adc
pusha
inc
pop
cmps
jb
mov
retf
push
xchg
loop
add
nop
xlat
test
cmp
test
frstor
xor
retf
fld
ret
cmps
leave
psubsw
iret
rcr
in
xchg
sub
sbb
and
mov
jns
add
push
call
or
dec
les
mov
cmp
nop
call
inc
mov
inc
push
pusha
ins
mov
push
sub
ret
pop
mov
xor
jbe
call
iret
push
jge
xchg
ror
pop
loopne
lahf
pop
jge
into
dec
dec
mov
add
stc
jns
add
movs
leave
mov
pushf
popf
cmp
add
cmps
test
inc
jnp
shl
jecxz
scas
inc
lods
in
xor
mov
ins
call
add
dec
cmp
mov
jp
leave
out
pop
aaa
scas
hlt
frstor
xchg
loop
ret
xchg
call
jge
in
stos
out
jmp
or
sub
pop
pop
dec
mov
hlt
(bad)
jecxz
mov
scas
std
popa
push
sahf
fcomp
(bad)
mov
cmp
dec
fs
fild
into
js
mov
cmp
xor
or
loope
in
bnd
pop
mov
movs
xlat
lea
and
std
sbb
jae
sub
test
ror
ret
das
mov
shr
ror
hlt
push
stos
call
mov
push
rcr
sbb
inc
inc
lods
and
push
(bad)
jo
jmp
xchg
mov
xchg
cmps
push
mov
mov
mov
shr
mov
std
fs
add
jae
pop
ficom
and
daa
dec
(bad)
mov
bound
pop
cmp
pop
call
push
retf
dec
ret
push
mov
out
sub
mov
in
jae
out
(bad)
das
xor
cmps
mov
sub
scas
loopne
xchg
cmps
mov
add
xchg
cmc
aas
std
xor
es
(bad)
cmp
push
es
outs
cs
movs
les
mov
(bad)
rcr
ds
push
in
scas
popf
adc
shr
into
inc
rcl
test
xchg
fisubr
xchg
inc
not
es
mov
call
in
cwde
inc
jmp
retf
sbb
lock
dec
fwait
in
push
daa
aad
mov
add
add
mov
mov
push
in
aad
dec
mov
cmp
ret
mov
aaa
aad
cmp
xchg
cmps
lods
bound
stc
xor
inc
sub
dec
pop
cmps
cld
into
rcl
lea
rol
dec
add
(bad)
inc
lds
aas
inc
aaa
scas
pop
ror
loopne
outs
dec
cld
xchg
out
js
add
arpl
push
popf
out
sar
add
xchg
aam
retf
mov
gs
dec
aaa
sbb
in
xchg
mov
jmp
xlat
adc
fimul
out
xor
xchg
push
pop
or
mov
sub
popa
cmps
jg
ds
jecxz
ret
xor
push
mov
ficomp
sbb
mov
xchg
mov
fs
lock
xchg
aaa
pop
js
add
push
push
pop
mov
mov
jnp
sub
fcomp
cmp
cli
jmp
shl
rcr
imul
lock
bound
fild
sbb
cmp
test
je
jmp
pop
test
xor
and
int3
push
retf
sbb
adc
repz
sub
jge
mov
pop
and
repz
ret
mov
push
gs
dec
mov
and
pusha
adc
imul
sbb
mov
shl
pop
pop
xchg
call
mov
or
shl
lahf
clc
cli
popf
lods
stos
ret
add
push
xor
fiadd
and
fisttp
hlt
dec
add
(bad)
pop
out
pop
lods
sbb
retf
cmovb
stos
fbld
das
retf
inc
repnz
ret
jge
sar
pop
popa
fsincos
jp
test
push
pop
and
adc
mov
stc
scas
and
aas
mul
mov
mov
adc
(bad)
movs
mov
fistp
jmp
hlt
pop
mov
cld
icebp
sbb
push
xchg
call
adc
sti
xchg
or
lods
xor
dec
and
outs
mov
and
out
rcl
pusha
jb
mov
(bad)
int
mov
test
das
bound
call
movs
js
and
test
jle
jge
(bad)
sub
ret
add
shl
in
mov
jecxz
fadd
sub
(bad)
test
inc
cld
jo
inc
sti
imul
arpl
inc
push
mov
add
jge
sbb
pop
cdq
hlt
xor
stos
icebp
cli
sub
xor
mov
stos
test
(bad)
xor
stos
mov
(bad)
push
nop
mov
add
sub
dec
mov
pop
xor
and
sub
es
ret
or
push
pop
loop
sub
(bad)
xlat
mov
cmp
mov
(bad)
pushf
or
stc
loop
mov
mov
sbb
push
sbb
repz
xchg
fcomp
jns
mov
rcr
mov
jb
out
fmul
(bad)
mov
cmps
adc
sub
sbb
inc
repnz
mov
sub
dec
xor
sbb
stos
mov
retf
shr
addr16
idiv
pop
test
mov
scas
push
push
pop
ss
(bad)
jno
cmp
sbb
jae
shl
fwait
sbb
xor
enter
(bad)
popa
jmp
push
mov
test
mov
mov
call
stos
cdq
mov
xor
jb
syscall
pop
cmp
aaa
sub
sbb
pop
bound
aad
mov
pop
movs
sub
cmp
sub
stc
add
xor
not
mov
gs
sub
xchg
test
jecxz
or
mov
sbb
push
popa
nop
mov
or
imul
ficom
sti
jecxz
cmc
and
or
daa
sbb
mov
nop
mov
inc
test
push
or
xlat
dec
inc
pop
mov
xor
aam
mov
daa
xchg
popa
pop
(bad)
fndisi(8087
xchg
test
sub
sbb
rol
xor
out
(bad)
fldenv
pop
mov
out
cmp
mov
pop
icebp
push
or
inc
xor
jbe
push
jbe
cmp
lods
(bad)
adc
imul
add
mov
cmc
cmc
mov
(bad)
retf
je
xor
and
cld
xor
jne
jo
repnz
and
inc
in
jo
lds
add
push
push
push
cmp
pop
xor
mov
add
pop
and
in
mov
jmp
int
mov
les
jmp
jle
data16
sti
and
push
test
call
cmps
inc
push
bound
mov
xor
(bad)
cmp
stos
push
call
mov
js
iret
ds
gs
xchg
cdq
sub
ret
jns
push
ja
stos
inc
repnz
dec
xchg
retf
adc
sbb
xor
push
pextrw
sub
push
xchg
adc
popf
mov
test
loopne
repz
sub
jbe
pop
cmc
cmp
cmp
test
in
xor
mov
test
adc
movs
push
jns
cmp
or
sbb
test
mov
ret
adc
add
frstor
cld
ins
push
xlat
movs
jae
sbb
pusha
inc
dec
mov
fs
xor
pop
mov
std
and
arpl
pop
rcr
mov
xchg
push
int
cdq
xchg
jp
dec
dec
repz
fld
pop
mov
cli
int
shl
test
add
and
iret
pusha
ror
adc
or
loope
xchg
add
jp
aam
inc
xchg
aas
push
add
pop
pop
arpl
(bad)
loopne
jl
jmp
fwait
or
sub
or
scas
cmp
mov
pop
retf
push
push
mov
in
fbstp
xchg
pop
xchg
xchg
ret
add
sub
ret
leave
es
cmp
or
rcr
lea
cli
(bad)
retf
mov
pusha
mov
fiadd
mov
lods
gs
ret
push
in
out
jne
dec
xlat
js
inc
aas
xchg
leave
cld
test
test
mov
aam
call
mov
imul
into
js
pushf
push
push
jnp
xchg
sbb
mov
and
and
pop
loope
sub
mov
stos
addr16
call
jae
neg
arpl
bound
(bad)
cmc
js
jle
stos
mov
rcr
push
mov
arpl
jmp
push
(bad)
cdq
outs
sub
adc
cmps
jecxz
cli
mov
push
dec
mov
mov
inc
mov
pop
aad
adc
sub
loope
out
xor
(bad)
mov
test
pop
dec
scas
shr
inc
sub
repz
int3
xchg
ror
cmc
rol
into
push
(bad)
fmul
mov
mov
shr
push
mov
pusha
jle
jle
rcl
lea
(bad)
rcl
rsm
jae
or
add
repz
xor
div
call
scas
arpl
dec
lahf
cmp
pop
cwde
ds
mov
outs
mov
xor
loopne
xor
jle
je
fnstenv
retf
addr16
sbb
adc
imul
sar
or
sub
cmp
jle
pop
pusha
ss
dec
mov
fsub
adc
mov
mov
cmp
adc
ss
es
sub
xor
or
sub
pop
inc
ss
scas
pop
(bad)
inc
adc
fist
sbb
loop
les
cmp
sub
shl
xchg
retf
xchg
xchg
xchg
int3
retf
mov
mov
push
jb
sub
xlat
xchg
imul
and
xchg
sbb
or
pop
sbb
jmp
pop
push
add
add
rol
fcomp
cdq
sbb
ror
push
fdivr
pop
pop
sti
fprem1
sbb
mov
dec
sbb
mov
in
sbb
mov
jl
or
cmp
mov
jne
pop
xchg
aaa
jmp
addr16
popa
movs
clc
imul
cmp
jne
into
jns
sbb
stos
jae
popf
inc
cmp
sbb
out
ja
sar
mov
xor
sub
ins
adc
add
into
(bad)
mov
inc
aam
sub
fmul
(bad)
xchg
jmp
push
rcr
idiv
jecxz
and
xor
test
out
and
rcr
je
jne
test
adc
fsub
repnz
xchg
jb
test
out
bound
in
push
mov
and
in
jmp
mov
xlat
mov
mov
test
mov
mov
pop
cmc
sbb
or
clc
(bad)
iret
clc
adc
sub
add
jbe
test
sbb
xchg
sbb
jmp
lock
int3
pop
lea
out
and
push
addr16
mov
ss
xchg
aad
out
or
push
mov
sub
ins
mov
cmp
xchg
gs
ja
sar
inc
loope
(bad)
test
xor
movs
push
xchg
mov
push
les
jge
iret
xor
pop
adc
popa
push
xor
js
inc
sbb
and
(bad)
retf
inc
mov
test
mov
(bad)
mov
adc
mov
(bad)
ss
leave
test
cs
xor
add
fstp
xchg
mov
jmp
jae
mov
fidivr
mov
pushf
pop
fidivr
mov
out
cs
les
stos
(bad)
ficomp
rol
out
mov
pop
(bad)
or
pushf
rcl
push
or
mov
adc
aaa
outs
inc
inc
dec
pusha
test
aas
jae
and
dec
cwde
outs
or
les
cmp
rcl
and
inc
dec
pop
xor
pop
aaa
push
or
outs
and
jmp
mov
loopne
add
dec
ins
xchg
cwde
cdq
push
stc
dec
jl
or
mov
sbb
es
dec
xor
or
mov
fsubr
add
cld
xor
jno
inc
jg
lock
jmp
shl
cli
nop
mov
sub
es
add
pop
dec
pop
dec
cwde
call
jg
cmp
call
pop
leave
popa
xchg
push
pop
pop
sub
mov
lods
mov
js
es
call
pushf
clc
xlat
push
fild
sbb
mov
enter
adc
xchg
add
mov
mov
test
retf
pop
(bad)
(bad)
mov
pop
jecxz
mov
push
jecxz
ds
not
pop
mov
aas
mov
outs
shl
fist
pop
mov
fimul
sar
sbb
leave
sub
arpl
adc
lahf
mov
mov
sub
ds
jmp
dec
dec
test
jno
adc
jmp
and
and
stc
sbb
push
sub
pop
jge
mov
adc
push
mul
in
push
hlt
fistp
int3
mov
mov
arpl
jmp
sbb
mov
pop
push
lock
xchg
adc
cs
cmp
in
xchg
clc
(bad)
pop
gs
leave
sub
dec
xchg
add
mov
sbb
repnz
test
(bad)
loopne
jae
inc
and
and
add
sbb
mov
sbb
test
jns
inc
test
mov
jnp
call
stos
sub
push
cld
ficom
test
daa
mov
test
jns
in
fdivr
or
adc
sub
push
ds
popa
cld
dec
pop
popa
out
inc
sbb
rcl
test
dec
inc
inc
pushf
out
inc
cmp
mov
inc
outs
cs
icebp
lods
cdq
xchg
xchg
xor
mov
shl
out
sub
(bad)
in
sahf
push
xor
push
xchg
test
movs
mov
inc
push
and
jbe
mov
add
push
adc
outs
and
push
pop
jbe
fstp
or
pop
mov
ret
mov
xor
addr16
dec
ror
add
movs
pop
and
mov
jmp
call
jg
fidivr
push
mov
into
add
(bad)
dec
cmp
push
cmp
imul
scas
in
pop
and
inc
mov
aam
fcomp
lods
xor
out
lock
pushf
add
sbb
int
rol
ins
ds
inc
xor
push
movs
(bad)
pop
lods
adc
and
jge
loopne
pop
movs
daa
ins
add
loopne
in
adc
mov
ret
mov
jne
test
aad
add
call
pop
aas
test
fwait
mov
add
retf
bound
add
mov
fwait
mov
jecxz
gs
push
cmp
movs
retf
sub
nop
and
in
(bad)
int
sbb
popa
adc
leave
adc
enter
stc
mov
mov
mov
sbb
jbe
ins
jns
xor
dec
adc
neg
mov
rcr
test
add
dec
out
lds
and
retf
xor
mov
mov
ficom
sbb
shl
sbb
pusha
pop
mov
push
rol
add
sahf
(bad)
loop
mov
retf
mov
push
ror
dec
mov
js
(bad)
arpl
dec
or
aas
and
adc
sbb
mov
sbb
inc
lds
ja
add
cmp
add
ins
mov
inc
xor
xchg
add
jle
adc
dec
call
popa
out
or
cmp
inc
(bad)
popa
call
cdq
jl
jmp
loope
xchg
add
sub
fcomp
and
and
fwait
out
ds
fld
fcmovb
mov
ret
test
dec
mov
pop
xchg
rcl
push
mov
je
mov
fs
out
and
fsub
into
or
out
es
test
(bad)
and
cmp
mov
jno
xor
jecxz
or
ret
shl
pop
dec
iret
cmp
outs
and
adc
dec
in
mov
ret
jecxz
dec
pushf
(bad)
xchg
fnstenv
pop
inc
call
sbb
jl
push
int
push
cld
inc
cmp
jecxz
lods
repz
mov
mov
mov
sahf
jb
add
add
nop
add
mov
(bad)
sbb
and
adc
pop
mov
adc
xchg
lock
mov
leave
push
inc
dec
lods
xchg
cmp
jmp
mul
test
inc
pushf
inc
fnsave
jns
mov
mov
jnp
mov
inc
sbb
sbb
std
dec
pusha
sbb
inc
fstp
call
or
mov
xchg
aas
rol
mov
loopne
push
scas
cdq
push
adc
cli
lahf
movs
test
out
dec
inc
inc
add
stos
(bad)
imul
sbb
cmp
pop
mov
enter
mov
inc
popa
push
call
imul
test
and
cmp
ret
sbb
xor
inc
mov
pop
and
mov
call
jmp
cmp
xor
and
sbb
ins
scas
jne
ror
jg
pop
leave
sbb
ins
fiadd
mov
ins
jg
dec
mov
sahf
lds
push
xor
fsubr
xchg
cmp
mov
(bad)
cmp
xor
mov
popa
mov
or
sbb
pop
jae
imul
hlt
mov
jmp
div
jae
lahf
cmp
rol
loope
cdq
xlat
add
xchg
cmp
or
popf
test
shl
js
nop
movs
add
hlt
adc
sbb
xchg
aaa
iret
jne
int3
icebp
dec
adc
cmp
in
mov
cli
sbb
lock
dec
cmps
hlt
pop
and
mov
xor
mov
jl
jg
fmul
ins
stc
aaa
lea
mov
in
mov
lea
or
fcomp
movs
test
dec
outs
xchg
popa
cmps
mov
push
inc
xchg
aad
cmp
mov
sub
ins
mov
and
stos
repz
or
add
adc
inc
push
mov
std
(bad)
int3
mov
fsubr
mov
xor
mov
xor
out
jmp
test
sahf
(bad)
xlat
mov
ins
mov
cld
cmp
(bad)
dec
ret
(bad)
out
ds
fwait
arpl
add
sbb
stc
test
add
imul
xor
ins
push
cmc
push
xchg
lock
in
pop
sbb
pop
pop
cld
mov
mov
sahf
fs
mov
adc
repnz
iret
out
and
pop
push
adc
pop
out
fstp
pop
(bad)
neg
cmc
retf
js
repz
xchg
dec
xchg
ror
xor
adc
out
xchg
jno
mov
and
pusha
or
jg
and
in
or
nop
fnsave
add
scas
movs
je
mov
inc
and
jnp
mov
cmps
ss
jmp
inc
ficom
lods
mov
sti
dec
test
push
push
adc
loopne
cmp
pop
pop
xchg
jle
in
fst
jmp
rcr
mov
push
adc
cmps
stc
rcr
jl
test
sbb
sbb
push
imul
fisttp
test
cld
(bad)
fmul
in
lds
outs
mov
push
popf
pop
mov
pop
retf
jle
stc
jmp
pop
jl
sbb
dec
adc
dec
xlat
stc
jge
add
call
dec
out
loop
cmp
mov
rcr
xchg
add
mov
jbe
lds
mov
mov
adc
jns
pop
mov
adc
test
rol
test
sar
into
fld
and
lahf
mov
test
jns
mov
imul
mov
dec
pop
jno
and
push
cmp
push
pushf
adc
imul
retf
movs
jmp
and
arpl
xchg
add
push
push
and
cmp
movs
(bad)
jae
push
xor
dec
fcomp
dec
pop
test
dec
das
jae
cmp
pusha
push
retf
(bad)
inc
xor
inc
cmp
out
push
add
popa
addr16
inc
and
cld
mov
out
xchg
or
inc
jae
dec
xchg
mov
outs
mov
mov
ds
cmp
pop
scas
jmp
and
xor
inc
sbb
and
(bad)
jnp
add
jb
mov
pop
add
mov
lea
fisttp
test
push
cmp
aad
test
sahf
push
test
sub
scas
jmp
xor
dec
push
mov
dec
mov
sub
(bad)
aas
int
xchg
push
call
push
cmps
push
arpl
clc
mov
add
leave
std
xlat
ror
retf
mov
push
fst
xor
xchg
jmp
mov
mov
xor
movs
mov
and
or
mov
icebp
inc
sbb
mov
inc
mov
cmp
cdq
int
mov
or
jo
ds
push
out
sbb
xor
ja
push
mov
xchg
lods
push
sub
out
fcom
mov
adc
pop
nop
xchg
inc
xchg
pop
xor
test
mov
mov
mov
pop
xor
ss
lods
sub
mov
adc
mov
add
push
(bad)
lock
stc
daa
fs
mov
sbb
arpl
adc
add
add
sub
sub
and
mov
popf
adc
repz
push
scas
sbb
xchg
xchg
jb
nop
sti
stc
mov
ss
rcl
mov
sbb
(bad)
loop
pop
jmp
mov
sub
addr16
sbb
push
mov
xchg
in
push
and
jg
pop
jmp
pop
and
repnz
arpl
loopne
sar
xchg
jmp
mov
mov
sbb
mov
fisubr
xchg
in
daa
fcom
mov
jmp
xor
inc
pop
scas
xchg
scas
and
fcomip
inc
sbb
xor
rcl
and
fistp
mov
xlat
xchg
(bad)
mov
js
popa
(bad)
sbb
sub
inc
mov
lock
call
mov
pop
mov
call
sub
movs
or
xor
outs
sbb
inc
sbb
xchg
mov
cmp
xchg
aas
(bad)
sub
ins
sub
popf
add
dec
lods
pop
cmp
repz
mov
hlt
pop
xchg
sbb
shl
cmp
pusha
clc
dec
mov
sub
mov
fcmovu
mov
sub
shl
retf
retf
outs
xchg
bts
adc
jg
or
mov
arpl
test
(bad)
cmps
test
es
js
retf
adc
push
dec
fild
push
push
cmc
leave
cmp
inc
pop
mov
test
out
arpl
rcl
aad
in
repz
cwd
add
push
cmp
in
mov
rcr
(bad)
fxam
pop
out
lahf
xchg
shl
mov
xchg
(bad)
mov
xchg
and
sub
pop
sahf
test
pop
repz
cdq
mov
jo
mov
sub
xsha1
cmps
dec
mov
mov
lds
out
shl
cmc
add
cli
xor
jno
sbb
inc
jecxz
jbe
sbb
xchg
mov
mov
xor
inc
cmp
mov
les
test
leave
call
xor
push
cmp
movs
mov
aad
gs
adc
repnz
adc
(bad)
and
adc
pushf
mov
or
fld
mov
dec
xor
add
xor
fcomp
jge
div
in
bound
mov
xor
cli
cmc
test
fisttp
daa
retf
dec
loope
mov
pop
xor
(bad)
mov
pop
test
mov
lods
ins
mov
mov
push
in
call
adc
jb
and
xchg
mov
sub
xchg
fwait
inc
pop
xor
enter
xchg
mov
xor
out
inc
jecxz
jge
mov
ret
loop
(bad)
pop
(bad)
clc
ins
retf
mov
fiadd
and
ret
stc
jno
aas
sbb
adc
aaa
fmul
daa
outs
fs
out
mov
sbb
hlt
(bad)
fucom
mov
aaa
call
push
jl
inc
add
inc
popa
daa
pop
fwait
mov
ficomp
nop
test
jmp
inc
es
je
ins
or
push
push
ins
movs
(bad)
xor
add
jne
scas
xor
and
test
stc
push
add
jne
(bad)
(bad)
push
pop
icebp
sbb
fdiv
inc
jl
jg
dec
scas
imul
push
loope
mov
xor
sub
push
xor
mov
adc
nop
mov
pop
loopne
pop
loop
push
imul
dec
xchg
ins
outs
data16
or
xor
inc
fsub
xor
mov
or
or
into
adc
ss
iret
jl
lea
scas
imul
dec
fcmovnb
repz
or
xor
inc
movs
lea
ds
jns
inc
jge
cmp
sbb
sbb
pop
aad
pop
lods
test
jno
sbb
(bad)
les
popf
jmp
inc
push
into
mov
fs
ins
mov
nop
stos
add
mov
les
stc
mov
jbe
sahf
pop
xor
mov
adc
dec
sub
inc
sbb
into
dec
pushf
data16
dec
mov
mov
mov
cmp
pusha
rcr
dec
cmp
fstp
gs
sti
and
es
inc
mov
je
pop
adc
xor
fiadd
fs
leave
lds
mov
clc
movs
cmp
jb
and
cmps
sbb
adc
dec
adc
pop
adc
sahf
inc
test
fs
inc
xor
aam
imul
jge
sbb
jecxz
mov
lods
les
jle
sahf
pop
cmp
fs
push
sbb
inc
ret
push
cmp
pop
fdivr
ror
dec
adc
pop
jns
dec
jp
pop
out
lods
movs
lea
ja
pop
in
cs
adc
cwde
push
push
mov
enter
leave
sub
lock
push
cmc
push
nop
test
in
es
lock
mov
add
repz
psllq
push
pop
and
scas
je
and
or
outs
jno
pusha
out
mov
inc
push
adc
push
cmp
or
add
push
lods
or
pop
or
jmp
das
pop
retw
aas
call
jmp
ror
fisttp
mov
or
cld
push
aas
loop
push
xor
repnz
pop
out
packuswb
xchg
in
dec
jle
mov
mov
cli
adc
sbb
fisub
xor
sub
mov
leave
jb
int
add
iret
fwait
aas
dec
push
addr16
mov
push
jo
cmps
dec
cmp
mov
les
mov
add
out
pop
rcpps
leave
(bad)
jmp
sub
in
add
push
sbb
adc
pop
call
add
clc
pusha
lea
cdq
sbb
into
mov
rcl
push
inc
inc
sub
jge
sub
cmp
setg
xchg
in
sub
pop
(bad)
push
(bad)
fld
xor
inc
lds
lods
and
inc
jmpw
lahf
lods
push
and
dec
and
sbb
js
popa
sub
sbb
xchg
sahf
pop
imul
nop
sub
add
das
imul
les
(bad)
(bad)
retf
mov
aam
and
mov
cmps
test
les
push
dec
es
dec
add
sahf
imul
dec
call
and
xchg
xchg
mov
dec
pop
mov
aas
into
test
stos
div
push
sbb
repz
mov
sub
dec
push
inc
mov
inc
jo
nop
leave
mov
xchg
out
inc
sub
sub
push
add
dec
adc
push
and
into
ret
leave
icebp
push
pop
xor
out
mov
jns
fistp
ja
xor
pop
push
outs
sbb
jmp
pop
lock
ja
in
adc
and
rol
adc
into
pop
cmp
xchg
scas
mov
call
push
lea
cwde
arpl
lahf
jmp
pop
xchg
jmp
cmp
push
cwde
jmp
(bad)
outs
scas
mov
mov
retf
shl
(bad)
in
addr16
and
out
lods
xor
add
inc
imul
stc
adc
inc
sahf
sti
popa
cmps
out
mov
int3
movs
lock
out
in
push
bound
push
cwde
push
xor
push
cmovb
mov
mov
daa
mov
cmp
retf
dec
arpl
in
stos
mov
iret
iret
or
test
or
in
sbb
rcl
mov
inc
inc
jns
nop
out
jbe
out
xchg
shl
ret
ss
jns
movs
int
shl
cmc
lock
leave
mov
mov
and
push
frstor
xchg
cmps
add
out
push
sbb
sub
mov
mov
movs
xor
and
adc
movs
data16
dec
mov
lock
xor
loop
sbb
rcr
les
dec
mov
bound
jecxz
xchg
sbb
je
push
mov
or
xchg
addr16
adc
pop
ror
retf
popa
repz
mov
or
jp
pushf
pop
hlt
sbb
pushf
sub
adc
bound
or
and
inc
retf
lahf
xchg
outs
push
mov
adc
(bad)
(bad)
cmps
mov
xor
mov
mov
in
jb
xlat
repz
jb
inc
xchg
cmp
out
mov
dec
in
es
ins
loopne
mov
(bad)
push
pop
(bad)
or
mov
jne
dec
mov
js
push
fldcw
repnz
or
mov
ins
ins
jb
pop
jmp
popa
movs
xchg
ja
xor
out
dec
fidivr
jno
add
ins
or
push
cmp
fnsave
test
pop
jb
add
gs
sbb
mov
test
add
pop
test
push
push
dec
push
pusha
and
icebp
cdq
xchg
pusha
xor
sbb
sar
scas
movs
pop
outs
mov
out
(bad)
or
sbb
inc
cmp
ret
xlat
test
inc
clc
addr16
push
xor
not
jno
push
in
dec
push
jne
shl
sbb
adc
inc
jl
add
cmps
rcr
and
push
jmp
add
pop
sbb
push
cmps
aaa
mov
inc
mov
(bad)
dec
popf
fsubr
mov
sbb
das
push
cs
dec
outs
xor
inc
icebp
sub
nop
ss
mov
cdq
jecxz
lahf
cmp
ins
pop
lods
jae
sbb
inc
inc
dec
dec
pop
inc
imul
sub
cmc
xchg
in
add
cmc
aaa
sti
loopne
lahf
sub
jne
and
shl
push
imul
in
add
dec
out
(bad)
(bad)
out
stc
cdq
scas
ins
dec
inc
sub
pushf
fnstenv
add
push
mov
stc
mov
rol
xlat
movs
jp
(bad)
mov
cdq
jns
adc
les
and
xchg
xchg
test
push
dec
or
sub
ds
mov
call
mov
cmp
jne
femms
pop
jmp
add
std
pop
dec
adc
mov
imul
fiadd
pop
idiv
push
mov
shl
jno
out
stos
in
adc
(bad)
or
repz
pop
cmc
lods
dec
call
jecxz
adc
lea
inc
dec
sbb
dec
cmps
jns
mov
jle
hlt
popa
gs
and
stos
push
push
adc
out
hlt
jle
in
hlt
inc
pop
jo
out
jge
lahf
pop
add
jg
sbb
je
popf
mov
pop
js
pop
imul
sub
outs
cdq
mov
cmp
add
cmp
test
ret
and
into
xchg
pop
data16
daa
out
mov
pop
es
xor
cmps
pop
dec
jo
adc
cdq
pop
pcmpeqd
xchg
aam
inc
movs
loop
xchg
inc
les
jbe
push
je
cmp
stos
data16
gs
pop
(bad)
ins
shl
hlt
lds
mov
popf
call
push
add
push
xchg
push
imul
cmps
mov
sub
stos
fsubr
aaa
mov
cs
sti
std
ins
mov
jns
int
jl
push
xchg
ror
jle
pushf
or
test
shl
pop
pop
adc
jg
(bad)
stc
and
adc
pop
lds
jmp
cmc
fsub
jl
adc
test
or
mov
fsub
xor
xchg
cmp
jg
out
cmps
adc
adc
add
cld
jg
call
out
pop
cli
in
xor
cmp
shr
(bad)
cmp
xchg
(bad)
rcr
mov
cli
int
out
cmps
adc
mov
jne
push
fnstcw
inc
ins
inc
jg
pushf
imul
add
outs
in
mov
into
in
leave
pop
clc
rcl
in
jmp
dec
mov
mov
dec
mov
sub
add
sbb
mov
xchg
push
xor
ins
pop
arpl
ja
mov
and
shl
mov
cmps
loopne
add
jnp
arpl
std
sub
xor
cmp
jmp
jmp
add
cmps
jns
or
loop
repnz
fldcw
test
jnp
fsub
pop
push
sub
not
xor
add
lods
dec
stos
or
inc
leave
cmp
mov
lods
jmp
iret
mov
sub
je
push
mov
cld
or
(bad)
rcl
je
mov
add
aaa
pop
sbb
mov
loopne
outs
push
popfw
lea
push
in
jge
sbb
mov
and
movs
fist
mov
test
movs
fcmovbe
and
dec
or
outs
cmps
imul
push
xor
loope
cmp
adc
mov
mul
or
dec
rcr
fimul
dec
repz
sbb
pop
iret
mov
xor
mov
into
daa
ret
scas
xchg
sub
addr16
push
dec
(bad)
push
aad
out
cmp
das
push
sbb
rol
cmp
mov
sbb
push
pop
stos
and
cmp
(bad)
push
aas
into
jge
add
cmp
fld
cmc
fnstenv
jmp
xchg
jge
cwde
cld
nop
in
xchg
pusha
xchg
loope
cs
aad
retf
fdivr
push
in
dec
xor
sbb
stos
gs
dec
leave
push
inc
aad
add
cmp
mov
inc
ins
lods
dec
fadd
test
xchg
adc
or
mov
iret
aam
(bad)
and
out
addr16
outs
js
in
mov
(bad)
fidiv
mov
test
xchg
adc
aam
jecxz
jmp
push
jecxz
aas
test
mov
fcomp
stc
loope
jle
jmp
shl
je
adc
or
jecxz
movs
retf
icebp
jb
out
or
and
xor
cmp
sub
adc
xchg
mov
fadd
sub
xor
call
(bad)
sbb
int
xor
fist
mov
push
sbb
scas
push
sbb
ins
cmp
(bad)
pushf
fdiv
xchg
add
pusha
mov
jb
ret
rol
xchg
mov
jle
sar
inc
sbb
in
lea
enter
cs
les
dec
pop
adc
or
in
out
lock
fistp
enter
cwde
jmp
test
in
int3
dec
jnp
aaa
and
and
test
and
ror
fbstp
iret
int3
lods
adc
lock
test
jge
iret
cmp
add
xchg
loope
add
xor
mov
mov
out
ins
repz
xchg
inc
add
shl
popa
jae
add
and
cmp
pop
mov
adc
xlat
jge
sbb
cmp
mov
rcl
mov
pop
neg
inc
sbb
inc
or
sbb
push
neg
cmp
push
cmp
inc
cs
mov
xchg
aas
pop
mov
jb
test
stc
xor
cwde
jno
jp
vmaxpd
mov
lea
aaa
or
call
push
add
inc
sub
movs
fwait
out
jnp
adc
(bad)
cli
cmp
test
sar
out
call
dec
cs
into
or
ins
hlt
sub
movs
std
jg
inc
push
mov
gs
jns
xor
xor
xchg
sub
push
inc
bound
loop
(bad)
push
push
cmp
js
push
icebp
add
inc
(bad)
add
push
sbb
push
pop
sbb
mov
add
inc
aam
xor
jne
xchg
inc
imul
loopne
push
dec
adc
in
outs
out
xchg
mov
sub
loop
sbb
sahf
cmp
(bad)
mov
cmc
jno
call
std
pop
adc
xor
ins
mov
adc
clc
(bad)
jno
into
aas
pop
push
fst
lahf
adc
adc
ror
sbb
stc
cmc
fcomp
jp
out
in
push
scas
jl
outs
xchg
shr
and
xchg
test
cld
or
or
xchg
neg
xchg
jl
fcomp
mov
bound
push
sbb
icebp
or
mov
xchg
loopne
adc
adc
push
fidivr
cdq
pop
pushf
inc
jae
jg
or
ficomp
or
sahf
dec
mov
sub
bound
sub
nop
push
movs
jo
push
jmp
call
aam
mov
jo
inc
xchg
inc
loopne
mov
jle
jmp
add
adc
adc
mov
xchg
scas
packsswb
stc
ds
push
gs
add
popf
popf
fdivr
fsubr
jle
fs
(bad)
sub
call
in
fisub
idiv
pop
int3
sub
push
adc
scas
fadd
inc
jnp
vpsubsw
mov
aam
das
mov
inc
sub
push
ret
xor
aaa
lds
jnp
sbb
pop
les
add
add
and
hlt
(bad)
adc
jns
loopne
pop
rol
pusha
ror
mov
jecxz
dec
aaa
idiv
and
pop
test
imul
jge
sub
test
out
fmul
mov
xchg
pop
repnz
(bad)
out
xchg
jo
(bad)
repnz
sub
xchg
push
push
aam
pushf
mov
push
outs
int3
(bad)
push
add
shl
push
aad
icebp
inc
fisttp
aas
ret
inc
dec
add
cmp
jno
or
aaa
mov
sbb
adc
adc
pop
jae
sbb
jecxz
jbe
cs
fld
jmp
pusha
movs
jl
call
xor
ins
popf
jmp
lock
mov
xor
shl
push
dec
xchg
fs
xor
sbb
push
ins
xor
mov
imul
cli
rol
into
xor
sub
imul
mov
out
in
cmps
retf
dec
stc
in
sbb
jo
adc
adc
ds
sbb
aad
jns
jns
out
jbe
(bad)
movs
xor
ret
outs
adc
dec
lock
aad
shl
aas
and
or
int3
sub
cmp
inc
mov
enter
lock
loopne
xor
sbb
xchg
and
clc
mov
addr16
test
inc
(bad)
xor
inc
mov
out
sub
and
retf
iret
and
xor
std
lods
mov
mov
cmp
mov
cmc
retf
movs
cdq
cmc
mov
scas
push
mov
std
xchg
sub
inc
retf
xchg
pusha
retf
mov
rcr
pop
xchg
fiadd
cdq
pop
pop
mov
(bad)
outs
sub
jmp
cmp
movs
sub
cmc
adc
dec
sbb
inc
push
mov
push
outs
jl
pushf
js
jmp
pop
test
stos
add
cmp
jno
gs
les
shr
add
pop
ret
adc
stc
loope
jb
fisub
out
mov
push
sub
cmp
fstp
mov
dec
dec
outs
inc
xchg
hlt
or
call
push
fistp
test
jae
xchg
inc
add
fwait
scas
test
mov
lahf
adc
cmp
call
cmps
jmp
pop
fs
sub
or
push
jnp
xor
sub
xor
ss
movs
xchg
inc
popf
mov
retf
pop
xlat
mov
mov
jg
cmp
ror
call
push
jmp
arpl
xchg
ins
cmp
cmp
test
mov
add
pop
mov
mov
or
fiadd
mov
out
cdq
popf
jp
std
jae
or
push
(bad)
sbb
dec
push
mov
adc
nop
lds
and
mov
out
sub
or
and
sti
lahf
rcl
aas
addr16
out
ret
cli
fldlg2
jae
jb
ds
lods
mov
cld
fisub
fcomp
pop
pop
adc
addr16
outs
pop
call
push
mov
rol
push
cs
(bad)
jp
aad
aad
cli
and
xor
fsubr
add
repnz
sbb
inc
pushf
dec
and
std
call
jg
stos
pop
ret
jo
or
xor
fadd
adc
and
sbb
push
lds
loop
aas
cmp
cmp
lock
xchg
or
mov
xor
jge
mov
mov
mov
jge
mov
jmp
xor
and
in
clc
xor
xchg
fisubr
test
sub
pop
adc
in
pop
call
pop
out
in
cmp
xchg
sbb
retf
repz
es
pop
cmp
pop
test
outs
pop
pop
jg
xor
mov
sti
jno
adc
and
pushw
or
js
in
and
ins
inc
rcl
mov
lds
in
xchg
repnz
cmp
je
and
and
mov
pop
and
icebp
std
iret
sub
lock
xchg
loopne
inc
mov
pop
fwait
cli
cdq
mov
add
push
mov
fadd
out
shl
pop
popf
xchg
adc
jae
pop
mov
or
cmp
into
and
xor
pop
lahf
mov
movs
xchg
inc
jmp
test
arpl
and
xchg
stc
aam
xchg
sub
shl
inc
and
rcl
xchg
sbb
xchg
scas
shl
inc
and
xchg
dec
xchg
pop
mov
iret
(bad)
mov
mov
outs
arpl
cs
pop
jg
movs
retf
jnp
stos
mov
inc
stc
mov
pop
ror
mov
xor
jge
call
clc
lsl
nop
mov
mov
or
jb
popa
jl
sub
add
or
shl
sbb
repnz
cmps
(bad)
hlt
mov
jge
loop
call
test
sub
push
test
outs
xchg
je
icebp
mov
mov
mov
jb
outs
sbb
scas
inc
inc
ret
jns
lahf
ds
aam
cmp
push
cmp
pop
sbb
mov
push
shl
inc
ret
mov
and
call
in
dec
jbe
retf
cmp
std
sti
adc
mov
lock
inc
ss
adc
push
stos
mov
div
jmp
es
leave
in
cmp
jo
popa
sbb
jb
xchg
cmp
daa
mov
sbb
jmp
movs
push
inc
push
cmp
cwde
imul
mov
sub
and
mov
pop
imul
ss
test
adc
iret
sub
and
in
call
gs
aad
test
and
pop
xchg
loopne
out
nop
data16
fwait
pop
fnclex
ins
call
loope
(bad)
lock
shr
adc
add
outs
out
mov
adc
xlat
gs
push
outs
jne
cwde
push
mov
cmp
sub
call
sbb
cmps
jge
dec
js
xchg
xor
push
les
call
xchg
inc
jae
xchg
push
and
or
int
mov
outs
lds
sbb
in
ds
xchg
js
inc
xchg
sub
ds
cmps
push
int
aaa
add
add
add
xchg
bound
push
call
rcr
xor
ds
into
push
ins
and
jmp
push
lods
sti
test
dec
sbb
mov
jg
lock
jecxz
push
pop
or
pop
mov
imul
jbe
adc
and
mov
imul
push
jb
scas
js
push
aad
inc
mov
mov
jno
ror
inc
std
stc
(bad)
jne
sbb
call
cs
jge
dec
mov
adc
cwde
test
rcr
pop
mov
cmc
dec
fbld
mov
jecxz
ja
mov
mov
jne
ss
adc
add
cmp
push
inc
cs
mov
mul
outs
nop
push
sbb
mov
fnstenv
adc
popa
pop
cdq
inc
test
inc
mov
mov
lock
mov
out
and
cmps
addr16
mov
test
and
clc
push
cmp
dec
xchg
(bad)
cmc
imul
in
dec
and
cmp
out
retf
out
and
sub
vmwrite
pop
movs
scas
mov
daa
pop
dec
cmps
cmp
add
add
xor
arpl
pop
push
add
or
pop
mov
push
and
and
sbb
aam
adc
xlat
push
sub
sub
xchg
jbe
dec
cmc
jae
mov
push
or
push
les
push
inc
xchg
les
add
arpl
add
aam
addr16
scas
aam
(bad)
fsub
bound
scas
out
xchg
jmp
aam
mov
in
jg
ret
xchg
jns
pop
das
ins
inc
fnstenv
jg
stc
std
test
icebp
sbb
adc
pop
nop
in
cs
pop
and
fmul
out
add
mov
(bad)
mov
jge
int
fbstp
js
jle
mov
xor
sahf
or
loope
or
dec
and
lahf
addr16
(bad)
jne
sahf
mov
sbb
inc
sbb
ds
aam
mov
leave
jmp
xor
dec
and
fucomip
add
push
inc
pop
std
sub
and
push
inc
push
cmp
push
xor
push
xchg
es
lahf
dec
pop
sahf
test
cli
adc
or
ja
add
mov
gs
xchg
lea
aad
clc
dec
and
mov
pop
inc
inc
(bad)
lahf
xchg
xchg
sahf
(bad)
sub
aaa
arpl
ins
lea
mov
ror
fcmovu
aad
and
icebp
(bad)
adc
sub
push
mov
(bad)
jnp
jp
adc
pop
outs
cmps
mov
push
fistp
in
inc
mov
add
div
lods
out
in
cmp
and
rcr
cld
xor
sbb
or
inc
inc
mov
sbb
(bad)
mov
pop
mov
add
test
popf
movs
test
rol
dec
sub
aam
pop
add
cmps
fs
cmp
xor
movs
fcom
mov
in
push
cs
cdq
scas
dec
lea
pop
out
je
stos
iret
inc
cmp
fadd
inc
or
cli
push
xchg
and
mov
and
jecxz
aad
popa
test
mov
or
jb
aam
lahf
fwait
inc
and
cld
js
imul
clc
mov
pop
out
mov
or
popf
push
pop
outs
cmp
cmc
ss
sub
out
lods
loopne
test
fs
jl
xchg
mov
pop
jecxz
push
bound
mov
mov
and
das
mov
mov
mov
push
and
adc
cdq
add
inc
in
stos
aad
daa
pop
xchg
stos
je
jmp
rol
xchg
jp
xor
mov
cmp
jns
cmps
cwde
(bad)
pop
iret
in
sub
lods
(bad)
sub
and
sbb
leave
shr
nop
inc
push
pop
(bad)
sti
dec
mov
call
test
leave
arpl
pop
mov
int
or
and
lods
cmp
push
stos
and
in
xchg
test
and
push
div
ds
adc
push
inc
retf
add
bndldx
int
push
(bad)
dec
jl
fdiv
test
or
adc
out
dec
xor
test
std
pop
dec
xor
or
fcmovbe
jmp
pop
out
add
fnstsw
sub
(bad)
inc
inc
scas
loop
and
mov
pop
mov
cmp
dec
leave
(bad)
in
add
imul
pop
dec
sar
push
xor
lahf
mov
xchg
cli
retf
jo
xor
mov
std
mov
or
daa
jae
mov
push
add
cmp
es
(bad)
jl
jmp
mov
sahf
pop
loop
push
pop
dec
dec
das
test
sbb
rcl
ret
les
ficomp
push
pop
pop
or
(bad)
fild
arpl
es
clc
dec
popa
cmp
hlt
in
xlat
mov
mov
in
jge
push
jmp
push
mov
mov
popa
and
adc
imul
add
(bad)
jl
retf
retf
leave
in
jg
dec
mov
icebp
sub
popa
sub
cs
sbb
or
mov
in
movhps
xor
inc
cld
cmp
sar
jns
jno
enter
pop
mov
push
pop
mov
xchg
inc
fidiv
xor
shr
loop
leave
and
sub
repnz
or
vpunpckhbw
push
scas
je
sti
pop
and
mov
sbb
jge
repz
cmp
neg
jb
rcl
fadd
repz
fstp
aaa
xchg
out
push
mov
cmp
push
lods
sar
xlat
cmp
outs
pop
dec
or
popa
or
inc
out
xor
sbb
sub
pop
push
mov
hlt
push
mov
or
sub
jmp
push
cmc
or
or
jge
out
pop
cld
cmp
sahf
push
repnz
cmp
jl
in
lea
daa
repz
enter
loopne
lea
sbb
leave
std
push
sub
repnz
xlat
nop
jecxz
in
scas
ret
xor
add
sbb
xor
cmps
(bad)
mov
cmp
push
ret
data16
gs
sbb
jle
stos
loope
mov
fstp
arpl
mov
sbb
dec
mov
or
pop
jae
outs
ss
add
jg
scas
fdivr
sbb
xchg
push
sub
shl
rol
imul
arpl
mov
and
sbb
loop
sub
rcl
push
or
sbb
push
and
and
lods
arpl
lods
pop
mov
mov
inc
leave
cmps
in
daa
pop
xchg
cmp
pop
inc
data16
scas
test
push
rcr
sub
cmp
and
test
stos
mov
sbb
in
fld
in
inc
and
cs
les
adc
ficomp
adc
outs
jmp
scas
jge
stos
pop
mov
xor
cmp
xchg
add
in
xor
sub
test
pop
clc
mov
std
nop
arpl
in
rol
mov
sbb
jne
out
dec
cmp
jo
xchg
popa
xor
mov
cmp
mov
dec
popf
adc
hlt
mov
lods
jo
add
mov
mov
imul
clc
and
ds
mov
pop
adc
fst
out
clc
xor
scas
es
jns
mov
lods
hlt
nop
push
push
scas
rcl
imul
or
out
int
push
and
clc
sbb
call
push
cmp
push
push
mov
inc
mov
dec
xor
gs
mov
fs
dec
out
sbb
xchg
push
inc
pushf
mov
xor
xor
test
dec
jne
adc
bound
clc
loop
dec
rol
jg
and
popa
xor
jnp
add
or
mov
movs
or
in
movs
mov
mov
add
add
cmp
lods
loopne
push
out
and
mov
das
shl
test
pop
mov
pop
mov
jmp
mov
fnstcw
pop
jp
out
or
inc
sub
aad
push
imul
inc
jl
jg
(bad)
lock
mov
cdq
cdq
bound
dec
scas
mov
cmps
xor
add
push
inc
addr16
and
or
outs
or
push
sub
mov
jmp
out
aam
push
sti
rcl
loopne
jae
retf
fwait
in
ins
rcl
and
mov
jg
jg
cmp
repnz
mov
jmp
test
or
es
sub
pop
shl
xchg
nop
adc
sbb
cdq
outs
or
sbb
out
icebp
mov
lods
in
iret
mov
into
in
pop
push
sbb
mov
int3
shr
and
xlat
shl
fisubr
cmp
fbld
fs
jg
and
mov
pop
mov
mov
push
cmp
(bad)
sub
lods
mov
fucomp
mov
push
out
sar
rcr
sbb
pop
sbb
int
loop
mov
adc
cmp
push
hlt
inc
pop
jecxz
stc
mov
xchg
jo
pushf
test
js
movs
push
hlt
lock
jb
out
popf
shr
pop
mov
mov
jae
outs
jmp
loop
or
xor
sahf
add
in
iret
mov
out
ret
es
cmp
sbb
test
mov
icebp
sub
ins
jmp
mul
or
cld
pop
push
xor
mov
push
arpl
scas
and
imul
mov
sbb
call
dec
xchg
fwait
iret
dec
push
stc
push
imul
lods
out
pop
inc
xor
test
xor
dec
xchg
mov
(bad)
fsubr
pop
leave
clc
shl
je
aas
jbe
dec
and
in
or
out
pop
sub
test
pop
jmp
call
push
dec
ss
fadd
test
inc
sub
xchg
and
mov
cld
cmp
fwait
in
xchg
gs
xchg
pushf
mov
leave
into
inc
adc
pop
out
jmp
pushf
dec
sub
ins
adc
iret
dec
(bad)
repnz
mov
jbe
(bad)
cmp
(bad)
pop
xchg
dec
leave
ret
xchg
mov
in
mov
cwde
jl
jmp
iret
repnz
lds
sbb
out
sub
lahf
mov
xor
mov
mov
das
xor
xor
mov
cmp
sub
aam
sar
cmp
adc
mul
mov
out
xor
retf
mov
jl
pop
sahf
rcl
je
popa
sbb
(bad)
mov
movs
jne
mov
push
icebp
xchg
fisubr
ret
ret
(bad)
sar
pusha
push
push
or
push
or
push
call
and
sbb
add
inc
retf
int
cmp
or
and
push
sub
icebp
pop
(bad)
xor
or
xchg
in
jo
in
repz
lods
mov
xor
arpl
pusha
jns
in
push
pop
into
ret
lods
pushf
les
ror
mov
es
mov
cwde
cwde
pop
lods
fstp
clc
xchg
data16
stos
lahf
test
sbb
mov
inc
loop
cmps
mov
hlt
es
adc
sub
fs
push
pop
mov
mov
hlt
mov
inc
sbb
ret
sbb
outs
mov
push
sub
push
cdq
fnstsw
ret
adc
test
or
xlat
dec
push
into
sbb
add
sbb
into
ins
addr16
call
add
jp
imul
in
mov
aas
xchg
mov
out
inc
fstp
in
rdpmc
mov
repz
(bad)
out
mov
movups
cmp
rol
stc
cmp
cmp
push
daa
gs
ror
scas
mul
push
cwde
inc
sahf
or
pusha
nop
fisubr
jb
add
or
mov
lds
ja
jno
js
out
hlt
retf
sub
push
pop
inc
jns
mov
test
sbb
cmp
sar
mov
mov
add
push
into
hlt
mov
sub
pop
repnz
outs
stos
cmp
mov
in
push
xor
dec
mov
sbb
dec
sar
pop
cmp
mov
and
add
rcl
cld
dec
pop
or
js
or
mov
inc
pop
shl
imul
int3
ret
jbe
sbb
inc
and
push
pop
adc
pop
stc
push
pushf
push
mov
lods
pop
push
xchg
rcl
inc
icebp
sub
nop
jge
js
lea
(bad)
sub
std
and
out
inc
(bad)
xchg
xchg
sbb
xor
idiv
daa
and
mov
imul
imul
cmp
push
shl
dec
arpl
in
push
movs
and
mov
nop
push
cdq
enter
(bad)
push
call
fldcw
retf
mov
and
xchg
repnz
ffree
jo
jns
xor
and
push
push
pop
adc
call
les
pop
xchg
cmc
push
(bad)
jp
sub
or
mov
pop
inc
lahf
loopne
push
pop
mov
inc
bound
cmc
mov
ins
loopne
ret
sub
int
push
and
shl
push
pop
shr
sub
add
int
je
(bad)
shl
fcomip
out
aas
fdivr
fwait
xor
jecxz
dec
(bad)
shl
jp
add
jp
pop
jae
adc
fisub
lock
in
cmp
push
or
cli
mov
ret
lock
pushf
mov
fs
fdivr
lods
mov
jmp
cmp
movs
push
mov
sbb
dec
shl
jo
fild
inc
pushf
inc
xchg
and
push
ins
pop
xchg
idiv
cmp
and
test
lods
push
repz
or
aaa
cmp
dec
mov
or
mov
jno
xchg
cmp
outs
and
scas
mov
inc
mov
cwde
sub
xchg
aam
test
inc
pop
in
pop
sbb
imul
dec
call
in
pushf
add
test
sar
call
xchg
aas
mov
mov
mov
mov
and
inc
sahf
jmp
jp
xchg
or
and
xchg
sbb
mov
int
xchg
imul
sbb
sbb
jne
pop
and
cmp
aas
je
jns
push
imul
cli
ret
popf
test
mov
push
popa
popf
shl
pop
push
jl
sbb
and
jo
jb
ror
mov
gs
adc
adc
in
dec
cs
xor
cmps
or
sub
daa
xchg
xchg
std
lock
btc
push
xchg
daa
add
mov
repnz
mov
in
hlt
xchg
idiv
inc
mov
arpl
call
(bad)
out
bound
sub
xchg
push
fstp
call
dec
test
ror
xchg
call
jae
push
retf
and
jnp
push
mov
out
scas
lock
imul
mov
mov
and
cmp
jo
cmp
fld
dec
pop
cmp
call
pop
pop
std
jae
pop
pop
out
mov
bnd
enter
push
imul
jne
xchg
fidivr
mov
jmp
pop
test
jne
rcl
es
jns
retf
sub
mov
int3
stos
iret
xlat
pushf
pop
jg
data16
dec
cwde
jne
std
or
hlt
cmc
add
inc
mov
jno
ret
pop
pop
xchg
adc
pop
sbb
in
shl
shl
dec
push
sbb
mov
call
shl
mov
dec
cmc
call
pusha
pop
push
out
or
outs
sub
int3
mov
fcomp
scas
rcr
dec
jmp
mov
xchg
dec
push
sbb
and
xchg
fld
pusha
and
pusha
lock
pop
dec
movs
scas
ret
inc
(bad)
in
xor
dec
fdivr
add
cli
pushf
fdivr
pop
imul
or
ret
sub
sbb
stos
jge
pop
out
les
inc
or
sahf
aam
jae
addr16
enter
in
out
(bad)
in
mov
test
fnstsw
pushf
hlt
inc
xor
mov
pop
inc
mov
push
call
pop
sbb
das
mov
fld
in
mov
stc
dec
repnz
xchg
dec
push
mov
sub
test
fidiv
jb
jbe
aas
cmc
add
fninit
sub
adc
push
ret
out
pop
xchg
int3
ret
sbb
movs
mov
js
push
add
stos
add
xor
mov
xchg
cmp
loope
fbld
push
add
mov
(bad)
sbb
fcom
(bad)
ja
or
ret
(bad)
shl
pop
push
mov
cmp
inc
data16
xor
and
jnp
adc
ret
test
mov
(bad)
retf
xchg
addr16
les
arpl
in
sub
cdq
test
cmp
inc
ret
xor
or
outs
mov
movs
ret
push
fcomp
jb
loop
mov
dec
sub
adc
jne
xchg
mov
add
int3
(bad)
jo
adc
(bad)
and
jno
ins
sbb
shl
popf
fstp
mov
int
je
fld
sbb
and
out
pop
mov
repnz
call
add
ror
jmp
aad
push
and
mov
scas
jbe
mov
daa
xchg
mov
xor
and
dec
mov
inc
cmp
icebp
xchg
(bad)
fidiv
pop
mov
sub
and
xor
jg
sbb
xchg
push
dec
xchg
dec
aam
mov
pushf
ja
fsubr
inc
push
mov
pusha
pop
stc
jg
jns
out
cmc
cmp
mov
or
mov
cmps
test
sbb
fsubr
repnz
xchg
mov
sti
int
rcr
xchg
xchg
push
sub
push
mov
ficomp
push
fcomip
add
bound
(bad)
add
jmp
cdq
mov
(bad)
cmp
fwait
(bad)
call
repz
pop
pop
push
inc
add
sbb
test
mov
lahf
xchg
cli
jp
mov
mov
xchg
test
xchg
test
pop
pop
iret
jg
out
xchg
je
in
into
push
mov
cmps
(bad)
adc
mov
fnstcw
xor
hlt
sahf
gs
stc
push
fcom
pop
push
mov
enter
sub
adc
add
add
pop
mov
call
pop
ins
mov
movs
pop
jne
pop
pop
xchg
outs
data16
push
and
inc
aas
ficom
lea
iret
mov
fsub
jb
outs
mov
gs
or
rol
mov
(bad)
outs
movs
and
scas
jmp
jle
mov
inc
dec
arpl
imul
retf
jge
add
fwait
iret
mov
not
mov
sub
sbb
and
mov
iret
into
ja
fisubr
test
mov
mov
cmp
push
loopne
mov
mov
js
sub
and
jmp
mov
aad
jo
repnz
int3
cdq
add
jne
inc
neg
gs
out
scas
adc
push
and
int
pop
cld
inc
(bad)
clc
out
scas
nop
mov
int
inc
and
push
das
inc
inc
data16
mov
enter
add
outs
das
mov
jb
pop
call
repnz
mov
and
sub
push
test
add
or
xor
lock
mov
sub
xchg
pop
jecxz
pushf
int3
scas
push
int
test
pop
mov
cli
adc
xor
les
pop
and
jmp
or
and
cmp
adc
push
lahf
aaa
jo
pushf
addr16
and
inc
shr
jg
stc
ins
shl
mov
test
mov
jne
xchg
stos
cmp
adc
dec
dec
jp
iret
pop
jbe
jmp
mov
cmp
call
mov
inc
mov
in
push
jbe
or
jne
sbb
rol
or
das
and
lock
pusha
lods
mov
inc
pop
jecxz
bound
dec
add
sbb
mov
sub
out
mov
mov
mov
push
xchg
movs
cmp
mov
nop
jge
aas
add
gs
shl
popf
les
mov
outs
sbb
or
ror
dec
push
data16
push
inc
sbb
jmp
rol
jns
js
or
add
dec
pop
rcl
sbb
mov
sbb
cdq
push
mov
fwait
daa
and
xchg
xchg
shl
xchg
lahf
daa
inc
jl
or
rcr
movs
loopne
inc
dec
adc
inc
and
jo
xor
lahf
call
inc
or
mov
loope
clc
je
jge
ins
push
xchg
adc
iret
les
or
cmp
retf
jmp
les
pop
mov
and
aad
shr
clc
xor
gs
imul
mov
cmp
adc
adc
aam
sub
mov
xor
inc
push
rol
jmp
dec
outs
fs
out
push
aas
cmp
imul
not
push
fld
add
stc
mov
jno
and
mov
inc
je
xchg
push
ret
fst
fwait
mov
push
fsub
mov
popa
dec
cwde
outs
shl
push
jp
adc
cdq
call
ss
dec
adc
mov
(bad)
or
fst
sbb
pop
sar
sbb
outs
cmp
adc
repnz
jne
sbb
inc
sub
jbe
fadd
and
sub
mov
sbb
mov
add
pop
sbb
pop
push
sar
aam
fwait
push
pop
push
jl
pop
mov
pushf
clc
mov
outs
push
xlat
cmc
dec
lea
mul
iret
aad
mov
pop
jp
ret
mov
fiadd
jns
push
cmp
mov
ror
loopne
cmp
xor
(bad)
inc
inc
mov
jge
and
adc
imul
pop
pop
sub
leave
or
jo
arpl
shl
xor
movs
add
fwait
jl
cwde
(bad)
cmp
pop
test
ret
sbb
inc
hlt
ror
gs
jno
int3
aaa
mov
clc
loopne
mov
mov
cs
add
(bad)
aad
sahf
pop
xchg
sub
fst
imul
pop
jge
rcl
cwde
push
enter
jl
jle
push
into
inc
repnz
cmp
push
pusha
inc
sbb
out
pop
mov
mov
add
je
in
pop
mov
cmp
int3
adc
xlat
mov
jmp
lahf
not
(bad)
xor
lods
add
ds
xchg
aaa
scas
jmp
cli
inc
add
int
lods
push
fwait
leave
aaa
scas
movs
add
mov
push
push
mov
and
sbb
push
ror
push
fsub
or
push
(bad)
rcl
inc
or
xchg
pop
mov
aaa
xchg
stos
jae
sbb
bound
xchg
pushf
or
mov
into
xchg
or
std
or
or
fld
sub
lock
lea
test
cmp
arpl
adc
out
mov
adc
imul
xor
inc
mov
pop
sbb
pop
hlt
mov
xchg
sbb
push
add
dec
jp
xchg
mov
adc
enter
std
out
clc
push
or
push
adc
fcom
xor
xchg
mul
push
je
js
in
(bad)
sub
fdivrp
in
pop
xor
fnstsw
rcl
jnp
add
js
imul
pop
jmp
push
pushf
push
and
sbb
std
fs
call
call
enter
sbb
push
scas
icebp
jne
mov
inc
pop
loope
jne
sbb
cld
dec
lock
or
fcomi
movs
imul
div
cmp
jge
push
ret
loop
lds
inc
sbb
push
sbb
or
cmp
mov
cmp
inc
jecxz
(bad)
adc
fimul
mov
into
pop
mov
lea
jp
stc
jmp
lods
out
mov
call
pop
push
push
jle
and
and
and
icebp
xchg
mov
pusha
pusha
stc
out
icebp
or
sub
dec
dec
in
push
jmp
pop
or
rol
push
call
je
fld
(bad)
mov
push
sbb
test
pop
jne
shr
jmp
cmp
push
jo
pop
or
outs
repnz
jl
xor
or
xor
icebp
mov
mov
test
(bad)
push
add
cmp
jmp
jge
mov
mov
sbb
inc
in
push
pop
jp
mov
push
or
xor
jle
cmp
sahf
pop
loopne
pusha
ja
scas
iret
sbb
lods
sub
and
push
dec
pmaddwd
fdiv
es
popa
ins
push
dec
sub
mov
lods
ficom
or
jmp
sbb
add
cmp
int
jecxz
lock
sub
push
xchg
mov
aad
sub
daa
sahf
jle
mov
jg
ins
xchg
fs
jne
dec
inc
jo
add
pop
mov
sbb
imul
xchg
jmp
fs
je
sar
mov
cmp
stc
lea
outs
retf
jp
pushf
jno
adc
ja
lds
stc
loope
mov
cmp
stc
std
sar
mov
mov
pop
mov
lock
pop
cmp
sub
jae
jmp
aaa
icebp
jno
clc
xchg
stos
icebp
mov
loopne
ja
inc
(bad)
pop
in
inc
mov
(bad)
js
mov
fild
test
cmp
out
push
jnp
fstp
clc
adc
jg
shl
mov
test
xor
js
dec
xor
hlt
nop
(bad)
or
mov
xchg
sbb
icebp
inc
adc
jge
pop
xor
fnstenv
rol
sbb
mov
mov
and
ins
call
mov
push
into
adc
daa
not
cwde
ret
adc
xor
and
xor
push
cmp
outs
leave
retf
inc
dec
das
cmp
dec
test
rcl
loopne
movs
cld
inc
cmps
test
loope
and
enter
sbb
nop
inc
inc
dec
int
dec
outs
dec
icebp
dec
mov
xor
add
ror
or
retf
in
push
inc
inc
xor
jnp
hlt
sbb
cld
mov
inc
test
popf
aaa
nop
sahf
xchg
mul
push
shl
daa
loope
fisttp
in
mov
add
sub
arpl
stos
daa
mov
out
cmp
push
addr16
or
or
fldenv
jle
add
lods
fild
xor
mov
jae
cmps
aam
pop
cs
addr16
mov
outs
pop
(bad)
jge
movs
mov
jno
shl
es
sub
xor
sub
das
sahf
sub
rol
adc
mov
das
jnp
ret
or
ss
ss
inc
clc
repz
(bad)
adc
push
or
and
mov
out
jmp
xchg
fs
mov
mov
cmp
je
dec
lea
cmps
sbb
sti
mov
(bad)
mov
mov
outs
leave
mov
enter
int3
in
fmul
push
pop
mov
sbb
sahf
or
cld
jecxz
pop
xchg
ss
test
ret
aas
push
pop
cmc
dec
pop
pusha
in
dec
or
dec
jmp
jmp
int
cwde
scas
or
(bad)
xor
ins
jle
inc
mov
jae
or
jl
outs
ret
sub
(bad)
fisubr
in
xchg
int
ret
daa
mov
(bad)
cs
pop
sub
stc
into
out
aaa
repnz
repz
cli
adc
inc
inc
cli
sbb
xor
(bad)
mov
mov
xor
xchg
mov
jno
push
cmp
xor
jg
ret
movs
sub
dec
aam
lods
sbb
sub
inc
push
add
stc
adc
stc
mov
mov
xor
into
xchg
imul
push
or
add
sti
in
push
mov
das
cmp
sbb
push
std
mov
aad
push
xlat
mov
pop
mov
inc
sahf
and
pop
pop
js
xor
add
jecxz
sub
jg
js
cmp
loop
sbb
adc
dec
pop
adc
mov
fldlg2
dec
jge
cdq
mov
fst
(bad)
mov
and
xchg
es
jb
aas
xchg
in
mulps
ins
fucomip
mov
mov
in
jo
scas
lock
lock
fs
sbb
add
jecxz
fmul
cmps
push
jo
mov
xchg
bound
retf
mov
in
mov
dec
cwde
ror
ja
lods
pop
xor
sub
sub
cmp
aad
cmps
adc
inc
sub
and
xlat
or
dec
arpl
sub
jne
popf
daa
sbb
xchg
push
pop
shl
push
xor
out
add
or
out
outs
sub
mov
movs
in
repnz
push
fsub
iret
aad
sub
imul
shl
shl
adc
(bad)
shl
sbb
pop
or
mov
jg
mov
pushf
imul
in
add
mov
test
iret
das
test
les
mov
push
push
(bad)
fstp
pop
loop
jae
dec
or
mov
mov
es
out
ret
xor
data16
cmp
adc
je
dec
call
sub
sbb
stos
sub
(bad)
xor
xchg
jns
mov
stos
test
dec
pop
bound
dec
add
sbb
cli
xchg
repz
mul
int
test
jno
fsub
jecxz
and
xchg
bound
inc
cmp
xchg
retf
popa
sahf
div
jg
addr16
jo
ret
cmps
fild
fbstp
mov
mov
mov
dec
icebp
push
push
gs
mov
or
jecxz
pop
inc
add
not
leave
push
scas
pusha
mov
sub
push
pop
jl
out
xor
lods
cmc
xchg
xor
push
mov
adc
ja
push
repz
mov
div
loop
std
test
es
hlt
cmps
xchg
adc
cmp
pop
fbld
clc
test
fcomp
inc
dec
test
stos
mov
inc
push
jg
ret
or
or
data16
in
retf
push
cmps
sub
pop
lds
sub
pushf
inc
imul
test
mov
clc
ja
inc
sti
ins
retf
and
sbb
popa
add
xor
les
xchg
add
lahf
lods
pop
leave
fidiv
fdivr
(bad)
leave
popa
mov
aam
mov
pop
xor
popa
fbstp
xor
sbb
sub
sbb
jb
push
inc
cs
adc
pop
gs
arpl
in
push
push
or
cmp
pop
fild
stos
ja
xchg
mov
in
push
test
fnstcw
retf
dec
div
push
out
cmp
rol
cli
xchg
stos
loopne
mov
dec
add
and
sub
xor
out
sbb
push
jbe
mov
xor
push
xor
gs
fmul
std
test
test
xor
fisubr
lea
shl
callw
js
aam
adc
js
sbb
sub
stc
sub
dec
mov
sbb
call
arpl
cmp
fwait
jae
inc
(bad)
scas
cvtpi2ps
sbb
jne
mov
pop
push
xor
shl
repnz
push
lds
mov
nop
dec
jae
movs
xchg
lds
mov
mov
jae
pop
push
fcom
rcr
nop
cmp
push
and
adc
sub
dec
call
das
repnz
and
jb
dec
ja
sbb
jne
dec
fdivr
adc
pushf
and
stc
jbe
shl
movs
add
jmp
lea
stos
jnp
mov
ds
out
push
ins
add
daa
(bad)
cli
xchg
sub
pop
loop
pop
in
sbb
test
sub
mov
sbb
cld
mov
aaa
fldcw
push
jmp
test
pminsw
movs
iret
lock
loopne
xchg
mov
sub
nop
jp
mov
test
adc
jecxz
movs
dec
bound
pop
and
mov
movs
inc
cmp
sbb
fs
pop
shl
lds
test
cmp
fild
mov
xor
loopne
hlt
sbb
int3
push
cmp
mov
jle
push
lea
inc
pop
and
icebp
call
cmps
add
dec
inc
loop
imul
std
shl
mov
sbb
sar
mov
inc
or
shl
and
movs
mov
push
pop
or
inc
jne
sbb
cmp
or
xor
adc
aam
aad
daa
sbb
dec
lods
lahf
bound
sbb
pop
aaa
sbb
jno
adc
lds
push
xchg
(bad)
bound
rol
sub
popf
dec
mov
xchg
(bad)
xchg
pop
jecxz
test
pop
in
sub
call
mov
cdq
jnp
mov
and
int3
test
mov
inc
and
adc
dec
les
pop
sbb
arpl
pop
sub
cmp
adc
sti
mov
(bad)
push
jmp
stos
lds
jne
aaa
adc
loopne
mov
les
jge
jl
pop
ins
leave
mov
hlt
ficom
je
mov
and
xor
mov
aas
out
js
fsub
inc
repz
push
(bad)
loope
xor
add
dec
inc
xchg
call
out
cld
and
mov
jg
repz
in
std
mov
mov
pop
cmp
enter
push
popf
imul
lock
int3
or
clc
mov
adc
sub
retf
cwde
test
sbb
pop
mov
outs
das
sbb
lahf
mov
jl
ror
xchg
inc
sub
adc
cmp
pusha
jecxz
and
sbb
jno
xchg
fcomp
shl
cmp
ret
adc
jge
arpl
in
add
movs
inc
loop
shr
jns
mov
outs
xchg
lds
mov
xor
xchg
arpl
xchg
or
data16
cmc
xor
mov
push
movs
fld
movs
daa
popf
pusha
movs
out
inc
cli
push
add
jne
pop
iret
(bad)
hlt
mov
and
cmp
or
pop
pop
xor
jl
(bad)
inc
mov
cmps
mov
add
mov
jne
sti
push
mov
jo
mov
lock
jbe
or
sbb
mov
mov
lahf
sbb
clc
std
push
mov
push
push
or
add
pop
in
ds
rol
les
dec
and
push
add
xchg
and
cmp
jmp
pop
sub
ins
lahf
movs
clc
lds
ss
pop
jp
aad
aaa
or
pop
sbb
push
cmc
loopne
and
mov
test
dec
mov
sub
cmps
pop
mov
test
fwait
dec
jns
fdiv
jmp
adc
and
mov
jge
aam
in
mov
pop
mov
xchg
lods
push
cmp
mov
sti
movs
lahf
not
imul
je
std
aam
pop
add
rcl
add
ins
push
mov
lds
stos
jmp
jbe
in
(bad)
fcmovnu
in
inc
xchg
das
ins
add
add
sbb
mov
(bad)
call
xchg
adc
xor
pop
cli
pop
cs
or
fcmovne
repnz
xor
xchg
aaa
jl
ret
mov
push
and
dec
mov
movs
neg
out
loop
or
imul
xor
xchg
bound
jmp
fisubr
jmp
or
pop
fcmovb
mov
cmps
or
push
jg
(bad)
lock
inc
jns
xor
mov
sbb
cmc
shr
clc
cmp
xor
imul
sub
jae
jp
xchg
dec
stc
jns
fwait
retf
jns
daa
jo
inc
xchg
pop
das
mov
and
sub
cmp
es
(bad)
adc
jo
test
adc
fbstp
jg
fs
jnp
mov
and
movs
ja
mov
lea
fimul
in
jne
rol
push
jecxz
jbe
loopne
cs
adc
mov
sar
push
or
jo
repnz
mov
lea
add
fs
xlat
sbb
fadd
jge
ret
add
jle
mov
mov
jecxz
sbb
mov
or
ds
out
imul
not
mov
xchg
pushf
pushf
mov
or
les
shr
ja
mov
loop
adc
js
jnp
xor
arpl
inc
outs
or
ret
stc
sbb
clc
adc
mov
aas
test
enter
xchg
rcl
jg
mov
or
js
and
sbb
xchg
mov
sub
sbb
stc
pop
mov
mov
inc
lods
mov
sti
cmp
loope
sbb
in
jnp
xor
out
js
movs
mov
outs
jnp
fstp
aaa
mov
mov
cdq
mov
icebp
mov
xchg
nop
inc
int
movs
jecxz
neg
add
lods
cs
push
aam
imul
mov
test
lock
jmp
lock
jns
dec
(bad)
xchg
mov
mov
dec
(bad)
sbb
aas
sbb
mov
adc
xor
in
imul
mov
test
or
nop
lock
xor
ja
fimul
(bad)
pop
mov
sbb
lea
mov
add
inc
dec
inc
inc
xor
xor
jo
add
and
jnp
adc
adc
call
dec
cmp
daa
hlt
ret
ja
call
add
int
movs
dec
dec
push
sub
repnz
xchg
xchg
icebp
sub
xor
out
mov
sub
in
jle
sbb
push
sub
pop
dec
(bad)
adc
pop
push
leave
cmp
out
xor
and
mov
ss
jecxz
push
leave
fiadd
lods
gs
je
aas
xchg
xor
xchg
push
sub
xor
cmp
sbb
gs
xchg
sbb
mov
jmp
mov
mov
mov
aad
mov
push
stos
sub
add
aas
inc
ins
mov
dec
push
mov
out
in
jge
lahf
jle
les
add
pop
sbb
frstor
and
push
mov
sbb
mov
pop
cld
pop
xor
popa
pop
mov
push
stos
enter
jg
out
jnp
adc
movs
(bad)
cs
daa
out
mov
fild
loope
add
pop
mov
imul
arpl
xchg
dec
loop
jge
(bad)
jmp
or
cdq
pop
mov
inc
pop
fisubr
das
xchg
addr16
gs
pop
mov
pop
mov
mov
in
(bad)
mov
cmp
fnstcw
and
leave
xor
dec
or
sub
aas
nop
push
inc
mov
shl
dec
dec
cmps
in
movs
int3
add
push
aad
cmps
jns
push
retf
lahf
pop
daa
adc
add
add
out
pop
addr16
(bad)
imul
cmp
jecxz
cmp
js
mov
and
mov
in
sbb
xor
scas
(bad)
data16
stc
fwait
push
push
mov
dec
mov
std
pop
out
push
scas
xchg
hlt
xchg
stos
imul
xor
aad
add
or
jp
sub
jl
pop
repnz
jp
or
adc
xchg
lea
(bad)
ss
hlt
push
or
clc
fisub
mov
pop
retf
cmp
mov
fisubr
jl
mov
xchg
xchg
xor
outs
jb
xor
or
sub
rol
xchg
xor
out
and
popf
sbb
outs
pop
add
inc
mov
xor
inc
pop
test
add
shr
xchg
pop
ins
sub
pusha
xchg
xor
mov
sbb
icebp
cs
mov
fs
out
sbb
cmp
mov
shl
pop
jne
sbb
mov
or
cwde
call
popf
fmul
test
xchg
or
test
mov
push
mov
jae
cmp
cld
mov
loop
fidivr
push
push
jp
jmp
popf
inc
xor
je
inc
lahf
inc
inc
pop
call
aam
sbb
test
push
call
test
jecxz
inc
mov
push
jecxz
pop
jae
xor
dec
mov
sub
cmp
push
ds
fisubr
scas
add
xor
ds
aad
stos
dec
lds
add
cli
sahf
mov
adc
shl
cbw
je
out
loopne
lahf
push
mov
mov
pop
sbb
repnz
repz
or
fild
cmp
mov
xor
aad
mov
in
jns
je
jmp
xor
rol
lods
shr
cli
or
mov
mov
xchg
enter
lock
fsubr
adc
mov
(bad)
mov
pop
pop
lea
(bad)
jo
sbb
xor
daa
ja
add
shl
or
inc
ins
mov
popf
xchg
movs
push
sbb
mov
jne
cdq
repz
xor
test
in
pop
aaa
retf
call
mov
out
rcr
mov
pop
cwde
xchg
dec
fcom
mov
lea
into
fs
fadd
jle
ss
test
inc
mov
lods
jae
clc
outs
push
ret
adc
es
mov
js
mov
test
into
xchg
sti
mov
cmp
pop
dec
mov
mov
aaa
jo
cmp
scas
sbb
ret
sbb
rcr
push
adc
mov
dec
dec
jmp
pusha
dec
pop
aad
mov
out
dec
stc
ret
leave
sbb
pop
movs
in
fsub
(bad)
lods
ins
jmp
jb
(bad)
pop
les
fs
mov
inc
jl
mov
cmp
pop
enter
mov
enter
inc
fstp
xor
push
inc
cmp
jbe
fcom
xchg
jl
inc
adc
push
lds
fstp
cmp
mov
xchg
shl
and
mov
or
xchg
xor
mov
enter
jns
sbb
aam
jnp
ror
pop
repz
mov
xlat
ds
sub
loopne
dec
jno
jl
fisubr
mov
adc
stos
cmp
mov
xchg
aaa
sbb
push
es
inc
mov
jno
mov
(bad)
jo
popa
dec
(bad)
outs
(bad)
out
(bad)
xor
push
cmp
cwde
cmp
and
cwde
push
sub
sahf
xchg
call
push
lock
ins
mov
xor
adc
or
data16
push
mov
xor
ds
cmp
adc
js
lahf
jne
and
mov
fwait
inc
mov
enter
lahf
mov
scas
imul
push
loop
xchg
cmp
cwde
arpl
inc
inc
add
stos
(bad)
fs
ss
mov
dec
jne
in
in
adc
std
sbb
mov
pop
iret
inc
adc
aad
xchg
xchg
fs
sahf
push
sub
push
inc
int3
bound
dec
xor
and
scas
cmps
inc
mov
mov
call
inc
lock
das
lods
sbb
repnz
in
pop
mov
int
cld
mov
mov
mov
mov
push
scas
dec
gs
and
and
mov
mov
out
call
add
xchg
out
arpl
mov
jp
gs
outs
jp
pop
xor
icebp
ins
repnz
xor
jmp
pop
sbb
adc
and
aam
mov
ds
or
dec
xchg
mov
mov
ds
(bad)
sti
std
clc
and
fidivr
fwait
and
(bad)
iret
push
add
pop
push
mov
imul
cmp
mov
mov
add
sar
cmc
dec
ret
test
cli
inc
ror
xchg
cmps
pop
sub
popf
pushf
pop
and
test
fld
sub
lock
std
imul
daa
sar
int
cli
ds
adc
les
jnp
je
pop
lahf
and
mov
add
mov
or
mov
aad
aad
pop
leave
int3
jns
mov
xor
enter
cmp
cdq
mul
rcl
mov
push
cmp
mov
mov
movs
jge
sub
test
add
jbe
mov
cmp
mov
arpl
das
dec
fcomp
and
into
push
push
xor
mov
pop
fs
mov
jmp
rcl
xchg
adc
mov
pop
mov
jmp
fs
cmp
mov
icebp
and
pop
mov
enter
xchg
aam
xchg
mov
jp
sti
iret
xchg
xchg
mov
into
cmp
dec
leave
outs
xchg
mov
jb
and
rcl
xlat
sbb
dec
fild
or
adc
int
sub
out
lds
add
fmul
mov
lock
dec
mov
jle
jl
or
pop
add
lods
mov
and
lds
jge
ins
xchg
or
clc
sub
(bad)
pop
out
arpl
into
push
sti
and
aad
inc
and
je
mov
test
pop
inc
fiadd
shl
add
std
xor
xchg
test
push
dec
mov
inc
int3
data16
mov
pushf
xchg
and
ss
jle
cmp
push
mov
lods
ret
inc
adc
xchg
and
test
pop
je
pop
sub
ret
jns
cmp
sbb
cli
jle
xchg
inc
mov
setnp
fmulp
(bad)
into
adc
xchg
ret
leave
jbe
jo
imul
pop
inc
fisttp
outs
jbe
rol
push
dec
lds
adc
cmps
and
vpshufd
add
mov
mov
dec
test
pop
pop
add
add
(bad)
imul
stos
mov
hlt
cmp
xor
xor
jle
cs
aas
or
out
jg
push
mov
sub
out
enter
cli
xor
mov
cmp
lods
mov
aaa
sub
scas
retf
or
jmp
shr
popf
mov
(bad)
adc
inc
sub
retf
cmp
jge
(bad)
fldcw
sub
mov
(bad)
and
sti
and
xchg
stc
iret
jg
xchg
pusha
icebp
lea
push
jecxz
cld
les
xor
aam
jns
add
pop
sbb
sbb
in
inc
pushf
in
je
inc
inc
adc
into
inc
mov
add
push
or
idiv
mov
in
call
adc
into
dec
add
pop
jle
not
lods
mov
push
popf
or
mov
fs
hlt
xor
xor
(bad)
enter
jmp
dec
(bad)
dec
fisttp
push
shl
push
cmp
pushf
add
les
jb
js
rcr
dec
push
adc
xlat
(bad)
push
mov
push
push
clc
jnp
(bad)
cli
fdiv
xor
mov
out
jecxz
xor
int3
cs
sbb
and
sbb
mov
jns
jmp
movs
test
xchg
push
sti
pop
dec
in
mov
mov
xchg
pop
add
jb
addr16
jle
sub
pop
jmp
sti
movs
mov
sbb
mov
fwait
into
cmp
jmp
jno
mov
cmc
or
sub
mov
add
cmp
call
rcr
cmp
inc
dec
(bad)
jle
fist
lods
cmps
or
ja
test
inc
and
std
inc
bound
pop
mov
(bad)
xchg
dec
sbb
jp
adc
mov
sub
push
(bad)
jp
sbb
cmc
add
lods
dec
mov
adc
arpl
scas
push
das
shl
in
adc
adc
leave
bound
stc
ins
fadd
push
ret
retf
mov
das
in
call
cmps
and
or
pop
bound
and
add
and
jle
aad
sub
dec
cld
outs
lahf
jge
loopne
popa
mov
mov
xchg
pop
cmp
out
xor
in
push
pop
and
dec
icebp
(bad)
push
xor
sar
imul
aaa
or
rcr
pop
pop
xchg
adc
add
out
repz
jb
sar
nop
adc
stos
or
cmp
pop
xchg
jp
pop
push
or
loop
cmp
cmp
cmp
push
pop
sbb
pop
jmp
jge
jg
inc
lods
inc
cld
xchg
cld
mov
(bad)
mov
push
dec
cs
inc
sbb
jle
jl
push
adc
sub
jmp
push
(bad)
jno
stos
mov
dec
aam
push
test
stos
ja
jge
sar
jno
inc
mov
movs
shr
or
xchg
fst
into
lea
mov
iret
mov
cmp
cli
push
ds
or
mov
push
pop
jo
daa
jo
sbb
inc
xchg
sar
mov
aad
cdq
lock
pop
mov
and
jo
jp
mov
stos
movs
and
es
mov
push
xor
sar
movs
shl
inc
ds
push
dec
in
inc
pop
fmulp
cmp
push
adc
leave
inc
push
out
inc
call
dec
and
in
mov
add
lds
add
inc
mov
jmp
push
cmp
add
cmp
popa
sbb
and
xor
lods
sbb
sub
scas
fist
fwait
mov
push
imul
push
xor
into
aam
jmp
push
shl
aam
mov
pop
inc
mov
jnp
xor
pusha
das
cs
daa
mul
das
(bad)
cmp
push
mov
fld
jmp
fisubr
int3
in
fs
call
inc
arpl
fdivr
popf
call
stc
sbb
or
or
cwde
push
and
pop
jns
xor
ins
fld
fsubr
cmp
loope
popf
(bad)
shl
adc
scas
jbe
nop
mov
jg
cdq
inc
mov
retf
arpl
ss
xchg
movs
adc
pop
aad
cmc
adc
jmp
and
iret
or
(bad)
sbb
cmp
jmp
(bad)
inc
repz
sbb
xchg
ss
movs
test
cmp
ret
jnp
or
(bad)
stc
jae
pop
(bad)
push
dec
or
sbb
jno
or
or
mov
iret
adc
mov
div
push
aam
or
outs
popf
cmp
call
aad
sti
fwait
jmp
shl
mov
sbb
(bad)
icebp
lods
cmp
push
shl
clc
fs
xchg
mov
push
lods
fild
in
jl
xchg
cmp
xchg
fisubr
inc
and
sbb
dec
adc
test
xor
dec
icebp
in
inc
pop
xchg
mov
xchg
shr
aas
sub
sub
dec
scas
ja
repz
popa
xchg
pop
fisub
pusha
hlt
inc
pop
add
iret
imul
bound
or
dec
fsub
cmps
daa
call
jp
pop
aas
std
jb
xor
and
ss
daa
rol
sub
and
xor
and
ret
retf
push
mov
cmp
push
push
pop
arpl
test
sahf
stc
lea
sbb
mov
in
cmp
sbb
jge
dec
mov
dec
jge
xchg
fst
cmp
out
ror
aam
pop
xor
loopne
sbb
pop
retf
push
jge
popf
jecxz
ja
scas
sahf
lods
jne
jb
dec
js
inc
pushf
imul
mov
inc
and
enter
or
clc
arpl
test
push
loop
(bad)
sbb
jns
adc
mov
fldenv
sub
int
je
and
jae
popa
xchg
sub
out
jmp
and
les
sahf
adc
mov
cmp
dec
in
sbb
sub
jp
mov
fild
push
push
stos
xor
or
xor
retf
push
aaa
mov
fwait
add
(bad)
dec
pop
daa
mov
mov
es
dec
pushf
rcr
and
mov
stc
sub
fbld
mov
sub
fstp
add
(bad)
jo
(bad)
bound
sbb
jae
fbld
push
mov
mov
ins
mov
clc
cli
inc
outs
jnp
push
sahf
xor
xchg
lods
mov
cld
(bad)
jnp
mov
(bad)
mov
jp
mov
and
imul
sbb
jae
movs
mov
(bad)
fistp
fxtract
pop
adc
pop
adc
jb
fcmovu
std
aaa
push
scas
and
push
or
test
xor
jl
aad
(bad)
push
sbb
ret
fadd
test
mov
sbb
xchg
out
retf
and
imul
mov
out
mov
pushf
(bad)
jo
gs
inc
xrelease
push
or
jmp
(bad)
mov
jns
(bad)
adc
es
(bad)
jno
lea
imul
mov
(bad)
imul
and
daa
das
adc
mov
movs
mov
fdivp
cmps
xchg
xlat
pop
and
ror
sub
adc
in
adc
retf
call
cwde
jns
dec
dec
or
jg
xchg
mov
mov
and
sub
pusha
mov
jl
cmp
or
jmp
leave
iret
std
or
adc
add
mov
and
mov
mov
lods
mov
inc
lahf
in
aas
sub
in
test
mov
stos
inc
pop
fld
js
xor
sbb
rcr
cmps
bound
mov
test
pop
xchg
gs
and
inc
popf
inc
das
not
shl
test
(bad)
js
stc
and
mov
xchg
jmp
call
pusha
sbb
scas
dec
xor
(bad)
jae
xchg
adc
mov
or
cld
(bad)
out
neg
fisub
mov
add
pop
pop
sti
stos
mov
pusha
sbb
rcl
loop
xchg
sar
jg
outs
mov
sar
ficomp
clc
repnz
sbb
repnz
lahf
push
fmul
cmp
pand
(bad)
jns
into
xor
pop
leave
push
or
sar
cmps
mov
cmp
cmp
cmps
sbb
push
cmps
lahf
dec
push
dec
(bad)
or
mov
xchg
imul
mov
push
xchg
arpl
addr16
out
pushf
fnstcw
push
in
mov
cmp
mov
jle
das
lea
cmc
mov
add
dec
lea
es
dec
inc
push
imul
mov
inc
push
iret
imul
jp
ins
pop
sub
mov
out
popa
add
arpl
retf
add
aam
mov
in
sbb
jno
xchg
loop
test
xchg
test
push
fnsave
dec
fsub
xchg
fisubr
xchg
jp
dec
pusha
xchg
scas
rol
test
mov
sbb
dec
ret
mov
or
pop
xchg
repnz
loope
cmc
pop
jle
test
movs
cmp
pop
cmp
mov
mov
mov
js
jl
pusha
and
xchg
fistp
dec
sar
push
repz
jno
dec
mov
jb
cmp
jp
shl
ss
nop
cmp
jl
call
js
pop
cmp
pop
or
xchg
inc
pusha
ret
mov
lods
cmc
xor
test
fadd
ss
jae
out
adc
ret
sbb
inc
aaa
mov
pop
lods
test
fmul
cmc
pop
and
imul
mov
(bad)
jns
sbb
dec
mov
movs
or
cld
fs
push
mov
dec
dec
clc
xor
(bad)
out
mov
mov
sbb
cmp
ds
cmp
or
mov
or
shl
imul
add
xor
jb
pop
ins
mov
fimul
iret
leave
inc
bound
movs
cld
xchg
and
push
xchg
std
mov
jle
call
add
ds
inc
fimul
xor
ds
mov
jg
mov
jnp
cmp
pop
jmp
and
out
fnstcw
mov
xor
das
out
std
scas
push
pop
and
popa
dec
call
lock
test
push
movs
aaa
cmp
test
cmc
mov
lods
ss
cwde
rcr
inc
sub
mov
jo
sbb
jp
jae
dec
addr16
in
test
ror
pop
sub
inc
mov
sbb
bound
adc
and
retf
xchg
fsubr
mov
loopne
fcomp
ret
push
mov
push
pop
je
cmp
xchg
(bad)
mov
sbb
(bad)
mov
adc
sub
pop
in
mov
loopne
stos
pop
arpl
mov
push
retf
lea
sub
mov
jnp
xchg
clc
mov
pusha
inc
mov
fld
(bad)
je
sbb
ins
loopne
ror
mov
aad
push
mov
inc
jg
xchg
push
xor
outs
loope
scas
jnp
sbb
mov
fstp
cmp
jae
sub
pop
pop
and
mov
loopne
inc
int3
std
fs
xor
bound
xor
push
dec
and
mov
jp
push
dec
test
ffree
int3
ins
add
stc
int3
pop
das
jmp
scas
imul
pop
sets
mov
or
repz
pushf
cmp
repnz
fmul
scas
stos
inc
into
mov
xor
mov
sub
or
jmp
sub
and
cmp
inc
and
mov
int
dec
or
(bad)
nop
pop
mov
dec
jl
bound
xor
(bad)
out
aaa
loop
push
rcl
mov
adc
cmp
mov
push
jl
inc
or
mov
test
(bad)
aad
imul
in
pop
lds
mov
inc
in
mov
cmp
ror
sahf
and
mov
nop
arpl
or
nop
inc
call
add
jnp
fsubr
movntps
xchg
cmp
mov
sub
jae
cdq
rcl
shl
cmps
gs
nop
mov
adc
add
ins
out
and
mov
gs
push
mov
out
jae
cmp
mov
bound
pop
adc
sub
frstor
aas
div
test
pop
mov
jb
jnp
mov
idiv
into
out
mov
mov
xchg
ret
xadd
pop
dec
and
mov
out
sbb
dec
aad
push
call
daa
enter
jae
cmp
xchg
and
inc
jmp
test
mov
retf
dec
or
ja
aaa
cmp
jnp
sbb
jno
int
and
pop
adc
mov
pop
xchg
test
das
pop
loope
sbb
mov
int3
mov
mov
imul
pop
pop
outs
push
pop
cmps
push
popf
fwait
inc
out
xor
punpcklwd
int
xor
adc
ret
ins
sbb
mov
sub
sahf
xchg
cs
or
into
jmp
xchg
mov
repz
push
push
dec
sbb
mov
xor
je
xchg
sub
(bad)
mov
sub
mov
cmp
adc
movups
or
mov
jl
push
aaa
add
push
(bad)
sar
mov
pop
jp
dec
inc
mov
stos
loopne
movs
add
into
neg
fistp
enter
call
pop
int3
and
cli
out
imul
jno
or
retf
pop
test
mov
sub
or
je
mov
fldcw
div
jl
inc
and
xchg
pop
rcl
xchg
mov
push
push
dec
jle
fs
sub
retf
daa
pop
mov
lea
test
pop
mov
and
xchg
out
inc
std
stos
retf
sti
daa
xchg
js
dec
inc
dec
in
cmps
call
add
test
mov
(bad)
mov
retf
aam
mov
clc
aas
js
out
sub
adc
das
pop
mov
out
ins
std
push
sbb
xchg
(bad)
push
add
cmp
test
scas
cmps
pushf
jecxz
push
or
adc
mov
jg
cmp
mov
pop
call
inc
retf
pop
add
mov
test
push
xchg
xor
retf
xchg
movs
adc
add
stc
add
push
mov
xchg
and
stc
xchg
fnclex
pop
mov
repnz
movs
rol
into
sbb
fwait
popf
sahf
fs
icebp
jne
mov
push
int3
idiv
ffree
xchg
push
pop
jle
sbb
test
jo
shl
shr
sbb
out
push
sub
stos
xor
xor
xchg
out
cmps
adc
sbb
xchg
lods
xchg
(bad)
mov
lock
loop
ret
cmc
push
sub
jge
mov
in
sbb
cmp
retf
jmp
in
into
mov
push
add
jbe
js
(bad)
xor
(bad)
push
xor
fwait
sbb
jo
mov
jmp
cdq
or
test
lods
loop
jmp
inc
jmp
mov
loopne
xor
call
push
jnp
lods
pop
and
lods
fucomi
and
xchg
inc
and
lods
xor
xchg
add
push
xor
push
xchg
shr
jle
leave
ret
xchg
inc
inc
shr
jb
(bad)
in
aas
call
sbb
cmp
in
push
push
cmps
es
leave
add
loope
scas
add
dec
sub
mov
add
mov
repz
and
push
mov
ss
mov
fbld
into
mov
dec
sub
test
retf
pusha
movs
sbb
push
fcmovu
inc
mov
pop
call
dec
cmp
jno
pop
icebp
inc
mov
pusha
inc
mov
call
push
repnz
gs
fcom
dec
jmp
enter
add
mov
std
ret
call
jno
loop
je
enter
daa
or
sub
not
outs
pop
adc
or
scas
sub
dec
push
gs
mov
push
(bad)
add
pop
and
sub
test
lea
(bad)
int3
je
cmp
arpl
add
mov
sub
in
push
jmp
pusha
enter
fndisi(8087
stos
jmp
aam
(bad)
mov
scas
repz
aas
outs
push
cmp
dec
std
cmp
pushf
rcr
push
pop
or
add
mov
outs
ins
and
inc
mov
inc
fimul
cli
xor
mov
nop
adc
jns
movs
cmp
jae
fiadd
stc
sbb
jbe
shl
call
iret
inc
movs
mov
leave
into
xor
cmp
adc
cmp
mov
rcl
fmulp
and
pop
inc
stos
jmp
inc
push
mov
pop
sbb
xor
add
aas
xor
adc
(bad)
lock
push
arpl
lods
aas
dec
add
inc
mov
cli
pop
or
sub
mov
or
mov
jmp
ret
inc
aam
std
sub
push
dec
rcr
push
sbb
ins
cmps
shr
push
inc
inc
js
mov
mov
xor
gs
xor
iret
(bad)
dec
mov
and
fist
aas
push
pop
pusha
lds
cmps
xor
ins
(bad)
out
mov
jo
lahf
mov
fucom
iret
xchg
cmp
fcmovnbe
push
shl
xchg
pop
sub
arpl
int3
mov
outs
cmp
add
pop
lock
hlt
or
pop
mov
or
hlt
cmc
into
movs
stc
mov
faddp
adc
ficom
nop
mov
push
mov
mov
mov
jp
sar
inc
mov
xor
loop
adc
cmp
pop
jge
movs
daa
cdq
push
or
and
outs
pop
cmps
or
jle
and
out
ins
pop
loop
push
pop
aaa
add
adc
jge
sbb
aad
pop
imul
sbb
jl
out
(bad)
mov
hlt
mov
ins
cmps
mov
shr
mov
imul
cmp
dec
out
mov
inc
hlt
xchg
cmp
dec
sbb
fsubr
test
and
or
adc
test
call
fcom
cmp
addr16
repnz
cld
or
sub
xchg
cld
lea
jecxz
into
pop
inc
and
push
dec
xchg
xor
push
fisttp
in
std
adc
mov
jl
jmp
xor
jecxz
rcr
sub
std
sub
or
sahf
shl
push
mov
xor
call
clc
jp
mov
ja
push
and
iret
push
xor
inc
imul
push
shl
push
and
xor
adc
dec
cld
pop
test
scas
add
push
adc
pushf
out
arpl
adc
test
retf
dec
add
pop
ss
loopne
out
mov
fidiv
outs
push
push
popf
fisttp
fcmovu
(bad)
jg
and
dec
cld
cli
dec
in
inc
int
push
mov
loop
outs
imul
mov
cli
cmp
popf
enter
sub
shl
pop
mov
dec
add
jo
cld
stos
mov
(bad)
mov
adc
ss
gs
cmp
adc
adc
mov
adc
enter
jo
stos
out
in
mov
fwait
and
out
stc
pop
push
out
int
jg
sbb
push
je
xor
mov
stos
cli
sbb
pop
xchg
retf
mov
xor
rol
sub
leave
xchg
aaa
xchg
sar
int3
pop
jmp
ret
pshufw
inc
stos
mov
inc
mov
loope
sar
cs
pop
std
mov
bound
push
shl
test
sub
and
pop
push
add
add
push
push
aam
push
xlat
jge
sbb
lods
dec
jg
cs
fcomp
add
stos
outs
neg
adc
mov
cmp
outs
cmp
(bad)
fs
and
imul
ret
lea
jbe
inc
sub
and
xor
fdivrp
add
fiadd
jle
xchg
add
or
imul
xchg
mov
ret
retf
inc
cs
mov
or
ret
mov
in
mov
xor
daa
sbb
pusha
movs
push
jo
fadd
dec
sbb
push
cmps
pop
or
mov
cs
or
out
pop
push
mov
jns
mov
mov
xor
call
push
fdecstp
ins
popa
inc
mov
test
sub
retf
xchg
cmp
cmp
retf
mov
add
repz
xchg
jno
cmp
sbb
in
and
(bad)
out
scas
xchg
cwde
xor
arpl
mov
fwait
sub
jmp
mov
xchg
mov
les
(bad)
das
sbb
outs
rcr
jge
dec
repz
in
scas
ficom
fdivr
repz
jbe
popa
inc
mov
in
lods
stc
adc
add
add
cmc
ins
push
paddsw
pop
lods
stos
xchg
gs
sub
sub
pop
inc
(bad)
jne
sbb
jp
jl
mov
xor
inc
xchg
jb
movs
fldenv
in
js
imul
movs
inc
cmp
bound
xor
add
out
mov
dec
cmp
mov
mov
shl
sbb
push
sbb
jmp
loopne
pusha
pop
xor
outs
(bad)
mov
aaa
fwait
popa
push
mov
jmp
daa
sbb
icebp
dec
(bad)
(bad)
adc
sub
lds
pop
and
mov
inc
xchg
xchg
pop
and
push
sbb
add
fmul
daa
jmp
cmp
push
out
aad
mov
or
xchg
pop
sti
sbb
int
cmc
jmp
jae
and
cmp
sbb
or
ds
movs
sub
icebp
outs
in
jmp
jp
fdivr
add
xor
(bad)
sub
stc
das
shl
and
icebp
mov
lods
xchg
and
pop
add
dec
and
neg
adc
inc
push
or
pop
mov
fistp
fldenv
xor
mov
clc
cs
sub
adc
and
fwait
add
mov
cwde
mov
adc
mov
aas
push
fwait
mov
push
push
and
int3
push
fnstsw
mov
or
jb
adc
in
and
xchg
push
(bad)
or
jg
push
mov
add
(bad)
pop
mov
pop
prefetch
fsubp
mov
and
xchg
mov
mov
int3
xor
sti
pop
mov
jne
in
mov
shr
daa
js
(bad)
int
in
ror
xchg
nop
fs
mov
out
xchg
and
iret
lock
jecxz
cmp
lock
push
pushf
and
rcl
sbb
mov
enter
aam
in
ss
adc
rol
add
(bad)
push
popf
pop
xor
push
aad
lods
stos
xchg
arpl
stos
mov
mov
add
jl
xchg
dec
sbb
pop
in
fcom
jge
mov
mov
mov
xor
popf
and
call
xor
xchg
gs
mov
shld
mov
mov
push
ss
loop
data16
sub
adc
add
inc
das
mov
enter
out
push
arpl
mov
daa
mov
imul
pop
xlat
pop
mov
mov
cwde
pop
and
sbb
iret
retf
rcl
cmp
cmp
xor
pop
test
pop
or
scas
in
daa
sbb
fisub
rcr
repz
mov
in
adc
imul
fs
or
fcmovbe
aad
jmp
xchg
mov
clc
jecxz
dec
(bad)
ss
cmp
xchg
(bad)
sub
lods
xlat
jge
shr
std
xor
push
cld
xchg
jp
cmps
xchg
ins
mov
dec
xor
fild
push
je
pop
rcr
push
repz
cmp
cmps
jbe
xchg
std
pusha
cmp
stc
ins
in
inc
out
xchg
pop
loop
adc
cli
jno
sbb
jb
mov
or
ror
hlt
gs
push
dec
mov
dec
dec
daa
cdq
push
jo
inc
push
addr16
in
inc
add
js
adc
scas
(bad)
daa
adc
pop
cmovo
xor
dec
inc
in
add
lgs
push
leave
push
int3
add
jns
mov
mov
adc
mov
(bad)
push
call
sbb
sbb
rol
or
je
and
lds
repz
pop
or
out
test
mov
lock
jne
push
push
aas
int
mov
popf
xchg
test
cmp
adc
shl
sbb
and
clc
mov
(bad)
sbb
leave
cs
push
push
out
leave
(bad)
jmp
loopne
add
pop
daa
jo
int3
fistp
cmps
pop
ins
adc
adc
jae
or
mov
test
in
mov
(bad)
cmps
mov
xchg
cmc
xor
scas
inc
aam
fneni(8087
sbb
ror
ud2
adc
and
mov
dec
inc
mov
das
or
mov
rcl
imul
adc
xchg
xor
in
aaa
lds
jge
(bad)
xor
nop
dec
imul
repz
push
pop
je
std
out
test
loope
fbld
in
(bad)
(bad)
jg
inc
xchg
lock
push
dec
popa
out
lahf
mov
jns
adc
jne
mov
loopne
fistp
repnz
or
in
cmp
mov
xchg
(bad)
ds
mov
cmp
out
mov
jae
in
dec
data16
ja
and
cmp
ins
ins
out
xchg
mov
mov
hlt
push
pop
sbb
arpl
lods
fwait
jb
jle
shl
inc
push
test
fwait
adc
inc
dec
mov
clc
cmps
movq
imul
(bad)
push
mov
mov
pushf
push
and
imul
gs
imul
push
sbb
leave
js
mov
(bad)
leave
clc
xchg
inc
sbb
xor
dec
jne
fisub
sub
mov
imul
xchg
arpl
outs
mov
aad
std
int3
and
xor
lds
cli
(bad)
fbstp
shr
mov
nop
jge
xlat
popa
cli
retf
sbb
dec
mov
ror
ficomp
inc
aad
push
xor
fs
dec
mov
cmp
int
and
sbb
sbb
stc
mov
arpl
jle
cdq
fsubr
and
xor
scas
mov
(bad)
mov
cwde
dec
out
je
les
dec
mov
add
shl
adc
xor
outs
data16
push
aad
and
int
(bad)
push
dec
in
aaa
push
or
hlt
call
cmps
ds
push
hlt
hlt
daa
lods
xchg
test
adc
inc
inc
icebp
fldpi
pop
lods
idiv
fstp
cmp
ja
outs
retf
out
out
sbb
and
aam
out
cmp
pop
fisttp
fnstenv
popf
retf
call
pop
lods
inc
sbb
fbld
xor
xchg
loopne
inc
cmp
and
dec
inc
out
sub
fist
pop
push
or
das
dec
xchg
add
dec
imul
js
mov
cdq
sbb
mov
push
les
inc
mov
dec
lea
and
and
xchg
inc
call
call
test
repnz
inc
iret
mov
les
jnp
mov
add
stos
out
mov
iret
push
jge
push
push
mov
inc
mov
pop
sbb
push
(bad)
xor
cwde
test
pop
loope
lock
push
(bad)
pop
fild
push
scas
jb
jg
(bad)
cmp
in
inc
jb
mov
popf
add
xlat
xor
jo
fs
mov
mov
or
mov
ret
sbb
mov
fwait
dec
in
lahf
loopne
sti
push
mov
push
sbb
aaa
ins
jg
push
mov
sahf
dec
push
mul
(bad)
js
lods
pop
mov
xchg
(bad)
push
bound
(bad)
push
repz
fld
jnp
jp
or
lods
das
clc
std
inc
aam
adc
fwait
and
adc
das
dec
pop
mov
fsubr
push
cmp
mov
xor
add
adc
push
jg
sub
inc
out
js
lods
mov
add
mov
xor
inc
imul
cmp
or
das
xlat
and
add
or
push
sub
mov
cmp
sbb
mov
push
test
loop
enter
and
jo
or
cmp
and
loop
xchg
push
mov
inc
adc
aam
rol
push
test
in
pop
pop
cmps
mov
dec
mov
push
dec
in
mov
sbb
or
add
outs
pop
fisttp
jo
mov
jb
mov
xchg
loope
fidiv
jg
mov
mov
daa
jns
test
mov
sub
inc
push
cmp
jo
cli
jmp
stos
mov
fild
je
cmps
fwait
fwait
or
ja
pop
ret
icebp
imul
inc
jmp
fidiv
mov
mov
jbe
push
sub
out
in
imul
inc
jnp
popf
sbb
cmps
xor
push
xor
loop
or
add
sar
jge
and
ror
ret
mov
mov
or
popa
xor
dec
nop
add
pop
cmp
stos
rcr
push
data16
mov
repz
mov
jne
jmp
jne
(bad)
dec
mov
retf
test
fstp
and
dec
inc
pop
out
call
xor
push
and
jp
arpl
xchg
test
or
xchg
jl
clc
je
adc
sbb
sub
and
mov
cli
add
mov
out
dec
popf
adc
sahf
inc
int3
xchg
gs
gs
jge
(bad)
out
dec
arpl
ret
pop
xor
dec
clc
dec
(bad)
mov
mov
add
in
add
inc
xor
(bad)
mov
pop
(bad)
pop
sbb
pusha
or
mov
mov
ja
jne
push
pop
int
jp
or
adc
xchg
add
jbe
push
sti
loop
repnz
pop
hlt
push
mov
call
inc
cmp
rol
xor
xor
xor
sub
hlt
jmp
pop
add
mov
pop
dec
fs
jmp
xor
mov
js
fwait
jp
sbb
adc
mov
mov
mov
xor
add
mov
loope
jecxz
add
adc
iret
sbb
shr
jle
dec
mov
inc
iret
dec
(bad)
cmp
mov
movs
gs
push
in
stos
popf
inc
pop
movs
jne
sub
sbb
fild
mov
(bad)
shl
je
outs
in
pushf
mov
sub
nop
gs
int
icebp
push
in
jp
cmp
retf
les
ret
sahf
fwait
das
jne
mov
scas
mov
bswap
jae
loopne
mov
xchg
add
enter
fld
sub
jno
inc
cmp
lea
ror
mov
pop
test
mov
and
fst
cmp
into
lea
push
or
sar
adc
adc
add
mov
repnz
aad
or
dec
or
xchg
push
test
nop
arpl
lds
mov
xor
shl
sar
cld
in
pop
dec
mov
dec
in
aaa
sub
dec
out
cdq
jae
adc
xchg
je
add
mov
repz
aam
xor
push
pop
out
add
pop
into
ss
pusha
into
mov
xchg
test
or
jno
adc
mov
push
shr
pop
mov
mov
pand
push
ins
fisub
loop
add
das
pop
push
int3
or
fstp
test
(bad)
mov
adc
jecxz
cdq
stos
pop
dec
inc
pop
mov
out
int
cmp
add
cwde
ins
ins
shr
lods
adc
xchg
cmp
xor
call
xchg
cmp
fidiv
test
xor
push
(bad)
mov
das
push
mov
inc
xor
adc
sbb
out
jecxz
popa
xchg
xor
mov
sbb
xor
aam
movs
fbstp
dec
sub
xor
push
scas
lahf
xlat
(bad)
and
aam
and
sub
mov
mov
lahf
movs
iret
aaa
pop
lods
movs
cld
sub
loopne
in
pop
or
or
ret
loopne
add
xor
pop
in
add
sub
inc
mov
sbb
or
sahf
sub
jnp
addr16
mov
pop
xchg
inc
jecxz
sbb
test
dec
push
cmp
outs
mov
sbb
je
cwde
daa
inc
ret
into
test
repnz
movs
sbb
lock
jns
mov
push
and
lock
aad
enter
movs
int
push
(bad)
xchg
adc
sub
loop
mov
loopne
pushf
call
ss
jno
inc
mov
sub
repnz
mov
xchg
gs
jl
and
mov
pop
lds
enter
test
test
scas
lds
repnz
xor
xor
xor
imul
inc
jmp
cli
out
or
ret
xchg
pop
sbb
je
add
cmp
adc
jmp
in
cmps
clc
add
call
rcl
mov
push
loopne
cmp
add
daa
push
pop
aas
mov
pop
in
(bad)
xor
cmps
xchg
push
cmp
stc
or
inc
rcr
pop
mov
mul
lods
jo
push
fst
cwde
jge
sub
jp
popa
loopne
inc
push
repz
xor
(bad)
imul
aam
out
and
enter
pusha
int3
pop
xor
call
into
clc
es
fld
ds
mov
or
test
iret
std
push
sar
bound
fst
dec
rep
mov
push
sub
add
add
ss
ins
iret
jno
sahf
pop
pop
sub
cmp
cwde
adc
and
xor
pop
sub
adc
scas
(bad)
retf
inc
push
and
int3
loope
ds
clc
ins
adc
pop
and
push
(bad)
mov
sub
xchg
add
cmc
mov
fucom
mov
lods
jo
out
scas
aaa
push
rcr
mov
or
sbb
push
outs
add
pusha
movs
aam
fwait
jle
push
in
fidivr
data16
xchg
sbb
mov
and
push
push
ins
or
sub
pop
retf
fwait
fs
fcmovnb
ss
mov
(bad)
out
stc
jno
jmp
(bad)
mov
inc
hlt
imul
(bad)
or
jmp
dec
inc
rcl
push
sbb
mov
pop
jae
or
jp
outs
daa
and
fisubr
jne
(bad)
cmp
aam
lods
jmp
sub
adc
push
mov
pop
rcr
jp
xor
xor
jmp
call
xor
cmp
test
push
movs
jns
inc
sbb
and
cmps
jo
sbb
int3
icebp
pop
xor
pop
inc
enter
mov
xor
mov
or
outs
sbb
sbb
(bad)
or
rcr
jmp
loop
adc
or
inc
jg
jbe
pop
sub
mov
jmp
sbb
rcr
pusha
out
or
jecxz
and
ss
or
cmps
cld
inc
in
pop
jno
pop
lock
movs
dec
inc
ret
mov
xor
ds
fistp
movs
into
adc
pop
mov
pop
push
xchg
jne
mov
xor
sub
and
out
mov
cs
out
cmp
fsubp
pop
dec
jge
mov
popf
xchg
xchg
and
xchg
icebp
mov
div
add
dec
adc
jae
cmps
dec
inc
push
inc
(bad)
mov
push
cmp
xchg
pop
test
mov
and
aas
dec
mov
in
jbe
inc
add
clc
into
adc
adc
stc
xchg
xor
dec
repz
js
shl
xchg
fild
xchg
dec
dec
mov
mov
mov
pop
xor
outs
sub
in
das
xchg
cmovge
sbb
cli
jl
mov
js
mov
mov
pop
cmc
js
jns
sbb
mov
or
jmp
cmps
cmps
push
ss
dec
pop
adc
xchg
into
ins
and
push
(bad)
mov
xor
or
cld
sbb
sub
and
pop
cmp
call
pop
cmps
imul
mov
xor
ds
lock
push
sbb
xlat
xor
mov
xor
call
daa
or
push
cmp
out
retf
inc
fwait
loope
pop
arpl
lds
nop
in
es
lahf
push
pop
into
xor
cmps
es
lahf
xchg
dec
cli
es
and
sbb
pushf
sub
jbe
aaa
sahf
ret
xor
inc
mov
dec
scas
xor
jl
ins
into
or
ds
nop
mov
sub
sub
fmul
lds
sbb
push
dec
aaa
lock
mov
dec
sub
into
adc
ffree
cmp
cwde
(bad)
mov
sub
sti
pop
enter
jo
push
and
push
dec
jmp
sti
push
push
mov
xchg
push
push
add
sub
sbb
jmp
mov
mov
dec
and
stos
mov
enter
inc
jne
xor
aam
cli
push
nop
adc
pop
and
(bad)
rol
js
popa
cli
add
push
aad
ror
fidiv
ins
lea
cmp
push
popa
inc
gs
and
dec
(bad)
ss
lods
into
in
cmp
xchg
icebp
sub
aam
out
mov
xchg
inc
(bad)
icebp
or
cmp
fidivr
pusha
push
test
sub
retf
loope
add
xchg
movs
loopne
call
ins
out
mov
stc
bnd
mov
(bad)
fsubrp
sub
fucomip
retf
pop
xchg
sti
mov
cmc
(bad)
ds
iret
cmp
mov
mov
add
clc
adc
pop
or
cmps
nop
test
out
je
mov
jmp
push
mov
stos
sub
clc
push
fdivp
xlat
pop
fdivr
test
mov
sub
pop
fwait
sub
out
lea
xchg
call
mov
inc
adc
std
inc
ins
dec
test
fst
bound
xchg
jecxz
cmp
or
mov
sub
mov
push
js
push
or
push
adc
lahf
imul
pusha
fwait
retf
mov
sub
push
xor
ja
inc
loop
ds
fcom
dec
retf
outs
or
sbb
and
mov
dec
jnp
xor
ret
inc
and
cdq
jnp
stos
shl
or
outs
mov
test
icebp
in
cmp
inc
add
stos
mov
stos
pop
or
mov
dec
push
push
or
dec
outs
mov
mov
jg
bound
cmc
fmul
mov
push
xor
mov
adc
call
inc
push
ret
daa
addr16
pop
loopne
std
into
cmc
aad
xor
adc
fst
push
jo
mov
retf
push
mov
jo
ds
mov
test
xor
mov
pop
inc
es
xchg
adc
push
daa
add
adc
sub
clc
jns
dec
dec
dec
adc
inc
retf
gs
mov
pushf
(bad)
fmul
xchg
fldenv
mov
lock
aaa
es
cli
push
(bad)
jbe
sub
ins
inc
loope
push
arpl
pop
js
pop
sar
nop
sub
mov
cmp
ret
lea
stc
pop
sbb
fs
sbb
stos
jg
push
imul
jb
inc
leave
test
add
pop
cwde
mov
mov
ror
cli
div
push
retf
mov
test
out
leave
(bad)
and
adc
mov
add
and
frstor
xchg
cmps
or
pop
rcl
imul
jle
shr
(bad)
adc
xchg
aas
dec
mov
jmp
outs
call
jmp
push
shr
shl
js
xchg
adc
push
(bad)
(bad)
mul
fwait
and
mov
fidiv
or
test
xchg
out
(bad)
scas
fadd
push
mov
std
and
xchg
push
ja
adc
push
add
push
pop
sub
sbb
sub
out
mov
in
repnz
jo
popf
lea
adc
repz
inc
out
sar
popf
jo
or
pop
loopne
test
in
imul
push
(bad)
or
in
jmp
hlt
(bad)
ja
shr
xchg
out
dec
pop
dec
jg
hlt
dec
imul
push
call
(bad)
or
addr16
test
outs
push
cmp
inc
cld
inc
imul
sbb
inc
ins
pop
jge
fild
adc
js
or
push
icebp
jo
push
adc
inc
dec
ja
adc
pop
xchg
retf
div
or
push
sti
xchg
and
lock
add
retf
test
dec
mov
out
add
mov
sub
sar
pop
xchg
inc
rcl
sbb
scas
mov
lea
dec
aam
mov
pusha
test
xlat
das
sar
jle
mov
sbb
xlat
adc
sub
ds
fadd
call
ret
bound
je
mov
xchg
add
add
rcr
(bad)
mov
jae
sbb
mov
neg
or
sub
add
and
jmp
pushf
lahf
mov
inc
aas
push
call
adc
xor
ret
mov
mov
popf
fnsave
jle
inc
cdq
pop
scas
push
ins
inc
mov
mov
mov
ins
aam
dec
retf
arpl
scas
ret
inc
ins
or
jmp
mov
pop
cmps
mov
out
loopne
inc
or
neg
xchg
hlt
mov
nop
push
push
dec
repz
jg
shl
add
push
outs
out
loopne
push
leave
push
xchg
stos
js
das
xor
stos
mov
les
ret
ja
add
inc
jp
jo
inc
inc
(bad)
xor
mov
sub
test
sbb
and
and
fcom
loope
xor
jmp
or
dec
xor
jp
inc
pop
or
jne
sbb
out
pop
and
enter
jecxz
cmps
add
cwde
inc
adc
jns
aad
jmp
push
loope
shl
(bad)
mov
fstp
loopne
lods
sbb
sti
mov
cmp
lds
ss
call
jmp
mov
iret
pop
jmp
dec
shl
dec
xchg
sub
mov
mov
or
repz
clc
lahf
dec
add
loop
scas
into
pop
pop
outs
push
inc
adc
xor
test
js
adc
jecxz
not
sub
add
cmp
and
adc
les
lock
gs
test
add
mov
xchg
(bad)
addr16
push
sahf
mov
sub
call
xchg
pop
(bad)
xchg
xchg
sbb
xlat
std
or
push
clc
and
fsubr
mov
dec
inc
repz
sbb
mov
cmp
dec
inc
stos
(bad)
fucompp
push
push
inc
sub
test
or
in
jmp
mov
sbb
js
shr
inc
pop
es
sub
adc
(bad)
loopne
cmp
pop
or
in
adc
jle
push
jmp
pop
std
(bad)
cmp
pop
sbb
(bad)
xchg
or
pop
jecxz
retf
mov
movs
movs
(bad)
push
fwait
mov
pushf
and
or
cmp
dec
outs
ret
test
into
add
gs
sub
cmp
jo
xor
cli
dec
fwait
loop
in
data16
pop
push
mov
call
aas
aaa
mov
jne
add
lea
ins
fidiv
dec
pop
and
push
add
xlat
jno
fimul
movs
xchg
retf
cmps
sar
sub
push
dec
inc
cmp
mov
or
and
loopne
cmp
xchg
daa
js
ja
cli
push
xor
mov
pop
and
inc
(bad)
xchg
xchg
xor
std
jmp
xchg
jg
inc
clc
sahf
rcr
sub
or
scas
mov
cld
mov
popa
neg
leave
add
sub
mov
shr
or
shr
mov
and
imul
cmc
pop
cld
and
push
stos
mov
push
jmp
mov
outs
push
jge
pop
cmp
std
push
retf
test
inc
adc
or
gs
adc
fist
mov
das
cmp
dec
ret
(bad)
and
(bad)
(bad)
rol
fidivr
jo
xchg
(bad)
cmp
sbb
xchg
sub
mov
test
call
test
call
mov
jmp
mov
aaa
in
or
movs
fmul
xlat
mov
popa
xor
(bad)
into
cmp
pop
es
enter
iret
fsub
sbb
mov
push
loope
push
jg
dec
(bad)
and
iret
out
cs
data16
adc
add
and
or
push
pop
dec
cmp
sbb
sub
sub
popf
imul
in
push
cwde
sti
fimul
jge
xor
and
mov
fwait
inc
adc
test
ror
adc
fdiv
mov
std
cwde
ins
pop
fistp
mov
mov
js
jl
lock
in
xchg
push
inc
rol
push
dec
gs
in
push
mov
mov
sbb
(bad)
lods
jg
sbb
and
dec
out
jle
mov
or
adc
add
inc
push
and
sti
stos
push
cmp
scas
shl
dec
xor
cs
repz
div
and
daa
out
jl
pop
dec
jmp
mov
xor
sbb
mov
pop
test
call
push
mov
sbb
mov
jecxz
add
fwait
add
cdq
fnsave
mov
jb
rcl
aas
xor
cmp
arpl
pop
sbb
mov
add
or
add
mov
pop
push
out
je
xchg
(bad)
imul
cli
mov
xchg
inc
and
adc
sub
xor
outs
pop
adc
push
fsubrp
pop
mov
outs
pusha
jmp
cdq
ret
inc
pop
xchg
mov
dec
xor
movs
test
dec
dec
xor
adc
and
mov
lahf
retf
pop
cmp
add
and
inc
cdq
pop
fucomi
scas
ja
pop
movs
es
cdq
cmc
jecxz
cld
inc
push
mov
pop
push
mov
ins
imul
xor
push
jmp
cmps
iret
or
jmp
or
shr
lods
mov
sbb
mov
xor
mov
ss
push
(bad)
mov
lahf
sar
in
(bad)
mov
dec
xor
mov
lock
sub
scas
add
sub
mov
xchg
mov
mul
ds
or
cmp
imul
jo
outs
rol
stc
sub
mov
neg
mov
imul
xor
addr16
mov
pop
mov
add
pop
push
js
div
call
or
enter
sar
sbb
cmp
out
mov
call
mov
or
push
xchg
and
fbstp
scas
mov
jns
retf
cmc
js
aam
(bad)
into
sbb
or
mov
dec
(bad)
pushf
out
jge
(bad)
dec
movs
cmps
and
and
mov
jns
pop
clc
sub
dec
into
retf
adc
into
push
mov
loope
mov
xor
retf
xchg
ror
jecxz
inc
adc
push
cmp
push
push
call
cdq
hlt
xor
add
jae
int
jl
fsub
sahf
je
les
push
jg
dec
stc
loop
mov
(bad)
mov
jno
jg
push
fst
(bad)
cmp
jns
mov
dec
lahf
fs
pushf
cld
movs
(bad)
jle
mul
xor
out
adc
call
mov
xor
jge
xchg
push
or
in
leave
push
(bad)
cmps
dec
push
jmp
inc
test
and
fnstsw
pop
sub
test
sbb
xchg
pushf
cs
xor
or
inc
cmp
adc
sbb
scas
int
das
retf
leave
imul
lods
sub
cmp
pop
stos
ins
aam
mov
aaa
inc
in
out
mov
mov
jge
into
cld
clc
fdiv
push
pop
call
inc
movs
adc
cmp
fs
fwait
dec
in
sbb
push
dec
scas
adc
dec
push
inc
dec
popa
push
cmc
or
pop
pop
(bad)
lds
xor
add
sub
add
scas
push
xor
mov
push
inc
jl
aam
test
dec
cmp
cmp
mov
push
add
mov
clc
lods
shr
test
aad
jno
lea
test
movs
pop
aaa
mov
mov
adc
outs
int
push
mov
fistp
push
jmp
jp
lods
lahf
mov
push
ins
or
adc
aad
mov
or
fwait
xchg
xor
sub
iret
cmp
pushf
and
les
xor
mov
stos
lea
data16
add
lods
retf
cmp
fld
jmp
xor
mov
clc
int3
sbb
out
ss
cmp
add
xchg
xchg
ja
sahf
jns
and
call
mov
not
retf
aas
bound
mov
lds
(bad)
rcr
int3
sbb
jp
(bad)
test
sub
ds
adc
add
cmp
in
and
xor
mov
lea
movs
outs
lahf
jmp
ins
sub
xchg
push
shr
xchg
test
or
cmps
std
pop
sbb
cmp
movs
jge
test
fisubr
mov
push
and
sbb
add
pop
pop
fwait
mov
in
lds
movs
jp
xchg
or
add
in
push
mov
sub
mov
mov
dec
mov
sbb
cmp
mov
mov
hlt
aad
dec
inc
repnz
jge
movs
sahf
mov
push
jp
adc
jecxz
cmp
mov
adc
loop
push
call
movs
bound
js
xchg
push
bound
pop
mov
pop
pop
out
sbb
jg
adc
mov
cli
pop
lods
(bad)
es
or
les
or
add
pop
ror
aaa
sbb
ds
mov
xor
and
jnp
xchg
mov
add
js
out
(bad)
sbb
gs
repnz
popf
xor
mov
mov
lahf
cmp
xchg
mov
fs
cmp
dec
sub
dec
sub
popa
sub
into
inc
mov
fbld
mov
xchg
sbb
adc
and
loop
dec
(bad)
out
xchg
pop
xor
and
cmp
jl
add
fld
sub
mov
mov
in
add
and
push
out
lds
arpl
lahf
cmp
rol
pop
and
xchg
inc
stos
add
repz
pop
in
adc
(bad)
ins
enter
fisttp
cmp
cs
mov
pushf
fdivr
jmp
sbb
(bad)
pop
mov
jmp
mov
pop
push
test
sbb
push
out
mov
mov
gs
xchg
adc
mov
pop
ja
div
cmp
pop
pop
mov
dec
out
fisub
stos
test
push
push
inc
jp
xchg
and
push
rcr
es
mov
sbb
xor
sbb
loop
inc
or
call
push
jle
ins
pushf
mov
pop
lods
fcmove
mov
mov
dec
cs
and
out
dec
push
(bad)
pop
ins
(bad)
fs
jne
call
add
icebp
(bad)
outs
cmp
pop
test
enter
ss
jbe
pop
xlat
mov
add
sahf
adc
push
pop
data16
jns
shl
mov
sub
leave
inc
fisttp
xor
add
mov
mov
pop
lahf
(bad)
fld
enter
lds
fistp
pop
pop
out
dec
sub
fstp
in
iret
test
pop
scas
mov
lods
jo
add
cmp
ins
mov
cmc
adc
ffree
dec
cdq
rol
and
adc
das
dec
cmps
lods
jmp
int
es
lock
push
mov
pop
pop
test
ret
xchg
out
jle
push
sbb
retf
test
push
stc
in
xchg
cwde
popa
add
in
push
fidiv
jae
and
imul
inc
mov
(bad)
cmp
nop
retf
mov
jb
cdq
xchg
js
fld
sub
or
jb
pop
or
sahf
mov
test
(bad)
dec
cli
ret
or
ja
out
ret
pop
clc
pop
mov
jnp
jecxz
dec
pop
pushf
add
cmp
fs
push
scas
fs
inc
(bad)
call
xor
inc
aam
mov
pop
pushf
arpl
je
nop
pop
jb
xor
test
stc
stos
dec
dec
movs
cdq
fld
xchg
sar
dec
xlat
fisubr
sti
sub
lea
in
jae
(bad)
push
shr
cmp
scas
xchg
xor
xchg
mov
inc
xchg
mov
pop
jb
adc
hlt
nop
mov
pop
sub
fidiv
inc
retf
push
jo
out
rol
cmp
(bad)
or
sbb
sub
mov
add
in
mov
dec
and
cs
test
xchg
bswap
stos
lods
lods
adc
les
shr
call
jo
in
mov
sbb
and
xbegin
mov
add
retf
jecxz
movs
mov
lock
cdq
inc
jmp
fimul
or
pop
xchg
out
adc
xor
xchg
add
ja
sbb
ret
inc
(bad)
dec
cmps
push
push
xchg
int3
test
mov
mov
add
in
fisttp
clc
fcmovnb
jp
sahf
dec
and
fst
retf
cdq
lea
push
and
data16
adc
repnz
repz
(bad)
out
cmp
leave
int3
movs
cmps
push
lock
xlat
jbe
sbb
dec
cmps
int3
xor
cmp
inc
ins
xor
idiv
repz
or
ss
retf
fsub
mov
mov
lock
mov
dec
mov
test
cmp
push
icebp
sub
sbb
sub
lods
leave
cmp
cmps
repnz
fcom
push
pop
test
dec
ret
repz
lea
mov
sbb
mov
clc
fsub
das
jne
mov
std
in
fldenv
jae
mov
jmp
push
pop
scas
inc
xchg
std
sbb
out
lock
xchg
dec
adc
cmp
ja
xor
fcomp
mov
(bad)
mov
mov
xor
movs
adc
mov
cmp
cmp
mov
cwde
jns
mov
and
add
adc
out
push
inc
jnp
mov
sti
push
in
xchg
fs
add
jl
sub
mov
mov
push
mov
sub
pop
std
jo
mov
mov
mov
mov
scas
push
retf
sbb
add
pop
pop
repnz
fiadd
pop
xor
std
pop
mov
mov
pop
mov
xor
(bad)
or
jmp
sbb
mov
clc
imul
movs
pushf
mov
jnp
(bad)
cmp
pusha
push
push
xor
mov
dec
pop
into
fstp
inc
push
jl
stos
mov
mov
add
imul
stos
push
not
not
cdq
mov
movs
adc
shr
sub
lahf
leave
cwde
nop
call
leave
mov
adc
out
push
sahf
inc
mov
imul
mov
add
sub
dec
push
jp
sbb
push
pop
push
cmp
(bad)
add
pop
push
jle
dec
add
ins
fiadd
in
loope
mov
jb
pop
cli
sub
mov
mov
or
jg
ret
sub
repz
xor
xchg
xchg
jmp
push
inc
imul
aam
pop
pop
mov
xchg
or
cli
xor
pop
mov
pop
scas
adc
or
aam
adc
aad
jb
rol
aam
fisttp
jmp
lea
add
sub
not
xor
aas
into
mov
(bad)
sbb
cmp
adc
inc
dec
and
xor
and
and
(bad)
jne
scas
ja
enter
or
or
and
dec
jns
dec
push
add
dec
shl
jmp
dec
push
push
mov
push
dec
sbb
mov
jg
std
push
xor
stos
dec
xor
cmp
loop
imul
adc
jns
mov
mov
movs
inc
loop
das
pop
pop
pop
or
fstp
xor
pop
sbb
das
int3
mov
mov
ret
pop
add
inc
mov
pop
ds
test
popa
mov
mov
inc
sahf
xor
jmp
jnp
loopne
cmp
clc
call
pop
nop
jecxz
mov
pop
adc
sub
mov
or
inc
jmp
je
neg
and
ss
rcr
mov
push
jle
dec
pop
push
(bad)
lahf
retf
add
xor
fsubr
inc
push
add
jo
push
mov
mov
jecxz
jb
iret
in
sahf
lds
repnz
push
cwde
jne
sub
out
in
ins
jno
jb
xchg
xchg
or
pop
nop
or
or
adc
push
sub
inc
es
and
repz
fcomp
pop
jmp
fistp
fcmovu
xor
icebp
sbb
movs
xlat
xchg
push
in
xchg
sub
fwait
jno
adc
lahf
ss
inc
(bad)
pop
mov
sub
movs
or
push
fxam
and
or
pop
out
(bad)
ret
sub
lea
fisubr
imul
mov
xchg
push
jae
je
test
nop
das
dec
push
jnp
mov
adc
(bad)
lds
adc
(bad)
aas
sti
sub
sti
push
and
add
icebp
cli
sub
sub
(bad)
arpl
xchg
daa
push
mov
popf
sub
push
push
mov
ins
(bad)
or
hlt
cs
mov
(bad)
cdq
cmp
cs
cmp
ret
je
pop
jg
int
jmp
movs
jno
mov
push
push
sbb
movs
mul
pushf
jae
jl
data16
xor
dec
mov
test
icebp
push
int
mov
fstp
pop
pop
and
adc
xor
mov
inc
ss
dec
stc
out
aas
dec
cmps
aad
mov
ins
sub
(bad)
jmp
(bad)
jge
jmp
xor
scas
gs
mov
xor
xor
mov
fyl2xp1
outs
mov
fs
jp
retf
xor
or
adc
sbb
lods
ret
adc
bound
(bad)
test
mov
push
test
inc
xor
out
mov
jo
jno
int3
mov
in
sar
cmp
lahf
push
pop
dec
xor
push
les
pop
jbe
stos
adc
jbe
ins
pop
imul
fldcw
(bad)
out
sbb
clc
xor
adc
pop
les
js
cmps
call
push
and
movs
scas
es
in
pop
fsub
test
jp
push
mov
gs
ret
xchg
dec
ret
popa
fcomp
aas
fdivr
sbb
mov
xchg
or
arpl
xlat
adc
xchg
pop
sbb
adc
pop
jb
sub
inc
mov
neg
je
pushf
mov
adc
ret
je
int3
pop
mov
fucomp
test
fs
in
ins
mov
cdq
imul
xor
pop
xor
iret
pop
add
or
cmps
dec
cdq
enter
pushf
outs
out
aam
ins
cmp
ret
ds
ja
addr16
xchg
jnp
sbb
fnsave
lods
inc
push
cmp
mov
sbb
out
(bad)
xor
cmc
adc
lea
out
mov
neg
mov
call
adc
inc
bound
imul
sbb
xchg
jae
call
lahf
lds
daa
mov
cmp
inc
fs
and
jg
inc
movs
jmp
mov
jno
stos
jg
inc
inc
cmp
push
sub
sbb
cmps
out
div
or
jbe
bound
xor
cmc
dec
mov
fist
cmp
or
adc
xchg
or
call
add
cs
push
dec
xor
and
arpl
in
(bad)
adc
inc
iret
and
xlat
int
je
cmp
xchg
(bad)
push
mov
mov
jne
aam
fs
daa
adc
inc
sti
jno
sbb
pop
pop
pusha
xchg
addr16
add
sbb
mov
and
push
leave
cmps
cmp
cmp
push
inc
out
fldcw
aam
fstp
dec
xor
sbb
jns
adc
and
push
mov
les
jne
aas
push
fcom
fs
shl
sbb
call
mov
mov
sbb
mov
xor
jae
xor
stos
movs
nop
into
mov
cdq
push
jmp
shr
sub
xor
ja
jecxz
stc
dec
fimul
outs
rcl
cld
(bad)
or
cmp
das
in
fcmovnu
in
and
(bad)
mov
in
ret
push
push
mov
cmp
shl
enter
test
call
das
clc
mov
adc
or
inc
cmp
repz
xchg
add
movs
inc
mov
add
xor
dec
inc
xor
loopne
and
cmp
mov
fdiv
data16
or
cmp
nop
mov
out
dec
sbb
(bad)
cmp
lock
jo
out
or
xor
sbb
rcr
(bad)
fucomp
or
retf
stos
dec
pop
in
ins
jno
hlt
mov
retf
les
imul
sbb
rcl
mov
cdq
iret
push
jmp
div
and
jge
xor
fwait
xchg
(bad)
cmp
popa
sbb
icebp
pop
push
stos
shr
add
adc
add
stos
das
pop
dec
sub
push
lds
push
daa
imul
push
popf
mov
jmp
push
sub
mov
lods
sub
fst
or
jo
xchg
stc
push
fist
mul
xor
mov
sbb
pop
cdq
rcr
cmp
popf
pushf
(bad)
cmp
pop
ss
xchg
xor
lock
(bad)
mov
jno
aas
push
dec
pop
cmps
mov
mov
cmps
enter
idiv
mov
add
xchg
ins
dec
mov
mov
nop
cmp
inc
call
repnz
dec
inc
repnz
sub
and
call
mov
retf
jbe
push
ds
sub
in
cmp
sbb
icebp
repnz
dec
rcr
or
lock
sub
or
aad
push
add
cmp
cmp
sbb
add
push
outs
dec
loope
jg
rcr
repnz
pop
lea
sbb
addr16
out
or
or
fidiv
cmp
sub
sub
sub
(bad)
shl
pop
inc
sbb
inc
adc
(bad)
div
sub
jne
loop
dec
xchg
add
push
sub
test
out
adc
in
bound
scas
dec
ins
fistp
movs
xor
adc
sub
and
nop
mov
sub
lea
sub
jge
mov
sub
push
add
mov
add
sbb
mov
xor
xchg
dec
in
sub
mov
xchg
cdq
mov
lods
out
(bad)
pop
jbe
ja
adc
push
xor
fisubr
test
retf
pop
xor
push
imul
adc
add
xlat
mov
loope
arpl
dec
push
mov
push
dec
and
push
add
ja
add
jl
sbb
cmp
mov
add
jnp
lahf
mov
sub
mov
test
sub
push
div
push
mov
jmp
sub
pop
test
pop
xor
lods
loope
(bad)
pop
mov
push
jno
mov
sub
aas
rcl
aam
mov
and
or
test
mov
cmp
repz
pop
jl
jbe
out
cmps
das
inc
sahf
push
jg
into
(bad)
sub
movs
push
inc
sbb
movs
das
inc
push
mov
sbb
and
jg
push
es
sbb
push
int3
xor
jo
repnz
mov
es
dec
loop
sbb
xchg
scas
arpl
inc
std
push
adc
cmp
dec
jle
mov
jnp
cmp
movs
pop
xchg
sar
lods
stos
mov
pop
mov
jl
fistp
mov
ror
dec
cld
ins
push
sub
cdq
in
jnp
(bad)
mul
aas
out
push
jp
xor
das
test
adc
inc
loopne
mov
push
mov
jge
iret
xor
lahf
add
fs
cmp
push
and
sbb
addr16
aas
scas
sbb
push
xlat
ret
cmp
pop
jne
(bad)
push
arpl
(bad)
jae
mov
cld
rcr
clc
mov
cmps
lea
ja
push
idiv
clc
out
repnz
cmp
in
sti
dec
loope
mov
jb
clc
(bad)
dec
push
les
cmc
rcl
push
cmps
and
xchg
int
jmp
and
call
mul
loopne
jmp
jecxz
scas
adc
push
dec
test
jo
lods
inc
mov
std
xlat
push
jmp
inc
mov
test
scas
jle
cmp
imul
out
movs
jnp
aaa
adc
xchg
mov
call
(bad)
adc
sbb
jne
cmp
aas
and
mov
mov
push
lock
inc
push
outs
je
cld
cmp
push
jle
outs
inc
leave
sbb
push
mov
pusha
ficom
pop
jecxz
stos
int3
movq
out
std
lahf
pop
ja
adc
jbe
jge
inc
test
and
mov
xchg
nop
push
neg
jno
mov
fwait
mov
add
push
mov
in
adc
mul
jmp
push
pop
mov
call
cwde
clc
or
push
js
lds
add
and
mov
out
out
sub
call
xchg
xchg
inc
sub
mov
mov
dec
stos
(bad)
stc
cmps
lock
lock
fsub
sbb
xor
ins
and
(bad)
sub
(bad)
jp
jmp
push
movs
in
push
mov
sub
daa
mov
ror
mov
imul
sbb
push
sbb
not
shl
(bad)
sub
xchg
ja
movs
mov
cmp
add
ja
mov
repz
ins
xchg
out
push
stos
mov
(bad)
xor
fist
ins
js
sub
mov
lds
dec
sbb
mov
adc
and
es
sub
push
mov
out
(bad)
lea
cmp
jmp
pushf
mov
pop
inc
aas
(bad)
stc
pop
and
jg
mov
in
fld
mov
fistp
int3
push
mov
mov
mov
clc
sub
lods
sahf
fld
nop
les
push
repnz
loop
push
icebp
pop
fisttp
cmps
xchg
mov
and
loope
sahf
out
icebp
or
mov
retf
sub
ss
pusha
inc
pop
(bad)
std
sub
movs
mov
cmp
xchg
fwait
ret
mov
(bad)
mov
inc
or
(bad)
cmp
mov
jne
add
sub
std
inc
rcl
mov
add
jmp
arpl
jae
mov
pop
lea
test
in
aad
inc
cld
push
out
hlt
iret
ret
pop
push
sti
push
repz
pushf
lea
(bad)
fst
and
dec
xchg
jecxz
test
sub
in
aaa
jb
sub
cmc
fwait
mov
adc
out
sbb
js
xchg
and
xchg
or
iret
popa
(bad)
mov
cld
aam
nop
int3
push
mov
mov
adc
(bad)
mov
lods
dec
dec
mov
(bad)
out
dec
jmp
add
sub
lods
push
adc
cs
(bad)
popa
xor
dec
out
movs
sub
xor
lods
xor
mov
mov
jecxz
or
adc
adc
xchg
jp
das
mov
pop
xor
push
cmp
cs
xchg
call
hlt
push
test
out
add
(bad)
inc
(bad)
leave
ss
(bad)
stc
xchg
jbe
pop
scas
mov
(bad)
jle
inc
mov
jno
adc
imul
add
sar
(bad)
cld
xor
jmp
inc
push
cmp
jge
adc
mov
jb
pusha
xor
icebp
dec
pop
and
ja
push
sub
pop
mov
test
dec
push
scas
shl
daa
xchg
push
fdiv
lods
loope
jmp
jg
loope
mov
xor
sbb
sbb
sar
sar
push
imul
sub
ins
int
(bad)
and
mov
pop
jae
jo
lahf
iret
inc
out
dec
add
fistp
pop
lods
aaa
inc
xchg
int
or
lods
adc
xchg
out
push
inc
xor
mov
shl
inc
push
scas
mov
cmp
dec
mov
inc
or
sub
add
sub
mov
(bad)
mov
scas
lods
adc
mov
data16
fbstp
fldl2t
retf
ss
mov
in
sbb
dec
(bad)
fldenv
adc
test
retf
fidivr
movs
xchg
fcomp
sbb
jmp
pop
xchg
mov
movs
cld
mov
(bad)
pop
lea
push
sbb
daa
or
movs
mov
cmp
and
dec
test
xchg
daa
aaa
loopne
pop
push
inc
or
adc
or
xchg
push
adc
ficom
stos
jmp
into
call
pop
fstp
mov
jno
mov
jecxz
aaa
xchg
push
inc
or
jno
mov
mov
jge
inc
call
push
fnstenv
xchg
mov
lahf
out
js
jmp
xchg
jae
adc
inc
sub
ins
sbb
fcomp
sbb
xchg
cli
jle
mov
outs
iret
in
xchg
(bad)
aas
(bad)
and
jb
pop
xor
xchg
cmp
push
sbb
pop
pop
push
dec
jbe
mov
pop
cwde
xor
in
aad
fistp
daa
aas
push
in
mov
outs
movs
mov
jmp
mov
adc
daa
into
shr
pushf
inc
stos
push
dec
retf
jnp
pusha
push
cdq
clc
mov
xor
sub
push
inc
push
aas
lds
add
cmp
stos
pop
popf
mov
jge
or
test
cmp
push
add
cmps
xchg
sub
aad
(bad)
movs
int
or
fcom
ror
or
pop
pop
sbb
call
clc
push
hlt
repnz
int3
(bad)
ss
mov
leave
or
inc
dec
or
jcxz
push
xor
fsubr
popa
call
add
imul
(bad)
(bad)
and
(bad)
call
shl
xor
fdivp
jns
clc
lods
push
jo
test
mov
into
iret
push
sub
enter
and
leave
cmp
mov
or
cmp
clc
(bad)
outs
mov
mov
retf
lock
sbb
out
rcr
fisub
add
xchg
inc
sub
fwait
pop
in
inc
sub
xchg
or
in
retf
ins
rol
mov
ja
je
xor
retf
jp
call
pop
jbe
rcl
mov
push
pop
mov
sub
setl
dec
xchg
xchg
pop
pop
jnp
and
cmps
popa
pop
add
mov
add
clc
dec
leave
add
std
mov
xchg
and
mov
sti
xchg
or
fisub
hlt
gs
adc
mov
sbb
mov
pop
xchg
cmps
les
add
lea
popa
xchg
and
push
jb
sub
inc
lods
mov
push
in
lods
mov
arpl
and
femms
sbb
out
pop
fwait
add
cmp
push
mov
cmp
add
dec
int3
iret
mov
dec
or
sbb
ins
mov
nop
dec
and
fld
outs
loop
mov
and
lods
repz
mov
jg
add
ja
das
or
fmul
xor
std
aam
xor
or
fs
into
sbb
push
xor
sti
fbld
cmp
cmp
sub
sti
adc
xlat
xchg
sbb
and
ret
loop
ret
fwait
jb
jb
add
push
push
push
xchg
xor
test
in
add
mov
sahf
iret
mov
xchg
jmp
pushf
mov
imul
push
mov
outs
jmp
(bad)
adc
outs
push
je
and
in
jp
push
aaa
hlt
aas
xchg
dec
push
icebp
jmp
test
les
xbegin
sahf
ror
ss
ret
cmp
mov
sti
cmp
(bad)
sar
dec
or
cmp
call
and
mov
pop
pop
cmp
sbb
ror
jp
(bad)
out
jns
xchg
jae
mov
call
lea
movs
(bad)
js
push
dec
pop
xchg
stc
lahf
xor
push
inc
stos
cs
pop
xchg
fcomp
sub
test
add
jmp
fs
ins
cmp
push
ret
mov
push
mov
adc
jg
in
cwde
mov
sbb
add
stos
sbb
push
pop
push
mov
es
cs
mov
rcr
pop
xor
daa
lahf
scas
mov
cmp
fwait
or
push
xor
cs
lods
sub
add
stos
xor
jmp
xchg
shl
fdivr
loop
int3
ins
cmp
jecxz
jbe
mov
aas
xor
icebp
sub
and
mov
jae
jp
and
mov
(bad)
fisttp
dec
(bad)
push
cmp
adc
stc
or
jne
push
inc
popa
mov
dec
dec
outs
out
bound
call
jo
xchg
mov
repnz
sbb
in
loopne
inc
retf
out
fimul
inc
jge
dec
xor
(bad)
jp
scas
(bad)
xchg
sbb
adc
adc
std
hlt
stos
cdq
cmp
jp
shr
sbb
pop
push
je
inc
imul
mov
jno
inc
frstor
jl
mov
clc
fdivr
sub
mul
push
jbe
push
fs
sub
cmps
in
push
ret
and
stos
fsubr
adc
mov
dec
call
out
(bad)
xchg
cmps
call
outs
and
(bad)
dec
leave
cmp
sub
sahf
mov
xor
cmp
inc
lock
xor
in
addr16
jae
addr16
lock
mov
or
cld
fiadd
fdivr
cmp
les
push
and
sahf
or
dec
lahf
hlt
es
xchg
in
in
jle
pusha
mov
cld
iret
or
into
mov
(bad)
pop
ins
xchg
jb
arpl
pushf
arpl
fisub
fcmovnu
xchg
sub
(bad)
hlt
sahf
out
mov
jmp
dec
mov
sub
push
rcr
sub
in
jg
push
xor
aaa
mov
mov
push
jmp
(bad)
stos
and
xor
out
sub
cmp
inc
xor
pop
pop
cld
add
ret
push
xchg
xor
mov
daa
mov
stc
aad
jns
push
jp
mov
leave
scas
dec
jmp
mov
fstp
or
xchg
and
mov
data16
mov
(bad)
rcl
mov
neg
mov
stc
jecxz
ds
rol
lahf
xor
mov
adc
retf
test
xchg
xor
mov
inc
in
pmaxsw
and
std
push
(bad)
xchg
or
xchg
cmps
test
mov
(bad)
enterw
adc
pop
pop
jmp
xchg
mov
(bad)
shr
add
pop
mov
adc
adc
xchg
sbb
fisttp
mov
imul
mov
sbb
mov
adc
jmp
(bad)
stos
ret
sahf
add
pop
dec
sub
in
jno
in
push
jmp
jp
jg
pop
pusha
out
aas
xchg
mov
fmul
or
stos
pop
mov
add
xor
test
pusha
mov
ret
out
push
gs
cmp
or
ins
xor
jae
(bad)
(bad)
mov
inc
mov
dec
in
xor
sbb
mov
movs
inc
fdiv
mov
pop
fcomp
or
xor
jg
fs
add
mov
and
in
(bad)
sub
jecxz
fisub
dec
push
cmp
test
inc
out
dec
fsub
dec
cmp
fist
and
imul
or
mov
clc
push
push
js
pushf
dec
push
inc
pop
repnz
mov
add
mov
xor
imul
cmps
xchg
adc
mov
(bad)
aam
pop
xor
dec
test
cli
(bad)
dec
stc
(bad)
neg
pop
xchg
push
adc
(bad)
neg
into
mov
aas
pusha
imul
jae
jo
push
icebp
jb
sti
adc
add
xor
(bad)
fistp
mov
mov
pop
shr
sbb
push
call
shl
cwde
inc
fst
(bad)
fnstsw
fs
inc
dec
push
push
xor
nop
nop
push
ins
call
lea
mov
mov
xchg
fadd
in
cmp
jl
xor
sti
repz
test
mov
push
iret
clc
aam
adc
scas
test
imul
data16
and
test
sub
cmp
mov
push
jmp
mov
sub
sub
dec
cmps
fdivr
adc
jp
mov
not
and
std
out
jo
jbe
fnop
adc
dec
(bad)
lds
cmp
das
adc
(bad)
pop
cmps
inc
mov
in
xchg
sub
loope
push
nop
mov
clc
dec
cmp
add
jne
cwde
adc
mov
gs
pop
mov
pop
mov
fcom
ret
mov
icebp
or
jge
add
rol
mov
push
push
xor
les
xor
outs
cmps
xchg
jl
mov
cld
or
shl
not
jno
test
sbb
stc
xchg
cmps
rol
inc
mov
xor
jecxz
inc
sub
xchg
add
fcomi
xchg
retf
shl
mov
ins
sub
dec
inc
shl
js
xchg
and
pop
or
xchg
sbb
cld
sbb
jp
(bad)
pop
pop
and
xchg
dec
jle
sub
out
push
icebp
ret
das
test
mov
fstp
es
ret
mov
lods
into
lods
sbb
lods
loope
add
add
lods
mov
mov
ins
test
sahf
ja
movs
mov
les
inc
pushf
test
jg
xchg
retf
and
sbb
lahf
mov
aad
xchg
stos
data16
pop
mov
loope
je
xor
cmp
adc
out
ds
sub
es
mov
sub
xchg
imul
stc
cs
xor
sbb
xor
mov
jb
sub
and
imul
xchg
mov
aas
(bad)
fdivr
xchg
(bad)
jle
mov
ret
sub
movs
xchg
mov
mov
and
aam
cli
lock
xor
out
xor
mov
xor
add
pop
scas
pop
mov
mov
dec
aam
rcl
xchg
call
jg
daa
int3
repnz
pop
mov
inc
adc
std
cwde
mov
dec
xlat
add
mov
cmps
cmp
sub
lahf
sbb
lods
cli
push
jmp
mov
and
test
sub
inc
into
mov
and
xlat
lahf
mov
mov
xchg
adc
add
sbb
pop
jnp
mov
mov
jecxz
cdq
mov
out
and
jp
test
or
inc
(bad)
imul
xor
cmc
jnp
aad
pop
nop
shl
out
add
sbb
pop
or
les
or
inc
gs
stos
push
mov
adc
mov
jns
das
xchg
aaa
pop
cmps
pop
std
repnz
test
xor
daa
jp
mul
mov
or
fs
jmp
(bad)
fld
mov
sbb
stos
cmp
outs
call
xlat
cmp
adc
cmp
cmps
jnp
hlt
ins
dec
push
fdivr
je
(bad)
retf
jo
les
and
int
es
cdq
jne
shr
jg
out
mov
sbb
and
mov
jp
inc
xchg
mov
jecxz
mov
mov
fnsave
clc
scas
jmp
sbb
cwde
lahf
imul
mov
inc
in
and
call
jmp
or
stos
pop
jl
mov
dec
(bad)
in
push
daa
js
lea
out
dec
rol
mov
xchg
cmps
sahf
cmps
sbb
cmps
call
mov
lock
sti
sub
jmp
adc
retf
cmp
xor
push
and
sahf
leave
jecxz
xor
aas
pusha
or
cmp
aam
(bad)
lock
push
lock
out
jo
cmps
sub
(bad)
scas
inc
mov
pop
or
cmc
inc
sub
inc
aam
cmp
enter
leave
lea
dec
inc
ja
fnsave
xor
mov
or
iret
jne
sbb
add
sub
das
test
add
stos
pop
xchg
inc
dec
test
dec
js
jmp
add
rcr
fnstcw
sub
outs
xor
adc
call
push
pop
pop
jle
xor
clc
mov
sub
xor
push
std
jnp
dec
int3
frstor
scas
ror
and
mov
rol
jns
lahf
mov
std
xchg
jb
adc
pop
inc
dec
cmp
xchg
dec
ret
cwde
outs
or
sahf
push
push
sbb
cmp
xchg
sbb
js
xchg
arpl
ss
pop
mov
ret
and
(bad)
push
or
fadd
or
cmp
std
in
movs
mov
mov
sub
fs
sbb
out
cdq
sub
lods
jg
sub
ja
dec
sbb
mov
push
popa
test
pop
sbb
mov
(bad)
aaa
repnz
dec
xor
push
jmp
cmp
mov
call
repz
leave
cmp
retf
push
jl
test
in
inc
dec
fistp
icebp
enter
retf
pop
push
push
cmp
cdq
xchg
pop
or
inc
(bad)
shl
sub
es
add
push
sbb
call
or
shr
cmp
(bad)
das
ss
mov
fimul
jb
pusha
mov
inc
and
loop
(bad)
mov
out
mov
sbb
stc
pop
cld
scas
or
icebp
add
hlt
pusha
mov
jb
ins
repz
dec
cmps
mov
sti
(bad)
into
sub
fimul
cmps
mov
jp
pop
mov
sub
mov
jne
jne
add
mov
mov
ins
aam
(bad)
bound
inc
sbb
das
pop
jne
sahf
lock
out
cmovl
test
xchg
test
pop
call
add
enter
outs
fidiv
stos
daa
test
mov
mov
sub
cmp
mov
inc
out
and
js
outs
cmc
or
scas
mov
in
cmp
je
retf
fmul
cli
mov
and
fdivr
dec
and
pop
and
es
out
stc
fist
adc
sub
or
jmp
out
stos
loope
fmul
mov
adc
adc
icebp
mov
mov
cli
sub
js
mov
pop
xchg
add
push
inc
mov
jnp
mov
add
jne
sub
mov
je
sbb
clc
fnstcw
fisttp
(bad)
in
inc
ret
cwde
lea
aad
das
out
stc
cmp
icebp
lods
push
mov
xchg
or
jns
mov
push
inc
cli
mov
pop
dec
(bad)
jne
mov
out
loop
loopne
ins
stos
mov
outs
push
jecxz
ss
outs
adc
cmp
or
int
jo
or
fild
sahf
sub
mov
sar
sub
xor
sub
mov
retf
fs
xchg
psubb
cmps
xchg
inc
cmps
pushf
fdiv
push
cs
jp
popa
outs
mulps
mov
xchg
lahf
inc
pushf
aam
aaa
jecxz
lods
push
(bad)
push
cmp
bnd
push
mov
jne
xchg
sub
cwde
ret
push
arpl
cmp
mov
mov
mov
or
cwde
mov
add
clc
sar
push
mov
pop
xor
bound
jp
pop
inc
xor
push
(bad)
out
pop
xchg
lahf
jmp
push
xor
dec
cs
mov
mov
pop
add
fisub
sub
fwait
scas
out
push
sbb
sub
nop
inc
cld
pop
pusha
cdq
and
lea
test
popa
xor
hlt
ins
jmp
and
and
sbb
cmp
xchg
movs
popa
out
ins
mov
imul
mov
mov
in
or
arpl
paddusb
inc
mov
jl
cdq
in
jle
add
or
div
xchg
fstp
mov
inc
pop
sti
mov
jo
dec
into
cs
cmp
xchg
push
movs
out
lods
add
out
out
cmps
gs
loop
adc
ds
xor
push
inc
aad
les
call
xchg
inc
aam
push
cli
retf
sahf
lahf
pop
dec
or
mov
fidivr
or
ins
lods
or
xchg
dec
xor
inc
je
xor
in
loopne
sub
mov
jnp
inc
adc
push
inc
cmp
loopne
push
dec
ins
jg
in
or
js
and
ret
adc
dec
sbb
sub
and
pop
push
dec
mov
stos
fsubp
xor
repz
dec
pusha
je
shl
inc
pusha
jle
xchg
sub
add
xchg
xchg
push
xchg
jnp
mov
add
xor
clc
mov
(bad)
dec
test
bts
xchg
int3
push
nop
(bad)
js
pop
mov
movs
out
pop
shl
lahf
add
xchg
jbe
cmp
ja
stos
pop
les
imul
cpuid
test
pop
cdq
xor
out
inc
scas
mov
cmp
sub
sub
pop
mov
sbb
js
dec
iret
call
dec
jmp
or
mul
imul
bound
fdiv
fidiv
lea
and
ds
shr
in
xchg
out
movs
test
adc
push
add
dec
cld
test
pushf
xor
rol
lods
imul
push
mov
pop
sub
loop
fs
mov
jg
jmp
inc
ins
push
push
cmps
sub
jecxz
pop
sar
shr
stos
jae
out
imul
test
pusha
or
inc
aas
jmp
jb
shl
iret
lods
mov
aam
dec
jo
outs
xchg
lods
jecxz
sub
sub
sbb
sbb
sbb
xor
or
pop
call
cmp
or
fidiv
in
retf
push
push
clc
sub
xchg
je
sub
cs
gs
jmp
sub
adc
xor
mov
xchg
(bad)
push
or
mov
iret
es
jmp
out
addr16
out
push
call
xor
iret
dec
mov
mov
repnz
pop
cwde
es
ss
arpl
add
(bad)
push
cmp
leave
in
ds
inc
jge
sbb
rcl
and
ss
jbe
xchg
pop
sub
adc
and
adc
xchg
std
scas
jp
xchg
clc
lds
dec
pop
js
not
sub
or
in
fstp
iret
loop
loope
pushw
mov
mov
fwait
jbe
shl
loop
add
mov
fiadd
lods
mov
bound
pop
xchg
mov
sub
fidivr
(bad)
leave
inc
movs
push
push
pop
cld
stc
pop
cmps
sti
sub
retf
movs
push
shr
shr
cli
ror
sub
pop
push
mov
(bad)
ss
aas
push
jle
jns
mov
ret
add
sub
imul
push
push
mov
leave
(bad)
add
pop
jle
dec
enter
mov
out
pop
gs
jge
push
and
sbb
mov
dec
mov
test
jge
mov
and
mov
pop
repz
cmp
push
outs
and
mov
movs
mov
clc
push
das
push
inc
xor
inc
sbb
gs
rol
push
dec
mov
dec
loope
out
out
into
xor
mov
add
sahf
call
mov
outs
in
or
into
mov
or
loopne
outs
adc
in
dec
pop
mov
inc
je
scas
or
xlat
stc
cld
cmp
push
mov
cmp
mov
ss
jbe
(bad)
push
mov
daa
mov
adc
mov
jb
sub
inc
push
outs
std
mov
movs
mov
xor
ja
mov
jb
mov
mov
mov
shl
sbb
in
adc
push
xor
ss
cwde
iret
into
into
leave
clc
and
pop
jl
les
sbb
mov
pslld
add
fldcw
mov
xor
in
lds
fwait
xchg
push
out
sbb
ja
or
in
dec
aam
sbb
mov
js
out
inc
stos
pop
cmp
pushf
loope
mov
inc
lds
inc
out
jb
mov
cmp
push
pop
sahf
and
xchg
mov
sub
das
clc
xchg
clc
(bad)
(bad)
ins
adc
or
jns
in
pop
dec
cmc
sti
adc
adc
xchg
mov
inc
iret
xlat
cmps
idiv
in
(bad)
movs
pop
test
fisubr
lea
fisttp
nop
imul
adc
mov
inc
mov
loopne
loop
dec
push
add
cdq
sbb
sti
lock
push
dec
pusha
nop
jl
cmp
xchg
adc
mov
stos
mov
jbe
mov
and
mov
pop
mov
xchg
mov
fs
(bad)
mov
or
jbe
in
shr
ret
test
adc
scas
mov
cmps
stos
pop
pop
inc
retf
les
push
fsubr
int
gs
jb
repnz
movs
inc
cmp
imul
cdq
and
jmp
adc
loop
lea
adc
(bad)
out
inc
call
push
jl
je
sub
jnp
hlt
mov
sub
cmp
push
add
out
sub
cmp
cmp
and
and
js
adc
in
lds
sqrtps
imul
mov
adc
jmp
add
push
xchg
cld
jmp
sub
cs
pop
adc
out
stc
inc
or
adc
ss
cmp
and
xor
dec
xor
aas
pop
cmp
cmp
test
in
xchg
das
shl
test
inc
sar
cmps
xor
xlat
xchg
lods
xor
call
loope
jno
and
sub
xor
adc
dec
mov
inc
and
and
cli
push
fadd
jbe
add
inc
pop
mov
inc
pop
pop
inc
push
in
dec
lds
sub
test
ins
xor
sar
push
fistp
idiv
sbb
cmp
outs
call
retf
or
jg
mov
and
mov
push
push
stos
xchg
xor
cmp
add
arpl
mov
xor
icebp
mov
xchg
in
sub
imul
mov
sub
pop
inc
mov
shr
or
pop
dec
mov
mov
push
push
addr16
pop
dec
xchg
lods
dec
ret
sub
out
sub
jae
ret
icebp
stos
ds
mov
ss
mov
mov
cmp
mov
dec
aaa
and
jg
xor
cli
xor
jecxz
int3
fs
jns
sbb
data16
call
loopne
add
scas
xor
mov
dec
frstpm(287
and
icebp
jbe
ins
retf
movs
fist
ins
daa
adc
cmc
jo
icebp
xchg
push
pushf
jmp
inc
into
repz
or
inc
pop
jl
xchg
cmp
test
ss
add
std
mov
cmp
mov
clc
dec
add
pop
movs
sub
ins
xor
or
outs
jg
pop
in
jle
cmp
ror
nop
movs
int
dec
jmp
jg
jecxz
adc
pop
and
jnp
ins
outs
mov
jmp
loope
test
push
cmp
add
or
in
and
outs
test
(bad)
sub
or
(bad)
jmp
and
rcr
ficom
add
pop
fsubr
(bad)
rcl
cld
xlat
and
xchg
jnp
mov
cli
dec
mov
ret
imul
test
xor
pop
dec
or
cdq
xor
retf
jp
adc
xchg
jae
push
pop
fist
pusha
pop
mov
dec
cli
test
es
cmp
int
pop
dec
daa
push
and
and
iret
sbb
sbb
dec
mov
add
in
int3
iret
adc
pop
cmp
iret
push
rcl
ret
dec
jp
imul
mov
(bad)
mov
jp
xlat
cmp
adc
dec
cmp
pop
jmp
scas
pop
sub
xchg
mov
fimul
imul
pop
int3
std
cmp
repnz
jmp
daa
cs
pop
cmp
lahf
out
add
pop
cwde
pop
and
test
push
ror
jmp
test
dec
sbb
mov
inc
adc
test
mov
es
add
mov
mov
or
push
sbb
pop
mov
int
xchg
int3
lds
test
shl
pop
xchg
xchg
stos
or
mov
inc
mov
sbb
dec
(bad)
push
mov
mov
int3
(bad)
scas
test
adc
cmp
push
mov
lea
sbb
(bad)
iret
push
out
or
dec
lea
cmc
cmp
jb
popa
ins
aaa
xchg
inc
loopne
jg
gs
push
cs
mov
jns
cmc
xor
cwde
fild
or
inc
push
out
pop
mov
shr
aas
or
push
test
daa
sbb
xchg
shr
ins
imul
push
stos
xchg
mov
sub
sbb
fidiv
fnstsw
loopne
jnp
inc
cld
push
cmc
idiv
jp
xor
xlat
loop
je
xchg
add
repnz
pop
ret
xchg
(bad)
js
mov
mov
leave
popa
(bad)
mov
or
mov
mov
bound
mov
adc
ret
mov
mov
add
and
jnp
rcl
cmp
dec
and
out
mov
icebp
sub
mov
jnp
dec
or
ins
movs
cmc
pop
jnp
in
js
mov
xor
hlt
js
cmp
(bad)
jae
rcl
loopne
shl
fmul
int
sbb
fild
lahf
(bad)
sar
push
imul
mov
loop
ret
stos
scas
loopne
stos
inc
fmul
jmp
pop
clc
cmps
or
ins
mov
or
mov
(bad)
ins
adc
fist
sti
jno
(bad)
xchg
mov
jl
mov
fdivr
dec
jle
jge
jns
aaa
out
adc
pop
dec
repz
mov
aaa
movs
pop
push
cmps
jl
jnp
(bad)
or
sahf
fs
push
dec
stc
cmp
pop
popf
jg
adc
xor
out
fcom
push
pop
mov
pop
jo
push
cld
push
aad
jmp
mov
shl
in
add
add
clc
pop
mov
std
stos
adc
mov
lods
jnp
mov
test
movs
out
stos
dec
xor
(bad)
sbb
push
ret
bound
inc
sbb
lods
push
popa
(bad)
leave
pop
bound
jg
xchg
sahf
xchg
push
scas
rcl
leave
cmp
test
mov
das
std
lahf
mov
inc
stos
adc
in
dec
xor
fs
ins
test
jecxz
mov
adc
jae
sahf
pop
leave
mov
sub
cs
dec
int3
jmp
sti
push
and
mov
jp
scas
adc
mov
adc
add
leave
sahf
push
cld
clc
(bad)
aas
mov
dec
cs
adc
out
test
ja
call
bound
nop
aas
cwde
add
inc
jg
inc
jne
cmp
mov
lahf
imul
lods
fwait
into
xchg
dec
or
into
and
jl
jmp
push
mov
push
pop
mov
fsubrp
imul
nop
push
mov
(bad)
pop
loop
cmp
daa
sbb
sbb
call
mov
hlt
sbb
xchg
jno
in
movs
out
mov
pop
aaa
or
das
jns
ficomp
and
cmp
lods
pushf
mov
sbb
fs
repz
pop
mov
int
fadd
push
sahf
loopne
xchg
(bad)
push
test
push
xor
test
push
mov
jb
and
pop
cmp
mov
adc
xor
xor
mov
jnp
adc
add
or
ret
ins
sar
mov
rcr
adc
dec
out
nop
shl
es
aas
inc
or
ret
sar
sbb
mov
loope
or
setns
cmps
pop
or
daa
cwde
data16
int
stos
mov
aad
popa
pop
xor
stc
sbb
scas
out
sti
dec
mov
rcl
test
xor
push
js
sbb
xchg
jae
enter
fiadd
xor
test
inc
xor
shr
aad
cmp
jae
mov
and
mov
mov
mov
mov
cdq
test
test
test
sub
jns
dec
add
jecxz
sbb
xchg
sbb
(bad)
push
jmp
je
sbb
xchg
in
(bad)
fcmovnbe
popf
fistp
jg
imul
icebp
loope
add
adc
mov
mov
jae
out
and
in
xchg
mov
cmps
ins
sub
in
push
adc
jb
xchg
in
ss
mov
imul
add
pusha
cmp
fcmovnu
mov
movs
push
push
mov
pushf
jnp
xor
mov
inc
jb
adc
popf
cmp
sbb
mov
mov
and
adc
dec
movs
mov
arpl
jae
pusha
inc
jmp
fwait
cmps
cmp
dec
pop
push
rcr
leave
pop
and
ss
ins
jl
dec
add
es
cs
pusha
je
and
out
movs
cmp
or
paddsb
lea
adc
sub
mov
mov
rol
or
icebp
fwait
mov
sub
jno
dec
adc
test
push
mov
cmp
xchg
inc
push
and
or
in
sub
movs
dec
adc
xor
je
in
push
push
in
jg
or
ret
call
psubw
in
xchg
and
jle
mov
mov
mov
cmc
test
pop
mov
(bad)
dec
or
inc
pop
js
les
pop
les
popa
int3
stc
sub
js
adc
out
and
add
mov
jae
cmps
dec
lea
mov
div
or
mov
sub
call
add
ret
mov
pop
jbe
out
call
cmp
mov
dec
dec
cmp
lock
inc
mov
repnz
dec
push
mov
sub
jmp
mov
repz
adc
fistp
mov
cmp
or
ss
and
gs
fild
pop
or
sbb
adc
adc
(bad)
shr
sahf
mov
mov
inc
jl
bound
cld
call
pop
push
addr16
and
mov
or
mov
jmp
ins
in
(bad)
repnz
pushf
hlt
mov
xchg
test
lds
sub
mov
inc
xchg
mov
aas
mov
mov
pop
loope
lock
inc
pop
push
loopne
into
je
mov
daa
sbb
jecxz
pop
outs
jmp
add
mul
cld
push
inc
stos
shl
int
inc
mov
imul
pop
enter
jno
outs
data16
loop
shr
je
ja
xchg
push
inc
and
test
pop
shr
fdivr
fwait
mov
lea
inc
ror
inc
xchg
popa
xor
ficom
out
test
les
mov
sub
cmps
mov
mov
and
(bad)
les
test
jle
sub
pop
popf
pop
xor
adc
call
xor
je
ret
popa
pop
push
dec
in
xchg
das
cmp
sub
mov
test
lods
inc
or
jmp
lds
push
jbe
and
icebp
cmp
add
mov
sbb
cmp
stos
push
cld
hlt
xor
jnp
arpl
loop
and
lods
stos
(bad)
cli
mov
mov
xlat
xchg
repnz
pop
(bad)
xor
shl
fs
or
stos
add
std
popa
movs
dec
push
inc
int3
sbb
pop
jp
dec
xchg
out
pushf
ins
sub
daa
cli
xor
or
jmp
scas
dec
pop
repz
mov
and
xchg
(bad)
mov
fisttp
add
inc
sub
fsubr
repz
and
add
icebp
and
xchg
pop
fimul
out
pusha
pop
cld
mov
gs
xor
arpl
aam
add
xchg
lods
or
cmp
fwait
sbb
cs
pop
push
fst
cwde
add
enter
and
aas
or
cmp
sub
adc
(bad)
fwait
icebp
(bad)
in
dec
ds
add
adc
cmp
inc
jg
jmp
dec
movs
xchg
nop
int
pushf
loopne
push
jne
cs
and
int3
cmc
mov
setle
arpl
mov
dec
scas
mov
and
iret
int
fldenv
ror
adc
sahf
dec
in
xchg
inc
push
or
add
jo
ficom
push
stos
stc
mov
repnz
stos
(bad)
ror
xor
push
push
mov
jmp
into
stos
or
sub
loop
cld
shr
out
xchg
aam
sub
sub
mov
pop
ja
mov
adc
jge
scas
ror
xor
cmc
(bad)
xchg
fwait
jge
pushf
(bad)
xor
cmps
lea
push
pushf
mov
mov
mov
fistp
aaa
in
inc
js
imul
or
sbb
xlat
loop
adc
push
cmp
dec
ret
ds
dec
movs
xor
pop
mov
test
std
xor
in
mov
cmp
in
movs
leave
ficom
cmp
jb
retf
fcompp
mov
xchg
mov
jae
mov
inc
jns
cwde
mov
mov
pop
pop
int
jae
call
mov
jno
daa
mov
mov
pop
or
mov
mov
js
imul
mov
js
mov
test
cmp
xchg
enter
and
ja
sbb
jle
inc
mov
lahf
(bad)
fild
pop
push
mov
loopne
pop
xor
mov
popf
xor
pop
inc
pop
and
inc
cmp
loope
mov
mul
adc
dec
push
pop
mov
setl
cmp
out
jns
push
add
mov
daa
cmc
in
shl
mov
or
pop
pop
sbb
push
out
xchg
push
lods
mov
out
fistp
aam
adc
pop
lock
out
and
call
xor
sbb
jp
scas
mov
es
in
push
into
es
xor
lahf
jecxz
stos
mov
inc
mov
add
pop
sub
ss
test
dec
sbb
cli
and
stos
mov
je
shr
add
mov
popf
frstor
shr
cmp
add
jno
jns
div
xchg
adc
push
rcr
stc
inc
mov
ffree
push
mov
(bad)
scas
ds
pop
int3
std
pusha
out
xchg
pop
or
mov
pop
xlat
push
push
jmp
movs
push
out
fcomi
mov
ss
xor
and
sub
jns
cmp
adc
arpl
sub
cmp
adc
and
or
dec
mov
bound
add
ins
(bad)
or
add
sbb
(bad)
ins
fisub
mov
in
aaa
adc
loopne
mov
int
outs
mov
adc
call
vcvtdq2pd
mov
push
add
dec
jo
add
fs
and
and
push
lds
cld
(bad)
test
retf
(bad)
and
cld
and
xchg
mov
and
mov
fs
sti
test
xchg
sbb
jb
movs
ins
jp
xor
in
dec
jle
mov
sbb
or
pop
jbe
shl
xchg
or
xchg
daa
lods
cmp
call
cmps
dec
add
sub
mov
cmp
rep
test
cmp
mov
push
daa
pop
cmps
imul
movs
loopne
push
pop
mov
enter
sbb
aad
jge
repz
sbb
fldenv
jb
mov
call
push
xchg
gs
lods
xor
xor
out
movs
(bad)
mov
xchg
test
mov
hlt
pop
mov
add
and
jae
aaa
sub
adc
and
mov
push
adc
(bad)
jle
push
int
out
loop
mov
mov
push
(bad)
pop
frstor
mov
xchg
dec
in
push
or
sbb
das
cmc
push
fnstenv
inc
jp
xor
cli
(bad)
pop
push
sub
sub
cmp
xor
scas
scas
das
xchg
out
dec
or
xor
mov
cli
test
lock
retf
and
mov
cmp
data16
popf
adc
fst
cld
pop
xchg
cmps
sub
fisubr
es
int3
pop
lods
xor
mov
cli
loop
push
pop
mov
std
sahf
jmp
mov
pop
and
add
aas
fsub
pop
xor
jp
inc
mov
adc
nop
sbb
mov
add
inc
pop
aam
push
xchg
pop
pop
sar
test
or
inc
push
repnz
es
scas
lods
stos
out
and
adc
cmc
es
adc
aam
adc
dec
or
mov
pop
jge
nop
adc
or
ror
pushf
mov
hlt
(bad)
cmp
push
mov
pop
cwde
lods
xor
cmp
neg
mov
xlat
mov
les
int3
out
out
pusha
pop
mov
cmp
imul
in
or
fcomp
adc
imul
pop
jmp
sbb
dec
mov
jbe
cli
dec
mov
or
leave
test
jne
outs
je
loopne
jb
mov
shl
mov
xchg
xor
sbb
xchg
mov
ins
scas
cwde
nop
pop
les
scas
cmp
add
or
enter
movs
dec
jl
push
pushf
movs
mov
and
test
(bad)
out
aad
sbb
shl
jnp
movs
mov
xchg
lods
inc
lock
add
sbb
or
mov
jae
pop
ret
push
xchg
or
ja
jno
dec
scas
ret
test
push
add
pop
daa
lss
or
inc
sbb
sar
inc
test
outs
push
out
inc
mov
leave
mov
ins
sar
adc
jmp
push
fidiv
mov
cld
jne
test
(bad)
iret
ds
mov
ins
inc
mov
popa
movs
jp
out
adc
lods
adc
cmp
jge
fisttp
add
mov
add
das
pop
dec
inc
(bad)
push
jnp
xchg
sar
jp
pop
pop
xor
lock
lea
mov
mov
cmp
pop
jne
mov
sahf
mov
xchg
push
mov
pop
jmp
pop
je
push
fdivr
je
lods
jle
cdq
aaa
xlat
jle
xchg
add
jns
in
mov
push
sbb
xor
inc
test
(bad)
sub
fsubr
sub
rcr
loop
pop
and
out
adc
gs
bt
lahf
outs
add
movs
xchg
test
xchg
movs
stos
sub
pop
adc
sti
xor
in
xchg
pop
mov
dec
sbb
mov
jae
cmps
jne
scas
mul
mov
test
adc
add
jmp
or
and
icebp
push
pop
inc
push
sbb
cli
test
test
sub
(bad)
test
ds
mov
inc
pop
mov
pop
int3
inc
hlt
aam
outs
pop
push
mov
xchg
dec
(bad)
loope
int3
push
call
cmps
pmaxub
ret
mov
ret
gs
loope
(bad)
(bad)
mov
xchg
es
inc
test
jge
inc
adc
retf
push
div
and
mov
into
sbb
mov
mov
dec
out
call
add
aad
or
mov
cmps
dec
scas
je
jns
cmp
sbb
popa
jmp
add
add
js
mov
(bad)
push
inc
sub
mov
dec
xchg
ret
cdq
nop
ret
pop
add
imul
and
xor
gs
jge
sbb
sbb
nop
xchg
push
or
adc
shr
outs
jbe
xor
out
xor
jmp
sub
jle
xchg
jns
lds
sahf
dec
rcl
push
or
push
xchg
or
ret
and
jl
push
xor
dec
jo
pusha
mov
adc
sahf
add
add
mov
gs
dec
mov
popa
cmps
sti
loopne
cmps
sbb
cmp
ins
repz
(bad)
cld
call
ja
jae
and
std
xor
lock
ret
and
mov
ss
and
enter
or
cmp
mov
fwait
stos
ret
sti
jne
xchg
outs
outs
push
loopne
xchg
dec
icebp
rol
push
xor
repnz
scas
js
xchg
test
fs
cli
call
(bad)
lods
push
xchg
jo
mov
xchg
daa
rcr
in
cmp
dec
xchg
stc
inc
fidiv
push
imul
cmp
mov
movs
push
pushf
(bad)
adc
loop
pop
mov
retf
cmp
jns
push
movaps
xchg
jne
jne
sbb
xchg
jnp
push
push
add
xor
hlt
not
lods
xor
inc
jb
movs
aaa
push
inc
aas
fsubr
movs
fmul
jnp
popa
outs
xchg
arpl
outs
push
sbb
pop
cmps
ss
ins
les
xor
cmp
sub
scas
sub
jne
rcl
mov
imul
ins
adc
stos
mul
jecxz
and
retf
dec
jno
push
or
mov
repnz
fdivr
cmp
pop
pusha
out
push
xor
es
push
and
push
rol
sbb
lahf
stc
push
out
dec
(bad)
adc
imul
imul
mov
int
icebp
lahf
cmp
fild
dec
sahf
mov
push
jl
stos
iret
sub
clc
or
imul
push
pop
sub
in
btr
dec
imul
xor
xor
lods
(bad)
cmps
push
push
jo
rol
add
adc
jp
test
inc
outs
xlat
mov
push
ds
sub
lods
pop
inc
mov
(bad)
mov
cmp
sahf
or
shl
gs
xlat
cs
add
sbb
push
mov
jns
push
sbb
mov
std
lods
mov
(bad)
lock
or
(bad)
mov
sbb
add
sahf
aaa
fidivr
sub
mov
and
(bad)
add
mov
scas
(bad)
stos
loope
mov
adc
sbb
push
icebp
sbb
(bad)
aas
jo
pop
lds
aaa
mov
add
jmp
mov
mov
mov
sahf
jmp
adc
retf
test
pop
inc
xchg
pop
cli
sbb
mov
pop
push
fiadd
test
push
mov
and
mov
adc
hlt
push
retf
shl
std
into
(bad)
shl
push
arpl
ss
ss
repz
nop
retf
and
pusha
std
jnp
jno
push
bound
cli
ins
clc
jo
cmpxchg
xor
cmp
(bad)
pusha
ja
sbb
dec
cwde
mov
mov
jb
lock
test
mov
lods
cmp
or
fsub
shl
(bad)
or
mov
adc
aam
test
xor
mov
xlat
ds
out
sbb
movs
push
inc
into
cwde
shl
xchg
jb
out
mov
lods
adc
jmp
push
fimul
mov
pop
inc
ins
push
inc
pop
jns
dec
pop
lds
pop
push
mov
or
cs
lods
sti
jge
shl
push
cmp
(bad)
pushf
jp
sub
hlt
loope
rol
(bad)
push
into
pop
retf
cmp
xchg
popa
call
xor
lds
cwde
xchg
cli
mov
std
add
push
mov
mov
xchg
mov
(bad)
or
push
retf
adc
jno
adc
and
jmp
mov
jg
mov
aad
test
and
fcmovnbe
dec
and
or
mov
lea
out
push
arpl
inc
mov
lods
fsubr
mov
dec
rol
and
sahf
push
jo
shl
loope
(bad)
cmp
cs
jl
pop
sub
iret
icebp
sbb
clc
mov
cmp
xchg
xor
(bad)
fcmovnu
inc
mov
add
add
pop
clc
pop
mov
sbb
daa
ret
cmp
mov
ret
and
ss
mov
pop
add
mov
(bad)
mov
sub
or
imul
xchg
mov
xor
cmp
packuswb
cmp
pop
push
cmp
dec
imul
jns
push
call
inc
in
fcom
mov
in
dec
out
mov
inc
es
pop
mov
adc
dec
mov
hlt
xchg
mov
mov
(bad)
pop
popa
sub
or
sub
jg
into
pop
mov
jle
mov
push
inc
(bad)
jae
and
ror
loope
or
loopne
je
cmp
jns
imul
imul
pushf
ret
inc
sar
jmp
xor
xchg
jnp
shl
out
and
dec
adc
jecxz
(bad)
(bad)
and
adc
sbb
push
jbe
add
dec
push
mov
push
mov
or
jns
push
bound
cmps
iret
int3
aaa
pop
test
outs
inc
inc
mov
cld
mov
inc
jmp
push
in
push
sub
mov
cmp
inc
lods
xchg
std
sbb
and
sub
or
and
mov
mov
test
rcl
sbb
cmp
pop
lods
call
shr
and
sub
pop
(bad)
sub
dec
sub
mov
lock
imul
(bad)
shr
cmp
push
push
push
or
mov
out
pop
mov
mov
(bad)
push
fistp
xor
xchg
jg
push
repz
ss
mov
rcr
mov
xor
test
loope
add
int3
int
je
xchg
scas
in
fstp
cmps
inc
retf
mov
sti
jp
cld
jecxz
pop
cwde
adc
nop
arpl
xlat
jne
sub
fisubr
inc
inc
xor
or
leave
or
lea
sub
jno
sahf
scas
dec
arpl
push
mov
icebp
mov
and
movs
pop
mov
imul
xlat
shld
outs
lea
loopne
mov
xchg
lds
int
cmps
jle
lea
jmp
int3
and
addr16
pushf
adc
cmps
mov
cmps
sbb
mov
push
pop
ins
and
in
push
(bad)
push
inc
xchg
test
dec
jne
mov
adc
inc
test
cs
repnz
retf
xchg
sub
sbb
fist
in
outs
mov
fidivr
cmp
mov
ror
aam
loope
scas
jp
mov
inc
mov
ror
push
mov
mov
test
ins
stc
mov
daa
test
add
scas
xchg
inc
fidivr
xchg
jne
mov
gs
mov
push
retf
mov
xchg
shl
push
jno
jmp
inc
pop
sahf
ret
into
xchg
stc
sahf
(bad)
add
stc
jmp
jns
inc
outs
js
ficomp
adc
stos
out
push
scas
out
mov
jmp
icebp
pop
movs
cs
jb
mov
adc
out
cli
xlat
and
out
ror
gs
(bad)
adc
push
in
mov
fcmovne
jle
mov
scas
pop
mov
pop
in
xchg
adc
scas
in
xchg
push
addr16
cmp
nop
add
pushf
jmp
jae
adc
sbb
dec
imul
stos
lea
call
sbb
test
sub
sahf
ret
xchg
or
aas
mov
clc
fldenv
pmaddwd
push
inc
mov
mov
into
into
out
xchg
dec
inc
and
add
push
adc
xchg
mov
add
cwde
push
or
mov
mov
mov
arpl
mov
jp
ss
mov
and
lds
cmp
sbb
aas
cmp
jns
out
inc
outs
pop
shl
das
test
inc
leave
leave
mov
jo
pop
xchg
ss
shl
nop
xor
mov
jno
mov
inc
push
or
add
adc
dec
mov
ins
pop
test
jmp
(bad)
mov
sahf
jae
inc
push
pop
adc
pop
enter
pop
dec
and
inc
aad
bound
(bad)
cmp
mov
test
cs
push
jo
dec
cmp
mov
or
xchg
ja
dec
inc
shr
push
lea
sub
cmps
mov
rcl
jmp
mul
pop
fcomi
or
inc
cdq
loope
repz
push
jmp
push
jmp
int3
out
or
push
lock
xor
bound
dec
inc
dec
adc
(bad)
and
in
add
call
test
cmps
dec
mov
shr
repnz
call
cmp
dec
inc
div
add
(bad)
jmp
xor
sti
mov
loop
xchg
mov
fidiv
fs
sub
sub
pop
pop
jbe
xchg
rol
add
addr16
or
sbb
int3
mov
rcl
scas
int
into
sbb
adc
sub
push
fwait
adc
xlat
cmp
inc
stos
sar
icebp
push
inc
push
movs
xor
adc
jmp
jl
rcr
call
jo
sbb
(bad)
mov
xor
cmp
(bad)
fistp
sub
xchg
and
push
mov
jae
imul
cmps
inc
call
inc
repnz
push
cmp
add
out
sub
push
es
dec
popa
adc
xchg
ins
or
aad
dec
adc
icebp
mov
sbb
out
in
movs
xor
xchg
adc
(bad)
pop
and
hlt
mov
mov
(bad)
lds
in
or
popa
pshufw
pop
jp
push
out
mov
cmp
adc
xor
loop
mov
es
push
sbb
ja
dec
add
leave
and
hlt
jl
test
cmp
lock
or
sahf
test
pop
and
jl
mov
ss
push
movs
das
xlat
push
out
pop
mov
outs
push
aam
add
test
lea
loop
and
ins
sub
inc
push
cmc
std
fcomi
popa
cmps
mov
fwait
mov
adc
mov
pop
or
scas
(bad)
sbb
loopne
and
(bad)
adc
fidiv
push
pop
stos
shl
into
cs
div
mov
mov
push
popa
loopne
dec
and
lock
aad
jl
sahf
and
call
jmp
dec
jne
dec
adc
call
test
ret
lds
out
pop
mov
cmc
stos
rcr
ss
out
mov
dec
xchg
inc
aas
fisttp
out
or
mov
sahf
or
test
aad
mov
add
or
lods
mov
dec
vunpcklps
sbb
push
enter
pop
outs
bound
(bad)
mov
in
jmp
sbb
(bad)
xchg
push
push
lock
test
stos
mov
shl
(bad)
xchg
lods
xchg
cld
inc
push
loop
push
fdiv
lea
add
aad
cli
and
push
xchg
mov
ficom
lock
retf
dec
jns
fdivr
shl
sub
and
stos
and
repnz
and
cwde
das
jb
ret
cs
(bad)
(bad)
add
sahf
outs
push
add
in
stos
add
ins
push
xchg
cmp
pop
xor
push
xchg
jl
daa
xchg
aas
stos
retf
pop
pop
xor
fwait
or
jno
fsub
and
mov
std
cmp
dec
test
bound
adc
mov
mov
add
cmp
mov
int3
dec
mov
mov
mov
bound
addr16
cli
push
js
xchg
into
ja
mov
or
out
cwde
xchg
adc
mov
imul
mov
cmp
xchg
fsubr
cs
jnp
dec
add
test
or
hlt
call
shl
lods
xchg
movs
inc
fs
sub
xor
cld
clc
jl
stos
das
sbb
int
test
in
and
jl
movs
int3
dec
retf
cwde
sbb
ja
push
jno
adc
icebp
xor
bswap
dec
ins
imul
mov
loop
mov
xchg
dec
or
dec
dec
test
mov
in
and
rol
and
mov
loopne
stos
sbb
cmp
repz
mov
push
and
jmp
aas
dec
mov
pop
inc
ror
xchg
push
call
pushf
hlt
fiadd
(bad)
dec
mov
jmp
in
and
or
mov
and
sbb
dec
add
mov
sub
dec
mov
cs
into
sub
cmps
inc
cwde
pop
nop
aas
xor
jmp
push
sub
pop
fiadd
mov
pusha
inc
sub
leave
fstp
les
xor
add
daa
(bad)
cmp
sbb
popa
mov
pop
push
ins
pusha
push
repnz
jb
inc
addr16
push
cmp
and
dec
repz
cdq
in
or
mov
aas
(bad)
js
mov
sahf
stos
jmp
inc
inc
es
retf
mov
sub
ror
mov
push
or
ds
cmp
fild
fdivp
and
push
mov
cmps
lock
lea
sub
fidivr
add
push
scas
or
push
jmp
sbb
frstor
cld
or
daa
dec
stc
fwait
sbb
cmp
and
mov
mov
and
pop
and
xchg
clc
sub
out
sbb
adc
mov
and
or
fucomp
add
add
push
dec
pop
rcr
retf
add
fcomip
xchg
xchg
mov
sbb
pop
add
scas
fsub
pop
idiv
ds
xchg
fs
jl
inc
push
nop
test
push
xchg
jg
jo
lock
fidivr
sahf
shl
add
mov
mov
mov
aam
les
test
sbb
push
leave
xchg
mov
in
push
leave
sbb
shr
pop
std
add
mov
adc
mov
xchg
mov
push
cmp
iret
and
xor
das
inc
adc
cs
jns
(bad)
inc
imul
fistp
repnz
sbb
xor
mov
xor
sub
xchg
fmul
xchg
jle
(bad)
fcomp
xchg
cld
mov
fld
cs
sbb
inc
outs
ins
popa
outs
mov
scas
inc
daa
mov
aad
inc
xchg
popa
rcr
push
cmps
popa
pusha
mov
mov
or
pop
rcr
xchg
(bad)
ss
jmp
jge
pop
xchg
cwde
mov
add
sbb
mov
ja
mov
or
add
dec
lds
mov
mov
lock
inc
add
add
ja
sub
les
data16
mov
ret
dec
ins
out
inc
movs
in
(bad)
scas
pop
outs
cmps
cwde
adc
popa
inc
push
inc
sahf
leave
sub
xor
call
outs
rol
aad
retf
cmp
mov
das
in
ds
mov
sbb
sub
mov
mov
mov
jb
cmps
lea
and
and
dec
(bad)
xchg
lahf
rcr
and
or
in
into
fldenv
sub
dec
mov
pop
mov
int3
xchg
imul
mov
rcl
fnstenv
inc
jb
sbb
adc
mov
inc
adc
inc
push
mov
sti
mov
sahf
(bad)
cmp
cli
sbb
mov
mov
dec
popf
push
mov
xor
sub
xor
cs
ret
out
xchg
daa
test
xchg
pop
mov
ret
or
addr16
fcmove
daa
and
mov
sbb
jmp
push
stc
sub
scas
add
nop
add
mov
jo
retf
stos
sub
lods
adc
and
and
pop
jle
movs
mov
outs
and
mov
jmp
fidiv
rcl
stos
xor
stos
sti
sub
test
mov
xor
sub
push
or
js
imul
push
mov
dec
cmp
jg
scas
add
xchg
xchg
mov
test
add
je
fld
sti
imul
sbb
jae
test
inc
jl
jp
cli
mov
(bad)
add
xor
push
xor
cld
xchg
inc
sti
fist
shl
push
fisttp
les
sbb
cdq
inc
das
ror
aad
sub
add
out
xor
mov
xor
add
fxch
imul
test
pop
(bad)
imul
fbstp
aaa
(bad)
shl
or
shr
lock
mov
or
xor
fadd
jecxz
sub
mov
arpl
pop
mov
mov
add
adc
int3
aaa
push
or
dec
outs
imul
(bad)
ja
push
lea
movs
gs
sar
call
ins
or
int3
in
xor
jge
retf
xchg
jnp
ror
shl
pop
jae
sti
or
repnz
mov
jmp
sub
or
and
cdq
xchg
adc
lahf
test
lds
stos
mov
jmp
dec
in
xchg
mov
mov
clc
leave
cli
xchg
sbb
stos
out
push
add
mov
inc
rcl
fld
mov
add
xchg
xor
cli
fisubr
mov
mov
test
(bad)
loopne
xchg
xchg
bound
or
push
(bad)
iret
mov
inc
cs
mov
int3
sbb
lock
sbb
adc
and
sahf
or
jae
fisttp
mov
push
sbb
adc
arpl
jp
cmps
ret
cmc
xor
inc
push
ror
pop
xlat
bound
pop
push
dec
push
push
push
inc
mov
pop
or
dec
mov
fsubr
jbe
int3
lahf
push
mov
inc
cmp
and
xchg
(bad)
pop
mov
iret
cmp
jae
sub
fxch
cmp
(bad)
icebp
mov
loope
fistp
(bad)
mov
iret
test
mov
rol
adc
mov
enter
ds
shr
lahf
ja
pop
into
xchg
and
jo
test
out
mov
idiv
in
icebp
dec
repz
mov
sub
dec
sub
mov
xchg
add
aas
pop
imul
mov
and
inc
mov
not
or
push
es
loopne
and
pop
repz
mov
mov
(bad)
int3
loopne
push
inc
add
push
rol
pop
xchg
mov
hlt
or
and
jo
sub
out
mov
les
scas
(bad)
sbb
ror
outs
inc
dec
int
aam
pop
fdivr
arpl
xchg
jl
add
outs
pop
mov
xchg
out
and
cmps
xor
pushf
jg
shl
shl
and
xor
sbb
inc
mov
leave
ret
add
jmp
sbb
ja
or
xor
sub
mov
dec
pop
mov
cmp
dec
push
outs
mov
test
sbb
add
xchg
(bad)
cmp
loop
fisttp
call
dec
call
arpl
inc
jg
imul
cmp
mov
outs
test
jp
rol
xor
jecxz
push
pusha
fs
(bad)
push
jle
mov
mov
je
in
imul
ret
in
mov
sub
inc
int
inc
mov
or
jge
pop
push
repnz
mov
call
push
mov
dec
test
mov
cmp
add
jl
and
pop
mov
push
dec
push
cmp
dec
dec
retf
xor
or
call
pop
cmp
addr16
jbe
bnd
call
or
scas
adc
sub
jmp
call
out
je
cmc
add
shl
xchg
jl
inc
sub
pop
cld
js
push
pushf
sbb
pop
xor
push
sbb
and
mov
cmp
mov
stos
mov
int
movs
lahf
jne
imul
xchg
mov
sub
hlt
sbb
inc
nop
push
cmc
adc
add
inc
adc
test
cdq
rcl
cli
ror
fld
addr16
push
mov
pop
add
cmp
push
(bad)
sub
lea
jle
mov
in
adc
lock
mov
lds
lock
xchg
ror
shr
push
fs
cmp
(bad)
stos
(bad)
cmp
mov
mov
or
push
lea
push
fs
jle
cdq
push
(bad)
push
pop
jp
inc
inc
fistp
sbb
jae
(bad)
call
and
test
cmp
sub
lahf
mov
jae
push
xlat
outs
cdq
sbb
stc
clc
push
icebp
mov
xor
jl
outs
sbb
dec
push
xchg
jmp
sbb
ins
data16
or
push
jge
not
xchg
mov
retf
push
xor
mov
mov
mov
jno
(bad)
sbb
push
adc
add
xor
mov
mov
and
pop
cmp
xor
xchg
or
es
mov
or
fs
je
fild
sbb
(bad)
adc
pop
stos
rcl
(bad)
inc
or
mov
dec
clc
mov
cdq
cmp
xchg
clc
outs
in
jmp
lods
xor
test
lea
sub
mov
xor
cmp
(bad)
inc
icebp
out
jne
in
mov
dec
and
dec
(bad)
jge
retf
jle
xchg
inc
inc
xor
daa
cmp
adc
push
dec
sub
and
movs
pop
pop
sub
jl
test
mov
inc
xchg
in
and
pop
stos
iret
js
xchg
shr
sahf
sub
retf
call
stos
jmp
or
sub
dec
les
push
repz
pop
mov
xchg
inc
cmc
(bad)
int
pop
xlat
rcr
dec
leave
(bad)
lods
push
aaa
adc
inc
xor
dec
push
imul
mov
sbb
lods
jmp
adc
cwde
div
xchg
repz
int
loop
ins
fistp
inc
jno
inc
xchg
jecxz
inc
bound
inc
cmp
clc
fnstcw
enter
lea
aas
fmul
pop
cmp
push
push
sub
mov
mov
pusha
and
mov
(bad)
repz
ins
jge
(bad)
std
push
or
mov
ret
or
sbb
nop
call
cmc
pop
mov
das
sbb
xor
pop
push
scas
inc
jecxz
or
and
jae
jne
ss
dec
aam
add
cmp
jg
xor
bound
mov
push
mov
push
test
ret
es
mul
into
pop
and
mov
out
inc
in
dec
jl
mov
into
xchg
or
xlat
mov
fs
pop
cmp
inc
aam
popf
fsub
xor
js
push
mov
bound
dec
jp
push
aad
pop
lods
pop
test
xchg
rcl
lock
dec
xchg
adc
in
or
pop
shl
sbb
jns
loop
or
cmps
fmul
jmp
xor
lds
push
lahf
adc
sub
loope
(bad)
stos
popa
dec
inc
mov
mov
jbe
lods
and
aad
xor
icebp
and
stc
nop
xchg
pop
cmp
dec
es
hlt
aam
mov
loop
std
cmp
nop
cmp
adc
cdq
sti
sbb
enter
pop
dec
pusha
mov
cmp
xchg
icebp
pop
push
add
sub
imul
fstp
jae
cmp
and
sbb
pop
bound
pushf
test
or
sub
xchg
iret
sbb
aas
push
pop
ss
jmp
pop
adc
or
nop
rol
cmp
xor
xchg
push
or
push
jnp
loope
call
xchg
fmul
test
(bad)
jl
xchg
and
jmp
inc
and
ds
stos
inc
fst
adc
mov
or
test
mov
jno
dec
mov
popf
jb
inc
hlt
bound
xchg
rcr
and
or
cmps
xor
jp
pop
in
or
pop
pop
xchg
stos
sub
in
out
lods
ins
(bad)
xor
jb
mov
ss
(bad)
sbb
pop
pushf
sub
das
push
xchg
jae
cmps
scas
cmp
mov
bound
sub
xor
cmp
mov
or
add
inc
adc
(bad)
mov
mov
cmp
fwait
or
int3
sbb
sbb
jle
into
jmp
lds
or
cmc
test
add
mov
jne
cmc
mov
in
leave
jg
aas
mul
pop
sbb
sbb
pop
xchg
pop
dec
retf
jle
mov
loopne
ins
(bad)
pop
mov
mov
jle
inc
rdmsr
xor
cmp
iret
adc
xor
sub
rcl
mov
add
jp
(bad)
or
inc
cmp
and
outs
stos
test
mov
mov
xchg
mov
shl
shl
sbb
aad
mov
fadd
sub
push
mov
mov
(bad)
leave
cmps
(bad)
out
mov
loop
jl
xor
xchg
and
jecxz
jmp
test
mov
cld
or
loop
push
imul
sbb
test
sub
xchg
fimul
xor
or
mov
enter
(bad)
mov
push
sbb
mov
or
push
sbb
int
ror
test
mov
movs
lock
(bad)
sti
cwde
neg
sahf
mov
js
mov
sub
iret
std
or
pop
or
push
pop
sub
pop
sub
mov
inc
movs
loope
out
mov
(bad)
jl
out
jmp
test
sahf
inc
dec
cs
(bad)
fld
mov
cmp
cli
(bad)
jne
add
cmc
push
dec
bnd
popa
inc
cmp
xchg
xor
add
cwde
repnz
adc
pop
data16
call
in
fnstsw
dec
adc
shl
mov
mov
ja
les
cmp
xchg
sub
popf
xor
les
push
mov
mov
mov
push
add
mov
or
lea
add
call
cdq
test
rcr
loop
movs
push
jnp
hlt
cli
jbe
fild
cdq
cs
pop
fist
xor
rdpkru
(bad)
(bad)
nop
repz
imul
pop
stos
rcl
rol
inc
dec
shr
das
jge
movups
inc
pop
icebp
and
pushw
pushf
dec
xchg
mov
out
or
out
add
adc
xor
sahf
mov
gs
lahf
pop
sbb
(bad)
mov
popf
je
leave
das
push
mov
dec
fucomp
jmp
pop
push
or
xlat
movs
pop
enter
fsub
xor
mov
pop
dec
mov
int
test
mov
or
cwde
push
xor
es
ss
inc
xchg
sub
fadd
(bad)
push
jbe
iret
pop
mov
add
mov
cmp
push
xchg
stc
int
addr16
ror
mov
mov
xchg
(bad)
push
or
fbstp
adc
scas
or
jle
mov
cdq
inc
iret
pop
push
out
jmp
pop
out
iret
(bad)
cs
fcmovb
and
mov
adc
mov
lahf
stos
mov
mov
xchg
xchg
pop
fdivp
push
nop
loopne
jae
leave
outs
adc
arpl
mov
ror
shr
jb
bound
js
inc
jae
test
fcom
xor
jg
pop
inc
dec
pop
aam
and
je
and
stc
jge
outs
sub
pop
mov
(bad)
adc
xchg
xchg
ret
pop
jbe
mov
add
pop
and
adc
retf
mov
jl
adc
cmp
call
jmp
sbb
xor
rcl
cmps
jg
sub
sub
sti
jg
icebp
adc
psubusw
es
(bad)
sbb
enter
adc
inc
test
push
mov
xchg
movs
mov
mov
xlat
cmp
mov
lds
push
movs
int3
mov
mov
mov
mov
jp
push
xchg
shl
xchg
xor
or
aaa
add
shl
add
pop
sbb
jle
mov
xchg
lock
jne
xor
enter
(bad)
jmp
xchg
adc
sti
or
cli
fs
aam
clc
xchg
ret
inc
sar
lahf
fwait
scas
scas
add
xor
jmp
arpl
leave
ror
dec
out
stos
ins
xor
stc
sahf
(bad)
and
ret
aam
pop
xor
div
mov
neg
add
fs
std
and
sbb
sar
push
xor
adc
rol
imul
jmp
cwde
mul
mov
ss
enter
ret
add
clc
js
mov
mov
xchg
(bad)
adc
push
lods
or
xchg
shr
dec
jb
xlat
mov
push
mov
push
push
pop
fnsave
(bad)
jmp
and
push
loopne
mov
or
fisub
bound
adc
mov
jl
sbb
imul
xlat
mov
mov
js
daa
outs
push
add
fwait
hlt
dec
jle
(bad)
ins
dec
popa
test
push
xor
std
iret
sbb
out
pop
mov
pop
imul
mov
mov
jmp
pop
dec
cdq
pop
mov
or
daa
jl
jbe
(bad)
call
mov
pop
or
scas
mov
cs
mov
out
sbb
mov
jae
mov
cli
mov
popa
push
jg
cmp
pop
push
sar
stos
or
ror
and
xchg
inc
lods
pop
xchg
in
out
push
adc
(bad)
mov
dec
jnp
jg
mov
push
sub
in
adc
sub
push
pop
xchg
sbb
and
jne
mov
je
arpl
das
inc
dec
xchg
xchg
xor
addr16
xchg
sar
jmp
scas
idiv
sub
pop
movs
stc
push
leave
add
pop
(bad)
add
scas
(bad)
sbb
dec
xor
pop
dec
mov
mov
xchg
das
xor
cvtpi2ps
mov
repnz
jno
aad
lds
mov
xchg
jmp
je
push
mov
std
fs
mov
call
push
ret
jae
inc
adc
cld
scas
test
ficomp
iret
jno
mov
cmp
rcr
(bad)
xchg
cmp
bound
mov
jnp
inc
xchg
xchg
mov
stc
sub
sahf
push
sub
xor
sub
call
lahf
(bad)
out
xchg
sub
hlt
shl
call
mov
cs
enter
loope
hlt
(bad)
jo
xchg
icebp
jae
xchg
rol
movs
mov
ins
out
stos
adc
loopne
adc
repnz
les
rcr
push
js
inc
inc
ret
lahf
mov
pop
mov
xchg
xor
imul
inc
jg
sub
add
sbb
out
lods
mov
clc
or
popf
lahf
xchg
call
mov
pop
lahf
push
ret
aaa
loopne
jle
shr
or
add
or
add
imul
stos
adc
add
or
adc
jmp
dec
js
ror
bound
sub
mov
push
mov
cmp
add
loop
loop
popf
cmc
frstor
mov
xchg
push
fs
imul
loop
xlat
and
xchg
iret
xor
mov
pop
cmp
jnp
ror
imul
add
mov
leave
loope
stos
repz
(bad)
ds
sub
repnz
sub
xor
std
stos
in
inc
and
stos
dec
push
icebp
adc
sahf
outs
addr16
push
sti
cwde
mov
iret
fbld
bound
cmp
stos
loop
hlt
nop
test
lock
cmp
jae
mov
adc
push
sbb
aam
cmp
in
inc
sub
add
xor
add
mov
xchg
add
cmp
dec
call
or
mov
xchg
cmp
inc
dec
pop
loopne
fbld
xor
pushf
mov
int3
repnz
rcl
stc
into
cmp
jle
(bad)
aam
dec
mov
dec
cmp
int
cld
add
pop
icebp
jno
mov
movs
mov
iret
and
mov
sbb
pop
mov
pop
mov
call
xor
mov
mov
js
mov
dec
cdq
popf
jg
push
jmp
or
dec
push
in
inc
dec
mov
das
xor
int3
and
lods
stos
lods
jae
(bad)
ds
gs
pop
shl
ds
xchg
cmps
pop
test
mov
dec
mov
jl
fs
adc
sub
not
addr16
and
pop
scas
or
rcl
in
cli
ret
and
push
sbb
xchg
adc
inc
lea
dec
cli
xchg
dec
cdq
sub
lahf
adc
jns
and
cdq
push
scas
mov
dec
inc
jns
pop
test
repz
mov
ret
xchg
ss
retf
cwde
cmps
adc
(bad)
dec
lods
jno
mov
jl
inc
add
dec
sub
daa
stos
std
mov
mov
adc
dec
sub
xchg
cli
add
cmps
fild
jle
jmp
mov
and
add
dec
ss
lahf
xchg
stc
or
inc
aad
fdiv
(bad)
inc
add
xor
adc
outs
aam
arpl
jnp
xrelease
adc
adc
stos
call
or
or
sahf
mov
popa
sub
imul
or
push
sub
packssdw
cwde
and
ror
mov
stos
push
jb
sub
cs
xor
lods
jl
(bad)
in
sbb
sti
inc
lds
sti
(bad)
mov
les
das
jne
lods
cdq
movs
push
loope
dec
ins
out
jns
bound
pusha
mov
sti
cmp
push
mov
mov
lahf
jnp
mov
sbb
(bad)
gs
or
mov
jmp
pop
sub
loope
retf
or
inc
inc
cmp
jmp
xor
inc
in
lds
movs
jo
fs
dec
pop
mov
mov
jl
pop
ss
aaa
iret
fcom
xchg
push
jae
ficomp
push
fisubr
and
mov
adc
clc
ret
push
shr
add
inc
popa
in
mov
loope
xor
das
dec
popa
or
sub
in
mov
push
leave
aas
movs
(bad)
fsubr
cmp
sub
repz
and
add
push
xor
loop
(bad)
or
cmp
mov
xlat
test
ret
push
mov
or
adc
dec
je
cmps
jl
push
scas
cmps
mov
ins
sub
cmp
ds
dec
and
push
add
scas
sub
in
mov
mov
mov
lods
dec
movs
test
call
out
out
jno
fxch
dec
pop
mov
ss
inc
push
jne
fwait
push
jne
dec
aaa
mov
jnp
mov
loope
mov
pop
jl
add
movs
xor
cmp
jecxz
call
out
das
fidivr
jnp
es
cli
or
lods
xchg
pop
add
sbb
mov
(bad)
lock
in
test
cmps
push
jmp
push
xchg
cmc
dec
bound
adc
scas
mov
neg
xchg
sti
push
cmp
xchg
movs
cmp
adc
cmps
mov
and
ss
out
in
mov
sub
push
dec
pop
int3
or
shr
aad
push
adc
jne
outs
imul
xor
retf
cli
pop
dec
fwait
inc
jmp
xchg
sub
test
xchg
xchg
push
sbb
ret
nop
sti
add
mov
cli
dec
add
loopne
add
add
cwde
cmps
push
test
mov
rcl
out
scas
jecxz
es
mov
jecxz
or
fistp
push
scas
nop
mov
adc
bound
sbb
pop
cmp
cmc
test
pushw
mov
lock
jge
ret
push
outs
int
out
dec
mov
test
loopne
cmps
shr
out
aad
mov
mov
xchg
cmps
or
dec
call
std
and
out
aad
fst
xchg
inc
push
(bad)
sbb
jmp
mov
pop
adc
sub
add
adc
sbb
outs
test
jbe
dec
in
setg
popa
jae
or
mov
mov
xchg
jg
inc
(bad)
sbb
sub
xor
outs
pop
xchg
dec
ret
push
mov
mov
inc
xor
dec
outs
fs
cmp
call
xor
jb
sbb
dec
or
push
std
repnz
stos
retf
or
das
fcmovbe
addr16
popf
cmp
push
pop
bound
jns
push
pop
xor
hlt
inc
push
mov
mov
scas
stc
xor
jecxz
add
mov
adc
jle
popa
mov
jb
adc
test
shr
dec
push
pop
ins
ss
jae
mov
or
push
aam
cmp
call
xor
js
mov
sbb
mov
rcl
xchg
adc
int3
inc
jl
xlat
imul
pop
shl
dec
mov
sbb
cdq
ins
fwait
pop
les
cdq
(bad)
mov
mov
jo
sbb
mov
rcl
sub
jmp
cld
sbb
scas
push
inc
dec
mov
lahf
pop
jmp
sbb
repz
imul
sti
or
inc
or
frndint
add
cmp
mov
mov
mov
xchg
mov
xor
ss
sbb
mov
cld
gs
push
cmp
add
clc
push
hlt
pop
dec
mov
mov
lock
mov
es
es
or
into
sub
in
xor
inc
jmp
mov
push
test
mov
sub
dec
mov
test
sbb
retf
mov
xchg
scas
cmps
or
and
aaa
mov
pop
and
das
data16
mov
inc
std
pop
popf
sbb
and
test
push
xchg
addr16
mov
loopne
dec
ds
outs
xchg
loopne
jg
adc
lods
cdq
cmp
add
sbb
adc
int3
jmp
xor
or
popf
pop
cmp
stos
test
push
(bad)
push
and
and
int
ins
dec
xlat
or
mov
jle
pop
sbb
dec
mov
hlt
adc
ret
pop
cli
jnp
cmp
(bad)
mov
dec
cld
ds
and
mov
dec
adc
loop
pushf
adc
repz
adc
fwait
sub
out
ret
fucomp
push
jp
es
cmps
je
aaa
mov
jno
mov
fwait
popa
lods
dec
(bad)
ins
cmps
into
inc
test
jmp
enter
fidiv
cmp
inc
mov
es
mov
rcr
sub
js
add
add
std
sbb
stc
enter
mov
sub
xor
add
jae
lods
shr
mov
cdq
xchg
nop
jmp
pop
push
and
cs
xor
out
pusha
push
push
int
sub
pop
nop
int3
dec
mov
or
add
ficomp
test
push
pop
sar
int
test
leave
jecxz
push
xor
rcr
jmp
call
sub
ins
jae
mov
bound
push
lock
add
lods
mov
jae
cld
push
pop
cwde
test
movs
lea
push
aaa
pop
aad
fsub
dec
adc
data16
dec
jbe
(bad)
shl
xor
xchg
dec
lahf
jge
push
(bad)
pusha
in
sub
lea
ficom
xor
push
popf
dec
in
in
xchg
aam
es
pop
pop
test
sub
adc
push
xchg
sbb
ret
lds
cmps
jmp
cli
outs
clc
mov
adc
popa
int
fiadd
xor
mov
xchg
aad
dec
or
(bad)
shl
cmps
push
jmp
pop
das
(bad)
cmc
jg
push
lods
ror
or
lea
sub
scas
std
icebp
(bad)
mov
les
mov
xor
and
push
xchg
push
jno
inc
xor
adc
adc
ret
add
inc
xor
dec
sahf
lods
mov
inc
cmp
inc
push
aas
push
mov
add
(bad)
push
leave
mov
aam
add
and
test
stc
xor
shl
push
cdq
sub
cmps
cmp
clc
std
cmp
sahf
cmps
int
xor
push
dec
(bad)
mov
ret
jno
push
pop
mov
fsubr
pop
jb
daa
sbb
inc
mov
dec
jae
lods
in
pop
push
stc
shl
jns
cmps
push
cmp
int3
mov
jl
dec
retf
(bad)
adc
movs
dec
push
push
push
pop
mov
out
sub
call
fnstsw
add
lods
xchg
xor
cmps
add
sub
loope
stos
mov
popf
loop
fs
outs
and
ret
mov
stc
lds
pop
and
(bad)
sub
(bad)
cli
adc
xor
jne
shl
lods
fbld
int3
test
jne
fistp
or
jecxz
sub
cld
aaa
pusha
cs
and
cmps
inc
mov
pop
add
mov
call
jmp
sahf
or
fcmovne
sub
jle
fadd
jge
inc
add
popa
jne
aaa
loop
lahf
push
cmp
dec
lods
jne
sar
jecxz
adc
xchg
retf
ss
mov
(bad)
loop
lea
jmp
shr
xchg
inc
mov
xchg
pop
push
add
movs
(bad)
ins
mov
sbb
push
arpl
imul
or
xchg
inc
into
mov
xor
push
test
in
push
das
dec
lods
dec
dec
mov
fs
inc
push
push
fisttp
mov
outs
dec
mov
jbe
int3
jae
data16
jne
call
sbb
rcr
sub
dec
out
xlat
dec
push
and
or
imul
mov
jecxz
aam
jo
retf
ror
mov
aam
ss
fld
mov
cmp
repnz
ror
into
loope
sub
xor
repz
push
mov
sub
adc
ja
ret
cmp
ret
push
(bad)
cmp
fst
push
cmps
push
xor
retf
xlat
cmp
mov
push
scas
aas
xchg
outs
aam
cmp
push
xor
es
adc
fwait
dec
cmp
lods
int3
pop
mov
aas
imul
cld
add
aaa
pop
xchg
jbe
pop
mov
jge
cmp
sub
fnstsw
and
xchg
adc
loopne
jb
sahf
inc
push
(bad)
adc
push
popa
das
in
sub
pusha
mov
addr16
es
jns
push
sbb
and
arpl
mov
and
rcr
or
jae
mov
mov
cmp
or
in
inc
mov
imul
les
add
int
mov
cmp
popa
dec
mov
push
adc
or
jne
fldenv
jg
or
add
loop
jecxz
xchg
mov
inc
mov
int3
retf
jns
mov
mov
or
in
inc
retf
lahf
test
adc
mov
in
push
or
mov
(bad)
xor
fcomp
xor
cs
outs
jecxz
xor
mov
adc
cmc
lock
aad
(bad)
jge
xor
mov
push
(bad)
xchg
clc
sub
xchg
retf
xor
cmps
fidiv
or
add
push
jno
jae
dec
daa
dec
xor
mov
inc
pop
mov
push
mov
es
mov
dec
or
mul
es
and
aas
into
jne
out
aaa
or
aas
sti
xchg
cwde
and
sub
repz
movs
sbb
outs
into
mov
shr
jnp
jb
or
adc
pushf
dec
jnp
jge
jne
push
xchg
and
push
stos
shr
jmp
adc
mov
in
aam
pop
scas
ins
loopne
nop
(bad)
push
xor
jl
imul
in
sub
inc
call
xchg
shl
ins
outs
push
and
push
dec
lds
loope
movs
adc
jns
fdivr
stos
push
adc
push
outs
rol
lahf
sub
in
mov
jecxz
rol
nop
sbb
mov
or
pop
jne
inc
sbb
and
icebp
mov
xor
inc
add
lods
sbb
xchg
sbb
ins
mov
push
out
(bad)
repnz
adc
jl
leave
ins
pop
or
mov
jb
ror
movs
sbb
mov
je
stc
div
sbb
(bad)
imul
in
test
and
pop
ins
sti
sub
mov
ret
imul
ret
je
pop
gs
cmp
leave
cmp
mov
inc
inc
xchg
ds
sbb
jae
xlat
add
jno
(bad)
adc
sub
aas
push
mov
adc
push
enter
(bad)
xchg
or
cmp
jns
fdivr
mov
js
mov
inc
pop
and
cmps
or
jns
mov
(bad)
je
jbe
outs
add
rol
xchg
xchg
fs
out
inc
pop
call
jbe
push
cld
stos
xor
xlat
int
inc
test
jnp
call
clc
mov
dec
push
fsubr
mov
add
push
pop
adc
adc
push
fst
fidiv
test
pop
das
inc
in
into
xor
cmps
test
stos
enter
ror
call
push
loopne
lock
xor
jge
mov
ds
lock
xor
(bad)
lock
mov
retf
sbb
pushf
movs
(bad)
in
loope
call
xchg
aad
sub
rcr
xor
mov
push
ja
outs
aam
sub
out
es
sub
and
mov
jp
sub
mov
xor
or
mov
xchg
xor
mov
std
ja
cdq
mov
sub
mov
in
(bad)
jg
push
sub
test
inc
jbe
das
mov
mov
xchg
inc
lds
fsubr
dec
jge
movs
xchg
sub
inc
xchg
ja
stc
in
repz
mov
adc
cli
or
in
cmp
imul
popa
mov
pop
mov
fldcw
neg
adc
cmc
ret
test
shl
mov
add
nop
and
stos
pop
dec
outs
mov
neg
arpl
enter
cli
retf
and
mov
mov
inc
lods
dec
dec
fimul
clc
or
lds
jmp
and
rcr
inc
and
xor
sbb
cmp
jecxz
inc
sub
shl
jnp
(bad)
das
jecxz
inc
lds
repz
gs
xor
test
inc
movs
xchg
jns
push
xchg
mov
dec
ret
jne
les
imul
sub
cmps
mov
sbb
jp
fcmove
enter
nop
or
nop
push
xchg
imul
sub
(bad)
ins
cdq
imul
leave
sub
rcl
sbb
stos
adc
pop
and
jl
outs
xchg
add
repz
aam
push
leave
sub
adc
mov
(bad)
add
fidiv
into
jge
sbb
xchg
jg
std
ret
lods
fld
sahf
iret
mov
bound
mov
call
int
mul
das
jmp
push
xor
xchg
jmp
dec
cmc
out
loopne
repnz
test
and
outs
fdivr
mov
inc
xchg
push
js
test
loope
imul
xor
lea
xchg
push
push
inc
jmp
movs
test
leave
sbb
mov
gs
sub
inc
jmp
mov
ficom
sub
call
and
mov
mov
iret
jmp
test
test
push
daa
test
rcr
dec
dec
jb
rol
xor
jnp
and
pop
xor
je
lahf
mov
and
xchg
push
add
add
push
ret
loop
mov
les
push
pop
imul
aam
fucom
mov
les
int
mov
pop
mov
daa
pop
or
sbb
adc
jle
call
retf
test
lods
cdq
sbb
cli
xchg
inc
jge
test
dec
mov
jg
adc
arpl
or
xor
xor
lods
cmp
pop
sbb
ins
jl
dec
inc
pop
mov
push
mov
movs
sbb
enter
mov
or
xchg
retf
jecxz
(bad)
rcr
pop
cwde
jb
inc
and
std
hlt
cmc
dec
jecxz
xchg
(bad)
test
dec
jl
mov
test
fbld
pop
cmp
in
dec
lods
ja
cdq
(bad)
ret
dec
in
adc
(bad)
lds
imul
retf
jns
push
mov
(bad)
add
shl
shr
fdivr
xor
out
sbb
dec
cmps
jns
lds
push
xor
(bad)
jmp
dec
and
xchg
and
cmp
sub
popa
setns
xchg
or
inc
test
fstp
xchg
sbb
call
sbb
inc
cmp
cmp
dec
and
sahf
cli
cwde
rep
(bad)
scas
or
dec
in
(bad)
les
push
data16
add
xlat
sbb
or
hlt
dec
fimul
je
popf
inc
mov
int
pop
js
mov
sbb
movs
mov
repnz
adc
test
(bad)
fnstsw
out
pop
cmps
repz
out
mov
cli
and
ins
pop
imul
adc
xor
js
popa
mov
fs
retf
mov
or
pop
mov
inc
jmp
out
adc
(bad)
dec
retf
pop
into
leave
in
popf
shr
sti
mov
push
cmp
cmps
add
and
sub
aam
mov
(bad)
push
add
add
stos
xchg
test
push
jbe
pop
scas
or
lods
push
jl
xor
pop
in
or
loope
aaa
pop
mov
dec
jb
xor
aaa
shl
pop
jle
jg
xor
or
loopne
ror
std
or
sar
repnz
push
mov
sahf
push
mov
test
imul
jg
mov
cdq
imul
out
sbb
add
repnz
(bad)
push
inc
std
popf
out
or
jnp
pushf
and
pushf
js
outs
int3
sbb
lods
fs
scas
ja
or
adc
mov
mov
cdq
call
push
dec
addr16
push
mov
icebp
idiv
in
or
sub
mov
imul
mov
xchg
inc
jecxz
xchg
les
in
fwait
sbb
pusha
fsubr
inc
cmp
into
xchg
div
out
ins
shl
sub
daa
cld
or
ror
cld
cmp
addr16
inc
nop
lea
xor
inc
lock
xor
mov
stos
out
jmp
ror
mov
(bad)
adc
fbstp
ficom
jge
mov
aam
cs
pop
in
movs
sbb
pop
arpl
pop
ret
mov
out
add
int3
popf
outs
mov
(bad)
dec
add
retf
push
pop
loope
in
dec
mov
mov
cmp
mov
mov
cdq
jb
jns
inc
retf
dec
lds
ret
xor
cmps
push
stos
fidiv
sbb
out
in
push
sbb
sbb
stos
shl
ins
pop
mov
pusha
mov
xor
and
es
xor
rcr
scas
test
jl
xor
jecxz
cwde
nop
cmp
add
dec
fadd
cmps
outs
push
xchg
lock
push
adc
sub
mov
dec
jns
xlat
push
jecxz
push
addr16
adc
adc
jae
xchg
pop
push
xchg
push
cwde
test
aas
mov
sbb
xchg
shl
push
xor
js
or
fsub
fmul
sub
cmp
ja
icebp
call
xchg
pop
fnstcw
or
add
arpl
jne
sub
add
push
outs
sti
scas
adc
lods
int3
jl
jg
idiv
js
scas
xor
or
clc
mov
inc
ret
inc
adc
jg
or
fdiv
outs
icebp
sbb
js
loop
mov
push
fucomip
cmp
ficom
xlat
bound
aam
pusha
push
test
jg
fwait
test
jno
pop
imul
and
and
outs
loope
das
(bad)
jno
lea
fs
mov
mov
je
and
out
jp
movs
call
je
outs
xchg
sub
cmp
jnp
xchg
cs
out
adc
pop
mov
popa
pop
dec
btr
and
imul
add
inc
jo
pop
mov
test
dec
shl
adc
and
les
enter
rcr
pop
shr
fsubr
dec
popf
in
(bad)
adc
dec
cwde
(bad)
int3
pushf
adc
mov
mov
das
mov
icebp
mov
mov
data16
adc
icebp
rcr
xchg
not
mov
fimul
add
pop
std
inc
sbb
inc
idiv
pusha
push
retf
adc
jb
(bad)
mov
call
pop
lock
jle
mov
add
in
shld
or
sub
int3
int
cvtpi2ps
out
pop
std
shl
fs
(bad)
cmp
mov
push
sub
loopne
mov
sub
jae
push
aam
shr
je
cmp
test
add
mov
add
sub
(bad)
data16
mov
mov
inc
sbb
and
daa
add
fwait
and
inc
xchg
(bad)
in
ss
cli
out
inc
add
out
xchg
pop
jb
aas
movs
les
in
fisub
adc
mov
repz
xor
scas
test
rol
add
push
sub
dec
jo
add
inc
xor
jmp
dec
js
shr
sbb
fisubr
push
push
sbb
mov
mov
push
push
not
xor
mov
pop
test
add
es
sub
shl
cmp
mov
loope
jb
push
mov
cmps
add
or
sub
lods
loop
fs
or
adc
push
cs
sub
push
loope
xchg
mov
mov
xchg
inc
inc
mul
xchg
pop
mov
pusha
jbe
dec
jmp
push
test
push
dec
call
scas
ret
stos
adc
int3
push
cwde
add
push
cwde
adc
and
loopne
outs
cmp
cmp
popa
jnp
pop
xchg
xchg
loopne
leave
ds
jp
outs
(bad)
jo
(bad)
xor
push
dec
sub
mov
lahf
into
int3
xor
rcr
xchg
fidivr
or
arpl
xchg
mov
aad
and
push
ins
adc
lea
add
push
rcl
mov
fstp
pop
shr
js
xchg
ret
retf
call
int3
jle
adc
es
test
movs
cmps
ret
or
les
test
mov
(bad)
cmp
mov
out
inc
inc
fisttp
xchg
jnp
pop
lods
mov
inc
stos
(bad)
and
pop
rcr
cli
dec
or
inc
fs
add
mov
dec
loopne
imul
iret
cdq
xor
mov
repz
jg
lods
push
dec
jnp
stos
mov
mov
xor
jp
iret
into
mov
cs
fs
lods
push
arpl
cs
xor
in
cmp
adc
sbb
out
imul
push
cli
cmp
scas
outs
iret
dec
repz
lods
rcl
jns
jmp
and
cmp
iret
or
xchg
in
xchg
test
lahf
mov
ins
repz
pop
(bad)
hlt
lds
jle
sar
mov
fcos
fistp
call
(bad)
out
ja
add
cmp
imul
sbb
cmps
movs
mov
mov
sbb
out
jge
scas
je
test
jno
xor
je
aas
(bad)
fdivp
jae
lock
fdiv
cmp
and
(bad)
inc
test
aaa
fldenv
adc
in
inc
and
das
fs
lods
popf
pop
in
cdq
cdq
mov
mov
neg
adc
je
mov
scas
inc
jmp
mov
or
punpcklbw
or
movs
jecxz
leave
sub
lock
xchg
jecxz
fisubr
xor
in
sbb
mov
cmp
xor
(bad)
daa
mov
clc
jno
inc
cmp
xor
jmp
dec
mov
or
shr
adc
add
es
jno
mov
xlat
test
xchg
cmp
pop
icebp
pop
and
or
imul
mov
sub
jl
push
adc
test
sbb
or
aaa
jbe
jb
or
inc
xor
and
push
int
or
push
push
test
jge
push
clc
jb
fild
mov
je
or
dec
sub
add
pushf
inc
imul
(bad)
adc
daa
adc
into
add
daa
sbb
mov
jg
pop
or
sbb
cmp
pop
lods
imul
stc
or
pop
mov
adc
mov
or
inc
mov
xchg
pop
mov
out
fld
ja
inc
sti
mov
or
jge
cdq
out
xor
and
pop
and
and
adc
pop
and
fdivr
dec
inc
dec
shl
pop
imul
mov
fwait
mov
xlat
test
loopne
adc
mov
xchg
dec
add
(bad)
dec
cmp
sub
call
sub
mov
xchg
ds
aas
(bad)
mov
jecxz
cld
fstp
test
cmps
mov
js
jmp
sub
sub
fist
in
push
and
xor
jo
cmps
leave
sbb
mov
movs
add
xor
cld
ror
mov
jnp
je
or
and
sub
outs
mov
shl
cs
popa
ds
mov
pop
pushf
cmp
jl
aad
test
loop
leave
(bad)
cmp
dec
lods
dec
xchg
ins
rol
inc
scas
sub
lods
aaa
and
test
sbb
ja
xor
outs
jmp
sbb
in
or
or
stos
cli
fwait
out
and
fst
mov
dec
push
cmps
push
xor
xchg
icebp
jmp
pop
test
cwde
lea
out
dec
mov
mov
push
popf
jbe
into
xor
daa
jb
mov
aam
add
and
xchg
jmp
out
out
add
inc
add
retf
js
and
xor
test
add
jl
or
mov
xchg
fmul
cdq
(bad)
lods
pushf
push
sbb
fsubr
into
fsub
jno
daa
int3
ret
mov
(bad)
mov
loope
(bad)
lods
outs
push
and
sbb
push
dec
out
lea
jmp
xchg
push
mul
imul
dec
cmp
cwde
js
ror
jbe
call
les
jg
fs
sti
push
aas
xchg
ins
jp
pop
dec
movs
mov
pop
xchg
imul
add
inc
pop
or
iret
cs
add
test
into
sub
sub
xor
test
jmp
mov
and
jmp
sbb
adc
and
or
lods
cmp
shl
mov
sti
enter
and
inc
in
push
pop
or
addr16
push
mov
fst
xchg
or
pop
ret
sub
in
mov
js
cwde
outs
jecxz
test
sbb
data16
jne
inc
fld
or
xlat
push
cs
pop
sahf
std
fstp
xchg
icebp
cli
add
test
pop
(bad)
test
aas
push
mov
mov
xchg
ss
sbb
xchg
pop
mov
and
mov
int
jae
mov
test
ds
xor
dec
and
lods
mov
sahf
(bad)
fnsave
mov
push
aam
adc
mov
retf
xor
pop
repnz
pop
sbb
mov
iret
inc
inc
clc
jp
xor
adc
lods
pop
xchg
mov
mov
repz
dec
add
aas
and
mov
add
pop
iret
inc
fmul
jno
stc
mov
pop
mov
in
or
sbb
int3
adc
xchg
and
movs
add
add
pusha
fsubr
push
call
push
cdq
dec
pop
inc
mov
cmp
cwde
(bad)
add
(bad)
movs
hlt
mov
ja
push
cmp
popa
jmp
xlat
mov
arpl
ucomiss
das
cmp
mov
mov
mov
aas
imul
mov
mov
cld
mov
and
add
fst
lea
outs
dec
adc
out
push
stos
fdiv
fwait
dec
arpl
sahf
(bad)
fdivr
sbb
jp
outs
sbb
hlt
push
adc
push
push
jne
push
and
adc
add
jecxz
pop
idiv
sub
les
ins
jnp
add
imul
into
ret
mov
pop
jmp
push
ficomp
inc
data16
xor
add
pop
aas
stos
mov
or
push
and
cdq
inc
retf
out
xor
sbb
push
jge
enter
inc
push
inc
pushf
push
sbb
mov
(bad)
jb
sub
sub
inc
shl
fidiv
loop
call
std
xor
mov
mov
in
dec
loopne
idiv
cmp
mov
inc
icebp
fstp
push
mov
mul
sub
jle
sbb
imul
out
push
mov
adc
stos
jmp
(bad)
add
and
sbb
push
idiv
(bad)
jp
in
adc
lock
imul
int3
or
pop
(bad)
xchg
stos
mov
jp
inc
mov
fdiv
cmp
xchg
push
push
and
jno
mov
mov
mov
adc
push
push
loope
sub
dec
mov
xor
add
movs
int3
adc
mov
daa
call
out
add
iret
dec
lds
or
or
dec
call
xchg
or
das
mov
add
in
push
call
in
dec
adc
cld
mov
mov
call
dec
(bad)
lods
mov
inc
add
pop
mov
cmc
out
push
mov
call
push
jg
xchg
mov
cmp
inc
pop
and
push
and
outs
dec
mov
shl
or
outs
add
adc
lods
push
mov
shr
inc
fstp
fmul
add
mov
and
pop
and
jge
xchg
inc
out
std
jmp
adc
retf
cld
or
sbb
sbb
jl
ficom
xchg
repnz
pop
mov
lods
adc
adc
je
stos
add
(bad)
(bad)
xor
stc
ins
jnp
movs
xor
cmp
retf
call
(bad)
xor
loope
and
enter
jp
mov
mov
fdivr
and
in
inc
sbb
ins
mov
in
icebp
ss
mov
jne
and
jecxz
in
es
stos
push
ins
cmps
bnd
jns
sub
ror
(bad)
sub
or
mov
sbb
xor
jecxz
in
ds
popa
inc
add
adc
aad
lahf
imul
pop
sbb
js
dec
test
mov
ret
les
adc
adc
addr16
test
js
into
mov
aas
in
sub
stos
xchg
(bad)
call
dec
cmp
je
cmps
in
sub
xchg
rcr
push
and
mov
sahf
xchg
adc
mul
dec
scas
and
adc
stc
iret
(bad)
add
add
jns
cwde
ins
popf
cli
inc
pop
mov
cmp
out
or
jmp
xchg
shl
pop
mov
fmul
sbb
inc
mov
(bad)
es
fsub
icebp
mov
stc
les
xor
and
xor
mov
fmulp
add
scas
loopne
mov
pop
arpl
cli
(bad)
cmp
js
xor
xor
add
inc
pop
jns
div
arpl
out
int
pop
sbb
ret
(bad)
sbb
mov
call
mov
sbb
iret
aam
outs
(bad)
fs
inc
mov
cmp
push
mov
dec
mov
or
idiv
inc
inc
mov
add
lds
add
push
std
scas
shr
cs
mov
xor
std
in
xchg
mov
and
cdq
sub
cvtps2pi
inc
lods
push
add
or
pop
and
lock
mov
push
xchg
data16
into
rdtsc
xor
push
jp
inc
cmps
add
jb
xor
mov
lods
push
into
sahf
mov
xor
xchg
mov
retf
jno
inc
cmp
imul
and
mov
(bad)
gs
xchg
out
(bad)
push
sti
lahf
aad
fcomp
retf
push
hlt
cmc
push
and
stos
mov
fidivr
dec
or
push
push
mov
or
loop
push
push
jp
sub
mov
cmp
xor
leave
push
push
gs
mov
mov
add
sbb
scas
inc
daa
jmp
mov
mov
lea
in
das
push
clc
out
(bad)
call
pop
push
xchg
addr16
fimul
xor
sbb
scas
cdq
xor
popa
ins
xor
bound
(bad)
xor
rol
ret
sbb
ror
sbb
rcr
daa
neg
mov
out
pop
scas
adc
jg
inc
std
fs
stc
dec
adc
mov
int
int
jecxz
pusha
pop
jnp
shl
push
mov
jl
sbb
and
icebp
dec
lahf
pusha
add
es
or
retf
call
pusha
xchg
or
mov
mov
in
jno
jge
aam
cdq
test
jg
mov
dec
arpl
stos
push
xchg
fld
pop
mov
cmp
xchg
sbb
ret
mov
push
stos
sti
fild
jecxz
add
pop
cmp
xor
lahf
xchg
push
cmp
cmp
jg
js
shl
pop
ret
shl
pop
add
or
mov
nop
sbb
ret
cli
inc
sub
and
mov
call
and
stos
add
sbb
pop
aas
scas
push
mov
ret
sbb
xchg
or
lods
push
les
and
mov
inc
adc
jmp
daa
lods
test
push
and
test
pop
mov
push
addr16
pop
sbb
sub
fsubr
push
pop
aad
or
dec
sub
retf
xlat
popa
xchg
xor
pop
loopne
std
out
lods
inc
cmp
data16
pop
cmp
mov
aam
and
cdq
or
lds
ret
enter
(bad)
cmp
cmps
ja
xchg
iret
mov
mov
push
rol
cmps
xchg
sub
repnz
push
in
dec
mov
imul
cmp
pop
pop
or
jmp
jbe
pop
cmp
ds
fbld
cmp
ja
arpl
fwait
ins
or
cmp
and
pop
pop
je
lods
ins
test
imul
inc
jo
jno
ja
dec
popa
(bad)
gs
and
or
inc
xlat
mov
test
push
dec
(bad)
test
add
sti
loop
in
pop
fsubr
cdq
xlat
xchg
pop
js
inc
xor
scas
or
repnz
xchg
xchg
cmp
mov
push
popf
(bad)
or
lahf
repnz
mov
jo
imul
push
enter
or
cld
arpl
es
xchg
popa
jmp
inc
xor
rol
jg
into
mov
push
es
add
add
jbe
es
adc
ss
loopne
setp
cs
ja
call
out
mov
jns
aas
jnp
or
fisttp
mov
icebp
jb
adc
dec
hlt
pop
jge
gs
stos
adc
popa
mov
or
lahf
adc
cmp
sti
jns
in
mov
jle
in
shl
sbb
ds
cmp
jmp
xchg
xchg
sar
add
stc
xchg
test
loop
les
pushf
jecxz
xchg
(bad)
mov
in
and
cmps
ror
lea
jno
sbb
sub
iret
pop
or
fwait
inc
push
pop
adc
and
pop
inc
data16
in
or
(bad)
call
in
push
iret
mov
fwait
sahf
stos
xor
jae
out
inc
jge
inc
dec
movs
rcl
or
ficom
cmovb
inc
or
fsub
mov
mov
xchg
pop
out
scas
cli
cmps
pushf
add
or
cmp
clc
ficom
not
in
or
(bad)
mul
and
imul
sub
sahf
sbb
or
aam
je
mov
aas
stc
fldenv
jns
jle
cmc
and
sahf
into
shl
cmp
xchg
and
xchg
jl
xchg
fld
cmp
imul
fcomip
pop
jl
in
outs
jg
(bad)
cmp
pushf
imul
adc
adc
dec
sbb
add
inc
loop
xchg
sbb
fadd
cld
pop
mov
outs
mov
ja
or
xchg
mov
hlt
pop
shl
ja
iret
sub
inc
in
iret
lea
and
movs
shl
push
and
or
sub
push
xchg
sti
add
int3
mov
ins
int
(bad)
jecxz
test
cmp
and
add
iret
loopne
push
iret
lahf
out
xchg
add
jp
ficomp
xchg
dec
ficomp
stos
push
repnz
xor
out
or
and
dec
cmps
and
and
push
fwait
addr16
(bad)
push
inc
and
shl
jle
push
(bad)
xor
sub
xor
les
dec
xchg
inc
dec
lahf
seta
cmp
or
lahf
mov
mov
cmp
ins
xchg
sub
push
(bad)
push
ret
jmp
mov
push
clc
movs
imul
pushf
cmc
adc
rcr
aam
cmp
repnz
push
add
mov
sbb
xchg
add
or
ja
inc
jecxz
pop
cmp
cmc
and
imul
add
cld
fidiv
sbb
mov
inc
lds
xchg
jmp
mov
daa
xor
adc
cmp
inc
dec
or
xor
jns
or
test
xchg
jge
cmp
ret
mov
adc
xchg
loopne
pusha
pop
lods
mov
ror
mov
pop
in
mov
jb
cmps
stc
daa
jns
scas
jnp
enter
je
xor
jecxz
test
and
mov
adc
mov
sbb
mov
pop
jbe
inc
pop
xor
push
xchg
sbb
xchg
mov
and
xor
repnz
mov
and
add
out
arpl
nop
popf
test
pop
int
jns
add
jmp
mov
pusha
adc
or
xchg
mov
(bad)
imul
push
sbb
jns
mov
call
mov
adc
xor
cmp
dec
loopne
mov
push
mov
inc
inc
popa
pop
adc
retf
stos
cmp
and
inc
(bad)
fld
sbb
(bad)
das
popf
mov
jg
test
shl
sub
fmul
rcr
loope
ja
sahf
xchg
sbb
add
scas
ins
fist
mov
stos
out
int3
gs
iret
popf
ror
into
sub
popa
rcl
and
xor
push
pop
cmp
pop
fwait
sub
test
sbb
fdivr
jg
addr16
or
jno
dec
pop
retf
test
and
lahf
fdivr
push
(bad)
outs
lods
lahf
cdq
push
adc
fistp
cld
adc
(bad)
rol
mov
popf
test
jmp
xchg
pop
ficomp
mov
scas
rcr
inc
dec
jno
fs
mov
aam
push
shl
inc
or
stos
xchg
jge
dec
in
ds
outs
push
pop
fdiv
pop
aas
xlat
lods
clc
int3
xchg
test
or
fsub
addr16
xchg
js
cmps
int
sbb
sub
jns
les
test
sub
repnz
jmp
ins
mov
xor
cld
in
inc
sahf
out
in
int
pop
or
jle
adc
sti
idiv
mov
fdiv
jl
jp
jl
cli
inc
popa
push
or
jecxz
test
mov
test
or
addr16
mov
int
sub
inc
ror
pop
stos
dec
pshufw
std
fild
(bad)
out
mov
adc
aaa
dec
jmp
mov
nop
not
ficom
and
and
xchg
adc
xchg
cld
or
cwde
(bad)
mov
aad
sub
daa
cmc
fwait
rol
adc
push
xor
(bad)
ror
xor
iret
cdq
in
sbb
sub
push
fldcw
jnp
popa
sub
jp
shl
jne
xor
jbe
lahf
xchg
aaa
cli
inc
xchg
adc
std
xchg
push
retf
es
fsub
jp
stc
pop
xor
mov
retf
das
mov
sbb
mov
aad
pop
popf
daa
mov
push
xor
xchg
and
(bad)
jmp
xchg
inc
sub
bound
inc
and
jne
adc
out
jae
mov
movs
sbb
add
mov
loope
pop
pop
shr
mov
pop
fstp
push
or
(bad)
mov
je
pop
sub
repz
pop
in
es
push
stc
hlt
mov
fidivr
shl
fldenv
xchg
sbb
push
xchg
xchg
xor
cmp
sbb
push
call
dec
or
xlat
test
dec
jge
xchg
push
ficom
loope
in
push
fidivr
pusha
stc
mov
cmps
icebp
push
adc
jae
pop
(bad)
inc
cld
popa
jb
sub
rol
arpl
(bad)
lods
mov
fwait
pop
adc
stos
ds
dec
add
jp
jns
in
(bad)
dec
imul
repz
daa
imul
es
fsub
dec
adc
cmp
loopne
daa
cmp
pop
jmp
cmp
adc
push
push
inc
div
pop
js
xchg
loope
mov
sar
test
jl
fdiv
ret
dec
ins
push
dec
dec
imul
mov
std
(bad)
adc
ins
adc
test
lea
mov
outs
cld
sub
vunpcklps
stos
pop
mov
mov
test
scas
xlat
mov
ja
(bad)
iret
jle
add
jmp
cli
cli
daa
add
cmp
mov
lea
xlat
or
cmp
and
in
cmp
and
inc
test
and
sub
ins
pop
ficomp
fs
sub
pop
sbb
enter
imul
repz
fsub
sbb
and
in
test
(bad)
addr16
mov
loop
sub
mov
push
xchg
sahf
xor
ret
mov
jp
inc
inc
aas
xlat
mov
pop
fild
pop
outs
loop
jnp
lods
in
xchg
lods
cmp
aaa
fnstcw
call
int
pop
sar
nop
pusha
cmps
lock
pushaw
int
xor
pushf
sbb
scas
mov
dec
call
jle
arpl
push
cli
pop
or
loopne
mov
push
aaa
fild
cmp
mov
jle
retf
lods
(bad)
jmp
mov
mov
sub
add
mov
sbb
(bad)
jae
or
in
or
cdq
std
cwde
push
inc
and
out
sti
(bad)
test
fmul
dec
and
sub
pop
and
test
cmps
and
inc
jns
cli
lea
jmp
(bad)
imul
arpl
or
jmp
jae
jo
shr
jl
pop
push
dec
ins
push
(bad)
push
add
fs
jnp
pop
fisubr
pop
loop
or
popf
cwde
in
mov
call
push
mov
pop
in
aad
ins
jecxz
addr16
aaa
inc
call
jns
aam
movs
rcr
pop
or
in
inc
mov
std
into
pop
adc
pop
(bad)
jbe
fwait
popa
daa
jno
test
cmc
jne
xchg
xchg
xchg
or
sbb
loopne
push
inc
pop
clc
loope
ins
aaa
in
dec
xor
mov
push
clc
lods
cwde
bound
cmp
outs
sahf
sbb
dec
loopne
in
retf
popa
push
pop
lock
push
in
add
cmps
data16
rcl
retf
and
push
xor
cmp
mov
jnp
cmp
fnstsw
icebp
dec
jge
pusha
lock
jle
pushf
outs
enter
ror
sub
ds
rcl
test
shl
or
mov
and
mov
inc
leave
stc
stos
jns
in
xchg
sub
test
shr
or
mov
xchg
aaa
jecxz
loop
call
imul
retf
loopne
or
mov
mov
adc
cwde
pop
mov
aaa
frstor
cwde
setnp
fwait
mov
mov
aas
mov
sbb
movs
cmps
out
aam
push
adc
jmp
adc
add
ror
and
out
(bad)
push
sbb
jl
lock
sub
push
ja
push
sti
jmp
call
xor
push
cmp
and
(bad)
push
mov
(bad)
sar
lods
ftst
xor
cmp
cmc
pop
out
cdq
aaa
(bad)
lds
scas
popa
inc
pop
xchg
push
push
add
cmp
mov
xchg
pop
sub
or
loopne
hlt
rcl
sbb
jg
push
mov
das
out
scas
pop
push
mov
(bad)
into
cs
cmp
add
mov
or
fcom
mov
movs
and
mov
pop
jmp
sti
pop
dec
nop
mov
pop
or
push
sbb
outs
adc
jnp
jmp
mov
ret
sahf
ja
(bad)
pop
ins
jno
leave
out
(bad)
cs
push
inc
(bad)
cmp
dec
and
sbb
mov
cli
jecxz
mov
adc
mov
jb
loop
jae
push
imul
cs
icebp
outs
and
repnz
mov
dec
fidivr
mov
pop
outs
mov
mov
jecxz
fimul
pop
mov
outs
shr
clc
jmp
or
ret
lahf
push
mov
fdiv
push
in
(bad)
es
call
sub
mov
outs
cs
xor
inc
rcr
mov
xchg
cmp
pop
mov
dec
sub
stc
push
push
lea
iret
xchg
jmp
or
pop
lods
pop
pop
test
push
xchg
adc
lock
mov
jns
jbe
mov
adc
inc
dec
adc
pop
xchg
(bad)
push
xchg
xchg
mov
mov
clc
jae
fwait
scas
test
mov
or
je
cmp
cmp
in
mov
mov
ret
add
xlat
mov
adc
xor
dec
outs
fild
ficom
adc
retf
jae
fdiv
jns
xchg
push
inc
movs
dec
mov
jno
scas
xchg
jg
cld
inc
jo
fbstp
push
push
scas
loopne
pop
pop
cmp
xor
movs
jge
imul
pop
mov
or
sbb
mov
int
add
sub
mov
inc
dec
cmp
fstp
push
add
shl
xchg
mov
arpl
sub
fs
outs
push
fwait
pop
lods
add
in
jmp
pop
cdq
pop
leave
dec
test
adc
xchg
gs
inc
mov
jo
dec
add
sbb
int
(bad)
shl
mov
mov
ins
jo
cwde
sti
push
inc
mov
inc
iret
sti
sbb
pop
mov
xor
inc
jnp
retf
and
pop
ins
cmp
loop
es
inc
cmps
mov
stos
cli
sub
mov
(bad)
ret
dec
mov
mov
das
retf
cs
and
shl
stos
cmp
xor
sub
loop
adc
sub
and
cmc
pushf
pop
or
inc
jo
test
xchg
hlt
and
cdq
repnz
mov
adc
test
push
dec
or
fs
cmps
pusha
push
cmp
inc
and
imul
sti
xchg
and
jae
xor
clc
ficom
(bad)
push
test
leave
test
dec
(bad)
xor
sar
ret
add
jne
mov
adc
push
lds
mov
pop
outs
adc
lahf
int3
mov
pop
sti
popf
callw
mov
loopne
cmps
bnd
jnp
enter
xor
inc
inc
xor
bound
loopne
dec
inc
out
pop
arpl
pop
push
xor
push
cdq
inc
jbe
aaa
push
ins
ret
cmp
or
add
(bad)
leave
xchg
add
cmc
pop
adc
out
add
test
jge
repz
inc
dec
xchg
(bad)
push
ins
ss
inc
inc
pop
xchg
cmp
sub
lods
cmp
add
scas
xchg
lods
pop
not
leave
sahf
test
fisttp
mov
add
sub
mov
call
mov
pop
icebp
shl
push
ja
push
(bad)
icebp
xor
push
or
test
lods
lds
mov
or
int
adc
mov
mov
mov
je
sub
cmp
aas
movs
bound
loop
stos
mov
pop
push
in
ins
out
mov
inc
inc
xor
or
mov
shr
in
stos
inc
ficomp
cld
sub
adc
aas
sbb
outs
xor
jno
rol
or
dec
fbld
aad
aad
mov
inc
mov
push
ret
sub
test
aas
xchg
mov
jmp
fwait
inc
cwde
mov
add
cmp
jns
xchg
retf
ret
add
sbb
jae
jo
push
cld
pop
and
push
mov
adc
aad
inc
icebp
ret
stos
cmps
aaa
mov
add
or
movs
out
adc
nop
jecxz
outs
add
call
stos
mov
std
xchg
aaa
call
cmc
add
les
ds
pop
xor
xchg
scas
jo
mov
xchg
int3
add
or
into
jecxz
test
rcr
pushf
sti
lds
(bad)
inc
cs
mov
jae
mov
xchg
lahf
scas
das
ins
pop
push
stos
outs
push
(bad)
xchg
adc
arpl
jmp
pop
clc
sub
in
ret
bound
retf
pop
icebp
loop
xchg
inc
cwde
rcl
pop
loopne
push
shl
add
push
and
pop
sar
aam
fwait
pop
jo
mov
adc
aad
leave
xchg
cmp
lock
mov
push
adc
aad
pop
sbb
in
(bad)
mov
dec
and
int3
inc
xchg
shl
mov
mov
shl
and
sbb
popa
or
(bad)
pop
mov
lea
push
sub
inc
mov
hlt
cmp
retf
dec
mov
pop
cmp
rcl
fidiv
fldcw
jo
adc
inc
inc
into
and
xchg
and
std
das
scas
cmp
test
retf
inc
rcl
add
jl
js
pop
ret
jne
ror
sub
cli
(bad)
cmps
and
push
jbe
adc
adc
or
jmp
aaa
test
outs
adc
enter
iret
dec
push
data16
push
push
test
and
inc
mov
gs
pop
xchg
pushf
pop
jmp
lea
dec
push
jnp
cmp
in
nop
mov
jb
rcl
out
cmp
push
fistp
mov
movs
xchg
jmp
pop
mov
cld
add
mov
shr
stos
mov
out
jne
popa
je
nop
pop
aad
mov
pop
push
and
aas
loope
pop
(bad)
jl
mov
iret
push
imul
test
(bad)
pop
inc
outs
sbb
push
adc
out
xchg
mov
rol
cmps
pop
(bad)
xchg
xor
clc
test
sub
adc
(bad)
and
adc
dec
or
and
out
(bad)
pusha
fistp
(bad)
out
push
mov
xchg
scas
dec
ins
lds
jnp
or
cs
cli
(bad)
ficomp
cmps
out
ja
sub
jo
in
mov
adc
push
aaa
jae
enter
push
and
arpl
ds
mov
shr
sbb
leave
or
jns
push
sbb
mov
iret
and
cld
sbb
sub
pusha
dec
arpl
jns
adc
enter
xchg
add
pop
push
adc
into
scas
xor
jp
repnz
lods
fcomp
mov
sub
in
fiadd
fisttp
push
push
pop
ja
aaa
mov
fbld
xor
xor
fld
je
add
adc
cmp
aad
pop
mov
jmp
sbb
iret
pop
mov
push
(bad)
shl
rcl
fbld
call
jb
movs
ror
fs
push
mov
fwait
inc
(bad)
adc
fbld
es
jg
mov
test
icebp
add
jns
dec
shl
inc
pop
mov
fist
pop
xor
cmp
pop
adc
inc
div
dec
scas
mov
cmp
push
stos
cli
and
daa
jns
call
data16
push
xor
outs
inc
sub
pop
rcl
iret
cmps
xchg
xchg
sbb
iret
xor
cmps
pop
repz
sbb
(bad)
std
in
mov
(bad)
ins
cmp
out
and
mov
in
xlat
call
pop
repz
retf
adc
xor
mov
sbb
pop
mov
sar
mov
les
dec
jns
ret
into
or
retf
inc
xor
imul
ja
sub
popa
pop
add
pop
cmp
sbb
movs
int3
js
inc
(bad)
or
jle
mov
push
inc
or
push
push
xor
mov
ss
or
ss
aas
mov
sti
das
pop
pop
dec
cmp
push
xor
test
jns
mov
xchg
ja
inc
repz
inc
movs
lds
push
jecxz
nop
cld
sub
pusha
mov
dec
out
fadd
push
(bad)
idiv
jg
xor
xchg
ins
dec
shr
arpl
out
imul
call
pop
scas
push
in
ret
mov
(bad)
dec
out
or
dec
iret
pop
fisttp
adc
push
in
mov
xor
jle
jo
loopne
adc
std
mov
ret
sub
push
adc
cmp
daa
daa
lahf
pop
cmps
loopne
(bad)
lods
jne
pushf
push
imul
cmp
int3
fdivr
cmp
(bad)
cmp
cs
pop
out
in
scas
sub
mov
fdivr
and
pop
ja
(bad)
imul
rcr
fisttp
popf
jl
jge
xchg
sbb
sti
sbb
cmp
pusha
mov
lods
cmp
push
mov
xchg
push
ret
fnstcw
repz
sub
sbb
cmps
pop
cmp
dec
popf
test
outs
xchg
mov
add
inc
js
adc
mov
inc
push
clc
xor
cmp
out
inc
sub
retf
mov
fldl2e
dec
adc
push
mov
cmp
pop
shr
jg
xor
inc
leave
mov
call
push
mov
out
lds
add
sub
lahf
push
pop
mov
out
ret
sbb
push
add
mov
jge
dec
and
ds
dec
ins
clc
push
test
scas
dec
and
dec
call
imul
xor
cmp
jge
pop
fld
xchg
mov
pop
das
dec
out
mov
shl
pop
or
and
cmp
int3
daa
shl
pop
in
push
cmc
and
nop
lock
mov
in
mov
in
(bad)
out
pop
in
push
xchg
inc
ins
sbb
leave
iret
icebp
mov
(bad)
stc
into
out
mov
scas
fild
aas
mov
jle
pop
jne
push
mov
push
mov
rcl
and
sub
daa
sbb
les
adc
and
jb
data16
mov
push
into
sbb
aad
sti
dec
pop
outs
adc
jp
sbb
mul
jno
jle
mul
out
mov
mov
out
pop
jb
fstp
mov
cmps
xchg
cmp
jle
ja
jle
cmp
scas
mov
ins
pop
and
mov
cmp
(bad)
add
xor
fsubr
inc
mov
mov
retf
imul
hlt
into
push
gs
movs
jmp
sbb
mov
lods
jo
lods
push
dec
push
sti
push
retf
pop
cmps
jle
sub
cld
gs
(bad)
jg
shr
inc
jl
cmp
std
popa
push
repnz
int3
add
and
fdivrp
jp
xlat
data16
and
sbb
shl
dec
push
add
cmp
mov
xchg
xor
inc
imul
dec
dec
inc
test
loope
jecxz
push
cmps
and
pop
cmp
sbb
pop
popa
gs
test
adc
test
(bad)
scas
cmp
xchg
xor
inc
cwde
aas
xchg
(bad)
and
mov
and
ret
addr16
inc
call
fmul
sub
shr
fs
ins
dec
or
sbb
lds
into
mov
pop
dec
sub
out
mov
push
inc
lods
js
not
repnz
fwait
sbb
jl
sbb
call
out
scas
xchg
outs
mov
mov
xchg
bound
lea
jns
mov
sbb
in
inc
jle
fisub
jb
cmps
mov
test
enter
test
xchg
mov
xchg
retf
or
neg
jmp
retf
xchg
sahf
and
mov
(bad)
rol
ficom
stos
mov
push
inc
push
cmp
mov
and
(bad)
jmp
lahf
fist
fs
sbb
cmp
cmps
adc
and
sub
sub
mov
cmp
xor
jo
jl
std
ret
xor
sahf
sbb
add
int3
les
call
cmp
jl
jne
mov
mov
push
add
xchg
push
adc
jl
push
fdiv
sbb
adc
cld
popf
xor
or
pop
jns
jmp
mov
call
dec
xor
(bad)
sub
xor
sahf
out
dec
push
scas
inc
(bad)
jl
cs
mov
cmp
bound
mov
mov
imul
jnp
cmp
shr
push
fcmovbe
popf
add
push
fisttp
out
dec
rcl
les
push
xor
mov
adc
push
cdq
pusha
movs
mov
inc
mov
jo
xchg
stc
mov
mov
jmp
das
inc
hlt
jbe
adc
imul
and
imul
(bad)
mov
out
sti
ficom
and
jb
pop
gs
aad
dec
lahf
xchg
(bad)
or
mov
fs
inc
adc
clc
or
adc
pop
xchg
mov
cs
test
test
sar
test
fld
dec
push
fdivr
pop
fsubr
sub
jmp
xor
and
pusha
add
pop
cmovo
ins
mov
mov
xchg
pop
jl
mov
xor
xor
sub
repnz
call
ja
xor
push
mov
add
mov
icebp
fucomp
sub
push
mov
pop
not
ins
pop
mov
mov
out
fadd
shr
pop
daa
paddq
push
mov
lahf
mov
inc
int
and
inc
cwde
jbe
loopne
(bad)
cmps
or
hlt
push
jne
and
lea
mov
cdq
push
fstp
ins
push
cmp
mov
xor
clc
mov
mov
pop
mov
mov
es
pop
gs
sub
jae
mov
test
ret
arpl
jns
mov
or
call
ins
int
and
sbb
clc
pop
call
adc
fbld
jnp
sbb
and
or
loope
inc
(bad)
std
lods
push
mov
inc
mov
xchg
lods
dec
sbb
jnp
test
rcr
jae
mov
repz
fldcw
call
dec
xor
out
inc
mov
(bad)
outs
fiadd
dec
push
sub
cmps
pop
push
xchg
in
repz
push
into
bound
mov
(bad)
sub
popa
int
mov
in
mov
jae
push
sbb
push
xchg
xor
(bad)
mov
pop
adc
adc
int
sbb
aad
push
adc
adc
push
mov
jmp
enter
es
out
icebp
mov
(bad)
mov
ds
(bad)
fcomp
cmps
and
xchg
mov
ja
out
in
mov
push
push
outs
and
adc
mov
pushf
cmp
retf
shl
adc
inc
ins
inc
mov
push
lahf
and
mov
call
pop
shl
imul
sahf
jne
adc
cld
movs
pop
sub
pop
sbb
popa
out
mov
not
and
cmp
cwde
adc
dec
or
test
push
icebp
push
add
inc
shl
or
lods
mov
inc
(bad)
xchg
xor
js
ins
jnp
jl
sahf
sub
inc
cwde
ret
pop
push
call
mov
or
popf
outs
pushf
retf
movs
xchg
outs
addr16
sar
sub
scas
out
cmc
pop
stos
fisttp
movs
ins
je
adc
xor
xor
sub
adc
adc
or
int3
nop
pushw
xor
inc
jno
test
ins
inc
test
sbb
stc
sub
sub
cmc
test
sub
adc
call
out
pop
cmp
mov
mov
adc
add
xlat
cmp
mov
push
jge
fld1
hlt
dec
xor
into
xor
lock
test
pusha
jp
jne
imul
sub
es
movs
scas
and
xchg
pusha
xchg
mov
and
data16
jnp
jp
cmp
pop
repz
jg
xor
out
adc
(bad)
mov
adc
loop
cmp
sbb
into
sar
dec
int3
aaa
(bad)
pop
or
aaa
push
scas
leave
scas
jno
movs
aam
cmps
aaa
rcr
sbb
pop
mov
out
test
adc
inc
jnp
iret
sbb
mov
jae
inc
enter
push
push
adc
cmp
clc
adc
push
ret
es
int
mov
lods
cmps
pop
xor
pop
sbb
jmp
jo
in
inc
adc
fmul
ja
stos
das
mov
(bad)
adc
lds
stos
adc
push
dec
xchg
mov
add
cmp
pop
or
adc
dec
(bad)
pop
jne
xor
mov
in
pop
shl
push
sub
retf
pop
add
aaa
das
fisub
push
xor
test
cmc
mov
push
sbb
into
sub
in
xor
fisub
push
cs
icebp
mov
push
ins
xchg
fistp
xlat
mov
scas
inc
pop
sahf
xor
inc
add
(bad)
add
and
stos
pop
(bad)
push
push
out
icebp
pop
(bad)
mov
add
cli
outs
addr16
imul
test
or
mov
push
cmp
pop
inc
adc
xchg
sub
loop
pop
sub
popf
je
push
pop
int
sbb
loopne
(bad)
mov
les
mov
ss
(bad)
out
cmp
pop
in
ficom
addr16
popf
jbe
fwait
or
sub
sub
sub
lock
add
call
mov
push
add
inc
mov
lods
je
sub
sub
mov
retf
mov
add
mov
icebp
jge
pop
jbe
xchg
imul
xchg
mov
pop
and
mov
push
lods
sub
nop
cdq
mov
das
fbstp
sahf
sub
ficom
push
std
fisubr
stos
push
add
data16
popa
adc
cmp
push
(bad)
ins
push
clc
cmc
sub
mov
shr
or
(bad)
stos
and
pop
dec
std
xchg
je
mov
sbb
sbb
out
jae
in
mov
and
ficom
pop
hlt
add
(bad)
ffree
push
test
test
mov
inc
mov
jle
test
call
jae
push
inc
inc
mov
and
xchg
out
jae
popa
loop
cmp
out
jns
push
xchg
das
ds
add
mov
add
js
or
imul
adc
jmp
sbb
into
arpl
mov
mov
sub
xor
popf
add
fcomi
add
ds
mov
cli
push
xchg
imul
dec
pop
or
inc
and
cmps
or
push
dec
out
add
xor
lds
inc
loope
sbb
adc
sub
dec
dec
aas
ins
sub
jae
loop
div
lahf
jp
jno
mov
push
or
xor
xchg
aas
out
add
add
add
mov
iret
and
mov
pop
add
scas
jg
outs
(bad)
jge
ins
cwde
stos
rcl
pop
push
mov
jbe
inc
stos
imul
inc
shr
dec
mov
daa
mov
add
dec
test
pop
jo
push
inc
push
popf
arpl
pop
and
js
and
add
ret
stos
mov
sbb
loop
aam
bound
icebp
sub
mov
rcr
mov
stos
push
(bad)
and
or
sbb
pop
movs
sub
call
jl
aad
fimul
or
jl
icebp
dec
mov
into
cmps
out
fld
adc
stos
add
mov
push
scas
inc
cmp
fs
pop
mov
push
sbb
mov
inc
adc
mov
sbb
or
push
es
inc
and
test
out
xchg
pop
repz
and
mov
and
xor
fdivr
xor
call
addr16
mov
test
mov
push
(bad)
shl
not
(bad)
cmp
pop
out
iret
push
jp
adc
mov
dec
mov
stos
bnd
push
ss
push
and
adc
jmp
icebp
ror
loop
seto
ret
pop
ss
sahf
pop
fisttp
or
add
mov
dec
cld
sub
into
loopne
xor
lock
out
daa
fmulp
aad
push
stos
mov
call
xchg
xor
popf
jle
sub
lods
aad
out
xor
pop
cwde
fwait
sub
xchg
xchg
jae
stos
cmc
inc
push
mov
pop
push
loope
jne
inc
popa
cmc
push
cs
jo
cmps
scas
add
inc
and
imul
push
mov
int
push
fldcw
cmp
xor
push
pusha
(bad)
ficom
dec
mov
out
ficom
imul
inc
adc
xor
mov
aaa
fdiv
xchg
ins
nop
loop
mov
outs
hlt
jae
xlat
(bad)
pop
push
bound
(bad)
std
(bad)
push
in
jp
mov
and
adc
adc
xchg
jno
sbb
push
jl
mov
jge
adc
test
ret
int
shl
es
push
fadd
xchg
outs
inc
lahf
cmc
aad
xchg
loop
leave
jmp
add
in
lahf
lods
xchg
loope
dec
fisttp
das
or
(bad)
stos
add
sub
(bad)
fsubp
mov
jmp
mov
dec
movs
int3
adc
shl
jmp
(bad)
ror
dec
test
pusha
sub
fnstsw
retf
push
mov
repnz
hlt
jb
mov
hlt
pop
test
outs
hlt
dec
push
cmp
(bad)
enter
mov
cdq
cmp
clc
pop
jg
cwde
hlt
mov
in
retf
mov
(bad)
xchg
mov
adc
mov
inc
and
push
shr
and
lods
(bad)
jo
sbb
(bad)
push
(bad)
or
scas
nop
retf
xchg
mov
mov
aaa
mov
dec
dec
mov
and
addr16
iret
mov
xor
and
hlt
pop
mov
cmc
or
and
add
inc
fcmovbe
scas
pop
sub
(bad)
ror
int
loop
je
loopne
mov
inc
add
dec
jno
push
lods
popf
cmp
inc
dec
stc
cdq
das
jmp
test
mov
pop
test
or
(bad)
mov
pop
ins
dec
cmp
icebp
outs
ficomp
pop
sti
stc
mov
int3
pop
or
mov
arpl
inc
icebp
mov
cmp
std
jbe
mov
sahf
bound
loopne
inc
icebp
pop
cmp
pop
dec
imul
ins
xor
mov
add
push
repnz
adc
mov
fsubr
mov
xchg
sub
xchg
or
inc
sub
sub
jo
cmc
shl
sub
jle
push
and
add
push
push
push
jb
mov
ss
(bad)
out
jnp
ss
pop
sub
fstp
rcl
push
mov
inc
or
adc
cmp
jp
mov
xchg
lea
push
cmps
test
je
in
add
and
add
(bad)
adc
xor
stc
cmps
mov
fdiv
iret
pop
push
mov
enter
mov
add
imul
mov
es
stc
push
ja
sbb
adc
mov
or
fiadd
and
and
aad
add
jg
sub
or
mov
mov
mov
inc
push
push
in
xchg
es
and
mov
dec
iret
inc
call
stos
cmp
jmp
mov
in
sbb
push
xor
jae
popf
test
xor
retf
(bad)
jno
into
pop
and
test
inc
out
jmp
cli
ins
or
xor
jge
sbb
dec
or
(bad)
loope
loop
movs
jl
icebp
sbb
fadd
jl
in
ret
je
jmp
std
cdq
pop
mov
sahf
inc
std
sti
and
(bad)
jp
mov
push
popf
pop
repnz
xchg
and
jae
dec
or
in
int3
cld
xchg
adc
aas
fdiv
mov
nop
popa
fsub
lds
shr
xor
mov
jns
push
and
int3
jle
loop
fs
jnp
cdq
bound
mov
fwait
add
das
push
mov
xor
add
mov
imul
lock
add
movs
call
aas
shr
scas
pop
xchg
in
test
leave
push
cmp
stos
adc
mov
cld
push
pop
cdq
aaa
es
sar
xchg
test
fwait
cdq
cli
rol
pop
add
ss
call
push
and
in
push
and
mov
rcr
adc
xchg
ss
sbb
and
push
mov
sbb
out
xchg
adc
fcom
xor
fwait
or
mov
mov
daa
push
sub
push
dec
stos
sub
movs
dec
mov
jp
mov
imul
pop
pop
lea
das
inc
pop
mov
fwait
push
mov
dec
or
xchg
and
or
mov
add
icebp
inc
dec
push
xor
mov
push
scas
cmc
scas
xor
xor
jg
inc
sbb
or
(bad)
and
call
in
pop
adc
jl
cmp
or
or
daa
outs
push
das
std
add
adc
push
cmp
ds
xor
jp
push
out
xlat
pop
int
mov
xlat
push
mov
pushf
not
push
fsub
xchg
push
test
sub
sti
cmp
jmp
mov
fwait
(bad)
out
fimul
adc
je
jbe
loopne
fmul
aas
aad
sbb
lock
jmp
xchg
pop
repz
leave
popa
fcomip
sbb
out
mov
loopne
sub
sub
sbb
or
jno
adc
aad
ja
arpl
popa
inc
sets
pop
imul
or
cmp
cmp
movs
or
push
push
xor
loope
pusha
repz
mov
or
xchg
jb
mov
(bad)
adc
or
mov
std
ds
iret
sub
xchg
cmp
in
enter
sbb
jmp
mov
add
leave
mov
shl
(bad)
arpl
imul
push
inc
push
mov
fistp
lods
add
(bad)
out
inc
sbb
in
push
mov
fs
inc
imul
jbe
xor
sub
mov
out
inc
adc
mov
int
(bad)
clc
dec
push
sar
into
pop
rol
dec
pop
outs
jmp
std
or
repz
icebp
push
repnz
cmp
sub
xor
movs
jne
cmp
int
xor
cmp
sub
imul
mov
leave
pop
inc
test
imul
sub
push
push
shr
std
jmp
mov
jmp
scas
lds
mov
retf
push
loop
push
or
add
int3
xchg
xchg
push
ret
jg
xor
scas
inc
cmps
aad
dec
cmps
retf
ja
sahf
mov
adc
in
adc
and
test
fwait
retf
or
(bad)
(bad)
pop
aad
ret
jo
out
adc
push
ret
loopne
lock
int
popa
mov
sub
addr16
scas
outs
xchg
adc
jne
inc
stc
push
nop
ja
ret
ror
or
xchg
push
cli
cmp
inc
das
(bad)
outs
jl
cmp
jno
jmp
pop
test
fbstp
xchg
push
jbe
aas
lods
das
stos
push
xchg
test
pop
xchg
xchg
mov
shl
lds
int
test
ret
xor
xor
mov
fcomp
aad
or
mov
mov
jns
daa
idiv
xor
outs
dec
fisub
pop
xchg
aaa
mul
inc
pop
fnstsw
retf
es
mov
xor
test
inc
test
inc
jbe
out
mov
shr
ja
ins
stc
sbb
aam
ja
xlat
repnz
xchg
or
ins
or
mov
lods
out
xor
js
shr
nop
jp
call
clc
(bad)
cld
push
mov
adc
in
jge
shl
inc
xor
sub
gs
and
sub
mov
adc
test
enter
movs
cmp
lahf
aaa
cmc
pop
jns
hlt
sub
xchg
pop
pop
scas
push
leave
and
mov
push
mov
movs
or
cmc
push
shr
mov
cmp
mov
sahf
data16
hlt
jbe
jmp
dec
mov
call
shl
push
movs
add
sub
leave
outs
(bad)
or
push
push
push
test
call
outs
inc
in
arpl
mov
adc
int3
jp
fdiv
mov
je
clc
push
inc
aam
pop
adc
mov
aam
mov
pop
fisttp
mov
cmp
jns
(bad)
(bad)
stc
retf
jmp
jno
lock
inc
cwde
loopne
ins
fdiv
jb
dec
pop
mov
fisttp
push
popf
enter
sbb
in
pop
xor
das
scas
mov
stos
rcl
daa
push
push
adc
inc
inc
and
jns
add
retf
mov
fcomp
mov
push
mov
and
jmp
popf
sar
pop
fs
mov
and
leave
pop
test
sub
cmps
neg
sbb
test
dec
dec
ret
pop
lods
test
std
dec
mov
repz
sub
popa
push
mov
ins
das
outs
addr16
and
jle
mov
inc
int
push
imul
push
cs
aad
(bad)
(bad)
add
xchg
push
xlat
in
(bad)
pop
mov
dec
fwait
aad
or
add
xchg
ret
adc
push
sub
mov
arpl
cmp
movs
mov
push
cwde
xor
adc
test
ret
popf
xor
jnp
movs
ja
and
sbb
(bad)
mov
aaa
or
stos
jp
leave
stos
xor
je
test
test
pop
ror
inc
xchg
add
fbstp
push
jmp
hlt
stos
pop
xchg
or
mov
mov
add
or
lods
ret
mov
ins
leave
mov
(bad)
rol
dec
lock
hlt
cmps
stc
test
sub
dec
sbb
repnz
mov
adc
ja
cld
push
daa
in
inc
jp
retf
xchg
sbb
in
fcmovb
scas
pop
lds
xchg
dec
movs
rcl
clc
mov
mov
outs
iret
aam
gs
pop
test
lods
cmp
aad
jmp
pop
mov
hlt
xchg
push
mov
cdq
add
nop
adc
out
cmps
shl
iret
mov
lahf
fist
dec
lahf
sub
pop
pop
mov
sahf
in
je
test
mov
mov
test
movs
das
and
mov
js
mov
je
leave
fimul
cmp
(bad)
into
sahf
pop
ror
bound
out
push
mov
and
jbe
cdq
sbb
loope
ss
sahf
push
adc
push
dec
inc
int3
sti
xor
xchg
or
cwde
adc
add
xchg
mov
push
xchg
sbb
test
ror
push
sub
stos
add
jl
daa
inc
push
loope
sub
push
retf
jmp
xor
sbb
inc
lods
jmp
xlat
(bad)
dec
aam
inc
jge
lods
sbb
or
jge
std
cmp
test
call
sbb
mov
or
inc
dec
hlt
stos
nop
loope
int3
xor
out
cmp
fisttp
sbb
and
daa
and
xchg
js
push
lahf
and
stos
ss
les
pop
int3
ficom
shl
shr
adc
pop
das
sub
jge
xor
mov
dec
add
retf
jle
and
cmp
inc
or
jo
and
outs
rcl
in
add
ss
sub
fisub
pop
(bad)
push
ins
jmp
mov
push
push
sbb
mov
mov
xchg
fmul
das
cmp
or
jmp
cmps
adc
xor
and
add
loop
inc
xor
mov
ror
xor
sahf
adc
add
retf
lea
mov
scas
inc
mov
xchg
loop
(bad)
xchg
popa
clc
add
xchg
out
jecxz
repz
stos
inc
scas
int3
enter
imul
lods
dec
ret
xlat
add
dec
xchg
aaa
mov
out
sbb
test
movs
or
pop
fidiv
add
ret
mov
pop
inc
scas
stos
lahf
mov
addr16
mov
sub
lea
lahf
pusha
inc
mov
icebp
adc
je
cmc
sar
leave
jnp
xchg
enter
cmps
out
add
rol
inc
push
or
test
jns
rol
repnz
leave
fwait
mov
gs
push
pop
pop
mov
dec
sbb
mov
lahf
es
dec
mov
mov
pop
inc
dec
(bad)
js
jecxz
js
inc
loope
test
test
call
dec
mov
pop
loop
movs
sahf
sbb
cmp
iret
fiadd
mov
scas
cmp
ror
(bad)
int3
push
sbb
mov
or
or
sub
add
fdiv
test
and
sub
mov
outs
push
or
fs
push
and
(bad)
or
push
or
repz
repz
xchg
adc
dec
mov
xor
bound
pop
sbb
lock
adc
mov
sbb
add
pop
dec
arpl
test
fwait
pushf
mov
loop
outs
ficomp
push
sbb
or
mov
sub
inc
je
xor
adc
daa
cld
xchg
movs
sub
mov
je
cwde
xchg
mov
sub
sub
stos
jmp
sbb
cmc
mov
retf
mov
fadd
cvttps2pi
adc
mov
cwde
loope
add
hlt
leave
or
push
inc
xchg
retf
scas
push
ins
stos
popa
lahf
sub
arpl
lds
xchg
call
jmp
shl
pop
sub
xor
mov
lock
in
fiadd
xchg
repz
(bad)
(bad)
iret
test
out
adc
fwait
xor
(bad)
lahf
(bad)
sbb
dec
mov
inc
push
int3
mov
sbb
push
das
adc
cmp
or
mov
in
pusha
stc
cmps
push
call
(bad)
push
das
sub
and
mov
push
gs
ds
pop
retf
mov
sbb
aam
in
shl
ret
pop
xor
int3
mov
xor
fbstp
push
daa
ins
xor
sbb
pop
std
shl
scas
fistp
std
dec
mov
mov
push
std
jae
loop
(bad)
push
add
out
mov
cmp
leave
adc
jmp
mov
retf
gs
mov
pop
xchg
xchg
mov
pushf
stos
sub
or
add
in
cmp
addr16
inc
fisub
fiadd
push
cmp
jg
xchg
dec
into
imul
pop
ds
icebp
push
out
xor
mov
mov
cmp
int3
ror
fisubr
mov
push
adc
cli
pop
sbb
mov
aaa
ss
sub
int3
mov
ret
adc
inc
movs
ins
cld
jmp
cld
sbb
ds
inc
mov
fsubr
fisttp
xchg
(bad)
outs
fist
outs
mov
in
fdivrp
mov
fdiv
mov
cmp
dec
out
int3
aad
jbe
and
aas
adc
xor
xchg
pop
xchg
and
fisub
push
fcomi
fcmovnb
int
mov
push
pop
fwait
pop
inc
dec
cmp
add
out
inc
(bad)
movs
leave
sar
scas
jl
imul
and
xor
fs
rol
mov
rol
inc
icebp
lods
imul
pushf
dec
or
movs
out
or
call
push
cmp
sbb
adc
outs
addr16
cmc
gs
pop
jnp
push
stos
retf
fdivr
retf
mov
push
add
push
pop
jns
dec
setb
cld
fiadd
adc
adc
xor
outs
stc
push
push
arpl
fstp
retf
add
mov
ret
pop
cmp
fdiv
add
pop
or
adc
push
shr
push
pop
stos
xor
inc
into
dec
imul
imul
inc
jno
inc
push
je
adc
cmp
jl
sub
call
mov
arpl
push
hlt
mov
mov
pcmpgtd
pop
shr
xchg
je
mov
addr16
pop
mov
stos
pusha
inc
clc
(bad)
pop
mov
ret
xchg
leave
mov
and
push
mov
jo
cmp
push
xchg
add
or
jmp
jle
push
inc
shr
dec
jae
scas
pop
cmp
das
fnstsw
xor
lock
fisub
in
push
int
fistp
sbb
adc
cmp
sbb
jnp
push
push
adc
fcmovbe
pop
lods
mov
push
mov
je
lea
rol
xchg
sbb
stos
jp
sbb
cmp
cmp
hlt
retf
sub
inc
push
jbe
ss
or
jl
xor
or
(bad)
div
push
mov
out
jl
es
loop
out
lea
ins
xor
dec
popf
dec
cmps
mov
mov
push
setb
(bad)
and
cmp
and
pop
cli
jmp
popf
push
inc
sti
fild
mov
std
fbld
cmp
int
adc
xchg
mov
rcl
adc
or
mov
cmp
sbb
mov
int
adc
(bad)
fnstsw
inc
inc
lods
xor
in
xchg
scas
xchg
repz
outs
and
inc
imul
or
inc
in
cmp
fild
xor
cdq
xchg
mov
jmp
pop
call
daa
jbe
pop
jne
or
imul
iret
leave
pop
and
test
jns
pop
mov
loop
inc
mov
in
xchg
jno
push
push
shl
(bad)
cmp
aaa
test
ds
mov
pop
inc
mov
jecxz
int3
jp
push
and
jecxz
push
cli
jmp
xor
dec
test
outs
adc
adc
mov
jns
sub
jmp
ins
mov
lahf
ret
rcl
mov
pushf
test
adc
push
addr16
pushf
mov
call
xchg
movs
push
and
ret
mov
rol
repz
xchg
ftst
stc
jnp
or
addr16
dec
mov
dec
lar
and
bt
cmp
call
or
shl
rcr
mov
cld
stos
cs
adc
adc
mov
std
das
pop
jae
or
cdq
jmp
add
mov
cmp
dec
sub
jo
xor
push
std
jb
shl
jecxz
sbb
adc
into
inc
in
xchg
sbb
retf
loopne
and
(bad)
lock
test
movs
push
mov
pop
js
adc
cmpxchg
jecxz
xor
xor
push
outs
pushf
mov
add
inc
dec
ffree
push
jge
fimul
push
xlat
adc
jg
sti
mov
pusha
lahf
outs
cld
test
inc
cmps
nop
jns
rol
ss
inc
leave
dec
add
push
int3
ds
movs
fsubr
sar
stos
jle
shl
outs
popf
mov
inc
mul
movs
jno
adc
xchg
js
imul
cmps
out
cli
xchg
movs
pop
xchg
jp
jecxz
hlt
cld
cmp
cs
add
push
mov
xchg
sub
test
mov
inc
pop
pop
jne
outs
in
mov
and
mov
xchg
push
mov
xor
jns
outs
xchg
out
mov
push
xchg
pop
js
les
enter
into
pushf
sbb
cmp
je
inc
fs
jmp
mov
scas
push
arpl
fbstp
lods
mov
(bad)
out
int3
sar
lods
shr
daa
nop
mov
inc
and
push
aad
popa
pop
(bad)
sbb
js
inc
adc
fisub
iret
xchg
mov
cld
mov
xor
xchg
mov
pusha
loopne
mov
adc
cwde
mov
mov
add
mov
and
shl
scas
pop
or
mov
imul
(bad)
pop
loope
xchg
and
or
in
mov
in
int3
mov
mov
jg
or
push
sub
pop
cmp
enter
jne
dec
into
push
outs
pop
and
xor
add
push
lods
cmps
dec
cmc
or
in
dec
jl
in
cli
jl
iret
ins
sbb
cmp
jmp
jno
and
add
leave
push
ja
jmp
cli
cmps
imul
daa
push
dec
mov
and
or
mov
jbe
lea
jle
cmps
jae
movs
mov
loop
xor
mov
rcl
out
dec
sub
sub
push
adc
inc
cdq
and
dec
inc
jl
sub
xchg
sub
mov
and
aam
xchg
mov
mov
or
das
jae
in
in
mov
in
sbb
popf
xor
bnd
xchg
ss
and
outs
add
mov
sub
mov
aaa
data16
(bad)
hlt
das
mov
jns
int3
and
rep
push
mov
ds
mov
mov
repnz
adc
mov
xchg
push
jle
enter
jno
pop
arpl
and
xchg
or
sbb
push
mov
test
inc
cwde
shr
lods
xor
mov
inc
fcmovnb
pop
inc
mov
fnstenv
(bad)
jmp
movs
xor
pcmpeqd
lods
ja
js
jle
xchg
and
or
inc
(bad)
dec
adc
test
push
pop
push
jno
pop
and
out
push
ins
lahf
rol
int
(bad)
call
push
mov
loop
test
and
dec
rcr
and
test
(bad)
scas
mov
into
xor
push
mov
pop
fdiv
mov
jecxz
into
cs
icebp
call
leave
iret
push
and
mov
cdq
pop
rol
cmp
adc
push
pop
pop
mov
cmp
test
inc
mov
mov
into
add
imul
sbb
jbe
pop
shr
cmp
hlt
sub
add
jbe
daa
or
jg
retf
nop
cmps
and
fsub
(bad)
mov
xor
or
retf
push
cmp
(bad)
dec
repz
push
sbb
or
sbb
retf
dec
jno
sub
fisub
lea
xor
retf
int3
and
cmps
fimul
xor
xchg
jl
gs
adc
sti
stos
fdiv
and
and
test
sbb
xchg
mov
stos
cld
jnp
sbb
in
in
mov
dec
iret
into
enter
sti
cld
repz
pop
fldcw
ss
xlat
mov
jne
add
mov
sti
mov
call
adc
(bad)
pop
out
push
jbe
cmp
ret
test
shl
xchg
ret
inc
push
outs
out
test
(bad)
ret
or
in
stos
xor
add
jb
jo
inc
add
imul
lods
cmc
je
xor
mov
dec
sar
mov
push
xchg
push
push
sar
mov
mov
or
(bad)
stc
mov
xchg
lods
dec
call
(bad)
jp
inc
jmp
xchg
cld
mov
and
jmp
nop
sub
(bad)
cdq
pop
or
fst
daa
retf
pop
fs
and
xor
retf
sub
adc
(bad)
mov
or
fadd
ja
cmp
jle
rol
xlat
test
push
sub
mov
xor
jmp
out
or
(bad)
(bad)
into
adc
cli
iret
in
cmp
jp
add
pop
cmp
xchg
push
rol
mov
add
pop
(bad)
hlt
jmp
fidivr
push
adc
cmps
cmp
ins
scas
lods
in
rol
stos
stos
bound
sub
call
lods
add
cwde
add
addr16
sub
jno
mov
lds
aam
aaa
xchg
leave
pushf
add
gs
cmp
sub
and
push
call
fst
addr16
outs
cmp
ss
push
add
ret
xchg
int3
fisttp
mov
lods
add
mov
xchg
jno
cmp
pop
lods
mov
scas
ret
pop
rcr
mov
or
js
pop
iret
jne
fwait
int3
mov
ror
xor
jbe
in
sbb
call
mov
aaa
adc
and
or
mov
movs
pop
imul
iret
push
add
sub
xor
pushf
adc
add
add
pop
push
pushf
test
movs
mov
dec
jl
jo
and
bswap
cmp
cmc
rcr
xor
push
push
(bad)
pusha
dec
aas
mov
int
cdq
out
inc
xor
sbb
iret
xor
add
in
out
cmps
stos
push
and
out
sbb
pop
shr
dec
push
je
dec
sbb
cmp
sub
lods
es
loope
adc
fcmovnb
pop
jmp
push
xor
jle
fcomp
jecxz
jbe
retf
mov
test
and
adc
pop
sahf
dec
jmp
(bad)
mov
pop
jge
push
jecxz
jo
xor
je
lods
jne
rcr
or
dec
cld
push
jp
or
sbb
xor
mov
clc
test
push
dec
int
shl
pop
add
pop
mov
repz
or
mov
or
outs
or
xchg
sbb
mov
add
mov
add
sahf
call
scas
mov
nop
dec
and
imul
nop
nop
scas
(bad)
pop
stc
stos
mov
mov
bound
pop
mov
and
les
dec
mov
cwde
out
in
pop
ss
jb
mov
inc
frstor
bound
mov
push
sub
add
xlat
jns
xchg
cmp
xchg
mov
inc
lahf
ficomp
or
mov
inc
ins
cwde
shl
enter
pop
jno
push
(bad)
push
out
mov
(bad)
call
sub
inc
ds
jb
pusha
dec
mov
rcr
dec
mov
ret
add
or
retf
push
add
pop
jae
(bad)
jle
xor
(bad)
push
pushf
dec
ret
les
push
xchg
or
or
and
pop
sbb
rcl
shl
and
nop
xchg
loopne
movs
sbb
xchg
jecxz
in
sub
jp
jno
bound
dec
fcmove
lods
loop
in
sbb
mov
les
iret
pusha
js
pop
mov
cli
push
jmp
mov
push
arpl
pop
or
xor
mov
jae
int
mov
fld
bound
push
enter
hlt
in
pop
and
cmp
loopne
push
and
test
jl
movs
in
out
dec
push
das
aaa
mov
jae
and
fcmovnb
and
mov
je
shr
mov
mov
sub
(bad)
das
pop
repz
jns
nop
push
mov
pop
pop
inc
inc
fnsave
das
fistp
in
adc
shl
not
int3
sbb
cmp
jmp
lock
daa
adc
in
cmp
adc
fild
or
(bad)
test
pop
xchg
xchg
loopne
outs
aas
rcr
adc
dec
jb
add
icebp
test
daa
mov
mov
push
int3
stos
pop
add
fwait
sbb
mov
push
xchg
adc
fst
dec
popa
fs
dec
sub
in
and
add
push
std
popf
popf
outs
push
rcl
pop
outs
icebp
mov
loopne
in
xor
pop
imul
adc
dec
loopne
imul
inc
sti
shr
push
ins
ss
pop
push
cmp
(bad)
fisub
push
in
scas
pop
scas
jns
mov
push
call
cmps
nop
mov
pop
movs
pushf
adc
mov
test
fmul
or
cmc
sub
repz
out
(bad)
jge
inc
(bad)
(bad)
cmc
daa
sbb
stos
or
xchg
sub
xchg
std
fistp
bound
add
mov
inc
push
(bad)
cwde
xor
push
mov
outs
pop
mov
fld
(bad)
imul
imul
movs
push
leave
fldenv
lahf
lea
jbe
frstor
arpl
lods
adc
scas
sbb
iret
add
inc
or
pop
sbb
pop
shl
xchg
pop
lea
(bad)
iret
out
nop
bound
js
mov
dec
repnz
and
inc
mov
das
pop
repnz
and
leave
xchg
lods
mov
imul
dec
mov
call
mov
aaa
pop
jae
fcmovbe
mov
test
paddd
xchg
xor
lods
adc
pop
(bad)
and
adc
adc
push
loopne
test
sbb
scas
xchg
jae
add
shr
cs
arpl
add
pop
push
out
inc
movs
cs
adc
inc
shl
in
(bad)
mov
daa
sbb
cli
bound
mov
mov
nop
adc
jbe
pop
movs
fucom
(bad)
fld
out
fs
jg
add
nop
xlat
mov
icebp
push
jmp
push
movs
mov
aas
fild
jl
je
in
arpl
push
inc
repz
adc
or
jo
mov
mov
mov
mov
cld
fs
loopne
pop
(bad)
loop
mov
dec
xchg
mov
jp
ins
jmp
shr
xchg
shl
adc
sbb
dec
sub
sbb
inc
fld
pop
shl
test
stc
inc
(bad)
cmc
xor
pop
inc
sub
or
jmp
aam
ss
ss
jle
jecxz
pop
dec
sbb
fldenv
xchg
(bad)
cmp
clc
xor
pop
ins
and
dec
test
jo
js
loopne
sbb
test
movs
jle
xchg
xor
mov
retf
retf
xor
adc
add
out
mov
ret
(bad)
stc
fadd
dec
pop
cmp
leave
sahf
test
and
fcom
loope
jns
fwait
and
jg
stos
dec
mov
les
sub
jmp
pop
xor
mov
fisubr
aaa
div
bound
sub
test
pop
retf
loope
or
adc
push
mov
loopne
ret
xchg
int3
or
xchg
int
adc
ins
pushf
mov
int
pop
daa
lea
xor
mov
jbe
dec
arpl
adc
gs
dec
loope
push
jg
retf
outs
leave
aad
hlt
fld
retf
outs
mov
jns
pop
push
loop
add
ror
jecxz
pop
idiv
sar
push
mov
out
leave
add
out
cmc
xchg
in
sahf
fwait
mov
aam
and
pop
push
adc
inc
or
icebp
jge
pop
icebp
add
fsub
and
mov
adc
test
jg
inc
das
sub
mov
loopne
loope
stc
push
ins
aaa
clc
jmp
in
cmp
int3
xlat
jae
data16
xchg
xchg
mov
push
in
loop
sub
jns
mov
enter
jnp
in
daa
jne
scas
fwait
cwde
call
add
imul
xchg
div
xor
sbb
jl
push
lea
jno
add
pushf
in
push
mov
sbb
jb
push
out
call
(bad)
mov
sar
push
imul
stc
pop
add
mov
aam
fcom
and
lock
or
mov
xor
or
in
movs
push
sub
cwde
mov
xor
cdq
mov
jecxz
mov
dec
cwde
jo
ins
ret
in
pop
mov
inc
mov
mov
int3
and
icebp
int
mov
jb
popa
push
push
int
mov
fadd
(bad)
aam
jmp
aad
outs
scas
xlat
jno
test
shl
xchg
and
rol
shl
xor
ss
out
retf
and
int3
ret
stc
stos
(bad)
lods
cld
mov
dec
icebp
pop
xchg
clc
mov
pop
adc
push
add
inc
movq
add
sti
mov
mov
call
mov
pop
enter
cmp
sub
outs
je
movs
dec
sub
mov
xchg
cli
mov
pop
ror
addr16
arpl
or
loopne
and
cmp
inc
mov
push
mov
jno
pop
addr16
xor
test
xor
iret
outs
mov
into
sar
fcomp
cmps
stc
dec
gs
lods
outs
lock
cmp
shr
pop
cmps
mov
das
(bad)
loop
fidivr
inc
dec
mov
jl
rcl
dec
cwde
aas
mov
rcr
jl
push
retf
cld
lods
adc
popf
xchg
mov
cwde
in
or
pop
or
sahf
rcl
xor
or
and
add
movs
and
mov
repnz
add
mov
pop
pop
xchg
add
retf
sbb
pop
xor
test
(bad)
push
pushf
add
jmp
xor
ja
out
in
adc
mov
sub
dec
shr
fs
xor
(bad)
cmp
or
pop
repz
or
sbb
adc
lock
push
sub
and
ins
push
cmp
mov
or
inc
jnp
push
pop
cmp
adc
xor
test
or
lods
jmp
sbb
mov
mov
cmp
aam
cmp
imul
leave
cmp
sub
or
jb
sbb
xor
rcr
push
and
inc
jnp
jp
jg
pop
push
sub
cdq
add
add
not
add
outs
push
fist
rcl
and
(bad)
call
sahf
sar
inc
loope
mov
out
aam
pop
loope
inc
nop
and
fsub
repnz
das
xchg
hlt
std
push
ret
gs
push
sub
jae
and
sahf
push
movs
sbb
dec
mov
data16
sbb
xchg
pop
jge
jae
stos
adc
ss
in
into
jge
mov
push
mov
lods
fadd
push
dec
test
add
mov
jns
stc
inc
shl
mov
adc
push
push
test
add
push
and
stos
jg
inc
mov
push
cmp
jge
in
inc
inc
adc
push
xchg
fcmovbe
mov
add
jo
pop
aas
sti
call
cmps
loop
fiadd
jmp
iret
repnz
movs
push
pop
retf
les
int
test
jp
adc
ret
into
int3
xlat
popf
rcr
inc
andnps
fisttp
mov
ss
and
into
xor
jmp
pop
imul
mov
adc
dec
push
fnstsw
xchg
into
xlat
and
arpl
or
push
jb
jle
fiadd
gs
sub
movs
sbb
jge
sbb
and
jp
or
ret
xchg
(bad)
mov
mov
mov
push
xor
sbb
and
imul
les
fsubrp
sub
sbb
mov
pop
adc
and
xchg
rcl
sbb
or
es
mov
call
jno
xor
mov
sti
retf
cmp
fst
stos
imul
mov
mov
cmp
sbb
sbb
fadd
jno
push
sub
jl
pop
fist
nop
je
ss
arpl
dec
push
mov
(bad)
adc
add
mov
shl
(bad)
fisub
push
mov
add
jle
or
mov
xor
aad
jnp
std
adc
mov
shl
mov
sbb
pusha
adc
cmp
mov
call
rol
sbb
add
adc
sbb
adc
outs
fcmovb
movs
cmps
stos
push
fsub
pop
sti
or
add
push
cmp
push
fmul
and
aas
daa
dec
ret
pop
mov
nop
dec
xor
scas
and
dec
iret
mov
std
(bad)
rcl
xor
sub
icebp
xor
outs
sub
test
fistp
ins
rol
fs
loope
retf
mov
cs
jae
out
inc
leave
mov
xchg
jge
dec
pop
push
fmul
xchg
mov
in
xor
dec
scas
scas
add
adc
(bad)
xor
fnsave
call
jg
int
mov
jp
not
dec
repz
inc
sbb
adc
sub
leave
pop
fiadd
retf
in
scas
xor
adc
jo
in
or
test
int
sar
sar
dec
xor
cmps
gs
xchg
jp
jmp
and
push
out
jecxz
mov
lods
dec
push
push
push
pushf
xor
pop
cmp
or
rcl
jo
push
xor
jb
cmp
xor
dec
inc
popf
fild
xchg
in
inc
enter
ret
mov
cmp
(bad)
pop
mov
jmp
dec
fwait
(bad)
sahf
dec
xor
sti
xchg
pop
pop
shl
das
cwd
std
fstp
je
pop
retf
idiv
je
fwait
inc
cmps
jl
mov
mov
jecxz
lahf
sub
lea
sbb
stos
stc
mov
cmp
sbb
lahf
pop
cmps
out
mov
xor
jne
or
xchg
push
mov
in
sbb
sub
add
xchg
rcr
int
lds
fidivr
lods
add
inc
jl
add
sahf
stos
cld
mov
jle
mov
and
add
ror
mov
(bad)
cmp
or
xchg
pop
div
sbb
and
in
fwait
mov
ja
add
test
pop
mov
daa
lds
xchg
sti
das
or
dec
out
cwde
mov
push
pop
gs
mov
dec
scas
add
sbb
lahf
int
ret
int3
fild
popf
dec
jecxz
mov
mov
push
cmp
ss
jmp
cli
or
pop
cmp
mov
movs
fadd
in
enter
sbb
or
cmc
cld
xchg
out
adc
loope
jo
or
retf
push
fld
jmp
fnstcw
aas
inc
out
jl
inc
iret
pop
lahf
mov
sub
lahf
or
sbb
dec
lods
cmps
sar
pusha
retf
pop
int3
xor
pop
test
adc
mov
jno
clc
jb
push
fsub
jns
sub
push
lods
lock
mov
fmul
pop
sub
pop
xor
or
dec
sbb
inc
mov
out
sbb
mov
jnp
retf
cmps
xor
push
inc
ror
adc
arpl
fs
hlt
scas
data16
fs
dec
stc
xor
(bad)
bound
add
cmp
add
rcr
dec
test
add
pusha
jne
(bad)
in
sbb
inc
dec
xchg
sbb
lds
and
shl
mov
les
push
jnp
ror
addr16
in
arpl
outs
in
addr16
arpl
out
cmp
and
movs
inc
mov
mov
in
mov
je
jecxz
and
sar
pop
icebp
retf
cmp
cmp
sub
push
sbb
xor
dec
cmp
pop
lds
loopne
test
icebp
leave
mov
das
jge
xor
jnp
sub
ret
bound
leave
adc
ja
inc
mov
test
pop
or
scas
mov
sub
imul
jmp
call
xlat
outs
push
adc
sbb
push
inc
xchg
outs
call
sub
cmps
mov
lods
cmp
inc
fst
imul
or
ja
pop
movs
mov
fild
out
push
(bad)
mov
or
cmps
mov
fsubp
xor
push
jp
cmp
fbstp
pop
or
mov
mov
iret
pop
js
pop
xchg
jg
xchg
sub
mov
nop
aam
or
sti
rol
stc
fcom
xchg
test
mov
add
mov
fcmovne
xor
jne
push
push
in
mov
push
add
jns
add
mov
dec
jmp
outs
mov
sbb
jmp
dec
shr
dec
xor
sub
add
dec
out
adc
xchg
jae
pop
mov
mov
jge
sbb
and
xchg
jmp
test
sbb
pop
adc
pop
ins
cmp
mov
sbb
mov
iret
cmp
xchg
adc
pop
test
mov
add
xchg
or
stos
xchg
pop
mov
sub
adc
jae
les
aad
out
jnp
aad
lods
ds
clc
out
mov
dec
stos
test
add
cmp
jns
mov
mov
jo
imul
stc
test
mov
call
pop
mov
dec
(bad)
dec
jno
or
xor
jmp
(bad)
popf
adc
mov
data16
mov
mov
mov
aas
icebp
sub
push
je
(bad)
popa
dec
inc
fdiv
loop
mov
mov
mov
and
hlt
pop
scas
sub
or
jmp
jmp
adc
fisttp
in
pop
push
scas
fcom
mov
cmp
sub
movs
seto
dec
inc
sub
lock
mov
imul
inc
jbe
out
jmp
outs
imul
scas
cmps
push
cmps
and
scas
mov
mov
cmps
mov
and
mov
pop
jnp
mov
mov
retf
inc
aam
cmp
and
ror
sbb
push
dec
(bad)
fist
sbb
dec
cdq
or
ficomp
imul
cmp
ds
sbb
ret
movs
sti
mov
lahf
stc
sbb
inc
push
ja
mov
and
std
ins
mov
test
loope
daa
push
mov
jg
out
inc
push
mov
push
mov
xor
lds
je
lock
shl
push
cmp
pop
data16
rcl
mov
enter
loop
adc
mov
in
add
cmp
sbb
pop
mov
adc
das
test
(bad)
mov
mov
out
inc
in
ins
mov
fnstcw
lods
fisttp
fcomp
(bad)
or
pop
adc
pop
jnp
mov
rcl
and
xlat
sbb
or
fistp
fisub
pop
mov
jb
jmp
xchg
push
dec
and
movs
inc
cwde
mul
push
int
lods
lea
cmps
js
cld
popa
dec
push
jo
outs
out
int
aad
fdivrp
dec
inc
cmp
shl
or
ret
push
stos
dec
fimul
(bad)
(bad)
mov
lods
ja
out
mov
fdivr
int
add
das
mov
(bad)
xlat
sub
call
and
and
and
jecxz
jbe
mov
imul
into
int3
sub
cmp
sbb
dec
mov
rol
fwait
dec
pop
data16
fyl2x
int3
fmul
shl
js
dec
fild
daa
fcomp
mov
sbb
mov
jg
pop
xchg
mov
pop
popf
pop
loop
sub
ror
pop
dec
xchg
mov
xor
mov
mov
xchg
jbe
fsubr
xor
sub
enter
adc
das
push
loope
ins
movs
nop
fst
jb
call
enter
cmp
xor
fwait
xlat
int
pushf
jne
scas
adc
adc
mov
sub
mov
sub
push
ficomp
sbb
sahf
lock
push
das
xor
daa
cli
jns
mov
(bad)
aam
adc
stos
ss
(bad)
mov
ja
(bad)
jo
pop
push
je
adc
or
add
(bad)
add
xchg
aad
out
mov
dec
pushf
adc
pop
imul
shr
movs
mov
into
mov
fdivrp
sub
push
mov
push
pop
mov
cld
jns
test
cmp
sub
fwait
or
scas
dec
(bad)
dec
js
sub
clc
rcr
int3
sahf
in
or
es
jne
sar
jge
and
push
sub
rcr
xchg
push
jne
cmc
push
xor
adc
ret
jmp
jbe
ror
call
mov
cmp
push
add
xchg
addr16
jl
jns
mov
lahf
btr
mov
cs
js
ins
daa
cmp
xchg
je
sbb
push
sub
add
cmps
movs
push
xor
retf
nop
out
xlat
arpl
dec
pop
jbe
test
push
xchg
push
xor
mov
das
ja
fwait
imul
out
xchg
test
(bad)
in
pusha
ror
ret
mov
jecxz
adc
into
call
enter
loop
dec
popa
or
es
add
xchg
jl
(bad)
popa
inc
shl
(bad)
or
xchg
out
cmp
(bad)
in
retf
mov
ror
(bad)
gs
stos
aad
jmp
mov
call
test
retf
mov
retf
mov
lahf
mov
(bad)
jb
cld
xchg
dec
stos
int
sbb
cmps
sbb
cmp
in
jae
ret
movs
jmp
mov
aad
xchg
fucom
loopne
daa
and
dec
jo
and
mov
mov
in
jns
mov
pop
dec
jbe
or
shl
cli
inc
(bad)
or
fimul
ret
outs
into
add
and
loopne
inc
xor
mov
dec
add
movs
sub
arpl
or
fmul
cs
adc
inc
cwde
call
mov
dec
leave
and
loop
cld
xor
xor
jle
dec
dec
jne
ror
stos
imul
mov
and
bound
je
adc
add
jecxz
out
xchg
cmp
lds
js
adc
push
into
inc
gs
add
pop
pop
in
mov
pop
rcr
cmp
fcom
xor
jmp
mov
enter
xchg
or
sub
push
pop
cmp
jg
fs
shl
outs
xchg
retf
inc
adc
jae
mov
fwait
adc
aas
cli
daa
and
inc
fwait
jo
xchg
je
mov
popa
push
fdiv
or
add
inc
jnp
std
mov
mov
(bad)
mov
cld
jns
shl
out
sub
jmp
xor
push
inc
enter
stos
pop
test
imul
(bad)
dec
pop
sbb
dec
xor
mov
pop
js
jmp
xchg
loopne
aas
mov
int
ja
cs
nop
nop
adc
enter
and
dec
xor
push
mov
shr
out
(bad)
xchg
sbb
sub
pushf
jns
rol
push
jns
inc
cwde
sub
lods
(bad)
mov
(bad)
loop
js
repz
xchg
repnz
inc
outs
xchg
jecxz
dec
mov
sub
mov
sub
lods
shr
out
jns
xchg
push
mov
dec
xchg
and
test
rol
pop
(bad)
ror
xor
fstp
enter
cld
adc
cwde
fs
mov
iret
add
cs
loop
xchg
xchg
jae
aam
imul
fsubrp
sub
mov
push
jo
dec
and
icebp
hlt
sbb
jmp
aad
aaa
std
inc
sbb
add
cwde
mov
or
pop
cmp
inc
data16
mov
gs
mov
ins
mov
dec
lahf
xor
fwait
pop
in
out
pop
lock
pop
retf
and
cmp
(bad)
loop
call
xor
adc
jne
push
or
pop
in
xor
inc
test
fcmovbe
or
and
push
aaa
add
sbb
mov
mov
sti
jg
pop
xor
fidiv
in
mov
loopne
mov
icebp
dec
div
(bad)
adc
leave
jp
ret
test
fstp
push
sar
js
jle
neg
fnstcw
retf
jne
(bad)
sub
cmp
xchg
inc
movs
es
jmp
dec
and
or
sub
jnp
xchg
xor
dec
jg
in
inc
scas
(bad)
jbe
fsubr
or
js
mov
cwde
cwde
wbinvd
(bad)
xchg
add
jecxz
dec
ja
pop
jmp
(bad)
mov
and
jbe
test
(bad)
(bad)
xor
hlt
mov
adc
jb
mov
cmc
imul
nop
cmc
aam
shl
sbb
jmp
fwait
bound
cmp
int
jno
jl
test
inc
test
jb
(bad)
lods
imul
test
call
sbb
and
arpl
sbb
mov
ss
lods
push
(bad)
cmp
(bad)
sti
clc
pop
repnz
nop
repz
ss
dec
mov
mov
addr16
(bad)
adc
(bad)
jge
fwait
mov
mov
add
xor
and
cmp
push
push
aam
stc
fxch
mov
sub
mov
out
or
jge
fcomp
xor
jae
ret
or
jmp
or
out
xor
jge
lods
repnz
jne
sub
movs
pop
leave
(bad)
jmp
sub
ds
pop
iret
bound
popa
icebp
fld
mov
jmp
xchg
and
stc
(bad)
mov
xor
jno
fsub
or
repz
inc
loope
lock
stc
aam
cli
xor
sub
ins
add
(bad)
cmp
movs
and
dec
call
dec
xchg
mov
gs
ins
rcl
jo
shl
jmp
jnp
iret
ret
dec
push
pop
xchg
push
repz
clc
clc
cdq
das
ret
xchg
rcr
mov
out
dec
dec
mov
std
cmp
call
pop
ret
inc
jns
adc
lahf
mov
adc
cmp
adc
out
fstp
or
outs
and
int
jl
jbe
(bad)
dec
inc
adc
shl
out
mov
push
cmp
in
(bad)
sahf
adc
imul
cmp
ss
les
stos
fwait
dec
call
inc
mov
xchg
test
push
cmp
hlt
ss
mov
sahf
ret
sub
mov
jmp
dec
sub
fdivr
xchg
(bad)
(bad)
sbb
daa
popa
pop
mov
mov
shld
jmp
push
mov
loop
or
dec
or
(bad)
or
xor
dec
ret
sti
push
sbb
push
(bad)
(bad)
int
loope
mov
scas
(bad)
adc
ror
xchg
aaa
fmul
mov
sar
push
or
leave
xor
(bad)
adc
(bad)
repz
inc
bswap
into
into
mov
push
cmp
add
push
mov
cmps
jmp
push
cmp
and
iret
pop
pop
mov
mov
mov
adc
or
loop
cmp
xor
js
mov
mov
inc
movs
les
lods
int
repnz
sub
idiv
clc
mov
xchg
loop
mov
cmp
outs
fstp
or
xor
leave
and
sbb
xor
lods
mov
std
adc
push
adc
push
push
xchg
ja
or
cmps
stos
rol
setno
mov
mov
(bad)
das
and
jmp
xor
xor
fwait
(bad)
call
and
popa
or
bound
xor
push
dec
fwait
adc
jnp
add
mov
(bad)
push
dec
ja
xor
jecxz
repnz
mov
or
iret
clc
int3
repz
cmps
sbb
es
add
int
push
in
or
lods
out
pop
push
clc
ret
mov
cmps
in
dec
lahf
mov
add
ret
add
mov
out
dec
js
add
fs
ror
mov
push
or
push
jo
and
sub
dec
push
push
adc
inc
adc
pusha
and
add
lock
sbb
sbb
jo
push
mov
enter
add
pop
sar
hlt
mov
js
js
sbb
mov
shl
js
fwait
or
pop
mov
jle
push
xor
aaa
jbe
imul
mov
repz
enter
sub
mov
cmc
mov
cmp
pop
jecxz
cmp
xchg
cmp
ja
std
sub
js
enter
add
ss
fstp
sub
cmps
mov
push
sbb
mov
leave
sbb
jmp
mov
cmp
mov
fwait
outs
xchg
call
jp
pushf
sbb
jge
cmp
fcom
push
dec
clc
int3
sbb
cmp
cwde
sbb
mov
push
pop
pop
mov
pop
xchg
or
sbb
aad
stos
in
sub
inc
jnp
leave
mov
aam
adc
sti
push
stc
out
xor
ins
and
add
addr16
pop
xor
popf
or
pop
and
ja
daa
jecxz
inc
ror
retf
aas
inc
movs
retf
cmp
hlt
and
mov
add
into
adc
inc
jne
push
pop
lods
add
aaa
xor
inc
mov
adc
sar
sar
(bad)
xchg
ss
xlat
add
jb
cmp
into
cmp
push
jmp
fisub
imul
daa
imul
jmp
loope
cmp
int
into
push
stos
add
test
dec
pop
adc
mov
push
sahf
in
mov
or
pop
adc
(bad)
bound
push
in
xor
arpl
loop
out
xchg
adc
retf
int3
xchg
into
mov
xchg
jmp
mov
mov
dec
test
hlt
cmps
dec
push
add
and
push
dec
(bad)
pmulhuw
add
push
pop
(bad)
cmc
add
out
fwait
add
inc
je
hlt
add
inc
mov
sbb
pop
and
movs
mov
bound
push
cld
clc
popa
call
adc
stc
in
pop
stc
sbb
sahf
sar
inc
bound
cs
xor
iret
push
jne
fdiv
fild
lods
rcr
(bad)
mov
imul
gs
fcompp
dec
hlt
jg
fldenv
jno
push
into
fadd
int
popa
mov
mov
inc
ins
or
cmps
dec
and
daa
ds
dec
outs
xor
ret
xchg
rcl
xlat
mov
cs
mov
mov
adc
lods
add
add
ins
loopne
pop
out
mov
cmps
pop
repz
sbb
xor
jecxz
cmp
xor
sahf
or
mov
dec
ror
cmp
lds
pusha
push
pushf
(bad)
dec
cld
call
ja
sub
sub
jo
sar
aam
mov
lods
xor
into
lods
imul
xor
outs
ins
inc
cmps
xor
mov
ret
and
outs
cmp
ins
nop
leave
sbb
repnz
and
push
jecxz
test
pushf
mov
pop
cmp
prefetchwt1
rcl
in
mov
iret
adc
pop
das
je
in
shr
jl
call
enter
(bad)
sti
sub
iret
dec
inc
sub
lock
and
fimul
cmp
icebp
bound
mov
pop
inc
fild
pop
iret
pop
les
push
stos
dec
mov
and
xor
xor
mov
aad
cmps
xchg
shr
ins
arpl
idiv
jle
outs
test
hlt
ficom
xchg
ja
leave
adc
mov
lea
test
sub
out
test
data16
jp
and
mov
iret
and
mov
fimul
dec
adc
test
addr16
and
nop
test
cdq
adc
mov
xchg
stos
mov
sbb
push
inc
ins
mov
loop
jmp
ret
ds
mov
icebp
xor
dec
jne
mov
and
mov
imul
dec
push
pop
stc
in
int
aas
dec
mov
hlt
lock
cmc
cmp
ffreep
stos
xchg
or
cmp
loopne
enter
jl
les
xor
dec
bound
sbb
and
ins
gs
loop
mov
arpl
mov
sbb
xchg
es
or
xor
neg
xchg
loop
xlat
fstp
lods
adc
xor
lock
imul
add
dec
fsub
sub
dec
ret
and
pop
dec
inc
adc
jb
lahf
sub
in
cmc
add
out
(bad)
mov
fdiv
and
popa
daa
dec
sahf
and
les
cmp
mov
and
push
push
mov
pop
loope
and
jp
loop
dec
fcomp
mov
je
ins
rol
cmp
mov
mov
aaa
in
sub
outs
out
and
punpcklwd
push
inc
and
in
movs
sub
js
sub
outs
xor
repnz
cs
test
dec
add
imul
or
cmp
out
dec
mov
inc
inc
int
pop
or
inc
mov
fst
sub
mov
or
dec
lea
jg
call
inc
repz
retf
and
ss
je
je
cmc
pop
sub
mov
pop
jecxz
(bad)
push
push
sbb
pushf
retf
clc
call
inc
mov
xchg
inc
(bad)
gs
adc
sub
ret
call
rcl
jl
es
emms
add
inc
dec
ds
aad
or
call
aam
(bad)
adc
repz
pop
arpl
inc
(bad)
int
jo
xor
imul
movs
lods
std
mov
jo
data16
push
xor
in
mov
call
dec
mov
or
je
ror
push
test
mov
adc
in
in
adc
jne
fnstcw
xor
add
pop
data16
in
repnz
cmp
lods
(bad)
or
loopne
xor
xor
inc
rcl
sbb
pop
setb
shl
imul
jmp
hlt
push
dec
pushf
xchg
push
clc
mov
pop
cli
ror
cld
push
mov
cs
loop
pop
fidivr
mov
(bad)
fidivr
sub
and
cmc
cmp
lods
lds
inc
pop
inc
scas
pop
push
add
(bad)
and
push
enter
push
cmps
dec
sub
cmps
push
ret
sbb
cs
imul
aas
mov
jmp
push
ins
mul
inc
int3
rcr
xor
sbb
dec
scas
das
lods
fistp
clc
mov
daa
pusha
add
dec
arpl
fdivr
xlat
adc
jne
lahf
mov
icebp
jecxz
xor
sub
scas
in
fisub
movs
inc
cdq
ins
movs
loop
lahf
cld
gs
dec
mov
test
sbb
cmp
push
aas
iret
es
inc
ins
xlat
out
stos
mov
add
test
dec
into
jl
sbb
xchg
mov
inc
pop
ret
cmp
fbstp
je
ret
push
add
xor
inc
jnp
js
inc
push
lock
mov
pop
mov
fmul
aam
sbb
sub
adc
hlt
mov
sub
out
cmc
xchg
inc
sbb
js
adc
in
lahf
sub
enter
stc
jo
adc
int3
test
fist
or
sti
lods
jbe
add
sqrtps
mov
xchg
shl
mov
cmp
dec
push
out
xchg
or
add
cmp
(bad)
loop
adc
and
mov
jae
fidiv
sbb
lds
mov
fs
je
mov
add
cld
out
hlt
ins
push
sbb
int
pop
mov
retf
and
jge
pop
jg
xchg
mov
cwde
lock
adc
push
ret
mov
and
dec
cmp
lea
jmp
sub
xchg
dec
and
pop
(bad)
xor
mov
push
in
aam
pop
fild
rol
mov
xchg
clc
sbb
add
mov
cmps
xor
inc
sahf
sbb
int
arpl
sub
sub
adc
arpl
pushf
add
stos
pop
inc
imul
retf
xor
jl
ret
pop
jne
int3
sahf
add
gs
lds
dec
out
adc
pop
aad
xor
xor
neg
push
cwde
inc
jb
(bad)
shl
fisub
mov
test
cdq
push
aaa
and
push
dec
cs
cmps
inc
sar
mov
nop
xor
rol
push
mov
sub
or
test
pop
adc
(bad)
in
adc
sahf
scas
and
cmp
xchg
add
dec
fnstenv
(bad)
movs
addr16
fs
push
push
int
das
shl
inc
out
leave
loope
retf
xor
repz
and
lds
adc
fild
test
int
pop
dec
(bad)
outs
inc
pop
push
jp
mov
jge
jmp
pop
imul
call
in
adc
aaa
sub
test
cmc
or
adc
ins
jl
out
leave
push
fst
aad
xchg
adc
mov
ss
scas
dec
ret
pop
pop
jo
mov
cmp
push
mov
pushf
out
cmps
out
sahf
cmp
shr
daa
push
loope
daa
movs
jns
pusha
rol
mov
add
lods
rcl
pop
mov
push
scas
push
test
lock
(bad)
out
push
mov
jne
lock
neg
xchg
xlat
xchg
jmp
or
or
ins
shl
and
popf
cmp
popa
add
repz
test
fdivr
and
sbb
les
pop
pop
mov
imul
rcl
lea
lds
out
cmps
(bad)
out
cs
scas
adc
scas
jo
imul
fld
cmps
ins
add
clc
cmp
mov
jno
mov
push
jl
add
aas
je
and
sahf
bnd
popa
mov
stc
jae
and
popa
sahf
stos
sub
fisubr
jb
sbb
and
nop
pop
push
and
outs
test
out
mov
mov
xchg
shl
das
mov
mov
adc
push
pop
xor
xor
or
fmul
addr16
xchg
mov
gs
adc
nop
out
je
ja
mov
jno
push
test
push
sub
jnp
add
bound
cmp
xchg
sub
pop
clc
pushf
push
ficomp
jmp
sub
aam
xchg
xchg
pop
mov
xchg
and
xchg
jne
pop
sub
cli
int
jl
mov
push
ins
mov
xchg
and
lahf
movs
daa
pusha
hlt
sbb
data16
adc
jno
cwde
dec
test
inc
or
jae
cmp
xor
out
fiadd
xchg
gs
xchg
cmp
sti
fld
je
xchg
std
cmp
addr16
cdq
or
push
iret
test
scas
scas
(bad)
scas
or
cmp
mov
lods
nop
ins
sub
inc
and
icebp
push
mov
in
jecxz
push
cmp
test
push
jbe
add
cmp
mov
loop
rol
jp
or
adc
add
int3
jmp
inc
mov
mov
pusha
out
mov
push
adc
scas
add
hlt
in
adc
aam
xor
push
je
xchg
and
hlt
mov
sbb
call
daa
(bad)
jge
and
push
(bad)
ret
call
(bad)
stc
clc
scas
aam
mov
or
mov
or
xor
je
fmul
call
mov
es
imul
int
push
sti
gs
lahf
sysret
call
xchg
push
nop
inc
mov
and
js
aam
ja
push
movs
jmp
clc
mov
lods
cmp
lock
mov
jmp
jns
xchg
ins
and
popf
stos
out
jmp
retf
mov
adc
inc
sub
push
imul
into
and
or
pop
shl
cmc
push
js
rcl
and
sbb
cmps
test
or
movs
jbe
loop
dec
fsubr
mov
pushf
sub
xor
xor
into
retf
mov
push
adc
sbb
std
cmp
rcr
iret
pop
xor
cmps
imul
arpl
xor
shufps
sub
clc
out
mov
cmp
mov
pop
pop
jno
xor
test
sbb
mov
push
loop
popf
mov
push
cmc
aas
data16
les
loope
mov
pop
dec
xor
mov
fs
xor
dec
sbb
test
cdq
je
mov
imul
call
jno
out
fldenv
std
aas
or
push
inc
pop
cmp
dec
mov
cwde
jne
lods
mov
add
cmps
loope
push
fidivr
or
sub
adc
xor
sti
aad
adc
cs
lods
les
mov
cmp
mov
ins
xor
lock
mov
xchg
pushf
clc
out
inc
div
mov
or
retf
push
test
test
sub
push
and
fdiv
xor
in
push
mov
xchg
(bad)
jns
cmp
lds
mov
or
cmps
jmp
lods
fild
out
xor
loopne
xor
jl
es
inc
int
pop
(bad)
mov
mov
inc
outs
xor
ret
dec
pop
mov
mov
jo
inc
cli
sar
adc
jns
and
or
bound
or
popa
js
jmp
jl
aaa
add
pusha
push
cmp
iret
inc
jl
dec
add
or
mov
inc
jmp
nop
in
loope
(bad)
or
cdq
dec
dec
pop
jno
cwde
leave
mov
or
lods
pop
jnp
or
mov
mov
in
or
push
jecxz
add
pop
mov
fld
push
cmp
or
pop
test
imul
aam
es
mov
lea
adc
lea
popa
mov
jp
(bad)
push
dec
inc
es
and
jmp
xchg
xchg
inc
inc
and
pushfw
xchg
test
pop
daa
adc
popf
out
(bad)
orps
fld
mov
jecxz
push
jno
call
or
pop
out
sub
cmp
lods
popf
nop
cmps
cdq
add
in
jg
sub
mov
out
test
sbb
loopne
iret
pop
add
mov
sahf
mov
das
jbe
lock
sahf
jecxz
adc
repz
mov
dec
ja
and
mov
jmp
scas
pop
(bad)
imul
aad
cli
call
mov
(bad)
mov
cmp
fidivr
jmp
out
xchg
in
loope
icebp
push
pop
push
add
adc
pop
dec
mov
js
pushf
add
dec
and
into
sub
inc
inc
pushf
sar
xchg
call
test
sub
mov
mov
mov
mov
es
pop
sub
pop
fisub
pop
jne
xchg
inc
mov
adc
pop
call
aad
(bad)
jb
sbb
ins
fsub
ror
fs
xchg
cwde
in
ret
dec
inc
inc
sub
sub
out
(bad)
or
cmp
call
shl
stos
into
sar
xchg
std
(bad)
dec
rol
dec
adc
outs
inc
inc
jmp
add
push
and
xor
outs
push
ja
mov
test
mov
repnz
dec
adc
sbb
shl
lods
jge
xchg
jmp
fdivr
aam
(bad)
gs
xor
cmp
jle
ins
cmps
cwde
ins
pop
mov
mov
fcmovb
dec
cmp
out
scas
push
clc
test
outs
cmps
cmp
jnp
sbb
xchg
inc
mov
or
adc
shl
mul
xchg
out
mov
mov
pusha
xor
stc
fidivr
loope
cmp
xchg
dec
mov
stos
xor
aaa
call
jle
popf
mov
xchg
jle
pop
mov
aam
pop
sbb
pop
outs
arpl
jp
icebp
loopne
(bad)
ins
idiv
mov
mov
jge
jnp
dec
enter
fidiv
and
jbe
cmc
push
mov
cmps
adc
dec
imul
jb
jne
push
mov
icebp
stos
dec
sahf
imul
imul
or
loop
leave
in
pop
test
cs
pop
push
xchg
test
push
push
cmps
pop
dec
mov
in
xchg
jmp
test
lock
cmp
jle
push
xor
out
xchg
int3
sbb
and
sub
sahf
xor
cmp
mov
cld
daa
(bad)
jns
pop
sub
(bad)
outs
test
test
push
mov
sub
xor
aam
mov
ret
adc
xchg
mov
dec
dec
mov
xor
lock
or
mov
retf
retf
push
jle
int3
and
das
test
repnz
(bad)
dec
daa
and
dec
jp
pop
push
cmps
dec
dec
inc
cs
ror
clc
cli
std
sub
scas
loope
or
pop
xchg
fiadd
adc
repnz
and
test
xlat
imul
jmp
jb
test
pop
mov
push
push
in
mov
out
add
push
outs
sbb
jnp
jo
outs
out
hlt
push
cli
lods
sbb
add
mov
shr
cmp
scas
(bad)
addr16
xor
pop
push
dec
out
(bad)
mov
dec
repz
jnp
mov
mov
dec
imul
mov
sbb
in
fsubr
fild
(bad)
push
xor
push
stos
outs
je
jp
jo
(bad)
pop
adc
and
xor
mov
cld
mov
rol
cmc
push
enter
leave
test
jmp
movs
fisttp
fisubr
pop
cdq
hlt
out
fadd
dec
adc
clc
pop
bound
pop
jecxz
fistp
sbb
popa
xor
pop
sub
mov
jae
nop
icebp
adc
fs
mov
add
push
mov
push
sub
outs
clc
in
cld
pop
call
je
inc
xor
mov
shl
mov
mov
mov
jl
inc
in
cs
lock
es
aad
or
jle
lods
repnz
mov
inc
aad
stos
pop
les
test
push
xor
sub
mov
or
push
xchg
push
sbb
push
sub
ret
mov
mov
xor
aaa
add
pop
jmp
mov
arpl
sub
mov
aad
mov
mov
aas
scas
retf
shl
mov
cmps
xchg
inc
dec
aad
div
xchg
mov
push
push
push
jle
push
stc
adc
das
mov
loopne
das
mov
sbb
pushf
lock
push
dec
add
imul
mov
pop
xchg
mov
sbb
mov
lds
ret
and
cli
fnstsw
retf
scas
mov
fnclex
jae
add
or
sbb
jbe
je
(bad)
inc
mov
inc
ja
retf
scas
test
inc
test
and
pop
sbb
jmp
mov
push
push
sbb
and
adc
push
je
sar
xchg
call
add
(bad)
mov
lock
cli
mov
dec
aad
int
pop
in
frstor
mov
push
scas
adc
xchg
ja
in
ret
and
sti
cmp
dec
cs
adc
or
imul
nop
sub
test
retf
xchg
repz
mov
icebp
jne
ja
pop
or
and
mov
ret
das
or
gs
in
mov
jmp
in
lea
pop
(bad)
je
inc
call
mov
and
push
xchg
mov
inc
sbb
cmp
inc
sbb
sbb
and
fdivrp
sub
mov
sub
dec
scas
repz
or
ins
push
push
das
mov
sbb
xchg
dec
push
push
pop
mov
push
paddusw
dec
mov
cmc
xor
xor
mov
div
lods
cmp
out
add
mov
clc
sbb
mov
fsubr
pusha
push
pop
arpl
sbb
test
pop
jo
arpl
jno
call
(bad)
pop
jge
pop
push
add
std
xchg
js
retf
pop
add
ins
jle
ds
xor
sub
bound
leave
retf
inc
push
pop
ret
jmp
dec
(bad)
shl
(bad)
icebp
sbb
mov
test
cmp
fisub
jg
xor
sahf
jp
jo
pusha
jle
gs
call
and
or
xchg
jl
adc
dec
je
hlt
dec
repz
(bad)
fdiv
and
jge
lods
push
loope
add
stc
std
xor
fcmovnb
fwait
imul
sbb
or
or
jne
sub
inc
popa
aad
cmp
push
pop
ins
jmp
inc
mov
fstp
(bad)
mov
idiv
movs
repz
jne
fs
cs
jno
mov
test
mov
popf
pop
xor
pop
out
pop
cld
fsubr
inc
into
add
stos
sbb
push
inc
and
stc
pop
mov
push
test
xlat
fistp
addr16
(bad)
push
iret
sbb
rol
xor
push
mov
(bad)
jbe
ja
push
loopne
test
mov
dec
pop
jge
call
fwait
sbb
or
pushf
or
je
sbb
rcr
outs
and
icebp
xor
push
xlat
pop
loopne
rol
pop
xor
mov
dec
hlt
add
or
(bad)
retf
cmps
pop
sub
xor
scas
add
dec
push
jg
in
lds
mov
out
push
xor
fnstenv
push
dec
mov
mov
sahf
movs
cmp
sbb
addr16
push
add
arpl
mov
xchg
mov
ror
push
mov
sbb
dec
sub
add
mov
pop
jo
jmp
sbb
add
je
sub
inc
ins
add
cli
pop
sub
push
cmp
and
or
inc
inc
cld
and
jmp
in
ror
data16
(bad)
jno
shl
test
adc
ret
movs
aas
add
sti
das
or
xor
mov
add
test
cli
cmp
gs
cld
shl
xchg
dec
(bad)
hlt
mov
cdq
dec
enter
je
sbb
push
ins
pop
outs
ins
cmc
push
loope
pop
xchg
aad
mov
daa
push
arpl
pop
cmp
lea
jge
cmps
aam
leave
aaa
(bad)
fucompp
mov
scas
xchg
ja
mov
add
repnz
(bad)
imul
std
lock
(bad)
or
sub
inc
lods
lahf
mov
mov
mov
je
jmp
test
mov
in
mov
call
movs
adc
jne
mov
sub
push
out
out
mov
shl
cmp
in
or
dec
aas
ds
mov
out
test
mov
sar
call
aas
lods
mov
mov
push
aad
test
mov
shl
retf
rcl
inc
into
popf
xor
loop
push
lods
nop
lods
xchg
call
inc
ins
inc
mov
adc
sar
jl
cwde
out
mov
jns
push
push
xor
jae
cmp
push
icebp
popf
pop
sub
data16
inc
pop
cmp
cmps
inc
mov
xlat
mov
adc
outs
xchg
jecxz
xor
sbb
add
daa
pop
xchg
cmp
mov
push
sti
fs
adc
and
out
mov
ins
call
std
(bad)
imul
pop
imul
lock
jnp
push
jb
mov
inc
cdq
mov
and
test
sub
xchg
ins
push
(bad)
test
and
into
into
pusha
in
cdq
mov
ins
mov
or
std
push
mov
cmp
xchg
sar
cwde
push
and
push
sbb
cmp
push
ret
dec
mov
imul
mov
push
xor
cwde
mov
xor
inc
arpl
aam
ja
inc
(bad)
jno
retf
push
pop
xchg
push
ss
shl
lahf
mov
ds
xor
in
rol
dec
add
fidivr
out
repz
sub
dec
push
out
psubq
fld
jmp
movs
cmp
ja
mov
sub
dec
mov
fisttp
cld
xor
scas
xchg
xchg
imul
cmp
mov
cdq
jno
retf
dec
(bad)
aad
adc
sub
cmp
aam
push
jnp
sub
jle
scas
in
jae
call
dec
in
adc
cmc
push
mov
push
sbb
inc
inc
add
repnz
mov
stc
sti
ret
pop
jno
(bad)
adc
popa
addr16
adc
jmp
addr16
mov
lea
mov
pop
cmc
into
inc
clc
xlat
jg
dec
and
scas
or
and
ja
div
retf
in
cld
inc
in
call
mov
lea
or
out
add
mov
fcom
xchg
repz
and
jnp
sbb
in
ficomp
cmp
jmp
call
cld
pop
dec
out
adc
mov
or
dec
or
loopne
push
add
cli
xor
xchg
jno
xchg
push
jnp
xchg
xchg
shl
jg
jno
add
loop
jmp
in
adc
jl
push
test
push
(bad)
xor
mov
xchg
in
mov
sbb
(bad)
test
(bad)
push
dec
aas
fwait
imul
adc
fldpi
cmp
jle
cmp
sub
daa
clc
mov
das
cli
cmp
xor
mov
fiadd
test
out
leave
in
in
enter
test
adc
dec
mov
idiv
dec
(bad)
sub
cmp
pop
mov
and
push
shr
mov
and
xor
inc
(bad)
in
jg
inc
stc
sub
out
leave
loopne
adc
xor
je
es
mov
call
xor
movs
xchg
mov
adc
mov
push
xchg
xor
(bad)
(bad)
mov
dec
push
mov
not
pushf
mov
sbb
jnp
xchg
pop
dec
(bad)
fnstsw
add
add
fiadd
jns
add
push
into
push
inc
and
mov
or
cmp
mov
test
lahf
ret
lods
adc
into
das
adc
mov
mov
call
ret
aas
pop
jmp
push
mov
inc
xor
xchg
jae
stos
push
cmp
retf
mov
mov
das
popa
popf
loop
mov
mov
call
loopne
cmp
xor
(bad)
mov
jp
and
rol
adc
cmp
popf
jg
les
adc
or
aas
mov
das
pop
cwde
mov
push
enter
sbb
jae
xor
in
fdiv
or
repz
jno
imul
pushf
stos
mov
sbb
jmp
lahf
test
das
ins
jo
sub
fisub
outs
inc
ror
pop
mov
pop
loop
imul
push
dec
jmp
mov
ret
in
mov
pop
dec
pop
sbb
mov
mov
fidivr
mov
in
push
lods
std
dec
lods
outs
and
ja
mov
enter
cmp
cmp
popa
jae
fisubr
push
out
(bad)
fdiv
repz
cmp
in
std
lods
call
or
lds
in
jbe
fs
js
mov
sub
fist
push
jmp
stc
inc
shl
adc
sbb
leave
pop
xor
and
loop
adc
data16
cwde
push
or
dec
inc
mov
cmps
cmp
call
or
pop
movs
mov
das
adc
fucomi
in
in
jl
xchg
cmps
pop
aam
pop
cmp
in
push
clc
pop
or
sti
and
div
(bad)
cli
cmp
mov
data16
movs
ror
mov
xor
js
dec
dec
jae
add
push
sbb
movs
adc
xor
dec
js
adc
jae
and
leave
sub
mov
int3
pop
int
dec
pop
sahf
(bad)
xchg
loope
add
bound
mov
sbb
fcom
fnstsw
xlat
repz
sub
call
into
or
inc
xor
xor
in
imul
pop
ja
inc
jecxz
push
sub
cld
sti
jmp
sub
loope
and
jl
cmp
jge
cmps
cmp
fst
fnstsw
pop
pop
scas
jp
add
clc
inc
pmulhw
mov
and
xor
imul
cmps
xchg
std
mov
inc
(bad)
fild
push
fwait
shl
xchg
add
js
into
jmp
nop
lods
jmp
pushf
js
inc
(bad)
addr16
mov
cli
xchg
out
dec
adc
inc
(bad)
adc
cmp
sub
inc
shl
add
movs
in
out
int
push
sbb
fpatan
cmp
das
test
mov
add
inc
adc
jp
sbb
stc
push
jbe
jle
sahf
pop
ins
sub
aaa
xor
push
retf
or
aaa
fisubr
sbb
retf
mov
shl
mov
jecxz
push
pop
stos
test
fwait
adc
retf
imul
push
xor
pop
xor
xchg
bound
xchg
ds
or
fdivr
in
(bad)
xchg
sbb
scas
jmp
enter
jmp
inc
mov
fnstenv
jg
dec
xor
add
fnsave
dec
add
addr16
icebp
daa
xor
aas
bound
and
push
sbb
popf
imul
stos
pop
imul
mov
mov
mov
lds
jp
mov
push
pop
sahf
imul
dec
xor
or
lods
(bad)
pop
jmp
mov
or
push
imul
jp
push
inc
ret
add
jmp
and
lock
and
int
fild
jno
movs
mov
icebp
adc
xlat
jnp
mov
retf
call
shr
cdq
fstp
push
mov
pop
sub
mov
dec
ss
sti
aaa
dec
mov
dec
(bad)
imul
jmp
adc
sahf
add
dec
adc
pop
(bad)
cwde
pop
cmc
or
in
jge
lods
fbstp
movs
or
not
cmp
sub
pop
hlt
mov
jle
stc
cli
push
out
xor
jae
shr
iret
sbb
push
fild
loop
(bad)
xor
arpl
mov
xchg
add
sar
pop
push
fstp
cmps
mov
arpl
popa
in
in
dec
popa
push
movs
cmp
jnp
fcomip
push
push
jg
out
jnp
xchg
pop
(bad)
inc
mov
jae
out
cmp
dec
sub
xchg
popf
add
(bad)
into
clc
mov
ror
sbb
cmps
push
push
adc
jl
cwde
(bad)
popa
in
mov
sbb
sbb
rol
cmp
ror
movs
das
mov
dec
jae
lock
sub
(bad)
jg
lock
cld
cmp
ja
or
dec
and
pop
dec
add
sbb
add
push
icebp
push
push
jmp
cwde
out
ja
xchg
popa
cmp
repnz
in
push
and
outs
mov
pop
sbb
loop
cmc
out
retf
scas
inc
sbb
xor
fist
xchg
dec
ja
retf
cmp
sub
cli
jl
(bad)
stc
retf
pop
sti
cmps
add
or
mov
push
jp
movs
sbb
sahf
add
gs
(bad)
leave
xchg
mov
xchg
sbb
jo
adc
pusha
jp
push
or
dec
sbb
xchg
cmp
imul
scas
pop
int3
xchg
cmp
inc
rol
in
into
inc
gs
jmp
pop
out
enter
fcomp
retf
adc
ret
mov
test
and
das
mov
adc
pop
and
cli
xchg
mov
dec
add
into
fistp
lds
pop
sbb
mov
pop
cmc
je
sub
inc
mul
pop
push
(bad)
mov
(bad)
cmp
es
scas
jns
or
leave
int
scas
repz
outs
fldcw
mov
xor
stc
mov
push
int
icebp
loopne
or
inc
lea
adc
movs
repz
aam
dec
xor
shl
addr16
aam
xchg
outs
stos
or
sbb
or
sub
mov
into
mov
xchg
into
in
ror
pop
push
jg
adc
push
and
leave
ins
dec
sahf
pop
ss
inc
pop
xor
cmp
loop
sub
cmp
lods
sahf
pop
or
adc
adc
cmp
ret
rcr
in
xchg
in
popa
pop
retf
mul
(bad)
sub
mov
and
idiv
cmp
push
aas
push
mov
dec
add
cmp
push
stc
in
dec
das
scas
mov
test
cmp
pop
loop
popa
out
adc
scas
jmp
xor
mov
cmp
jae
js
test
(bad)
cmp
into
or
mov
popf
push
push
ret
mov
repz
in
or
push
jae
pop
mov
add
cmp
mov
in
(bad)
(bad)
push
and
in
and
les
jmp
or
pop
inc
inc
pushf
jg
adc
ror
pop
pop
out
test
adc
pop
arpl
sub
mov
mov
sbb
xchg
sub
dec
mov
leave
mov
xor
jns
cmp
scas
and
cmp
popa
lock
sub
or
push
pop
cmp
enter
xor
scas
xlat
sbb
cs
outs
xchg
mov
mov
jne
lea
inc
dec
jno
test
jmp
loope
cs
shl
mov
call
dec
(bad)
pop
pusha
inc
sti
scas
mov
jnp
pop
cdq
xchg
cmps
fld
daa
inc
lods
(bad)
mov
xor
lahf
fild
es
xchg
rcl
dec
hlt
mov
and
in
mov
adc
call
iret
cld
pop
jmp
add
sbb
lea
sahf
(bad)
push
sub
cmp
inc
jge
(bad)
jecxz
jecxz
aad
loope
mov
ds
test
mov
pop
stos
or
in
ficom
xchg
sahf
cmp
pushf
(bad)
out
pop
aam
std
sar
mov
sahf
in
jnp
je
push
mov
or
push
fwait
clc
rcl
repz
cmp
dec
cli
inc
int3
cmc
mov
mov
pop
in
aad
nop
jno
jle
sub
jo
push
ds
(bad)
xor
inc
jp
fimul
and
mov
pusha
sbb
out
pop
jl
cwde
inc
adc
imul
sub
add
test
cs
push
ret
nop
inc
test
and
iret
mov
icebp
adc
sub
mov
mov
cmp
sub
std
and
rcr
test
mov
and
cwde
dec
xchg
inc
in
adc
xchg
cmp
push
not
push
(bad)
(bad)
sub
ins
cmp
jns
fnsave
dec
lds
and
or
in
jle
pop
pop
aaa
inc
stc
jo
pop
hlt
movs
repz
pop
adc
adc
mov
cmp
test
daa
outs
fiadd
mov
(bad)
pop
cmc
call
inc
and
mov
and
jne
fimul
and
mov
js
mov
mov
xor
mov
mov
cwde
out
add
mov
xlat
rcl
scas
mov
adc
int3
push
mov
xor
push
cmp
mov
dec
push
jp
lods
or
inc
jg
pop
mov
adc
xor
fcomp
shr
icebp
lock
cmps
or
movs
movs
dec
(bad)
faddp
call
adc
pop
mov
(bad)
xor
sub
cld
cmp
adc
inc
pop
xor
push
mov
or
mov
mov
push
retf
and
dec
add
int3
lods
mov
lock
sbb
mov
sub
add
jge
adc
rol
pop
mov
mov
ror
ret
dec
ret
jge
mov
data16
jg
dec
jns
rcr
pop
mov
int
or
into
and
popa
or
pop
popf
out
push
leave
dec
sbb
inc
(bad)
mov
add
mov
mov
mov
loope
fcomp
fidiv
jge
out
je
dec
shl
cdq
mov
cmps
sbb
push
jg
push
div
jmp
mov
xchg
mov
cmp
shr
fwait
rol
pop
fidivr
iret
stos
outs
ret
lods
scas
stos
outs
or
cmp
adc
add
xchg
xor
mov
sub
jo
add
or
test
ret
inc
js
jecxz
pop
adc
pop
loope
pop
popf
(bad)
push
and
inc
adc
jne
mov
ss
inc
lds
fidivr
cmp
(bad)
fcom
sar
jge
fld
call
cs
test
add
pop
hlt
cmp
fdivr
fild
pop
(bad)
out
movs
rol
mov
mov
push
mov
xor
nop
inc
imul
aas
or
je
and
cld
ss
inc
push
cli
movs
jmp
sbb
out
into
jmp
mov
out
jge
(bad)
ret
or
cs
(bad)
mov
inc
mov
mov
aam
mov
xor
jmp
xchg
adc
ret
mov
sub
sti
mov
mov
mov
ret
mov
mov
in
shl
xor
cmps
movs
jnp
push
xor
xchg
push
sub
(bad)
stc
ja
enter
lea
pop
xchg
push
clc
cli
pop
add
add
adc
into
(bad)
sahf
shl
pop
jo
aad
add
add
sub
or
retf
push
inc
dec
jecxz
fneni(8087
into
js
sbb
or
inc
js
dec
(bad)
push
cdq
inc
call
inc
imul
fst
xor
cmp
out
mov
adc
push
pop
cs
hlt
xchg
lock
jmp
test
hlt
sub
xlat
inc
push
or
movs
jge
pop
rol
adc
add
std
dec
dec
jnp
mov
cmp
pop
mov
ja
xchg
xor
inc
inc
aas
jmp
mov
int3
ss
in
sbb
(bad)
ficomp
push
sub
and
cld
and
mov
adc
div
sub
xor
pop
pop
ss
pop
pop
inc
cmps
or
(bad)
scas
mov
cmp
mov
(bad)
lea
into
scas
mov
add
push
aas
inc
pop
je
pop
xor
test
jbe
out
cmc
and
hlt
test
jo
cmp
mov
into
outs
stos
jo
mov
jl
push
mov
test
inc
mov
shl
mov
mov
stc
call
sub
jae
lods
call
loopne
jns
pusha
mov
and
push
mov
mov
mov
(bad)
leave
jl
test
push
add
cld
pop
sbb
ret
das
in
leave
cli
jo
jg
push
jp
and
push
mov
push
push
js
(bad)
repnz
pop
cmps
ss
mov
sub
outs
ins
gs
pop
adc
dec
cld
hlt
je
stc
repz
mov
mov
cld
or
or
lods
push
xor
(bad)
adc
cmp
fcmovnb
dec
popa
call
adc
in
jae
test
call
adc
dec
(bad)
mov
pop
cmp
out
call
dec
scas
fdivrp
pop
cwde
fcomp
mov
xchg
stc
dec
sti
jno
ins
and
xchg
sbb
ret
xchg
mov
mov
pushf
xchg
mov
movs
cdq
in
dec
mov
and
aaa
ds
jno
repz
sahf
push
outs
jmp
and
mov
mov
mov
es
sbb
xchg
adc
fisubr
add
mov
mov
retf
jecxz
cmp
cdq
dec
pop
add
mov
sub
jg
aas
mov
int
loope
pop
sbb
sbb
fld
std
pushf
mov
cmp
dec
inc
dec
sub
xor
jmp
dec
jg
cmc
sub
shr
xor
loop
mov
or
push
dec
jnp
xor
leave
mov
cwde
fldcw
or
jb
xchg
jg
fidiv
dec
fsubr
push
outs
push
sub
lods
aas
out
mov
jbe
xchg
push
xchg
jle
push
fild
ja
mov
ja
mov
adc
push
ins
cmp
mov
add
out
repnz
mov
sub
nop
jge
sbb
sbb
xchg
mov
repnz
cmp
(bad)
or
xchg
lds
jmp
fild
jmp
jl
cmp
das
jbe
add
cmp
ficomp
and
cwde
in
jp
cld
jg
fwait
push
pop
add
aad
(bad)
das
inc
mov
pop
mov
and
sar
sbb
clc
push
add
iret
mov
mov
sbb
hlt
call
pop
cmps
dec
je
pushf
icebp
sbb
fldl2t
jbe
stos
jg
iret
dec
rcl
shr
ret
es
js
push
(bad)
push
mov
pop
xor
xchg
cli
mov
dec
out
call
int
loopne
push
fcmovbe
adc
loope
(bad)
cmp
call
aam
fld
and
inc
popa
mov
sub
cmps
dec
add
adc
add
(bad)
in
pop
dec
push
push
inc
push
push
add
icebp
add
mov
xor
push
jecxz
pop
pop
enter
add
mov
test
push
das
sub
xor
xor
jp
mov
das
(bad)
xor
jno
bound
pop
(bad)
stc
mov
lahf
jb
cmp
pushf
fisub
(bad)
rcl
ins
pop
(bad)
push
xchg
scas
adc
sahf
mov
outs
retf
cmps
add
ret
push
int
push
into
das
inc
les
stos
(bad)
arpl
inc
into
adc
mov
xor
sub
inc
jmp
push
movs
jne
mov
nop
mov
and
pop
aam
mov
into
or
push
adc
xor
xor
cmp
mov
arpl
rcl
add
sbb
loopne
mov
sbb
clc
mov
outs
(bad)
xchg
cmc
xchg
xchg
mov
add
pop
and
xchg
dec
dec
dec
fstp
iret
mov
fsubr
jbe
xchg
ror
in
mov
or
inc
clc
cdq
div
inc
or
sbb
bound
pop
pop
sbb
mov
cmp
cmps
mul
push
dec
inc
jmp
sub
cmp
ror
mov
ficomp
(bad)
sbb
in
add
sub
aam
mov
mov
(bad)
inc
imul
dec
sub
rol
sbb
mov
xchg
ror
jecxz
adc
iret
and
dec
push
push
or
xchg
mov
push
push
cli
or
mov
fwait
mov
movs
sub
loopne
inc
add
cs
leave
push
outs
mov
sub
gs
push
and
inc
cmc
adc
xor
cmp
inc
js
mov
pushf
fs
xor
jl
add
xchg
(bad)
mov
jb
stc
cmps
call
pop
in
xchg
xor
or
lods
lods
les
ins
add
in
int
adc
cmc
cmp
aad
shl
sbb
add
call
in
enter
jge
and
fisub
cdq
icebp
mov
push
or
or
or
(bad)
adc
js
in
add
dec
or
jbe
mov
call
push
push
dec
push
dec
sbb
cld
in
adc
cmc
jno
daa
jg
mov
mov
cmps
xchg
mov
imul
mov
rcr
dec
xor
int3
jle
xlat
mov
push
mov
push
fcmovnbe
pop
xchg
add
movs
rcr
test
data16
(bad)
and
scas
cmp
mov
sub
clc
inc
(bad)
je
or
test
dec
dec
cmps
xor
cmps
(bad)
outs
div
or
inc
out
xor
pop
in
dec
bound
aaa
dec
fs
pop
push
pop
loope
test
push
retf
inc
sbb
mov
pop
add
bound
movs
jge
cdq
mov
inc
icebp
ror
cmp
stos
adc
or
jae
jns
or
std
pop
adc
xchg
dec
ins
fmul
and
jge
ss
outs
into
sar
shr
bound
and
mov
add
push
mov
clc
or
jp
nop
pop
adc
leave
mov
or
dec
gs
data16
dec
ds
sbb
sahf
xor
xchg
popa
push
jbe
inc
fiadd
dec
(bad)
in
nop
out
mov
int
lea
add
outs
cmps
cmp
push
lds
dec
shl
or
xchg
aad
mov
stc
and
clc
dec
scas
adc
movs
inc
jmp
loopne
jb
repnz
leave
jno
mov
test
hlt
xchg
loopne
(bad)
mov
sbb
lea
mov
push
arpl
ins
pop
push
je
adc
mov
shl
lahf
rol
push
adc
dec
fimul
lock
sti
imul
pop
xchg
aam
dec
sbb
cmps
icebp
popf
jns
pop
adc
jo
rcr
xor
ins
test
cli
in
dec
mov
jmp
ficom
dec
mov
mov
iret
mov
ds
enter
aaa
jecxz
mov
sbb
jecxz
outs
rol
push
pop
neg
aam
sbb
cs
xchg
mov
ror
mov
xor
daa
xor
add
retf
retf
jge
xor
call
(bad)
or
mov
or
out
lahf
inc
sbb
push
jecxz
add
mov
lahf
loop
in
mov
mov
push
cwde
jge
push
fwait
movs
test
test
aad
mov
dec
in
ds
(bad)
jg
in
xchg
inc
repnz
mov
sub
(bad)
sti
jl
cmp
lds
(bad)
xor
adc
pop
outs
out
mov
clc
movs
ret
fadd
xchg
leave
sbb
xor
sbb
(bad)
lahf
push
fild
xor
ret
sub
int
pusha
pop
adc
fwait
stc
sbb
cmp
or
lods
in
(bad)
daa
xor
fisub
inc
push
dec
iret
icebp
pmaddwd
movs
mov
sbb
pop
pop
xchg
sub
loope
pop
call
lods
(bad)
mov
test
(bad)
fsubr
fistp
sbb
stc
mov
in
cli
es
and
sub
jo
push
xchg
jecxz
(bad)
adc
es
xor
ficom
jo
(bad)
xor
out
mov
xor
xchg
inc
push
outs
mov
push
mov
mov
jl
ins
fs
or
sub
ins
sbb
cwde
ror
ror
and
xchg
ins
adc
inc
mov
jg
ins
cli
jns
dec
fwait
gs
fdivr
pop
sub
adc
mov
outs
mov
call
cmp
retf
dec
mov
push
aam
fs
cmps
xchg
mov
popa
shl
mov
mov
aam
scas
sbb
push
jne
es
out
or
lahf
xor
push
push
sub
repz
fimul
int
rcl
jbe
jle
imul
push
mov
mov
jne
mov
sub
pop
mov
sbb
mov
dec
dec
mov
adc
stos
dec
and
icebp
cmp
das
shr
imul
fisub
rcl
lahf
fistp
int
js
sar
xchg
aaa
xor
mov
pusha
jle
mov
mov
popa
es
push
mov
stos
scas
cli
sbb
push
jl
stos
inc
adc
out
push
pusha
dec
aam
inc
push
test
mov
sub
mov
adc
cli
(bad)
and
add
dec
stc
pop
cmp
xor
lock
(bad)
loopne
mov
les
outs
push
dec
cdq
xchg
xchg
push
push
jo
stos
cs
not
in
inc
xlat
dec
sar
pop
dec
shl
dec
mov
fs
shr
fst
lea
pushf
bound
aaa
jg
add
fs
add
inc
sub
adc
cld
in
mov
fwait
cmp
dec
mov
fistp
div
scas
cdq
xor
inc
idiv
xchg
dec
or
lods
adc
push
lods
jb
popa
cld
(bad)
bound
pop
(bad)
stos
ficomp
jmpw
or
(bad)
mov
inc
in
adc
in
mov
cmp
sub
pop
mov
les
or
jb
call
sub
test
mov
jnp
dec
(bad)
leave
outs
test
js
es
push
cli
dec
and
pop
jbe
imul
cli
adc
jmp
or
and
push
jmp
fwait
dec
inc
leave
iret
out
xor
push
jmp
ret
xchg
cmc
jae
retf
loope
xlat
mov
add
add
es
cmp
dec
inc
cmps
inc
xchg
xchg
xlat
mov
rol
or
mov
dec
jle
push
ins
imul
mov
cmp
mov
push
movs
mov
jne
push
or
cmp
jecxz
or
jne
fdiv
xchg
sbb
test
or
xchg
jmp
icebp
push
shr
jne
arpl
setge
loop
inc
jb
push
push
mov
xor
loop
cmp
imul
inc
jmp
les
jle
sbb
push
out
lea
in
jle
add
(bad)
adc
inc
mov
dec
pop
cld
sbb
ins
aas
mov
xchg
(bad)
mov
call
out
pop
xchg
sbb
into
push
jae
adc
popf
icebp
fstp
and
mov
and
pop
fnstenv
mov
shl
adc
lahf
hlt
or
xchg
mov
into
ret
mov
bound
(bad)
or
in
sbb
cmp
mov
out
dec
ins
push
inc
aam
mov
sahf
cmc
aaa
fmul
mov
loopne
xchg
push
sti
or
retf
jle
cmp
adc
inc
jnp
add
push
jb
cwde
push
sub
dec
stos
mov
mov
sbb
scas
fstp
dec
fs
ins
stos
mov
ja
sbb
mov
addr16
test
add
pop
test
test
adc
push
jbe
pop
pop
mov
cmps
cmp
cmps
pop
into
mov
imul
jecxz
jmp
fimul
in
ror
call
push
xor
add
dec
add
cmps
dec
xchg
out
enter
out
cwde
adc
adc
lods
mov
sub
sub
pop
test
sub
mov
loopne
ffree
sub
test
repnz
aas
jb
or
lea
mov
rcr
dec
adc
les
and
sbb
ror
(bad)
push
sbb
push
xchg
imul
fistp
xor
fimul
test
std
sub
in
adc
xor
cmps
dec
sahf
nop
jb
inc
pop
fwait
mov
mov
mov
mov
push
test
js
lods
stc
addr16
jmp
(bad)
push
inc
ficom
sub
in
dec
shl
adc
imul
enter
das
retf
(bad)
cli
xchg
cld
inc
iret
adc
pop
push
lock
push
stos
xchg
xchg
addr16
push
fcomp
mov
xor
pop
out
mov
cmp
das
push
test
mov
lock
cs
pop
add
xchg
leave
pop
jo
leave
mov
pmaxub
dec
popa
loopne
push
jnp
adc
mov
dec
arpl
outs
add
xchg
add
jne
std
fld
add
into
jne
enter
xchg
movs
push
mov
sub
stos
mov
dec
and
imul
push
neg
pop
add
fcomp
adc
shl
or
sti
adc
inc
push
cmp
leave
cmp
pop
lss
out
loope
or
jne
in
mov
jbe
xchg
xor
retf
cdq
lea
fdiv
pop
cmp
push
pop
mov
sti
mov
test
inc
stc
add
xchg
sahf
rcr
jns
xchg
inc
call
cwde
mov
fimul
inc
test
xor
in
leave
mov
aad
sahf
enter
sub
or
inc
xchg
loope
xor
jo
retf
push
and
mov
pop
leave
jae
mov
(bad)
inc
adc
sbb
mov
rcr
scas
cmp
add
aad
inc
daa
jge
jmp
inc
and
or
push
shl
push
(bad)
ss
push
add
cwde
sahf
dec
push
or
and
fcom
push
mov
cmps
movs
push
mov
adc
outs
sbb
pop
into
add
jl
inc
pop
ror
shl
add
and
stc
adc
outs
jne
fsubr
fstp
ja
cld
and
arpl
sbb
add
dec
ins
adc
dec
inc
retf
sti
loope
outs
stos
xor
push
arpl
sar
leave
and
popf
add
test
xchg
or
mov
mov
mov
call
pop
ror
iret
js
inc
in
imul
ret
addr16
jg
in
mov
adc
mul
rol
sbb
and
adc
mov
fwait
repnz
cs
mov
iret
xchg
xor
ret
aad
imul
fdiv
repz
outs
sbb
fistp
fldenv
dec
aas
jbe
or
add
fdivr
dec
les
xchg
repnz
lea
or
or
imul
std
mov
sub
push
repz
loope
push
add
pop
mov
call
lods
cdq
mov
sub
in
adc
mov
jnp
into
cmp
outs
sbb
mov
retf
pop
ficom
mov
mov
jle
scas
xchg
adc
add
dec
mov
cmps
cmp
mov
xchg
adc
push
pop
stos
call
outs
inc
sub
jbe
pusha
repz
mov
pop
jle
and
and
in
daa
shr
js
inc
ret
add
pop
call
xchg
jnp
cmp
jecxz
jae
mov
arpl
call
fwait
and
jae
adc
and
add
and
in
cmp
xlat
dec
xor
and
aad
push
out
sub
and
dec
ins
lds
sub
in
imul
ds
ins
test
pop
sbb
jb
pop
scas
and
inc
test
xchg
imul
bound
aad
ins
out
mov
and
mov
call
aad
inc
sub
fidivr
mov
push
jnp
xchg
pop
pop
jmp
in
gs
adc
ja
cmps
outs
es
add
add
xor
leave
out
inc
loope
cli
push
rcr
push
pop
jg
and
int
int
dec
dec
retf
movs
(bad)
(bad)
jl
out
loope
popa
mov
dec
add
lods
outs
(bad)
inc
cli
icebp
add
fisub
loopne
fucomi
sar
ins
and
jmp
mov
movs
mov
cld
ins
(bad)
jb
iret
xchg
rcr
fwait
retf
test
enter
jb
iret
adc
outs
adc
jae
pop
cmp
adc
push
test
and
lock
jb
jp
inc
(bad)
repnz
jo
popa
movs
fwait
sub
ja
test
ins
aaa
mov
in
and
ins
mov
jno
mov
lock
das
fisubr
aam
(bad)
aad
or
add
inc
xchg
sbb
popf
dec
scas
daa
mov
mov
mov
aad
test
mov
retf
add
xchg
lea
sbb
mov
cmp
cmp
aas
push
inc
mov
cmp
jmp
xor
mov
cld
mov
push
and
inc
popa
inc
push
dec
push
pop
pop
adc
push
ins
sub
out
mov
inc
xchg
mov
in
leave
add
push
mov
inc
retf
inc
fsubp
jb
clc
ret
inc
loope
xchg
pop
sbb
jnp
popa
add
adc
into
xor
jle
mov
jae
push
jns
sub
jne
rcl
int
sub
and
popa
js
jle
mov
test
gs
sbb
out
or
sub
cmp
sub
cwde
prefetch
or
dec
and
mov
leave
mov
push
jge
cmc
nop
xor
out
xor
and
xlat
shl
test
jae
mov
add
(bad)
outs
dec
inc
adc
pop
clc
ret
xor
cmp
push
jl
mov
cs
inc
fiadd
xor
push
add
ret
adc
aaa
jge
and
sub
pop
push
xchg
inc
js
xchg
sub
mul
mov
adc
mov
lahf
mov
hlt
iret
sub
and
sbb
int
xor
cwde
neg
fs
pop
dec
jecxz
dec
(bad)
pop
sbb
scas
pushf
pop
retf
push
jno
mov
(bad)
loopne
(bad)
fisttp
cmp
xor
mov
das
sub
mov
fcomp
cmp
mov
mov
dec
pop
pop
stos
inc
test
mov
mov
adc
aaa
or
aas
cdq
repnz
dec
dec
mov
inc
in
add
push
fild
fwait
lock
pop
aas
xor
xlat
retf
iret
or
cwde
retf
pop
ret
dec
loopne
rcl
xchg
sub
loop
pushf
enter
mov
pop
jmp
jae
aaa
mov
jb
ja
inc
mov
ret
pop
iret
sbb
icebp
cmps
test
or
(bad)
and
stos
push
(bad)
adc
leave
xor
shl
pop
and
xor
xchg
ret
jnp
mov
ficomp
cmc
xlat
cs
ins
cwde
xor
mov
pop
sub
outs
repnz
mov
lods
jae
pop
dec
leave
jmp
cmp
ret
fs
ss
sbb
dec
push
pop
jnp
mov
pop
retf
out
mov
mov
adc
add
dec
fcom
fidiv
(bad)
xor
dec
fs
mov
loopne
int
ja
and
fcomp
push
stc
bound
in
cmp
out
add
sbb
dec
sub
xchg
out
inc
ror
sbb
cmp
js
scas
xor
(bad)
aad
cmps
mul
or
and
call
dec
mov
scas
sbb
ds
arpl
fs
pop
xchg
ret
test
dec
scas
xor
sahf
xchg
cmp
lods
cld
cmp
sar
(bad)
daa
retf
aaa
fist
je
and
pushf
pop
shl
std
inc
sbb
or
cmp
xchg
adc
gs
xchg
dec
(bad)
ret
movs
je
retf
jmp
popa
sub
jmp
xchg
in
fbstp
push
sbb
fs
mov
dec
push
mov
mov
sbb
lock
shr
push
loopne
vpackssdw
in
xchg
inc
into
lea
adc
add
and
xor
jmp
sti
or
xchg
subps
inc
nop
mov
xchg
jo
out
add
xchg
mov
out
jne
cmp
pop
pop
outs
adc
daa
iret
rol
lds
(bad)
sahf
in
xchg
(bad)
jg
jnp
jle
jmp
loopne
fild
or
inc
mov
jl
mov
(bad)
jp
sbb
and
lock
scas
sub
sub
lahf
jmp
out
xchg
dec
mov
jle
ins
sub
retf
mov
mov
add
jnp
push
jnp
and
or
push
xchg
out
mov
hlt
in
out
mov
adc
jmp
stc
mov
fyl2x
pop
or
jns
imul
addr16
mov
test
outs
dec
push
adc
inc
or
adc
jg
sub
jle
dec
leave
scas
(bad)
cmp
jnp
add
or
lock
mov
xor
jg
and
adc
sbb
cmp
inc
aas
sbb
sub
jecxz
test
je
stc
rcr
lahf
xor
sbb
push
and
and
retfw
xchg
inc
sahf
enter
rcl
ds
mov
idiv
(bad)
hlt
add
in
or
mov
pop
sub
add
int
mov
retf
add
sbb
pop
xor
test
sahf
adc
jmp
ror
dec
inc
jle
cdq
sub
stc
scas
shl
jge
in
fild
xor
fadd
xchg
jno
rcl
scas
dec
in
sub
and
sub
int3
ss
fidivr
sti
enter
les
mov
sub
popf
or
push
in
popa
imul
and
pop
icebp
mov
fdiv
arpl
stos
mov
imul
or
loopne
push
hlt
jmp
mov
or
jo
mov
test
cmc
xchg
mov
mov
ins
dec
(bad)
jg
and
ins
loope
push
ss
pop
bound
mov
add
sbb
movs
xor
cmc
lods
movs
xor
cdq
inc
popa
in
ja
ss
add
mov
jmp
fsubr
push
imul
mov
pop
push
xor
xchg
and
les
push
sbb
mov
hlt
sbb
push
out
aad
mov
pop
aad
lds
dec
sub
mov
call
jmp
and
wrmsr
icebp
imul
aam
pushf
sbb
sbb
cwde
push
test
jb
sub
ror
xor
ins
jecxz
jmp
cmp
mov
xchg
xchg
test
pop
jecxz
xchg
push
mov
fisubr
lea
pop
dec
inc
ds
adc
je
pop
and
mov
loopne
pop
mov
inc
(bad)
mov
aam
ds
adc
les
and
data16
jb
rcr
not
pop
or
add
mov
icebp
pop
mov
cli
mov
movs
shl
cdq
cmps
add
pusha
mov
scas
fbld
inc
out
cwde
aad
(bad)
pusha
mov
popa
ins
neg
mov
mov
mov
ret
push
cmp
lahf
mov
xchg
mov
retf
mov
jmp
cmp
shr
cwde
lds
call
sbb
sub
add
enter
add
fsub
loope
sbb
sti
sbb
retf
arpl
sub
or
out
push
sub
stos
cmp
push
(bad)
stos
int
les
cs
jmp
adc
mov
daa
push
add
enter
mov
fsubr
mov
je
mov
add
mov
dec
jnp
loope
jbe
pop
sbb
add
ins
push
outs
jl
shl
mov
jns
mov
fnstenv
out
outs
loopne
add
inc
inc
push
pop
idiv
in
add
(bad)
dec
test
jecxz
mov
mov
and
jp
cpuid
or
ds
push
loopne
mov
push
jge
aaa
inc
scas
adc
imul
(bad)
int
hlt
mov
pop
outs
sbb
(bad)
cmp
das
mov
sar
cmps
adc
fsub
push
and
int3
inc
inc
dec
xor
loope
pop
adc
jne
jmp
test
pop
mov
push
pop
test
push
(bad)
fistp
push
jle
in
loopne
xchg
mov
push
dec
push
push
mov
xor
test
xor
out
mov
repz
and
daa
loopne
fidivr
mov
mov
and
or
pusha
mov
repz
adc
xchg
cwde
cmp
inc
and
fcomip
cmps
icebp
mov
repz
push
std
int
xor
push
xchg
scas
dec
addr16
pop
mov
or
xchg
xor
or
cwde
cmp
pop
rol
(bad)
test
outs
and
loop
push
rcr
pusha
pusha
jnp
(bad)
and
xchg
push
in
mov
int
(bad)
jp
jle
mov
cmc
movs
xchg
cs
(bad)
mov
movs
add
imul
push
sub
add
stos
shl
jmp
bound
xchg
mov
xchg
mov
mov
adc
rol
clc
retf
retf
or
sbb
sbb
fdivr
fbld
add
inc
xor
fldenv
repnz
fldlg2
jp
pop
pop
mov
add
cmp
add
sahf
mov
cdq
(bad)
fsubr
xchg
ja
pop
test
push
in
add
nop
dec
sahf
mov
retf
shl
ja
pop
cmp
cmp
and
sbb
shl
jno
jmp
shl
jg
sbb
jmp
or
retf
add
out
iret
add
call
(bad)
cmps
inc
or
aam
jle
mov
jl
xchg
lods
sub
call
adc
out
jnp
mov
sub
mov
mov
jl
lock
popf
int
push
fucomip
lock
jb
add
cmp
aam
stc
fdivr
and
mov
adc
jns
jmp
push
ss
cmp
mov
jg
in
push
stos
inc
stos
add
mov
ret
mov
push
ins
and
fsubr
mov
adc
mov
add
or
das
xor
bound
dec
push
and
scas
ins
hlt
sub
jno
and
cld
lds
lea
jl
aad
inc
ja
popf
enter
sti
sub
arpl
mov
push
jno
inc
imul
leave
dec
add
ss
scas
aas
inc
push
scas
xchg
scas
cs
outs
jne
push
sahf
fld
(bad)
fisub
fisub
scas
xchg
and
test
imul
sub
nop
outs
test
adc
ret
push
cmc
xor
lods
movs
data16
fstp
pop
ss
mov
test
icebp
jbe
fisttp
popa
xor
pop
pop
cmps
sub
movs
test
add
aaa
sbb
pushf
xlat
loopne
mov
dec
add
adc
add
sbb
push
lahf
bound
fisubr
jmp
ss
inc
cli
and
sbb
add
lea
push
out
pop
test
push
mov
repz
pusha
loopne
and
test
std
sbb
push
nop
nop
and
pop
aas
xor
add
pop
test
aad
imul
mov
sbb
xchg
push
lea
jecxz
inc
test
adc
add
aas
ins
or
push
scas
push
sbb
ds
and
pop
mov
sar
mov
fwait
push
leave
ins
xchg
fldenv
fistp
mov
out
push
sub
mov
mov
test
fisttp
ss
ins
in
cmp
mov
pop
or
(bad)
pushf
aam
pop
inc
ins
int
pop
or
in
test
adc
xchg
cwde
add
sbb
scas
jmp
iret
cmp
pushf
cmp
pop
aam
iret
lods
rol
repz
fiadd
sti
(bad)
or
das
sub
fs
jge
outs
out
repz
sub
mov
jp
fsub
rcr
push
dec
xchg
mov
shl
mov
nop
jbe
adc
push
inc
shr
leave
scas
xchg
jmp
mov
jp
test
adc
adc
leave
mov
push
mov
jne
push
mov
xchg
popf
mov
icebp
inc
(bad)
hlt
clc
(bad)
jge
pop
loopne
ficom
jmp
jg
or
pop
jmp
test
cli
mov
mov
scas
movs
test
xchg
mov
push
push
push
and
adc
xor
or
and
push
cmp
enter
cmp
cld
inc
push
fcmovbe
push
ret
add
pop
mov
dec
rol
cmps
push
jg
xchg
jbe
sbb
(bad)
jge
sub
and
push
adc
xor
sub
lods
sub
push
sbb
cli
shl
mov
sub
imul
sub
dec
pusha
scas
mov
mov
pop
cli
and
in
rol
push
(bad)
int
push
fcmovb
dec
pop
pop
(bad)
jg
add
jl
movs
sbb
adc
sub
fidiv
sub
mov
mov
sar
add
iret
and
adc
push
retf
imul
pop
fstp
add
daa
loope
adc
push
hlt
std
and
(bad)
stc
test
mov
cs
adc
hlt
pop
push
xchg
push
inc
dec
(bad)
mov
inc
cmp
jbe
outs
mov
mov
sbb
pop
or
mov
push
das
adc
bound
stos
repnz
xor
add
fiadd
inc
pop
push
arpl
dec
gs
les
push
fisubr
sbb
(bad)
mov
pop
popf
push
bound
sub
mov
xor
das
mov
rol
add
fnop
mov
test
loope
fwait
inc
add
gs
dec
pop
scas
and
xor
stos
add
inc
lods
dec
scas
test
call
fmulp
stc
gs
push
stc
xor
mov
(bad)
cmp
adc
lods
test
scas
(bad)
jo
pop
scas
pusha
repnz
sub
sbb
cld
outs
ret
xchg
fsubr
bound
fwait
je
aad
mov
outs
cmc
cmp
out
les
je
lock
push
cs
cdq
in
scas
add
(bad)
mov
data16
addr16
inc
cmc
sbb
cmp
mov
dec
push
push
push
ins
jae
psubusb
sbb
push
jg
mov
les
scas
pop
and
cld
test
sbb
xchg
mov
popa
cmp
cmps
pop
jmp
mov
xchg
or
xor
xchg
or
jnp
cli
ja
or
inc
mov
mov
add
sbb
or
lods
mov
je
aad
sbb
mov
pop
xchg
adc
in
sbb
gs
inc
(bad)
bound
and
je
aad
dec
out
jns
in
mov
dec
push
stc
out
inc
mov
add
sub
push
push
pop
add
pop
push
and
(bad)
push
aas
xor
in
push
mov
sub
dec
and
mov
adc
push
adc
add
jnp
outs
addr16
repz
jae
and
retf
lods
fbld
xchg
test
or
inc
sbb
dec
fsqrt
and
cmp
dec
dec
das
rol
sbb
fst
pushf
add
sbb
ret
fldcw
adc
xor
push
sbb
test
daa
jecxz
in
loopne
sbb
push
imul
in
outs
mov
stc
and
jo
xor
ror
jg
cmps
inc
lods
mov
xlat
test
aaa
inc
xor
jb
inc
sti
lea
nop
sbb
and
nop
in
fldcw
jl
mov
xor
sbb
mov
push
aaa
popa
dec
mov
add
jge
out
push
dec
in
nop
(bad)
ins
sbb
cmp
or
bound
xchg
push
jle
scas
scas
jecxz
mov
pop
push
mov
push
jmp
loop
mov
into
push
(bad)
mul
popf
jge
mov
fs
out
fwait
or
in
and
and
mov
mov
lds
xchg
dec
in
or
sub
sbb
std
xchg
sbb
push
in
pop
push
mov
jne
enter
pop
addr16
popa
movs
dec
fsub
(bad)
xlat
or
jo
icebp
xor
push
cmp
cmp
pop
cmps
popf
movs
mov
test
mov
scas
hlt
push
mov
fisubr
lods
adc
iret
add
sbb
pop
dec
or
xchg
(bad)
out
(bad)
jmp
pusha
push
cld
in
imul
lock
bound
mov
rcl
aas
inc
xchg
das
cdq
pop
push
dec
cmp
xchg
jg
cmp
xchg
ret
adc
aad
call
inc
shl
lds
sub
lock
sbb
cmc
hlt
mov
adc
aad
ja
pop
sbb
sub
mov
(bad)
xchg
ins
inc
push
sub
clc
shl
scas
adc
fs
and
int
xchg
push
test
shl
outs
fsubr
fild
ins
dec
or
mov
xchg
cmp
call
pop
imul
or
(bad)
mov
pop
and
push
(bad)
aas
pop
mov
mov
sub
mov
lods
dec
mov
dec
and
imul
popa
mov
scas
fistp
test
xchg
inc
fnstenv
adc
(bad)
jne
push
gs
xor
imul
adc
fcmovnb
(bad)
xor
mov
cmp
cli
mov
add
add
lods
jecxz
and
ror
or
cmp
sub
nop
sub
sbb
sbb
mov
xor
outs
ss
dec
mov
out
jmp
xor
mov
sbb
je
loope
rcr
cmp
and
or
sar
dec
cli
stc
in
xlat
pusha
cmp
mov
neg
adc
mov
dec
sub
pop
pop
add
adc
mul
stos
fadd
outs
pop
mov
adc
and
mov
dec
xchg
fcom
ins
rcl
push
inc
aad
fld
mov
mov
cmp
pop
movs
sub
cs
mov
cmp
mov
mov
imul
push
icebp
inc
pop
outs
jbe
out
inc
or
sbb
sub
or
int
scas
repnz
retf
add
sub
xlat
cmps
getsec
outs
icebp
icebp
sub
push
pop
mov
lock
mov
mov
cld
ins
mov
pushf
lea
xor
add
cmp
fldz
mov
mov
loopne
inc
and
mov
mov
aaa
xor
pop
jae
cs
jo
shl
movs
sub
test
(bad)
stos
test
int3
dec
pop
hlt
shl
cmp
push
inc
js
jae
or
cwde
lahf
xor
repnz
jnp
(bad)
sbb
adc
jecxz
or
popa
les
xor
pop
or
or
dec
lds
ja
data16
aaa
loopne
jmp
repz
inc
pop
dec
jl
mov
xchg
lods
adc
mov
enter
cmps
xchg
dec
lds
lock
rol
push
repnz
sub
mov
je
rol
mov
cdq
pop
stc
inc
mov
push
cmps
scas
sub
sub
cld
sahf
pop
popa
jmp
test
mov
jno
and
push
jmp
pusha
and
clc
es
adc
movs
mov
daa
inc
mov
push
or
(bad)
fldcw
xchg
and
push
cmps
xchg
pop
vmwrite
dec
xor
je
push
mov
leave
ret
inc
inc
jno
xchg
add
cmp
out
jg
cli
push
jo
xchg
fwait
pop
popf
xor
cli
in
xchg
xchg
je
and
push
adc
loop
in
std
pop
lock
pop
test
icebp
lahf
dec
outs
sub
jnp
arpl
jecxz
pop
mov
push
(bad)
arpl
adc
mov
es
pop
js
mov
adc
fadd
or
sbb
pushf
adc
xor
mov
ficomp
lock
es
dec
ss
or
repnz
dec
pop
add
fwait
and
inc
(bad)
rcl
fnstcw
mov
or
fst
push
adc
jge
xor
xchg
or
sub
xchg
adc
ret
sub
test
inc
mov
push
leave
popf
cwde
or
xchg
push
fiadd
cdq
xchg
cwde
shr
jns
jge
adc
adc
xor
mov
out
mov
retf
add
sub
retf
cmp
repz
lods
push
es
xchg
inc
add
in
xor
add
stos
xor
aad
jb
ins
in
js
adc
daa
ds
jg
push
adc
and
rcr
pop
xor
jecxz
inc
xlat
jns
scas
xchg
arpl
test
mov
jo
rcr
loope
(bad)
stc
push
not
cmp
pop
mov
dec
or
lock
ror
sti
add
jl
outs
cmp
cvtpi2ps
or
lods
cli
enter
xchg
sub
push
cmp
in
les
les
aam
loope
data16
cld
xor
cmp
sbb
xchg
inc
push
cmp
arpl
and
enter
clc
xlat
mov
inc
sbb
jecxz
push
adc
jno
sub
push
jae
(bad)
sub
in
(bad)
jae
sub
sbb
inc
(bad)
out
loop
cwde
rcr
hlt
clc
xchg
int3
push
shl
xor
xchg
mov
mov
or
adc
pop
aaa
cli
(bad)
outs
mov
test
aaa
es
outs
xchg
nop
dec
retf
inc
fs
std
outs
xchg
into
adc
adc
mov
(bad)
daa
popa
xchg
lahf
and
xchg
arpl
mov
xchg
mov
hlt
lea
cmps
cli
mov
adc
dec
ret
cmp
pmuludq
mov
shl
xchg
xor
es
cmp
retf
sub
stos
adc
dec
loop
rcl
cmp
stc
inc
dec
pop
inc
inc
xchg
adc
pop
xor
icebp
ret
das
adc
pop
cs
push
adc
cs
shl
movs
test
leave
por
push
outs
cmp
js
push
scas
jp
aas
push
(bad)
sar
call
sub
xor
inc
jg
jne
jns
cmps
cmp
movs
aad
push
inc
mov
and
mov
mov
test
stos
mov
repnz
add
mov
int
fwait
in
inc
out
pop
jbe
adc
(bad)
and
sbb
and
or
dec
ins
add
jbe
in
ins
call
(bad)
std
xchg
mov
mov
bnd
pusha
pop
arpl
in
mov
cld
mov
outs
imul
(bad)
hlt
xor
xchg
mov
int3
loop
adc
sub
mov
xchg
int
pop
cmp
test
not
cmps
add
jg
sbb
sub
or
rol
or
shl
push
and
and
add
cmp
fwait
lea
xchg
and
and
jns
sbb
xor
mov
iret
lock
adc
and
aam
pop
(bad)
cmp
cwde
mov
xchg
dec
sbb
push
inc
mov
(bad)
jecxz
movs
es
dec
call
jle
dec
push
xor
mov
xchg
push
mov
push
and
dec
dec
jns
xchg
imul
lahf
mov
jle
mov
sbb
and
(bad)
jne
mov
(bad)
stc
sub
test
stos
jns
ins
and
loop
xor
dec
idiv
jns
add
sbb
push
imul
or
scas
aam
jl
inc
sub
pop
dec
jl
nop
ss
pop
ins
iret
mov
add
add
xor
sahf
icebp
mov
lock
aad
inc
call
cmp
call
repnz
fwait
add
mov
or
mov
icebp
adc
mov
sbb
inc
sbb
aad
jmp
fwait
dec
pop
mov
test
loope
push
enter
cmc
hlt
out
stc
mov
iret
sub
sub
mov
xchg
mov
hlt
mov
xchg
cmc
into
fcom
inc
mov
mov
pop
nop
out
jl
or
mov
or
push
int3
stc
jge
adc
fld
fs
ss
mov
movs
fwait
lods
push
xchg
jmp
push
ins
mov
sub
test
xor
dec
shr
pminsw
ret
inc
push
xchg
gs
mov
(bad)
ficomp
adc
nop
cmp
mov
push
inc
test
stos
addr16
jecxz
mov
add
mov
cmp
shl
fstp
retf
inc
mov
and
sti
mov
xchg
mov
(bad)
(bad)
pop
mov
daa
jo
pop
and
mov
push
gs
lahf
scas
mov
sub
movs
mov
in
sub
cwde
lock
(bad)
adc
(bad)
jmp
xchg
std
dec
aam
xchg
(bad)
imul
add
sbb
push
retf
xchg
sar
mov
scas
js
shl
mov
adc
stos
test
sbb
(bad)
mov
xchg
mov
xor
outs
pop
sahf
jge
inc
rcl
(bad)
sbb
aam
mov
jge
inc
or
mov
test
add
mov
rcr
mov
sbb
jne
dec
aad
sbb
xchg
into
cmp
xor
mov
ja
xor
in
jecxz
loop
imul
shl
movs
aam
lods
and
mov
push
dec
aas
rol
addr16
(bad)
push
pop
repnz
retf
loop
add
xor
pushf
jae
inc
push
stos
xchg
(bad)
in
cmp
push
mov
into
mov
nop
jbe
popa
sti
je
outs
jecxz
cmp
push
xchg
enter
cs
push
add
jo
aam
add
add
cmp
mov
das
(bad)
jmp
sub
mov
inc
mov
test
fild
lds
xchg
sub
cmps
adc
push
pop
retf
rcl
fsubr
dec
stc
(bad)
mov
cmp
scas
stos
jns
cmps
in
fistp
rol
push
mov
cmp
xor
loope
out
xor
jmp
sti
adc
mov
push
pop
cmps
mov
mov
leave
fcomp
pop
dec
jg
sub
aad
rcr
fincstp
mov
dec
test
js
loopne
mov
repz
jl
pop
sbb
add
mul
jnp
movs
cld
mov
adc
xor
sub
cmp
mov
jg
dec
retf
repnz
or
jb
int3
jmp
adc
mov
fld
ss
fistp
cwde
jnp
push
out
fadd
sbb
cli
sub
mov
mov
les
(bad)
les
movs
int3
fst
mov
pop
gs
test
xchg
mov
ret
lock
inc
adc
jl
adc
xor
addr16
jnp
add
sub
and
int3
mov
repz
sbb
mov
in
call
mov
les
sub
push
mov
add
xor
mov
mov
push
xor
mov
xlat
and
lea
pcmpgtb
sysret
(bad)
and
pusha
sbb
std
int3
sub
xor
in
mov
mov
(bad)
mov
cmp
ja
outs
je
sbb
mov
add
out
inc
ret
popf
mov
arpl
pop
xchg
mov
jae
gs
mov
cmp
mov
bound
jl
in
inc
or
mov
cmp
lea
ds
mov
mov
movs
sbb
(bad)
leave
push
xchg
scas
mov
or
leave
adc
ds
into
call
xor
(bad)
in
push
push
sbb
sub
xbegin
xchg
cmps
ja
in
mov
sbb
cs
div
inc
je
data16
fstp
add
(bad)
int3
sbb
adc
test
test
call
pop
int3
jle
into
leave
(bad)
out
fisttp
fs
shl
push
inc
mov
mov
cs
jbe
push
inc
je
loope
xor
out
mov
lock
or
mov
mov
xchg
inc
xchg
ins
ins
add
aas
mov
mov
mov
jmp
pop
fisubr
sahf
jno
push
dec
mov
push
arpl
outs
pop
hlt
stos
fist
mov
push
pop
test
sbb
and
pmaxsw
in
repnz
mov
pop
mov
mov
xor
imul
or
xchg
and
push
aam
add
dec
push
inc
fcomp
xor
xchg
(bad)
(bad)
add
sub
out
and
add
xor
test
push
mov
dec
xchg
pop
test
div
rol
in
imul
inc
ins
xor
imul
(bad)
rcl
jne
test
(bad)
enter
call
fadd
cmp
stos
retf
inc
add
pop
into
shr
hlt
das
cld
mov
sbb
movs
inc
mov
leave
fsub
mov
out
cmp
in
aaa
jmp
push
mov
shl
lods
sar
jnp
fmul
mov
je
inc
mov
jle
fdiv
pop
sahf
inc
shl
popa
lods
arpl
xchg
lods
mov
in
ins
das
push
and
in
dec
cdq
mov
sti
dec
jmp
bound
cmp
fwait
xchg
jp
dec
xlat
test
xchg
loopne
iret
jno
sub
sub
stc
pop
mov
cmp
or
mov
sub
frstor
or
and
jne
jbe
xchg
int3
(bad)
xor
dec
popa
adc
or
lods
int
add
pop
add
add
je
xor
dec
out
pop
mov
aam
mov
mov
fiadd
push
pop
repz
push
into
dec
jae
pushw
rcr
(bad)
ja
(bad)
adc
icebp
bound
call
mov
out
add
repnz
push
cs
xor
xor
xor
cmp
push
sar
sbb
cmp
hlt
iret
retf
jno
or
cmp
out
in
out
in
bound
hlt
lock
imul
add
pusha
dec
cmps
fsubr
cdq
fst
push
push
nop
cwde
xor
xchg
pushf
std
out
fisttp
push
fnstsw
dec
adc
mov
sbb
cmp
sti
jbe
and
cmps
test
push
pop
in
sbb
cmp
fdivr
push
jg
add
pop
and
inc
mov
movs
xchg
ins
retf
test
mov
xlat
paddusw
ss
out
sub
jne
ins
push
xchg
cwde
xchg
jne
mov
outs
jmp
xchg
dec
(bad)
mov
cs
and
cmp
out
sbb
sbb
or
enter
mov
push
out
mov
aaa
inc
and
pop
mov
shl
ins
loopne
ret
test
cmp
sbb
leave
ss
inc
call
dec
sub
mov
cmc
xor
repz
ucomiss
aad
jecxz
lahf
retf
adc
sahf
clc
std
fs
mov
cs
xchg
fwait
push
inc
in
or
imul
ret
push
mov
sbb
and
xchg
add
rep
pushf
adc
xchg
cmp
mov
mov
cmp
cmp
sbb
inc
xchg
jne
bound
enter
std
adc
and
pusha
sbb
dec
jecxz
cmp
ror
mov
and
sbb
sbb
and
shl
les
repnz
stc
mov
pop
cmp
jge
xor
sub
jno
push
inc
pop
fadd
pop
jns
push
push
into
cld
out
rcr
xchg
je
xchg
adc
stc
repnz
sbb
out
mov
mov
sub
enter
in
shl
js
je
psrlw
pop
repnz
bound
adc
pop
mov
hlt
mov
in
mov
repnz
outs
jmp
mov
push
pop
mov
fsubr
sbb
ret
jnp
mov
and
fistp
test
neg
int
mov
jne
cld
out
push
or
ret
and
jno
fs
setb
rcr
pop
jno
inc
shl
int
push
add
cli
xchg
push
adc
stos
cmp
mov
shr
dec
sti
pop
call
or
mov
cli
mov
add
ror
out
pop
inc
mov
mov
aad
cwde
mov
add
or
rcl
test
mov
loopne
jne
mov
adc
les
neg
push
cmp
push
das
sbb
inc
inc
push
das
mov
add
sub
inc
not
stos
mov
(bad)
adc
xchg
(bad)
(bad)
xchg
pusha
div
fucomp
cmc
fsubr
push
push
push
or
into
sbb
scas
mov
xlat
push
pop
out
cwde
mov
push
dec
test
push
daa
pop
loop
mov
rol
std
and
and
(bad)
push
pop
retf
inc
and
fsub
das
rcr
mov
into
xor
lea
imul
lods
push
xchg
int
ds
push
or
dec
jns
jecxz
mov
out
addr16
or
iret
cmp
(bad)
jmp
cmp
cmp
jno
sbb
outs
shl
fisttp
dec
sbb
lods
hlt
push
mov
or
mov
(bad)
xchg
loop
test
pusha
iret
aam
xor
add
jp
adc
scas
cmp
call
jmp
mov
stos
rol
pushf
clc
lock
mov
in
dec
cld
das
and
or
dec
ret
inc
outs
pop
sub
jno
sub
fnsave
bound
xor
sub
mov
rol
cmova
sbb
dec
popf
out
inc
sub
jmp
ret
or
es
push
xchg
sbb
mov
fwait
dec
mov
jae
js
push
dec
xchg
adc
and
ins
ss
lock
mov
push
sahf
sbb
pop
adc
push
push
out
jmp
imul
js
mov
add
mov
pop
gs
ficomp
xchg
inc
arpl
daa
cli
imul
xchg
dec
jmp
cmps
dec
push
(bad)
mov
mov
xlat
cmp
or
pop
fcom
test
mov
sbb
push
pop
cld
jno
xchg
cdq
scas
mov
add
add
out
repnz
rol
ds
(bad)
mov
aaa
test
(bad)
mov
adc
test
je
das
out
fcomp
dec
push
or
jmp
ins
adc
inc
xlat
adc
jbe
movs
xchg
gs
xor
cli
adc
icebp
ss
mov
add
jno
fisttp
push
lods
popf
stos
(bad)
(bad)
ins
push
aaa
sbb
int
push
lds
push
jb
(bad)
mov
aad
push
(bad)
inc
mov
in
leave
push
jmp
popa
mov
mov
int
pop
aaa
jno
and
(bad)
xchg
xor
in
scas
sbb
aam
mov
(bad)
stos
popa
push
ret
jns
mov
adc
dec
mov
(bad)
clc
push
mov
pop
mov
pop
fnstsw
mov
mov
inc
cdq
sub
jns
mov
mov
je
push
jge
add
pop
scas
xor
sbb
jg
add
push
dec
int3
dec
xchg
clc
dec
add
adc
lds
inc
(bad)
ds
sbb
sbb
lock
test
hlt
add
sbb
pop
inc
adc
mov
cmps
mov
mov
fadd
or
lods
int3
(bad)
xchg
ss
sbb
and
pusha
pop
jg
push
add
or
pushf
sahf
retf
sub
jecxz
mov
pop
nop
ss
mov
gs
outs
rcl
mov
and
or
xor
mov
(bad)
adc
ficom
inc
cmps
int
push
add
inc
mov
test
in
clc
and
std
xor
xor
adc
push
sbb
and
nop
push
adc
gs
(bad)
pop
sbb
push
mov
add
cwde
mov
stos
cld
xor
in
das
mov
ins
lea
cdq
lods
jp
into
push
cmps
mov
sbb
push
push
(bad)
or
cmp
shr
das
adc
add
pushf
iret
fucomip
into
aas
call
ret
sahf
gs
jbe
loop
add
sar
sbb
imul
pop
sub
fldcw
scas
scas
fist
pop
imul
and
scas
push
popa
jg
sub
mov
and
sbb
jmp
push
(bad)
std
iret
or
pushf
(bad)
int
jl
call
inc
push
enter
shl
popf
out
sar
or
jmp
or
test
out
jle
jl
repz
stos
dec
mov
sbb
ret
pop
cwde
mov
aas
mov
(bad)
rcr
int
imul
fisttp
imul
jno
icebp
das
adc
mov
movs
not
loop
ret
movs
repnz
test
daa
ret
jmp
mov
fdivrp
pop
sti
test
mov
mov
js
nop
ror
outs
call
movs
xchg
and
mov
adc
mov
in
fwait
enter
inc
pop
mov
mov
rol
repnz
xor
int3
sub
loope
pop
or
dec
shl
cmps
dec
in
or
mov
mov
(bad)
lods
stc
(bad)
add
push
sbb
test
xchg
push
jb
js
or
fmul
cmp
cmp
imul
aad
sub
inc
data16
push
leave
ds
xlat
lods
sbb
popf
mov
jge
cld
jo
out
xor
push
and
adc
cwde
xor
nop
enter
call
mov
cwde
pop
jge
inc
in
dec
xor
iret
gs
aas
enter
xchg
das
cmp
clc
jo
js
ds
cmp
mov
mov
jnp
mov
loopne
movs
pop
mov
test
ds
mov
xor
push
mov
mov
push
(bad)
jne
rcl
pop
adc
cmp
scas
fisttp
inc
xchg
and
cmp
test
addr16
mov
fidivr
loope
outs
fwait
jo
int3
shl
ficomp
les
mov
xlat
cs
adc
(bad)
out
scas
mov
in
jnp
dec
shr
inc
bound
test
xor
clc
mov
push
mov
prefetch
fyl2x
(bad)
call
fs
imul
add
outs
or
sub
pop
ins
ds
mov
ret
push
jae
leave
fidivr
mov
stc
pop
(bad)
mov
nop
mov
dec
jae
sbb
xor
icebp
out
push
mov
add
cmp
and
xor
add
ss
jmp
lds
pop
lods
xchg
xchg
fs
int
jmp
dec
add
inc
mov
jbe
out
xor
sbb
cmp
loopne
loop
rcl
out
pop
loopne
cli
fnstenv
scas
(bad)
jns
(bad)
mov
arpl
jae
and
push
xchg
push
lahf
scas
int3
push
push
xchg
(bad)
sbb
fisub
mov
sub
push
retf
fidiv
int
ror
stc
in
xor
iret
mov
add
jmp
cli
stos
pop
fdivr
dec
sbb
and
stos
jl
sbb
pop
cmp
shl
lahf
push
gs
inc
jmp
jecxz
scas
sbb
(bad)
sbb
xor
pop
mov
mov
push
sub
push
gs
jl
mov
cmp
jno
fld
int3
idiv
aad
(bad)
int3
cmc
mov
and
cmp
sbb
lods
add
jl
ror
xchg
or
adc
mov
ror
dec
int3
jecxz
jmp
test
dec
inc
sub
loop
mov
mov
xchg
and
aad
xor
jp
push
call
fisubr
and
scas
mov
jl
addr16
call
push
xchg
(bad)
xor
int
adc
inc
adc
lods
cmp
xchg
ins
out
es
mov
bound
lock
jns
sbb
sbb
out
push
xor
imul
outs
nop
fmul
mov
cs
sbb
clc
ret
jmp
sub
add
imul
repz
popa
ins
stc
int3
lods
pushf
jp
pop
popa
sub
inc
xor
dec
cmp
out
add
ins
jns
mov
outs
dec
push
inc
xor
adc
jmp
test
cmps
and
xor
test
xchg
mov
add
int3
ret
xchg
ins
nop
jge
and
jmp
iret
enter
ror
and
js
es
lds
adc
stos
jmp
and
jo
dec
xchg
and
jp
jno
retf
dec
in
mov
mov
stos
push
mov
mov
mov
pop
sub
dec
jmp
(bad)
fstp
jno
add
mov
aaa
mov
cmc
xchg
out
adc
jecxz
pop
movs
adc
aam
ins
call
mov
lods
push
mov
mov
out
pop
in
mov
adc
push
out
fdivr
aad
fs
addr16
push
sbb
mov
xchg
sbb
pushf
test
jnp
lods
aaa
pop
(bad)
pushf
jbe
mov
inc
adc
adc
dec
sahf
push
xlat
loopne
(bad)
fcom
frstor
mov
dec
out
jle
jo
ss
jle
lds
repnz
or
pop
sub
outs
xor
sahf
jne
pop
and
pop
cmp
mov
push
adc
sbb
mov
mov
and
xchg
pop
aad
pop
iret
pop
clc
ins
shr
push
outs
inc
aas
iret
lock
sbb
push
inc
ret
test
call
mov
mov
mov
jmp
xor
mov
movs
dec
cdq
mov
js
hlt
aas
or
sbb
mov
(bad)
sub
aad
jo
pop
nop
mov
cmp
retf
ret
enter
scas
jns
inc
sub
mov
mov
ins
pop
arpl
mov
xor
jne
dec
or
xor
inc
lds
lods
cmps
aaa
aad
into
or
outs
sbb
mov
and
sbb
pop
hlt
sti
push
push
cmp
sar
stos
adc
or
and
lock
inc
and
mov
es
test
mov
mov
jne
jno
icebp
(bad)
repz
or
pop
repnz
pop
das
icebp
dec
adc
jo
(bad)
ret
in
xchg
push
and
idiv
nop
push
imul
mov
xchg
push
pop
xor
pop
inc
pop
fs
sbb
repnz
mov
loopne
and
mov
mov
ret
xor
sti
loop
jne
mov
or
pop
cmps
xor
inc
inc
icebp
mov
loop
imul
jae
call
xchg
enter
inc
sub
sar
cmp
dec
enter
fiadd
mov
test
jo
cmp
repz
jle
hlt
xlat
and
loope
sub
jno
pusha
jecxz
outs
pop
or
addr16
lods
push
jge
mov
push
test
loopne
push
push
mov
sbb
xchg
or
ins
lods
add
pop
adc
push
pop
adc
xchg
mov
js
shl
callw
xchg
add
push
mov
inc
iret
(bad)
imul
mov
cmc
mov
fist
mov
(bad)
rol
inc
add
adc
pushf
mov
fs
push
cmps
cli
xor
pop
dec
pop
dec
mov
bound
aam
movs
lock
popf
or
fbstp
mov
inc
in
adc
out
push
sub
loop
xor
mov
xchg
sub
lods
jo
lea
pop
pop
and
(bad)
sub
sti
clc
jbe
jmp
fwait
pop
cmc
xchg
jl
leave
inc
jmp
xchg
(bad)
pop
fs
mov
push
push
cmp
test
or
adc
jp
inc
arpl
cmp
bound
push
adc
popa
in
push
in
mov
mov
repnz
add
inc
test
ins
or
mov
pop
mov
add
out
mov
add
test
sbb
popa
test
sub
mov
out
loopne
clc
add
add
(bad)
retf
mov
push
out
test
mov
or
jg
mov
retf
mov
fcomp
cli
jp
popa
(bad)
aam
push
(bad)
out
and
pop
inc
sbb
push
jmp
mov
cmp
aam
sbb
lods
ss
ret
and
mov
adc
test
xchg
dec
mov
and
push
xchg
fs
shl
mov
add
lds
adc
rcr
(bad)
and
jle
mov
mov
addr16
clc
jo
pop
jl
cmps
pushf
data16
dec
call
iret
push
pop
push
or
dec
mov
push
and
inc
pushf
adc
cli
push
aam
(bad)
shr
mov
pop
ins
dec
pop
xchg
aaa
cli
xor
in
std
(bad)
pusha
jge
loop
push
hlt
test
clc
movs
cld
mov
fist
dec
jne
test
dec
cmp
mov
inc
cmp
dec
in
mov
dec
jne
pop
pop
mov
jo
xor
xor
xor
iret
mov
jb
outs
inc
inc
aam
gs
mov
(bad)
mov
adc
mov
icebp
xchg
mov
jmp
jmp
mov
push
mov
out
fcomp
inc
js
inc
cs
or
shr
dec
push
popf
xor
inc
aad
push
sub
imul
add
or
inc
jne
add
push
xor
retf
(bad)
enter
xor
jmp
dec
add
jg
into
fdiv
out
cdq
sbb
mov
mov
out
fwait
or
inc
mov
and
sbb
cmp
mov
inc
adc
dec
add
inc
dec
fild
and
jmp
cmp
xor
mov
daa
sub
ret
enter
xor
in
mov
mov
jne
mov
test
hlt
movs
popf
pop
in
inc
mov
and
cmp
stc
sbb
or
jns
call
(bad)
sub
lock
imul
adc
mov
add
or
lea
daa
arpl
mov
cmc
lock
and
xor
jmp
sub
call
xor
dec
dec
xor
push
(bad)
int3
popf
(bad)
pop
jae
(bad)
stos
aas
sahf
ror
adc
out
ror
fnstenv
mov
std
lahf
cmp
mov
xor
mov
mov
jb
imul
test
jo
cld
idiv
jecxz
mov
out
idiv
(bad)
xchg
or
cdq
outs
test
fild
repnz
fs
push
mov
aam
ss
mov
mov
jg
loop
xor
jge
mov
mov
mov
je
retf
mov
push
push
frstor
mov
neg
jnp
pop
push
mov
(bad)
stos
pusha
rcl
loop
in
lds
(bad)
push
push
leave
outs
adc
jmp
jae
cmp
xchg
jl
movs
fsubr
or
int
jl
mov
inc
stc
fcmovbe
repz
xchg
ror
and
fs
push
jnp
inc
pop
fwait
call
mov
imul
or
mov
cmps
aaa
sbb
push
jmp
mov
mov
aaa
mov
lock
jb
imul
in
mov
mov
or
fs
pushf
lods
cld
inc
loop
push
xchg
inc
frstor
je
push
xchg
mov
xor
xor
pop
fcom
mov
js
push
or
or
std
xor
cdq
sbb
movs
shl
ja
int
aaa
cmp
pushf
inc
cmp
and
jnp
ds
add
(bad)
enter
fcmovu
push
or
dec
jne
sub
or
or
pop
pushf
xchg
xlat
ss
xchg
enter
jmp
sar
mov
and
jne
jge
jp
in
jmp
sub
clc
mov
ret
sti
add
in
mov
lods
pusha
ins
dec
add
or
(bad)
fsqrt
std
rol
aaa
xchg
aaa
jne
in
sbb
pop
fdivr
cmp
add
aam
faddp
in
movs
dec
mov
into
loopne
jge
and
or
adc
fucomi
mov
pop
inc
dec
ss
in
push
mov
push
sahf
jne
adc
mov
mov
loope
rol
retf
xor
xlat
mov
xchg
(bad)
inc
push
inc
dec
mov
xchg
ficomp
xor
sbb
call
xor
pop
fidiv
scas
stos
ds
sbb
xchg
call
ja
mov
ret
lds
xchg
cmp
fldenv
ja
test
add
daa
cmp
xor
aad
sti
div
call
sti
push
mov
clc
stc
aam
mov
fwait
jmp
inc
xor
cmp
xlat
hlt
cs
imul
push
imul
jl
adc
pop
rcr
or
gs
push
sbb
test
inc
jl
xchg
or
test
adc
ss
xchg
ret
loop
dec
fiadd
mov
shr
push
mov
cli
adc
call
cmps
push
add
call
mov
int
or
dec
cdq
or
scas
mov
repz
pushf
inc
pop
inc
and
enter
mov
xor
inc
sub
add
call
daa
in
mov
cdq
or
(bad)
sbb
mov
and
sub
fild
or
or
dec
or
pop
imul
neg
add
jne
xor
jmp
mov
pusha
xlat
jmp
adc
push
mov
retf
test
fcom
fidiv
aad
jle
test
into
ins
mov
pop
xor
daa
mov
fs
stos
out
aam
jmp
mov
and
pop
jmp
jge
mov
mov
mov
test
inc
pusha
or
mov
fcomp
test
push
int3
sub
in
mov
push
mov
add
out
std
lock
push
push
mov
(bad)
(bad)
sbb
loope
outs
or
mul
mov
into
sub
gs
ret
push
and
jg
xor
jp
das
xlat
ja
lock
xchg
sbb
imul
pop
ret
cmp
(bad)
out
jmp
xor
je
add
pop
imul
and
nop
sub
aaa
sbb
cli
and
gs
gs
and
int
jmp
cmp
xor
or
jecxz
xor
xor
dec
mov
sub
out
ret
lahf
jge
in
cwde
and
push
pop
in
cmp
add
lods
push
(bad)
mov
popa
call
inc
cdq
sbb
out
xor
dec
push
mov
out
daa
lods
ret
or
sbb
mov
dec
jnp
add
in
jmp
outs
inc
ret
hlt
inc
loop
popa
sub
mov
ret
cmc
je
mov
cmp
popa
xor
cmp
and
rcl
dec
add
daa
cmp
outs
and
and
mov
adc
shl
or
pop
test
adc
imul
xchg
nop
mov
add
fwait
lahf
cmps
(bad)
mov
es
mov
adc
addr16
push
aam
scas
sub
ja
rcl
and
pop
dec
xchg
jp
(bad)
loopne
fiadd
cmc
adc
xchg
dec
mov
mov
dec
les
aas
fistp
test
inc
in
vpcmpeqd
push
leave
push
repnz
sub
xor
arpl
and
and
mov
test
xchg
mov
mov
and
sahf
mov
xor
cmps
call
mov
jmp
ds
cs
jns
ds
and
jo
jp
out
mov
cld
arpl
jmp
int3
lds
dec
out
arpl
out
fld
jle
ja
out
inc
repnz
jne
popa
or
or
std
cmps
push
stc
xchg
das
(bad)
sbb
aam
jae
out
repnz
test
in
enter
int3
addr16
sub
inc
cmps
pop
push
add
adc
xchg
sub
dec
pop
sub
push
add
shl
xor
mov
or
inc
(bad)
sar
ins
(bad)
adc
imul
lock
pushf
popa
dec
scas
push
fcmovne
and
push
stos
aaa
and
jge
fsubr
pushf
jns
mov
or
adc
push
fsubr
test
xchg
dec
test
inc
aaa
xchg
sbb
sbb
ja
retf
mov
imul
cld
daa
stc
out
push
xor
pop
inc
mov
push
jg
jbe
pop
mov
cmp
ss
xchg
sbb
cli
dec
jge
mov
into
adc
call
jmp
mov
cmps
push
fmul
mov
inc
push
(bad)
stos
xchg
inc
retf
cmp
add
inc
jno
pushf
int3
add
mov
push
inc
in
dec
jbe
cli
aas
push
in
les
jp
daa
aas
test
(bad)
push
bound
sbb
push
dec
loop
inc
jnp
fidivr
stos
sti
retf
adc
mov
pop
jne
fst
popa
xor
and
jno
or
bound
inc
shl
mov
sbb
loope
cmc
xor
and
and
gs
push
pop
pop
aaa
dec
scas
push
lods
cmp
shl
rcr
inc
xchg
rcl
sbb
les
syscall
xor
mov
cmp
and
and
std
dec
jb
fisub
aaa
and
mov
vaddps
ret
pushf
out
call
cmp
outs
fist
add
std
mov
popf
pop
stos
scas
push
arpl
jg
inc
iret
shl
ins
xchg
nop
xor
push
jo
add
test
adc
jmp
lock
mov
fs
jmp
fsubr
jae
retf
mov
adc
adc
cmp
xor
jge
enter
jbe
aad
adc
mov
repnz
fdiv
icebp
push
in
push
sub
int
xor
int
push
js
or
mov
dec
push
loop
fld
vpcomw
fcomp
out
dec
cs
sub
out
jae
add
(bad)
sbb
sbb
addr16
movd
adc
bnd
and
aad
adc
cmc
or
cld
ret
add
gs
mov
repnz
ins
or
mov
xchg
loope
dec
inc
cld
cdq
pop
jb
hlt
fdivr
xchg
pop
arpl
lods
ret
jbe
jnp
xchg
cmp
sub
mov
mov
fcmovnb
test
mov
loop
cs
pushf
push
fwait
mov
xchg
adc
push
adc
dec
cs
fiadd
pop
call
int
mov
mov
into
out
dec
cld
lods
mov
adc
retf
push
lock
and
add
inc
xor
jns
aas
imul
shr
mov
sub
inc
sti
(bad)
(bad)
push
jnp
and
movs
popf
cwde
outs
fisttp
shl
pop
inc
lock
and
mul
(bad)
pop
xchg
rol
mov
xor
adc
xor
sub
xchg
xchg
stc
mov
dec
mov
outs
aaa
lock
mov
repnz
mov
xor
test
test
jecxz
div
ret
mov
fiadd
sub
mov
xchg
mov
inc
sbb
mov
loop
mov
mov
sub
mov
mov
inc
mov
cmps
ins
sub
adc
in
test
push
cmp
or
sbb
and
pop
xchg
mov
test
cmps
std
dec
shr
mov
push
clc
retf
jne
or
xchg
mov
jle
xor
xor
and
jb
sti
sub
push
ja
inc
inc
xchg
mov
jmp
adc
jge
xor
xchg
pushf
dec
in
sub
adc
mov
push
je
in
lds
repz
pushf
ss
mov
cmp
pop
popf
or
cmp
stos
mov
pop
mov
dec
call
das
inc
mov
sbb
cmp
xchg
adc
mov
or
in
and
(bad)
xor
lock
in
addr16
leave
push
out
push
mov
push
inc
js
mov
fwait
inc
sbb
xor
adc
jb
push
push
dec
pushf
(bad)
lahf
jne
mov
or
in
stos
(bad)
nop
inc
std
adc
fwait
xor
sti
lods
icebp
sub
pusha
dec
rol
out
fst
lods
pop
jecxz
xchg
xor
push
or
sti
mov
es
jmp
xlat
sub
addr16
push
lods
jecxz
js
test
add
and
in
jno
xor
mov
daa
test
lock
sub
popa
stos
or
mov
cmps
sbb
sbb
je
shl
cwde
adc
jp
nop
inc
add
dec
data16
(bad)
sbb
idiv
stc
xor
xor
and
cwde
fbstp
cmp
outs
into
cmp
xchg
add
inc
or
outs
jbe
outs
xchg
dec
xlat
sub
iret
mov
stos
call
int
loop
and
pop
outs
adc
sub
sahf
(bad)
hlt
mov
cld
mov
or
lods
leave
mov
or
xchg
sub
test
jo
movs
int3
ret
dec
sahf
fwait
movq
jnp
es
(bad)
ss
icebp
daa
call
dec
mov
jo
mov
pusha
xchg
sbb
stos
data16
jae
and
jo
mov
and
aaa
mov
(bad)
jg
mov
(bad)
into
pop
jmp
mov
mov
jnp
jmp
(bad)
out
nop
push
sub
jb
and
push
or
mov
mov
and
jnp
sub
sbb
sbb
in
retf
fsub
fadd
jbe
fimul
ror
ret
icebp
je
test
aad
inc
ins
push
out
sbb
ror
loopne
arpl
test
call
add
jae
hlt
pop
sub
adc
or
in
pop
jb
es
dec
add
add
xchg
mov
mov
repz
icebp
fadd
xchg
repz
in
aam
jno
xlat
(bad)
inc
mov
and
adc
jecxz
sbb
push
pop
mov
push
jne
ins
aad
inc
fild
fucomp
cmp
cmp
aad
push
pop
jp
push
pop
mov
(bad)
cwde
push
bound
jmp
repz
cmps
sub
ret
das
fwait
push
sub
out
mov
mov
mov
mov
mov
movs
mov
mov
cmp
arpl
(bad)
inc
int3
pop
add
sbb
sbb
rol
icebp
cmp
imul
add
xchg
movs
jg
popa
ficom
hlt
push
movs
mov
movs
pop
jno
aam
sahf
and
inc
sub
add
(bad)
mov
add
arpl
and
sbb
sbb
std
mov
xchg
je
(bad)
adc
xor
cmp
inc
mov
pop
cmp
adc
pop
xor
daa
inc
and
jmp
call
or
xor
pop
nop
pop
sub
xor
sbb
leave
fld
popf
mov
sub
aas
push
loop
dec
lahf
jmp
pop
mov
gs
jl
add
jp
mov
das
repz
pusha
mov
mov
and
iret
mov
mov
xchg
dec
(bad)
dec
je
out
leave
mov
mov
add
pop
jnp
cmp
mov
xchg
mov
out
cmps
lock
dec
mov
ds
jne
mov
hlt
(bad)
fbld
push
jb
cs
popa
pop
mov
inc
xlat
mov
push
dec
scas
fdivr
test
push
jbe
or
pop
pop
ja
cdq
dec
jp
push
sbb
xchg
ret
xchg
test
cdq
add
pop
mov
mov
sub
push
mov
int3
mov
push
xchg
ins
sbb
sbb
in
jns
fsub
or
out
in
dec
fsub
xor
jae
xor
push
dec
js
aad
mov
out
adc
ins
fst
sahf
inc
jbe
cmp
test
sahf
mov
shr
dec
jb
and
loope
ins
add
inc
rcl
clc
pop
jno
repz
data16
or
daa
movs
in
sbb
mov
je
popf
repz
pop
lea
rcl
aas
jecxz
xor
test
push
mov
cdq
pusha
stos
enter
lods
mov
fwait
in
fdiv
stos
xor
xor
dec
pop
jl
(bad)
dec
lods
adc
cmp
pop
or
bound
push
pop
add
xor
jmp
push
retf
jb
jns
fbstp
repz
outs
push
mov
aam
push
jo
test
xor
pop
ja
push
mov
mov
xchg
and
jge
xor
xchg
gs
jbe
inc
or
xchg
or
or
pop
fbld
dec
push
div
push
jnp
mov
push
jns
add
cmps
(bad)
dec
push
pushf
aam
and
xor
cmp
movs
test
inc
retf
ror
cmps
cli
xor
lea
pop
mov
push
ins
jae
aad
cmp
jno
dec
sbb
cli
jle
mov
inc
int
dec
adc
loopne
sub
pop
repz
mov
je
sbb
and
lea
sub
and
in
dec
daa
dec
inc
lods
xlat
imul
sub
xchg
cmp
dec
xchg
cmp
and
xchg
mov
add
jns
mov
(bad)
iret
and
lods
jl
sbb
jns
jns
in
outs
data16
pop
xor
aas
fwait
lods
cmp
adc
and
push
stc
shl
dec
loope
cmp
popa
sbb
stc
mov
dec
ds
add
jmp
sti
pop
push
mov
fst
in
cwde
ds
mov
jge
call
dec
sbb
dec
in
xchg
jne
jmp
jecxz
mov
and
xor
mov
daa
mov
push
or
and
fcomp
outs
fnstenv
stc
sub
jge
cmp
out
test
xor
arpl
pop
int3
clc
sar
loop
sub
pusha
out
adc
or
add
adc
or
out
daa
cld
pop
dec
les
pop
cmp
mov
push
xchg
ror
clc
inc
xor
xchg
mov
imul
cld
in
xlat
add
retf
fs
mov
pop
imul
or
sbb
sbb
pop
pop
(bad)
cmp
and
out
xchg
xor
(bad)
stos
sbb
je
rol
cwde
sti
jecxz
fnstenv
add
ja
push
fisub
sub
dec
jns
data16
shl
adc
jne
das
fldcw
call
mov
(bad)
cs
ja
popa
or
(bad)
xchg
(bad)
in
loope
out
inc
mov
fisubr
mov
enter
xchg
cwde
test
enter
pop
mov
mov
xchg
lods
sub
jnp
scas
add
popa
or
push
ficomp
fstp
loop
gs
(bad)
in
ret
(bad)
xor
push
dec
or
fiadd
sub
imul
movs
jmp
call
add
in
xchg
jns
xor
adc
xchg
data16
push
aaa
inc
mov
xchg
out
cdq
cmc
push
dec
adc
shr
(bad)
scas
cdq
jo
int
xor
pop
mov
push
fwait
add
jae
xor
jmp
jle
inc
pop
daa
mov
pop
inc
movs
in
out
or
scas
jl
out
addr16
sar
jne
jbe
addr16
jns
mov
dec
cdq
(bad)
repz
out
push
pop
mov
fwait
adc
add
fisttp
xchg
pop
pop
arpl
xor
push
mov
fisttp
mov
mov
fiadd
adc
ds
adc
push
push
loopne
retf
ss
mov
push
sub
mov
test
mov
cs
push
xchg
mov
in
aad
cmp
inc
xchg
xchg
mov
(bad)
movs
cld
xor
xchg
pop
inc
test
xlat
out
out
scas
hlt
dec
shl
ins
mov
jns
pop
pusha
mov
mov
das
les
data16
enter
dec
sbb
cli
adc
push
jb
std
mov
or
lea
loop
aad
clc
xchg
xchg
dec
adc
pop
loop
push
stos
push
scas
stos
cld
aas
enter
icebp
mov
out
mov
jle
jae
mov
(bad)
push
inc
push
fsubr
mov
xchg
clc
fbld
inc
mov
adc
in
add
adc
xchg
sub
sbb
mov
leave
mul
add
loope
gs
in
ret
jmp
jle
and
push
xchg
dec
xor
dec
loopne
cmps
push
push
ins
add
mov
in
cwde
or
inc
pop
sub
in
in
clc
dec
enter
inc
jmp
adc
loop
imul
cmp
sbb
or
cmp
dec
push
hlt
dec
cmp
pop
out
fdivr
js
ins
mov
std
mov
cmps
mov
cdq
jb
push
xor
inc
call
in
inc
or
mov
sub
out
push
xchg
mov
int
into
in
cmp
xorps
repz
(bad)
(bad)
(bad)
movs
jle
imul
(bad)
out
pop
popa
scas
cmp
dec
aad
mov
neg
test
mov
jmp
mov
ja
enter
imul
inc
pop
inc
inc
out
(bad)
ret
pop
idiv
push
movs
xchg
les
pop
scas
test
leave
mov
jb
test
sahf
pop
xchg
cmps
jo
(bad)
mov
mov
jne
jnp
arpl
cmp
hlt
pop
mov
or
mov
sbb
jg
imul
cmp
test
gs
and
cld
test
ficomp
jp
jae
mov
stc
(bad)
in
fisttp
jb
ins
mov
adc
pushf
mov
pop
jmp
stos
or
inc
out
retf
rol
pop
aaa
pop
sub
imul
fwait
push
ins
pop
or
es
sub
and
inc
ja
jnp
pop
jmp
jb
mov
xchg
jns
into
js
xor
movs
mov
sbb
xchg
mov
lods
aam
outs
(bad)
cs
pusha
mov
mov
int
inc
fild
popf
pop
pop
mov
and
idiv
pop
in
sbb
ins
add
mov
push
xchg
retf
mov
cmp
in
add
outs
mov
mov
add
(bad)
cmp
and
repz
sbb
adc
std
dec
xchg
cmps
cmovnp
ja
sub
out
mov
dec
rcl
cmps
add
xchg
cmp
inc
pop
jae
fcom
ja
cmp
and
ret
sub
popa
mov
in
sub
(bad)
mov
sahf
mov
and
(bad)
fs
out
push
enter
out
fwait
repz
xchg
js
repz
mov
mov
push
pop
mov
lea
ja
push
mov
test
pop
(bad)
(bad)
mov
imul
sar
xor
js
adc
rcl
mov
pop
cdq
dec
fadd
(bad)
je
and
cmp
or
xchg
dec
sbb
icebp
or
ds
jns
(bad)
or
gs
(bad)
in
mov
sahf
cmp
(bad)
adc
mov
xchg
cmps
in
jge
cwde
lods
fdiv
stos
pushf
aas
sbb
inc
jl
and
xchg
pop
ja
dec
call
inc
int
scas
lods
mov
push
jmp
std
lock
sub
xor
arpl
aam
test
outs
add
mov
test
push
dec
adc
inc
cmp
add
es
out
bound
sar
sub
xchg
shl
xchg
mov
jg
dec
push
push
pop
aaa
jg
fisubr
in
ins
jo
mov
fistp
xlat
jo
fsub
call
xor
movs
jg
inc
out
pop
scas
or
fwait
inc
mov
es
lahf
dec
leave
push
clc
and
outs
arpl
ret
and
xor
movs
(bad)
out
gs
int3
xor
add
mov
lds
or
int
iret
adc
jl
and
ins
push
int
push
cmc
sbb
loope
jno
rcr
cs
xchg
and
adc
mov
repnz
jecxz
sub
stos
inc
add
mov
(bad)
dec
(bad)
(bad)
xchg
out
adc
sbb
mov
ins
inc
jl
xor
xchg
pop
stos
rcr
pop
retf
adc
ss
jl
add
and
hlt
sbb
and
fs
(bad)
sbb
dec
sbb
cwde
call
lahf
in
movs
jmp
mov
in
xor
std
arpl
add
push
jmp
aad
xchg
jno
mov
rcr
push
and
movs
push
iret
push
out
daa
in
fucomp
dec
imul
or
mov
jle
out
xlat
jne
pop
aam
push
in
ss
imul
js
inc
push
pavgw
cdq
jae
(bad)
shl
jns
xor
fstp
push
cmps
aaa
xor
mov
add
aam
out
inc
push
xchg
xchg
push
dec
cld
mov
and
xchg
nop
mov
dec
ins
lea
jle
jg
xchg
sbb
inc
sub
ss
push
mov
popf
fld
int
(bad)
outs
lods
inc
lahf
sahf
cmp
adc
mov
movs
or
test
fnsave
in
push
pop
js
loopne
fadd
loope
push
aad
mov
add
pop
test
test
ret
js
mov
je
movs
ret
sbb
stc
mov
movs
pushf
xor
adc
test
(bad)
inc
mov
xchg
mov
into
jae
inc
ret
cli
xor
mov
jle
int
sbb
(bad)
fdivr
xchg
cmc
ss
stos
gs
popa
jle
xor
jmp
aad
xlat
mov
xchg
in
and
cmp
mov
mov
xchg
cwde
loope
mov
xchg
xchg
cli
xor
jp
arpl
ins
popf
out
xchg
stc
mov
rcl
mov
scas
fbld
dec
hlt
jl
pop
mov
mov
sub
xchg
ret
in
xor
inc
mov
push
mov
lds
pop
imul
inc
and
cmp
dec
jo
push
inc
sub
loop
shl
sub
icebp
iret
scas
jecxz
repz
aad
retf
call
inc
lea
scas
dec
adc
push
call
ret
xor
ds
dec
xchg
leave
push
out
das
ins
push
cmp
lds
or
stos
data16
adc
clc
and
popa
inc
arpl
mov
and
lahf
loop
shl
and
jle
test
push
push
and
and
inc
mov
fist
sti
sub
adc
cs
dec
pushf
out
inc
dec
movs
mov
int3
xchg
push
push
test
mov
adc
shl
ror
aad
cmc
push
adc
jns
nop
inc
ins
and
xchg
jne
icebp
mov
aad
test
pushf
mov
das
aas
sbb
xchg
pop
sbb
mov
sbb
enter
outs
cli
test
dec
pop
scas
mov
xchg
xor
lods
dec
jmp
sbb
dec
or
mov
mov
dec
retf
test
inc
popa
inc
inc
xor
or
mov
xlat
cmp
push
out
mov
dec
xor
mov
cmp
add
push
adc
and
pop
arpl
mov
inc
xor
add
push
xchg
push
mov
mul
jmp
(bad)
cmp
lods
movs
dec
sbb
mov
leave
leave
inc
shr
add
xchg
fimul
push
inc
xor
fwait
pop
xor
dec
pop
push
push
dec
jmp
xor
imul
cli
and
mov
mov
inc
push
jg
ss
sahf
fdiv
and
js
(bad)
stc
mov
add
xchg
aaa
(bad)
and
pop
pop
bound
push
sub
call
daa
mov
push
movs
mov
leave
test
push
add
ins
aas
aad
outs
mov
retf
xchg
mov
out
xor
call
or
jae
retf
es
sub
push
ret
jns
rcr
xchg
xchg
(bad)
call
pop
sub
mov
sub
ins
adc
add
adc
mov
push
and
gs
frstor
jne
and
ret
imul
js
scas
outs
rcr
movs
mov
mov
push
jp
dec
mov
mov
outs
or
repnz
sbb
or
jne
jge
test
jnp
pusha
mov
mov
cmp
cld
xor
into
cld
movs
sub
inc
arpl
test
mov
or
mov
push
xchg
pop
sub
add
xchg
push
fcomp
dec
pushf
inc
gs
in
mov
cli
test
call
fild
ja
out
mov
push
sbb
xchg
repnz
loop
repz
fwait
push
neg
call
and
aad
and
ja
mov
jp
dec
lds
push
mov
stos
daa
stos
add
movs
xor
jnp
push
shr
ret
fild
jmp
gs
rcl
ficomp
jge
loope
int3
(bad)
push
sbb
xor
xor
sub
stos
jl
mov
imul
dec
repz
mov
rcr
ins
bound
daa
cmc
fisub
push
std
cmp
push
fsubr
add
cld
mov
aas
or
jae
retf
adc
es
push
ret
add
ret
sub
cmp
xlat
xchg
sbb
dec
cmps
xchg
or
sbb
call
jo
pop
aaa
aam
arpl
pop
test
cmp
in
xchg
pop
pop
mov
or
adc
or
outs
and
outs
cmps
dec
add
out
push
and
mov
or
out
and
ins
enter
(bad)
rcl
sahf
arpl
push
add
(bad)
cmp
fsubr
mov
adc
jae
mov
cmp
xchg
int
mov
es
push
push
dec
stos
shl
(bad)
adc
ds
sbb
aad
xor
data16
fisubr
inc
dec
xchg
ret
cli
popf
mov
dec
fiadd
pop
sub
movs
js
add
loope
retf
pop
test
add
jle
lods
sbb
push
inc
fsubr
das
sub
sub
push
inc
loopne
call
ins
pop
push
sbb
daa
repnz
pop
mov
outs
fidiv
push
out
bound
adc
jg
mov
ja
cld
sub
xchg
mov
xchg
pop
inc
pop
jg
stc
loop
imul
jo
mov
enter
mov
call
sbb
fild
inc
mov
xchg
mov
or
xchg
inc
cmc
clc
push
adc
popf
xlat
icebp
push
add
sub
gs
jecxz
cmc
mov
shr
inc
je
jae
call
sti
pop
or
cmps
xchg
(bad)
shl
pop
sub
mov
mov
adc
inc
test
or
jnp
ror
call
sub
sbb
push
ret
in
cs
push
popa
cli
out
xchg
cmp
xor
push
push
std
out
(bad)
popf
xchg
pushf
(bad)
aam
call
jge
mov
and
mov
jb
and
mov
je
dec
aas
and
sbb
dec
jmp
mov
ficom
jne
push
xchg
scas
mov
mov
and
shl
loope
adc
sar
jne
(bad)
repnz
imul
and
outs
inc
add
movs
(bad)
jecxz
push
mov
les
jo
mov
aaa
les
dec
xor
sbb
stc
cs
cmps
add
sbb
mov
into
stos
icebp
jnp
xor
push
(bad)
shl
pop
and
jbe
xchg
jg
xchg
icebp
dec
fidiv
gs
(bad)
xor
cmp
dec
jo
push
nop
inc
das
jmp
in
jbe
mov
mov
pop
mov
mov
sub
and
ror
es
push
div
shl
in
dec
out
cdq
fstp
add
mov
retf
ja
adc
mov
(bad)
retf
mov
mov
push
imul
sahf
shl
dec
mov
xlat
stos
and
movs
mov
mov
sub
cmc
mov
mov
cmp
iret
fistp
call
sub
fisubr
push
outs
sbb
mov
loopne
mov
es
pop
or
pop
xor
push
scas
enter
scas
loopne
push
jge
inc
fwait
cmps
mul
out
ss
fincstp
loopne
addr16
mov
out
es
add
cmps
imul
imul
pop
or
cmp
push
and
nop
mov
adc
stos
rcr
(bad)
push
lahf
movs
pushf
lods
add
loop
pop
jmp
add
sbb
scas
pop
dec
out
cmc
xor
and
js
inc
push
js
es
and
call
add
fldcw
adc
aam
and
in
call
cmps
rcl
aas
int3
sahf
add
inc
xchg
repz
out
ret
push
sbb
rcr
pop
cmp
dec
cdq
jnp
cmp
mov
inc
shl
jb
push
mov
in
imul
inc
sbb
inc
out
int
cmp
sub
push
stos
push
mov
out
push
mov
mov
popf
push
xor
retf
push
mov
jge
in
jne
dec
sub
jmp
push
or
sbb
pop
ss
jecxz
xchg
inc
cwde
fimul
and
and
adc
adc
or
pop
sub
jl
out
mov
mov
cli
mov
bt
inc
or
mov
mov
stos
push
dec
mov
std
sub
inc
add
imul
xchg
mov
das
repnz
inc
repz
dec
inc
jns
aas
int
mov
int3
rcr
ds
outs
push
imul
sbb
xchg
jns
cmp
call
adc
ja
fdivr
add
adc
xlat
push
xchg
vaddss
pop
cmp
push
sar
adc
lods
pop
xor
hlt
sub
sbb
scas
sar
dec
loope
adc
cmp
rcr
push
mov
push
push
mov
xchg
sub
dec
cmp
test
out
mov
xchg
sti
cdq
add
rcl
dec
inc
xor
mov
je
sbb
jo
and
mov
out
adc
sub
data16
fld
cs
push
mov
test
nop
cwde
outs
xor
xchg
mov
les
cmps
push
das
mov
jge
sub
sub
xchg
add
adc
movs
fild
mov
idiv
sahf
push
jmp
in
in
mov
fcmovbe
adc
call
add
push
dec
retf
dec
into
jle
in
sbb
dec
add
outs
inc
add
sub
or
aam
dec
callw
push
stc
xchg
xchg
or
dec
cmp
sbb
push
jns
fdivr
xor
into
jo
iret
mul
or
mov
int
inc
fs
mov
loopne
cmp
jp
pushf
or
mov
out
or
aaa
movs
xor
dec
aad
stos
cs
call
je
adc
cmp
pop
sahf
or
imul
mov
push
sub
pop
inc
(bad)
repnz
test
xor
sub
aad
adc
pop
rcr
jg
lahf
pop
out
scas
add
jb
xor
hlt
lahf
xor
dec
pop
data16
retf
xchg
aad
aam
cmp
push
hlt
mov
rcl
mov
inc
mov
mov
mov
aaa
pop
int
dec
lgs
test
and
imul
jecxz
mov
(bad)
bnd
sbb
mov
sbb
fsubp
xor
sbb
sahf
pop
div
cs
pop
mov
sub
pop
mov
aas
(bad)
fdiv
pop
pop
neg
icebp
ins
add
lahf
rcl
es
add
sbb
add
sub
cmps
xchg
shl
add
push
cmp
pop
imul
and
mov
sbb
es
fsub
adc
mov
(bad)
and
movs
arpl
dec
pushf
pop
inc
sbb
xor
call
push
dec
lea
jge
addr16
push
push
xchg
pushf
pusha
adc
ds
xor
add
cmp
jns
ins
sbb
lock
movs
sbb
daa
out
popa
and
pop
inc
mov
int
test
pop
out
test
add
stc
add
sar
mov
int
test
mov
rcl
jo
sahf
sbb
fnsave
push
xor
ins
cli
mov
mov
or
test
mov
pop
in
adc
pop
neg
push
mov
jbe
add
push
repz
mov
jbe
aad
pop
leave
pop
jle
ja
retf
mov
mov
adc
mov
int
popa
fisub
jne
cwde
aas
rol
(bad)
or
push
add
adc
fidivr
xchg
jne
addr16
mov
mov
sub
sbb
sbb
sub
jno
(bad)
xor
mov
xor
cmc
sahf
pop
aam
sub
xchg
push
push
movs
push
(bad)
int
fstp
fwait
inc
fs
add
xor
push
push
fnstsw
add
adc
cmps
mov
sbb
cmp
in
lock
cmp
cdq
fiadd
movs
in
and
add
ret
stc
cmp
addr16
jp
xchg
mov
or
pop
push
xor
retf
dec
push
xchg
mov
movs
clc
fidivr
loopne
or
retf
retf
arpl
fcomp
fisttp
jge
adc
ss
rcr
in
lahf
pop
inc
and
ins
arpl
repz
inc
stc
push
jg
jp
gs
popa
add
adc
sub
or
and
cmc
paddw
cmp
xor
mov
lea
aam
xchg
pushf
ror
pop
fsubrp
xor
int
fwait
pop
inc
aas
out
lds
loope
inc
in
sti
es
fnsave
aas
leave
scas
jb
test
jnp
pop
cld
dec
mov
dec
(bad)
add
xchg
adc
aad
movs
sub
xchg
call
das
fld
mov
aam
(bad)
jmp
mov
xchg
add
and
xchg
cmp
mov
in
fidiv
adc
(bad)
mov
outs
cld
sbb
sbb
fldcw
mov
add
inc
adc
jmp
dec
or
mov
(bad)
dec
mov
fstp
pop
popa
or
les
push
pop
sbb
out
ret
in
inc
adc
outs
icebp
aam
pop
add
test
mov
mov
shl
stc
and
sub
mov
outs
push
pop
fidiv
dec
into
scas
dec
enter
(bad)
stos
js
iret
jmp
pop
in
jmp
push
pop
hlt
(bad)
hlt
in
inc
scas
xlat
jne
sub
les
adc
push
pop
in
pop
inc
out
inc
xchg
xor
out
mov
ins
es
rol
mov
push
neg
outs
ja
inc
test
dec
jbe
(bad)
and
loope
sbb
lea
add
fmul
or
test
cmp
xor
int
scas
nop
pusha
xor
mov
inc
fsub
xor
push
xlat
cwde
ins
fnstcw
mov
retf
imul
sti
mov
cmp
(bad)
xchg
cmp
fcmove
jne
mov
pminub
(bad)
lods
cmp
lahf
bound
scas
mov
cmc
mov
dec
jg
add
dec
inc
mov
adc
out
or
ins
xchg
shl
(bad)
fadd
imul
fnsave
dec
xor
loopne
(bad)
mov
cmp
call
xor
mov
cmp
ss
call
inc
cs
out
and
shr
pop
dec
stos
xlat
or
(bad)
icebp
lahf
xor
in
popa
dec
xlat
push
dec
lahf
mov
dec
cmp
mov
xchg
rcr
in
add
jle
adc
jne
rcr
std
ins
cmovge
js
mov
sahf
push
cmp
mov
jbe
arpl
popf
push
adc
push
iret
mov
or
dec
mov
(bad)
sbb
adc
lods
in
arpl
mov
outs
jae
xchg
ja
js
inc
jp
jmp
xchg
and
imul
inc
mov
(bad)
fsubr
pop
add
cmp
xor
lahf
fs
in
xchg
aaa
shl
js
inc
fcom
in
test
or
mov
jne
hlt
jno
lock
xchg
jecxz
add
jmp
jne
es
push
in
ins
jb
push
loop
cmps
jns
mov
mov
enter
lock
jnp
xor
scas
or
lods
call
gs
mov
loope
daa
mov
pop
(bad)
jmp
add
adc
sbb
push
test
add
jp
push
fsincos
push
xchg
push
or
fiadd
add
sub
pop
push
ret
leave
or
pop
xor
ret
dec
test
sub
shr
cld
cmps
into
xlat
jbe
cmc
lea
int3
test
cmp
sti
jl
ret
xor
xchg
pop
loopne
test
scas
and
mov
pop
cmp
neg
mov
cdq
xor
jp
enter
ror
cld
xchg
push
and
push
jo
sub
scas
rcr
or
push
mov
aas
arpl
sub
sbb
not
jno
dec
fisttp
jnp
daa
and
push
out
lods
jmp
dec
test
cmp
jns
shl
aam
(bad)
sbb
jge
pop
jae
mov
add
ins
mov
jmp
test
xchg
xchg
jne
jp
sub
(bad)
pop
rcl
aas
mov
pop
outs
lods
dec
inc
movs
mov
xchg
loope
sbb
outs
sbb
pushf
cld
xchg
repz
mov
sub
jmp
mov
movs
pop
push
stos
out
aad
xchg
add
inc
mov
test
fldenv
adc
adc
pop
shl
jmp
cmp
xchg
out
sbb
adc
leave
pop
xor
scas
movs
bound
rcl
fwait
in
dec
je
sub
mov
jae
mov
push
pop
adc
xchg
loop
or
ret
mov
enter
cmp
push
cdq
mov
jmp
jp
and
fxch
pop
cs
lea
inc
mov
pusha
(bad)
movs
mov
fmul
cwde
(bad)
fidiv
cmp
dec
(bad)
test
xchg
jmp
mov
sub
push
sbb
xchg
dec
jl
(bad)
xor
mov
test
imul
fwait
or
lds
iret
cmp
scas
repz
fistp
mov
test
inc
and
pushf
icebp
fst
and
icebp
push
adc
repnz
xor
jmp
arpl
icebp
ret
ja
lods
mov
mov
out
imul
xchg
loopne
rol
pusha
mov
dec
and
popa
ins
aaa
fidiv
push
jne
mov
pop
dec
imul
inc
push
inc
mov
cmp
test
das
sub
push
add
je
xor
mov
int3
mov
mov
mov
adc
(bad)
je
je
iret
ret
shl
dec
(bad)
fistp
lds
call
xchg
mov
or
pop
cmp
fs
pop
clc
jne
jo
int
or
pusha
imul
clc
dec
jne
loope
sub
addr16
adc
pop
(bad)
jbe
icebp
pushf
mov
or
and
clc
mov
sbb
xchg
inc
ins
lock
sar
cmc
xchg
mov
(bad)
mul
js
xchg
or
jmp
cld
fld
push
sti
mov
ret
cmps
clc
in
lds
inc
cmps
fwait
mov
inc
int
std
lgs
lea
and
push
not
fdivr
inc
sub
loopne
imul
scas
jbe
pop
xor
lahf
shr
sub
fistp
dec
mov
je
div
push
jne
and
cdq
dec
dec
or
cmp
cmp
and
das
popf
imul
les
pop
lock
rol
ja
popf
stc
mov
mov
cmp
inc
cli
movs
retf
xchg
cli
stc
(bad)
rsqrtps
and
les
jae
jo
pop
push
adc
shr
or
inc
stos
or
test
xchg
cmc
mov
cdq
ins
cmps
adc
xor
sub
mov
mov
loope
in
cmp
movs
lods
adc
sub
jo
jno
hlt
xchg
pop
dec
push
cmp
ja
in
dec
pop
push
imul
dec
mov
bound
sbb
jg
out
jns
sub
xchg
shl
mul
jge
and
das
and
pop
dec
inc
rcl
imul
add
ss
lds
push
mov
cmc
(bad)
add
in
ret
xchg
mov
add
mov
sahf
in
inc
sub
icebp
mov
inc
cmp
frstor
cld
fisubr
clc
dec
aad
inc
xor
sbb
mov
or
loope
sbb
sbb
inc
stc
gs
inc
mov
pop
scas
in
and
cs
mov
loopne
fnstsw
imul
in
inc
loope
mov
sub
sbb
sahf
(bad)
fidiv
jge
mov
gs
mov
xchg
popf
iret
outs
ins
and
xchg
in
jmp
dec
pop
ret
cs
icebp
mov
sub
call
cdq
ins
aaa
mov
jnp
fisub
adc
pop
adc
fidivr
mov
inc
leave
or
xchg
test
cs
fwait
xchg
pop
sub
repnz
sub
jl
jbe
push
adc
jo
arpl
jns
aam
outs
inc
sti
pusha
call
push
mov
loope
sbb
inc
inc
sbb
add
pop
mov
sub
mov
(bad)
fs
cmp
lods
mov
outs
pop
sar
into
xor
rcl
pop
push
inc
mov
xchg
jns
sub
fsubr
std
arpl
push
not
dec
push
xchg
cmc
dec
ret
mov
xlat
ss
sub
xchg
fistp
dec
mov
neg
jg
sahf
xchg
cmp
(bad)
jne
mov
jo
dec
and
pop
in
push
cmp
gs
pop
cmps
and
fst
pop
mov
ins
loopne
inc
xor
jnp
aad
mov
fnstenv
or
xlat
out
jo
dec
retf
das
push
push
stos
dec
mov
xchg
test
sbb
mov
xor
cmp
lahf
or
in
cmps
adc
mov
pop
add
iret
mov
or
xor
adc
dec
jnp
ins
cmp
xchg
fisubr
inc
fisttp
mov
pop
adc
retf
aam
(bad)
(bad)
clc
sbb
xchg
mov
dec
jnp
imul
inc
movs
cmp
sub
or
in
cmp
xlat
ins
cdq
push
js
jge
sbb
ret
std
outs
dec
rol
sbb
imul
les
ins
push
mul
ret
inc
leave
shl
das
cdq
push
outs
daa
inc
adc
mov
popa
out
das
test
and
sar
jne
aas
xor
cmp
jmp
adc
sbb
out
loop
test
sbb
sahf
dec
push
mov
fld
xchg
popa
arpl
outs
push
cwde
movs
dec
inc
mov
cwde
sbb
ret
es
in
mov
mov
pushf
jns
(bad)
retf
add
arpl
adc
out
pushf
inc
jnp
mov
xchg
daa
sbb
lahf
cs
hlt
push
dec
cdq
sub
push
jmp
popf
pop
(bad)
pop
add
mov
fidivr
adc
adc
and
add
das
xchg
sbb
sub
push
sbb
test
enter
inc
hlt
ins
jo
bound
outs
call
add
test
xor
sahf
stc
mov
adc
icebp
call
jbe
and
sbb
adc
add
xchg
dec
inc
cmp
mov
add
int3
pop
cmp
sub
popa
pop
mov
xchg
mov
retf
cmp
xchg
jnp
or
pop
cmp
push
aam
jmp
jp
es
aam
in
repnz
leave
pop
inc
cmc
test
jge
pop
pop
repnz
retf
mov
sbb
dec
cmps
fwait
pop
sbb
loopne
sub
sub
jae
cmp
lods
pop
xchg
push
arpl
xchg
(bad)
and
jl
cmp
out
mov
jge
cdq
imul
mov
leave
fmul
rcr
ret
rcl
mov
pop
xchg
cmps
pop
pop
xor
mov
xchg
mov
je
mov
adc
sbb
in
in
jo
je
adc
cmc
fisub
xchg
fimul
add
jnp
push
sub
aas
push
lds
push
mov
aaa
mov
fcom
cld
(bad)
cmps
sbb
jbe
cld
call
mov
pusha
xchg
(bad)
mov
dec
pushf
ins
ins
mov
mov
adc
ss
push
or
xchg
sbb
rol
sti
shr
sti
imul
ins
out
rcr
icebp
sbb
sahf
imul
xor
clc
out
imul
mov
dec
push
ret
jg
ss
jmp
lods
std
into
(bad)
retf
push
pop
jl
mov
lahf
in
sbb
call
idiv
or
std
xchg
call
aam
and
xchg
lods
dec
jne
int
call
mov
pusha
pop
adc
cmp
bound
js
das
fwait
int
ror
jo
sbb
stos
call
(bad)
icebp
in
jge
pop
and
mov
ja
mov
jae
pop
xor
nop
stc
pop
mov
dec
xor
xor
mov
add
and
aad
(bad)
pop
mov
arpl
push
xchg
jo
add
push
sub
dec
and
mov
test
out
in
sub
sub
or
cdq
clc
xor
inc
dec
(bad)
int3
mov
bound
mov
mov
push
dec
pop
push
add
inc
(bad)
sti
mov
rcl
scas
clc
mov
mov
inc
mov
jne
sbb
adc
and
pop
in
mov
cmp
gs
and
(bad)
pop
pop
arpl
adc
xor
call
pusha
jp
div
cld
jns
enter
push
pop
xor
add
xlat
push
sub
xor
loope
retf
das
jl
cwd
mov
jg
xchg
ja
test
shl
aad
push
pop
inc
xor
dec
jns
mov
push
aad
push
loopne
mov
aam
das
pop
cmp
aad
pop
mov
neg
add
mov
pop
adc
icebp
fs
mov
xor
je
arpl
dec
dec
out
xchg
pop
xchg
sar
(bad)
jns
jno
or
mov
sub
stc
push
movs
lea
push
adc
nop
push
add
hlt
mov
add
cdq
je
adc
mov
jb
push
fld
aam
lods
pop
mov
push
das
scas
inc
xchg
(bad)
dec
mov
cld
movs
outs
(bad)
int
and
or
(bad)
sbb
cmp
dec
adc
imul
imul
inc
dec
out
xor
pop
and
add
sahf
mov
test
sub
push
inc
inc
mov
dec
in
sahf
outs
test
pop
or
outs
cmp
shr
pop
mov
lahf
push
stos
xor
mov
pusha
pop
push
push
imul
inc
adc
and
sbb
in
shr
aad
(bad)
and
jecxz
cld
adc
imul
xor
clc
xor
adc
(bad)
push
adc
loope
popf
add
mov
cmp
rol
sbb
pushf
adc
xchg
out
call
das
xchg
mov
sub
enter
xacquire
icebp
pusha
and
mov
sub
lea
sub
push
dec
ret
js
cmp
jge
lods
xor
jl
mov
les
push
(bad)
inc
cmp
or
popf
aas
or
das
and
push
cld
adc
sub
rcl
push
sahf
add
icebp
neg
sub
(bad)
xlat
mov
dec
cwde
adc
(bad)
adc
sub
add
sbb
push
retf
jg
dec
mov
jge
bound
cmp
pop
stos
jge
mov
cmps
ror
cmp
shr
push
addr16
je
leave
retf
cs
jnp
cwde
xor
(bad)
xchg
dec
imul
ret
ins
rcr
jge
out
pop
xchg
xchg
cld
add
sub
into
dec
lahf
sbb
pushf
in
and
xchg
(bad)
xchg
sti
lods
push
push
js
xor
sub
mul
mov
rcr
dec
fwait
dec
jge
dec
loope
js
inc
push
mov
loope
cmps
aaa
jbe
inc
aad
xor
jnp
ret
(bad)
shl
rcr
je
mov
out
jmp
jne
loope
pop
test
mov
test
mov
dec
xlat
retf
push
or
jmp
lods
lea
and
std
dec
xchg
mov
(bad)
loop
push
es
fsubr
leave
sbb
mov
sub
call
mov
fmulp
lods
popf
lea
jb
ror
mov
sub
xor
leave
mov
test
push
aam
xor
or
stos
(bad)
out
inc
and
imul
mov
and
mov
icebp
xor
xor
dec
cmp
pop
arpl
test
clc
add
pop
sub
add
mov
fld
mov
xor
cdq
retf
push
jnp
mov
xchg
mov
pop
movs
retf
fcom
out
enter
fld
mov
inc
add
sahf
outs
or
add
stc
shr
(bad)
imul
neg
icebp
jmp
ins
stos
xor
jmp
push
rcl
xlat
test
adc
lahf
out
jnp
in
mov
xchg
xor
adc
jne
clc
push
(bad)
jb
pop
xor
pushf
push
add
scas
std
push
iret
sub
add
out
loopne
int3
call
jb
mov
aaa
je
cmp
hlt
stc
mov
jp
push
xchg
ret
ins
jnp
fisttp
xchg
pop
pusha
add
ins
pop
loope
mov
aad
mov
loop
stos
stos
dec
and
sbb
cmc
pop
cmp
sbb
test
mov
mov
mov
push
lock
dec
mov
sub
sbb
adc
xchg
test
dec
sbb
xor
sar
pop
shr
xor
rol
adc
fadd
xor
retf
inc
loop
jbe
aam
push
in
je
fld
outs
lahf
daa
xchg
fadd
popa
inc
sbb
pop
int3
test
repz
push
js
loope
xchg
sbb
cli
dec
ins
jb
(bad)
(bad)
pop
cmp
mov
test
imul
and
iret
dec
mov
cmc
sahf
and
xor
xor
pop
(bad)
push
in
mov
das
aas
push
pushf
dec
push
pop
xchg
push
cmps
dec
sub
rcr
pop
out
addr16
cmp
int3
loop
or
out
inc
cld
inc
mov
add
push
adc
jae
sbb
dec
inc
sub
aaa
lahf
test
pop
clc
ja
fcom
hlt
jecxz
push
outs
shr
cs
(bad)
(bad)
nop
(bad)
cli
xchg
lahf
stc
or
add
loope
and
and
mul
mov
out
popf
clc
dec
xor
outs
data16
or
xlat
fcmovbe
bound
(bad)
iret
(bad)
jg
jae
xchg
mov
xchg
sub
in
push
inc
fsub
popa
loope
jns
xchg
sbb
div
jno
test
cli
popa
mov
test
shl
push
cmp
and
dec
add
fucomi
fidivr
sub
mov
(bad)
push
fadd
jns
data16
rcl
cdq
cld
xor
jbe
pop
imul
aam
pop
cmps
daa
stos
dec
mov
xor
mov
push
lahf
or
mov
xor
xchg
sti
shr
inc
adc
aas
shr
pop
pop
sbb
or
jno
inc
repz
dec
loope
or
pop
(bad)
cld
push
test
xchg
ins
xor
ss
xchg
xor
out
repnz
inc
(bad)
cli
inc
adc
fbstp
daa
mov
xchg
in
jl
pop
stc
popf
inc
inc
rcr
nop
hlt
mov
(bad)
loop
xchg
mov
out
addr16
pushf
inc
fldcw
pushf
popf
sub
loopne
and
daa
outs
cli
push
imul
es
jmp
call
dec
outs
xor
hlt
fisub
cld
dec
enter
fcomp
(bad)
stos
xor
mov
stc
arpl
pop
inc
loop
in
shl
sti
push
fisttp
in
xchg
mov
or
mov
(bad)
sti
cmp
xchg
imul
xor
pop
lds
mov
mov
dec
cmps
cmp
cmp
xor
ja
in
arpl
pop
inc
in
mov
sar
movs
(bad)
std
icebp
aas
int
call
paddw
xchg
(bad)
cld
into
fwait
push
out
mov
xor
sbb
sbb
xor
outs
sti
mov
(bad)
cmp
out
aad
add
mov
in
push
inc
push
mov
loopne
dec
stos
mov
jne
cmp
cmp
mov
or
fst
movs
fprem
das
or
mov
mov
call
mov
inc
adc
lods
xor
ins
dec
xor
push
dec
adc
xor
fs
pop
repz
sbb
xlat
inc
mov
loop
mov
clc
jle
mov
jmp
mov
int3
inc
out
pop
and
jge
push
pop
pushw
inc
adc
data16
imul
push
mov
cmps
in
inc
add
mov
mov
outs
out
xor
lods
dec
xor
cs
(bad)
cmp
or
xlat
in
cmps
aad
xor
jae
mov
das
sti
pop
and
enter
mov
hlt
pusha
nop
test
dec
das
cli
pushf
lods
lods
aas
jno
sar
lods
xor
jmp
int3
out
inc
and
mov
jae
jno
imul
popa
mov
sub
repz
retf
adc
cmps
pop
or
push
icebp
lahf
dec
sub
je
loope
inc
mul
dec
outs
cmp
xchg
sbb
adc
jp
je
sbb
clc
stos
popa
sub
out
jo
imul
loope
test
mov
out
jo
xchg
popf
push
outs
cwde
repz
repz
sub
mov
ins
iret
sub
call
in
sbb
mov
cmp
into
mov
xchg
hlt
cdq
xchg
jbe
div
call
adc
pop
add
dec
(bad)
dec
ds
mov
cdq
popa
or
mov
inc
ins
dec
mov
repnz
jp
sub
cdq
imul
aaa
sub
cli
push
xlat
(bad)
cli
rcl
mov
xor
pushf
sbb
cmp
add
and
mov
mov
cmp
fld
mov
xchg
pop
out
(bad)
lahf
cld
mov
add
inc
loopne
push
xchg
scas
pop
dec
mov
xchg
gs
dec
adc
push
pop
test
out
jne
or
cs
int3
out
pop
dec
pop
cmc
call
or
xchg
scas
mov
or
or
push
lock
mov
mov
cli
ins
cs
and
or
and
mov
ret
adc
jnp
xor
lods
add
sbb
mov
xchg
ins
js
call
push
inc
sub
ss
inc
mov
sub
cdq
movs
and
in
fninit
ins
aam
ficom
cmc
fdivr
dec
mov
adc
out
push
pop
js
pop
xchg
mov
mov
leave
les
adc
xor
mov
jecxz
pop
scas
test
inc
call
pushf
gs
aam
int
push
mov
mov
lock
out
in
int3
pop
xor
dec
sub
jmp
sbb
scas
clc
(bad)
jp
fld
dec
(bad)
stos
std
jnp
les
icebp
mov
xchg
jecxz
daa
scas
mov
pop
cmp
cmp
pop
(bad)
jg
call
shl
sbb
rol
pushf
mov
fimul
data16
outs
mov
not
addr16
xchg
cmp
pop
cmp
inc
ja
jmp
clc
call
jnp
push
js
sti
pushf
sub
sub
xor
push
fnstcw
push
sti
std
outs
push
hlt
hlt
adc
cmc
imul
pop
scas
jmp
jle
cmp
daa
icebp
and
daa
retf
push
icebp
pop
mov
movs
(bad)
dec
jle
mov
ins
adc
xchg
and
iret
mov
fcom
add
outs
xchg
mov
jmp
in
mov
cmps
(bad)
lods
adc
loope
int3
ret
jecxz
es
dec
xlat
mov
in
jmp
rep
sar
xor
scas
cmp
dec
mov
scas
in
mov
pop
inc
and
out
inc
in
mov
push
sbb
or
adc
fcmove
sub
out
test
push
xchg
or
mov
movs
adc
jg
xor
out
sub
cmc
sub
add
imul
out
xchg
or
jbe
push
shl
rol
inc
mov
pop
xchg
out
pop
std
in
add
xchg
or
jno
pop
loop
outs
mov
add
sbb
out
loopne
jge
sub
iret
shl
out
fdiv
por
xor
mov
add
bound
fsub
or
sbb
sbb
(bad)
mov
aam
sbb
imul
or
jmp
adc
adc
in
rol
or
pusha
fdivrp
or
imul
out
xchg
mov
adc
enter
(bad)
daa
adc
iret
mov
xchg
or
push
call
push
leave
outs
loop
mulps
dec
addr16
ins
out
call
outs
pop
hlt
imul
sbb
push
out
inc
dec
arpl
int3
out
pop
and
or
jmp
fistp
xchg
sbb
fadd
scas
push
jb
mov
or
rcl
fldcw
sbb
pop
repz
push
xchg
push
imul
repnz
call
cs
add
(bad)
dec
retf
andnps
ins
lods
sti
repz
movs
push
add
fnstcw
scas
sbb
test
or
or
cmps
cld
pop
(bad)
cmps
mov
xchg
aad
(bad)
sti
adc
in
es
out
clc
add
jle
adc
cmc
cmp
jecxz
mov
test
shl
scas
cmp
retf
mov
sub
mov
jmp
mov
mov
lock
cld
mov
mov
push
fisttp
movs
mov
jg
xchg
adc
and
sbb
movs
or
cld
stos
fwait
and
imul
retf
mov
xchg
pop
push
pop
out
push
and
arpl
xor
pop
sub
ins
cmp
nop
dec
out
les
push
push
adc
dec
std
cmp
dec
pop
jg
(bad)
stc
jge
dec
add
shr
mov
jmp
jno
fbld
pop
adc
neg
adc
xlat
cmc
cmps
inc
(bad)
call
mov
rol
mov
pop
sbb
test
movs
(bad)
cs
mov
adc
add
arpl
sub
test
cmp
sbb
pop
out
add
sbb
not
int
pop
sub
test
hlt
test
hlt
pusha
aas
mov
stc
sbb
adc
cmp
neg
jo
adc
fcom
sbb
shr
push
push
lods
jns
ret
mov
ins
in
pop
pop
dec
mov
in
push
or
in
mov
into
push
and
mov
xor
pop
cmp
inc
sbb
popf
cli
xchg
ret
dec
sub
loope
cmc
stos
mov
and
out
stos
jne
(bad)
mov
adc
sub
repz
xchg
and
mov
cmp
cs
dec
xchg
push
xor
push
or
mov
mov
cmp
dec
(bad)
popa
daa
mov
adc
shl
daa
test
pop
pop
push
aas
mov
and
je
hlt
mov
inc
(bad)
adc
in
cmps
leave
push
inc
int
mov
mov
adc
mov
xchg
cmp
xchg
jo
out
popa
add
cli
jmp
or
(bad)
and
push
adc
inc
xchg
arpl
mov
mov
cmp
pop
(bad)
mov
shl
sub
sahf
pop
or
sub
fnsave
lea
icebp
sar
repnz
push
fcomp
mov
ds
jmp
push
mov
cli
xchg
mov
loope
xor
jne
call
neg
ja
std
scas
bound
cmps
pop
sbb
repz
aam
shl
dec
hlt
jne
stos
xchg
jp
enter
or
and
loope
ret
shr
add
fwait
mov
push
push
jbe
fistp
je
jmp
js
ss
mov
mov
pop
and
inc
mov
push
nop
sti
or
clc
clc
daa
jnp
mov
ss
(bad)
pop
fcomp
and
cmp
xchg
pop
das
in
jge
out
stos
pushf
shl
cmps
xchg
add
jae
and
mov
stos
push
pop
ret
ins
and
cmc
adc
ins
and
xchg
push
int3
inc
pop
mov
mov
xchg
ror
push
test
adc
and
push
push
scas
arpl
popf
and
sbb
call
jae
cwde
lods
loope
sti
enter
test
pushf
stos
xor
cmp
xchg
sub
cmps
xchg
jno
xchg
push
inc
fsubrp
and
xor
lods
(bad)
mov
mov
cmp
mov
inc
fisubr
inc
fimul
or
frstor
inc
jae
adc
mov
int3
jle
sbb
xchg
fistp
xchg
xor
frstor
fld
dec
test
mov
mov
cmp
fbstp
mov
aas
iret
mov
out
push
retf
pop
daa
imul
or
movs
div
pop
int
fild
and
push
pop
popa
lea
leave
push
mov
fdiv
mov
add
dec
test
mov
push
inc
and
cmp
call
ja
or
ret
jns
fwait
cmps
cmps
outs
push
mov
lea
lods
pop
and
data16
jae
mov
mov
jmp
mov
push
push
data16
mov
out
lds
cld
jmp
mov
cmps
sbb
push
pop
sub
push
(bad)
jl
sbb
mov
outs
arpl
(bad)
iret
adc
jmp
pop
leave
push
outs
pusha
iret
pop
push
jo
ror
inc
ins
mov
mov
aaa
xor
mov
stc
push
add
mov
jle
jo
mov
arpl
add
popa
pop
pop
loopne
test
adc
daa
xlat
(bad)
ss
(bad)
dec
dec
int
repz
or
xchg
test
adc
and
dec
inc
cmp
movd
(bad)
in
mov
jbe
sub
mov
mov
pop
add
push
loopne
call
push
adc
push
mov
cwde
sbb
xchg
popa
lods
je
cmp
sub
pop
stos
mov
mov
sbb
push
mov
add
add
add
aad
in
stc
loop
xchg
sub
mov
fwait
out
popf
xor
or
cmp
add
ret
push
add
loop
adc
test
or
jo
test
cmp
lock
mov
test
aaa
in
cmp
icebp
cmp
add
nop
jnp
mov
cmps
or
aas
(bad)
mov
xor
and
fxtract
loop
jge
fwait
mov
fsub
ds
int3
sbb
and
cdq
sub
pop
pop
push
mov
inc
jbe
xchg
addr16
mov
rcl
cwde
je
jmp
fwait
mov
jecxz
ret
cmps
jge
xchg
jg
push
cli
xchg
and
movs
call
mov
inc
xchg
dec
cmp
icebp
sub
(bad)
xor
mov
retf
test
hlt
div
sub
and
jg
add
ins
and
out
dec
cmp
push
retf
add
inc
aad
xor
data16
xchg
mov
pusha
(bad)
xchg
push
mov
lea
mul
jp
jb
ficom
js
rcl
mov
clc
rol
mov
pop
arpl
int
out
lea
loopne
call
mov
cmp
popf
aaa
inc
inc
add
push
int3
inc
and
pop
(bad)
jg
stos
mov
cli
adc
mov
inc
and
cmps
loopne
retf
mov
(bad)
cmc
(bad)
sbb
inc
push
fs
ds
mov
dec
data16
shl
and
push
and
aas
mov
das
loopne
mov
ins
test
pushf
mov
adc
sub
sbb
movs
pop
lea
test
mov
pop
clc
pop
adc
lds
cmc
push
fs
push
and
cld
shl
cmp
cld
fimul
cmc
mov
imul
and
rol
mov
int
mov
loope
add
dec
jne
lock
cmc
mov
xchg
add
mov
adc
or
in
xchg
jbe
push
sbb
out
ror
stos
leave
pop
ds
push
test
popf
xor
int
mov
sbb
add
shr
fsub
jno
cmp
xor
cmp
and
mov
or
sub
mov
sub
out
sub
imul
ds
(bad)
xchg
ja
ins
add
mov
xchg
pmaxsw
mov
outs
jno
dec
in
pop
fisubr
xchg
test
test
cli
shl
cmp
lahf
das
jl
sbb
jae
in
hlt
mov
mov
pushf
inc
cli
xor
ror
ret
test
jl
pusha
aam
or
and
mov
in
cmp
inc
data16
shl
ins
lock
adc
movs
test
les
fsub
inc
dec
int
dec
xchg
ret
(bad)
sbb
mov
sub
jp
popa
mov
es
push
sbb
and
pushf
fild
jmp
sar
lods
xor
push
push
sahf
add
addps
stc
(bad)
call
or
shr
xchg
mov
rcl
aaa
popa
pushf
sbb
cld
sahf
sub
les
adc
repnz
add
or
xchg
jno
mov
cmp
mov
and
(bad)
aam
push
mov
sub
xchg
inc
xchg
push
xor
pop
retf
mov
mov
(bad)
push
mov
and
push
cmp
mul
mov
lods
and
loopne
shr
(bad)
mov
inc
xor
outs
pop
or
ss
adc
pop
push
std
cmp
cmps
adc
sar
push
push
in
pop
ins
call
inc
fdivr
jae
mov
(bad)
call
pop
ffree
sub
and
lods
das
inc
dec
and
shl
stos
push
push
enter
std
in
push
cmp
mov
enter
loop
mov
loopne
imul
pop
pop
movs
repz
ror
idiv
push
jge
std
adc
outs
loope
dec
add
add
ins
mov
mov
aas
(bad)
dec
fst
jb
in
pusha
xlat
xlat
sbb
pop
mov
or
inc
cmps
mov
sbb
xor
cs
jne
fucomp
dec
in
push
je
mov
xlat
iret
push
std
ja
jnp
push
in
imul
call
imul
scas
call
arpl
test
(bad)
cmp
ss
or
cli
add
xor
ret
adc
jecxz
sbb
pop
lds
inc
es
call
mov
aaa
loope
imul
xchg
js
js
sar
xchg
mov
int
rcr
pop
aam
jle
fs
loope
data16
cmp
ds
pusha
test
mov
mov
shl
mov
enter
imul
fmul
xchg
sbb
adc
and
shr
cmc
adc
imul
dec
sbb
jne
hlt
out
push
out
sbb
xor
stc
dec
ja
sub
dec
loopne
mov
(bad)
mov
inc
jp
push
fldlg2
fstp
leave
inc
sbb
test
dec
jo
xor
aad
push
std
mov
lahf
arpl
imul
jne
or
and
fsub
cmp
xchg
mov
mov
repz
xchg
test
sub
add
push
mov
leave
mov
jb
pop
sbb
test
ja
pop
jnp
xchg
mov
mov
inc
add
fst
or
bound
mov
inc
into
stos
test
mov
dec
mov
inc
rcr
lock
les
pop
(bad)
lods
or
ss
xor
(bad)
repz
adc
push
inc
jmp
sub
jle
pop
mov
mov
ins
sbb
stos
inc
cmps
icebp
loop
in
inc
ds
aas
pop
mov
xor
push
ret
push
popf
fsub
fadd
test
arpl
inc
stos
xlat
xor
or
rcl
dec
call
inc
and
(bad)
movs
fmul
imul
jbe
push
mov
fs
pop
fild
(bad)
ficom
sti
shr
(bad)
fcom
push
pusha
adc
sub
int3
xchg
int
outs
rcr
fstp
in
and
popa
movs
int3
add
int3
cmp
repnz
mov
in
pop
xor
lods
fs
mov
mov
rcr
adc
mov
rcl
cmp
inc
cmp
xlat
pop
test
dec
push
mov
pop
add
cmc
jo
int
cdq
mov
jb
and
(bad)
call
push
not
or
out
adc
stos
cld
dec
or
sub
test
pushf
jge
repnz
cmp
cmp
(bad)
jmp
(bad)
or
mov
mov
or
sub
push
jle
push
out
jge
or
daa
and
add
adc
in
inc
push
inc
inc
and
mov
sbb
push
jle
push
cmp
lds
aaa
and
icebp
nop
daa
icebp
loop
(bad)
test
cmps
fidivr
push
das
mov
push
sub
pop
rcr
jne
pop
mov
mov
lods
movs
gs
push
cli
and
or
mov
xchg
outs
mov
push
or
pop
inc
scas
jns
or
jo
out
call
mov
sub
std
mov
pop
mov
pop
lods
shl
jne
das
jbe
mov
fisttp
movs
and
sub
loop
xchg
pushf
imul
push
shl
jo
sahf
jle
call
shr
jae
popa
sbb
lods
into
add
popf
jnp
loop
cwde
pusha
test
lea
lods
stos
addr16
test
and
and
mov
pop
mov
call
pop
xchg
xor
add
push
mov
das
mov
aaa
ins
(bad)
add
mov
sub
inc
jle
(bad)
mov
(bad)
iret
pop
fcomp
movs
jmp
ss
cmp
les
shl
mov
lock
add
repz
(bad)
(bad)
sbb
aad
pop
sub
xchg
das
xor
inc
imul
gs
(bad)
fwait
neg
fscale
jecxz
jge
outs
out
jns
mov
inc
jo
rol
icebp
das
arpl
(bad)
jno
or
pop
push
inc
call
cmps
mov
movs
add
sbb
dec
out
dec
outs
mov
jae
mov
sub
add
retf
sti
mov
add
mov
imul
arpl
push
ret
add
fldenv
and
stc
ds
cmp
nop
and
popa
add
test
jo
fimul
outs
mov
mov
and
int
mov
or
add
mov
bnd
stc
in
pop
and
adc
sahf
popa
mov
xchg
(bad)
push
push
mov
sub
inc
aaa
adc
sar
int
(bad)
sub
aad
mov
inc
pop
and
dec
clc
out
inc
scas
mov
dec
and
sti
jo
in
call
jp
push
xor
mov
stc
cmp
jge
xchg
(bad)
ds
mov
cmp
ret
mov
mov
xor
retf
nop
mov
mov
dec
mov
(bad)
mov
popa
mov
stos
push
movs
cmp
aas
fmul
imul
adc
ffreep
and
jecxz
fldenv
cmp
nop
std
iret
jle
push
mov
call
fist
(bad)
xor
cs
jb
clc
arpl
jae
movsx
sub
dec
fcomip
cli
fwait
xchg
ins
scas
xor
mov
xchg
les
sbb
pop
xor
sti
retf
adc
mov
popf
add
(bad)
iret
push
jp
movs
jl
and
mov
and
pushf
loope
xchg
jge
push
jo
push
sub
push
xchg
push
jecxz
xor
push
mov
push
sbb
ror
push
fwait
sbb
bound
aam
popf
aaa
jmp
rol
adc
jo
nop
mov
adc
mov
xchg
arpl
mov
push
xchg
jo
mov
push
in
in
mov
cvtdq2ps
fucomp
push
loop
jns
mov
int3
mov
adc
adc
cmp
cld
lahf
add
rcr
and
mov
sbb
and
xchg
jb
popa
movs
popa
jle
lds
ja
sub
mov
imul
sub
xchg
xchg
lahf
jge
push
mov
xchg
push
hlt
js
pop
mul
(bad)
retf
test
jno
pushf
sbb
mov
mov
mov
push
cs
pop
mov
out
arpl
inc
clc
outs
jle
iret
movs
push
mov
jmp
cld
or
(bad)
imul
jl
pop
mov
dec
xchg
inc
cdq
xor
push
mov
cli
cs
shl
ins
mov
adc
jmp
mov
adc
mov
shl
dec
xor
repz
inc
sahf
pop
hlt
xor
cdq
jne
jb
imul
push
imul
jne
sub
mov
fsub
lods
sub
test
call
adc
in
out
mov
dec
fistp
pusha
pop
xchg
adc
int
icebp
jnp
xchg
imul
cmps
inc
ss
lock
mov
idiv
retf
xor
xor
cmp
sbb
and
or
in
mov
push
xchg
and
xchg
sahf
sti
inc
push
retf
jg
sbb
ja
xchg
fwait
mov
cld
mov
(bad)
ds
in
mov
outs
dec
xor
dec
mov
adc
fnstsw
fdiv
cwde
adc
cmp
pop
cmp
inc
add
test
out
enter
push
gs
xchg
stc
and
int3
push
pusha
dec
(bad)
in
test
cmps
mov
add
jle
fwait
lods
ss
mov
xor
outs
bound
and
sahf
mov
cmps
pop
rcl
movs
mov
inc
mov
mov
int
or
pop
jmp
lock
shl
stos
pop
(bad)
mov
jge
iret
or
push
adc
imul
inc
add
push
or
or
ror
sbb
add
aam
mov
mov
retf
cmp
cld
mov
(bad)
mov
sub
(bad)
pop
push
mov
mov
xchg
inc
or
sbb
aad
dec
jne
cmp
pop
ins
jb
icebp
inc
mov
into
push
inc
es
js
daa
add
cld
out
dec
jb
lock
xchg
test
push
std
aam
mov
or
jle
test
jp
dec
dec
xor
lods
and
pop
lods
in
popf
(bad)
fldenv
or
int
jne
mov
mov
pop
sub
mov
or
ss
mov
mov
xchg
arpl
outs
into
popa
fdiv
sbb
dec
outs
jmp
sbb
dec
push
int
loopne
in
aam
mov
push
(bad)
add
fisubr
xlat
xchg
in
adc
push
fs
fimul
xchg
mov
mov
fld
ds
ret
xor
inc
cli
minps
dec
nop
test
mov
(bad)
out
pop
jbe
jmp
scas
jbe
cmps
mov
push
jns
icebp
mov
push
pop
inc
dec
sbb
enter
pop
push
xlat
mov
dec
mov
pop
xchg
outs
and
fidiv
cmp
pop
jns
fiadd
sti
jle
and
xchg
pop
sub
push
cs
pop
mov
cmp
dec
mov
add
(bad)
lods
fisttp
in
push
fsubr
jle
mov
stc
shl
jecxz
and
fsubr
ins
mov
jnp
cmp
out
and
dec
stos
hlt
fbld
dec
xchg
sbb
mov
scas
shl
sahf
out
repz
div
xlat
adc
dec
cmp
inc
mov
imul
jecxz
add
pop
and
into
imul
fnsave
(bad)
or
add
pop
jns
push
and
cwde
call
and
mov
push
add
mov
add
cmps
jmp
cmps
jnp
jmp
jae
xchg
(bad)
sub
je
add
fnstenv
lods
sub
icebp
sub
and
inc
in
mov
aas
cmc
ret
dec
push
inc
je
rcr
mov
xchg
jae
add
adc
push
in
pop
mov
daa
mov
cwde
out
outs
and
add
lahf
fcomp
test
sub
loope
or
fwait
mov
mov
(bad)
adc
xor
dec
test
dec
dec
cmp
loope
pop
push
and
dec
lods
sub
sbb
mov
and
pushf
adc
in
add
test
nop
xor
dec
in
xchg
dec
pushf
test
test
ins
add
jbe
mov
es
pop
test
mov
addr16
cmc
xchg
mov
sub
lods
cmp
mov
or
popf
xchg
repnz
push
ret
(bad)
or
or
inc
mov
scas
pop
into
fisubr
add
ret
pop
sbb
pushf
cmp
pop
aas
mov
or
jns
push
test
mov
dec
das
pop
mov
xchg
mov
call
jle
inc
pop
pop
nop
cmp
mov
sub
sti
mov
mov
inc
outs
mov
or
ss
shr
mov
and
rol
out
mov
mov
and
mov
dec
jmp
or
int
jp
fisttp
cmp
sbb
js
jp
fdivr
in
fadd
call
aad
dec
rcl
mov
hlt
push
mov
daa
or
nop
sbb
sbb
push
inc
inc
aas
outs
retf
in
lea
daa
dec
pop
adc
pop
jbe
pop
pushf
lahf
sbb
push
push
(bad)
push
xor
jl
jl
push
outs
ins
jne
push
lds
mov
ins
sti
lock
add
cmp
sub
out
outs
popf
adc
pushf
clc
and
call
cmp
jle
retf
push
jle
pop
jmp
or
retf
sub
and
sbb
push
push
pop
ret
pop
jp
xor
fstp
(bad)
dec
sub
or
dec
push
mov
mov
sti
out
xchg
push
inc
jecxz
xor
jnp
jge
and
leave
xlat
mov
ss
jne
mov
dec
addr16
loope
aas
mov
lds
pop
dec
xchg
jmp
xor
add
rcr
mov
sub
jbe
sbb
adc
and
add
inc
fdiv
rcl
xchg
cmc
fxch
adc
push
xor
mov
sbb
cmp
cmp
bound
add
dec
and
mov
lods
test
ret
sti
push
test
pop
sahf
ret
test
push
mov
aaa
loopne
das
out
mov
iret
(bad)
mov
ins
dec
mov
xor
sbb
pushf
aad
xchg
mov
xchg
add
dec
or
aas
inc
pop
test
es
and
int
ds
sbb
add
push
add
(bad)
outs
cdq
sahf
xor
push
cmp
daa
mov
jl
adc
leave
dec
push
add
adc
cli
cwde
fbld
pop
add
and
pushf
inc
xchg
jmp
cmps
and
cli
lea
ins
int3
cld
xchg
cs
inc
or
loope
dec
or
loopne
add
push
ret
sub
jo
jne
xlat
test
cli
clc
jle
cdq
int3
jmp
(bad)
retf
test
pop
mov
fidivr
jnp
pop
movs
pop
jne
xchg
add
mov
pop
push
adc
jb
lea
and
lock
pop
add
or
js
adc
ret
pop
cwde
fwait
hlt
push
out
jb
push
lds
call
test
push
ret
mov
push
pop
mov
mov
(bad)
mov
(bad)
mov
outs
push
jl
xchg
xchg
pop
jg
aam
cmp
adc
add
stc
adc
mov
imul
(bad)
xor
push
mov
sbb
adc
stc
sub
(bad)
lock
retf
ja
fsubp
(bad)
cmp
aas
ja
out
xchg
or
xor
cdq
jo
inc
and
add
cli
icebp
cwde
pop
dec
(bad)
jbe
xor
rcl
add
data16
pop
fst
stos
xchg
shr
jns
cmps
add
mov
dec
mov
das
mov
pop
rcr
pushf
dec
dec
das
aaa
fsub
mov
shl
sub
(bad)
push
jg
mov
mov
dec
movs
bound
ja
pop
sbb
jl
ins
fwait
xor
js
out
mov
mov
jae
imul
nop
pop
xor
xchg
or
je
mov
pop
ins
out
add
push
into
mov
push
jnp
xchg
push
and
hlt
mov
and
push
add
scas
or
mov
mul
lods
push
xor
jge
jl
inc
dec
sti
add
mov
movs
or
repz
fisubr
jns
pop
cmp
outs
adc
or
and
jp
add
aam
cmps
jne
(bad)
ficom
inc
inc
cmp
push
jp
dec
add
sub
xchg
inc
xor
leave
jns
js
pop
es
cld
cmp
xlat
je
loopne
mov
xor
test
test
or
(bad)
out
mov
pop
sbb
shr
xchg
or
sbb
(bad)
movs
jno
rol
lock
sub
dec
sbb
xchg
push
adc
lds
ds
ficom
sbb
scas
xchg
cld
cli
jg
xchg
push
sbb
mov
jnp
push
mov
(bad)
lock
ja
pop
test
ret
jl
sub
cmp
shl
mov
retf
or
mov
or
add
stc
sbb
jp
pop
shl
in
pushf
iret
pop
xchg
jnp
loopne
and
in
arpl
loope
fwait
cmc
(bad)
fidiv
sbb
sbb
ss
gs
cli
(bad)
jmp
arpl
ss
push
xchg
xchg
xchg
mov
stos
scas
ror
test
mov
sbb
cmp
xchg
(bad)
std
call
hlt
jno
xor
or
scas
mov
pop
pop
pop
int
ins
(bad)
cld
pusha
sub
ret
adc
in
enter
inc
xor
mov
sbb
stc
push
sub
cmps
dec
jg
retf
inc
mov
test
lods
push
push
(bad)
mov
je
popf
nop
cli
iret
fstp
iret
mov
pop
pusha
ret
or
in
fimul
pop
(bad)
mov
stc
in
mov
inc
dec
cs
jo
adc
dec
sti
outs
or
mov
fsub
repnz
push
xor
aam
nop
mov
or
pop
in
adc
call
loop
arpl
mov
jl
or
in
xor
adc
dec
inc
xchg
sbb
aas
mov
xor
icebp
(bad)
aaa
test
inc
push
lds
xlat
inc
test
xchg
sbb
and
or
mov
and
and
retf
ins
mov
jmp
xchg
push
test
mov
or
leave
fsub
dec
in
dec
mov
js
jmp
adc
sub
and
into
jnp
shl
jnp
dec
pushf
mov
pop
pop
add
int3
inc
dec
xchg
lods
pop
(bad)
and
mov
(bad)
idiv
mov
cld
jg
add
pop
or
pop
cs
leave
adc
pop
inc
stos
cmp
and
mov
stos
mov
xchg
mov
sub
in
pop
xlat
push
jmp
xchg
nop
xor
fisub
(bad)
hlt
sub
(bad)
fisub
stc
ja
gs
test
add
push
inc
loope
fnsave
cmp
scas
cdq
xor
pop
lods
mov
js
mul
pop
mov
xchg
adc
push
sub
fwait
ins
pop
outs
std
pusha
stc
inc
adc
outs
outs
into
jecxz
mov
xor
sti
je
push
and
test
cdq
push
push
jbe
test
stos
nop
push
jmp
pop
xchg
pop
out
in
(bad)
sahf
or
sbb
scas
add
lahf
in
sti
dec
xor
adc
adc
call
shl
add
cmc
pop
pop
push
icebp
add
mov
std
lds
sbb
mov
test
nop
outs
sub
sbb
stos
mov
aas
ret
lds
stc
xchg
jns
pop
push
mov
push
fld
mov
sub
push
and
fwait
mov
push
cmps
mov
jb
es
adc
ror
imul
bnd
mov
jg
rcr
cmp
(bad)
sub
stos
push
push
lea
jbe
arpl
inc
jg
mov
imul
add
jl
cmp
lahf
in
outs
or
int
arpl
xchg
in
mov
fist
fstp
in
loope
sub
inc
(bad)
dec
lods
(bad)
cmps
cmp
imul
out
imul
pop
or
jmp
repnz
inc
imul
add
nop
jle
loope
add
dec
fsub
xchg
sub
pop
sbb
jmp
and
aaa
xor
adc
imul
js
fdivr
mov
rol
mov
jne
xchg
dec
(bad)
push
and
adc
ins
dec
push
mov
out
sub
sbb
add
add
pop
and
pop
xchg
les
loope
inc
xor
loopne
not
test
aaa
cmp
jne
and
paddw
mov
mov
fdivr
and
mov
add
(bad)
jecxz
(bad)
maskmovq
test
daa
inc
ins
jno
add
add
push
or
popf
xchg
jecxz
popf
test
mov
pop
adc
or
repnz
pushf
or
xor
xchg
aad
sub
mov
pusha
cs
push
xlat
gs
jne
jmp
inc
mov
movs
sar
cmc
mov
lods
ret
dec
pop
arpl
inc
pop
das
lahf
imul
ins
pop
std
lock
int3
in
sub
popf
or
push
xchg
fiadd
or
adc
out
dec
arpl
sbb
mov
(bad)
jg
retf
jne
xchg
movs
pop
loop
std
cwde
and
scas
scas
enter
jl
cmp
xchg
shl
dec
cmp
jge
push
(bad)
scas
add
push
std
jae
and
stos
pop
mov
and
mov
push
xchg
cld
fist
addr16
(bad)
sub
and
(bad)
ins
mov
out
ror
stc
cmp
scas
jl
sahf
jne
xor
aaa
add
into
fbstp
xor
adc
int3
sub
icebp
push
cmp
jnp
js
or
jne
pop
mov
adc
test
sahf
or
and
loope
imul
jns
in
jnp
adc
popa
mov
repz
popa
mov
fldenv
xor
std
cmp
dec
add
mov
mov
ds
dec
push
gs
aam
cwde
mov
ins
adc
ficomp
stos
cld
pusha
aaa
add
cdq
sti
es
outs
sbb
cld
jnp
movs
addr16
fwait
adc
jg
pop
das
xor
leave
rcr
scas
add
cdq
je
mov
or
out
xor
pop
xchg
and
mov
fwait
out
cld
mov
repnz
test
jns
mov
lock
adc
loopne
getsec
sbb
mov
inc
sbb
dec
lds
push
stos
sbb
repnz
push
mov
gs
or
push
ror
bound
add
repnz
mov
push
mov
jmp
test
adc
push
movs
dec
icebp
jl
inc
mov
mov
sub
idiv
icebp
jle
sub
add
mov
push
jns
sar
ret
cmp
icebp
jae
mov
and
cmp
shr
xchg
fmul
stos
pusha
test
in
mov
int
xor
pop
inc
xor
call
addr16
out
mov
aam
mov
sti
arpl
aad
das
cmp
loope
ja
scas
lahf
fld
jle
(bad)
xor
inc
sub
inc
imul
add
stc
das
jo
ja
or
xchg
adc
js
mov
btc
or
push
je
dec
xchg
jl
dec
mov
int3
xor
div
int
loopne
loopne
cli
dec
mov
out
xlat
lock
push
shl
es
mov
pushf
mov
dec
sar
adc
sbb
push
hlt
enter
xor
xor
out
or
cmp
dec
jno
movs
leave
pop
adc
rol
jae
les
inc
ds
pop
mov
push
adc
mov
scas
mov
or
sbb
and
iret
inc
cld
sbb
mov
(bad)
or
add
jns
add
sbb
jge
inc
dec
(bad)
jmp
lock
js
adc
xchg
pusha
push
cs
js
lock
jl
and
jle
xchg
cmp
lds
xor
adc
and
jno
dec
adc
pop
jnp
adc
outs
stos
iret
in
je
mov
mov
int
inc
das
pop
add
ss
outs
clc
pop
out
mov
sbb
test
loop
push
jmp
dec
sub
adc
popa
sbb
push
sti
dec
sub
xchg
lahf
lods
pushf
in
push
xchg
sub
iret
add
mov
mov
das
pop
adc
mov
lock
cmp
jle
fnstenv
mov
adc
push
mov
cmps
ret
popa
ret
push
aas
xchg
int3
lods
das
ins
(bad)
mov
xchg
popf
mov
xchg
fnstcw
sub
jb
dec
mov
xor
jp
mov
add
dec
adc
cs
arpl
pop
fisubr
fisttp
int3
retf
jge
mov
xchg
gs
retf
pushf
push
(bad)
jecxz
inc
sbb
popf
call
ja
rcr
sbb
ja
push
into
sbb
rep
xchg
aad
aas
lods
jo
add
sbb
add
xchg
jnp
(bad)
ds
inc
shl
mov
stos
popf
lods
and
stos
jb
mov
sub
pop
test
imul
in
mov
sar
jns
mov
aaa
and
xor
cmc
dec
push
inc
dec
mov
push
push
adc
mov
jbe
loope
iret
xor
mov
inc
xchg
das
mov
jl
dec
push
add
adc
mov
push
das
pop
fwait
in
iret
jmp
in
sti
or
(bad)
xchg
cmps
iret
inc
cmps
xchg
adc
xor
jmp
jbe
jno
dec
aad
mov
jnp
or
fistp
test
jo
jbe
push
cmp
cmps
arpl
add
mov
aam
jne
mov
inc
push
ror
sahf
loope
in
cwde
bound
inc
sub
outs
push
icebp
add
scas
sub
sub
(bad)
cmp
cmc
ds
(bad)
fbstp
retf
cwde
or
data16
lods
dec
(bad)
sbb
cmp
cmp
adc
jae
mov
jl
in
loop
lods
sub
mov
call
nop
or
(bad)
ds
dec
mov
mov
imul
pusha
lahf
lock
adc
leave
leave
cmc
addr16
jmp
mov
pusha
in
sub
fadd
dec
xchg
shl
push
or
cmp
mov
int
shr
sbb
fwait
jnp
pushf
imul
push
shl
rcl
pusha
fld
jae
movs
mov
or
and
rcr
call
rcl
jp
inc
pop
jmp
jbe
fs
aas
(bad)
aad
lea
stc
fbld
sbb
dec
test
vcvttps2dq
ja
xchg
mov
not
idiv
add
je
outs
call
stc
aaa
fsub
adc
sbb
in
je
pushf
sub
loope
nop
inc
inc
mov
adc
jmp
mov
cmps
pop
jbe
and
push
add
mov
or
push
dec
xlat
dec
(bad)
arpl
add
jmp
jmp
push
into
pushf
cmp
jbe
inc
retf
dec
jbe
leave
call
imul
(bad)
push
and
mov
imul
adc
sbb
or
fsubr
aas
outs
and
sbb
in
(bad)
test
hlt
ud0
push
push
jle
into
sar
pusha
mov
sub
pop
repz
xchg
fs
mov
push
mov
xchg
das
xor
inc
mov
push
lock
out
sahf
mov
jmp
sbb
jge
push
jae
fbstp
shl
das
jbe
pop
js
movs
je
fdivr
repz
punpckhwd
sub
imul
cmp
sub
aad
dec
push
clc
cmp
or
xor
and
sbb
sbb
adc
sub
dec
xlat
cmps
mov
and
out
ror
popa
mov
sbb
or
daa
mul
jle
push
push
add
(bad)
ds
aaa
pop
cmp
imul
xchg
int3
ret
mov
es
retf
xchg
jnp
out
or
adc
xchg
std
in
cmps
sub
dec
sbb
sub
adc
and
aas
into
aad
fmul
je
loope
pop
jbe
mov
lods
or
in
and
sub
jns
les
jne
in
aad
sbb
hlt
call
pusha
(bad)
jmp
cmp
rol
mov
in
pop
lock
gs
rol
mov
jmp
repnz
dec
xchg
mov
int3
scas
into
movs
test
int3
or
xor
xor
shl
pusha
cmp
cmp
pop
(bad)
jmp
mov
push
das
ss
and
data16
xor
sub
(bad)
inc
or
ret
adc
out
push
rcl
jbe
clc
pusha
mov
lods
inc
out
(bad)
mov
xor
or
ss
pushf
or
ret
pop
js
jnp
(bad)
nop
icebp
pop
mov
pop
stc
jl
sbb
ins
ins
sbb
aaa
mov
cdq
adc
fidivr
ja
aas
add
add
xchg
mov
xor
fs
jmp
test
jae
cmp
rol
rep
ffreep
xchg
scas
cdq
cmp
nop
mov
mov
adc
xor
ins
bound
sbb
je
sbb
mov
sub
cmps
in
ss
xchg
rcr
out
lods
push
jmp
mov
inc
iret
push
aaa
aas
les
mov
mov
shl
push
sti
mov
dec
out
jno
aaa
pop
shl
retf
in
retf
js
int3
test
cld
xchg
icebp
(bad)
lahf
jb
adc
jae
stos
(bad)
jae
lahf
cmc
jl
aam
cmp
mov
imul
xchg
add
cmp
sub
mov
xchg
inc
ror
sub
xchg
xlat
push
lea
dec
(bad)
out
leave
mov
push
repnz
outs
cs
mov
inc
leave
or
xor
jmp
mov
ss
jns
jle
xor
cmps
mov
pop
xchg
sbb
push
iret
test
sbb
cs
std
out
div
dec
in
arpl
jecxz
or
scas
lds
push
inc
(bad)
add
push
push
add
sub
(bad)
ins
xor
(bad)
adc
or
dec
cmp
xlat
in
push
mov
cmp
jecxz
jne
inc
rcr
dec
lds
dec
sub
out
(bad)
mov
dec
(bad)
data16
push
stos
jmp
inc
xchg
cmp
mov
mov
add
inc
call
sbb
or
push
mov
ds
adc
pop
leave
sub
mov
lea
jmp
cmc
das
push
sub
stos
(bad)
mov
dec
aaa
pop
(bad)
or
daa
sbb
jb
jp
adc
faddp
or
aas
inc
push
test
push
popa
xchg
cmp
clc
cmp
les
outs
mov
pop
mov
outs
fcom
test
sbb
rcl
iret
pop
es
scas
xor
cmps
dec
repz
sbb
jp
nop
and
cld
inc
test
dec
sub
and
scas
popa
xchg
add
and
push
or
and
sbb
and
push
dec
shl
repz
ins
adc
stos
popf
xchg
(bad)
fcomp
xor
cmps
mov
push
outs
pop
jae
dec
dec
jno
fmul
push
push
ds
lahf
sahf
in
add
fiadd
mov
neg
mov
mov
addr16
int
fisub
jmp
ja
mov
pop
inc
pop
daa
mov
or
mov
cdq
not
(bad)
outs
aaa
cmp
ss
popa
dec
xlat
jge
sbb
jbe
int3
push
cmp
xor
je
aas
xor
and
in
pop
in
inc
ret
stc
mov
ror
mov
rcr
or
mov
call
mov
out
in
cs
sbb
ins
mov
out
fsubr
xor
push
adc
jns
sub
popf
jbe
pushf
(bad)
dec
aas
imul
push
add
jmp
fstp
(bad)
outs
mov
bound
inc
sahf
xchg
ret
enter
jnp
loop
movs
and
or
or
je
shl
mov
aam
jge
cwde
fisubr
jmp
(bad)
aaa
inc
rol
jns
add
sub
shl
push
cmp
into
cmp
pusha
mov
jns
hlt
pop
pop
or
mov
adc
ror
push
ja
or
sbb
add
mov
jle
vmovups
addr16
and
fcomp
mov
in
xchg
outs
or
pusha
xor
mov
sbb
dec
nop
je
or
adc
enter
es
out
js
(bad)
and
imul
sbb
xor
inc
mov
in
stos
(bad)
mov
mov
push
in
mov
mov
cmp
mov
mov
ins
rep
enter
cmp
sti
(bad)
stc
or
test
push
lods
mov
mov
clc
iret
push
jo
in
ds
adc
lock
inc
mov
jmp
pusha
jp
bound
jmp
pop
ficom
int
in
or
ins
push
(bad)
imul
xor
cmp
xchg
sbb
sbb
(bad)
mov
aaa
sub
push
loopne
sbb
sub
jo
in
cmp
test
xchg
repnz
pop
dec
mov
dec
xchg
leave
push
mov
test
pop
pop
call
mov
adc
dec
xor
mov
push
fld
aad
or
lahf
adc
inc
inc
inc
in
cld
call
add
xchg
test
adc
not
pop
(bad)
lds
and
ins
int3
icebp
retf
ja
adc
lods
xchg
dec
mov
int
mov
popf
fsubr
pop
mov
sbb
loop
es
test
adc
sub
rcr
lea
push
out
sbb
gs
mov
add
sbb
sbb
or
ss
inc
dec
test
cli
jl
mov
test
ret
xor
mov
sub
fimul
jbe
mov
retf
jmp
icebp
fs
test
aam
push
xchg
inc
loop
xlat
sti
push
push
shr
jno
imul
xchg
sbb
sub
aas
ins
test
mov
sbb
adc
and
pop
pop
out
and
lods
dec
repnz
add
xchg
pop
or
pop
add
and
outs
popa
sbb
out
repz
dec
sbb
shl
sbb
push
in
adc
fdivr
ja
sbb
inc
mov
outs
and
push
shl
sahf
dec
pop
stos
push
gs
fsubr
jae
cmps
addr16
xchg
jne
xchg
bound
fnstcw
cmp
aam
push
adc
cmp
out
in
jmp
jmp
pop
call
add
cld
fimul
ins
aas
test
mov
dec
push
adc
out
ror
jmp
adc
jbe
int
push
movs
movs
jmp
fistp
inc
xchg
push
adc
lea
or
popa
xchg
test
out
sbb
or
pop
mov
enter
xchg
sbb
jae
dec
hlt
or
ja
xchg
test
repz
in
test
inc
test
mov
sub
inc
pop
in
cli
and
jo
inc
outs
dec
jle
jecxz
sub
(bad)
fist
mov
add
pop
jo
adc
mov
jb
dec
adc
test
mov
mov
mov
pop
movs
fadd
add
xchg
pusha
and
iret
mov
ja
xor
repz
fimul
inc
sub
aaa
pop
imul
jp
sbb
ss
mov
add
push
and
mov
movs
scas
inc
aad
sbb
inc
cmc
mov
out
dec
sbb
adc
fscale
call
ss
popa
push
fdivr
dec
in
lock
push
jns
movs
pop
jle
nop
movs
scas
js
pop
pop
mov
adc
dec
adc
mov
xchg
movs
add
cmps
idiv
cdq
adc
jne
shl
xlat
push
(bad)
das
push
mov
call
test
and
mov
xlat
retf
inc
mov
rcl
pusha
mov
sbb
mov
mov
and
sub
dec
leave
scas
shl
scas
mov
and
jecxz
push
pop
cli
jge
push
mov
pop
xchg
sar
xchg
test
cmps
jmp
xchg
pop
mov
pop
dec
test
add
mov
fldz
les
ret
adc
movs
daa
aad
in
jmp
rcr
cmc
sahf
hlt
jecxz
sbb
ret
or
int3
mov
jge
adc
fisubr
dec
lahf
jmp
cdq
sub
inc
fimul
or
cmp
rol
jge
xor
inc
icebp
sahf
mov
and
pop
test
or
test
cld
xchg
inc
jo
pop
mov
jo
scas
mov
and
std
mov
push
outs
cld
push
jo
xchg
mov
cmc
dec
inc
inc
aad
(bad)
push
stos
in
dec
xchg
sbb
jecxz
push
sbb
mov
int
lods
cli
pop
in
fs
fst
add
lods
mov
dec
xor
fimul
adc
jae
mov
dec
std
mov
fldz
jno
xchg
jo
cld
jo
mov
adc
jb
pop
pop
scas
idiv
ja
je
lea
or
ds
jne
xchg
jp
(bad)
mov
mov
in
das
or
cmp
lock
in
pop
pushf
push
and
pop
fadd
out
scas
int3
cmp
aas
sbb
es
sub
mov
aas
daa
or
call
mov
int
jmp
jl
inc
inc
cmp
ror
ss
movs
sub
stos
jns
or
arpl
add
jge
mov
cmp
xor
lahf
pop
or
pxor
fistp
mov
aad
xor
sub
cmp
std
jae
push
pusha
and
jmp
or
push
adc
mov
mov
dec
xchg
into
mov
lods
jae
sar
dec
(bad)
mov
std
test
xor
inc
outs
mov
stos
loope
daa
retf
ror
xor
in
jns
adc
inc
sub
je
outs
clc
push
mov
dec
gs
test
les
aas
xchg
xchg
cmp
jmp
outs
push
arpl
jns
inc
std
and
call
mov
aad
ficomp
cwde
dec
loopne
mov
cld
sahf
popf
aaa
jne
jecxz
test
clc
loopne
jge
shl
pop
loop
pop
inc
iret
jnp
call
adc
fs
lods
(bad)
dec
or
fistp
mov
mov
mov
xor
inc
lods
inc
rol
sub
retf
push
repnz
xor
jo
inc
leave
pop
or
mov
xchg
adc
and
mov
sub
cdq
xchg
xchg
cmp
jnp
inc
cld
enter
jo
call
and
xor
jb
add
add
aad
inc
inc
adc
fild
sub
add
mov
mov
aad
mov
mov
or
sbb
cs
push
dec
icebp
cmp
sbb
pop
popf
nop
jae
ret
cli
fsub
test
stos
pushf
arpl
(bad)
repnz
add
xchg
sti
in
dec
int
ins
inc
fstp
inc
nop
mov
imul
fcmovbe
inc
push
cmp
test
mov
sub
mov
imul
nop
jp
or
sub
cld
mov
cmovge
lea
lock
and
mov
clc
cwde
ins
add
xchg
fxrstor
mov
pop
icebp
ds
loopne
pop
fild
or
inc
cmps
xchg
cdq
cmps
mov
sub
dec
cwde
test
xlat
mov
adc
adc
push
fcom
mov
pop
adc
push
loopne
rol
retf
fcmovb
retf
loop
aam
dec
jb
sbb
pop
nop
(bad)
fcomp
mov
sbb
ret
outs
scas
xor
sub
sub
xor
sbb
mov
test
shl
jecxz
repz
sub
add
sbb
xlat
jbe
lea
or
test
xchg
bnd
nop
ror
inc
cmc
pusha
jmp
test
popf
and
mov
and
ja
int
mov
ins
lock
push
stc
mov
mov
test
sub
rcl
pop
push
es
mov
outs
sub
fsub
jno
test
pop
into
cmp
fucom
mov
out
lds
aad
je
repnz
mov
ja
pop
stc
jo
push
sbb
inc
cmps
adc
and
dec
or
test
enter
pushf
repz
fcom
adc
out
dec
addr16
mov
je
mov
mov
xor
dec
lahf
inc
jns
scas
xchg
in
dec
add
jb
dec
popf
ret
das
pop
dec
lea
fisttp
cmp
stos
dec
sub
xchg
leave
cli
sbb
leave
test
xchg
push
in
push
and
shl
or
xchg
inc
mov
fs
icebp
mov
ret
sbb
fidivr
das
mov
in
pop
mov
shr
mov
test
mov
idiv
sbb
dec
sbb
jle
mov
idiv
jns
hlt
lods
cmc
mov
or
int
(bad)
cmc
imul
fst
push
int
mov
(bad)
ds
adc
mov
dec
jp
int3
push
or
(bad)
xlat
out
cmps
sbb
js
push
fwait
mov
ins
int
mov
or
std
or
out
inc
xor
pop
popa
arpl
repnz
or
pop
inc
repz
dec
jmp
in
sub
or
bound
bnd
retf
dec
cmp
outs
push
pushf
mov
pop
xchg
mov
mov
add
rol
or
das
mov
sbb
daa
les
add
jnp
xor
jl
and
gs
cmps
dec
sar
add
mov
and
xor
int
jae
aaa
xchg
jo
inc
call
fidiv
push
sbb
icebp
out
push
pop
inc
retf
outs
repz
in
mov
or
or
mov
xor
cmp
pop
inc
cmp
or
mov
js
inc
mov
les
xor
mov
imul
mov
mov
jo
shl
loope
loop
bound
dec
call
jle
xor
stc
push
outs
sub
pop
mov
and
cmp
xchg
mov
mov
test
loopne
sahf
push
cwde
jg
mov
or
and
mov
inc
xchg
(bad)
lock
je
dec
or
shl
jae
in
mov
add
js
and
(bad)
popa
mov
mov
gs
mov
cmp
dec
outs
xor
sub
test
in
dec
(bad)
mov
mov
lea
push
test
ret
mov
call
xchg
(bad)
in
lea
cmps
inc
stos
push
scas
outs
jno
test
xor
push
and
cmp
dec
pop
sbb
test
neg
(bad)
add
jmp
mov
inc
pop
jl
inc
bound
pushf
or
into
mov
lea
ins
inc
mov
fcomp
jo
inc
icebp
cmc
jae
and
jmp
inc
cmp
and
ror
and
rol
mov
mov
retf
push
cvtps2pd
or
ret
fs
cli
inc
jle
aaa
add
pop
arpl
push
dec
dec
mov
ret
mov
inc
sbb
fist
jmp
inc
fnstsw
adc
sub
cmp
rcr
sti
ds
jle
clc
addr16
cmp
mov
(bad)
jecxz
imul
rcl
leave
inc
mov
cmp
push
popf
inc
pop
sahf
and
(bad)
bound
nop
rcl
dec
and
daa
pop
ret
movs
outs
push
pop
cmp
add
aad
adc
or
jo
nop
add
loopne
lock
pop
mov
jns
pop
cmp
cmc
das
les
pop
in
sbb
retf
daa
ja
loopne
test
sub
cmp
clc
jge
rcl
push
inc
cmp
ds
adc
inc
pop
je
xchg
inc
inc
jmp
shr
popf
xchg
lds
jecxz
dec
sub
jmp
loopne
sub
popf
ret
test
pop
jp
add
and
inc
jnp
adc
or
pop
call
ins
xchg
call
aas
sub
rcl
lods
(bad)
cdq
fdivr
jle
fst
mov
sub
sub
sar
in
std
mul
sub
sub
xor
(bad)
push
sub
xor
mov
ins
jmp
stc
inc
cmp
inc
lock
lods
lahf
mov
push
cli
push
dec
push
or
add
mov
sbb
in
cmps
xrelease
lods
mov
push
or
sbb
xchg
pop
sbb
test
test
pop
pop
xchg
dec
sar
jecxz
push
xor
test
retf
mov
aam
or
cdq
inc
xchg
inc
xchg
fldpi
mov
(bad)
mov
std
out
mov
(bad)
and
adc
rcl
sbb
jl
push
mov
sub
sbb
or
sti
in
mov
mov
sub
dec
sub
test
add
(bad)
leave
rcr
daa
pop
xchg
jno
gs
push
sar
sub
dec
hlt
and
sub
lods
or
dec
stos
dec
loopne
jge
jbe
jmp
add
cs
pop
mov
rol
mov
rcr
dec
cmp
cmp
frstor
imul
(bad)
jbe
inc
or
fadd
into
mov
sbb
add
loop
and
mov
adc
sbb
cmp
mov
or
jns
in
or
pop
jge
fsubrp
ins
mov
pusha
shr
neg
pop
cli
retf
(bad)
cmc
xor
data16
sbb
inc
ror
jle
enter
cmp
fiadd
add
aas
jbe
sbb
rol
fidivr
dec
ins
jae
aaa
outs
push
mov
shl
jb
mov
stc
xor
sub
test
pop
int
inc
or
and
add
(bad)
outs
inc
lds
push
jp
retf
inc
aam
cmp
jns
sub
(bad)
(bad)
aaa
fs
fnstsw
das
xlat
sub
ins
(bad)
popa
fstp
and
(bad)
stc
push
pop
fwait
xchg
or
sbb
adc
lods
retf
cmp
jo
sub
lods
call
xor
(bad)
fisubr
stc
mov
jo
ins
pop
jmp
(bad)
scas
add
popf
cwde
mov
mov
xchg
out
pop
sub
mov
xchg
and
inc
mov
mov
adc
int
inc
div
lock
jae
js
xchg
arpl
ret
jae
push
jnp
and
outs
fadd
cmc
pop
shl
in
pop
mov
push
ror
movs
jg
repz
jl
rcl
sub
aam
xor
pop
pop
mov
call
adc
mov
repnz
add
out
sti
push
int3
adc
sbb
dec
add
xor
dec
hlt
jl
jmp
into
(bad)
loop
push
mov
movs
mov
mov
fiadd
mov
test
cmp
mov
fistp
add
arpl
jno
pop
xchg
fadd
out
ins
pop
adc
aas
out
cwde
js
xor
pop
repz
outs
in
sbb
mov
xchg
retf
mov
sbb
dec
jnp
ja
pop
or
mov
mov
scas
inc
ins
xchg
pop
mov
std
adc
out
mov
int3
test
mov
xchg
push
mov
pop
stc
mov
test
cmp
or
xlat
xchg
mov
test
push
loope
lds
mov
jecxz
jg
call
stc
cwde
jno
(bad)
mov
inc
or
les
pop
pop
cmp
adc
xchg
jns
jo
loope
inc
imul
and
add
add
sar
pop
iret
xchg
dec
shl
mov
stc
loop
jle
jmp
dec
mov
(bad)
mov
cdq
fnstcw
cdq
mov
enter
ins
mov
mov
(bad)
cdq
add
enter
push
mov
push
xchg
xchg
push
or
jmp
push
and
cwde
je
adc
sar
inc
and
xchg
jmp
or
retf
and
repz
sub
cmps
(bad)
leave
rcl
xor
xor
cmps
mov
call
loopne
data16
ret
jmp
fistp
fucomp
sar
xchg
inc
jmp
in
jo
pop
in
(bad)
push
pop
pusha
fs
mov
mov
jns
(bad)
cdq
pop
setb
ficomp
outs
cmp
push
arpl
lods
jnp
xchg
nop
xor
repz
jl
add
sub
pusha
aad
xor
int3
dec
popf
cld
pop
or
mov
popf
mov
(bad)
popf
mov
(bad)
xor
scas
push
call
jge
retf
shl
and
stc
mov
cli
cs
mov
leave
cs
outs
push
cmp
cdq
iret
xchg
mov
add
or
sub
adc
pusha
dec
lods
cdq
and
sbb
retf
mov
add
dec
sub
adc
popa
mov
sub
xchg
sbb
lahf
test
rcr
fidivr
and
xchg
mov
(bad)
sbb
sbb
adc
mov
or
and
and
ror
repnz
mov
imul
ja
or
pusha
or
xchg
and
xor
mov
out
inc
adc
adc
cmp
popa
jb
scas
daa
add
pop
xchg
(bad)
int3
jae
mov
fist
adc
add
mov
vxorps
aaa
jge
and
push
cmp
ja
or
sar
add
ins
push
jg
jb
in
pop
mov
pop
cmp
sub
movs
add
sbb
lods
popa
sub
(bad)
mov
inc
sub
outs
test
pop
pop
cmp
xor
lods
add
jbe
pop
and
aas
or
push
push
xor
or
mov
or
push
lock
ins
pop
pop
ins
inc
mov
jnp
inc
fidiv
mov
sbb
xor
dec
fcomip
xchg
and
fcmovbe
mov
and
mov
movs
ja
repnz
call
sub
leave
and
xorps
xchg
int3
cs
push
inc
ins
xor
adc
cwde
pushf
mov
lods
xchg
(bad)
repz
sub
ds
xchg
mov
cmp
push
shr
jmp
rcl
adc
and
cmp
loopne
cld
or
aad
adc
shl
popf
or
lock
jno
ss
xchg
jge
cmp
cmp
mov
popa
gs
pop
mov
bound
push
(bad)
push
inc
out
sbb
pop
icebp
sub
jle
rcl
imul
daa
push
and
jmp
pop
mov
shr
das
sub
aas
pop
daa
dec
xor
hlt
mov
cmc
jl
fldln2
sbb
adc
push
or
cmp
aam
sahf
xchg
mov
dec
push
sub
outs
push
ret
mov
xor
out
ret
es
fstp
and
cmp
xor
aam
mov
and
cwde
jo
pop
xchg
imul
cmp
mov
sbb
rcl
(bad)
bound
pop
adc
push
cmp
inc
ret
dec
push
aad
leave
jb
dec
and
push
jae
push
(bad)
cld
add
ds
stos
fstp
mov
loope
inc
add
push
nop
mov
(bad)
unpcklps
test
mov
icebp
push
lea
lock
test
mov
cwde
ror
test
fstp
ficom
sbb
nop
cli
in
ror
push
add
pop
jmp
or
mov
inc
cli
xor
add
paddd
or
sbb
into
sbb
fiadd
xchg
xchg
leave
pushf
xor
pop
mov
fiadd
mov
jnp
adc
xchg
mov
shl
dec
loope
mov
cmps
lock
add
pushf
cdq
or
cdq
aas
and
pop
sub
mov
mov
add
jno
push
nop
mov
mov
js
inc
pop
cmp
mov
sbb
lahf
push
test
add
cmps
mov
out
dec
cmp
or
cmp
jmp
push
xor
push
add
pusha
cli
or
add
sahf
jb
mov
xchg
stos
test
or
mov
pusha
dec
jno
mov
stc
adc
and
shl
iret
xor
(bad)
cmp
cs
ins
xchg
push
jo
dec
mov
add
or
sahf
ja
jae
mov
cmp
ins
mov
jle
adc
jne
sahf
(bad)
mov
ss
(bad)
jmp
cmps
inc
loope
ins
sub
cld
and
or
sbb
sub
dec
imul
int
sar
jne
stc
dec
sbb
daa
stc
dec
loop
adc
in
inc
stos
adc
mov
xchg
push
add
nop
repnz
nop/reserved
xor
adc
lock
in
lds
(bad)
and
mov
(bad)
sub
sbb
inc
xor
mov
jl
es
push
cmps
mov
test
push
cmps
cmps
xchg
jmp
rol
outs
mov
add
push
cs
dec
lock
int3
loop
nop
mov
sbb
sbb
iret
cwde
lock
mov
push
pop
jnp
push
popf
xor
les
mov
lods
jne
mov
adc
add
and
ins
sbb
or
sti
repnz
in
ret
pop
cmps
test
mov
add
xchg
inc
imul
add
or
outs
loope
inc
cmp
jecxz
jb
movs
cmp
dec
jo
mov
lea
inc
outs
add
out
lods
xchg
in
mov
mov
(bad)
test
leave
(bad)
xchg
pop
jns
jmp
test
adc
and
and
xor
dec
js
scas
shl
push
xor
jmp
movs
stc
mov
inc
out
stos
mov
add
mov
lds
xor
and
gs
arpl
push
ror
fld
es
xchg
ret
jnp
leave
xchg
mov
out
mov
jge
push
lds
mov
mov
cmp
sahf
pop
sub
pop
mov
es
dec
in
jb
adc
xlat
cwde
in
vpshlq
(bad)
shl
out
sub
jbe
ror
add
and
fadd
xlat
scas
jne
leave
xlat
stos
sub
rol
std
xor
cli
leave
xchg
cdq
or
fwait
pop
jbe
mov
pop
adc
jle
and
mov
test
stc
jns
push
popf
pop
sbb
sahf
push
adc
adc
fcmovnb
mov
push
jl
mov
mov
jl
test
scas
xchg
inc
jae
mov
dec
int
pop
jo
or
xchg
mov
sub
mov
clc
ror
loopne
stos
inc
mov
cmp
int
adc
lahf
jle
retf
sub
shl
mov
mov
push
push
cmp
sti
push
jge
ret
jb
cmp
dec
mov
aas
std
push
sbb
sub
push
pop
movs
mov
enter
xchg
shl
in
push
push
push
es
push
sbb
movs
(bad)
cmp
(bad)
out
add
sbb
and
cmps
push
call
xchg
jmp
push
push
mov
bound
in
lea
push
push
or
mov
cmp
cmps
ret
sar
add
sbb
and
jg
mov
(bad)
jnp
sar
(bad)
in
fadd
adc
leave
fsubr
ss
imul
push
inc
push
scas
in
sub
ins
sbb
or
and
push
mul
mov
cs
pop
shl
pop
cmp
add
add
daa
mov
xchg
push
and
sbb
mov
xor
jle
fcom
xor
sbb
pop
jno
dec
pop
mov
iret
mov
mov
arpl
dec
fcmovne
or
lea
pop
sar
(bad)
mov
mov
fwait
fs
sub
adc
and
int3
bound
mov
jl
fmul
jne
mov
adc
pop
outs
ja
fadd
int
and
or
fs
test
nop
dec
inc
icebp
lods
adc
and
jp
mov
daa
sbb
cwde
adc
jb
mov
xor
xor
mov
fisub
mov
cs
loop
mov
push
cmp
sar
aas
inc
or
ins
pop
dec
jmp
cli
aad
mov
xor
add
inc
inc
dec
adc
outs
das
test
jno
ja
mov
xchg
bound
stos
inc
cmps
test
xchg
fstp
and
fs
lods
mov
fnsave
fs
ret
push
out
mov
xchg
js
and
(bad)
repnz
push
jnp
inc
btr
add
cmp
mov
cmp
out
push
fiadd
lds
and
push
test
cdq
or
mov
in
repz
test
das
and
les
int3
cmp
mov
push
jge
lahf
cmp
sbb
std
sbb
lock
mov
or
and
out
mov
shl
stos
in
push
adc
xchg
dec
outs
in
or
xchg
(bad)
ins
push
mov
aaa
sar
pusha
xchg
dec
std
ins
call
mov
das
rcl
jmp
inc
mov
adc
sbb
push
cli
rol
loop
jne
xchg
xor
jo
push
and
jbe
xor
jecxz
cmp
jno
lods
jg
sahf
ret
pop
push
pop
sbb
imul
rcr
add
jle
jbe
data16
jnp
pop
and
lds
lods
sbb
mov
outs
aaa
enter
(bad)
cmc
jo
ret
cs
pop
add
(bad)
and
or
ds
int
sbb
sub
pop
mov
pop
stc
add
nop
jp
shl
frstor
sti
in
sub
addr16
ins
pop
jl
(bad)
push
cmp
sti
cmp
sbb
daa
pop
cmp
movs
movs
sbb
jae
xor
sub
movs
inc
or
cld
dec
xchg
pop
ins
aam
sar
(bad)
aam
pop
inc
iret
or
(bad)
ins
fstp
sahf
cwde
adc
idiv
icebp
repz
push
sbb
gs
std
cmp
pushf
mov
ficom
mov
pop
lds
stos
mov
mov
std
cmps
mov
adc
adc
ja
or
mov
in
push
push
xchg
ficomp
hlt
xor
jo
(bad)
push
in
(bad)
cmps
inc
xchg
icebp
stos
sbb
ins
adc
in
data16
and
push
rol
cwde
lahf
sbb
add
inc
lock
mov
sbb
js
nop
mov
aam
popf
push
and
in
mov
or
hlt
mov
lock
jns
mov
test
xlat
sbb
dec
push
and
mov
(bad)
les
in
(bad)
cli
rcl
mov
test
test
fdiv
jnp
mov
or
jb
in
jne
mov
data16
pop
shl
mov
adc
lods
mul
loope
jmp
retf
add
sbb
cmp
xlat
jle
adc
mov
pop
fs
imul
fist
add
push
jmp
jnp
enter
inc
sbb
arpl
aaa
lods
fistp
adc
fisub
cs
std
adc
repnz
mov
aaa
push
test
inc
scas
repnz
lahf
dec
outs
js
jb
mov
mov
xor
sbb
pop
repnz
fld
repnz
cmp
ffree
jp
movs
or
clc
in
mov
shl
dec
cld
dec
xchg
and
jmp
dec
sub
or
stos
cmp
(bad)
adc
jmp
(bad)
jecxz
fs
fmul
arpl
fisttp
sub
cld
pop
xchg
jne
test
repnz
sub
push
add
xchg
sbb
sub
lods
cmp
push
mov
add
mov
fmulp
aaa
or
xchg
cmps
xchg
addr16
gs
data16
mov
out
push
pop
fild
xor
ret
pop
xor
rcr
(bad)
lea
sahf
dec
aam
mov
xchg
leave
pop
sbb
cwde
push
loop
imul
int3
call
movs
lds
fwait
xor
xor
add
mov
dec
retf
(bad)
xor
outs
sbb
not
das
pop
fsub
cmp
cmp
xor
out
jae
popa
mov
dec
mov
sbb
ins
sbb
repz
mov
je
aaa
xchg
push
stos
mov
loop
ss
push
das
push
sar
iret
mov
ins
pop
push
mov
in
loope
xlat
jbe
(bad)
hlt
movs
push
cmps
ins
dec
add
jle
jbe
int
je
pop
rol
mov
dec
outs
dec
sbb
xchg
cmp
sbb
stos
mov
inc
xchg
pop
movs
dec
clc
add
or
cmc
pop
mov
daa
inc
mov
cwde
xchg
icebp
pop
cmp
push
(bad)
iret
jmp
icebp
pop
outs
inc
mov
(bad)
xor
lea
mov
shr
out
stos
pop
sub
addr16
ins
aas
pop
inc
in
(bad)
sbb
sbb
outs
adc
(bad)
outs
jae
inc
dec
cli
(bad)
rcr
mov
jmp
cmc
push
cmp
jmp
inc
inc
dec
mov
imul
call
es
jo
fisttp
rcr
sub
mov
jecxz
(bad)
icebp
mov
fs
cmps
outs
dec
fs
mov
fdivr
ja
repnz
std
add
cld
push
xchg
inc
pop
into
nop
in
cmp
and
jp
outs
js
sub
sub
(bad)
call
pop
call
add
jbe
lods
outs
neg
fbstp
pop
mov
ja
lds
test
sub
jmp
fs
jns
out
outs
ds
cdq
(bad)
or
mov
stos
add
fistp
dec
mov
push
popa
sbb
stc
shl
test
fs
lock
and
pushf
pushf
fmul
xor
xor
lea
das
ds
aas
dec
xchg
lea
inc
mov
mov
mov
(bad)
dec
xchg
std
arpl
fisubr
inc
lock
xor
mov
xor
lods
cld
ds
inc
xchg
loope
xchg
adc
mov
adc
int3
pop
dec
fld
jae
inc
xor
ja
pop
sbb
add
aas
pop
mov
clc
add
and
out
das
icebp
mov
ins
movs
sbb
mov
jp
dec
into
pop
shl
bound
popf
scas
and
mov
mov
push
mov
pop
sub
aas
or
loopne
test
cmps
ja
cmc
jne
out
int
adc
inc
push
out
popf
pop
and
pop
xchg
mov
or
add
mov
jnp
jb
jge
iret
pop
jb
sub
xor
test
mov
mov
mov
dec
cmp
idiv
outs
push
dec
push
pop
dec
mov
es
popf
mov
sbb
or
xor
and
sub
jg
mov
xchg
or
push
bound
push
xchg
daa
jmp
setl
add
aam
test
loope
push
pop
jmp
inc
push
retf
dec
outs
sti
mov
xor
pop
pop
ret
lahf
out
retf
mov
cld
daa
mov
call
pop
cmc
mov
or
into
mov
add
cli
ficomp
mov
cmp
pop
jno
(bad)
jne
stos
fcmovnbe
mov
aad
stos
add
jb
lds
iret
mov
jbe
add
jp
(bad)
push
jbe
stc
pop
outs
jl
and
movs
add
add
lahf
dec
stc
jmp
mov
ins
stos
fs
xchg
mov
fcmovbe
(bad)
cdq
movs
push
fmul
or
push
add
xchg
ins
push
mov
stc
pop
(bad)
loopne
fisttp
std
and
popa
mov
movs
int3
stc
(bad)
fldenv
pop
cmp
jmp
push
test
call
mov
loop
outs
xor
mov
call
movs
xchg
xor
sub
sbb
dec
and
adc
iret
sub
test
jns
imul
fstp
fstp
dec
daa
and
out
enter
cmps
jo
stos
mov
dec
ror
mov
ins
xchg
cdq
out
ret
cmp
or
loope
(bad)
fld
sti
fist
js
mov
cli
aad
aad
ret
inc
mov
lea
cdq
imul
push
rcl
push
xor
mov
addr16
push
js
inc
push
mov
or
sub
mov
mov
fwait
xchg
ins
push
fwait
icebp
fcom
out
adc
push
mov
mov
out
add
cmp
or
jo
jne
xchg
retf
test
inc
ja
mov
(bad)
adc
mov
dec
jns
xchg
mov
inc
and
push
mov
test
repz
stos
mov
inc
popf
(bad)
movs
sub
ret
jnp
cmp
cmps
jae
scas
sbb
sbb
cmc
aas
jge
jns
xlat
bt
xchg
mov
int
cmps
out
paddusb
pop
out
mov
dec
pop
jmp
sar
dec
jno
pop
pop
xchg
cmc
sbb
(bad)
fcom
ret
and
scas
mov
leave
xor
(bad)
mov
or
fs
pop
inc
xchg
lods
xor
cdq
mov
or
pop
imul
dec
xchg
outs
dec
neg
mov
push
jb
retf
pop
mov
pop
xor
pop
cmp
and
(bad)
ins
jne
in
fild
div
dec
add
pop
aaa
push
leave
lahf
inc
outs
jae
fistp
lock
idiv
sbb
jno
hlt
xor
fcomp
lds
pop
sbb
(bad)
call
add
adc
jmp
in
leave
(bad)
mov
movs
push
fdiv
push
jg
mov
push
leave
(bad)
xor
(bad)
(bad)
in
xchg
sbb
test
inc
fcom
jns
imul
pusha
or
data16
jne
xor
mov
cs
in
add
xor
jp
jge
mov
in
mov
adc
and
fsubrp
jae
ss
(bad)
in
sub
sub
jne
pop
movs
inc
rol
pop
iret
out
adc
mov
aas
adc
scas
mov
xchg
or
mov
xchg
into
dec
in
(bad)
xchg
jle
inc
neg
repz
lds
sub
ret
test
dec
push
retf
lahf
shr
(bad)
fidiv
adc
mov
aaa
cmps
in
out
imul
pop
fwait
mov
sar
sub
je
mov
push
loop
mov
xchg
mov
icebp
popa
repz
loope
mov
(bad)
into
mov
shl
xchg
lahf
cmp
js
dec
xor
stc
pusha
(bad)
sar
adc
pop
out
pop
sbb
mov
add
jle
add
inc
popf
sub
or
xor
in
cmp
cdq
xor
jnp
cmp
out
outs
(bad)
pop
cmps
inc
jg
(bad)
retf
xor
ds
pop
sbb
mov
and
mov
mov
jp
aad
test
xchg
test
sbb
xchg
push
fwait
in
cli
aaa
stos
pushf
cmp
cmc
mov
enter
daa
in
and
repnz
pop
sub
fsub
lahf
cmp
data16
xor
sbb
mov
and
fcomp
fstp
out
movs
ret
out
xchg
adc
add
lea
data16
out
arpl
ret
test
dec
fcomp
addr16
into
adc
sbb
inc
push
xchg
mov
cmp
adc
test
jle
mov
ror
xor
fimul
pop
mov
and
xor
mov
fldln2
gs
stos
fidivr
mov
xor
xor
xor
ret
loope
nop
inc
repz
int3
fwait
lea
fxch
inc
scas
retf
lods
cmp
fwait
jo
das
out
gs
movs
repz
cmp
jb
repnz
mov
push
ficomp
sbb
mov
pushf
pop
sbb
jp
xchg
pop
shl
leave
sbb
int3
cmp
add
leave
xchg
out
xchg
sbb
loopne
dec
pop
ror
icebp
dec
cmp
je
pop
jno
cdq
mov
mov
add
enter
xchg
daa
mov
inc
cvtdq2ps
bound
sub
cwde
retf
test
icebp
sar
adc
sti
mov
std
out
cmp
jnp
xlat
xchg
movs
fimul
mov
or
cmp
and
or
push
xchg
xor
(bad)
cmc
sbb
mov
dec
dec
or
cmp
and
out
pop
dec
add
retf
inc
mov
out
xchg
inc
jo
ret
scas
and
push
test
mov
dec
jmp
adc
dec
add
outs
pusha
cmps
sbb
rcl
shl
test
xchg
inc
outs
cmp
das
test
dec
xchg
dec
in
mov
pop
leave
fistp
add
mov
dec
repz
push
repz
shl
xchg
and
mov
sti
dec
mov
test
inc
ins
ja
jmp
push
lock
xchg
neg
mov
cs
in
add
add
adc
mov
repnz
aaa
mov
jmp
hlt
jno
and
or
test
iret
in
popa
mov
loop
(bad)
push
pop
xor
(bad)
fdiv
push
imul
fmul
push
data16
ret
cld
sub
jnp
inc
jbe
and
pop
mul
sbb
xchg
adc
pop
aaa
cmp
lods
inc
mov
adc
xchg
fidiv
fdiv
adc
xchg
pop
xchg
stos
fisttp
retf
pop
cmp
pop
popf
cdq
icebp
call
push
mov
in
(bad)
hlt
xor
nop
adc
xor
lea
movs
jmp
cmp
(bad)
stos
aas
nop
retf
outs
ins
out
xchg
ror
not
or
pop
mov
sub
and
aaa
jno
jae
inc
cli
mov
call
or
into
fs
and
pop
cmp
sbb
fnstenv
sbb
add
cwde
dec
iret
dec
pop
(bad)
jmp
inc
jns
jmp
inc
inc
adc
mov
cmp
por
inc
mov
sub
dec
js
scas
xchg
or
pushf
or
pop
test
mov
mov
clc
pop
sbb
outs
jp
xchg
jb
lahf
jecxz
and
mov
mov
(bad)
mov
repz
out
leave
mov
mov
add
add
push
xor
popa
cli
adc
rol
dec
xchg
pop
mov
adc
sub
ins
fs
outs
leave
(bad)
cmovne
and
iret
dec
pop
popa
jg
or
sub
clc
push
cdq
retf
ins
mov
pop
sbb
jle
cmp
mov
or
mov
dec
pop
dec
stc
push
or
jbe
in
adc
daa
ret
inc
pop
aaa
mov
and
mov
into
push
(bad)
popf
fld
mov
test
enter
pushf
xor
adc
lods
push
sbb
dec
imul
cmps
and
mov
cdq
jmp
cli
sbb
cmp
mov
inc
dec
mov
mov
xchg
dec
popf
out
adc
mov
lock
dec
jmp
neg
cmp
push
xor
loopne
jmp
push
lods
test
inc
dec
in
repz
xlat
add
in
loopne
dec
cmp
jge
sbb
adc
and
jmp
(bad)
repz
xchg
sub
mov
imul
jns
add
addr16
or
in
sub
and
pop
stos
add
dec
pop
test
es
repz
and
in
dec
jnp
or
jecxz
in
cmps
rcl
mov
lahf
inc
enter
scas
(bad)
or
nop
adc
in
ror
out
in
inc
push
movs
pop
mov
xlat
in
enter
mov
out
dec
int
gs
push
lea
push
jl
push
shl
pop
adc
push
pushf
or
cwde
fwait
aas
lahf
adc
movs
mov
xlat
lock
les
or
inc
cmps
mov
push
fldenv
or
(bad)
fist
retf
(bad)
(bad)
test
aad
push
and
lea
cld
fdivr
jge
add
jge
addr16
sahf
sti
push
mov
xchg
ins
enter
fild
push
mov
jo
mov
std
mov
xchg
idiv
fisttp
xchg
fcmovb
enter
test
mov
and
aas
push
addr16
xor
rol
cmp
pushf
xchg
ret
mov
call
xchg
ret
lock
das
rcr
xchg
mov
dec
xchg
in
test
lods
mov
in
pop
cmp
mov
jp
shl
xor
or
stos
retf
iret
into
in
add
push
jmp
fld
(bad)
ss
stos
scas
push
jne
fs
fsub
mov
xor
mov
inc
jo
je
ja
mov
les
adc
dec
cmp
add
xchg
jno
sbb
push
sub
jecxz
das
aas
or
or
movs
mov
leave
test
test
stc
push
(bad)
sbb
test
sbb
in
jmp
dec
and
or
cmp
movs
jnp
jmp
leave
mov
test
loop
loope
jge
dec
sbb
arpl
leave
inc
pusha
aam
call
jecxz
in
adc
test
xor
xchg
sub
or
xchg
adc
mov
test
stc
into
xchg
and
popf
jnp
es
cmps
cmp
dec
mov
mov
adc
jno
sti
push
aad
jg
dec
add
sti
cmp
pop
fnsave
mov
adc
adc
leave
stc
pcmpeqb
iret
fdiv
mov
push
sub
jmp
mov
sub
fdivr
stos
cli
aam
stos
mov
or
out
mov
inc
in
js
pop
pop
push
movs
je
add
fcom
add
fistp
pop
imul
je
jo
rcr
mov
pop
or
sar
stos
xchg
pusha
adc
(bad)
push
fstp
jnp
mov
cmp
pop
fs
hlt
mov
xchg
imul
les
mov
lahf
nop
lea
(bad)
repnz
rcr
pushf
pop
push
dec
adc
adc
sbb
ins
and
add
fwait
inc
retf
(bad)
xchg
fsubr
rcr
inc
dec
sub
(bad)
or
dec
jmp
inc
xor
aas
add
xor
xchg
into
jg
(bad)
ds
mov
sbb
leave
and
in
jno
(bad)
shl
cld
stos
ror
es
xchg
pop
mov
sbb
mov
outs
jle
jne
pop
adc
sti
icebp
or
dec
loopne
mov
inc
shl
dec
faddp
movs
sahf
xor
mov
sti
std
ja
jno
mov
mov
lahf
adc
idiv
pop
xor
pop
mov
fadd
pop
in
stos
scas
inc
push
fst
(bad)
and
xor
xchg
jnp
cmp
and
inc
inc
out
jno
ret
lods
fs
push
repz
retf
xchg
ins
pusha
inc
push
push
adc
iret
or
scas
stc
cmc
or
lock
repnz
retf
mov
jbe
inc
mov
push
and
pop
lods
inc
mov
rcl
push
std
sbb
movs
mov
stos
xchg
fld
inc
lds
xchg
pop
inc
fstp
outs
ret
dec
jmp
imul
push
add
loop
push
stos
jg
pop
dec
or
pusha
ss
into
xchg
fisubr
and
test
mov
jp
stos
xchg
out
loopne
mov
fadd
mov
repz
jg
ja
push
pop
ss
dec
pop
jge
cmps
shl
in
popf
sbb
cmps
xlat
shl
jns
lahf
fwait
ins
cli
(bad)
ins
enter
or
jmp
pop
xchg
add
xor
sbb
add
and
cmps
pop
cld
xchg
aas
pushf
loope
mov
mov
or
adc
sub
and
adc
and
add
lods
xchg
cli
in
mov
clc
xor
fcomip
jg
pushf
xor
hlt
and
daa
cvtdq2ps
or
js
or
push
jne
inc
jl
in
add
mov
sbb
es
outs
add
inc
cmc
ds
lock
xchg
sar
daa
popa
cmc
jecxz
ins
mov
fcomp
add
or
xchg
inc
xchg
sub
dec
(bad)
cmp
movs
push
nop
ret
imul
je
test
pop
mov
add
adc
out
and
push
push
pop
dec
sbb
pop
lods
in
cs
js
aas
and
push
sub
js
inc
nop
fimul
pop
push
xor
adc
fild
mov
shl
ins
shl
jg
test
mov
stc
mov
jle
dec
nop
ja
push
pop
call
frstpm(287
rcl
fsubr
add
outs
xchg
fimul
push
push
mov
sbb
push
jmp
retf
ret
push
in
xor
add
push
ins
stos
adc
adc
dec
aaa
mov
mov
pusha
call
and
movs
(bad)
std
xchg
ja
cmp
xchg
inc
jl
loope
lahf
js
add
movs
cmps
mov
les
xor
mov
mov
stc
inc
mov
packssdw
adc
or
add
rcr
dec
imul
sub
and
pop
nop
jno
add
pop
jne
cmps
adc
push
stc
cdq
(bad)
dec
loopne
xchg
pop
sub
push
pop
jbe
outs
dec
(bad)
mov
rol
pop
(bad)
fs
jle
xchg
scas
jb
test
jno
sbb
or
js
jmp
pop
cmp
clc
dec
xor
pop
mov
jb
inc
cli
popa
sbb
ret
in
(bad)
pop
test
adc
jg
jnp
add
out
ret
rol
dec
mov
mov
pusha
mov
jmp
xlat
sbb
cmp
mov
push
jnp
sub
dec
test
pop
push
and
lea
(bad)
movs
adc
lods
pusha
add
add
push
mov
xlat
daa
xchg
jae
fcomip
push
inc
cwde
fwait
sti
sub
add
stc
jno
push
pop
and
pop
or
das
iret
and
stos
add
iret
mov
jp
push
lea
jmp
clts
lds
in
inc
test
mov
mov
fmul
sub
or
sbb
retf
pop
push
fwait
fwait
mov
in
in
mov
cli
add
jno
out
or
pop
mov
pop
dec
sti
enter
call
out
in
ins
adc
fcompp
in
sbb
xchg
pusha
mov
sbb
push
outs
das
rcl
dec
sti
cmp
xchg
in
out
fadd
push
(bad)
dec
stos
inc
retf
cld
loope
dec
int
arpl
scas
jg
les
jl
nop
pop
inc
ss
test
jge
xchg
movs
push
mov
icebp
dec
xchg
push
mov
cmp
jmp
mov
jns
ror
and
xor
adc
lock
aaa
sub
inc
mov
sub
outs
aas
mov
aad
in
jmp
inc
xchg
cmp
fmul
dec
cmp
mov
(bad)
xor
xchg
and
cli
xor
push
push
pop
rcr
out
inc
mov
bound
stos
jmp
xchg
inc
xor
jns
mov
dec
imul
cmp
hlt
lds
aam
push
adc
aas
hlt
adc
xor
in
xchg
fnstenv
pop
jne
inc
inc
jle
jmp
loope
add
mov
xchg
aad
cmp
cmp
imul
push
pop
pop
daa
pusha
xchg
pop
cmps
pop
pop
cmp
mov
lods
shl
call
cmp
inc
xor
jns
dec
xchg
push
mov
sub
cdq
xor
cdq
inc
push
dec
mov
(bad)
out
jmp
push
inc
fisttp
enter
idiv
stc
mov
gs
bound
or
and
test
das
fnstcw
or
push
aad
rcr
push
xchg
imul
xchg
pop
xchg
add
push
(bad)
and
mov
inc
(bad)
int3
inc
lea
daa
jl
jo
or
adc
int3
enter
xchg
jp
and
shl
inc
adc
or
mov
sub
xor
mov
mov
mov
or
and
push
nop
repnz
lea
jmp
test
xlat
lds
adc
loop
ins
(bad)
sub
push
das
jmp
in
fnstsw
add
mov
cwde
pop
lahf
inc
jle
stos
mov
(bad)
jbe
xchg
scas
add
sub
sbb
(bad)
out
mov
fldenv
jle
in
movs
or
enter
dec
pusha
stc
xchg
mov
xor
jl
popa
push
pop
into
cmp
dec
out
fld
clc
leave
mov
retf
adc
add
inc
in
or
jno
lock
jae
sti
dec
jle
inc
push
fdivr
lods
mov
out
ins
dec
icebp
cmp
mov
movs
xchg
loopne
(bad)
dec
imul
pop
inc
inc
adc
popf
jbe
adc
ja
add
mov
xchg
or
stc
xor
jmp
jmp
mov
inc
adc
sti
mov
cmp
lods
mov
and
dec
mov
sahf
dec
bswap
(bad)
adc
outs
hlt
jmp
mov
aas
xchg
push
test
cmp
cld
push
movs
cli
xor
mov
and
aaa
inc
and
lods
mov
(bad)
out
cmp
mov
and
or
sub
sar
mov
les
bound
push
cld
sbb
push
mov
int
loopne
ss
movs
loope
lock
cmp
or
jmp
fwait
(bad)
push
daa
(bad)
xor
ins
inc
sar
stc
shr
jle
cmp
or
cmp
lea
test
call
jle
sbb
or
jbe
pop
loope
sahf
outs
xor
xchg
mov
ins
ror
ss
xchg
in
adc
jle
xor
ret
pop
mov
rcl
js
lods
sti
mov
fdiv
push
dec
mov
(bad)
or
xchg
icebp
push
rcl
push
pop
xchg
inc
inc
adc
std
addr16
mov
mov
es
nop
push
sub
push
sub
xor
movs
(bad)
push
shl
(bad)
loop
daa
pop
push
arpl
ds
jge
or
dec
jne
dec
mov
mov
fiadd
daa
jbe
js
inc
cld
pusha
fisttp
addr16
shr
sbb
cmp
(bad)
inc
cmp
lea
sti
inc
dec
add
fwait
add
jo
imul
retf
cmps
push
sub
push
add
iret
into
fbld
das
pushf
mov
cmp
dec
ds
inc
retf
xchg
ds
outs
stc
sbb
test
and
not
dec
cmp
leave
and
call
lods
shl
scas
sahf
sar
aas
seto
lea
aam
mov
popf
jmp
nop
inc
mov
sub
jle
xor
gs
ror
or
inc
neg
fwait
pop
shl
dec
rcr
cli
pop
cdq
stos
cmp
std
cmp
mov
out
shr
adc
fwait
out
mov
outs
lds
imul
stos
sahf
xor
pop
in
(bad)
cld
sub
pop
lahf
adc
jl
jmp
sar
xor
jnp
bnd
inc
mov
inc
ds
jns
xchg
or
int
mov
and
add
out
es
mov
and
mov
cmc
repz
les
inc
sahf
inc
pop
cli
retf
imul
cmp
sbb
push
push
pop
les
clc
lock
cdq
mov
les
xchg
das
jmp
push
bnd
inc
in
repnz
(bad)
pop
pop
dec
shr
jmp
push
ficomp
mov
stc
(bad)
jae
in
and
pop
mov
popf
inc
(bad)
mov
jnp
sbb
scas
ins
inc
push
dec
ret
adc
cwde
loop
and
cdq
vpunpckldq
out
inc
pop
sub
add
cmp
sub
test
sub
sbb
lods
or
std
cmp
mov
dec
fisttp
inc
xor
push
scas
loop
pop
loopne
xor
mov
icebp
xor
icebp
xchg
cmp
jecxz
clc
add
cli
in
push
ins
push
nop
mov
leave
lods
arpl
scas
lods
lods
sbb
and
xor
mov
sbb
push
push
retf
or
push
mov
test
jbe
mov
push
or
sbb
pop
jecxz
retf
nop
rol
bnd
and
das
aad
inc
and
adc
adc
inc
fs
js
or
stc
fldenv
je
mov
mov
sbb
lahf
mov
adc
jno
fstp
pop
hlt
mov
adc
lock
push
jmp
jmp
inc
repz
fild
(bad)
addr16
outs
and
and
jle
std
repz
shr
push
sub
cwde
sar
push
xor
sub
dec
jp
add
call
jne
test
mov
hlt
icebp
jecxz
ret
add
ins
and
mov
mov
jae
cmp
pop
fimul
pop
mov
ja
adc
xchg
cmp
or
adc
aam
add
or
sbb
ins
mov
mov
fs
sbb
sbb
addr16
leave
test
pop
in
inc
shl
add
pop
cmp
in
push
out
out
cld
xchg
add
cmps
into
cmc
mov
push
push
mov
sbb
js
mov
pop
or
(bad)
icebp
inc
xchg
and
mov
mov
test
xchg
inc
fdivr
pop
push
cli
pushf
arpl
cs
test
stc
mov
xchg
repz
aad
fwait
push
xchg
cmp
sub
fmul
retf
or
add
(bad)
clc
stos
dec
(bad)
in
icebp
jne
sub
sbb
adc
xchg
aaa
bound
and
je
add
mov
into
mov
fsub
sub
ffree
into
shr
and
ins
ret
repz
pop
fsubr
rcr
int3
nop
mov
ret
daa
xor
lahf
and
and
xchg
in
xchg
adc
jns
test
mov
xchg
enter
lock
fwait
push
cs
mov
xor
cs
cmp
les
test
in
cmc
out
div
cmp
xchg
popa
es
jns
pushf
cld
out
iret
push
mov
or
adc
(bad)
pop
jg
(bad)
cmp
dec
popa
mov
inc
div
hlt
adc
jae
mov
out
fistp
xchg
add
iret
push
cmps
and
push
ret
xchg
jne
sbb
std
adc
hlt
stc
retf
sahf
push
sub
js
in
imul
dec
pop
push
xchg
mov
inc
dec
add
push
mov
imul
repnz
sub
ja
aam
lock
sub
test
in
push
or
pop
push
mov
ficom
jno
out
pop
push
into
fs
pop
jno
iret
cmps
xor
ret
movs
sbb
lock
aam
bound
pop
daa
jecxz
in
(bad)
popa
xchg
sub
or
rcl
dec
push
stc
sub
add
jg
add
adc
sbb
jae
rol
add
test
lods
sub
pop
pop
into
or
or
fistp
sub
mov
xchg
test
cmp
inc
push
lock
push
push
test
sbb
lods
clc
mov
sub
into
add
retf
sahf
push
hlt
ss
cmp
xchg
lock
mov
bound
sbb
cmp
stos
mov
movs
add
jbe
into
inc
sub
clc
dec
mov
int
repnz
jb
and
dec
sar
cmp
(bad)
fld
loopne
jns
mov
test
jecxz
lea
loope
clc
or
js
mov
out
rcl
call
dec
push
push
cmp
les
push
retf
pop
xchg
jns
outs
mov
inc
movs
dec
call
fcom
fidivr
push
jmp
push
push
gs
sub
(bad)
cdq
pop
sub
aam
popa
mov
jle
mov
xor
mov
push
add
mov
xchg
mov
cmp
cmp
ret
and
or
ret
adc
das
dec
test
loop
retf
aam
or
enter
mov
jmp
jge
pop
pop
jae
loope
pop
pop
mov
cmp
lods
mov
inc
fs
add
pop
imul
jg
cmp
jge
pop
pop
jbe
lds
jmp
out
or
or
(bad)
jns
call
mov
mov
mov
das
adc
jl
mov
addr16
xchg
mov
xchg
add
dec
sbb
cmc
fisttp
dec
jbe
cmp
repz
jmp
mov
shr
jo
call
(bad)
scas
mul
retf
imul
aaa
je
hlt
xchg
adc
jo
mov
ret
int3
lock
push
mov
pop
mov
mov
inc
jecxz
inc
and
mov
mov
xchg
lods
pop
in
cmp
mov
shl
(bad)
sbb
ror
xor
out
pushf
dec
repz
inc
sub
mul
pop
stc
push
ret
aad
pop
and
(bad)
inc
inc
mov
xor
in
xlat
add
jb
xchg
ret
push
or
dec
mov
ret
movs
scas
sub
aaa
outs
jmp
mov
or
out
inc
cs
sub
fisubr
cs
push
mov
mov
(bad)
fild
cmp
xor
inc
in
push
test
call
xchg
pop
xchg
int3
lods
jl
pop
ret
sbb
pop
dec
mov
cwde
pop
mov
das
push
out
sub
cmc
retf
cmc
movs
std
(bad)
sahf
pavgb
fmul
sbb
xor
cmp
adc
pop
lods
scas
fld
iret
mov
stos
call
adc
or
inc
and
(bad)
xor
(bad)
and
out
mov
daa
ins
stc
test
and
std
and
mov
add
xor
jle
into
scas
cld
xchg
leave
push
adc
pusha
fsubr
ds
mov
pop
mov
not
push
daa
sub
push
dec
pop
cs
clc
push
xchg
push
pop
fld
pop
leave
pop
mov
xchg
dec
jne
outs
sbb
sti
dec
jne
cmp
adc
icebp
pop
xchg
push
mov
cmp
or
pop
pop
stos
ror
xor
dec
jo
cmp
out
mov
xor
xor
rol
push
adc
sbb
xlat
and
loop
outs
rcr
cmp
scas
inc
or
popa
mov
inc
and
dec
push
inc
mov
lock
imul
jmp
cmp
add
aaa
jl
dec
fwait
retf
cmp
ret
lea
push
ins
arpl
jge
int3
loop
sub
into
xor
inc
cmp
dec
outs
dec
outs
push
xchg
dec
xchg
dec
out
lea
test
lock
xor
pop
adc
jg
call
dec
xchg
adc
pop
dec
cmp
mov
mov
fwait
mov
jne
mov
into
scas
leave
out
push
dec
mov
les
aas
scas
mov
cmp
mov
cs
pop
inc
ret
and
add
rcl
adc
popf
xor
sbb
fwait
sbb
adc
bound
adc
fld
and
iret
add
mov
or
push
(bad)
sub
xchg
xchg
mov
or
xor
cmp
inc
and
push
test
cld
sub
into
xchg
jae
xchg
xchg
loopne
xchg
push
sub
retf
pusha
or
mov
lods
sub
mov
xchg
and
xchg
sbb
arpl
xor
pop
jecxz
cld
lods
mov
add
cdq
or
stos
jmp
push
xchg
cdq
leave
sub
fbld
div
aaa
ja
gs
sbb
pop
push
(bad)
(bad)
popa
or
xchg
dec
(bad)
push
call
dec
push
sti
cmp
adc
ins
call
loopne
inc
int3
or
clc
jmp
sbb
and
pop
ja
(bad)
mov
mov
mov
push
xchg
int
cmp
lock
jp
dec
dec
test
imul
push
adc
mov
inc
cmp
iret
cmp
adc
mov
test
add
jl
sub
jae
sbb
mov
div
push
fimul
lahf
xor
shr
dec
or
jp
cld
push
loop
aad
pop
outs
shl
pop
pusha
sbb
mov
cmp
push
dec
ret
jbe
and
pop
fs
pop
ret
dec
adc
cmps
push
sub
mov
mov
mov
push
aaa
xchg
dec
std
xor
add
inc
inc
mov
pushf
(bad)
cmps
test
adc
fwait
leave
cmp
stc
out
dec
jns
pop
cmp
push
scas
jmp
adc
pop
sahf
mov
jno
pop
pop
push
popf
in
int
shr
dec
leave
mov
xor
xor
in
and
add
outs
pop
fwait
mov
pusha
repnz
mov
dec
pusha
popf
scas
stos
pop
test
or
cmp
aaa
add
(bad)
cmp
xor
and
push
sbb
push
xchg
mov
call
mov
mov
dec
(bad)
xchg
dec
fnsave
sbb
leave
jmp
int
sbb
aas
jmp
push
pop
leave
xchg
pop
mov
jae
cmc
fwait
inc
dec
aas
or
ror
(bad)
out
(bad)
int3
jb
jb
out
jb
out
push
(bad)
dec
mov
inc
pop
or
test
mov
in
and
data16
fbld
(bad)
adc
(bad)
fcom
sub
and
fisttp
lock
shl
lock
jnp
jmp
dec
jmp
xor
jmp
xchg
(bad)
push
mov
cld
and
aam
lock
dec
jmp
adc
mov
dec
pop
inc
ret
jno
mov
mov
push
adc
mov
repnz
xor
in
dec
mov
mov
ja
jno
jecxz
pop
pop
cmp
sub
pop
pop
xchg
sub
pop
cmp
jecxz
fidiv
and
dec
aad
dec
hlt
ret
(bad)
xchg
outs
adc
mov
adc
inc
push
test
ss
(bad)
xchg
stos
out
ret
or
dec
mov
inc
lods
sbb
jmp
pop
enter
push
out
dec
fild
out
cmp
movs
loopne
jo
retf
mov
shl
push
scas
lea
arpl
(bad)
xor
adc
pushf
xchg
adc
mov
dec
test
push
xor
pop
cwde
sub
cdq
in
mov
push
cmp
movs
mov
jns
or
jns
(bad)
jmp
mov
xlat
mov
fsubp
mov
and
outs
xor
mov
fdivr
scas
jns
mov
mov
or
call
sti
pushf
dec
(bad)
ins
in
call
rcl
in
xlat
enter
in
mov
and
sbb
mov
retf
das
clc
jnp
push
jecxz
mov
mov
jns
(bad)
shr
cmps
cmps
loopne
jae
jns
jns
xor
mov
inc
mov
js
mov
dec
inc
xor
das
dec
das
jbe
push
jnp
ret
mov
out
cmp
jl
fisttp
lea
jns
jae
fst
push
mov
out
lock
mov
add
xchg
pop
les
out
mov
jl
xchg
ffreep
mov
push
scas
xchg
scas
movs
aam
mov
jge
(bad)
jae
shl
cmovae
enter
imul
pop
or
(bad)
int3
in
xchg
xlat
inc
mov
es
push
test
mov
mov
shr
rol
in
clc
cs
xchg
ficom
es
mov
into
out
or
mov
arpl
retf
mov
in
push
int
and
mov
mov
into
and
pop
icebp
es
sub
movs
push
mov
(bad)
out
movs
jecxz
mov
sub
shr
sar
cdq
in
(bad)
dec
xchg
jmp
sub
pop
cld
dec
xor
inc
fstp
jmp
int3
xchg
(bad)
(bad)
cmp
rcl
jbe
jmp
inc
jmp
arpl
arpl
dec
pop
mov
dec
fcomi
mov
ror
cmp
popfw
(bad)
ret
into
mov
enter
pusha
(bad)
sbb
mov
cmp
xchg
out
dec
jecxz
in
mov
(bad)
mov
or
fist
cmp
mov
test
mov
pop
arpl
cs
inc
ss
sbb
fild
retf
xchg
mov
inc
dec
cmp
test
adc
mov
xchg
sub
popa
daa
rol
xchg
mov
popa
sbb
or
dec
push
cmp
div
and
inc
jle
xchg
retf
cli
sbb
adc
sbb
sub
push
mov
xchg
test
lock
pop
shl
rcr
pushf
dec
enter
inc
mov
sbb
nop
das
and
mov
nop
or
sbb
mov
xchg
(bad)
jl
jecxz
jnp
repnz
mov
sub
movs
jecxz
cwde
mov
and
(bad)
cwde
not
(bad)
jmp
out
std
dec
mov
aam
xchg
loope
sub
outs
test
fidiv
int
lods
adc
or
pop
mov
shl
popf
sbb
jl
rol
lds
test
scas
xor
inc
jp
adc
adc
cmp
movs
push
mov
mov
sub
jg
pop
es
pushf
mov
xchg
xor
mov
repz
retf
mov
add
popf
jg
adc
and
imul
jnp
xor
imul
outs
loope
cmp
xchg
mov
mov
in
push
cmc
pop
inc
pop
xor
pop
and
aas
les
daa
mov
mov
jmp
cmp
(bad)
dec
ja
loop
into
repz
cmps
mov
inc
mov
popa
push
(bad)
mov
in
xor
je
bound
cmps
repz
jns
out
cmp
xlat
(bad)
mov
or
add
xchg
inc
aas
addr16
xor
fs
imul
jno
arpl
sbb
and
pop
mov
add
and
repz
xchg
enter
in
lock
mov
mov
add
cmp
cmp
xchg
mov
loopne
cmp
xor
adc
sbb
das
dec
std
mov
mov
mov
aaa
mul
ret
jecxz
rol
test
xchg
lods
movs
cmp
inc
pop
add
scas
imul
jmp
stc
pusha
enter
xchg
push
fdivr
icebp
inc
int
outs
push
imul
jmp
fwait
cmc
gs
mov
push
mov
cs
movaps
scas
push
fwait
fs
jg
lahf
bound
adc
call
scas
dec
out
test
sub
movs
inc
xor
dec
add
shl
push
stos
pusha
inc
scas
hlt
xchg
arpl
sbb
sub
js
or
pop
test
cmps
mov
not
in
and
jmp
push
cmps
and
ss
hlt
idiv
pop
dec
ins
in
loope
sbb
int3
add
ins
fisttp
mov
es
jecxz
fs
cmps
repnz
mov
add
clc
pushf
retf
(bad)
fs
outs
call
jmp
outs
mov
jb
cmp
test
and
xchg
je
xchg
test
push
jmp
hlt
xchg
sub
push
jbe
inc
mov
lods
dec
test
mov
adc
retf
xchg
push
add
pop
sub
aam
test
cs
push
fucompp
inc
popf
gs
cmp
int3
jle
push
adc
or
js
push
xor
scas
mov
dec
adc
in
mov
jmp
lock
nop
ds
mov
mov
push
sahf
inc
aad
mov
push
popa
or
jge
pop
mov
sti
repnz
fistp
pop
leave
push
iret
add
aam
mov
dec
(bad)
lock
call
mov
lock
xchg
jmp
data16
in
sub
inc
cmp
pop
add
pop
xor
ret
dec
mov
repnz
sub
pop
call
and
or
adc
dec
mov
mov
popa
dec
test
and
(bad)
jns
jl
jns
pop
enter
push
push
lock
push
cmp
ins
test
rcr
call
aam
into
pop
mov
fld
shl
lahf
jnp
add
xlat
out
mov
mov
in
ffreep
in
rcl
adc
add
cmp
rep
leave
js
cdq
fld
jle
into
ds
mov
jecxz
cli
adc
push
fdiv
sbb
pop
dec
xor
pandn
test
out
sub
lods
mov
sar
jo
push
push
add
(bad)
sub
add
mov
scas
jmp
dec
mov
add
jecxz
(bad)
jl
jle
aas
lods
fisub
cdq
xor
jg
ja
and
arpl
(bad)
pusha
stos
cmp
outs
cwde
nop
and
jne
and
inc
das
in
shr
call
mov
cmp
jb
mov
jns
test
pop
icebp
lods
inc
inc
(bad)
fnstsw
mov
imul
or
sbb
mov
push
xchg
dec
cmp
mov
(bad)
aad
mov
dec
dec
cld
mov
xchg
inc
mov
retf
inc
fwait
cld
stc
cmp
fstp
cmp
push
mov
ds
pushf
sub
jge
dec
sbb
dec
fwait
ror
ds
das
jle
push
add
or
push
arpl
cmp
sub
cmc
loopne
dec
mov
cmp
hlt
cdq
cmp
or
mov
pop
stos
and
out
push
mov
fisttp
inc
xor
xchg
imul
fs
mov
lods
adc
jbe
rol
fs
xor
inc
(bad)
push
cmc
adc
rol
dec
aam
repz
cmp
xor
int3
scas
mov
and
test
loop
mov
scas
in
dec
sub
add
(bad)
(bad)
ds
(bad)
fmul
neg
ss
sub
mov
jecxz
(bad)
mov
push
jo
jle
mov
test
dec
push
es
fs
out
xlat
pop
es
not
ins
cmp
dec
push
pop
add
cdq
xchg
(bad)
shl
sub
sub
add
jne
pop
in
scas
jb
mov
stc
pusha
idiv
psubb
sbb
xor
cmp
xchg
pop
cmps
mov
test
loopne
gs
pop
mov
arpl
dec
and
inc
add
xchg
dec
sub
cs
test
sbb
sbb
int
movs
inc
xchg
jmp
mov
jae
in
inc
ins
add
rcr
movs
arpl
jmp
outs
ret
sub
xor
cmp
jns
and
nop
test
loop
cmp
stc
lock
stos
sbb
mov
jo
mov
adc
cmp
mov
xor
xchg
or
push
mov
inc
lahf
(bad)
cmp
jecxz
dec
xor
add
stc
mov
cmp
xor
scas
(bad)
outs
and
les
shl
xlat
loopne
sub
jmp
inc
adc
add
ror
cwde
les
icebp
xchg
daa
out
push
xor
sub
sub
dec
(bad)
pop
test
sti
mov
call
lods
xor
adc
xchg
rcl
les
data16
push
push
mov
adc
xor
cmp
dec
mov
add
cwde
ins
mov
push
pop
mov
call
pop
movs
mov
sub
aad
dec
mov
inc
pop
push
xor
in
mov
into
xchg
push
jne
shl
ins
in
ror
push
or
adc
repnz
aas
mov
adc
cmp
xchg
inc
jl
mov
push
cwde
aaa
or
mov
mov
lods
mov
adc
je
pop
push
sbb
mov
and
pop
push
push
outs
das
mov
fild
aaa
sub
movs
mov
nop
adc
stos
aad
mov
fabs
jae
pop
pop
outs
mov
imul
push
fsubr
cmp
ds
in
pop
push
or
dec
test
jl
sub
mov
push
mov
pop
push
xchg
bound
out
xchg
mov
sub
scas
dec
aaa
leave
(bad)
and
dec
push
xchg
or
sti
dec
jb
movs
dec
loopne
out
dec
inc
push
sub
add
in
sbb
xchg
pop
xchg
xor
add
mov
std
cmp
xchg
pop
aaa
es
mov
and
and
mov
push
outs
repz
pop
add
push
mov
and
and
push
cmps
ret
add
jae
mov
fldcw
or
xchg
push
mov
and
push
xor
push
dec
dec
mov
test
js
jp
jecxz
pop
in
retf
cwde
mov
movs
pop
popa
std
test
and
cwde
sub
cmps
ficom
lds
mov
xor
xor
movs
bswap
jnp
sti
add
inc
sbb
imul
fldenv
add
pop
mov
cmps
shl
(bad)
ss
mov
cmp
es
je
pop
push
jle
jp
fstp
mov
xchg
adc
fisubr
push
xor
ja
xchg
imul
adc
ins
sbb
cmps
push
and
sub
sbb
cmp
(bad)
test
pop
sar
aaa
std
mov
sub
aad
cmp
jne
retf
jb
push
lds
sub
sub
adc
retf
pop
sbb
xchg
and
mov
pop
in
ror
iret
and
sub
mov
es
push
and
cs
imul
sub
dec
mov
icebp
call
sahf
sti
enter
retf
jge
loop
shl
je
mov
inc
or
push
stos
and
sbb
jmp
inc
pop
pop
dec
addr16
xlat
inc
push
pop
jmp
and
cmps
mov
jb
fisubr
cwde
div
or
jmp
rcr
or
addr16
add
out
fwait
je
int
bound
out
pand
mov
push
bound
bound
daa
icebp
mov
into
pusha
outs
fmul
mov
and
dec
retf
std
pop
mov
scas
fwait
cld
add
(bad)
stc
sub
jmp
mov
lahf
stos
arpl
pop
adc
push
push
jecxz
xchg
(bad)
mov
and
push
mov
dec
cdq
xchg
xor
mov
inc
adc
and
movs
(bad)
(bad)
jmp
sub
jne
jns
mov
ret
xchg
xchg
or
push
or
lahf
xor
pop
out
mov
inc
sub
dec
cmp
fistp
lea
fnsave
dec
pop
xchg
xchg
and
test
ins
(bad)
mov
jg
lds
loop
jne
mov
inc
retf
mov
(bad)
icebp
les
fucom
and
or
xor
dec
or
(bad)
mov
push
bnd
cmp
xchg
fwait
xchg
dec
xor
outs
adc
mov
xchg
dec
test
cld
dec
aam
add
ss
pushf
sar
not
push
iret
das
aas
inc
je
ins
rcr
and
aad
mov
fxch
xor
pop
dec
or
or
push
nop
push
pop
xor
jp
mov
inc
mov
(bad)
loope
pop
rcr
fs
(bad)
sbb
pop
fld
xchg
in
stos
outs
aad
lahf
sar
lock
sahf
in
movs
push
std
(bad)
mov
in
stos
push
popf
stc
sahf
mov
mov
push
fs
mov
push
ds
or
and
aad
and
sbb
pop
popa
mov
sub
retf
mov
dec
or
push
sub
push
popf
cmps
fisub
movs
jns
mov
dec
add
leave
leave
push
mul
add
rol
ror
jae
add
pop
sti
inc
adc
dec
mov
adc
sti
jmp
addr16
inc
popf
and
sbb
dec
push
mov
inc
in
lods
sub
repz
std
xchg
rcr
imul
fisttp
inc
mov
adc
repz
aas
cs
aam
sub
mov
xor
sbb
lods
cmp
test
xchg
ja
clc
into
test
add
std
jo
xchg
add
xor
jl
pop
adc
adc
xlat
mov
retf
stc
jns
and
xor
test
aam
inc
push
jne
mov
push
fnstcw
arpl
data16
lock
push
or
mov
mov
jmp
dec
int3
mov
inc
idiv
dec
xor
and
pop
jb
test
mov
mov
xor
mov
pop
push
inc
daa
xlat
sub
cmc
adc
les
(bad)
fbld
leave
jb
xchg
test
stos
and
jae
or
mov
aas
or
mov
js
in
fild
mov
and
sahf
stc
sub
int3
ss
div
into
(bad)
addr16
movs
cdq
mov
sub
and
lahf
mov
mov
pop
sbb
dec
push
(bad)
jne
and
or
mov
outs
mov
push
fld
cld
int3
xchg
xor
fidiv
xchg
sbb
jnp
cs
ds
push
loope
add
mov
data16
fbstp
leave
(bad)
fwait
test
dec
scas
jge
aaa
sbb
ds
or
add
faddp
retf
(bad)
cmp
es
dec
adc
xchg
jae
jo
xor
lock
push
add
mov
in
sar
pop
jl
sbb
lock
jns
or
inc
dec
xor
test
ins
mov
pop
add
gs
(bad)
fs
rcl
mov
in
retf
adc
pop
cli
adc
mov
clc
arpl
sub
(bad)
mov
scas
movs
xchg
add
lods
xchg
jae
loope
or
retf
adc
add
xchg
sub
xor
push
cs
lods
popf
xchg
cmc
cmp
jle
add
cmp
mov
outs
fwait
adc
in
in
arpl
jbe
inc
mov
imul
lahf
faddp
js
fdiv
enter
pop
lock
ds
ret
add
adc
mov
adc
pop
pop
mov
push
adc
add
mov
push
lods
fistp
fmul
jbe
mov
dec
call
idiv
push
out
add
shl
(bad)
adc
jns
icebp
and
in
inc
(bad)
ffree
call
fldcw
aas
repz
outs
add
test
test
and
jae
or
mov
lods
pop
adc
in
mov
inc
(bad)
mov
ins
cmp
pop
stc
jb
js
cdq
dec
xor
mov
les
scas
loopne
retf
cmp
jge
rol
mov
fcmovne
inc
mov
push
hlt
adc
je
dec
cmps
ror
push
adc
push
xchg
mov
dec
fsubr
mov
stos
lahf
rol
shr
aad
sub
fld
ss
xor
test
sub
fiadd
sbb
jle
js
in
out
lods
jecxz
(bad)
sbb
int
mov
jge
popf
movs
ja
addr16
sbb
fdivr
(bad)
sub
cmp
ins
mov
ds
pop
adc
dec
xor
loope
pop
xchg
jge
test
mov
arpl
mov
push
or
add
or
mov
cmp
loope
and
cmp
shl
add
jle
push
fwait
add
in
je
cdq
pop
(bad)
addr16
arpl
inc
sub
xchg
or
das
repz
hlt
stc
dec
push
aas
mov
jge
cmps
rcr
cmp
xchg
xor
dec
enter
or
aaa
out
leave
xchg
jle
xchg
jg
jno
inc
jbe
push
in
ret
iret
pop
mov
rcl
inc
mov
fst
or
clc
push
das
jae
scas
aam
gs
dec
jmp
in
test
dec
cmp
push
cs
cmp
out
jg
inc
mov
push
dec
dec
in
mov
pop
inc
jb
dec
in
push
arpl
(bad)
sub
stos
push
cmp
dec
sub
add
lds
in
(bad)
fsubr
dec
leave
fldl2t
pop
push
cwde
mov
ja
into
bound
test
mov
call
dec
sbb
mov
imul
lds
in
and
fs
adc
adc
outs
(bad)
dec
adc
inc
imul
leave
mov
fnstcw
jge
mov
outs
and
jo
add
test
dec
xor
enter
add
cmps
cmp
xlat
loop
or
in
add
out
jl
retf
call
add
pusha
arpl
jp
ret
sbb
cmp
fs
mov
mov
xchg
lea
sub
sub
sahf
out
pop
rcr
jb
or
pop
push
jl
push
outs
cmp
aaa
je
test
push
out
dec
call
push
cmp
add
sbb
jo
das
hlt
movs
dec
xchg
xchg
arpl
mov
cmp
adc
push
gs
cmp
cmp
(bad)
arpl
stos
mov
adc
mov
jle
fisttp
dec
inc
and
push
adc
mov
jle
popa
jbe
xor
ficom
nop
xchg
ins
pop
sbb
repz
push
inc
icebp
das
loop
sbb
or
add
mov
cmps
push
or
stc
ins
div
pop
shl
ror
or
mov
les
and
sbb
jns
and
mov
outs
inc
fs
jno
lahf
popa
scas
fs
push
lods
sti
xchg
aad
pextrw
mov
jle
jg
sbb
jb
inc
outs
pushf
push
stc
pop
cli
imul
aam
or
div
cs
inc
les
rcl
inc
jbe
inc
rcl
mul
jo
std
jns
adc
out
xor
mov
dec
cmpps
movs
push
add
cmp
sub
mov
loopne
fcomip
(bad)
mov
xchg
mov
ret
inc
aaa
push
scas
fimul
mov
pop
leave
cmp
inc
mov
mov
sub
jno
mov
push
leave
mov
clc
mov
ficom
and
sbb
cmps
nop
(bad)
in
stos
push
cmp
int3
jge
aam
std
inc
ror
mov
bound
mov
rcr
shr
pop
jae
arpl
mov
out
ja
pop
jmp
push
xor
movs
test
retf
sub
fmul
sbb
stc
stc
sbb
loop
add
stc
enter
scas
les
pop
sub
mov
in
pop
xor
jp
push
mov
in
int
add
mov
pop
xor
inc
mov
push
movs
and
inc
or
sbb
fcomp
xchg
mov
fst
or
fdiv
loop
nop
jmp
stos
aaa
hlt
cmc
fs
dec
cmc
and
in
dec
jne
jle
repnz
(bad)
mov
stc
xchg
in
cmp
les
push
mov
repz
popf
pop
mov
jl
jecxz
xchg
cli
cmc
sbb
(bad)
mov
(bad)
pop
xchg
xchg
sub
push
ja
mov
jmp
pop
test
or
stos
pop
fmulp
mov
nop
sub
aad
repnz
dec
int
lds
je
cmps
sub
je
mov
jl
pop
aaa
jae
icebp
fldcw
rcl
ja
scas
push
fld
mov
sbb
sbb
fidivr
repz
call
addr16
xchg
jno
ja
sbb
scas
mov
scas
scas
(bad)
fwait
loopne
loope
pop
xchg
sub
jns
leave
sub
sub
inc
movs
sbb
cmp
in
imul
ins
sub
cmc
outs
mov
inc
mov
inc
sub
sti
stc
adc
repnz
push
or
jmp
mov
inc
cmp
ret
jge
jle
popa
cs
sar
out
add
cld
imul
imul
loope
pop
jne
add
out
sub
sbb
int
pop
sar
fbld
adc
dec
push
aaa
stos
cmp
stc
icebp
pop
lods
push
std
xchg
xor
sub
(bad)
adc
imul
sahf
mov
xlat
sbb
sub
cmp
sub
test
arpl
test
icebp
xor
cmps
hlt
fsub
test
neg
cmp
cmc
jecxz
cmp
stos
scas
add
loope
mov
cdq
jmp
fiadd
retf
dec
and
(bad)
rcl
arpl
jmp
cdq
(bad)
clc
mov
cld
aaa
enter
jne
aad
jns
xor
popa
push
js
cmp
push
add
mov
inc
mov
jbe
test
stc
and
(bad)
cmp
js
(bad)
repnz
seto
add
pop
cmp
inc
call
sub
hlt
xor
ja
(bad)
jnp
mov
test
push
inc
sti
sub
cld
mov
mov
mov
retf
xchg
dec
adc
(bad)
jl
fwait
xchg
add
pop
repz
xchg
es
xchg
push
sar
pusha
sti
xchg
mov
sub
ins
cdq
rol
sub
mov
push
xchg
aaa
push
add
ss
or
test
ss
pushf
push
push
jmp
sub
push
xlat
aaa
sub
adc
mov
push
js
sub
fidiv
pop
sub
out
xor
jp
ror
and
dec
arpl
int
retf
jnp
loop
xchg
lahf
imul
mov
lock
pop
or
pop
and
leave
scas
(bad)
jmp
(bad)
call
xchg
xor
mov
mov
and
clc
out
jecxz
push
mov
out
sbb
push
idiv
pop
inc
inc
movs
loop
pusha
xor
fwait
jg
scas
iret
ins
fisttp
mov
mov
xor
adc
outs
out
mov
push
pop
enter
out
aas
and
ret
(bad)
sti
jb
(bad)
sub
fnstenv
sub
mov
mov
mov
das
call
movs
xor
dec
add
ins
push
xchg
mov
rcr
mov
push
int
xchg
pushf
push
mov
popa
mov
popa
pop
outs
fadd
push
enter
xlat
pop
sub
jecxz
out
aas
xchg
enter
sbb
imul
add
ror
sub
xlat
lea
fmul
out
pop
xor
and
ins
(bad)
cmp
dec
ja
sbb
dec
pop
sub
pop
mov
mov
call
loop
cmp
nop
daa
push
cli
addr16
cmp
mov
mov
adc
sub
fisttp
and
add
cmp
lock
push
dec
(bad)
repnz
xchg
sub
add
or
retf
ins
sbb
or
in
add
mov
mov
pop
mov
adc
jmp
jecxz
pop
push
mov
lods
push
cmp
mov
xchg
mov
add
stos
xchg
jmp
fdiv
inc
fdiv
push
leave
xchg
dec
cmps
dec
add
std
jmp
in
test
add
push
mov
aaa
dec
hlt
mov
adc
cwde
and
nop
mov
sbb
jo
jecxz
xchg
mov
test
nop
and
jmp
sub
jg
dec
in
or
inc
or
in
hlt
mov
sub
push
push
mov
jecxz
hlt
jecxz
pop
pop
adc
lods
rcr
xor
push
jecxz
cs
add
mov
stos
mov
sbb
gs
cli
mov
jnp
mov
inc
in
les
sbb
cld
mov
outs
or
mov
ret
loopne
aad
pop
jmp
dec
loope
sub
jbe
xor
push
fdivr
int3
jae
inc
jmp
pop
inc
mov
shl
dec
cmp
mov
mul
out
(bad)
test
test
xchg
(bad)
les
stos
pushf
add
mov
xchg
retf
cmp
sub
pop
add
mov
or
mov
cmps
hlt
sti
ja
inc
adc
add
orps
pop
or
int3
fcom
in
nop
sub
add
retf
iret
rcr
push
stc
leave
fisub
inc
rcr
inc
push
pop
cmp
nop
adc
mov
not
retf
lock
out
and
cmp
pop
daa
enter
mov
mov
retf
inc
push
xchg
xchg
pop
add
loope
xchg
out
xchg
loopne
clc
add
clc
pop
dec
jp
jecxz
loope
sbb
mov
fiadd
mov
mov
cmps
(bad)
arpl
pop
and
addr16
call
cs
mov
and
cmp
call
jg
mov
xor
xchg
add
js
rol
pusha
pop
cs
call
jl
mov
cwde
cmp
hlt
fisttp
in
push
out
xchg
jb
scas
adc
mov
cmp
jg
dec
dec
and
jmp
cmp
aam
lgdtd
sbb
out
push
imul
out
mov
aas
lods
adc
iret
adc
fisubr
fstp
add
xchg
cmp
jns
cmp
or
cmp
stos
popa
adc
stc
out
jp
data16
cmp
rep
xor
xchg
jmp
lock
cdq
ins
loop
aas
iret
mov
rol
cwde
(bad)
outs
xchg
shl
inc
mov
loop
ins
lods
test
adc
sub
pop
cmp
push
xor
stc
leave
sbb
mov
mov
imul
mov
mov
sbb
call
jp
inc
adc
imul
movs
(bad)
push
mov
mov
out
xor
clc
aas
adc
xor
stos
lock
push
test
add
mov
int
xor
fild
sar
sub
mov
gs
xchg
mov
pop
pop
push
mov
pop
xchg
inc
out
stos
mov
jbe
test
aam
int3
add
mov
mov
dec
cwde
fistp
jae
add
jbe
sub
inc
adc
aas
cmp
fisttp
(bad)
in
sahf
cmp
pusha
fistp
inc
cwde
sbb
sbb
sbb
push
outs
cmp
add
into
or
inc
push
sahf
pushf
sahf
scas
mov
cmc
mov
and
repnz
pop
dec
xchg
jbe
adc
push
je
imul
shr
fistp
fimul
push
cmp
ja
jno
loopne
dec
mov
sar
out
mov
out
xchg
bound
jmp
pop
imul
mov
fwait
sahf
ret
test
pushf
cmp
(bad)
cmp
and
sub
jae
adc
cdq
(bad)
fcomp
imul
mov
fmul
inc
icebp
add
inc
mov
jns
sub
push
inc
xor
jno
cwde
jae
and
mov
stc
add
jae
mov
int3
xchg
or
ja
(bad)
mov
inc
scas
shr
mov
(bad)
sbb
push
pop
and
cwde
cmp
inc
je
push
(bad)
mov
mov
adc
jb
fisttp
loopne
dec
popa
mov
fcom
or
mov
sub
cmp
movs
xchg
pop
stc
scas
repz
dec
test
ror
div
sahf
or
es
jle
sub
or
push
adc
imul
cmp
je
and
sbb
std
neg
pop
xor
fidivr
or
fisubr
cmp
repnz
shr
jmp
cmps
fnstcw
fdiv
leave
arpl
addr16
mov
jbe
dec
mov
pop
pop
jg
or
or
fdivr
mov
dec
mov
pop
outs
cmps
movs
icebp
(bad)
xchg
rcl
xor
inc
sbb
dec
sti
inc
jge
in
mov
push
lds
cmp
fidiv
pop
dec
shr
sub
pop
test
mov
or
push
inc
mov
fisttp
pop
es
test
int
mov
sub
popf
inc
lds
arpl
cmps
or
xchg
push
add
(bad)
in
mov
pop
adc
stos
lock
cmp
test
popf
push
mov
std
mov
cmp
dec
push
les
or
add
inc
inc
cmp
mov
push
(bad)
cli
addr16
sbb
fist
pop
add
imul
jp
mov
stc
mov
push
and
icebp
adc
sbb
add
push
lods
and
xor
shl
sub
xchg
stos
test
add
js
inc
pop
dec
xchg
xor
push
jae
fistp
or
mov
mov
in
inc
mov
pop
popa
loop
cld
dec
aaa
mov
cdq
jg
xlat
mov
inc
pop
mul
inc
sbb
sar
mov
dec
adc
jbe
je
repz
enter
jp
std
in
ins
shl
mov
lods
(bad)
push
in
push
(bad)
or
push
jmp
ja
cld
sub
or
call
mov
adc
xlat
jg
in
mov
enter
and
mov
aam
pop
js
lds
(bad)
cmp
mov
ret
scas
nop
ret
std
add
jge
ins
aas
or
ret
shl
push
mov
test
movs
rcr
cmps
lock
int
push
in
fadd
push
loop
in
xor
into
call
push
mov
sub
jmp
int3
loop
shl
js
fwait
(bad)
cmc
dec
lods
ss
push
ret
stc
loope
hlt
stos
inc
fs
xchg
xchg
xor
pop
sbb
xor
(bad)
dec
xchg
xchg
xor
mov
mov
push
cmc
repnz
push
rcr
pop
xchg
ret
retf
and
shl
add
inc
cld
sbb
sti
jmp
mov
sbb
add
xchg
mov
xor
jno
and
lods
push
cli
fidivr
and
xchg
push
cmps
int
mov
sbb
xlat
xchg
test
dec
adc
int3
and
scas
xor
sahf
pushf
fst
pusha
outs
lea
push
or
(bad)
sbb
rcr
mov
jb
out
adc
cmp
sti
xor
inc
and
add
dec
xchg
sub
retf
inc
inc
mov
retf
(bad)
push
mov
loopne
aaa
inc
or
rcl
and
fdivr
xlat
int3
mov
dec
adc
out
data16
je
pop
jle
arpl
mov
pop
cli
jb
cmps
and
das
out
inc
pop
daa
sub
int3
int
add
mov
cmps
ins
xchg
fsubrp
jl
mov
ss
or
push
dec
jg
inc
push
lods
retf
xor
jp
xor
jbe
shl
test
xchg
sti
in
scas
dec
ret
dec
push
cmc
jbe
mov
jne
lea
jne
icebp
nop
xchg
cs
mov
pop
jmp
hlt
jle
out
jnp
cli
aam
lea
cld
or
sub
push
cs
add
push
sub
inc
mov
sbb
cdq
xor
enter
pusha
(bad)
fcomp
dec
and
pop
dec
sahf
or
daa
aam
ficom
adc
shl
inc
shl
dec
jae
xchg
xor
cmp
xchg
clc
fsubp
and
pop
fs
adc
cld
dec
push
les
sbb
sahf
sahf
cmp
sbb
stos
ins
aas
test
mov
push
loop
or
sub
jbe
aas
repnz
pop
inc
dec
inc
pop
pop
lds
fcmove
mov
inc
mov
dec
sub
mov
fs
sahf
in
hlt
and
mov
mov
hlt
jno
imul
fdiv
stos
sbb
jge
cmp
dec
xchg
mov
loopne
mov
mov
in
test
fs
loope
xchg
into
daa
xor
stc
jg
xchg
aam
fisttp
inc
daa
imul
es
adc
xor
cld
sub
jp
jbe
inc
mov
jae
stos
adc
push
sbb
cli
xchg
sbb
loopne
inc
aam
xor
in
lds
mov
push
cli
call
sti
and
inc
inc
lahf
pop
push
add
ss
jge
mov
mov
sbb
lods
inc
and
sub
addr16
push
push
push
mov
call
dec
fistp
cmp
mov
(bad)
sti
pop
dec
leave
fcom
mov
hlt
cmps
test
ficomp
and
cld
mov
jmp
cmp
call
cwde
loop
pop
adc
sbb
shl
mov
xchg
in
add
xchg
outs
icebp
push
lahf
jle
rcr
outs
fsub
out
arpl
out
mov
push
outs
shl
and
pop
push
in
pop
imul
mov
lds
loopne
push
arpl
dec
jp
cmps
popf
sub
fidivr
int
popa
jnp
cld
and
test
int
and
pop
dec
add
loope
or
xor
mov
xchg
sti
call
mov
aad
jnp
mov
bnd
pop
mov
lods
out
push
inc
scas
jmp
rcr
enter
out
(bad)
movs
scas
into
jge
xchg
ror
mov
lods
ins
jae
jmp
cs
in
fst
fcomi
or
pop
dec
imul
sbb
sbb
bound
mov
stos
(bad)
nop
cwde
fcmovb
sbb
adc
inc
cmps
loop
jns
retf
sti
push
(bad)
rcl
ins
pop
add
mov
mov
push
mov
cmp
xchg
(bad)
mov
fadd
(bad)
ins
pop
cwde
pop
in
add
or
das
mov
add
pop
into
sub
mov
mov
pusha
je
arpl
out
mov
loope
rcl
inc
div
fs
lds
push
leave
(bad)
shl
and
in
dec
adc
xlat
mov
(bad)
mov
sub
sub
xor
mov
mov
inc
mov
mov
les
xchg
shr
adc
sub
ds
scas
shr
repz
ins
into
pop
mov
scas
hlt
mov
sub
push
pushf
xlat
dec
test
fcom
pop
inc
mov
loope
pop
mov
mov
sub
and
repnz
inc
push
sbb
add
jecxz
lock
clc
scas
pushf
sar
(bad)
clc
mov
mov
jle
sahf
dec
adc
je
cmp
xchg
xchg
sub
into
out
or
leave
movs
mov
out
adc
inc
imul
(bad)
xchg
mov
(bad)
mul
mov
xor
inc
clc
fistp
stos
dec
fcmove
in
inc
cmc
push
dec
adc
and
jnp
lds
dec
mov
shl
mul
test
fnstenv
call
cmps
jmp
pop
jge
retf
mov
mov
xor
push
ins
add
add
jle
rcl
popf
or
xchg
and
test
sub
dec
repnz
sub
sub
push
aam
sub
adc
sbb
out
imul
push
fcom
add
outs
xchg
test
pop
sub
pop
or
push
mov
and
inc
dec
cmc
mov
jb
jge
bound
sub
js
sub
movs
int3
mov
aam
lea
popa
aas
mov
xchg
xchg
lds
(bad)
fist
arpl
cmp
jg
call
pop
hlt
nop
lea
cmp
retf
push
fsub
mov
sub
mov
add
inc
xchg
sbb
pop
lods
jge
ja
ror
out
jae
sub
cmp
daa
pop
xor
pop
enter
pop
push
ficomp
pop
out
xchg
inc
icebp
and
cmps
outs
sub
sub
popa
lahf
(bad)
mov
pop
mov
sub
dec
push
fdivr
out
fnstenv
and
lods
loop
mov
sbb
mov
addr16
loop
sti
mov
icebp
push
and
add
xchg
mov
adc
mov
repnz
or
outs
lock
cmc
and
ffreep
cmp
das
dec
jnp
pop
loop
out
clc
xchg
sbb
movs
mov
stos
mov
mov
cmp
ret
cdq
or
or
mov
push
test
pop
push
jnp
mov
xchg
fldcw
retf
lds
push
xchg
mov
rcl
fs
sub
and
mov
push
ins
push
mov
hlt
or
imul
cmps
js
jae
xchg
jl
sub
push
push
ds
out
imul
lea
jp
and
adc
pusha
mov
sub
cwde
enter
repz
or
inc
lds
cmp
test
and
aam
iret
mov
jns
xor
push
add
popa
cmp
inc
loopne
mov
jmp
imul
aas
aas
aam
imul
cmp
or
popf
lods
(bad)
jb
jecxz
sbb
nop
aas
std
mov
push
aam
dec
sub
inc
dec
bsr
jl
fist
pop
shl
pop
cmp
adc
add
mov
sbb
inc
out
mov
jmp
sub
pusha
sbb
pop
lahf
inc
mov
xor
adc
(bad)
mov
dec
cmp
xor
shr
push
neg
xchg
repz
inc
in
mov
shr
mov
cmp
in
fwait
jp
or
inc
xchg
lds
or
mov
dec
fadd
aaa
dec
cli
(bad)
pop
test
add
xor
dec
into
or
pop
jnp
jg
jl
jb
lods
ret
cs
xor
push
gs
gs
pop
cmp
and
div
rcl
push
jp
mov
cdq
ja
pop
sbb
mov
mov
and
push
fwait
loop
dec
(bad)
xchg
jbe
xor
nop
inc
hlt
and
test
aad
xchg
loop
dec
aas
out
(bad)
sub
cmp
jmp
gs
xor
inc
cmps
dec
lds
jecxz
(bad)
out
push
into
ins
(bad)
(bad)
in
outs
xchg
in
retf
(bad)
ins
jmp
bound
js
and
pop
daa
icebp
adc
ins
and
jo
adc
adc
daa
mov
addr16
push
mov
mov
arpl
(bad)
jp
dec
lds
lock
or
outs
xchg
call
and
inc
xchg
inc
(bad)
cdq
int3
pop
gs
ror
aas
aaa
pop
outs
mov
cli
inc
or
pop
fisubr
lods
xor
inc
ja
out
mov
and
outs
dec
inc
sbb
cmps
dec
js
or
pop
daa
adc
frstor
shr
mov
in
pop
(bad)
sar
sbb
daa
frstor
imul
pop
mov
inc
cmp
and
pop
xchg
cmps
test
pop
and
pop
mov
lock
and
mov
adc
sub
xor
mov
into
mov
sub
sub
or
pop
pop
jo
xlat
jnp
sahf
mov
outs
outs
arpl
dec
xchg
iret
ret
js
cld
xlat
fs
jo
sub
idiv
mov
out
(bad)
dec
pop
fld
inc
inc
or
imul
std
ret
sub
pop
rcr
cmp
inc
push
and
dec
mov
fld1
(bad)
inc
out
cwde
call
sahf
shl
pop
scas
fstp
popf
sar
push
out
adc
out
(bad)
bound
pop
je
out
jae
nop
hlt
or
mov
adc
mov
jp
jb
dec
js
xor
cli
ins
pop
xchg
outs
mov
mov
std
xlat
push
cmps
xchg
mov
pusha
das
jge
mov
fidiv
outs
xchg
cmc
inc
push
int
inc
or
mov
daa
xchg
push
and
adc
mov
jb
mov
mov
mov
mov
ins
push
sar
les
addr16
cli
xor
or
and
(bad)
mov
xchg
stc
fdiv
movs
std
rol
sti
jb
jb
pusha
push
aam
mov
adc
inc
jg
cmps
fdiv
push
dec
rcr
inc
repnz
mov
mov
(bad)
test
mov
repnz
adc
test
inc
pop
lea
mov
out
mov
aad
(bad)
mov
es
mov
cs
repnz
pop
sbb
add
adc
xor
sar
cmps
mov
pop
out
xchg
jbe
mov
push
or
pop
mov
arpl
jns
cmp
addr16
jne
shl
dec
mov
inc
jecxz
mov
mov
retf
cmp
mov
mul
jb
sbb
xor
inc
add
(bad)
mov
or
sbb
enter
mov
xchg
xchg
inc
stos
lods
fsubr
test
(bad)
dec
retf
or
jle
mov
cmc
int3
arpl
es
pop
loop
daa
mov
rol
out
out
sub
dec
adc
mov
add
jmp
and
lds
aas
xchg
int3
leave
pop
leave
mov
or
mov
pop
fbstp
ins
lahf
adc
sub
dec
xchg
sub
pop
push
ins
iret
sub
push
rcr
adc
mov
pushf
das
scas
cwde
mov
(bad)
into
(bad)
stc
mov
daa
mov
imul
aaa
or
mov
add
fmul
fistp
jnp
daa
sub
cmps
and
outs
dec
jle
pop
push
xor
mov
adc
repz
adc
cmc
mov
int
cmp
retf
mov
or
pop
inc
dec
cmp
mov
push
jge
retf
nop
jb
add
or
add
inc
xchg
mov
pop
xchg
(bad)
adc
dec
(bad)
jo
pop
push
and
loopne
fwait
rcr
out
fld
retf
out
or
and
cmp
mov
push
shl
fidivr
test
jbe
pop
enter
fldcw
fisttp
sub
retf
adc
and
pop
cmps
adc
mov
xlat
mov
dec
(bad)
xchg
cdq
rcr
dec
stos
call
jno
or
inc
sbb
pop
popa
push
mov
and
test
iret
xchg
inc
movs
imul
jg
mov
sub
xchg
daa
test
fisttp
arpl
or
lods
mov
xor
lds
leave
call
mov
movs
jmp
dec
fmul
retf
out
dec
add
jg
xor
sub
lods
cwde
cmps
test
test
push
mov
mov
add
repnz
sbb
int3
(bad)
inc
push
xor
cmp
add
or
add
frstor
enter
mov
mov
add
mov
je
push
push
xchg
add
push
pop
(bad)
cmp
scas
xor
and
daa
dec
shl
xchg
gs
inc
inc
(bad)
and
sbb
nop
(bad)
jae
pop
stos
in
repz
or
aaa
in
adc
inc
lods
aaa
push
sbb
gs
sar
push
mov
inc
pop
or
cs
bound
cld
nop
rcl
mov
loop
fdiv
jmp
mov
scas
(bad)
ret
mov
sti
dec
not
outs
push
jmp
inc
cwde
mov
xchg
xor
mov
scas
imul
inc
rol
pop
leave
jo
lods
jg
and
std
jle
cs
jl
loop
and
or
mov
xchg
xlat
das
test
mov
imul
ins
add
pop
les
inc
xor
lods
int
mov
and
mov
scas
in
movs
(bad)
movs
xchg
imul
or
mov
in
fsubr
cld
icebp
add
pop
adc
push
data16
movs
mov
dec
fdiv
inc
repnz
xor
stos
test
and
movs
dec
dec
add
in
pop
int
fiadd
out
adc
cli
iret
aaa
push
ins
aaa
mov
(bad)
in
adc
inc
fist
dec
mov
push
and
cmps
jmp
push
fdiv
pop
out
and
pop
repnz
push
aaa
cs
ret
inc
jo
mov
mov
cmp
test
das
adc
out
pushf
mov
and
and
xor
jmp
mov
bound
xor
pop
push
in
cmc
loope
dec
cmp
mov
out
sahf
dec
nop
daa
xchg
pushf
fistp
es
sbb
mov
imul
mov
and
pop
outs
in
add
repz
add
stos
call
cs
and
loopne
cmp
nop
test
mov
adc
pop
xchg
dec
aam
call
jmp
jecxz
ret
pop
in
test
pop
sub
pop
jl
cmp
mov
out
fistp
sub
aaa
stos
out
les
xchg
loop
mov
mov
sbb
mov
jb
fstp
adc
mov
mov
movs
xor
in
dec
pop
addr16
pop
test
mov
sti
mov
sbb
in
inc
popa
fcomp
mov
mov
iret
test
cdq
and
inc
dec
inc
mov
sub
inc
adc
sub
adc
push
(bad)
shr
lock
and
xor
outs
ficomp
push
ins
push
fadd
ss
test
popa
xor
repz
jle
xor
test
fsub
inc
scas
outs
mov
in
and
shr
and
outs
sub
retf
shr
xor
sub
add
ss
sbb
test
ds
push
or
mov
cli
sub
fcom
jecxz
jecxz
fsub
add
jecxz
or
sti
out
mov
pop
jmp
cmc
aas
cwde
cmp
mov
sbb
inc
or
pop
enter
mov
sub
shl
dec
mov
in
div
je
push
mov
sub
call
or
adc
jp
xor
ja
sub
jge
and
aad
adc
das
aam
mov
mov
neg
mov
cs
or
mov
enter
push
ret
popf
cmps
jg
sub
ror
or
jmp
mov
cmps
scas
aaa
mov
jae
cmp
loope
cmps
(bad)
sub
jmp
mov
adc
mov
sbb
cmp
mov
xchg
or
push
pop
(bad)
sub
dec
stos
movs
dec
iret
inc
clc
mov
or
sbb
jae
mov
aaa
xchg
into
jns
xor
jmp
jne
dec
cli
test
ret
mov
cmp
sub
punpckhdq
iret
stos
pop
xchg
xchg
int3
int
mov
and
out
or
or
dec
lock
loope
push
loope
(bad)
imul
(bad)
cs
retf
mov
arpl
popf
mov
(bad)
fidiv
fucom
mov
mov
shr
outs
popa
imul
xor
mov
push
pusha
jmp
imul
(bad)
pop
pushf
outs
sub
and
sub
xchg
mov
in
push
and
and
jge
pop
jmp
fwait
mov
cli
cmps
push
lds
dec
call
fild
xor
mov
fistp
cmp
sub
jp
cli
lds
test
mov
inc
cwde
jno
xor
jb
and
add
add
mov
scas
or
dec
inc
movs
xor
mov
cwde
xchg
adc
pop
aad
mov
sub
daa
or
sti
fsubr
pop
inc
push
dec
sub
jns
pop
loopne
mov
cmp
dec
test
sub
jae
jnp
pop
stc
aam
in
mov
inc
call
sbb
outs
mov
(bad)
rcr
sub
daa
test
mov
lea
jb
and
ja
pop
xchg
pusha
inc
(bad)
test
mov
add
imul
cmps
fbld
mov
xor
mov
push
adc
xor
xlat
sub
mov
jne
das
leave
xor
or
mov
pop
iret
mov
xchg
xor
nop
jae
test
nop
push
inc
sbb
shl
test
mov
nop
out
dec
cli
jns
in
mov
daa
data16
mov
inc
adc
punpcklwd
and
push
sbb
mov
xchg
xchg
ja
fcomp
inc
dec
and
(bad)
xor
sbb
add
and
outs
cmps
or
or
dec
movs
xchg
add
mov
mov
retf
(bad)
pop
push
mov
rcr
dec
jl
xlat
dec
jae
mov
pushf
in
out
pop
test
test
(bad)
sub
(bad)
xor
dec
rcl
daa
ja
add
mov
mov
jmp
loop
mov
push
movs
(bad)
mov
add
scas
and
jl
push
rep
jo
fcomp
fs
test
and
add
repnz
cmp
loope
into
pop
icebp
jecxz
pop
dec
and
mov
fsqrt
jbe
movs
xlat
jns
mov
mov
ret
push
loopne
lods
div
sub
repz
movs
(bad)
mov
psubusw
pop
push
pop
js
mov
xchg
jo
inc
ret
xchg
and
fwait
out
sub
retf
dec
push
push
add
rcr
pop
sahf
loopne
rcl
pop
cmps
cli
test
std
mov
ja
dec
test
mov
scas
push
mov
mov
fsub
test
xlat
sbb
in
arpl
ja
js
ror
push
pop
(bad)
aas
mov
mov
into
jp
fild
push
and
push
retf
mov
inc
pushf
dec
jmp
jnp
(bad)
push
inc
ss
xchg
mov
sbb
xchg
lods
imul
inc
lods
(bad)
mov
sbb
inc
pop
or
out
fcomp
test
(bad)
jns
sub
mov
loop
fs
xlat
push
xchg
pop
jp
mov
idiv
pop
(bad)
lahf
mov
add
pop
pop
ins
fadd
sub
rcr
sbb
mov
les
sar
sub
cmc
jo
mov
xchg
dec
fisttp
inc
jg
fcom
out
dec
push
sbb
(bad)
cmp
cli
jb
and
lods
jno
icebp
and
test
add
jmp
mov
sub
inc
and
in
inc
add
pop
outs
(bad)
jmp
and
jnp
push
dec
xor
test
cmp
sbb
pushf
pop
push
into
cmp
cmp
out
loop
test
or
ret
pushf
inc
aad
dec
push
pop
scas
ds
fist
inc
xchg
push
and
xchg
mov
(bad)
dec
pop
jmp
lods
mov
popa
cmc
sbb
fcomp
popa
loope
pop
leave
dec
and
fisttp
das
inc
or
adc
pop
cmp
sub
xor
(bad)
in
neg
mov
xor
dec
xchg
pop
jbe
and
xchg
pop
sub
cmp
lahf
das
sub
fcmovbe
inc
arpl
or
xor
not
push
xchg
jo
not
sub
xor
push
leave
sti
mov
add
push
ret
adc
inc
stos
push
xchg
inc
push
lahf
sub
das
or
push
out
call
jl
cmps
fwait
jae
jae
xor
or
xchg
adc
inc
pop
sbb
xlat
daa
setbe
sub
mov
dec
xchg
clc
pop
iret
xchg
dec
mov
inc
or
inc
repnz
ror
lock
push
sbb
xlat
in
adc
push
mov
pop
call
(bad)
std
adc
movs
sahf
or
cwde
ja
sub
sub
xchg
in
push
push
js
dec
add
int3
in
dec
jae
or
mov
push
(bad)
popa
test
sahf
inc
mov
adc
(bad)
xchg
mov
test
(bad)
adc
pop
or
repz
mov
jbe
push
ja
adc
adc
leave
dec
push
sub
sbb
adc
mov
dec
stos
push
fcom
int3
enter
int
sbb
fild
add
test
adc
ins
dec
pop
and
xor
cmp
je
scas
xchg
pop
outs
push
loopne
cmp
jg
mov
in
shr
dec
add
adc
adc
or
rol
shl
cmp
fistp
enter
call
push
dec
or
sbb
or
pop
leave
push
psubd
dec
stos
pop
cmps
mov
or
(bad)
mov
or
dec
inc
mov
scas
cmps
fadd
ret
test
jl
(bad)
in
inc
int3
(bad)
dec
dec
xchg
xchg
test
ror
in
inc
ret
rcl
cli
ror
mov
stos
xchg
test
(bad)
lahf
movs
sub
pop
pop
pop
and
(bad)
jge
mov
xor
cmp
xrelease
add
mov
jge
jmp
inc
lock
inc
push
popa
pop
test
and
test
cmp
cli
cmc
push
nop
inc
addr16
sub
mov
lahf
dec
je
mov
outs
adc
mov
xchg
or
loop
cmps
(bad)
push
mov
add
sbb
loopne
leave
and
iret
icebp
fsubr
add
sahf
movs
push
orps
loopne
adc
or
adc
popf
mov
add
jno
sub
fisttp
enter
cmp
cmp
std
ins
jbe
imul
stos
inc
fisubr
mov
cmc
pop
jns
ss
out
clc
arpl
push
pop
(bad)
mov
jge
mov
jnp
outs
addr16
dec
dec
mov
cmc
inc
pop
retf
mov
addr16
push
and
bound
xchg
sahf
(bad)
mov
sbb
scas
(bad)
push
and
inc
das
mov
into
aad
std
fnstenvw
dec
jno
shl
dec
(bad)
add
inc
jmp
sbb
mov
sar
ja
fisttp
push
sbb
movs
sbb
pop
(bad)
mov
push
xor
sar
out
fsubr
adc
xor
jmp
aas
dec
mov
int
mov
fwait
jnp
ja
cli
cmp
fwait
int3
cmp
rcl
outs
push
int3
and
jge
rol
stos
ins
and
(bad)
cdq
jp
mov
sub
adc
fadd
sub
jnp
pop
data16
mov
iret
add
imul
adc
pop
iret
xchg
fcom
push
in
js
in
cli
push
jmp
pop
mov
sbb
xchg
leave
push
inc
push
dec
loope
mov
jo
call
push
and
shl
adc
js
fimul
xor
xor
pusha
xor
mov
daa
add
daa
(bad)
retf
jle
mov
cmp
and
mov
xchg
leave
pop
mov
mov
mov
inc
scas
push
(bad)
sbb
hlt
jmp
or
adc
in
jo
adc
cmp
add
in
div
jmp
fisttp
out
mov
lea
lods
cmps
mov
vsubsd
pop
leave
push
dec
or
sub
cdq
repz
movs
dec
(bad)
push
or
pop
imul
imul
cld
nop
(bad)
(bad)
mov
out
cmp
imul
out
mov
cdq
in
ss
or
dec
mov
mov
fcmovnb
mov
xchg
xor
popf
mov
xchg
fcom
pop
push
popf
adc
xchg
cmps
shr
jmp
pop
pop
imul
lahf
mov
inc
jmp
jle
jmp
hlt
adc
add
test
(bad)
fsub
retf
push
mov
jl
sub
nop
inc
mov
xchg
push
repz
cmp
data16
inc
xor
mov
mov
add
cmp
into
aas
pop
pop
pop
stos
cmc
xor
pop
xor
mov
or
popf
stos
dec
fst
cmp
mov
xor
cmp
mov
mov
sub
imul
test
xlat
mov
fidivr
(bad)
test
mov
cmp
dec
test
jge
mov
ins
add
add
mov
pop
(bad)
inc
pop
mov
out
pop
adc
idiv
or
xchg
rcr
xchg
call
stos
hlt
push
cmp
test
popf
adc
outs
fnstenv
popa
add
jo
or
sahf
movs
hlt
mov
pop
out
push
ret
pushf
fimul
pop
stc
mov
or
je
mov
in
cwde
div
pop
inc
mov
mov
xchg
mov
jo
mov
loop
ret
cmps
imul
cli
arpl
xchg
mov
pop
xchg
lods
adc
push
ja
cmp
retf
test
or
mov
cmps
and
test
adc
lods
sub
cmp
loope
push
xor
mov
inc
stc
ss
call
out
add
sbb
aas
ret
outs
(bad)
cld
and
push
pop
fwait
movs
mov
jb
pop
sbb
test
adc
mov
in
cwde
pop
and
in
out
pop
mov
jns
inc
sbb
xor
fs
add
retf
xchg
inc
jbe
xchg
push
movs
jno
rol
in
fdivr
pop
xchg
frstor
push
out
and
data16
sbb
sbb
pop
xchg
fdivr
sbb
pop
inc
or
fcom
mov
sub
cwde
xchg
pusha
fabs
pop
mov
popf
add
iret
cmps
mov
das
xchg
fisubr
push
imul
(bad)
out
cmc
xchg
pop
pop
mov
call
adc
mov
sbb
movs
xchg
jbe
jge
test
push
pop
jns
sbb
push
ss
fistp
push
sbb
xchg
cmp
sti
or
mov
add
test
add
outs
xor
adc
mov
pop
out
sub
push
push
and
dec
cmp
inc
mov
or
stc
lods
xor
lea
sbb
out
sbb
mov
or
inc
movs
stos
lods
test
jae
and
xor
repz
int3
mov
jl
popf
repz
scas
ret
push
aam
aam
mov
mov
xchg
icebp
sbb
cld
xchg
mov
jmp
pop
popf
retf
mov
xchg
fwait
jnp
jne
mov
retf
ret
inc
and
dec
retf
hlt
and
xchg
je
fs
push
loope
inc
inc
mov
cmp
add
pusha
push
out
cmp
fist
aas
xchg
fmulp
outs
sbb
jmp
fst
adc
mov
sti
popa
aam
out
shl
pushf
fstp
cwde
xor
rcr
cmp
nop
sbb
sbb
jbe
(bad)
jp
mov
push
adc
dec
or
cmc
push
popf
mov
adc
iret
hlt
pop
jle
cmps
mov
lods
dec
push
xchg
and
add
retf
push
fstp
jp
sti
cmp
or
xchg
addr16
or
xchg
fistp
xchg
arpl
lods
pop
scas
jmp
add
jo
or
adc
and
or
imul
stc
cli
ins
leave
fsubr
pop
cld
(bad)
addr16
jno
mov
fld
ins
dec
pop
into
and
jecxz
jo
loop
std
push
or
inc
aad
push
and
adc
jmp
repz
dec
mov
fisttp
mov
test
cmps
xchg
test
or
jae
mov
pop
mov
mov
or
sahf
cmp
inc
xor
sub
add
sar
(bad)
loopne
mov
jb
xor
mov
and
and
sbb
cmp
sub
ret
xor
lods
ud0
push
retf
push
scas
push
inc
or
xor
adc
jns
stos
jne
xchg
jmp
popf
dec
lods
and
sub
ins
xchg
and
bswap
and
out
mov
sbb
test
and
or
sub
test
adc
mov
pop
dec
mov
fidiv
ror
add
inc
shl
xchg
imul
(bad)
ds
cwde
mov
ror
out
cmp
leave
ins
and
and
dec
xchg
add
hlt
(bad)
xor
mov
es
xor
mov
add
mov
ficomp
inc
inc
out
lock
jmp
pop
rcr
mov
sub
push
dec
add
retf
icebp
xchg
pop
dec
jmp
into
push
mov
fistp
mov
and
pushf
sbb
push
test
jg
jbe
dec
hlt
les
lahf
retf
mov
mov
daa
pusha
mov
push
jo
cmp
adc
fwait
sar
out
sbb
hlt
push
sub
jnp
jmp
xlat
mov
jo
movs
inc
cs
cmps
mov
cmova
js
fimul
ds
cmp
jns
mov
jle
gs
add
xchg
icebp
cmps
jae
out
test
jp
dec
mov
fwait
inc
les
mov
in
xchg
(bad)
xchg
and
or
addr16
or
mov
mov
adc
push
jbe
ret
lahf
scas
pop
add
mov
pop
pop
sub
xchg
dec
xchg
mov
jno
pop
push
cs
sub
scas
sahf
ud1
mov
mov
addr16
sahf
xor
enter
cmps
inc
fcmovb
dec
retf
out
fsubr
lds
mov
mov
test
es
sar
push
adc
iret
cmp
out
inc
(bad)
fmul
leave
push
rol
test
inc
sub
sub
les
(bad)
scas
inc
dec
xchg
jmp
jnp
(bad)
imul
aam
and
fmul
adc
and
popa
outs
in
loope
cmps
add
cli
mov
inc
jne
push
cmp
scas
cmp
jnp
in
and
add
stos
mov
inc
nop
and
fiadd
lds
aaa
pop
mov
add
mov
push
fisubr
push
pop
iret
jg
clc
(bad)
xchg
lahf
mov
xchg
popf
ins
int
dec
xchg
neg
push
push
ror
push
sar
enter
fwait
cmps
daa
push
movs
enter
adc
add
cmp
pop
mov
mov
test
shl
inc
mov
data16
mov
fsub
cmp
mov
test
int3
lods
cwde
sar
push
jle
jge
(bad)
inc
mov
(bad)
das
push
push
xlat
jnp
push
jae
jmp
fwait
sub
xchg
mov
sbb
jmp
enter
adc
stos
mov
and
arpl
mov
pop
std
scas
fs
jnp
add
dec
iret
ins
sbb
xchg
stc
mov
push
add
mov
aas
shl
and
mov
lods
int3
cmp
jmp
xor
pusha
push
sti
push
mov
mov
les
aaa
push
outs
sbb
push
sub
std
ss
(bad)
lods
sbb
mov
xchg
mov
xchg
xchg
movs
fs
imul
mov
inc
or
aam
call
sahf
sbb
cmps
mov
dec
rcl
dec
pop
push
pop
stos
cmps
imul
in
ins
or
retf
push
dec
push
push
in
fisub
mov
jns
dec
xchg
jo
in
push
js
mov
aaa
popa
dec
dec
or
cmpxchg
lock
adc
mov
iret
jg
cmp
dec
arpl
push
(bad)
fiadd
das
movups
sub
or
out
fild
mov
cmp
pop
mov
hlt
and
mov
mov
mov
adc
sar
(bad)
clc
je
jb
enter
adc
push
inc
pop
shl
fild
jmp
fdivr
call
pushf
xor
sub
jb
sahf
dec
inc
dec
jge
mov
retf
jnp
mov
sahf
xchg
mov
push
or
out
pop
jae
add
jecxz
or
je
dec
jae
jp
adc
icebp
cmp
jmp
and
or
sar
icebp
ss
sbb
pop
popf
add
mov
pop
sbb
jp
pop
xchg
jae
test
rol
lods
sahf
nop
jle
adc
js
adc
je
mov
push
mov
leave
jbe
and
mov
fbld
stc
cmc
inc
aas
outs
or
aad
and
sub
(bad)
dec
dec
dec
test
inc
pop
push
mov
or
int3
enter
pusha
pop
and
aaa
test
cs
xchg
cmp
ss
(bad)
adc
je
add
retf
push
mov
retf
dec
les
sbb
push
hlt
mov
jae
mov
fninit
pop
repz
cmp
mov
lods
sub
test
xchg
cdq
pop
dec
or
inc
jne
mov
loope
cmp
xchg
cwde
push
add
fwait
stos
sti
push
or
loope
push
jmp
jecxz
fidiv
repnz
adc
inc
cs
mov
inc
jmp
inc
test
outs
call
jge
add
mov
jns
movs
adc
cmc
pop
adc
pop
sti
xchg
pushf
inc
and
xlat
pop
loop
cmps
fild
aam
xchg
adc
out
push
ds
mov
sub
fchs
mov
add
mov
xor
add
push
sub
push
adc
rcr
adc
das
jecxz
push
mov
xchg
es
xor
daa
xor
test
sub
jmp
cdq
aaa
jmp
xchg
inc
xchg
sbb
ret
in
in
rol
mov
add
mov
cmps
hlt
daa
(bad)
in
xchg
in
ds
out
adc
rol
inc
cmp
pushf
jno
fwait
xor
stos
aaa
aad
push
mov
jb
jl
out
pop
(bad)
shl
sbb
sbb
mov
xor
sbb
or
adc
pop
repnz
js
jns
sahf
cli
sbb
aam
add
jp
jle
fdivr
stos
jne
pop
pop
(bad)
mov
mov
sbb
ror
xchg
fdiv
cmc
push
cwde
bound
(bad)
sti
(bad)
xor
inc
loope
sub
out
jl
mov
loope
mov
sbb
cdq
stos
mov
cli
mov
dec
inc
or
retf
push
sub
fisttp
xor
call
in
test
shl
retf
push
xor
mov
cwde
jmp
dec
push
stc
mov
aaa
into
test
pop
mov
sub
repz
rol
cmps
mov
popa
cmp
push
mov
sbb
dec
loope
fiadd
dec
inc
jae
jl
clc
pop
popa
fnstcw
sbb
aad
sti
int3
dec
pop
sbb
mov
je
mov
inc
setb
dec
xchg
es
iret
dec
cmps
repnz
fsubr
or
in
dec
xchg
cmp
movs
adc
hlt
or
js
and
(bad)
addr16
pop
pop
and
xchg
sahf
adc
adc
or
push
inc
cld
add
pop
daa
xor
push
xor
xor
mov
add
lds
pop
mov
mov
mov
lds
daa
inc
cmp
jmp
pop
push
shl
lahf
adc
fisub
ss
in
xchg
jl
push
mov
sub
into
inc
jmp
and
setg
cmps
cmp
fnstsw
dec
cmp
jmp
push
pop
sub
aam
cmp
xor
cmp
arpl
dec
cmp
cmps
data16
xchg
rcl
sub
xchg
mov
mov
loope
sbb
inc
adc
retf
and
adc
outs
xchg
or
les
jmp
fwait
inc
sbb
out
xchg
hlt
xchg
pop
jne
stc
into
and
cmps
mov
lds
inc
push
mov
test
sbb
sub
fild
test
scas
mov
sti
ja
push
(bad)
jge
xor
jl
dec
inc
sub
dec
and
mov
iret
lods
sub
and
in
jno
jge
ss
sub
xchg
cli
adc
sub
xchg
sbb
test
cld
aas
sbb
in
stos
mov
push
aam
sub
out
or
bound
retf
jae
mov
pop
cmp
out
scas
sar
dec
int3
ins
(bad)
and
jb
(bad)
jne
les
cmp
inc
xor
xor
out
cmp
fmul
frstor
push
lods
ja
jecxz
sbb
push
cwde
fisttp
pop
inc
leave
stc
xchg
xchg
jmp
xor
rcr
mov
rcr
or
popf
test
mov
sbb
mov
mov
sbb
mov
mov
icebp
pop
pop
call
in
dec
ja
xor
push
xor
push
pop
icebp
dec
mov
in
outs
jmp
inc
call
or
ds
push
pop
scas
cs
mov
addr16
and
retf
call
cmps
push
mov
inc
dec
enter
xor
lods
jmp
or
xchg
cs
movs
push
pushf
xchg
jne
ficom
repnz
clc
xor
cmp
loopne
pop
mov
movs
shl
(bad)
add
fsub
jp
mov
add
sub
jmp
sbb
sub
cdq
call
loopne
xor
es
imul
cmp
jnp
fidiv
mov
cli
jmp
ret
and
mov
dec
xchg
(bad)
mov
ja
cmp
inc
int3
cdq
xor
sub
test
xor
retf
dec
sub
mov
loop
lahf
jns
std
adc
adc
mov
mov
sbb
inc
jmp
add
test
inc
fcom
adc
aad
ror
(bad)
shl
add
xor
test
lods
pop
inc
xor
faddp
fld
xor
pop
lea
sub
mov
in
daa
ss
sar
xor
dec
add
add
leave
adc
add
xor
imul
xchg
cmp
iret
sbb
jle
xor
fstp
test
enter
adc
mov
push
sbb
loop
mov
es
dec
mov
add
in
repz
jbe
retf
int
add
push
add
mov
sbb
add
cld
inc
mov
dec
(bad)
cld
push
dec
cli
test
cdq
jb
cmp
dec
popf
push
xchg
inc
xchg
xor
mov
xor
sub
push
(bad)
in
(bad)
out
and
stos
fnstenv
loopne
fimul
jg
movs
test
in
loope
xor
mov
out
cmps
cmp
mov
jo
and
ins
lds
push
jae
dec
push
sti
mov
cmps
dec
adc
loop
push
mov
inc
jns
les
mov
xor
dec
xchg
dec
out
pop
and
mov
pop
(bad)
scas
inc
push
sub
mov
push
dec
lods
rol
mov
jmp
loope
stos
scas
inc
stos
inc
or
and
mov
in
gs
ins
in
or
cmp
int
sbb
pop
out
popa
test
mov
gs
xor
hlt
mov
and
fcom
aam
shl
scas
xor
rcr
rcl
cmp
fst
push
out
push
mov
inc
cmp
xchg
(bad)
sti
rol
cmp
jmp
ss
outs
mov
nop
sbb
xor
add
inc
add
mov
out
xrelease
(bad)
cs
(bad)
repnz
fwait
out
loop
dec
mov
aad
add
push
enter
pop
and
add
push
cmps
int
sub
popf
bound
test
sbb
aaa
mov
sbb
cli
and
(bad)
retf
dec
out
pusha
or
sbb
or
(bad)
jg
and
and
je
dec
out
mov
pop
sub
cmp
hlt
fs
mov
add
outs
ins
call
cmp
out
or
adc
cs
cmc
dec
sub
sbb
push
mov
sar
imul
adc
in
xchg
pop
adc
jae
jmp
pop
(bad)
jns
add
jno
dec
daa
and
pop
xchg
aam
xor
jge
imul
mov
je
gs
mov
xchg
pop
mov
ins
and
sub
shl
push
dec
sbb
jb
(bad)
call
sub
leave
and
push
imul
sub
pop
fwait
repnz
mov
aas
pop
daa
je
out
mov
xor
cmp
mov
mov
repnz
sub
mov
jecxz
cmp
hlt
mov
xchg
ret
stos
sub
retf
jno
xor
add
jmp
add
mov
jne
lea
call
mov
mov
adc
xor
lahf
or
lea
aad
push
xchg
fisttp
icebp
cmp
mov
in
in
repnz
pop
add
repz
aam
sub
outs
push
push
lahf
(bad)
into
and
ror
hlt
retf
inc
loop
pop
jbe
(bad)
imul
pop
adc
test
xchg
scas
adc
mov
cs
jb
mov
inc
or
iret
mov
add
mov
mov
in
lds
fnstenv
in
dec
retf
das
mov
jle
add
jg
sub
and
push
jmp
stos
sbb
mov
dec
xchg
mov
sub
sub
loopne
lock
rcl
mov
lock
pop
or
lds
mov
mov
pop
outs
and
pop
inc
addr16
push
push
(bad)
fcomp
lds
cwde
sbb
sbb
mov
and
ss
cmps
mov
pop
and
scas
fxch
hlt
pop
push
shr
mov
add
mov
pop
pop
in
fild
dec
mov
pushf
cmp
cmp
and
xchg
imul
sub
test
push
cmp
mov
fldenv
pop
mov
(bad)
sbb
inc
popa
dec
xor
ins
mov
les
xchg
jl
sbb
pop
dec
sbb
mov
sbb
sbb
mov
(bad)
ret
(bad)
cmp
cmc
sbb
pop
push
ficomp
pop
xchg
dec
inc
and
mov
(bad)
popf
ret
dec
cmp
outs
mov
in
mov
lods
jl
mov
fwait
and
inc
dec
lock
xchg
fdiv
or
imul
add
shl
dec
push
pop
retf
and
sub
int
sub
push
adc
fdivr
pushf
xchg
stos
dec
pop
pop
jp
add
cmp
inc
inc
pusha
xor
retf
lods
out
(bad)
ja
nop
rol
push
or
mov
mov
out
xchg
retf
pop
pusha
js
sbb
and
bound
(bad)
(bad)
push
xor
out
xor
cmp
xchg
hlt
inc
(bad)
cmp
inc
stc
scas
repz
shl
shl
test
push
xchg
scas
mov
dec
mov
add
enter
loopne
dec
xor
icebp
mov
push
or
pop
cld
repz
es
popa
xchg
sub
sub
push
add
push
sti
lods
pusha
inc
mov
test
loope
add
fisubr
ins
sub
or
jne
xor
pop
sub
scas
paddusb
ins
(bad)
retf
retf
inc
adc
or
mov
mov
fsubr
and
mov
mov
dec
jmp
inc
mov
loope
leave
setl
movs
push
iret
aaa
out
popa
nop
out
mov
xor
add
or
jge
lds
dec
or
std
(bad)
das
or
sbb
je
sub
jne
call
cs
stc
test
xlat
inc
aam
shl
jmp
or
xchg
jae
lods
mov
push
int
mov
pop
fisttp
inc
push
aad
xlat
jo
ins
cli
jb
add
pop
and
adc
shr
xchg
pop
pop
(bad)
mov
not
aas
sbb
adc
jge
cmp
xchg
or
movs
jl
into
enter
aaa
mov
mov
cmc
ds
retf
dec
data16
rcl
(bad)
mov
and
ins
scas
adc
pusha
mov
ret
or
enter
adc
nop
mov
repnz
push
aad
aas
or
cli
xchg
inc
mov
adc
clc
fstp
mov
and
inc
dec
mov
rcl
mov
mov
mov
out
std
sbb
ja
push
cmp
mov
add
jg
jmp
loop
sahf
mov
dec
imul
sub
or
add
cdq
xor
out
js
or
mov
fnstenv
data16
push
ret
inc
sbb
jge
lds
psrlq
ret
mov
stc
rcl
pushf
pop
xor
in
mov
outs
push
sbb
mov
cli
push
xchg
sbb
call
clc
pop
adc
movs
push
mov
jnp
out
imul
jecxz
and
fstp
mul
sub
ror
mov
xor
mov
hlt
jns
mov
scas
fs
pop
ss
pop
test
xchg
and
lahf
fwait
icebp
sbb
mov
ret
add
daa
push
bnd
xchg
mov
jns
jnp
jge
xor
dec
sbb
movs
mov
enter
push
lods
cmp
in
ret
jne
push
push
dec
daa
outs
sub
mov
enter
ins
jmp
fdiv
cmp
xchg
fiadd
sbb
lea
adc
imul
retf
mov
mov
rcr
jmp
mov
nop
mov
or
jmp
fisubr
fld
cdq
in
loopne
xchg
mov
xor
in
xchg
addr16
jmp
push
ja
popf
add
pop
dec
push
mov
enter
movs
cmp
out
mov
xchg
ds
mov
test
fadd
sub
clc
mov
cwde
cmp
add
xor
xchg
push
in
and
xchg
movs
(bad)
sti
in
add
jmp
movs
fnstcw
mov
ror
lds
sbb
les
pusha
and
cld
loop
sbb
xchg
enter
mov
xchg
add
mov
and
fidivr
lea
push
inc
stos
xchg
cli
xor
mov
xchg
sbb
jmp
out
movs
cmps
ins
leave
jne
xchg
leave
and
sub
mov
fnsave
icebp
(bad)
cs
rol
cs
or
sub
je
xor
repnz
iret
movs
lds
aad
imul
hlt
mov
mov
mov
test
add
adc
repz
push
push
jg
sbb
loope
sahf
add
xor
xchg
mov
cmp
dec
mov
add
inc
jns
stos
cmps
mov
add
aas
sub
fcomp
mov
jns
cdq
jmp
pop
jl
and
in
adc
movs
(bad)
mov
outs
adc
imul
mov
add
xchg
and
xor
pop
inc
add
xchg
imul
pop
ret
jle
stc
sbb
push
into
push
push
inc
or
mov
btr
inc
cmc
inc
sub
cmp
sub
mov
inc
inc
mov
push
inc
inc
movs
dec
and
jmp
sub
aam
adc
sahf
loope
inc
dec
inc
aad
mov
sar
push
inc
xor
int
mov
pusha
xchg
repnz
mov
cmps
jl
imul
mov
(bad)
sbb
sbb
mov
pop
lock
jnp
fld
mov
sub
pop
ds
jo
mov
imul
(bad)
jo
and
jmp
fsubr
sti
ror
daa
ret
aas
retf
dec
and
pushfw
sbb
movs
push
aam
dec
cli
sub
das
add
dec
pop
daa
and
add
leave
call
jge
jbe
ja
xor
mov
outs
jb
shl
or
push
pop
adc
retf
jmp
lods
stc
clc
xchg
test
pop
jnp
test
jb
adc
pop
shr
push
in
scas
movs
jns
loopne
adc
and
or
xlat
bound
inc
addr16
dec
rcr
lock
dec
and
and
and
cli
shl
push
rol
(bad)
js
mov
sub
retf
push
pop
cmp
and
mov
pop
call
mov
js
(bad)
adc
cli
mov
inc
imul
inc
icebp
fidivr
adc
dec
xor
dec
inc
inc
jecxz
js
or
cmovo
xchg
add
(bad)
mov
jecxz
adc
mov
lds
out
cmc
(bad)
sub
pop
xlat
push
out
sub
add
push
jb
pop
outs
mov
(bad)
jno
mov
loopne
fistp
xor
lods
sahf
ret
out
sub
outs
mov
cmp
pushf
jg
xchg
jp
lds
push
mov
jecxz
inc
cmp
lods
retf
add
gs
fucomp
cmp
scas
sub
lock
xchg
dec
ins
xor
mov
stos
in
mov
cmp
mov
push
retf
xor
xchg
adc
mov
lods
loope
ins
test
loope
ins
cdq
mov
loopne
add
stc
shl
sahf
jbe
mov
push
sbb
ds
clc
mov
jg
sub
mov
add
pop
push
ficomp
mov
stos
push
pop
sbb
push
mov
cld
inc
sub
inc
vpunpckhbw
xor
mov
inc
jbe
mov
fisub
mov
and
call
(bad)
pop
mov
or
pop
aaa
cmp
push
push
out
xchg
mov
sub
xchg
mov
adc
ret
fadd
retf
adc
lods
inc
leave
ins
sbb
stc
lahf
hlt
xor
into
stos
cmc
shl
and
xchg
sbb
cdq
jb
dec
ret
js
sbb
xchg
push
mov
ins
stc
aam
mov
jne
jb
(bad)
scas
and
fmul
or
aad
scas
loop
std
adc
mov
inc
gs
mov
or
pop
pop
dec
fisttp
fwait
dec
ss
es
sbb
mov
mov
mov
mov
mov
jecxz
aas
cmps
dec
icebp
cmp
add
push
jae
in
outs
imul
push
or
frstor
ret
fcom
ja
jne
cmp
or
fwait
jmp
xor
push
push
push
ins
mov
lods
imul
retf
enter
dec
pop
xchg
pop
xchg
xchg
pop
dec
jne
test
outs
rcl
jg
mov
fimul
lea
pushf
cmc
bound
sub
inc
lahf
movs
dec
arpl
dec
cmps
xchg
mov
scas
scas
movs
mov
mov
dec
inc
mov
mov
jmp
fucomp
outs
jns
jge
lds
imul
clc
and
xchg
adc
inc
push
add
neg
dec
pop
repnz
jnp
cli
and
jmp
cwde
sbb
in
push
dec
jmp
or
xor
das
cmp
and
stos
and
(bad)
stos
stc
xor
setg
fldenv
jno
inc
ror
leave
push
mov
jb
cmps
clc
arpl
call
cli
add
lds
pop
jno
mov
inc
lahf
les
add
push
(bad)
jmp
xchg
inc
push
pop
adc
fisttp
into
cmp
out
jmp
fst
movs
sub
push
or
cmc
pop
push
into
xchg
mov
add
pop
cdq
repnz
retf
int3
into
sub
sub
inc
mov
std
add
mov
call
dec
lahf
cmp
add
xchg
dec
test
jle
ds
dec
jg
ror
or
pop
(bad)
loop
sbb
aad
es
sbb
sbb
popa
fwait
mov
inc
mov
push
add
outs
mov
pop
ret
push
mov
mov
or
icebp
fidiv
xchg
popf
gs
pop
es
aaa
mov
add
dec
ret
test
and
(bad)
popa
sbb
cs
mov
mov
js
movs
sbb
jmp
push
or
xchg
cmp
clc
mov
pop
pushf
inc
lahf
int3
mov
hlt
and
push
jl
lahf
arpl
and
ret
(bad)
mov
rcr
scas
pop
test
xor
cmps
push
push
mov
or
xor
ret
int3
fadd
gs
mov
lods
sahf
push
mov
add
pop
xchg
mov
pusha
or
lds
scas
aam
and
xor
add
mov
cli
(bad)
clc
shl
loope
lahf
cmps
cmp
imul
cs
lahf
mov
xor
adc
or
jecxz
rcr
test
sub
xchg
adc
inc
push
js
and
test
adc
xlat
xor
and
mov
aaa
sub
scas
jno
fistp
repz
imul
sub
call
and
dec
rcr
rcr
fistp
call
shr
push
and
xor
div
xchg
test
rcr
adc
xlat
outs
pop
inc
pop
or
sbb
iret
jmp
dec
jno
scas
mov
and
(bad)
loopne
cs
test
es
cdq
pop
mov
pop
inc
aaa
lods
jl
cli
dec
fnstsw
sbb
nop
push
jbe
ins
sub
jnp
out
dec
sbb
cli
std
sahf
out
imul
mov
mov
sub
xchg
xor
test
movs
jmp
or
stos
inc
and
mov
or
push
lock
xor
pop
scas
mov
push
xchg
push
imul
mov
cmp
cmp
mov
pop
xchg
int
ss
scas
pop
cli
inc
mov
xadd
dec
retf
adc
leave
jmp
pop
and
inc
scas
aam
cmc
inc
int
test
inc
mov
sbb
adc
dec
dec
pop
xor
mov
adc
push
adc
xor
mov
out
and
inc
into
sbb
div
sbb
shl
push
test
outs
ss
in
inc
lods
das
xor
xchg
rol
ins
jl
fbstp
mov
out
lods
lods
xlat
xchg
out
retf
add
pop
cmp
das
mov
xchg
icebp
inc
stc
jo
cld
ss
retf
rcr
les
or
cmp
xor
inc
fwait
or
lock
bound
or
loopne
pop
mov
xchg
adc
add
es
mov
add
ins
pop
adc
add
or
nop
pop
mov
scas
imul
xor
outs
xchg
sbb
or
inc
xchg
(bad)
adc
push
jge
mov
out
mov
(bad)
inc
stos
sbb
push
mov
sbb
test
shl
bound
add
and
repz
sbb
shl
jns
xchg
lods
sbb
repz
jmp
pop
cmp
rcl
adc
and
sub
ret
mov
xchg
adc
mov
sub
loope
in
dec
xchg
xor
mov
mov
jo
add
mov
mov
cmp
daa
pop
scas
adc
add
sbb
cmps
rcr
mov
cmp
push
out
mov
mov
sti
popa
cmc
enter
sub
add
ss
sbb
call
adc
mov
ins
xlat
adc
sub
push
sar
sbb
jge
es
pop
daa
mov
popa
and
out
inc
test
inc
loopne
das
cmps
int3
data16
stc
sub
push
add
or
stc
pop
inc
out
movs
in
not
pop
stos
xchg
xor
mov
addr16
mov
rol
pop
aam
jg
xchg
retf
mov
adc
pop
mov
bound
retf
retf
xlat
jp
cmp
inc
les
fcmovnb
sbb
mov
or
push
or
clc
xor
adc
sub
push
shl
out
or
xchg
scas
push
sub
jne
dec
and
push
addr16
xchg
fs
in
jne
lods
rol
out
inc
add
pop
cmps
or
adc
mov
in
lds
in
ins
in
stos
iret
add
jno
mov
das
push
mov
out
push
(bad)
inc
(bad)
cmp
dec
imul
pop
jg
das
(bad)
fcomp
nop
cwde
addr16
xchg
into
pop
sqrtps
pop
repz
test
mov
sub
push
rol
cmps
cdq
sbb
sub
bound
inc
out
test
test
rcr
inc
fidivr
enter
ret
lods
cmp
inc
jnp
out
xlat
pop
in
div
adc
mov
push
mov
cmp
jl
jo
add
xchg
and
sbb
adc
(bad)
mov
inc
stos
arpl
mov
ret
mov
mov
mov
mov
dec
xchg
add
outs
call
pop
mov
cmp
das
push
repnz
mov
aad
fadd
cmp
jb
cs
shl
(bad)
in
mov
aad
les
mov
dec
jge
pusha
sub
or
rcr
cld
jns
push
mov
repz
cmps
loopne
ja
xchg
inc
mov
es
or
dec
mov
push
ins
jb
sbb
adc
imul
pop
jecxz
inc
and
inc
xchg
sar
pusha
push
jne
outs
(bad)
shl
xchg
out
mov
xor
add
(bad)
addr16
jbe
or
test
ss
fadd
and
aas
in
scas
cmp
pop
fsubr
push
add
adc
ds
adc
aaa
pop
icebp
pushf
aam
imul
inc
clc
push
and
sub
or
daa
jns
jmp
int
call
adc
pop
fs
(bad)
push
and
ja
xor
ins
iret
jmp
cmp
(bad)
out
adc
mov
ins
cmp
nop
pop
hlt
cwde
cmc
mov
mov
je
xchg
push
xchg
call
xor
neg
fidivr
sbb
arpl
sub
scas
push
dec
inc
add
mov
call
sahf
test
inc
fistp
add
sbb
or
or
mov
shl
pop
mov
fcom
cli
ret
fs
out
sub
mov
xor
cs
mov
(bad)
push
sub
push
xchg
(bad)
jecxz
jp
cwde
inc
(bad)
pop
pop
xchg
mov
jo
stos
pop
adc
loopne
jns
mov
or
aad
jge
cmp
fst
mov
adc
stc
in
nop
mov
jbe
xor
mov
sbb
sub
cmp
and
retf
jl
adc
fs
mov
ret
xchg
xor
and
outs
dec
mov
mov
pop
sbb
es
mov
xor
pop
jmp
mov
and
sar
rol
or
xchg
outs
dec
sbb
pop
enter
pop
div
(bad)
mov
inc
and
sbb
enter
popa
mov
jle
sbb
imul
out
dec
sub
inc
retf
pop
jg
xor
mov
lods
(bad)
and
(bad)
gs
inc
lea
inc
data16
scas
repnz
and
pop
out
rol
imul
mov
cmp
inc
test
fistp
jo
jnp
dec
mov
aam
in
mov
adc
aam
mov
leave
sbb
inc
lds
push
lahf
pmaddwd
or
push
je
or
dec
fimul
dec
ss
add
pushf
pushf
mov
shr
inc
shr
mov
push
(bad)
fdivr
jns
in
ficom
jns
test
(bad)
jmp
or
pop
outs
mov
adc
fnstcw
pop
arpl
pushf
ss
or
ret
dec
int
lods
inc
inc
push
aaa
jae
pop
pop
and
xchg
push
and
stos
mov
mov
and
xchg
pop
cmps
pop
xchg
ins
sub
ja
push
sbb
adc
or
add
(bad)
ins
or
mov
mov
and
inc
rcl
jae
(bad)
cmc
cmp
mov
into
jge
gs
sub
mul
std
jb
ret
rep
xchg
out
rol
jns
loopne
popf
xchg
imul
push
ja
stos
mov
arpl
icebp
int3
ret
ins
arpl
xchg
mov
pusha
xor
wrmsr
mov
and
dec
inc
sub
jmp
or
les
cdq
repnz
nop
(bad)
mov
push
sbb
adc
or
aad
icebp
ss
xchg
dec
(bad)
or
or
jno
popf
std
fisubr
das
push
inc
sub
sub
add
inc
inc
loop
out
ror
icebp
jl
xchg
int
jmp
mov
mov
pop
jns
xchg
inc
lds
test
imul
mov
repnz
(bad)
out
test
jo
mov
cmp
push
add
ds
cmps
add
sub
lock
push
sbb
pop
outs
inc
xchg
hlt
dec
shl
test
rcr
push
sti
pop
push
mov
sbb
(bad)
pop
and
jo
and
sbb
jecxz
(bad)
mov
push
dec
or
or
cmp
int
cmp
inc
jmp
addr16
cli
jle
ins
out
dec
in
add
int3
out
movs
fcomp
js
add
adc
(bad)
jbe
adc
pop
mov
(bad)
and
pop
and
in
mov
scas
xchg
clc
aas
mov
jecxz
popa
pusha
push
cmp
or
aam
(bad)
in
mov
mov
cwde
xchg
mov
mov
mov
addr16
mov
mov
shr
mov
jnp
test
or
push
sbb
add
inc
add
ret
ins
jmp
cmp
fcom
movs
sub
aas
(bad)
retf
loopne
addr16
and
add
push
jnp
icebp
sahf
mov
xchg
pop
sub
je
pushf
push
ret
mov
cmps
sub
xchg
fdivr
mov
xor
scas
add
dec
and
mov
jne
xchg
dec
cmp
lods
and
lea
dec
pop
cwde
vandps
mov
(bad)
pop
pushf
lods
cmps
inc
pop
push
push
rcl
iret
lock
dec
mov
mov
jno
out
aam
mov
das
or
data16
sub
dec
and
sbb
adc
lea
xchg
jmp
mov
outs
pop
in
jb
mov
shr
test
jmp
ret
mov
mov
ret
es
cs
out
scas
call
jmp
push
pop
mov
inc
push
repnz
mov
or
cmc
mov
ds
mov
inc
pop
push
mov
jl
add
out
outs
jmp
sub
fadd
jno
sar
ins
and
push
mov
xor
stc
push
mov
test
les
sub
mov
repz
popa
jg
popf
push
fwait
ret
sub
push
cmps
out
pushf
push
(bad)
arpl
mov
push
dec
shl
jb
sub
pop
mov
push
mov
mov
push
adc
ret
(bad)
dec
out
cmc
(bad)
push
or
gs
gs
add
mov
jge
aaa
lods
out
pop
add
psllq
xor
sbb
bound
clc
dec
cld
mov
adc
cmp
pop
(bad)
clc
ror
mov
xchg
push
outs
arpl
stos
bnd
mov
jmp
nop
outs
daa
daa
xchg
fstp
out
iret
pop
cmp
push
ret
pop
call
fucomi
lods
je
outs
pop
dec
fisttp
aad
fistp
out
outs
jae
cli
mov
out
jbe
add
push
iret
xchg
xchg
push
push
je
xor
jp
daa
dec
xchg
imul
mov
hlt
jbe
int
enter
adc
das
iret
mov
xor
int
jae
dec
loop
in
mov
mov
add
in
aam
inc
leave
out
inc
jl
push
repnz
sar
shr
inc
ret
push
fcmovnbe
inc
jne
pop
gs
xchg
jae
cmp
jp
fbld
mov
cmp
pop
sub
jnp
mov
inc
movs
fidivr
shr
cld
mov
cmp
xlat
repz
outs
xchg
xor
shr
(bad)
data16
fs
imul
sub
jp
mov
cmc
and
add
aas
dec
lods
ds
cmp
and
xor
cmp
fs
dec
cdq
inc
loope
mov
dec
sti
push
int
sti
(bad)
pop
imul
fild
or
ret
sub
xor
push
lahf
and
ss
sti
mov
pop
cmps
shl
stos
sti
xor
inc
inc
dec
stos
or
mov
scas
les
out
mov
cmp
sub
inc
cmps
mov
aaa
jae
vpshab
jle
jns
setg
jae
mov
aaa
xchg
inc
pop
ss
enter
cld
out
mov
aas
push
mov
push
xchg
aam
out
(bad)
cmc
dec
rol
xor
out
dec
(bad)
cmove
outs
pop
inc
(bad)
lahf
cmps
mov
fidivr
jp
loopne
(bad)
ss
data16
xor
sub
test
out
jge
mov
(bad)
loope
inc
daa
pop
adc
mov
add
cs
push
pop
xor
ror
mov
inc
cmps
xchg
cmp
sbb
sub
push
and
adc
adc
xor
sub
xor
xor
hlt
push
mov
adc
ret
(bad)
dec
pop
aas
adc
xlat
jl
jno
test
inc
fld
sbb
cmp
fsub
retf
cmp
repnz
cmps
push
push
sbb
lods
push
test
movs
add
inc
mov
icebp
jmp
movs
cs
out
jecxz
popa
dec
xor
stc
fmul
retf
mov
and
sub
or
jmp
cmp
(bad)
stc
mov
sub
xor
pusha
dec
cwde
add
push
test
xchg
psubusb
mov
dec
dec
adc
push
outs
jne
inc
sub
inc
add
jbe
rcr
movs
shl
out
sbb
call
cmp
mov
ret
(bad)
mov
mov
(bad)
fsub
jnp
fcmovu
cmp
xlat
or
and
add
sbb
mov
ds
push
outs
mov
xchg
loop
icebp
lock
(bad)
clc
rol
loope
xchg
xchg
mov
clc
push
stos
inc
add
dec
ins
sub
jecxz
movs
xchg
jge
lea
mov
adc
sti
mov
bound
adc
mov
mov
xor
div
ins
sub
pop
push
jecxz
jo
xor
pop
addr16
sub
cmp
mov
push
pop
imul
or
or
aas
inc
adc
ins
out
add
dec
or
jge
jno
inc
mov
out
fdiv
dec
(bad)
scas
iret
addr16
mov
sbb
mov
xchg
test
int3
pushf
and
aaa
sti
jb
icebp
(bad)
shl
je
sbb
dec
fld
adc
rol
iret
dec
sbb
call
push
sub
rcr
les
cmc
mov
lock
push
push
dec
sub
ret
loop
movs
mov
call
pusha
je
pop
xlat
dec
nop
mov
mov
pcmpeqb
jo
aas
mov
ds
adc
sub
mov
not
mov
dec
inc
xchg
addr16
mov
fisubr
jbe
cmp
push
xchg
pop
pop
jl
mov
in
push
jp
adc
movs
aam
shl
xor
(bad)
pop
mov
push
aad
jp
cs
mov
aam
hlt
ss
and
rol
cmps
push
add
imul
mov
or
into
(bad)
test
push
and
xchg
xor
shl
sbb
xor
jle
cli
pop
js
loope
inc
sub
lahf
(bad)
mov
cli
dec
std
cmp
rcr
or
xchg
or
sub
nop
xor
xchg
ror
inc
repz
jns
push
leave
adc
cld
mov
jns
dec
xor
sub
mov
fs
mov
mov
fnsave
addr16
mov
push
push
mov
cmp
lahf
in
lods
cmp
xchg
xor
ins
fnsetpm(287
xchg
sub
out
mov
mov
jns
xchg
out
cmp
pushw
fsubr
or
call
pushf
cmp
add
xchg
scas
and
add
(bad)
jmp
sub
dec
sti
inc
out
pop
daa
mov
arpl
stc
cmps
xor
dec
push
dec
test
mov
sub
push
lahf
xor
lds
pop
push
lahf
popa
movs
adc
xchg
mov
mov
jmp
clc
pop
xchg
dec
jns
xchg
int3
inc
into
and
xchg
popf
mov
pop
dec
retf
mov
cmp
push
push
test
or
or
aaa
test
daa
jp
out
mov
jnp
stos
push
sahf
lahf
sbb
out
loopne
aam
jno
pop
(bad)
adc
xor
and
xor
pop
sbb
hlt
or
sbb
popf
xchg
es
mov
xchg
cld
sub
cli
inc
jae
out
(bad)
jnp
or
jle
sub
(bad)
jae
mov
jge
sub
int
fimul
add
dec
mov
mov
adc
sbb
dec
ffree
int
retf
dec
test
(bad)
pop
nop
mov
je
aad
int3
fs
mov
sub
aam
retf
mov
push
pop
lods
scas
adc
mov
clc
add
inc
cwde
cmp
xchg
jmp
mov
cmp
lods
sbb
fsubr
sti
jge
sub
mov
mov
and
rcl
xchg
cmp
push
hlt
sbb
add
inc
sbb
fcomp
loop
repnz
jecxz
pop
xchg
add
pop
cdq
ins
scas
add
dec
xchg
rcr
cmps
ret
pop
ret
inc
cdq
inc
pop
out
mov
(bad)
aas
adc
arpl
shl
mov
cld
test
or
add
ror
or
sbb
in
cmp
dec
stos
rol
xlat
inc
(bad)
push
div
fs
mov
ja
inc
and
imul
in
sti
push
and
and
shl
bnd
or
in
out
and
push
jp
dec
aad
sbb
push
mov
jle
sbb
iret
push
mov
dec
cmc
mov
cmps
call
or
lds
xor
arpl
shl
int3
xchg
and
(bad)
mov
sbb
movs
xchg
int
adc
lods
pop
xchg
inc
jae
arpl
fisttp
adc
sub
and
mov
jg
inc
cmp
pop
push
mov
pop
dec
cdq
mov
ja
inc
loopne
cmp
or
xor
fiadd
rcl
push
dec
ins
mov
pop
ror
add
out
adc
jne
lods
int3
jo
and
dec
xor
popa
and
stos
pop
jno
xchg
jge
mov
inc
fcom
mov
adc
fwait
shr
cmc
sbb
pop
xor
test
push
jmp
and
ss
mov
adc
retf
lods
shl
cmps
(bad)
push
cmc
stos
iret
gs
int3
pop
div
pop
xchg
and
sbb
stos
pop
sub
fcmovnb
xchg
call
adc
push
jle
or
add
fdivr
clc
mov
into
mov
shr
je
jmp
add
mov
sub
add
outs
adc
add
mov
jmp
inc
movs
outs
sub
sbb
sahf
or
sub
retf
pop
cwde
dec
xchg
sub
mov
pop
pop
sbb
jo
pop
inc
popf
ja
sub
fstp
rcr
mov
cmp
scas
dec
jbe
pop
mov
out
ret
adc
in
ret
cdq
jle
dec
imul
sub
ins
inc
inc
sub
xor
pushf
inc
cmp
jne
mov
pop
test
out
lea
out
addr16
jge
test
push
scas
enter
test
scas
sub
sub
call
inc
or
ficomp
mov
test
iret
mov
aad
add
test
jae
jbe
leave
outs
xor
mov
mov
jp
repnz
icebp
call
adc
std
aas
stos
loope
push
dec
scas
jle
repz
mov
cmp
sub
out
rol
cmp
or
(bad)
adc
daa
dec
fsub
cmp
cmc
in
jns
test
push
lods
and
mov
nop
sbb
jle
scas
jne
and
ja
ins
jo
fidiv
dec
add
push
int
and
jle
mov
adc
and
jno
and
xor
adc
pop
pop
mov
mov
stc
push
push
scas
sub
repz
outs
xor
mov
xchg
adc
dec
and
movs
std
dec
call
in
das
iret
push
fiadd
push
repnz
xchg
push
js
aas
ins
dec
in
add
push
cmp
ins
cdq
nop
mov
outs
cdq
addr16
pop
jecxz
jb
bound
xchg
ret
xchg
add
pop
push
repz
or
inc
mov
cmps
fisttp
std
jae
test
mov
mov
loop
fincstp
jle
in
aam
adc
jg
in
aaa
es
xchg
jns
sar
push
push
movs
(bad)
sbb
push
call
clc
(bad)
icebp
jne
mov
sbb
scas
outs
fprem1
loop
aam
xchg
shl
fs
inc
and
les
push
push
arpl
arpl
mov
mov
and
inc
mov
gs
test
call
sar
lock
mov
mov
cld
mov
les
adc
fwait
adc
sar
cli
cwde
push
sub
jns
xchg
out
cmp
and
or
jb
mov
sub
rcr
fwait
retf
pop
idiv
jle
jns
xor
scas
fs
pop
lea
jbe
dec
mov
bound
jmp
ds
jl
ja
in
leave
hlt
sub
mov
iret
out
push
shr
hlt
mov
xor
pushf
xor
movs
push
aaa
adc
or
cmp
fisttp
div
inc
jns
pop
mov
stc
and
jg
stos
adc
(bad)
addr16
inc
pop
ret
push
add
aaa
or
add
fbstp
add
mov
enter
mov
mov
sar
popa
sub
bound
call
sub
inc
clc
pop
call
mov
out
daa
into
inc
iret
push
or
pop
sub
js
stos
or
in
mov
jp
ret
push
mov
xchg
jns
mov
enter
dec
cmp
movs
add
ins
push
sbb
cdq
adc
dec
popa
and
into
sar
into
mov
or
jns
stc
cmp
push
or
push
iret
mov
inc
lea
or
inc
mov
and
or
jg
mov
jne
xchg
jne
std
cdq
push
imul
jbe
push
rcl
imul
sub
push
or
jmp
mov
stos
jecxz
fwait
rol
sbb
or
movs
mov
pop
int3
(bad)
xchg
jb
out
mov
mov
aaa
std
ret
out
sahf
xchg
mov
sub
ja
cmp
(bad)
test
imul
aaa
int3
sti
sub
sub
loop
repz
adc
jo
mov
hlt
pop
xor
mov
retf
(bad)
pop
xor
sub
sub
loope
push
sbb
xchg
mov
stos
sbb
fs
jg
and
sbb
sub
jmp
nop
dec
lods
jmp
fwait
outs
dec
push
dec
in
ret
je
arpl
push
les
cmp
sub
mov
in
pop
fsub
xor
add
mov
jle
cld
popa
lock
lods
sti
cmc
pop
inc
mov
std
mov
sbb
inc
sbb
or
outs
cmps
mov
scas
jae
sbb
fucomp
mov
add
push
fdiv
bound
and
xor
dec
xchg
mov
push
lods
pop
mov
pop
shr
jne
sbb
lahf
sbb
fist
mov
dec
into
mov
cdq
jae
rcl
sub
inc
rol
loopne
leave
cmp
scas
pop
lods
sbb
xchg
xlat
or
sti
repnz
std
cli
adc
fimul
mov
xchg
pusha
rcr
shl
(bad)
fdivr
or
and
mov
arpl
jno
loopne
and
stos
nop
out
shl
jns
sub
fs
pop
and
mov
sub
pusha
dec
mov
dec
dec
pushf
les
xor
ss
xchg
test
mov
rcl
ins
xor
adc
mov
pop
movs
imul
pop
mov
jle
(bad)
cmp
xlat
into
pop
xor
add
iret
sar
jnp
cmps
arpl
xchg
mov
scas
sub
mov
in
or
add
shl
jle
dec
rol
test
mov
pop
push
sub
out
fcom
add
lea
lods
cmc
push
dec
jnp
(bad)
out
(bad)
mov
(bad)
cwde
mov
pop
cmp
and
or
sbb
jnp
into
inc
dec
adc
pop
fidiv
fild
mov
push
sar
lea
sti
jg
(bad)
loope
push
retf
mov
mov
aaa
lds
(bad)
repz
in
pop
xor
fsub
cmp
push
rcl
arpl
pause
out
pop
inc
sbb
sbb
(bad)
adc
imul
mov
daa
inc
xchg
jbe
(bad)
fist
push
(bad)
cli
inc
cmp
mov
(bad)
xor
pop
inc
push
jo
sti
add
or
push
lds
lea
test
and
jecxz
outs
push
pop
push
fmul
mov
pop
push
stos
jl
ins
rcr
stc
add
pushf
push
aad
sbb
adc
inc
scas
and
fstp
jmp
ror
mov
mov
(bad)
jns
pop
clc
mov
mov
loopne
outs
dec
sub
fdiv
sar
dec
es
sbb
pop
inc
push
addr16
shl
push
lea
xchg
dec
ins
std
xchg
lods
mov
in
leave
xchg
xor
mov
pop
dec
mov
sbb
pop
btc
mov
jo
dec
jecxz
pop
xor
loop
xchg
xchg
sbb
pop
mov
mov
fadd
call
and
(bad)
icebp
pusha
int
pop
aaa
test
ins
(bad)
aas
inc
sti
add
xchg
fwait
leave
or
(bad)
test
scas
sub
cwde
scas
push
jns
stos
int3
cmps
push
stos
imul
jecxz
or
call
cdq
push
push
daa
cmc
and
aaa
sbb
or
xchg
inc
mov
outs
mov
inc
jb
push
outs
mov
xor
dec
jecxz
inc
and
sbb
call
cmp
fstp
daa
inc
push
pop
cmp
fsubp
mov
cmp
mov
pop
je
movs
mov
xor
shl
(bad)
jge
inc
add
test
popa
rol
imul
add
les
push
dec
(bad)
std
cs
int
sahf
push
push
dec
cmp
push
xor
adc
mov
add
daa
add
inc
add
ss
mov
adc
dec
cmp
push
add
mov
mov
mov
js
add
sbb
inc
jns
xlat
xchg
cmp
xor
mov
cmp
shr
xlat
jno
fistp
nop
jmp
pop
arpl
fwait
sub
xor
or
fcomp
call
jns
xchg
adc
es
dec
or
jno
cdq
add
mov
cmp
out
mov
xchg
test
repz
fstp
outs
out
icebp
inc
push
or
test
in
lods
loope
into
and
(bad)
mov
pop
mov
fcmovb
inc
in
mov
inc
(bad)
fild
je
fldl2t
push
jecxz
test
test
fwait
rcl
into
ffreep
dec
adc
push
pop
add
jmp
dec
inc
xchg
xchg
outs
push
idiv
sub
mov
or
sbb
mov
je
sub
jecxz
mov
add
fisttp
mov
add
or
sbb
add
xchg
sub
xchg
dec
push
mov
cmp
mov
repnz
jle
gs
icebp
div
les
inc
in
pop
jnp
xchg
xchg
sahf
fnstcw
push
in
inc
sub
jmp
sub
lock
pop
inc
sub
xor
in
cmps
add
adc
jns
sbb
(bad)
jecxz
jge
xor
pop
or
sbb
mov
int3
(bad)
in
pusha
dec
mov
mov
in
push
mov
sbb
in
cmp
and
ins
mov
add
add
mov
adc
and
pop
dec
xchg
sahf
pop
popa
push
xchg
cmp
mov
fbld
aas
adc
mov
inc
and
cli
loopne
cmp
(bad)
and
loope
add
leave
std
cmps
add
popa
push
mov
sbb
jnp
lods
out
je
sub
pop
icebp
dec
imul
push
(bad)
push
dec
ins
call
add
dec
jbe
fstp
jmp
in
dec
icebp
mov
push
scas
into
movs
loop
pop
aam
mov
push
retf
mov
js
dec
ror
mov
movs
rol
xchg
scas
cmp
neg
mov
icebp
cmp
in
(bad)
xchg
or
sahf
ret
dec
and
in
or
cmp
(bad)
fsub
xor
inc
in
cmps
push
cmp
or
mov
push
mov
rep
jmp
(bad)
loop
dec
sub
add
cwde
ss
popf
and
add
xor
pop
sub
sub
rcl
enter
mov
outs
out
adc
push
add
stc
aaa
push
imul
addr16
sub
in
sub
call
rol
je
cmc
mov
add
ins
icebp
jl
inc
jae
push
xor
cmp
mov
xor
xchg
popa
call
jge
das
dec
outs
jl
mov
addr16
int
sub
adc
mov
mov
or
cmp
test
ficomp
outs
mov
aad
retf
pop
xchg
adc
cwde
or
xlat
fistp
xor
mov
or
test
inc
mov
ja
xchg
jbe
and
jnp
xchg
data16
or
mov
sbb
test
add
fsqrt
loop
cwde
nop
inc
les
pop
call
repnz
test
mov
lods
jp
loopne
in
pop
in
xchg
ffreep
es
mov
imul
sub
cdq
mov
pop
mov
mov
jmp
jle
cmps
fcom
outs
data16
bound
les
add
jp
dec
inc
cmp
clc
adc
ins
sahf
rcr
xor
aad
dec
cmps
inc
sbb
xchg
out
dec
add
pop
jo
loopne
mov
rol
(bad)
gs
pop
pop
outs
cld
cmp
xchg
jbe
in
cmp
sahf
imul
and
mov
pop
xchg
fs
in
push
fistp
inc
inc
mov
and
stc
and
mov
mov
xor
jle
into
loopne
jl
into
xor
add
jbe
enter
sub
push
cmp
xchg
aam
dec
outs
jle
push
adc
vmovlpd
popf
imul
jmp
mov
leave
enter
mov
cmp
mov
sbb
xchg
or
popw
pop
and
adc
and
mov
sub
pop
adc
lods
push
fimul
or
cdq
sbb
mov
xchg
lods
and
std
scas
aaa
push
cdq
dec
add
popf
ins
nop
mov
mov
imul
push
leave
repnz
mov
cs
sti
outs
call
jmp
cwde
pop
test
xlat
cmp
out
and
shr
sar
sahf
adc
rol
idiv
lods
jg
cs
xchg
mov
sbb
jmp
pop
sbb
imul
cmc
inc
mov
mov
or
loop
and
pop
nop
adc
call
sbb
retf
xchg
cld
in
push
dec
sahf
inc
add
add
mov
xor
and
mov
shl
inc
or
adc
cmp
adc
push
jb
in
cmps
fiadd
push
lea
cmp
sub
dec
xor
outs
xchg
(bad)
fisub
cmps
pop
mov
(bad)
and
mov
push
sbb
into
jp
ror
sar
aas
test
jl
cmp
mov
rep
dec
cmp
and
sub
jp
push
jno
cmp
fldcw
clc
adc
not
stos
inc
jmp
ret
dec
mov
in
cmp
adc
or
push
test
hlt
sti
pop
iret
and
es
out
jle
mov
fmulp
push
mov
fcomp
cmps
xchg
sub
sbb
mov
sbb
pop
(bad)
jle
jne
sbb
shl
outs
in
arpl
leave
sub
xchg
jne
ret
cmp
fist
push
xor
add
dec
xchg
push
xor
fmul
jle
in
sub
jmp
xor
jge
int
pop
cmp
repz
int3
shr
sbb
inc
bound
lods
sbb
xchg
adc
jl
dec
ja
jbe
pop
into
mov
push
fistp
mov
push
push
shl
pop
(bad)
and
test
hlt
dec
sub
mov
inc
cdq
mov
push
ds
fdiv
mov
inc
jl
cwde
retf
sbb
cmp
adc
out
fldcw
scas
xor
outs
int
jbe
sub
pop
push
cmp
pusha
push
and
add
mov
mov
sahf
(bad)
cld
movs
and
fs
lea
in
aas
pop
inc
(bad)
ror
(bad)
jb
sbb
cmp
adc
lods
push
xchg
imul
cmc
fisttp
add
in
(bad)
adc
xor
fisubr
jne
hlt
xor
add
fist
shl
popf
cmps
sbb
inc
cmp
cmp
sub
sub
cmove
data16
fs
and
xchg
ins
(bad)
jns
out
shl
xor
sbb
dec
test
repnz
jle
aam
adc
mov
repnz
(bad)
push
data16
imul
mov
xor
lds
lods
jecxz
and
fimul
push
sbb
ins
and
retf
xchg
pop
cmc
adc
cli
mov
inc
push
or
adc
inc
jne
loop
mov
push
sbb
cs
jnp
pop
(bad)
xchg
out
sub
mov
push
pop
in
mov
dec
jns
add
ror
das
mov
jmp
and
adc
aas
bound
jmp
mov
rol
mov
scas
sub
inc
gs
mov
dec
test
push
aam
adc
into
mov
repnz
fdivr
xor
push
sub
push
bound
xchg
shr
pop
gs
sub
loopne
mov
jg
pop
scas
mov
mul
mov
inc
clc
outs
xchg
and
or
int3
mov
adc
mov
mov
mov
mov
fucomi
xchg
dec
push
icebp
scas
cmps
mov
mov
mov
out
into
(bad)
xlat
lock
add
inc
push
sbb
cmc
pop
int
jp
popa
mov
popa
add
sbb
pusha
and
cmp
aad
mov
icebp
push
nop
push
in
repnz
xchg
jbe
test
adc
jge
dec
aaa
mov
add
imul
sahf
test
ret
outs
pop
mov
push
inc
push
shl
pop
pop
pop
lods
xchg
mov
sub
xchg
push
adc
mov
mov
into
mov
sar
loope
mov
lock
inc
mov
sbb
add
ds
jo
pop
push
mov
xor
mov
pop
outs
mov
jp
xlat
push
lock
mov
stc
jmp
sub
in
dec
call
xchg
and
loopne
inc
mov
in
inc
adc
lods
cli
sub
mov
mov
popf
fcom
jg
adc
add
mov
xchg
ins
popa
int
push
push
fidivr
pop
repz
movs
jmp
or
arpl
sub
jle
movs
xor
test
cdq
loope
mov
rcr
sbb
(bad)
push
xchg
outs
fadd
movs
test
es
loopne
jecxz
mov
and
mov
pushf
mov
pusha
mov
scas
mov
xchg
mov
sub
ss
adc
jecxz
fild
pop
pop
xchg
push
and
mov
mov
ins
jae
jmp
pop
xchg
inc
or
iret
xchg
mov
sahf
mov
xchg
jp
into
mov
cdq
(bad)
rol
dec
fild
lea
ret
inc
daa
aad
mov
addr16
sbb
cmp
repnz
push
adc
ds
mov
repnz
mov
mov
fwait
stos
inc
aas
mov
or
and
pop
add
inc
push
out
shl
push
fnstsw
std
jb
lods
bound
push
popf
adc
xchg
mov
xchg
popf
stos
cmc
fld
mov
push
test
and
pop
mov
cmp
aad
xor
or
add
ins
mov
xor
(bad)
pop
int3
mov
out
fwait
int
push
mov
bound
leave
mov
sbb
xchg
sti
bound
je
stos
lea
fcom
ja
xor
jle
or
pop
inc
xchg
sub
movsx
fadd
cmps
mov
mov
stc
imul
dec
or
push
enter
fs
(bad)
outs
xchg
out
xor
push
retf
xor
ret
fldenv
out
and
in
mov
jp
out
out
sahf
gs
gs
fdiv
std
fs
out
mov
popa
and
call
(bad)
popa
outs
in
mov
mov
pop
lods
add
pop
pop
push
mov
and
mov
mov
adc
or
mov
stc
call
dec
sbb
xor
push
xchg
xor
arpl
int3
mov
xchg
cmp
sub
and
movs
test
mov
popf
inc
js
push
sbb
and
fwait
add
adc
pop
ins
(bad)
pop
les
mov
daa
mov
aad
aad
fldcw
test
sar
mov
in
mov
inc
push
push
xor
push
ds
push
jb
cmp
dec
outs
inc
mov
xor
or
fwait
aas
mov
sbb
jae
(bad)
mov
addr16
and
test
js
push
push
in
imul
jb
cdq
pop
shl
addr16
cmps
adc
and
mov
push
push
cdq
sbb
inc
in
imul
rol
push
mov
loop
mov
dec
sahf
setne
push
call
adc
in
lods
shl
add
popf
or
sbb
xchg
adc
out
add
inc
cmc
repz
push
mov
daa
nop
ss
movs
lods
push
in
jne
test
add
jmp
add
xlat
pop
test
(bad)
retf
fidiv
cli
jp
push
ja
dec
fstp
lods
sar
pop
lods
xchg
call
mov
push
ins
xchg
fnstsw
or
inc
and
lahf
inc
sub
out
fs
push
in
push
test
in
dec
sahf
test
dec
mov
mov
loope
push
cmp
cs
mov
and
lea
lods
dec
out
loop
aaa
inc
dec
pop
retf
popf
stos
bound
or
loop
sahf
add
fdivrp
xchg
xchg
pop
add
pshufw
mov
jae
movs
xor
jno
xor
popa
ds
fld
mov
mov
and
icebp
pushf
out
jmp
jbe
pop
iret
inc
push
push
data16
push
cmp
mov
gs
inc
jbe
add
pop
scas
imul
mov
rep
cld
jge
mov
inc
push
out
fsub
jne
cdq
and
in
jp
cmp
pushf
push
pop
xlat
stos
jmp
xchg
movs
inc
aad
lahf
enter
arpl
and
in
jp
and
sub
pop
jne
and
fwait
cmp
dec
fistp
push
mov
dec
ins
mov
ror
mov
dec
adc
push
fidiv
outs
add
aaa
cdq
out
sbb
hlt
ret
mov
xchg
push
movs
pusha
out
es
push
lods
jmp
and
inc
int
aad
fcomp
xor
mov
pop
pusha
sub
clc
sbb
or
inc
je
loop
imul
xchg
cmp
in
mov
inc
sub
mov
hlt
sub
inc
push
inc
or
mov
mov
dec
pop
jle
dec
sub
or
out
into
outs
cdq
je
xchg
aam
jb
mov
or
jmp
mov
int3
ja
jno
sahf
sub
mov
or
adc
loopne
fldlg2
fidivr
enter
sbb
xchg
dec
out
push
xor
push
inc
(bad)
cmp
jecxz
vaddss
mov
mov
setge
hlt
add
pop
xor
in
mov
jne
and
and
sti
in
loop
pop
ins
pop
cdq
xor
or
fsubr
sbb
in
xor
jge
rol
(bad)
fld
cmp
push
push
movs
jmp
jle
cmp
cmps
pop
movs
rcr
sbb
jmp
adc
jl
xor
jnp
das
mov
pop
inc
jge
loop
cmp
add
jg
jb
jg
xor
loopne
xchg
jl
dec
xchg
pushf
adc
and
xchg
sbb
mov
xchg
push
iret
xor
dec
xchg
data16
mov
(bad)
repnz
popf
inc
mov
enter
scas
pop
retf
mov
xchg
sub
es
xor
sub
in
mov
pop
shl
fmul
fisub
cwde
sub
mov
mov
sbb
fcomip
je
rol
jbe
mov
ret
mov
mov
enter
out
lods
int
dec
add
jge
sub
scas
pop
mov
mov
clc
pushf
pop
sub
pop
aaa
dec
icebp
mov
popa
loope
in
add
push
(bad)
les
mov
xchg
mov
(bad)
add
test
in
popf
into
mov
mov
xchg
clc
movs
sbb
dec
dec
bound
int
clc
test
xchg
mov
fmul
fld
push
jl
es
inc
lock
mov
jmp
pop
xchg
adc
(bad)
int
loop
idiv
popf
aas
sete
xchg
mul
ins
xor
cmp
or
push
retf
dec
inc
xor
mov
jecxz
xchg
sbb
sbb
push
push
dec
out
(bad)
(bad)
(bad)
fisttp
inc
imul
cdq
push
hlt
out
mov
arpl
call
(bad)
test
int
retf
rcl
sbb
dec
add
popa
neg
dec
(bad)
hlt
lods
retf
stc
or
mov
adc
neg
sbb
ins
cli
mov
es
repz
cmp
jp
aad
jno
cmps
xchg
aad
pop
and
out
inc
jo
mov
push
adc
cmps
xchg
test
xchg
pop
sub
out
or
add
gs
enter
lods
loope
mov
xchg
mov
fld
aas
jo
xchg
cwde
test
js
je
mov
sub
jmp
push
popf
ror
cli
push
mov
xor
dec
inc
push
test
dec
jno
adc
rol
lods
cmp
and
push
xchg
loopne
dec
mul
dec
cmp
mov
es
sbb
add
ja
icebp
int3
xchg
cmp
mov
sar
shl
mov
add
mov
xchg
xchg
sbb
ss
xchg
adc
jnp
mov
sbb
fs
sbb
imul
and
ss
(bad)
(bad)
and
xchg
jb
cmp
push
adc
xchg
jmp
(bad)
sub
and
ins
cmp
xchg
cmp
and
bound
xor
mov
retf
retf
sbb
and
mov
out
fcomi
scas
cwde
xor
es
mov
push
add
imul
test
or
and
out
daa
lea
sbb
das
shl
mov
lahf
std
cld
lods
outs
mov
hlt
jmp
test
imul
es
popa
scas
mov
mov
dec
jne
xor
push
inc
neg
and
and
push
paddsb
jo
lahf
pop
loopne
sahf
fmulp
rol
arpl
jae
push
sbb
addr16
and
out
arpl
lods
aam
arpl
jnp
mov
out
push
cmp
xor
adc
xchg
and
ss
fs
fld1
jg
jno
movs
jge
or
call
sub
sbb
std
add
cdq
pmovmskb
icebp
mov
clc
xchg
and
add
ins
retf
xor
aad
sti
pop
xor
aaa
div
mov
sti
dec
lds
retf
jbe
cmp
popa
sbb
inc
sahf
jp
ret
push
mov
and
and
adc
ret
sar
enter
or
dec
push
pusha
rdmsr
pop
inc
fwait
adc
mov
or
dec
xor
xor
mov
dec
add
stc
in
iret
loopne
add
sbb
pop
enter
loope
(bad)
in
push
mov
stos
xlat
sbb
(bad)
daa
push
mov
cmp
xchg
push
sbb
mov
clc
dec
rep
push
and
xchg
dec
mov
in
clc
test
dec
test
nop
stos
rcr
push
popf
sbb
ficomp
dec
fwait
(bad)
(bad)
cmp
ret
xchg
(bad)
jmp
inc
stos
cwde
stos
imul
pop
ds
aas
dec
sbb
fidivr
call
popa
les
clc
leave
xor
or
mov
das
int3
stos
add
mov
xor
mov
jge
icebp
jge
xchg
addr16
dec
ds
push
aas
push
sub
ds
sub
js
or
pop
cmp
push
repz
into
fnstcw
xor
aaa
pop
pop
cli
jp
int
xor
add
pop
lods
xchg
(bad)
mov
rcl
mov
xchg
js
pop
mov
inc
push
dec
int3
fmul
ins
adc
mov
call
cdq
stc
sbb
mov
cs
pusha
arpl
call
(bad)
push
pop
add
addr16
push
cs
repnz
jmp
fidivr
adc
mov
cdq
test
in
fwait
stos
out
loopne
mov
add
not
cdq
adc
push
cmp
push
aam
gs
mov
inc
adc
xor
lds
stc
pushf
push
mov
jo
mov
dec
ds
adc
fsub
dec
jne
int
xchg
icebp
inc
popa
xor
pop
(bad)
or
mov
out
movs
push
pushf
ret
dec
jnp
in
hlt
push
int3
jge
and
add
cdq
arpl
arpl
adc
mov
(bad)
sti
(bad)
mov
and
int3
sub
mov
pop
push
(bad)
jl
cmp
data16
dec
fsub
addr16
ja
cs
jge
add
aaa
push
pop
push
jl
mov
and
ja
dec
popa
(bad)
or
jno
inc
dec
lods
add
ins
jbe
cmp
dec
xlat
push
pop
cmps
and
fstp
bound
pushf
shl
adc
leave
mov
outs
jno
fwait
mov
jbe
imul
mov
mov
or
fs
inc
sub
add
test
xor
sahf
jnp
mov
movs
xor
in
jp
pop
arpl
push
fadd
cmp
and
scas
or
pushf
(bad)
(bad)
xchg
cmp
imul
popf
cmp
or
jb
or
sub
sahf
mov
nop
push
cmp
fisub
xchg
(bad)
push
(bad)
pop
pop
add
sub
jecxz
ss
sbb
xchg
cmps
sub
loop
call
mov
aaa
ror
push
fwait
mov
push
add
arpl
xchg
int
sahf
and
movs
xor
sbb
ucomiss
sub
mov
(bad)
dec
pop
je
test
mov
mov
mov
call
stos
or
out
test
stos
pop
mov
add
cmp
dec
ins
int
xchg
push
ds
data16
inc
stc
aas
mov
nop
add
data16
out
test
jmp
ja
loop
push
or
outs
cmp
ror
jo
inc
add
dec
pop
sti
mov
push
push
add
test
(bad)
fchs
je
data16
imul
inc
mov
sub
mov
cld
jae
push
sbb
add
stos
sar
mov
sysexit
nop
aas
js
inc
pop
jae
sub
xchg
push
mov
sub
jle
aaa
(bad)
idiv
out
push
adc
test
fnstcw
int3
cdq
(bad)
retf
repnz
jmp
mov
inc
fdivr
(bad)
mov
mov
lea
cmp
rcl
adc
arpl
iret
cmp
xchg
mov
(bad)
mov
in
ror
outs
hlt
mov
lds
mov
fstp
not
mov
push
xchg
cvtdq2ps
jge
rcl
xchg
imul
adc
fwait
(bad)
idiv
in
mov
dec
aas
xchg
je
cld
int3
mov
inc
mov
mov
sbb
cdq
sub
cmp
jmp
cmp
sbb
mov
xchg
cmp
push
cld
pushf
dec
xchg
lods
scas
call
xor
mov
mov
movs
and
xchg
dec
ficom
add
cmp
retf
inc
mov
retfw
push
outs
push
andps
je
jns
jno
or
jns
(bad)
jecxz
loop
xchg
lahf
xor
xchg
rol
out
jmp
inc
xchg
jmp
jp
es
sbb
and
xchg
fnstsw
scas
sub
aaa
dec
cmp
jae
push
es
jmp
inc
fstp
inc
jp
arpl
rep
retf
(bad)
fdiv
loope
adc
fucomip
sbb
or
call
dec
mov
sbb
test
lahf
cmp
add
ret
cmp
pusha
js
mov
out
lods
mov
dec
loopne
sti
call
test
scas
int3
inc
xor
aas
jge
sbb
mov
push
stos
xchg
in
mov
daa
repnz
mov
add
nop
sti
xchg
or
or
scas
mov
inc
mov
mov
sar
pop
sbb
jno
leave
sbb
xor
inc
xchg
and
and
xor
mov
add
stos
add
loopne
sbb
stos
mov
pop
mov
call
leave
mov
cs
fisub
mov
mov
xchg
lods
sub
retf
push
lods
imul
lock
ins
imul
(bad)
in
inc
lods
dec
cmps
fcmovnu
mov
lahf
or
and
adc
jne
sbb
mov
sbb
ins
add
jle
jecxz
idiv
cmp
mov
mov
dec
inc
pop
dec
movs
add
fmulp
sbb
les
shr
jns
ds
loope
out
int
sub
cmps
xchg
dec
dec
in
js
dec
and
mov
or
xor
inc
pop
adc
mov
mov
fistp
dec
mov
(bad)
aam
mov
or
icebp
scas
in
inc
add
inc
push
adc
popa
mov
popa
bound
or
repnz
retf
and
stos
jmp
jecxz
popf
push
sub
push
imul
mov
push
fcomp
xor
jno
pop
movs
popa
test
popa
add
jl
fcom
out
jmp
fmul
sbb
xchg
fild
cmp
sub
mov
pop
push
out
jmp
mov
sub
jmp
dec
mov
add
push
jmp
cmp
sti
daa
mov
jmp
mov
mov
sub
in
mov
jb
push
add
sub
and
les
aam
sbb
leave
pusha
dec
lea
xor
ja
sub
push
fst
push
inc
cmp
clc
jle
add
mov
loope
pop
xchg
ins
cld
sub
pop
add
jl
ds
aad
jnp
(bad)
hlt
jmp
xchg
pop
cs
ret
sub
dec
inc
pop
aad
sbb
adc
shr
pop
jne
cli
bound
jno
out
pushf
and
cwde
arpl
in
jns
pushf
ret
jo
rcl
sbb
das
dec
bound
out
cmp
or
pop
cwde
ret
aas
sub
loop
mov
inc
out
mov
rcr
out
jg
or
inc
(bad)
adc
data16
push
mov
xchg
xlat
lods
ror
push
mov
add
xor
int3
mov
mov
rcl
(bad)
into
int
retf
cld
xor
cmp
mov
(bad)
out
cmps
in
jmp
push
sub
(bad)
jle
inc
stos
js
dec
shl
jl
clc
mov
loop
sti
stc
ss
add
fxch
adc
jbe
aas
stos
or
cmp
jmp
xor
or
inc
pop
jg
into
push
sar
stos
aas
call
(bad)
and
repnz
mov
repnz
xchg
sbb
push
ja
add
add
and
mov
mov
mov
in
cmp
data16
fisub
imul
dec
mov
mul
out
jmp
dec
mov
xchg
mov
mov
lods
sahf
inc
sbb
idiv
dec
fiadd
(bad)
les
imul
pop
inc
add
enter
in
inc
call
scas
in
sub
retf
mov
dec
jmp
add
cs
or
and
pop
sub
not
ds
inc
sub
(bad)
inc
sbb
jnp
or
xchg
ja
jmp
jecxz
(bad)
retf
test
adc
in
or
push
(bad)
aad
shl
jno
les
lock
and
aad
xor
mov
int
mov
div
pop
les
lods
lods
leave
call
mov
xor
jge
push
jae
repz
int3
mov
cmp
xchg
mov
cli
sar
fwait
aam
and
pop
xchg
xchg
aad
adc
sub
cmp
mov
enter
pop
shl
rcl
or
data16
leave
mov
scas
mov
rol
in
test
pop
inc
sbb
mov
ins
mov
imul
xor
out
fdivr
and
inc
xor
or
mov
cmp
jnp
sbb
push
inc
div
push
and
nop
sbb
das
adc
(bad)
outs
xchg
scas
add
fidivr
(bad)
call
in
jp
xor
ret
jg
mov
sar
popa
dec
imul
adc
jne
xor
dec
xchg
xor
gs
and
shl
into
shr
hlt
push
inc
in
aas
push
(bad)
sbb
cdq
or
jno
mov
pop
cmc
jge
jmp
xchg
aad
nop
pop
fs
pop
and
je
jmp
jmp
stos
outs
(bad)
in
(bad)
je
and
sti
call
inc
inc
sub
and
mov
ret
addr16
das
push
(bad)
cmp
in
enter
mov
mov
push
rol
shl
sbb
adc
repnz
imul
sbb
or
in
rcr
repz
imul
int
sub
add
sub
push
xchg
add
rol
(bad)
mov
adc
push
xchg
nop
ins
icebp
(bad)
jmp
pop
lahf
fs
movs
push
pop
shl
sub
or
scas
push
fwait
cmp
loope
mov
(bad)
je
xor
xchg
ins
dec
pop
aad
xor
icebp
scas
push
xchg
int
inc
mov
jns
out
jae
test
pop
pop
test
push
xor
sbb
and
mov
or
push
fstp
movs
cmc
mov
sub
pop
push
outs
(bad)
jmp
sbb
mov
xor
pop
test
sahf
pop
push
xchg
sub
pusha
adc
gs
enter
pop
xchg
push
mov
pop
sbb
dec
jl
pop
test
shl
in
mov
stos
out
pushf
imul
stc
mov
out
add
shr
mov
(bad)
shr
lea
out
ret
ds
cdq
dec
xor
int3
push
movs
das
rcl
fisttp
rcl
cmp
and
adc
mov
or
mov
cld
jp
mov
or
push
sbb
sub
mov
or
adc
sbb
xchg
add
cmps
cmc
inc
sti
retf
int
and
cmps
or
jl
push
adc
cmp
cld
mov
dec
add
arpl
and
jmp
clc
xor
mov
and
jp
xor
add
xchg
js
in
cmp
mov
cmp
sub
aaa
jne
sub
cs
aas
test
jecxz
repz
inc
fld
mov
mov
sub
sbb
cli
dec
push
jp
loop
dec
mov
popf
jp
add
fldcw
mov
fst
dec
sar
cmp
into
add
loopne
push
mov
dec
(bad)
rcr
lahf
mov
cmp
xor
mul
cli
mov
fcomp
fmul
jmp
leave
pusha
inc
xor
cmps
imul
sbb
ds
nop
(bad)
es
call
scas
sub
lods
cmps
inc
fisubr
pop
xor
sub
sub
int3
mov
add
lock
pop
cli
aas
xchg
xor
pushf
in
inc
(bad)
fwait
push
mov
out
jl
or
push
out
adc
push
push
jnp
dec
push
cmp
rcl
popa
push
mov
cmp
xchg
lods
repz
inc
sub
mov
mov
xor
push
mov
and
outs
pop
add
pop
jno
cmp
fsub
aad
pop
inc
or
push
jmp
dec
xchg
push
test
ss
pop
mov
sub
push
pop
out
(bad)
mov
jo
mov
test
fs
aas
(bad)
test
or
jp
fisttp
dec
js
rol
adc
cmp
sti
cmovp
ja
jge
push
jle
movs
xchg
stc
ja
pop
test
and
dec
xchg
add
and
mov
scas
add
xchg
jp
jl
push
jo
dec
in
xchg
cld
mov
outs
jg
inc
in
mov
cmp
aas
cmp
jl
add
movs
xor
sahf
ss
ret
pop
mov
enter
push
cwde
mov
pop
(bad)
call
in
into
adc
mov
mov
mov
stos
add
cmp
es
rcr
faddp
pop
and
dec
idiv
addr16
dec
aam
test
in
arpl
mov
hlt
gs
test
mov
pusha
and
cli
or
ret
xchg
pop
mov
or
cmp
ret
cli
push
inc
outs
xchg
pusha
mov
push
scas
shl
xchg
fist
cmp
and
sub
cmp
imul
jns
and
mov
idiv
in
xor
or
outs
dec
push
xor
repnz
cld
int
sti
cmp
add
sub
jp
sub
mov
xchg
retf
push
loopne
shl
je
push
push
xchg
add
sti
scas
fucom
mov
sub
outs
movs
gs
in
jl
test
mov
scas
add
es
xor
mov
inc
in
or
into
lds
(bad)
(bad)
xchg
inc
test
push
cmps
jge
push
dec
xchg
mov
dec
test
fwait
arpl
dec
jmp
lock
xchg
pop
test
inc
pop
xor
sbb
xor
ds
imul
out
xor
xor
aas
mov
rcr
test
mov
jl
sub
push
jae
mov
lahf
sbb
shl
in
push
jle
test
xchg
cmps
(bad)
rcr
adc
mov
mov
add
ret
bnd
repnz
imul
stc
xchg
sub
and
mov
jl
(bad)
mov
popf
adc
test
xchg
retf
shr
stos
imul
in
cmp
mov
pop
mov
sub
jmp
lds
and
mov
mov
lahf
ds
pop
popaw
jg
mov
in
jmp
paddd
pop
outs
ror
dec
push
je
sbb
jno
inc
std
and
sbb
mov
popf
mov
pop
lods
adc
mov
data16
fldenv
mov
dec
push
test
mov
or
gs
sbb
adc
loop
leave
scas
imul
and
jae
data16
push
or
mov
rol
and
lods
adc
push
xor
dec
ficom
stos
fldlg2
movs
cmp
dec
dec
push
xor
das
shl
mov
mov
sub
jecxz
outs
sub
mov
pop
mov
inc
mov
rcr
imul
mov
and
inc
and
fist
popa
dec
and
jl
and
sti
call
mov
sub
pop
or
cmps
add
aad
jnp
(bad)
cmps
push
sbb
adc
push
jne
mov
out
fstp
in
loopne
adc
stos
div
sub
inc
mov
movs
sub
jb
cmp
pushf
mov
ror
jle
lods
jmp
dec
ja
inc
or
xor
repnz
jmp
mov
fist
je
pusha
jo
cmp
test
cmps
mov
mul
fiadd
inc
test
or
(bad)
xchg
mov
lahf
adc
das
add
rcr
cmp
mov
pop
cwde
mov
imul
not
ds
pop
mov
dec
cs
add
popa
mov
jmp
jo
mov
jecxz
shl
rcr
ret
push
push
jns
sbb
pop
daa
inc
add
iret
mov
cli
jmp
(bad)
sub
cmp
movs
out
aas
cwde
sbb
lahf
cmps
pop
mov
mov
inc
cmp
jl
stos
push
sti
mov
sbb
xchg
fsubrp
out
in
mov
xchg
sub
mov
push
je
pop
pop
and
(bad)
sbb
fwait
lahf
movs
rol
ins
xchg
xchg
and
push
pop
retf
(bad)
ss
sub
mov
fwait
cld
out
and
dec
int
jg
xor
jae
or
sar
fs
xchg
cmc
jne
pop
aam
mov
push
pop
mov
je
std
jmp
and
mov
xchg
push
mov
sbb
adc
repz
data16
cmp
fnsave
or
pop
and
inc
mov
or
xchg
cmp
sub
js
rcr
mov
fstp
bound
fwait
dec
mov
mov
sbb
or
cmp
aaa
idiv
repz
push
or
cmp
push
in
ins
pop
dec
inc
sub
sbb
xor
jmp
repz
icebp
sub
push
xchg
mov
mov
push
push
dec
stos
mov
push
cmp
mov
shr
daa
ja
mov
movs
sbb
call
sbb
mov
js
jnp
ins
jl
xchg
(bad)
jp
jmp
pop
rcl
jns
jecxz
repnz
pop
stc
mov
add
rcl
mov
scas
call
stos
mov
and
hlt
and
les
(bad)
and
pop
lds
push
cli
pop
out
loopne
ficomp
jne
jle
mov
fdiv
in
pop
pop
loope
sbb
std
and
test
cld
nop
in
pop
jnp
jo
xchg
ins
dec
jns
jbe
mov
inc
dec
call
lods
outs
pop
dec
pop
inc
and
jp
push
retf
push
repnz
pop
or
lahf
cmc
outs
mov
mov
lahf
repz
mov
(bad)
fdiv
call
test
out
ja
cmps
cmp
push
clc
dec
add
neg
loopne
mov
hlt
cmp
call
ret
mov
or
aas
pop
jle
dec
sbb
adc
in
cdq
in
bound
mov
icebp
sub
jecxz
call
test
mov
mov
add
in
rcl
in
sub
push
xchg
cwde
mov
jmp
dec
mov
test
xchg
mov
sbb
hlt
push
jp
push
adc
mov
xlat
pop
sar
dec
xchg
mov
pushf
out
popf
push
ja
dec
popf
hlt
or
cmps
mov
imul
les
adc
enter
cdq
push
lods
(bad)
stos
es
add
cmp
cmp
or
inc
mov
ret
cmp
pop
mov
ja
scas
inc
inc
imul
mov
jae
dec
and
dec
mov
pop
sub
imul
hlt
movs
retf
jno
das
(bad)
daa
mov
adc
test
mov
xor
xchg
stc
out
call
mov
mov
push
xchg
cmps
sbb
and
jo
xor
movs
loope
sbb
mov
int
or
rcr
xchg
cli
daa
and
bound
int
dec
or
push
fwait
pop
mov
inc
adc
aaa
scas
fild
adc
ret
pop
mov
xchg
xor
pop
xchg
outs
sbb
jmp
mov
jl
cmp
mov
(bad)
adc
fstp
scas
mov
or
(bad)
push
cwde
jae
sub
sub
and
mov
sbb
addr16
icebp
xor
(bad)
addr16
outs
sti
addr16
repnz
cmps
dec
inc
mov
xchg
loope
sub
push
ret
sbb
leave
mov
enter
and
cmps
cli
mov
xchg
cld
mov
dec
xchg
mov
push
sub
cs
pop
(bad)
push
das
adc
std
mov
movs
in
xchg
dec
mov
adc
out
xlat
jmp
clc
xor
sbb
out
sbb
dec
inc
pop
rol
hlt
sahf
inc
or
in
into
push
mov
jne
and
jp
sub
inc
stc
and
xchg
repz
mov
inc
and
cld
ds
outs
(bad)
in
or
mov
aas
enter
scas
imul
sbb
lods
xor
imul
add
lea
or
xor
xchg
cmc
xor
enter
or
test
jne
pop
pop
(bad)
test
push
sti
imul
inc
iret
cld
lock
cdq
sub
bswap
lea
xchg
inc
jo
outs
mov
mov
mul
xlat
mov
pop
dec
and
cmps
std
adc
(bad)
in
xor
fcomp
int
mov
enter
dec
xchg
mov
adc
inc
test
data16
imul
cld
push
setl
pop
add
hlt
test
in
mov
mov
mov
cmps
add
sbb
popf
jmp
das
ss
out
pop
mov
fidiv
mov
mov
push
jp
gs
cmc
stos
pop
dec
fldenv
out
adc
les
and
push
cmc
mov
pop
dec
retf
jp
dec
cmps
and
aaa
sbb
mov
mov
and
(bad)
pushf
in
sbb
fsubr
lds
test
cwde
and
inc
(bad)
stc
dec
mov
aam
mul
dec
lea
jo
call
jns
out
lds
rcr
pop
xchg
adc
repnz
sub
sti
loopne
xchg
div
lods
jae
sbb
sub
lods
mov
and
stos
xchg
aam
lods
and
sahf
fild
rol
mov
jl
sub
xlat
ret
ret
cmps
xchg
out
add
int
fidivr
pop
repnz
adc
mov
inc
xchg
cld
adc
imul
jle
in
out
adc
pop
(bad)
aad
sbb
xchg
dec
adc
mov
(bad)
xchg
mov
or
add
sub
and
hlt
std
dec
popf
loopne
dec
mov
push
mov
fst
mov
cwde
mov
jbe
(bad)
retf
aaa
mov
xlat
push
popf
pop
mov
mov
add
cmp
mov
mov
xchg
(bad)
xchg
and
retf
or
xchg
stc
fisub
cmp
jmp
add
mov
xchg
pop
push
cld
(bad)
mov
lods
fadd
pop
mov
dec
sbb
fscale
sub
mov
mov
icebp
fcmovnu
jge
mov
push
jbe
dec
dec
or
fild
inc
movs
sub
sbb
jb
daa
dec
mov
pop
inc
adc
in
scas
mov
(bad)
fst
mov
inc
inc
test
cli
inc
lahf
inc
movs
xor
rcr
sbb
out
mov
lods
fistp
push
test
imul
jp
sub
popa
loope
(bad)
mov
jne
mov
mov
inc
sub
xor
cmp
(bad)
and
jp
dec
jno
movs
xchg
sub
or
or
cmp
cmp
cld
dec
out
addr16
shr
pop
(bad)
mov
cli
test
fs
xor
repz
add
(bad)
cmp
lods
or
add
sbb
mov
stos
add
fdiv
(bad)
mov
jp
(bad)
push
aaa
cli
mov
push
retf
popf
add
shl
adc
push
sub
scas
call
imul
xchg
mov
dec
mov
dec
jno
ins
sar
fimul
test
or
aad
unpckhps
or
xor
add
xchg
mov
sahf
loope
adc
ds
mov
push
int3
xchg
mov
cwde
shl
gs
jno
es
(bad)
jmp
call
(bad)
dec
maskmovq
test
or
sbb
cmp
enter
xchg
sub
cmp
inc
test
test
inc
rcl
in
add
xchg
adc
add
int
cmp
cmp
sbb
sti
jno
mov
les
push
dec
or
mov
and
jnp
scas
or
pop
xlat
xor
push
inc
rcr
dec
cmps
imul
and
in
jae
and
enter
mov
nop
hlt
adc
jmp
inc
imul
jmp
pop
xor
pop
rol
inc
push
fstp
inc
aam
arpl
sbb
push
xor
sbb
push
add
cmp
loope
stc
outs
add
jecxz
test
call
daa
push
pop
shl
sbb
push
out
xchg
cli
cmp
cmps
mov
and
cld
inc
sbb
stos
enter
daa
xchg
jns
scas
xor
mov
xchg
push
xchg
pop
cmc
test
cs
das
jle
fstp
inc
outs
push
cld
fnstcw
sub
push
mov
retf
stc
mov
xor
test
pop
cmp
ja
add
rcr
dec
mov
ret
lods
and
outs
mov
sub
mov
sub
push
pop
fild
push
dec
dec
mul
mov
mov
das
cli
imul
push
push
lock
repnz
out
in
in
enter
pusha
test
pop
sbb
inc
imul
mov
sub
jmp
imul
stos
movs
add
pop
push
mov
mov
shl
jp
jmp
cmp
jp
pop
dec
scas
aad
dec
sub
fcom
push
ja
or
das
fnstenv
add
fidiv
sbb
js
stos
lods
ds
mov
hlt
xlat
lods
jmp
mov
mov
imul
inc
hlt
and
call
mov
jmp
and
out
jle
mov
and
jle
fidiv
(bad)
out
pop
pushf
jnp
ins
xchg
jmp
push
mov
lds
mov
addr16
cmp
test
xor
ret
mov
ja
jns
dec
ins
mov
dec
cld
iret
out
jmp
les
mov
dec
popa
adc
xor
xor
arpl
mov
jns
pop
pop
repnz
pusha
push
cwde
jmp
mov
repz
push
dec
(bad)
js
xchg
push
lods
mov
or
pop
mov
sub
movs
stos
movs
sub
mov
mov
cdq
jmp
loope
sbb
sbb
push
sbb
mov
loopne
fmul
or
adc
test
pop
lea
mov
ss
xor
pop
or
add
(bad)
fiadd
loopne
pop
repnz
in
js
(bad)
ins
pop
inc
idiv
popa
out
pop
fisub
inc
ins
dec
adc
outs
pop
fadd
shl
inc
popa
(bad)
sti
sti
dec
loopne
or
gs
(bad)
out
jl
addr16
fmul
push
scas
(bad)
sub
dec
sti
sbb
aad
sbb
and
add
sub
and
mov
mov
call
aam
arpl
fcomp
dec
popa
std
ucomiss
loope
lds
sbb
push
xchg
push
push
fwait
cmp
dec
xor
sbb
xchg
mov
fild
data16
clc
test
(bad)
out
jo
(bad)
out
f2xm1
push
lahf
test
inc
cld
mov
push
ds
mov
cld
mov
and
cdq
push
fild
lods
mov
jge
fcom
std
add
inc
inc
dec
(bad)
imul
push
lea
enter
xor
cmp
xor
gs
std
ins
repz
mov
push
pop
jle
cld
and
test
test
mov
(bad)
lock
xor
sbb
xor
gs
outs
or
push
clc
rcr
sub
push
sbb
imul
mov
and
js
xor
jbe
add
jge
sahf
mov
in
cmc
mov
jae
je
inc
into
mov
jb
add
pop
jp
cdq
adc
lock
shr
mov
inc
sti
data16
mov
dec
cld
adc
into
retf
in
push
add
test
lock
ja
or
nop
in
dec
cmp
(bad)
push
add
pop
sbb
loope
push
(bad)
inc
and
ins
pop
mov
arpl
lock
or
pop
jge
jb
movs
cmp
lds
shl
dec
adc
dec
hlt
pop
cmp
or
mov
out
push
std
and
add
scas
xchg
push
pop
out
push
inc
nop
test
outs
les
mov
add
or
ficom
int3
adc
add
daa
and
sbb
pop
jmp
jp
mov
(bad)
adc
mov
dec
inc
popf
and
xchg
loop
int
adc
(bad)
sti
cmp
push
jg
es
outs
xor
sbb
jae
xchg
daa
cmps
or
xchg
push
inc
inc
inc
mov
sub
repz
cmp
or
int
cmps
lahf
jo
pop
test
arpl
mov
aas
ret
jae
push
cdq
pop
jbe
fsub
xor
sub
arpl
dec
jp
sub
mov
inc
mov
mov
xlat
sbb
ds
and
(bad)
jmp
sbb
mov
clc
pop
add
hlt
mov
aaa
inc
inc
ret
sub
push
or
sbb
ret
scas
push
retf
push
(bad)
sub
lods
int
xor
sub
int3
in
(bad)
fcom
pop
mov
sbb
jne
int
cld
js
ret
movs
int
sub
into
aas
movs
cwde
pop
push
jecxz
push
jmp
(bad)
fwait
repz
repz
lods
aad
std
xor
mov
sub
sbb
push
movs
into
cmp
cmp
clc
jbe
push
cmc
adc
arpl
and
arpl
sbb
mov
int
imul
adc
test
fdiv
pop
dec
sub
retf
xor
test
jnp
add
lods
sar
dec
add
jno
iret
cs
in
or
in
cli
add
nop
(bad)
mov
sub
jmp
mov
jb
shl
cmps
jbe
je
sbb
mov
lods
xor
inc
mov
mov
hlt
mov
dec
sub
mov
lods
fiadd
mov
aam
mov
xor
mov
sbb
outs
jecxz
enter
fld
mov
popf
xor
and
or
outs
nop
(bad)
jnp
inc
fdivr
jecxz
call
test
cdq
mov
jp
iret
(bad)
das
cwde
int3
daa
mov
repnz
and
and
int
jne
lsl
add
push
mov
mov
xchg
mov
jb
pushf
sub
ins
int3
ds
(bad)
fbld
addr16
jno
icebp
xchg
mov
sbb
push
lock
mov
pop
aas
scas
clc
(bad)
mov
fmul
add
push
ja
std
(bad)
mov
add
xchg
xor
fadd
aad
ja
cmc
pushf
inc
jnp
js
ins
shl
loop
inc
mov
mov
xor
lods
push
push
sahf
enter
stos
dec
push
xor
into
mov
shr
xor
jae
into
dec
add
nop
or
or
int3
push
outs
pop
bsr
fisubr
movs
jbe
sub
aam
xor
push
lahf
movs
mov
cmc
into
xchg
dec
jae
dec
dec
stc
stos
jecxz
push
movs
push
cs
pusha
mov
enter
push
cwde
lods
test
jecxz
lea
aaa
mov
cs
out
int3
inc
jns
mov
sahf
push
jnp
mov
(bad)
icebp
inc
dec
ror
lock
mov
in
cmp
jae
pop
aaa
pop
ret
and
stc
xchg
inc
inc
push
pop
shr
push
(bad)
cmc
adc
movs
cs
cwde
cdq
cmps
sub
js
cmp
rcr
jg
adc
cmp
sbb
push
mov
mov
inc
es
push
jg
loopne
(bad)
mov
mov
mov
or
sbb
sub
mov
mov
aam
lock
aaa
fmul
jmp
aaa
and
jb
ss
xchg
mov
mov
cmp
cmp
sbb
xchg
scas
cmp
mov
sub
(bad)
pop
aas
mov
inc
pop
or
in
push
add
adc
mov
push
jns
dec
cs
js
xor
sub
lods
mov
xor
cmp
sub
inc
or
sbb
sub
rcr
xor
dec
arpl
push
enter
push
xchg
cmc
imul
lds
cmp
xchg
mov
movs
(bad)
pop
cwde
neg
mov
jae
(bad)
pop
mov
sahf
sar
and
sbb
popa
jecxz
xor
lock
or
js
pop
mov
xchg
cmp
mov
sahf
out
(bad)
ror
(bad)
popf
sti
and
and
pop
movs
in
xchg
nop
mov
push
iret
push
cmp
test
inc
rol
xlat
cmps
int
mov
xchg
imul
enter
daa
mov
pop
inc
jmp
jge
or
outs
dec
pop
test
and
cdq
test
dec
pop
push
test
inc
movs
arpl
push
loop
shl
int
add
cmps
(bad)
dec
or
jle
mov
push
push
scas
sti
int
nop
cs
dec
int3
cmp
fld
out
aad
movs
and
ret
lock
cs
loopne
fisubr
data16
cmps
dec
xor
lods
xor
sbb
or
pop
adc
add
sbb
mov
dec
retf
cmp
push
shl
(bad)
ficomp
mov
jge
mov
xor
cli
aas
cli
fnstenv
lods
ins
jecxz
cld
push
popf
jecxz
jmp
sbb
adc
retf
lds
aas
js
dec
daa
dec
cld
sub
push
push
mov
aas
cs
aaa
repnz
test
sar
jns
jg
push
xor
aad
sbb
or
mov
test
or
push
or
mov
fidiv
sbb
retf
imul
jae
push
add
lods
push
cmp
sub
clc
aas
call
mov
or
lock
mov
sub
xor
scas
sub
or
mov
ds
adc
pop
jns
mov
adc
and
jae
mov
ret
ret
push
mov
xor
jmp
(bad)
dec
out
and
lods
jle
xchg
retf
sbb
gs
stc
out
sahf
mov
call
cmps
mov
mov
sahf
dec
add
mov
sub
and
push
or
mov
jo
or
pop
aaa
ror
out
cmp
lahf
cwde
mov
daa
or
dec
movs
inc
cmp
jp
inc
scas
mov
cmp
jmp
movs
mov
adc
push
lods
mov
into
pop
mov
test
sti
and
and
enter
adc
mov
les
sub
fmul
fwait
cmc
dec
pop
int
and
icebp
aad
out
pop
mov
adc
push
adc
out
movzx
push
lods
mov
sub
and
cdq
push
cmp
stos
mov
cmp
jge
pop
ja
pop
into
sub
out
and
jmp
or
push
not
dec
pop
push
push
cmp
out
in
mov
int
ja
xchg
mov
cdq
push
sub
retf
sub
int3
ins
dec
sub
mov
add
loope
fwait
imul
sahf
outs
sub
and
(bad)
and
add
add
push
fwait
jb
mov
mov
lahf
mov
ds
xor
out
sar
push
ja
ret
or
jge
mov
inc
sbb
sar
retf
inc
adc
mov
inc
bound
mov
ret
ja
cs
mov
push
imul
inc
sbb
fsub
sbb
ins
addr16
div
jge
mov
pop
popa
inc
jl
jbe
enter
add
outs
pop
push
clc
sar
mov
mov
xor
and
jb
outs
dec
push
in
(bad)
jmp
adc
sti
dec
xchg
mov
pop
std
test
lods
pop
sub
xor
out
cmp
xchg
popf
pop
jg
shl
ret
fdivr
xchg
add
mov
mov
call
mov
cmp
ficomp
mov
lea
std
inc
cmp
out
push
or
mov
cmc
adc
cmp
fidivr
(bad)
inc
(bad)
fisttp
pushf
cmps
push
jmp
out
and
ins
mov
hlt
cdq
jbe
jle
cmp
aaa
inc
cwde
jmp
ins
(bad)
dec
xchg
cmp
(bad)
xor
add
pushf
inc
sbb
jg
mov
mov
add
push
jle
push
fimul
loopne
cmp
cld
adc
(bad)
mov
pushf
or
push
xor
sbb
mov
arpl
sub
inc
enter
push
add
inc
mov
add
inc
mov
fstp
push
shl
jae
cwde
stos
dec
pop
daa
xor
in
test
pop
pop
call
xor
mov
adc
movs
imul
cmp
mov
repz
cld
xchg
cmp
sub
mov
mov
xor
add
sub
(bad)
adc
rol
pop
(bad)
or
jle
mov
mov
and
push
repnz
fnsave
cmps
add
or
outs
imul
arpl
(bad)
out
or
loopne
dec
push
jl
rcr
or
mov
sbb
ins
call
and
aam
xor
(bad)
jmp
aam
je
and
push
rcr
lahf
dec
sub
mov
shl
pop
lods
call
dec
(bad)
cmp
loop
add
stos
call
movs
sbb
lahf
push
pop
mov
mov
ds
fsubr
mov
les
mov
push
inc
ins
dec
add
data16
leave
loopne
ret
into
add
cmps
pop
mov
cs
add
jge
dec
mov
mov
jmp
scas
leave
outs
sub
push
fisubr
mov
push
les
cmp
adc
push
or
adc
xchg
into
out
cmps
in
and
add
cmps
fbld
xchg
xchg
inc
fisttp
push
imul
mov
push
loope
and
std
push
mov
push
mov
cmps
sti
push
sahf
sub
fld
das
int
dec
test
jbe
jne
lea
pop
retf
mov
popf
mov
rcl
stos
out
bound
imul
mov
out
in
xchg
sub
dec
mov
dec
aas
cmc
mov
mov
inc
iret
js
sti
mov
jge
mov
clc
sbb
sub
aad
mov
inc
mov
xor
xchg
dec
ja
data16
stos
xchg
jle
out
repnz
lods
jmp
pop
icebp
inc
retf
and
ret
cmp
stc
movs
(bad)
pop
and
push
mov
scas
popf
(bad)
fdivr
cld
mov
hlt
mov
inc
push
inc
mov
push
xchg
xchg
xor
jmp
sahf
inc
scas
mov
xchg
sub
ficomp
sbb
outs
mov
addr16
nop
jecxz
jne
in
iret
adc
add
loop
ja
imul
jle
pop
aad
loopne
xchg
mov
std
out
lods
mov
std
(bad)
mov
jg
and
xchg
jmp
push
repnz
dec
xor
repnz
jge
call
add
popf
pop
hlt
push
fadd
sbb
fild
xchg
call
pushf
xchg
cdq
xchg
rol
xor
and
daa
jns
and
ror
jp
movs
jp
sbb
xchg
jmp
arpl
dec
lods
ret
pop
mov
rcr
movs
adc
or
fbstp
in
ja
jmp
and
outs
add
fisttp
and
je
out
jg
sub
push
inc
xor
loop
test
xchg
cmp
pop
xor
test
clc
push
pop
jmp
or
loope
rol
cld
mov
mov
std
and
add
mov
lods
retf
mov
leave
mov
inc
test
dec
jb
sti
push
jl
sub
int3
mov
inc
push
mov
jb
lds
pop
add
xor
inc
add
add
fmul
fidivr
jne
je
sbb
xor
in
stos
and
icebp
ins
test
mov
arpl
push
add
ret
fimul
sub
sbb
jns
xchg
and
mov
and
bound
jecxz
dec
(bad)
adc
xchg
repnz
adc
loopne
imul
mov
mov
xlat
(bad)
sub
(bad)
jne
aad
inc
jno
mov
popf
cmp
pop
sub
out
(bad)
mov
cmp
fild
popa
movs
dec
sub
sahf
adc
sub
or
call
pop
add
leave
das
push
movs
push
sbb
dec
loopne
cmp
mov
das
icebp
mov
and
cmp
dec
call
and
loopne
sahf
mov
and
xor
ror
pop
cli
xor
sub
xor
mov
data16
cmp
fwait
les
or
inc
out
xchg
pop
inc
cmp
f2xm1
mov
aaa
jle
fst
sub
lock
retf
xlat
sub
clc
ss
cmps
stc
int3
add
fisub
adc
enter
jo
push
(bad)
ins
adc
mov
clc
push
movs
jns
xchg
sub
pop
xor
mov
into
mov
int3
xor
and
imul
cmp
loope
cld
mov
fsubr
sub
sbb
inc
jp
ret
sub
push
fcom
push
into
jmp
xor
pop
(bad)
aam
and
int
lock
adc
test
sar
sbb
lods
icebp
mov
stos
pusha
test
xchg
jmp
arpl
rcl
imul
cdq
out
jecxz
(bad)
das
rol
call
stos
push
xor
mov
sbb
sahf
ins
btr
cmp
dec
dec
pop
jle
cmp
mov
inc
les
js
mov
xchg
sub
lods
sbb
inc
and
rol
retf
leave
out
(bad)
movs
xor
xchg
inc
movs
cmp
jno
and
xchg
dec
fadd
sub
mov
jns
add
not
jb
adc
pop
xchg
and
jge
sub
mov
inc
xchg
test
scas
sub
daa
push
popa
or
mov
mov
sub
rol
ss
sbb
sbb
fidivr
out
adc
push
xor
and
es
scas
sbb
icebp
xor
and
jae
xchg
mov
or
push
inc
ds
push
stos
scas
add
lods
jg
mov
push
sti
ins
sbb
out
or
sti
imul
lock
leave
lock
sub
test
leave
daa
push
jae
jbe
fwait
xor
fistp
cmp
sar
repz
mov
outs
xor
pop
cmps
fild
aad
in
mov
inc
in
pop
daa
mov
push
loope
fxch
lds
loopne
or
rcr
test
mov
call
cmp
outs
fwait
sahf
xor
dec
out
or
mov
mov
jns
test
cmp
and
addr16
cmps
icebp
mov
xchg
adc
sbb
ds
ret
dec
mov
mov
jle
xor
push
xor
jle
(bad)
cmps
je
ret
scas
xor
add
loope
icebp
and
jmp
(bad)
sbb
add
cmp
mov
add
jl
icebp
fwait
cmps
call
jle
je
cmp
daa
in
adc
into
mov
xchg
add
loope
sub
cmps
cld
inc
(bad)
neg
test
and
sti
mov
out
std
xchg
jp
addr16
dec
popa
pop
fidivr
xchg
mov
pop
adc
cmp
add
or
call
in
dec
test
int
push
add
lods
(bad)
iret
inc
adc
outs
push
rcr
mul
lods
mov
xor
fisubr
in
add
push
retf
dec
mov
icebp
out
adc
ficomp
mov
sub
(bad)
and
fidiv
ja
sbb
or
retf
scas
fwait
mov
add
fxch
push
enter
sahf
mov
repz
mov
lds
xchg
addr16
js
mov
stos
test
add
add
sub
jb
cmp
xchg
js
add
adc
jbe
add
ja
int
xchg
jae
add
arpl
call
push
push
mov
dec
lds
adc
sub
and
popa
jb
push
lods
inc
xor
add
ror
addr16
std
sub
pop
out
mov
lods
lea
push
inc
or
jmp
(bad)
push
cmc
pop
icebp
cmp
mov
sub
cmps
shl
jnp
lahf
int
sbb
out
mov
jmp
pop
call
in
xor
jnp
mov
xchg
iret
cs
aam
sub
jg
pusha
in
scas
sahf
ja
sbb
cmp
arpl
or
and
int
xchg
imul
test
mov
sti
cmps
and
and
cmc
inc
inc
mov
mov
lods
inc
lock
push
xchg
jbe
out
lahf
or
mov
mov
ret
mov
or
push
mov
mov
xchg
sub
push
xchg
push
xor
fs
mov
jl
js
or
es
aad
adc
out
sti
add
sub
test
mov
(bad)
fnstenv
mov
sahf
test
cmp
jge
and
hlt
js
xchg
mov
addr16
jnp
test
ins
mov
push
push
xor
loopne
das
add
xchg
mov
cs
call
jmp
icebp
xchg
lock
stc
xor
fucomi
stos
(bad)
shr
pop
out
xchg
mov
imul
stc
mov
mov
mov
outs
push
mov
mov
mov
idiv
dec
in
test
push
sub
jge
push
xor
or
jb
inc
jp
pop
ds
lds
ret
or
cs
ins
retf
ds
mov
mov
mov
cmps
cmc
or
into
int3
das
out
inc
mov
xchg
icebp
lock
out
xor
lock
shl
and
std
jo
jle
and
jne
sub
mov
pushf
add
dec
jp
sub
int3
push
imul
mul
mov
(bad)
jb
loop
rcl
add
cmps
les
cmp
adc
pop
or
and
sub
ja
inc
xchg
mov
mov
mov
push
movs
div
sbb
dec
or
xchg
in
iret
cwde
sti
pop
jmp
mov
add
jnp
ds
sub
inc
repnz
xchg
ret
cmps
cmp
int3
mov
adc
test
add
mov
xchg
enter
mov
mov
jg
pop
arpl
aad
jmp
mov
out
ror
clc
or
xchg
fldenv
(bad)
leave
in
scas
adc
(bad)
xor
retf
add
pop
mov
(bad)
pop
dec
jns
fcmovu
xor
xor
fsubr
sbb
pop
js
mov
xor
mov
pop
xchg
and
into
addr16
movs
sub
jecxz
js
ja
dec
add
ss
inc
jge
lods
xor
(bad)
aaa
mov
push
add
lods
mov
add
inc
adc
retf
sub
jb
(bad)
xor
sbb
cs
mov
adc
sahf
(bad)
sar
or
xor
sub
and
pop
rcl
dec
xor
int
ret
int3
ins
cmp
sbb
scas
rcr
cmp
mov
cmp
fstp
aas
scas
data16
mov
and
test
xchg
sub
add
jecxz
xor
adc
cmp
fsub
test
jmp
mov
cmp
dec
cli
cmp
call
jecxz
arpl
outs
addr16
mov
and
mov
lahf
mov
(bad)
hlt
mov
mov
lods
jb
mov
lods
out
gs
mov
cs
or
push
cmps
pop
inc
int
or
inc
fucomip
and
or
pop
xor
xchg
add
rep
xchg
pop
loop
inc
(bad)
out
adc
push
xchg
cdq
pop
out
xor
hlt
popa
shr
not
sbb
enter
in
movs
fstp
fnstenv
sub
test
and
in
shr
mov
imul
and
sub
adc
in
mov
lahf
jmp
out
loope
sub
data16
mov
and
jmp
sub
xchg
xchg
push
dec
xchg
setnp
neg
lea
jo
mov
cmc
rol
sbb
std
jae
pop
(bad)
jmp
cmps
cmps
movs
add
in
daa
push
outs
cmp
mov
pop
fwait
xor
mov
push
mov
retf
call
mov
mov
into
mov
jnp
pop
lock
adc
xchg
mov
ret
mov
mov
cld
enter
jp
not
(bad)
and
mov
mov
cmp
adc
je
jb
mov
jge
inc
mov
or
or
aaa
mov
imul
scas
in
pop
or
or
ss
xchg
sbb
mov
sti
cmps
repnz
(bad)
adc
adc
push
cmp
stos
in
scas
fst
xor
fucom
int3
in
dec
arpl
je
pop
push
aas
cmp
cwde
push
cmps
mov
movs
cmp
int
cmps
adc
test
adc
or
inc
jne
xor
pop
push
pushf
pop
xor
jbe
shr
es
sbb
xchg
push
iret
mov
cmps
ss
xor
repnz
jbe
push
sub
fiadd
cmps
stc
pop
jmp
cmc
icebp
xor
test
mov
mov
mov
pusha
mov
mov
(bad)
les
jle
jp
arpl
xchg
mov
(bad)
imul
movs
cli
ret
mov
sbb
sbb
cmc
push
push
(bad)
sbb
mov
push
sbb
jno
loope
cmp
pop
nop
mov
xor
add
xor
sub
imul
or
cmp
inc
ficomp
gs
jle
fwait
xor
pop
cmps
adc
or
push
aaa
dec
test
mov
xchg
inc
or
mov
ins
jno
inc
in
xor
inc
stc
jl
cmp
int3
pop
jno
call
mov
add
mov
retf
push
jo
jge
inc
bound
(bad)
retf
es
sub
imul
jp
fs
push
or
sbb
pop
cmp
dec
and
outs
pop
es
out
shl
jmp
imul
jo
push
adc
loopne
add
mov
lods
inc
xchg
(bad)
jle
mov
mov
ss
data16
push
add
retf
push
mov
cmp
dec
cmp
enter
data16
bnd
int3
xchg
icebp
or
jns
fld
add
in
ror
sbb
icebp
out
xchg
ficom
sbb
jge
pop
pcmpgtw
out
mov
aaa
call
jmp
rol
sbb
xor
out
mov
inc
xchg
movs
adc
not
mov
cmp
mov
xchg
movs
pop
push
test
push
(bad)
jg
push
in
push
adc
std
leave
shl
in
sub
add
mov
stos
or
das
xlat
xchg
adc
and
in
popf
mov
(bad)
sub
jmp
sbb
sbb
cli
jecxz
retf
retf
mov
or
inc
(bad)
mov
xor
pop
pop
in
inc
push
mov
ins
retf
or
jae
stos
mov
repz
pop
shl
xchg
retf
shr
mov
(bad)
adc
pop
nop
ficomp
jecxz
adc
fist
or
sub
test
push
les
sbb
cmp
sbb
jecxz
test
call
adc
or
mov
imul
jmp
mov
mov
adc
push
stc
jp
out
add
mov
dec
dec
aad
icebp
inc
push
(bad)
sub
ja
movs
pusha
mov
mov
test
outs
je
pop
(bad)
in
(bad)
mov
mov
cli
and
mov
jmp
mov
adc
inc
cmp
lahf
enter
inc
sub
(bad)
pop
fiadd
add
xor
xor
sbb
ss
bnd
sub
xor
jns
push
daa
stos
outs
mov
stos
lods
neg
mov
mov
ret
(bad)
mov
stos
xchg
dec
into
add
ds
rol
adc
xchg
repnz
sub
lds
cdq
adc
jns
fwait
sti
mov
sub
inc
xchg
mov
in
push
cdq
pop
xchg
and
jns
xchg
add
dec
and
xchg
imul
mov
or
out
je
int
iret
and
adc
sub
ret
jle
(bad)
loop
push
pop
lds
loope
in
cmp
and
jno
dec
shl
jl
fcmovnu
fst
push
aad
imul
add
cmp
cmp
scas
sbb
add
or
les
pop
scas
add
adc
push
or
cld
mov
xor
scas
jno
pop
add
(bad)
push
aas
scas
jnp
gs
sbb
movs
cmp
xor
adc
pop
mov
push
bound
into
mov
(bad)
shl
cmps
mov
push
push
mov
shl
add
xchg
adc
xor
inc
and
js
scas
mov
mov
xchg
test
scas
stos
popf
xchg
in
push
inc
add
mov
stos
pop
xchg
ret
pop
imul
shl
and
imul
std
(bad)
xor
cmps
lahf
ficomp
add
int3
push
jecxz
stos
and
dec
jae
in
or
ja
add
mov
inc
scas
jno
pop
jns
ss
xor
mov
rcl
fnsetpm(287
leave
cmps
mov
pavgw
mov
gs
rol
enter
inc
inc
adc
pusha
xor
call
inc
in
out
sub
push
daa
xor
std
mov
gs
adc
int
lods
inc
(bad)
mov
popf
dec
loope
retf
test
and
jno
pop
xor
jmp
xor
popa
(bad)
adc
and
add
call
nop
dec
cdq
jmp
mov
popf
cs
cmp
into
inc
scas
xchg
push
xor
xor
xchg
pop
mov
pop
imul
push
dec
cmp
pop
test
dec
xchg
sbb
sbb
dec
cld
dec
bound
mov
cmp
lods
shl
pop
fwait
dec
and
sbb
xor
or
ret
pop
adc
inc
xchg
cmps
push
vcmpsd
nop
or
sahf
es
pop
pop
pop
dec
fmulp
or
sub
inc
ret
sar
or
lahf
shl
push
sub
loopne
fdiv
(bad)
test
fwait
imul
cmp
sar
fsubrp
jp
push
inc
push
in
sbb
ret
ins
pop
(bad)
lea
adc
lea
outs
aaa
arpl
mov
mov
rol
or
loop
ret
pop
loop
daa
call
cmp
or
mov
jp
add
adc
(bad)
jle
pop
iret
scas
in
aas
aam
lds
jmp
frstor
gs
and
and
pop
clc
add
dec
retf
out
out
add
push
push
data16
push
and
dec
loopne
mov
push
push
push
sbb
adc
mov
dec
data16
cs
adc
ret
mov
fistp
jle
ins
test
pop
xchg
scas
jo
cmc
push
pop
dec
mov
push
xorps
cmp
add
and
pop
dec
jnp
pop
dec
fwait
stc
add
js
les
xchg
int3
dec
jg
popa
and
in
jp
and
and
push
out
into
lods
sahf
sahf
int3
pop
(bad)
arpl
or
shl
xor
inc
cmps
jg
clc
mov
jl
ror
test
call
sub
push
adc
cmp
mov
jae
jge
mov
movs
inc
cld
xchg
mov
setle
dec
enter
add
dec
lods
sbb
dec
into
mov
jmp
inc
xchg
leave
jbe
sbb
adc
jecxz
jecxz
retf
push
arpl
and
pop
lea
stos
test
mov
sub
and
es
ins
and
popa
cmp
test
cmp
push
jbe
(bad)
jle
pop
sahf
add
mov
mov
movs
pop
mov
stc
or
and
mov
aam
fild
repnz
pop
scas
pop
or
jecxz
pop
add
xchg
and
sub
cdq
dec
and
or
retf
mov
ds
push
out
(bad)
push
sbb
xor
fidivr
js
dec
out
sar
in
aaa
mov
pop
fld
jb
enter
clc
push
fcomp
ror
pop
int
cmp
push
add
ret
jbe
jmp
mov
je
lods
mov
add
cmp
and
mov
mov
sub
stc
in
mov
mov
std
data16
fnsave
aad
arpl
cmp
loop
xchg
popf
popa
fadd
sbb
addr16
data16
adc
loopne
cwde
push
cmp
inc
enter
je
sub
das
mov
div
cmps
dec
leave
hlt
cmps
push
xor
clc
mov
sbb
push
push
jp
xor
outs
aam
shr
pop
adc
sbb
clc
inc
inc
les
and
(bad)
push
and
xchg
push
push
scas
mov
jns
mov
mov
call
setne
pop
cmps
cdq
xchg
call
test
call
mov
mov
or
loope
loope
xchg
test
cmps
je
mov
inc
movs
pop
fs
daa
popa
mov
mov
add
xchg
imul
jns
ins
ja
xor
loope
ds
xchg
ins
sub
out
dec
das
fdivr
inc
jg
or
cli
push
push
jmp
jnp
lock
inc
rcl
in
call
lods
xchg
jecxz
add
inc
jo
cwde
clc
loope
sub
or
adc
sahf
add
mov
stc
inc
pop
mov
cmp
loop
arpl
call
repz
imul
sub
and
cwde
add
dec
dec
pop
fcos
in
mov
mov
sti
je
sub
je
lock
mov
fild
jmp
call
pop
pushw
jbe
mov
test
(bad)
and
jno
pop
popa
sahf
or
mov
sub
cmp
and
jmp
mov
sub
scas
sbb
lahf
or
xchg
mov
sbb
ins
test
xor
adc
stc
rol
xchg
xchg
pop
mov
std
push
mov
stos
mov
cs
and
adc
sbb
out
pop
pop
popf
jne
xchg
jge
adc
inc
inc
sub
xchg
mov
or
and
sbb
pop
inc
pop
ror
inc
adc
mov
(bad)
add
icebp
xor
adc
(bad)
xchg
inc
es
mov
mov
repnz
test
imul
lahf
dec
mov
loop
add
sub
mov
imul
mov
lods
push
adc
movs
adc
dec
jle
movs
retf
cmp
inc
sbb
outs
and
out
inc
test
push
out
aam
jmp
cmp
stos
mov
shr
imul
pop
ret
inc
jecxz
popf
ret
add
pop
aas
xor
aas
mov
into
dec
aad
fld
jl
pop
or
pop
cmps
xor
cmp
xchg
(bad)
dec
and
xor
sub
xchg
or
(bad)
cli
movs
call
mov
mov
add
dec
scas
inc
(bad)
pop
push
fcmove
cmp
add
adc
sbb
xchg
or
je
cmp
imul
inc
mov
cmp
iret
fisubr
dec
inc
les
pusha
add
or
sbb
mov
je
(bad)
fucomip
into
xor
push
ss
loop
and
fs
adc
mov
xchg
imul
dec
outs
dec
sar
sub
cs
sahf
mov
fimul
jnp
or
lds
inc
cmp
out
ror
cdq
push
push
cmp
xlat
shr
or
add
inc
mov
icebp
test
adc
shl
cwde
and
add
std
xchg
(bad)
into
out
je
inc
push
cdq
mov
sti
pop
dec
and
movs
add
xchg
leave
mov
add
gs
jo
aad
push
cmp
xchg
addr16
das
xor
and
adc
sbb
mov
pop
jle
mov
jp
gs
std
fadd
and
ja
out
mov
mov
mov
pop
push
mov
dec
mov
int
push
pop
mov
push
pop
xchg
ret
(bad)
iret
out
sbb
mov
iret
mov
cmp
pop
das
mov
mov
adc
xor
hlt
icebp
mov
dec
fs
shr
out
test
shl
jge
lahf
test
add
(bad)
mov
fcom
imul
fstp
jno
jb
or
cld
mov
add
mov
call
out
lahf
cmps
add
call
xor
ja
ror
loope
sub
sbb
xchg
test
mov
sub
pop
pushf
test
pusha
out
imul
(bad)
rcl
je
addr16
fwait
out
add
xlat
add
repnz
(bad)
in
mov
sub
xor
push
or
mov
mov
jmp
dec
mov
jbe
add
inc
push
mov
sbb
(bad)
mov
scas
mov
mov
fldl2e
xor
sbb
xor
lahf
jecxz
sbb
in
push
mov
into
lods
cmp
aam
pop
shr
xor
clc
lods
scas
sbb
pop
push
mov
dec
(bad)
outs
outs
stos
add
sbb
pop
adc
mov
shl
add
inc
mov
fstp
dec
cmp
mov
in
imul
jo
dec
(bad)
sbb
mov
shr
enter
loop
mov
mov
(bad)
inc
les
sahf
int3
push
add
pop
xor
enter
stos
call
cli
in
adc
cld
push
and
xor
jmp
mov
pop
imul
fild
test
setl
jns
repnz
mov
add
add
fwait
mov
push
adc
shl
dec
cmp
xor
loopne
in
ror
lea
pushf
cmp
jbe
fwait
fwait
in
xor
int3
jecxz
jmp
out
sbb
aam
fwait
adc
xchg
lods
dec
pop
push
inc
add
cmp
cmps
xor
sbb
inc
leave
xchg
inc
sbb
fucomip
cmps
pop
and
sub
loop
ret
mov
mov
and
mov
mov
shl
arpl
sbb
xchg
aas
(bad)
stc
jo
fild
and
cmp
xor
mov
es
das
mov
ret
jo
dec
jl
cmp
xor
xor
push
cmc
push
xor
icebp
cmp
mul
je
jp
test
sbb
retf
mov
jle
outs
jg
dec
cmp
inc
inc
sub
mov
xor
(bad)
inc
cmp
(bad)
pop
push
(bad)
repz
sahf
mov
enter
inc
call
pop
jb
dec
cmp
and
cmps
jo
addr16
sbb
or
shl
sub
jb
inc
inc
inc
ficom
in
imul
mov
js
test
and
movs
mov
out
sub
add
shl
pop
xchg
sub
mov
lods
sbb
adc
scas
or
hlt
hlt
stos
push
int3
movs
shr
sub
inc
sbb
push
cmp
clc
fst
loop
fcomp
xchg
mov
or
mov
inc
dec
sub
sti
cli
mov
dec
movs
lds
mov
cmp
std
fwait
dec
iret
sbb
xlat
push
sbb
clc
add
shl
jae
hlt
mov
jno
ret
mov
(bad)
mov
pop
jp
arpl
pop
add
fwait
aam
mov
push
sar
add
mov
and
adc
fcom
fdiv
ins
jg
fwait
out
and
test
repz
xor
pop
ss
loopne
in
jmp
call
cld
bound
dec
and
cld
sbb
and
cmp
mov
sub
scas
cmc
and
data16
sub
lock
inc
mov
cmp
stos
mov
mov
cwde
ret
push
push
fwait
call
or
in
lods
or
pop
jnp
outs
icebp
retf
cs
jmp
bound
add
dec
push
or
pop
jbe
fsubr
cmc
pop
mov
jg
mov
mov
and
scas
out
in
arpl
push
aad
jecxz
push
push
mov
xchg
mov
(bad)
adc
and
sbb
lock
sar
or
dec
cmp
jmp
pop
outs
scas
pop
sub
sbb
js
cmp
imul
push
mov
and
cli
xchg
xchg
das
jo
sbb
dec
pop
jle
fbstp
push
adc
dec
pusha
cmp
fist
or
adc
sbb
ins
pop
in
jns
inc
or
sub
repz
out
sub
pop
mov
pop
xchg
das
dec
jmp
(bad)
pop
stc
or
aam
pop
xchg
cmp
or
fsub
in
stos
mov
retf
call
sub
fist
xchg
int3
cld
sub
push
shr
adc
(bad)
imul
jne
jbe
jae
clc
jmp
xor
pop
test
cmp
pop
add
dec
imul
xchg
jle
dec
xor
xchg
(bad)
and
adc
sub
and
sar
jae
(bad)
aaa
(bad)
std
das
push
inc
mov
or
cli
dec
int3
dec
addr16
in
ins
loope
pop
xchg
fild
(bad)
jns
fwait
pushf
and
mov
jbe
sahf
inc
mov
out
xchg
imul
push
pop
pop
and
sbb
sbb
mov
xor
sub
es
and
pop
(bad)
inc
jl
push
lods
hlt
outs
pop
xlat
jge
jg
pop
xor
test
aam
adc
xchg
mov
adc
adc
div
lods
cmp
std
mov
outs
popf
ds
add
mov
cld
sar
push
shr
sbb
dec
fimul
pop
(bad)
xchg
pop
cdq
aad
fnstenv
mov
pop
dec
shl
sbb
cdq
jo
jecxz
push
imul
or
sub
jge
xlat
not
jo
mov
arpl
ins
repz
pop
gs
js
push
mov
xchg
jno
lods
adc
popa
out
jbe
lods
fst
cmp
xor
ret
xchg
fdivr
cmp
pushf
push
ret
cmps
dec
adc
stos
mov
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
and
and
mov
and
add
add
xor
lds
lock
aam
push
push
jno
(bad)
mov
in
inc
stos
and
fstp
in
dec
popf
ss
cmp
xlat
and
stc
sbb
gs
retf
stc
repz
inc
cmps
inc
ficomp
daa
xor
mov
outs
mov
loop
(bad)
pop
ins
jb
in
xlat
add
into
cwde
(bad)
hlt
call
cmc
mov
shl
xor
repnz
inc
icebp
outs
mov
push
adc
mov
dec
push
or
mov
mov
sahf
test
or
mov
arpl
mov
jp
imul
push
xchg
in
jns
fisubr
sar
loope
sbb
mov
or
sbb
les
icebp
out
push
shr
retf
mov
xchg
or
xor
xor
je
loopne
mov
imul
and
pop
(bad)
outs
fcom
dec
cmps
sub
push
frstor
inc
sbb
add
(bad)
xchg
call
(bad)
inc
mov
add
(bad)
mov
inc
sbb
or
ja
(bad)
mov
(bad)
cmp
daa
sub
aaa
gs
adc
cmps
in
imul
xor
mov
pushf
jnp
jmp
push
pushf
xlat
push
xchg
pop
mov
dec
sub
push
fcmove
push
and
mov
mov
(bad)
push
pop
pushf
push
inc
ins
push
das
adc
xchg
loope
xchg
jle
pop
arpl
adc
mov
daa
jl
aad
(bad)
loopne
cmp
cmc
jnp
add
mov
test
mov
pop
out
daa
stos
mov
push
and
mov
stos
xor
aam
loopne
or
jl
aad
loop
add
lea
xchg
mov
push
out
pushf
lods
sti
mov
cdq
lods
push
cmps
repnz
sub
ror
sbb
cmps
push
fxch
test
test
adc
mov
xor
or
imul
jp
aam
add
mov
dec
mov
in
test
pop
xchg
fcmove
adc
test
ins
and
loop
jl
frstor
cmp
mov
push
xor
iret
out
enter
popa
arpl
retf
ret
inc
shl
dec
shl
xor
shr
inc
sahf
stos
xchg
xchg
int3
outs
int
fidiv
mov
loope
repnz
add
push
shl
clc
aaa
pop
test
jb
iret
xor
sub
cmp
xchg
mov
inc
icebp
mov
xchg
gs
mov
xor
jns
imul
popa
ret
xor
sti
push
cli
cmp
pop
dec
sahf
cmps
inc
ds
clc
lds
ret
sub
int3
mov
push
push
cmp
fxch
out
lods
sbb
cmp
ret
sbb
outs
cmp
xchg
sub
in
out
loopne
fwait
jbe
icebp
pop
mov
mov
mov
mov
inc
sti
mov
add
push
push
ret
mov
mov
dec
inc
outs
icebp
dec
xor
test
(bad)
(bad)
lea
add
aad
push
je
mov
add
(bad)
adc
inc
and
adc
mov
jo
push
adc
jae
fbstp
or
jns
mov
fsubr
xor
push
adc
(bad)
pushf
jg
call
loope
push
in
jns
jmp
retf
jle
loope
mov
adc
gs
adc
test
(bad)
mov
aas
adc
popf
cmp
mul
retf
pop
out
fbld
or
or
into
cwde
cmp
daa
cmp
inc
(bad)
push
fwait
mov
or
iret
les
mul
in
fs
fisttp
jge
shl
sbb
jge
retf
enter
call
loop
enter
fwait
leave
mov
rcr
dec
cli
adc
mov
push
repz
inc
jecxz
jb
or
nop
add
push
jb
inc
mov
pop
mov
adc
sahf
gs
mov
popf
aam
lock
adc
and
ja
xchg
enter
sbb
mov
inc
cmp
push
fld
shl
call
adc
jmp
mov
inc
or
fnsave
ins
(bad)
sbb
adc
fmul
test
dec
inc
push
test
imul
or
pop
xor
enter
sub
aas
sub
fwait
xchg
sbb
add
cmp
mov
sbb
outs
mov
in
mov
bound
jae
popa
(bad)
aad
xchg
dec
xor
jmp
xor
jae
cmps
pop
in
xchg
sahf
daa
data16
sub
cmp
dec
push
ins
cmc
jno
sbb
mov
aam
mov
mov
in
inc
loopne
pop
call
gs
ins
xcrypt-ecb
cmps
psllw
mov
retf
pusha
xor
mov
cmp
mov
mov
rep
sbb
and
mov
adc
mov
mov
rol
push
jmp
in
es
sbb
in
out
dec
test
cs
sar
inc
call
xchg
xchg
push
mov
sbb
and
mov
loope
sar
push
mov
jp
je
dec
dec
jg
retf
test
adc
push
pop
test
lods
cdq
inc
(bad)
icebp
out
inc
dec
and
arpl
add
jnp
out
jae
mov
jb
pop
mov
dec
jmp
gs
icebp
dec
inc
jnp
xor
lods
leave
ror
mov
addr16
fs
cmp
adc
enter
movs
xor
push
sahf
add
call
dec
mov
add
jg
dec
mov
cmps
mov
outs
cmp
std
sbb
(bad)
ss
mov
(bad)
add
and
lea
sbb
mov
arpl
mov
xchg
and
push
adc
dec
or
mov
pop
xchg
repz
mov
leave
in
jnp
in
and
mov
(bad)
sbb
jl
test
lods
repnz
xor
adc
mov
test
and
push
mov
mov
fist
stos
cmp
js
lea
nop
aas
in
pop
mov
(bad)
cwde
mov
inc
jbe
pextrw
imul
daa
push
push
(bad)
in
adc
cmp
mov
mov
mov
inc
add
std
mov
bound
jmp
aas
cs
dec
and
push
scas
daa
mov
fst
jle
sbb
(bad)
fwait
dec
or
test
push
jge
adc
dec
mov
lods
xchg
out
repnz
mov
pop
xchg
repnz
pushf
add
lock
iret
imul
pop
sahf
cld
jp
enter
and
sbb
into
in
in
and
pushf
out
sub
je
jl
pop
or
or
in
sub
outs
push
loopne
xor
mov
jnp
xchg
mov
sub
int3
mov
sub
or
imul
sbb
mov
(bad)
mov
sahf
mov
arpl
inc
jmp
mov
leave
fucom
jge
mov
fdiv
push
sbb
sbb
and
and
dec
or
(bad)
push
(bad)
pop
mov
ss
sub
cmp
mov
or
mov
jle
mov
or
call
jecxz
or
hlt
or
fimul
pop
jnp
jle
(bad)
sub
add
mov
pop
dec
add
dec
nop
xor
inc
cmps
aaa
xchg
jb
pop
cmp
aas
(bad)
jg
and
sbb
inc
call
adc
leave
adc
xchg
and
retf
adc
push
jb
and
dec
ds
or
push
fs
and
sub
pop
mov
fistp
and
mov
das
movs
push
cmps
hlt
fcomp
jle
(bad)
aaa
dec
mov
aam
mov
and
cmc
xchg
jl
add
or
imul
xchg
aam
push
push
dec
pop
xchg
cli
loop
std
jg
sub
lds
aas
sbb
aad
pop
shr
sti
not
mov
call
pop
inc
cmps
mov
mov
int3
mov
jns
and
ror
sub
add
lea
add
dec
adc
fistp
movs
ret
sub
scas
mov
(bad)
scas
push
sbb
add
mov
jle
int
mov
add
cdq
xor
popa
adc
xchg
pop
popf
inc
rol
push
loope
inc
pop
push
ja
dec
inc
fwait
ins
fst
sbb
out
jae
push
loop
repnz
out
lds
cld
push
pop
loope
dec
loope
sub
jnp
push
(bad)
clc
aam
mov
clc
repz
adc
outs
mov
or
mov
sti
loope
cdq
dec
jmp
jne
mov
push
mov
std
xor
call
scas
mov
in
pop
mov
dec
mov
mov
lock
mov
pop
or
lds
xor
xor
ds
rol
je
ret
xchg
add
or
mov
sub
jge
xor
jne
push
popf
enter
fisttp
pop
and
mov
pop
sti
scas
pop
ja
inc
pop
mov
in
repz
(bad)
in
stos
xor
pop
pop
mov
pop
cmp
arpl
cmp
sbb
mov
or
sub
stos
inc
(bad)
push
(bad)
(bad)
popa
pop
jns
hlt
jae
dec
sti
imul
push
xor
dec
movs
loopne
cwde
cmp
pop
mov
adc
and
dec
pop
test
mov
out
iret
retf
cld
jae
gs
dec
jl
test
mov
sub
mov
and
mov
lahf
mov
sahf
mov
sub
pop
jle
imul
scas
mov
sahf
xchg
loopne
push
adc
outs
pop
mov
and
call
add
cwde
and
repz
xor
imul
scas
xlat
push
out
jge
push
sbb
cmps
add
sub
movs
mov
pop
cmc
lds
jo
outs
repnz
xchg
mov
inc
sub
fwait
ja
(bad)
int
shl
pushf
inc
pop
add
test
mov
jae
daa
jne
gs
or
jmp
sar
sbb
or
jnp
jae
int
stos
and
cmp
cmp
add
add
inc
mov
arpl
imul
add
js
dec
call
mov
(bad)
cmp
pusha
enter
sbb
inc
push
jl
dec
mov
rcr
cli
bnd
jmp
fwait
test
in
jae
mov
shl
lock
adc
xor
inc
xchg
cvtps2pi
pandn
ret
cmps
out
pop
inc
push
mov
(bad)
mov
mov
outs
pop
inc
pop
push
jb
mov
and
(bad)
cmp
push
jbe
push
or
aaa
stos
lock
inc
into
ins
jl
fld
add
jle
cmc
popa
in
sbb
inc
loopne
pop
adc
mov
fild
sub
pop
scas
mov
int3
jno
sub
pushf
stc
jle
xlat
cmc
mov
sub
add
std
and
jmp
jmp
add
sahf
pop
call
add
mov
mov
jb
sub
adc
jo
shr
sub
out
dec
imul
jb
mov
cmc
mov
call
cmps
dec
sar
cmp
mov
jecxz
ins
mov
gs
iret
sbb
data16
mov
js
movs
dec
xor
mov
sbb
aaa
cli
clc
dec
cmp
bound
pop
jns
inc
rol
sbb
outs
xchg
ja
pop
repnz
aad
(bad)
arpl
sub
ret
movs
jp
scas
mov
rep
mov
fistp
mov
cmp
jmp
sub
sbb
mov
lea
fld
lea
aas
lods
outs
add
loop
cmc
pop
sbb
mov
cwde
pop
ja
das
test
and
sti
jmp
jecxz
rol
ins
loopne
idiv
fldenv
mov
adc
cld
das
sub
(bad)
in
dec
cmp
loopne
mov
sbb
(bad)
xchg
xor
ins
cli
jns
adc
pop
jmp
cdq
xor
out
and
test
xor
fiadd
pop
js
hlt
pop
dec
mov
sbb
jae
xor
cmp
jo
int3
rcl
call
sub
or
scas
cmp
inc
xchg
or
scas
fcomi
gs
mov
daa
mov
add
xor
movs
xchg
ins
mov
push
pop
jne
call
rcr
inc
data16
fcom
xor
sar
push
add
cmc
inc
in
popf
loope
xor
mov
or
out
(bad)
rcr
sub
mov
arpl
rol
aaa
and
inc
pmuludq
out
mov
jae
nop
(bad)
sub
mov
xchg
fcom
retf
and
or
xchg
ret
outs
push
pop
mov
sbb
push
sti
add
or
imul
sub
mov
inc
ins
imul
push
scas
adc
jp
movs
stos
popf
and
cs
pop
jle
retf
dec
mov
cmp
sbb
cli
div
add
mov
lds
lds
cwde
inc
adc
leave
xor
out
pop
ins
xchg
pop
push
les
inc
inc
call
mov
sbb
mov
gs
cli
sub
xchg
mov
push
xchg
adc
jg
and
les
aam
pause
cmp
mov
xor
fwait
scas
jae
icebp
clc
ja
adc
xor
lds
(bad)
daa
pushf
dec
(bad)
call
push
xor
push
adc
stc
sahf
bswap
jbe
pop
cmp
repz
and
push
sbb
cld
test
mov
hlt
stc
jb
mov
xchg
pop
mov
jl
mov
int3
out
js
ret
mov
pop
mov
(bad)
lea
inc
mov
in
into
lods
loopne
jge
ins
and
hlt
dec
pusha
daa
leave
sbb
and
push
adc
js
adc
fdiv
adc
dec
cmps
cmp
inc
push
js
nop
inc
add
pop
or
jmp
imul
xor
or
jo
cmp
mov
loopne
dec
mov
jmp
jle
mov
stc
bound
or
jge
xchg
push
mov
push
push
loopne
hlt
test
ret
imul
aad
xchg
push
call
inc
popf
jmp
(bad)
xor
xchg
je
into
cmps
mov
mov
cmp
popf
pop
shr
mov
(bad)
retf
mov
jbe
push
stos
pop
out
(bad)
jmp
shl
cmp
outs
ds
mov
push
inc
cld
fnstsw
ins
into
mov
sbb
push
mov
mov
pop
in
push
aad
or
fnstsw
fwait
xor
ret
mov
cmp
ret
pushf
sbb
test
mov
ror
aad
and
or
mov
out
adc
gs
xor
iret
fild
fwait
inc
sub
or
(bad)
clc
int3
xchg
aas
enter
call
mov
push
imul
sbb
sbb
jae
mov
mov
std
jmp
inc
and
mov
dec
and
leave
std
mov
call
(bad)
cmp
push
xchg
fild
das
cmp
jns
mov
shr
cmp
ins
ss
adc
mov
pop
jle
adc
test
mov
xchg
xchg
out
fnsave
sbb
dec
shr
mov
(bad)
and
pop
ror
test
sub
stc
and
sbb
sub
push
adc
shl
ss
inc
cwde
cmc
pop
mov
mov
inc
aas
(bad)
loope
daa
cld
nop
out
dec
hlt
loop
cmp
xchg
push
and
cmp
(bad)
push
es
imul
js
cmp
sbb
pop
jb
add
sub
mov
mov
pop
cmp
push
pop
jecxz
mov
js
xchg
dec
mov
inc
dec
push
pop
push
in
clc
add
shl
out
adc
mov
or
add
inc
push
mov
mov
and
sets
adc
aas
inc
aaa
adc
xchg
in
push
clc
jns
lahf
mov
inc
inc
push
out
mov
loope
(bad)
sbb
pop
pusha
xlat
(bad)
jmp
xor
gs
in
jl
fadd
dec
movs
popf
jnp
iret
pop
and
sbb
lahf
push
imul
dec
movs
sub
mov
fs
push
sbb
es
and
movs
shl
sbb
dec
pop
out
sub
es
inc
imul
(bad)
pushf
fwait
mov
adc
xor
pushf
mov
ret
mov
mov
repnz
popf
outs
cld
inc
mov
and
rcl
mov
pop
std
adc
xchg
pop
mov
out
push
icebp
xchg
repz
mov
popf
shr
adc
pop
push
cld
ret
mov
nop
test
xchg
adc
out
jg
idiv
dec
sti
jo
cmp
cmc
and
pop
sub
aam
aas
in
or
sbb
dec
into
outs
lock
ret
dec
addr16
ja
jp
inc
xchg
and
sub
mov
div
ja
dec
stos
mov
push
imul
imul
mov
or
cmc
nop
lds
pop
lds
shr
jmp
ds
add
xchg
fldcw
sbb
loop
sti
imul
jl
mov
add
sub
sub
lods
bound
aas
xchg
sbb
jmp
mov
mov
pop
or
or
jp
das
ja
lds
xor
mov
jp
xchg
iret
dec
adc
mov
les
shl
fwait
jnp
movd
add
ins
mov
repz
mov
into
mov
adc
mov
movs
test
pop
movs
mov
or
or
jb
mov
iret
aas
in
cmp
pop
jmp
pusha
cmps
rcl
mov
(bad)
call
cmp
loop
mov
(bad)
mov
mov
adc
xor
repz
jle
cmp
je
jbe
add
sbb
cld
ins
pop
jae
xchg
push
and
mov
test
xchg
sahf
inc
pop
(bad)
cmc
fcom
jl
jnp
fs
jae
inc
mov
mov
jl
sbb
jmp
jae
fmul
jp
jnp
adc
cmp
jae
and
or
inc
pushf
mov
or
out
and
pop
mov
xchg
xor
pop
or
push
shr
scas
xor
arpl
and
loope
aas
test
xor
pop
jp
into
xchg
xor
add
sub
mov
pop
ja
shl
mov
out
xlat
sbb
inc
loope
movs
in
xchg
pop
add
add
cmp
test
clc
jb
das
xchg
cmps
cmp
ficom
push
int3
shr
test
test
dec
into
pop
ds
fdivr
cdq
xor
test
add
pop
pop
hlt
into
adc
sti
in
cmp
or
xchg
sar
jne
mov
popa
xchg
mov
rcl
push
clc
push
pop
bnd
adc
jb
xor
daa
fild
das
cmp
xor
shr
(bad)
int3
in
adc
pop
call
pop
cmp
sti
sbb
push
jmp
clc
lea
pop
mov
fbstp
pushf
push
cld
(bad)
mov
das
and
ins
pop
rcl
movs
xor
cmps
call
inc
aam
push
jp
rol
cmp
or
test
add
mov
xchg
inc
and
popa
fld
cwde
hlt
mov
not
or
clc
fbld
pop
inc
aam
(bad)
jg
adc
das
jmp
sbb
add
pop
cmp
inc
dec
addr16
sub
lock
jp
sub
ins
pop
adc
mov
iret
xchg
ss
jmp
adc
test
sub
jbe
movs
hlt
popa
cdq
(bad)
pop
cld
into
mov
mov
xchg
pop
outs
or
xor
push
and
push
aam
cs
inc
lock
and
repz
mov
out
adc
pop
sub
pop
lahf
xchg
xor
mov
adc
sbb
fist
in
int3
test
ret
jle
sbb
xor
jge
sub
(bad)
or
mov
pop
scas
jae
inc
popf
push
mov
or
lea
and
frstor
scas
xchg
xor
(bad)
sub
or
pop
push
dec
adc
fs
pusha
and
push
pop
popf
int
fxch
mov
xor
jp
ss
xor
cmp
push
repnz
rol
mov
xor
fs
lds
fsub
mov
test
(bad)
mov
mov
(bad)
jg
arpl
sti
popf
push
cmps
cmp
mov
mov
sub
(bad)
out
sbb
stos
xor
loopne
xor
retf
bound
pushf
jecxz
add
(bad)
sbb
pop
out
aaa
pop
and
fiadd
retf
dec
pop
xlat
push
xchg
shl
cmp
mov
(bad)
movs
or
mov
cmp
lods
xor
pushf
fisttp
scas
lock
int
movs
into
adc
(bad)
fcom
xchg
or
adc
mov
mov
mul
jecxz
jae
mov
pop
loopne
cmps
xlat
in
xchg
or
cmp
rol
dec
fnstenv
adc
mov
xor
xor
mov
pop
scas
cmp
(bad)
fidiv
or
jecxz
cmp
loop
mov
add
xchg
frstor
xor
inc
push
fild
jne
pop
in
jnp
rep
ins
inc
mov
jle
call
cmp
sbb
jns
pop
dec
iret
test
aas
retf
iret
outs
jge
cli
sbb
dec
pop
inc
pop
out
xchg
neg
out
pop
inc
lea
movs
retf
int3
sub
jmp
adc
daa
sbb
sti
pop
shl
dec
jle
int
(bad)
stos
mov
push
sar
aad
pop
cmp
outs
adc
mov
jae
push
mov
and
mov
pushf
or
shr
push
aas
xor
dec
xchg
nop
icebp
dec
cmp
loopne
(bad)
pop
iret
sub
and
mov
imul
adc
lahf
jle
jb
inc
dec
jecxz
ins
inc
mov
xor
shr
rcl
bound
popf
dec
mov
mov
enter
repz
call
jns
stos
and
push
test
pushf
sbb
sbb
pop
scas
dec
jl
mov
enter
sub
xchg
cmps
fisubr
push
ins
scas
iret
icebp
lahf
jo
inc
mov
outs
stc
pop
and
and
ss
out
mov
es
adc
dec
gs
jno
int
cmp
adc
iret
jmp
inc
(bad)
sub
lock
pop
sbb
mov
xor
nop
loopne
pusha
push
dec
dec
fmul
inc
cmp
jbe
in
xlat
(bad)
sti
inc
cmc
int
jbe
or
ins
cs
inc
leave
and
add
xor
mov
mov
inc
ret
ja
imul
dec
mov
mov
gs
mov
test
imul
jno
sub
adc
jmp
push
or
lock
xlat
ror
pop
mov
mov
ficom
pop
jge
cmp
(bad)
icebp
icebp
outs
pop
mov
xor
sbb
jmp
sbb
jne
and
xor
inc
mov
xchg
inc
mov
dec
inc
test
gs
shr
add
mov
(bad)
iret
cmp
inc
sbb
push
ds
push
retf
daa
aas
jae
mov
xchg
sti
aas
pop
cmp
and
mov
push
frstor
cmp
fbstp
inc
xor
add
xchg
cdq
pop
pusha
shl
loop
mov
cmps
daa
iret
stc
mov
ficom
push
inc
pop
stc
cdq
jmp
addr16
sub
scas
mov
jecxz
jns
mov
pop
rcr
mov
(bad)
ffree
push
(bad)
fst
mov
xchg
sahf
cmc
popf
xlat
mov
dec
leave
xor
cmp
(bad)
(bad)
pop
pop
jl
dec
adc
fisttp
dec
shl
dec
and
or
sbb
loop
pushf
and
lahf
jmp
bound
(bad)
push
popa
inc
xchg
sbb
mov
mov
add
mov
push
inc
test
fwait
jae
or
pop
test
repz
movs
inc
mov
fist
scas
rcl
int3
outs
stos
add
imul
test
mov
sub
mov
and
or
adc
pop
adc
sbb
lods
xchg
adc
push
cmps
adc
push
sahf
jge
inc
pushf
cs
imul
push
mov
mov
pop
es
pushf
sub
add
ret
(bad)
out
rol
jb
and
vandps
pop
scas
sub
adc
or
push
and
(bad)
js
ret
enter
add
int
or
xchg
ds
fisubr
in
test
std
adc
sub
jmp
rcr
(bad)
and
and
push
bound
sub
dec
loop
jno
cmps
xchg
aam
mov
xchg
jae
adc
sub
xchg
call
add
or
cmp
push
add
clc
ins
push
ficomp
xor
jecxz
jbe
push
mov
xor
mov
pushf
ins
add
in
cli
test
xor
add
mov
fld
outs
fadd
dec
sbb
(bad)
jmp
or
and
and
sahf
rcl
xchg
mov
nop
rol
cmp
jmp
pop
sub
test
fist
inc
bound
rol
fistp
sub
stos
popf
cmp
ins
je
jae
fstp
cdq
mov
out
push
stos
dec
test
rcl
adc
fidivr
loope
sub
loop
fidiv
loop
xchg
xchg
xchg
iret
bound
mov
add
repnz
dec
inc
push
mov
mov
inc
mov
(bad)
leave
adc
out
cmp
gs
sbb
daa
ja
rol
push
cmp
rol
add
jae
dec
push
lahf
add
cli
shl
mov
or
cdq
test
retf
arpl
addr16
das
jno
dec
dec
dec
cmp
sub
push
and
lods
dec
pusha
mov
lods
pop
and
sbb
jns
loop
xor
sub
push
dec
mov
jns
push
xchg
adc
jmp
(bad)
es
xchg
scas
pop
jp
dec
sbb
pop
jbe
rcr
mov
ret
popa
xchg
pop
pop
js
fstp
mov
jno
enter
ror
jmp
jge
add
mov
sbb
mov
stos
mov
loop
and
xor
mov
pop
outs
push
fsub
mul
idiv
mov
add
jle
mov
push
add
mov
pop
shl
dec
clc
scas
js
mov
push
pop
mov
mov
(bad)
jo
sbb
add
dec
mov
pop
fidivr
repnz
imul
addr16
shl
push
clc
icebp
mov
cmps
shr
imul
out
loope
out
mov
cwde
sub
arpl
loope
sbb
loope
mov
xchg
mov
arpl
inc
clc
mov
fisubr
stos
stos
int3
test
adc
daa
ds
packsswb
rcr
mov
xor
sbb
cmps
scas
xchg
shl
cmp
cld
jae
jbe
push
addr16
sbb
mov
fiadd
daa
xor
lds
out
add
shl
xlat
mov
or
jo
ret
lds
jl
test
repz
(bad)
mov
push
cmp
aad
mov
sbb
ins
retf
and
into
xchg
sub
ss
sub
icebp
mov
cmp
xchg
pop
fimul
adc
sub
(bad)
retf
adc
aam
js
ins
movs
shr
and
mov
xlat
mov
mov
jae
stc
jle
int
loopne
out
dec
fcom
popf
inc
rcr
adc
dec
push
mov
ja
retf
(bad)
push
fwait
or
retf
daa
ret
(bad)
jmp
hlt
mov
push
push
(bad)
dec
loop
adc
push
into
mov
outs
test
dec
mov
cld
pusha
outs
aad
sub
or
xchg
mov
js
jbe
mov
leave
or
lock
mov
cmc
ret
shl
dec
sbb
neg
mov
xchg
popa
dec
xlat
mov
adc
mov
div
into
cdq
loopne
push
loopne
inc
int3
sar
push
mov
fwait
in
xchg
in
retf
data16
loopne
into
shld
inc
in
fld
fadd
pop
jnp
sbb
xchg
and
outs
dec
mov
aam
clc
jo
push
and
movs
lds
mov
push
jp
cmp
call
mov
mov
pop
pop
sbb
jns
les
inc
mov
pop
nop
cwde
adc
mov
(bad)
or
and
scas
call
mov
sub
push
shr
push
or
fldenv
adc
neg
push
das
fisttp
sbb
aam
stos
repz
and
inc
inc
jge
ja
mov
cmp
xchg
dec
pop
sbb
test
sbb
and
mov
push
or
jns
lods
in
xor
retf
xor
adc
mov
inc
add
imul
push
jg
jb
dec
jmp
stc
xor
or
ja
retf
push
(bad)
xchg
retf
mov
or
and
bound
xchg
jb
pop
mov
test
stos
lods
data16
inc
adc
int
into
fs
add
aam
sbb
call
add
(bad)
sti
shr
mov
cmps
stos
cmps
lahf
mov
loopne
ins
aad
pop
sub
sbb
push
cmps
pop
adc
in
repz
push
aad
xor
mov
mov
inc
inc
cmp
popa
pop
xchg
lock
xchg
jo
ins
ss
call
rcr
inc
dec
sub
or
leave
sbb
fld
xchg
in
or
inc
retf
out
xor
dec
xlat
inc
mov
repnz
mov
call
adc
or
fwait
sub
push
inc
cli
test
jb
xor
(bad)
pop
mov
cmp
data16
sub
mov
popf
retf
or
mov
shl
xor
xor
jp
adc
push
sti
jmp
push
je
xor
sti
in
push
cdq
stc
and
add
inc
cmps
mov
pop
stos
aaa
test
cmp
jae
cmps
xchg
movs
shl
pushf
sub
rcl
mov
mov
and
out
fiadd
add
xchg
lea
std
push
outs
icebp
fcmovu
pop
jge
push
cmc
lea
mov
test
in
xor
cdq
ins
(bad)
ror
pop
push
cdq
leave
fwait
fs
sub
hlt
pminub
sub
or
sti
dec
in
cmp
std
sahf
not
mov
imul
dec
sbb
xchg
jle
push
fild
xchg
and
push
fidivr
lahf
dec
mov
jp
icebp
(bad)
cmc
neg
ds
pop
or
sbb
movs
fucomi
loopne
lods
jno
mov
and
cmp
aaa
add
daa
pop
(bad)
or
outs
dec
mov
shl
xor
stc
pop
push
sub
sbb
cmp
arpl
cmps
in
jnp
jbe
call
add
adc
and
stc
test
sbb
add
add
pop
dec
push
xchg
ret
ins
xor
mov
nop
aam
xchg
(bad)
popf
stos
pop
and
cs
out
mov
rcr
inc
test
popa
and
imul
shl
imul
ins
sub
mov
fsubr
rcr
add
in
imul
and
xor
movs
push
test
or
repz
dec
out
dec
lahf
push
jae
es
(bad)
cs
loope
out
cmp
pcmpeqb
addr16
aas
push
iret
inc
cli
mov
sar
scas
loopne
arpl
mov
movs
and
or
add
xchg
cmovbe
xlat
lods
and
test
sbb
dec
shl
out
push
rcr
push
and
pop
mov
repz
cmp
xchg
mov
iret
add
sbb
repz
neg
(bad)
jmp
sub
movs
sbb
jmp
call
inc
xor
xchg
pop
mov
in
sub
clc
bound
outs
aam
pop
imul
xor
scas
lds
mov
mov
lea
les
les
and
mov
jbe
adc
cs
int
xor
push
lods
sub
aas
movs
adc
jnp
mov
popf
and
mov
mov
repz
dec
inc
ja
(bad)
fsubr
mov
movs
xchg
in
(bad)
mov
mov
cmp
sub
and
adc
pop
loop
cmps
outs
nop
xchg
(bad)
call
inc
push
add
adc
mov
je
bound
mov
push
out
ins
jmp
leave
sti
jle
test
mov
mov
fcomip
cmp
cli
dec
int3
mov
mov
fmul
sbb
out
(bad)
and
dec
mov
fnstenv
in
and
and
jmp
mov
inc
mov
mov
push
fwait
jl
cwde
movs
sbb
scas
pop
js
hlt
jno
repz
or
retf
scas
add
nop
push
or
and
fsub
jnp
pop
sub
sub
and
inc
jae
(bad)
arpl
mov
xor
fisubr
leave
(bad)
aad
mov
sub
cmc
out
mov
stos
and
push
lods
out
pusha
push
in
divps
js
sbb
xchg
pusha
outs
rcr
sub
int3
mov
lock
xchg
ds
mov
jno
pop
inc
cmp
int3
int
call
jae
clc
and
ins
dec
shr
and
(bad)
sti
mov
lahf
into
fist
ins
sub
in
in
xchg
jmp
not
adc
cmp
cmp
(bad)
pop
movs
jno
repnz
repnz
xor
sbb
cmp
call
mov
mov
mov
or
cs
mov
(bad)
cld
mov
jmp
in
cmps
iret
aad
jmp
arpl
mov
mov
movs
inc
xchg
adc
mov
gs
mov
cwde
dec
aaa
xor
test
jns
push
mov
or
cmp
jp
idiv
rcl
push
xchg
sub
sbb
in
or
ins
cmp
push
shl
inc
jo
jl
iret
sti
fs
push
xor
jle
fdivr
ret
lods
stos
xor
(bad)
push
xchg
neg
shl
mov
xor
add
add
ss
jb
mov
inc
neg
inc
sbb
cmp
jbe
and
dec
xor
stc
and
in
pop
les
ds
push
lds
and
adc
mov
out
cmp
add
adc
mov
inc
hlt
icebp
aaa
jno
jmp
fmul
pop
mov
inc
mov
push
mov
add
xchg
mov
inc
add
pop
cmps
lds
imul
ror
loope
jne
test
repnz
mov
adc
mov
dec
repz
rcr
call
push
fstp
out
sti
retf
lods
shl
mov
into
jmp
sbb
fnstcw
fild
icebp
int3
add
mov
mov
add
fidivr
mov
ja
das
pushf
jg
push
add
mov
cdq
aaa
or
cmp
xchg
cld
(bad)
push
cmp
sahf
in
popf
xchg
cli
aaa
add
xor
(bad)
das
dec
sbb
ins
jbe
out
popa
(bad)
adc
sub
out
dec
jbe
rcr
lods
xchg
dec
test
mov
es
add
outs
sbb
pop
mov
shl
fcom
pop
retf
div
pop
out
or
xchg
mov
movs
xor
rcl
add
je
push
sub
dec
or
ret
dec
cmp
dec
and
fisub
pop
lods
push
scas
cmps
sub
mov
dec
ror
jmp
pop
xchg
mov
xchg
jne
call
mov
scas
imul
out
jle
dec
(bad)
jle
es
test
pushf
dec
cmps
or
push
inc
pop
push
push
add
xlat
and
pop
jae
(bad)
test
retf
pop
sbb
mov
in
aaa
dec
sbb
lods
sbb
call
adc
popa
lods
xor
inc
pop
push
int
jg
mov
mov
ins
pop
xor
int3
(bad)
xchg
cmp
add
std
add
cmp
(bad)
call
xor
mov
mov
jmp
mul
je
inc
dec
push
and
adc
xor
lahf
test
xchg
fist
sub
addr16
xor
data16
test
mov
out
mov
adc
fwait
sbb
push
inc
sub
pop
mul
pop
inc
out
push
pop
pusha
mov
repz
xchg
cwde
jp
ficomp
adc
mov
or
and
js
xchg
xchg
ins
fisttp
mov
sar
xor
jmp
retf
mov
jne
or
or
stc
jl
lahf
dec
nop
daa
(bad)
enter
cwde
movs
pop
lahf
and
sbb
sub
(bad)
mov
xor
mov
sbb
ror
xchg
enter
retf
outs
daa
sbb
scas
push
test
jp
or
in
sbb
or
(bad)
and
xchg
and
shr
scas
jns
idiv
jne
std
test
mov
mov
out
sahf
sti
mov
aas
xor
stos
mov
ror
cwde
sbb
fidiv
(bad)
(bad)
(bad)
data16
stos
and
pop
or
mov
pop
pop
add
stos
add
imul
or
xlat
jns
fcomip
retf
mov
inc
pmaxsw
xchg
pusha
push
daa
cwde
or
mov
fsubr
mov
das
ret
jne
pop
aas
in
inc
xchg
lods
or
iret
idiv
pop
jmp
fs
stos
cwde
push
js
aaa
jbe
push
mov
add
sahf
xor
sbb
dec
push
pop
mov
and
popf
push
mov
popa
popf
dec
dec
or
(bad)
xor
dec
mov
or
test
pop
shl
mov
add
shl
cmp
sub
adc
mov
cmp
das
sahf
cmp
or
pop
dec
shl
mov
lods
xchg
ss
xor
out
jne
cmp
mov
lahf
outs
inc
sahf
mov
lahf
call
outs
ss
jns
jno
and
add
mov
dec
and
add
shl
add
jmp
or
sbb
jo
jmp
jno
jl
out
in
push
iret
xor
cwde
jmp
out
retf
call
rcl
sti
xor
imul
xchg
sub
imul
retf
xlat
and
push
or
das
xor
shl
mov
inc
(bad)
test
outs
sbb
sbb
jge
adc
jns
mov
retf
cmp
jae
push
out
scas
lock
mov
jl
xchg
push
jmp
jb
mov
aam
adc
and
sbb
xchg
inc
das
or
(bad)
mov
or
xlat
mov
add
outs
mov
es
jne
imul
inc
cld
add
jg
clc
push
in
push
sub
pop
rcl
int
sbb
inc
out
stos
or
repz
and
jecxz
cmps
cli
rol
popa
out
mov
dec
movs
ficom
adc
into
retf
das
retf
push
enter
mov
pop
leave
repz
push
call
test
pop
ret
push
inc
daa
jmp
into
ins
push
inc
nop
adc
fcom
sub
add
repz
cmc
int3
sub
rol
mov
cs
push
xor
fcmovu
xchg
sbb
jo
inc
cmovne
dec
pop
mov
loopne
adc
(bad)
in
repz
and
test
(bad)
out
add
stc
push
shl
call
adc
fadd
test
jl
jb
mov
cmp
sbb
push
fld
out
aaa
add
mov
sub
hlt
call
xchg
cmp
idiv
outs
enter
cmp
mov
dec
pop
and
ins
mov
xor
imul
cmp
shr
dec
push
sqrtps
rcr
sar
int3
mov
lods
je
fsubr
pop
and
or
jbe
cmc
js
mov
xor
shr
fidivr
push
mov
add
xor
jg
and
and
add
mov
test
jbe
mov
push
mov
mov
stc
(bad)
outs
imul
jg
in
lds
mov
xor
jmp
cmp
push
xor
push
cmp
in
ja
(bad)
es
mov
sti
lods
jle
push
mov
sub
xchg
fadd
dec
mov
loope
fs
mov
and
mov
fcomp
scas
push
dec
xchg
icebp
or
iret
cli
(bad)
fld
out
add
mov
xchg
or
repz
inc
mov
and
outs
mov
enter
inc
cmp
shr
sub
ss
mov
sbb
(bad)
iret
xchg
adc
ret
mov
popf
add
sbb
pusha
retf
arpl
out
test
mov
mov
xor
pop
xor
loopne
ds
call
daa
inc
sbb
adc
jmp
rcr
jno
ja
sbb
xchg
dec
sahf
mov
push
add
lock
lods
ss
out
retf
mov
popf
sub
das
push
dec
jp
dec
fsubr
test
test
xor
jp
push
mov
add
aam
dec
push
jmp
push
xchg
aam
mov
stos
push
xchg
fisttp
jge
pop
push
xlat
(bad)
mov
pop
in
dec
inc
push
xor
rol
call
mov
mov
retf
shl
mov
jae
mov
out
and
xchg
mov
add
(bad)
sbb
cmp
out
inc
inc
(bad)
call
jmp
xchg
pop
data16
pop
dec
or
add
push
shl
mov
sbb
cmc
push
cs
scas
jmp
jns
jbe
sbb
jne
xor
adc
ins
mov
sub
out
neg
adc
ja
rol
push
dec
aas
jge
pop
in
fisub
int3
mov
xchg
sbb
aad
mov
mov
sub
test
dec
push
(bad)
adc
scas
and
add
imul
fwait
sub
sbb
or
sub
fsubp
jp
lods
mov
lods
fdivr
push
adc
dec
mov
data16
or
fs
pop
iret
cmp
jmp
clc
push
test
lea
mov
or
mov
nop
lods
shl
push
mov
ffree
loopne
ds
pop
icebp
xchg
fild
dec
and
or
cmc
test
fisubr
xchg
pop
inc
outs
cmp
push
out
mov
scas
add
and
daa
stc
in
push
pop
in
movs
adc
movs
cld
dec
or
cmp
pop
ret
stos
mov
pop
sbb
xor
jbe
mov
push
iret
jno
sub
cdq
push
inc
sbb
sar
sti
jecxz
mov
pop
mov
call
out
dec
mov
test
movs
rol
aad
repnz
adc
mov
retf
mov
xor
sbb
jge
out
in
inc
dec
icebp
jle
nop
add
inc
rol
adc
inc
pop
xlat
lods
jbe
cli
inc
xor
mov
pop
mov
mov
clc
or
in
push
sti
add
jne
xchg
outs
arpl
outs
cmp
add
jb
jge
mov
pop
call
ja
push
outs
enter
fnstcw
mov
ficomp
sub
adc
fcmovnbe
dec
inc
sbb
test
(bad)
xor
dec
dec
xchg
call
xchg
fldenv
inc
jns
popa
jbe
sbb
(bad)
lock
mov
adc
mov
or
cmc
push
mov
ja
cmp
sub
sub
push
push
xchg
push
mov
bound
mov
jo
sub
aam
fsub
std
int3
xrelease
repz
pop
mov
ucomiss
mov
push
pop
sub
mov
adc
ja
pop
jmp
pop
ja
pop
inc
or
lock
push
mov
shr
mov
lock
scas
outs
sbb
fsub
push
jmp
in
test
lods
movs
cmps
dec
jl
mov
js
push
cwde
sub
pop
xor
imul
fs
enter
cmp
sbb
and
icebp
push
dec
inc
movs
lods
je
or
add
(bad)
sub
rcr
and
sub
adc
gs
and
mov
lods
fild
mov
push
fdiv
sahf
sbb
mov
movs
dec
xor
es
test
pmaddwd
or
jnp
xor
mov
int
cmps
cmp
xor
out
daa
adc
test
or
sub
inc
(bad)
sbb
ret
and
xor
inc
or
sar
cmps
add
xchg
pop
faddp
dec
in
(bad)
repz
repz
sahf
bound
stos
int3
jno
sub
cmp
jae
es
out
add
mov
push
pop
mov
adc
mov
sub
cmp
mov
push
dec
xchg
sub
xor
mov
out
je
lea
and
xlat
cld
jae
call
sbb
(bad)
test
fdivr
ffreep
mov
stc
jb
push
pop
and
and
mov
lea
push
jge
faddp
or
ret
and
(bad)
lahf
fisubr
pop
xchg
js
mov
out
mov
in
pop
mov
mov
adc
mov
jmp
fidivr
sub
or
push
pop
mov
test
mov
les
and
dec
mov
and
or
jo
in
xchg
push
pusha
pop
sbb
ja
jno
adc
dec
push
adc
sbb
les
sbb
inc
test
push
sahf
jb
jo
aam
sub
arpl
mov
jno
(bad)
jle
data16
xor
xchg
bound
or
scas
xor
hlt
out
(bad)
dec
mov
mov
clc
stc
pop
mov
add
ins
jp
or
xchg
adc
test
mov
push
rcr
ss
jge
jno
loop
mov
dec
inc
push
or
add
jbe
rol
call
int3
xor
and
push
xchg
pop
lahf
test
mov
into
sub
into
mov
or
shr
ins
(bad)
pop
jne
cmp
(bad)
in
sbb
mov
fwait
adc
dec
(bad)
mov
pop
mov
pop
and
out
and
sub
daa
push
sbb
int
sub
ss
aam
mov
ins
jo
sahf
xor
ss
les
mov
adc
add
inc
jnp
pop
test
adc
test
or
cdq
fwait
or
xchg
pop
pop
ins
arpl
mov
xor
jae
imul
test
push
scas
xchg
cdq
sti
xchg
add
jp
dec
xor
jo
push
push
push
xchg
pop
aas
test
inc
mov
std
push
gs
and
mov
push
mov
loopne
push
mov
jae
pop
pop
mov
into
adc
out
imul
daa
xchg
jp
je
xor
adc
push
repnz
in
mov
mov
mov
xchg
and
mov
mov
sete
test
ss
clc
cmp
sub
pop
pop
mov
mov
mov
or
aam
hlt
push
mov
cwde
lea
neg
mov
ss
xor
xor
inc
dec
ror
inc
pop
movs
ds
add
arpl
fldcw
add
scas
(bad)
lods
call
and
dec
(bad)
(bad)
dec
and
push
sti
adc
loop
fiadd
imul
jle
and
jno
adc
jo
dec
(bad)
loopne
fcmovne
xlat
icebp
jb
movs
sbb
icebp
fmul
lods
(bad)
retf
push
jne
dec
aaa
mov
pop
clc
push
sbb
cmp
and
addr16
dec
sbb
inc
fwait
dec
loopne
or
outs
dec
es
ins
arpl
add
mov
sub
cli
in
ret
sub
movs
nop
mov
jmp
leave
movs
fmul
(bad)
push
cmp
sbb
imul
adc
sbb
xchg
jl
out
std
jo
mov
jge
ja
cmp
sbb
mov
jle
rcl
cmp
mov
leave
mov
push
pop
into
cmp
jmp
das
xchg
cmp
ss
cld
(bad)
push
(bad)
les
jno
xchg
xchg
jl
jl
aam
push
ja
mov
lahf
sub
and
cmp
lods
repnz
xor
or
pop
call
xchg
mov
pop
cmps
lods
jle
inc
out
inc
fcom
jle
cmps
mov
(bad)
fbstp
sbb
ror
mov
sub
cmp
leave
repz
(bad)
les
sahf
mov
xchg
icebp
out
push
sbb
aad
push
jp
jne
xor
cmp
dec
leave
ret
mov
dec
or
icebp
lds
push
jae
lods
(bad)
(bad)
dec
jg
push
pmaxsw
gs
and
and
and
frstor
ins
adc
jl
outs
dec
retf
and
jo
test
hlt
lahf
popa
aam
jl
cwde
aam
rcl
inc
add
mov
push
lods
call
popf
iret
pop
cmp
fs
pop
loopne
pushw
inc
push
pop
ss
popa
int
loop
out
xchg
std
leave
xchg
lods
mov
fidivr
into
push
or
sbb
(bad)
enter
cmp
sub
sub
jmp
test
lods
data16
push
push
cmp
inc
xor
mov
sahf
or
out
lea
jns
outs
mov
adc
mov
aam
adc
fdivr
add
jne
xlat
mov
in
mov
ja
mov
fild
mov
adc
out
mov
and
les
mov
call
and
pop
icebp
xor
ins
and
das
mov
push
popa
(bad)
fisttp
mov
dec
jae
aam
sbb
fsubr
xchg
xchg
pop
je
mov
rcr
mov
mov
icebp
inc
mov
test
sub
pop
(bad)
ss
mov
jnp
ret
jmp
outs
sub
test
mul
scas
jecxz
adc
sbb
xchg
jmp
xor
jp
stc
adc
xchg
sub
(bad)
cs
xlat
mov
sbb
mov
je
stos
or
arpl
iret
or
pushf
mov
mov
mov
inc
dec
stc
mov
test
dec
dec
dec
inc
fidivr
cmp
(bad)
std
test
xor
adc
xchg
push
pop
cli
dec
jns
cmp
inc
nop
stos
(bad)
xchg
dec
mov
mov
sbb
retf
std
loope
int3
je
lock
movs
imul
lods
fwait
cmps
daa
xor
imul
sti
imul
sub
push
iret
cmc
add
out
sahf
inc
push
popf
shl
and
cmp
rcr
popf
cmp
fadd
fs
lods
popa
scas
out
ja
dec
or
and
sub
neg
aas
and
dec
mov
or
pop
or
les
shl
inc
or
arpl
inc
daa
inc
push
and
(bad)
jmp
ins
clc
ret
xchg
repnz
sub
add
fcom
mov
add
xchg
mov
jo
pusha
pop
and
shl
es
or
icebp
sti
push
adc
pop
pop
sbb
les
dec
sti
adc
popa
xchg
mul
cmps
aaa
pop
jno
mov
sub
jmp
pop
inc
cmps
sar
jmp
loopne
mov
js
fsubrp
and
bswap
push
out
pop
add
fdiv
in
jbe
(bad)
or
push
test
sahf
push
jbe
rcr
push
in
dec
ret
stos
mov
icebp
add
push
sub
imul
std
rcl
call
icebp
mov
sub
xor
adc
mov
test
mov
jnp
cdq
xchg
js
outs
data16
int
dec
xlat
or
fsincos
pop
(bad)
jmp
call
cmp
ss
stos
adc
mov
or
aaa
je
and
imul
push
jge
imul
mov
and
pop
add
sub
sbb
inc
inc
pop
shr
push
dec
sar
movs
in
jns
pop
sti
push
push
mov
xchg
icebp
mov
fadd
adc
retf
pop
ret
jns
nop
stos
xor
xor
sbb
ja
sub
mov
or
stos
push
mov
xchg
inc
jl
lds
inc
mov
or
or
ja
iret
or
mov
pop
enter
pushf
jecxz
gs
or
adc
repnz
retf
mov
stos
imul
ror
dec
fisttp
lock
inc
inc
std
jb
fwait
(bad)
adc
movs
retf
fwait
dec
imul
cmps
xchg
jmp
pop
in
or
xor
pop
mov
jecxz
movs
adc
ins
adc
pop
xchg
sub
loopne
fst
jmp
neg
test
pop
xor
setl
jnp
imul
inc
cmp
mov
cmp
jb
mov
inc
sub
push
dec
fmul
pop
dec
xlat
icebp
xchg
lock
imul
or
cmp
xlat
mov
sub
xchg
sar
jmp
gs
enter
jno
loope
cs
pop
inc
xor
mov
in
jne
daa
jno
pop
ins
iret
sti
icebp
mov
ins
ror
push
mov
lds
imul
les
pop
adc
aad
pop
push
xchg
cmc
and
dec
stos
enter
out
push
sbb
mov
add
repz
rol
leave
sbb
mov
adc
enter
js
repnz
int3
in
sub
in
in
aam
js
dec
adc
lock
pop
jp
lods
adc
adc
and
aad
xlat
push
sub
sbb
add
adc
loopne
xchg
inc
call
jmp
mov
fs
xlat
or
mov
pusha
fwait
loop
scas
repnz
adc
out
cmp
push
call
cmp
popf
pop
test
add
shl
jmp
imul
mov
pop
mov
xchg
pop
xchg
loop
clc
push
aad
(bad)
(bad)
push
adc
movs
inc
popf
sub
cmp
pusha
jge
cmp
sbb
cmp
loopne
push
or
dec
mov
outs
les
cmp
jb
mov
fwait
int3
cmp
cmp
mul
out
xchg
xor
sub
cmp
ss
jb
outs
dec
xchg
mov
jb
and
add
iret
push
mov
jge
xor
retf
jno
sbb
jb
push
jmp
retf
push
rol
xlat
retf
or
sub
pop
stos
out
je
inc
xlat
in
in
sbb
push
fdivr
jl
cld
ins
or
lds
js
push
adc
movs
pop
shl
ds
cmp
inc
mov
xlat
(bad)
repnz
aam
(bad)
nop
jl
add
xor
jae
inc
or
call
mov
adc
sub
or
adc
scas
mov
cmps
add
push
call
int
jbe
call
ins
jl
xor
jmp
in
aad
sete
mov
inc
aam
add
pop
xor
add
xchg
iret
outs
icebp
pop
mov
dec
jg
ins
(bad)
cmp
mov
test
jmp
into
xbegin
adc
test
or
jge
int
inc
ja
dec
cmp
test
fst
outs
jns
mov
lock
sub
sar
jecxz
jae
rcr
push
mov
mov
fsub
xor
cs
jae
xor
repnz
inc
in
adc
or
das
fst
pop
inc
jb
mov
xor
stos
pop
inc
push
pushf
cmp
mov
out
adc
lods
loop
cmp
call
loopne
cmp
jno
jnp
pop
stc
dec
sub
popf
jle
test
and
pop
retf
or
call
sar
xchg
fwait
call
in
scas
fldenv
mov
mov
mov
rcr
scas
retf
or
ins
jne
dec
jbe
and
test
retf
retf
aam
jp
or
data16
adc
neg
mov
lea
leave
cs
push
das
sbb
aas
mov
jg
mov
dec
pop
jb
mov
loope
icebp
rcr
inc
mov
adc
dec
rcr
repz
leave
imul
ret
cdq
stos
emms
out
sbb
dec
adc
enter
or
fild
call
mov
fcom
bound
jbe
sbb
ins
ins
icebp
fnstenv
fld
scas
sbb
mov
pop
or
rol
add
jb
into
jb
int
out
mov
push
add
call
pop
pop
sahf
es
jae
std
pop
push
push
nop
jns
enter
sub
pop
inc
xor
repnz
fsub
(bad)
mov
cwde
outs
and
pusha
shl
test
dec
cdq
dec
xchg
clc
adc
cmp
std
adc
retf
sar
(bad)
repnz
popf
(bad)
add
dec
push
mov
inc
dec
jp
rcl
cmc
inc
or
mov
loopne
sub
jne
jbe
ins
jno
xchg
adc
xchg
xchg
or
and
lahf
jno
loop
xlat
pop
pop
mov
sbb
(bad)
mov
dec
and
fwait
mov
scas
nop
push
sbb
fs
sub
mov
jl
cwde
adc
sbb
mov
sbb
scas
jmp
sbb
test
mov
(bad)
repz
in
mov
inc
stos
ret
out
pop
test
mov
fwait
sub
cli
mov
dec
mov
push
sbb
lds
or
outs
cmp
add
adc
not
test
mov
pop
mov
(bad)
mov
sbb
xchg
inc
fstp
sbb
pop
cmp
lds
loope
mov
xchg
mov
sub
and
(bad)
jle
imul
add
fmul
dec
pop
push
cmp
je
fstp
jmp
pop
and
aam
in
cwde
mov
je
repz
aas
addr16
cmp
(bad)
js
or
popa
mov
mov
(bad)
ja
jnp
adc
imul
out
pop
ins
shr
jb
aam
sub
dec
sbb
dec
and
scas
std
push
jle
jmp
shl
gs
bound
loope
cmp
add
(bad)
sub
(bad)
rcl
aad
rcr
jb
retf
mov
mov
lods
rol
xchg
adc
cmps
cmps
out
push
pop
or
jecxz
xchg
out
pop
xor
or
adc
cmps
push
pop
or
jecxz
xor
mov
mov
jl
jb
lea
xor
ins
mov
out
push
cmps
test
jge
mov
in
imul
jle
mov
idiv
js
fimul
sub
cs
repz
mov
adc
dec
retf
int3
js
sbb
call
sbb
jae
shl
inc
(bad)
lds
ins
fwait
jmp
ins
pop
ja
dec
pop
xor
nop
xchg
pop
jecxz
and
das
pop
prefetcht1
push
(bad)
xchg
push
imul
cmps
inc
add
ds
dec
lea
or
pop
xchg
cmp
sbb
jp
vphaddubw
repz
or
fcmovu
out
arpl
stos
lahf
or
leave
ret
js
or
xchg
sub
(bad)
aam
inc
cmp
pop
mov
rcl
outs
push
scas
out
add
fwait
xchg
inc
mov
daa
mov
add
sahf
pop
fwait
in
mov
movs
(bad)
repz
mov
loope
or
and
xor
pop
mov
shl
loope
fdivp
mov
adc
cwde
dec
mov
call
dec
int
movs
push
adc
pop
add
shr
ret
mov
not
sbb
jns
lods
pop
sub
sti
inc
push
xchg
(bad)
xor
sub
push
sub
push
add
fimul
(bad)
(bad)
jg
sbb
dec
fs
pop
sbb
sbb
mov
push
xchg
stos
pop
stc
mov
jmp
enter
jbe
add
jl
lods
push
or
scas
inc
(bad)
or
les
popa
cmp
inc
hlt
outs
cmp
xchg
cld
lods
or
xor
jbe
pop
jmp
dec
imul
sub
dec
pushf
adc
xchg
mov
cmc
jg
fistp
lea
dec
nop
imul
sub
dec
cmp
loopne
lahf
call
push
loope
aas
imul
mov
ss
push
out
iret
paddusb
lahf
or
mov
cmp
pop
push
jmp
push
push
rcr
cwde
dec
dec
mov
mov
xlat
ins
adc
cli
mov
int3
icebp
retf
jl
cmps
xor
or
movs
call
sbb
js
fiadd
mov
add
or
cs
rcl
push
stos
sbb
(bad)
pop
mov
mov
fnsave
outs
xchg
inc
and
cmp
mul
js
sbb
xchg
aam
sbb
ja
pop
push
add
dec
out
mov
inc
rcr
retf
mov
das
jl
jecxz
mov
push
xchg
data16
or
mov
jae
mov
fcmovnbe
jbe
push
cwde
and
adc
xchg
mov
jp
and
lods
dec
mov
mov
nop
leave
cmps
mov
popa
and
jo
jmp
lods
or
sbb
dec
std
stos
mov
cmp
cmp
jo
or
mov
xchg
xchg
mov
cmp
(bad)
lods
jno
dec
outs
(bad)
pop
retf
jecxz
xor
sub
xlat
and
repnz
out
aam
mov
cld
cmp
call
sub
push
push
cmps
jnp
pop
or
jecxz
repnz
fs
movs
sbb
outs
in
cmp
or
out
inc
imul
and
call
cmp
sub
call
icebp
inc
sub
or
xor
in
rcl
jo
inc
inc
or
imul
push
push
cmps
adc
add
pop
(bad)
inc
clc
fwait
push
addr16
dec
out
retf
push
xchg
fild
xchg
rcl
gs
mov
pushf
ins
imul
or
imul
call
inc
(bad)
leave
cwde
mov
rol
xchg
rcr
or
fsubr
xlat
jp
or
aaa
sbb
adc
pusha
shr
loop
rcl
pop
jb
push
mov
and
mov
lock
xchg
sbb
out
sub
and
in
cwde
push
ret
cmp
push
mov
mov
(bad)
push
clc
cld
pop
mov
stos
mov
push
retf
or
mov
mov
and
in
jno
jmp
ins
sahf
in
retf
jle
push
xor
repnz
iret
xchg
inc
js
add
je
in
jecxz
stc
cmps
hlt
jae
es
or
xor
xor
mov
(bad)
xchg
(bad)
loop
mov
pop
xchg
adc
loop
fisub
pop
cli
(bad)
sub
dec
jmp
movs
js
push
les
ja
cmc
xchg
sub
and
cli
mov
add
lds
movs
and
adc
jge
xor
adc
jmp
pop
xchg
pop
cmp
aaa
in
enter
xchg
adc
fstp
fs
ror
push
(bad)
out
and
test
scas
hlt
not
call
iret
cmp
(bad)
and
enter
cmp
popf
pop
dec
test
dec
and
mov
jno
(bad)
push
cdq
push
scas
mov
push
outs
in
(bad)
hlt
mov
jnp
in
ret
push
mov
mov
add
gs
pop
sub
pop
lock
lahf
in
xchg
in
jl
cwde
in
les
inc
mov
mov
dec
push
retf
mov
sahf
pop
inc
jmp
adc
(bad)
into
jb
jge
retf
xchg
sub
fld
sub
sub
not
adc
pop
aas
idiv
dec
xchg
lea
mov
xor
cmp
bound
mov
loope
mov
inc
add
mov
jae
mov
test
push
shl
xchg
cmp
and
xor
mov
sbb
js
ret
sub
arpl
test
iret
jnp
cmp
dec
cmps
data16
and
sbb
test
bnd
pop
add
rcr
jmp
dec
ret
call
in
pop
pop
aam
push
sbb
sub
repz
int3
test
ret
mov
(bad)
xor
mov
mov
iret
mov
lods
daa
cmps
mov
cs
mov
mov
into
xchg
jmp
aas
nop
xor
xor
or
jle
and
xor
aad
xor
ja
inc
push
(bad)
xor
gs
lods
mov
imul
iret
enter
pop
(bad)
das
xchg
xchg
xor
movs
xchg
les
daa
push
fist
sub
cmps
and
jecxz
add
fcmovnu
sbb
daa
outs
push
dec
aam
and
xchg
popa
sbb
sbb
cmp
cs
push
and
adc
or
sar
sbb
pop
cmp
inc
scas
dec
jbe
jmp
mov
fcom
mov
bound
cmp
(bad)
les
lods
inc
adc
sbb
retf
repz
stos
sub
mov
jmp
or
dec
xor
jmp
pop
sub
sahf
fsub
rcr
dec
fcmovne
out
add
mov
mov
dec
sahf
cmc
fdivr
xor
clc
jno
pop
sub
push
dec
xchg
(bad)
shl
xchg
push
push
data16
cwde
sub
mov
ja
mov
arpl
mov
xor
mov
jnp
cwde
jmp
pop
bnd
inc
mov
push
mov
or
pop
into
and
push
outs
adc
shl
push
test
mov
pop
sbb
out
jo
out
mov
loop
ficomp
push
jmp
xor
inc
ds
call
inc
aas
loop
cli
push
in
gs
adc
push
jb
push
out
out
adc
jnp
aas
gs
ret
dec
jp
cwde
or
movs
and
or
scas
sti
mov
int
inc
push
cdq
shl
fstp
scas
push
mov
test
mov
pop
test
push
sbb
outs
push
call
push
fld
sbb
xchg
jg
lods
aad
push
xor
ret
or
xor
(bad)
std
xor
lods
mov
mov
rcr
mov
call
ins
mov
cmp
gs
leave
mov
sbb
inc
inc
pushf
pop
push
or
xor
jmp
dec
and
dec
(bad)
add
dec
cmp
sbb
push
jl
call
xlat
hlt
mov
sub
retf
sbb
in
lods
jmp
ja
adc
fistp
xchg
jne
mov
test
arpl
adc
jne
aam
iret
imul
pushf
inc
imul
ins
ja
and
das
jg
pop
inc
xchg
stos
and
aaa
test
xchg
dec
lds
dec
loop
sbb
cmp
jns
dec
nop
sti
cmps
pop
mov
test
and
mov
mov
jns
call
fcomip
rcl
cld
stos
(bad)
in
mov
adc
mov
xor
out
fisttp
mov
out
retf
jle
(bad)
and
add
jnp
dec
loope
inc
stos
cmovs
and
jg
popa
pop
or
lea
mov
mov
retf
out
loop
cmp
sbb
xor
ret
inc
cmp
sar
lds
or
popf
pop
sbb
jno
add
adc
mov
std
in
pop
clc
jmp
sbb
sub
pop
rcr
ja
inc
add
mov
inc
popa
aam
mov
lds
pop
ins
scas
jge
dec
pop
addr16
pop
in
mov
ins
mov
adc
or
enter
mov
mov
movs
push
mov
or
mov
mov
push
cmp
mov
xchg
sbb
or
outs
aas
dec
dec
popa
stc
bound
les
fiadd
pushf
cmp
rcl
je
xchg
xchg
mov
mov
mov
sub
mov
cs
xchg
bound
xor
(bad)
out
in
xor
stos
jns
cdq
inc
push
imul
jmp
cmp
icebp
stos
cmps
or
stc
pushfw
sti
js
pop
daa
pop
je
adc
leave
loope
int
test
mov
and
xchg
imul
stc
(bad)
xchg
retf
ror
mov
out
xchg
adc
pop
sub
sub
mov
xchg
inc
sub
xlat
jmp
test
lock
mov
lahf
lds
xor
push
push
gs
mov
pop
and
or
jmp
sti
iret
adc
sub
enter
or
mov
jmp
sub
jns
sar
icebp
and
repnz
fldcw
js
jge
dec
pop
mov
(bad)
pop
pop
inc
push
cmps
daa
mov
lahf
push
mov
mov
mov
push
inc
leave
mov
add
mov
mov
sub
sub
out
jno
js
jno
sbb
scas
lea
push
push
mov
sti
call
fstp
pop
pop
inc
mov
loop
sbb
add
inc
inc
in
pop
push
test
cmp
enter
fisub
xchg
jg
dec
adc
adc
icebp
repz
mov
test
adc
clc
mov
sbb
aaa
aad
and
mov
cli
test
(bad)
adc
sub
pop
repnz
xor
inc
mov
dec
push
mov
sub
mov
mov
jmp
fucomi
sti
nop
push
mov
fucomp
sbb
mov
ins
sub
aas
out
ret
cmp
retf
mov
pop
xchg
mov
push
(bad)
dec
cmp
xchg
pop
push
mov
fldenv
(bad)
fist
nop
in
jo
sbb
jns
(bad)
jnp
fsub
out
out
loopne
xchg
push
jecxz
add
push
iret
icebp
xchg
push
enter
in
sub
call
(bad)
jb
and
cmp
inc
sahf
rol
in
add
mov
stos
push
add
pop
cmp
test
pop
inc
xchg
aas
mov
sbb
(bad)
mov
movs
rcr
mov
or
mov
mov
ds
std
pop
stc
into
lds
pop
enter
dec
sub
imul
hlt
jge
hlt
adc
push
jns
pop
mov
cld
add
mov
dec
mov
pop
jecxz
cmps
(bad)
stc
add
add
mov
cmp
lds
dec
imul
cwde
inc
cmp
push
cmp
call
add
mov
(bad)
aaa
(bad)
jo
jg
add
add
daa
lds
mov
out
cmp
test
xchg
lds
xor
add
stc
stos
movs
test
clc
push
and
cmp
(bad)
mov
(bad)
pop
sub
push
rcl
mov
outs
jnp
clc
sub
cmps
sar
or
mov
mov
push
mov
cmp
aas
mov
mov
adc
dec
std
jnp
jnp
cmps
sbb
jb
out
not
adc
sub
(bad)
jo
mov
jnp
in
jns
pop
or
pop
jno
rcr
mov
xchg
in
sub
ds
lahf
xchg
cwde
out
addr16
sub
call
aad
sbb
xlat
and
fnstenv
clc
pop
push
jle
cmps
test
scas
push
inc
and
xchg
ror
pop
enter
cmp
jle
shr
pop
test
sbb
cmps
mov
faddp
dec
xchg
in
(bad)
(bad)
jno
mov
retf
jmp
ror
mov
or
dec
jmp
outs
cmp
mov
mov
imul
push
ret
ins
mov
mov
and
out
push
hlt
mov
xor
lds
ret
ret
pop
outs
push
cmp
sub
sub
push
rcl
dec
fnstenv
jbe
and
sub
stos
push
sbb
aad
or
or
pop
push
in
sub
(bad)
jl
fstp
fdiv
fcmovu
les
mov
popf
mov
xor
cmps
scas
sub
in
cmc
into
loopne
inc
mov
sbb
(bad)
outs
push
mov
test
jmp
jne
je
xor
mov
adc
cmp
aam
pop
cmp
popf
jmp
jae
daa
nop
fisttp
xor
jnp
inc
int3
hlt
jmp
jno
add
or
sbb
pop
sbb
test
dec
sar
data16
bound
ins
out
cli
xor
cmp
and
adc
fadd
cmc
das
imul
xchg
std
mov
add
fsub
mov
sub
daa
fmul
sub
and
pusha
sbb
add
rcr
adc
push
imul
popa
out
ins
jae
mov
adc
push
neg
fs
mov
push
sub
dec
imul
cwde
shr
push
adc
sub
iret
inc
xor
aas
xchg
xchg
inc
pop
repnz
sub
lods
sub
xor
ins
and
pop
out
xchg
lock
outs
in
int3
shr
add
aas
cmps
fild
mov
adc
fwait
pandn
xor
inc
sti
push
ins
xor
and
mov
lods
popa
aad
enter
add
mov
cmc
and
mov
xchg
int3
(bad)
jle
adc
outs
aam
cs
sub
mov
out
cli
adc
push
mov
in
pop
xor
fisubr
xor
fwait
out
fisttp
scas
outs
mov
outs
in
dec
mov
inc
cmp
and
fisttp
popa
mov
adc
jns
test
dec
scas
push
cmc
or
inc
adc
int
mov
les
popf
push
div
cli
fs
inc
or
fnstsw
out
mov
jmp
imul
jge
dec
mov
xor
sbb
xor
jbe
lods
sub
retf
pop
jbe
sbb
dec
sbb
rcr
loop
pop
stc
scas
(bad)
sbb
das
mov
sti
ds
lods
sub
pop
lock
add
(bad)
retf
inc
or
and
rcr
mov
cld
mov
test
dec
sbb
xchg
or
mov
or
mov
stos
aas
mov
nop
retf
xchg
jp
xor
ds
test
in
cli
inc
sbb
dec
lods
pop
inc
enter
push
outs
inc
int
add
xchg
lods
in
xchg
ins
add
int3
nop
push
test
loop
mov
xchg
pop
inc
test
jne
adc
cwde
lds
jne
cmp
test
xchg
stc
movs
sar
jae
pop
loope
shl
mov
sub
lods
mov
imul
paddd
pop
fnstcw
jg
sbb
pop
sbb
xchg
inc
jg
jmp
stos
adc
faddp
dec
and
mov
xchg
pop
jnp
cli
cmp
sub
dec
scas
xchg
pushf
and
test
cmp
push
movs
movs
mov
inc
imul
outs
rol
test
js
adc
jecxz
loop
ins
xchg
xor
or
icebp
clc
cmc
sub
sbb
addr16
repnz
das
setae
and
popf
sub
(bad)
ret
fist
(bad)
(bad)
repz
pop
xchg
scas
sbb
ret
and
or
inc
in
pop
xor
arpl
lock
push
(bad)
sbb
(bad)
into
and
icebp
sbb
nop
dec
mov
and
mov
in
xchg
mov
imul
jb
or
ror
pop
sub
mov
neg
ins
jl
inc
xchg
sub
push
and
ins
in
sbb
xchg
push
rol
mov
je
xlat
fsub
or
cmp
or
and
inc
xchg
xlat
and
xchg
lods
adc
outs
pop
(bad)
push
imul
ds
mov
imul
sar
mov
inc
fsub
fdiv
mov
push
scas
fist
xchg
mov
icebp
dec
in
dec
cmp
pop
ins
fldenv
imul
rol
fs
xor
test
jg
sub
(bad)
cmp
adc
sti
jno
ds
pop
xor
jo
cmps
push
ds
test
jg
pop
imul
mov
adc
inc
movs
out
test
ss
adc
pop
rol
xchg
test
rcl
loop
adc
mov
call
dec
pop
jg
mov
jle
push
mov
inc
adc
popa
adc
mov
mov
adc
in
or
dec
xchg
xchg
repnz
push
ret
sahf
jle
mov
cmp
jecxz
pop
mov
mov
xchg
scas
cmps
cmps
jno
push
mov
popa
or
cmp
jae
sub
rcl
push
imul
push
inc
imul
inc
(bad)
mul
retf
mov
aas
or
mov
shl
cmp
sbb
pop
loope
add
stos
test
xor
push
aam
pop
push
fcomp
fst
retf
into
std
sub
ins
pushf
push
sub
push
xor
pop
mov
xor
mov
mov
out
sti
adc
call
aam
stos
sub
pop
add
sub
xor
adc
je
pusha
les
cmp
sahf
jge
clc
fcomp
test
retf
mov
mov
ret
fmul
repz
or
jp
jge
aam
jbe
push
jae
cmc
arpl
push
fdiv
clc
in
shl
push
mov
aam
popa
inc
aam
div
inc
sahf
add
and
or
jmp
add
xchg
pop
push
enter
pop
mov
jmp
(bad)
scas
arpl
test
call
jns
into
mov
xor
xlat
sub
adc
jno
or
jns
xor
ins
xchg
stos
jae
movs
inc
loopne
dec
sbb
mov
lahf
daa
into
dec
test
xlat
jne
mul
push
test
push
(bad)
cmp
(bad)
jno
std
and
mov
xchg
push
cli
pop
test
adc
jne
push
arpl
ror
repnz
ret
rcr
mov
push
not
cmp
pop
and
add
fadd
in
fisubr
cmp
aas
movs
mov
mov
mov
in
out
bound
inc
test
dec
dec
xchg
pop
loopne
dec
bnd
mov
and
cld
adc
mov
sbb
aaa
cmps
int3
push
jb
and
push
adc
fs
(bad)
fiadd
cwde
push
jbe
popa
int3
test
xchg
les
sti
mov
les
mov
out
cmp
add
cmp
test
sub
pop
rcl
jge
adc
fmul
in
push
add
push
cmps
sub
es
sub
in
jle
jae
gs
stos
in
lea
pop
pushf
fiadd
repz
pop
pop
test
inc
or
mov
stos
ja
in
dec
cs
mov
sahf
dec
in
rcl
push
enter
push
popf
es
imul
lock
inc
dec
rol
(bad)
aaa
fs
call
xor
cwde
stc
pop
or
cmp
in
inc
xchg
mov
call
stos
jno
test
stos
mov
cli
lea
pop
stc
push
ins
out
out
mov
idiv
xor
cmps
aam
enter
addr16
cmps
mov
push
push
jge
jnp
das
xchg
enter
test
pop
sbb
stos
retf
jecxz
mov
cmp
mov
and
js
sub
or
add
dec
fld
xor
mov
cld
jp
pop
mov
in
stos
shl
pop
icebp
adc
pushf
fistp
mov
cmp
xchg
repz
mov
js
and
and
xor
adc
adc
cmp
cli
xchg
loopne
retf
out
fistp
retf
cmp
jmp
out
mov
xchg
pop
or
dec
int3
into
mov
rcl
mov
stos
mov
stc
fwait
dec
jns
pop
and
mov
and
in
stos
mov
js
pop
into
(bad)
cmp
mov
inc
(bad)
test
or
or
pop
(bad)
sti
mov
stc
scas
xor
pop
stos
dec
out
lds
mov
js
dec
and
jecxz
inc
fadd
in
inc
(bad)
data16
ror
cmp
xor
jae
movs
add
bound
ret
lss
cmp
loopne
inc
jmp
repz
test
lods
adc
scas
mov
mov
and
mov
sub
sub
xor
xor
int
mov
mov
pushf
fld
iret
sub
hlt
add
mov
neg
jg
push
mov
(bad)
jmp
in
in
dec
mov
xlat
mov
scas
dec
cmp
(bad)
push
inc
mov
mov
loop
cld
pop
dec
repz
jnp
and
fs
cmp
pop
adc
retf
rcr
xchg
push
push
dec
dec
bound
fisub
push
iret
cmps
sahf
sti
mov
sub
sbb
popa
outs
lahf
out
sar
aas
xor
stc
adc
std
ror
sbb
neg
adc
das
adc
jo
cdq
jmp
inc
fs
xchg
mov
pop
jge
and
cmp
cmp
popf
leave
jae
pop
cmp
std
repnz
shl
in
mov
xor
pushf
out
pop
jae
push
test
xchg
repz
mov
fwait
popa
xchg
inc
mov
lods
(bad)
pop
sbb
push
rcl
cwde
ds
push
cli
push
add
out
aad
jl
or
push
jge
out
or
adc
ret
push
lahf
add
mov
leave
jle
ds
mov
test
sbb
inc
(bad)
push
xchg
(bad)
(bad)
dec
gs
or
inc
push
sbb
jle
xlat
movs
or
xchg
cs
mov
jae
mov
in
enter
mov
out
hlt
mov
fist
sbb
das
sub
cmp
gs
mov
fsubr
fiadd
push
ror
mov
(bad)
retf
sub
fisub
jecxz
jecxz
enter
dec
jo
loopne
mov
sub
mov
sub
les
cmc
mov
out
lss
push
xor
or
out
popa
ret
sti
bound
std
ds
adc
daa
stos
stos
jmp
(bad)
inc
adc
dec
mov
sbb
into
ins
xchg
push
nop
pop
call
sbb
daa
xchg
into
fwait
mov
ror
inc
xchg
mov
and
pop
jmp
lods
dec
mov
push
imul
lods
push
jbe
cmp
pop
mov
scas
xchg
mov
je
sbb
adc
fsub
sbb
dec
adc
int3
xchg
rol
cmp
inc
pushf
xchg
pop
and
mov
popf
push
adc
bound
mov
in
adc
(bad)
mov
aam
int
xor
(bad)
ja
fst
cmps
cmp
inc
popf
mov
(bad)
lock
inc
inc
daa
adc
cmps
sti
push
xchg
loope
pop
je
test
leave
call
xor
mov
jno
mov
and
loop
jo
add
mov
lds
adc
sbb
loope
jo
inc
or
add
push
pop
lods
mov
dec
xchg
std
mov
jno
stos
mov
test
cld
pop
mov
mov
push
cmp
sbb
in
jno
test
lock
fst
movs
popf
pop
fist
(bad)
out
mov
outs
or
sar
shl
movs
mov
dec
push
sbb
pushf
xor
cmc
mul
sub
cld
jecxz
adc
cli
or
mov
add
pop
inc
add
retf
xchg
cmp
pop
mov
lods
cmc
sbb
dec
mov
mov
xlat
cmp
and
xchg
jo
iret
jnp
stos
shl
ret
jmp
sbb
sbb
lods
ret
movs
mov
out
sbb
dec
mov
dec
outs
(bad)
repz
jnp
call
mov
push
mov
stc
or
call
xor
or
mov
or
pop
adc
pushf
loopne
mov
nop
out
sti
inc
jle
and
lahf
jmp
mov
mov
dec
sbb
dec
lahf
sub
sti
mov
cmp
push
pushf
and
push
scas
shr
dec
aaa
jnp
aad
ins
pushf
(bad)
jp
inc
push
dec
gs
mov
loope
and
xchg
jl
cmps
sti
stos
dec
(bad)
iret
xor
xor
mov
xor
out
mov
and
adc
movs
add
jl
popa
enter
aam
mov
out
or
ror
xor
sbb
hlt
into
sub
pusha
mov
sub
adc
(bad)
neg
cld
mov
and
lahf
or
popa
pop
and
push
inc
inc
or
stc
gs
cmp
xchg
cmp
fild
cs
pop
ficom
mov
imul
popf
mov
aad
mov
jae
mov
cmp
push
jne
sbb
inc
xor
icebp
(bad)
dec
dec
imul
xor
xlat
cmps
jne
in
mov
mov
add
nop
cmp
inc
mov
mov
jp
add
or
movs
lods
cli
and
scas
pop
cmp
mov
cmps
les
rcr
imul
inc
xchg
adc
gs
leave
pop
daa
push
add
inc
out
xlat
jne
or
popf
stos
mov
lock
and
mov
mov
loope
in
not
and
pop
push
test
sub
mov
in
jle
dec
fstp
call
clc
cmp
(bad)
nop
imul
adc
mov
mov
push
dec
push
das
pop
dec
(bad)
idiv
mov
and
enter
sub
sar
push
dec
jns
fild
test
arpl
cmps
xchg
lds
lods
sub
outs
jo
sub
cmc
lea
and
popa
test
or
mov
xor
mov
jmp
xchg
mov
ins
xor
(bad)
pop
(bad)
push
enter
iret
adc
retf
jecxz
sti
je
cs
cdq
call
inc
stos
or
mov
pop
fsub
mov
dec
cmp
es
imul
dec
imul
mov
rcl
sbb
into
test
cwde
xchg
data16
in
sub
sbb
and
pop
arpl
jg
and
mov
cmps
jmp
xor
pushf
jmp
or
push
mov
rol
push
das
jge
cmp
and
mov
sub
mov
push
call
shr
jge
mov
add
retf
into
dec
out
in
out
shr
loop
jne
outs
ds
push
pop
xor
rcl
add
cs
push
(bad)
jb
mov
pop
or
pop
inc
xlat
shl
fmul
pop
xchg
ficomp
mov
adc
sub
shl
cmp
adc
hlt
jmp
cmc
mov
xor
mov
test
jp
mov
jecxz
test
mov
mov
mov
rol
scas
xchg
inc
adc
dec
ret
popa
mov
xchg
and
jmp
in
mov
pop
clc
test
xor
movs
jae
fidiv
fisttp
jl
inc
mov
hlt
retf
(bad)
mov
test
jnp
ins
(bad)
xor
sub
pop
mov
das
add
pop
jno
test
mov
ins
in
mov
cmp
shl
adc
inc
stc
mov
aad
dec
add
xor
add
scas
in
jge
push
mov
mov
dec
retf
inc
cmp
enter
ja
adc
jg
movs
dec
out
mov
pop
test
sti
mov
sub
jmp
pushf
or
sbb
inc
mov
xchg
fild
fwait
xor
mov
sti
push
idiv
xor
arpl
fiadd
adc
add
ss
inc
add
(bad)
ret
jae
add
hlt
lock
shl
ss
(bad)
mov
jle
rcl
in
gs
xlat
and
in
rep
pushf
sub
mov
pushf
popf
push
icebp
mov
xor
mov
pushf
and
mov
mov
das
xor
pop
leave
loopne
sar
add
out
popf
xor
idiv
scas
outs
test
sahf
or
or
xlat
mov
mov
mov
dec
out
lahf
cmp
retf
mov
fidivr
xchg
jl
mov
into
cdq
imul
inc
imul
and
xor
xchg
clc
inc
bnd
in
cld
cmp
cmp
loopne
ror
inc
gs
jecxz
push
inc
clc
dec
cmc
cdq
mov
push
push
addr16
stos
push
xlat
and
out
jp
sub
aas
(bad)
js
mov
lea
jbe
adc
push
jge
pop
ret
push
popf
test
cdq
mov
xchg
pop
dec
jae
pusha
daa
cwde
fwait
sbb
xchg
or
enter
inc
sar
es
push
adc
lock
dec
xchg
shr
hlt
je
pop
jno
mov
and
stos
fdiv
retf
inc
xor
mov
push
cmp
cmc
fs
dec
test
cmp
loop
mov
push
xchg
adc
retf
xor
sub
scas
push
push
fwait
call
into
ret
jmp
in
icebp
call
add
dec
fsubrp
mov
popf
jbe
mov
jg
xor
inc
xor
cmc
xchg
xchg
mov
mov
mov
and
add
int
mov
(bad)
aas
inc
sub
jae
pop
dec
pop
sbb
sar
cmp
mov
cmc
mov
cmp
cwde
sub
ss
inc
mov
mov
lds
jmp
xchg
es
out
mov
pop
cwde
jp
(bad)
fxch
mov
aas
popf
xor
mov
sete
daa
stos
lahf
xchg
inc
stos
cmp
mov
pop
cs
scas
sbb
(bad)
adc
or
jne
jne
mov
icebp
inc
daa
jle
and
pushf
sbb
xchg
arpl
push
xchg
jecxz
scas
cmp
test
push
rol
mov
pop
iret
xor
and
mov
lods
push
xchg
cmps
mov
mov
pause
jb
mov
pusha
int
mov
jl
xchg
test
cmps
add
and
lds
inc
scas
nop
icebp
mov
test
into
jae
sub
dec
jp
sbb
adc
mov
xchg
leave
stos
xchg
arpl
into
stos
addr16
cli
mov
call
xlat
sub
fcomp
cmps
jnp
out
inc
test
add
adc
cli
lods
or
inc
aas
imul
sbb
pop
mov
idiv
cmp
dec
and
cmps
int3
push
add
bound
mov
mov
or
sbb
arpl
dec
(bad)
adc
sbb
or
xlat
in
dec
out
add
es
hlt
repnz
and
int
shl
hlt
sbb
int3
test
dec
push
repz
enter
push
(bad)
ss
sbb
mov
in
in
add
fwait
jb
pop
sbb
push
es
jl
retf
or
pusha
sbb
mov
aam
adc
push
cmc
out
adc
mov
rol
int
inc
call
shr
add
imul
mov
add
mov
push
or
xchg
jge
push
cmc
lods
cmps
in
sub
mov
mov
pop
push
inc
mov
outs
scas
sbb
mov
cmp
mov
sbb
sub
sub
sub
xchg
dec
mov
cwde
mov
ds
nop
adc
ret
jl
sub
jmp
(bad)
aad
jg
das
call
cli
imul
imul
adc
sub
icebp
inc
xchg
(bad)
call
out
mov
mov
(bad)
or
popf
jle
sub
das
call
mov
mov
hlt
push
cmps
pop
mov
test
dec
jne
adc
ficomp
sub
sti
fidiv
stc
jg
lock
arpl
inc
xchg
fmulp
cmp
ins
mov
sbb
shl
arpl
test
and
mov
xchg
cmp
xor
sbb
cmp
icebp
jbe
xor
mov
or
daa
sub
inc
js
mov
fadd
fcomp
xlat
xor
shr
add
and
sbb
nop
pop
scas
fsubr
push
mov
xor
inc
cmp
jnp
out
rcl
and
inc
push
mov
add
and
(bad)
fxch
mov
sar
xchg
jnp
shr
xchg
xor
jl
inc
ins
add
dec
push
add
adc
fnstcw
mov
mov
mov
daa
mov
dec
out
ja
outs
mov
stos
cmp
mov
inc
retf
call
(bad)
into
inc
mov
cmp
call
cmp
stos
mov
cld
pop
and
fsubr
xchg
test
or
addr16
call
push
mov
pop
in
aad
add
pop
jle
xor
fimul
jae
retfw
clc
sub
jae
mov
mov
mov
sub
jns
add
jno
(bad)
jne
and
aaa
rol
shl
add
pop
shl
test
ret
lods
pusha
repnz
xor
(bad)
stos
xlat
sbb
jbe
fisubr
and
jmp
aaa
or
mov
(bad)
fdivr
movs
mov
add
(bad)
pop
je
xchg
push
xchg
push
push
inc
jne
push
pop
cmp
inc
pop
add
(bad)
pushf
xor
pop
sub
xor
xchg
repnz
sbb
nop
lods
jnp
add
je
pusha
and
inc
fstp
shl
pop
xor
adc
push
mov
adc
in
stc
lock
outs
jno
outs
inc
frstor
mov
pop
mov
dec
sub
mov
retf
add
pop
gs
push
and
fwait
sub
int
add
pop
je
pusha
enter
jg
adc
dec
and
int3
es
jbe
mov
push
retf
repz
jmp
add
mov
std
jmp
into
mov
imul
inc
inc
dec
shl
dec
test
ret
xchg
xlat
xchg
es
shr
mov
(bad)
aam
(bad)
sub
test
aas
cmp
outs
xor
push
fild
push
and
ret
push
pop
mov
lahf
pop
inc
xchg
adc
ins
xor
and
clc
stos
in
out
mov
cmps
iret
or
je
sbb
rcr
mov
xchg
fdivr
jmp
stc
add
sbb
push
jbe
push
jo
sahf
sahf
ret
jnp
push
ds
or
push
popf
scas
pushf
mov
out
in
mov
daa
sub
clc
(bad)
xchg
pop
shl
ss
scas
fdivr
jno
popa
imul
add
rol
loope
pop
js
jne
jmp
and
pop
add
mov
mov
leave
rol
xor
(bad)
mov
mov
push
ret
rcl
sbb
cmp
cwde
adc
add
mov
dec
fs
sar
and
shl
push
sub
imul
push
fsubr
push
mov
lods
push
mov
mov
jne
imul
or
sbb
jo
mov
push
cmc
pop
mov
xor
leave
dec
mov
leave
sbb
das
lea
cmp
xor
stos
iret
aas
rol
dec
dec
adc
mov
sbb
aaa
jne
shl
inc
data16
cmps
aas
cmps
mov
mov
pop
pop
mov
pushf
inc
mov
in
icebp
cmp
lods
add
addr16
stos
dec
arpl
fnstcw
pushf
sbb
loope
popf
dec
cmps
xchg
(bad)
or
xchg
cli
xor
adc
fimul
nop
fisttp
outs
jmp
xchg
in
xchg
ror
mov
outs
pop
retf
fidivr
aad
xor
aas
leave
xor
xor
in
sar
ja
movs
cmps
add
fstp
mov
stos
movs
or
je
push
add
cmp
push
jmp
aaa
mov
movs
(bad)
repnz
or
ret
pop
jle
fucom
inc
ja
jg
pminub
add
cli
dec
or
mov
mov
mov
or
jge
xchg
data16
adc
dec
pop
aaa
adc
fucom
lods
rcr
pop
pop
cdq
lds
les
gs
jo
sub
scas
sbb
(bad)
mov
xor
std
ins
xor
icebp
test
retf
fiadd
ins
scas
mov
cli
sbb
dec
je
mov
inc
in
mov
std
sti
mov
int
ret
fbstp
mov
bnd
ret
add
stc
adc
stc
pusha
(bad)
fnstcw
mov
cmp
push
lea
push
ret
push
in
je
(bad)
add
add
rcl
xor
ja
mov
stos
std
sbb
cmp
outs
push
jge
xlat
(bad)
xor
pop
test
scas
mov
leave
loopne
(bad)
(bad)
dec
cs
arpl
cmp
sbb
inc
js
inc
call
movs
jne
and
(bad)
jno
fwait
enter
outs
in
mov
cmps
or
adc
mov
and
ds
jo
pop
mov
mov
cmp
mov
cmps
pop
ror
push
test
sti
into
clc
pusha
sti
xchg
cdq
push
movs
jo
hlt
mov
clc
xor
into
test
xchg
cs
or
dec
inc
cdq
shl
jne
mov
out
sub
push
lock
les
mov
and
xor
arpl
jmp
lahf
inc
inc
xchg
sub
fnstenv
xchg
sbb
int3
out
arpl
push
sub
xchg
cld
push
ds
shl
mov
dec
push
dec
test
dec
add
jo
cs
dec
push
std
cmp
es
sbb
sbb
adc
addr16
cli
imul
xor
add
xchg
stos
dec
mov
in
scas
xlat
loope
arpl
aas
call
test
pop
push
test
ins
hlt
shr
mov
mov
push
movs
inc
or
fcomp
sub
(bad)
addr16
stos
xor
mov
mov
sbb
mov
addr16
push
pop
stos
pop
mov
(bad)
mov
shl
lods
movs
xchg
pop
push
push
mov
cmps
mov
or
nop
outs
lods
pop
mov
test
not
fistp
dec
in
push
dec
sbb
(bad)
xlat
xor
not
pop
shr
add
daa
pop
stos
cmp
aaa
pushf
ret
push
dec
clc
push
jo
push
inc
push
pop
fidiv
repnz
popa
mul
jmp
cs
adc
aam
cmp
push
cmp
mov
pop
mov
test
call
adc
adc
mov
popf
push
ins
mov
shl
mov
hlt
sub
inc
and
push
sbb
fwait
jns
cli
pop
xchg
cwde
mov
test
leave
scas
mov
dec
arpl
xor
pusha
inc
jo
imul
push
out
xchg
rcl
dec
pushf
mov
repnz
dec
mov
inc
call
ss
sbb
or
sub
fmul
in
mov
out
loopne
or
xchg
cmps
stos
xor
aad
jl
cmp
fld
mov
loop
pop
pusha
sbb
fistp
lods
mov
rol
xchg
scas
repnz
pop
in
adc
adc
add
pushf
ins
cs
call
test
cmp
(bad)
xchg
ret
and
inc
das
pop
lock
fs
pop
sub
int
inc
scas
(bad)
jge
pop
xchg
mov
push
adc
push
pop
sub
(bad)
addr16
jle
sub
push
sbb
out
call
movs
movs
mov
push
pop
(bad)
in
mov
and
out
inc
(bad)
push
dec
sub
shl
out
not
push
inc
xor
or
fidivr
mov
mov
repz
mov
cld
push
mov
movs
aam
fmulp
nop
ins
cmc
xchg
pand
mov
pop
movs
psubusb
js
fmul
xlat
adc
dec
bound
jmp
or
sahf
lds
cli
lods
sub
cmp
xchg
inc
and
(bad)
ja
ins
pop
and
(bad)
rcl
cli
test
outs
cmp
cwde
call
fsubp
cmp
mov
stc
outs
(bad)
xchg
out
jo
and
or
aas
test
mov
dec
sub
sub
sbb
imul
fdivr
call
imul
or
nop
data16
idiv
dec
mov
sub
loop
sbb
lock
dec
outs
sub
jo
aad
or
jg
xor
pop
aam
pushf
(bad)
fidiv
xor
sahf
jno
out
retf
inc
fild
or
movs
outs
push
push
fstp
xor
mov
mov
adc
rcr
mov
ins
xchg
mov
movs
sub
and
in
xchg
hlt
sbb
jno
lea
fs
jl
ss
add
data16
frstor
adc
imul
push
jmp
mov
mov
ins
adc
cmp
cmp
movs
cmp
dec
push
movs
or
xchg
xchg
loopne
pop
mov
push
mov
sbb
pushf
lock
sbb
outs
sbb
and
xor
push
cmps
and
es
push
js
and
cmp
jle
cs
dec
cmp
and
les
xlat
xor
mov
(bad)
in
xchg
adc
cld
ss
repnz
daa
sbb
or
rcr
push
or
in
outs
sbb
add
stos
pop
pop
inc
int3
cmp
in
cmp
scas
sub
icebp
sbb
fst
jg
cmps
push
loop
xor
test
inc
rcl
jge
gs
mov
push
mov
mov
(bad)
pusha
cmps
loopne
jbe
retf
movs
jg
leave
pop
mov
xchg
cmps
sub
and
pusha
adc
cmp
fistp
out
mov
ds
js
pop
fs
mov
jg
iret
(bad)
shr
add
add
mov
push
(bad)
iret
sbb
add
movs
push
mov
xchg
or
mov
mov
pop
mov
dec
and
test
mov
push
sub
adc
ins
cmps
lods
sub
and
aad
xchg
cs
out
mov
in
es
cmps
lds
icebp
mov
push
test
push
jmp
loopne
nop
mov
and
cmp
hlt
ret
cmp
xor
jno
jmp
mov
ds
jmp
sub
jbe
sub
pop
icebp
pop
out
rcr
js
mov
xor
sbb
retf
lock
jg
aas
jecxz
out
xor
push
pop
lods
test
adc
push
pusha
cs
pop
stos
mov
fisubr
push
in
ss
push
aad
push
jb
fistp
mov
pop
sub
repnz
jns
lahf
inc
and
inc
fnsave
sti
js
stc
icebp
cmp
out
test
pop
xchg
ds
add
cmps
daa
sbb
inc
inc
jg
xor
mov
test
leave
stos
xchg
sbb
add
adc
mov
(bad)
retf
in
aas
xchg
mov
(bad)
add
xchg
mov
inc
mov
or
std
mov
xchg
sbb
repz
inc
jg
xchg
add
pop
test
pop
mov
int3
xlat
sub
mov
retf
mov
idiv
call
cld
int3
mov
loope
sub
mov
mov
(bad)
and
inc
cmc
in
cli
loope
pop
or
ror
push
cmp
pop
stos
bound
mul
or
je
fild
scas
push
sub
(bad)
adc
mov
stc
push
inc
and
cmc
xchg
neg
fisttp
fdivr
sti
mov
repnz
loope
(bad)
(bad)
in
push
and
(bad)
dec
lock
out
outs
jle
inc
mov
out
ja
fst
add
(bad)
sti
adc
pop
inc
loope
mov
pop
enter
lahf
push
jle
in
sub
scas
lock
aam
sbb
mov
addr16
fiadd
(bad)
mov
lea
movs
ss
inc
adc
shl
sbb
adc
adc
xchg
xchg
div
imul
lock
ins
and
not
jno
icebp
xlat
sahf
push
mov
scas
sbb
test
daa
adc
fdivr
add
mov
and
lea
lods
neg
inc
sbb
jl
imul
add
gs
jle
mov
and
outs
out
add
mov
ins
jnp
xor
or
push
test
mov
mov
hlt
mov
cmp
sub
xor
jno
sub
mov
out
mov
ret
(bad)
cmc
or
clc
jp
or
xlat
mov
cli
int3
jo
jne
ins
inc
jbe
inc
test
mov
jae
cmp
shr
jbe
shr
xor
xor
adc
push
mov
sti
cmps
ins
or
pop
sub
xchg
enter
jg
cwde
test
fcmovnu
adc
out
cld
test
mov
ficomp
inc
sar
push
inc
inc
cwde
sub
test
mov
xchg
std
sub
pop
inc
xchg
imul
sbb
pushf
inc
stos
cdq
neg
aam
fsub
ins
push
xor
jp
sub
jge
not
xchg
shl
iret
fucomip
movs
inc
jg
pop
pushf
jo
mov
mov
je
mov
jne
xchg
dec
pop
cmps
pop
(bad)
dec
sub
inc
sti
sub
(bad)
(bad)
iret
(bad)
(bad)
push
sbb
les
iret
fmulp
jmp
mov
mov
jl
pop
cmp
imul
fadd
pop
mov
fnsave
push
push
loop
adc
imul
stos
mov
shl
and
dec
movs
xchg
mov
or
test
jno
imul
ja
mov
int3
adc
in
(bad)
mov
cmp
push
ret
mov
jmp
pusha
inc
cmps
fadd
call
xchg
xchg
xchg
sub
and
sub
inc
fcom
gs
aas
loop
sub
cli
fistp
scas
xchg
cld
les
int
(bad)
stos
xchg
mov
cmp
jg
stc
sub
fidivr
dec
add
(bad)
addr16
pop
ja
frstpm(287
rol
jne
daa
sbb
xor
mov
call
add
cwde
stos
inc
(bad)
das
retf
lea
and
jecxz
push
sar
out
repz
loope
outs
cmps
sbb
aaa
int
outs
cmp
sbb
sub
add
cmp
cmp
retf
jge
push
data16
imul
xor
and
dec
xor
jge
or
fiadd
mov
cwde
ins
fidivr
cs
pop
add
les
mov
das
movs
cmc
rol
popf
adc
fist
cmc
loopne
cmc
test
pop
lods
retf
mov
mov
mov
push
dec
xor
into
movs
adc
cmps
push
mov
in
scas
imul
mov
outs
sub
ja
adc
inc
xchg
shl
ret
or
mov
adc
push
pushf
jecxz
hlt
ror
fcomp
jne
mov
mov
ret
xchg
or
test
dec
and
cli
pop
mov
icebp
movs
sub
aaa
mov
xchg
pminsw
lods
ret
js
leave
test
inc
add
hlt
mov
(bad)
in
mov
out
adc
xchg
(bad)
std
shl
js
(bad)
xchg
dec
(bad)
sub
push
test
mov
sub
push
in
lods
movs
push
div
jnp
cmp
dec
test
mov
mov
and
fadd
dec
sub
mov
cmc
ds
dec
lds
mov
adc
in
or
not
cs
mov
cmp
sti
call
sub
xchg
mov
fs
sbb
mov
dec
pusha
push
xchg
ret
stc
mov
jo
mov
nop
push
mov
cmps
xchg
sub
inc
push
and
loopne
inc
test
sub
lods
cmp
and
and
dec
add
ins
daa
mov
xchg
add
lock
pop
sbb
gs
mov
ins
cmc
and
outs
cwde
jecxz
jbe
xchg
inc
stc
fcmovnb
ins
mov
adc
push
sar
sub
push
jmp
aas
xchg
mov
ja
push
push
dec
jbe
mov
mov
mov
sbb
jp
dec
jg
cmp
jg
pusha
dec
and
mov
outs
imul
push
jnp
sub
in
imul
inc
push
jmp
jmp
cmp
pop
push
xchg
cmp
jl
inc
adc
cmp
retf
push
push
push
repnz
cmp
(bad)
jmp
mov
ss
mov
mov
and
xchg
xchg
mov
mov
rcr
popf
ins
fld
cwde
shl
pop
imul
jb
dec
dec
shl
ds
enter
cwde
stos
aas
cmp
loope
cmp
jns
in
repz
cmp
iret
popa
aas
push
arpl
repnz
jne
shl
mov
cmp
jne
jns
ins
mov
(bad)
pop
jo
mov
jge
xor
adc
das
jmp
retf
dec
(bad)
jecxz
lods
(bad)
push
sti
test
fwait
adc
cmp
jmp
push
push
xor
pop
or
jbe
inc
dec
int
add
adc
jle
add
shl
and
ja
jmp
jnp
hlt
sub
into
stos
push
aaa
rcr
mov
std
pop
or
and
mov
mov
cli
xchg
adc
cmps
jmp
jae
ret
add
pop
jle
arpl
out
jp
dec
mov
je
add
mov
and
and
rcl
(bad)
fadd
pushf
cld
add
xor
call
push
sbb
in
sbb
or
adc
int3
retf
(bad)
mov
int3
sbb
out
mov
cmp
ja
ret
cmc
daa
popa
jp
stc
fild
enter
pop
cdq
clc
add
mov
xchg
and
adc
fwait
push
lods
nop
mov
xchg
jmp
imul
pop
loop
sbb
shr
ins
push
ret
cwde
in
jb
mov
xor
mov
out
aaa
ret
cmps
test
ins
cmp
and
jnp
lock
dec
arpl
dec
lds
(bad)
fmulp
xlat
inc
cmc
and
aas
inc
cwde
add
push
out
ficomp
or
adc
xor
int3
repnz
mov
shr
cmp
cld
pop
ins
sahf
push
xor
getsec
add
icebp
popa
mov
aaa
jo
mov
sub
mov
stos
in
nop
cld
sub
aaa
js
jo
mov
inc
add
ds
pop
pop
jge
or
(bad)
pop
adc
aad
mov
jp
out
outs
xor
sub
mov
gs
xor
test
out
add
xor
fld
in
xchg
jp
cdq
cmps
mov
lods
inc
mov
jmp
xor
scas
pop
xchg
loop
jecxz
enter
fcom
mov
rol
stos
ins
sar
sub
xchg
movs
pop
mov
sbb
out
shr
jp
inc
repnz
mov
out
sub
fwait
sub
jg
xor
in
cld
inc
sub
mov
sbb
in
stc
sbb
lds
clc
cwde
out
add
sbb
call
and
sbb
jp
xchg
das
add
loop
adc
lds
jne
rcr
add
sbb
jg
xchg
mov
nop
and
aam
mov
fwait
div
in
out
sbb
sbb
mov
ja
jecxz
cmp
mov
mov
jbe
add
sbb
adc
sbb
mov
dec
mov
int3
mov
sub
xor
sub
add
shl
(bad)
jp
addr16
mov
xchg
xlat
mov
int3
call
and
lods
test
shl
iret
out
cmp
xlat
add
jnp
pushf
std
sbb
cwde
jp
xor
(bad)
jl
cli
pop
ss
outs
iret
push
in
out
or
test
jbe
cli
mov
xchg
sbb
mov
mov
xor
or
cmp
mov
loop
je
loope
and
pop
sub
into
pop
mov
ins
mov
iret
int
and
sar
(bad)
inc
daa
je
(bad)
jg
retf
jp
dec
hlt
cmps
fild
data16
out
pop
imul
push
pusha
jecxz
pop
cmp
cdq
xor
or
sbb
mov
or
mov
mov
fsub
mov
xchg
push
dec
jb
lods
xchg
nop
or
mov
cmp
mov
mov
addr16
or
or
push
stc
jp
or
jg
adc
inc
stos
test
adc
jl
arpl
pop
xchg
test
dec
mov
repz
aaa
fs
addr16
inc
aas
lods
add
cmps
(bad)
pusha
loope
mov
lock
loop
or
xlat
adc
add
addr16
gs
push
sub
lods
push
test
ja
es
pop
xchg
sbb
pop
leave
iret
nop
ret
scas
clflush
into
nop
aad
movs
movs
dec
retf
add
mov
adc
int
bound
icebp
movs
xor
and
dec
test
push
inc
fcomp
push
jbe
pop
ret
adc
sbb
repz
xchg
outs
add
push
cmp
cdq
(bad)
sub
mov
pop
adc
or
ins
jge
mov
push
es
add
in
inc
cli
in
fidivr
hlt
cdq
loope
fmul
inc
cwde
jg
xchg
cli
push
push
and
jnp
jp
test
xchg
out
adc
pop
or
and
fsub
dec
jnp
pushf
scas
sub
cmp
lods
icebp
test
mov
and
nop
arpl
movs
out
push
add
xchg
cwde
int3
loop
jle
mov
mov
xchg
out
cli
ins
in
or
xor
and
arpl
lahf
and
mov
arpl
mov
sbb
sub
adc
add
enter
add
xchg
mov
adc
mov
popf
inc
int3
rol
sub
dec
adc
loop
iret
ficom
jmp
(bad)
bound
mov
fcmove
outs
jno
cmp
or
retf
(bad)
xchg
push
rcr
or
push
fstp
sub
dec
aam
mov
pop
aas
ja
sbb
gs
pushf
leave
or
test
jnp
cs
mov
adc
sub
(bad)
or
mov
imul
xchg
jmp
int3
in
adc
outs
cwde
pop
out
test
sub
jl
xchg
push
(bad)
jb
inc
paddsw
sub
jmp
sbb
push
(bad)
data16
mov
clc
das
ins
mov
(bad)
clc
xor
and
shl
int3
add
xor
add
xchg
mov
jg
loopne
sub
push
mov
mov
push
mov
pop
mov
mov
xor
and
popf
lea
pusha
dec
xor
fcomp
pop
sbb
jge
mov
xor
aas
test
repnz
icebp
in
dec
or
and
dec
scas
ss
outs
retf
fidivr
push
mov
repz
add
mov
sbb
and
cmp
iret
div
cmp
shr
das
mov
or
mov
mov
jp
fist
xchg
xor
fimul
jge
pop
jb
repnz
mov
jmp
cli
test
cmp
out
out
add
cmp
dec
jb
ret
pop
xor
sbb
not
gs
cmp
xchg
xor
jne
xchg
fwait
test
repz
adc
cwde
in
fcomp
pop
ja
add
test
xor
dec
cmp
add
fwait
mov
push
sar
fdiv
mov
jne
ret
add
(bad)
xchg
(bad)
or
inc
push
jmp
xor
cmps
jne
sti
mov
xor
push
inc
out
cmp
sbb
mov
pop
pop
lea
push
outs
mov
or
push
out
dec
xchg
fwait
not
mov
push
and
fld
sbb
leave
stos
add
lock
arpl
addr16
adc
rcl
cmp
ret
push
or
sbb
sub
into
call
sub
pop
sbb
sbb
xchg
push
inc
cmps
cmc
and
xor
arpl
rcl
mov
popa
or
jp
mov
les
js
fdivr
fstp
imul
hlt
cs
int
outs
mov
imul
daa
or
push
mov
or
iret
imul
fdiv
retf
aas
sbb
scas
mov
mov
(bad)
scas
add
push
and
out
mov
adc
add
cli
add
mov
mov
sbb
jecxz
jnp
sub
je
aaa
sub
shl
in
aaa
out
mov
es
pop
push
imul
les
jne
icebp
mov
sahf
adc
mov
sub
cmp
mov
and
jbe
test
(bad)
cdq
push
adc
neg
loopne
lods
cmp
push
imul
in
push
es
and
sub
shr
and
sbb
xlat
jne
call
pop
mov
xor
add
retf
bound
jl
pop
cdq
push
sbb
out
(bad)
cmp
xchg
loop
jb
mov
fimul
(bad)
or
(bad)
mov
dec
jns
mov
jnp
push
icebp
and
lahf
hlt
or
(bad)
iret
(bad)
add
sub
sbb
pop
mov
shr
mov
pushf
js
jo
dec
in
pop
es
dec
in
cmp
movs
int3
dec
xchg
or
mov
or
popa
ss
fisub
retf
shl
pop
jp
dec
popa
jl
add
movs
ins
push
mov
cmp
aaa
and
add
dec
(bad)
pop
sub
loopne
lahf
outs
jp
sub
sbb
push
out
xor
ins
ja
cdq
(bad)
and
sahf
lods
jmp
and
jb
lods
push
ror
out
test
data16
icebp
cmp
mov
lods
aam
xor
rcr
inc
mov
fst
sub
repnz
arpl
out
dec
inc
(bad)
xlat
mov
sbb
mov
jmp
inc
inc
xchg
repnz
push
xor
(bad)
fidiv
call
adc
add
cmp
pop
pushf
(bad)
aad
jl
fwait
repnz
test
sub
fcom
xchg
xchg
(bad)
jns
aas
inc
xchg
outs
retf
xchg
test
inc
(bad)
adc
mov
xchg
or
or
jp
sar
push
sbb
shl
sbb
cmp
pushf
call
ds
sar
xor
(bad)
fdivr
icebp
(bad)
jmp
pmuludq
jecxz
push
adc
mov
out
(bad)
retf
das
pop
add
out
hlt
pop
and
cmc
jno
push
and
jp
in
sbb
shr
fs
in
sbb
cmp
das
int3
mov
mov
mov
aaa
lea
loopne
iret
es
sbb
shl
loope
cmp
iret
(bad)
cmp
and
dec
ins
addr16
and
(bad)
and
xor
xchg
fild
ins
(bad)
mov
and
jge
cmp
(bad)
sbb
and
lahf
stos
xchg
stc
js
mov
add
jb
jmp
in
push
popa
or
jno
jnp
fsubr
pusha
scas
enter
out
xor
loop
or
cmp
nop
inc
pop
stos
push
imul
dec
mov
movs
cmps
icebp
loop
dec
popa
rcr
jecxz
bound
rcl
mov
cmps
daa
icebp
jno
mov
jl
jo
or
inc
fst
test
dec
addr16
inc
(bad)
in
mov
mov
xor
fbld
xchg
ficomp
xchg
repnz
mov
push
push
xchg
xchg
ins
fist
jmp
(bad)
int
jmp
pusha
push
call
call
out
gs
or
sahf
je
ror
xchg
pop
mov
arpl
jnp
adc
jbe
fisub
nop
add
stos
inc
js
(bad)
(bad)
adc
out
sbb
dec
daa
fnstenv
ins
sar
ss
pop
aaa
pop
stos
int
jge
fidivr
dec
clc
mov
jle
mov
bound
adc
and
xor
(bad)
add
sub
inc
call
jae
dec
daa
inc
(bad)
int3
rcl
in
stc
xchg
sub
sub
mov
sar
push
in
pusha
pop
cmps
ds
cmp
ror
cdq
shl
push
arpl
cmp
jbe
out
pop
xchg
xchg
imul
cmp
mov
fcomi
into
dec
pop
ins
cs
in
loopne
fadd
fstp
inc
adc
xor
lods
icebp
fild
inc
fsubr
(bad)
xchg
fs
sbb
rcl
out
lds
imul
ret
loop
cwde
inc
sbb
push
(bad)
jg
xor
push
add
xchg
pop
inc
pop
or
imul
jmp
sar
cs
cmp
sub
adc
imul
fimul
dec
lods
mov
add
je
(bad)
(bad)
sub
adc
jns
std
bound
sub
jmp
or
or
xchg
retf
ss
lds
hlt
popf
pop
(bad)
out
and
sbb
jp
mov
inc
ss
mov
mov
stc
fwait
addr16
cmp
ins
mov
mov
pusha
push
aad
dec
gs
shl
inc
adc
sbb
movs
inc
pop
dec
pop
adc
(bad)
jbe
mov
popf
mov
iret
dec
inc
cmc
sub
xchg
cmps
bound
ss
jmp
adc
jb
loop
push
(bad)
mov
and
add
push
xchg
ins
xchg
sbb
stc
sub
data16
jae
mov
sub
push
mov
sbb
je
adc
mov
stc
inc
scas
mov
pop
popa
and
jg
mov
push
test
add
(bad)
fisttp
adc
stc
or
mov
sub
pusha
cwde
adc
cld
std
pop
call
ret
into
cmp
bound
jmp
dec
mov
imul
lea
dec
add
retf
mov
test
mov
pop
inc
lock
lock
adc
mov
int
iret
stos
pop
out
retf
stc
cdq
cmp
pop
call
cmc
lds
sub
pop
mov
scas
push
jno
sub
gs
fdiv
mov
int
sbb
sbb
jne
dec
ins
pop
ret
mov
ret
inc
push
test
inc
arpl
(bad)
xor
test
repnz
iret
push
dec
push
jmp
mov
mov
hlt
movs
imul
xchg
pop
fld
into
stos
fadd
or
adc
sbb
in
add
mov
pop
push
cmp
dec
int3
je
ret
sub
and
movs
jnp
dec
aam
and
lock
fild
xor
shl
rcr
mov
pusha
xadd
shr
mov
aam
inc
adc
imul
retf
or
fst
arpl
inc
inc
push
int
call
jnp
es
jne
sub
stos
jns
stos
dec
retf
test
add
mov
add
std
sbb
test
push
stc
sub
inc
repz
adc
nop
jmp
push
out
stc
clc
cmp
mov
sub
(bad)
jg
mov
mov
les
nop
add
jne
pusha
ret
retf
inc
xlat
mov
cmp
dec
xor
leave
pusha
test
xor
mov
cdq
cmp
dec
add
xchg
retf
ficom
pop
pop
sbb
xor
rol
pop
rcr
xor
push
in
les
mov
pusha
adc
cmp
jo
outs
jne
neg
sub
(bad)
jae
aaa
xchg
mov
pop
mov
sti
mov
aas
call
hlt
loopne
out
push
daa
ins
imul
bound
mov
xchg
push
mov
cmp
mov
repnz
lahf
aas
icebp
add
jp
xlat
and
cdq
adc
scas
sub
std
sar
ins
cmc
or
imul
fist
inc
leave
aad
adc
sub
nop
aas
pop
imul
push
push
adc
add
repnz
cmp
jno
cmp
sub
rcr
sub
in
mov
push
lods
cli
cmp
cmps
clc
sbb
cmp
push
sbb
and
inc
push
xchg
mov
pop
jp
rcl
fist
push
shr
xchg
or
or
popf
adc
xor
imul
mov
test
and
movs
int
lea
mov
xor
mov
or
int
jbe
xchg
mov
mov
ins
movs
add
div
and
mov
dec
inc
xchg
inc
and
jle
inc
lock
mov
mov
ror
jge
(bad)
mov
push
loope
push
in
bound
imul
sbb
add
pop
dec
out
push
(bad)
imul
mov
inc
in
push
(bad)
cmp
imul
and
or
test
sahf
xchg
push
or
fcom
jo
or
or
mov
jae
(bad)
mov
and
cmp
in
movs
add
pusha
sbb
bound
ffreep
fidiv
pop
cmp
inc
daa
cmps
jmp
cld
clc
pop
mov
outs
mov
or
cs
jnp
adc
fimul
enter
das
or
leave
pop
aad
sbb
cmps
push
jge
jp
jb
dec
mov
cmp
jmp
aaa
xor
bound
call
xchg
icebp
push
pop
xchg
sub
(bad)
pop
mov
repz
call
aam
mov
(bad)
sbb
or
add
xor
(bad)
imul
lea
movs
mov
lds
cmp
or
clc
and
cdq
xor
push
das
outs
xor
into
xchg
and
int
popa
add
pusha
ret
aad
dec
(bad)
xchg
or
push
ins
imul
lahf
popf
ja
pushf
cmp
stos
stc
add
xor
push
dec
mov
pop
scas
(bad)
jecxz
push
jmp
mov
fadd
(bad)
dec
or
out
outs
pop
add
lods
movs
cmps
lods
fwait
out
mov
out
xchg
cmps
xchg
pop
push
xor
adc
xor
shl
xchg
adc
int3
adc
mov
inc
call
nop
in
leave
fcom
push
sbb
jae
and
shl
cwde
ins
pop
into
cwde
fist
je
outs
adc
mov
aam
jnp
mov
cmps
jns
push
enter
push
inc
ror
mov
std
sub
adc
neg
stos
repnz
push
mov
adc
ins
(bad)
jae
hlt
cmc
mov
jns
push
xchg
adc
xchg
sub
in
pop
xchg
dec
add
pusha
pusha
pusha
(bad)
out
mov
rcl
das
xor
mov
shl
cmps
inc
add
pop
adc
stos
and
fwait
test
data16
mov
sbb
lods
stc
or
add
mov
jmp
cdq
shl
sub
in
fidiv
inc
jge
or
gs
jmp
mov
scas
jmp
mov
aaa
jns
inc
cmp
pop
jecxz
xchg
push
cmc
retf
cmp
stc
mov
rcr
std
rol
add
jo
sbb
imul
ins
dec
or
sbb
das
cmps
jg
call
lds
sub
mov
aaa
add
jno
jno
pop
nop
sub
mov
outs
loopne
cdq
mov
jle
jecxz
adc
shl
cmp
mov
in
and
cmps
cwde
sub
or
mov
add
push
fstp
mov
cmp
mov
mov
sbb
pop
add
jp
cmps
sub
sub
out
or
lods
neg
popa
pusha
mov
fldcw
mov
(bad)
test
dec
xor
and
adc
popa
dec
int
inc
and
aas
outs
dec
jg
mov
jne
dec
jno
xor
outs
dec
push
es
adc
add
cwde
ins
and
stos
xchg
push
and
mov
ins
mov
call
fnstcw
loop
inc
ret
mov
jecxz
repnz
pushf
in
jg
repnz
outs
test
mov
pop
das
mov
mov
popf
mov
ja
int
and
pop
sbb
mov
push
lea
dec
(bad)
ret
lods
xchg
sbb
fcmovu
sbb
ret
pop
add
pop
(bad)
mov
retf
sub
sub
repz
imul
xor
mov
neg
sar
arpl
in
(bad)
jnp
out
xor
xchg
mov
pop
fs
xchg
clc
jmp
dec
sub
add
xchg
fs
mov
jle
mov
sbb
mov
(bad)
out
popa
mov
dec
fnsave
jmp
jge
inc
and
adc
mov
repz
add
in
nop
sub
hlt
xchg
cmp
pop
add
sub
stos
retf
push
ret
(bad)
imul
cwde
mov
mov
mov
cmp
push
and
dec
inc
xchg
(bad)
loopne
ins
push
fwait
push
jge
and
sbb
mov
aas
ss
xor
in
or
rcl
lahf
adc
mov
test
pushf
add
fstp
xchg
not
pop
adc
call
nop
sahf
sbb
sbb
out
dec
leave
pop
sub
clc
mov
sahf
adc
jne
push
jmp
push
stos
add
mov
inc
xor
leave
cmp
out
cmc
jne
add
call
mov
pop
lea
mov
fld
cdq
sub
lods
sbb
aas
xor
mov
test
ss
and
sbb
movs
push
jecxz
das
add
shr
adc
xor
mov
test
imul
jl
dec
cdq
push
mov
adc
stos
sub
sub
ja
ins
push
push
add
mov
lds
iret
loop
sar
xor
sahf
scas
mov
call
push
add
fldenv
in
dec
push
fcom
or
fisttp
in
pusha
and
je
jb
(bad)
or
popa
sbb
add
sbb
mov
gs
movs
dec
push
shl
add
lods
gs
push
ret
sbb
(bad)
int3
sub
dec
scas
loopne
fwait
stos
add
in
mov
enter
pop
sbb
xlat
jne
sbb
iret
ja
pop
sbb
ficomp
xchg
cmps
pop
shl
sahf
aas
push
sti
push
sbb
mov
adc
sti
frstor
pop
dec
adc
jns
sub
fnstenv
movs
les
jg
test
xor
sub
cmp
inc
add
cld
ins
pop
mov
push
popf
xlat
test
or
sbb
inc
daa
std
(bad)
in
in
stos
and
push
and
jno
jmp
outs
pop
fucomip
sub
imul
adc
les
in
dec
aas
add
push
fimul
add
in
jmp
outs
adc
dec
aas
cld
jae
pushf
inc
push
(bad)
repnz
lds
inc
jp
daa
jg
ss
add
mov
es
cmp
or
dec
sbb
mov
movs
lods
mov
push
int
fwait
jno
ds
aaa
pop
call
sub
jbe
push
or
pop
neg
int3
and
inc
xchg
jbe
cmp
push
jns
mov
mov
jecxz
sbb
push
sub
mov
mov
xchg
arpl
pop
into
fcom
cmp
cmps
ins
test
pop
add
inc
pop
pop
clc
sbb
daa
or
in
ret
pop
in
jbe
xor
jne
pop
lock
sar
xchg
lea
in
ja
sub
push
icebp
mov
mov
push
ins
cmc
ja
scas
pop
or
or
je
pop
jo
push
cmp
jge
push
mov
pushf
into
xor
nop
nop
pop
jno
add
jge
push
std
daa
mov
test
pusha
add
pop
pop
pop
cdq
xchg
les
mov
mov
mov
or
ret
js
cwde
sbb
xchg
push
push
scas
push
xchg
push
mov
jg
nop
lea
neg
push
sbb
push
xchg
jecxz
jge
mov
push
xor
xor
fs
dec
std
aas
pop
xor
sub
push
cdq
xchg
mov
retf
std
in
adc
add
or
cmps
pusha
test
xchg
mov
mov
mov
jae
(bad)
pop
mov
push
(bad)
ins
repz
call
sub
lods
mov
mov
inc
pop
out
dec
je
xchg
and
mov
or
lea
mov
and
cld
lods
imul
pop
cmc
repnz
pusha
xor
mov
dec
lock
int
adc
inc
sti
xchg
or
lds
stos
jnp
sub
fst
das
cmp
std
popa
and
or
sbb
mov
hlt
xor
sub
xchg
xchg
dec
in
fs
cmp
imul
test
aas
cld
add
pop
stc
loope
lods
in
inc
mov
mov
popa
push
gs
mov
fnsave
push
outs
mov
fnstenv
push
pusha
inc
mov
loope
sub
sti
mov
and
retf
(bad)
test
xor
mov
inc
(bad)
ds
stos
or
pop
daa
retf
(bad)
adc
xlat
jl
sub
aam
scas
adc
pop
out
adc
test
aas
push
aas
jmp
push
add
scas
mov
movs
test
sub
inc
jmp
cli
scas
and
imul
inc
sbb
sbb
jg
xchg
imul
aas
mov
daa
popa
inc
mov
das
or
xchg
sub
xlat
and
cmp
fiadd
or
sub
jns
pop
inc
(bad)
jg
ss
mov
push
mov
sub
jmp
mov
jbe
retf
sbb
repnz
pushf
(bad)
in
cli
addr16
movs
movs
mov
cmp
xor
test
cwde
pushf
xor
int3
outs
ret
imul
pop
aad
fisttp
push
or
clc
add
add
mov
in
pop
sti
and
push
and
mov
pop
int
mov
cld
jnp
js
das
push
xor
sub
push
icebp
mov
outs
je
rep
rcl
std
dec
pop
mov
mov
test
cwde
dec
fdiv
pop
js
push
dec
js
daa
scas
retf
inc
lahf
jp
push
mov
(bad)
inc
scas
sub
pop
dec
rcr
xchg
stc
pop
pop
add
cwde
std
scas
dec
test
pop
pop
js
cmp
jle
jmp
push
loop
pop
adc
hlt
pop
loopne
(bad)
jns
adc
imul
add
adc
arpl
push
push
sub
ja
addr16
add
mov
mov
xlat
mov
xlat
adc
mov
lea
std
popa
inc
test
push
loop
aas
(bad)
jnp
xor
xchg
adc
jg
mov
retf
pop
cmp
dec
shr
inc
fst
test
cwde
(bad)
sbb
pop
push
jg
xor
cdq
pushf
outs
jle
jmp
and
and
daa
sub
sbb
xchg
or
pop
je
loopne
xchg
pop
addr16
cmp
xor
in
and
sbb
movs
fbld
inc
clc
jl
nop
add
icebp
sbb
push
mov
adc
leave
out
jge
lods
pop
jecxz
outs
xchg
xchg
mov
or
add
mov
sbb
and
int3
stos
and
outs
sbb
lock
out
sti
add
data16
daa
xchg
or
mov
inc
mov
movs
loopne
inc
mov
in
test
cmc
mov
sub
xor
or
sbb
stos
fld
sti
sbb
jae
sbb
les
in
int3
test
dec
out
hlt
mov
inc
xlat
fadd
sti
popf
pop
adc
ror
ficomp
js
push
int3
or
ds
or
fstp
mov
push
imul
mov
push
stc
cs
mul
test
je
sub
xchg
jo
xchg
or
fmul
xchg
nop
nop
pop
cmp
stc
inc
pushf
icebp
dec
loope
dec
rcr
sahf
imul
pop
shr
test
adc
adc
bound
cs
mov
ror
mov
mov
jbe
pop
cmc
sbb
nop
je
add
(bad)
mov
fwait
(bad)
xchg
pop
enter
pop
jle
or
hlt
fisubr
or
(bad)
dec
cmp
scas
and
iret
and
out
cdq
dec
xchg
and
lahf
clc
push
mov
cmps
sbb
sbb
xor
pusha
out
adc
aad
test
shl
mov
outs
out
pop
shl
push
aaa
test
test
shl
jecxz
push
mov
pop
pminub
inc
cli
loope
mov
or
(bad)
je
into
imul
adc
or
je
outs
pop
xchg
push
dec
cmps
ins
fisttp
mov
inc
mov
add
into
ret
cmp
out
fsub
sbb
sbb
mov
push
(bad)
(bad)
xor
gs
cmp
sbb
mov
and
dec
aad
call
not
push
clc
(bad)
sbb
das
aad
sub
jecxz
jno
pop
fs
dec
call
icebp
into
shl
adc
rcl
mov
xchg
imul
repz
(bad)
sbb
push
mov
add
inc
(bad)
push
nop
stc
data16
fmul
(bad)
in
stos
and
sahf
fadd
aam
xor
sbb
pop
jecxz
xor
pushf
loop
sahf
sbb
xchg
mov
iret
js
je
es
push
jp
dec
xchg
sub
push
repnz
sbb
adc
dec
sbb
dec
enter
mov
mov
daa
test
cmp
scas
retf
push
imul
(bad)
rcl
sbb
mov
scas
xor
jne
adc
jp
ds
xor
cwde
jecxz
mov
clc
push
mov
sbb
movs
adc
and
nop
and
pop
shl
imul
inc
pushf
push
in
dec
cmp
mov
movs
adc
dec
mov
adc
jo
mov
sbb
and
aad
dec
(bad)
scas
ja
sti
rcr
repnz
dec
pop
arpl
add
dec
add
or
popf
js
fdiv
add
and
sahf
push
popf
scas
push
sar
fcomp
jge
or
test
push
push
jmp
mov
mov
dec
mov
adc
cld
stos
lock
mov
mov
ror
xchg
push
add
(bad)
cmps
and
in
ss
in
inc
aad
adc
movs
out
fsub
fst
cmp
sbb
shl
inc
dec
pop
sbb
add
test
js
arpl
jae
add
in
cmp
iret
test
loope
xchg
pop
bound
mov
jle
mov
and
mov
repnz
int3
mov
mov
je
movs
cmp
dec
mov
movs
fs
xor
retf
shr
es
cdq
clc
mov
jle
inc
xor
rol
mov
lahf
pop
sar
mov
shl
out
mov
sti
mov
xor
jbe
imul
not
js
div
call
nop
sbb
fst
sbb
rcl
push
mov
push
out
xchg
jno
test
aam
mov
cmp
or
jl
bound
or
loope
ret
(bad)
ss
xor
jne
mov
dec
fsubr
(bad)
jle
mov
lock
mov
arpl
leave
jne
inc
add
pop
pop
push
pop
xor
out
adc
push
js
pop
outs
push
inc
repz
and
add
adc
sub
dec
movs
outs
retf
repz
sbb
loope
lods
fistp
add
mov
ror
xor
cmps
jge
rol
pop
cmp
pop
and
mov
add
inc
pop
xor
sbb
pop
and
sub
fmulp
sahf
inc
fisttp
(bad)
jnp
mov
jl
xor
mov
add
jb
pop
fs
call
pushf
pusha
push
stc
repnz
adc
pop
shl
pop
loop
push
outs
ins
adc
pop
js
adc
add
xlat
retf
fsubp
xchg
cmc
neg
mov
xchg
cmp
mov
push
pop
sbb
out
test
fistp
sti
pop
pop
inc
xlat
out
jb
xor
push
ins
pop
daa
push
in
stos
hlt
pop
jmp
ins
cli
add
addr16
ror
mov
push
mov
fbstp
lea
(bad)
jno
(bad)
jp
mov
and
xor
cmp
inc
or
test
div
xadd
sub
mov
push
lods
std
int3
pop
cmps
xor
xchg
lahf
lods
cmp
out
sbb
shl
jge
push
cs
or
xchg
popf
leave
push
and
cs
cmps
xchg
jns
cld
into
les
les
and
fidivr
addr16
mov
or
stos
lahf
aas
gs
loopne
cmp
fidivr
int
ret
daa
mov
imul
aaa
push
or
nop
mov
and
es
add
add
xchg
jle
sub
mov
and
loope
lock
je
cld
daa
(bad)
sub
(bad)
jmp
rcl
mov
sub
mov
sahf
pop
adc
cmp
not
pop
push
jno
lods
xor
xlat
jno
dec
adc
ins
cmp
aad
mov
sub
pop
push
xor
sbb
clc
pop
nop
push
jl
fdivr
(bad)
aas
xchg
jbe
fs
pop
sub
inc
or
in
pop
xor
jns
das
pop
and
jp
and
mov
ss
and
std
imul
cmp
cmp
push
in
jl
ror
mov
xchg
xchg
dec
or
cmp
jle
jo
mov
mov
cs
aad
mov
adc
dec
jge
fwait
mov
gs
jecxz
aaa
mov
rol
or
xor
xchg
outs
repnz
jmp
add
cmps
jle
mov
ja
mov
enter
mov
mov
mov
sub
inc
sahf
dec
popf
enter
pusha
jp
test
cmps
mov
mov
enter
inc
xor
cmps
xor
cmc
fdivr
ret
ins
adc
mov
adc
pop
popa
sahf
leave
sbb
repnz
xchg
xlat
xchg
daa
ret
mov
repnz
inc
outs
adc
daa
cmc
inc
push
xchg
adc
cmps
xchg
(bad)
ins
ret
xor
into
jo
mov
pop
xchg
xchg
mov
sbb
cmp
push
test
mov
cmp
scas
lahf
dec
push
mov
pushf
test
shr
mov
pusha
dec
stos
fs
int
dec
hlt
pop
ds
inc
sqrtps
mov
adc
xchg
mov
scas
adc
fdiv
iret
clc
adc
jmp
shl
cmps
pop
in
push
stos
xchg
nop
arpl
sbb
add
jg
cli
icebp
mov
adc
and
pop
mov
inc
or
lea
xor
cdq
or
sbb
inc
leave
loopne
sub
dec
loop
and
fld
lahf
pop
bound
cld
out
aad
xor
(bad)
(bad)
mov
inc
scas
stos
and
outs
(bad)
call
retf
cdq
push
mov
fs
les
jae
jle
or
jae
or
and
mov
mov
pop
sbb
arpl
jg
adc
idiv
loopne
dec
call
sbb
mov
jg
mov
and
movs
ins
push
std
pop
pop
cmps
sbb
das
push
pop
xchg
aas
and
stc
inc
out
inc
lahf
fmul
retf
std
cs
pop
sub
mov
in
push
mov
cld
sar
gs
dec
in
movs
xchg
sar
xchg
loope
in
and
sub
mov
stos
enter
push
ror
add
test
adc
std
cmp
inc
outs
lods
inc
jle
push
inc
es
div
push
xlat
or
pop
loop
push
fwait
ja
int
aaa
push
cdq
cmp
jbe
ficom
mov
mov
and
inc
sbb
dec
xor
stc
mov
dec
mov
call
adc
add
xor
push
retf
enter
push
add
xor
jl
stos
dec
mov
shl
push
add
mov
movs
mov
movs
pop
sbb
add
pop
in
add
cwde
jb
movs
jbe
push
pop
ss
push
(bad)
dec
ret
adc
dec
clc
(bad)
sbb
adc
in
lock
pop
pop
sub
cmp
ficom
int3
jbe
jno
inc
cdq
xchg
and
mov
daa
adc
(bad)
(bad)
mov
rcr
cmp
aaa
mov
pop
pop
(bad)
retf
add
dec
jle
push
sbb
jae
inc
xor
cmp
cmps
mov
inc
mov
ds
and
cmp
repz
jle
out
and
add
xchg
mov
xchg
dec
ficom
(bad)
sti
dec
pusha
jnp
push
cwde
mov
xor
mov
xchg
retf
push
outs
mov
sub
aam
jbe
inc
adc
sbb
test
jne
mov
inc
clc
push
pop
shl
mov
sti
mov
cs
(bad)
movs
mov
sbb
sahf
mov
aam
stos
cdq
fist
imul
pop
and
retf
cdq
xor
xchg
imul
fcomp
jl
or
ds
nop
add
dec
xor
xor
clc
out
xchg
and
jle
fild
xchg
sti
adc
dec
loop
jae
dec
or
ja
out
call
sbb
lahf
movs
mov
out
mov
sub
outs
cmp
inc
mov
dec
repz
add
mov
movs
in
ror
adc
mov
or
or
(bad)
lods
or
std
je
cmp
test
jge
dec
movs
ret
mov
dec
shl
lock
rcl
movs
js
pop
shl
adc
dec
or
mov
push
in
fld
test
ja
fcom
jne
sub
(bad)
mov
arpl
and
sbb
cmp
adc
stos
mov
cmp
inc
shl
sahf
sbb
(bad)
aad
xchg
iret
and
mov
nop
add
data16
sub
mov
je
gs
sbb
in
cmp
inc
push
xchg
or
out
pop
jbe
dec
mov
mov
adc
sbb
sbb
shl
inc
mov
cwde
adc
rcr
jnp
jmp
fistp
push
mov
xchg
mov
test
loopne
cmps
std
das
adc
mov
cld
test
sahf
cs
push
daa
cmp
sbb
xchg
jp
xchg
shr
(bad)
fimul
and
sbb
sub
add
xchg
mov
test
(bad)
mul
xchg
(bad)
out
in
sub
xchg
fdiv
(bad)
add
adc
or
pop
mov
xchg
mov
sbb
cmc
stc
or
pop
jge
adc
(bad)
(bad)
retf
sub
mov
or
stos
dec
mov
sub
js
sbb
inc
sbb
enter
mov
mov
(bad)
dec
inc
sub
ins
shr
xchg
mov
arpl
cs
test
fbstp
call
pushf
push
mov
adc
shr
cmp
dec
fwait
mov
cli
sub
mov
inc
xchg
jbe
ja
outs
sar
sub
lock
xchg
push
push
sub
mov
addr16
push
push
inc
into
push
js
aas
pop
es
std
addr16
xchg
stc
ins
fdivr
push
push
mov
sbb
lods
jnp
cmp
repz
xor
mov
out
jne
mov
xchg
cmp
dec
xlat
jge
lds
jecxz
js
inc
sub
mov
xchg
xlat
cmp
(bad)
(bad)
fimul
xor
xor
fistp
addr16
push
daa
out
jg
inc
cli
mov
push
nop
arpl
fwait
mov
mov
inc
cmp
jne
inc
sub
or
test
pop
mov
add
mov
cli
mov
and
sub
jnp
xor
loop
test
outs
pop
sbb
cmp
neg
bound
mov
dec
adc
push
sbb
cs
cmp
popa
xor
pop
je
mov
int
fcmovnbe
xor
mov
xchg
xchg
add
lock
inc
sbb
mov
icebp
sbb
and
inc
mov
std
dec
sti
(bad)
cmp
fild
pop
outs
loope
fcomip
aad
pop
test
jnp
ret
in
fsubr
ret
or
pop
or
xor
push
adc
mov
mov
cmps
dec
test
or
aas
scas
adc
sbb
shr
mov
rcl
test
fcomi
arpl
(bad)
sub
mov
mov
inc
imul
into
sbb
outs
aad
xchg
wrmsr
mov
adc
push
sub
sub
push
jns
sbb
cmps
outs
push
daa
imul
popf
cmp
aaa
jmp
jmp
ror
jp
mov
jmp
in
jmp
mov
scas
imul
push
call
jbe
mov
shl
adc
mov
jnp
inc
std
js
lods
dec
mov
call
test
and
inc
int3
mov
mov
stos
ins
sub
mov
retf
fld
je
aad
into
xor
dec
lods
loopne
mov
pop
retf
imul
sub
jnp
mov
retf
add
leave
aaa
mov
jmp
js
sub
sbb
cmp
lahf
or
popa
mov
dec
mov
xchg
loop
push
and
call
jmp
push
out
or
or
ja
or
sahf
cmp
in
in
pop
(bad)
(bad)
test
mov
mov
sbb
cmc
push
xlat
or
sbb
dec
loopne
inc
ins
mov
xchg
jge
icebp
lahf
iret
inc
leave
adc
add
jle
push
mov
sbb
jmp
xor
sbb
dec
dec
stos
jnp
xlat
xor
outs
sbb
mov
movs
jb
lea
jg
lods
test
push
inc
pop
lahf
mov
sub
sbb
or
mov
mov
out
jno
movs
addr16
adc
jbe
fwait
vprotq
sub
pop
cld
loopne
lahf
imul
movs
pop
mov
enter
inc
sti
jecxz
mov
xor
repz
hlt
cmps
into
jecxz
pop
jae
ss
pushf
and
add
fldenv
mul
cmp
retf
lods
and
xor
sti
jmp
cmc
dec
popa
enter
sbb
call
sub
sub
sti
and
inc
jo
pushf
push
loope
inc
rol
dec
lahf
sub
jg
add
fdivrp
inc
cmp
adc
stos
jnp
into
shr
cmps
sbb
push
jmp
fistp
sub
cmps
(bad)
std
inc
jnp
outs
repz
cmp
add
mov
les
pinsrw
push
fstp
cmp
inc
stc
clc
xor
iret
jno
add
popf
setbe
in
mov
mov
xchg
int
mov
or
push
lods
outs
(bad)
adc
bound
jl
push
sti
je
sub
add
retf
mov
push
(bad)
out
add
mov
cmp
push
cmc
daa
aad
enter
mov
dec
sbb
repz
dec
dec
add
inc
pop
idiv
rol
mov
les
cld
lds
mov
jmp
aam
mov
sbb
fist
cmps
mov
or
cmp
es
les
not
mov
jbe
or
mov
iret
push
sub
aam
les
addr16
std
cmp
pop
or
mov
push
(bad)
in
stos
pop
jl
mov
fst
inc
dec
mov
jl
or
lea
in
(bad)
jmp
sti
ret
lods
mov
retf
lahf
aaa
push
sahf
cmc
xor
pop
push
dec
push
bound
jp
test
hlt
push
cld
fidiv
sbb
shl
bound
adc
mov
cmp
inc
jmp
fidivr
mov
and
sbb
lods
dec
inc
test
int
retf
jae
mov
fst
push
sub
icebp
jne
rol
repnz
dec
outs
jno
jns
(bad)
ins
mov
jecxz
shr
and
and
(bad)
xor
imul
push
jbe
sbb
jecxz
xchg
(bad)
mov
inc
cmp
(bad)
(bad)
in
add
call
dec
mov
cmp
das
cmp
push
scas
rol
inc
sub
inc
call
xlat
test
jp
cmp
inc
daa
shr
mov
pop
inc
cmp
mov
sbb
cmp
add
sahf
nop
pushf
aas
push
and
ret
fidiv
push
mov
xor
mov
mov
push
cmp
aaa
or
clc
and
pop
push
sub
dec
cmp
enter
sbb
rcr
addr16
pushf
data16
iret
ror
push
mov
cmp
js
cmp
in
sub
xlat
cmp
or
dec
in
sbb
xchg
cmp
cmps
jno
dec
cdq
pop
cs
jmp
mov
mov
(bad)
sbb
sub
pop
add
dec
mov
scas
xchg
mov
jnp
clc
dec
push
ss
dec
call
lea
into
aas
mov
xchg
hlt
test
mov
mov
jl
adc
lahf
jne
push
and
mov
aaa
mov
iret
(bad)
in
shl
xchg
dec
(bad)
push
out
mov
mov
pop
xchg
packuswb
push
ret
stc
jnp
outs
mov
outs
std
jmp
mov
es
icebp
out
sub
fisub
sbb
fcomi
cmp
stos
and
repnz
in
cs
movs
hlt
add
mov
adc
pop
mov
iret
jmp
nop
mov
in
xchg
sti
popa
out
loope
lea
adc
loope
rol
mov
test
xchg
cmps
cmp
adc
repz
(bad)
loope
in
mov
adc
clc
lods
xchg
fs
movs
out
xchg
mov
sbb
mov
ins
fucomip
or
adc
jbe
jecxz
pusha
pop
add
dec
pop
mov
pushf
mov
sahf
jnp
dec
aad
push
mov
out
dec
mov
jecxz
gs
pop
loop
test
or
fcomp
loope
dec
sbb
dec
sti
or
push
mov
out
cmp
leave
int
push
and
(bad)
sar
mov
sbb
or
ret
retf
add
push
hlt
mov
adc
xchg
pop
mov
scas
cmp
inc
rcl
lahf
fldenv
sbb
dec
adc
inc
inc
out
hlt
stos
test
int
pop
push
jne
jmp
mov
aad
or
mov
mov
(bad)
push
push
push
cmps
outs
sbb
and
call
inc
jl
jmp
ins
fcom
and
push
outs
scas
add
js
es
movs
jb
push
push
xor
fcom
push
in
inc
gs
(bad)
in
hlt
sub
lods
lock
mov
mov
ins
pop
aad
int
push
(bad)
mov
pop
dec
sar
xchg
jp
adc
clc
pusha
pop
mov
sub
sub
push
cmp
out
imul
cli
xchg
adc
ficomp
inc
lds
jge
js
inc
pop
rcr
fld
out
xor
outs
or
mov
sub
imul
dec
fstp
std
ror
pusha
dec
adc
aas
ror
ins
sbb
mov
fisubr
sub
mov
dec
xlat
test
rol
mov
mov
cld
mov
lock
lahf
mov
(bad)
sbb
mov
pusha
mov
std
sbb
xchg
jmp
(bad)
push
arpl
adc
arpl
inc
test
adc
add
adc
ins
sbb
xor
shl
adc
dec
sub
mov
ins
xchg
push
adc
mov
sub
sub
mov
stc
(bad)
clc
gs
mov
ret
mov
fcom
inc
xchg
jnp
or
imul
repnz
pop
inc
push
push
stos
xchg
sar
int3
mov
push
push
stc
inc
cmps
cmps
or
mov
repz
test
fist
adc
jl
and
jns
cmp
in
sbb
dec
adc
mov
(bad)
shr
pop
iret
jmp
ret
rcl
pop
es
dec
daa
jmp
mov
sub
fwait
retf
jmp
xlat
idiv
call
es
rol
mov
sbb
inc
xor
popa
and
repz
mov
lock
jns
retf
mov
std
aaa
(bad)
in
mov
xchg
mov
inc
jp
or
dec
jns
sub
cmps
push
jp
inc
mov
add
xor
icebp
mov
lds
loopne
add
into
fnstsw
mov
call
xor
ret
sbb
jno
shl
pushf
mov
adc
clc
jge
jecxz
lods
or
aam
imul
xor
pop
addr16
rcl
jp
(bad)
loop
jno
imul
mov
sti
xor
test
(bad)
fs
xchg
outs
(bad)
aad
pusha
leave
call
lock
cld
sti
adc
mov
ficomp
aaa
push
push
xor
mov
cmp
(bad)
retf
fistp
push
mov
(bad)
push
fld
xor
xor
aad
push
loopne
and
test
arpl
dec
pop
mov
aas
or
fstp
mov
out
jg
mov
cdq
pop
push
fs
pop
test
cmp
(bad)
push
and
les
inc
call
pop
shr
cld
adc
dec
int3
aas
add
fabs
cmp
xor
and
mov
and
add
imul
hlt
sbb
sbb
adc
mov
mov
fstp
jne
gs
or
xor
imul
into
pop
xor
jne
mov
push
retf
outs
inc
and
push
popa
call
pop
daa
sbb
mov
dec
jb
mov
mov
fidiv
out
mov
and
popa
mov
ja
adc
mov
add
mov
ja
mov
ja
(bad)
sbb
lock
inc
sub
std
pop
mov
cmp
ret
mov
mov
test
out
xchg
mov
mov
xor
or
sbb
in
gs
fdivr
movs
adc
and
fwait
repnz
fist
stos
sub
jno
mov
call
cs
(bad)
mov
dec
popf
jnp
and
jecxz
loop
push
outs
dec
add
aas
xchg
loopne
sti
push
in
ins
mov
loop
add
push
adc
outs
mov
sbb
lods
jbe
sbb
adc
fistp
jmp
je
shr
pop
xchg
jecxz
cmps
fnsave
inc
retf
push
sti
adc
enter
xchg
das
inc
in
shl
pop
ret
push
push
call
mov
aad
xchg
daa
aas
mov
pusha
lock
pop
xchg
add
loope
adc
int3
jp
lahf
pushf
pop
adc
ret
pcmpgtw
add
imul
cmps
stc
or
pop
hlt
xor
sar
cmp
inc
rcl
imul
mov
xlat
inc
dec
and
xor
fistp
cdq
adc
pop
sub
push
push
mov
into
dec
or
add
cmp
fisub
add
xor
out
movs
daa
call
addr16
leave
data16
fild
out
mov
aas
push
inc
(bad)
out
or
xor
push
add
or
mov
js
imul
add
imul
lods
das
(bad)
xor
nop
fld
fnsave
sub
(bad)
cmp
xor
stos
movs
cmp
xchg
clc
test
(bad)
popa
dec
push
in
mov
mov
loop
mov
out
mov
push
outs
jns
lahf
adc
jmp
push
adc
cwde
push
pop
xlat
fimul
inc
adc
lea
xchg
pushw
xor
jge
mov
addr16
cmps
leave
mov
xor
cmps
call
mov
std
mov
jbe
sbb
jae
mov
shl
pop
pop
push
rcl
mov
jl
ins
xchg
iret
adc
xchg
ins
xchg
out
mov
shl
dec
push
(bad)
adc
pushf
fsubr
xor
stos
xchg
sub
cmp
sahf
lods
stc
out
mov
dec
ret
adc
cld
xchg
ins
loop
inc
sbb
cld
sbb
mov
out
cli
scas
outs
mov
movs
push
mov
movs
mov
lea
mov
jle
clc
mov
cmp
sbb
fsub
nop
sbb
inc
mov
mov
xchg
test
mov
(bad)
scas
lds
ins
fnstsw
ds
xor
adc
fs
outs
xor
iret
sub
stos
push
jne
fdiv
rcl
xchg
iret
movs
inc
cmp
rol
clc
xor
daa
stos
nop
repz
fisttp
pusha
cmps
adc
ss
cdq
jmp
into
imul
in
and
or
outs
stos
or
cmovge
adc
adc
sub
add
push
push
adc
xor
pop
mov
push
xor
mov
xchg
jb
call
push
fsubr
xlat
fld
sub
adc
add
(bad)
xchg
(bad)
cmp
pop
mov
data16
stos
push
jb
jecxz
mov
repz
lds
gs
cmp
les
mov
std
and
in
xchg
mov
add
or
scas
jae
retf
add
add
movs
je
js
enter
xchg
dec
pusha
pushf
mov
fcomp
xlat
imul
push
mov
push
push
sbb
lahf
push
sub
push
mov
icebp
xchg
ret
sbb
ins
inc
mov
sub
(bad)
adc
fistp
cmp
push
mov
mov
dec
test
(bad)
hlt
push
sub
sahf
fwait
popa
xchg
je
lods
daa
mov
loop
mov
and
mov
push
not
es
scas
ins
pusha
add
je
repz
mov
mov
jns
movzx
outs
and
xor
cmp
aam
sub
cld
adc
cli
mov
ins
xor
sub
fidiv
fwait
xor
aam
add
xchg
mov
repz
mov
call
(bad)
cli
add
jmp
das
cli
xor
lock
adc
movs
cmp
out
pop
mov
mul
jne
sbb
jg
fcmovne
out
pop
sar
push
mov
imul
lods
cmp
xchg
sub
stc
les
sub
or
fsubr
sub
add
dec
xchg
sbb
les
fisub
adc
mov
pop
xor
mov
pop
push
mov
js
(bad)
dec
push
sub
aam
and
pop
inc
pop
sahf
jae
retf
inc
mov
in
mov
or
ficomp
stos
xor
push
mov
rcl
push
daa
mov
and
xor
seto
xchg
out
push
adc
(bad)
xor
adc
stos
out
mov
xchg
call
dec
clts
sub
repz
push
pop
sahf
or
adc
pop
and
cmp
jmp
into
js
xor
int
pop
out
and
inc
xor
xchg
cmp
icebp
sbb
adc
pusha
outs
fist
das
pop
pop
dec
push
sbb
pop
mov
fisttp
fst
push
outs
mov
inc
dec
adc
out
repz
bound
mov
aaa
mov
pop
div
dec
cmp
sar
mov
repz
les
xor
push
cld
mov
les
or
(bad)
mov
shl
sub
push
in
loope
xor
push
sbb
fiadd
pop
not
call
push
mov
inc
pusha
ret
stc
out
sar
test
in
daa
push
add
retf
or
push
mov
gs
sub
test
mov
dec
fsubr
xor
jge
adc
ror
loop
call
mov
inc
xchg
ret
adc
jge
inc
push
inc
out
jnp
sub
sti
mov
repz
not
jne
(bad)
cmp
imul
pop
add
daa
lock
shl
scas
movs
inc
bts
loop
in
add
jno
pop
jg
lahf
outs
enter
loope
call
dec
lock
adc
cld
out
arpl
inc
cmp
xchg
call
pop
outs
mov
xchg
repz
jae
loopne
push
fld
mov
push
or
jle
jno
out
cmp
inc
test
add
lods
call
js
xor
inc
retf
xor
cwde
mov
in
ret
mov
or
pop
iret
dec
adc
cs
cmp
popf
es
ror
icebp
lock
adc
mov
jle
sbb
outs
imul
xor
rcl
jmp
fild
xchg
and
outs
jle
pushf
movhlps
je
or
sbb
xchg
div
or
sahf
fild
mov
xor
fldenv
fsubr
out
mov
daa
dec
jl
mov
sub
xor
pusha
cmp
mov
lds
inc
mov
pusha
add
mov
cs
jmp
push
cdq
(bad)
icebp
sbb
loope
inc
retf
mov
pop
inc
clc
dec
inc
sub
or
ds
sbb
sub
push
mov
repz
add
jle
test
mov
out
push
sbb
inc
arpl
rcl
pop
cwde
imul
popf
mov
adc
cdq
cmps
and
(bad)
lahf
pop
or
fnstenv
popa
add
jecxz
aaa
dec
enter
jnp
js
outs
jge
jnp
inc
aad
into
(bad)
lahf
add
fs
push
in
jge
push
mov
sti
xor
(bad)
not
lods
inc
test
lahf
pusha
jmp
or
jecxz
mov
lock
mov
in
pusha
push
or
ins
xor
shl
lods
mov
(bad)
adc
lea
mov
dec
jecxz
pop
cdq
xor
inc
das
xchg
repnz
outs
lds
(bad)
std
scas
mov
sbb
mov
adc
out
ss
aad
dec
push
and
fisubr
mov
mov
ror
js
xor
dec
inc
push
fucomp
(bad)
jns
dec
daa
cmp
sbb
arpl
not
sbb
jo
jns
jbe
inc
shl
sub
outs
stc
xor
popa
push
fdiv
push
repnz
mov
ror
jae
jg
xor
cwde
pusha
push
pop
sub
pop
xchg
mov
add
call
cwde
into
sbb
ret
lahf
sbb
out
lds
fisttp
jge
jo
stc
fidivr
jp
pop
ja
das
push
adc
push
cmps
call
sti
dec
jb
repz
add
sub
jmp
fisttp
fnsave
xchg
adc
dec
xchg
jae
fs
mov
cmps
mov
fs
sub
aas
cmp
sub
out
xchg
adc
test
icebp
mov
test
loop
mov
lods
scas
inc
xlat
mov
push
(bad)
aas
mov
xchg
lea
dec
movq
add
jle
mov
push
push
adc
pop
or
mov
inc
pusha
sub
adc
pop
mov
fwait
sti
test
mov
lds
ja
call
(bad)
sub
into
dec
outs
mov
retf
push
and
das
pop
pop
sub
addr16
dec
ror
push
adc
mov
push
hlt
mov
(bad)
fldenv
xchg
hlt
inc
fwait
xchg
dec
xchg
cld
pop
sub
addr16
push
sub
xor
int3
out
(bad)
mov
lahf
add
dec
dec
cmps
sub
inc
pmaxsw
cmps
ret
ror
mov
cwde
push
mov
lods
mov
mov
mov
xor
icebp
es
(bad)
cld
stc
or
xor
retf
mov
xchg
cmp
pop
inc
xchg
adc
cld
xchg
ret
les
sbb
js
xchg
cmp
adc
std
stos
mov
jne
push
inc
sub
or
pop
mov
(bad)
(bad)
push
mov
repnz
cmp
sbb
push
fld
ficomp
jecxz
dec
push
xchg
cdq
mov
inc
js
jecxz
push
out
xchg
sahf
jl
mov
inc
clc
call
fsubr
xchg
jns
jmp
(bad)
and
mov
push
cmp
aam
or
test
test
stos
mov
add
out
pushf
fwait
(bad)
sbb
push
pop
xchg
pop
cs
add
pop
cmp
test
push
leave
outs
fsubr
xor
jl
adc
stc
xchg
test
mov
aaa
repnz
mov
fstp
sub
sub
in
fiadd
(bad)
mov
xor
hlt
mov
iret
add
dec
or
js
fbstp
mov
cmc
scas
or
ss
cmps
sti
mov
shl
(bad)
in
in
nop
cmp
cmps
dec
and
push
in
cli
gs
repz
icebp
jae
push
fdiv
xor
and
adc
mov
je
in
fist
cdq
jmp
sbb
jb
(bad)
dec
jg
and
mov
test
xchg
cmps
jae
mov
mov
jmp
xchg
stos
dec
cmps
mov
out
add
fisttp
(bad)
mov
pop
jne
inc
fidiv
pusha
bound
sbb
pop
jecxz
rol
fistp
ffreep
jae
inc
aaa
scas
jne
xchg
gs
test
mov
lahf
arpl
jae
out
out
sbb
lods
jecxz
(bad)
stos
lea
scas
push
jb
stos
je
and
cwde
cwde
(bad)
dec
out
xchg
xchg
test
(bad)
mov
jae
(bad)
into
(bad)
cli
lahf
push
xchg
xchg
jmp
rcr
inc
mov
loope
sub
push
test
adc
mov
into
in
inc
rcr
ss
jle
call
adc
and
and
sahf
outs
jmp
mov
mov
push
sbb
imul
jo
inc
push
jp
(bad)
pop
jg
and
jae
(bad)
fist
mov
push
scas
test
mov
sub
call
mov
cli
jno
or
xchg
rol
fiadd
push
mov
(bad)
xor
out
inc
jb
and
pop
push
gs
or
jbe
inc
ds
pusha
mov
imul
jo
pop
es
dec
xor
or
adc
xor
mov
(bad)
rcr
pushf
hlt
dec
mov
cmp
push
ror
aas
and
sub
dec
jecxz
add
mov
out
pop
sbb
dec
mov
repnz
lds
push
inc
shl
jmp
lds
in
ret
fs
push
or
jge
mov
xchg
icebp
int
adc
enter
fsub
pop
inc
popf
cmp
xchg
hlt
test
mov
shl
cwde
aas
outs
xchg
jecxz
gs
cmps
or
mov
jp
ds
cmps
fsubr
push
out
adc
adc
adc
popa
bnd
xchg
ret
or
out
ins
inc
sub
imul
push
xor
pop
lock
dec
ret
adc
cmp
pop
and
inc
cwde
outs
cmc
xor
mov
fisub
cdq
xchg
add
jno
mov
js
pop
lods
lds
inc
xchg
xor
sbb
dec
test
fild
xor
stos
push
popa
mov
daa
cmp
push
sub
xchg
test
fst
add
inc
ins
and
stc
adc
dec
sbb
add
and
adc
aas
or
bound
inc
push
test
sti
xor
jno
jne
lods
sbb
and
ret
popa
dec
mov
ds
mov
mov
jo
inc
test
mov
retf
xor
cdq
xor
sub
sbb
movs
clc
jecxz
repz
stc
das
mov
mov
push
and
cld
cmp
mov
lds
mov
mov
in
jg
stos
inc
pop
cld
mov
adc
xor
and
pop
or
stos
retf
shl
mov
jmp
ds
(bad)
and
and
sbb
mov
push
aas
xchg
loope
jbe
adc
data16
icebp
sti
or
inc
fcomi
adc
sbb
out
pushf
mov
dec
jp
cli
into
jg
mov
scas
cld
shr
jo
out
cwde
push
cmp
mov
js
scas
jno
xlat
in
and
inc
mov
pop
ja
pop
push
inc
sbb
(bad)
hlt
add
dec
adc
int3
loop
mov
mov
cmp
and
and
ficomp
jbe
push
jno
cwde
sbb
xchg
pop
clc
cmp
aam
sbb
psubb
out
fsubr
mov
fwait
push
mov
jmp
add
xor
jge
mov
dec
pop
outs
popf
push
push
cli
(bad)
(bad)
sbb
shr
popa
loop
mov
sbb
lock
cmp
cmp
xchg
repz
repz
cmp
(bad)
push
cli
pushf
cmc
inc
pusha
not
fadd
cmp
xchg
imul
(bad)
adc
adc
add
lods
ins
cmp
les
gs
out
fistp
stc
inc
mov
sahf
hlt
int
cmp
leave
mov
xor
out
xlat
jg
retf
clc
ja
lahf
pop
inc
mov
xchg
rol
sbb
jae
test
adc
mov
js
shl
pop
cmc
jecxz
and
add
sbb
mov
jne
add
adc
out
jb
inc
jle
inc
cmp
sbb
cld
addr16
nop
dec
sbb
or
cmp
adc
stos
pop
aaa
paddsw
pop
pop
popa
add
cld
dec
int
and
into
inc
push
cli
sub
jne
xchg
xchg
or
mov
push
push
xchg
ret
adc
add
pop
hlt
xchg
pop
mov
hlt
mov
fcmovnu
push
xlat
cmp
enter
add
jmp
ins
fild
and
mov
out
sub
and
xchg
not
mov
inc
mov
pop
or
add
cwde
leave
jmp
test
fmul
clc
std
leave
fadd
jl
jp
mov
adc
popf
xchg
mov
push
scas
adc
add
test
pop
jne
push
add
retf
inc
and
cmp
ror
cmps
nop
sub
sbb
xchg
mov
mov
mov
push
push
push
retf
fst
test
sbb
jns
ret
push
mov
data16
pushf
pop
jge
adc
clc
sub
shl
xchg
movs
and
adc
pop
xlat
inc
pop
cmc
sbb
mov
jl
push
sub
pop
js
mov
sbb
pop
repnz
add
inc
mov
ret
jne
loop
pop
dec
xchg
jmp
scas
jo
dec
mov
test
mov
out
pop
cdq
push
jno
cmp
xchg
mov
daa
jle
test
adc
pop
push
cmps
xlat
loope
in
jmp
mov
repz
add
cmp
and
repnz
or
jno
iret
retf
fwait
adc
dec
repnz
pop
sub
push
adc
pop
mov
or
xor
or
test
mov
sub
pop
sti
cmp
xchg
add
(bad)
pop
add
sub
scas
dec
loopne
std
sbb
push
inc
add
sbb
shl
das
fstp
pop
inc
adc
mov
shl
cmovl
js
test
dec
mov
leave
dec
in
sahf
ret
ror
call
jmp
cmp
hlt
cmp
loopne
fist
push
mov
dec
adc
str
push
ret
inc
dec
mov
or
pop
maxps
xchg
int
push
out
cmp
gs
cmp
mov
sbb
repz
dec
and
loop
adc
mov
shl
(bad)
popa
cmps
sbb
aam
mov
pushf
jle
movs
pop
movs
adc
jae
mov
fisub
xor
jne
mov
mov
cwde
push
dec
add
cmp
in
fadd
jle
dec
adc
inc
scas
mov
jnp
or
sub
cmovle
xor
push
mov
pop
pop
sub
(bad)
push
fdiv
out
repz
out
xchg
add
jns
dec
add
dec
mov
cmp
fcomp
fild
mov
ret
int3
cmp
or
or
out
cmp
nop
cld
adc
dec
push
call
out
fild
stc
mov
xchg
push
fsubr
int
call
stos
jl
mov
or
xchg
int
es
mov
push
les
loopne
mov
add
pop
(bad)
xchg
js
daa
and
push
and
test
stc
xchg
mov
test
jns
mov
mov
outs
dec
fbld
cmp
add
scas
pushf
mov
and
xchg
scas
cmps
out
jmp
mov
nop
jmp
test
or
mov
aas
dec
ja
int
xor
mov
inc
push
cmpxchg
sbb
xor
or
movs
dec
cwde
xchg
stos
mov
add
mov
test
stos
loopne
add
push
inc
pushf
ja
or
ror
jl
imul
push
mov
icebp
fisttp
dec
xchg
xor
repz
es
mov
push
sbb
xor
ret
dec
pop
mov
pop
in
pusha
ins
cs
movs
dec
daa
cmp
aaa
scas
xchg
cmp
ret
jl
adc
test
or
pop
(bad)
pop
out
dec
fiadd
push
jno
dec
sbb
cmp
push
adc
push
pop
push
add
adc
test
jg
cli
fs
cmp
(bad)
mov
jge
addr16
inc
push
gs
pop
sti
sahf
pop
sar
je
mov
std
mov
dec
ret
les
adc
test
repz
das
mov
push
je
test
out
loope
and
mov
ins
push
aaa
pop
and
outs
pushf
stos
sub
fimul
dec
jb
inc
cmp
xor
mov
imul
or
sbb
pop
ins
xor
inc
push
div
xor
aam
ins
or
lock
push
sbb
sbb
ficom
dec
(bad)
adc
clc
xchg
arpl
popa
cs
mov
fdivr
sbb
push
int3
jnp
dec
stc
out
ja
fistp
sbb
cmp
cdq
xchg
pop
mov
adc
cli
ds
dec
test
xor
add
push
fcomp
mov
mov
jb
fbstp
lds
push
cmp
nop
mov
sahf
js
and
int3
xchg
dec
inc
and
ja
ret
sahf
loope
movs
mov
dec
add
jnp
pop
inc
stos
iret
ss
mov
js
clc
stc
arpl
aaa
and
mov
pushf
add
inc
jae
mov
add
(bad)
xor
cdq
or
add
mov
mov
leave
fstp
inc
(bad)
xchg
loopne
cmp
enter
test
push
fisubr
movs
data16
mov
out
loopne
ucomiss
adc
jne
add
or
fdivp
(bad)
sub
push
and
cdq
or
repnz
push
push
out
stos
jbe
frstor
fwait
mov
aaa
mov
in
sar
push
outs
repnz
pop
icebp
or
in
movs
dec
lahf
push
sub
out
dec
jns
mov
or
fisttp
xchg
jnp
dec
pop
int
add
xchg
ficom
cmps
cmc
into
mov
pop
mov
je
sahf
sub
les
pusha
sub
jbe
or
push
jbe
test
sbb
jbe
lahf
cwde
push
mov
or
jge
aas
mov
pop
retf
movs
push
inc
es
sub
mov
or
stc
push
into
push
jecxz
das
nop
aad
mov
push
and
dec
sub
out
inc
movs
inc
out
lods
(bad)
icebp
fstp
fs
adc
add
cmp
loopne
push
test
fsubr
inc
push
leave
int3
nop
sub
mov
test
push
mov
add
in
mov
xor
scas
mov
cmps
hlt
dec
int3
xor
xchg
cmp
ret
push
push
xchg
int3
jl
outs
push
test
movs
movs
or
repz
ins
js
loopne
sbb
aad
test
mov
adc
test
sbb
popa
push
xadd
sub
sahf
and
fwait
out
sbb
stc
mov
jge
xor
mov
and
push
adc
jnp
aas
lods
aam
popa
les
mov
dec
jbe
add
dec
je
sub
xor
je
ins
adc
pop
hlt
out
pop
ins
bound
in
mov
mov
popf
jg
in
iret
adc
sbb
into
aas
or
jg
(bad)
out
scas
cmp
adc
(bad)
sti
or
xor
stos
push
xlat
push
fsub
int3
add
aaa
or
in
dec
and
ret
dec
pop
lds
rol
scas
pusha
xchg
xchg
fadd
dec
sub
fdivr
jmp
pop
in
test
sbb
jae
(bad)
lds
xor
subps
pop
add
jmp
inc
inc
and
push
ins
push
mov
mov
xor
mov
add
xchg
sub
dec
fwait
add
sbb
xchg
xor
jnp
adc
(bad)
pop
xor
lea
gs
and
(bad)
fnstenv
lods
xchg
popf
mov
xchg
shl
xchg
adc
clc
pop
and
cmp
push
movs
inc
ja
imul
mov
push
int
push
mov
push
ss
fild
lods
test
jne
push
mov
ror
dec
mov
mov
stc
xor
es
jg
icebp
sub
fwait
bound
sub
in
mov
jns
dec
pop
ror
fisttp
xchg
push
loopne
in
jno
and
cs
push
or
add
xchg
or
loop
pop
lock
sub
mov
add
jbe
cmp
add
adc
dec
out
out
or
mov
repnz
imul
(bad)
call
inc
jae
int3
mov
nop
pop
pop
call
retf
retf
loopne
ss
hlt
sbb
(bad)
loopne
ror
ror
loopne
inc
lahf
sahf
pusha
loopne
pop
inc
ret
mov
xchg
lds
pop
xor
sbb
call
mov
cmp
pop
and
imul
nop
ror
jp
imul
(bad)
dec
or
stos
mov
scas
enter
out
xchg
mov
daa
cdq
stc
outs
mov
jmp
aaa
bnd
push
int3
adc
lods
sbb
cmp
mov
jnp
sar
retf
(bad)
(bad)
repz
icebp
push
mov
push
or
lds
ret
or
pusha
or
adc
jecxz
scas
out
push
out
movs
mov
mov
repz
xor
jg
inc
js
pop
ficomp
pop
scas
lods
les
je
loope
mov
idiv
cmp
and
cmp
xor
xor
xlat
pop
add
outs
or
push
mov
shr
jp
cld
pop
pop
push
jo
sbb
push
test
push
or
movs
fiadd
mov
and
loop
dec
xchg
sti
mov
ret
jbe
pop
and
fwait
lea
leave
lods
push
cld
xchg
loop
pop
ja
push
ret
outs
mov
pop
cmp
les
sub
cdq
loopne
cmps
cld
sbb
fisttp
mov
sbb
xlat
sti
or
shl
sbb
cmp
test
xchg
lea
xchg
and
push
push
mov
pop
cmp
cmp
ror
jns
movs
push
sub
or
mov
imul
arpl
xchg
cmp
inc
jmp
(bad)
shl
inc
test
sub
iret
push
js
sbb
cmp
fnstsw
dec
dec
xor
add
inc
xchg
sub
xor
inc
mov
pop
mov
add
mov
loopne
(bad)
xchg
mov
push
(bad)
sbb
push
pop
(bad)
das
pusha
mov
cld
jmp
imul
sbb
mov
add
repnz
cmp
push
ds
mov
cmp
mov
mov
loop
das
dec
or
pop
pop
mov
mov
fmulp
jge
push
dec
cwde
pop
pop
(bad)
and
adc
jle
call
aad
add
cmp
pop
in
dec
xor
les
jnp
pop
xor
push
das
dec
sbb
pop
cmps
pop
dec
je
pop
dec
test
retf
and
xchg
sbb
mov
shr
call
xor
aas
pop
push
jp
pop
push
das
cmp
lea
jmp
inc
cwde
pop
test
sbb
dec
pop
jnp
pushf
add
popf
sar
sbb
jne
jl
mov
jge
or
push
and
dec
aam
pop
dec
adc
push
dec
jge
jle
mov
ss
jb
pop
pop
or
push
ss
adc
cmp
xor
dec
pushf
or
lahf
bnd
(bad)
ja
xor
(bad)
sbb
push
xchg
xor
call
cld
push
shl
ins
imul
aaa
ror
out
lods
push
jge
push
in
mov
(bad)
add
out
xor
push
into
fs
lds
dec
shl
ins
in
mov
mov
in
jbe
cs
ret
test
out
pop
sbb
std
mov
out
mov
inc
sbb
lea
add
popf
scas
aad
dec
lock
xchg
jle
dec
push
popf
mov
push
ins
ds
sbb
cli
cmps
mov
sub
cli
fdiv
je
add
inc
inc
cmp
mov
int3
repz
mov
inc
sbb
sbb
(bad)
mov
adc
sbb
nop
lods
mov
pop
clc
lea
in
repnz
mov
adc
xchg
rcl
adc
push
aas
data16
jecxz
and
aas
in
(bad)
jbe
or
(bad)
mov
mov
add
push
jl
repz
into
cmp
movs
cmp
jecxz
mov
mov
out
push
cmp
out
sbb
scas
mov
push
aas
or
test
leave
push
out
jg
push
jne
add
mov
lods
sbb
push
jb
xchg
sbb
jbe
daa
call
xchg
adc
mov
sub
cmp
pop
jns
mov
aad
jb
jmp
xchg
mov
cdq
clc
(bad)
(bad)
out
pop
jmp
scas
adc
jp
test
pusha
addr16
sub
fbstp
aam
movs
sub
xor
inc
sahf
sbb
sbb
icebp
jmp
arpl
fwait
or
pop
dec
or
mov
ds
jmp
sub
outs
pop
sbb
in
clc
mov
jbe
and
mov
sub
mov
idiv
or
lea
or
pushf
mov
sbb
and
(bad)
mov
or
bound
jmp
sti
mov
add
mov
addr16
mov
retf
std
jp
call
inc
pop
pop
cld
jle
xor
or
aad
and
clc
sbb
sub
add
pop
push
pop
cli
fidivr
fst
fdiv
adc
imul
jg
cdq
cmp
je
(bad)
data16
xchg
sbb
mov
pop
(bad)
leave
xchg
call
ja
jo
loop
leave
bound
es
aad
mov
add
fs
idiv
push
sbb
ja
popf
adc
sub
shl
call
ins
retf
inc
dec
xchg
fsubr
in
pop
imul
mov
daa
adc
repz
mov
sub
sbb
aam
adc
or
jno
pop
enter
mov
in
leave
cmp
ret
jp
jp
pop
es
sbb
or
outs
jno
repz
mov
aad
cmp
mov
repz
ins
aad
and
adc
jbe
sbb
scas
mov
sbb
fs
in
xchg
cwde
jns
out
inc
imul
pop
pop
mov
in
push
lock
in
mov
pop
rcr
add
imul
jnp
dec
call
in
push
in
aas
dec
ror
add
jl
popa
dec
sbb
icebp
fnsave
sti
push
cmp
add
imul
mov
(bad)
jmp
daa
mov
stc
test
sub
mov
mov
test
jmp
jmp
xor
add
loopne
pop
mov
jle
repz
sub
ret
(bad)
xor
push
sbb
int3
dec
cld
lahf
jno
push
sbb
ja
xor
mov
(bad)
rol
mov
out
out
daa
fild
mov
rcr
in
or
stos
xchg
sti
repnz
test
and
add
xchg
in
jno
jne
mov
pop
sub
xlat
inc
push
stos
ds
dec
popa
sahf
lea
mov
pop
push
fild
pop
enter
inc
clgi
gs
(bad)
cmp
jp
dec
add
stos
jle
cmp
jns
xor
adc
outs
sub
retf
out
mov
and
rol
dec
aam
sbb
sti
outs
dec
and
lock
outs
(bad)
ins
xlat
jmp
gs
test
push
or
xor
mov
jbe
imul
call
aad
pop
les
jne
dec
mov
(bad)
xlat
data16
adc
adc
mov
gs
int3
xchg
add
sbb
mov
test
pop
lahf
mov
hlt
sar
xor
(bad)
jmp
mov
aam
pop
imul
iret
jmp
cmp
stos
call
mov
sub
out
dec
push
adc
jnp
sbb
mov
mov
mov
sub
fsubr
ss
xlat
sbb
popf
fimul
retf
xchg
cld
jno
aaa
xchg
inc
mov
sbb
pop
sub
ret
iret
inc
adc
cmp
enter
out
xchg
sahf
add
test
repnz
(bad)
(bad)
repz
int
(bad)
add
adc
inc
scas
movs
gs
pusha
sti
movs
adc
push
mov
jg
inc
add
add
in
ret
fild
adc
and
stc
mov
cwde
data16
dec
leave
jae
jmp
jb
sub
test
mov
xchg
xor
and
add
arpl
jo
(bad)
shl
sub
mov
call
les
ins
push
or
add
(bad)
sub
cmp
and
inc
sub
jb
and
test
push
data16
push
jmp
dec
push
pop
cmp
daa
pop
rol
fst
mov
cwde
sbb
sub
jl
jnp
jp
mov
adc
add
sbb
pop
dec
push
into
adc
rcr
or
out
call
stos
mov
test
cdq
or
adc
call
aaa
adc
inc
pop
cmp
jns
cmps
pop
cmc
adc
push
fs
adc
adc
xor
stos
xor
dec
stc
fidiv
jp
or
loopne
aam
jge
aas
retf
les
pop
and
pop
add
mov
stos
test
scas
repz
xchg
jae
jp
cld
push
shr
jmp
inc
jne
fdivrp
add
inc
add
sub
inc
jge
push
push
and
adc
lods
fimul
mov
jbe
shl
xor
mov
add
in
inc
xor
call
std
jnp
inc
or
jg
stos
xchg
mov
sbb
je
adc
add
mov
mov
add
stos
mov
dec
leave
xor
retf
les
mov
and
cmp
aam
pop
mov
movs
xchg
pushf
(bad)
pop
loopne
imul
ficom
movs
es
outs
push
jmp
mov
mov
shl
sbb
cmp
js
mov
mov
int
adc
mov
cmps
movs
das
fs
repz
sbb
push
add
inc
lock
push
ret
push
or
js
test
rcl
xchg
scas
lods
ins
lods
add
repnz
push
xor
push
ja
pop
inc
shr
daa
not
(bad)
cs
lock
stos
adc
ss
js
out
pop
stos
mov
fdivp
jle
mov
inc
jbe
aam
jmp
xchg
or
jne
fidiv
retf
pop
test
imul
sbb
push
nop
xchg
add
pop
popa
push
and
loope
stos
cwde
mov
dec
lods
add
fbstp
es
add
dec
xchg
mov
adc
fwait
inc
xlat
pop
add
dec
ficom
xchg
outs
push
xor
cmp
fimul
jns
(bad)
push
push
pop
call
leave
lods
sbb
pushf
pop
and
add
inc
repz
add
inc
ss
out
and
dec
sub
mov
sub
push
sub
or
and
pusha
dec
mov
(bad)
enter
xor
mov
sbb
or
sub
das
lods
and
mov
xchg
dec
push
sub
hlt
jge
loope
or
fild
xchg
xor
mov
cmp
stc
ja
mul
mov
in
scas
fwait
jns
or
dec
sbb
clc
ja
inc
pop
push
mov
cwde
and
xchg
dec
enter
shl
cmps
push
sar
sbb
into
mov
adc
loopne
shl
and
cdq
sar
xchg
loope
pushw
pop
addr16
inc
and
mov
icebp
inc
pop
cmovl
push
outs
mov
jno
fadd
fsub
xchg
lock
clc
scas
jmp
push
in
and
into
mov
jmp
loope
jge
adc
call
pop
shl
mov
test
adc
dec
mov
add
mov
and
sbb
(bad)
xchg
int3
out
or
cdq
cmps
sub
fdiv
xor
mov
adc
xor
xchg
mov
mov
lock
xchg
lock
enter
in
call
ficomp
dec
out
ror
cdq
es
cs
xor
dec
scas
aad
or
mov
movs
xor
std
sbb
(bad)
nop
mov
mov
(bad)
cmp
pop
fbld
enter
bound
retf
aam
out
retf
adc
xor
jo
jo
test
push
jle
pop
mov
sar
pop
out
jmp
adc
mov
add
sbb
aaa
shl
stos
add
ror
(bad)
sbb
clc
test
fadd
adc
movs
scas
shr
dec
cmp
pop
mov
push
cdq
ret
xchg
jge
das
mov
cld
push
sbb
dec
inc
xchg
imul
jns
outs
pop
loopne
(bad)
and
pop
cmp
jb
and
neg
aaa
js
and
mov
inc
ins
nop
shl
sahf
inc
dec
pop
inc
lea
mov
push
jmp
push
inc
in
mov
rol
(bad)
fld
push
loop
repnz
arpl
sub
adc
xchg
adc
pushf
pop
inc
mov
test
cmc
push
mov
and
ss
nop
jae
jnp
repz
add
in
sbb
mov
inc
and
adc
mov
(bad)
test
stos
xchg
xchg
clc
dec
daa
mov
mov
aas
arpl
scas
into
retf
xlat
lahf
sbb
mov
sbb
mov
jne
xlat
in
sub
xchg
nop
mov
fistp
pop
fstp
sub
int
fs
or
pop
out
pop
sbb
repz
popf
aad
nop
push
push
daa
mov
ret
and
xchg
js
pop
ins
push
mov
mov
ret
iret
pop
ds
daa
in
xchg
mov
in
adc
bound
push
xor
sti
mov
inc
stos
sub
jne
mov
mov
cmp
pop
sub
sub
sahf
sub
and
aad
dec
fs
cmps
mov
inc
(bad)
je
jbe
out
xor
call
pop
or
idiv
stos
cs
jecxz
dec
fbld
jmp
mov
mov
fnstcw
xor
mov
lahf
xchg
call
cmc
les
int
cld
sbb
xchg
xchg
rcl
clc
gs
push
fisttp
cdq
pop
xor
jle
call
loope
dec
repz
xor
sub
fs
call
out
pop
push
xchg
mov
dec
bound
sahf
mov
sub
mov
pusha
scas
test
adc
xor
dec
jnp
inc
cmp
out
clc
mov
clc
cs
mov
mov
inc
stos
pop
fwait
addr16
mov
cmp
ss
div
clc
mov
mov
push
sub
sub
mov
fucomi
(bad)
ror
dec
cmps
rcl
jnp
push
xor
js
inc
sbb
lods
push
add
test
xchg
dec
xchg
out
loopne
dec
dec
sbb
mov
scas
packuswb
outs
loopne
mov
mov
mov
dec
and
daa
sbb
xchg
lods
mov
stc
xor
cmp
jl
jnp
mov
pusha
fs
sub
(bad)
sbb
mov
inc
out
push
ret
cli
adc
pop
out
mov
mov
icebp
adc
mov
push
xchg
imul
(bad)
mov
xchg
cmp
mov
mov
hlt
call
ds
add
movs
ror
aam
push
sbb
sbb
mov
sub
lock
cdq
outs
loop
(bad)
movs
jb
jbe
mov
add
retf
jecxz
int3
sbb
lock
addr16
mov
inc
mov
leave
ret
adc
mov
or
clc
out
mov
inc
xchg
(bad)
mov
mov
imul
mov
adc
cmp
daa
mov
(bad)
fiadd
arpl
or
push
fucom
mov
push
lock
cdq
cwde
jge
gs
cmc
lock
or
inc
(bad)
inc
sbb
inc
dec
jmp
jg
gs
push
dec
mov
pop
push
jmp
pushf
iret
jne
inc
push
mov
sar
jmp
lock
call
cs
mov
push
(bad)
ja
and
xchg
arpl
inc
and
mov
push
cmps
pop
ja
push
push
xchg
(bad)
rcl
jp
adc
fldenv
push
inc
xor
and
add
(bad)
sbb
cwde
ins
retf
imul
ins
xchg
jmp
gs
jbe
jnp
mov
mov
jae
or
ins
xor
test
aas
test
push
ds
xchg
mov
fneni(8087
or
mov
cmp
and
xchg
mov
xchg
push
lods
ins
fcomi
test
bound
scas
aam
rol
mov
xchg
mov
ss
push
push
mov
jmp
dec
push
not
cmc
pop
push
xchg
sbb
clc
dec
adc
mov
mov
in
ds
imul
pop
mov
jecxz
pop
shl
lods
mov
xor
or
inc
call
rcr
sbb
adc
adc
sbb
mov
rcr
push
cmps
das
mov
xabort
fs
pop
imul
fldenv
into
mov
jb
outs
dec
dec
imul
xor
xchg
sbb
enter
rol
or
movs
push
sub
arpl
outs
outs
sar
pushf
mov
dec
or
cmp
bound
dec
inc
ja
xor
sbb
mov
std
lahf
jp
and
jle
cs
cwde
mov
test
adc
pop
mov
fsubr
fucom
add
inc
xor
mov
inc
adc
mov
mov
mov
scas
push
(bad)
int
(bad)
mov
out
fdivp
and
repnz
sahf
cmp
div
ficom
jnp
adc
bound
data16
adc
mov
dec
fnstcw
imul
aam
ins
pop
clc
out
call
or
mov
pop
inc
xchg
fs
xchg
add
sbb
sub
mov
test
cld
stos
popa
dec
pop
call
add
ins
fisubr
popf
mov
(bad)
inc
cmp
jmp
mov
adc
ds
vpaddb
push
lods
mov
dec
aam
pop
push
imul
mov
inc
mov
mov
dec
xor
push
test
outs
xchg
rol
fmul
mov
out
shr
jb
stos
or
add
bound
inc
leave
fild
pushf
ja
xchg
xor
scas
loope
popa
push
push
pop
popa
repnz
cmps
or
pop
or
int3
xchg
xchg
pop
jg
inc
mov
cld
pop
xchg
ret
fiadd
dec
pop
xor
(bad)
stc
jle
adc
push
push
cmps
dec
inc
or
jp
xchg
(bad)
or
pop
aas
pop
sbb
fucom
mov
inc
adc
addr16
add
lock
add
or
inc
jns
and
je
ds
adc
jp
jg
movs
ds
sub
ds
sti
dec
inc
hlt
cli
mov
stc
cmp
pop
push
(bad)
jae
jl
scas
push
imul
mov
sbb
outs
inc
mov
push
xchg
sbb
retf
dec
mov
xchg
xchg
inc
(bad)
loope
jbe
push
outs
cdq
add
push
addr16
mov
into
add
pusha
cdq
pop
loop
lods
and
fsubr
out
popf
fcomp
jne
mov
pop
fcomp
daa
pusha
mov
pop
loopne
jg
pop
and
sbb
xor
popf
psraw
cld
mov
ret
stos
or
cmp
or
stos
stc
and
xor
hlt
cmps
pop
dec
or
pop
mov
stc
popa
cmp
ss
mov
cli
out
adc
int3
and
mov
sbb
fwait
cmc
int
jmp
and
into
lahf
and
mov
or
test
rcl
fisttp
fcomip
pop
(bad)
std
pop
sbb
mov
adc
fnstcw
jl
jb
cmp
sbb
lahf
cmps
push
mov
addr16
jmp
push
das
pop
adc
adc
in
cmp
pop
sub
sbb
fild
clc
scas
mov
jmp
dec
bound
les
add
mov
out
sub
lock
leave
xchg
dec
stc
(bad)
clc
mov
adc
adc
adc
mov
sar
repz
and
lahf
popa
mov
call
lds
inc
(bad)
mov
pop
loope
cmp
xchg
ret
cwde
jp
(bad)
cli
xchg
jmp
dec
les
and
imul
inc
ss
iret
cld
mov
fwait
(bad)
mov
add
mov
xchg
stc
jns
sub
dec
mov
pop
(bad)
lock
retf
lods
sub
mov
inc
push
inc
adc
(bad)
xor
or
sahf
push
sbb
lods
ret
cmp
mov
mov
idiv
sbb
pop
mov
mov
cmp
cmc
aad
loop
xlat
idiv
push
sbb
xchg
fisttp
push
push
sbb
pop
mov
mov
push
adc
xchg
int3
int3
mov
mov
test
push
pushf
(bad)
pop
dec
or
jno
dec
xlat
xor
or
push
fld
sbb
sbb
fadd
bound
popa
loope
pop
cmps
add
pop
in
jmp
fidiv
imul
dec
cdq
dec
maskmovq
div
sbb
add
test
or
leave
jnp
mov
and
daa
mov
xor
cwde
(bad)
cli
retf
cwde
push
or
shl
sbb
sbb
test
stc
push
mov
sbb
out
inc
xor
mov
frstor
jnp
fisub
xor
ret
jb
mov
addr16
mov
sbb
xor
addr16
gs
add
test
add
push
cmp
or
(bad)
(bad)
sub
aaa
imul
(bad)
repnz
ds
data16
test
ror
sub
bound
mov
xchg
cmp
cs
ja
cdq
jae
test
ds
add
outs
pop
inc
cmp
lds
retf
cwde
inc
pop
out
les
not
fisubr
neg
jno
push
std
cmp
jg
rol
xchg
fs
mov
jg
cmp
sbb
in
icebp
push
fmul
add
ja
daa
and
cld
inc
fistp
popf
(bad)
pop
inc
repz
into
sbb
loope
aaa
lods
out
js
cmp
test
jae
call
scas
cmps
push
ss
repnz
or
xchg
fdiv
adc
xor
rcr
cmc
cmc
fabs
sub
rcr
jmp
pop
jbe
mov
mov
xchg
cmps
xchg
and
mov
xor
jo
movs
pop
jl
stos
jge
sbb
dec
push
jbe
bound
nop
inc
push
push
cmp
movs
and
int3
push
mov
jl
cmp
(bad)
retf
retf
test
icebp
clc
add
sub
cmps
lods
sti
jmp
das
inc
mov
push
jg
or
retf
dec
fcmovu
push
push
push
jl
ror
stos
jmp
sbb
mov
repz
scas
push
fidivr
xchg
shl
jbe
mov
sbb
cmp
mov
(bad)
retf
dec
or
mov
push
stos
mov
in
push
pop
cmp
lock
xlat
(bad)
pop
inc
das
cmc
or
(bad)
sahf
test
sbb
nop
rol
enter
mov
mov
stos
pop
(bad)
imul
test
sub
ins
xor
(bad)
push
mov
mov
push
rcl
sldt
shl
pushf
push
cs
jl
fld
sbb
repz
or
and
in
mov
push
(bad)
imul
(bad)
sahf
inc
dec
icebp
mov
rcr
mov
push
adc
jmp
cdq
stos
add
sub
sub
std
fdiv
in
cmps
dec
dec
dec
into
mov
pop
retf
mov
shl
lahf
jbe
cli
pop
out
mov
push
movs
outs
sub
pop
sbb
pop
call
push
aad
das
pop
(bad)
aas
xchg
loopne
out
mov
repz
mov
gs
out
mov
mov
xchg
and
and
adc
xchg
or
push
jp
sbb
xlat
sub
imul
jae
lahf
sar
push
scas
cmc
adc
jnp
out
sub
mov
inc
(bad)
jle
fxch
jle
sbb
stc
data16
pop
push
pop
pushf
pop
add
sub
inc
ret
sbb
dec
or
push
sub
aad
jnp
fist
or
and
js
js
xor
cmp
xchg
sbb
enter
call
js
add
(bad)
in
mov
push
inc
push
mov
adc
cmp
and
clc
outs
xor
pop
mov
lds
pop
ds
cmp
pushf
lds
outs
fisttp
jno
mov
shl
push
dec
(bad)
das
jmp
fistp
jecxz
(bad)
into
pop
adc
pop
cmp
inc
sub
test
jmp
scas
pop
mov
mov
xchg
fist
mov
mov
ret
(bad)
adc
(bad)
fisttp
push
xchg
out
add
nop
and
sar
cmp
stos
stos
test
iret
mov
test
sbb
int3
mov
add
xchg
sbb
push
mov
pop
push
imul
ja
jl
out
(bad)
je
xor
sub
inc
cmp
pop
in
dec
out
xchg
xor
sub
pop
mov
out
cmp
push
pop
cwde
test
inc
icebp
jno
push
add
xor
and
shl
fcomip
scas
out
imul
rcl
jg
sub
pop
loope
repnz
sub
xor
lods
scas
mov
pop
fst
or
nop
mov
cmps
cdq
xlat
dec
test
cmp
push
and
mov
pop
fisub
adc
mov
and
sbb
add
mov
cli
mov
aam
push
jns
sbb
push
lods
cmp
inc
lds
mov
mov
test
cmp
repnz
mov
xor
jmp
jo
aad
inc
jle
add
shl
sub
jo
mov
mov
dec
repnz
repz
add
out
and
in
lods
adc
jg
inc
dec
(bad)
pop
and
aad
cmps
push
or
push
call
rcl
call
jae
inc
cli
jno
dec
mov
shl
daa
or
(bad)
dec
outs
imul
fdivr
adc
cmp
pushf
mov
fcom
mov
mov
push
cli
jmp
adc
fdiv
mov
fbld
and
sbb
push
sti
push
aas
stos
ret
xchg
scas
dec
icebp
icebp
inc
(bad)
shr
cmp
stos
ficomp
xchg
ja
push
int3
mov
mov
xlat
mov
scas
es
mov
cmp
mov
in
js
jbe
cmp
mov
retf
jns
pop
dec
inc
mov
xchg
mov
xor
lahf
xchg
mov
sub
(bad)
dec
push
xor
push
movs
mov
xor
mov
sahf
(bad)
fistp
scas
mov
ja
mov
sar
pop
push
push
sub
es
adc
js
loopne
xchg
test
ret
lods
mov
or
lea
cmp
js
cld
jb
or
cmp
push
test
ins
push
mov
aam
xchg
mov
lock
int3
pop
jle
adc
stos
and
dec
inc
out
and
(bad)
fdivr
or
adc
jns
lock
cmp
lods
mov
jb
cmp
mov
mov
xor
push
dec
lea
xchg
popa
lds
js
push
(bad)
hlt
imul
shl
pop
test
scas
jmp
jmp
in
mov
jne
push
dec
(bad)
fdivr
js
mov
dec
add
adc
movs
loopne
sub
cwde
and
ret
xchg
sahf
cmc
ins
bound
and
pop
dec
xchg
or
push
inc
cmps
dec
aas
mov
mov
in
mov
mov
fadd
mov
fwait
mov
lods
outs
add
loope
adc
in
sbb
cmp
aas
cld
cmp
(bad)
(bad)
popf
fidivr
adc
retf
cmp
cmp
jl
jbe
or
jge
popa
adc
xchg
movs
inc
and
(bad)
shl
loopne
test
adc
ja
aam
xchg
adc
lods
add
je
cmp
push
test
in
test
cmp
gs
add
fisub
push
test
cld
inc
les
jne
dec
int3
xchg
xor
jbe
push
jmp
jecxz
cmp
xlat
cs
loopne
xchg
popa
mov
sti
pop
cwde
pop
es
fild
and
jp
adc
sbb
out
jae
mov
or
cmp
push
dec
cmp
adc
retf
mov
movs
int
dec
adc
jge
cmp
scas
mov
scas
xor
inc
xchg
lods
cwde
mov
and
mov
(bad)
or
adc
xor
cli
sub
xchg
cmp
loope
(bad)
ins
add
loopne
into
test
cmps
push
xchg
rep
loop
lahf
into
sbb
aaa
dec
stos
popf
push
sbb
mov
int3
arpl
jle
inc
xchg
sub
sub
sub
xchg
jecxz
push
cmc
pushf
lock
xor
inc
sbb
mov
sbb
mov
out
pop
add
out
rcl
mov
pop
mov
rcr
shl
ja
enter
inc
or
push
pop
(bad)
arpl
push
xor
jbe
ret
sbb
inc
mov
js
je
shl
jns
dec
push
pushf
or
jns
int3
sbb
jb
sbb
mov
add
sbb
jmp
js
push
fs
ret
stc
rol
das
jns
mov
push
mov
xchg
iret
mov
push
xor
test
adc
leave
loopne
(bad)
and
iret
add
shr
mov
pop
js
cmp
sbb
mov
popf
scas
mov
dec
jl
aas
mov
push
test
out
push
test
xor
jae
movs
cmps
inc
pop
push
jg
outs
or
add
adc
or
dec
jle
xchg
mov
shl
loop
inc
sar
inc
aad
xchg
sbb
pop
pop
dec
jns
outs
iret
mov
sbb
iret
or
sar
sbb
dec
(bad)
xor
repz
loope
pop
sub
pop
add
push
(bad)
mov
adc
sub
xchg
sub
jne
outs
jmp
in
pop
mov
fucomip
inc
mov
int3
(bad)
xor
mov
xchg
ret
je
imul
sbb
sbb
inc
nop
shr
cmp
xchg
adc
jecxz
daa
mov
push
sti
push
loope
push
scas
(bad)
loopne
stc
dec
js
ret
stos
loopne
jnp
pop
dec
sub
pop
inc
sub
adc
inc
add
(bad)
rcl
lds
jg
mov
inc
or
stos
cwde
ficomp
xchg
leave
adc
push
das
in
push
pop
out
sub
xor
mov
inc
sbb
(bad)
data16
popa
hlt
xor
retf
mov
sahf
imul
add
push
xor
fs
inc
lea
pop
and
jecxz
xlat
inc
call
add
ss
push
das
movs
pop
dec
pop
data16
sub
push
add
pop
push
(bad)
out
or
cmps
fcmovne
ss
outs
int3
imul
outs
dec
inc
add
or
push
stc
jmp
lahf
mov
sub
(bad)
loope
mov
dec
fisttp
repz
gs
(bad)
hlt
fdivr
idiv
daa
cli
ss
push
popa
push
add
fcmovne
mov
imul
inc
sbb
jl
push
push
or
inc
test
push
adc
xchg
adc
jne
outs
bt
inc
sub
xor
aam
mov
jl
loop
and
cli
nop
mov
xchg
ins
jb
jno
hlt
shl
adc
sub
and
dec
mov
add
mov
addr16
dec
mov
es
xor
ss
call
inc
xor
lock
daa
inc
sub
stos
mov
arpl
(bad)
cmp
rcr
and
pushf
sub
popf
inc
ret
xor
cmp
pop
sub
cmps
and
xor
mov
jo
dec
jbe
sbb
fsub
cmp
push
adc
test
into
arpl
fadd
or
and
fdivr
pop
jno
pop
inc
ss
lds
enter
mov
ds
fs
or
sbb
loope
adc
movs
push
ja
xor
out
loop
xlat
icebp
stos
lods
in
leave
cs
out
add
(bad)
call
cmp
sahf
jae
outs
and
xchg
xor
dec
or
mov
out
loope
xchg
cwde
pop
add
mov
(bad)
std
ins
sub
iret
lock
aas
in
fstp
sbb
cmc
ret
hlt
push
lds
add
xchg
test
mov
mov
loope
mov
and
adc
xchg
mov
(bad)
loopne
xchg
loope
xor
int3
mov
aad
retf
pop
sbb
sbb
jne
pop
movs
cli
inc
icebp
cld
xor
mov
mov
call
sbb
jge
rol
or
(bad)
jb
fdivr
test
adc
push
jecxz
ret
adc
inc
dec
or
or
loope
xor
adc
add
mov
pop
js
mov
mov
mov
mov
push
sub
mov
test
and
push
daa
xchg
sar
sub
add
dec
repz
pop
cmp
add
add
mov
mov
mov
cmp
cmp
sti
jnp
std
jp
or
into
mov
cld
adc
mov
ficomp
pop
cmp
das
xor
jne
lock
xchg
or
imul
popa
imul
cmp
repnz
xchg
scas
pushf
stos
(bad)
sti
mov
jae
inc
push
push
mov
(bad)
stc
int3
int
out
push
pop
rcr
scas
jae
xchg
loopne
sbb
and
mov
cs
add
outs
and
stc
sahf
stos
pop
dec
dec
int
dec
mov
xchg
cli
das
inc
cmp
test
hlt
ss
stos
cdq
mov
in
cmps
dec
fcmovu
or
adc
mov
rcr
repz
mov
pop
jb
pushf
mov
shr
scas
fs
add
pop
or
in
xor
or
fiadd
jmp
pusha
out
(bad)
adc
call
out
mov
pop
cmp
adc
xor
test
lds
leave
into
push
fisubr
neg
stc
mov
and
dec
xor
(bad)
lahf
std
or
ret
pop
lds
and
mov
lods
add
push
test
(bad)
shl
add
cmp
mov
test
jl
lds
fcomp
nop
dec
frstor
sub
mov
retf
es
jmp
mov
stos
push
pop
lock
jmp
jbe
mov
push
sub
dec
ins
lea
inc
xchg
pop
dec
or
pmulhw
scas
in
add
cmp
ds
adc
jmp
fimul
std
and
sbb
push
movs
out
(bad)
(bad)
test
or
ja
cli
push
arpl
push
inc
rep
pop
xchg
(bad)
pop
cmp
mov
add
inc
fstp
xor
lods
push
scas
fiadd
ret
xchg
js
cdq
mov
or
dec
mov
and
in
mov
dec
xchg
mov
jne
or
mov
std
adc
leave
bnd
xor
outs
add
sub
xor
icebp
out
adc
cmps
jl
(bad)
mov
mov
jle
pop
test
mov
popa
cmps
ja
sbb
ja
loop
or
jno
push
add
push
das
cli
jecxz
cli
rcl
cmp
mov
push
dec
iret
cmps
fld
push
out
fmul
je
mov
sub
mov
xor
xor
jo
mov
adc
cmc
fsubrp
adc
add
cmp
fwait
out
sti
int
dec
adc
xchg
data16
adc
sub
xchg
cwde
retf
jl
sbb
xchg
xor
cmp
aam
xchg
mov
and
sbb
popf
pop
shl
(bad)
jns
call
mov
jge
bound
bound
clc
sahf
adc
movs
les
sub
loope
push
imul
out
jb
mov
pop
mov
dec
cwde
xor
ins
icebp
sar
das
mov
and
nop
shl
clc
sbb
xor
mov
add
xchg
outs
popa
jne
cmp
pop
push
mov
(bad)
scas
push
fmul
or
push
(bad)
ins
mov
icebp
test
out
in
sub
mov
aam
shr
push
(bad)
in
or
sub
out
icebp
or
icebp
ret
in
or
into
xlat
imul
in
add
pop
in
jns
lods
pop
push
in
push
(bad)
repz
inc
jmp
push
mov
dec
neg
int3
pop
jmp
fild
mov
push
aad
jae
xchg
cmp
sub
sub
jle
into
not
cmp
iret
inc
and
out
adc
cmp
fist
ret
cwde
pop
xchg
xor
clc
mov
jmp
sahf
idiv
push
jge
cld
push
cli
rol
daa
xor
inc
xchg
sbb
retf
divps
repz
in
call
jnp
rol
mov
mov
rcr
je
fld
cmp
sub
push
jle
add
or
push
or
cmp
dec
jecxz
sub
mov
ss
fwait
pop
mov
mul
xchg
fild
sub
mov
mov
cwde
adc
mov
gs
push
jo
or
mov
leave
in
daa
imul
scas
cdq
inc
arpl
sbb
fcom
repz
mov
or
jo
or
or
les
and
lahf
mov
aas
xlat
enter
out
repz
push
pop
aam
cmp
jmp
mov
imul
xor
je
fstp
in
sbb
mov
cwde
icebp
rcr
push
inc
idiv
cs
call
mov
daa
xor
jmp
ins
adc
test
xchg
cs
hlt
cmp
or
outs
jae
push
pop
and
popf
jp
ss
xor
push
les
dec
push
ret
lods
ins
rcl
test
test
rcl
sbb
push
inc
or
mov
inc
lods
cs
(bad)
xchg
cmp
push
adc
pop
push
(bad)
aam
nop
call
jecxz
imul
inc
sbb
and
pop
dec
ins
sub
(bad)
cmp
outs
xchg
call
cmc
inc
add
clc
fld
mov
ins
(bad)
rol
xchg
adc
cmp
pop
in
mov
sub
loopne
test
leave
fiadd
popa
inc
rol
push
and
in
fld
sbb
inc
add
cmc
inc
cmp
daa
popa
ret
stos
adc
pop
mov
sti
pop
inc
push
shr
mov
add
push
jne
push
add
inc
ficom
adc
cmp
fldenv
lds
imul
dec
jl
mov
jne
loop
bound
jae
sar
loopne
add
pop
sub
mov
mov
inc
fnstenv
adc
out
lahf
push
lea
ja
popf
jae
dec
push
stos
adc
int
xchg
mov
outs
add
adc
push
out
je
dec
inc
aad
stc
bound
ret
call
fldenv
xor
(bad)
fs
jp
ret
loope
stc
push
pop
pusha
inc
in
scas
cmp
jns
xor
and
cld
mov
jg
mov
fst
jb
inc
das
mov
dec
(bad)
jg
(bad)
xchg
imul
int
dec
sbb
adc
scas
cwde
xchg
jo
iret
jge
xor
movs
shl
xor
xchg
pop
daa
fidivr
popa
xchg
cmp
in
push
ins
ret
lods
fimul
sub
inc
adc
jbe
cmp
xchg
cmp
xor
pop
jge
sub
jo
mov
pop
cmps
aaa
cmp
jne
push
int3
aaa
leave
jmp
(bad)
test
out
sub
pop
dec
or
stos
dec
pcmpeqb
xchg
pop
cdq
cmp
adc
leave
enter
call
data16
(bad)
push
lods
add
(bad)
mov
xor
and
adc
and
mov
dec
pop
jecxz
lahf
idiv
cmp
sbb
jmp
outs
pop
into
iret
mov
xchg
pusha
sub
shl
pop
and
aad
retf
sbb
and
xchg
nop
dec
or
out
jl
mov
arpl
shr
mov
loopne
idiv
lock
xor
test
aad
into
sti
mov
sar
mov
pop
out
cs
add
int3
loope
mov
nop
push
mov
push
sbb
cmps
sub
lods
xchg
cmp
sub
out
or
inc
ins
jg
pop
cmp
call
xor
sub
jp
push
or
cs
and
cmp
mov
arpl
jmp
sbb
push
xchg
stc
jg
cmp
sbb
test
(bad)
pop
cdq
pop
add
repnz
dec
icebp
ins
push
or
mov
(bad)
sbb
aad
push
sbb
dec
pop
sbb
out
int
sub
cmp
push
dec
mov
scas
std
mov
xor
cmps
icebp
sub
pop
mov
hlt
loop
lds
repnz
cwde
add
add
xchg
aam
sub
or
fst
mov
retf
outs
jae
lahf
das
dec
dec
imul
xchg
mov
mov
ret
stos
push
cld
dec
pop
arpl
jmp
push
cmp
lahf
nop
movs
shr
mov
mov
sbb
sub
retf
lock
shl
fdiv
(bad)
gs
or
inc
stos
xchg
daa
pusha
daa
mov
mov
mov
loop
movs
push
mov
sar
lahf
cwde
mov
pop
add
add
aaa
mov
jmp
sbb
jl
movs
js
fsubr
lahf
and
push
sub
ins
or
test
(bad)
sahf
rcr
imul
bound
xchg
shl
ja
mov
daa
jae
lahf
xchg
xor
or
push
sbb
dec
sti
test
ins
sbb
xchg
stos
aas
scas
fucomp
popf
in
mov
add
repnz
rcl
push
adc
(bad)
jns
xchg
test
inc
daa
movs
dec
mov
rcl
out
sbb
push
ret
or
fwait
adc
sub
cwde
nop
mov
mov
mov
hlt
xchg
fwait
xor
push
inc
enter
adc
(bad)
and
sahf
cmp
or
xchg
xor
adc
jns
out
pop
fnstenv
or
sub
aas
pop
dec
mov
and
addr16
stos
repz
test
js
jbe
mov
ret
arpl
sbb
(bad)
fld
jecxz
jmp
cs
scas
sub
cmc
push
mov
jecxz
xor
and
jmp
xchg
leave
dec
mov
fild
std
cmp
sub
jns
(bad)
std
iret
push
stc
js
movs
or
mov
rol
int
add
push
cmps
mov
in
mov
sub
or
adc
pop
sti
push
adc
add
pop
dec
(bad)
jo
mov
dec
sahf
fwait
movs
fidivr
sub
push
retf
pop
movs
into
adc
mov
outs
adc
je
push
movs
mov
mov
enter
xchg
rol
retf
rcr
adc
add
retf
xchg
pop
pop
dec
push
call
dec
sub
aas
pop
or
or
pop
pushf
rcl
mov
mov
cld
or
sub
dec
xchg
mov
ret
push
ror
sub
daa
push
rcr
or
xchg
xchg
test
test
mov
arpl
loop
pop
and
cmps
es
sahf
xor
push
icebp
inc
clc
mov
pop
xor
or
adc
jmp
jnp
gs
shl
xchg
pop
add
into
sub
stc
add
adc
push
daa
fwait
loopne
outs
push
loop
sbb
pop
mov
sub
dec
push
std
in
stc
enter
test
inc
push
test
or
ss
inc
cmps
adc
pop
enter
fimul
xchg
add
repnz
fcom
pop
jge
mov
or
adc
add
jo
gs
push
sti
push
inc
call
cdq
ss
or
cmps
fcom
jmp
mov
lahf
lods
xlat
mov
rol
jmp
inc
lods
mov
int
retf
jp
lahf
stc
dec
out
jg
out
adc
sbb
inc
mov
mov
cmps
imul
jmp
and
out
xor
dec
stos
jae
fiadd
fst
and
cmc
xor
shl
(bad)
test
inc
out
cmp
dec
(bad)
in
xchg
sub
dec
pop
dec
je
dec
pop
js
fsub
enter
xor
mov
ret
ss
or
mov
fsubrp
movs
and
out
mov
pop
mov
xor
sub
popf
popf
loopne
jnp
rol
xchg
clc
sbb
pop
mov
jne
out
cmps
popf
pushf
in
loope
sub
jnp
push
pop
call
fstp
xlat
adc
mov
scas
je
inc
inc
out
mov
xchg
stc
adc
mov
popf
mov
pop
enter
inc
sub
fiadd
xchg
pop
mov
push
fsubr
pushf
std
mov
jecxz
aas
xchg
add
outs
xchg
ja
iret
gs
stc
retf
iret
jne
jmp
xor
cs
cli
pop
leave
jp
cld
cmc
lds
mov
mov
push
xchg
lods
sar
and
frstor
sub
rol
mov
pushf
fs
mov
bound
leave
dec
and
mov
ins
dec
scas
fistp
(bad)
js
lock
imul
cs
addr16
cmp
jmp
out
gs
sti
sbb
hlt
cld
sahf
mov
clc
mov
cmp
add
test
fiadd
test
leave
gs
test
or
sti
test
push
jo
and
pop
mov
jne
xor
outs
jmp
cwde
js
das
cmp
jns
shl
(bad)
mov
leave
dec
iret
movs
and
jge
sbb
xor
nop
fistp
nop
pop
sbb
mov
pushf
cmp
xchg
pop
mov
push
cmp
imul
inc
pop
adc
in
test
(bad)
lods
cmc
inc
dec
imul
loopne
pop
xor
enter
cmp
push
and
cmc
test
fs
ins
test
call
leave
and
push
or
push
mov
mov
popf
sub
add
or
js
in
push
(bad)
pusha
pop
ja
leave
dec
push
xchg
and
pop
(bad)
mov
(bad)
sub
push
xor
cdq
xchg
mov
mov
es
push
inc
adc
cmc
out
mov
js
rcr
xor
mov
and
or
push
test
(bad)
fistp
pop
mov
adc
fisubr
movs
sbb
das
enter
pop
sbb
ins
xor
push
sbb
gs
jge
push
shr
cwde
outs
scas
(bad)
fsubr
add
out
dec
mov
loopne
loope
pop
fucomi
pop
dec
push
dec
mov
dec
inc
bound
jp
lds
adc
stc
jns
cld
xlat
rcl
xchg
xchg
push
mov
stc
mov
sub
fucomip
repz
sbb
gs
and
mov
call
mov
js
mov
ds
mov
and
xor
mov
mov
lea
fwait
loope
fdivr
cmp
mov
adc
cmps
mov
das
cmc
inc
daa
imul
in
inc
xor
jns
adc
cwde
leave
xchg
push
dec
xor
mov
rcl
fld
mov
xor
dec
shr
outs
clc
xchg
adc
daa
xchg
ja
call
(bad)
(bad)
es
sub
and
test
fmul
enter
xchg
rcr
aaa
(bad)
sti
dec
xlat
xchg
and
jl
scas
ins
ret
retf
test
and
neg
push
jl
jle
xor
popf
jle
jb
jnp
mov
stc
add
repz
sbb
pushf
arpl
call
fdiv
nop
test
cmp
mov
into
iret
popf
push
sub
das
ret
mov
rcr
loop
jne
gs
loopne
push
es
ins
bound
push
pop
in
ss
arpl
pop
(bad)
lock
sbb
cmp
and
inc
ss
test
dec
add
or
(bad)
sti
shl
fcomi
cli
xchg
ret
(bad)
call
aaa
scas
xor
push
add
dec
out
adc
lds
jge
ja
cmps
movs
mov
sub
sahf
(bad)
pop
ret
fbld
adc
mov
test
popf
and
mov
jb
leave
add
xor
or
aam
lods
pop
ins
neg
loopne
mov
in
test
(bad)
sub
adc
jo
imul
das
cmc
xlat
xchg
or
ins
idiv
test
push
scas
fsubr
outs
pop
push
inc
cmp
ins
dec
das
shl
sub
lock
mov
scas
(bad)
jmp
add
dec
fwait
xchg
and
ins
daa
jnp
stc
ss
pop
imul
add
push
js
jmp
test
cmp
xchg
sub
sbb
je
stc
enter
outs
(bad)
ins
fs
adc
add
mov
or
mov
aaa
mov
(bad)
lock
in
mov
and
adc
(bad)
cmp
iret
dec
sub
mov
cmps
push
bound
dec
add
mov
add
pop
jp
popa
jb
test
fidivr
addr16
lea
ins
push
xor
sar
or
sbb
lahf
call
mov
dec
rol
ret
jp
dec
(bad)
test
cs
xor
push
fs
dec
xchg
sbb
mov
sbb
ds
mov
jmp
mov
sub
jecxz
xor
and
add
add
xor
movs
nop
cmp
xchg
sub
inc
(bad)
jp
inc
repz
loopne
push
pop
js
test
dec
daa
inc
movs
pushf
scas
adc
add
inc
adc
sbb
lods
pop
or
mov
les
add
sti
out
push
in
add
mov
sub
jle
mov
call
dec
add
(bad)
jp
mov
cmp
push
xchg
in
out
arpl
repz
mov
adc
icebp
retf
ds
dec
add
dec
mov
test
pop
cs
je
ret
adc
cmps
out
jo
icebp
lahf
xor
mov
in
in
sub
jecxz
js
cwde
jp
mov
dec
pop
sub
iret
ds
adc
enter
mov
outs
fidivr
mov
cmps
sbb
adc
or
movs
pop
push
(bad)
mov
test
xor
cmp
ret
sbb
icebp
aad
std
inc
xor
sub
inc
repnz
jno
and
into
into
mov
adc
vxorpd
(bad)
push
retf
out
arpl
mov
sub
jno
or
pushf
cmp
push
cmp
cwde
xor
outs
test
xor
mov
or
inc
shl
icebp
push
pushf
jmp
adc
add
pop
daa
add
lds
jmp
mov
pushf
test
pop
cmovg
outs
arpl
(bad)
pop
cld
mov
rcr
cmp
add
cmps
jmp
mov
sbb
xchg
in
adc
call
ins
mov
out
pop
dec
(bad)
jnp
sbb
sar
bound
js
push
pushaw
xchg
dec
(bad)
sbb
mov
and
dec
push
fidivr
dec
pop
popa
sbb
sar
ret
cmp
and
mov
pusha
je
mov
iret
mov
mov
lods
xor
sbb
das
mov
add
mov
inc
jnp
xchg
mov
popf
xor
adc
sub
mov
mov
arpl
mov
js
and
and
mov
sub
dec
mov
or
lea
pop
sahf
mov
mov
mov
shr
xlat
cmps
(bad)
es
xchg
scas
push
std
inc
call
push
in
fst
mov
pop
jo
xor
daa
das
inc
inc
test
(bad)
cmp
(bad)
pop
ins
and
and
test
inc
and
push
pop
jbe
add
sub
mov
add
and
out
lods
ins
push
sub
cmp
aad
jne
mov
xchg
out
and
jne
loopne
and
xor
in
dec
cli
mov
in
lahf
aas
xchg
push
imul
les
adc
mov
dec
xor
jbe
aad
rcr
(bad)
ss
dec
cdq
xor
enter
jae
scas
jmp
push
or
cdq
addr16
mov
(bad)
jge
sub
les
movs
movs
or
mov
mov
daa
add
push
mov
test
sub
les
movs
xor
call
lds
imul
mov
mul
sahf
cmp
jmp
sbb
(bad)
movs
push
int3
sub
mov
push
push
(bad)
es
jp
imul
sub
cmps
mov
lea
xor
push
popf
mov
mov
ds
jp
sbb
mov
dec
lods
popf
arpl
mov
adc
push
dec
aaa
rcl
sar
call
add
in
dec
test
sti
bound
xor
test
inc
xlat
retf
dec
clc
sub
mov
stc
jg
sub
mov
cmp
(bad)
std
push
or
out
rol
mov
mov
mov
jg
xor
mov
sub
jae
gs
and
pop
pop
popf
(bad)
(bad)
pop
jnp
int3
repz
and
inc
iret
mov
add
dec
sbb
(bad)
aas
jb
cwde
push
sbb
and
cmp
push
adc
xchg
test
das
popf
int3
imul
push
call
mov
push
test
test
ds
ins
adc
popa
xchg
retf
xchg
jp
pop
imul
stc
jge
dec
sub
push
es
popf
out
ror
call
aaa
pop
mov
mov
popa
jbe
or
daa
pushf
jmp
cmp
mov
add
mov
in
mov
cmp
or
pop
call
out
jno
push
dec
sar
xor
es
jge
cld
mov
push
ss
test
mov
loopne
mov
mov
jp
(bad)
fmulp
add
fwait
popf
fisttp
imul
repz
xchg
mov
fadd
out
and
jmp
fidiv
push
pop
test
sbb
scas
ins
or
cmp
mov
hlt
pop
test
xchg
push
pop
ret
pop
ret
call
pop
sub
cwde
ins
(bad)
jbe
in
jns
xor
xchg
and
add
ja
mov
mov
int3
in
or
add
shl
call
and
pop
xchg
mov
mov
inc
pop
mov
mov
sbb
sti
outs
ja
sub
shl
movs
or
je
pop
aaa
scas
push
outs
sbb
add
mov
cli
les
inc
push
and
mov
retf
test
imul
imul
xchg
cmps
test
or
and
push
mov
stos
push
ss
push
mov
(bad)
jl
outs
std
dec
jae
mov
mov
movs
pop
repnz
add
jecxz
retf
push
xchg
arpl
aam
es
push
cmp
nop
push
arpl
push
shl
rcr
ins
or
test
aaa
cmp
sub
xchg
out
std
mov
inc
gs
mov
and
and
jle
add
fimul
and
jmp
dec
movs
jmp
xor
test
daa
ret
and
push
add
pop
xchg
lahf
inc
inc
in
fisttp
fmul
adc
xchg
retf
lods
push
xor
sbb
cmp
ret
add
sub
aad
pusha
bound
sbb
mov
test
or
inc
push
fwait
test
pop
cmc
mov
adc
cmp
push
fdiv
push
test
dec
jg
adc
cmp
sub
adc
mov
fs
out
push
popf
xlat
sub
and
xchg
dec
ret
add
pushw
nop
pop
cs
add
inc
jmp
dec
pop
daa
loope
mov
shl
out
gs
int3
inc
pop
dec
inc
or
sti
mov
and
mov
mov
cli
push
mov
imul
pop
mov
outs
xchg
xor
in
jle
sti
mov
inc
lods
loope
imul
dec
dec
int3
ret
mov
mov
or
loop
call
in
jl
sbb
pusha
retf
mov
push
outs
push
mov
aaa
aaa
retf
dec
int
ja
lahf
add
jb
das
adc
mov
(bad)
cdq
(bad)
shl
imul
fsincos
shr
(bad)
push
inc
into
cmp
test
cmp
inc
hlt
xor
push
cmp
int
stos
xchg
push
fcomp
jno
mov
mov
js
imul
rcr
pop
dec
dec
ja
dec
in
fimul
int
popw
mov
mov
or
ror
mov
and
fistp
dec
inc
jbe
(bad)
leave
lods
sbb
nop
bswap
popf
mov
inc
pop
cmps
shr
mov
sbb
outs
jbe
jge
movs
mov
jl
test
or
jge
jae
xchg
ret
jp
out
cmp
xlat
repz
cld
push
test
jle
add
call
inc
into
out
inc
outs
inc
sar
mov
in
fwait
and
push
cmp
mov
cwde
mov
stos
sbb
add
jne
loope
ins
adc
sub
dec
repz
in
sbb
mov
jbe
fstp
push
add
or
mov
inc
mov
imul
or
in
inc
mov
ficomp
ins
mov
loopne
mov
outs
retf
pop
sbb
or
pop
cmc
std
clc
enter
inc
lea
mov
pop
test
mov
xchg
cmc
rol
fmul
xor
stc
call
rcr
mov
xor
stos
shl
sbb
mov
mov
inc
dec
popa
add
inc
xlat
lock
or
lods
jne
pop
push
cmp
imul
fs
dec
ja
push
mov
and
sbb
leave
sar
pusha
in
xlat
aaa
nop
stc
rep
repnz
test
push
dec
jl
sbb
dec
ins
mov
clc
fist
lods
pop
push
test
inc
pop
aas
push
xchg
data16
inc
ja
aaa
or
bound
vmovlps
adc
or
cdq
jnp
loop
(bad)
cwde
mov
pop
add
(bad)
mov
mov
cmp
and
dec
fnstenv
add
adc
sbb
inc
daa
js
mov
sbb
cs
(bad)
repz
push
sub
mov
xchg
call
mov
or
cmp
addr16
cld
aaa
dec
pusha
pop
and
sub
fisttp
(bad)
xchg
loop
addr16
or
mov
add
jb
mov
je
cmp
adc
test
pop
movs
and
stos
stos
sar
mov
cmp
mov
pushf
mov
test
fisttp
pop
out
popf
mov
rol
mov
sub
or
sbb
lods
pop
adc
sbb
sub
sbb
aas
fiadd
rcr
pop
stc
sub
cmp
sub
sbb
das
test
add
in
jnp
xlat
into
xor
fimul
mov
mov
popf
pop
dec
push
stos
retf
fisttp
mov
ins
mov
test
xor
popf
mov
cmps
adc
push
add
xchg
jo
sub
mov
pop
ins
push
pop
out
ja
pop
mul
outs
xor
dec
cmp
icebp
int3
std
add
out
jb
jl
(bad)
int3
aam
lahf
ins
cli
out
std
cmp
ret
daa
fsubr
dec
pop
sbb
mov
test
(bad)
ret
cmps
jne
add
jmp
fst
enter
pusha
retf
sar
daa
(bad)
sub
outs
adc
cmp
push
push
iret
mov
push
inc
xchg
pop
pushf
sbb
sub
popf
mov
lods
nop
adc
out
mov
sub
test
xor
lods
mov
test
adc
(bad)
or
sub
rcl
cmps
ins
jle
mov
xor
jle
stc
enter
jge
and
sub
add
js
sahf
pushf
mov
sbb
adc
push
xor
add
inc
add
ret
sub
cmp
add
scas
cmp
pop
jmp
shl
ins
popa
add
dec
sbb
es
sbb
aaa
jp
jecxz
std
xor
inc
cmps
pop
pop
bnd
jmp
add
lock
movs
call
(bad)
jg
lock
push
adc
into
pop
push
sbb
sbb
shr
mov
lods
stos
mov
jne
hlt
push
into
fcomp
push
fistp
rcr
add
cmp
jge
fwait
test
pop
test
sbb
test
sar
pushf
dec
jmp
imul
loopne
leave
xchg
pop
and
(bad)
mov
hlt
sbb
test
and
mov
push
sub
(bad)
std
cmp
cdq
mov
leave
faddp
out
mov
fs
scas
aam
add
inc
mov
pop
(bad)
not
(bad)
ins
push
and
xchg
popf
add
jmp
enter
test
xor
jmp
sbb
dec
dec
mov
push
inc
repnz
inc
sti
stc
test
rol
ins
fsub
lods
outs
mov
cmc
dec
fcomp
mov
adc
call
or
mov
inc
cmp
mov
push
mov
call
mov
call
mov
inc
jo
mov
popa
pop
inc
gs
jnp
jp
jmp
push
sar
jmp
adc
fld
or
out
pusha
xor
sar
or
sub
inc
mov
mov
fcomp
call
imul
int
lods
les
repz
(bad)
in
xor
nop
jae
xlat
cld
inc
cdq
dec
(bad)
dec
cmp
push
(bad)
sub
das
leave
sub
mov
inc
adc
in
call
pop
xchg
in
jecxz
lods
lods
push
enter
scas
rcr
sub
ss
xchg
and
xchg
jecxz
aad
pop
mov
jl
test
aaa
push
push
fwait
stc
popf
cmc
mov
retf
sub
in
into
mov
pop
dec
cs
lahf
ret
mov
mov
xchg
bnd
lahf
dec
push
sub
scas
adc
mov
ret
or
xchg
sbb
ret
cmc
jge
adc
std
sub
mov
leave
outs
xor
jnp
(bad)
add
cmp
in
sbb
adc
mov
inc
or
mov
ret
pushf
fist
(bad)
scas
xor
mov
mov
cdq
jmp
xchg
sub
xchg
clc
sar
or
movs
int
movs
xor
loopne
sub
cld
mov
push
sti
ficomp
adc
pop
stc
xchg
stc
lods
adc
fimul
scas
popa
inc
mov
pop
in
(bad)
push
cmps
jecxz
and
pop
mov
mov
into
lock
aam
mov
test
jno
inc
cdq
push
call
mov
clc
xor
mov
mov
mov
or
lahf
bound
out
xor
mov
data16
dec
in
aad
ret
sub
xor
loop
cmp
jmp
and
pushf
nop
push
test
movs
mov
and
xchg
mov
pop
adc
pop
jge
mov
fcom
call
push
rol
pop
xchg
xchg
pushf
inc
ds
cmp
or
shr
push
ds
jns
popf
cmp
sbb
jmp
cmp
popa
ror
mov
outs
add
mov
mov
xor
sbb
pusha
xchg
lods
aas
out
jno
clc
sbb
xor
je
inc
pop
gs
and
mov
cs
xchg
mov
hlt
adc
stc
pop
dec
cwde
fnstenv
xchg
int
cmc
inc
jmp
fdiv
repz
or
(bad)
ds
les
xchg
pop
mov
adc
mov
retf
sbb
sub
in
mov
ss
mov
mov
call
bound
add
add
push
ret
fnstcw
inc
sti
(bad)
xlat
test
sbb
mov
inc
mov
push
ja
sti
and
pop
and
packssdw
ja
push
mov
stos
cmp
sar
adc
jo
int3
pop
or
fwait
dec
and
call
call
aas
pop
sub
dec
add
lea
fs
jmp
das
sub
mov
adc
jno
icebp
pop
xchg
mov
(bad)
out
xor
or
popf
ins
xor
and
mov
xor
ret
ret
shl
in
xor
jo
pop
jmp
and
xchg
fmul
xchg
jnp
add
or
gs
push
cmc
setae
inc
hlt
jo
enter
sbb
ja
mov
test
mov
cmps
repz
dec
inc
out
and
pushw
dec
dec
ja
ficomp
shl
inc
test
cmps
pusha
fild
cmp
sub
adc
test
push
jmp
std
mov
mov
mov
xchg
sahf
loop
inc
sbb
mov
repnz
xor
and
jecxz
call
mov
test
rcr
dec
xlat
repz
inc
adc
ret
cmps
xor
(bad)
fnstsw
xchg
sub
enter
fdivr
mov
fwait
jmp
cwde
aad
aad
fs
call
xchg
ret
push
push
jns
or
pop
fsub
xchg
std
mov
mov
jns
xor
mov
pusha
ficomp
and
xchg
adc
mov
inc
out
adc
test
push
push
daa
inc
cmp
pop
jns
inc
cs
(bad)
out
xor
rcr
sub
pop
fdiv
fild
mov
or
faddp
and
dec
sti
lds
imul
add
sub
ins
mov
outs
xlat
push
sbb
sub
outs
adc
cmp
scas
call
int
push
xchg
loope
mov
and
lock
jne
mov
jns
lods
fld
out
xor
sub
xchg
cwde
enter
push
jmp
push
test
adc
in
popa
cmp
mov
stc
mov
adc
adc
movs
dec
and
xchg
pop
rcr
and
fxch
retf
mov
pop
jnp
(bad)
jmp
cmps
cmps
jl
mov
jge
pop
cs
pop
add
inc
pop
sub
pop
mov
mov
or
pop
pop
stos
dec
add
adc
ins
mov
adc
imul
xchg
xchg
push
shl
jecxz
jp
or
push
sbb
aad
leave
arpl
mov
fistp
mov
mov
arpl
xchg
cmovle
fsubrp
add
aas
push
daa
int
(bad)
jmp
mov
pusha
xor
repz
mov
push
and
outs
fnstenv
fst
es
xchg
fisttp
test
jae
mov
adc
mov
js
jp
icebp
push
ss
sbb
xchg
aaa
push
test
jge
fldcw
mov
jae
stos
fist
sub
mov
stc
aaa
out
aaa
and
or
shr
jne
mov
add
daa
xchg
clc
gs
pop
sahf
inc
test
ss
vcvttps2dq
push
jmp
fdivr
fbstp
cld
pop
stc
and
sbb
das
dec
imul
pushf
jecxz
stos
daa
mov
add
mov
inc
fisub
sub
les
cmp
jo
sti
or
pop
out
(bad)
leave
loop
(bad)
sub
les
and
int
pushf
data16
sbb
dec
movs
cs
pop
fldcw
jg
or
jle
cmc
push
jl
jmp
or
xor
sbb
shr
out
popa
out
cmps
out
mov
sub
call
adc
mov
gs
bound
test
rcr
adc
in
adc
xchg
in
pop
cwde
jbe
mov
out
retf
jne
push
and
xchg
or
ror
lods
loope
mov
imul
inc
lods
xchg
xchg
pop
mov
push
push
pop
iret
cs
fwait
arpl
stos
adc
mov
adc
jmp
push
push
and
rep
push
scas
fdiv
clc
push
mov
push
aam
sub
push
stos
push
inc
dec
push
jp
sbb
dec
setns
mov
xor
repnz
sahf
outs
rcr
jo
pop
mov
ficom
frstor
xchg
imul
pop
xchg
in
out
call
daa
push
stos
stc
push
fcomp
cmps
test
xchg
loop
mov
sub
xchg
jne
xchg
mov
adc
xor
or
sub
js
enter
popf
xchg
and
into
dec
test
mov
sub
sub
push
pop
cmps
rol
ja
movs
nop
cmp
pop
add
jo
int
cmp
xor
xchg
adc
int
push
movs
jmp
inc
jnp
movs
add
mov
mov
jl
out
sub
pop
lds
mov
or
push
cmc
push
mov
adc
cmp
(bad)
(bad)
xchg
ss
faddp
push
and
daa
loopne
in
les
imul
xchg
popa
jp
pop
jge
jmp
pop
lods
mov
cs
stos
fimul
mov
add
call
jbe
push
and
ins
sti
pop
in
adc
popa
push
cmp
es
xchg
jmp
pop
(bad)
cmp
stc
pushf
xchg
or
cli
outs
aam
xchg
mov
mov
mov
or
in
jbe
mov
loopne
(bad)
cmps
scas
jae
adc
cmp
jle
nop
xchg
xor
je
jne
sub
lods
mov
imul
aam
push
adc
out
(bad)
retf
enter
hlt
(bad)
sub
pop
sub
pop
arpl
jns
push
xor
push
jno
or
xchg
pusha
mov
xchg
into
dec
push
(bad)
outs
mov
or
es
outs
dec
out
movs
inc
and
xchg
scas
mov
ss
cmp
popa
je
shl
out
aaa
mov
mov
mov
scas
sbb
dec
xchg
jmp
cs
int
arpl
mov
adc
in
sub
cmp
push
mov
and
pop
xor
xor
lods
sbb
pop
movs
add
pop
add
and
inc
jge
fcmovne
push
sbb
jmp
aam
lods
inc
cdq
mov
cmps
mov
mov
adc
jmp
cmp
les
arpl
jecxz
dec
add
hlt
pop
lods
pop
sub
ja
xchg
cmps
stos
sahf
(bad)
mov
inc
sub
jmp
or
(bad)
xchg
fsub
pop
fwait
shl
jo
dec
repz
mov
imul
jecxz
mov
inc
sbb
popf
jmp
push
shr
mov
out
in
inc
xchg
fsub
fsub
lods
sbb
xchg
mov
movs
mov
mov
sub
jns
add
adc
pop
icebp
jl
sub
test
pop
sbb
(bad)
(bad)
mov
sahf
cld
repz
add
cmp
sub
push
jbe
add
pop
xor
retf
adc
repz
pop
scas
scas
int3
lock
and
and
adc
jbe
cli
mov
out
outs
add
mov
jno
ja
std
loopne
stos
push
fld
jno
fsubr
loopne
sub
push
stos
lods
mov
fdivr
frstor
and
cmps
push
shr
and
ss
into
add
imul
xchg
ficomp
std
out
repz
xor
push
jnp
jge
cmp
jge
jmp
xor
jecxz
inc
push
xor
jns
loop
call
sub
jp
rcr
stc
repz
stos
call
rcr
jo
bound
fsubp
jns
clc
retf
mov
cld
aam
dec
out
arpl
sbb
hlt
mov
xchg
data16
idiv
pop
mov
add
sub
mov
movs
ret
add
xchg
fild
mov
jns
mov
adc
iret
es
and
fbld
inc
dec
add
(bad)
leave
paddd
retf
xlat
dec
ss
jmp
push
shl
dec
sub
mov
aam
pop
imul
mov
daa
js
retf
retf
jnp
pop
ja
or
pop
mov
pusha
push
inc
fst
cmps
adc
and
enter
xchg
mov
outs
sbb
jns
pop
fidiv
jmp
dec
inc
mov
or
xchg
ret
xlat
pop
retf
fs
xor
les
mov
dec
repz
jg
mov
sbb
int
cmps
test
xchg
dec
sbb
stos
scas
jge
out
in
mov
clc
cmp
xchg
mov
gs
or
sti
or
ins
js
loope
scas
add
push
xor
push
lods
mov
outs
mov
inc
(bad)
xor
daa
jnp
mov
ins
xchg
cmp
out
xor
push
xchg
jne
inc
mov
push
and
cmp
test
ja
dec
movs
cmp
mov
cmp
aas
sahf
iret
push
pop
and
hlt
dec
iret
cmp
inc
daa
pop
pop
adc
add
xor
pop
xor
xchg
add
push
popa
dec
mov
imul
or
aas
sbb
iret
push
sbb
fmul
push
nop
mov
mov
sub
jbe
cmps
push
fucom
fistp
retf
adc
cdq
pushf
fstp
retf
cli
xchg
fild
je
mov
jno
sub
push
shl
pop
xor
inc
mov
jmp
and
adc
hlt
mov
imul
push
xchg
add
jmp
test
out
fs
popa
fiadd
mov
add
jno
stos
pause
cmps
gs
pop
loope
je
xchg
es
xor
iret
dec
push
push
ret
int3
push
xor
std
addr16
jmp
mov
fldenv
mov
dec
mov
sub
jnp
data16
pushf
mov
mov
fistp
dec
mov
or
stos
or
mov
aad
js
xchg
rcl
sbb
adc
xchg
jnp
out
cmp
popf
cs
or
cmp
sub
or
mov
mov
dec
mov
adc
(bad)
jb
cmc
inc
fwait
push
div
lea
sbb
inc
cmps
cs
add
mov
fisttp
jo
shr
push
cwde
aam
out
xchg
push
or
imul
imul
push
sar
jge
cmps
(bad)
imul
outs
dec
dec
dec
adc
ret
adc
jnp
ret
lahf
fdiv
cmps
out
and
push
cld
ficomp
div
mov
jmp
mov
cmp
(bad)
popf
fwait
mov
sti
aas
mov
(bad)
dec
mov
fist
ss
cwde
cdq
clc
mov
sbb
aam
loop
cli
mov
inc
cmp
pop
lods
adc
sub
jg
xchg
xchg
push
pop
test
sar
pop
jle
or
mov
mov
xchg
adc
loop
xor
inc
inc
stos
sbb
adc
mov
in
rcl
inc
adc
shl
adc
shr
retf
sub
inc
xchg
les
xchg
push
cli
cmp
mov
call
mov
mov
mov
push
push
(bad)
loop
xchg
jg
leave
or
cdq
lds
loop
xchg
pop
dec
scas
fisub
cmp
pop
mov
pop
sub
inc
jmp
or
push
push
icebp
stos
int
pusha
sbb
iret
jbe
popf
lods
daa
and
sbb
xor
xor
(bad)
neg
add
fidivr
and
xchg
xchg
arpl
(bad)
test
mov
mov
xchg
leave
daa
jno
inc
jb
fbstp
sahf
shl
repnz
arpl
cmp
retf
repnz
in
mov
fnstsw
mov
in
outs
xor
mov
xchg
ret
jb
mov
and
in
scas
push
add
jg
jb
in
adc
mov
mov
(bad)
mov
sbb
stos
iret
push
mov
test
mov
xchg
pop
out
imul
lods
mov
(bad)
repz
or
shl
and
inc
sbb
dec
mov
dec
and
jae
cmp
jbe
fsub
fcomp
rol
lock
in
cwde
leave
pop
cmp
ror
or
scas
xor
push
int3
jl
push
inc
or
aam
ret
pop
les
cmc
imul
fbld
shl
mov
mov
sbb
arpl
sub
cld
mov
dec
xlat
inc
retf
lds
inc
pop
dec
mov
ret
std
cmc
push
lods
mov
add
dec
ds
pop
mov
outs
sbb
iret
sbb
ss
xor
xchg
push
clc
sub
push
call
mov
jp
jecxz
je
pop
and
mov
adc
(bad)
dec
inc
pop
mov
out
fisttp
enter
pop
std
xchg
mov
ret
movs
rcr
fdiv
sbb
je
cmp
imul
iret
mov
out
(bad)
je
cmp
fild
lds
mov
es
test
adc
mov
dec
mov
sub
test
and
shl
xor
jmp
jge
fcom
in
mov
dec
push
push
retf
cwde
sub
jmp
pop
mov
and
imul
loop
mov
or
(bad)
popa
in
daa
sti
jg
retf
ins
add
jp
adc
sbb
(bad)
pushf
pop
out
loop
cmp
retf
mov
scas
mov
dec
stc
mov
rcr
(bad)
or
and
fmul
adc
retf
xor
leave
rol
call
and
add
dec
dec
push
and
ins
iret
pusha
ror
pop
cmp
imul
iret
addr16
(bad)
push
dec
and
inc
movs
movs
nop
test
imul
sub
xor
mov
mov
int3
jae
cdq
xor
mov
and
jmp
out
dec
mov
dec
rcr
sub
call
test
and
fs
cwde
fcmovu
inc
cmp
repz
xchg
mov
das
stos
mov
xchg
dec
repnz
and
and
gs
add
fadd
xchg
fimul
sub
pop
jge
ja
retf
sub
pop
out
or
fwait
sbb
xchg
test
cmps
nop
or
fisttp
jnp
lahf
mov
in
test
(bad)
loopne
gs
cmp
xchg
mov
and
rcr
in
jecxz
call
xchg
pusha
out
movs
daa
pop
push
dec
or
sub
xor
jmp
push
into
xor
pop
(bad)
hlt
jmp
jmp
stos
arpl
inc
jbe
or
test
mov
rol
(bad)
pop
cld
sbb
js
add
loop
jae
imul
and
(bad)
mov
cmps
push
push
jnp
outs
mov
and
adc
int3
repz
mov
test
rcr
arpl
mov
out
sbb
imul
dec
xchg
dec
xchg
ret
sbb
pop
xchg
ror
pop
rol
mov
sub
pop
xchg
or
fwait
mov
add
idiv
mov
mov
add
gs
xchg
ret
sub
iret
sahf
push
and
outs
xor
mov
mov
aaa
xchg
into
(bad)
bound
pushf
daa
push
lahf
cmp
pop
or
mov
call
sti
mov
(bad)
out
adc
sbb
mov
pop
fsub
add
out
mov
mov
(bad)
jmp
xor
inc
dec
inc
pop
(bad)
fadd
pushf
daa
push
iret
neg
ja
sbb
mov
jbe
daa
sub
mov
inc
xor
or
lods
mov
or
in
mov
xor
sub
loop
lock
xor
ret
sub
push
pushf
and
or
jge
xlat
dec
loopne
std
dec
or
dec
sti
test
iret
retf
pushf
inc
stos
pushf
pop
imul
scas
dec
daa
and
stos
not
test
push
mov
push
xor
and
adc
cmp
jge
int
inc
cmp
pop
xchg
out
ins
mov
jb
les
adc
(bad)
sbb
sub
scas
(bad)
jae
mov
aas
push
sub
loop
push
leave
or
cmp
push
push
ja
xchg
aas
ficom
jge
push
arpl
fimul
into
inc
jno
xor
out
cld
outs
int3
test
xor
sbb
stos
les
dec
pop
js
xor
inc
fld
sub
hlt
test
js
adc
mov
pop
(bad)
div
and
jp
add
cmc
inc
push
fsubr
jle
xchg
mov
dec
xor
xchg
jmp
(bad)
lahf
sbb
aaa
dec
push
dec
cld
add
jmp
mov
inc
and
in
lods
xchg
jno
xchg
cmps
push
pop
jecxz
pop
or
or
fadd
movs
inc
mov
add
(bad)
and
sub
sub
push
es
adc
(bad)
push
dec
dec
adc
mov
jb
pushf
in
repnz
dec
jne
cwde
(bad)
fistp
inc
adc
pop
(bad)
lock
imul
xor
fwait
add
sbb
sbb
xchg
fistp
mov
dec
mov
mov
jp
daa
jno
frstor
push
imul
and
push
lea
scas
and
cmp
lods
cld
dec
sub
shl
jae
test
int
mov
push
fld
clc
lds
cmc
jnp
mov
mov
stos
sbb
(bad)
dec
lea
ret
adc
add
or
fld
pop
sbb
je
sub
sub
addr16
test
xchg
cdq
xchg
jmp
jmp
adc
retf
ins
mov
xchg
jecxz
sub
mov
sub
rol
cdq
xchg
jge
dec
outs
icebp
ja
out
sub
mov
loope
stos
pop
pop
pop
inc
push
cdq
repnz
dec
cmp
mov
pop
(bad)
arpl
loopne
push
push
jno
lds
and
mov
sub
es
rol
lock
cmp
add
xchg
scas
retf
ins
inc
je
mov
jge
or
icebp
fidivr
rcr
test
test
inc
add
call
sub
or
xchg
mov
sbb
dec
ficom
and
loopne
mov
aaa
jp
(bad)
test
cli
loope
jnp
and
sub
retf
fwait
js
ins
cld
fstp
and
mov
lock
mov
push
mov
(bad)
push
adc
inc
cmp
pop
cmp
push
stos
out
clc
cmp
leave
cmp
dec
call
inc
pop
into
cmp
pop
jns
adc
mov
jno
adc
push
xchg
mov
loop
and
movs
dec
xor
ins
dec
sar
xchg
ja
xchg
in
jbe
loope
push
or
jno
loope
mov
xor
adc
fsubr
js
or
cmp
mov
mov
mov
mov
mov
in
jno
scas
repnz
inc
inc
stos
ret
sub
cdq
mov
sbb
das
mov
fucompp
in
xor
adc
mov
push
stos
cld
and
jnp
mov
or
sub
sbb
push
sbb
sub
enter
push
push
not
sti
xchg
xchg
in
sub
fidivr
and
xchg
push
movs
xor
push
movs
or
in
add
in
lods
jecxz
xor
cmc
add
push
adc
mov
adc
hlt
push
data16
and
add
ds
out
push
jns
cmp
and
pop
je
cdq
mov
mov
mov
mov
add
jmp
loopne
dec
lods
or
mov
ds
or
popa
add
add
fidivr
test
xlat
xchg
fwait
cmp
std
inc
cmp
es
mov
scas
repnz
leave
nop
ret
push
adc
dec
aad
sbb
pop
arpl
mov
in
test
mov
outs
cmc
scas
mov
xor
ja
in
push
lea
out
cmp
fs
lods
dec
nop
or
mov
mov
sbb
add
call
out
(bad)
mov
adc
mov
mov
lods
jecxz
mov
xchg
out
into
sub
sub
sbb
retf
int
xor
lea
pop
cmp
pusha
jmp
fdivr
sbb
add
jg
jne
pushf
pop
js
mov
pop
ins
nop
xchg
adc
pop
inc
lds
repnz
xor
in
loop
sub
mov
dec
cmp
adc
sbb
dec
jl
and
sub
ret
out
mov
out
stc
mov
mov
jb
sub
push
outs
call
in
xor
mov
leave
jmp
sub
loop
mov
mov
or
movs
aas
jnp
sti
jle
or
dec
add
clc
or
xor
sbb
cmp
xor
cmp
mul
jmp
(bad)
mov
mov
pop
mov
jnp
shr
xchg
and
or
jecxz
jno
clc
and
push
sbb
repz
out
ret
out
ror
jne
xchg
inc
in
fwait
cmp
pavgw
cmp
mov
cwde
xor
jne
sub
adc
inc
icebp
shl
retf
adc
shl
xor
jg
call
mov
cmp
jle
pop
mov
mov
push
mov
in
cs
ins
es
xchg
and
mov
sbb
fisttp
fadd
pop
cmp
and
mov
mov
js
cmovl
adc
cdq
movlhps
mov
aam
xchg
stos
push
xlat
inc
sub
xchg
and
sub
mov
and
daa
pshufw
int3
addr16
imul
enter
sbb
(bad)
(bad)
push
xor
mov
ss
fst
call
mov
in
sbb
mov
pop
in
pop
jne
pop
pop
jne
add
shl
push
imul
sti
enter
lds
and
out
sbb
call
repnz
push
add
inc
leave
push
out
mov
sub
dec
xor
xlat
cmc
dec
loop
add
xchg
imul
and
sub
ds
pop
ins
jl
daa
ss
test
jp
pushf
nop
mov
in
inc
cmp
adc
nop
dec
fdivr
iret
in
std
inc
mov
jg
and
ss
and
xor
call
xor
pop
push
out
xchg
and
dec
jecxz
imul
mov
call
(bad)
ds
fst
pop
push
or
shl
iret
fiadd
add
and
lea
sbb
fisub
xor
inc
sbb
push
je
inc
jl
shl
cmp
mov
cli
xor
cmp
adc
sahf
retf
mov
dec
dec
out
push
jecxz
push
leave
das
into
cmp
or
or
dec
fnstcw
mov
xchg
add
aad
xor
iret
loope
push
jne
inc
or
xor
(bad)
mov
mov
daa
mov
push
sbb
mov
jecxz
cmp
xlat
inc
(bad)
fidiv
and
push
or
xor
jecxz
xlat
cmc
enter
out
xor
call
and
mov
mov
pop
(bad)
cmp
mov
stc
cwde
pusha
sbb
sbb
adc
les
and
push
ins
pop
mov
stc
xor
leave
bound
sub
std
jae
stos
fld
mov
mov
clc
cld
repz
dec
pop
mov
pushf
mov
js
loop
xchg
enter
push
inc
or
aas
int
mov
jmp
and
mov
inc
and
stos
add
inc
movs
cmps
push
add
out
das
ror
adc
xchg
push
or
popa
(bad)
xor
pop
xchg
sub
int3
bound
lahf
lods
outs
ret
in
pop
cwde
adc
out
test
gs
sbb
mov
or
repz
into
jb
or
retf
sti
push
mov
jae
push
mov
push
in
jl
add
mov
push
pop
popf
push
jnp
dec
sbb
shl
std
jb
xor
dec
sbb
inc
shl
xchg
ins
push
sahf
popa
mov
imul
stos
mov
lds
aas
sub
pop
into
(bad)
cld
call
xchg
fcomp
mov
ret
fiadd
mov
fs
adc
mov
pop
out
call
mov
mov
stc
bound
push
in
aas
jno
xchg
(bad)
aam
jae
test
cmps
jbe
cmp
ins
xchg
xchg
add
or
movs
dec
fidiv
adc
lahf
sub
jl
div
xor
adc
jmp
enter
outs
leave
aad
dec
stos
lods
sbb
les
sahf
sub
mov
jbe
dec
mov
std
pop
dec
sub
mov
cmps
and
gs
inc
add
and
cli
inc
sar
(bad)
(bad)
pop
push
jg
js
dec
mov
loop
(bad)
ins
aaa
clc
jnp
lahf
sub
out
jmp
sub
mov
std
jnp
les
sub
mov
sub
stos
aam
pop
mov
out
jne
mov
xchg
sar
fdivr
aam
mov
mov
xchg
sub
sub
xchg
sub
xlat
and
hlt
lea
xor
cmp
sub
dec
popa
xchg
xchg
cld
xchg
xlat
jle
pop
and
sbb
jbe
adc
pop
inc
lea
cmp
adc
ins
ror
dec
push
in
jo
mov
or
xor
xchg
push
out
and
add
ret
adc
adc
add
call
mov
in
xor
xor
outs
(bad)
out
test
rcl
or
mov
rcl
repz
outs
xchg
jno
je
test
or
inc
cmp
sbb
movs
or
pop
(bad)
xor
dec
cdq
sub
pop
pop
jo
std
test
jge
xchg
push
aad
xchg
outs
xchg
nop
movs
cmp
test
pop
sub
mov
mov
mov
sbb
jle
sub
mov
inc
sbb
or
adc
das
stos
dec
cmp
sbb
dec
rcr
ret
pop
loopne
push
add
xor
ret
out
add
rcl
cld
mov
lock
bound
dec
loopne
ss
xchg
xchg
test
ja
(bad)
sub
fistp
xchg
stos
push
cli
xor
mov
daa
mov
fcomp
and
(bad)
sbb
cmp
sub
mov
sbb
fidiv
add
into
fldenv
retf
les
dec
popf
cwde
mov
sub
(bad)
inc
jp
push
out
pop
stc
es
xor
loope
out
and
adc
sbb
ins
jecxz
sub
call
pusha
cmp
cmps
repnz
add
xchg
imul
mov
icebp
sbb
into
mov
out
adc
dec
shr
add
or
cmp
xchg
adc
mov
repz
gs
test
stc
and
jmp
mov
call
sbb
push
sbb
xchg
mov
rcr
push
or
cli
pop
dec
sar
retf
pushf
xchg
adc
bnd
xlat
jo
ret
popa
mov
adc
xchg
pop
jns
cmps
enter
adc
push
or
jb
push
inc
dec
and
adc
imul
mov
jp
arpl
or
outs
(bad)
mov
sub
cmc
mov
mov
ret
mov
xchg
jge
and
jne
test
push
pop
test
cmp
xor
jmp
inc
xor
(bad)
lahf
lds
leave
mov
out
int
push
ret
outs
mov
add
in
xchg
mov
cmps
std
imul
call
les
add
sub
(bad)
sahf
mov
pop
movs
cmps
hlt
push
sbb
out
xchg
sub
call
mov
repnz
loop
pop
add
xor
push
stc
cmp
push
popf
mov
or
js
(bad)
sub
gs
(bad)
enter
mov
in
or
and
xor
inc
pop
push
xchg
lds
lods
sub
repz
mov
outs
xor
pop
std
stos
outs
jmp
icebp
sub
dec
fmulp
in
xchg
add
hlt
push
ficom
dec
mov
jecxz
sub
and
dec
rol
enter
mov
int
lock
out
adc
(bad)
mov
movs
out
fst
mov
jno
fs
and
inc
leave
mov
into
push
test
add
enter
inc
sti
mov
mov
scas
cld
cmp
sbb
mov
dec
mov
lods
jne
add
pop
xor
imul
sbb
stos
xchg
adc
mov
inc
mov
test
retf
mov
loop
xor
ret
pop
sbb
pushf
es
out
adc
jmp
push
inc
mov
cmp
sbb
out
stos
retf
mov
jne
pop
adc
mov
and
adc
not
push
and
lods
inc
xor
into
cld
repz
adc
rcr
ret
(bad)
int3
add
jg
popf
jns
and
pop
ret
mov
add
loopne
jl
outs
and
neg
push
xor
lds
cmp
xchg
movs
fnstsw
cmc
adc
xchg
lods
and
enter
outs
dec
mov
mov
aaa
mov
fst
mov
jmp
mov
adc
popa
aad
loop
and
add
add
inc
hlt
mov
push
lea
js
and
adc
xor
mov
dec
cmp
sub
ins
push
std
stos
sbb
pop
sub
outs
divps
add
sahf
cld
or
nop
cs
lds
pop
fwait
fwait
jo
xchg
inc
xchg
inc
adc
mov
cmp
cld
mov
and
movs
mov
dec
rcr
and
mov
mov
rcr
xlat
test
loopne
push
adc
arpl
adc
rep
mov
lds
cmp
add
mov
in
inc
add
push
fcmovnb
adc
imul
inc
mov
adc
sbb
je
xchg
jge
fidiv
sub
push
inc
mov
sub
test
push
call
mov
mov
jp
int3
ja
iret
ret
or
cld
or
nop
pop
stc
adc
lahf
cmp
add
scas
mov
movs
pop
(bad)
out
xor
retf
movs
and
xchg
std
cmp
add
ret
cmp
or
mov
ficom
sub
push
jp
xchg
test
pop
dec
out
cmp
dec
mov
mov
pushf
ret
stos
mov
or
out
je
sbb
out
mov
stos
cmp
(bad)
jae
xor
cmc
icebp
cmp
or
jg
out
jge
dec
pusha
jmp
mul
mov
jl
push
jbe
adc
jns
out
push
shr
imul
mov
sbb
aaa
mov
in
mov
xor
lods
cmp
mov
fsubr
and
cli
xchg
push
ja
test
add
or
les
xchg
movs
jb
adc
outs
jge
xchg
nop
ret
nop
cmp
stos
or
inc
dec
jne
mov
and
pushf
outs
xchg
inc
jmp
sbb
inc
inc
std
fisub
inc
and
jg
push
or
adc
push
loope
jmp
pop
data16
xchg
push
leave
mov
dec
out
test
stc
xchg
mul
fdivp
sub
adc
retf
add
mov
xor
and
shr
das
shl
pop
test
test
jge
das
or
das
out
pop
into
jmp
shl
xor
and
movs
retf
push
mov
jb
ret
inc
mov
shr
lea
div
pop
cmps
cmp
mov
and
push
adc
in
add
inc
adc
ja
lahf
sub
enter
jecxz
cdq
int
arpl
mov
cmp
mov
test
sub
xchg
or
sti
adc
fwait
(bad)
jns
out
adc
test
xlat
aaa
adc
xor
aad
scas
jge
ret
xor
xchg
xlat
cmp
sar
mov
in
push
pop
in
les
lahf
and
jl
enter
mov
mov
call
pop
shl
shl
leave
pushf
ins
in
out
ins
adc
ds
fmul
mov
rcl
(bad)
and
dec
nop
xchg
adc
jae
mov
in
test
add
xlat
inc
push
mov
icebp
js
xchg
cmp
or
aas
out
(bad)
adc
inc
xchg
push
add
pop
and
cmp
and
daa
(bad)
mov
mov
loop
std
pop
call
lock
jg
in
xor
fsub
push
jno
outs
jns
mov
adc
pop
or
je
push
scas
je
movs
adc
mov
jo
loop
fwait
mov
mov
add
xchg
dec
shl
fdiv
push
loopne
xchg
loop
call
push
add
cs
or
gs
cld
int3
mov
mov
and
push
(bad)
popa
jmp
mov
arpl
push
push
xor
mov
jle
pop
int
add
xlat
(bad)
sub
adc
inc
leave
lea
iret
and
pop
push
xor
sub
loope
xor
xor
adc
xor
push
adc
outs
adc
(bad)
or
jge
dec
dec
cmpps
pop
and
dec
ss
or
inc
je
lock
push
or
pcmpeqd
adc
adc
pop
hlt
movs
inc
mov
jmp
(bad)
fcmovnbe
cwde
dec
mov
outs
mov
add
xor
jo
pop
xchg
sub
and
push
mov
jmp
out
(bad)
mov
adc
sar
push
sbb
push
stc
cwde
dec
aas
cld
xor
cmp
mov
fimul
lea
stos
movs
mov
jae
scas
fidiv
retf
shr
test
(bad)
lahf
out
(bad)
neg
push
xchg
addr16
pop
arpl
aad
enter
pop
mov
hlt
jl
fimul
aad
inc
mov
pop
mov
jle
nop
push
repnz
sub
and
mov
frndint
xor
lods
in
rol
sub
in
push
or
and
ret
add
es
adc
into
pop
stos
inc
sbb
out
jg
or
pop
xchg
fidiv
sar
jecxz
out
in
popa
pop
mov
adc
neg
in
shl
stos
cmp
mov
repnz
out
outs
rcl
imul
pop
cmp
add
pushf
int3
mov
xor
fldenv
call
jl
cmp
mov
call
lahf
xchg
adc
ficomp
iret
cmps
jno
jbe
ds
aas
sub
dec
mov
dec
dec
mov
cmp
xchg
xor
cmp
retf
or
popa
pop
add
fdivp
push
mov
sbb
pop
fadd
stos
mov
out
jnp
cmp
out
mov
xchg
sbb
jmp
jne
jmp
jl
mov
imul
or
pusha
mov
inc
or
mov
add
imul
add
lods
dec
pusha
sub
push
lock
jge
inc
pusha
mov
inc
repnz
hlt
xchg
fild
pop
or
xor
mov
nop
jmp
mov
xlat
xor
cmp
sbb
mov
jns
(bad)
cld
inc
inc
popf
cwde
push
pop
test
inc
imul
push
mov
mov
mov
or
and
push
ins
cmp
popf
add
inc
sub
sub
dec
xchg
adc
add
jecxz
cmp
movs
mov
xor
lods
out
or
nop
cmp
int
call
sub
ja
add
ins
je
cmp
mov
mov
mov
sbb
xchg
xor
push
push
scas
cwde
jbe
xor
rep
daa
xor
adc
adc
shr
jbe
xor
or
ins
test
sub
mov
outs
sar
xor
test
cld
push
pushf
aaa
inc
mov
add
and
or
ja
sub
stos
mov
pop
dec
mov
mov
mov
sbb
js
loopne
or
add
and
movs
pcmpeqb
ret
std
mov
sub
lahf
ss
iret
pop
xlat
cmps
das
add
dec
adc
popf
cmps
popf
ins
add
pusha
and
loopne
popf
in
ss
and
push
xorps
leave
dec
pop
pop
test
push
xchg
(bad)
(bad)
jp
add
ret
int
xlat
ss
sbb
fld
xcrypt-cfb
cmps
iretw
(bad)
mov
and
mov
loop
sahf
cmp
or
fbld
or
pop
popa
push
jbe
std
inc
and
movs
adc
sub
xchg
aad
xchg
push
imul
movs
test
bound
cli
pusha
xor
(bad)
and
retf
movs
ins
push
or
mov
jp
sbb
adc
dec
sub
mov
jle
js
pop
outs
push
pop
xchg
popf
sub
and
cmps
rcl
lahf
and
add
add
jl
lods
leave
jl
push
xchg
cmc
inc
pop
(bad)
sub
xor
nop
push
lods
sti
ja
cmps
call
mov
add
jb
mov
push
push
movs
jp
and
into
(bad)
pop
frstor
sahf
shl
call
jl
pusha
mov
xchg
outs
vaddsubps
push
or
mov
sub
stc
test
pop
sub
daa
xor
cmps
je
xchg
adc
lock
ja
pop
neg
jnp
jo
xor
inc
(bad)
pop
dec
sub
cmp
stc
gs
ret
dec
sub
clc
lock
(bad)
(bad)
adc
pop
cmp
xor
shr
mov
cli
mov
xchg
push
mov
xor
ja
mov
push
scas
fmul
sbb
xchg
std
pop
enter
mov
sbb
scas
sub
fstp
(bad)
(bad)
inc
test
out
imul
mov
sbb
sub
in
lds
(bad)
test
lea
nop
lahf
jg
mov
or
fsubr
in
adc
and
xor
addr16
nop
sub
(bad)
fcomp
icebp
mov
aas
cmps
int
xlat
sub
add
pop
fs
jne
stos
scas
xchg
inc
imul
and
add
lds
shl
aam
push
fnstsw
push
(bad)
xchg
out
rcl
stos
jbe
mov
call
cmp
fidiv
cwde
call
out
lods
and
into
test
loope
sub
leave
xlat
(bad)
lods
jne
and
push
leave
push
xchg
popa
test
test
ror
mov
daa
or
into
out
fisttp
movs
adc
cmp
loopne
loop
dec
data16
enter
jae
aam
repz
jo
add
jno
stc
iret
test
ins
pop
mov
xlat
dec
in
xor
push
ret
clc
outs
je
ror
repz
gs
std
pop
cdq
xchg
mov
dec
inc
pop
mov
imul
mov
inc
mov
adc
sar
jle
xchg
or
mov
pop
pop
ds
mov
iret
dec
inc
sub
jno
cmps
push
mov
cmc
pop
out
jno
cdq
int
xor
hlt
cmp
inc
push
gs
pop
outs
jle
pop
call
movs
push
xchg
stos
sub
xchg
ror
retf
pop
xor
xchg
push
mov
dec
jno
call
sub
pop
jo
lods
lods
cwde
cwde
pop
adc
xchg
dec
in
out
jo
stos
cmp
in
test
pop
add
inc
fnstsw
jbe
fucomip
mov
mov
int3
cmp
cmp
jno
addr16
pusha
mov
neg
inc
adc
cwde
clc
cmp
cwde
popf
add
and
mov
mov
aad
aas
xchg
test
push
xchg
loop
jno
jle
mov
je
jno
xor
jns
mov
mov
imul
ret
jmp
sbb
push
mov
lea
mov
dec
mov
jle
jno
add
push
aad
mov
dec
dec
add
fld
mul
dec
test
test
test
inc
retf
mov
pop
pop
xchg
add
inc
outs
sub
cli
call
in
adc
jg
inc
dec
push
mov
cdq
cmps
push
les
scas
gs
inc
cli
dec
mov
pop
add
outs
mov
push
les
retf
or
mov
outs
sbb
jae
inc
or
adc
ins
repz
lds
loop
ror
sub
sub
dec
cmp
or
hlt
push
dec
movs
data16
in
jae
enter
aad
sbb
adc
cs
inc
retf
cdq
push
(bad)
(bad)
out
dec
or
or
call
cmp
mov
mov
repnz
call
mov
js
mov
cld
mov
push
jne
pop
cmp
inc
mov
dec
inc
enter
sbb
sti
inc
push
sbb
cmp
cmp
ud1
ds
and
inc
sbb
ficom
push
les
jle
loopne
xor
add
lea
jmp
lahf
movs
nop
and
lahf
test
inc
sbb
sti
pushf
mov
fdiv
inc
mov
adc
ss
xor
and
or
sbb
mov
sub
(bad)
add
mov
mov
lock
sub
push
imul
lods
dec
test
addr16
jle
adc
xchg
push
popa
and
fcmovnu
call
sub
call
ret
jmp
call
xor
cmps
pop
not
iret
cmp
repnz
mov
rcl
jmp
and
aaa
data16
scas
xor
adc
int
sbb
xchg
dec
xchg
mov
fidivr
loope
dec
pop
ja
shl
push
inc
test
mov
and
xor
and
(bad)
fsub
mov
(bad)
dec
std
(bad)
or
xchg
push
cdq
retf
js
call
jnp
mov
jecxz
jnp
push
dec
mov
sbb
and
mov
add
and
mov
sar
jg
xor
das
ins
mov
jmp
int3
ss
mov
jg
pop
adc
sub
loope
sub
xchg
or
lds
and
ret
jnp
retf
push
adc
push
out
aas
movs
call
mov
test
dec
sbb
imul
or
imul
lods
push
and
cmp
div
mov
dec
shr
pop
sahf
mov
loope
(bad)
adc
fmul
push
jg
add
xor
ja
repnz
cdq
push
call
enter
fnstcw
mov
xor
ficom
xor
mov
ret
adc
cmp
aam
arpl
jnp
or
or
jae
shl
aaa
shl
shl
push
push
jmp
xor
pop
lds
ins
test
fist
(bad)
repz
inc
sbb
jnp
jmp
inc
xlat
std
sub
push
xchg
hlt
in
sub
jno
rcr
shl
and
scas
es
dec
adc
lock
mov
adc
inc
and
out
pop
(bad)
or
pop
dec
rcl
retf
sbb
xor
xchg
adc
jns
sbb
(bad)
or
bound
cmp
jnp
push
aaa
mov
int3
fwait
mov
xor
pop
xor
inc
jl
xlat
sbb
and
imul
xor
sti
test
jbe
inc
xchg
test
in
fwait
call
pop
mov
add
mov
mov
sub
stos
sub
ins
add
mov
adc
mov
test
iret
or
addr16
icebp
or
ss
call
mov
add
ror
repnz
cmp
fild
ss
add
bound
inc
dec
inc
js
or
jecxz
in
shl
in
dec
adc
sub
mov
sbb
cdq
xchg
aaa
push
fld
loope
xor
adc
sub
cmp
push
test
icebp
test
lock
fwait
cmp
mov
jg
lahf
or
add
mov
call
(bad)
stc
mov
scas
mov
add
add
or
test
xlat
pop
jnp
daa
loope
cmp
shl
sub
iret
or
or
jl
lea
dec
retf
xor
test
call
push
retf
inc
outs
into
into
in
stc
cwde
jbe
rcl
cli
jg
in
sbb
mov
mov
sar
sub
mov
into
scas
int3
add
mov
and
inc
into
xchg
sbb
(bad)
adc
dec
sahf
sbb
(bad)
outs
mov
data16
mov
cwde
mov
jecxz
call
or
test
fistp
mov
cmp
cs
push
adc
sub
add
xor
mov
or
(bad)
xchg
jnp
jns
retf
cmps
add
out
jae
call
xor
mov
xchg
xor
sbb
dec
xor
test
add
repz
and
jb
push
inc
test
push
or
sbb
sar
es
stos
mov
pop
or
pop
and
or
push
push
mov
push
lea
popa
and
(bad)
leave
rcr
es
in
xchg
aam
das
xchg
ja
repz
mov
cwde
enter
sub
mov
mov
lds
nop
xor
jbe
out
sti
loope
dec
rcl
std
or
mov
out
adc
mov
push
sub
cmc
fist
cmp
sub
retf
pop
leave
into
into
test
movs
in
(bad)
jmp
pop
cli
hlt
ins
ja
sbb
fldcw
fmul
enter
js
loopne
or
cmp
xor
bound
inc
cmp
data16
jl
xor
xchg
out
int
call
vandnps
repnz
repz
scas
xchg
das
into
test
fst
cli
xchg
ffree
xchg
add
sub
cli
call
popf
pop
fst
and
neg
nop
jge
add
cmp
into
push
push
cmc
movs
mov
push
pop
jp
cmps
nop
jge
fld
and
sar
addr16
push
dec
mov
mov
in
call
mov
pop
add
sbb
add
mov
fstp
not
xor
push
mov
pop
inc
retf
hlt
(bad)
cmc
into
inc
sub
bound
jns
jne
xor
clc
sbb
retf
into
ins
pop
mov
mov
sbb
cmps
std
xchg
sbb
mov
inc
inc
(bad)
std
fistp
add
pop
mov
(bad)
daa
pop
fld
jns
push
xchg
push
xor
dec
sti
dec
sbb
pop
adc
repz
outs
popa
fstp
fbstp
mov
sbb
ret
fwait
jns
push
call
cmp
(bad)
push
in
cmp
jle
retf
sar
jae
clc
or
adc
sahf
sub
es
push
mov
cmp
(bad)
gs
scas
lahf
mov
arpl
repnz
test
xchg
fcomp
repz
scas
sar
adc
mov
adc
push
outs
dec
loopne
imul
add
arpl
mov
mov
adc
dec
loop
and
cmp
mov
cld
(bad)
(bad)
dec
jg
out
mov
mov
pop
test
xchg
aas
pop
sub
cmps
in
fsubr
and
into
(bad)
pop
sub
lds
mov
xor
jg
xchg
icebp
cmc
iret
int3
enter
lea
pop
rol
jmp
xchg
addr16
inc
(bad)
sub
(bad)
jno
sub
imul
addr16
cli
popf
sbb
and
and
mov
(bad)
cmps
cmp
inc
ss
in
and
sbb
mov
cmp
add
mov
or
or
scas
inc
loope
sub
inc
and
sti
(bad)
shr
pop
push
out
mov
clc
mov
mov
jb
xchg
sub
mov
loope
out
pop
mov
movs
call
mov
bound
int3
jle
inc
ret
cmp
ins
sub
stc
shl
stos
addr16
fwait
sahf
sbb
leave
sub
sti
scas
pop
repnz
popa
outs
or
int
loopne
jecxz
jmp
loop
pop
pop
push
jae
dec
dec
lock
es
out
adc
xchg
sahf
in
ins
jae
cmps
mov
hlt
lods
out
out
clc
xor
add
sbb
jb
cmp
and
pop
loop
pop
sti
movs
mov
jns
ret
fs
outs
loopne
rol
inc
ins
outs
xor
cmc
add
mov
jp
retf
shr
mov
push
xor
xlat
jmp
imul
je
rol
mov
pop
fs
jae
imul
outs
pop
xor
das
inc
adc
adc
cmps
adc
cmp
mov
sbb
std
dec
dec
pusha
jmp
mov
es
or
movs
repnz
aas
or
inc
mov
xlat
xchg
idiv
or
test
xchg
mov
fcomp
lods
ss
test
jns
jmp
movs
mov
dec
stos
or
mov
mov
rcr
push
pop
test
pop
dec
sahf
or
int
cmp
je
pop
lods
xor
jp
push
inc
or
mov
jmp
popa
xchg
and
add
mov
ret
pushf
push
dec
pop
in
jmp
jle
jnp
in
test
jo
push
jo
pop
pop
hlt
inc
add
imul
movs
and
push
jl
ins
sahf
push
push
cmp
nop
push
sub
inc
(bad)
shr
jb
sub
xchg
mov
sub
adc
cli
imul
pop
out
icebp
cld
xor
imul
xor
push
mov
repz
in
repz
dec
mov
sub
sbb
and
push
out
xchg
data16
lock
push
push
je
add
push
push
(bad)
push
cmp
inc
movs
fmul
fsub
lods
mov
xchg
or
or
adc
xchg
mov
cmp
and
adc
into
cmc
xchg
cmp
sub
inc
and
repnz
int3
jb
jp
ror
pop
mov
cmp
jle
sub
sbb
push
or
imul
add
std
xchg
mov
fnstenv
mov
aam
clc
gs
scas
sub
pop
popa
push
das
sbb
adc
lods
movs
push
ds
dec
loope
push
mov
or
sbb
jmp
add
mov
mov
sbb
add
sbb
leave
xor
cld
jne
and
(bad)
outs
pop
inc
and
xor
jnp
fcmovnb
sbb
(bad)
bnd
(bad)
cmp
mov
repz
cli
push
inc
(bad)
popa
and
pop
test
mov
dec
dec
out
dec
data16
pop
and
repnz
mov
cld
(bad)
push
or
lds
jmp
rol
mov
push
call
or
test
sbb
dec
pop
in
sbb
inc
call
hlt
or
mov
or
fwait
shl
mov
jmp
std
imul
test
adc
popa
cmp
jp
mov
adc
or
cmp
mov
in
jmp
mov
pop
or
inc
mov
xchg
ror
lods
jne
sbb
mov
aad
mov
or
stos
inc
fist
int3
jge
xor
shr
cld
and
jle
and
push
jle
out
and
mov
sub
mov
loop
sbb
ins
cmp
jo
inc
hlt
xchg
mov
sub
stos
xor
xor
(bad)
(bad)
sub
inc
lock
movs
or
jge
ins
sbb
and
mov
dec
add
movs
cs
jg
and
les
xchg
and
je
aam
sahf
and
fistp
xor
adc
adc
push
sti
jmp
mov
cmp
lds
xlat
dec
push
jmp
jmp
ficomp
adc
xor
fcmovb
mov
inc
inc
gs
pop
dec
arpl
inc
jns
adc
add
sub
div
push
xor
mov
xlat
stos
leave
jno
iret
mov
mov
int
dec
mov
mov
and
inc
and
ins
(bad)
push
sbb
icebp
xor
out
fldenv
dec
inc
mov
xchg
loope
adc
fcmovu
faddp
jbe
repz
les
jle
into
sbb
mov
cmps
push
inc
push
aam
std
pushf
mov
mov
je
jl
stos
rcr
retf
not
cmp
pop
pop
fimul
in
cld
mov
sbb
in
outs
pop
call
jo
adc
dec
dec
xchg
adc
inc
bound
sahf
sbb
in
inc
jmp
mov
outs
inc
retf
xor
(bad)
jne
mov
inc
pusha
(bad)
or
fmul
addr16
pop
outs
mov
lods
dec
cmp
pop
rcr
pop
mov
aas
xchg
sub
mov
jle
mov
dec
cmc
fimul
push
lock
mov
adc
pop
mov
xchg
mov
pusha
mov
test
inc
dec
dec
sti
ret
sbb
mov
es
add
jecxz
retf
cwde
sub
icebp
dec
pop
mov
pop
dec
pop
(bad)
push
mov
push
loope
call
and
dec
jns
xor
sahf
jle
push
out
idiv
pop
pop
sahf
add
test
(bad)
es
xor
jmp
dec
inc
push
xchg
adc
xchg
iret
ds
popf
and
push
test
icebp
mov
aam
fbld
es
sub
cmp
xor
idiv
shl
fsub
out
push
scas
mov
adc
outs
repnz
xchg
mov
int3
mov
fsubr
add
pop
jge
into
(bad)
jbe
addr16
xor
inc
add
xchg
sahf
fdivr
push
mov
popa
cmp
mov
mov
imul
mov
jne
sahf
jg
enter
scas
cmc
inc
loop
inc
mov
call
retf
ret
test
pop
lahf
in
mov
sahf
div
mov
inc
(bad)
xor
pop
mov
(bad)
loope
inc
(bad)
(bad)
cdq
inc
jae
cmp
xor
push
lea
stos
rol
inc
cmp
mov
and
push
cmc
fwait
ins
sub
adc
scas
out
popa
or
add
fst
inc
in
scas
mov
repz
ja
pop
xchg
int
pop
pop
loop
sbb
dec
in
mov
and
mov
pushw
mov
mov
les
add
sub
cmps
add
cmp
pusha
pushf
jae
rol
aas
loopne
out
call
mov
ja
and
and
mov
test
dec
mov
ds
push
arpl
test
je
inc
jl
bound
dec
mul
hlt
fisttp
es
xchg
test
or
xchg
mov
sub
mov
icebp
jb
icebp
xor
repz
sbb
scas
adc
repnz
xchg
xor
jmp
aam
sbb
add
(bad)
sahf
dec
xor
or
in
add
xor
or
fisub
push
ins
jo
pop
or
not
test
cmp
mov
cmp
loop
out
push
cdq
mov
pop
stc
lods
fwait
imul
xchg
(bad)
or
shl
jbe
push
xchg
jbe
and
movs
add
inc
dec
repz
mov
inc
and
mov
mov
and
int
popa
pop
clc
(bad)
push
dec
aad
inc
mov
push
push
cmp
bswap
out
sub
fld
fwait
mov
jge
jle
bound
psubusw
inc
icebp
or
ins
dec
jnp
and
push
push
shl
jmp
je
sbb
into
movs
retf
movs
jno
cmp
shl
fs
int3
sub
jae
mov
jge
mov
cs
out
lock
lea
(bad)
jmp
imul
push
outs
xchg
mov
inc
(bad)
fnstsw
jge
div
pop
pop
lods
add
xchg
mul
xor
push
jae
and
or
jae
push
dec
out
jns
sub
dec
mov
jmp
ja
dec
fsubrp
xchg
out
and
aas
sub
pusha
and
xchg
popf
sar
sub
and
xchg
je
push
jmp
aaa
cld
or
popa
aam
mov
push
xor
int
xor
mov
mov
mov
shl
test
lods
sub
scas
mov
repz
inc
iret
out
gs
stos
rol
cmp
pop
test
shl
fs
sahf
dec
popf
push
lods
add
arpl
cmp
repnz
fild
iret
loope
push
loope
add
jo
and
sub
jp
or
sbb
mov
mov
iret
sti
xchg
loopne
loopne
sbb
push
loop
xor
cwde
add
and
xor
mov
cmp
or
out
xchg
aam
jg
xchg
hlt
call
mov
or
(bad)
test
outs
adc
imul
and
dec
push
fidivr
mov
pop
inc
aas
jle
aas
push
mov
test
xchg
mov
lods
test
leave
push
jge
call
retf
ins
jge
pop
pop
aas
jo
jmp
popf
adc
pop
pop
retf
dec
(bad)
out
add
push
mov
inc
aas
add
jle
jmp
or
(bad)
(bad)
sbb
es
sahf
in
dec
pop
cdq
cmps
sbb
jns
sbb
repnz
(bad)
ja
push
xor
dec
push
(bad)
nop
outs
add
neg
sbb
out
loope
popf
and
dec
call
(bad)
xlat
popf
or
prefetcht1
ret
sbb
call
push
(bad)
xor
dec
xor
ds
dec
fdivr
inc
cdq
lock
sbb
add
cld
into
out
(bad)
xchg
push
loop
or
popa
ss
lods
xchg
aam
jg
mov
push
in
(bad)
rol
pslld
ds
iret
adc
mov
mov
mov
outs
push
xor
adc
mov
pusha
dec
jae
fisubr
mov
pop
cmp
jmp
and
inc
jnp
inc
add
(bad)
pop
inc
jmp
fsubr
out
sub
fstp
jb
ret
mov
jno
xchg
mov
je
sahf
jl
push
adc
int
dec
mov
xchg
sar
(bad)
out
or
dec
mov
add
adc
cmp
in
mov
jmp
xchg
addr16
test
retf
rcl
das
inc
outs
sbb
call
push
and
add
outs
fst
and
popf
xchg
in
adc
lds
jecxz
sbb
cmp
(bad)
lock
jle
mov
mov
sbb
in
or
xor
(bad)
adc
popa
test
mov
dec
mov
imul
add
fmulp
sub
mov
add
js
xchg
cmp
and
shl
int
mov
in
mov
out
xor
out
cld
inc
inc
push
pop
inc
jmp
lahf
pushw
fwait
push
mov
popa
dec
sub
retf
addr16
rcl
pop
jge
sbb
(bad)
or
pop
sub
jbe
mov
icebp
popa
js
imul
lea
xchg
mov
sbb
out
or
inc
adc
add
loope
fnstsw
cld
jne
bound
add
pop
sbb
jns
scas
or
sahf
pop
and
imul
cmovl
adc
or
adc
aaa
into
movs
xchg
mov
jle
dec
mov
inc
and
shr
sub
jp
fild
(bad)
cdq
es
xchg
mov
push
sbb
imul
xor
cmp
aas
fsubr
in
sahf
jl
mov
std
pushf
add
in
out
cmp
adc
retf
cmp
xchg
push
sar
xlat
sub
mov
or
aad
lds
xchg
push
xchg
shr
mov
outs
cmps
mov
test
aaa
xor
xchg
les
in
adc
mov
add
cmps
popa
jns
or
out
xor
jge
lea
nop
push
cmp
and
lods
add
adc
leave
es
out
mov
daa
stos
ds
mov
or
dec
fisub
loop
mov
xor
xor
or
push
push
or
repnz
mov
das
pop
mov
pop
pop
loopne
add
rcr
push
loope
ins
mov
in
cmp
mov
push
cmp
aas
fldcw
gs
sbb
popf
mov
jge
in
js
xor
into
and
xchg
pop
scas
xchg
mov
push
and
iret
mov
push
mov
stos
mov
es
sub
mov
jg
jne
test
call
xlat
ds
mov
push
cmp
add
nop
daa
lods
fisttp
push
xchg
(bad)
dec
adc
and
(bad)
cmc
loopne
sahf
jo
ins
dec
fidivr
xor
inc
dec
jmp
data16
out
test
jno
stos
int
mov
in
call
and
mov
sub
and
mov
mov
pop
in
xlat
call
ins
mov
adc
cmp
cli
sbb
or
out
ins
mov
and
push
mov
mov
inc
icebp
icebp
mov
in
inc
test
mov
sbb
cwde
lods
movs
call
or
clc
mov
mov
(bad)
xchg
call
in
pop
pop
jne
mov
pop
dec
mov
adc
sbb
xor
push
jg
mov
or
sub
pop
in
jmp
mov
adc
in
les
stos
xor
sti
dec
js
out
sub
outs
sbb
xor
emms
mov
inc
fnstcw
push
dec
cmc
sub
sub
mov
retf
mov
pushf
and
nop
jo
and
stc
aaa
add
xor
or
data16
cmps
dec
xor
mov
repnz
mov
push
xor
cmp
xor
jge
add
in
(bad)
rcl
cld
dec
push
call
pop
jg
adc
pop
cmps
imul
jns
stos
jmp
mov
jmp
and
sub
in
cmp
mov
rcr
sbb
scas
push
cdq
test
inc
sbb
retf
mov
fcom
fld
call
pushf
fcomp
sbb
fistp
mov
(bad)
inc
cmps
pop
inc
adc
cmps
test
cmp
les
mov
inc
mov
fild
test
call
aaa
popf
loopne
std
pop
jecxz
mov
pop
cli
hlt
aad
xor
retf
pop
mov
jle
dec
scas
cmps
xchg
rcl
aad
sar
add
ins
dec
ins
and
mov
ins
test
mov
mov
adc
out
rol
sub
inc
sbb
pushf
dec
xchg
sbb
rcl
sti
mov
mov
mov
outs
inc
stos
verr
pop
mov
inc
push
dec
in
xor
add
mov
push
inc
clc
pop
pop
movs
mov
fcmovb
ds
push
je
push
adc
fwait
mov
xchg
inc
xor
test
mov
retf
dec
jge
rcr
div
rcl
mov
dec
pop
jecxz
fisttp
mov
adc
or
adc
or
rcl
jns
sahf
add
adc
or
jo
sbb
repz
movs
ret
xchg
xchg
clc
test
adc
cdq
sti
int3
mov
push
and
loope
add
jo
stos
int
rol
out
and
das
jmp
sub
(bad)
stc
push
mov
out
ret
push
hlt
call
arpl
aas
leave
add
mov
and
jns
and
mov
xchg
jecxz
xor
repz
add
out
cmp
jle
push
lea
xor
leave
enter
jbe
dec
ss
arpl
cs
shr
(bad)
retf
mov
cmp
or
loopne
jb
inc
xor
xor
mov
frstor
call
mov
mov
mov
dec
xchg
cmp
push
bound
cmps
pop
and
(bad)
jp
pop
mov
mov
ins
ins
jne
mov
add
pop
addr16
inc
bound
xchg
mov
dec
sbb
(bad)
mov
and
pop
stos
or
dec
sub
jae
mov
xchg
xor
dec
xchg
xchg
js
aas
scas
push
shl
nop
jp
fdivr
or
jns
xlat
inc
dec
mov
or
sub
adc
or
ins
mov
sti
xchg
mov
or
and
xchg
or
test
mov
popa
mov
jp
xor
sub
ins
outs
cmps
cs
dec
jl
loope
adc
jg
rcr
xchg
std
adc
mov
div
xor
loope
mov
pop
jne
stc
and
or
fcmovne
sbb
das
mov
sbb
in
mov
cmp
hlt
jmp
sahf
jbe
and
mov
test
or
into
xchg
int
mov
ret
pop
aas
adc
cmp
dec
mov
test
mov
pop
loopne
test
hlt
add
mov
xor
mov
icebp
add
add
inc
(bad)
xor
pushf
pop
and
sahf
rcl
xchg
dec
das
sub
(bad)
jmp
data16
adc
or
cmp
xor
mov
push
sysret
dec
out
(bad)
sub
cs
sar
outs
and
movs
xchg
cwde
fcom
enter
in
cmps
mov
mov
mov
outs
gs
nop
test
jno
scas
inc
fnsave
in
or
mov
pop
out
or
inc
and
push
xchg
in
mov
fwait
mov
in
sub
sbb
mov
xor
cs
repz
jmp
push
fmulp
fwait
pop
out
jge
repnz
jl
mov
fwait
ret
shl
xchg
cmps
ret
or
jg
push
xchg
cwde
fistp
in
cld
jle
mov
xchg
hlt
retf
add
sbb
jbe
push
add
jp
push
pop
jno
dec
imul
and
ds
cs
mov
in
mov
mul
or
mov
jnp
call
daa
repnz
cmc
and
and
test
cmp
xor
push
shr
cwde
fimul
and
cdq
pushf
xor
cmp
dec
sub
mov
xchg
dec
std
push
mov
repnz
sar
cmps
cs
call
daa
xchg
cli
sbb
push
push
or
push
ror
pop
mov
inc
aas
and
ret
sub
push
outs
(bad)
(bad)
push
pop
push
aad
inc
cmp
jp
pop
mov
lds
ret
jb
in
inc
arpl
push
das
int3
sahf
cdq
mov
mov
frstor
ret
rcl
mov
ins
xor
sar
push
iret
aad
movs
das
dec
daa
das
es
in
cli
pusha
imul
inc
push
and
inc
cld
dec
jns
inc
bound
cmp
test
mov
out
movs
adc
or
ins
int
retf
push
das
inc
pop
jge
fiadd
mov
or
inc
mov
jmp
mov
loop
(bad)
pop
not
popa
rol
push
sub
push
and
dec
hlt
jge
mov
jno
xchg
rol
pop
jns
adc
xchg
fsub
mov
add
test
add
or
mov
push
stc
aam
jnp
fwait
imul
mov
cmp
push
inc
push
adc
jmp
out
jns
mov
cdq
rcl
xor
test
or
jmp
in
jae
loop
movntq
sub
fistp
pop
or
sbb
jb
jb
push
dec
enter
jecxz
sar
mov
loope
cld
test
repnz
hlt
test
cmp
inc
mov
stos
and
mov
xlat
jmp
xor
aam
jmp
xor
xchg
std
lods
aas
dec
fsubr
jle
mov
mov
cmps
cmp
mov
bound
push
xor
imul
(bad)
cmp
retf
dec
inc
jo
loope
add
push
das
push
mov
lds
das
loopne
add
rcl
mov
or
cwde
sahf
mov
mov
xor
fcomp
and
sub
mov
out
cli
movhps
push
mov
mov
sbb
push
cmp
outs
rcr
or
loop
mov
adc
lods
lahf
jmp
mov
dec
jbe
int
inc
dec
mov
lods
jnp
mov
(bad)
in
dec
(bad)
dec
adc
mov
adc
cmp
pop
in
jns
jo
xor
int3
adc
int3
stc
(bad)
push
fcmovbe
push
push
cmps
in
addr16
xchg
les
icebp
dec
push
and
xchg
sbb
test
(bad)
jns
mov
ret
mov
bound
sub
add
aaa
rol
xchg
gs
jne
push
outs
(bad)
loop
jns
and
mov
mov
pop
stos
retf
adc
aas
imul
or
hlt
jp
icebp
sub
jne
call
mov
add
jge
mov
mov
push
shl
pop
and
bnd
pop
or
xchg
fbld
inc
xchg
jo
cmc
imul
sub
xor
test
ja
inc
mov
adc
and
inc
mov
push
call
out
ret
dec
sub
jg
and
and
mov
cs
xchg
mov
sbb
add
cmp
call
dec
mov
shl
std
xor
push
outs
(bad)
jae
dec
in
and
imul
test
(bad)
xor
jmp
pop
xlat
mov
imul
mov
stc
pop
repnz
or
test
dec
and
cmp
iret
xor
mov
xchg
jo
scas
xchg
in
jg
nop
stos
mov
shl
add
mov
movs
(bad)
scas
in
cmpxchg
in
pusha
lea
xlat
stc
jmp
cmp
sub
out
jnp
fst
sub
mov
push
pop
adc
mov
arpl
dec
mov
sbb
jo
fs
add
or
ficomp
jo
or
inc
mov
aas
in
xchg
jge
jae
loop
cwde
dec
retf
shl
and
(bad)
and
mov
xor
cld
jnp
push
call
mov
popa
xchg
add
pop
retf
cmp
arpl
js
add
xchg
daa
inc
xor
(bad)
pop
lea
inc
xchg
sbb
addr16
inc
popa
dec
mov
or
out
ss
push
adc
pop
mov
idiv
pusha
pop
pop
mov
xor
or
xchg
mov
sub
leave
dec
xor
sub
push
jmp
push
retf
push
fwait
pusha
sti
int
mov
stos
jmp
scas
rcr
fst
addr16
jge
jnp
xlat
iret
lahf
mov
pop
ret
mov
int
cli
outs
cdq
jg
xchg
std
sti
mov
sbb
xor
(bad)
inc
xlat
dec
pop
mov
ret
movs
iret
mov
xchg
push
adc
repz
mov
inc
adc
push
push
dec
pusha
cdq
ins
in
mov
inc
imul
mov
movs
add
mov
pop
js
sahf
ins
pop
ins
fisubr
ds
mov
shl
jns
ds
outs
sbb
mov
cld
jge
aad
(bad)
call
cs
movs
inc
out
(bad)
mov
pushf
frstor
sub
cs
aam
mov
push
and
imul
cdq
scas
bound
test
mov
pop
sbb
push
or
or
dec
and
mov
push
into
inc
pop
icebp
pushf
retf
push
out
leave
mov
push
cmp
cmps
inc
dec
mov
or
sbb
inc
xor
int3
scas
sbb
js
popf
add
cs
xchg
clc
pop
sub
pop
xor
inc
lock
push
jbe
xlat
mov
lock
jmp
aam
mov
or
add
mov
jl
movs
(bad)
sub
stc
and
stc
inc
mov
pusha
lock
xchg
add
adc
jecxz
mov
push
xor
pop
jo
mov
pusha
outs
imul
add
push
adc
cli
jle
xchg
jmp
and
pop
ficom
and
cdq
mov
in
add
mov
dec
lahf
push
iret
stc
mov
sub
jg
jbe
xchg
xor
adc
adc
sbb
and
push
sbb
test
cmc
int
inc
test
in
push
jle
and
or
rcr
and
or
mov
sbb
push
test
or
into
sub
pop
pop
cmps
lahf
mov
or
pop
add
fstp
out
(bad)
sbb
cmp
jmp
cmc
rol
stos
cmp
int3
pushf
mov
cmps
movs
aas
xor
cdq
movs
sub
cmps
inc
retf
std
jne
imul
mov
aad
and
xor
stc
mov
div
inc
inc
das
and
lahf
cmp
push
std
jecxz
jmp
xor
loopne
push
repnz
push
lahf
xlat
adc
outs
fstp
mov
add
or
in
jecxz
shl
test
push
push
inc
lods
pop
cmps
adc
mov
add
add
add
and
add
fcom
push
rol
(bad)
xchg
dec
or
in
test
xor
and
(bad)
mov
mov
push
xchg
repnz
arpl
hlt
sbb
imul
scas
std
lea
ins
in
mov
cmp
jbe
loopne
jg
lods
into
cmp
div
sar
cmp
stos
stos
imul
or
test
xor
pop
xlat
pop
les
shr
cld
mov
idiv
mov
lahf
fwait
rol
das
retf
pop
mov
call
repnz
xchg
dec
xor
jnp
retf
mov
xor
sbb
sub
and
mov
aaa
pop
add
cli
outs
pushf
sbb
jb
fstp
les
ins
out
inc
add
jne
int3
push
mov
in
push
loope
sbb
ffree
mov
jb
cmp
dec
adc
adc
into
addr16
push
shr
mov
mov
lahf
ficom
push
sbb
jne
inc
push
pop
mov
dec
sbb
fs
push
int3
sbb
push
aam
sub
sbb
clc
inc
pushf
int
push
inc
addr16
icebp
push
xchg
fisubr
push
jmp
fld
mov
adc
adc
pushf
jl
or
out
or
(bad)
xor
dec
sub
shr
inc
(bad)
in
xlat
sbb
mov
pop
cmp
mov
imul
imul
int3
movs
ret
shl
push
or
(bad)
xchg
push
jno
mov
iret
mov
outs
xor
mov
dec
repz
jecxz
leave
xchg
out
xchg
retf
movs
fld
call
pop
cmp
cmps
aaa
fidivr
pop
adc
mov
into
test
mov
outs
lea
fimul
aad
ins
mov
mul
mov
mov
mov
xchg
sbb
gs
pop
in
daa
icebp
pop
movs
jo
js
push
loop
xor
(bad)
mov
imul
inc
mov
adc
das
jmp
adc
mov
cmps
movs
fwait
inc
pop
loope
push
pop
inc
sbb
imul
mov
cmp
in
fnstenv
enter
pop
stos
xor
or
pop
ror
in
repz
inc
loopne
(bad)
cli
nop
std
jmp
sbb
sub
sub
movs
int
mov
enter
dec
lods
imul
fidivr
outs
jb
fwait
stc
jne
or
lock
jg
bnd
shl
test
data16
repz
mov
push
inc
(bad)
pop
add
push
dec
es
pop
call
cmp
cmp
xor
mov
mov
ds
sub
test
and
popf
imul
xchg
inc
call
outs
xchg
aas
and
ins
arpl
xor
mov
movs
in
sub
mov
inc
mov
into
jp
pop
(bad)
(bad)
pusha
push
push
dec
dec
rcr
sub
and
xchg
imul
sub
jbe
addr16
mov
pop
xchg
or
das
jbe
daa
push
enter
add
inc
adc
mov
stos
fsub
pop
mov
loop
in
mov
pop
lds
sbb
aad
in
ja
test
and
add
mov
adc
fsubr
or
xor
das
and
jp
mov
shl
movs
xor
icebp
(bad)
sub
ret
mov
(bad)
rol
cmp
mov
icebp
icebp
mul
dec
push
test
je
test
into
xlat
pop
xor
bnd
xor
xor
or
ret
mov
pop
fnstsw
outs
and
xor
mov
fucom
or
cwde
test
sub
repnz
or
or
(bad)
mov
cmp
nop
or
xchg
ins
sbb
ror
push
iret
mov
imul
or
arpl
iret
or
add
in
mov
imul
push
retf
push
pop
stos
or
add
arpl
jmp
inc
shr
xlat
sub
or
cmp
push
call
out
mov
lock
arpl
hlt
cld
mov
in
cmp
aam
dec
ret
inc
ds
iret
pop
loopne
adc
fsubr
into
pop
adc
push
(bad)
jns
sbb
inc
ror
mov
stos
es
adc
call
inc
add
fcomp
rcr
pop
push
jmp
out
sub
push
xchg
(bad)
xor
inc
popa
cmps
xor
in
sub
arpl
(bad)
shr
xchg
and
xchg
jg
mov
cmc
(bad)
ja
adc
inc
xor
add
cmps
gs
mov
movs
xchg
mov
sub
and
loopne
stos
adc
inc
sub
sub
(bad)
jecxz
dec
add
ins
scas
ins
sub
aam
sbb
xor
xchg
(bad)
xlat
cmp
cmp
aas
data16
pusha
aaa
pop
aad
inc
xor
pop
xor
mov
mov
xchg
(bad)
loopne
cdq
fistp
push
push
cs
out
pop
dec
jg
lods
mov
jnp
(bad)
xchg
xor
add
mov
pop
mov
adc
loope
call
pop
dec
sub
cmp
inc
sub
rol
fstp
jl
adc
push
and
xchg
push
xor
sbb
jae
or
pop
psraw
ret
mov
shr
mov
arpl
cdq
cmp
lahf
(bad)
aam
jo
adc
clc
data16
test
aad
addr16
ret
add
xlat
sub
repz
cmp
mov
xchg
cmp
fldcw
sbb
mov
xchg
dec
call
(bad)
or
loop
add
pop
pop
jle
jp
push
sbb
mov
out
dec
js
xor
mov
sti
in
inc
jle
or
sub
xchg
neg
add
loope
jmp
lock
in
adc
cld
and
iret
sbb
ja
mov
(bad)
aas
mov
test
jg
cld
and
out
dec
xor
push
mov
nop
xor
je
jg
(bad)
push
add
cmp
cld
or
adc
sti
not
es
in
and
leave
je
mov
push
sub
outs
xchg
cmp
jecxz
not
mov
push
or
or
lods
das
cli
call
lods
movs
mov
mov
fimul
enter
(bad)
and
cmp
in
cmp
push
fwait
or
dec
test
xchg
mov
ds
(bad)
fucom
jecxz
int3
push
stos
mov
xor
and
lea
cs
xchg
mov
lea
sub
das
cmp
push
stc
mov
shl
mov
shl
(bad)
fsub
xchg
mov
push
in
mov
adc
xor
cmp
xor
jge
xchg
imul
add
rol
jns
das
inc
dec
push
inc
or
scas
sub
aad
xor
mov
into
das
push
call
jne
sbb
movs
fadd
pop
mov
es
jae
out
scas
jp
mov
mov
mov
xchg
push
jns
daa
push
sti
ds
add
inc
xor
jo
jnp
imul
retf
add
cld
and
sub
cmp
fcom
in
and
dec
jecxz
out
aad
xor
cdq
loop
pop
mov
jl
push
mov
out
mov
iret
xchg
fst
fsub
xchg
adc
outs
xor
sub
sbb
add
movs
jge
mov
cmp
loopne
ja
imul
les
xchg
inc
mov
std
pop
add
pop
push
xchg
cmps
les
mov
daa
jp
cmp
cmp
add
sub
dec
jmp
or
das
in
pop
sahf
dec
cdq
and
adc
pop
push
and
rcl
mov
adc
xchg
fs
cmp
xchg
outs
iret
stc
cld
mov
sub
jmp
dec
jbe
push
fdivr
xor
retf
xor
fdiv
mov
cmp
mov
cld
pop
and
cmp
and
jno
pushf
sub
push
add
mov
push
xchg
je
pop
and
inc
cmp
bound
push
jnp
inc
sbb
or
std
xor
sbb
(bad)
sbb
pop
sub
push
cmp
cwde
sbb
mov
ss
call
mov
xchg
xor
stos
jg
or
inc
pusha
inc
fcomi
pop
cs
in
xchg
push
cmps
aas
mov
jecxz
sahf
(bad)
mov
dec
(bad)
in
xor
jg
addr16
ins
adc
ss
jns
cwde
loopne
or
jmp
mov
mov
ret
pushf
scas
sub
mov
push
lahf
inc
and
sub
enter
lods
test
(bad)
cmp
loope
jnp
adc
in
xchg
out
adc
movs
ror
cmp
pop
pusha
inc
mov
test
mov
cmp
popa
dec
mov
dec
jo
inc
mov
nop
retf
sub
jb
dec
xchg
sar
call
fldenv
bswap
sub
and
pop
stos
sub
inc
rcl
in
xlat
in
aaa
xor
jmp
ds
jns
xchg
xchg
pushf
dec
pusha
push
mov
mov
mov
and
cmp
cli
movs
(bad)
ds
xor
jecxz
cmp
and
mov
ret
and
mov
push
mov
jl
mov
jb
push
gs
cmps
xchg
sahf
and
pop
sub
cmp
cs
cli
cdq
test
add
in
add
mov
das
repnz
and
or
jno
out
ja
pushf
sbb
(bad)
out
push
add
inc
add
adc
push
inc
mov
cmp
sub
in
push
lds
xchg
mov
dec
dec
test
jge
shr
sbb
scas
inc
bound
fcom
sub
retf
ret
add
std
pop
push
aam
cmp
gs
loope
call
cmp
pushf
into
stc
add
cmp
call
sahf
push
xchg
lahf
add
mov
xchg
jno
adc
cld
push
fmul
push
inc
adc
(bad)
lds
add
jmp
jb
adc
and
fs
mov
int3
mov
outs
jl
push
ds
jnp
movs
pop
add
hlt
mov
lea
cmp
hlt
jecxz
add
js
iret
(bad)
mov
int
pop
cli
mov
(bad)
add
es
div
ficom
popa
pop
(bad)
jge
jo
or
xchg
jmp
repz
adc
jne
jg
or
popf
add
jns
lds
in
dec
push
movs
out
mov
sub
test
push
cmp
xchg
(bad)
test
scas
xchg
mov
cdq
adc
mov
ds
enter
mov
adc
mov
sub
pop
std
lds
jbe
lods
rcr
popf
mov
xchg
pop
ret
inc
inc
mov
pop
test
enter
xchg
sub
cmp
gs
adc
sub
retf
or
add
enter
fnstenv
cli
lahf
inc
repnz
and
test
jmp
xchg
ds
pop
xor
inc
dec
cs
ja
adc
dec
addr16
popf
pop
pusha
pop
fwait
(bad)
test
(bad)
and
cmps
test
mov
nop
pop
fisubr
pop
mov
mov
dec
arpl
ds
fadd
xchg
pop
pop
fiadd
int3
xor
sub
lds
pop
jmp
pop
push
fldcw
push
mov
sbb
scas
add
mov
or
cld
js
and
cmp
xor
stos
int
in
jbe
and
test
out
in
xor
aaa
pop
xor
cmp
lods
push
into
mov
clc
adc
mov
div
inc
and
add
cmp
cmp
xor
lock
int
call
out
test
pop
popf
int
test
mov
and
ins
jns
push
mov
(bad)
jno
mov
xor
xor
scas
xchg
cmp
(bad)
mov
neg
push
ja
aaa
out
mov
in
adc
call
pop
in
icebp
and
(bad)
adc
jb
arpl
mov
aaa
push
jp
push
cli
(bad)
out
call
inc
push
push
pop
sbb
pop
loope
jl
add
and
xor
stos
fwait
or
loop
push
push
xchg
adc
jecxz
ds
dec
sbb
movs
cmp
jo
push
push
icebp
add
shl
(bad)
inc
or
loope
mov
pop
shl
(bad)
adc
fwait
shr
mov
lds
dec
or
fistp
lods
push
out
adc
sahf
xor
mov
stos
xchg
imul
iret
push
test
cmpxchg
(bad)
fst
sub
adc
mov
adc
dec
mov
adc
mov
ror
(bad)
cmp
add
dec
cli
retf
jbe
jge
xchg
test
mov
pusha
inc
xchg
and
pop
or
push
pop
mov
sbb
movs
gs
call
sub
pop
pop
push
xor
mov
sub
mov
mov
mov
push
icebp
cld
sbb
mov
(bad)
xor
std
mov
jecxz
sbb
fchs
sbb
pop
jmp
push
aam
setp
loopne
ffree
mov
push
loopne
repnz
mov
jmp
out
jb
jecxz
rcr
jne
sbb
adc
stc
pop
clc
pop
pop
lods
jae
sahf
das
add
loopne
adc
xor
cmp
xor
in
(bad)
jb
nop
push
mov
sub
and
ins
fidiv
adc
hlt
push
mov
ret
cmps
int3
inc
push
pusha
ins
jae
or
(bad)
and
enter
jns
out
push
(bad)
imul
mov
outs
clc
mov
cmp
add
fwait
dec
mov
(bad)
std
popa
sub
mov
sti
ret
push
dec
mov
test
arpl
push
and
pushf
popf
cs
popa
cmps
xchg
push
ins
and
cmp
imul
pop
in
jbe
inc
scas
adc
add
dec
push
ret
enter
push
fcmovu
sbb
or
movs
iret
lods
xor
push
mov
mov
add
das
loope
push
xchg
dec
push
adc
sbb
sar
test
jle
pusha
pop
mov
pop
lahf
lods
xor
call
addr16
sahf
push
pop
stc
cs
and
mov
sbb
pusha
mov
clc
test
fstp
inc
iret
xchg
adc
outs
add
mov
es
sub
addr16
es
mov
mov
jnp
nop
xchg
hlt
jmp
mov
call
push
jb
and
outs
jo
gs
pop
xor
aad
add
push
and
ss
push
or
ins
div
in
(bad)
fidivr
ss
mov
icebp
in
icebp
mov
jne
dec
lock
jb
jae
test
add
bound
pop
shl
es
add
mov
ret
(bad)
rol
add
push
push
or
das
call
outs
repz
imul
inc
mov
repnz
(bad)
adc
mov
pop
in
call
adc
jo
dec
imul
sbb
retf
enter
(bad)
fidivr
adc
cli
js
aad
mov
push
push
jle
pop
xor
and
mov
add
scas
rol
mov
pop
leave
pushf
mov
inc
loop
fnsave
and
xchg
inc
jae
retf
sbb
mov
xchg
repz
lods
inc
in
cld
pop
pop
mov
mov
gs
arpl
int3
or
cmps
mov
loop
mov
ficom
fmul
(bad)
fcomi
pop
mov
adc
or
inc
mov
test
ret
lock
mov
xchg
cwde
mov
fisub
int
rcl
sub
push
int
mov
cdq
and
xor
popf
jae
loop
dec
adc
out
out
cmp
jnp
cmovl
pop
jno
stos
ror
int
aas
xor
iret
jo
cmp
cmp
push
push
test
adc
mov
or
push
out
inc
xchg
pop
ret
sbb
cld
dec
inc
xor
and
xchg
add
ret
inc
pop
sahf
jmp
add
sahf
daa
jle
(bad)
pop
xchg
add
xchg
(bad)
int3
enter
cwde
out
mov
test
sub
jno
popf
mov
in
adc
jmp
in
mov
lods
cmp
rcr
loop
test
lock
cmps
mov
or
add
push
movs
mov
inc
mov
add
cmc
movs
xor
mov
push
jns
push
sbb
inc
or
fisubr
fsubp
iret
ror
mov
sbb
jle
fwait
(bad)
jne
mov
mov
sub
aam
push
or
fidiv
pop
shl
adc
adc
xchg
sub
out
and
adc
adc
push
cs
adc
add
lds
cmp
xchg
push
pop
int
pop
pop
or
mov
sbb
lock
aam
sub
and
jg
sbb
and
hlt
mov
dec
popf
fist
mov
in
cmps
xbegin
imul
out
sbb
push
and
cmps
out
jnp
clc
inc
retf
push
adc
movs
fsubr
test
ret
push
fsub
mov
stos
and
(bad)
mov
hlt
fwait
icebp
push
push
inc
add
lods
movs
inc
in
ficom
in
cs
outs
add
and
pop
icebp
mov
test
or
mov
sub
mov
add
lsl
cs
leave
xchg
fbstp
popa
ins
in
jb
or
push
fiadd
cld
cs
add
sub
sbb
xchg
dec
and
push
pop
xchg
popa
jnp
and
cs
jno
or
(bad)
xor
mov
fisubr
and
clc
xchg
xchg
out
(bad)
cli
dec
pop
inc
popf
lods
and
xor
les
mov
push
movs
aad
mov
cli
neg
cmp
out
sar
mov
push
shl
push
push
mov
addr16
jbe
adc
ss
xor
pusha
pop
arpl
ja
hlt
arpl
repz
lds
dec
sbb
pusha
ins
add
mov
pop
sbb
or
stc
inc
shl
xchg
dec
sub
mov
aad
push
pop
iret
js
movs
rol
in
cdq
inc
and
xchg
adc
js
xlat
push
ins
jg
adc
sub
or
add
imul
push
xchg
mov
inc
and
xor
jg
pop
sbb
pop
cmp
adc
sti
mov
fst
in
mov
in
movs
or
mov
ins
ja
ja
sub
fwait
es
cdq
push
sub
mov
inc
mov
xchg
rcl
rcl
out
mov
add
or
xlat
adc
ins
add
push
xchg
cmp
lds
add
out
or
movs
mov
aam
cmp
pop
adc
mov
pop
cmp
repz
imul
ins
mov
fcomp
xor
cmp
sub
sub
jg
xor
fwait
sub
xor
mov
jmp
mov
data16
and
retf
mov
aam
retf
pop
jns
jg
popa
adc
mov
(bad)
int
enter
jb
enter
mov
cmp
xchg
xchg
dec
sub
in
sbb
lds
ss
inc
xchg
push
cwde
mov
int
popf
mov
retf
jbe
jmp
pop
and
call
jle
imul
push
in
or
mov
jo
stos
mov
jns
ins
xchg
pop
das
xchg
aas
cli
call
mov
rol
add
loop
stos
dec
dec
in
stc
jnp
(bad)
or
outs
imul
test
and
popa
sub
mov
sbb
dec
dec
imul
lds
dec
mov
loope
cmp
int
inc
xchg
shl
push
fs
retf
sbb
jp
fisub
in
cmp
pop
data16
mov
test
(bad)
pop
add
adc
es
pop
in
aas
and
or
mov
xor
hlt
popf
pusha
out
push
pop
rol
push
aad
sub
mov
lock
cwde
xchg
inc
or
push
scas
loop
fs
(bad)
pop
in
add
icebp
push
and
imul
xor
jo
adc
hlt
popa
movs
mov
mov
aam
mov
add
add
ss
and
xor
and
xlat
jb
ret
cwde
add
hlt
mov
hlt
enter
lahf
popf
mov
fnstenv
cli
(bad)
test
rcr
popa
in
or
clc
test
jne
xchg
mov
cmps
mov
xor
ds
push
dec
push
xor
pop
push
arpl
test
inc
daa
in
loopne
jb
sbb
and
lahf
call
push
lds
call
out
popf
inc
and
fdivr
and
or
inc
retf
test
pop
xchg
push
pushf
mov
mov
adc
sub
and
scas
add
fidiv
sub
jb
mov
mov
imul
repnz
xor
ds
pop
scas
add
or
adc
test
int
push
xor
icebp
pop
stc
(bad)
xchg
inc
push
aam
in
adc
sub
popa
add
jo
mov
in
mov
jl
pusha
outs
or
xchg
jge
leave
pop
pop
xor
daa
sbb
cmp
push
or
cmp
stos
mov
xor
cmp
mov
loop
pop
loope
mov
push
data16
adc
out
jmp
inc
mov
(bad)
neg
push
add
jp
repz
dec
cmp
cld
sbb
mul
into
retf
mov
(bad)
enter
jno
and
lock
push
mov
dec
push
add
cmp
push
movs
and
and
pop
mov
dec
imul
mov
out
movs
inc
ins
mov
cwde
(bad)
bound
arpl
add
stos
test
xlat
dec
movs
xchg
pop
repz
shl
ret
cmp
lds
dec
xor
and
sbb
test
cmp
(bad)
xor
adc
loopne
mov
lds
dec
imul
push
cmp
std
sti
push
sar
stc
mov
icebp
ins
enter
repnz
out
jno
dec
test
fst
xchg
mov
mov
mov
mov
dec
(bad)
cmps
xor
inc
pushf
cld
jae
jno
mov
imul
sub
cld
adc
sub
push
cli
stos
xor
adc
outs
push
jle
mov
out
in
mov
push
test
mov
and
xchg
or
jae
xor
adc
retf
jl
mov
out
sbb
in
call
cmp
cmp
sahf
xor
in
add
cmp
add
loop
cmp
sar
sahf
test
mov
push
retf
jnp
fs
popa
xchg
shr
jle
and
xor
jb
int
push
je
mov
stos
daa
jb
clc
jo
addr16
call
inc
dec
in
dec
pushw
push
pop
cmp
add
aam
clc
sub
and
pop
cmp
add
or
pop
cmp
sti
cmp
xor
mov
mov
jecxz
movs
cwde
cmp
ins
clc
mov
jmp
mov
xchg
jg
sub
sub
inc
mov
pop
adc
in
retf
inc
inc
repz
and
inc
aaa
dec
mov
enter
inc
ror
(bad)
push
cld
in
xchg
aaa
in
ret
dec
sub
int3
lahf
dec
push
cmp
xchg
pop
jno
out
fdiv
dec
xchg
cwde
retf
jl
push
pop
jle
push
add
shl
sti
scas
fist
stos
lock
test
pop
stc
popf
sub
sahf
(bad)
addr16
cwde
sbb
je
and
movsx
mov
pop
imul
test
bound
cs
sti
jb
stos
mov
cmp
dec
bnd
push
sub
es
cmps
repz
add
sub
in
ret
rcl
xchg
loop
mov
xor
ficom
(bad)
loopne
stos
or
out
push
and
sbb
and
jmp
out
and
xchg
aas
popa
xchg
xchg
sbb
fs
sbb
pop
xor
addr16
in
loope
sbb
sbb
xchg
sbb
sbb
lock
repnz
imul
pop
std
jle
jle
xchg
xor
push
(bad)
dec
jne
loop
pusha
mov
inc
xchg
nop
test
push
sbb
lahf
aas
stos
push
dec
gs
dec
cmp
and
jecxz
es
mov
mov
jbe
test
in
(bad)
popa
lea
cld
test
cwde
adc
inc
and
rcr
push
inc
jb
cmc
pminub
xchg
xor
imul
pop
movs
test
pop
cmp
jle
mov
xchg
lock
hlt
and
je
aad
cli
xor
sbb
(bad)
mov
sub
icebp
xchg
adc
shl
mov
fisttp
scas
ja
cmc
mov
movs
test
ins
dec
pushf
mov
clc
popa
xor
jmp
ins
into
xchg
fistp
(bad)
shl
cmp
sub
pop
hlt
imul
iret
mov
call
movs
fwait
jecxz
enter
add
add
mov
lds
xadd
adc
add
cmp
lods
dec
xor
jecxz
mov
icebp
aad
aad
movs
push
inc
adc
push
adc
repnz
xchg
jl
xor
cmp
dec
sub
imul
push
xchg
out
ret
leave
outs
adc
push
call
cmp
cdq
inc
xchg
stc
dec
xchg
or
push
xor
cmp
scas
jo
inc
pop
pushf
(bad)
mov
mov
cld
test
cwde
cmp
mov
stos
out
inc
dec
inc
mov
hlt
jo
(bad)
test
mov
dec
psadbw
es
or
ja
into
mov
in
cmp
sti
fild
push
inc
aas
jp
adc
cmps
cli
int
and
mov
leave
jb
lock
add
in
jbe
je
adc
fimul
icebp
push
ds
into
rcr
pop
push
and
test
push
xor
cmc
jl
lea
mov
pop
ret
and
xchg
pop
xor
retf
mov
repnz
repnz
int3
lea
mov
sub
seto
mov
js
mov
inc
pop
jl
sbb
cmp
aas
test
jg
pop
std
or
pop
nop
(bad)
jmp
aaa
shl
mov
or
mov
add
xchg
add
cdq
and
mov
jns
fcmovne
sub
mov
or
mov
and
(bad)
mov
dec
add
imul
xlat
and
add
test
mov
pop
cmps
mov
xchg
mov
test
push
dec
leave
cmp
xor
aas
pop
sbb
aas
pop
jne
mov
ds
(bad)
xor
mov
shr
mov
ret
push
scas
jle
inc
fimul
lock
xchg
fistp
xor
out
add
cmp
mov
jnp
xchg
mov
jbe
mov
lock
mov
dec
sahf
imul
cld
pop
mov
xlat
mov
cmp
loope
hlt
idiv
cs
outs
inc
repz
push
adc
pop
imul
sub
push
(bad)
jg
cs
cwde
nop
jecxz
xchg
mov
jmp
fs
hlt
push
fbstp
je
icebp
sub
icebp
dec
mov
jl
jbe
jno
pop
sbb
gs
inc
inc
xor
adc
repz
xchg
test
adc
shl
retf
cdq
xor
test
or
xor
or
int
(bad)
and
push
xor
sbb
arpl
test
pop
lahf
jle
test
push
sbb
inc
jb
pop
mov
and
(bad)
jmp
sbb
dec
push
fucomp
stos
repz
sub
adc
out
jle
and
gs
add
(bad)
fwait
out
mov
pop
pop
neg
push
das
mov
mov
sbb
sbb
dec
mov
(bad)
cmp
retf
xor
xchg
mov
repz
add
int
stos
mov
(bad)
lock
inc
inc
sbb
ins
sbb
add
jmp
mov
inc
stos
adc
pop
and
(bad)
dec
js
sbb
cli
add
add
bound
jecxz
or
adc
push
aam
mov
mov
add
jp
repnz
or
and
add
fsub
push
pop
stos
add
adc
and
add
mov
mov
xchg
jg
sbb
pop
mov
push
inc
push
mov
mov
lods
outs
loope
adc
in
rcl
fndisi(8087
adc
cmps
sub
pop
sbb
pop
xlat
les
cmp
or
dec
dec
sub
sub
data16
(bad)
adc
jno
gs
jnp
push
dec
les
sbb
lds
mov
sbb
std
adc
mov
cmovl
(bad)
jmp
xor
leave
mov
xchg
xchg
(bad)
outs
popf
or
inc
cmc
dec
js
pop
xor
jno
jmp
ss
(bad)
mov
sti
mov
and
leave
stc
imul
cmp
sub
mov
jp
cmp
inc
in
pop
pushf
sbb
loop
or
fnstcw
outs
dec
and
pusha
dec
aaa
mov
pop
stos
lods
lds
sti
popa
outs
adc
repnz
ret
cmp
(bad)
mov
scas
fild
ss
and
xchg
sub
data16
cmp
xor
xchg
into
loop
jbe
stos
ret
xchg
test
xlat
lahf
test
inc
vunpckhpd
mov
int
xchg
std
inc
stos
sbb
(bad)
adc
(bad)
mov
jl
push
nop
sbb
or
fwait
inc
sti
inc
bound
(bad)
(bad)
imul
fwait
inc
pop
cmp
fs
in
dec
aam
sahf
adc
push
jg
dec
data16
add
iret
sbb
(bad)
push
and
push
js
out
lock
mov
setns
push
inc
fs
or
imul
mov
pop
or
ins
js
push
jb
jp
out
push
ds
mov
dec
xor
shl
cmc
outs
jecxz
xor
adc
mov
scas
in
jle
add
sti
and
sahf
mov
inc
aam
mov
dec
and
pop
in
int
outs
adc
sub
mov
ret
mov
hlt
push
ins
rcr
enter
cmp
das
mov
pusha
push
or
lahf
inc
inc
mov
clc
jmp
movs
(bad)
jecxz
sbb
sbb
in
clc
mov
movs
jg
mov
xchg
adc
mov
xor
pop
mov
ds
cmc
push
in
push
push
or
xchg
stos
pop
cli
or
mov
sbb
and
hlt
icebp
sbb
stos
addr16
or
xchg
ret
outs
arpl
mov
mov
add
or
push
pop
loop
in
mov
and
add
push
stc
mov
sbb
ins
inc
cmp
xchg
dec
and
daa
mov
xchg
inc
outs
daa
mov
adc
inc
icebp
cwde
lods
dec
test
and
(bad)
test
sar
sub
das
(bad)
les
cmp
shl
pop
cmps
mov
gs
or
(bad)
jbe
mov
cmps
push
cmp
adc
xor
xlat
hlt
add
inc
and
mov
dec
mov
inc
xchg
mov
mov
inc
sub
pop
pop
bound
push
stos
adc
mov
call
jbe
xchg
mov
lds
jp
in
jge
push
stos
pusha
(bad)
movs
lds
xor
les
(bad)
sub
mov
sti
push
mov
ret
adc
xor
pop
je
fwait
sbb
cmp
fucomip
add
je
mov
dec
pop
neg
xor
sbb
iret
stos
pop
push
xor
sbb
inc
dec
aam
stc
xor
mov
int3
sbb
pop
sub
not
rol
jno
sub
xor
lds
ffree
pop
pop
and
(bad)
mov
fiadd
pop
pop
sub
mov
out
jmp
jo
jle
mov
xchg
add
xchg
push
add
pop
push
mov
mov
jg
stc
sbb
sub
dec
jo
or
push
add
push
xlat
bound
xor
and
xchg
pushf
sbb
arpl
retf
pop
push
xor
xchg
shl
(bad)
out
xchg
push
mov
dec
daa
mov
(bad)
stos
nop
mov
cmp
call
aaa
push
in
loopne
xor
rol
xor
arpl
and
dec
ds
out
call
jmp
mov
jo
or
lods
xor
imul
xor
pop
out
sbb
jmp
clc
mov
leave
xchg
outs
arpl
xchg
ror
or
jmp
clc
dec
xchg
and
je
dec
sti
jne
mov
jb
psrld
in
ja
(bad)
outs
xor
cli
fs
(bad)
ret
or
add
out
addr16
dec
dec
por
rol
push
xchg
mov
sub
fstp
lea
aad
rol
cmp
aam
aad
and
push
cdq
and
jmp
cmp
cli
std
les
inc
add
dec
neg
and
aaa
pop
add
xchg
out
adc
sub
js
outs
lock
rol
mov
stos
jns
ffreep
xor
das
cmps
pusha
sub
push
add
in
or
inc
inc
xlat
xor
sub
mov
mov
call
xchg
and
xchg
(bad)
inc
dec
mov
pop
mov
inc
lahf
dec
sbb
inc
movs
jle
mul
outs
(bad)
mov
inc
dec
pop
mov
cmp
clc
lods
std
xchg
hlt
inc
adc
bound
or
mov
xchg
mov
cmp
dec
fcomp
std
mov
mov
jno
cmps
xchg
xor
popa
xor
mov
push
and
(bad)
mov
mov
pop
addr16
mov
jle
jns
add
mov
jmp
lds
pop
push
or
lds
xchg
retf
jle
or
retf
out
(bad)
sbb
je
outs
sahf
jmp
cmp
xchg
jmp
cmp
push
jmp
adc
mov
enter
fdivr
mov
pop
test
mov
in
lock
push
xor
sbb
push
jbe
mov
shl
aad
sub
aas
(bad)
hlt
mov
adc
jb
scas
push
data16
mov
xor
mov
add
xchg
ret
loopne
mov
and
and
pop
jle
add
sub
mov
in
jno
xor
and
cmp
mov
mov
gs
aaa
das
fidiv
pop
cmp
jl
dec
or
jb
mov
sub
and
(bad)
mov
test
mov
mov
cmp
pop
mov
cli
test
div
or
cmp
pushf
ja
jl
jns
fisubr
pop
push
je
pop
push
gs
loope
inc
test
cmps
vmwrite
ret
shr
shl
mov
mov
sbb
scas
test
retf
sbb
dec
ja
test
jns
mov
test
jbe
cmp
mov
and
cs
jns
dec
inc
xchg
fdiv
loope
and
nop
xor
xchg
scas
jmp
and
sbb
out
jbe
imul
mov
inc
push
inc
mov
inc
fisubr
stos
sbb
xchg
mov
fisttp
pop
add
xor
fist
aad
cmp
xlat
fcmovbe
mov
pop
in
ja
stos
aam
pop
movs
not
sub
int
mov
inc
mov
cmp
int3
outs
adc
scas
mov
popf
arpl
xlat
pop
or
dec
movs
xchg
call
outs
mov
lods
jge
cmc
popf
out
retf
js
and
addr16
inc
mov
pop
jmp
not
test
mov
mov
es
shl
dec
lds
rol
ret
add
sub
fdivr
and
push
mov
ret
cwde
mov
or
push
retf
leave
jbe
in
leave
push
push
sbb
mov
push
fsubp
or
cs
lds
idiv
leave
sti
aad
gs
jmp
add
dec
ds
nop
aad
ror
das
sub
stos
loop
aas
jecxz
xchg
test
cmc
pop
add
jle
xchg
adc
add
push
scas
adc
sub
sub
mov
(bad)
xchg
lock
push
inc
xchg
add
mov
sti
mov
inc
mov
out
sahf
cmp
and
add
jne
std
(bad)
repz
retf
jbe
inc
mov
adc
mov
(bad)
popf
add
cmp
fwait
jo
popa
cmp
inc
xlat
jo
cwde
pop
xchg
or
retf
mov
pop
icebp
retf
mov
aas
jmp
push
cwde
sbb
sbb
out
pusha
repnz
mov
in
sub
in
retf
inc
adc
cld
and
dec
lea
(bad)
lods
in
pushf
mov
stos
loop
jbe
movs
dec
jl
adc
call
jne
mov
mov
je
inc
ds
fcmovnb
in
jae
call
push
jno
adc
in
mov
jge
pusha
mov
jns
xor
aad
mov
enter
bound
or
imul
push
cmp
cmp
int3
mov
adc
fisubr
retf
ror
aas
ret
pop
into
outs
lahf
push
jp
or
ret
mov
jle
jne
out
mov
imul
inc
repz
pop
clc
ret
xchg
test
jno
and
fld
movs
addr16
call
cmps
jl
mov
mov
aaa
adc
rol
mov
ss
or
je
fisttp
rol
add
pop
dec
in
mov
imul
dec
lock
out
stos
sub
push
inc
pop
push
cmp
stc
jp
(bad)
cli
mov
jbe
cmp
ja
sahf
add
mov
movs
add
mov
jge
cli
frstor
cmp
pop
ins
mov
(bad)
mov
fstp
dec
lea
aad
and
inc
popf
push
scas
pop
popf
in
mov
retf
mov
jb
(bad)
sub
and
push
cmps
and
pop
ins
stc
xchg
dec
add
out
and
xchg
xchg
stos
test
sbb
scas
es
stc
jmp
xor
mov
or
xchg
push
add
xor
push
add
shl
(bad)
clc
jmp
clc
inc
aaa
cmps
push
add
jl
test
ins
ja
push
sar
jae
cmps
retf
pop
sbb
cmc
frstor
fcom
dec
cmps
xor
lea
adc
and
fcomp
loop
jp
jl
dec
pop
sbb
inc
fsubr
cwde
add
jbe
(bad)
outs
int3
out
sbb
in
dec
mov
xchg
and
jle
scas
inc
inc
dec
js
cli
inc
push
test
icebp
or
iret
or
mov
jns
cmp
gs
adc
push
retf
cmpps
pop
dec
xlat
jp
push
das
neg
sub
or
in
mov
cld
aad
cmps
dec
adc
or
and
ins
add
scas
ins
(bad)
add
fidiv
clc
pop
daa
push
stos
sbb
shr
mov
inc
dec
xchg
popf
mov
fisub
scas
xor
cld
push
mov
pushf
call
aam
repnz
xchg
pop
ficomp
cmp
mov
xchg
mov
pop
mov
dec
lods
jnp
ror
shl
xchg
retf
sbb
pop
icebp
out
jle
shl
sar
je
cli
aas
mov
pusha
mov
pop
cmp
jbe
mov
aas
movs
cmc
imul
fcomp
lds
sbb
push
mov
push
xchg
and
movs
mov
sub
pop
fild
add
je
pop
pop
add
or
ret
add
sbb
imul
leave
push
retf
fisub
jnp
clc
xchg
repnz
cwde
adc
movs
pop
jecxz
mov
out
loope
mov
mov
adc
or
imul
mov
sub
mov
aas
addr16
adc
cmp
mov
imul
mov
addr16
mov
mov
mov
mov
cmp
jg
pop
adc
shr
je
retf
mov
push
push
pop
mov
cmps
stos
data16
out
outs
out
or
in
pop
xchg
xchg
or
ins
dec
xlat
dec
add
js
lea
aad
das
retf
jno
pop
cs
fiadd
test
inc
out
push
imul
jne
push
fcom
push
in
xor
and
sti
dec
ja
adc
cld
jge
aam
jl
dec
mov
(bad)
imul
jmp
jle
and
inc
mov
outs
leave
add
adc
and
mov
push
jnp
mov
imul
adc
das
(bad)
arpl
js
lods
mov
pusha
dec
adc
sub
sbb
es
jle
daa
cli
dec
out
dec
mov
cmp
jne
bound
enter
add
push
sbb
push
adc
movs
mov
gs
cmp
dec
and
sti
pusha
stos
stos
dec
mov
jb
rol
pushf
or
push
lahf
rol
aaa
pop
data16
pop
mov
lahf
dec
xchg
jecxz
xor
xchg
inc
mov
sbb
xchg
pop
iret
sbb
out
mov
sar
repz
add
mov
ret
pop
loope
cmp
addr16
jbe
jbe
in
movs
movs
(bad)
out
sbb
and
pushf
jo
jnp
test
xor
das
push
dec
xor
dec
jl
jo
jl
pusha
out
sub
mov
loopne
add
add
gs
retf
in
addr16
jle
cmps
mov
push
mov
xchg
xor
xchg
fsubrp
pop
inc
and
inc
movs
push
stos
and
out
out
sti
fistp
bound
mov
out
lea
xchg
add
dec
or
out
xchg
sbb
retf
add
xlat
ds
test
push
push
test
inc
mov
test
(bad)
data16
stos
jmp
jno
dec
add
adc
dec
adc
pop
xor
pop
aas
pushf
xor
pusha
ret
push
xchg
out
push
data16
(bad)
iret
sar
sub
outs
stos
cwde
inc
mov
jbe
mov
push
mov
jp
ret
adc
push
mov
jb
add
std
sub
dec
div
pushf
test
xchg
dec
xor
and
hlt
mov
scas
test
jg
hlt
aaa
and
dec
xchg
mov
inc
sbb
inc
jl
in
loope
push
pop
mov
jmp
push
(bad)
dec
outs
sub
call
pop
dec
add
inc
outs
hlt
popf
and
mov
mov
add
dec
popa
mov
ret
jmp
xchg
xor
cmp
cmp
mov
shl
pop
or
cwde
out
sub
jge
and
(bad)
ins
mov
aas
repz
inc
inc
sbb
add
test
adc
ins
inc
ret
inc
sti
js
pop
add
sub
sbb
pop
arpl
je
jge
or
test
daa
pop
neg
jns
test
or
pop
hlt
adc
retf
or
mov
ins
nop
cmp
fiadd
test
pop
mov
mov
dec
in
pop
ds
adc
xchg
sub
jp
sub
jb
into
cmc
xchg
aas
lds
sbb
loop
ret
dec
lods
cld
imul
jle
dec
stos
mov
aam
cs
mov
js
add
psubsw
fimul
mov
pop
push
rol
cmp
xor
shr
and
mov
leave
push
ret
loope
push
(bad)
dec
lods
lods
dec
or
or
int3
push
in
and
add
bound
adc
iret
pop
mov
add
cli
movs
adc
jo
jno
aam
rcr
lea
dec
fs
mov
pop
nop
jbe
and
aam
fisub
mov
mov
add
mov
jge
jne
or
xchg
mov
xor
sahf
cwde
sbb
test
fidivr
xchg
mov
outs
push
xor
cmp
ror
int3
fcmovnbe
xor
out
or
mov
ds
fsub
sbb
pusha
out
cmp
dec
sub
mov
int
retf
xchg
fnstcw
add
cmps
mov
xor
cmp
adc
cdq
mov
jmp
jecxz
dec
pop
or
mov
pop
cmp
ror
add
or
sub
xchg
push
mov
mov
jne
pop
sbb
sub
mov
out
dec
fisub
mov
lahf
adc
sub
or
xor
and
lods
push
or
mov
icebp
bound
xchg
inc
stos
aad
imul
jmp
xor
push
test
sub
das
dec
test
jmp
sbb
push
add
dec
retf
in
jae
loope
xchg
imul
fucom
sbb
leave
jne
in
mov
xchg
neg
pop
in
pop
mov
sbb
jl
sbb
xchg
lock
sub
aam
ja
sub
sub
out
mov
repz
arpl
xchg
jae
stos
leave
aam
push
ds
add
mov
sub
aad
int3
push
pusha
push
test
cwde
cs
jo
inc
pop
iret
pop
mov
fdivr
add
mov
or
popa
and
icebp
cmp
sbb
mov
cmp
jnp
je
jno
mov
test
and
adc
jae
jmp
jmp
push
add
pop
xchg
sub
ffree
mov
les
aaa
ins
scas
fwait
mov
adc
lds
sbb
loope
mov
xor
or
xor
lea
mov
cmp
test
leave
pop
lock
inc
jmp
iret
pop
sub
pmaddwd
bnd
mov
mov
jg
add
enter
hlt
sahf
xchg
xor
pop
dec
hlt
cmc
and
leave
jno
sub
xor
pop
inc
dec
movs
inc
loop
shl
xor
test
in
test
popa
jbe
xchg
inc
or
dec
mov
outs
pop
mov
sub
std
mov
mov
iret
dec
xchg
add
push
pusha
fwait
mov
dec
mov
into
pop
push
jp
mov
int3
inc
fwait
sub
push
cmps
jmp
sub
jo
pop
dec
outs
or
inc
push
mov
pop
in
cmp
lea
sahf
dec
(bad)
or
sbb
or
js
int3
pop
cmp
mov
retf
inc
dec
in
cld
jp
xchg
and
fild
sbb
cdq
sti
lds
pop
xchg
ins
pop
jnp
xchg
lods
mov
sti
addr16
out
hlt
lea
xchg
jmp
les
mov
rcr
(bad)
mov
lods
mov
dec
fist
push
aad
nop
(bad)
or
mov
sub
jne
mov
jbe
fwait
xor
outs
cmp
sub
loopne
repz
jge
js
lea
sbb
xchg
shl
ror
dec
adc
retf
cmp
xchg
mov
test
or
call
push
mov
jge
xor
push
jle
mov
and
dec
das
(bad)
out
imul
loope
adc
lods
inc
cli
adc
pop
jnp
xchg
add
push
mov
je
jo
mov
jecxz
push
xor
imul
dec
dec
mov
inc
mov
aam
arpl
and
cwde
outs
dec
lods
or
xchg
rol
sub
sub
ins
push
scas
and
xchg
xlat
fwait
jns
cs
jmp
loope
mov
add
add
test
sbb
lea
test
add
fcmovb
push
mov
cmp
and
(bad)
or
fcmovnb
ss
sub
xor
dec
jmp
sar
ret
(bad)
mov
xchg
retf
jo
dec
jle
imul
scas
data16
dec
or
call
fnstenv
cmps
xor
fdivr
add
int3
inc
xchg
fiadd
xor
ror
dec
push
pop
loope
and
mov
inc
adc
push
pop
sbb
lea
mov
cmp
pop
cmps
int3
push
jecxz
ins
cwde
cmc
xor
mov
sbb
out
aaa
pop
pusha
test
inc
mov
xor
out
in
fld
dec
out
in
ins
call
in
retf
mov
cmps
lds
fstp
inc
xchg
int3
xor
stos
mov
inc
mov
imul
mov
ret
xchg
inc
and
(bad)
mov
jne
sub
or
push
dec
push
ja
or
inc
cmp
sub
ret
imul
fs
inc
clc
imul
int
test
inc
push
inc
scas
pop
or
add
dec
out
sti
sbb
daa
push
out
mov
adc
xor
xor
mov
addr16
pushf
inc
cmp
pop
iret
mov
loopne
mov
xchg
mov
test
jle
mov
push
fdivr
js
test
xor
call
mov
jg
imul
push
outs
inc
push
push
jecxz
ins
aaa
jbe
test
scas
jmp
cmp
aas
dec
jbe
popf
pop
retf
ja
clc
data16
loopne
fs
out
mov
gs
cmp
div
mov
dec
lock
and
test
fs
dec
xchg
mov
pop
fwait
test
adc
lahf
jne
ret
sti
pushf
cmps
das
ds
(bad)
sub
dec
inc
or
ins
out
mov
(bad)
pop
xchg
test
jle
mov
add
jp
mov
scas
data16
in
repz
out
nop
jp
jecxz
mov
jo
sbb
push
shl
push
mov
aad
inc
xchg
sub
data16
adc
mov
adc
enter
retf
push
xchg
xor
cmps
xor
jo
mov
dec
in
gs
addr16
pop
inc
ret
pop
je
jbe
cld
push
mov
outs
add
mov
xor
in
mov
mov
cs
mov
xor
add
push
retf
lahf
loope
lock
aas
adc
lock
stos
pop
dec
pop
lods
and
jg
push
imul
push
shr
ret
retf
push
jg
mov
cmp
pop
sub
dec
out
pusha
dec
es
jl
std
and
jae
aaa
mov
(bad)
sbb
and
push
or
pop
add
fidiv
nop
sar
jecxz
push
xchg
jns
dec
or
cmps
add
movs
pop
je
pop
fistp
iret
add
xor
sbb
fldenv
mov
gs
cmp
push
fsubr
lods
jg
sub
cmp
ret
mov
je
xor
push
xchg
jle
in
cmp
mov
call
fwait
pop
int3
out
jo
and
adc
adc
push
push
cmc
adc
and
lods
mov
add
pop
push
inc
jmp
loope
mov
arpl
push
push
mov
enter
imul
adc
mov
(bad)
mov
loopne
add
pop
dec
cmps
pushf
mov
jnp
sbb
jae
xchg
push
mov
xchg
xchg
rol
dec
fisub
pusha
push
pushf
rcl
sbb
mov
sahf
xor
cli
or
pop
pop
idiv
push
test
jecxz
cdq
xor
retf
jbe
clc
out
xchg
ret
(bad)
scas
imul
test
jo
inc
fist
push
out
jne
or
cdq
js
dec
sahf
mov
out
add
jns
outs
ds
test
mov
jmp
mov
jecxz
mov
mov
jmp
jg
cmp
add
cmps
sbb
inc
push
pop
fcmovnbe
xchg
fsubr
fwait
(bad)
push
pop
or
cmp
cwde
push
neg
inc
mov
jb
push
dec
scas
pop
lds
retf
cmp
dec
xchg
jl
repnz
div
bound
in
loopne
mov
adc
xor
add
or
push
aam
shl
push
gs
sub
into
push
call
jle
jno
cmp
stc
adc
mov
and
aam
aad
je
mov
cld
xor
ss
or
push
dec
add
lea
add
xchg
mov
pop
std
aam
or
mov
mov
cmp
xor
test
inc
out
pop
push
neg
xor
jg
xchg
cmp
xchg
and
mov
loope
fs
call
push
jno
mov
sbb
bound
dec
cwde
(bad)
jmp
mov
fcomp
adc
jo
outs
test
pop
fldcw
fsubr
jl
and
mov
movs
sbb
movs
ror
(bad)
hlt
(bad)
adc
ret
add
jg
mov
xor
ret
dec
cs
retf
pop
gs
cwde
mov
fsubr
in
push
mov
int3
pop
imul
inc
fbld
pop
mov
repz
out
stos
jno
lds
sbb
mov
std
js
pop
sbb
pop
push
pushf
test
jbe
ficomp
and
pop
jbe
mov
push
inc
xchg
enter
xor
pop
lea
cmp
sbb
push
jns
(bad)
js
adc
mov
adc
cmp
addr16
ds
lods
pop
push
(bad)
int3
or
lods
jae
cs
hlt
cmp
or
(bad)
mov
cmp
aad
loop
or
ins
arpl
xor
mov
xchg
test
rcl
push
rcr
popf
inc
fcmovnb
shl
daa
call
(bad)
fs
cmp
cld
pop
inc
pop
(bad)
adc
hlt
stos
ret
push
loope
int3
pop
and
daa
shl
cmp
and
and
sub
bound
pushf
add
lahf
sub
add
loope
mov
push
mov
fsubr
mov
push
pushf
add
pop
jns
aad
mov
and
xor
push
sub
adc
(bad)
test
scas
push
jmp
inc
std
(bad)
popf
(bad)
push
jp
mov
sub
stos
cwde
adc
out
jp
jmp
xchg
push
xchg
xchg
in
mov
test
div
sub
inc
out
mov
mov
jp
fstp
inc
fsubr
xor
pop
sbb
(bad)
rcr
cld
in
pop
push
and
and
mov
sti
pop
add
push
fistp
cmp
mov
cmp
add
add
ret
call
add
scas
adc
xor
xor
add
mov
test
inc
cmps
mov
pop
jnp
loop
popa
(bad)
xor
cs
pop
(bad)
ins
std
jg
xchg
and
dec
sub
pop
and
pop
ins
ja
aaa
push
sub
cld
sbb
imul
pushf
mov
icebp
adc
pop
jmp
cmp
sbb
push
mov
rcl
push
inc
sbb
mov
inc
sar
loop
outs
mov
push
movs
inc
xor
sbb
sub
dec
jae
cmp
mov
or
loope
sti
stc
and
rol
pop
adc
add
inc
or
ficom
retf
std
dec
das
js
jg
cmp
(bad)
call
pop
popa
and
xchg
sub
pop
mov
jnp
mov
nop
nop
loope
repz
push
jg
adc
adc
in
lock
mov
lds
sub
sahf
sbb
mov
jmp
add
in
pop
adc
cdq
add
ins
xor
bound
and
mov
mov
inc
lods
or
or
ds
test
std
daa
fld
cmp
mov
shl
and
cmp
fist
stos
pop
popf
cmps
pop
loope
mov
cmp
mov
ins
jb
out
shl
dec
lods
addr16
stos
push
add
loopne
push
js
dec
pop
mov
data16
pavgb
jno
xchg
lea
xor
pop
add
pop
push
loop
rcl
mov
ins
cmp
add
rol
lods
sbb
repz
call
pop
inc
retf
inc
jmp
lock
pop
cmp
leave
or
and
nop
dec
stos
fst
ret
aam
sub
add
add
rdpmc
std
icebp
cmp
push
pusha
scas
xor
jnp
xchg
push
push
xchg
mov
adc
loope
repz
loope
add
inc
cs
or
retf
call
mov
mov
scas
rcl
(bad)
stc
cmp
(bad)
scas
repz
and
fisubr
cmp
pop
add
dec
jmp
sub
aam
scas
popf
pop
ret
mov
data16
dec
xchg
inc
push
fcmovnbe
xchg
cmps
xchg
pop
lods
jmp
mov
lods
in
(bad)
inc
(bad)
shl
les
jb
jbe
in
mov
inc
fadd
fidivr
cld
dec
push
adc
loope
sbb
dec
js
xchg
mov
pop
jl
xor
mov
clc
xchg
push
and
pusha
mov
psraw
lds
and
or
jecxz
arpl
scas
xor
lods
fdiv
mov
sbb
add
scas
test
movs
popf
push
rcr
dec
jmp
jg
leave
test
sti
les
loope
inc
or
pop
out
push
ror
es
mov
ja
dec
add
fdivr
addr16
hlt
xlat
aam
pop
(bad)
and
mov
in
mov
inc
fwait
out
lea
mov
(bad)
sub
lods
adc
xchg
add
push
push
dec
or
dec
das
pusha
jle
nop
push
mov
or
pop
shr
mov
outs
dec
jne
cmp
mov
out
jecxz
fld
push
mov
mov
sub
mov
pop
mov
leave
(bad)
pop
fsub
int3
aaa
pop
xchg
pop
xlat
rcr
lea
pop
dec
and
data16
xchg
sbb
adc
jmp
shl
inc
jns
mov
sbb
add
add
lds
jg
scas
sbb
xor
fldenv
xchg
cmp
add
pop
rcr
xchg
js
push
sbb
iret
test
jns
sub
test
lock
mov
or
retf
xchg
imul
jne
out
lods
aaa
jg
ret
sahf
dec
sub
xchg
sub
pop
inc
mov
sahf
inc
jnp
push
jne
repz
(bad)
xchg
push
adc
jmp
jns
cmp
and
lods
mov
mov
or
inc
pop
mov
sub
pop
jbe
inc
sub
sbb
sbb
(bad)
or
cmps
cmps
fst
dec
pop
or
in
mov
ret
fwait
stos
jmp
in
out
dec
xchg
(bad)
lods
in
rcl
and
stc
jge
pop
clc
loop
add
fsincos
fnstsw
loope
and
repnz
out
cdq
popa
jge
xchg
test
popa
or
jp
dec
loope
and
shl
imul
inc
mov
je
pop
aad
mov
mov
adc
sub
inc
mov
icebp
add
in
sub
fcom
leave
aad
jns
out
mov
or
lock
cld
push
add
or
es
cs
add
mov
movs
outs
outs
jmp
add
inc
pushf
jecxz
repz
or
or
cmp
or
mov
jbe
mov
add
lock
sbb
jg
pop
ret
sub
cmp
mov
iret
fstp
or
aad
xlat
or
add
push
mov
jl
push
add
loopne
std
fst
mov
enter
xor
sbb
aad
push
dec
or
or
cwde
sub
retf
inc
xor
scas
fwait
add
shl
jmp
push
in
jmp
mov
loope
sbb
(bad)
mov
mov
sti
repz
aaa
jbe
pop
lahf
jbe
inc
jns
jge
jle
mov
push
mov
lods
movs
jae
fsubr
neg
loope
add
bound
pop
lock
lods
mov
shr
sbb
and
xor
cs
mov
int3
push
jecxz
lds
in
pop
scas
cli
je
mov
sbb
gs
add
inc
imul
cld
sub
add
(bad)
in
fdiv
dec
mov
jle
mov
mov
js
jle
pop
pop
data16
jg
jnp
pop
sar
call
imul
push
stos
inc
mov
rol
test
mov
mov
movs
inc
pop
jp
xor
xor
retf
add
mov
jecxz
push
or
jmp
mov
inc
(bad)
xlat
push
dec
call
cmp
ror
movs
pop
inc
out
jne
push
pushf
bound
jmp
and
(bad)
cdq
mov
call
je
shl
daa
dec
add
repz
fstp
call
clc
loope
push
lock
push
xchg
fsubr
sbb
ror
jecxz
mov
sub
jmp
retfw
inc
pop
loopne
shl
std
mov
hlt
js
mov
dec
adc
push
mov
pop
movs
js
movs
mov
(bad)
daa
out
das
into
aad
ins
fidiv
iret
popf
test
test
sub
aam
mov
and
stos
jle
mov
es
xor
pushf
xor
jge
stos
pop
ficomp
icebp
fldenv
lock
cwde
xchg
mov
out
xchg
sahf
pop
sahf
not
rcl
test
(bad)
sbb
je
dec
push
and
jg
lods
push
push
push
push
into
pusha
push
test
mov
push
cwde
jecxz
dec
mov
mov
mov
int
mov
xor
sti
or
or
xor
and
leave
out
pop
jge
jbe
loopne
pop
ja
popa
nop
jmp
sbb
push
mov
repz
push
fcom
sub
in
js
jg
sbb
and
int
shl
ficomp
out
and
mov
cmp
pushf
retf
adc
int
out
imul
xor
push
jae
sbb
leave
or
rcl
into
in
mov
loope
or
clc
push
mov
fwait
cmps
(bad)
push
icebp
jecxz
cmps
adc
dec
in
cmc
int3
jns
mov
dec
call
cmc
cs
daa
mov
in
xor
add
sbb
xchg
(bad)
ficomp
std
and
push
mov
xor
xor
cmp
xchg
or
mov
into
daa
das
xchg
out
sub
not
fldcw
test
fidiv
mov
push
addr16
test
jbe
scas
jp
mov
cmp
or
out
mov
lock
and
mov
push
loopne
sar
jmp
pop
and
or
push
aam
shl
push
movaps
cmp
push
mov
push
int3
inc
jg
out
push
sbb
call
mov
das
std
xor
sbb
pop
outs
push
pop
cmp
sub
outs
lidtd
push
pop
mov
xchg
xor
pushf
mov
mov
fdivr
pusha
adc
ds
clc
(bad)
pop
frstor
mov
xor
cmp
ins
add
out
loope
inc
js
je
xchg
xchg
sbb
mov
loop
cmps
adc
(bad)
lods
mov
adc
xor
sti
cs
jecxz
rcr
retf
xchg
add
daa
push
fwait
mov
xor
or
or
sub
jo
ds
leave
cmp
push
xor
jns
leavew
outs
inc
push
mov
repnz
jae
stc
and
pop
int3
out
sub
push
movs
out
mov
aad
call
scas
mov
cmove
xlat
inc
js
fimul
test
(bad)
push
ret
mov
movs
push
repz
loop
sub
push
ja
sub
xor
in
dec
push
cld
les
dec
cmps
stc
mov
call
mov
aad
out
sub
fsub
cmp
or
inc
out
adc
enter
jb
dec
sbb
inc
push
mov
cmps
loop
mov
les
and
push
icebp
sahf
xchg
cmp
ret
and
test
cmp
dec
retf
push
pop
mov
in
cmp
repnz
jbe
call
mov
fstp
xor
push
aaa
scas
retf
inc
mov
cmp
and
and
add
push
mov
jbe
aam
lahf
push
loop
popf
push
pusha
adc
xchg
fld
inc
mov
or
cmp
(bad)
out
cmp
fst
mov
mov
shl
in
(bad)
mov
mov
enter
daa
mov
add
mov
arpl
mov
fs
in
dec
push
mov
sbb
push
pop
es
xchg
call
xor
add
out
neg
repz
pop
icebp
popa
push
std
mov
data16
push
sbb
push
cs
test
je
and
lods
fadd
add
mov
push
iret
jmp
jl
push
ja
pop
jo
in
ds
lock
or
and
xchg
xor
xor
push
dec
add
mov
cmps
ret
arpl
shl
jbe
and
or
gs
jmp
out
hlt
(bad)
gs
mov
rcl
push
adc
(bad)
je
xchg
inc
fisubr
pop
mov
imul
sub
xor
add
idiv
scas
clc
mov
bound
ret
scas
lods
ja
aas
xlat
scas
dec
cmp
mov
jnp
and
cmp
js
fucom
cmc
cmp
out
(bad)
sar
into
retf
and
xchg
inc
xchg
test
popf
and
aam
lods
jae
cmp
inc
dec
inc
pop
in
in
test
dec
xchg
jmp
pop
jb
fcom
xchg
jmp
loop
sbb
gs
push
jg
and
jecxz
movs
jge
jge
int3
fld
lahf
sti
cmc
and
xchg
mov
dec
loop
das
mov
inc
mov
adc
dec
push
ins
push
jns
pop
jle
push
mov
xchg
push
imul
call
imul
out
and
clc
ret
sbb
and
mov
dec
xor
ins
sahf
pop
mov
ret
jmp
lods
pop
jno
imul
rcr
repz
out
inc
fisttp
fld
fld
mov
out
jb
or
sbb
xchg
or
cmp
push
cmc
stos
(bad)
add
push
jbe
or
or
xor
aas
test
adc
leave
sub
fmul
mov
and
push
outs
mov
cmp
xchg
cmps
ds
and
or
dec
dec
push
adc
adc
or
mov
jmp
jl
and
stc
push
lds
push
inc
add
cmp
jbe
and
imul
sar
or
icebp
mov
(bad)
(bad)
pop
adc
(bad)
jmp
jmp
inc
loope
popf
mov
iret
push
sbb
jns
test
xor
repz
scas
rol
mov
outs
inc
mov
repnz
sbb
mov
jo
pop
leave
pop
mov
lock
pop
mov
add
leave
cli
sbb
push
push
mov
cmp
add
xor
xchg
add
push
test
retf
cmp
cdq
outs
test
(bad)
pop
shl
das
jne
xchg
lds
je
addr16
pusha
jae
mov
imul
push
(bad)
in
test
mov
daa
aas
adc
std
lahf
jge
dec
popa
(bad)
daa
sub
inc
adc
in
adc
jbe
sbb
sar
pop
adc
loopne
cmp
(bad)
jno
and
test
or
test
loope
repz
cli
or
dec
jbe
dec
ja
enter
sahf
rcl
mov
ror
loopne
add
mov
inc
adc
test
cld
mov
mov
jbe
sub
xchg
jb
push
xchg
mov
sbb
mov
rcl
test
and
and
adc
xchg
mov
cdq
or
stc
xor
jnp
or
push
pop
div
mov
pusha
outs
jl
in
(bad)
div
into
call
jmp
scas
mov
xor
sub
icebp
lds
push
sbb
das
adc
sti
stc
pop
cld
mov
jmp
mov
out
or
mov
psllw
push
out
mul
scas
outs
push
in
cwde
rcr
int
es
in
dec
aaa
sub
xchg
(bad)
xlat
and
mov
add
inc
aaa
stos
movs
jmp
(bad)
daa
xor
imul
mov
leave
scas
icebp
sub
fsub
adc
imul
sub
cmp
and
mov
sub
jb
loope
sar
mov
scas
nop
jl
call
adc
scas
dec
xchg
push
sbb
hlt
adc
call
outs
fimul
push
xor
push
dec
fsub
push
lods
add
outs
std
jne
jae
arpl
inc
aas
nop
nop
mov
ret
das
aad
pop
cmp
movs
call
push
or
fs
cmp
inc
xor
and
mov
je
daa
mov
iret
mov
cs
adc
or
repz
enter
mov
pop
dec
jecxz
inc
outs
into
ror
int3
push
jge
int3
test
push
je
inc
jnp
mov
in
aam
inc
dec
in
inc
sub
mov
xor
pushf
dec
fstp
stos
rol
retf
and
outs
mov
in
and
pop
in
fwait
(bad)
clc
add
rcl
jnp
xchg
pop
lods
add
mov
inc
xchg
(bad)
in
and
or
and
inc
xchg
cld
(bad)
and
mov
inc
pop
stc
test
inc
ret
inc
mov
inc
loop
repnz
pop
xchg
sbb
cdq
push
mov
mov
daa
cli
sub
or
sar
mov
leave
jmp
fistp
mov
dec
mov
arpl
xor
test
lods
jb
inc
es
pop
sub
inc
cmp
fwait
xor
hlt
fucomp
lahf
pop
add
push
or
cmp
add
int3
in
das
add
jb
jl
inc
jl
xor
sbb
(bad)
pop
mov
sub
or
jg
and
mul
mov
sti
fsubr
je
xor
inc
jmp
std
call
ja
xor
mul
call
xor
cmp
das
cmps
clc
push
dec
bound
data16
mov
xchg
cmp
inc
dec
in
jo
loopne
add
out
add
fdiv
jbe
xlat
and
sbb
add
sets
mov
dec
fst
mov
enter
or
btc
cmp
xlat
xor
xchg
sub
rcr
sbb
push
xor
xlat
push
xchg
jp
(bad)
lock
pop
sub
jbe
jo
sbb
bound
cmp
pop
cmp
dec
jp
mov
inc
out
or
dec
test
out
cmp
out
mov
mov
cli
xor
xchg
xor
xor
mov
add
push
mov
sti
mov
and
dec
fbld
add
shl
test
cld
mov
test
mov
push
xor
jmp
mov
or
dec
cwde
leave
mov
jnp
hlt
fwait
outs
xchg
mov
adc
sub
fcom
cmp
shl
lock
push
fdivr
adc
jge
in
mov
mov
inc
jmp
retf
xchg
lahf
gs
in
dec
mov
test
jge
cmp
inc
in
mov
clc
outs
mov
daa
bound
adc
adc
cmc
mov
push
cmps
pop
add
dec
push
push
data16
dec
xor
xchg
fs
pop
push
inc
and
cmp
inc
push
and
push
xchg
lock
repnz
aaa
jmp
nop
xchg
cs
ja
fdiv
bound
ret
pop
xor
or
dec
mov
enter
jne
inc
xlat
cmp
stos
repz
jno
int
jecxz
push
ret
sub
arpl
dec
pop
mov
dec
jne
pop
push
dec
adc
pop
xchg
inc
pusha
inc
aam
fbstp
mov
push
or
(bad)
mov
inc
jle
jne
stc
pop
pop
xor
mov
jecxz
ficomp
rcr
xchg
dec
lods
(bad)
aam
shl
jmp
gs
jae
inc
sub
sub
inc
adc
lods
xchg
jg
(bad)
fs
or
cld
mov
mov
cmp
in
cdq
in
xchg
daa
inc
fdiv
add
fst
dec
sbb
or
inc
add
xchg
arpl
es
dec
or
xchg
popa
and
xchg
and
jl
inc
dec
pusha
cld
jne
je
mov
push
in
jge
sbb
fisttp
pop
je
frstor
push
es
cli
out
xchg
or
outs
cmps
push
loope
jnp
int3
mov
ret
or
cmp
and
test
scas
(bad)
dec
sbb
dec
jns
pop
mov
mov
sub
in
add
in
add
int3
mov
in
xchg
jbe
(bad)
mov
movs
push
shl
or
jg
or
push
jge
clc
xor
pop
jp
sub
sbb
rep
neg
sub
enter
xor
xchg
das
inc
adc
sar
aas
fidiv
mov
mov
stos
addr16
sbb
xchg
scas
dec
ss
mov
data16
xchg
ret
pop
push
test
mov
add
adc
xor
push
loopne
pop
stc
xor
adc
ja
pop
out
jo
ficomp
push
cdq
mov
inc
ss
enter
xchg
movs
(bad)
fstp
or
imul
sbb
sbb
outs
popf
xlat
outs
jbe
jge
movs
stos
pop
adc
enter
push
jmp
sbb
out
fdiv
sub
mov
call
fsub
add
movs
adc
mov
mov
aad
cmp
push
xchg
jmp
pushf
xchg
xor
and
pusha
mov
ins
test
inc
cli
push
inc
push
shr
test
cmp
and
outs
ror
clc
movs
int3
popa
pop
mul
fwait
or
in
cs
mov
xchg
ins
iret
pushf
push
aaa
mov
mov
enter
sub
jp
fcmovnbe
retf
sbb
pop
push
cmc
adc
into
mov
xchg
ins
xor
mov
mov
retf
mov
inc
mov
leave
inc
ins
sub
or
lock
lock
jb
icebp
jecxz
pop
mov
mov
(bad)
mov
push
jbe
sbb
stc
pop
xchg
rcl
cmp
lods
push
mov
cdq
pop
and
lds
cs
pusha
jae
jmp
ins
shl
pop
imul
fild
imul
sar
adc
(bad)
cmps
dec
xor
xchg
sub
test
or
sub
idiv
in
movs
inc
imul
dec
cld
rol
aad
bound
(bad)
push
mov
inc
mov
pop
aad
mov
xchg
push
lods
cmps
mov
push
loopne
mov
mov
into
mov
cmp
sub
cdq
out
(bad)
xchg
sub
and
mov
push
subps
out
sub
aas
sub
outs
sar
or
mov
pop
jnp
outs
xor
rol
sbb
mov
adc
test
loope
push
pop
das
enter
into
shl
mov
loop
fstp
pop
adc
movs
jnp
jl
cwde
arpl
int
inc
inc
aaa
and
and
out
xchg
pop
or
cmc
daa
mov
dec
or
push
outs
test
push
sbb
add
push
(bad)
pusha
add
dec
ss
adc
or
mov
jae
xor
cs
aam
pop
mov
inc
mov
iret
push
dec
leave
adc
inc
idiv
mov
xchg
xlat
(bad)
mov
mov
adc
xchg
mov
jp
and
aad
dec
cmc
mov
sbb
retf
fwait
int3
push
cmc
fidivr
(bad)
jae
xchg
gs
test
call
ror
fwait
xchg
das
xor
pop
sbb
pop
jmp
mov
xchg
imul
cmp
jp
and
mov
stos
add
sbb
push
enter
jne
cmp
mov
stos
dec
mov
xchg
dec
call
push
push
les
dec
ins
mov
sbb
mov
test
push
stc
fcmove
test
inc
rcl
jne
jmp
mov
dec
xchg
dec
enter
loopne
gs
shl
sbb
std
and
dec
inc
jo
fidiv
mov
sbb
cmp
fwait
lds
mov
loop
stos
push
pop
mov
shr
jo
xchg
sbb
and
xchg
sub
push
dec
ficom
outs
test
test
dec
(bad)
dec
test
xor
test
xor
push
imul
add
mov
xor
pushf
jno
or
or
sub
dec
jmp
and
(bad)
aas
push
pushf
mov
add
outs
mov
and
shr
pop
push
dec
push
push
fcomp
sbb
aam
cmp
mov
iret
pop
xor
test
dec
push
jmp
xchg
push
dec
mov
movs
pop
push
inc
rol
dec
dec
jp
cmp
or
jmp
inc
mov
cmp
dec
push
jo
adc
jmp
pop
in
(bad)
push
(bad)
or
ja
adc
jbe
dec
push
(bad)
call
addr16
cld
shl
pop
cmp
push
aam
push
and
cmc
push
or
sbb
sar
fs
rcl
add
cmps
xor
jge
test
dec
dec
jbe
cmp
fs
push
mov
pop
out
or
daa
and
mov
scas
inc
or
xlat
test
xchg
mov
xchg
pop
xchg
pusha
sbb
mov
xlat
pop
lock
add
sub
dec
mov
mov
or
add
imul
mov
push
test
inc
and
and
and
aaa
push
dec
sub
xlat
into
sub
pusha
mov
inc
pop
scas
jmp
loop
xor
je
mov
mov
mov
push
test
nop
push
mov
xchg
push
test
js
cdq
sbb
rcl
scas
cmp
loope
rcl
add
cmp
je
push
pusha
xor
or
mov
mov
xor
sub
and
push
mov
arpl
lock
rcl
out
sbb
lea
ins
ds
popf
shr
in
pop
imul
movs
ds
test
ltr
adc
mov
fcom
mov
mov
or
and
call
scas
imul
pushf
or
retf
(bad)
call
repnz
sbb
dec
test
lea
pop
imul
sub
dec
icebp
fisubr
cmp
ror
pop
adc
sub
jle
mov
fsub
(bad)
repnz
sub
loope
in
shl
mov
les
inc
mov
sub
xor
dec
adc
push
and
icebp
jbe
shl
ja
(bad)
push
mov
inc
add
scas
fs
dec
enter
push
clc
mov
or
xor
daa
out
and
xlat
ja
pop
int3
xor
lods
xchg
ror
mov
inc
movs
and
jnp
jno
xchg
push
dec
cs
mov
sub
dec
cmp
mov
or
retf
cdq
test
xor
jmp
xchg
adc
push
cmp
in
fsubr
or
mov
or
inc
mov
xor
pop
adc
std
cmp
xchg
fcom
fwait
out
mov
cmc
ds
mov
xchg
push
sub
ret
mov
pop
lock
mov
aad
ins
mov
or
jl
fs
loop
mov
mov
ss
(bad)
data16
je
cmp
(bad)
repnz
and
inc
or
stos
movs
pop
lds
popf
bound
add
fnstcw
xor
xchg
push
inc
mov
mov
mov
add
aas
ret
nop
(bad)
push
loop
mov
test
and
cmc
or
cli
add
jb
push
ret
mov
mov
je
popa
mov
das
cmps
and
mov
shr
comisd
cmps
mov
mov
addr16
xchg
imul
int3
mov
push
pop
test
cmp
outs
cmp
add
pop
or
ror
jge
into
ja
rcl
xchg
inc
addr16
mov
push
scas
stos
jp
aaa
cmp
jmp
or
dec
arpl
jg
sub
mov
jle
sub
lds
push
rcr
push
add
or
stos
cmp
cld
mov
lods
repnz
jp
ss
int3
aam
loopne
ins
and
pop
scas
int3
push
cmc
outs
sub
in
mov
ds
mov
or
jg
mov
jle
jmp
adc
(bad)
sub
dec
push
push
push
enter
dec
xor
jo
rcr
(bad)
cmps
or
stos
push
jo
inc
dec
push
fild
mov
jo
jle
jns
add
push
test
sbb
mov
jo
sub
pop
push
out
lahf
and
and
inc
sub
js
out
push
dec
shr
sahf
in
xor
(bad)
loopne
repnz
sub
push
push
pusha
ins
sub
cmp
sbb
pop
push
dec
mov
mov
dec
ins
popf
div
jmp
lock
mov
(bad)
call
pop
push
loopne
xchg
xchg
iret
adc
xlat
sbb
adc
sub
dec
or
push
jne
sub
add
and
pop
dec
icebp
mov
adc
dec
fmul
jle
push
jo
scas
iret
fbstp
mov
sbb
push
call
mov
enter
jo
pop
cmp
mov
xchg
loopne
sub
data16
dec
jno
mov
and
and
or
mov
aam
dec
dec
jp
aam
call
jle
adc
pop
mov
xor
mov
push
xchg
frstor
and
adc
jge
(bad)
sahf
scas
nop
arpl
pop
(bad)
test
mov
retf
(bad)
and
iret
aam
pop
imul
push
fs
xchg
jmp
in
jo
out
mov
rcr
cld
lock
das
jg
dec
sbb
push
mov
pop
hlt
(bad)
or
jmp
jo
jg
pop
mul
scas
clc
stos
mov
jnp
jecxz
je
mul
lahf
test
lods
addr16
jecxz
fadd
jmp
adc
adc
leave
js
sahf
mov
cmp
fprem1
push
push
mov
push
mul
pop
movs
add
stos
arpl
call
fadd
mov
pop
jg
cmp
add
lods
dec
jno
dec
xchg
js
out
aam
in
cs
cmp
es
(bad)
xchg
adc
push
and
mov
cld
rcl
push
cs
aam
mov
mov
dec
jmp
aas
pop
cmp
adc
shl
mov
out
mov
in
(bad)
iret
cmp
adc
xor
pop
fbld
and
ret
xchg
ret
cmps
in
push
sub
stc
push
mov
sub
mov
pop
or
cdq
pop
push
aas
jle
sub
fsubrp
inc
pop
jmp
adc
jne
fadd
popf
or
(bad)
dec
push
rcl
in
std
push
push
in
inc
repnz
dec
xor
sub
out
clc
xlat
mov
jno
jg
and
ins
dec
xlat
xlat
je
cs
push
enter
jno
and
adc
pushf
xor
loope
mov
mov
cdq
mov
jno
adc
rol
mov
jmp
pusha
and
test
lods
sar
add
dec
sbb
pop
inc
jno
dec
shr
pop
sbb
loope
sbb
dec
aaa
xor
test
cs
es
mov
sub
mov
jo
pop
mov
(bad)
ret
pop
clc
jb
inc
call
inc
and
lahf
adc
ss
int3
push
ja
out
inc
sbb
xchg
movs
or
icebp
pop
adc
mov
test
pusha
ret
into
mov
std
es
(bad)
outs
rcr
sbb
dec
xchg
mov
or
add
repz
jecxz
inc
push
popf
inc
jle
arpl
btc
retf
sub
popf
pop
fdivr
adc
cld
jmp
js
adc
movs
mov
mov
inc
jnp
retf
cmp
les
inc
dec
inc
mov
and
mov
call
ins
shl
test
adc
xchg
jg
or
mov
push
push
das
out
push
mov
mov
xlat
mov
outs
xor
mov
sub
sbb
xchg
mov
call
sub
test
adc
imul
sub
call
fisttp
jmp
cmps
mov
(bad)
xacquire
mov
mov
mov
adc
or
push
push
pop
movs
aad
dec
or
in
pcmpeqw
ds
mov
fisub
dec
pop
mov
(bad)
mov
and
enter
(bad)
mov
nop
and
jmp
sbb
enter
jp
xchg
js
mov
push
sbb
rcr
jle
mov
mov
push
add
les
imul
mov
fisttp
xchg
jmp
test
hlt
pop
test
pop
gs
adc
mov
xchg
xchg
xchg
push
sub
shr
xor
fist
jg
fs
scas
or
sub
push
fs
or
ins
adc
mov
stc
mov
dec
jne
(bad)
in
dec
fnstcw
div
mov
xchg
xchg
adc
inc
(bad)
call
adc
jmp
call
pop
rcr
jnp
dec
das
das
ins
xchg
sub
push
jo
push
dec
cmps
jecxz
mov
repnz
cdq
push
xchg
mov
movs
fcom
call
int
add
push
popa
dec
aas
ror
push
repnz
push
sub
dec
mov
das
retf
pop
les
pop
or
lahf
or
dec
call
popa
jno
je
or
cdq
xchg
cmps
cdq
cdq
xlat
int3
mov
sbb
int3
nop
cmc
fs
xchg
loop
bound
mov
sbb
fcom
popf
sub
mov
sub
cld
jno
jp
push
ins
loop
and
push
mov
inc
cwde
retf
inc
and
jns
movs
test
sub
pop
test
dec
lods
mov
mov
aas
and
js
addr16
test
neg
movs
pop
adc
(bad)
popf
jg
dec
jecxz
or
aam
sub
add
mov
fcmovnb
aaa
dec
jg
(bad)
mov
xor
cmp
adc
dec
mov
xor
scas
push
rcl
pusha
xor
sub
and
and
sar
outs
cmp
mov
push
jmp
adc
cdq
fstp
add
xchg
mov
pop
and
sub
xchg
mov
call
push
test
(bad)
sub
enter
aaa
xchg
or
cmps
dec
pop
(bad)
fwait
push
push
and
lahf
mov
in
add
add
dec
push
mov
les
div
fadd
iret
xchg
xchg
int
add
sub
mov
(bad)
stc
aad
cmp
sub
or
mov
in
sar
cmp
xor
push
pop
push
loopne
sub
popa
lea
fisub
dec
push
or
dec
lods
or
and
fist
xor
jmp
mov
inc
cmp
push
and
mov
rcr
xor
inc
setge
mov
call
fadd
jo
pop
mov
int
push
test
test
in
push
mov
sbb
xchg
cmp
inc
cld
adc
out
push
sbb
popa
jno
ja
add
aaa
xor
mov
cld
pop
or
ret
retf
sbb
or
dec
sti
fldenv
xchg
enter
push
pop
fbld
mov
cmp
add
dec
ret
push
cmp
ja
rol
sub
call
sub
xchg
enter
pop
int
jne
shl
sbb
mov
push
lods
or
xchg
push
movs
int
or
dec
les
mov
xchg
fnstenv
or
(bad)
add
aaa
imul
les
adc
dec
test
dec
daa
inc
add
dec
test
jge
pop
xchg
push
add
ret
cwde
rcr
fcomp
fldenv
in
je
js
rcl
xchg
jmp
or
push
fnsave
jnp
mov
pushf
sbb
jmp
dec
inc
xchg
jmp
test
mov
inc
addr16
mov
js
jns
or
xchg
mov
or
mov
jp
xor
add
scas
mov
add
sbb
and
xor
mov
adc
cmc
ja
daa
dec
std
in
addr16
cld
jp
push
cmp
sbb
dec
jle
mov
mov
cld
jg
jae
or
sbb
mov
mov
popa
ins
and
inc
(bad)
jno
call
sbb
jne
dec
(bad)
outs
gs
in
cmp
std
cmps
cmps
add
push
inc
dec
lods
xchg
in
icebp
jle
sub
cmp
lea
adc
fst
out
jmp
pop
retf
(bad)
xlat
int
stos
jp
in
movs
sub
icebp
xchg
xor
jmp
adc
add
iret
int3
rol
movs
mov
xchg
xchg
mov
stos
inc
pop
lds
push
ja
pop
scas
sub
jbe
ds
cmps
ds
xchg
pop
arpl
pop
cmp
mov
mov
jecxz
adc
jecxz
push
pop
dec
les
addr16
or
bound
and
or
repnz
push
sti
xchg
sbb
mov
ins
sub
jg
cmp
jge
pusha
imul
xchg
gs
push
add
xchg
ss
adc
in
inc
(bad)
in
ror
daa
adc
mov
or
jnp
sub
push
repz
mov
dec
jg
lea
or
arpl
push
mov
jmp
ja
jbe
mov
mov
cmp
xor
lds
ret
repz
and
xchg
sahf
out
rcl
lock
ja
mov
out
xor
in
mov
or
jl
out
dec
mov
cmp
nop
scas
cmps
out
inc
sahf
lock
mov
push
mov
std
or
popa
or
sub
and
mov
ret
jmp
imul
js
movsx
jecxz
pop
sub
fs
xor
fld
loope
mov
popa
cmp
adc
nop
jl
jo
cmp
cmp
lods
pop
js
cwde
xchg
adc
mov
dec
sbb
or
rol
jb
mov
xchg
inc
leave
sbb
add
cmps
jp
fnstsw
std
mov
mov
sbb
in
in
push
loop
push
xor
int
pusha
pop
in
dec
jl
mov
emms
jmp
cld
(bad)
cmps
fsubrp
mov
pop
jnp
pop
movs
mov
inc
mov
cmp
(bad)
(bad)
fdivr
pop
int
xor
loope
or
mov
push
rcl
addr16
movs
retf
dec
jge
cli
cmp
(bad)
pop
xchg
xchg
mov
rdtsc
sub
rcl
mov
call
xor
xor
and
hlt
cmp
and
mov
cli
sub
pushf
mov
jmp
mov
pop
lods
lea
mov
es
adc
aad
icebp
std
or
jae
ja
adc
add
pop
mov
int
dec
xor
test
aam
(bad)
mov
hlt
test
xchg
adc
push
mov
xor
into
mov
lock
add
sub
cli
and
enter
gs
test
adc
out
stc
xchg
pusha
iret
test
xchg
add
std
in
xchg
into
daa
ss
mov
xchg
cmps
sbb
test
pop
push
push
dec
inc
mov
rcr
(bad)
aas
add
and
fndisi(8087
lock
xchg
daa
pop
shl
js
or
pop
mov
fwait
ss
movs
mov
inc
mov
fsub
jns
xchg
add
popa
retf
xlat
jmp
pop
fdivr
sub
inc
cmp
pop
xchg
test
loope
cmp
in
(bad)
popf
push
rol
test
imul
mov
sub
scas
into
mov
mov
add
(bad)
test
jmp
ss
out
mov
pop
stos
mov
cmp
pop
shl
xchg
mov
lock
sub
adc
shr
mov
pop
mov
int
pop
repnz
adc
push
mov
out
test
push
(bad)
sub
or
or
push
and
(bad)
cmp
es
out
leave
sahf
lock
mov
xor
jecxz
pusha
mov
adc
fwait
mov
sbb
je
jo
lods
pop
mov
dec
(bad)
out
mov
(bad)
mov
fsubrp
je
lods
ja
nop
(bad)
mov
jle
fsub
push
mov
xchg
icebp
aad
mov
retf
adc
test
mov
(bad)
cmp
jno
cmp
test
aas
aaa
add
mov
popf
jmp
iret
xchg
push
mov
pop
sbb
cmps
add
cmc
in
loop
cmps
jecxz
in
and
dec
aas
pop
mul
(bad)
pop
mov
add
push
mov
cmp
mov
jge
xchg
test
test
xor
mov
nop
jnp
sbb
add
jl
loope
pop
push
sbb
fcomp
add
mov
stc
sbb
in
push
popf
(bad)
idiv
aas
dec
arpl
push
mov
sar
mov
xchg
push
sub
fist
in
test
xchg
and
jne
cs
gs
vandnps
mov
pop
scas
je
add
mov
push
fild
mov
xchg
push
ins
fstp
ret
cld
inc
jg
add
stos
add
or
movs
(bad)
jmp
cli
sbb
sub
push
jae
add
add
into
or
inc
adc
jp
loope
mov
movs
jp
sbb
test
or
inc
test
pop
sub
mov
lock
sub
hlt
mov
sub
add
ins
(bad)
inc
push
popa
outs
mov
movs
or
or
retf
jmp
lods
and
and
daa
bound
lds
(bad)
fild
adc
and
jmp
mov
sbb
gs
mov
mov
mov
lods
dec
pushf
outs
push
and
cmp
sti
add
or
xor
pop
jp
pusha
mov
jne
icebp
push
or
fsub
jle
cmp
pop
push
mov
jns
add
bswap
clc
or
data16
pop
je
cmp
xor
adc
inc
dec
cld
and
or
xor
xchg
mov
push
dec
mov
add
dec
cmps
js
shl
mov
aam
push
icebp
mov
movs
cmps
ret
in
arpl
and
dec
loopne
sti
retf
or
and
ja
fs
jmp
lds
std
(bad)
xor
cmp
cmpps
nop
inc
sub
shl
mov
cmp
xchg
out
movs
jne
stos
sbb
or
push
mov
cmp
aad
fwait
mov
ret
dec
movs
arpl
jb
mov
cmp
scas
dec
sub
fisub
(bad)
in
shl
lahf
cwde
xor
mov
jo
dec
out
gs
or
xor
sub
imul
repnz
arpl
sub
jo
add
dec
push
in
jmp
mov
mov
call
(bad)
add
fsubr
mov
push
inc
mov
inc
(bad)
jae
xchg
inc
into
in
and
push
arpl
(bad)
xchg
arpl
adc
ja
jg
mov
inc
or
and
into
xchg
fisub
xchg
inc
mov
xchg
ins
cmc
sub
mov
fmul
cmp
push
loope
adc
mov
sub
sbb
aam
sub
rol
cdq
test
cmps
loopne
xchg
dec
jle
loop
sar
push
cmp
icebp
imul
cwde
cmp
inc
daa
mov
or
xor
movs
mov
inc
xor
lods
and
mov
mov
dec
jle
repz
jle
lock
mov
jecxz
repnz
add
sahf
shl
out
mov
xchg
(bad)
mov
push
mov
sbb
jge
iret
sub
popf
jp
mov
push
mov
jmp
in
addr16
dec
jmp
jmp
xchg
add
jle
sub
in
or
je
out
lds
aad
sbb
rcr
stc
test
sub
mov
xchg
adc
mov
je
inc
sub
inc
xchg
cmp
stos
push
mov
sub
jae
xor
fst
push
jecxz
dec
call
push
mov
dec
ins
pop
icebp
out
mov
jmp
mov
xchg
or
mov
je
jb
fsub
mov
das
jg
shr
adc
push
inc
and
adc
inc
retf
aam
les
push
adc
cli
jne
dec
cmp
jne
test
mov
adc
clc
mov
cmp
cmp
jmp
int
je
test
dec
jno
jbe
xor
cmp
push
out
inc
sub
mov
xchg
jmp
sub
ins
push
loop
dec
push
iret
outs
mov
add
iret
test
add
jle
punpckhwd
(bad)
mov
mov
cld
pop
jp
inc
lea
mov
push
imul
jae
(bad)
push
(bad)
test
adc
add
push
scas
movs
mov
sub
or
add
dec
cs
or
call
rcl
xlat
repnz
loope
mov
ror
add
jbe
popa
loopne
clc
adc
aaa
adc
adc
mov
cs
sbb
mov
push
pusha
cmp
cld
jle
sbb
pop
dec
push
add
push
scas
push
mov
daa
mov
sbb
cmp
popa
push
hlt
es
adc
test
jg
(bad)
es
sub
fnstcw
jo
jbe
sub
das
xchg
mov
call
repz
ds
and
test
push
lahf
jecxz
xchg
ss
xor
and
fwait
xor
cwde
mov
sbb
jge
mov
dec
iret
add
mov
mov
aaa
xchg
(bad)
movd
mov
out
pop
sub
dec
cli
int
ds
xchg
(bad)
adc
aaa
mov
aas
push
aad
push
bound
push
mov
dec
imul
mov
dec
jb
cmps
fisttp
mov
popf
sbb
arpl
pop
in
repz
dec
adc
inc
ret
mov
push
jp
mov
or
push
mov
pop
xchg
hlt
or
push
jo
in
and
(bad)
or
push
xor
aad
(bad)
pop
jmp
push
ins
test
jp
jmp
adc
cmp
push
sti
aaa
idiv
or
push
cmps
fidiv
fwait
test
xor
pop
lods
cmp
push
and
push
not
daa
sub
inc
mov
aas
dec
lods
call
(bad)
adc
fsubrp
ins
ja
lods
les
adc
test
fwait
dec
dec
(bad)
fs
pop
adc
repz
pushf
mov
add
mov
push
iret
xchg
mov
test
push
(bad)
cmps
mov
jo
push
popa
adc
ror
pop
add
xchg
adc
xchg
or
push
mov
cli
or
and
call
jne
adc
mov
add
dec
xchg
mov
dec
pop
rcl
jl
mov
jg
mov
jecxz
test
pop
cli
xchg
add
xor
aam
lea
bound
push
ret
add
dec
cmp
fwait
sbb
add
rcr
shl
jl
and
mov
push
cmp
sbb
ret
cs
push
or
lds
mov
inc
jp
push
ret
jl
lds
mov
sbb
cdq
gs
dec
jle
or
outs
xor
mov
xor
sub
or
shl
adc
xor
aad
lods
push
sti
cmp
ds
fwait
pop
idiv
mov
mov
push
mov
fisttp
loop
mov
jl
adc
mov
dec
sub
inc
dec
scas
push
cwde
jbe
js
not
(bad)
psubusw
jp
sbb
dec
cld
aaa
mov
jg
cmc
and
xchg
ret
pop
scas
ja
(bad)
sub
in
push
shl
dec
repz
pop
ss
jmp
jb
add
cmp
sub
clc
dec
sbb
in
push
imul
and
outs
fimul
sub
fs
shr
xor
in
jmp
ds
pusha
aad
and
fld
in
ficom
neg
xor
arpl
out
mov
mov
fiadd
inc
jno
stos
cmp
stos
cmp
push
fiadd
popf
dec
push
fwait
ja
dec
in
add
and
sbb
fmul
(bad)
jo
lods
pop
shl
neg
not
sub
out
add
sti
sbb
inc
ror
cwde
inc
cwde
cld
mov
cmp
jp
fcmovnbe
adc
(bad)
mov
pop
mov
stc
pop
sub
in
sbb
in
add
xlat
sub
adc
push
test
mov
pop
xchg
retf
cmps
inc
xchg
sbb
lods
adc
cwde
ret
pusha
add
push
mov
imul
adc
xor
pop
push
stc
mov
add
fist
xor
mov
xor
inc
cmp
test
jno
and
pusha
cmc
jge
in
imul
icebp
push
jae
cs
leave
or
lods
jge
leave
pop
dec
inc
cmp
repnz
xlat
int
cmc
out
push
mov
pop
xchg
mov
jbe
add
jle
lods
enter
loope
xor
jmp
jmp
jo
cmp
in
cmp
imul
test
ret
shl
scas
xchg
xor
pop
(bad)
data16
stc
pop
fist
mov
icebp
xchg
sahf
or
inc
jo
jnp
aas
out
sbb
ds
loopne
mov
ins
out
sub
mov
ror
cmp
jg
and
sub
xchg
jne
lea
sub
jb
cmp
fmul
fisttp
push
adc
dec
cmps
mov
stos
push
dec
ss
repz
mov
es
imul
push
fs
mov
adc
scas
adc
(bad)
dec
pop
bound
lds
ret
pushf
movs
jmp
mov
cmp
lods
mov
xor
sub
mov
retf
jecxz
aad
mov
pop
dec
repz
(bad)
mov
loopne
sub
mov
mov
mov
mov
retf
push
or
sar
stos
fild
call
(bad)
loop
mov
sub
movs
and
icebp
lds
ins
mov
push
call
sbb
and
xchg
jmp
sbb
mov
fdivrp
or
ds
jbe
dec
mov
aam
les
add
ins
push
mov
imul
mov
jp
dec
mov
mov
movs
stc
hlt
ss
pop
out
lods
jne
repnz
or
dec
or
xor
mov
push
loopne
pop
inc
xor
dec
js
mov
sub
jg
cmp
cwde
(bad)
in
fstp
mov
loopne
mov
fsub
test
daa
test
push
inc
arpl
js
and
push
sub
adc
mov
push
inc
mul
mov
sti
sti
push
cmp
(bad)
add
(bad)
sbb
mov
stc
addr16
movs
and
and
inc
jno
sbb
mov
xchg
(bad)
mov
pop
lods
lahf
movs
addr16
sbb
scas
rol
test
inc
aas
xor
mov
cmp
mov
fisubr
dec
fsub
out
adc
cmp
fsubr
fwait
lea
inc
daa
retf
mov
xchg
retf
lea
push
mov
push
scas
cmps
mov
and
dec
(bad)
sub
fldenv
nop
add
test
fsub
adc
cmc
fisttp
ror
popa
xor
mov
cdq
test
mov
fucompp
push
(bad)
vcvtpd2dq
mov
into
mov
sub
mov
popa
pop
(bad)
ror
jmp
in
push
in
mov
ret
out
xor
dec
hlt
pop
sub
fcmovnbe
mov
sbb
pop
test
repz
add
hlt
imul
dec
jecxz
enter
in
loopne
or
repz
cli
(bad)
sub
test
retf
push
daa
mov
xchg
push
leave
(bad)
daa
imul
popf
mov
push
jecxz
cmps
mov
enter
inc
cmps
pop
inc
cdq
shl
push
stc
clc
push
out
push
lock
sub
mov
jp
mov
(bad)
lahf
xchg
adc
sbb
inc
sti
xor
cmp
push
adc
adc
mov
push
gs
jae
rcl
mov
and
xor
fidivr
lods
mov
mov
cld
mov
xor
aad
stc
arpl
mov
lahf
pop
dec
and
mov
shl
and
loop
shr
adc
test
out
div
jo
cmp
out
pop
out
pop
sti
iret
pop
cdq
aad
sti
and
popa
adc
sub
jo
sysret
ror
lods
cdq
test
sbb
push
daa
cmp
push
je
rcr
inc
push
jmp
mov
dec
mov
jl
jns
out
fnsave
mov
lds
cmp
jnp
mov
in
bndstx
push
in
ins
(bad)
sub
scas
arpl
pop
add
shl
sti
test
cmp
cld
mov
mov
pop
sub
shl
arpl
lods
dec
jecxz
cli
mov
push
mov
adc
fsubr
les
mov
(bad)
mov
mov
(bad)
or
cld
push
loop
int
call
push
and
sub
inc
retf
sub
outs
xchg
and
cmps
retf
pop
inc
pop
dec
int3
lods
das
mov
push
push
les
add
pusha
or
cmp
xor
pop
div
sbb
adc
bound
fwait
mov
cmp
jnp
pop
mov
sbb
imul
js
sbb
sub
xchg
lahf
pop
ds
mov
xchg
mov
fimul
jne
push
pop
pminub
sbb
es
add
in
loopne
add
sub
dec
(bad)
adc
mov
das
mov
dec
ficom
cs
mov
dec
bound
movs
ja
push
inc
pop
out
scas
(bad)
cmp
stos
jl
loope
pop
xor
sahf
aaa
jmp
push
stos
xchg
inc
test
xchg
sbb
jns
pop
cmp
pusha
inc
cld
cs
out
xchg
sbb
daa
ins
es
addr16
mov
sub
sbb
cwde
call
mov
cmp
rcl
xchg
fmul
mov
(bad)
test
cld
xor
cmp
ds
(bad)
sub
xchg
xchg
sub
das
xor
popa
cmp
(bad)
fmul
push
shl
cmp
push
xlat
into
mov
test
outs
loop
nop
dec
jp
inc
fstp
retf
xor
rol
mov
lods
lods
and
aaa
jmp
daa
mov
fs
xchg
inc
rcr
mov
adc
call
dec
in
int3
push
cwde
pop
cmp
popa
ror
dec
xchg
nop
in
inc
cmp
or
sub
rcl
sahf
inc
(bad)
mov
addr16
push
and
inc
cli
loop
scas
and
xor
ins
clc
dec
push
mov
xor
dec
mov
addr16
or
push
in
xchg
cmp
fs
lea
arpl
scas
cmp
adc
and
push
inc
mov
repz
imul
scas
sbb
rcpps
adc
bound
lock
mov
push
pusha
scas
mov
fdivr
lea
xchg
ret
and
or
inc
mov
cmc
push
in
in
add
xchg
mov
sti
jmp
loopne
jecxz
cmps
jae
sub
gs
in
out
jb
mov
push
jb
imul
cmp
daa
aaa
mov
add
mov
inc
fucomip
imul
(bad)
adc
push
cmps
call
mul
popa
inc
out
rcl
pop
shl
pop
ja
cmp
and
pop
mov
mov
rcl
fadd
or
loope
mov
pop
xchg
push
cmp
push
fcmove
mov
xlat
sbb
jno
sbb
sub
dec
js
fldcw
mov
xor
mov
ins
pushf
(bad)
add
sbb
dec
push
sbb
adc
movs
pop
cwde
je
push
mov
jge
adc
stos
sbb
sub
or
scas
je
jbe
into
mov
inc
pop
add
push
xor
ret
sbb
es
fldz
mov
pusha
and
push
push
jbe
push
cmp
cwde
xlat
adc
in
add
jecxz
and
cmps
std
xchg
push
aam
sahf
shr
imul
stos
enter
xlat
push
loopne
mov
fisubr
(bad)
lahf
test
push
movs
pop
mov
push
hlt
add
push
jbe
jno
ret
imul
sbb
nop
and
xlat
mov
pop
sbb
mov
push
jp
ins
aaa
int
adc
mov
or
jae
(bad)
aaa
jne
out
cmp
add
adc
std
or
neg
dec
(bad)
cmp
cmps
inc
ret
xchg
xor
fdiv
shl
ret
(bad)
in
or
nop
cmps
sahf
cmps
test
loopne
bound
mov
push
test
cmp
(bad)
push
push
(bad)
push
adc
pop
cld
or
jns
dec
and
push
mov
mov
adc
push
rol
mov
idiv
je
pop
shl
fisttp
out
xor
pop
xchg
in
dec
push
lahf
xchg
loopne
mov
int3
push
dec
jmp
rcr
adc
sbb
aad
sar
xchg
gs
cmp
cmp
cmp
js
push
xchg
cmp
mov
into
inc
not
xchg
pushf
jne
xchg
cld
inc
sub
jno
or
sbb
test
out
dec
stos
mov
mov
js
xor
sti
mov
aaa
adc
add
data16
push
popa
xor
fild
mov
xor
mov
repz
xchg
ret
ja
jnp
enter
mov
xor
fimul
fisttp
js
dec
push
in
in
sub
xchg
out
test
stos
out
xor
jp
test
cmp
jp
cwde
ins
dec
mov
mov
daa
or
(bad)
ficom
(bad)
or
pop
popf
lahf
pop
jmp
into
cli
sub
sbb
in
inc
int3
or
mov
fdivr
movs
inc
imul
or
and
stos
mov
xlat
data16
(bad)
mov
test
dec
rcl
cli
in
jmp
jle
or
arpl
or
ds
lea
sbb
xchg
push
push
jno
test
ins
mov
add
scas
movs
dec
or
cli
fld
cs
jns
push
push
leave
mov
lahf
adc
jmp
cdq
hlt
retf
jnp
dec
shl
push
jbe
cli
adc
(bad)
das
cmp
mov
out
hlt
lock
adc
ins
and
int
inc
xchg
xchg
mov
and
sbb
mov
sbb
sub
cmp
loop
adc
mov
xchg
or
popa
dec
jl
mov
jg
mov
loope
sub
fmul
shl
xlat
add
jae
cmps
jb
mov
or
lock
pop
cwde
add
popa
mov
jns
push
in
jo
mov
push
out
sbb
leave
and
addr16
pop
push
cld
xchg
call
jecxz
fs
pop
rcl
adc
jecxz
ins
cld
xlat
mov
mov
dec
mov
xchg
pop
lahf
jns
xchg
mov
movs
sub
adc
jp
jmp
int3
div
mov
mov
addr16
loop
test
mov
jae
call
jnp
jne
js
sub
sahf
es
ins
push
pop
sub
ret
xor
inc
add
jp
retf
jb
push
shr
mov
xor
xor
jmp
test
scas
(bad)
mov
in
(bad)
daa
jp
mov
xchg
sti
cmps
(bad)
out
imul
inc
call
cmp
xor
stos
nop
retf
adc
rcr
cmp
div
xchg
mov
jle
(bad)
inc
and
jno
mov
jne
arpl
mov
add
mov
in
mov
out
push
jbe
ret
sahf
mov
cs
adc
retf
rol
les
test
lock
mov
movs
inc
sahf
les
retf
mov
lock
std
les
mov
mov
cmp
(bad)
int3
xchg
enter
das
out
lods
sahf
dec
mov
inc
(bad)
(bad)
cmps
sar
cmp
pop
or
xor
outs
jne
push
iret
int
jne
mov
xadd
add
cmps
mov
ret
push
inc
in
cmc
pushf
loop
int
mov
xor
push
push
mov
sbb
xor
xor
popf
call
int3
mov
pusha
push
pop
inc
dec
cmp
scas
push
scas
leave
jno
or
psrld
mov
dec
movs
mov
pop
sub
loop
dec
or
xchg
mov
ins
sbb
xor
scas
mov
mov
movs
mov
xor
scas
stos
add
retf
and
xchg
das
mov
jg
and
lea
cdq
out
aas
test
and
in
loopne
push
dec
out
loope
inc
retf
or
jge
jnp
xchg
mov
iret
cli
rcr
or
es
repz
push
mov
fnstcw
jb
or
lahf
push
and
push
movs
and
inc
mov
add
cld
sub
mov
inc
cs
push
test
mov
mul
inc
(bad)
push
aad
test
xor
xchg
rcr
aas
aam
jnp
inc
lock
jl
pop
push
cmp
inc
in
dec
and
mov
hlt
jne
sbb
rol
out
mov
out
sbb
cmc
stos
enter
aaa
dec
adc
push
fcmove
ret
xchg
in
cmps
pusha
cli
sub
cmp
je
jae
pop
pop
imul
inc
sub
jg
pop
cmc
loope
jmp
dec
sahf
push
add
(bad)
mov
int3
movs
loopne
loopne
mov
jno
xlat
popa
xchg
cld
or
xor
jl
sub
push
ret
sbb
retf
pop
or
fisttp
imul
xor
xchg
in
xlat
adc
xchg
outs
jmp
in
add
sbb
push
jb
stc
out
push
or
fwait
pop
lock
pop
(bad)
dec
add
dec
mov
aad
or
or
push
lock
and
jnp
shr
and
(bad)
stc
mov
mov
pop
xchg
jp
xor
adc
dec
adc
aaa
aas
ret
inc
and
xlat
je
add
push
mov
xor
mov
je
lea
imul
in
dec
scas
out
mov
push
scas
or
push
pop
in
xor
push
inc
cmp
and
jecxz
dec
lods
xor
dec
loope
(bad)
adc
add
daa
mov
mov
js
dec
outs
add
mov
pop
bnd
int
out
sbb
in
(bad)
in
push
idiv
in
(bad)
or
lahf
mov
or
out
sbb
ja
sar
xor
je
sbb
fldenv
xor
mov
mov
test
repnz
dec
push
jnp
cmps
lods
and
popf
in
push
xchg
adc
pop
inc
je
in
push
push
jnp
inc
cmp
pop
cs
out
pop
icebp
jno
imul
jmp
ret
jns
fiadd
mov
aad
cmp
fdivr
pusha
or
mov
jne
ins
outs
push
scas
cmps
xchg
aas
and
cs
mov
pop
cmc
out
stos
lahf
adc
mov
popfw
in
cwde
cs
adc
cmps
icebp
scas
cmp
fsubr
div
lods
sbb
push
add
addr16
ficomp
stc
pop
inc
dec
jo
repnz
shr
xlat
mov
in
mov
cli
cmp
xor
fs
push
push
retf
push
(bad)
sub
and
xor
bound
test
jns
add
outs
cmc
imul
xchg
popf
push
nop
push
sub
repnz
and
mov
jg
inc
add
(bad)
int3
pop
outs
shl
adc
(bad)
xlat
and
jmp
jl
push
aam
cmc
xchg
cmp
bound
sub
adc
fidivr
sbb
sub
arpl
imul
and
sahf
test
xor
jno
test
int
test
movs
mov
mov
mov
ret
push
cs
ret
mov
xor
xlat
fidiv
jg
add
out
rol
jg
adc
mov
inc
push
push
mov
xchg
xor
stos
lock
fmul
mov
push
retf
or
jno
push
mov
sar
xlat
test
adc
leave
sub
pop
out
(bad)
loope
inc
mov
fld
aaa
xor
repnz
add
jnp
fisttp
and
movs
sub
sbb
push
mov
jmp
xor
push
inc
(bad)
loope
push
test
jge
(bad)
loopne
xor
sbb
mov
add
jge
loopne
mov
dec
nop
je
sub
inc
and
mov
push
mov
pop
xor
xlat
mov
mov
out
jmp
sbb
(bad)
pop
dec
add
hlt
outs
cs
cdq
in
cmps
or
jl
xor
mov
pop
jne
test
jge
aas
pop
sbb
pop
adc
inc
jo
xchg
fucom
out
outs
pop
test
mov
aas
scas
jb
stos
mov
jns
push
aaa
into
or
nop
push
mov
mov
ss
push
sbb
nop
and
pop
(bad)
sahf
out
aas
adc
xor
loope
test
lea
cdq
add
mov
dec
jo
jns
xchg
dec
inc
xchg
mov
mov
pop
das
daa
les
sbb
and
cmp
cmps
jbe
xchg
push
js
push
pop
dec
sbb
outs
jle
jae
xor
into
pushf
push
dec
and
(bad)
cld
mov
and
sub
pop
inc
imul
(bad)
ins
das
out
ret
jle
or
daa
mov
dec
pop
std
pop
mov
aad
mov
(bad)
mov
cmps
repnz
ret
adc
sbb
mov
pop
push
mov
mov
mov
out
leave
add
mov
mov
mov
mov
cld
xchg
sbb
neg
clc
imul
and
xchg
jp
adc
ja
clc
sbb
ds
shr
hlt
popa
xchg
in
jmp
fiadd
das
int3
mov
inc
idiv
pop
jmp
idiv
ret
pop
mov
or
pop
fdiv
xchg
pop
dec
xchg
xor
add
and
jbe
popa
adc
xchg
loope
cld
js
inc
ret
rol
xchg
sbb
push
xchg
cmp
or
push
pop
add
mov
lea
and
jno
adc
mov
retf
jmp
mov
push
sub
xchg
in
dec
pop
fnstsw
push
hlt
lods
pop
jle
sar
scas
popa
hlt
std
dec
pop
bound
mov
add
shl
in
cwde
sub
movs
xor
sbb
sub
xor
lock
(bad)
inc
mov
jb
cmp
popf
scas
xchg
(bad)
cmps
fiadd
dec
cmp
sub
pop
fldenv
out
fistp
aaa
or
push
adc
stos
push
push
clc
pop
pushf
xchg
jae
jne
xchg
idiv
xchg
sbb
movs
out
cmp
sti
push
mov
adc
jecxz
pop
inc
(bad)
and
iret
push
inc
in
add
sbb
out
sub
icebp
sahf
retf
vlddqu
lods
fwait
add
jmp
(bad)
push
test
lock
in
scas
aas
xchg
mov
push
xchg
or
icebp
push
cmps
sbb
pop
fcmovbe
rcl
rcr
scas
mov
push
mov
mov
(bad)
and
shl
mov
mov
ficomp
sbb
out
(bad)
(bad)
mov
in
mov
add
in
iret
(bad)
repz
cld
mov
mov
ror
ds
dec
dec
in
fs
mov
call
inc
sub
xor
sar
fs
into
jb
adc
sar
inc
sub
call
into
popa
rcr
stc
ret
and
dec
cld
dec
sbb
in
call
mov
or
(bad)
repnz
mov
push
shl
movs
rcr
adc
jecxz
inc
(bad)
cmp
dec
dec
out
sub
fsubr
cmps
lahf
out
ins
ins
mov
push
jle
cli
mov
inc
popf
imul
(bad)
pop
cmp
popa
ja
out
inc
clc
mov
ret
fnstenv
cmp
outs
lea
add
inc
jne
and
sbb
and
xchg
pop
and
cmc
and
inc
adc
mov
out
xor
les
pop
jne
sub
xlat
movs
xlat
scas
inc
cmps
popa
dec
ficom
mov
sub
mov
cmps
cwde
lock
jg
or
call
leave
adc
cdq
test
ror
(bad)
pushf
push
mov
out
mov
gs
and
rol
mov
loope
adc
xor
retf
(bad)
pusha
add
sub
fidivr
int3
mov
scas
jp
aad
sbb
mov
int3
or
dec
popa
xor
and
daa
mov
shr
push
sbb
ficom
jmp
or
dec
stos
push
in
jmp
pop
lods
iret
push
push
dec
sbb
loope
xchg
call
or
xchg
jecxz
sbb
mov
xor
es
gs
jmp
(bad)
mul
jle
adc
mov
(bad)
ficomp
mov
leave
shr
add
inc
test
retf
std
(bad)
call
xchg
sti
jp
mov
cmps
icebp
mov
lods
and
fisttp
and
fsub
clc
push
push
push
ret
xor
xor
repz
sub
sbb
pop
push
lea
mov
push
sub
ret
ins
pop
jne
leave
and
add
cmp
sbb
fwait
movs
adc
jecxz
inc
cld
cwde
fcom
cmps
and
sbb
push
popf
dec
js
and
and
int3
repnz
enter
ins
loop
cmp
pop
dec
mov
mov
fstp
ins
jmp
jg
jb
loopne
pusha
mov
shl
data16
xchg
mov
ss
test
sub
inc
call
(bad)
pusha
jecxz
in
xor
(bad)
(bad)
(bad)
lods
fwait
out
shl
loop
daa
shr
sbb
xlat
pop
cmp
fidiv
mov
popa
stos
lods
mov
jmp
inc
sub
dec
cmp
push
ins
inc
xchg
inc
pop
dec
add
and
dec
fs
adc
adc
pop
std
push
cs
shl
in
cmps
push
mov
mov
aam
inc
frstor
lods
aam
(bad)
jnp
add
pop
pop
inc
ds
fiadd
jb
or
les
cmp
and
mov
sbb
add
or
mov
cwde
xchg
pop
pop
icebp
xor
mov
test
sub
gs
in
das
sub
mov
dec
leave
cmc
ins
in
sbb
or
cdq
imul
adc
cmps
cli
and
sti
mul
call
out
pop
fcomp
jns
pop
xchg
inc
push
sub
repnz
cld
ror
adc
(bad)
clc
pop
xchg
sbb
loop
sbb
out
dec
jp
aaa
adc
lahf
aad
dec
sbb
repnz
pop
xor
sub
mov
icebp
mov
fwait
push
jge
std
cmc
or
jno
pop
xchg
mov
push
jecxz
jns
add
mov
lods
pop
cli
sbb
mov
or
pop
in
lods
mov
sbb
sbb
fdiv
fisubr
fs
mov
xlat
fldcw
scas
popa
jle
hlt
mov
mov
mov
cwde
cmps
jns
or
jo
inc
nop
cmp
sub
sti
or
int
test
out
pop
mov
xchg
mov
aad
jp
lahf
dec
adc
mov
sub
mov
rcr
pusha
xchg
adc
mov
dec
arpl
fsubr
sbb
ficomp
rcr
jl
test
mul
jecxz
pop
movs
inc
or
xor
cmc
(bad)
cmps
retf
pop
xchg
xor
in
mov
ror
es
out
call
pop
sub
mov
dec
add
add
ja
inc
jl
(bad)
imul
xor
xor
sub
dec
sub
jp
add
and
lds
leave
mov
jnp
mov
repnz
enter
test
inc
int
(bad)
sub
xchg
push
in
push
(bad)
das
test
xchg
pop
push
cmc
gs
pop
and
mov
in
mov
cmp
stos
mov
cld
cmp
push
add
jge
call
sbb
imul
sub
aas
add
and
fcom
mov
adc
mov
add
ja
aas
es
add
shl
sub
out
or
mov
loope
mov
movs
mov
inc
mov
sbb
into
stc
fld
mov
rol
cmp
in
jo
loope
push
inc
mov
push
cli
xor
dec
inc
shl
cmc
xchg
out
hlt
pop
daa
outs
or
adc
call
into
int3
or
shr
fwait
lods
adc
(bad)
leave
ds
enter
rcr
and
sbb
les
pmulhw
repz
add
cmps
add
or
loop
(bad)
mov
cdq
inc
push
in
scas
mov
mov
lea
les
add
xor
les
fwait
mov
icebp
aaa
(bad)
xchg
lock
cdq
xor
xor
push
enter
sub
xchg
ins
hlt
add
mov
mov
add
lahf
popa
les
ds
adc
js
sub
sbb
push
movs
shl
aad
pushf
in
(bad)
xchg
push
outs
shl
jp
call
lods
lods
add
fidivr
sub
test
xchg
push
jecxz
pop
push
ret
pop
test
push
and
ret
dec
popf
stos
pop
fisub
daa
inc
xor
lea
ror
retf
(bad)
call
mov
jge
in
popf
sbb
clc
fld
sbb
rcl
pop
cld
outs
mov
data16
ret
loop
jb
sub
(bad)
push
jmp
fldl2t
retf
mov
popw
(bad)
jns
fisubr
in
mov
jae
dec
aas
inc
les
lods
pop
add
mov
scas
inc
and
repnz
push
push
ret
movs
xor
mov
or
sbb
fs
pop
mov
pop
adc
shr
adc
pop
lock
xchg
pop
std
jbe
cmp
mov
push
scas
mov
popa
mov
int
xor
pop
adc
in
cmp
jno
addr16
in
in
sbb
mov
outs
mov
push
and
adc
push
lea
and
retf
fs
cmp
sbb
test
mov
not
cmps
push
add
bnd
and
xlat
div
push
pop
mov
mov
pop
or
mov
jmp
je
jmp
shr
shl
ja
in
push
icebp
aaa
pushf
dec
js
mov
xlat
pop
adc
les
mov
cmp
xchg
fistp
fxtract
inc
adc
std
mov
xchg
fcmovne
imul
and
jne
test
cmp
mov
lods
loop
ins
sub
into
jmp
mov
and
lahf
fist
xor
adc
add
mov
inc
mov
out
jmp
sbb
add
retf
or
or
cmp
(bad)
sbb
fidiv
and
pop
sbb
gs
test
lods
mov
pop
push
mov
and
mov
xchg
xchg
std
lock
mov
xchg
stos
push
mov
and
fisub
aas
mov
popa
xchg
mov
outs
inc
dec
(bad)
jne
mov
and
push
pop
cmp
mov
jle
mov
aas
or
push
inc
cmp
dec
fcomp
in
into
cld
or
std
aad
dec
adc
mov
lods
inc
int
(bad)
int3
mov
or
test
jne
push
xchg
xchg
pop
cmp
dec
mov
push
jecxz
sahf
cmp
mov
mov
int3
jo
(bad)
adc
jle
or
mov
or
or
jns
push
arpl
sub
xor
jecxz
xor
jns
ret
loop
shl
jnp
inc
xor
ret
gs
aas
pop
mov
sub
xchg
loope
adc
in
or
inc
bound
mov
jge
test
lds
jge
push
add
in
out
or
mov
retf
adc
and
dec
or
mov
mov
pop
call
in
in
lods
sub
xchg
es
in
inc
or
popa
jle
mov
mov
rcl
mov
fstp
pop
test
and
jmp
out
add
pop
out
mov
jg
xlat
jns
xchg
sti
cmp
xchg
in
jge
mov
jae
sub
pop
retf
dec
push
and
sub
pop
shr
jg
ins
pushf
jmp
cdq
push
jb
stc
lds
cld
loopne
js
adc
(bad)
ror
je
pop
mov
out
sbb
cld
jbe
fadd
dec
out
or
xchg
mov
sub
bound
xchg
mov
ss
jge
dec
(bad)
pop
mov
push
and
pusha
mov
jecxz
stos
add
sbb
lds
pop
push
scas
push
xor
inc
in
or
add
call
pushf
sbb
jl
loope
out
adc
jge
xor
popf
hlt
daa
mov
jo
dec
arpl
adc
stc
cmps
cmps
pop
mov
jp
(bad)
jecxz
out
dec
cmp
jl
enter
pop
cpuid
dec
fs
test
hlt
jl
ss
inc
push
inc
mov
shl
inc
mov
or
icebp
pop
jns
xchg
loop
adc
push
dec
aam
cld
sbb
push
shrd
xor
mov
adc
call
cmp
cmps
clc
retf
jge
xchg
stos
sbb
add
pop
or
movs
dec
lahf
mov
add
sar
jne
std
xor
sbb
mov
(bad)
shl
xchg
jno
push
mov
retf
int
and
repz
pop
and
and
hlt
inc
dec
(bad)
das
push
push
jno
lahf
fild
gs
ror
leave
sub
inc
jmp
pop
test
mov
jge
add
xchg
and
sub
retf
cmp
(bad)
push
inc
cmp
and
pop
xchg
mov
push
adc
not
add
aam
pop
jo
lods
xchg
sbb
es
es
push
aas
dec
test
popf
les
repnz
add
mov
shl
sbb
shl
inc
cmp
js
inc
test
and
mov
test
mov
dec
dec
jle
xor
popa
adc
sub
mov
movs
push
test
pop
adc
xchg
xchg
mov
adc
std
fistp
cmp
fcomp
jmp
xor
xchg
aaa
mov
mov
push
loop
mov
dec
mov
jno
cmp
ficom
das
sar
inc
stos
fsub
daa
push
out
std
in
cmc
and
pop
pushf
js
nop
in
mov
cmp
cld
xor
les
dec
loop
lock
xchg
mov
and
rcl
add
cwde
adc
aam
icebp
dec
lods
aaa
push
sahf
sbb
push
sbb
icebp
leave
out
xor
je
jne
add
cdq
movs
mov
pop
sub
dec
add
xor
popf
mov
clc
fcomp
aas
into
push
sbb
adc
sub
mov
adc
adc
sar
mov
addr16
mov
test
and
sbb
pop
add
mov
jge
aad
sbb
inc
std
ins
(bad)
jmp
out
push
push
inc
cmp
fimul
cmp
ret
(bad)
and
push
mov
mov
int3
shl
dec
jg
repz
mov
lds
sar
mov
adc
or
hlt
adc
and
shl
mov
inc
js
mov
and
enter
xchg
mov
les
fwait
test
inc
inc
mov
fcomp
loop
or
push
pop
outs
jg
mov
mov
int3
or
mov
push
sbb
or
xchg
pushw
jle
push
mov
in
and
cmps
push
mov
sub
mov
adc
jl
and
stos
mov
xor
movs
xor
jl
push
test
xor
sahf
push
sub
sub
out
push
rol
and
mov
loopne
rol
cmp
ja
or
add
xor
push
push
or
mov
loope
repz
inc
mov
push
sbb
xchg
inc
clc
lods
movs
add
mov
inc
jge
dec
aam
mov
push
bound
(bad)
cmp
data16
jmp
cld
popf
scas
add
mov
mov
mov
repnz
in
mov
add
mov
ret
not
sub
sub
test
and
xchg
cmp
into
push
dec
push
cmps
cs
fld
mov
fcos
mov
cmp
jne
jmp
dec
sub
pop
or
push
mov
pop
out
push
aam
mov
test
in
scas
lods
mov
fist
cmp
add
(bad)
jmp
mov
in
cmps
mov
mov
test
out
dec
adc
add
push
add
or
dec
sub
sbb
in
cmps
mov
aad
mov
stos
or
jle
jno
shl
test
xchg
ds
loop
inc
or
pop
gs
jge
leave
mov
rcl
xor
es
popa
push
inc
add
cmp
pop
mov
hlt
or
addr16
and
iret
stos
jmp
fsubr
fbld
or
xchg
cmp
push
or
out
sub
movs
or
add
out
pop
in
add
jnp
scas
loopne
mov
xlat
cdq
pop
add
mov
(bad)
jne
inc
inc
xchg
xor
call
loope
clc
mov
(bad)
mov
mov
and
mov
(bad)
popa
outs
inc
(bad)
aad
pop
ds
and
jb
std
dec
dec
ins
adc
pusha
pop
fidiv
pop
xlat
pop
imul
cld
out
cdq
stos
dec
stc
cmp
loopne
retf
clc
(bad)
xchg
push
mov
cmp
jnp
jecxz
(bad)
adc
and
pusha
pushf
ror
(bad)
sbb
out
jbe
aas
in
cmp
pop
pop
ror
fdiv
imul
jmp
jl
retf
test
dec
into
movs
mov
cld
mov
in
nop
repnz
les
sti
mov
les
xor
ucomiss
xchg
out
or
mov
aaa
or
xchg
jg
push
or
mov
ficomp
aam
add
repz
lods
sahf
imul
jno
sbb
jo
mov
jbe
add
cmp
test
stos
jg
scas
xlat
cmp
in
call
adc
xlat
jecxz
jge
or
mov
pop
jge
and
push
addr16
outs
mov
(bad)
mov
inc
jo
adc
ret
fiadd
lea
jle
dec
sar
lods
mov
push
popa
sub
mov
sub
jmp
fist
jp
int
or
adc
cmp
add
xor
bound
jo
repnz
jbe
es
xor
and
dec
jg
inc
sbb
ins
add
out
add
icebp
sub
jl
and
or
lods
ds
arpl
cmp
mov
xchg
sbb
inc
mov
mov
mov
shl
jle
mov
adc
sub
cmp
in
cmc
cwde
adc
gs
mov
(bad)
mov
in
xchg
or
out
jne
(bad)
in
jp
dec
push
push
lea
cmp
out
in
and
cmp
jg
or
adc
scas
add
pop
push
ret
outs
in
mov
ins
push
adc
push
pop
sbb
jnp
loopne
dec
popf
mov
mov
or
mov
ret
inc
cmp
jb
leave
or
test
neg
or
lock
es
dec
aaa
add
cwde
ror
sub
fst
dec
pshufw
push
mov
sahf
pop
or
imul
movs
inc
and
retf
outs
pushf
not
pop
pop
xlat
mov
nop
add
addr16
int
cld
outs
ret
adc
leave
mov
jl
test
test
dec
mov
(bad)
pushf
stc
movs
hlt
or
inc
jnp
push
inc
inc
add
jmp
sbb
clc
mov
xor
loopne
push
sbb
stos
cli
mov
mov
bound
mov
cld
in
xchg
cmp
sbb
mov
(bad)
in
dec
xor
add
std
fstp
push
pop
jbe
dec
in
arpl
in
jle
jmp
clc
lea
je
jnp
mov
add
into
mov
and
fist
mov
inc
fcom
cmp
mov
cmps
ficomp
sar
pushf
mov
call
cmp
gs
jg
loop
ja
lods
sub
push
test
jg
dec
ret
pop
es
mov
loopne
iret
pusha
lahf
imul
jae
in
ror
stc
cmp
jl
in
pop
retf
sub
inc
popa
int3
jl
add
ja
hlt
ins
hlt
add
dec
cli
aas
mov
dec
add
dec
adc
pusha
rcr
mov
mov
pushf
jne
pop
mov
test
sbb
xor
jg
nop
and
daa
leave
imul
push
cdq
mov
test
sti
mov
mov
es
iret
sbb
cwde
and
ins
fadd
xchg
icebp
inc
cwde
rol
cmps
mov
jp
jge
push
leave
xchg
and
pop
dec
fimul
or
mov
mov
jmp
stc
(bad)
imul
pop
push
pushf
add
loope
lds
movs
pop
jo
repnz
out
test
call
mov
pop
add
mov
sbb
pop
retf
aad
pop
mov
push
shr
pop
mov
imul
xor
out
sbb
(bad)
xchg
enter
imul
hlt
sbb
cmc
cmp
aad
inc
mov
pop
outs
xchg
std
sbb
cld
loop
into
inc
bnd
xchg
test
xor
xor
call
jl
lea
shl
pushf
(bad)
loope
or
mov
loopne
cli
inc
sub
es
fsub
push
sbb
icebp
mov
xlat
add
ins
sub
je
mov
(bad)
repnz
add
add
cmp
int
aam
push
push
sbb
and
leave
and
add
xor
cmps
lods
repz
push
fnsave
jbe
cs
(bad)
sub
mov
inc
das
data16
aaa
ret
daa
mov
fs
push
pop
ret
jg
imul
cmps
ficomp
jnp
mov
loope
cmp
push
mov
stos
loopne
(bad)
lock
inc
dec
test
fistp
sub
dec
and
lea
daa
aam
xchg
cli
test
inc
sbb
or
jbe
pop
and
mov
ret
cmp
iret
mov
mov
ss
mov
xor
fcmovnbe
cmp
popf
fisubr
out
enter
sub
adc
arpl
jnp
mov
gs
adc
sbb
xor
aaa
movs
daa
shl
in
cmp
repz
xchg
and
pop
hlt
in
ins
in
dec
pusha
mov
mov
aad
inc
jecxz
jge
aad
cld
int
ret
adc
or
jmp
cmc
push
fidiv
jg
pop
les
fsub
sub
pop
lods
pop
cmp
xchg
xchg
mov
fs
push
push
lea
cli
stos
dec
xor
adc
fdivr
ret
cmp
ds
push
ret
gs
inc
inc
repz
xor
pop
cmp
into
inc
xor
(bad)
repnz
test
xor
sub
mov
xchg
xor
popa
lahf
lods
pop
xor
scas
dec
loop
cwde
into
fstp
xchg
push
in
mov
dec
retf
in
push
xor
leave
sub
addr16
mov
xor
imul
pop
outs
ret
cmp
mov
bnd
shr
stos
dec
enter
push
xchg
mov
movs
nop
ds
loope
clc
pop
in
or
adc
xchg
dec
mov
mov
xor
add
in
loope
repz
sbb
std
loop
push
push
xchg
cmc
mov
popa
cwde
std
aaa
mov
inc
xchg
scas
mov
dec
mov
shl
scas
jb
sbb
popf
bnd
imul
xlat
inc
fsub
jp
mov
pop
(bad)
push
and
ds
mov
in
outs
iret
mov
mov
repz
sub
xor
pop
pop
pusha
xor
mov
push
loope
push
sbb
lock
dec
and
add
(bad)
in
movs
sbb
sti
xchg
int3
lods
inc
(bad)
adc
les
inc
int3
xor
cmc
(bad)
or
jl
ins
movs
ds
dec
stos
xor
mov
popf
sub
mov
ja
pop
aam
xor
and
lods
(bad)
out
jno
data16
or
cmp
repnz
retf
(bad)
out
stos
movs
into
(bad)
daa
push
or
pop
push
xchg
mov
loope
mov
mov
add
aam
sub
test
enter
std
out
pop
cmp
cmp
test
dec
push
mov
scas
jmp
mov
retf
(bad)
and
push
cmp
adc
dec
add
bound
stos
scas
in
cs
ret
xor
mov
stos
ins
leave
les
sbb
mov
xchg
out
fild
and
ror
and
sub
and
mov
xchg
mov
sbb
pusha
and
(bad)
das
ins
rcr
movs
std
xor
jge
test
add
enter
lahf
sub
push
jle
cmps
js
jg
inc
(bad)
pop
aam
sbb
cmps
adc
sar
mov
pusha
jb
pusha
and
push
cmp
test
lds
add
mov
mov
jae
add
test
out
rcl
and
movs
pop
xor
in
add
pop
add
pushf
jb
mov
xchg
jg
mov
int3
test
das
add
jmp
icebp
mov
inc
dec
out
xchg
jne
arpl
adc
test
jne
jnp
push
sub
xor
and
enter
mov
or
fcom
retf
mov
loopne
outs
out
jae
pop
pop
in
lea
test
mov
cmp
sub
pop
push
and
cwde
push
xor
xchg
mov
and
in
stos
cld
shl
pop
ror
or
push
push
adc
pop
call
pop
gs
jb
mov
jle
and
adc
cmc
mov
mov
sbb
lea
adc
hlt
mov
or
mov
push
jo
movs
fisttp
arpl
stc
sbb
test
stos
mov
xchg
pusha
jg
into
fsub
lods
lea
jb
lods
arpl
mov
out
bound
imul
jl
mov
jl
aam
push
aad
push
cmp
add
je
iret
mov
jo
xchg
in
xor
jl
sub
into
test
inc
cmp
fistp
ins
fisttp
sub
imul
jbe
in
rcr
loop
rcr
mov
or
aam
mov
push
add
jbe
loop
cmp
xlat
popf
or
int
js
pop
scas
mov
cs
xlat
jno
loope
sbb
xor
xchg
push
cs
dec
dec
mov
pop
pusha
mov
jno
xor
add
jne
push
(bad)
scas
or
rol
iret
push
imul
pop
and
(bad)
out
shr
mov
aaa
xchg
xchg
out
dec
push
inc
f2xm1
mov
aam
popf
or
jo
pop
lea
pop
shl
aam
fdiv
outs
retf
cld
push
int
jge
out
mov
retf
adc
inc
fnsave
push
(bad)
adc
xor
pop
int3
call
sbb
xchg
add
dec
cld
(bad)
shl
test
or
xchg
loopne
loope
jp
or
adc
test
jmp
loop
mov
sub
sub
pop
dec
inc
cmp
das
retf
mov
ins
adc
cwde
push
popa
cdq
dec
jo
add
fstp
xor
stos
jo
iret
lods
cmc
lods
iret
and
pop
and
dec
in
mov
jp
fld
enter
push
iret
(bad)
mov
push
push
pop
or
ins
sub
test
jb
out
mov
fcomp
enter
push
outs
push
jg
push
jns
mov
push
cmp
xor
daa
es
or
ret
clc
jl
sub
jne
xlat
inc
adc
pop
pop
sbb
es
push
mov
mov
fcom
ds
rcr
inc
or
xor
rol
cmovg
and
mov
jle
mov
push
jle
dec
and
test
shl
inc
idiv
icebp
mov
sub
jle
aam
inc
xchg
rcr
dec
ror
call
ret
scas
jnp
(bad)
(bad)
adc
add
cli
push
fsubr
out
cmp
mov
pop
xor
cmps
mov
nop
jp
lds
xor
mov
or
adc
mov
pop
mov
mul
ds
shr
push
push
xchg
retf
mov
push
inc
rcl
xor
mov
mov
int3
mov
in
popa
ss
sti
jae
xchg
cmp
outs
adc
aaa
in
pop
add
lea
(bad)
xor
inc
ret
mov
movs
fwait
and
pop
cmp
jo
popf
jle
fild
fadd
ja
sub
jne
mov
rol
xlat
call
or
movs
and
xchg
add
adc
and
test
and
je
sub
scas
sub
mov
out
fnsave
pop
sahf
jne
in
mov
mov
movs
jbe
and
fisttp
or
mov
push
or
ret
mov
sub
in
pop
ja
push
enter
test
repz
ret
jmp
fnstsw
jb
test
jecxz
mov
imul
adc
xor
hlt
xor
xor
xchg
call
sbb
dec
adc
xchg
pop
pop
rol
sbb
nop
jmp
push
rcl
scas
add
sub
ss
cmps
sub
mov
sub
lea
scas
dec
shl
pop
(bad)
retf
cld
out
inc
dec
push
shl
fidiv
sub
jmp
xchg
adc
push
cmp
inc
retf
frndint
dec
sbb
rol
push
les
test
mov
push
out
mov
xlat
ja
pop
inc
cld
push
add
sbb
mov
mov
movs
mov
les
add
sub
dec
xchg
fld
int3
push
mov
sbb
rcr
cmp
popf
add
leave
jbe
out
outs
sbb
pop
push
clc
(bad)
icebp
jne
push
in
or
int3
mov
cmp
cmps
mov
inc
dec
dec
mov
(bad)
mov
call
hlt
mov
add
pop
jb
adc
outs
data16
xchg
dec
outs
sti
lea
gs
inc
xor
inc
aas
and
inc
sar
pop
add
xchg
lods
push
les
sbb
iret
out
cmp
dec
test
loopne
mov
dec
repnz
(bad)
int
pop
ss
(bad)
sbb
outs
mov
mov
jb
loope
mov
aaa
test
fdivr
lods
xlat
and
popf
xchg
ins
outs
mov
shr
shl
bound
mov
out
fwait
(bad)
outs
fstp
pop
add
or
sbb
dec
mov
pop
xor
push
sbb
pop
cmp
fdivr
pop
lds
test
movs
lea
jg
mov
pop
gs
movs
mov
fdivr
jl
cmp
repz
pushf
jl
inc
sbb
retf
add
idiv
add
loope
sub
movs
(bad)
push
ins
std
xchg
mov
(bad)
mov
xor
adc
or
jns
lea
inc
int3
cmp
mov
jle
ins
xchg
mov
mov
retf
ja
jp
jge
push
push
out
add
xchg
xor
mov
call
dec
inc
rol
rol
and
xor
call
test
leave
retf
sbb
retf
jne
sbb
cdq
test
out
sub
sbb
jo
test
fdiv
jmp
pushf
inc
clc
push
pop
mov
call
pop
sbb
aas
xchg
lods
pop
mov
xor
dec
stc
int
test
jo
push
enter
ja
or
ins
sub
inc
adc
js
add
pop
or
and
lds
ins
pop
out
inc
in
mov
jecxz
cmp
stos
sbb
push
cmps
cmp
push
mov
or
dec
mov
rcr
mov
lods
cld
mov
es
pushf
jb
data16
push
mov
les
add
test
pop
out
clc
aas
jmp
movs
mov
(bad)
lods
cmp
psubsb
inc
jge
push
aaa
mov
xor
pop
repz
mov
test
nop
jae
xlat
popa
out
jmp
jle
mov
pop
pop
or
js
sti
sbb
fsubr
repz
je
leave
dec
ficom
sbb
aas
mov
pop
test
inc
xor
dec
js
mov
cmp
imul
arpl
das
arpl
push
and
and
push
ficom
adc
fild
mov
sbb
iret
xchg
dec
xor
jo
add
je
mov
cs
push
outs
or
pop
mov
mov
sbb
rcl
sbb
jle
dec
and
mov
jmp
mov
cdq
sbb
mov
enter
xor
cmp
jb
stc
dec
dec
daa
inc
sahf
fild
aam
inc
pop
lea
pop
and
in
mov
popf
jb
out
inc
mov
xor
ud1
mov
push
adc
repnz
data16
ret
add
cdq
lahf
lahf
xchg
jbe
sub
or
jecxz
mov
adc
sub
shr
pop
repnz
xchg
jg
xor
add
retf
(bad)
and
shl
xchg
je
inc
mov
add
sub
xchg
xchg
mov
int
and
mov
ins
pop
jo
inc
cli
cwde
test
jl
and
add
push
xchg
xor
cld
and
mov
mov
repz
inc
leave
and
imul
cmp
aas
into
arpl
mov
pop
outs
sbb
dec
sub
es
loop
enter
rol
dec
xchg
popw
xchg
repnz
cmp
in
sbb
rep
mov
mov
sbb
adc
cmp
jl
int3
scas
fsubp
arpl
repnz
aaa
test
jl
inc
inc
push
repz
push
add
pop
sbb
push
in
ret
xchg
push
push
mov
cld
pop
out
xchg
int
loopne
ror
call
stos
xchg
jge
xlat
stos
fucomi
je
loope
inc
dec
push
mov
cmp
dec
sub
ret
jg
lds
push
or
mov
mov
push
cmp
in
(bad)
repnz
jnp
cwde
sub
(bad)
in
das
call
or
mov
adc
and
mov
dec
mov
into
jno
enter
pushf
stos
popf
adc
imul
dec
xlat
cmp
rcr
int
xchg
popa
xor
ins
xor
pop
mov
xchg
bound
mov
and
mov
xor
adc
inc
pop
and
mov
sbb
mov
aam
gs
sbb
aad
scas
push
mov
jo
cs
out
jae
mov
clc
dec
clc
mov
int
mov
jnp
cmp
adc
xor
movs
sbb
mov
(bad)
adc
loope
mov
sahf
sub
js
jne
xchg
xchg
lea
pop
mov
dec
mov
pop
push
les
jo
popf
(bad)
shr
sbb
jns
and
popa
push
push
jmp
jge
mov
mov
fadd
push
mov
test
adc
movs
adc
sub
movs
sub
xchg
mov
lahf
xchg
xchg
dec
adc
push
sbb
and
outs
rol
gs
aam
jmp
retf
sahf
jle
mov
xchg
xor
mov
jp
lods
jecxz
inc
sub
loop
out
dec
popf
(bad)
fbstp
add
repnz
mov
jmp
or
(bad)
loopne
rol
loopne
dec
retf
sub
xchg
fdivr
out
mov
outs
sub
ss
fbstp
sbb
push
xchg
pop
cmp
lahf
sar
and
js
jp
dec
int
sub
retf
into
enter
leave
add
xchg
test
jmp
fs
cli
pop
cmps
clc
sti
(bad)
fdivr
(bad)
xlat
cmp
push
call
fs
ret
pop
cmp
ja
push
div
clc
adc
int
dec
fcom
mov
xchg
in
cs
div
pusha
xlat
sbb
mov
pop
(bad)
call
out
xor
punpcklbw
mov
lods
(bad)
(bad)
aad
call
pop
or
out
push
fistp
shl
cmps
scas
cmp
push
nop
nop
push
jmp
lods
mov
inc
loope
sbb
shl
push
ret
lock
jge
inc
push
(bad)
push
ss
mov
mov
repnz
or
pop
imul
in
dec
lods
add
aaa
jae
and
popa
and
popf
adc
mov
push
mov
test
mov
sbb
jmp
dec
push
es
test
les
aad
(bad)
repnz
je
les
adc
and
sub
mov
ss
xor
fnstsw
adc
or
mov
mov
push
lea
scas
xchg
std
(bad)
xchg
shl
cmc
xor
push
inc
mov
retf
bound
retf
rol
or
loop
xor
and
stos
das
push
loop
dec
ret
inc
popf
sub
push
push
sahf
arpl
jnp
sahf
jmp
loop
pop
dec
add
addr16
in
aas
jb
jns
mov
test
sbb
mov
sub
popa
stos
mov
pop
mov
jno
inc
arpl
mov
stos
or
inc
aas
retf
sbb
sahf
sbb
xor
jmp
(bad)
into
pop
scas
test
inc
xchg
adc
pop
call
adc
dec
sbb
mov
sub
inc
ffreep
test
cli
mov
ret
sbb
and
xchg
shl
stos
inc
shl
jnp
adc
nop
and
mov
jecxz
cmp
out
push
in
(bad)
sub
adc
fmulp
gs
push
or
cmp
imul
xchg
and
arpl
jne
jp
sub
mov
fdivr
mov
cmp
mov
add
pop
pop
test
out
stc
test
sub
js
(bad)
sub
leave
jmp
lea
ins
(bad)
std
stos
fsubr
cs
xor
or
add
push
xor
dec
or
xlat
mov
inc
(bad)
(bad)
adc
in
inc
ret
xchg
sub
mov
push
and
xchg
(bad)
stc
xor
sbb
pushf
fdiv
add
icebp
jns
rcl
leave
enter
scas
imul
mov
retf
js
add
push
dec
push
int3
add
les
cmp
dec
push
inc
jbe
int3
retf
dec
jae
jg
mov
push
mov
idiv
stc
jnp
inc
je
imul
pop
loope
lock
dec
sti
pop
pop
push
push
xchg
jo
mov
xchg
rcl
and
std
sbb
mov
jecxz
mov
push
repnz
mov
push
int3
std
sbb
lods
out
pop
popf
movs
bound
jne
sub
das
xor
jmp
fsubr
int3
cmc
push
cmp
out
loope
sar
addr16
(bad)
pop
rcl
sbb
dec
mov
retf
mov
out
push
sahf
ins
xor
xor
mov
fwait
or
push
repnz
or
sbb
xlat
mov
clc
sbb
xchg
and
fcmovu
cmp
mov
push
int
inc
cwde
pop
retf
pushf
aam
ret
retf
push
dec
mov
cmp
pop
idiv
cs
sub
retf
sub
or
xor
adc
add
inc
and
int3
pusha
cdq
nop
jno
adc
dec
leave
mov
movs
out
or
cmp
jne
test
jbe
loope
dec
pop
mov
sbb
ret
std
and
shl
dec
xchg
cmps
mov
aas
mov
pop
ret
mov
loopne
cmp
mov
or
mov
xchg
xchg
ins
cmp
loop
mov
and
add
sub
in
or
pop
mov
in
push
(bad)
mov
push
call
stos
add
repnz
mov
cmps
ja
(bad)
int3
jo
imul
jno
push
imul
in
pop
lds
xchg
in
paddw
dec
sub
push
mov
rcr
sbb
adc
arpl
fs
dec
shl
jno
ror
inc
xor
push
add
xchg
mov
mov
cmps
and
les
and
cdq
jmp
mov
gs
cmp
pop
add
ins
and
out
or
sar
add
imul
out
shr
imul
push
cmp
add
push
loopne
(bad)
cmc
ret
int3
mov
mov
lahf
cmp
inc
xor
sbb
lahf
out
push
lods
rcl
inc
mov
fs
js
arpl
out
out
mov
fwait
clc
lods
call
mov
lea
jecxz
in
js
gs
pop
pop
jb
in
mov
inc
xor
mov
push
test
xchg
dec
inc
pop
sbb
push
sbb
mov
pop
mov
in
lea
dec
retf
cmps
scas
fst
stos
imul
cli
and
sbb
sbb
cmp
dec
cld
push
sbb
in
inc
popa
inc
lods
mov
std
mov
pop
inc
sub
jg
lahf
out
mov
xchg
stos
cdq
or
jge
xor
xor
xlat
sub
frstpm(287
cmp
dec
stos
mov
stos
aam
xor
or
test
cld
mov
dec
jb
stos
mov
lods
mul
in
in
repnz
fisubr
outs
jp
dec
adc
setg
push
fwait
xor
pop
mov
xor
stos
retf
mov
imul
mov
jmp
adc
mov
out
fsub
cdq
ins
dec
lds
mov
adc
jg
dec
cmp
cmp
adc
xchg
out
push
pop
xor
in
xchg
push
imul
sub
jae
sub
mov
mov
neg
lods
repnz
std
or
outs
pop
shl
fild
sahf
jp
mov
or
ret
ins
mov
cld
(bad)
mov
cdq
xchg
bnd
cmp
sahf
sbb
in
cmp
and
push
dec
push
or
or
shl
inc
lock
jge
fild
in
add
imul
test
dec
ror
jge
call
imul
ret
or
retf
pop
push
add
push
xchg
js
mov
adc
lea
std
repz
sbb
and
sub
aam
jno
test
fistp
fcom
xchg
push
pop
rcr
cmc
jbe
cmp
inc
jns
lea
jmp
dec
fmul
or
icebp
pusha
fld
aam
stc
addr16
sub
sub
jno
mov
push
jg
pop
push
inc
arpl
xlat
test
jae
ss
pushf
fucomip
stc
out
mov
fdivr
push
pushf
aaa
cmp
push
in
aaa
out
inc
and
jl
fisubr
sub
(bad)
loopne
adc
pop
jbe
repnz
data16
lods
std
sbb
dec
nop
add
sbb
cmp
jmp
pop
xlat
bound
mov
test
cmps
scas
leave
adc
enter
pop
or
dec
xchg
lock
cmp
fnsave
push
scas
xor
push
jg
pop
cmp
cmps
push
sub
fild
jnp
mov
loopne
mov
neg
ins
retf
cmp
fst
inc
lahf
or
call
mov
mov
sub
xchg
pop
mov
inc
lock
lods
sub
(bad)
or
cmp
jp
sub
loopne
or
ja
dec
sar
jmp
or
scas
stos
jg
mov
sbb
xlat
repnz
fcom
fsubr
adc
stos
inc
std
out
fs
call
mov
inc
or
mov
cmp
je
jne
jmp
lahf
add
mov
rcr
data16
ficom
xchg
sub
sbb
push
mov
aad
jnp
mov
mov
inc
mov
repz
cmp
xchg
mov
loopne
mov
sbb
into
add
and
sar
cmps
pop
xor
pop
cmps
test
mov
sub
xor
cwde
and
mov
arpl
add
sbb
mov
je
push
fnsave
scas
push
fstp
adc
fbld
mov
scas
sar
(bad)
imul
mov
inc
rcr
adc
or
sbb
push
xchg
mov
mov
pushf
fistp
dec
icebp
cli
or
adc
jbe
sbb
xchg
(bad)
mov
xchg
cli
mov
cli
sahf
mov
stc
aaa
inc
adc
inc
pop
pop
xor
xchg
pop
mov
cmps
dec
cmc
dec
mov
add
repnz
aam
(bad)
ror
lods
jmp
ja
dec
adc
cmp
loop
in
in
or
frstor
(bad)
fdiv
mov
push
nop
cmp
(bad)
out
repz
mov
in
in
lds
div
(bad)
loope
cld
pop
mov
xor
outs
jl
(bad)
mov
enter
ss
mov
ja
jg
push
and
sbb
mov
loope
adc
inc
mov
mov
push
jnp
pop
push
jae
(bad)
ins
pop
push
sub
push
loope
sti
(bad)
xor
adc
inc
lods
sbb
frstor
jge
xchg
aam
test
adc
mov
stos
dec
arpl
ds
dec
lods
xchg
mov
into
daa
and
and
or
mov
addr16
cmp
push
dec
fwait
rcl
aaa
out
jecxz
jmp
hlt
inc
rcr
jne
or
add
stos
bound
dec
movs
mov
(bad)
repnz
inc
dec
fnstcw
in
push
lods
repnz
repnz
add
inc
pop
push
inc
mul
in
fild
stos
rcr
jg
mov
pop
xor
in
loopne
pop
pop
jns
xchg
je
add
mov
or
mov
sbb
pop
imul
pop
push
fsubr
(bad)
fisub
fistp
dec
pop
or
ret
mov
(bad)
or
fwait
push
in
fsubr
in
and
dec
adc
ror
dec
cmp
xor
jecxz
call
les
jle
push
scas
lods
or
adc
imul
cmp
xor
les
dec
jo
in
call
adc
xor
rcl
push
xor
out
mov
cs
xor
cmps
sub
imul
data16
mov
xchg
ja
into
fiadd
dec
in
into
jns
in
push
das
cli
add
pop
xlat
cmps
icebp
scas
out
sbb
jmp
inc
jmp
cmp
sar
mov
stos
mov
fimul
jl
dec
stc
stc
mov
inc
test
jne
or
xor
ret
mov
xlat
test
push
mov
xchg
int
mov
arpl
cld
xchg
xchg
lahf
or
cmp
mov
jg
in
sub
inc
inc
mov
inc
pusha
js
push
(bad)
out
rol
mov
adc
lahf
pop
rol
pusha
and
jle
push
dec
sbb
sub
lods
inc
bound
fistp
and
icebp
dec
mov
or
and
lea
push
xor
cmp
aaa
pop
jbe
test
adc
ds
mov
pop
xchg
jp
scas
test
mov
shl
nop
push
int3
dec
out
iret
lods
adc
push
popf
shl
nop
aas
xchg
sub
ds
cwde
bound
cmp
int3
xlat
mov
jno
mov
sbb
lock
stos
imul
in
adc
pop
cld
add
and
add
(bad)
xor
inc
pusha
sti
dec
cmps
ret
ins
mov
and
jae
push
mov
sub
iret
xchg
push
rcl
jo
stc
nop
mov
data16
jge
and
aas
aas
div
cs
ss
fidiv
or
pop
inc
daa
repnz
cmps
pop
jae
repnz
fs
jb
test
and
iret
shr
push
push
movs
fst
mov
js
push
fild
xor
inc
hlt
(bad)
bound
pop
xchg
ss
arpl
xchg
aam
ss
lock
xchg
or
cmps
xchg
push
aas
fisttp
call
fwait
xlat
dec
push
cmc
and
add
call
fwait
xor
aam
lea
cwde
jno
dec
mov
(bad)
xlat
in
aam
aaa
jp
mov
push
fimul
pusha
ins
xchg
out
push
mov
retf
scas
mov
rcr
and
pop
and
fadd
repz
out
das
stc
das
popf
out
mov
jnp
lock
mov
scas
xor
shl
jb
or
dec
inc
sub
mov
mov
iret
push
mov
jne
and
xchg
cli
hlt
cmp
xchg
aam
dec
xor
and
sti
cli
and
scas
pop
cs
mov
lahf
shl
cmp
mov
mov
enter
(bad)
jge
dec
dec
pusha
jae
ins
add
inc
fist
inc
jne
call
ja
aad
leave
inc
mov
jle
push
ret
(bad)
loope
sbb
jmp
adc
bound
(bad)
test
das
gs
mov
mov
inc
add
cmp
push
movs
ins
(bad)
or
sti
fdivr
loopne
(bad)
jge
cld
retf
into
add
cmps
or
sahf
push
in
(bad)
mov
mov
data16
mov
xor
dec
pop
inc
fs
pop
shr
test
xor
push
or
int
push
fdiv
mov
fwait
cld
popf
movs
push
rol
pop
and
repnz
push
loopne
ficom
in
leave
adc
out
adc
add
fdivr
lock
fstp
jae
or
adc
xchg
popa
imul
icebp
hlt
sahf
adc
add
push
in
test
xor
xchg
xor
push
mov
cli
das
icebp
call
test
aaa
sahf
push
mov
mov
mov
out
inc
std
jmp
ja
push
and
mov
sti
sar
fbstp
shl
aas
popf
loope
bound
add
icebp
add
adc
into
das
js
fwait
jne
nop
add
loop
shl
hlt
sbb
es
mov
stc
or
dec
shr
push
repnz
xor
out
mov
loope
ror
stos
stc
pop
bound
xchg
jns
dec
cmp
inc
lea
pop
xchg
retf
mov
fwait
lock
in
xor
aaa
jmp
xor
mov
jmp
inc
in
test
std
into
jl
scas
inc
cdq
aaa
pop
(bad)
mov
into
je
mov
add
mov
movs
adc
xchg
mov
cmp
shr
push
dec
aam
sbb
xor
and
adc
clc
and
outs
std
sbb
mov
fdiv
js
mov
movs
mov
cmc
mov
sti
mov
cmp
and
lds
xchg
int
fnsave
xchg
mov
mov
hlt
mov
dec
and
test
fbstp
std
mov
add
mov
pusha
stos
mov
fcmovnb
leave
popf
inc
xchg
popa
jo
fucomip
out
sti
(bad)
cli
cdq
sbb
mov
test
or
sub
leave
jp
mov
lea
lods
inc
aas
push
movs
lds
cmc
mov
bound
jge
cmc
inc
imul
adc
add
sbb
push
test
aaa
mov
add
mov
cmp
cdq
bound
ret
das
(bad)
cmps
inc
movs
cmc
imul
sbb
xchg
sahf
cs
inc
and
push
(bad)
sub
xor
lahf
add
lods
cmc
ins
std
(bad)
in
in
push
inc
or
sub
mov
repz
push
test
fstp
and
sbb
jmp
pop
pop
sub
sbb
arpl
pop
les
lock
test
movs
scas
std
call
mov
lods
(bad)
nop
mov
daa
dec
call
sub
pusha
xor
retf
rcr
mov
sub
in
leave
sub
retf
add
mov
es
(bad)
shl
adc
inc
cmps
stos
shl
sbb
cmp
mov
and
jmp
mov
ss
pop
xlat
mov
dec
mov
xchg
call
bound
popa
and
and
xchg
push
pop
pop
movs
cmps
clc
adc
je
repnz
sub
adc
mov
mov
cmps
sbb
rol
imul
pusha
and
push
lods
adc
fwait
lahf
daa
xor
jmp
aam
dec
push
out
aam
fs
add
das
cmp
xchg
dec
ror
lds
cmp
mov
fcomp
pop
retf
ds
hlt
retf
test
push
in
cld
movs
mov
pop
push
int3
cli
sahf
aam
add
mov
dec
jbe
hlt
movs
xchg
mov
neg
enter
fcom
xchg
pop
daa
xchg
cdq
mov
mov
dec
lahf
not
jae
rcl
fnstcw
das
xchg
lahf
adc
nop
adc
cmp
subps
adc
outs
test
xor
mov
je
jo
(bad)
mov
fwait
movs
cmp
adc
sbb
pop
movs
cmp
enter
test
jo
loopne
(bad)
ror
lods
push
lahf
mov
xchg
mov
popa
sub
data16
jmp
es
and
int
or
scas
jae
aas
lds
mov
xlat
push
movs
mov
in
(bad)
movs
mov
dec
sahf
pop
lea
loop
nop
dec
ret
ds
jecxz
mov
push
jg
(bad)
dec
cmp
and
test
jge
mov
int3
sbb
mov
and
les
(bad)
mov
enter
inc
fs
(bad)
xchg
fisttp
or
adc
lds
sbb
xchg
pop
add
psubsw
xchg
push
and
dec
jp
(bad)
sub
movs
push
add
cmp
cli
imul
jl
inc
mov
leave
push
inc
push
out
ficom
sbb
jo
(bad)
pop
xchg
arpl
mov
inc
jle
lods
loop
data16
pop
push
mov
cdq
popa
std
mov
push
in
jmp
push
mov
lods
lock
js
inc
adc
and
outs
inc
aas
adc
push
mov
hlt
push
(bad)
test
jmp
imul
(bad)
sub
jmp
movs
lods
lea
hlt
(bad)
iret
popf
jmp
dec
aad
test
int
cs
loopne
(bad)
ror
imul
addr16
pop
mov
scas
jno
test
cmp
dec
call
loope
fistp
xchg
call
push
or
cmp
int
mov
jp
enter
hlt
hlt
mov
clc
xchg
mov
or
in
cdq
adc
(bad)
call
adc
and
outs
and
pop
xor
outs
lahf
out
test
cli
pop
inc
(bad)
repz
xchg
pop
sub
scas
ins
fcomp
les
test
xchg
pop
cmp
and
push
mov
cli
fisub
or
jno
(bad)
dec
xchg
iret
pop
cmp
mov
sti
xor
cmp
out
lock
jecxz
jecxz
mov
or
mov
cs
popf
mov
pusha
daa
jle
xlat
test
add
cli
pop
or
xchg
adc
xor
rol
xchg
push
push
pop
or
push
jnp
push
jmp
add
jle
icebp
call
test
bound
push
sub
mov
loopne
inc
push
inc
and
jl
adc
inc
xor
ror
rcr
push
pop
out
xchg
inc
in
or
mov
aaa
leave
xor
jno
sbb
sbb
xchg
mov
stc
add
sub
fld
dec
inc
add
dec
in
mov
test
and
not
sbb
or
in
inc
sub
cld
adc
dec
cmp
fadd
lea
shl
vcmpnless
mov
add
scas
lds
imul
cmps
in
sbb
fstp
stos
mov
lds
jo
fist
cmp
retf
cld
cmp
sub
jecxz
cdq
pop
and
aad
sar
inc
stc
cmps
mov
mov
and
std
mov
das
std
push
sbb
nop
jno
push
ins
push
sar
inc
adc
daa
push
aas
lods
pop
repz
aam
ret
sbb
jle
aad
pusha
aas
cmp
dec
pop
outs
mov
and
gs
pop
jp
mov
fld
mov
mov
jmp
jnp
push
lods
cmps
and
ja
lea
(bad)
mov
repnz
or
addr16
push
inc
push
push
sbb
adc
sbb
test
cmc
add
mov
in
ret
fist
pusha
or
pop
cdq
sbb
add
data16
retf
icebp
jo
jb
les
dec
push
adc
fld
fcomp
sub
hlt
ret
dec
test
shr
and
xchg
or
cmp
cdq
and
dec
mov
jns
push
out
stc
ret
or
icebp
jmp
and
sub
fwait
in
fdiv
and
ret
rcr
or
clc
cmps
pop
ins
xor
adc
push
lods
mov
sbb
or
push
push
pop
mov
sub
(bad)
and
sub
jge
xchg
ins
cdq
ficom
mov
(bad)
push
pop
and
push
push
in
jmp
(bad)
inc
sub
inc
pop
xor
les
out
jecxz
shl
std
outs
mov
cmps
add
outs
scas
inc
outs
mov
es
inc
(bad)
jecxz
push
jns
add
out
loopne
jo
dec
fwait
mov
pop
popa
fld
hlt
ja
pop
mov
fsub
enter
cdq
inc
hlt
adc
mov
dec
mov
ret
jo
dec
cs
xor
jge
lods
movs
add
out
xor
cmp
mov
inc
sbb
push
bound
mov
loop
fldcw
mov
outs
mov
sbb
cmp
stos
cmp
pop
(bad)
iret
inc
push
mov
add
add
mov
sbb
bound
push
repnz
retf
ret
add
pop
dec
inc
pop
ds
sub
sbb
and
into
xor
out
jle
cmp
das
adc
mov
fild
jmp
push
data16
pop
jnp
dec
pop
ins
mov
hlt
adc
xchg
push
mov
ins
dec
loop
sub
fsub
xor
sub
js
sbb
adc
call
push
sbb
fs
movs
mov
out
je
jecxz
adc
rcl
pop
mov
push
xchg
cdq
loop
jns
xlat
scas
lds
retf
xchg
pop
(bad)
hlt
jae
adc
scas
int
xor
jg
mov
dec
mov
repz
dec
mov
and
pop
cmp
jecxz
in
xor
es
clc
(bad)
out
jp
pop
rcl
push
xor
inc
call
leave
jge
sbb
fisttp
(bad)
push
popf
push
fmul
pop
mov
aad
jne
enter
sub
and
xchg
xchg
jns
jmp
sub
cmc
mov
pop
mov
les
mov
popa
ffree
call
sar
imul
test
add
aam
inc
add
mov
mov
das
xchg
push
cmps
std
jbe
out
or
ss
pushf
mov
xchg
cmp
sbb
xor
mov
iret
(bad)
sbb
add
jp
test
dec
and
add
ss
test
fist
inc
or
sbb
mov
and
stos
nop
add
mov
mov
inc
xor
mov
adc
out
syscall
mov
and
pop
jge
jo
movs
sub
dec
add
push
jb
call
bound
pop
out
push
sbb
out
xor
pop
retf
pushf
xchg
daa
imul
stc
jns
pop
dec
or
jecxz
sub
or
pop
enter
mov
jae
in
(bad)
cmp
retf
inc
cmp
dec
fcom
ss
mov
push
cmp
ds
add
not
add
fdivr
repz
adc
mov
rcr
jl
mul
imul
lock
inc
mov
mov
fsubp
(bad)
or
(bad)
push
or
jmp
inc
pop
ret
movs
dec
lds
loop
sahf
jo
das
mov
mul
movs
adc
aad
jmp
mov
xchg
pop
mov
cmp
ficomp
mov
adc
aas
xor
or
in
push
fwait
stc
xchg
xchg
out
jno
out
std
xor
mov
mov
sub
sbb
fld
adc
push
add
inc
jle
adc
pop
sub
aas
mov
dec
scas
mov
bound
sbb
mov
mov
jne
int
add
jge
or
imul
fidiv
sub
psrad
adc
jmp
in
call
ror
retf
adc
dec
cwde
push
outs
bound
or
pop
pop
outs
cli
call
or
jmp
cs
stc
leave
cld
jge
ins
inc
xor
shl
movs
push
into
push
add
cli
add
dec
or
pop
cmp
mov
xchg
jae
adc
mov
xchg
repnz
xchg
scas
lahf
and
jnp
sub
test
dec
or
sahf
cmp
xor
inc
rcr
mov
jb
arpl
push
jns
sbb
cdq
fwait
les
hlt
push
xchg
out
(bad)
movs
dec
loopne
adc
ffreep
repz
gs
jmp
imul
(bad)
cmovnp
in
dec
retf
mov
iret
mov
in
inc
ret
mov
cmps
cmps
and
or
cld
pop
adc
rol
cmp
retf
sub
jns
clc
test
in
dec
or
pop
push
and
push
add
jle
test
or
test
retf
ds
imul
adc
and
(bad)
out
movs
and
mov
shl
sbb
inc
scas
aaa
pop
or
cmp
call
adc
fst
gs
mov
fwait
in
or
jecxz
out
mov
sbb
xor
cmp
mov
push
xor
rol
push
xchg
xchg
adc
stos
out
test
mov
or
ror
stos
push
jmp
(bad)
jl
adc
scas
outs
jo
jns
scas
test
pop
loopne
sahf
push
cwde
cdq
mov
ins
fdivr
int
cs
dec
cmp
mov
leave
movs
ins
ror
test
dec
mov
lods
push
adc
jmp
add
push
les
or
(bad)
aaa
jp
dec
je
loop
jne
out
or
fisubr
cmp
adc
mov
and
mov
jae
sub
sar
cmps
xor
out
int3
mov
or
pushf
or
js
adc
add
scas
push
pop
jl
(bad)
xor
sub
imul
popa
clc
ret
imul
dec
push
add
and
cld
jle
lds
inc
das
mov
sbb
lods
xchg
pushf
or
or
jl
sbb
mov
je
dec
out
rcl
std
(bad)
push
mov
fstp
lds
(bad)
in
int3
ins
or
mov
mov
inc
inc
data16
jne
test
sub
jge
pop
and
xchg
mov
inc
or
dec
dec
arpl
or
sub
push
sub
cmp
inc
or
retf
les
loopne
push
lods
or
xor
fld
push
sbb
inc
or
movs
das
fucomp
xchg
pop
retf
ins
xor
int
(bad)
jnp
dec
ins
and
imul
mov
jno
fcmovbe
mov
hlt
shl
sub
jmp
and
dec
push
pop
mov
out
mov
jle
xlat
xlat
mov
sub
push
adc
jp
mov
cmp
std
xor
stos
xchg
push
xchg
jmp
std
jge
mov
daa
loop
retf
cdq
sub
in
sbb
sbb
jae
sahf
or
lods
call
js
hlt
lods
fbld
mov
push
icebp
xor
movs
and
mov
xchg
sub
mov
and
or
ror
imul
dec
mov
or
std
stos
jge
xchg
push
inc
ins
pushf
mov
dec
ret
repz
jne
int
jns
cmc
cmc
adc
lock
in
push
aas
mov
icebp
dec
jecxz
mov
xor
cmp
push
push
mov
jo
mov
mov
xor
xchg
sub
ds
adc
ror
xchg
push
int3
xor
sti
inc
adc
jbe
xchg
pop
inc
in
(bad)
cld
aaa
aas
push
xor
les
movs
sbb
mov
ins
jmp
scas
jmp
sub
jmp
fwait
sub
(bad)
outs
and
dec
xor
push
fsubr
loopne
inc
jb
lock
jp
sbb
lahf
jge
jae
dec
pop
dec
cmp
inc
inc
(bad)
aaa
dec
mov
test
cmp
fmul
imul
or
add
addr16
or
mov
div
jl
dec
outs
psllq
pop
leave
lds
adc
je
dec
cmp
imul
sub
shl
cli
int3
push
xor
push
stc
fs
cmp
repz
jl
fs
xor
aaa
xchg
sub
adc
sub
das
jecxz
arpl
add
gs
jb
repnz
jle
or
or
clc
xor
icebp
xchg
mov
or
pop
rcr
xchg
jns
int3
cdq
scas
inc
mov
sbb
div
sub
es
push
push
pop
push
hlt
jns
movs
push
and
xchg
push
lods
or
sbb
xor
cmc
jae
fadd
fsubr
dec
retf
adc
jnp
fcmovne
call
push
xlat
inc
mov
dec
inc
in
out
test
pushf
add
mov
clc
cwde
scas
test
lea
cli
fistp
mov
xor
and
add
fsubr
in
faddp
cwde
jae
lahf
std
test
xor
out
cdq
lea
(bad)
adc
hlt
pop
inc
push
js
in
mov
in
inc
push
leave
sbb
mov
shr
xchg
inc
lea
bnd
dec
mov
rcr
fs
dec
mov
xchg
add
ins
clc
dec
dec
xchg
dec
mov
dec
and
push
aaa
test
test
push
adc
push
pop
int
adc
iret
add
cmp
add
xchg
and
sub
imul
(bad)
mov
mov
sbb
test
inc
pop
pop
xor
inc
(bad)
cmp
ins
cld
push
pop
into
mov
add
or
ins
enter
cmc
fnsave
repz
mov
jb
sub
pop
inc
ins
fidiv
xor
mov
popf
aam
dec
sub
jecxz
ins
in
mov
add
in
jns
sub
mov
movs
xor
out
and
jae
pop
cmp
sub
aad
into
cdq
out
xchg
pop
test
mov
test
cmp
mov
jl
lds
adc
cmp
jp
mov
xchg
das
xchg
inc
imul
mov
sbb
bound
adc
dec
rcr
lods
out
push
mov
inc
and
sbb
scas
mov
pop
cmp
cmp
leave
jmp
aad
ja
fwait
bound
mov
jl
cmps
add
mov
adc
mov
sub
jne
pop
(bad)
out
scas
inc
test
inc
movs
jns
or
or
jnp
imul
or
mov
ret
loop
dec
dec
push
sub
out
xchg
dec
in
lea
aad
rol
(bad)
sub
lea
mov
mov
sub
xchg
repz
pop
xor
push
ret
push
add
fs
push
xor
sbb
out
push
cs
jno
lods
daa
(bad)
repz
fsubr
xchg
in
aam
add
clc
pusha
test
test
scas
jbe
add
call
jle
push
pusha
cdq
mulps
add
shl
mov
sub
bound
mov
mov
fs
sub
inc
rol
sub
mov
add
mov
sahf
jo
div
or
jbe
xor
outs
jg
ins
sub
mov
inc
out
bound
into
sub
popa
or
repnz
sbb
lods
adc
jmp
push
add
mov
loope
shl
jb
pop
fisubr
pop
call
add
jmp
push
cmp
adc
dec
das
es
jg
push
mov
rol
pop
sub
jmp
jb
out
cmp
pop
fs
xor
movs
and
or
mov
ins
mov
mov
popa
pop
test
mov
in
xor
add
call
inc
xchg
xlat
dec
jmp
stos
into
(bad)
hlt
addr16
xor
pop
outs
sbb
mov
xchg
lock
mov
sub
jns
call
retf
push
mov
(bad)
test
aas
xchg
sub
sub
adc
jae
je
imul
loopne
es
jge
cmp
pop
jmp
jge
add
dec
fbstp
xor
ss
mov
sbb
cmps
mov
ret
call
rcl
mov
push
gs
push
pop
out
retf
pop
cmp
(bad)
neg
or
in
mov
dec
lea
or
mov
jne
push
jge
pop
ins
mov
in
xchg
outs
lds
pop
or
add
rol
add
sbb
and
xor
sbb
aaa
push
repz
or
fidivr
xor
xor
bound
mov
(bad)
in
shl
(bad)
call
cmp
pop
adc
push
std
mov
and
xchg
xor
data16
xor
(bad)
scas
pop
mov
in
arpl
addr16
cld
mov
pop
xor
jno
out
and
cmp
xchg
xchg
cwde
popa
das
sahf
fild
div
test
imul
scas
data16
scas
(bad)
ficomp
ins
adc
dec
mov
rcl
stos
clc
ret
sub
inc
jmp
neg
xchg
call
sub
icebp
mov
mov
pop
je
inc
sysenter
rcr
cmp
idiv
in
(bad)
cmp
test
movs
jo
sbb
mov
jg
(bad)
retf
(bad)
sub
mov
neg
jmp
hlt
lea
stos
pushf
icebp
xor
out
sub
and
test
mov
or
ret
push
and
cwde
js
call
dec
xor
mov
dec
shl
cmps
lods
fbstp
cmps
and
stos
jl
aaa
pop
imul
mov
(bad)
test
pop
shl
bnd
iret
in
inc
sub
cmp
or
cld
cmc
dec
jae
mov
aas
sbb
jo
dec
jno
mov
test
push
(bad)
ds
outs
call
mov
dec
cwde
push
push
call
dec
not
add
pop
push
and
add
jno
mov
jo
jnp
adc
or
sbb
mov
mov
stos
repnz
int3
dec
or
mov
jo
dec
jle
cmp
jns
inc
repnz
push
mov
xor
cmp
pop
cwde
jns
pop
jle
cmp
jnp
adc
daa
sti
mov
pop
adc
out
clc
loopne
mov
xrelease
add
fwait
es
lock
int
pop
dec
sbb
outs
nop
bound
jmp
sub
pop
mov
outs
out
test
pop
cmc
lods
arpl
or
dec
lds
out
cld
std
jo
push
push
idiv
xchg
addr16
test
inc
in
xchg
mov
push
popf
jmp
mov
dec
xchg
repnz
pushf
jmp
jl
jl
ror
or
dec
fwait
fwait
loopne
imul
sbb
adc
dec
sbb
fcom
into
sbb
pop
and
mov
sahf
loopne
xchg
push
nop
cmp
or
cwde
test
sti
sbb
dec
pop
movs
mov
dec
loope
pop
mov
popf
xchg
jmp
ja
outs
xchg
inc
(bad)
je
pop
or
cli
and
outs
cmp
cmc
scas
pop
test
ins
xor
in
out
or
ds
pop
pop
fmul
cwde
cmp
pusha
adc
(bad)
aas
cld
movs
bound
imul
add
jb
add
cmps
ss
xchg
mov
dec
cwde
sbb
mov
inc
xchg
hlt
inc
xchg
ins
jp
cld
std
xlat
das
gs
aad
pop
mov
jl
fstp
or
inc
adc
or
pop
fisttp
dec
mov
or
adc
pop
push
xor
dec
xchg
cmp
push
ja
sahf
xchg
cmps
mov
stos
cmp
cmp
pop
inc
add
jecxz
bound
xchg
mov
cmp
pop
sar
and
sub
(bad)
cs
cmps
repnz
lods
out
pop
lock
pop
test
ret
aam
arpl
pop
jle
mov
mov
sbb
fs
sbb
bound
loopne
inc
stos
xor
or
lock
add
(bad)
hlt
loopne
jne
je
mov
mov
loope
ret
pop
xor
jo
mov
sub
jecxz
dec
lds
icebp
dec
pop
test
rcl
in
inc
bound
jnp
(bad)
movs
inc
movnti
sub
scas
clc
pop
push
cli
push
or
test
jp
cmp
sub
adc
fs
lock
paddd
mov
push
jo
or
lahf
push
or
inc
(bad)
sbb
and
std
xlat
ins
sub
xchg
fisub
mov
sub
mov
add
enter
pop
test
cli
loopne
dec
cmp
mov
neg
mov
bound
jb
inc
stc
push
js
cmps
test
pop
dec
inc
inc
jae
xor
inc
jne
daa
sub
pop
loopne
enter
pop
mov
loopne
lods
sbb
cmp
ja
push
jb
lea
or
fadd
inc
mov
sbb
std
sar
push
popa
dec
xchg
pop
dec
daa
jae
mov
int3
mov
aaa
imul
mov
xor
or
adc
or
arpl
jp
or
retf
enter
mov
out
lock
sbb
xor
in
mov
jmp
bound
adc
sub
lods
jns
xor
icebp
data16
mov
sbb
les
inc
enter
jecxz
aas
imul
mov
arpl
dec
in
fidiv
repnz
test
scas
mov
mov
sub
push
movs
and
stc
(bad)
and
fadd
iret
pushf
je
mov
jae
ds
mov
sub
sbb
faddp
repz
dec
sub
push
sahf
cli
in
sbb
jmp
add
or
add
addr16
and
in
stos
sub
mov
mov
xchg
(bad)
test
xchg
ss
and
cwde
out
ss
das
ret
inc
push
test
lock
lea
cmp
dec
lahf
pop
outs
cli
jle
xor
aam
jmp
xor
or
in
bound
in
or
inc
aam
and
push
mov
mov
push
dec
inc
pop
push
jmp
mov
inc
inc
gs
loopne
js
push
retf
out
gs
jmp
push
sub
xchg
inc
xor
mov
(bad)
scas
div
repz
cwde
or
js
out
shl
xor
sub
idiv
mov
mov
neg
arpl
psubb
and
jle
sub
in
pop
jbe
sar
es
adc
jae
xchg
mov
jo
jne
pop
stos
pop
jmp
in
add
add
neg
inc
iret
push
shr
data16
inc
dec
mov
shl
pushf
pop
outs
pusha
loope
out
xchg
out
xchg
add
int
cwde
mov
icebp
adc
pop
rcl
outs
loope
jo
pushf
icebp
cli
addr16
jge
add
inc
test
scas
loopne
mov
cmp
movs
into
das
jp
and
daa
mov
mov
test
test
add
or
test
xchg
mov
mov
lods
adc
add
cmp
dec
and
push
ficom
movs
sahf
jmp
scas
cld
push
cmp
or
es
in
pop
into
lds
xor
dec
jb
aad
cli
inc
pop
add
in
stos
jb
(bad)
mov
test
stc
sti
sbb
inc
push
aas
cmp
sub
dec
lds
xor
mov
mov
dec
sti
or
(bad)
retf
xor
shl
jg
ins
stc
ds
cmp
mov
xor
mov
mov
push
rcr
cmp
add
popf
sub
adc
sbb
ror
loop
inc
aas
pop
push
ret
out
pop
adc
or
xchg
jmp
push
pop
in
cwde
pop
add
ja
addr16
adc
or
lods
or
xor
test
xor
imul
int
sti
jae
pop
icebp
jmp
cmp
iret
xor
test
ins
in
pushf
push
xchg
lods
pop
data16
movs
or
outs
bound
xor
(bad)
fmul
adc
icebp
in
pop
jmp
cmp
jmp
or
pop
jns
cld
pop
add
and
neg
push
fwait
jecxz
pop
and
ja
aaa
mov
jmp
out
pop
mov
mov
dec
(bad)
cmc
push
popf
push
fnstcw
add
jae
adc
aas
fsubrp
xor
dec
stos
mov
out
test
scas
mov
lods
mov
test
jo
stos
fs
stc
mov
iret
sub
push
adc
movzx
cmps
enter
leave
stc
clc
push
rcl
ret
lods
adc
leave
mov
test
push
loop
sub
mov
sahf
hlt
mov
int3
fadd
push
aaa
mov
imul
cmp
inc
cmp
sahf
pop
sbb
adc
retf
mov
pushf
xor
lods
ret
dec
cmp
mov
push
jne
inc
add
gs
push
mov
mov
pop
adc
arpl
mov
push
scas
mov
sbb
xchg
shl
fmul
sub
sub
stos
or
push
mov
dec
arpl
loop
push
or
mov
scas
mov
sbb
and
dec
sbb
inc
add
jecxz
mov
(bad)
ds
fwait
add
sub
sub
jge
jge
add
test
push
popf
push
pop
pop
dec
out
loopne
fsubr
mov
sub
dec
xor
sbb
jmp
xor
xor
rcr
xor
inc
sbb
pop
aad
xchg
jns
gs
bnd
cmps
mov
and
sub
pusha
pushf
xchg
leave
push
push
iret
fwait
cmp
xor
push
mov
jmp
inc
ret
xor
test
xchg
in
mov
out
retf
leave
div
leave
dec
xchg
cwde
or
cdq
movs
sbb
adc
ficom
stos
push
sub
ds
jo
inc
xor
cmp
jno
add
in
popf
ja
mov
dec
out
ja
enter
ret
cld
js
xchg
add
jbe
cmp
sub
leave
sbb
loopne
in
mov
ficom
test
cdq
mov
movs
popa
mov
xchg
jl
aas
add
adc
pop
adc
sub
shl
scas
out
hlt
or
push
cmps
or
fild
fidiv
hlt
push
xor
aad
mov
dec
push
iret
push
mov
cmp
add
(bad)
sbb
mov
fcmove
mov
jecxz
push
push
mov
cmp
(bad)
hlt
bnd
mov
jno
jne
mov
inc
scas
pusha
adc
ins
mov
fdivr
lea
cmp
cmp
(bad)
push
stos
daa
dec
pop
pop
je
in
push
push
pop
add
in
stos
ret
arpl
dec
xor
loop
and
lea
fcmovnbe
sbb
cmp
mov
jg
push
cmp
mov
les
aas
shl
adc
mov
scas
out
in
fcmovu
adc
movs
mov
data16
(bad)
les
xor
stos
fld
test
xor
add
cmp
das
sub
and
loopne
ss
rol
in
mov
loop
jne
jecxz
xchg
scas
ror
adc
mov
push
push
jecxz
gs
(bad)
mov
ret
sbb
dec
stos
in
mov
popf
movs
and
stos
les
xchg
pop
retf
mov
addr16
stc
adc
push
cwde
dec
mov
jmp
lds
jae
push
div
dec
loop
jmp
adc
jae
dec
test
pop
int3
push
ins
pop
mov
pop
popa
or
push
inc
mov
mov
inc
(bad)
push
cmp
outs
aaa
int3
outs
jne
imul
dec
aam
retf
cld
call
lods
mov
push
ds
cmp
movs
fimul
sbb
mov
fwait
xchg
jbe
popa
mov
mov
dec
mov
pusha
push
lock
sbb
pop
pusha
push
mov
add
adc
fs
cmp
push
and
jnp
repnz
pop
fdivr
jmp
out
and
movups
jne
mov
xor
iret
(bad)
mov
cld
xchg
lods
add
lods
and
mov
push
or
sub
inc
in
jmp
scas
lods
mov
add
stos
add
fist
stc
popf
popf
fwait
outs
jecxz
jecxz
fcom
scas
pop
mov
or
int
xor
jl
lahf
mov
nop
mov
cmp
sar
aas
call
retf
push
jge
shr
jns
add
lods
xchg
dec
mov
xor
in
push
jle
movs
rcl
sbb
sbb
lahf
or
leave
mov
fidiv
test
sahf
push
loop
dec
mov
call
pop
dec
sbb
imul
aas
push
mov
inc
test
xor
xor
test
xor
pop
into
pusha
mov
mov
push
pop
push
int3
add
push
cld
lods
mov
aam
push
push
push
or
xlat
xchg
mov
mov
mov
pop
pop
rol
adc
and
pop
xchg
sub
jg
or
es
or
jbe
jbe
push
or
out
lea
inc
push
and
ds
outs
pop
aam
lods
repnz
outs
das
cwde
mov
and
adc
push
pushf
inc
rol
scas
and
inc
inc
or
popf
int
sub
add
jns
loope
inc
or
rcl
sbb
dec
inc
paddd
or
add
test
(bad)
hlt
sub
jns
ror
adc
cmp
mov
inc
mov
jmp
mov
das
mov
push
icebp
pushf
in
mov
pop
inc
aaa
dec
xchg
jne
xlat
dec
(bad)
je
adc
adc
fiadd
(bad)
aad
hlt
xor
and
test
xchg
mov
test
fwait
sbb
fmul
test
test
push
iret
addr16
div
inc
dec
mov
dec
adc
inc
imul
pushf
aam
jbe
repz
mov
mov
push
mov
jnp
outs
or
je
sbb
repz
stos
std
jno
shl
aam
xchg
push
push
adc
int3
and
fcmovnu
out
jecxz
call
cmp
movs
jnp
pop
pushf
stos
xchg
sbb
daa
mov
add
mov
in
xor
stc
sbb
xor
pop
daa
push
mov
sub
into
cmp
sbb
jmp
cmp
and
jge
add
jmp
inc
scas
mov
mov
cmp
(bad)
inc
ret
hlt
pop
cmp
scas
push
int3
in
sub
test
and
ss
in
iret
mov
push
outs
gs
jb
mov
or
xor
jns
mov
pop
push
ins
loopne
adc
inc
ja
mov
and
jge
jmp
sar
fwait
cwde
(bad)
retf
push
gs
jmp
dec
in
jmp
xchg
setb
into
fiadd
fisttp
loopne
sub
jo
enter
cmp
pop
pushf
xchg
scas
fild
add
out
xchg
push
mov
out
cmp
lock
cmp
push
retf
mov
into
xchg
pop
push
cmp
icebp
cwde
cmps
xor
dec
dec
out
inc
loop
push
sub
push
int
mov
push
in
into
or
imul
dec
call
in
cmp
push
pop
fnsave
push
les
cmp
inc
push
mov
fild
retf
not
js
mov
add
xchg
cld
std
not
ret
push
cmp
mov
call
movs
push
cmp
fist
int3
xor
dec
in
jl
push
aaa
sub
cmp
pop
pop
stos
jns
ja
push
push
jmp
test
movs
test
jecxz
inc
jge
(bad)
shr
sbb
jg
loop
fistp
mov
icebp
pop
jb
movs
scas
pop
das
cwde
push
or
jnp
in
das
dec
arpl
jb
inc
imul
or
cdq
ficom
xchg
mov
or
ret
cs
add
leave
add
sbb
mov
loop
mov
xchg
push
repz
daa
mov
je
stc
jns
shr
mov
adc
fcomp
out
pop
adc
fist
mov
dec
sbb
in
mov
movs
jnp
mov
adc
fadd
lock
lds
popa
mov
pop
test
ja
xchg
or
mov
pop
cmp
or
jae
stos
mov
mov
gs
aaa
jl
and
stos
test
xchg
jge
fisub
xchg
adc
aad
fwait
mov
add
cmp
xchg
xor
mov
cmp
fcomip
ins
jb
and
fistp
pop
push
xor
sub
data16
sti
outs
adc
adc
fild
dec
cwde
int
cmps
inc
mov
mov
sbb
fsub
cwde
in
iret
mov
mov
push
xchg
jo
adc
nop
pop
mov
repz
mov
add
inc
or
jmp
dec
mov
sub
lock
in
movntps
mov
out
lods
and
mov
daa
cdq
sbb
loope
(bad)
out
aam
mov
or
or
icebp
fisubr
mov
data16
int
loopne
xchg
aaa
pop
jmp
out
push
adc
out
sar
and
mov
cdq
int3
loope
xchg
xor
mov
into
repnz
popf
add
xor
(bad)
mov
sub
cmp
cmp
xchg
cli
cs
sub
xor
retf
outs
xor
scas
popf
ins
sub
xor
fisubr
das
in
cld
push
mov
ins
aas
neg
pop
or
not
clc
mov
repz
lods
scas
push
(bad)
dec
call
jne
das
fnstsw
das
nop
jae
xor
or
add
adc
sbb
jbe
xor
cmc
fiadd
(bad)
outs
ror
inc
mov
sbb
cmc
jae
lea
aas
(bad)
mov
movs
mov
clc
add
jbe
rol
dec
data16
fwait
mov
mov
inc
aas
addr16
aad
push
xchg
sub
mov
ss
sub
inc
repnz
cld
aad
clc
mov
cmp
pop
cmps
mul
mov
sbb
pop
add
mov
call
mov
xchg
enter
movs
and
adc
mov
stc
pushf
dec
sub
out
popf
cdq
add
mul
dec
outs
adc
cli
cli
ud2
fnstsw
ficomp
clc
stos
add
jns
push
fwait
mov
nop
push
xor
mov
das
pushf
enter
call
sub
scas
aaa
div
jle
mov
mov
add
jle
inc
in
cmp
mov
mov
addr16
aaa
add
sbb
sbb
into
into
stos
cld
sbb
sub
sbb
mov
cdq
mov
mov
add
ins
or
push
jp
in
push
popf
pop
cmc
jnp
movs
mov
test
jbe
jecxz
push
sbb
sbb
mov
movs
or
adc
cmp
push
fldenv
jge
lods
and
fs
push
or
dec
push
xor
loope
in
inc
sbb
mov
mov
jnp
addr16
out
pop
jl
aaa
loope
push
bnd
fcomp
js
fs
out
mov
mov
add
sti
add
and
xor
mov
push
mov
pop
loop
cmp
popf
mov
push
sub
mov
cmp
sbb
fisubr
push
popf
sub
pop
js
adc
jae
cmps
inc
mov
sbb
mov
das
pop
push
inc
sub
inc
and
lea
ins
cmps
mov
std
or
inc
sub
mov
cmp
or
pop
das
inc
(bad)
repz
ins
inc
call
cmps
(bad)
pop
sub
or
mov
mov
aam
lods
sub
loop
in
nop
rcr
push
js
add
pop
cdq
aam
dec
dec
pop
dec
and
pop
ror
stos
pop
(bad)
shl
sub
test
loope
add
gs
lahf
add
adc
mov
pusha
mov
ss
xor
inc
mov
add
mul
jbe
sbb
push
movs
push
jno
jecxz
out
sti
sbb
rcr
ss
js
test
mov
push
nop
adc
inc
les
movs
aad
jmp
ror
fnstsw
jmp
call
inc
xor
retf
adc
cmp
test
test
pop
adc
lea
aas
arpl
add
mov
jl
adc
cmps
cmp
add
xchg
sub
nop
hlt
dec
push
(bad)
je
(bad)
sub
outs
pushf
rcr
(bad)
and
mov
push
lods
adc
in
daa
mov
ins
mov
les
icebp
inc
dec
pop
cmp
lea
or
mov
and
xor
mov
adc
outs
jne
ins
mov
mov
cli
push
es
fnstenv
rol
call
(bad)
xchg
in
test
mov
sub
sbb
in
mov
movs
pusha
sar
pop
cmp
xchg
mov
jecxz
movs
test
sub
out
pop
add
jae
cmp
das
fwait
pinsrw
test
shr
add
cmp
and
dec
jnp
int3
mov
push
xor
or
(bad)
shr
nop
adc
cwde
inc
or
sbb
inc
pop
fistp
mov
mov
push
lea
xchg
mov
jecxz
enter
cmp
test
fwait
mov
sub
jo
retf
mov
cld
test
into
cmp
das
or
and
jp
and
xchg
and
push
xchg
repz
int
jge
inc
data16
lahf
iret
xor
adc
(bad)
hlt
(bad)
ds
call
mov
add
push
or
sbb
ss
push
retf
add
inc
(bad)
leave
iret
arpl
int3
xchg
aaa
push
lahf
mov
(bad)
and
push
test
test
cmp
aam
mov
test
push
jo
shl
pop
retf
popa
in
movs
sub
mov
cmp
add
jecxz
xlat
(bad)
out
repnz
imul
fsub
xor
out
je
sub
mov
add
mov
lds
and
adc
enter
push
in
mov
xchg
aad
adc
aaa
or
in
fcmovb
mov
jle
outs
fdiv
lods
or
scas
add
add
lock
(bad)
fcom
sub
inc
repnz
cmps
pop
retf
out
pusha
mov
cmp
retf
cmps
add
into
(bad)
xlat
mov
test
and
loope
int3
dec
inc
pop
jl
inc
dec
mov
xchg
jb
cwde
shr
pop
pop
cdq
fmulp
retf
pop
mov
xchg
jmp
pop
xor
stos
mov
mov
xchg
mov
aam
adc
mov
mov
xor
rol
fstp
ret
dec
loop
popa
fwait
sbb
xchg
pop
lock
sub
mov
mov
xchg
mov
cmp
sub
leave
shr
shr
xchg
sbb
out
call
cld
les
sahf
nop
jae
in
push
ins
and
mov
jecxz
ins
cmp
and
fild
bound
movs
ficom
sar
adc
add
sahf
mov
bound
int
lea
or
outs
or
mov
inc
dec
fstp
inc
mov
daa
rcl
mov
cmc
imul
clc
xchg
jl
add
pusha
aas
mov
xchg
adc
sbb
mov
lea
mov
fdivr
outs
sub
enter
imul
popa
leave
or
cmovle
adc
fld
shr
out
or
mov
push
in
xchg
mov
mov
(bad)
jmp
cmp
add
test
mov
inc
hlt
sub
sub
stos
xchg
mov
mov
or
xor
add
arpl
nop
adc
mov
inc
ins
inc
pop
sahf
stc
adc
(bad)
int3
xlat
and
cmc
sub
push
pop
sub
test
aaa
push
sub
leave
sub
fistp
out
jo
inc
mov
pop
jg
in
jmp
jmp
fidivr
stc
xchg
or
cmp
sbb
jnp
lahf
mov
push
sbb
(bad)
and
jnp
mov
ret
pop
mov
push
jg
mov
retf
pop
jnp
xchg
leave
mov
xlat
mov
shl
dec
imul
adc
lods
cwde
inc
lds
jbe
jle
sub
push
mov
mov
jb
lds
cmps
pop
out
in
je
rcl
add
cs
jnp
mov
aad
gs
pop
mov
jne
adc
add
addr16
sbb
jnp
int3
in
jns
popf
aaa
cmp
out
pop
inc
cwde
mov
rcl
fdivr
scas
mov
imul
fdiv
dec
aad
xchg
ins
pushf
hlt
push
adc
mov
or
add
xor
jae
push
std
fstp
call
in
nop
repz
mov
push
sbb
dec
inc
mov
or
out
push
and
arpl
fwait
push
sbb
sbb
ins
push
jecxz
mov
add
or
iret
dec
fincstp
cmps
sbb
cs
ret
imul
push
scas
and
pusha
jmp
sub
fst
fwait
mov
pushf
pop
add
imul
popf
(bad)
mov
xchg
xor
mov
std
daa
adc
mov
mov
mov
xchg
push
sub
xchg
repnz
sbb
scas
nop
lods
sbb
jp
cmps
mov
jbe
sub
xchg
sbb
push
fwait
mov
push
lea
push
(bad)
movs
sbb
out
shr
imul
pop
cs
sbb
mov
out
shl
xor
sub
jle
(bad)
movs
in
and
test
mov
sub
mov
mov
ins
dec
fst
popf
cs
cmps
or
test
xchg
mov
push
mov
and
dec
dec
idiv
int3
(bad)
mov
push
cmp
or
cs
xchg
lods
into
data16
rcr
sbb
or
mov
and
dec
adc
xchg
sbb
mov
and
sbb
test
shl
pop
pop
arpl
xchg
sub
or
mov
mov
(bad)
outs
cmp
popw
pop
add
inc
inc
sub
mov
adc
fldcw
lahf
and
push
leave
jg
xchg
das
inc
mov
and
pop
and
mov
add
pop
in
call
xor
pop
retf
push
ds
cmp
sbb
inc
bound
lock
leavew
clc
pop
data16
jae
call
repz
sub
cdq
(bad)
lds
xor
adc
sbb
adc
mov
jge
sub
dec
jno
xor
and
adc
jno
xor
xlat
je
sbb
test
call
xchg
fisub
add
cmp
clc
pop
fidiv
mov
ds
cmp
mov
inc
ficomp
popa
cmps
ftst
std
pop
add
dec
mov
jg
add
jmp
ins
mov
ins
and
mov
sbb
test
push
push
(bad)
mov
aad
mov
(bad)
jge
mov
pop
cmc
scas
jnp
mov
xchg
loope
cs
pop
push
sahf
ss
aam
les
pop
test
xchg
mov
out
add
pop
mov
and
test
add
mov
fwait
or
pop
add
pusha
bound
bnd
cmp
or
mov
mov
and
sahf
popf
pop
mov
test
cmp
test
(bad)
mov
nop
sub
js
pusha
dec
xor
sub
icebp
push
loopne
lock
jns
lock
xchg
mov
add
in
mov
icebp
test
jmp
sbb
ss
push
sub
ins
sub
test
pop
daa
sbb
ror
inc
or
add
cmp
mov
xchg
push
jge
sbb
(bad)
mov
sub
sub
inc
(bad)
shr
xchg
sbb
out
pop
or
dec
xchg
sti
mov
lds
es
push
repnz
popf
dec
test
movs
mov
jno
icebp
xchg
mov
lgs
mov
inc
dec
mov
xor
inc
xchg
gs
mov
ret
xor
mov
push
enter
lahf
fsub
(bad)
and
mov
fwait
scas
mov
or
mov
add
pop
bound
rol
mov
fmul
fimul
mul
pop
dec
pop
loop
les
sti
cmp
ss
jns
std
push
pop
in
inc
pushf
sbb
add
push
add
adc
xchg
push
test
lahf
jnp
cmc
inc
(bad)
lods
push
enter
xor
sbb
ret
inc
mov
xor
in
jp
inc
dec
inc
and
xchg
ja
sti
shl
inc
xor
and
cli
cvttps2pi
sar
add
or
dec
out
cmp
push
or
xor
sbb
fs
jb
pop
push
std
push
cli
in
sub
xlat
imul
cmps
pop
dec
pop
cwde
cmp
loop
mov
pop
lock
lock
imul
stos
scas
lods
cmp
movs
jns
xchg
mov
cld
out
xor
dec
lods
mov
cld
cmp
jl
add
xor
shl
shr
outs
mov
stc
jl
sti
fbstp
adc
push
jl
or
or
xchg
fidivr
add
inc
leave
jg
and
add
sbb
fwait
jne
mov
outs
daa
pushf
fstp
adc
inc
je
in
mov
cli
push
iret
sbb
icebp
sub
xchg
sub
sbb
or
sbb
push
xchg
cmc
xchg
enter
repz
fs
mov
mov
sbb
ss
outs
xchg
int
in
(bad)
push
into
jl
jnp
inc
pop
add
add
je
aad
outs
icebp
les
jne
mov
pop
(bad)
cmp
adc
add
aaa
mov
sub
mov
pop
pop
mov
rol
add
mov
or
adc
xchg
adc
lods
fstp
test
jb
(bad)
xchg
out
jmp
push
stos
das
test
(bad)
pop
fs
mov
sub
imul
les
not
pop
lods
adc
in
sub
adc
cmp
adc
(bad)
xchg
mov
scas
sti
sub
adc
and
addr16
and
ins
fisubr
and
stos
hlt
icebp
nop
mov
xchg
pushf
inc
fs
out
imul
xchg
ss
inc
push
adc
in
sub
loop
xchg
ret
clc
fild
rcl
sbb
jl
(bad)
mov
cmc
mov
mov
xchg
or
push
mov
sti
cmp
in
mov
in
mov
ins
add
es
inc
lods
fs
fst
cmp
mov
not
ins
test
repz
out
dec
fild
cdq
add
jno
imul
retf
into
xor
stos
outs
pushf
mov
push
push
and
mov
ins
test
fadd
cmps
std
mov
in
dec
inc
jo
(bad)
fnsave
(bad)
sbb
pop
jnp
cmps
xor
or
sti
retf
jbe
and
sbb
cmps
and
call
repnz
and
stos
repnz
add
mulps
sbb
aaa
enter
jge
ret
cmp
mov
push
and
mov
xor
iret
mov
push
mov
sahf
cmc
push
nop
xchg
(bad)
scas
xlat
aas
push
add
cmp
scas
mov
aas
fld
gs
and
movs
stc
iret
mov
mov
dec
ds
cmps
out
bound
pop
test
sbb
dec
in
cs
adc
psrlq
fsub
jmp
adc
and
pop
mov
dec
lods
dec
or
sbb
push
pop
jns
dec
push
call
jp
mov
div
push
retf
sbb
xchg
push
adc
push
test
xchg
pop
sar
xor
aad
mov
movs
xor
lds
inc
ror
add
fst
out
xor
dec
push
in
mov
push
dec
sbb
sub
rol
arpl
imul
dec
hlt
in
pop
jecxz
push
sbb
je
xchg
cmp
mov
loope
mov
sub
dec
aad
ret
cmp
outs
mov
sub
lock
mov
pop
mov
inc
push
mov
pop
call
xor
push
sbb
imul
in
add
inc
call
pop
mov
mov
inc
in
or
data16
mov
inc
mov
pop
cdq
sbb
pop
push
mul
rol
mov
push
lea
dec
call
sbb
scas
aaa
or
cmp
and
mov
je
ja
retf
fadd
cmp
icebp
xchg
and
adc
fdivr
imul
(bad)
jmp
fbstp
popa
xor
dec
add
adc
xchg
mov
sub
push
or
retf
lds
or
mov
aad
out
mov
aaa
xchg
adc
jmp
add
push
imul
mov
sub
lods
sbb
jecxz
addr16
or
dec
ja
push
cmps
add
aas
mov
or
ds
mov
mov
cmp
arpl
in
ds
pop
adc
inc
add
sbb
mov
cmp
in
inc
shr
loope
jge
xchg
mov
and
sbb
adc
pop
fdivr
mov
in
push
push
out
addr16
and
pop
dec
mov
xchg
fcom
push
mov
mov
sbb
das
imul
repnz
jmp
addr16
call
gs
std
add
cmp
fst
inc
pusha
jmp
adc
ret
lock
inc
sbb
pop
clc
fbstp
out
clc
pop
(bad)
lock
mov
repnz
dec
loope
sub
adc
rcl
adc
retf
bound
daa
fwait
add
inc
loopne
pop
mov
push
imul
xchg
inc
shr
fwait
jb
ret
sti
shr
pop
mov
mov
lods
aaa
sahf
sub
loop
imul
call
mov
clc
test
or
push
mov
outs
xchg
jno
xor
and
jns
imul
jno
sub
sahf
and
jmp
lea
stos
loop
stc
jb
pop
pusha
aas
pusha
sbb
mov
out
addr16
mov
xchg
loopne
dec
(bad)
mov
sahf
sbb
inc
(bad)
lds
xor
mov
push
and
add
push
sbb
test
daa
push
xor
data16
icebp
pop
clc
xor
sbb
lea
push
mov
mov
lea
jnp
int
push
and
push
das
cwde
mov
and
inc
cmp
or
mov
or
sbb
out
aad
(bad)
and
xchg
sub
push
sar
jmp
xchg
in
and
lods
lock
loop
fwait
je
ins
jecxz
add
pop
retf
je
xchg
xor
mov
fild
mov
push
cmps
add
les
xchg
xchg
adc
sub
scas
mov
loopne
mov
icebp
push
out
frstor
and
icebp
iret
push
js
mov
xchg
xchg
adc
lock
lods
or
jno
outs
pushf
jecxz
icebp
cmp
rep
sbb
xchg
adc
imul
inc
(bad)
(bad)
test
inc
and
sub
jle
push
enter
or
stc
sub
xchg
jle
fst
xor
adc
adc
pusha
adc
adc
daa
out
in
adc
in
retf
add
dec
in
or
outs
mov
inc
lods
fimul
cmps
cdq
push
jmp
mov
test
pusha
mov
retf
pop
test
push
mov
jns
sub
pop
test
push
es
inc
lahf
ja
loope
xchg
test
and
xchg
loopne
daa
loope
sbb
jne
xchg
repnz
mov
sub
movs
int3
push
lahf
sub
mov
enter
loop
dec
mov
sbb
out
lea
pop
ins
and
mov
dec
imul
cwde
sti
(bad)
and
fild
outs
push
mov
xchg
into
jl
mov
mov
mov
inc
and
retf
pop
fisubr
repnz
ret
fimul
enter
and
repnz
loope
sar
mov
sti
mov
sbb
fs
push
jb
and
repnz
imul
xchg
ss
out
add
jmp
add
push
(bad)
movs
cmps
add
popf
outs
pop
lods
push
sub
leave
lock
mov
dec
aas
mov
pop
jnp
sbb
mov
jo
dec
xchg
mov
and
add
pop
pop
cmc
(bad)
in
iret
and
stos
pop
jge
sub
dec
mov
push
hlt
inc
call
test
xadd
out
out
cmp
sbb
pop
mov
pop
retf
(bad)
aas
sbb
lods
dec
jns
fsub
dec
pop
out
inc
mov
mov
jno
xchg
xor
sar
inc
stos
mov
push
add
xor
adc
xchg
aaa
enter
js
adc
xchg
fst
sub
stos
cmps
lea
push
mov
inc
cld
xchg
xchg
jmp
push
lea
cmp
cmp
xor
xchg
jno
call
call
(bad)
(bad)
out
xor
add
mov
xor
loop
xchg
xor
xchg
in
push
pop
jp
dec
xchg
clc
lds
or
jl
jo
xchg
sub
sub
dec
lahf
cmp
and
lahf
call
or
jbe
and
ja
test
(bad)
push
mov
(bad)
icebp
test
add
(bad)
out
pop
popa
enter
imul
icebp
sbb
outs
jmp
jo
or
pushf
mov
repz
xchg
ds
out
sbb
rol
push
pop
mov
int3
test
xor
sub
pop
dec
xchg
lods
ins
pop
ficomp
jns
loope
aaa
mov
outs
dec
mov
mov
out
sbb
xor
pop
push
sbb
fmul
cmp
inc
lahf
test
jle
call
cwde
out
xor
mov
jno
ret
dec
adc
add
stc
mov
pop
inc
mov
inc
mov
js
enter
lea
stc
lods
fstp
call
(bad)
lods
clc
adc
xor
and
fimul
ror
test
lea
ret
and
mov
xchg
add
outs
movs
xchg
adc
cmps
movs
iret
pop
add
and
fsub
add
mov
stos
adc
fcmovne
dec
cmp
inc
pop
in
es
sbb
xlat
gs
lock
clc
popaw
adc
jae
adc
xor
es
xchg
jmp
sbb
aas
scas
sub
pop
popf
xor
xchg
pop
stos
inc
mov
pusha
cmp
fisubr
mov
push
iret
xchg
cld
inc
data16
in
repnz
push
jbe
sub
push
cld
std
test
sub
in
jmp
fabs
jmp
test
(bad)
mov
mov
sbb
shr
mov
fisttp
sub
ret
cli
xor
mov
scas
pop
pop
or
dec
push
(bad)
fwait
clc
add
shl
jg
mov
sub
ins
push
popf
jns
mov
jno
sub
(bad)
sbb
cmp
cwde
dec
mov
stos
mov
sbb
dec
outs
jle
jae
movs
and
adc
or
stc
fucomip
sbb
adc
stos
or
pusha
adc
sub
xchg
dec
sbb
or
adc
daa
pop
sub
into
clc
fs
jno
pushf
mov
pop
xlat
mov
retf
aas
ja
call
xor
pop
mov
xchg
loopne
iret
pop
push
jmp
repz
add
rol
sub
inc
mov
out
inc
stos
sbb
fst
xchg
in
push
inc
cmc
into
mov
add
ins
loope
clc
(bad)
fs
loop
(bad)
add
and
icebp
sub
rcl
cmp
add
pop
outs
mov
add
loop
add
aam
popf
sbb
div
loope
cmc
in
adc
outs
adc
lds
in
mov
or
movs
jmp
and
jp
ss
jae
mov
sub
mov
or
xchg
sbb
ins
push
dec
xor
dec
mov
jno
mov
cmp
cli
add
mov
push
push
dec
ds
mov
mov
dec
clc
xchg
lahf
aas
cmp
push
int
push
mov
data16
adc
lea
or
shl
fs
mov
mov
scas
sub
fsub
shl
daa
cmp
add
test
cdq
call
and
jae
in
(bad)
out
mov
jl
dec
popf
xlat
call
jnp
je
sbb
dec
stc
and
ss
mov
xchg
movs
add
mov
sbb
popa
inc
add
pop
pop
in
imul
stos
and
sbb
pop
cld
xor
in
ins
movzx
cmp
cmp
in
sahf
adc
arpl
stos
cld
push
lods
gs
adc
cmp
or
int3
and
mov
sub
or
mov
loop
or
sbb
lods
xor
fsubr
pop
repnz
mov
ss
jne
fild
cs
adc
ds
js
leave
ret
sti
js
push
pushf
dec
mov
jns
ins
mov
adc
loope
xchg
lds
xor
and
lods
pop
jmp
nop
pop
dec
sar
xchg
pop
add
xor
fistp
test
or
retf
mov
push
pop
push
push
cmps
or
sti
(bad)
mov
out
hlt
jp
mov
jmp
push
test
mov
jecxz
cli
sub
push
xchg
mov
cmps
or
arpl
loop
enter
leave
mov
or
push
gs
mov
sbb
sbb
cmp
mov
cmp
inc
cmp
lods
js
outs
jo
(bad)
fs
mov
fwait
add
inc
(bad)
xchg
xchg
xchg
arpl
les
sbb
cmp
outs
outs
pop
pusha
fs
hlt
in
pop
repnz
mov
pop
pop
lahf
les
and
push
xchg
or
pop
mov
loopne
in
push
or
adc
xchg
adc
mov
mov
sub
and
js
xchg
call
mov
dec
xor
loopne
mov
cmp
rep
sbb
loope
je
bound
inc
xchg
xor
adc
stos
add
cmp
add
not
add
mov
ins
pop
cwde
jmp
dec
dec
sub
lds
xchg
lods
mov
lea
push
adc
ins
(bad)
in
fst
jecxz
movs
icebp
pop
stc
test
enter
push
jno
pop
xchg
xchg
sbb
sub
lds
les
sub
xchg
mov
sbb
add
add
out
cmp
fiadd
retf
xor
das
out
dec
das
retf
dec
fwait
mov
adc
mov
aas
jo
sub
nop
cmp
xchg
je
and
fmul
cmps
mov
mov
in
push
mov
pop
jne
in
mov
xchg
loope
jne
cmp
(bad)
neg
sti
sub
inc
sub
adc
sbb
stc
push
aad
xor
sbb
xchg
in
les
lods
push
jl
call
mov
out
xchg
rcr
sti
sbb
in
test
aad
sub
xchg
xor
rcl
push
ins
fdiv
sbb
lds
pop
stc
in
and
mov
out
call
mov
or
out
in
loopne
sub
lock
cwde
inc
in
aad
pop
mov
clc
pop
scas
loopne
xor
pop
push
push
outs
enter
mov
inc
loop
data16
add
and
(bad)
xor
sbb
call
jp
sti
mov
(bad)
je
dec
sar
inc
sbb
repnz
pushf
inc
rol
in
fdiv
mov
cmps
imul
mov
jnp
and
or
jo
cmp
xor
push
loop
nop
adc
call
pop
jnp
mov
bswap
scas
lock
pop
rcl
sbb
mov
cmp
push
pop
mov
pop
(bad)
hlt
ins
sbb
sbb
(bad)
push
leave
pop
cmps
sub
sti
inc
fs
sar
dec
jl
or
fild
aam
cwde
ds
mov
frstor
cmp
push
data16
push
loope
iret
mov
test
xchg
sahf
scas
xor
rcl
neg
call
pop
call
mov
cmps
xor
pop
rol
cld
rcr
and
jns
add
aam
loop
pop
sbb
push
std
mov
pop
stc
mov
ret
sti
mov
sub
cmp
shr
rcl
xchg
in
jo
(bad)
imul
in
mov
xchg
(bad)
in
(bad)
nop
pop
xor
out
mov
add
push
jmp
mov
and
fldcw
out
jbe
dec
cmp
fmulp
es
out
mov
cmp
cmp
in
aad
cmp
xlat
sub
mov
cmc
jbe
inc
enter
dec
(bad)
mov
and
call
stos
jae
rcr
xor
push
int
sub
clc
pop
jmp
xor
shl
mov
jl
mov
add
cli
or
mov
sbb
mov
aam
xchg
ret
stos
icebp
jge
lock
(bad)
mov
leave
push
xchg
jle
xchg
cmc
sbb
stos
mov
cli
pop
fstp
imul
adc
jbe
jmp
pop
stos
ror
jmp
xchg
mov
femms
and
pop
sub
or
push
gs
inc
inc
pushf
loop
leave
jge
dec
dec
outs
sbb
aaa
pop
push
cmp
pop
sbb
pop
in
fisubr
hlt
sbb
vcmppd
mul
mov
adc
xchg
sub
aad
add
push
mov
sub
test
rcr
cmc
cmp
shl
jnp
sbb
clc
into
adc
fs
push
scas
adc
jmp
fstp
xchg
pop
cmps
or
rcl
push
stos
mov
add
arpl
or
fisub
mov
add
mov
sbb
and
add
mov
jp
jnp
es
call
scas
xchg
out
cmp
dec
clc
cmps
jne
(bad)
mov
inc
scas
push
test
rcl
(bad)
push
pop
sbb
in
(bad)
repz
sub
or
or
xor
add
in
push
stc
add
cmp
adc
jbe
add
xchg
imul
(bad)
cmp
ja
pop
push
sub
aaa
pop
aaa
xchg
xor
ds
lods
add
in
bound
adc
sbb
mov
push
push
in
sub
sbb
rcr
jmp
pop
imul
pusha
xor
or
inc
data16
sbb
cs
push
pop
cdq
call
addr16
xor
hlt
sahf
jnp
dec
pop
add
test
pop
pop
in
ins
mov
push
ds
pop
in
dec
push
pusha
mov
mov
ud1
cmps
in
add
xor
call
movq
sub
loope
cmc
mov
mov
outs
bound
or
jecxz
pushf
or
or
sub
(bad)
and
push
cmp
imul
or
mov
pop
adc
es
or
sahf
mov
adc
rol
cmp
inc
inc
mov
xchg
push
jo
rcl
(bad)
xor
ja
mov
cmp
call
pop
sbb
jl
ret
inc
cs
and
xchg
jmp
sbb
outs
cmp
and
hlt
ins
jmp
pop
jg
add
lods
aam
stc
mov
sbb
or
inc
push
push
xchg
outs
rcl
cmp
addr16
fnstcw
dec
(bad)
adc
add
inc
ds
xor
mov
cmps
test
jecxz
ds
pop
fdiv
aaa
sar
dec
mov
in
jge
sub
and
leave
sbb
jl
sbb
repnz
out
pop
xor
inc
lock
lahf
pop
cmps
test
gs
out
dec
aad
outs
add
(bad)
mov
(bad)
in
push
xchg
jne
jecxz
add
inc
movs
lahf
jne
addr16
cwde
jg
pop
mov
adc
jmp
dec
jmp
jne
call
mov
sbb
or
pop
std
mov
mov
stos
push
xlat
lods
ror
inc
(bad)
das
cmp
jbe
pop
pop
aas
adc
sub
cmc
es
retf
xchg
jl
mov
mov
addr16
cmp
repz
xchg
inc
ins
and
mov
fsub
fnstenv
mov
jne
fsubr
xchg
or
arpl
dec
inc
mov
dec
push
test
adc
(bad)
jl
pop
repz
cmps
push
aaa
stos
cwde
inc
pop
sbb
xchg
repz
retf
dec
(bad)
loop
jmp
fcom
clc
bound
cmp
sbb
cli
mov
and
or
iret
stos
add
mov
je
add
movs
mov
movs
imul
push
inc
test
in
fnsave
pop
and
and
mov
dec
sub
add
stos
call
hlt
xchg
mov
pop
adc
sbb
sub
mov
enter
enter
or
jne
sbb
in
icebp
xor
add
ja
pop
ja
pushf
jecxz
loope
xchg
fistp
aaa
fistp
jo
mov
mov
xchg
fldenv
pop
jns
lods
pop
pop
xor
fst
out
retf
xor
or
and
imul
mov
mov
cmp
xchg
mov
jl
sub
cmps
out
hlt
pop
jmp
sub
push
iret
mov
xor
inc
in
adc
clc
retf
pop
ins
aaa
or
push
int3
jb
daa
sar
imul
mov
gs
not
cmp
mov
or
pusha
pop
test
outs
pop
js
pop
or
shl
cmp
jge
push
in
pop
jecxz
ror
pop
ss
sbb
aad
dec
xor
dec
dec
mov
and
(bad)
mov
xor
xor
mov
je
pushf
xchg
repnz
not
xor
iret
mov
scas
mov
mov
shl
mov
xchg
add
push
mov
xchg
dec
or
jecxz
mov
dec
xor
ret
mov
loope
cdq
out
repnz
and
push
fcom
aad
push
sbb
mov
sub
movs
jge
outs
xor
xchg
dec
mov
adc
mov
or
lahf
mov
push
pushf
(bad)
lahf
ins
ins
inc
stc
sub
pop
cmp
lds
je
xchg
mov
push
dec
sbb
cld
je
sbb
add
mov
pop
out
imul
test
mov
push
pop
inc
enter
repz
xchg
push
sbb
xor
cmp
repnz
jmp
jp
xchg
jno
adc
pop
jle
cli
rcr
(bad)
frstor
jg
adc
fbld
inc
mov
cmps
inc
mov
out
test
pop
sbb
int
sbb
test
mov
(bad)
test
cmp
sub
mov
lea
cmp
iret
push
and
add
lahf
adc
std
enter
xor
shl
mov
sbb
call
popa
(bad)
(bad)
xchg
shl
in
lods
pop
arpl
popa
aam
icebp
dec
cmp
arpl
fiadd
dec
xchg
pop
jns
pop
pop
cmp
(bad)
jns
mov
inc
and
jecxz
cmp
mov
xor
inc
ds
mov
sbb
fcmovu
inc
mov
inc
push
js
stos
jecxz
cmp
repz
pop
pop
enter
lods
inc
jbe
dec
out
mov
stos
div
ret
data16
fidivr
mov
out
mov
inc
fimul
push
je
cmp
xchg
mov
out
movs
jmp
std
addr16
mov
jmp
xchg
stos
push
je
pop
mov
fist
popa
mov
or
xor
enter
sub
out
(bad)
ja
lea
fwait
neg
shl
fs
sub
pop
scas
cwde
sub
js
jnp
mov
sbb
xchg
pop
mov
xchg
mov
dec
pop
popf
cmp
mov
sub
iret
dec
bound
or
loope
and
loop
ja
dec
stos
cmps
xor
ror
push
in
test
fadd
and
and
cmp
mov
mov
test
sti
ret
lods
jecxz
std
mov
scas
ror
outs
ret
sbb
jp
scas
or
cwde
and
push
mov
rol
jl
sbb
push
test
jmp
mov
or
cmp
je
add
leave
in
cmp
pusha
popa
popf
fisttp
adc
(bad)
int
sbb
add
push
inc
(bad)
mul
sub
inc
pop
out
push
lss
sbb
ja
iret
sub
inc
fcom
repz
sbb
sbb
rcl
pop
sti
test
stos
sahf
nop
lock
and
cmp
stc
and
(bad)
mov
xchg
mov
jno
mov
or
inc
dec
loope
mov
ss
(bad)
out
pop
sub
push
in
add
or
sub
into
call
lahf
adc
push
add
sbb
rol
or
lods
test
mov
xchg
outs
xchg
mov
pusha
cmp
lods
cmp
adc
setb
add
and
sti
ficom
outs
(bad)
sbb
icebp
out
pusha
clc
mov
dec
addr16
cdq
jmp
xor
in
cs
pushf
xchg
lea
addr16
dec
adc
add
add
jns
jge
xchg
pop
mov
xchg
je
cld
mov
inc
xor
jb
cmps
data16
fs
test
(bad)
jg
lds
cli
sbb
cmp
and
xor
cs
clc
xor
ja
nop
lods
(bad)
push
scas
mov
mov
xor
xor
jnp
cmp
mov
cmp
mov
int
xor
jle
mov
dec
xchg
std
lods
mov
mov
lds
add
neg
push
lds
jg
cmps
mov
lahf
pop
out
loope
dec
inc
adc
dec
jb
test
ret
jmp
stos
jbe
xchg
std
jmp
sub
and
cmp
mov
enter
or
push
dec
inc
fdivrp
imul
mov
or
icebp
ja
and
(bad)
and
(bad)
fisubr
mov
xor
mov
pusha
sub
pop
(bad)
lea
mov
inc
jno
das
or
push
or
push
call
loopne
pop
pop
je
add
push
mov
sub
jp
stc
hlt
dec
mov
lods
ror
adc
mov
and
in
mov
xchg
mov
jmp
add
push
das
fisttp
lahf
lods
cmps
(bad)
cmp
and
(bad)
dec
mov
test
inc
retf
cmps
sub
sahf
mov
in
push
outs
and
xchg
adc
pusha
jb
imul
aad
inc
pop
or
retf
cmp
cmp
cmp
cmp
pop
xchg
mov
sbb
clc
fnstcw
loopne
ss
mov
sti
cdq
inc
movs
jle
mov
mov
test
ins
out
mov
arpl
cmc
adc
lods
rol
push
pop
pop
bound
daa
dec
aad
and
fistp
and
inc
pop
aaa
lahf
stc
add
adc
and
lods
sbb
inc
mov
and
fistp
stos
cld
sbb
adc
mov
ret
push
fs
add
inc
ins
sti
(bad)
jne
aad
arpl
movs
jl
lods
nop
xchg
adc
loopne
into
aaa
test
stc
popf
stos
scas
je
dec
scas
iret
sbb
or
(bad)
fisubr
add
pop
xor
fcom
(bad)
cmc
mov
or
cs
test
jmp
adc
lock
dec
fnstcw
ror
jg
xlat
mov
cmp
adc
dec
out
mov
cmp
mov
sbb
sub
and
pop
sub
iret
sbb
nop
adc
scas
ins
cmp
xchg
dec
mov
pusha
in
push
sbb
repnz
push
out
xchg
stos
sbb
adc
daa
xor
(bad)
bound
push
sbb
cli
jo
push
fcomp
movs
push
out
clc
leave
add
xor
sbb
adc
push
xchg
call
fdivr
rcl
gs
leave
xchg
dec
daa
lds
push
add
and
inc
mov
adc
sbb
adc
pop
dec
xchg
dec
mov
aas
sub
push
sbb
cmp
or
enter
and
stos
popa
cmp
das
jl
push
mov
int3
cld
retf
ret
out
jne
xor
sbb
xchg
push
mov
add
xchg
push
js
hlt
pop
mov
push
cmp
sub
inc
loope
adc
(bad)
cdq
fistp
mov
push
(bad)
int3
xchg
out
xor
out
mov
xchg
inc
adc
mov
pop
or
cmps
movs
outs
mov
ror
push
xor
stos
push
(bad)
aam
jo
mov
xchg
jno
mov
fisub
in
aaa
jmp
cmc
pusha
call
stos
pop
xchg
fucomip
xor
sub
(bad)
jns
imul
jp
shl
mov
bound
movs
add
add
mov
xchg
dec
sti
popf
xor
std
loop
mov
sbb
add
(bad)
cmp
(bad)
or
ins
inc
pop
sub
nop
daa
pop
inc
cld
lahf
cmp
jecxz
mov
les
adc
mov
jge
cmp
mov
mov
(bad)
inc
sub
jg
push
imul
ret
or
out
pop
push
and
loope
push
movs
fxrstor
std
mov
cs
push
mov
sub
nop
pop
add
mov
mov
fstp
xchg
out
popa
and
jns
pop
pop
stos
cmp
xchg
out
lods
jae
jno
int
bound
xlat
jnp
shl
and
cmp
cmc
inc
jmp
imul
ja
repz
test
cmps
xchg
ds
out
mov
pop
clc
movs
inc
sub
hlt
mov
repz
sub
inc
ds
jo
add
mov
(bad)
adc
or
and
cmp
dec
and
ror
mov
sub
jg
push
test
int
(bad)
push
mov
inc
or
jp
jge
pop
mov
add
cmovae
inc
add
aad
jl
call
pop
jecxz
ror
sub
push
pop
and
hlt
sbb
sbb
imul
inc
add
xchg
sbb
fidiv
call
addr16
test
xor
xchg
(bad)
loop
clc
stc
push
mov
fisttp
push
cmp
inc
test
ss
adc
repnz
int
lods
aaa
lock
mov
mov
loopne
retf
ss
es
das
or
lock
je
inc
push
into
iret
jno
pop
pop
adc
retf
add
sbb
lods
mov
cmp
dec
dec
jge
add
daa
mov
xor
vmread
push
jne
xchg
and
iret
mov
xchg
push
lock
outs
inc
cli
mov
xchg
mov
les
mov
mov
test
mov
xor
imul
push
cli
ins
sub
cs
fisub
mulps
cli
fnsave
pop
sub
jno
pop
mov
cdq
fwait
scas
jae
pop
fdivr
mov
hlt
sbb
stos
push
aaa
out
call
repnz
dec
cmps
rol
fucomip
pop
scas
push
pop
pop
sub
test
push
push
pushw
outs
adc
jo
mov
push
xor
adc
jbe
cmps
(bad)
movs
mov
pop
imul
lods
push
(bad)
xchg
pop
sbb
xchg
(bad)
scas
xor
xor
sbb
in
fnstsw
dec
stos
gs
push
xchg
aam
into
cs
or
push
pop
iret
sub
(bad)
dec
push
add
out
sbb
sbb
je
ds
inc
cli
sub
jecxz
jnp
hlt
mov
mov
jecxz
mov
jns
xor
inc
mov
sub
lea
fstp
dec
xchg
outs
adc
in
jnp
adc
out
xchg
adc
(bad)
pop
sub
fstp
mov
xor
aas
mov
movs
daa
inc
add
test
mov
pop
xchg
stos
jl
adc
push
cwde
mov
hlt
sbb
push
or
rol
cmp
mov
adc
imul
lods
(bad)
and
or
add
or
data16
in
jg
out
mov
in
imul
dec
cmp
sub
out
(bad)
sub
jne
das
(bad)
cdq
fnsave
xor
mov
js
cwde
add
les
inc
pushf
mov
pop
push
retf
xchg
jbe
adc
mov
mov
mov
mov
shl
test
cli
out
shr
jp
ins
(bad)
fwait
inc
(bad)
jmp
dec
mov
mov
retf
dec
in
mov
and
adc
push
das
push
xor
mov
pushf
bound
xchg
ror
cmp
loop
fsincos
push
lods
sub
call
dec
push
sbb
leave
push
fstp
mov
(bad)
daa
test
retf
jno
mov
call
sub
mov
mov
stos
call
push
cmp
or
in
push
test
add
cmp
enter
cmp
cmps
loop
aaa
call
jne
aaa
mov
ret
in
add
xor
add
mov
fnsave
mul
stos
mov
outs
int
pop
and
adc
psubb
sbb
xor
sub
cmp
xor
or
xchg
or
lahf
nop
dec
data16
(bad)
sub
or
or
in
fst
leave
sbb
push
jo
hlt
pop
inc
adc
or
adc
xor
lods
popa
pop
outs
clc
mul
ja
push
mov
psubd
mov
data16
mov
and
mov
bound
push
stc
mov
fstp
jo
push
or
retf
cmp
fwait
or
mov
cmp
cs
xchg
add
out
scas
inc
js
inc
(bad)
repnz
adc
and
xlat
jne
or
sub
loop
inc
aas
xchg
xchg
add
lods
jmp
and
adc
je
dec
push
(bad)
(bad)
pop
sbb
cmp
fucomip
mov
call
clc
and
sub
es
inc
inc
lods
mov
fadd
ins
fstp
outs
leave
outs
inc
jb
fist
cmps
jmp
je
jmp
jbe
lods
aaa
mov
shl
dec
mov
sub
dec
adc
lods
jae
inc
fadd
mov
jnp
jbe
out
mov
mov
pop
jbe
jmp
and
shl
inc
fist
and
jo
lea
(bad)
icebp
sbb
mov
sbb
in
(bad)
call
shr
push
sub
mov
xchg
xchg
cmp
test
(bad)
inc
push
aaa
mov
(bad)
or
push
pop
add
xchg
xchg
add
ss
rcr
out
push
js
and
cmc
not
out
inc
mov
inc
fisub
jg
sbb
cmp
rcl
call
mov
or
inc
je
cli
adc
dec
sar
clc
out
outs
adc
mov
out
push
jbe
xchg
xchg
ucomiss
scas
cmc
or
loop
xor
adc
jno
jmp
and
mov
fcomp
loopne
fdivr
xchg
sbb
dec
jno
sar
sbb
hlt
stos
push
jb
call
adc
push
js
mov
xor
cs
ja
aad
adc
inc
bound
xor
mov
lar
(bad)
xchg
mov
daa
sub
mov
ror
lods
imul
imul
xor
cmps
push
add
xor
fwait
aam
cmp
cmc
mov
mov
scas
clc
shl
jno
adc
inc
dec
test
loopne
adc
fcomp
fld
push
jmp
and
out
dec
call
out
std
dec
es
fst
xor
dec
and
or
jmp
enter
xchg
xchg
out
mov
xchg
repz
push
and
popf
push
lds
dec
je
xor
rcl
jge
les
pop
or
sbb
nop
cwde
mov
pop
mov
xor
in
xchg
mov
xchg
jne
and
mov
add
repnz
ror
jo
inc
arpl
cmps
retf
push
mov
out
ss
int3
mov
stos
add
add
dec
hlt
lea
in
adc
loop
or
setnp
mov
mov
xor
sti
adc
(bad)
mov
int3
sub
jnp
repnz
(bad)
scas
push
repz
jb
loope
mov
jb
mov
push
in
adc
cmp
mov
out
rcl
sbb
or
or
mov
sbb
push
xchg
sahf
fisub
xchg
fstp
lods
movs
cmp
ficomp
cmc
out
xchg
imul
jl
pop
sahf
xor
push
inc
sub
dec
and
ds
dec
dec
push
mov
xchg
shl
fnstenv
pusha
or
scas
stc
mov
inc
jg
jg
ficom
(bad)
test
out
push
mov
popf
xchg
retf
sub
jne
sub
cmp
xor
adc
retf
inc
mov
cmp
repnz
shr
inc
aam
or
ror
retf
pop
dec
pop
cmp
jae
adc
fsub
rol
sub
aad
bound
sub
leave
call
in
xor
into
pop
cmps
pop
adc
jge
mov
leave
lea
(bad)
stc
stos
xchg
sar
popf
je
or
sub
sahf
and
push
outs
pop
nop
out
js
test
push
clc
movs
dec
mov
cmp
sub
mov
imul
mul
mov
out
int3
sti
jge
fst
imul
mov
aaa
dec
add
mov
cwde
add
ss
out
mov
repz
paddw
dec
sub
aas
(bad)
mov
or
jmp
xchg
jns
adc
jae
iret
mov
out
into
xchg
sub
(bad)
fisubr
daa
push
xchg
je
lea
mov
dec
fsubp
jo
adc
xchg
call
push
gs
push
call
cmp
and
add
and
into
and
test
sub
mov
adc
sub
or
push
dec
mov
sub
cmp
lods
shl
imul
bound
xor
cld
sub
dec
push
sub
out
stos
pop
outs
popa
std
pusha
lds
sub
push
jno
or
sub
repnz
jge
xchg
push
xchg
rcr
sub
mov
mov
call
adc
and
inc
cmp
and
jne
out
js
dec
mov
mov
cmp
leave
retf
xchg
in
fmul
fstp
mov
pop
xchg
cli
loop
or
push
and
cld
mov
mov
cmp
xor
and
std
mov
arpl
int3
inc
cld
fimul
cli
imul
das
pop
fbstp
cmc
ins
pop
test
or
sbb
into
test
sub
inc
inc
mov
fidiv
pop
sub
jbe
mov
test
fsubp
push
(bad)
xchg
add
push
xchg
dec
inc
cmps
sar
pop
xchg
xchg
push
std
dec
push
jns
sahf
add
xchg
arpl
sahf
in
inc
xchg
ins
and
or
pop
aaa
out
stc
in
cdq
xchg
lds
jnp
xchg
pop
sbb
push
into
adc
int3
(bad)
fistp
int
jo
jg
sbb
mov
fdivrp
lods
lods
stos
xlat
fdivr
icebp
xchg
and
adc
sbb
(bad)
mov
push
(bad)
sbb
push
push
call
sub
in
and
mov
rol
sbb
mov
imul
xor
sub
add
mov
loopne
dec
sub
jl
adc
mov
mov
xor
call
mov
int3
movsx
push
retf
shl
add
add
pop
nop
mov
mov
push
sbb
mov
scas
xchg
stc
dec
retf
pop
movs
cmps
dec
out
xor
and
test
xchg
hlt
daa
retf
xor
inc
ja
lds
or
imul
inc
jle
jmp
and
not
mov
xor
add
daa
mov
movs
loop
inc
adc
das
loope
loope
ss
adc
mov
repz
sbb
inc
je
sub
mov
fldcw
sahf
mov
sbb
int
mov
xchg
pop
sti
mov
and
push
cld
stos
push
jle
mov
cmp
call
pop
add
push
dec
jmp
pop
adc
ffreep
into
inc
add
jmp
rcl
inc
(bad)
jnp
mov
cmp
adc
push
pop
dec
cld
sbb
jle
mov
xor
loope
cmp
add
mov
cmp
adc
sub
mov
es
jns
retf
cs
push
jge
out
jne
add
shl
push
sbb
push
scas
xor
sbb
xchg
xlat
shr
jne
xchg
inc
jne
add
pop
mov
add
xor
arpl
xchg
and
jle
sub
mov
adc
jmp
out
mov
nop
dec
sbb
and
je
mov
pop
mov
xchg
xchg
cmp
out
sub
push
arpl
fs
ret
xchg
stos
mov
mov
std
mov
inc
fcom
pop
stos
sbb
jb
adc
inc
ret
mov
xchg
jne
sbb
pop
cmps
or
hlt
(bad)
jle
pop
bound
imul
shr
fistp
jo
and
scas
mov
aas
add
sar
es
xor
xchg
pop
ret
pop
sub
ret
xor
loopne
add
or
cmp
shr
je
in
lds
xchg
ins
xchg
ror
clc
js
ret
popa
les
and
sbb
or
aas
xchg
in
sbb
ror
add
or
push
or
aam
test
cmp
in
scas
adc
push
cdq
call
les
sti
mov
cmp
cmp
jno
ja
mov
inc
lds
xor
mov
div
repz
ja
mov
xchg
in
mov
(bad)
aad
shr
ja
cmp
cs
test
pop
push
in
mov
mov
pusha
jns
out
xchg
pop
scas
lock
mov
or
mov
retf
jp
add
shl
in
pop
in
push
imul
or
hlt
mov
pop
mov
jge
inc
inc
cmp
repz
repz
outs
push
enter
mov
adc
add
cmp
fbstp
lods
and
ja
aas
loope
xchg
mov
xlat
or
scas
push
push
test
jge
xchg
es
aaa
or
leave
ret
jmp
mov
outs
cmp
daa
sar
dec
pushf
inc
push
push
mov
outs
in
add
push
in
fmul
sbb
call
xor
sbb
shl
xor
ss
or
pop
cmps
mov
mov
push
or
jmp
jno
pusha
add
fstp
mov
inc
jns
aaa
movs
out
mov
repnz
or
(bad)
imul
popa
push
xchg
inc
mov
adc
push
inc
push
sub
fs
daa
arpl
adc
sbb
dec
adc
test
cmp
cmc
pop
push
jmp
shl
ins
icebp
lods
mov
jo
popf
dec
mov
adc
sbb
push
pop
cmp
ffreep
cld
ins
je
lds
leave
fwait
arpl
scas
cmps
gs
sbb
pusha
adc
sahf
jbe
clc
iret
xchg
adc
jae
mov
sbb
ficomp
fcomp
jecxz
and
pop
retf
frstor
ret
repnz
push
xchg
xor
jmp
gs
call
xchg
sub
add
fcmovnu
pusha
push
push
mov
or
push
xchg
mov
mov
xchg
pop
shl
dec
les
leave
repz
(bad)
cld
fidivr
cmp
jle
xor
cmp
lods
test
outs
xchg
jbe
repnz
loope
jge
cmps
std
popf
cmp
cmp
mov
dec
sbb
mov
movs
dec
xlat
jne
fmul
xor
je
cli
pop
xor
push
dec
int3
mov
aad
movs
out
jb
cmp
and
out
ins
push
cmps
push
or
jg
in
adc
leave
pop
stc
(bad)
jmp
or
stc
hlt
push
mov
push
les
xchg
out
arpl
xor
stc
xor
test
push
cli
pop
sbb
sahf
sti
or
jbe
add
or
jno
xchg
sbb
imul
jno
xor
sub
sahf
shr
(bad)
xor
mov
imul
push
ds
popa
dec
pop
in
or
jns
neg
cmp
mov
push
out
and
ret
mov
(bad)
fmul
fadd
inc
(bad)
mov
dec
push
xchg
mov
movs
adc
inc
jnp
sub
test
sub
retf
jns
jmp
ret
xchg
adc
outs
fs
inc
stos
fistp
mov
inc
push
test
into
pop
outs
cmc
sbb
push
std
ins
push
lods
sub
add
push
inc
push
jae
pop
sbb
dec
in
lahf
out
push
ds
dec
clc
pop
adc
sub
lds
movs
addr16
mov
sub
jnp
xchg
pop
push
pop
(bad)
popa
or
inc
cmp
push
jno
ror
cmp
push
dec
dec
sub
mov
mov
adc
(bad)
std
outs
sti
faddp
jl
je
ins
repnz
iret
hlt
pushf
in
lods
pop
imul
out
cs
inc
shl
into
ds
inc
pop
pop
xchg
icebp
not
push
jmp
ins
mov
push
and
pop
dec
or
bound
repz
ret
push
outs
ds
pop
xor
stc
scas
dec
stc
lds
push
hlt
xor
jb
and
ds
and
test
fs
aas
int3
shl
mov
jno
and
into
xor
adc
jbe
fistp
jmp
xchg
test
lock
ret
dec
xor
clc
call
data16
fdiv
lahf
popa
ss
sbb
xor
cmps
popf
js
int
pop
dec
dec
xchg
cmc
pop
inc
(bad)
movs
fcom
cmp
jmp
ja
out
pop
call
pop
jns
mov
or
jne
repnz
xor
arpl
sub
pop
outs
pop
inc
fild
xchg
lahf
push
scas
std
out
pop
jmp
popa
jl
mov
xchg
and
pushf
inc
ds
xor
add
mov
xor
imul
sub
les
lea
push
and
fsubr
or
xchg
xchg
fld
cmp
push
mov
inc
mov
lea
stc
scas
sub
push
ficom
mov
(bad)
adc
sbb
xor
les
add
mov
arpl
retf
add
call
mov
mov
xchg
data16
lods
shr
adc
loope
jmp
pop
sbb
cmp
(bad)
xchg
dec
mov
ret
dec
mov
shr
and
movs
mov
adc
add
pop
mov
out
fild
sbb
call
rol
sbb
iret
dec
push
mov
sub
cmps
lock
fdiv
cmc
xor
sub
fnsave
icebp
loop
call
add
idiv
dec
loopne
xor
int
and
jns
jne
cmp
push
aam
(bad)
jmp
inc
test
pop
mov
pop
cs
sub
lods
popf
dec
pop
retf
out
sub
mov
ds
or
sbb
outs
sti
adc
mov
fldcw
jae
xor
scas
inc
fild
sub
or
lock
adc
in
imul
(bad)
fmul
xor
push
sbb
cmp
sub
loop
test
and
ss
dec
aas
(bad)
lea
loopne
jae
icebp
sub
push
adc
mov
pop
cmp
cmp
not
mov
push
pop
pusha
mov
fisttp
lods
inc
outs
fcmove
outs
xor
push
pop
lods
es
xchg
jl
ss
shl
inc
cwde
cdq
mov
lods
add
xchg
lahf
in
lods
push
into
neg
push
ins
into
push
mov
cmps
mov
xchg
call
cwde
and
movs
add
add
sub
dec
mov
stc
data16
add
mov
cmp
mov
cs
fisttp
adc
lea
test
retf
ss
(bad)
ins
ds
mov
cmps
add
adc
dec
inc
pop
ss
call
clc
mov
das
mov
aas
mov
pop
or
cmc
cmp
push
fs
int
shl
add
inc
or
cmps
add
aas
(bad)
sbb
add
rcl
lods
push
shl
jo
ret
retf
in
add
outs
aaa
push
sub
in
or
mov
mov
repnz
ds
mov
pop
add
jne
jmp
mov
icebp
daa
arpl
inc
or
mov
jae
inc
add
sbb
adc
ins
pop
sbb
shl
xchg
ds
push
adc
inc
adc
push
retf
push
jnp
pop
mov
xchg
test
pop
sbb
scas
jns
cmp
pop
out
jmp
cmp
bound
xor
jnp
fs
ror
cmp
in
out
pop
jo
aam
xchg
cmp
and
loopne
push
sahf
mov
sub
pop
pop
inc
pop
imul
out
dec
add
js
inc
retf
dec
inc
dec
(bad)
cld
pop
jae
mov
jl
cmp
enter
dec
ror
xchg
dec
fisttp
gs
mov
scas
sub
in
(bad)
ins
inc
int3
jns
mov
sbb
mov
jecxz
loop
cdq
mov
(bad)
fimul
daa
dec
and
xchg
pop
outs
(bad)
jnp
inc
lahf
js
ds
stc
iret
push
push
daa
dec
in
imul
push
dec
push
nop
add
adc
jg
cli
xor
sahf
call
sub
mov
int3
bound
dec
std
aad
data16
hlt
in
rol
add
xor
movs
in
add
sbb
cs
xor
repz
fucom
or
fimul
lock
xchg
push
cmp
xor
cmp
dec
pop
movlps
in
sub
add
(bad)
and
pop
fdiv
adc
mov
call
outs
jmp
ror
adc
lods
fwait
stos
std
push
out
or
mov
gs
movs
mov
push
push
mov
adc
(bad)
data16
repz
sbb
dec
dec
and
sub
repz
xor
or
xchg
jbe
das
pusha
gs
addr16
div
mov
sbb
call
cmp
aaa
cmp
jle
mov
ds
inc
in
mov
sub
and
dec
ja
xchg
jmp
mov
cs
and
shl
adc
add
int
lods
sub
push
cmps
cmp
shl
jbe
(bad)
fistp
mov
pop
adc
xlat
xchg
push
bnd
jno
mov
les
ja
neg
rcl
mov
shl
movs
cld
inc
push
test
inc
push
and
out
lods
fdiv
pop
popa
dec
jge
icebp
shl
jae
cmp
add
sar
rol
push
jae
pop
jle
cmc
xor
adc
cmp
out
rcl
imul
aad
push
jns
cmp
mov
repnz
leave
xor
and
cdq
pusha
adc
mov
test
out
pop
cmp
cmp
es
daa
or
jge
xchg
jae
xor
imul
vpunpckhdq
cmp
push
in
arpl
mov
test
push
jb
mov
inc
add
aas
retf
int3
fistp
sbb
inc
cmps
movs
jecxz
mov
ja
mov
push
popf
clc
dec
inc
xlat
jnp
cmps
stos
lods
cmp
adc
gs
jle
xor
inc
jge
mov
inc
xchg
jmp
xor
stos
outs
(bad)
sbb
arpl
std
std
movs
xor
mov
or
mov
pop
sahf
lock
xor
ss
repnz
pop
sbb
push
mov
push
or
cmp
jnp
aas
mov
test
dec
test
into
fisubr
jle
mov
(bad)
retf
sbb
lock
pop
retf
or
stc
pop
in
mov
add
cmp
inc
or
inc
call
xchg
xor
std
outs
fwait
push
(bad)
cli
cwde
pop
jmp
mov
adc
mov
aaa
loopne
enter
cmp
shl
jns
pusha
sub
mov
mov
push
pop
out
cmps
dec
sub
pop
adc
movs
sar
jae
xor
scas
inc
add
loope
je
jmp
xchg
xchg
jae
cdq
out
jg
pop
xchg
lods
std
dec
sbb
in
fs
stc
lods
ins
xlat
shl
pop
stos
scas
jnp
movs
mov
outs
imul
push
mov
mov
xchg
dec
enter
inc
data16
test
mov
sbb
test
adc
mov
xor
and
dec
adc
pop
imul
xor
cmps
shr
cs
add
xor
popa
out
and
push
loop
sbb
clc
fidiv
(bad)
xchg
jmp
cmp
(bad)
mov
icebp
(bad)
jmp
clc
cmc
add
and
lods
xor
shl
pusha
sbb
ins
stc
in
out
scas
xlat
icebp
(bad)
lock
sti
or
jb
sti
not
cmp
repnz
out
dec
into
xchg
neg
sahf
mov
adc
adc
retf
xlat
mov
pop
mov
cs
pop
and
adc
fsubr
ret
cs
sbb
mov
mov
stos
sub
xchg
rol
push
mov
jo
xor
xchg
cdq
cmp
jmp
xor
(bad)
in
popa
(bad)
(bad)
lock
xchg
shl
fimul
mov
mov
cs
in
sar
es
cs
sub
dec
aam
shr
test
ins
jae
and
cdq
movs
xchg
inc
mov
in
jecxz
pushf
ror
fwait
jnp
cmp
nop
adc
mov
or
test
(bad)
mov
add
dec
cmp
or
movs
push
push
jg
ja
push
loopne
sbb
push
xchg
mov
xor
adc
mov
sub
jb
mov
mov
fdiv
push
mov
cmp
cmp
cwde
inc
mov
call
retf
xchg
cdq
jno
shl
xor
sub
sub
jmp
dec
cwde
cmps
mov
mov
mov
fwait
dec
and
in
mov
mov
sti
iret
add
pop
arpl
and
cvtps2pd
mov
push
or
jo
(bad)
sahf
push
mov
mov
fwait
mov
(bad)
sahf
(bad)
std
push
xlat
cmp
inc
jge
faddp
xchg
ss
and
or
pushf
xor
push
adc
cmps
jb
or
dec
nop
les
pop
std
pcmpgtb
out
pop
mov
popa
push
in
push
arpl
outs
push
cmp
es
scas
faddp
dec
mov
sub
mov
cmp
repz
pop
imul
and
xchg
dec
xor
xchg
jge
scas
push
cmp
jp
sahf
push
out
call
pop
lahf
neg
inc
test
jae
loope
shr
xor
jnp
in
dec
idiv
dec
mov
lods
push
adc
add
dec
jle
sub
xor
shld
movs
inc
xor
lods
out
je
shl
neg
scas
pop
mov
cld
push
(bad)
ja
addr16
sbb
mov
sbb
pop
ins
das
mov
xlat
xor
fisub
add
mov
jno
into
mov
sbb
fld
movs
pop
inc
pop
inc
sbb
jmp
lea
cmp
pop
cmp
jbe
sahf
mov
lods
inc
sbb
pop
loopne
xor
cli
lods
or
dec
rcr
dec
push
ins
xchg
mov
lds
or
mov
test
mov
popa
out
lea
sbb
sub
outs
call
loop
add
movs
jmp
aam
ror
movs
jg
out
dec
pop
ja
les
mul
call
jg
pop
imul
aam
cld
xchg
outs
pop
sti
jp
push
push
stos
fld
jnp
jg
repz
sub
sbb
ret
lea
out
(bad)
lods
mov
mov
popa
dec
and
sbb
cli
push
sbb
xor
cdq
inc
test
movs
je
pop
inc
and
and
mov
movs
shl
mov
add
push
sub
ds
inc
(bad)
out
cmp
into
fild
and
mov
mov
xchg
and
bound
push
xor
adc
dec
out
bound
xlat
fwait
jbe
les
ds
mov
in
jmp
retf
jle
xor
cwde
cs
stos
mov
pop
ja
or
and
iret
loopne
test
mov
cmp
pop
add
inc
enter
jp
retf
popa
add
imul
or
lods
bound
cmp
jae
xchg
adc
nop
call
mov
stc
sbb
mov
(bad)
ret
inc
sub
xor
sbb
push
dec
sub
shr
cwde
jg
call
enter
cli
add
in
out
pop
rcl
popf
add
ja
movs
in
scas
sbb
sbb
adc
sbb
xchg
mov
je
pop
adc
lea
shl
sub
dec
push
rcr
in
mov
call
in
add
mov
push
fsub
dec
mov
out
(bad)
jae
jmp
xor
mov
(bad)
jecxz
sub
or
scas
pop
mov
adc
fstp
js
mov
sahf
mov
scas
jmp
dec
jno
push
mov
push
mov
ss
jbe
fsub
cmp
or
aaa
and
inc
aad
es
out
es
jbe
shr
dec
in
outs
(bad)
fbstp
cmc
cmp
push
mov
in
je
lock
rcl
in
call
out
(bad)
mov
repz
(bad)
mov
(bad)
jmp
shl
loope
or
cli
cmp
jle
adc
leave
xchg
mov
mov
into
or
cmp
cmps
xchg
dec
sbb
dec
cmc
jae
dec
push
sbb
sti
icebp
int3
sbb
jne
lods
push
cld
fcmovb
cmp
push
jmp
int3
add
or
lods
xchg
popf
lea
inc
(bad)
sbb
repnz
jmp
std
sbb
pop
dec
jp
ss
mov
and
mov
push
pop
and
sar
jge
ficom
ds
inc
rcr
sahf
and
shl
rol
fnstsw
mov
adc
std
dec
and
fs
(bad)
retf
add
and
std
test
js
inc
in
mov
popf
xchg
push
mov
jo
fcom
inc
mov
addr16
inc
in
cmps
jae
ficomp
cwde
out
fwait
(bad)
pusha
xchg
shl
(bad)
lahf
repz
iret
jg
push
mov
pop
push
hlt
push
sbb
jae
add
repz
mov
sub
mov
sbb
and
fdivrp
fistp
xor
push
call
scas
cwde
sbb
sub
mov
mov
shl
stos
(bad)
out
loopne
mov
(bad)
dec
lds
loop
inc
mov
push
inc
inc
dec
xor
retf
scas
repnz
pop
sbb
mov
shl
rcr
inc
ins
inc
add
push
jmp
push
enter
and
out
or
je
js
fsubr
pop
fild
mov
xchg
inc
inc
repz
mov
cmp
xchg
repnz
dec
adc
adc
test
inc
or
jmp
lds
jecxz
test
sbb
(bad)
jmp
sbb
test
data16
push
mov
cs
inc
dec
add
inc
adc
add
outs
div
pop
dec
xchg
dec
pop
fwait
clc
or
ins
xchg
les
mov
ror
xchg
into
rcl
inc
(bad)
fadd
fbstp
inc
test
jmp
inc
pop
jns
into
and
rol
not
(bad)
mov
xor
xchg
xchg
xchg
loope
(bad)
lds
or
or
sbb
rcl
sbb
push
mov
push
repz
push
push
js
or
jbe
cmc
cmp
lods
fldenv
cmp
push
pop
adc
cwde
inc
pop
loope
les
mov
adc
add
inc
mov
in
aaa
xchg
fst
dec
sbb
cmp
mov
daa
loope
fdecstp
pop
loopne
stos
inc
popf
pop
or
push
cmp
in
cdq
xor
and
jne
cld
into
cld
inc
xchg
pop
and
outs
jbe
xor
cld
aam
add
jns
cmps
dec
push
adc
fild
dec
mov
mov
jnp
pusha
enter
add
sbb
icebp
pop
jne
popf
inc
leave
mov
popf
fsubr
fst
lock
jle
retf
add
rcl
jmp
push
test
cmp
xchg
mov
inc
in
cmp
add
cmc
outs
pop
dec
mov
pop
xchg
jne
xlat
push
outs
gs
fiadd
push
addr16
cmp
sar
stos
fbstp
xor
(bad)
sar
cmc
sub
(bad)
pop
mov
xchg
jnp
icebp
cld
call
(bad)
icebp
jecxz
sbb
sbb
loope
sbb
mov
jmp
pusha
fcomp
pop
pop
imul
sbb
ja
in
mov
inc
xchg
sbb
mov
mov
jecxz
xchg
mov
ins
dec
pop
dec
mov
jnp
pop
inc
adc
ror
je
fisttp
out
mov
adc
cmp
xchg
outs
add
ins
call
call
jo
leave
aas
pop
pop
xor
cld
push
add
jmp
push
cs
in
push
outs
pop
scas
dec
cmp
fsubr
push
mov
shr
ins
adc
and
lods
loope
mov
push
push
mov
xor
sub
inc
mov
fstp
cmp
dec
jmp
imul
xchg
xchg
(bad)
mov
je
clc
mov
loop
inc
lock
mov
cmc
loopne
mov
(bad)
addr16
inc
sbb
or
inc
int3
movs
mov
es
add
mov
cs
xor
mov
(bad)
retf
sub
test
pop
popf
scas
outs
movs
adc
leave
pop
sbb
mov
mov
cmps
gs
mov
fild
lea
(bad)
fistp
ins
loopne
adc
adc
outs
out
mov
push
and
and
mov
add
mov
mov
mov
ret
dec
je
mov
cli
pop
adc
clc
nop
cmp
call
or
test
test
adc
mov
xor
fisubr
aam
mov
cld
dec
pop
xor
xor
cmp
jecxz
push
xchg
or
aaa
cmp
mov
or
shr
popa
dec
fdiv
cs
(bad)
push
mov
sub
jae
xchg
mov
dec
scas
dec
cs
dec
jb
(bad)
xchg
dec
xor
neg
lock
sub
jb
mov
mul
dec
jmp
scas
into
lea
out
(bad)
shl
sbb
sub
retf
stos
out
mov
loop
(bad)
das
jl
push
sbb
jae
cmp
call
ja
xchg
aad
sub
inc
int
or
out
xchg
imul
jbe
mov
outs
ins
leave
inc
rol
push
das
rep
mov
in
adc
mov
mov
or
sub
xor
stc
dec
cmp
cmp
push
inc
mov
nop
out
push
sbb
xor
scas
(bad)
cmp
aad
cdq
das
loop
in
cmp
inc
inc
inc
mov
fsubr
inc
stos
mov
xchg
push
loop
cmp
outs
add
mov
push
imul
xchg
push
lea
das
icebp
or
inc
enter
arpl
dec
jo
fmul
add
and
fmul
and
dec
mov
cwde
outs
sbb
mov
pushf
pusha
inc
xlat
sbb
data16
int3
(bad)
push
mov
jae
out
push
cs
xchg
ficom
sbb
xor
adc
jbe
cmps
cmp
mov
sbb
sub
aas
add
inc
dec
cmps
fistp
xchg
in
xchg
jbe
stos
pop
(bad)
(bad)
mov
ss
aaa
adc
adc
xchg
cmp
mov
into
hlt
out
jae
dec
or
or
push
sub
lahf
aas
cmp
imul
loopne
and
cwde
mov
mov
imul
push
test
push
outs
push
pop
xchg
ret
jecxz
push
dec
xor
ss
iret
das
mov
fadd
lds
jge
movs
push
cmp
sub
cmc
das
das
pop
and
adc
scas
(bad)
jmp
movs
bound
mov
mov
aas
xchg
int3
stos
pop
shl
ret
fmul
mov
ror
pop
add
test
fldenv
push
mov
sbb
ds
imul
movs
mov
shl
sbb
ficom
psrlq
xchg
stc
sub
cmp
and
fiadd
sub
js
pusha
sbb
xchg
or
push
je
test
test
fst
popf
leave
daa
pop
bound
or
cmc
cld
dec
push
dec
iret
sub
sub
cwde
test
sbb
and
cmp
int3
add
cwde
fstp
mov
out
adc
adc
out
mov
mov
mov
ret
iret
mov
iret
sahf
inc
pop
cdq
inc
mov
lahf
inc
or
pop
dec
scas
xlat
jmp
inc
jne
xchg
in
into
sub
loope
repz
fist
mov
mov
push
or
and
add
test
jecxz
add
ds
pop
cmp
inc
jmp
and
push
xor
xchg
loop
shr
dec
adc
pop
repz
lds
xchg
inc
mov
hlt
es
mov
and
pop
(bad)
call
in
xor
les
shl
dec
push
sub
jnp
xchg
push
ficom
test
push
inc
(bad)
inc
fisub
adc
jecxz
push
ds
sti
aam
repnz
sbb
mov
stos
hlt
call
xchg
xchg
mov
sub
ds
xor
pop
mov
xor
pop
jle
jb
push
call
adc
lods
push
pop
xchg
jb
cmp
inc
fadd
loopne
dec
outs
sub
lods
clc
into
test
sbb
repz
int
inc
popa
fcmovu
das
adc
mov
fsub
daa
imul
inc
daa
sbb
out
ss
xchg
cmp
add
popa
je
xlat
and
push
xchg
mov
mov
fisubr
and
adc
mov
aad
adc
xchg
bswap
or
mov
(bad)
dec
jae
mov
lods
gs
cmps
xor
movs
test
xchg
loopne
mov
sbb
fnstsw
push
rcr
cmps
enter
sub
and
sar
cmps
mov
add
xchg
shr
and
mov
shl
rol
dec
retf
push
sub
jmp
push
aas
ror
jns
dec
push
mov
mov
cmp
cld
test
xchg
xchg
into
sahf
mov
jns
pop
jecxz
sub
out
sbb
mov
pop
retf
jno
jo
je
dec
xlat
jne
jp
js
adc
mov
out
add
push
or
sbb
aad
or
fsubr
pop
lock
(bad)
sub
or
clc
imul
jge
mov
loope
or
and
push
xor
fs
cmp
aam
pushf
test
mov
or
or
test
inc
les
add
jne
jnp
jecxz
dec
cmp
push
test
xor
xchg
jle
pop
nop
cvtpi2ps
xchg
add
push
or
lahf
cmp
mov
(bad)
adc
les
je
leave
cmps
push
jb
push
add
fist
ret
jl
pop
aas
(bad)
push
movs
test
adc
jl
daa
xor
test
add
xchg
lea
add
push
mov
push
and
shr
repnz
ror
mov
shr
xchg
test
xchg
lahf
jne
pop
sub
mov
push
push
pop
out
push
shl
push
mov
add
push
sbb
mov
inc
fdiv
outs
xlat
cwde
adc
xlat
fisttp
pop
sbb
xchg
repz
arpl
mov
xchg
jecxz
cdq
sbb
dec
xchg
test
push
sbb
push
out
jge
jle
or
stc
pinsrw
mov
out
adc
adc
(bad)
dec
les
dec
dec
and
jle
xchg
daa
std
(bad)
out
test
dec
cmp
data16
cmps
dec
xor
fs
imul
jp
mov
xchg
imul
sbb
mov
jns
cdq
jp
pop
cmp
pop
dec
add
jge
adc
cli
aad
ficomp
or
fmulp
or
add
xchg
or
lds
fs
jb
or
das
retf
jae
add
(bad)
jno
in
jmp
mov
cmp
fsubrp
pop
in
xchg
fst
or
jo
sbb
xor
add
jge
dec
add
xor
mov
mov
pop
adc
into
cmps
cld
pushf
daa
and
aaa
test
jl
mov
aad
ss
jns
and
xor
outs
stos
mov
call
xor
adc
sub
adc
call
(bad)
mov
scas
mov
pop
or
mov
movs
in
lahf
push
add
fsubr
shl
xchg
fist
push
ss
daa
cmp
jo
ret
in
neg
loope
nop
test
dec
shr
pop
ret
out
in
inc
push
aaa
ja
popa
test
lods
cmps
sub
mov
(bad)
jmp
adc
push
cmp
ins
rcl
das
test
xor
dec
daa
xchg
xchg
adc
into
test
adc
and
push
pop
cld
inc
fistp
mov
xor
jns
xchg
mov
mov
jnp
xor
cmp
add
mov
and
ret
mov
mul
and
outs
adc
jbe
mov
dec
rcr
cmp
ret
lock
adc
js
xchg
jl
bnd
sub
xor
movs
jmp
jns
mov
jmp
arpl
aas
jmp
in
xchg
jns
pop
jg
fiadd
repz
ret
test
fld
jmp
sub
cmps
popa
xchg
pop
in
addr16
pop
ja
dec
inc
mov
lea
or
sub
arpl
mov
jb
cld
cmp
retf
mov
lahf
push
push
adc
pop
jmp
inc
outs
or
jg
loopne
xlat
or
cwde
(bad)
sub
and
jns
mov
pop
sub
or
xor
pop
cmps
add
inc
int3
sbb
push
in
lods
movs
in
in
jbe
mov
and
xor
enter
imul
loop
inc
jae
pop
shl
pop
push
gs
dec
xor
pop
sti
call
xchg
into
in
lock
mov
test
rol
sbb
imul
xlat
xor
lea
dec
cld
test
fsubr
mov
mov
repz
inc
and
inc
cmp
jmp
in
pop
in
arpl
and
ja
enter
dec
jo
push
int3
inc
xor
movs
pop
inc
aas
fcomp
dec
jo
push
jns
test
es
add
adc
fwait
call
push
(bad)
je
ror
adc
clc
enter
shr
mov
xor
rol
es
shl
and
jne
xchg
aas
jb
xor
repz
cmp
sbb
cmp
dec
pushf
add
sbb
movs
test
pushf
(bad)
in
mov
pop
repnz
adc
mov
xor
add
int3
ss
adc
inc
jbe
inc
fwait
aad
repz
dec
cs
inc
push
cld
mov
jnp
mov
cmps
or
daa
je
cwde
jl
shl
arpl
push
lahf
clc
adc
call
and
jbe
dec
cmp
call
and
call
pop
mov
fnstcw
sahf
rol
push
mov
sub
cmp
mov
in
int
xlat
retf
lods
imul
mov
cmp
popf
mov
sbb
aas
inc
inc
jmp
mov
int3
arpl
cs
push
jmp
sbb
xchg
dec
xchg
xchg
inc
arpl
dec
adc
push
or
push
sbb
ficom
sahf
jno
xchg
(bad)
mov
dec
mov
push
push
xlat
sti
xor
cmp
arpl
sbb
lock
jp
jge
test
pop
push
repnz
in
not
add
retf
aad
fisttp
add
dec
aaa
mov
stc
dec
and
mov
xor
add
dec
or
xor
das
adc
gs
mov
inc
adc
cmp
mov
dec
jl
pop
mov
inc
addr16
push
xchg
dec
cmp
shl
fisttp
xchg
inc
loop
lahf
and
and
fs
mov
les
and
popa
test
jg
hlt
push
shl
sbb
sbb
stos
or
inc
pop
movs
inc
and
mov
cmps
(bad)
cmps
ja
out
xor
sbb
jmp
aas
cmp
add
aad
mov
xchg
retf
jp
imul
mov
test
mov
stos
sahf
pushf
mov
fstp
adc
inc
inc
xchg
loop
lahf
cmp
cwde
lds
jo
dec
and
jmp
jmp
jo
scas
test
push
pusha
call
popf
mov
ja
jle
scas
inc
xchg
mov
cmp
dec
ds
gs
push
jle
and
ds
in
stos
xor
outs
cmp
outs
inc
cld
adc
das
sub
gs
stos
push
dec
jmp
outs
fist
ss
push
and
cmp
sbb
imul
stos
sbb
int3
div
push
aas
jp
jns
scas
jle
es
adc
pop
lods
inc
(bad)
jns
mov
push
mov
movs
xchg
jecxz
ret
mov
inc
xchg
mov
jae
cdq
repnz
into
adc
popa
sub
jl
and
mov
mov
rol
mov
ds
icebp
div
xchg
mov
jmp
pop
add
ins
addr16
pop
clc
rol
push
leave
pusha
mov
push
out
mov
push
rcl
rsqrtps
jae
lea
xor
cmp
aaa
push
pusha
test
ins
dec
push
fsubp
(bad)
pop
mul
and
gs
(bad)
enter
pop
or
cdq
xchg
push
cmp
jp
test
xchg
stc
sbb
push
inc
sahf
or
gs
mov
iret
lock
pop
jle
cs
or
inc
bound
(bad)
adc
mov
repnz
cmps
ja
nop
lods
mov
xchg
out
and
imul
xchg
jmp
push
adc
std
pop
push
adc
rcr
(bad)
or
fisttp
int
push
cmc
mov
or
inc
cld
sub
jge
adc
call
push
scas
aad
cmp
loope
push
(bad)
mov
iret
and
mov
fnstcw
sbb
rol
shr
inc
cmps
cwde
xchg
in
in
xchg
outs
mov
add
aad
mov
add
xchg
scas
ins
sub
ret
sti
gs
dec
int
loop
adc
cmp
mov
xor
les
jg
outs
xchg
mov
mov
jg
sbb
push
clc
outs
jecxz
test
out
adc
fbstp
jmp
add
inc
mov
sti
idiv
add
jo
mov
ret
outs
mov
and
dec
(bad)
(bad)
aas
cmp
push
xchg
jp
pop
mov
dec
int3
or
dec
ret
mov
das
dec
std
mov
fisttp
fimul
data16
cmp
pop
aad
clc
fsub
imul
jno
adc
mov
xchg
xor
sbb
adc
cld
push
pop
ins
push
in
push
repz
mov
adc
push
xchg
(bad)
mov
cmp
sbb
repnz
and
fiadd
xor
xchg
enter
pop
dec
add
mov
sub
push
pop
fmul
push
dec
inc
retf
scas
xchg
in
outs
pop
xchg
mov
push
aam
and
pop
js
push
test
lods
push
cmp
in
cld
mov
mov
adc
sub
fcomp
loope
inc
cmps
dec
sbb
cli
sti
mov
movs
iret
mov
and
or
div
push
or
xor
xchg
rcl
pusha
popa
cdq
or
push
cmp
xchg
dec
mov
sbb
dec
jg
test
sub
iret
shl
test
adc
fwait
arpl
mov
test
imul
jl
dec
xchg
out
and
push
sub
adc
push
xchg
mov
sar
shl
mov
cwde
addr16
or
(bad)
mov
mov
mov
aaa
mov
loopne
and
ret
dec
lods
mov
xor
jb
adc
es
int
jp
xor
jns
inc
test
jb
out
xor
test
sub
mov
add
bound
in
jg
lds
cmp
push
push
cmp
pop
push
scas
mov
jns
nop
and
mov
int
mov
mov
repz
cmp
jno
jne
adc
std
call
arpl
mov
adc
sti
mov
mov
xor
push
out
loopne
sub
add
pop
dec
pushf
fs
push
popf
aam
dec
fwait
clc
div
mov
sub
test
mov
leave
imul
dec
loopne
fwait
int
xor
pop
loopne
test
pushf
or
loopne
push
jmp
daa
int3
pop
mov
fist
or
jg
test
xor
jbe
fst
inc
jns
scas
mov
xchg
mov
aas
xchg
mov
add
xor
cwde
mov
mov
cmps
imul
jg
mov
cmp
pop
jbe
repz
mov
inc
sub
clc
dec
out
xchg
cmps
iret
jmp
mov
or
idiv
or
xor
add
lods
mov
je
inc
lahf
jge
pop
add
mov
mov
xchg
and
test
dec
int
scas
shl
fdivrp
jg
lds
pop
leave
sub
test
les
bt
add
call
in
rol
mov
mov
fild
pop
adc
pop
xchg
data16
loopne
add
es
cmc
fmulp
add
xor
ret
push
or
xchg
push
mov
in
or
ret
rcr
push
movs
pop
ds
mov
je
ret
ret
pop
(bad)
and
hlt
add
mov
sbb
fmul
mov
imul
cdq
out
scas
cmps
fstp
xchg
push
sub
out
xor
or
call
fs
jmp
mov
int3
ret
push
sub
in
loopne
test
cld
jmp
adc
jp
fs
fwait
mov
call
push
rol
into
ss
fwait
adc
adc
xor
push
arpl
xchg
jle
aad
cwde
rcr
add
and
fcmovu
push
push
dec
les
sbb
inc
loop
in
sub
sub
cmp
sbb
inc
or
or
mov
cmp
jl
and
xchg
pop
cs
test
sub
lods
mov
outs
mov
cs
(bad)
inc
retf
mov
and
xlat
push
push
add
or
xor
cld
and
xor
nop
and
call
and
mov
xor
pop
hlt
(bad)
(bad)
(bad)
or
pop
mov
mov
or
enter
sbb
popa
mov
jnp
dec
(bad)
clc
mov
sbb
inc
out
fisttp
js
es
scas
pop
inc
stos
add
(bad)
iret
(bad)
jg
std
cs
pop
test
test
call
scas
imul
cmp
adc
in
test
cmp
xchg
in
mov
mov
dec
sub
outs
push
addr16
pop
sbb
cwde
out
movs
mov
cmc
pusha
in
fadd
into
addr16
xchg
and
push
sbb
in
ins
fadd
push
push
dec
xchg
mov
and
in
sub
pop
shr
daa
daa
xchg
sar
pushf
jo
faddp
clc
sub
cdq
dec
idiv
xor
loop
mov
mov
jg
ins
cmp
(bad)
call
outs
repnz
inc
xor
push
add
cmp
xor
push
jbe
push
mov
pop
add
addr16
fsubr
lds
inc
stos
adc
cmp
adc
and
gs
mov
and
xor
scas
pop
adc
inc
icebp
(bad)
ror
pop
mov
sbb
cmp
xchg
inc
or
stc
bswap
dec
xchg
sti
or
pop
pop
add
inc
int3
jne
cld
xchg
sbb
cmp
push
repz
call
das
mov
clc
mov
push
(bad)
adc
shl
out
inc
push
scas
ja
test
out
xor
pop
dec
ss
cmps
sbb
pop
or
out
sar
or
jmp
sbb
stc
mov
lods
add
jae
dec
jno
jo
inc
ret
sub
xor
and
int
(bad)
sub
ss
int3
and
cmps
aas
lods
dec
out
sbb
test
repz
je
pop
sbb
sbb
push
pop
repnz
cmp
fmulp
stc
(bad)
sbb
jno
sti
inc
jle
js
mov
test
xlat
inc
adc
mov
dec
les
cmps
dec
dec
pop
and
jmp
xor
icebp
into
idiv
ret
sbb
or
lahf
add
dec
jne
and
hlt
cmp
out
inc
movs
push
jns
aam
addr16
cdq
lods
cmp
pop
xor
jbe
sub
fimul
pop
into
ja
or
adc
pusha
int3
cwde
popf
pushf
loope
lods
sbb
inc
inc
retf
cwde
ins
xchg
inc
out
jmp
and
(bad)
loopne
add
mov
mov
add
push
cs
fist
pop
lea
jp
pop
jno
cli
rcl
in
jbe
loope
dec
push
std
push
jg
rcl
ret
ss
popa
(bad)
es
sub
jo
mov
ret
stos
enter
adc
pusha
je
sahf
mov
mov
mov
mov
cli
jl
adc
sbb
jae
pop
pop
(bad)
in
or
push
jo
fiadd
mov
mov
(bad)
fdivr
gs
sbb
add
jmp
stc
es
dec
xlat
push
add
inc
in
scas
adc
leave
sahf
jmp
mov
jmp
mov
icebp
in
pop
inc
xchg
xchg
and
call
cmp
xchg
ja
jb
adc
pop
jb
or
pop
pop
push
arpl
out
pushf
push
inc
push
enter
(bad)
and
push
push
mov
mov
pop
inc
add
xor
dec
scas
aam
popa
outs
mov
push
add
ret
test
test
sub
frstor
jle
push
pop
cmp
jecxz
mov
adc
call
mov
jecxz
mov
sub
sbb
xchg
fst
mov
ins
out
mov
pop
mov
xor
cmp
adc
rcl
jmp
mov
add
popa
bound
pop
cmp
and
fst
call
imul
jp
add
adc
push
jnp
push
loop
dec
xchg
jae
pop
and
ror
scas
push
aas
(bad)
cld
bound
fistp
and
mov
shl
adc
mov
jne
fistp
mov
stc
scas
ret
dec
cdq
aaa
bound
mov
lea
adc
in
xor
cmp
push
not
shr
(bad)
pop
dec
and
cmps
adc
sbb
sahf
imul
add
cmp
and
test
jge
mov
shl
mov
test
(bad)
add
loop
call
movs
mov
inc
add
fwait
add
daa
(bad)
(bad)
push
dec
mov
sub
adc
mul
push
lods
mov
data16
out
cmp
(bad)
lods
pop
in
icebp
push
jo
lock
mov
(bad)
jne
cmps
fist
mov
ficomp
and
pop
xchg
add
add
dec
loop
push
adc
jnp
jge
aad
sub
xor
icebp
cli
scas
xor
stos
(bad)
das
push
push
icebp
(bad)
aam
shl
sti
int3
ins
xchg
call
or
mov
pushf
mov
div
sub
cli
xor
jmp
mov
mov
stos
in
out
mov
add
mov
mov
add
pop
push
push
les
jo
scas
iret
jno
retf
sbb
test
iret
aam
imul
mov
test
in
or
leave
pop
fistp
stos
mov
mov
inc
cli
inc
jp
or
add
daa
sub
mov
test
enter
ret
imul
mov
pop
jle
jns
adc
(bad)
sahf
pop
fild
outs
push
mov
pop
das
addr16
aad
test
in
fidivr
mov
std
(bad)
sbb
or
jg
(bad)
pop
mov
push
add
dec
jmp
jle
es
jns
aam
sub
loopne
shl
icebp
sbb
mov
into
gs
sub
cmp
and
hlt
xchg
dec
aam
cmps
and
and
jbe
sub
mov
sub
mov
test
loope
rcl
pushw
xchg
pop
push
scas
fwait
cmp
retf
sti
sub
retf
mov
hlt
pop
loop
loop
clc
cmp
in
add
xor
xchg
pop
(bad)
fisub
out
push
mov
into
retf
cmp
jg
lds
xor
push
ffree
outs
pop
push
(bad)
pop
inc
inc
pop
dec
test
(bad)
push
fldln2
mov
or
mov
cmp
out
(bad)
mov
stc
ret
mov
push
lods
scas
adc
jmp
cmps
push
shl
rcl
fistp
nop
and
(bad)
mov
sti
inc
test
out
rcr
out
call
dec
mov
loopne
daa
hlt
(bad)
xchg
xor
inc
aas
adc
or
(bad)
xchg
sbb
in
push
sar
loope
dec
aas
leave
sub
or
mov
or
jmp
pop
sbb
in
movs
bound
push
lahf
ror
sub
or
push
ror
dec
rcl
rcl
movs
inc
jmp
pop
mov
mov
ss
inc
dec
cmp
aad
push
dec
out
fidivr
jo
frstor
repz
(bad)
or
int3
pop
in
sbb
xor
mov
leave
sbb
ret
inc
inc
int
mov
enter
or
adc
dec
out
mov
imul
aaa
inc
loope
mov
mov
ja
cli
xchg
xor
adc
imul
jne
cmc
xor
mov
arpl
jbe
ins
sub
push
cli
ins
dec
icebp
and
mov
cmp
mov
popa
bound
cld
sub
add
jmp
ret
imul
shr
ds
jnp
ja
push
nop
sub
and
sbb
or
lods
jmp
lock
ffree
repz
mov
mov
iret
cmp
rcr
in
and
cmp
inc
loopne
inc
xchg
test
or
leave
sbb
int
jmp
jmp
mov
pop
repnz
jle
dec
daa
ret
daa
or
or
int
popf
dec
adc
cmps
push
imul
mov
jbe
jmp
(bad)
xchg
in
inc
std
cmc
inc
dec
arpl
push
dec
retf
xlat
popfw
mov
nop
loop
(bad)
sbb
pop
test
mov
jl
cwde
inc
mov
movs
jne
mov
push
in
jne
in
pusha
iret
mov
(bad)
adc
mov
in
(bad)
(bad)
(bad)
jmp
pop
adc
arpl
test
dec
std
jmp
mov
add
dec
fiadd
lds
adc
push
les
add
aam
push
fwait
cdq
popa
inc
jns
inc
inc
pop
adc
sub
fdivr
sbb
jne
movs
mov
arpl
pusha
iret
sub
cdq
(bad)
sub
cmps
sahf
jo
out
adc
mov
pushf
sub
dec
cmp
sahf
jge
stos
cmp
retf
inc
(bad)
aam
retf
pop
adc
das
pop
enter
aaa
movs
sbb
ins
inc
test
ss
loope
adc
or
or
adc
aaa
mov
stos
call
xor
shr
or
or
or
and
jae
es
inc
push
dec
xlat
fcom
adc
mov
xlat
add
sahf
push
std
loope
xchg
xchg
mov
or
mov
call
(bad)
inc
movs
pop
stos
clc
sar
mov
arpl
mov
bound
pop
mov
xchg
and
outs
mov
nop
fbstp
mov
xor
jl
mov
pop
ss
loope
mov
mov
ds
mov
jae
or
cmp
fdiv
sar
sub
pop
xchg
or
cmp
cmp
jl
out
into
(bad)
repz
retf
or
scas
mov
xchg
icebp
loop
dec
pusha
iret
out
jmp
mov
fcomi
std
dec
or
push
jp
push
and
aad
inc
adc
mov
in
dec
jne
test
pop
add
sbb
cs
fld
in
cwde
test
add
dec
mov
out
test
cdq
push
push
ins
xor
mov
js
cmp
repz
loop
pop
jle
inc
dec
and
fprem
call
(bad)
pop
mov
repnz
sar
xchg
sar
xchg
mov
movs
mov
adc
fcmove
xlat
mov
xchg
rol
or
mov
loopne
jl
inc
ss
sbb
leave
push
div
sub
mov
mov
in
pop
aaa
lods
push
pop
xchg
aas
fiadd
xchg
sbb
mov
scas
mov
call
cmp
test
ret
mov
loopne
pop
inc
pushf
mov
(bad)
pop
adc
bnd
shr
enter
loopne
pop
jmp
xchg
jbe
out
xchg
je
ins
or
mov
push
or
and
inc
pop
leave
pop
or
clc
xchg
or
pusha
dec
xor
in
sbb
sub
(bad)
cmc
test
xor
sbb
adc
aad
xlat
or
mov
imul
mov
mov
test
dec
or
mov
clc
xor
adc
xchg
out
fcmovne
lods
mov
xchg
cmp
adc
pop
push
mov
mov
cmps
and
or
xchg
aam
aaa
test
arpl
fimul
call
fcomp
and
push
inc
sbb
mov
loop
movs
push
movs
sbb
cmp
dec
test
mov
sbb
sub
pusha
dec
cmp
ror
cwde
fld
fild
and
or
test
xchg
and
lea
imul
dec
pop
bound
mov
cmp
icebp
scas
repnz
stos
addr16
scas
mov
pop
sti
cmp
loopne
loope
loop
out
mov
(bad)
icebp
stc
ja
inc
jbe
and
inc
mov
es
test
jmp
sbb
add
ss
stos
ret
ins
add
jnp
mov
mov
xchg
pop
inc
fdivrp
out
ret
jbe
jae
adc
jno
add
lock
(bad)
(bad)
fld
test
loop
aas
icebp
push
lock
ss
sti
movs
dec
les
mov
into
inc
fadd
mov
or
inc
ret
pop
ret
inc
shl
stc
add
in
lea
outs
mov
cmp
sub
jl
mov
daa
xor
jo
cmp
dec
mov
add
push
jle
and
ds
ins
dec
push
scas
js
jno
jl
js
and
ins
or
push
pop
add
clc
sbb
mov
push
mov
pop
enter
mov
and
xor
add
shl
add
sar
jns
xlat
xor
sbb
sub
movs
out
push
or
into
mov
fild
push
adc
lds
ds
dec
sub
mov
inc
sbb
add
adc
add
stos
gs
jg
repz
xor
or
adc
or
sti
movs
sub
movs
idiv
jb
sar
inc
mov
mov
and
fiadd
rcl
jge
ja
sub
test
(bad)
in
adc
daa
leave
sbb
cmp
push
cmp
(bad)
ins
mov
sub
xlat
aas
retf
sbb
sub
sub
cld
cli
xchg
pop
pop
sbb
retf
ins
mov
jne
(bad)
icebp
aaa
scas
sub
pop
pushf
cmp
mov
stos
aas
nop
add
push
xchg
aam
jmp
adc
mov
mov
pop
pushf
sbb
dec
sub
call
push
cmp
push
lock
loop
int
lock
cmp
mov
daa
pop
jns
jp
lods
push
mov
cmp
inc
sbb
ror
gs
or
mov
ins
jae
push
ror
ss
es
inc
ror
jge
or
cli
sar
xor
pop
pop
inc
mov
mov
pop
push
or
lds
loop
jne
sub
sti
dec
or
fcomp
es
cmps
jp
test
cmp
cmc
(bad)
pop
popa
ror
push
xchg
mov
dec
pop
ret
in
add
pop
mov
mov
mov
imul
iret
mov
lock
lds
jp
std
jmp
outs
in
lds
call
xchg
jl
sahf
jle
ror
ror
rol
xchg
pop
cmps
push
sub
sub
popf
stos
mov
adc
xchg
gs
sub
dec
and
fdivr
add
pop
outs
dec
push
cdq
jge
dec
mov
or
cdq
sub
bound
push
in
mov
cmps
call
mov
pop
repz
retf
sbb
jb
push
xchg
xor
pop
inc
fs
call
sbb
jb
ja
ds
cmp
mov
mov
aad
out
xchg
leave
cmp
and
out
shr
fisub
mov
imul
sub
call
out
add
aaa
xchg
idiv
in
loope
pop
aas
pop
mov
ss
cmps
inc
neg
sub
arpl
lea
gs
or
loope
ss
xor
and
sub
jmp
push
retf
daa
adc
aas
sar
push
mov
mov
fld
bound
jno
cmps
cld
mov
pop
jecxz
sbb
push
test
sub
xor
out
sbb
inc
jo
test
sub
test
cmc
in
rcl
lock
and
movs
into
daa
push
cwde
xor
xlat
aam
cmps
int
sbb
shl
and
fadd
mov
inc
pop
sbb
push
(bad)
xor
mov
data16
and
ins
push
aas
int
ja
lea
int
aam
and
cmp
mov
cld
adc
mov
inc
mov
jnp
pop
and
jge
add
ds
mov
sub
mov
call
fisubr
pushf
and
sbb
out
outs
push
sub
or
fidivr
xchg
ins
push
or
or
cmp
jl
sahf
arpl
adc
add
mov
mov
inc
aam
add
mov
outs
in
xchg
mov
daa
or
sub
add
xor
dec
xchg
adc
inc
stos
pusha
out
or
and
jmp
(bad)
xchg
add
fidivr
jmp
pop
call
dec
inc
mov
and
pop
jmp
pushf
mov
add
xor
lahf
repz
test
xchg
stc
cmp
loopne
aas
neg
cmp
inc
sub
(bad)
(bad)
mov
mov
fmul
fiadd
call
and
mov
adc
cmp
rol
rcl
popf
mov
or
ror
push
leave
adc
jo
add
lds
sbb
jmp
enter
icebp
cmp
es
out
push
int
jle
fisttp
in
cmp
or
lock
stos
sahf
mov
test
into
adc
ins
mov
jl
loopne
cmp
fadd
inc
mov
iret
clc
stos
ror
xchg
mov
push
mov
stos
pushf
mov
push
aad
(bad)
or
bound
pop
shr
in
push
in
sbb
aas
test
sub
push
lods
mov
ins
shl
push
clc
lock
jmp
sar
push
movs
jp
xor
fild
sbb
jo
pop
sbb
mov
in
or
je
loop
sub
in
in
fnstenv
push
ret
mov
push
fs
push
and
pop
je
jg
push
cmp
jns
repz
ins
mov
(bad)
idiv
icebp
cmc
or
repz
sub
add
sbb
jns
dec
mov
sub
push
cmp
pop
loopne
push
jo
cmp
lods
rcl
std
or
and
xchg
inc
enter
mov
xchg
iret
add
outs
mov
jg
and
cmp
pop
pop
scas
aaa
and
inc
hlt
sub
xchg
loopne
add
imul
sbb
inc
ret
jb
sbb
push
and
add
(bad)
ins
ins
mov
or
mov
fiadd
mov
pop
mov
pop
sub
rcr
shl
int3
pop
or
sti
xchg
retf
dec
xchg
call
push
push
xchg
dec
ret
push
jmp
mov
mov
int3
cmp
inc
xor
xchg
imul
in
jecxz
clc
test
aaa
in
repz
imul
pushf
inc
add
xchg
dec
test
and
push
fcom
outs
out
cld
fstp
clc
sub
push
leave
mov
dec
fimul
xor
mov
sub
or
pminub
xchg
iret
into
shl
xor
sub
js
sbb
jae
fld
pop
loope
jns
mov
mov
add
or
jmp
dec
sbb
call
and
ror
cmps
sbb
sub
push
lock
mov
push
repz
jl
mov
std
clc
(bad)
jno
add
sbb
sar
push
pop
shl
inc
loop
pop
mov
div
sbb
mov
jo
mov
lahf
leave
adc
lods
pop
push
pop
and
mov
addr16
loopne
push
jmp
(bad)
imul
mov
fcomp
xor
(bad)
xlat
mov
jl
add
cmps
cmps
mov
push
pop
cmp
sub
lahf
(bad)
(bad)
push
cmp
mov
test
push
outs
movs
mov
dec
mov
out
iret
jmp
bound
fadd
inc
dec
mov
or
adc
aaa
mov
fmulp
test
fs
mov
bound
imul
xor
xchg
les
sbb
clc
loopne
out
mov
dec
scas
add
fisttp
sub
mov
sub
in
add
mov
xor
dec
outs
xchg
mov
xchg
idiv
dec
xlat
lock
xchg
jne
pop
push
mov
or
mov
cmp
stc
sub
push
xor
imul
dec
jns
inc
adc
stos
dec
pushf
and
adc
xor
fld
mov
xor
inc
jmp
xchg
jl
mov
cmp
mov
neg
hlt
test
add
mov
pop
inc
xchg
out
gs
jl
retf
stos
inc
inc
sbb
sub
and
cmp
rol
test
sub
xor
cmc
sub
add
or
ins
add
cdq
xchg
outs
mov
mov
loop
mov
jno
inc
sbb
sub
ja
inc
(bad)
jo
frstor
add
enter
add
cmp
cmps
loope
popf
sbb
ds
int
pop
into
aad
sbb
pop
test
mov
fstp
push
outs
xchg
mov
les
je
jmp
jge
inc
dec
cmp
cmc
pop
out
bound
sub
cmp
xor
ss
cmc
int
mov
sbb
xchg
pop
retf
gs
test
cmps
into
mov
jae
dec
in
pop
rcl
add
call
push
fwait
dec
mov
xchg
ins
lds
inc
jno
pop
jge
ins
push
mov
and
lods
xor
sbb
xchg
sbb
jl
inc
dec
je
lods
sbb
shr
test
sub
dec
or
or
or
jnp
inc
test
add
sub
daa
lahf
in
loopne
fs
adc
jne
pop
fld
mov
push
adc
sub
xchg
sub
inc
cli
dec
clc
inc
loop
jns
retf
scas
sti
cmc
fnstsw
outs
push
xor
sahf
lea
xor
mov
out
mov
jb
out
fisubr
fucomp
push
cdq
push
jmp
stos
cs
retf
arpl
pop
enter
mov
push
or
sub
inc
imul
mov
stc
push
in
jmp
jns
mov
sub
add
fstp
adc
pop
mov
cmps
mov
ds
repnz
mov
in
cmp
inc
add
mov
lods
sub
gs
lods
sbb
fdivrp
and
xor
pop
rol
xor
in
add
pop
sub
int3
ss
jp
in
xchg
cmp
data16
ss
cmp
sbb
cmp
cli
ins
es
sub
not
pop
mov
dec
imul
outs
jmp
or
add
cmp
fs
lock
xchg
test
push
movs
xor
int
jmp
add
repz
xor
push
enter
in
ret
xchg
cdq
rol
mov
cmps
xor
(bad)
sahf
inc
daa
mov
inc
stc
int
mov
jbe
and
popf
xchg
leave
popa
adc
inc
dec
add
add
nop
loopne
test
test
lods
(bad)
xlat
mov
mov
das
movs
xor
fnstsw
popa
fnsave
bound
jecxz
or
inc
mov
sbb
repz
jl
bnd
sbb
jle
loope
or
ror
test
sub
pop
mov
xlat
mov
mov
aad
aad
jmp
bound
dec
enter
mov
xlat
dec
loope
pop
cmp
fwait
test
retf
sbb
cmp
retf
xchg
cmps
and
cmp
div
(bad)
mov
lock
inc
mov
nop
retf
je
add
fcom
jnp
repnz
(bad)
nop
or
test
dec
pop
or
in
add
push
in
sbb
pop
mov
call
add
add
test
cmp
mov
dec
mov
popa
sbb
dec
sub
adc
jg
mov
jne
int3
arpl
pop
sub
aam
push
cs
clc
test
stc
xchg
lods
nop
xchg
sub
sub
mov
mov
and
sbb
sbb
ins
ret
add
xor
or
lahf
lods
mov
(bad)
xchg
shl
dec
jns
push
dec
jmp
jle
jmp
inc
cmp
pushf
push
xor
mov
push
add
js
push
push
and
fsubp
pop
scas
out
in
out
pop
adc
sub
std
aad
mov
jp
stos
icebp
enter
or
jp
aaa
mov
in
clc
adc
test
sub
pop
out
xor
imul
sar
jnp
xchg
xor
hlt
mov
mov
mov
js
inc
dec
dec
aad
jle
pop
add
jle
fst
push
dec
push
pop
push
lods
sahf
mov
repnz
dec
repnz
dec
or
jns
xor
add
pop
adc
sbb
push
into
mov
shr
jae
and
or
pop
repz
and
sub
adc
test
lods
sub
jecxz
loop
mov
mov
loope
sti
jmp
pop
xchg
lea
in
das
fiadd
dec
jb
repnz
fdivr
scas
jge
xchg
inc
xchg
fldenv
js
and
mov
aaa
sbb
jecxz
scas
clc
in
inc
test
jge
rcr
xor
inc
ss
into
int3
pop
out
jle
dec
fidivr
leave
movs
xor
popa
push
or
not
ins
mov
stc
push
pop
pop
add
jnp
sbb
ret
les
in
stos
or
loopne
mov
xchg
xlat
rcl
jp
pop
arpl
fist
aad
repz
js
jb
ins
movs
jae
fwait
mov
adc
mov
or
jns
loop
inc
jne
nop
pop
jecxz
pop
ins
imul
lods
mov
sub
test
adc
gs
and
ret
push
jl
pop
push
sub
fistp
pop
adc
jmp
sahf
cmp
push
test
(bad)
jg
xor
lock
fs
xchg
adc
jmp
xchg
jb
inc
fistp
int
rcr
push
in
aaa
mov
mov
call
mov
mov
pop
jns
outs
jp
jmp
jmp
and
outs
sub
popf
add
sub
xor
jns
push
cdq
dec
and
outs
mov
not
adc
add
pop
popf
mov
jbe
call
pop
sub
fimul
jge
loopne
(bad)
fisubr
shr
and
and
aam
mov
ss
add
pushf
sub
push
lahf
sbb
sbb
lods
outs
pop
out
popa
aam
push
mov
pop
mov
shr
iret
mov
pop
mov
xchg
pop
inc
push
sbb
mov
loop
nop
fnsave
cmp
imul
mov
sub
bound
push
outs
pop
jnp
sbb
and
(bad)
cmps
test
(bad)
popf
ins
ja
jmp
push
movs
test
in
test
loop
jnp
aaa
in
mov
inc
mov
test
pop
fsincos
xlat
out
hlt
pop
mov
or
aaa
test
mov
mov
cmps
ret
xchg
xor
sbb
mov
cmp
mov
jmp
sbb
(bad)
mov
mov
jmp
aam
cmp
std
(bad)
jp
jns
fsubr
jne
sbb
mov
retf
jnp
xor
mov
sub
or
sti
bt
push
jg
adc
cdq
xrelease
fbld
cmp
ja
mov
adc
sub
sbb
fidiv
pop
loop
cmp
jge
inc
add
mov
(bad)
arpl
(bad)
test
or
ret
stc
adc
xchg
lods
in
ret
push
gs
xor
cld
mov
mov
dec
mov
lods
fs
mov
pop
dec
cmp
pop
jmp
push
push
pop
fstp
test
lds
sbb
dec
sbb
scas
xchg
xor
push
adc
jmp
push
jbe
repz
push
jb
(bad)
mov
fnstenv
pop
cwde
sbb
xor
jmp
es
push
add
sbb
cmp
pop
sbb
lods
loopne
leave
or
sub
dec
pop
xchg
dec
mov
sub
xlat
repnz
cmps
pop
mov
test
arpl
ja
hlt
push
ins
ins
add
jo
enter
(bad)
fnstsw
jmp
cmp
bound
cmp
jecxz
ins
nop
xchg
lock
inc
rcl
sbb
push
push
stos
mov
(bad)
ins
jne
inc
in
push
addr16
loopne
inc
cmps
jmp
cmps
sbb
sub
fst
pop
(bad)
pop
repnz
or
loop
add
jo
jle
inc
or
sbb
mov
adc
pop
out
ss
popa
int3
pop
cmp
imul
mov
(bad)
add
mov
movs
(bad)
aaa
xor
pop
cmps
loopne
xchg
sbb
mov
sbb
pop
shr
clc
pop
call
arpl
cmc
jl
gs
popa
in
pushf
out
mov
cmp
pop
ins
js
loop
sahf
dec
or
repz
cli
test
out
mov
sbb
sub
outs
push
fs
or
ret
cmps
aaa
xchg
stos
push
test
cld
push
push
fdivr
jge
pusha
outs
out
je
and
lds
fnsave
dec
ror
dec
adc
pop
cmp
sub
inc
icebp
push
sub
cmp
lods
cli
mov
std
and
fsubrp
lea
and
outs
loop
test
pop
icebp
xchg
std
sbb
dec
jne
repz
xchg
push
and
mov
xchg
pusha
cmps
shl
bound
fistp
out
rcl
lock
pop
out
(bad)
call
jne
mov
stc
out
loope
jne
das
cmps
dec
imul
mov
mov
fwait
aad
pop
jne
into
sbb
iret
popf
push
jmp
mov
and
ins
cli
sub
push
pop
clc
xor
jo
pop
fistp
hlt
mov
sub
jae
and
and
mov
add
inc
mov
shl
mov
adc
scas
mov
not
cs
inc
(bad)
fnstcw
or
or
push
popf
mov
es
add
les
push
sbb
cmps
xchg
push
fild
dec
call
retf
push
imul
inc
int3
jmp
mov
and
inc
inc
mov
push
cmp
cmp
neg
iret
stc
mov
sbb
out
cli
(bad)
es
or
es
ret
cmp
in
mov
ss
push
mov
jbe
mov
scas
leave
int3
into
push
adc
and
jmp
in
xor
and
jmp
outs
sahf
mov
dec
inc
mov
data16
daa
ins
stos
jg
adc
ds
cmp
popa
cmp
frstor
loop
ins
in
fistp
push
test
mov
jnp
xchg
mov
cmp
pop
mov
je
out
xchg
dec
aam
mov
jp
(bad)
add
mov
(bad)
or
cmp
call
sbb
mov
inc
and
retf
push
movs
push
adc
(bad)
mov
retf
cmps
jnp
inc
jle
fucomp
outs
pop
pop
enter
clc
movs
cmovo
shr
xchg
(bad)
cmp
mul
arpl
ds
jecxz
clc
ds
out
xchg
ss
jmp
pop
hlt
mov
and
dec
lea
fdiv
dec
jae
rcr
push
jecxz
inc
shr
dec
push
mov
bound
aaa
push
add
cmps
ds
jge
fnstcw
in
sbb
leave
stos
imul
rcr
and
xchg
mov
(bad)
mov
pop
fnsave
jae
sub
xor
dec
fcomp
mov
xchg
jne
out
das
ins
pop
adc
das
sub
jnp
push
inc
sub
jo
dec
or
xor
shl
dec
je
retf
movs
popf
(bad)
mov
das
dec
adc
inc
hlt
into
add
push
inc
movs
or
mov
aad
inc
sub
pop
xchg
jb
pop
sub
stc
scas
jbe
sbb
sar
aam
fwait
bound
daa
pop
test
clc
mov
shr
mov
push
cmps
call
adc
sub
mov
or
xor
repz
adc
cmp
jmp
adc
push
push
(bad)
sti
pop
stos
or
cmp
cmps
push
pop
out
dec
add
imul
mov
cmp
movs
xchg
gs
cli
or
sar
int3
test
dec
pusha
pop
div
in
sub
cmp
pop
ds
inc
mov
xchg
(bad)
jae
adc
pop
repz
pop
xchg
lds
(bad)
pop
iret
pop
inc
add
jl
dec
(bad)
mov
pop
ret
fist
adc
fnstenv
mov
and
xor
mov
mov
push
pop
cmps
fnsave
push
nop
pop
xor
xchg
stos
fsubp
adc
add
sahf
inc
rcl
js
jl
dec
inc
inc
retf
push
fs
and
call
mov
push
int3
or
dec
out
pop
test
retf
je
lods
pushf
mov
iret
sbb
repz
jp
sub
inc
jl
sbb
popa
ss
cli
sub
xchg
adc
mov
cmp
sbb
int3
pop
xor
ret
cdq
mov
fwait
test
mov
lea
lods
xor
mov
push
xlat
sbb
repz
xor
pop
and
mov
add
(bad)
aad
shl
xchg
mov
push
pop
push
pusha
inc
xchg
or
ins
xchg
popf
addr16
mov
or
mov
pop
popa
stos
jb
das
xchg
pusha
inc
pop
lock
sbb
dec
inc
rcr
jmp
in
pop
icebp
push
cmp
fist
cmp
xchg
xchg
gs
push
test
popa
cmps
mov
clc
push
cs
and
test
push
mov
add
imul
mov
adc
xlat
cmp
xchg
dec
xchg
loop
(bad)
nop
mov
cmp
dec
sbb
pop
push
test
(bad)
fist
retf
lods
push
and
icebp
inc
gs
test
mov
test
fcmovnb
dec
adc
out
mov
sbb
xor
mov
adc
lea
(bad)
jbe
xchg
and
repz
sbb
push
inc
aad
and
popf
mov
fsubrp
and
addr16
push
cmps
xchg
fptan
rcr
mov
pushf
test
std
pop
int3
repnz
iret
(bad)
fs
shl
cmc
adc
mov
(bad)
js
inc
push
out
jns
pop
jb
(bad)
mov
mov
jne
mov
xchg
movs
and
xor
push
stc
xchg
xor
mov
push
add
into
ret
or
adc
add
fcom
mov
xchg
ja
mov
fdiv
or
(bad)
fdiv
sbb
pop
mov
div
ret
xchg
pop
scas
push
test
xchg
std
ja
dec
xchg
mov
(bad)
cli
pusha
popa
jnp
call
pop
lock
jp
out
jg
pop
dec
jno
push
adc
rol
sub
retf
jecxz
push
or
stos
cwde
add
push
dec
cmp
dec
dec
pusha
outs
xchg
retf
jg
jle
aam
pop
mov
dec
rcl
or
push
seto
mov
pop
sahf
cld
js
sub
(bad)
stc
jp
pop
lea
aaa
jg
xchg
jno
cmps
mov
adc
stos
pop
or
in
pop
adc
adc
bnd
shr
gs
aad
gs
sti
and
push
cmc
sub
sbb
js
inc
mov
popf
mov
iret
fdiv
inc
(bad)
mov
lds
and
cmp
scas
loopne
push
mov
addr16
mov
push
(bad)
rcr
iret
mov
addr16
push
sub
jmp
ja
repz
lahf
adc
ja
and
inc
push
cli
cmc
xor
mov
(bad)
mov
add
push
jo
adc
(bad)
je
mov
and
lea
ins
mov
cmp
stos
push
cmp
cmps
xchg
dec
adc
mov
xchg
jp
lods
aaa
mov
lods
mov
dec
(bad)
popf
jge
gs
cmc
popf
out
pop
in
mov
push
test
stos
adc
jb
mov
mov
fdiv
cmps
mov
dec
es
mov
mov
inc
push
rcr
mov
or
mov
loopne
adc
mov
stos
inc
cmps
sbb
and
push
ins
in
sbb
xchg
mov
push
mov
ds
outs
cli
pop
(bad)
mov
popa
in
popf
jno
xchg
push
mov
mov
rol
push
test
cmps
xchg
cmp
rcr
jnp
jb
(bad)
mov
mov
xchg
retf
fld
xcrypt-ctr
cmps
pop
loop
mov
ja
sub
pushf
iret
inc
mov
xchg
mov
imul
ja
fstp
cmp
repnz
mov
mov
pop
sub
add
xor
dec
pusha
jmp
add
cs
les
inc
mov
mov
xor
mov
push
leave
sub
or
or
sahf
hlt
mov
int
cmps
or
inc
fwait
std
shr
lods
imul
jbe
jmp
or
adc
out
push
pop
shr
sbb
fimul
(bad)
inc
daa
cs
adc
push
add
icebp
push
ins
stos
popa
mov
popf
aad
dec
int3
bound
mov
push
xchg
test
push
or
jbe
mov
xchg
jno
aad
dec
push
mov
sahf
imul
mov
mov
jmp
xchg
sti
(bad)
sti
push
inc
movs
mov
and
outs
inc
mov
cmp
mov
cmp
push
int3
fistp
in
or
imul
test
mov
mov
inc
mov
dec
call
push
sbb
sti
jno
mov
sub
and
or
cmp
cmps
cmps
lods
adc
push
shl
push
fistp
push
push
movs
sub
xchg
fwait
pop
pop
push
jnp
retf
mov
lahf
shl
inc
ror
add
jg
mov
inc
mov
in
loopne
cmp
pushf
sahf
sub
mov
pop
mov
xchg
movs
ins
cld
mov
push
cmps
pop
sbb
out
sub
cmps
push
shl
(bad)
dec
cmp
out
mov
xor
pop
jg
ret
cmps
repz
mov
mov
test
fstp
leave
iret
xor
mov
dec
int3
pop
mov
mov
icebp
jl
or
loopne
gs
push
xchg
popf
inc
xor
add
and
mov
or
in
push
fwait
lock
das
shr
inc
jne
or
xchg
and
xor
arpl
in
mov
push
fucomi
mov
sbb
call
mov
push
ins
xchg
sar
dec
repz
imul
jae
test
popa
push
inc
sbb
fild
push
jg
mov
add
in
sbb
or
pop
leave
rcl
mov
sbb
(bad)
jmp
cmp
ret
daa
in
and
add
xchg
lds
(bad)
aam
xor
mov
mov
call
imul
clc
or
ds
cmp
add
pop
push
sahf
inc
pop
stos
jno
fs
ins
movs
mov
cdq
popa
leave
xor
fdivp
push
(bad)
dec
mov
adc
(bad)
in
stc
cmp
(bad)
leave
inc
dec
shl
ins
out
in
push
mov
jg
mov
add
push
sub
inc
daa
dec
xor
and
(bad)
jbe
out
nop
and
cdq
pop
or
xor
cmps
pushf
push
movs
add
adc
xor
addr16
enter
pop
std
jge
mov
xor
in
repnz
xchg
aad
dec
inc
push
push
pushf
mov
mov
adc
cld
nop
popa
mov
mov
xchg
shl
jle
jo
inc
clc
shr
push
std
call
sub
adc
retf
out
cmp
loope
shl
mov
in
out
mov
test
jae
stos
add
dec
jne
pop
mov
movs
dec
data16
loope
cmp
sbb
dec
add
sbb
inc
sbb
shr
jmp
stos
mov
stos
sub
fsubrp
(bad)
aaa
inc
ret
cmps
jg
outs
xor
frndint
int
sti
jmp
add
jmp
jge
push
pop
dec
sar
fs
in
cld
int
push
neg
fisttp
imul
loop
sub
sar
and
jbe
lods
inc
and
xchg
sbb
iret
iret
loope
adc
fidivr
popf
xor
push
inc
mov
inc
call
dec
test
inc
push
js
xchg
jbe
aam
cmp
or
icebp
dec
xchg
std
jae
sub
push
dec
not
in
pushf
in
mov
ss
sbb
neg
pusha
add
sub
sbb
dec
test
lods
fs
xchg
mov
xchg
stos
mov
(bad)
pop
sub
loopne
jae
inc
sbb
adc
cmp
sahf
aaa
imul
or
mov
mov
mov
icebp
test
popa
add
inc
in
inc
call
and
into
ins
aad
lds
gs
mov
adc
movs
mov
ja
jl
cli
ja
gs
shl
and
mov
hlt
jl
shr
das
shl
cmp
lods
popf
inc
es
es
and
push
or
xchg
push
mov
rcl
mov
xchg
xor
leave
adc
lea
data16
mov
ins
inc
sbb
and
nop
mov
mov
mov
mov
arpl
mov
sar
pop
popa
jno
mov
or
xchg
and
push
test
xor
out
outs
push
sub
les
int3
xor
push
mov
(bad)
push
mov
lods
cmp
rcl
pop
stc
xchg
jbe
ficomp
adc
adc
loop
mov
or
xchg
adc
mov
sti
ret
(bad)
ins
lods
hlt
adc
mov
test
cmp
cmp
out
dec
fnstsw
mov
dec
dec
push
adc
frstor
hlt
cmps
(bad)
push
mov
scas
pop
jnp
xor
sub
push
ja
mov
retf
or
push
cdq
and
mov
dec
dec
fimul
add
inc
fld
or
pushf
push
mov
addr16
mov
lods
and
push
leave
push
push
cmp
jnp
xchg
sub
push
sbb
arpl
mov
stos
out
cmp
pop
test
jns
scas
in
push
mov
jle
cmps
adc
sti
pusha
popa
sar
hlt
jp
outs
std
imul
jecxz
dec
jbe
iret
jecxz
add
fdivr
push
xchg
mov
or
dec
push
jo
(bad)
addr16
cmps
(bad)
xchg
push
jmp
or
sub
cmps
and
(bad)
cmp
and
vpsllq
fsub
call
enter
or
pushf
pop
xchg
and
and
add
or
mov
pop
test
sub
data16
xor
int
xchg
ss
mov
mov
loope
inc
inc
xlat
xor
bound
daa
xchg
rcr
aam
test
xchg
mov
mov
(bad)
push
cld
jecxz
sub
xchg
(bad)
hlt
xchg
cmc
daa
and
mov
hlt
push
cmp
arpl
mov
cmps
inc
and
icebp
fld
mov
out
mov
aam
out
or
in
jg
aam
push
mov
xor
cmc
cmp
data16
fiadd
mov
fbstp
sbb
xchg
(bad)
cli
retf
sub
jle
jecxz
dec
xor
mov
pop
sbb
or
ins
add
or
jnp
jnp
pop
xchg
pop
pusha
scas
push
hlt
stos
and
repnz
cmp
test
scas
imul
dec
xor
pop
xor
adc
jg
xor
mov
out
repnz
cmp
pop
int
into
mov
pop
inc
cmp
leave
sub
jnp
sub
mov
mov
mov
xor
cmp
xchg
std
sbb
inc
inc
pop
fucomp
mov
sbb
lds
or
cmps
js
cld
dec
lock
int3
lahf
sti
loope
je
enter
das
ds
fcomp
jg
test
dec
cmp
cld
mov
test
mov
cs
dec
in
dec
dec
xor
jne
mov
test
jae
ret
fldenv
pop
mov
or
jmp
inc
cmp
jl
or
ja
lgs
adc
outs
cmp
mov
xchg
jge
call
test
cmp
out
lods
add
in
lock
add
push
dec
cmp
pop
xchg
daa
mov
cld
ds
pop
mov
or
out
out
sahf
push
sub
lods
aas
ins
dec
mov
mov
retf
cmp
push
pop
and
xor
xchg
dec
cld
mov
sbb
and
mov
sub
outs
xor
jb
pushw
rcr
pop
jge
jo
sub
in
push
cwde
dec
sti
xor
mov
mov
cli
inc
aam
or
sub
fsubrp
push
aad
xor
rcl
add
and
mov
loop
sub
test
fdivr
(bad)
pop
sbb
mov
shr
add
ja
loope
jge
imul
pop
push
push
add
sbb
fsub
shl
sbb
inc
aaa
mov
in
jmp
ins
sti
jb
push
and
loopne
movs
fist
(bad)
mov
xor
jno
sub
sti
or
pop
gs
add
and
jg
and
ja
cmp
pop
jo
and
nop
and
sbb
int
retf
dec
loopne
into
mov
ret
sub
add
adc
mov
es
cmp
cmp
fldenv
ins
mov
dec
dec
ret
call
or
leave
rcl
mov
sar
sbb
jnp
mov
dec
push
cmp
cmp
lahf
mov
lahf
lahf
sbb
sbb
cmp
pop
pop
hlt
clc
lock
cmp
sbb
sti
jb
gs
ret
arpl
push
ds
pop
mov
push
inc
cmc
jne
rcl
stos
enter
or
or
aas
retf
movs
pop
lahf
fnstsw
je
pop
dec
and
lahf
and
leave
fldcw
ds
in
jne
(bad)
dec
call
daa
test
jge
mov
pop
jno
inc
out
xchg
mov
loopne
or
mov
outs
leave
sar
call
repz
stos
inc
inc
cwde
cld
cmp
pop
push
sahf
fistp
adc
cs
sbb
in
mov
test
jne
push
ret
icebp
mul
into
lea
stos
xchg
add
out
push
jp
out
cmp
loope
(bad)
retf
imul
push
add
push
jecxz
cmp
jmp
adc
je
neg
jl
sbb
out
push
mov
or
add
mov
cmp
mov
and
push
pop
stos
and
mov
mov
into
cld
adc
lods
mov
xchg
ins
cmp
fwait
nop
mov
mov
icebp
dec
and
mov
retf
push
pusha
movs
les
push
xchg
ret
fidivr
lods
lods
rcl
mov
sbb
pop
nop
enter
popf
clc
pop
adc
das
pop
ja
inc
pop
mov
push
arpl
dec
(bad)
xor
call
mov
ss
popf
mov
cwde
dec
popa
mov
inc
jmp
xchg
and
sbb
mov
mov
pop
xchg
or
push
(bad)
shr
leave
xchg
gs
call
dec
mov
push
sub
cmp
mov
push
mov
cmp
or
iret
repz
jo
nop
adc
jecxz
mov
movs
push
fisttp
lods
fiadd
data16
mov
dec
xlat
cs
fsubr
adc
les
mov
scas
test
or
xchg
pop
or
xchg
call
test
cli
pop
inc
ins
xor
dec
es
addr16
and
mov
or
mov
mov
icebp
scas
jmp
and
sar
in
inc
ret
sbb
mov
mov
cmp
int
imul
push
mov
movs
cmp
cmps
ret
fstp
mov
or
icebp
ror
cmps
rcl
inc
sbb
in
push
fistp
in
push
jl
sub
jb
xor
add
das
xchg
leave
scas
cmps
cwde
dec
loope
lahf
adc
fisub
in
imul
jmp
lods
bound
retf
mov
pop
jmp
daa
test
cdq
inc
shl
jo
pop
fs
add
push
retf
leave
jp
fimul
mov
loop
lock
aam
iret
push
dec
jae
mov
jne
cwde
test
xchg
push
push
pop
bound
movs
addr16
mov
sub
dec
xchg
push
add
or
jb
stc
idiv
mov
mov
cmps
and
xchg
mov
and
daa
mov
(bad)
jle
dec
lods
jmp
loop
fiadd
sbb
mov
pusha
(bad)
xor
mov
jo
adc
sub
mov
fisubr
jno
int3
test
daa
cs
push
aaa
jne
jl
add
add
push
and
jmp
xchg
lds
sbb
cdq
call
and
or
push
add
shl
out
mov
into
mov
add
inc
mov
mov
mov
mov
not
inc
push
mov
add
jge
hlt
or
loopne
sub
or
mov
and
jp
dec
mov
retf
adc
hlt
lods
mov
push
cmps
adc
je
dec
push
daa
push
mov
inc
sub
sbb
mov
or
sar
aam
movs
jmp
mov
pop
hlt
cmp
mov
ja
gs
repnz
ret
mov
out
or
jle
(bad)
sbb
and
je
sar
pop
pop
inc
jnp
jns
mov
and
sar
sbb
inc
movs
rol
add
fdivr
adc
aad
add
xchg
lock
dec
(bad)
adc
add
jge
or
pop
or
jmp
dec
mov
xor
repnz
xchg
daa
popa
xchg
dec
hlt
fnsave
cmp
stos
hlt
mov
jno
ret
cli
jmp
cmp
jle
loopne
pop
push
or
test
adc
call
test
adc
pop
pushf
stc
push
pop
jmp
push
aad
ss
fdivr
aaa
push
retw
mov
and
jle
add
xchg
inc
jne
repz
push
pop
push
mov
pop
in
hlt
inc
mov
and
push
mov
jo
(bad)
mov
or
pusha
adc
add
inc
dec
(bad)
pop
lock
dec
test
fnstenv
rcl
sahf
ret
loopne
mov
and
sahf
sbb
shl
ds
movs
movs
pop
xchg
fidiv
mov
rcl
clc
mov
mov
add
add
mov
mov
pop
jecxz
lahf
bound
and
fwait
loope
and
mov
or
pop
repz
not
clc
mov
call
hlt
xchg
ja
mov
pop
scas
or
fbld
jno
fdiv
fidivr
or
jmp
jg
fbld
sub
push
loop
lock
arpl
add
dec
jae
push
dec
popa
mov
sub
mov
fisttp
call
cmps
push
jns
cmp
pop
xchg
out
mov
test
inc
sbb
aas
pop
fwait
sub
xor
and
aas
adc
jge
push
loop
sbb
out
nop
jl
in
cmps
pop
and
fld
xor
sub
aad
jae
fdivr
inc
nop
jo
cmp
push
adc
out
add
sub
push
push
ins
(bad)
iret
fisubr
dec
aas
sti
add
xchg
jmp
jne
daa
dec
add
mov
sahf
sbb
in
fyl2xp1
or
dec
ja
and
mov
daa
mov
dec
arpl
imul
mov
jo
cmp
pop
in
pop
xchg
(bad)
div
cli
ror
lahf
daa
mov
mov
adc
adc
pop
push
or
in
sub
cs
ins
enter
unpcklps
pop
out
mov
popa
je
out
jb
fild
xchg
xchg
loopne
icebp
pop
and
jnp
mov
or
lds
aad
imul
mov
hlt
fwait
icebp
shl
popa
mov
sub
xor
clc
fwait
shl
hlt
fcmove
lahf
call
sub
retf
test
sar
dec
out
mov
fs
and
inc
call
dec
leave
push
pop
ss
sbb
mov
and
push
xchg
mov
adc
adc
daa
inc
sbb
pop
repnz
xchg
and
mov
imul
mov
mov
call
mul
jno
lea
repz
jecxz
jg
mov
loope
imul
or
jae
sti
adc
pushf
mov
int3
ds
or
or
scas
call
das
lahf
popf
loope
push
adc
mov
or
cwde
mov
adc
xchg
dec
in
shr
xchg
cmp
adc
loopne
movs
mov
in
xchg
jge
and
pop
mov
jge
mov
sbb
jo
jl
out
(bad)
push
dec
mov
sti
inc
out
xor
sbb
in
ins
and
fstp
push
sub
daa
push
outs
daa
leave
or
test
fst
fisubr
les
sub
shr
inc
mov
loopne
gs
aas
mov
mov
nop
test
push
sub
xor
scas
pop
in
movs
sbb
mov
mov
adc
sbb
adc
xor
pusha
jg
daa
clc
outs
call
scas
pop
cld
aaa
fimul
xor
cs
mov
mov
pop
pop
bound
mov
or
add
mov
mov
ss
mov
jnp
mov
mov
neg
sbb
mov
imul
xor
or
popf
dec
ret
lods
mov
or
lock
mov
fidiv
stos
dec
adc
sub
add
jae
scas
mov
or
push
jo
jo
jmp
jmp
loop
jmp
cmp
mov
std
jns
pop
xor
pop
and
mov
aam
and
add
cmp
adc
cmp
add
aaa
call
imul
pop
ss
fmul
pop
push
fmul
nop
dec
or
pop
mov
jae
xor
mov
xor
mov
jp
sbb
cmp
push
call
mov
fsub
jp
add
push
jle
and
or
inc
shl
scas
mov
mov
dec
cmc
fisttp
ltr
ror
dec
adc
mov
inc
mov
cmc
frstor
int
in
cmps
std
or
xchg
cmps
aas
mov
sbb
mov
sub
in
fimul
arpl
xchg
ins
movs
adc
mov
push
mov
test
cmps
lea
sub
jg
ins
pop
mov
shr
add
or
mov
add
push
dec
sub
adc
xchg
mov
or
mul
push
cmp
xchg
add
nop
das
dec
fstp
int3
or
xchg
jns
jl
retf
mov
jo
fmul
loop
mov
popf
loope
push
xchg
and
pop
in
pop
stos
mov
lock
and
xor
or
mov
enter
push
pop
jne
int
sub
out
cli
mov
test
cmp
fnsave
xchg
cmovns
test
pop
iret
cmp
cmp
call
jl
mov
cs
out
sub
rol
out
pop
fwait
clc
push
outs
xlat
dec
arpl
pop
xchg
mov
jae
into
mov
scas
jg
cmps
int3
lods
test
imul
sbb
mov
mov
cmp
adc
sbb
jecxz
add
mov
lahf
ds
call
das
or
or
fstp
mov
repz
mov
adc
aaa
(bad)
mov
cmps
in
shl
mov
or
sti
inc
jbe
mov
call
or
jp
(bad)
out
popf
jnp
pop
add
aad
mov
clc
push
pusha
and
popa
cmp
mov
and
push
out
mov
mov
aaa
push
inc
ins
sbb
out
es
xchg
push
pop
pop
shl
pop
adc
and
cmp
pop
nop
ret
sub
adc
mov
(bad)
int3
iret
push
lea
pop
enter
push
add
pop
stos
sbb
out
dec
mov
dec
addr16
mov
out
sbb
adc
cmp
repz
mov
xor
scas
push
add
jmp
js
outs
cmp
cld
pop
int
loop
push
jmp
pop
sbb
sbb
pop
test
cwde
and
fisttp
(bad)
push
push
data16
inc
dec
fsubr
add
jns
in
dec
adc
push
inc
jle
mov
or
test
ins
inc
and
push
iret
or
sub
bound
(bad)
mov
or
loopne
xchg
in
inc
(bad)
jmp
sbb
sub
push
pop
sub
push
mov
or
pop
enter
jno
into
fmul
add
push
arpl
out
xor
leave
mov
dec
and
and
aas
cld
inc
cmp
(bad)
sbb
jmp
shl
sub
jmp
xor
mov
pop
add
es
cmp
icebp
or
pop
push
iret
scas
(bad)
and
inc
mov
in
mov
(bad)
push
retf
fidivr
mov
into
pop
and
jl
mov
mov
cs
dec
loop
cmp
loope
cmps
mov
ret
add
push
and
push
sbb
mov
bound
mov
mov
rcl
into
cmps
jnp
leave
ins
xchg
loopne
mov
cmp
retf
and
mov
cmps
xchg
cmp
ds
xchg
mov
shl
lds
ja
adc
je
pop
call
mov
adc
retfw
fdiv
adc
xor
jge
out
jge
ja
push
mov
add
in
jo
cmp
lahf
movs
mov
pop
scas
mov
cs
adc
xchg
jno
cmps
and
out
scas
aam
inc
nop
in
call
fmul
ret
adc
pop
je
outs
lea
and
push
xchg
add
mov
push
xor
pop
ret
xchg
retf
inc
xchg
xchg
jnp
mov
loop
(bad)
repnz
push
jb
inc
in
cmp
mov
or
les
in
movs
jbe
dec
xchg
fidiv
mov
shl
or
adc
popa
stos
jno
scas
popf
mov
sbb
pushw
add
clc
pop
inc
xor
int
idiv
leave
cmps
loopne
outs
arpl
or
push
sbb
(bad)
lock
adc
and
jmp
call
ficom
mov
mov
gs
cmp
xchg
sbb
inc
mov
jno
in
pop
xchg
push
and
mov
adc
fucomp
xor
sbb
cmps
ss
icebp
ss
and
into
adc
and
mov
cmp
je
xchg
mov
sbb
leave
pop
fisub
jne
aas
dec
and
xchg
aas
jmp
ins
fbstp
jg
sub
dec
test
aaa
mov
fdiv
imul
lods
push
ja
inc
adc
pop
or
jb
jmp
mov
xchg
sahf
es
push
(bad)
mov
sbb
repnz
sbb
jae
cmps
aad
sub
inc
dec
push
push
popa
pop
dec
iret
jno
sbb
or
mov
and
int
dec
in
cmps
fldcw
jg
sub
jmp
mov
es
btr
jl
push
lock
sbb
adc
cmp
jmp
mov
arpl
cdq
nop
test
ret
mov
jge
push
jo
(bad)
ror
jle
mov
cmc
pop
mov
push
popf
inc
mov
retf
and
mov
shr
mov
adc
sub
ja
mov
mov
call
bound
dec
icebp
push
imul
mov
cmp
inc
aad
mov
fs
mov
ins
(bad)
mov
or
ret
arpl
sti
lahf
stos
push
jmp
pop
neg
scas
fs
dec
les
fucomi
sub
nop
ins
push
or
imul
add
stos
jl
xchg
fldcw
jb
xor
into
sti
xchg
xchg
adc
push
jl
fmul
leave
ret
inc
(bad)
ffree
outs
mov
or
aas
pop
push
fidivr
fcmovnu
sub
xlat
aaa
popa
rcl
cdq
test
push
push
call
push
shl
push
lds
ja
dec
aaa
pusha
push
inc
push
sub
sub
sub
mov
jecxz
jmp
int
push
sete
add
jp
mul
pop
(bad)
(bad)
inc
and
cwde
xchg
neg
hlt
add
cmp
imul
cli
add
loopne
out
push
not
ins
clc
int
(bad)
out
out
out
pop
add
hlt
mov
movs
sbb
cld
clc
pop
or
xchg
xchg
dec
jl
adc
test
outs
movs
cmc
push
bound
ficom
fild
mov
test
xchg
or
and
xchg
push
push
mov
mov
aaa
dec
jp
test
std
add
mov
inc
push
inc
int
addr16
paddusb
ins
out
arpl
movs
cli
jo
sbb
or
arpl
sar
mov
fisubr
cmp
mov
mov
out
into
lods
aas
add
mov
and
sbb
(bad)
pop
dec
mov
dec
and
push
cmp
(bad)
xchg
sar
retf
imul
push
dec
xchg
mov
and
xor
dec
xchg
out
int
adc
ficomp
jo
sub
adc
xchg
enter
out
sbb
arpl
xor
popf
mov
dec
inc
pop
push
push
cmps
gs
xor
std
leave
movs
xor
or
inc
and
jae
mov
shl
out
push
out
ret
cmps
mov
dec
pop
mov
push
cmp
add
mov
repz
push
mov
xchg
call
or
sbb
mov
cs
push
in
push
xchg
les
or
ret
xchg
xchg
test
movs
loope
mov
mov
ret
mov
and
lods
pop
jnp
in
int
push
test
xor
shr
cmp
test
inc
into
aaa
xor
inc
mov
(bad)
retf
push
or
cwde
push
xor
jmp
sbb
jmp
xchg
and
adc
popf
cli
fwait
(bad)
push
mov
xchg
mov
inc
repnz
jmp
and
jmp
cmp
xor
loope
pop
sub
test
push
xor
cmp
loope
out
out
les
adc
add
dec
and
daa
pop
mov
jge
ror
jmp
seto
loopne
push
call
out
gs
mov
call
cmp
mov
(bad)
ins
mov
and
leave
pop
inc
jb
cmp
inc
div
lods
out
cs
dec
xor
inc
(bad)
loop
push
adc
lods
xchg
rcl
push
mov
xchg
ss
jae
imul
or
push
ds
and
inc
cvtpi2ps
in
cmp
cmps
push
inc
mov
add
int3
cwde
push
mov
fucomi
jmp
pop
into
jp
aam
inc
mov
sub
mov
cs
retf
mov
adc
es
inc
xchg
push
cmps
movs
leave
push
pop
repz
jmp
dec
push
inc
fnstenv
in
sbb
add
cmp
mov
les
rcr
mov
aam
out
adc
xchg
dec
repnz
xchg
repnz
jmp
mov
mov
sbb
sar
(bad)
stos
sbb
(bad)
xchg
xlat
pop
pop
push
jo
xor
push
adc
(bad)
cmc
lds
sbb
jl
mov
pop
dec
out
hlt
or
jmp
clc
(bad)
pop
push
cld
std
call
dec
and
fmul
jno
sub
aam
nop
jae
inc
xchg
lods
xor
pop
dec
jg
mov
jecxz
jns
cs
(bad)
pop
sbb
pushf
pop
(bad)
jae
or
shl
and
icebp
jne
lahf
clc
rol
sbb
mov
xchg
and
mov
jge
movs
stc
shl
out
jmp
mov
push
push
fst
call
mov
or
dec
mov
call
(bad)
int3
xor
stos
imul
jecxz
stos
fucom
mov
outs
cmc
inc
popf
lahf
sbb
dec
push
sub
mov
jbe
mov
sbb
pop
nop
enter
(bad)
dec
sbb
sub
aaa
idiv
sbb
popw
iret
rol
cli
fidivr
mov
dec
cmp
iret
or
(bad)
pop
add
push
loope
es
lds
jg
shl
and
into
dec
arpl
mov
xabort
or
nop
pop
mov
int
add
dec
dec
sbb
adc
cwde
mov
clc
mov
and
repz
mov
je
push
sbb
dec
xor
stos
jmp
jecxz
popf
dec
sbb
xchg
xor
adc
dec
in
ss
(bad)
push
mov
ins
or
jmp
fmul
test
icebp
lds
xlat
ret
rcr
mov
or
cmp
fstp
out
mov
jmp
cld
ffree
or
xchg
push
lahf
aad
add
adc
cwde
test
loopne
and
loope
add
call
in
les
add
mov
adc
repz
xchg
enter
pop
scas
(bad)
(bad)
mov
lods
jp
(bad)
aad
adc
jno
sbb
repz
adc
pusha
(bad)
imul
loop
mov
and
sbb
xchg
add
dec
scas
cdq
push
cli
js
into
mov
cld
ds
pop
push
sbb
(bad)
adc
cwde
dec
out
sbb
repnz
in
pop
add
add
aas
push
mov
scas
cmp
jmp
loope
fnsave
add
scas
pusha
popa
or
aas
push
sub
fadd
shl
mov
aam
and
inc
pop
sbb
std
js
daa
add
and
cmps
cdq
outs
push
in
jmp
pop
sbb
sahf
cwde
ins
add
xchg
mov
lahf
cmp
inc
cmps
shl
sub
xor
mov
les
(bad)
mov
jg
call
scas
cmp
jne
sahf
jne
push
and
sahf
add
mov
add
sbb
push
stos
outs
lahf
pop
(bad)
std
mov
call
out
mov
adc
mov
out
(bad)
adc
test
or
int3
cwde
sbb
stos
cmc
jb
lock
jae
ret
std
sub
je
retf
pop
mov
mov
bound
adc
adc
mov
pop
inc
loope
(bad)
adc
adc
pop
sub
outs
ret
mov
and
bound
pop
int3
or
mov
mov
mov
dec
mov
int
and
mov
mov
lods
pop
mov
xchg
jae
cmps
inc
jp
outs
rcr
(bad)
rol
iret
addr16
aaa
outs
neg
xor
aas
call
jl
imul
call
sbb
adc
es
xchg
ins
in
sub
clc
xlat
fst
gs
ret
xchg
jle
xchg
fadd
xor
inc
add
ror
dec
cmp
adc
push
cld
jns
hlt
xchg
les
movs
adc
gs
shl
jnp
loop
pusha
shl
xchg
or
jo
cmp
xchg
js
loop
mov
mov
add
push
repnz
cli
js
(bad)
stos
outs
inc
mov
(bad)
call
inc
jl
repz
aad
bound
push
and
cmp
mov
inc
cs
push
and
daa
jp
repz
sub
popa
mov
xchg
fnstsw
inc
jle
scas
mov
dec
clc
ds
hlt
dec
jl
xor
push
ins
or
psllq
cdq
or
movs
jmp
rol
mov
fcom
xchg
scas
ret
mov
mov
repz
vsqrtss
jmp
mov
xor
jns
or
pop
inc
mov
dec
sub
mov
sub
and
std
push
je
push
adc
lds
inc
test
ja
add
fidiv
xchg
mov
inc
js
push
dec
pop
and
jns
retf
ins
shl
imul
mov
pop
cli
movs
push
cmp
sub
clc
dec
fucomip
add
dec
ret
lea
mov
push
mov
ja
ret
popf
pop
mov
movs
ja
outs
or
sbb
mov
add
mov
jo
mov
and
ins
sahf
jne
xor
dec
cdq
mov
or
test
lahf
xchg
mov
test
cmp
inc
lss
or
lds
call
or
push
push
out
in
or
ja
mov
push
sbb
sbb
test
sar
scas
outs
add
std
repz
pcmpgtb
dec
adc
lods
fcmove
pop
cli
cmp
push
in
aam
(bad)
xor
adc
clc
cs
jne
xor
or
fistp
fistp
xor
lea
push
mov
xchg
sbb
fidivr
xchg
nop
icebp
jne
sub
out
fist
and
(bad)
or
das
mov
pop
and
neg
shr
pop
movs
mov
and
repnz
cmc
mov
nop
clc
dec
mov
xor
outs
arpl
cmp
movs
int
push
arpl
fist
(bad)
mov
imul
out
rcl
xchg
ret
cmp
ror
retf
lds
mov
dec
mov
mov
mov
in
xchg
popf
or
arpl
ret
icebp
mov
or
clc
ds
sti
mov
loope
dec
mov
aam
cmps
sbb
or
or
js
mov
sub
int
inc
add
and
sub
pop
add
icebp
in
add
add
jno
jmp
shr
cmp
cmp
pushf
ret
jae
dec
jmp
sbb
fst
and
ins
push
dec
mov
pop
mov
cmp
and
xchg
and
and
lock
das
outs
mov
popa
jmp
inc
(bad)
or
jo
rcl
jae
jmp
fist
fwait
pushf
jp
and
jp
sbb
cmp
ret
cmp
mov
push
push
mov
mov
xchg
cld
pop
retf
add
cmps
jecxz
or
ds
mov
pop
iret
test
aam
lods
inc
or
out
pop
pop
test
mov
fdiv
stc
mov
xchg
xchg
test
push
mov
outs
sbb
movs
int3
cmps
enter
mov
cmp
cld
mov
imul
fimul
outs
mov
data16
movs
mov
mov
(bad)
scas
xor
fxch
xor
or
sbb
dec
arpl
scas
dec
xchg
push
mov
sub
test
mov
scas
jg
ret
sub
pushf
push
adc
mov
cmp
sub
inc
popa
jbe
test
rcr
mov
fxch
scas
neg
dec
mov
inc
mov
adc
mov
movs
mov
fcmovne
pop
sub
mov
dec
js
xchg
(bad)
jg
xlat
dec
sbb
sub
pop
push
add
adc
inc
aam
(bad)
int3
mov
test
mov
jmp
xchg
dec
popf
or
std
pop
movs
scas
mov
scas
adc
aam
jmp
push
jmp
cmc
cmp
push
pop
xchg
mov
mov
mov
nop
cmp
mov
test
or
push
scas
pop
popa
ss
ficomp
sub
das
and
ret
movs
movs
jle
fwait
pop
(bad)
lea
pop
adc
loope
jmp
gs
out
jo
jl
jge
lds
test
push
push
int3
popf
jns
rcr
sub
and
xchg
arpl
in
cmp
dec
popf
and
jp
and
push
aaa
inc
xchg
leave
in
dec
xchg
iret
and
mov
js
idiv
push
xchg
std
stc
test
pop
mov
js
push
ret
sar
xchg
xchg
cmp
cmc
adc
repnz
test
jmp
cwde
pop
jo
mul
repz
pop
jbe
jle
jecxz
push
mov
dec
mov
sub
push
out
xor
mov
(bad)
(bad)
push
mov
mov
inc
inc
cdq
adc
mov
pushf
adc
xor
push
aad
adc
jbe
rcr
mov
mov
pop
jmp
je
xchg
inc
pop
cs
cmc
in
mov
in
test
xchg
xchg
fsub
push
rol
mov
dec
mov
jge
and
daa
push
hlt
int
dec
fiadd
fxch
rcr
rcl
(bad)
pop
iret
repz
push
mov
mov
out
and
into
xor
cmp
push
cmp
gs
push
xchg
ret
mov
cmp
cwde
xchg
mov
inc
push
data16
mov
fidiv
cmp
mov
outs
out
xlat
cwde
xchg
push
(bad)
ds
and
or
adc
retf
addr16
adc
mov
mov
loope
pop
jne
and
sub
mov
gs
dec
sti
ds
and
lods
sub
aam
mov
mov
rcl
outs
ror
pop
dec
jmp
inc
outs
dec
mov
sbb
sbb
and
push
ret
inc
(bad)
aam
ins
mov
add
lock
pop
pop
repnz
fwait
push
sbb
cmp
jmp
std
daa
and
mov
push
dec
xor
dec
xchg
lock
fidiv
mov
push
in
fidiv
pushf
inc
pop
aad
ss
mov
cmp
dec
ins
into
idiv
cmp
mov
ret
jp
mul
dec
arpl
stos
dec
jns
loopne
ds
rcl
js
push
cli
js
in
adc
movs
sbb
xor
clc
ins
jmp
not
data16
adc
daa
cwde
fadd
add
sub
sbb
nop
fistp
xchg
hlt
lods
push
push
ror
pop
xor
imul
pop
scas
sbb
inc
and
leave
mov
or
ror
jnp
(bad)
int3
pop
jns
xor
stos
jmp
imul
xchg
jp
imul
int
fs
movs
pop
xor
push
into
sub
jno
inc
test
mov
jno
jmp
jbe
jns
gs
cmp
ss
bound
test
jnp
mov
fcom
adc
mov
cmp
xchg
cli
std
and
sub
outs
out
cmp
test
adc
sub
call
nop
xchg
adc
loop
pop
sub
pop
jg
pop
inc
in
xchg
icebp
fsubp
push
ss
mov
call
inc
sbb
int3
out
icebp
fwait
(bad)
icebp
das
lds
les
pop
cmps
fnstenv
fistp
loop
(bad)
cmps
inc
ds
sub
pusha
adc
sbb
jns
xchg
lods
pop
out
je
dec
cwde
cmp
dec
jbe
iret
inc
imul
rcr
stos
retf
mov
iret
dec
cmc
sub
xor
jl
lds
lods
out
mov
jmp
loop
dec
bound
pop
test
cmc
cmp
lock
mov
out
sub
jne
call
xlat
iret
push
test
imul
repnz
mov
push
in
into
les
and
sub
pop
call
xor
jbe
add
push
xchg
xchg
ror
in
xor
movs
cmp
(bad)
pop
or
pop
sbb
jno
pop
add
cli
push
push
pop
mov
ins
and
inc
mov
or
pop
sbb
shl
push
push
xchg
jmp
loope
xor
cld
dec
sbb
leave
or
and
dec
add
sahf
inc
mov
adc
call
or
ds
rol
les
and
inc
out
gs
jge
fisttp
mov
pop
xchg
jmp
xchg
out
popf
popa
cmp
fist
arpl
sub
cmc
sti
js
pushf
cmps
cmps
das
mov
cmovs
bound
add
xchg
inc
dec
cwde
fimul
push
popa
jle
mov
cmp
cmp
xor
nop
retf
clc
data16
fsubr
pop
mov
(bad)
ret
daa
movs
lds
outs
and
dec
inc
mov
movs
cmp
sbb
sub
(bad)
sbb
or
push
mov
in
push
outs
and
xor
into
div
(bad)
int3
cmp
push
or
ss
inc
add
lods
xchg
adc
push
retf
dec
pop
jns
xchg
in
rcr
xchg
cmp
push
out
mov
push
add
ret
ins
cmp
ss
lods
out
imul
mov
sbb
mov
jecxz
cwde
xor
pusha
movs
cmc
push
lods
jg
imul
jle
mov
mov
and
pop
pop
mov
sub
clc
lods
mov
jl
(bad)
call
ss
repnz
idiv
xchg
popf
and
aam
enter
push
cwde
je
mov
jmp
sbb
out
mov
add
cld
jge
cmp
call
dec
sub
mov
stos
sahf
imul
push
ins
out
cmc
pushf
mov
cmp
aaa
or
push
movs
mov
inc
shr
dec
mov
enter
gs
ret
sub
mov
(bad)
sub
and
mov
outs
and
aam
cmp
mov
inc
ja
in
pop
aam
retf
jg
xlat
mov
loop
mov
cli
pop
js
(bad)
in
es
das
or
xchg
inc
mov
xchg
mov
ins
mov
ins
cli
sbb
jnp
cmp
mov
hlt
pop
pop
aad
frstor
xlat
jmp
jp
push
sub
hlt
mov
push
loopne
lock
mov
(bad)
shl
adc
adc
aaa
xor
push
(bad)
and
cmp
push
fnsave
enter
icebp
xchg
stos
jg
adc
leave
addr16
cdq
fbstp
jnp
or
(bad)
int3
outs
jmp
rcl
mov
or
nop
aaa
lods
dec
jg
cwde
lea
or
sbb
icebp
inc
sbb
or
cmps
sbb
fbstp
lea
add
clc
out
fnstcw
call
mov
adc
mov
adc
iret
pop
sbb
leave
retf
or
mov
inc
push
nop
cmc
movs
mov
jbe
neg
jb
pop
jne
mov
jb
fbld
inc
movs
or
push
and
inc
inc
mov
sbb
pop
(bad)
mul
out
push
xchg
sbb
sar
mov
pop
dec
lods
xor
das
fwait
dec
cmp
jge
inc
or
sbb
add
dec
int3
pop
adc
mov
mov
sbb
sar
pop
cmps
(bad)
test
sbb
leave
xor
push
mov
test
add
nop
adc
popf
ins
cli
ss
js
arpl
dec
fld
sub
cmps
jnp
adc
bnd
pop
mov
in
imul
outs
rol
(bad)
in
cmovs
dec
ss
(bad)
mov
fst
inc
dec
out
push
rcl
xor
hlt
lds
add
push
xchg
movups
nop
loopne
out
gs
mov
xchg
ja
xchg
ret
rcr
sub
push
imul
pusha
push
add
iret
dec
into
cmps
push
xchg
fdivp
pop
int
(bad)
ins
js
retf
mov
jmp
mov
icebp
jl
test
add
call
ja
ins
(bad)
dec
mov
out
retf
inc
ins
mov
imul
mov
mov
lds
dec
inc
add
retf
into
adc
push
inc
popa
sbb
and
mov
out
addr16
pop
inc
xchg
cld
movs
jl
iret
dec
add
xchg
ror
(bad)
push
je
mov
ins
add
push
xor
out
mov
retf
popa
aam
adc
jecxz
in
jae
imul
pushf
mov
movs
jmp
ret
xchg
xor
pop
ret
xchg
cmp
loope
xchg
mov
std
out
bound
adc
mov
adc
rcr
loopne
jle
push
jg
xor
mov
fisubr
out
sbb
jp
out
xor
inc
ret
es
shr
fldcw
sti
inc
mov
dec
sub
push
iret
aam
gs
sub
call
push
mov
pop
clc
vldmxcsr
call
xchg
movs
popa
push
jecxz
(bad)
mov
sub
inc
enter
xor
pop
dec
cmp
sub
xlat
jecxz
xor
aas
fadd
or
mov
call
aad
jecxz
xor
rcr
jbe
jmp
push
add
ins
iret
sub
mov
lahf
push
push
pop
mov
out
xchg
lods
xchg
shr
mov
fstp
out
sbb
lahf
dec
or
adc
sub
sub
dec
in
setl
jmp
arpl
mov
lods
retf
sbb
(bad)
aas
test
mov
into
sti
mov
xchg
outs
or
fisub
xchg
icebp
mov
fdivr
addr16
mov
mov
jae
dec
push
sbb
pop
fimul
imul
test
scas
dec
mov
xchg
push
(bad)
sbb
loope
arpl
ins
xor
xchg
dec
pop
cmps
test
(bad)
lock
push
and
loope
add
into
pop
xchg
dec
dec
mov
dec
fisubr
sti
fsubp
cmc
in
ror
or
push
shl
jns
loop
aam
add
push
jmp
lahf
mov
call
pushf
mov
push
pop
out
test
clc
pop
push
adc
ja
push
lock
popf
fwait
out
mov
and
repz
out
cmp
add
inc
sbb
add
jae
pop
sbb
add
mov
pop
lods
jae
xchg
ss
xchg
push
sahf
adc
pop
or
imul
inc
shl
lock
lds
sub
xlat
fwait
jne
rcr
push
fidivr
inc
or
inc
loop
and
jbe
xchg
sti
mov
adc
dec
mov
(bad)
or
out
hlt
sub
dec
jns
js
pop
repz
sbb
mov
(bad)
fiadd
call
cs
inc
popa
dec
mov
pop
or
test
add
cmp
cmps
jmp
addr16
xor
sbb
popf
mov
inc
je
imul
push
mov
loopne
pop
lahf
ins
lods
iret
jmp
les
std
sbb
popf
push
jne
cmp
cmp
dec
or
or
sbb
mov
pop
pushf
(bad)
pop
xor
add
ins
retf
and
push
addr16
aad
add
inc
inc
fistp
ja
mov
lahf
dec
mov
in
fisttp
sbb
xchg
rol
and
xchg
je
inc
pop
and
shl
in
loopne
pop
pop
fs
jbe
xchg
xchg
(bad)
mov
lods
fsubr
(bad)
jbe
lock
mov
pop
pop
cwde
lock
inc
iret
and
dec
sub
mov
push
cld
cdq
lods
mov
push
pop
mov
ss
fsubr
dec
adc
sub
pushf
inc
outs
cmp
pop
inc
call
inc
outs
mov
xchg
fild
inc
mov
sbb
js
fnsave
in
jnp
xchg
jne
inc
xchg
jg
out
fld
dec
pop
sub
cdq
xchg
jg
add
sbb
jle
lds
xor
mov
adc
jmp
fnsave
dec
dec
pusha
cmp
(bad)
xchg
(bad)
pop
jae
dec
xchg
mov
xchg
mov
cmps
je
xchg
aas
sub
xlat
aas
retf
cmc
sbb
cmp
repnz
lock
(bad)
mov
add
adc
cmc
xor
(bad)
push
jg
sbb
cwde
adc
or
pop
test
rol
(bad)
jmp
pop
lea
sbb
hlt
jno
adc
and
jmp
scas
pop
mov
pop
inc
sbb
out
mov
add
lds
and
cmp
or
(bad)
fwait
mov
jmp
xchg
jecxz
mov
adc
scas
xchg
sub
fsub
in
test
aad
in
fnstenv
jg
outs
iret
stos
and
neg
sbb
(bad)
push
shl
pop
pop
out
lods
push
xchg
sub
sahf
fidiv
mov
(bad)
out
inc
push
jp
and
mov
loope
loop
fst
push
mov
xlat
sub
mov
test
inc
xchg
sti
mov
xchg
nop
in
ror
test
mov
fld
stc
cmp
(bad)
(bad)
or
daa
call
cmp
sbb
cmovge
xor
cmp
adc
out
popa
and
sahf
out
pop
mov
stc
lea
mov
mov
xchg
jb
out
(bad)
add
sbb
and
in
(bad)
pop
cmp
lds
sbb
not
dec
push
rcr
sahf
push
dec
aas
mov
dec
cmp
or
(bad)
mov
shl
xchg
cmp
cwde
inc
inc
sbb
std
stc
ss
cmp
je
dec
and
js
outs
pop
push
xlat
dec
outs
push
pop
inc
jmp
sahf
adc
xchg
fcomp
(bad)
pusha
jecxz
movs
dec
in
sbb
lds
(bad)
ja
fucomi
sub
inc
add
or
ror
pop
push
das
add
rol
adc
jno
cld
call
cwde
loope
jne
(bad)
pushf
test
mov
jp
mov
and
fld
es
imul
fs
cmp
xchg
sub
or
or
icebp
push
int
mov
xchg
fs
dec
jp
adc
aam
xchg
ds
cmp
sub
pop
xchg
mov
mov
shr
pop
adc
fucom
fsub
bound
shl
ror
popf
push
jno
js
lods
nop
or
sbb
jge
sar
addr16
dec
add
and
test
(bad)
mov
xor
xchg
sbb
ror
inc
adc
push
mov
mov
cdq
stc
sub
and
in
fistp
push
add
sub
jl
push
jmp
out
push
add
jns
adc
jmp
adc
inc
xor
stos
iret
xchg
shr
add
pop
add
push
adc
xor
cmp
rcl
add
cmovg
inc
dec
mov
jo
jbe
inc
sub
xor
mov
mov
push
int
push
jle
jmp
test
sti
inc
and
xrelease
out
dec
pop
inc
rcr
cmp
mov
out
xor
mov
fcomp
lds
(bad)
rcl
retf
ins
add
xor
ret
aam
push
out
in
cmp
les
ds
or
out
pop
call
mov
addr16
test
fnstenv
pop
sbb
pop
mov
out
sbb
icebp
cmp
xchg
imul
or
mov
test
btc
xor
jge
or
cmp
xchg
cmp
jae
and
popa
pusha
xchg
xor
dec
call
les
mov
fstp
out
push
mov
jae
loope
mov
into
mov
popa
xchg
and
cs
adc
or
adc
add
and
fld
mov
jno
dec
or
mov
fld
push
shld
xchg
cmp
retf
ins
cmp
xor
jle
sti
data16
push
into
(bad)
imul
mov
les
xchg
inc
mov
inc
cmp
push
test
xchg
mov
(bad)
shr
pop
into
or
ror
sahf
pop
hlt
imul
(bad)
xchg
cmps
aad
mov
sbb
pop
addr16
in
sahf
sbb
push
stos
(bad)
xchg
or
movs
dec
cmp
cmp
mov
jl
test
sub
inc
jno
aas
das
mov
inc
in
out
mov
repz
aaa
push
dec
out
mov
(bad)
fdiv
mov
enter
mov
xor
push
test
jmp
mov
inc
sbb
(bad)
mov
sbb
cwde
addr16
mov
jmp
aad
fucom
sbb
rcr
fsubrp
mov
ret
test
fimul
fld
pop
aaa
movs
fild
mov
jg
xchg
or
push
jno
push
and
and
add
shl
and
jo
cmp
cs
cmps
pop
push
inc
call
sub
sbb
dec
xchg
and
jg
and
cwde
aas
push
test
leave
aas
(bad)
sahf
scas
retf
xor
stos
jae
jo
fdiv
not
cmps
dec
cmp
stos
cmp
sti
jmp
loope
pop
sub
and
stc
mov
imul
pop
adc
aaa
movs
mov
das
jle
pop
out
mov
sbb
aas
scas
in
dec
pop
je
sub
aaa
cmp
cmps
addr16
jo
das
push
and
leave
push
xchg
jge
call
movs
call
les
mov
xor
cld
cs
mov
test
lods
loope
pusha
lods
cmp
fst
inc
sbb
push
xchg
iret
add
daa
mov
ret
xlat
mov
retf
adc
loope
or
and
add
or
mov
jns
test
mov
(bad)
ds
fild
std
xor
xchg
pop
retf
shl
sub
jo
add
cmp
dec
push
fiadd
mov
sbb
(bad)
lods
adc
jecxz
sbb
addr16
mov
xor
ins
cdq
arpl
and
data16
ficomp
inc
stc
or
jecxz
dec
cmp
jb
int
popa
stos
sbb
jb
lock
mov
js
mov
js
hlt
loope
popa
and
push
sti
add
push
cli
fist
leave
xchg
adc
scas
mov
lds
pmaxsw
ins
test
or
mov
ja
adc
dec
aas
outs
ins
xor
xor
cli
and
mov
xchg
daa
and
or
jo
or
push
jmp
imul
push
or
jae
and
test
mov
or
pop
cmc
cmp
jle
pinsrw
xor
scas
mov
popa
daa
push
dec
inc
popa
das
clc
(bad)
fucom
jo
imul
fcomp
and
cmp
jo
push
or
cmps
test
iret
in
mov
xchg
fwait
xor
push
jecxz
scas
cmp
adc
lea
(bad)
stc
shl
int
test
push
add
dec
push
into
xor
xor
dec
aas
stos
inc
out
adc
or
jns
mov
stc
movs
inc
pop
jb
xor
inc
mov
jnp
inc
sbb
mov
xchg
call
sbb
outs
das
xor
dec
fs
or
jae
cwde
cmps
jb
or
ss
fwait
and
pop
lds
xchg
sub
sti
call
or
adc
movs
add
xchg
into
test
pushf
add
neg
or
or
(bad)
or
outs
sahf
in
push
push
adc
mov
xor
xchg
xlat
or
add
sub
pop
dec
adc
cmps
repnz
sub
ret
fisttp
out
(bad)
retf
movs
gs
jne
popa
or
pushf
xchg
retf
adc
fmul
push
pop
dec
stos
xchg
loope
les
inc
test
lods
std
mov
sub
push
and
mov
data16
xor
xor
stos
add
sub
(bad)
test
push
stos
inc
je
inc
sbb
mov
xor
je
int3
jg
nop
inc
xchg
pop
cmc
dec
std
jnp
ret
push
dec
jb
adc
sub
shl
data16
and
mov
sbb
jp
mov
mov
push
push
imul
outs
rcr
or
mov
cdq
outs
into
add
push
jmpw
lods
scas
les
(bad)
mov
pop
inc
jp
dec
out
pop
dec
div
aaa
std
cmp
or
popa
pop
inc
mov
arpl
sub
mov
test
(bad)
movs
mov
stos
sbb
lods
scas
aas
push
mov
test
and
fadd
mov
cmp
mov
pop
sahf
lds
jle
(bad)
jno
jg
fmul
and
mov
rol
mov
cmp
push
pop
rol
push
sar
sub
push
and
or
lods
mov
out
xchg
xchg
je
ret
out
sbb
ins
inc
ss
sti
stos
xlat
sbb
jl
in
rcr
xor
mov
mov
cmp
jge
xchg
(bad)
mov
aaa
fisttp
out
mov
inc
xor
js
xor
jnp
int
add
stos
sti
jle
pop
cmc
push
mov
jb
dec
mov
and
popf
jne
fsubr
jb
xor
pop
aas
retf
or
shr
ret
pop
rol
aaa
pusha
repnz
ins
cmps
and
xchg
mov
cmp
fs
xchg
add
adc
out
mov
xor
scas
aam
ins
inc
fst
mov
sahf
fs
mov
mov
jo
xor
fiadd
rcr
dec
sbb
fst
fstp
push
cmp
jecxz
add
mov
sar
sti
xchg
std
jb
repz
sar
add
add
cmp
std
mov
outs
rol
inc
or
inc
inc
icebp
cmps
repnz
cmp
jle
adc
push
out
or
in
std
into
jo
jl
fistp
cld
out
fwait
jae
sub
xchg
popf
dec
mov
call
rcr
retf
and
or
cmp
push
xchg
xchg
mov
test
retf
leave
and
or
enter
adc
sbb
stos
das
mov
dec
and
dec
jle
popf
push
imul
jl
cs
in
in
push
xchg
ficomp
out
pop
sub
mov
in
out
call
xchg
mov
and
retf
shr
or
inc
dec
addr16
les
(bad)
(bad)
or
fadd
sub
jb
outs
(bad)
fist
sub
(bad)
bound
jmp
push
rcl
pop
add
in
aam
mov
stos
push
(bad)
lds
sbb
fwait
mov
out
jge
pop
cmps
pop
in
jle
cmp
repz
inc
pop
fbld
push
push
jno
out
pop
jb
movs
xchg
neg
xchg
stos
loope
mov
inc
mov
inc
lahf
cmp
popa
xchg
aaa
dec
add
outs
jnp
or
imul
inc
adc
jmp
pop
pushf
xchg
out
and
cdq
sbb
jno
fistp
les
jmp
fild
xor
fnsave
push
inc
test
jmp
dec
ins
mov
and
mov
ret
outs
mov
xor
ins
jecxz
pushf
xlat
ja
mov
cdq
mov
movs
dec
inc
inc
mov
nop
cmp
push
jmp
cmp
jnp
xchg
pop
dec
inc
jno
push
bound
xchg
push
jnp
cmp
ror
fmul
xor
xchg
loopne
addr16
mov
int3
(bad)
push
jmp
sbb
jl
sub
fcomip
or
inc
retf
leave
push
xchg
in
in
and
sub
repz
or
push
mov
xchg
add
rol
add
nop
mov
jb
jmp
pushf
pop
mov
cmp
fstp
or
push
sbb
mov
sbb
outs
pushf
xor
lahf
fiadd
mov
pop
fs
call
ret
pusha
outs
add
out
dec
sub
dec
push
pop
test
inc
mov
xor
inc
loope
adc
pminub
jmp
daa
xor
jecxz
mov
test
or
push
loop
ds
xchg
sbb
data16
pop
es
add
or
cmp
fistp
dec
mov
stc
xor
sti
stos
push
movs
pop
(bad)
fcomp
lods
xlat
gs
and
aas
cmp
jae
sub
sub
lahf
adc
jg
in
mov
mov
mov
fstp
in
sbb
leave
fwait
push
jo
out
ins
and
sub
jne
mov
pop
je
adc
mov
mov
mov
xchg
cmps
aas
adc
sbb
xor
repnz
pushf
ds
sbb
outs
pop
mov
mov
lods
pushf
sbb
(bad)
mov
lds
aam
out
dec
pop
dec
lahf
cmps
cld
icebp
clc
mov
jecxz
ret
lock
les
loop
jno
mov
cmp
(bad)
call
jbe
jge
test
mov
retf
ret
aaa
xor
xchg
mov
loopne
int
mov
sbb
std
lahf
pushf
fisubr
cs
imul
pop
cwde
aaa
pop
jae
test
nop
in
adc
aam
pop
pop
mov
sub
in
mov
enter
jb
sbb
lds
bound
dec
sub
mov
(bad)
jl
rol
imul
pop
(bad)
dec
scas
xor
jl
out
and
sub
xor
xor
dec
push
xor
pop
push
and
mov
outs
xor
ror
loope
or
ja
sar
retf
ret
adc
lods
push
pop
mov
cmps
loope
inc
dec
pop
fdiv
xchg
icebp
add
mov
leave
fidiv
pop
lock
push
fld
outs
adc
adc
adc
cmps
ret
mov
mov
pop
push
jmp
scas
pop
sub
(bad)
lea
shl
pop
lods
cwde
and
add
dec
push
sbb
dec
xor
out
cmp
inc
mov
xchg
inc
jno
jno
push
mov
pop
fdivr
jmp
push
cmp
mov
psubsw
(bad)
push
scas
xchg
jnp
sar
inc
mov
lds
xchg
dec
test
pop
pop
bound
cmp
jne
mov
sbb
cdq
cli
inc
test
scas
jl
inc
retf
loop
popf
mov
test
into
jecxz
test
loopne
cmps
pop
sub
sbb
mov
dec
inc
inc
mov
and
push
sbb
ins
ja
iret
and
mov
sub
fisubr
retf
aas
xor
bound
xor
push
mov
xchg
xchg
shl
(bad)
sar
nop
daa
lds
add
or
dec
arpl
aad
mov
cmps
xchg
mov
cld
push
out
or
rcl
dec
jle
xchg
pop
je
sbb
jg
mov
mov
(bad)
arpl
xchg
enter
adc
push
cdq
mov
(bad)
xchg
shl
mov
out
lods
push
and
fisub
jb
das
call
cmp
push
inc
xchg
or
out
mov
imul
mov
ret
mov
pop
sub
xchg
pop
mov
mov
(bad)
jno
jbe
pop
sub
int3
jmp
ss
shr
ja
pushw
jmp
pop
nop
out
jecxz
ins
rcl
test
lds
push
mov
mov
loope
int
xchg
pop
out
test
push
mov
inc
test
mov
inc
pop
sbb
cli
repz
or
fcomp
mov
sti
int3
xor
aam
icebp
jp
sbb
jno
data16
shr
inc
into
lods
cmc
in
lds
mov
mov
sbb
pop
add
sub
and
mov
fsub
sbb
mov
shl
mov
mov
pop
fldcw
jbe
lea
xor
rcl
out
sar
ret
scas
bound
imul
shl
mov
mov
int
xor
test
jne
jmp
push
stc
std
cs
xor
jg
loop
cmp
jne
sub
int3
cld
and
retf
mov
stc
push
enter
outs
pop
cmp
fidivr
outs
mov
ins
aad
xchg
int
(bad)
daa
and
xor
mov
adc
and
lea
leave
xor
or
cmp
and
rcr
sbb
scas
movs
mov
scas
cwde
or
xor
push
mov
cmc
xor
loopne
jecxz
xor
dec
sub
cmp
or
out
mov
pusha
jg
call
mov
jmp
mov
mov
and
bnd
out
add
fist
aaa
clc
jno
cmp
sub
cdq
shl
cli
and
pcmpeqw
mov
pop
outs
std
inc
lock
push
(bad)
in
call
push
cmps
pop
fs
inc
cld
repnz
fcomp
xlat
or
push
cmp
fsubr
push
stos
push
mov
dec
mov
jbe
inc
pop
sahf
loopne
push
xchg
rcr
out
out
xor
xchg
dec
push
xchg
stos
pop
ret
xchg
outs
push
mov
add
cmps
or
pop
mov
imul
fwait
rol
or
and
inc
inc
or
push
sbb
sbb
jno
add
mov
adc
jmp
test
int3
mov
enter
jl
addr16
ins
jecxz
mov
push
cld
js
push
into
jp
xchg
stos
and
lahf
xchg
dec
(bad)
and
nop
das
sti
mov
jge
xor
(bad)
aam
jl
retf
inc
or
pop
xlat
fidiv
enter
cmps
outs
sub
xchg
mov
out
sub
jecxz
inc
loope
mov
rol
cmp
test
int3
mov
mov
pop
mov
mul
fisttp
(bad)
popf
cmps
sub
pop
mov
add
sub
test
repz
nop
xchg
push
into
and
mov
mov
out
xor
fcmove
int
mov
jge
mov
das
push
aam
dec
inc
loop
inc
ds
scas
mul
mov
dec
xchg
fisttp
in
stos
out
pop
jae
push
in
adc
xchg
inc
rcr
rcl
(bad)
(bad)
xor
mov
(bad)
xor
push
outs
jne
inc
movs
lds
cmp
inc
call
rcr
mov
fldcw
inc
lods
or
sub
adc
xchg
call
xchg
xor
sti
cmps
dec
cdq
sub
into
cmp
lock
clc
stc
lds
dec
data16
(bad)
(bad)
push
pop
cmc
aas
stc
cmp
push
inc
repz
(bad)
jmp
shl
icebp
add
jmp
ficom
std
stc
es
mov
cmps
out
daa
int
adc
sar
xor
xchg
leave
(bad)
and
pop
mov
das
push
hlt
daa
or
pop
out
pop
cld
aad
mov
add
mov
fimul
mov
cs
lahf
push
mov
scas
aas
into
or
cmps
retf
jno
mov
adc
push
sar
or
pop
js
std
inc
and
pop
mov
dec
xor
les
and
sbb
inc
call
fisttp
sbb
pop
imul
adc
in
cmp
ins
xor
mov
ds
bound
and
dec
inc
jo
pop
xchg
(bad)
and
fbld
pop
ret
mov
mov
pusha
out
cmp
jne
(bad)
sub
push
shl
xchg
pop
lahf
cmp
int3
mov
fistp
sub
xlat
cmova
push
pop
cmps
dec
hlt
pusha
int
jbe
jg
pop
int3
push
repz
test
nop
je
xchg
and
clc
mov
(bad)
mov
test
call
rcr
lods
bound
loopne
mov
lock
cmp
mov
or
aam
test
test
pop
ret
mov
xchg
das
(bad)
fs
clc
shl
adc
(bad)
xchg
out
push
test
jno
adc
pop
test
cmps
sbb
div
mov
pop
mov
rcr
out
test
mov
inc
ins
loop
jae
or
cmp
push
in
repz
shr
dec
fnstenv
nop
push
scas
and
and
inc
or
(bad)
in
dec
test
fisubr
pop
out
int3
clc
out
jns
scas
xchg
scas
add
mov
adc
scas
aas
mov
dec
sub
ficom
push
repz
add
into
xor
dec
mov
inc
imul
adc
lea
mov
xor
cmp
cmp
fs
add
add
xchg
cli
pop
repz
dec
mul
jb
pushf
mov
fld
in
cmp
jl
dec
fisttp
ins
imul
bound
mov
adc
or
enter
add
cli
mov
jnp
jmp
sbb
setno
sti
mov
(bad)
mov
jae
adc
lahf
jl
inc
cvttps2pi
div
cmps
adc
sti
(bad)
pop
gs
gs
xchg
stc
in
retf
mov
lods
sub
popa
lock
jp
add
pop
dec
mov
arpl
and
popf
cli
pop
inc
cli
retf
stos
sbb
mov
std
lods
cli
lahf
jnp
movs
add
dec
dec
push
mov
adc
mov
clc
dec
stos
lahf
pushf
push
xor
mov
(bad)
sub
fwait
mov
cmp
xchg
xor
jae
xor
lea
xchg
push
lea
stos
popf
mov
daa
mov
mov
inc
daa
xor
push
pop
xchg
sar
lahf
add
movs
jle
mov
cmp
add
xor
inc
mov
cmp
add
adc
imul
lea
loop
xor
jl
aas
sbb
sub
ficomp
call
ds
jae
jno
(bad)
xor
(bad)
mov
and
or
out
es
or
sbb
outs
jp
scas
mov
mov
inc
push
jne
dec
sbb
dec
sub
mov
xchg
out
push
out
pop
xchg
pop
out
ja
cmp
push
add
adc
into
mov
inc
dec
xor
call
into
jns
aas
adc
cmp
mov
call
cwde
shr
sbb
pop
nop
jmp
push
leave
pusha
adc
push
fidivr
adc
sbb
mov
mov
(bad)
pop
fs
fabs
mov
adc
pop
or
(bad)
mov
repnz
jmp
pop
add
cmps
out
inc
jo
sbb
push
mov
les
pop
ins
repnz
stc
(bad)
adc
push
xchg
mov
dec
sbb
icebp
shl
jb
sbb
push
sar
xor
movs
cs
xor
xor
push
xchg
ins
inc
mov
sbb
int
cmp
jns
mov
out
lods
rcl
xchg
sahf
jae
fstp
push
aas
fwait
sbb
bound
pop
addr16
xchg
inc
cmc
sbb
dec
inc
inc
mov
pushf
ss
sub
ins
test
cmp
push
fwait
dec
sahf
ret
pop
(bad)
or
mov
mov
outs
pusha
cmc
sub
dec
adc
test
inc
add
jno
pop
add
popf
dec
add
loopne
aaa
xor
iret
mov
pop
mov
sub
outs
jae
push
push
ins
pop
xchg
jmp
cdq
pop
pop
pop
call
shr
shl
xor
data16
pop
mov
mov
sub
cdq
lahf
inc
addr16
scas
xchg
mov
push
out
sbb
xchg
loop
sbb
jb
jmp
jno
ret
pop
xlat
das
ins
jg
xchg
jecxz
call
inc
and
push
cmp
xor
fcom
adc
dec
add
add
icebp
ror
cli
dec
jecxz
imul
test
sbb
hlt
and
das
data16
out
ret
pop
adc
sbb
scas
aad
mov
mov
clc
(bad)
sub
jle
xchg
inc
mov
inc
jnp
mov
shr
loope
sub
aas
fadd
xchg
jmp
ret
mov
std
mov
pop
or
xchg
ss
dec
push
mov
add
nop
call
xor
xchg
sub
cmp
int3
ret
ret
shl
in
iret
push
xchg
adc
cmps
mov
cld
rcl
jecxz
leave
dec
and
xor
mov
jp
dec
and
shr
scas
std
fdiv
and
inc
mov
test
sub
test
dec
std
arpl
jge
lods
loopne
sub
sahf
movs
test
lock
ret
xor
push
movs
xlat
cmp
cld
les
push
push
pusha
test
(bad)
jns
jl
push
adc
xor
aam
jae
dec
mov
fcmovnbe
rcr
cmp
stos
push
adc
nop
outs
fs
in
lock
dec
mov
enter
loop
or
jp
add
fwait
mov
call
jmp
mov
push
mov
js
mov
test
dec
ins
aam
cs
iret
sub
popf
shr
cdq
add
pop
stos
pop
pop
fild
push
xor
adc
sbb
mov
fidivr
cdq
mov
sub
push
adc
cmc
(bad)
mov
xor
dec
cmp
push
xor
call
lods
adc
jo
push
cwde
outs
repz
cmp
cwde
sub
out
mov
loop
or
add
lea
pop
dec
xchg
je
dec
push
fcom
inc
adc
pop
mov
inc
adc
fs
movs
rcl
enter
lock
adc
pop
clc
mov
jns
add
push
pushf
mov
mov
(bad)
jp
jecxz
rcl
dec
call
or
mov
jns
push
test
js
sub
out
stos
mov
ficomp
ret
fldenv
(bad)
push
std
retf
(bad)
hlt
call
dec
stos
stc
push
mov
push
xor
je
cs
nop
mov
push
pushf
and
mov
push
add
jle
cmps
push
(bad)
pushf
lea
hlt
cmp
xor
inc
call
xor
mov
int3
inc
sbb
pushf
fwait
mov
popf
call
out
jmp
out
rol
(bad)
adc
lods
add
dec
push
(bad)
jmp
ins
movlps
xor
sub
shr
push
xchg
aas
(bad)
movs
jae
push
icebp
cmp
or
inc
arpl
add
jmp
mov
lds
div
add
or
ins
pop
arpl
or
xchg
(bad)
adc
push
xchg
jp
call
or
mov
jg
xor
xchg
sbb
in
popa
arpl
in
out
pop
add
test
xor
adc
test
cmc
imul
and
mov
xchg
retf
aaa
cmps
test
arpl
push
aad
jmp
jo
inc
or
(bad)
jno
(bad)
dec
dec
sub
or
push
mulps
ja
mov
push
jmp
aaa
stos
jo
out
xchg
jnp
mov
fisubr
stos
inc
mov
data16
adc
cwde
mov
inc
jg
and
mov
rcl
clc
dec
retf
inc
lods
movs
mov
in
lahf
loope
jb
pop
sar
cmp
push
sub
mov
cmp
sub
arpl
pop
jo
jnp
imul
cmp
pop
mov
test
clc
mov
ret
jecxz
mov
sub
jl
ja
lea
int3
adc
sahf
add
repz
adc
and
scas
add
mov
cmp
aas
mov
call
cmps
retf
cmp
aas
xor
push
test
cmp
in
mov
fmul
or
and
cwde
pop
add
mov
jmp
pop
xchg
cdq
or
cmp
stc
mov
mov
push
dec
js
jecxz
cwde
call
mov
mov
jmp
call
jecxz
shr
add
adc
bound
out
inc
ja
bound
pop
dec
mov
mov
leave
scas
jbe
pop
sub
jno
jns
loopne
jl
pop
aas
mov
jg
xchg
iret
mov
das
sbb
sbb
sbb
sbb
loop
loop
fdiv
popf
jmp
xlat
bnd
das
inc
fsub
adc
test
not
mov
push
test
in
sub
shl
add
call
in
cli
dec
(bad)
mov
xchg
hlt
fimul
adc
sub
jno
movs
loope
mov
push
xor
out
or
push
scas
ret
ret
add
sub
in
mov
dec
fsub
and
mov
ret
retf
lods
xchg
ins
add
mov
leave
ins
pop
and
mov
adc
out
or
outs
les
cdq
lock
(bad)
or
shr
adc
jp
lea
mov
jmp
cdq
or
fild
loopne
mov
loop
popa
fwait
shr
sar
cmp
(bad)
imul
jecxz
sahf
sbb
pop
js
dec
div
or
test
pop
push
push
mov
jl
imul
pop
rcl
rcl
scas
stos
std
dec
mov
enter
idiv
fstp
or
out
cdq
(bad)
adc
dec
mov
mov
out
das
cmp
pop
mov
or
mov
dec
mov
mov
or
fbstp
jmp
mov
fldcw
xor
scas
xor
or
and
dec
cmps
cmc
ret
mov
adc
int
mov
dec
into
sti
ret
xchg
pop
and
(bad)
clc
jl
inc
stos
pop
(bad)
movs
rol
sub
stos
and
arpl
inc
xchg
pop
jo
imul
sar
or
jmp
push
icebp
pop
inc
add
in
ja
xchg
inc
pop
mov
idiv
sahf
inc
sub
xor
sbb
dec
les
(bad)
retf
idiv
popa
outs
mov
sbb
out
loope
cwde
dec
jnp
inc
in
retf
mov
cs
cmp
jmp
jg
fucom
jp
cmp
cmps
jns
rol
lock
mov
cwde
ss
mov
lock
mov
or
cmc
push
add
and
inc
icebp
pop
mov
xchg
cmps
xchg
(bad)
xchg
rcl
xchg
(bad)
xor
sub
mov
(bad)
popf
ret
dec
repnz
pop
mov
push
pop
mov
rol
or
xor
xchg
movs
addr16
push
test
xchg
cdq
les
or
mov
call
xlat
test
xchg
xchg
pushf
js
xchg
rcr
rcl
mov
mov
sub
cmp
xor
cwde
or
mov
fincstp
and
outs
push
jmp
or
inc
je
inc
push
out
adc
mov
in
cmp
xor
test
call
cmp
jnp
mov
retf
shl
push
add
retf
sbb
cli
jae
dec
mov
xchg
push
xor
inc
outs
pop
fcomi
or
sbb
add
xlat
push
js
xor
and
popf
test
dec
jae
leave
out
or
fiadd
or
xor
fldenv
cs
mov
loope
sub
inc
aam
ret
sbb
retf
bound
pop
sbb
pop
or
inc
add
inc
mov
test
sahf
cmp
lea
cmp
push
lahf
enter
push
push
mov
inc
mov
inc
add
jne
test
xlat
loop
push
fist
imul
dec
push
fbld
push
inc
jge
retf
stos
int
xchg
inc
call
or
call
sar
inc
add
cmp
rol
leave
stos
xor
mov
repz
add
mov
jge
push
mov
lods
ret
xor
mov
inc
cmp
fst
movups
js
mov
dec
push
rcr
hlt
lods
adc
mov
or
hlt
dec
jg
retf
pop
xchg
sub
add
pop
mov
jp
scas
or
(bad)
ror
xchg
add
push
and
xlat
fstp
sub
pop
dec
mov
pushf
mov
and
out
retf
sub
icebp
mov
jns
dec
out
pop
mov
es
push
pop
and
leave
push
pop
pusha
adc
lea
jmp
sti
call
xchg
std
push
(bad)
jo
imul
jl
test
inc
mov
xor
shl
test
or
inc
ja
lods
outs
stos
aad
mov
add
xlat
outs
push
add
mov
shr
xor
(bad)
xchg
jecxz
adc
icebp
cdq
or
loopne
dec
sbb
dec
in
cmp
movs
dec
jle
shl
mov
jmp
cli
test
push
mov
cmc
or
(bad)
push
call
adc
sub
lods
mov
or
cli
movs
lods
mov
shl
or
inc
pop
pusha
(bad)
sub
sub
test
call
sar
popf
or
pop
or
jge
jl
sets
loope
ret
jae
xor
mov
mov
adc
jbe
enter
inc
mov
popf
mov
mov
and
pop
add
mov
int3
icebp
repz
div
xor
push
pushf
inc
jl
cli
fdiv
sbb
call
sbb
into
cld
rol
jne
outs
jg
inc
mov
out
jb
fld
fcom
lods
scas
push
cs
push
mov
test
stc
fs
mov
mov
sub
add
cmps
push
ja
and
push
xchg
test
movs
mov
in
ins
push
pop
jbe
or
xchg
and
and
mov
(bad)
pop
mov
pop
cmp
mov
aad
jg
clc
pusha
inc
outs
pusha
adc
mov
and
test
cwde
bound
lock
fdivrp
into
retf
xor
pop
movs
pop
jge
jge
(bad)
into
fs
xchg
inc
loopne
fadd
adc
dec
dec
dec
xchg
in
aaa
sub
cs
xor
xor
pop
cmp
js
xor
jp
jg
add
fdiv
sub
rep
sub
test
push
es
sbb
cli
mov
sahf
daa
aas
ds
add
sbb
iret
mov
pop
lds
test
std
cmp
ins
inc
pop
neg
pop
mov
loopne
(bad)
cli
xchg
pop
retf
in
push
push
add
sti
loope
retf
fld
push
stc
cmp
push
outs
cmp
xor
test
inc
int3
or
mov
add
or
sbb
jns
cmp
std
jo
sub
sbb
les
mov
jle
int
push
gs
ins
and
das
in
push
mov
push
aam
jns
cmp
and
imul
int
je
pop
les
pop
fdiv
push
jns
mov
push
(bad)
hlt
jb
sub
push
test
sbb
mov
jns
test
pop
movs
clc
or
adc
call
sub
adc
xchg
lds
inc
popa
mov
jb
sbb
jecxz
mov
ins
fs
adc
pushf
imul
and
jb
push
and
pop
push
in
out
jge
int
jge
sbb
data16
xor
int3
call
int
ret
adc
jecxz
in
and
icebp
lods
mov
cmp
jmp
rep
ret
adc
(bad)
jl
clc
mov
imul
jbe
xlat
in
sahf
cs
jle
(bad)
outs
mov
adc
(bad)
test
pop
arpl
jae
iret
or
out
(bad)
fidivr
adc
push
int
mov
xchg
cmps
push
nop
jle
stc
sbb
adc
pop
loopne
loopne
rcl
inc
test
retf
in
push
or
pop
std
inc
pop
inc
fcomip
jns
and
jge
cli
rcr
ja
and
int3
pop
int3
les
sbb
or
inc
adc
mov
adc
lods
mov
sub
xchg
jno
imul
mov
fistp
or
mov
pop
push
pop
or
aam
ficom
aas
enter
xor
xchg
jb
mov
out
adc
outs
std
xor
pushf
pop
iret
inc
sbb
outs
adc
cmp
add
repnz
mov
and
packssdw
and
pop
sti
pushf
push
popa
ins
jb
scas
and
adc
int3
mov
push
xchg
pop
lea
shr
adc
cmc
stos
mov
ins
aaa
aad
mov
mov
xor
dec
ret
inc
movs
enter
mov
mov
or
jl
jp
pop
out
pop
shl
call
sub
push
mov
inc
retw
and
jns
jne
ret
test
arpl
push
call
lea
pusha
xlat
sub
cld
stc
xchg
xor
cmp
cli
jmp
aas
lock
cmp
push
inc
or
fisttp
push
jmp
ret
pop
repnz
push
xlat
pop
pop
repnz
push
push
cmp
outs
and
xchg
mov
call
repz
int
xlat
sub
imul
pop
mov
ss
aam
leave
fcmovu
and
je
jmp
xchg
imul
xlat
cmp
retf
test
imul
int
test
xor
xor
(bad)
clc
sti
pop
and
(bad)
stc
and
inc
cmp
push
sbb
retf
sbb
dec
pop
test
jg
cli
(bad)
mov
pop
jecxz
imul
cmp
pop
adc
adc
fdiv
push
xchg
sbb
xor
fdiv
dec
xor
mov
call
stc
icebp
jge
or
mov
push
mov
pop
jne
out
dec
push
jbe
dec
arpl
push
xor
jmp
jle
iret
cmps
gs
dec
inc
out
(bad)
or
loopne
pop
repz
shl
jne
mov
push
sub
or
stc
dec
pop
icebp
mov
mov
xlat
sub
popf
add
mov
das
daa
imul
lahf
pop
fist
cmp
mov
test
pop
mov
xchg
aas
scas
cwde
cwde
adc
sbb
mov
xor
aam
aam
mov
mov
xchg
inc
into
pop
fsub
adc
or
lock
out
leave
xchg
lods
(bad)
push
xor
dec
aaa
adc
sub
mov
mov
imul
int
cmp
mov
mov
jg
mov
jne
mov
clc
cmc
xchg
jecxz
sar
fnstsw
mov
xchg
scas
jecxz
push
and
into
scas
jo
dec
and
or
mov
mul
mov
loopne
(bad)
fdiv
call
(bad)
mov
aad
and
push
dec
fnstenv
xor
mov
inc
ds
call
jge
shl
cdq
ja
dec
pop
js
pop
adc
jl
or
cwde
js
push
sbb
mov
(bad)
loope
jmp
push
sbb
add
dec
mov
jb
std
gs
data16
lea
mov
or
add
ds
rcl
pop
or
sbb
mov
push
ja
jmp
push
mov
sub
push
mov
jnp
sub
xchg
and
add
scas
add
ror
fisubr
clc
lahf
xchg
push
mov
push
(bad)
enter
sbb
mov
arpl
cmp
aas
sti
shl
push
sub
cmc
(bad)
mov
(bad)
jl
bound
push
aam
test
push
sub
mov
arpl
dec
sub
mul
retf
mov
or
pop
and
int
jnp
push
movs
ins
fwait
inc
push
push
cmps
mov
and
cmc
outs
ror
or
xchg
add
arpl
les
cli
push
dec
into
jmp
sub
ror
or
movs
mov
cmps
pop
cmove
mov
std
in
sub
jns
idiv
(bad)
lods
pop
cmp
cmove
sub
ds
mov
xchg
ins
mov
test
lods
jg
repz
add
mov
ja
ret
retf
icebp
push
mov
jge
xchg
out
pop
jmp
enter
jmp
stos
jle
enterw
inc
jmp
add
push
sbb
hlt
cmc
dec
mov
sbb
dec
ret
mov
jne
or
mov
repz
sbb
loopne
jp
adc
mov
add
dec
sahf
jmp
sbb
sbb
into
inc
mov
loope
pop
cmps
iret
pop
mov
imul
addr16
jnp
jge
out
jne
jbe
jno
rcl
das
add
sar
or
jo
out
cld
stos
scas
dec
in
cs
add
sub
cmc
mov
rcl
(bad)
popf
call
pop
std
aaa
fwait
jnp
push
idiv
(bad)
lahf
imul
sbb
outs
pop
cmp
push
jp
or
push
add
push
cmps
outs
and
je
pop
cmp
add
mov
sub
fcmovnbe
ins
and
add
rcl
pop
pusha
adc
xchg
pop
adc
xchg
cwde
inc
popa
inc
adc
call
(bad)
push
xchg
sbb
cwde
add
sub
(bad)
push
mov
mov
loope
xchg
popf
pop
popa
mov
xor
xor
gs
lahf
pop
mov
cmp
dec
adc
outs
mov
xchg
cld
in
xchg
clc
mov
movs
ja
aad
pusha
mov
sbb
arpl
gs
push
test
push
push
aas
add
push
or
cmp
jne
and
scas
lods
sub
sub
dec
aad
(bad)
mov
lea
int
add
outs
cmp
cmp
push
inc
(bad)
mov
or
lods
loopne
xchg
xchg
and
(bad)
add
xchg
in
mov
int3
mov
test
xchg
mov
repnz
jg
jo
push
jno
pusha
push
(bad)
jp
cli
mov
mov
adc
sbb
enter
bound
popf
lods
pop
mov
jo
pop
lahf
inc
mov
ret
jae
sbb
pop
mov
outs
add
imul
js
xor
add
push
xchg
imul
mov
mov
jg
in
mov
mov
pop
test
and
and
jnp
add
mov
out
jmp
jle
es
jns
popa
add
jmp
mov
je
movs
mov
jns
push
sbb
in
sub
dec
fwait
adc
mov
xor
into
jp
movs
adc
and
cs
xchg
xlat
gs
dec
inc
test
inc
jmp
mov
out
outs
sbb
iret
sub
std
movs
out
add
fisub
mov
sbb
pop
dec
aaa
dec
ds
mov
mov
mov
lods
cmp
xor
cmp
inc
sub
aad
sti
stos
fidivr
cmp
cmp
fcomp
inc
mov
into
(bad)
cmps
push
jle
int
push
or
xchg
jp
lea
push
stos
mov
mov
inc
out
bound
stos
aaa
movs
mov
sbb
push
add
pop
cs
and
gs
pop
shl
ror
addr16
jg
cmp
cmp
jb
push
mov
mov
jae
rcr
xchg
pop
test
jge
cmps
lds
mov
dec
adc
aam
mov
xor
and
push
xor
fwait
adc
add
fwait
xchg
push
dec
aas
es
imul
and
fist
mov
jmp
mov
and
adc
push
sub
mov
scas
call
mov
mov
jg
in
test
mov
cmp
xor
aaa
lds
pop
sbb
fmul
push
fcom
popf
(bad)
enter
in
adc
add
sub
add
mov
(bad)
sub
xchg
test
stc
or
mov
std
sub
xor
and
cs
cmp
jmp
or
dec
add
inc
leave
movs
inc
(bad)
cmp
dec
push
aaa
nop
and
dec
pop
xor
push
mov
mov
jmp
nop
adc
lock
fwait
jge
loop
aas
mov
and
js
and
repnz
sti
xor
test
leave
aaa
mov
mov
jae
fld
push
mov
adc
das
addr16
sbb
frstor
bnd
fmul
mov
div
scas
adc
fcomp
sti
das
sbb
jg
push
push
sbb
lods
scas
call
(bad)
sahf
pop
xchg
sbb
mov
or
out
inc
addr16
mov
and
pop
aam
cmp
and
inc
mov
jns
sub
inc
fwait
push
(bad)
mov
jne
movs
ds
inc
push
test
add
pop
pop
stos
aas
(bad)
sbb
fild
xor
out
cmp
inc
mov
lds
es
add
xchg
ja
int
or
cmp
or
inc
jno
sbb
mov
arpl
ret
test
pushf
fcmovne
xor
rol
mov
mov
ins
retf
mov
jge
arpl
sub
jmp
test
arpl
push
in
in
cli
cmp
fs
test
mov
fsub
or
xchg
adc
aas
ret
mov
push
sbb
arpl
stos
shl
push
ret
repnz
mov
test
push
lea
movs
and
add
xchg
push
(bad)
xor
and
jb
inc
pop
ss
hlt
or
cmps
imul
jp
cmp
out
fcmovnbe
jbe
dec
mov
push
lods
data16
pop
jl
in
loopne
pop
xor
mov
xor
fs
mov
lahf
jge
mov
popa
fldenv
push
add
jge
cdq
cmp
push
popf
and
add
jle
mov
rep
cmp
push
add
mov
in
repnz
fs
adc
sub
sub
daa
es
dec
mov
cld
out
test
test
into
movs
pop
inc
dec
sub
mov
inc
pop
push
sbb
jb
jns
jne
repnz
(bad)
cmps
xor
push
mov
mov
add
pusha
ret
je
and
mov
lods
mov
sbb
repz
sub
mov
pushf
mov
cmp
jecxz
adc
add
daa
je
sub
sbb
add
jne
mov
out
inc
loope
mov
pop
mov
add
dec
stos
retf
sbb
cmps
xor
jl
imul
cmps
and
mov
mov
inc
idiv
xor
cmp
pop
or
(bad)
je
lahf
push
xor
fldenv
xchg
adc
inc
pop
push
rcr
out
outs
out
addr16
jecxz
scas
or
xor
fwait
mov
mov
(bad)
cmp
mov
fwait
repnz
lods
or
inc
cmps
shl
and
mov
dec
cmp
inc
js
(bad)
cmp
movs
ins
and
fxch
jns
leave
jmp
stos
sub
sbb
mov
movs
call
mov
and
jge
sub
sub
sub
ret
aaa
mov
lods
mov
adc
mov
sbb
pop
scas
push
pop
test
(bad)
out
cli
mov
outs
iret
(bad)
ret
inc
pop
and
sti
inc
std
repz
or
dec
imul
xchg
pop
out
pop
xor
cmp
push
in
push
ror
imul
push
cmps
out
sub
mov
(bad)
aad
mov
sub
mov
cmp
cmc
sub
sub
scas
add
loop
das
pop
jnp
popa
ins
std
xchg
inc
retf
and
cld
imul
jmp
sbb
dec
inc
stos
int3
pop
sub
mov
cmp
mov
rcl
inc
movs
int
cmp
gs
sub
dec
sub
loop
add
jmp
fidiv
add
jmp
adc
lds
je
sti
or
mov
aad
dec
pop
out
or
sub
xor
stos
sbb
or
inc
lock
mov
mov
stos
xor
test
mov
sti
bound
ins
cmp
dec
xor
mov
xchg
jb
push
push
mov
imul
retf
(bad)
dec
xchg
sbb
mov
lock
pop
(bad)
sbb
dec
ins
loopne
repnz
(bad)
jb
add
fbld
jmp
cmp
repz
add
sub
cmp
push
pop
sbb
cli
inc
add
call
mov
or
aas
cmp
sbb
outs
sub
into
scas
aas
pop
aas
sbb
jb
xor
icebp
jmp
aas
pop
dec
ficom
sbb
adc
add
xchg
push
fwait
adc
enter
sbb
adc
pop
pop
shl
push
(bad)
enter
scas
clc
out
dec
push
sti
inc
mov
jg
mov
pop
shr
or
lea
push
clc
adc
inc
gs
xor
cs
inc
jmp
mov
ror
push
in
mov
pushf
push
xchg
jae
or
scas
mov
xor
add
into
ror
mov
lods
inc
les
stc
shl
mov
pop
out
inc
mov
ja
stc
out
sub
stos
pushf
xchg
lahf
mov
lds
mov
dec
push
dec
gs
aaa
ret
adc
cmc
jl
sbb
xor
sub
xchg
outs
rcl
dec
push
and
jecxz
push
mov
lock
sub
fiadd
push
dec
call
cdq
mov
pop
xchg
add
xchg
sti
mov
xchg
mov
jae
pop
aaa
and
mov
mov
jl
aad
les
cmp
mov
(bad)
loope
daa
xor
sbb
mov
loope
xchg
push
loopne
mov
movs
mov
mov
mov
scas
dec
out
add
cmp
mov
dec
mov
jmp
dec
icebp
dec
hlt
je
mov
jg
or
jmp
inc
push
sahf
aaa
adc
jb
pop
out
and
push
xlat
in
pop
(bad)
sbb
test
push
jg
lds
push
jmp
xchg
movs
sahf
repz
pop
jnp
(bad)
or
cmp
or
outs
fs
xor
sti
out
mov
sub
mov
daa
inc
push
inc
rcr
out
in
test
and
icebp
add
inc
jne
shl
push
xor
and
xor
ss
xor
mov
pop
retf
mov
or
das
pushf
jge
xor
dec
(bad)
mov
and
aam
loope
or
add
xchg
(bad)
test
jae
jl
inc
outs
push
mov
push
les
pop
xchg
push
xchg
sbb
jp
scas
xor
add
jns
int3
sub
movs
cmp
lahf
inc
or
imul
and
dec
inc
or
lock
inc
inc
inc
mov
hlt
xor
rcl
fcomp
mov
fbld
scas
pop
lock
int3
push
es
movs
mov
xchg
cli
ds
test
sub
fcom
pop
imul
rol
xor
dec
mov
int
enter
ficomp
fdiv
sbb
sbb
dec
movs
(bad)
out
(bad)
xchg
add
retf
pop
shl
pop
dec
stos
sbb
sbb
xor
js
lea
xchg
or
xor
leave
lods
ret
cwde
clc
in
mov
shr
xor
dec
jbe
jmp
dec
mov
(bad)
imul
xor
push
jno
push
dec
xor
dec
xchg
movs
ja
cmp
data16
mov
and
(bad)
fwait
pop
scas
push
inc
mov
cld
imul
jne
sbb
sbb
inc
jo
and
pop
mov
lock
fcmovb
ja
push
xchg
xchg
push
xchg
jne
add
and
sbb
jnp
std
es
(bad)
pusha
out
(bad)
push
and
jns
lahf
jne
pop
sbb
mov
into
enter
das
clc
jne
xor
ret
push
popa
sub
dec
mov
push
push
or
(bad)
jle
imul
jmp
(bad)
dec
sub
int3
jo
xor
movs
adc
aad
lods
(bad)
hlt
adc
sbb
adc
jae
pop
sbb
call
outs
out
and
outs
outs
mov
sbb
loop
int3
call
and
push
xor
xchg
push
ss
push
mov
imul
stos
inc
xchg
push
mov
sahf
lahf
fld
mov
dec
mov
xchg
cld
mov
dec
sub
sub
out
data16
repz
clc
xchg
xchg
sti
sub
mov
jno
(bad)
sbb
dec
shl
dec
add
pop
cmp
cmp
and
ss
sbb
xor
sbb
jmp
arpl
sub
add
pop
pop
xchg
sbb
xor
jae
mov
or
adc
mov
mov
imul
rol
ret
pop
sti
and
pop
and
sbb
jmp
sub
push
or
pop
sar
mov
movs
fcomp
push
into
in
fwait
pop
push
repz
adc
in
add
pushf
fs
mov
test
jp
xchg
dec
and
adc
rcr
(bad)
shr
test
rol
xor
xor
shr
mov
es
or
jns
fld
data16
push
std
cld
lds
(bad)
idiv
test
scas
xor
cmp
dec
dec
xor
mov
pop
div
(bad)
test
gs
call
cmp
aas
xorps
ins
movs
addr16
hlt
mov
mov
data16
pop
mov
fnstenv
cmp
mov
cmp
xchg
push
leave
std
(bad)
sub
mov
scas
adc
pop
push
enter
pop
ins
push
push
mov
xchg
mov
aad
sbb
int3
xchg
stos
aas
push
dec
xor
in
sbb
jne
push
inc
fld
sti
cli
push
xchg
pop
xor
scas
repnz
adc
push
pop
mov
ror
sbb
or
xchg
xor
out
loop
xor
sub
arpl
mov
sub
cmp
imul
cmc
cli
movs
jmp
sbb
scas
fisttp
jns
pop
jae
fdivp
add
xchg
pop
call
adc
sbb
cmp
loop
call
dec
daa
iret
add
cmp
pusha
fwait
cdq
xor
mov
mov
cmp
adc
cld
retf
push
xchg
jle
in
push
pushf
pushf
xlat
sbb
and
loop
cwde
int3
inc
dec
cmps
in
xchg
ret
push
or
xor
cmps
int
fwait
add
inc
into
leave
repnz
sbb
and
push
cld
jecxz
sub
aas
jne
mov
ja
push
cmps
rcl
aad
ja
dec
enter
es
(bad)
jns
aad
mov
leave
daa
aad
jnp
test
nop
adc
lods
(bad)
jnp
es
adc
fimul
sub
mov
and
outs
das
outs
add
cmc
dec
jmp
int3
jbe
mov
adc
jbe
mov
jecxz
cdq
outs
push
jnp
mov
lea
outs
pusha
xchg
sbb
push
jns
inc
mov
loop
pextrw
popf
sbb
(bad)
sub
or
and
gs
push
data16
fistp
mov
push
xchg
out
sub
in
xor
test
pop
mov
jmp
out
xchg
sbb
test
push
xor
adc
push
rcr
hlt
daa
mov
xchg
mov
ret
add
(bad)
shr
pop
sub
pushf
nop
dec
adc
add
daa
mov
ret
in
cmp
or
xchg
in
adc
out
or
aaa
add
add
iret
xor
std
cmp
jecxz
push
retf
sbb
inc
pop
lock
jbe
rcl
mov
push
push
jl
add
repz
ins
mov
sbb
mov
into
mov
sub
pop
and
es
adc
sub
inc
(bad)
pop
and
aas
je
icebp
adc
cmp
lds
xchg
test
ret
int3
sbb
call
or
and
jns
adc
dec
movs
or
lods
cmp
cld
or
inc
pop
xor
dec
out
rol
lds
inc
mov
rcl
xchg
cmp
cmps
scas
sti
jp
adc
addr16
fld
ficomp
cmp
retf
xor
or
mov
push
aas
leave
ja
or
push
pop
and
or
sbb
mov
pop
pop
dec
sub
dec
dec
fwait
aaa
dec
jecxz
dec
(bad)
enter
arpl
mov
in
cmp
scas
mul
push
mov
inc
repnz
scas
cdq
shl
add
mov
push
sub
cmp
jg
loopne
lods
push
movs
push
clc
cmp
push
jnp
in
daa
pop
push
and
sbb
lea
(bad)
mov
cdq
fimul
loopne
ret
jle
cmp
out
pop
pop
sahf
mov
push
cwde
xchg
test
loop
dec
xor
shl
rol
xor
pop
push
in
js
ret
ds
jl
mov
push
mov
sbb
das
ds
fcom
pushf
scas
and
loop
cld
mov
add
push
xchg
ins
mov
jge
movs
retf
mul
cwde
sti
mov
imul
mov
dec
(bad)
icebp
imul
das
sbb
out
ins
and
dec
pop
sub
mov
nop
xlat
in
(bad)
enter
push
mov
cmp
inc
lods
leavew
lods
xor
cdq
retf
shl
jbe
aaa
push
call
scas
mov
dec
shr
lahf
es
je
jg
jb
int3
sub
outs
mov
add
mov
dec
mov
sbb
ficomp
dec
mov
lods
push
lods
sub
cmp
pop
sahf
and
movs
jecxz
lods
dec
enter
xor
xor
nop
inc
scas
push
xor
xchg
add
daa
fidiv
lods
pusha
idiv
(bad)
leave
daa
mov
sbb
jno
leave
mov
pop
xchg
test
add
cmc
xchg
push
adc
dec
popa
dec
pop
inc
push
push
sbb
ror
cli
mov
dec
retf
das
in
cmp
pop
cmp
jb
test
lea
retf
movs
popf
sub
xchg
mov
mov
sar
inc
jp
shl
pop
push
adc
in
into
enter
pop
into
push
out
adc
aad
shr
(bad)
mov
adc
lock
push
nop
repz
add
push
mov
dec
jecxz
cmp
in
push
aad
sub
inc
sbb
cmp
aas
sti
add
arpl
and
push
pop
push
stc
mov
stc
cmp
cmc
xchg
fs
mov
fldcw
out
or
adc
sti
dec
lods
jmp
xchg
and
enter
xor
outs
mov
rcr
adc
dec
dec
mov
xor
push
mov
lahf
dec
movs
pop
sub
fstp
sub
push
inc
jmp
add
xor
repz
retf
mov
xchg
sub
adc
xor
or
(bad)
adc
mov
mov
dec
pop
sub
out
aad
inc
and
cli
sub
and
dec
mov
pop
ret
xchg
lods
adc
outs
push
pop
bound
shl
dec
or
out
sbb
into
inc
pop
in
and
jmp
inc
cwde
adc
push
(bad)
jmp
pop
xor
sbb
cmp
scas
jecxz
(bad)
xchg
fisubr
scas
imul
adc
mov
sbb
add
stos
mov
inc
ss
jo
jae
div
xor
out
outs
push
adc
mov
imul
mov
cmp
sub
pop
add
hlt
jecxz
sub
inc
xchg
xor
mov
lock
mov
add
and
shl
addr16
cmp
shr
pop
ror
call
aas
sbb
cmp
ror
lods
xor
push
sbb
sub
enter
jbe
push
pop
js
fadd
xor
(bad)
xchg
xchg
sbb
push
ins
aaa
sub
test
add
pusha
test
mov
xlat
mov
(bad)
jg
push
add
xor
scas
mov
(bad)
in
sti
lea
popf
jo
mov
outs
repz
jecxz
movs
loop
sub
stos
fistp
mov
xor
inc
and
scas
lahf
fnsave
lods
mov
push
out
gs
je
xchg
inc
jmp
mov
jge
push
jae
stos
scas
mov
xchg
lods
addr16
cmps
test
lmsw
xor
mov
outs
mov
pop
mov
shl
xchg
jmp
in
adc
lock
(bad)
imul
pop
rcr
push
sbb
lods
mov
sub
cwde
shl
pop
mov
test
lds
jae
xchg
dec
push
push
(bad)
pushf
xor
jno
popa
(bad)
pop
call
push
pop
add
mov
cs
mov
xor
out
or
pop
repnz
fidivr
enter
xor
add
xor
cmp
lahf
and
xchg
sbb
jmp
push
test
xlat
fstp
xor
gs
mov
lds
mov
mov
push
xchg
outs
sbb
leave
nop
in
es
retf
add
ds
fcmovnu
in
push
enter
pop
cld
push
lods
mov
in
and
fisttp
cmp
mov
adc
sbb
adc
fist
xchg
daa
mov
sbb
test
nop
cmp
inc
pop
sar
push
ss
xchg
sbb
xchg
cmp
ins
add
scas
sbb
xchg
push
ror
xlat
nop
popf
lea
jg
inc
mov
out
mov
mov
dec
mov
mov
addr16
ret
mov
bound
dec
out
fisttp
mov
cdq
pop
out
cmps
fcom
sbb
inc
lahf
fistp
or
mov
pop
push
push
mov
outs
pusha
adc
push
and
sbb
lds
mov
out
pop
sub
aad
or
test
xchg
das
pop
xchg
sub
jmp
jno
into
xlat
sbb
mov
out
cli
mov
or
xchg
adc
cmp
inc
ins
(bad)
pop
jmp
(bad)
mov
ret
cmp
out
outs
jns
shl
adc
lds
xor
cmc
push
(bad)
ficomp
jge
fnstsw
mov
jge
mov
xlat
dec
xor
ja
fisub
mov
sbb
popa
adc
ja
jne
in
dec
xor
xchg
(bad)
int3
retf
cld
inc
cmps
mov
xchg
test
shl
lea
test
and
xor
jle
cs
jne
adc
and
mov
jecxz
cli
pop
cmp
mov
jb
les
adc
stos
int
enter
sub
(bad)
pop
jge
jle
ins
inc
sbb
jns
mov
sbb
inc
aas
test
dec
and
jle
out
repz
ret
lahf
dec
adc
retf
pop
push
push
xchg
aad
mov
shr
movs
adc
das
data16
fidivr
je
adc
push
ficomp
cs
sub
dec
dec
hlt
imul
inc
ins
ret
add
and
mov
cmps
(bad)
sbb
gs
shr
jmp
jne
out
fisttp
pop
outs
xchg
cmp
xchg
ins
adc
sub
sub
and
sahf
mov
inc
sbb
dec
mov
aaa
sbb
es
jno
push
test
out
adc
pop
push
cmps
or
xchg
fs
hlt
inc
add
sysret
mov
or
pop
sbb
shr
repz
add
xchg
iret
pop
repz
fcomp
ror
adc
std
stos
sbb
cmp
ins
jp
inc
shr
sbb
dec
jmp
fs
jo
sar
inc
cmp
dec
test
in
sub
inc
mov
dec
cmp
add
jge
mov
std
jecxz
stos
scas
nop
sbb
hlt
push
test
xchg
(bad)
les
je
leave
clc
push
in
sub
movs
jmp
adc
out
sub
adc
xor
mov
inc
cdq
xchg
jmp
aas
push
repnz
sbb
movs
call
mov
xor
sbb
mov
outs
pop
jl
and
pusha
mov
dec
mov
push
mov
or
sar
xlat
ss
sti
adc
push
cmp
jmp
hlt
cmps
push
push
daa
ins
xor
mov
je
daa
mov
pop
or
pop
sbb
push
movs
into
pop
scas
sub
mov
sti
das
push
push
pop
movs
mov
push
aad
inc
dec
ret
lods
push
into
pushf
xchg
aas
(bad)
xlat
aaa
(bad)
mov
iret
ret
lahf
jbe
mov
lock
lods
shr
xchg
cdq
cmps
lea
xor
dec
pusha
js
ret
push
je
cs
daa
rcl
mov
sub
rcl
sar
lods
mov
cmps
jg
mov
mov
cmps
mov
mov
lock
ins
cmp
push
inc
div
popw
and
sbb
into
addr16
test
ins
xor
jmp
cmp
movs
and
adc
dec
mov
arpl
out
movs
mov
(bad)
icebp
dec
jae
hlt
dec
sub
or
mov
fldenv
pop
push
xchg
fild
cmp
cmp
ds
ror
test
call
les
je
test
call
xor
inc
add
inc
mov
sbb
inc
retf
repnz
mov
mov
adc
jmp
mov
mov
ror
lea
nop
inc
test
aaa
rcr
outs
xchg
cli
and
dec
mov
sub
lods
sbb
mov
(bad)
jmp
sub
pop
fldcw
xor
or
mov
cld
arpl
push
sub
xor
and
or
icebp
(bad)
jne
add
pop
sbb
cld
daa
arpl
xlat
xor
push
mov
or
js
xor
jbe
jno
out
(bad)
repnz
mov
xchg
xor
lea
adc
(bad)
lds
lea
test
aad
fistp
xor
mov
mov
mov
div
mov
mov
ins
cmc
xor
inc
lods
daa
adc
in
mov
fld
stos
pop
in
das
or
inc
inc
jnp
xchg
(bad)
sar
xor
test
nop
es
cld
sar
sub
jle
call
data16
mov
pop
xor
outs
mov
cdq
adc
dec
cmp
pop
bound
pop
ret
movs
sahf
xchg
push
dec
jmp
fistp
pop
add
push
icebp
jbe
push
and
imul
retf
enter
test
adc
dec
(bad)
in
inc
adc
mov
add
loope
test
lock
jnp
and
inc
or
mov
or
repz
shl
pop
call
arpl
sbb
call
in
imul
fwait
sti
adc
leave
and
mov
cs
push
mov
fnsave
fsubr
fisub
jp
call
add
ja
pop
inc
mul
outs
test
dec
add
mov
mov
shr
pminub
(bad)
aas
clc
jns
jno
lods
dec
int
daa
inc
ret
stc
ror
xor
fwait
xor
pop
lds
lock
aaa
mov
push
mov
mov
pop
mov
sub
adc
jecxz
arpl
test
loope
mov
pop
jg
and
add
int3
stc
stc
pop
push
in
inc
fdivr
adc
popf
inc
cdq
outs
push
ficom
pop
mov
sbb
xor
ror
(bad)
and
mov
sbb
and
dec
fcmove
ror
ja
adc
int
pop
ret
inc
mov
dec
call
adc
into
push
loope
movs
iret
push
adc
mov
loop
arpl
and
(bad)
and
inc
xchg
pusha
lahf
or
popa
dec
ret
mov
mov
repnz
sbb
and
(bad)
fdiv
push
add
js
rol
add
mov
xchg
add
xchg
lods
jne
in
mov
not
or
cmc
mov
cmp
sahf
add
sbb
mov
js
(bad)
aad
pop
pop
hlt
and
(bad)
and
mov
xor
pop
out
jmp
and
mov
cli
ror
ret
lahf
pop
loop
imul
cmp
pop
(bad)
outs
pop
jmp
fwait
arpl
stos
ret
mov
sbb
bound
out
stos
js
adc
push
test
test
and
out
mov
mov
inc
scas
int3
mov
je
in
outs
adc
push
(bad)
mov
popa
push
dec
xchg
or
ret
out
jge
dec
cmp
loope
xchg
inc
mov
adc
xchg
lods
lods
jl
mov
pop
popa
mov
ret
imul
je
cdq
or
jnp
shl
push
dec
in
xor
in
dec
sbb
or
push
popf
sbb
jl
outs
(bad)
mov
xchg
out
push
inc
inc
dec
push
test
adc
dec
retf
push
les
xchg
mov
mov
in
aaa
rcl
add
cmp
movs
imul
loop
add
xchg
mov
sbb
sub
nop
lock
lea
push
retf
sub
xchg
xchg
imul
int3
or
mov
inc
add
arpl
cmp
call
mov
retf
(bad)
call
or
sti
or
je
dec
add
or
mov
mov
or
mov
out
sub
sub
xchg
mov
push
jo
daa
mov
xor
ss
call
test
ja
mov
pop
gs
mov
mov
pop
cmp
mov
es
les
retf
pushf
es
inc
out
sub
mov
inc
out
fadd
cmp
xor
xlat
scas
dec
jge
xchg
xchg
outs
jge
cwde
push
add
inc
cmp
in
or
push
xor
jo
cmps
add
sbb
adc
dec
lods
push
stos
addr16
fisttp
jl
nop
shl
ror
(bad)
cwde
shr
sub
mov
icebp
xchg
pmulhw
pop
ds
pop
mov
sbb
ficomp
shl
push
mov
mov
sbb
neg
lahf
dec
imul
xchg
sbb
ret
and
and
jecxz
sbb
data16
cs
pusha
push
and
(bad)
adc
jecxz
pop
jo
push
fldenv
inc
(bad)
pop
ror
sub
sbb
fcom
add
sbb
ds
retf
imul
xchg
mov
sti
sti
dec
ss
adc
jle
ds
jmp
adc
push
imul
jbe
int
inc
ins
push
cs
push
inc
ror
mov
mov
add
mov
add
call
clc
jecxz
(bad)
mov
dec
push
addr16
rcr
jmp
dec
out
stos
push
aas
xchg
gs
dec
(bad)
push
fsub
or
and
mov
inc
(bad)
sbb
and
sbb
cmp
int3
dec
inc
pop
dec
lock
push
(bad)
call
push
xlat
jg
or
sub
add
lds
sbb
icebp
cmps
das
inc
loop
loopne
test
scas
fdiv
call
mov
xchg
or
xor
dec
mov
ins
jg
push
push
stc
xchg
clc
add
or
add
pop
cld
ror
movs
loope
inc
dec
xor
pop
pusha
aaa
data16
sub
pop
lds
mov
mov
inc
ror
jno
(bad)
jne
cmp
pushf
jnp
fisub
std
iret
data16
pop
pop
inc
xlat
ret
push
mov
retf
mov
fld
adc
mov
add
enter
into
adc
rep
in
(bad)
dec
inc
ds
mov
xor
aaa
mov
ror
mov
fwait
(bad)
(bad)
cld
add
in
add
mov
fwait
mov
dec
dec
pop
shr
cld
or
imul
sub
jg
push
inc
mov
int3
and
add
scas
adc
mov
lahf
xchg
es
jbe
and
xchg
(bad)
xchg
adc
sub
xchg
jbe
add
stc
ss
stos
mov
xor
fimul
fld
jg
leave
xchg
jae
test
test
pusha
xor
add
je
popa
jle
js
pusha
icebp
push
(bad)
ds
leave
cmp
retf
outs
jmp
push
in
xor
imul
lods
pop
mov
push
push
lds
cld
xor
push
jnp
loopne
dec
sub
nop
(bad)
or
outs
sbb
inc
inc
xlat
cmp
retf
or
hlt
jl
lods
xor
mov
sub
stos
leave
xor
cmp
inc
push
cmps
jp
out
xchg
retf
sub
push
push
xchg
aaa
in
daa
jb
call
in
cs
xchg
mov
mov
push
lahf
xor
aad
mov
mov
sbb
sub
sub
push
addr16
adc
xchg
xchg
xchg
pop
mov
lock
repz
push
xchg
cmp
xchg
inc
inc
pop
in
or
sbb
inc
aam
mov
cmp
scas
mov
sbb
sti
in
je
push
mov
outs
test
inc
pop
cmp
xchg
add
xchg
mov
lock
pop
sbb
lds
sahf
push
cld
push
push
in
int
pop
(bad)
scas
das
cmp
stos
mov
in
shl
jmp
mov
adc
and
cmps
lods
cmp
sbb
sbb
add
xchg
test
ror
mov
mov
pushf
call
push
mov
data16
inc
sar
je
push
push
mov
xor
push
adc
or
or
pop
mov
popf
ret
add
lock
cs
dec
pop
fstp
stc
adc
inc
push
rep
in
add
mov
inc
xchg
shl
lea
lods
xchg
cmp
das
jb
xchg
mov
or
arpl
sbb
out
dec
in
pop
nop
(bad)
sbb
call
push
imul
xor
pop
pushf
into
std
fcomp
dec
mov
ror
dec
int
jae
adc
inc
les
stc
mov
cwde
mov
(bad)
addr16
retf
mov
outs
inc
adc
jbe
in
sub
sbb
stc
das
add
inc
lods
cmps
mov
add
call
xchg
adc
sbb
push
ss
sbb
iret
inc
mov
ins
sar
ss
icebp
mov
sbb
test
or
xchg
cmps
mov
iret
dec
inc
jle
cmp
movs
xchg
cld
or
popa
sub
mov
outs
mov
arpl
pop
dec
and
add
daa
mov
push
retf
xor
sub
cs
loop
gs
inc
jg
fdivr
cs
lds
adc
pop
sbb
dec
sahf
das
adc
je
out
cld
fwait
jl
loopne
push
cmps
pop
jo
imul
dec
and
leave
xchg
test
add
dec
cmp
cmp
mov
int
mov
inc
fucom
call
sub
fyl2xp1
xchg
inc
push
sub
cs
ins
aaa
icebp
(bad)
sti
ror
xchg
ja
stos
mov
rcl
loopne
cdq
rol
aaa
fs
cmp
out
push
mov
ins
mov
fisubr
or
les
clc
loop
sbb
call
jnp
out
lock
and
cmps
xchg
aaa
fwait
inc
xchg
js
fwait
xchg
push
xor
pop
push
mov
lock
dec
pop
jle
int3
inc
inc
xchg
stc
push
scas
push
mov
mov
mov
jl
pop
rcr
mov
add
mov
test
lea
sbb
stc
pushf
xor
push
fs
retf
fwait
stos
stc
int3
push
ins
mov
sbb
fld
mov
lods
pop
(bad)
test
aad
cmps
cmp
adc
mov
ror
jl
sbb
adc
adc
sbb
and
fdiv
xchg
push
cmp
sbb
cmp
jae
retf
test
out
or
fcom
mov
popf
cdq
jns
shr
inc
sbb
jb
xchg
outs
and
mov
nop
out
sub
in
mov
sub
adc
test
add
fwait
cdq
outs
or
cs
lahf
fistp
jg
xor
or
or
loopne
daa
and
call
cmp
xchg
sub
(bad)
fs
mov
int3
mov
push
xchg
adc
cmp
lock
les
es
push
adc
pop
(bad)
mov
xor
and
adc
adc
jecxz
fidiv
stos
dec
push
test
adc
pop
mov
dec
jae
push
inc
inc
jbe
pusha
les
fmul
loopne
cmp
xor
jle
inc
loope
or
jnp
sbb
jns
stos
xlat
adc
je
add
ins
popf
in
(bad)
xchg
(bad)
int3
lods
pushf
adc
push
inc
outs
movlps
leave
jne
mov
ret
fst
push
stc
jo
loop
xchg
mov
sbb
sar
ds
jb
fwait
call
xchg
ins
mov
idiv
mov
loope
xor
aad
mov
xchg
push
sub
icebp
jge
shl
pop
sub
xchg
retf
mov
test
mov
inc
cdq
jnp
into
(bad)
xor
sbb
pusha
ds
call
cmp
jb
and
pop
ret
in
push
mov
les
mov
(bad)
xor
scas
inc
and
mov
arpl
xor
or
cmps
pop
push
mov
push
std
jl
gs
and
aad
xchg
fimul
mov
ins
inc
inc
mov
mov
lds
xor
leave
imul
mov
add
mov
mov
inc
inc
aaa
push
or
xchg
rcl
fs
cmc
test
imul
and
sbb
pop
sub
(bad)
leave
push
cmps
loope
(bad)
sub
push
(bad)
cmp
lods
push
aad
ss
lods
cmc
dec
ss
add
loop
jle
and
idiv
lds
mov
out
xor
sbb
adc
mov
add
xor
adc
jmp
mov
add
add
xchg
clc
lahf
cmp
cmc
js
adc
cmps
sbb
push
lock
icebp
in
dec
and
sub
pop
imul
leave
arpl
aaa
jl
xor
sbb
xor
and
and
pop
xchg
mov
rcl
ret
push
ficomp
imul
cmps
aam
aam
adc
cs
scas
ror
push
fwait
leave
ret
push
push
sub
in
xor
test
out
sub
dec
rol
cli
xchg
mov
and
jmp
in
and
add
mov
push
(bad)
lea
push
imul
test
pop
jl
test
repnz
clc
mov
inc
or
in
retf
sbb
loopne
jns
fwait
into
push
es
rcr
inc
stc
pop
xor
fs
out
push
xchg
mov
retf
jecxz
xchg
retf
fild
ins
dec
jns
jle
sbb
dec
iret
aam
dec
add
arpl
loopne
clc
fwait
in
outs
jb
ret
and
cmp
xor
sbb
shl
rep
adc
ror
loop
sub
xor
div
ret
outs
mov
dec
enter
push
mov
sub
pop
into
adc
bound
(bad)
imul
cmp
xchg
pop
xor
pop
inc
add
movs
mov
dec
add
jle
lahf
dec
clc
(bad)
out
fld
test
add
add
cmps
sbb
add
or
inc
mov
jo
mov
mov
pop
adc
adc
mov
jne
cmps
fwait
mov
jb
or
lea
(bad)
lahf
cdq
in
add
inc
retf
ja
cmps
jno
aam
push
dec
fidiv
inc
xchg
sub
xor
lods
mov
push
xchg
in
inc
out
ja
adc
or
sub
add
shr
ret
enter
movs
xor
mov
jno
jle
xchg
ss
pop
inc
fs
pop
xor
sahf
sub
addr16
jp
in
sub
mov
dec
xchg
inc
xlat
ins
imul
adc
mov
pop
jno
bound
lds
inc
dec
xor
jg
mov
ins
movs
dec
inc
push
fwait
repnz
icebp
jl
lods
cmp
dec
pop
jmp
ja
inc
or
jae
jbe
add
xor
repnz
push
mov
fwait
and
lock
mov
das
mov
into
es
inc
xor
aad
jmp
inc
call
sar
xor
jl
icebp
or
ss
add
add
fsubr
inc
neg
outs
stc
mov
fdivr
lea
les
hlt
leave
stc
pusha
fcom
mov
push
inc
fcmovbe
data16
sbb
adc
jae
dec
and
push
(bad)
(bad)
mov
lea
pop
int3
mov
xor
test
mov
push
jg
sti
test
add
mov
mov
and
repz
retf
fdivr
cmp
mov
mov
xchg
push
outs
call
jae
std
out
cld
(bad)
mov
mov
inc
push
(bad)
add
or
(bad)
std
jbe
and
push
add
cmp
mov
mov
in
(bad)
and
pop
retf
(bad)
fst
sbb
int
mov
std
mov
fisttp
les
(bad)
pop
xchg
mov
aaa
dec
hlt
out
cli
inc
mov
dec
repz
jb
inc
mov
mov
sub
movs
scas
xor
test
pop
pop
out
hlt
adc
mov
enter
dec
xor
js
pop
movs
sub
aad
test
xor
sub
repnz
cmp
rol
xchg
test
push
leave
ds
daa
repnz
fucom
mov
dec
aad
hlt
fld
jne
xlat
xchg
jmp
(bad)
mov
jmp
cmc
push
sar
outs
loopne
push
pushf
inc
xchg
and
nop
shr
mov
jp
and
in
sub
movs
adc
sbb
lods
xor
outs
pop
int
mov
rol
repnz
mov
push
pop
les
mov
fisttp
aad
xchg
add
cmps
outs
in
out
pop
mov
scas
push
das
or
inc
xchg
push
aam
jg
xor
gs
repz
inc
mov
aam
inc
mov
cmp
mov
out
(bad)
in
or
mov
ret
scas
add
test
out
ins
mov
cmp
clc
popa
icebp
pushf
jbe
int
pop
into
stc
iret
in
xchg
call
sahf
inc
add
mov
push
pop
cmp
mov
and
in
scas
dec
ja
cmp
leave
jge
sbb
cmp
xchg
xchg
aaa
and
fdecstp
mov
inc
mov
sti
dec
fs
pop
(bad)
jmp
call
iret
scas
sbb
int
div
sbb
test
mov
inc
nop
cmps
out
imul
mov
into
mov
inc
loopne
xor
push
pushf
lds
push
add
push
dec
(bad)
add
aam
jns
sub
outs
dec
retf
outs
dec
mov
loope
js
bswap
pop
or
les
dec
add
fsub
cmp
cmp
jo
aaa
xor
ror
sub
push
ror
call
inc
adc
or
out
sbb
(bad)
aam
lock
jb
mov
repnz
retf
rcl
daa
mov
push
hlt
cs
mov
loopne
stos
xor
stc
jne
push
gs
or
jl
hlt
push
and
xor
ja
imul
idiv
pop
mov
int3
xor
repnz
loope
push
data16
ins
loope
mov
int
inc
outs
stos
sbb
mov
stos
jle
out
sbb
shl
int3
lods
ja
rcr
scas
pop
fisttp
lods
pop
cmps
xlat
les
pop
je
sub
aas
les
jmp
jg
rcr
mov
mov
inc
jbe
(bad)
mov
mov
movs
dec
movs
sub
or
nop
adc
xchg
mov
je
cmp
in
adc
mov
sbb
repz
ror
add
mov
pop
in
or
call
mov
jnp
ds
push
or
mov
jp
loopne
int3
mov
mov
je
mov
in
cmp
dec
and
push
xchg
ins
push
pop
dec
das
fs
sub
push
jno
enter
xchg
mov
pop
or
loope
pop
mov
pop
popf
shl
movs
lods
or
bound
fcmovne
(bad)
loop
jp
in
rcr
xchg
adc
imul
scas
in
sub
mov
push
(bad)
mov
movs
scas
xor
pop
mov
and
push
adc
jl
enter
into
mov
out
in
enter
mov
mov
in
daa
addr16
add
cmp
iret
hlt
ret
pop
cmp
or
inc
dec
(bad)
jg
call
jmp
lea
mov
in
and
inc
add
(bad)
jno
inc
xchg
mov
sub
mov
in
sbb
out
mov
push
fcmovnbe
test
cmp
scas
inc
mov
bound
test
mov
cdq
leave
mov
f2xm1
pop
int
rcr
dec
cmps
cmp
mov
das
inc
xchg
inc
test
repnz
cmp
dec
repnz
mov
bound
ins
scas
cdq
shl
or
sbb
pop
push
mov
adc
adc
rcl
sbb
rcr
rcl
adc
jo
bound
jne
jp
xchg
mov
xchg
ror
aas
sub
and
add
outs
retf
jne
int3
xor
sub
pop
sub
mov
cmc
mov
dec
in
add
das
nop
dec
dec
jnp
test
add
popf
jo
sub
mov
(bad)
out
mov
ja
jae
bound
pop
cmc
out
dec
sbb
bound
repnz
jae
push
rol
mov
loope
sub
push
cmp
inc
and
cmps
xlat
or
fidivr
out
jnp
fimul
pop
xchg
inc
mov
lock
jge
xchg
je
add
sub
lock
mov
icebp
das
jmp
mov
mov
repnz
mov
sar
push
out
or
adc
jge
pusha
aaa
jo
mov
test
sbb
push
pop
call
mov
mov
cmp
sbb
call
leave
int
and
lds
jae
fsubr
aam
mov
mul
xor
fsub
popa
pop
icebp
xor
movs
push
pop
int3
enter
(bad)
(bad)
jge
jae
loope
repnz
sar
enter
mov
sub
outs
sub
shr
jmp
cdq
or
sbb
sub
gs
pushf
cmc
jbe
sbb
fisub
shl
stos
pop
ret
or
push
xor
sbb
fnstenv
pop
dec
cs
cmp
push
jp
dec
adc
mov
mov
pop
add
and
adc
mov
lock
fistp
and
cmp
jmp
aam
jae
sti
retf
and
or
out
packuswb
mov
cwde
xchg
and
les
(bad)
aam
fsubr
xchg
sbb
aaa
sbb
sti
jl
(bad)
push
test
jecxz
inc
jge
mov
fsubr
ds
or
pop
mov
xchg
pusha
repnz
cs
mov
sbb
mov
push
sahf
out
stos
pop
int
push
loope
cdq
push
ficom
pusha
test
popa
(bad)
jbe
int3
(bad)
(bad)
jmp
das
xchg
sub
mov
retf
mov
mov
ja
pop
daa
rcl
fxch
popf
or
mov
in
or
or
sahf
inc
mov
jg
mov
sub
pushf
ja
lods
cmp
mov
and
sub
pop
sar
into
xor
mov
pop
icebp
xor
nop
rcr
in
mov
imul
sbb
stc
jge
shr
xchg
leave
retf
cdq
test
stos
dec
sbb
cli
fbld
scas
int
mov
push
dec
cs
jmp
mov
test
ror
mov
scas
push
loopne
movs
pop
sbb
outs
ret
sub
sar
cmp
jge
jo
pop
stos
inc
(bad)
aad
and
loop
gs
push
mov
fstp
out
std
jge
repz
imul
jg
and
clc
push
sbb
cs
mov
test
pop
clts
icebp
adc
stc
scas
sbb
push
mov
pop
sbb
int
cwde
jle
dec
fsub
fisttp
into
jge
mov
cli
sbb
xchg
nop
jge
test
pinsrw
add
jecxz
xor
inc
pop
sub
stos
lods
pusha
mov
and
pop
mov
add
shl
xchg
mov
push
and
mov
icebp
pop
ins
xchg
das
jg
cld
scas
pop
cmc
fcom
data16
stos
dec
dec
mov
das
(bad)
test
pop
or
les
xor
dec
leave
arpl
inc
mov
mov
cmp
mov
and
push
pusha
add
xchg
and
test
fs
pop
xchg
push
mov
cmp
loopne
push
arpl
and
mov
repnz
daa
jg
retf
add
ja
retf
push
js
sar
and
add
pop
mul
(bad)
and
push
out
lods
sub
fiadd
mov
call
lods
push
inc
popa
push
je
jmp
dec
pop
pop
jmp
xor
xchg
mov
subps
mov
or
mov
idiv
sub
ins
outs
lds
pop
pop
les
or
sbb
pushf
mov
sub
add
in
mov
sub
jmp
add
dec
push
arpl
mov
jns
pop
fcom
cmc
add
out
pop
or
pop
mov
xor
xlat
push
mov
adc
movs
or
sbb
(bad)
jmp
stc
mul
dec
add
lods
cdq
cld
xchg
pushf
pop
js
mov
clc
int
push
inc
fdiv
lods
ins
dec
pushf
push
out
dec
add
inc
push
nop
les
sub
jmp
mov
mov
mov
and
mov
push
sub
cmp
leave
rcr
dec
dec
scas
add
inc
jmp
adc
adc
xlat
push
push
aad
add
xor
(bad)
mov
shl
arpl
push
xor
dec
rcr
add
mov
xchg
(bad)
addr16
test
sub
outs
xchg
aas
retf
test
mov
mov
lahf
daa
push
or
dec
inc
shr
stos
mov
dec
fisubr
out
pop
mov
mov
call
and
clc
fstp
movs
adc
iret
mov
or
test
in
nop
sahf
sbb
ss
fs
sub
ficom
jmp
inc
shl
cdq
scas
mov
arpl
or
xchg
and
popa
stos
mov
pop
adc
sbb
xchg
sub
data16
adc
sub
cmp
jnp
jmp
sbb
movs
imul
mov
dec
ins
int
hlt
call
and
repnz
xchg
push
sbb
mov
lock
out
sahf
cmp
in
jmp
mov
mov
mov
nop
jp
jl
mov
cmp
sub
and
sbb
bound
xchg
lea
cs
cmps
pop
mov
pop
or
movs
and
jl
call
lods
mov
jle
pop
push
repnz
mov
xor
movs
cld
cmp
cmps
adc
mov
sub
pop
inc
fdiv
sar
popf
and
mov
retf
push
imul
push
xchg
test
mov
(bad)
fcom
cmp
mov
pusha
xchg
push
adc
jbe
mov
fistp
pop
push
cmp
sbb
fild
pop
jl
mov
fistp
and
rol
sub
retf
jae
and
dec
es
div
aam
cmps
div
leave
retf
cs
retf
aad
or
std
cmp
fwait
sbb
and
test
adc
scas
fisubr
push
jp
fcom
jno
ds
(bad)
retf
arpl
arpl
add
jecxz
fcomp
enter
cmp
rcl
jbe
xchg
mov
int
(bad)
jne
fiadd
cmp
adc
inc
add
das
cmp
xor
or
mov
fisttp
inc
iret
jg
hlt
shr
or
sub
mov
pop
add
adc
xchg
add
rol
shr
or
inc
in
rcr
fwait
repz
xor
push
jmp
fcom
pop
adc
shl
sar
mov
jg
(bad)
push
ss
sub
jno
pushf
mul
inc
out
adc
mov
mov
nop
sbb
pop
or
in
sub
imul
xlat
sbb
adc
aad
daa
push
push
xchg
mov
xlat
ficomp
jo
mov
and
scas
(bad)
or
adc
aaa
cwde
mov
and
dec
jmp
stos
enter
push
mov
mov
mov
sbb
xchg
lods
imul
pop
dec
xchg
scas
fist
pop
in
jo
push
(bad)
retf
sub
push
pop
pop
(bad)
cld
push
loope
loopne
(bad)
lock
sbb
sub
add
pop
fadd
sbb
popa
icebp
xor
xor
fstp
jne
push
xor
and
adc
sbb
push
add
push
imul
popa
sbb
std
jmp
pop
outs
movs
pop
stos
dec
dec
xchg
scas
sbb
adc
retf
pop
dec
inc
or
int
inc
jle
pop
mov
pop
or
test
push
sbb
aaa
sti
mov
(bad)
lods
(bad)
sahf
pop
adc
mov
test
add
imul
inc
inc
push
xchg
stc
and
in
js
int
adc
cmp
pusha
gs
xor
jns
xchg
inc
and
shl
fsubr
in
inc
enter
clc
mov
adc
fwait
push
in
pusha
lock
xchg
pop
push
in
pop
iret
loopne
jp
jbe
push
daa
mov
arpl
or
or
cs
imul
shr
or
inc
cld
scas
push
ret
std
xchg
mov
mov
adc
imul
(bad)
jns
js
mov
cmp
push
sub
push
scas
pop
mov
push
push
mov
mov
xchg
cmp
and
xor
push
bound
sbb
lahf
sub
or
adc
adc
bound
inc
pop
adc
jbe
adc
xor
xor
je
popf
lods
jo
dec
out
mov
push
mov
gs
fidiv
cmp
or
int3
in
dec
ficomp
fidivr
push
arpl
pop
scas
xchg
in
outs
jmp
push
loopne
push
in
repnz
cmps
call
add
lds
mov
pop
push
popf
outs
or
enter
push
mov
popf
or
xchg
mov
paddb
push
inc
in
sar
loop
mov
imul
cmp
imul
cmp
dec
xchg
xor
push
shr
(bad)
or
and
cdq
shl
(bad)
and
repnz
loop
mov
pop
mov
fwait
dec
xchg
mov
aaa
mov
jns
pop
pop
xor
and
push
mov
or
cwde
sbb
mov
push
adc
inc
mov
xchg
inc
mov
mov
dec
push
mov
es
fsub
cli
sub
adc
adc
jecxz
cmps
mov
js
loop
jecxz
retf
pop
add
test
mov
fdiv
mov
dec
and
inc
repnz
js
enter
sbb
in
pop
fdivr
xlat
push
pop
xor
icebp
bnd
aas
cmp
fimul
xor
mov
push
pop
sub
sub
repz
sub
loope
add
enter
pushf
and
cmp
retf
jmp
mov
js
cmps
out
adc
cmp
jecxz
scas
rol
imul
arpl
jle
shr
or
and
fwait
inc
mov
sti
gs
mov
cmp
(bad)
(bad)
xor
mov
nop
jmp
jae
xor
out
into
stos
dec
mov
mov
in
sbb
mov
and
xchg
outs
xor
fild
lods
dec
test
daa
xchg
dec
cld
(bad)
cmp
jb
jle
(bad)
gs
xchg
in
cmp
and
and
pushf
jo
push
and
pop
retf
sub
cmp
cmp
sbb
mov
in
cmp
cmp
(bad)
sbb
cmps
out
xchg
cmps
sub
add
movs
ins
aaa
std
sbb
mov
and
dec
sub
aas
push
adc
cmp
push
neg
and
push
ret
pop
call
mov
ret
jmp
push
jae
inc
or
outs
cdq
fcom
int3
or
or
mov
repnz
ss
adc
and
scas
mov
push
ins
mov
aaa
and
aam
mov
or
jge
test
pop
inc
sbb
sub
(bad)
sbb
or
pop
pminub
in
mov
push
cmp
enter
ins
es
mov
xor
popa
lock
push
mov
add
push
out
lahf
jmp
xor
imul
or
xor
pop
mov
xchg
lods
inc
lods
ja
and
add
fs
mov
mov
and
in
das
lods
mov
imul
dec
cmp
add
sti
cwde
cmovnp
push
jl
cmp
mov
cmp
or
ror
lods
xchg
inc
mov
ja
scas
jnp
cmp
sub
mov
inc
xchg
addr16
mov
pop
and
add
jno
cmc
aad
jns
xchg
push
lods
mov
mov
shl
xchg
out
ja
mov
push
mov
push
stos
(bad)
cwde
and
mov
hlt
sbb
mov
fsubr
inc
inc
push
jg
repz
mov
xlat
and
or
xchg
mov
test
(bad)
mov
shl
adc
inc
int3
fmul
mov
call
lea
nop
push
xor
in
out
cmp
movs
pop
jle
sti
xlat
mov
pop
adc
cmp
push
sahf
call
add
jno
in
xor
or
inc
out
push
shl
add
aam
cmp
mov
dec
jno
adc
inc
dec
cmps
inc
jle
fst
mov
ins
push
jmp
lock
xchg
ins
(bad)
xor
(bad)
das
xor
cmc
stc
and
fwait
pushf
sbb
pop
push
jge
into
lock
ds
ja
out
pop
add
mov
imul
jmp
mov
jecxz
push
jo
xor
(bad)
dec
sbb
fld
stc
int
aam
jnp
jg
fstp
sbb
rcr
mov
enter
ins
scas
and
pop
cmp
pop
stc
sar
cmp
push
ds
add
mov
iret
add
mov
adc
fnstsw
ins
sbb
xchg
mov
xchg
(bad)
cld
jmp
imul
xchg
pop
add
jbe
jle
rol
push
push
xchg
mov
cmp
jo
ds
outs
mov
daa
mov
sbb
push
popa
cmp
dec
jmp
outs
(bad)
dec
inc
jecxz
outs
and
jle
gs
mov
stos
pop
mov
pop
dec
jo
arpl
xchg
cmp
dec
xchg
lods
rcr
inc
ss
and
inc
inc
leave
push
push
pop
and
aaa
gs
jl
inc
xor
sar
ins
fidivr
enter
pop
pushf
neg
les
and
jnp
xchg
xchg
popa
inc
cmp
cwde
mov
xor
xchg
sub
(bad)
pusha
sbb
and
jo
or
inc
(bad)
and
ja
scas
pop
ins
in
ret
enter
sbb
imul
ins
mov
out
jmp
jbe
mov
comiss
inc
sti
(bad)
and
dec
fdivr
sub
or
jmp
pushf
sub
push
das
jno
xor
imul
stos
aad
push
sbb
sbb
push
mov
xchg
push
call
inc
imul
into
mov
cli
sti
std
movs
add
xchg
pushf
pop
jno
jg
xor
lods
cmp
fsubr
aas
in
push
mov
and
cli
imul
rol
je
inc
xchg
fs
xchg
outs
xchg
std
and
push
sbb
into
jmp
cld
fisttp
xchg
sbb
fisubr
js
xor
xlat
adc
xchg
popa
cli
fisub
leave
and
cmps
xor
movs
mov
leave
jns
aaa
outs
lods
pop
push
fist
push
(bad)
add
(bad)
cmps
dec
dec
rcr
lea
lock
add
icebp
xchg
imul
mov
stos
adc
push
and
sub
pusha
lods
pop
(bad)
ds
aaa
add
adc
xor
iret
add
clc
call
mov
dec
adc
cmp
jae
sahf
mov
fisttp
retf
adc
pusha
arpl
xchg
imul
pop
pop
cwde
sub
loop
cld
call
pop
imul
ret
push
push
pop
mov
xor
jmp
lds
stos
adc
mov
retf
rcr
(bad)
xchg
dec
inc
cmp
stos
popa
and
scas
sub
or
ret
mov
aas
cmc
add
test
xchg
popf
xchg
mov
sbb
xchg
adc
push
lea
cs
ret
cmp
xchg
jns
xor
loop
cmp
fbld
xchg
sti
xor
sbb
test
std
out
dec
mov
ficomp
pcmpeqw
mov
dec
shl
sbb
imul
scas
addr16
sbb
inc
add
mov
pop
mov
mov
js
jne
mov
lods
stc
movs
imul
and
outs
pop
adc
dec
push
cs
push
sbb
in
mov
xchg
pop
in
aas
int
stos
jb
xlat
(bad)
movs
test
outs
xchg
mov
jne
jecxz
push
xchg
dec
sub
xchg
fild
or
mov
ss
fisttp
lahf
lods
test
ins
dec
(bad)
lds
add
cmp
mov
loope
push
in
sub
jae
stc
cmps
int3
fwait
add
add
out
mov
(bad)
cmp
dec
adc
int3
cdq
jle
xchg
cmp
or
out
inc
jp
xlat
mov
int3
mov
inc
mov
std
inc
repz
cmp
aad
ja
lods
jge
std
cmc
jns
jecxz
out
movs
jo
je
xchg
scas
int3
retf
or
or
cmp
adc
fidiv
sub
pushf
shl
ins
inc
and
(bad)
sbb
mov
xchg
cmp
cli
das
xor
pop
out
fwait
out
ins
push
push
repz
addr16
inc
add
or
mov
lods
ins
movs
xchg
ret
mov
jno
lea
push
pop
sbb
aaa
dec
lahf
bound
inc
push
data16
(bad)
mov
mov
(bad)
outs
not
fcom
dec
or
dec
xor
sti
ins
dec
xor
in
out
adc
int
and
pop
into
or
cmc
or
dec
call
mov
adc
adc
jo
sub
xchg
xchg
and
mov
fbstp
pop
xlat
mov
out
in
iret
jecxz
ucomiss
pop
jmp
in
add
repz
sub
sub
xchg
add
(bad)
mov
sub
mov
(bad)
out
shl
sub
fsub
test
daa
repnz
sbb
push
xchg
std
inc
test
and
dec
shl
sub
adc
fild
dec
pop
push
fwait
adc
in
out
xor
sbb
in
fbstp
xchg
jl
sub
fxch
fdivr
push
scas
add
push
stc
test
mov
adc
jp
sbb
push
les
test
loop
dec
loop
xchg
(bad)
pop
inc
xchg
pop
in
ret
xchg
cwde
in
or
lahf
mov
test
popa
outs
sub
ja
dec
(bad)
push
ds
lods
scas
sub
mov
inc
(bad)
fwait
ds
cmp
das
ss
jg
ja
int3
mov
jmp
adc
leave
jnp
adc
fistp
repnz
mov
cmps
add
sub
sbb
cmc
push
mov
das
cmp
xchg
(bad)
cmp
cld
rcr
pop
xor
shl
push
sub
push
and
(bad)
inc
xor
jecxz
mov
cmp
jbe
sub
outs
popf
je
scas
cdq
push
and
xchg
cmc
push
mov
inc
xor
xor
(bad)
(bad)
retf
pop
pop
data16
xor
xchg
or
jmp
mov
xor
fdivr
mov
mov
cmp
hlt
ficom
repnz
inc
cmp
adc
sub
cli
xor
fnstenv
fistp
ret
shl
out
mov
xchg
mov
rcr
xor
in
push
fisubr
jl
ds
dec
inc
outs
rcl
cmp
neg
xchg
xchg
mov
sub
add
cmc
aas
les
fwait
sahf
jmp
xor
xchg
jge
rol
and
in
inc
and
dec
inc
mov
jle
cmp
out
add
dec
pop
je
push
adc
cmc
mov
icebp
pop
pusha
add
mov
aad
dec
repz
aam
pop
fidiv
mov
sbb
sti
pusha
or
add
ret
mov
rol
out
and
pop
push
movs
stc
ds
leave
xchg
neg
push
or
pop
xor
inc
nop
push
retf
test
in
push
sti
adc
or
pushf
pusha
mov
and
dec
inc
and
push
mov
lock
in
mov
test
sbb
xor
out
dec
pop
test
imul
je
mov
jne
fxch
cmp
pop
jmp
pop
xor
push
lea
ror
xor
dec
push
mov
(bad)
(bad)
lea
cmp
fucom
add
jl
inc
sub
and
mov
es
mov
mov
cmp
add
xchg
lock
xlat
test
test
inc
out
adc
xor
xchg
inc
jecxz
pushf
fbstp
dec
dec
popa
mov
jne
mov
or
in
jecxz
and
jmp
mov
xor
jne
cwde
out
addr16
add
mov
mov
jg
repz
loope
push
ret
outs
pop
inc
scas
xlat
pop
push
pop
nop
jmp
mov
repnz
in
sahf
mov
lahf
pusha
(bad)
pop
push
test
(bad)
cld
scas
pop
idiv
cli
repz
sub
rcl
lock
cmp
sbb
inc
dec
test
mov
mov
dec
fcom
ins
push
sbb
mov
or
xchg
scas
shr
mov
daa
mov
push
push
push
and
adc
loope
sub
aad
dec
push
(bad)
sbb
push
cmp
sbb
dec
dec
rcl
mov
pop
fsubr
movs
mov
clc
add
out
outs
sub
pop
jbe
sub
dec
test
jbe
mov
dec
sub
daa
movs
xchg
add
sub
std
sub
rol
iret
add
mov
mov
in
fwait
repnz
out
jle
pop
xlat
stc
fnstsw
leave
ja
xor
push
aaa
dec
sahf
sbb
ins
data16
and
sbb
jmp
inc
mov
icebp
inc
aad
in
es
sbb
dec
adc
scas
xchg
mov
ss
int
fsubr
(bad)
das
dec
in
sbb
cmc
int3
push
mov
xchg
lea
test
add
add
lea
add
adc
mov
sbb
pop
push
mov
fistp
mov
sti
icebp
cmp
es
xor
cli
pop
pop
inc
sub
dec
jbe
adc
cmp
scas
adc
cwde
and
dec
add
shl
pop
dec
cdq
cmps
sub
pusha
sbb
fcomp
mov
and
cmp
push
retf
and
adc
std
mul
sbb
ret
icebp
jno
jmp
xor
fisttp
xor
fs
xor
or
cmps
mov
rcr
rcr
cmp
iret
fcom
add
push
sbb
pop
jmp
aad
xor
js
dec
test
cmp
adc
and
aam
fcomp
sbb
xor
cmp
enter
js
adc
inc
inc
or
call
lods
loopne
pop
repnz
clc
inc
or
xchg
mov
lods
and
jno
xor
inc
cld
push
fisttp
pop
test
adc
xor
neg
jb
(bad)
sbb
shr
adc
fdivr
add
ins
push
dec
ja
mov
jmp
das
mov
imul
fisttp
push
or
and
gs
lods
jmp
fs
aad
lods
pop
push
scas
gs
retf
cmp
mov
fdivr
outs
lock
cmps
mov
jmp
inc
popf
mov
mov
inc
lock
sub
xor
shl
xchg
retf
and
retf
sub
dec
push
mov
cmps
lea
inc
dec
popa
ror
out
add
mov
imul
xchg
push
pop
dec
mov
lods
push
dec
sbb
inc
icebp
call
clc
mul
mov
fxch
add
les
mov
fild
adc
jmp
in
not
hlt
xchg
sbb
imul
cld
add
arpl
pop
cld
sbb
mov
lds
mov
fist
xlat
pop
and
fstp
xlat
sbb
cmps
xlat
into
xor
pop
mov
sub
cmp
in
pop
pop
out
pop
jbe
fidivr
ss
jnp
std
neg
xchg
and
mov
push
(bad)
mov
sti
jno
clc
cmc
jg
mov
jns
mov
rol
mov
popf
dec
adc
not
xor
ins
lahf
jb
and
stos
stc
jmp
mov
pop
cmc
enter
mov
add
mov
add
ins
test
add
imul
xchg
pop
and
mov
pop
in
mov
add
test
mov
fidivr
data16
scas
sub
(bad)
xor
call
imul
inc
jnp
and
dec
pop
movs
adc
ret
and
xor
loopne
setbe
inc
sar
das
sbb
dec
or
fstp
xchg
cmp
add
push
into
dec
mov
push
mov
iret
push
lods
inc
dec
iret
(bad)
jne
les
push
shl
rol
test
scas
push
add
sub
or
movs
mov
es
fsub
inc
fisub
xchg
rsm
dec
(bad)
lods
sub
sub
sbb
or
imul
or
loope
imul
aaa
sbb
jns
jnp
jg
or
aad
or
xchg
adc
fadd
pop
sbb
xlat
xor
int
retf
jnp
and
loope
mov
ins
test
scas
mov
clc
inc
cli
adc
xor
imul
dec
cmp
retf
fisub
mov
icebp
popa
pop
es
pop
(bad)
jo
pop
adc
jp
mov
sti
(bad)
lahf
pop
push
mov
xchg
(bad)
stos
mov
mov
sar
adc
pop
xchg
enter
mov
pop
loope
arpl
std
add
imul
mov
mov
dec
inc
aas
mov
enter
pop
ds
push
or
shl
sbb
outs
test
sub
xor
and
cmp
call
mov
stc
mov
xchg
call
mov
sub
adc
sbb
test
pop
cmp
push
ja
inc
nop
pop
imul
int
sbb
or
(bad)
jmp
dec
jnp
adc
(bad)
add
mov
jecxz
sbb
mov
daa
mov
rol
xchg
push
xor
(bad)
push
div
mov
and
dec
sub
push
jp
pop
mov
jle
out
mov
jns
ret
sub
arpl
addr16
push
(bad)
movs
dec
call
dec
mov
push
sub
cmps
push
push
and
or
push
ror
jns
xlat
cmp
loopne
daa
aas
minps
inc
shl
(bad)
sub
in
ret
fidiv
sbb
xor
sbb
dec
lods
les
shl
jp
jo
mov
js
rol
jecxz
movs
icebp
pusha
dec
push
stc
jae
xor
and
nop
clc
and
dec
std
inc
pop
daa
ins
xchg
jp
sub
bound
sub
aas
or
mov
pop
mov
fdiv
ins
fwait
rcl
lods
mov
(bad)
sbb
int
test
fadd
test
mov
mov
out
pop
dec
adc
rcl
stos
arpl
in
fist
mov
or
fnsave
std
(bad)
push
mov
xchg
retf
jns
je
je
or
rcr
fnclex
cmp
mov
or
cld
cld
(bad)
jge
mov
ret
(bad)
sbb
add
stos
xchg
push
imul
ins
addr16
(bad)
pop
idiv
aam
(bad)
push
jmp
pop
sti
and
dec
xchg
push
xor
dec
sub
mov
out
inc
(bad)
(bad)
(bad)
or
mov
sbb
pop
push
out
stos
int3
mov
pop
adc
mov
or
test
int3
ret
(bad)
popf
pusha
push
ss
pop
lea
jge
mov
xchg
cs
inc
and
jp
inc
cmp
dec
pop
pop
pop
mov
and
pop
aas
push
mov
mov
loope
pop
mov
dec
adc
sub
icebp
ins
aam
push
in
sub
(bad)
iret
xor
lea
add
test
sbb
push
mov
leave
pop
push
cmp
lds
fnsave
sub
jp
xlat
jge
mov
call
popf
cmp
movs
jnp
rol
in
popf
retf
mov
pop
pop
sbb
popa
icebp
pop
mov
in
cli
shl
dec
mov
(bad)
int3
iret
sub
in
ret
add
stc
cmps
dec
ds
sar
pushf
xchg
repnz
pop
test
xchg
and
mov
push
cmps
pushf
dec
adc
push
and
xchg
jne
push
push
out
or
adc
loopne
xor
daa
pop
sbb
mov
and
stos
mov
mov
iret
add
sahf
loopne
adc
jnp
or
lods
test
pop
(bad)
mov
stos
mov
std
adc
jecxz
aaa
xchg
pop
fisttp
push
(bad)
xchg
mov
sbb
repnz
lods
iret
push
xchg
dec
fistp
add
jmp
or
jl
push
pop
or
leave
push
mov
sbb
fs
inc
popa
inc
lea
sub
adc
adc
aad
shl
xchg
sub
add
mov
inc
xchg
mov
push
sub
cmps
fwait
xchg
inc
xor
mov
cdq
stos
inc
sti
push
stos
fs
mov
inc
iret
sbb
ins
sub
sub
in
in
xor
dec
pop
xor
xor
sub
outs
hlt
test
cmp
pop
xor
pop
adc
adc
or
repnz
stos
push
test
clc
dec
mov
sti
dec
nop
cmp
cmc
les
es
cdq
dec
sub
pushf
xor
inc
cmps
jge
mov
loopne
(bad)
push
push
inc
jne
jle
adc
sar
dec
jb
adc
mov
imul
jno
inc
adc
shl
xor
fild
pop
mov
sbb
lahf
mov
pop
(bad)
icebp
fs
aas
pop
outs
cmps
lahf
adc
ins
jae
pop
sub
imul
dec
sbb
push
xor
fisubr
mov
mov
cld
xor
clc
add
dec
mov
add
cld
lahf
push
add
and
pop
dec
push
xor
xor
inc
mov
gs
mov
sahf
(bad)
ins
cmp
push
xor
pop
ret
sar
and
ins
shl
inc
mov
xor
dec
and
dec
mov
aam
sub
fsub
inc
cdq
fadd
ins
outs
dec
sub
xor
push
jge
repz
das
jmp
(bad)
fcom
adc
out
enter
ins
loop
sub
sbb
cmp
push
jmp
xlat
or
lods
data16
sbb
adc
cwde
call
test
sub
xor
std
loop
ss
fld
push
sub
fsubrp
outs
lock
mov
pushf
imul
dec
adc
jmp
ret
scas
rcr
mov
(bad)
push
std
fcom
push
lds
shl
clc
add
mov
js
cwde
movs
sub
sti
js
mov
cdq
mov
cwde
push
ror
mov
dec
pop
call
clc
cmp
clc
cmp
push
rol
or
push
push
or
jne
jno
and
adc
mov
ficom
jecxz
es
xor
movs
and
fs
in
jmp
dec
or
call
mov
(bad)
movs
inc
inc
inc
jmp
xor
sub
or
or
xchg
jmp
mov
xchg
xchg
sti
jae
mul
sbb
out
add
cdq
dec
sub
sub
mov
mov
ss
ret
test
aam
mov
enter
xor
adc
adc
test
and
xor
jbe
aas
nop
mov
loope
pop
xchg
out
in
push
aad
xor
fild
mov
mov
cmp
sub
cmp
or
mov
or
js
repnz
pop
adc
shr
xchg
xor
cmp
jge
lods
jo
scas
xor
mov
or
xchg
hlt
gs
push
cmp
hlt
iretw
(bad)
loope
sub
lock
pop
xor
xor
pop
pushf
mov
mov
or
in
ss
push
shl
or
xchg
js
lods
adc
cmp
inc
leave
jl
mov
call
cmp
cwde
pop
or
test
pop
mov
jmp
add
pop
mov
adc
bound
jb
push
arpl
cmps
rcl
sbb
xor
ins
popa
stos
mov
xchg
or
out
cld
out
call
mov
into
jbe
imul
ins
xor
fwait
add
aam
fs
fdivr
mov
sub
dec
popa
xchg
sbb
xbegin
test
jne
aam
push
mov
xor
popa
pop
addr16
push
test
js
int3
inc
dec
mov
jmp
mov
xlat
std
and
les
inc
adc
call
sub
xor
fbstp
dec
mov
and
add
pop
icebp
inc
dec
sub
xchg
dec
jmp
pop
mov
inc
xchg
call
test
ss
add
std
fsub
add
lahf
add
sar
movs
dec
js
cmp
sbb
mov
call
cs
(bad)
adc
mov
mov
mov
jo
inc
ins
sbb
jmp
in
(bad)
retf
or
pop
cmp
cdq
dec
mov
xchg
add
xchg
mov
sbb
in
xchg
mov
(bad)
stc
call
xchg
int3
xor
(bad)
mov
jl
sti
jmp
pop
in
jae
shl
push
or
div
mov
xor
inc
aas
(bad)
jmp
pop
hlt
enter
push
push
adc
sub
mov
cmps
movs
inc
out
adc
sahf
ss
push
add
ds
mov
pop
outs
dec
xchg
fstp
or
repz
sub
test
inc
or
xor
xchg
fwait
mov
sbb
btr
call
lock
mov
xchg
and
or
pop
lds
retf
cmp
sbb
aad
mov
repnz
and
cs
sti
mov
inc
pop
xchg
jnp
and
jle
cmc
xor
imul
dec
or
add
add
adc
jns
jp
jae
jle
sbb
stc
lods
outs
outs
inc
mov
outs
xchg
inc
jae
xchg
fmul
xor
and
mov
inc
pop
mov
in
hlt
dec
imul
xchg
push
mov
fwait
mov
stos
jp
cmp
push
movs
lock
bound
enter
stc
call
mov
rcl
sbb
mov
popa
xlat
retf
rol
xor
sub
mov
and
hlt
pop
jo
ins
mov
add
pop
call
jo
rcl
push
popa
mov
pop
mov
fimul
cmp
data16
repnz
mov
jg
mov
das
pop
adc
cmp
repz
fistp
dec
loope
in
stc
lahf
sub
neg
dec
iret
and
sub
and
xor
mov
mov
cli
shr
repz
sub
xor
(bad)
xlat
inc
add
in
ds
mov
xchg
dec
dec
add
test
mov
jo
push
pop
inc
ja
jne
repz
loope
rcr
fwait
inc
sub
dec
ds
arpl
std
sbb
or
cs
xlat
js
retf
adc
sbb
pop
ins
adc
inc
ins
in
or
cmp
adc
sbb
in
repz
dec
sub
add
mov
mov
mov
das
inc
stc
jmp
je
int
ins
test
sub
leave
cmc
(bad)
aaa
neg
xchg
cwde
mov
nop
mov
xchg
fbstp
inc
test
jbe
pusha
hlt
out
retf
and
sar
dec
inc
mov
xor
mov
inc
std
cdq
ds
out
int3
jge
cs
fcom
cmc
cmps
and
jb
adc
jae
dec
mov
fisttp
je
movs
test
xor
lock
xor
rcl
cmps
lds
xchg
sub
push
popf
or
(bad)
and
dec
push
popa
ror
adc
inc
aas
lds
xchg
mov
lods
lea
sub
xchg
push
test
popf
in
jo
stos
data16
mov
ja
test
div
adc
cmp
xchg
sub
js
and
xor
test
mov
adc
jo
or
in
retf
push
push
inc
cmc
mov
jnp
test
cmp
add
ins
gs
stc
shl
movs
popf
into
cdq
fist
fimul
je
inc
shr
aam
movs
jmp
mov
xchg
add
jbe
stos
jno
inc
mov
jle
xor
dec
push
movs
xchg
(bad)
div
aad
test
adc
jno
(bad)
shl
stos
mov
sbb
sub
and
in
aaa
mov
ficomp
jge
ja
jb
int3
jg
jae
pop
adc
lock
test
icebp
iret
inc
popa
jb
or
cmp
add
rcr
fwait
shl
dec
xor
inc
cmp
loope
inc
loope
jge
xor
sub
jmp
test
push
cld
xlat
imul
aaa
inc
push
outs
add
xor
sub
push
inc
and
dec
xor
cmp
sbb
clc
lods
std
dec
cli
lods
out
add
xchg
aaa
test
push
lahf
jo
inc
push
popf
push
fidivr
and
loop
and
mov
clc
test
sub
lahf
sbb
xor
shl
xor
jecxz
les
cmp
(bad)
pop
in
inc
push
cmp
jle
mov
mov
push
xor
rcl
jmp
inc
add
getsec
jle
lds
test
cmp
xor
rcr
into
and
mov
dec
shr
pop
cmc
jp
retf
dec
jae
sbb
cmp
cmps
mov
and
gs
pushf
arpl
repz
cs
xlat
leave
daa
adc
xlat
aam
cli
dec
neg
call
adc
inc
jb
loopne
pop
leave
jbe
fiadd
imul
cmps
in
imul
or
sbb
loop
and
push
cmp
mov
jp
sahf
cwde
adc
icebp
or
retf
add
jnp
call
jmp
xlat
in
adc
mov
loop
loope
stos
rcl
and
movs
adc
addr16
outs
jae
pushf
nop
js
imul
mov
test
fsub
bswap
inc
fst
bound
retf
aad
das
(bad)
dec
mov
test
and
and
jle
loopne
lock
mov
shl
(bad)
mov
jbe
mov
jne
jl
out
(bad)
imul
mov
mov
cmps
in
inc
repz
or
out
push
les
xchg
cli
int
ins
jb
popa
fs
mov
movs
out
sub
leave
lock
sub
and
addr16
pop
jmp
pop
sar
outs
lea
fnsave
outs
shl
stc
and
ins
lods
popf
int
movs
xchg
mov
pop
stos
out
imul
push
mov
jge
and
sti
pop
lods
dec
mov
sub
mov
push
(bad)
pop
inc
cmps
jle
or
aad
das
lods
mov
pop
hlt
popf
adc
cmp
mov
dec
xor
in
dec
xlat
cmps
cmp
popa
das
add
sbb
cmp
mov
fldcw
lock
in
popa
aad
mov
repnz
adc
dec
add
pop
or
movs
ret
int
retf
(bad)
repz
dec
and
xchg
mov
loopne
add
(bad)
push
pop
sbb
stc
outs
movs
dec
shr
scas
fsubr
add
xchg
add
std
shr
sti
shr
popf
sbb
sar
jge
out
dec
xchg
xchg
in
pop
leave
stc
movs
sbb
mov
fistp
mov
cmp
mov
and
aaa
leave
dec
xchg
inc
repnz
mov
sbb
mov
mov
mov
xlat
test
and
mov
cmps
push
sub
cmp
dec
repz
jnp
bound
(bad)
fadd
mov
ds
int
outs
test
or
ins
xchg
out
outs
mov
and
subps
push
add
cmps
ins
sub
pop
jno
cmp
retf
test
sbb
ret
push
mov
les
retf
add
jne
add
repz
mov
and
or
stos
leave
pop
sub
out
adc
(bad)
pop
iret
loope
stos
sbb
scas
pop
mov
loop
stos
fwait
inc
mov
mov
jne
lods
int3
loop
scas
sub
mov
icebp
mov
mov
mov
into
mov
mov
(bad)
mov
mov
cwde
(bad)
fadd
fwait
addr16
mov
sbb
sub
xor
repz
xor
pop
mov
or
repz
nop
adc
addr16
movs
xor
pop
jns
and
arpl
sub
sub
mov
sbb
inc
xchg
ret
inc
lods
xchg
xor
es
jecxz
(bad)
jmp
mov
loop
idiv
sub
pop
sub
xchg
sahf
inc
mov
dec
push
gs
test
les
in
pop
mov
stos
xchg
aaa
xor
adc
add
mov
(bad)
xchg
out
push
pop
out
sbb
and
(bad)
cli
cwde
jle
mov
test
bound
in
into
data16
test
test
fsubp
lea
ror
xchg
imul
dec
lock
push
gs
sar
or
inc
mov
pop
xchg
or
(bad)
je
aas
mov
mov
cli
mov
aaa
pusha
loope
cmp
push
push
movs
int
iret
adc
lock
shl
sbb
cld
mov
std
mov
imul
cmp
cmps
add
outs
push
ret
add
xchg
stos
(bad)
cmp
push
aad
hlt
mov
mov
std
adc
dec
hlt
cmp
sbb
clc
cld
les
arpl
sub
loop
les
(bad)
das
mov
rcl
das
jg
daa
mov
pushf
xchg
mov
add
pop
stos
(bad)
sar
xchg
stos
fdivr
mov
sub
icebp
outs
stos
int3
and
lea
arpl
jl
jmp
jo
stos
gs
pop
retf
stos
dec
in
cmp
sbb
ins
out
retf
pop
dec
(bad)
push
mov
inc
cdq
int3
xchg
xchg
es
mov
cmp
mov
push
arpl
ss
ins
mov
call
push
mov
(bad)
popf
jbe
sub
in
inc
cmc
mov
pushf
movs
dec
adc
or
repz
or
rcl
cs
int
pop
dec
fwait
jp
test
loopne
push
xor
sbb
inc
dec
mov
ret
sahf
or
or
pop
push
pushf
jge
shr
add
add
out
iret
sbb
mov
mov
jmp
add
cmp
fistp
lahf
adc
dec
aad
add
aad
fcom
xlat
sbb
stos
out
movs
sbb
xchg
mov
or
pop
jo
dec
jmp
sbb
push
add
sbb
jl
dec
xor
cmp
sbb
shl
mov
mov
mov
jge
mov
cmps
into
sar
cmp
mov
xor
clc
mov
cmp
retf
sbb
sar
cmps
rcr
push
cs
mov
rcr
(bad)
addr16
mov
movs
sahf
adc
fidiv
js
and
fidiv
sbb
inc
sub
dec
dec
sbb
jle
in
inc
jb
add
pop
or
in
lds
xchg
ds
jl
ss
les
fcom
jmp
enter
push
addr16
daa
cmc
xor
mov
retf
sbb
jmp
push
call
push
adc
pusha
test
inc
(bad)
loop
and
std
cmc
ret
pop
cmc
mov
inc
cmp
mov
xlat
push
pop
push
or
call
pop
pop
push
pop
push
xor
les
call
repnz
sbb
in
push
mov
popa
outs
mov
adc
test
lock
sbb
test
inc
mov
push
pop
pop
fwait
lods
xor
jecxz
push
lods
add
push
or
test
mov
cmp
icebp
pop
mov
adc
ja
sub
cli
sbb
ja
mov
out
push
int
loopne
rcr
dec
mov
retf
xchg
sub
push
mov
cmp
sub
les
ret
pop
jg
loop
cwde
arpl
push
xor
mov
pop
mov
xchg
inc
ror
push
fcom
(bad)
add
shr
aas
pop
in
test
rol
jl
mov
jmp
or
(bad)
(bad)
fs
add
or
fcmovne
imul
mov
shr
shr
out
loope
push
in
call
mov
pop
test
cmps
enter
cmc
popa
cmp
jecxz
and
xor
lods
movs
adc
add
div
loop
pop
in
lods
adc
inc
mov
aas
push
imul
ffree
stos
xor
inc
and
cmp
adc
dec
jmp
rol
and
and
mov
call
in
mov
adc
aaa
sub
cmp
adc
mov
push
jg
pop
test
adc
sti
push
nop
dec
inc
mov
mov
aas
inc
mov
ja
inc
je
sbb
in
push
out
sub
inc
test
pop
lock
das
mov
out
daa
push
bound
int
stos
mov
push
mov
fnsave
popf
mov
rcl
or
rcl
retf
xlat
repz
ins
jbe
jge
popa
fistp
pop
dec
cmp
mov
pop
mov
call
pop
js
mov
adc
ja
stc
cmps
jecxz
xchg
push
xchg
movs
in
inc
push
xchg
dec
sar
int
adc
inc
mov
fwait
pop
sbb
mov
and
ror
fucomip
stc
cwde
dec
cmp
inc
repnz
sub
es
fst
mov
xor
and
fmul
mov
adc
ins
arpl
pop
adc
xor
sbb
push
inc
dec
add
call
jbe
ficom
push
popa
sub
mov
xor
pop
cmps
and
nop
xor
adc
mov
popa
inc
push
adc
in
xor
(bad)
out
mov
dec
call
scas
int3
gs
sbb
popa
popa
add
mov
scas
xor
sti
dec
sar
adc
cmps
fidivr
hlt
push
test
mov
mov
adc
(bad)
outs
pop
movs
scas
mov
fs
sbb
push
and
ins
test
js
(bad)
clc
lods
add
scas
xlat
jo
nop
es
iret
ds
inc
jp
or
jb
sahf
xchg
xor
xchg
mov
dec
sbb
pushw
mov
call
jle
pop
neg
pop
sub
cwde
cmp
mov
leave
pop
dec
cmc
mov
xchg
xor
mov
(bad)
fwait
or
cmp
xor
xor
mov
cmps
mov
jns
ja
aas
dec
or
push
cwde
pop
int3
fdiv
jno
add
sbb
jmp
inc
adc
ror
sub
inc
cmp
add
cld
lods
mov
test
sub
xor
mov
sub
push
cwde
les
cmp
out
aad
lahf
out
inc
dec
cld
inc
(bad)
sub
cmp
add
push
push
std
dec
inc
clc
dec
sbb
jl
sbb
rcl
stos
scas
mov
sahf
fwait
add
inc
rol
stc
shl
xlat
scas
cmp
adc
inc
adc
cwde
pushf
push
cmp
call
xlat
mov
and
(bad)
push
inc
in
cmps
jg
test
pop
test
pop
loop
pop
push
mov
fwait
stc
mov
mov
push
repz
(bad)
inc
lds
bound
or
int3
xchg
loopne
cli
fcmove
das
xchg
fsubr
mov
push
iret
sbb
ss
cmp
(bad)
jns
mov
(bad)
sub
or
(bad)
pop
movs
push
out
retf
pop
xor
add
mov
mov
sahf
pop
add
lahf
pop
and
mov
push
repnz
sbb
pop
cmps
push
out
sub
mov
scas
xchg
sbb
push
dec
in
dec
push
push
int3
bound
sub
lea
jl
cdq
and
daa
xchg
sub
lock
je
ds
scas
fcom
sub
dec
test
mov
adc
mov
mov
xchg
and
add
jecxz
jb
mov
fcomi
sub
pop
sub
inc
adc
xor
cmc
mov
imul
test
popa
adc
loop
push
xchg
add
aaa
pop
sar
mov
push
mov
xchg
adc
pop
xor
jb
(bad)
aaa
jge
push
push
out
xchg
mov
je
push
popf
lods
out
jae
push
sub
(bad)
sbb
adc
movs
mov
push
outs
jno
dec
or
jb
sti
je
mov
xchg
adc
adc
sub
push
repnz
pop
mov
fcomi
sub
mov
cwde
fnsave
push
nop
sub
and
cs
push
xor
pop
js
mov
in
push
mov
retf
mov
add
mov
xchg
pusha
and
xor
xchg
inc
psrad
push
inc
push
xchg
dec
push
lahf
push
ror
dec
sbb
pop
addr16
and
test
ret
pop
mov
js
and
cmps
retf
cmc
in
push
or
mov
out
out
std
idiv
adc
adc
lods
out
pcmpgtb
mov
retf
ins
pop
shr
fild
or
jno
arpl
sbb
xlat
dec
int
(bad)
jae
jae
sbb
sub
les
cmp
out
int3
sub
fdivr
push
stos
xlat
fnstenv
ins
xchg
xchg
push
and
jle
jb
call
sbb
mov
cmp
ins
(bad)
aam
mov
fstp
mov
mov
xchg
fcomi
pop
or
dec
jmp
sti
outs
add
das
ror
gs
dec
sub
out
push
inc
add
sbb
mov
jno
inc
test
cwde
and
adc
xchg
cmp
add
cdq
jmp
lahf
and
cli
mov
jl
pop
rcr
(bad)
fcom
(bad)
bound
pop
sub
(bad)
cdq
cmp
pop
sub
pop
(bad)
cwde
and
fdivrp
fstp
imul
std
or
test
movs
pop
xor
leave
arpl
mov
mov
call
push
inc
lock
rol
push
(bad)
jne
push
inc
repz
xor
(bad)
(bad)
pop
inc
mov
ror
and
xchg
test
sbb
sub
mov
popf
stos
mov
push
mov
dec
mov
les
sar
mov
outs
and
adc
lods
out
or
ret
mov
sbb
adc
arpl
mov
sub
push
xlat
sub
add
and
retf
inc
xchg
fldcw
push
dec
inc
adc
nop
ja
movs
sar
and
or
cmc
sbb
into
ror
pop
int3
ins
xchg
inc
sbb
xor
and
mov
pop
cmp
sub
pop
sub
sub
mov
call
outs
and
imul
gs
mov
dec
mov
and
jns
lods
popa
mov
xor
sub
cmp
jae
stos
sub
bound
jg
push
ret
je
outs
mov
xor
jmp
fild
pop
lods
sub
add
das
pop
clc
clc
fdivp
push
fdiv
sub
loopne
mov
pop
push
xchg
repz
inc
inc
add
inc
inc
shr
in
or
cmp
push
lock
stc
sbb
add
sbb
xor
and
repz
imul
scas
cmp
mov
(bad)
push
jmp
or
arpl
rcl
jmp
pop
ficom
jne
cmp
mov
cmps
out
inc
cmp
jp
sub
sbb
add
inc
pop
leave
xchg
popa
ret
cmp
mov
mov
out
sub
into
mov
push
lock
fadd
lods
push
fisttp
scas
jmp
inc
xor
mov
cli
sbb
pop
stos
aam
gs
adc
cmp
adc
aad
lds
push
add
fwait
bound
sahf
daa
rcl
repz
adc
inc
dec
cmp
mov
adc
add
int3
mov
lahf
aas
jo
(bad)
push
scas
mov
xchg
mov
mov
into
int
sub
dec
bound
ror
inc
stos
psraw
popf
push
fstp
mul
es
sbb
add
push
in
iret
sub
call
mov
lods
imul
inc
sub
adc
xchg
arpl
xchg
and
jle
jmp
into
addr16
xor
dec
push
add
mov
xor
fcomp
(bad)
fisubr
(bad)
ror
(bad)
push
fst
ds
repnz
pop
add
test
cmp
cmp
mov
fdiv
test
out
into
xchg
rcr
mov
pop
movs
daa
arpl
mov
les
(bad)
in
mov
mov
sahf
sti
xchg
mov
ret
pushf
iret
pop
scas
out
mov
xlat
jecxz
aas
xor
sub
and
hlt
enter
cmp
xlat
add
jmp
pop
(bad)
jp
test
adc
sbb
std
adc
loopne
stos
adc
dec
cli
mov
stos
or
adc
jae
adc
jne
jne
gs
das
push
popf
sar
sbb
and
inc
movs
enter
sub
stos
pop
les
pop
dec
or
stc
enter
clc
ret
xor
dec
out
push
push
push
sub
lods
xor
rcl
jecxz
fistp
test
mov
sti
test
leave
mov
sub
push
psrlq
inc
jnp
cwde
jno
lahf
fldcw
shl
adc
add
cdq
pop
cmp
mov
repz
add
fwait
xchg
call
add
retf
jecxz
mov
push
mov
pop
dec
add
mov
push
adc
push
ins
jb
jo
scas
(bad)
iret
movs
push
int
sub
pop
push
lock
(bad)
movs
xor
or
sub
lods
ret
push
mov
ds
pop
out
xor
pushf
push
or
mov
or
pop
stc
xchg
inc
hlt
add
pop
or
mov
dec
push
xor
mov
pop
int
ja
pop
inc
rcl
lds
mov
sbb
retf
xor
das
xchg
test
pop
adc
(bad)
sbb
in
inc
cld
add
cmps
dec
push
dec
jl
and
vsqrtpd
dec
cmp
inc
je
xchg
adc
xor
lahf
push
push
adc
mov
push
jecxz
add
xchg
push
xor
in
mov
pop
push
inc
jp
dec
mov
pushf
sahf
xor
inc
xlat
or
xor
lds
xor
test
loope
inc
stos
ds
mov
sbb
int
fiadd
cld
add
mov
fldcw
adc
sbb
fidivr
xor
jge
aad
repz
sbb
push
pusha
ja
pop
jb
adc
dec
fs
xor
mov
add
inc
cmp
call
mov
data16
mov
mov
xor
pop
pop
adc
jbe
retf
mov
mov
jae
mov
ins
jg
xchg
fs
(bad)
add
mov
push
add
dec
sub
cmp
push
push
repnz
adc
adc
and
cmp
xchg
loop
mov
cmc
sbb
xor
ins
imul
addr16
inc
inc
call
hlt
jns
adc
add
ret
xor
jg
fdiv
hlt
inc
jle
jbe
sub
jb
xchg
movs
adc
mov
sbb
and
iret
aad
stc
or
retf
pop
cwde
pop
add
pop
aam
jg
lahf
cmp
out
sbb
jecxz
mov
nop
mov
cmp
call
loope
xor
mov
push
inc
enter
mov
sub
ins
and
cmc
mov
sub
mov
das
jbe
(bad)
or
adc
(bad)
fidiv
fdiv
mov
ret
js
fwait
lock
sub
xchg
cmp
and
addr16
mov
out
sub
cmp
out
inc
cwde
adc
mov
pop
mov
lods
xchg
xchg
dec
or
inc
out
loope
int3
fcomi
fadd
imul
retf
jg
push
loop
push
cli
jg
adc
std
adc
(bad)
and
push
movs
lds
sar
loopne
jg
jge
neg
jecxz
ftst
es
shl
mov
sbb
xchg
in
and
into
retf
enter
movs
in
pop
imul
cmp
sar
and
sar
push
adc
es
iret
jns
push
pop
jno
push
adc
(bad)
sti
(bad)
xor
mov
into
je
pop
push
mov
mov
xlat
in
in
push
push
and
cmc
inc
mov
mov
fwait
loop
xor
add
in
xchg
xor
test
add
or
add
sti
inc
dec
sub
sub
mov
mov
mov
aad
xor
jp
cmp
iret
and
mov
dec
js
mov
iret
mov
in
pushf
push
jae
call
or
div
and
jle
sbb
(bad)
xor
or
xchg
sbb
bound
xor
dec
addr16
fwait
pushf
pop
imul
and
mov
jnp
sub
sti
cs
jo
outs
out
rcr
imul
dec
pusha
add
ret
sub
push
test
je
sub
shl
idiv
shl
scas
out
sbb
dec
pop
jmp
pop
ds
in
movs
mov
mov
daa
cmps
ins
push
cmp
fst
push
mov
cmp
ret
mov
jmp
dec
mov
xor
push
dec
dec
pop
cmp
int
push
sub
xchg
sub
add
jno
mov
or
mov
retf
cmp
stc
into
addr16
lods
fdivrp
cmp
pop
mov
in
cwde
xchg
mov
loopne
jp
xchg
cdq
imul
cmp
lods
dec
add
out
mov
adc
out
mov
push
repz
pop
popf
xchg
hlt
into
add
add
xlat
shl
pop
fidivr
jbe
dec
sub
dec
sub
push
push
xchg
mov
jmp
sbb
adc
jp
jnp
mov
mov
fisub
test
adc
in
and
in
and
jl
jo
test
mov
out
sub
pop
jns
xlat
mov
dec
es
es
sub
or
in
jl
and
mov
mov
int
cdq
es
sahf
stc
pop
stos
inc
ret
inc
stos
mov
imul
push
mov
outs
idiv
push
adc
add
push
es
movs
add
dec
jb
je
iret
fs
mov
aaa
out
mov
jns
mov
cs
cmps
loope
inc
(bad)
out
or
push
jle
ds
push
push
call
xchg
fcomp
push
fwait
add
mov
popa
push
pop
dec
mov
out
retf
(bad)
popf
ror
or
sub
adc
sub
cmp
test
arpl
xor
sub
popf
xchg
cmps
and
div
push
addr16
xchg
jecxz
pop
mov
ss
mov
ins
repz
fbld
fidivr
mov
adc
jle
fsubr
loop
adc
imul
xchg
ins
jno
loope
mov
xor
xor
inc
push
pushf
and
(bad)
sub
outs
test
retf
sub
and
sahf
out
dec
sti
jle
mov
(bad)
sbb
add
jle
movs
add
pop
dec
(bad)
mov
enter
or
lahf
adc
cmp
and
movs
aad
jnp
mov
jb
ss
xor
hlt
xchg
int
add
inc
jecxz
ds
shr
test
cli
xor
dec
mov
fs
cwde
leave
mov
shr
xchg
sar
mov
aad
adc
adc
sub
pop
shl
enter
test
int3
push
(bad)
pop
or
sbb
mov
mov
jmp
or
add
cli
xor
int3
mov
inc
sub
mov
push
ret
add
sub
cmp
mov
add
das
stos
cmp
sbb
pop
pop
pusha
mov
mov
bound
xor
mov
inc
(bad)
and
out
push
xor
retf
aas
dec
lds
lahf
sbb
out
sub
movs
aam
jbe
jno
scas
mov
movs
test
mov
ss
lock
retf
repnz
mov
(bad)
jmp
icebp
(bad)
bound
jbe
outs
lods
or
sti
add
mov
push
js
fwait
popf
dec
enter
sbb
fnstcw
aas
stos
imul
out
fistp
sbb
cmp
enter
les
test
mov
jle
and
cmc
sbb
jbe
test
jne
int3
retf
(bad)
cmps
retf
jbe
jbe
das
push
out
xchg
dec
cmp
dec
bound
cmc
adc
jle
daa
sbb
lods
mov
xchg
adc
and
stos
and
loope
push
in
outs
fiadd
fdivr
push
push
pop
div
or
jg
pop
nop
xchg
xor
mov
pushf
je
push
push
inc
out
xor
jp
mov
ss
dec
sbb
out
cmp
adc
fistp
push
cmp
jae
push
gs
push
fwait
out
movs
mov
shr
cmp
sbb
mov
sbb
xchg
cld
lahf
faddp
push
out
fadd
mov
loopne
cmc
nop
push
dec
mov
mov
sar
inc
sbb
and
movs
lahf
cmp
ja
aaa
pop
and
aas
lea
scas
aas
pop
or
mov
les
add
in
and
mov
mov
pushf
cmp
push
push
cld
sub
push
jb
pop
or
aaa
call
outs
fmul
and
aas
ins
mov
and
mov
push
cmps
(bad)
dec
sub
mov
push
test
aam
jnp
sbb
jbe
movs
xchg
xchg
dec
popa
add
das
retf
ins
aaa
(bad)
xchg
mov
dec
leave
stc
or
(bad)
cmps
ret
inc
and
or
push
push
and
mov
mov
scas
cmp
mov
jmp
lods
mov
adc
leave
jne
xor
es
scas
pmullw
ins
cpuid
into
mov
loop
xchg
dec
into
into
dec
sub
ret
pop
xor
stc
out
pop
retf
sti
mov
add
mov
mov
sbb
int
cdq
call
pop
mov
rcl
sub
sub
sub
pop
mov
retf
pop
jmp
jge
and
test
xor
dec
sub
inc
scas
cs
fisubr
mov
popf
sub
jecxz
jo
push
dec
push
in
mov
jmp
xchg
enter
fsub
pop
clc
shr
stc
xchg
adc
es
sar
scas
lock
dec
ja
mov
sub
jecxz
bound
push
push
mov
sub
mov
loopne
ss
ds
fwait
dec
int
cmp
or
ins
push
and
and
in
cmp
lds
cmp
push
mov
xor
outs
mov
jne
cmp
cwde
cmp
cmc
or
mov
repz
jno
cmp
mov
push
pop
add
fistp
mov
test
adc
jge
popa
fsubr
jmp
ss
push
mov
pushf
and
jp
in
shr
mov
popf
fwait
xchg
jae
dec
mov
fst
call
aad
ins
popa
cmc
mov
lahf
inc
mov
mov
sbb
push
jmp
scas
add
pop
fwait
jns
rol
mov
clc
sub
cmp
test
(bad)
into
push
jle
mov
repz
dec
xchg
retf
sub
in
push
mov
pop
add
sbb
mov
push
sbb
in
nop
add
xchg
aas
mov
xlat
sub
add
xchg
out
loopne
dec
in
or
fstp
mov
and
or
sbb
mov
and
std
xchg
mov
cmp
nop
cmp
jno
int3
fabs
mov
jge
cmp
int3
rcr
jae
les
mov
inc
adc
sub
xor
mov
cwde
and
pop
cmp
in
fwait
lea
mov
movs
call
in
cmp
inc
jle
xchg
loope
fwait
jl
mov
jle
sub
stos
jo
repz
fidivr
mov
stos
sub
pop
loopne
mov
xchg
jno
imul
pop
into
cwde
mov
push
stc
mov
stc
mov
pop
mov
sbb
js
pop
sbb
(bad)
inc
imul
imul
inc
out
pop
repnz
cmp
out
mov
mov
stos
les
pop
cmc
shr
test
outs
repz
out
mov
jne
cmp
jnp
and
fistp
jge
jmp
aam
push
fcomp
push
xor
mov
push
jns
lods
add
pop
fstp
fucomi
inc
xchg
mov
out
mov
mov
mov
pop
mov
(bad)
enter
or
xor
(bad)
sahf
pusha
(bad)
fcomp
sub
sar
jmp
fwait
sbb
es
sbb
dec
mov
sub
pop
jae
mov
mov
inc
xchg
mov
pop
in
hlt
cmp
push
gs
retf
and
out
cmp
add
clc
mov
sbb
sahf
outs
ja
cli
fadd
pop
repz
add
add
cld
pop
push
clc
jnp
loop
mov
add
outs
mov
push
je
inc
adc
fwait
outs
nop
xchg
int3
cmc
and
outs
ret
mov
mov
call
jbe
cmc
and
xchg
and
fld
inc
mov
(bad)
dec
cmp
jge
call
aam
popf
outs
push
test
mov
xchg
inc
mov
dec
adc
mov
out
ins
sub
push
aaa
stos
xchg
hlt
cmp
sbb
fwait
mov
or
cmp
xchg
int3
xchg
sbb
xor
test
or
pushf
test
js
jmp
ds
int3
fsub
and
(bad)
cmp
inc
jbe
push
mov
mov
loope
cmp
push
mov
shr
lods
sbb
not
(bad)
mov
push
jge
mov
or
rcr
mov
cld
mov
xor
or
sub
or
popf
in
(bad)
or
mov
mov
xchg
cmc
cmp
inc
add
sbb
mov
jp
xlat
jb
jg
dec
push
mov
pop
xor
sub
or
retf
push
ins
mov
jae
add
sbb
sbb
pinsrw
xchg
sub
xchg
stc
test
xchg
dec
sbb
retf
mov
mov
mov
dec
int3
adc
cmp
call
mov
mov
sbb
rol
inc
aas
out
push
cmps
mov
jbe
inc
mov
xchg
sub
ins
mov
out
es
mov
mov
out
aam
popf
ret
icebp
test
xchg
sbb
mov
xchg
sub
mov
in
shl
xchg
pop
hlt
sti
retf
stos
loop
shl
or
jp
fsub
imul
mov
sbb
mov
mov
test
cmp
icebp
add
cmp
scas
add
push
xchg
enter
lock
mov
mov
dec
cmp
or
std
or
cli
cmp
xchg
ret
inc
int3
mov
call
and
movs
add
std
mov
cmps
xchg
mov
xchg
mov
mov
hlt
hlt
fidivr
inc
or
jge
pop
dec
fistp
imul
xchg
ficom
pop
addr16
(bad)
sti
sar
pop
push
stos
dec
push
out
push
jmp
imul
loop
out
loopne
mov
inc
xchg
repz
sbb
sub
sbb
popa
or
outs
scas
add
or
inc
and
rol
outs
icebp
data16
pushf
outs
mov
mov
jle
ja
sbb
add
inc
sbb
cwde
rol
xor
in
sub
dec
lods
push
pop
jmp
add
push
pusha
mov
in
call
repnz
(bad)
int3
jnp
stos
lds
xor
push
pmuludq
dec
repz
sub
in
cs
test
and
xchg
sti
sub
fcmovnbe
add
pop
push
sbb
jp
pop
mov
push
add
or
mov
sahf
xchg
bound
sti
sub
push
call
cdq
fiadd
mov
cmp
xchg
dec
sbb
cmps
push
outs
mov
pusha
aam
push
xor
(bad)
jge
pop
adc
xchg
out
rcr
sbb
push
cmps
push
add
mov
or
clc
int3
test
cmps
push
std
ins
cmp
cmc
loop
mov
jns
and
or
add
xor
int3
jb
xchg
inc
sahf
add
lea
in
movs
xor
stos
retf
mov
sub
dec
ja
mov
lods
mov
das
push
(bad)
mov
lds
jg
mov
xchg
pop
mov
(bad)
sbb
ficom
pop
xchg
(bad)
in
sub
clc
sbb
loopne
nop
pop
and
fnstcw
test
dec
pop
aaa
mov
das
icebp
mov
jnp
fdivr
pop
mov
xchg
lahf
jl
mov
jl
mov
test
movs
jae
ins
fabs
outs
push
xchg
mov
sub
jg
adc
or
scas
cdq
loopne
push
push
ins
imul
sub
lock
adc
mov
or
std
icebp
cmp
mov
jg
mov
inc
push
sub
xchg
gs
cmc
hlt
cmp
dec
xor
rcl
push
int
sub
adc
mov
cmp
jns
out
(bad)
cmc
data16
arpl
and
ja
jnp
scas
push
sub
sbb
dec
fcomp
pop
out
mov
fwait
mov
xor
mov
xor
xor
(bad)
push
push
mov
data16
xor
inc
jne
mov
icebp
xchg
mov
mov
dec
adc
cmp
mov
sti
xchg
inc
imul
and
(bad)
and
out
pop
mov
out
jp
dec
fsub
retf
and
mov
mov
inc
lods
dec
jo
jl
enter
pop
inc
mov
sub
shr
lock
call
or
jns
jg
mov
inc
xchg
leave
jmp
jecxz
pop
aam
fdiv
adc
mov
cmp
inc
outs
adc
mov
push
mov
nop
repnz
popa
es
push
ins
inc
enter
add
jge
mov
cmp
pop
cmps
pop
push
ja
js
stc
enter
ret
fild
lods
pop
jmp
stos
pop
mov
jae
xor
cwde
sbb
lods
es
adc
ror
add
clc
and
test
push
dec
adc
out
js
adc
lock
loopne
loope
push
pop
jne
xchg
push
inc
jb
imul
inc
dec
adc
or
mov
scas
sbb
setg
clc
and
or
push
mov
cmp
cmp
rcr
pop
xor
inc
mov
push
dec
jl
out
rcr
push
pop
lahf
xlat
std
dec
mov
inc
cmc
jno
das
daa
inc
je
jmp
mov
jmp
adc
jle
adc
sbb
inc
cdq
ds
and
test
mov
mov
xor
xor
fadd
cmp
mov
jmp
nop
cli
mov
test
inc
jbe
loopne
in
not
mov
sub
ja
cmc
inc
outs
inc
mov
cld
adc
cmp
adc
push
sbb
inc
pop
inc
mov
xchg
gs
or
mov
fs
mov
sar
mov
push
scas
rcr
add
add
jmp
adc
or
add
sub
pop
sub
arpl
xchg
xchg
int
rcr
shr
test
jnp
imul
mov
sub
sbb
scas
imul
mov
leave
sub
stos
retf
dec
add
sbb
or
mov
push
imul
dec
xchg
mov
or
fistp
enter
stos
inc
mov
push
dec
addr16
dec
sub
jmp
xor
cli
out
stc
out
jl
jae
cwde
or
jmp
mov
movs
lock
add
push
push
mov
or
mov
fidiv
scas
test
inc
test
jno
in
fwait
inc
xor
or
pop
rcr
icebp
add
jl
pop
adc
push
ret
es
fcmovnbe
mov
movntps
popa
pop
imul
scas
xchg
std
mov
add
pushf
(bad)
shl
sbb
xchg
xlat
icebp
arpl
dec
jmp
mov
das
push
call
sti
mov
repnz
imul
mov
jle
mov
add
ja
mov
ins
jl
or
sub
fdiv
movs
ja
inc
add
mov
(bad)
imul
mov
jnp
push
loop
xor
retf
xor
shr
scas
and
ja
cs
mov
sub
loop
push
mov
in
mov
inc
cmp
sti
jl
loopne
not
leave
dec
lods
mov
or
in
jmp
outs
nop
mov
lods
and
stc
imul
jne
lock
push
pop
adc
fisttp
push
mov
mov
add
rep
cmps
(bad)
jbe
loopne
adc
and
jbe
xchg
fsubr
mov
inc
or
dec
test
xchg
mov
cmp
xor
adc
adc
mov
xor
and
mov
push
adc
cmp
call
scas
cli
mov
test
leave
inc
mov
xchg
repz
pop
mov
call
icebp
and
std
jno
daa
not
pop
jp
call
push
mov
imul
sbb
jge
sar
fldcw
fabs
cmp
inc
push
xchg
mov
in
cld
dec
xor
sub
push
or
adc
inc
clc
aas
push
xchg
xor
xchg
mov
adc
retf
jns
popf
mov
(bad)
pop
sbb
jb
out
cmc
inc
std
ins
xor
test
mov
ss
mov
(bad)
pushf
pop
and
mov
adc
into
mov
jge
xor
daa
dec
xchg
pop
jne
inc
fadd
dec
ret
outs
mov
xchg
sbb
jns
ins
jge
pusha
xor
ins
push
jmp
test
leave
adc
sub
(bad)
stc
mov
mov
mov
push
gs
movs
bound
mov
xchg
sbb
or
pop
or
pop
sub
jnp
shr
add
mov
xchg
out
adc
mul
xor
push
cmp
jle
mov
push
mov
pop
jns
dec
ss
fldcw
(bad)
sub
jbe
xor
ins
ja
scas
mov
iret
lock
int
adc
fisub
xor
sar
ins
in
ss
rol
sub
stc
xlat
sti
out
cmp
addr16
push
inc
idiv
adc
adc
inc
test
xchg
mov
pop
int
(bad)
fsubr
mov
scas
stc
scas
retf
xchg
adc
sub
cmc
popf
das
mov
jmp
xor
sub
ins
in
mov
pusha
dec
fldcw
scas
cmp
out
rcr
rcl
dec
rcl
push
add
enter
push
inc
pop
push
clc
adc
sbb
inc
int3
or
adc
jl
outs
xchg
cmp
out
fs
popa
sub
ret
shl
retf
fxch
inc
stc
daa
sti
jb
lds
ja
add
sti
in
ficomp
cmps
cmp
test
hlt
pop
xor
or
inc
addr16
fldenv
cmp
movs
test
jle
xchg
push
xchg
pop
sub
pop
js
fadd
sbb
call
xchg
jmp
jmp
adc
test
cwde
mov
or
and
jb
mov
das
dec
inc
ja
mov
imul
sbb
add
dec
jbe
jmp
add
and
pop
sub
mov
hlt
push
mov
dec
adc
xor
lods
dec
and
mov
stos
cmc
ret
iret
mov
scas
(bad)
pop
pop
mov
push
rcr
repnz
outs
imul
dec
movs
mov
xchg
loope
sub
gs
mov
rcr
(bad)
int
aas
push
sahf
rcr
clc
ja
mov
xchg
stos
cs
add
sbb
sub
xchg
sub
sbb
mov
(bad)
out
(bad)
adc
mov
scas
outs
sub
mov
aad
dec
add
sub
shl
mov
out
mov
sti
pop
push
sti
popf
pop
(bad)
pop
ret
loop
stc
mov
pusha
xchg
pop
cwde
adc
sbb
fwait
inc
or
fcom
pop
or
fadd
retf
rcr
imul
aam
enter
outs
sbb
or
dec
or
test
fadd
mov
xlat
mov
pop
lods
mov
xor
fisttp
jp
add
xchg
pop
pop
jl
test
iret
xchg
mov
les
mov
or
lock
int
ins
mov
stos
fstp
add
and
shl
or
shl
sub
inc
mov
sub
mov
dec
pusha
daa
mov
popa
inc
and
dec
pop
push
mov
or
inc
mov
jne
fmulp
les
pop
and
pop
scas
jle
and
stc
aam
rcl
(bad)
push
inc
sbb
mov
enter
loopne
(bad)
jns
lock
cmp
es
outs
(bad)
mov
push
pop
pop
loop
into
enter
hlt
dec
inc
pop
repnz
jnp
(bad)
xchg
int
daa
cwde
psraw
dec
xchg
(bad)
jmp
repz
push
or
pop
les
pop
add
or
sbb
std
add
mov
mov
test
and
(bad)
fcmovne
xchg
push
mov
dec
ficomp
scas
inc
aad
dec
inc
xor
icebp
stc
sub
or
inc
mov
cmps
stc
sbb
xor
mov
icebp
inc
in
cmp
mov
fs
mov
sub
sub
add
pop
xor
mov
jbe
add
pop
shl
jne
sbb
xchg
aad
pop
xchg
jns
fst
loopne
add
test
mov
dec
xchg
scas
cmp
retf
(bad)
push
retf
mov
xchg
int
sti
out
mov
mov
fmul
dec
push
outs
aam
jg
fisttp
sbb
mov
enter
pushf
or
nop
mov
loopne
sub
lods
js
addr16
xchg
and
in
bound
add
mov
pop
call
cmp
add
or
jnp
pop
xchg
hlt
jno
adc
arpl
int
(bad)
in
test
shl
mov
je
popf
pop
das
data16
fcmovb
retf
mov
xchg
and
in
ds
int3
pop
rol
add
push
xor
sahf
sbb
fcompp
or
fdiv
pop
into
ins
aam
inc
addr16
push
sti
gs
inc
xchg
mov
cmps
into
adc
sti
pop
xor
xchg
xor
mov
sub
mov
inc
jecxz
cs
scas
imul
les
push
call
inc
stos
or
mov
jmp
inc
nop
inc
pop
sub
ins
mov
outs
ret
mul
xchg
xor
sub
mov
sub
adc
in
loop
mov
jecxz
push
das
cmp
ins
xor
in
sub
push
cdq
loope
fbstp
mov
pushf
popf
and
jno
mov
mov
mov
sub
fdivr
xchg
adc
push
fiadd
mov
retf
mov
mov
push
push
sahf
outs
push
hlt
dec
call
pop
arpl
sar
pusha
add
adc
repnz
sbb
mov
inc
test
add
mov
popa
pop
sbb
jnp
cs
xor
sbb
inc
jo
and
inc
sub
dec
pop
jbe
fxch
repnz
ins
loope
adc
fs
not
nop
addr16
sti
jmp
pop
push
imul
ins
mov
jnp
or
mov
test
lahf
jl
popa
stos
inc
xchg
cmp
add
jmp
mov
gs
dec
sbb
mov
jnp
in
cmp
push
sti
stos
int3
mov
pusha
imul
adc
mov
loope
sbb
mov
mov
and
sbb
adc
adc
xchg
or
xchg
dec
sahf
sbb
jb
inc
pop
retf
dec
dec
shr
js
repz
imul
push
fld
mov
jns
jl
in
jg
mov
push
xchg
int
inc
(bad)
int3
addr16
inc
mov
mov
push
adc
pusha
out
aam
imul
repz
pusha
sub
ins
loopne
lods
sahf
sbb
cmps
aas
int
sub
ins
aaa
je
push
imul
dec
mov
add
pusha
adc
in
std
inc
out
push
or
ja
pop
call
inc
or
imul
movs
jge
ins
or
xchg
mov
ja
jne
mov
jl
mov
cmp
(bad)
sub
xor
cmc
xchg
mov
jno
xor
push
add
mov
dec
mov
cmp
repz
adc
movs
inc
ficom
pop
(bad)
call
pop
les
xchg
dec
clc
std
out
jge
jae
pop
adc
sar
je
iret
inc
repz
(bad)
mov
jge
jmp
inc
or
push
jne
mov
sub
xchg
pop
aaa
push
imul
cmp
mov
cmp
cli
cld
test
mov
pop
das
push
popa
push
sub
adc
add
(bad)
jbe
aad
je
arpl
in
dec
lods
js
sub
sbb
mov
pusha
xchg
dec
(bad)
jnp
pusha
xchg
mov
stc
popa
or
dec
inc
pop
mov
adc
mov
loop
pusha
sbb
cmp
ins
icebp
dec
xor
out
stos
ja
add
mov
movs
add
mov
or
inc
fwait
out
pop
leave
aas
adc
jne
outs
jle
mov
jmp
cmp
(bad)
shl
movs
xchg
and
call
test
jbe
mov
push
outs
jecxz
test
test
xchg
in
pop
or
cmp
inc
cmp
and
fwait
or
(bad)
stos
(bad)
cmp
pop
jns
xchg
jmp
jl
push
cld
ret
ins
dec
imul
xchg
pop
imul
outs
stc
push
pop
cmp
jae
jns
outs
and
repnz
sub
push
test
mov
dec
mov
out
and
xor
gs
into
icebp
out
jge
add
xchg
nop
cmp
add
sahf
int
xchg
and
out
rcr
in
mov
or
lods
pop
jmp
mov
or
jmp
aas
xchg
xor
in
in
sub
dec
repz
pop
pop
arpl
cli
pop
mov
inc
fsub
jecxz
into
mov
mov
mov
jae
cmp
sbb
js
xchg
add
int
mov
pop
imul
imul
sahf
jo
jne
xchg
inc
(bad)
xchg
adc
lods
(bad)
stc
push
mov
div
push
in
xchg
std
jae
ret
xchg
jns
ss
retf
scas
cmps
dec
lods
popf
xlat
int
push
aam
dec
or
inc
mov
imul
test
mov
shl
push
dec
xchg
push
cld
in
sbb
lock
icebp
int
popa
pop
mov
cli
pop
adc
bound
jo
adc
add
add
push
(bad)
pop
mov
sbb
mov
xlat
dec
retf
dec
std
push
cmp
lock
mov
mov
add
pushw
lahf
pop
jnp
pop
pop
xchg
xchg
jl
push
sub
jbe
fstp
jmp
jp
icebp
mov
push
loope
xor
fsubr
dec
arpl
dec
mov
loop
pop
ja
test
mov
idiv
jl
imul
int
les
mov
dec
(bad)
out
test
rcr
pop
leave
cwde
jae
xor
fild
(bad)
repz
push
fmul
addr16
shr
fs
hlt
xor
mov
add
shl
sbb
popa
sub
jb
jmp
sahf
outs
ror
sbb
jb
fbld
mov
into
cmps
call
das
movs
cli
pop
pop
lods
out
stos
loop
loop
mov
nop
jge
pop
(bad)
cmp
pusha
sub
or
pop
cld
jecxz
sub
das
mov
xchg
mov
in
data16
mov
pushf
loop
jbe
dec
ret
or
movs
lds
not
int3
add
sahf
frstpm(287
mov
adc
das
pop
sub
shr
pop
mov
test
popf
xchg
pop
pop
xchg
jp
ja
or
lods
mov
cwde
loopne
mov
mov
or
sub
sti
mov
cmps
xlat
cmp
rcr
cdq
sti
fadd
mov
add
jnp
shr
push
fwait
add
shr
cmp
jge
pop
cwde
xchg
or
mov
mov
jp
dec
mov
out
es
dec
into
xchg
xor
cmp
gs
repz
pop
or
fst
repnz
add
pop
mov
adc
mov
mov
mov
leave
in
lea
xchg
adc
pushf
test
pop
rcr
div
adc
push
adc
outs
je
pop
xor
add
push
mov
and
inc
adc
mov
adc
sbb
sbb
lods
jnp
in
movs
sub
cmps
jecxz
daa
mov
sti
mov
mov
adc
frstor
adc
mov
ret
int3
cmps
ds
add
xor
cmc
xchg
add
push
sub
es
inc
ins
sub
mov
mov
arpl
lods
outs
jmp
repnz
inc
cmp
(bad)
stos
repnz
add
mov
or
jo
call
cmps
dec
pop
push
daa
or
push
movs
cmps
inc
stos
mov
push
sub
shl
aaa
xor
cmp
in
mov
inc
les
pop
mov
or
sahf
sub
(bad)
mov
add
dec
xor
lods
ins
or
and
sbb
or
aam
or
loopne
sub
pusha
sbb
and
mov
(bad)
and
jl
imul
add
mov
leave
lods
adc
xlat
in
lea
mov
mov
jbe
push
pop
stc
sub
sub
mov
pop
dec
mov
enter
cmp
inc
aam
out
pop
cs
call
repnz
xor
sbb
pop
or
sbb
ins
add
test
and
push
fisttp
mov
iret
add
shr
in
xor
aas
out
int
pop
jmp
cmp
adc
mov
add
call
inc
lods
sub
leave
fstp
scas
call
sub
icebp
lds
fwait
add
push
fimul
mov
jns
lds
ret
pop
sub
mov
sahf
inc
test
fwait
mov
xchg
loope
push
xchg
(bad)
fucomi
mov
pop
mov
add
push
jmp
xor
hlt
ret
jo
jne
cmp
adc
pop
push
sub
(bad)
mov
shl
mov
stos
pushf
xor
and
sbb
jo
adc
mov
cmp
retf
icebp
xchg
mov
sbb
mov
cld
xchg
mov
dec
sbb
sub
pop
sbb
xchg
pop
idiv
pop
inc
cli
xor
jae
adc
mov
adc
imul
mov
cmps
push
xchg
and
xor
in
dec
outs
push
and
iret
aas
dec
mov
in
sti
sub
dec
cld
retf
add
sbb
fisub
push
fdivrp
call
ret
int3
out
fcom
ret
enter
loope
adc
movs
push
stos
inc
add
push
xor
sbb
loope
stos
or
mov
pop
jae
popf
inc
mov
test
imul
or
cmp
xchg
call
scas
or
cwde
daa
and
and
add
xchg
push
out
mov
add
sahf
jae
enter
lock
pop
push
gs
daa
and
inc
ins
inc
cmc
pop
retf
ins
pop
xchg
push
xchg
add
sub
adc
xchg
jle
xchg
sar
mov
cld
cmp
repnz
dec
mov
jl
(bad)
jmp
std
shl
add
std
mov
jb
jne
dec
add
jp
dec
adc
push
lea
sub
pmaxub
sub
pop
fimul
dec
jmp
out
and
cdq
leave
cdq
into
xchg
cmp
fld
pop
je
scas
repz
cs
mov
imul
mov
push
dec
xor
push
rcr
ins
sub
shl
in
xor
ins
or
jb
test
or
sbb
ret
or
add
push
push
aad
cmp
retf
adc
mov
push
shl
imul
and
push
and
mov
sahf
pop
inc
pop
mov
pusha
mov
int
call
test
sub
or
test
pushf
cdq
mov
mul
out
mov
mov
fdivr
adc
push
and
add
ret
push
js
adc
cdq
retf
ror
add
movs
push
add
(bad)
dec
cmp
neg
push
xchg
enter
jnp
in
add
adc
xchg
adc
sbb
xor
jge
cmp
mov
lock
mov
je
repnz
mov
mov
(bad)
cli
jmp
jae
les
mov
js
cs
in
ficomp
push
mov
push
inc
xor
sbb
adc
inc
movs
jle
pop
pop
fdivr
(bad)
outs
mov
inc
push
scas
xor
sbb
movs
rcr
pop
adc
popf
aas
shl
push
sub
pop
sbb
mov
icebp
popf
fistp
inc
adc
mov
fisub
aas
fadd
aaa
mov
push
fistp
lock
jne
jbe
xor
push
xchg
int
cmps
dec
retf
enter
mov
out
push
cmc
xor
xlat
fs
call
mov
mov
jp
push
xchg
fistp
out
and
into
push
add
jmp
inc
xchg
scas
push
fisub
pusha
mov
stos
(bad)
fild
and
rcr
xor
mov
daa
or
in
mov
cmps
pushf
imul
int3
and
jle
mov
and
dec
jg
xlat
das
icebp
sbb
fisubr
ficom
js
xchg
(bad)
jp
inc
paddd
and
xlat
ficomp
adc
int3
push
jg
cmc
mov
or
iret
and
rcl
std
jp
aad
jp
lea
dec
and
fldcw
pop
sub
push
xchg
xor
bound
jmp
fidiv
arpl
iret
xchg
sub
into
adc
loope
dec
shr
je
lods
int3
enter
mov
inc
sbb
push
push
fwait
cmp
fisub
or
jb
jmp
cmps
dec
mov
push
or
mov
push
imul
sbb
lea
jmp
outs
loopne
es
push
inc
es
pop
fisub
cmp
mov
cdq
jae
hlt
and
sbb
ret
cmp
mov
jbe
call
pop
pop
loop
fwait
test
mov
mov
(bad)
mov
jle
or
sub
pop
scas
add
push
stos
ror
jo
inc
xchg
std
cmps
lods
sub
shl
push
adc
and
dec
(bad)
fiadd
xchg
and
mov
lea
mov
inc
fild
jno
xchg
mul
sar
lea
cmp
dec
popa
ret
fwait
sub
addr16
cmp
xchg
jle
out
sub
movs
pop
ins
and
add
mov
popf
into
outs
mov
mov
xor
adc
aam
xchg
push
aaa
xchg
inc
test
sub
sub
jmp
nop
mov
fwait
jg
adc
adc
fdivr
push
inc
mov
test
pusha
sbb
xchg
push
rcl
icebp
push
xchg
(bad)
pop
cmps
inc
cmp
add
and
iret
int3
les
stos
and
mov
sub
pop
pop
pop
(bad)
push
clc
or
mov
(bad)
xchg
push
in
cmp
add
cs
mov
lock
lock
add
leave
or
mov
daa
adc
xchg
mov
xchg
fnsave
popa
xor
lds
push
cmps
and
dec
out
fs
scas
push
ret
movs
push
loope
xchg
dec
test
sub
fsubrp
test
stos
cmps
jne
push
mul
and
pop
push
xor
test
test
ds
in
mov
idiv
adc
cmp
cmp
or
out
sub
adc
cmc
xchg
lods
sar
lds
js
cmc
aam
xchg
push
cmp
mov
jge
add
outs
dec
cli
push
add
in
xchg
outs
(bad)
rol
rol
push
repnz
push
ret
xchg
adc
push
push
mov
push
int3
jbe
push
pop
adc
scas
mov
ja
shr
call
hlt
in
mov
pop
rcr
leave
add
jg
std
xchg
jbe
push
dec
sub
mov
sbb
out
cmp
push
dec
and
bound
es
jmp
push
fcmovnb
fs
mov
dec
test
fxch
mov
cmp
clc
and
movs
dec
dec
jmp
mov
mov
dec
xchg
ror
fbstp
addr16
outs
sar
dec
push
pop
mov
outs
pop
imul
and
sar
dec
nop
pop
xlat
mov
cli
xchg
mov
add
pop
aaa
mov
popf
mov
mov
cs
inc
and
cmp
xchg
es
adc
fcom
pop
dec
xor
call
fisttp
fidiv
out
or
out
imul
lea
and
(bad)
fs
bound
xor
aaa
xor
ficomp
cmc
add
fistp
or
adc
cmp
ja
repz
inc
out
dec
mov
iret
lock
or
push
ret
mov
cmp
out
xchg
in
push
into
pop
inc
push
or
je
adc
addr16
add
sub
or
sub
out
sbb
sti
push
add
into
and
cmp
xor
repz
inc
out
hlt
les
dec
pop
push
pop
sbb
xlat
pop
cld
mov
cmp
mov
mov
scas
or
cmp
lds
(bad)
mov
fsub
test
xor
pop
and
jne
in
mov
cmp
test
sub
stos
cwde
and
std
scas
les
xchg
sbb
mov
pop
cld
push
dec
retf
cmps
lea
fisttp
sahf
scas
jnp
add
popf
inc
add
ds
mov
sub
sbb
loope
mov
cdq
dec
loop
jo
adc
jmp
fmul
or
aas
inc
and
add
cdq
ins
jbe
scas
xchg
lock
dec
push
xchg
in
inc
add
sbb
jns
mov
dec
mov
cmp
(bad)
mov
mov
lock
icebp
hlt
mov
or
psubd
scas
mov
fidivr
push
fwait
or
out
mov
cmp
mov
inc
movs
stos
cwde
xchg
lods
push
add
mov
xchg
xchg
rcl
and
jle
lods
sub
xor
xor
push
daa
jecxz
call
add
fldcw
lahf
mov
lods
and
jmp
arpl
and
sbb
call
hlt
pusha
mov
adc
xor
(bad)
popf
fisubr
repz
std
ja
and
push
popf
cmc
push
mov
push
or
stos
sub
mov
mov
cwde
push
adc
add
dec
jmp
sub
fcom
pop
sub
xor
test
push
mov
mov
icebp
or
pop
rol
or
fsub
jle
jge
mov
adc
ror
or
jo
fldcw
xchg
xchg
xor
jo
sbb
es
xor
dec
add
in
push
push
sbb
out
add
aas
retf
jae
test
scas
xor
sub
cwde
mov
arpl
mov
xchg
ins
bound
dec
mov
test
cmps
mov
leave
jo
retf
(bad)
jmp
jg
mov
repz
retf
vshufps
gs
or
sub
mov
vphaddwq
cmp
dec
fist
scas
pop
xchg
mov
and
imul
mov
js
rcr
cmp
retf
xor
mov
xor
cmp
xchg
mov
(bad)
data16
mov
ja
pop
mov
lds
icebp
ins
mov
xchg
repnz
adc
add
push
fs
ja
icebp
cwde
xor
xchg
popa
mov
mov
(bad)
retf
cmp
ins
ins
out
xor
jns
push
mov
adc
push
outs
push
(bad)
mov
xor
xchg
jnp
sub
imul
call
(bad)
pusha
push
int3
ret
outs
xor
(bad)
xchg
cdq
das
xchg
(bad)
push
xor
ret
cmp
mov
ss
movs
push
and
push
test
into
mov
adc
xchg
bound
adc
push
ucomiss
(bad)
sti
(bad)
ss
ins
inc
retf
xor
mov
mov
xor
call
retf
test
jl
pop
aas
cdq
jmp
push
inc
add
sbb
idiv
test
mov
fild
in
add
ret
sub
int3
frstor
and
xor
test
jle
jnp
xchg
push
jmp
sub
in
shl
pop
addr16
add
sahf
lods
bnd
push
iret
fist
test
and
leave
sar
add
pop
mov
mov
mov
mov
loop
mov
gs
mov
int3
push
movs
arpl
mov
outs
fsub
dec
and
jl
xor
or
xor
push
cmc
cmp
movs
sbb
daa
aad
je
(bad)
retf
mov
in
faddp
je
fwait
nop
retf
dec
or
int3
xchg
xchg
xor
xchg
pushf
jmp
xchg
or
inc
lds
dec
jno
xchg
int3
jp
xor
(bad)
repz
mov
dec
add
lods
dec
sub
outs
(bad)
jg
std
pop
pop
push
push
inc
and
jns
pop
xor
popf
loop
mov
jmp
adc
out
retf
sbb
mov
bound
test
out
jle
ins
xor
imul
pop
jp
xchg
pusha
ror
fld
xchg
adc
out
inc
sbb
movs
mov
xchg
dec
xor
jg
and
ins
dec
daa
test
sub
or
sbb
aam
jns
and
dec
test
loope
sub
xchg
pop
inc
mov
and
call
jbe
mov
ret
cmc
ret
outs
pop
test
sbb
mov
jmp
in
cs
push
pop
xchg
xor
or
xchg
(bad)
mov
aam
inc
ins
xor
icebp
push
jmp
cmp
shl
repnz
cmp
inc
dec
test
mov
sub
jle
mov
fsubr
clc
popf
adc
jns
push
push
mov
sbb
stos
xchg
add
push
ret
xchg
and
jle
hlt
cwde
adc
xchg
inc
dec
xchg
pop
push
cmc
or
push
fist
leave
mov
push
inc
adc
vpexpandw
inc
int3
cli
(bad)
dec
in
rcr
inc
outs
lds
je
ja
pop
mov
lods
in
stos
sub
cmps
add
adc
add
(bad)
imul
mov
cmp
repnz
cmp
popa
pop
dec
lock
sbb
in
inc
and
(bad)
(bad)
loop
shl
xchg
or
push
adc
(bad)
and
xchg
add
clc
ins
pop
jg
or
ror
inc
in
and
jmp
xor
jo
scas
jle
scas
in
pop
sub
mov
mov
cmps
sbb
sub
ss
clc
push
push
movs
cmp
inc
sbb
or
or
mov
mov
xor
dec
stos
pop
add
(bad)
fwait
neg
inc
xor
sbb
adc
cmove
lods
xchg
dec
and
dec
sub
pop
scas
(bad)
loope
jmp
lods
mov
or
aaa
mov
sbb
aad
push
inc
test
jno
scas
jnp
dec
rcl
js
and
pop
loopne
cmp
add
cmp
lock
retf
sub
(bad)
and
xchg
cmc
cwde
cmc
sahf
icebp
mov
cmp
mov
addr16
cdq
dec
jg
add
mov
or
xchg
inc
out
add
lods
and
ja
inc
inc
in
mov
jle
cmp
sub
sub
lods
pop
jl
jecxz
fst
arpl
sbb
pop
fldenv
mov
loopne
es
std
jmp
test
dec
(bad)
mov
in
test
movs
hlt
in
loope
xor
sbb
lods
in
stc
push
xchg
push
cwde
test
jo
jle
dec
push
aas
dec
shr
(bad)
sbb
sahf
cmp
jmp
xchg
setb
xor
add
movs
sub
movs
shl
lods
cmp
or
outs
sbb
dec
sahf
mov
sahf
jmp
mov
out
sub
aaa
lods
adc
test
jbe
fwait
(bad)
fnstsw
push
test
pop
lock
add
fiadd
mov
add
mov
cmc
sub
mov
ret
test
(bad)
idiv
clc
icebp
sub
rcl
ja
jecxz
retf
dec
push
rcl
in
cmps
popa
mov
cli
mov
(bad)
ret
adc
cld
xor
push
inc
push
xor
add
cmp
adc
int3
xor
sbb
sahf
cmp
test
push
or
out
add
jb
cdq
daa
std
dec
dec
outs
fdivr
xor
lea
xchg
stc
jbe
dec
pop
into
jp
mov
adc
sti
nop
xor
xchg
jbe
into
shl
cld
je
push
lods
cdq
mov
mov
jmp
mov
sub
pop
xchg
popa
mov
fsub
retf
xchg
push
iret
pop
fisttp
ret
loopne
cmp
cld
loopne
jnp
sar
daa
xchg
fwait
mov
clc
leave
retf
dec
idiv
gs
aad
and
mov
int3
cdq
fs
mov
wrmsr
xchg
cmp
push
xchg
cli
repnz
sub
and
inc
lods
adc
xchg
pop
in
xchg
scas
enter
hlt
cld
dec
cmps
jmp
adc
push
xor
stos
cdq
das
adc
xor
inc
push
lds
or
fsub
icebp
push
or
mov
ret
or
clc
fwait
outs
rcr
aaa
cmp
lock
push
cmp
ins
mov
mov
es
dec
fldenv
pop
dec
repnz
out
inc
add
sbb
or
xor
jl
cld
mov
retf
fwait
inc
mov
dec
cmp
mov
test
lods
push
test
test
mov
hlt
es
icebp
outs
nop
imul
nop
mov
xor
push
mov
jo
icebp
push
retf
xchg
and
loope
pusha
mov
les
xchg
xor
shl
sbb
mov
cmp
xchg
mov
or
dec
rcr
xchg
pusha
and
pusha
xchg
add
imul
aad
mov
aaa
push
dec
gs
push
cmps
in
enter
sbb
sbb
mov
arpl
outs
dec
iret
(bad)
push
repz
cld
push
or
pop
fmul
add
pop
xor
add
push
inc
aad
outs
das
lods
fnstsw
jno
xor
sbb
xlat
adc
and
js
jo
add
retf
loopne
pop
jmp
and
clc
or
inc
les
mov
or
ins
cmp
push
outs
rol
push
addr16
xchg
es
and
jp
inc
cmps
nop
sub
ss
mov
pop
pushf
or
call
mov
shr
push
dec
jmp
out
and
push
add
ret
shr
and
xchg
fadd
inc
scas
mov
mov
or
dec
mov
(bad)
fsubr
std
xor
fs
cld
jmp
in
push
hlt
sub
add
pop
fmul
clc
stos
or
sahf
mov
je
mov
or
or
jb
sbb
dec
xchg
inc
aaa
(bad)
mov
ror
loope
test
sbb
nop
add
ds
test
ds
and
paddusw
and
jecxz
adc
ror
(bad)
outs
mov
xchg
lods
(bad)
mov
cmp
or
in
sbb
or
outs
pushf
xchg
mov
sub
lock
test
cmp
xor
int3
movs
mov
pop
dec
jp
nop
add
lar
in
lea
mov
fild
dec
movs
(bad)
into
mov
fsubp
iret
xchg
mov
xchg
mov
jne
xor
sti
or
scas
pand
jp
popf
cli
in
adc
jne
inc
push
push
cmp
adc
and
dec
inc
xchg
jmp
aaa
mov
test
push
push
mov
inc
nop
std
add
shr
push
and
mov
int3
scas
retf
loop
ss
xchg
inc
pop
push
sbb
xor
fwait
mov
rcr
sub
mov
dec
movs
les
sbb
imul
mov
outs
jp
scas
test
shr
adc
inc
mov
test
mov
cmp
sub
xor
and
movs
dec
xlat
cmp
xchg
xchg
mov
cmp
inc
pop
cmp
scas
sahf
or
es
xchg
in
sbb
push
(bad)
pop
push
cmps
pusha
add
and
or
in
sbb
and
dec
mov
shl
enter
or
push
loopne
and
adc
mov
mov
lock
jne
in
cwde
inc
sbb
cli
iret
jo
sub
and
dec
popf
sbb
inc
aaa
push
push
in
jae
cld
and
ja
cmp
in
mov
inc
xchg
scas
push
das
mov
adc
jb
popf
das
xchg
(bad)
push
outs
sti
pop
int3
xor
int
adc
cmp
or
call
or
mov
mov
push
dec
clc
ins
and
sbb
fcom
lods
mov
cmp
push
lds
scas
mov
scas
sbb
stos
jnp
mov
cmp
loopne
adc
shl
mov
cld
(bad)
sti
int
cdq
mov
dec
dec
mov
retw
jne
jge
fistp
sbb
xlat
push
pusha
mov
xor
movs
(bad)
mov
fsub
push
lds
rol
enter
inc
imul
add
aas
fld
popf
jl
aam
(bad)
and
fidivr
inc
mov
add
lods
ins
cli
(bad)
sbb
shl
adc
push
mov
push
adc
scas
dec
dec
mov
aad
les
rcl
xor
cdq
xchg
add
pop
lods
or
sbb
or
xor
cmp
xchg
xchg
mov
pop
pop
cmp
test
retf
cmp
lahf
fmul
inc
into
add
mov
inc
bound
push
or
jl
xor
and
mov
imul
shl
aam
(bad)
mov
inc
or
movs
mov
mov
ror
add
aam
and
inc
adc
(bad)
dec
push
inc
dec
mov
jl
into
mov
in
xlat
inc
bound
aad
es
out
or
sbb
lock
pop
lods
add
push
push
out
sti
iret
mov
dec
or
xor
fmul
cmp
adc
pushf
hlt
mov
lahf
in
es
sar
mov
cmp
push
scas
mov
adc
call
sbb
cmp
js
mov
in
bound
sbb
in
sub
or
(bad)
hlt
jle
pop
xor
add
pop
mov
int3
cmp
les
add
imul
mov
std
mov
sub
or
ret
cmp
xchg
mov
ret
dec
lods
pusha
push
pop
or
jae
jl
mov
jp
hlt
lahf
ss
(bad)
jae
sub
sbb
xchg
rol
ficom
imul
(bad)
jae
xor
cmp
push
xchg
fcomp
mov
shr
jge
and
gs
jmp
cmp
pop
jg
xchg
lods
cmps
retf
je
jmp
mov
xor
mov
outs
mov
ja
and
mov
xchg
fmulp
call
lds
ds
jne
jle
pop
popf
push
(bad)
push
add
ret
mov
or
and
outs
je
mov
push
jno
inc
ja
or
cmp
xchg
test
xchg
nop
jecxz
add
pop
mov
xor
inc
cdq
cmp
inc
dec
paddsb
or
fidiv
inc
and
jmp
or
sub
fsub
stos
jecxz
xor
idiv
lods
mov
std
gs
jae
xchg
jo
rep
dec
shl
je
pushf
or
outs
sub
jno
ss
jne
add
bound
(bad)
or
sar
jp
leave
jae
outs
pop
push
adc
pop
into
in
xor
adc
js
sbb
dec
xlat
lock
gs
push
sub
adc
sbb
loope
mov
push
(bad)
or
inc
dec
jg
dec
or
pushf
and
push
mov
jp
xchg
jae
punpckhbw
and
mov
xor
nop
out
call
mov
loope
mov
dec
mov
xor
fimul
inc
imul
mov
sbb
retf
clc
fnstsw
dec
movs
xchg
and
div
adc
outs
fwait
outs
stc
and
pop
lods
pop
sbb
pop
out
jb
push
pop
mov
or
and
popf
and
sub
(bad)
movs
and
je
push
xchg
or
sub
rcl
sub
mov
hlt
push
mov
in
es
imul
repnz
pop
xor
or
xchg
mov
adc
pop
(bad)
sub
repnz
fsubrp
dec
mov
stos
adc
cs
pop
push
mov
jl
div
lock
cli
mov
outs
fidiv
retf
ss
xchg
and
sub
ss
sbb
popa
jl
sub
loop
jp
ret
mov
mov
sti
sbb
cmps
outs
add
pop
or
fimul
cdq
popf
leave
hlt
push
mov
sbb
xchg
jno
in
jae
push
push
scas
jnp
xlat
xlat
mov
out
sar
jne
repz
cmp
ror
dec
xchg
nop
sbb
pop
push
mov
scas
sbb
push
xor
fistp
retf
and
push
pop
xchg
mov
repnz
lds
dec
in
push
xchg
lock
cmp
pop
or
cmps
lea
adc
das
sub
add
mov
test
push
and
or
mov
repz
push
loopne
(bad)
popa
retf
nop
mov
adc
(bad)
call
inc
pop
movs
gs
push
jo
ror
jp
enter
sbb
pop
xchg
cmp
(bad)
dec
sub
gs
(bad)
imul
pop
xchg
(bad)
jecxz
movs
mov
stc
xlat
(bad)
mov
mov
addr16
in
ficomp
adc
adc
xchg
pusha
js
xchg
std
mov
pop
push
pop
jge
push
cmc
outs
mov
or
sar
cmps
sub
cmps
loopne
test
inc
xor
jge
out
iret
(bad)
hlt
movs
pop
loope
push
add
aas
mov
pop
pop
xchg
sbb
arpl
xlat
mov
cli
ins
dec
je
cmps
mov
mov
xor
addr16
mov
rcl
jl
arpl
mov
xchg
dec
xchg
xor
sbb
sti
cdq
das
imul
fist
mov
fsub
sbb
loope
data16
retf
in
cmp
or
bound
(bad)
pop
hlt
push
rol
mov
mov
sbb
pop
adc
(bad)
inc
mov
mov
jg
scas
push
xchg
div
pusha
(bad)
call
shr
test
call
xor
pop
jge
push
movs
(bad)
mov
cmp
xor
ins
sbb
jnp
jecxz
sbb
test
mov
das
ins
inc
sbb
stc
sti
repz
aas
xchg
and
mov
pop
clc
mov
add
inc
sbb
xor
mov
into
mov
xlat
xor
clc
xor
xchg
xchg
cmps
ss
popf
push
mov
jne
push
pop
jbe
pop
or
mov
popf
mov
aam
or
call
jge
outs
and
std
test
dec
(bad)
loopne
inc
int
jg
dec
adc
les
repz
sbb
in
add
rol
loop
jmp
add
adc
cli
retf
mul
xchg
sub
push
mov
nop
not
push
ja
cmp
pop
mov
mov
jl
cmp
cmp
cmps
sub
jns
ror
or
int3
push
fisttp
stos
les
push
sbb
pop
sbb
ficom
in
fadd
mov
js
mov
xor
or
outs
retf
test
jmp
push
rol
cmp
in
or
mov
scas
dec
shl
lock
mov
mov
cmp
mov
or
movs
ins
and
pop
fs
retf
jmp
outs
cmp
ror
cmp
push
in
pusha
fldcw
fst
out
mov
std
sub
aaa
int3
adc
dec
mov
or
test
xchg
or
pop
(bad)
les
cmp
hlt
xor
movs
lds
cmp
ret
in
push
arpl
add
or
pushf
inc
cmp
pop
xchg
pop
xchg
jb
arpl
dec
bound
push
rcr
sub
mov
push
in
sbb
ror
or
rol
mov
mov
lods
lock
push
add
arpl
cwde
dec
adc
loopne
xor
in
int3
pop
in
movs
imul
loop
fld
(bad)
(bad)
mov
and
pop
xor
jl
outs
imul
xor
lock
jle
jle
nop
cli
imul
xchg
xor
pop
out
add
not
cmp
push
das
push
push
push
rcl
mov
mov
add
mov
and
scas
daa
into
jbe
dec
sbb
rcr
loopne
xor
jno
pop
in
test
or
js
mov
pushf
rcl
mov
mov
push
push
sti
iret
xchg
fldl2e
xchg
imul
shr
sub
dec
xor
inc
retf
sti
xor
cmp
cmp
mov
dec
mov
sub
movs
push
add
outs
jecxz
pop
mov
arpl
jmp
push
push
add
ds
(bad)
jecxz
fwait
es
fdiv
fcmovu
inc
or
and
mov
sub
aaa
xchg
push
xchg
aas
push
into
mov
rol
aam
xor
ret
mov
add
in
sbb
lea
ficom
pushf
not
jecxz
addr16
adc
inc
xchg
sbb
in
jo
clc
or
cmp
ret
xchg
add
cmp
es
clc
pop
jb
mov
or
xor
dec
inc
jmp
aaa
fmul
ss
sbb
fist
and
push
jb
sbb
or
call
fsubr
cmp
inc
in
out
ret
ss
push
cld
or
adc
jmp
mov
push
xchg
xchg
ds
repnz
rol
jg
mov
sbb
push
data16
jb
mov
adc
cmp
pusha
stos
ret
int3
clc
(bad)
mov
xor
mul
mov
adc
or
jnp
arpl
sbb
and
cmp
fnsave
mov
and
fbld
inc
ja
daa
xor
adc
adc
enter
add
mov
push
sbb
or
xchg
out
pushf
fimul
das
inc
mov
jg
loop
push
mov
lock
ins
ret
les
xlat
xchg
imul
push
xchg
inc
sbb
ja
adc
adc
inc
fdivr
and
(bad)
and
xor
pop
(bad)
icebp
jl
jns
arpl
xor
dec
dec
in
cwde
out
mov
pop
icebp
sbb
mov
sbb
fsub
mov
clc
cmc
lods
retf
mov
inc
leave
test
jo
test
(bad)
aad
out
ins
ret
xor
mov
mov
inc
pop
out
mov
fwait
retf
push
rcr
dec
test
pop
xchg
add
pop
(bad)
xchg
mov
sbb
(bad)
fild
xchg
jl
fs
loopne
sub
mov
out
out
jns
jecxz
push
loope
(bad)
mov
popa
clc
xor
or
jge
imul
nop
jbe
mov
cmp
cmp
das
fld
mov
and
fs
ja
mov
shl
push
sahf
xor
fwait
lods
loop
sbb
cli
push
jo
fbld
out
mov
jmp
cwde
and
pop
xchg
mov
push
shr
mov
add
cmps
(bad)
push
dec
sub
dec
dec
dec
mov
jne
jmp
test
xchg
stc
pop
mov
add
jae
xchg
iret
push
push
cld
cmc
imul
push
lea
cmp
jno
(bad)
push
push
jnp
mov
ins
push
xor
jl
bound
int
das
mov
movs
aam
dec
fistp
push
mov
nop
inc
mov
xchg
mov
inc
mov
mov
push
jle
mov
out
mov
xlat
gs
jmp
arpl
mov
js
jge
mov
adc
adc
scas
lock
test
sbb
mov
cmp
adc
mov
sub
sub
enter
push
push
rcr
pop
jnp
cdq
mov
dec
cmps
sbb
mov
mov
out
xor
mov
repnz
dec
cmps
or
movs
or
dec
mov
cs
imul
pop
push
adc
or
add
sbb
fdivr
pusha
xchg
push
jge
mov
xchg
pushf
cmp
in
mov
dec
mov
pop
in
fstp
mov
inc
or
pop
rcl
jno
cmp
push
pop
inc
xacquire
jmp
mov
sti
mov
stos
mov
in
je
pop
inc
cmc
jo
mov
jnp
aad
fcmovbe
hlt
movs
gs
sahf
pop
syscall
inc
lods
mov
cmp
daa
fsubr
pop
js
xchg
push
stos
xor
in
into
cmp
pop
mov
fisub
retf
pop
mov
xor
jne
sbb
dec
jae
pop
psubb
mov
and
xor
push
jmp
jp
test
jge
enter
adc
nop
pop
add
fbld
lock
pop
mov
mov
mov
retf
jb
and
not
mov
add
mov
clc
inc
aad
rcr
daa
ficomp
xor
mov
mov
sub
dec
or
movq
outs
pop
cmp
inc
stos
in
in
pop
jmp
xor
xchg
mov
add
mov
sub
or
jl
ja
sub
add
mov
xchg
in
add
dec
push
js
sbb
icebp
pop
int3
pop
and
mov
add
test
inc
xchg
xchg
xchg
int
dec
mov
inc
inc
xchg
dec
das
cs
aas
mov
retf
xchg
inc
pusha
cmps
mov
jg
push
xlat
push
jo
fwait
cld
bound
shl
dec
jne
loop
and
mov
pop
aaa
cmps
adc
cli
or
adc
sub
cs
and
and
adc
mov
add
pop
sar
mov
and
pop
lods
std
fld
dec
inc
call
fadd
jmp
pop
aaa
inc
nop
jbe
data16
stos
retf
lods
mov
lea
shl
test
push
call
dec
mov
retf
and
jge
lahf
mov
push
push
lahf
adc
fs
stc
dec
add
dec
test
pusha
fmul
cmp
int
cli
test
popfw
add
or
pop
out
jge
pop
dec
into
add
enter
test
stc
cmps
jae
lahf
sbb
mov
dec
lock
icebp
scas
push
dec
pop
inc
(bad)
out
sub
push
jbe
fstenv
cld
cld
cmp
fiadd
ins
mov
mov
mov
xor
mov
pop
stc
hlt
stc
int3
loopne
sahf
test
retf
jmp
ja
js
(bad)
ret
stc
into
sub
shl
inc
ins
shl
or
stos
pop
mov
adc
cs
sbb
cmp
jb
aaa
jnp
jns
cmps
imul
aad
dec
or
xlat
inc
bound
rol
int3
loopne
adc
rol
pusha
add
inc
cdq
push
js
test
inc
(bad)
jmp
push
xchg
sti
fwait
adc
xchg
lds
xor
lods
mov
mov
sbb
dec
out
or
add
loopne
je
add
sbb
fst
scas
xor
mov
mov
mov
cld
sub
or
popf
retf
rcl
and
int3
adc
pop
mov
cmp
icebp
fild
xor
aad
cmp
adc
imul
jb
out
setno
jg
lahf
and
sbb
das
and
iret
outs
sub
or
call
or
pop
test
stos
jb
icebp
mov
push
rol
and
inc
mov
pop
and
mov
daa
loope
test
dec
mov
or
mov
stos
dec
div
push
push
movs
fmul
and
(bad)
xchg
xor
imul
fst
inc
cwde
(bad)
rol
adc
popa
jecxz
gs
jnp
pusha
stos
outs
cmps
dec
pop
int
stos
retf
bound
add
movs
or
and
hlt
or
mov
rcr
rol
xchg
mov
ss
push
sahf
mov
outs
sub
mov
fs
ret
leave
fsubr
xchg
and
loopne
adc
sub
xchg
(bad)
ficomp
imul
pop
push
ds
ret
call
mov
add
mov
push
mov
jl
nop
jge
mov
xlat
pop
or
ins
cmp
ret
(bad)
pop
mov
mov
add
push
leave
mov
xchg
aaa
jne
add
(bad)
mov
outs
iret
inc
cmp
(bad)
push
xchg
popa
hlt
sub
sub
ss
mov
xor
cmp
lods
fprem1
cli
imul
push
fs
jb
adc
jmp
adc
mov
arpl
loopne
bound
push
and
cmp
hlt
arpl
lods
out
or
loopne
sahf
sub
scas
out
cmp
movs
loopne
and
fld
sub
jecxz
push
(bad)
sbb
ds
xchg
sbb
push
pop
iret
out
ficomp
adc
clc
out
sub
inc
dec
pusha
shl
or
stos
cld
inc
cli
cmp
dec
fstp
cmp
loopne
(bad)
pop
push
add
mov
adc
push
xor
leave
inc
(bad)
jns
mov
jbe
movs
xor
popa
cwde
test
enter
add
stc
popa
or
lods
call
ins
mov
(bad)
int3
(bad)
pop
pop
xor
sub
call
fimul
stos
jne
sub
stc
movs
rol
inc
imul
mov
stos
sbb
je
and
push
xor
xor
pop
shl
in
pop
pop
fdivp
repz
in
sub
(bad)
sti
hlt
xchg
frstor
sbb
xor
jmp
cmp
add
aam
cmc
push
mov
out
mov
mov
pop
clc
sub
xchg
mov
inc
adc
jecxz
out
aad
iret
or
(bad)
movs
mov
and
xor
pop
xor
stos
inc
out
jg
inc
and
sbb
lahf
das
and
mov
xlat
mov
mov
mov
dec
mov
fcomp
test
inc
inc
dec
mov
inc
xor
push
aaa
fnstcw
loopne
sbb
cmc
jno
retf
xchg
push
jnp
adc
mov
mov
mov
push
xor
nop
mov
test
sub
adc
pusha
hlt
inc
pusha
inc
push
retf
cmc
dec
dec
(bad)
scas
or
or
retf
sbb
cld
fst
dec
mov
lods
scas
(bad)
push
sbb
add
test
add
jecxz
rol
(bad)
push
mov
sbb
lock
jns
sub
bound
idiv
sbb
mov
cmps
and
xor
stos
add
push
shl
aas
adc
pop
retf
fadd
jg
xchg
outs
adc
mov
xchg
pop
popa
add
jmp
push
out
dec
stos
dec
into
dec
inc
out
in
push
and
mov
sub
cmp
mov
fcmove
jnp
scas
sub
cld
mov
ror
mov
lock
sub
stos
fstp
inc
cmp
sbb
cmp
inc
adc
sub
nop
mov
sbb
in
jo
push
mov
mov
shl
out
fld
jnp
mov
mov
jecxz
fstp
popa
lods
fwait
cmp
js
or
dec
push
out
pop
sub
lock
loope
pop
std
loopne
test
dec
jnp
je
loope
movs
ja
stos
mov
push
mov
call
xor
outs
ins
mov
jmp
(bad)
xchg
ss
fs
mov
std
fld
jge
xchg
xlat
pop
and
adc
cmp
js
jne
pop
inc
pusha
jae
imul
scas
mov
pusha
(bad)
jo
sub
mov
mov
mov
std
jge
pusha
inc
sub
cld
cmovnp
sbb
add
stos
test
push
jl
sub
cs
sub
call
jge
adc
xor
jne
repnz
xor
icebp
push
xor
and
aaa
dec
fisttp
cli
mov
xchg
and
and
sub
cmp
mov
adc
mov
xchg
add
pop
or
rol
mov
inc
jno
push
inc
cwde
sub
push
push
lods
sbb
jmp
mov
mov
sbb
jno
cmps
inc
jae
ret
stos
mov
loopne
mov
jnp
frstor
push
jecxz
cmps
aad
call
in
push
mov
(bad)
cmps
nop
sbb
jp
jnp
lods
cmp
sub
jge
pushf
add
out
imul
sbb
mov
ret
and
call
shr
push
cmp
loopne
pop
std
cmc
repnz
sub
inc
adc
outs
mov
fcomip
sbb
dec
(bad)
jg
outs
pop
fist
test
test
mov
push
xchg
jmp
loopne
mov
popa
add
fistp
loopne
jle
xor
mov
inc
arpl
dec
xchg
into
jb
push
ins
fdiv
xor
(bad)
(bad)
leave
cmps
in
cmp
and
sub
pop
test
aam
sti
pop
pushf
pop
inc
xor
jmp
jmp
xlat
pop
fldcw
pop
add
outs
(bad)
fsubp
pop
loopne
cdq
ins
stos
retf
rcr
fsqrt
dec
xor
mov
pop
test
rol
push
fisttp
lahf
xchg
inc
add
cli
jmp
outs
in
stos
pop
mov
mov
cmp
lahf
mov
dec
dec
scas
cmp
mov
mov
pop
push
aam
cmps
addr16
cld
pop
dec
setle
mov
xor
sub
xor
fs
into
dec
cmp
outs
idiv
outs
fcmovnbe
test
stc
mov
pop
and
jl
mov
in
das
cld
dec
outs
dec
jmp
movs
adc
ror
cmp
lds
add
xchg
aad
mov
jo
xor
push
cmp
mov
jle
loope
inc
push
adc
fisubr
aad
daa
sbb
lock
outs
stos
aad
sbb
ins
scas
(bad)
mov
mov
pop
jp
or
mov
pop
gs
mov
lock
cs
(bad)
cmp
mov
frstor
clc
fwait
rcl
aad
adc
lahf
pop
es
mov
retf
out
out
cld
ds
jmp
xchg
sub
test
cdq
push
adc
sub
mov
rol
lods
dec
fistp
mov
leave
pushf
not
xchg
mov
repz
movs
push
pop
aas
add
sahf
test
mov
xor
stos
imul
int3
(bad)
fsubr
mov
aaa
mov
jne
cmp
adc
fcomp
leave
adc
clc
mov
inc
or
mov
mov
mov
popf
out
push
jl
out
repz
out
out
jno
jns
dec
icebp
ja
scas
jb
fbstp
or
cmc
cmp
xchg
xchg
outs
sar
xchg
icebp
pop
mov
mov
jmp
nop
mov
cmp
ret
mov
inc
div
push
mov
mov
sub
nop
add
or
mov
push
stc
inc
and
jo
cmp
hlt
ds
call
ror
dec
jns
fsubr
dec
sbb
xchg
mov
jecxz
add
sub
dec
dec
xchg
push
stos
pop
lods
adc
adc
enter
lds
jp
and
mov
popa
aam
jmp
test
sbb
mov
xlat
jge
clc
leave
in
stos
jno
inc
test
inc
push
pop
aaa
fld
out
inc
dec
xor
(bad)
xchg
dec
dec
cmp
mov
stos
mov
fidivr
mov
repz
ja
ss
cmps
xchg
jno
inc
jle
add
mov
xor
fwait
(bad)
cmp
add
test
retf
dec
xchg
xchg
mov
(bad)
mov
je
add
push
outs
jnp
lods
or
adc
mov
in
adc
push
mov
xchg
stos
(bad)
in
fcomp
int
ins
sbb
dec
push
or
stos
pop
sbb
cmp
out
dec
mov
or
in
(bad)
jge
pop
test
shl
aas
out
dec
fimul
pusha
or
arpl
pop
push
ins
pop
push
jge
adc
mov
shl
add
pop
je
push
call
rcl
sbb
es
push
mov
dec
ins
movs
xchg
lods
jle
cmp
cli
push
into
leave
cs
(bad)
xchg
clc
loop
fwait
fs
(bad)
int3
shl
mov
into
rol
clc
imul
sbb
jmp
fcmovne
lods
jns
dec
imul
or
push
mov
jb
std
push
fisub
sub
push
mov
mov
mov
pop
icebp
test
inc
movs
cmp
xchg
mov
test
lods
lods
jno
std
and
or
adc
int
cmp
fwait
js
mov
std
aaa
cmp
sbb
lea
(bad)
cmp
cmp
sti
mov
imul
or
fistp
cmp
mov
push
mov
jmp
sti
xor
(bad)
jae
stos
jne
int
add
jnp
cs
inc
adc
lods
cdq
out
mov
ror
out
fidivr
repz
lods
or
shl
and
or
adc
sbb
in
stos
in
ins
push
mov
jae
or
cwde
inc
clc
ss
jbe
push
xchg
cmp
mov
xor
imul
enter
and
addr16
test
pop
mov
xchg
cmp
and
pop
sbb
inc
add
push
mov
arpl
mov
ret
inc
cmps
jno
enter
out
mov
or
bound
push
bnd
mov
adc
xchg
xchg
push
cmp
ds
dec
sub
(bad)
cli
or
sbb
scas
and
fidiv
and
cwde
mov
dec
and
and
jb
cmp
mov
xlat
fsubr
sbb
push
je
mov
add
inc
mov
and
stc
mov
jbe
jbe
dec
popa
add
add
dec
(bad)
or
(bad)
adc
dec
push
dec
mov
jp
push
es
and
sub
xor
std
clc
jo
jp
pop
or
xchg
xor
sbb
test
out
sbb
push
pop
cmp
sub
jne
mov
push
jno
cdq
xor
fbstp
repnz
in
mov
stc
mov
and
aad
dec
push
xchg
in
push
mov
sbb
mov
jecxz
fwait
sbb
push
das
push
sbb
mov
fs
or
cdq
dec
sbb
icebp
jae
pop
cmp
aaa
cli
fcmove
or
xchg
mov
and
hlt
(bad)
sub
outs
push
and
pop
sbb
ins
push
out
ins
adc
outs
xchg
cmp
sbb
dec
jae
cmc
push
xchg
(bad)
mov
inc
es
test
jge
lods
add
fisubr
(bad)
adc
(bad)
or
out
push
mov
cmp
arpl
loopne
js
xchg
mov
imul
shl
rol
cmps
daa
mov
mov
out
in
fs
jo
adc
add
shl
jmp
jge
push
mov
jecxz
in
popf
dec
xchg
sub
in
shr
fs
mov
mov
jnp
scas
scas
fisubr
sti
loopne
mov
push
push
out
cmp
mov
les
inc
lds
push
enter
pop
ins
icebp
leave
jp
mov
push
inc
lea
pop
xchg
jae
aam
jle
out
xchg
mov
(bad)
and
mul
mov
sahf
nop
repnz
add
std
mov
xchg
dec
xlat
faddp
sub
or
pop
add
inc
pushf
xchg
cwde
fisub
xor
pushf
aas
dec
(bad)
xchg
push
jl
xchg
add
rcl
inc
(bad)
cdq
add
xor
aad
pop
cmps
(bad)
(bad)
call
retf
imul
in
cmps
out
sti
mov
xor
out
cmp
sub
mov
sub
push
jg
setns
test
(bad)
mov
aam
mov
int
mov
jecxz
and
test
sbb
adc
jnp
dec
xchg
fnstcw
or
out
add
rcr
ret
test
ins
pop
dec
es
ret
jp
rol
xchg
lock
adc
or
jb
sbb
push
sub
daa
popf
xlat
jne
push
dec
cmp
in
retf
ja
or
(bad)
mov
hlt
js
sbb
aam
out
inc
ret
ret
jmp
push
stc
dec
in
out
fs
mov
mov
fcomp
mov
scas
inc
inc
cli
mov
push
xor
dec
add
mov
sbb
jp
iret
or
jns
into
inc
out
mov
out
inc
add
sub
arpl
sbb
pop
or
nop
mov
lods
adc
add
mov
out
shl
test
jp
pop
and
push
ret
fldenv
jo
mov
imul
mov
retf
jl
test
les
mov
bound
out
(bad)
adc
and
test
aad
inc
pop
pop
cmp
lock
and
push
out
stos
mov
jmp
cmp
mov
fidiv
push
cmps
adc
and
cmp
dec
shl
mov
inc
xchg
jb
ins
and
mov
jb
mov
iret
mov
leave
push
sbb
or
les
ins
mov
movs
xchg
add
mov
call
and
shl
shl
jg
mov
fsub
shl
xchg
(bad)
push
xor
jp
out
jmp
add
lods
ins
mov
repnz
inc
sbb
xor
stos
repnz
mov
mov
fwait
xchg
push
cmp
jl
jns
dec
pop
or
repz
xchg
out
xlat
add
jae
jmp
push
sbb
and
jge
push
sub
ss
popf
fist
daa
aaa
cld
or
cmps
pop
lods
mov
mov
mov
xor
mov
scas
repz
in
cmp
sbb
jmp
in
fstp
add
xchg
push
test
and
ds
fidiv
xchg
cdq
or
(bad)
and
popa
test
fwait
inc
shl
test
ins
cmps
call
movs
rcl
out
mov
ret
add
cdq
loop
test
sbb
xchg
xchg
push
jo
mov
cmp
mov
int3
xchg
mov
sub
or
fnstcw
dec
cmc
sbb
pop
add
lahf
addr16
loop
mov
ins
test
xchg
add
mov
jge
loop
sub
xchg
icebp
adc
dec
pop
mov
dec
push
push
hlt
push
jmp
gs
sub
je
xchg
mov
push
(bad)
adc
push
xor
ret
jg
dec
sbb
iret
sti
mov
test
movs
cmp
jl
inc
sub
and
aaa
fsubr
lock
push
or
sub
cmp
fist
push
retf
in
sbb
jmp
mov
or
mov
ins
leave
push
xchg
inc
pop
cld
add
cmp
mov
inc
leave
test
lods
enter
jae
dec
mov
stos
and
pop
es
and
mov
retf
or
stos
aas
jle
loop
jmp
adc
cmps
in
shl
jg
add
or
xchg
out
scas
push
lods
popf
jb
test
nop
dec
stos
ds
ja
loopne
pushf
inc
dec
(bad)
cmp
stc
lods
hlt
adc
push
jmp
and
repz
mov
and
sbb
jmp
out
sub
mov
sub
cmps
scas
int3
push
add
ret
shr
add
push
mov
(bad)
les
in
(bad)
daa
mov
pop
cmp
jl
sti
jl
jg
aad
adc
imul
in
or
icebp
add
inc
test
movs
ret
call
aas
sbb
mov
mul
or
and
cmp
inc
mov
std
sub
adc
jae
xor
mov
ss
repz
leave
add
sahf
out
lock
jg
ins
aam
dec
ror
add
sub
shr
push
jns
(bad)
scas
inc
out
pop
xchg
adc
bound
(bad)
shl
or
pusha
ds
mov
mov
adc
mov
call
mov
lds
pop
mov
ja
addr16
jle
push
popf
jb
test
jnp
rcl
inc
push
xchg
retf
out
imul
dec
loop
imul
add
imul
aas
(bad)
jg
(bad)
adc
xor
pop
cmp
outs
or
sub
xchg
bound
pusha
jne
push
sahf
xchg
jge
or
repz
mov
mov
pusha
cmp
lds
xor
sub
sub
cmps
push
jmp
dec
call
pop
xor
push
sbb
sub
or
xchg
cmp
mov
ss
out
add
iret
pop
xor
fldenv
maxps
movs
xchg
mov
cdq
fnstcw
rcr
mov
cmp
inc
pop
retf
mov
and
ror
dec
bound
cs
jne
outs
sahf
xor
push
xor
add
std
cld
xchg
shl
das
aad
sub
push
add
sbb
cwde
adc
lods
mov
and
jg
jb
inc
popa
add
dec
add
mov
movs
inc
clc
lock
adc
cmp
out
xor
mov
cmp
inc
div
js
les
mov
(bad)
cld
jbe
rcl
inc
and
xor
jnp
cmps
inc
in
inc
ss
scas
in
sub
jl
sahf
cmp
xchg
inc
fistp
xor
mov
add
into
add
push
cmps
ss
int
dec
mov
xchg
cmps
add
daa
sbb
pop
icebp
adc
xor
imul
sti
out
fidiv
inc
fbld
xor
mov
inc
add
xchg
pop
loop
ins
xchg
mov
ins
sub
repz
sbb
ja
ss
and
stos
(bad)
aam
js
jb
sbb
mov
pop
xchg
hlt
add
add
jl
icebp
cmps
test
outs
fist
imul
fidiv
lea
out
jno
sub
mov
cmp
mov
shl
adc
add
mov
ss
xchg
in
(bad)
fstp
and
and
jae
xchg
js
retf
shr
ss
jg
mov
xor
enter
sub
in
jl
push
aam
adc
les
sbb
scas
ficom
jge
or
xor
into
sub
popf
jle
dec
mov
(bad)
adc
daa
mov
data16
xlat
cmc
iret
out
jmp
loope
ins
add
lods
inc
or
jecxz
in
inc
push
sbb
nop
ss
jbe
iret
or
cs
mov
mov
jp
jne
pop
dec
cmp
lahf
xchg
jmp
adc
fnstenv
jns
xor
sti
push
mov
push
aas
sbb
(bad)
sub
cld
pop
push
outs
inc
and
nop
test
jmp
jmpw
stc
shl
scas
cmp
sbb
jg
push
or
push
ja
add
mov
int
lea
jl
int3
ret
addr16
cwde
(bad)
mov
sar
mov
mov
test
cld
ds
daa
retf
xchg
inc
and
sbb
mov
push
jecxz
adc
xchg
or
cmc
or
xchg
sub
dec
out
and
fnsave
imul
mov
ss
mov
mov
pop
push
xor
jp
push
inc
xchg
hlt
gs
ret
dec
push
out
mov
loop
retf
inc
rcl
lahf
int
push
ret
mov
pushf
mov
dec
adc
xchg
or
movs
jne
in
mov
mov
(bad)
in
push
sti
ins
out
cmp
(bad)
xacquire
fwait
inc
inc
outs
or
push
cmp
mov
out
ret
out
sbb
xor
mov
xor
ins
int
add
test
das
test
push
xchg
cmp
(bad)
jmp
int
inc
push
cli
lds
shr
mov
(bad)
lods
sub
(bad)
jge
add
ins
adc
jae
cmp
sbb
mov
xor
shr
push
fiadd
and
cli
ins
leave
pop
sti
xchg
jmp
ret
pop
iret
mov
pop
adc
movs
arpl
dec
ret
(bad)
call
and
adc
outs
enter
shl
sahf
mov
xor
pushf
push
mov
in
ds
int
or
loopne
mov
cmps
jl
mov
and
pop
sub
loopne
pop
arpl
out
jg
clc
mov
add
or
rcr
pop
stos
inc
dec
jle
fist
lahf
cmp
push
test
mov
pop
or
xchg
retf
(bad)
or
jmp
retf
ja
mov
mov
imul
rol
(bad)
jno
push
fst
hlt
sbb
dec
xchg
into
and
mov
jae
inc
mov
lea
adc
int3
aam
push
add
hlt
sbb
cmp
or
push
pop
pop
mov
cs
xchg
mov
jg
shl
imul
in
je
shl
(bad)
in
retf
sti
sub
sti
fadd
in
mov
test
xchg
and
icebp
aad
pusha
sbb
in
iret
adc
dec
or
test
out
test
bound
aas
dec
push
add
data16
or
gs
mov
cmps
fxtract
sub
cmc
push
vrcp14ss
ret
dec
mov
add
pop
xor
pop
cmp
xlat
aad
mov
xchg
cs
xor
or
mov
cmp
inc
and
arpl
inc
fxch
test
cmp
cmp
xchg
sbb
(bad)
das
sbb
ficom
cmp
xor
js
fstp
adc
shl
clc
(bad)
inc
cmp
push
jns
mov
aaa
sub
xchg
cmp
xchg
inc
jg
test
int3
push
mov
in
dec
xchg
push
jle
leave
aad
retf
out
sub
mov
mov
seto
cmp
hlt
jb
cld
aam
fstp
out
ja
sub
es
test
cmp
test
push
push
mov
sub
adc
mov
adc
inc
cmp
test
jne
movs
js
int
sub
(bad)
xchg
test
dec
or
daa
cmp
and
mov
or
inc
nop
test
sub
push
xchg
shl
les
xor
(bad)
mov
scas
fcmovnbe
ss
mov
movs
push
lods
stc
mov
loopne
jno
mov
cld
sbb
(bad)
pop
in
mov
mov
out
ins
popa
cmp
inc
mov
inc
cmc
jne
pop
or
inc
ret
mov
sbb
shr
xchg
(bad)
out
adc
sbb
inc
icebp
shl
popf
jg
loop
hlt
xor
inc
fadd
mov
mov
inc
pop
fs
xchg
mov
jnp
or
xchg
(bad)
movs
xchg
adc
adc
out
hlt
out
aas
xchg
add
test
test
adc
mov
popa
mov
hlt
mov
lock
addr16
sbb
imul
mov
xor
in
pop
pop
cmp
mov
scas
rol
mov
adc
push
push
scas
sar
xchg
inc
in
stos
in
push
push
loopne
inc
loopne
ffree
popf
mov
jle
pop
js
fsub
lods
dec
je
cmp
jae
mov
mov
(bad)
push
aas
or
mov
xchg
or
ds
test
xlat
pop
mov
jno
xchg
jno
jno
mov
mov
cwde
xor
push
pop
xchg
ins
mov
sub
(bad)
into
sahf
mov
mov
jle
pop
mov
pop
icebp
push
cmp
push
cs
xchg
xlat
neg
aas
jle
inc
mov
sar
xor
call
dec
into
(bad)
adc
or
push
mov
or
push
aam
fnstsw
mov
jmp
jnp
jnp
fmul
mov
mov
jmp
mov
fisttp
(bad)
not
dec
pop
push
lahf
in
aaa
xor
addr16
sub
fadd
jecxz
sub
neg
xlat
test
or
push
add
out
push
adc
sbb
and
xor
icebp
ret
cmp
jle
mov
jmp
mov
ins
ja
rcr
es
add
xchg
ss
push
lea
outs
leave
pop
push
outs
dec
mov
mov
fimul
in
jp
fdivr
pop
int3
shl
sbb
xor
adc
nop
lock
into
pop
ds
xchg
mov
push
loopne
mov
mov
neg
xchg
fild
addsubps
in
xor
push
mov
add
lds
inc
xor
xchg
dec
loope
cmps
mov
pop
jl
dec
dec
adc
call
jno
cdq
sbb
mov
pop
jmp
or
pop
daa
jns
and
mov
(bad)
xchg
and
mov
sub
ins
jns
push
jno
vphadduwd
mov
xchg
push
scas
lds
mov
push
stc
and
push
call
outs
pop
(bad)
repz
int
sub
in
push
jle
xor
fsub
ret
fimul
scas
sbb
push
sub
pop
jns
rcr
nop
or
cmc
(bad)
push
sbb
and
frstor
jno
push
loopne
sbb
dec
data16
xor
stc
cdq
push
sahf
shr
inc
fwait
inc
sub
jns
into
push
and
jmp
add
addr16
or
mov
pop
inc
sub
mov
pop
jb
xchg
lock
xor
or
xchg
in
jmp
imul
stos
push
sub
mov
sbb
adc
cld
mov
adc
into
loop
and
imul
in
scas
in
aaa
je
jmp
xchg
test
cs
pop
lock
pop
nop
xchg
jb
push
ins
lock
mul
fisub
adc
dec
push
pusha
int
movs
scas
adc
scas
pusha
stos
mov
ret
mov
add
push
pop
out
lods
mov
mov
jo
es
mov
(bad)
stos
and
jl
xor
lods
and
enter
and
and
xor
mov
adc
sub
rol
repz
xor
cmc
push
mov
push
push
mov
out
je
xchg
jg
sbb
sub
cmp
cmp
xor
stos
xchg
imul
push
js
and
mov
pop
scas
out
jns
cdq
ret
hlt
dec
retf
movs
jne
jo
pop
repnz
pop
xlat
mov
mov
mov
mov
xchg
data16
cld
in
jns
and
sbb
fucom
pop
push
cmovp
or
jb
retf
jno
adc
jb
mov
ins
nop
std
in
pop
and
cmp
aam
fsubrp
mov
jbe
cmp
push
cmc
xchg
mov
clc
bound
test
outs
adc
rcl
pop
xor
daa
mov
repnz
or
imul
pop
inc
xor
outs
mov
sub
push
(bad)
pusha
das
mov
in
fwait
ja
fnsave
div
(bad)
adc
mov
bound
lods
jge
push
sar
and
push
fabs
pushf
cmps
pushf
das
adc
in
and
and
cmp
fisub
mov
das
imul
and
pop
(bad)
scas
addr16
mov
add
jnp
jp
adc
popf
popa
xlat
cmp
aaa
adc
add
mov
sub
stos
ss
movs
scas
ss
cmp
das
sbb
pusha
outs
inc
cs
ins
adc
(bad)
jle
mov
dec
inc
pusha
or
inc
cmc
cwde
out
push
push
aam
rep
movs
jp
imul
pop
sub
mov
jns
cmp
loope
sbb
cmps
retf
pop
mov
sbb
pop
movs
icebp
inc
sub
retf
cmp
stc
cmp
in
jp
sub
hlt
xor
out
push
sub
data16
push
mov
test
push
aas
ja
aad
mov
or
test
jle
bswap
and
not
inc
inc
push
and
add
mov
push
pusha
push
inc
int3
int
add
test
inc
fldcw
push
xchg
test
and
cmp
xchg
add
fidiv
sbb
jnp
nop
push
dec
loopne
cmps
repnz
fist
sbb
sbb
jle
rol
xor
mov
bound
mov
push
add
ss
pop
into
scas
inc
mov
cmp
xchg
addr16
shl
sti
xor
and
sub
dec
nop
lock
shl
and
jmp
in
mov
pop
icebp
inc
mov
pop
add
lea
push
pop
cmp
inc
pop
adc
mov
dec
xchg
out
rcl
in
mov
inc
inc
xchg
inc
les
mov
or
outs
out
cli
js
cmp
add
cld
loopne
sti
aaa
sti
iret
or
outs
jge
jecxz
sub
push
adc
loopne
add
mov
xchg
aam
or
leave
sub
xchg
ds
pop
adc
pusha
ins
or
aad
mov
nop
and
mov
sbb
call
push
jp
fmul
mov
mov
xchg
out
inc
loopne
shl
repnz
cld
pop
jmp
out
retf
sub
mov
mov
or
xor
jbe
mov
gs
icebp
jmp
mov
sub
cmp
in
pop
xor
lea
int
ins
bound
mov
nop
cmp
mov
aaa
out
lods
mov
xor
(bad)
in
jns
xchg
ins
(bad)
fistp
sar
dec
shl
mov
mov
nop
add
push
dec
or
pop
add
(bad)
mov
loop
call
sbb
push
ins
aam
mov
dec
nop
cmp
(bad)
sub
mov
mov
call
inc
pusha
cmp
sbb
daa
xchg
add
mov
push
inc
jb
cmp
and
fist
jecxz
sbb
test
(bad)
jle
aaa
mov
push
sub
mov
and
push
(bad)
push
fwait
retf
scas
retf
scas
icebp
retf
push
xchg
aas
stc
addr16
sub
shl
les
loop
xlat
cmp
add
ret
mov
rol
rcr
xlat
jne
cmp
data16
pop
cs
scas
fisubr
jae
cwde
cmps
test
pop
scas
repz
adc
xchg
mul
ret
pop
push
call
sbb
pop
sub
test
sbb
adc
das
dec
stc
jb
lods
pop
lock
jge
std
cmc
daa
adc
add
jne
ret
sub
pushf
mov
pop
test
or
test
ret
shl
call
push
mov
jne
lods
imul
jb
jmp
mov
pop
adc
sub
or
rcl
jmp
outs
js
adc
adc
and
adc
aas
(bad)
(bad)
out
loop
mov
aas
mov
lock
enter
jno
jbe
cmp
mov
icebp
xchg
cmp
jle
pop
pop
fwait
movs
inc
mov
push
xchg
test
loop
mov
call
shl
scas
repz
pop
cs
dec
out
movs
jp
test
lods
pop
push
xchg
popf
popf
out
(bad)
call
(bad)
repz
popa
call
push
js
ins
out
loope
das
out
push
in
mov
sub
sub
mov
mov
jo
or
dec
lods
jbe
mov
mov
ins
ja
daa
xchg
cmp
(bad)
mov
mov
push
icebp
or
neg
add
xchg
push
cmp
xor
fwait
mov
pop
loopne
cwde
loope
adc
mov
loopne
aad
aas
mov
int
out
shl
fwait
sub
sbb
nop
icebp
jno
lods
push
mov
mov
xor
inc
add
in
(bad)
push
pop
cmp
mov
or
movs
or
mov
jae
pop
and
mov
fnstcw
call
pop
jno
ret
mov
popf
and
or
mov
std
sub
xchg
xchg
pusha
call
adc
jmp
retf
mov
jg
xor
ds
push
lds
inc
mov
xor
das
and
das
pop
test
movs
jge
cli
jb
fsub
lds
(bad)
aaa
dec
and
jecxz
enter
outs
les
cmp
movs
sbb
cdq
dec
adc
mov
clc
push
add
hlt
pop
mov
popa
push
in
arpl
out
mov
push
pop
jmp
push
cmc
sbb
call
jns
cmps
test
ja
aaa
adc
std
and
or
retf
loop
push
mov
cmps
jg
dec
pop
fimul
cdq
jg
in
(bad)
leave
popa
xor
in
loop
inc
movs
clc
mov
sbb
cmp
mov
push
cmc
jecxz
push
scas
or
xor
in
and
pop
pop
fsub
sub
pop
nop
mov
jbe
js
xchg
jbe
fs
mov
mov
mov
pop
fdivr
(bad)
push
retf
scas
cmp
cmps
xor
rcl
mov
jmp
sub
das
popf
sti
and
inc
inc
pop
pop
or
push
loop
adc
sub
in
daa
cmp
loopne
hlt
jg
aas
cmp
cmp
mov
rcr
pop
in
push
movs
xor
jae
call
cmc
dec
out
push
mov
lock
nop
cwde
xchg
gs
mov
mov
addr16
and
cwde
sub
mov
and
inc
mov
mov
rol
xor
mov
xor
sti
pop
mov
jno
jmp
dec
iret
std
ret
jo
inc
xor
inc
and
out
or
das
fistp
(bad)
xchg
idiv
xchg
adc
dec
mov
inc
jnp
lock
mov
imul
dec
xchg
(bad)
cmps
(bad)
cld
mov
mov
xor
pop
pop
xchg
(bad)
pop
and
call
das
(bad)
push
in
mov
les
outs
push
imul
or
shl
in
out
in
xlat
add
push
mov
pop
loope
js
hlt
xor
ror
mov
inc
int
movs
mov
cld
xor
jae
mov
rcl
(bad)
les
gs
sbb
and
into
in
ret
cwde
pop
xor
xchg
pop
icebp
jg
data16
out
adc
mov
repnz
mov
jbe
dec
mov
push
inc
movs
mov
push
xor
xor
adc
pop
mov
xlat
cmp
cli
push
imul
xor
xchg
mov
jecxz
(bad)
xchg
pop
out
xchg
pop
test
and
dec
lock
mov
loopne
cmp
push
mov
push
inc
add
in
xchg
ds
jbe
or
mov
rcr
xor
mov
leave
pop
das
shr
push
ret
jno
pop
test
repz
(bad)
into
aaa
into
arpl
pushf
adc
addr16
in
pop
add
or
mov
jae
mov
jo
(bad)
pushf
movs
out
retf
or
jge
call
sub
fnstenv
xlat
int3
retf
lods
or
cdq
pushf
pop
mov
mov
ins
ja
data16
push
in
mov
xbegin
jnp
mov
or
cmc
cmp
popf
mov
add
stc
jp
icebp
fbstp
pop
xchg
pop
fidiv
mov
nop
pop
icebp
inc
pmuludq
jmp
call
cmp
push
jae
shl
cld
(bad)
sub
jmp
sub
push
stc
rcr
jmp
(bad)
and
dec
and
sub
ror
and
mov
pop
push
fcos
sub
ds
fst
pop
cmp
mov
xor
icebp
push
imul
call
div
cmp
jno
ins
stos
cmp
in
or
lahf
jmp
dec
jmp
jp
fs
ret
movs
dec
rcr
push
test
retf
mov
cmp
popa
mov
jecxz
test
int3
nop
shr
movs
mov
cli
addr16
cmp
nop
sub
jge
in
or
xor
test
dec
outs
lods
stos
or
imul
add
mov
push
fimul
xchg
xchg
pop
movups
push
pusha
lods
mov
cmp
loopne
xor
imul
cs
mov
mov
stc
arpl
sti
pop
jl
fisubr
into
call
test
out
add
dec
cmp
rol
and
or
adc
push
mov
sbb
pusha
mov
(bad)
mov
std
push
nop
(bad)
sahf
or
int
mov
daa
scas
jnp
or
and
daa
mov
out
loop
and
pop
cmp
mov
mov
xor
hlt
add
push
push
ficomp
pop
pop
lahf
mov
nop
mov
cmp
or
sub
push
mov
hlt
mov
and
outs
xor
fwait
push
push
jno
dec
inc
sbb
jns
out
inc
jae
popa
addr16
in
sub
dec
jge
outs
adc
push
mov
in
aas
dec
test
cmp
sahf
or
js
mov
sbb
repnz
js
cmp
sbb
or
ins
fsub
inc
mov
daa
adc
jbe
ror
xchg
push
dec
test
loope
add
stc
sub
lods
jl
imul
push
jmp
sbb
ss
sub
test
leave
test
mov
mov
dec
movs
mov
cmp
mov
cdq
rol
clc
adc
aaa
or
pop
ret
sub
bound
xor
stos
xor
pop
mov
rcr
jl
mov
stos
hlt
mov
sub
mov
loop
test
dec
and
or
cwde
(bad)
lahf
sbb
cmp
sub
jb
cmp
stc
mov
pop
and
(bad)
call
push
adc
pop
clc
test
addr16
retf
popf
mov
icebp
add
cmc
ds
addr16
shr
jnp
aaa
jnp
sub
out
mov
sbb
pop
movs
cwde
jecxz
shl
jb
loop
sub
in
push
inc
jb
(bad)
fmul
sub
fcomip
cmp
dec
fcom
not
mov
outs
pop
int3
cmp
lahf
pop
aam
jo
pop
sar
out
imul
add
jb
jmp
jl
outs
sub
and
pop
and
fadd
std
mov
in
retf
(bad)
mov
xchg
retf
loope
push
mov
sbb
xor
inc
shl
ss
movs
add
clc
leave
adc
ret
cwde
jo
dec
sub
ret
mov
jns
cmp
in
xchg
ja
pop
pop
jne
or
sub
pop
mov
pushf
pushf
adc
and
xchg
dec
dec
adc
nop
sbb
dec
stos
retf
test
jo
mov
test
rcl
jle
or
ret
outs
or
cwde
ss
xchg
out
scas
lds
xor
mov
sub
jae
cmp
xchg
push
repz
xor
jnp
mov
popf
out
pop
aam
cmovns
fcom
call
push
adc
jle
jno
cmp
scas
cmp
cmp
(bad)
jecxz
jne
gs
imul
pushf
add
imul
pop
jb
ins
dec
cdq
xchg
adc
std
mov
mov
and
fcom
sti
dec
inc
test
mov
stos
pop
or
jbe
jbe
mov
xor
sbb
add
add
xor
test
jb
scas
dec
mov
rcl
adc
cs
xor
mov
push
rcr
rol
movs
sbb
lods
sti
jmp
lds
fbstp
or
popa
lock
wrmsr
popa
ss
mov
call
sbb
sbb
imul
aaa
mov
cld
(bad)
(bad)
pop
clc
fmulp
push
xchg
xchg
pusha
int3
das
aad
dec
test
fcom
sub
in
jmp
leave
cmp
(bad)
xchg
sti
cld
repnz
mov
mov
addr16
shl
out
push
push
outs
push
lds
jg
(bad)
xchg
adc
push
ins
sbb
adc
inc
loopne
ds
clc
arpl
lods
sti
jmp
cs
mov
cmps
test
hlt
div
jmp
clc
cs
xchg
inc
fistp
fwait
or
inc
dec
sbb
shl
aam
cmp
sub
inc
and
lahf
sbb
fstp
gs
cmp
cmp
pop
adc
cmp
(bad)
push
mov
retf
push
fucomp
rcl
inc
ins
mov
fstp
rcl
or
pushf
idiv
arpl
repnz
dec
dec
push
jns
test
mov
adc
xor
mov
test
jle
jmp
loopne
pop
jmp
jmp
cdq
aas
fiadd
push
mov
scas
push
mov
add
mov
outs
pushf
push
(bad)
int
jecxz
cwde
lahf
retf
int
fbld
xchg
call
sar
cmc
jne
lea
das
or
sti
in
or
aas
jle
xchg
pop
jns
test
xor
aaa
inc
and
inc
jge
dec
rcr
push
xor
pop
out
push
cs
idiv
out
sti
cli
jnp
addr16
rcl
jp
clc
jmp
ret
hlt
lods
repnz
sbb
stos
enter
add
mov
jmp
pushf
cmp
and
into
test
or
out
sbb
adc
fsubr
pop
add
add
or
rcr
pop
fst
scas
scas
aad
cmps
sbb
or
cdq
mov
lds
enter
push
mov
(bad)
jne
stc
mov
xchg
pop
or
inc
mov
and
add
lahf
mov
sbb
jge
inc
clc
mov
int3
fiadd
mov
cmp
cli
cmp
jle
mov
icebp
and
add
cld
(bad)
retf
nop
repnz
cld
rcr
inc
test
jg
jne
cmp
inc
cld
adc
cmp
clc
inc
add
inc
nop
push
shl
rol
mov
test
fs
jle
dec
shl
inc
in
call
sti
dec
mov
or
imul
mov
adc
cmp
and
and
mov
loope
pop
adc
sub
xchg
(bad)
push
or
push
stos
cmp
pop
or
xchg
or
call
dec
pusha
sbb
call
cmp
imul
popa
push
push
jl
or
and
mov
dec
js
pop
js
inc
mov
es
pop
lahf
add
add
adc
mov
xchg
ja
jno
cmp
push
and
xchg
cmp
or
(bad)
adc
mov
mov
pushf
shr
fild
int3
mov
mov
int
clc
dec
pop
(bad)
mov
push
nop
out
inc
nop
add
jns
cmps
out
rcr
fdivp
or
call
mov
sbb
xchg
mov
(bad)
jg
setnp
std
call
adc
xor
and
adc
ja
stos
mov
aad
leave
sub
imul
push
repz
cmp
push
cmp
and
cmp
mov
repnz
test
pop
jp
add
dec
gs
out
fmul
mul
icebp
dec
cwde
xor
cmps
enter
cwde
mov
mov
push
stos
dec
retf
inc
dec
div
cmp
dec
fmul
adc
mov
mov
push
movs
xchg
sbb
xchg
cs
(bad)
push
in
fdivr
repnz
out
std
mov
bound
js
xor
jecxz
fistp
xchg
push
je
dec
xor
out
xor
xor
cmps
jmp
xchg
xor
pop
test
push
(bad)
ja
cmps
int3
xchg
mov
mov
push
shr
repz
or
adc
(bad)
in
repz
pop
ror
fistp
push
sub
mov
add
mov
and
jge
jb
dec
jns
ret
xor
xchg
mov
setbe
cdq
out
ins
push
mov
mov
ret
popa
add
iret
pop
sub
jmp
pop
sub
lods
mov
inc
xchg
mov
sub
cmp
loopne
fbld
add
mov
retf
pop
fnstenv
dec
mov
popa
ret
add
dec
jbe
dec
cdq
ficom
test
(bad)
repnz
movs
or
retf
jp
(bad)
xor
xor
fimul
sti
or
cld
xor
(bad)
(bad)
and
call
call
pop
aaa
ret
jmp
leave
test
dec
inc
cmp
pop
sub
cmp
pop
out
sbb
imul
sbb
in
sub
popf
retf
and
fisub
sbb
inc
mov
mov
sub
loop
sub
outs
sub
push
push
aad
inc
cvtpi2ps
pop
jle
cs
jbe
add
xor
sub
or
mov
lods
cmps
loope
jb
lock
inc
inc
test
mov
ja
add
mov
(bad)
jecxz
mov
mov
push
(bad)
pop
jno
ja
mov
xchg
repnz
adc
test
ret
sahf
pusha
fsubrp
hlt
sti
pop
xor
add
adc
loop
mov
jmp
lods
cmc
cmp
xor
mov
cmp
push
mov
mov
mov
scas
add
shl
bound
pop
pop
fisub
mov
arpl
dec
loope
(bad)
in
sar
push
test
mov
stos
add
cmps
jecxz
mov
aas
inc
int3
sub
push
lahf
popf
retf
popf
or
xchg
(bad)
lods
test
rcr
inc
in
cmps
aam
and
ins
xor
mov
pop
fs
icebp
bound
ja
sti
fidiv
fisub
call
jge
and
cmp
dec
xor
stos
inc
pop
aam
retf
sbb
ret
mov
dec
mov
lea
pop
(bad)
mov
xor
fld
or
(bad)
cli
aad
pop
out
sbb
fisub
and
cmp
and
scas
sbb
push
mov
(bad)
jae
aam
push
jp
add
sub
add
lods
sub
imul
mov
push
and
test
stos
sti
dec
lods
mov
out
and
test
push
in
in
jae
ins
pop
shr
(bad)
js
sahf
jnp
addr16
push
(bad)
sbb
lds
and
sbb
sub
fcom
lods
arpl
pop
aaa
sub
jecxz
dec
popa
pop
xchg
cmp
dec
or
ins
mov
test
jp
lods
push
xchg
inc
sahf
(bad)
rcl
cmp
mov
push
outs
mov
movs
xchg
push
fsubr
adc
push
and
rep
in
pop
adc
aam
pusha
lds
dec
sti
popf
add
xor
nop
pop
in
ret
addr16
nop
out
(bad)
loopne
or
std
mov
mov
lea
push
xor
mov
ds
imul
adc
sub
inc
cs
sbb
push
dec
dec
adc
pop
push
ret
repz
add
mov
mov
cmovl
adc
push
mov
cld
push
scas
push
sbb
sub
hlt
scas
fsub
adc
inc
inc
popf
or
or
es
movs
xchg
das
xor
inc
ds
sbb
lods
(bad)
lea
popf
dec
jmp
xchg
loopne
mov
jecxz
push
cld
js
cmps
imul
rcl
sar
adc
ins
pop
jecxz
dec
or
in
or
and
es
and
push
mov
xchg
test
aaa
mov
ret
jne
mov
pop
xchg
jnp
xlat
adc
push
idiv
ror
add
sbb
mov
int
or
arpl
dec
xchg
pusha
inc
adc
or
stc
xlat
adc
aas
pop
push
les
xchg
sbb
rcl
inc
imul
mov
popf
sbb
daa
repnz
mov
mov
pusha
mov
(bad)
xchg
pop
nop
gs
inc
cmps
mov
(bad)
sbb
xchg
out
inc
aad
push
push
(bad)
cmp
enter
xchg
and
mov
cmps
sbb
test
gs
mov
inc
mov
push
icebp
loop
cmps
pop
jle
adc
out
cmp
jno
nop
mov
mov
push
mov
xchg
cmp
adc
mov
sbb
mov
iret
imul
ins
sti
iret
mov
cs
and
dec
xor
jp
xchg
inc
rcr
retf
clc
jbe
ret
adc
nop
retf
iret
std
dec
adc
test
or
inc
mov
mov
enter
aam
mov
mov
sbb
ficomp
sub
cwde
cmc
jb
int3
adc
push
xor
shl
mov
int
push
jne
sbb
fadd
pop
movs
add
std
cmp
fsin
and
imul
pop
mov
dec
movs
add
xchg
aam
fild
stos
es
jb
xchg
aaa
aad
xchg
stos
mov
pop
mov
sar
sahf
pop
in
push
jmp
and
sub
jl
jo
mov
mov
mov
stc
mov
and
xchg
ror
in
xchg
into
sub
imul
pusha
lea
gs
je
imul
sbb
call
mov
clc
aam
pop
or
mov
gs
out
lock
(bad)
mov
lods
lahf
adc
mov
mov
mov
(bad)
cmp
mov
leavew
mov
out
loope
ja
or
jae
(bad)
add
adc
shr
cli
cli
mov
sub
loop
imul
adc
add
xchg
mov
in
lods
icebp
dec
sub
inc
xchg
mov
add
pop
and
pop
and
lock
addr16
loope
mov
sbb
push
fisttp
dec
xor
mov
in
adc
dec
js
mov
mov
fimul
loop
push
outs
aaa
int3
xor
xchg
pushf
mov
ds
fs
or
imul
daa
inc
movs
sahf
ds
mov
add
push
(bad)
out
push
or
call
adc
add
out
add
sbb
xlat
sbb
sbb
mov
xchg
aad
bound
xchg
movs
or
ret
cmp
call
adc
dec
ins
mov
mov
(bad)
fdivr
jb
cmp
fwait
inc
into
rcr
(bad)
into
jge
push
and
aaa
and
xchg
xor
loopne
push
(bad)
ins
cdq
push
pop
mov
pop
cmp
(bad)
push
pop
lahf
mov
fidivr
inc
bound
mov
aad
dec
arpl
pop
in
and
es
into
lock
imul
icebp
xor
pop
gs
pop
lds
mov
mov
inc
jne
ror
push
inc
outs
leave
push
lahf
xor
dec
and
call
scas
cmp
jmp
xor
(bad)
movs
lahf
dec
pop
mov
ss
shl
aas
dec
mov
cdq
out
ins
movs
jmp
sbb
xchg
cmps
xlat
push
ins
xlat
ins
in
add
push
fsubr
lahf
jae
aas
shl
add
pop
push
int
mov
sub
loopne
cmp
xor
inc
xor
div
push
xchg
push
xchg
mov
mov
and
fcom
add
mov
adc
repnz
(bad)
je
xor
int3
xor
jle
inc
jl
sub
mov
jbe
psubusb
jg
neg
jne
mov
not
mov
mov
pop
mov
xchg
jns
cmp
lods
(bad)
repnz
loope
and
mov
mov
fmul
and
movs
shl
fstp
cmp
jecxz
or
add
inc
push
pop
xchg
add
imul
mov
push
push
outs
ret
dec
fnstenv
add
dec
xchg
sbb
imul
push
mov
dec
xchg
out
test
scas
mov
push
mov
pop
jg
and
inc
pushf
push
push
hlt
inc
into
jg
aam
mov
and
addr16
jg
inc
xor
and
inc
mov
mov
rcr
xor
das
gs
dec
cmp
pop
and
out
and
push
adc
ds
add
push
js
cs
popa
dec
sar
movs
jge
and
xor
les
jb
ror
ret
cmp
jnp
pop
ror
inc
push
fwait
movs
into
xor
mov
pushf
mov
jg
or
jmp
mov
push
fimul
xchg
mov
pop
xchg
sbb
in
aam
fcmovb
cs
jo
jp
jmp
shl
or
sub
xchg
inc
inc
pop
xor
stos
inc
icebp
lods
imul
push
(bad)
sar
pop
jp
jmp
mov
jae
jmp
ins
cmc
xor
jg
into
dec
scas
dec
out
call
mov
js
xlat
(bad)
ret
movs
sbb
xchg
cmps
movs
leave
scas
shl
and
adc
lds
push
into
xor
fidiv
cmp
outs
and
enter
in
pop
mov
ror
add
and
jge
addr16
sub
or
jg
bound
test
mov
jl
or
cmps
add
jmp
dec
adc
(bad)
(bad)
cdq
xor
xor
loop
movs
gs
sahf
mov
sbb
out
sti
retf
or
dec
stos
jmp
and
mov
dec
lock
mov
js
lahf
jmp
shr
pop
fcmovu
out
aaa
je
or
test
aam
je
ret
adc
iret
ja
pop
leave
xchg
cmp
mov
loope
sar
test
fs
cmp
repnz
leave
mov
cmps
xchg
ins
cs
push
clc
push
in
push
loope
inc
loope
shr
mov
ret
xor
dec
adc
cmp
cmc
inc
jnp
mov
mov
push
pop
syscall
adc
adc
das
or
pop
sub
pop
xchg
bound
jnp
jmp
xor
jae
cmc
xor
mov
mov
movs
(bad)
add
fnstcw
(bad)
cmps
adc
adc
jl
fist
cmp
fwait
add
jle
jmp
test
inc
sti
xor
fsubrp
sti
shl
sub
imul
outs
sub
clc
cmove
and
test
and
je
ss
fcom
loopne
or
sbb
jle
loope
push
in
xchg
add
mov
sub
dec
addr16
mov
js
cmp
in
and
aaa
cwde
dec
aas
scas
bound
outs
mov
pop
out
push
sbb
xchg
push
data16
jnp
lock
push
mov
mov
pop
daa
ins
pop
sub
idiv
and
fisttp
out
dec
inc
leave
cmps
sbb
inc
xor
mov
jmp
xchg
rol
mov
sub
(bad)
xor
inc
xchg
mov
pop
(bad)
mov
loop
xchg
aas
test
fnstsw
or
push
(bad)
sahf
arpl
retf
ficomp
fisubr
xor
dec
test
gs
fisub
jg
mov
ds
adc
(bad)
xor
fsub
data16
dec
sbb
(bad)
in
adc
jl
jle
cmc
pushf
jb
and
mov
imul
dec
int
adc
push
das
fidiv
jecxz
mov
scas
cmp
fmul
scas
mov
add
dec
push
(bad)
enter
xchg
jmp
jge
daa
sub
jb
and
(bad)
mov
ja
aas
mov
ds
fld
add
cmps
daa
fwait
jge
iret
fidiv
mov
push
mov
icebp
dec
jge
rcr
int
jle
movs
ins
cmp
fst
aaa
imul
loopne
imul
adc
xor
(bad)
dec
mov
aas
adc
mov
mov
iret
data16
popf
mov
(bad)
retf
imul
mov
or
dec
lds
adc
enter
ret
dec
rcr
pop
cwde
fcom
movs
push
rcl
xchg
sub
cmp
xor
scas
cdq
imul
or
cli
fyl2x
test
fist
hlt
call
in
jecxz
pop
and
adc
or
jne
pushf
cmc
repz
sub
dec
add
das
jb
idiv
cdq
ret
(bad)
popf
js
mov
and
adc
fild
out
dec
aas
xchg
xor
call
jo
aam
xchg
fwait
sub
bound
dec
and
loop
lea
rcr
jnp
adc
pop
add
or
xor
dec
dec
xor
mov
leave
not
int
fwait
shl
pop
push
sbb
dec
out
stos
mov
adc
bound
inc
mov
rcl
lahf
xor
enter
pop
arpl
mov
stc
adc
stc
push
jno
sub
lods
mov
dec
das
imul
enter
push
mov
aam
mov
push
mov
iret
daa
cmc
push
push
dec
dec
jne
cmp
inc
mov
stos
ror
push
ins
pop
js
out
rol
loop
xor
ret
ret
aad
xlat
call
xchg
loopne
popf
int3
retf
jno
ins
ret
sub
lods
loop
call
cmova
stos
mov
dec
sbb
or
add
sub
js
fsub
xchg
arpl
pushf
cmp
mov
inc
lds
lods
adc
mov
call
loop
mov
sub
cld
adc
fcmovne
cmps
outs
test
inc
loop
dec
loop
dec
jle
dec
adc
xor
jl
adc
xchg
mov
jmp
pop
jecxz
or
sub
sbb
out
and
mov
popa
or
add
mov
xchg
xchg
xchg
jmp
xor
sub
test
push
into
test
mov
ror
sub
lock
xchg
les
lock
test
inc
icebp
sbb
sub
movs
push
pop
pop
hlt
pop
xchg
aam
lock
xlat
xchg
lock
mov
adc
mov
je
xchg
movs
inc
xor
jns
rol
mov
sbb
pop
movs
or
cmp
(bad)
or
xor
mov
jno
jno
and
cmp
mov
call
aas
jne
dec
xchg
pop
out
push
mov
inc
outs
add
cmc
sub
cmp
shr
aas
aad
pop
add
(bad)
xor
sti
mov
cli
dec
cmp
aaa
leave
fadd
and
fdiv
dec
imul
cvtpi2ps
mov
mov
mov
xchg
push
push
ja
sub
data16
jmp
mov
test
scas
inc
call
xor
(bad)
pop
jge
(bad)
cmc
(bad)
enter
aaa
fst
push
data16
sub
in
out
pop
pushf
dec
leave
sbb
enter
(bad)
js
lahf
jo
iret
out
or
lea
adc
mov
adc
fdivr
mov
icebp
icebp
cwde
mov
ss
mov
sahf
int3
sbb
xchg
add
sbb
inc
inc
and
push
xor
js
push
or
mov
sub
out
stos
push
jnp
sub
out
in
ins
or
inc
pop
outs
xor
dec
push
nop
imul
jnp
cmp
and
lahf
and
or
dec
mov
icebp
scas
adc
int
fs
cmps
in
repnz
stc
lods
fimul
imul
fistp
sbb
lods
fisttp
mov
inc
lahf
gs
scas
and
sbb
mov
into
push
stos
sahf
add
jge
mov
xor
aas
dec
push
aaa
jno
mov
lds
push
cs
push
add
push
lods
sub
or
xchg
adc
jmp
and
sub
dec
adc
mov
dec
sbb
mov
or
and
xlat
mov
es
cmp
dec
cld
test
push
ret
cmp
stos
jno
in
aaa
sti
inc
lods
(bad)
push
daa
gs
bound
lahf
repnz
fisub
bound
mov
sub
push
sbb
fdiv
ds
push
add
std
movs
pop
cmps
jne
add
inc
fisttp
inc
sbb
lds
loope
inc
clc
rol
fisub
jbe
ins
popfw
ins
mov
sub
mov
mov
pop
stc
mov
movs
popa
mov
mov
inc
push
je
les
mov
fidiv
push
fsubr
and
cmp
sti
or
inc
fld
xchg
ds
sub
xchg
sahf
inc
pop
fadd
add
xchg
mov
or
shl
ss
inc
sbb
jne
bound
fcomip
aas
jl
jns
and
add
push
sbb
rol
sbb
jle
ss
push
pop
nop
push
pop
data16
mov
fild
mov
mov
sbb
cld
hlt
rol
dec
mov
xor
loope
mov
test
ficom
je
rcl
or
popf
push
pop
rcr
xchg
jmp
js
outs
adc
xlat
mov
out
je
mov
test
pop
push
add
mov
push
pop
dec
cmps
cmp
(bad)
repz
xor
xchg
sbb
inc
outs
add
(bad)
fmul
xchg
jae
xchg
repnz
jge
sbb
out
xchg
jne
inc
outs
cmp
xchg
cmp
ja
mov
(bad)
mov
retf
les
sub
nop
loop
ss
out
xor
mov
cmp
hlt
fsub
or
ins
xchg
cmp
retf
fcomip
fcomp
popa
jae
clc
call
inc
push
test
mov
lock
test
inc
out
bound
push
fs
imul
div
mov
ret
rol
jl
xchg
daa
mov
loopne
mov
shr
movs
mov
push
adc
mov
mov
dec
movs
and
dec
cli
sub
cmp
leave
scas
xchg
inc
mov
adc
(bad)
shl
push
lods
in
mov
jbe
(bad)
push
pop
xor
jne
stos
ins
ja
and
adc
dec
inc
lds
gs
xor
loop
mov
loopne
ss
mov
popf
in
add
icebp
jge
push
cmp
or
fcomp
push
pop
dec
pop
addr16
pop
push
enter
cmp
inc
add
jae
movs
xor
int
movs
adc
ins
fs
sbb
dec
mov
pushf
ficomp
mov
inc
sar
inc
int3
out
fs
test
daa
pushf
repnz
movs
and
dec
dec
xchg
xor
gs
inc
pop
test
jle
jmp
int3
cmp
shr
dec
and
pop
xor
jae
mov
xchg
mov
xor
mov
or
cmps
xchg
mov
sub
xchg
dec
icebp
sub
shl
pusha
popa
pop
xchg
inc
mov
fstp
in
add
mov
or
movs
push
jmp
mov
scas
in
leave
pop
cmc
push
jge
js
mov
dec
inc
dec
into
or
(bad)
int
push
cmp
test
push
push
ror
cmp
fnstcw
das
pop
xchg
and
cld
sub
mov
das
dec
test
inc
dec
(bad)
mov
xchg
jns
dec
not
cmp
ins
out
dec
push
push
test
pop
repz
jns
fs
mov
and
sahf
inc
fnsave
es
jl
xchg
inc
or
outs
cmp
push
inc
jae
adc
pop
sbb
mov
inc
aaa
mov
adc
xor
inc
mov
sub
mov
test
xchg
in
sub
movs
les
mov
in
sar
ficom
in
addr16
jmp
jno
hlt
push
dec
stos
sbb
sub
jmp
mov
test
loope
cmp
adc
cmc
jge
aas
cmc
(bad)
mov
push
clc
and
aad
mov
mov
or
push
divps
and
ret
lods
pop
and
mov
inc
lock
cmp
or
dec
or
aaa
dec
cmp
push
rcr
ds
push
sub
cmps
in
jmp
and
jb
cld
popa
lock
retf
mov
ins
push
or
call
push
pop
pop
jmp
adc
cmp
and
aad
les
mov
int
mov
push
mov
add
and
cmps
call
shl
cmp
jnp
add
into
rcl
mov
sub
bound
cmp
inc
inc
psadbw
rcl
mov
mov
or
xchg
outs
xor
test
pop
and
pop
mov
sti
sbb
data16
test
inc
xlat
sbb
pop
cmp
and
fldcw
jmp
lods
xchg
jl
aad
jge
stos
repnz
jl
repnz
pop
jmp
ss
fxam
mov
sti
pop
jl
movs
sbb
sbb
mov
mov
int
pop
ja
movaps
pop
rol
and
in
jo
and
imul
fistp
dec
and
add
sbb
jg
mov
adc
hlt
pop
fwait
add
sub
pop
xor
cmp
cld
mov
outs
in
cs
pop
inc
cli
pusha
jle
push
(bad)
cmps
in
fwait
jbe
jo
adc
xchg
jle
icebp
mov
adc
ret
popa
push
call
fldcw
sub
out
sbb
push
inc
jl
xchg
dec
inc
ins
(bad)
sbb
cmp
jp
(bad)
mov
imul
aad
add
cdq
sub
pop
jmp
ja
lds
jnp
cmp
jnp
xchg
ss
cmps
cld
cwde
movlps
jmp
ins
mov
daa
paddq
outs
mov
(bad)
clc
call
jg
cmp
xor
pop
or
cmp
daa
mov
out
jle
xchg
cmc
push
imul
xor
inc
mov
sbb
xor
xor
mov
jo
adc
adc
jns
push
sub
pop
push
pop
jb
sub
ret
push
add
or
loop
xchg
icebp
inc
fucomi
aad
lods
pop
pop
sbb
in
and
mov
fsubr
in
jmp
mov
xor
dec
cld
(bad)
push
or
iret
js
(bad)
in
jmp
pop
inc
std
push
enter
rcr
mov
mov
enter
push
add
xchg
cwde
dec
xchg
movs
xchg
xlat
and
mov
add
push
outs
mov
out
(bad)
lahf
sbb
fadd
fs
pop
sahf
sar
aaa
add
scas
(bad)
fdiv
mov
fidiv
imul
cdq
pop
stos
xchg
xor
(bad)
jb
scas
jg
jae
xor
or
sub
ret
je
fstp
ficom
iret
ins
out
dec
popa
push
sbb
add
jl
movs
nop
cmp
outs
test
pop
ret
call
vmovq
inc
cmp
inc
jl
inc
bound
call
(bad)
(bad)
outs
pushf
sub
aam
xchg
sbb
xchg
xor
cdq
movs
dec
fistp
add
mov
push
into
(bad)
jbe
xchg
fistp
rcr
dec
push
inc
std
ins
retf
sahf
pop
jae
mul
and
scas
push
rcl
(bad)
mov
dec
in
jge
or
enter
pop
daa
mov
or
leave
test
out
in
cli
adc
aaa
jnp
fisub
sub
jl
jnp
mov
mov
test
adc
inc
jmp
stc
(bad)
adc
scas
lods
cmc
inc
adc
loope
sti
aas
mov
jmp
xchg
push
jg
inc
add
push
mov
xor
xor
xor
or
xor
xchg
loopne
sbb
loop
pop
jmp
movs
mov
ins
xor
jecxz
repz
aad
into
and
pop
xchg
ins
mov
or
add
pop
pop
(bad)
jp
sbb
gs
test
leave
pop
ss
out
xchg
or
jmp
push
fadd
pop
push
das
add
imul
test
adc
pop
dec
xor
int3
std
xchg
sar
and
mov
test
push
push
jge
fsubp
mov
mov
hlt
add
cmp
or
call
pop
jp
or
adc
push
inc
fnstenv
gs
dec
xor
mov
pushf
nop
leave
or
jns
lds
es
mov
push
jmp
cmps
sar
call
and
xor
xor
gs
(bad)
nop
mov
int3
adc
adc
aam
xor
arpl
rol
dec
test
adc
jp
test
push
sub
mov
xchg
pop
ss
xor
addr16
leave
push
rol
std
lahf
adc
(bad)
(bad)
xor
mov
push
add
arpl
jne
lds
xchg
pop
repz
nop
rol
jo
dec
or
push
movs
lods
pop
jp
ror
xchg
xchg
push
jne
push
gs
pop
and
loope
xor
and
sbb
aas
push
add
outs
dec
aam
rcl
xor
addr16
jg
dec
popf
nop
mov
sti
call
add
fldcw
inc
inc
(bad)
pop
jbe
mov
dec
mov
xchg
ret
cmc
repz
test
push
adc
jmp
cld
jno
(bad)
call
sbb
xchg
(bad)
loope
xor
mov
jns
cmc
jmp
inc
imul
in
nop
retf
cwde
mov
mov
jns
mov
aaa
push
xchg
pop
pop
xor
or
cmp
aad
rcl
sub
push
mov
popa
stc
mov
sub
ss
retf
push
(bad)
and
or
ja
push
sti
xor
rol
jno
mov
stc
mov
jmp
popa
imul
retf
ins
inc
ror
or
cs
mov
dec
fmul
out
inc
nop
(bad)
(bad)
movs
xchg
and
loope
xchg
mov
pop
cmps
loop
shr
scas
add
add
inc
out
stc
jns
pop
shl
jg
xor
pop
fisttp
inc
bound
xchg
out
sub
out
mov
xchg
push
ret
sbb
icebp
not
sbb
fstp
xchg
mov
mul
cmp
and
data16
and
(bad)
movs
dec
mov
mov
or
sub
fisubr
fidiv
popf
jns
fcom
in
jae
mov
mov
psubsw
lahf
sub
scas
adc
sti
out
dec
jmp
(bad)
imul
in
pop
mov
cmp
xchg
push
test
and
mov
movs
and
sub
jecxz
lea
ins
cmps
gs
xchg
xor
or
push
fwait
mov
xchg
or
retf
lea
sar
inc
dec
cmp
push
shl
mov
inc
pop
xor
pusha
lods
test
mov
sub
retf
dec
xor
xchg
mov
(bad)
in
jnp
gs
scas
bound
jb
or
imul
adc
mov
pop
popa
stos
sbb
or
out
stos
and
popf
into
xchg
jae
jg
enter
mov
(bad)
add
pusha
repnz
or
jg
stos
push
lods
jo
mov
mov
jp
out
outs
jns
in
jne
inc
stc
ret
push
sbb
xor
(bad)
dec
inc
lock
mov
hlt
arpl
mov
bound
or
cdq
push
pop
or
je
pop
enter
ins
nop
lods
cmp
call
jne
pop
cmp
cmp
dec
aas
push
jmp
int3
call
aad
xor
aas
mov
bound
lods
pop
ja
leave
jno
outs
je
ins
out
popf
or
inc
ret
adc
xor
dec
inc
ins
pushf
jecxz
dec
ds
jae
xchg
loop
retf
mov
pop
test
leave
ja
or
cwde
fdivr
sbb
inc
neg
mov
icebp
add
ror
aam
les
and
sbb
mov
or
and
(bad)
add
mov
mov
retf
mov
cmp
inc
push
leave
adc
cmp
cdq
test
fpatan
(bad)
adc
rcl
ja
jnp
push
xor
cmp
repnz
mov
xor
enter
aad
(bad)
sub
popf
pop
out
or
adc
stos
test
and
add
pop
add
rol
out
daa
lock
scas
cmc
adc
sbb
out
out
mov
push
push
push
add
rol
nop
fimul
stos
cmp
lea
push
inc
sbb
adc
mov
shl
int3
or
add
ret
aas
push
adc
jne
call
mov
cmps
jae
adc
mov
lock
out
mov
mov
mov
jae
xchg
iret
hlt
mov
stos
dec
packuswb
cmps
or
popf
sub
test
lods
inc
test
push
pop
call
xor
and
and
mov
mov
cs
or
inc
call
mov
xchg
sbb
sar
or
aam
push
add
cmp
mov
into
out
mov
inc
pop
repnz
ja
loop
test
movs
jmp
add
test
(bad)
inc
inc
jmp
fld
out
cmps
imul
iret
mov
call
and
and
jmp
xor
pusha
dec
pop
jg
pop
inc
sbb
jecxz
inc
xlat
imul
jnp
mov
ret
int
retf
pop
mov
or
fsubr
rcr
out
enter
gs
fiadd
adc
pop
pop
mov
inc
add
iret
arpl
ret
mov
fiadd
pop
add
test
fidiv
dec
retf
and
xor
push
call
jle
sub
daa
(bad)
retf
shl
cdq
xor
sub
jae
popa
or
dec
pop
aam
or
inc
test
jae
ret
and
(bad)
loopne
add
jbe
repnz
mov
test
mov
and
std
imul
mov
jmp
call
adc
out
pop
dec
mov
mov
jp
scas
popa
and
adc
inc
retf
nop
fcom
xchg
int
and
gs
cli
pop
adc
sub
shr
push
mov
mov
sti
push
xor
or
push
jmp
ret
push
cmp
sbb
inc
mov
fdivr
retf
and
mov
cmc
and
cld
jmp
add
cld
jb
sub
ds
sbb
iret
dec
or
xor
xchg
ins
pop
pop
in
in
mov
scas
std
add
fcom
cmps
data16
rol
popf
or
sbb
lock
jp
out
dec
mov
loop
shl
push
xor
pop
stos
bound
sub
sub
mov
das
sub
rep
sub
loope
jnp
push
or
jle
int3
xor
enter
retf
or
add
adc
cwde
iret
fmul
pusha
mov
mov
test
inc
mov
xor
xor
mov
add
cmps
inc
sbb
jmp
push
jecxz
jae
sbb
mov
mov
sub
aaa
pop
add
or
(bad)
cli
jp
ret
jo
imul
push
jne
jo
and
iret
sbb
scas
inc
mov
push
fidiv
rol
or
pop
adc
fisttp
fstp
mov
and
nop
js
inc
push
xor
add
repz
loopne
sbb
sbb
pop
cmp
inc
enter
and
jmp
fisubr
lock
lds
push
call
or
cdq
adc
push
or
xchg
lea
int3
cli
xlat
enter
pop
push
test
push
pushf
out
hlt
mov
pop
adc
in
jle
in
or
dec
or
popa
xor
xor
cwde
sub
maskmovq
repz
and
shl
sub
xchg
cmp
loopne
pop
jecxz
cmc
dec
adc
jle
add
loope
fisttp
jle
or
mov
xchg
sar
jmp
jmp
jmp
mov
adc
add
and
dec
pop
in
(bad)
fidivr
daa
mov
add
cmp
mov
inc
fs
sar
rcl
add
fstp
sysenter
jne
inc
sbb
or
add
sbb
stos
out
mov
js
fidivr
aaa
dec
mov
enter
cmc
bnd
retf
pop
ja
pop
aam
aas
clc
iret
les
add
cmp
xlat
clc
fmul
lds
mov
mov
outs
push
jns
je
sbb
push
or
adc
jle
jne
sbb
mov
test
aaa
mov
pop
movs
mov
(bad)
jbe
xor
pushf
jl
jle
mov
push
sub
cmp
add
repnz
push
das
cli
jg
and
ret
ds
adc
push
ret
popa
scas
cmp
fwait
ja
sbb
xchg
xor
call
lds
push
iret
mov
xchg
std
push
lock
inc
pop
sti
ret
repz
pop
xchg
push
daa
xor
(bad)
stc
daa
pushf
movs
out
adc
sub
scas
xor
sub
cmp
data16
and
ror
outs
push
and
cli
pop
(bad)
sub
movs
push
adc
xchg
arpl
mov
push
inc
xor
sbb
retf
ins
push
mov
out
jno
adc
leave
mov
add
sbb
dec
outs
and
mov
mov
jle
sahf
jno
cmps
je
xor
nop
jge
dec
fdivp
stos
inc
pop
cli
clc
clc
mov
shl
pop
daa
push
xor
jmp
mov
fcomp
sub
or
loop
(bad)
and
popf
mov
mov
mov
push
add
jnp
push
xchg
push
or
or
pop
js
sub
aaa
fidivr
icebp
adc
cmp
mov
pop
in
or
icebp
mov
sbb
clc
test
adc
add
in
cli
pushf
aaa
out
mov
popf
popf
jmp
or
jo
jo
bound
ins
das
setbe
mov
jmp
xchg
push
out
test
push
sbb
pop
ss
icebp
enter
lods
cmp
pop
adc
fisubr
xchg
jp
push
or
dec
and
pop
dec
out
neg
jp
jno
outs
(bad)
(bad)
stc
inc
push
lods
sub
mov
jb
mov
xchg
scas
sub
dec
push
dec
dec
cwde
icebp
add
xor
ins
scas
push
cmp
int
popf
push
mov
mov
jecxz
jg
outs
dec
shr
imul
xor
(bad)
push
hlt
inc
pop
cmp
cmp
aad
lods
push
jmp
and
neg
push
repz
sub
jne
cmp
lods
gs
sbb
call
das
stc
sub
(bad)
jns
pop
in
fmul
and
std
and
sbb
xor
dec
jns
fwait
cmps
cmps
dec
cmp
repnz
sub
push
in
sahf
sub
test
aad
and
in
lods
int3
adc
mov
adc
inc
daa
aad
push
jmp
int
mov
sub
aas
sub
mov
pop
mov
adc
jnp
cmp
mov
lock
mov
bound
sbb
leave
or
xlat
jbe
jbe
ja
movs
pop
add
xchg
sbb
jecxz
arpl
rcl
dec
push
cwde
into
xchg
cmp
es
or
out
pop
jmp
lods
lock
icebp
out
test
pop
xchg
fld
jmp
imul
sub
xor
mov
ja
sbb
xchg
test
scas
ss
inc
mov
enter
lods
sub
movs
data16
pop
(bad)
movs
xor
cmp
jecxz
sahf
adc
cli
retf
in
jae
mov
mov
pop
push
stos
ret
ss
imul
icebp
xor
mov
xchg
js
sbb
dec
jge
hlt
mov
mov
sub
shl
out
(bad)
aad
push
mov
aam
add
cld
stos
fs
or
das
push
inc
and
in
mov
pop
aas
xchg
dec
push
pusha
inc
jno
jg
sbb
pop
sbb
jl
dec
movs
aas
jno
ror
add
not
(bad)
sub
test
sti
movs
adc
int3
enter
movs
inc
add
push
arpl
leave
pop
sbb
outs
dec
imul
mov
or
mov
mov
xchg
mov
lahf
cmps
hlt
mov
in
xlat
xor
xchg
outs
ret
dec
jno
loope
mov
leave
push
jl
dec
mov
adc
ins
cli
adc
ret
mov
and
mov
sub
mov
into
dec
hlt
mov
ficomp
push
sub
js
aam
push
neg
pusha
lahf
xchg
dec
and
pop
ror
dec
push
dec
std
mov
data16
movs
xor
nop
movs
int3
aad
push
icebp
cmp
mov
cmp
cdq
push
imul
popa
add
rcr
jp
push
outs
and
out
addr16
jecxz
pop
sub
(bad)
scas
lods
or
ror
jnp
into
xor
cmp
inc
fcomp
lea
test
dec
stos
mov
mov
inc
sub
(bad)
adc
mov
fsubr
outs
aas
xor
inc
pop
mov
pop
pop
or
idiv
push
call
mov
mov
js
icebp
lods
add
mov
iret
mov
mov
sub
in
push
push
adc
adc
fcomp
xchg
aas
ja
dec
xchg
test
daa
pop
je
inc
xchg
dec
or
sub
movs
jno
retf
jmp
cdq
sub
inc
mov
push
movs
lock
in
xchg
aas
test
xor
ret
jle
push
add
nop
icebp
or
dec
jo
scas
xchg
mov
popf
pop
sbb
xor
ja
or
test
in
xchg
adc
xor
adc
jae
scas
retf
and
ret
fnstsw
adc
stc
sub
pop
adc
in
cmps
enter
loopne
push
and
(bad)
imul
sbb
cmps
ja
iret
ret
xor
or
adc
mov
jo
xchg
add
sbb
dec
mov
dec
es
fdivp
out
out
add
jb
sbb
outs
enter
xchg
(bad)
in
arpl
mov
mov
and
sti
cmps
call
cmp
xor
pop
adc
loop
test
movs
ins
and
push
lea
scas
int
sbb
xor
cld
punpckhbw
xchg
xlat
dec
inc
(bad)
and
lds
dec
jb
mov
(bad)
nop
jge
push
mov
lea
hlt
jo
repnz
dec
cmp
into
mov
mov
add
mov
ret
sahf
pop
scas
jmp
jbe
daa
loopne
and
adc
ret
adc
jae
ins
inc
pushf
outs
sbb
sub
inc
aam
(bad)
and
push
rcr
dec
imul
add
fidiv
aam
icebp
test
shr
adc
div
(bad)
adc
leave
test
xor
add
(bad)
ins
pop
rcr
jmp
pushf
dec
lods
and
dec
jg
cmp
sbb
sti
mov
mov
dec
lock
call
rcr
and
xchg
mov
mov
dec
cmc
in
(bad)
leave
imul
push
fdiv
fwait
das
dec
cmp
adc
xchg
lods
mul
push
jo
ret
jbe
adc
stos
and
fidivr
mov
nop
jno
imul
data16
cmp
out
fcmovbe
xchg
out
pushf
push
mov
(bad)
cmp
mov
into
mov
pop
xor
or
cmp
push
xchg
sbb
fisttp
mov
js
adc
outs
popa
mov
out
loop
cmp
inc
outs
lods
push
add
repz
inc
aas
out
fcmovbe
cli
outs
movs
mov
fwait
shr
mov
loopne
ins
fwait
push
pop
pop
mov
inc
bound
aam
hlt
sbb
fbstp
jle
imul
inc
hlt
(bad)
adc
jmp
fdiv
sub
inc
lds
dec
cmp
ins
rol
pop
add
pop
or
gs
int
std
jecxz
lock
(bad)
jbe
inc
(bad)
fisubr
jge
lods
pop
pop
mov
jl
cwde
lea
or
push
arpl
mov
sbb
cli
jno
or
retf
xlat
xor
xlat
push
adc
loopne
std
loope
add
inc
mov
loop
into
cmps
mov
cmp
gs
xor
sub
adc
aaa
jae
js
enter
in
cmc
cmp
cmp
(bad)
out
das
add
loope
lods
xor
test
sbb
mov
xchg
adc
pop
sub
hlt
not
cmc
xlat
dec
nop
and
add
cmp
sbb
in
in
and
rcl
rcl
fist
(bad)
sub
mov
adc
in
inc
add
mov
mov
cwde
xchg
cmp
call
mov
sub
xchg
dec
push
sub
or
and
add
mov
rcr
dec
pop
adc
ds
outs
mov
jae
cwde
das
rcr
pop
or
jo
cmp
sbb
jmp
mov
stc
lods
mov
mov
xchg
adc
dec
mov
out
xchg
dec
cmp
or
jne
aam
adc
test
jmp
dec
fwait
loopne
es
test
push
add
sub
mov
(bad)
mov
xor
gs
jle
jle
push
mov
push
in
cwde
pop
push
pop
dec
or
pop
fld
test
ret
and
mov
add
or
mov
xor
mov
mov
dec
jno
test
dec
sub
cmps
in
outs
inc
sbb
push
ja
test
push
mov
inc
lods
fwait
push
mov
aas
fstp
fs
or
stos
jo
aam
loopne
or
fs
sbb
aaa
clc
cld
popa
and
add
nop
fisubr
adc
pusha
jbe
jb
mov
xlat
pop
scas
pop
dec
or
cmp
scas
mov
out
dec
adc
je
push
jl
mul
test
or
sti
adc
fisttp
les
iret
lds
mov
aas
xor
sub
sbb
or
mov
cwde
jb
fst
aas
pop
and
jno
or
in
les
ret
shl
test
cmp
jno
aaa
xchg
push
ins
sbb
pop
dec
xor
push
push
leave
cwde
(bad)
(bad)
jnp
xchg
(bad)
daa
mov
dec
call
ror
add
lods
adc
mov
sar
mov
adc
gs
mov
dec
(bad)
sbb
push
lods
push
hlt
cmps
inc
test
daa
jae
fiadd
mov
outs
push
push
inc
add
jo
add
movs
(bad)
rol
(bad)
xor
mov
add
mov
and
les
add
gs
push
cdq
pop
and
cmps
jle
push
cmps
xchg
xchg
cmp
fistp
dec
mov
adc
sbb
in
aad
jmp
push
xlat
xor
pop
mov
add
fild
sbb
ja
shl
movs
push
push
push
inc
fstp
add
sub
test
jecxz
push
loopne
std
xor
push
stc
loopne
mov
mov
pop
iret
add
jb
movhps
sub
push
push
cli
jne
aad
mov
repnz
pop
jo
int3
fldcw
pop
lds
int
and
add
push
fcomp
inc
xor
jnp
cdq
push
je
pusha
inc
xor
or
loope
mov
jne
inc
mov
int3
xchg
sbb
sub
mov
inc
cli
test
add
and
daa
rcl
div
fcmovnbe
inc
jmp
cld
sub
mov
enter
adc
pop
xor
retf
adc
stc
ins
add
sub
retf
stos
sub
scas
scas
jge
or
or
(bad)
jo
and
pushf
and
sub
fadd
inc
outs
popf
fcmovb
out
je
ds
clc
aam
stos
add
(bad)
jg
ror
adc
dec
leave
dec
out
xchg
inc
inc
fs
ja
(bad)
loopne
shr
mov
add
(bad)
xchg
jmp
stc
les
mov
push
in
pop
jbe
mov
mov
into
jmp
or
loope
into
test
sub
mov
out
out
mov
sbb
sub
xor
push
ss
mov
out
sbb
pop
into
mov
sub
push
push
mov
aaa
(bad)
pop
inc
dec
mov
mov
lahf
pop
popa
sbb
xor
mov
stos
jno
dec
xor
push
cmp
add
mov
dec
add
xor
scas
arpl
push
jb
pop
dec
fdivr
mov
jecxz
push
retf
xor
dec
dec
int
xlat
mov
(bad)
mov
push
loop
mov
std
pop
aaa
jne
jb
and
out
cld
push
pushf
int
out
(bad)
addr16
xor
loopne
outs
retf
xor
pusha
ss
lock
adc
lock
and
sub
icebp
dec
and
jp
(bad)
div
enter
adc
(bad)
jmp
inc
test
js
xlat
std
mov
dec
in
test
inc
movs
push
mov
add
push
and
dec
div
in
mov
pop
popf
shr
push
fidivr
fistp
add
jae
or
int3
mov
fstp
jnp
sub
inc
in
mov
out
xor
ret
pop
xchg
push
mov
enter
fmul
jecxz
mov
adc
pop
jmp
jo
dec
mov
out
mov
add
jmp
test
sbb
unpckhps
les
in
imul
movs
push
icebp
rol
and
mov
cmp
pop
sti
ins
inc
imul
cmps
jecxz
rcr
out
push
enter
test
xchg
sbb
add
clc
mov
out
test
and
popa
pop
fidiv
adc
pop
inc
add
aad
cmp
ret
ss
mov
popa
push
mov
imul
rcr
and
add
sub
xchg
adc
retf
jl
dec
std
out
xor
mov
test
xchg
test
out
inc
mov
stos
mov
stc
mov
sub
ficom
(bad)
cwde
retf
push
and
mov
or
imul
aad
leave
push
xor
mov
dec
dec
inc
jmp
test
frstpm(287
outs
inc
mov
push
movs
out
leave
fdiv
push
dec
mov
sbb
imul
imul
mov
adc
xchg
lods
cmp
out
fs
lahf
call
jle
xor
clc
xlat
js
dec
int
in
daa
mov
fwait
inc
mov
jae
enter
sub
in
xor
push
xor
mov
fs
cmp
shl
dec
dec
add
and
mov
fcom
sti
pop
lods
call
arpl
or
fcom
(bad)
mov
loopne
mov
inc
pop
cmps
bound
xchg
inc
hlt
mov
les
repnz
jge
fsubp
int3
mov
push
(bad)
pop
rol
add
jno
pushf
enter
mov
repnz
push
test
and
lods
retf
repnz
in
cdq
test
fcomp
in
sub
in
jge
mov
int
stc
mov
mov
bound
dec
pop
lods
xchg
stos
pop
imul
dec
xor
fmul
pop
sub
and
cs
mov
dec
repnz
loop
loop
mov
adc
push
mov
or
in
retf
xchg
ins
jo
push
sahf
and
xor
pop
mov
pop
mov
jge
mov
or
je
xchg
sti
xor
sub
jns
add
loop
cmp
pushf
jp
les
int3
push
push
cmp
movs
xchg
aam
pop
xchg
rol
push
xchg
sbb
cmp
and
dec
mov
push
jno
jns
mov
cmps
(bad)
fst
int
and
fisub
pop
sub
jne
out
and
(bad)
ins
jno
xchg
mov
retf
push
add
jnp
and
or
stc
out
push
mov
and
adc
mov
sub
sbb
dec
mov
fdivr
mov
cmp
cmc
or
retf
cs
xor
xor
pop
jmp
arpl
jg
popa
out
enter
cmps
xlat
pop
stos
dec
scas
ror
adc
rol
pop
or
aad
shr
add
les
inc
or
mov
cmp
mov
jmp
mov
add
enter
call
jmp
pop
or
xlat
dec
je
sub
sub
sub
(bad)
icebp
jecxz
aaa
loope
mov
pop
mov
retf
jge
inc
xor
cld
and
mov
ror
and
mov
and
(bad)
int3
mov
mov
cmp
sbb
xrelease
inc
retf
inc
loop
fsub
add
call
les
(bad)
(bad)
sti
mov
xor
icebp
and
mov
inc
gs
jno
add
push
dec
cmps
lahf
inc
inc
stos
fsubr
add
adc
xor
mov
stos
lods
fsub
fnstsw
dec
add
ins
mov
cwde
lods
cmps
push
popa
pop
ins
clc
scas
sub
jno
or
iret
retf
pop
lahf
fisubr
mov
lods
imul
dec
jbe
das
jns
cmps
or
loop
pop
mov
xchg
cs
inc
cmp
movs
cmps
add
sbb
push
mov
inc
mov
ss
sub
sub
cwde
dec
lods
sbb
mov
xchg
aaa
add
movs
arpl
aam
push
jp
bound
iret
or
fidivr
fdivp
cld
mov
rol
adc
mov
ins
retf
into
aad
pop
sbb
inc
in
fistp
push
push
mov
ror
repz
jo
or
adc
adc
xchg
mov
icebp
std
mov
adc
divps
test
jmp
add
repz
pop
cmp
dec
lock
call
pop
(bad)
retf
xchg
jecxz
jle
or
push
push
dec
mov
test
pop
mov
mov
xor
iret
xor
pop
repz
loope
ss
sbb
cmps
shl
sbb
mov
sti
repnz
lods
in
mov
aas
sbb
mov
or
mov
(bad)
pop
sub
retf
and
outs
xchg
imul
retf
xchg
retf
cmps
push
hlt
(bad)
and
mov
in
leave
pop
jge
sahf
hlt
add
dec
inc
or
sti
ret
cwde
jg
mov
push
sbb
jbe
movs
sub
and
fisub
jbe
sub
push
hlt
adc
mov
cmp
xchg
fld
inc
pop
ss
xchg
mov
pop
add
lds
scas
inc
rcl
mov
push
test
push
jl
mov
dec
mov
xchg
mov
pop
(bad)
out
mov
movs
stos
sub
daa
loopne
nop
sub
dec
inc
cwde
xchg
and
cwde
jne
clc
mov
push
mov
pop
pop
jns
or
rcr
xor
adc
push
sub
pop
and
mov
test
cmps
mov
scas
adc
cmp
es
jmp
sbb
pop
pop
sub
idiv
add
push
mov
xor
or
in
sub
js
mov
out
out
xor
mov
inc
cdq
cs
jb
xchg
jno
push
pop
jne
xchg
adc
pop
pop
jnp
cmc
out
push
sub
xchg
das
xor
fdiv
repz
mov
xchg
jge
mov
std
xor
or
ja
jg
aam
leave
xor
pop
imul
jmp
xor
jae
cwde
ja
push
xor
cmp
cmp
out
jns
sar
or
aas
mov
jp
call
pushf
cmp
push
into
cmp
sub
lahf
or
cdq
fs
xor
retf
fnsave
sub
lds
imul
sub
adc
push
mov
ins
and
push
jle
mov
jno
(bad)
mov
lods
rol
fldenv
bswap
mov
sub
ds
add
add
xor
xchg
ss
clc
xor
loope
fidiv
or
mov
or
inc
push
test
and
sar
(bad)
rcl
int3
stos
jl
test
lock
popa
jmp
xor
push
adc
ins
xchg
popa
cmps
aam
inc
das
mov
hlt
mov
pop
into
fisttp
shl
push
xchg
cwde
dec
fs
jl
jmp
es
inc
xchg
xchg
push
int
and
int
imul
and
loopne
xlat
jmp
mov
neg
imul
jmp
retf
es
xor
rol
dec
mov
push
and
pusha
dec
call
(bad)
fbld
push
lea
mov
lods
rcr
push
call
fs
test
cli
je
rol
xchg
jo
dec
mov
inc
jns
stos
pop
cdq
test
mov
outs
inc
sub
mov
mov
xor
xchg
push
ret
pop
or
jns
adc
sar
cmp
sub
aam
jmp
mov
movs
retf
xor
(bad)
shl
sti
sbb
inc
and
pop
push
pop
push
push
xchg
cld
and
lahf
or
cmp
push
dec
mov
js
cli
sub
fcom
jbe
aad
jmp
push
shl
xor
cmp
xor
pop
or
add
mov
lods
daa
push
or
inc
add
test
adc
scas
xor
adc
add
jmp
dec
(bad)
push
div
jne
sbb
(bad)
outs
jp
push
mov
dec
lea
mov
(bad)
sub
adc
jmp
ret
inc
and
jnp
add
int3
inc
out
jns
pop
js
repz
aam
fisubr
xor
adc
aam
lock
js
mov
push
ror
mov
rcr
jp
in
inc
(bad)
lea
jbe
pop
xchg
mov
mov
mov
cld
lock
xchg
clc
sub
mov
jmp
inc
movs
push
cmp
fld
dec
(bad)
out
pop
test
pop
mov
mov
(bad)
fstp
sub
xchg
fnsave
js
add
mov
mov
mov
cmc
mov
jecxz
mov
adc
jmp
cld
test
sbb
add
and
out
inc
jecxz
sbb
outs
call
xor
push
cmps
add
or
sbb
lea
(bad)
adc
cmp
cmp
jbe
nop
aad
add
adc
nop
bound
gs
pushf
les
pop
cmp
sub
dec
push
mov
(bad)
jp
pop
or
aad
inc
xor
pop
add
int
pop
mov
jbe
push
repnz
or
loop
arpl
sar
icebp
ret
adc
mov
jmp
aad
push
leave
mov
xchg
mov
mov
mov
jno
(bad)
das
pop
inc
cmp
addr16
fild
dec
jle
rcl
pop
das
mov
movs
out
mov
mov
pop
sar
pop
aas
jae
pop
sub
mov
dec
pushf
inc
push
jnp
adc
scas
push
lods
movs
mov
jl
inc
inc
icebp
shl
adc
push
xchg
in
in
push
test
mov
dec
xchg
into
fnsave
xchg
loope
pop
scas
ret
or
fild
outs
pop
in
pop
in
push
mov
movs
mov
pop
and
(bad)
std
pop
push
popa
jp
sub
les
fcom
sub
fisttp
(bad)
(bad)
jg
cmp
cmp
mov
push
sbb
adc
fimul
lock
jmp
scas
std
test
add
cmp
jns
ret
(bad)
call
and
pop
popf
(bad)
xchg
xchg
pop
ins
cmps
inc
mov
mov
call
jnp
sbb
out
aam
cwde
jb
sub
pop
mov
into
retf
lods
cmp
jne
repnz
mov
cmps
cld
mov
cli
xchg
fmul
mov
movs
aad
sbb
(bad)
jl
std
sahf
shl
mov
stos
dec
inc
or
push
pop
popa
or
fsub
(bad)
jge
jmp
adc
push
xor
pop
stc
in
xor
dec
(bad)
jb
dec
fnstenv
repnz
or
cmc
stos
mov
in
jb
or
mov
jbe
add
mov
in
pop
mov
scas
lods
ficom
ret
(bad)
mov
xchg
lea
xor
mov
fild
jecxz
je
frstor
jg
ret
inc
test
push
xchg
jb
int3
(bad)
xor
retf
sub
mov
jbe
cmp
aad
dec
shr
pop
xor
or
adc
and
mov
mov
sub
mov
test
inc
arpl
mov
or
jo
icebp
inc
gs
cmps
jg
push
(bad)
jle
mov
mov
fidivr
repz
xor
hlt
cvtpi2ps
das
push
lods
xor
sbb
adc
nop
xchg
jns
and
xor
es
mov
sti
dec
mov
mov
sub
push
test
mov
sub
jg
call
jmp
or
das
jb
or
dec
pop
pop
push
iret
push
je
jno
aas
pop
dec
add
pushf
push
cmp
xchg
and
mov
push
or
fldenv
and
jge
jle
and
mov
and
pop
sbb
pusha
push
ret
xor
shl
inc
push
call
outs
lock
scas
out
or
cmp
sbb
adc
sahf
mov
jbe
ss
mov
inc
dec
push
inc
fcompp
cmp
pop
adc
jge
lea
ja
dec
mov
xchg
jg
push
add
imul
ins
mov
cmp
xor
pusha
ret
mov
shr
pop
fisubr
inc
xor
cs
inc
mov
inc
or
loope
inc
inc
bound
leave
pusha
sar
sahf
xor
aas
das
xor
test
push
cli
mov
std
(bad)
mov
cli
pop
(bad)
loop
cmp
movs
mov
xor
dec
retf
fnsave
pop
push
adc
sub
(bad)
xchg
xchg
into
fisttp
out
sub
std
jg
jp
mov
call
push
inc
pop
inc
in
retf
jl
adc
mov
idiv
inc
out
fs
jo
dec
mov
shl
fisub
xchg
sub
mov
mov
pop
fist
arpl
xor
mov
enter
dec
jge
cmp
movs
dec
inc
data16
sub
movs
push
sbb
or
sbb
mov
adc
push
arpl
dec
loope
aaa
adc
push
dec
jae
pop
pop
inc
(bad)
int3
jbe
xchg
aaa
jns
xor
adc
sahf
xchg
scas
sub
mov
(bad)
das
scas
int
add
sbb
sbb
imul
out
lahf
mov
jmp
jb
dec
dec
push
in
sbb
es
mov
inc
nop
push
fisttp
jb
outs
jg
popf
cmps
stos
xchg
jmp
sbb
aad
ror
push
int
cmp
mov
dec
jns
jge
jmp
push
add
pop
jle
mov
push
scas
pusha
cmps
test
or
sub
iret
mov
(bad)
in
and
sub
imul
jle
pop
gs
mov
mov
ja
ror
dec
cmc
pop
mov
data16
jle
add
int
lahf
sahf
and
adc
(bad)
div
mov
jmp
inc
iret
mov
inc
mov
xchg
(bad)
xchg
and
sbb
loope
pop
stc
call
mov
aas
loopne
push
fld
div
call
sub
dec
shr
stos
call
loopne
cdq
adc
(bad)
inc
pop
inc
rcr
ds
int3
out
int3
stc
sbb
add
enter
xchg
lods
fst
mov
xchg
sub
cmp
pusha
sbb
lods
in
popf
addr16
jae
adc
shr
(bad)
dec
addr16
push
jne
xchg
cmc
arpl
pop
and
inc
ins
sbb
in
pop
ds
adc
(bad)
stos
out
shr
lods
add
mov
cwde
push
mov
outs
sbb
loopne
pop
mov
or
jne
std
and
xchg
push
xor
inc
xchg
sbb
and
shl
js
loop
sbb
mov
mov
pushf
mov
shr
and
ja
jl
loop
push
xor
adc
out
add
adc
cdq
pushf
or
or
inc
test
and
mov
inc
iret
push
ds
jle
jmp
push
and
cmp
es
repnz
mov
scas
mov
sub
and
fdiv
xlat
loop
outs
sub
push
mov
out
push
xor
(bad)
repz
lods
and
popf
pop
mov
(bad)
mov
pop
pop
stc
pop
push
popf
adc
xor
jb
lahf
(bad)
popa
cli
xor
pop
lahf
mov
sbb
inc
in
cmp
push
pop
gs
add
(bad)
icebp
and
sub
loop
push
fcmovne
adc
loop
pop
test
mov
sub
mov
xor
and
jg
mov
clc
inc
push
push
cmp
ss
adc
sub
test
sti
sub
jl
repz
inc
cmp
fs
sub
and
jo
(bad)
cdq
fidiv
jne
out
stos
mov
sbb
jnp
cmp
data16
mov
jae
or
sbb
hlt
xchg
and
inc
mov
xchg
loope
mul
loop
mov
(bad)
pop
sub
test
mov
fmul
nop
cmp
outs
mov
das
shr
push
jmp
pop
and
sub
mov
mov
sub
pusha
and
inc
iret
test
mov
xor
sub
xchg
cmps
sbb
sbb
pop
xor
jmp
mov
(bad)
pushf
push
test
shl
add
mov
xor
xor
jmp
pushf
or
or
sbb
dec
cli
dec
arpl
rcr
push
pop
popf
repz
mov
mov
(bad)
sub
clc
ret
or
(bad)
push
retf
xchg
loope
adc
jl
sub
lds
sbb
sub
hlt
push
xor
xchg
ror
fs
xor
cmp
in
push
push
jle
xor
cld
lahf
sub
aaa
mov
aas
(bad)
nop
sub
neg
sbb
push
aas
and
nop
pop
inc
fsub
jp
div
xor
push
ins
outs
jl
jo
jo
ja
cdq
push
jmp
loopne
aam
xchg
mov
ja
shr
std
xlat
jno
push
bound
loopne
and
idiv
inc
sti
loopne
out
push
fs
nop
xor
push
mov
invd
test
ins
inc
out
cmps
xchg
fs
je
adc
stos
xor
add
cmp
das
rcr
push
stos
rcl
jo
pop
dec
iret
inc
xor
and
lds
fstp
sti
inc
cmp
or
das
out
jbe
jne
jmp
pop
jecxz
or
rcr
lock
jmp
push
sub
inc
xchg
pop
leave
and
xchg
xchg
mov
xchg
dec
stos
cdq
jae
fldcw
aas
add
stos
pop
(bad)
je
mov
or
pusha
sub
call
pop
dec
jmp
aam
mov
mov
mov
mov
adc
push
jecxz
inc
sub
add
pushf
adc
mov
ds
mov
mov
inc
call
jmp
sar
jmp
mov
pop
shr
popf
call
push
frstor
repnz
push
cmps
repnz
jg
dec
(bad)
push
das
aad
xor
jnp
out
mov
ror
in
es
jno
jo
dec
sub
sbb
add
and
dec
add
cmps
inc
popa
popa
pop
ss
ja
mov
jle
sub
xlat
in
pop
pop
mov
or
jno
ror
add
lock
rcr
mov
movs
lsl
inc
add
mov
aas
push
out
cmps
aas
adc
pushf
shl
add
(bad)
aas
leave
sbb
mov
pop
ins
push
mov
repnz
fcmovbe
out
pop
sbb
jmp
push
movs
dec
(bad)
cmp
dec
push
fild
ror
mov
std
ret
add
loopne
popf
adc
inc
fcom
inc
fwait
pop
shr
cs
push
sbb
(bad)
dec
sbb
jnp
mov
push
nop
inc
loop
(bad)
mov
push
dec
inc
scas
jg
rol
inc
mov
hlt
lahf
jmp
jge
sti
aaa
call
push
scas
sar
dec
or
into
mov
inc
je
test
inc
jg
stc
cdq
push
sub
adc
pop
in
sub
add
mov
pop
cmp
and
stos
and
cmp
inc
mov
and
test
clc
sbb
push
sbb
popf
jecxz
sub
adc
pop
adc
test
sbb
int3
in
call
pop
cmp
not
(bad)
mov
sub
sahf
dec
jo
inc
movs
ins
mov
mov
stos
lea
ds
test
push
cmp
push
dec
fld
sahf
(bad)
sti
call
pop
jmp
fidivr
scas
call
and
adc
cmp
out
xlat
push
retf
hlt
inc
cmp
aas
pushf
movs
lock
sbb
dec
pop
adc
lea
aad
cmps
and
shl
outs
out
jecxz
push
sbb
out
jbe
adc
xor
sbb
jne
mov
dec
and
outs
cmps
in
adc
loopne
sbb
mov
(bad)
push
pushf
mov
cmp
call
js
(bad)
xchg
inc
inc
sbb
ret
push
adc
imul
jcxz
aas
adc
adc
inc
enter
mov
fs
xor
leave
mov
ins
xor
adc
inc
pop
mov
sub
jb
inc
push
scas
push
dec
lea
pop
push
push
rcl
add
repnz
mov
ds
ja
mov
sub
repz
adc
jns
repnz
lahf
xor
cmp
sub
cdq
jbe
mov
mov
jle
repz
mov
lahf
jmp
jg
and
iret
fimul
and
mov
sar
cmp
mov
std
add
loopne
out
add
sbb
out
rol
pop
test
repz
jmp
and
rcl
ret
stos
sbb
push
cmp
cmp
js
adc
je
adc
cwde
mov
add
add
xchg
inc
adc
mov
mov
mov
fsubr
jl
cmp
inc
leave
dec
cmps
movs
js
inc
sub
or
movs
or
pop
mov
loopne
jne
mov
cs
sub
push
pop
daa
cmps
movs
call
jae
das
fwait
pushf
xor
(bad)
hlt
inc
push
dec
pusha
stos
mov
(bad)
sti
push
outs
ficom
arpl
inc
jno
lods
retf
out
xor
add
sahf
dec
cmp
fwait
jmp
pop
jg
mov
add
lods
(bad)
out
in
jb
pop
imul
mov
fld
dec
inc
xor
mov
popa
inc
mov
jbe
pop
sbb
out
ror
popf
dec
xchg
ins
mov
push
ja
lods
mov
sub
add
mov
fistp
outs
mov
pushf
jb
adc
mov
xor
push
xor
call
(bad)
sbb
pop
mov
push
mov
(bad)
inc
xor
xor
imul
test
sub
fist
or
pop
mov
fsqrt
data16
test
mov
test
hlt
mov
sbb
xchg
das
in
pop
add
mov
pop
pop
lahf
mov
sub
dec
mov
stos
xchg
dec
int3
adc
push
or
jae
loope
jecxz
ins
(bad)
hlt
repnz
int
push
add
movs
mov
xchg
mov
lea
int3
rol
ja
fdiv
push
cmp
mov
cmp
mov
test
mov
sar
mov
stos
ret
or
jecxz
push
sbb
and
mov
or
sbb
shl
lea
jo
mov
or
mov
jbe
test
aaa
cmp
push
das
xor
fild
xchg
or
cwde
sub
pop
xchg
adc
push
xor
xchg
xor
call
xchg
shr
mov
test
sbb
sub
ins
push
test
jne
sbb
mov
mov
xor
test
mov
pop
xchg
ja
xor
ja
stc
sbb
sbb
jae
cmps
xchg
js
stos
popf
or
dec
or
stos
retf
adc
cmp
lahf
movs
adc
dec
dec
sbb
div
pusha
mov
push
pop
mov
fsubp
push
stos
sahf
push
mov
xchg
pop
mov
data16
sub
push
adc
and
ja
mov
pusha
or
mov
das
dec
fisub
ror
mov
in
cmp
or
clc
mov
(bad)
jmp
mov
mov
dec
out
pop
mov
sbb
das
and
or
cmp
xchg
push
clc
es
(bad)
cmps
ficomp
mov
sub
imul
xchg
mov
pop
rol
adc
fisubr
sub
cmp
nop
xchg
xchg
jns
pop
push
ja
call
adc
add
lds
(bad)
repnz
mov
pop
or
call
es
sub
scas
dec
call
test
push
adc
aas
or
adc
inc
scas
fs
(bad)
js
cmp
out
xor
scas
dec
inc
fist
jp
pop
xor
(bad)
dec
mov
jnp
fldlg2
ficomp
std
(bad)
std
inc
mov
jno
shr
ins
xor
retf
addr16
rcr
jecxz
mov
int3
mov
push
je
aad
or
ja
std
faddp
dec
sub
movs
call
push
lahf
mov
cmc
rep
push
jge
jae
push
xchg
cmp
dec
cmp
scas
dec
cmp
mov
imul
aam
sub
sub
(bad)
stos
add
shl
xor
pop
xchg
push
inc
dec
dec
mov
fimul
dec
iret
mov
aas
inc
arpl
xchg
dec
and
jl
movs
fidiv
or
ins
pop
add
int3
and
xor
ror
xor
arpl
in
cmp
mov
aad
cmps
repz
iret
scas
ffree
xor
aas
ja
ret
call
adc
xor
push
nop
cmp
mov
imul
cmovne
pop
push
ins
aaa
or
es
jge
nop
mov
mov
xchg
dec
or
cmps
inc
mov
movs
xchg
scas
sbb
leave
add
or
test
daa
rcl
jb
loopne
loop
mov
nop
jp
dec
repz
imul
loope
movs
xor
ins
ins
loop
mov
mov
in
in
test
aaa
jb
or
out
ret
xor
mov
ins
fisubr
rol
stos
iret
cmp
jo
jle
push
jb
sub
rcl
ret
cmp
cmp
sub
out
sub
cwde
pop
test
cli
xchg
mov
rol
push
cmp
sub
xchg
sahf
dec
mul
or
ret
test
out
call
test
push
sbb
mov
out
mov
sub
adc
jge
xchg
test
enter
cmp
add
push
dec
mov
pop
sar
mov
stos
sbb
scas
in
and
jo
and
scas
push
xchg
mov
scas
adc
xchg
shl
inc
xchg
mov
xchg
(bad)
int
rol
jnp
out
inc
mov
dec
sbb
push
adc
xchg
test
dec
outs
push
cmps
mov
les
popf
call
and
bound
cdq
inc
call
jnp
iret
mov
xlat
jl
dec
popa
or
test
mov
pop
xchg
sti
popf
cs
push
repnz
movs
push
repz
outs
sar
in
dec
pop
dec
or
xchg
dec
sub
push
inc
les
clc
push
retf
(bad)
pusha
lds
mov
imul
or
dec
mov
mov
or
mov
xor
cmp
sub
cmp
cdq
sub
adc
push
stc
mov
repnz
push
mov
mov
inc
(bad)
adc
mov
mov
lods
mov
aaa
int3
in
jecxz
push
mov
outs
clc
pop
and
xchg
mov
in
inc
mov
loope
fwait
sti
movs
inc
inc
idiv
pop
dec
cdq
mov
call
jno
out
aad
adc
push
cmp
pop
sahf
pop
std
pop
fistp
mov
pushf
sbb
imul
mov
lods
xor
inc
dec
aas
(bad)
push
movs
je
in
and
xchg
not
cli
mov
or
push
js
mov
retf
add
jb
frndint
mov
sub
push
pushf
mov
cdq
cmp
jb
lods
push
cs
push
add
int3
and
lods
add
lea
jmp
inc
ins
mov
jl
mov
loopne
push
adc
cmp
repnz
xchg
jns
mov
add
or
or
popf
sti
iret
in
pop
pop
scas
dec
cmp
out
mov
in
(bad)
jmp
dec
hlt
cld
push
popf
cli
je
out
and
scas
xchg
ror
jle
ins
push
sar
enter
mov
pusha
jmp
inc
add
aaa
(bad)
sbb
sub
mov
cli
dec
movs
and
in
leave
inc
sub
lea
pop
sub
aam
int3
cmp
bound
fisttp
sbb
cmp
adc
cs
aad
inc
test
add
pop
arpl
(bad)
mov
jecxz
test
mov
das
xchg
cmp
jmp
mov
pop
(bad)
push
inc
cmp
sbb
sub
sar
arpl
add
sbb
inc
arpl
scas
jo
dec
xchg
push
or
ret
iret
test
test
sahf
stos
dec
push
retf
sbb
addr16
cmp
mov
fisttp
xor
xchg
(bad)
xchg
push
aad
loop
inc
mov
jle
push
cdq
fdivrp
in
mov
xchg
data16
push
adc
mov
dec
cmp
or
mov
adc
test
jp
dec
pop
add
addr16
loop
scas
lock
shr
aaa
and
stos
int3
rcr
shl
cmp
in
pop
cld
in
xchg
xchg
aas
push
nop
out
inc
cmps
or
xchg
or
aas
fwait
adc
jg
jo
xchg
iret
or
xor
outs
xor
jle
and
leave
and
mov
mov
or
call
ja
cmp
call
das
retf
ins
cld
lock
cmp
adc
ja
xor
aaa
es
ret
pop
mov
ret
xchg
ss
mov
aas
pminub
scas
in
jmp
xchg
xor
xchg
xor
xor
ins
int3
dec
ja
push
xor
mov
arpl
sub
and
jnp
test
push
cmps
pop
sub
cld
sub
inc
jmp
pop
mov
cld
(bad)
popf
das
dec
(bad)
mov
xchg
gs
cld
rcl
pop
sbb
xor
mov
pusha
jecxz
hlt
pop
dec
hlt
mov
mov
sbb
sti
or
cwde
pop
retf
cmps
test
sbb
cmps
inc
mov
ins
mov
addr16
mov
in
pop
js
mov
cdq
sbb
(bad)
sub
mov
ret
mov
mov
retf
mov
imul
fisubr
imul
push
mov
enter
sahf
add
mov
test
add
mov
cld
ins
inc
xor
inc
gs
nop
loop
je
xchg
stos
push
jne
ins
xchg
popf
pop
and
jle
(bad)
fdiv
sahf
xlat
xchg
push
xor
retf
jbe
int3
mov
cmp
add
fldenv
lahf
int
xchg
repnz
or
mov
lahf
aaa
jbe
dec
xor
and
stos
test
cld
cmps
ss
inc
hlt
push
xor
mov
and
xchg
xor
dec
ror
ror
and
pop
mov
out
pushf
stc
inc
out
gs
and
sub
sub
mov
cld
inc
mov
jne
cmp
and
mov
jno
repz
sar
ffreep
mov
addr16
sbb
sti
push
add
cmp
mov
cmp
inc
add
inc
jb
enter
mov
shl
jno
mov
icebp
test
sar
fld
daa
pop
sbb
out
jno
out
push
push
jb
jl
mov
cmp
cmp
sub
pop
sbb
inc
push
imul
or
pop
push
sbb
in
(bad)
in
jnp
cmp
std
mov
fisub
data16
jns
pop
pop
xor
das
test
xor
inc
movs
ret
and
stc
xchg
dec
jge
cmp
hlt
sti
movs
shl
sti
inc
sub
pusha
pop
adc
(bad)
lods
out
mov
(bad)
jnp
loope
and
and
shr
stos
cmps
mov
or
mov
mov
adc
jl
cmp
fwait
ret
or
pop
sub
hlt
and
sub
imul
xor
push
sbb
std
xchg
or
adc
fwait
test
jecxz
repz
repz
stos
and
outs
call
cs
jmp
inc
xchg
mov
xchg
and
aad
mov
clc
mov
in
adc
mov
scas
mov
sbb
mov
lea
nop
push
(bad)
push
add
mov
xchg
pop
scas
add
arpl
lods
fcomp
sub
push
lods
rcr
mov
sbb
sbb
call
add
inc
(bad)
cmp
push
jb
adc
pop
push
mov
stc
nop
add
push
sub
jp
test
mov
xor
jmp
loope
popa
push
pop
lods
push
inc
and
and
mov
rcr
mov
sub
cmps
and
sbb
mov
jnp
xchg
jg
sbb
mov
(bad)
xlat
(bad)
sbb
pop
outs
push
ret
push
adc
mov
mov
xor
(bad)
cmp
sbb
and
test
inc
adc
dec
lods
loop
jns
cmp
push
cmps
or
aad
rol
bound
enter
dec
or
(bad)
lock
xchg
adc
push
adc
mov
aam
(bad)
mov
add
jb
in
jo
and
jg
sar
imul
mov
xchg
pop
jmp
inc
add
test
or
sbb
inc
adc
cwde
xchg
fst
enter
sbb
and
jmp
mov
mov
in
pop
xor
xchg
fbstp
iret
mov
pop
dec
push
adc
jmp
in
pop
mov
imul
rcr
outs
enter
cmp
inc
aad
pop
xor
cmps
fcmovne
bound
fsub
pop
jl
ss
mov
scas
add
dec
pop
push
jbe
sbb
in
into
sub
mov
cwde
cmps
(bad)
jns
mov
mov
inc
inc
fs
adc
jnp
or
loope
ss
and
add
sub
dec
inc
sbb
ss
mov
ds
mov
repnz
daa
xor
retf
lds
test
loopne
mov
mov
cld
mov
cdq
rcr
mov
cmp
xchg
mov
pop
sub
cli
(bad)
repz
pop
or
xchg
jno
in
cmp
out
xchg
jmp
(bad)
fist
stos
cmp
cmps
bound
stc
xlat
cmp
jno
loopne
lahf
loopne
push
push
clc
xlat
(bad)
test
cld
cmps
or
cmc
sub
dec
cmps
and
shl
icebp
add
mov
jnp
fstp
aaa
xor
aad
xchg
sub
and
xchg
mov
jnp
lahf
mov
jbe
fimul
mov
mov
push
lock
out
ffreep
aas
adc
add
jnp
pxor
jl
dec
xor
or
enter
dec
push
dec
hlt
ins
jnp
sbb
imul
js
jecxz
test
sub
ret
pusha
mov
pop
xchg
push
mov
adc
outs
jp
iret
dec
push
and
adc
jb
inc
xchg
ds
xchg
leave
fs
addr16
mov
ins
popf
pop
xchg
(bad)
test
scas
ds
loop
int3
and
inc
fcom
push
xor
stc
(bad)
jnp
fldenv
and
repz
int3
mov
outs
mov
xchg
scas
push
cmp
pop
sbb
add
cmp
mov
icebp
jge
loope
mov
and
(bad)
in
xchg
or
dec
les
and
leave
add
sbb
jne
push
jo
mov
lock
push
jg
jle
jl
lahf
or
fnstenv
pop
xchg
(bad)
adc
daa
std
dec
jmp
idiv
icebp
fcomp
dec
fcom
pop
lods
cmp
aad
cmp
xlat
stos
jmp
cmc
and
cmp
and
shr
call
(bad)
xor
cdq
ss
inc
std
or
ss
int
cmp
scas
test
jmp
xchg
loope
mov
rcr
mov
and
retf
pop
and
jmp
mov
cs
les
jo
imul
std
mov
nop
mov
and
(bad)
adc
call
sbb
retf
xor
mov
push
and
pop
mov
cmp
mov
sbb
xor
outs
cmp
push
rcl
sub
mov
jle
mov
push
or
mov
cmps
sbb
pop
icebp
xor
adc
and
jmp
push
fldenv
imul
cld
xchg
aas
sub
xor
adc
jne
out
xor
and
shl
sahf
jge
inc
cli
adc
rcl
mov
cmp
push
adc
mov
and
out
dec
push
push
pop
sbb
add
dec
outs
mov
dec
mov
cld
mov
ret
jl
jecxz
aad
xchg
adc
push
mov
jno
(bad)
in
ins
test
sbb
inc
repnz
mov
push
pop
imul
cmp
push
push
out
mov
mov
call
(bad)
jb
ins
sbb
jp
addr16
dec
lods
cmp
inc
push
(bad)
fst
and
std
mov
cs
sahf
js
pop
(bad)
push
mov
sub
loop
pushf
mov
leave
lds
ss
lods
aam
and
pop
cmp
adc
dec
sbb
mov
inc
add
fwait
add
iret
or
ror
sub
int3
mov
mov
push
pop
fild
mov
pushf
dec
inc
push
jmp
inc
das
les
ret
adc
sbb
fs
jb
addr16
movq
sub
(bad)
push
cs
outs
pop
mov
mov
or
xor
pop
or
into
mov
jp
xor
stos
or
push
cli
out
pop
mov
or
aad
jne
nop
dec
pop
jp
fdiv
xor
mov
sub
mov
sbb
stc
js
cmp
test
mov
mov
cwde
ret
and
je
call
dec
dec
mov
bound
iret
jge
sbb
and
ins
scas
shl
jae
pop
jp
xchg
dec
push
ret
(bad)
jg
cmps
repz
fdivr
dec
mov
add
dec
mov
pop
mov
add
xor
test
(bad)
test
sub
outs
pop
add
or
das
call
lods
sti
push
cmps
cdq
mov
je
or
in
mov
out
pop
inc
ja
add
gs
sub
xor
popa
lods
inc
mov
stc
push
inc
icebp
mov
int
dec
add
pusha
add
xchg
dec
mov
xor
adc
clc
push
adc
aam
out
xor
pop
xor
cmps
adc
mov
jmp
movs
cmc
and
cmps
sbb
mov
cmp
ror
test
mov
sbb
add
mov
adc
xor
xchg
xchg
dec
push
jl
cmp
inc
jmp
repz
mov
add
fisubr
jmp
xchg
adc
xor
rcl
outs
test
inc
bound
fld
icebp
dec
je
test
mov
adc
mov
add
into
pushf
mov
mov
add
pop
mov
add
ret
fwait
mov
loop
xchg
sbb
mov
out
popa
add
cmps
pop
sti
in
xor
sub
ss
fisttp
dec
movs
mov
jno
in
ja
mov
popa
int
dec
inc
adc
in
mov
xlat
or
cwde
jmp
sub
pop
or
jo
enter
inc
aas
out
ds
xor
pop
and
sbb
jmp
mov
and
sar
adc
dec
arpl
mov
add
xor
retf
jmp
aas
cmp
jo
or
repnz
loop
push
add
sbb
sbb
lds
daa
and
mov
xor
fbld
pop
fbld
rcr
pop
ret
push
bound
ins
loopne
mov
and
pop
icebp
lahf
pop
stos
xchg
xlat
xlat
outs
call
cli
int3
rcl
test
sahf
mov
xchg
inc
call
(bad)
lds
ror
push
ror
fdiv
lds
jmp
cmc
enter
daa
in
int
dec
outs
dec
imul
imul
nop
fsubr
dec
or
in
jg
or
xchg
mov
(bad)
repz
mov
loope
jnp
ror
out
out
outs
add
mov
out
gs
add
jnp
fidiv
jge
int
or
lods
mov
fbld
pop
hlt
inc
loope
fisubr
pushf
or
iret
test
js
sbb
mov
jbe
push
push
push
ror
repz
cdq
sbb
jae
dec
fisubr
call
je
mov
outs
mov
pop
push
fisttp
jmp
int
setge
mov
nop
mov
push
xchg
cli
imul
loop
dec
imul
xchg
mov
xor
jns
sti
and
test
mov
fcom
dec
jnp
retf
test
dec
mov
cmp
jne
popa
push
pop
mov
inc
imul
push
jns
mov
cmp
lods
scas
test
hlt
dec
dec
dec
mov
jp
jns
jnp
add
xor
(bad)
fcomi
fs
xchg
clc
mov
fdiv
nop
rcl
inc
pop
add
xor
inc
push
dec
xchg
pop
pusha
mov
fild
test
jnp
pop
dec
icebp
sub
fimul
jle
sbb
ins
and
pop
inc
pop
add
push
cmp
mov
pop
jb
rcl
ret
(bad)
push
fimul
cli
jne
adc
enter
loope
pop
and
push
jns
mov
add
ret
jns
dec
jno
fcmovu
mov
mov
in
dec
pushf
loopne
push
xchg
pop
lahf
inc
jle
mov
gs
mov
sub
push
mov
repz
inc
test
jecxz
sbb
sbb
(bad)
adc
out
fisubr
rcr
add
addr16
xor
mov
sbb
bnd
stc
cmc
mov
sbb
ror
xchg
sbb
push
in
(bad)
(bad)
jmp
inc
pushf
push
push
mov
dec
pop
(bad)
imul
fwait
cwde
sub
push
sahf
je
xor
cmps
sbb
(bad)
test
dec
mov
xchg
repz
xor
stos
dec
pop
and
imul
inc
pop
leave
adc
stc
fist
fdivr
push
xor
pop
in
sbb
cmp
fdivp
inc
add
je
inc
das
stos
inc
shl
int
shl
jae
movs
cmps
sahf
leave
iret
(bad)
pop
or
jnp
test
inc
xacquire
xchg
ds
jmp
jle
ss
loop
loopne
push
stc
and
js
mov
cld
push
cmp
sahf
adc
adc
bound
jle
call
sahf
sub
and
adc
dec
push
std
(bad)
std
cmps
je
test
mov
cs
pop
push
fwait
add
mov
cmp
std
sbb
idiv
ja
jo
jae
xchg
jl
inc
lods
xchg
(bad)
inc
and
push
cmp
int3
scas
sub
fild
ss
adc
mov
fisubr
les
push
add
aas
cmovno
push
rcl
out
xchg
js
sbb
jo
mov
cli
jnp
pusha
stc
ins
daa
and
lahf
push
inc
sub
push
lods
mov
push
or
hlt
dec
test
xor
test
ret
jmp
cmps
outs
clc
aad
sahf
sbb
int3
in
sub
inc
sub
mov
(bad)
fdivr
sub
mov
push
aaa
mov
mov
mov
int
jmp
movs
test
or
pop
cmp
jno
cli
bound
jle
jp
push
xchg
mov
ins
xor
cmp
and
jmp
jns
adc
sub
jl
stos
iret
pop
out
scas
jo
push
retf
add
jmp
cmc
add
pushf
jecxz
sub
sbb
icebp
pushf
push
into
adc
sub
test
sub
outs
dec
inc
enter
xchg
or
shl
popf
sbb
and
adc
adc
mov
not
dec
fdivrp
or
mov
ins
cmp
sbb
jo
and
loop
push
out
xchg
shl
xlat
mul
mov
mov
fcom
push
adc
and
push
xor
and
xor
jl
mov
arpl
xor
call
adc
mov
and
in
and
inc
clc
push
xor
inc
xchg
sbb
stc
xchg
cmp
(bad)
pop
out
shr
ror
out
mov
xchg
xchg
pop
jg
adc
xor
xor
scas
xchg
in
mov
and
sar
pop
xlat
gs
dec
test
and
mov
adc
sub
cld
gs
enter
fldcw
or
dec
js
repz
movs
xor
lods
adc
or
pusha
out
pusha
mov
or
not
ret
push
stc
pop
(bad)
ins
ret
sbb
fdivr
aad
inc
inc
pop
jns
or
dec
sub
jbe
dec
scas
test
dec
dec
mov
dec
repnz
mov
mov
outs
inc
pop
in
mov
test
push
call
jnp
jmp
push
sbb
mov
mov
sbb
or
mov
(bad)
nop
clc
popf
pop
enter
mul
xchg
mov
dec
add
mov
sbb
rol
repz
gs
inc
cmp
lea
sbb
out
cmp
lods
out
out
sbb
repz
sti
leave
(bad)
(bad)
adc
lea
fisubr
scas
and
and
xchg
mov
cli
cdq
out
addr16
pop
push
into
push
add
and
mov
test
(bad)
mov
push
mov
jno
pop
bound
jbe
fcom
sub
jge
push
add
inc
test
cmp
mov
push
nop
fnstenv
push
add
xlat
movs
push
ins
rcr
cli
jnp
mov
imul
push
adc
push
movs
loop
push
sbb
shl
cdq
and
(bad)
cmp
adc
inc
inc
pop
add
stos
in
popf
ja
sbb
ss
xchg
mov
test
mov
aad
(bad)
and
pop
sar
mov
repz
push
je
jno
pop
pop
jo
test
mov
pusha
adc
shl
xchg
mov
ins
mov
(bad)
je
inc
enter
mov
or
sbb
push
dec
(bad)
cli
sub
add
push
jno
jns
mov
adc
push
dec
lock
mov
dec
mov
call
inc
not
pusha
ds
mov
jne
xor
pop
mov
repnz
loop
jg
inc
out
js
addr16
cmp
mov
rcr
or
sti
out
aas
pop
das
fild
mov
mov
div
sbb
dec
jo
inc
loop
pusha
mov
repnz
fdivr
repz
push
aas
out
aad
in
mov
push
std
xchg
inc
xchg
mov
das
dec
aam
fsub
shl
add
push
cmp
pop
dec
adc
(bad)
scas
mov
ss
pop
adc
bound
repnz
call
adc
jo
std
daa
ret
and
xchg
xor
sti
mov
sar
cmp
imul
jo
pop
scas
xchg
fwait
inc
sbb
inc
movs
push
xchg
dec
std
add
in
cmp
stos
xchg
repz
lock
loope
iret
stos
mov
ret
sbb
adc
inc
push
aad
mov
push
push
repnz
dec
scas
inc
fmul
repz
fild
mov
or
js
inc
hlt
and
cmp
(bad)
cmps
push
pusha
les
sbb
(bad)
mov
adc
cld
cmp
cmp
and
jnp
loop
cs
sahf
mov
aam
or
mov
mov
in
adc
cwde
mov
xor
jg
push
push
clc
aas
mov
cmp
sub
es
(bad)
clc
or
mov
sbb
jl
add
inc
mov
leave
jmp
repnz
pop
addr16
mov
pop
mov
inc
pop
je
nop
dec
je
sub
into
inc
push
sub
and
xchg
inc
call
scas
enter
xchg
sub
(bad)
jmp
int
and
inc
arpl
mov
push
cmp
fwait
mov
ret
and
or
in
data16
sbb
out
leave
cs
adc
(bad)
lods
push
loopne
cld
outs
xchg
ret
ja
add
test
mov
lock
addr16
outs
nop
adc
fiadd
movzx
xchg
imul
fmul
push
jo
adc
push
hlt
pop
mov
mov
push
add
aaa
call
and
(bad)
bound
add
push
push
jmp
sahf
and
popf
std
cmps
les
jl
pop
xor
add
aas
or
jmp
push
fcom
dec
(bad)
pop
(bad)
and
mov
push
xor
xchg
cdq
cmc
add
scas
and
mov
xchg
test
cld
dec
icebp
xor
cwde
repnz
cdq
pop
gs
sbb
sub
pop
inc
aas
ins
retf
or
mov
imul
pop
jg
xor
or
cdq
inc
jmp
or
xchg
cmp
imul
rcl
cmp
test
mov
xlat
or
jmp
or
test
sahf
stos
movs
rol
mov
mov
lock
mov
das
clc
sbb
add
adc
jg
jo
cmp
dec
mov
add
add
ror
loope
xor
cmc
imul
bound
popa
pusha
push
jp
mov
test
inc
inc
jge
pusha
xchg
add
and
arpl
sub
js
outs
shr
ja
ss
pop
adc
movs
xchg
div
sbb
sbb
sub
js
adc
pop
ja
std
sub
and
xchg
jae
ret
cwde
or
cmp
ins
and
outs
mov
mov
test
sub
fist
out
shl
mov
mov
pushf
out
or
or
ss
inc
and
push
mov
or
xchg
sbb
xchg
sbb
pop
cli
loopne
cmp
nop
mov
sub
jns
cdq
mov
retf
mov
xor
jnp
xor
ret
outs
test
pop
je
movs
in
mov
cld
xchg
sub
sub
sbb
cmp
cwde
jp
pop
pop
call
adc
pop
mov
call
add
retf
in
push
mov
add
mov
cli
mov
mov
jl
loope
mov
les
pop
(bad)
or
or
pop
shl
mov
and
stos
outs
mov
jl
or
jno
(bad)
out
push
ror
cmp
int3
out
cmpxchg
sub
cmp
aad
lock
push
inc
pop
inc
sub
jecxz
repz
jne
mov
movs
jmp
sub
test
scas
inc
or
add
shl
loop
inc
out
mov
sbb
(bad)
gs
sub
pop
sbb
in
pop
cmc
jo
ja
lds
and
bound
or
cmp
shl
sub
mov
jg
push
add
cdq
in
aam
sar
(bad)
lahf
out
pop
and
fild
xchg
sub
(bad)
retf
leave
pop
fsub
mov
test
sahf
jmp
adc
pop
xor
mov
sbb
push
cmp
jl
call
adc
mov
ins
inc
xor
push
cmps
(bad)
mov
xchg
mov
pop
mov
push
(bad)
repz
inc
xchg
test
cld
lods
push
(bad)
or
push
test
push
xor
xor
sub
push
aaa
or
mov
ds
cmp
lea
pop
push
inc
inc
jmp
pop
cdq
dec
mov
pop
inc
dec
test
in
add
mov
in
push
mov
adc
xchg
sbb
sbb
int3
add
inc
out
lds
and
loop
and
loopne
pop
adc
adc
dec
scas
das
outs
mov
sub
inc
adc
ror
adc
cld
jno
jnp
call
int
jp
lods
cmp
push
push
adc
cmp
nop
xlat
jae
mov
jb
aad
dec
push
jnp
mov
xchg
xchg
push
xor
mov
arpl
add
ror
out
mov
je
cmp
sbb
iret
add
fcomp
adc
mov
loopne
xchg
lahf
sar
push
(bad)
js
dec
imul
movs
push
jnp
mov
mov
imul
lods
stc
outs
mov
adc
lock
xchg
mov
mov
fld
lods
inc
aam
or
add
jmp
fistp
in
ss
nop
sbb
popfw
mov
ror
dec
mov
pop
mov
push
shl
adc
mov
jno
(bad)
int
or
push
mov
bound
inc
jnp
test
xor
mov
mov
cs
inc
cmp
mov
add
cmp
fs
lds
cmp
iret
popf
imul
ins
clc
movs
out
lahf
dec
mov
imul
stos
adc
lods
cmps
pop
shl
push
cmovnp
ret
add
mov
xor
ss
or
mov
ret
retf
out
push
dec
cmp
fnsave
cmps
js
fdivr
lods
ins
or
cld
xchg
js
(bad)
dec
movs
pop
xor
outs
or
cmc
jno
cld
imul
cmps
xor
sar
push
inc
lahf
sti
push
mov
mov
dec
add
das
fsub
not
scas
add
js
fnstsw
aad
mov
fdivr
and
scas
outs
aaa
repz
jmp
inc
inc
add
mov
jmp
sbb
std
in
xchg
inc
jmp
or
scas
or
cmp
movs
sbb
xchg
or
rcr
mov
cmp
data16
push
imul
push
clc
jge
push
xchg
mov
(bad)
xor
inc
and
cmps
and
push
les
mov
push
adc
push
push
cmp
lock
lahf
sub
jge
pop
leave
iret
or
int3
mov
adc
cmp
pop
cmp
test
and
and
pop
push
jne
aas
test
cmc
pop
mov
(bad)
ins
fdivr
std
fstp
pop
ins
mov
popf
jnp
ss
add
jmp
cmp
sub
adc
push
jns
dec
dec
in
jge
test
add
loopne
dec
inc
mov
mov
cmp
jnp
out
repz
xchg
shl
xor
pop
inc
mov
cmp
nop
popa
dec
test
aam
outs
stos
int3
setno
(bad)
mov
retf
push
push
push
xchg
mov
sbb
mov
sar
xchg
shl
push
outs
iret
xchg
push
pop
xchg
dec
cmps
xor
push
fidivr
fadd
adc
cmp
mov
inc
inc
mov
add
icebp
fs
jmp
cmp
push
mov
out
mov
(bad)
dec
xchg
dec
imul
cmp
outs
not
aas
cs
adc
in
push
add
test
fidiv
jne
or
aad
popa
imul
movs
ins
loopne
in
mov
ins
enter
lock
jl
fisttp
clc
push
adc
seto
or
pop
fisttp
in
fmul
test
clc
sub
add
inc
or
mov
adc
out
cmp
(bad)
jge
call
out
shl
cmp
test
ja
data16
jo
add
sbb
mov
int3
movs
call
test
xor
pop
mov
mov
dec
call
pop
call
dec
add
jecxz
das
or
push
lods
fisubr
pop
push
mov
jmp
leave
sti
int3
mov
fucomip
clc
inc
mov
dec
sbb
outs
cmp
sub
adc
daa
jns
sete
into
in
pushf
loop
push
and
retf
push
hlt
mov
jmp
xor
dec
repz
int3
loope
(bad)
clc
popf
dec
mov
ss
and
or
or
jge
or
jge
lods
pop
mov
fwait
sub
fdivr
cmps
ins
inc
pop
jo
int3
sub
mul
cmp
or
push
int
sub
jne
jl
clc
xchg
scas
mov
sub
data16
stc
mov
xchg
das
cld
sbb
call
add
xlat
dec
jg
out
aas
pushf
cmp
pop
js
adc
or
movs
leave
inc
adc
push
pop
sar
retf
mov
xchg
jno
cdq
mov
mov
int
cmps
jecxz
fisubr
es
ficomp
rcl
and
push
mov
shl
cmp
out
stc
loop
cmp
clc
sub
fisubr
push
adc
rol
clc
cmp
inc
hlt
out
inc
cs
cmp
rol
dec
inc
popf
fild
(bad)
fucomi
ds
add
into
pop
les
xor
jecxz
and
sub
sbb
mov
std
mov
enter
inc
int
inc
iret
das
jmp
push
push
adc
in
sub
dec
add
add
pop
add
and
mov
cmp
or
mov
mov
sub
add
loopne
daa
outs
xchg
xchg
outs
popa
dec
adc
call
(bad)
mov
sub
mov
mov
push
or
push
in
adc
call
mov
inc
fmul
jne
mov
xchg
cmp
fcmovb
mov
stos
jmp
(bad)
lods
jmp
into
pop
or
xchg
mov
shl
das
int
lock
mov
mov
in
pushf
xor
jle
jae
test
inc
cwde
xchg
fsubr
ja
xor
mov
lahf
pop
inc
stc
loopne
repz
mov
mov
in
pop
sub
mov
sbb
mov
pop
cmc
sbb
mov
lods
jg
ds
or
iret
mov
pop
arpl
ror
xchg
and
dec
imul
fnsave
sti
jnp
movs
inc
stos
pop
lahf
jno
pop
repz
test
push
(bad)
cmps
mov
or
stos
sbb
cmp
ja
imul
arpl
add
xor
ret
jge
imul
xchg
jnp
sbb
jp
rol
ss
adc
mov
leave
xchg
push
xchg
add
xchg
mov
mov
cmps
repnz
sbb
and
arpl
aas
and
dec
mov
popf
cs
enter
sbb
pop
jmp
xor
test
lock
xor
lock
and
mov
ret
push
cmp
(bad)
rol
xchg
fst
mov
sbb
jnp
pop
fwait
ss
mov
adc
inc
movs
mov
or
push
xor
popf
in
pop
les
jno
sbb
pop
pop
cmp
aam
sub
in
test
mov
jbe
jmp
cmp
mov
std
clc
and
mov
(bad)
dec
jmp
mov
sub
fistp
mov
jge
fadd
cmps
repnz
sub
mov
lods
xchg
mov
adc
inc
iret
std
dec
dec
retf
shl
jae
not
bound
imul
loop
pop
sti
cwde
jge
popf
lahf
lea
push
jne
mov
sbb
push
repz
inc
scas
in
xlat
(bad)
enter
mov
jge
inc
in
pop
ins
out
push
jmp
div
and
daa
pop
xchg
mov
in
aaa
pop
(bad)
fst
mov
sub
popa
push
xchg
sub
(bad)
mov
jl
adc
xchg
mov
xchg
mov
adc
inc
dec
sub
inc
stos
scas
push
test
pop
push
cmps
out
dec
or
fcmovne
dec
sbb
adc
int
adc
shl
sub
das
xchg
or
inc
(bad)
adc
jae
mov
or
mov
in
data16
xor
outs
cmp
lock
add
inc
sti
movs
scas
mov
das
call
xchg
leave
fwait
sbb
je
mov
xor
add
fdivrp
jae
pop
mov
(bad)
mov
clc
dec
add
out
cmc
fnstsw
ds
cmps
in
dec
mov
test
add
ins
and
adc
dec
int
xor
mov
call
nop
(bad)
sub
jne
sub
ds
aam
jne
rcr
sbb
inc
mov
pop
xor
cmc
pop
adc
mov
imul
push
ret
ror
or
mov
jnp
ss
sub
xchg
test
push
jbe
dec
sbb
out
jg
(bad)
out
lods
cmp
add
and
out
push
scas
xchg
stc
mov
jno
sbb
pop
enter
ins
mov
or
xor
scas
cld
push
test
not
jmp
xor
inc
loop
loopne
and
cmp
jmp
add
xor
push
stc
xchg
nop
rcr
rcl
mov
jae
or
es
outs
dec
dec
mov
out
rol
mov
or
jmp
rcl
call
shl
das
cwde
adc
call
inc
pop
sbb
or
dec
xor
into
ja
fisttp
push
fcomp
and
mov
les
aad
ror
test
ins
push
push
sbb
pop
dec
dec
mov
and
inc
mov
and
test
adc
je
and
push
aaa
sbb
jo
dec
xchg
mov
push
push
(bad)
jmp
jnp
or
pop
fsub
xchg
sub
mov
aaa
lods
push
or
and
cmp
pusha
add
fcmovb
push
adc
das
mov
movs
(bad)
retf
test
ds
ret
ins
(bad)
sub
or
iret
and
inc
jmp
mov
add
xor
xchg
fmul
mov
add
lods
js
inc
idiv
ret
(bad)
mov
retf
movs
shl
adc
stos
adc
dec
dec
scas
fimul
adc
cld
mov
scas
and
loop
push
in
fbstp
or
test
sbb
jmp
push
or
lock
sbb
mov
mov
fsub
lds
add
sbb
dec
jae
dec
popf
mov
sbb
and
test
cmp
push
mov
movs
dec
ret
rol
push
pusha
mul
jecxz
fsubr
idiv
imul
mov
cmp
push
dec
push
cmc
or
ins
push
mov
(bad)
nop
popf
call
mov
inc
dec
not
dec
imul
sub
mov
sar
into
(bad)
enter
mov
cmc
mov
push
xor
fcom
test
cmp
pusha
leave
loope
pop
call
dec
dec
cmps
out
push
or
stc
sub
ds
sub
inc
mov
gs
sahf
pop
pop
inc
(bad)
aas
leave
jge
dec
pop
and
add
mov
in
imul
or
dec
mov
or
mov
imul
jl
mov
(bad)
push
rcr
mov
arpl
cs
adc
push
mov
ja
out
jecxz
mov
and
mov
adc
xchg
sub
icebp
mov
je
adc
add
sti
(bad)
lods
inc
inc
jge
fwait
out
jmp
cli
stos
mov
jb
pop
call
adc
popf
icebp
and
js
adc
mov
aam
stos
jl
loopne
cli
and
(bad)
aam
xchg
jns
adc
or
test
xor
push
rcl
cmp
(bad)
aaa
loope
push
je
push
sub
and
cmp
lahf
std
mov
adc
fisubr
adc
hlt
int3
fcomip
retf
retf
mov
mov
mov
shl
lds
mov
fiadd
repnz
mov
ret
cmp
cmc
push
xchg
adc
mov
imul
xor
loope
push
inc
loop
bound
mov
xchg
adc
in
pop
test
fsubr
jmp
or
and
inc
adc
xor
sbb
cmp
fsub
iret
fild
call
pop
rcr
mov
mov
nop
push
or
cs
cmp
and
jmp
aaa
add
add
sbb
std
mov
pop
icebp
mov
mov
pop
das
sub
and
(bad)
popf
cli
(bad)
cdq
push
jp
dec
mov
mov
mov
xor
adc
push
mov
call
data16
ds
mov
add
pop
rcl
push
lods
imul
rol
dec
fmul
outs
js
and
(bad)
retf
(bad)
retf
push
les
lahf
inc
ins
aaa
push
outs
lods
or
mov
leave
cmps
stos
push
xor
mov
adc
push
(bad)
mov
cs
sbb
stos
imul
or
out
(bad)
adc
sbb
out
lods
sub
gs
fst
mov
pop
shl
mov
inc
ja
mov
pop
push
test
and
jg
mov
cmp
or
dec
xor
mov
adc
rcr
adc
add
ret
mov
cmc
adc
add
and
mov
sahf
sbb
(bad)
rcl
push
sar
and
fwait
and
xchg
ror
jecxz
pop
rcr
clc
sar
cmp
pop
in
(bad)
aad
xor
hlt
adc
push
dec
ss
bound
aaa
clc
imul
and
sub
out
les
fwait
(bad)
int
bound
int3
call
adc
sub
mov
xchg
enter
daa
cmp
adc
or
ffreep
std
jecxz
mov
cwde
xor
mov
or
aam
and
cwde
mov
xor
sti
je
sbb
and
in
je
mov
sahf
pop
out
fimul
cmc
xchg
jae
mov
cmp
(bad)
cmps
mov
aas
nop
xlat
popw
inc
or
or
xor
ret
sub
not
adc
rol
int3
repnz
adc
cmp
add
add
lea
(bad)
xchg
fistp
cmp
test
jp
or
xor
mov
stos
or
into
mov
data16
iret
shr
sar
fild
(bad)
aad
xchg
addr16
push
xor
shl
je
imul
cwde
stos
pop
xchg
cmp
jecxz
es
jo
mov
sti
push
adc
rol
push
(bad)
daa
test
(bad)
push
shl
inc
pop
cdq
ins
cmp
out
loope
mov
cmp
and
hlt
jb
lods
int
shl
xor
cmps
jns
jecxz
xchg
mov
dec
xor
ins
mov
aas
jnp
adc
adc
bound
push
out
cmp
mov
push
mov
popa
cmp
push
mov
mov
fs
pop
jo
xor
enter
sbb
push
pop
fimul
mov
adc
test
lea
aad
jl
es
retf
outs
cmp
push
sub
sbb
push
mov
push
dec
pop
mov
push
inc
je
xchg
fldenv
fisttp
test
jl
xor
dec
xor
or
dec
test
mov
(bad)
aaa
pop
movs
leave
add
cmp
imul
sbb
sar
cdq
fisttp
das
scas
adc
mov
xor
test
(bad)
jnp
mov
xor
into
sub
pushf
call
dec
push
push
imul
sahf
retf
mov
xchg
in
mov
and
xchg
add
xchg
inc
test
dec
pop
in
lahf
cmps
mov
out
mov
fwait
push
outs
sub
call
or
mov
mov
das
pop
mov
hlt
icebp
inc
stos
dec
jle
enter
pop
std
repz
in
push
xchg
sbb
mov
in
je
pop
mov
neg
out
inc
in
pushf
and
stc
xchg
(bad)
int3
iret
out
sub
push
jns
lods
sbb
or
adc
mov
ret
mov
and
mov
xchg
imul
or
gs
clc
xchg
sbb
sbb
adc
pushf
and
jmp
sti
dec
mov
stos
sbb
xchg
xor
add
jmp
(bad)
lods
xlat
cdq
add
inc
cmp
or
cmp
push
fcmovnbe
mov
mov
jo
push
not
jno
sahf
arpl
ficomp
dec
sbb
out
xchg
jbe
into
fcomp
sub
pop
cld
stos
cwde
sti
sti
inc
hlt
dec
mov
dec
pushf
out
out
adc
aad
push
(bad)
mov
adc
jns
xchg
int
inc
or
xchg
imul
xor
mov
es
lods
aas
lahf
inc
pop
sbb
in
pop
shl
xor
icebp
mov
xchg
movs
pop
jge
pusha
dec
aad
ins
cmp
jecxz
push
jecxz
fs
addr16
pop
or
ret
es
scas
mov
push
push
aam
out
cmps
stc
mov
scas
in
stc
sub
mov
aaa
inc
ror
and
hlt
inc
push
inc
inc
mov
mov
dec
fwait
sub
leave
ins
sub
in
pop
fdiv
test
pop
daa
jp
popa
ins
add
aad
or
clc
mov
inc
repnz
pusha
es
adc
mov
lods
sub
iret
mov
fidiv
xor
jne
dec
inc
in
fdiv
fidiv
aas
inc
inc
xchg
dec
or
inc
mov
clc
jecxz
cld
ret
sub
pop
sahf
cmp
ja
ret
dec
jo
outs
jge
retf
inc
test
out
mov
enter
jmp
(bad)
pop
dec
sbb
mov
call
inc
pop
(bad)
sbb
mov
int3
mov
mov
(bad)
loop
mov
sar
out
jle
xchg
adc
loope
inc
xchg
nop
jo
movs
pop
pop
add
mov
and
xchg
pop
inc
jnp
dec
mov
inc
and
jp
pop
or
pop
jbe
cmps
cmc
mov
mov
inc
adc
(bad)
and
mov
call
jne
push
pusha
mov
js
xor
cdq
add
mov
mov
into
mov
jmp
sub
je
or
pop
test
mov
mov
and
cwde
sbb
rcr
fld
sub
test
sbb
adc
mov
lods
mov
push
pop
inc
lock
sub
mov
aaa
cmps
shr
cmp
pop
fstp
jmp
mov
ds
ins
test
aam
ret
sbb
addr16
scas
mov
ss
mul
pop
ins
retf
test
in
mov
ins
push
push
xchg
shr
or
add
pop
xchg
mov
aas
(bad)
ins
jb
add
mov
xor
mov
in
inc
clc
or
(bad)
pop
pusha
or
cli
pop
or
jge
sbb
popf
jno
dec
ficom
iret
push
sbb
inc
mov
arpl
adc
scas
out
xor
mov
mov
mov
adc
dec
bound
xor
add
push
mov
xor
xchg
sbb
stos
dec
(bad)
icebp
lea
xor
scas
mov
fimul
mov
add
fisubr
ja
repz
sar
xor
dec
pop
xor
mov
mov
mov
adc
cmp
in
or
add
arpl
and
and
jle
(bad)
(bad)
lock
xlat
dec
push
inc
ja
stos
js
mov
and
push
aas
mov
pop
in
or
cmps
movs
std
sahf
sti
loop
fld
fs
adc
dec
mov
shr
es
pop
into
jb
outs
hlt
mov
cli
xchg
test
out
in
xor
xor
pop
cmc
clc
mov
aam
loope
shl
push
sbb
push
pop
cli
mov
(bad)
jbe
inc
adc
clc
push
pop
push
jge
push
xlat
leave
adc
xor
inc
popf
rcr
jns
push
dec
jne
mov
iret
cli
add
sahf
mov
outs
push
in
xor
out
scas
sub
xor
enter
and
stc
sbb
sbb
cdq
ret
sbb
jmp
lock
dec
push
pop
scas
cmp
cmp
fidivr
xchg
mov
cpuid
stos
dec
push
inc
and
xor
adc
mov
mov
pop
inc
fs
sbb
or
pusha
dec
add
adc
sub
shl
dec
inc
inc
test
fild
pushf
mov
adc
add
or
int
(bad)
in
outs
loopne
fs
mov
cmp
test
mov
xchg
mov
and
lea
sbb
pop
cmp
pop
inc
sub
scas
fild
leave
sbb
test
mov
sbb
aad
jl
push
sahf
jns
and
shl
add
push
cdq
mov
std
ds
enter
jl
ins
shl
adc
mov
mov
mov
sbb
inc
cmp
or
fsub
sub
dec
imul
in
jns
jle
ins
cmp
repnz
aaa
out
fwait
add
aaa
aas
or
fdivr
xor
xchg
sbb
ds
test
loopne
xor
jle
add
mov
addr16
sub
sub
mov
imul
ds
mov
in
aaa
push
and
mov
xor
out
and
mov
sbb
ins
pop
(bad)
adc
xor
jae
jg
push
gs
jae
jg
pop
jmp
stos
stos
cdq
mov
sti
addr16
shr
xchg
jge
bound
inc
je
popa
shl
and
pop
mov
inc
scas
movs
push
cmp
int3
icebp
(bad)
pusha
in
mov
fdivr
cmp
pop
ret
test
jp
adc
sub
sub
(bad)
or
std
scas
push
inc
jo
ret
adc
in
mov
mov
es
mov
jmp
jg
and
je
and
pop
js
mov
fild
add
(bad)
rcr
jmp
fwait
jmp
int
jno
dec
xchg
addr16
mov
mov
popa
js
int3
sub
shl
shl
adc
or
lahf
push
xor
add
shl
xchg
pop
push
pop
mov
imul
out
cli
(bad)
xor
stos
(bad)
arpl
icebp
sbb
mov
ret
arpl
mov
fdiv
pop
out
lds
call
aam
stos
in
outs
loop
cmp
xchg
push
push
mov
cmps
xchg
jno
xchg
loop
mov
lds
ds
sbb
and
cmovns
cmc
add
mov
cmp
ja
stos
xchg
loopne
or
(bad)
inc
add
mov
test
ja
pop
daa
adc
test
scas
sub
push
jbe
sbb
lods
dec
or
repnz
jo
sub
cmp
iret
cdq
mov
push
ret
pusha
pushf
push
std
dec
jmp
push
test
adc
fiadd
stos
xchg
xchg
push
test
mov
and
pminsw
xchg
xor
test
ja
sahf
ins
or
push
retf
sbb
dec
jge
xchg
std
(bad)
call
ja
stos
and
jns
adc
push
fwait
mov
aam
xor
(bad)
aad
push
pop
mov
into
ds
adc
in
mov
retf
fmul
scas
dec
sbb
push
nop
popf
loopne
jmp
leave
adc
inc
movs
(bad)
call
dec
and
xchg
mov
cmp
in
ja
jmp
add
pop
xor
jmp
jne
stc
sbb
scas
inc
ins
sahf
xchg
jle
mov
enter
sti
icebp
rcr
loopne
fidiv
leave
mov
fdivp
or
mov
sub
mov
lds
nop
out
jnp
es
push
mov
enter
mov
pop
inc
xchg
mov
inc
adc
add
jo
clc
sti
fisub
cmp
xor
or
dec
ret
dec
push
sar
hlt
into
mov
jb
int3
mov
out
out
aaa
sbb
add
adc
xor
clc
push
cmp
inc
fwait
movs
(bad)
sub
mov
cmp
movs
dec
mov
std
(bad)
cmp
inc
(bad)
sahf
(bad)
pop
lock
mov
rol
and
loop
inc
mov
add
fwait
sbb
mov
and
push
push
icebp
or
mov
xor
adc
addr16
inc
aaa
pushf
and
sub
push
int3
dec
mov
and
icebp
retf
mov
and
mov
stos
sar
imul
into
mov
aas
fcomp
(bad)
std
xor
loopne
push
cmp
jno
mov
jbe
sub
sub
pop
dec
ror
mov
arpl
xchg
call
inc
xor
pop
fs
mov
add
mov
jle
ds
in
daa
pop
mov
inc
aaa
imul
inc
ja
fisttp
rcr
test
fs
cld
enter
dec
ins
mov
mov
icebp
cli
call
scas
or
cmps
adc
sbb
(bad)
pushf
hlt
icebp
dec
leave
js
push
call
xchg
mov
xor
test
imul
or
repz
leave
nop
outs
mov
sub
cdq
jge
fisttp
and
test
sbb
xor
lock
nop
cdq
pop
outs
mov
xchg
ret
mov
ja
push
sbb
inc
mov
push
mov
cmp
icebp
cmp
sahf
mov
mov
sbb
fwait
(bad)
xchg
adc
ficomp
es
or
adc
push
test
(bad)
movs
stc
push
repnz
fdivr
(bad)
adc
mov
movs
push
outs
push
push
mov
sbb
ins
out
sti
fimul
jg
mov
push
xor
cs
push
pop
sub
pop
jecxz
push
inc
movs
jp
mov
jl
jb
xor
sbb
xor
and
mov
pop
sbb
addr16
scas
xchg
repnz
fadd
sub
lods
shl
push
jnp
outs
mov
and
jnp
inc
cmps
fnstsw
cmp
rol
add
repz
and
aaa
pop
(bad)
cli
das
push
ror
jne
stos
pop
(bad)
int
cmp
int3
mov
dec
xor
mov
iret
xchg
icebp
jnp
or
retf
repnz
push
les
addr16
lahf
into
fisub
(bad)
cmps
inc
xor
add
jno
arpl
mov
aam
xchg
aad
repz
stos
add
scas
sti
das
arpl
sbb
stos
and
sub
cmc
int
mov
iret
add
mov
shl
cld
imul
ds
leave
rol
pop
ins
fstp
pop
dec
cmp
xchg
jo
mov
push
jmp
rcl
(bad)
pop
mov
ins
push
sbb
loope
mov
push
or
sub
or
jmp
scas
inc
daa
(bad)
iret
push
or
pop
in
xor
test
ins
sahf
push
push
add
fld
jae
push
fidivr
sub
ss
xchg
scas
cli
ss
pop
cld
cmps
pop
pop
cmps
cmps
jmp
xchg
cmc
daa
shr
mov
into
addr16
les
sub
hlt
jle
dec
cli
xchg
dec
out
or
sti
es
bound
xor
addr16
cmps
pop
pop
idiv
pop
fcom
not
addr16
int3
push
sbb
nop
(bad)
sti
mov
or
cmp
cmp
inc
imul
mov
mov
xor
clc
out
push
push
hlt
cmps
cmp
pusha
cmps
sahf
ins
daa
movs
xchg
das
jo
jecxz
mov
push
pxor
cmp
inc
add
aas
je
mov
cmp
in
adc
pop
addr16
sbb
pop
adc
push
daa
pushf
out
sbb
adc
jmp
int3
jnp
xchg
dec
sub
pop
mov
push
aaa
mov
xor
clc
cld
pusha
push
xor
sahf
push
push
mov
add
in
pop
jmp
in
jnp
inc
or
fwait
cli
cmp
call
int3
push
push
popa
pusha
mov
or
mov
int3
push
ficomp
pop
loope
dec
sbb
std
pop
mov
mov
pusha
adc
hlt
mov
push
xor
push
jnp
ret
aad
scas
jo
pop
mov
ja
jbe
mov
lds
xchg
std
imul
inc
mov
mov
push
fild
pop
push
leave
mov
mov
sub
mov
inc
mov
cmc
jb
setle
xchg
fist
jbe
dec
add
lea
stc
test
jae
pop
jmp
jle
mov
idiv
push
or
mov
sbb
and
test
and
cmovnp
in
outs
(bad)
jmp
mov
push
mov
dec
push
cld
cli
jb
jge
in
mov
and
mov
mov
pop
cmp
fs
repz
imul
adc
jg
ficom
in
cdq
mov
mov
inc
das
icebp
cmp
sbb
std
(bad)
xor
inc
and
xchg
mul
xchg
sbb
fadd
in
sub
lea
dec
inc
adc
jl
scas
cmp
scas
add
and
pop
in
les
add
icebp
leave
in
shl
dec
pop
xor
pop
and
cli
push
rcr
mov
int3
dec
xchg
sbb
or
jmp
lods
fstp
inc
lahf
and
mov
sti
es
aas
xchg
and
mov
(bad)
popf
pop
les
sub
sub
mov
aas
aam
xor
loopne
cmp
lahf
add
std
mov
es
shr
daa
push
cmc
iret
mov
and
pop
dec
sar
sbb
lahf
cli
rcl
aam
dec
jge
ret
sbb
push
int3
sub
dec
test
xchg
ret
repnz
xchg
lea
sbb
(bad)
test
dec
add
test
pop
out
adc
mov
ret
pop
scas
ins
add
into
out
movs
aad
dec
std
push
push
inc
sub
mov
push
movntq
jle
or
arpl
mov
ret
out
cmp
es
jne
call
mov
cmc
outs
sbb
in
icebp
rcr
mov
inc
push
cmc
enter
inc
in
pop
xchg
les
add
or
mov
call
jl
pop
mov
dec
sub
lahf
popf
mov
in
mov
xchg
clc
jle
jne
xlat
rol
pop
jge
pop
cmp
lods
cmp
movs
das
jge
fnstenv
and
fsub
jbe
mov
sub
add
xor
mov
sbb
or
iret
shr
cli
retf
jmp
mov
test
pusha
mov
jg
cdq
sbb
xlat
mov
or
fst
lock
add
repnz
leave
ret
sub
add
sub
test
or
mov
and
xchg
nop
fiadd
stos
pop
or
sub
scas
sub
jb
(bad)
push
mov
pop
jecxz
fcomip
dec
and
punpckhwd
inc
dec
js
push
test
sbb
mov
in
pusha
mov
fmul
mov
sbb
jbe
inc
fist
xchg
jmp
rcr
in
cmps
sub
neg
in
adc
jmp
sub
div
xor
ins
lock
xor
lods
mov
std
xchg
and
sub
pop
outs
mov
(bad)
in
cmc
sbb
xor
fst
sar
ret
inc
cmps
mov
dec
lods
sahf
inc
cmps
adc
ins
cdq
fistp
cmp
jae
rol
sbb
shr
test
inc
jb
je
mov
ffree
lahf
pusha
sub
inc
mov
jb
retf
jle
es
mov
pop
outs
pop
icebp
mov
outs
pop
pop
sbb
dec
jmp
adc
jg
scas
adc
js
sub
add
jmp
cmp
pop
cs
gs
xchg
push
xor
je
jnp
add
das
ja
jne
mov
pop
jl
or
(bad)
std
sub
xlat
out
sub
in
or
jo
iret
pop
sub
pusha
or
and
hlt
inc
or
scas
enter
mov
pop
nop
and
add
dec
and
inc
sub
cmp
cdq
jbe
dec
pop
bound
dec
push
call
arpl
sbb
movs
or
das
in
iret
and
ror
pop
lods
mov
pop
test
gs
cld
rcr
push
xchg
outs
inc
xchg
aaa
std
mov
pop
jle
(bad)
push
aaa
inc
or
adc
inc
(bad)
sti
int3
cld
ror
push
sbb
xchg
inc
push
mov
cmp
fld
popf
pop
repnz
xor
jmp
jb
dec
sahf
out
leave
and
mov
jnp
xor
or
prefetch
or
movs
ja
in
sub
in
dec
popa
mov
iret
pop
push
js
loopne
sub
xchg
jge
pop
movs
popa
push
jl
fistp
push
das
pop
and
lds
add
inc
loop
call
sbb
mov
cs
inc
and
jl
push
push
mov
sub
loopne
adc
test
push
xchg
lds
jg
ss
jp
(bad)
aaa
(bad)
out
test
lea
mov
out
movs
stc
xor
push
in
sbb
adc
jmp
dec
inc
ds
mov
fmul
add
xor
pop
cmc
sbb
call
sub
retf
mov
push
es
aam
mov
out
imul
cdq
adc
stos
call
out
rcr
test
lods
push
add
mov
adc
adc
inc
mov
inc
push
or
pop
stc
(bad)
repz
inc
fldcw
jae
cmp
add
mov
mov
fwait
mov
cmp
ret
push
into
mov
mov
xor
push
sbb
mov
adc
add
jg
ja
push
dec
in
shl
es
jb
xor
sub
adc
xchg
add
add
daa
sar
jo
mov
in
mov
mov
test
inc
mov
bound
rcl
call
xor
or
ret
fdivr
mov
(bad)
neg
ret
sbb
(bad)
pop
imul
inc
pop
cmp
loopne
dec
sbb
cmc
ss
push
jmp
sbb
dec
sti
retf
mov
add
mov
ja
and
nop
call
or
xor
fisubr
mov
mov
xlat
mov
and
inc
sbb
inc
mov
mov
les
jns
sub
add
std
jae
movs
xor
sbb
test
adc
in
dec
add
ins
in
fisubr
push
inc
xchg
mov
lea
mov
add
push
(bad)
cmp
je
sub
mov
jg
js
push
iret
cmp
fs
jmp
fwait
dec
inc
or
mov
mov
outs
mov
out
es
xchg
dec
add
stc
shl
lods
scas
stos
mov
push
xchg
or
pop
dec
sub
adc
and
pop
dec
cmp
mov
push
add
push
enter
mov
ja
scas
mov
sub
stos
fist
mov
ja
test
ficomp
lahf
cmp
sub
in
and
fs
daa
cmp
jbe
add
sub
push
ja
fst
mov
jg
mov
mov
sti
mov
aaa
jp
lahf
sbb
dec
movs
test
popa
pop
pushf
jae
jg
in
xchg
xor
hlt
pop
shr
mov
sti
mov
dec
xacquire
mov
jae
push
dec
xchg
sub
ficomp
outs
addr16
mov
dec
xor
(bad)
jecxz
cmp
mov
sub
and
out
pop
push
je
mov
sub
and
pop
imul
sbb
push
daa
fdiv
cmc
cmc
cmp
xor
pop
jl
dec
dec
(bad)
cmp
shr
sbb
adc
aaa
adc
ss
mov
stos
jp
imul
push
add
and
xchg
jecxz
icebp
push
jg
mov
mov
outs
scas
nop
cmc
arpl
and
call
inc
int3
push
inc
mov
lods
mov
popf
leave
sbb
sbb
sub
out
xchg
or
movs
pushf
bound
xor
out
cmp
cld
into
aam
stos
test
xchg
test
mov
out
sub
(bad)
fisubr
lahf
dec
imul
pop
sub
int
test
lea
retf
rcl
sbb
inc
es
rcl
ja
mov
push
movs
cmps
jp
jne
jecxz
loope
xchg
mov
push
pop
push
arpl
fsub
cmps
sub
xlat
push
inc
in
cmps
xchg
inc
sbb
add
mov
xchg
xlat
repnz
iret
ret
pop
fucom
adc
cwde
outs
lea
mov
push
imul
arpl
pop
sub
int3
ja
mov
sub
or
xchg
pop
ss
adc
mov
lgs
pusha
outs
test
ret
test
jb
ja
(bad)
iret
sbb
mov
pusha
in
jbe
jo
push
aam
jl
and
imul
ss
inc
popf
iret
loope
int3
cs
not
push
in
(bad)
in
sbb
mov
or
out
pop
mov
inc
hlt
movs
dec
retf
fs
xchg
cmp
bound
cdq
xlat
test
jmp
je
stos
jbe
mov
xor
pusha
dec
or
stos
and
xor
pop
and
call
cmps
adc
mov
mov
cmp
out
sbb
jmp
mov
call
repnz
in
stos
add
outs
mov
adc
cmps
add
xchg
retf
repz
mov
dec
mov
mov
nop
jp
sub
(bad)
dec
fadd
ja
or
scas
pop
cdq
lds
sub
sub
push
loopne
loopne
(bad)
mov
in
data16
fnstcw
lock
mov
xor
inc
int
xor
gs
adc
dec
enter
outs
ficom
add
mov
add
dec
pop
xlat
ret
cs
mov
aam
in
cmp
pusha
adc
pop
shr
or
cld
mov
minps
test
bound
rcr
loop
jbe
mov
cmp
mov
test
jne
push
jno
movs
or
add
mov
or
imul
adc
ret
and
repz
das
movs
jle
and
stos
(bad)
fcomp
std
pop
sub
mov
dec
push
and
pusha
push
and
and
pop
cmpxchg
gs
xor
inc
pop
arpl
push
jmp
jg
mov
jecxz
adc
(bad)
and
pop
and
jmp
mov
fsub
inc
mov
add
jb
inc
cmp
push
xchg
js
aas
inc
sub
les
nop
lods
mov
shr
mov
mov
stos
push
sbb
imul
xor
in
stc
jnp
xlat
and
or
rcr
shl
cmp
cdq
push
pop
cmc
xor
stos
mov
lods
mov
mov
sbb
jne
mov
jb
inc
sub
jb
adc
mov
(bad)
xor
dec
push
mov
gs
inc
push
pop
iret
lods
in
icebp
repz
rcr
cmps
adc
lahf
jmp
jp
push
outs
sbb
xor
inc
cmps
xchg
outs
int3
fstp
inc
int3
stos
mov
adc
cmp
jmp
retf
dec
mov
xor
(bad)
out
jg
sub
inc
test
(bad)
push
popa
das
call
sahf
sbb
inc
not
stos
cmp
push
ja
jo
jbe
popa
cmp
scas
push
mov
outs
mov
(bad)
mov
lds
sti
pop
mov
and
bound
inc
jo
pusha
cmp
xlat
cmc
mov
cmp
xor
push
xor
sbb
push
and
scas
cmps
sbb
pop
xchg
in
add
enter
pop
jnp
arpl
std
stos
or
mov
or
push
jg
mov
jmp
jp
xor
add
ss
(bad)
hlt
imul
std
cli
cli
clc
addr16
aad
jmp
pop
sbb
stos
(bad)
cs
je
mov
cmp
loope
ds
dec
fimul
in
and
cwde
fistp
and
jge
push
dec
shr
les
repz
add
mov
dec
clc
xchg
sbb
cmp
xchg
iret
dec
mov
int
pop
ins
inc
mov
push
push
mov
xor
pop
sbb
or
mov
(bad)
repnz
push
push
xchg
pushf
xor
xchg
(bad)
popf
mov
pop
in
retf
mov
mov
push
xor
mov
sbb
aaa
sub
dec
repnz
xor
mov
mov
out
lods
stc
or
mov
sub
push
outs
and
pop
popa
mov
pop
stc
adc
xor
pop
leave
cmp
push
or
push
adc
int
add
pushf
push
add
mov
inc
dec
inc
outs
aaa
scas
push
pop
jge
bound
jmp
das
outs
xor
jmp
stc
push
retf
and
xor
xchg
inc
or
leave
(bad)
mov
sub
mov
xor
push
sub
jmp
dec
jl
lock
scas
pop
or
push
jns
lea
add
push
or
stc
xchg
mov
mov
mov
sar
ret
xrelease
jae
fsub
mov
dec
daa
scas
jmp
pop
(bad)
sar
les
xor
unpckhps
and
xchg
call
jo
imul
ret
cmc
push
call
push
jl
test
xchg
and
fstp
fst
push
add
js
outs
add
cmp
(bad)
cmp
mov
add
stc
out
pop
js
fcom
mov
mov
mov
retf
enter
pop
outs
popf
(bad)
ja
jnp
das
cmps
scas
mov
mov
stc
xor
fdivp
in
nop
clc
adc
adc
cmp
into
ja
test
inc
xchg
push
fwait
les
or
adc
outs
xchg
push
out
xchg
shl
push
mov
adc
hlt
(bad)
repz
xor
adc
out
sbb
aas
(bad)
pusha
add
loope
pop
inc
jb
mov
inc
xor
icebp
jp
cmp
inc
ja
jecxz
cmp
xor
scas
pop
add
mov
icebp
jae
inc
sub
adc
jns
mov
fcom
adc
pop
mov
pop
inc
xchg
xchg
add
mov
rcl
add
cli
jge
jg
xchg
inc
mov
mov
inc
(bad)
test
je
jmp
cmp
xchg
icebp
shr
xchg
pusha
std
cli
nop
adc
leave
push
push
ins
lock
mov
or
mov
sbb
loope
aaa
xchg
sbb
mov
mov
inc
pop
adc
jne
cdq
lods
push
sub
jns
pusha
call
or
mov
das
retf
(bad)
dec
out
nop
mov
arpl
and
pop
push
clc
inc
fbld
pop
daa
gs
sbb
and
jo
sub
jecxz
lahf
xor
sbb
push
add
sahf
pushf
jnp
fstp
mov
jmp
mul
stos
pop
pop
(bad)
push
cld
cwde
test
add
in
sbb
sub
(bad)
jl
test
and
and
adc
jmp
je
jle
(bad)
pop
add
imul
or
into
dec
fs
jnp
call
mov
push
sub
inc
cmp
adc
lds
mov
xchg
retf
aaa
ins
hlt
js
adc
out
mov
hlt
cli
or
nop
xor
pushf
in
fldcw
retf
call
jp
cmp
inc
in
or
xor
addr16
ins
into
sahf
inc
inc
dec
icebp
mov
jmp
sbb
mov
jno
sti
sub
mov
add
or
or
push
shl
sbb
loop
loopne
cmp
mov
dec
mov
js
jle
cmps
mov
push
imul
or
loopne
sub
sbb
mov
test
test
inc
fidivr
(bad)
jmp
mov
pop
out
push
stos
daa
fcmovnb
out
cmps
mov
out
cmp
fistp
pop
stos
(bad)
jo
or
sub
sbb
int3
pop
stc
pop
cmp
lock
mov
mov
push
push
imul
test
xchg
lods
scas
fadd
cmp
cld
int3
dec
scas
add
inc
clc
popf
fcmovbe
inc
ficomp
pop
fucom
or
(bad)
mov
pop
inc
jge
test
arpl
xor
cmp
call
lods
es
movs
mov
pop
fwait
mov
dec
push
call
pop
cmp
sbb
sbb
rcl
out
push
sbb
mov
popa
lods
jno
lods
mov
mov
fnstsw
in
popa
or
imul
cmps
pop
(bad)
clc
mov
jle
test
je
or
jle
popf
inc
xchg
(bad)
ins
ss
pop
fdivr
ss
add
in
sub
sub
xor
les
jg
dec
outs
cmp
pop
outs
stos
jl
dec
add
leave
aaa
push
call
xchg
cdq
outs
xchg
xchg
adc
sahf
pop
fistp
add
jp
pop
add
shl
adc
sub
leave
daa
ds
mov
inc
rcl
call
out
icebp
ins
lds
add
mov
cli
cdq
aam
mov
sbb
jno
rcl
jno
call
mov
gs
or
addr16
push
sahf
cmp
popa
sub
(bad)
fdivrp
call
sbb
dec
sbb
(bad)
fadd
jmp
xor
add
(bad)
rcr
loop
ret
fisub
dec
add
fidivr
stos
fucom
jge
ror
push
mov
inc
mov
or
sbb
adc
cmp
mov
in
dec
cmp
mov
sub
mov
in
inc
add
push
out
dec
push
jae
movs
xor
mov
out
mov
test
fdivr
jmp
ret
cmp
inc
push
sbb
jne
mov
nop
jge
push
push
inc
sub
fsubr
mov
mov
jg
es
xor
aaa
shl
cs
sbb
cmps
and
jnp
mov
cmc
movs
pop
or
push
sub
shl
fst
xor
imul
jg
nop
mov
xor
ins
es
imul
rcr
scas
push
movs
lods
mov
aam
mov
mov
scas
sub
ins
rol
inc
push
xchg
pop
push
(bad)
out
ror
push
test
andps
(bad)
stc
pop
xchg
sbb
sar
movs
shl
and
inc
stc
sbb
fldl2e
adc
jbe
adc
jnp
and
sti
test
clc
(bad)
movs
push
cmps
mov
in
test
scas
int
pop
xlat
rcr
jecxz
sbb
ret
or
not
xor
push
jp
std
sbb
nop
aaa
jge
int3
in
stos
push
repnz
push
push
push
(bad)
(bad)
cmc
fdivrp
mov
loope
hlt
xchg
rol
cmc
in
bound
cmp
rcl
pop
aam
mov
jmp
sub
sbb
mov
pop
int
mov
ins
mov
mov
push
push
or
or
addr16
out
or
jo
retf
jae
je
mov
mov
dec
sub
or
js
fdiv
mov
lea
and
jmp
cmp
push
inc
repnz
sbb
adc
and
adc
inc
test
js
scas
mov
mov
jp
ins
dec
fdiv
mov
push
add
das
inc
xchg
ds
pop
inc
jo
mov
or
pop
dec
jno
sub
jo
jmp
cmp
mov
scas
out
(bad)
sti
jne
repz
std
sub
inc
inc
cwde
in
leave
ret
lahf
pushf
add
jo
xchg
std
cld
or
lods
mov
mov
dec
or
fstp
stos
out
je
imul
ins
enter
fimul
add
rol
jno
ficomp
jne
outs
inc
rcr
movs
push
arpl
pop
mov
dec
test
repz
in
sub
mov
movs
adc
and
daa
pmuludq
add
xor
lea
outs
(bad)
(bad)
cmp
sub
pop
ret
jmp
pop
mov
into
adc
inc
mov
cmp
js
and
mov
mov
out
mov
push
sbb
imul
or
jbe
or
cmp
pushf
adc
stos
push
iret
or
stos
and
scas
xchg
inc
icebp
icebp
and
cmp
int
xchg
cmp
xchg
mov
movs
pop
gs
push
xor
add
mov
mov
mov
and
test
jmp
pop
ins
push
push
pop
adc
sub
fsub
mov
inc
pop
inc
xor
movs
(bad)
sub
stos
mov
xor
jne
jmp
nop
stc
aaa
jl
sbb
mov
repz
repnz
jmp
retf
stos
repnz
scas
and
xchg
hlt
ret
add
inc
enter
dec
outs
sub
movs
push
dec
mov
lahf
clc
adc
fild
add
clc
xchg
popf
lds
cmps
das
inc
xor
sbb
xchg
outs
(bad)
xor
movs
push
fstp
(bad)
push
not
inc
scas
sub
add
lods
and
retf
and
test
xor
or
push
outs
add
mov
or
ret
mov
adc
(bad)
addr16
adc
loope
pop
movs
enter
and
mov
mov
push
out
(bad)
cmp
mov
adc
adc
ins
popa
rol
mov
movs
(bad)
and
out
sbb
pop
or
and
add
xor
mov
dec
xor
nop
cli
hlt
inc
dec
add
mov
int
xchg
std
sbb
fmul
xchg
in
push
push
(bad)
sbb
fsubr
ins
iret
and
daa
mov
idiv
rol
in
cmc
pop
jo
jns
xchg
test
sub
pop
inc
and
and
(bad)
test
stc
lahf
(bad)
xor
lods
movs
add
repz
enter
push
dec
nop
xchg
fmul
push
dec
ficom
jb
leave
xchg
imul
ins
inc
pop
or
cmp
jo
xchg
ret
mov
xor
fmul
xchg
fdiv
imul
add
jo
cmps
inc
mov
imul
(bad)
sub
dec
mov
mov
fst
leave
xchg
fcmovnu
repz
(bad)
ins
(bad)
shr
cmp
dec
pushf
(bad)
in
out
es
or
shr
jbe
aam
inc
fnstcw
pop
mov
scas
pop
imul
shl
test
mov
mov
ins
jbe
cmp
cmp
data16
movs
push
xchg
lods
lods
ins
or
xchg
popa
mov
ins
mov
js
jb
xchg
fcomi
js
push
test
cmp
in
shr
push
jl
lods
(bad)
and
jmp
arpl
rol
mov
or
jbe
mov
jmp
lods
mul
add
es
call
sub
sub
ja
test
push
test
mov
mov
xor
fwait
sbb
inc
mov
test
int3
fdivr
jp
es
pop
inc
jmp
es
out
cli
ins
adc
imul
adc
push
xchg
out
sbb
rcl
xchg
xchg
jae
cmp
js
and
cmp
das
sbb
add
push
mov
sbb
cmp
mov
jmp
lods
call
fcomp
stos
mov
cld
mov
test
loop
adc
ficom
jb
dec
push
pusha
pop
jno
sbb
dec
inc
mov
data16
sub
dec
sar
adc
loopne
fcom
ret
fld
xor
stos
pop
and
fsub
ja
inc
cdq
jb
out
mov
or
xor
jno
fimul
dec
mov
sub
mov
mov
mov
xor
imul
push
sub
retf
and
enter
mov
mov
fistp
dec
cmp
js
dec
cli
jmp
mov
fisubr
fsub
(bad)
stc
cmp
push
xor
out
mov
fild
(bad)
and
addr16
dec
outs
test
jecxz
inc
sub
cmp
aas
add
inc
mov
cli
setno
lahf
addr16
les
mov
nop
lods
(bad)
rcl
sbb
sbb
xor
out
jo
mov
jecxz
daa
sub
adc
fimul
xchg
pop
pop
loopne
sbb
sub
in
mov
jbe
jbe
sub
outs
mov
aam
cdq
rcr
js
jle
hlt
pop
das
xor
std
gs
mov
dec
(bad)
fidiv
addr16
dec
cli
out
in
lahf
jge
xor
aas
dec
mov
jmp
adc
btr
out
adc
int
rcr
dec
pusha
imul
in
inc
cmp
mov
test
dec
ror
shl
pop
sbb
lds
fs
sub
test
adc
int
call
arpl
out
sub
cmc
pop
ins
cmc
data16
stos
cmp
pusha
cmp
(bad)
imul
pop
cs
xor
and
repnz
mov
push
addr16
dec
inc
stc
shl
mov
lds
xor
std
sti
xor
push
cld
mov
lea
adc
and
sbb
push
add
cdq
xchg
popf
movs
not
add
data16
jmp
pop
addr16
enter
retf
mov
ds
sti
sbb
xchg
movs
leave
xor
sub
int3
mov
push
pop
imul
sbb
xor
es
ret
mov
repz
jp
push
iret
rcl
lea
(bad)
int3
loope
lock
outs
xchg
cmps
push
mov
(bad)
mov
std
jbe
xchg
xor
cmp
mov
pop
hlt
pushf
call
mov
movs
pop
inc
out
or
fs
xchg
div
cli
shl
inc
pop
mov
jb
test
ds
push
movs
lock
(bad)
stos
and
pop
jmp
push
jmp
jmp
push
(bad)
(bad)
cmp
mov
sub
neg
xor
mov
lahf
imul
sbb
clc
loop
mov
js
aam
shr
xchg
retf
xchg
sub
jne
rol
adc
sbb
lea
mov
ret
sub
xchg
bound
push
in
jnp
mov
fist
adc
add
add
or
ss
push
fs
add
sbb
lea
adc
or
movs
mov
push
ja
enter
mov
mov
mov
fcomi
jmp
add
fs
sti
(bad)
fsub
(bad)
mov
xchg
shl
xchg
add
stos
movs
xor
add
in
push
data16
(bad)
cwde
mov
ficom
ja
(bad)
sti
daa
ret
gs
es
mov
push
stos
icebp
fs
xor
scas
bound
inc
rol
adc
add
cdq
leave
out
nop
stc
jo
rcr
arpl
sbb
sub
mov
add
lods
add
push
retf
mov
outs
push
ja
sub
lahf
jo
sar
sub
retf
pop
std
(bad)
jmp
xor
sub
mov
arpl
loope
in
cli
jp
lahf
mov
lods
jno
mov
pop
(bad)
movs
mov
(bad)
mov
sbb
sbb
xor
push
pop
sub
sti
jp
loop
iret
add
inc
inc
add
stos
xchg
mov
aas
pop
sbb
and
daa
cs
push
ins
dec
mov
retf
dec
sub
xchg
(bad)
xlat
popa
mov
mov
add
std
jo
add
aad
push
inc
repnz
sbb
push
mov
dec
clc
dec
push
out
pop
jle
push
sar
outs
outs
push
push
mov
add
xchg
mov
aas
in
adc
pop
stos
and
stc
stos
in
(bad)
cmp
aaa
(bad)
fsubr
sti
ret
scas
and
xchg
xchg
inc
cs
xchg
cli
cli
stos
retf
mov
inc
push
jg
pop
sub
pop
jp
sub
call
pop
pop
dec
sbb
enter
cdq
lods
cs
jmp
add
addr16
push
neg
ret
ret
fnsave
mov
nop
sub
cmps
adc
leave
adc
mov
jb
mov
sbb
dec
jnp
in
loopne
mov
inc
pop
and
xchg
bound
or
retf
push
dec
retf
sbb
pop
mov
mov
sub
and
push
xor
call
vpsrlq
jbe
sub
loope
lods
stc
and
add
sbb
add
imul
mov
lock
or
xchg
mov
mov
std
or
adc
ins
lea
scas
mov
or
clc
mov
cmp
sbb
loop
add
(bad)
enter
sub
mov
and
xchg
sahf
cmp
hlt
jle
shl
jge
imul
lds
dec
shl
cmp
sub
lahf
rcl
inc
mul
jge
ss
shl
dec
xlat
pop
mov
retf
(bad)
std
jl
push
imul
cmps
(bad)
sbb
loopne
les
movs
lds
leave
push
popf
rol
xchg
icebp
push
mov
inc
fsub
pop
cmp
int
xchg
inc
pop
ret
pushf
sub
sbb
adc
and
out
fbstp
and
push
out
push
mov
push
jb
add
loopne
shr
fisub
xor
out
sbb
dec
out
clc
and
fxch
add
aam
unpckhps
sbb
leave
js
mov
push
loop
mov
mov
cmp
mov
adc
daa
loopne
or
pop
test
jnp
xor
retf
push
daa
fild
iret
lods
dec
add
imul
cmp
sbb
jmp
sbb
jle
xchg
mov
sahf
sbb
fs
jns
(bad)
in
fadd
add
out
(bad)
movs
cmps
into
ss
ins
fdivr
and
push
es
jbe
mov
and
sbb
stos
dec
psrld
mov
scas
fsincos
cmp
ror
adc
and
call
test
jb
fnsave
shl
xor
es
mov
stc
shr
retf
ins
fisubr
jo
and
lea
(bad)
cli
test
sub
push
call
jle
lods
add
dec
imul
add
aam
outs
pop
test
retf
call
(bad)
mov
dec
aam
pop
push
sbb
mov
cmp
sub
clc
push
xchg
jle
pushf
(bad)
ffree
test
out
mov
pop
out
push
(bad)
pop
cmps
mov
repnz
shl
push
or
push
movs
in
cmp
sbb
mov
pop
hlt
fistp
inc
adc
xor
inc
dec
and
add
pop
sbb
fwait
sub
xor
inc
cmp
cmp
add
out
mov
cmps
fadd
pusha
xchg
loop
xor
stos
push
or
xchg
cli
mov
push
dec
pop
dec
pop
ins
mov
adc
add
cmps
inc
push
jno
rcl
push
fild
mov
les
pop
inc
or
inc
pop
adc
adc
imul
xchg
shl
packssdw
inc
mov
out
enter
or
scas
rcr
lahf
ss
fldcw
pop
rcr
pop
sub
es
je
mov
pusha
jl
popf
mov
xchg
aas
jbe
jmp
jb
loop
push
mov
clc
mov
ret
(bad)
rcl
(bad)
push
ret
pop
fadd
push
into
pop
add
adc
xchg
jp
inc
mov
in
sbb
pop
push
cmp
mov
sub
call
adc
movs
mov
lods
sbb
aad
xor
push
out
mov
sub
(bad)
movs
mov
mov
repnz
and
sar
or
mov
push
iret
je
fidivr
aas
lds
int3
mov
in
pop
int3
or
push
leave
pop
adc
xchg
je
mov
lods
inc
shl
stc
push
mov
sti
test
xchg
xor
rol
retf
fdiv
jp
or
dec
add
std
das
xor
cli
xchg
loopne
mov
mov
mov
hlt
dec
(bad)
inc
mov
dec
movzx
jl
fdiv
shl
or
mov
daa
inc
movs
pop
mov
push
lock
sbb
sbb
mov
xor
mov
adc
cmps
pop
jmp
xor
or
in
fwait
mov
sub
shl
push
stc
push
fistp
adc
xor
mov
aas
push
xor
movs
xor
outs
pop
mov
adc
pop
or
call
adc
xor
into
retf
inc
pop
push
push
aad
lock
push
lock
jp
add
das
inc
in
rcr
pause
inc
xor
mov
sbb
push
in
pop
cdq
test
fs
xchg
inc
push
cmp
nop
dec
and
imul
dec
xchg
jmp
cdq
daa
xchg
inc
xchg
outs
cmc
mov
sub
inc
mov
mov
test
xchg
ret
shr
popf
adc
gs
stc
pop
mov
mov
call
arpl
neg
jnp
sbb
rcl
int3
pop
es
(bad)
jns
xlat
repz
add
inc
loope
lods
cmp
xlat
jo
mov
mov
popf
mov
std
inc
int
iret
clc
pop
adc
xchg
test
popf
jae
cmps
test
add
cwde
call
pushf
mov
xlat
outs
mov
cmp
lock
or
test
sahf
jae
pop
add
cmc
mov
adc
and
arpl
adc
movs
daa
mov
fiadd
popf
mov
xchg
dec
inc
fnsave
call
pop
iret
inc
jb
cmc
das
mov
pop
mov
lds
or
push
sti
(bad)
add
mov
xchg
jge
pop
adc
xchg
cmp
adc
push
pushf
loopne
or
int
shl
sub
push
lds
ficomp
sub
lods
sub
mov
in
mov
cmp
popa
sbb
sar
adc
out
lods
arpl
(bad)
cmp
add
addr16
in
dec
xchg
jnp
push
jge
push
cmps
lahf
fsubp
sbb
push
popf
int3
ror
lahf
and
mov
imul
mov
fadd
sbb
push
cmp
sub
test
xor
rcr
xchg
retf
ror
je
icebp
adc
dec
rcr
add
and
ror
inc
cmp
xor
and
sahf
(bad)
cmps
inc
popf
fbld
fwait
enter
mov
push
mov
loopne
push
imul
jl
lods
je
xchg
popa
outs
shl
cmp
push
mov
scas
add
int
or
cmp
cmc
aam
jae
cmp
cmc
mov
cmp
sbb
retf
loop
adc
jno
movs
cmps
inc
push
in
cli
jge
add
cld
cli
(bad)
or
test
push
adc
adc
add
mov
xlat
sub
and
sub
mov
jp
loop
std
mov
out
mov
loop
loope
xchg
xlat
mov
fsubr
fstp
adc
push
jecxz
in
in
(bad)
push
xchg
das
pop
push
outs
in
mov
popf
rol
sub
or
rol
loope
push
inc
or
pop
sar
sbb
mov
mov
icebp
pop
fwait
mov
jmp
adc
or
hlt
mov
outs
mov
(bad)
pop
arpl
xchg
repz
adc
outs
mov
out
jmp
xor
ret
add
(bad)
mov
push
cli
mov
outs
mov
shl
je
mov
sbb
cmp
sbb
mov
jmp
sahf
loopne
pushf
xchg
push
aas
sbb
mov
push
jp
popa
pusha
sub
inc
movs
mov
mov
rol
pop
cmp
xor
jp
inc
adc
mov
xchg
xchg
add
and
ret
ret
dec
jle
and
nop
ret
fiadd
in
push
mov
sbb
jbe
out
cmp
mov
icebp
add
int
out
mov
push
jge
push
inc
mov
inc
test
and
xor
inc
xor
xlat
push
sub
add
xchg
ins
xchg
loop
push
shr
pop
ins
jns
mov
setns
test
jmp
jl
adc
and
dec
inc
sar
fldcw
xchg
and
lahf
sbb
outs
inc
je
push
and
xor
sbb
(bad)
push
pop
xchg
outs
sub
loopne
data16
mov
aad
test
out
sub
sbb
sbb
jl
test
cmp
xor
or
in
mov
pop
les
stos
popa
sbb
cmps
and
popa
push
ins
pop
pop
int3
fcom
cdq
add
(bad)
sbb
addr16
jnp
aam
adc
inc
sub
push
mov
popf
daa
sub
lods
cwde
adc
mov
cmp
test
out
cli
inc
in
mov
dec
and
mov
inc
dec
shl
mov
push
push
clc
jbe
jl
pop
mov
xor
les
xchg
jnp
xchg
jo
jle
fnstcw
popa
ja
cmp
shr
and
retf
dec
jno
mov
fldcw
cdq
ror
pop
retf
adc
jo
mov
cld
mov
cdq
retf
push
adc
iret
adc
ds
int3
pop
xchg
xchg
and
retf
div
ror
retf
sub
xchg
addr16
sub
mov
inc
xchg
and
pop
mov
sbb
add
mov
div
ss
push
shl
outs
ins
in
out
pop
mov
popa
mov
test
retf
loop
or
sahf
mov
add
jae
mov
jbe
sub
mov
cmovnp
jge
bound
cdq
cmp
outs
movs
mov
fiadd
in
mov
outs
pop
into
adc
xchg
mov
daa
and
mov
frstor
ds
dec
sub
lods
dec
jae
mov
fbstp
ret
mov
pop
mov
dec
retf
test
push
xchg
pop
sbb
stos
in
loop
add
out
mov
clc
mov
and
jb
aaa
add
mov
pushf
inc
jbe
std
(bad)
sub
add
push
xchg
aas
out
and
dec
sub
jmp
das
iret
leave
mov
jge
and
push
arpl
or
out
cmps
shl
pop
pusha
push
ds
in
and
lods
pop
data16
jns
jbe
into
pop
xchg
retf
mov
jo
inc
pop
sbb
lods
mov
sub
mov
cmp
mov
mov
mov
push
repz
mov
jb
push
sub
imul
xor
mov
jge
sbb
cdq
repnz
(bad)
scas
ret
add
test
daa
out
pop
xchg
mov
loopne
inc
fisubr
xor
pushf
inc
xchg
mov
lds
fmul
sti
xchg
neg
dec
jmp
cmp
and
ins
rcr
push
adc
shl
jmp
push
fwait
mov
gs
mov
cmp
pop
out
mov
inc
and
rol
xlat
mov
imul
or
or
pusha
retf
test
imul
adc
xchg
fidiv
sbb
ds
ds
icebp
mov
es
push
mov
movs
clc
cmp
inc
or
mov
vfnmadd213sd
mov
iret
pop
cdq
xchg
addr16
inc
sub
or
std
add
test
jle
stos
mov
(bad)
shr
cmp
push
js
sbb
icebp
call
xchg
cmp
mov
in
stos
inc
sbb
xchg
cs
aad
dec
icebp
pop
(bad)
sahf
xchg
sub
std
mov
fbld
mov
lods
adc
add
xor
shl
mov
mov
xchg
clc
mov
frstor
movs
aaa
sbb
sbb
fmulp
cmp
cmp
movs
xchg
jns
mov
mov
or
dec
mov
jl
clc
dec
xchg
cmp
stc
out
lahf
iret
or
push
pushf
pop
push
loopne
pusha
lds
test
iret
xor
into
xor
js
fild
ret
jae
or
pop
cmp
int
lock
data16
and
sub
mov
xor
xor
shl
lods
push
mov
test
rcl
xlat
pop
and
or
neg
push
dec
leave
imul
dec
aas
imul
mov
adc
mov
dec
test
pushf
adc
or
mov
and
fstp
mov
xchg
push
dec
xor
mov
xchg
jl
push
adc
mov
and
fwait
outs
inc
out
cmp
inc
adc
mov
movs
cmp
adc
push
mov
push
cli
mov
in
mov
enter
icebp
xor
sbb
xor
push
mov
retf
sub
jp
or
sub
mov
sbb
pop
(bad)
jne
xchg
pop
js
adc
or
jb
test
or
dec
push
int
jb
je
or
push
dec
into
jge
out
push
push
sbb
scas
jno
(bad)
leave
into
jl
mul
shl
ds
sub
mov
ds
fs
sub
test
cmp
push
xchg
or
lahf
vpcmpgtd
mov
bound
mov
jo
inc
xor
sbb
xor
pop
mov
(bad)
repnz
sub
int
je
or
das
mov
(bad)
mov
push
add
mov
mov
fldcw
pusha
mov
icebp
(bad)
mov
or
mov
push
mov
and
mov
sbb
cwde
push
je
xchg
jecxz
or
rcr
mov
add
adc
das
or
rcr
sti
lock
lds
pusha
aad
mov
fistp
in
aad
and
sbb
pop
(bad)
ficom
cmp
adc
(bad)
out
adc
out
retf
sar
fwait
pusha
adc
pop
jmp
in
sub
mov
xchg
rol
push
test
push
fdiv
sub
add
mov
and
ja
push
movs
std
jae
data16
cmp
pop
nop
pop
fwait
movs
hlt
call
fistp
out
mov
lock
in
push
(bad)
pusha
jmp
cli
das
(bad)
div
push
inc
dec
jne
ins
pop
push
and
aad
adc
std
xchg
xor
inc
mov
pop
or
xchg
scas
retf
and
int3
les
mov
pop
cmp
push
xlat
adc
sub
and
ret
mov
clc
out
ja
es
mov
leave
mov
jae
fcom
lahf
inc
jno
jge
dec
addr16
jge
scas
cmp
daa
xchg
jl
push
push
pushf
jbe
cs
push
in
push
push
jg
and
mov
retf
ret
call
aad
stos
inc
dec
pop
sub
iret
cli
inc
int3
add
fs
inc
mov
mov
bound
retf
jo
lods
jae
jle
jae
sbb
js
stos
mov
sub
les
out
(bad)
daa
dec
dec
jns
pop
arpl
jb
pause
into
gs
cmps
mov
(bad)
popf
aaa
push
outs
xlat
mov
inc
xchg
mov
ficom
int3
dec
aaa
xchg
cmp
mov
dec
fwait
cdq
inc
lods
js
out
imul
or
xor
jmp
push
mov
imul
(bad)
inc
daa
dec
and
mov
cld
int3
daa
popa
xchg
dec
push
fisttp
test
retf
ja
mov
inc
aaa
and
fcom
push
dec
cmp
jecxz
lahf
aad
fwait
pop
push
mov
xlat
mov
and
enter
arpl
pop
push
hlt
imul
(bad)
mov
rcpps
and
call
lea
add
dec
out
cmp
addr16
(bad)
add
mov
or
test
xor
and
xchg
add
jmp
leave
scas
push
test
(bad)
cld
adc
es
sbb
(bad)
or
mov
ds
jnp
dec
mov
cdq
mov
pop
mov
push
outs
jne
push
add
or
pop
ins
inc
cmc
jns
mov
inc
icebp
sbb
sbb
jb
mov
adc
les
jge
add
sbb
mov
push
and
in
retf
call
int
jge
adc
mov
xchg
xor
fidivr
cwde
cwde
int
retf
aad
push
adc
and
add
or
out
or
fisub
jo
xchg
inc
ins
cmp
lea
dec
fs
or
cdq
or
mov
cli
mov
std
pop
cmp
out
xchg
xor
cmp
push
into
in
stos
pop
cmp
test
fcmove
ins
jnp
inc
push
icebp
pop
mov
in
cmp
out
stc
mov
mov
int
push
xor
adc
in
std
add
mov
fwait
retf
jle
pop
jbe
bound
adc
add
jp
jmp
pushf
pop
xchg
ret
retf
adc
cmp
es
bound
xchg
cmp
dec
xor
ret
repz
lea
rcl
vsubss
cmc
cmp
sti
ja
mov
shl
jle
pusha
mov
fwait
and
mov
pop
sub
add
call
mov
ficom
push
cwde
xor
cli
jmp
repnz
pop
cdq
cdq
pop
sub
inc
xchg
fs
inc
in
scas
fsub
add
mov
int
jb
fbstp
cmp
or
popa
out
sub
cdq
pusha
ror
ja
add
jmp
xor
outs
xchg
cdq
in
mov
inc
pop
or
xchg
ins
add
icebp
add
mov
sbb
sub
std
(bad)
jg
scas
pop
push
mov
jo
or
xlat
xchg
and
pop
les
out
mov
mov
add
or
test
sbb
push
or
cdq
stos
push
jecxz
aaa
mov
jmp
repnz
add
clc
js
pop
daa
sar
push
cs
sbb
inc
fdiv
pop
xchg
push
xor
and
push
push
arpl
ss
mov
dec
add
test
dec
inc
imul
lods
pop
push
xchg
mov
dec
sar
adc
enter
stc
mov
lods
push
pop
js
add
mov
add
and
jb
push
shl
fist
ss
xchg
cli
dec
push
cwde
aas
jge
pop
(bad)
mov
ret
aam
jp
in
test
icebp
mov
shl
dec
jmp
leave
add
daa
adc
arpl
fbld
add
jbe
and
pop
mov
ins
ja
adc
test
mov
rcr
cmc
dec
or
inc
adc
rcr
gs
inc
fadd
xchg
or
push
pushf
and
int3
pop
retf
imul
jecxz
out
shl
popf
sub
daa
pop
adc
repnz
call
ds
sbb
pop
repz
sub
dec
cld
cs
std
cwde
fistp
push
scas
mov
ja
inc
jb
dec
sub
mov
scas
mul
(bad)
add
xor
and
add
ret
mov
lock
aam
jmp
xchg
mov
les
jae
push
jp
out
out
push
dec
xor
clc
dec
mov
lods
in
mov
mov
je
rcr
xchg
add
enter
add
mov
or
ret
call
add
mov
std
dec
xchg
mov
shl
xchg
or
inc
outs
out
aad
push
mov
mov
sub
icebp
dec
inc
xor
or
in
dec
mov
stos
lods
pop
mov
call
das
xor
(bad)
outs
mov
outs
clc
jp
cs
jnp
and
inc
fldcw
jge
xor
inc
popf
div
or
add
mov
repnz
sbb
es
les
not
icebp
(bad)
jne
sti
jns
push
(bad)
cmp
test
sub
loopne
adc
push
jp
dec
sub
ins
jnp
(bad)
(bad)
sbb
mov
in
dec
ja
jo
scas
cwde
jmp
in
xor
xchg
sbb
mov
lea
jne
(bad)
pop
cmc
lods
shl
fsub
mov
or
cmp
add
mov
mov
jmp
pop
lods
das
aas
in
jb
les
int3
sub
imul
into
popf
adc
jecxz
and
mov
add
dec
dec
mov
scas
(bad)
xchg
adc
fild
(bad)
das
mov
inc
fsub
in
sub
mov
and
mov
dec
xchg
(bad)
hlt
aaa
test
movs
das
adc
(bad)
aaa
nop
mov
jnp
out
lock
adc
sbb
sbb
aam
outs
cld
rol
cdq
sbb
pop
xor
xchg
xor
bound
mov
xchg
fstp
xchg
aad
or
and
inc
retf
xor
aaa
fs
or
in
sub
push
ins
sbb
test
retf
fst
sub
dec
rol
mov
das
mov
in
pop
loopne
push
repnz
not
(bad)
sti
loop
xchg
test
push
cmp
hlt
pop
mov
xchg
push
loop
push
mov
push
rol
je
xor
xor
ja
test
mov
dec
dec
xor
xchg
outs
mov
rcr
add
dec
add
xchg
sbb
int
push
fcomip
add
jmp
cmp
add
push
addr16
jecxz
test
ficom
fimul
xchg
fimul
fidiv
scas
sbb
xor
(bad)
(bad)
fisttp
xchg
call
fbstp
lds
pushf
iret
mov
or
xlat
fs
mov
aas
(bad)
push
mov
lods
fistp
inc
or
cli
retf
jae
bound
jmp
out
shl
dec
cs
in
xor
push
ja
adc
int
pop
dec
pop
push
mov
or
jmp
pop
sbb
jbe
xchg
ins
mov
cmp
loopne
inc
jl
ficom
push
jne
frstor
call
fs
fldenv
pop
push
mov
call
rol
ja
mov
in
xchg
push
stos
push
lock
adc
and
push
mov
xchg
mov
call
cs
push
test
dec
in
repz
out
add
add
ret
jecxz
es
(bad)
into
in
sub
out
fdecstp
mov
sub
sbb
cmp
fsub
jno
sbb
out
and
add
call
leave
mov
ror
inc
and
xor
in
jl
jmp
sub
(bad)
ja
popf
cmp
sbb
adc
lock
lock
or
push
dec
jle
icebp
jg
xor
sub
jl
or
pop
je
pop
loopne
sahf
fisttp
pandn
ja
daa
aam
stc
inc
sub
pop
jno
mov
or
shl
inc
jno
lods
mov
pop
xchg
cmp
mov
sub
test
dec
retf
sub
dec
test
jnp
cmc
int3
add
xchg
mov
pushf
fs
add
js
aas
adc
push
xor
jae
pop
cld
mov
cmp
loopne
mov
mov
and
pop
adc
inc
pop
jae
std
cwde
push
xchg
dec
mov
lods
out
mov
or
dec
sar
cmp
hlt
jae
sti
ins
push
out
and
enter
and
dec
sub
xchg
xchg
cmps
imul
add
nop
pop
cwde
dec
out
es
fsub
es
mov
sub
adc
xlat
jge
mov
outs
jne
mov
out
mov
sbb
pop
fwait
push
xchg
dec
lahf
loopne
ret
and
inc
sbb
adc
ret
dec
and
pusha
sti
mov
std
movs
aas
jp
inc
jb
sub
push
xchg
lods
test
dec
into
out
pop
cmp
push
mov
pop
or
(bad)
aad
dec
dec
call
in
adc
movs
or
jmp
test
fnstsw
repz
lods
or
ja
mov
inc
cmc
fidivr
mov
int3
or
imul
mov
xchg
cld
(bad)
jg
jecxz
lock
lock
sbb
mul
push
push
push
sar
xchg
mov
push
jbe
enter
xchg
aam
loopne
sub
loopne
loopne
or
(bad)
jecxz
pusha
push
jno
push
cmps
scas
fadd
jb
sahf
mov
aam
push
jb
neg
pop
stc
jecxz
lahf
in
repnz
sbb
or
push
popa
pop
sub
add
scas
cdq
mov
call
daa
loope
pop
push
push
inc
fsubr
sbb
adc
xlat
fdiv
xchg
push
cmc
lds
push
pop
in
cmps
or
push
inc
push
in
jmp
xor
cmp
cmp
es
xchg
or
xor
popa
add
jecxz
push
mov
add
lahf
push
adc
ror
mov
aas
add
retf
cmps
pop
popf
lea
iret
xchg
imul
scas
shl
sub
je
xchg
fucom
xchg
sub
mov
lods
dec
dec
or
dec
jnp
adc
and
bound
aad
mov
ror
mov
mov
stos
mov
cdq
sub
inc
xchg
imul
push
sub
adc
mov
pushf
sub
xchg
mov
add
aaa
popa
in
pop
loopne
mov
icebp
xchg
dec
mov
mov
popa
xchg
mov
push
push
cmp
adc
mov
jmp
outs
out
(bad)
mov
mov
aas
pop
iret
sub
pop
and
das
shr
pop
xchg
loop
cdq
(bad)
mov
(bad)
mov
mov
nop
movs
pop
adc
push
jg
xchg
sahf
push
mov
test
and
mov
shl
jo
movs
movs
in
fidiv
pusha
xchg
call
add
sti
bound
mov
call
aaa
add
(bad)
jb
sub
add
stc
test
xchg
(bad)
(bad)
jmp
outs
mov
out
popa
jp
cli
mov
jb
sub
sbb
sahf
movs
dec
mov
aas
stc
fnstsw
push
stos
das
mov
jnp
lods
mov
daa
in
test
inc
icebp
jbe
or
sar
loope
sub
or
enter
mov
add
dec
mov
mov
sbb
sub
cld
or
mov
das
or
adc
mov
xor
out
jne
jl
jmp
jg
out
icebp
ss
push
cmp
adc
cmp
daa
stos
sub
pusha
aaa
sahf
mov
sbb
es
pusha
fs
frstor
push
std
jp
repz
push
xchg
popa
pop
fmul
jg
lods
es
scas
lock
cmp
mov
ret
cmps
in
add
shl
xchg
call
pop
test
lods
repz
push
cmp
and
mov
shr
cli
cmps
xchg
add
sub
cmp
je
clc
pop
shr
sbb
or
mov
mov
and
inc
cmp
call
shld
or
xchg
push
push
aam
stc
mov
xor
(bad)
mov
js
mov
sbb
jge
jle
pop
repz
stos
test
dec
cdq
stc
adc
in
sub
jmp
or
push
jl
test
pop
xor
push
add
shl
iret
push
adc
loope
or
test
outs
rol
mov
add
inc
xchg
pop
sbb
sahf
mov
dec
push
dec
outs
popa
dec
je
inc
mov
stos
(bad)
outs
into
push
sbb
sbb
dec
or
mov
push
mov
cmp
pop
cmp
cmc
add
sbb
cmp
inc
jle
mov
xor
jae
and
dec
ror
pushw
xor
mov
in
lods
mov
cli
xchg
or
inc
je
cmp
fdivrp
(bad)
cli
or
inc
mov
ret
mov
sub
adc
fimul
lods
push
jge
mov
xor
(bad)
in
xor
or
in
lahf
(bad)
int
sbb
iret
movs
xor
xchg
dec
pop
dec
(bad)
sbb
dec
and
ds
aad
popf
xchg
jg
aaa
mov
cmp
fistp
inc
ins
data16
adc
mov
in
sub
jl
idiv
mov
lods
add
fsincos
lahf
mov
push
ror
call
jmp
push
loopne
mov
cdq
retf
shl
mov
mov
sbb
loopne
ret
pop
mov
dec
nop
mov
fisttp
test
sbb
ja
xor
jge
mov
les
js
sub
call
cmp
out
je
adc
sbb
das
mov
mov
neg
in
cmp
sahf
cmp
mov
push
jmp
and
inc
mov
jle
fisubr
xor
aam
inc
add
aas
adc
xor
nop
lahf
sbb
mov
mov
in
jmp
push
pop
pop
sub
pop
pop
cmp
jle
(bad)
jmp
call
call
lods
int
imul
dec
push
inc
in
push
leave
rol
js
inc
jge
leave
and
xor
fs
push
jecxz
ins
out
adc
pop
and
sbb
mov
xor
sbb
sub
push
add
sub
lock
fadd
pop
icebp
push
sbb
sbb
add
ds
inc
mov
push
cwde
test
xor
jo
pop
jmp
dec
cmc
es
jbe
inc
out
cmp
scas
mov
in
sub
call
jge
test
fbld
cs
rcr
push
mov
sbb
call
test
int
pop
inc
fs
outs
sub
dec
cmps
push
push
pop
scas
cli
jae
sar
and
leave
fwait
sub
pusha
stos
jnp
outs
mov
sbb
popf
cli
ins
(bad)
xor
adc
mov
gs
into
inc
xor
or
rol
mov
push
mov
xor
cmp
xchg
arpl
jne
nop
mov
cmp
pop
out
cmc
push
cdq
push
pop
rol
addr16
push
ins
mov
or
dec
cmc
push
push
inc
fstp
and
pop
hlt
es
fnstcw
iret
jbe
pop
xor
jo
ret
repz
scas
lds
mov
mov
mov
cmp
mov
lods
ret
pop
sbb
dec
dec
(bad)
and
pop
xchg
push
sub
mov
outs
jecxz
pop
dec
bound
popf
mov
aad
pop
movhps
pop
sbb
mov
mov
cli
aaa
jns
sub
sbb
pushw
mov
pop
push
add
xlat
xchg
fs
cmps
(bad)
out
mov
xchg
xchg
into
xchg
pop
mov
fs
cmp
xor
out
push
fist
rcl
jmp
std
sti
aas
retf
mov
ins
jmp
mov
sbb
dec
jno
push
pop
cmp
ins
and
mov
mov
xor
or
ja
int
xchg
es
xchg
in
scas
scas
ret
fwait
adc
mov
mov
jge
sbb
lds
mov
ins
jg
dec
push
and
dec
jne
sub
movs
scas
repnz
and
push
pop
or
dec
sbb
jmp
mov
ins
mov
retf
outs
lock
out
xchg
lock
add
inc
idiv
icebp
push
gs
mov
and
pop
add
loopne
sub
aad
arpl
loopne
gs
leave
pop
jge
fs
push
add
pushf
mov
jle
mov
lea
call
push
rcl
and
rol
xor
loopne
pop
jp
cmps
lods
sbb
xchg
(bad)
arpl
cmp
pop
push
outs
xchg
enter
sbb
push
enter
or
push
and
pop
push
aaa
sbb
sub
and
dec
dec
pop
lock
int3
addr16
mov
ins
and
bndstx
das
int3
loope
mov
ja
xchg
mov
push
ret
adc
clc
mov
les
dec
mov
fiadd
cmps
fld
dec
shl
lods
xor
mov
dec
pushf
sub
mov
mov
jb
cld
cmps
imul
mov
jns
iret
sti
push
rcl
fwait
loop
ins
add
push
pop
adc
std
enter
adc
jmp
das
add
mov
in
test
sahf
mov
cs
pusha
jle
mov
push
outs
fcomi
add
inc
shl
imul
out
scas
add
mov
outs
cmp
mov
fist
fs
or
test
mov
mov
push
(bad)
mov
bnd
loop
leave
pop
imul
xchg
add
add
pop
scas
jge
sbb
mov
dec
or
dec
paddsw
loop
fucomp
jl
xchg
in
sub
mov
jecxz
es
xchg
push
into
jecxz
js
outs
xor
inc
jno
inc
xchg
sbb
(bad)
sbb
aam
pop
hlt
inc
arpl
aad
clc
jmp
and
mov
sbb
aam
mov
cmps
call
in
mov
inc
jbe
lods
fwait
inc
adc
ds
leave
pextrw
aas
sub
cmc
lock
das
mov
ror
jecxz
fild
or
jbe
(bad)
outs
jecxz
int
popf
pop
mov
retf
xor
push
cmp
imul
mov
mov
mov
push
aaa
fbld
sub
in
test
lahf
and
and
push
xchg
pusha
ins
pop
cli
cwde
iret
pop
push
inc
push
mov
inc
sti
fdiv
(bad)
jno
add
mov
sbb
sti
inc
jns
fs
jmp
jg
jge
imul
je
xchg
ss
stc
sar
(bad)
dec
push
jmp
stos
(bad)
jnp
pop
add
and
mov
stc
xor
jnp
nop
stc
dec
out
cmps
pop
and
and
and
mov
test
push
push
mov
xor
dec
inc
stos
pop
xlat
push
rcr
push
inc
sub
in
test
inc
or
push
mov
sub
repz
out
loope
xchg
sar
ror
mov
mov
adc
fs
mov
or
call
xlat
add
sbb
cmps
and
loopne
jnp
and
or
mov
mov
cmc
aad
jle
xchg
cmp
mov
fucom
xor
in
push
jns
add
or
sbb
jp
imul
xchg
pop
ss
inc
and
jne
mov
jae
mov
mov
jecxz
daa
retf
pop
aaa
fistp
mov
sbb
fisttp
movs
mov
sahf
imul
cdq
sbb
ret
push
add
retf
repnz
push
cmp
sub
mov
mov
dec
fld
in
out
ja
cmps
xchg
add
ror
adc
lahf
mov
ret
pop
or
imul
and
xor
jno
movs
adc
and
cwde
bound
mov
add
fimul
outs
test
ret
jno
stos
jge
and
jmp
call
repz
movs
xor
jno
cs
inc
mov
cdq
into
in
mov
sbb
add
xor
fisttp
mov
std
aam
(bad)
jns
jecxz
adc
adc
fild
pop
or
lahf
push
sbb
mov
push
aas
inc
je
hlt
fs
mov
lock
ins
rcr
pushf
mov
lahf
push
mov
in
and
xlat
pushf
mov
or
pop
ins
sub
push
cmp
mov
or
dec
adc
test
add
pop
sub
test
cmc
mov
sbb
cmps
xor
xor
test
loope
lock
enter
outs
xlat
scas
dec
cmove
es
cmps
sbb
idiv
dec
lock
sub
inc
pop
xchg
sbb
ror
cmp
iret
lds
sbb
(bad)
addr16
mov
loopne
paddd
sbb
(bad)
mov
pop
push
pop
and
fiadd
inc
cmc
enter
cmps
pop
mov
cmp
adc
inc
push
xlat
cmc
lock
fild
cmps
lahf
not
in
sub
rol
push
bound
test
push
cmpxchg
in
or
call
and
mov
mov
jge
bnd
fldenv
lahf
push
add
xor
push
out
inc
and
(bad)
push
outs
sub
loopne
inc
add
sub
ror
add
out
cmps
stos
xchg
cmc
lds
into
std
scas
ret
inc
fadd
icebp
fdivr
or
sar
(bad)
cs
repz
aaa
in
fsub
cmp
cwde
dec
and
iret
cmp
cmps
or
mov
mov
mov
sbb
jp
test
mov
mov
loope
sub
fmul
adc
mov
ins
pop
inc
mov
cwde
sbb
je
cmp
mov
retf
fadd
rol
and
pop
xor
shl
retf
icebp
repz
jmp
jo
aad
and
mov
loop
ror
mov
sbb
adc
push
nop
sub
dec
test
test
imul
fldcw
pop
jle
in
ficomp
dec
fistp
inc
fsubr
popa
sub
mov
dec
mov
data16
adc
in
out
popa
push
mov
stos
fxch
mov
pop
sub
mov
push
pop
jno
or
sbb
push
mov
and
jnp
jl
test
and
jmp
push
lods
es
sub
push
mov
je
inc
(bad)
cmp
jge
out
jmp
sbb
outs
cwde
push
aas
fisttp
retf
sbb
fisttp
in
imul
mov
ins
push
in
inc
out
dec
aas
test
xchg
retf
out
nop
fsubr
sbb
mov
sbb
loope
in
scas
add
iret
hlt
mov
push
sub
(bad)
mov
sbb
xor
fadd
mov
jnp
xchg
paddusw
stc
dec
mov
xchg
lock
rcl
cmp
mov
into
stos
xor
push
inc
xchg
or
(bad)
pop
add
mov
icebp
push
popa
pand
push
and
leave
rcl
inc
dec
mov
or
jmp
adc
inc
mov
adc
cmps
cmp
xor
idiv
jb
pop
xchg
dec
xor
inc
or
mov
mov
inc
cli
jmp
xchg
fwait
lds
jne
pop
leave
in
or
mov
cli
(bad)
mov
loopne
pop
cli
loope
jle
popf
push
mov
mov
lock
shl
(bad)
and
lods
inc
fs
mov
mov
pop
xor
mov
jmp
jbe
xchg
mov
mov
push
pop
movs
aad
dec
xchg
jmp
shl
mov
xchg
loop
and
popa
and
pusha
cmps
add
mov
cmp
mov
add
mov
push
mov
sub
mov
sub
push
xchg
ins
loopne
inc
pop
or
jb
inc
aaa
pop
fistp
lahf
mov
ret
dec
fs
xlat
jae
out
inc
fisubr
or
xchg
fwait
inc
mov
mov
inc
mov
and
sar
inc
test
ficom
ins
ja
sbb
es
addr16
not
and
fisubr
movs
xchg
pop
pop
lock
lds
and
enter
inc
ficom
aas
ds
jnp
shl
movs
sub
cdq
xchg
ins
mov
into
dec
add
mov
repnz
sahf
push
sub
je
enter
mov
cmp
dec
jge
(bad)
cmc
cpuid
test
popf
daa
pop
imul
xchg
outs
shl
loope
inc
cdq
cmc
dec
popf
iret
ret
inc
jae
push
test
addr16
add
mov
cmp
inc
imul
daa
push
lods
xor
lock
stos
dec
shr
or
sbb
lea
fstp
test
mov
mov
sti
mov
jbe
ror
int3
xchg
les
pop
jb
imul
add
pop
push
or
dec
jecxz
sub
test
(bad)
pop
popf
sub
out
adc
shr
mov
xchg
(bad)
mov
mov
ja
shl
ins
push
rcr
fstp
add
out
mov
or
add
xor
lods
stos
rol
cli
jo
aas
add
js
jmp
push
ror
and
in
pop
mov
pushf
test
lods
adc
push
loope
jns
xor
pop
pop
(bad)
pop
shr
pop
and
dec
adc
addr16
mov
cli
sub
std
or
lea
out
aaa
xchg
jns
neg
dec
mov
cmp
push
mov
dec
ds
js
fmulp
bound
sub
jl
fucom
repnz
jae
xchg
stc
test
inc
int3
or
arpl
es
sbb
ret
retf
int
(bad)
ror
xor
push
inc
pop
ror
aad
cli
push
jae
push
xlat
scas
jge
mov
int3
fs
mov
and
jle
adc
repnz
ret
or
mov
xchg
retf
jecxz
inc
pop
dec
add
mov
fbld
sbb
jb
adc
push
mov
aam
xchg
jmp
jnp
and
nop
sbb
movs
sub
xor
out
cmc
retf
or
vpaddusb
sub
std
test
sahf
adc
add
les
test
push
retf
xor
fmul
int3
add
add
nop
pop
ins
sbb
js
sbb
and
fbld
and
cld
lahf
mov
enter
jmp
inc
int
les
add
lods
cmp
adc
std
leave
cmp
sbb
mov
jno
outs
repnz
pop
ins
cmp
popa
std
ja
and
enter
pop
xor
bound
je
mov
push
ror
in
push
dec
ins
push
adc
fbstp
mov
pop
jae
dec
jbe
adc
add
or
sub
push
cmc
mov
push
stc
nop
mov
jmp
xor
add
test
and
test
sub
mov
test
aas
shr
out
mov
mov
ret
push
aaa
in
clc
mov
inc
cdq
(bad)
cmps
ret
stos
jne
mov
nop
das
das
or
dec
pop
mov
rcl
sbb
repnz
mov
push
inc
sub
(bad)
push
in
jmp
(bad)
jg
adc
js
ror
popf
mov
les
fidivr
mov
push
loop
out
xor
aaa
xchg
scas
iret
push
ins
mov
in
push
inc
fdiv
push
aad
adc
imul
mov
dec
sbb
sub
sub
mov
ror
(bad)
and
dec
mov
sbb
mov
xchg
es
popa
gs
lods
retf
pusha
pop
jmp
mul
mov
sub
retf
mov
mov
jns
das
test
ss
fs
or
cmp
mov
aaa
mov
ja
dec
inc
xchg
pop
and
push
(bad)
sti
mov
pop
mov
ror
push
popf
or
lods
(bad)
fist
and
mul
mov
sub
call
popa
out
fsubr
xchg
and
in
test
jae
inc
sub
xlat
addr16
pop
bound
dec
sbb
retf
dec
ins
addr16
pop
fcomp
fs
fucomp
pop
pop
mov
jle
mov
push
lds
push
sahf
retf
cmp
les
daa
fbld
mov
aad
add
jo
xchg
inc
into
fdivr
shl
push
push
sub
cmp
cdq
arpl
jnp
cmp
jb
in
stos
mov
add
sbb
and
pop
out
adc
and
cmc
test
sbb
sti
sub
ss
cmp
movs
addr16
sub
je
mov
pusha
sbb
scas
stc
aaa
daa
popa
push
mov
sub
in
int3
pop
mov
std
lahf
cmps
inc
mov
jp
jecxz
pop
and
sbb
mov
mov
loope
or
and
jns
pop
(bad)
ins
enter
fisttp
loopne
push
sbb
pop
xor
clc
fimul
sar
push
xchg
ret
lods
mov
loop
shl
movs
jae
test
push
adc
pop
ins
outs
mov
sar
pop
jne
mov
shl
pop
test
add
pop
mov
xchg
push
sbb
xor
(bad)
mov
jecxz
shr
inc
mov
sti
jns
dec
and
jbe
outs
and
pop
lock
dec
jbe
push
pusha
mov
cmps
js
xor
std
mov
sub
out
xor
fwait
sub
add
rcr
lea
std
dec
mov
mov
mov
pop
add
and
lods
xchg
dec
pop
test
jne
inc
ss
push
in
int3
or
hlt
xchg
dec
fwait
je
leave
inc
or
or
(bad)
mov
mov
je
add
nop
jae
ret
add
xor
je
xor
or
int3
inc
leave
mov
cdq
sbb
jmp
pop
sbb
jae
add
mov
loopne
sti
arpl
loop
movs
adc
xchg
and
cmp
mov
inc
jmp
mov
cmp
pusha
je
hlt
repnz
imul
xlat
mov
sub
xlat
push
mov
das
repz
mov
lods
dec
xchg
inc
pop
push
ds
dec
in
inc
daa
pusha
sub
xchg
push
pop
pop
or
mov
call
jmp
fnstsw
stos
xor
push
aaa
fcom
xchg
fdivr
xchg
push
lods
lods
jmp
xor
xlat
(bad)
dec
jae
pusha
das
outs
call
push
imul
sbb
sbb
or
push
push
mov
jg
rcr
mov
repnz
jo
(bad)
icebp
call
adc
xchg
mov
mov
popa
add
repz
pop
mov
push
mov
cmp
sub
sub
sub
test
push
pushf
retf
jecxz
popa
xchg
fidiv
(bad)
push
jne
mov
jns
pop
call
repz
mov
arpl
mov
add
mov
repnz
outs
daa
sar
and
push
sbb
xchg
xchg
push
in
into
sub
dec
retf
add
xor
mov
(bad)
int3
imul
xchg
dec
imul
xor
ret
jno
mov
xchg
movs
mov
dec
pop
cld
xchg
mov
stos
hlt
cmps
inc
movs
push
pop
ror
pushf
hlt
push
ficom
push
rcl
sbb
bound
lock
repz
push
test
push
out
jle
sub
mov
dec
push
mov
inc
cmp
int
dec
sbb
repz
(bad)
stos
dec
add
gs
pop
jmp
sbb
jnp
or
inc
dec
loope
das
pop
retf
out
fld
(bad)
inc
jne
cmp
test
jb
xchg
dec
repnz
(bad)
popf
stc
xlat
adc
retf
cmps
push
push
jl
xor
mov
cmps
outs
into
iret
in
inc
rol
jns
push
pop
(bad)
(bad)
sbb
sbb
cdq
test
lds
and
inc
sub
pop
or
jmp
xchg
lods
add
fnstcw
aaa
daa
and
xchg
mov
cmp
sub
inc
pop
cmp
push
adc
outs
mov
les
xor
xor
xchg
mov
cwde
ins
ds
sub
dec
dec
dec
shr
sub
jge
sbb
pop
scas
fnstsw
mov
pop
lea
loopne
dec
inc
rcl
inc
movs
into
dec
mov
xchg
sbb
jmp
lods
xchg
cmp
mov
cli
or
cmp
mov
inc
mov
test
ret
retf
fs
pop
ins
mov
retf
in
shl
cld
jae
icebp
leave
adc
cmp
push
test
imul
xchg
and
or
mov
and
es
jne
jb
ins
jno
pop
outs
mov
mov
push
adc
inc
imul
bound
xlat
stc
cmp
push
stos
aas
nop
das
adc
imul
lea
in
sub
adc
(bad)
jmp
retf
mov
test
mov
jmp
retf
scas
mov
xor
mul
push
sub
(bad)
retf
mov
ins
cmp
idiv
cmp
mov
adc
push
or
xchg
repnz
ja
pop
and
mov
stc
mov
mov
cmps
jge
or
mov
xchg
popa
test
add
xor
(bad)
lahf
xchg
scas
mov
cmp
xor
add
mov
add
xor
std
mov
(bad)
div
sahf
jb
add
xchg
outs
jo
mov
clc
lods
mov
xchg
pusha
mov
aaa
adc
mov
test
fcmovne
loop
add
gs
in
mov
pop
test
out
fmul
jp
xchg
jge
mov
or
xchg
rcr
dec
sub
psubd
dec
cmp
pop
ror
cmps
aas
ins
lahf
adc
lahf
(bad)
retf
mov
or
xor
ror
mov
or
or
sbb
aaa
lea
ss
repz
pop
push
adc
pop
push
mov
jns
sar
arpl
add
fnstenv
sub
repnz
dec
inc
push
lea
adc
xchg
int3
sti
call
or
rcr
inc
test
mov
push
test
rep
dec
lods
and
aas
and
loopne
dec
jb
out
test
retf
push
push
scas
(bad)
mov
ror
inc
fiadd
int
add
dec
add
cmps
mov
popw
cwde
mov
ja
mov
imul
shr
cli
fsub
sub
adc
mov
dec
enter
mov
mov
sbb
pop
int
in
jl
mov
popf
mov
or
shr
mov
jecxz
dec
cmp
loop
push
xchg
mov
(bad)
call
jecxz
lock
pop
aaa
and
iret
mov
adc
scas
xor
sbb
add
(bad)
setge
icebp
inc
push
jmp
mov
stos
push
pop
sub
mov
dec
retf
xchg
ficom
push
lahf
test
test
mov
jo
sub
loopne
arpl
mov
sub
xchg
cli
mov
dec
adc
adc
dec
pushf
xor
push
xchg
mov
and
cmp
lea
ins
add
int
test
xor
inc
in
scas
sbb
cs
mov
div
inc
jp
sub
adc
adc
adc
mov
inc
and
xor
mov
out
pop
inc
add
pusha
lock
xchg
outs
imul
(bad)
out
fsubr
(bad)
ror
xchg
xchg
sbb
mov
bound
push
adc
dec
xor
ss
cli
pop
mov
mov
xchg
sbb
push
mov
lods
out
mov
ror
ret
mov
cmps
outs
frstor
leave
push
adc
into
add
mov
and
xchg
xchg
ret
cmp
out
test
fstp
jmp
cmp
std
rcr
or
cmp
ja
rol
or
rol
mov
popf
push
add
mov
mov
idiv
mov
adc
and
mov
loopne
cmp
stos
cmp
popa
xor
ins
xchg
data16
xchg
cmp
and
cld
out
or
xor
mov
sbb
push
dec
mov
mov
gs
inc
mov
sbb
retf
std
push
rol
fld
cmp
icebp
or
jl
push
shr
fs
pop
imul
test
mov
in
xchg
mov
ins
fild
addr16
call
adc
and
bnd
in
inc
sbb
mov
push
sahf
dec
dec
pop
pop
mov
sbb
xchg
sub
inc
mov
jge
xchg
sbb
jmp
sahf
stos
cmps
push
imul
add
mov
test
call
cdq
and
cmc
das
or
lods
cmp
xchg
iret
repz
pop
pop
pop
call
jg
bound
xor
push
xor
push
js
xchg
pop
aas
retf
rol
les
inc
cs
fcomp
out
jecxz
inc
cmp
mov
jb
loope
popa
pop
ret
pop
push
dec
xchg
lods
jp
daa
je
lahf
(bad)
xchg
sbb
test
(bad)
and
add
jp
ss
adc
mov
pop
rdtsc
mov
test
test
fnstcw
scas
xor
cld
add
out
popf
inc
add
shr
inc
and
icebp
sub
xchg
test
and
mov
push
ret
or
xlat
iret
adc
sbb
leave
loope
mov
inc
adc
call
cmc
push
inc
ins
and
addr16
jecxz
pusha
mov
mov
mov
int
pop
(bad)
cmp
fcmovbe
and
and
iret
mov
hlt
push
fld1
mov
shr
shl
cmp
dec
mov
cmp
push
pop
aad
std
inc
cmp
jno
mov
fs
jecxz
daa
mov
mov
fidiv
in
mov
cmp
es
adc
jns
out
fisttp
icebp
xor
aad
cli
mov
push
ja
push
rcl
jns
in
inc
jnp
xchg
cmps
stc
les
sub
jge
xor
sub
inc
mov
mov
repz
out
je
mov
cli
ins
repnz
popa
or
lods
adc
jle
and
call
mov
in
cmc
inc
push
inc
sbb
jno
fs
jae
stos
ror
hlt
jmp
or
dec
or
adc
(bad)
jns
cdq
mov
sub
adc
pop
mov
(bad)
fcomp
(bad)
mov
loope
outs
jne
lea
(bad)
popa
xchg
add
fsub
jne
ffreep
push
cs
xor
js
js
mov
xchg
xor
xchg
jbe
sub
xchg
(bad)
hlt
in
loope
out
iret
sbb
clc
pop
enter
xor
das
adc
pop
in
mov
add
out
js
push
inc
popa
ret
mov
jp
mov
ret
into
jae
fsubr
mov
lods
jle
mov
in
xchg
jl
fisttp
inc
icebp
adc
ficomp
imul
ret
call
sbb
inc
add
out
bound
inc
out
add
imul
adc
xor
mov
sahf
jae
push
sar
test
push
inc
scas
sub
(bad)
jmp
dec
jne
push
stos
loop
add
mov
mov
je
add
xlat
mov
mov
dec
test
pop
cs
ret
cs
jmp
daa
sbb
cmp
inc
loop
call
mov
pop
mov
ss
xor
xchg
ret
dec
add
aas
ds
nop
arpl
mov
cmp
dec
push
mov
mov
and
push
xor
clc
inc
mov
add
out
xor
and
retw
jl
mov
add
mov
das
arpl
jo
push
mov
push
out
jl
mov
add
xchg
pop
loope
jae
adc
xchg
dec
scas
repnz
mov
mov
dec
and
push
adc
leave
call
test
nop
or
imul
fadd
push
rol
outs
xor
retf
sbb
sub
ret
add
jbe
ds
push
sbb
not
mov
cmp
adc
mov
ja
or
into
out
test
mov
leave
jo
push
loope
sbb
fistp
mov
or
add
pop
sub
popf
inc
jmp
mov
out
xor
movs
stc
xor
cmps
mov
hlt
pop
in
sub
arpl
les
out
pop
jle
push
inc
inc
add
(bad)
dec
mov
jp
add
sbb
js
adc
mov
cmps
out
sub
jmp
push
ffree
cmps
scas
scas
imul
xchg
jl
retf
inc
movs
ins
out
mov
push
sbb
adc
das
mov
movs
or
ret
cli
push
pop
lds
cmps
test
je
adc
call
and
push
lds
sbb
call
sbb
int3
out
scas
push
and
jp
dec
rol
xchg
int3
mov
inc
pop
dec
aas
jp
or
repz
je
arpl
push
out
pop
sbb
pop
shl
iret
cmp
and
cmps
(bad)
xchg
ret
outs
push
mov
sbb
and
dec
jg
sub
loopne
ret
loope
sub
in
imul
jecxz
fisttp
dec
jmp
mov
shr
fs
mov
sbb
push
xor
inc
jo
lods
ret
jno
mov
push
xor
into
faddp
in
loope
mov
out
pop
sub
inc
xbegin
add
xchg
leave
mov
into
lea
mov
mov
sub
ja
push
xchg
retf
dec
std
jo
add
adc
je
hlt
push
xchg
into
sahf
jo
xchg
retf
adc
mov
sbb
sub
cdq
adc
test
mov
cmp
das
jge
mov
dec
push
sbb
dec
ret
cmp
dec
mov
cmps
xlat
adc
xchg
das
(bad)
jmp
sub
or
mov
pop
in
pop
ret
movs
nop
into
cmp
add
jb
shl
in
das
cmc
test
leave
out
jle
ins
dec
clc
les
out
lods
pop
scas
pop
gs
adc
and
jmp
cmp
call
ins
xchg
push
or
(bad)
xor
push
es
mov
movs
repnz
xor
iret
hlt
scas
mov
sub
xchg
dec
sar
inc
add
mov
inc
out
int
retf
(bad)
inc
jge
or
push
rcl
push
dec
(bad)
fs
scas
(bad)
mov
ss
aaa
push
jmp
dec
test
in
test
cmp
xor
icebp
ror
jo
dec
xor
test
sub
mov
xor
sbb
cmp
retf
inc
(bad)
jns
cmp
daa
ja
retf
test
inc
push
mov
addr16
enterw
pusha
dec
or
loop
inc
int3
mov
pop
repnz
inc
(bad)
dec
outs
fisubr
jge
test
add
cmp
mov
jp
push
es
loop
and
inc
push
dec
jae
xchg
mov
jp
or
cli
sub
adc
xchg
cld
dec
add
xchg
fidiv
(bad)
test
mov
mov
xchg
fmul
jbe
pop
or
mov
xor
jl
int
xchg
or
dec
sahf
mov
daa
lahf
pop
out
mov
xchg
push
test
add
xor
lods
push
push
sbb
fwait
xor
std
dec
cli
cmc
pop
in
and
int
das
aam
stos
leave
popf
leave
xchg
cdq
hlt
jp
mov
xchg
cmp
inc
loopne
int3
gs
scas
inc
xchg
adc
loope
cli
retf
inc
mov
push
rcr
fimul
jmp
inc
fld
outs
mov
jecxz
xor
icebp
xor
aam
inc
mov
push
rcr
test
push
sar
rcr
aaa
imul
fisubr
test
adc
cmps
test
arpl
aas
cmp
push
dec
movs
xor
push
and
test
sub
les
cmp
mov
std
cld
scas
fisubr
ds
push
mov
loop
mov
adc
ss
xcrypt-ofb
cmps
imul
inc
or
push
cmp
jne
pusha
movs
or
in
push
cdq
jge
xor
lea
fadd
mov
in
or
jnp
inc
mov
imul
push
aam
retf
movs
stos
or
mov
pop
das
mov
out
inc
out
mov
sub
cmps
cld
cmc
movs
sbb
aad
mov
pop
jbe
mov
fmulp
repz
rcl
inc
pop
fst
pop
out
or
jl
mov
mov
lds
sub
xchg
(bad)
das
mov
push
mov
cld
frstor
dec
sub
mov
jb
stc
jp
mov
jmp
fstp
xor
arpl
cs
jp
xchg
loop
shr
in
xor
adc
xchg
jbe
movs
addr16
cli
push
lods
test
(bad)
sti
mov
jg
lea
mov
movs
adc
ss
pop
sub
cmps
(bad)
push
add
cmp
fs
push
pushf
xor
shl
mov
ret
idiv
mov
sbb
jmp
(bad)
in
sub
movs
and
(bad)
fdivr
or
lea
retf
sbb
cmps
inc
cmp
aad
test
xchg
aaa
aaa
std
cli
sbb
cmc
jne
sub
push
jbe
bound
lds
jge
and
dec
add
inc
iret
and
sub
cmps
out
js
mov
dec
js
xchg
(bad)
jg
or
pop
mov
push
call
aad
addr16
pop
adc
popf
xlat
mov
add
push
mov
into
cmps
dec
add
xchg
mov
(bad)
aad
xchg
mov
xlat
dec
mov
inc
pop
fld
into
scas
loopne
pop
jg
test
and
adc
in
and
inc
aad
cdq
icebp
push
mov
push
(bad)
mov
add
dec
js
(bad)
or
push
aas
xor
mov
mov
aam
loop
push
das
scas
push
das
cld
sbb
aam
dec
adc
fadd
jb
push
lods
retf
shl
lahf
mov
inc
and
iret
jmp
xor
adc
push
ficomp
ret
cwde
mov
mov
int
mov
cmp
xchg
in
push
pop
fcomip
add
mov
jnp
imul
inc
or
(bad)
xor
jl
and
sub
aam
leave
push
aam
xchg
adc
cmp
jle
dec
add
or
das
test
push
xchg
xor
inc
in
int3
mov
and
mov
mov
arpl
int3
mov
dec
sub
sahf
push
ror
sbb
jae
arpl
fidivr
rcr
mov
mov
test
mov
push
(bad)
test
test
(bad)
in
div
jmp
call
loopne
sahf
gs
inc
cwde
cs
lahf
jne
jbe
inc
sbb
movs
pop
loope
popa
sub
imul
sbb
loop
cli
outs
jp
bnd
loopne
imul
fdivr
lock
int3
sbb
mov
dec
mov
cli
hlt
(bad)
shr
test
mov
sahf
call
into
jg
xchg
inc
ret
or
shr
rcl
xchg
jns
cwde
clc
lods
out
addr16
inc
fst
cmp
add
mov
xlat
lods
loopne
dec
(bad)
sbb
mov
sbb
fsub
or
push
or
mov
popa
fsubr
jno
bound
sub
mov
mov
std
cmc
stos
push
clc
push
jecxz
ins
aam
lahf
inc
rcl
bound
loopne
jmp
test
sbb
fwait
sub
dec
cmc
fsubr
lahf
pop
mov
or
popf
mov
ja
jb
mov
outs
nop
jge
jge
cld
fcom
call
adc
in
scas
dec
mov
xor
fsubr
inc
adc
(bad)
cld
sbb
cld
xor
fdivr
xchg
jle
test
mov
fwait
adc
pop
enter
pop
add
scas
cmp
ror
and
inc
add
cdq
aad
mov
jle
mov
scas
push
jmp
cwde
sub
xchg
fldcw
or
leave
rcl
adc
fcmovb
jb
in
stc
inc
ins
test
std
add
or
xchg
sar
mov
inc
lock
inc
jo
mov
mov
loopne
shr
std
ins
push
int
xchg
or
jg
add
mov
jb
nop
xchg
sar
jno
xor
pop
ss
aam
jge
out
jo
cld
jne
int
jbe
rol
adc
fsubp
push
mul
push
fucomp
cwde
cmps
sub
mov
push
fs
sbb
cmp
mov
mov
jp
fcomip
fs
add
dec
popf
mov
or
mov
push
(bad)
mov
mov
xchg
inc
int
inc
mov
(bad)
popf
sti
fisub
fisttp
sub
mov
or
int
adc
or
pop
js
mov
xchg
mov
add
leave
jmp
cmp
addr16
xchg
js
pop
add
add
adc
push
xchg
jg
fcmovnu
pop
sbb
mov
dec
retf
in
mov
cmps
pop
push
aaa
mov
cmp
lods
fbstp
fdivr
test
cmp
ja
add
mov
xchg
jne
and
mov
leave
mov
ror
ror
inc
pop
test
scas
js
jno
aas
hlt
pop
test
stos
ret
mov
outs
fldenv
push
mov
imul
adc
ret
mov
jne
xchg
sahf
xchg
add
fprem1
sbb
dec
popf
pop
or
dec
sbb
push
cmc
ror
push
ja
pop
push
fsubr
iret
ret
scas
out
xchg
dec
jb
mov
mov
xor
lds
sar
lods
repnz
sub
mov
jge
mov
(bad)
fstp
inc
mov
push
cmc
push
(bad)
adc
mov
mov
xchg
and
ins
sti
fild
sahf
stos
cmp
out
les
pop
jns
rcl
pop
push
retf
mov
jg
out
movs
and
sahf
add
ja
lahf
jne
ficomp
xor
or
out
xor
xchg
pop
xor
test
jmp
xchg
push
or
test
scas
push
xchg
mov
dec
ds
adc
dec
fwait
sbb
fild
mov
inc
nop
pop
imul
movs
xor
fisttp
call
xchg
or
add
int
ja
mov
loop
jmp
popa
jb
inc
daa
movs
sub
retf
call
bound
pusha
dec
shr
repz
sbb
daa
sub
inc
push
outs
mov
imul
aam
mov
call
pop
inc
adc
pop
inc
push
and
sahf
es
into
fwait
cmp
pushf
pop
push
mov
push
mov
scas
loop
cdq
(bad)
cmp
jbe
sahf
inc
pushf
xor
test
xchg
shl
in
stc
xchg
and
pop
loopne
mov
pushf
iret
ror
mov
inc
mov
aam
call
xor
inc
out
pop
sub
nop
mov
dec
jo
std
fistp
jae
ds
ja
mov
xor
pop
add
sub
push
mov
xor
jmp
ja
mov
and
loop
mov
cmps
adc
dec
lock
movs
sbb
add
mov
stos
loop
adc
sbb
js
ret
jns
aas
arpl
inc
cmp
rcr
ss
fcomp
js
pop
mov
push
aaa
adc
arpl
fldcw
ficomp
jb
sub
(bad)
leave
adc
loope
movs
or
sbb
mov
fidiv
repz
mov
loopne
rol
movs
clc
sahf
loopne
mov
pop
xchg
dec
dec
int
pushf
das
or
cwde
sbb
xchg
scas
mov
outs
mov
add
jo
pop
rol
test
aam
(bad)
mov
inc
je
fcomp
push
dec
mov
cmc
aam
rol
outs
mov
mov
xchg
inc
stos
and
mov
popf
stos
sahf
je
xchg
rcl
scas
lods
mov
inc
mov
push
adc
and
dec
lea
call
mov
mov
sbb
adc
jl
ror
stos
adc
fimul
(bad)
mul
sbb
add
push
add
xor
and
imul
and
call
cmc
cs
dec
fcomp
aas
pop
sar
cs
xor
add
adc
mov
scas
mov
int3
repz
jo
iret
cwde
cmp
pusha
je
xchg
and
xchg
inc
xor
mov
mov
mov
push
jl
mov
xor
pop
jecxz
add
es
pop
inc
jp
inc
scas
xchg
push
ret
clc
jle
sub
fyl2xp1
test
les
sub
sbb
movs
stc
add
push
sub
in
sub
lahf
cdq
xor
cdq
adc
and
mov
xor
outs
daa
push
push
cli
test
mov
test
dec
in
push
pop
mov
test
cmp
inc
mov
lock
pop
lods
das
cmc
sub
add
fisttp
add
jne
int3
sar
adc
mov
mov
inc
or
cmps
stc
test
enter
imul
jl
mov
pop
retf
call
xchg
mov
test
mov
jmp
add
mov
std
cmp
std
js
(bad)
pop
ins
ror
adc
push
pop
loopne
pop
stos
lahf
movs
pop
jmp
aas
pop
rol
enter
xchg
ficomp
outs
pop
xchg
push
or
pop
shr
lods
mov
dec
les
clc
or
jmp
rcr
ins
shr
mov
iret
data16
(bad)
add
vshufps
adc
fcmovnb
jp
in
xchg
pop
mov
dec
pusha
mov
adc
mov
or
fwait
and
(bad)
push
sub
jno
mov
daa
xlat
jg
imul
sub
mov
lods
jno
push
lahf
mov
jmp
fwait
arpl
sbb
call
or
scas
xor
int3
test
jmp
imul
lods
pop
lds
xchg
popf
call
dec
loopne
js
jb
xor
daa
mov
outs
lahf
cmp
inc
leave
fwait
loop
mov
gs
ret
cli
cs
(bad)
sub
cmp
cs
and
push
nop
imul
jmp
stos
mov
mov
sub
fistp
push
outs
rcr
out
inc
add
ds
clc
add
test
pop
push
mov
push
test
enter
sbb
sub
inc
push
adc
fs
shl
test
jmp
cld
xchg
imul
pop
ret
es
in
faddp
push
scas
fstp
push
stos
mov
jb
mov
sub
adc
imul
in
mov
pop
movs
dec
jae
fldcw
in
out
or
(bad)
and
mov
aam
mov
xchg
dec
inc
shl
push
adc
hlt
inc
xchg
mov
jecxz
fiadd
fisttp
or
cmp
push
push
popa
xchg
into
jae
js
call
push
dec
jo
xchg
cld
frstor
stos
mov
ins
or
xlat
iret
add
lods
nop
fist
mov
cmps
loopne
xor
call
push
mov
xchg
div
lea
out
xchg
jmp
xor
mov
mov
(bad)
dec
ficomp
inc
loop
hlt
push
iret
mov
pop
repnz
call
cs
mov
jns
sbb
adc
or
retf
test
movs
shl
std
push
mov
cwde
arpl
mov
mov
dec
jb
retf
push
dec
mov
sub
in
out
xchg
dec
sbb
pop
push
in
xor
test
hlt
pop
addr16
shr
lahf
xchg
pop
mov
leave
push
fs
add
sub
mov
fnstsw
mov
std
call
and
div
out
inc
das
pop
xchg
repnz
cmp
ret
cmp
inc
mov
test
cli
push
cmp
mov
jle
fld
sbb
pop
sbb
cdq
pushf
inc
or
rcr
mov
lahf
ins
repz
in
xchg
pop
inc
hlt
mov
mov
and
icebp
test
sub
dec
jge
cmp
jecxz
lahf
pop
xlat
push
iret
lock
stos
mov
aam
push
add
dec
rol
fnstenv
mov
cmp
jg
out
mov
sbb
xor
in
xor
push
xchg
push
dec
push
retf
int3
push
test
add
test
jmp
hlt
lods
fsub
fdiv
and
xor
cmp
mov
dec
imul
jo
sbb
aas
je
and
das
adc
adc
shl
out
add
out
mov
lea
in
adc
bound
aaa
ins
dec
aam
out
mov
lea
or
dec
aad
or
inc
dec
in
and
mov
mov
fstp
in
jae
rcr
inc
in
jmp
stos
mov
call
cli
popf
and
add
cmp
data16
or
xchg
mov
test
mov
scas
ret
mov
mov
add
and
jae
xor
in
ins
cs
cwde
clc
sbb
(bad)
mov
mov
cmps
push
scas
ret
xchg
movs
ja
sbb
cwde
repz
xchg
and
jne
inc
pop
adc
mov
push
popf
mov
(bad)
mov
xchg
add
dec
repnz
cs
repnz
mov
ins
es
aad
fsub
fsubp
pop
cmp
mov
pop
pop
arpl
cmp
push
inc
pop
outs
cmp
clc
rcl
mov
cmps
call
and
js
jb
cdq
shr
xchg
cmp
pop
sbb
into
call
fstp
test
jp
cmp
movs
push
fnstenv
adc
aaa
gs
test
dec
dec
scas
mov
sar
inc
addr16
es
idiv
sub
sar
mov
sbb
stos
bound
xor
cmps
push
jb
push
bound
jno
dec
fisttp
int
cli
mov
pop
pop
mov
retf
pop
sahf
mov
ret
mov
mov
popf
ja
and
out
fisubr
push
mov
add
add
stc
jb
mov
imul
and
jecxz
cmp
inc
adc
cmp
jle
lods
int3
fwait
loop
xor
inc
mov
jne
retf
lea
mov
inc
adc
push
(bad)
sub
scas
retf
sbb
push
cmc
sub
push
outs
fcomp
aaa
push
outs
cs
ins
loope
add
sub
mov
pop
cwde
ins
cld
cwde
fs
out
add
retf
add
adc
xchg
outs
enter
dec
leave
inc
pop
xchg
ds
inc
mov
dec
mov
rcr
xrelease
es
stc
lods
les
jmp
loopne
sar
xor
jne
(bad)
addr16
ret
add
xchg
xchg
or
pop
test
xor
sti
jmp
(bad)
xchg
in
fisttp
imul
and
push
mov
cmp
neg
js
lea
test
inc
sahf
add
ins
movs
(bad)
jg
cmps
test
mov
adc
ja
add
popa
scas
mov
jno
inc
ror
cmp
mov
sub
fistp
into
aad
fidivr
mov
scas
mov
outs
xchg
pop
add
jno
xchg
cmp
pusha
cs
ins
idiv
into
xchg
pop
hlt
inc
add
xchg
and
add
cwde
pusha
cmp
mov
mov
or
jle
dec
ds
mov
pushf
leave
adc
sbb
imul
ds
adc
inc
lds
call
mov
movs
hlt
outs
rcl
fsubr
mov
cmp
pop
addr16
mov
pop
pop
lods
sbb
add
and
int
fs
(bad)
jp
enter
std
repz
rcl
jae
daa
jg
dec
fisttp
sbb
je
test
xor
jo
shl
shl
or
cmps
jnp
xchg
bound
or
sbb
adc
shr
pusha
loope
das
popa
mov
je
in
inc
inc
fdiv
sub
fmul
jmp
add
mov
and
repz
push
jbe
cmp
jmp
jnp
in
sbb
mov
add
shl
jns
ins
mov
jmp
or
pushf
sbb
retf
enter
inc
(bad)
xchg
cmp
sub
mov
shl
xchg
jne
popa
(bad)
mov
ficomp
enter
rol
int
je
ins
mov
ficom
push
retf
dec
or
movs
mov
cld
outs
push
imul
in
pop
pop
retf
add
adc
jae
adc
jl
inc
mov
lods
dec
or
xchg
add
cmp
mov
ds
mov
mov
xchg
nop
(bad)
int3
push
inc
mov
xor
(bad)
ja
xchg
xchg
jl
movs
xchg
mov
imul
pop
xchg
dec
jl
arpl
mov
shl
lods
jecxz
sbb
retf
dec
pop
inc
inc
dec
lea
retf
mov
add
sub
jns
hlt
iret
mov
fwait
movs
pop
fist
xchg
arpl
mov
arpl
mov
jne
fild
adc
xor
test
cli
cdq
sbb
inc
ret
cmp
and
mov
xchg
fst
hlt
sbb
add
xor
cdq
dec
ss
fnstcw
outs
adc
and
dec
loopne
xchg
ss
inc
mov
jbe
xchg
xchg
push
cmp
rol
mov
sub
add
pop
push
in
or
xlat
mov
adc
jbe
inc
enter
pop
xlat
jmp
ficom
out
mov
shl
push
repnz
test
mov
sbb
push
pusha
mov
ret
dec
rol
dec
imul
xchg
jnp
(bad)
icebp
inc
fstp
test
btc
inc
push
add
stos
into
mov
sbb
sar
push
test
jecxz
or
cmp
mov
data16
fnstsw
jmp
cmc
imul
dec
clc
rol
adc
sbb
mov
call
xor
call
xchg
outs
clc
jb
rcr
(bad)
mov
sar
mov
lods
ss
pslld
stos
movs
mov
dec
loopne
xchg
call
inc
ror
pop
fdiv
jge
mov
dec
jle
cmc
mov
enter
fucomp
popa
js
and
lea
xor
and
es
jo
inc
into
sub
int3
repz
push
adc
bound
shr
cdq
xor
push
lods
mov
mov
jns
cwde
mov
sti
in
push
mov
adc
pop
shl
sahf
xchg
out
into
inc
jl
inc
je
dec
sub
mov
sar
adc
(bad)
in
cmp
ret
sub
xchg
hlt
sub
out
rcr
pop
push
mov
gs
or
mov
xlat
enter
aam
in
in
test
stos
shr
push
test
ds
retf
es
inc
and
sar
sahf
iret
pop
jmp
sbb
leave
and
xchg
pop
stos
imul
mov
cmp
(bad)
int
call
movs
adc
xor
pop
stc
jno
les
leave
xchg
sbb
imul
jne
mov
rol
xlat
sbb
sub
aam
add
mov
adc
mov
out
mov
loop
xor
sub
loopne
xlat
bound
test
inc
aad
es
mov
ret
mov
icebp
dec
dec
and
test
xor
scas
inc
pop
ja
popf
xchg
icebp
inc
xchg
cmp
pop
push
push
mov
push
fimul
ror
or
dec
popa
in
add
stos
cmp
stos
stos
call
cdq
in
ss
dec
push
in
cmps
mov
rcr
shl
sbb
sbb
dec
adc
(bad)
jbe
fild
je
and
into
dec
in
jnp
cwde
addr16
pushf
cmps
mov
lds
push
inc
jmp
test
xor
ins
lods
lea
shl
call
ja
inc
test
and
mov
out
sbb
mov
test
mov
xchg
mov
fld
add
js
sub
lea
loope
pusha
mov
push
mov
(bad)
scas
bound
push
arpl
fs
ss
xor
dec
into
out
mov
xchg
xchg
jmp
xor
mov
stc
jnp
add
sbb
jmp
imul
add
mov
push
fsub
int3
cmp
js
inc
add
out
sahf
data16
push
mov
sub
pop
clc
mov
cdq
aad
lods
pop
ins
mov
mov
cmp
adc
add
(bad)
sbb
xchg
ret
pop
xor
dec
adc
stos
cmp
fcomp
cdq
cmp
mov
aaa
mov
cmp
mov
into
arpl
pop
je
adc
mov
mov
les
mov
jo
mov
idiv
das
cwde
and
and
push
or
int3
and
rcr
mov
cmc
imul
jnp
(bad)
cmp
mov
cs
pop
lods
lahf
jae
and
mov
dec
cwde
cmps
push
mov
pop
aas
(bad)
jle
ins
cmps
movs
dec
stos
xchg
inc
xchg
sub
push
mov
add
xchg
iret
jmp
fiadd
cmps
jp
push
add
mov
dec
mov
data16
push
mov
je
mov
(bad)
lods
mov
and
retf
dec
mov
jo
(bad)
lahf
or
mov
out
shl
je
test
and
adc
jns
jb
pop
mov
jecxz
mov
call
enter
bound
fadd
mov
dec
(bad)
cdq
sub
and
mov
outs
clc
dec
xchg
mov
aas
cmp
mov
test
adc
or
xlat
or
and
mov
call
mov
pop
mov
sub
mov
(bad)
push
pop
(bad)
xchg
lea
mov
call
sbb
(bad)
sub
mov
ins
pop
leave
dec
bound
adc
inc
and
mov
jle
and
inc
mov
fmul
fsubr
inc
xchg
xor
sub
es
push
pop
jmp
lods
dec
test
push
push
int
fwait
mov
push
add
lods
xchg
(bad)
adc
mov
test
das
jmp
push
scas
push
fs
mov
mov
jae
rol
cdq
int3
movs
inc
or
mul
iret
in
or
leave
fwait
repnz
imul
scas
pop
cmovno
stc
in
jno
push
sub
sahf
fistp
sub
jb
dec
lods
xchg
pop
xchg
fsub
xor
pop
cli
in
push
call
lea
jae
jbe
call
xchg
stos
movs
aas
jo
mov
leave
add
push
dec
jle
mov
outs
div
les
fadd
or
jl
xchg
or
or
retf
jnp
cmps
(bad)
aaa
ins
mov
es
and
test
aam
aas
shl
and
jnp
popa
es
pop
test
scas
cmps
mov
loop
data16
sub
and
fstp
push
jae
jns
arpl
jno
(bad)
jbe
or
movs
imul
dec
cmp
xchg
xor
cmc
adc
andps
stos
mov
xor
cmc
cmps
mov
jmp
fdivr
aam
je
(bad)
mov
xchg
stos
sahf
mov
mov
shl
mov
cdq
pop
add
mov
mov
imul
je
js
pop
sahf
push
push
jmp
sub
ret
xchg
movs
jmp
mov
pop
arpl
ror
jb
shl
cmp
call
in
fcom
push
or
push
leave
loope
lods
mov
xchg
fdivr
jl
push
mov
mov
add
add
mov
fsub
aad
fadd
pop
push
jmp
hlt
sbb
cld
xchg
push
repnz
cmp
jo
mov
inc
hlt
stos
lds
fidiv
push
aad
pop
scas
jecxz
(bad)
adc
fwait
jg
sbb
clc
push
push
or
and
add
push
repnz
push
(bad)
mov
repnz
jg
outs
adc
inc
add
call
and
and
lods
jb
cmps
pop
or
jle
daa
sbb
in
cwde
gs
mov
add
or
xor
icebp
mov
cmp
inc
aas
mov
cmp
bound
rcr
add
ja
int
mov
xchg
call
cmp
sub
data16
test
sbb
pop
and
jp
(bad)
push
dec
pop
mov
or
fldcw
push
fmul
jbe
push
adc
mov
fistp
add
xor
(bad)
and
adc
invd
lock
pushf
dec
jae
scas
cli
es
test
out
cmp
movlps
adc
hlt
test
mov
fdiv
push
mov
or
sbb
shr
shl
sub
daa
dec
cld
inc
add
addr16
xor
mov
pop
stos
mov
dec
sub
in
xor
xchg
call
test
dec
mov
adc
add
jnp
inc
outs
xor
fild
stos
push
inc
pop
les
inc
fld
fsub
jbe
fmul
sti
sub
cvtps2pi
add
mov
sbb
xchg
pop
lods
cmp
sahf
lods
and
dec
shr
cmp
(bad)
push
imul
mov
ret
dec
int3
aaa
repz
mov
push
jmp
mov
pop
test
pop
sub
cmp
aam
sub
sub
daa
out
adc
call
push
cmp
rcr
pusha
mov
mov
popa
and
pop
retf
ret
jmp
jmp
sub
in
imul
push
out
lahf
push
xor
(bad)
out
sar
or
sbb
mov
pop
sbb
loopne
dec
imul
mov
mov
mov
fmul
sub
out
add
in
jg
lds
loopne
push
mov
rol
es
pop
mov
pop
out
mov
and
in
(bad)
les
adc
or
imul
pop
push
or
int3
cmp
cmps
scas
or
mov
mov
mov
cmp
push
or
aam
xor
mov
imul
mov
pop
fcmovnu
adc
cmps
xchg
aad
bound
cdq
mov
jns
mov
mov
sub
cmp
out
mov
and
ss
fcom
rcl
xchg
mov
cmp
idiv
inc
jmp
dec
in
push
into
mov
xchg
push
lock
pop
xchg
lock
mov
mov
sbb
imul
mov
lods
and
cmp
adc
pop
and
les
rcr
gs
inc
call
mov
xchg
cmp
mov
jbe
and
sbb
and
or
nop
test
ins
push
mov
mov
bswap
sub
mov
aaa
ss
mov
mov
stos
test
inc
cli
mov
cmp
adc
adc
pop
movs
in
add
(bad)
scas
adc
jle
(bad)
push
aam
lods
dec
inc
mov
adc
push
xor
out
push
mov
add
cmp
and
mov
dec
enter
jo
push
call
js
sub
jge
mov
psubsb
mov
in
(bad)
out
adc
stos
jbe
in
shr
pop
fld
and
mov
stc
(bad)
out
aad
add
jle
jne
hlt
pop
cli
mov
mov
data16
jbe
in
adc
shr
mov
cmp
cli
ja
and
push
cmp
cmps
dec
xor
jmp
dec
xor
ins
icebp
sbb
add
sub
adc
arpl
cs
mov
dec
lea
and
inc
jp
jmp
enter
mov
retf
jmp
aas
cmp
or
sub
cs
add
sar
pop
sub
sub
pop
dec
inc
mov
scas
mov
lea
hlt
mov
jmp
jnp
js
scas
add
and
rol
push
int3
xchg
cli
inc
mov
push
scas
or
fnsave
or
ja
dec
xchg
je
mov
js
rcl
mov
mov
icebp
cmp
popa
sbb
and
inc
aad
cmp
sub
sub
xchg
movs
jo
add
jnp
fidiv
or
hlt
or
sub
or
jns
push
lds
xchg
xchg
push
mov
mov
jp
ja
jb
ret
shl
jae
(bad)
rcr
scas
dec
jge
push
xchg
pop
cmp
adc
mov
dec
inc
test
sbb
aas
out
mov
sub
pop
jmp
into
(bad)
rcl
push
and
or
xor
ins
push
xor
popf
cmps
mov
(bad)
dec
cld
pop
xchg
and
adc
call
jg
addr16
cmp
and
push
ror
cwde
sub
jg
xchg
jne
sub
(bad)
rcr
sahf
mov
add
add
data16
pop
mov
pop
sub
sbb
aad
push
mov
or
ret
mov
cdq
sub
iret
cs
cmc
jo
aas
daa
push
fs
iret
mov
add
mov
gs
jmp
mov
ins
cmp
pop
pop
dec
add
pop
stc
mov
push
ret
mov
sar
cmp
xchg
add
jle
enter
jg
stos
mov
pop
call
aad
sub
sahf
cmp
adc
cmp
or
sbb
lahf
ror
add
stos
adc
fstp
mov
xor
ja
jno
mov
pop
add
(bad)
call
movs
adc
xlat
sbb
xor
cmp
loopne
outs
sub
push
sub
mov
mov
clc
arpl
mov
mov
adc
or
or
cmp
call
idiv
mov
fild
mov
loopne
cmp
xor
lock
neg
fld
scas
std
aaa
jae
test
(bad)
jp
adc
out
lock
mov
imul
or
retf
lock
jle
fwait
cs
pushf
xchg
xchg
sbb
xor
or
sub
(bad)
lea
sbb
push
adc
inc
adc
mov
mov
mov
enter
push
xchg
inc
arpl
push
cmp
xchg
das
stc
lahf
add
fwait
pop
scas
add
or
pop
pop
cmp
mov
rcl
xor
jge
(bad)
cmc
in
mov
ffree
fcomip
cmp
sub
aas
adc
adc
ins
and
xlat
aam
add
in
out
movs
cmp
ins
inc
mov
jg
dec
xchg
inc
xor
mov
aas
es
xor
and
enter
inc
sub
jae
push
test
sbb
xchg
not
imul
jno
shl
out
call
add
lods
icebp
xor
push
mov
popa
lods
jle
addr16
cmp
retf
fwait
jb
mov
adc
mov
cwde
mov
sbb
xor
mov
scas
ss
inc
add
jo
adc
in
dec
mov
int
push
(bad)
test
add
jb
add
bound
pop
mov
or
mul
inc
movs
aas
(bad)
xor
pop
movs
cmp
xlat
sub
repnz
dec
loope
cmp
and
aaa
xor
or
mov
ins
xor
dec
xchg
stos
lods
test
shl
and
pop
push
in
push
mov
stc
enter
jge
repnz
jne
jae
inc
adc
bound
pop
dec
jecxz
call
xchg
mov
out
mov
icebp
out
outs
shl
xor
in
xor
or
mov
jno
ja
out
mov
xchg
jmp
add
call
mov
xchg
lods
fild
out
lock
xlat
and
in
mov
xchg
push
pop
mov
add
leave
mov
add
or
xchg
cmp
in
push
rcr
dec
scas
aam
mov
loopne
jo
ins
cmp
and
and
xchg
dec
(bad)
xlat
dec
mov
ins
je
mov
pusha
(bad)
adc
xchg
int3
xchg
jmp
out
mov
jmp
rol
mov
mov
inc
fcom
mov
and
add
loopne
push
iret
out
jmp
test
rdpmc
adc
fwait
push
ror
aad
popa
push
loop
bound
or
and
mov
inc
fisub
sbb
jae
sahf
cmps
outs
mov
jl
mov
das
pop
cld
xor
data16
mov
jo
cld
lahf
xchg
sar
dec
jmp
pusha
xor
mov
daa
jmp
test
xor
cdq
and
and
cmc
cmp
sub
xor
cdq
lds
cmp
ins
(bad)
pop
jge
mov
dec
pop
outs
int3
test
into
fst
out
retf
(bad)
mov
or
fs
stos
pop
dec
cmp
nop
jo
fiadd
inc
or
(bad)
out
dec
mov
ror
sbb
mov
mov
adc
loope
mov
mov
fisubr
mov
div
mov
retf
mov
adc
dec
xchg
jns
pop
clc
test
push
outs
test
dec
movs
mov
loopne
pop
daa
adc
addr16
out
in
xchg
inc
and
or
lods
(bad)
in
inc
scas
cmc
inc
stc
push
jl
inc
add
add
mov
in
jnp
mov
ss
frstor
mov
sub
fdiv
push
mov
imul
mov
idiv
jb
pop
int
mov
clc
mov
xchg
les
in
jb
cmp
jo
sbb
sbb
mov
xchg
jne
daa
pushf
test
popa
xchg
xor
je
sbb
mov
leave
movs
inc
pop
bound
sbb
into
ror
jno
sbb
sti
aaa
rol
jge
xchg
test
daa
xor
jno
xchg
sar
out
mov
pusha
sbb
add
and
ds
fld
adc
cmp
mov
cmp
retf
jmp
push
xchg
mov
(bad)
cmc
dec
cld
cmp
movs
retf
mov
xchg
loope
sbb
aad
out
jmp
scas
mov
ret
imul
add
into
or
cli
mov
sbb
repz
sub
popa
inc
add
or
ins
xor
mov
dec
add
sbb
cmp
hlt
add
js
mov
scas
jnp
push
repnz
jns
repnz
xchg
sbb
popf
stos
pop
pop
(bad)
sub
jle
scas
not
daa
pop
jo
cmp
(bad)
push
out
jp
pop
and
xor
add
and
aaa
adc
and
aas
adc
lea
movs
shr
sub
dec
out
(bad)
or
ret
scas
ror
dec
jae
lahf
imul
mov
pop
test
push
mov
lea
hlt
and
sbb
repz
retf
loopne
mov
and
jb
in
sti
out
sbb
mov
mov
xchg
scas
and
lods
cmp
nop
pop
clc
sub
sub
cmps
push
mov
push
dec
shl
arpl
push
les
mov
sub
ins
out
dec
and
call
call
xor
lahf
ja
mov
sub
clc
shr
mov
shl
dec
sbb
mov
cmp
das
ret
jmp
sahf
(bad)
push
jecxz
pop
jle
sbb
test
pop
pop
jp
xor
dec
jmp
inc
mov
out
mov
call
adc
frstor
(bad)
fist
rcl
bound
jne
dec
jle
out
test
xor
mov
ins
sbb
enter
loopne
adc
sahf
or
adc
movs
ss
fstp
lds
sub
jne
test
je
and
and
shr
xor
mov
into
rcr
in
movs
pusha
bound
fnsave
cdq
call
push
pop
call
mov
retf
daa
imul
int
pop
xchg
(bad)
popf
fld1
sbb
adc
cdq
in
inc
je
pop
dec
stos
add
test
xchg
cmp
mov
pop
pop
mov
push
sub
mov
xor
icebp
pop
lea
into
or
mov
sub
push
jmp
jp
out
daa
add
out
adc
jp
or
mov
mov
mov
xchg
pop
popf
sbb
push
cmps
cld
arpl
sub
mov
sbb
push
jle
scas
xchg
and
mov
inc
lock
inc
sub
scas
lock
into
mov
es
pop
sub
sti
fist
idiv
sti
mov
cmp
(bad)
std
mov
mov
repnz
ins
arpl
sahf
sbb
fstp
dec
into
fcomp
repz
aaa
cmp
setp
lahf
int3
ret
fisubr
inc
out
test
fld
xor
pushf
push
scas
or
sbb
daa
fs
pop
stc
sti
add
add
rol
sub
jge
mov
jnp
inc
mov
stc
add
rcr
cmp
push
mov
call
loopne
shl
and
jecxz
xchg
jb
ret
xchg
rcl
into
xchg
repnz
shr
add
iret
jae
adc
retf
pusha
fcomp
or
xlat
jmp
pop
gs
pop
pop
ins
xchg
cmp
xchg
nop
cmp
popa
scas
push
xchg
xchg
inc
cs
or
repnz
xor
xchg
xor
mov
or
adc
mov
pcmpgtb
test
aam
add
and
sbb
stos
aam
mov
jmp
mov
int3
cmps
sub
(bad)
retf
xchg
mov
js
sbb
gs
xor
ret
in
adc
rcl
sahf
inc
int3
aas
sub
pop
out
mov
dec
loop
jp
jp
stc
mov
sub
ja
imul
push
jecxz
push
(bad)
xchg
mov
vunpcklps
sti
inc
and
jo
cmp
(bad)
out
xlat
cdq
cmp
cld
inc
mov
mov
dec
add
mov
iret
and
movs
dec
daa
and
dec
and
dec
and
int3
(bad)
mov
leave
mov
pop
xor
(bad)
fs
pop
mov
mov
jmp
or
pusha
in
push
imul
mov
cmp
cmc
ds
ss
add
(bad)
xor
cmp
pop
sub
adc
push
adc
xchg
sbb
mov
jecxz
ret
(bad)
clc
sbb
jecxz
dec
pop
push
cli
xor
test
jns
daa
jno
test
icebp
jns
mov
and
mov
pushf
push
mov
ffree
xor
in
pop
xchg
jmp
je
push
nop
add
es
jb
dec
or
and
test
lods
hlt
ret
ins
fimul
pop
fucom
xchg
imul
shr
fidiv
push
das
cmp
test
mov
mov
lds
lahf
mov
adc
outs
jecxz
or
or
xor
dec
test
sub
jns
inc
shr
cmp
lahf
or
dec
in
jb
lods
push
test
mov
arpl
xchg
ret
xor
xchg
push
in
cli
sbb
mov
add
jge
fld
xor
clc
adc
mov
push
inc
icebp
stc
stc
ret
aad
mov
xchg
arpl
and
test
shl
adc
movs
sub
push
adc
jg
pop
leave
pushf
add
mov
ins
push
sub
pop
and
and
mov
into
fisub
dec
push
adc
inc
call
push
in
rol
inc
sahf
jnp
xchg
lahf
cmc
push
ins
cmp
push
cmp
push
out
pop
xor
push
xchg
cli
and
pop
sbb
out
mov
mov
mov
out
inc
ss
push
(bad)
xor
mov
xchg
dec
and
and
dec
dec
sahf
addr16
call
jo
daa
jmp
or
jo
jne
xchg
jmp
cmc
xchg
stc
adc
mov
or
sbb
dec
mov
pop
lods
jp
movs
push
xor
scas
rcl
jnp
ins
and
out
bound
dec
test
dec
adc
dec
jo
shl
mov
dec
das
jnp
push
push
daa
adc
push
mov
out
iret
pop
aas
xchg
jns
out
xchg
leave
mov
cmp
mov
mov
lahf
shl
inc
out
inc
ja
mov
mov
xchg
test
pop
ss
into
fstp
inc
stos
xor
jmp
and
sbb
aaa
xchg
xchg
aam
dec
pop
xchg
adc
xor
xchg
cmps
xchg
xchg
xor
retf
mov
jns
xlat
sub
dec
outs
in
mov
movs
inc
pop
test
inc
ret
and
aaa
jmp
sub
jmp
dec
pop
adc
cli
popa
cmps
cli
hlt
in
loope
jl
ds
and
fstp
xlat
ret
and
and
cmp
cmps
shr
clc
add
dec
jg
clc
cmp
call
les
mov
rcr
call
out
adc
pusha
ins
lahf
in
dec
mov
pop
xor
mov
sbb
mov
movs
ss
add
inc
ja
push
sbb
cli
test
stos
cld
jmp
rcl
or
xchg
les
ins
push
cmp
aas
pop
mov
inc
mov
push
mov
push
les
out
pop
pop
ror
aas
(bad)
sbb
dec
or
gs
ficomp
jae
arpl
fs
test
or
add
rcl
sub
inc
or
cdq
mov
sahf
popa
push
inc
jecxz
mov
shr
jp
ror
les
ret
not
dec
aaa
hlt
cmp
cmp
ins
nop
popa
jl
cmp
xchg
aas
jp
ss
xchg
movs
aad
xchg
inc
pop
jae
push
inc
dec
pop
xor
hlt
mov
jl
cli
shl
ss
sub
inc
into
jp
xchg
stc
(bad)
dec
cmps
fimul
add
sub
loop
inc
jmp
pop
inc
loop
sbb
xor
pushf
inc
xor
mov
sahf
jg
push
addr16
cld
fcom
mov
out
mul
and
xchg
lods
test
sbb
fdiv
cmp
xor
cmps
or
lods
pushf
mov
jp
fsub
int
mov
jbe
bound
cmps
lds
stos
ficomp
loope
jmp
add
inc
xor
jp
or
mov
inc
sbb
xchg
adc
xchg
jge
sahf
adc
cld
push
loope
loopne
xor
sub
mov
(bad)
mov
and
fisub
bound
push
adc
xchg
push
pusha
pusha
imul
and
cmp
ret
jns
cmp
inc
scas
xlat
add
gs
push
lock
cmps
(bad)
mov
in
idiv
ror
jno
sub
push
jmp
xchg
(bad)
mov
xchg
mov
xchg
adc
xlat
std
sbb
fcom
mov
test
xchg
fcomp
or
mov
sar
aaa
int3
xchg
fcomp
adc
push
mov
dec
jecxz
shl
ins
xor
fld
xchg
dec
and
out
xchg
out
xchg
adc
dec
popa
test
cs
add
and
inc
loope
imul
inc
push
aas
add
inc
or
test
enter
cli
jbe
popf
adc
inc
out
mov
xchg
fld
imul
clc
inc
gs
scas
pop
scas
mov
xchg
xchg
loope
or
ss
pop
call
sbb
pop
rcr
jno
jmp
xchg
call
cmp
ret
inc
push
mov
mov
sahf
mov
jle
push
mul
cli
pop
and
jne
or
lea
sti
imul
pop
add
jbe
mov
(bad)
push
xchg
jmp
or
in
inc
lock
call
mov
mov
xor
into
out
inc
retf
inc
jb
jle
repnz
cmps
add
retf
cmp
lods
jo
or
mov
(bad)
xor
sub
(bad)
icebp
cmp
cmp
lahf
sub
(bad)
sbb
popf
mov
fimul
cmp
ret
xlat
dec
imul
mov
fsub
jle
mov
fst
mov
lahf
(bad)
cmp
fsubr
sub
sub
mov
jg
mov
xor
(bad)
jp
mov
mov
test
add
push
aaa
cs
enter
movs
mov
pop
xchg
(bad)
cmp
enter
fistp
pushf
sar
shr
bound
int3
push
mov
pop
inc
call
add
push
mov
ss
push
outs
out
ins
retf
fild
hlt
pop
idiv
and
cs
addr16
hlt
mov
fwait
mov
and
mov
gs
jae
scas
xchg
(bad)
cmp
fcmovnu
sub
add
mov
ret
not
mov
mov
call
pop
div
retf
out
xor
repz
xchg
ror
xchg
dec
cli
and
jl
mov
retf
xchg
push
adc
ins
xchg
jecxz
inc
loop
arpl
jmp
aam
mov
sub
xchg
pop
xor
jp
jl
xor
sahf
mov
fstp
and
je
mov
sbb
popf
xchg
rol
xor
into
jp
adc
scas
in
es
sub
fmul
jmp
and
xor
int
fisttp
jnp
mov
pop
push
xchg
sbb
jecxz
sbb
or
adc
inc
sub
data16
lock
jmp
(bad)
in
push
enter
jmp
in
xchg
out
jne
push
add
push
sub
(bad)
call
out
dec
les
mov
test
cmps
retf
fisubr
adc
pop
movs
jb
sub
leave
out
inc
jns
push
cld
mov
jge
xor
xchg
aaa
mov
mov
and
xchg
sub
cmp
fist
fisttp
shl
dec
stos
cmp
lock
icebp
inc
adc
and
int
mov
xor
jne
pop
test
ja
or
jnp
addr16
mov
mov
les
mov
mov
out
add
jne
sbb
clc
adc
sub
push
mov
(bad)
pop
jo
xchg
je
dec
(bad)
lods
pop
out
jmp
mov
add
hlt
lock
movs
pop
dec
sub
xchg
jbe
push
inc
mov
aam
mov
fist
cmp
add
(bad)
ss
lds
addr16
add
call
mov
inc
and
shr
dec
arpl
dec
mov
add
cs
jo
and
cmp
adc
ja
cmp
adc
mov
dec
loopne
or
fisttp
mov
fnsave
dec
in
hlt
mov
jp
shl
in
add
pop
xchg
dec
shl
pop
(bad)
imul
cs
scas
fwait
pop
mov
pop
add
sub
cmp
jno
mov
jns
addr16
or
inc
mov
nop
in
pop
test
jns
add
imul
or
or
inc
movs
bound
imul
sub
loope
pop
int
dec
movs
(bad)
ins
push
mov
inc
nop
xor
call
sti
les
in
dec
push
adc
outs
ret
mov
mov
stc
push
inc
addr16
cmps
push
sub
lock
mov
sbb
mov
lock
cmps
and
stos
xchg
cmps
push
and
lods
inc
jne
jl
push
mov
data16
enter
js
mov
mov
mov
xchg
cmp
xlat
mov
call
jp
das
jno
and
es
fld
jb
pop
fcmovnb
xor
mov
jne
imul
(bad)
mov
addr16
inc
outs
xchg
pop
icebp
in
das
call
push
push
stc
cmp
jo
int
stc
mov
push
adc
movs
lods
jo
inc
test
push
mov
call
cmp
dec
lods
mov
xor
fdiv
xchg
xchg
xor
jb
fucomp
clc
lea
mov
ret
es
scas
push
ret
test
ins
loope
das
mov
or
jno
push
push
pop
fnsave
lds
jo
cmp
adc
test
push
arpl
in
loop
cld
mov
or
xchg
mov
pop
ins
mov
jno
fwait
push
inc
dec
hlt
sub
data16
sbb
repnz
(bad)
pop
jb
push
xchg
sub
mov
test
mov
inc
mov
test
pop
and
(bad)
cmps
sar
fisttp
arpl
or
dec
neg
aam
jne
(bad)
icebp
out
movs
add
xchg
sub
in
sub
pop
or
pop
ins
xchg
ins
sbb
mov
push
lods
mov
ins
xchg
mov
adc
(bad)
sar
inc
in
add
stos
dec
cmps
rol
mov
jle
test
xor
mov
jne
call
add
inc
push
test
aas
xor
out
(bad)
mov
pusha
call
outs
retf
xor
fsub
cmp
and
out
sahf
in
mov
cmp
add
ror
inc
mov
xchg
(bad)
jg
retf
es
add
inc
xchg
into
nop
stos
mov
neg
mov
lock
mov
lahf
aam
adc
clc
mov
lods
adc
in
sub
pusha
add
mov
lock
mov
xchg
sub
push
inc
add
out
sub
aas
cdq
(bad)
pop
add
pop
sub
aam
cmp
dec
daa
out
cmps
sbb
inc
sbb
mov
pop
inc
test
mov
inc
mov
bound
cli
imul
or
xchg
dec
in
scas
and
dec
add
sub
clc
pop
mov
cmp
movs
or
inc
push
in
fiadd
xor
mov
xor
mov
dec
or
mov
sbb
push
sti
out
data16
xor
aas
jge
inc
add
cmp
pop
push
sub
or
dec
std
inc
jg
dec
or
push
loope
xchg
mov
sbb
xor
xor
pop
arpl
sahf
sahf
sbb
jmp
ins
iret
in
inc
jnp
rcl
push
imul
pop
pop
add
push
jmp
or
std
cmp
fldenv
mov
sbb
add
xchg
sbb
jmp
sub
mov
shl
call
mov
inc
sbb
and
test
jge
mov
mov
push
pop
ret
(bad)
rcl
adc
pop
hlt
div
mov
push
push
test
in
test
inc
fwait
imul
jle
ds
sub
sbb
cs
leave
inc
repnz
not
pop
push
mov
int3
and
push
imul
pop
cmp
push
cmps
(bad)
cmp
cmp
(bad)
aam
test
repz
dec
sbb
push
pusha
mov
aam
xchg
mov
fsubr
leave
add
(bad)
cmps
out
xchg
movs
xchg
mov
enter
(bad)
popw
inc
mov
test
mov
mov
or
mov
dec
jne
mov
adc
cwde
jp
jmp
mov
scas
in
xchg
adc
inc
sbb
(bad)
js
imul
jns
jns
cmp
inc
shl
mov
neg
or
ins
jle
or
sbb
cmps
mov
pop
pcmpeqw
mov
mov
test
(bad)
popa
fadd
cmp
cmp
mov
pop
cmp
lods
jbe
cmps
push
scas
adc
aaa
ja
fsubr
ins
push
and
fistp
mov
retf
(bad)
movs
gs
ss
sahf
pop
and
shr
jmp
or
xchg
sbb
jo
pop
inc
dec
cmps
adc
jecxz
cdq
stos
repz
outs
call
jne
xchg
cmp
imul
sbb
out
adc
jmp
xchg
lahf
pavgb
and
sub
cmp
test
movs
and
pop
loope
push
loopne
(bad)
mov
pushf
and
dec
cmp
loop
mov
add
test
(bad)
shr
mov
sub
xor
push
push
mov
imul
xchg
rol
push
push
mov
cmps
xor
(bad)
cmp
xor
and
pop
push
mov
aad
xchg
xchg
mov
pop
jge
add
push
aam
lock
pushf
xchg
cmp
scas
mov
mov
pop
imul
stos
inc
cmp
ds
add
daa
and
and
pop
sub
inc
enter
(bad)
push
call
xchg
inc
pusha
lds
mov
xchg
pop
pop
retf
cli
fs
pop
pop
or
fst
stos
jnp
xchg
cld
pop
sahf
jno
xor
cmp
out
out
daa
mov
movs
mov
movs
movs
ficomp
movs
inc
pushf
hlt
add
xor
inc
lock
inc
cmps
cmps
mov
gs
sbb
jge
push
test
les
cmp
jnp
mov
movs
nop
sub
pand
sti
fist
dec
cmp
cld
imul
cmp
and
lock
dec
dec
jecxz
pushf
in
mov
ficomp
cmp
adc
xchg
gs
ret
jno
stos
sti
xor
cdq
jg
out
mov
in
cmps
push
adc
pop
(bad)
cmp
pop
xchg
call
xor
mov
xchg
sbb
jmp
test
adc
ins
fst
sbb
and
aaa
push
fadd
mov
mul
popf
inc
pop
sbb
push
dec
or
xchg
scas
cmp
push
and
dec
sub
and
(bad)
mov
ins
pushf
sub
outs
out
les
dec
dec
je
jne
je
addr16
mov
xor
std
push
clc
(bad)
sub
les
mov
push
gs
loope
xor
mov
lock
sub
dec
mov
push
pop
sbb
aam
(bad)
fwait
sar
jmp
mov
aam
or
sbb
jge
xchg
popa
mov
ja
dec
push
push
sbb
pop
movs
pop
or
pop
push
and
push
fcmovnbe
pop
sbb
das
(bad)
retf
or
adc
or
sti
mov
mov
repz
jmp
sub
xor
shl
add
sub
mov
rcr
fiadd
hlt
pop
out
outs
jle
or
xchg
es
dec
fucomip
jle
mov
test
cmp
mov
stos
clc
jmp
sub
mov
clc
or
jp
jl
mov
inc
push
stos
xchg
mov
cmp
(bad)
mov
stos
and
jmp
scas
and
and
bswap
sub
aaa
(bad)
hlt
out
push
aad
mov
(bad)
dec
dec
jbe
xor
sbb
cmps
mov
out
or
fcomp
rcr
pop
add
cmp
mov
or
(bad)
mov
inc
inc
cmp
mul
xchg
(bad)
aas
movs
mov
add
das
dec
or
jmp
aad
(bad)
mov
xchg
jg
aad
out
pop
(bad)
sub
call
xchg
push
stc
sbb
cmp
dec
out
into
fild
jecxz
and
add
mov
jb
pop
pop
js
nop
fild
inc
call
ja
dec
arpl
test
leave
daa
push
in
movs
mov
cmps
sub
stc
pop
clc
and
clc
cli
repnz
pop
(bad)
mov
sahf
ror
xchg
inc
int
fcom
inc
dec
call
or
push
or
pushf
mov
dec
out
xchg
xchg
cmp
add
inc
mov
out
and
or
loopne
sub
push
imul
pop
lock
aaa
dec
add
fadd
test
add
sti
sbb
out
sub
push
lods
arpl
cmc
and
cmp
push
ds
lods
out
cmc
retf
pop
sub
daa
fdiv
mov
dec
add
cmp
jmp
dec
or
retf
pushf
jo
mov
push
mov
test
mov
jmp
(bad)
push
popa
ja
push
add
cmc
je
pop
jl
rol
dec
(bad)
std
mov
adc
sbb
sub
pop
lds
dec
ficom
mov
outs
retf
ins
sbb
add
rcr
add
mov
mov
jecxz
test
test
stc
mov
and
pop
mov
(bad)
in
out
pop
or
cmps
mov
pop
lds
cmps
xchg
cmp
xchg
xchg
sub
mov
push
outs
pop
(bad)
loop
adc
push
lea
add
(bad)
stc
and
movs
push
inc
jo
cmps
les
fbld
das
std
sar
sbb
inc
pop
imul
cmp
(bad)
in
ss
sbb
movs
jo
(bad)
stc
(bad)
je
nop
popf
mov
dec
les
test
dec
enter
out
mov
xor
pop
push
push
pop
pop
sbb
push
adc
hlt
hlt
outs
push
xor
rcl
ret
adc
cmp
xchg
adc
lock
addr16
cmp
leave
sbb
jne
retf
call
shl
fstp
daa
xchg
ror
dec
and
(bad)
ds
retf
scas
cmps
xchg
iret
or
or
pop
repnz
enter
mov
add
xor
aas
scas
clc
pop
test
aad
test
sbb
dec
pop
cmp
mov
push
fwait
lea
repnz
xor
sbb
push
and
pop
arpl
es
mov
fld
jae
mov
loop
pop
lahf
sbb
and
sbb
jle
push
adc
mov
inc
and
xor
outs
test
jge
aam
fidivr
and
push
jp
inc
shl
hlt
mov
pop
sbb
dec
push
in
inc
mov
jmp
out
fmulp
mov
mov
cdq
mov
mov
dec
cld
push
stc
cmp
gs
pop
mov
sub
sbb
jnp
cmp
mov
fwait
dec
jmp
lds
data16
(bad)
mov
sbb
lock
cdq
outs
inc
mov
mov
sti
aad
(bad)
cmps
xchg
je
out
jle
dec
and
std
(bad)
mov
add
mov
sbb
inc
dec
pop
lods
int3
xor
mov
sub
mov
daa
jle
sub
int
push
fisubr
inc
mov
bound
cmps
test
sti
pop
lods
adc
(bad)
fdiv
mov
pop
and
xor
jno
push
ficomp
pop
pushf
stc
push
cmp
cmp
add
ret
mov
lds
mov
icebp
pop
bound
outs
cdq
pusha
push
jl
fdivp
sub
cmps
and
cmp
adc
test
dec
sub
dec
sub
mov
(bad)
loop
sahf
xor
out
sbb
or
aam
add
cdq
push
je
hlt
call
call
outs
out
xchg
es
mov
inc
into
rcl
retf
mov
jne
push
mov
push
call
stos
outs
mov
or
and
in
push
pop
push
push
pop
fbld
sti
cdq
cdq
push
dec
jle
sbb
sbb
dec
jne
(bad)
fdiv
fisub
push
cmps
add
mov
leave
lahf
cdq
or
punpcklbw
add
inc
popf
iret
or
adc
icebp
das
clc
dec
repnz
ret
jecxz
mov
into
in
fistp
cmp
cmp
pushf
mov
mov
jne
(bad)
and
ret
xchg
push
lock
test
jmp
jl
cs
jecxz
cmps
push
push
fisubr
mov
xchg
iret
pop
(bad)
std
movs
daa
xchg
or
inc
enter
mov
(bad)
out
test
mov
push
cmp
mov
loopne
pop
inc
rol
or
cwde
lods
push
mov
ins
sub
in
rcl
adc
xor
in
jecxz
mov
xchg
adc
or
push
add
lahf
int3
(bad)
add
jne
int3
lahf
pop
dec
push
test
mov
xchg
sbb
mov
std
movs
ror
push
xchg
ds
jg
daa
mov
adc
bound
and
into
push
add
adc
inc
or
add
cmps
call
lock
xor
mov
nop
or
push
dec
cwde
inc
fs
outs
sub
cmp
daa
shr
lds
sbb
test
jmp
aas
push
push
xchg
rol
aam
ficom
xor
pop
or
fs
pop
std
adc
rol
shl
xchg
and
out
inc
jecxz
sti
mov
inc
xchg
das
rol
aad
jae
bound
xchg
mov
sbb
inc
sbb
gs
ja
fnstenv
ret
clc
in
enter
hlt
pop
sub
stos
xchg
cmp
cmps
in
loop
imul
ja
jo
lock
sbb
add
cmp
mov
cmp
(bad)
retf
mov
rcr
sbb
dec
fdiv
(bad)
cmp
xor
movs
stos
leave
aam
cmc
aad
mov
inc
inc
adc
pop
jp
stos
iret
xor
les
pop
adc
popf
inc
mov
xchg
jl
arpl
pop
or
adc
add
popa
pusha
add
test
jg
push
inc
sub
sbb
dec
add
xchg
sar
pop
cdq
cli
sub
nop
mov
lea
fs
push
movs
inc
mov
test
cwde
xor
jmp
fnstcw
test
fs
fcomp
(bad)
xchg
cmp
or
outs
stos
mov
sub
adc
mov
push
add
pushf
popf
int
push
daa
cmp
addr16
jle
inc
inc
int3
sub
push
xor
or
or
mov
push
mov
js
xchg
lahf
je
in
dec
and
push
pop
mov
mov
adc
shl
(bad)
mov
loopne
mov
dec
icebp
test
sub
test
mov
add
push
mov
sub
(bad)
cld
jo
fidivr
in
pop
xchg
dec
outs
mov
jnp
push
shr
icebp
scas
mov
cmp
aad
pop
icebp
dec
popf
dec
fstp
xor
ret
mov
lds
mov
daa
push
int3
inc
mov
(bad)
pop
jae
xchg
sbb
lds
jmp
xlat
add
and
cld
add
or
aaa
jl
rep
xchg
xchg
dec
lahf
sub
in
fnstenv
sbb
std
dec
jbe
out
push
push
(bad)
mov
jge
arpl
push
dec
add
(bad)
cmc
sub
out
sub
cmp
call
dec
shl
sahf
movs
jmp
ficomp
inc
push
mov
in
dec
je
jnp
jmp
cmp
and
jecxz
mov
mov
xor
ror
in
and
cmp
mov
xchg
jmp
popf
add
cwde
clc
sahf
fnstcw
ficomp
test
std
cmp
push
fnstsw
lods
fild
call
leave
(bad)
sti
or
iret
sub
xchg
cld
inc
xchg
mov
mov
and
in
gs
pop
push
cld
dec
es
scas
nop
in
jno
or
in
adc
jmp
pop
or
les
jl
imul
push
add
sub
and
inc
jge
xor
int
sbb
das
jp
(bad)
fs
cmp
loopne
aam
pusha
outs
in
and
cdq
lods
gs
sbb
jo
ss
ins
sub
not
jl
cmp
pop
js
sub
jp
fucomi
cmps
xchg
jae
add
sar
jg
into
mov
mov
and
inc
ror
mov
les
clc
call
shr
div
mov
push
inc
dec
out
jne
adc
jle
lods
cld
cmp
mov
inc
ja
add
jl
mov
jecxz
or
shr
ffree
(bad)
(bad)
sahf
lods
jg
and
mov
dec
in
sbb
mov
cmp
lea
mov
adc
(bad)
aad
sbb
mov
lods
cwde
xor
add
inc
add
std
stc
xchg
movs
mov
mov
jge
or
dec
adc
pop
popa
jne
lods
call
ss
jp
cld
sbb
stos
pop
std
and
push
and
jg
in
pop
xchg
in
mov
push
adc
int
imul
popf
and
xlat
xlat
repz
and
bnd
ret
adc
push
test
jp
loop
cdq
jbe
outs
sub
hlt
mov
fild
add
ss
cmp
shl
pop
int
push
xchg
push
inc
dec
test
jmp
push
test
and
popf
aaa
movs
movs
mov
repnz
inc
add
arpl
mov
imul
jge
jg
outs
pop
mov
mov
mov
jo
adc
and
sub
sub
mov
mov
adc
mov
repnz
ret
pop
cmp
mov
out
mov
jp
fisttp
sbb
std
adc
pop
test
jle
xor
xchg
mov
std
cmp
xor
add
mov
ret
xlat
fidivr
(bad)
inc
lahf
lock
scas
and
cmps
lock
sbb
sbb
push
cmps
in
jno
cmp
cmp
arpl
cmp
data16
setp
sub
jne
xor
fld
(bad)
pop
or
inc
pop
pop
in
jne
pop
dec
and
mov
ret
repz
dec
pop
std
jns
scas
dec
jno
idiv
test
xchg
mov
pop
xor
mov
inc
imul
inc
stos
call
mov
jle
aad
sub
and
mov
loopne
lods
sub
fwait
aad
imul
sbb
fwait
mov
jb
mov
push
push
mov
mul
xor
or
xchg
pop
xor
ins
rol
movs
aas
aaa
jne
mov
pusha
in
enter
xor
es
(bad)
jg
fs
adc
sbb
pop
(bad)
mov
add
mov
mov
dec
pop
std
les
cmp
or
in
movs
pop
pusha
add
cs
cmps
push
fisub
bound
movs
popf
cmc
and
sub
xor
jmp
sub
pushf
ret
mov
mov
or
add
pop
lods
stc
push
sub
inc
mov
pusha
jae
adc
hlt
push
cmp
cmp
cld
dec
loop
sub
jnp
loope
xchg
cmc
arpl
add
pop
xchg
mov
xlat
and
shl
xor
ins
xor
cmp
inc
inc
out
cli
lahf
adc
gs
(bad)
cmp
mov
and
cmp
adc
pushf
cmc
lahf
or
das
adc
in
add
ror
ret
fmul
jl
mov
adc
out
dec
cmps
rcr
dec
(bad)
cmp
imul
push
mov
test
lds
(bad)
jecxz
add
xchg
cwde
in
stc
mov
ja
scas
mov
pop
addr16
fiadd
or
cwde
in
aam
jmp
mov
cmp
lods
sbb
enter
jmp
mov
dec
stc
outs
scas
clc
dec
xor
(bad)
sar
inc
shr
std
aaa
outs
xchg
xor
xor
rol
cmp
or
lods
xchg
lds
stos
outs
retf
mov
adc
clc
add
dec
retf
out
mov
sbb
lods
mov
lods
ins
cld
(bad)
into
das
push
push
sbb
jle
(bad)
(bad)
daa
stc
xchg
mov
mov
or
or
xor
enter
(bad)
ins
out
fdivr
jg
jne
enter
imul
push
fsubr
push
cdq
sti
cmc
test
fnstcw
adc
mov
call
in
dec
and
popa
ficom
xchg
cmp
rcr
call
push
shl
adc
retf
ins
aaa
inc
inc
lods
fdivr
call
pop
jge
das
adc
scas
ja
add
push
ja
test
addr16
pop
xlat
jnp
pop
add
fisttp
xor
gs
stos
(bad)
xlat
jge
fwait
xor
and
cs
dec
xchg
icebp
shr
(bad)
int
(bad)
push
loop
fimul
lods
adc
sbb
mov
fisttp
inc
push
cmp
dec
sbb
lods
test
movs
lss
pop
add
std
cli
cmc
jae
mov
jmp
dec
into
fs
xchg
test
test
or
or
lods
aad
shl
dec
xchg
push
popf
inc
loop
jecxz
push
cdq
sub
mov
pop
adc
pop
mov
test
pop
and
ror
in
inc
loope
or
arpl
inc
and
jno
jns
xchg
sbb
adc
fwait
jae
pusha
leave
enter
sbb
ds
pop
pop
sti
lock
jecxz
(bad)
xor
add
int3
js
sbb
loop
fldpi
cli
(bad)
out
mov
idiv
adc
adc
mov
push
lods
dec
clc
push
ins
pop
repnz
mov
jecxz
(bad)
das
and
imul
xor
pop
or
pop
cmp
fild
fnstcw
jo
aam
mov
push
daa
push
cmc
mov
mov
fisttp
pop
push
mov
js
xor
inc
sbb
xchg
pusha
pushf
outs
mov
add
xor
arpl
xchg
lahf
mov
sbb
cmps
mov
mov
xlat
push
(bad)
jmp
inc
sbb
dec
(bad)
addr16
xor
push
inc
push
int3
pop
mov
mov
pusha
addr16
xor
adc
dec
test
sbb
xor
loop
mov
movs
or
pop
out
add
and
aas
call
sub
icebp
lahf
pop
push
xor
mov
or
sbb
dec
and
adc
not
bound
jmp
or
adc
dec
inc
shr
arpl
dec
clc
ror
ss
jmp
mov
aaa
and
jo
pop
stos
cld
push
gs
stos
aaa
stos
out
cmp
inc
sbb
jne
adc
add
adc
iret
das
hlt
nop
mov
pop
rcr
aas
and
mov
sbb
jmp
ret
jns
add
inc
jae
push
mov
stos
push
stc
lea
mov
jle
dec
mov
ret
jge
xchg
out
fnstsw
xor
and
xchg
leave
inc
cmp
mov
and
cld
clc
out
jg
mov
push
mov
mov
push
aad
sub
adc
jecxz
sbb
loop
push
cmp
retf
dec
add
add
jecxz
push
(bad)
aam
lea
jnp
ins
adc
(bad)
pop
xchg
js
ss
dec
xchg
nop
jb
xlat
add
fdivr
neg
push
xor
test
jbe
mov
xchg
adc
cmp
xlat
push
fild
jae
in
add
js
jge
push
imul
or
xchg
outs
mov
mov
sbb
fsub
push
jle
or
xor
fcom
push
push
mov
jmp
add
jecxz
push
adc
in
out
jnp
imul
imul
rol
cmp
xchg
xchg
dec
sbb
repnz
add
data16
inc
and
out
popa
jb
jne
mov
mov
int
mov
mov
pop
adc
sub
arpl
data16
inc
jp
mov
inc
das
out
in
adc
add
dec
mov
clc
fdiv
xchg
jns
jae
cmp
std
pusha
cmp
stos
scas
xchg
mov
call
loop
ret
out
retf
scas
mov
adc
mov
xchg
mov
dec
movs
mov
test
xor
fst
push
sbb
and
xchg
pop
ffree
push
adc
popa
cdq
fwait
pusha
sub
dec
in
enter
jbe
ret
sbb
inc
stos
fcomp
inc
jle
mov
sbb
sub
or
out
mov
outs
in
imul
mov
xor
mov
shr
mov
xchg
mov
sub
stc
loop
cld
jge
mov
xor
outs
pop
jnp
jge
fwait
jmp
(bad)
scas
rcr
in
cwde
mov
jecxz
(bad)
cmp
mov
fwait
sub
ins
mov
je
aad
xor
dec
(bad)
loope
xchg
jp
push
aas
pop
push
add
add
push
outs
jmp
scas
fsubrp
jmp
dec
test
xchg
and
jg
sbb
jmp
movs
mov
fwait
movs
movs
pop
rol
push
pushf
add
addr16
test
(bad)
cmc
jmp
xchg
mov
jle
xor
cld
or
pop
jl
jne
in
(bad)
out
xchg
inc
(bad)
scas
add
(bad)
push
(bad)
mov
out
popf
dec
mov
fwait
inc
and
add
pop
push
cmc
mov
sbb
fnstenv
xor
inc
add
lods
and
ss
fisubr
push
pop
cmp
mov
cmc
inc
js
mov
cmp
xor
daa
cs
faddp
xchg
push
loopne
push
and
test
cmc
jne
loop
sti
pop
inc
cmp
fild
or
ror
lea
arpl
add
mov
xor
mov
sahf
out
xor
jg
hlt
push
add
imul
fs
out
sbb
inc
sahf
int3
int3
pop
cmp
cdq
xor
mov
mov
shl
inc
add
fadd
inc
mov
daa
mov
jmp
mov
mov
je
call
cmp
fs
dec
scas
lea
add
sub
push
sti
pop
or
push
pmaxsw
push
pop
stos
scas
mov
sub
lds
xchg
adc
mov
icebp
pop
outs
mov
xchg
fsubp
(bad)
or
and
mov
push
mov
test
or
fcomp
pop
cs
xor
(bad)
sti
sbb
into
enter
mov
inc
dec
addr16
mov
push
std
or
cmps
xchg
inc
inc
retf
fdiv
jo
bound
xchg
push
xchg
repz
push
rol
mov
xchg
jae
push
mov
pop
scas
or
mov
inc
sbb
or
mov
push
outs
shr
or
pushf
out
add
lea
aaa
dec
mov
inc
mov
rcl
hlt
cmc
cmp
mov
or
mov
mov
adc
and
or
xor
repnz
adc
fnstenv
sub
sbb
int3
and
sbb
inc
(bad)
fs
inc
jae
in
cmp
lods
out
mov
lahf
lds
rol
les
add
mov
js
jbe
xchg
jae
add
sbb
mov
mov
imul
cmp
retf
lahf
inc
retf
and
push
(bad)
enter
xchg
(bad)
jae
mov
stos
je
adc
mov
dec
xchg
lea
xchg
mov
mov
and
push
xor
hlt
adc
(bad)
out
xchg
pop
cmc
pop
mov
pop
pop
mov
mov
push
in
dec
and
out
retf
push
ins
and
mov
cmp
jp
cs
movs
lods
lahf
mov
dec
push
jl
cs
xchg
out
mov
loopne
inc
movs
pop
push
in
nop
cwde
push
xor
loopne
add
(bad)
or
ffreep
cmp
and
(bad)
push
psubb
ss
pop
mov
retf
push
lock
push
xor
lods
dec
ret
jb
xchg
xchg
jl
push
xor
outs
stc
pop
cmps
inc
mov
add
out
mov
retf
fwait
cmp
lods
xor
fstp
mov
out
test
mov
pop
aas
adc
int
adc
sbb
adc
jns
and
popf
sub
in
std
mov
les
rcr
mov
repz
(bad)
inc
das
iret
lock
xchg
loop
iret
outs
es
add
mov
aas
mov
ins
cmp
std
mov
test
mov
scas
dec
nop
stos
ret
xlat
cmp
(bad)
sub
js
mov
mov
add
lods
jl
cmp
mov
mov
sub
retf
mov
dec
ds
add
ds
push
add
jp
ret
aaa
or
add
mov
das
std
or
pusha
dec
or
test
mov
iret
fidiv
pop
or
xor
push
pop
cli
mov
jo
(bad)
add
jge
imul
cmps
jecxz
repnz
sbb
mov
loope
ja
(bad)
cmps
outs
jle
stos
fsub
cmps
adc
cmps
dec
bound
push
xor
inc
fmul
(bad)
sbb
or
pop
(bad)
fwait
inc
fnsave
pushf
adc
ins
dec
push
aam
test
push
lds
call
cmp
lods
cmp
shl
sub
jnp
add
add
iret
inc
repnz
mov
mov
cld
sbb
push
dec
cmps
inc
pusha
jb
mov
mov
or
inc
cs
mov
stc
int3
mov
int
int3
mov
xor
xchg
jecxz
sub
xchg
fst
rol
in
es
mov
out
or
lods
call
sub
cs
pop
addps
cmc
(bad)
ins
aad
and
pop
sahf
sub
xchg
fs
fsubr
aaa
(bad)
lock
loope
jp
xlat
fidiv
stos
call
cwde
mov
and
jnp
cmps
pop
retf
pop
cmp
mov
jecxz
repnz
push
leave
push
ja
push
lods
jl
mov
push
ss
dec
pushf
mov
(bad)
arpl
jne
popa
push
call
das
xlat
mov
fwait
test
out
js
push
shr
pop
aam
ja
xchg
push
mov
test
xchg
jbe
neg
and
mov
jp
jbe
sti
loope
into
scas
fdiv
sar
inc
add
adc
adc
outs
loope
or
fisub
mov
sub
mov
jecxz
lea
push
popa
dec
neg
jg
push
mov
jno
ror
(bad)
lahf
sub
or
es
test
sbb
outs
mov
push
pop
or
arpl
pop
mov
(bad)
scas
mov
sbb
shr
sbb
push
shr
fcmovnbe
jns
lods
jl
jge
call
(bad)
xor
sbb
jo
aas
stos
sbb
mov
lods
mov
int
push
mov
aaa
repz
imul
ja
mov
imul
xchg
ficom
popa
push
inc
movs
mov
push
mov
or
dec
aam
pusha
xor
sbb
dec
call
cmp
pop
mov
bswap
mov
push
movs
jno
and
stc
lods
sti
inc
ins
out
xchg
leave
fnsave
loope
fwait
or
mov
mov
or
femms
les
pop
mov
in
cmp
std
dec
mov
cmp
outs
mov
adc
inc
xor
cmp
xlat
push
mov
in
or
xchg
cmp
xchg
int
retf
jno
(bad)
cwde
mov
imul
add
xlat
test
xchg
fwait
pushf
call
adc
in
pop
mov
jge
pop
fisubr
in
push
in
aaa
fsub
in
mov
inc
popf
add
dec
or
clc
outs
fdivr
loopne
mov
dec
jnp
mov
push
jns
pop
test
ret
(bad)
and
sbb
cmp
mov
gs
push
dec
pop
mov
inc
ret
or
daa
sbb
adc
jmp
les
adc
mov
loopne
cdq
add
popf
inc
pushf
stos
call
pop
imul
xor
push
cdq
fild
out
sar
mov
mov
faddp
xor
add
(bad)
cld
in
out
mov
fwait
pop
ja
or
scas
movs
popf
or
xor
mov
add
pop
xor
mov
sub
test
mov
adc
jae
or
movs
mov
clc
or
cmp
cwde
mov
jge
scas
nop
and
xlat
imul
add
push
or
pop
and
aas
daa
push
xchg
pop
and
xchg
sub
popf
sbb
aad
cmps
ins
jg
mov
sbb
sub
dec
call
jecxz
and
adc
imul
std
mov
mov
cmp
xchg
sub
jle
fisubr
xchg
ss
lods
inc
sahf
mov
aam
aaa
inc
mov
xor
test
jle
mov
sbb
retf
pop
inc
pop
pop
cmp
fs
jno
int
adc
or
mov
xchg
pop
aam
or
loopne
fisttp
or
loop
sbb
repnz
iret
and
mov
lea
scas
retf
jno
add
std
xchg
mov
xlat
adc
retf
mov
fwait
pop
gs
pop
outs
mov
sbb
repz
add
and
into
jg
rcr
cld
xchg
xor
mov
jne
cmp
sbb
xchg
lods
or
adc
scas
mov
and
mov
mov
shl
call
xor
out
mov
mov
mov
pop
in
push
int
sbb
push
xchg
and
sbb
(bad)
into
add
sbb
mov
repnz
aad
movs
mov
fcomi
outs
ficomp
fisttp
int
jbe
fidiv
(bad)
or
aam
(bad)
fcom
mov
xchg
arpl
mov
mov
setb
ins
retf
mov
shr
addr16
test
pop
dec
jo
and
and
int3
push
mov
ja
cld
push
clc
jg
or
cmp
sti
arpl
stos
jmp
stc
pop
and
fst
jl
in
and
cmp
or
data16
sbb
xchg
mov
test
push
xchg
mov
fstp
jmp
jae
scas
adc
push
scas
sub
sbb
(bad)
sar
pop
fdiv
enter
sub
leave
lea
mov
pop
shl
jle
cmp
push
fcomp
ds
arpl
xchg
sub
mov
xchg
test
fdivr
sub
xchg
sbb
data16
and
rcr
outs
sar
dec
(bad)
stc
arpl
pop
in
add
push
mov
jl
pop
mov
iret
jbe
fs
imul
cmp
pop
adc
xchg
pop
adc
cs
in
ret
jo
pop
pop
jns
pop
(bad)
cld
(bad)
cs
push
xor
sbb
jno
adc
(bad)
cmps
mov
pop
(bad)
pop
jb
add
jnp
jp
lahf
mov
repnz
into
cmp
aaa
push
adc
sbb
pushf
cs
sahf
js
fnsave
mov
mov
mov
xor
pushf
pop
stc
nop
jl
push
push
and
loopne
push
sbb
cwde
popa
sbb
popf
sbb
mov
out
loop
push
popf
addr16
(bad)
and
sub
dec
lds
sub
and
fmul
aam
sahf
adc
in
inc
lea
call
pop
sub
dec
mov
daa
into
stc
repz
(bad)
rcr
test
jmp
jl
cmp
push
jns
stos
and
enter
out
(bad)
jl
arpl
push
jp
scas
test
inc
xor
and
mov
mov
cdq
adc
adc
setb
jmp
cwde
push
mov
sub
jns
dec
test
mov
adc
jmp
push
sbb
fldenv
popa
(bad)
test
add
call
ret
arpl
mov
loope
stc
pop
out
pop
fiadd
sub
clc
fdivr
mov
push
fdiv
dec
inc
mov
add
cdq
cmps
std
pop
push
sbb
and
retfw
jno
pop
jo
and
mov
and
jecxz
jmp
xchg
push
and
push
and
cmp
sbb
stc
jae
in
imul
inc
popf
mov
shr
dec
(bad)
lods
retf
inc
push
test
(bad)
outs
cmps
xchg
inc
sbb
push
fstp
mov
xchg
jle
push
out
stc
push
lods
and
pop
push
xchg
scas
vpunpckhdq
or
mov
int3
adc
jbe
int
mov
mov
cmp
sahf
add
popf
push
and
mov
sti
adc
mov
xor
mov
pop
push
arpl
push
rcl
sub
mov
add
std
cmp
add
xor
push
xchg
adc
jae
cmp
push
and
(bad)
xchg
mov
and
in
push
jae
or
adc
jae
mov
gs
and
xor
iret
jmp
ret
lock
aam
mov
shr
sbb
int3
retf
jnp
outs
push
imul
jl
int
enter
mov
scas
pop
out
loopne
lock
pop
in
sub
ins
xchg
imul
shl
int3
xor
cli
push
rcr
ss
mov
adc
or
loopne
lock
cmp
and
aaa
push
add
xor
jg
bound
mov
cli
pop
sub
dec
or
dec
cmp
xchg
ss
inc
aad
sbb
ins
aad
jmp
pop
stc
test
xchg
movd
ds
pop
pusha
movs
in
lods
aaa
xchg
sbb
repnz
mov
fdiv
cmps
paddb
xor
jmp
loop
jo
sub
int3
mov
pop
xchg
xor
mov
xchg
cmp
adc
data16
and
jge
ss
daa
scas
aad
inc
(bad)
mov
(bad)
push
jne
loop
cmp
dec
stos
lock
data16
scas
cdq
inc
lahf
cmp
test
push
push
adc
add
jo
jmp
stc
lock
sahf
push
pushf
xchg
or
(bad)
int
push
push
cli
mov
fwait
sahf
(bad)
lahf
inc
xchg
in
mov
sbb
dec
adc
push
imul
pop
(bad)
jge
popf
pop
dec
xlat
sub
adc
xchg
xor
dec
or
adc
data16
movs
push
mov
loop
bound
push
mov
mov
dec
mov
mov
push
xchg
jo
mov
daa
xchg
and
aas
dec
inc
mov
xchg
sahf
mov
fimul
dec
or
push
out
outs
test
ins
mov
cmp
and
ret
or
popf
stc
into
or
repz
pop
pop
loop
and
mov
mov
push
and
data16
hlt
adc
dec
fdivr
lods
push
or
lock
jb
adc
and
push
movs
lock
dec
es
ror
daa
add
in
jne
shr
pop
shl
dec
pop
bound
nop
inc
sub
push
mov
cld
mov
cmp
and
xor
cwde
scas
push
iret
inc
(bad)
loope
std
retf
xchg
imul
in
jne
sbb
test
in
aam
dec
loop
mov
adc
data16
loope
fcmove
enter
push
(bad)
jge
mov
push
ins
stos
out
and
fst
jp
inc
int
xchg
and
ss
pop
push
push
cmp
fild
mov
mov
jbe
push
mov
fild
inc
call
add
cmp
jb
xor
inc
enter
int3
inc
inc
add
mov
dec
out
or
xor
je
fadd
into
test
shl
ins
sub
out
shr
(bad)
fisttp
inc
jmp
aad
xchg
rol
mov
cwde
ins
or
pop
outs
inc
retf
jmp
xchg
fwait
mov
fwait
clc
push
sbb
push
adc
mov
retf
xchg
pop
add
xor
sub
ror
pop
push
dec
fnstcw
push
mov
hlt
int3
xor
jbe
cld
push
and
inc
adc
jae
and
adc
pop
je
addr16
std
lods
test
iret
jae
ins
in
ret
dec
mov
xor
aad
imul
jmp
cs
jecxz
int3
imul
and
jbe
ret
addr16
sub
jne
(bad)
fild
or
retf
jl
call
cld
push
push
jle
sub
loope
(bad)
js
dec
shl
or
out
mov
ret
push
sub
stc
adc
push
mov
mov
clc
push
dec
inc
adc
mov
sub
xor
(bad)
leave
je
sub
mov
mov
ret
scas
shr
cdq
sub
push
fimul
ins
adc
jo
fstp
dec
cs
mov
cmc
mov
js
push
stos
ja
rcl
repz
loopne
dec
push
cmp
mov
in
adc
cmp
push
push
shl
jmp
adc
and
inc
fcomi
mov
add
outs
xor
or
pop
outs
out
push
jp
outs
adc
mov
repnz
mov
cmp
mov
ins
xchg
mov
jp
lahf
xor
in
scas
mov
push
add
in
xor
out
push
jo
xchg
fisttp
xchg
nop
mov
jae
jl
mov
jg
sbb
test
faddp
cmp
sub
and
mov
ja
add
(bad)
mov
call
daa
pusha
cli
push
inc
std
in
stos
sbb
(bad)
bound
(bad)
test
into
aaa
jmp
rcl
rol
inc
mov
gs
mov
xchg
retf
fwait
pop
add
pop
dec
lods
int3
and
xor
jbe
retf
mov
push
lahf
xchg
push
inc
(bad)
adc
jge
imul
aam
ja
int3
cwde
fbld
xor
rcr
js
repz
cmp
jbe
sti
test
jno
sbb
lods
gs
xor
inc
push
xchg
push
fistp
ret
adc
sbb
or
test
sub
sbb
jge
mov
ror
ret
sbb
inc
inc
sbb
loop
addr16
scas
jno
iret
and
jne
inc
retf
inc
dec
push
rcl
or
xchg
loop
xlat
or
mov
pusha
xlat
jae
and
movs
inc
out
xchg
add
ja
add
dec
repz
pop
xlat
js
dec
shl
(bad)
pop
pusha
mov
cmps
outs
dec
and
adc
out
mov
call
pop
ret
mov
fstp
inc
(bad)
in
fs
inc
bound
lea
es
xchg
cmp
xchg
and
mov
or
add
pop
push
cmp
xchg
or
push
fs
push
dec
dec
xor
(bad)
arpl
int3
call
shr
int
scas
sub
adc
pop
and
repz
push
mov
sbb
mov
mov
jmp
mov
retf
(bad)
inc
mov
sub
shr
test
and
mov
shr
adc
sbb
loop
test
mov
add
leave
add
mov
add
push
mov
mov
xchg
mov
fcom
sahf
imul
xchg
fldenv
retf
mov
mov
sbb
es
mov
fidivr
ss
add
push
jns
mov
and
js
mov
daa
xor
cmp
and
mov
call
ss
xor
dec
movs
outs
mov
mov
mov
(bad)
in
xchg
neg
mov
mov
dec
and
mov
jo
fild
dec
mov
stc
xor
mov
fidivr
dec
xchg
mov
sbb
cmp
sbb
cmp
repz
jge
adc
or
(bad)
pop
mov
gs
jnp
repnz
cmp
pop
mov
inc
pop
lahf
adc
movs
jo
mov
js
and
xchg
and
and
xchg
fistp
inc
shr
outs
push
fcom
and
inc
(bad)
dec
test
mov
fcomp
movs
es
pop
icebp
pop
jnp
das
inc
dec
jg
pop
shl
dec
(bad)
lods
mul
xlat
mov
fcmovnb
sti
mov
jmp
cwde
jb
lea
out
xor
adc
(bad)
cld
pop
inc
push
inc
in
and
fmul
xor
push
aaa
leave
stos
or
jge
div
fwait
adc
test
imul
ds
and
or
xchg
dec
push
mov
xchg
pop
aad
out
push
shl
(bad)
or
into
mov
push
sbb
push
(bad)
lock
inc
lods
imul
into
out
push
cmp
push
fidiv
mov
fwait
mov
push
adc
dec
aaa
(bad)
or
inc
jle
push
adc
fidivr
test
cli
pop
dec
dec
xchg
pop
xchg
gs
lods
stc
test
mov
mov
cmp
xor
das
jmp
jo
xchg
es
div
pusha
dec
call
je
hlt
inc
aaa
fild
xchg
mov
and
dec
adc
out
scas
nop
jo
lods
cmc
add
inc
scas
jb
jnp
cs
stos
cmc
es
in
not
push
pop
dec
sbb
push
dec
xchg
xor
out
add
adc
ds
and
pop
push
std
and
push
or
es
jecxz
xchg
cmp
mov
aas
outs
cmp
mov
and
cmp
int3
pop
neg
pop
es
(bad)
sbb
imul
cmps
add
mov
lds
mov
xor
push
movs
sbb
pop
jnp
(bad)
ds
pop
ja
imul
setae
or
out
push
jge
inc
xor
xlat
pop
push
dec
add
mov
sub
imul
retf
or
outs
add
(bad)
(bad)
mov
jae
pop
mov
dec
sbb
out
aaa
ret
stos
sar
js
dec
sar
pop
push
ss
mov
lods
ds
push
inc
sub
or
sub
dec
sbb
mov
xor
push
stos
ud0
int
retf
(bad)
sub
bound
pop
sbb
stos
push
jns
icebp
or
addr16
addr16
cwde
mov
xor
inc
jae
loop
or
xchg
jge
mov
pop
jmp
in
mov
sbb
ret
loopne
xchg
outs
mov
dec
push
shl
push
dec
fcomp
or
les
shr
sbb
fld
push
imul
pop
dec
push
lods
scas
std
sub
syscall
mov
leave
or
cld
cmp
or
(bad)
mov
ret
fsubr
in
sbb
or
mov
in
adc
jmp
cwde
jmp
and
mov
(bad)
(bad)
mov
call
sbb
add
and
rcr
push
xor
sbb
jl
mov
and
push
std
mov
or
pop
push
mov
push
ss
fdivr
xchg
sbb
std
and
mov
enter
ror
std
ja
in
pop
lea
loope
shl
sub
lock
int
or
pop
lods
sbb
fmul
lahf
or
xchg
sahf
daa
jmp
and
cmps
adc
jnp
mov
out
inc
sub
data16
scas
fisub
(bad)
setp
retw
ds
mov
and
adc
shl
lods
sti
pop
(bad)
movs
mov
fnsave
jg
fmul
cmp
mov
loopne
pop
test
mov
imul
sbb
ror
xchg
lods
pop
mov
pop
pop
dec
addr16
cli
ja
imul
cwde
idiv
or
jge
sbb
xor
mov
mov
dec
lds
mov
sbb
push
sub
jb
mov
shrd
push
jnp
sub
neg
mov
fdiv
sbb
imul
fcomip
das
pusha
mov
ror
mov
gs
sub
les
inc
inc
fwait
popa
push
inc
fstp
ret
cmp
push
fld
pop
ret
cmp
fsubr
imul
mov
mov
repz
(bad)
mov
inc
repnz
fist
fs
or
xchg
cdq
push
movs
fcmovnbe
dec
inc
cmp
add
inc
cs
jp
xchg
fsubp
mov
cmp
pop
cwde
pop
push
adc
lds
dec
fist
fmul
dec
push
mov
in
xor
inc
mov
sbb
nop
aad
fisttp
mov
sbb
and
test
addr16
dec
int
sub
(bad)
ret
loopne
sbb
call
pusha
sti
xlat
fcomip
jo
sbb
dec
add
sar
sub
push
xchg
sub
(bad)
inc
dec
adc
mov
mov
hlt
jno
inc
(bad)
in
jae
lock
(bad)
cli
das
push
into
ret
inc
test
iret
xchg
dec
out
imul
clc
mov
mov
retw
adc
xchg
int
mov
movs
mov
(bad)
cld
outs
xor
jmp
pop
xor
cmc
jbe
pop
les
imul
mov
jmp
clc
daa
adc
or
lds
mov
enter
dec
inc
outs
dec
test
lds
add
mov
test
dec
fwait
push
mov
sti
loopne
sbb
stos
push
loopne
psubw
out
arpl
sbb
mov
jns
add
jnp
je
sbb
jmp
sub
(bad)
into
and
add
jl
gs
xlat
outs
adc
jmp
push
push
mov
mov
call
scas
or
test
scas
mov
mov
and
jecxz
jnp
inc
out
jge
(bad)
pop
or
xchg
repz
cdq
xchg
inc
pop
mov
fmulp
daa
mov
popa
jmp
movs
ja
enter
add
cwde
adc
dec
cmp
test
iret
and
sbb
sub
and
xchg
rcl
aam
or
sbb
jns
mov
sahf
adc
push
iretw
ja
(bad)
ja
pusha
stos
jae
mov
cdq
jae
out
stos
pop
xchg
repnz
bswap
sub
push
stos
jnp
pop
push
fwait
push
pusha
mov
mov
or
not
shl
jecxz
xor
adc
jns
and
xchg
and
fistp
fdivr
adc
jbe
jg
(bad)
fucomip
inc
push
mov
arpl
loope
mov
sbb
add
sub
in
cmp
cmp
or
mov
es
loop
push
add
add
(bad)
mov
adc
push
icebp
and
pop
mov
inc
mov
cmp
div
sti
fcmove
sbb
xchg
loopne
loop
xor
repnz
push
cmps
push
mov
mov
mov
xchg
out
in
or
xchg
jmp
dec
dec
push
cmc
or
fcomp
and
add
adc
adc
out
xchg
xor
sub
scas
jmp
mov
pop
jbe
call
add
or
push
imul
in
add
cld
js
sub
retf
call
inc
(bad)
into
call
lea
test
mov
and
rcr
rol
mov
movs
push
test
inc
je
dec
aam
push
mov
pop
mov
mov
clc
push
stos
lods
xchg
sbb
push
push
mov
lea
bound
push
push
pop
popf
das
es
fldcw
xchg
jl
std
mov
cld
pop
jno
jecxz
mov
mov
aas
mov
or
lods
or
sub
loop
fild
cli
xchg
pushf
stc
(bad)
stos
jo
push
xor
fdivr
add
shl
dec
push
call
mov
and
adc
aaa
add
cdq
mov
outs
cmp
jno
jnp
imul
test
shl
sqrtps
add
nop
(bad)
icebp
push
jecxz
scas
adc
mov
outs
les
aam
fdivrp
jmp
es
inc
pop
pop
mov
call
ins
sub
pop
jo
les
test
leave
(bad)
fdiv
jmp
addr16
cmp
cmp
jg
push
aas
addr16
mov
cdq
pop
enter
dec
mov
outs
dec
cdq
ffree
xchg
imul
cmp
mov
adc
or
lea
push
xor
in
iret
in
cmc
cli
add
jb
xor
loop
sub
aam
fwait
inc
out
in
dec
sbb
push
xchg
or
adc
aaa
loopne
dec
mov
mul
sub
mov
mov
inc
xor
push
outs
and
daa
xchg
out
test
test
cmps
in
xor
aam
xor
jl
sub
pusha
fisub
xchg
pop
mov
out
icebp
(bad)
pop
aas
add
inc
jb
cmps
xor
pop
bnd
pop
ja
jae
xchg
ror
push
cmps
add
mov
xor
sub
inc
mov
cdq
xchg
and
xchg
inc
pop
pop
dec
data16
int
mov
dec
shl
and
cdq
add
xchg
(bad)
sti
addr16
loope
push
ins
mov
mov
lods
in
lahf
data16
outs
das
retf
(bad)
mov
cmps
or
mov
or
cmp
xchg
shr
xor
cmps
xor
loop
in
xchg
mov
movs
mov
imul
fisttp
inc
xor
adc
test
adc
test
int
rcr
fwait
mov
mov
xlat
cmps
ffree
scas
ret
in
push
bound
add
ins
lahf
mov
mov
and
pop
add
clc
out
repnz
inc
inc
ret
pusha
mov
js
test
sbb
stos
int
mov
call
mov
daa
addr16
adc
inc
aas
call
adc
aam
push
lods
jnp
shl
inc
hlt
sbb
or
(bad)
into
jp
imul
rep
aam
push
stos
push
add
(bad)
movs
pop
pop
in
or
rcr
in
add
sub
repz
icebp
push
cmp
cmc
mov
jne
pop
sbb
mov
out
jns
jae
in
mov
push
sub
dec
mov
outs
stos
mov
mov
iret
xchg
(bad)
call
mov
jae
icebp
loope
and
out
xor
out
and
mov
pop
xchg
ss
aad
jge
xchg
loop
cmps
xchg
(bad)
pop
mov
xor
inc
(bad)
pop
pop
repnz
shl
ins
mov
and
jbe
in
pop
mov
jmp
stc
add
cwde
dec
cmps
adc
popf
lock
inc
loopne
pop
mov
dec
push
imul
cmp
mov
jnp
add
inc
mov
sbb
xchg
push
xchg
sbb
in
jb
jl
adc
or
outs
mov
in
sbb
pop
(bad)
in
div
sub
shl
in
adc
sti
jne
xchg
sub
adc
mov
adc
daa
and
cmp
out
jg
(bad)
mov
iret
stc
(bad)
in
add
xchg
sub
aas
imul
call
out
ret
push
mov
xchg
add
and
mov
inc
inc
dec
cmps
push
add
add
dec
mov
dec
xor
ins
sti
pop
jbe
push
inc
jae
jbe
sbb
cli
or
mov
xchg
sbb
int
xchg
or
inc
jno
push
and
inc
ja
mov
icebp
test
test
pushf
ret
jg
imul
add
pusha
sub
and
movs
loopne
mov
cs
push
call
call
aad
push
fisub
cdq
add
ss
and
jno
mov
in
cdq
push
stos
loopne
inc
xchg
push
ret
(bad)
push
outs
ins
mov
xchg
mov
in
rcl
cmp
or
sub
push
paddsb
push
cmp
add
push
jmp
pop
aaa
mov
dec
pop
inc
xor
fcmovnu
xor
jp
in
cs
inc
mov
dec
sbb
pop
sub
js
dec
inc
std
mov
int3
test
dec
ss
sbb
push
ins
je
cld
ins
pop
mov
pop
inc
xchg
fist
cdq
dec
cmp
xor
xchg
das
jmp
shr
dec
jl
mov
gs
mov
sbb
dec
dec
push
inc
shl
ins
out
sbb
lds
shl
xlat
xchg
stos
mov
addr16
push
pop
pop
add
push
fdiv
test
push
and
xchg
ror
mov
add
icebp
cmp
mov
pop
clc
push
mov
pop
out
mov
cmc
xchg
push
aad
add
imul
inc
leave
in
mov
sbb
fst
pop
(bad)
sbb
les
mov
jo
in
aas
int
cli
and
xor
shl
mov
pop
cmp
jbe
lahf
cmp
and
inc
jbe
nop
xor
scas
mov
pop
xor
and
or
es
test
inc
mov
sub
inc
ja
popa
mov
ins
dec
arpl
cmp
sub
cmp
aas
(bad)
jge
cmp
xchg
out
push
add
lea
test
or
out
lods
sbb
pop
mov
cli
adc
fcmovnbe
in
out
mov
cmps
cs
lock
pusha
inc
test
test
adc
pop
mov
sub
stos
fdivr
push
xchg
in
jg
xchg
xlat
cmps
shl
aas
nop
imul
aad
mov
mov
data16
cs
ret
and
xor
push
test
imul
fsub
push
not
std
adc
push
sbb
inc
lahf
xor
mov
or
add
leave
stos
cmp
and
add
mov
xlat
fxtract
pop
dec
mov
adc
mul
cmp
pop
mov
mov
cld
je
les
mov
sub
loop
iret
imul
mov
in
xor
inc
xchg
jge
mov
mov
dec
push
scas
test
lds
push
int3
pop
sti
xchg
and
jmp
retf
sar
jl
xchg
ins
fst
and
jp
inc
repnz
sub
iret
mov
mov
mov
push
fisubr
add
dec
jmp
pop
add
xchg
push
and
ja
lea
mov
push
push
mov
adc
inc
lea
or
icebp
call
xor
in
mov
lods
pop
mov
fdivr
mov
test
pop
mov
dec
push
sti
neg
fst
(bad)
push
inc
nop
hlt
repnz
je
fisttp
inc
dec
loopne
les
fst
lods
aad
pop
and
and
loopne
jmp
clc
and
sbb
sub
out
pop
xchg
(bad)
mov
push
or
mov
mov
int
sbb
mov
aam
jmp
jb
les
(bad)
lock
push
xor
mov
sub
data16
add
in
add
outs
leave
fcom
cmps
call
dec
xchg
sti
xor
gs
inc
test
xchg
rcl
xchg
and
jge
inc
call
sbb
(bad)
out
test
mov
inc
in
leave
fdivp
imul
inc
int
(bad)
push
lods
ret
mov
jle
into
mov
xor
call
std
sahf
in
ror
mov
sar
ret
or
sub
sbb
xor
out
pop
nop
inc
jp
fwait
mov
dec
pop
cmpxchg
fwait
outs
es
mov
adc
lahf
sub
aas
mov
mov
sbb
leave
aaa
mov
cs
xor
jae
cmps
push
cmc
mov
add
jno
lock
icebp
fldcw
(bad)
cmp
icebp
out
sub
and
repnz
jb
rcr
loop
das
in
push
pop
(bad)
out
lods
ja
pop
loop
das
jbe
ds
aam
push
gs
mov
sub
xchg
push
setge
adc
xor
retf
inc
xchg
pop
xor
nop
push
dec
pxor
dec
inc
adc
jl
nop
cmp
stos
xor
in
imul
jnp
sbb
loope
push
pop
int
add
mov
mov
push
push
pop
jnp
retf
call
ins
and
mov
pusha
cmps
cmps
sub
cdq
inc
sub
push
shl
adc
jb
add
ins
push
loope
pop
add
mov
outs
out
or
dec
jg
mov
dec
sbb
repz
test
neg
mov
movs
adc
jp
inc
cli
int3
cmc
(bad)
adc
mov
add
das
call
in
bts
mov
push
push
cli
mov
call
inc
jo
sub
mov
add
add
and
mov
jp
sub
xor
push
(bad)
pushf
xchg
mov
retf
xchg
mov
ja
fwait
add
jmp
cmp
add
inc
cmps
sar
imul
jge
je
xlat
mov
push
mov
(bad)
imul
pop
pop
push
sahf
test
sub
add
lar
idiv
daa
or
push
mov
or
rol
cld
xor
fcomp
outs
cmp
mov
xor
loop
movs
pop
ror
push
popa
lods
mov
cmp
push
es
mov
dec
sbb
mov
sub
jo
mov
xor
pop
or
test
jge
push
shr
push
retf
adc
inc
ror
adc
adc
cmp
clc
xchg
repnz
or
push
jb
mov
jp
out
adc
jne
aam
or
cmc
mov
push
pop
push
movs
aam
sar
mov
xor
sub
xchg
inc
inc
push
fdivr
fld
mov
pushf
hlt
popa
add
fistp
inc
js
mov
fdivp
pop
push
in
inc
ror
xchg
mov
neg
inc
lds
jecxz
lea
out
pop
or
adc
cmps
sbb
cmp
out
rcl
cwde
aad
sub
fldcw
sbb
out
stc
inc
cmp
je
loopne
mov
sahf
test
add
xchg
sub
dec
sub
inc
cwde
ds
sbb
cmps
aad
mov
mov
int
dec
xor
cmp
dec
sbb
add
clc
fisttp
cmp
push
push
fs
cmp
iret
jns
mov
jmp
(bad)
push
test
inc
loop
aam
and
scas
jbe
jbe
test
pop
sbb
outs
dec
imul
scas
imul
sub
outs
push
add
inc
imul
push
es
es
jns
pusha
lods
cs
inc
loop
mov
test
stos
int3
ret
inc
not
mov
mov
enter
ins
or
bound
shl
add
repnz
lea
or
pop
cld
pop
bound
sbb
dec
cmp
ret
pop
sbb
mov
mov
push
mov
inc
aad
mov
and
mov
jb
icebp
mov
rol
dec
push
and
dec
and
es
fsubr
stos
adc
mul
movs
test
jg
jbe
and
push
daa
daa
out
fs
cmp
fld
pop
es
mov
mov
inc
cmps
scas
fs
xchg
cmps
in
push
xor
jmp
mov
cmp
and
jnp
pop
mov
leave
dec
mov
and
mov
cs
not
in
hlt
pop
dec
arpl
data16
loop
(bad)
adc
fcmovu
mov
fs
mov
fld
jae
jge
and
retf
lds
sub
rcr
iret
aad
sub
rol
in
sub
sbb
mov
mov
imul
pop
and
xlat
jmp
stos
in
movs
adc
outs
mov
out
cli
fistp
and
into
shl
iret
lods
jb
rol
jle
mov
pop
jmp
test
out
lods
retf
mov
jae
and
enter
push
loope
inc
sbb
arpl
and
xlat
int
aaa
ret
pushf
idiv
sbb
test
(bad)
lahf
push
loop
test
cmp
jnp
mov
hlt
(bad)
popa
fild
pavgw
retf
mov
rcr
sub
retf
les
sar
inc
jnp
add
or
scas
and
aam
push
xor
mov
mov
jmp
cmps
and
lods
inc
cmp
xor
call
cmp
jmp
sbb
push
pop
or
imul
jg
cmp
push
inc
cli
push
jmp
(bad)
out
sbb
and
jg
rol
and
test
out
and
or
stos
xor
push
push
lahf
sbb
mov
fst
cmp
xchg
add
jo
jl
push
in
fsubr
jo
cmp
stos
pushf
sbb
sahf
push
xor
cld
cmp
xor
scas
pushf
sub
jle
dec
popa
pop
into
idiv
push
jmp
cli
xor
dec
xor
lods
lea
mov
or
call
(bad)
call
lods
xor
add
scas
add
sub
mov
and
push
ss
aaa
dec
(bad)
cmps
and
adc
jmp
cmps
add
in
or
sub
xor
out
add
in
pusha
out
inc
dec
sahf
pop
mov
xchg
(bad)
mov
xchg
adc
jecxz
loope
inc
add
jecxz
cld
jmp
push
loop
out
nop
ret
cmp
cmp
sbb
pop
cmp
xchg
mul
js
in
jnp
push
cld
mov
pop
add
jo
mov
dec
mov
aam
cmp
dec
dec
inc
ja
jg
push
lds
dec
mov
xchg
pop
or
jae
pop
pop
cs
rol
push
jne
pop
aaa
pop
or
(bad)
jp
loopne
dec
inc
fucomi
fs
and
enter
cmp
mov
push
sbb
adc
xor
mov
mov
mov
sete
push
pop
(bad)
ffree
(bad)
fiadd
push
repnz
pop
jg
nop
outs
cli
push
mov
jle
cmp
aas
das
sbb
xchg
stos
shl
xchg
mov
fs
and
shl
cmc
cmp
sbb
sahf
pusha
mov
mov
add
movs
addr16
std
pop
cwde
sbb
pusha
aas
xchg
xor
jecxz
outs
cmp
ja
popf
pop
add
jecxz
and
aam
imul
mov
cld
add
aaa
add
inc
(bad)
sub
pop
hlt
ja
jno
in
jp
xchg
pop
test
dec
jno
jg
and
(bad)
add
sar
les
leave
in
mov
shl
or
ja
adc
add
xchg
ror
gs
idiv
pop
mov
dec
xchg
pop
or
test
outs
and
pop
mov
mov
pop
inc
inc
daa
mov
cmps
lods
call
int3
test
stos
cld
jns
cs
test
jle
in
mov
bnd
mov
das
ss
inc
xor
mov
shl
pop
lock
sub
pushf
cld
std
mov
sbb
punpcklbw
sti
adc
in
or
test
mov
inc
sub
xor
scas
out
test
push
loope
cmp
dec
fcom
nop
fwait
lods
mov
sub
sti
push
adc
sub
outs
icebp
jns
outs
repz
test
sahf
das
or
mov
sbb
xchg
out
jnp
popf
pushf
jle
xor
xchg
movs
push
out
or
cmp
je
test
sbb
and
cmps
ja
aad
loop
sbb
aas
iret
pop
dec
cmp
outs
adc
mov
add
fistp
enter
mov
call
add
ds
cmc
mov
add
in
pusha
lahf
mov
aaa
shl
dec
cmp
dec
mov
clc
hlt
jmp
dec
mov
inc
retf
stc
enter
and
cmp
ins
jb
lahf
jnp
fnsavew
jmp
cdq
(bad)
or
addr16
call
add
adc
cmps
jg
int
in
pop
mov
shr
pop
mov
mov
mov
push
cmps
push
push
inc
mov
cli
xor
xchg
(bad)
sbb
pop
cld
xor
xchg
fwait
jp
popf
fdivr
cmp
loope
out
xchg
retf
push
clc
stos
dec
push
xchg
pop
aam
je
repnz
mov
cdq
pusha
retf
push
aam
sti
jmp
aas
adc
jne
jecxz
shr
jg
ret
call
(bad)
xchg
sub
fstp
cdq
fbstp
pusha
shl
mov
call
push
and
dec
test
add
dec
cmc
int
lds
xor
or
jns
in
inc
sbb
xchg
rcr
pusha
pop
sbb
fwait
dec
inc
mov
dec
lods
adc
movs
cmc
enter
out
(bad)
or
add
cwde
mov
mov
(bad)
mov
std
or
cmp
jnp
out
sti
stos
push
mov
or
mov
stos
ret
dec
mov
icebp
aam
adc
rcl
repnz
fist
iret
test
mov
jg
retf
(bad)
(bad)
out
call
add
sbb
int
push
cmp
pop
lods
test
aad
jmp
arpl
push
cmp
loopne
test
int
fs
retf
ss
jne
out
(bad)
in
pop
out
int3
sti
mov
(bad)
push
dec
cwde
mov
ror
test
mov
ja
mov
test
or
or
mov
cdq
out
inc
dec
dec
(bad)
jle
dec
or
mov
call
push
pop
mov
sbb
std
data16
gs
fisub
test
pop
dec
xchg
(bad)
das
cmp
cmp
mov
fsubr
mov
loopne
rcl
fucom
bnd
mov
jmp
dec
add
inc
in
xchg
fsub
mov
jns
leave
mov
out
inc
xchg
mov
sub
jne
sub
add
repnz
popa
(bad)
stc
out
mov
(bad)
mov
out
mov
jmp
paddb
sbb
cmps
fldcw
push
ins
mov
sub
add
xor
pop
and
dec
rcr
test
sub
dec
(bad)
xchg
or
sbb
(bad)
ds
xor
sub
jne
loop
dec
xor
out
repnz
pop
push
or
cli
sbb
dec
xor
shr
fldenv
ret
loop
out
call
cmc
cmps
icebp
push
int
js
jp
rcr
pop
(bad)
ret
adc
sub
mov
cmp
push
inc
(bad)
cdq
lahf
mov
test
das
aaa
fdiv
or
cmp
push
arpl
in
data16
cmp
imul
push
xchg
ja
aam
sub
test
add
jno
gs
fld
stc
hlt
repz
mov
movs
sbb
xor
sub
xchg
(bad)
movs
adc
sub
hlt
mov
iret
out
mov
or
jnp
test
dec
add
nop
pop
mov
test
sub
call
mov
out
mov
xchg
jmp
push
jnp
cmp
mov
inc
xor
lods
and
push
xor
dec
popa
inc
clc
xor
cmps
pop
cwde
add
cdq
cmp
out
cmps
sti
fimul
xor
xor
mov
push
pushf
dec
ss
les
sbb
rcl
sub
xchg
jae
addr16
loope
sub
adc
shl
call
jmp
sbb
data16
in
xchg
xchg
jecxz
jne
movs
push
(bad)
pop
std
add
push
ror
inc
xchg
xor
div
jmp
ds
cmp
jg
xchg
mov
movs
and
fdiv
inc
pop
add
jl
sbb
xchg
jns
dec
in
es
mov
scas
xchg
jo
cmp
mov
inc
pusha
hlt
add
pop
cmc
leave
fstp
xchg
sub
in
test
in
ja
test
ins
scas
xchg
xor
xlat
xor
xlat
aad
int
xchg
fiadd
pusha
sti
jo
xor
shl
fwait
mov
cwde
(bad)
aas
cmc
arpl
shl
js
and
js
adc
in
push
into
sbb
popf
xchg
ror
jp
pop
mov
mov
inc
pop
pop
lods
ficomp
ss
out
adc
pop
xor
xchg
or
mov
cs
sbb
adc
lds
jae
jp
jmp
arpl
mov
jge
in
dec
dec
sub
popa
mov
push
out
cmps
int3
fstp
dec
sub
retf
in
sbb
call
(bad)
repnz
pop
inc
jl
shl
xor
push
dec
out
mov
nop
in
lods
fwait
int3
loope
sub
lods
das
pop
test
pop
cwde
fwait
xchg
mov
jl
in
jbe
aas
add
(bad)
mov
xchg
mov
push
aaa
add
and
xor
inc
neg
clc
rcr
mov
call
mov
out
arpl
add
aad
call
fstp
out
jl
(bad)
iret
fild
push
outs
push
cmp
(bad)
je
inc
inc
ret
ss
lods
fwait
jg
bound
jmp
fsubrp
dec
fcomp
mov
adc
sbb
dec
loope
xor
cwde
mov
cmps
(bad)
out
inc
pop
sub
pop
ins
xchg
dec
xor
and
arpl
cli
jg
cmp
push
in
int3
sbb
pop
shl
(bad)
fcomip
adc
fbstp
add
fisub
pop
sbb
in
call
inc
sbb
popa
sbb
sbb
in
adc
ror
push
fs
lods
into
mov
in
add
and
out
imul
mov
setno
mov
int
mov
outs
add
shr
mov
jp
jbe
push
out
fdivr
(bad)
mov
pop
inc
pop
inc
pop
or
mov
scas
cmc
jp
stos
add
add
sti
push
push
loopne
add
push
adc
or
test
mov
rcl
ja
ins
mov
pop
xor
mov
pop
aam
xor
xor
cwde
xchg
popf
xor
xchg
xchg
clc
mov
xor
js
mov
leave
pop
mov
iret
dec
sub
in
inc
push
push
push
and
mov
nop
std
mov
cwde
dec
cmp
imul
push
fnstenv
sbb
dec
aaa
scas
mov
sub
mov
(bad)
fidiv
mov
xchg
xchg
pop
jno
pusha
popf
adc
fwait
inc
jae
xchg
or
and
mov
nop
loopne
adc
sar
xchg
inc
fldenv
ret
adc
test
sbb
sub
ret
clc
add
mov
pop
popa
mov
sub
xchg
xor
in
mov
dec
dec
push
adc
cdq
cmc
sub
adc
ffree
jge
clc
call
scas
(bad)
gs
ds
or
cmp
fwait
push
pop
fsubr
scas
sbb
xlat
xor
jne
xlat
add
scas
in
adc
and
ss
xchg
popf
sahf
div
jbe
(bad)
cmp
xor
xor
push
xchg
call
adc
std
pop
shr
js
pop
(bad)
and
repnz
jmp
jg
cmp
dec
xchg
jb
(bad)
and
jmp
ss
pop
(bad)
out
rcr
push
adc
popa
aas
mov
and
dec
(bad)
cmp
xor
inc
lock
test
inc
retf
pop
sahf
xchg
fdivr
pop
cdq
ret
test
mov
xchg
jne
xor
or
cli
xchg
rcl
test
lahf
adc
outs
xchg
xchg
xchg
xchg
jl
xchg
(bad)
jns
stc
data16
cld
aam
sbb
add
leave
jl
daa
sub
shl
mov
shr
jg
aaa
ins
mov
pop
mov
mov
popa
xchg
daa
(bad)
pop
out
shl
(bad)
and
sahf
xchg
pop
xchg
in
mov
xchg
push
jnp
or
cmp
loop
jecxz
dec
mov
pop
int3
neg
es
push
jo
push
pop
ins
inc
sub
xchg
jl
jnp
test
clc
test
cmp
jnp
jle
mov
sahf
adc
sub
outs
stos
cwde
scas
mov
les
lds
cmp
int3
in
add
(bad)
ret
cld
shr
in
dec
jmp
inc
pop
cli
int
inc
test
mov
scas
sub
mov
test
loop
push
enter
pushf
fmulp
scas
scas
je
sbb
aas
(bad)
mov
in
shr
enter
in
inc
sbb
imul
jne
or
sub
cmc
xchg
mov
out
ja
cmp
adc
iret
adc
frstor
mov
ret
gs
leave
sub
aad
js
xchg
gs
add
loopne
outs
sub
repnz
cdq
cmp
push
test
sbb
xor
(bad)
jns
leave
add
lahf
aas
das
inc
add
ins
mov
outs
mov
mov
xchg
add
mov
mov
cmp
and
pop
lods
cdq
push
sub
mov
ret
sar
mov
outs
scas
(bad)
in
xchg
jo
xchg
cmp
sbb
popa
cli
push
mov
repnz
adc
pop
inc
cdq
cmp
lahf
and
fwait
xchg
test
push
aas
movs
sub
or
mov
pop
pop
jmp
add
xor
int3
mov
inc
inc
cmp
mov
inc
pusha
inc
jp
(bad)
call
add
inc
mov
sbb
mov
add
dec
pop
sbb
lock
or
dec
push
addr16
mov
imul
jbe
or
xor
mov
pop
jbe
into
mov
xor
aam
mov
ficom
dec
gs
inc
sub
sbb
xchg
xor
inc
adc
aam
sti
repnz
icebp
sbb
lds
movs
ret
mov
mov
fdiv
jmp
outs
mov
dec
mov
or
movs
xchg
jns
scas
pop
mov
inc
cmc
inc
pop
fadd
xor
(bad)
push
call
cld
hlt
test
mov
xchg
adc
stos
mov
cs
jno
test
in
mov
xchg
mov
jp
cmp
mov
rcl
push
scas
push
fisttp
in
xchg
push
inc
out
jle
jg
dec
ins
mov
ins
or
js
fidiv
push
pop
xor
scas
cmc
push
mov
dec
mov
adc
mov
mov
cli
mov
rcl
sub
adc
pop
scas
fisubr
stc
sbb
and
add
movs
(bad)
jbe
xchg
pop
cmp
mov
dec
fsubr
adc
leave
dec
dec
pop
(bad)
mov
je
sbb
cld
enter
std
xchg
dec
pop
inc
fisubr
push
aad
inc
push
mov
mov
(bad)
(bad)
test
inc
adc
popa
or
rcr
dec
out
sbb
pop
out
sub
cdq
std
jns
and
cmps
mov
sbb
push
xchg
add
imul
test
ins
xlat
in
fisubr
mov
mov
out
lea
lds
nop
jle
sti
cmp
inc
iret
push
movlps
sub
fistp
(bad)
sub
push
mov
push
adc
stos
dec
jb
xor
jae
fwait
xor
daa
aad
xor
jns
into
pop
addr16
and
xchg
xchg
inc
jl
xor
sbb
cmc
nop
addr16
push
pushf
inc
test
xor
push
cmp
je
xchg
sub
stos
lods
jg
cld
cld
shl
out
add
sbb
xchg
pop
shl
sub
imul
jno
or
ficom
jo
inc
inc
pop
cdq
xor
stos
call
and
jl
aam
or
jbe
push
xchg
stos
or
jle
xor
popa
fimul
jle
outs
arpl
adc
rol
xchg
mov
mov
stc
cmp
jle
cmp
mov
mov
imul
mov
jecxz
fist
vmwrite
sub
ins
mov
or
dec
pusha
pusha
mov
fimul
mov
gs
sbb
movs
jnp
pop
fst
xchg
imul
pop
ret
lea
in
fstp
pusha
clc
xor
clc
jge
adc
mov
cmovg
fwait
paddq
pop
push
ret
(bad)
mov
rcr
inc
ret
inc
xchg
jge
jmp
out
scas
in
cmps
sbb
pop
xor
sbb
jmp
add
dec
and
movs
cmp
dec
push
add
sbb
mov
xchg
and
pusha
mov
fcomp
adc
cmp
adc
push
hlt
call
leave
(bad)
das
pop
fwait
or
pop
pop
pop
mov
fucomi
aaa
cwde
fdiv
fcmovnb
movs
nop
push
in
and
pop
into
movs
mov
retf
in
fwait
ss
call
idiv
je
test
sub
(bad)
pop
mov
and
push
jno
inc
and
sbb
(bad)
push
jnp
loopne
cmp
xor
xor
test
movs
and
and
push
jecxz
popa
out
mov
lds
fild
inc
dec
jecxz
sub
add
mov
loop
out
mov
ss
cmp
pop
ret
in
sub
fistp
lds
xchg
sbb
jecxz
inc
cmp
mov
inc
js
jecxz
cmp
out
add
movs
outs
(bad)
loop
test
outs
iret
stc
(bad)
es
push
and
fnstsw
mov
(bad)
sub
jb
dec
or
sub
dec
inc
adc
nop
adc
or
dec
in
push
jg
test
in
nop
gs
jmp
or
cmp
icebp
and
pop
mul
retf
xlat
or
pop
mov
pop
aad
aaa
pop
(bad)
nop
cmp
xor
xchg
pop
(bad)
arpl
cli
or
jo
movs
fwait
repz
mov
adc
adc
jle
push
sbb
push
ja
loop
inc
inc
xchg
cmp
xor
in
(bad)
mul
push
mov
dec
pop
inc
jmp
pop
jle
popf
cs
test
cmp
es
lahf
and
sbb
pushf
(bad)
mov
jno
fild
jge
xchg
loope
sub
mov
lods
mov
loop
push
cmp
cmp
icebp
sub
sub
or
mov
shl
ss
movs
sub
jno
ror
clc
outs
sub
retf
outs
xchg
jns
push
fs
lock
jge
and
adc
imul
fsubr
je
cs
jge
int
loop
stc
nop
xchg
or
(bad)
jbe
mov
dec
test
into
or
jmp
mov
adc
mov
adc
push
movs
shr
jno
pop
(bad)
out
adc
call
and
dec
mov
add
mov
aas
dec
jae
gs
mov
xor
push
daa
dec
iret
and
add
mov
pop
gs
push
mov
je
jmp
cmp
int3
add
jmp
test
push
jmp
push
arpl
leave
stos
pushf
add
pop
aaa
jp
pop
push
xchg
aad
inc
mov
dec
sub
or
mov
sub
dec
stc
mov
jbe
lahf
jb
jbe
mov
inc
fst
shl
lods
xchg
(bad)
and
pop
or
jne
and
fdivr
aam
loop
sub
jnp
push
add
mov
repz
sbb
xlat
jne
adc
jbe
mov
xor
out
dec
nop
pop
fld
mov
add
xlat
ds
sahf
push
lock
lds
ds
repz
push
addr16
scas
or
or
push
icebp
fst
xor
fdiv
cwde
sub
and
and
popa
mov
mov
jp
(bad)
xchg
pop
sbb
sub
test
mov
sbb
inc
dec
add
mov
sub
xchg
mov
cmovae
int
out
inc
inc
sub
mov
adc
push
xchg
(bad)
in
jnp
push
mov
sbb
jl
lock
movs
lods
test
imul
jo
ror
xchg
xchg
addr16
movs
in
push
shl
and
adc
in
aad
ret
adc
and
inc
ja
(bad)
aaa
and
scas
retf
jle
add
rcr
or
rcr
(bad)
call
stos
mov
mov
addr16
das
jmp
jo
sar
jmp
movs
jmp
aam
imul
imul
cmp
push
dec
das
and
div
fisubr
sbb
rcr
mov
icebp
pop
(bad)
xchg
shr
and
xchg
lahf
xchg
out
fcomp
adc
inc
xor
aaa
jge
cs
fnstenv
(bad)
es
push
xchg
stc
xchg
rcl
cmps
xchg
fwait
movs
clc
mov
out
jne
ins
mov
stc
and
je
repnz
xor
movs
or
mov
test
addr16
jp
xchg
pop
xchg
stos
lods
adc
jno
retf
sub
add
stc
jne
cld
loopne
pop
mov
push
inc
scas
mov
out
fsubr
push
clc
imul
ja
add
clc
(bad)
nop
sub
jno
mov
or
stos
or
pushf
in
push
mov
fild
xor
dec
push
addr16
push
js
push
das
pop
(bad)
mov
imul
inc
lds
fiadd
adc
adc
data16
sub
repz
bound
call
test
cdq
int3
add
mov
dec
push
sar
ffree
xchg
inc
loopne
repz
or
add
mov
cld
adc
dec
popa
cdq
push
test
xchg
fs
pop
int3
pop
fdivr
std
lea
xchg
data16
cmp
rcr
add
xchg
test
lods
adc
adc
sub
int
int
sbb
mov
call
data16
dec
es
repnz
sub
mov
inc
in
jmp
pushf
inc
outs
(bad)
adc
enter
fidiv
cmp
cdq
aas
dec
popf
pop
push
mov
inc
and
or
jns
sbb
scas
or
cmps
jne
jae
or
les
and
sar
inc
leave
xor
dec
cld
adc
inc
jle
sub
ja
xchg
jmp
xor
repnz
movs
mov
mov
dec
in
xor
lods
(bad)
mov
loop
or
cld
js
hlt
fadd
cs
pop
dec
push
cwde
xchg
pop
mov
add
inc
out
xchg
cmp
cmp
mov
out
dec
ins
jle
push
pmuludq
rcr
mov
jmp
in
push
loopne
dec
das
retf
jg
loopne
mov
cli
jle
es
pop
aad
dec
ins
stc
mov
mov
push
add
lods
popa
jbe
lea
rcl
sahf
sbb
xchg
pop
dec
outs
jp
fs
idiv
and
mov
xchg
mov
outs
je
and
(bad)
push
mov
sub
(bad)
in
(bad)
push
ins
adc
mov
sub
(bad)
(bad)
sti
(bad)
sbb
inc
hlt
and
in
mov
dec
mov
repz
sbb
xor
dec
pop
fstp
sub
(bad)
outs
jae
ret
cmp
jg
dec
sub
(bad)
in
mov
and
int3
loopne
outs
cli
cmp
mov
rcr
mov
sahf
aad
adc
or
(bad)
xchg
ret
(bad)
push
in
sar
mov
cmp
xchg
and
sub
jge
xchg
mov
cli
jbe
mov
inc
add
inc
jnp
sbb
sub
add
(bad)
out
call
test
mov
popf
push
rcr
cs
int3
inc
sti
inc
inc
retf
xlat
mov
(bad)
hlt
sub
xor
xchg
jo
xlat
outs
mov
push
inc
pushf
mov
or
sbb
scas
cmps
sbb
bound
loop
jne
aas
ret
pop
adc
pop
lock
mov
(bad)
out
movs
mov
rol
lock
out
call
jge
scas
or
xchg
mov
sbb
daa
dec
sbb
add
mov
push
push
jmp
test
ss
xchg
aaa
xchg
pop
js
mov
xchg
or
cmp
aas
icebp
dec
and
adc
test
mov
mov
inc
lods
jp
fs
sbb
jno
aas
and
or
out
xor
imul
push
pusha
xchg
(bad)
shr
test
addr16
fistp
mov
ror
cmp
out
stos
push
jbe
cmp
xchg
sbb
push
mov
mov
and
fcom
add
jns
lock
leave
out
data16
call
mov
imul
mov
cmp
sub
xchg
xchg
pop
mov
es
sub
sbb
jmp
xchg
push
inc
pop
and
das
dec
mov
pushf
ins
fst
mov
fs
aas
cli
xor
sti
popf
sahf
ins
mov
add
jg
in
lods
pop
push
jecxz
cmp
add
and
aad
movs
push
fwait
nop
mov
in
out
pop
mov
mov
or
sub
aad
pop
cmp
mov
outs
pop
mov
push
adc
mov
es
add
xor
jne
push
jl
cmp
lock
test
and
dec
clc
shl
imul
push
cmp
aaa
in
cmps
or
int
imul
cmp
pop
mov
je
dec
pop
sbb
pop
fwait
or
push
add
arpl
adc
aam
cld
sub
scas
test
cmc
xor
push
lds
cmp
and
ins
pop
in
or
ins
popf
rcl
xor
pop
fldcw
xchg
xor
dec
jge
mov
lods
mov
jg
jmp
inc
in
js
mov
adc
pop
sub
shl
xchg
pop
into
sub
sbb
sbb
adc
cld
mov
push
shl
movs
push
xor
popa
xlat
add
mov
sar
xor
inc
std
(bad)
and
leave
imul
out
inc
sbb
enter
fndisi(8087
cmp
test
fidivr
and
out
ffreep
cmp
jo
lock
jbe
shl
and
add
mov
xor
xchg
sti
rcr
cmp
mov
fcomip
push
inc
add
sub
pop
imul
or
stos
leave
cmc
dec
sbb
and
mov
push
sbb
(bad)
fdivr
cmp
outs
clc
iret
dec
cli
iret
bound
(bad)
std
mov
sahf
push
jl
mov
test
cmps
mov
jmp
push
cli
cmp
xorps
mov
fsubr
loope
jnp
jmp
inc
xchg
jmp
iret
pop
or
pop
push
je
push
shr
shl
dec
out
popa
enter
pop
shr
pop
xchg
repz
data16
imul
mov
rol
loopne
mul
mov
fsub
inc
sbb
ins
lods
cld
jmp
bound
popf
stc
jmp
cmp
and
push
pop
sub
cwde
push
inc
mov
popf
neg
add
add
sub
ror
sar
sbb
or
mov
add
pop
mov
retf
and
mov
dec
inc
mov
data16
sub
jl
mov
cld
push
mov
arpl
and
lods
xchg
inc
add
fs
push
popw
(bad)
or
stos
shr
sbb
or
test
(bad)
das
arpl
push
(bad)
inc
arpl
pop
clc
jecxz
rcr
ret
pop
or
xchg
pusha
mov
adc
retf
ins
(bad)
push
fsubr
dec
jle
imul
js
les
cli
sbb
dec
movs
jmp
fisubr
out
out
xchg
out
mov
fnsave
adc
or
cmp
mov
add
pop
loopne
nop
mov
add
sbb
test
jno
mov
xchg
mov
push
js
push
out
int3
pop
mov
mov
movs
xor
fdiv
sbb
imul
jae
cmp
enter
jbe
mov
popf
mov
push
sti
adc
xchg
retf
push
ret
mov
dec
mov
xor
out
push
mov
xor
push
jle
(bad)
in
push
inc
fild
inc
sub
mov
retf
sbb
sbb
mov
das
aaa
xchg
call
xchg
retf
repnz
xor
pusha
imul
push
idiv
cmc
js
test
test
xchg
scas
aaa
movs
push
mov
jmp
(bad)
shl
push
add
fwait
dec
mov
mov
aam
dec
ss
jl
sbb
push
pop
cmps
test
retf
inc
pop
dec
imul
mov
ins
xor
cwde
mov
lock
push
cli
outs
ret
pop
sub
in
dec
mov
shr
call
mov
push
push
popf
mov
cmp
xor
jne
jb
pop
push
jmp
sub
shl
sub
jg
fs
sets
mov
fldenv
and
add
loop
mov
jle
push
inc
iret
das
xlat
add
into
inc
aad
push
xor
adc
jmp
sbb
push
in
push
mov
adc
cld
mov
cld
imul
mov
js
pop
xor
(bad)
push
test
call
nop
rcl
mov
stc
pusha
ror
ror
outs
mov
or
xchg
and
stc
mov
jae
in
aaa
test
pop
stos
push
(bad)
das
(bad)
adc
xor
sbb
sbb
mov
cmp
cmc
add
add
and
rcl
and
stos
jb
das
inc
frstor
and
out
xor
fist
dec
test
jae
xchg
pop
daa
add
movsx
mov
ins
je
cmp
push
add
inc
std
fstp
or
mov
xchg
push
mov
enter
sbb
mov
xor
std
(bad)
retf
je
adc
xchg
repnz
sub
push
xchg
fisttp
add
lods
inc
push
jmp
jno
movs
pop
popf
jne
aad
in
xor
(bad)
in
test
shl
and
pop
xor
pop
xchg
pop
jns
sbb
aam
or
mov
sbb
pop
mov
test
lea
(bad)
in
(bad)
pop
call
adc
fild
mov
jg
adc
cmps
xlat
mov
sub
data16
ss
lods
mov
(bad)
scas
int3
xlat
inc
mov
mov
outs
nop
stos
add
add
mov
and
scas
call
mov
or
inc
or
mov
out
add
and
sub
and
test
fisubr
and
xlat
xchg
xor
xor
outs
icebp
lock
push
int
fcmovnbe
mov
loopne
retf
and
add
pop
rcr
(bad)
push
add
inc
hlt
stos
mov
js
mov
mov
pop
call
mov
call
loopne
fwait
xlat
mov
push
sub
outs
xchg
sub
xor
sub
jge
clc
mov
sbb
ins
ja
dec
jmp
mov
inc
and
inc
push
sbb
lock
stc
add
sahf
and
test
xor
addr16
xchg
in
loop
fwait
mov
mov
pop
xchg
dec
and
out
fwait
retf
arpl
inc
hlt
sbb
cld
jo
xchg
xchg
(bad)
cli
mov
mov
add
bound
loope
int3
inc
leave
cmps
inc
adc
cld
mov
push
mov
out
dec
out
rcl
xlat
cs
inc
adc
jmp
(bad)
in
std
xchg
iret
mov
es
mov
cmp
push
idiv
sbb
push
pop
add
dec
pushf
xchg
js
leave
and
mov
mov
cmp
pop
into
xlat
jne
jbe
and
addr16
cmp
inc
dec
scas
add
sub
cmp
jo
pusha
add
out
scas
jb
sbb
xchg
hlt
pop
xchg
retf
push
js
retf
or
ficomp
test
rcl
(bad)
cmp
mov
sbb
imul
lea
mov
ss
add
enter
or
call
cs
push
mov
pop
add
inc
ja
repnz
outs
out
sub
mov
jb
shl
call
pop
mov
cs
aad
push
fst
ret
test
lods
sar
(bad)
xchg
mov
mov
add
pop
or
and
(bad)
lock
sbb
xor
sbb
or
push
jnp
fisubr
mov
mov
int
push
in
das
fimul
push
jmp
(bad)
loop
xor
icebp
pop
push
mov
sbb
xor
inc
mov
fld
lds
or
inc
push
mov
cmps
das
jmp
aam
loop
stos
out
inc
jne
mov
jns
icebp
adc
add
pushf
pop
mov
stos
mov
leave
hlt
ins
aas
cmp
adc
push
sub
or
inc
popa
dec
shl
loope
sub
leave
sbb
push
cli
xor
ja
retf
jle
div
xchg
inc
(bad)
mov
fld
dec
push
rcr
or
loop
sub
sbb
sbb
ja
stos
outs
in
jg
jle
sbb
mov
repz
and
stc
push
push
fiadd
cmps
(bad)
add
push
mov
repnz
outs
mov
jne
test
inc
jge
test
jge
push
dec
outs
js
or
sahf
jo
loopne
xlat
xor
outs
rcr
inc
scas
ret
add
adc
leave
pop
adc
cld
test
hlt
adc
xchg
shr
jl
xchg
retf
sub
push
(bad)
fwait
jnp
lahf
(bad)
pop
mov
shr
pop
cwde
into
cmp
imul
fild
mov
jmp
or
aas
mov
mov
xchg
pop
imul
push
adc
pop
cmps
pop
leave
fwait
mov
adc
gs
into
popa
dec
cmp
stos
mov
inc
jecxz
jmp
sub
pop
adc
and
ret
xchg
das
xlat
pop
mov
loop
mov
nop
sbb
mov
das
jg
pushf
sub
inc
adc
dec
mov
imul
sub
cmps
cmps
sbb
add
dec
fnstenv
sub
repnz
cmps
jnp
scas
mov
mov
adc
or
adc
imul
rol
add
inc
xor
or
mov
push
pop
repz
jae
and
(bad)
mov
in
dec
push
gs
xchg
test
lods
mov
xchg
stos
std
repnz
sbb
(bad)
aad
repnz
lods
push
ret
int
clc
inc
xchg
fadd
mov
daa
lods
mov
mov
jg
mov
xor
push
fdivr
(bad)
xor
imul
imul
lods
fadd
mov
pushf
push
sbb
cmc
dec
or
jg
mov
jmp
sub
and
fstp
int3
and
fisttp
push
shr
push
imul
out
das
stc
xor
sbb
mov
push
jmp
xlat
mov
adc
mov
add
xchg
lds
repnz
mov
pop
lahf
fcom
push
pop
sbb
inc
mov
push
retf
xor
xor
sub
cmps
mov
mov
add
jo
inc
dec
sub
into
xor
sub
xor
outs
jb
fild
push
sbb
(bad)
adc
imul
cmps
pop
mov
leave
popf
cmps
add
sub
sub
jns
in
in
pop
push
sub
cmp
pop
dec
mov
xlat
in
ja
iret
test
pop
jl
push
pop
sub
push
inc
add
fscale
pushf
push
xor
inc
out
in
or
fild
imul
sar
push
pop
call
enter
pop
pop
mov
mov
aaa
sbb
popf
pushf
xchg
or
fistp
repz
sub
outs
mov
pop
push
sub
jmp
loopne
out
out
ret
in
sahf
aam
stos
xchg
jnp
lock
shr
jmp
mov
imul
out
loop
aad
xchg
(bad)
mov
cmps
jge
test
sbb
jmp
push
je
or
addr16
int3
aam
or
xor
cmp
or
mov
add
dec
cmp
js
loop
in
stos
mov
xor
or
movs
pusha
dec
dec
jg
in
inc
(bad)
jmp
(bad)
xlat
test
dec
and
mov
sub
in
add
pop
cmc
arpl
cmp
pop
les
bound
add
je
adc
mov
mov
scas
cmps
add
push
fcomi
cmps
dec
idiv
adc
xchg
xchg
movs
cmp
mov
mov
ss
jmp
cmp
mov
(bad)
movs
mov
push
sub
aaa
call
jno
arpl
sub
mov
mov
(bad)
ins
ins
pop
scas
and
shl
dec
dec
(bad)
(bad)
sub
shr
inc
adc
xor
xchg
repnz
cdq
adc
jl
xchg
je
push
or
repz
lea
(bad)
jge
pop
call
std
inc
bound
pushf
ret
add
in
jle
add
sbb
cld
cmc
fdivr
xchg
inc
sbb
shl
pop
cmp
inc
push
sub
retf
jecxz
push
or
cmp
dec
xor
fidiv
cdq
lods
jns
aam
mov
or
cmc
je
cmp
test
div
inc
and
inc
add
mov
icebp
mov
dec
cs
sbb
in
xor
out
arpl
cmp
adc
fwait
push
mov
cmp
loop
dec
and
bound
dec
and
test
(bad)
pop
cmp
mov
adc
mov
push
mov
sbb
movs
push
push
punpcklwd
mov
in
(bad)
fisubr
or
xchg
cmps
mov
into
lea
add
sub
es
out
ret
dec
retf
jmp
adc
cmp
xchg
test
mov
ja
test
(bad)
fmul
fs
cld
mov
es
out
rol
or
mov
jne
test
or
fsubr
jbe
repz
fisubr
push
jp
movs
push
ss
xor
rol
mov
scas
scas
nop
jge
dec
ds
inc
sahf
inc
ror
push
repnz
jmp
sbb
js
xor
lds
push
lahf
adc
ds
xor
test
and
fldl2t
dec
xchg
push
fsub
mov
jp
fcom
cmp
xor
jle
jnp
adc
inc
mov
in
rol
push
push
inc
js
movs
push
mov
jbe
push
xor
xor
or
cwde
sub
les
push
sar
xchg
in
pop
jns
inc
inc
and
repz
in
push
lods
bound
xchg
pop
add
lock
loop
je
test
in
inc
push
fwait
add
cmp
test
mov
loop
sahf
add
mov
jne
cmps
jnp
or
push
ins
mov
ret
xchg
sbb
loopne
push
adc
or
in
ja
dec
iret
push
pop
push
out
ds
daa
stc
aam
out
or
jae
lods
mov
arpl
cmp
adc
clc
push
add
dec
adc
popf
gs
bound
jae
push
push
lahf
xchg
lock
mov
xchg
xchg
xchg
inc
xchg
std
sub
sbb
cmp
fsub
icebp
icebp
xor
sbb
push
sbb
mov
fldenv
jae
retf
outs
jl
push
pop
int
inc
sbb
icebp
mov
pop
jae
push
sti
cmps
outs
fst
push
and
push
or
xchg
js
mov
jmp
lock
ins
repz
in
into
jne
clc
mov
push
pop
add
(bad)
sub
jge
jg
in
mov
lods
js
ret
js
js
and
and
call
and
xor
sbb
push
dec
gs
lock
dec
enter
shl
in
xchg
out
test
mov
pop
pop
pop
fild
adc
mov
jp
xchg
shl
mov
cli
xchg
jge
mov
mov
lock
aaa
jle
mov
(bad)
jns
cs
inc
nop
shr
cmps
mov
xchg
push
mov
jnp
dec
pushf
ret
or
ss
sub
test
mov
rcr
or
cmp
sub
call
mov
mov
in
call
aam
sti
sar
sbb
push
(bad)
jnp
ss
cmp
jle
inc
push
sbb
outs
mov
adc
fs
enter
dec
retf
mov
outs
add
arpl
jno
push
movs
outs
or
(bad)
mov
retf
pop
in
cmp
out
mov
popf
dec
mov
mov
add
sub
call
jl
mov
shl
in
xor
dec
jg
cli
jmp
cmp
xchg
xor
mul
adc
inc
and
in
mov
stos
mov
and
addr16
mov
fiadd
(bad)
bound
outs
mov
icebp
push
jb
outs
mov
test
mov
push
sbb
xchg
push
push
xor
mov
mov
xor
mov
mov
pop
adc
push
xlat
xchg
add
mov
jne
sti
xor
dec
outs
adc
pop
sti
xor
fmul
stos
sbb
lea
(bad)
leave
xchg
cmp
adc
xchg
or
xchg
fscale
inc
push
test
movs
push
rol
test
js
daa
mov
into
or
mov
(bad)
sahf
imul
or
sahf
sbb
mov
adc
iret
cld
sub
ins
mov
push
jp
jmp
dec
add
repnz
cwde
stos
mov
adc
adc
inc
int
out
ins
call
cmp
les
repnz
cmp
lock
dec
xor
add
int3
movs
fwait
sub
jae
retf
mov
sub
adc
fstp
xchg
sbb
sbb
aaa
mov
mov
test
nop
out
mov
dec
push
ins
or
sub
jnp
or
cwde
lock
adc
retf
shr
dec
xchg
adc
aad
std
je
mov
mov
jnp
aam
lds
ds
out
jmp
add
or
lods
and
ds
xchg
aas
call
sub
scas
xchg
xchg
popa
mov
out
fs
mov
arpl
arpl
xor
mov
jle
push
(bad)
jmp
bound
or
jge
cdq
or
rcr
fdivr
sub
out
enter
iret
mov
jge
shr
stc
fcomp
mov
add
cli
sti
pop
aas
add
or
mov
dec
mov
jmp
inc
fidiv
out
retf
jae
retf
dec
dec
push
int3
imul
and
add
pop
lods
cmps
mov
mov
sub
lods
pop
sbb
hlt
sub
enter
cmps
add
mul
not
fsubr
aam
popf
mov
jnp
leave
and
xor
mov
or
ror
daa
dec
jmp
and
push
loope
lahf
mov
mov
xchg
loopne
sar
std
and
movs
ror
pop
(bad)
sub
and
aaa
sbb
mov
ins
movs
jl
scas
das
pop
mov
and
push
in
sub
add
pop
push
sahf
xchg
fnstcw
mov
aas
data16
dec
lahf
mov
enter
sbb
in
add
jno
inc
gs
and
cmps
retf
mov
mov
sti
mov
cmp
jnp
shl
fnstcw
mov
lea
call
cmp
outs
mov
push
daa
fwait
push
test
jo
ja
repnz
imul
call
movs
cmc
xchg
cmps
fisub
sahf
loope
movs
mov
sar
aam
push
lds
or
inc
aaa
jae
out
xor
retf
or
and
aas
ret
inc
adc
cdq
std
pop
sub
in
jno
inc
cmp
inc
sub
inc
into
inc
jo
xor
push
add
(bad)
or
adc
sub
xor
sbb
dec
hlt
sub
les
fistp
sbb
xor
daa
mov
push
push
sbb
mov
or
add
mov
inc
call
imul
jb
inc
push
push
test
js
fidivr
inc
push
push
and
mov
adc
xor
cwde
dec
inc
ret
mov
and
adc
xchg
jne
out
pop
in
push
sar
cmp
popf
push
jle
pusha
lods
xor
cmps
ret
inc
xchg
adc
fsub
mov
mov
xchg
xchg
aad
sahf
mov
mov
xchg
int3
mov
ins
adc
jg
lods
sar
jae
dec
(bad)
sar
(bad)
adc
jae
mov
adc
xor
movs
je
xchg
std
pop
push
sub
(bad)
push
mov
xor
add
sbb
sbb
mov
mov
sbb
aaa
adc
lock
call
bound
and
cmp
stos
pop
retf
dec
aas
xchg
mov
sahf
call
ret
xchg
iret
cmp
vmwrite
es
test
out
fnstenv
mov
pop
cmp
fcom
xchg
and
int
mov
dec
xor
imul
jno
(bad)
popf
mov
jp
sbb
jno
cmp
dec
and
xchg
xor
lods
rcr
mov
daa
jecxz
xchg
add
or
mov
dec
inc
fnstsw
ins
in
jp
push
loope
jmp
enter
int
icebp
jmp
in
daa
fist
test
popf
int3
mov
mov
mov
pop
jae
out
cmps
out
popf
mov
pop
add
test
imul
in
fidiv
cmp
stc
outs
add
inc
sbb
jo
cmp
xchg
or
hlt
fadd
leave
or
push
pushf
and
repz
out
cwde
in
fist
sub
push
vmovdqa
sbb
and
fwait
sub
jo
add
xchg
out
ss
and
nop
cmp
nop
je
push
pop
or
in
dec
fcom
and
ss
or
popa
add
jle
dec
ins
adc
sub
pop
add
cld
dec
cmp
push
lock
cmps
cdq
es
sub
lods
pop
popa
jg
mov
mov
ja
cmp
cmp
scas
out
mov
in
xchg
mov
and
(bad)
fneni(8087
sub
paddd
out
cmps
inc
out
stc
aas
addr16
mov
xchg
mov
test
pusha
aas
inc
mov
popa
gs
jae
stos
loope
fstp
hlt
jno
sub
sbb
add
xor
adc
pop
mov
dec
nop
fdiv
push
or
inc
mov
push
add
jl
rcl
std
inc
das
push
sub
add
div
or
cmps
inc
jnp
adc
inc
pop
adc
aam
mov
iret
and
sti
mov
push
jnp
icebp
in
or
sbb
jb
loopne
cmp
bound
adc
jno
push
(bad)
or
sbb
mov
push
call
rcl
xor
hlt
fild
push
and
mov
enter
dec
mov
mov
rcl
stos
js
push
cmps
mov
jb
imul
dec
fs
inc
xor
sar
cdq
inc
cmps
inc
fs
cdq
pop
push
fdiv
ss
sub
stc
ret
stc
test
xchg
popa
jbe
mov
in
jle
lock
cmp
sbb
mov
shl
fsubr
xor
push
xchg
push
cwde
pop
pop
stos
xlat
xchg
(bad)
repnz
inc
pushf
adc
xchg
(bad)
sti
int
test
add
jmp
push
outs
inc
mov
ret
and
repnz
jo
imul
ja
mov
jbe
mov
(bad)
imul
cmps
outs
xor
bound
pop
mov
aas
sbb
and
rcl
movs
dec
xchg
sti
int3
pop
or
adc
dec
mov
aas
jno
dec
mov
add
dec
aam
cmc
jecxz
xchg
movs
xor
jg
mov
mov
ja
adc
jno
or
push
adc
fwait
cs
test
jne
mov
cwde
lods
inc
sti
inc
cmp
pop
aaa
into
mov
imul
int3
loop
sbb
ins
rcr
mov
and
add
push
test
fnstenv
jns
mov
mov
cmp
outs
loopne
mov
popf
daa
push
sar
mov
or
aas
add
and
mov
jb
cmp
pop
mov
pop
in
mov
retf
cmp
mov
(bad)
imul
push
adc
popa
and
cli
out
adc
cmp
sbb
dec
mov
imul
push
aad
std
jnp
or
(bad)
jmp
arpl
cmp
mov
adc
aam
retf
push
fdiv
stos
daa
xlat
add
frstor
ds
ins
retf
fcmovnu
inc
mov
jo
mov
or
mov
xchg
fisttp
loop
jnp
je
add
retf
stos
jle
mov
mov
scas
rcr
rcr
pop
sub
adc
cdq
cmp
mov
aam
sbb
pusha
lahf
lds
pop
push
or
fs
cmp
movs
push
retf
mov
and
lea
test
xor
loope
push
pop
movs
jmp
jge
push
cmp
inc
imul
add
adc
stos
mov
int3
xchg
push
in
call
push
stos
clc
cdq
sahf
pop
pop
icebp
add
sbb
das
mov
lahf
xlat
sub
jmp
jp
pop
push
push
cwde
in
adc
inc
retf
add
cmc
or
sbb
(bad)
in
pop
xchg
dec
aas
pop
inc
sub
push
jnp
adc
cmps
lea
jae
aaa
fwait
dec
(bad)
push
sub
fcom
pusha
dec
(bad)
jp
stos
mov
jmp
jbe
cmp
ss
(bad)
icebp
loop
add
adc
(bad)
jle
pushf
mov
cmp
add
dec
pop
test
push
enter
jb
mov
mov
mov
outs
test
mov
ja
icebp
sbb
js
fild
xchg
xor
ret
or
sahf
imul
scas
mov
sbb
adc
jmp
aaa
cmp
sub
adc
lock
imul
vmovntpd
dec
into
pop
enter
ds
int
and
adc
lock
shr
mov
jne
call
fadd
sub
loopne
mov
or
inc
retf
xchg
lahf
outs
mov
lods
dec
das
(bad)
inc
imul
out
std
retf
jo
mov
aad
sti
mov
adc
mov
ins
jnp
(bad)
xchg
jle
nop
in
loopne
mov
jg
cmp
sbb
mov
xchg
fist
je
sub
aaa
inc
lock
and
cwde
repz
adc
inc
or
pop
lock
ins
call
sbb
jb
jmp
inc
movs
sub
pop
(bad)
enter
sub
dec
and
dec
add
or
or
pop
push
call
xchg
fadd
loope
cmps
dec
test
das
push
mov
or
es
aaa
sub
xchg
rcl
cmp
mov
xchg
ret
xor
jns
adc
jmp
jae
mov
push
mov
xchg
jecxz
sti
mov
(bad)
leave
std
mul
(bad)
jmp
scas
in
fs
lods
aaa
ins
xor
inc
test
and
cmp
pop
pop
retf
sahf
movs
xchg
pop
call
mov
daa
xchg
mov
out
push
adc
mov
xchg
cmp
out
mov
xchg
push
push
dec
xor
push
dec
sbb
(bad)
jmp
stc
mov
jl
rcr
mov
mov
popf
sub
cmp
jp
(bad)
in
dec
in
push
sub
add
add
xor
push
data16
int3
les
cmp
sbb
mov
mov
ja
cmp
retf
xchg
xor
cmps
xchg
sub
retf
ss
jge
mov
enter
loop
inc
push
in
sbb
lock
xchg
sub
xchg
hlt
push
enter
sbb
add
std
push
sbb
test
jp
cmps
ins
sbb
jmp
pop
fcomp
or
mov
jbe
mov
jne
(bad)
outs
popa
adc
jns
dec
neg
or
lock
xchg
retf
xor
jo
test
fwait
jnp
cs
add
xchg
mov
and
inc
fwait
gs
mov
iret
sub
mov
pop
xor
cli
pop
(bad)
jle
bound
sahf
xor
ficomp
(bad)
call
xchg
popf
pop
out
loop
xor
shl
cmp
je
cmp
push
xchg
adc
shl
mov
into
adc
or
or
mov
in
mov
mov
cmp
inc
add
ja
push
mov
adc
add
and
cmps
or
fwait
sahf
int3
mov
pop
sub
int
aam
fs
lahf
mov
jmp
dec
jp
mov
pop
pushf
push
cwde
rcl
(bad)
enter
loopne
and
or
repnz
loop
loope
stc
xlat
pusha
adc
scas
ss
jmp
scas
add
cld
mov
push
cmp
sbb
lods
sub
pop
cmp
in
mov
in
je
mov
dec
mov
adc
ja
cwde
out
adc
je
sbb
sbb
inc
cmp
inc
cmp
loope
daa
imul
data16
stos
adc
adc
push
xchg
cmc
xor
xchg
mov
pop
add
sub
push
xchg
xchg
xchg
add
stos
push
(bad)
fimul
ss
mov
dec
test
jle
dec
or
push
mov
push
xchg
movs
popf
ins
mov
nop
ss
sub
shr
and
push
add
or
jbe
ja
mov
es
mov
call
retf
(bad)
int
sub
mov
arpl
xchg
add
cld
and
ficomp
and
inc
adc
and
jle
and
jmp
push
(bad)
and
pop
loope
sub
arpl
jb
adc
jbe
scas
aad
dec
xchg
dec
scas
int3
out
mov
lahf
sub
adc
add
sub
xchg
in
push
ins
ja
mov
add
cmp
or
mov
cld
dec
call
loopne
lea
ins
lds
imul
retf
or
lea
jns
mov
pop
sbb
fldenv
sub
or
lods
mov
adc
pop
and
je
in
in
mov
add
repnz
push
retf
iret
movs
repnz
into
mov
and
leave
mov
enter
push
mov
cld
cmps
jne
aad
cld
mov
sbb
lds
xor
pop
push
mov
jae
mov
add
sbb
jecxz
push
(bad)
push
into
mov
push
xor
int3
sbb
cmc
sub
ret
int3
add
fcomi
into
mov
cmp
test
repz
mov
mov
and
mov
or
pop
(bad)
mov
imul
aad
sbb
inc
stos
in
jbe
push
outs
pop
inc
or
and
fcomp
gs
sub
stos
ins
bound
gs
push
pop
add
push
mov
fst
xchg
sti
xlat
add
jb
push
ror
push
xchg
lods
pop
jne
adc
mov
test
inc
ds
test
mov
jne
xchg
jge
lods
call
arpl
pop
retf
cmp
cs
cli
and
in
pop
call
lods
xor
dec
ds
inc
push
dec
jle
or
pop
xor
lock
add
push
jae
sahf
cmps
xor
sub
addr16
ins
pop
xchg
ins
push
mov
push
nop
jno
icebp
in
jno
in
aad
out
lods
mov
imul
shl
sub
dec
push
cmps
mov
stos
lock
aaa
sub
mov
xor
(bad)
and
add
or
repnz
test
push
repz
imul
bound
cmp
(bad)
jle
adc
dec
(bad)
mov
jp
jbe
out
sub
and
pop
jle
adc
cmp
fisttp
sbb
inc
ja
test
bound
ins
mov
sub
xor
mov
jp
pop
and
inc
imul
push
xchg
mov
movs
dec
lock
adc
call
pop
ds
pop
sbb
xchg
jge
call
(bad)
mov
sbb
or
(bad)
test
fistp
adc
(bad)
sub
ds
sub
sub
(bad)
sbb
rcl
xchg
cmp
loop
fcomp
dec
sbb
pop
(bad)
inc
cmps
cwde
sub
dec
add
jb
rep
sbb
cmps
mov
ins
and
mov
loopne
in
sbb
xor
and
in
bound
movs
cli
int
mov
pushf
inc
jp
mov
cmps
imul
mov
pop
sub
shl
mov
xlat
fistp
bnd
mov
iret
(bad)
mov
repz
sbb
jnp
ja
mov
dec
jne
bswap
push
mov
jnp
test
sahf
sbb
push
aaa
mov
ret
pop
add
fist
xchg
or
aaa
dec
ffree
and
test
lock
mov
sbb
sbb
xor
jnp
or
outs
fistp
mov
je
pop
loope
pop
fs
rcpps
cld
xchg
or
cmp
dec
test
mov
sub
mov
mov
inc
stos
sub
(bad)
iret
push
(bad)
hlt
pop
xor
(bad)
jge
cmp
gs
data16
cmp
call
push
or
cmp
fisttp
pop
pop
cmp
and
outs
xor
fadd
add
movs
xchg
pop
into
scas
cvtpi2ps
out
push
push
retf
loope
mov
push
adc
loope
popf
icebp
lea
je
and
dec
adc
fldenv
out
(bad)
fsub
into
(bad)
and
jecxz
aaa
and
loope
jmp
sbb
cmp
cmp
int
jge
rcr
sub
cdq
jb
mov
mov
lods
sub
cs
sub
mov
cmp
int
mov
js
and
adc
cmp
adc
mov
(bad)
sbb
adc
push
cmp
sbb
stos
mov
mov
enter
push
mov
cmps
and
xor
xchg
repnz
mov
je
add
pop
es
sub
mov
and
pop
adc
pop
sbb
and
jge
repz
cmp
or
pushf
mov
std
imul
in
sbb
pop
ret
fcomp
xchg
mov
jnp
dec
es
and
scas
into
stc
fdiv
imul
dec
or
iret
jmp
or
mov
aaa
mov
push
gs
fsubr
bound
fistp
jp
stc
pop
push
outs
shl
sub
mov
test
call
and
shl
and
retf
dec
call
mov
es
mov
inc
stos
shl
dec
daa
jle
aas
jl
outs
fadd
push
dec
sub
jmp
sbb
xchg
cmp
mov
push
imul
jb
call
ss
dec
(bad)
or
inc
jle
cmc
push
or
xlat
fucomi
(bad)
mov
cmp
sub
or
dec
scas
dec
inc
ret
stos
sub
sbb
int
mov
outs
mov
scas
xor
cwde
and
shl
dec
loopne
addr16
push
pop
push
popa
in
push
mov
pop
jo
mov
push
jg
jns
je
sub
or
sar
sbb
out
lds
xor
retf
sub
push
inc
xor
cli
(bad)
dec
in
jle
or
iret
jmp
add
hlt
xor
cmp
ficom
jnp
ret
loop
mov
lahf
pop
mov
imul
sub
repnz
into
bound
ret
(bad)
and
cli
repz
lods
xchg
jg
push
push
daa
push
into
inc
pop
add
and
sbb
mov
clc
mov
fisttp
in
mov
ret
push
sbb
ins
clc
leave
(bad)
add
loope
add
fdivr
inc
xor
jne
or
jne
xchg
fisttp
int3
mov
cmp
rcl
jmp
retf
cld
sti
adc
pop
cdq
stos
jne
push
mov
push
adc
rol
pop
mov
arpl
cmp
ins
and
aaa
cmc
cld
out
(bad)
icebp
xor
or
cld
sub
mov
popa
sbb
seto
dec
push
jl
inc
jb
and
dec
sub
push
retf
jp
push
shr
fcomp
jne
xor
sub
js
cld
retf
xor
mov
dec
dec
push
or
fwait
jge
xchg
push
cmp
or
lods
lock
inc
mov
sub
jnp
jae
cmps
jno
mov
dec
hlt
in
add
mov
bound
in
mov
mov
ror
(bad)
aam
jmp
lods
push
dec
clc
ret
jno
inc
xchg
inc
sbb
jne
test
pop
ins
ret
addr16
mov
pop
test
aam
sbb
(bad)
pop
stos
sbb
xchg
popf
pusha
leave
fnstenv
ja
loope
xor
mov
mov
shl
leave
mov
inc
ds
jl
dec
adc
stos
aam
mov
jp
(bad)
pop
inc
dec
ficom
adc
add
test
sbb
dec
cmp
outs
stos
dec
icebp
or
mov
scas
leave
cmp
push
stos
push
jae
das
inc
jmp
inc
adc
jge
test
push
aam
mov
xor
dec
cmc
xor
cmp
dec
xchg
mov
lods
pop
movs
xchg
leave
nop
or
nop
bound
out
xchg
sub
adc
scas
fmul
repnz
cmp
cmc
push
lods
popf
icebp
cs
mov
call
xchg
or
pop
mov
ss
jmp
leave
mov
test
xor
dec
cmp
inc
dec
and
push
or
inc
sbb
mov
push
cld
and
mov
cmc
popf
aas
add
jp
je
push
out
and
pop
inc
out
sub
ins
test
aad
test
repz
sub
enter
outs
sahf
jo
add
push
and
jmp
int
stos
jnp
add
popf
loop
call
loope
inc
mov
aam
in
sub
push
data16
push
xchg
pop
lds
out
add
pop
test
pusha
jns
inc
cs
mov
and
int3
mov
lock
out
ror
rcl
cwde
add
(bad)
and
lods
or
mov
popa
jo
ret
das
or
mov
rol
nop
fs
scas
or
adc
ds
js
or
push
adc
mov
sbb
lock
push
test
pop
in
and
add
inc
jmp
sbb
inc
xlat
adc
mov
shr
xor
rcr
out
and
test
stos
jp
and
cmp
xor
(bad)
ss
(bad)
pop
add
(bad)
in
mov
jae
fisttp
int3
ret
cwde
push
mov
js
jb
xchg
(bad)
pop
xor
mov
cmc
sbb
jne
add
sub
test
pop
add
mov
pushf
lahf
inc
(bad)
xlat
cwde
mov
test
mov
scas
mov
mov
daa
rcr
test
or
int
mov
shr
cld
aaa
das
ss
mov
call
iret
pushf
mov
push
push
fadd
cdq
div
mov
loopne
inc
test
adc
jae
popf
or
inc
in
jl
xor
sub
xchg
pop
(bad)
push
call
ret
(bad)
out
adc
cmp
int
cmps
xchg
movs
add
xchg
sti
retf
or
and
mov
sbb
mov
arpl
xchg
adc
mov
aam
add
ds
cmp
or
or
in
push
pop
lea
xchg
push
jl
retf
aas
loope
je
movs
stos
out
loop
sahf
sbb
mov
mov
push
pop
add
or
fimul
imul
xchg
xor
(bad)
jg
and
outs
mov
mov
mov
push
add
and
clc
test
push
(bad)
shl
or
les
inc
add
jo
jb
scas
add
stos
jl
mov
idiv
cmp
hlt
mov
clc
mul
ss
mov
mov
cvtpi2ps
ds
(bad)
push
les
mov
cmps
rcr
xchg
pop
sub
outs
or
cmp
sbb
cmps
out
out
sub
jns
jp
jae
jno
adc
xchg
int3
cmps
icebp
jbe
clc
aad
mov
push
xchg
jmp
xor
push
lods
icebp
inc
pop
fisttp
or
jg
xchg
mov
xor
aaa
imul
or
clc
xchg
push
in
scas
inc
pusha
mov
out
(bad)
jge
mov
int
cmp
fcmovb
or
imul
xchg
enter
add
cmp
push
or
call
jnp
into
rcl
mov
or
mov
leave
lock
ror
cmps
pop
je
adc
or
mov
pop
dec
add
xor
and
aad
dec
pushf
sbb
jge
mov
out
in
xor
or
(bad)
paddsb
fmulp
xlat
hlt
adc
cmp
dec
imul
sti
sbb
mov
rcr
dec
push
addr16
inc
or
mov
sub
push
inc
cmps
sub
adc
test
jo
xchg
outs
sub
call
inc
add
das
loop
add
out
retf
adc
ss
les
dec
jmp
dec
data16
test
stc
jecxz
dec
adc
retf
push
ficom
lods
mov
xchg
pop
inc
adc
scas
outs
sub
in
cmp
mov
sbb
lods
sbb
test
std
push
mov
in
jle
cmp
cli
cli
jno
xchg
sbb
or
fcmovnu
ret
rsqrtps
and
sub
mov
jmp
jge
mov
mov
push
xchg
cmp
adc
(bad)
imul
cmp
repnz
cmp
(bad)
loope
inc
xchg
fsubr
mov
xor
imul
jns
cwde
rcr
sub
xchg
imul
nop
fimul
sub
push
scas
mov
dec
pop
push
out
cmps
out
mov
daa
or
mov
push
sub
stc
shr
push
jb
mov
mov
enter
add
dec
jbe
(bad)
in
and
adc
retf
xor
jno
dec
dec
mov
loope
mov
push
jp
push
imul
mov
mov
in
sbb
div
fist
or
push
inc
cs
pusha
jg
ja
jl
and
mov
popa
xchg
push
imul
sub
cmp
xor
add
jl
std
lea
in
mov
push
stc
test
inc
je
in
push
push
cmps
stos
sbb
(bad)
xchg
mov
sar
ins
loope
pop
ins
xor
sahf
int3
push
nop
jmp
aaa
xchg
mov
frstor
hlt
and
and
mov
loope
imul
cli
mov
call
aaa
cmps
inc
mov
or
(bad)
jl
mov
add
adc
adc
inc
pop
iret
outs
mov
addr16
mov
sub
xchg
pop
fsubp
pushf
pop
retf
dec
pop
in
ja
les
repz
dec
shl
iret
mov
adc
jg
xor
pminub
scas
pop
fwait
aas
mov
(bad)
jnp
repnz
cmp
retf
repnz
adc
mov
imul
jmp
pop
xchg
repz
rcr
test
mov
mov
push
inc
inc
add
pop
or
test
mov
jle
or
int3
mov
cwde
push
inc
fsubr
stc
stos
addr16
retf
call
in
fld
shr
int
ins
dec
lock
shl
scas
clc
add
stos
add
not
jns
dec
cmps
inc
test
add
mov
cmp
jmp
mov
outs
retf
mov
sub
mov
push
scas
push
pop
adc
outs
jno
sub
and
xchg
popf
nop
sub
loop
dec
mov
imul
dec
mov
add
jb
xlat
xor
int
adc
out
(bad)
aam
imul
push
inc
xchg
fist
mov
int
test
push
aaa
pop
mov
loope
push
mov
je
ja
lahf
push
sahf
out
pushf
dec
dec
ror
fwait
ds
mov
adc
pop
push
aas
inc
dec
mov
retf
es
mov
jno
test
lods
mov
inc
dec
cmp
in
cmp
vprotw
adc
(bad)
pop
fcom
mov
pop
mov
outs
mul
sti
rcr
and
cmp
cmc
dec
jmp
cmp
in
sbb
fstp
fs
cmp
outs
cmps
push
inc
pop
stc
stos
inc
mov
in
xor
retf
iret
push
mov
jnp
popa
pop
mov
xor
push
(bad)
jmp
push
xchg
nop
and
add
mov
dec
mov
loopne
or
pop
ins
dec
mov
push
in
lods
fnstcw
test
cmp
out
adc
out
jecxz
push
out
sbb
mov
ficomp
arpl
xchg
and
scas
(bad)
cmp
or
(bad)
jle
mov
jns
cmp
or
jp
sbb
pop
or
data16
cmp
dec
hlt
push
pop
pop
pop
gs
(bad)
cwde
mov
inc
inc
adc
sub
test
in
fcomip
mul
mov
call
add
push
cmp
fistp
xchg
pop
mov
sub
or
xchg
scas
sub
out
add
push
fisttp
test
rcl
xchg
repnz
pop
adc
sahf
mov
in
pop
or
pop
jmp
and
mov
stos
dec
stos
aaa
xor
pop
sub
pop
xlat
es
and
push
xor
das
nop
aam
push
sub
test
cmps
sbb
ficomp
mov
loope
in
sbb
mov
dec
(bad)
sti
(bad)
int3
mov
pop
(bad)
mov
jbe
out
les
jno
cmps
xchg
ret
push
lea
and
sbb
aad
je
sub
pop
addr16
sub
mov
(bad)
sub
sub
out
adc
ss
fwait
add
mov
inc
and
xchg
ins
outs
xor
cmp
inc
xor
aas
sub
mov
popa
mov
js
add
(bad)
aas
dec
mov
add
jmp
ret
or
rcl
pop
dec
and
add
adc
fnsave
push
push
lds
push
repnz
adc
repz
test
scas
dec
push
push
dec
scas
mov
stc
jmp
cmp
dec
aad
jne
fild
mov
ins
outs
mov
enter
xchg
mov
repz
jno
lea
fadd
test
fidivr
imul
cmp
cli
or
mov
jecxz
stos
cmp
add
mov
xchg
mov
jmp
(bad)
jb
loopne
lahf
lods
outs
cs
xor
movs
xor
push
pop
dec
pop
test
adc
sub
stc
jle
rcl
mov
arpl
das
xor
xchg
jp
dec
inc
sbb
jp
mov
adc
adc
sbb
retf
add
pop
pop
jl
inc
fnsave
xchg
repnz
cmc
retf
stos
mov
imul
fstp
fmul
and
ins
adc
or
or
repz
ds
sbb
mov
ds
cmp
adc
aaa
mov
lods
imul
dec
popf
ins
or
sub
adc
xor
mov
sub
add
jbe
mov
cdq
imul
gs
popa
clc
and
jnp
das
jno
imul
in
jl
cwde
lods
aas
jg
pop
rcl
jge
int3
cmc
mov
and
out
mov
xor
cmp
test
xor
adc
inc
fs
arpl
movs
fxtract
leave
js
cwde
push
push
adc
lds
add
dec
mov
or
mov
popa
jmp
jne
pop
in
mov
push
gs
addr16
mov
cmps
sbb
ficomp
test
or
mov
inc
dec
cwde
int
cmp
or
fdiv
cmp
jmp
fsub
(bad)
cmp
icebp
or
xor
call
push
out
bound
jae
xchg
xchg
push
jge
inc
mov
repnz
and
call
call
hlt
adc
jge
fst
push
adc
sub
dec
cmps
lea
aas
add
push
fwait
mov
out
push
mov
jne
dec
xchg
mov
add
pop
inc
dec
sub
and
adc
mov
fidivr
cmp
lahf
aam
jecxz
mov
push
sub
inc
and
mov
jns
mov
out
fstp
add
mov
mov
mov
fsub
xchg
xchg
stc
pop
sti
mov
jb
cdq
adc
imul
xchg
xor
aad
xor
xchg
movs
cmp
mov
call
bound
in
mov
into
jb
dec
pop
lahf
jp
inc
xchg
in
jno
call
cmps
or
push
cwde
xchg
cli
jmp
xor
mov
push
icebp
inc
mov
dec
pop
pop
cdq
xchg
pop
lahf
inc
fbstp
ficomp
jbe
mov
or
adc
mov
inc
mov
mov
es
jl
xchg
mul
(bad)
mov
mov
(bad)
fsub
xor
lahf
arpl
movs
pop
mov
mov
(bad)
fld
out
outs
pop
in
pusha
pop
and
pop
imul
movs
and
sbb
xlat
mov
loop
cmp
outs
(bad)
lods
push
jbe
jecxz
mov
fsubr
and
mov
sar
xor
sub
btc
adc
aam
jge
movs
or
out
sbb
mov
mov
add
mov
hlt
xchg
stc
xchg
jmp
jmp
int3
(bad)
popf
pop
mov
mov
data16
xchg
clc
xchg
jno
ja
jo
(bad)
popf
loopne
push
vaddss
add
es
fwait
repz
imul
out
or
in
xor
cmp
mov
retf
lds
xchg
dec
cdq
adc
mov
jp
pusha
xchg
xor
sub
xor
inc
daa
jle
ss
arpl
pushf
int3
cmps
enter
xchg
adc
popf
add
jae
adc
outs
(bad)
push
mov
push
enter
inc
sbb
mov
add
mov
jecxz
in
shl
retf
pop
fldcw
jnp
mov
gs
mov
int
xlat
and
jmp
or
fistp
test
iret
popa
xchg
dec
or
clc
sub
dec
and
add
arpl
mov
int3
jmp
cmp
fs
sub
sub
in
test
movs
add
xchg
je
in
dec
inc
xor
ins
test
add
xchg
add
pop
mov
popa
xchg
mov
test
dec
movs
test
mov
push
ja
cmp
adc
sar
jmp
cmp
add
sub
xchg
outs
out
mov
gs
movs
jnp
xchg
ds
neg
mov
inc
rcr
jns
add
pop
shl
push
dec
sbb
dec
mov
and
and
sbb
in
adc
pop
dec
je
mov
xchg
xlat
dec
mov
out
inc
repz
add
inc
jb
popf
(bad)
mov
pop
(bad)
pop
out
mov
xchg
mov
cli
lds
ss
mov
ins
cmc
mov
adc
aam
(bad)
test
pusha
mov
push
stc
mov
sbb
je
jg
pusha
fimul
dec
cmps
aas
ficomp
adc
xor
rcr
cli
dec
inc
mov
je
adc
aas
aaa
sub
leave
mov
xchg
adc
popa
push
scas
cli
fist
cs
gs
nop
jle
push
pop
jp
mov
(bad)
nop
mov
popa
nop
ret
mov
(bad)
call
jo
or
sbb
(bad)
mov
outs
pop
sub
mov
dec
adc
inc
mov
jbe
ret
mov
push
out
les
popf
fwait
gs
cmp
out
aas
add
xchg
and
dec
xor
mov
stos
outs
sahf
sbb
les
icebp
and
mov
je
movs
cmc
push
pop
push
not
bound
or
push
add
ficom
and
test
stos
push
and
xor
jecxz
xor
cmp
cs
xor
fdiv
hlt
ins
pop
nop
pushf
bound
pop
xor
inc
inc
and
iret
mov
out
pushf
stos
push
xor
jmp
das
jb
push
shl
div
sbb
and
std
les
data16
les
addr16
in
cli
jb
mov
pop
cmps
dec
mov
arpl
mov
cmps
sbb
and
mov
loopne
pusha
pop
cdq
pop
mov
and
or
sub
dec
mov
sahf
ss
mov
cli
or
bound
xchg
mov
rcr
ins
pop
loopne
pop
push
psubq
inc
mov
add
sbb
sbb
or
mov
xchg
out
sbb
push
mov
stc
shr
repz
pop
(bad)
imul
in
adc
dec
sub
int3
pop
out
xchg
adc
push
push
xor
ja
sbb
or
and
jno
and
sbb
icebp
xor
mov
pushf
mov
mov
leave
jae
out
pop
fdivr
push
out
fsub
cmp
mov
jo
jge
sbb
(bad)
addr16
sahf
addr16
sub
xor
add
xor
inc
ins
retf
or
pop
adc
call
les
sub
mov
adc
or
cwde
not
inc
mov
sbb
in
mov
adc
pop
rcr
pop
mov
cwde
cmp
cmp
and
jmp
inc
push
push
bound
add
and
cdq
mov
in
fidiv
cmp
xchg
and
sti
xchg
xchg
pop
adc
adc
dec
mov
hlt
sahf
ror
test
cmp
arpl
stos
cmp
outs
jno
test
pop
mov
xor
mov
js
outs
jmp
ds
mov
mov
dec
mov
in
stos
sar
dec
leave
cmp
cli
aad
or
push
sbb
call
sbb
ficom
xchg
cmp
popf
adc
(bad)
scas
jp
out
fld
sbb
adc
ret
addr16
(bad)
outs
xlat
cmp
inc
mov
stc
(bad)
or
cmp
inc
sub
or
je
and
cmc
out
cmp
sub
xchg
dec
ss
div
fsubp
fstp
nop
inc
xor
inc
jo
ror
(bad)
mov
and
jmp
fistp
sub
xchg
call
and
cmps
(bad)
out
inc
jns
jmp
sub
push
and
adc
sub
daa
cmp
and
inc
cmp
fld
outs
push
int3
jnp
cmp
xchg
push
in
jmp
call
pusha
add
dec
sahf
adc
lea
xor
mov
es
push
popa
cs
sbb
pop
cdq
and
mov
gs
cld
or
and
int
icebp
outs
sbb
cmc
daa
sbb
ja
dec
mov
jecxz
stos
xor
or
rcl
adc
in
cmp
cmps
push
mov
loop
jno
out
(bad)
leave
and
jo
pop
sub
lock
mov
sti
fmul
dec
frstor
das
in
std
cli
popf
dec
aad
push
loope
dec
dec
mov
and
fcom
or
jbe
dec
add
xchg
xor
cmp
inc
and
(bad)
xor
aas
dec
jge
jmp
xlat
or
aam
sbb
loop
jbe
std
sub
fstp
call
fsub
scas
nop
retf
sub
cmps
add
retf
or
je
sahf
lds
and
nop
ror
push
sbb
pop
jmp
repz
and
mov
adc
add
pop
dec
outs
push
mov
xchg
gs
add
je
jmp
bound
retf
repz
xchg
aas
cld
out
sbb
in
mov
mov
pop
popa
fimul
aam
cmps
aam
push
cwde
retf
jg
cmp
stos
pop
lahf
(bad)
ins
call
shr
adc
mov
xchg
sub
sbb
push
fs
cli
dec
cld
push
xchg
pusha
push
mov
lods
test
aad
test
repz
mov
out
mov
adc
sbb
cmp
repz
mov
dec
(bad)
hlt
(bad)
dec
test
mov
sub
xor
adc
adc
iret
jg
fstp
and
pop
clc
int3
or
and
xchg
mov
(bad)
dec
out
(bad)
movs
ret
push
cmp
out
fsub
imul
adc
sub
cli
push
ficom
jb
sub
dec
pop
jge
jbe
mov
lods
test
in
lods
pop
xor
add
jo
pop
inc
(bad)
int
mov
xor
push
inc
xchg
out
and
dec
imul
push
xchg
aad
adc
enter
dec
and
sbb
lods
jns
scas
sbb
test
ss
out
cmp
push
sbb
data16
pop
mov
and
add
push
(bad)
imul
shr
stc
fisub
xor
out
loopne
pop
adc
xchg
lods
imul
fild
fiadd
inc
mov
iret
in
aaa
leave
cmp
cld
jb
out
hlt
mov
adc
xor
psrad
push
xlat
sub
pop
xor
mov
cmp
(bad)
add
movs
mov
add
cmp
xor
stos
dec
out
and
jo
rcr
shl
xor
popa
cmp
(bad)
retf
xor
fistp
jbe
js
cwde
cld
cmps
pop
jp
test
mov
in
loope
push
cmp
xlat
cld
imul
push
retf
pop
nop
xor
(bad)
(bad)
in
ret
(bad)
jp
mov
es
xchg
jmp
sub
retf
adc
xchg
mul
popa
lds
jb
shl
xchg
mov
scas
inc
imul
push
sbb
xor
push
dec
pop
push
jo
pop
inc
add
loope
jne
mov
mov
xchg
and
fmul
sahf
cmp
cmc
mov
push
dec
sbb
data16
mov
cmps
sub
repnz
pusha
jmp
pop
pushf
mov
aad
ja
or
and
sahf
pop
sbb
cmps
cwde
fisttp
movs
imul
fisubr
mov
push
test
push
jo
jns
out
sahf
pop
lock
push
fld
mov
mov
push
xchg
push
mov
mov
add
aam
pop
xor
pop
add
ins
rcl
(bad)
ds
jns
adc
out
test
or
sub
dec
mov
and
into
sub
mov
sbb
inc
scas
gs
scas
imul
test
icebp
jge
adc
ins
popa
lods
push
mov
sub
lahf
nop
or
ss
sti
xor
repz
repz
(bad)
sbb
mov
mov
icebp
xor
sbb
shl
xchg
mov
jmp
lock
gs
cmp
mov
and
jno
into
adc
sbb
dec
retf
pop
adc
imul
fnstcw
jno
cmps
push
mov
adc
nop
add
inc
bound
inc
nop
ss
sbb
jns
mov
loop
iret
jmp
in
loope
imul
mov
dec
fild
arpl
push
inc
dec
sub
sub
mov
(bad)
leave
ret
call
adc
jl
arpl
push
xchg
pop
jb
mov
sbb
lahf
sub
xchg
dec
and
in
mov
in
mov
pop
test
popf
xchg
add
mov
xor
rcl
out
mov
aaa
les
stos
mov
js
pusha
ja
jb
fs
outs
dec
jge
pop
test
fdiv
loope
push
adc
mov
in
call
loope
and
add
in
popf
pop
sub
push
je
lock
add
mov
mov
push
pop
cmc
jg
and
mov
jl
inc
jle
loopne
loopne
add
jl
mov
outs
cdq
pop
div
mov
loop
nop
sub
cmps
xor
add
cwde
and
js
ret
jbe
xor
imul
mov
cdq
mov
es
fsub
sti
mov
stos
out
lea
ins
jmp
dec
mov
push
and
in
cli
pusha
jo
push
scas
cwde
ins
pop
mov
push
lahf
add
sbb
xor
imul
call
lock
sub
fcomp
push
jmp
je
out
inc
(bad)
pavgb
inc
add
jbe
adc
mov
outs
xor
xchg
jle
adc
out
aaa
les
push
ss
pop
mov
cdq
call
sub
jb
cmp
scas
mov
dec
pop
stc
ins
dec
mov
ins
movs
cli
push
inc
repz
popa
cmc
pushf
ret
arpl
mov
test
shr
xchg
outs
cmc
adc
or
mov
xchg
fnstcw
xor
add
push
and
(bad)
dec
sub
js
test
fisub
mov
aas
int
ret
xor
loop
outs
pop
cmp
fsub
push
jmp
cdq
inc
push
out
add
add
cmp
test
cmp
outs
aad
pop
dec
sub
sub
jecxz
adc
add
pop
jecxz
inc
(bad)
mov
lahf
pop
jne
mov
jle
jmp
mov
mov
das
call
ror
and
test
int3
push
sub
xor
xor
mov
std
or
and
push
bound
retf
ds
es
and
or
loope
into
repnz
lods
inc
(bad)
sub
lock
jle
xchg
sub
jne
dec
scas
mov
mov
bound
mov
jne
(bad)
dec
das
sbb
push
xchg
sahf
mov
add
mov
daa
pop
jle
(bad)
scas
imul
fisttp
inc
mov
mov
jle
repz
in
sub
mov
or
mov
into
or
sub
test
mov
bound
adc
push
fnstsw
sbb
dec
mul
pop
(bad)
nop
add
mov
imul
sar
inc
lea
rcl
jnp
mov
mov
cwde
jg
push
pop
je
push
sahf
repnz
inc
mov
in
nop
push
jae
dec
aas
stc
xchg
cmps
out
mov
jp
inc
xor
addr16
sbb
xchg
fistp
rcr
div
rol
sbb
pop
jb
imul
mov
mov
int3
mov
and
and
ds
mov
or
call
or
fwait
(bad)
std
xchg
and
sub
pop
jmp
lahf
pop
sub
into
jnp
jmp
shr
pop
pop
fld
rcl
loopne
or
sbb
(bad)
fbld
mov
sar
jp
call
add
dec
fistp
in
or
repz
or
jmp
mov
loop
jae
addr16
cmps
inc
loopne
adc
mov
mov
sub
jne
sub
mov
sub
or
fldcw
xchg
std
imul
jno
jne
jge
cdq
jae
lahf
jg
sub
(bad)
stos
mov
test
sbb
imul
add
scas
das
gs
xchg
in
aam
mov
xlat
stos
cld
sub
(bad)
xchg
in
into
in
imul
jae
or
xor
fdivr
sbb
retf
push
jge
inc
xor
and
jmp
cmps
loop
jg
ds
mov
jne
or
or
jmp
pop
adc
fmul
in
test
mov
hlt
(bad)
and
addr16
xchg
pop
push
cwde
call
and
into
cmp
in
rcl
jae
pop
xor
bound
inc
aad
dec
inc
cmp
sub
add
jge
shl
das
test
lock
xchg
in
add
mov
(bad)
lds
push
sub
ucomiss
xchg
jge
sub
jno
cmps
cwde
(bad)
int
inc
loopne
adc
mov
add
addr16
call
mov
sbb
dec
das
lods
mov
jmp
or
(bad)
jb
ins
jno
call
repz
aam
and
dec
call
scas
xor
add
xor
xor
js
imul
mov
mov
je
xchg
cmps
cmp
sbb
dec
and
into
cmp
dec
test
ficom
outs
inc
repz
mov
lods
pop
pusha
add
(bad)
jp
add
jae
dec
jg
fcom
pushf
cdq
je
adc
xor
ds
or
xchg
minps
outs
es
mov
rol
dec
push
and
jmp
(bad)
jl
outs
mov
loop
bnd
mov
sbb
jae
sub
xchg
mov
pop
mov
cs
mov
mov
xchg
pop
sbb
push
jle
mov
mov
push
out
movs
in
(bad)
mov
dec
mov
popa
mov
jne
push
in
pushf
ffree
mov
sbb
xchg
test
mov
arpl
add
adc
je
jmp
pop
pop
mov
scas
arpl
cmps
sub
push
push
xchg
cmp
into
fistp
push
adc
cmp
iret
inc
repnz
dec
(bad)
xor
pop
xchg
xor
sbb
inc
lahf
xor
inc
bound
push
stos
xchg
pop
sbb
xor
adc
data16
outs
call
xor
cmp
mov
sti
scas
sub
mov
pop
ret
in
add
in
push
dec
xor
sub
call
push
sahf
movs
aad
push
into
js
or
daa
jmp
arpl
retf
mov
dec
in
ret
pop
push
pop
inc
push
push
std
jl
xchg
fstp
js
sbb
dec
pop
fcomp
fistp
mov
cs
mov
gs
mov
xor
jp
push
mov
mov
adc
cmp
sar
dec
and
(bad)
call
adc
enter
push
jbe
js
aam
pop
call
jge
outs
fsub
push
pop
adc
std
pop
inc
shl
xor
pop
int
xchg
fisub
jle
xor
xor
jno
lods
(bad)
clc
cmps
fs
jo
ja
pusha
dec
jbe
js
mov
sbb
out
jbe
mov
inc
es
mov
pusha
jns
iret
sbb
inc
test
mov
or
leave
call
aad
out
or
test
iret
cmp
jne
fstp
cmps
dec
mov
or
dec
gs
fbstp
push
adc
movs
mov
aas
add
jmp
lock
jno
inc
push
adc
aad
loope
mov
cmp
and
dec
enter
dec
push
add
and
cmp
xor
vmptrst
dec
fiadd
cmp
xchg
dec
jmp
jae
iret
outs
retf
add
rcr
(bad)
adc
sub
adc
fnsave
cmp
fisub
sahf
pop
aam
sbb
addr16
xor
lock
mov
mov
lahf
cmps
fistp
(bad)
mov
scas
jl
cmp
push
or
nop
mov
cld
xor
or
mov
hlt
inc
xchg
jp
movs
push
pop
cwde
add
popf
in
xchg
mov
pusha
hlt
xlat
cdq
test
mov
inc
mov
xor
sar
jae
scas
ins
xchg
cli
dec
sar
push
push
imul
push
or
aas
adc
sbb
scas
inc
sti
mov
xchg
push
pop
or
xchg
jae
int
rol
repnz
out
retf
xchg
and
jno
push
xchg
xchg
push
loope
je
mov
dec
or
mov
push
fsubr
xlat
iret
sbb
push
xor
arpl
add
lea
repz
rcl
out
ds
jecxz
add
inc
enter
shr
(bad)
jge
push
add
test
sbb
push
ror
aam
inc
call
jp
xor
inc
sbb
aaa
and
cld
repnz
sub
mov
mov
(bad)
addr16
dec
out
push
pop
sahf
ins
fincstp
fidivr
mov
lods
dec
loopne
xchg
push
arpl
je
scas
cld
push
xor
pushf
and
test
sub
and
and
jp
mov
or
ins
sahf
mov
pusha
cli
call
test
movs
ins
sub
cwde
cmp
mov
imul
xchg
dec
imul
cmps
repz
test
not
adc
sub
xchg
adc
cmc
sbb
repz
xchg
cmp
sahf
stos
jno
jle
adc
lea
mov
jge
or
sahf
out
mov
jp
in
add
xchg
movs
xchg
xchg
fwait
push
ror
out
jl
hlt
ins
retf
pushf
ja
gs
xchg
jae
mov
js
add
outs
add
mov
pop
(bad)
jns
cli
aas
cmps
fisttp
repnz
and
aam
iret
mov
sbb
test
in
jae
sub
sbb
push
test
xor
mov
xchg
(bad)
cmps
mov
xchg
pop
cmp
mov
fcom
adc
pop
out
in
js
out
mov
mov
pop
pop
xchg
test
pop
mov
jae
xor
outs
daa
mov
sub
adc
mov
stos
push
cli
rcl
mov
addr16
lods
xor
les
(bad)
into
sub
push
daa
mov
popf
pop
xchg
lods
bound
cmp
dec
test
movs
mov
loopne
leave
iret
sub
daa
nop
in
inc
pop
cwde
xchg
and
out
jecxz
and
in
adc
cs
ret
dec
xor
push
jne
adc
and
lahf
xchg
mov
test
push
in
retf
clc
jno
dec
mov
cwde
push
int
mov
retf
scas
jo
daa
jl
adc
jg
gs
shr
or
(bad)
fwait
xchg
pop
push
mov
dec
(bad)
repnz
xchg
add
sub
das
push
jns
pop
movs
retf
and
sbb
imul
mov
mov
dec
inc
in
pop
aam
ficomp
mov
lds
mov
mov
or
sbb
jecxz
cmp
or
jns
push
imul
cdq
sub
cmps
ins
test
cld
jg
jle
movs
push
ds
stos
icebp
mov
outs
xchg
mov
xchg
dec
rcl
shl
push
jecxz
fst
mov
das
ret
mov
fadd
stc
jge
pop
jbe
std
pop
cmp
jno
mov
rcl
mov
(bad)
cld
or
dec
and
retf
ror
cmc
inc
dec
in
mov
movs
and
and
adc
adc
arpl
adc
aam
dec
add
mov
jge
inc
neg
inc
dec
push
push
shl
jg
dec
int
nop
movs
sub
in
mov
sbb
inc
fist
aaa
mov
and
or
aam
mov
sbb
mov
pop
xchg
je
push
outs
sti
dec
in
sbb
int3
ss
repz
cs
icebp
ja
test
cmps
jne
xchg
add
adc
add
xchg
fild
test
sbb
iret
xchg
test
je
push
jno
leave
fadd
adc
push
mov
clc
cmps
and
(bad)
sbb
shr
or
jg
rol
test
test
or
mov
lods
push
popa
mov
mov
push
dec
cmp
adc
and
test
inc
lahf
lods
imul
sbb
jg
loope
nop
movs
mov
neg
dec
sbb
lods
adc
pop
push
push
pop
(bad)
shl
pusha
mov
repnz
xor
jo
and
test
call
outs
sahf
xlat
cmp
das
mov
jnp
pop
aaa
aaa
push
push
(bad)
pop
loopne
mov
scas
push
pushf
(bad)
mov
pop
dec
jns
iret
test
pop
and
mov
ins
bound
mov
das
std
xchg
retf
dec
pop
lea
adc
icebp
pop
dec
stos
cwde
mov
lds
bound
jl
lahf
sti
dec
push
pop
cmp
ins
les
adc
into
xor
or
mov
adc
aam
adc
cmc
sub
dec
rcr
mov
dec
movs
xchg
jmp
push
sbb
dec
mov
push
retf
outs
adc
lock
xchg
push
and
jns
imul
jns
fisttp
rcr
mov
ins
adc
sahf
ds
adc
mov
popf
inc
pop
sti
sbb
add
stos
cmp
cmp
sahf
ret
fdecstp
xchg
sub
loopne
leave
out
jl
repz
add
adc
popa
adc
fistp
loope
outs
sbb
sub
(bad)
hlt
cmps
jns
mov
jmp
or
rcr
xchg
stos
loopne
mov
scas
xlat
cmc
dec
xor
div
fmul
pop
lea
xchg
scas
es
stc
loopne
jge
push
js
hlt
sub
fisttp
std
adc
enter
sbb
jno
aas
retf
pop
or
mov
inc
and
(bad)
push
ins
push
data16
add
push
sti
pushf
lea
mov
adc
(bad)
addr16
lods
ret
cmp
adc
sbb
repz
or
push
xlat
pop
or
pop
pop
jecxz
sbb
or
xchg
add
jns
fdivr
add
ds
sbb
es
add
push
iret
ret
cli
cwde
ins
jmp
pusha
pop
sar
xor
into
test
std
(bad)
pop
ss
xchg
sbb
icebp
push
xor
clc
popa
and
lods
sahf
test
icebp
data16
sbb
imul
hlt
test
add
adc
retf
jmp
xor
and
shl
mov
xchg
jge
fisttp
mov
dec
lods
jnp
push
pop
frstor
mov
jo
rol
push
mov
fcmovb
dec
mov
cmp
loopne
add
add
addr16
push
cli
fwait
iret
mov
daa
iret
inc
retf
arpl
cmp
out
out
add
in
(bad)
or
(bad)
adc
sbb
mov
stc
aas
les
daa
mov
mov
push
add
fs
mov
ins
in
and
std
add
and
ins
cmp
rcr
in
jmp
push
cmp
jo
add
sub
clc
in
push
cli
dec
cmp
mov
push
and
push
dec
or
mov
fld
pop
test
or
xlat
rol
cmps
inc
in
sbb
int
push
or
jne
xchg
es
adc
jb
mov
jb
shl
scas
pop
add
clc
dec
and
or
xchg
lods
jp
in
cs
iret
scas
pop
cld
and
mov
(bad)
push
cli
out
(bad)
push
mul
sar
int
shr
mov
gs
mov
add
aaa
(bad)
imul
add
in
mov
cli
cmp
popf
xchg
push
inc
aam
in
je
jle
aas
jmp
ficomp
push
cmp
mov
in
dec
dec
int
add
das
out
add
dec
mov
dec
sbb
adc
out
adc
fidivr
xlat
mov
add
dec
add
or
int3
sbb
stos
cmp
lods
call
cmps
mov
and
mov
add
push
jb
xchg
cmc
outs
jecxz
pop
inc
inc
ss
jecxz
sub
push
add
cwde
or
cmp
addr16
mov
mov
mov
pop
fist
aaa
jecxz
lods
push
loope
cmp
xlat
adc
aaa
cmp
je
mov
scas
cmp
jns
loopne
xchg
inc
sti
dec
lods
mov
gs
jmp
test
xchg
sub
imul
movs
(bad)
jecxz
xchg
pop
lds
jmp
pusha
retf
cdq
lds
sub
push
cmp
inc
sbb
or
aad
aaa
xchg
adc
es
adc
jb
aad
sub
adc
shl
mov
jecxz
dec
rol
fidivr
cli
jb
int
and
push
dec
test
add
pop
push
jmp
loopne
call
sbb
push
jo
push
sub
ds
xchg
js
inc
iret
sbb
xchg
pop
sbb
cmp
mov
sub
adc
jmp
adc
inc
xchg
mov
push
cmp
xchg
icebp
sbb
xor
jle
mov
cmp
fdivr
and
shl
ja
sbb
xchg
or
movs
rcl
scas
jl
leave
jecxz
and
test
or
int
and
ror
xor
add
xchg
cdq
xor
sub
cmp
mov
adc
jb
xchg
pusha
retf
gs
outs
rol
es
repnz
or
or
and
fisttp
jmp
push
mov
mov
ror
in
ins
mov
fucom
inc
mov
jl
in
mov
xchg
or
mov
push
imul
mov
dec
mov
xchg
in
cs
rol
sbb
cmps
pushf
(bad)
jmp
mov
addr16
jo
cmc
and
not
loopne
mov
stos
test
fadd
jbe
dec
xor
fwait
stos
sub
xor
(bad)
push
cs
shl
bound
adc
xchg
sub
aam
adc
test
mov
test
clc
test
fld
push
pushf
imul
lea
dec
cmc
cmps
adc
push
jbe
loope
mov
inc
imul
iret
mov
fild
jg
test
mov
mov
dec
and
add
cli
jecxz
fst
xor
sub
fwait
sbb
xor
lods
xchg
repz
inc
das
sahf
imul
sub
add
cli
icebp
aad
push
jns
pop
cmp
inc
enter
cmp
ret
call
test
aas
sub
xchg
popf
icebp
adc
aam
xchg
jns
xchg
or
mov
bound
xchg
xor
test
jmp
sar
cld
mov
and
es
fs
jge
adc
xor
cmp
repz
xchg
mov
lods
ins
js
loopne
cdq
mov
(bad)
add
(bad)
mov
out
sti
fwait
mov
jmp
jns
retf
pop
jnp
leave
cdq
jmpw
add
enter
xor
(bad)
sub
out
mov
and
sti
xor
in
mov
repz
cs
xor
mov
in
or
daa
test
dec
xchg
mov
xchg
rcl
adc
xor
or
mov
push
ret
fldcw
jno
in
imul
lahf
or
(bad)
or
xchg
xchg
jl
inc
das
dec
lock
mov
pop
adc
xor
fiadd
push
and
enter
out
cs
mov
and
xor
add
ins
or
sti
jmp
adc
nop
add
jmp
mov
mov
push
cdq
sbb
adc
adc
test
fsubp
inc
jmp
repz
and
add
add
or
aam
popa
cmp
sub
xlat
out
shr
mov
jmp
mov
adc
xor
dec
xor
and
sub
jns
lods
push
arpl
push
jnp
arpl
out
xor
iret
les
sub
inc
cmc
adc
sbb
(bad)
test
push
push
aaa
jmp
xor
pop
dec
dec
(bad)
dec
push
imul
outs
pop
mov
or
ds
lahf
inc
mov
loope
aaa
push
lea
cmp
push
xchg
sbb
mov
push
pop
test
sub
adc
gs
jmp
repz
nop
mov
into
cmp
pop
mov
xchg
sbb
addr16
int3
cmp
or
sbb
and
jne
jmp
adc
dec
pop
xchg
mov
(bad)
push
repnz
int3
repnz
aas
rsqrtps
push
mov
sti
(bad)
sbb
inc
lods
ins
jp
lea
ret
mov
(bad)
(bad)
xor
cmp
test
cli
in
cld
sar
cmp
aam
sar
jle
cmp
dec
adc
mov
pop
inc
mov
les
enter
or
push
sbb
or
jno
inc
jo
retf
push
inc
xor
inc
adc
int
jns
add
pop
dec
push
leave
mov
push
arpl
scas
cmps
data16
imul
mov
stc
test
in
es
inc
scas
xlat
or
aas
cs
mov
fcomp
inc
iret
and
loope
lds
shl
jnp
push
iret
xor
mov
mov
xor
mov
sub
sub
mov
pop
pop
sbb
dec
lock
cmp
ror
ss
cmp
mov
mov
mov
es
cmp
or
bound
sar
add
or
dec
push
push
pop
aad
sub
xor
call
sub
jne
xchg
in
pop
ins
xchg
pop
add
add
mov
jmp
jns
imul
dec
adc
push
(bad)
cmp
je
out
or
dec
xchg
paddsb
mov
pop
retf
fiadd
retf
sub
ret
arpl
lock
imul
int3
sti
dec
jo
les
lds
sar
je
daa
shl
inc
or
dec
or
sub
cmp
test
call
outs
movs
icebp
push
jne
or
ret
int
in
fs
add
and
scas
add
out
out
loop
es
ja
inc
cmp
(bad)
and
call
lods
mov
fcomp
and
or
jmp
mov
and
sti
push
push
(bad)
mov
mov
jo
adc
adc
cld
loopne
sar
lods
add
add
shr
lea
test
sbb
les
sub
adc
mov
add
jno
scas
or
cwde
pop
imul
mov
cmc
cmp
fld
aaa
ds
fld
and
je
fist
stos
stc
mov
cli
sbb
(bad)
mov
pop
mov
mov
adc
jns
je
mov
adc
shl
cmp
sub
and
nop
popf
aaa
pop
xor
or
pop
lock
pop
push
jle
mov
(bad)
cdq
out
sub
shl
in
jno
into
lods
jns
jmp
mov
pop
outs
loope
or
xchg
cdq
out
pop
(bad)
xlat
inc
or
ss
sti
nop
push
push
sti
pop
and
ins
and
mov
jno
outs
adc
add
shr
mul
xchg
mov
mov
out
not
push
sti
and
push
out
adc
and
sbb
fwait
mov
push
ret
pop
xor
cmp
movs
mov
adc
mov
sti
or
mov
int3
imul
mov
xor
or
mov
sub
cld
inc
sub
adc
popf
mov
js
imul
mov
mov
mov
ins
int3
cli
mov
in
and
inc
jo
rcl
mov
cmps
ins
into
xor
aad
pop
mov
xchg
lods
sbb
das
sub
jle
and
adc
bnd
sahf
cmp
das
std
in
sar
dec
icebp
jp
shr
jne
imul
push
movs
adc
mov
pop
daa
mov
and
pusha
xchg
mov
dec
mov
add
dec
inc
cmp
repz
xor
les
jae
or
sbb
clc
jo
fist
mov
bound
mov
outs
push
inc
adc
fidiv
stos
or
cmps
dec
jnp
push
or
add
add
stos
int3
xchg
bnd
and
pop
stos
loope
push
mov
daa
xor
call
call
(bad)
(bad)
xor
(bad)
cwde
mov
inc
or
jae
or
add
stos
push
fisttp
mov
pop
add
mov
pushf
popf
adc
add
add
mov
or
lea
dec
cmps
xchg
shr
xchg
lds
push
adc
test
cmp
add
jns
inc
nop
and
sbb
pushf
jmp
mov
repz
test
sbb
mov
cmp
cmp
les
sub
sbb
aam
mov
(bad)
jnp
dec
lea
int3
fcom
cmp
shl
xchg
cmp
push
(bad)
nop
mov
mov
jne
and
xchg
sub
xchg
adc
mov
je
xchg
(bad)
sti
mov
jl
jae
xor
push
dec
out
adc
and
pop
and
inc
dec
shl
dec
jbe
mov
rol
inc
adc
pop
mov
fsub
dec
pusha
(bad)
adc
fmul
sub
mov
sub
hlt
stc
call
xor
loopne
stos
cwde
movs
jo
hlt
pushf
add
aas
or
lock
and
daa
popf
cmp
pushf
adc
(bad)
es
inc
jl
cwde
mov
jb
popa
cld
jge
mov
fld
stos
cmps
clc
lahf
cld
jmp
add
pop
call
sub
cld
je
shl
or
sub
mov
(bad)
retf
mov
cs
div
and
out
data16
leave
mov
in
(bad)
sbb
inc
push
cli
pop
jle
and
xor
scas
pushf
int3
or
and
in
pushf
jmp
std
cmp
mov
cmps
addr16
sbb
movs
lods
jg
sti
fsubr
ds
mov
lahf
sbb
mov
inc
or
outs
retf
jmp
mov
cmp
or
mov
xor
inc
aad
inc
xor
pop
rcl
out
add
ror
sahf
in
fmul
(bad)
nop
jb
pop
cmc
sbb
lods
jge
mov
jg
sub
gs
aam
jmp
jl
stc
fcmovne
call
jl
push
sub
cmp
mov
jp
sbb
cwde
cmp
fild
fs
mov
fs
ret
push
lahf
mov
inc
stc
jmp
pop
sbb
dec
sbb
hlt
mov
jae
mov
pop
dec
xlat
jecxz
popa
jg
jae
nop
movs
shl
xor
std
dec
stc
lds
scas
lds
push
dec
sbb
mov
and
and
lock
sbb
imul
cld
jl
add
fisub
outs
push
sub
repz
int
push
retf
pop
xchg
mov
jno
jg
fistp
repz
rcr
cmps
and
inc
dec
cmps
xor
icebp
test
scas
pop
jb
jp
mov
dec
inc
daa
add
outs
mov
inc
ret
adc
stos
inc
cmps
mov
dec
dec
jo
arpl
pop
test
retf
(bad)
dec
jp
mov
inc
dec
cmove
aaa
movs
adc
aad
imul
xchg
push
nop
fwait
xlat
sub
push
in
cmp
xor
jle
or
bound
inc
cdq
addr16
lea
(bad)
enter
sub
xor
jno
cpuid
sbb
dec
or
sbb
out
retf
aas
adc
push
ret
ja
jae
js
pop
push
mov
cmps
sbb
xor
ja
fidiv
mov
xchg
adc
xchg
adc
out
jg
dec
mov
cmp
pop
push
sub
stos
and
ror
dec
fidiv
jmp
push
jmp
je
push
dec
enter
cdq
and
and
cmp
outs
cdq
aaa
stos
jp
nop
lock
stos
jo
adc
fdiv
xchg
arpl
int3
add
sub
and
mov
call
outs
jmp
push
ret
mov
test
cs
sub
dec
push
add
stos
mov
mov
aam
jle
cmc
inc
fisttp
mov
mov
rol
ja
mov
pop
adc
icebp
inc
inc
iret
sbb
add
push
loope
mov
icebp
push
mov
pop
cmp
mov
mov
jmp
shl
adc
(bad)
sti
aad
mov
dec
xor
lds
and
mov
adc
aaa
ss
jns
sahf
imul
xlat
ins
add
pop
das
mov
cmps
ins
adc
xor
xchg
fidiv
hlt
aad
xor
mov
push
aaa
sbb
call
mov
mov
inc
xor
pop
dec
sbb
cmp
sbb
stos
or
ror
adc
dec
push
adc
cli
idiv
jl
push
xor
fwait
sbb
hlt
fs
push
ins
in
fidivr
out
sbb
jb
fmul
(bad)
push
std
push
add
mov
in
or
into
pusha
or
stc
sub
in
nop
movs
pop
pop
pop
inc
clc
jmp
push
pop
xchg
jno
push
or
sub
mov
xor
addr16
xchg
inc
(bad)
movs
call
cmp
imul
popf
ins
dec
cdq
adc
sbb
call
mov
cmc
jmp
mov
rol
xchg
shr
mov
in
sbb
neg
add
xchg
add
xor
xor
int
fcmovnu
xchg
test
or
aam
scas
jae
sahf
mov
arpl
sbb
jb
xchg
stc
cmps
or
stc
push
fcom
mov
cwde
std
mov
aad
les
xor
jno
idiv
std
mov
inc
adc
es
popf
inc
pop
mov
adc
mov
add
pop
jle
xor
outs
mov
call
cmp
fcmovnu
jno
adc
adc
cmp
or
(bad)
(bad)
push
div
lock
ins
mov
mov
sbb
mov
mov
in
sbb
cmp
in
xchg
ret
adc
xchg
int3
inc
rcr
js
loope
in
dec
push
pop
lock
mov
mov
fwait
test
test
xor
or
idiv
push
pop
fwait
test
pop
mov
sahf
pop
fstp
enter
jmp
repnz
mov
jb
ficomp
jo
cmp
mov
out
aam
aam
jns
sbb
push
push
jno
pop
xor
jge
stos
in
xchg
in
push
mov
sbb
sub
mov
mov
lahf
call
push
jo
out
cmp
mov
push
sub
ja
mov
xchg
test
div
lea
movups
dec
xchg
inc
movs
test
mov
xchg
xchg
int
lock
cmp
jo
rol
pop
je
movs
push
outs
js
pop
(bad)
pop
ss
(bad)
je
call
icebp
mov
jl
and
mov
(bad)
mov
dec
cs
xchg
push
rcr
rol
sar
pop
add
cli
and
or
out
dec
pop
or
loopne
in
dec
mul
int3
mov
pop
xor
scas
push
push
push
in
push
xchg
push
int3
push
mov
pop
jno
adc
stos
shl
push
jno
clc
dec
fwait
std
cdq
dec
and
fst
add
and
or
icebp
dec
loop
jmp
outs
pop
leave
adc
mov
call
(bad)
sbb
lea
cmp
div
ins
ret
mov
xchg
inc
sbb
test
cmps
fs
sbb
mov
sub
(bad)
adc
arpl
xchg
cmp
lahf
daa
cs
xchg
adc
clc
cld
xor
retf
outs
xchg
xchg
inc
cmp
retf
addr16
sbb
jle
sbb
add
push
std
stos
pop
scas
dec
jne
call
fsub
xchg
neg
cmp
idiv
mov
mov
xchg
lea
cmp
sbb
cmp
fs
adc
push
jmp
fidivr
call
repnz
je
jl
das
mov
nop
xchg
(bad)
sub
pop
pop
xchg
inc
movs
cmp
idiv
inc
sbb
retf
pop
push
or
dec
stc
add
pop
ins
jns
retf
add
aaa
jl
adc
pop
sub
lock
idiv
jbe
cmp
and
or
add
push
add
outs
adc
leave
cmp
cmps
jo
push
inc
sub
adc
(bad)
jle
into
sub
cmp
push
cmp
xor
mov
gs
mov
adc
sub
mov
adc
test
sub
leave
adc
xor
aad
and
jmp
ins
xor
xchg
or
dec
lock
shl
sbb
scas
adc
dec
lods
jle
adc
imul
cmp
into
xor
hlt
push
clc
jmp
(bad)
adc
fwait
pop
add
jp
lahf
mov
or
adc
mov
out
jo
sahf
ins
jl
cmc
push
adc
push
cmp
ja
lods
adc
cdq
xchg
or
popa
stos
xor
xlat
sbb
sub
je
fiadd
sub
xchg
pop
les
sti
adc
lods
jp
pop
dec
fldl2t
inc
cmp
or
sbb
leave
pop
mov
cdq
mov
das
jecxz
in
stos
or
sbb
inc
std
adc
arpl
ds
pop
push
cli
cwde
lds
xchg
mov
int3
pop
jb
loop
mov
and
mov
jb
jne
into
xor
popa
stos
scas
shr
aam
jne
cmp
gs
repnz
inc
int3
pop
repz
mov
cmp
adc
loop
mov
int3
mov
out
in
ret
not
das
retf
lahf
sub
repz
adc
pop
jle
adc
hlt
mov
adc
iret
mov
add
or
dec
adc
mov
fcmovnb
test
sbb
jmp
pop
inc
dec
jb
pop
movs
jge
inc
out
xor
iret
test
idiv
mov
adc
inc
mov
pop
push
fnstenv
push
xor
fs
aas
in
imul
stc
addr16
jmp
mov
sub
jecxz
xlat
push
aad
mov
ficom
leave
push
adc
sbb
fs
inc
jecxz
xlat
xor
fmul
sbb
cwde
pop
out
push
mov
imul
cmp
in
ror
mov
outs
xchg
pop
es
xor
jmp
adc
das
aaa
rcr
mov
xchg
jmp
pop
mov
inc
int3
test
ss
and
add
xchg
dec
and
sahf
out
sub
cmp
sub
ret
pop
push
mov
int
cmp
inc
adc
xor
xchg
push
pop
js
cdq
test
or
add
retf
mov
lds
pop
lock
out
xchg
test
mov
push
jne
pop
ret
and
popa
mov
add
cld
gs
minps
mov
add
imul
cmc
mov
push
inc
adc
sub
outs
(bad)
test
mov
std
and
cmp
ins
test
scas
xchg
or
xor
cmps
and
ror
and
mov
js
jle
fcmovbe
pop
in
or
fsubr
loop
cmps
mov
adc
jo
or
rcr
out
xor
adc
out
adc
test
popf
ins
jg
mov
call
mov
cmp
push
sahf
lock
xor
movs
xchg
(bad)
imul
cmp
pop
mov
ins
shr
inc
cmp
jne
pusha
mov
repz
dec
lods
cmps
cmc
test
repnz
ja
(bad)
adc
push
call
fwait
or
xchg
xchg
jmp
mov
in
mov
bound
add
push
dec
es
clc
aad
aam
inc
adc
sbb
inc
xchg
outs
push
(bad)
ret
mov
xlat
popf
jbe
inc
test
ds
int3
dec
xchg
sahf
cld
js
mov
lods
inc
loop
xchg
sbb
outs
pop
hlt
call
sbb
popa
out
icebp
or
cld
repz
xor
enter
xor
mov
cmp
and
ins
add
std
xchg
and
popa
add
jp
lods
std
inc
sub
mov
sub
and
adc
hlt
shufps
lods
jmp
cmp
dec
push
call
or
rol
scas
scas
pusha
push
sub
or
call
xchg
sahf
sub
ins
push
sub
hlt
scas
dec
push
stos
jge
inc
pop
xchg
cmp
jo
jg
repz
ret
out
mov
sub
aad
cmc
push
mov
mov
cmp
jo
scas
inc
push
out
jecxz
out
xlat
out
fmul
jle
int
movs
dec
rcl
test
xchg
adc
enter
mov
ins
jbe
and
out
std
lods
(bad)
adc
xor
lahf
pop
xchg
cli
in
in
ja
js
idiv
jnp
xchg
and
push
aaa
mov
call
aaa
jge
scas
je
fsubr
pop
mov
mov
xor
adc
add
scas
je
cmc
sub
mov
cmp
cli
leave
fsubr
fild
fidiv
ret
iret
sbb
push
stos
and
push
(bad)
retf
push
sub
ret
xchg
je
lea
and
or
sub
test
or
jge
leave
outs
inc
stc
mov
mov
gs
adc
xor
imul
push
lods
iret
das
mov
cmp
fisubr
dec
cmps
(bad)
cmp
push
dec
and
es
fst
jmp
cmp
je
jl
movzx
mov
repz
cld
or
loop
and
mov
cmc
sub
hlt
dec
sbb
push
push
jecxz
cdq
loop
mov
and
sbb
js
mov
in
mov
or
sub
xor
lds
aas
into
cmps
jl
jbe
pop
pop
mov
jb
adc
jne
xor
les
iret
sbb
ror
add
xor
fwait
out
test
push
(bad)
mov
test
ds
jb
aam
push
bound
sar
or
ds
sti
mov
stc
test
inc
pop
int3
and
das
cmp
jne
test
cmp
xor
jno
dec
ja
sub
pop
dec
pop
xchg
mov
add
push
ret
add
mov
xchg
dec
aam
mov
lods
xor
lahf
mov
pop
adc
movs
or
not
movs
inc
bound
mov
jle
dec
jo
or
pop
call
in
out
retf
and
cmp
push
popf
mov
imul
call
rol
pop
add
pop
adc
test
dec
sbb
shl
cmps
arpl
dec
lods
ins
(bad)
inc
fsubr
pop
xor
add
loop
fcomp
mov
and
sub
sbb
inc
mov
into
mov
jmp
jge
jne
mov
mov
mov
scas
sub
push
inc
mov
out
dec
dec
and
jmp
in
cmps
inc
shl
xor
xor
int3
sub
push
or
rcl
sub
cmp
jb
pop
(bad)
fldenv
dec
jbe
and
cmp
daa
or
or
push
add
push
push
dec
inc
sbb
dec
fild
jecxz
cdq
pop
lds
pop
mov
jle
jmp
loope
pop
cmps
xchg
and
mov
jne
sbb
and
sub
cs
mov
jmp
dec
or
xchg
fmul
dec
pop
jno
test
pop
mov
cmc
sub
stos
cmp
xor
jns
jo
and
adc
shl
mov
add
stos
int3
imul
leave
sahf
aas
cmp
lahf
push
push
aam
jl
neg
mov
dec
movs
sub
loope
fild
call
sub
or
add
sub
enter
pushf
es
mov
xchg
add
scas
pop
or
push
cmp
dec
jle
es
jmp
js
sub
xchg
mov
push
xlat
ret
ins
pop
pop
push
mov
(bad)
push
cmp
(bad)
push
mov
cmp
jge
popa
enter
mov
es
movs
pop
out
cmp
jnp
adc
ins
xchg
cdq
pop
imul
sbb
xchg
sub
adc
or
aam
nop
jg
push
mov
adc
lock
or
adc
mov
mov
or
sub
lahf
test
cmp
mov
aas
xchg
mov
inc
xor
xchg
xor
in
mov
jle
neg
loope
iret
mov
clc
sbb
cwde
xor
cmp
aas
sahf
mov
clc
jnp
lea
das
icebp
sbb
arpl
ja
pop
retf
dec
shl
aad
sub
dec
inc
shl
mov
sbb
mov
sub
movs
and
inc
jb
(bad)
sbb
and
into
aad
jge
mov
mov
stos
pop
retf
stc
jmp
jne
push
fsubr
(bad)
pop
adc
mov
dec
xlat
(bad)
lea
pop
shl
movs
shr
aad
push
fwait
dec
scas
lods
lahf
(bad)
sub
(bad)
push
cmp
dec
and
xchg
adc
or
lods
and
(bad)
jmp
xchg
fidiv
pusha
jns
push
daa
dec
dec
push
idiv
and
inc
sbb
lock
mov
xchg
iret
scas
mov
mov
lods
popw
dec
scas
mov
push
jns
in
test
cdq
loope
dec
aaa
xor
fs
into
dec
mov
je
lods
dec
xor
lods
pop
xchg
xchg
cmp
mov
pop
dec
loope
sar
inc
sbb
mov
iret
not
sahf
mov
dec
in
and
mov
or
sub
bound
cmc
cmp
mov
movs
(bad)
call
and
sub
(bad)
sub
outs
retf
outs
(bad)
lods
inc
in
xchg
shl
lock
jge
scas
push
xchg
sub
add
fst
or
mov
cld
push
ds
adc
inc
ja
mov
mov
lea
adc
add
adc
mov
rol
std
mov
or
stc
mov
in
and
and
jle
mov
shr
mov
mov
dec
adc
in
xchg
push
cmp
and
jl
jbe
mov
lahf
rol
ja
push
test
sub
in
mov
pop
adc
mov
sysenter
aad
aaa
rcl
sbb
in
push
imul
xchg
and
in
push
xchg
jbe
sbb
pop
push
loop
inc
mov
rol
xor
sub
mov
mov
adc
out
test
cmp
mov
add
inc
adc
aas
mov
mov
cdq
clc
jbe
mov
jp
(bad)
mov
(bad)
ss
or
inc
rcr
mov
call
movs
push
loop
arpl
stc
and
ja
fs
jne
lea
(bad)
aaa
inc
xor
inc
jge
scas
fs
sbb
sub
xchg
xchg
dec
add
nop
std
pop
sti
sbb
sahf
cmc
aad
cmp
inc
cmp
repz
out
inc
mov
fmul
jge
outs
or
inc
js
loope
jns
pop
loopne
test
(bad)
mov
ss
cmp
scas
xor
mov
mov
cmp
or
add
jo
dec
pop
icebp
push
sub
jle
push
out
pop
inc
daa
fbld
mov
jmp
ss
xchg
adc
and
(bad)
aas
ins
ins
outs
jo
pushf
outs
mov
rcr
jne
jmp
dec
repnz
xchg
sub
bound
mov
dec
or
adc
jns
mov
pop
movs
mov
mov
add
out
lods
fimul
in
call
shl
inc
xchg
xchg
fst
jnp
les
xor
push
jbe
(bad)
into
adc
push
or
push
jge
dec
pop
add
jmp
cmp
jp
scas
sub
pusha
add
mov
jp
out
cmp
js
cwde
in
adc
test
xchg
(bad)
and
cmp
xchg
add
mov
(bad)
or
pop
cdq
stos
cmp
shr
and
mov
dec
inc
popa
dec
(bad)
cs
jecxz
fnsave
jo
inc
daa
mov
es
and
test
fwait
js
xchg
mov
pop
push
pop
xchg
or
fisub
mov
cmp
and
aad
xor
mov
stos
push
into
mov
pop
aas
push
mov
jns
sub
xor
lds
and
movs
movs
dec
test
fdiv
(bad)
adc
in
es
shl
fsub
xchg
shr
cdq
dec
cdq
sub
adc
or
adc
lock
sbb
pusha
ins
addr16
xor
(bad)
mov
sub
jae
xchg
imul
ret
shl
inc
lods
bound
fwait
mov
jnp
and
xchg
inc
in
div
(bad)
and
sahf
and
inc
pop
mov
cld
lock
ret
into
or
or
into
addr16
and
jg
push
pop
cmp
pop
call
lea
mul
dec
mov
stos
pop
jns
test
scas
sub
adc
mov
call
icebp
adc
xlat
popf
test
retf
mov
stc
loope
arpl
sahf
mov
mul
xchg
and
call
out
ds
aaa
pop
mov
xchg
pusha
lds
inc
leave
cmc
leave
push
pop
mov
pop
sti
scas
daa
push
repnz
pop
lea
loopne
fimul
mov
push
(bad)
adc
cmps
push
cmp
in
push
mov
retf
sbb
test
ja
jo
inc
idiv
jmp
test
adc
push
mov
aam
xchg
push
outs
pop
add
cmp
mov
movs
sti
sbb
sub
ins
dec
scas
dec
jmp
push
imul
outs
mov
cmp
(bad)
push
cmp
cmp
and
sub
mov
imul
fld
je
mov
mov
push
aaa
adc
pop
adc
xchg
inc
or
mov
int
add
cli
jb
xor
cdq
lds
aas
les
loop
jmp
push
out
cmp
js
add
push
sub
sub
pop
movs
adc
and
push
jne
enter
cmp
icebp
dec
xor
mov
push
fs
addr16
ror
mul
loope
out
jle
adc
cmp
scas
mov
rcr
cwde
out
inc
lock
sub
std
or
sbb
(bad)
in
adc
jmp
test
push
gs
xor
bswap
std
jne
dec
and
or
shl
pop
lods
mov
mov
fmul
aaa
(bad)
xchg
add
in
sub
jae
jl
out
sbb
jecxz
out
jecxz
push
ret
add
movs
push
pop
push
or
ins
add
pop
mov
sbb
ins
xlat
push
sub
add
cmp
(bad)
pop
mov
xchg
add
lahf
push
test
ret
(bad)
mov
ins
aam
rcr
adc
pop
sbb
cs
sar
std
pusha
(bad)
bnd
xchg
xchg
push
dec
ret
in
shl
mov
rol
mov
std
push
imul
aas
push
cmp
inc
scas
lahf
call
mov
jp
cmp
cmps
and
icebp
xchg
movs
inc
shr
js
das
call
inc
mov
loope
pop
push
fs
or
adc
push
mov
mov
jg
mov
cmp
punpckldq
stos
add
sub
mov
sahf
push
ja
xchg
jmp
sub
inc
push
shl
mov
(bad)
icebp
xor
add
fnsave
test
les
or
xor
movs
mov
arpl
xchg
adc
sub
(bad)
fsub
ja
mov
or
xchg
or
inc
jmp
mov
jge
test
leave
xchg
sub
test
mov
mov
push
adc
jne
int
pop
movs
retf
(bad)
ja
sub
dec
out
loopne
jbe
jns
ret
arpl
pop
adc
fwait
pop
fmul
shr
call
aaa
(bad)
sbb
test
or
mul
fs
sub
fdivr
call
push
in
into
fistp
loopne
lods
lahf
data16
sbb
push
enter
dec
xchg
stc
push
stos
mov
cmp
bound
jo
in
adc
cmp
xchg
in
add
jge
out
lea
cdq
cli
popf
out
fst
data16
jns
cmp
ins
(bad)
fwait
jecxz
inc
push
cs
push
cmp
add
mov
data16
ror
icebp
ss
mov
jecxz
xchg
adc
xchg
les
je
pop
scas
add
shl
xchg
in
jns
fsubr
sub
cmps
retf
add
out
stos
(bad)
cld
adc
inc
xchg
xor
dec
add
and
mov
jge
fsubr
fbstp
fcom
lock
adc
js
cmp
bound
sbb
and
pop
jl
(bad)
mov
add
fs
dec
add
mov
(bad)
jnp
mov
xchg
jbe
cmp
jne
mov
aas
jbe
mov
in
adc
sbb
mov
mov
xchg
enter
xchg
gs
mov
mov
xchg
cmp
and
sub
push
and
movs
pop
outs
sbb
dec
cmps
push
cld
lods
mov
test
cmps
push
mov
inc
inc
pop
test
rol
fs
outs
js
fcomp
xchg
mov
push
(bad)
cli
shr
das
jae
aad
sbb
fist
retf
push
daa
cld
movs
repz
jae
xchg
ins
test
add
or
std
and
into
data16
iret
(bad)
in
in
sbb
(bad)
xor
cmp
(bad)
mov
clc
clc
or
push
ficom
lahf
pop
shl
xlat
das
mov
dec
dec
arpl
or
in
fs
shr
cmp
mov
cld
jb
inc
ins
sub
adc
mov
jmp
cs
lods
(bad)
gs
sahf
lahf
mov
push
push
test
push
lods
sahf
enter
out
fst
push
xchg
cs
icebp
mov
sar
xchg
lock
add
mov
ss
popf
pop
scas
jo
xchg
pop
mov
inc
mov
and
adc
into
or
ror
out
cdq
repnz
mov
popa
jb
adc
pushf
mov
test
mov
jnp
xor
jmp
cmps
xchg
dec
mov
std
mov
mov
cs
es
cmp
dec
jmp
aaa
(bad)
mov
push
loopne
shl
sbb
push
inc
dec
loopne
test
sbb
xchg
inc
aas
jno
mov
xor
sahf
adc
sub
pusha
cmp
(bad)
pop
test
adc
data16
jmp
jmp
mov
pop
sbb
ss
pop
inc
stos
sub
push
imul
push
pop
jle
mov
arpl
jle
daa
rcr
int
push
and
dec
jns
jbe
cmp
ins
rcl
not
enter
sub
popa
cmp
(bad)
repz
xor
sahf
add
cmp
test
ins
dec
rol
xchg
sub
and
jl
jne
call
jecxz
leave
ret
jg
mov
dec
in
push
test
(bad)
xchg
aad
(bad)
sbb
jb
jmp
lds
xor
loope
and
jnp
shl
mov
and
jb
adc
popa
(bad)
or
push
into
sbb
bound
add
cld
push
les
ret
jns
mov
mov
xor
int
test
not
data16
lods
jmp
dec
push
in
fldenv
(bad)
mov
mov
mov
ficom
fmul
add
pop
out
(bad)
dec
or
bsf
fistp
and
(bad)
ror
mov
ficomp
jb
cmps
bound
push
enter
mov
pop
mov
retf
or
mov
pop
xchg
ffreep
push
fcmovne
inc
and
cmp
mov
pop
ds
sub
dec
and
inc
jg
pop
in
popf
jbe
sub
dec
lock
pop
mov
ins
or
push
sub
and
push
xchg
gs
push
xor
cmp
sub
out
ja
push
leave
out
(bad)
test
dec
push
test
es
repz
mov
lds
xor
jg
inc
bswap
push
sub
inc
hlt
xor
out
push
xor
mov
dec
inc
shl
mov
push
jmp
pop
add
xor
rol
xchg
scas
pop
test
pop
repnz
pop
adc
jmp
sbb
and
mov
push
aam
mov
sbb
es
mov
inc
cmc
popa
jp
test
out
js
jl
mov
enter
shr
(bad)
idiv
xchg
add
test
jmp
mov
xchg
jg
push
ss
cli
and
cmp
mov
test
iret
xchg
ins
fstp
jb
xor
pushf
push
inc
scas
sub
pop
jb
xor
mov
push
paddsb
jmp
(bad)
ret
(bad)
out
mov
add
movs
fstp
aas
(bad)
add
movs
lds
rcr
jae
aam
into
bnd
jb
inc
mov
in
pop
sbb
dec
ficomp
mov
cdq
or
mov
and
fs
cld
popf
inc
add
mov
dec
inc
mov
fadd
mov
or
inc
push
scas
cmps
push
mov
pop
pusha
inc
test
mov
xor
add
int3
add
cmp
or
or
scas
mov
lea
pop
test
ja
pmulhw
jbe
jmp
lahf
or
es
sub
out
les
lock
dec
shl
pop
push
rol
push
lds
fadd
dec
pop
call
xchg
jg
mov
mov
cmp
jecxz
js
or
xchg
mov
mov
or
sbb
rcr
ins
mov
adc
mov
imul
and
popa
push
fcmovb
test
sub
fidivr
sub
pop
pushw
xchg
scas
or
cmp
in
ins
fistp
mov
aad
add
iret
fs
loope
les
scas
scas
add
jl
xor
xor
arpl
cmp
add
mov
(bad)
pop
mov
sub
jmp
add
xor
push
movs
jge
xlat
call
loopne
push
clc
mov
mov
push
xchg
pop
dec
xchg
enter
clc
lods
fnstsw
inc
rol
and
cmp
out
pop
rcl
daa
rcr
je
(bad)
retf
jb
test
mul
xchg
pop
clc
ror
push
push
push
jle
inc
(bad)
jmp
mov
or
sub
inc
(bad)
dec
xchg
cmp
push
push
mov
fwait
out
pop
adc
fistp
xor
fisub
jno
cmp
bound
push
dec
test
and
test
scas
jae
xchg
mov
dec
ins
cmp
test
mov
xor
xchg
int3
mul
pop
xchg
loopne
dec
cld
cmp
cdq
ds
scas
mov
fs
test
mov
add
mov
cmp
mov
loopne
stc
in
not
test
push
jae
gs
pop
repnz
jbe
hlt
(bad)
into
or
aam
mov
cdq
dec
push
cld
leave
in
jno
mov
xor
cmp
out
and
mov
mov
sbb
dec
inc
sbb
xor
mov
mov
push
(bad)
loopne
fwait
or
hlt
int3
stos
xor
jp
mov
rol
and
mov
add
mov
dec
popf
(bad)
xchg
out
and
stos
mov
ret
mov
aad
ins
call
inc
lods
imul
and
inc
loopne
xlat
mov
sbb
mov
mov
push
lahf
mov
cmp
aas
jns
fiadd
sub
rol
and
jg
sbb
or
sub
cmp
aas
ficom
cmc
dec
es
mov
mov
xchg
mov
(bad)
into
inc
cmp
xor
test
test
std
test
add
add
pop
jne
mov
int3
out
out
movs
xchg
jnp
(bad)
jns
out
jae
adc
sub
xchg
sbb
das
pop
xor
inc
repnz
or
aaa
mov
or
cmps
jb
push
mov
xchg
and
cmp
cdq
sar
test
repnz
adc
mov
xor
or
pop
xchg
sbb
add
hlt
and
cmp
and
push
jl
or
and
sar
ds
cmp
pop
cmc
jae
pushf
push
lock
test
clc
cmp
mov
cmc
sub
clc
add
shl
inc
xchg
into
out
jb
fwait
mov
repz
jne
int
adc
inc
out
cmps
icebp
aas
mov
and
mov
jp
imul
mov
mov
pop
inc
fdiv
mov
jl
add
pop
pop
push
xor
adc
or
(bad)
popf
shl
mov
retf
xchg
lock
or
cmp
inc
rol
pop
lock
int
lods
push
outs
clc
call
adc
jae
aaa
mov
retf
rcr
aaa
lock
pop
pop
dec
mov
xor
imul
mov
hlt
mov
fiadd
sti
xor
loopne
imul
push
stos
mov
in
arpl
xlat
imul
and
(bad)
out
icebp
int
arpl
ror
neg
and
sbb
add
jmp
sbb
sbb
clc
in
add
pop
call
mov
rcpps
jmp
adc
mov
cmp
pop
test
pop
ins
xlat
clc
jmp
mov
lea
outs
ins
xchg
pop
mov
cwde
xchg
test
adc
nop
push
jmp
sub
std
push
lock
or
cmps
js
(bad)
push
sbb
jmp
sub
inc
push
sub
inc
pop
sbb
push
ins
fwait
ja
mov
jo
clc
(bad)
out
adc
gs
inc
test
mov
es
inc
dec
push
mov
mov
sbb
or
mov
hlt
ret
mov
mov
call
lea
cs
jmp
add
xchg
cmp
push
adc
push
scas
and
sub
pop
out
push
push
cs
imul
jmp
push
movs
sub
(bad)
jmp
mov
icebp
test
push
fwait
(bad)
inc
add
jg
cmps
and
fwait
xchg
cli
icebp
xchg
jmp
push
adc
mov
ja
hlt
inc
dec
adc
inc
add
out
leave
mov
jmp
int
cmps
dec
test
lds
out
xchg
jg
push
das
(bad)
fimul
bt
repnz
aad
stos
adc
(bad)
test
jo
pop
push
jl
mov
inc
out
pop
clc
rol
inc
or
(bad)
or
test
fisub
sub
mov
sti
dec
inc
daa
loope
pop
ins
nop
mov
xchg
jne
or
or
adc
push
mov
dec
and
push
mov
mul
sub
xchg
mov
or
cmp
adc
cmp
dec
mov
(bad)
(bad)
test
mov
cmp
hlt
jne
rol
shl
sbb
test
pop
std
rcr
push
gs
ins
pop
shl
sbb
pop
adc
out
push
repz
dec
test
adc
push
mov
pop
inc
in
xor
push
sti
into
dec
outs
push
std
mov
xor
dec
xchg
or
pop
and
lock
repz
hlt
ss
js
sbb
add
les
ds
or
cmp
outs
repz
adc
(bad)
sub
retf
mov
jne
retf
mov
inc
imul
(bad)
rcr
out
sbb
mov
sub
mov
aaa
outs
push
fcomp
jecxz
loope
cmc
xor
ins
sbb
xor
adc
aas
jle
inc
es
sbb
jns
pop
lods
cmp
daa
ret
jbe
mov
add
ds
fbld
popa
daa
loop
enter
sbb
call
les
sbb
mov
fistp
push
jae
jns
push
sub
mov
pop
sbb
add
add
gs
es
cmp
ins
mov
pop
xor
push
push
mov
inc
or
dec
adc
(bad)
xor
ret
adc
loopne
push
(bad)
fisub
jns
aaa
(bad)
scas
fisttp
sbb
and
rol
fistp
adc
fisubr
and
cli
sub
shl
lods
test
scas
stos
ins
mov
add
pop
or
int
push
jno
sar
push
mov
into
dec
dec
jge
inc
ret
push
adc
sub
mov
jg
xchg
mov
retf
jbe
das
shl
dec
and
shl
mov
ret
xlat
pop
pop
fisttp
xchg
sbb
and
or
or
scas
or
inc
inc
sub
cmp
sbb
mov
push
push
or
shl
jae
ror
stc
repz
jb
cmps
xchg
dec
pop
adc
inc
aaa
cmps
push
add
out
or
or
or
es
xchg
mov
ja
fcom
xor
andnps
adc
jae
(bad)
mov
popf
ret
xchg
cmc
xlat
ret
push
mov
popa
(bad)
jecxz
pop
fwait
jbe
loopne
arpl
push
rcr
vorps
cmp
add
es
and
pushf
dec
pop
ss
inc
mov
mov
jne
pop
pushf
xchg
inc
xchg
adc
and
cs
loope
mov
pop
pop
call
data16
ja
add
jmp
fnstenv
xor
gs
inc
inc
pushf
pop
(bad)
cmc
lea
fs
adc
(bad)
adc
mov
mul
xor
popf
mov
cmp
in
cmp
(bad)
test
add
jbe
cmp
ja
fild
pop
daa
ror
mov
sti
push
shl
sbb
adc
push
jae
pop
je
mov
jo
mov
and
icebp
test
add
inc
xor
outs
test
(bad)
cmp
stc
leave
sub
xor
lds
call
pop
xchg
fsub
retf
xor
dec
imul
dec
idiv
sahf
test
pop
pop
in
xor
pop
and
adc
push
les
ja
mov
cld
loop
inc
jmp
jp
fisub
rol
and
ror
fdivp
mov
retf
loop
or
fild
das
shl
push
pop
and
fldcw
and
cmp
test
loopne
or
cmc
push
xor
inc
icebp
adc
out
sti
int3
es
ror
lds
and
push
in
mov
fsub
mov
inc
test
xor
or
pop
dec
dec
bound
or
scas
inc
mov
xchg
inc
scas
out
(bad)
mov
clc
movs
pushf
ins
push
pop
in
adc
push
les
stc
cmp
movs
pop
icebp
icebp
pop
add
hlt
sbb
xchg
and
lea
xchg
and
rcr
mov
cmp
lods
scas
adc
fimul
aam
sub
mov
adc
or
cmps
cmp
pop
scas
(bad)
std
or
cmp
push
adc
sbb
adc
aam
inc
fwait
push
pop
repnz
inc
xchg
mov
cmp
leave
add
call
sbb
in
sbb
int
mov
shr
mov
cmp
add
enter
popf
clc
loopne
stos
mov
pop
mov
dec
mov
fs
and
jle
aad
dec
(bad)
ret
aam
mov
ret
rol
cdq
fcomp
mov
pop
pop
inc
xchg
xor
sahf
and
das
add
fsub
adc
pop
xchg
int
pusha
mov
jmp
xchg
adc
push
js
cmp
pop
dec
mov
hlt
inc
ins
sti
mov
cdq
mov
mov
push
dec
mov
sub
data16
mov
stc
mov
pop
fdivr
mov
fistp
and
enter
int
lods
mov
pop
sub
and
popf
(bad)
push
jno
loop
dec
fist
jg
sahf
std
or
ja
idiv
fadd
mov
enter
mov
popa
(bad)
cwde
data16
inc
mov
mov
fisttp
je
aaa
(bad)
ss
lods
lods
retf
lds
cld
cmp
pop
loopne
ins
push
lods
add
xor
mov
push
out
adc
inc
xor
out
retf
imul
xor
xchg
call
fwait
dec
xchg
aas
call
adc
lock
mov
(bad)
inc
mov
jecxz
test
mov
pushw
mov
inc
sar
popf
adc
xchg
ret
and
(bad)
clc
test
retf
and
mov
xor
movs
sbb
popf
push
adc
leave
mov
dec
sub
push
std
adc
data16
ficom
sub
jmp
inc
adc
jp
pop
mov
fild
shr
fwait
mov
arpl
push
or
nop
add
dec
ds
xchg
dec
dec
mov
aam
ja
stc
and
pop
daa
sub
nop
scas
push
xchg
add
jp
aad
js
into
inc
ins
dec
xchg
pusha
les
push
xchg
pop
jmp
dec
xor
mov
popa
pop
cmps
fwait
xchg
add
sub
(bad)
shl
loop
xor
std
(bad)
inc
inc
push
out
add
lods
push
inc
jge
je
inc
dec
xchg
stc
push
fld
aas
jmp
xlat
nop
sahf
in
dec
adc
mov
mov
push
adc
jecxz
mov
push
mov
xor
mov
nop
inc
mov
js
movs
enter
pop
gs
pop
xor
ins
mov
retf
and
lahf
movs
sub
jne
leave
clc
push
add
xchg
(bad)
mov
mov
mov
push
or
sbb
cwde
fsincos
popa
mov
loope
and
pop
dec
xchg
pop
fild
lods
jb
jmp
pop
xor
rcr
sub
sub
out
or
in
pop
mov
(bad)
in
sar
sbb
adc
sbb
sbb
add
jo
aaa
jno
or
xor
mov
push
mov
out
pop
clc
mov
test
add
fisttp
cld
mov
ja
sahf
mov
daa
jge
pop
push
cmp
adc
pop
sbb
scas
pop
pop
dec
scas
mov
stos
retf
out
rcl
add
daa
fild
enter
mov
adc
inc
sbb
aaa
(bad)
loope
jbe
movs
nop
push
xchg
push
push
xor
gs
pop
xor
repnz
shl
inc
push
pop
(bad)
lods
and
push
cmp
dec
adc
mov
retf
ds
movs
fld
int
jmp
cli
ins
xor
or
stc
and
aas
test
pop
(bad)
in
or
pop
mov
mov
sub
ret
popa
mov
push
jmp
add
cld
in
aas
out
sbb
mov
int3
cmc
hlt
mov
add
mov
add
xor
ds
iret
push
push
jmp
and
(bad)
call
in
jnp
fsub
sbb
dec
add
or
int3
and
sub
push
fs
mov
clc
ss
stos
mov
jl
iret
xchg
(bad)
test
or
and
repz
mov
test
mov
or
lods
cmps
cmp
icebp
fmul
xor
xor
sub
rcr
cs
inc
xchg
xchg
data16
push
jae
sbb
push
push
xchg
xor
(bad)
xchg
add
std
int
push
sub
rcl
xor
outs
xchg
cs
(bad)
add
push
test
mov
cmc
inc
adc
mov
jo
movs
and
fs
pop
push
cmp
cmp
sub
outs
in
ins
mov
mov
cdq
in
inc
shl
ja
xchg
outs
outs
cmp
enter
addr16
bndldx
movs
xor
mov
out
push
cmp
cmp
loop
sub
retf
cmp
fstp
pop
sub
loope
adc
and
fcmovne
rcl
adc
pop
fucomi
call
pusha
and
or
(bad)
pop
xor
inc
push
xlat
fbld
mov
and
adc
dec
cdq
or
in
nop
mov
pop
frstor
mov
test
or
pop
cmp
inc
push
xchg
mov
xchg
lods
mov
cmc
and
xor
call
jo
cwde
lods
inc
leave
test
fadd
cld
jnp
mov
fs
and
outs
cmp
rcr
xor
adc
call
jmp
sahf
push
test
dec
mov
xchg
arpl
mov
hlt
mov
and
std
fmulp
jle
lds
sbb
out
lea
imul
mov
shr
inc
push
gs
push
nop
xchg
je
mov
xlat
iret
rol
jmp
mov
mov
arpl
into
pusha
inc
loopne
jmp
push
aaa
lock
popf
pusha
cmp
in
retf
xchg
cmps
pop
dec
push
and
push
mov
(bad)
fild
push
das
arpl
cmp
inc
sbb
out
or
movs
scas
repnz
push
retf
xchg
pop
vpcmpeqw
jns
es
mov
pop
sti
jp
jp
adc
cmp
or
adc
aaa
push
fsub
pslld
xor
pop
cmovg
sti
popf
(bad)
xor
cli
repz
pop
adc
sti
jmp
pop
dec
ret
xchg
pop
and
mov
aad
cdq
(bad)
(bad)
push
(bad)
jmp
ror
gs
pop
mov
pop
or
push
js
mov
mov
mov
psraw
and
nop
add
fwait
ins
es
daa
ins
mov
jb
jo
sub
fidiv
mov
ds
pusha
stc
adc
mov
push
out
retf
mov
dec
dec
repz
out
mov
lds
and
aas
call
mov
ss
rol
cmps
aas
fcom
sbb
lea
out
repz
not
pop
mov
cmp
data16
mov
(bad)
jge
repz
sub
outs
in
inc
inc
shl
fwait
mov
fiadd
mov
add
add
mov
sub
sub
push
add
xlat
push
or
ds
xor
ins
xchg
inc
push
xor
cwde
pop
xchg
cdq
test
push
sbb
in
or
mov
test
in
sahf
inc
in
lahf
movs
add
outs
jg
xchg
add
or
jl
lds
(bad)
pop
cmp
cmp
cmp
xor
sbb
jecxz
iret
nop
sbb
cmp
pop
push
jae
aam
fucomp
int
and
test
or
pop
mov
or
mov
mov
mov
add
popa
stos
mov
jne
loope
xchg
scas
out
push
out
mov
dec
inc
push
cmp
push
stc
ja
aam
or
jmp
shl
mov
lock
mov
pusha
mov
or
leave
aam
pop
sub
out
or
push
sub
ror
mov
xchg
pop
sub
xor
or
pop
xchg
rcr
jns
and
add
fidivr
pushf
fwait
bound
push
xchg
iret
in
and
mov
fdivr
lock
xor
pop
push
ja
mov
aaa
xor
mov
into
test
jmp
cmp
ret
mov
xchg
dec
inc
xchg
or
mov
pop
out
(bad)
imul
icebp
rcr
sub
clc
into
mov
jnp
sbb
(bad)
aas
cli
imul
mov
push
rcr
adc
mov
sti
lods
cld
(bad)
lods
xor
mov
xchg
inc
scas
pop
jp
fiadd
sub
xor
inc
lea
xchg
ds
fwait
mov
adc
into
sbb
sbb
or
and
adc
mov
scas
and
mov
adc
dec
jb
imul
test
loopne
and
push
int
(bad)
or
lock
loopne
imul
xchg
fs
push
(bad)
xor
push
xchg
xchg
loope
push
data16
data16
inc
ret
push
and
lea
std
mov
addr16
add
ins
jmp
fwait
pop
xchg
xor
sub
cmps
int3
popf
arpl
imul
push
dec
cmc
fdiv
or
sbb
cli
mov
cmp
jp
mov
repnz
dec
sub
or
mov
push
add
pop
je
fwait
push
test
arpl
std
mov
mov
jp
hlt
ja
ror
outs
shl
sub
mov
cmps
jb
xor
call
outs
mov
jmp
push
clc
add
adc
mov
es
daa
pop
mov
lds
adc
push
pop
add
mov
repz
and
in
jmp
jae
add
cmp
mov
adc
shl
rcl
cmp
lahf
push
pop
in
lods
add
in
adc
or
lahf
sbb
fcomp
mov
stc
ins
jle
jb
fstp
sar
movs
fistp
pop
add
adc
ds
outs
adc
and
scas
add
pop
push
jns
xchg
push
lock
in
mov
mov
inc
pop
mov
and
mov
std
cmp
out
mov
mov
jmp
ins
scas
mov
js
inc
vmovaps
and
lahf
xor
dec
movs
sti
inc
xor
hlt
lods
aad
mul
sti
add
loope
cmps
cdq
imul
xchg
loope
push
loop
cmp
xor
aaa
jnp
and
in
adc
or
jo
cs
fcomp
xor
movs
xor
bound
or
dec
add
rcr
out
and
cmp
inc
xlat
rcr
pcmpeqd
push
xor
loop
xor
jne
mov
pushf
mov
xchg
push
push
and
shl
xchg
mov
retf
mov
push
out
dec
jne
xor
ret
cwde
pop
neg
jns
pop
jnp
or
sbb
cmps
mov
ficom
jbe
add
sub
push
cmp
dec
stc
mov
or
in
add
pushf
jmp
enter
sbb
std
into
push
bound
mov
push
repnz
adc
adc
sub
jne
inc
jle
ins
add
in
frstor
sub
shl
mov
fbld
xor
inc
rcl
xor
in
fstp
repz
call
or
aas
xchg
pushf
pop
pop
je
dec
sar
out
sahf
push
test
fst
ds
dec
jmp
add
scas
pop
ja
movs
xor
push
sub
lock
lds
hlt
out
adc
inc
loopne
push
stc
xor
stc
adc
in
sub
sti
inc
fwait
push
sahf
test
mov
test
pusha
push
xchg
dec
retf
xor
fld
movs
and
lods
rol
(bad)
push
pop
dec
bt
pop
pushf
jl
cdq
and
ss
jl
cli
ins
je
sbb
aam
in
popa
es
aad
daa
jl
xlat
shl
inc
pop
(bad)
retf
pushf
dec
xor
or
cmp
cmp
sub
mov
push
and
inc
add
and
jae
mov
cmp
dec
loopne
div
push
and
jmp
and
pop
inc
sub
lock
lds
addr16
dec
mov
test
loopne
mov
xchg
ss
pop
inc
ret
popf
mov
sbb
pop
cmps
cs
adc
ret
icebp
sub
pushw
or
push
notrack
outs
xchg
push
mov
cwde
je
imul
mov
mov
dec
xchg
pop
pop
adc
or
and
mov
mov
cs
inc
ret
movs
xor
ss
retf
add
pushf
push
push
xchg
test
imul
outs
je
aaa
stos
out
sbb
outs
aad
pop
sti
sub
mov
push
int3
bound
inc
lods
dec
stc
and
dec
push
push
jg
mov
push
in
pop
mov
lahf
mov
add
je
push
fsub
inc
imul
stos
ins
mov
cdq
and
rcr
ins
std
stos
ret
(bad)
mov
and
out
and
(bad)
ficomp
mov
add
movs
jl
mov
in
pop
cmc
addr16
jle
aas
aam
and
pop
aaa
ret
xchg
mov
mov
icebp
(bad)
xor
mov
mov
mov
jg
mov
adc
cdq
add
ss
adc
(bad)
mov
pop
mov
cmp
inc
cmp
adc
dec
mov
idiv
xor
rcr
ja
aas
dec
add
in
push
sub
fist
push
and
xor
fs
lds
xor
and
jns
sbb
dec
pop
popa
mov
push
out
pusha
cmp
and
xor
movs
aad
not
div
push
aad
mov
xchg
icebp
jns
dec
lods
xchg
xor
(bad)
mov
(bad)
lds
or
imul
adc
call
iret
pop
cmps
dec
ja
int
pop
cs
add
loope
lea
lods
nop
aaa
or
pop
xchg
xor
xor
xchg
jle
das
iret
stc
jo
jg
xchg
jg
xchg
fdivr
imul
fcmove
sub
fs
lock
jnp
push
cmp
fmul
imul
add
imul
xchg
xchg
ret
das
outs
test
lock
or
pop
jo
bound
pop
clc
sahf
inc
out
add
nop
jo
repz
xlat
mov
(bad)
jle
repnz
adc
sbb
jmp
mov
ss
add
inc
(bad)
cwde
mov
inc
sub
adc
in
sahf
jnp
mov
repz
mov
int
jp
sbb
hlt
adc
xor
aad
mov
mov
popf
push
dec
mov
mov
mov
enter
inc
aam
jge
shl
in
mov
xchg
sbb
jb
add
ss
dec
dec
xchg
fisttp
out
movs
gs
je
(bad)
and
inc
je
cwde
stos
inc
and
and
retf
sbb
mov
sbb
sbb
mov
ret
and
sub
test
inc
sbb
iret
stos
std
xlat
retf
mov
sar
jmp
fcom
int3
ds
sets
mov
jle
out
in
test
mov
pusha
dec
(bad)
pop
mov
mov
ins
call
shr
dec
aas
pop
inc
mov
mov
cli
pop
into
in
cmp
test
out
dec
cwde
lods
or
adc
jmp
push
stc
out
jmp
mov
clc
jp
xchg
mov
icebp
(bad)
push
dec
and
jb
std
push
fidiv
shl
jae
mov
inc
outs
add
stc
xor
in
mov
dec
add
push
cdq
pop
sbb
push
xchg
mov
jg
pop
jbe
xchg
js
xchg
sar
inc
pop
cld
ja
inc
fst
nop
cwde
ret
pop
das
lock
mov
dec
jns
jo
push
xchg
movs
stos
aaa
jae
bound
mov
mov
loopne
mov
jecxz
aad
push
jl
cmp
(bad)
cmp
jmp
xchg
jecxz
xchg
mov
pushf
jb
mul
push
cmp
pop
and
inc
xchg
push
nop
pushf
cld
daa
jns
sub
fsub
mov
dec
lods
call
sub
and
push
push
call
jae
pop
jmp
dec
dec
fsubr
inc
mov
mov
ja
sbb
pop
lods
adc
cmp
inc
xor
lock
or
popa
sar
xor
and
sub
ins
(bad)
cmp
call
call
dec
rol
mov
rcr
add
jl
aad
bound
cmp
pop
mov
ins
(bad)
call
enter
ror
dec
retf
ins
cwde
fisttp
loopne
sub
xchg
or
sbb
leave
dec
paddsw
cmp
std
inc
cmp
loop
test
enter
add
sub
hlt
pop
xchg
adc
mov
inc
and
sub
adc
ins
mov
jb
gs
ins
mov
test
sbb
push
ss
stos
and
adc
test
cmp
xor
sub
mov
(bad)
or
jmp
cdq
and
xchg
cmp
enter
jg
push
loope
loop
stos
lods
pop
push
pop
dec
(bad)
push
rcr
pop
stc
loopne
stos
fprem1
or
adc
retf
mov
mov
adc
dec
loop
or
fld
mov
inc
dec
pop
jne
imul
int3
inc
sub
and
mov
cmps
lods
sti
sahf
fld
movs
out
cmps
cmps
mov
repz
sbb
mov
or
xor
add
fisttp
mov
rol
(bad)
xchg
jae
cmps
xchg
and
adc
aad
adc
or
dec
pop
push
std
inc
repnz
inc
imul
stos
out
mov
jo
loopne
sbb
mov
retf
cld
xchg
into
aas
inc
jmp
push
inc
jne
pop
lods
sub
test
pop
push
cmp
retf
in
push
mov
push
adc
jne
cmp
mov
add
xor
fldcw
sub
sbb
push
mov
sub
cmps
movs
lods
or
pop
loop
pushf
mov
fwait
retf
cmp
sbb
mov
cld
push
mov
mov
dec
inc
test
dec
cmp
mov
(bad)
jle
movs
sbb
rcr
adc
pop
and
movs
pop
add
ins
test
fidivr
push
add
pusha
jmp
call
and
les
mov
in
mov
aas
lock
lahf
inc
ds
out
rcr
(bad)
add
sbb
and
mov
xor
pop
out
ins
and
xchg
inc
jmp
or
or
add
push
mov
jmp
xchg
xor
inc
fdiv
jmp
pop
(bad)
pusha
mov
sub
or
fidiv
enter
retf
add
sub
fsubp
(bad)
(bad)
cmc
add
pop
mov
dec
scas
push
pop
test
int
arpl
xor
cli
iret
push
test
pop
cmp
push
pop
push
retf
iret
mov
mov
cmps
ret
lea
(bad)
mov
inc
mov
mov
out
loopne
ins
retf
mov
clc
inc
lds
mov
js
mov
jnp
or
and
jmp
push
js
loope
lahf
xor
mov
imul
add
jmp
ret
test
js
stos
das
sbb
mov
lahf
add
ss
jmp
shl
xchg
out
shl
test
gs
mov
pop
ja
mov
push
jnp
mul
es
sub
mov
iret
cwde
repnz
movs
ret
jl
ror
cmp
push
or
repz
(bad)
mov
sub
sub
popf
jnp
or
pop
jmp
and
mov
nop
and
sahf
push
lods
jle
popf
dec
sbb
sbb
pop
les
std
test
push
add
mov
gs
sub
push
pop
xor
sbb
pop
cmps
dec
aam
push
stos
ja
mov
test
imul
mov
mov
aam
cmp
lock
sub
cmp
popa
sub
mov
outs
xchg
push
push
stos
sbb
nop
sub
fdiv
rcl
sar
mov
xor
push
xchg
bnd
dec
xchg
or
ds
popa
aaa
sub
mov
cmp
xchg
scas
mov
mov
je
add
pop
pop
jns
mov
push
aas
not
jb
test
mov
fdivr
and
retf
test
mov
lods
mov
inc
mov
jnp
mov
fnstenv
and
in
mov
xor
shl
mov
sub
mov
xor
sbb
jne
(bad)
and
or
dec
dec
aad
not
push
stos
adc
push
mov
xchg
retf
aas
sub
pop
jbe
jp
sti
shl
ja
out
push
sbb
cli
dec
sbb
mov
lock
out
pushf
out
pop
arpl
std
aaa
ss
dec
mov
dec
movs
cmps
cmps
aaa
xor
jmp
stos
xchg
call
ret
ins
les
sbb
cmps
cld
clc
xor
push
inc
adc
sub
daa
inc
or
push
mov
data16
loop
ds
push
gs
pop
mov
shl
cmp
mov
aaa
in
and
sub
mov
jo
or
and
xor
mov
pop
mov
outs
inc
popa
pushf
and
(bad)
sar
sub
scas
xor
fs
scas
icebp
and
jae
pop
jge
mov
stos
sub
xor
xchg
jp
xchg
rcl
(bad)
pop
mov
outs
jle
sub
fmul
lock
push
ja
pusha
fwait
xor
pop
xchg
mov
inc
dec
mov
sub
(bad)
jnp
inc
mov
mov
sub
nop
cs
sub
fild
push
add
mov
sub
mov
or
clc
fidivr
jp
lea
jle
or
cmc
popa
movs
xchg
push
clc
cld
imul
jl
daa
mov
mov
popf
and
pop
add
pop
pop
add
inc
mov
je
pop
sahf
out
jns
je
sbb
repz
mov
dec
stos
pop
and
and
cmps
mov
mov
or
xchg
dec
pop
xor
dec
pushf
aas
int3
clc
fmul
out
add
das
xchg
dec
mov
cwde
das
sub
scas
call
fwait
das
clc
add
shr
xor
bnd
out
sub
inc
mov
pop
mov
push
jnp
add
jge
int
dec
(bad)
fcmovnb
es
jbe
push
(bad)
sub
push
jmp
test
inc
pop
sub
pop
dec
addr16
and
push
dec
adc
pop
pop
bound
add
push
and
or
xchg
push
add
leave
jge
pop
imul
and
loop
lds
push
adc
retf
sti
mov
dec
jg
pop
jp
push
jne
xor
cdq
std
push
dec
jge
ins
(bad)
addr16
shl
dec
jns
sbb
aas
jae
mov
pop
mov
pop
arpl
cs
inc
and
loope
mov
call
pop
xor
push
fisub
std
scas
dec
mov
nop
mov
mov
addr16
inc
dec
inc
add
dec
ret
xchg
lock
fwait
popa
cmp
repz
inc
mov
inc
shl
sub
cmp
jnp
mov
cmp
mov
shl
xchg
push
push
lds
and
data16
popf
ins
repnz
pushf
rcl
aad
push
jae
retf
stos
sub
popa
inc
clc
sub
out
stos
push
movs
icebp
aas
(bad)
push
in
sar
cmp
sub
in
jl
popf
sub
repz
add
(bad)
stos
sub
sub
enter
xor
out
aas
push
test
mov
cmp
pushf
xor
jo
mov
int3
pop
in
shr
xor
je
mov
xor
stos
rol
retf
jne
fwait
pop
lds
sbb
cmc
mov
jb
loope
(bad)
cld
bound
pop
ins
jmp
gs
pushf
mov
xchg
dec
dec
retf
retf
dec
cli
rol
sti
in
xor
ins
mov
(bad)
movs
clc
retf
clc
sahf
adc
adc
mov
push
mov
aas
(bad)
inc
jns
in
adc
cld
icebp
pusha
sbb
inc
out
xchg
bound
in
push
xchg
mov
and
test
mov
pop
test
cdq
lods
lahf
add
sar
sbb
mov
loope
fnstenv
out
xchg
jl
xor
arpl
dec
mov
jbe
fmulp
push
fs
sub
push
jbe
add
xor
pop
dec
inc
iret
aaa
out
sub
mov
adc
mov
leave
add
inc
pop
inc
add
mov
xchg
sub
jecxz
xchg
loop
mov
mov
jae
mov
rcl
sbb
adc
out
cli
(bad)
adc
sub
mov
movs
lods
xchg
outs
rol
push
fimul
imul
adc
gs
sbb
sub
sbb
fs
fistp
jne
jp
jnp
ja
aam
je
push
shr
mov
or
pop
mov
xor
cmp
mov
xchg
and
push
xchg
hlt
pop
push
add
sbb
sub
sbb
cdq
or
loop
jmp
xchg
enter
adc
xor
inc
sbb
mov
retf
mov
loop
(bad)
pop
pop
pusha
mov
pop
mov
mov
xchg
and
scas
xchg
retf
mov
out
cs
xchg
mov
push
repz
repz
(bad)
mov
mov
adc
mov
std
or
mov
xchg
lods
and
or
dec
pop
sbb
mov
std
or
das
inc
shl
mov
push
fnstsw
xchg
fidiv
lods
inc
popa
movs
lea
in
mov
adc
adc
div
and
stc
inc
jmp
push
rcr
rcl
add
call
push
and
mov
jmp
(bad)
mov
test
sahf
(bad)
mov
cwde
push
cwde
push
inc
cmp
and
sbb
inc
push
dec
shl
add
clc
fistp
repz
and
cli
push
pop
jmp
loopne
add
pop
add
sbb
dec
out
inc
call
mov
les
push
maskmovq
div
cwde
push
mov
mov
arpl
xor
or
out
inc
ret
dec
rcl
xor
in
sub
loopne
mov
xchg
mov
ins
stc
mov
or
into
bound
out
dec
adc
lods
shr
fistp
ficom
mov
xchg
xchg
jo
stos
or
xor
push
xchg
push
xchg
mov
cmp
ins
push
or
int
inc
pop
and
inc
mov
in
inc
call
mov
cwde
jnp
dec
cld
inc
sti
mov
and
hlt
adc
lds
xor
jg
addr16
je
lods
inc
and
mov
loop
xchg
mov
lds
inc
popf
dec
(bad)
hlt
pusha
jae
adc
into
sub
dec
sub
inc
sub
out
cmp
push
fisttp
cs
cmp
outs
or
loopne
xchg
sbb
push
test
dec
mov
push
(bad)
xor
into
cs
dec
aas
jae
pusha
mov
scas
jo
imul
test
mov
push
cmp
fisttp
mov
sbb
outs
popa
into
(bad)
dec
jmp
int3
adc
iret
test
call
idiv
xchg
int3
lock
adc
xor
stos
and
jmp
mov
fld
dec
jb
dec
cmp
retf
xor
jbe
jle
mov
jae
cmp
mov
mov
ds
sahf
sbb
addr16
cmp
sub
mov
pusha
out
push
cdq
xchg
icebp
pop
int3
sbb
sub
pushf
or
stos
and
(bad)
icebp
movs
in
test
pop
jb
dec
je
dec
ds
fwait
test
pusha
pusha
mov
das
cmp
call
xchg
loop
sub
xor
sub
jns
add
mov
add
ins
icebp
cmp
lahf
(bad)
in
clc
push
xchg
and
cmps
out
call
pop
js
cdq
jb
nop
mov
call
mov
(bad)
aad
rcl
fld
xor
lahf
jp
xchg
(bad)
outs
les
rol
lds
pusha
(bad)
jo
movs
and
(bad)
leave
into
ret
loopne
js
fs
jmp
xor
std
xor
daa
push
mov
xchg
or
popa
push
stos
mov
cmp
pop
out
fxch
jo
retf
xor
movs
cwde
in
jmp
sahf
push
jecxz
ret
inc
cs
and
push
and
fistp
cmp
dec
imul
mov
inc
mov
or
sbb
enter
int
jp
out
jnp
sbb
fdiv
cmc
lods
out
call
adc
por
mov
and
xor
or
popa
jp
scas
xlat
push
faddp
test
shl
pop
sbb
out
mov
fidivr
xor
icebp
test
retf
movs
hlt
lods
pop
dec
retf
pop
or
mov
pop
jnp
shl
dec
push
dec
loop
sub
cmp
jo
push
or
mov
loopne
sbb
nop
aad
mov
retf
scas
mov
xor
stc
aas
add
retf
(bad)
mov
jae
adc
rol
out
add
test
test
lods
xchg
pop
xor
sahf
shl
mov
sbb
or
lahf
sar
sub
xchg
test
fst
xchg
jae
sbb
ret
mov
adc
ins
ds
mov
pop
test
xor
pop
outs
sbb
fstp
mov
dec
jle
cmps
cmps
pop
mov
inc
test
or
dec
hlt
cwde
cs
push
or
sub
popf
dec
pop
fs
xor
fmul
hlt
add
inc
icebp
adc
pop
sbb
sbb
aam
cdq
movs
sub
inc
pusha
or
mov
mov
push
je
imul
retf
jge
jmp
gs
ins
scas
adc
les
inc
cmp
jmp
mov
mov
cdq
aad
mov
test
sahf
loopne
cli
enter
jns
fisub
es
rcr
daa
icebp
mov
adc
sbb
ins
xor
int
fdivr
hlt
repnz
add
pop
xchg
cmp
in
mov
inc
repz
xor
mov
push
xor
clc
xor
jmp
xchg
mov
mov
pop
mov
and
rcr
test
or
call
imul
in
pushf
clc
aas
inc
pop
add
lock
test
jecxz
aad
fldl2t
inc
or
push
daa
bound
mov
call
(bad)
cmp
jnp
sbb
sti
ror
ret
retf
cmps
les
xchg
(bad)
out
push
out
cmp
jl
test
dec
mov
push
or
cmp
shr
ja
jmp
ror
cmps
sub
push
push
(bad)
mov
dec
push
push
in
addr16
into
pop
out
adc
hlt
leave
(bad)
cld
inc
ins
mov
fs
stos
movs
cmps
mov
push
adc
outs
test
lea
(bad)
es
(bad)
push
cdq
iret
mov
ret
jnp
dec
mov
ins
adc
xlat
out
in
and
mov
fwait
ret
popa
fnstenv
mov
mov
imul
push
test
mov
sar
sub
xor
(bad)
pop
xor
inc
das
cmp
mov
call
adc
adc
push
loopne
jle
ror
push
dec
jbe
std
xchg
nop
xor
dec
or
addr16
sbb
push
or
cli
cmps
fnstcw
cmps
xchg
(bad)
fwait
js
es
mov
jne
jns
es
dec
enter
(bad)
jmp
repnz
movs
ins
mov
out
xchg
mov
gs
push
jle
jne
lds
sub
sbb
lods
inc
ret
cld
gs
jno
test
and
es
iret
fwait
pop
pop
jmp
mov
fisttp
cmp
sar
(bad)
fcmove
add
xchg
mov
pop
adc
or
aaa
xor
pop
and
push
or
out
rcr
jecxz
test
push
stos
mov
pop
cmp
hlt
jecxz
enter
mov
mov
xchg
loopne
ret
or
aaa
out
add
adc
ins
push
push
jmp
jecxz
iret
mov
mul
sub
inc
pop
xor
test
push
sub
xor
cs
lds
es
pop
(bad)
pop
adc
in
daa
add
daa
mov
in
movs
test
iret
sub
cmp
sub
mov
cs
pop
push
dec
imul
jmp
cdq
push
push
push
fld
ds
out
in
jl
inc
and
sub
ret
or
mov
dec
mov
dec
add
push
or
mov
call
mov
jle
sub
xor
cmp
pushf
das
jg
icebp
mov
sbb
test
or
pop
sahf
ins
xchg
inc
jmp
add
rol
or
xchg
sub
add
jle
push
mov
and
test
ret
shr
push
xchg
repnz
mov
xchg
mov
lahf
sbb
fldcw
fnsave
std
jmp
and
sbb
into
pop
fild
pushf
aad
shr
mov
pop
sbb
bound
mov
inc
and
mov
into
mov
je
add
leave
inc
out
add
cmp
xor
mov
mov
arpl
sbb
adc
mov
jecxz
(bad)
movs
or
and
and
imul
mul
mov
mov
das
out
ret
aam
imul
dec
in
jl
sub
clc
push
out
cmp
inc
movs
inc
jmp
fild
push
inc
jmp
cli
jge
nop
setb
xchg
cli
jg
nop
pop
push
fs
xchg
mov
pop
clc
xor
jbe
mov
add
fisub
scas
lods
adc
pop
mov
mov
mov
cs
(bad)
pop
(bad)
cmovs
dec
int3
repz
adc
ja
lods
mov
cmp
mov
cmp
test
pushf
jl
pop
mov
push
int3
mov
mov
push
fs
dec
out
push
popa
jg
fbld
pop
cdq
dec
mov
scas
dec
(bad)
iret
dec
xchg
nop
add
ins
aad
push
mov
stos
jno
fld
fcom
xchg
jbe
push
test
inc
inc
shr
(bad)
fdiv
ror
lahf
sbb
jno
pop
dec
fwait
jl
neg
pusha
xor
jg
jmp
fwait
movs
sbb
push
pop
js
pop
and
std
inc
cmp
jp
mov
sub
nop
je
popa
loop
repnz
jg
xchg
bound
(bad)
in
mov
xor
sub
popf
push
jae
fsub
daa
pop
repz
cdq
pop
sar
call
hlt
xlat
adc
shl
add
or
scas
dec
stos
cmp
push
cld
loop
pushf
pop
sub
clc
mov
sub
push
jl
jmp
push
nop
xchg
pop
(bad)
pop
jbe
mov
sub
pop
fwait
call
fimul
adc
push
or
mov
iret
jb
sbb
mov
push
int3
inc
xor
cld
ret
dec
push
push
pop
icebp
pop
icebp
dec
gs
add
test
dec
inc
adc
pop
push
sub
fs
cmp
fidiv
mov
dec
cmp
mov
inc
push
ficom
clc
test
nop
mov
sbb
adc
int
add
mul
cld
test
mov
pop
shl
dec
(bad)
loopne
push
cmc
jne
(bad)
fcomp
into
adc
sbb
pop
aad
or
popa
push
sbb
xor
test
lahf
xchg
xchg
add
xor
gs
mov
pushf
jbe
push
lahf
push
and
sbb
dec
es
mov
xchg
push
shl
inc
je
jmp
pop
adc
repnz
clc
sbb
and
loopne
lods
pop
inc
popa
push
and
inc
adc
push
sub
mov
out
fidivr
mov
lea
pushf
es
inc
lahf
pop
sub
mov
rcl
add
fistp
leave
mov
jae
in
cmps
jb
mov
lods
mov
ins
dec
(bad)
mov
fistp
ss
sbb
out
nop
out
or
push
out
popa
mov
sub
test
jbe
adc
cmps
cli
jg
xor
sub
popa
rcr
jecxz
sub
or
pop
arpl
int3
mov
sub
push
xor
mov
mov
clc
mov
mov
pop
jno
sub
outs
adc
mov
mov
repz
test
sbb
(bad)
hlt
adc
dec
dec
or
pop
fdiv
add
sbb
aas
dec
outs
sub
shr
mov
test
out
adc
push
pop
inc
arpl
stc
loope
stos
inc
push
fwait
pop
push
jne
out
rol
aaa
mov
xor
fst
mov
test
inc
inc
inc
mov
xchg
sbb
pop
xor
mov
pushf
leave
iret
dec
push
add
add
xor
push
push
bound
aaa
xchg
leave
cmps
mov
xor
sbb
mov
ins
lahf
jl
ror
push
push
push
fs
mov
sub
gs
add
add
and
imul
das
inc
das
jb
enter
sbb
sahf
imul
sar
and
rol
sbb
lea
xchg
fs
and
aas
pushf
clc
and
xchg
and
out
lock
dec
add
xor
jne
(bad)
mov
dec
dec
rol
sbb
aaa
aaa
dec
xor
mov
sub
pop
mov
xchg
mov
xchg
ins
sahf
mov
shr
jbe
adc
push
mov
ja
rcr
fadd
out
and
inc
mov
ss
lods
ins
je
sub
mov
mov
mov
loope
aaa
lea
mov
push
pop
or
and
pop
mov
shr
icebp
jg
fnstsw
cld
adc
mov
mov
push
push
rcr
ins
jo
push
jmp
adc
cmp
inc
out
dec
add
call
add
sub
sub
cli
push
mov
sub
outs
in
dec
bound
retf
jmp
dec
mov
push
loope
call
push
lods
addr16
mov
xchg
and
jmp
jle
mov
into
or
js
cmps
sub
lea
adc
dec
in
in
jae
jo
sbb
outs
in
xor
les
stos
int
sar
pop
sub
scas
xor
jl
pop
je
xchg
push
ss
inc
cmp
or
push
fst
in
les
add
sbb
add
xchg
pop
(bad)
cmp
adc
push
mov
aad
dec
push
jmp
push
cvtdq2ps
nop
mov
pop
dec
cli
out
(bad)
aad
pushf
pop
sahf
xchg
inc
cmp
hlt
pop
inc
cmc
sub
sub
nop
xor
add
rcr
ficomp
shl
dec
xor
pop
pop
test
arpl
fisttp
scas
sar
enter
add
call
mov
inc
jp
cmc
mov
or
fsub
addr16
loop
mov
cmp
dec
fwait
je
sahf
add
xchg
mov
jp
add
clc
mov
mov
fwait
sar
push
mov
sub
(bad)
pop
out
mov
cmp
mov
push
push
div
sahf
in
test
add
or
les
add
mov
rcl
js
cmp
stos
sbb
pop
dec
ffree
stos
(bad)
dec
fs
xchg
cmp
loopne
aad
mov
xlat
div
(bad)
cmp
mov
xor
xchg
jmp
addr16
sub
test
(bad)
out
repz
pop
das
sub
mov
inc
out
push
mov
inc
jl
cmp
int
js
jmp
aas
mov
cld
in
pop
rcl
imul
sar
xor
arpl
mov
jmp
dec
iret
mov
xchg
pop
or
add
dec
push
jp
push
(bad)
sar
clc
ss
stos
xlat
aas
push
pop
popf
and
(bad)
outs
icebp
sub
xchg
pop
adc
cmps
sahf
(bad)
ror
sbb
bswap
xchg
sbb
sti
repz
lods
daa
xchg
test
or
lods
(bad)
push
or
push
icebp
sar
push
mov
mov
sti
js
leave
ds
or
lahf
or
pop
loopne
aad
loope
inc
xchg
fadd
add
ret
dec
popa
sti
cmp
cmp
add
ficomp
xchg
inc
retf
js
and
pop
sti
icebp
inc
out
repz
sub
dec
or
push
cmp
and
into
(bad)
dec
mov
adc
sbb
add
and
jecxz
outs
ins
push
xchg
sbb
ror
fiadd
pop
scas
xchg
int3
cdq
retf
lods
dec
aaa
imul
shr
js
jmp
dec
std
fsub
mov
nop
iret
and
fnstsw
mov
jb
push
aaa
mov
inc
push
dec
ror
sub
push
sti
movs
mov
and
add
aaa
jmp
mov
mov
mov
cmp
lds
popa
adc
jecxz
dec
mov
pusha
sub
(bad)
test
mov
sbb
ins
cdq
dec
push
push
xlat
or
jbe
mov
lahf
fcom
mov
repnz
xor
dec
adc
cmp
popa
push
sub
stc
sub
xor
loop
adc
fldcw
add
mov
xchg
fs
jno
xlat
cmp
jp
lea
push
shl
es
out
in
leave
mov
cmp
sub
xor
loop
mov
xor
push
fisub
push
jno
jecxz
xchg
push
mul
push
jbe
icebp
jno
scas
push
outs
xchg
ins
cmp
jno
dec
mov
pop
(bad)
dec
call
cmc
mov
pop
sar
mov
mov
daa
das
inc
xchg
retf
lea
pop
inc
retf
aad
sbb
mov
push
pusha
pop
repnz
je
push
xchg
pop
cwde
dec
xchg
stos
lahf
or
push
or
pop
add
sub
mov
or
and
pop
sbb
sbb
cmp
ret
push
dec
pop
into
pushf
push
loop
lea
out
bound
paddsb
pusha
xor
push
add
outs
push
cld
xchg
icebp
push
icebp
or
mov
xor
mov
movs
dec
or
pop
call
sar
in
inc
jns
int
jno
mov
fs
loop
or
outs
arpl
cmp
pop
mov
jl
sbb
inc
inc
mov
mov
mov
dec
pop
cld
sub
lods
imul
sbb
clc
stos
fcomp
push
mov
sbb
movs
and
pusha
daa
xchg
and
push
inc
aaa
aaa
scas
hlt
in
stc
out
aaa
push
inc
jb
dec
inc
idiv
fsubr
xor
mov
out
xchg
ds
imul
sbb
out
add
and
and
pop
xor
(bad)
into
and
iret
test
bnd
mov
scas
(bad)
mov
sub
mov
mov
sahf
push
call
imul
push
dec
push
sbb
cmps
sbb
movs
out
scas
aam
push
xor
js
add
js
pop
ss
mov
mov
pop
ds
test
cmp
dec
repnz
sub
push
jne
mov
call
sbb
(bad)
das
in
adc
imul
(bad)
bound
sub
mov
mov
movs
nop
jmp
hlt
in
adc
out
leave
sbb
pop
cs
int3
cmc
and
fcomp
xchg
aas
je
loop
repnz
sahf
rcr
fsincos
inc
pop
gs
jmp
cmc
pop
sbb
adc
mov
add
push
or
dec
jbe
test
fwait
cmps
xchg
jge
stos
pop
mov
call
mov
popf
and
mov
dec
and
xor
lahf
sbb
loop
push
and
push
es
sar
dec
xchg
call
cmp
call
and
es
push
std
inc
pop
cmp
pop
not
lds
sbb
mov
(bad)
pop
enter
and
enter
add
jle
les
sbb
mov
jl
xchg
jo
adc
cmps
add
adc
sbb
xlat
imul
sahf
out
sbb
jge
ja
inc
cmp
add
je
lods
push
mov
dec
fdiv
outs
push
add
and
nop
mov
into
dec
rcl
mov
xor
or
in
fistp
fidiv
mov
inc
out
pop
pop
mov
retf
and
sub
xchg
mov
sbb
and
jmp
inc
cmp
int3
or
ss
pop
adc
push
dec
adc
outs
cwde
dec
fldpi
(bad)
dec
sbb
cmp
(bad)
fisub
ins
inc
jo
xchg
push
xchg
xor
loope
xor
sbb
jne
hlt
leave
mov
stc
pop
push
push
cmp
push
ret
jb
xor
inc
rcl
sub
dec
sub
and
lods
in
ja
shr
mov
loop
and
mov
lahf
add
popa
xchg
push
fst
cli
sti
ret
nop
lock
inc
push
loope
cmp
mov
adc
jg
jbe
add
addr16
repnz
imul
sub
pop
mov
add
cld
pop
jge
outs
outs
sbb
jmp
in
add
adc
cmp
ret
push
pop
dec
into
xchg
jp
push
and
push
and
xor
dec
sbb
mov
pop
aaa
xchg
in
cld
out
popa
xchg
sub
out
add
xchg
repnz
mov
rol
sub
mov
stos
adc
lods
popa
sub
mov
sbb
mov
aad
retf
adc
pop
xor
in
add
mov
jne
dec
in
xor
gs
std
add
mov
adc
jb
imul
imul
movs
mov
mov
inc
test
(bad)
nop
add
push
(bad)
(bad)
test
xchg
mov
dec
adc
cmp
ret
adc
das
sbb
mov
jg
xchg
pop
in
cs
jo
mov
xchg
mov
xchg
and
pop
bound
inc
into
pop
lods
int
inc
imul
shl
mov
or
jae
rcl
mov
inc
ins
inc
jmp
rcr
and
mov
push
loope
outs
sbb
mov
mov
adc
out
xchg
(bad)
or
sahf
pushw
mov
ret
pop
ss
pop
and
cmp
rcl
(bad)
adc
test
mov
ds
addr16
out
imul
and
ins
cmc
inc
leave
push
cmps
jno
lea
sti
pop
(bad)
mov
and
rcl
mov
push
ds
sub
es
mov
in
dec
push
mov
ins
ins
scas
imul
jle
idiv
cmp
push
in
sbb
xchg
adc
std
pop
jo
and
imul
cs
cmps
fs
(bad)
or
arpl
adc
pop
ffreep
std
sahf
and
xor
out
sub
cmp
push
xchg
xchg
or
ret
ret
xchg
mov
xor
add
dec
pop
ds
call
shl
push
fxam
jbe
inc
ins
xchg
jo
inc
rol
mul
jnp
sbb
xor
arpl
pop
nop
or
sbb
mov
adc
aad
mov
je
loop
fdiv
shl
and
stc
inc
in
pop
push
out
pop
in
jmp
enter
xchg
add
jmp
xor
sbb
lahf
(bad)
sti
adc
dec
test
pop
neg
data16
loopne
push
or
loop
xchg
mov
test
(bad)
mul
(bad)
inc
dec
pushw
gs
call
pop
jns
xchg
in
sbb
jg
adc
fsubr
movs
adc
jo
idiv
(bad)
adc
out
adc
xchg
hlt
jl
fldcw
mov
xor
std
shr
push
dec
inc
adc
das
ins
dec
jmp
xchg
jge
pop
xchg
pop
cmp
sbb
cs
inc
xlat
inc
and
imul
ja
add
fwait
movs
sbb
shl
cmps
aam
ins
xchg
xchg
mov
aaa
stos
mov
xchg
push
outs
sahf
inc
ss
push
or
cdq
popa
or
cli
sub
out
inc
frstor
push
cld
int3
lods
out
sub
retf
lds
sub
mov
dec
ins
jns
sbb
ret
mov
add
neg
stos
sub
inc
mov
aam
xor
bound
ret
scas
jae
push
sub
adc
lods
mov
int3
gs
adc
leave
add
scas
rcl
adc
ror
std
movs
jb
fst
sub
adc
or
xchg
lds
dec
popf
aad
icebp
or
into
xchg
outs
push
add
pop
(bad)
sub
rcr
jmp
imul
inc
es
imul
mov
(bad)
cld
pusha
jae
jno
pop
jns
or
out
mov
sbb
mov
fbstp
and
sbb
mul
stos
in
fisttp
and
sub
dec
(bad)
jns
out
mov
mov
fisttp
sbb
and
psubsb
pop
ret
pop
dec
sub
jmp
cmp
mov
pop
push
movs
out
mov
ret
mov
push
sbb
inc
inc
int
aaa
int
cld
scas
mov
mov
bound
push
js
das
xchg
es
inc
rcr
ss
jne
sbb
bound
(bad)
movs
(bad)
imul
jno
(bad)
movs
pushf
xchg
xchg
xchg
xor
pusha
or
leave
xor
inc
mov
adc
push
retf
(bad)
in
and
pop
nop
jae
fnstsw
imul
out
inc
iret
push
imul
lods
sti
sbb
or
sbb
cmps
dec
xor
aam
stos
mov
jmp
imul
bound
fwait
mov
gs
push
xor
imul
(bad)
lahf
sbb
cmps
xchg
cmc
inc
stos
test
pop
mov
push
stos
xchg
lahf
pop
(bad)
in
xor
and
jns
xchg
mov
adc
or
or
(bad)
clc
popa
(bad)
dec
sbb
call
push
jb
or
dec
xchg
cs
retf
xchg
call
xor
outs
inc
mov
cmp
sbb
push
ffree
iret
sar
adc
loop
aam
jmp
jbe
sar
repnz
inc
ds
dec
xchg
das
out
jle
sbb
gs
scas
retf
xchg
fidiv
(bad)
jl
xlat
sub
pop
sbb
jg
jmp
mov
fisttp
cmp
dec
add
hlt
add
adc
and
sub
es
(bad)
mov
ja
mov
leave
shl
dec
push
repnz
stos
and
in
push
xchg
iret
push
mov
push
mov
movs
cli
ins
add
repz
pushf
or
(bad)
pop
mov
push
dec
and
lds
cwde
cmp
out
add
sbb
jg
lock
stos
mov
call
xor
push
pop
xchg
sub
pop
push
nop
mov
jp
cmp
mov
iret
add
cwde
push
lods
bound
pop
in
jno
sub
jbe
scas
mov
enter
push
loop
and
jo
mov
pop
adc
xchg
outs
clc
inc
adc
xchg
cdq
inc
inc
mov
out
sbb
adc
sahf
dec
inc
call
int
sbb
pop
(bad)
daa
outs
pop
inc
stos
and
neg
xchg
das
mov
and
dec
dec
mov
and
xlat
cld
out
mov
mov
mov
retf
stos
add
push
jecxz
xor
movs
ret
and
xchg
inc
repnz
jp
push
xorps
mov
add
mov
(bad)
mov
dec
mov
cmp
imul
or
jp
fwait
es
sbb
xor
inc
retf
ins
dec
(bad)
int3
mov
or
retf
adc
sub
es
cld
xchg
in
repnz
aam
iret
cmp
mov
jne
sub
ss
loopne
shr
mov
jmp
mov
mov
sub
add
movs
std
xor
and
xchg
lods
xchg
adc
lock
pop
data16
outs
pop
or
mov
push
popa
mov
std
mov
xchg
lods
mov
sbb
daa
mov
lds
inc
mov
out
inc
push
xlat
popa
es
mov
rcl
push
adc
cmps
push
and
shl
jle
andps
or
sbb
xor
or
rcl
ins
into
loop
shl
add
mov
cmp
out
mov
iret
pop
add
pop
mov
outs
fsubr
(bad)
sti
pop
sbb
dec
call
dec
into
push
enter
ins
and
push
adc
or
push
inc
repz
test
mov
shl
sti
into
jne
ret
imul
dec
cli
dec
shl
sub
adc
das
mov
mov
mov
cmp
and
inc
jmp
sbb
bound
jae
dec
sbb
test
clc
fnsave
in
pop
cs
push
sbb
push
xchg
dec
mov
sub
push
ret
dec
ins
xchg
(bad)
mov
jge
aaa
sub
and
mov
push
mov
xlat
jne
in
retf
fdivr
sub
mov
cmp
in
xchg
call
pusha
inc
xlat
dec
hlt
aaa
and
jle
cmps
fld
xor
xchg
aad
xchg
iret
stos
test
test
cs
mov
mov
mov
mov
mov
cmp
stos
outs
inc
je
inc
xchg
adc
xor
and
stos
sub
(bad)
mov
enter
push
cmp
std
neg
(bad)
cmps
outs
in
adc
push
gs
push
mov
and
or
push
(bad)
mov
xchg
push
in
sbb
push
jge
enter
push
jns
cs
out
and
or
jnp
scas
xor
push
sub
mov
repnz
sub
iret
loop
xor
or
mov
inc
popf
retf
cmp
add
mov
inc
sbb
lds
ror
cmp
mov
repnz
pop
je
adc
jbe
jge
out
add
mov
addr16
in
mov
retf
lds
loope
ror
inc
xor
jb
fisubr
add
mov
push
pop
aas
pop
in
outs
sti
jmp
daa
jno
dec
cmp
cmp
mov
test
jmp
and
mov
push
or
int
movs
movs
add
push
push
loope
repnz
pop
fisttp
imul
(bad)
adc
lods
ret
inc
je
dec
ja
aaa
sub
pop
and
inc
pop
sbb
pop
dec
lods
ins
clc
shr
inc
push
lahf
and
mov
fs
(bad)
ds
and
jl
adc
xor
fwait
outs
jle
jmp
sbb
mov
sbb
lock
fidivr
stos
movs
jmp
dec
mov
test
lds
lahf
jg
or
popf
outs
mov
hlt
xchg
jnp
adc
mov
stos
push
cmp
rol
stos
movs
cmp
push
mov
cs
sub
js
mov
push
pop
inc
call
xor
aad
fst
push
(bad)
movs
movs
int
dec
std
ds
out
inc
stos
aam
pop
(bad)
stos
cmp
(bad)
fnstsw
clc
mov
inc
sbb
sbb
jo
push
ja
adc
mov
push
out
daa
popf
fmul
nop
cmp
jge
adc
xchg
test
jmp
mov
mov
sbb
ror
stos
ins
lods
push
xchg
push
mov
call
(bad)
cli
push
stc
mov
in
pop
dec
dec
js
ret
jb
adc
inc
(bad)
inc
pushf
cld
mov
add
mov
rcr
cmps
out
jmp
jl
inc
jo
shl
imul
jns
adc
cmp
push
pop
push
sbb
add
adc
sub
mov
test
sbb
aam
mov
inc
lock
sbb
es
mov
mov
leave
jl
in
dec
mov
sub
mov
jecxz
jecxz
leave
xor
std
outs
pop
jno
outs
pop
loopne
movs
sbb
cld
add
int3
lds
pop
push
cwde
add
inc
cmp
xchg
stos
adc
ret
jg
mov
cmps
cmp
xchg
jno
stos
add
jmp
leave
sbb
mov
jae
jmp
mov
sbb
test
mov
and
or
(bad)
xchg
dec
outs
dec
or
in
xchg
popf
add
das
dec
mov
pusha
mov
pop
fld
inc
ror
std
fwait
test
push
les
popf
or
test
ss
shr
ins
fnsave
dec
or
push
or
in
stos
xchg
fild
call
push
xchg
pop
addr16
add
jb
stos
shr
fcmove
movs
and
mov
inc
bnd
mov
pushf
in
xor
cdq
das
xchg
sbb
sbb
repnz
adc
pop
push
scas
int
inc
cmp
ss
mov
loope
in
mov
shl
lahf
scas
dec
xchg
adc
into
and
leave
movs
inc
out
les
push
dec
adc
call
or
jmp
mov
push
xchg
(bad)
mov
in
cmp
and
mov
cwde
inc
inc
fnsave
popa
js
cmp
rcr
xchg
mov
loopne
pop
push
push
stos
cmps
popf
xchg
ins
enter
or
adc
pop
add
sbb
cmps
jo
xlat
adc
pop
and
jmp
ret
ja
inc
or
pop
inc
mov
pop
popf
fs
inc
(bad)
ret
pop
lahf
test
pop
lods
push
nop
test
je
sbb
mov
imul
push
add
mov
rcr
mov
sub
add
inc
(bad)
lock
repnz
jnp
jmp
dec
cmp
mov
jno
mov
sbb
(bad)
out
popf
jge
mov
or
pop
cmps
cmp
shr
sub
mov
out
push
and
scas
push
mov
mov
push
jmp
sub
loopne
mov
retf
shl
push
sub
mov
mov
in
push
lock
sbb
cmp
fcompp
xchg
(bad)
and
mov
cmc
loope
mov
out
or
push
push
xor
shl
fidiv
ins
pop
mov
mov
push
adc
add
pop
xor
mov
mov
repz
xor
arpl
cdq
jle
push
fs
daa
and
push
xchg
and
xchg
pop
pop
call
cmc
ins
pop
rcr
loop
xchg
lock
sti
lods
out
sbb
scas
dec
arpl
scas
add
jb
pusha
sub
std
fidivr
sahf
call
and
mov
aas
dec
sbb
ins
push
test
adc
cmp
idiv
jnp
push
icebp
jnp
jp
rcr
sub
xor
pusha
mov
cmp
dec
inc
mov
lahf
loope
shl
in
xor
std
in
fdiv
das
inc
nop
mov
dec
adc
xor
sbb
addr16
ds
daa
jle
jl
sbb
int
js
xor
jecxz
push
push
jge
(bad)
popa
adc
push
imul
cmp
sbb
sti
adc
dec
mov
jge
test
hlt
or
jo
push
mov
mov
adc
(bad)
cmc
inc
pop
sbb
(bad)
repz
or
gs
icebp
jle
sbb
jo
sahf
fiadd
jo
inc
and
pop
pop
xor
(bad)
mov
(bad)
repz
sub
and
mov
or
sub
ret
adc
dec
jns
retf
xchg
int
mov
(bad)
shl
jp
mov
test
mov
shld
dec
in
and
aad
xchg
sub
stos
cmp
(bad)
test
push
cld
mov
xchg
jne
sar
aaa
mov
adc
jb
dec
pop
xor
push
jo
nop
dec
icebp
movs
sbb
and
xor
push
mov
call
rcl
rol
repz
clc
lahf
sbb
imul
sub
adc
repz
daa
stos
(bad)
stc
cmp
cli
sbb
ficomp
in
cmc
push
(bad)
cld
mov
test
ins
xchg
xor
lock
jbe
pop
icebp
or
sub
mov
add
pushf
imul
aaa
fs
rcr
mov
bnd
std
leave
mov
sti
sub
xchg
pop
dec
jl
ins
pop
test
mov
xor
loope
sub
ja
pushf
inc
push
pop
icebp
xor
ret
or
repz
cs
out
fbld
enter
(bad)
addr16
inc
pop
ds
or
mov
fsubr
mov
test
invd
pop
xor
push
mov
or
sub
cmp
mov
sbb
and
inc
xor
sub
addr16
aas
hlt
scas
mov
mov
jl
rcl
aad
push
fstp
cwde
lea
and
mov
pushf
or
sub
outs
popf
retf
cli
push
leave
xchg
int
imul
mov
cli
(bad)
out
jo
outs
push
call
and
rcr
(bad)
fucomp
cmp
pop
mov
adc
imul
scas
push
ret
adc
jb
imul
rcr
adc
cmc
xchg
ins
xor
lds
xchg
jle
sar
ins
loope
dec
sbb
shl
pushw
push
or
gs
test
dec
dec
movs
stos
push
xchg
jno
in
xor
sub
arpl
jbe
pop
mov
inc
test
and
mov
rcr
mov
adc
xor
lock
sbb
xor
cmp
jmp
pop
xchg
mov
in
dec
xor
sub
dec
(bad)
jbe
push
inc
out
(bad)
rol
(bad)
fisubr
stos
cmps
or
imul
adc
sbb
rcr
popf
push
div
and
xchg
shr
scas
dec
fld
cwde
lods
mov
inc
push
push
cmps
inc
stos
(bad)
out
scas
or
inc
jmp
(bad)
in
js
mov
pop
cmp
test
jnp
fisubr
sub
movs
push
mov
mov
div
and
or
(bad)
sbb
jbe
sbb
mov
retf
fstp
xchg
xchg
hlt
jo
pop
pushf
repnz
fild
jae
shl
cmp
aaa
pop
cmp
call
or
es
in
push
push
out
inc
mov
sahf
jmp
iret
pop
sub
ret
xchg
sub
int3
aad
std
pop
cmp
sub
pop
(bad)
data16
call
push
push
into
rcr
mov
mov
mov
xor
jbe
test
sub
pop
or
pop
or
sbb
popa
pop
(bad)
push
cs
fldenv
das
sub
sbb
sbb
mov
push
inc
std
cmp
ret
sbb
sbb
xor
pop
lods
imul
add
inc
aam
push
adc
add
mov
mov
sub
sub
js
pushf
pop
pop
fisubr
mov
in
retf
rol
mov
pop
jns
js
fild
mov
test
test
fidivr
xchg
xchg
xchg
pop
lds
and
(bad)
jg
ret
loop
cmp
out
pop
loope
stc
and
mov
(bad)
int
jmp
int3
mov
(bad)
stc
popa
ins
pushf
mov
int
(bad)
gs
cs
cmp
mov
stos
inc
jl
xor
sbb
(bad)
movs
in
adc
jle
cdq
cwde
inc
ss
and
mov
lahf
mov
cdq
out
sbb
dec
stos
xor
xor
je
jb
inc
ret
mov
or
xchg
and
hlt
xor
and
or
or
mov
lods
std
adc
into
mov
retf
test
hlt
dec
sub
or
mov
es
xor
dec
leave
js
xor
retf
das
ins
in
scas
ret
lds
push
jle
popf
inc
fs
fmul
sbb
mov
push
fmul
xor
sti
aaa
test
inc
jo
adc
inc
cli
push
rol
mov
aas
jg
stc
jne
pop
aaa
adc
mov
clc
ret
in
(bad)
cmp
mul
rol
les
jns
clc
rol
loop
dec
cmps
mov
test
clc
and
popa
xor
dec
test
mov
add
ficom
push
mov
scas
push
mov
and
es
mov
addr16
adc
push
pop
push
leave
mov
jmp
in
pop
push
push
pop
or
retf
dec
pop
push
gs
nop
add
imul
pop
push
mov
and
outs
xor
in
push
out
mov
mov
inc
xlat
mov
push
fsub
(bad)
push
aaa
ret
(bad)
in
mov
int
cdq
repz
int
push
add
adc
test
call
xchg
inc
push
out
pop
adc
inc
stos
out
xchg
jecxz
std
cmp
(bad)
mov
sbb
ins
inc
adc
test
ds
adc
xchg
cmp
sbb
sbb
sahf
js
mov
push
int
jno
js
xor
mov
repnz
jl
push
push
or
sbb
add
std
and
add
mov
mov
or
jg
xchg
repnz
int3
cmc
das
jnp
mov
cdq
mov
(bad)
mov
push
pop
adc
mov
dec
cmp
scas
pop
int
add
push
in
sub
aad
or
add
(bad)
mov
int3
inc
cdq
inc
and
test
ret
clc
cli
gs
scas
sub
jns
jge
inc
jo
fst
sbb
(bad)
test
mov
arpl
mov
pop
je
(bad)
mov
pop
pop
movs
dec
xchg
call
sub
pop
(bad)
out
push
pusha
inc
daa
in
sub
mov
jmp
outs
lahf
addr16
ds
movs
push
sbb
push
pop
in
mov
popf
adc
xchg
sbb
mov
pushf
jne
xor
mov
je
dec
cmps
and
in
mov
dec
xchg
stos
std
mov
out
clc
inc
imul
repz
dec
ss
push
mov
lea
dec
mov
mov
mov
adc
fidiv
cdq
or
mov
cwde
mov
fcomip
lods
xchg
mov
pop
jle
inc
lds
das
fidiv
ror
das
mov
xchg
pop
push
xor
and
hlt
jl
inc
call
mov
(bad)
lods
sub
or
pinsrw
cmp
jno
pop
repz
cwde
pop
push
movs
(bad)
jmp
nop
retf
fs
add
xor
sbb
pop
mov
cld
inc
scas
outs
data16
aad
ins
or
add
add
cs
mov
or
fsub
cmp
enter
ffreep
into
mov
aas
test
sub
nop
mov
xor
rcr
push
neg
mov
or
push
(bad)
xchg
jg
xchg
or
adc
gs
mov
aaa
cmp
adc
cmp
xlat
sub
das
in
inc
out
cmps
add
fdivrp
fld
mov
dec
xlat
icebp
nop
lahf
std
ja
rcr
in
test
ret
inc
mov
stos
dec
lea
sbb
aaa
shl
xor
repz
int
dec
push
ins
push
leave
movs
cmps
inc
jmp
mov
mov
hlt
rcr
jl
(bad)
outs
clc
add
xchg
stos
(bad)
call
push
(bad)
and
jg
inc
cmc
aad
daa
pushf
cli
or
jae
dec
dec
mov
popa
test
jmp
ja
xor
jae
fstp
push
pop
std
mov
mov
cld
mov
nop
aad
shl
inc
shl
adc
push
sbb
and
mov
sahf
pop
aas
push
pop
push
and
(bad)
sub
(bad)
adc
shr
test
pop
or
jnp
pop
sub
xor
std
mov
mov
into
sbb
or
and
xchg
addr16
test
fwait
out
push
jl
dec
fucomip
ds
ss
aaa
push
daa
idiv
pop
mov
clc
dec
mov
cmp
push
lahf
icebp
xchg
dec
mov
(bad)
pop
xchg
or
js
ds
sbb
dec
push
hlt
inc
pop
sub
cs
pop
sar
mov
jbe
or
jg
sub
add
and
jge
jae
and
clc
ret
mov
fst
adc
ja
sub
lock
add
adc
jge
(bad)
mov
ret
sbb
inc
hlt
fdivr
sbb
mov
mov
js
jg
pushf
cmp
mov
aaa
out
aaa
mov
(bad)
leave
call
lods
fldenv
rol
(bad)
in
cmp
xor
mov
ins
test
mov
(bad)
loope
ins
sbb
in
rcr
test
shr
cmp
inc
sbb
int
xchg
inc
dec
lods
int3
pop
mov
loop
repz
push
cmps
das
add
inc
sub
sub
cld
mov
fistp
jge
xchg
fcomp
int
push
je
dec
mov
outs
fwait
int
mov
xor
or
jnp
mov
fisub
das
jb
imul
dec
es
push
add
mov
pop
lock
sub
jnp
jg
movaps
jecxz
adc
fdiv
daa
int3
or
shl
xchg
outs
outs
enter
mov
sub
mov
pop
or
addr16
movs
inc
imul
scas
inc
repz
and
pop
movs
loopne
xchg
mov
xchg
mov
or
xchg
ret
stos
js
add
call
mov
or
inc
jae
sbb
cmp
mov
movs
rcr
jo
push
sub
loopne
mov
or
cmp
cwde
and
push
or
pusha
jecxz
jo
jp
call
in
popa
adc
rcr
fldenv
mov
mov
add
jecxz
xchg
sub
push
stos
dec
jge
int
sbb
test
pop
(bad)
pop
jae
jo
xchg
imul
loopne
jle
lahf
mov
cmp
mov
mov
imul
xor
aaa
mov
xor
in
loop
jno
mov
out
xchg
xchg
fstp
jne
jmp
sti
call
mov
loop
movs
and
dec
mov
iret
lock
jmp
xor
stos
adc
dec
sub
add
xchg
cmp
push
sbb
stos
mov
pushf
dec
mov
inc
out
inc
outs
inc
mov
or
loope
and
mov
jo
or
loope
or
daa
jne
jge
push
cwde
jmp
add
sub
dec
mov
cmp
jae
dec
sub
adc
or
push
out
outs
add
xchg
push
retf
jbe
mov
or
pop
scas
sub
out
add
inc
or
add
aam
push
xchg
mov
into
sbb
mov
scas
pop
jle
sahf
fst
pop
jle
imul
ins
pop
or
pop
push
stos
jae
jae
retf
es
or
loope
pop
ja
pop
add
ss
aaa
cwde
retf
sbb
push
or
or
aad
push
pop
lods
in
pop
sub
cmp
loopne
dec
test
pop
ja
sbb
sar
pop
or
pop
xor
pushf
(bad)
xor
int3
xor
mov
nop
push
outs
rcr
mov
mov
ds
mov
cmp
jl
arpl
lods
add
and
xor
sub
sub
xchg
adc
dec
mov
cmp
mul
push
fldenv
outs
mov
xor
inc
and
popf
dec
gs
push
shr
adc
mov
and
mov
push
ret
sbb
cs
push
lock
les
mov
cli
sahf
scas
aaa
mov
arpl
in
adc
xlat
inc
mov
sete
adc
imul
sub
fdivp
jb
push
pop
lock
inc
cs
xchg
cmp
xchg
sbb
mov
dec
(bad)
iret
scas
pop
inc
ret
adc
into
pop
jmp
sub
arpl
(bad)
push
push
mov
push
mov
adc
add
sub
sub
and
dec
imul
mov
jno
popa
and
outs
add
and
xchg
cmp
ja
(bad)
cs
dec
xlat
ja
xchg
push
out
sbb
test
stc
cs
cmp
imul
inc
mov
xor
add
or
pop
shr
mov
frstor
mov
in
test
pop
pop
fucom
dec
pop
movs
cmp
cld
mov
pop
fisubr
push
loope
pop
nop
fisub
dec
fwait
retf
outs
mov
adc
movs
mov
jbe
xor
fcmovbe
stos
(bad)
pop
pushf
jg
jl
cmp
imul
sbb
stos
cmp
fs
dec
jmp
mov
lea
xor
mov
cmp
int3
mov
pop
xchg
scas
cmp
ficomp
pop
out
inc
fild
dec
cmps
jae
(bad)
push
test
enter
mov
add
xlat
ror
ds
sbb
dec
sub
int
int
ror
push
mov
ja
ds
sub
fwait
mov
push
xlat
sar
and
out
out
lea
inc
bound
mov
ins
sbb
mov
arpl
(bad)
and
and
or
pop
ret
or
mov
dec
xchg
js
cld
mov
cmps
add
add
xor
ds
ret
cs
ins
rcr
sbb
clc
add
mov
scas
pop
not
movs
sub
aam
sub
dec
fsub
jmp
out
and
and
(bad)
adc
scas
add
add
(bad)
loope
pop
shl
jnp
mov
add
dec
add
cld
leave
scas
in
add
scas
out
sbb
pop
mov
mov
or
adc
inc
ins
xchg
mov
sub
mov
scas
loopne
popf
jne
cs
sbb
pop
and
mov
test
cmp
scas
inc
call
jae
pop
mov
test
add
mov
cmp
push
mov
stos
lahf
test
mov
sub
mov
xchg
cs
and
lea
mov
push
lds
repnz
inc
push
mov
or
mov
loop
ss
xor
adc
or
clc
mov
iret
call
push
push
push
push
out
push
xchg
cmp
jmp
call
mov
dec
sbb
dec
out
popf
stos
xchg
pop
push
mov
pop
inc
add
dec
mov
mov
mov
jp
xor
dec
bound
or
fs
outs
paddb
daa
(bad)
aam
pop
repnz
jb
fnstsw
ins
es
int
or
leave
icebp
jg
pop
les
das
cmp
dec
dec
(bad)
(bad)
call
mov
inc
les
sti
or
push
cmps
mov
xchg
dec
ins
add
dec
cmp
(bad)
stc
aaa
or
adc
mov
repnz
sub
stos
pandn
fstp
cmp
or
xchg
(bad)
daa
cmc
scas
dec
das
scas
mov
in
into
push
sub
inc
dec
push
pop
and
ficomp
jl
add
bound
cmp
pop
call
loope
jl
das
and
gs
mov
jecxz
int3
sbb
adc
clc
imul
sub
lea
mov
cmp
mov
aaa
cmps
sti
lds
fs
mov
and
xchg
icebp
push
fst
mov
pop
mov
repnz
test
sbb
ds
icebp
dec
sahf
jns
mov
sbb
mov
sti
jns
pop
js
cmp
push
ror
cmps
cmp
addr16
scas
jmp
(bad)
popa
xchg
popf
inc
xchg
cmp
scas
lahf
push
adc
(bad)
pop
(bad)
fwait
les
mov
cmp
(bad)
jp
clc
nop
call
and
inc
and
adc
repz
pop
aam
mov
jns
or
jb
out
mov
xchg
or
fimul
lock
lods
lods
movs
xlat
repnz
movs
mov
add
(bad)
and
push
stc
out
or
and
int
cmp
dec
jbe
cmps
mov
mov
pop
or
es
pop
adc
or
mov
sbb
fld
adc
cli
or
(bad)
int
xchg
pop
jle
out
jno
xor
push
xchg
lahf
dec
in
adc
lea
sbb
je
push
xor
lahf
add
ret
cs
in
imul
fnstcw
mov
push
xor
sub
pop
imul
mov
cmp
adc
movs
sbb
je
(bad)
mov
pop
call
push
test
mov
addr16
movs
cdq
cmp
js
sub
and
and
arpl
add
adc
pop
mov
add
jecxz
out
scas
bound
cmp
push
jg
push
popf
add
jbe
test
arpl
or
ficom
out
lahf
xchg
mov
jb
fsub
cmp
xor
(bad)
mov
adc
mov
add
pusha
enter
adc
inc
cmova
call
or
scas
mov
jmp
pop
(bad)
pop
repz
ins
adc
push
jno
cld
addr16
(bad)
std
lds
aaa
xor
mov
cmove
mov
jnp
call
jecxz
aas
inc
sub
or
int
fs
cmp
call
repnz
int3
push
loopne
adc
imul
fst
push
out
lock
xlat
jl
das
icebp
in
sti
retf
jbe
dec
mov
lock
retf
push
and
jp
fstp
stc
cld
enter
(bad)
mov
loopne
inc
out
jo
in
(bad)
mov
(bad)
jle
stc
sbb
mov
iret
or
mov
cmp
lods
xchg
push
jecxz
push
inc
call
sub
out
pop
call
adc
fdivr
outs
(bad)
out
jmp
repnz
loop
push
mov
(bad)
pop
sbb
mov
scas
push
call
cmp
inc
je
in
imul
icebp
loope
fdecstp
pusha
push
push
sub
mov
aad
cmp
push
pop
xor
xor
lods
loopne
in
sar
xor
mov
iret
xor
in
lods
xchg
inc
xchg
(bad)
in
das
xchg
mov
int3
outs
fiadd
daa
movs
icebp
sbb
xor
adc
push
add
arpl
cli
or
movs
jnp
cmps
aad
inc
lea
lods
ret
and
in
jge
cmps
mov
sbb
sub
(bad)
add
jnp
inc
in
sbb
fs
add
pop
jge
test
jmp
lods
int
fisttp
mov
es
inc
add
(bad)
ins
lods
add
movs
dec
in
mov
fmul
ss
mov
int
sbb
pusha
ins
out
test
mov
dec
and
aaa
(bad)
xchg
inc
rcr
and
aas
xchg
or
adc
push
push
xor
jo
fcmove
inc
sub
push
ja
mov
xchg
hlt
cld
imul
or
xchg
and
sub
or
and
push
sbb
pop
pop
(bad)
es
div
fbstp
or
cmp
jg
jne
adc
pop
hlt
(bad)
xchg
je
inc
jmp
xchg
mov
mov
pop
call
inc
pop
push
inc
add
adc
in
(bad)
test
xchg
cs
or
inc
cmp
dec
xchg
es
inc
dec
pop
mov
xlat
sub
(bad)
out
repz
fimul
call
or
ins
or
adc
and
mov
div
mov
fsubr
cmc
dec
inc
cmps
lds
and
sub
inc
mov
pop
ins
mov
and
sbb
out
mov
mov
int3
inc
movs
cmps
xor
xchg
cmps
mov
jmp
inc
fadd
inc
loopne
push
mov
(bad)
sub
sti
nop
fwait
inc
cs
je
jp
push
fbld
push
jmp
adc
lahf
fimul
mov
cmp
adc
sbb
jo
jns
lea
inc
adc
push
pop
test
jmp
les
pop
(bad)
jno
into
add
and
or
jp
shl
mov
xchg
mov
jno
mov
sbb
cmp
mov
lds
out
xor
xor
outs
into
push
xor
inc
es
fisubr
cs
xchg
mov
push
push
mov
scas
and
fcmovb
push
jmp
popf
sbb
mov
stos
popf
jne
ss
mov
push
sbb
loope
dec
xor
xor
jp
loop
inc
movs
mov
dec
rcl
outs
dec
add
add
leave
adc
mov
mov
ins
fmul
pop
repnz
sub
mov
inc
cli
(bad)
cmp
dec
fisttp
cmps
loopne
popa
and
adc
push
adc
stc
fst
add
jno
push
int
add
dec
xchg
pcmpeqb
popf
mov
outs
mov
and
(bad)
sub
into
(bad)
test
repnz
repz
inc
sbb
sub
xor
or
dec
in
sub
cmps
sbb
pop
add
jmp
adc
pushf
add
fdiv
pusha
xor
inc
ds
stos
jbe
pop
and
or
outs
rcr
scas
xor
popf
pop
sbb
pop
std
push
jecxz
(bad)
sbb
leave
xchg
add
ja
(bad)
aam
movs
dec
cmp
rcl
inc
out
cmp
iret
in
push
push
call
(bad)
push
into
loop
es
outs
add
mov
ror
outs
rol
scas
mov
fbld
inc
popa
mov
call
es
and
mov
into
lea
shl
cs
shl
bnd
cwde
jae
pusha
sub
and
icebp
ficomp
push
or
mov
jae
rcr
bound
add
inc
mov
xor
imul
sbb
(bad)
sbb
int3
movs
adc
cld
sahf
xor
js
pop
clc
mov
dec
in
adc
pop
and
fadd
das
sub
inc
xchg
or
xor
jp
mov
out
inc
xchg
loop
fsub
ror
push
and
and
adc
or
mov
mov
mov
add
inc
shl
inc
and
jno
mov
adc
pop
(bad)
mov
loop
inc
inc
sub
pop
loop
ret
shr
fcmovnbe
inc
and
inc
cld
cs
cdq
div
mov
or
push
call
pop
sar
mov
xor
enter
jl
fld
fstp
cmp
inc
(bad)
fld
mul
xor
inc
jno
int
and
add
addr16
xchg
and
inc
dec
lds
leave
leave
ss
xor
aam
pushf
and
jno
mov
sbb
outs
add
or
dec
in
scas
cmp
jb
xor
lods
cmps
add
lahf
(bad)
repz
(bad)
pop
xor
or
les
cmps
or
lock
in
dec
push
mov
push
(bad)
int
clc
data16
pop
and
adc
xor
rol
jge
adc
fmul
stos
(bad)
fldln2
adc
jp
lahf
mov
sub
jmp
sub
sbb
add
xchg
pusha
es
stos
inc
in
xchg
push
(bad)
cli
jo
out
push
push
ret
mov
xchg
mov
scas
jno
cmps
jge
sar
jo
leave
(bad)
adc
fstp
or
mov
sub
dec
xchg
bound
scas
inc
hlt
icebp
add
ficom
(bad)
pop
mov
push
int
loop
repnz
xor
in
mov
mov
ja
retf
int3
aam
or
call
aam
push
enter
xchg
leave
aas
lock
inc
hlt
mov
clc
xchg
bound
mov
inc
out
mov
fs
retf
and
push
pushf
sbb
jne
mov
mov
dec
sub
pop
mov
dec
jnp
lds
pop
dec
stc
jmp
add
xchg
fwait
pushf
xchg
test
jo
jge
and
cs
mov
jecxz
pop
ds
rcl
dec
(bad)
cmp
stos
daa
cdq
loope
xchg
add
push
and
xchg
xor
ds
pop
popf
into
ror
jle
push
mov
jae
lods
bound
and
lds
enter
rol
adc
adc
jbe
nop
retf
lea
mov
loop
inc
lds
sbb
in
push
(bad)
push
inc
neg
pushf
jne
xor
imul
cmp
loop
std
popa
sbb
mov
dec
push
sub
dec
mov
lods
inc
cs
sbb
jmp
cli
jl
mov
pushf
jns
in
dec
adc
sti
stc
and
or
psubusw
sahf
cli
je
movs
mov
div
xor
sbb
out
fs
pop
lods
sbb
(bad)
push
cli
stc
fs
cmp
xor
arpl
xor
aam
in
repnz
mov
xor
mov
movs
ror
mov
je
ss
aas
test
mov
mov
test
push
ret
test
pushf
(bad)
fisttp
push
jg
push
loope
push
jo
rcr
(bad)
fsubr
fnstcw
push
fmul
imul
pop
ins
into
lds
xor
xchg
ins
or
cwde
not
jge
and
adc
xor
fidiv
mov
xor
in
stos
jmp
dec
dec
xlat
jae
icebp
sbb
(bad)
jbe
mov
into
cli
pop
nop
and
test
mov
cmp
leave
sub
and
sub
or
sbb
add
push
pop
dec
aad
inc
ffreep
and
out
or
sub
mov
add
ror
xchg
fs
nop
mov
mov
and
sub
lahf
pop
cmps
mov
mov
sub
sub
push
mov
pusha
sar
imul
hlt
jmp
dec
sbb
add
pop
std
mov
in
adc
cdq
mov
push
ja
jnp
cdq
gs
out
call
movs
cmps
out
test
sbb
iret
fnstenv
xor
mov
cmps
das
sub
mov
or
mov
xchg
push
in
into
aas
cli
push
clc
add
inc
movs
add
and
out
mov
push
icebp
inc
les
sbb
adc
xchg
xchg
sub
mov
stos
aam
inc
fisubr
call
arpl
call
in
dec
sub
and
ins
dec
fstp
mov
adc
cli
test
fimul
std
fs
jp
aam
inc
outs
dec
dec
ins
mov
test
aad
test
adc
imul
adc
int3
push
fwait
pop
cld
jne
mov
adc
mov
sti
push
sub
aas
jecxz
xor
ss
or
int
ss
mov
sti
cmc
xchg
mov
inc
scas
cmp
add
aam
loopne
inc
std
arpl
push
adc
retf
scas
or
xor
lds
stos
pop
jp
adc
test
jle
mov
jg
push
lea
jle
mov
jmp
and
dec
push
mov
je
xor
mov
test
add
(bad)
clc
jne
jb
inc
jge
cmp
or
add
sub
mov
mov
push
dec
push
and
dec
std
and
mov
mov
pop
dec
dec
std
fist
hlt
mov
or
dec
push
out
jbe
test
in
push
jns
jmp
enter
test
or
ret
jmp
mov
movs
outs
add
mov
or
enter
pop
(bad)
pop
sub
or
or
sub
dec
iret
adc
iret
dec
xchg
ror
jge
or
sar
sbb
stc
pop
fiadd
mov
cmp
jbe
fidivr
sbb
rcl
jns
push
push
aaa
pop
lock
push
jle
test
or
jle
retf
ins
js
repnz
mov
stc
sti
aas
push
icebp
mov
(bad)
out
cmp
into
lds
popf
in
outs
ins
mov
std
shl
add
sub
scas
xchg
push
int3
mov
mov
inc
out
jnp
je
jno
push
mov
mov
jmp
mov
addr16
clc
add
lds
js
xor
push
aas
cmps
mov
mov
int
iret
jnp
sbb
scas
jo
and
inc
xchg
in
das
jg
sahf
sti
jo
xchg
cmp
inc
imul
aad
ror
aaa
mov
mov
retf
mov
repz
sub
shr
cli
jmp
retf
loopne
cmps
lods
sub
mov
outs
imul
pop
mov
and
aam
inc
call
clc
pop
ds
lock
retf
sahf
adc
int3
(bad)
icebp
movs
add
popa
mov
ja
arpl
pop
add
or
das
ins
mov
jmp
in
mov
iret
(bad)
stc
cmps
pop
mov
neg
std
jecxz
stos
fwait
nop
je
int
js
fimul
sbb
div
ss
fld
xchg
jns
std
nop
dec
or
pop
loope
pop
call
sub
sbb
idiv
pop
xchg
push
mov
fnstsw
mov
adc
sbb
pop
pop
xchg
rcl
adc
push
xlat
fnstsw
jg
leave
xchg
sub
jmp
and
jp
jle
dec
adc
inc
stc
hlt
and
push
rcl
and
push
cmp
movs
scas
sub
mov
mov
dec
xchg
out
push
adc
arpl
scas
jnp
and
fidivr
cmp
and
sti
cmp
out
inc
push
mov
pusha
cwde
pushf
dec
iret
jo
mov
push
push
mov
arpl
xor
inc
cs
or
add
mov
int
mov
lea
nop
mov
add
loopne
add
daa
aaa
jp
mov
cld
add
mov
loop
test
mov
retf
and
test
xchg
mov
or
jp
xchg
xor
retf
push
outs
jno
movs
retf
pushf
mov
jmp
repnz
stos
aam
daa
sub
shr
ret
daa
xchg
ror
adc
shl
jl
lahf
aad
test
out
inc
and
mov
hlt
sbb
js
dec
add
stos
sub
mov
mov
gs
repnz
test
call
cdq
repnz
mov
inc
xor
aam
or
dec
loopne
(bad)
push
in
adc
xor
cli
mov
call
fwait
cmp
sbb
push
aaa
xchg
inc
push
fist
pop
dec
inc
xchg
mov
test
or
dec
lds
or
push
cmp
dec
shl
out
jmp
outs
fadd
shl
imul
call
mov
icebp
popa
inc
fisub
rcl
mov
dec
add
sub
xor
cmp
in
jb
dec
(bad)
(bad)
(bad)
fbstp
repnz
jne
xor
movs
cs
pop
push
pop
fidiv
add
sub
test
xor
or
mov
xor
(bad)
popa
mov
xor
out
ds
mov
xor
das
mov
dec
push
bound
sub
ror
rcr
lods
jns
pop
bound
mov
lock
mov
sbb
std
imul
icebp
mov
imul
jb
fwait
xchg
scas
and
icebp
push
mov
pop
bound
inc
ss
popf
dec
ja
test
or
idiv
int3
push
mov
sub
mul
idiv
xor
clc
in
or
adc
mov
clc
inc
arpl
scas
jge
fmulp
pusha
pushf
aad
pop
or
push
and
into
ret
retf
mov
rcr
cmps
rol
sub
push
push
cvtdq2ps
mov
and
out
shl
inc
ds
mov
sub
(bad)
es
inc
in
mov
dec
cmps
jg
jmp
jmp
loope
movs
push
dec
iret
icebp
and
add
fisubr
scas
jne
mov
mov
popa
push
and
adc
and
(bad)
(bad)
in
(bad)
loopne
adc
sahf
outs
jge
xor
xchg
sub
adc
repz
adc
mov
sub
nop
outs
xchg
jl
cmp
ins
es
data16
inc
xchg
mov
sbb
and
cli
adc
push
lea
mov
or
gs
lahf
mov
shl
addr16
cmp
xchg
cmc
mov
pop
jae
call
popf
loopne
mov
gs
or
push
cld
retf
daa
ficomp
and
repnz
cmps
cmps
inc
xchg
mov
in
pop
loopne
out
fistp
jg
aaa
mov
inc
dec
retf
retf
(bad)
rol
cwde
mov
add
jmp
dec
and
daa
lods
xchg
mov
std
push
adc
and
bound
arpl
adc
std
jbe
adc
dec
adc
out
sahf
je
mov
push
pop
pop
test
lahf
sub
pop
adc
js
add
mov
sbb
adc
out
jecxz
dec
pop
jne
inc
(bad)
sti
dec
dec
nop
sub
jecxz
lahf
dec
(bad)
fnstsw
inc
jbe
sbb
xchg
mov
clc
sub
sub
pop
movs
ins
and
jns
jns
cmps
aaa
int
arpl
cmp
jb
adc
in
or
(bad)
mov
mov
mov
js
push
mov
out
pop
out
fs
in
and
icebp
clc
mov
enter
xchg
pop
cmp
aad
cwde
mov
mov
jmp
pop
aaa
out
and
test
mov
xchg
retf
mov
jge
out
fbstp
shl
jmp
fld
hlt
sub
nop
and
int3
push
je
push
inc
test
sti
xchg
pop
or
test
imul
adc
and
pop
cmps
fs
inc
clc
call
popa
cwde
outs
xchg
add
pop
arpl
(bad)
mov
dec
fsubr
push
push
loopne
adc
repz
cmp
aam
in
xor
sahf
add
cmps
out
icebp
sub
(bad)
std
ror
jns
fcomp
mov
mov
jno
in
shl
nop
mov
mov
cmp
adc
sub
xor
sub
pusha
fldcw
add
adc
pop
xor
out
shr
cmp
dec
push
push
fistp
lods
jns
adc
cs
out
add
loop
add
stos
loop
push
jae
stos
ret
mov
addr16
push
dec
imul
mov
adc
or
aaa
(bad)
and
adc
xchg
cli
pop
xchg
mov
(bad)
retf
xor
shl
das
mov
popw
out
dec
inc
cmc
fistp
pushf
pop
mov
mov
(bad)
iret
jecxz
cli
inc
dec
push
sbb
outs
das
sbb
jb
inc
idiv
sar
mov
cmps
adc
add
push
mov
xor
jl
imul
stos
pop
mov
add
xor
outs
jno
arpl
aas
pop
ret
mov
and
jmp
(bad)
lods
pop
in
mov
std
xchg
leave
cmp
(bad)
rol
fisubr
inc
stos
jb
imul
mov
mov
je
jmp
mov
xor
adc
sub
sbb
lahf
(bad)
push
xchg
add
ja
(bad)
aas
nop
dec
push
into
pushf
jle
add
mov
xor
pop
push
xchg
or
or
loop
xor
aad
arpl
pop
sub
pop
push
dec
ror
adc
mov
bound
mov
repz
idiv
stc
push
pop
out
cmp
cmp
jmp
mov
test
out
retf
out
js
sbb
shl
iret
imul
mov
mov
or
pusha
fisubr
(bad)
sbb
inc
lea
xchg
rcl
sahf
push
mov
xchg
cmp
jb
out
adc
in
ins
ret
ror
(bad)
ror
mov
call
mov
add
(bad)
fild
jl
or
xchg
add
rol
add
pop
(bad)
mov
jnp
or
cmp
popa
popf
xchg
mov
stos
sbb
jo
clc
sbb
or
cld
cmps
loop
sbb
(bad)
call
or
das
jno
cmp
outs
sahf
popa
(bad)
stc
xor
cmp
xchg
shl
push
shl
push
pusha
bound
shl
shl
cdq
std
lds
cmp
jp
and
jnp
xor
dec
test
xchg
xchg
pop
scas
mov
and
xchg
shl
and
arpl
add
jne
xchg
inc
ins
mov
mov
add
enter
in
or
fwait
outs
je
cdq
je
jecxz
repz
adc
mov
sub
pop
mov
mov
or
cmp
icebp
mov
pop
mov
xor
sbb
outs
cs
test
sub
stos
(bad)
mov
cs
sar
push
movs
cmc
pop
add
int3
dec
test
adc
mov
and
adc
shr
out
(bad)
out
sub
mov
mov
mov
call
(bad)
daa
add
sbb
(bad)
push
lea
int3
fs
sub
or
jns
jg
out
mov
or
xchg
cmp
in
push
fimul
push
sub
sbb
sbb
js
fld
sub
pop
fs
repnz
outs
(bad)
ins
jge
sbb
(bad)
loope
push
mov
inc
lea
repnz
shl
mov
imul
repz
loope
jp
pop
or
fild
mov
dec
xchg
mov
push
call
xchg
fs
inc
scas
mov
pop
xlat
mov
popa
retf
stos
jnp
aaa
imul
push
enter
adc
push
test
int3
test
lock
out
mov
jno
xor
jge
lods
add
pop
pop
mov
rcr
jne
repnz
ror
ja
push
dec
stc
adc
mov
sbb
imul
jp
inc
ret
pop
and
test
(bad)
(bad)
xchg
out
ds
push
sub
jns
inc
fcomi
sbb
test
mov
fwait
mov
(bad)
rcl
sbb
cmp
test
repz
mov
loopne
mov
jecxz
xor
add
ds
inc
xchg
or
cmp
leave
mov
aaa
leave
call
sahf
jl
inc
movs
or
icebp
bound
lahf
inc
fmul
hlt
or
cmp
and
inc
repnz
loope
sub
fdivr
mov
jns
pop
data16
sbb
dec
xor
pushf
cmp
mov
iret
mov
sbb
xchg
in
add
scas
dec
push
add
xchg
shl
push
xchg
add
sbb
movs
inc
jl
xchg
adc
mov
neg
out
clc
dec
mov
mov
mov
jae
jo
stc
in
test
inc
lods
push
shl
les
xor
push
jge
outs
push
mov
add
mov
or
hlt
test
out
(bad)
mov
xchg
xchg
dec
mov
aas
dec
loope
stos
stc
push
adc
test
imul
and
call
adc
not
pop
loop
loope
mov
cs
mov
(bad)
(bad)
push
addr16
nop
movs
gs
sub
mov
imul
sti
in
cmp
xor
daa
adc
or
jmp
jg
lods
fdiv
jge
pop
mov
out
push
cmps
jge
fwait
es
repz
adc
inc
cmp
adc
aas
stc
xchg
(bad)
fadd
xchg
nop
jbe
pop
cmp
add
les
dec
mov
lahf
daa
cld
adc
push
retf
sbb
lahf
and
les
xchg
add
cld
nop
pop
mov
or
repz
fwait
lea
jb
mov
hlt
push
icebp
inc
imul
nop
pop
ds
bound
mov
retf
cdq
or
popf
or
or
out
sub
jbe
arpl
call
inc
sub
and
fldcw
xchg
into
pop
mov
mov
cmp
jo
push
dec
dec
dec
popa
call
scas
sbb
ja
lock
loop
jle
and
pop
daa
mov
fucomip
pop
inc
aaa
jb
cwde
out
mov
or
loop
inc
push
mov
fst
pop
push
mov
adc
mov
xor
pop
jp
das
dec
add
mov
(bad)
fcomp
cmps
inc
pop
push
in
mov
jp
dec
xchg
dec
mov
les
out
js
xchg
imul
push
enter
fsubr
(bad)
in
ss
pop
movs
cmp
pop
out
aad
mov
sbb
adc
imul
retf
aad
fisttp
cwde
xor
ror
loop
inc
inc
pop
or
mov
and
fisttp
jge
idiv
shl
nop
mov
retf
je
jmp
fs
pop
cli
jl
popa
add
cmp
pop
mov
fiadd
div
cmc
ja
pop
or
idiv
adc
cdq
push
cdq
pop
aas
std
jle
or
add
pop
icebp
cmp
iret
xor
(bad)
dec
and
repz
dec
inc
inc
dec
jg
push
popf
mov
add
(bad)
mov
adc
mov
inc
push
test
or
in
adc
cmp
and
cli
mov
jns
mov
mov
xchg
jmp
sar
aaa
and
push
mov
jns
and
sbb
cmp
(bad)
push
pop
mov
sti
gs
mov
or
dec
lods
sub
(bad)
pop
push
or
sbb
scas
sbb
es
sahf
xor
xor
and
call
inc
cmp
rcr
jg
imul
dec
cmp
mov
js
aad
jbe
or
sbb
dec
shr
pop
mov
inc
in
aaa
pop
pop
iret
addr16
xchg
fstp
sub
sub
dec
mov
push
imul
stos
and
ins
inc
(bad)
mov
retf
ror
lods
inc
mov
sub
cdq
(bad)
rcl
inc
into
call
sub
cmps
dec
rol
jae
test
jmp
xchg
cmp
sub
(bad)
jnp
out
(bad)
lds
mov
cli
jecxz
push
jo
adc
add
and
les
mov
nop
cmps
pop
sub
dec
mov
mov
or
cli
stos
rol
enter
xchg
fcomp
and
and
icebp
mov
dec
iret
loope
push
fsubr
push
jbe
mov
inc
fwait
in
push
jne
call
push
ins
push
(bad)
lahf
imul
lods
mov
or
push
xchg
or
into
sub
popa
test
(bad)
jmp
out
test
movs
call
(bad)
add
xchg
mov
and
push
outs
pop
shl
leave
sub
js
lahf
lock
ins
repnz
sub
xor
push
and
mov
dec
fdivr
outs
rol
cmp
jg
inc
mov
xor
pop
scas
loopne
dec
std
mov
in
and
loope
imul
jnp
and
mov
clc
ror
adc
sub
(bad)
in
imul
adc
sbb
pop
call
lar
push
jne
aam
push
mov
xchg
jl
mov
xor
mov
popf
xchg
shl
dec
or
sub
vcvtdq2ps
cli
jo
cld
mov
sbb
leave
and
cli
push
add
xchg
or
jecxz
ror
or
push
movs
mov
or
push
jo
push
pusha
mov
mov
push
hlt
mov
jne
pop
out
push
data16
leave
cmp
lea
cmp
jecxz
cmp
push
jl
or
cs
sbb
scas
sub
jbe
inc
push
gs
psraw
cmps
adc
or
(bad)
outs
inc
ror
outs
sub
pop
mov
retf
addr16
pop
adc
in
sbb
cmps
add
fwait
push
(bad)
adc
loopne
fstp
mov
das
xor
loope
xchg
mov
outs
jo
outs
push
ds
test
and
add
or
mov
popf
bound
shl
(bad)
cmp
clc
std
sbb
je
pop
xor
sub
fcomp
sar
mov
dec
and
imul
lahf
xchg
mov
sbb
ja
cdq
std
mov
ins
pusha
inc
scas
and
pop
pop
jne
sub
dec
lahf
shl
inc
push
sub
ja
xchg
xchg
in
push
dec
ret
pop
mov
clc
jmp
lea
ficom
jae
popa
xchg
cmp
shl
into
call
outs
inc
adc
push
jle
fwait
aad
xor
pop
std
cmp
push
in
add
test
mov
cvttps2pi
mov
xor
leave
push
clc
push
lods
jnp
jb
add
pop
adc
inc
adc
push
inc
mov
repnz
frstor
popf
stos
push
cmps
and
jnp
lods
mov
imul
sub
push
nop
in
clc
add
cmp
clc
(bad)
sbb
cmp
scas
imul
rcr
mov
push
scas
das
push
lods
push
pop
push
bound
sub
into
xor
repnz
dec
lahf
mov
mov
ins
js
adc
(bad)
and
ret
pushf
push
dec
jb
or
jne
in
cmps
out
add
int3
add
or
loopne
sbb
cmps
jmp
(bad)
sbb
xlat
xchg
dec
ins
imul
(bad)
iret
nop
sbb
cmc
cmps
xor
cwde
hlt
loop
scas
test
mov
test
enter
or
jmp
push
xchg
jno
jns
xor
in
out
cmp
mul
mov
push
add
repz
shr
mov
mov
sub
in
dec
nop
in
lock
iret
fs
repz
cmps
shl
cwde
ins
mov
out
xchg
mov
and
and
push
pop
sub
xchg
dec
loopne
sar
outs
scas
cdq
lds
lods
dec
test
arpl
mov
(bad)
aaa
ins
cmp
out
adc
icebp
sub
adc
cdq
test
jnp
sbb
xor
ins
ja
cmp
shr
dec
jle
cmp
sub
in
loop
pop
xchg
xor
and
mov
jge
push
jo
mov
cmp
cwde
adc
stc
loopne
mov
push
out
test
call
iretw
jle
fidivr
iret
jbe
pop
jmp
repz
mov
shr
pop
test
out
(bad)
xchg
inc
ss
icebp
lea
dec
into
cmp
or
out
repz
push
xchg
ds
aad
sub
push
adc
ret
sub
scas
mov
loope
fs
int
cmp
sub
cmp
cli
sbb
sub
popa
jl
pop
je
add
les
or
or
cmp
scas
outs
es
test
aaa
sub
fidiv
mov
scas
popa
rol
sub
jbe
mov
mov
xlat
mov
adc
mov
adc
ja
xchg
js
inc
and
push
call
dec
and
cmp
sbb
push
loop
mov
cmp
xchg
jo
and
aas
jle
xor
clc
xor
inc
adc
inc
dec
sbb
dec
ins
stos
in
sub
pop
inc
call
jne
pusha
inc
adc
shl
int
int3
and
int3
xchg
shr
mov
xor
arpl
dec
dec
fwait
mov
or
dec
sub
mov
icebp
in
(bad)
enter
gs
xor
and
retf
outs
adc
repz
adc
mov
and
adc
loopne
sub
js
jmp
sub
daa
and
push
pop
ret
sbb
sub
or
or
mov
xchg
jmp
(bad)
jns
jl
mov
shl
xchg
push
hlt
add
sbb
aaa
ins
out
mov
or
mov
aas
dec
xchg
out
retf
cmp
aam
mov
sbb
pop
jmp
movs
dec
es
xchg
sbb
(bad)
not
and
int
cmp
jns
jo
mov
dec
and
cmp
icebp
imul
icebp
push
fiadd
adc
fsub
sahf
fdiv
xchg
lods
movs
mov
loop
xor
sbb
rol
fucomip
js
cmp
xchg
scas
mov
outs
jbe
mov
cmps
sbb
adc
pop
adc
xchg
and
jae
or
pop
push
or
or
cmps
add
daa
ja
sub
shl
add
push
scas
inc
daa
xchg
je
pop
js
popf
mov
mov
cli
inc
jno
add
cdq
jmp
or
jnp
xchg
adc
push
jg
shl
(bad)
fmul
xchg
jecxz
or
sbb
lods
shl
loope
dec
mov
xlat
movs
dec
sti
sbb
cwde
mov
ret
xchg
call
cmp
xor
enter
cld
loopne
cmp
jmp
loop
push
repnz
push
xchg
jl
mov
hlt
add
stos
fs
std
in
xchg
(bad)
std
add
iret
jns
pusha
mov
or
or
nop
cmp
call
shr
jmp
cmps
adc
fcom
cmc
ret
lock
xor
mov
dec
inc
cmovno
pop
sbb
inc
jmp
mov
movs
inc
daa
test
adc
fdivp
les
ret
cmc
test
imul
mov
push
mov
test
std
ins
lahf
mov
xor
mov
mov
icebp
or
cmp
leave
cmp
push
pop
cmc
xor
sub
inc
jge
ss
imul
clc
or
mov
retf
in
mov
jb
fld
add
cmps
int3
aaa
rcr
out
and
xchg
sbb
sbb
cmp
pop
dec
push
adc
and
mov
jmp
jle
in
pop
dec
shr
jno
cdq
mov
xor
pusha
and
dec
mov
add
mov
and
mov
sub
push
test
inc
fsub
mov
pop
icebp
push
cdq
call
hlt
jp
lock
das
xchg
inc
jge
or
inc
es
fs
jnp
adc
sbb
xchg
scas
push
jl
(bad)
dec
jmp
mov
(bad)
xor
xor
fistp
sti
adc
sahf
push
push
dec
hlt
sbb
fcomp
adc
push
xor
xor
or
mov
cli
jge
test
nop
add
sub
cmps
push
clc
in
push
xchg
jmp
add
dec
dec
pop
outs
test
ret
adc
in
inc
mov
push
cmp
js
lock
test
ins
icebp
xor
out
or
xlat
xchg
scas
jo
mov
cld
push
and
inc
xchg
and
lahf
cmp
imul
mov
cld
xchg
xchg
inc
cli
fisub
addr16
fwait
lock
icebp
push
retf
mov
int3
(bad)
arpl
stos
inc
cmp
ss
pusha
imul
dec
mov
(bad)
adc
sbb
and
jmp
mov
mov
pop
jg
test
out
call
push
and
or
outs
repnz
out
fimul
mov
imul
pop
lahf
out
ins
lods
das
iret
outs
jmp
in
ins
xchg
xchg
ret
out
jnp
xchg
xor
daa
test
xchg
sub
loop
jae
mov
jp
dec
pop
fdivr
and
pusha
and
pop
fistp
popf
sub
cdq
lock
jns
or
cmp
inc
push
shr
jno
adc
inc
mov
test
nop
sbb
(bad)
sbb
mov
arpl
pop
fidivr
outs
repnz
mov
pop
sbb
or
jns
xor
in
fistp
push
popa
ins
data16
das
push
dec
fimul
dec
push
(bad)
aam
sbb
fmul
pop
adc
cmp
mov
pop
mov
ins
shl
cmp
mov
enter
mov
ret
sub
jl
addr16
or
(bad)
xlat
jecxz
lahf
mov
call
lock
loope
fdiv
dec
ror
adc
jnp
sahf
lods
and
and
or
xchg
retf
xor
xlat
jle
in
pushf
xor
lds
or
jb
mov
btr
pop
mov
das
daa
rcl
push
stos
(bad)
dec
in
imul
vmwrite
push
mov
out
jp
or
mov
dec
or
push
adc
push
mov
out
push
ret
popa
add
dec
lods
repnz
ffreep
int3
mov
aam
push
sahf
lea
push
xchg
outs
sbb
jnp
or
dec
mov
hlt
(bad)
mov
dec
imul
(bad)
inc
aad
add
(bad)
xchg
mov
sub
(bad)
or
inc
imul
xchg
xlat
mov
sbb
(bad)
mov
xchg
stc
data16
(bad)
gs
dec
pop
pushfw
ret
mov
sbb
pop
fnstenv
dec
(bad)
(bad)
lock
in
push
sahf
movs
jecxz
scas
sbb
shl
(bad)
std
aad
mov
mov
jno
ds
sub
aaa
or
jns
cdq
movs
fdivr
nop
shr
mov
adc
and
shl
jae
or
mov
fistp
data16
mov
pop
push
mov
pop
fwait
fs
dec
fdiv
or
mov
fbld
out
imul
lahf
dec
mov
push
shr
mov
mov
rcr
push
and
inc
aad
addr16
mov
sbb
xchg
jb
neg
ins
jbe
xchg
pushf
mov
adc
adc
mov
pop
mov
lahf
out
mov
mov
and
das
mov
or
xchg
sbb
gs
out
cmp
push
mov
das
inc
sub
popf
cmp
jns
popf
push
and
data16
adc
shl
mov
cli
mul
and
data16
ret
out
std
dec
clc
and
adc
xor
scas
pop
mov
mov
loopne
repz
leave
int3
xchg
aas
ja
imul
pop
add
arpl
and
mov
mov
push
das
mov
icebp
mov
adc
inc
ret
and
xor
shl
(bad)
mov
aad
(bad)
jcxz
cmp
nop
xchg
pop
les
nop
dec
push
pop
add
in
xor
ret
xchg
xchg
int3
jp
cmp
dec
sbb
lock
jnp
enter
push
daa
push
in
or
mov
fwait
add
in
jp
push
out
retf
out
mov
jae
rcl
mov
xor
lods
rcl
mov
retf
lahf
or
push
in
xchg
fwait
idiv
sbb
fnstcw
push
nop
mov
popa
out
test
add
and
ja
xchg
retf
pop
cmc
test
add
mov
jecxz
int
cmp
out
lock
enter
mov
mov
pop
xchg
or
xchg
adc
sub
out
hlt
jno
les
push
adc
push
in
pop
(bad)
jno
inc
sti
ret
cmp
jmp
push
mov
cs
cdq
push
cmps
jo
cdq
call
loope
lods
leave
ins
add
in
add
sbb
jbe
ret
sub
jo
mov
mov
call
scas
and
rcr
sub
add
xchg
pop
or
mov
retf
adc
xor
inc
sbb
mov
mov
fstp
cmp
and
sub
sbb
pop
cs
icebp
push
inc
ficom
mov
cmp
mov
popf
ins
sbb
jecxz
jns
mov
ja
stc
xlat
inc
cmp
add
or
jp
les
shr
push
cmp
mov
sub
mov
cmp
adc
and
adc
mov
or
sbb
int3
jge
in
sbb
ror
push
dec
leave
mov
cmps
loope
cmp
cmps
ror
or
mov
push
add
test
and
(bad)
stc
push
inc
mov
pop
mov
xchg
xchg
push
ja
mov
mov
and
mov
lods
pop
jecxz
sbb
cmc
(bad)
push
or
jne
push
std
pushf
nop
in
mov
icebp
das
call
test
test
sub
xchg
inc
iret
cmp
xor
cdq
popa
sub
jno
test
in
or
sub
push
inc
in
lds
nop
mov
add
mov
call
imul
aaa
or
cmp
mov
jmp
mov
pop
cli
loope
in
adc
(bad)
jmp
in
cmp
rol
sahf
mov
call
push
xchg
inc
jb
cld
mov
leave
push
jle
sbb
and
sub
xor
xor
sbb
dec
add
mov
gs
nop
xor
sub
pusha
add
repnz
xchg
sbb
stc
test
rcl
push
sub
add
in
pop
xor
inc
mov
adc
movs
cld
sub
add
adc
cwde
cmc
sub
and
les
loopne
sbb
add
pop
mov
stos
push
cmp
and
jmp
cmp
aaa
cmp
mov
dec
pop
adc
jecxz
ja
cmp
cld
inc
pop
je
in
sti
pop
in
inc
mov
in
nop
cmps
in
retf
leave
jp
movs
xor
dec
out
outs
inc
addr16
hlt
imul
sti
sbb
or
xor
and
jns
pop
sub
sar
sbb
xor
xchg
inc
and
ret
push
xor
ret
push
fiadd
das
mov
adc
sti
pop
shl
jl
mov
nop
cmps
adc
enter
and
pop
xchg
shl
ja
stos
sub
pop
fwait
xor
mov
mov
dec
push
sub
js
sbb
push
xor
cli
fucom
daa
jne
fmul
nop
lods
lods
add
sar
push
xlat
sub
xchg
adc
or
std
sub
retf
lahf
loop
or
push
shl
mov
fisttp
mov
aam
mov
or
pushf
cmp
xchg
(bad)
jl
xor
scas
test
jecxz
into
cdq
pop
mov
popw
inc
push
sbb
or
cs
stos
jp
push
pop
xchg
ror
xchg
lahf
dec
retf
mov
test
mov
xchg
push
mov
loopne
sbb
loope
cmp
push
ret
mov
xor
repnz
fimul
scas
aas
cmc
data16
dec
pop
push
xchg
in
js
popa
call
pusha
mul
add
movs
pop
fnstsw
mov
dec
in
hlt
and
pop
adc
ret
cs
fs
leave
in
mov
fisub
loopne
mov
repnz
mov
imul
pop
push
rcr
push
xor
xor
pop
ja
aas
inc
pop
xor
scas
adc
rcl
loopne
mov
es
sar
into
add
test
mov
xor
sub
scas
jbe
in
dec
enter
add
cmp
pop
cdq
je
data16
and
mov
(bad)
in
xlat
retf
xor
mov
shl
je
xchg
xor
(bad)
in
outs
dec
cwde
xor
sub
and
loop
aaa
mov
xor
rol
test
add
shl
cmps
lds
push
mov
(bad)
cdq
pop
(bad)
aas
les
xchg
jmp
mov
cmp
test
repz
or
not
mov
or
ins
mov
push
(bad)
mov
and
mov
inc
aad
pushf
pop
int
cmc
jmp
iret
lock
rol
(bad)
out
lods
(bad)
daa
inc
bound
stos
pop
cmps
lods
mul
mov
stos
and
add
out
cmp
pop
leave
mov
(bad)
retf
fsub
in
push
outs
pop
call
push
pop
jne
(bad)
xor
movaps
jg
mov
adc
jnp
sahf
mov
or
iret
push
pushf
mov
daa
cmp
cmps
leave
inc
fisttp
add
push
xor
jb
cmp
mov
jmp
out
mov
jnp
out
add
dec
fwait
std
mov
sbb
test
scas
jo
outs
stos
(bad)
xchg
test
into
cmps
ror
xchg
sti
arpl
and
cwde
jbe
jmp
imul
mov
xor
movs
jle
cmp
fldenv
sub
(bad)
dec
hlt
push
pop
push
pop
inc
xchg
xchg
pop
inc
mov
dec
imul
pop
sar
cdq
sub
sti
neg
sbb
pop
in
and
cmp
rsqrtps
(bad)
sub
pop
sub
mov
es
dec
fisub
ror
adc
aas
test
(bad)
xor
icebp
sti
inc
xor
(bad)
nop
or
scas
movs
sub
sbb
and
loopne
or
lds
adc
idiv
or
sub
movs
mov
mov
stc
inc
xor
leave
mov
jmp
ja
clc
xor
sub
and
dec
imul
call
mov
push
shl
cmps
pop
and
fwait
pop
xchg
xor
retf
pop
clc
sub
es
mov
dec
dec
scas
mov
jae
hlt
jno
pushf
xchg
add
sbb
dec
mov
retf
aaa
nop
add
into
cmp
test
shl
xchg
arpl
mov
aaa
dec
cmc
mov
inc
inc
cwde
lahf
stos
pop
cmp
xchg
jmp
rcl
xchg
push
rol
jmp
sbb
(bad)
lods
sbb
outs
call
hlt
(bad)
cmp
cmc
outs
and
std
sbb
mov
aaa
lods
imul
inc
ds
sub
or
stc
inc
add
(bad)
out
fwait
push
cs
push
and
sbb
mov
or
je
fsub
nop
fs
mov
hlt
hlt
enter
sahf
inc
adc
add
pop
cmp
mov
lods
cdq
adc
jmp
sbb
push
in
sbb
rcr
cmp
adc
jno
pop
sahf
dec
enter
pop
and
mov
jmp
(bad)
jnp
iret
inc
jl
ja
repz
cmp
jg
dec
aam
imul
xor
jno
mov
into
imul
fbld
lods
sbb
jmp
aam
retf
dec
pop
shr
movs
xor
push
aad
or
stos
push
test
(bad)
and
xchg
cwde
icebp
arpl
jl
mov
or
jns
fisubr
out
movs
into
(bad)
push
inc
jle
movs
ja
xor
lods
shl
scas
pop
shl
xchg
push
(bad)
sub
leave
xchg
test
lahf
icebp
xchg
pop
or
or
xchg
push
popa
outs
add
jnp
sub
test
and
jb
push
jmp
(bad)
int
adc
(bad)
in
mov
push
mul
adc
xor
iret
aas
ins
xor
xlat
dec
nop
ret
push
sub
enter
in
jl
iret
mov
(bad)
aaa
int
mov
(bad)
outs
les
enter
into
sub
arpl
mov
xor
adc
and
in
aas
mov
aam
retf
dec
out
fstp
(bad)
adc
dec
dec
mov
mov
inc
ror
sbb
xlat
popa
fisub
(bad)
pop
in
(bad)
pop
test
(bad)
addr16
adc
scas
(bad)
loop
fcom
dec
inc
je
stos
les
scas
shl
call
jo
pusha
scas
lea
push
enter
pop
push
push
rcr
sti
jp
aad
mov
pusha
mov
mov
icebp
xchg
addr16
push
les
cmp
adc
idiv
int
inc
int3
not
jmp
or
nop
lods
push
lods
xchg
leave
ss
dec
lds
das
push
push
push
jmp
xor
add
imul
popf
ret
mov
outs
iret
jg
scas
pop
bound
add
outs
std
cmps
mov
dec
mov
sbb
adc
fisttp
fistp
fimul
test
adc
and
ds
cld
clc
les
scas
jg
cmps
jmp
push
mov
std
imul
cmps
and
dec
xor
xor
push
jo
es
push
pusha
retf
xchg
xchg
sahf
jmp
pop
cmps
sbb
jae
shr
or
sahf
and
in
dec
aas
mov
sbb
jge
jmp
addr16
pop
aas
jecxz
fdiv
mov
retf
mov
add
in
int
adc
stos
or
xor
(bad)
jle
jmp
mov
mov
or
addr16
leave
jmp
dec
xor
loop
add
mov
inc
cmp
mov
mov
ins
(bad)
mov
enter
daa
xchg
mov
mov
cmp
mov
cs
retf
or
push
pop
sub
cli
cmp
inc
cld
hlt
sub
sub
mov
retf
add
sbb
test
add
repnz
sbb
(bad)
jl
or
fnstcw
add
mov
inc
pusha
sub
add
jl
push
pop
pusha
inc
jo
xor
xchg
lods
inc
ret
xchg
xor
movs
ret
add
test
push
cmp
push
or
xor
mov
mov
mov
sahf
mov
adc
imul
lfs
mov
sub
shl
pop
retf
pop
scas
xor
adc
jnp
pop
cmp
movs
outs
fs
fmul
sbb
ret
push
loope
xor
ss
movs
cmps
addr16
not
imul
ret
mov
xchg
push
push
mov
out
shl
pop
dec
fadd
jno
jle
push
fiadd
fwait
shr
sar
retf
daa
les
fld
inc
aaa
fwait
xchg
pop
cli
and
xlat
loop
jno
out
lods
push
xor
xchg
repz
mov
gs
inc
cmp
call
mov
imul
dec
xchg
dec
fwait
xchg
test
mov
into
cmp
loope
jg
or
out
outs
mov
pop
imul
push
inc
inc
ss
adc
xor
into
and
sbb
stc
clc
mov
inc
adc
loope
pop
ja
rcr
ds
cli
dec
mov
iret
push
call
inc
fimul
mov
push
and
inc
sub
sbb
clc
shl
jecxz
xchg
adc
arpl
mov
fsub
lea
add
pop
ja
hlt
xchg
addr16
jmp
push
jae
pop
and
mov
out
add
pop
pop
ror
jg
pop
inc
sub
xchg
out
mov
ins
push
fisub
lods
mov
movs
mov
mov
shr
pop
test
push
xchg
mov
lds
jnp
or
in
out
addr16
jp
xchg
cmp
mov
xchg
and
aas
loopne
sbb
and
mov
jecxz
push
inc
imul
imul
cmc
data16
sti
daa
jge
or
adc
mov
push
or
push
inc
mov
das
(bad)
mov
ss
shl
fsub
dec
loope
(bad)
jo
jbe
iret
mov
out
mov
ja
cmp
lods
xor
sbb
sub
(bad)
jg
sbb
sbb
dec
dec
push
pop
sar
xchg
cmps
or
dec
fs
sub
adc
cmp
xor
and
or
mov
out
sbb
fiadd
inc
sub
pushf
(bad)
add
cmp
mov
jge
sbb
(bad)
push
jp
ret
in
jmp
add
add
imul
sub
in
test
cld
test
pop
enter
es
fcom
retfw
retf
sub
ss
inc
mov
xor
or
stc
stos
pushf
call
push
inc
jle
jg
les
xor
in
add
pop
int3
xor
inc
movs
scas
dec
(bad)
adc
daa
xchg
xchg
and
out
ja
cmp
shr
jecxz
xor
lahf
(bad)
jb
int3
pop
loop
rcl
inc
add
xor
ret
bound
and
push
cli
cmp
adc
xchg
nop
rol
sub
xchg
fwait
mul
aas
push
shl
inc
jne
test
mov
or
jmp
loope
outs
adc
xor
and
daa
xchg
jecxz
in
jmp
daa
stc
push
mov
sub
mov
push
inc
(bad)
sti
dec
out
and
imul
imul
and
mov
sti
or
push
pop
in
jg
push
ss
test
mov
mov
js
int
push
dec
call
mov
adc
adc
ins
imul
sbb
xor
out
jmp
scas
push
fwait
fs
fdivr
jbe
fild
sub
cmp
mov
jmp
aaa
rcl
cmp
(bad)
mov
bound
out
scas
retf
jne
cmp
and
pop
(bad)
frstor
movs
cld
adc
push
ret
dec
jbe
mov
dec
sbb
mov
retf
jp
xlat
js
aam
enter
test
pop
push
rol
mov
mov
nop
xchg
in
pusha
ret
inc
fstp
ror
xchg
out
add
gs
mov
mov
jae
fs
ins
add
mov
sub
jbe
dec
out
xchg
dec
pop
dec
pop
js
adc
xlat
sti
cmp
in
leave
pusha
mov
dec
ss
bound
dec
sub
xor
out
ss
and
mov
jo
mov
lds
xchg
sbb
jb
jne
adc
inc
mov
jp
dec
out
mov
(bad)
ds
out
xor
xchg
dec
jnp
mov
iret
(bad)
sub
push
add
sbb
std
(bad)
mov
lods
in
pop
movs
in
dec
mov
or
mov
movs
sbb
sub
or
jmp
out
add
cli
mov
add
mov
sub
and
mov
sahf
mov
push
cmp
fs
ja
xor
push
add
out
jne
or
sub
xchg
scas
mov
imul
xor
out
(bad)
push
dec
hlt
mov
inc
repz
dec
push
lea
movs
call
push
pop
jb
out
test
shr
mov
mov
xor
mov
cwde
fidivr
adc
movs
jno
dec
xchg
les
shr
mov
movs
rcr
mov
fidivr
push
xor
xor
mov
adc
ret
and
data16
sub
pop
retf
inc
cmp
pop
iret
cmps
dec
aaa
movs
movs
sub
int
mov
push
dec
sub
nop
bound
push
rcr
inc
sbb
and
sub
xor
bound
cmp
inc
mov
ja
jp
(bad)
push
add
inc
fnsave
xor
mov
push
cli
in
icebp
call
add
inc
dec
sbb
outs
repz
xchg
dec
aam
dec
mov
addr16
inc
mov
adc
ins
sbb
sar
sub
(bad)
xor
movs
sub
xor
lock
xor
cmp
jmp
and
pop
dec
cmps
add
out
stos
js
sar
fcomi
in
mov
movs
and
xchg
dec
sub
pop
inc
aam
cmp
pop
xor
cmp
mov
cmp
(bad)
shl
jns
dec
aad
xchg
adc
loopne
mov
mov
addr16
cmp
daa
push
ffreep
ret
dec
sbb
mov
ret
sbb
cmp
fs
cmp
push
int3
jo
jnp
pushf
(bad)
push
adc
out
lock
xchg
jbe
sub
push
(bad)
aad
repz
xor
inc
in
test
push
xchg
push
fdivr
add
fisttp
or
xor
popa
int3
pop
push
je
cli
or
lods
xor
jmp
fdiv
inc
add
jle
add
rol
sbb
push
clc
mov
gs
das
xchg
sbb
loop
jmp
dec
aas
pop
sahf
mov
xchg
(bad)
inc
sahf
jl
out
popf
js
sbb
mov
cmp
loopne
add
test
dec
mov
pop
rol
mov
rcr
or
mov
iret
inc
add
inc
scas
ds
(bad)
into
in
pop
fs
int
ins
rcr
push
xor
repnz
mov
mov
push
stos
and
out
out
ret
call
and
outs
stos
rcr
and
stc
fisttp
mov
dec
cmc
sbb
and
pop
ins
adc
adc
cmp
xor
xor
in
loope
xchg
push
jmp
neg
mov
mov
ja
jae
mov
dec
cmp
jnp
or
in
jmp
xor
push
xlat
jmp
jae
mov
lods
cld
sar
cmp
fdiv
add
pop
cwde
sub
mov
push
loopne
sbb
inc
mov
sbb
mov
cmp
inc
dec
mul
push
movs
dec
xchg
push
cmps
nop
pop
jge
popa
clc
sbb
inc
ins
adc
adc
icebp
(bad)
(bad)
push
mov
icebp
and
nop
inc
rol
in
lods
test
cdq
mov
push
repnz
mov
test
cdq
xlat
jle
(bad)
cmp
dec
xchg
jle
add
mov
mov
jno
mov
mov
mov
xor
and
and
xchg
popf
inc
sub
ins
inc
movs
adc
add
adc
push
retf
jg
xchg
outs
mov
adc
lods
mov
mov
(bad)
adc
sub
out
push
sbb
(bad)
in
jl
ror
in
stos
push
mov
enter
fdecstp
(bad)
aam
add
mov
cmp
clc
inc
sbb
in
push
sub
out
push
mov
clc
in
mov
pushf
jo
push
sahf
lds
loop
pop
addr16
cld
and
mov
jecxz
loope
mov
cmp
movs
scas
pop
cmp
push
lock
dec
and
aas
xchg
and
out
fbstp
lock
(bad)
mov
jne
loopne
xchg
mov
mov
mov
jge
mov
inc
mov
call
ret
std
outs
repz
movs
rcr
mov
pop
mov
cmp
and
int3
inc
mov
push
bnd
(bad)
icebp
gs
leave
jecxz
sbb
inc
lods
icebp
xchg
arpl
std
xor
mov
(bad)
ss
jb
ss
cmp
xchg
and
or
popf
bound
sub
push
xchg
popf
out
cmc
pop
and
cmc
mov
pop
sub
cmp
push
sub
dec
inc
dec
mov
and
pop
xchg
pop
lds
inc
ror
mov
dec
rep
movs
xor
inc
mov
pop
scas
adc
lock
fisubr
push
addr16
pop
je
hlt
mov
pop
lea
lea
outs
xchg
pop
inc
xchg
mov
jae
(bad)
adc
in
fwait
push
mov
ja
daa
aaa
clc
sub
jmp
pop
hlt
cmps
repz
dec
ins
data16
jl
imul
pop
adc
push
(bad)
in
outs
or
mov
or
(bad)
(bad)
or
ds
sbb
sub
jl
xchg
pop
in
lahf
cmps
or
dec
xchg
sub
mov
stos
mov
lahf
fst
daa
clc
cmp
add
adc
in
loope
ds
sub
ds
push
arpl
jmp
pop
inc
jbe
push
dec
push
sub
jne
rcr
inc
iret
inc
mov
repnz
outs
mov
fsub
sbb
adc
pop
xchg
xor
pop
dec
daa
push
pop
pusha
mov
ds
sub
stos
lds
adc
call
mov
cmp
popf
test
add
test
mov
lods
dec
dec
fidivr
sahf
jb
(bad)
(bad)
loope
call
mov
jmp
jp
add
in
bound
ficom
sbb
pop
stos
inc
lds
push
inc
aaa
popf
xor
add
lea
jmp
or
lods
or
mov
pop
dec
jbe
test
(bad)
neg
test
nop
(bad)
mov
jp
test
jge
and
in
xor
jmp
scas
imul
xchg
test
jmp
sbb
mov
repnz
sub
adc
mov
and
call
loopne
and
fcomp
es
inc
scas
push
pop
dec
mov
push
adc
adc
mov
xor
xchg
popa
jmp
movs
jecxz
in
sub
fstp
mov
shl
sahf
cmp
les
jnp
fbstp
lahf
les
sub
hlt
mov
push
sbb
pop
xchg
sub
push
sbb
xchg
and
cmc
ss
mov
arpl
shl
push
mov
inc
in
sub
stc
adc
sub
cmp
push
test
mov
cld
in
mov
and
stc
es
sar
cmp
jbe
das
inc
xchg
xchg
jo
adc
(bad)
cmp
push
add
les
hlt
cmps
mov
scas
pop
les
push
out
outs
(bad)
das
xor
jns
test
dec
ret
rcr
lods
mov
pop
cwde
(bad)
jge
pop
xor
(bad)
in
scas
lahf
or
lds
jecxz
cld
xor
pop
je
dec
out
jecxz
sub
adc
xchg
js
out
js
out
and
scas
leave
rcr
(bad)
dec
xchg
jne
and
sar
xchg
jge
mov
je
popf
sub
lods
adc
jg
mov
sbb
jecxz
or
dec
xor
cmp
pop
clc
stc
pop
stc
call
xor
dec
cmps
js
pop
fucomp
jp
add
bound
or
or
jb
ret
repz
xor
dec
(bad)
scas
div
imul
js
test
out
mov
call
adc
mov
das
dec
dec
push
mul
dec
lahf
js
push
xchg
in
icebp
push
jmp
retf
jbe
je
xor
mov
popa
addr16
jge
retf
iret
mov
fdivr
mov
aad
ins
jb
or
iret
add
dec
aas
scas
xchg
test
add
inc
inc
add
mov
cmp
movs
outs
outs
mov
or
dec
outs
push
cmp
cmp
ins
xchg
mov
mov
push
add
fbld
sub
popf
int3
mov
pop
mov
push
ins
outs
xor
ret
stos
cmc
xchg
div
pop
aad
ja
cmp
adc
les
ds
and
xchg
pop
ja
fstp
test
mov
xor
loope
loope
stc
push
mov
inc
adc
ins
push
enter
push
pop
stos
test
cdq
pop
dec
pop
test
inc
adc
mov
cmp
test
pop
mov
dec
xor
push
and
add
(bad)
and
sbb
jmp
pop
test
jl
fisttp
mov
out
lahf
sub
push
jne
pusha
repz
pusha
fisub
add
cmp
add
mov
clc
mov
hlt
mov
out
fist
retf
les
mov
mov
das
or
mov
or
outs
cmps
xor
cmp
cld
adc
aam
bound
push
sub
sbb
push
fidivr
inc
lea
cmps
enter
jge
(bad)
push
fdivr
xor
test
cmp
call
lahf
adc
cdq
sub
pop
js
rcr
neg
mov
sbb
xor
int
std
outs
pop
push
mov
popa
mov
aas
test
mov
les
mov
stos
mov
mov
or
and
fiadd
and
sti
sub
clc
inc
push
xor
in
push
mov
fist
dec
xchg
sbb
jbe
retf
sub
shr
xlat
out
lahf
jge
ja
cmps
int3
sub
pop
hlt
cli
scas
mov
call
and
pop
sub
and
dec
adc
jnp
ins
pop
cmp
cli
stos
inc
outs
xor
adc
inc
movzx
and
xor
and
jmp
cwde
call
and
cmp
call
sub
mov
mov
xor
das
(bad)
(bad)
jo
and
aas
daa
lea
and
sbb
mov
test
ss
sbb
stos
push
jmp
jmp
cmp
adc
daa
sbb
add
(bad)
push
cmp
pop
push
jl
mov
lahf
jns
lock
outs
adc
xchg
gs
fcom
test
(bad)
scas
sub
mov
adc
cmp
data16
iret
or
es
es
sub
adc
mov
add
jno
xor
xor
dec
lahf
ja
pop
mov
inc
or
js
rol
or
sub
loopne
push
retf
fwait
or
pop
test
loopne
add
test
rcl
mov
jmp
xor
pop
sub
mov
pop
(bad)
and
inc
xor
psubd
and
dec
lahf
mul
outs
fcomp
push
addr16
shl
mov
(bad)
cmp
mov
xchg
adc
test
out
mov
xchg
clc
clc
test
cmp
fcomp
push
loope
pop
xchg
cmp
imul
xchg
cmp
bound
leave
mov
jno
lea
inc
inc
test
xchg
test
shl
loope
xchg
or
aad
mov
jno
jmp
jo
int
xchg
sub
ins
js
mov
out
mov
mov
shl
adc
aam
or
jne
mov
std
scas
out
mov
test
dec
shl
scas
mov
loope
bound
mul
or
js
in
and
and
jno
sub
loope
push
jne
iret
cmps
cs
xchg
push
imul
retf
addr16
enter
push
punpcklwd
adc
in
sbb
jno
xor
push
pop
xchg
test
pop
cli
mov
(bad)
out
dec
lahf
ins
inc
mov
mov
(bad)
cmp
or
or
aad
test
sbb
push
mov
xor
pop
mov
inc
sbb
jbe
shl
lds
out
push
push
adc
pop
pop
aaa
stc
push
hlt
inc
push
(bad)
test
data16
dec
pop
jbe
sbb
dec
ror
dec
pusha
inc
data16
pop
push
leave
loop
jp
xor
fst
mov
lock
mov
inc
sbb
jl
jle
arpl
jl
adc
mov
sbb
js
inc
push
shl
loop
push
jne
int
or
jecxz
inc
sbb
xor
int
cmp
mov
jge
mov
xor
pop
mov
jns
leave
enter
sahf
sub
inc
push
fs
stc
inc
push
jns
(bad)
adc
pop
scas
in
cmp
cmps
sbb
(bad)
loop
(bad)
int
mov
mov
xchg
int
pop
stc
adc
popf
movs
inc
pop
(bad)
in
lods
ins
or
rol
adc
shl
push
sbb
jne
mov
test
mov
psubsw
test
fmul
int3
push
jle
pushf
inc
lds
pusha
push
bnd
xchg
addr16
mov
rol
movs
mov
cmp
sbb
jp
in
dec
xchg
pop
xchg
fiadd
mov
jecxz
mov
outs
cmp
test
je
(bad)
(bad)
cli
jo
or
addr16
fiadd
mov
loope
jo
cmp
or
sbb
sbb
jnp
movs
pop
(bad)
jmp
cwde
fsubr
or
std
cmp
int3
pause
icebp
add
lods
add
mov
loope
arpl
cs
test
jmp
js
(bad)
adc
fidivr
sub
cmp
and
adc
dec
imul
sub
inc
mov
pushf
push
cmps
pop
adc
pop
sub
adc
or
dec
push
sub
cmps
or
sub
push
(bad)
int3
inc
sbb
pop
lahf
popf
cmps
dec
bound
mov
xchg
cmp
dec
mov
and
dec
and
push
sbb
repnz
sub
or
push
sub
pop
add
mov
sbb
rcl
jge
call
fs
or
jmp
cld
ret
popf
add
jne
outs
inc
push
mov
aad
sub
cmp
push
iret
dec
xor
mov
xchg
loop
or
lods
inc
call
ds
sub
pop
mov
adc
test
xchg
test
bound
dec
or
aad
push
mov
sbb
in
xchg
les
pop
xchg
retf
adc
inc
not
pushf
(bad)
push
sub
cmp
inc
aam
sti
dec
aad
lahf
dec
pop
arpl
in
push
rcr
and
jecxz
push
arpl
sbb
(bad)
repz
mov
arpl
push
fdivrp
shl
sbb
gs
repz
sub
pop
outs
pop
in
sahf
add
and
xor
pop
sti
mov
mov
mov
and
mov
or
dec
fstp
push
and
and
call
jle
sti
bsf
mov
aaa
and
dec
aam
pop
jmp
add
fisubr
das
inc
fist
sub
dec
jno
ror
and
cmp
(bad)
xor
add
mov
ss
mov
jecxz
les
push
jbe
xchg
jmp
aaa
add
std
jbe
ss
push
movs
mov
sub
repnz
mov
add
test
push
inc
fucomip
xchg
dec
jo
adc
dec
mov
loope
jo
inc
mov
pop
clc
jmp
mov
xchg
popa
les
jg
sbb
mov
pop
push
pushf
or
mov
push
inc
imul
repz
out
ds
jecxz
xchg
pusha
cmc
dec
leave
fdivr
sub
jmp
mov
lea
mov
ret
test
sub
cdq
mov
(bad)
test
cdq
push
inc
mov
and
jne
fcomp
arpl
or
push
pop
test
lahf
fs
xchg
sti
aaa
pop
sub
(bad)
sti
mov
mov
jmp
jb
aas
pmaxub
scas
add
add
outs
cmp
mov
ds
jge
or
mov
cmp
mov
(bad)
int3
jne
or
movs
ror
retf
sbb
loope
jo
or
aaa
fiadd
mov
(bad)
stc
lahf
inc
in
ins
cmps
je
ret
test
sti
popa
push
and
data16
(bad)
xor
or
jp
adc
xor
mov
and
jl
fs
or
or
pushf
push
mov
dec
imul
push
push
cmp
fstp
je
inc
addr16
mov
fwait
xor
add
addr16
xor
dec
or
nop
xor
dec
repnz
and
mov
lds
xor
pop
or
push
pop
or
adc
popa
push
in
cmps
repz
pop
sti
in
bnd
cmp
shl
pusha
call
mov
in
sub
push
repz
xor
xor
push
js
cli
fidiv
xor
jns
sbb
cmps
repz
ja
imul
dec
repz
sub
cmc
popf
inc
in
sub
dec
test
cmp
imul
push
ret
loop
lock
jle
scas
fisttp
add
inc
clc
mov
fld
outs
xchg
repnz
mov
sub
pop
or
add
sub
aam
add
outs
js
jns
fadd
sub
loope
sub
leave
repnz
sub
loopne
mov
xor
fwait
mov
out
pop
ss
loopne
sub
loop
sahf
in
cmp
cs
jne
fsubr
in
sbb
jl
pop
out
or
jle
scas
icebp
dec
fcmove
xor
inc
(bad)
aam
mov
test
jb
jb
jnp
and
cmp
data16
aas
mov
movs
int3
push
or
jmp
test
fcom
(bad)
push
fiadd
mov
mov
aaa
idiv
push
fidiv
out
lds
sub
call
pop
std
sub
add
fsincos
jnp
es
aad
nop
mov
cwde
push
xchg
stos
movs
and
jecxz
mov
jle
call
imul
jnp
jmp
(bad)
arpl
cld
mov
sbb
xchg
sar
loope
shl
fs
(bad)
push
jmp
xlat
aas
mov
mov
popa
outs
jmp
mov
je
push
loopne
or
stos
xchg
mov
mov
rcr
js
push
sbb
imul
hlt
sbb
mov
xor
mov
test
adc
dec
sbb
or
es
fincstp
and
or
jno
int3
xchg
movs
inc
rep
mov
jmp
inc
mov
push
loop
xchg
jb
xor
pop
xor
data16
popf
or
lahf
js
sbb
test
push
xchg
mov
leave
outs
mov
cdq
mov
ja
push
stc
jle
loopne
mov
sub
sub
je
mov
je
inc
in
shl
daa
ret
loop
fisub
sahf
lods
inc
inc
loope
(bad)
aam
sti
jmp
cli
(bad)
xchg
das
jne
adc
sar
mov
dec
jge
xchg
xor
or
popa
fidivr
inc
jecxz
lods
jmp
cmp
inc
fsub
sub
mov
and
jp
jns
mov
xchg
cmps
jle
sbb
not
out
add
mov
stos
aam
pop
jae
cld
adc
jbe
in
adc
mov
mov
add
test
adc
xor
fidivr
jno
cmp
mov
vcvtpd2ps
mov
enter
lds
jmp
(bad)
repz
leave
push
fwait
shl
pop
not
dec
mov
xchg
jg
cdq
push
cmp
and
and
int3
xchg
sbb
mov
fcomp
das
push
mov
sbb
sub
aad
jle
test
or
out
cmps
or
popa
outs
xchg
pusha
cdq
xchg
mov
(bad)
imul
shl
mov
jbe
int
lahf
mov
add
cmp
mov
mov
or
xchg
sub
and
test
mov
fwait
repz
nop
aad
jge
pop
loop
cmp
add
sar
mov
dec
add
mov
mov
pop
movs
js
adc
sub
sbb
ins
sub
jecxz
cmps
xchg
retf
ja
xlat
add
loop
push
add
cmps
dec
push
push
lea
stos
into
jo
mov
sbb
pop
aam
adc
fs
jne
(bad)
dec
jo
in
jecxz
dec
mov
mov
daa
or
call
jb
add
scas
sahf
inc
mov
add
jg
add
sti
stos
fcom
pop
je
xchg
pop
sub
das
push
mov
cmc
sbb
push
sub
sub
cmp
and
mov
jae
jo
gs
jmp
retf
rcl
push
mov
mov
inc
push
dec
xchg
daa
add
push
sub
int3
std
adc
loop
ja
test
loopne
shr
push
or
arpl
sub
jg
out
xchg
ins
out
dec
repnz
fdiv
mov
movs
sar
dec
in
and
push
out
add
rcr
add
mov
dec
sbb
push
bound
aad
jl
imul
xor
adc
out
or
and
or
(bad)
js
outs
pop
sub
sbb
retf
pop
shl
pop
jmp
aaa
mov
(bad)
aas
arpl
inc
dec
mov
jle
jg
xchg
sbb
xor
cmp
mov
mov
imul
sahf
adc
adc
or
mov
inc
adc
or
cmp
push
stos
int
mul
adc
(bad)
pop
iretw
es
mov
fistp
imul
lea
pop
xor
xchg
(bad)
shl
sbb
or
(bad)
jae
xchg
mov
cld
and
cmp
pushf
xchg
sbb
xor
cs
je
cmp
(bad)
lock
lock
imul
lock
ins
mov
inc
pusha
or
aas
test
sbb
scas
pop
mov
mov
jbe
jbe
les
pop
retf
pop
int3
rcl
add
and
lds
jmp
in
sbb
(bad)
pop
or
jbe
dec
xor
(bad)
retf
int
test
xchg
cmp
xor
mov
leave
inc
ror
test
shl
cli
and
mov
adc
cmp
push
pop
shr
ins
daa
dec
pusha
(bad)
dec
into
aam
adc
scas
loope
sbb
push
mov
xchg
scas
and
push
aam
sbb
dec
cmp
cmp
push
cmp
jno
pop
por
xor
in
pop
mov
loopne
adc
xchg
movs
jg
lahf
out
div
daa
das
push
(bad)
mov
mov
sbb
jbe
inc
repnz
mov
sub
js
lods
adc
es
xchg
inc
mov
call
sahf
push
dec
sbb
dec
sbb
push
jb
and
daa
(bad)
push
or
jne
xor
jb
std
ja
daa
pusha
jo
sbb
push
jno
imul
xor
cmps
mov
rcl
pusha
dec
inc
or
push
lds
enter
mov
pop
stos
dec
or
mov
push
retf
mov
pop
inc
sbb
or
pusha
iret
std
movs
lock
add
or
inc
adc
cmps
addr16
je
cmp
dec
mov
and
fdivr
push
loope
fwait
xchg
or
inc
sets
rcr
xor
sub
jb
adc
leave
test
arpl
inc
sbb
inc
add
repnz
cmp
adc
(bad)
adc
mov
cdq
and
shr
pop
mov
fisttp
push
aaa
fstp
sbb
mov
pop
cmps
lods
ins
test
sub
pop
call
ret
adc
mov
push
loope
lock
stc
cmp
inc
scas
push
jae
popf
push
add
mov
es
lea
movs
js
aad
push
add
aad
fwait
xchg
sbb
(bad)
sbb
(bad)
int3
dec
sbb
bound
xor
cmp
sbb
imul
and
mov
dec
push
or
inc
ret
call
push
pop
jmp
inc
mov
sbb
in
jge
inc
or
push
(bad)
fdivr
add
mov
repnz
push
sar
ins
js
hlt
jg
je
sbb
fldcw
lods
enter
mov
mov
outs
adc
jg
push
push
call
imul
sub
hlt
fmul
jge
(bad)
inc
add
mov
add
or
pop
in
pop
adc
mov
lea
mov
adc
xor
movs
fnstcw
jmp
ss
mov
loope
push
cmp
repnz
test
popf
out
and
dec
out
dec
in
push
add
adc
test
sub
rcr
test
into
push
out
push
out
jecxz
push
ret
pop
sahf
icebp
xchg
out
push
push
mov
sub
jb
push
and
mov
lods
push
mov
movs
or
pop
fs
out
mov
push
jnp
mov
bound
sub
mov
je
div
mov
lds
sbb
mov
ror
xlat
jo
cmp
cmc
push
test
movs
inc
xor
sbb
jae
ja
sbb
cmps
fistp
mov
popf
xchg
mov
leave
sub
in
push
in
sbb
mov
cmp
pop
push
cmc
(bad)
scas
je
cdq
mov
push
call
mov
std
sbb
push
pop
aad
and
out
sbb
pop
out
or
pushf
nop
daa
out
aam
add
and
icebp
xor
inc
pop
popf
inc
int
into
sub
lods
mov
push
dec
adc
sbb
and
and
xor
and
cmp
sub
push
jecxz
not
jns
add
inc
jmp
inc
cmc
xchg
jle
out
std
in
and
sub
sbb
enter
loop
mov
or
jb
aaa
mov
add
push
cdq
repnz
imul
adc
dec
jnp
mov
imul
push
jp
clc
xchg
jo
pop
popf
cmps
cwde
push
sahf
stos
ret
(bad)
pop
xchg
test
add
loopne
or
popf
not
mov
shr
jnp
jecxz
out
(bad)
rol
mov
(bad)
add
push
sbb
fisttp
iret
frstor
les
dec
push
push
shl
pop
jne
mov
inc
shl
push
scas
pop
dec
int
xor
test
in
jbe
fs
into
dec
sbb
inc
add
repnz
fist
fst
dec
(bad)
fstp
iret
nop
pop
mov
outs
lock
in
add
mov
jecxz
jl
test
pushf
xchg
mov
fst
int3
inc
js
test
sbb
rcl
push
(bad)
dec
ins
jnp
xor
mov
or
lods
das
rcr
pop
push
(bad)
lods
(bad)
hlt
pop
mov
and
sub
xchg
in
fldenv
mov
scas
push
jno
outs
inc
mov
sbb
in
jb
mov
fisubr
inc
sbb
and
pusha
out
leave
push
out
shr
and
ret
scas
cld
xchg
xor
in
lea
and
mov
aam
xchg
leave
xchg
mov
xchg
cmp
(bad)
cld
sub
dec
adc
push
xor
shr
and
xchg
sti
int3
mov
cmp
add
hlt
daa
js
stos
push
push
mov
jl
shr
inc
out
cmp
test
out
adc
dec
js
xchg
jl
je
shr
mul
xchg
push
push
sbb
arpl
or
imul
mov
aas
xchg
call
lahf
fsubr
icebp
adc
mov
hlt
pop
adc
push
(bad)
in
movs
(bad)
imul
mov
fisub
mov
outs
(bad)
out
jmp
cmps
push
(bad)
out
sub
xchg
sbb
dec
xor
adc
sub
mov
mov
ret
fmul
xchg
jne
scas
mov
or
push
sub
enter
in
rcr
jmp
mov
push
ins
pop
sbb
hlt
pusha
test
push
and
sbb
cmp
test
mov
icebp
xchg
loop
sbb
mov
or
adc
mov
pop
mov
xor
xchg
stos
arpl
std
int3
push
fwait
pop
adc
jmp
push
je
pop
push
dec
jbe
jmp
daa
adc
test
xor
or
es
and
rcl
idiv
add
jp
es
xor
ja
jae
mov
or
sti
sar
lea
adc
mov
bound
out
std
xor
cmp
cmp
and
mov
mov
cmp
iret
in
mov
out
and
mov
scas
iret
mov
outs
cld
test
push
adc
adc
adc
sub
add
stc
scas
imul
push
btr
xchg
bound
retf
mov
mov
adc
stc
pop
mov
push
sub
int3
or
fsubp
mov
dec
rcr
inc
jecxz
mov
fnsave
cmp
fcmovnu
mov
dec
or
retf
adc
add
xor
imul
inc
arpl
and
cmp
xchg
(bad)
jnp
mov
repz
scas
push
dec
in
(bad)
mov
add
(bad)
sub
in
leave
mov
mov
xchg
jg
idiv
je
dec
gs
xlat
in
or
movs
adc
inc
sbb
and
mov
push
inc
js
int3
inc
sub
push
xchg
pop
sbb
dec
xchg
int3
or
mov
and
dec
out
rol
sti
movs
mov
dec
out
ins
sbb
jb
leave
cmp
test
xchg
lock
xor
sbb
(bad)
je
movs
lea
popa
mov
mov
pop
jle
xchg
out
dec
push
stc
and
sub
sbb
in
sbb
scas
outs
mov
arpl
ds
pop
je
repnz
xchg
sar
fwait
xchg
inc
sbb
stos
fstp
ss
inc
lds
fs
shl
mov
and
xor
xchg
sti
add
xchg
xor
xlat
lahf
adc
hlt
dec
cld
jns
call
mov
push
ins
xor
push
fdiv
mov
xchg
cmp
sbb
rcl
xlat
mov
andnps
push
jns
jmp
(bad)
cmp
das
and
jb
sbb
sub
gs
bound
call
mov
or
mov
or
out
pop
xchg
xchg
sbb
push
jp
lods
les
cmp
fs
and
xchg
add
jge
add
popa
mov
data16
aaa
test
sbb
out
cmp
dec
xchg
push
push
cmp
pop
inc
scas
xor
stos
test
ins
sar
ja
mov
lods
xor
pop
leave
or
jle
aad
dec
jp
ficomp
jb
mov
rcr
shrd
lods
xchg
mov
in
mov
xor
mov
or
scas
dec
or
gs
popa
jp
lea
js
enter
(bad)
xchg
mov
nop
xchg
xchg
(bad)
in
pop
fist
mov
repz
js
xchg
sbb
inc
and
dec
jo
iret
imul
outs
dec
push
jo
adc
stc
repnz
pop
jno
out
mov
inc
adc
stos
sbb
or
dec
pop
mov
scas
adc
adc
ins
xchg
cs
jbe
in
int3
or
and
in
sub
es
inc
mov
pop
sbb
and
cmp
sti
lods
ret
int
sbb
dec
pop
push
mov
cmps
aad
popf
fs
lahf
jnp
loop
mov
or
mov
pop
lahf
sub
push
adc
xlat
inc
sbb
pop
cmps
jo
inc
or
push
sbb
daa
movs
mov
sub
cmp
repnz
loopne
adc
clc
and
push
popf
les
pop
retf
mov
aas
mov
mov
in
jg
ins
mov
arpl
fucomi
repz
sub
push
scas
loopne
sbb
icebp
cmp
ss
cmp
xor
xchg
nop
leave
push
ret
pop
pop
iret
std
imul
int
cmp
arpl
adc
std
loope
mov
jmp
jl
adc
push
ficom
jne
cmp
jp
cmp
fist
shr
popa
pop
and
mul
and
frstpm(287
push
jbe
jae
sahf
aaa
stos
jnp
pop
gs
and
icebp
test
xchg
call
push
cmp
fisubr
mov
sbb
xor
mov
into
ja
add
or
ja
ins
repnz
lock
jp
jl
push
mov
rcr
push
fwait
pop
pop
das
jae
outs
outs
dec
div
jo
mov
push
or
into
fs
es
mov
je
mov
mov
and
xchg
fisubr
(bad)
mov
shl
cmps
adc
and
pop
inc
xchg
mov
xor
ss
lea
movs
aam
enter
repz
cld
iret
stc
adc
fiadd
(bad)
jl
adc
or
ins
mov
mov
sbb
adc
inc
call
fiadd
jbe
repz
push
or
add
cmp
adc
mov
adc
jecxz
sub
out
movhps
xor
mov
lods
lea
into
pop
mov
jcxz
mul
push
fwait
in
cmp
inc
cmp
out
pop
fdivr
sbb
clc
xlat
jecxz
sti
mov
aad
push
hlt
stc
xchg
mov
push
add
or
call
ins
mov
test
jo
mov
sub
test
push
sub
into
popf
jb
xlat
cld
mov
sub
ja
ror
stos
scas
test
inc
pusha
dec
test
fs
aas
mov
dec
retf
fldcw
test
cmp
shl
pop
call
mov
ja
inc
and
je
(bad)
in
outs
adc
mov
sub
cwde
stos
sub
sub
cmc
and
cmp
dec
mov
mov
jmp
jg
mov
fild
adc
mov
sub
clc
push
sbb
test
dec
aam
addr16
in
data16
mov
mov
jmp
xor
jl
stos
inc
(bad)
mov
push
cmp
icebp
imul
inc
arpl
pushf
dec
fisubr
in
or
stc
retf
stos
scas
test
inc
les
mov
push
out
sbb
jmp
sbb
push
inc
mov
stos
aad
push
inc
mov
cmp
cli
je
sub
cld
ins
or
icebp
pusha
inc
in
stos
mov
fbld
jne
pop
jecxz
movs
inc
jb
pop
mov
dec
scas
or
push
rcl
fisubr
mov
vmread
repnz
or
int3
cmp
aam
inc
rcr
push
add
jecxz
js
das
jo
sti
xlat
mov
(bad)
movs
push
xchg
loope
adc
mov
mov
sbb
sbb
lds
ja
dec
push
pop
pop
and
cmps
mov
pusha
aad
sbb
sahf
dec
addr16
cld
repnz
jg
shl
jmp
dec
js
xchg
repnz
test
pop
pop
jmp
jns
jp
or
hlt
add
data16
es
addr16
jns
sbb
and
xor
sub
mov
popf
mov
int
ret
(bad)
(bad)
into
mov
aas
mov
jnp
push
and
push
lock
jge
outs
inc
and
int
adc
mov
and
arpl
in
inc
cmp
mov
js
in
sti
mov
add
pop
pop
es
cmp
(bad)
and
sub
sbb
sbb
rol
dec
jnp
rol
mov
add
cs
mov
aam
fist
loopne
aam
inc
mov
or
add
cli
jg
rol
adc
cmp
push
daa
fnsave
mov
stos
mov
sub
leave
in
bswap
jmp
add
test
xlat
fdivr
pop
cmp
cmp
imul
cmp
xchg
imul
clc
dec
adc
(bad)
ins
(bad)
fcom
test
fst
(bad)
jmp
test
pop
pop
xchg
xor
(bad)
arpl
push
fnsave
dec
push
push
jmp
jnp
sbb
call
ror
test
sbb
dec
dec
mov
(bad)
loope
xchg
sbb
mov
jmp
int
jge
and
xchg
into
pop
lahf
sub
cdq
lock
push
jecxz
stc
push
cs
sub
std
xlat
push
retf
inc
mov
mov
test
cli
shr
outs
stc
leave
movs
xchg
out
int3
inc
pop
fstp
mov
mov
mov
int
cli
int
ja
sti
out
jmp
dec
outs
enter
and
lds
add
or
pusha
icebp
adc
adc
mov
test
popf
pop
test
inc
stc
sub
call
pop
adc
dec
push
mov
adc
xchg
pop
test
loope
aaa
inc
pop
or
or
lds
daa
pop
loope
fldcw
out
sbb
xchg
mov
xchg
bound
mov
sub
jle
(bad)
and
and
push
or
sub
mov
(bad)
sahf
xchg
sahf
add
dec
jbe
imul
pop
shl
in
aas
sub
mov
int3
mov
jno
push
inc
jnp
hlt
jmp
pusha
cli
mov
test
mov
jno
add
sbb
ret
loope
imul
arpl
(bad)
pop
sub
adc
mov
mov
xchg
jmp
inc
push
mov
jo
pop
hlt
xor
icebp
push
add
inc
mov
(bad)
aad
fwait
mov
test
(bad)
shl
fisubr
(bad)
sbb
sbb
mov
je
lahf
bound
jns
in
in
and
or
fcomp
retf
ins
test
jl
xor
mov
ds
pop
or
cmp
aas
push
add
lock
push
add
stos
fstp
xchg
push
test
mov
ins
push
out
ins
int
cdq
dec
popf
inc
xchg
sbb
pop
and
dec
fdiv
xchg
pusha
out
inc
lods
sahf
dec
mov
jle
jl
xor
mov
push
add
shr
jbe
test
(bad)
pop
inc
jg
cmp
pushaw
mov
dec
xchg
aad
sar
push
shl
loope
repz
cwde
pop
mov
adc
dec
in
sti
fs
and
jnp
inc
scas
jbe
xlat
(bad)
fwait
gs
dec
sub
jp
ss
or
jmp
and
mov
ror
sbb
jmp
xlat
push
mov
push
or
add
pop
ror
gs
pop
es
xchg
inc
aam
aad
out
pop
or
movs
xchg
add
cmp
pusha
dec
xchg
lds
in
fsub
xchg
arpl
fs
pop
pop
dec
inc
mov
sub
mov
cmp
jp
xchg
push
inc
pop
dec
pop
out
fdivrp
jmp
cli
xchg
jp
xchg
shl
mov
sbb
mov
or
sahf
mov
mov
or
(bad)
test
push
inc
and
cwde
adc
test
sbb
sub
pushf
add
repnz
scas
pop
adc
adc
out
push
out
inc
(bad)
dec
addr16
xchg
(bad)
jge
pop
es
xchg
jp
inc
je
int
(bad)
and
jle
mov
outs
cs
pop
hlt
inc
cmp
push
mov
lahf
mov
das
repnz
pusha
inc
rcr
fst
sbb
retf
adc
and
and
push
dec
mov
lock
mov
adc
hlt
es
pop
add
mov
sbb
add
(bad)
mov
mov
fbstp
or
fmul
push
les
out
sub
sbb
adc
mov
jmp
nop
sbb
mov
jle
xchg
dec
ret
gs
sar
shr
adc
sti
lods
or
out
in
aam
sbb
rcl
push
cmps
fisub
cmp
push
cdq
in
adc
std
sbb
xchg
popf
push
inc
xor
ins
pop
shl
int
mov
out
outs
mov
jle
fwait
adc
leave
push
mov
cmps
xchg
cmp
popa
stc
mov
jle
imul
cmp
mov
out
imul
xchg
dec
dec
jae
sub
mov
test
or
sar
loop
sbb
hlt
pop
cmovle
and
scas
fidivr
sub
inc
cs
push
loop
cli
jb
test
and
data16
dec
jg
push
loop
xchg
js
mov
add
mov
jbe
mov
stc
xor
mov
jmp
mov
xchg
jle
(bad)
or
das
and
push
bound
adc
and
cmp
push
(bad)
mov
and
xchg
adc
fcomi
sbb
sbb
and
out
mov
mov
add
inc
jmp
loope
into
push
add
outs
jnp
sahf
test
mov
out
mov
ficomp
mov
xchg
sbb
or
mov
adc
cmps
add
scas
xor
pop
jp
sbb
sub
mov
sar
in
lds
xor
add
das
push
mov
mov
push
jge
inc
sub
loop
bswap
inc
addr16
in
fistp
ss
mov
xor
jecxz
pop
inc
mov
dec
in
scas
popf
add
loop
jmp
mov
cmp
push
retf
cwde
fisub
mov
and
lahf
aaa
cli
sbb
and
jmp
js
add
mov
xchg
addr16
xchg
sbb
fwait
adc
push
pop
adc
fld
mov
push
sub
ins
daa
ins
stc
xchg
mov
jmp
pop
jae
(bad)
pop
mov
enter
inc
adc
jnp
arpl
xor
xor
popf
push
mov
addr16
adc
fstp
or
stos
dec
out
fimul
push
ds
ins
cmps
test
push
adc
and
mov
adc
pop
jae
xchg
and
push
xchg
sub
adc
jp
push
ficomp
push
jle
out
in
inc
nop
pop
es
sub
and
cmp
je
(bad)
fstp
cmc
inc
jno
test
push
xchg
xchg
dec
in
pop
pop
xchg
ja
int
aas
pcmpgtb
xchg
sbb
aaa
cmp
in
mov
(bad)
pop
shl
in
inc
not
inc
loope
mov
cmp
push
inc
aad
test
xchg
mov
or
test
aad
jge
add
xchg
jns
(bad)
cdq
sar
jnp
fidivr
imul
push
pop
mov
jecxz
imul
cmp
fidiv
jp
push
test
lods
xchg
or
xlat
cmp
cmovae
push
sub
stos
pop
loopne
ret
loopne
retf
test
test
out
push
(bad)
repnz
ins
into
test
(bad)
or
pushf
jae
xchg
inc
fistp
out
retf
dec
push
rol
and
cmps
(bad)
aad
ds
adc
inc
ficom
icebp
jge
popa
rol
pushf
in
lahf
and
call
sub
mov
movs
fst
xchg
push
and
sub
icebp
xchg
fdivr
sbb
cmp
ret
data16
js
xchg
mov
inc
shr
stos
not
stos
sub
push
cmp
xchg
loopne
xor
push
jb
mov
cmp
mov
arpl
or
out
aam
or
sbb
in
xor
clc
mov
lock
sbb
pop
xchg
enter
out
ror
xchg
pop
cmc
inc
outs
xor
hlt
cdq
or
data16
test
sub
not
mov
or
rcr
push
dec
and
dec
mov
call
xor
stc
pop
mov
addr16
pushf
lock
push
(bad)
jmp
or
xchg
xchg
and
mov
adc
js
jle
(bad)
out
repz
clc
pop
repnz
and
push
sti
adc
cs
jmp
jmp
fistp
adc
enter
arpl
inc
inc
or
dec
cwde
mov
mov
arpl
cmp
dec
sub
or
ds
mov
repz
rcr
sub
inc
cli
adc
pop
push
adc
mov
sub
cwde
adc
xlat
sub
xchg
dec
jo
add
lods
test
xor
daa
push
sahf
or
mov
fnsave
sbb
popf
in
in
cmp
jp
jge
mov
lea
popa
jno
mov
inc
dec
mov
in
in
dec
fidivr
inc
mov
inc
rol
repnz
daa
ss
sbb
dec
ret
inc
add
inc
(bad)
pop
out
(bad)
xor
iret
(bad)
ss
fst
pop
inc
dec
dec
into
les
xchg
xor
mov
inc
jnp
sub
mov
adc
jl
test
das
pop
push
data16
adc
js
inc
adc
sbb
push
push
rcr
cmp
cld
loopne
ins
pop
or
(bad)
mov
mov
push
sub
lods
out
and
xchg
test
out
out
xchg
fs
adc
inc
and
and
dec
test
cmp
adc
(bad)
rcr
cs
adc
int3
lahf
rcr
int3
test
push
in
outs
sub
and
add
cmps
lods
into
inc
or
pushf
fld
enter
ins
ja
test
call
sub
bound
bound
cli
push
fsub
mov
add
or
jmp
xchg
or
out
cmp
add
dec
xor
xchg
mov
lods
xlat
in
outs
stos
inc
xchg
cdq
and
test
pop
(bad)
pop
(bad)
mov
ins
mov
push
outs
mov
mov
mov
out
push
out
sub
or
cmp
dec
aam
aad
adc
xchg
(bad)
and
add
add
pushf
push
push
xchg
xchg
shl
into
aaa
retf
adc
fs
icebp
gs
cmp
popf
pop
mov
cmp
mov
call
add
in
inc
and
jns
jmp
mov
jle
cwde
jmp
and
sbb
mov
inc
jo
(bad)
lahf
out
xor
imul
pop
xor
pop
jmp
push
jns
xchg
xor
pop
push
push
neg
pop
adc
cmps
fnstenv
cmp
mov
inc
or
retf
es
mov
daa
je
pop
mov
jecxz
in
fstp
outs
ins
sti
ins
xchg
fisubr
dec
xchg
xchg
movs
fild
and
xchg
and
mov
and
inc
cs
iret
push
and
loopne
xor
test
dec
inc
lahf
jb
pushf
and
pop
lea
pop
fcomi
fldcw
icebp
out
pop
fxch
jp
dec
outs
ins
jp
into
adc
outs
cmp
and
cdq
xlat
push
movs
push
test
xor
add
sub
sub
test
in
loopne
pop
add
dec
sub
adc
pop
xor
(bad)
mov
jle
loopne
jbe
rol
lock
adc
mov
out
cmp
lods
stc
cmp
cmps
xchg
push
fist
sti
jmp
sub
jle
out
ja
adc
dec
inc
mov
jge
cmc
inc
mov
(bad)
xor
mov
outs
shl
iret
js
mov
pop
lock
add
(bad)
mov
icebp
aas
sti
or
aaa
xchg
or
jno
add
jge
mov
ficomp
out
jge
mov
cmps
mov
mov
mov
jo
xchg
xchg
not
enter
ret
test
xchg
inc
cmp
inc
mov
shl
mov
jge
sar
fdiv
(bad)
ja
pop
adc
mov
lahf
adc
mov
push
xor
jle
cmp
jle
inc
cwde
xchg
pop
pop
cli
pushf
or
mov
aam
cmp
lea
mov
popf
scas
ins
or
or
out
pop
in
cmc
xchg
jle
leave
mov
scas
mov
imul
lods
xor
dec
mov
mov
cwde
jmp
push
and
das
xchg
push
inc
xchg
fst
(bad)
popa
and
mov
std
ror
test
sbb
outs
stos
push
rol
dec
adc
fs
stos
push
sub
push
inc
push
pop
push
dec
jg
jno
call
push
call
push
in
add
jb
push
adc
mov
not
enter
out
mov
push
xlat
or
pop
(bad)
pop
adc
das
or
xor
scas
fcmovnu
jno
sbb
xor
mov
cdq
test
and
jmp
adc
sbb
add
xchg
inc
les
das
inc
mov
ja
dec
mov
in
pop
inc
test
jle
mov
jp
push
fst
push
fistp
sahf
movs
fcomip
fnstsw
or
imul
stos
jl
repnz
in
mov
addr16
sbb
mov
xchg
shl
mov
jae
pop
inc
fild
in
je
mov
cmp
sub
or
ficom
pop
adc
ins
gs
xchg
xlat
test
inc
sbb
inc
push
inc
outs
jp
movs
xor
sub
push
dec
mov
popa
adc
sub
push
into
mov
xchg
lods
mov
stos
aam
xchg
dec
xchg
and
inc
or
adc
cld
je
dec
jno
push
outs
push
fsubr
jno
or
or
push
add
cmp
xchg
sbb
fmul
pop
inc
mov
xchg
arpl
out
xchg
iret
(bad)
aas
adc
pop
outs
push
fnstsw
div
jae
xchg
inc
lahf
or
movs
xor
jg
pop
xchg
imul
pop
push
or
cmp
push
cli
scas
cwde
pop
or
call
jge
call
jbe
xor
jecxz
inc
ja
or
aaa
push
sub
cmp
out
cmps
pop
icebp
inc
movs
push
retf
or
pushf
xor
mov
xchg
js
and
adc
jl
mov
cmp
scas
stc
cmp
pop
mov
inc
push
xor
in
(bad)
enter
xchg
inc
push
(bad)
cmp
mov
push
xchg
jnp
jg
imul
jnp
arpl
cmp
lds
scas
pop
add
stos
jno
sti
and
xchg
pop
sub
pop
icebp
push
test
aas
push
jns
mov
rol
or
or
(bad)
(bad)
push
aas
dec
inc
mov
sbb
xor
push
arpl
(bad)
and
push
cmp
aam
push
and
int3
xchg
enter
push
(bad)
pop
pop
in
and
sbb
mov
jne
ret
sar
icebp
arpl
and
cs
push
int3
adc
retf
(bad)
in
movs
aaa
jmp
push
sbb
popf
mov
addr16
adc
adc
sti
dec
movntq
out
or
(bad)
cmps
aam
sahf
daa
mov
in
xchg
std
call
movs
or
cld
sbb
sbb
out
mov
add
stc
(bad)
xchg
inc
push
mov
rcr
add
movs
fisttp
push
cdq
out
push
in
mov
and
mov
adc
mov
in
sub
loopne
arpl
jecxz
mov
in
xchg
xchg
arpl
imul
pop
(bad)
loope
adc
ret
and
outs
jmp
sbb
cs
adc
and
inc
cmp
add
leave
cmp
fldz
sub
pop
push
jmp
mov
std
data16
scas
call
mov
leave
mov
mov
xor
inc
push
xor
dec
inc
mov
pop
test
pusha
sub
cs
sub
fdivr
hlt
and
pop
mov
mov
push
add
and
or
and
fcomp
sbb
cmps
mov
cmc
jp
pop
add
addr16
outs
(bad)
and
push
mov
push
jmp
push
es
pop
mov
and
stos
and
push
icebp
jbe
inc
pop
xor
jmp
lods
sti
inc
mov
cmps
add
jne
(bad)
mov
sbb
in
mov
repnz
(bad)
mov
mov
dec
inc
or
xlat
in
lock
sub
dec
movs
dec
clc
mov
add
clc
jae
hlt
stos
out
mov
sbb
and
pop
pop
stos
sub
mov
sub
out
icebp
div
into
in
pop
aaa
jb
ins
imul
cwde
in
dec
jmp
or
ror
xor
jne
jmp
sub
packuswb
addr16
cmc
mov
push
cmp
(bad)
sub
xor
jl
mov
inc
mov
push
arpl
or
and
xor
arpl
add
adc
repnz
cmps
push
jno
dec
sub
cmp
dec
mov
sti
cld
(bad)
sbb
xchg
js
pop
jae
outs
hlt
into
fstp
in
repnz
dec
xchg
jg
inc
pop
or
add
jo
pusha
scas
ins
pusha
daa
jl
in
inc
ficomp
jge
or
fidivr
push
outs
rcr
push
(bad)
pop
jge
addr16
aad
add
mov
xrelease
xor
and
fidiv
pop
xchg
mov
int
nop
mov
clc
sbb
repnz
push
mov
and
mov
fs
jno
xchg
data16
(bad)
test
jge
(bad)
aad
push
cmp
mov
dec
mov
ins
push
neg
xor
pop
ror
xor
leave
ret
dec
mov
or
test
hlt
push
jecxz
push
adc
pop
enter
jno
adc
(bad)
repnz
inc
leave
pop
adc
rol
or
cs
hlt
mov
out
jbe
jns
aaa
mov
xlat
push
das
iret
sbb
int
or
mov
(bad)
lea
xor
(bad)
sub
xchg
and
xchg
std
and
xchg
rcr
(bad)
mov
mov
mov
aam
or
sti
leave
fnsave
inc
repnz
push
int
dec
dec
retf
jno
pop
mov
pushf
dec
mov
xor
or
inc
ja
mov
dec
dec
mov
xor
or
mov
add
push
ins
cdq
mov
cmp
lods
stos
xchg
cwde
sbb
lock
jl
test
pop
test
mov
and
sub
push
jnp
xchg
(bad)
das
out
push
push
nop
scas
in
mov
lea
outs
in
sti
cmp
sub
cmps
push
xor
(bad)
jle
mov
aaa
div
and
(bad)
jp
inc
ret
adc
lods
dec
test
data16
adc
or
bound
stc
xor
jecxz
cmp
add
and
inc
adc
or
xchg
inc
jmp
jb
fistp
and
cmp
fidivr
cs
mov
cmp
test
shr
inc
rcr
cld
adc
adc
jno
ja
imul
sahf
out
sahf
xchg
inc
adc
in
enter
stos
mov
ins
pop
imul
imul
pop
pop
cmc
jmp
push
jg
jge
shl
nop
mov
cmc
scas
mov
add
aaa
sub
cmc
mov
aaa
cmp
xchg
iret
mov
jp
push
pop
nop
mov
xchg
(bad)
mov
inc
loop
out
xchg
rcr
aam
xchg
push
or
bound
fwait
jne
jge
mov
jbe
movs
ins
push
jecxz
mov
pop
push
pop
pop
xchg
shl
in
jmp
div
or
call
mov
or
call
sub
xchg
ret
popf
lea
jmp
rcr
mov
inc
out
repz
nop
add
fucomp
outs
fild
inc
or
fldenv
inc
mov
es
test
pop
and
(bad)
jmp
pop
movlhps
pop
mov
js
popf
lds
jmp
hlt
sbb
mov
sbb
xor
dec
sub
inc
or
arpl
mov
mov
cmp
xchg
lods
pop
lock
(bad)
rol
ds
fmulp
cmp
icebp
jno
xchg
scas
pushf
movs
outs
sub
ja
xchg
xchg
fdivr
mov
ss
pop
jg
cmc
jp
mov
data16
sbb
loopne
mov
fcomip
mov
retf
pop
es
cdq
or
fdivr
(bad)
stos
out
fucomp
pop
sbb
test
or
test
pop
ret
int3
jge
adc
stc
xchg
shl
test
out
mov
js
xor
ret
adc
ffreep
ror
fdiv
out
jnp
pop
push
(bad)
enter
pop
adc
pop
(bad)
mov
loopne
fs
jns
adc
jle
scas
sar
popf
adc
ins
por
cmp
pop
xor
add
or
dec
cli
sbb
adc
pop
fnstcw
xchg
daa
(bad)
shr
push
adc
and
push
mov
in
aam
pop
cmp
adc
stc
stos
adc
les
arpl
dec
fdivr
iret
push
or
adc
xchg
inc
xlat
push
pusha
mov
test
std
mov
sbb
outs
leave
stc
fidivr
mov
(bad)
fstp
mov
prefetch
js
(bad)
sub
adc
mov
daa
cmp
xchg
sar
sar
jmp
sub
sub
mov
stos
push
(bad)
out
xchg
inc
push
daa
and
mov
scas
div
adc
add
push
cdq
dec
mov
xor
lods
adc
jmp
and
daa
jo
std
adc
cmp
stc
fnstcw
mov
pop
out
mov
stos
popf
pop
or
lea
mov
add
adc
inc
retf
jmp
dec
sbb
mov
inc
cmps
xchg
sahf
fwait
and
sbb
iret
mov
mov
(bad)
or
test
xchg
jl
jnp
jo
mov
pop
mov
pushf
mov
(bad)
mov
enter
and
arpl
call
lea
or
stos
movs
pop
mov
xchg
push
and
mov
fwait
enter
(bad)
jmp
call
sahf
mov
jns
popa
(bad)
test
mov
push
int
sub
es
sbb
dec
inc
pop
add
(bad)
imul
lods
push
sar
fcomp
inc
or
out
stc
aad
jne
lock
jle
pop
ds
mov
movs
xchg
out
jmp
push
dec
repz
mov
sbb
adc
mov
lea
pop
mov
mov
ja
popa
xor
push
(bad)
jp
xor
pop
cmp
add
in
jae
jp
push
cmp
bound
iret
aad
mov
imul
outs
push
and
mov
xchg
mov
popf
(bad)
jns
shl
int
test
xchg
idiv
lods
sub
xor
inc
scas
idiv
ja
cmp
inc
inc
and
add
movs
cmps
mov
repnz
mov
inc
js
dec
xchg
jno
ror
mov
cmp
lds
(bad)
pop
xchg
add
stos
es
mov
xor
int3
inc
pop
pop
aam
mov
lahf
test
les
icebp
lods
les
mov
dec
popf
ds
dec
or
in
popf
cmps
mov
daa
mov
lds
mov
loope
pop
das
jmp
loop
nop
fist
jne
xchg
mov
rcr
and
clc
int
pusha
add
mov
fisubr
ret
(bad)
aas
call
xor
dec
cmp
adc
jno
sbb
lea
imul
sub
jnp
out
mov
jne
xchg
push
ss
adc
jl
pop
add
jp
jle
inc
xchg
cmp
mov
ja
scas
movs
mov
inc
dec
or
push
sub
push
inc
sbb
movs
mov
jo
cdq
in
fcom
dec
ins
dec
call
fld
imul
rol
shr
mov
jns
fisub
stos
aam
arpl
shl
mov
nop
ret
jns
inc
lea
mov
adc
rep
pop
ror
push
mov
jb
mov
ss
test
adc
xor
jg
in
in
pop
addr16
lock
xlat
or
mov
dec
pop
(bad)
lahf
ja
fistp
pop
mov
test
movs
cli
or
mov
sub
pop
inc
ficomp
aaa
or
push
adc
jnp
xor
shr
les
sub
xchg
inc
lds
mov
adc
loopne
push
jg
adc
mov
fwait
adc
test
cli
xchg
or
stos
test
pop
nop
pop
rol
cmp
popa
jno
inc
pop
or
jmp
sti
ds
lock
shr
pop
ret
scas
inc
fcomp
rcr
mov
or
pop
jns
sub
xor
cmp
mov
iret
loopne
mov
nop
aad
out
pop
daa
cmp
imul
not
test
jle
mov
mov
(bad)
loopne
cmp
(bad)
xchg
movs
scas
mov
push
pop
and
ret
out
addr16
out
dec
clc
mov
and
into
cmp
fild
data16
sub
dec
(bad)
call
jge
and
sub
jne
mov
in
xchg
xchg
mov
jp
pop
or
loope
xor
cmc
cli
hlt
ficom
or
cmp
pop
xor
out
push
hlt
adc
retf
adc
sub
movs
jbe
sbb
lds
hlt
mov
cmp
jb
lods
addr16
in
pop
outs
mov
dec
repz
ror
xchg
lea
retf
xchg
xchg
and
out
pop
je
icebp
enter
mov
inc
mov
sbb
push
xchg
in
and
test
stc
shl
dec
jae
sub
push
sub
popf
in
jle
pop
jecxz
pop
mov
or
test
cmp
out
arpl
add
sbb
lahf
(bad)
rcr
int
sub
cli
cdq
ja
hlt
cmp
push
adc
xor
clc
loope
xlat
aad
(bad)
jmp
jno
cmp
rol
mov
shl
(bad)
push
push
mov
push
dec
in
sti
xchg
adc
add
out
aam
mov
sbb
stos
pop
mov
adc
scas
xor
add
jnp
dec
aad
fsubp
cld
mov
fcomp
out
mov
int3
js
out
and
call
inc
inc
jae
push
push
fild
mov
xchg
movs
mov
sub
adc
(bad)
sbb
or
and
mov
in
sbb
into
jle
sbb
xchg
leave
out
aaa
in
dec
pop
cmp
dec
mov
or
ret
adc
jle
stc
inc
loopne
dec
pop
push
rcl
sbb
and
and
xchg
shl
cdq
xchg
int3
cmp
mov
mov
sbb
add
xchg
cmc
adc
push
or
mov
pop
outs
cmp
xor
and
std
fimul
mov
retf
pop
cmp
pause
popa
jp
dec
(bad)
les
pusha
and
cli
adc
ror
mov
repnz
(bad)
push
dec
lods
adc
jecxz
sub
das
mov
jmp
mov
mov
xchg
pop
dec
mov
mov
scas
fisttp
pop
push
ds
sbb
adc
cmp
jnp
mov
mov
jnp
xchg
xor
cmp
push
into
js
cmp
push
sar
xlat
aam
(bad)
sbb
fstp
and
lock
cs
movs
pop
adc
mov
popf
fwait
loope
inc
shl
pop
dec
dec
cwde
xchg
inc
pop
pop
movs
shr
fisub
fcom
push
jne
mov
or
cmps
push
movs
mov
mov
das
in
(bad)
cld
xchg
mov
mov
pop
repz
inc
sahf
enter
adc
mov
mov
ds
lea
pushf
adc
add
mov
sub
shl
dec
add
out
xor
sbb
adc
mov
pop
or
sar
popf
cli
jbe
add
push
mov
inc
arpl
lods
bound
in
add
mov
std
ja
test
dec
les
shr
rcl
jae
out
push
cmc
cs
cmps
jne
xchg
jb
mov
test
mov
cmps
call
jp
add
or
lods
sub
das
(bad)
(bad)
mov
xchg
es
bound
cs
bound
imul
xchg
test
pop
clc
in
fwait
mov
les
stos
sub
cmp
bound
pop
mov
xor
inc
lahf
xchg
push
ret
sbb
mov
push
out
lods
cmp
pop
sub
in
retf
je
sub
mov
mov
mov
jl
in
popf
cli
sub
cmp
outs
(bad)
push
mov
and
enter
mov
mov
ds
ret
(bad)
xchg
inc
ret
movs
fidivr
shl
(bad)
mov
dec
xor
mov
jb
int3
lods
cmp
mov
mov
aad
icebp
ret
xchg
fcom
out
inc
xchg
and
adc
mov
push
stc
icebp
or
into
mov
mov
jns
adc
lock
cmp
adc
lea
jne
mov
push
jns
sbb
or
pusha
ss
jnp
repnz
loope
dec
xchg
lock
movs
lahf
ss
mov
xor
ds
leave
js
adc
cli
xor
inc
icebp
mov
push
retf
jae
pop
sub
nop
pop
daa
sub
push
add
lods
bound
pop
adc
(bad)
xchg
scas
push
sbb
les
cmp
(bad)
xor
adc
out
out
add
xor
mov
cmps
adc
sub
loope
out
retf
dec
cs
hlt
int
mov
ins
mov
pop
mov
mov
(bad)
data16
in
nop
in
repz
xchg
cmp
psubq
sbb
outs
ret
int3
test
cwde
adc
and
icebp
and
ret
and
imul
(bad)
jecxz
mov
loop
or
repz
xchg
adc
xchg
pop
pop
cmps
aas
popa
ss
hlt
or
pop
or
enter
leave
pop
dec
inc
add
inc
les
ret
call
jbe
mov
in
xor
mov
mov
mov
push
push
xchg
pop
jbe
mov
fwait
xchg
out
ret
daa
(bad)
(bad)
imul
push
cmp
xor
repnz
mov
dec
(bad)
(bad)
cli
movs
or
mov
repnz
lahf
mov
mov
fsub
or
mov
bound
jbe
push
enter
pop
mov
into
jmp
shr
jle
sqrtps
jo
popa
or
pop
sub
inc
(bad)
loop
push
push
or
loope
ret
sub
or
mov
lea
xor
sub
sbb
fiadd
rcl
lods
pop
gs
jecxz
adc
pop
mov
gs
add
fcomp
mov
sbb
jp
xchg
jb
mov
push
xor
sbb
nop
xor
xchg
leave
dec
movs
arpl
mov
ins
imul
jmp
mov
add
movs
pop
jmp
test
icebp
xor
push
repz
mov
(bad)
cmp
xchg
push
adc
pop
mov
push
xor
mov
pop
pop
jnp
imul
lea
mov
cmp
loopne
sti
add
xor
fsubr
sti
cmc
scas
mov
imul
mov
stos
push
jae
add
icebp
or
sub
mov
cmps
ret
repnz
mov
leave
je
pop
icebp
outs
shl
jp
test
call
jb
cs
jecxz
stos
cmps
or
jno
and
sbb
inc
int3
mov
call
repz
retf
call
xlat
jo
cmp
shl
mov
xor
add
stos
cmp
cmp
xlat
adc
sub
(bad)
lea
pop
mov
and
cli
(bad)
or
aad
and
inc
jbe
arpl
mov
in
lods
movs
pop
enter
mov
or
scas
pusha
xchg
js
mov
stos
daa
js
adc
jge
or
or
pop
sbb
inc
stos
sahf
(bad)
(bad)
jecxz
cmp
test
jmp
sbb
in
int3
sub
xor
aam
stos
enter
in
sub
mov
or
xor
mov
add
and
dec
test
cdq
pop
mov
sahf
jmp
in
mov
jae
daa
or
pop
not
fsubr
in
imul
sbb
mov
jns
daa
jnp
adc
adc
push
add
pop
jge
push
push
and
mov
repz
pop
ins
js
dec
or
xchg
or
shl
add
xchg
xchg
xor
in
adc
ss
add
imul
ins
repnz
push
lahf
rol
gs
pusha
inc
add
jns
(bad)
call
movs
jno
adc
pop
repnz
mov
repnz
in
int3
in
ret
mov
or
fimul
ins
mov
dec
adc
and
repz
jle
sbb
pop
(bad)
jmp
mov
int3
dec
and
jb
movs
mov
lods
sub
sti
mov
jnp
mov
or
imul
push
ficomp
int3
shl
cmp
scas
daa
pop
iret
dec
push
lods
jle
push
dec
mov
arpl
mov
jecxz
or
xor
xchg
adc
pushf
in
mov
das
daa
retf
push
jl
jbe
and
out
jle
cs
dec
dec
test
adc
sub
test
je
lahf
test
adc
cli
pop
aam
jae
mov
xor
test
(bad)
cdq
cli
dec
jp
in
shr
push
mov
and
(bad)
xchg
add
jl
push
cmp
push
loopne
push
pop
test
sub
push
fistp
fmul
sbb
dec
and
cld
jl
repz
or
push
jge
lahf
push
out
scas
mov
out
and
xchg
inc
test
sbb
and
(bad)
in
inc
shl
mov
and
jb
mov
push
outs
jo
aam
hlt
ret
cmps
repz
retf
jmp
lods
jl
xchg
outs
popf
pushf
test
push
ds
pop
gs
(bad)
xor
adc
cmp
pop
repnz
icebp
enter
dec
ins
inc
xor
fimul
out
je
add
sub
sub
das
add
jo
out
loop
jnp
push
xor
fld
pop
mov
cs
aas
stos
pop
add
jmp
cmps
icebp
sbb
or
ret
iret
ss
jns
or
sub
je
jbe
xchg
ja
mov
(bad)
jns
mov
adc
imul
pop
out
cs
rcl
mov
inc
mov
clc
pop
retf
inc
rcl
ins
lods
mov
mov
add
aas
jno
ins
xor
mov
xchg
cmp
dec
in
es
jae
aaa
jge
icebp
cmps
mov
pop
add
mov
mov
pop
mov
mov
mov
test
std
inc
test
xchg
nop
(bad)
sub
pop
mov
cwde
xor
sahf
push
mov
push
adc
dec
ret
sub
ss
cs
mov
xor
jmp
retf
xor
gs
and
and
(bad)
pop
mov
inc
shl
cwde
aaa
dec
loop
dec
(bad)
(bad)
mov
retf
mov
imul
jge
les
sub
sbb
imul
(bad)
(bad)
mov
pushf
cwde
test
sar
dec
pop
movs
and
jl
push
loopne
sahf
jge
push
jle
sbb
mov
lahf
sbb
add
in
lds
idiv
jg
adc
icebp
sub
fcomp
ret
and
sub
jns
ret
sbb
paddusw
sub
nop
inc
dec
mov
and
outs
int3
ror
stos
push
daa
mov
mov
xor
cmp
sahf
xchg
add
data16
cmp
mov
cs
pop
sbb
push
mov
int3
test
jno
hlt
mov
in
jg
adc
pop
int3
sub
xlat
ret
or
and
ja
or
mov
jl
cmp
push
sbb
fisub
in
in
in
dec
xchg
clc
pop
into
imul
sub
in
aas
push
dec
cld
add
cmps
in
adc
or
repz
cs
push
fiadd
repnz
inc
xchg
inc
jae
pop
mov
sub
sub
xlat
jb
lahf
or
push
cmp
jmp
and
push
xchg
ficomp
std
imul
imul
lock
hlt
add
and
xor
shl
lea
icebp
test
sub
hlt
jle
mov
shr
mov
test
ret
inc
lahf
xchg
iret
lea
xlat
popf
mov
pop
jo
sbb
sbb
mov
add
fst
sti
std
mov
mov
or
stos
mov
pop
jns
mov
fst
or
jecxz
sub
add
ja
iret
mov
and
(bad)
loopne
in
fsub
stc
jb
sub
fcmovnb
push
in
mov
adc
mov
add
jecxz
mov
pop
je
sub
js
xchg
sub
pop
int3
inc
dec
cmps
push
mov
sbb
(bad)
das
gs
into
xor
push
mov
sub
and
pop
or
sub
and
inc
xor
dec
outs
and
pushf
lods
fnstsw
stos
add
mov
adc
sbb
or
leave
mov
push
call
push
ret
rcl
ret
scas
or
cmp
(bad)
sub
idiv
aas
and
movs
push
ffree
sbb
push
xchg
fisttp
cmps
adc
stc
pop
mov
add
loop
adc
cmc
and
push
in
gs
cli
sar
out
imul
cmc
sub
jmp
push
aad
int
repz
enter
retf
inc
sbb
pop
icebp
(bad)
mov
pushf
call
(bad)
cli
dec
scas
mov
jge
imul
push
lea
or
push
mov
xchg
sub
ja
out
mov
xchg
and
loop
adc
aas
loopne
jecxz
pop
cld
cmc
and
loop
cmp
lock
mov
in
test
lods
push
sub
ja
inc
leave
in
scas
sub
and
cmp
push
out
mov
cmp
cmp
dec
or
pop
xlat
dec
inc
xchg
push
mov
jns
aas
mov
dec
test
outs
call
fcomp
xor
jae
or
loope
fwait
cmp
(bad)
and
mov
mov
ins
fwait
pop
or
and
jp
div
dec
xchg
mov
and
sbb
sbb
push
inc
aas
mov
loop
bound
sub
mov
push
xlat
or
popf
inc
cmp
sbb
push
push
test
or
xchg
push
div
pop
loope
lock
int
jns
iret
lea
pop
aas
cli
mov
in
(bad)
outs
sahf
cmp
fstp
test
mov
(bad)
jecxz
adc
push
sub
rol
push
and
(bad)
or
aas
in
mov
push
sar
push
mov
sub
xchg
adc
pop
jns
add
add
and
push
(bad)
test
(bad)
leave
imul
push
mov
xchg
test
out
add
and
cmps
jle
add
fild
pop
movs
xchg
fisub
test
xchg
ds
ror
adc
lock
mov
gs
jmp
nop
int3
pop
push
mov
es
call
sub
xchg
(bad)
das
push
sbb
inc
aaa
fwait
dec
fwait
scas
loope
scas
je
add
gs
xor
mov
in
jp
(bad)
rcl
or
daa
test
inc
in
in
push
jp
int
in
gs
data16
rcl
sbb
and
jle
test
gs
cmp
mov
mov
mov
mov
outs
enter
sbb
push
in
or
fwait
mov
js
mov
fs
push
pop
jb
out
sub
or
pusha
je
mov
es
call
imul
(bad)
jecxz
loop
jmp
sbb
fcmovbe
fidiv
adc
test
arpl
nop
retf
jge
xchg
hlt
lds
fisttp
mov
xchg
dec
xor
add
dec
clc
leave
pop
mov
repnz
mov
cld
cmps
aam
stc
ror
icebp
cli
cmps
sbb
in
inc
push
repnz
int
call
and
and
xor
sub
jmp
dec
and
scas
xor
sbb
(bad)
push
xor
jmp
rol
jl
jb
push
mov
test
bound
xlat
into
jo
rcr
ja
fbld
stos
inc
push
sbb
mov
icebp
xor
and
sub
inc
ret
ins
es
fisub
mov
xchg
je
icebp
adc
or
aad
in
jae
add
dec
(bad)
cmps
cli
pop
test
mov
daa
sub
inc
pop
add
adc
pop
lahf
test
sub
shl
shr
aaa
sbb
mov
pop
push
inc
xor
retf
pop
jmp
faddp
test
xchg
mov
scas
and
icebp
push
add
cmc
mov
sar
inc
mov
rol
push
ins
push
rcr
cwde
xchg
xor
out
or
push
inc
jb
mov
sbb
push
mov
loop
fwait
jle
or
aam
push
fs
add
add
pop
push
scas
dec
in
(bad)
cwde
into
jnp
adc
rcr
cld
sub
inc
test
and
ds
or
mov
out
jno
scas
xor
xchg
xchg
ret
sahf
arpl
mov
cmps
sar
std
shl
mov
xchg
mov
mov
pop
stos
mov
retf
fs
mov
mov
in
mov
shl
retf
push
sub
dec
out
xchg
call
adc
mov
adc
icebp
push
mov
bound
and
outs
call
xchg
rcr
imul
xchg
call
ins
stc
pop
xchg
adc
stc
pop
cwde
jecxz
loope
push
nop
jge
push
xchg
shr
sub
adc
mov
push
call
pushf
pusha
lea
stc
add
inc
mov
retf
imul
arpl
out
push
add
mov
ins
aas
pop
mov
jmp
sub
dec
ficom
push
mov
fidivr
jg
xor
and
mov
mov
rcr
lahf
pushf
xor
pop
repnz
mov
jo
test
push
jl
fcomp
jno
ss
leave
xlat
mov
lahf
ret
sub
mov
cmp
cwde
xchg
(bad)
cmp
cmp
cmp
mov
inc
jb
out
cmp
ins
or
in
mov
or
ret
js
or
dec
out
nop
inc
sub
pop
ss
push
push
(bad)
xchg
cmp
lds
sbb
cdq
inc
and
fwait
in
push
pop
das
in
dec
jae
xchg
dec
jecxz
pop
(bad)
out
call
mov
loop
lods
and
jns
mov
jge
es
push
push
out
sbb
adc
sub
out
xchg
push
push
pop
test
int3
stos
pop
cwde
stos
addr16
cmps
pop
adc
mov
push
cmp
jns
fwait
in
xchg
aaa
jnp
popa
cmp
stc
ret
frstor
ficom
jge
add
mov
stc
stos
jp
mov
cdq
addr16
outs
aaa
inc
mov
xchg
repnz
jp
pop
push
pushf
inc
ss
xchg
stc
in
fild
adc
inc
and
xchg
out
fbstp
pusha
sbb
adc
pusha
add
mov
call
and
push
std
daa
or
out
mov
jge
xchg
std
xchg
mov
fsubp
ficom
cmps
push
lods
mov
into
jno
push
jbe
hlt
fld
push
ror
cmp
int
mov
adc
cmp
sub
movs
(bad)
(bad)
ret
or
push
mov
cmp
scas
das
retf
sub
movs
ror
aas
cmp
repnz
stos
mov
scas
xchg
iret
jg
sti
mov
(bad)
ds
(bad)
ror
popa
xor
and
mov
jg
dec
mov
cli
int
pusha
addr16
add
adc
push
icebp
and
jb
fwait
xchg
mov
sti
outs
sub
push
fwait
(bad)
pushf
data16
dec
cmp
popa
xor
mov
cmp
and
and
mov
(bad)
fnstcw
xor
or
test
pop
cmp
xchg
inc
movs
out
cmp
inc
inc
in
cwde
mov
inc
xor
jg
ror
pop
adc
fstp
xchg
popf
fcom
fadd
pop
cld
shl
and
jo
aam
mov
gs
lods
out
adc
or
jae
(bad)
cli
cmp
sbb
jmp
jecxz
push
shr
pop
lahf
mov
adc
dec
ret
push
in
add
or
mov
mov
dec
out
add
mov
and
(bad)
xchg
out
xchg
push
pop
dec
je
retf
push
push
idiv
cmp
dec
lock
test
and
or
imul
adc
mov
inc
repz
call
sbb
test
adc
xchg
out
inc
add
jmp
jo
ss
out
ins
or
imul
out
and
xchg
loop
mov
and
sbb
stc
adc
or
popa
inc
inc
mov
dec
mov
push
dec
ss
mov
ror
and
out
xor
popf
cmp
adc
aad
aas
mov
aas
hlt
xor
mov
arpl
mov
jb
xor
xor
jno
call
fdiv
sar
(bad)
cmp
xchg
push
icebp
in
push
sbb
ss
(bad)
(bad)
pop
sub
cmovg
mov
sbb
and
dec
icebp
shl
and
gs
test
retf
sahf
mov
mov
jmp
repnz
mov
push
add
loope
les
push
add
das
in
data16
or
xor
jae
fistp
sub
xor
in
fnstenv
xchg
add
ror
popf
not
add
jp
xor
push
out
jbe
icebp
cmp
xchg
test
imul
aaa
(bad)
cmps
or
hlt
xor
pop
addr16
mov
(bad)
ins
or
fldcw
test
push
lds
mov
nop
movs
es
bound
into
aad
aad
jecxz
test
loop
dec
sub
ins
movs
push
or
fstp
mov
mov
stos
add
mov
das
fwait
dec
jmp
jne
cmps
jp
retf
std
mov
xor
pop
mov
rcl
xchg
push
xchg
rcl
fwait
jae
add
mov
popa
xor
cdq
pop
mov
aas
(bad)
hlt
dec
(bad)
cmp
imul
pop
jg
jmp
outs
mov
rcl
cmp
sbb
fisub
sbb
loopne
test
mov
jp
stc
js
stos
ficom
or
hlt
and
(bad)
je
call
in
push
inc
xchg
xchg
adc
rcr
rcl
out
leave
test
mov
(bad)
cwde
xor
adc
sbb
mov
xor
in
mov
stos
neg
cmp
fs
and
mov
cmp
xchg
or
xor
(bad)
neg
jmp
addr16
js
or
lahf
sub
cld
pop
pop
leave
enter
test
jmp
rcr
cmp
sbb
and
dec
call
jg
push
loop
xor
scas
push
or
rcr
(bad)
jno
fcom
ins
mov
scas
xchg
xchg
mov
mov
retf
xor
jmp
pop
add
xchg
jnp
sar
rol
and
dec
pop
movs
(bad)
push
(bad)
xor
in
adc
mov
ds
daa
inc
shl
xchg
arpl
sub
pusha
inc
ins
aas
je
mov
jno
idiv
shl
inc
call
jo
(bad)
sbb
lods
dec
xchg
add
sbb
aas
(bad)
and
sub
cwde
adc
lods
xlat
int3
push
loope
out
fcomp
cmp
movs
cwde
mov
sar
in
jecxz
mov
into
popa
fldlg2
jmp
fdiv
adc
xchg
inc
mov
imul
ins
mov
pop
pop
push
xor
icebp
adc
(bad)
cmp
js
or
jb
ds
mov
cmp
cwde
pop
adc
add
out
xchg
arpl
pop
in
loop
neg
fs
idiv
leave
jmp
adc
xchg
sbb
pop
xor
mov
test
int3
lea
add
jmp
pusha
cmps
and
dec
inc
mov
jl
fnstsw
pop
loopne
in
fdivr
cs
push
or
jg
adc
cmc
adc
and
lahf
jno
pop
sbb
sub
xor
mov
rcl
in
xchg
pop
mov
mov
mov
dec
hlt
out
imul
push
shl
jb
fadd
sub
lock
data16
jmp
arpl
(bad)
daa
les
mov
std
fild
fisubr
cmp
sbb
xchg
add
mov
jb
imul
jecxz
in
push
pop
fmul
imul
loop
mov
enter
pop
in
popf
cmp
je
js
jge
out
sub
rcr
and
sub
pusha
frstor
test
inc
xchg
add
pushf
test
cmp
ss
and
push
add
cmps
loopne
mov
mov
ins
fnsave
dec
loope
clc
ret
sub
lods
mov
push
(bad)
sub
cmp
add
xchg
push
loop
push
inc
jbe
je
jmp
xor
jno
hlt
dec
dec
or
cli
cmps
push
pop
adc
jae
icebp
pop
adc
sbb
aad
sub
mov
mov
cmp
dec
or
test
or
sbb
dec
push
sub
neg
sbb
iret
popf
and
push
repz
adc
retf
(bad)
stos
inc
out
ja
loop
inc
stos
sti
add
out
jmp
popf
cwde
mov
xchg
in
pop
sbb
fidiv
cwde
xchg
jecxz
or
mov
mov
pusha
cs
std
fisttp
test
pushf
jbe
mov
lods
push
(bad)
push
push
adc
push
iret
sub
aam
clc
push
iret
jno
push
mov
pushf
inc
push
iret
jae
repz
jge
rcl
jmp
scas
sahf
sub
jle
inc
mov
cmc
pushf
mov
pop
int3
add
ins
sahf
cdq
xchg
xchg
lock
mov
loop
pop
mov
fdivr
xchg
dec
retf
xchg
and
ficom
sbb
out
dec
cmp
push
adc
lahf
xchg
lea
push
popw
loop
cmp
repnz
cmc
loopne
jge
xchg
ja
xchg
add
arpl
(bad)
std
ret
and
and
sbb
call
pushf
cmp
cs
push
mov
retf
dec
sub
mov
hlt
imul
ja
jg
mov
jg
sub
clc
shr
je
sbb
outs
int
cmp
inc
outs
cwde
test
sbb
ins
fabs
movs
jge
sub
mov
mov
jmp
inc
sbb
lock
pop
sub
test
loope
pop
adc
shl
scas
test
cmp
xor
std
mov
dec
xor
jl
dec
aaa
mov
inc
in
dec
outs
xor
imul
fst
adc
inc
inc
jl
icebp
fbld
sub
cld
daa
repz
sbb
push
adc
sub
adc
jge
cmp
sbb
or
mov
cvtps2pd
cs
call
sti
xchg
xchg
sub
xchg
scas
popf
cmp
mov
pop
lock
test
adc
movs
jne
dec
push
hlt
sub
mov
xor
sub
ret
and
cmp
push
xor
dec
into
mov
sub
pop
or
or
aad
mov
fisub
fmul
lods
js
gs
sub
pop
xor
leave
or
xchg
jge
mov
mov
popa
mov
cmp
fisub
push
jmp
sbb
dec
adc
xor
push
sub
or
cmps
mov
in
mov
and
lods
push
sbb
imul
lods
fnsave
clc
mov
xchg
ja
jns
jb
sub
sub
lea
sbb
fsubr
push
fisttp
sub
cmp
(bad)
push
das
or
xchg
mov
pop
scas
retf
mov
dec
retf
inc
adc
leave
mov
lea
xor
pop
popw
inc
ror
and
dec
das
cdq
cmps
push
mov
sub
cmps
popa
test
and
ins
dec
cmp
xor
jmp
out
cmp
and
or
sbb
cmp
push
addr16
cmc
fwait
aam
popf
mov
mov
aas
ins
into
xor
adc
das
addr16
cmp
mov
mov
and
ret
xchg
mov
sbb
outs
fwait
xchg
mov
inc
int3
add
dec
cld
xchg
stos
xchg
push
enter
neg
pop
xchg
es
mov
push
dec
lods
jo
add
adc
clc
test
fcmovnb
xchg
cmp
popf
mov
mov
es
jp
lock
dec
xor
imul
sbb
call
pop
add
mov
and
into
pavgw
das
idiv
call
xor
shl
loopne
repnz
dec
push
aas
or
ret
pop
dec
sub
jg
mov
mov
jmp
xlat
cmps
pop
inc
jmp
mov
xchg
jae
jge
xor
jns
dec
lahf
push
pop
(bad)
cs
cmp
fwait
mov
mov
leave
jb
push
add
push
nop
movs
ins
push
mov
rcl
jbe
in
int
gs
test
shr
es
xchg
xchg
cmps
cmp
ins
mov
jbe
shr
sahf
out
adc
sbb
jae
pop
test
loop
mov
jge
inc
jb
mov
push
cmps
in
(bad)
retf
stos
pushf
sahf
mov
or
sbb
or
js
nop
ror
xor
imul
cmp
stos
out
lods
fmul
loop
mov
dec
test
inc
aas
gs
je
adc
inc
adc
or
sub
push
pusha
cmp
mov
or
aas
sar
jne
xchg
sbb
push
and
repz
mov
sti
es
(bad)
pop
inc
stos
add
mov
inc
push
inc
loope
xor
push
mov
popf
dec
push
push
sar
outs
jge
mov
sub
push
lahf
mov
sub
ror
sbb
fiadd
pop
mov
cmp
jle
push
fidivr
sbb
(bad)
pop
jns
push
call
fdiv
cmc
pop
or
test
in
lds
or
int3
aad
push
inc
inc
lods
fwait
ins
dec
mov
sar
cld
retf
jecxz
scas
push
sub
lds
cmp
cs
cmp
loopne
and
lds
test
mov
or
imul
or
jge
ja
push
mov
cld
adc
jge
add
mov
or
dec
jb
and
sbb
stos
sbb
xor
aam
mov
mov
xchg
outs
jg
push
aaa
jl
pop
xor
sbb
and
sar
fs
inc
scas
ins
push
popf
loopne
sub
ror
jl
sbb
xlat
mov
icebp
in
inc
inc
cmp
aaa
fwait
sub
pop
xchg
or
sbb
add
retf
sbb
mov
mov
int3
stc
idiv
cli
push
out
jb
lods
or
or
dec
imul
aaa
inc
enter
repnz
push
imul
cmp
(bad)
cmp
mov
jecxz
xchg
loopne
mov
bound
xor
jns
repnz
std
sub
mov
int
dec
jns
cmp
fisubr
add
dec
retf
mov
adc
cli
sub
mov
mov
pushf
fcmovne
call
loop
iret
xor
aad
iret
stc
dec
mov
sub
enter
repz
stos
test
xchg
push
or
jne
cmps
shl
cmp
pop
jb
cmp
ja
dec
repz
mov
jb
adc
or
rol
mov
adc
inc
retf
dec
xor
mov
stc
xlat
add
imul
retf
mul
or
push
pusha
aam
push
(bad)
add
arpl
je
(bad)
out
ret
add
sbb
fimul
pop
push
leave
loop
cmps
pop
xchg
dec
dec
cmp
sub
and
xlat
sbb
cs
jecxz
pop
sub
out
lahf
sti
cld
fwait
js
push
lods
pop
xchg
xor
call
mov
cdq
xchg
mov
movs
sbb
arpl
push
pop
xlat
mov
cdq
in
(bad)
sahf
ja
inc
mov
xor
test
inc
pop
stos
or
add
clc
inc
jmp
mov
jbe
add
cmp
test
cwde
fstp
shl
mov
sub
loop
ins
cmc
xchg
add
cmp
cmp
pusha
repz
and
(bad)
gs
sbb
bound
pop
push
jae
(bad)
clc
dec
jmp
scas
sbb
xlat
or
sbb
mov
sbb
push
jns
jecxz
(bad)
push
ins
jp
scas
jmp
xor
enter
push
jmp
pop
clc
movs
jo
in
ret
fwait
popa
push
in
xor
xchg
pop
dec
repz
jo
ror
out
dec
les
(bad)
jg
movs
xchg
dec
jbe
inc
loope
mov
data16
cmp
and
scas
xor
jmp
mov
iret
sub
cmp
(bad)
cli
mov
xor
adc
add
sub
lea
mov
int
repz
add
mov
and
push
xchg
push
fcmovnbe
mov
dec
shl
hlt
(bad)
test
fdivp
push
daa
or
push
push
push
jmp
mov
mov
aas
mov
call
dec
and
push
movs
mov
lea
and
add
aas
push
dec
test
fcom
stos
inc
inc
mov
pop
iret
es
rcr
sbb
xchg
leave
test
ja
aam
dec
out
idiv
es
fidivr
test
inc
and
aaa
repz
mov
(bad)
scas
cmp
repz
lahf
fs
or
lea
mov
and
loop
sub
stos
into
pop
mov
dec
nop
mov
mov
ficomp
xchg
mov
pop
pop
rcl
(bad)
sbb
fisttp
or
(bad)
movs
jae
xor
dec
push
lea
jno
mov
dec
or
cwde
add
sub
jns
jp
xchg
inc
data16
fucomip
mov
test
xchg
stos
js
dec
jnp
mov
clc
aaa
ret
mov
arpl
loope
enter
and
adc
mov
nop
add
mov
and
rol
cmp
jp
out
fs
mov
(bad)
or
ret
ret
(bad)
and
lods
lock
ins
push
pop
dec
xchg
pusha
sub
into
mov
push
stc
test
outs
push
ss
bound
mov
out
pop
fstp
fild
stos
nop
loope
add
loope
fnstenv
aam
rcr
and
mov
ret
xchg
lods
mov
repz
sub
in
mov
icebp
sub
jno
push
fwait
pop
fadd
jbe
movs
push
mov
movs
xchg
sbb
push
mov
and
and
pusha
mov
cmp
mov
call
fist
xor
jno
cmps
outs
inc
fst
mov
mov
and
push
pop
retf
stos
pop
ins
cdq
scas
mov
out
into
mov
jle
out
mov
add
adc
idiv
fisubr
clc
dec
cmp
pop
xchg
adc
cmp
imul
sbb
mov
shl
sahf
add
push
jge
ficom
sbb
nop
fwait
sbb
lds
mov
adc
test
cmp
mov
frstor
or
aas
dec
fdiv
cdq
ins
adc
sub
fs
fs
xor
jbe
les
mov
sub
fbstp
fsub
ins
movs
cdq
mov
imul
pop
scas
mov
mov
scas
pop
and
rol
sub
arpl
int
inc
push
pop
mov
adc
dec
cwde
mov
mov
fistp
mov
test
(bad)
sub
mov
sub
mov
nop
pop
dec
add
addr16
sti
ins
xor
in
mov
jae
lods
xchg
inc
cli
sub
xchg
cmp
sbb
pop
int3
xor
retf
push
pop
retw
xor
loopne
push
xor
mov
mov
pop
neg
xchg
cdq
sbb
mov
mov
(bad)
xlat
pop
dec
aam
xor
stos
xor
stos
fidiv
inc
or
mov
es
stos
scas
sbb
shl
cdq
stos
ja
or
push
add
scas
stos
fdivr
jp
mov
jae
mov
jl
xchg
jae
fist
ror
or
sahf
add
xchg
loope
and
outs
sar
push
out
sahf
das
dec
cwde
mov
inc
mov
nop
cmp
xchg
cmp
mov
imul
mov
popf
cmp
sub
inc
(bad)
jne
mov
(bad)
jp
out
xor
fldcw
(bad)
data16
xchg
nop
pushf
dec
rcr
jns
pop
sbb
outs
pop
pop
pushf
movaps
sub
cdq
push
sbb
mov
cmp
and
ret
adc
(bad)
push
pop
mov
and
out
std
ins
push
mov
dec
add
pop
pop
es
out
dec
ror
imul
or
int
dec
mov
out
mov
push
lahf
shl
and
out
ror
mul
imul
mov
in
gs
cmp
and
mov
sub
mov
add
add
sbb
sbb
repz
sar
stos
outs
adc
mov
in
lods
sbb
ret
add
mov
xchg
sbb
push
mov
jo
push
cmp
xchg
jg
and
loopne
jnp
std
push
pushw
enter
cmp
mov
ds
add
outs
dec
js
aad
xor
pop
fsubr
in
pop
movaps
mov
jl
into
(bad)
pop
jb
mov
or
fs
leave
aas
not
test
out
(bad)
fnstenv
cmp
ret
pop
cwde
es
add
bound
sti
or
call
sub
(bad)
int
sbb
repz
add
inc
lahf
stos
jle
push
fisubr
cmp
call
sar
mov
add
(bad)
sbb
test
jno
in
push
imul
imul
cld
(bad)
stos
enter
lods
push
test
test
aaa
scas
pop
jge
cmp
(bad)
pop
daa
sbb
pusha
bnd
jns
push
imul
xchg
scas
and
push
mov
and
or
fist
mov
add
nop
jae
pop
add
dec
cmp
mov
mov
dec
xchg
jo
xor
jo
dec
mov
or
daa
jae
out
jl
push
test
retf
popa
cmps
out
mov
xlat
sbb
and
arpl
fwait
cmps
setle
movs
adc
or
mov
pop
mov
adc
xchg
call
push
adc
xor
pushf
pop
test
add
and
mov
call
stos
and
mov
(bad)
sub
sub
add
cs
inc
jno
fwait
test
push
popa
xchg
mov
shl
retf
sahf
mov
fisttp
outs
aam
dec
adc
mov
in
cld
fwait
(bad)
sahf
in
rcr
jns
popa
loope
ds
in
sbb
sub
mov
xchg
xor
test
jne
mov
cmc
dec
cmp
pop
dec
inc
pop
outs
mov
stos
mov
jmp
sbb
or
pop
pop
and
mov
xor
push
cmp
in
idiv
adc
in
push
xchg
fdiv
or
cmp
xchg
or
push
test
xchg
enter
cmp
imul
jg
mov
es
imul
test
or
cwde
or
cmp
jg
aad
scas
and
inc
mov
inc
add
mov
mov
scas
ins
cmps
js
cmp
and
in
mov
in
xchg
(bad)
(bad)
push
xor
jb
aaa
pop
retf
dec
push
nop
bound
cmp
dec
std
pop
scas
xor
jb
out
xchg
addr16
mov
xlat
gs
imul
inc
sub
int
aad
add
sub
popf
push
out
sub
icebp
and
push
int
shl
mov
mov
imul
out
cwde
je
fld
stos
mov
mov
test
xchg
adc
mov
rcr
neg
dec
push
dec
mov
nop
repnz
lds
lea
pop
sbb
mov
cmp
nop
scas
das
aaa
sbb
cmc
(bad)
pop
dec
add
shl
mov
xchg
iret
sbb
cmp
leave
xchg
cmps
and
out
(bad)
sub
jle
shr
into
and
sub
out
push
inc
cmp
jo
cli
(bad)
icebp
fwait
cmp
xor
ror
jne
test
mov
pop
ja
pop
push
clc
pop
push
cmp
js
(bad)
sub
test
jb
push
sub
iret
sbb
xchg
test
push
outs
sub
retf
and
pop
sub
dec
mov
out
jecxz
xchg
scas
mov
hlt
sub
inc
in
dec
(bad)
inc
pop
out
or
xor
fld
jmp
repz
xor
cmp
aaa
dec
rol
and
mov
out
sub
jl
outs
adc
dec
push
mov
dec
stos
cmp
and
push
push
cmc
(bad)
mov
sbb
and
dec
cmps
mov
or
ins
sbb
jb
ret
cmp
add
icebp
mov
out
in
(bad)
aad
rol
popf
ret
dec
repz
repz
lock
aas
icebp
mov
jnp
out
and
imul
or
add
pop
jmp
addr16
mov
not
add
cmovp
lds
inc
fld
js
sbb
(bad)
icebp
sahf
jg
and
xor
push
pop
xchg
es
stc
adc
loopne
ret
or
sub
add
in
out
dec
adc
pusha
enter
icebp
loop
adc
out
xor
stos
fcmove
in
and
scas
xchg
enter
inc
dec
mov
shr
cli
mov
jg
pop
scas
jecxz
push
jl
add
hlt
xor
in
cmps
popf
dec
jmp
jmp
xor
out
clc
push
inc
mov
ret
jmp
adc
pop
push
(bad)
loop
sti
mov
in
out
mov
pop
call
repnz
jl
inc
in
jge
hlt
pop
rcl
mov
jmp
shl
mov
sub
out
pusha
dec
std
aas
sub
call
fild
int3
stc
lea
inc
jne
sub
xor
mov
imul
pop
nop
push
mov
adc
xchg
mov
outs
retf
push
dec
mov
mov
adc
mov
pop
xchg
mov
ficom
cmp
popf
outs
pop
add
inc
mov
loopne
test
mov
inc
imul
call
mov
scas
stos
add
pop
iret
sahf
leave
loop
sub
mov
call
int
inc
clc
out
sub
push
jne
std
sub
and
xchg
xor
jmp
inc
imul
push
fiadd
sub
cmp
adc
scas
ret
jno
cmp
stos
loop
jmp
nop
repnz
mov
ret
out
bound
mov
mov
into
std
sbb
cmp
inc
pop
and
jno
addr16
or
fisttp
sbb
pop
push
cmp
pushf
(bad)
out
das
add
iret
inc
cmp
adc
pop
cmp
or
or
xor
or
pop
or
cdq
lahf
jecxz
out
push
aad
stc
enter
ds
loope
or
ins
inc
mov
dec
xchg
call
jo
or
in
das
mov
sti
inc
retf
jl
(bad)
jns
pop
inc
or
(bad)
add
add
daa
cwde
xor
lds
movs
adc
js
cmp
pop
jbe
fld
push
call
cli
or
add
(bad)
mov
movs
(bad)
imul
(bad)
data16
inc
out
mov
popa
or
into
or
fiadd
sbb
daa
jo
sub
mov
test
or
and
inc
icebp
sbb
(bad)
loope
push
popa
icebp
adc
stos
xchg
dec
stos
sar
shrd
retf
sub
sar
mov
rcl
rcr
dec
jo
and
cmp
test
and
jg
xor
mov
dec
pop
or
paddusb
push
push
jl
jecxz
pop
mov
cmps
or
mov
pop
mov
in
dec
pushf
push
sbb
add
dec
and
sbb
ret
mov
sti
ss
sbb
push
jmp
stos
mov
paddd
js
dec
repz
xlat
dec
ffreep
je
adc
mov
inc
xchg
(bad)
cli
inc
stc
mov
lock
cwde
pop
out
hlt
jp
sub
enter
and
repnz
mov
sub
in
xchg
xor
inc
mov
push
push
mov
rcl
xchg
bnd
cli
and
dec
pop
pop
lea
sub
mov
add
sbb
div
hlt
in
outs
enter
xchg
dec
jmp
movs
popf
rcr
xchg
sahf
cmp
pop
sbb
icebp
int
mov
outs
jne
sub
inc
cld
adc
xor
mov
fild
ins
mov
mov
out
or
or
or
mov
or
or
fimul
xlat
setns
pushf
cld
jmp
push
punpcklbw
(bad)
fistp
adc
xchg
fistp
add
cmp
fild
stos
inc
sbb
xchg
sub
iret
cmp
bound
push
mov
adc
in
ja
outs
sub
ficomp
nop
test
sbb
and
xchg
inc
cld
push
retf
jmp
aas
mov
jb
outs
xor
mov
jge
push
aad
dec
mov
call
mov
movs
aas
or
jns
mov
into
les
mov
add
pop
inc
mov
sub
shl
jecxz
push
int3
inc
pop
inc
jl
jge
xchg
std
or
pop
cmps
mov
pop
scas
arpl
jne
aaa
imul
js
add
and
int
aam
(bad)
repnz
mov
sub
retf
in
scas
push
adc
enter
xchg
mov
ja
ins
hlt
xor
xor
aas
xchg
pop
push
jge
lock
xor
push
sahf
mov
cs
dec
loope
fdiv
and
in
clc
sub
dec
push
mov
mov
adc
not
fucomip
pop
pop
and
xchg
inc
push
mov
movs
fmulp
xchg
sbb
ds
loope
sub
cmp
xor
outs
gs
pop
and
lods
mov
and
popa
idiv
and
cmp
and
or
std
ins
sbb
test
idiv
adc
out
cdq
pop
adc
sbb
dec
aaa
test
retf
jae
pop
test
shr
push
test
lock
(bad)
mov
mov
stc
adc
(bad)
push
mov
fst
in
dec
inc
test
and
in
jbe
lea
hlt
leave
ret
or
ds
(bad)
loopne
gs
fsubp
pop
pop
cmp
dec
mov
pop
cmp
loop
lods
mov
cmc
add
out
call
jnp
mov
in
enter
and
jg
mov
rcr
jl
sahf
mov
pop
int
shl
iret
imul
stos
fisttp
push
jnp
jmp
std
pop
jnp
jmp
rcr
add
int
push
lds
jmp
push
push
mov
and
fcmove
sub
pop
outs
mov
fisubr
fstp
nop
mul
cmp
mov
xor
sub
push
pushf
mov
push
stos
sbb
fstp
sub
inc
repnz
ss
jo
int3
(bad)
dec
stc
add
dec
aad
and
xor
push
add
and
out
rcr
push
in
dec
loopne
clc
mov
mov
cdq
retf
(bad)
inc
xor
push
push
adc
inc
call
jecxz
movs
inc
sub
fild
mov
repz
pusha
jle
scas
dec
jae
xor
xchg
mov
sub
(bad)
shl
sub
outs
repnz
scas
lahf
mov
jle
cwde
aad
xchg
fs
test
rol
xchg
pop
or
fsubr
shr
and
fcomp
mov
push
sbb
test
add
add
pop
retf
sbb
jns
or
inc
fmulp
inc
int
or
xchg
cli
ss
mov
fnsave
out
push
ret
push
and
iret
push
push
retf
sbb
lock
int3
es
lahf
rol
popf
iret
rcl
push
jae
cmp
xchg
mov
mov
int
mov
mov
repnz
and
lahf
sub
imul
pop
fucomp
sub
jo
shl
fldcw
pop
js
addr16
cdq
push
enter
mov
out
sub
xchg
sub
mov
test
sub
mov
(bad)
cmps
mov
mov
(bad)
fiadd
pop
inc
mov
xor
mov
imul
and
(bad)
fistp
inc
mov
pop
xchg
jp
xor
cmp
bound
lock
or
fisttp
stc
jno
or
loop
dec
data16
pusha
jne
cmp
lock
cli
dec
push
lahf
stos
js
bound
cmp
mov
mov
retf
or
jp
mov
dec
xchg
sar
daa
ror
push
jle
push
mov
pop
fsub
fnstcw
mov
inc
sub
mov
push
jno
cmps
aas
leave
in
das
in
mov
(bad)
shr
les
xor
sub
outs
or
mov
and
ins
cwde
mov
mov
retf
int
sub
ins
popa
pop
pop
inc
push
mov
jb
pop
push
push
push
repnz
cmps
fidiv
popf
rcr
lods
inc
movs
(bad)
in
or
rcl
inc
test
std
sbb
out
cmp
fisttp
cmps
cdq
inc
jae
dec
sbb
jle
mov
les
aad
iret
adc
sbb
in
sbb
adc
and
add
fsub
and
push
call
loopne
xor
adc
loope
aad
mov
mov
mov
jae
push
sahf
sbb
mov
je
mov
push
into
aad
aaa
jne
or
aas
clc
dec
call
dec
movs
imul
dec
mov
and
sub
gs
inc
mov
arpl
sbb
xchg
pop
cwde
lock
cmps
cdq
retf
mov
adc
scas
sti
cwde
hlt
cmp
pop
push
ret
fcomp
mov
cwde
lods
pushf
push
push
retf
and
xchg
xor
loope
pop
jg
inc
xor
push
xlat
lods
addr16
mov
movs
xchg
pop
jnp
outs
arpl
jae
jmp
loop
cmp
and
inc
add
xchg
mov
xor
cmp
rcl
and
jle
mov
cs
js
dec
xchg
aad
dec
les
sub
(bad)
jecxz
jmp
aad
test
out
mov
jge
rcr
mov
lds
bnd
push
inc
test
add
or
jecxz
jle
pop
inc
fisttp
mov
sbb
icebp
mov
out
test
je
test
jno
out
ror
in
nop
jecxz
sahf
mov
mov
int
nop
pop
into
(bad)
cli
cli
mov
out
stc
retf
loopne
dec
mov
inc
cmp
in
(bad)
loop
push
push
ds
aam
sbb
cmp
(bad)
push
loopne
inc
push
xchg
popf
xor
dec
fst
aas
ror
imul
dec
fwait
jbe
rol
xor
adc
mov
mov
stos
iret
aaa
push
sub
(bad)
rcr
hlt
(bad)
(bad)
pop
bound
push
std
rcr
std
cwde
sub
hlt
mov
jo
ret
test
inc
xchg
mov
call
pop
jae
inc
or
aam
out
mov
jo
cmp
scas
jecxz
int
mov
inc
sbb
xchg
(bad)
pop
and
int
test
enter
js
icebp
shr
push
dec
scas
mov
xchg
popf
lahf
mov
nop
xchg
jge
arpl
pop
xor
cmp
and
lock
scas
sbb
and
push
(bad)
xor
mov
mov
pusha
dec
ins
ret
inc
iret
outs
xor
jle
sar
inc
jmp
xchg
xchg
xchg
pop
add
stos
fwait
cs
jge
mov
add
xor
les
rcr
out
gs
call
inc
inc
bound
movs
xchg
dec
jo
int
push
dec
and
or
mov
mov
or
test
lods
and
inc
add
daa
es
jnp
xchg
mov
dec
jle
pusha
sub
mov
(bad)
pop
and
movs
inc
loop
fiadd
jecxz
popf
sub
jg
pop
rcl
sub
rol
fild
or
xor
mov
fcom
and
lea
iret
neg
cmps
in
stc
call
cli
imul
add
ror
jnp
lock
and
fistp
mov
lea
repnz
mov
repz
jecxz
call
sbb
(bad)
adc
sbb
aam
les
inc
cmp
shl
mov
in
push
pop
xchg
lods
(bad)
(bad)
(bad)
xor
ja
adc
cmc
cmps
enter
cld
out
daa
loope
or
aam
mov
push
jp
mov
ror
out
cs
sbb
push
inc
lods
std
xor
push
and
add
sbb
dec
mov
pop
sub
push
or
lds
mov
xlat
fs
cmps
movs
bnd
repz
pop
mov
fsub
fcmovbe
(bad)
xchg
(bad)
adc
sub
hlt
add
mov
fisttp
daa
scas
jmp
(bad)
ds
push
pop
xlat
xchg
inc
add
dec
scas
ins
lds
in
stos
fdiv
dec
push
lock
movs
mov
sub
xchg
(bad)
cmps
pop
shl
retf
sub
out
retf
popf
mov
or
xchg
fidivr
add
(bad)
test
sar
inc
add
push
jg
and
rol
push
jno
sbb
push
jne
std
shl
pop
sti
fdiv
rcl
shl
(bad)
cld
xchg
sti
(bad)
lock
sbb
jno
dec
in
mov
pop
inc
adc
fild
outs
dec
imul
fcomp
div
mov
add
mov
inc
repnz
mov
inc
add
jae
mov
mov
mov
fidivr
je
push
les
mov
(bad)
mov
into
cmp
pop
mov
inc
aam
and
dec
dec
adc
cmp
and
pop
jnp
jmp
repz
sub
mov
mov
push
mov
ret
dec
add
hlt
mov
iret
int3
or
rol
call
lock
std
retf
or
test
push
js
and
lds
mov
stc
test
gs
in
push
pop
rcr
cmc
stos
or
xor
jns
pop
hlt
mov
gs
mov
dec
loop
push
aaa
mov
test
test
into
jno
cmp
cmp
mov
call
hlt
(bad)
jmp
(bad)
inc
mov
les
call
nop
sbb
je
mov
std
(bad)
xor
(bad)
mov
adc
add
out
stc
test
sar
dec
pop
jo
(bad)
popa
lock
adc
mov
mov
mov
in
test
dec
dec
inc
scas
sbb
mov
jnp
mov
inc
pop
inc
js
xchg
xchg
bound
sub
push
pop
add
sub
enter
clc
(bad)
scas
in
jb
add
pop
jo
sub
fist
adc
sbb
loop
jle
repnz
mov
arpl
dec
pop
xchg
shl
lods
jmp
jo
stos
fisubr
or
aad
mov
call
xchg
jl
into
jge
out
int3
pop
pop
inc
pop
fmul
fistp
mov
pushf
push
je
(bad)
dec
sbb
test
dec
mov
lahf
mov
popa
push
push
std
lods
jno
rol
sti
(bad)
ret
xchg
in
ffree
shl
pop
cli
push
pop
xchg
sbb
das
data16
(bad)
jp
inc
test
pop
sahf
and
ror
std
mov
inc
and
hlt
dec
gs
pushf
dec
xchg
test
gs
fdecstp
push
pusha
fldz
daa
loopne
popa
push
das
es
or
xor
mov
popa
push
mov
adc
pop
pop
push
jg
mov
sub
outs
xchg
xchg
pop
mov
adc
lods
push
cmp
cs
mov
dec
sahf
imul
mov
out
add
xor
aas
shl
ja
icebp
pop
mov
sti
cli
mov
mov
dec
jl
mov
xor
iret
sub
mov
hlt
jg
jb
movs
punpckhdq
mov
adc
mov
fcmovb
stos
mov
fsubr
and
cdq
and
push
scas
jbe
dec
mov
shr
outs
lahf
push
dec
cld
enter
jmp
imul
shl
rcl
xchg
retf
mov
sub
mov
xchg
pushf
push
in
xor
dec
sbb
mov
and
push
mov
mov
call
or
mov
dec
in
add
and
sub
call
(bad)
and
sbb
push
mov
jle
loopne
mov
lahf
ret
dec
sbb
(bad)
mov
mov
fmul
push
or
sar
(bad)
loop
add
daa
xlat
cwde
lock
enter
sahf
pop
pop
stc
push
daa
adc
pop
jne
dec
(bad)
pop
in
int3
xchg
jne
xor
jae
inc
mov
pusha
mov
mov
daa
movs
sar
mov
loop
bound
or
mov
pushf
jnp
mov
fcmovbe
pop
into
cmc
repz
daa
jp
jne
xor
sub
fdivr
inc
mov
jae
in
and
adc
int
xor
xchg
mov
fst
stos
jmp
test
xor
inc
sbb
call
lods
(bad)
ror
je
cmp
cwde
call
es
adc
sub
lods
sub
in
or
daa
jne
mov
mov
je
ins
jecxz
and
shl
dec
minps
cmp
cmp
mov
imul
ret
lea
xchg
dec
call
xchg
push
daa
pop
push
jnp
(bad)
std
ror
mov
pop
push
and
and
shl
ds
pop
popa
sbb
imul
xor
shl
enter
scas
mov
(bad)
cmp
and
sbb
loope
leave
fdiv
arpl
loop
aas
pop
fld1
push
fmul
push
mov
lahf
dec
js
ds
(bad)
push
cmp
adc
cmp
jno
mov
cmps
sub
mov
jmp
cmp
repnz
mov
adc
shr
dec
ror
mov
xor
sbb
cmp
or
mov
dec
out
cmc
sti
push
xchg
dec
(bad)
sbb
ins
sub
cmp
and
arpl
in
idiv
je
lea
ins
dec
pushf
mov
jge
test
cmp
inc
xchg
pop
xor
mov
xchg
cmc
js
fisub
xchg
lods
push
lods
mov
test
fsubr
push
dec
into
push
mov
imul
dec
or
lods
mov
or
push
add
in
mov
idiv
sub
test
in
fld
js
out
mov
jb
xchg
dec
pop
orps
jno
aaa
sbb
lea
mov
mov
rcr
sbb
cmp
xchg
lods
fistp
and
aas
(bad)
mov
aam
adc
inc
imul
push
stos
inc
fwait
push
pusha
add
mov
xchg
fild
dec
push
adc
mov
cmps
mov
and
ja
rol
aam
adc
dec
popa
fs
imul
pusha
(bad)
push
xchg
mov
push
jle
jecxz
or
mov
mov
xchg
or
fsqrt
jp
ins
sbb
lods
test
pop
fist
fldl2t
pop
xchg
lock
mov
add
jnp
sahf
adc
adc
dec
jnp
pop
cmp
mov
or
pusha
movs
clc
cwde
test
out
jp
inc
ds
pop
mov
inc
movs
retf
adc
and
cmp
jmp
pop
dec
pop
fcmovbe
adc
pushf
cli
inc
stos
ins
shr
mov
mov
loop
sub
ss
repz
push
fs
fucom
jmp
loop
xchg
ins
push
cmps
push
sahf
fwait
mov
push
xchg
and
add
and
shl
retf
jno
push
je
in
out
dec
(bad)
xor
adc
add
cli
xchg
hlt
push
loope
add
add
je
clc
retf
call
popf
stos
neg
inc
loope
pop
(bad)
jnp
ja
out
mov
add
int3
ja
fcmove
sub
xor
(bad)
out
cmp
aad
data16
add
jp
daa
xchg
push
adc
or
xchg
(bad)
ins
xchg
mov
out
(bad)
scas
xchg
shr
xor
add
mov
adc
in
cld
jae
fdivr
xchg
movs
mov
jmp
inc
sbb
or
rol
vpcmpeqd
stos
fucomip
loope
in
mov
sub
or
repz
sub
inc
xor
adc
sar
push
data16
loop
push
nop
loope
adc
test
cmp
fild
sbb
clc
adc
pop
stos
add
lods
sahf
nop
xor
js
adc
ret
push
test
(bad)
mov
mov
inc
mov
lock
aas
mov
js
movs
push
aam
addr16
jmp
ficom
pop
test
push
out
xor
cmc
adc
lods
(bad)
pop
push
(bad)
push
cmp
pop
mov
xchg
pop
mov
push
cmps
in
dec
into
jecxz
sbb
test
jp
cdq
loop
aam
sbb
cli
das
adc
jecxz
mov
es
sti
inc
sbb
and
test
pushf
lahf
push
imul
cli
pop
retf
xchg
out
mov
ret
mov
out
push
xlat
xchg
data16
(bad)
and
enter
ficomp
imul
add
jnp
mov
jle
or
and
add
cmp
dec
mov
mov
cmp
mov
icebp
loopne
fwait
movs
mov
sbb
mov
retf
xchg
in
push
enter
cmp
jae
add
push
push
and
adc
imul
xchg
pop
pop
js
sub
fdivp
cmc
test
mov
pop
loope
aad
and
ret
push
cdq
mov
sbb
mov
dec
imul
jg
in
sbb
scas
xor
outs
imul
test
sahf
jno
sub
das
in
scas
adc
hlt
jmp
sahf
je
cmp
add
nop
mov
jbe
imul
call
mov
xor
mov
jle
data16
ja
push
mov
xchg
lods
and
int3
test
mov
pop
bnd
or
es
cmp
(bad)
dec
push
aad
cwde
add
add
mov
push
mov
lods
inc
pop
push
imul
inc
adc
inc
pop
enter
cmp
cmp
lea
dec
aad
push
std
ss
aam
gs
and
push
pop
mov
mov
dec
cmp
mov
push
push
mov
shr
mov
cld
sbb
loopne
xor
jmp
out
mov
push
pop
imul
nop
out
cmp
out
idiv
xor
cmp
jge
mov
(bad)
cmp
out
or
add
jo
push
das
scas
adc
in
dec
pop
jp
push
jmp
sbb
rcr
xchg
mov
jmp
in
inc
pop
repz
into
add
and
ret
pop
sbb
cmps
xchg
aas
mov
pop
arpl
push
and
xor
iret
fisub
(bad)
fnstcw
movs
dec
pop
sub
jnp
jns
fidiv
mov
push
inc
lock
test
dec
jo
inc
in
or
pop
aad
sbb
mov
(bad)
movs
bound
mov
xor
stc
cmc
es
inc
mov
mov
mov
(bad)
stos
add
lea
inc
mov
nop
add
jl
call
(bad)
out
push
xor
jecxz
jae
push
mov
(bad)
stos
retf
adc
nop
ficomp
dec
fwait
or
(bad)
ret
movs
into
out
jns
sbb
enter
shl
(bad)
and
pop
std
add
adc
jbe
arpl
or
pop
cmp
test
std
mov
or
in
movs
pop
jns
dec
pop
sbb
fimul
add
pop
idiv
inc
ret
cli
aas
pusha
shr
mov
adc
or
cmps
fisub
mov
aaa
add
out
data16
stos
xor
dec
push
or
ret
in
aad
jo
movs
xlat
aam
outs
sbb
adc
pop
fistp
idiv
movs
into
push
jmp
sub
push
(bad)
cmp
jo
repz
mov
or
je
pop
clc
jg
inc
es
(bad)
jp
xor
cs
jecxz
xor
dec
dec
loop
adc
ficomp
mov
mov
adc
js
loope
out
arpl
cmc
out
cs
ret
push
movs
sub
in
inc
psubb
mov
push
rol
adc
mov
xchg
js
jmp
sbb
xchg
out
repz
loopne
ret
xor
mov
jp
mov
xchg
pop
aam
and
sbb
nop
jo
cmps
cdq
and
mov
mov
push
sbb
and
aas
iret
dec
xchg
test
mov
setp
mov
inc
mov
sti
nop
lds
mov
and
mov
and
xchg
popa
pop
scas
mov
add
and
add
jns
mov
cmps
iret
pop
inc
sti
cmp
sub
add
push
sti
jge
pop
jge
mov
push
outs
icebp
test
sub
add
pop
std
jmp
aam
fsubr
jmp
jbe
ret
leave
inc
cmc
cmp
sar
or
outs
js
pop
sbb
lods
sub
je
dec
pop
mov
lods
sbb
or
retf
pop
push
push
inc
in
jp
push
pop
dec
repz
sbb
xchg
repz
pop
mov
clc
sahf
or
sbb
push
mov
dec
push
ja
cs
pop
cdq
gs
cwde
lds
jmp
or
out
ret
cwde
loopne
xchg
and
sub
push
adc
sahf
jns
jecxz
nop
aaa
out
cmc
in
cld
je
das
jge
jecxz
xchg
out
in
lock
cmp
cmp
xchg
fbstp
mov
jl
aam
cli
jl
cmp
mov
or
jmp
das
add
ins
ror
dec
cmps
popf
fsubr
jno
aas
push
(bad)
add
in
mov
mov
std
repnz
jnp
test
lea
push
mov
xor
fucomp
mov
mov
rcl
movs
push
xchg
pop
test
cmc
stos
sub
dec
mov
repz
jns
jae
adc
into
(bad)
out
push
(bad)
sbb
add
out
jle
pop
hlt
dec
ins
or
sub
xchg
push
mov
mov
(bad)
mov
and
push
loope
fistp
test
sub
jno
jb
pop
adc
push
cmps
mul
xchg
inc
ins
xchg
or
ror
dec
pop
adc
pusha
or
push
imul
lea
mov
jge
call
jo
loopne
cld
sub
pop
rcr
fdivr
and
out
sbb
mov
cmp
movs
dec
push
mov
fiadd
jnp
and
ret
shl
aas
inc
adc
inc
frstor
mov
sbb
loope
jecxz
shl
iret
and
clc
fnstsw
or
pop
es
fistp
adc
cld
sahf
and
mov
dec
sbb
leave
call
retf
jns
xlat
bound
fistp
cmp
and
ret
mov
ret
test
xchg
call
or
cmp
cdq
repz
out
stc
mov
pop
leave
mov
push
add
popa
sbb
imul
push
arpl
pop
inc
or
mov
leave
mov
ror
ins
gs
push
add
xchg
lds
mov
adc
adc
mov
mov
pop
popa
arpl
mov
loope
cld
mov
mov
cld
sbb
repnz
sahf
pop
int3
je
adc
call
cmp
cli
jge
dec
enter
ret
(bad)
sub
inc
jg
cmp
mov
add
push
das
movs
rcr
jge
jmp
jns
sub
pusha
or
in
lock
fdiv
sahf
nop
push
pop
fistp
xor
inc
jecxz
xor
or
jne
and
mul
lds
mov
sub
mov
jno
cmp
and
xor
out
ror
jle
add
mov
adc
popa
mov
lods
pusha
mov
inc
xor
jae
jmp
dec
push
sub
jp
nop
sbb
cs
or
inc
loopne
jns
push
test
sbb
xor
or
retf
nop
neg
sbb
dec
jmp
mov
jmp
jp
mov
add
push
xchg
add
mov
rcl
jno
pop
imul
iret
jno
mov
aaa
pop
lods
cwde
jge
cdq
jmp
push
adc
aam
mov
stos
xchg
inc
jnp
ret
sub
or
fwait
(bad)
cmc
mov
gs
push
sub
add
scas
fsubr
ja
push
mov
xchg
mov
jb
push
cwde
mov
add
push
aam
mov
aas
(bad)
xor
iret
xchg
inc
daa
cli
std
int3
dec
xor
fdivr
jb
jmp
bndstx
xchg
out
je
(bad)
call
xlat
iret
lea
xor
call
sbb
sbb
leave
pop
xchg
scas
mov
mov
adc
test
sbb
push
push
out
xor
sub
jbe
adc
xchg
push
jecxz
sti
sbb
aaa
xchg
cdq
loop
sub
jge
cli
and
xchg
ret
movs
into
sbb
loop
out
int
je
scas
aas
sub
inc
and
fdiv
je
bswap
or
retf
cmp
and
cli
sahf
mov
jnp
sub
div
es
jbe
adc
adc
add
bound
xor
ins
scas
jae
sub
or
sub
xor
inc
popf
test
jp
dec
test
dec
addr16
mov
adc
sub
pop
push
sub
adc
add
(bad)
aas
(bad)
adc
mov
ret
xchg
lahf
lods
sub
inc
cmp
outs
scas
jno
arpl
lock
dec
dec
fwait
dec
retf
stc
inc
push
stos
out
and
(bad)
inc
adc
dec
std
pop
test
sub
ins
fwait
dec
jmp
add
mov
pop
out
mov
xor
jmp
inc
mov
mov
mov
pop
xchg
mov
xor
ins
cmp
xchg
cmp
cmovae
ja
cmp
stos
ret
(bad)
das
scas
cmp
add
sbb
cld
gs
into
sub
imul
arpl
inc
call
call
push
ficom
ficom
xchg
xchg
jo
loopne
or
pop
adc
out
or
xchg
add
push
jecxz
mov
shl
leave
pop
xchg
mov
mov
in
ins
push
into
icebp
adc
mov
(bad)
add
adc
int
(bad)
sti
pop
ret
iret
cmp
mov
repnz
fsubr
xor
mov
dec
ret
jmp
push
fist
inc
out
fcomp
popf
mov
xchg
pop
mov
mov
sub
daa
sub
ss
or
mov
jae
mov
pop
cmp
adc
xor
jl
ja
or
pop
xchg
xchg
push
push
mov
mov
movs
mov
inc
loop
fsub
push
lods
push
add
icebp
sub
sub
inc
cmp
cmp
xor
or
push
xchg
fdiv
into
arpl
mov
out
cmp
stc
imul
ficom
cli
xchg
and
push
sub
push
pushf
mov
movs
xor
call
push
jbe
pop
out
pop
sbb
ret
test
hlt
or
stos
popa
jne
aam
adc
(bad)
sti
jmp
ror
mov
iret
mov
sar
add
fbstp
pop
mov
or
jecxz
loope
scas
test
leave
pusha
push
push
cmc
not
ret
gs
in
cmc
test
jge
mov
mov
imul
cdq
retw
dec
ror
sub
movs
or
movs
cmp
retf
sbb
xor
and
clc
jbe
(bad)
jge
sti
inc
lods
call
in
fstp
and
cmp
xchg
jns
dec
sub
mov
fwait
mov
psadbw
sahf
daa
jo
inc
pop
or
popa
and
xchg
add
jo
and
jb
shr
lods
mov
ds
sub
lock
fmul
xchg
pop
test
(bad)
stc
shl
jno
inc
mov
mov
(bad)
jle
inc
mov
push
push
into
in
cli
movs
mov
bound
shl
cdq
jnp
in
repnz
sub
xlat
inc
inc
fcomp
inc
or
or
xor
jge
push
(bad)
jo
cwde
push
mov
shl
cmp
enter
jmp
daa
mov
mov
sub
out
loop
sub
mov
pop
mov
into
aad
and
aas
in
xor
mov
sub
sti
dec
cmp
outs
or
test
enter
mov
cmp
mov
fcom
test
add
or
dec
mov
test
call
int
loop
sub
sub
adc
int
hlt
in
dec
jg
mov
sub
mov
xchg
sbb
jbe
test
(bad)
fadd
mov
push
jmp
jl
mov
rcr
nop
icebp
or
push
dec
aas
xor
adc
inc
hlt
inc
loope
mov
adc
and
jno
fsub
cmp
xlat
inc
inc
pop
sar
jo
rcl
jp
pop
fdivr
xlat
in
push
sbb
out
int3
popf
add
movs
jmp
add
fs
ins
inc
push
xchg
ss
ins
lods
test
(bad)
sbb
push
push
cmp
xchg
addr16
mov
sub
retf
jno
mov
cmp
(bad)
sub
ror
mov
adc
in
loopne
out
xchg
shl
out
mul
rcr
in
adc
jbe
sbb
jge
xor
leave
adc
sbb
mov
inc
adc
xchg
or
xchg
mov
or
xchg
push
jp
jge
pop
enter
sbb
push
pop
pop
pushf
push
fisttp
inc
fwait
cmp
dec
sbb
or
push
in
inc
cdq
mov
xchg
jmp
mov
push
cld
cld
xchg
push
int3
hlt
mov
mov
xchg
pop
jmp
rcr
inc
cmp
imul
(bad)
nop
xor
aas
out
xchg
jge
xor
mov
mov
adc
or
jl
ja
xchg
push
ja
dec
xchg
retf
jnp
cmp
adc
dec
jns
(bad)
(bad)
call
or
and
add
and
sub
call
adc
ret
inc
pop
push
xchg
jmp
and
push
push
sti
lds
lahf
cmp
mov
xchg
fwait
add
ds
retf
ror
and
push
test
call
mov
hlt
enter
mov
movs
in
pop
test
mov
sub
(bad)
add
cmp
or
iret
cmp
inc
stos
add
jmp
sub
xor
push
xlat
dec
outs
inc
push
mov
loop
(bad)
nop
jg
dec
push
xchg
int
push
(bad)
push
into
clc
rcl
movs
pop
pop
stos
xor
test
jg
xchg
xchg
lods
sbb
xor
dec
adc
mov
rcr
mov
nop
push
les
(bad)
(bad)
mov
into
mov
pop
sub
fadd
add
dec
(bad)
mov
add
or
dec
aam
push
in
ins
int3
(bad)
push
stos
aas
xchg
out
lock
add
sti
in
jns
mov
test
push
lock
adc
ja
cs
int
(bad)
add
arpl
xlat
cwde
push
and
add
in
adc
cmps
sub
xor
pop
cmp
sub
mov
dec
lods
fidivr
das
(bad)
jl
hlt
(bad)
jmp
cmps
jge
mov
out
push
mov
mov
std
or
xchg
pop
xchg
scas
aam
movs
sub
mov
sub
outs
leave
sbb
sar
data16
stc
sub
lahf
push
jnp
(bad)
pop
outs
mov
sub
jo
jp
mov
out
bnd
mov
cmps
inc
data16
shl
stc
inc
jmp
test
bound
mov
cmps
dec
pusha
(bad)
std
jns
or
shl
jp
je
jmp
mov
cmp
lahf
and
sub
test
dec
es
jnp
test
inc
inc
jbe
jg
or
or
lock
sbb
dec
or
or
push
and
mov
outs
pop
pusha
xor
adc
nop
dec
jmp
ja
hlt
jo
pop
js
mov
adc
sahf
loope
dec
xchg
lock
sbb
mov
mov
pusha
or
aam
repnz
xchg
add
jl
mov
sbb
shl
stc
mov
pop
sti
data16
jo
fs
mov
pop
or
pop
fild
mov
lods
leave
inc
fcomp
enter
jecxz
cdq
adc
sub
lfs
js
jl
mov
pop
adc
pop
in
pop
daa
test
mov
ret
test
iret
repnz
sub
(bad)
sbb
sbb
loop
pop
or
enter
lods
stos
push
xchg
mov
xchg
jmp
jg
mov
push
or
mov
not
add
pop
sub
adc
adc
mul
iret
cmp
rol
popa
sub
cmp
adc
inc
lahf
mov
dec
lods
repnz
xchg
push
cmp
retf
jmp
cli
mov
pushf
cmp
rol
aam
fs
xor
xchg
or
enter
data16
cli
push
test
ins
and
dec
ficomp
pop
mov
adc
and
scas
mov
ins
mov
xor
adc
ret
sub
in
jle
rcl
stos
dec
sbb
fdiv
cmp
repz
imul
push
inc
push
pop
xor
mov
mov
scas
mov
bound
xchg
inc
and
push
int3
dec
inc
mov
fst
inc
pushf
retf
das
and
imul
jg
out
stc
adc
jle
cmc
push
scas
iret
push
push
cmp
or
cmp
sub
stc
bound
bound
inc
pop
into
cli
jmp
pusha
aad
shl
inc
fldcw
into
in
gs
cwde
in
cmp
outs
jb
test
sahf
ja
pop
inc
mov
pop
mov
jle
imul
push
popf
pusha
retf
xor
rcl
fst
and
scas
pop
inc
imul
inc
imul
cmps
inc
mov
ficom
(bad)
shr
div
lods
stc
jmp
cdq
not
jge
add
xor
mov
xchg
mov
outs
idiv
and
push
data16
jb
out
cmp
cdq
mov
jle
pop
dec
(bad)
adc
jmp
int
enter
jne
loope
loop
das
dec
adc
out
pusha
mov
xorps
push
sub
mov
(bad)
pop
loop
jmp
jo
cmps
jge
es
loop
push
mov
add
mov
cmp
add
icebp
push
pusha
cli
or
mov
mov
cmc
imul
enter
(bad)
cmp
je
loope
cmp
cmp
ret
fnsave
push
dec
arpl
inc
sar
xchg
sti
mov
cmp
sub
xchg
test
aad
jecxz
fild
stc
hlt
xor
(bad)
jns
call
jne
sub
mov
ficomp
jecxz
mov
ja
jne
cs
mov
ja
push
inc
cmp
cmp
adc
dec
cmp
(bad)
iret
xor
aam
jg
les
jmp
xchg
out
sub
mov
mov
sbb
dec
movs
mov
jno
adc
inc
scas
jns
cmp
mov
gs
out
pop
dec
fisubr
ret
outs
repz
pop
push
cwde
test
fwait
add
xchg
jbe
adc
call
sbb
in
sti
test
leave
xchg
add
pop
xchg
sti
cli
sbb
pop
arpl
stc
pop
loop
je
sbb
shl
xor
xor
sbb
adc
imul
hlt
mov
xor
push
popa
loop
lds
inc
aad
mov
jne
add
inc
test
pop
lahf
imul
mov
pop
(bad)
fs
retf
add
scas
imul
fs
xchg
frstor
clc
jg
pop
lods
aaa
neg
test
iret
xor
popf
cmp
inc
inc
mov
jnp
call
mov
sti
icebp
mov
and
ret
aad
dec
dec
mov
inc
int3
mov
inc
int
bound
or
dec
das
cmp
sbb
lock
and
xlat
ss
adc
nop
rcl
adc
sbb
sbb
movs
dec
pop
mov
cmc
cli
adc
sub
inc
pop
mov
mov
popa
sbb
add
lods
aam
loopne
or
test
loopne
stos
sub
push
loopne
xor
push
iret
xchg
push
dec
or
(bad)
mov
ret
test
mov
rcl
mov
in
jnp
jg
retf
pop
mov
and
push
imul
shr
int3
pop
test
cdq
pop
sub
or
push
and
loope
jmp
cmp
mov
outs
mov
mov
fistp
dec
xor
mov
loope
mov
mov
scas
cmp
inc
xor
mov
push
loopne
dec
rcl
xor
int
lods
sub
mov
call
xchg
add
xchg
sub
cmp
push
in
and
lods
add
push
pushf
retf
push
aas
jg
xchg
jno
sbb
pop
aam
fs
inc
lea
xchg
mov
lods
int3
jmp
push
sub
cs
outs
adc
add
movs
ins
inc
fwait
out
push
popw
outs
scas
leave
imul
or
pop
bnd
dec
and
cli
sti
in
es
xrelease
push
mov
sbb
loopne
push
call
js
lea
test
leave
test
mov
add
mov
call
jp
mov
xchg
mov
retf
adc
push
(bad)
int3
(bad)
dec
(bad)
push
add
imul
cwde
aam
cmp
mov
jecxz
inc
vmwrite
jge
inc
mov
xor
mov
push
sub
pop
or
and
scas
push
adc
sub
nop
int
shl
inc
shr
jnp
retf
arpl
adc
mov
jge
jnp
sub
pop
aaa
sub
ja
iret
out
ja
fistp
rol
adc
cmps
ins
xchg
das
repnz
xchg
imul
add
inc
mov
jns
push
inc
lods
add
clc
int
hlt
adc
mov
fadd
hlt
sar
cmp
pop
jbe
clc
xchg
pushf
cld
xor
mov
mov
fist
xchg
xor
into
and
adc
jp
sub
xor
(bad)
out
cmps
fucomp
pop
cmp
dec
mov
pop
and
xor
fistp
adc
ja
pop
push
into
cmp
pop
call
cld
loopne
call
aas
daa
or
cmp
mov
(bad)
cmps
lods
jecxz
iret
push
sub
loop
out
jge
pop
popf
mov
clc
pushf
loope
data16
cmc
add
lds
scas
mov
fild
mov
mov
in
pop
cmps
jle
adc
shld
push
pusha
imul
pop
in
sub
fidivr
js
dec
mov
mov
ds
or
movs
or
int
add
cli
sbb
push
cmps
mov
test
or
jmp
pop
outs
add
inc
mov
sahf
ja
push
jl
int
and
mov
in
mov
and
add
inc
push
or
xor
stc
dec
pop
pop
adc
daa
inc
xchg
dec
mov
data16
ret
std
mov
fld
adc
pop
test
popa
nop
jmp
mov
or
fild
mov
out
aam
push
sub
sub
push
addr16
(bad)
mov
sbb
xor
leave
sub
mov
adc
mov
pop
sar
cmp
mov
pop
push
std
minps
jae
loopne
movs
pop
jg
push
lods
loop
xor
mov
add
push
hlt
in
and
jmp
mov
das
cmps
aam
adc
jno
push
xchg
add
jns
xchg
fs
sbb
repz
sbb
test
sbb
inc
cmps
fistp
ins
fwait
movs
jg
in
cli
in
mov
test
jbe
pop
out
int
mov
jle
out
popf
xchg
je
dec
lahf
repnz
stos
out
fs
sub
mov
or
xlat
(bad)
jecxz
retf
cmp
int3
loop
lea
pop
push
cdq
push
test
pop
or
jnp
into
xor
imul
push
add
mov
add
out
icebp
xor
inc
push
pop
and
mov
shr
jnp
xchg
cdq
inc
push
pop
add
mov
shl
jbe
sub
ffree
sub
or
lods
ret
xor
jge
xor
mov
or
add
push
popf
sub
dec
lea
push
mov
jg
movs
sbb
scas
mov
neg
push
retf
jle
mov
pop
(bad)
cmp
rcr
(bad)
sti
fld
push
outs
leave
pusha
test
cmps
lods
mov
out
cdq
dec
ja
dec
pop
(bad)
jne
fyl2xp1
rol
xchg
mov
popa
and
mov
sbb
pop
test
xchg
or
hlt
mov
xor
adc
adc
mov
aam
pusha
in
aaa
sbb
jb
mov
push
and
xchg
je
mov
xchg
jo
xor
xlat
aaa
in
fst
xchg
test
stos
gs
xchg
retf
lods
pop
scas
ins
or
push
add
not
adc
in
cmp
sahf
xor
in
in
call
ss
stos
mov
mov
jb
gs
out
mov
inc
mov
arpl
(bad)
fldenv
xchg
adc
aad
jbe
shld
les
je
cmc
and
leave
add
cmp
xchg
pop
push
ror
call
fst
ins
mov
pop
jmp
dec
aam
in
jmp
faddp
xor
and
call
sub
fldcw
sahf
repnz
frstor
ss
std
jp
dec
movs
imul
mov
jge
xlat
fistp
sbb
or
stos
call
push
sahf
add
imul
outs
xchg
movs
cld
or
and
sbb
rcr
inc
in
inc
movs
sub
sub
jb
xchg
push
call
or
push
jno
pop
shr
mov
cmp
mov
(bad)
dec
dec
neg
xchg
movs
imul
xor
xchg
add
mov
sbb
mov
add
mov
ror
and
push
xor
or
inc
xor
into
pop
xor
js
addr16
push
cmp
in
xchg
sbb
fsubrp
int
pop
xor
mov
lods
cdq
xor
mov
cmp
sub
in
pop
out
sub
pusha
jbe
inc
rcr
cmp
cwde
sub
fs
cmc
int3
nop
std
pop
out
mov
inc
enter
fwait
xchg
test
pop
add
jo
fs
adc
or
fdiv
addr16
retf
inc
jne
pop
mov
mov
mov
mov
(bad)
es
js
jbe
cmp
jnp
push
(bad)
mov
inc
movs
ror
shl
mov
jo
test
ja
js
nop
dec
cmps
mov
mov
push
jl
cmp
mov
adc
ins
fwait
mov
pop
aaa
cmp
push
mov
fs
sbb
std
stos
xchg
jnp
sti
sti
popa
test
test
adc
push
daa
clc
sbb
in
lods
cmc
cmps
lods
add
pop
inc
mov
xor
adc
ja
stos
inc
pop
and
and
adc
or
in
(bad)
movs
rol
xchg
adc
jp
ss
dec
cli
adc
jne
and
fcmovbe
mov
fsub
cdq
sbb
pop
or
fs
inc
sub
jle
xor
cwde
pop
movs
push
les
mov
sub
push
bound
pop
cwde
out
xor
adc
cmp
in
push
inc
sysret
xchg
pusha
jo
cmp
jge
cs
or
gs
fs
mov
push
mov
or
fst
gs
aam
js
cmps
and
fcmovne
mov
cmp
jle
jmp
push
xchg
and
iret
in
adc
rcr
lock
in
dec
retf
mov
push
pop
dec
out
cli
jge
test
lock
push
das
por
xchg
fistp
div
or
in
not
inc
xchg
pop
mov
out
pushf
repz
out
sbb
stc
out
pop
push
cdq
enter
scas
arpl
test
fucomp
push
or
lea
leave
add
adc
neg
xchg
mov
jmp
jmp
jmp
popa
and
push
jl
jbe
or
sbb
jmp
jg
repz
stos
jbe
xchg
scas
jl
xchg
cmc
push
jb
call
xor
push
ret
iret
inc
add
xchg
xor
add
cmp
(bad)
(bad)
jg
and
add
sbb
sbb
cld
jmp
xchg
imul
inc
mov
jmp
inc
pop
mov
(bad)
pusha
mov
sub
push
div
loop
shr
call
dec
sbb
jae
pusha
not
hlt
adc
mov
out
nop
xor
scas
ds
ficomp
outs
lahf
in
cmc
daa
int3
and
sub
in
ins
cld
mov
mov
outs
int3
ins
sub
test
(bad)
call
jno
adc
sub
xor
mov
(bad)
ins
adc
mov
sbb
mov
or
div
(bad)
in
and
lds
add
test
(bad)
add
test
add
add
jb
in
call
pop
(bad)
fidivr
int
enter
xchg
jmp
fwait
test
(bad)
cmp
js
in
addr16
pop
cmp
out
mov
dec
push
(bad)
sub
adc
mov
test
out
push
mov
stc
adc
ins
rol
cmc
and
pop
es
pop
mov
and
fild
and
std
test
pop
shl
pop
jl
and
or
add
out
xor
cs
cmps
repz
inc
int3
mov
inc
(bad)
movs
cmps
(bad)
stc
mov
(bad)
lock
adc
popf
lods
xchg
mov
stc
fistp
int3
nop
cmc
sub
sub
outs
fwait
xchg
mov
adc
or
push
xchg
fidiv
mov
ret
nop
test
ds
jae
mov
not
(bad)
mov
jb
sbb
push
fadd
ficomp
cmp
(bad)
test
gs
push
or
test
and
mov
jle
mov
pusha
sub
xchg
xor
frstor
ins
lahf
fld
mov
popa
cmp
aam
adc
sub
mov
in
in
adc
sub
mov
dec
xchg
xlat
mov
mov
dec
add
dec
data16
push
sub
je
rcr
cli
aas
es
idiv
push
out
stos
int
ja
out
imul
int3
push
mov
or
mov
aas
imul
cli
or
cli
test
cmp
or
enter
cmps
aam
adc
outs
into
outs
shl
inc
fmul
imul
sub
ins
jbe
lock
jnp
push
or
mov
or
push
adc
adc
sti
push
xchg
cmp
popf
test
inc
fld
jae
sahf
int3
xchg
mov
cmp
test
jmp
nop
xlat
push
inc
addr16
mov
call
xchg
pop
sub
je
pop
dec
es
xchg
outs
movs
test
xchg
retf
inc
and
(bad)
pop
call
or
hlt
adc
mov
push
ret
mov
daa
adc
pop
or
jg
arpl
sahf
int3
mov
xchg
jg
inc
push
sub
popf
popa
ja
inc
inc
pop
mov
out
or
push
sahf
pop
add
push
sub
xor
cmp
sahf
push
aad
mov
out
popf
icebp
adc
sti
jmp
add
(bad)
in
fild
cmp
push
cmp
dec
inc
mov
outs
add
xor
pop
jmp
outs
scas
cmp
xchg
popa
iret
retf
pop
call
dec
dec
inc
cdq
or
jne
xlat
lods
fwait
stos
bound
repnz
cli
add
xchg
mov
push
dec
mov
rcl
lods
mov
push
cmp
out
mov
rcl
fs
aam
or
adc
adc
gs
cmps
xor
or
repnz
stc
cli
sahf
into
test
pop
mov
push
stc
data16
out
(bad)
ja
jns
push
pop
and
cmp
aaa
xchg
idiv
inc
(bad)
fdivr
in
mov
sbb
add
aas
inc
imul
iret
or
mov
test
sbb
dec
pop
mov
retf
add
cli
cmc
pop
add
sub
es
push
or
xor
cmp
dec
aaa
hlt
movs
lods
jns
lods
aas
sub
jnp
shl
cld
push
gs
mov
sti
inc
mov
call
dec
icebp
outs
pop
sub
into
xor
dec
inc
mov
jle
xchg
out
adc
sbb
(bad)
stos
cmp
xor
loop
mov
xchg
icebp
xchg
inc
jmp
cmp
jecxz
inc
fmul
retf
jns
mov
add
mov
in
jnp
aas
inc
call
test
adc
inc
(bad)
pusha
les
cld
pop
lahf
mov
int
xchg
inc
push
add
arpl
sbb
push
add
mov
or
iret
out
push
std
cld
dec
(bad)
in
and
add
jp
inc
ror
push
adc
lea
(bad)
in
push
jmp
addr16
cs
dec
test
push
pop
mov
push
jbe
dec
pop
mov
add
mov
jmp
ja
scas
pushf
adc
(bad)
enter
mov
hlt
push
iret
jb
push
push
dec
retf
hlt
add
aad
hlt
lock
stos
mov
pop
aam
push
aas
xchg
push
lock
push
test
sub
add
std
ins
fdivrp
sbb
repnz
dec
mov
sbb
mov
jo
dec
pop
dec
jg
dec
lods
xchg
or
je
inc
retf
adc
sbb
sar
sbb
outs
xchg
and
mov
cmp
add
fstp
outs
aaa
mov
cli
iret
add
lds
cmp
repnz
dec
jns
aaa
adc
add
push
mov
inc
adc
dec
mov
pop
fistp
push
dec
xor
repz
rcl
(bad)
jl
and
psrld
popf
push
fcmovnu
scas
das
push
cmps
cld
mov
push
addr16
adc
outs
adc
imul
test
jmp
xchg
sbb
mov
ja
pop
or
sbb
lods
mov
dec
xchg
xor
das
push
mov
mov
and
mov
adc
iret
cmp
lods
or
bound
shl
or
dec
xor
xchg
pop
inc
fild
push
pop
(bad)
push
cmp
jo
cmps
push
bound
jp
imul
jnp
sub
pop
pop
sar
lahf
scas
aaa
popf
cmc
push
sub
lock
mov
add
push
test
cmp
cli
leave
cld
and
sub
iret
bound
adc
xchg
jo
xchg
cwde
push
dec
mov
add
fscale
cmps
dec
adc
pop
iret
aam
xchg
adc
xor
dec
xchg
inc
push
or
fdivr
ficom
je
in
imul
push
gs
js
ds
sub
leave
inc
and
mov
jmp
fs
adc
fidivr
lds
xor
jmp
out
leave
inc
xchg
movs
pop
pusha
push
dec
(bad)
pop
or
xchg
les
cmp
popa
or
es
stos
in
cmc
cmp
retf
push
add
shl
push
jnp
outs
mov
imul
push
push
scas
dec
mov
ret
jmp
and
xchg
rcr
dec
imul
and
sub
push
int3
retf
mov
push
xchg
dec
ds
and
cmc
test
sahf
jb
ds
je
push
mov
mov
pusha
shr
movs
into
js
dec
sub
adc
jecxz
mov
mov
inc
mov
inc
jmp
nop
out
jmp
mov
mov
icebp
repz
lock
add
inc
dec
ss
popf
cmp
neg
dec
fidiv
outs
out
jp
sub
cmp
jle
mov
ins
call
mov
cdq
sbb
sbb
es
aad
retf
and
test
add
icebp
aas
sub
and
push
js
and
xor
adc
push
inc
jns
xor
jns
loop
gs
mov
add
cmp
mov
sbb
movs
test
js
std
inc
push
rol
jg
ret
jle
cli
scas
shl
call
adc
enter
or
jge
ins
es
pop
aas
xchg
jae
ret
lea
cld
add
sti
js
loopne
mov
xchg
lea
or
sub
sti
push
fdivr
push
fs
pusha
dec
lahf
push
out
loope
(bad)
shr
mov
lods
sbb
cmp
jno
or
and
push
popa
cmp
sub
cmps
pusha
psubw
or
pushf
(bad)
or
imul
cmps
xchg
and
je
jno
inc
jns
pop
sbb
shl
(bad)
push
xchg
test
or
xor
pop
lahf
dec
mov
xchg
(bad)
mov
jle
sub
and
and
clc
hlt
ret
push
sbb
push
push
xor
sbb
hlt
fwait
jb
loope
rcl
xor
push
and
lea
in
mov
aam
retf
push
xor
inc
mov
pop
stos
int
and
stos
or
and
jmp
mov
(bad)
in
scas
cmp
dec
sub
and
xor
or
(bad)
cmps
push
cmp
loope
inc
push
push
xor
pop
retf
or
mov
xlat
in
fisttp
mov
xor
aaa
sbb
ja
pushf
dec
pop
arpl
and
xchg
mov
mov
ror
movs
icebp
cmp
cwde
and
and
popf
ins
and
xor
test
push
popa
push
(bad)
movs
es
test
fdivr
dec
jecxz
out
pusha
fisttp
scas
lea
nop
push
fdiv
cmp
jns
jnp
jb
or
adc
adc
loop
add
xchg
mov
pop
aaa
or
jmp
in
mov
rcr
fwait
sbb
js
outs
bound
mov
ret
(bad)
outs
aaa
fs
test
rcl
popa
and
sbb
push
mov
loop
and
pop
sbb
dec
jo
sub
rcr
mov
jo
sbb
test
imul
pop
ins
addr16
mov
aam
mov
stos
adc
dec
inc
jecxz
dec
pop
imul
in
movs
sub
out
test
mov
ins
mov
addr16
push
pusha
mov
shl
cmp
bound
(bad)
push
fsubr
js
(bad)
mul
inc
push
pop
test
xchg
popa
and
pop
xchg
inc
lods
pop
stc
inc
out
mov
inc
mov
into
xchg
adc
jmp
sbb
jmp
cmps
(bad)
jge
cld
dec
retf
mov
mov
pop
jbe
mov
stos
popw
ja
fbld
xchg
out
push
sti
push
xchg
test
scas
xor
cwde
dec
rol
or
mov
mov
and
sti
dec
jbe
xchg
test
adc
adc
test
out
in
inc
adc
xlat
addr16
xchg
loopne
cmps
push
adc
bound
mov
xchg
sar
pop
adc
dec
sti
pop
inc
fld
jmp
call
icebp
sar
cmp
outs
repz
cmp
jecxz
jmp
pop
dec
adc
jne
xchg
mov
bound
xor
fcmovb
loop
pop
lock
(bad)
xor
inc
adc
adc
js
cld
add
int
mov
fidiv
mov
inc
jl
jb
jecxz
cmp
xchg
inc
loope
inc
aas
add
push
and
in
clc
ja
mov
data16
lea
inc
stos
and
jae
int
mov
fs
mov
fst
test
add
cdq
dec
loope
mov
sub
mov
mov
(bad)
fprem1
mov
xchg
inc
imul
addr16
push
jg
pop
pop
mov
add
fisub
loopne
dec
cmps
push
pop
dec
pop
movs
or
sub
xchg
repz
sub
pop
mov
push
repz
imul
push
mov
pusha
mov
rol
inc
cdq
in
jmp
mov
push
stc
mov
loope
add
scas
jge
adc
or
movs
mov
jl
pop
mov
adc
push
mov
jle
sub
or
sub
push
mul
(bad)
push
add
loop
cmp
fstp
ja
test
dec
and
hlt
xchg
loopne
add
aas
iret
adc
and
or
mov
add
pop
loope
hlt
addr16
mov
imul
test
xchg
stc
test
cmpxchg
cmp
imul
jmp
or
push
or
adc
scas
push
push
lahf
call
mov
jp
push
push
sbb
adc
cmp
push
and
cmp
test
cmp
push
div
outs
gs
jle
sub
adc
movs
inc
sub
loopne
inc
inc
adc
mov
loop
scas
test
inc
fcom
sub
ds
scas
xchg
push
test
xsaveopt
cli
dec
xacquire
out
mov
stos
adc
outs
xchg
sub
pop
sub
outs
mov
sbb
jg
test
or
ins
add
pop
push
ss
sahf
xchg
int
xor
pop
cmc
js
mov
lds
or
inc
push
out
cmps
loope
stos
mov
sub
add
repz
sub
sti
arpl
jp
ins
and
jecxz
adc
out
fisub
hlt
mov
cmps
outs
js
out
ret
(bad)
(bad)
mov
nop
adc
or
adc
push
mov
shl
pop
in
sub
pusha
fadd
dec
out
scas
mov
popf
pop
sbb
mov
xor
adc
lds
ds
fwait
sub
cmc
dec
out
or
pxor
movs
cld
enter
mov
movs
push
mov
xor
sar
popa
out
jl
mov
sub
call
in
jl
or
fwait
xchg
ret
push
adc
cli
cli
(bad)
cli
adc
jno
out
sbb
(bad)
xor
cmps
es
call
jle
push
ins
and
pop
rcr
jg
xor
out
mov
mov
in
and
push
outs
pop
mov
call
scas
cli
xor
push
sbb
imul
jno
fwait
xor
in
jnp
sbb
xchg
fadd
mov
je
fabs
add
jno
xchg
push
cmp
stc
sbb
in
pusha
inc
stos
jg
mov
mov
(bad)
dec
dec
in
xlat
push
add
jmp
sub
mov
ret
push
(bad)
xor
(bad)
jg
lods
std
push
and
push
pop
std
(bad)
push
int3
adc
dec
sub
mov
scas
sub
daa
mov
es
ret
pop
into
xor
cmp
shr
push
rcl
jecxz
sbb
sub
sbb
xor
mov
int3
push
adc
gs
mov
cmp
sub
stos
ins
stos
movs
cs
adc
pop
fs
leave
ret
fdivrp
or
ds
jecxz
shr
ret
test
and
add
adc
mov
stos
and
fdivr
xor
adc
dec
push
(bad)
nop
out
xchg
(bad)
jb
int
(bad)
repz
arpl
outs
jno
ins
inc
into
(bad)
cmp
cmp
xchg
test
cmp
pop
sar
pop
mov
sar
dec
jle
xor
jae
fcomi
fsub
mov
jb
push
in
mov
xor
fisub
pop
call
mov
pop
dec
mov
lahf
iret
jno
clc
dec
push
fisubr
xor
pop
mov
pop
pop
pop
popf
in
pop
and
or
data16
dec
inc
fdiv
add
ror
xor
lahf
add
imul
pop
ins
push
pop
sub
cli
(bad)
call
(bad)
div
lods
mov
xchg
and
das
xchg
xor
dec
mov
stos
cmp
mov
shl
inc
and
fistp
push
sbb
scas
mov
out
push
xchg
inc
icebp
das
fbld
adc
jb
test
je
inc
mov
pop
pop
(bad)
pusha
push
mov
std
xchg
xchg
mov
cmp
xor
push
inc
fisub
cmp
xchg
test
call
mov
daa
(bad)
sahf
lods
(bad)
into
cmp
mov
mov
xchg
xchg
adc
pop
jb
mov
and
fld
inc
fwait
pop
inc
imul
jmp
in
vshufpd
jne
stc
sbb
jns
in
mov
jg
push
sar
mov
test
cmp
mov
int
inc
lock
adc
lods
cmp
inc
add
rol
idiv
mov
inc
sub
mov
mov
pop
repz
mov
inc
out
out
jl
icebp
in
ficomp
ret
enter
dec
sbb
pop
xor
mov
push
push
xchg
cld
fistp
mov
les
into
and
xor
(bad)
repz
mov
add
cmp
mov
jmp
cmp
sti
sub
loope
adc
mov
es
(bad)
int
push
cmps
in
add
adc
mov
movs
leave
icebp
lock
xchg
mov
jle
ja
cs
jp
jo
jmp
fnstsw
faddp
adc
inc
fisub
add
pop
adc
adc
loop
mov
mov
mov
ins
repnz
sub
fsub
sbb
rol
test
or
inc
push
aam
push
in
sub
stc
pushf
shl
xor
es
xchg
xchg
jge
sub
sti
mov
mov
fwait
xchg
movs
or
out
and
pop
daa
imul
ins
and
mov
nop
mov
jno
(bad)
loop
lahf
aam
xor
cmp
ins
neg
push
rcl
pop
in
adc
mov
sahf
mov
or
push
pusha
pop
add
adc
pop
enter
mov
ficomp
xchg
mov
aad
add
repnz
dec
(bad)
repnz
fbld
xchg
cli
jmp
dec
push
sti
retf
sub
pop
xor
xchg
dec
fcomp
out
dec
ret
test
retf
mov
jnp
xchg
fldenv
adc
aam
xchg
sbb
mov
jae
push
adc
jo
cmp
out
and
mov
or
jnp
in
pop
enter
sbb
mov
call
sub
retf
stos
sub
in
dec
xchg
das
sahf
dec
xor
ds
jnp
cmps
inc
or
jecxz
mov
in
shr
mov
(bad)
mov
push
jbe
retf
mov
test
xchg
leave
movs
lock
jecxz
aad
nop
sbb
scas
dec
jg
xor
ja
(bad)
ins
leave
sahf
jg
push
mov
jmp
sbb
cmc
and
dec
movs
cmp
push
cmp
leave
movs
push
ds
adc
gs
push
mov
aam
shl
adc
test
fs
adc
xor
and
mov
fistp
sub
push
pop
xchg
push
sbb
sar
in
aad
xor
pop
fs
pop
mov
rcl
mov
mov
rcl
ins
call
out
std
pop
mov
loope
push
push
push
jmp
shr
pop
dec
sbb
fld
dec
xchg
mov
xchg
stos
(bad)
cmp
test
pop
sub
cmp
inc
sbb
lahf
xchg
mov
mov
adc
fnsave
sub
(bad)
rcr
inc
icebp
push
pusha
pop
out
adc
div
test
push
loope
cmp
scas
dec
cwde
retf
and
xchg
call
dec
xor
retf
mov
popa
jg
jge
or
lsl
jnp
scas
in
out
fimul
xchg
pop
rcr
pop
std
mov
out
mov
or
xor
mov
bound
into
jp
pop
mov
and
xchg
ins
mov
mov
sbb
jae
xchg
add
(bad)
std
mov
enter
shr
loop
cmps
fild
bswap
mov
aaa
mov
shr
(bad)
xchg
sbb
sub
lods
lea
or
(bad)
dec
pop
xor
push
inc
cmp
data16
push
add
pushf
xchg
and
ret
lds
movs
xor
(bad)
test
sub
mov
inc
push
arpl
pusha
or
pusha
add
sahf
xlat
movs
retf
add
cmp
(bad)
cmps
cmc
cld
and
in
into
and
sub
sub
push
ficom
leave
sub
jne
mov
mov
cwde
inc
push
adc
or
aas
pushf
idiv
dec
pusha
jnp
cmps
nop
lods
in
mov
dec
xchg
jne
pop
add
pop
push
mov
scas
(bad)
sub
sti
pop
xchg
das
mov
inc
jbe
mov
mov
cmp
mov
xchg
dec
jmp
(bad)
mov
fs
and
cli
mov
sbb
inc
add
adc
pop
pop
jl
fs
jmp
mov
cmp
pop
jno
adc
das
(bad)
pop
fs
ja
and
pop
xchg
js
jo
dec
mov
dec
push
dec
aas
mov
cmp
pop
jbe
mov
ror
ja
repnz
ficom
add
sbb
ret
xor
hlt
push
sahf
xchg
or
pop
rcr
aaa
xor
loopne
pop
icebp
jno
lods
aaa
push
and
sub
sbb
aam
push
test
inc
sub
add
int
sbb
push
dec
pop
add
jne
mov
dec
outs
jecxz
jo
pop
jecxz
pop
xor
test
mov
mov
jns
adc
call
popa
push
mov
test
dec
mov
lods
sub
push
adc
out
xchg
adc
inc
bound
fcmovbe
xchg
jg
int3
sub
hlt
fs
sub
scas
(bad)
out
ss
and
cmp
push
es
mov
jp
and
inc
cmp
xor
cmp
cdq
dec
rcr
mov
inc
dec
xchg
bnd
je
pop
shl
push
cmp
loopne
sub
call
movs
into
push
(bad)
sub
rcr
pop
xchg
mov
mov
and
call
xor
dec
mov
fmul
add
repz
out
mov
sub
pop
test
sbb
test
xor
adc
push
fimul
xor
dec
jp
ins
inc
stos
fsubr
daa
jg
scas
mov
repz
shl
xchg
sub
in
mov
fiadd
mov
int
dec
stos
inc
test
lods
push
lods
dec
daa
jae
ret
sub
addr16
repz
fcom
or
(bad)
adc
and
dec
jg
nop
retf
mov
or
callw
jns
mov
cmp
dec
stos
cmp
fbld
xor
icebp
xor
popf
jecxz
ds
(bad)
sbb
mov
and
mov
sbb
push
js
sub
mov
addr16
pop
or
inc
or
out
jno
fisttp
jo
rcl
je
or
scas
dec
adc
dec
movs
pop
scas
xor
iret
(bad)
out
and
inc
lods
sbb
jg
or
mov
pop
lods
adc
mov
sub
push
cmp
call
add
xor
sahf
repnz
mov
mov
daa
mov
call
rcr
push
stos
aas
repz
rcl
(bad)
cmp
fsub
ss
in
xchg
jb
xchg
out
and
fisub
test
cwde
je
(bad)
xor
add
mov
stos
lds
test
xor
add
sub
jge
jbe
pop
stos
test
mov
pop
mov
xchg
ds
mov
or
aaa
pop
dec
inc
jp
mov
inc
lea
fs
and
dec
inc
sti
sub
push
outs
repnz
inc
and
jne
arpl
movs
(bad)
out
dec
or
push
repnz
pusha
(bad)
jno
outs
mov
imul
loop
xchg
pslld
dec
les
leave
shl
cdq
jo
fiadd
int3
es
push
adc
sub
in
mov
mov
test
xchg
cmp
xor
call
sbb
inc
add
idiv
lds
scas
cmp
sti
dec
or
mov
jae
inc
mov
mov
push
pop
push
fild
xchg
ds
xchg
sbb
xor
out
repnz
mov
sbb
adc
cs
jne
and
cmp
xchg
mov
jbe
sub
test
xor
(bad)
mov
and
daa
cmps
(bad)
test
push
test
adc
or
test
cmc
test
push
mov
repnz
pop
call
jmp
and
popf
pop
rol
dec
jle
ret
js
fwait
mov
push
clc
push
inc
lods
xor
mov
rcl
fcmovu
mov
adc
cmp
adc
cmp
mov
push
xor
sub
(bad)
std
and
xchg
std
sbb
out
ret
xor
lahf
jne
pop
out
dec
int
pop
iret
(bad)
daa
(bad)
adc
jl
out
call
sub
cmc
sub
mul
and
fs
push
add
mov
faddp
jbe
leave
sti
xor
lock
add
neg
jnp
std
scas
jp
push
mov
fimul
mov
or
movs
adc
push
popa
or
or
cs
sbb
arpl
dec
or
cmps
inc
addr16
xchg
lods
sbb
retf
push
push
shl
ror
inc
fisub
in
mov
inc
ds
js
jmp
xchg
jle
in
iret
fild
lods
adc
mov
gs
ret
retf
ja
or
mov
mov
call
dec
daa
rol
inc
cmp
aas
arpl
adc
pop
leave
xchg
sub
call
or
mov
imul
cmps
sub
dec
jecxz
mov
cld
and
xchg
push
ret
les
and
dec
out
loope
add
adc
enter
stc
das
ja
daa
rcl
pop
sbb
sbb
or
pop
or
dec
mov
pop
push
fist
mov
ins
inc
mov
retf
mov
imul
pop
cli
in
jo
(bad)
jmp
ja
popa
jle
fldenv
aas
and
inc
add
fst
jmp
data16
enter
add
mov
mov
jmp
cmp
sub
cmps
fist
cmp
ficom
jmp
push
dec
pop
inc
add
jle
mov
scas
arpl
xchg
mov
lock
out
(bad)
call
sub
sbb
lock
pop
ds
inc
jl
(bad)
jns
int
xchg
jmp
sub
pop
mov
in
or
mov
adc
and
loope
xor
xchg
stc
pop
mov
pop
mov
or
and
loope
push
lods
stos
mov
loop
sti
mov
jnp
hlt
sbb
and
fs
sub
shr
(bad)
cmps
mov
xor
push
jmp
dec
mov
aam
in
scas
in
mov
cmp
push
leave
fwait
es
adc
push
cs
pop
stos
fisubr
imul
pop
dec
xchg
scas
jle
(bad)
aad
out
mov
sub
imul
bound
jmp
bound
add
and
es
sub
aaa
lods
das
ret
sbb
jle
out
mov
icebp
sbb
stos
int
and
fwait
xor
out
mov
test
ret
mov
ja
push
movs
je
xlat
adc
or
add
push
or
jp
call
adc
minps
(bad)
in
ror
adc
pop
pop
stos
push
outs
rol
sti
pop
(bad)
fcmovu
adc
out
jge
fild
test
sahf
cwde
jle
gs
xchg
or
popf
cli
(bad)
ror
fprem
xor
call
push
pop
adc
adc
stos
jg
xlat
cmp
call
sbb
xor
mov
or
outs
(bad)
das
nop
mov
adc
out
adc
test
xchg
fwait
or
daa
lock
addr16
popf
enter
sbb
dec
xlat
(bad)
ja
popf
mov
ja
jg
jne
out
jno
mov
push
or
loope
xor
jne
repz
dec
jmp
in
ret
push
xor
sub
adc
xchg
in
xor
inc
movs
xchg
out
divps
jmp
retf
adc
sub
jmp
xor
icebp
push
in
mov
nop
mov
mov
inc
cmp
xor
xchg
dec
mov
cld
frstor
xor
dec
rcr
mov
outs
ja
dec
dec
fs
fxrstor
stos
out
mov
xchg
nop
mov
mov
das
aad
outs
pop
jnp
sahf
(bad)
mov
iret
mov
pop
out
(bad)
cmp
outs
dec
dec
pop
push
dec
dec
and
mov
outs
scas
and
ror
inc
dec
pop
or
dec
into
xor
(bad)
pop
pop
cs
std
xchg
xlat
aam
ins
es
fs
push
popf
in
mov
inc
xor
mov
ds
xchg
mov
or
mov
inc
pop
fdivp
cmp
ds
psubsb
cmp
daa
dec
(bad)
movs
bound
enter
cmp
fucompp
xor
push
fidivr
inc
jb
mov
mov
dec
adc
dec
jbe
mov
and
and
push
fmul
sbb
cwde
mov
enter
push
icebp
add
hlt
enter
push
or
jnp
fadd
or
pop
or
jmp
cld
push
aam
push
(bad)
and
scas
inc
stos
mov
inc
aam
sub
in
inc
pop
sahf
int
xor
aad
sahf
mov
pop
fwait
inc
enter
cmp
adc
call
retf
sub
lods
lods
clc
mov
mov
xlat
mov
push
or
frstor
scas
xor
add
adc
(bad)
cwde
test
jmp
sub
jp
into
int3
shl
into
sbb
ins
jp
mov
sbb
pop
pop
mul
fisttp
stos
inc
mov
fisttp
pop
dec
mov
sbb
fimul
xor
push
xchg
mov
mov
hlt
icebp
inc
push
jmp
cmp
jne
je
jae
add
inc
arpl
ret
popf
stos
mov
popf
xchg
push
xchg
xchg
adc
inc
inc
(bad)
jmp
xor
loopne
ss
shl
(bad)
jb
mov
xchg
adc
clc
mov
pop
push
lods
in
add
dec
lods
lahf
pop
les
pop
mov
(bad)
shr
jg
adc
jp
or
adc
inc
shl
push
and
xchg
adc
pop
mov
int3
xchg
lock
adc
jp
lods
pop
imul
fs
mov
jmp
sbb
add
imul
push
popf
or
mov
and
adc
and
(bad)
outs
ss
mov
imul
lahf
lds
mov
jge
push
movs
(bad)
jge
inc
mov
sub
xor
inc
mov
and
jl
xlat
add
call
xchg
cmc
or
cli
stos
adc
loope
cmp
out
xchg
movs
adc
lock
mov
mov
jmp
inc
sbb
sub
scas
fst
xor
cs
xor
sbb
popf
cmps
mov
lock
jnp
ins
fadd
and
in
cwde
(bad)
js
sbb
dec
dec
mov
adc
jge
sahf
inc
(bad)
into
sbb
sbb
xchg
sahf
shl
sbb
daa
repz
das
movs
adc
jge
fwait
dec
or
dec
xchg
and
pop
jne
int3
addr16
cmp
xchg
shr
mov
nop
scas
sti
test
in
aaa
test
pop
mov
jp
xor
mov
push
pop
mov
push
addr16
scas
cs
xor
adc
cmp
(bad)
jg
mov
cmc
add
jecxz
stos
je
inc
or
repnz
inc
movs
mov
in
lods
dec
fisub
cmp
push
fs
and
dec
dec
or
mov
(bad)
outs
xchg
pop
or
popa
das
dec
fist
std
fsub
rol
jmp
clc
imul
cmp
(bad)
jge
mov
test
hlt
outs
and
rcl
in
and
mov
leave
cmovg
dec
mov
lds
addr16
xchg
(bad)
sub
leave
outs
pop
mov
dec
add
sbb
test
add
bound
arpl
mov
add
pop
rcr
jg
aam
sbb
outs
nop
jl
pop
cmp
xbegin
inc
int3
and
test
jecxz
dec
div
mov
push
mov
adc
lods
push
mov
cld
jo
push
mov
and
jae
xor
test
iret
test
push
popw
push
xor
test
jp
sbb
mov
adc
lods
inc
mov
inc
mov
mov
add
mov
xor
clts
data16
pop
and
(bad)
(bad)
push
loopne
push
dec
leave
mov
data16
add
lahf
sub
xchg
icebp
xchg
scas
sub
xchg
push
movs
sub
inc
fisttp
rol
jg
adc
test
movs
xor
es
repz
pop
inc
pop
test
xor
stos
add
xor
dec
pop
fwait
pop
xor
mov
nop
bnd
ins
inc
sub
sbb
mov
mov
adc
mov
cmp
in
dec
sbb
addr16
fstp
inc
push
mov
fbld
sbb
imul
aaa
xor
test
ins
imul
mov
pusha
div
cmps
cmc
imul
stos
mov
out
mov
aas
dec
mov
push
push
fld
(bad)
sbb
xor
ficom
stc
push
xchg
cli
xor
adc
loop
sub
add
and
adc
push
sti
(bad)
inc
push
jb
imul
cmps
into
xchg
fidiv
les
pop
sbb
cmps
out
loope
icebp
into
cmp
fadd
call
jnp
std
jmp
aad
inc
out
addr16
loopne
inc
lea
lahf
mov
lods
shl
ret
enter
ret
mov
or
cs
test
loopne
pop
fild
pushf
aam
xor
inc
addr16
sbb
aas
adc
fidivr
adc
mov
xchg
test
push
or
mov
jae
inc
std
call
push
dec
xor
movs
daa
mov
pop
or
push
push
xor
cwde
jns
pop
retf
push
push
pop
jns
cmp
pop
mov
int
xor
(bad)
jns
jmp
xchg
inc
jge
movs
call
std
ret
pop
cwde
mov
cwde
cli
cld
scas
icebp
aad
stc
pop
xor
jbe
mov
lds
pushf
mov
sub
js
sar
inc
lock
cmp
xchg
into
or
pusha
popa
rcr
out
in
add
mov
lods
ja
add
arpl
or
cmp
jae
xor
add
fbld
add
lahf
mov
out
jbe
xchg
fistp
mov
jl
push
ret
lods
xlat
inc
inc
ins
or
lock
fst
inc
lea
js
xchg
int3
addr16
bound
push
pop
adc
sti
popf
fs
adc
or
cmc
dec
out
add
cmp
pusha
mov
mov
sub
bound
aas
push
mov
push
push
pop
adc
popf
push
xor
ror
ja
fsin
ins
cmps
xchg
fwait
cs
jp
(bad)
shr
mov
inc
xchg
(bad)
gs
stc
jb
int
les
pop
xchg
push
and
aaa
lahf
les
ficom
ja
das
cmps
jnp
jp
popf
mov
jle
in
test
frstor
les
in
(bad)
xchg
retf
lds
in
add
sti
xchg
sbb
pusha
xchg
ret
lahf
and
dec
sbb
dec
and
(bad)
or
jl
mov
arpl
(bad)
movs
sar
dec
pop
cmp
push
push
movs
adc
int3
mov
lahf
inc
inc
and
fistp
adc
and
add
test
sub
shl
ins
sub
mov
adc
inc
pop
pop
(bad)
pop
or
popa
repnz
add
fcomp
je
xor
mov
imul
sti
in
shl
xchg
fadd
leave
fmul
fs
aaa
nop/reserved
and
dec
retf
int3
add
enter
addr16
mov
shl
xchg
sub
in
icebp
xlat
bound
pop
repz
out
cmp
and
imul
adc
shl
ds
mov
mov
popa
icebp
stos
inc
inc
pop
xchg
inc
out
jb
retf
imul
and
sbb
retf
loopne
mov
loopne
cld
pop
adc
adc
ss
adc
cld
push
and
ret
xor
cmp
or
push
nop
in
dec
sti
add
adc
or
out
sbb
ret
cmps
outs
or
(bad)
jne
lods
(bad)
cmp
jae
mov
jo
mov
add
jb
fwait
das
pushf
call
xchg
sub
outs
cmp
mov
movs
fwait
adc
js
xchg
std
lods
mov
add
std
je
in
jle
jge
mov
fstp
jns
int3
jmp
xchg
imul
int3
fbld
jo
sti
jle
stos
jo
outs
jae
xor
jo
das
ins
outs
mov
out
sub
pop
fistp
imul
and
pushf
int
popa
ja
lea
sbb
cmc
outs
add
fs
mov
push
jecxz
jecxz
and
in
stos
cdq
ret
mov
movs
mov
adc
xchg
mov
xchg
aaa
and
sub
push
mov
add
dec
mov
push
mov
inc
mov
cmp
fdivrp
loopne
lods
fs
lods
push
inc
sti
mov
adc
call
or
lahf
aas
jl
push
mov
(bad)
xchg
inc
mov
adc
cmp
arpl
hlt
bound
xchg
fild
rep
pop
inc
pop
js
lahf
stos
fld
and
inc
aas
jo
push
xchg
popf
shl
dec
fidivr
fucom
mov
and
adc
xchg
addr16
add
rcr
repz
lock
mov
mov
iret
arpl
pop
je
ds
hlt
lds
adc
out
dec
or
xor
mov
xor
push
sar
xlat
cmp
mov
xchg
fwait
sub
lds
test
and
addr16
nop
mov
jbe
call
or
ins
dec
and
add
mov
push
les
sbb
sbb
rcr
lea
and
lds
add
ins
inc
in
cli
xchg
(bad)
pop
inc
into
cmc
lock
stos
mov
sub
adc
loope
clc
sbb
sub
sub
(bad)
xchg
sub
mov
(bad)
mov
cli
pop
dec
test
cmp
mov
iret
push
cmp
pop
nop
add
int3
pop
mov
pop
fwait
sub
cmc
ja
add
jg
retf
cmp
pop
xor
lahf
xor
fdiv
jnp
nop
mov
inc
mov
mov
adc
stc
xchg
pop
xchg
nop
push
push
icebp
inc
adc
mov
push
enter
or
(bad)
inc
fisttp
push
in
jae
mov
lods
scas
or
fstp
sahf
add
xchg
cmp
loope
cs
dec
pop
ret
out
mov
repnz
inc
sbb
mov
pop
cmps
cmps
scas
jmp
ret
das
mov
jno
xchg
and
mov
pop
sbb
in
dec
std
ss
scas
(bad)
xor
push
pop
mov
xchg
in
adc
pop
(bad)
adc
adc
or
mov
cmp
push
shr
fwait
dec
jmp
sub
sbb
push
(bad)
mov
adc
fwait
mov
push
mov
inc
inc
mov
sahf
movs
cmp
les
cli
mov
mov
test
stc
jge
pop
push
push
pop
ins
xchg
retf
mov
es
neg
call
movs
sbb
imul
pop
push
bnd
imul
cmc
inc
jl
das
(bad)
(bad)
xchg
stc
xlat
xchg
scas
xchg
mov
xchg
pop
sbb
sub
clc
mov
popf
std
or
mov
nop
inc
dec
outs
or
jg
dec
and
mov
loope
ror
mov
pop
and
sub
or
dec
outs
mov
in
nop
ss
enter
jb
scas
lods
lea
push
sbb
mov
test
mov
or
and
int
clc
cld
adc
out
outs
push
sbb
ins
sar
imul
fild
(bad)
mov
inc
xchg
push
clc
push
sbb
dec
(bad)
outs
cwde
ret
dec
stos
pop
add
and
fwait
cmp
jg
ret
jp
inc
or
fnstcw
or
out
push
sahf
cmps
mov
dec
leave
mov
dec
loope
jbe
sbb
fild
lds
inc
out
jne
mov
retf
ror
pusha
sub
cwde
inc
pop
cmps
out
dec
xor
sub
ret
add
push
push
nop
std
pop
sub
stos
add
sub
sbb
mov
pop
mov
mov
fild
dec
mov
mov
bound
mov
xchg
repz
xchg
jae
lock
outs
xor
(bad)
shl
mov
sbb
and
push
cmp
cdq
jns
pop
loopne
ror
jp
xchg
ins
scas
and
fdivr
js
sar
xchg
test
rol
test
and
xor
cmp
mov
pop
fwait
push
into
xor
and
mov
popf
in
ret
shl
or
pop
inc
outs
pop
jmp
ins
gs
and
mov
xor
icebp
cmp
sar
loop
cmp
movs
in
adc
dec
mov
xlat
dec
push
imul
mov
loope
fisub
pop
call
hlt
jl
xor
pop
mov
rep
and
out
xchg
xchg
add
inc
lea
pop
cmp
aam
cmps
out
xchg
pusha
cli
sbb
jmp
xchg
int3
and
add
add
enter
mov
jmp
nop
hlt
push
pop
repnz
pop
cmp
imul
cmp
adc
outs
mov
outs
retf
cmc
aaa
or
mov
jo
xchg
ret
sub
stc
mov
mov
(bad)
mov
(bad)
fwait
push
repnz
test
pop
adc
xor
lahf
idiv
push
xchg
mov
(bad)
into
ins
mov
and
in
push
cmps
cli
adc
movs
mov
cmc
popf
jno
and
sbb
loopne
pop
popa
fstp
js
aam
xchg
dec
push
pop
add
les
mov
iret
xor
fldcw
movs
sbb
push
inc
add
(bad)
lods
adc
cld
mov
xlat
imul
or
jae
(bad)
push
dec
push
adc
adc
mov
dec
lahf
test
ret
cmp
mov
add
pop
outs
push
dec
ret
(bad)
jae
push
fldcw
test
xor
xor
pop
push
dec
xor
mov
into
retf
inc
cmps
xlat
stos
lahf
fnstenv
cld
xor
dec
aam
add
xor
cdq
loop
push
sbb
mov
(bad)
push
pop
inc
inc
out
sti
outs
mov
lods
inc
add
add
mov
mov
jno
dec
inc
cmp
or
out
movs
ja
add
adc
data16
test
(bad)
jb
lea
aas
imul
lock
cdq
(bad)
les
test
int3
dec
aad
rol
sub
xchg
fsubr
pop
es
pop
cmp
outs
cmp
bound
mov
sbb
xchg
(bad)
jne
xlat
dec
call
xchg
fiadd
les
jns
inc
mov
add
loope
jmp
sbb
and
push
leave
inc
inc
fucomp
inc
mov
cld
cmp
mov
test
sub
pop
mov
pop
popa
cmc
into
inc
cmc
sub
scas
cwde
mov
out
jns
movs
adc
cmps
and
pop
mov
ins
repz
popa
xor
xchg
loop
sub
iret
dec
(bad)
(bad)
xor
jl
iretw
idiv
push
lods
jle
cmp
in
mov
sub
cmps
dec
sub
sbb
mov
pop
dec
sub
xchg
ret
pop
xor
imul
cld
jnp
cwde
add
data16
push
test
inc
add
mov
fs
in
jecxz
cmp
mov
and
sbb
movs
cli
jecxz
sub
push
xchg
(bad)
popa
clc
dec
out
shl
mov
dec
inc
stc
cmps
jecxz
xchg
xchg
add
add
xor
jg
push
and
jns
xor
sub
popa
dec
rcr
mov
jle
pop
aas
cmps
push
fist
mov
xchg
gs
jecxz
sub
sub
loopne
sub
sbb
sub
and
adc
sub
push
cdq
(bad)
out
fimul
out
lds
adc
pop
scas
pop
sub
jo
xor
push
cwde
loopne
in
xor
cmps
mov
(bad)
sti
jle
mov
or
xor
push
imul
add
pop
gs
sub
call
push
cmp
fisubr
xchg
add
call
out
mov
cmc
mov
push
mov
xchg
les
mov
sub
push
fld
outs
inc
and
dec
pop
sub
cwde
fnstcw
xor
pop
and
add
cmp
adc
hlt
jno
mov
imul
inc
mov
seta
loopne
adc
mov
jae
sbb
(bad)
loop
mov
fild
loope
push
jge
push
loop
push
les
les
test
(bad)
cli
cmp
inc
xor
ror
loope
clc
int
loop
test
mov
xchg
jb
and
in
clc
ret
sti
jp
add
add
jns
add
xchg
lea
dec
ds
lods
cmp
outs
in
enter
adc
lods
cmp
sub
push
paddsw
test
push
sub
lahf
(bad)
push
or
inc
or
mov
ss
pop
xlat
sbb
popa
out
sbb
push
outs
mov
mov
mov
mov
xchg
in
pop
std
cdq
es
push
jmp
xchg
push
aam
ss
lahf
push
mov
ror
pop
cmps
nop
mov
jle
lock
(bad)
icebp
int3
xor
xor
jnp
dec
clc
lahf
xchg
daa
out
push
or
push
cmc
xor
std
push
xlat
fidivr
cld
dec
stos
xlat
pop
imul
inc
(bad)
mov
jle
nop
inc
fucomp
cmp
stos
pop
cmp
(bad)
xor
or
fs
pop
pusha
cmp
jns
scas
adc
cmps
imul
inc
adc
cmp
cmp
push
and
sub
inc
sub
jle
sbb
aas
(bad)
in
sbb
pop
int
addr16
mov
lea
jg
sub
xlat
into
in
xchg
ret
dec
les
scas
jne
xchg
jae
mov
cmp
inc
icebp
shl
push
inc
jo
mov
or
dec
pop
pop
xchg
js
jae
cli
or
ret
mov
jmp
xchg
xor
stc
pusha
cmp
xor
in
jne
and
stc
push
scas
add
jg
lahf
mov
mov
sub
pop
cmps
ds
add
or
sub
add
rol
fbstp
mov
mov
mov
(bad)
pop
add
mov
stos
in
or
cmp
iret
xchg
iret
push
je
ins
(bad)
nop
inc
test
aam
movs
mov
sub
jg
inc
cmp
lds
jl
cmp
in
jb
push
mov
pop
xlat
adc
or
add
or
enter
arpl
mov
les
cmps
popa
ja
pop
push
rcl
xor
adc
sbb
ret
or
shl
cmp
adc
push
clc
push
out
jmp
out
inc
(bad)
into
cmp
hlt
in
mov
arpl
enter
test
lds
sub
adc
neg
cmp
dec
and
dec
addr16
jnp
mov
cmps
stos
(bad)
fs
cmps
jecxz
sbb
push
mov
dec
jge
adc
or
bound
shl
inc
dec
imul
inc
aad
leave
ret
fstp
add
data16
pushf
js
movs
(bad)
cmp
xrelease
jmp
outs
push
xchg
sar
xor
arpl
push
sysexit
fdiv
mov
mov
jecxz
in
icebp
cld
inc
xor
mov
and
add
pop
js
outs
rcl
mov
mov
rcl
repnz
mov
fistp
lods
movs
mov
test
adc
cs
into
jp
xor
sbb
pop
enter
lods
inc
cmpps
dec
mov
gs
les
dec
or
enter
push
inc
add
pop
icebp
test
sbb
mov
test
lea
jg
cmp
(bad)
sbb
lods
(bad)
pop
or
and
fmul
jl
lds
push
test
mov
cmps
sub
mov
or
stos
or
and
ds
dec
aas
test
inc
fcmovnb
bound
jmp
fwait
xchg
sar
add
shr
in
pop
or
inc
sbb
xchg
aaa
inc
clc
jge
(bad)
retf
sub
fwait
nop
mov
adc
lahf
jns
mov
pop
dec
mov
jns
lea
pop
mov
pop
pop
cmp
es
mov
sbb
sbb
xchg
retf
push
mov
pop
stos
leave
push
jo
adc
add
and
cdq
sbb
mov
xor
dec
add
retf
mov
dec
stos
pop
mov
cld
mov
arpl
pop
in
std
sub
iret
int
push
fs
fmul
lahf
js
dec
(bad)
adc
imul
mov
add
(bad)
jnp
pop
iret
fadd
pop
jmp
push
push
aam
pop
xchg
ds
rcl
push
sar
and
sbb
jmp
call
xlat
push
or
and
adc
jb
or
or
in
fstp
pop
test
or
ss
stc
push
jp
je
add
pop
movs
mov
jo
pop
(bad)
(bad)
lds
jns
call
xor
push
sbb
pop
rcr
pop
adc
lds
out
or
mov
jbe
loope
sub
aam
data16
lds
and
psubd
jp
and
scas
xchg
rcr
ret
cmp
add
add
ret
adc
mov
xor
xchg
call
clc
xchg
stos
mov
xor
mov
rol
(bad)
in
imul
lahf
sbb
and
fcom
push
in
ins
fwait
jo
cmp
inc
aas
test
inc
mov
in
jmp
or
in
cmp
adc
mov
not
cdq
push
add
cmp
aas
daa
and
(bad)
fstp
das
sub
cmp
retf
out
jge
jb
iret
mov
lea
outs
stc
or
mov
and
cmp
cmps
movs
stos
jne
push
lods
jns
lock
out
stc
outs
dec
leave
mov
inc
cmp
lock
ja
push
push
call
stos
clc
adc
out
jne
inc
nop
jmp
cmps
imul
bound
xchg
sub
fbstp
repz
adc
repz
fisub
pop
mov
sbb
sub
mov
out
xlat
pusha
jno
mov
fcmovnbe
add
inc
sub
jns
mov
pop
fwait
and
mov
add
in
in
add
sub
fprem
xchg
dec
jge
inc
fnstsw
(bad)
jge
xchg
cs
je
sti
aas
les
aad
scas
iret
mov
loopne
or
leave
loopne
scas
inc
mov
pushf
(bad)
xchg
mov
xor
(bad)
cld
fld
fmul
ins
push
lock
pop
loopne
into
push
xchg
ret
int3
pop
mov
dec
push
das
ror
mov
jnp
add
mov
fisttp
xor
pop
add
or
dec
nop
pop
jp
add
adc
or
mov
rcr
in
or
mov
mov
mov
out
(bad)
test
int
inc
adc
mov
rcr
xchg
and
std
lods
js
in
pop
ins
jmp
out
cmp
ret
xchg
adc
out
pop
mov
mov
inc
sahf
lahf
pop
fwait
push
leave
dec
jo
or
icebp
fisub
daa
sbb
push
push
lds
pop
or
jecxz
in
scas
leave
dec
sub
sbb
xchg
or
sbb
movs
hlt
ins
ins
in
push
sahf
add
mov
je
dec
rol
pop
and
xor
fisttp
inc
into
leave
sub
sub
sub
xchg
mov
ja
xchg
scas
push
dec
xchg
es
sbb
shr
mov
jmp
in
cmp
cmp
jno
bound
push
mov
daa
dec
mov
jmp
lods
daa
in
bound
mov
cmp
das
imul
and
leave
jnp
and
sar
xlat
or
inc
(bad)
int3
cmps
and
fs
fcom
test
lea
xchg
or
xchg
stos
popa
add
add
stos
xor
mov
xchg
gs
into
inc
scas
call
fwait
sbb
cmc
dec
(bad)
lea
into
sar
and
adc
outs
fld
ja
dec
jmp
scas
in
hlt
int3
ins
pusha
dec
mov
pop
out
(bad)
lahf
ret
push
call
mov
nop
pop
std
out
cmps
sub
les
mov
mov
jb
fsubr
mov
xor
test
pop
ret
loopne
jb
inc
pop
(bad)
pop
inc
mov
retf
stos
mov
mov
dec
push
mov
push
mov
sbb
scas
popf
out
fcomp
pop
push
call
cmp
stos
xchg
dec
imul
mul
xor
lods
nop
pop
sbb
adc
mov
xor
jmp
cmp
sub
dec
das
mov
mov
pop
push
std
mov
xor
cmps
inc
test
test
add
xchg
or
jae
ds
(bad)
mov
ror
mov
test
pop
jle
sub
in
push
sub
or
jg
and
movs
push
test
(bad)
jecxz
xor
ins
dec
mov
xchg
jno
(bad)
mov
or
sahf
sbb
dec
and
cli
xchg
retf
xchg
repnz
pop
je
adc
data16
cdq
scas
fist
or
test
cmp
sbb
outs
cmp
call
pop
gs
push
jns
loope
jmp
dec
sub
dec
sub
retf
adc
inc
es
fld
push
xor
imul
scas
scas
stc
aaa
push
popf
push
inc
inc
push
lods
(bad)
push
add
add
pushf
movs
cmp
jns
and
mov
ins
push
add
xor
sub
retf
imul
mov
scas
xchg
or
push
jb
cld
cli
inc
push
mov
pop
repz
sub
cmps
(bad)
popf
mov
call
and
fisub
and
es
jb
xchg
pop
adc
lea
ret
cmp
inc
addr16
fld
in
or
clc
icebp
push
pop
test
out
sar
idiv
aaa
sub
inc
pop
dec
pop
mov
xchg
dec
adc
pop
xchg
push
cwde
out
gs
call
jl
es
xor
jns
aad
out
push
movs
and
or
lods
inc
in
imul
fild
pushf
pop
inc
(bad)
stc
shr
mov
mov
sub
jg
into
jnp
pop
xchg
or
cli
push
mov
out
pusha
aam
jae
popf
out
push
movs
pop
xlat
push
and
jp
mov
ret
sbb
aas
loop
xor
dec
mov
add
adc
mov
cmp
and
imul
push
in
fucom
inc
mov
add
sub
cld
sub
xchg
adc
cli
std
and
mov
test
sahf
outs
loope
inc
push
cmp
xor
rcl
ror
retf
sub
pop
fsubr
adc
rol
adc
push
sbb
adc
adc
repnz
gs
pop
std
test
shl
cmc
adc
sahf
cmps
arpl
push
cmp
dec
rcl
mov
mov
scas
(bad)
fsub
pushf
fsubrp
xchg
jno
test
jns
dec
in
call
mov
ficom
cmp
mov
cmps
in
mov
pop
std
mov
cwde
(bad)
fisttp
cmps
mov
mov
in
inc
in
mov
test
int
stc
mov
mov
icebp
packsswb
mov
push
pop
aad
scas
dec
fimul
ret
and
jo
pushf
jecxz
jb
dec
out
scas
and
jno
mov
scas
imul
cmps
not
jg
data16
cdq
push
sub
xor
pushf
(bad)
push
xchg
add
and
or
push
dec
add
(bad)
xor
inc
mov
shr
mov
jmp
xor
sub
pop
popa
and
jae
scas
fwait
xor
push
push
js
sub
xchg
jecxz
jp
mov
ja
add
jns
loope
sub
iret
leave
mov
icebp
sub
jns
mov
imul
dec
gs
pop
hlt
or
stc
xor
hlt
out
sahf
leave
fwait
mov
cmc
and
pop
test
sahf
bound
scas
push
retf
repnz
(bad)
xor
add
je
ret
(bad)
addr16
in
cmp
or
mov
ret
dec
inc
call
inc
mov
adc
retf
jb
push
jbe
mov
push
mov
popf
mov
sbb
retf
iret
dec
mov
aas
lea
jmp
shl
jle
pop
(bad)
adc
(bad)
int3
add
rcr
and
jo
mov
stos
clc
stc
xchg
mov
retf
pop
aad
jbe
cmp
add
movs
xchg
push
test
out
adc
rol
cs
cld
push
mov
push
nop
jp
add
ret
fsub
fldenv
cmp
popf
dec
gs
xchg
ins
sti
mov
repz
jns
outs
and
pop
mov
xchg
out
sub
or
mov
dec
dec
lahf
hlt
lea
inc
repz
mul
sub
test
addr16
mov
enter
sbb
sti
jnp
jmp
test
sub
das
ret
and
fiadd
and
push
aam
pusha
outs
lock
mov
pop
sub
loopne
pusha
clts
call
shl
push
ret
enter
js
inc
xchg
ds
dec
iret
dec
cmp
out
mov
jne
repnz
push
pop
pop
mov
mov
lea
inc
mov
icebp
mov
in
lods
cmps
pop
stos
add
jmp
movs
or
fild
xor
pop
enter
mov
mov
dec
mov
cmp
mov
pop
cdq
jne
adc
mov
xchg
int
daa
inc
fwait
cmp
aas
cs
sbb
loop
into
xchg
call
pop
(bad)
sub
fimul
mov
bound
int3
pop
sub
rcl
cs
int3
(bad)
lahf
mov
pop
and
mul
out
xor
inc
iret
je
xor
cwde
or
(bad)
mov
imul
jae
gs
retf
sub
inc
lock
inc
and
arpl
lahf
cmp
cmp
jge
pop
inc
and
fnstcw
adc
mov
mov
xor
shl
mov
mov
stos
lahf
leave
push
xchg
mov
cs
jns
js
and
adc
shl
jg
int3
cwde
test
vpmullw
pushf
jnp
jmp
jecxz
hlt
ret
xor
lahf
push
int
or
cld
adc
xor
adc
cli
lahf
or
cmc
xchg
test
(bad)
(bad)
cld
adc
and
fwait
shl
mov
xor
dec
push
push
bound
adc
jle
aad
out
jl
dec
push
jle
scas
int3
add
psubq
rcl
sbb
adc
sbb
test
mov
pushf
and
inc
and
dec
nop
addr16
pop
and
arpl
cmps
dec
(bad)
clc
mov
jae
mov
icebp
in
jbe
pop
mov
lock
mov
scas
mov
std
ror
add
pop
xchg
repnz
mov
arpl
and
es
rcr
xor
cmps
je
sbb
cwde
imul
sete
xchg
mov
int3
xor
xchg
pop
adc
push
loop
ficomp
outs
test
outs
aaa
mov
or
fld
mov
xchg
lds
pop
mov
jns
sbb
and
fild
xchg
push
test
cmp
pop
call
push
fstp
jb
repnz
xor
arpl
inc
cli
sub
mov
push
mov
sbb
shl
lock
dec
(bad)
stos
out
test
das
fld
lods
xchg
mov
pusha
enter
(bad)
retf
icebp
pop
push
or
outs
or
test
imul
sub
(bad)
rcl
out
xor
retf
test
push
sbb
dec
cmp
retf
sub
stos
and
pop
cmp
dec
inc
push
fild
in
mov
mov
ret
in
sbb
pop
or
ror
add
movs
pop
cli
ins
jg
in
scas
cmp
lods
sahf
sub
sbb
sub
jge
or
push
jp
jae
(bad)
pop
dec
ficom
aas
mov
aad
mov
ins
or
mov
add
pop
add
or
dec
mov
fld
das
mov
(bad)
mov
mov
shl
dec
sbb
cmp
mov
(bad)
push
add
mov
daa
add
ins
mov
cmp
mov
or
mov
fmul
or
lods
sub
adc
imul
test
jmp
test
xlat
pop
out
inc
fcom
sub
push
ret
mov
pop
mov
out
mov
(bad)
(bad)
aaa
push
sbb
pop
jle
outs
mov
lock
xchg
push
xor
push
pop
lock
and
mov
iret
xchg
mov
sbb
jmp
mov
sti
push
int
mov
adc
jno
push
add
ret
mov
jmp
xchg
mov
mov
test
iret
inc
mov
jmp
xchg
addr16
sub
aaa
dec
popf
or
mov
dec
sbb
xor
pop
jl
mov
cmp
in
pop
or
adc
and
(bad)
mov
sahf
xchg
mov
stos
jno
push
cmp
pop
xchg
mov
xchg
pop
imul
mov
mov
dec
fs
movs
mov
sbb
add
data16
fstp
sub
or
int
lea
jae
ret
or
mov
mov
(bad)
mov
in
push
jecxz
gs
movs
xchg
inc
mov
mov
cdq
sub
jmp
sbb
add
fwait
test
and
and
push
es
ins
scas
mov
pop
sbb
mov
arpl
jecxz
xor
sbb
sbb
xor
dec
jmp
stos
(bad)
rep
mov
xor
xchg
dec
(bad)
sub
sbb
mov
imul
cwde
movs
imul
rol
outs
pop
inc
out
stc
stos
mov
aam
cli
ret
adc
lock
rol
pop
sar
cmp
mov
inc
pop
cli
and
fidiv
test
dec
ja
fdiv
jl
add
stos
ss
(bad)
mov
jecxz
inc
cmc
cmp
add
xchg
(bad)
shr
movs
adc
dec
push
pop
int
dec
sbb
lock
repz
add
xor
(bad)
push
push
ret
mov
sub
xchg
jecxz
pushf
sub
call
loopne
test
pop
jo
pop
in
ror
and
add
mov
dec
(bad)
daa
pop
movs
jl
mov
shl
test
xor
ret
pusha
test
inc
add
xor
aad
lock
js
mov
(bad)
jno
add
xor
cdq
(bad)
fist
inc
cmp
push
test
rol
lods
sbb
ret
nop
jge
sbb
sbb
mov
shr
dec
lock
je
in
mov
or
jae
enter
pop
mov
jle
push
scas
xchg
sub
mov
stos
fist
movs
lods
cdq
mov
push
stos
mov
fsubr
jle
xchg
push
xchg
inc
(bad)
mov
or
ins
xchg
hlt
xor
lahf
add
sbb
cmps
cmp
mov
mov
sub
das
ja
pop
pop
aas
leave
mov
(bad)
inc
dec
add
adc
push
out
lods
jns
arpl
push
push
adc
jmp
pop
push
mov
dec
test
mov
mov
loope
sti
inc
cmp
int3
mov
jge
leave
retf
scas
jmp
out
pushf
sub
dec
sub
enter
xor
in
(bad)
pop
xchg
enter
or
in
lods
cmp
das
shl
jp
pop
push
adc
sub
mov
js
cli
cmps
test
mov
push
out
repz
and
jg
jmp
(bad)
arpl
out
adc
loopne
mov
and
mov
xor
xor
dec
inc
pop
xlat
pop
jbe
and
and
test
ret
out
shl
ja
and
sbb
ins
jge
retf
pop
sub
gs
jbe
shr
or
sbb
test
int3
jg
push
xchg
xor
out
xor
into
shl
mov
loope
call
adc
cmp
cld
inc
(bad)
(bad)
std
push
add
mov
es
mov
in
sub
pop
outs
repz
dec
pop
adc
xor
(bad)
cld
retf
inc
out
jo
cmp
sar
scas
mov
jmp
cmp
mov
stos
call
jmp
mov
mov
js
pop
pop
fs
mov
mov
xor
sub
ins
imul
out
push
cmps
(bad)
ficomp
pop
sbb
in
push
or
pushf
dec
ins
add
imul
fmul
fdivr
sub
jecxz
call
jg
shr
repz
sbb
cmp
add
jnp
jmp
add
adc
cmp
idiv
or
mov
or
movs
pop
cs
aaa
fbstp
movs
(bad)
fcomi
sub
das
dec
aas
call
fild
mov
outs
fwait
mov
out
data16
pusha
sti
inc
pop
jmp
lods
outs
in
call
retf
into
sbb
inc
pop
(bad)
jmp
pop
aaa
cmp
jns
jmp
dec
push
popa
xchg
push
dec
test
fidiv
sub
lods
xor
xor
sub
pop
arpl
adc
cmc
mov
not
scas
rdmsr
shl
(bad)
repz
dec
mov
dec
fcom
sbb
cs
pusha
mov
test
xchg
jno
in
jmp
sub
xchg
lds
shl
aad
loope
movs
jmp
and
dec
and
es
dec
int
and
push
and
xchg
imul
lahf
(bad)
fist
into
pop
retf
inc
inc
sub
add
imul
sbb
cmp
jecxz
into
mov
xchg
mov
cdq
pop
mov
cli
mov
push
loopne
neg
push
fcom
jo
or
fild
pop
fsubr
and
shl
out
push
xchg
es
repnz
sbb
jecxz
mov
js
cmp
icebp
lock
out
sbb
pop
jae
mov
sub
jne
iret
data16
or
jp
jl
sti
stc
daa
cmp
lods
fdivr
xchg
lods
jl
dec
enter
cs
sub
pop
dec
jmp
inc
(bad)
cmp
out
shl
scas
xlat
dec
sbb
pop
retf
fcmove
mov
sar
mov
mov
mov
dec
and
fsub
pushf
je
cmps
or
mov
jno
in
sbb
and
xchg
xor
push
pusha
pop
mov
gs
icebp
mov
add
gs
inc
leave
xor
aas
mov
nop
mov
dec
jmp
cmp
mov
in
sbb
fidivr
pop
call
std
addr16
pop
xor
dec
xchg
inc
fsubr
sub
add
and
add
push
and
mov
aam
jmp
data16
or
cmp
test
pop
dec
mov
scas
push
call
into
loopne
and
jl
(bad)
nop
jbe
imul
mov
pop
xor
pop
jbe
and
leave
xchg
sbb
pop
mov
shl
mov
push
xor
(bad)
repz
xchg
xchg
pop
call
aaa
dec
xor
fwait
jo
ins
push
jns
sbb
loopne
data16
(bad)
jae
xchg
iret
fild
pop
mov
cmp
jp
cwde
xchg
call
or
sbb
xchg
cdq
fisttp
imul
sub
div
loopne
jo
sbb
(bad)
cld
dec
hlt
xchg
push
jg
xor
push
mov
leave
and
push
test
xor
je
jmp
mov
(bad)
pop
add
sahf
jle
mov
hlt
pop
push
cwde
mov
pop
pop
fadd
jecxz
addr16
leave
xor
cld
dec
rol
mov
sub
jns
cs
adc
not
pop
mov
sbb
ret
inc
fstp
or
push
ror
pusha
sbb
xchg
pop
add
pop
jmp
test
sub
xor
mov
xchg
push
shl
ds
retf
or
mov
cmp
push
jno
stc
push
push
or
pushf
adc
dec
push
cmp
sbb
loope
mov
push
cmp
test
(bad)
je
sub
mov
int
jbe
sub
add
xor
xor
adc
retf
mov
pop
sahf
movs
popa
push
(bad)
push
out
mov
(bad)
fadd
pop
(bad)
and
xor
aam
and
test
(bad)
and
arpl
inc
fwait
out
stos
cmp
lea
repnz
xor
push
and
xchg
call
repz
and
loope
and
imul
sbb
push
push
stc
out
xlat
push
adc
pop
xor
or
test
sub
into
test
in
shl
mov
fadd
outs
jne
int
call
rcr
inc
jg
sti
xchg
rcr
add
jno
mov
pop
mov
fadd
sbb
jge
push
retf
mov
shl
sbb
sahf
call
xchg
es
mov
pop
xchg
cmp
lods
jae
pop
fdivr
adc
cmp
faddp
into
lock
pop
jbe
retf
and
test
sub
mov
push
aas
ror
pop
cmp
aas
sbb
mov
push
sub
cmp
cmp
mov
(bad)
ja
cwde
push
dec
adc
xchg
pop
enter
imul
repz
and
xchg
cli
(bad)
fadd
mov
mov
and
push
jae
je
inc
pop
lock
sbb
mov
mov
xchg
loopne
aas
adc
pusha
retf
aas
add
dec
mov
stos
cmp
pushf
sub
outs
jnp
push
adc
stos
call
maxps
inc
into
sub
push
jl
fistp
(bad)
cmp
fwait
xchg
sub
mov
in
(bad)
fadd
sub
mov
inc
jmp
jb
xor
ds
mov
jne
cmps
and
pop
jl
push
rcl
mov
movs
dec
call
or
dec
imul
in
aas
xor
add
xor
jbe
int
dec
xchg
imul
fwait
cmps
mov
js
lea
in
(bad)
ins
sbb
pop
and
mov
jae
int
stos
mov
mov
test
adc
popa
adc
popf
(bad)
jmp
add
push
popa
sub
or
(bad)
sbb
cmp
aaa
dec
(bad)
dec
pop
mov
shl
xor
mov
or
or
popa
sti
xor
in
lods
xchg
fild
nop
hlt
jae
or
es
jo
jb
cdq
inc
popf
jp
xchg
gs
sbb
inc
aas
pop
add
movs
jb
fs
ins
call
hlt
pusha
mov
lds
fscale
retf
sub
sbb
inc
mov
sahf
sbb
out
or
mov
sbb
inc
jae
push
dec
sbb
psubusb
(bad)
inc
je
sahf
pop
nop
rcl
sub
pop
inc
cmc
aad
sub
sbb
adc
xchg
mov
sub
das
fdivr
sbb
mov
inc
xchg
cdq
inc
xlat
inc
test
cmp
dec
mov
dec
cmps
dec
jmp
iret
sbb
pop
fld
ins
loopne
inc
jp
and
sbb
lods
mov
aaa
out
cmc
test
dec
mov
sahf
sti
add
mov
xor
mov
fnstcw
mov
jns
dec
rcr
scas
test
fisub
sbb
xchg
imul
fucomi
cld
mov
cld
push
jmp
outs
jl
adc
loopne
xchg
mov
lea
aaa
jns
push
popf
fimul
and
retf
scas
dec
mov
pop
push
mov
mov
mov
or
push
outs
enter
sbb
je
scas
pop
add
nop
sti
int
push
xchg
inc
push
jnp
cs
mov
lock
jmp
sbb
inc
jns
jb
paddw
cmp
adc
pop
cmc
inc
pop
mov
xor
sbb
add
add
popa
mov
sbb
sbb
fadd
das
push
dec
cmp
add
and
mov
cmp
push
dec
pop
and
in
mov
dec
sbb
pop
push
(bad)
sub
inc
ds
mov
push
in
or
data16
mov
xor
xchg
inc
dec
jmp
pusha
adc
aaa
sub
dec
fild
call
jo
jbe
and
add
ins
out
xor
retf
add
loopne
inc
fimul
mul
fstp
adc
adc
jbe
js
jp
add
jae
dec
sub
push
jbe
push
aaa
push
cwde
dec
sub
arpl
inc
or
loop
cmp
scas
jae
push
movs
punpckldq
push
xchg
pushf
and
sbb
xchg
xor
loopne
fdiv
ins
dec
pop
sub
mov
pop
inc
mov
nop
xlat
push
ror
es
push
pushf
repz
mov
adc
movs
mov
inc
ds
add
(bad)
cmp
xchg
(bad)
outs
jne
sub
jle
fbld
cli
adc
jge
pop
sar
jns
pop
push
inc
rcr
mov
or
cmp
mov
push
pop
loopne
test
xchg
cld
or
aaa
test
adc
sub
call
pop
push
icebp
sti
popf
inc
xlat
cdq
jnp
or
inc
jbe
leave
imul
adc
je
paddusw
inc
cli
mov
faddp
je
adc
jecxz
mov
push
fbstp
add
(bad)
cmp
(bad)
sbb
pop
mov
mov
mov
mov
inc
mov
sbb
jns
inc
cld
retf
sub
sbb
inc
fnstenv
ret
adc
jmp
push
adc
lods
jge
ss
pop
or
loop
data16
jle
test
pop
loope
add
or
mov
jmp
test
or
leave
mov
and
(bad)
outs
lds
dec
xor
aaa
and
mov
add
out
xchg
loope
add
jmp
loop
add
shl
cmps
xchg
enter
cmp
aaa
in
int3
(bad)
xor
sbb
cmp
test
mov
std
sbb
xchg
xor
stos
idiv
not
dec
loopne
outs
stos
push
add
and
mov
mov
jno
xchg
pop
xchg
stos
jnp
dec
mov
test
sub
jg
les
cdq
pop
arpl
(bad)
xrelease
dec
test
outs
mov
xor
inc
push
jo
inc
shl
jl
sub
outs
int
repnz
xor
data16
iret
mov
push
mov
cmp
cmp
outs
movs
mov
stos
sub
mov
pop
mov
xor
mov
push
jge
das
inc
xlat
sub
push
movs
icebp
idiv
mov
cli
scas
cmp
cmp
sti
jnp
jp
in
scas
mov
push
adc
outs
in
xchg
jge
jno
xchg
inc
nop
sub
in
push
lock
cmp
jmp
pop
rcl
sahf
bound
jg
sbb
mov
cmp
xor
jp
into
xor
push
jle
push
or
fld
in
dec
push
test
in
(bad)
fdivr
mov
sbb
scas
popf
xchg
inc
(bad)
mov
pushf
sbb
xor
or
sub
mov
imul
pop
xor
sbb
cmps
inc
pusha
or
sbb
jnp
(bad)
mov
cmps
jb
push
aas
sbb
add
inc
daa
push
fmul
bound
cmp
add
xor
fisub
daa
test
xor
mov
call
js
and
shl
fnstenv
imul
jge
mov
imul
cmp
and
xchg
mov
push
in
ins
lahf
dec
je
add
add
fst
fist
daa
or
xchg
rcr
shl
jae
sub
cli
jb
lock
fisub
sub
imul
cmp
add
and
pop
nop
adc
arpl
std
ret
shl
jge
daa
int3
out
iret
mov
push
xchg
cs
scas
xor
push
pop
inc
mov
test
fisttp
and
push
xchg
adc
int3
data16
lahf
mov
mov
mul
jo
fwait
sbb
jae
into
jg
xor
(bad)
shr
stos
xchg
shl
mov
in
stos
arpl
retf
in
and
call
pusha
inc
and
pop
fcom
push
stos
jmp
xor
push
cmps
sub
into
xchg
aas
push
xchg
daa
jmp
(bad)
std
fistp
gs
cdq
bound
bound
xor
cld
data16
mov
call
mul
daa
pop
push
xchg
ret
gs
inc
and
bound
(bad)
mov
add
dec
(bad)
pop
cld
pop
cdq
daa
rol
pop
clc
bnd
or
xchg
add
add
cmp
mov
push
mov
mov
jmp
std
cmp
xrelease
cmp
pushf
ret
addr16
sti
sub
cmps
xchg
jl
push
sub
cmp
jae
push
call
adc
cs
mov
stos
rcr
cli
loope
mov
fidivr
mov
cmp
stc
mov
outs
jns
mov
mov
lock
xchg
repz
mov
and
inc
mov
adc
jl
bound
into
cmp
scas
fsubr
cld
or
adc
dec
mov
das
dec
mov
or
cmc
imul
mov
push
out
aam
lods
push
call
loope
cmp
ss
xchg
xor
out
add
or
ja
mov
fistp
test
xor
mov
cs
dec
data16
jae
inc
aaa
stc
or
cmp
xchg
in
xchg
ins
stos
and
push
mov
call
xor
shr
or
ins
enter
out
ins
mov
mov
retf
popa
std
mov
rcl
inc
inc
aam
dec
dec
and
push
fidivr
movs
call
jmp
lock
xor
add
bound
(bad)
out
cmps
mov
fwait
xchg
rcr
sub
(bad)
(bad)
movs
adc
(bad)
gs
aaa
cmp
pop
aad
pusha
mov
and
loope
pop
das
pop
xor
sti
cmp
out
add
rol
loope
into
repnz
mov
cmc
arpl
add
mov
jb
call
xchg
jl
xchg
push
fisub
fsubp
sub
cli
stos
xor
add
xchg
aaa
xor
hlt
rcr
cmps
out
push
adc
xor
inc
and
sbb
cmp
push
cli
test
into
ret
xchg
out
jmp
lahf
adc
mov
inc
jbe
cwde
xlat
or
sbb
pop
int
jge
outs
fimul
lahf
fs
scas
nop
popf
cwde
xor
adc
arpl
xchg
aas
mov
xor
or
push
xlat
add
ins
call
lock
sbb
mov
jnp
out
cmp
shl
pop
shl
fadd
into
pop
xor
mov
cmp
pop
and
loopne
dec
jb
push
sbb
push
sub
or
inc
aaa
adc
daa
mov
push
ret
jno
mov
add
mov
inc
xchg
mov
or
(bad)
mov
gs
jo
jge
adc
daa
dec
cmp
(bad)
retf
int
lods
aam
lock
lds
sub
pushf
lds
lahf
pop
rol
fcomp
pop
and
or
out
inc
mov
mov
retf
rsm
and
enter
adc
js
adc
push
pop
out
xor
ins
fcmovnu
jg
xor
push
adc
cmps
inc
scas
test
sbb
pop
xchg
mov
int3
ins
fisubr
inc
xchg
int3
out
(bad)
jmp
fdiv
rol
icebp
lods
push
mov
(bad)
jl
test
fcomp
push
aaa
movs
leave
sub
inc
sub
push
xchg
mov
rol
adc
or
sbb
or
inc
and
test
xor
mov
in
mov
imul
test
or
hlt
fcmovnb
lahf
repz
loop
leave
mov
pop
cmps
(bad)
jno
jo
repnz
mov
xlat
nop
dec
repnz
ins
sbb
cmp
dec
fcomp
jns
pusha
jge
mov
jae
call
out
cmp
pop
push
jp
call
hlt
or
js
js
fisubr
and
jnp
add
add
nop
loopne
jmp
fwait
cdq
cmp
adc
repz
or
jmp
adc
iret
das
popa
stos
dec
leave
xchg
xor
rcl
dec
push
call
mov
push
pop
cmp
scas
pop
loopne
retf
dec
cmps
hlt
push
jecxz
push
xor
fwait
out
mov
push
leave
movs
mov
xchg
inc
aad
add
(bad)
jmp
sti
jno
(bad)
enter
adc
mov
cmp
inc
cdq
gs
xor
dec
add
sub
iret
adc
cmps
sahf
cmp
lock
and
add
popf
jmp
mov
adc
push
mov
cmp
shl
test
jl
mov
xor
jae
out
test
add
call
popa
out
push
test
jb
push
movs
xchg
loopne
fwait
adc
mov
cmp
imul
js
adc
xchg
cli
leave
les
mov
jbe
les
jecxz
adc
mov
sub
data16
xchg
inc
test
adc
mov
mov
push
call
cmp
cmp
(bad)
in
dec
mov
stc
mov
icebp
push
cmp
adc
fld
inc
inc
lods
xor
movs
dec
cmp
cmp
pop
xchg
xor
div
push
push
mov
data16
adc
jo
push
add
fwait
and
mov
mov
mov
lods
sub
dec
jns
cs
jnp
jnp
inc
mov
push
repz
jb
(bad)
jnp
imul
cwde
in
sbb
fist
dec
lock
ds
cmp
fist
push
jmp
mov
mov
or
dec
icebp
mov
sub
add
adc
pop
mov
push
pop
repz
pushf
mov
mov
ss
arpl
jp
jns
xchg
jo
pop
fcmove
(bad)
xchg
outs
inc
dec
push
inc
push
mov
push
push
pop
dec
and
stos
or
(bad)
jle
aad
lods
mov
cmc
adc
sub
idiv
pop
jg
lods
arpl
gs
and
xchg
mov
mov
rol
cmp
rol
inc
push
cmp
dec
mov
sub
mov
repz
cmps
(bad)
mov
mov
mov
outs
mov
xchg
call
jmp
inc
pop
scas
pop
mov
sbb
out
test
add
jae
jg
xchg
mov
push
retf
inc
sub
in
pop
xor
adc
jle
(bad)
out
mov
out
cmp
dec
loop
lds
push
stc
lods
or
cmp
pop
cmps
bound
out
mov
push
mov
pop
cmp
popf
or
repz
cdq
jb
shl
retf
fist
loopne
out
pushf
jbe
mov
xor
pop
jecxz
xchg
xchg
pop
inc
in
mov
mov
cdq
sub
xor
mov
add
jae
add
cmps
fldenv
lea
and
arpl
cli
daa
add
cwde
and
pop
ins
push
fadd
push
fimul
mov
xor
mov
aas
mov
push
sbb
dec
leave
push
aaa
mov
adc
jp
sub
push
lods
pop
dec
cli
dec
sti
mov
mov
mov
mov
cmp
xchg
or
pop
jmp
mov
xchg
jle
repnz
xchg
xlat
jmp
nop
bswap
cmp
jb
data16
setae
mov
mov
and
mov
shr
cld
popf
inc
dec
popf
arpl
pop
mul
or
mov
lock
dec
jl
fistp
fdivr
lods
(bad)
or
arpl
sub
mov
inc
test
push
popa
dec
aam
imul
data16
test
test
fwait
push
addr16
push
daa
mov
out
push
movs
mov
sahf
dec
repnz
dec
pop
popa
push
movs
adc
push
push
out
sahf
fwait
adc
mov
cmp
stc
sbb
shr
in
out
retf
mov
leave
push
fs
dec
push
adc
punpckldq
sub
ja
js
mov
adc
adc
jae
std
ja
aam
out
gs
lahf
es
mov
rol
xor
pop
pop
cmp
ret
xchg
xchg
or
adc
jns
nop
add
lock
ret
mov
jecxz
imul
add
in
mov
clc
enter
cmp
dec
(bad)
shl
mov
and
cmps
adc
adc
mov
mov
and
dec
or
sub
pop
inc
(bad)
pop
pop
sub
mov
xchg
and
ror
sub
adc
loope
sahf
(bad)
pusha
xchg
clc
xor
inc
xchg
inc
fidiv
hlt
shr
call
fnsave
or
outs
lahf
push
rcr
push
imul
fistp
xchg
pop
lods
and
jo
pop
adc
add
inc
mov
mov
cli
push
xchg
xor
xchg
leave
les
xchg
jge
mov
lods
add
ficomp
fldcw
xchg
mov
sub
retf
jbe
mov
push
dec
je
push
dec
ins
fisubr
sub
jg
dec
pop
retf
cli
pusha
fisubr
repz
in
icebp
dec
cmp
loop
mov
jmp
stc
mov
mov
pop
retf
dec
loope
cs
jae
adc
dec
enter
wrmsr
cli
cdq
mov
xchg
repnz
push
pop
push
call
xchg
in
mov
sbb
daa
xchg
dec
dec
jmp
mov
shr
jns
pop
das
jl
add
or
push
js
or
add
shl
pop
test
out
call
jb
test
ins
sub
push
cmc
pop
mov
push
call
add
imul
pusha
add
in
jmp
push
loopne
and
into
mov
and
adc
es
fwait
add
dec
mov
aad
xchg
retf
cmp
xor
inc
lgs
add
push
pop
pop
push
aam
dec
push
mov
jno
ficom
lods
call
pop
bnd
jmp
test
imul
fild
(bad)
mov
inc
mov
jb
mov
jle
repz
cmps
push
test
lock
or
repz
pushf
imul
mov
test
fnsave
leave
cmp
(bad)
stos
shl
outs
sti
xchg
xor
mov
dec
leave
pop
dec
mov
inc
retf
rcr
test
mov
mov
or
mov
shl
pop
fild
add
push
dec
jmp
mov
or
fwait
xchg
cdq
mov
or
imul
fist
xor
adc
and
hlt
jb
xor
or
push
aad
xchg
es
test
cmc
in
shr
xchg
cmps
cli
icebp
scas
sar
mov
call
ins
ret
cmp
inc
scas
mov
ins
pop
(bad)
mov
das
pop
push
fisubr
xchg
sub
xchg
fnstsw
push
outs
inc
xor
and
fild
jns
adc
stc
stc
in
sbb
jle
or
arpl
inc
lea
and
or
xchg
lahf
pusha
fs
out
aad
jmp
fs
std
cmp
lock
sbb
mov
lods
nop
mov
add
mov
jge
in
xor
add
fiadd
fs
jb
jo
ficom
add
xlat
pop
rcr
sub
mov
fisttp
loope
mov
jmp
jge
out
hlt
mov
ins
(bad)
jno
int3
mov
test
and
cmps
xchg
jp
je
je
sbb
or
movs
dec
fbstp
push
fs
push
in
mov
push
dec
or
dec
cmp
push
pop
sbb
mov
and
xchg
mov
push
mov
int
or
enter
(bad)
pop
add
or
jg
js
fiadd
(bad)
jecxz
in
mov
jbe
ja
jne
call
jg
repnz
pop
fcom
adc
daa
xchg
stos
mov
lock
xor
push
add
push
out
inc
imul
mov
jg
jle
mov
daa
rcr
xchg
inc
ds
aam
xor
xchg
ins
push
retf
or
dec
out
lods
jecxz
jge
xchg
pop
daa
cld
dec
gs
into
outs
cmp
cmp
outs
rol
mov
mov
pop
sahf
add
sbb
xchg
mov
nop
imul
push
sbb
inc
and
std
stc
std
je
in
mov
jl
inc
test
xchg
test
xchg
jbe
adc
in
cld
sbb
stc
(bad)
neg
pushf
dec
mov
call
push
cmc
dec
sbb
int3
or
dec
push
add
lahf
xor
fist
jae
push
sbb
xchg
das
inc
(bad)
gs
stc
inc
popf
xor
scas
test
or
add
inc
hlt
mov
adc
xor
sar
enter
pushf
and
pushf
xchg
push
(bad)
adc
stc
add
icebp
jbe
daa
sbb
imul
jb
cs
xor
adc
mov
cmps
mov
mov
mov
dec
dec
jne
sbb
lds
push
fidivr
aam
out
mov
int
in
mov
mov
or
mov
retf
lods
xchg
jmp
and
shl
(bad)
cmc
and
jg
xchg
imul
int3
ds
(bad)
and
xchg
(bad)
nop
adc
and
and
mov
sub
xchg
pop
sbb
gs
pop
sub
js
sbb
sub
adc
inc
ss
jle
ror
xchg
mov
and
retf
sahf
in
jae
jo
xor
and
adc
and
lods
push
mov
and
lea
dec
dec
das
fmul
rcl
mov
cmp
data16
dec
push
ins
cmp
shl
cmp
in
gs
add
data16
and
fs
scas
stos
push
mov
(bad)
sti
mov
push
mov
jb
add
dec
mov
add
sub
sbb
jecxz
push
fs
xchg
lds
inc
mov
call
shl
aas
retf
jae
pop
dec
adc
sbb
std
xor
inc
in
popa
daa
mov
inc
jae
cmc
in
sub
xchg
ror
test
xchg
cld
lea
aas
pusha
inc
in
call
xor
out
xchg
mov
lahf
push
lods
mov
fcmovbe
dec
mov
ret
mul
test
sbb
ins
push
cmp
mov
in
lea
ret
call
dec
adc
sbb
sti
add
sahf
data16
shl
mov
pop
pop
pop
adc
mov
or
or
pop
adc
push
pop
add
dec
and
je
xor
sub
cmc
fs
cld
and
js
bound
jge
daa
lock
sahf
jge
jne
cli
cwde
inc
xchg
call
fwait
add
sbb
jmp
shr
mov
push
xor
ror
out
dec
dec
aad
and
jnp
sbb
cmc
fstp
pop
fimul
push
inc
cmp
loopne
push
enter
movs
pop
cmps
sub
jecxz
pop
in
cmps
sbb
(bad)
jg
dec
pop
sti
mov
shl
js
and
push
mov
call
test
mov
mov
inc
adc
mov
aam
cmp
sbb
push
mov
retf
int
sbb
adc
pop
sub
inc
sti
cld
xchg
adc
dec
inc
lds
bound
cmps
std
xchg
pop
fistp
inc
mov
fwait
loope
cmps
jb
ds
lahf
lock
xor
enter
dec
adc
mov
cmps
dec
pop
pushf
mov
mov
outs
shl
scas
pusha
fsubr
xchg
jnp
lods
enter
add
add
cmp
lea
mov
ret
pop
repnz
mov
pop
lock
dec
les
dec
inc
add
jmp
mov
add
mov
cmp
adc
sub
push
pusha
mov
es
mov
sub
inc
mov
leave
xor
test
and
lods
dec
xchg
mov
jae
outs
out
sbb
mov
xchg
les
stc
int3
sub
or
lock
and
outs
add
(bad)
aas
(bad)
add
sbb
in
jge
in
pop
add
rcl
pop
scas
mov
or
gs
or
stc
inc
ficom
or
in
int3
or
in
xchg
sahf
and
mov
cmps
sub
xor
cmp
push
jge
and
push
aad
stc
scas
iret
pop
aaa
fld
and
nop
jno
stos
jmp
or
(bad)
xor
std
xchg
dec
out
xor
call
mov
xchg
mov
push
jg
out
lock
xchg
add
xor
pushf
call
shl
push
lods
or
sub
add
fidivr
jmp
fstp
jne
daa
xor
adc
gs
jno
pop
stos
stos
inc
inc
push
xor
jg
mov
jp
in
xor
add
cwde
addr16
pop
lea
out
loop
test
dec
pop
cdq
or
aad
adc
mov
xor
dec
pop
sub
iret
sub
cmps
dec
sbb
imul
shl
sub
mov
add
ins
mov
out
sbb
sub
popa
inc
xor
inc
pushf
or
adc
outs
imul
into
cwde
inc
sbb
cmp
adc
icebp
test
mov
loopne
test
bound
pop
jnp
push
and
jo
mov
rcl
pop
cmp
(bad)
in
or
sub
(bad)
fldenv
add
es
inc
loope
or
push
movs
jmp
test
leave
ins
pop
dec
xor
push
jmp
adc
cdq
adc
and
xchg
inc
cli
pop
pop
mov
fistp
ret
sbb
xchg
sbb
xor
cmp
jge
fidiv
sbb
sub
pop
pushf
pop
sub
fimul
stos
sbb
inc
sbb
adc
mov
cmps
adc
das
test
push
xor
frstor
aaa
mov
cwde
xor
mov
out
sub
and
stos
popf
ret
std
xlat
jo
cmc
xchg
pop
xor
fist
rcl
jmp
aas
inc
mov
inc
stos
loop
loop
mov
mov
mov
add
jge
pop
push
aas
stc
pop
lahf
icebp
out
jle
push
xor
jb
cs
repnz
inc
xchg
out
pop
inc
mov
jne
inc
adc
pop
icebp
and
stos
cmp
mov
dec
stc
mov
add
mov
imul
inc
sub
dec
xor
cld
test
or
cmps
pop
fisttp
cmp
nop
push
movs
sub
bnd
shl
push
test
and
ret
cwde
lods
rol
je
data16
mov
jle
fs
imul
adc
jmp
sbb
and
test
ja
cwde
scas
or
jmp
cmp
into
push
aas
jmp
packsswb
sbb
adc
xchg
mov
and
not
xchg
push
(bad)
outs
dec
add
pop
ds
fwait
call
jecxz
dec
cmp
or
add
push
jae
xchg
xor
adc
inc
add
sbb
xlat
rol
movs
sbb
mov
dec
mov
mov
inc
js
or
mov
push
sub
loopne
mov
xor
inc
pop
jecxz
mov
lds
cmp
inc
pop
popa
test
push
or
jmp
mov
xchg
mov
test
or
push
mov
dec
lods
lea
in
jne
pop
jl
dec
mov
test
jae
stos
ss
shl
scas
ret
push
mov
jl
push
test
push
shl
dec
ret
inc
outs
das
cmp
mov
cli
push
bound
test
sahf
leave
push
cmps
ins
dec
inc
adc
inc
(bad)
pushf
dec
lods
adc
xchg
jb
ds
dec
or
rol
sub
xlat
cwde
push
retf
xchg
xchg
stos
les
inc
sub
(bad)
xchg
xchg
sahf
add
js
push
sbb
and
cmc
xchg
push
popa
fstp
mov
mov
inc
push
mov
push
mov
bound
xor
int
inc
mov
test
(bad)
ins
xchg
xchg
jmp
daa
push
push
xor
(bad)
rol
mov
push
cld
push
(bad)
xor
adc
jp
(bad)
xchg
jno
cmp
shr
shl
icebp
add
hlt
sbb
sbb
cwde
in
ja
or
xor
je
adc
in
leave
or
jo
(bad)
sbb
jp
and
xor
xchg
mov
jecxz
jmp
mov
inc
lahf
shl
dec
jp
loop
mov
xor
ss
push
sbb
neg
xchg
pop
dec
cmp
popa
push
in
loopne
cmp
(bad)
mov
jp
stos
cli
mov
xchg
mov
out
stos
add
sub
or
jmp
xchg
sbb
jle
mov
adc
pop
test
mov
scas
call
test
shl
xchg
fst
retf
out
stc
out
(bad)
jl
adc
lock
push
mov
shl
xchg
push
add
jecxz
pop
ja
std
push
ins
sar
push
inc
sbb
hlt
mov
jg
lock
pusha
fnstenv
xor
inc
and
xchg
mov
jbe
mov
imul
shl
dec
or
lds
push
es
cmp
pop
sahf
pop
into
xchg
mov
cmp
inc
pop
repz
rcl
aas
aam
pop
call
in
icebp
fmul
push
xchg
jecxz
fidiv
inc
fs
mov
adc
mov
pushf
push
cmp
fcmovb
or
inc
sub
mov
inc
mov
out
xchg
pushf
jno
pop
cmp
or
aas
es
rcl
inc
sub
arpl
repnz
mov
push
jb
popa
pop
in
xchg
fld
inc
pop
retf
inc
push
int
aaa
and
mov
idiv
cmp
cdq
xchg
loop
jbe
in
out
mov
pop
xlat
or
xchg
xor
in
cdq
movs
test
jae
inc
pop
xchg
cmp
mov
out
in
cli
mov
mov
ins
jns
adc
mov
jmp
sar
mov
push
sbb
xor
std
adc
inc
je
pusha
push
mov
pusha
mov
out
jge
rol
mov
cld
pop
not
inc
test
clc
xchg
sub
push
add
repz
push
jb
push
cmp
jne
movs
std
loope
xchg
lods
sub
jle
lock
test
or
xchg
add
xor
mov
call
mov
(bad)
dec
ds
jmp
movs
sbb
loop
ins
xchg
ins
add
(bad)
mov
aad
test
pushf
stos
int3
aam
mov
mov
test
push
cmp
add
dec
fcomp
test
mov
ins
pusha
xchg
mov
adc
lods
out
add
push
mov
in
xor
gs
dec
and
fwait
in
out
pop
jae
xchg
repz
mov
ror
xchg
in
xchg
mov
lods
sbb
and
scas
dec
outs
mov
repz
cmp
retf
or
mov
mov
inc
or
retf
mov
push
(bad)
or
in
(bad)
sar
fistp
repnz
pop
frstor
mov
test
les
dec
mov
push
cs
mov
dec
xor
sub
in
dec
ins
shl
retf
dec
or
fs
stc
mov
push
gs
cwde
popf
aaa
(bad)
stos
sbb
xor
test
sbb
mov
dec
mov
fcom
(bad)
pushf
in
fs
call
mov
add
jne
hlt
js
or
or
sbb
imul
in
push
movs
mov
lods
repnz
dec
aad
loope
pop
xor
mov
mov
and
sbb
dec
mov
jo
push
out
mov
sub
and
adc
dec
test
push
jmp
sub
leave
es
jmp
das
xor
sbb
movs
add
in
mov
(bad)
clc
ret
xchg
sahf
mov
aaa
push
rcl
lods
(bad)
test
in
ins
pop
retf
dec
inc
leave
xchg
jb
push
xchg
aas
xchg
dec
jmp
lods
pop
int
rcl
mov
lock
mov
(bad)
and
mov
rcl
lds
inc
gs
pusha
(bad)
jmp
movhps
push
adc
jmp
xor
out
jl
jmp
sub
pop
pop
jle
dec
fs
ins
adc
sti
call
dec
add
pop
clc
movs
int
div
(bad)
(bad)
int3
fmulp
fnstenv
sub
or
pop
addr16
outs
add
jae
add
dec
or
push
fsub
cmp
daa
out
(bad)
ror
sbb
dec
push
jbe
xchg
and
shl
dec
sbb
rcr
gs
ret
outs
cmp
repnz
sahf
mov
jns
or
or
(bad)
stc
cmp
pusha
sub
std
dec
sub
push
xor
ret
push
retf
jo
xor
ins
std
mov
ror
mov
jge
(bad)
fscale
ds
and
into
(bad)
jae
mov
add
daa
cmp
jae
rol
jl
mov
ins
rcr
imul
adc
push
(bad)
aaa
mov
push
cmp
int
movs
or
inc
test
out
pop
mov
inc
outs
shl
pop
add
mov
sub
sub
jg
stos
aam
int3
inc
jno
ja
push
pop
jp
dec
mov
jp
addr16
xchg
sub
mov
adc
jmp
xlat
jg
js
icebp
ret
push
gs
test
sahf
sub
push
and
aam
push
cdq
dec
mov
repz
xchg
(bad)
pop
aas
imul
out
aaa
es
jge
nop
ficom
mov
xchg
pop
jle
mov
xor
cwde
hlt
mov
idiv
xor
ror
cmp
push
mov
(bad)
push
loope
sub
cmps
nop
xor
cmp
call
call
xchg
lods
gs
push
ds
inc
not
ror
jmp
xor
sbb
add
test
jno
sub
add
ins
pusha
pop
into
(bad)
rcl
pushf
or
loope
int3
data16
ret
mov
inc
addr16
push
cmp
or
out
rcl
jb
mov
sbb
xchg
push
cli
adc
pop
dec
jmp
sbb
or
call
sub
out
rol
ins
mov
sbb
inc
shr
adc
rol
jle
xchg
jo
push
mov
push
icebp
mov
inc
mov
push
fs
dec
mov
mov
cmp
mov
inc
cmp
pop
out
enter
les
outs
cmp
nop
stos
and
lock
push
loope
mov
ror
mov
mov
dec
sub
dec
fcom
pop
es
js
pop
div
and
mov
lea
mov
adc
or
xor
cwde
dec
aam
les
sub
pop
call
dec
aas
sahf
add
mov
test
sbb
test
adc
push
in
push
mov
(bad)
cld
sub
out
lea
inc
cwde
sub
adc
cld
popa
mov
push
pavgb
ins
(bad)
pushf
movs
lea
push
jne
loop
or
out
pop
shl
sub
jb
xchg
test
ins
dec
sub
inc
sbb
fcmovne
jmp
ja
inc
out
dec
cld
xchg
inc
nop
rcr
ss
mov
mov
call
xlat
pop
or
sar
sbb
jp
(bad)
cwde
xor
stos
and
adc
lds
mov
mov
and
inc
mov
ror
nop
dec
sbb
addr16
in
scas
mov
mov
into
pop
enter
movs
cld
rcr
fs
mov
jg
adc
jmp
iret
inc
mov
cmps
inc
arpl
pop
jnp
and
push
xor
cmp
mov
out
rcr
sbb
nop
popf
mov
sub
or
xor
adc
sbb
movs
fbstp
pop
mov
inc
fldcw
sub
cld
cmc
pop
enter
loope
or
dec
adc
cdq
je
dec
dec
jae
cli
test
push
jle
fstp
syscall
and
mov
(bad)
push
inc
mov
mov
int3
enter
xor
stos
xor
gs
lods
mov
sar
mov
mov
fstp
loopne
aaa
mov
mov
loopne
out
pop
jo
mov
js
cwde
fmul
mov
lahf
outs
ins
push
and
clc
outs
mov
sub
es
lods
add
push
and
sub
loope
shl
jecxz
arpl
and
div
mov
leave
mov
mov
int3
mov
cwde
les
inc
dec
mov
push
sar
neg
push
fisub
bound
sub
sbb
hlt
pusha
fwait
ins
push
popf
add
and
(bad)
cmc
lock
fdiv
jnp
xor
sbb
pop
mov
mov
jp
sbb
mov
(bad)
movs
sub
jnp
dec
sahf
(bad)
sub
mov
std
add
sahf
cmp
les
ins
fs
xchg
repnz
lahf
push
lds
mov
out
xchg
repz
dec
xchg
mov
adc
shr
mov
scas
add
mov
ror
xchg
add
mov
(bad)
cmp
arpl
out
pop
mov
xchg
sbb
push
xor
in
(bad)
pop
test
add
das
(bad)
jmp
shl
lea
mov
push
xchg
call
xor
(bad)
loopne
fisubr
add
int
push
aam
das
xor
pop
adc
shr
in
call
or
enter
(bad)
retf
inc
xchg
(bad)
fistp
stos
aas
addr16
sahf
(bad)
add
call
dec
arpl
loopne
jns
lods
and
push
add
cmc
nop
sbb
xor
jecxz
sub
add
arpl
sub
movs
push
out
lea
add
pop
lahf
out
dec
clc
jo
lea
cdq
pop
imul
mov
fild
cs
sbb
adc
ror
shr
scas
xchg
push
stos
adc
push
scas
or
jne
xor
inc
xor
pop
adc
es
loope
cwde
jge
inc
or
or
pop
addr16
inc
and
es
cmc
int3
cmp
(bad)
imul
in
or
popa
mov
pop
call
or
(bad)
add
repnz
xor
imul
loope
dec
push
(bad)
jmp
movs
sbb
pusha
jg
out
cwde
stos
pop
int
ret
pop
sub
mov
idiv
sbb
add
mov
dec
dec
sti
xor
jns
jmp
jmp
mov
sbb
ss
mov
xor
jg
clc
jbe
cmc
cdq
in
gs
repnz
addr16
and
adc
fisttp
into
call
aam
xor
add
push
push
mov
adc
hlt
scas
push
leave
in
and
or
mov
or
push
inc
repz
rcr
jb
sub
jb
fisub
cmp
dec
add
jne
(bad)
pop
stos
in
xor
add
jne
in
dec
sub
cmp
out
movs
mov
adc
stos
(bad)
pop
das
and
in
inc
in
test
in
pop
jns
adc
bound
mov
jmp
inc
aas
ins
arpl
fisub
pop
ret
dec
pop
mov
call
sbb
fdiv
sahf
popa
stc
ficomp
lods
test
enter
stos
or
cwde
mov
dec
and
loop
mov
test
cdq
pop
jns
pop
shl
int
stos
test
add
pop
xor
dec
add
into
test
aaa
shl
and
out
dec
jmp
sub
xchg
jl
pushf
cmp
cmp
test
push
lods
mov
adc
sbb
adc
sub
lods
xlat
stos
repz
fs
add
mov
sahf
mov
ret
fcomp
ror
movs
push
xchg
jl
or
call
aad
add
mov
ror
jne
sbb
cmps
add
fs
dec
(bad)
xor
sahf
mov
loope
bound
push
push
fs
shl
cmp
dec
jp
movs
push
jns
pop
add
cmp
jo
cmp
div
ins
mov
jnp
pop
jb
popa
jo
mov
int
je
mov
out
test
rol
xchg
outs
mov
out
rol
mov
jno
dec
pusha
xor
(bad)
mov
xchg
add
ins
fldcw
mov
mov
cmp
fidivr
dec
mov
mov
push
and
add
inc
add
sub
mov
jmp
push
in
mov
mov
jle
mov
out
jb
cwde
xor
or
movs
push
popf
lods
sahf
rcr
loop
shr
popa
mov
xor
mov
aaa
mov
mov
pop
xchg
ja
cmp
dec
in
cli
jmp
pop
push
pop
clc
lods
les
or
bnd
ja
test
scas
jnp
(bad)
int3
loop
rcl
out
dec
mov
xchg
add
and
pushf
push
pop
js
push
mov
sub
xor
pushf
add
and
out
xor
mov
aad
adc
push
fnstsw
cli
in
cmp
dec
out
into
and
les
cmp
push
lea
int3
cmp
and
jmp
imul
fld
mov
jmp
or
inc
xor
inc
mov
cmp
cmp
in
push
pop
ins
fdivp
cmp
lea
arpl
cwde
jbe
(bad)
fild
cwde
std
sub
pusha
sbb
mov
sar
and
test
push
jl
ret
mov
push
add
cmps
push
or
adc
mov
and
add
inc
xlat
xor
xor
stos
push
mov
xchg
cdq
push
cmp
push
aas
and
inc
xor
ret
stc
jge
push
push
(bad)
and
mov
jg
or
hlt
xor
or
cmp
call
push
arpl
xor
fadd
(bad)
mov
jns
ss
adc
lds
pop
bnd
push
lods
sbb
xchg
adc
sar
call
popa
enter
std
sbb
and
call
mov
in
adc
push
mov
push
mov
mov
mov
stos
push
mov
test
adc
push
inc
sbb
test
(bad)
out
mov
mov
mov
neg
mov
lds
pop
stos
lahf
ins
popa
cmps
mov
dec
ret
sbb
mov
push
je
sar
aam
into
dec
(bad)
cli
pusha
jb
(bad)
(bad)
cdq
fmul
and
dec
ja
test
mov
aaa
popf
sub
push
in
lahf
repnz
shl
inc
dec
and
mov
ins
push
movs
sbb
jo
jns
pusha
in
or
aad
xchg
mov
test
mov
xchg
push
or
mov
(bad)
aas
pop
(bad)
jo
(bad)
clc
enter
push
movs
mov
dec
retf
repz
outs
aas
dec
and
fistp
xchg
popa
add
call
out
aas
jne
xchg
mov
and
xor
ss
jg
xor
retf
mov
or
retf
loopne
or
mov
stc
leave
imul
(bad)
mov
jne
push
push
xchg
and
imul
pop
mov
stos
leave
cdq
aam
cmc
and
daa
sub
jae
mov
clc
jno
lock
lahf
(bad)
cmp
pop
jle
cwde
ss
test
push
sub
loopne
sar
outs
push
fs
test
dec
xor
pop
fcomp
neg
cmp
dec
outs
and
dec
inc
push
sti
jne
adc
sub
scas
movs
push
mov
fsubr
push
test
stos
movs
dec
cmp
inc
push
jae
rcl
call
mov
out
into
push
data16
int
push
inc
and
pushf
movs
adc
sti
and
jp
mov
ss
stos
imul
out
xchg
pop
mov
sbb
retf
xchg
fwait
int3
mov
iret
pop
sub
cmp
dec
xor
fild
cmp
mov
add
out
pop
(bad)
movs
sbb
stos
xlat
adc
out
add
js
lahf
xchg
sub
pop
mov
iret
int
dec
mov
rol
das
ret
cmps
int
xchg
popf
fs
imul
pusha
pop
or
scas
mov
loope
and
cmp
imul
jmp
jmp
jmp
or
ret
sbb
dec
cld
scas
cmp
rcr
movs
jmp
fisub
mov
cmp
shr
pop
ss
pop
nop
pop
lock
in
(bad)
dec
mov
jg
jne
sbb
repz
lods
into
arpl
jne
outs
out
cmp
sti
sbb
fild
cmp
aaa
pushf
xchg
xchg
xor
inc
jge
test
inc
and
mov
in
mov
lock
pop
out
and
add
arpl
cmp
fwait
adc
dec
(bad)
adc
add
xor
jb
dec
shl
aas
xor
add
xor
dec
test
addr16
fucomip
repnz
cmp
add
out
dec
scas
adc
inc
(bad)
es
arpl
nop
pop
scas
ret
ficomp
mov
push
adc
inc
fldl2t
mov
dec
xor
rcl
sub
pop
mov
jmp
adc
xchg
xchg
sbb
ror
cmp
push
jp
loop
sub
jle
inc
mov
(bad)
out
push
int3
mov
movs
push
inc
xchg
mov
(bad)
in
push
clc
xchg
outs
loop
mov
fild
sbb
ret
xor
mov
jbe
rol
push
outs
repz
pusha
cmp
popa
inc
test
mov
aaa
jno
fnstsw
loope
pushf
or
jns
lock
scas
repnz
clc
retf
sub
dec
cmp
xabort
call
push
cmp
add
popa
xor
push
xchg
push
imul
outs
(bad)
sbb
in
movs
inc
ret
movs
pop
push
or
ins
jne
sub
push
retf
sub
and
push
mov
cmp
or
push
js
movs
inc
mov
and
inc
gs
stc
mov
xor
jmp
popa
cmp
nop
jmp
js
pop
xor
adc
and
jmp
sub
jo
(bad)
scas
or
lea
jmp
xchg
(bad)
dec
stos
lahf
mov
xchg
repnz
push
push
lods
sar
inc
or
adc
xchg
pop
inc
or
aad
adc
(bad)
xor
jmp
cmps
jo
sub
daa
pop
push
pushf
xchg
lahf
and
fistp
rcr
mov
inc
daa
dec
xchg
add
jnp
sbb
movs
pop
scas
push
test
outs
or
sub
mul
imul
add
stc
xchg
push
xchg
imul
mov
or
pop
loop
stos
cmp
dec
sbb
cmp
clc
ins
sub
sub
lahf
(bad)
cmc
xchg
retf
jp
stos
add
clc
mov
or
sub
sub
jbe
mov
cmps
in
push
inc
std
cmp
rol
cmps
mov
aas
cmc
(bad)
imul
rcr
push
shl
or
jns
push
stos
mov
add
inc
push
in
adc
dec
push
sub
shr
(bad)
pop
sbb
inc
push
mov
fwait
out
inc
jmp
popa
shr
add
pop
(bad)
xchg
mov
enter
mov
(bad)
jnp
push
loop
ficomp
jno
pop
jbe
pop
sar
pushf
je
pop
mov
out
lahf
dec
mov
sub
into
xchg
mov
(bad)
mov
sub
xor
bound
inc
adc
sbb
popa
jmp
fdivr
test
shl
or
in
mov
mov
(bad)
jge
repnz
xor
dec
add
mov
test
push
mov
in
pop
jmp
add
push
mov
push
or
dec
idiv
jl
sbb
jbe
add
mov
cmps
cmp
nop
jae
jo
sbb
aaa
adc
mov
cmps
dec
adc
lds
(bad)
fisub
xchg
jp
sbb
cmp
add
and
mov
ret
dec
ins
mov
xlat
cmp
test
mov
movs
xor
mov
and
ret
xor
add
push
ins
inc
pmaxub
inc
loope
sub
jb
pop
in
mov
push
inc
pusha
jp
xchg
xor
mov
and
xor
dec
iret
dec
or
int3
pop
mov
loop
push
inc
mov
mov
mov
stc
lds
sub
shl
xor
xor
ins
pop
push
jmp
mov
jo
push
mov
xor
cmp
mov
pop
mov
aaa
(bad)
js
or
enter
push
aaa
jp
jne
cmp
mov
sbb
pop
xchg
aaa
jp
push
xchg
jmp
les
ret
cmp
loope
arpl
or
xchg
add
(bad)
jno
test
aam
stos
pop
ins
mov
push
dec
or
pushf
mov
mov
cmps
ds
gs
imul
jno
xlat
add
mov
ds
and
sbb
or
dec
and
or
(bad)
repz
and
enter
arpl
mov
test
mov
rcl
xchg
imul
jo
fistp
int3
adc
fdiv
inc
jecxz
mov
fdiv
std
sbb
js
js
mov
pop
fs
mov
mov
xchg
call
(bad)
out
sbb
inc
ins
xor
dec
adc
mov
(bad)
icebp
pop
js
sbb
div
out
out
lods
jecxz
imul
sbb
ins
fisubr
mov
jg
mov
test
inc
pop
add
pop
int
or
lock
mov
shr
push
jo
adc
imul
pop
retf
add
int3
cli
or
fcomi
bound
(bad)
jecxz
inc
(bad)
outs
mov
cmp
mov
in
push
(bad)
pop
pop
loopne
int
cmps
adc
cmps
test
in
sub
jecxz
sbb
into
mov
in
jp
dec
out
nop
retf
out
xor
stc
xchg
loopne
imul
jecxz
daa
sbb
out
test
or
outs
push
push
push
into
mov
loop
retf
into
cmp
mov
inc
add
xor
lea
(bad)
pop
xor
outs
dec
add
(bad)
cs
cmp
loope
(bad)
(bad)
scas
ret
adc
retf
(bad)
ds
movs
out
repz
dec
rol
call
mov
pop
mov
xlat
mov
or
dec
outs
push
int3
test
loope
and
push
dec
dec
jbe
retf
mov
int3
es
es
daa
mov
sub
mov
pop
push
ret
aas
sub
shr
test
nop
sbb
das
pushf
mov
es
pushf
or
pop
jle
cmp
mov
in
xor
cmp
inc
in
cmps
push
stc
push
scas
adc
mov
cdq
sbb
add
xchg
cld
iret
jo
mov
inc
or
stos
hlt
pop
push
repz
lods
lahf
jne
add
push
lea
push
repnz
ja
push
mov
xchg
mov
mov
adc
mov
mov
rcr
sahf
cli
inc
fbstp
std
inc
add
mov
stos
cmc
test
push
sar
pop
pop
shr
xor
xchg
jne
bound
shl
in
cmp
jb
shr
cmps
or
sahf
sti
inc
in
inc
(bad)
inc
sub
test
ret
(bad)
mov
or
inc
mov
push
sub
adc
(bad)
leave
retf
test
lock
fwait
cmp
cmp
and
ret
and
mov
inc
ret
mov
aaa
xchg
addr16
inc
jno
test
push
xchg
inc
(bad)
into
mul
mov
mov
push
mov
loopne
xchg
outs
push
jns
sahf
jle
push
mov
pop
and
arpl
scas
mul
jne
lea
into
jp
mov
sahf
mov
pop
mov
jge
xchg
mov
xchg
arpl
jmp
icebp
test
jge
ins
ror
cmp
and
int
add
dec
fs
mov
and
pusha
scas
pop
add
dec
xlat
mov
jns
es
xchg
jno
outs
out
pop
out
add
(bad)
out
adc
mov
(bad)
shl
je
rol
jnp
hlt
and
fs
sahf
pop
clc
iret
call
leave
sub
push
cmp
mov
inc
mov
retf
clc
repnz
ja
mov
jo
jle
fdivr
jbe
loop
jno
rcl
xor
call
hlt
push
cdq
cmp
jb
push
mov
add
lock
je
xor
popa
mov
jne
sub
mov
gs
or
push
push
out
movs
ins
scas
push
cmp
imul
in
sahf
icebp
ds
repnz
and
scas
push
repnz
ret
add
push
mov
scas
mov
pop
mov
pop
mov
and
rcl
xchg
mov
fcmovnbe
cmps
fadd
jo
xchg
push
mov
dec
movs
nop
mov
retf
mov
adc
adc
push
xor
dec
mov
push
adc
lods
ret
icebp
xchg
inc
lock
je
mov
adc
retf
cmp
clc
and
or
adc
fistp
ret
sub
and
xchg
ror
mov
out
mov
mov
and
aad
xlat
push
cwde
cwde
mov
add
cmp
push
ins
fisub
push
jmp
repz
jp
cdq
and
ins
mov
mov
push
gs
dec
inc
test
popf
cmp
imul
popf
mov
xor
mov
cmp
scas
jae
icebp
mov
lods
imul
bound
sub
jno
cmc
mov
xor
xchg
xchg
sub
movs
cli
lahf
enter
inc
je
test
pop
inc
and
inc
sub
sub
std
lods
add
js
loope
mov
jae
dec
xor
popa
or
cli
jge
jae
mov
test
jp
mov
mov
push
jb
outs
div
imul
add
(bad)
fild
shr
shr
int3
xchg
sub
aam
imul
aad
bound
mov
retf
jmp
dec
xchg
sub
jo
ins
or
stos
mov
lods
sub
stos
dec
cmps
pop
push
mov
mov
out
repnz
jmp
cwde
adc
or
fidivr
cmp
xor
add
loopne
mov
stos
xchg
imul
jmp
arpl
mov
pop
and
lahf
std
mov
sub
inc
ss
cmp
xor
out
or
je
and
retf
call
stos
and
dec
daa
ja
loop
sti
hlt
mov
mov
push
popa
mov
mov
leave
inc
sub
cmp
inc
adc
mov
popa
fld
xor
mov
lods
sub
inc
jge
rcr
add
adc
int
lea
icebp
pop
jb
jbe
jae
jl
pop
retf
jnp
movs
jo
movs
sbb
arpl
pop
inc
cmp
test
inc
and
pusha
test
or
ins
push
ins
cdq
mov
(bad)
add
aas
pop
retf
lds
cmp
popf
inc
pop
jae
mov
jecxz
iret
pop
inc
dec
scas
sub
mov
cld
pop
mov
sar
repnz
sub
xor
sub
cmc
adc
(bad)
or
in
xchg
sbb
stos
jne
pop
mov
clc
arpl
inc
and
int
mov
and
cwde
mov
aas
in
shr
xchg
data16
cwde
cmps
loop
fcomp
inc
cmp
lea
sbb
out
loopne
aaa
jmp
outs
dec
xchg
out
or
test
ja
xor
js
sti
pop
jle
mov
popf
inc
loopne
and
data16
pop
cli
xchg
js
pop
and
adc
sub
push
(bad)
sub
sub
sbb
cmps
sub
inc
cmp
lea
adc
cmp
fsubr
mov
xor
jle
in
dec
mov
and
sar
icebp
leave
mov
sahf
div
stos
icebp
jge
xchg
(bad)
xor
adc
lds
cmp
pop
inc
pusha
loopne
jne
sub
ret
movs
aad
sub
jmp
mov
imul
mov
out
inc
pop
lock
test
add
test
adc
frstor
sahf
mov
jecxz
ins
aam
mov
push
adc
sub
pop
sub
or
ja
ins
ret
mov
sub
int3
mov
les
arpl
add
push
fnstsw
lea
loopne
sbb
dec
add
movs
in
cs
mov
fst
add
loope
and
cmp
dec
or
les
sbb
mov
pop
sahf
movs
bound
jo
fsub
fcom
lahf
imul
ret
outs
icebp
push
add
jo
movs
das
inc
jmp
stos
xor
xor
outs
js
fwait
or
(bad)
mov
jge
jl
scas
leave
and
inc
jle
out
nop
mov
outs
in
add
dec
inc
xchg
add
sbb
sbb
mov
mov
lahf
xchg
push
(bad)
jae
test
dec
stos
sbb
fcom
retf
jecxz
xchg
shl
mov
push
leave
retf
div
jl
mov
jbe
lahf
stos
mov
cmp
xchg
addr16
xlat
test
xchg
out
push
rcl
data16
push
imul
fs
xchg
or
pop
mov
cmps
addr16
push
imul
dec
adc
or
inc
xchg
jae
arpl
ret
icebp
ja
(bad)
and
sub
mov
movs
and
sbb
or
cmp
retf
xchg
and
lahf
sub
jg
adc
fst
xchg
or
clc
cdq
pop
mov
outs
cmp
bound
sbb
stos
mov
int3
les
ins
cs
pushf
push
cmps
or
repnz
lea
jp
test
jge
jbe
movs
push
push
scas
retf
mov
jp
mov
fstp
mov
mov
xchg
(bad)
or
adc
lds
and
and
and
sub
xor
pop
xor
lea
xchg
mov
je
pushf
xchg
rcr
gs
push
push
or
jns
inc
mov
add
xchg
jl
out
adc
inc
dec
call
push
repz
pop
jo
and
mov
add
iret
push
std
inc
fistp
jnp
js
or
pusha
adc
mov
stc
daa
mov
add
dec
and
test
or
and
xchg
push
mov
jg
xchg
neg
fldcw
mov
xchg
add
test
inc
xchg
sub
pop
mov
xchg
popf
fsub
xchg
in
(bad)
push
dec
inc
fcmovbe
out
mov
lea
xor
jae
ret
sub
test
test
ins
gs
ror
jg
stos
adc
loop
cwde
add
push
fwait
xchg
pop
dec
pop
daa
arpl
test
xor
out
cs
mov
xor
jmp
and
sahf
ins
cmps
mov
cmps
mov
mov
pop
ret
dec
or
jmp
pop
pusha
adc
inc
fsubr
ret
push
push
mov
out
xchg
dec
pop
clc
mov
mov
jns
mov
movs
sahf
jbe
mov
(bad)
inc
jl
mov
add
cmp
out
cmp
mov
mov
pop
int3
repz
push
fdiv
movs
jno
push
std
push
inc
push
shr
jno
rcr
out
aad
pmaxsw
mov
fmul
adc
movs
outs
jge
and
jmp
xchg
dec
dec
out
and
fwait
jnp
xor
sar
push
sahf
lds
fsub
pop
xor
jo
adc
xchg
push
lahf
xchg
je
mov
repnz
ja
dec
(bad)
stos
ret
push
pop
xor
addr16
psubsw
push
sahf
cmps
(bad)
dec
mov
jle
pop
loopne
mov
mov
xor
xchg
test
adc
sub
mov
jmp
leave
push
int
repnz
jnp
arpl
jecxz
loop
mov
jmp
xchg
test
repnz
imul
sbb
outs
ins
fcmovne
aad
sbb
or
ror
mov
aam
push
in
aas
stos
lods
fnstenv
aaa
cdq
add
loope
fcom
mov
popf
pop
std
push
mov
mov
sar
loope
cmp
mov
cmps
lds
inc
lock
(bad)
imul
add
ja
je
add
ins
outs
sbb
test
test
push
int
fst
gs
add
or
sbb
lea
in
xchg
enter
xchg
aas
(bad)
ret
xchg
movs
dec
pop
dec
clc
pusha
inc
jl
adc
add
add
and
xchg
movs
leave
popa
lods
mov
in
mov
stc
cmp
xor
xchg
and
mov
loope
stc
(bad)
iret
mov
push
int
mov
paddusw
xor
(bad)
fnstenv
mov
mov
nop
and
lds
cmc
pop
jo
sub
sub
jecxz
stos
movs
push
mov
pop
add
jp
pop
movs
push
stos
gs
sahf
push
lock
jnp
cmp
bound
loope
ror
pop
cmp
movs
cmp
scas
and
ret
cmps
(bad)
(bad)
mov
sub
shl
sub
leave
or
push
cdq
in
fstp
shr
in
cmps
pop
dec
pushf
add
aad
dec
dec
jl
bound
dec
xor
aas
mov
dec
jp
fld
xchg
and
mov
retf
enter
sub
jne
pop
pop
stos
dec
xchg
push
sar
lods
out
mov
outs
ins
fucomp
cmp
fs
aas
mov
mov
int3
shl
in
mov
out
inc
leave
mov
or
sahf
mov
xchg
jno
dec
push
lahf
sub
out
call
in
xor
icebp
inc
int
pop
pop
pop
jae
jns
mov
js
adc
add
lods
dec
dec
mov
es
cmp
scas
call
sar
loope
ins
popa
jp
icebp
or
nop
xor
jmp
add
aam
inc
pop
xchg
in
mov
pushf
mov
in
adc
std
mov
mov
into
hlt
das
pop
cmp
loope
sub
lods
bound
inc
add
mov
push
xchg
push
jae
adc
push
sbb
es
ja
popa
sub
mov
ret
mov
into
xchg
pop
or
inc
jo
sti
cwde
push
in
in
imul
out
jae
pushf
sbb
sar
in
inc
sbb
movs
loope
cmp
xchg
loopne
gs
int3
inc
test
jp
dec
and
sub
inc
push
ror
icebp
cmp
cmps
and
dec
dec
adc
popa
loope
mov
dec
jne
mov
pop
adc
add
lods
jg
adc
nop
pop
ss
(bad)
outs
push
aas
push
mov
imul
(bad)
jo
dec
jl
adc
mov
and
push
add
and
push
(bad)
mov
xor
xchg
jae
sbb
cmp
sub
dec
and
pop
mov
jnp
loopne
push
lahf
jb
fistp
imul
mov
jne
in
push
dec
sub
loope
mov
jg
pushf
gs
outs
loope
mov
das
cwde
jle
aas
mov
xor
xchg
push
arpl
mov
(bad)
adc
ret
(bad)
data16
mov
mov
sub
addr16
inc
lods
mov
cwde
js
arpl
retf
and
push
xor
cmp
adc
mov
pop
cmp
mov
or
(bad)
sub
add
cmp
ins
jge
cmp
cmp
xlat
or
xor
jmp
xor
dec
jmp
dec
punpckldq
rol
pushf
test
(bad)
pop
mov
sbb
push
push
into
xor
jg
push
fbld
outs
adc
jmp
(bad)
fwait
icebp
cli
push
sti
push
sub
shr
outs
cmp
push
mov
test
call
mov
dec
jae
dec
or
jne
stos
arpl
add
stc
pop
xor
push
lods
mov
cmp
add
dec
adc
jne
(bad)
xor
sbb
mov
sbb
xrelease
or
in
adc
sub
cmps
in
push
or
test
movs
adc
and
push
xchg
cmp
dec
xchg
xchg
mov
retf
push
inc
arpl
dec
push
pop
clc
fs
or
inc
int3
(bad)
pop
aam
pop
add
xchg
ins
stos
ss
inc
test
xor
pop
mov
fcmovbe
je
out
popf
ins
pusha
adc
jbe
sub
(bad)
mov
(bad)
es
and
inc
cmps
or
adc
icebp
or
mov
rol
sub
fsincos
jmp
rcr
or
dec
aad
mov
nop
or
jo
mov
gs
bound
fldln2
dec
(bad)
daa
sub
sbb
cdq
(bad)
aad
cld
pop
xor
push
mov
sti
jecxz
jne
push
popf
aaa
mov
movs
ret
cli
xor
sub
push
xchg
mov
pusha
and
jbe
call
or
sbb
xor
aaa
cmc
lds
leave
nop
xlat
sbb
cld
ret
pop
test
les
dec
jae
out
lahf
mov
and
hlt
sbb
xor
mov
fsub
jg
movs
loopne
ss
mov
loopne
xlat
sub
inc
cmps
mov
out
lea
stos
jmp
or
clc
ret
aas
rcr
or
test
jnp
push
jb
outs
push
pop
mov
lahf
(bad)
imul
in
fst
mov
out
jb
add
or
fsubr
bound
sbb
add
and
addr16
aam
cmp
mov
bnd
or
rol
and
in
xchg
in
dec
xor
stos
mov
dec
fstp
pop
int
(bad)
adc
mov
inc
jb
cmp
mov
or
inc
cld
xor
loopne
imul
pusha
lods
(bad)
ret
das
fiadd
shl
jl
inc
aad
add
dec
adc
test
jp
or
outs
jb
mov
pop
cdq
stos
xchg
jb
push
add
xor
shl
sahf
sbb
sbb
rol
cmps
cld
xchg
ror
daa
sub
cmps
(bad)
(bad)
(bad)
data16
add
in
dec
cs
inc
ficomp
mov
inc
dec
pop
xor
std
inc
adc
sbb
(bad)
sub
movs
shl
call
pop
fnstcw
outs
mov
aaa
or
add
jnp
jne
jne
or
(bad)
addr16
xlat
ss
das
(bad)
loop
shr
dec
rol
dec
fld
test
pop
jns
jecxz
mov
xchg
xchg
sbb
or
mov
out
lods
out
jns
inc
test
(bad)
aad
retf
div
out
repz
push
pop
pop
dec
sub
ret
fucomi
add
lock
jb
arpl
or
jmp
pop
hlt
xchg
imul
enter
pop
lahf
pop
sub
cli
movs
push
sbb
inc
inc
retf
cmp
and
xor
or
jge
movs
ja
or
sqrtps
push
cmp
sub
(bad)
mov
xor
jecxz
xor
jmp
xchg
and
ret
fimul
xchg
fistp
cmp
bnd
je
add
pop
pop
xchg
cmpxchg
repnz
xchg
push
dec
jmp
stc
add
std
xchg
lea
fidiv
add
inc
fs
or
mov
jp
leave
je
aam
scas
in
sbb
xchg
adc
inc
mov
lahf
xchg
into
jle
loope
lods
xor
add
pop
in
sbb
mov
mov
xor
retf
mov
enter
mov
aad
fwait
or
and
sbb
ret
mov
repnz
or
out
push
repnz
out
icebp
ins
into
dec
in
cwde
dec
aam
mul
(bad)
out
or
sub
cmp
lea
dec
aam
inc
out
cmp
mov
cmp
test
sub
ja
push
movs
mov
jbe
cmp
jge
addps
(bad)
aam
or
inc
(bad)
jl
(bad)
cld
pusha
daa
retf
sub
out
fs
ss
in
mov
push
sar
call
adc
inc
aad
jb
mov
cld
push
xlat
aam
jle
retf
iret
jno
xor
mov
pop
adc
cmc
imul
pop
sbb
inc
xchg
sub
xor
js
call
or
imul
into
and
xor
or
(bad)
data16
jne
jle
arpl
stos
repz
lahf
sub
(bad)
push
xchg
fnstcw
lods
and
test
or
adc
xchg
nop
popa
pusha
(bad)
int3
or
mov
leave
sub
fdiv
xchg
pusha
mov
ret
cmps
jp
sbb
pop
ins
mov
xor
loopne
mov
ins
lock
ds
sub
out
leave
sub
movs
cmp
pop
inc
jne
hlt
jmp
rcr
js
iret
add
movs
scas
mov
or
sbb
cmp
dec
pop
fst
lods
stos
fcom
mov
cmps
sub
pop
jecxz
dec
cdq
stos
push
cdq
xchg
leave
pop
sub
(bad)
iret
inc
aas
dec
and
icebp
inc
mov
push
mov
(bad)
out
xchg
test
dec
mov
popf
rol
mov
ret
std
test
push
push
shl
les
icebp
and
sub
cs
outs
imul
cmp
aad
movs
cld
loope
push
sbb
dec
cmp
mov
mov
mov
push
or
adc
mov
xchg
pusha
cmp
in
es
(bad)
push
fsub
repz
push
inc
ss
sahf
pop
mov
popa
jg
xor
mov
push
sbb
sub
mov
jp
add
or
rcl
pop
ror
out
xchg
daa
mov
dec
data16
or
xor
je
movs
push
jno
int3
fst
mov
mov
inc
mov
or
xchg
push
lahf
push
es
xchg
mov
test
les
retf
mov
ins
out
dec
inc
mov
dec
push
xor
xlat
stos
lods
int
pinsrw
in
adc
jmp
jne
push
xchg
push
aas
outs
inc
cmc
xchg
jne
rcr
hlt
aaa
push
iret
(bad)
(bad)
(bad)
xlat
call
mov
or
stos
out
imul
push
std
cmc
hlt
mov
mov
cdq
sbb
cmp
pop
pop
(bad)
das
idiv
dec
test
shl
sbb
pop
repz
jmp
jns
inc
std
daa
adc
push
jb
loopne
push
shr
retf
jnp
shl
jae
js
in
sub
xor
mov
les
es
test
push
repz
xchg
(bad)
and
das
stos
pop
cmp
je
fs
jmp
test
jecxz
pushf
stos
int3
loope
push
adc
add
push
leave
call
stos
xlat
mov
or
push
or
sub
popa
sti
retf
popa
aas
clc
add
mov
xchg
push
test
scas
test
lock
mov
cmc
call
(bad)
jmp
fs
add
jae
pop
hlt
ror
xchg
push
stc
cmp
cmp
adc
jbe
and
out
jecxz
in
jp
sub
(bad)
not
jne
fild
test
cmps
mov
and
pop
dec
jnp
cmc
push
pop
mov
pop
je
loopne
sahf
mov
in
push
mov
adc
jno
popa
xchg
call
in
and
call
je
into
mov
push
je
add
loopne
aad
ret
loope
pop
ja
and
popf
addr16
int
mov
mul
dec
sbb
iret
in
pop
inc
mov
and
pop
popa
pushf
xchg
pop
leave
xchg
outs
ins
push
push
inc
ret
stos
jnp
pop
je
dec
call
add
leave
inc
(bad)
call
repz
shl
sub
dec
or
int
push
or
movs
mov
test
lds
cmp
repz
sub
enter
jg
movs
rcr
call
cs
mov
int3
mov
push
rcr
aad
mov
jecxz
retf
rcl
push
sar
push
sahf
ja
sub
scas
inc
aad
sub
jmp
movs
sahf
push
loop
fcomi
mov
popa
add
sbb
pop
loop
movs
pop
xor
lods
pop
sub
sbb
pushf
cmp
cmp
jae
loope
cmp
imul
out
pop
mov
sahf
mov
retf
(bad)
push
mov
rcl
fidivr
ins
xchg
cmp
adc
inc
inc
mov
addr16
test
das
sub
js
lods
gs
push
fisub
das
(bad)
jmp
xchg
fs
ss
mov
push
mov
dec
dec
push
es
jmp
xchg
les
dec
inc
gs
cmp
xchg
mov
and
leave
push
cmp
pop
jns
pop
xchg
mov
imul
outs
inc
xchg
es
inc
addr16
addr16
in
push
aaa
jmp
cmps
pop
out
push
shr
or
push
bound
xchg
icebp
popf
inc
adc
jge
pushf
ins
mov
xor
or
movs
jmp
push
xor
aaa
and
inc
mov
data16
mov
ins
aad
pop
clc
mov
mov
sub
push
mov
mov
fidiv
xchg
fbstp
mov
ficomp
pop
in
lds
and
(bad)
stc
push
inc
movs
mov
add
sbb
popa
mov
mov
cld
rcr
sbb
shr
loopne
retf
jge
xor
dec
cld
mov
xor
aas
faddp
js
cmps
mov
fld
(bad)
sti
gs
int
cs
loope
aaa
scas
fld
dec
(bad)
mov
fadd
cmps
or
inc
mov
xchg
jnp
pop
bnd
out
jne
test
lahf
jecxz
lds
fidivr
push
xchg
loopne
shl
or
stos
jno
popa
(bad)
clc
(bad)
push
in
xchg
cmp
scas
push
add
sub
xor
jp
pop
shl
and
pop
imul
ja
jne
fisttp
jp
in
sti
nop
xchg
jns
mov
pushf
and
aam
ins
or
adc
(bad)
mov
out
add
jmp
stos
push
lods
adc
ret
arpl
add
mov
push
mov
stos
mov
stos
sar
mov
out
mov
mov
jno
jge
retf
stos
mov
xchg
push
lea
rep
mov
mov
ins
adc
outs
jb
mov
add
ret
mov
xchg
push
mov
add
scas
ror
and
gs
test
call
mov
push
cs
cmp
add
imul
push
mov
test
enter
daa
sahf
cmp
scas
or
adc
adc
jae
push
sbb
ss
xchg
mulps
aas
cwde
test
xor
sbb
or
fst
jle
mov
lods
fisub
cmps
adc
jmp
xor
adc
jno
repnz
loop
dec
(bad)
pop
call
pop
mov
in
fst
stos
jne
sbb
push
mov
and
repz
mov
pop
sub
in
scas
mov
mov
mov
add
add
push
mov
icebp
stos
adc
retf
sub
xor
mov
mov
jmp
or
int
call
pop
cmp
arpl
xchg
leave
mov
sub
je
test
mov
scas
dec
test
ret
rcr
jo
fcomi
cmp
scas
jmp
popa
pop
pop
sbb
loop
sbb
cli
push
add
je
adc
pop
stc
shl
pop
shr
mov
repz
adc
ins
stos
mov
into
add
or
dec
arpl
dec
sbb
mov
sub
outs
jmp
jecxz
stc
mov
lahf
mov
and
push
dec
inc
mov
stos
adc
repz
dec
fcmove
movs
rcl
ficom
movs
push
enter
popa
add
xchg
xchg
test
adc
call
or
cs
test
jge
or
mov
stos
mov
dec
out
in
add
sub
enter
not
adc
mov
and
dec
mov
outs
or
fisub
stos
push
outs
pop
dec
add
bound
out
add
mov
push
pop
push
sub
pop
les
or
mov
out
fwait
cmp
inc
stc
jae
scas
jmp
and
ins
pop
test
js
call
cs
xor
sbb
clc
scas
jne
adc
cmps
sbb
xchg
test
adc
pop
cmp
fcmovb
mov
pusha
and
adc
fcmovbe
xor
jg
iret
outs
mov
mov
mov
pushf
add
inc
les
or
xor
pop
(bad)
mov
sbb
cwde
adc
xchg
jno
pop
jnp
lock
xlat
push
js
xor
rol
sbb
js
xor
out
call
cmp
int
sub
sbb
add
or
leave
inc
rcr
sub
mov
jno
pop
xor
mov
dec
xor
stos
mov
add
js
adc
sbb
pop
push
jg
iret
push
cld
iret
pop
test
cmp
add
and
icebp
ret
xor
pop
clc
push
rcl
dec
mov
scas
imul
movs
imul
xchg
ret
imul
fstp
or
or
(bad)
xchg
aas
clc
sbb
add
int3
add
movs
shl
mov
pop
cld
icebp
mov
dec
aad
or
sti
jle
ds
mov
in
retf
cli
loopne
jge
scas
ret
and
rcl
and
xchg
outs
xchg
loope
dec
bound
sbb
pusha
sbb
xor
aaa
pop
inc
(bad)
daa
fcomp
inc
mov
test
aad
and
les
add
cmp
cmps
mov
and
ja
cmovs
ds
mov
imul
mov
inc
dec
sub
sub
sbb
retf
(bad)
nop
ss
outs
cmp
scas
int
xchg
jb
scas
adc
lahf
xchg
mov
pop
and
das
dec
scas
xchg
mov
pop
cs
push
outs
sub
add
in
jne
(bad)
push
jns
inc
das
repz
add
fnstcw
retf
and
inc
adc
call
shl
cli
xchg
push
push
stc
pop
dec
mov
add
push
leave
imul
inc
pop
scas
jmp
inc
adc
mov
fstp
ss
push
icebp
add
adc
mov
imul
rcr
mov
cmps
loopne
retf
int
data16
icebp
fidivr
jae
call
icebp
popa
mov
sbb
dec
pop
ja
adc
test
pop
aas
mov
mov
bound
xor
jle
clc
aam
icebp
jno
aas
add
jmp
pop
mov
outs
mov
shl
retf
adc
cmp
addr16
repnz
leave
mov
(bad)
ins
pushf
pop
pop
aaa
and
lods
inc
enter
pop
gs
loopne
mov
inc
pop
dec
lds
cmp
and
xchg
mov
popa
jae
mov
pop
iret
adc
and
push
je
xchg
and
adc
xchg
push
sub
sub
inc
or
popf
cmp
or
out
sbb
pusha
mov
mov
add
pop
xor
xchg
ficom
test
(bad)
sbb
sub
inc
ins
add
push
pop
lahf
jmp
addr16
fsubr
(bad)
and
(bad)
repnz
adc
jnp
mov
neg
jo
mov
fdivr
mov
cmp
jle
sbb
dec
adc
imul
xor
mov
nop
cmp
add
loopne
sub
gs
dec
or
shl
fsub
pop
(bad)
hlt
or
cmp
fsub
movs
ins
jo
inc
fst
mov
or
(bad)
sbb
dec
(bad)
jge
sub
mov
cmp
fisub
mov
enter
mov
fidivr
scas
dec
test
mov
cmp
std
jb
jne
pushf
bound
add
or
into
lea
adc
mov
and
mov
mov
je
or
jnp
xchg
jne
cld
aas
xchg
les
inc
jmp
ret
cmps
and
les
dec
push
into
mov
nop
pop
das
(bad)
loop
neg
mov
fcomp
ret
sub
fild
xor
ror
jmp
adc
add
out
pop
movs
leave
mov
(bad)
in
(bad)
rcr
loop
les
dec
sbb
xor
sar
jns
jle
popa
repz
icebp
dec
ins
mov
dec
and
xchg
mov
out
lock
dec
dec
push
add
shr
pop
jae
cmp
repz
loopne
mov
jnp
cmp
jnp
rol
test
movs
mov
out
inc
arpl
mov
in
pop
call
dec
pop
in
(bad)
out
call
xchg
pop
sbb
int
mov
adc
jg
test
cdq
cmp
mov
add
test
cld
pop
int
lds
stc
sub
xchg
cmps
ss
and
mov
fcmovnbe
mov
xor
jecxz
xchg
sahf
repz
repnz
leave
mov
pop
shr
pop
movs
ss
fwait
mov
mov
pop
loopne
ror
shl
fcmovbe
in
sub
jmp
sbb
xor
adc
pop
lahf
dec
mov
sti
rol
jnp
out
xchg
cmc
(bad)
pop
jo
shl
lock
(bad)
push
mov
cmp
add
push
push
mov
cmp
dec
jo
pop
fs
xlat
mov
mov
sub
and
pop
push
add
jecxz
retf
mov
xlat
pop
mov
dec
dec
movs
adc
xor
inc
inc
loope
cmc
xor
les
jmp
outs
pop
dec
add
hlt
mov
iret
add
into
nop
scas
arpl
out
and
loop
imul
mov
jg
std
ja
retf
jbe
xor
push
or
mov
pop
retf
ds
cli
xor
or
and
dec
mov
mov
push
mov
leave
mov
lods
adc
mov
cmp
sbb
fistp
hlt
in
jmp
xor
adc
mov
cdq
mov
adc
xor
and
adc
push
sub
stos
scas
inc
mov
stos
mov
xor
jge
xchg
movs
cmps
cmp
dec
or
(bad)
retf
adc
push
mov
or
ja
mov
popa
retf
pop
add
jns
add
rcr
enter
cmp
sahf
div
jmp
mov
fstp
mov
lahf
cmp
fcomp
sbb
fld
dec
iret
lods
mov
(bad)
idiv
jp
hlt
imul
inc
fild
pop
mov
aas
or
arpl
std
jae
fdivp
mov
int3
mov
pop
fmulp
ret
cli
or
push
mov
sar
popf
int3
sub
call
ret
mov
xor
cmc
retf
aad
sbb
add
inc
jo
aam
cdq
in
or
iret
adc
sahf
out
sbb
mov
outs
push
outs
cld
or
in
shl
jbe
lods
and
push
add
mov
ret
xchg
add
lahf
xor
push
push
(bad)
ja
mov
dec
cmp
loop
cmp
sub
js
scas
sub
int
jg
call
das
add
push
(bad)
jle
aaa
dec
movs
xor
loopne
sbb
jl
movs
jae
icebp
xor
xor
inc
lods
jae
jmp
cmp
mov
imul
mov
dec
pusha
push
fnstcw
add
jmp
(bad)
clc
cmp
fs
enter
mov
inc
pop
or
xor
call
mov
out
ret
repz
mov
xor
jns
push
mov
rol
jmp
cld
cmp
xchg
adc
mov
out
and
neg
ret
lds
adc
xchg
adc
stos
rep
cmp
in
dec
mov
xor
leave
inc
push
jne
(bad)
fdiv
add
mov
(bad)
call
aaa
sbb
pminub
stc
mov
ret
les
pop
repnz
setp
jns
sub
dec
cmp
cmp
xor
push
mov
dec
push
push
mov
fwait
rol
fsubr
retf
mov
xor
je
push
dec
push
call
pusha
xchg
jl
xchg
sbb
sbb
rcl
test
arpl
jge
mov
jecxz
mov
loop
sbb
inc
xchg
sahf
dec
mov
mov
fidivr
mov
or
push
or
jne
sbb
cmp
jecxz
xor
dec
and
pop
and
jo
mov
and
ja
push
cmp
sbb
pop
mov
push
out
adc
pop
cs
frndint
sub
cmp
lock
xlat
mov
movs
shr
fcom
shl
mov
or
mov
loope
sub
mov
ins
sbb
imul
arpl
outs
(bad)
push
cmp
jg
fdivp
call
mov
in
jecxz
jno
js
push
enter
push
cli
dec
data16
into
aaa
mov
sti
mov
(bad)
bound
or
pop
stc
add
cmps
adc
xchg
jns
mov
stos
cld
jbe
movs
cli
lea
aad
jl
pop
cmc
mov
inc
xor
pop
push
cmps
cmp
mov
jmp
(bad)
sti
sahf
(bad)
cmp
idiv
xlat
pop
sub
test
pop
std
push
mov
xchg
jge
push
into
loope
jecxz
fisub
mov
outs
xor
in
fidiv
in
in
fidivr
mov
xchg
stc
pop
jb
ins
imul
fdiv
mov
and
loope
xchg
cdq
adc
cmp
xchg
int3
mov
ret
rcl
jle
scas
jmp
inc
dec
adc
enter
mov
push
retf
or
jecxz
popf
fnstenv
pushf
jnp
fadd
test
and
dec
push
clc
mov
arpl
retf
pop
mov
leave
cmp
ficom
xchg
push
shl
movs
or
das
mov
cs
xor
and
jmp
cld
sbb
adc
jb
loope
or
mov
pop
jp
mov
mov
(bad)
mov
into
fwait
jg
sbb
stos
lock
add
xchg
scas
sar
xchg
and
fdivrp
push
fistp
test
in
call
inc
adc
and
movs
xchg
xchg
cld
mov
lea
mov
rcl
push
sbb
aad
popa
push
int
enter
std
jmp
xchg
iret
pop
cmp
outs
and
movs
pop
mov
scas
call
mov
and
inc
cmps
das
xor
push
loopne
cmp
es
lahf
inc
inc
pusha
call
test
sbb
fwait
loop
int
xor
sub
push
add
popa
xor
sub
dec
jle
xchg
(bad)
add
jmp
fcomp
cdq
mov
push
ds
push
or
and
push
loope
mov
shl
mov
mov
popa
leave
adc
dec
mov
fsubr
pop
cmp
sbb
fidivr
ss
push
sub
stos
imul
lahf
mov
cmp
ret
popf
enter
loopne
jmp
loope
jp
adc
sahf
pop
addr16
xor
inc
xlat
or
ins
xchg
(bad)
jo
and
fidiv
pop
loop
jbe
mov
xchg
push
jnp
jae
mov
(bad)
ds
ret
(bad)
retf
sbb
push
pop
add
test
sub
mov
add
out
cmp
dec
add
retf
call
iret
shl
xchg
push
xchg
push
outs
aad
pop
sub
dec
ds
and
jmp
or
rcr
leave
inc
loopne
pop
stos
ss
jmp
test
sbb
mov
stc
call
jl
lds
inc
fld
push
fmul
jp
ss
sahf
mov
jo
lods
sahf
loope
(bad)
push
pop
inc
in
(bad)
(bad)
dec
lods
ins
sbb
cld
ja
es
sbb
into
retf
mov
add
fcmovnb
adc
(bad)
rol
inc
jmp
hlt
fidivr
loop
sub
pop
call
pop
mov
jge
test
sub
inc
out
sub
and
(bad)
arpl
ret
arpl
or
push
xchg
cld
push
adc
push
push
xchg
(bad)
fcmove
lds
cmp
cmp
not
mov
aad
push
cmp
repz
sbb
sub
call
jno
bound
mov
test
xchg
xchg
mov
cwde
xchg
mov
repz
fdiv
enter
int3
jnp
movs
mov
mov
fistp
dec
lods
adc
inc
jecxz
movs
jno
push
dec
adc
xor
retf
loopne
xchg
enter
std
inc
(bad)
dec
lds
call
dec
das
mov
hlt
or
jge
adc
sbb
inc
cmp
xor
imul
nop
fnstsw
lock
inc
cmps
(bad)
mov
pop
daa
lods
ja
xor
shl
fmul
cli
popf
push
neg
cli
popa
mov
xor
inc
xchg
mov
mov
sbb
outs
add
add
sub
fild
mov
sbb
cmp
sti
inc
retf
mov
inc
movs
mov
mov
nop
add
mov
jmp
rcr
rcl
call
clc
daa
stc
mov
jle
test
pop
inc
mov
sub
iret
pop
and
cwde
push
and
fistp
jmp
ror
int
retf
scas
xor
in
xchg
mov
sub
pop
sub
dec
adc
xor
mov
lock
or
adc
push
sbb
pop
fwait
pop
jp
push
cmp
iret
mov
ret
inc
inc
imul
lock
les
xchg
push
lods
ficom
mov
mov
(bad)
loope
loop
mov
inc
test
aad
push
shl
add
lods
movs
pushf
push
mov
pop
mov
les
es
icebp
cmp
imul
(bad)
repnz
mov
or
hlt
leave
push
daa
in
mov
stos
ror
jb
vpaddsw
dec
add
push
push
psrlq
mov
mov
repz
loopne
xchg
cs
mov
push
call
test
lods
je
lea
or
lock
or
xor
cmp
or
(bad)
jb
mov
or
lods
mov
nop
imul
sub
mov
push
in
scas
outs
adc
cmp
sbb
fsubr
out
int
js
mov
cmps
add
push
repnz
xchg
mov
sahf
test
inc
jp
mov
xor
jnp
push
jp
mov
nop
or
sahf
bound
in
ins
sahf
inc
jns
enter
push
dec
ror
cld
sbb
stc
adc
repz
xchg
hlt
test
and
ins
rol
std
hlt
xor
bound
cmp
add
fidivr
add
xlat
pop
arpl
inc
pop
les
mov
retf
and
stos
jecxz
aaa
mov
push
retf
lds
xchg
mov
xlat
push
std
jb
add
inc
jmp
xlat
outs
in
and
test
jb
mov
adc
lods
sbb
les
fidiv
fwait
adc
(bad)
leave
(bad)
mov
cwde
or
add
cs
scas
clc
jae
adc
jl
jg
xor
jge
(bad)
out
sub
enter
lea
pop
sub
mov
adc
pop
ret
cli
mov
inc
movs
frstor
mov
inc
fnstcw
in
adc
mov
pop
add
add
cmp
mov
lea
jns
fsub
and
imul
jle
icebp
imul
add
sti
mov
es
xlat
fnstenv
xor
mul
mov
cmovge
and
idiv
xor
mov
xchg
retf
imul
mov
ret
mov
not
ds
inc
lods
xor
push
xor
jnp
sub
sbb
jae
inc
mov
fwait
(bad)
aam
fist
inc
jge
ins
movs
cmp
dec
or
cmps
push
cdq
mov
out
cmp
mov
je
or
sub
daa
popa
lock
push
dec
lock
imul
push
and
fnstenv
(bad)
in
xchg
shl
jle
pop
or
arpl
mov
xchg
sbb
xor
mov
jb
push
push
in
rcr
mov
xor
imul
sbb
ja
arpl
aad
ss
xchg
mov
mov
push
cs
fcmovnb
cmp
lods
seta
sbb
ss
push
push
mov
test
arpl
sub
xchg
and
sbb
sub
adc
out
ins
cmp
sub
inc
pop
shl
ins
movs
in
jg
pop
lahf
pop
pop
ret
and
sar
iret
mov
in
jae
fyl2xp1
mov
adc
cmp
cmps
pop
pushf
ja
out
arpl
ret
mov
adc
push
ret
xchg
push
iret
xor
imul
sub
lock
inc
dec
sub
dec
or
and
and
adc
jmp
xor
or
(bad)
jecxz
xor
test
popa
leave
xchg
jo
cld
(bad)
push
dec
dec
push
inc
xor
mov
mov
push
xor
xchg
fsub
xlat
xchg
xor
les
fcom
add
pop
or
ds
pop
leave
or
ja
push
fdiv
cmps
test
shl
or
jl
jae
call
push
add
in
lahf
cmps
rcl
sub
jbe
add
repnz
push
outs
mov
cmp
out
lds
test
lods
fnstenv
or
inc
jno
test
mov
dec
jl
jno
fs
mov
(bad)
ret
xchg
sbb
mov
or
inc
daa
outs
ds
call
jb
(bad)
pop
xor
jge
icebp
jge
outs
fcomp
rol
test
adc
pop
pop
(bad)
or
adc
out
fistp
jns
ja
lahf
jo
les
sub
movs
imul
(bad)
cwde
cmc
sub
inc
leave
mov
clc
fsubr
push
loope
outs
lock
add
jno
pop
push
pop
and
cdq
pusha
push
jmp
push
popf
sahf
stos
cmp
push
push
out
test
jecxz
mov
fdivrp
mov
mov
repnz
pop
mov
and
cmp
pop
and
xor
mov
cmp
mov
in
cmps
imul
mov
cmp
xor
daa
test
mov
arpl
inc
xor
jmp
bound
into
cmp
and
lfs
clc
jne
inc
cmc
scas
xor
xchg
(bad)
mov
xchg
push
xor
xchg
mov
nop
out
adc
enter
and
pop
cmp
scas
or
aas
add
add
mov
ret
in
ror
(bad)
adc
mov
dec
lock
cs
bound
rol
sahf
sub
cmp
sbb
test
das
daa
jb
(bad)
push
or
repnz
or
icebp
clc
je
cmp
push
int
sub
add
cmp
and
cmp
into
icebp
cli
iret
xchg
cmp
in
mov
push
outs
leave
rcl
fild
inc
sub
jns
repnz
jb
jbe
je
mov
xchg
jl
sbb
or
pop
icebp
pusha
cmps
mov
out
mov
mov
mov
or
lock
std
cmp
push
or
inc
adc
ret
mov
sub
lock
adc
das
lea
cmp
or
xchg
cmp
je
xlat
mov
aas
sbb
inc
gs
sbb
add
adc
or
in
mov
push
mov
pop
sub
inc
retf
js
je
pop
lods
inc
scas
imul
dec
mov
dec
or
xchg
mov
stc
pop
call
jl
call
xlat
shr
push
adc
cmp
and
jb
sub
rcl
fsubr
add
fdiv
or
shl
sub
fdivr
pusha
and
shl
ret
xchg
inc
aas
loop
push
xchg
and
mov
ja
ret
or
nop
addr16
cmps
xchg
pop
std
ror
test
into
xchg
push
jg
(bad)
jmp
(bad)
fucomi
mov
ja
aad
xor
dec
pushf
jno
pop
repnz
sbb
sar
hlt
cmps
xor
xchg
lods
jb
mov
dec
sti
pop
xchg
inc
hlt
add
outs
add
mov
mov
inc
push
enter
mov
test
mov
jg
shr
mov
cmp
dec
inc
je
sub
(bad)
push
scas
or
sub
movs
ret
cmc
pop
(bad)
jge
gs
bound
jb
dec
push
repz
ins
js
pop
dec
dec
pop
sti
cmp
sbb
shl
fwait
dec
ret
stos
or
push
fisttp
movs
inc
jbe
mov
cmp
inc
mov
in
ret
sbb
lds
or
popa
or
cmp
xor
adc
or
mov
sbb
mov
fcmovb
sub
sub
add
loopne
enter
jmp
scas
scas
cmps
out
jne
dec
cmp
pop
xor
retf
fld
and
test
inc
aas
ss
and
sub
shl
popf
mov
daa
scas
pop
sbb
jmp
std
aaa
in
jmp
aaa
xchg
lea
mov
xor
add
jnp
push
jnp
rcr
or
out
push
pop
xchg
sub
pushf
pop
inc
mov
loop
mov
jno
fstp
push
push
fisub
mov
mov
(bad)
outs
jecxz
push
cmc
fdiv
push
mov
cmp
push
pop
sahf
cli
mov
jmp
stos
movs
mov
dec
dec
or
loope
mov
shl
push
mov
int
stos
push
call
sub
mov
push
outs
xor
mov
push
sbb
out
inc
xchg
(bad)
xchg
je
aaa
repz
mov
sbb
jl
fcomp
in
(bad)
mov
push
xor
jmp
cwde
fs
jne
jmp
xchg
scas
sbb
or
add
mov
cmc
mov
xor
fisubr
add
mov
out
mov
jg
mov
lea
mov
ins
mov
or
out
xor
loop
repnz
fdivr
popa
clc
jp
sbb
aaa
or
idiv
dec
daa
mov
into
in
nop
and
mov
ja
push
aam
in
mov
and
dec
stc
or
bound
movs
dec
sbb
sub
lods
mov
fwait
(bad)
sub
mov
test
retf
jb
or
mov
adc
mov
cdq
ins
sub
leave
sbb
push
sub
mov
fsubr
lea
dec
dec
fs
mov
cdq
adc
and
call
cld
lods
dec
sbb
loope
adc
loope
cmp
or
sbb
cmp
dec
neg
mov
pusha
xchg
lock
in
je
jns
test
sbb
cwde
cmp
push
cmp
dec
pop
sbb
and
mov
cs
push
adc
push
dec
nop
bound
and
dec
and
nop
push
ds
push
push
dec
ins
pop
test
add
out
or
mov
inc
pushf
xchg
out
xor
mov
push
aaa
mov
retf
dec
movs
sbb
popa
mov
push
movs
in
push
dec
inc
daa
adc
fld
xlat
lock
test
mov
repnz
icebp
dec
test
sbb
dec
jae
push
sub
retf
xor
sbb
pop
push
adc
rcl
retf
(bad)
jecxz
(bad)
lahf
and
and
dec
mov
sbb
mov
cmp
pop
or
retf
sahf
imul
in
jecxz
and
in
fadd
outs
loopne
out
pop
xchg
pop
push
(bad)
push
xor
push
xchg
shr
jne
gs
jb
shl
call
pushf
lock
sahf
jecxz
ds
rcl
xor
adc
or
xor
sahf
cdq
scas
retf
in
jo
(bad)
cdq
test
or
dec
dec
movs
frstor
mov
xchg
test
js
ret
in
dec
inc
inc
dec
fyl2xp1
jno
test
outs
or
test
sub
pmaxub
mov
test
sbb
xchg
xor
xor
and
push
adc
dec
inc
sbb
mov
bound
push
mov
push
dec
mov
mov
xchg
loop
or
loopne
xchg
iret
add
call
mov
jp
dec
js
retf
pop
jno
ret
xchg
dec
xchg
(bad)
imul
outs
fild
call
sub
pop
push
mov
gs
inc
into
add
in
cmp
jp
cmp
aam
shl
fmul
xor
mov
pop
or
xor
loope
adc
leave
pop
or
and
cld
add
adc
mov
or
pop
sbb
fdiv
lds
aam
out
test
dec
add
gs
push
ins
jo
inc
jg
and
and
push
out
xchg
sub
gs
push
cmp
cmc
cdq
xor
enter
mov
(bad)
mov
pop
out
std
js
mov
cmps
dec
xchg
xchg
inc
dec
(bad)
xchg
fimul
dec
mov
jae
shl
out
ja
ss
in
inc
shr
in
outs
and
shl
add
in
or
movs
xchg
jno
retf
imul
inc
cmp
xchg
repz
aad
xor
pop
and
jmp
enter
push
pop
mov
std
sbb
or
xchg
stos
push
mov
bound
pop
es
cs
pop
mov
sbb
dec
ins
add
arpl
or
(bad)
and
add
pop
mov
daa
sub
push
gs
push
dec
cwde
mov
movs
mov
icebp
or
cmp
and
xchg
cmp
push
jge
test
rcr
mov
dec
inc
mov
pop
in
popf
pushf
adc
icebp
mov
mov
leave
call
lods
(bad)
jno
in
(bad)
sbb
sbb
scas
sahf
enterw
ret
mov
hlt
add
mov
jecxz
inc
mov
cmc
mov
shr
test
inc
add
adc
(bad)
aad
fild
and
mov
push
jmp
(bad)
push
xchg
outs
rcr
and
rcr
mov
(bad)
add
and
fimul
daa
mov
jle
adc
out
pop
mov
jno
div
push
fstp
jne
and
test
mov
cmp
mov
inc
push
imul
mov
(bad)
xchg
xchg
rcl
pop
inc
xor
xor
pusha
add
movs
pop
xchg
mov
xchg
mov
mov
mov
push
das
aas
nop
mov
mov
popf
test
mov
jno
aad
sbb
leave
aas
popa
imul
imul
ins
jmp
push
cld
xor
xor
retf
in
and
test
cdq
adc
cli
jle
icebp
test
scas
aaa
out
icebp
ret
cmp
adc
nop
cmp
aaa
sub
add
add
stc
jns
fcmove
repnz
cmp
sub
dec
jno
xor
mov
push
(bad)
mov
cs
xor
mov
xchg
(bad)
leave
mov
dec
jmp
pop
push
call
cmp
xchg
push
or
icebp
les
xor
mov
fistp
inc
dec
dec
xor
jmp
mov
xor
cmp
aam
sub
jle
pop
mov
xchg
pop
xchg
(bad)
dec
adc
ret
ja
xor
jbe
loop
push
xchg
mov
sub
scas
lahf
sbb
mov
push
pop
xor
fbld
in
inc
dec
daa
jnp
cwde
scas
mov
leave
jae
faddp
retf
dec
or
jp
pop
cli
popa
fcomip
nop
fisub
dec
mov
mov
and
ds
aas
enter
sar
and
jno
xchg
sub
js
pop
mov
fwait
mov
mov
jae
js
movs
out
jbe
jecxz
mov
(bad)
int
sub
push
std
cmp
jne
xchg
mov
mov
adc
dec
ret
aam
add
iret
(bad)
inc
jae
mov
mov
hlt
mov
fld
ds
ret
jns
add
push
out
push
jno
addr16
pop
mov
shl
pop
out
mov
fistp
pop
or
mov
loopne
xchg
push
nop
and
and
sub
loopne
out
mov
dec
sub
mov
ror
pop
daa
(bad)
or
jmp
or
lods
push
jl
mov
dec
rcl
enter
repnz
sub
and
adc
shl
test
mov
mov
mov
lahf
in
retf
xchg
adc
movs
stos
outs
in
aad
fld
bound
or
cld
sbb
leave
pusha
imul
adc
mov
adc
push
inc
pop
mov
xor
jnp
and
fadd
(bad)
xchg
enter
xor
inc
dec
aaa
pop
adc
adc
and
enter
(bad)
or
cmp
cmc
jecxz
adc
jmp
(bad)
ins
test
out
mov
mov
cli
jns
jp
retf
pop
aad
neg
jecxz
outs
mov
jp
adc
jb
fcomip
lods
into
push
adc
add
mov
cld
dec
movs
inc
xor
jae
mov
xchg
mov
lock
aad
fisubr
and
xlat
push
cmps
cld
scas
add
loop
test
jl
cwde
ja
sub
jne
xor
cmc
xchg
cmc
ja
xchg
mov
sbb
dec
test
push
ins
test
cmp
enter
test
and
loopne
aaa
add
pop
lods
imul
test
add
loopne
fwait
nop
mov
sbb
jle
mov
mov
out
jle
xchg
xchg
pop
adc
xor
jecxz
ins
mov
jge
and
lods
test
inc
mov
and
int
loop
fwait
imul
shl
xlat
xchg
cmp
lahf
icebp
push
fwait
cmp
sbb
mov
sub
mov
push
ds
neg
outs
adc
cmp
and
or
fiadd
ret
cmp
sub
rol
ret
call
cdq
lods
add
movs
mov
(bad)
jge
es
aam
out
fild
sub
lods
pusha
dec
lea
lods
(bad)
dec
ja
mov
or
lahf
fwait
adc
jo
pop
das
pushf
movs
(bad)
sbb
fdiv
cwde
in
push
mov
add
adc
ja
xchg
jl
(bad)
jmp
mov
xchg
call
fucomp
sbb
out
out
cs
jmp
cwde
sbb
jle
dec
mov
sbb
mov
xlat
in
xchg
lock
sbb
add
xor
cmp
add
in
xor
js
mov
and
or
stc
mov
lahf
lock
popa
inc
mov
sub
es
cld
lock
inc
mov
xchg
jg
sahf
add
push
aad
neg
mov
cmp
daa
add
jecxz
dec
push
cmp
retf
(bad)
mov
sbb
push
jecxz
mov
iret
inc
(bad)
fdiv
and
cmps
leave
pop
loope
cwde
xor
pminub
ins
xor
mov
test
mov
fadd
ja
jge
jmp
sbb
jp
push
xlat
shl
add
or
jno
scas
xor
mov
cmp
lds
sbb
pop
mov
xor
ret
cmp
shr
add
js
mov
scas
dec
imul
sbb
mov
xor
xor
ret
mov
les
xor
adc
cmp
add
mov
push
imul
push
mov
lods
push
test
sahf
loope
(bad)
xchg
mov
mov
cmp
cs
and
dec
fimul
mov
xchg
cmp
add
inc
jge
mov
pop
aaa
dec
cdq
in
cmps
adc
and
aad
push
mov
sub
cmps
xchg
push
add
xlat
stc
mov
imul
js
push
leave
push
rcr
or
into
(bad)
repz
mov
outs
mov
test
inc
idiv
ret
out
sub
pop
iret
inc
sub
push
retf
xchg
cli
dec
popa
retf
(bad)
inc
dec
lods
adc
test
adc
lods
imul
mov
pop
xor
inc
or
xchg
cmp
and
test
and
pop
inc
mov
cmp
sub
rcr
pushf
mov
mov
jbe
iret
fnstcw
mov
fcomp
add
mov
mov
xchg
or
xor
scas
push
das
jle
iret
and
jmp
sbb
data16
iret
aaa
push
aam
jmp
or
jle
push
jecxz
ja
mov
in
cdq
pop
movs
call
lock
adc
xlat
aam
sbb
js
bound
std
arpl
push
add
movs
cmps
mov
or
sub
pop
mov
sbb
arpl
leave
retf
cmp
jmp
gs
adc
ins
cmp
lods
xor
jns
not
in
xor
loope
mov
lods
jns
cmp
popf
cdq
jmp
int3
jbe
jmp
jg
lods
dec
pop
xchg
hlt
test
mov
inc
xchg
test
repnz
inc
cmp
jecxz
pop
inc
in
aad
rcr
jp
jae
add
pusha
mov
inc
xchg
cmc
xchg
jae
sub
add
dec
push
sar
adc
sbb
mov
add
xor
iret
xchg
push
je
mov
scas
cmp
sbb
leave
push
push
adc
and
push
or
int
fs
mov
mov
pop
push
mov
pushf
pushf
mov
adc
xchg
jecxz
inc
lds
je
mov
scas
push
das
xchg
or
mov
inc
dec
gs
test
fnsave
adc
mov
or
mov
dec
imul
cmps
(bad)
mov
add
xchg
dec
mov
repz
ror
rol
pop
xor
mov
inc
mov
std
inc
dec
sub
jnp
adc
push
sbb
and
adc
jmp
ins
cdq
cmp
lahf
sbb
dec
mov
mov
xor
add
xor
shl
popa
mov
in
fistp
(bad)
or
or
loopne
pop
inc
push
shr
or
das
pop
gs
std
sahf
xchg
je
sbb
stc
lods
and
aad
pusha
fist
push
xchg
ret
(bad)
jl
fcom
sbb
pop
hlt
pop
fisub
sahf
and
push
mov
pop
leave
jne
and
xchg
sbb
mov
inc
push
xchg
inc
icebp
stos
mov
lock
push
mov
gs
cwde
fistp
jb
mov
ins
stos
mov
and
and
cmp
jl
outs
imul
xchg
inc
inc
sbb
test
aam
xchg
jno
lds
xchg
xor
cmp
dec
jns
cmp
(bad)
xor
cmp
ja
add
and
lahf
mov
out
or
mul
mov
enter
sbb
sbb
xor
pop
scas
mov
and
daa
jmp
and
test
adc
jne
loop
sbb
cmps
mov
in
jge
sbb
(bad)
xor
ret
(bad)
pop
arpl
ret
imul
test
cmp
push
jmp
push
loope
call
mov
lds
test
mov
push
(bad)
sbb
not
push
dec
adc
leave
xlat
or
int
sub
pop
jo
push
mov
push
test
arpl
test
int
jns
mov
cmp
xchg
jecxz
call
mov
aaa
mov
mov
jmp
rcl
outs
mov
lods
jl
jle
pop
sti
outs
or
icebp
rcr
jno
dec
loop
(bad)
dec
adc
push
jg
mov
jb
dec
gs
aaa
imul
pop
stos
cdq
jns
les
adc
mov
out
and
pop
xor
shr
pop
jb
jo
or
aad
pushf
inc
inc
bound
fisttp
aas
imul
dec
cmps
inc
adc
(bad)
xor
mov
ins
mov
pop
rol
adc
ret
aad
mov
jnp
sub
das
neg
inc
mov
shl
xor
xchg
mov
pushf
inc
sub
leave
mov
and
movs
jmp
push
push
xchg
pop
inc
mov
mov
xor
ret
xor
mov
inc
push
sahf
push
xor
mov
xor
sbb
ret
cmc
lock
sahf
and
cmp
push
in
add
sbb
mov
leave
and
adc
xchg
lock
sar
ja
std
(bad)
xchg
jmp
mov
sbb
mov
xchg
in
xlat
or
pop
xlat
in
jg
pop
jnp
inc
test
leave
dec
dec
pop
movs
push
ror
(bad)
loop
add
inc
lea
fsqrt
pop
imul
mov
jle
pop
pop
stos
jp
or
dec
inc
leave
loopne
xchg
inc
imul
shl
push
mov
outs
or
cmps
cmp
mov
or
sbb
enter
dec
test
mov
xchg
ret
into
push
inc
pop
out
mov
test
xor
mov
fdivp
and
aas
out
cs
cmps
jae
call
and
inc
xor
(bad)
hlt
iret
shl
dec
retf
loopne
in
test
lahf
test
cmps
and
fimul
repz
fidiv
les
(bad)
pop
into
inc
mov
(bad)
jle
xor
aas
out
sbb
rcr
mov
inc
lahf
lahf
test
mov
and
push
mov
and
xchg
lods
jb
xchg
mov
popa
movs
sub
xchg
mov
daa
add
mov
fs
dec
in
sbb
retf
cmp
and
jmp
adc
ror
lock
fwait
das
pop
inc
sbb
dec
lods
jno
fdivr
gs
(bad)
cs
gs
jne
and
in
push
mov
xor
call
mov
adc
out
fisubr
addr16
push
mov
mov
adc
cmps
loope
mov
out
xchg
inc
jp
loop
or
test
xchg
cmp
test
cmp
jnp
dec
pmaxsw
sub
retf
in
mov
jbe
adc
cmp
mov
call
jae
mov
mov
rol
jne
movs
vandnps
jp
add
dec
popf
ja
sub
mov
mov
(bad)
loopne
cmp
xor
retw
xlat
pop
push
push
fdivr
mov
adc
dec
xor
jmp
inc
jl
outs
ds
pop
add
mov
mov
arpl
bound
scas
out
nop
xchg
mov
xor
out
(bad)
div
xadd
jp
mov
adc
mov
inc
or
dec
dec
jne
out
movs
mov
adc
cmp
adc
pop
push
js
pusha
das
mov
adc
push
or
ins
rol
adc
inc
push
add
push
cmp
cmps
xor
loope
inc
fisubr
test
lods
je
mov
call
std
or
pop
pop
push
mov
mov
out
inc
cwde
jbe
dec
dec
nop
and
jbe
enter
sub
mov
int
push
outs
cmp
mov
add
call
sub
fdiv
stc
pop
adc
sub
adc
xchg
imul
xchg
out
inc
push
inc
jns
sub
bound
jnp
mov
ss
icebp
xchg
js
mov
inc
mov
xchg
enter
adc
mov
push
je
(bad)
fdiv
and
or
and
aam
jg
pop
dec
fstp
fild
push
or
inc
aam
add
loope
adc
icebp
fisub
mov
dec
and
ret
inc
or
lods
add
cmp
xchg
lock
sbb
jo
ins
push
xor
(bad)
pop
cmps
dec
movs
(bad)
cmp
cwde
addr16
dec
or
jle
mov
mov
enter
test
inc
aam
sub
stos
call
sbb
in
std
fsub
push
test
sub
jno
push
ins
test
inc
cmc
adc
cmps
pop
pusha
imul
add
add
shl
not
cmps
mov
jmp
inc
mov
test
outs
xchg
push
and
xor
mov
sbb
scas
cmps
pushf
or
pop
add
loopne
ret
mov
push
cmps
cs
mov
pop
mov
lds
push
ins
add
mov
push
lea
outs
outs
sti
and
xchg
shr
mov
outs
and
scas
stos
push
out
scas
sub
pop
cli
add
cmc
hlt
in
sar
jno
(bad)
repnz
cmc
jnp
pop
sti
sbb
ss
je
mov
(bad)
lock
arpl
cs
inc
(bad)
fbstp
test
xchg
push
jno
ficom
rcl
xchg
xchg
hlt
pop
bound
test
jmp
dec
retf
div
fidivr
dec
mov
jnp
mov
sub
loope
jle
mov
shl
push
mov
shl
(bad)
cmc
mov
repz
pop
or
mov
push
sti
xorps
mov
fild
pushf
lock
je
push
aaa
fcomi
mov
inc
mov
push
(bad)
xor
out
(bad)
cmp
lahf
sbb
or
xchg
push
pop
sbb
fidiv
addr16
ins
mov
xor
mov
sub
aaa
popf
mov
in
imul
cmp
inc
cmc
sub
xor
xlat
adc
mov
pop
loope
ss
or
cmps
or
xchg
sbb
pop
or
dec
in
mov
in
xor
out
add
inc
cli
cmp
hlt
jecxz
and
in
iret
sbb
das
sub
aas
sar
lods
adc
cmp
imul
in
imul
fdivp
push
or
cdq
jnp
jle
pop
pop
retf
mov
cdq
sub
shl
pop
jl
dec
fs
dec
jg
xchg
hlt
and
inc
push
out
mov
jp
mov
lahf
mov
loopne
inc
ret
ror
xor
xchg
icebp
es
adc
imul
cmp
mov
xchg
fstp
in
enter
xchg
mul
iret
inc
jmp
sub
mov
jbe
stos
cmp
cmp
push
mov
push
cs
inc
ja
repz
cmp
lods
fs
mov
aaa
mov
jmp
push
sar
in
js
dec
bound
(bad)
mov
dec
clc
lods
test
ret
mov
xor
sbb
aas
inc
push
add
mov
mov
loop
jecxz
jnp
shl
add
enter
adc
sbb
loope
pop
mov
mov
test
jl
push
xchg
push
pop
add
lock
lahf
ja
fistp
fadd
cmp
stos
or
sbb
push
push
lahf
mov
jmp
mov
jns
aaa
inc
adc
mov
leave
jle
in
stos
movs
mul
imul
hlt
inc
xor
cmp
or
jmp
fwait
mov
fisttp
test
jge
fcomp
(bad)
and
inc
daa
aaa
in
mov
ror
push
rol
sub
push
es
mov
lock
stc
(bad)
xchg
mov
loopne
pop
fucomip
add
sti
retf
fild
cmc
cmps
fs
aam
push
movs
jg
cmps
mov
jmp
test
lock
int3
xor
mov
lods
and
cmp
dec
shr
push
aam
xchg
cli
jae
hlt
clc
arpl
jb
mov
cmps
in
dec
and
pop
sbb
jb
loopne
ins
rol
inc
push
jnp
out
fimul
inc
fstp
leave
add
push
add
add
setbe
rcr
mov
in
jmp
jmp
sub
sub
adc
push
push
mov
mov
mov
sub
shl
lea
es
jne
inc
mov
fs
sbb
cmp
add
sbb
jb
dec
in
std
and
stc
test
movs
pop
pop
mov
scas
retf
je
aad
or
adc
mov
jmp
je
sub
adc
adc
aas
inc
add
sub
mov
imul
jnp
lock
fwait
cmp
out
mov
clc
in
jbe
lds
shr
pop
mov
pusha
adc
mov
jle
daa
int3
jmp
mov
jae
inc
(bad)
sub
push
in
mov
jmp
xor
arpl
inc
xchg
or
cmc
sub
or
sbb
xchg
cld
fisub
fild
jle
sub
jp
or
movs
icebp
movs
fwait
cli
gs
inc
loope
loope
leave
xchg
push
cmps
(bad)
ins
sbb
mov
rcl
jno
inc
mov
xor
or
(bad)
push
jae
ret
jmp
dec
out
mov
sahf
jle
pop
pop
pop
dec
ret
and
sub
or
inc
add
icebp
sub
adc
in
xchg
and
and
pop
call
jne
sub
daa
fidiv
idiv
xchg
mov
test
int3
push
and
out
dec
inc
push
mov
idiv
jmp
cwde
add
mul
retf
mov
stc
(bad)
cmp
mov
and
mov
adc
push
adc
xchg
xchg
loopne
ins
mov
and
cs
(bad)
fcomp
lods
arpl
dec
jmp
dec
movs
jecxz
push
pusha
sub
cli
sbb
jecxz
ja
int3
lock
stos
sbb
es
aas
jecxz
jno
xor
icebp
ficom
jmp
xchg
hlt
out
test
aad
je
push
push
int3
mov
jo
ss
jmp
pop
push
adc
scas
adc
push
adc
xor
cmc
lea
jp
dec
sbb
test
ror
lods
sub
and
rcr
(bad)
cmp
mov
pop
(bad)
nop
xchg
retf
icebp
push
xchg
push
cwde
loop
lods
dec
aaa
in
test
enter
dec
xchg
les
loopne
mov
dec
mov
mov
cmp
es
sub
dec
test
adc
int3
mov
test
jge
ffree
dec
stos
and
scas
add
inc
pop
retf
(bad)
push
das
inc
(bad)
cmp
imul
shr
add
ret
push
ja
and
les
in
arpl
cdq
movs
dec
fmul
and
or
sub
imul
xor
mov
fisttp
and
jmp
mov
pop
test
stos
push
jg
sbb
push
adc
inc
and
xchg
add
shl
inc
call
in
inc
jg
sub
repz
sub
push
loopne
xchg
jnp
test
es
nop
aaa
push
jle
cmp
mov
and
add
mov
cmp
fild
push
clc
add
mov
vpgatherqd
mov
stc
jbe
mov
mov
sahf
test
fcom
shr
push
ffree
in
mov
out
sub
ficomp
inc
push
sub
mov
adc
sbb
ins
scas
ret
into
xchg
xchg
push
data16
jecxz
ret
add
push
inc
(bad)
cmp
cli
xchg
pop
ret
mov
fisub
or
addr16
pop
mov
push
leave
fidiv
call
and
clc
popa
pop
mov
xlat
fldenv
push
int3
and
(bad)
mov
push
adc
pop
rcr
pop
cs
dec
rcl
push
daa
fwait
jmp
fwait
mov
in
dec
mov
add
jp
in
arpl
jecxz
outs
inc
lods
and
cmp
and
int3
es
inc
pop
mov
mov
shr
xchg
pushf
mov
in
push
sbb
icebp
in
xchg
jb
std
adc
dec
retf
mov
jae
pop
xor
sti
in
sbb
jmp
xor
rcl
adc
std
fwait
cmps
push
aaa
mov
or
xor
xchg
fcomp
popa
jp
stos
xor
jmp
adc
fsubr
sbb
int3
sahf
inc
call
aas
mov
ret
inc
ficomp
les
mov
popa
hlt
jno
xchg
cli
jbe
adc
inc
mov
in
xchg
std
cld
(bad)
ja
add
inc
add
je
mov
mov
mov
pusha
(bad)
add
xchg
out
push
and
xchg
cmp
pop
outs
mov
and
pop
test
repz
out
inc
fnstenv
int3
push
sbb
shr
xor
(bad)
bound
fucom
or
inc
xchg
out
and
cmp
pop
adc
aas
dec
mov
jecxz
shr
or
jo
dec
or
pop
adc
mov
loopne
(bad)
pop
jecxz
xor
and
call
sbb
imul
jmp
(bad)
sub
push
mov
sbb
pop
in
or
xor
and
out
iret
scas
(bad)
sar
adc
pop
mov
out
call
js
icebp
add
or
aaa
call
mov
sar
jmp
mov
mov
inc
and
fcmovnu
pushf
sbb
jmp
(bad)
out
mov
lods
lods
dec
lods
jp
sub
xchg
sbb
iret
out
sbb
push
or
mov
ins
ror
loope
lock
dec
sub
mov
mov
pop
sbb
ret
mov
cmc
js
jl
mov
leave
imul
mov
and
jno
js
adc
test
add
push
sar
imul
fst
pop
aaa
jecxz
mov
cmp
sar
pushf
pusha
xchg
adc
sbb
int3
push
jo
repz
into
xchg
mov
xor
jns
dec
push
(bad)
or
dec
fstp
jge
jl
adc
ret
in
(bad)
inc
or
outs
sub
outs
rcr
ret
fimul
or
adc
imul
push
std
int
xchg
push
xchg
(bad)
fmul
push
or
pop
(bad)
addr16
cmp
fisttp
ret
mov
adc
sahf
(bad)
icebp
sahf
cmp
jg
sbb
or
gs
inc
push
(bad)
mov
out
mov
inc
fcom
inc
mov
xor
mov
fimul
out
and
push
xor
std
hlt
add
mov
xchg
jle
cmp
push
and
sti
ja
xlat
pop
push
test
xchg
xchg
pop
dec
dec
inc
pushf
inc
add
mov
push
shr
retf
cdq
clc
mov
pop
and
cwde
push
cmp
xchg
push
cmc
pop
cmc
jmp
xchg
psraw
bound
(bad)
shl
dec
pop
sub
out
mov
pop
mov
mov
in
ret
inc
xor
jnp
shr
js
add
cdq
push
mov
cmp
push
mov
les
mov
test
ja
pop
add
fwait
imul
inc
or
jns
mov
sub
rol
push
scas
push
mov
mov
xlat
sub
in
sub
mov
test
add
push
mov
iret
pop
inc
jmp
movs
jl
popf
daa
(bad)
out
xor
mov
mov
scas
outs
mov
repz
movs
mov
cmp
or
cmps
jle
(bad)
out
push
adc
or
mov
sub
xchg
adc
push
pop
lea
neg
cwde
mov
(bad)
out
inc
fistp
retf
(bad)
push
cmp
cmp
sbb
jmp
dec
xor
movs
popf
inc
or
cmp
std
mov
sbb
std
jno
jno
arpl
popa
mov
mov
imul
mov
shr
dec
adc
mov
test
pop
jo
xchg
mov
jbe
dec
pop
sar
aam
pop
dec
(bad)
loopne
cmp
inc
mov
jecxz
ret
shl
inc
pop
les
sbb
scas
dec
dec
xchg
cmc
xchg
das
mov
call
stc
shl
mov
mov
mov
mov
in
movs
xchg
pushf
pop
mov
pop
loop
ret
xchg
fwait
jb
sbb
out
repnz
retf
jno
aad
ins
dec
shl
in
mov
scas
add
inc
pop
js
test
mov
inc
and
int
cdq
jmp
jle
mov
and
lods
mov
xor
push
loopne
ret
repz
xor
sbb
jns
fsubr
and
cld
inc
pop
sub
scas
in
cmp
int
mul
(bad)
jmp
aam
pop
popa
stc
(bad)
ror
sub
push
movs
out
mov
add
xor
and
inc
repz
inc
pop
ror
repz
mov
dec
mov
jns
or
push
or
pop
mov
je
push
push
or
mov
ds
mov
xchg
sar
xor
(bad)
rol
jle
imul
mov
add
jg
cmp
mov
inc
iret
pop
jp
movaps
int
es
ins
push
mov
cmp
(bad)
mov
and
fcmovne
hlt
xchg
push
retf
ins
stos
(bad)
call
cdq
cdq
gs
push
xor
dec
lods
in
sub
push
cmp
sub
sar
xchg
in
or
je
xchg
dec
test
push
mov
aaa
(bad)
dec
and
jecxz
out
imul
ins
pop
sbb
cmp
call
jmp
je
push
outs
ret
lea
ret
inc
fsubr
mov
ret
fisub
dec
mov
xor
adc
test
pop
out
jmp
or
ss
iret
scas
jle
and
jo
xor
jg
pop
dec
gs
adc
pop
lock
push
xchg
cmp
mov
loope
push
dec
shl
sti
xchg
sti
aam
inc
shl
pop
or
scas
adc
jno
test
inc
je
push
imul
fcmovnu
xchg
movs
test
ja
xchg
addr16
in
addr16
jb
mov
cmps
jl
outs
sbb
xchg
jne
or
cwde
mov
push
add
xchg
(bad)
ds
pop
xor
movs
mov
out
imul
or
mov
pop
test
and
stos
push
jbe
xor
mov
push
retf
int3
inc
jge
and
call
fwait
addr16
adc
lea
xchg
hlt
sub
test
dec
fdiv
pop
sub
movs
das
jp
or
fld
sub
dec
inc
popf
fwait
dec
or
pop
xchg
sbb
mov
test
xor
arpl
push
popa
outs
pop
xor
xor
adc
inc
in
jp
idiv
add
test
push
js
xlat
inc
sti
xor
mov
inc
adc
in
pop
and
data16
push
push
pushf
xor
lahf
pop
mov
push
dec
repnz
dec
xor
push
xor
aad
(bad)
test
out
pop
add
out
call
and
jo
and
jmp
cmps
call
ds
loope
mov
sbb
lods
add
movs
sbb
or
test
out
je
outs
nop
out
pop
or
imul
add
add
and
enter
sub
aas
and
das
div
mov
cmp
jl
out
sbb
retf
adc
push
jnp
fdiv
loop
and
leave
xlat
cli
pop
jb
push
out
nop
in
hlt
pop
push
sub
adc
cli
mov
clc
dec
mov
xchg
cmps
shl
popf
sbb
and
(bad)
adc
mov
js
test
fild
add
adc
xor
pop
cmp
jbe
std
mov
cli
xor
test
xor
push
jge
or
cmps
adc
das
cmp
push
pop
neg
jno
push
add
sbb
retf
adc
imul
mov
popa
xchg
daa
and
xor
adc
outs
cmp
ja
inc
sub
(bad)
push
xchg
outs
jge
fs
nop
retf
mov
pop
inc
or
leave
or
inc
mov
dec
repz
mov
add
daa
cmp
xchg
cld
mov
jmp
or
sub
cmp
push
call
mov
mov
push
inc
shl
xchg
cdq
add
or
jmp
cld
fcmovnu
adc
(bad)
lods
xchg
jno
add
fsub
in
mov
sub
loope
and
mov
push
jns
mov
xor
pop
xor
jbe
push
ja
xor
adc
icebp
ret
in
inc
call
sbb
in
or
add
aam
sbb
fmul
outs
adc
pusha
int3
sbb
jecxz
fchs
dec
jmp
push
push
adc
loopne
leave
jo
sub
or
push
fdivrp
xchg
lea
mov
pop
jno
adc
mov
retf
popf
dec
sub
pop
in
or
stc
stos
jmp
retf
ja
and
fs
ror
cld
sbb
mov
leave
mov
repnz
xor
popa
adc
sub
mov
test
stos
mov
xchg
or
in
(bad)
cmp
mov
add
dec
xor
das
push
outs
pop
popa
stos
lock
jb
pop
jns
sbb
fisttp
fdiv
or
test
int3
mov
ja
or
int
popf
sub
push
into
adc
mov
inc
shr
jmp
push
iret
lahf
inc
loopne
data16
inc
icebp
int
call
mov
loop
cmps
dec
add
xor
push
push
mov
sub
fisub
int
pop
in
gs
sub
dec
neg
loope
test
xlat
jnp
mov
fdivr
push
aad
add
cdq
out
les
addr16
inc
out
cmp
das
push
sub
jl
aam
aam
jp
int
test
pop
mov
push
retf
or
inc
shl
les
stc
retf
rcr
es
mov
mov
push
xor
outs
sbb
xchg
loop
les
ds
out
lock
inc
inc
xor
push
stos
cmps
movs
rol
mov
jne
mov
retf
test
shl
push
retf
cmp
popa
mov
into
ins
out
add
shl
outs
cmps
cdq
lods
ja
xchg
xchg
inc
std
mov
test
pop
xchg
clc
mov
push
movs
and
loop
mov
push
pop
into
cmp
dec
xchg
ins
add
lock
pop
inc
push
(bad)
pop
and
cmp
cmp
fisub
imul
and
cld
push
popa
xchg
dec
push
push
fyl2x
rcr
fwait
mov
fs
mov
xchg
sub
jb
sub
aad
pop
adc
mov
mov
cmp
or
pop
add
push
cmp
sbb
xor
sub
cwde
mov
repnz
cmp
leave
popf
push
fsubr
lock
mov
repz
push
push
push
dec
ss
pop
and
scas
mov
xchg
jns
jmp
sub
shl
fisubr
push
mov
inc
rcl
dec
add
in
push
repz
mov
dec
xor
mov
inc
jae
in
lods
frstor
jmp
mov
inc
fcom
mov
dec
mov
sbb
jmp
js
push
adc
add
sub
imul
inc
clc
popa
loop
push
mov
ins
adc
dec
mov
out
sub
pop
push
shl
push
lock
xor
mov
data16
aas
mov
ds
fs
pusha
adc
aaa
retf
mov
and
sub
adc
(bad)
ss
jno
mov
push
mov
cmp
lods
cmps
aas
xchg
hlt
add
mov
sbb
out
into
mov
inc
mov
data16
sysenter
and
adc
in
cmp
mov
push
sbb
pop
push
push
ins
adc
aas
xor
add
fld
mov
retf
mov
cs
xor
cmp
mov
mov
and
fsub
cmp
push
xlat
add
mov
push
or
cmp
xor
dec
adc
sub
test
dec
dec
xlat
fidivr
sbb
push
sub
mov
xchg
daa
xor
and
xchg
sbb
dec
mov
push
sbb
in
jg
aad
sub
add
imul
mov
jmp
lock
mov
mov
outs
mul
mov
dec
xor
in
leave
or
sbb
pushf
(bad)
jmp
and
adc
frstor
add
pop
jp
push
push
jg
xchg
and
enter
retf
aad
dec
jo
pop
jle
jmp
movs
sbb
pop
in
or
enter
sub
inc
jnp
aaa
fldl2t
jmp
xor
sub
inc
or
push
out
stos
sub
push
iret
lods
inc
aam
add
dec
jle
push
enter
cmps
int
pop
fadd
jae
push
adc
mov
cmps
xchg
movs
pop
inc
jbe
xor
retf
clc
sar
or
retf
jmp
push
xchg
push
out
add
lahf
inc
or
xchg
cli
daa
sbb
dec
xchg
test
aam
jnp
mov
scas
xchg
fsub
jae
mov
or
add
test
sub
dec
inc
xor
retf
mov
enter
add
aaa
dec
pop
addr16
bound
jmp
dec
ins
or
jecxz
lock
xchg
xlat
jbe
push
popa
dec
(bad)
sub
and
imul
or
repnz
mov
xchg
js
push
dec
int3
out
dec
cmc
fwait
and
fld
xchg
aaa
xor
(bad)
push
outs
push
test
jle
or
nop
push
dec
or
inc
not
in
clc
jbe
push
mov
jnp
add
pop
cld
out
ret
stc
(bad)
mov
or
gs
inc
arpl
loopne
movntps
pop
push
dec
mov
shl
loop
in
call
(bad)
shr
loop
out
ret
cld
adc
pop
call
sub
imul
dec
and
push
rcl
push
xchg
sahf
jnp
(bad)
jle
addr16
or
and
es
in
(bad)
sub
and
push
mov
mov
jnp
xchg
ins
enter
sbb
call
es
mov
and
dec
lods
gs
and
pop
inc
popf
loope
ret
lahf
enter
push
imul
in
imul
add
inc
retf
fist
(bad)
jo
inc
sbb
pusha
sub
aad
mov
push
pushf
aad
std
mov
neg
add
cmp
stos
or
outs
mov
jnp
call
jae
pop
addr16
adc
clc
fidiv
stos
sbb
stos
jnp
lds
mov
div
inc
repnz
mov
cmps
imul
pop
leave
mov
mov
push
mov
xor
fdivr
in
push
dec
scas
cmp
inc
pop
test
adc
mov
xor
cdq
cmp
scas
inc
xchg
mov
aam
gs
outs
or
inc
and
jno
adc
ins
dec
adc
icebp
sbb
push
cmc
add
add
push
int
hlt
or
mov
fnstcw
xor
push
mov
xchg
cmps
mov
pushf
pop
movs
and
push
hlt
mov
sbb
xchg
sub
aas
stos
and
outs
sub
mov
inc
dec
pop
fidivr
or
fmul
or
je
shr
push
movs
add
(bad)
pusha
int
cdq
inc
push
mov
in
jg
pusha
add
jno
push
add
adc
xchg
pushf
and
pop
cmp
cdq
or
pop
es
jbe
cli
mov
jge
or
dec
jo
ret
retf
mov
ret
adc
fnstsw
movs
int
mov
sbb
mov
adc
faddp
daa
test
aad
int3
jne
fdivr
cmp
mov
lea
movs
inc
mov
fstp
out
ret
lea
inc
jl
popf
cwde
mov
dec
fst
xlat
cmps
xchg
sub
leave
scas
icebp
and
imul
inc
push
xor
adc
mov
bound
sub
rcl
popa
stc
push
mov
jmp
adc
inc
js
pop
jecxz
xchg
aaa
xchg
int
call
pop
push
stos
push
xor
lock
xor
sub
pop
jns
dec
or
and
or
addr16
scas
shl
popf
les
std
jno
into
inc
mov
fistp
and
push
(bad)
sub
fcom
xor
pop
and
js
ret
pop
cdq
mov
push
loop
fbstp
imul
inc
xchg
dec
gs
test
pop
lahf
lock
dec
fnstcw
xor
test
xchg
cmp
push
mov
xor
cmp
icebp
xchg
mov
mov
push
inc
jecxz
popf
mov
mov
pop
popa
arpl
adc
ror
scas
rol
mov
into
call
(bad)
mov
mov
adc
jg
jecxz
inc
imul
sti
lock
rcl
pop
hlt
(bad)
(bad)
shl
lock
pop
pop
ds
push
out
sbb
stc
rcl
push
aad
mov
dec
xchg
ror
pop
mov
mov
pop
and
dec
mov
push
loop
xchg
arpl
mov
idiv
add
ins
xchg
mov
stos
push
fwait
outs
cdq
test
fild
inc
dec
pop
xchg
sub
shl
ja
and
test
push
sti
cmp
repz
push
aad
je
add
jecxz
xchg
loop
loope
pop
(bad)
push
(bad)
sbb
jp
out
or
mov
pop
xlat
mov
shr
dec
and
mov
loope
add
not
and
cmp
jbe
imul
nop
push
adc
and
vmovddup
lahf
and
adc
fdiv
loopne
fst
ret
cdq
xor
loope
pushf
xor
rcr
sub
clc
push
push
sahf
push
fdivr
lods
ret
push
dec
data16
std
sti
ror
and
mov
jno
pop
adc
adc
(bad)
in
out
imul
js
or
(bad)
in
dec
test
add
bound
retf
mov
and
out
mov
lahf
outs
sahf
or
sub
cwde
sub
test
fstp
jno
call
and
retf
mov
call
test
fs
sbb
xor
mov
xor
in
or
push
mov
retf
jnp
mov
leave
xor
push
imul
sti
ins
retf
fwait
sub
inc
cs
fs
push
mov
or
loope
jno
fcomp
loop
popa
lss
aad
sub
cmps
loope
jle
lock
imul
aad
inc
lock
out
movs
mov
pop
fs
or
fdivr
mov
enter
dec
addr16
mov
int3
pop
fisubr
dec
sar
movs
pop
cmp
sti
ret
cmp
jo
cmp
push
jb
add
add
cwde
std
ds
cmp
inc
jl
add
and
push
jp
add
sub
stos
push
(bad)
push
cdq
jo
jp
cmc
stc
in
inc
pusha
neg
mov
dec
hlt
stc
mov
mov
je
fdivr
and
dec
and
cli
shl
jmp
jmp
movs
add
nop
scas
push
pop
dec
in
jb
push
movs
pushf
retf
sbb
xchg
fcom
(bad)
out
mov
gs
adc
push
outs
aad
imul
mov
push
push
daa
int3
pop
xor
cmps
sbb
dec
or
or
dec
dec
push
(bad)
jmp
(bad)
hlt
add
inc
inc
or
ror
and
cld
push
pop
cwde
movs
pusha
cmp
or
call
cld
movs
sub
outs
jbe
add
aad
ret
mov
fidiv
(bad)
out
loope
test
test
js
lock
mov
lea
cwde
stos
dec
aas
cs
mov
sub
mov
cmc
sub
add
push
or
cdq
inc
int
adc
push
outs
cmp
fld
les
inc
push
mov
mov
cmp
in
ins
jmp
xchg
iret
mov
(bad)
addr16
cmp
fwait
jl
pop
jnp
xchg
adc
fmul
push
dec
movs
xor
pop
jecxz
ss
(bad)
cmp
and
test
aaa
sub
test
or
es
das
mov
(bad)
xchg
in
enter
push
shl
pop
fdivr
pop
jno
mov
nop
ins
cmp
sub
int
or
xor
inc
(bad)
(bad)
outs
test
mov
stc
aad
ja
and
in
mov
in
add
pop
mov
shl
xor
data16
(bad)
push
inc
add
cmp
jmp
xchg
aam
js
push
stos
sub
mov
xor
sahf
sub
pushf
jno
(bad)
cli
fsub
sahf
daa
cld
popa
mov
(bad)
jno
jecxz
(bad)
push
in
arpl
cmp
cmps
sahf
cmp
push
jne
scas
mov
jmp
add
or
rol
mov
mov
stc
adc
(bad)
push
in
clc
xchg
stos
mov
xchg
push
add
cmp
jmp
stos
mov
sub
or
je
lahf
xor
lods
jae
sub
mov
into
fstp
dec
xor
ins
jb
dec
mov
mov
push
nop
pop
cmp
jno
xchg
pop
aas
add
dec
ret
sbb
mov
mov
scas
push
mov
shl
mov
fisttp
int3
add
scas
adc
(bad)
idiv
cmp
repnz
in
pop
je
dec
(bad)
aad
pop
xor
rol
jns
add
test
lods
or
pop
or
adc
mov
jnp
shl
adc
mov
fistp
daa
pop
sub
fist
and
nop
loop
mov
aad
or
mov
or
and
sbb
pop
dec
xchg
ja
cmp
mov
scas
jne
and
leave
xchg
ins
cmovo
push
dec
shr
jl
(bad)
imul
js
jl
sti
popa
xchg
cmp
dec
mov
push
mov
(bad)
iret
jmp
xor
push
int
pop
mul
sbb
enter
inc
add
sub
jo
movs
fild
fild
or
lds
inc
sbb
mov
leave
cmp
mov
mov
push
test
leave
dec
ja
call
cmps
inc
in
imul
(bad)
pop
sbb
cli
xor
mov
dec
pop
in
mov
jg
and
mov
fs
dec
retf
dec
(bad)
(bad)
(bad)
xchg
ficomp
test
out
push
cmc
sub
and
call
pop
imul
mov
scas
test
aas
or
stos
mov
inc
jmp
adc
pop
sbb
push
(bad)
cwde
rol
mov
xchg
mov
inc
pushf
push
and
adc
das
pop
imul
xlat
jmp
mov
lock
xor
sti
jnp
mov
cmc
jle
jmp
sbb
fisub
mov
xor
sub
data16
retf
mov
mov
xchg
lods
repnz
push
enter
push
and
(bad)
(bad)
out
push
mov
movs
fldcw
pop
xor
dec
das
lock
add
and
sub
sbb
pop
int
dec
(bad)
iret
push
jno
jno
nop
dec
pop
das
mov
cmp
mov
push
xor
ficom
mov
bound
ret
cmps
(bad)
cmp
or
inc
retf
shl
movs
clc
aas
mov
into
xor
and
scas
lock
les
lods
test
mov
mov
imul
test
les
dec
jnp
mov
in
push
xchg
mov
clc
jnp
mov
test
pop
mov
cs
in
outs
sbb
stos
jne
js
retf
mov
lds
ror
adc
mov
sub
inc
repnz
pop
inc
leave
(bad)
jno
cs
cmp
shl
xor
mov
push
inc
cmp
xchg
mov
sub
fwait
out
inc
xchg
push
mov
iret
mov
xor
xlat
ins
call
test
cdq
mov
stos
cld
or
into
adc
jne
(bad)
fcomp
fnsave
outs
sti
or
cmc
mov
fmulp
into
and
dec
jle
repnz
les
ja
adc
call
sti
jne
adc
fs
js
popa
xchg
xchg
push
aaa
js
addr16
jmp
inc
sub
gs
ds
test
mov
jno
sbb
jb
movs
into
adc
call
int3
or
or
adc
sbb
popf
lods
sbb
or
ins
addr16
pop
in
cwde
cmps
jle
daa
stc
lods
cmps
ss
xchg
push
dec
pusha
les
and
inc
fwait
mov
jo
outs
cmc
loop
(bad)
movs
jge
(bad)
les
std
inc
repnz
loop
je
pushf
ins
fld
out
lods
mov
pop
adc
sahf
mov
imul
and
lods
retf
cs
cmp
stos
mov
mov
jns
push
movs
cmp
inc
or
jge
add
cmp
mov
cmps
cwde
pop
inc
loop
imul
push
sub
pop
jmp
clc
and
xchg
cmp
push
or
xor
pop
call
cmp
pop
mov
cli
pop
fnstsw
dec
push
arpl
and
xor
mov
out
call
js
jl
cmp
cmc
sahf
adc
arpl
mov
mov
test
dec
push
xor
and
dec
ins
inc
mov
xor
jl
dec
imul
push
push
ret
rcr
pop
div
out
mov
aas
leave
and
jg
fistp
sahf
std
fs
jg
fisttp
cmp
fadd
(bad)
out
and
mov
movs
pop
xor
or
sub
imul
xchg
push
(bad)
ins
xchg
or
cwde
test
cmp
cdq
xchg
inc
stos
cmp
dec
cld
cmp
aam
push
js
out
sahf
dec
xchg
loope
adc
mov
sbb
push
dec
sbb
imul
fdiv
lock
push
pusha
cmp
sub
mov
stc
inc
jp
dec
sti
gs
mov
add
mov
mov
stos
xchg
loopne
ret
push
iret
test
xchg
mov
stos
sbb
push
cmp
(bad)
cmps
inc
sbb
ja
test
std
xchg
xchg
adc
gs
stos
mov
adc
int
loopne
adc
push
clc
and
popa
lahf
sti
stos
daa
sar
mov
in
adc
cli
mov
mov
faddp
notrack
sub
arpl
pop
pop
rcl
leave
mov
scas
test
sar
mov
cmp
mov
aas
movs
sub
loop
push
mov
out
mov
jmp
fnstenv
mov
jbe
sub
fisubr
jl
outs
pop
inc
call
inc
add
xchg
(bad)
cld
dec
mov
lea
lea
jle
jle
lods
shl
aam
dec
cmp
rol
neg
test
jmp
lahf
cmp
adc
jecxz
jo
scas
lea
push
hlt
movs
xchg
call
ja
std
inc
call
call
add
ins
cmps
shl
test
inc
jmp
in
push
mov
rol
jo
sub
ret
hlt
clc
gs
mov
and
fwait
sub
stos
mov
push
retf
jle
ds
rol
add
push
mov
mul
jp
je
movs
xchg
sbb
lods
xor
(bad)
cmp
adc
adc
es
lock
stos
mov
stos
adc
cdq
(bad)
cmc
or
ret
daa
fimul
fld
mov
xchg
arpl
xchg
fidiv
(bad)
bnd
jns
lock
call
not
aad
lea
leave
sub
jmp
outs
call
mov
mov
pop
paddq
ss
outs
push
fcom
xchg
mov
nop
mov
or
out
push
sub
mov
ins
mov
pop
xchg
jmp
jno
mov
repnz
inc
mov
cmp
add
imul
mov
fisub
fcom
fnstcw
dec
dec
xchg
pusha
rol
sti
mov
retf
(bad)
pop
xor
sbb
xchg
inc
jae
lds
mov
mov
ins
jae
mov
dec
mov
imul
stos
inc
cdq
and
lock
jbe
xchg
fbld
mov
iret
mov
lods
jb
bound
mov
jp
mov
inc
inc
dec
repz
sub
cwde
xchg
add
mov
mov
imul
jns
out
xchg
lahf
adc
shl
or
test
mov
ds
jle
ret
fucomi
mov
xchg
inc
xchg
cmp
xchg
shl
push
(bad)
xchg
stc
mov
mov
push
cwde
mov
clc
pop
mov
mov
aam
cmp
retf
outs
push
mov
fnstcw
jbe
div
jge
jge
inc
mov
and
cmps
fst
test
aaa
in
inc
cld
mov
push
test
dec
shl
push
cmp
setg
or
add
mov
cmp
popf
jecxz
adc
fcmovnbe
call
inc
xlat
xor
sub
loope
inc
test
jb
xor
inc
outs
pop
lahf
mov
or
cld
call
pop
push
pop
xor
xor
icebp
(bad)
mov
in
jp
sub
and
cli
or
mov
je
pop
sub
xor
jp
shr
ficomp
mov
sub
mov
pop
xlat
xchg
mov
cmp
sub
out
in
fild
adc
xchg
xchg
adc
lods
fidiv
sbb
mov
outs
(bad)
adc
adc
cmps
stos
sbb
pop
push
loopne
mov
or
push
sub
sub
or
inc
pop
dec
xchg
inc
inc
fs
out
and
imul
iret
repz
inc
jle
mov
cli
pop
mov
hlt
aas
dec
or
and
in
xor
lods
and
sub
mov
in
mov
hlt
rol
pop
pop
movs
aas
push
in
les
xlat
popa
jns
test
test
std
popa
sahf
mov
xchg
inc
dec
inc
lahf
sbb
pushf
and
nop
add
pop
adc
xchg
xchg
fcmovnbe
mov
lock
dec
xchg
mov
rep
pop
mov
ja
outs
xor
ss
dec
xor
stos
fidiv
icebp
pop
sub
test
inc
jno
gs
loope
pusha
add
in
std
or
xor
loopne
push
add
jmp
in
or
dec
inc
mov
push
jmp
add
scas
aaa
mov
xchg
sbb
scas
cdq
ins
cmp
cmp
xchg
bound
inc
inc
enter
call
out
xchg
mov
fs
lods
sub
pop
cmp
or
out
adc
aad
shl
pop
shl
mov
jecxz
in
fidiv
test
sbb
loop
lock
call
push
sti
leave
pop
xor
test
mov
pop
mov
adc
lea
sub
and
mov
and
sbb
sti
dec
movs
jmp
inc
test
jmp
mov
cld
mov
inc
loope
enter
test
jg
mov
add
inc
sub
ret
xor
icebp
arpl
test
jmp
ja
and
adc
ins
js
adc
fimul
lods
xchg
js
sub
or
or
outs
xor
inc
mov
retf
mov
cmc
or
sub
dec
cld
jge
ins
jge
sbb
pop
jecxz
outs
in
push
call
retf
ficom
sub
xor
mov
push
retf
inc
xor
push
mov
and
or
mov
repnz
dec
jp
dec
rcl
xor
and
out
mov
iret
mov
inc
push
loopne
(bad)
fist
fwait
icebp
shl
mov
push
out
(bad)
jge
jbe
je
clc
jp
sbb
push
aaa
out
sub
sbb
sbb
and
arpl
push
mov
xor
lods
adc
pushf
(bad)
loope
sub
inc
lds
push
stc
stos
out
pop
mov
xchg
dec
cmp
xor
mov
sti
ror
jge
xchg
movs
mov
pushf
scas
mov
shr
or
je
xchg
xor
or
imul
ins
adc
mov
mov
dec
dec
movs
retf
mov
in
stos
lods
gs
and
shl
retf
adc
int3
mov
fwait
adc
paddq
popa
icebp
dec
sti
mov
std
dec
shr
dec
fcom
test
push
jmp
cmp
adc
or
stos
movs
addr16
ret
and
pop
imul
fs
cmp
mov
mov
or
fwait
(bad)
(bad)
xchg
(bad)
adc
mov
movs
out
scas
outs
shr
fistp
jmp
iret
adc
and
dec
imul
mov
pop
out
jge
mov
imul
retf
(bad)
sbb
inc
push
sbb
xor
push
pop
add
stc
ds
inc
jecxz
call
and
sub
xor
aad
lea
into
xor
push
fs
jb
mov
push
pop
mov
ins
pop
cmp
pop
sahf
pop
pop
jecxz
sub
and
jge
ss
dec
mov
push
mov
loopne
daa
fnstenv
or
aas
xchg
sbb
ins
and
pop
repz
fisttp
test
in
or
mov
inc
stc
cmp
ficom
out
sar
ror
test
repnz
push
enter
or
jmp
lods
dec
push
sbb
popa
and
sar
mov
xor
push
inc
mov
imul
stos
and
lock
cmp
jnp
pop
or
popa
lea
gs
retf
xor
xor
idiv
in
mov
jno
imul
mov
xchg
sti
cmp
(bad)
imul
jl
lahf
push
je
jne
jp
cld
scas
cli
mov
xor
out
(bad)
or
and
call
xlat
mov
call
xor
inc
fnsave
sub
and
das
iret
lods
sar
push
ficomp
aam
mov
or
or
mov
push
jmp
ret
test
retf
and
jb
or
sbb
sar
mov
cmp
push
ins
popf
mov
js
leavew
push
lds
sbb
adc
xchg
(bad)
xor
cmp
xlat
mov
clc
mov
pop
mov
sub
cs
test
mov
inc
int
mov
fstp
stc
cwde
and
jg
mov
imul
in
fdiv
lds
pop
xor
xor
add
dec
jmp
and
or
push
movs
into
add
push
xlat
mov
call
pop
cdq
iret
jo
daa
fwait
cmp
jno
cmp
mov
inc
maskmovq
rcr
xor
jne
mov
cmps
adc
cmps
imul
fiadd
add
and
cmp
(bad)
idiv
stos
scas
sahf
xor
retf
or
push
push
cmp
sub
retf
jecxz
dec
xchg
xchg
aam
test
adc
js
(bad)
mov
adc
not
xchg
popf
(bad)
(bad)
xor
icebp
int3
dec
cmps
dec
data16
sbb
sub
jo
xor
cmp
mov
in
stos
sub
xor
rcl
cld
lock
push
mov
sub
aam
adc
aam
bound
push
jo
fimul
fistp
in
mov
lds
push
add
xchg
pop
xchg
leave
xor
enter
mov
(bad)
fsub
movs
dec
dec
jns
mov
cmp
pushf
stos
repz
cwde
sbb
sbb
sahf
sbb
stc
mov
xor
fnstenv
sbb
ja
push
xor
inc
stos
pusha
cld
inc
into
je
jno
cmp
sbb
dec
push
jnp
idiv
add
shr
and
shl
jno
inc
jnp
cmp
sub
or
(bad)
cdq
outs
and
sahf
xor
mov
sub
pop
popf
sahf
jb
call
mov
xor
sbb
scas
int3
sub
movntq
fs
jle
mov
cdq
js
fisubr
fcomp
xchg
outs
and
test
push
scas
into
out
icebp
or
out
sub
int
stos
pushf
sbb
fcomp
jns
xchg
inc
ins
bound
jl
rol
jmp
(bad)
fs
les
lahf
rcr
lods
xchg
mov
pop
adc
jge
mov
mov
aam
fwait
cld
js
data16
fisub
test
fdiv
retf
pop
pop
push
push
inc
pop
pop
ins
adc
push
jl
aaa
or
bound
push
idiv
cli
cmp
outs
in
pop
cmc
xor
pop
imul
movs
cld
mov
std
hlt
vmwrite
stos
(bad)
xchg
jne
loop
push
in
pop
test
sti
pop
mov
lds
pop
sbb
(bad)
mov
jg
and
cmp
cdq
xchg
cmp
ins
iret
xchg
xchg
test
loopne
cmc
in
xor
sub
loopne
ficom
cmps
cmp
pop
imul
aas
cwde
mov
jno
push
rcl
sbb
imul
stos
nop
and
mov
or
fst
pop
inc
test
out
xchg
add
cmp
push
pop
mov
test
inc
sbb
mov
(bad)
fstp
fsub
dec
push
inc
fst
or
push
xchg
lea
mov
push
xchg
and
stc
loope
adc
mov
xchg
or
jae
popa
mov
sub
inc
jp
add
sub
and
div
or
xor
loop
loop
adc
pop
out
inc
(bad)
test
je
stos
dec
add
hlt
cli
adc
mov
dec
mov
xchg
cmps
stos
(bad)
loop
(bad)
cmps
pop
aad
or
cdq
pop
cmp
ins
xchg
xchg
or
dec
sub
push
add
ins
xchg
sub
fnsave
(bad)
(bad)
fiadd
lods
inc
aaa
xchg
dec
mov
test
mov
jo
and
fwait
pop
cmp
ins
mov
mov
pop
mov
es
imul
and
sbb
xchg
or
sub
fistp
movs
ret
retf
repnz
popa
pop
cmp
push
or
lahf
inc
lds
rcl
mov
push
das
fnstenv
adc
pop
pop
cwde
stos
rol
in
fwait
inc
xchg
inc
repz
pushf
mov
mov
ret
stc
or
hlt
mov
xor
mov
sub
mov
mov
clc
pop
mov
sub
sub
inc
lods
ds
and
jo
or
dec
scas
scas
shl
daa
push
scas
mov
fadd
clc
in
inc
popf
dec
adc
pushf
adc
(bad)
xchg
(bad)
mov
outs
adc
jne
imul
shl
pusha
int3
adc
push
sbb
add
or
pop
rol
in
or
sub
or
retf
dec
mov
push
mov
jmp
dec
test
test
inc
iret
xchg
cmp
addr16
mov
adc
xchg
neg
mov
sub
adc
call
lods
push
cmp
mov
sbb
jbe
cmp
ror
dec
mov
push
int
sub
gs
inc
call
les
push
sar
test
imul
sahf
jae
pushf
retf
std
enter
stos
test
jno
sub
cmps
xlat
mov
mov
mov
and
jo
jl
fwait
xor
push
push
dec
fist
jmp
xchg
sub
fwait
mov
xchg
xor
imul
cmp
rep
shr
mov
movs
cmp
js
mov
sar
cmp
jmp
hlt
aam
les
or
xor
fnstenv
inc
jb
jns
pop
mov
mov
mov
hlt
sbb
xor
loopne
mov
or
iret
lods
movs
imul
xor
pop
enter
mov
call
inc
ins
mov
dec
test
data16
or
popf
and
dec
out
lea
les
or
outs
daa
dec
stc
pop
add
adc
push
sbb
cmc
pop
inc
push
push
into
push
adc
mov
dec
dec
into
pop
xor
and
(bad)
aaa
iret
arpl
das
pop
xor
mov
mov
mov
call
data16
loope
shl
and
mov
adc
pop
mov
cli
(bad)
push
xchg
mov
jnp
stc
xchg
add
or
outs
iret
mov
sbb
test
test
xchg
movs
mov
sbb
mov
adc
lahf
cmp
push
sub
mov
pop
call
or
ss
cmc
popa
mov
addr16
or
mov
and
add
stc
out
ror
int
xchg
dec
pop
imul
mov
sti
mov
pop
push
arpl
enter
add
jnp
push
add
push
aas
pusha
js
or
sbb
adc
loop
push
test
mov
add
jle
push
xor
jge
cmp
mov
mov
add
push
cmps
cmp
and
aam
mov
test
sbb
adc
sub
mov
add
mov
sti
jno
mov
dec
(bad)
(bad)
pop
sbb
dec
ja
dec
int
or
out
mov
adc
jg
xchg
fldcw
dec
xor
ror
lods
cmp
pop
adc
or
dec
xor
adc
push
dec
mov
ins
enter
mov
(bad)
sbb
shl
rcr
ss
stos
pop
jne
add
xchg
dec
mov
mov
test
or
sub
inc
adc
mov
inc
push
push
int3
sub
loopne
cmp
jno
std
push
sbb
pop
pop
adc
push
fst
xchg
pop
mov
push
cmp
cmp
dec
enter
xchg
mov
mov
lods
mov
dec
loope
jo
std
sub
push
mov
inc
or
aaa
shl
pop
lds
mov
xrelease
dec
cmp
movs
pushf
neg
sbb
sub
shl
repnz
push
icebp
(bad)
cmp
dec
aas
sbb
sub
sbb
fsubr
nop
xchg
inc
rcl
sub
adc
jp
sub
shl
nop
mov
mov
nop
xchg
aas
ins
dec
movs
inc
mov
loopne
push
dec
leave
aad
adc
rep
lods
adc
add
adc
or
aam
cmp
sub
call
mov
aas
ds
leave
cmps
aam
rcl
je
test
aaa
hlt
cmps
jl
push
pop
je
fsub
pop
xchg
mov
sub
imul
sbb
jg
mov
fwait
scas
imul
push
outs
mov
cwde
in
mov
push
push
mov
gs
xor
out
push
mov
mov
dec
data16
adc
rcl
int3
fstp
dec
push
test
bound
and
jno
mov
sub
scas
mov
xor
push
cmc
mov
rcr
sbb
les
(bad)
(bad)
mov
pop
cmp
adc
fcomp
bswap
cmp
mov
add
in
add
js
xchg
test
mov
xor
(bad)
loop
mov
cmps
sub
mov
push
or
call
jb
pop
enter
cdq
ret
jecxz
push
dec
(bad)
mov
xor
fdivr
xchg
adc
push
jo
inc
inc
xor
iret
div
sub
outs
mov
pop
test
shl
inc
ja
mov
mov
mov
stos
mov
sub
stc
mov
movs
(bad)
das
(bad)
aaa
out
(bad)
test
test
(bad)
jp
sub
mov
loop
pusha
or
paddusw
xor
xchg
or
mov
sti
jne
bound
rcl
out
(bad)
pop
cs
leave
repz
js
pop
arpl
jl
mov
mov
cmp
xor
retf
xor
push
repz
mov
pop
retf
call
fdiv
shl
loope
pop
retf
lahf
xchg
and
lods
cmps
mov
sbb
outs
mov
mov
add
movs
fldenv
lds
add
(bad)
retf
bound
das
push
fs
(bad)
xchg
adc
or
push
xlat
jb
fisttp
lds
jl
addr16
div
dec
jbe
movs
scas
push
jno
and
adc
out
pop
fs
iret
fcom
ret
inc
and
bound
sub
or
(bad)
jle
adc
add
test
cmp
push
pop
cmp
jae
push
es
fidiv
icebp
js
ins
cmp
adc
jmp
cmp
dec
mov
mov
arpl
and
data16
adc
xchg
out
ins
jne
push
jle
inc
(bad)
int3
or
icebp
push
adc
sbb
or
in
sbb
jg
add
out
mov
jge
xchg
test
adc
mov
pop
ret
or
sar
jmp
jmp
adc
js
retf
add
adc
mov
ds
cmp
sub
push
sub
and
pop
pop
call
sub
cmp
xor
je
ins
inc
and
pop
cwde
xor
xor
mov
cld
sahf
jb
dec
(bad)
sub
popf
std
jns
mov
xchg
outs
gs
hlt
pop
mov
mov
add
xor
popa
mov
sub
push
mov
pop
ss
add
sub
and
mov
dec
dec
outs
mov
retf
cwde
sub
add
pop
sbb
jl
mov
push
call
sub
jb
jnp
mov
pop
mov
and
push
xchg
xor
int3
mov
dec
pop
movs
test
scas
rol
adc
dec
inc
repnz
sub
pop
loope
add
inc
je
adc
into
cmps
ins
dec
retf
mov
and
shl
pop
inc
test
shr
fisubr
pop
mov
rol
sbb
fcomp
cmp
push
fnstenv
rol
movs
jmp
or
xchg
popf
pop
lods
leave
dec
add
xor
adc
lods
dec
cmp
add
scas
xchg
mov
push
pop
les
je
push
xor
or
or
js
xchg
sub
mov
rol
push
outs
mov
fiadd
xchg
pop
xchg
sar
pop
dec
shl
ins
mul
xor
cdq
ret
out
sahf
fld
cmp
adc
push
in
and
fidivr
xor
sahf
icebp
test
icebp
push
frstpm(287
push
movs
xchg
mov
imul
imul
sbb
sub
rcl
add
popf
lock
pop
cmc
in
adc
inc
gs
lds
xchg
mov
inc
jmp
cmp
lds
ret
or
(bad)
xor
arpl
jnp
shl
ret
cmp
in
stos
ja
sub
pop
and
and
mov
daa
pop
jge
les
das
(bad)
xor
pushf
pop
shr
sub
adc
ficomp
sub
outs
in
xchg
into
mov
sub
pushf
pushf
enter
and
sbb
xchg
sbb
(bad)
jne
and
push
les
retf
ss
mov
jp
sub
in
mov
(bad)
jmp
mul
dec
mov
adc
sbb
pop
or
int3
out
lea
mov
pop
cmc
pop
test
(bad)
adc
adc
sub
jge
das
pop
cmp
mov
push
mov
sub
lods
call
pusha
mov
(bad)
jb
adc
fsub
out
inc
fldenv
jmp
into
repnz
mov
scas
es
xchg
xor
and
or
and
fs
fcomp
add
std
repnz
xchg
or
rcl
and
push
sub
into
sbb
add
imul
popa
bnd
push
inc
iret
dec
adc
and
scas
inc
(bad)
and
bound
(bad)
cmp
cmp
lds
push
retf
icebp
xchg
xor
pushf
jge
fst
ja
test
inc
cdq
div
xchg
icebp
in
mov
call
pop
cs
pusha
je
jle
fidivr
call
sbb
xchg
loopne
mov
(bad)
add
adc
fidivr
jns
xchg
lods
frstor
sbb
push
pop
sbb
mov
xor
jmp
mov
cmp
int3
cmp
leave
fnstcw
cmp
ds
pop
mov
push
sub
cmp
clc
test
mov
imul
int3
mov
lods
xor
test
call
mov
call
in
(bad)
movs
mov
out
neg
stos
xchg
mov
je
movs
out
fwait
repz
mov
and
clc
jae
pop
dec
sub
xlat
dec
jle
aad
inc
icebp
and
data16
int3
pop
test
lods
sahf
ret
fisub
ficom
sbb
xlat
xchg
xchg
or
mov
pop
lock
sub
test
jle
xchg
cmp
jae
push
xchg
dec
test
dec
repnz
sahf
adc
ins
call
mov
sbb
push
fdiv
lods
test
pop
cmp
xchg
cmp
fdiv
xchg
hlt
les
and
loope
pushf
mov
pop
push
xchg
and
sub
mov
pushf
lods
cmp
cmc
aaa
sbb
or
or
pop
and
jnp
xor
ja
pop
sub
mov
retf
imul
pop
js
and
imul
punpckhdq
jmp
jle
inc
xchg
mov
rcl
inc
popa
lods
ret
push
ret
call
pusha
sub
daa
or
cwde
out
les
mov
and
les
mov
xchg
nop
fwait
xchg
ins
rol
mov
cld
shr
jo
xor
or
lods
inc
lods
sbb
mov
ja
jo
mov
inc
and
(bad)
(bad)
inc
loop
push
pop
shr
inc
lahf
pop
push
sub
xchg
inc
fstp
cdq
std
mov
push
adc
and
push
arpl
add
adc
std
inc
retf
xor
sahf
jne
clc
cmp
(bad)
repz
push
inc
test
cmp
jmp
mul
mov
aad
pop
xor
enter
dec
dec
lahf
pop
sbb
add
sbb
retf
jmp
and
fwait
add
test
dec
push
jno
scas
cdq
or
stc
dec
mov
cmp
add
mov
ins
adc
xchg
push
in
mov
int
mov
stos
add
mov
mov
xchg
lea
xor
pop
pop
or
mov
mov
xchg
mov
and
pop
daa
mov
xor
inc
ret
in
call
add
retf
in
add
aam
dec
and
xor
mov
xchg
jmp
pop
or
lods
cdq
mov
mov
sub
arpl
or
js
mov
sub
or
mov
test
es
ins
repz
push
jns
out
mov
and
push
jbe
sbb
jmp
sbb
retf
push
mov
movsx
xchg
push
(bad)
mov
pop
mov
into
adc
add
mov
or
mov
cmp
stos
aas
xor
cmc
dec
cld
retf
jmp
in
push
out
js
cmc
and
into
and
jp
inc
movs
cmp
repz
cs
fisub
and
pop
fs
pusha
setno
mov
iret
bound
mov
ds
repz
aam
out
int3
rol
test
ins
imul
adc
mov
adc
dec
(bad)
mov
xor
das
sbb
cmp
ret
int3
jno
mov
aam
mov
mov
push
lds
xchg
and
ds
pop
stos
and
mov
ret
into
mov
cdq
adc
js
gs
mov
mov
mov
dec
cmp
in
pop
fwait
(bad)
xchg
mov
pop
pop
push
push
xchg
xchg
sub
mov
mov
in
or
jne
jb
fimul
and
daa
xlat
inc
imul
rcl
jns
aas
mov
(bad)
fs
in
lahf
ret
dec
dec
dec
imul
sar
retf
cmps
jne
xor
add
fcomp
mov
aas
rol
sahf
xchg
mov
fbld
sub
pushw
dec
jae
cwde
add
mov
add
push
push
gs
mov
jb
adc
popf
sbb
pop
in
pop
ret
xchg
dec
jo
jl
push
jb
jnp
cmp
pushf
sar
icebp
mov
call
lock
(bad)
and
mov
dec
outs
call
int3
inc
push
mov
push
test
jecxz
stos
mov
pop
cwde
mov
push
cs
in
jae
dec
cs
mov
and
jmp
cmp
gs
retf
lods
je
mov
in
dec
add
mov
stos
mov
data16
xor
aam
xchg
pop
or
inc
push
and
movs
ds
neg
dec
mov
shl
push
dec
and
push
loopne
inc
push
push
adc
ret
push
imul
fidivr
cld
(bad)
mov
inc
shl
pop
into
outs
jno
push
xchg
dec
xchg
inc
adc
jmp
loopne
inc
push
jmp
push
not
lock
mov
es
jb
or
inc
mov
pop
mov
jbe
jecxz
movs
cwde
jmp
nop
out
aad
jg
pop
mov
add
sbb
sar
scas
inc
leave
push
xchg
mov
test
movs
jmp
cld
mov
mov
jg
jp
pop
hlt
mov
cdq
pushf
inc
or
pop
cmp
xor
retf
(bad)
bound
lea
leave
jge
or
jmp
pushf
inc
call
sahf
add
cmp
popf
add
cmp
pop
cmps
xor
pop
jmp
inc
inc
adc
mov
clc
outs
icebp
dec
enter
in
inc
jns
mov
or
pop
loopne
dec
les
push
fistp
ins
or
enter
aad
add
add
out
mov
scas
fwait
shl
mov
sbb
pop
jl
cmp
jne
jl
test
(bad)
and
cmps
pop
and
add
push
mov
loopne
inc
add
jmp
out
mov
mov
jge
pusha
jns
shr
and
enter
mov
or
mov
mov
mov
lods
cmc
sub
movsx
icebp
fisubr
pop
jmp
fdivr
or
adc
xchg
jl
adc
cmp
add
xor
hlt
dec
iret
rol
mov
mov
jnp
repnz
mov
dec
add
shl
xor
lods
jle
mov
cli
ror
js
pop
lea
test
not
sbb
data16
add
jle
mov
lock
or
stos
mov
int
shl
mov
jo
cs
or
test
test
cmp
movs
pop
loopne
adc
cmp
sbb
sbb
unpckhps
xor
enter
fldlg2
cs
cld
rcl
lods
or
mov
(bad)
jmp
sti
fdivr
mov
ss
or
stc
xchg
mov
push
push
add
(bad)
pop
sub
xchg
test
daa
pop
cmp
addr16
daa
iret
std
cmps
fwait
xchg
mul
xor
sbb
jb
push
daa
inc
stos
fiadd
pop
pop
loopne
mov
pop
lea
test
popf
outs
std
jl
repz
and
dec
xchg
mov
pop
inc
fwait
mov
or
lahf
stos
out
jnp
aaa
in
jne
pushf
and
pop
xor
sar
jns
add
stos
mov
sbb
xchg
ror
ins
and
(bad)
cmps
adc
and
repnz
sub
and
lea
add
inc
mov
mov
outs
and
mov
fs
mov
dec
dec
cli
or
dec
shr
push
mov
repz
retf
imul
rol
mov
xchg
inc
(bad)
test
xor
jle
int
cld
sbb
inc
ficomp
sbb
imul
pop
cld
dec
pop
popa
jb
cli
mov
or
lods
jg
movs
loop
pop
sub
sbb
mov
ins
cld
mov
push
inc
lahf
(bad)
push
mov
dec
int3
pop
inc
out
pop
jno
repz
lods
push
xchg
outs
mov
lds
lods
sbb
mov
cmc
mov
cmp
ror
inc
popf
outs
fadd
mov
ret
test
mov
push
xlat
sbb
jmp
mov
push
or
cmps
shl
xchg
pop
jp
in
movs
xchg
icebp
les
aam
adc
outs
inc
fisub
dec
scas
test
fcom
and
sub
push
pop
fisub
fwait
ins
cmp
mov
xor
pop
sbb
mov
mov
lods
pop
popf
dec
ja
xchg
mov
or
pop
dec
cli
dec
or
xor
jo
gs
mov
ret
ror
jmp
in
outs
jge
pop
push
icebp
mov
xor
adc
push
xchg
and
stos
inc
push
adc
aad
sbb
sub
leave
stc
pop
cmp
push
inc
dec
lea
(bad)
fcom
or
jno
push
ret
popf
push
inc
push
test
jmp
movs
mov
fdiv
cld
xor
inc
and
mov
mov
jp
pop
mov
adc
and
inc
dec
shr
push
ja
xor
not
movs
and
fisubr
inc
jmp
int3
aad
leave
adc
mov
or
jns
jae
jl
push
xor
fs
out
mov
in
daa
not
push
xchg
jmp
or
mov
mov
sub
leave
inc
jp
jge
ror
jno
test
dec
repnz
mov
cmps
jne
daa
xor
xor
aad
lods
das
pushf
push
sub
add
int3
dec
mov
ror
icebp
xchg
or
or
or
push
sbb
mov
fcmovbe
(bad)
hlt
cdq
xor
lods
mov
aam
jle
aam
sbb
mov
xchg
aam
or
mov
mov
sub
sub
scas
xchg
inc
in
cmp
call
xchg
sub
cmp
xchg
mov
stc
jecxz
inc
add
mov
xchg
repnz
or
sub
(bad)
sahf
in
mov
mov
(bad)
dec
fldenv
div
cmp
cdq
jae
push
ficomp
jb
or
mov
pop
rcr
mov
push
mov
into
cdq
xor
loopne
dec
cmps
fcmovb
(bad)
push
mov
rcr
xchg
cli
sub
sub
xchg
(bad)
fdivr
rol
in
mov
xchg
pop
dec
dec
stos
mov
int3
push
test
ja
mov
pop
sbb
xor
and
push
movs
sar
add
pop
shr
retf
(bad)
aam
sbb
repz
or
mov
call
mov
enter
mov
movs
leave
aam
leave
jl
inc
mov
ins
(bad)
xchg
ins
add
jns
fisttp
jl
cld
push
retf
mov
out
and
xchg
loop
push
jbe
mov
mov
mov
dec
jmp
std
cmp
adc
bt
lods
jbe
cli
fidivr
icebp
leave
or
test
lock
loope
pop
call
xor
leave
clc
sti
loope
scas
mov
inc
imul
pusha
pop
jmp
movs
clc
dec
xchg
aad
lock
add
cmp
mov
gs
inc
test
ret
leave
pop
pop
jnp
xor
cmps
sub
mov
mov
lods
daa
jae
retf
xchg
int
mov
ret
push
lea
dec
(bad)
fsub
pop
inc
retf
or
xchg
pop
xchg
mov
mov
pop
mov
xchg
popa
xor
dec
addr16
test
sar
add
test
call
sti
jmp
data16
add
add
and
fdiv
jbe
rcl
mov
or
pop
retf
cmp
fmul
paddsw
in
repz
xchg
xor
xchg
ja
fidivr
das
and
mov
idiv
sub
or
mov
mov
pop
adc
pop
xor
cmp
shr
cwde
sub
mov
fabs
int3
pop
jmp
mov
outs
in
fnstenv
bound
cmp
cmp
clc
not
pop
pop
cwde
mov
push
xor
test
lods
lea
(bad)
dec
jp
ja
arpl
es
inc
mov
sbb
xchg
dec
nop
xchg
push
mov
adc
sbb
leave
and
push
push
jnp
lock
jb
inc
nop
mov
push
sti
xor
sub
inc
mov
xchg
popa
je
cmp
(bad)
pop
pop
xchg
dec
and
ror
cld
mov
jg
je
repnz
es
sbb
fist
sahf
or
sub
jle
jle
mov
imul
pop
es
cmp
pop
pop
dec
jbe
fwait
sbb
in
aam
popf
add
popf
ret
xor
push
ins
sti
mov
fist
(bad)
cld
jbe
(bad)
mov
out
sbb
jl
fisttp
sub
les
pop
retf
jge
lahf
mov
pop
call
sub
xchg
push
pop
pushf
sbb
pop
leave
outs
fidivr
mov
mov
jb
popa
dec
outs
dec
pushf
sub
jp
fcomp
div
cld
retf
ficom
dec
push
mov
hlt
movs
fcomp
fiadd
mov
inc
push
adc
pop
add
jo
xor
lds
(bad)
sub
leave
adc
(bad)
add
pop
mov
dec
mov
ror
retf
mov
mov
mov
out
xor
sar
pop
es
cmp
rcl
dec
mov
dec
hlt
cmp
mov
pop
dec
popf
mov
hlt
es
nop
and
mov
cmp
call
aad
and
pop
test
mov
rcr
fldlg2
add
dec
xor
cmp
cld
or
ins
cmp
sbb
arpl
and
pop
sub
xchg
and
pop
xor
jg
fistp
sti
cmp
add
pop
(bad)
sbb
xchg
mov
mov
rol
out
sub
or
push
sti
sbb
dec
clc
adc
or
dec
jmp
mov
in
pop
cmp
dec
sbb
clc
rep
ret
cmc
or
fimul
loop
jl
add
mov
loopne
pop
jb
add
push
and
arpl
or
int
imul
dec
mov
scas
test
lea
mov
adc
cmp
mov
jne
pop
jg
or
test
loopne
cli
mov
cmp
int
push
mov
scas
std
mov
jae
sbb
add
movs
test
sar
adc
xchg
mov
out
cmp
push
jo
pop
cmp
xchg
push
daa
and
jmp
and
mov
inc
jbe
aaa
lods
inc
dec
sbb
sub
popa
jmp
pop
fld
int
add
add
shl
and
gs
mov
out
gs
sub
cdq
or
fsub
rcr
div
add
adc
leave
sub
cmp
pop
xlat
cmps
push
xchg
rcr
jmp
les
and
inc
cmp
pop
add
arpl
cmp
adc
sub
lock
test
sub
xor
push
add
lahf
fidivr
inc
psraw
jg
loop
test
(bad)
sub
icebp
jl
fdivrp
popf
scas
xchg
stc
pop
jl
push
imul
(bad)
xor
fs
or
lods
add
test
add
push
push
xor
bound
cs
xlat
addr16
repz
xchg
nop
loopne
xlat
cmp
mov
sbb
push
mov
cmp
mov
sbb
call
pop
mov
shl
sub
fbld
scas
mov
cmp
(bad)
fwait
xor
ror
retf
mov
xchg
jmp
mov
mov
mov
shl
leave
pop
sbb
ret
(bad)
sub
add
jmp
push
int3
add
in
neg
rol
ja
push
retf
sub
mov
cmp
pop
mov
mov
mov
lock
cld
ins
std
sub
rcl
xlat
jo
and
shl
jno
inc
mov
pop
mov
loop
xor
lea
stc
mov
repnz
dec
imul
cmp
and
ret
sub
ja
and
loope
pop
pop
mov
movs
rcr
push
push
ja
cmp
in
dec
inc
jae
inc
ins
push
mov
pop
or
sub
rol
data16
inc
(bad)
lds
pop
mov
push
cld
out
outs
idiv
int
scas
push
cmps
pop
jecxz
pop
sahf
dec
mov
clc
imul
jmp
scas
jg
dec
jo
and
mov
mov
in
ret
in
xchg
jno
mov
ja
repz
pop
stos
jns
popf
mov
lahf
shl
sbb
sahf
sub
retf
sbb
inc
scas
scas
jg
stos
out
aam
pusha
lahf
aad
aam
shl
sbb
jne
call
call
dec
cmp
idiv
push
es
sub
or
mov
pop
icebp
out
push
push
jp
test
mov
in
mov
inc
jne
scas
call
(bad)
stos
dec
mov
sbb
scas
mov
(bad)
mov
cmc
jmp
xor
inc
and
(bad)
ss
jne
jg
ret
pop
adc
daa
mov
xchg
push
mov
les
push
inc
loope
sbb
push
out
aaa
mov
cmps
jae
jbe
int3
cmp
sti
ins
int
data16
(bad)
mov
push
imul
lock
outs
shr
ficom
int
and
cmc
ja
fcomp
test
sbb
(bad)
mov
pusha
dec
dec
jl
adc
enter
mov
push
xor
add
nop
xchg
sub
push
in
fisttp
and
pop
ja
add
adc
and
push
nop
nop
popf
pop
dec
movs
sub
mov
mov
jb
dec
and
dec
test
xchg
dec
ja
retf
jo
jae
pop
aam
iret
xor
sahf
xor
jns
cmp
sub
outs
icebp
mov
sub
sar
push
pop
mov
std
test
jb
pop
and
or
xchg
imul
adc
mov
jmp
jne
jecxz
jnp
nop
inc
push
and
enter
inc
js
sub
arpl
repz
push
and
dec
pop
adc
sub
jl
icebp
shr
sbb
inc
jmp
fcomp
mov
gs
cmp
gs
pop
push
ret
mov
into
push
mov
jg
inc
xchg
popf
out
xor
xor
add
jns
mov
rcr
and
xor
push
aam
inc
cmps
dec
je
mov
ds
movs
jg
adc
loopne
push
cdq
inc
rol
sbb
gs
mov
xor
sbb
rol
pop
sub
shr
add
leave
sbb
mov
scas
leave
dec
aaa
fisubr
aas
mov
pop
pushf
inc
gs
push
pop
adc
sub
cmps
popa
and
mov
icebp
cmp
and
arpl
cwde
jae
arpl
fadd
movs
fs
mov
stos
add
pop
test
fnstcw
imul
xchg
inc
in
jmp
xor
pop
mov
adc
(bad)
xlat
test
sar
lds
add
aam
ss
ins
out
test
adc
call
(bad)
(bad)
adc
sub
cmps
imul
push
iret
popa
into
dec
movs
push
xchg
(bad)
dec
dec
push
xor
stos
aad
rcr
lds
out
pop
add
aam
adc
and
inc
jae
sbb
or
test
jge
minps
repnz
aas
aad
repz
daa
scas
dec
mov
sbb
jb
dec
push
adc
jb
xchg
pop
sub
mov
mov
and
das
jns
jne
repnz
(bad)
lods
pop
and
mov
sbb
pop
push
and
adc
aaa
mov
pop
les
cmp
sub
stos
cmps
pop
jae
scas
adc
in
cmp
xor
inc
(bad)
sub
inc
sub
jbe
(bad)
push
mov
mov
jb
(bad)
cmp
shr
pop
add
jbe
int3
(bad)
icebp
es
mov
pop
mov
mov
pop
hlt
inc
(bad)
push
lea
push
stos
push
data16
cli
push
cmp
popf
add
pop
rcr
pop
sar
xchg
shl
call
out
in
clc
ins
push
lea
outs
or
dec
xchg
jnp
push
sbb
movlps
out
xchg
push
inc
push
inc
inc
rcr
sahf
jbe
cdq
add
mov
sub
shr
jmp
test
and
scas
xor
sbb
fwait
xor
push
inc
jecxz
hlt
jmp
ret
outs
int3
xor
xchg
mov
xlat
mov
adc
sbb
dec
loopne
rol
or
jns
cmp
(bad)
ret
and
push
xor
cli
enter
bound
inc
cmps
mov
adc
pop
push
xchg
enter
fdivp
xchg
mov
xchg
xchg
mov
fwait
add
adc
lods
mov
ins
out
push
retf
sbb
add
fmul
mov
ds
arpl
sar
mov
test
add
cmps
cld
ss
(bad)
cmps
movs
ins
and
xchg
cmp
retf
xchg
in
das
push
push
jae
pop
fsub
xor
sbb
push
aad
cmc
xchg
jmp
pop
sub
mov
or
mov
adc
out
cmp
sub
mov
cli
shl
mov
gs
adc
sub
in
fs
xchg
push
add
jns
aam
fadd
mov
cmps
cmc
push
fst
aad
(bad)
test
mov
loop
lahf
and
(bad)
xchg
inc
je
and
inc
call
adc
mov
mov
mov
jae
mov
fnstenv
scas
jecxz
xlat
aam
cmp
in
cmp
mov
sbb
xor
(bad)
mov
fwait
stc
fstp
movs
ins
xor
xor
cmp
test
repz
lock
test
dec
mov
add
int3
xchg
or
call
repnz
in
stc
push
push
and
rcl
jle
xchg
in
jae
std
loopne
cmp
adc
(bad)
fistp
add
fwait
mov
xchg
icebp
scas
ins
(bad)
mov
and
outs
in
jb
pop
jno
cld
or
std
pop
xor
dec
lods
std
loope
loop
enter
(bad)
cmc
ret
sbb
add
(bad)
push
setle
adc
jne
inc
mov
pop
shl
or
and
cmp
lds
push
daa
cmps
adc
xchg
stos
or
mov
cmps
or
(bad)
jp
jmp
push
mov
sbb
pmaddwd
cdq
pop
gs
dec
sub
fdivrp
fwait
sub
adc
inc
and
jb
imul
pop
cmp
clc
mov
pop
xchg
inc
xor
movs
jb
loopne
inc
ja
jb
inc
call
dec
ins
lock
or
mov
jg
jnp
sub
pop
test
add
shl
mov
push
xchg
or
push
jmp
clc
enter
push
ins
adc
inc
xchg
push
and
jl
jge
xor
pop
cdq
ss
jno
add
sbb
mov
div
xor
je
in
sub
loopne
xlat
je
fmulp
gs
aam
add
add
or
cmc
bswap
test
mov
push
push
mov
mov
ins
into
in
inc
cmc
in
test
enter
or
push
mov
xor
inc
cli
jmp
mov
dec
push
jbe
jl
add
test
bound
ret
push
fwait
mov
pop
in
cmp
mul
mov
fwait
adc
(bad)
xor
ret
lahf
jle
push
jmp
das
cdq
sbb
push
mov
inc
push
adc
xor
dec
cdq
es
xchg
sub
jle
sub
iret
hlt
mov
xor
loopne
adc
adc
push
fsub
jge
inc
and
cmp
jl
or
and
cli
or
scas
sar
and
adc
cmp
inc
in
mov
sar
jae
addr16
inc
add
enter
cmp
sbb
retf
pop
inc
sub
dec
adc
xor
add
jnp
call
push
add
cmp
xor
jmp
ins
out
push
mov
add
(bad)
sub
inc
lock
cmp
test
jecxz
fld
pusha
nop
push
into
or
sar
fnstenv
jb
sbb
mov
dec
sub
or
scas
or
mov
jae
test
inc
lods
sub
xor
adc
sbb
jg
push
sbb
push
aam
outs
std
das
int
(bad)
lahf
mov
lea
mov
and
dec
ficom
(bad)
enter
je
mov
loop
call
test
cmp
jmp
cld
dec
stos
fnstcw
cmp
xor
das
cmp
mov
js
enter
jo
mov
pushf
adc
mov
enter
push
loop
mov
pop
in
dec
std
ja
iret
add
cmp
lods
in
xor
mov
mov
int
fmul
fstp
add
and
movs
xchg
aas
cmc
pop
push
xchg
jb
stc
data16
test
pop
pop
pop
dec
sub
sbb
push
sub
cmp
enter
aad
mov
aam
in
sub
cs
cdq
sbb
mov
cmc
add
mov
or
into
pop
xchg
sub
shl
mov
sub
xchg
test
int
mov
sub
imul
sbb
jp
cmp
inc
pop
sub
dec
ss
mov
hlt
push
dec
push
addr16
add
iret
scas
cmp
in
inc
shl
jmp
mov
movs
pop
push
sub
pop
js
cmc
test
mov
mov
scas
cmp
popa
add
aad
push
fs
sub
jno
mov
xor
adc
test
mov
scas
fnsave
clc
rol
ret
popa
xchg
pop
arpl
mov
or
cmp
sub
push
mov
mov
test
int
cmps
(bad)
xlat
cmp
fbstp
fcom
mov
dec
scas
pop
sub
pop
xchg
cwde
lock
inc
imul
(bad)
xor
inc
pop
pop
dec
ds
cmc
cld
fisttp
and
ins
enter
sub
ins
xor
cmp
out
fbstp
icebp
stc
or
pop
loop
sbb
pop
clc
loope
inc
xchg
imul
jp
xor
rcl
mov
std
cld
add
pavgb
mov
xlat
adc
pushf
push
cmp
mov
ja
cmp
mul
push
dec
mov
jge
std
ss
sbb
xor
iret
add
sahf
fld
fcomp
ret
add
movs
push
jae
pop
or
sub
sbb
jne
hlt
shl
sub
scas
push
repz
add
sbb
adc
(bad)
cld
cmp
sub
push
mov
xchg
mov
or
lock
push
pop
sahf
pop
mov
call
sub
pop
cs
or
out
or
cld
das
mov
inc
push
imul
push
loop
mov
dec
call
cmps
push
shl
sub
icebp
jp
pop
dec
add
mov
call
je
add
mov
push
sbb
xchg
or
or
aaa
and
in
clc
fs
mov
jle
mov
jne
adc
and
push
dec
fwait
jnp
pop
es
jmp
sbb
inc
repz
mov
inc
fsubr
xchg
push
add
dec
push
shl
jmp
xchg
or
mov
xor
cmp
jmp
inc
dec
int
xor
jg
in
retf
jno
arpl
pop
fldcw
push
rcl
add
(bad)
retf
inc
retf
ins
xchg
or
jge
push
mov
jmp
cwde
test
into
jae
movs
loope
aam
shl
iret
or
cmp
std
pop
adc
cli
mov
icebp
mov
xchg
scas
inc
out
ret
xchg
mov
mov
and
sbb
mov
sub
push
(bad)
jg
sub
inc
inc
cwde
mov
pop
sub
xchg
cs
aam
xchg
sub
xchg
push
fs
sti
mov
xchg
ror
clc
cmp
mov
xchg
xor
cmc
inc
cmp
cmps
pop
ins
fld
in
or
test
sub
and
aas
xor
fdiv
push
lea
sub
das
mov
mov
inc
cld
(bad)
and
sti
xor
cmp
push
mov
fucomip
lds
xchg
mov
mov
mov
jae
pop
mov
mov
(bad)
out
xchg
rcl
call
xor
push
sbb
or
lds
in
mov
and
cdq
mov
in
ds
jl
fs
ins
push
pop
int
lea
pop
sub
es
cmp
mov
inc
sti
push
sbb
dec
cld
mov
and
jmp
retw
dec
sbb
and
jne
mov
xor
lock
stc
pusha
das
aas
into
mov
xchg
push
xor
retf
cmp
push
ds
loop
aas
icebp
jmp
out
test
or
outs
push
(bad)
lock
jbe
jmp
in
and
repnz
retf
loope
pop
pop
push
popa
push
fild
fxch
mov
outs
(bad)
movs
sub
mov
push
(bad)
icebp
ret
movs
cwde
gs
call
rol
push
mov
xchg
xor
adc
test
loope
pop
scas
add
test
mov
outs
jb
mov
fdivr
sub
test
in
cmp
sbb
jb
out
mov
adc
icebp
scas
addr16
mov
out
scas
add
jns
ja
xor
ss
sub
in
push
jb
adc
imul
popf
test
xor
inc
add
jbe
fidivr
sub
hlt
mov
sbb
add
popa
out
jge
ret
and
jo
xor
xchg
in
pop
jmp
xchg
fist
ret
add
xchg
adc
cmp
aad
ror
cmp
test
pop
retf
mov
inc
aad
movs
push
data16
dec
push
cli
pop
les
js
jno
pop
ds
call
out
sbb
and
xor
mov
aad
stos
popa
lahf
(bad)
int3
addr16
loopne
aad
xor
retf
xchg
or
dec
jle
cmp
jb
inc
cmps
mov
ds
repz
push
mov
int
xor
dec
sar
scas
repnz
(bad)
push
stos
ins
enter
in
lock
ins
in
imul
jl
mov
xchg
imul
fs
mov
int3
(bad)
adc
mov
push
push
dec
out
nop
push
retf
mov
test
mov
data16
in
mov
sub
les
std
sar
jmp
(bad)
or
icebp
outs
lock
ret
jmp
push
pop
das
mov
iret
ins
inc
repnz
jo
xchg
adc
push
enter
and
out
add
xchg
xchg
jo
dec
add
ins
arpl
loopne
sub
sub
pop
add
mov
enter
cdq
std
cdq
out
cmps
outs
mov
mov
mov
bnd
jbe
(bad)
scas
sub
xchg
ret
int
enter
dec
inc
inc
test
stos
or
stos
add
stos
std
icebp
mov
xchg
sbb
jb
fdiv
inc
push
std
cmc
pusha
sub
std
xor
aaa
clc
shl
in
ficomp
or
dec
cmp
and
in
adc
pop
sahf
ret
out
or
leave
rcl
je
loope
push
out
mov
inc
enter
or
inc
(bad)
sbb
loop
test
in
hlt
cmc
ds
and
pop
add
inc
fwait
in
cmp
push
(bad)
adc
jp
(bad)
or
and
mov
test
mov
mov
xchg
pusha
adc
dec
sbb
mov
jg
pop
mov
dec
push
add
outs
mov
xchg
outs
ficom
imul
call
ds
inc
ins
dec
outs
sub
jae
mov
stc
test
fwait
jno
in
inc
dec
jno
aad
(bad)
mov
dec
xchg
jne
out
xchg
inc
dec
frstor
fcompp
jmp
push
sub
or
outs
shr
cmps
aas
cmp
jge
cld
rol
test
and
cmp
adc
loope
loop
dec
mov
xor
popf
xlat
and
dec
cmp
cmp
out
enter
push
mov
and
xchg
push
lea
nop
cmp
pop
cld
mov
or
pop
cmp
sbb
lea
es
lds
mov
mov
sti
scas
jne
inc
ja
mov
test
inc
inc
cdq
cwde
mov
sar
mov
push
test
xlat
jle
sub
push
dec
cmps
cmps
mov
push
int
jmp
cli
(bad)
mov
inc
out
movs
or
in
xor
xor
ins
add
cmp
ret
sbb
retf
aad
sahf
mov
inc
jg
es
push
ins
test
das
cli
pushf
inc
push
aaa
push
les
xchg
and
(bad)
imul
mov
int3
and
cwde
popf
bound
mul
into
das
jne
add
loopne
clc
cmps
leave
mov
or
scas
push
xchg
rcl
cmp
adc
xor
sti
fs
test
push
inc
inc
mov
cs
xor
cmp
sub
inc
mov
mov
rol
cs
sbb
cmc
(bad)
dec
sbb
or
cld
inc
cwde
pop
dec
bound
(bad)
mov
jp
outs
cmps
cmp
add
out
ss
mov
cmps
test
hlt
jno
int
cmp
mov
jg
arpl
pop
cli
repz
outs
xchg
lods
add
mov
cmp
mov
pop
int
adc
dec
cmp
mov
inc
cmp
push
mov
push
inc
nop
loop
std
dec
push
jmp
mov
ss
mov
inc
ret
inc
sub
cmp
mov
dec
mov
into
xchg
xchg
xchg
(bad)
push
sub
sti
nop
push
sar
pop
in
je
push
int
sub
enter
jmp
sub
pop
(bad)
fnstsw
cmp
stos
xor
retf
push
clc
daa
add
push
sub
int
adc
mov
xchg
movs
cvtps2pd
shl
cmp
pusha
jle
(bad)
fisttp
mov
icebp
cpuid
(bad)
and
lock
enterw
mov
mov
mov
mov
loop
pop
into
enter
mov
movs
cmp
or
push
push
bound
and
adc
add
pop
cdq
fcomp
push
outs
mov
nop
push
not
jg
xchg
lds
retf
adc
scas
jbe
jge
lea
sbb
(bad)
cli
sahf
fcom
mov
mov
mov
jmp
and
xor
xchg
movs
bound
clc
int
push
dec
push
int3
sti
mov
push
dec
test
fldcw
pusha
sub
pop
je
sahf
lock
pop
imul
clc
jae
push
jbe
ss
mov
mov
pop
imul
pop
ins
jnp
scas
(bad)
bound
out
mov
cwde
gs
mov
or
jne
add
test
jo
movs
in
xchg
and
mov
add
xchg
sub
clc
cmp
jg
inc
data16
mov
add
aaa
mov
adc
aam
jne
jmp
sub
int
and
fdiv
xchg
sti
add
inc
ins
push
and
test
mov
fisubr
and
retf
cmp
rcr
imul
enter
fnsave
mov
or
iret
cmp
xchg
add
jmp
xchg
xchg
das
loopne
ret
rcr
cli
jmp
add
cmp
push
inc
test
cmp
jae
push
sub
sub
rol
and
sbb
es
icebp
sbb
jns
pop
pop
and
sbb
mov
lock
adc
popa
adc
xchg
stos
add
xchg
push
mov
sar
pop
pop
aad
xchg
pusha
ror
(bad)
in
out
xchg
je
add
fst
add
push
cmp
mov
fistp
pop
xchg
xchg
push
dec
aam
in
or
imul
push
jnp
cmp
fsubr
dec
mov
mov
inc
and
xchg
fbstp
dec
icebp
std
ja
fsub
add
add
inc
test
lea
push
cmove
jb
cmp
clc
std
sbb
loop
inc
rol
mov
jbe
mov
std
inc
test
mov
neg
inc
addr16
mov
pop
jb
mov
imul
mov
out
push
call
cmps
sub
fisttp
xchg
sbb
mov
sbb
ret
std
test
retf
jmp
sbb
mov
daa
mov
cmc
stos
mov
add
xor
jae
mov
jg
in
pop
retf
ror
repnz
das
mov
fcom
adc
(bad)
loopne
rol
sbb
dec
inc
xchg
aaa
les
outs
int3
lods
xor
push
icebp
xchg
push
pop
push
test
std
push
inc
sub
icebp
dec
jg
add
in
pop
arpl
arpl
std
call
mov
inc
push
push
sbb
adc
or
pop
sbb
cs
cwde
pushf
xor
test
cdq
repnz
fs
push
push
xchg
jg
push
dec
enter
inc
ds
add
(bad)
mov
mov
pushf
popf
mov
and
scas
xor
out
das
in
popa
pop
sbb
cdq
(bad)
stos
xrelease
imul
outs
(bad)
stos
pushf
jne
ret
inc
cmp
test
jp
mov
inc
cmp
stos
inc
and
inc
pop
mov
mov
cld
cs
sub
popa
mov
cmp
repnz
lahf
in
mov
data16
sub
cmp
lock
sti
or
xchg
movs
lods
ret
sbb
mov
sub
test
mov
inc
sbb
int
out
aaa
inc
and
repnz
pop
push
xchg
in
pop
mov
mov
lods
fwait
dec
push
fmul
ins
xor
xor
pusha
mov
jne
cwde
imul
sar
mov
bound
sub
xor
sti
arpl
jg
or
mov
or
or
jecxz
mov
jne
std
xor
stc
addr16
mov
adc
cmp
sub
and
mov
cmp
cdq
pop
retf
dec
repnz
out
adc
call
mov
cmc
inc
cs
retf
outs
retf
fcom
popa
dec
jne
xor
imul
sbb
xchg
mov
(bad)
btr
test
daa
aas
in
and
fsub
add
add
enter
stos
cmps
mov
dec
ds
fidiv
pushf
(bad)
mov
les
retf
cli
mov
sbb
cld
dec
and
xchg
jbe
adc
imul
pop
ins
or
pop
add
inc
push
and
cmp
push
das
enter
mov
mov
sar
mov
stc
mov
(bad)
push
popf
data16
push
arpl
shl
jnp
clc
cmc
mov
inc
or
mov
lds
lahf
(bad)
sub
arpl
scas
sbb
aam
jle
call
scas
jmp
inc
mov
jle
push
xchg
xor
sub
push
xchg
aas
movs
mov
iret
xchg
dec
xor
push
cmp
jecxz
adc
mov
push
mov
pop
push
push
mov
jmp
mov
inc
jge
sbb
add
jo
sahf
adc
add
push
sub
jb
xchg
pop
shl
and
mov
out
sbb
gs
or
fs
lahf
mov
scas
ja
int
jmp
mov
mov
sub
inc
cdq
xor
jmp
(bad)
sti
ss
scas
jb
popa
fsubr
sub
or
cmp
movs
arpl
mov
jnp
sar
jmp
popa
pusha
pop
xchg
mov
jbe
loop
and
add
mov
dec
inc
jg
mov
dec
jns
xor
mov
xchg
scas
mov
imul
in
nop
inc
popf
mov
lock
inc
cwde
inc
out
push
(bad)
test
xchg
mov
xchg
xchg
jno
leave
js
jecxz
ins
stc
bound
into
cmp
mov
xor
sub
ja
pop
mov
popf
or
xor
popa
dec
sub
dec
push
shr
mov
push
fidiv
cmps
or
jbe
push
lea
iret
add
cmp
(bad)
or
aaa
pop
push
mov
ret
mov
sbb
and
test
mov
mov
cli
in
sbb
int3
std
adc
pushf
mov
push
int3
push
sti
mov
add
ins
fisttp
add
enter
adc
and
ins
xor
jg
push
shr
(bad)
fadd
dec
out
and
mov
lods
mov
adc
and
test
(bad)
and
in
loopne
push
popa
imul
sbb
pop
int
xchg
sbb
shl
xchg
jbe
dec
mov
mov
mov
sahf
adc
ins
ret
adc
cmc
mov
mov
cmps
imul
fisub
dec
jae
shl
sub
xor
lock
fwait
mov
mov
dec
in
aad
cmp
xchg
and
mov
and
repz
mov
js
add
pop
xor
stos
jne
gs
jle
out
xchg
aam
push
je
cmp
retf
sub
sub
cmps
lock
push
sbb
jns
pusha
or
aad
ja
inc
bound
cmps
es
test
push
dec
push
dec
pusha
mov
push
xchg
xchg
xor
jbe
pop
cmp
pop
adc
sbb
push
and
push
popa
fiadd
xor
sub
pop
xchg
ds
fdiv
xor
mov
popf
jl
or
mov
cmp
fistp
inc
xchg
loope
lods
into
or
jle
inc
out
lds
rol
lods
loopne
pusha
ror
jne
inc
dec
sub
mov
jmp
and
mov
xchg
adc
enter
cmps
cmp
mov
cmps
cmp
sub
jl
lock
test
or
or
into
aas
jge
(bad)
cmps
out
sti
out
or
in
test
push
(bad)
out
call
mov
jecxz
(bad)
cdq
retf
jge
pop
popf
mov
pushf
enter
or
mov
push
and
push
(bad)
lock
xor
(bad)
dec
rol
into
dec
jge
xlat
aam
mov
pop
push
ja
gs
mov
add
nop
sbb
xor
arpl
fdivp
and
adc
jbe
test
shl
ja
mov
lea
ret
or
(bad)
mov
out
icebp
js
out
fild
cwde
cdq
push
leave
push
shl
mov
pop
hlt
adc
adc
sbb
fwait
(bad)
fld
push
mov
sbb
mov
(bad)
aam
mov
rcl
cs
push
jns
js
stos
mov
repz
loopne
mov
fdivr
pushf
cli
inc
arpl
idiv
xchg
dec
xchg
jns
ret
sbb
mov
and
jno
out
cmp
cdq
push
mov
inc
and
int
movs
adc
in
(bad)
loop
pop
pop
call
popf
cdq
lahf
das
enter
sti
jns
xor
test
sub
and
sub
scas
pusha
xchg
mov
mov
sub
inc
aam
mov
movs
dec
sub
adc
dec
loop
jmp
clc
jne
push
ss
test
aas
pop
mov
cs
xor
adc
add
sahf
jge
sbb
push
jge
nop
rcr
test
ins
das
leave
or
mov
push
or
fimul
enter
inc
stos
mov
mov
or
adc
loope
push
fs
cmps
cld
in
aas
shr
mov
call
sub
lea
xor
outs
fisttp
lods
cli
dec
stc
xor
rcl
sar
xor
addr16
lea
pop
mov
jge
or
cld
add
pushf
pop
mov
ja
int3
ficomp
fwait
popf
(bad)
repz
dec
inc
mov
pop
jg
in
xor
push
pusha
cmps
sub
sbb
sub
fistp
test
mov
fmul
sbb
adc
sahf
cmps
sub
cmps
(bad)
popa
pop
bound
pop
out
int3
sub
sub
add
test
push
mov
add
xor
cmp
dec
addr16
ins
push
movs
xchg
sub
jns
mov
adc
pop
das
jb
ja
cdq
inc
adc
shr
pop
add
mov
jle
xchg
cmp
mov
ja
ins
sti
jmp
xchg
test
push
xor
pop
arpl
cmp
popa
sub
jmp
adc
mov
or
pop
shl
mov
jb
push
mov
inc
mov
fmul
addr16
loope
out
sbb
add
add
(bad)
push
adc
ret
xlat
into
cmp
sahf
sub
js
cs
dec
test
sub
add
pop
sbb
test
pop
loop
call
push
(bad)
cwde
push
xchg
mov
adc
int
cmp
jne
jle
movs
ret
inc
push
iret
mov
cwde
cwde
daa
push
ror
aam
mov
jnp
sub
enter
stos
jmp
pop
add
xor
rcl
dec
out
pop
test
xchg
(bad)
sbb
mov
outs
adc
cmp
sub
mov
dec
jne
push
sbb
xchg
je
xor
les
or
hlt
leave
scas
rol
adc
dec
push
add
fwait
cmp
sahf
push
clc
pop
or
adc
pop
push
add
ins
jb
mov
stos
mov
mov
push
out
jne
test
in
and
add
pop
hlt
jbe
xchg
stos
btr
dec
aaa
xlat
shl
mov
mov
adc
xor
ss
adc
mov
xchg
neg
(bad)
pop
push
mov
stos
or
repnz
pop
out
es
cwde
pop
jnp
xor
dec
int
cdq
pop
lds
xchg
or
hlt
dec
call
xchg
mov
cld
xor
(bad)
jp
inc
jecxz
bound
out
(bad)
movs
retf
ins
daa
mov
lods
jne
cmps
into
mov
mov
sub
pop
sbb
or
adc
inc
icebp
mov
cmp
pop
pushf
mov
cmps
dec
sbb
inc
sub
ror
push
ja
xor
fild
mov
retf
pop
bound
mov
movs
inc
int
adc
add
scas
out
test
fs
jp
sahf
aaa
xchg
fisttp
inc
rcl
sbb
and
movs
bound
iret
gs
fucomp
sub
mov
dec
sbb
add
sahf
mov
mov
push
ds
scas
movs
cdq
(bad)
scas
adc
icebp
add
mov
dec
ror
inc
mov
mov
rol
fistp
mov
fs
or
add
xchg
xchg
lock
sub
ins
outs
movs
test
cmp
scas
sub
ret
into
sar
sub
jb
mov
push
sub
add
test
bound
ins
and
aaa
aad
dec
push
push
push
mov
jno
mov
inc
jae
xor
xchg
xchg
mov
push
push
shl
jae
jne
js
fisttp
movs
int3
jl
fsin
xor
or
add
xor
test
cmp
mov
lock
inc
ins
loop
sbb
mov
jge
jmp
jns
fdivr
cmp
sub
fcom
fcomi
sbb
xchg
xor
dec
or
sub
sahf
jne
cli
sbb
outs
std
sub
cs
xchg
ror
jle
bound
mov
daa
sar
sar
mov
mov
dec
mov
aaa
cmp
sub
cmp
loop
xchg
fs
je
add
js
push
pop
sub
in
lds
mov
mov
add
icebp
push
push
xlat
je
mov
inc
cmp
xor
das
scas
adc
jmp
icebp
mov
rcl
mov
cdq
push
inc
(bad)
pop
sti
cmp
fwait
adc
pop
mov
into
out
in
aad
lds
movs
jmp
mov
xchg
xlat
mov
cmps
fidivr
popf
dec
mov
push
xchg
loop
push
xchg
js
pop
jne
inc
or
iret
mov
mov
mov
(bad)
enter
mov
mov
bound
cmp
cs
ret
fwait
inc
mov
movs
(bad)
dec
popf
sub
lea
adc
jmp
or
imul
fstp
int
xor
xor
nop
mov
lea
ins
(bad)
out
jmp
jge
arpl
push
xor
fcomp
iret
mov
loop
cmp
cld
mov
push
push
jno
push
sbb
das
pop
xchg
mov
out
in
hlt
pop
les
adc
aaa
adc
sub
or
out
and
retf
pop
or
xor
inc
ret
stc
stos
ret
and
jb
and
cmp
mov
jmp
pop
mov
xor
mov
scas
jo
pop
add
lahf
add
jno
dec
fmul
(bad)
xlat
push
pop
push
and
push
or
test
fwait
dec
mov
std
test
inc
mov
lds
ror
mov
or
lahf
fdiv
jle
cmp
les
mov
mov
and
cs
push
push
loop
sub
add
mov
cld
js
and
ss
adc
xchg
call
(bad)
mov
dec
repnz
jae
jg
movs
mov
lods
test
or
fadd
jns
les
(bad)
jp
repz
icebp
mov
jecxz
shr
cmp
jmp
popa
cmp
clc
shr
mov
aas
es
add
xor
push
aaa
outs
call
sbb
jmp
jae
je
or
mov
daa
(bad)
pop
sub
pop
and
fisttp
shr
icebp
repnz
pop
fidivr
aam
lds
out
in
mov
and
mov
mov
sbb
loope
div
jbe
cwde
clc
sub
sbb
cmp
pop
shl
mul
das
sub
add
cld
stos
ret
mov
cmps
ret
mov
(bad)
test
mov
xchg
loopne
sub
repnz
loopne
fdivr
or
push
icebp
push
mov
push
fidiv
jp
jmp
pushf
xor
or
les
pop
pop
(bad)
cdq
dec
or
test
ins
stos
adc
pop
lods
mov
repz
aam
push
mov
inc
and
dec
inc
aaa
xchg
(bad)
jg
in
sbb
gs
call
mov
(bad)
pop
jle
loope
ins
lahf
fist
pop
add
fidivr
jecxz
add
fldcw
or
xchg
pop
jae
fdivr
mov
and
add
addr16
jo
mov
push
cmps
push
dec
inc
dec
inc
xchg
ja
pop
cwde
div
ins
cmp
mov
mov
outs
mov
pop
adc
dec
jp
mov
arpl
mov
and
mov
mov
sti
push
imul
sar
and
in
lds
and
inc
js
xor
mov
pop
sar
out
clc
xchg
push
push
fs
push
aad
add
adc
jmp
mov
cmp
push
jnp
adc
or
ds
(bad)
inc
sub
push
dec
lods
movs
popf
loope
movs
pusha
mov
shl
jg
mov
lods
imul
test
cmc
rol
push
mov
push
push
xchg
loopne
gs
push
fnsave
mov
mov
test
(bad)
les
cmc
fld
inc
cmovl
hlt
jle
sbb
mov
in
sub
mov
fwait
hlt
jo
or
pop
inc
fsubr
aas
popf
jg
xlat
xchg
xor
imul
(bad)
mov
inc
xchg
cwde
add
mov
lahf
hlt
fadd
imul
dec
repz
sti
fwait
and
mov
jmp
push
mov
and
mov
shl
xlat
call
paddd
int3
and
(bad)
jmp
outs
pop
(bad)
push
xchg
dec
pop
adc
pop
imul
xor
je
inc
in
xchg
bound
sub
and
jmp
(bad)
or
loope
dec
or
retf
add
dec
pop
lods
call
sbb
sahf
mov
scas
ret
(bad)
sbb
movs
mov
pop
in
jne
xor
mov
gs
into
sub
jae
fadd
mov
cmp
sahf
ds
pushf
lods
sahf
and
pop
out
push
fdiv
mov
ins
or
cld
pop
retf
repnz
mov
jnp
sub
add
push
cmp
in
out
adc
xchg
push
cmp
push
popf
mov
pop
cmps
mov
xor
push
outs
pusha
mov
je
mov
sar
inc
pusha
xor
outs
test
rcl
add
jno
xchg
fisttp
std
pop
mov
push
mov
push
arpl
or
ficom
cmp
sti
jecxz
sbb
test
add
pop
dec
nop
xor
push
cli
imul
inc
test
mov
add
rcl
cwde
mov
sti
inc
test
jle
xor
(bad)
sub
cwde
in
ins
or
into
bound
sub
inc
repnz
xor
mov
jmp
dec
mov
mov
and
push
ins
(bad)
inc
dec
jge
stc
pop
(bad)
xor
lods
(bad)
push
xor
dec
add
adc
sub
(bad)
or
push
fild
or
loope
mov
bound
cwde
mov
aam
add
cmp
shl
ja
and
pop
pop
leave
jge
retf
fisub
fisttp
cdq
fcmovnb
sbb
push
sbb
leave
jae
je
push
xchg
nop
dec
icebp
(bad)
sbb
daa
mov
push
arpl
idiv
xchg
lahf
jmp
and
(bad)
mov
sub
mov
xchg
lods
push
addr16
add
and
mov
xlat
xchg
out
(bad)
jecxz
xchg
sub
and
jle
aad
dec
leave
jno
outs
add
movs
call
xchg
shl
dec
mov
pop
inc
adc
outs
aam
cmp
and
add
fidiv
repz
push
and
sbb
add
cmp
jge
fs
fisubr
push
enter
fcmovb
js
shl
add
(bad)
in
add
cdq
cs
mov
and
and
das
xchg
xor
mov
adc
outs
call
jle
call
popf
cld
push
push
dec
dec
in
call
jle
push
pop
xchg
imul
push
lods
pop
or
cmp
xor
in
adc
enter
mov
pop
jecxz
sbb
out
popf
pop
mov
sub
xchg
pop
sub
xchg
cmp
or
(bad)
xlat
ins
stos
mov
aam
add
xchg
sub
push
xor
xor
mov
mov
sar
into
mov
ins
mov
data16
mov
ret
xor
xchg
inc
pop
cmp
sub
mov
jmp
jbe
enter
mov
sbb
xchg
add
movs
sbb
out
push
jle
adc
mov
data16
push
inc
out
xor
cld
mov
xchg
std
lock
pop
push
les
cmc
push
aam
pop
xchg
push
push
pop
clc
inc
add
cdq
int
push
ret
jmp
dec
jmp
add
mov
sar
xchg
hlt
push
mov
das
push
mov
out
mov
cld
pusha
mov
popf
and
out
pop
shl
inc
(bad)
std
aad
pop
sbb
daa
stc
dec
jp
cs
jb
mov
sbb
add
inc
push
sbb
pop
cmp
mov
mov
inc
cwde
sti
xor
sub
fs
pop
add
mov
nop
and
dec
add
hlt
loop
into
jecxz
dec
mov
call
mov
xchg
in
(bad)
repz
mov
push
cwde
fwait
mov
call
adc
loope
pop
in
push
int3
push
inc
rcr
sbb
cmp
xchg
aaa
and
sub
ror
xchg
mov
adc
fwait
out
and
int
mov
cld
ficom
rcr
call
das
test
sar
xchg
xchg
repz
xchg
or
mov
push
scas
dec
inc
xchg
inc
call
mov
mov
outs
mov
mov
popf
pop
push
inc
scas
cmp
in
fwait
mov
loopne
fcom
xor
das
jl
jge
ss
fist
mov
xchg
mov
and
(bad)
hlt
ror
test
mov
cwde
mov
push
and
push
jmp
mov
(bad)
icebp
mov
fnstcw
outs
inc
outs
ja
push
push
not
(bad)
pop
data16
sti
ins
fsub
add
xchg
jg
mov
mov
push
ret
lea
inc
lea
pop
or
out
dec
outs
shl
adc
cli
or
scas
mov
js
inc
outs
stos
pop
xchg
aam
or
movs
mov
mov
or
sbb
stos
loop
out
mov
pusha
push
rcl
inc
xchg
nop
leave
es
mov
xchg
jmp
dec
mov
jmp
mov
rol
mov
aam
aas
test
mov
jae
adc
popa
and
in
std
jmp
loope
inc
div
shr
fldenv
xor
sbb
mov
ret
push
xchg
repz
xor
push
ret
lods
loopne
aas
retf
fidiv
scas
call
push
xchg
test
popf
mov
fwait
push
inc
or
xor
pop
enter
push
icebp
mov
ret
push
mov
arpl
cmp
mov
lods
sbb
or
outs
inc
pop
cmp
imul
jle
out
adc
movs
gs
sbb
pushf
loop
aad
push
retf
mov
mov
fdivr
aam
arpl
cmp
mov
ret
xchg
leave
pop
aas
inc
sahf
gs
jne
sar
(bad)
test
icebp
xor
pop
repnz
cmp
imul
lock
retf
inc
ret
les
xor
sti
lahf
(bad)
iret
loope
jp
xchg
mov
xlat
push
xor
shl
aad
out
dec
psubw
mov
pop
mov
add
(bad)
xor
mov
xchg
ins
ins
dec
mov
test
mov
out
cmp
jmp
jg
int3
(bad)
add
sub
xchg
fild
rcl
mov
pop
jnp
arpl
xor
arpl
pop
cwde
push
aas
mov
add
popa
retf
sub
ret
jle
jns
sub
mov
(bad)
pop
shl
outs
loop
jmp
pop
(bad)
mov
clc
jl
int
xlat
fwait
mov
test
clc
aam
xchg
(bad)
idiv
push
call
test
pop
or
je
stos
outs
sub
std
push
fst
cdq
sub
or
mov
movs
outs
daa
inc
les
push
push
aad
jge
jne
pop
dec
mov
inc
shl
sbb
pop
fsubr
push
and
ins
mov
std
push
(bad)
add
jecxz
push
das
or
stos
fsub
leave
cs
xchg
and
push
je
dec
les
adc
repnz
hlt
xor
dec
les
dec
jae
popa
mov
shl
mov
adc
jmp
push
pop
pop
mov
out
test
adc
xchg
adc
pop
inc
sbb
out
sbb
stc
out
and
jb
push
sbb
sub
test
cmp
(bad)
(bad)
dec
mov
jnp
mov
cmp
add
pop
jo
cdq
add
adc
(bad)
popa
and
push
mov
add
pop
cld
ror
and
popf
aas
mov
sbb
mov
js
into
add
adc
aam
ins
lds
cmc
or
and
inc
inc
push
pop
call
test
mov
cmp
cmp
fs
fadd
in
mov
enter
fiadd
dec
addr16
dec
scas
mov
das
pusha
test
push
jo
sbb
inc
or
ja
stc
mov
pop
aam
or
call
jne
into
in
fsubr
aas
mov
dec
add
mov
jmp
daa
(bad)
sbb
add
mov
and
shl
sbb
in
sub
fidiv
sbb
mov
dec
je
adc
stos
add
xor
mov
pop
xor
loope
inc
adc
fs
nop
pop
xor
dec
sar
aaa
pop
cmp
inc
test
xchg
xlat
(bad)
stc
jmp
loopne
int3
mov
lods
loopne
add
xor
cmps
adc
repnz
adc
adc
and
jne
movs
mov
sahf
xor
sub
pop
loop
in
int3
xlat
cmps
shr
push
sbb
ins
mov
fmul
mov
mov
cmp
scas
mov
and
lea
dec
addr16
outs
xchg
sub
cmp
call
pusha
cdq
xlat
loopne
mov
ja
or
enter
orps
mov
test
outs
stc
xor
ror
das
add
xchg
inc
into
mov
mov
test
jp
mov
(bad)
and
(bad)
xor
and
pop
rol
pop
pop
pop
inc
or
jge
retf
pusha
jno
cmp
cmp
dec
add
shl
mov
sub
hlt
sahf
into
pop
add
dec
and
xchg
fwait
sbb
mov
out
fnstsw
test
scas
mov
mov
dec
or
retf
inc
cmp
sahf
cs
or
adc
movs
out
inc
dec
mov
add
mov
les
cld
cmp
cmp
xlat
jb
push
mov
push
jle
daa
sbb
add
push
jge
xchg
std
and
nop
inc
pop
pop
cmp
cmp
mov
or
int3
(bad)
leave
mov
mov
aaa
push
cmp
daa
lahf
sub
or
rol
mov
(bad)
mov
clc
aad
jecxz
inc
rcr
xchg
adc
loope
lahf
in
icebp
xchg
xchg
js
xchg
stc
(bad)
push
jp
dec
jle
daa
jecxz
push
xchg
test
les
ss
(bad)
retf
sbb
adc
jae
or
push
mul
lea
mov
pop
jbe
sub
fdiv
mov
sbb
inc
or
pushf
mov
icebp
sbb
adc
lock
sub
jns
sbb
fxch
xor
fld
gs
or
nop
les
xchg
inc
push
clc
jp
arpl
clc
cmp
xor
push
sub
test
mov
jecxz
pusha
sbb
or
stos
ins
scas
mov
fldcw
inc
imul
mov
pop
push
jl
xchg
sbb
push
enter
mov
ss
dec
int
arpl
push
retf
push
in
fsubr
fisubr
dec
repz
jge
add
push
movs
ror
and
mov
ins
mov
pusha
ret
pop
jb
ins
in
hlt
cmp
jb
adc
(bad)
push
add
xchg
in
mov
in
das
idiv
xor
push
lea
mov
popf
dec
pop
ins
mov
inc
push
fdiv
cmp
and
bound
into
mov
dec
fistp
add
ins
sahf
sbb
pop
loopne
in
gs
pop
ja
xchg
push
dec
sbb
pop
enter
aad
iret
mov
add
add
repz
imul
add
(bad)
xor
iret
or
addr16
mov
mov
and
ret
add
imul
add
inc
mov
cdq
inc
movs
mov
sbb
push
fst
or
stos
pop
jns
in
mov
sbb
mov
add
iret
dec
aad
out
mov
sbb
das
iret
cmc
js
dec
fst
gs
stc
jg
into
pop
cmps
inc
out
out
sub
push
ret
mov
inc
stos
loopne
push
jns
ffreep
add
out
mov
adc
into
pop
jns
into
push
add
sahf
push
jmp
rcr
fldenv
dec
or
(bad)
out
cmp
xchg
fist
jle
xlat
sub
pop
mov
pop
sbb
push
popf
dec
loope
mov
xor
icebp
dec
shl
cmp
xchg
mov
neg
stos
pop
ins
jg
push
jb
adc
mov
popa
add
jmp
xchg
cmp
aas
xor
mov
dec
cmp
daa
sbb
test
mov
push
fwait
ret
out
fadd
movs
pop
xor
mov
dec
xor
cli
mov
aaa
cld
adc
sti
repz
popf
adc
ins
cmps
cmc
mov
sbb
lea
std
mov
outs
push
mov
dec
(bad)
sti
ror
jno
mov
or
stos
dec
cmp
pop
xchg
fstp
jno
lds
cmp
push
xchg
mov
cmps
or
(bad)
fadd
dec
data16
je
jp
outs
add
sahf
fbld
cmp
cli
pop
fnsetpm(287
jno
shl
xchg
push
out
xor
leave
xchg
call
push
cli
xchg
xchg
xor
aad
push
aam
fst
jge
adc
inc
push
xchg
mov
sbb
in
push
(bad)
mov
jecxz
popa
inc
xor
xor
retf
push
or
push
rcr
and
jp
fidivr
pop
jnp
mov
call
jle
xlat
lods
pop
push
ret
add
adc
ret
ds
sbb
add
adc
add
add
mov
lock
retf
sbb
(bad)
rol
add
cmps
or
mov
in
and
push
pop
cmp
daa
fist
shr
cmp
(bad)
in
pop
xchg
xlat
cmp
sub
mov
lock
pop
stc
xchg
imul
push
arpl
mov
pusha
mov
inc
push
mov
xchg
mov
add
jmp
bound
push
cmp
inc
dec
into
mov
cmp
cmc
cmc
add
mov
fistp
enterw
out
rcr
mov
shl
xlat
inc
jp
in
fstp
inc
mov
lods
jno
xchg
mov
mov
jecxz
sub
mov
pusha
push
and
jmp
jae
leave
pop
pavgb
test
mov
pusha
jo
push
gs
push
push
sub
out
sbb
scas
and
push
jb
xchg
push
jecxz
mov
ds
(bad)
jle
adc
xlat
jecxz
js
mov
add
sbb
or
ss
sbb
mov
jle
pop
dec
stos
mov
stc
icebp
pushf
push
fnstenv
in
loope
and
and
push
ret
fcmovnb
popa
inc
xor
jae
jecxz
(bad)
push
pop
sbb
dec
int
cmp
dec
cmp
imul
or
push
aam
push
loop
inc
mov
adc
mov
or
inc
(bad)
fist
dec
dec
pop
xchg
sahf
sub
xor
cmp
cmp
mov
fadd
shr
les
xchg
or
cmps
mov
sbb
pop
xchg
pop
in
sub
inc
imul
jle
ret
and
es
mov
pop
aad
mov
cmps
push
repnz
xchg
rol
fidiv
fwait
pop
lock
dec
xchg
sti
test
repnz
mov
inc
and
mov
(bad)
mov
jl
and
xlat
mov
jmp
cld
pop
mov
out
mov
adc
imul
add
test
lahf
xchg
mov
mov
cli
pushf
ds
inc
sbb
sar
ins
cmp
(bad)
and
repz
(bad)
adc
add
sub
fxch
xlat
int
dec
shr
cmp
hlt
into
jae
mov
fcmovnb
mov
iret
xlat
out
pop
adc
add
xchg
scas
xchg
test
add
push
sub
jne
xchg
pusha
add
xchg
lock
add
xor
add
inc
sbb
pop
scas
lea
lds
aaa
pop
push
sbb
sbb
and
and
adc
sti
xchg
mov
push
movs
xor
out
xor
sbb
bound
mov
sub
retf
scas
inc
dec
(bad)
fcmovnbe
arpl
sbb
mov
mov
push
ret
adc
inc
adc
xchg
popa
xchg
cmp
es
mov
cdq
(bad)
js
imul
fidivr
pop
sti
gs
inc
dec
mov
pop
leave
leave
pop
mov
out
jae
xchg
cmp
clc
rcr
cli
jmp
movs
dec
mov
push
xchg
out
xlat
imul
in
popa
xchg
fisttp
or
cmc
(bad)
adc
mov
in
cwde
or
or
sbb
cs
or
les
adc
xor
rol
test
mov
fldcw
adc
shl
jg
adc
dec
add
gs
and
xchg
adc
loopne
mov
adc
cmp
ins
call
iret
sub
push
jae
add
adc
sub
shl
(bad)
mov
lods
pop
pop
daa
stc
xchg
xchg
inc
aas
cmp
retf
xor
push
in
or
dec
mov
cmp
dec
pop
pushf
sti
sub
pop
call
add
ds
jle
(bad)
push
cwde
adc
jg
ret
xchg
pop
dec
jns
sub
arpl
in
jno
xor
addr16
sub
pop
xor
mov
mov
fisub
jns
jne
sahf
lods
cdq
jp
xchg
sub
in
sbb
frstor
test
add
cwde
pushf
mov
pop
imul
out
repnz
fbstp
not
je
popf
test
or
loop
cwde
jecxz
js
lock
jo
push
ss
lods
and
add
lods
int3
jae
mov
push
aaa
cmp
pop
mov
dec
and
aad
dec
mov
pop
cmc
push
retf
inc
call
cmp
cwde
fstp
sub
arpl
adc
jmp
popa
pop
push
cmps
inc
mov
add
test
arpl
scas
push
rol
mov
inc
dec
es
mov
(bad)
mov
sti
lahf
cmp
sbb
jge
ret
(bad)
call
int3
mov
rcr
xchg
push
and
or
xchg
cmp
jle
ins
sub
xchg
js
push
or
sahf
aas
jmp
cmps
stos
mov
xchg
loope
inc
adc
das
stc
jmp
fild
stc
mov
cmps
and
jp
sub
scas
pusha
cmps
dec
jmp
pop
js
movs
add
lds
jo
xchg
sbb
(bad)
arpl
jne
ja
jo
movs
sbb
(bad)
adc
push
ja
pusha
xor
cmp
std
lods
push
and
xchg
and
ret
dec
shl
jecxz
dec
retf
or
sahf
cmp
xchg
xchg
xchg
adc
gs
pop
cmp
fsub
imul
adc
leave
or
neg
retf
add
cld
(bad)
xchg
popa
inc
jo
xchg
cwde
das
inc
push
das
aad
nop
pop
cmps
repz
or
cmp
cmp
or
sub
stos
pop
and
inc
and
pop
out
jg
aad
aaa
mov
xor
rol
int
dec
test
sti
push
div
push
sbb
push
jp
clc
dec
je
mov
jl
and
inc
rol
mov
jns
or
cld
cmp
mov
cld
in
jb
pop
dec
mov
fsubr
xchg
int3
idiv
jge
push
cmps
je
mov
add
inc
jmp
inc
xchg
or
or
repz
test
and
mov
clc
mov
jecxz
or
arpl
outs
test
push
imul
push
std
mov
into
test
jbe
loopne
jle
clc
adc
add
or
pop
dec
mov
add
fidiv
pop
popa
rcr
mov
outs
mov
popa
stc
repnz
neg
int3
stc
xchg
retf
leave
xchg
adc
fwait
push
mov
pop
addr16
xor
sub
sub
mov
mov
mov
add
mov
sub
ins
pop
mov
dec
mov
inc
inc
sar
(bad)
cmps
inc
mov
dec
data16
jecxz
mov
sbb
gs
inc
dec
ins
inc
jecxz
push
or
mov
cmps
iret
js
(bad)
ja
mov
popf
dec
adc
leave
cdq
inc
lods
mov
retf
stos
leave
mov
mov
fstp
cli
inc
mov
mov
mov
call
in
adc
outs
xlat
inc
mov
xor
xchg
xchg
mov
(bad)
retf
pushf
jecxz
imul
add
mov
aaa
jg
call
inc
repz
jns
cmp
cdq
cli
dec
mov
push
mov
push
popa
mov
(bad)
in
fisttp
push
test
retf
push
lahf
xor
imul
adc
push
aad
enter
push
clc
ja
xchg
jne
out
scas
push
push
pusha
adc
(bad)
mov
cmps
jge
sub
mov
and
pop
dec
push
add
mov
into
xor
mov
jge
(bad)
xchg
loopne
sbb
adc
outs
mov
ret
repnz
pop
icebp
push
lods
mov
daa
mov
aam
psubb
add
mov
mov
aas
xchg
jae
loop
dec
dec
push
push
mov
mov
(bad)
push
rol
push
or
test
imul
cmp
sub
pusha
mov
jb
retf
dec
into
leave
fld
frstor
pusha
fisub
dec
idiv
lds
jmp
pop
test
and
or
jmp
sub
dec
ja
cmovs
jmp
int3
(bad)
sbb
inc
icebp
jnp
shl
(bad)
push
dec
cld
in
mul
ret
int
stos
fcmovnu
aaa
bound
in
ins
jge
ds
mov
add
sbb
cmps
daa
fld
adc
stc
add
icebp
clc
pop
dec
add
(bad)
pop
cmps
pop
out
movs
punpckhdq
pop
mov
sub
pop
cmp
inc
mov
scas
imul
in
dec
sbb
push
push
mov
push
stos
push
movs
cmp
mov
cmps
pop
push
pop
push
(bad)
mov
je
push
sub
mov
dec
addr16
ret
jecxz
xor
pop
mov
aam
xor
test
and
std
int
add
inc
fistp
retf
pop
(bad)
loop
out
out
into
test
pop
(bad)
cdq
dec
out
dec
popa
cmps
cmps
fwait
test
inc
sbb
adc
mov
push
jmp
in
mov
div
or
xchg
in
jle
mov
std
(bad)
cli
(bad)
shr
imul
(bad)
js
or
xchg
mov
adc
into
push
scas
into
add
inc
popa
xchg
xchg
ret
adc
ins
(bad)
sti
repz
push
(bad)
pop
sub
call
cmp
mov
fdiv
inc
popf
inc
xchg
out
cs
mov
xchg
mov
lods
add
mov
in
lock
cmp
stos
cli
cmp
sbb
sub
xor
ret
mul
das
xchg
pushf
cli
stc
xlat
mov
or
cmps
add
test
push
sti
jmp
xor
mov
hlt
test
mov
push
pop
mov
dec
out
adc
add
mov
call
cmc
shl
push
push
mov
push
rcl
ror
(bad)
inc
dec
mov
movs
cmp
aad
stc
cmp
jle
dec
sub
(bad)
and
mov
pusha
xchg
cmp
xor
xor
add
sub
out
in
out
ins
sub
call
xchg
call
rol
bound
add
inc
pop
jp
pop
xchg
test
mov
jae
test
sbb
ins
rcr
sbb
mov
sbb
scas
lods
inc
movmskps
sub
jg
bound
ins
cmp
mov
jg
mov
cmps
fstp
aam
jg
outs
or
mov
add
pop
pop
ins
cs
sbb
xor
je
inc
or
sbb
add
(bad)
movs
dec
jle
fs
int3
cmc
pop
mov
movs
(bad)
(bad)
imul
fwait
pop
jne
adc
ins
jmp
pop
mov
in
fwait
mov
fmul
aaa
jno
mov
push
rcl
outs
cmp
dec
sub
mov
mov
fstp
inc
jno
push
cld
nop
mov
mov
(bad)
gs
pop
push
movs
sub
cmp
push
mov
sbb
push
jle
pop
push
xchg
xchg
sub
xor
mov
pusha
rol
outs
daa
inc
jae
js
fld
ds
inc
or
cmps
add
fstp
stos
pusha
lahf
xchg
hlt
aaa
(bad)
mov
xor
stc
in
or
test
ja
ds
xor
pushf
cmp
les
pop
xchg
out
idiv
in
fimul
push
sbb
xchg
jmp
or
sbb
fimul
out
ins
mov
mov
pop
fnsave
pop
shl
mov
pop
push
inc
mov
lahf
dec
xor
or
test
icebp
mov
mov
stc
push
rcl
and
mov
jle
shr
jnp
sub
fcomi
call
inc
lea
cwde
pop
dec
loop
add
and
(bad)
js
add
push
cmp
pop
clc
in
mov
cmp
aam
dec
pop
jp
push
sbb
sar
call
(bad)
cmps
lods
sub
mov
ins
iret
jno
sbb
and
or
mov
or
mov
call
adc
in
adc
lods
push
xchg
sub
inc
push
jo
sbb
jmp
mov
fdivr
pop
xchg
sub
movntps
pop
ss
aas
add
push
or
or
dec
in
add
lods
imul
jl
pop
add
test
mov
ins
push
jns
pop
push
(bad)
adc
out
ficomp
iret
retf
push
jg
(bad)
dec
push
mov
out
mov
or
sbb
adc
dec
pop
push
cmp
repz
in
test
out
inc
mov
vcmppd
mov
aas
mov
sbb
mov
ins
loope
mov
ror
cld
cmps
scas
pop
cmp
mov
or
jmp
js
cs
inc
dec
or
adc
arpl
(bad)
jbe
dec
mov
mov
sub
iret
xor
inc
les
xchg
fsub
pop
data16
push
aam
xchg
loopne
mov
test
sub
xor
ror
out
xor
int3
dec
jne
push
and
cli
sbb
cmp
mov
int3
popw
jae
push
push
test
and
mov
cmps
fmul
rol
fisttp
test
mov
xchg
mov
jmp
mov
(bad)
jae
js
loop
jmp
cs
cs
pop
aaa
jns
lods
js
in
xchg
push
sbb
loop
ss
xchg
stos
dec
mov
adc
jge
jecxz
mov
(bad)
movs
cmc
and
clc
push
in
and
or
sbb
imul
call
xchg
lahf
push
xlat
inc
sbb
cmp
repz
pop
stc
inc
push
cwde
mov
in
or
mov
xor
inc
xlat
or
sub
nop
out
fidivr
rcl
les
div
and
pop
daa
addr16
ins
jns
sub
and
and
jb
in
and
ins
add
lock
sbb
test
inc
push
int
jb
nop
mov
jp
fxch
shl
mov
add
retf
mov
pop
sbb
xor
inc
pop
std
pop
xchg
mov
es
sar
pop
adc
pop
in
add
jbe
mov
cmps
cdq
popa
jne
inc
inc
jecxz
jmp
xchg
shl
lods
in
push
fs
add
inc
and
or
and
mov
mov
test
xchg
(bad)
fs
inc
sti
in
scas
xchg
pop
lds
jmp
iret
int
scas
add
sbb
mov
xor
inc
lods
repnz
push
nop
xor
(bad)
or
or
popa
test
cmp
call
inc
ss
(bad)
or
pop
and
and
dec
scas
repnz
loop
jmp
jne
jmp
or
xchg
into
or
mov
jge
jp
mov
sub
xchg
mov
les
push
jbe
dec
movs
dec
sahf
sub
xlat
xlat
loopne
xchg
fadd
xchg
fadd
retf
pop
clc
mov
push
pushf
or
js
cmp
xchg
adc
xchg
mov
das
iret
outs
(bad)
pushf
leave
push
mov
and
ss
dec
test
fst
inc
jecxz
cdq
mov
fbld
cmp
xor
test
stos
dec
jbe
enter
outs
cdq
jno
(bad)
sub
sub
pop
js
das
sub
and
pop
xor
cmp
js
xchg
adc
jmp
mov
out
add
test
repnz
cmp
push
add
outs
test
shl
ss
and
xor
imul
sub
mov
in
(bad)
adc
(bad)
mov
test
push
hlt
dec
gs
sub
sub
mov
jg
mov
ret
dec
mov
push
cmps
jns
lahf
sar
es
adc
int3
jge
jmp
mov
adc
adc
push
inc
(bad)
pop
pop
retf
add
sub
std
fsub
cmps
cld
sahf
out
and
mov
sbb
cld
je
sbb
lds
add
sub
ins
pop
pop
hlt
lods
inc
jnp
mov
and
push
add
add
dec
jnp
push
mov
mov
es
jg
mov
xor
jl
mov
mul
mov
adc
(bad)
imul
rcr
out
fucomip
je
xchg
test
push
(bad)
sub
sahf
js
nop
cdq
div
loopne
fsubr
sub
fadd
adc
sub
test
dec
adc
and
mov
mov
pusha
ja
pop
cdq
data16
push
(bad)
rol
push
jl
mov
sub
adc
daa
and
rcr
sub
jecxz
lods
dec
sbb
or
(bad)
jno
out
ret
and
jecxz
cmp
clc
jo
dec
pusha
pop
retf
rcl
(bad)
scas
scas
xchg
dec
movs
sub
mov
xchg
mov
add
fist
jmp
call
in
mov
and
fdecstp
adc
mov
loopne
sbb
xchg
or
jnp
or
or
xor
or
nop
cmp
cli
mov
lahf
jg
icebp
jp
mov
pop
pop
push
cmps
imul
push
or
push
ret
aam
push
mov
clc
aad
add
mov
sti
cmp
pop
jne
fs
out
xchg
aad
lods
mov
xchg
call
xchg
pusha
xor
and
mov
adc
dec
cmp
adc
or
mov
loopne
or
ret
pushf
call
je
cmps
dec
or
nop
ins
xchg
adc
les
inc
out
xlat
jae
xor
fdivr
and
add
fdivrp
push
or
or
xor
clc
or
popf
push
jp
into
cmp
enter
fnsave
jnp
not
and
sub
imul
pop
(bad)
rol
mov
push
fdiv
ret
inc
dec
fild
sbb
addr16
outs
xchg
les
xchg
add
aas
pop
inc
ins
inc
popf
inc
pop
out
inc
inc
ret
pop
and
sbb
arpl
cmp
cmp
mov
fisub
pusha
jmp
xor
hlt
push
xor
outs
or
jge
pusha
int3
ins
add
jl
in
lea
fst
sti
xor
in
outs
add
and
ds
mov
icebp
pop
mov
test
aam
stc
in
xor
add
cli
xchg
aas
fadd
adc
fstp
inc
arpl
xchg
cwde
push
test
icebp
mov
push
cdq
push
jmp
rol
mov
jge
jmp
iret
ds
sub
mov
mov
pusha
xchg
cmps
stos
lock
shr
enter
ds
enter
mov
mov
inc
push
fcmovnu
loop
mov
or
(bad)
scas
push
mov
in
retf
add
push
outs
cmp
mov
xchg
adc
ins
mov
jp
scas
lahf
xor
add
test
mov
loop
je
dec
sbb
sbb
cs
outs
arpl
adc
xor
mov
sbb
inc
sbb
cmps
add
jecxz
ret
or
mov
pop
xor
sbb
pop
sti
pop
retf
loop
adc
or
inc
xor
push
mov
out
shr
fstp
ins
fbstp
and
push
loop
loop
and
jmp
and
push
xchg
repz
jb
mov
retf
ret
arpl
cs
or
les
add
ficom
push
push
outs
repnz
fimul
inc
repnz
mov
test
push
jge
jnp
stos
xor
push
pop
inc
out
out
xchg
pusha
inc
lea
and
push
call
cdq
mov
call
sub
jle
cmp
cs
jmp
test
(bad)
mov
cli
das
mov
jb
rcr
push
jecxz
mov
inc
je
add
cmp
jmp
push
mov
adc
add
xor
mov
outs
scas
mov
push
cmps
fstp
int3
and
in
lock
jmp
hlt
dec
sub
nop
imul
push
mov
in
cmps
out
jae
int
(bad)
imul
aad
adc
daa
arpl
mov
mov
or
inc
pop
aaa
mov
inc
cdq
push
dec
addr16
arpl
xchg
stos
retf
ds
sub
xor
addr16
pop
fwait
and
arpl
or
icebp
or
or
add
jg
push
fbstp
push
push
cld
add
(bad)
jle
sbb
jb
std
sbb
mov
cmp
lods
xor
outs
inc
xchg
push
(bad)
jns
dec
leave
and
or
sti
cmp
add
ret
scas
mov
push
lods
adc
inc
cmp
idiv
leave
lods
adc
out
leave
cli
call
mov
pusha
mov
add
sbb
mul
mov
ds
clc
jns
sbb
jb
and
std
(bad)
jo
push
and
dec
add
add
ret
popa
sub
fxch
sub
add
popf
ret
inc
fist
daa
push
shl
test
jp
inc
pushf
fdiv
add
int3
xchg
xchg
icebp
pop
movs
mov
mov
loopne
lock
cld
xchg
ins
mov
add
push
shl
adc
std
ja
jno
outs
lahf
lock
test
push
jae
dec
std
inc
sahf
xchg
sub
jecxz
mov
pop
mov
xchg
data16
xor
pop
out
jb
mov
leave
inc
pop
das
xchg
mov
xchg
sbb
mov
pop
mov
cwde
mov
jmp
retf
jnp
stos
mov
fadd
les
nop
(bad)
imul
scas
add
mov
jns
push
into
dec
pop
lods
ret
out
lock
adc
xor
in
aam
inc
jmp
xchg
outs
test
fadd
push
pusha
jo
fsubr
int
pushf
cmps
shl
(bad)
je
jae
aad
adc
popa
push
out
mov
enter
cmc
loope
stos
stos
or
movs
dec
cwde
mov
scas
scas
je
push
xor
xchg
adc
sub
jnp
sub
test
xlat
loopne
sbb
jge
les
ret
jge
inc
mov
fwait
stos
outs
mov
or
in
ja
outs
xchg
pop
cmp
sbb
push
in
fldenv
cs
fsubr
add
adc
outs
add
jne
lds
js
push
scas
fs
sub
bound
loope
cli
jno
dec
mov
and
je
push
cs
pop
jp
sub
int
dec
mov
inc
movs
imul
add
xor
mov
fcmovb
sar
pop
xor
pop
imul
add
mov
fdiv
add
push
xor
adc
movs
aad
aaa
jp
ss
mov
adc
dec
inc
add
call
xchg
jmp
pusha
daa
out
or
jmp
movs
mov
mov
inc
mov
cmps
out
jnp
mov
cmp
ins
or
xlat
call
push
cmps
mov
(bad)
out
icebp
mov
adc
bound
mov
fild
pop
mov
mov
sub
popa
retf
mov
repnz
mov
add
bound
shl
xchg
xchg
(bad)
fidivr
stc
fld
adc
xchg
movs
mov
dec
and
pmaddwd
fucomp
vcvttss2si
into
cmp
das
shl
mov
jno
rcpps
neg
out
daa
and
es
or
in
mov
lahf
gs
test
pop
push
push
dec
cmc
mov
jns
and
push
jno
fisttp
lahf
cmp
jp
scas
test
ret
xor
loope
lock
adc
daa
sub
or
lock
dec
jg
push
cmps
fidivr
loop
stc
xor
adc
or
inc
hlt
xor
dec
jg
xchg
fwait
and
or
(bad)
push
xchg
pop
add
into
push
or
xor
push
sub
mov
jns
mov
sbb
jp
inc
das
call
mov
pusha
push
int
imul
inc
pop
bound
jns
outs
test
mov
nop
mov
pushf
add
mov
aam
pop
outs
les
and
es
rol
mov
sbb
add
or
or
mov
inc
xor
dec
loopne
adc
inc
rol
or
stc
ret
push
test
js
es
ret
lods
mov
fcomip
leave
ret
jne
dec
cmp
cs
mov
cmp
mov
push
add
jge
stos
adc
and
xor
adc
retf
mov
mov
pop
sub
mov
sub
add
push
clc
daa
add
adc
adc
sbb
mov
cld
arpl
xchg
lahf
sbb
add
mov
popa
pusha
jns
pop
ja
in
in
jle
repnz
cmp
pop
scas
aad
cmp
loop
sbb
pusha
js
jle
sbb
aaa
dec
sahf
cmp
daa
mov
xor
dec
mov
mul
mov
push
mov
gs
pusha
shl
lds
xor
mov
loope
and
sub
mov
pop
mov
dec
mov
mov
add
clc
leave
push
repz
push
pusha
sub
mov
fwait
sti
dec
xchg
call
push
sub
mov
pop
cdq
xor
mov
adc
std
pop
push
nop
lea
push
inc
shl
cmp
add
and
xchg
mov
movs
pop
jle
je
pop
or
inc
fs
retf
les
mov
hlt
out
and
scas
adc
(bad)
adc
imul
in
mov
fist
scas
mov
mov
mov
retf
test
retf
xor
pop
jnp
hlt
cmps
add
ret
out
push
mov
jns
sar
ins
shl
pop
imul
pop
retf
in
sub
mov
xchg
jbe
and
int3
jmp
mov
xor
adc
call
xlat
add
mov
fsub
and
mov
movs
mov
cmp
fdivr
in
mov
lds
inc
or
fdivr
test
loopne
add
jno
in
test
push
pop
gs
mov
sti
jbe
fmul
fsubr
stos
mov
ficom
stos
not
inc
in
cmp
add
cmp
push
or
int3
cmps
mov
mov
aas
mov
push
leave
pop
retf
aaa
pop
das
pop
jl
bound
add
push
xchg
cwde
push
ins
inc
loop
cmp
push
call
fs
jb
mov
push
jae
mov
sbb
pop
mov
inc
loope
xchg
je
std
hlt
shl
sbb
stos
inc
push
pop
setb
cmp
(bad)
outs
sub
js
cmps
xchg
sbb
cmp
cmc
test
mov
adc
sahf
pop
push
js
cs
aam
fld
icebp
fs
xlat
jecxz
repnz
test
(bad)
jg
sub
xor
fdiv
je
sbb
fwait
and
mov
inc
sbb
push
(bad)
imul
push
stos
adc
xor
pushf
mov
and
cmp
fnsave
cmp
mov
les
mov
daa
mov
aad
mov
or
shl
leave
inc
enter
xlat
xor
rcl
stos
and
mov
mov
nop
adc
repz
jle
cmp
ror
movs
inc
movs
les
ins
xor
cmp
xor
ss
mov
nop
push
gs
arpl
cmp
scas
std
xchg
fisubr
mov
leave
popf
inc
into
or
rol
mov
imul
xchg
leave
test
nop
repnz
xchg
push
stc
in
jno
sub
xchg
ins
outs
xchg
(bad)
and
push
aad
push
data16
pushf
push
add
xchg
adc
ret
repnz
rcl
mov
add
xchg
fmul
mov
inc
fisubr
xchg
imul
xor
out
pop
mov
lods
sub
pushf
xchg
ins
xchg
push
sub
cmp
jne
mov
ds
call
sub
sub
xchg
imul
popf
mov
mov
mov
enter
and
push
mov
not
sbb
(bad)
clc
xor
push
pop
sub
std
push
cmp
fcom
frstor
sub
dec
sbb
(bad)
bswap
xor
test
jb
pop
shl
xchg
or
lea
pop
popa
jecxz
popf
pusha
movs
call
leave
xor
cmp
or
movs
push
jp
popa
xchg
mov
leave
loope
ror
push
jb
(bad)
loop
inc
pop
push
cmps
clc
push
ins
mov
daa
(bad)
fcom
test
sub
rol
cmp
jg
dec
shr
lea
loope
test
push
mov
mov
xor
xchg
mov
xor
popf
lds
dec
sub
iret
das
jecxz
mov
rcl
jno
or
mov
cmps
loop
fadd
into
xor
sahf
stc
xchg
dec
ins
fcmovnbe
out
sub
jmp
push
clc
aam
or
sub
test
pop
repz
call
imul
inc
js
mov
and
adc
retf
stc
mov
pop
xor
mov
call
dec
xchg
mov
(bad)
jns
fcom
jns
movs
or
cmp
xor
mov
out
rol
sub
mov
xor
das
out
in
js
xchg
aas
sti
push
pushf
in
sti
popf
fisubr
mov
add
imul
xor
leave
sbb
aas
mov
jmp
adc
int
jno
test
push
mov
and
mov
mov
pusha
stc
adc
fwait
ins
xchg
jb
xchg
sbb
push
jmp
cmp
push
in
les
sub
jmp
inc
arpl
stos
iret
push
pop
stos
mov
jge
enter
(bad)
ds
pop
mov
mov
and
ss
rcr
in
das
fisttp
dec
cmp
lahf
imul
retf
int
jmp
inc
mov
cs
push
mov
in
pop
sub
sti
xchg
mov
mov
jno
in
and
imul
sbb
cmp
push
sub
sar
push
mov
mov
jno
xchg
clc
and
and
je
push
jg
lahf
inc
push
repnz
loopne
jmp
ds
aaa
imul
std
jnp
jp
xlat
enter
add
cmp
xchg
scas
lods
outs
dec
repz
ret
xchg
pop
jb
movs
mov
pop
sub
ficom
in
aaa
push
add
jg
fidiv
repz
dec
adc
cmp
push
jecxz
xchg
rcr
fdivr
pop
mov
(bad)
test
pop
push
data16
pop
push
push
stos
mov
outs
xchg
data16
pop
add
int
mov
lea
jle
jp
mov
ins
mov
mov
dec
ret
cs
call
mov
jno
mov
loopne
int
in
jnp
xchg
add
xchg
dec
push
add
xor
retf
leave
lea
mov
push
dec
fnstenv
test
fdiv
xor
mov
sub
rcl
xchg
loopne
mov
xor
pop
jmp
xlat
in
rol
and
dec
and
call
pop
(bad)
out
imul
int
fisub
lea
jmp
pop
jno
es
callw
ret
mov
or
test
jne
sahf
lock
mov
mov
xor
add
dec
sub
mov
movs
ds
mov
cmp
icebp
sbb
lods
jle
out
and
sbb
cdq
and
lods
adc
adc
arpl
cmps
loop
leave
ret
jne
or
cmp
cld
(bad)
nop
cli
dec
xchg
jns
xor
cmps
mov
pop
fcomp
add
in
and
inc
test
mov
jle
ins
mov
sbb
dec
dec
cmc
inc
into
push
sti
mov
sub
adc
rcr
test
dec
jne
jae
pusha
out
hlt
cld
hlt
fbstp
pop
iret
lds
mov
rol
sbb
xchg
aaa
and
sbb
mov
pop
shr
test
xor
rol
mov
jmp
and
loope
fisttp
pop
mov
repz
sbb
xor
pop
xor
data16
pop
push
fstp
rcr
sahf
mov
stos
pop
lods
aam
(bad)
in
dec
and
mov
jge
push
outs
add
mov
nop
push
scas
mov
popa
rcl
xor
adc
(bad)
sbb
(bad)
pop
lock
dec
or
pop
mov
iret
arpl
repnz
mul
jl
scas
loop
or
push
and
push
push
push
dec
mov
(bad)
loope
jecxz
cld
mov
xchg
push
test
hlt
(bad)
sub
mov
dec
jmp
enter
movs
pusha
ds
jge
xchg
and
xchg
cmps
adc
mov
push
push
sbb
add
xchg
mov
retf
inc
push
aas
sub
les
cli
sub
ret
pop
jno
adc
push
sub
sbb
mov
fs
add
mov
xor
fldcw
cld
imul
sbb
mov
pop
sbb
sub
pop
bound
dec
add
inc
(bad)
movs
test
je
cli
test
sbb
adc
ss
dec
jp
lods
mov
(bad)
dec
push
in
outs
test
fidivr
ds
fcom
mov
loopne
jns
fisub
(bad)
cmp
xor
pop
mov
sub
jp
cmp
pop
pushf
cwde
pop
fld
jnp
aam
stc
(bad)
mov
sbb
pop
adc
jmp
add
xchg
sahf
not
mov
ret
daa
push
bound
push
jbe
cld
je
xchg
sub
xor
jmp
bound
or
cs
add
push
fld
lods
fist
dec
stos
rcl
in
addr16
into
or
clc
jle
adc
pop
aas
xchg
xor
or
xchg
jo
mov
icebp
daa
and
cs
(bad)
lods
(bad)
mov
push
cld
fwait
aaa
xchg
xchg
adc
and
dec
outs
(bad)
nop
lods
and
sbb
or
ror
sbb
iret
mov
mov
in
fwait
movs
adc
jmp
cmp
and
or
lods
adc
int
mov
mov
mov
icebp
sti
repnz
mov
push
pop
aad
adc
cmps
lods
push
pop
inc
pop
test
lahf
leave
out
add
out
push
or
(bad)
add
or
shl
mov
xchg
addr16
cmp
lods
data16
dec
ror
std
push
repnz
jecxz
pop
push
(bad)
sub
pop
lods
imul
enter
fst
lahf
inc
test
test
lods
(bad)
lods
sub
retf
lods
call
in
mov
test
(bad)
in
sahf
mov
pop
scas
ins
push
hlt
scas
xor
dec
in
and
cwde
xchg
pop
cmc
in
stc
mov
xchg
popa
mov
call
sub
push
mov
cmp
sahf
push
adc
sbb
imul
test
(bad)
push
inc
pop
sbb
inc
test
outs
inc
push
aam
push
or
dec
mov
xor
add
add
or
push
pop
jo
(bad)
jnp
and
lods
xlat
xor
hlt
pop
scas
or
and
leave
into
push
mov
sahf
sar
mov
and
stc
sub
(bad)
pop
test
sub
or
inc
ds
pushf
enter
(bad)
psubw
adc
add
adc
sbb
push
clc
call
popf
imul
xor
dec
pop
xchg
xchg
xchg
add
js
ss
and
cmps
adc
outs
or
fidivr
dec
les
add
push
mov
inc
add
sbb
pop
adc
mov
mov
repz
pop
addr16
and
jnp
retf
push
dec
sub
push
pop
inc
mov
cmp
xchg
dec
aas
div
xchg
shl
mov
mov
add
out
scas
push
mov
js
push
adc
inc
sbb
cmc
xchg
push
xor
mov
(bad)
mul
mov
lock
popf
test
jmp
mov
out
ins
neg
mov
test
out
not
pop
out
push
aad
mov
ins
retf
neg
sar
xor
(bad)
push
aaa
ss
idiv
dec
xor
retf
push
or
or
cmps
movs
pop
xchg
shl
out
(bad)
std
arpl
xchg
mov
cmp
loope
jge
add
loopne
test
ds
cwde
cmp
pop
call
(bad)
mov
xor
sbb
xor
ds
stc
in
push
pushf
add
inc
nop
and
xlat
sar
lods
aad
ins
mov
aad
leave
sub
movs
hlt
xor
jns
adc
inc
mov
ret
shl
pop
imul
xchg
test
iret
out
mov
shl
imul
push
scas
out
test
xor
cmp
cmp
fwait
xchg
ror
lock
gs
add
mov
push
repnz
inc
sub
add
and
pop
dec
xchg
iret
stc
mov
xor
iret
xchg
mov
or
jne
inc
jae
daa
mov
test
dec
xor
pop
fimul
jp
ficom
mov
scas
enter
sub
jmp
(bad)
dec
out
test
xchg
icebp
test
shr
neg
sbb
ret
mov
gs
xchg
inc
dec
jg
lods
dec
out
mov
push
pop
ss
mov
pop
cmp
sbb
into
xchg
adc
sub
out
mov
stos
xchg
push
mov
dec
or
push
rcl
pop
loope
cmp
jle
jne
std
jl
inc
mov
int
add
test
clc
push
test
mov
test
mov
std
lods
or
sub
and
cmp
pop
push
pop
sub
stos
ins
test
push
jne
jle
dec
not
xchg
pop
pop
mov
sbb
or
sub
dec
dec
pop
push
or
sar
loop
aaa
ret
scas
mov
into
int3
jmp
inc
cld
jb
jmp
add
lahf
jns
cs
sbb
mov
fwait
xor
sbb
addr16
sbb
mov
daa
push
lods
aaa
add
push
outs
xor
int
lods
cmps
stos
push
imul
scas
(bad)
fstp
aaa
dec
jmp
pop
inc
ret
(bad)
dec
mov
lahf
cmp
inc
dec
or
shl
fstp
sbb
lods
not
jb
sahf
pusha
cmp
pop
add
mov
out
movs
jle
retf
dec
jp
frstor
fsub
sub
add
mov
call
jmp
mov
movs
or
and
and
xchg
popa
fnsave
xor
stos
out
mov
dec
rcl
in
mov
pop
fcompp
imul
jb
and
jae
call
push
and
sbb
cmp
stos
sahf
xor
es
lock
addr16
int3
dec
xor
mov
dec
adc
adc
lock
and
loop
inc
jno
mov
daa
gs
pop
xchg
sbb
xchg
out
xor
sar
cld
inc
sbb
movs
setg
push
jp
jp
adc
movs
pop
inc
in
loopne
popa
mov
add
push
adc
pop
add
mov
cli
cmp
inc
imul
out
mov
outs
cwde
dec
repnz
enter
xor
cwde
int3
ret
push
inc
push
aaa
add
adc
push
xor
outs
mov
push
xchg
cmp
enter
and
pop
adc
loopne
sbb
sbb
sub
push
lds
sbb
xor
or
push
push
mov
add
mov
sbb
scas
lods
or
and
push
mov
outs
jecxz
popa
aas
cmp
ja
out
mov
mov
jns
push
dec
pop
daa
mov
xor
(bad)
adc
push
(bad)
xchg
mov
dec
xlat
movs
add
xor
(bad)
(bad)
or
cmc
pushf
jnp
stos
repnz
mov
mov
outs
sbb
sti
es
push
mov
bound
jo
shl
aam
sbb
add
mov
aaa
add
xlat
xor
jle
dec
jbe
arpl
(bad)
out
jp
push
sbb
add
test
int
retf
nop
dec
sbb
jmp
adc
mov
mov
fld
ret
es
pop
mov
sbb
jns
test
jg
pop
or
sub
push
sbb
dec
ins
jns
xchg
jecxz
repnz
dec
mov
or
retf
xchg
mov
movs
xor
shl
inc
shl
push
imul
dec
les
inc
mov
mov
sbb
mov
cwde
xchg
rcr
dec
int
mov
push
in
jecxz
jns
aas
mov
xor
stc
push
and
inc
pop
mov
sbb
loop
xchg
pop
dec
sbb
cli
adc
jno
(bad)
test
scas
jo
lea
add
sti
mov
jle
imul
test
xchg
fmul
fld
mov
pushf
push
mov
addr16
lea
cdq
or
adc
mov
cdq
add
fistp
pop
lods
and
jecxz
push
adc
and
addr16
mov
mov
fidivr
xchg
or
adc
add
and
dec
into
mov
idiv
fcomp
mov
imul
and
ror
push
enter
cmps
test
mov
jp
retf
jns
adc
gs
xchg
les
je
sub
mov
mov
mov
inc
adc
jo
dec
lea
cs
int
mov
fwait
lahf
push
and
fcom
or
pop
sbb
loopne
mov
adc
adc
pushf
sbb
pop
sti
popa
(bad)
or
cmps
adc
jle
or
std
mov
(bad)
imul
les
fwait
push
push
mov
out
sub
mov
mov
sub
jbe
and
pop
ja
sub
leave
mov
pop
mov
test
popf
cs
into
cmc
sub
outs
sub
jecxz
xlat
push
push
pop
ret
ror
jne
aas
in
adc
mov
and
into
xor
fld
push
in
mov
add
and
mov
aad
pop
out
pushf
jg
cmc
xchg
pusha
xchg
or
hlt
imul
fistp
rol
fs
jp
test
adc
ficom
mov
and
xchg
scas
xchg
icebp
cdq
scas
sub
les
outs
ds
out
rcl
frstor
jecxz
retf
cs
push
pop
mov
scas
ja
mov
gs
adc
pop
add
mov
in
xor
(bad)
or
in
add
xor
scas
test
cs
pop
add
cmp
les
sub
or
jle
push
adc
fldenv
or
popa
data16
test
div
mov
mul
cmc
scas
sub
and
jge
pusha
cli
ja
out
addr16
lods
sbb
(bad)
stos
dec
jp
pop
pop
cvtpi2ps
pusha
mov
imul
mov
loopne
cmp
mov
add
scas
mov
and
pop
retf
mov
dec
fwait
lock
sbb
(bad)
push
mov
inc
arpl
pushf
div
outs
dec
(bad)
cmp
sti
and
aas
(bad)
adc
cmp
jnp
push
addr16
rol
mov
(bad)
loope
or
popf
aaa
jg
inc
std
retf
and
cmp
xchg
into
pop
pop
test
rcr
and
fbld
(bad)
out
fnstenv
rol
call
lea
sub
sub
jmp
push
shr
lea
adc
out
outs
pop
out
pop
arpl
cmps
shl
push
enter
jg
stc
mov
neg
xchg
(bad)
sbb
xor
ss
loope
xor
inc
add
ficomp
out
inc
jge
jns
icebp
xlat
cmp
push
mov
jmp
xor
cwde
fist
mov
mov
add
or
push
pop
inc
lahf
retf
lock
mov
test
jbe
mov
dec
mov
scas
in
adc
(bad)
test
sahf
cwde
push
loop
addr16
sbb
jl
clc
adc
adc
mov
lds
inc
sub
jge
cwde
pop
adc
shl
push
pop
cmp
fisub
xchg
jg
dec
lahf
aam
add
or
fs
mov
mov
jge
fwait
or
push
movs
adc
mov
sub
xchg
mov
mov
loop
test
jo
repnz
mov
adc
in
pop
das
outs
fs
out
lea
shr
push
adc
lds
ss
xchg
jo
xadd
pop
push
mov
enter
push
add
stc
call
dec
cmc
inc
adc
mov
or
mov
adc
(bad)
sar
xchg
iret
sbb
scas
shl
adc
sub
inc
gs
push
pop
in
lock
xor
pop
and
sbb
test
push
shl
and
lea
test
aam
push
push
and
leave
cmp
icebp
xchg
xchg
add
cmp
mov
leave
cwde
daa
cmp
test
sub
fs
jnp
inc
xchg
adc
in
and
cdq
inc
xlat
push
xchg
aas
mov
data16
cmp
mov
push
ror
or
pop
je
into
ficomp
inc
push
fbld
sar
pop
les
dec
out
add
pop
xchg
lahf
cmp
inc
xor
imul
cmps
cmp
xor
movs
jo
add
adc
xchg
pop
sub
mov
mov
(bad)
out
(bad)
mov
dec
mov
int3
inc
sbb
scas
adc
push
fmul
mov
das
add
cmps
pusha
jo
sub
pop
fwait
dec
outs
mov
xlat
cmp
pop
stos
ret
mov
popa
mov
in
test
repnz
inc
cld
sahf
or
xor
push
xor
stos
adc
fstp
cli
pop
xor
sbb
sbb
and
jae
xchg
fdivr
int
adc
sub
arpl
ret
stc
sbb
inc
cs
push
cwde
aas
sbb
gs
mov
dec
push
das
xchg
pop
sbb
jmp
in
in
shl
lods
xchg
xchg
push
das
xor
(bad)
aad
sbb
arpl
adc
scas
shl
xlat
js
aas
push
repz
aam
or
das
jns
cdq
push
hlt
ret
daa
je
icebp
mov
sub
jge
inc
push
es
js
scas
dec
not
adc
movs
repz
pushf
aas
fcmovu
xchg
push
jl
add
mov
adc
and
retf
jge
xchg
or
dec
in
and
ret
fmul
jge
and
imul
fs
inc
pop
sub
adc
mov
(bad)
xchg
mov
frstor
mov
test
pop
lods
out
mov
jecxz
add
lods
mov
cmovb
adc
or
call
adc
ins
pop
rcr
or
jmp
sbb
add
daa
cmp
loope
test
shl
mov
and
add
or
in
test
aaa
icebp
jae
fwait
mov
jmp
mov
mov
cmp
test
cli
xchg
xor
neg
in
repnz
inc
pop
add
fild
dec
xchg
inc
xor
jp
pop
jg
mov
int3
out
ja
jne
jae
jae
out
ins
shr
stc
mov
fisttp
inc
je
sti
(bad)
adc
adc
in
clc
cvtps2pi
ret
cmp
gs
mov
inc
rcl
dec
dec
pop
inc
loopne
cwde
adc
push
mov
mov
pop
sahf
sbb
mov
jg
test
fadd
sub
jbe
mov
test
push
fisub
mov
je
iret
(bad)
or
cdq
pop
xor
xor
or
iret
arpl
cmps
mov
ja
push
mov
or
dec
pop
stos
aaa
push
in
add
jne
shl
enter
outs
retf
call
sar
add
loop
and
inc
je
xchg
(bad)
in
ins
sub
(bad)
daa
cmps
shr
or
mov
mov
mov
xor
xchg
inc
call
sub
nop
or
scas
cmps
in
pop
sar
movs
push
jae
ins
stos
mov
iret
add
mov
es
cs
mov
pop
sub
sahf
and
stc
rol
aam
(bad)
xor
cs
sar
pop
into
mov
add
pop
push
bound
add
faddp
outs
jg
xchg
nop
cld
aaa
sub
or
ds
(bad)
fstp
sub
dec
mov
mov
inc
outs
call
pop
test
retf
sub
call
cmp
ja
xchg
(bad)
mov
gs
xor
xor
lods
pop
xor
fdivr
adc
lods
mov
ror
xor
call
sub
fwait
loop
cwde
aad
xchg
sbb
std
dec
sub
jnp
aaa
in
jns
jnp
xchg
cmp
lahf
pop
xor
xor
xchg
adc
adc
sub
push
cwde
sahf
out
in
ret
push
pop
scas
sub
push
cmc
push
nop
xor
push
test
add
mov
shl
jmp
gs
push
push
and
mov
jmp
mov
sub
adc
fs
dec
jo
jne
adc
mov
sahf
jns
pop
push
add
sub
push
addr16
inc
lahf
jno
ss
(bad)
in
test
vaddss
sub
push
data16
shl
or
or
mov
inc
ins
sahf
add
mov
or
or
pop
lahf
movs
sub
sub
aam
lods
ins
out
add
ss
mov
or
sbb
xor
loope
mov
dec
into
call
sbb
inc
adc
retf
xlat
(bad)
in
mov
cmp
jno
aam
rcr
xchg
mov
dec
fs
sub
ficomp
cld
cmc
movs
daa
loope
cld
xchg
movs
push
jae
jle
cmp
addr16
jl
outs
iret
jp
mov
dec
iret
xor
mov
mov
jmp
dec
jbe
add
das
in
ret
ret
das
mov
gs
bound
fwait
sub
jno
imul
xchg
mov
mov
stc
sti
(bad)
xchg
je
gs
ins
push
inc
sbb
jne
mov
enter
cwde
(bad)
xor
mov
sub
ret
outs
dec
aad
adc
rcr
pushf
or
pusha
inc
scas
cdq
fild
push
movs
ds
jle
loopne
and
mov
mov
mov
ret
retf
loope
fnstsw
push
cmp
mov
adc
fnstsw
sbb
jb
test
mov
xlat
cwde
mov
xchg
movs
loope
and
mov
test
in
dec
jp
leave
mov
clc
jb
aad
or
mov
(bad)
retf
test
movs
mov
mov
sbb
pop
xor
xor
cmp
adc
sti
lar
(bad)
add
add
mul
jnp
pop
or
and
outs
stos
sub
xor
out
mov
ss
mov
or
ins
push
in
mov
adc
push
pop
ficom
int3
retf
(bad)
(bad)
jmp
dec
fsub
sti
push
jge
dec
call
or
pop
sti
mov
dec
(bad)
std
xchg
adc
shrd
movs
leave
scas
pushf
sub
mov
xchg
aas
xchg
fwait
xor
jecxz
jno
jae
sbb
mov
and
pop
xlat
sbb
xor
call
adc
(bad)
div
jns
adc
jmp
bound
add
jnp
jl
cmps
or
les
push
(bad)
in
pusha
ror
sbb
pop
mov
arpl
stos
add
cmp
not
sub
push
gs
rcr
push
in
arpl
or
movs
es
ins
adc
stos
mov
dec
add
dec
xor
shl
das
pop
xchg
adc
xor
sub
mov
dec
jmp
xor
xchg
mov
xchg
int
mov
mov
aad
jb
xlat
mov
mov
leave
pop
add
cmp
push
add
sub
fbstp
xchg
aas
ss
in
cmp
stos
fadd
loopne
ror
push
sbb
xchg
int
mov
or
(bad)
loopne
adc
push
rol
outs
ins
jb
cmp
fisub
jp
xor
pop
ja
and
stos
xor
in
xchg
push
pop
cmps
mov
dec
test
out
push
jle
mov
mov
cdq
adc
fist
push
or
xor
sub
mov
pop
sbb
or
xor
inc
jge
cmp
mov
adc
lahf
outs
hlt
in
rcr
(bad)
sub
or
jle
int3
pusha
pop
movs
iret
aas
mov
stc
popf
cdq
test
jg
mov
(bad)
popf
cmp
out
rcr
dec
test
pop
dec
aas
push
(bad)
jmp
xor
jge
jb
mov
daa
dec
adc
aam
pop
sub
(bad)
imul
inc
mov
or
cmp
repz
or
sbb
ror
pop
mov
das
shl
xchg
test
jmp
aaa
mov
ds
sbb
and
jp
lock
jns
xor
out
mov
mov
sbb
mov
mov
in
push
push
or
div
inc
sbb
call
inc
leave
push
dec
shr
push
or
xor
sbb
shr
rcr
mov
(bad)
xchg
ins
xlat
xor
xor
jae
or
(bad)
rcr
into
jp
jle
imul
std
into
mov
fistp
cmp
(bad)
repnz
jge
pop
xor
ret
rol
das
inc
and
test
and
std
mov
adc
jnp
aam
dec
pushf
or
aam
ds
jle
jae
add
shr
xor
cmp
jg
iret
inc
shr
sub
inc
stc
arpl
mov
xor
call
jae
mov
popa
xor
add
jae
xor
mov
pop
clc
push
out
std
pusha
pop
and
xor
(bad)
lods
lea
arpl
pop
xor
push
pop
mov
not
pop
cmps
xchg
hlt
xor
push
ret
movs
xchg
sbb
adc
push
add
push
call
mov
xor
pop
daa
mov
fisubr
ficomp
inc
inc
gs
mov
and
sub
jae
(bad)
fldenv
push
test
fidivr
cmp
mov
push
popf
push
cld
into
mov
fs
push
(bad)
sub
out
add
add
cld
retf
or
mov
ret
repz
int
add
or
xchg
fsubr
inc
and
pushf
xchg
push
jno
bound
dec
arpl
cmc
aaa
cli
mov
rcl
xor
and
ja
shl
xchg
(bad)
(bad)
out
inc
sub
jmp
xchg
test
ja
jae
imul
mov
popf
hlt
and
xchg
test
movs
xchg
cmp
and
pop
pop
inc
sbb
add
clc
popa
push
cwde
scas
pop
adc
mov
jecxz
push
fsubr
movs
mov
xor
mov
outs
call
inc
bound
sar
add
xor
cmp
cs
and
mov
sub
jg
sub
mov
adc
popa
inc
xchg
push
mov
jo
inc
xlat
xchg
jmp
es
add
xor
sbb
add
xchg
lods
sbb
test
add
out
mov
mov
fs
iret
cmp
xor
inc
jmp
push
in
xor
mov
jbe
dec
scas
aaa
mov
sbb
in
fmul
nop
dec
sub
xchg
mov
mov
pop
pop
add
data16
sti
jecxz
mov
ja
aad
repnz
add
dec
mov
inc
mov
out
loop
add
xlat
lods
mov
stc
ficom
hlt
mov
add
pop
outs
sbb
outs
adc
mov
sti
mov
inc
jne
addr16
leave
lahf
mov
adc
shr
push
pushf
pop
pop
jbe
popf
call
push
cmc
dec
or
xchg
push
(bad)
mov
jp
mov
and
test
(bad)
call
lds
jecxz
loopne
pop
daa
sub
push
mul
cwde
adc
outs
adc
and
dec
out
jbe
retf
adc
push
(bad)
ret
pop
test
aam
nop
sar
mov
pop
dec
push
out
loop
jno
stos
pop
hlt
pop
adc
push
out
out
pop
out
xlat
push
jnp
push
adc
push
imul
sub
inc
mov
movs
fsub
es
test
dec
dec
shr
push
lock
dec
mov
mov
repz
push
in
push
cmc
lds
in
xchg
xlat
arpl
inc
sub
jge
int
dec
cmp
mov
jb
sbb
sbb
or
in
dec
cmps
inc
retf
push
outs
je
jno
pushf
imul
outs
push
add
mov
imul
loopne
stos
aam
adc
dec
pop
imul
fst
cs
push
ss
pop
xor
cmps
jp
inc
cmp
cwde
(bad)
out
outs
out
jg
cmps
cmps
xchg
shl
icebp
rol
(bad)
cmps
mov
inc
mov
repz
push
sub
push
jge
xchg
add
mov
xor
or
test
mov
mov
loope
nop
popa
jmp
pop
sub
lds
out
sbb
(bad)
ret
jp
pop
test
mov
dec
fist
dec
jge
test
or
mov
mov
dec
enter
call
enter
outs
(bad)
push
(bad)
jp
add
jns
inc
and
stos
jo
adc
jae
cmps
or
cld
and
jns
mov
and
pop
add
clc
outs
retf
jae
(bad)
push
sbb
mov
outs
mov
or
dec
xor
mov
sar
jle
jnp
xchg
jge
ror
mov
scas
div
mov
jmp
xchg
jnp
and
inc
movs
add
data16
lods
fdiv
mov
(bad)
lock
jns
and
inc
sbb
ss
aas
inc
or
jns
push
pop
xor
fst
push
or
xor
test
std
arpl
call
dec
add
in
test
adc
mov
repnz
adc
dec
dec
or
push
stc
ins
(bad)
mov
mov
(bad)
or
inc
cmps
sub
(bad)
jno
adc
jno
es
pop
ja
dec
sub
pushf
test
cmps
adc
cld
pop
jnp
out
outs
add
sbb
in
xlat
xchg
loope
daa
test
outs
pop
xchg
retf
cs
mov
jne
or
or
mov
shr
test
xchg
int3
mov
adc
shr
dec
into
fwait
jae
popa
xchg
dec
xchg
sub
loop
mov
mov
int
data16
sub
fldpi
mov
loopne
aaa
(bad)
add
les
xchg
cmc
stc
sbb
jb
movs
fwait
jle
add
out
inc
xchg
adc
pop
jns
inc
cmp
inc
mov
adc
lock
int
mov
mov
push
jg
xlat
in
add
inc
movs
loope
mov
test
or
pop
daa
(bad)
adc
jle
dec
add
sbb
cmps
in
(bad)
out
cmps
(bad)
(bad)
movs
cwde
mov
cmp
pop
or
pop
les
gs
stos
mov
mov
xor
add
mov
and
popf
and
out
push
fidiv
and
jo
sbb
bound
jle
sti
add
push
scas
pop
jge
clc
lea
push
jp
and
(bad)
(bad)
sti
inc
mov
popa
inc
rcl
movs
arpl
sub
stos
jae
sbb
cmc
or
aas
ins
imul
mov
push
inc
popf
dec
jle
push
sbb
aaa
cmp
cwde
push
pop
adc
loope
shl
or
aaa
loop
push
in
xor
sahf
jbe
sbb
imul
xor
lods
in
sbb
dec
rol
cld
adc
jp
neg
xchg
stc
adc
xchg
xchg
pop
mov
mov
mov
imul
or
sub
(bad)
push
cld
arpl
dec
inc
adc
and
aaa
xchg
movs
add
mov
push
mov
mov
dec
stos
inc
mov
outs
mov
mov
dec
add
and
or
sbb
and
push
jl
and
xchg
stos
sbb
aaa
dec
(bad)
push
sbb
cmp
jge
adc
add
dec
mov
pop
shl
cwde
cmp
in
dec
sbb
jo
xor
sbb
cmps
jle
js
mov
adc
in
pop
mov
rcl
sub
dec
jo
sbb
test
jno
sti
shr
mov
inc
mov
pop
or
mov
mov
inc
inc
push
xchg
mov
jmp
addr16
sbb
push
cmc
fsub
mov
sub
and
shr
retf
scas
js
or
sub
sub
xchg
out
aaa
mov
ss
(bad)
push
adc
mov
cmp
xor
fwait
aad
jp
out
mov
jo
shr
cs
add
push
cdq
push
arpl
jnp
(bad)
mov
push
xor
stos
icebp
in
xor
mov
cmp
sbb
xchg
jne
dec
cmp
mov
push
adc
fidivr
push
adc
xchg
xchg
jp
mov
out
out
and
je
add
je
jns
addr16
shl
popa
add
sbb
hlt
adc
imul
xchg
mov
lods
je
scas
xor
xchg
and
xor
push
in
and
sbb
jl
aam
(bad)
cmc
nop
jne
sub
and
and
push
and
pop
xchg
jnp
pop
movs
pop
loope
inc
push
retf
inc
or
dec
cmps
std
int3
mov
ret
mov
fidiv
dec
push
in
ja
xor
sub
data16
sahf
int3
push
push
gs
sbb
test
adc
stos
pushf
cmp
pop
(bad)
clc
mov
popa
push
push
int
jge
je
loope
fidivr
push
test
xlat
and
sbb
iret
pop
and
into
rol
inc
shrd
xchg
les
test
je
xor
repz
imul
inc
out
retf
mov
cdq
push
retf
push
sbb
jle
mov
call
int3
jns
popa
int3
add
(bad)
pop
pop
(bad)
dec
push
pushf
jno
cld
jno
pop
pop
clc
pop
sbb
jmp
xlat
loop
movs
inc
jge
arpl
mov
push
hlt
jne
sub
ins
push
or
imul
lods
add
out
xor
dec
out
ss
xchg
add
mov
pop
xchg
out
dec
jo
pushf
or
aam
sti
repz
xchg
mov
(bad)
(bad)
scas
push
jl
fimul
pop
int3
scas
mov
xchg
sbb
jg
pop
sub
xchg
push
mov
in
out
mov
ja
pusha
sbb
fcomp
add
ins
bound
es
sbb
push
in
jmp
and
out
arpl
jg
pop
fst
ficom
ins
cmps
pop
pop
pop
call
cmps
cdq
sahf
mov
jmp
(bad)
dec
jecxz
cmp
push
cli
push
inc
xor
sbb
sbb
add
je
mov
mov
cmp
cmp
mov
loopne
mov
retf
pushf
xchg
sbb
bound
add
inc
sti
addr16
and
pop
jbe
sbb
fimul
aas
push
test
push
xor
(bad)
jmp
ss
inc
jno
push
xchg
sahf
cmc
ss
lock
mov
xor
xor
dec
inc
push
xchg
xor
test
push
or
mov
ret
icebp
imul
xor
dec
xchg
cs
sub
cmps
std
shr
xchg
lods
cmp
push
pop
leave
je
bound
sar
imul
mov
mov
fldenv
pop
sti
aas
je
pop
data16
out
or
adc
into
push
adc
adc
fisubr
jne
icebp
push
adc
das
fs
std
jle
je
cmp
inc
out
js
(bad)
mov
xchg
or
shl
(bad)
outs
dec
int3
test
mov
xlat
sub
xchg
add
(bad)
enter
ins
scas
add
sar
and
dec
xor
jecxz
xchg
outs
adc
arpl
aaa
xor
pop
sub
jnp
repnz
xor
rcl
mov
push
int3
push
xchg
dec
inc
push
sbb
repnz
cwde
mov
rcl
cmp
in
xor
jne
ret
cmps
ret
cld
xchg
xchg
int3
adc
push
mov
in
mov
ds
out
xor
ja
mov
mov
and
test
iret
pop
es
out
xor
push
adc
cmp
mov
cmp
push
int
mov
mov
fcmovbe
mov
jge
mov
lock
popf
lods
mov
ds
scas
out
int
ret
push
(bad)
fucomi
scas
xor
and
es
jle
les
fild
enter
fstp
sbb
pop
mov
push
mov
cmps
hlt
data16
div
(bad)
jl
in
lods
loope
add
mov
mov
cmp
push
cmp
aad
inc
mov
jno
arpl
jle
or
leave
mov
and
in
lods
shl
mov
(bad)
sub
lock
repz
mov
dec
je
dec
cdq
push
xchg
sub
pop
hlt
xchg
dec
popa
in
fwait
call
add
stos
sahf
adc
out
sub
xor
dec
push
xor
jg
push
(bad)
jge
cmp
(bad)
and
pop
test
ins
mov
jle
jp
mov
je
or
fs
xor
(bad)
cmp
pop
ret
jg
sbb
mov
mov
leave
sub
ja
pop
mov
xchg
cmp
nop
sbb
sbb
shr
jp
cs
mov
jmp
sahf
out
jbe
cli
push
add
mov
cmp
aad
jne
xor
xor
mov
inc
lea
jae
mov
fldenv
lods
cmc
call
sbb
mov
jmp
jge
mov
adc
xor
jge
mov
push
inc
es
in
cmp
retf
xchg
mov
mov
mov
push
(bad)
inc
inc
outs
pop
or
stos
fdivr
(bad)
rol
movs
xchg
test
shl
or
and
jno
pop
adc
jne
mov
push
mov
sahf
sbb
cdq
clc
fs
cmp
mov
dec
cmc
push
pop
pop
mov
scas
outs
sub
ret
pop
fsubp
jecxz
dec
jb
push
mov
out
(bad)
scas
inc
call
les
xchg
push
xor
jg
gs
ss
pop
pop
lahf
out
pop
sbb
in
cmp
mov
jnp
int3
out
retf
sub
and
push
cmp
and
and
add
xchg
ret
xor
mov
ins
ror
jae
(bad)
out
scas
xor
or
cmp
shl
lahf
das
jge
dec
mov
sub
sahf
ja
pushf
or
add
push
lahf
xor
inc
mov
iret
retf
mov
inc
inc
add
jb
mov
adc
inc
dec
sub
push
push
xchg
push
sbb
push
scas
and
pop
and
test
xlat
(bad)
mov
add
push
loop
add
jmp
adc
adc
movs
mov
or
into
outs
lea
outs
dec
(bad)
cmp
mov
call
lock
adc
movs
lahf
ins
mov
ficom
cs
clc
push
pushf
cmp
jmp
cmp
push
add
fidivr
adc
dec
fcom
test
xlat
rol
xchg
push
iret
mov
(bad)
call
push
mov
(bad)
mov
pop
push
lds
jnp
fwait
jp
adc
pop
adc
dec
jecxz
call
or
push
and
shl
mov
add
nop
pop
add
popa
scas
data16
jne
stc
div
out
jns
mov
lahf
xchg
sbb
sti
cdq
fld
call
in
call
mov
inc
cmp
xor
xor
dec
inc
add
loopne
sub
sub
jno
retf
adc
push
or
xor
jb
and
nop
hlt
leave
cmps
pushf
jmp
jmp
adc
in
xchg
leave
mov
dec
mov
push
pop
loop
push
lock
nop
xchg
sbb
cmp
cmps
imul
add
aad
cmp
jbe
cmp
xchg
mov
mov
addr16
repnz
pushf
and
scas
aad
push
repnz
xor
or
ins
retf
pop
imul
imul
fnsave
push
mov
test
adc
jb
std
gs
rep
xor
jb
or
mov
loopne
nop
sbb
mov
jg
xchg
ins
xor
les
shl
rcl
add
je
aas
add
bound
nop
imul
xchg
mov
cmps
jp
sub
fisub
sbb
fld
lds
or
and
cmp
bound
mov
test
cwde
call
cmp
sbb
(bad)
mov
es
mov
push
xlat
add
rol
mov
or
aad
mov
cmp
pusha
js
test
test
in
bound
jp
out
sub
pop
lods
jge
call
inc
inc
daa
ret
aad
push
das
fdivp
ds
push
shr
div
or
dec
push
loop
pop
int3
int
and
sbb
xlat
bound
dec
mov
jl
ds
pop
call
cmc
push
push
xor
or
and
lds
inc
fistp
cmps
mov
push
mov
test
out
fisttp
mov
cmps
xchg
sub
jnp
aam
jns
pop
push
jecxz
mov
loope
jmp
dec
pop
fs
fdiv
cli
adc
ja
inc
mov
dec
mov
jbe
js
add
cs
outs
ins
jmp
mov
(bad)
push
imul
ja
stos
xchg
gs
pop
cwde
mov
xchg
inc
jge
cdq
sbb
in
retf
out
cmp
in
adc
stc
sub
sub
cs
adc
sti
leave
ss
out
out
out
xchg
(bad)
mov
dec
into
sahf
push
aaa
loope
or
cmp
(bad)
pop
loop
rol
daa
mov
in
shl
pop
lds
das
cs
dec
cmp
loop
clc
test
rcl
sub
aad
popf
inc
pusha
xor
inc
push
pop
xor
mov
stos
and
ficomp
dec
push
dec
mov
xlat
outs
call
dec
stc
movs
or
shl
sub
xchg
shl
adc
fld
cmp
adc
or
add
(bad)
cs
popa
dec
test
mov
sub
push
jnp
jmp
int3
xor
pop
test
cmp
and
or
pop
add
xor
mov
inc
push
mov
push
pusha
inc
push
fs
or
sub
lea
pop
lods
jle
out
out
mov
sti
push
icebp
lea
stos
es
aam
sbb
pop
pop
movs
mov
fidivr
inc
imul
inc
repnz
add
enter
(bad)
retf
mov
mov
pop
retf
popf
movs
push
out
out
cs
loopne
cwde
pop
fidiv
test
jmp
and
ror
into
cli
clc
je
fistp
or
lock
add
pop
imul
cmps
sub
pop
daa
pop
sub
fsubr
sub
hlt
jae
pop
add
add
arpl
loopne
sbb
shl
loope
sbb
idiv
push
scas
dec
dec
out
ins
loop
bound
mov
popf
cmp
add
sub
es
popa
js
repnz
jae
mov
mov
scas
cs
jae
push
aam
cwde
pop
xchg
sbb
scas
test
jl
sbb
jl
aaa
ja
aam
push
sbb
mov
mov
cmp
data16
jp
sbb
push
mov
jle
and
sar
sbb
jns
mov
cmp
loop
cs
int
add
fst
cld
mov
fwait
outs
aas
mov
rcl
outs
inc
pop
ss
inc
pushf
mov
fnsave
xor
push
pop
inc
cld
inc
inc
xchg
cmp
outs
mov
dec
popa
icebp
(bad)
ds
jo
xchg
and
adc
jl
sbb
jecxz
push
outs
rcr
or
dec
pop
fist
mov
(bad)
push
xor
call
aad
out
sti
inc
cmp
pop
pusha
mov
add
(bad)
test
jns
mov
push
cmp
bound
(bad)
mov
cwde
or
mov
cmp
bound
mov
imul
in
setge
dec
cmc
inc
movs
xor
pop
mov
in
into
xor
adc
push
ror
mov
sbb
dec
mov
xchg
and
rcr
daa
ficom
repz
fisub
dec
add
ret
les
hlt
xchg
(bad)
mov
arpl
cmp
dec
lods
fmul
push
ds
addr16
cmp
loop
push
push
pop
dec
ss
leave
je
mov
dec
ror
and
cdq
ret
fsub
and
mov
cmp
aad
mov
jb
cmp
in
pop
lea
test
jmp
jmp
pop
xchg
mov
xchg
or
sti
xchg
sub
retf
(bad)
sbb
adc
jp
jnp
test
or
dec
clc
out
dec
jnp
pop
sub
add
sahf
xlat
ja
bound
ficom
sbb
popf
gs
loope
add
fdiv
jg
mov
jo
cmp
retf
mov
icebp
adc
or
into
jmp
push
outs
jge
sahf
ror
shl
test
cmp
fimul
jnp
(bad)
iret
shr
into
sbb
mov
ja
mov
sub
push
push
cmc
push
inc
into
xchg
fld
push
cmps
push
xchg
cmps
jae
sub
sub
scas
push
int3
sub
out
xor
pop
sub
dec
xor
cmp
enter
jb
lds
inc
and
adc
push
xchg
mov
adc
adc
lahf
mov
fprem1
into
push
xchg
call
jmp
xlat
pop
mov
repz
ror
xchg
lods
mov
out
and
enter
xchg
add
add
push
fs
push
ss
cmp
popf
rol
lds
jp
mov
sub
sub
push
loope
sub
adc
jge
cmp
in
dec
(bad)
fs
mov
xchg
xlat
js
fdiv
push
xchg
retf
pusha
xchg
sbb
and
or
mov
xchg
lods
int3
jl
xor
cld
(bad)
ffreep
and
cwde
pop
adc
(bad)
jge
and
xor
ror
hlt
dec
and
(bad)
fs
sar
mov
jge
(bad)
stc
cmp
fwait
pop
jmp
aaa
inc
push
sbb
adc
sub
pop
fadd
(bad)
sti
fwait
mov
sti
ja
out
cmp
mov
jge
inc
jg
sti
adc
xchg
jg
or
icebp
and
mov
inc
stos
ss
jmp
popf
jecxz
mov
fistp
mov
push
inc
xor
aaa
test
cmp
dec
fwait
sbb
imul
adc
aaa
jg
ret
outs
scas
aas
cmp
xor
xlat
daa
sub
and
pop
fimul
jno
jl
je
mov
(bad)
hlt
push
addr16
std
xor
cdq
repnz
push
mov
(bad)
cmc
cmp
nop
jnp
fild
in
cmp
and
inc
ss
movs
xchg
mov
push
in
into
fdivr
clc
xor
out
mov
cmp
jecxz
lock
iret
das
xor
js
mov
lods
sti
add
and
or
xchg
xor
mov
xlat
iret
pushf
mov
mov
dec
mov
mov
mov
out
and
mov
fsub
test
cdq
loop
add
scas
adc
pop
fwait
jns
inc
fldcw
xlat
fisttp
cmp
mov
mov
sub
adc
xchg
pop
loopne
pop
stc
and
adc
cmp
cmp
jne
xchg
or
sbb
sti
sub
cli
lods
inc
pop
mov
push
mov
pop
out
rcl
pop
cdq
jecxz
cmp
dec
mov
test
cwde
mov
mov
shr
lods
rol
dec
push
inc
or
rcl
mov
lods
loope
mov
xchg
enter
fadd
(bad)
std
fdivr
(bad)
cld
adc
jo
inc
jmp
and
mov
xchg
fdiv
or
(bad)
out
inc
arpl
inc
fcom
shr
mov
rcr
cmp
lods
popa
cmc
mov
lock
push
mov
movnti
fsubr
xor
jno
inc
int
call
fcmovb
jmp
leave
jecxz
adc
pop
daa
xor
(bad)
or
jmp
(bad)
dec
cld
sub
pusha
out
aam
pop
jg
dec
gs
xor
repnz
dec
test
and
fisttp
add
mov
pop
out
iret
cmp
shl
push
inc
hlt
inc
std
out
dec
fidivr
adc
dec
mov
inc
pop
in
sub
into
jbe
xor
mov
add
lds
jno
fs
imul
bnd
nop
into
fwait
pop
push
(bad)
cli
dec
dec
sub
or
mov
sbb
add
(bad)
mov
call
sub
sub
nop
fstp
mov
ja
add
cmps
shl
jns
loop
xchg
lock
cmps
xor
arpl
add
fisttp
ficomp
test
and
and
(bad)
pop
sub
or
mov
stos
mov
in
(bad)
aas
add
cmp
lds
in
fwait
sahf
mov
idiv
add
stos
push
das
test
fucomi
sti
sbb
and
add
or
cmp
cld
js
jmp
stos
sbb
test
xchg
sub
retf
cli
push
iret
mov
out
xchg
cmps
js
add
and
sub
(bad)
aaa
sahf
xor
sub
dec
pop
or
aas
retf
pop
test
or
pop
and
in
push
jne
jne
je
add
sbb
dec
dec
movs
cs
sbb
xchg
fcomp
dec
pop
sbb
ds
push
sar
sahf
lods
jp
inc
or
pop
rol
inc
add
push
push
sbb
xchg
mov
lods
pop
out
repnz
mov
mov
add
jbe
push
pop
xchg
mov
lods
dec
sub
add
adc
dec
(bad)
sbb
loopne
pop
add
inc
adc
inc
cmp
jmp
pop
ins
pop
outs
mul
mov
fidiv
js
jnp
ds
sub
test
mov
mov
inc
mov
push
xchg
xchg
std
push
pop
sahf
call
or
pop
retf
mov
adc
or
cmp
pushf
retf
inc
and
or
add
fsubp
cmp
sbb
sbb
add
mov
test
push
mov
daa
pop
xor
jmp
adc
mov
xor
jmp
out
shr
out
push
outs
xchg
or
push
rol
(bad)
out
jle
jns
or
push
rcl
mov
jbe
mov
sbb
xchg
clc
mov
sbb
pop
ja
sahf
inc
mov
(bad)
(bad)
push
xchg
mov
mov
xchg
inc
add
sub
test
dec
lods
lea
fist
loopne
mov
test
inc
adc
test
sahf
pop
or
stc
pushf
jmp
xor
jmp
jmp
push
mov
scas
xor
mov
lods
jecxz
stc
inc
push
xchg
cmp
sar
mov
imul
push
inc
sub
cmp
out
mov
ins
in
mov
xor
jle
sbb
inc
pop
mov
xchg
or
mov
push
add
fsub
jne
pop
cmc
push
movs
stos
ja
sahf
jae
inc
popa
pop
popf
mov
movs
and
ror
scas
fldcw
enter
mov
add
push
das
rol
jmp
jne
aad
mov
mov
scas
(bad)
push
dec
cmc
pushf
xor
les
test
push
xchg
ds
nop
jne
clc
mov
outs
cmp
lods
jmp
out
sub
pushf
addr16
std
int
out
xchg
test
push
inc
mov
and
std
hlt
js
shl
in
xchg
aas
je
mov
pop
cwde
stos
mov
mov
lods
push
xor
ins
ins
adc
dec
subps
popf
mov
in
mov
mov
dec
mov
dec
mov
dec
rep
and
and
lea
xchg
retf
push
scas
imul
mov
push
fcmovb
stos
ss
jge
lahf
sbb
inc
cli
adc
sbb
in
push
pop
mov
fcom
rcr
popf
mov
addr16
sub
das
retf
dec
or
test
addr16
mov
sbb
mov
cmc
mov
xchg
mov
push
jp
imul
jl
popf
stos
(bad)
call
jne
sti
lea
add
or
fs
xchg
loop
(bad)
sbb
out
jno
xor
(bad)
pop
stc
inc
mov
add
mov
dec
mov
add
adc
retf
sub
iret
dec
cmp
movs
sub
(bad)
int
lds
mov
sub
(bad)
stos
push
sbb
loop
or
out
sub
xlat
test
xchg
cmp
cld
mov
loop
adc
mov
ss
test
mov
outs
mov
das
push
push
inc
mov
inc
dec
in
repnz
sbb
jmp
test
push
add
mov
dec
mov
nop
sti
cmc
dec
cs
imul
stos
inc
in
inc
adc
add
jecxz
cmp
fld
inc
lods
lahf
jmp
and
test
add
in
jmp
scas
sti
mul
pop
and
sbb
jmp
lds
lahf
daa
cld
cdq
lods
pop
cmp
enter
(bad)
(bad)
iret
ja
xlat
cmp
sub
and
mov
xor
enter
outs
sbb
jns
cdq
sbb
push
or
xchg
pop
mov
arpl
in
mov
inc
lds
jo
mov
std
gs
push
or
or
sbb
xchg
out
lock
mov
ficomp
jecxz
sar
add
xchg
call
jle
pop
sub
jno
sub
fistp
or
pop
leave
jbe
add
jnp
lods
aas
outs
cmp
shl
mov
dec
loopne
pop
xchg
stos
dec
mov
test
mov
leave
pop
push
mov
call
mov
xor
jb
mov
out
inc
daa
and
ins
mov
or
jmp
push
scas
fadd
sub
pusha
addr16
cdq
not
mov
fsubr
push
mov
loop
pop
xor
sbb
inc
dec
push
(bad)
clc
jbe
sbb
pop
psrld
aam
push
mov
cmp
cld
outs
outs
push
cmps
or
adc
in
adc
inc
out
movs
call
xor
aam
push
stos
or
ret
adc
jp
push
jo
std
sbb
loopne
xchg
pop
inc
or
xor
outs
cld
lods
aas
and
jp
adc
jp
scas
ds
cmp
push
jb
lea
je
and
or
mov
xor
pop
push
push
mov
aam
or
enter
mov
adc
sbb
mov
dec
pop
lock
mov
jb
fidiv
xchg
pop
pusha
call
push
mov
inc
jo
sub
pop
out
mov
cmp
aas
sar
stos
call
div
jecxz
inc
dec
pop
shr
(bad)
and
adc
jmp
sahf
pop
pop
pushf
lds
shl
xor
out
push
sub
shr
std
shl
dec
(bad)
xchg
push
adc
arpl
(bad)
xchg
xchg
shr
int
mov
xchg
mov
jnp
jo
adc
xchg
inc
test
mov
add
rol
jle
cmp
add
inc
push
retf
stos
mov
test
in
imul
mov
out
sub
or
mov
in
mov
in
ja
xchg
les
pop
pop
and
enter
jge
sbb
outs
xchg
add
cmps
dec
daa
ja
jmp
mov
push
test
pusha
addr16
call
stos
dec
stos
rcr
test
fadd
imul
xchg
push
mov
fadd
(bad)
loope
lock
out
push
stos
sub
outs
xor
jge
aam
pop
xchg
fild
jae
cmc
xlat
and
adc
hlt
popa
shl
mov
sbb
in
sbb
repz
jno
and
mov
mov
scas
dec
or
imul
cmp
or
push
sub
adc
pop
sbb
daa
xor
adc
ja
adc
cmp
xchg
jmp
and
adc
fmul
cmc
(bad)
hlt
(bad)
adc
stos
loop
add
sbb
js
vmwrite
(bad)
(bad)
imul
jmp
adc
mov
cld
(bad)
pusha
push
or
xor
jnp
mov
xchg
lods
outs
sti
jp
ds
push
popf
icebp
imul
or
dec
pop
lahf
mov
add
test
in
mov
es
lahf
das
movs
sbb
int
xor
bnd
cmp
leave
xchg
fsubr
shl
out
js
or
bound
push
sbb
ins
in
das
fidivr
ss
das
inc
std
ja
mov
jno
mov
out
cmp
cmp
jge
jae
fist
pop
mov
ficom
hlt
int3
xchg
jbe
shl
movs
lock
push
repz
sbb
shr
or
das
cld
cld
xchg
and
mov
fimul
mov
or
xlat
(bad)
or
ja
aas
sbb
fs
jp
and
cwde
mov
mov
jo
mov
push
mov
add
and
push
push
fcmovbe
js
xchg
stos
xor
dec
xor
or
sbb
das
sbb
arpl
mov
scas
div
out
cmp
loopne
push
sub
or
es
ds
sti
les
(bad)
dec
xor
cdq
xchg
sbb
add
(bad)
sahf
add
mov
cs
and
dec
scas
cmps
pop
pop
mov
in
fldenv
inc
sbb
fcmovb
hlt
out
mov
pop
movs
fcom
sub
ins
and
xchg
loope
pop
int
dec
dec
pop
and
or
push
call
mov
icebp
mov
cmp
ds
sub
loope
sbb
call
aas
mov
fimul
popf
pop
pop
or
adc
push
shl
pop
and
es
sbb
jecxz
inc
jle
dec
push
xor
and
aam
daa
repz
add
das
push
call
leave
add
in
pop
lods
mov
iret
aas
shl
pusha
iret
in
add
fwait
jo
out
pushf
fld
and
int
push
pop
jo
nop
mov
movs
mov
mov
mov
jne
data16
push
retf
push
in
jg
shl
push
fcom
lds
dec
dec
jl
add
(bad)
(bad)
add
fadd
clc
sbb
jns
or
imul
cmc
out
repz
push
or
js
mov
sbb
cmc
or
jp
jg
push
dec
xor
out
xor
rol
bound
retf
ins
xlat
into
cdq
fbld
sar
and
mov
jecxz
fsubr
lahf
push
test
test
imul
adc
pop
pop
cwde
or
mov
ror
lods
xchg
ret
enter
nop
xchg
and
out
sbb
add
test
push
sub
retf
jo
mov
enter
mov
mov
test
inc
adc
arpl
ins
cmps
iret
sub
mov
xchg
aad
jb
div
les
fnstenv
repz
jg
cmp
sar
adc
dec
movs
mov
cld
(bad)
stos
cmp
stos
add
sbb
push
and
test
pop
jl
sbb
sub
push
scas
out
push
push
je
xor
sbb
add
loopne
xchg
cwde
adc
test
push
mov
leave
arpl
in
mov
(bad)
push
sbb
push
sbb
xor
mov
lea
hlt
mov
xor
mov
mov
pusha
lahf
xchg
mov
sub
xor
imul
mov
test
adc
inc
dec
repz
clc
adc
or
(bad)
sar
lea
int
in
lods
dec
push
dec
rol
and
ja
loopne
test
jl
cmp
jp
push
sub
pop
mov
push
shr
mov
push
sbb
ins
jmp
(bad)
aas
xchg
leave
pusha
cmp
int
test
xchg
retf
sti
(bad)
out
xor
and
adc
retf
idiv
jno
xor
sbb
mov
sub
xchg
inc
pusha
dec
ficom
into
mov
pop
sahf
(bad)
and
push
push
and
add
xchg
cdq
pop
inc
fld
xchg
xchg
mov
pop
cwde
xchg
mov
mov
sbb
pop
dec
stc
xchg
dec
xchg
rcl
outs
dec
sbb
sbb
sbb
sub
in
sahf
cmp
dec
leave
sbb
push
jmp
jb
xchg
stos
scas
jbe
jae
sbb
mov
jl
sbb
push
or
sub
dec
pop
xchg
std
shl
lahf
das
iret
mov
mov
xchg
sahf
jmp
cdq
inc
fucomip
pop
add
pop
or
push
push
shr
adc
xlat
fwait
pop
mov
lea
or
and
xor
push
or
push
cmp
das
dec
(bad)
loop
adc
aas
push
or
(bad)
xlat
sub
enter
push
jp
add
pop
fstp
cmc
push
jb
bound
dec
mov
mov
mov
shl
rcr
and
sbb
mov
cmp
fs
int3
pop
push
mov
ret
pushf
scas
inc
inc
cmp
call
or
xor
mov
push
cmp
xchg
pop
out
pop
jnp
mov
jne
dec
adc
xchg
pop
loopne
jecxz
pusha
(bad)
sbb
push
cmp
pushf
pop
sub
dec
push
cmp
aad
int
and
and
pop
cs
inc
ror
test
mov
shl
inc
xchg
mov
inc
inc
xor
sub
mov
not
into
add
int3
xchg
push
retf
pop
jae
jp
cmp
pop
mov
lods
dec
push
out
outs
inc
pop
xor
sahf
pop
adc
stos
sub
loop
ins
mov
out
ret
mov
or
shl
lods
daa
and
add
jmp
add
inc
test
or
repz
mov
nop
or
jns
aaa
push
xchg
out
jl
std
ss
pop
push
push
xchg
sar
(bad)
jo
js
pcmpeqb
mov
repnz
das
xor
mov
retf
sub
out
inc
dec
out
out
push
pop
addr16
popf
aam
cs
mov
push
xor
imul
or
adc
stos
inc
adc
and
mov
dec
cmc
cld
fs
mov
test
mov
(bad)
mov
shl
push
or
push
pop
and
sti
lea
fiadd
sar
xor
ds
sub
in
ret
adc
cmp
xchg
iret
ficom
inc
imul
xor
and
jb
int3
mov
mov
adc
push
out
cmc
hlt
and
adc
lea
xchg
add
sar
cli
cmp
ret
stos
gs
fs
(bad)
js
push
out
or
push
mov
pop
stos
call
dec
shr
inc
sbb
add
imul
xchg
enter
retf
pop
or
stos
sub
jecxz
jmp
ins
push
mov
sbb
xor
add
repnz
push
pop
push
dec
sar
jo
test
xor
mov
(bad)
popf
cdq
jp
pop
cmps
add
enter
scas
ja
fsubr
xchg
iret
push
lods
xor
jns
mov
push
ins
xor
hlt
inc
(bad)
stos
mov
lods
out
iret
and
cmp
rol
stc
mov
dec
popf
shl
idiv
arpl
scas
jecxz
movs
pop
lock
cmp
pop
or
push
repz
sbb
fs
jg
sbb
lahf
stc
or
popa
adc
rcr
aaa
das
mov
test
cdq
adc
inc
sahf
fimul
push
leave
(bad)
pusha
xor
fwait
inc
cli
call
mov
push
outs
xchg
and
jae
add
or
hlt
loop
and
scas
add
adc
sub
iret
outs
xchg
mov
fistp
je
mov
cmp
or
pop
loop
es
mov
adc
dec
pop
aaa
loope
repnz
shl
inc
mov
mov
cmp
push
jno
loopne
outs
mov
daa
out
dec
xchg
rep
icebp
xor
xor
push
fmul
dec
ja
mov
les
cli
dec
test
rcr
aas
push
in
les
xchg
inc
mov
add
or
shl
je
mov
adc
or
dec
xor
jge
scas
inc
xchg
loop
test
mov
int3
jmp
ret
or
bound
aam
fs
jge
dec
mov
jge
sbb
mov
popa
and
push
add
add
push
xchg
sub
add
sbb
lea
pop
dec
lods
ds
or
fadd
add
cwde
retf
lods
jmp
mov
mov
jb
mov
cs
pop
shl
add
icebp
aaa
fcom
cwde
mov
leave
xchg
xchg
fsubr
or
in
cmc
inc
daa
jnp
(bad)
repnz
addr16
daa
pop
mov
sbb
outs
lea
test
and
shl
hlt
add
push
sbb
and
mov
push
fisubr
jbe
or
outs
sub
jns
push
dec
lahf
aas
xchg
(bad)
jns
mov
cmps
lock
add
push
lock
ins
pop
xor
arpl
into
imul
sbb
fdivr
jge
mov
leave
push
mov
dec
imul
pop
in
movs
mov
mov
ins
or
or
sub
cmc
stos
not
mov
je
or
add
mov
xchg
call
ficom
dec
adc
or
push
lock
and
dec
add
push
sar
mov
and
clc
in
pop
xchg
pusha
push
mov
imul
call
and
aaa
sub
pushf
xor
xlat
xchg
sbb
mov
imul
mov
xchg
inc
mov
outs
jo
sbb
jo
(bad)
fbstp
jmp
and
jp
and
rcr
(bad)
mov
retf
mov
add
ins
out
and
jne
sub
ret
lods
out
mov
mov
iret
enter
dec
popf
dec
int
cmp
jne
jge
sbb
push
nop
sbb
in
ret
movs
jge
mov
ret
jmp
mov
dec
bound
mov
mov
cmps
sub
stc
mov
inc
js
and
mov
cld
js
mov
rcl
cmp
and
imul
inc
ds
rcl
mov
pop
or
pop
ret
inc
mov
adc
xor
push
das
movs
fs
ror
cmp
movs
ja
iretw
scas
cld
cmps
stos
jb
out
movs
sub
and
inc
mov
in
push
xlat
mov
xor
xchg
in
lods
jmp
sub
sti
add
sub
(bad)
mov
push
mov
outs
push
fdivr
iret
pop
fsub
fadd
bound
scas
jmp
sub
out
pop
call
aas
fadd
test
(bad)
inc
sbb
add
(bad)
dec
das
shl
test
bnd
and
push
jno
in
stos
cmp
xchg
shl
cmp
lahf
test
cwde
icebp
xlat
cmp
adc
(bad)
sbb
jl
or
cmp
xchg
mov
out
fistp
cmps
movs
dec
std
mov
iret
or
push
dec
mov
in
cli
aad
popa
in
dec
mov
xlat
aas
dec
mov
xchg
mov
sub
fidiv
rcl
sbb
enter
or
lds
ss
mov
add
movs
and
outs
sub
rol
ins
sahf
mov
imul
cmp
and
or
xor
sahf
ret
loop
jmp
dec
ja
in
cmp
jnp
fs
push
outs
sub
adc
mov
mov
sbb
bound
mov
push
jmp
dec
mov
cdq
rcl
movs
inc
adc
mov
xchg
fistp
rcr
test
add
shr
mov
sbb
cld
xchg
repnz
push
mov
push
mov
sbb
stos
retf
rol
mov
xchg
mov
lahf
in
dec
loope
in
and
push
add
leavew
xchg
pop
(bad)
dec
pushf
xchg
test
adc
data16
cmps
ror
std
push
sbb
xor
mov
stos
sbb
mov
in
push
sbb
(bad)
mov
xor
xor
dec
mov
fistp
mov
js
mov
out
lds
push
sbb
outs
fnstsw
mov
xchg
rep
mov
jl
mov
mov
jo
ja
mov
add
popa
in
or
into
push
ret
mov
adc
jno
mov
jne
scas
aam
cmp
jno
jnp
jl
or
and
sbb
hlt
fisttp
push
mov
outs
test
call
into
and
sbb
mov
or
ret
sbb
push
daa
imul
cmp
popa
dec
or
push
xor
jno
in
mov
sub
mov
push
in
and
data16
outs
imul
mov
or
test
cmps
nop
movs
(bad)
adc
push
sub
xchg
outs
xchg
(bad)
shl
or
cmp
cmp
add
ret
cld
shl
push
test
and
pop
lods
pop
loop
jecxz
stos
movs
das
jnp
cmp
add
adc
sahf
addr16
mov
and
dec
iret
xchg
(bad)
test
sbb
out
out
inc
sub
dec
mov
dec
dec
repz
(bad)
out
ret
xchg
outs
retf
mov
mov
mov
loope
xchg
fldpi
scas
jbe
ret
daa
sbb
sub
jmp
in
ss
or
(bad)
repnz
and
data16
inc
sub
lods
cs
mul
mov
ror
xchg
div
fcom
jae
add
dec
cmp
ficomp
jl
jo
pop
mov
ret
into
repz
mov
jo
bound
les
mov
dec
(bad)
std
call
mov
js
sub
cwde
pop
fcmovnbe
inc
inc
mov
call
cmp
into
pop
lods
cwde
fs
shl
into
xchg
cmps
sbb
xlat
ror
inc
repnz
stos
nop
mov
fidiv
inc
movs
pop
fdiv
push
mov
mov
stc
inc
cs
scas
inc
mov
fadd
popf
icebp
dec
out
cmp
adc
pop
mov
cmp
je
mov
sub
xchg
xor
jo
rcl
inc
or
movs
inc
cli
cmps
jle
mov
mov
mov
mov
jecxz
dec
pop
push
repz
dec
sbb
(bad)
stc
ficom
out
and
xchg
adc
dec
div
and
popf
cwde
pop
adc
dec
sbb
dec
push
cwde
rcr
cmps
ins
ret
or
xor
adc
leave
push
or
movs
mov
inc
jno
cmp
lea
call
push
dec
sbb
(bad)
gs
mov
jle
jl
mov
ja
outs
xor
stc
(bad)
fcomp
fisttp
jo
cmps
into
and
sub
or
inc
rol
jmp
div
and
jecxz
mov
jg
dec
jg
push
cmp
cli
cld
imul
movs
push
jle
movs
jg
or
sub
xor
xor
dec
pop
sub
ss
pop
out
jle
xchg
xlat
mov
movs
les
xchg
inc
pop
dec
mov
xchg
lea
mov
adc
call
arpl
mov
ret
ret
out
or
ret
adc
in
sub
dec
fcomp
lods
shl
lock
add
dec
sub
ins
leave
adc
sar
test
ss
pop
je
pop
js
sub
in
clc
cmp
mov
xchg
call
jb
push
popf
les
push
add
rol
and
mov
cmp
(bad)
fcomp
jne
mov
addr16
addr16
test
mov
mov
mov
jge
test
repnz
ret
dec
test
aas
pop
sub
mov
pop
push
lock
adc
cdq
jle
mov
mov
in
test
fistp
adc
and
test
push
adc
ror
cmp
push
mov
pop
leave
repz
iret
cmp
mov
popf
je
loop
ins
cmps
dec
adc
cmp
ret
loope
retf
sub
adc
sbb
add
jmp
xchg
sbb
test
fdivr
(bad)
pop
or
inc
mov
and
cmp
add
test
pop
aam
in
jno
mov
pop
out
ins
fidivr
scas
sbb
adc
push
sub
bound
jmp
aad
out
das
popf
in
fdiv
or
(bad)
je
dec
push
xor
clc
pusha
jns
inc
cmp
adc
or
inc
scas
jmp
dec
push
jne
pop
out
cmp
cli
mov
pop
icebp
adc
pop
or
test
bnd
sub
addr16
(bad)
fnsave
fdiv
out
jmp
mov
bound
sbb
sub
(bad)
loopne
mov
ins
inc
push
inc
add
test
inc
mov
adc
test
and
xchg
(bad)
push
add
dec
and
cmp
icebp
xchg
out
mov
pop
mov
jns
iret
sti
mov
inc
bound
shl
or
mov
fcmovne
fdiv
scas
and
retf
test
dec
mov
xchg
inc
push
dec
ror
pop
les
retf
inc
jns
jecxz
dec
cs
fdivrp
test
push
mov
jne
cmc
mov
inc
jl
lea
clc
xchg
outs
not
mov
je
pop
lock
mov
mov
repz
dec
cmc
std
push
pop
adc
mov
mov
into
jecxz
push
push
out
dec
and
cmp
call
loopne
sbb
mov
mov
mov
fbstp
scas
or
pop
or
push
xor
sub
scas
push
cmps
adc
push
out
aad
jl
add
div
fs
sbb
add
in
arpl
inc
jle
cmc
and
retf
loope
jg
loopne
(bad)
mov
pop
sub
in
(bad)
cld
dec
inc
mov
and
cmps
mov
mov
jecxz
and
fcmove
daa
jnp
sub
xor
add
adc
xchg
das
lds
fcmovnb
and
xor
cmp
inc
mov
data16
and
pop
test
mov
hlt
retf
inc
(bad)
jmp
xlat
fxch
sbb
fst
xchg
sub
out
push
daa
inc
and
test
mov
cmp
jge
push
pop
dec
dec
(bad)
lods
(bad)
cmp
mov
xlat
fcomp
pop
loope
pop
xor
dec
pop
and
pop
push
scas
in
sub
dec
fstp
scas
inc
adc
enter
xchg
and
mov
sbb
dec
mov
push
test
inc
adc
ffreep
out
xor
sub
mov
push
pop
ret
enter
in
mov
pop
ja
mov
iret
push
cmp
shl
push
sub
pop
dec
jb
xchg
and
push
xor
lahf
push
mov
out
test
cli
and
cmps
pusha
(bad)
adc
lods
push
xor
cs
mov
int
pop
test
inc
hlt
aam
(bad)
cdq
call
pop
scas
and
call
jb
movs
in
mov
inc
jp
and
mov
rol
add
adc
outs
shl
add
push
lds
xor
mov
ud0
imul
out
mov
into
or
inc
loop
adc
sub
or
xchg
pop
pop
cmp
adc
test
xlat
lock
xchg
xchg
gs
ror
fs
xchg
jmp
repnz
out
mov
mov
cmpxchg
sbb
in
out
mov
xlat
loop
inc
mov
xchg
cmp
leave
mov
fidivr
leave
lahf
gs
je
mov
inc
fmulp
cmp
jo
pushw
dec
sbb
aam
repz
xor
rcr
jle
push
es
in
nop
out
jmp
std
mov
push
(bad)
xlat
ss
enter
es
pop
pushf
jnp
fs
sub
push
cmc
cmps
pop
pop
cmp
in
test
cwde
push
test
retf
sbb
call
pop
mov
jnp
pop
lds
dec
dec
loopne
ss
jne
out
adc
dec
pushf
pop
(bad)
xchg
out
fadd
stc
cmps
dec
es
add
cwde
sub
in
push
ja
xchg
enter
int3
inc
adc
xchg
jge
mov
xchg
call
ret
add
or
mov
pop
xor
add
push
in
pushf
ffreep
ss
sub
scas
inc
mov
adc
xchg
add
scas
sbb
enter
cmp
iret
jne
adc
mov
push
push
(bad)
adc
or
inc
outs
(bad)
mov
test
pop
push
sbb
stc
push
in
dec
adc
loope
bound
jns
imul
rcl
test
mov
jnp
cmpxchg
mov
cli
sub
mov
das
sti
push
jo
movs
sbb
(bad)
movs
xchg
and
fcmovne
and
and
add
mov
cmp
sbb
xor
jg
cdq
out
repnz
inc
jb
lahf
rcr
pushf
loop
clc
adc
adc
xor
jge
dec
xor
jmp
pop
xchg
sbb
add
adc
in
js
idiv
in
mov
test
push
pop
sbb
sub
cdq
scas
enter
ror
call
adc
cld
jmp
jns
in
inc
movs
mov
clc
pop
jecxz
movs
mov
dec
pop
sub
xor
retf
ficomp
ins
in
mov
add
(bad)
cmps
mov
add
adc
int3
push
sbb
mov
test
(bad)
call
scas
sub
aam
dec
std
scas
jp
int
or
mov
lahf
fistp
jb
fisubr
fiadd
mov
test
je
mov
dec
repnz
jae
shr
adc
dec
or
sbb
jl
stc
mov
push
push
and
inc
cs
das
mov
mov
sahf
fdiv
push
inc
je
mov
aad
dec
pop
push
fsub
add
mov
jecxz
(bad)
and
lods
sub
pop
dec
mov
mov
sbb
ja
in
shr
xor
and
fwait
mov
and
sar
(bad)
pop
jno
jmp
sub
cmc
out
leave
jecxz
inc
mov
clc
test
mov
xor
lahf
sub
push
rcl
out
sbb
lds
enter
call
dec
cmp
dec
pop
(bad)
retf
mov
adc
stc
xor
rcl
sub
jae
pusha
stos
fcom
lahf
sbb
aad
pop
cmp
push
(bad)
out
mov
mov
int3
mov
out
out
push
cdq
xor
mov
inc
mov
enter
outs
fwait
sub
cld
dec
xor
jo
cmp
sbb
mov
ins
call
(bad)
(bad)
jl
jmp
add
loope
ins
sti
bound
push
inc
dec
popf
std
mov
fwait
div
mov
les
rcr
xor
(bad)
push
sub
arpl
test
push
hlt
rol
enter
cmp
outs
pop
mov
mov
and
enter
js
push
outs
dec
adc
jmp
fimul
jns
cs
dec
mov
pusha
test
cld
das
add
xor
call
loopne
fsub
loop
pop
out
ret
mov
xlat
into
jno
mov
jmp
(bad)
leave
imul
dec
dec
mov
imul
push
fistp
in
cmp
and
mov
jo
mov
mov
jecxz
mov
fmul
dec
cmp
or
mov
mov
inc
mov
nop
(bad)
and
in
xchg
push
sti
add
jecxz
std
cmp
push
pusha
xchg
xchg
clc
sbb
dec
dec
inc
sti
and
inc
ins
loop
dec
stos
sub
lahf
fcmovne
icebp
jmp
xor
add
aaa
test
fldenv
sbb
dec
adc
dec
adc
mov
push
sbb
xor
call
dec
outs
bound
add
int3
push
cdq
xor
dec
push
mov
popf
push
push
push
cs
sub
push
fstp
mov
xchg
pop
in
adc
pop
push
mov
mov
ins
mov
pop
scas
jb
push
sbb
frstor
loope
ficom
scas
call
outs
and
movs
nop
(bad)
cli
and
cmp
mov
cmp
dec
pop
jbe
adc
aam
xchg
cdq
or
aad
and
mov
mov
popa
cmp
mov
mov
lahf
push
pusha
(bad)
fadd
xlat
jg
mov
dec
pushf
das
pop
xor
shl
mov
sub
add
mov
jg
test
push
xchg
adc
popa
xchg
test
in
fwait
test
mov
or
sbb
mov
add
or
sub
cmp
out
and
jg
test
push
or
test
pop
push
and
mov
aaa
mov
cmp
jecxz
and
in
or
popf
out
(bad)
fidiv
mov
dec
lock
ins
scas
mov
push
lahf
retf
mov
push
or
cmps
gs
sbb
out
outs
inc
pop
mov
jmp
pop
in
enter
xchg
popa
and
xor
jecxz
stc
fistp
(bad)
aas
push
jns
jecxz
jecxz
adc
sbb
mov
add
ficomp
das
inc
clc
lods
xadd
xchg
cmp
jnp
xor
push
es
xchg
pop
call
mov
add
mov
mov
in
add
fs
add
(bad)
dec
mov
ins
sub
inc
adc
xor
pushw
mov
sbb
int
rol
shl
mov
xor
pop
clc
pop
pusha
add
or
mov
cdq
fnstenv
stos
or
or
arpl
jle
mov
mov
mov
jmp
pop
lock
out
daa
addr16
xchg
sub
(bad)
jge
out
jnp
cmp
cmp
mov
repnz
push
jp
repnz
and
mov
addr16
repnz
test
in
fbstp
or
add
sbb
mov
repnz
(bad)
imul
(bad)
test
adc
std
sbb
loope
pop
dec
dec
inc
fucom
sar
mov
in
fld
xor
sahf
fdivr
push
sbb
xor
or
rcl
test
or
xchg
mov
test
loop
mov
ficom
mov
mov
dec
aad
lods
pop
jge
mov
pop
mov
mov
mov
add
jmp
add
or
pop
mov
hlt
(bad)
lahf
pop
push
int
and
mov
outs
push
cmp
cmp
xor
cs
(bad)
jbe
push
xor
out
add
mov
lods
jne
push
div
int3
cmc
push
cmp
outs
add
or
popw
iret
sbb
mov
les
mov
or
addr16
cmp
inc
mov
jnp
jb
clc
jbe
xor
out
cmps
inc
dec
sar
add
daa
sbb
push
mov
xchg
inc
int
dec
mov
push
leave
jb
dec
or
sub
outs
shl
out
mov
add
push
inc
sub
cmovp
movs
ret
adc
icebp
popf
scas
xor
js
pop
stc
out
retf
scas
imul
imul
add
add
sub
mov
add
pop
mov
adc
mov
jp
pop
aaa
cs
stc
mov
inc
or
push
pop
lahf
cmp
push
das
pop
retf
loope
mov
dec
pop
mov
mov
inc
mov
call
xchg
add
sub
test
lock
adc
sahf
enter
jecxz
out
cmp
ins
movs
or
adc
sbb
adc
ror
mov
mov
mov
daa
pop
jnp
ins
div
cwde
inc
shl
push
aaa
sbb
mov
and
xchg
sub
jmp
adc
push
cmp
mov
call
data16
mov
fmul
pop
pop
jmp
jle
push
add
shl
xor
daa
popf
cld
inc
stos
sbb
xor
or
test
dec
or
int3
and
repz
cmps
in
jb
xor
dec
cmp
enter
mov
mov
sub
(bad)
or
bsr
mul
add
pop
or
aad
inc
int3
mov
sub
(bad)
jae
sub
mov
sbb
dec
xchg
ins
mov
aas
pop
mov
in
call
aaa
push
daa
xchg
(bad)
ins
mov
jbe
out
fcmovu
cmp
jne
dec
popa
fnstenv
cwde
and
add
fstp
arpl
push
loop
sbb
pop
mov
lds
(bad)
clc
mov
(bad)
pushf
call
xor
cmps
sub
cmp
jns
icebp
mov
inc
pop
arpl
push
loope
(bad)
and
ss
add
adc
in
push
mov
xchg
pop
adc
pusha
mov
adc
sbb
mov
dec
imul
xor
cmps
cmp
pop
mov
lods
add
das
adc
xchg
in
(bad)
sub
repz
xor
mov
repnz
sbb
jae
imul
(bad)
inc
imul
mov
cmp
add
xchg
push
jg
mov
jne
sbb
and
outs
and
push
ficomp
es
ror
shr
mov
addr16
retf
jno
cmp
xlat
icebp
or
sbb
jg
pop
mov
or
and
push
test
test
aam
dec
clc
adc
dec
fist
jge
daa
arpl
jns
jno
out
pop
addr16
bnd
out
mov
mov
mov
xchg
jg
enter
int
popf
xlat
mov
cwde
cld
popf
pop
ins
clc
adc
and
lods
fwait
adc
scas
movs
aam
test
inc
imul
push
sbb
cmp
or
and
div
jns
jmp
mov
les
stc
jbe
dec
xchg
jb
ds
outs
push
imul
mov
test
sbb
loopne
or
sbb
xchg
shr
and
loop
xor
inc
loopne
fdiv
mov
add
imul
push
mov
stc
add
sar
or
sti
and
test
mov
pop
jns
pop
xor
cmps
test
cld
mov
aaa
jno
xchg
and
jne
stos
cld
dec
icebp
inc
fs
outs
je
test
(bad)
pop
inc
(bad)
dec
xor
daa
enter
push
or
out
xchg
inc
inc
jns
jmp
mov
sbb
xor
mov
out
dec
(bad)
push
adc
push
scas
jmp
mov
in
std
mov
adc
lea
cli
out
cmc
ret
mov
xor
cmp
mov
fnstenv
add
dec
shr
aam
mov
pop
and
ret
push
inc
push
cmp
repz
sar
add
int3
dec
cld
repnz
call
push
inc
ja
popf
mov
cli
popa
arpl
push
enter
push
hlt
mov
add
aaa
or
push
sbb
loop
retf
jae
pop
mov
lahf
cmp
and
mov
push
sbb
push
pop
fisub
mov
and
fs
add
xchg
pop
(bad)
mov
push
add
mov
rol
lock
cmp
mov
cdq
push
dec
scas
adc
cdq
mov
fwait
jnp
loope
pop
pop
cmp
push
out
enter
call
xor
cdq
jmp
push
xchg
xor
ss
xor
pop
pop
jb
hlt
call
mov
fsub
pop
test
(bad)
mov
in
lea
test
pop
test
pop
arpl
dec
sub
adc
add
movs
enter
ret
jno
fld
int3
loopne
jl
push
cmp
movs
dec
pop
mov
add
pusha
mov
jo
test
push
push
repnz
jle
imul
adc
rcl
jp
push
ja
neg
shr
cmp
push
js
pop
test
addr16
and
call
cmps
dec
ret
push
inc
mov
sti
jp
in
imul
loopne
fsubr
das
mov
xchg
cmps
test
inc
pop
push
push
cwde
and
sub
stc
aam
or
stos
cwde
push
loope
fstp
call
jmp
jl
sub
cmps
js
int
pop
xor
mov
sbb
or
jae
push
loope
(bad)
int
xor
mov
repz
add
jae
mov
lea
lods
inc
and
data16
hlt
mov
sahf
inc
loop
dec
or
mov
cmp
push
adc
or
pause
mov
mov
(bad)
mov
(bad)
mov
cmp
push
test
xor
outs
lods
and
popa
(bad)
pusha
xor
(bad)
out
aas
js
aaa
stc
xchg
jne
out
push
sbb
(bad)
fdiv
and
xor
xor
mov
pop
cmp
and
push
xchg
fsub
sub
pop
gs
sbb
sub
pop
cmp
sbb
fwait
popf
popf
adc
jle
xchg
push
mul
idiv
(bad)
aam
das
mov
jmp
fnstcw
retf
xchg
ret
fidivr
shl
lahf
ins
pop
sub
push
mov
inc
mov
aam
jae
mov
mov
nop
ffreep
pop
jne
mov
xchg
int3
arpl
mov
inc
pop
mov
sub
dec
frstor
jo
jp
adc
push
fdiv
fbld
in
pushf
and
dec
xlat
repz
add
adc
daa
and
dec
pop
inc
mov
shl
add
fbstp
test
leave
mov
and
pop
pop
movs
mov
push
ret
pop
push
cmps
and
adc
(bad)
sub
adc
aad
mov
mov
sub
mov
enter
adc
adc
iret
adc
push
(bad)
add
pop
add
add
pop
jg
outs
jo
sar
push
(bad)
std
and
fimul
dec
shl
inc
iret
xor
and
(bad)
ja
inc
out
arpl
and
(bad)
stc
cwde
mov
pushw
sar
xor
inc
xchg
jo
dec
jmp
dec
mov
ret
js
aas
jg
fs
test
sbb
pop
add
shr
ins
add
in
outs
mov
fcomp
cli
push
outs
push
dec
push
inc
stc
dec
fs
in
idiv
push
xor
sub
retf
dec
jp
push
popf
dec
int
inc
sbb
mov
push
js
cld
xor
push
inc
xchg
jmp
jno
adc
sub
sbb
out
pop
push
ins
jp
leave
push
dec
jmp
sub
fsubr
xor
idiv
in
ror
ss
sub
or
or
pushf
cmp
pop
into
inc
sar
loop
rcr
out
dec
add
fcom
in
adc
dec
xchg
mov
jmp
fsub
mov
cwde
pop
push
pop
bound
lahf
add
ja
add
dec
cs
(bad)
mov
jb
push
cmp
dec
cmp
shl
mov
push
js
retf
ss
jp
int
es
outs
push
mov
out
sub
rcr
loopne
and
mov
xchg
xchg
out
fscale
(bad)
and
jmp
cmps
sub
mov
pop
mov
sbb
xchg
xor
cli
jne
pop
or
sub
xchg
xchg
xchg
and
jmp
jmp
cwde
push
enter
scas
ror
sub
repz
(bad)
aaa
mov
leave
pop
jne
ins
js
add
add
mov
jp
inc
retf
out
mov
push
out
xor
fadd
sub
in
inc
aaa
popa
pushf
retf
add
add
mov
out
aad
sbb
sbb
dec
stos
icebp
std
call
arpl
sbb
inc
cmp
movs
mov
jmp
xchg
mov
lock
xchg
hlt
ds
ja
outs
test
bound
cmp
adc
push
stc
call
inc
ficom
in
xor
(bad)
jne
idiv
mov
es
cmp
push
sub
and
mov
mov
imul
or
push
xor
add
stos
les
xchg
or
xchg
lea
mov
push
adc
and
std
addr16
mov
dec
enter
iret
push
cmp
xlat
add
jg
or
mov
movs
sub
sar
mov
test
ret
mov
push
out
add
aam
dec
repnz
mov
mov
adc
mov
clc
rol
jmp
shl
pop
xor
push
nop
shr
addr16
mov
pusha
adc
out
dec
or
popf
jl
xlat
imul
mov
pop
(bad)
ins
dec
add
shl
jp
gs
repnz
pusha
sti
rol
mov
pop
mov
stc
or
(bad)
xor
dec
pop
sbb
sub
clc
fsubr
(bad)
in
enter
sbb
icebp
xchg
adc
(bad)
test
push
nop
hlt
retf
sbb
das
sahf
clc
(bad)
neg
int
sub
fs
fidiv
bound
in
mov
xor
rcr
es
xor
in
add
mov
fs
imul
pop
dec
dec
fwait
adc
pop
adc
jo
inc
ficom
cmp
mov
shl
in
stos
mov
dec
retf
out
push
xchg
dec
les
inc
iret
adc
cmp
mov
pop
jno
push
arpl
aad
es
lea
jge
dec
push
pop
add
pop
fldenv
sub
scas
jnp
test
mov
dec
sub
inc
and
sar
inc
push
inc
test
add
inc
sbb
sar
test
adc
fiadd
(bad)
cmps
dec
mov
rcr
test
into
fwait
jne
aam
push
push
test
adc
out
xor
push
dec
bound
cmp
dec
mov
dec
in
out
cmps
aad
aaa
out
arpl
ret
add
mov
in
addr16
push
adc
mov
bnd
cld
pop
push
stc
jl
cmps
inc
(bad)
dec
(bad)
scas
and
retf
mov
and
aam
(bad)
ins
lahf
jp
lods
in
push
pop
mul
ret
pop
daa
add
cmp
inc
test
les
mov
ss
stc
out
loopne
sbb
out
mov
pop
fiadd
in
nop
sbb
xor
xchg
add
enter
sbb
cmps
cwde
xor
fisttp
add
mov
pushf
fs
pop
pop
add
in
xchg
jmp
jne
xor
(bad)
lods
test
xor
call
ja
dec
adc
shl
(bad)
std
sbb
or
jmp
or
xor
cdq
inc
jmp
fstp
pop
int3
and
rol
pop
ins
int3
rol
jne
repnz
mov
or
xor
sbb
std
(bad)
ins
dec
clc
and
int
mov
adc
mov
push
sbb
push
sti
cli
mov
popf
(bad)
push
popa
arpl
push
leave
js
test
mov
jmp
mov
ds
test
js
xlat
dec
adc
popa
pop
idiv
icebp
add
jnp
clc
pop
clc
xor
sbb
xchg
pop
dec
nop
inc
pop
cdq
adc
push
mov
lahf
pop
mov
pusha
pop
(bad)
sub
mov
aas
xor
iret
push
and
push
jno
cmp
or
mov
mov
aas
push
mov
lods
(bad)
sub
mov
arpl
ins
nop
fcmovnu
cmps
jmp
sbb
sbb
fidivr
fbld
xchg
pop
push
add
cmps
sub
dec
test
in
ja
(bad)
addr16
je
push
sub
loop
mov
fidiv
int3
or
(bad)
arpl
int
pusha
sti
test
loop
push
mov
data16
js
das
mov
or
push
mov
or
mov
aas
cs
stos
(bad)
pop
sub
ror
fild
ds
inc
cmp
dec
ins
stos
and
in
mov
cld
jns
push
inc
push
call
mov
ins
pusha
xchg
nop
out
test
les
retf
in
sbb
(bad)
sub
cmc
test
test
jmp
dec
pusha
pop
xchg
jl
popa
push
or
inc
pop
enter
mov
mov
dec
ins
std
mov
arpl
add
sub
sbb
test
call
test
retf
inc
adc
add
lds
aas
loopne
cmp
sbb
popf
sub
inc
and
jmp
jno
jg
retf
ror
pop
rcr
retf
sub
repnz
call
push
mov
jne
mov
arpl
mov
dec
test
dec
dec
gs
sub
shl
or
cdq
hlt
call
pop
pop
push
pop
adc
mov
dec
mov
stc
jg
xor
pop
(bad)
mov
push
and
mov
adc
jl
jge
inc
dec
inc
call
xor
mov
sbb
les
int
jecxz
mov
shrd
outs
push
mov
lahf
xchg
sbb
test
mov
or
mov
jne
inc
outs
popf
call
test
dec
or
mov
pop
xchg
in
das
xlat
sbb
out
push
mov
mov
(bad)
aam
movs
mov
pop
cmp
xor
popf
pop
outs
mov
arpl
ss
sbb
cmp
inc
pop
jb
lea
lods
aaa
lods
jno
mov
out
fwait
repz
bnd
mov
or
push
sbb
cmp
sbb
and
int3
shl
cmps
repnz
jns
das
std
jb
dec
fcomp
cmp
iret
stos
xchg
sar
pop
pop
imul
pop
adc
imul
pop
or
fst
rcr
retf
dec
xchg
(bad)
or
jnp
jb
push
scas
sbb
mov
push
dec
cmps
adc
inc
mov
js
lahf
and
inc
loopne
sub
int
inc
jmp
adc
aaa
add
cmp
and
mov
call
loopne
ret
mov
imul
int3
ja
aad
mov
mov
xor
cdq
cmp
sahf
push
cmps
xor
fadd
pop
aas
pusha
std
cld
ss
jmp
bound
mov
add
cmp
fstp
jae
(bad)
lea
jbe
pop
loope
cmp
cmp
or
imul
push
aam
jle
fwait
int3
gs
mov
push
int
lods
mov
out
outs
push
scas
lock
xchg
mov
scas
sub
xchg
adc
dec
mov
mov
js
jno
test
cmp
jge
out
and
mov
ret
sbb
mov
mov
bswap
push
in
dec
fld
cmps
stos
xlat
jbe
inc
stc
cmp
cmp
jecxz
mov
dec
xor
dec
fst
push
mov
jbe
push
mov
std
inc
jl
mov
pop
je
and
(bad)
pop
xchg
jge
shl
fldz
push
add
cmps
dec
mov
and
push
inc
adc
ins
mov
cmc
and
repnz
push
jno
cmp
push
test
cmp
inc
adc
and
jmp
mov
mov
fsub
or
xor
cmps
test
and
xchg
push
mov
push
add
jb
iret
adc
cld
retf
std
mov
into
push
jb
add
jl
sbb
and
ret
leave
inc
cmp
and
sbb
adc
mov
add
mov
xchg
(bad)
fild
lahf
pop
xchg
fld
shl
xchg
pop
(bad)
push
arpl
iret
sbb
dec
push
xor
stos
inc
rol
adc
or
mov
xor
jnp
(bad)
ficom
stos
sbb
cmp
dec
jmp
push
aam
es
popa
inc
adc
in
inc
jle
adc
cld
xor
jo
inc
cmp
sbb
dec
jl
add
mov
mov
not
add
movs
push
xor
add
and
fucom
push
adc
pop
fs
lods
outs
out
adc
sti
mov
pusha
fwait
arpl
std
jmp
cld
repz
xchg
mov
push
fnstenv
std
stos
lahf
sti
push
mov
shl
lock
ja
call
mov
and
pop
mov
call
push
ins
mov
fstp
xchg
fnstenv
sub
push
call
xchg
hlt
add
ins
mov
sbb
sbb
sub
mov
xor
xor
push
add
in
rol
les
pusha
cmp
adc
sbb
pop
adc
pusha
mov
ret
push
mov
dec
or
(bad)
cmp
test
out
scas
in
jae
jo
mov
mov
mov
or
(bad)
cmp
sub
add
es
ret
in
dec
popf
push
adc
call
pop
dec
mov
inc
dec
int
jecxz
lea
push
dec
sub
mov
xchg
retf
repz
xor
push
xor
mov
das
cdq
inc
shr
dec
jno
sbb
xchg
ror
mov
test
stc
jmp
pop
(bad)
fwait
enter
in
mov
dec
mov
frstor
shr
cmp
fild
leave
nop
aaa
adc
adc
fmul
ins
cmp
popf
mov
mov
shl
pop
mov
xor
(bad)
mov
aad
jl
pop
aam
ins
call
sahf
push
mov
shr
nop
rol
mov
gs
clc
out
mov
in
ss
dec
imul
inc
jle
adc
pop
imul
cld
add
retf
mov
in
xchg
int3
call
and
add
and
inc
xlat
mov
scas
xor
(bad)
push
cld
(bad)
jmp
test
mov
pop
into
push
jb
mov
pop
aas
scas
fcomp
retf
pop
inc
xor
and
jl
push
sbb
pop
xchg
mov
jl
sbb
inc
stos
jg
repz
dec
fld
in
imul
xor
imul
arpl
cmps
lds
sbb
aaa
jecxz
jmp
scas
xchg
mov
outs
xor
out
and
mov
pop
stc
dec
add
cmps
je
mov
jb
jae
xor
andps
dec
sbb
cmp
pop
and
scas
adc
or
sbb
movs
cmc
add
(bad)
fild
repnz
push
rep
mov
jg
sbb
out
out
loope
or
or
iret
sub
cmp
sub
pusha
loopne
mov
xlat
fmul
mov
mov
pop
pop
push
jae
mov
mov
aam
xchg
mov
push
icebp
add
sub
cs
pop
mov
inc
jae
xor
push
or
mov
push
dec
aaa
mov
test
(bad)
fisttp
aad
lock
xor
into
cld
sbb
cwde
mov
clc
cmps
inc
mov
outs
pop
pop
aad
cli
inc
fsubr
in
cmp
imul
(bad)
std
cmps
or
aaa
mov
jg
adc
or
jge
leave
imul
or
fistp
sbb
xor
mov
push
mov
sbb
xchg
and
lea
lahf
jns
fild
cmp
mov
sbb
outs
xchg
sub
xchg
int
sbb
push
mov
jmp
or
pop
rcl
dec
jmp
adc
aaa
mov
or
add
test
or
pop
jb
dec
mov
(bad)
out
in
inc
inc
jge
mov
stos
(bad)
jb
mov
pop
fstp
jae
test
xchg
xchg
scas
retf
shl
push
or
jnp
ss
fsub
(bad)
rol
push
push
mov
hlt
cmps
cmp
cmps
and
mov
add
imul
lds
scas
inc
stos
ins
(bad)
in
les
xor
jle
pop
sub
push
lds
int
leave
mov
mov
inc
clc
ret
xchg
push
movs
inc
je
ficomp
popa
in
cmps
mov
retf
adc
cdq
rcr
cmp
push
dec
arpl
cmovl
pop
add
pop
mov
test
jecxz
aad
cs
dec
jb
jns
dec
sahf
or
mov
add
fnstenv
sbb
loope
mov
test
pop
sub
dec
pop
fcomi
out
iret
dec
xchg
mov
jl
rcr
sbb
jae
jge
cmps
mov
mov
mov
test
lock
test
outs
daa
or
ret
arpl
jns
leave
add
xchg
pushf
pop
int3
dec
adc
mov
(bad)
sub
dec
(bad)
nop
sub
scas
xchg
dec
iret
dec
(bad)
mov
mov
xor
push
mov
push
and
cmp
lods
js
popa
int
mov
retf
out
xor
gs
(bad)
or
inc
jns
into
mov
or
inc
add
jnp
std
jmp
rcl
hlt
pop
mov
out
add
push
mov
add
jl
xchg
add
adc
gs
jl
xchg
inc
push
sahf
xor
in
call
jecxz
bound
ds
add
mov
pop
pop
xchg
cli
add
loope
pop
mov
nop
mov
aas
add
and
popf
lea
ja
jo
mov
test
ror
mov
aam
xlat
or
jge
jne
or
mov
jle
jnp
gs
xor
xor
rcr
mov
sub
retfw
cmp
hlt
push
jb
stos
popa
pop
div
mov
mov
in
push
jo
sbb
lods
xchg
sub
in
jle
push
test
jle
test
xchg
retf
stc
xchg
pop
out
aaa
jp
rol
repnz
std
dec
icebp
cmp
fsubr
adc
cwde
cmp
jle
iret
add
push
pop
pushf
or
pop
ins
jp
add
out
imul
fnstsw
sbb
inc
adc
mov
jb
(bad)
adc
mov
jmp
ds
add
out
cmp
test
das
jl
je
js
sub
mov
out
mov
xchg
mov
pop
loope
dec
dec
fisubr
xor
retf
call
pop
out
fidiv
or
cmps
cwde
mov
das
clc
ficom
dec
ja
sub
(bad)
cmps
int3
es
and
fcomip
int
jg
xor
in
jae
xor
(bad)
push
imul
pop
sub
pop
push
inc
push
sti
cmps
or
call
or
not
cli
aas
cmp
cs
xchg
adc
fadd
cmp
fucomi
and
ret
bound
push
mov
push
in
jbe
or
mov
sbb
int
or
cwde
out
push
cmps
lods
and
aaa
iret
rcr
xchg
add
cmps
out
fsubr
out
push
loopne
cdq
out
push
sahf
(bad)
jle
mov
ror
mov
retf
fs
rol
fstp
fstp
or
cmp
lods
dec
dec
inc
lods
aad
pop
addr16
pop
aam
push
jo
adc
je
mov
sub
and
cmp
repz
pop
add
fild
sub
lods
(bad)
lods
add
outs
sbb
out
mov
sbb
xlat
and
aaa
or
popf
enter
and
mov
(bad)
mov
xor
cwde
sti
popf
pop
in
fs
js
leave
xadd
pop
cld
cmps
pop
jl
sbb
gs
push
sti
pop
je
xor
call
cmp
add
nop
test
call
in
xchg
mov
add
add
jp
cmp
int
jp
sub
push
cmps
aaa
mov
scas
xor
daa
fwait
aas
paddsw
jle
and
in
cli
getsec
mov
test
add
bts
jno
fwait
cdq
iret
jge
xor
mov
mul
pop
mov
pop
sbb
jmp
movs
mov
out
lods
iret
xor
outs
mov
xor
or
jne
movs
popf
fst
add
sub
movs
mov
cmc
(bad)
push
or
xchg
mov
inc
aad
push
pop
or
add
xor
ss
cmp
pop
test
mov
cmp
(bad)
sbb
sub
out
add
or
(bad)
rol
aaa
ja
xlat
shl
in
outs
mov
cmp
repz
xor
sub
inc
cli
fwait
push
cmp
sub
xor
in
fwait
cmp
fistp
mov
outs
mov
popa
xchg
cmps
in
sar
xor
sar
std
es
or
cli
cmp
xor
sti
pop
sahf
stos
push
jbe
cld
sub
rol
fbstp
mov
(bad)
rcl
rcr
test
sti
call
cmp
sbb
jne
dec
xchg
mov
xor
dec
and
jns
add
loop
and
push
enter
pusha
ins
leave
xchg
jp
loope
and
sub
and
mov
inc
ss
stc
cld
lds
sub
cmps
xor
icebp
xchg
clc
(bad)
mov
js
sbb
call
dec
sub
repnz
push
jno
(bad)
jmp
pop
fwait
bound
push
mov
add
and
push
add
outs
cdq
call
(bad)
into
sub
cmp
mov
pop
cmp
lods
(bad)
test
ror
add
mov
sbb
mov
push
repz
mov
xlat
imul
pop
(bad)
repz
pop
jge
outs
sub
push
and
sub
neg
lahf
sar
adc
mov
sbb
stos
jle
enter
push
dec
and
inc
sub
cdq
push
xchg
outs
cmc
(bad)
pop
ja
mov
mov
mov
stos
jmp
xor
mov
inc
shl
out
jae
cli
xchg
or
mul
in
inc
and
dec
in
popa
xor
pop
xor
stos
pop
retf
data16
fild
retf
(bad)
cmp
and
xor
pop
icebp
or
scas
sbb
and
and
jb
xchg
fwait
pop
repnz
sbb
dec
mov
dec
add
ins
jg
add
mov
ss
jmp
rcr
xlat
daa
and
or
loope
xchg
and
(bad)
push
xchg
inc
push
sub
push
int3
sbb
rcr
imul
repnz
gs
mov
mov
cmp
sbb
daa
push
push
adc
xchg
xchg
and
mov
and
out
inc
dec
or
sub
in
push
mov
mov
add
xor
push
lock
jbe
mov
inc
ret
xchg
loope
xchg
dec
shr
add
push
adc
cmp
jl
mov
mov
xchg
fstp
idiv
popa
sti
es
sub
fs
test
inc
mov
test
jg
and
cmp
jmp
xlat
mov
jnp
rcr
cmps
test
(bad)
pop
call
xor
scas
mov
mov
xor
out
ficomp
ret
mov
inc
xchg
add
arpl
or
mov
jno
pop
pusha
icebp
push
in
es
jb
mov
push
int3
xchg
vcmpss
test
fadd
out
call
aam
enter
xchg
mov
mov
outs
shl
sub
mov
cmps
jnp
or
adc
cmp
sbb
push
shl
push
inc
xor
jmp
push
pop
inc
arpl
fdivr
arpl
add
lods
xchg
rcl
mov
push
bound
nop
dec
loop
dec
lods
push
inc
fld
vshuff32x4
cmps
lock
repz
xchg
push
push
(bad)
xor
not
adc
rol
leave
inc
xchg
gs
(bad)
mov
fbstp
lahf
mov
popf
mov
dec
(bad)
inc
and
pop
mov
and
mov
push
movs
inc
add
icebp
mov
fistp
sbb
fwait
out
in
into
(bad)
mov
stc
dec
call
xchg
inc
xchg
hlt
mov
dec
je
js
into
cmp
(bad)
pop
push
mov
retf
in
fcomp
arpl
sbb
call
cmp
lahf
sahf
cmp
cmps
in
dec
jnp
fnstenv
inc
add
push
dec
dec
adc
repz
xor
ret
cmp
cmps
icebp
rol
arpl
outs
and
ins
inc
sbb
adc
(bad)
cmps
jg
mov
inc
sahf
or
pop
shl
ds
push
aas
mov
fld
cwde
inc
fadd
jne
mov
cmp
jp
push
cmp
bound
sar
mov
sti
dec
inc
retf
mov
hlt
repnz
sbb
outs
pop
xor
fistp
aam
sbb
inc
cmps
pop
gs
sub
xchg
adc
pop
mov
retf
pushf
mov
push
mov
pminsw
cmps
loopne
jge
or
push
gs
clc
int
xor
repnz
bound
jl
jne
jle
adc
out
jp
adc
(bad)
stos
jp
fcos
push
std
add
jmp
sub
adc
jmp
hlt
mov
or
or
outs
lods
dec
les
mov
mov
movs
clc
sbb
into
adc
xor
mov
fimul
push
sbb
sbb
xchg
sub
adc
je
arpl
or
mov
ja
cwde
shl
pop
stos
mov
test
nop
xor
loop
out
mov
cmps
in
test
je
pop
int3
je
test
xchg
mov
mov
fistp
outs
dec
fnsave
out
loope
jae
or
gs
push
clc
stos
adc
push
mov
clc
fst
mov
fcmovbe
ret
cmp
stc
xchg
adc
pop
xor
cmp
mov
out
inc
sub
mov
cmps
ret
cmp
je
aam
(bad)
push
xchg
inc
push
jne
rcl
ja
in
jne
mov
icebp
jno
cmp
jnp
mov
repnz
sub
push
cmp
xchg
sbb
fs
loop
push
pop
pop
aad
pop
add
mov
mov
or
jbe
jne
imul
outs
jle
dec
jl
jae
sahf
mov
pop
mov
jno
jns
mov
mov
or
cmp
jbe
shr
in
pop
sbb
jns
mov
mov
bound
dec
mov
pop
loop
imul
and
push
test
add
adc
ror
sub
xor
fadd
inc
pop
mov
cmp
in
fmul
test
into
test
xchg
stos
leave
mov
xchg
enter
lock
pushf
int3
jne
jb
es
inc
jb
pusha
push
test
es
out
cli
addr16
jbe
outs
and
cmp
cmp
pop
jnp
clc
xor
int
nop
call
repnz
mov
into
call
fidivr
pop
nop
outs
pusha
lock
rcl
push
xchg
mov
fld
sahf
add
sbb
jmp
aam
gs
cmc
pop
inc
jmp
cmp
fwait
pop
push
push
mov
cld
add
fcomp
push
dec
mov
nop
clc
cmp
out
movs
xlat
xor
arpl
cmp
adc
fdiv
out
je
sbb
popa
daa
jle
mov
fs
mov
sbb
addr16
xchg
mov
xchg
imul
jmp
fwait
add
or
repz
gs
iret
dec
ins
outs
dec
sub
dec
cmps
repz
jmp
sub
pop
in
loop
ds
test
pop
les
pop
out
and
pusha
call
shr
and
jp
mov
xor
ja
xor
in
push
jp
ja
hlt
or
movs
scas
movs
xchg
sbb
jnp
cmp
mov
lahf
jno
sbb
scas
mov
ror
push
lods
nop
call
rol
mov
xchg
outs
cmp
rcr
and
mov
(bad)
xchg
(bad)
sub
cmps
xor
mov
dec
repz
mov
sbb
inc
int3
mov
ja
push
sbb
add
dec
jg
push
mov
push
cmp
dec
mov
push
addr16
and
jmp
and
jne
sbb
push
in
dec
call
mov
cmp
fsub
stos
jle
aas
in
aaa
sahf
inc
fild
push
fdivr
ins
iret
or
dec
lock
rcl
sub
lea
loopne
add
mov
into
shl
xchg
out
bound
jns
(bad)
mov
rol
(bad)
icebp
fwait
or
xchg
xchg
ret
lds
nop
(bad)
in
imul
popf
mov
popa
fidiv
cmp
or
pop
mov
jp
retf
add
(bad)
mov
mov
mul
mov
and
popf
sbb
cmps
xchg
pop
xchg
popf
add
into
fld
fcmovbe
(bad)
pop
loop
dec
sahf
ret
adc
and
sar
mov
ds
sub
adc
rep
jbe
das
inc
inc
sub
pop
stos
xchg
jp
add
not
arpl
hlt
ja
rcl
push
push
and
shl
mov
mov
je
mov
add
cmp
ja
pop
(bad)
xchg
lds
dec
push
cld
lds
push
jne
pusha
cmc
aaa
mov
fld
out
xor
fwait
or
inc
inc
daa
mov
sub
daa
into
call
inc
cmp
dec
push
mov
(bad)
pop
pop
add
stc
jbe
nop
mov
popa
rcr
xlat
(bad)
mov
cmp
rcl
jb
dec
sbb
xlat
or
inc
and
mov
rol
int
sbb
xchg
outs
lock
out
div
pop
mov
dec
repz
dec
push
cdq
jnp
jmp
mov
ffreep
mov
into
xchg
jge
cmps
jns
movzx
sub
sbb
jp
imul
pop
or
adc
int
sub
and
hlt
sbb
les
mov
mov
and
(bad)
iret
adc
pusha
dec
sbb
mov
fcmovnu
jmp
jno
xchg
or
or
call
cmp
(bad)
mov
pop
es
xchg
test
or
and
and
sbb
ss
lds
retf
sub
lahf
add
jg
sub
aad
mov
dec
xchg
push
jnp
mov
fisttp
or
dec
sar
cmp
cmp
jle
jbe
in
je
sahf
(bad)
jae
pop
aaa
out
dec
jbe
sub
xchg
les
call
fmul
mov
cwde
fs
xlat
cmc
test
dec
arpl
push
mov
cmps
clc
xor
test
rcr
cmp
adc
mov
mov
sub
mov
inc
xor
mov
mov
loope
mov
fstp
in
outs
jge
inc
adc
repz
jmp
push
shr
pop
in
sahf
xor
inc
mov
cmp
cmp
jmp
push
ja
out
mov
sti
pop
adc
xchg
lea
rcr
imul
call
adc
rcl
push
jle
test
shl
cmps
mov
out
push
aas
inc
ins
jnp
sti
out
(bad)
js
dec
add
pop
(bad)
test
push
and
add
lock
adc
xor
cwde
pop
mov
mov
jge
mov
adc
add
inc
cs
ror
cmp
xchg
inc
and
stos
scas
inc
mov
fstp
das
out
mov
push
loopne
mov
sub
xor
push
pushf
mov
arpl
call
scas
aaa
fucomi
inc
inc
rcl
daa
push
lods
pop
dec
push
jbe
pop
mov
pop
jp
mov
pop
pop
enter
jmp
mov
js
dec
sbb
(bad)
xchg
mov
(bad)
int
in
cli
imul
or
jne
hlt
ret
cmp
daa
leave
sbb
add
jle
sub
scas
xor
fstp
pop
cmp
(bad)
cmp
shl
lods
out
aas
fsubr
sub
add
xor
cmp
lea
mov
test
std
mov
mov
mov
outs
popa
pop
ins
pop
push
xor
mov
imul
xchg
ret
mov
loope
gs
out
add
fwait
outs
xor
mov
imul
daa
push
dec
lods
sbb
mov
adc
lahf
cwde
leave
aam
js
je
mov
dec
sbb
mov
test
mov
jb
or
dec
fisub
out
sub
cmp
adc
jno
or
xor
out
gs
jecxz
push
push
fdivr
mov
arpl
out
mov
fadd
aam
out
dec
rcr
inc
xor
cmp
jecxz
int
ja
mov
cld
shl
movs
fild
xchg
push
inc
jmp
jbe
mov
sub
mov
and
xor
lds
add
test
inc
(bad)
leave
mov
add
jo
mov
mov
jno
icebp
xlat
mov
pop
neg
(bad)
js
push
cmps
fs
ret
popa
cwde
dec
imul
inc
xor
out
test
push
scas
jb
pop
and
dec
loopne
rcr
cmc
push
fnstsw
mov
cmp
or
push
sub
jp
cld
jmp
jmp
das
push
push
adc
inc
dec
cmp
xor
cmps
add
jmp
(bad)
aaa
push
lea
add
addr16
push
sbb
pop
or
iret
fcomp
mov
sti
mov
test
loop
hlt
addr16
mov
push
out
xor
data16
mov
cmp
fwait
movs
jae
jmp
xchg
cdq
dec
mov
mov
push
pop
test
out
push
imul
sbb
(bad)
(bad)
adc
int3
cli
neg
cmc
daa
rep
mov
sub
adc
dec
out
dec
sbb
cmp
loope
cdq
int
lods
xchg
mov
lock
call
(bad)
lods
fbld
lahf
jo
sahf
dec
jbe
sbb
lock
addr16
adc
int3
cdq
lds
rcr
enter
(bad)
shl
outs
popf
add
in
fimul
cmc
test
xchg
cmp
dec
jne
jb
fcom
adc
jmp
mov
in
test
sbb
mov
fild
fcmovu
mov
push
or
lods
and
leave
arpl
sub
in
inc
cmp
pushf
ss
mov
pop
mov
and
mov
(bad)
adc
jge
or
lods
and
dec
dec
mov
and
(bad)
sbb
outs
dec
test
dec
pushf
and
jge
adc
icebp
dec
nop
jns
jmp
cmps
repz
ds
xor
dec
xchg
xor
das
add
pop
mov
jecxz
leave
cmp
in
ja
mov
fstp
loop
into
and
test
iret
mov
pop
rcl
sbb
call
loop
xor
(bad)
das
(bad)
out
outs
jmp
mov
adc
adc
push
je
mov
icebp
xchg
imul
aaa
aad
pop
in
ja
xor
sbb
(bad)
or
(bad)
cmc
retf
jb
sub
mov
mov
mov
(bad)
sub
mov
retf
shl
js
retf
xor
add
mov
daa
(bad)
popf
inc
mov
test
mov
jno
(bad)
mov
mov
pop
pop
cli
mov
stos
fwait
dec
std
cmp
test
lahf
jo
push
jnp
fdivp
mov
rep
mov
lods
mov
imul
test
aas
pop
loope
(bad)
xchg
pop
retf
jmp
cmp
xor
int3
daa
adc
xor
lods
pushf
dec
sub
xchg
and
fwait
dec
fsubrp
jns
in
arpl
mov
add
push
pop
adc
xor
mov
adc
lock
cmp
scas
ja
cmp
push
mov
inc
xor
(bad)
repnz
jmp
popa
dec
ds
or
(bad)
lds
sbb
and
pop
lods
cs
sti
shl
mov
daa
add
push
xchg
xchg
sar
sbb
pop
cli
cmps
scas
push
cmp
cmps
push
jae
jmp
movd
je
sub
fiadd
xor
dec
inc
fistp
int3
mov
enter
or
les
jmp
push
rcl
out
out
and
xchg
fild
popf
sub
out
dec
out
lahf
iret
(bad)
push
fistp
xor
xor
mov
and
sbb
cmps
nop
data16
mov
(bad)
lds
inc
cmp
sub
jae
mov
stc
adc
mov
dec
test
dec
dec
jae
dec
in
xor
add
cli
mov
mov
adc
and
imul
(bad)
push
ficom
cmp
jb
adc
push
jl
rcr
pop
stc
(bad)
stos
rcr
sbb
xchg
lea
movs
ret
(bad)
pusha
(bad)
pop
shr
cs
jg
pop
push
test
call
mov
inc
aam
mov
add
lds
ret
movs
inc
and
inc
ror
add
in
repnz
call
and
mov
popf
hlt
retf
sar
and
sbb
or
sti
sub
jne
in
sub
lea
aas
test
(bad)
push
push
movs
add
push
sub
pop
or
xchg
and
xchg
daa
or
mov
jo
bound
sbb
pop
adc
cmps
stos
sub
sub
push
dec
out
shl
mov
add
mov
aas
test
mov
xchg
cmp
inc
dec
mov
ret
pop
movs
cmp
rcl
or
cmp
xor
repz
clc
lods
and
jg
ss
pop
stc
ret
jno
enter
mov
xchg
(bad)
ret
cld
sahf
cmp
pop
into
xchg
test
dec
mov
mov
adc
xchg
loopne
ret
fiadd
out
out
(bad)
shr
loop
jge
pop
popf
xor
sub
add
mov
(bad)
xor
xchg
enter
sbb
(bad)
rcl
mov
pop
bound
mov
rcr
inc
pop
shl
in
sar
arpl
sbb
(bad)
sahf
icebp
lds
mov
push
mov
out
arpl
jne
xchg
pop
pop
cmp
out
or
sbb
jg
add
jns
call
(bad)
movs
dec
js
inc
dec
jmp
mov
cmp
and
adc
mov
push
popa
pop
cmps
rol
fcmovne
out
push
pop
mov
mov
movs
cmp
cs
and
retf
or
add
xor
mov
sahf
retf
add
imul
jne
imul
mov
ins
fmul
sbb
mov
mov
jbe
sar
test
inc
(bad)
mov
shl
dec
lods
in
cmp
int3
fbstp
sbb
cs
repnz
pop
jmp
sub
icebp
push
mov
(bad)
hlt
adc
pop
mov
mov
adc
repnz
mov
adc
dec
dec
and
out
xchg
sub
jp
xchg
push
add
shl
call
sub
sub
xor
xor
into
and
push
pushf
in
int
adc
les
add
mov
stc
dec
dec
or
jmp
pop
call
imul
pop
push
loop
cmp
add
in
pop
pop
(bad)
xchg
out
hlt
imul
xor
ret
jnp
sbb
or
fisub
and
aaa
daa
enter
int3
retf
fcom
fs
add
cld
mov
sub
xor
push
cmp
ds
cmp
sbb
mov
jge
inc
cmp
jnp
mov
jecxz
test
movs
(bad)
sbb
push
cli
dec
jne
mov
aaa
xchg
mov
push
fmul
stos
std
and
movs
adc
lea
fdivr
and
imul
iret
adc
jle
idiv
inc
xchg
bnd
xor
sti
sbb
fst
mov
leave
adc
aaa
jae
mov
mov
mov
mov
dec
cli
jb
or
cmp
jns
xchg
and
jae
stc
pusha
add
xor
jge
or
add
mov
das
sbb
cli
stos
cmp
int3
or
sub
xlat
loop
push
and
aas
inc
mov
jne
pop
int3
xor
das
mov
jl
and
inc
stos
mov
cwde
and
or
xor
xor
les
mov
jle
pop
enter
pop
xchg
test
daa
(bad)
div
mov
sub
inc
sub
cmc
out
xchg
pop
xor
movs
add
push
push
xchg
and
sub
inc
adc
mov
jge
out
pop
pop
xchg
data16
add
call
(bad)
jo
cli
cmc
sub
mov
and
jle
lahf
jnp
inc
imul
mov
fild
mov
sbb
jp
cmp
jne
jg
jp
and
retf
mov
sub
sbb
out
fadd
inc
mov
das
(bad)
les
int
aas
loopne
xchg
dec
fmul
(bad)
fwait
or
sub
loopne
test
(bad)
xor
jl
xor
mov
jnp
mov
or
xor
and
enter
push
xchg
dec
mov
call
loop
dec
jmp
cmp
sar
xchg
out
adc
mov
and
or
jno
pushf
dec
jb
push
fs
xchg
and
pop
mov
push
ret
dec
sbb
pop
imul
jle
dec
push
adc
adc
or
sar
push
mov
xor
cmps
pop
cmc
jnp
jb
fstp
es
fmul
or
mov
and
ror
jnp
stos
(bad)
cli
add
gs
mov
fisubr
fcmovb
jbe
mov
push
rcr
imul
arpl
movs
xchg
push
nop
cmps
bound
iret
add
mov
sub
xor
out
jbe
dec
and
inc
push
xchg
mov
add
loop
iret
and
or
mov
stos
push
sub
leave
mov
dec
addps
lods
inc
add
adc
dec
pop
adc
lock
fmul
rcl
xchg
repz
mov
fldcw
loopne
jae
jns
mov
sti
test
push
jl
add
inc
ins
cmovne
movs
movs
(bad)
in
and
movs
test
inc
in
cwde
xchg
lods
or
pop
sub
outs
mov
retf
cs
inc
imul
shl
sbb
add
cmp
div
das
mov
add
pop
mov
mov
sbb
or
add
rol
div
enter
push
mov
xchg
jp
xlat
sub
ret
pop
ret
jmp
sub
repz
push
push
mov
add
dec
call
rcr
cmps
cwde
out
mov
fcomp
xor
in
shl
cli
test
cmp
fbld
sub
adc
add
addr16
cli
inc
sbb
daa
cli
loopne
dec
add
aas
sti
enter
push
int
dec
xor
stos
sar
cdq
cmp
adc
mov
mov
imul
sub
sub
sub
mov
aaa
mov
mov
mov
fsubr
leave
pop
xlat
push
push
call
add
sbb
mov
andnps
pop
mov
cmc
jbe
sbb
sbb
movs
or
repz
sbb
pop
inc
xchg
and
mov
ins
and
push
push
mov
dec
cmp
push
jno
jmp
inc
aam
cmp
ins
mov
fsubr
pop
jecxz
loope
or
stos
ret
or
dec
cwde
imul
jnp
cmp
mov
js
xor
xor
sbb
mov
fsubp
lds
stc
cmp
ds
mov
xchg
retf
test
mov
sub
jnp
pop
mov
cmp
shr
es
jbe
scas
sar
bt
rsqrtps
cmp
repz
add
cwde
fstp
ss
jbe
xor
xor
push
aas
dec
push
push
pinsrw
and
mov
ins
stos
hlt
(bad)
rol
mov
(bad)
jno
mov
pop
neg
cdq
xchg
mov
stos
push
jg
ins
stos
not
pop
dec
jg
rol
xor
sub
or
fidivr
add
cmp
pop
push
adc
inc
dec
add
push
aad
in
and
hlt
outs
ror
dec
repz
pusha
loop
or
mov
mov
mov
adc
dec
mov
repnz
cld
xor
stos
cmp
sub
pop
xor
push
xchg
jbe
(bad)
or
or
out
(bad)
xor
ss
movs
aad
repz
nop
mov
xor
xchg
cmp
ss
test
cld
out
inc
and
inc
(bad)
shr
mov
ror
xor
cmp
cdq
mov
sti
push
jno
or
fadd
mov
js
pop
pusha
dec
sub
push
mov
push
rcr
lods
xchg
inc
cs
int
nop
pusha
and
jg
icebp
(bad)
inc
test
push
xlat
mov
jb
xchg
xor
pop
cmc
int3
mov
inc
pop
mov
fs
mov
sbb
mov
mov
cdq
cs
xor
test
inc
sub
jnp
pop
cmp
faddp
mov
jecxz
imul
scas
inc
out
xchg
into
rcr
sub
jecxz
out
pop
cmp
sar
(bad)
imul
mov
retf
out
icebp
sbb
xor
xor
xchg
js
(bad)
fsubr
(bad)
mov
add
adc
movs
in
outs
cmps
cmp
(bad)
ins
js
pop
sub
loope
test
loop
into
repnz
push
mov
scas
shr
jo
stos
jo
movs
dec
icebp
loope
mov
pop
adc
jno
xchg
leave
jae
dec
mov
movs
ret
mov
pusha
mov
dec
test
mov
daa
das
add
call
pop
pop
mov
sub
stos
adc
mov
fist
push
div
xchg
push
sub
mov
xchg
movs
jne
(bad)
int
iret
outs
daa
iret
sbb
test
sbb
scas
(bad)
lahf
repnz
inc
aad
out
cmp
daa
push
pop
shl
push
in
jl
mov
inc
mov
sahf
sbb
lea
pop
jge
pop
cdq
iret
test
xor
inc
dec
xchg
lods
(bad)
in
out
shl
pop
fbstp
inc
xchg
test
ret
stc
ja
jp
sti
mov
adc
(bad)
repz
sbb
sub
daa
inc
fmul
mov
push
add
fwait
pop
pop
(bad)
mov
push
lods
or
xor
leave
cld
mov
mov
mov
jg
mov
dec
div
dec
push
mov
loop
call
outs
jno
pop
fwait
mov
ret
dec
add
inc
imul
in
or
inc
neg
(bad)
sbb
jns
cld
add
sub
test
dec
idiv
xchg
bound
call
pop
jne
sbb
xor
icebp
shl
retf
pminsw
das
int
sti
jbe
daa
ins
push
outs
push
test
mov
repz
add
adc
fcmove
inc
and
cmps
mov
pop
push
and
retf
fld
es
aaa
pop
xor
or
jbe
jbe
das
xchg
cmc
and
cmp
pop
add
xchg
pop
(bad)
pushaw
mov
mov
inc
pop
cmps
stos
and
or
lds
int
adc
sbb
mov
js
dec
stos
push
(bad)
adc
scas
into
jbe
and
push
fucom
inc
std
aaa
fmulp
jecxz
inc
in
rol
cwde
pop
sbb
pop
fsubr
loopne
xchg
(bad)
test
(bad)
test
mov
mov
lahf
or
out
xlat
leave
push
or
mov
push
mov
lds
cwde
push
jge
loopne
mov
popf
and
xchg
and
rcl
fcomp
dec
inc
add
cdq
(bad)
hlt
xor
ja
mov
icebp
inc
cmp
pop
or
test
and
sub
hlt
mov
or
mov
push
aam
fadd
inc
cmp
ror
sbb
mov
int
sub
pusha
jge
add
scas
inc
jp
test
pop
loope
scas
mov
xor
fxch
out
jmp
scas
fild
das
lahf
sbb
lods
push
imul
and
lea
xor
xor
push
lea
ror
pop
mov
jg
call
cmps
jmp
call
imul
test
outs
inc
jne
mov
aad
ficomp
arpl
arpl
xor
scas
and
pop
js
call
dec
inc
xor
mov
int
das
jnp
inc
jb
mov
sbb
adc
fild
fwait
test
pop
faddp
stc
xchg
xchg
cs
cwde
and
add
ret
xor
ret
push
leave
retf
shl
test
xor
in
repnz
jns
jle
out
push
push
or
add
mov
imul
clc
inc
shl
and
inc
in
loope
or
arpl
stc
xor
in
out
xchg
fwait
repnz
int3
jge
add
in
call
dec
arpl
ds
mov
in
das
or
mov
retf
popf
jp
(bad)
mov
jmp
sahf
popf
imul
mov
add
jnp
cmp
mov
dec
bound
jmp
mov
ds
lods
mov
into
je
add
call
repz
mov
repz
adc
loopne
or
test
xchg
add
ret
xchg
nop
in
shr
je
lea
pop
ret
ss
push
mov
add
mov
mov
jl
jnp
aaa
dec
(bad)
fucomi
mov
jge
sahf
sub
dec
ret
mov
xor
pop
cmp
jnp
inc
xchg
mov
jmp
mov
sbb
nop
xchg
adc
add
adc
bound
fiadd
xchg
jp
das
retf
outs
jno
gs
pop
mov
jmp
mov
hlt
in
sub
retf
xchg
mov
or
mov
cmps
lahf
int3
aas
sti
inc
sbb
jl
sbb
lods
inc
sub
leave
adc
aam
ror
sbb
out
clc
push
aam
mov
mov
adc
pop
lahf
das
out
mov
xor
aaa
sub
cmps
sub
int
popa
dec
dec
adc
cmp
pop
mov
out
gs
pop
fsubr
push
out
in
add
scas
adc
cmp
and
xlat
nop
ror
jno
cmp
push
dec
dec
inc
mov
add
push
sbb
mov
jmp
fs
jo
push
push
jecxz
xor
lods
mov
cmps
sbb
dec
push
psrlq
dec
addr16
add
gs
ins
cwde
inc
or
into
pop
loope
aas
fisub
movs
in
sub
das
in
into
enter
clc
xchg
add
icebp
sub
jecxz
push
aaa
cmc
xchg
mov
xor
rcl
pusha
and
and
test
test
(bad)
in
pop
iret
int
stos
push
jmp
leave
mov
pop
cmps
mov
cmp
inc
and
xchg
inc
xchg
retf
sub
and
pop
or
mov
pop
lods
or
or
sbb
pop
jo
daa
xor
and
jno
inc
xchg
mov
or
jnp
sub
or
push
scas
or
sbb
ss
stc
inc
fist
xchg
ins
shl
fnstsw
scas
push
jo
mov
nop
or
xchg
jmp
mov
(bad)
sub
sub
lods
lock
out
std
mov
add
sbb
lock
sub
ja
retf
mov
stos
lods
jo
sub
lahf
js
mov
and
ins
adc
adc
dec
push
jge
or
sub
mov
jge
jb
mov
and
adc
sahf
and
push
sub
mov
test
xchg
scas
fwait
(bad)
or
hlt
add
pop
enter
sar
pop
call
lahf
and
jae
mov
mov
test
add
dec
scas
dec
mov
jg
(bad)
jo
std
(bad)
cmp
loope
jp
sub
out
sahf
jbe
fld
or
shr
addr16
in
stc
jae
mov
mov
pop
adc
imul
sti
mov
or
jle
cmp
jnp
sub
mov
and
imul
cs
or
and
repnz
adc
data16
xor
sbb
in
inc
retf
shr
test
or
push
hlt
inc
test
dec
fsubr
dec
nop
inc
jp
gs
inc
mov
push
call
pop
jnp
(bad)
popf
pop
outs
inc
jne
in
lea
outs
stos
jmp
cli
movs
sti
and
arpl
dec
cmp
push
sti
fldcw
add
in
loope
mov
mov
je
mov
cmp
(bad)
dec
pushf
mov
in
cwde
cmps
push
cmp
mov
fistp
and
mov
jle
jge
add
ret
imul
lahf
test
and
test
rol
(bad)
in
dec
int
or
in
add
pusha
call
cmc
push
outs
fstp
push
mov
xor
lea
pop
add
in
push
pop
shl
test
xor
aam
inc
mov
popf
push
lea
push
mov
or
jae
jmp
mov
add
call
jmp
adc
push
data16
jb
xor
add
arpl
sub
cmp
out
push
inc
out
test
aas
pop
sbb
pop
pop
dec
call
xchg
fistp
add
push
add
fnsave
(bad)
loopne
retf
xchg
inc
out
mov
push
movs
and
retf
push
ins
and
retf
mov
cmp
push
js
cmps
test
retf
sub
mov
ja
in
add
pop
add
mov
mov
mov
add
dec
daa
cmp
xchg
and
pop
and
mov
fild
push
inc
cdq
pop
mov
cmp
cmps
jmp
jg
test
lods
hlt
push
aaa
aad
pop
jae
int
stc
les
fisttp
ffree
movs
dec
lds
test
mov
dec
sub
daa
scas
repnz
cmp
jno
xor
push
pop
xlat
lea
sub
je
ins
jg
xchg
xchg
shl
xor
mov
mov
in
fdiv
loope
jne
fistp
dec
loope
rol
sub
xor
and
fwait
ret
(bad)
nop
iret
psubusw
or
dec
neg
xchg
fistp
mov
ret
out
jmp
bnd
dec
sti
inc
mov
mov
repz
xor
push
leavew
fild
aaa
shl
xor
add
fsubr
add
retf
daa
ins
and
dec
ins
sbb
xor
mov
cdq
xlat
cmp
call
repz
ret
imul
ret
bswap
es
sti
fwait
ror
out
or
adc
push
jg
ds
imul
mov
and
push
ja
inc
ja
in
push
retf
lea
jmp
jne
std
jne
cdq
sahf
std
call
jp
push
mov
aad
ins
jmp
repz
cli
stc
and
fdivr
stc
jg
xor
rcr
fadd
adc
mov
dec
mov
retf
rcl
mov
inc
mov
scas
rcl
imul
sub
mov
sub
mov
push
out
jb
pop
sbb
push
imul
inc
icebp
gs
mov
jmp
dec
add
xor
lock
sti
call
outs
cmc
retf
idiv
call
fnsave
(bad)
out
jmp
cmp
call
add
dec
nop
xchg
cs
enter
sbb
mov
mov
mov
and
dec
mov
pusha
pusha
xchg
pop
shl
cdq
adc
mov
cmps
mov
add
mov
or
xor
repz
mov
test
push
push
loop
rcr
mov
jmp
jmp
js
arpl
add
mov
out
cmp
cli
hlt
fsub
adc
scas
push
aam
cmp
pop
fwait
loop
mov
in
add
add
sbb
sub
test
ss
mov
mov
cmp
adc
jg
push
sbb
push
js
lods
dec
sti
push
fistp
fcmove
mov
mov
je
and
sahf
fwait
or
repz
dec
inc
les
clc
iret
sbb
aad
ja
icebp
aaa
(bad)
sbb
lahf
fwait
sbb
dec
and
xchg
and
jl
fdiv
jns
js
dec
jmp
sub
test
addr16
mov
loop
xor
shr
sti
sti
pop
or
pop
sbb
js
and
pop
jb
pop
out
test
jb
adc
imul
ret
sbb
call
xor
push
dec
lods
ss
aaa
lods
cmp
mov
mov
popf
das
cmp
push
jl
test
jnp
fisubr
mov
xchg
push
lods
mov
adc
jle
test
dec
int
mov
jmp
add
push
add
inc
retf
cli
retf
push
or
pop
adc
and
xchg
leave
lds
cmp
mov
add
jae
popa
mov
jno
jbe
and
mov
sbb
jecxz
rcl
mov
xor
rcr
mov
jb
jmp
cli
cmp
data16
add
sbb
imul
shl
scas
icebp
fbld
adc
clc
mov
dec
or
jo
cmp
(bad)
test
lahf
(bad)
(bad)
xchg
and
inc
dec
push
shl
pop
or
pop
jmp
adc
jno
imul
loope
int
movs
or
push
out
pop
dec
mov
xchg
cdq
mov
xor
push
push
lods
xchg
dec
xchg
xor
test
mov
adc
xlat
xchg
in
dec
(bad)
jmp
(bad)
retf
fcom
fbld
movs
jge
sbb
jo
out
cmc
stos
int3
push
(bad)
fwait
jmp
sbb
mov
xor
mov
xchg
jge
xchg
dec
leave
or
mul
mov
lds
in
inc
or
mov
or
cli
movs
rcr
mov
cli
mov
enter
enter
fnstenv
aam
popf
fstp
int
dec
add
fs
shl
push
or
jbe
cmp
loopne
and
mov
in
sub
or
sbb
cwde
cmp
inc
push
std
stc
xchg
mov
js
xchg
sahf
mov
js
mov
or
mov
and
or
cmp
cmp
jg
inc
adc
push
jns
imul
xor
add
mov
and
mov
mov
out
cmp
adc
pop
xor
sbb
xor
ja
adc
hlt
mov
cmp
cmp
adc
or
pop
loop
push
fst
(bad)
sub
pop
and
push
call
loopne
leave
rol
mov
jae
push
fisub
adc
shr
mov
mov
or
mov
add
pushf
out
mov
add
(bad)
dec
xor
xor
jmp
xor
mov
push
or
out
test
pop
pop
sbb
jno
dec
shl
test
xlat
or
mov
jg
push
inc
push
(bad)
pop
ins
movs
sahf
fisubr
add
rcr
pop
push
adc
movs
aad
dec
mov
std
inc
ret
scas
(bad)
sbb
cmp
lods
mov
mov
clc
sub
loopne
xchg
sub
mov
imul
xchg
push
sub
loope
xchg
adc
mov
sbb
adc
(bad)
imul
inc
fmul
cmp
int
out
push
out
hlt
sub
push
mov
fisttp
dec
das
les
push
cmps
(bad)
bound
dec
or
call
shl
cmc
(bad)
jecxz
repnz
dec
das
outs
mov
call
inc
jl
out
retf
mov
lods
dec
mov
xor
cmp
pop
imul
cwde
pop
and
push
mov
enter
stos
mov
mov
inc
dec
cmp
js
int
push
xchg
in
mov
cmp
fild
sub
cmp
jle
mov
fcom
sahf
xor
and
push
xchg
jbe
mov
jge
lods
clc
jbe
jo
jne
or
pop
in
(bad)
repz
lds
out
cmp
outs
cmc
xor
movs
push
inc
pusha
jne
dec
xor
jmp
push
es
inc
and
mov
cmps
push
ja
lods
cmps
or
iret
mov
jnp
(bad)
fstenv
pop
inc
inc
hlt
xor
mov
mov
imul
mov
popa
dec
daa
xor
lods
ins
sbb
mov
xlat
pop
mov
in
shl
and
xchg
ja
inc
jb
mov
mov
ins
pop
fcmovnbe
jne
cmp
(bad)
jmp
ss
call
in
or
cmc
cmc
enter
cmps
cmp
push
not
xchg
in
enter
fwait
mov
fsubr
aad
push
in
cs
cwde
out
push
and
jle
adc
shl
xchg
mov
test
and
aaa
add
inc
hlt
(bad)
xchg
aas
cmc
cmc
or
mov
jnp
jns
dec
xchg
enter
test
mov
shl
mov
sbb
mov
pop
mov
or
pop
cs
scas
neg
stos
mov
cmp
mov
je
outs
mov
fisubr
xchg
xor
push
and
daa
or
movs
mov
inc
imul
jnp
add
jge
sbb
js
xchg
or
adc
ret
ins
popf
push
js
into
ret
enter
out
xlat
mov
loop
or
mov
jl
mov
mov
movs
jecxz
cld
js
pop
int3
and
add
jmp
mov
push
in
inc
jno
test
xor
jecxz
push
retf
rol
fwait
addr16
cmps
pop
popa
pop
lea
aas
and
dec
xchg
pop
lock
aaa
sub
(bad)
jmp
stc
mov
cmp
call
(bad)
jae
mov
out
mov
dec
push
add
adc
scas
mov
jl
out
pop
retf
add
(bad)
jo
sub
dec
dec
cmp
push
int
or
cwde
in
aas
xor
ins
(bad)
fst
loopne
xor
adc
inc
and
ret
lods
mov
gs
or
cli
aaa
mov
inc
push
cmp
mov
push
or
aaa
jmp
and
lahf
fidiv
retf
les
inc
jnp
test
pop
ins
mov
aam
jne
dec
inc
rcr
xor
fld
nop
xor
pop
dec
lock
sbb
pop
adc
xchg
pop
out
add
jno
lods
inc
cdq
fist
adc
addr16
or
cmc
and
ins
jle
pop
hlt
aam
rol
inc
dec
icebp
jmp
mov
mov
sbb
cmp
inc
pop
scas
scas
mov
mov
jo
mov
cld
pop
fist
cmps
cmp
mov
fidivr
aas
call
arpl
adc
push
cwde
lea
xlat
inc
test
or
aam
stc
xchg
jg
add
in
mov
ins
das
pop
es
sub
push
dec
sub
xor
mov
add
leave
mov
out
popf
hlt
add
enter
sbb
loope
mov
dec
fs
in
pop
adc
jmp
lods
sbb
adc
or
test
cmc
push
shl
test
pop
jge
int
call
rcl
push
mov
gs
jmp
jecxz
dec
(bad)
dec
js
call
loopne
inc
xchg
xor
mov
or
pop
pop
mov
out
push
cwde
or
cmc
push
je
or
icebp
cwde
mov
iret
out
les
je
add
adc
xchg
cmp
mov
sub
sbb
pop
in
sbb
popf
mov
push
sar
dec
retf
and
fs
imul
jmp
dec
sahf
mov
mov
jo
dec
sbb
shl
adc
test
inc
in
mov
mov
(bad)
clc
inc
sub
push
mov
pop
stos
add
neg
dec
xor
lea
jmp
adc
pushf
test
mov
in
xchg
pop
rol
dec
fild
xchg
iret
and
push
cs
xchg
test
dec
fadd
rcr
lods
jp
ror
pusha
mov
dec
lea
fsubr
test
inc
(bad)
pop
xchg
retf
int
into
or
add
jo
push
push
jp
pop
mov
imul
retf
imul
add
clc
jmp
lock
mov
mov
movs
sub
xchg
out
or
enter
mov
das
outs
movs
mov
push
add
loop
mov
or
scas
pushf
xchg
jle
mov
mov
fmul
(bad)
hlt
or
and
outs
xchg
xchg
loopne
out
loopne
loop
hlt
ss
add
adc
pop
in
retf
jmp
into
push
sub
pop
sub
(bad)
jle
arpl
stc
sbb
movs
les
call
loopne
(bad)
push
jmp
cmp
cli
sahf
test
mov
ret
and
jmp
(bad)
xchg
retf
and
jmp
pop
cld
loopne
enter
movs
mov
mov
lock
repnz
pop
or
push
jge
aam
lds
je
repnz
mov
sub
mov
and
inc
pop
jp
daa
cmps
(bad)
sbb
sbb
xchg
inc
imul
aam
inc
(bad)
or
inc
pop
adc
lds
fimul
pushf
in
inc
and
push
jae
sbb
inc
adc
jbe
in
mov
xchg
cmp
and
lea
fwait
stos
int3
mov
push
xchg
into
fsub
adc
push
test
inc
mov
or
jg
clc
pushf
mov
jg
je
out
(bad)
aaa
bound
cli
sub
or
mov
out
pop
loope
adc
and
cmps
dec
mov
mov
xor
test
adc
mov
call
jecxz
jne
mov
pop
mov
cmp
loopne
add
std
and
mov
das
clc
ss
out
sbb
shr
into
pop
outs
fs
cmp
std
cmc
jno
aam
push
jo
out
push
call
xchg
cs
xchg
loope
jae
lods
cdq
pop
sbb
mov
xor
xor
scas
cmps
mov
push
ficom
jge
cmps
mov
and
ss
push
daa
loop
in
imul
loopne
xchg
jbe
jbe
adc
fmulp
mov
into
retf
inc
pop
add
mov
inc
dec
jl
clc
cmps
inc
dec
xchg
icebp
sbb
sub
cmps
retf
sbb
call
clc
and
dec
xor
repz
loope
(bad)
jle
sub
add
mov
adc
or
adc
jl
sub
pop
cwde
ret
shr
cmp
pop
push
jecxz
test
jns
fs
daa
push
mov
sar
or
sub
clc
les
int
pop
mov
enter
add
adc
pushf
clc
sbb
mov
fldenv
outs
popf
imul
ja
xchg
mov
lods
jns
mov
xor
jp
jb
in
leave
xor
add
mov
add
push
or
cld
ins
sub
not
and
jmp
inc
jns
inc
jmp
pop
push
ror
jmp
inc
jae
xchg
pop
div
xchg
mov
jmp
addr16
inc
out
sub
hlt
pop
mov
mov
push
xor
iret
(bad)
out
mov
movs
lods
int
daa
adc
mov
adc
cld
lock
sbb
pop
cmp
jmp
xor
pop
xchg
cmp
cmp
scas
jo
cmp
loopne
push
adc
or
push
push
hlt
jecxz
push
mov
add
(bad)
hlt
cdq
dec
push
mov
cmp
and
hlt
scas
fst
push
enter
or
test
lds
ror
retf
dec
sar
jmp
cdq
test
lahf
add
inc
mov
lahf
or
retw
mov
mov
xchg
adc
dec
mov
pop
cmps
sbb
sar
movs
adc
int3
mov
mov
add
scas
sub
imul
push
or
pop
jnp
xor
je
push
xor
sub
jno
adc
ret
movs
pop
pushf
dec
mov
cmps
rcr
lock
add
and
inc
cmp
pusha
lods
out
lds
pushf
(bad)
sti
xchg
sar
mov
xor
shl
add
ror
addr16
out
mov
imul
mov
mov
scas
leave
(bad)
inc
out
lahf
mov
ins
push
inc
cmp
inc
dec
push
jmp
je
sub
mov
mov
pushf
adc
divps
inc
sub
mov
js
mov
(bad)
sbb
lea
lea
cli
mov
shl
(bad)
ds
aas
call
dec
and
cmp
stos
add
and
test
lods
(bad)
gs
mul
xor
scas
or
mov
ins
push
call
call
out
or
stc
dec
push
sub
loopne
mov
test
repz
fstp
inc
dec
pop
cmc
mov
xchg
mov
inc
mov
push
(bad)
push
out
or
pop
pop
aaa
or
cmp
mov
push
lods
sub
loope
call
daa
jb
sahf
cmp
dec
int
js
dec
jmp
jmp
es
cmp
loopne
dec
jle
sub
jo
pop
popf
(bad)
jmp
imul
leave
dec
ins
test
vsqrtps
mov
push
call
inc
sub
sub
mov
retf
jo
cmp
cmps
aas
mov
mov
test
das
test
das
adc
mov
sub
int
and
mov
pushf
pop
push
sbb
mov
cdq
cmp
rol
and
fs
test
jae
js
pop
xchg
inc
xor
arpl
fs
call
xchg
sbb
push
in
pop
test
stos
mov
test
jmp
into
call
addr16
pop
jmp
push
jp
pop
cli
ins
mov
test
into
enter
stc
mov
cdq
jns
ins
gs
mov
(bad)
mov
arpl
les
sbb
into
mov
adc
jo
(bad)
and
jmp
test
sbb
retf
cmp
jns
and
in
xor
in
and
shl
sbb
call
mov
dec
mov
jge
or
test
xchg
js
out
dec
sti
cld
adc
add
dec
push
and
pop
xor
sar
jnp
sbb
out
shl
cmp
push
push
push
xchg
aas
mov
int3
mov
lods
mov
or
mov
sti
inc
data16
(bad)
cmp
sti
aad
push
cmp
out
adc
movups
sub
fild
xor
(bad)
sbb
inc
sbb
xchg
addr16
clc
pushf
ja
dec
repz
jecxz
xor
jnp
sbb
loop
clc
cs
fisub
mov
cmp
fnsave
out
sub
sub
dec
call
sti
sub
out
(bad)
mov
mov
mov
sbb
jge
add
fnstcw
lods
dec
gs
adc
stos
mov
adc
loopne
cmc
xchg
ret
jnp
sub
lock
lock
sbb
fisttp
inc
aas
mov
mov
push
fdiv
fdiv
sbb
daa
cmp
rcr
cmp
mov
dec
cdq
fbstp
aaa
sbb
and
sbb
in
nop
fwait
sbb
mov
loop
inc
xchg
icebp
jb
and
fadd
adc
pop
add
hlt
xchg
push
cmp
imul
push
cmps
add
shl
(bad)
out
mov
adc
call
sub
les
rcr
dec
cmp
sub
loopne
rcl
test
das
cli
mov
scas
dec
ffree
sbb
mov
and
std
clc
test
adc
ret
sti
sub
push
jecxz
jmp
mov
and
mov
jecxz
sbb
adc
(bad)
sbb
jnp
scas
out
xchg
std
fist
dec
sti
lea
aam
cmp
jp
cwde
cmp
pop
lods
jmp
add
(bad)
fcom
addr16
je
xor
mov
xlat
mov
jle
popf
and
dec
mov
repz
movs
jae
mov
or
xor
cli
loopne
addr16
cmps
cmp
dec
push
popaw
mov
push
pop
xlat
mov
std
lods
fisttp
xchg
and
scas
add
outs
pop
cmp
out
mov
and
push
push
or
mov
push
sar
inc
mov
loop
mov
aas
mov
inc
sub
outs
je
test
movs
or
sub
inc
imul
les
dec
sbb
dec
enter
jno
sub
and
mov
xchg
mov
jmp
jmp
mov
mov
adc
add
xchg
stos
dec
mov
mov
daa
nop
mov
inc
push
push
cli
jmp
jb
pop
adc
imul
jns
sbb
inc
(bad)
jle
sti
das
dec
cmc
dec
dec
in
xchg
scas
and
mov
xchg
ror
mov
arpl
push
mov
std
cmps
test
(bad)
outs
jmp
clc
(bad)
xor
xchg
push
xor
add
lods
popa
rcr
dec
and
mov
imul
ja
in
cmp
xchg
adc
lds
dec
dec
cmp
fnstenv
fnclex
inc
out
(bad)
mov
test
rol
push
in
cmp
aad
inc
push
fisubr
addr16
int3
aas
popa
stos
jae
stc
ret
sub
xchg
mov
xchg
push
fbld
repz
xor
bnd
sub
pop
add
xchg
repnz
int3
lds
(bad)
adc
rcl
mov
inc
mov
call
pop
jmp
pop
sbb
jge
(bad)
in
jb
push
shl
pop
push
xor
and
into
icebp
cmps
xchg
adc
pop
mov
jno
push
test
mov
outs
pop
fadd
ins
xchg
mov
cmp
jge
pop
jl
mov
dec
dec
adc
pop
and
jle
ja
pop
imul
outs
push
jl
sub
(bad)
retf
leave
lea
retf
dec
mov
rol
jnp
fs
xchg
scas
cmp
or
dec
xchg
cs
ins
and
out
mov
adc
mov
mov
sub
(bad)
test
add
addr16
ror
and
inc
test
ja
cli
inc
test
xlat
pop
imul
jnp
dec
arpl
adc
lds
dec
cmp
imul
or
rol
sub
sar
cmps
or
xchg
call
pop
int
fist
pop
sub
pop
or
test
loopne
clc
scas
pop
imul
cmps
sbb
call
(bad)
inc
out
fld
cli
mov
mov
movs
pop
lahf
pop
outs
sub
lods
xchg
and
pushf
sub
push
push
mov
add
pop
aad
sbb
mov
xchg
add
imul
sbb
out
lock
jns
jne
into
repz
cmc
inc
fidivr
jb
push
jg
in
add
or
mov
adc
xor
or
mov
aad
inc
fs
inc
ins
push
jbe
lea
and
mov
scas
hlt
and
inc
sub
cmps
repz
cwde
neg
pop
jmp
mov
out
push
ffreep
sub
dec
mov
scas
xor
loope
or
mov
dec
sahf
jo
cmp
xor
sti
ror
out
jmp
xchg
push
xchg
das
mov
inc
jnp
lds
mov
enter
not
pop
adc
sbb
cmp
aam
mov
push
or
adc
sub
xchg
faddp
(bad)
add
cmp
cmp
push
mov
dec
mov
ret
lods
adc
adc
(bad)
fadd
jge
lods
scas
push
sub
xchg
data16
repz
test
xchg
(bad)
pushf
mov
mov
cmps
(bad)
ins
mov
sbb
out
test
push
cmp
in
into
mov
clc
scas
dec
xchg
add
pop
dec
dec
rol
sbb
jbe
pop
mov
out
pop
aas
leave
jecxz
push
dec
sahf
(bad)
xor
pushf
cmp
pop
lock
mov
pop
test
lahf
in
xchg
test
ins
and
xchg
dec
xchg
and
ja
inc
mov
dec
inc
dec
add
out
inc
jno
dec
and
test
or
test
(bad)
wbinvd
test
lods
or
lds
sub
jmp
sub
or
and
inc
cli
aam
cmp
sub
xchg
xchg
dec
aam
pop
xlat
popa
ror
dec
jne
jge
out
cmp
jge
xchg
pop
shl
leave
ins
mov
bound
pop
inc
xor
into
rcr
dec
lds
outs
test
pop
xor
lods
aad
(bad)
jae
cdq
cmp
dec
xchg
xor
iret
mov
push
inc
(bad)
fistp
xchg
ins
stos
push
dec
dec
mov
jmp
mov
cld
aam
sub
mov
sbb
out
jg
and
fbstp
fistp
sub
jmp
xchg
pop
sbb
dec
or
jmp
test
lds
mov
mov
mov
repnz
or
cwde
popa
rcl
icebp
adc
dec
dec
call
aam
rcr
icebp
loop
mov
inc
fs
pop
jecxz
pop
lods
out
mov
bound
ins
push
enter
outs
add
dec
jne
adc
inc
ins
add
jp
rol
stos
and
add
mov
mov
pop
and
arpl
mov
popf
fstp
rcr
fdiv
adc
imul
in
in
add
jmp
scas
and
push
xor
pop
or
lock
shl
gs
lods
cmp
sahf
inc
xchg
rcl
lods
push
pop
ret
fsub
mov
xchg
push
add
sti
movs
mov
scas
clc
jno
adc
scas
ins
inc
or
rcr
jb
popa
cld
mov
xlat
xchg
sti
icebp
push
mov
adc
aaa
ret
test
sub
out
xor
aaa
dec
lds
shl
push
rcr
sub
lahf
mov
ja
rcl
(bad)
scas
scas
xor
cmp
pop
fistp
inc
inc
das
xor
les
xchg
add
mov
inc
xor
push
or
std
and
movs
jle
push
mul
cmp
dec
add
pop
(bad)
dec
sub
mov
jl
mov
call
jb
out
sahf
jns
iret
pop
(bad)
jb
add
lods
repz
mov
pop
nop
out
pop
maxps
aaa
push
aad
inc
rol
loope
hlt
dec
mov
mov
sub
adc
popa
mov
sahf
pushf
stos
aas
cmp
imul
jo
inc
imul
pop
jmp
pop
jb
inc
mov
outs
aas
add
mov
inc
aas
mov
repz
xor
fcomp
jmp
sbb
lahf
aas
clc
dec
cld
xchg
push
in
(bad)
outs
xchg
enter
shl
dec
mov
or
xchg
adc
inc
push
add
push
lea
ja
xor
loopne
push
rcr
push
dec
loopne
jecxz
data16
ins
mov
test
aaa
dec
push
add
cmp
xchg
and
mov
mov
popf
gs
xchg
lahf
inc
loope
cmp
push
popf
les
mov
aad
stos
cmps
mov
stc
out
push
push
inc
popa
fimul
inc
jns
sbb
jl
jp
shl
shl
(bad)
stos
xchg
int
sub
dec
cwde
into
mov
sub
in
ds
(bad)
adc
inc
jb
fisttp
ret
xor
mov
ja
(bad)
mov
js
test
cld
mov
popa
call
jmp
jnp
pusha
jnp
cwde
jecxz
daa
jge
arpl
cmp
imul
xlat
enter
cmp
and
scas
or
xor
push
(bad)
fucomip
xchg
add
dec
dec
mov
jmp
scas
mov
loopne
cli
jmp
adc
cdq
add
adc
mov
adc
or
jne
es
stc
sbb
lods
fs
pop
fist
adc
jns
push
jmp
dec
inc
das
push
icebp
pop
ror
pop
lahf
hlt
mov
xchg
fcomp
jb
sbb
scas
cld
ins
jge
push
imul
fimul
icebp
fdivp
adc
jb
sahf
jmp
ficom
adc
repnz
sub
dec
sti
xchg
adc
xchg
in
push
jns
lods
sbb
mov
sbb
pusha
cli
cmp
(bad)
adc
cli
stos
mul
aaa
mov
xor
and
aad
xor
push
inc
push
sahf
adc
or
ins
test
mov
or
mov
das
jmp
sti
cwde
push
icebp
stc
lods
out
xor
ret
aad
xor
enter
cdq
mov
inc
es
dec
push
fisttp
ficom
and
int
and
xor
cld
fwait
sub
sub
sbb
mov
cs
mov
mov
pop
pusha
xchg
sbb
dec
dec
sbb
inc
(bad)
mov
mov
mov
push
dec
aas
dec
jmp
cs
lods
push
ret
mov
fnsave
xchg
mov
or
and
lea
shr
inc
nop
mov
push
ret
leave
push
outs
and
stos
call
imul
mov
mov
outs
xchg
mov
push
aad
xor
dec
or
sar
fistp
lds
in
dec
data16
or
inc
(bad)
lea
sar
jg
add
aas
add
xchg
mov
call
(bad)
and
pop
xchg
arpl
(bad)
mov
imul
or
add
hlt
or
inc
xor
enter
ds
hlt
xor
sub
xchg
leave
scas
dec
rol
ins
sub
adc
lahf
das
cmp
rol
mov
mov
pushf
inc
jg
test
les
out
adc
div
loop
les
mov
ror
or
cli
stos
cmp
and
jo
inc
mov
stos
xor
outs
push
(bad)
test
dec
push
stos
jg
nop
push
lea
iret
push
sbb
shl
shl
hlt
xchg
mov
mov
ja
cdq
cli
adc
stos
sbb
fnsave
test
jnp
sub
in
inc
xor
push
inc
cmps
imul
dec
mov
push
ret
adc
pop
push
inc
xor
inc
xchg
loopne
repz
repz
pop
data16
bound
sbb
shl
das
xor
cli
cs
dec
sub
cmp
out
pop
dec
clc
jmp
fwait
mov
cwde
outs
pop
sbb
xchg
mov
pusha
repnz
xor
jecxz
lods
jbe
test
pop
jmp
(bad)
test
fimul
clc
rcl
dec
jo
sbb
inc
push
pop
repz
sub
bound
or
adc
je
mov
neg
les
bound
adc
add
inc
cdq
pusha
std
dec
inc
lock
ret
sar
xor
add
out
push
in
sar
das
inc
push
stos
fnstcw
repz
ss
dec
mov
ds
imul
xchg
mov
daa
pop
mov
mov
jmp
add
movs
pop
icebp
xchg
es
xor
lahf
arpl
push
outs
dec
xchg
arpl
xor
jecxz
stos
nop
mov
sahf
and
daa
in
arpl
in
xchg
cmps
jge
pusha
imul
aaa
lea
rep
inc
lods
jmp
jg
loop
dec
add
sbb
mov
stos
cmp
stos
sbb
ins
fst
dec
dec
jnp
cmp
fwait
aaa
loopne
cmp
jmp
dec
push
dec
sti
in
lods
and
mov
jle
ficom
and
xchg
dec
je
repz
lods
imul
jl
push
pmaddwd
out
adc
xor
jb
enter
xchg
mov
add
out
cwde
mov
scas
mov
aam
int
push
scas
shr
push
cmp
out
ficomp
imul
add
sub
(bad)
mov
stos
outs
mov
jns
fisub
pop
push
inc
jns
retf
cld
jmp
and
cmp
aam
sbb
mov
mov
xchg
ins
sub
xchg
push
pop
je
push
(bad)
in
stc
sub
sub
push
adc
loop
adc
call
lds
stc
mov
out
movs
nop
out
dec
retf
cwde
ret
pop
cmp
xor
mov
mov
aas
and
push
mov
push
repnz
repz
sti
sub
das
jns
es
jge
jecxz
in
cdq
jmp
ret
fcmovb
imul
ret
sub
xor
repz
out
mov
ins
test
popa
pop
xor
jmp
dec
cdq
leave
fisub
ds
dec
xor
mov
and
pop
scas
mov
clc
mov
stos
stc
mov
xchg
mov
sub
data16
stos
xchg
mov
shl
sub
pop
inc
stos
and
xchg
push
jns
xchg
or
mov
imul
bound
cmp
push
fadd
aaa
leave
jne
mov
inc
sub
fbstp
pop
jp
or
jno
lock
fdivrp
mov
sbb
mov
in
xchg
int3
mov
xchg
jnp
push
sub
pop
pop
fmul
pop
sbb
ret
pop
mov
leave
out
addr16
fcmovu
je
repz
inc
in
dec
paddq
jbe
push
add
(bad)
iret
xor
xor
loopne
push
pop
popf
xchg
(bad)
cmps
sbb
je
cmp
cmp
push
arpl
popa
pop
shl
cwde
arpl
add
push
sti
jmp
push
inc
push
sti
test
mov
mov
cli
es
test
and
mov
mov
in
imul
push
pusha
sub
retf
push
in
push
jae
daa
mov
hlt
xor
jne
stos
daa
xlat
adc
imul
add
cld
cli
or
push
inc
adc
(bad)
fiadd
pusha
sahf
sbb
lahf
add
jp
fwait
sbb
popa
(bad)
push
mov
pop
ds
cmp
adc
fnsave
pop
add
jl
adc
push
aaa
fcom
rol
cmp
jle
mov
fs
(bad)
stc
and
cmps
xchg
mov
adc
sbb
push
lahf
sar
pop
jmp
jle
sahf
dec
popa
sbb
imul
inc
shr
pop
sub
mov
les
lods
mov
loope
sbb
adc
mov
jb
add
ret
ds
addr16
cmp
mov
mov
lods
jp
mov
out
xlat
jg
into
mov
ins
cmp
jmp
mov
dec
sub
mov
inc
fld
std
scas
add
sbb
sar
lea
cmps
aam
push
adc
cmp
retf
and
push
pop
fwait
shl
leave
mov
xlat
jle
inc
cli
jb
cmps
xor
fs
xor
mov
adc
aad
sar
xor
cs
pop
dec
push
inc
adc
scas
add
push
xchg
addr16
ja
pop
jmp
add
into
mov
jnp
jmp
sbb
and
mov
aad
gs
fwait
mov
dec
scas
mov
pop
data16
jle
test
dec
jbe
lock
add
rcl
stos
mov
xchg
sub
mov
jg
jb
and
inc
je
dec
mov
pop
sbb
adc
pop
loopne
mov
loop
xchg
nop
sar
push
inc
adc
push
mov
jecxz
sbb
sbb
jl
mov
imul
dec
cmps
outs
ret
or
cdq
sbb
push
jno
adc
retf
jne
sub
ret
mov
jnp
lods
dec
fistp
jmp
aaa
xchg
mov
into
mov
adc
dec
pusha
sbb
sub
shl
out
dec
mov
cmp
out
mov
and
add
retf
test
mov
aas
xor
cmp
inc
xchg
dec
cmps
pop
push
clc
movs
call
dec
test
jecxz
jbe
popa
push
push
pop
push
in
sub
mov
ffreep
jl
iret
mov
sbb
pop
dec
or
jb
cmp
fdivr
loope
or
push
pop
test
ss
pop
mov
scas
xchg
xchg
aam
mov
and
mov
jbe
pop
aaa
and
xlat
adc
es
std
mov
es
add
mov
cld
je
pop
add
xchg
mov
cmp
or
xor
and
test
pop
or
loop
mov
and
std
lea
mov
xchg
cmp
cmc
sbb
loop
out
fs
inc
dec
scas
inc
addr16
add
ds
pop
arpl
xchg
add
out
andnps
imul
sub
push
sub
je
addr16
jo
mov
cmps
daa
fsubr
mov
xchg
push
pop
sub
push
bound
mov
jle
adc
fist
(bad)
loopne
clc
mov
ds
xchg
xor
xor
dec
lea
aad
sbb
pop
in
cmp
test
jb
sbb
popa
dec
cld
pop
xchg
sbb
mov
ficomp
ret
jo
ss
jl
mov
rcl
cmp
cmovl
retf
dec
out
add
aaa
mov
push
ins
test
test
call
sbb
dec
les
mov
sub
dec
mov
in
fst
push
je
aam
mov
cmp
push
es
and
repnz
dec
dec
loopne
sbb
adc
hlt
jnp
mov
ficomp
(bad)
xchg
dec
mov
pop
imul
cmp
scas
dec
ret
or
sbb
inc
add
fdivr
push
popa
sbb
(bad)
sub
sub
scas
mov
cmps
lods
aaa
push
dec
ror
mov
out
adc
jmp
xor
push
mov
(bad)
mov
fwait
push
push
or
inc
mov
stos
rcr
jle
adc
clc
xor
mov
ror
sub
xchg
or
call
xchg
(bad)
and
gs
cmc
fsub
lds
cwde
dec
add
pop
rcr
push
addr16
pop
mov
inc
test
cmp
mov
or
dec
push
js
push
adc
loop
mov
jns
imul
inc
aad
dec
xchg
ds
mov
test
fwait
jno
adc
xchg
call
aas
jle
jnp
dec
jp
mov
mov
movs
les
loope
or
test
das
pop
test
inc
pop
loope
nop
mov
enter
jl
sahf
ja
pop
jae
int
std
fnstsw
loopne
mov
fdiv
inc
fistp
jnp
pop
retf
or
add
jp
neg
mov
pop
popa
mov
lods
xchg
sbb
outs
fcomp
sbb
adc
pop
pop
jg
mov
test
pushf
test
push
dec
mov
mov
es
push
ss
mov
dec
inc
stc
and
pop
sub
sub
ss
pop
movs
std
jae
out
repz
inc
push
xchg
pop
gs
jns
inc
cwde
imul
arpl
bound
inc
daa
mov
fs
out
cmp
add
push
or
mov
test
retf
das
sub
xor
ds
(bad)
cmp
jmp
sar
cmps
clc
mov
xchg
mov
jge
mov
mov
(bad)
ror
xor
enter
pop
add
pop
arpl
stc
test
cmp
aas
sub
or
sbb
adc
(bad)
int3
fst
les
ret
and
sub
pop
mov
mov
add
jae
mov
push
imul
mov
in
retf
lock
jmp
adc
mov
sbb
push
out
jo
sub
xor
sbb
fsubr
and
sub
sahf
ins
aam
fistp
push
sbb
sub
sub
cmps
add
call
jle
fs
pop
in
sub
xchg
mov
test
add
adc
dec
jl
clc
in
pop
jne
adc
xor
adc
shl
sti
pop
std
ret
cmp
pop
movs
rcl
push
stos
gs
enter
adc
and
pusha
aad
cld
aam
push
inc
mov
add
push
xor
retf
js
in
cdq
lods
scas
mov
mov
xchg
sub
jmp
cwde
cmp
fild
inc
xchg
sbb
inc
rcl
push
mov
pop
int3
sub
mov
dec
cmps
nop
inc
ds
int3
ret
adc
mov
pop
jp
scas
inc
shl
mul
push
pop
sub
cld
aas
cwde
push
xlat
frstor
cmc
pop
int3
mov
int
jmp
loope
push
scas
ins
jl
or
cmp
out
retf
enter
inc
out
js
call
test
mov
ja
and
mov
int
sahf
xchg
adc
xlat
dec
mov
xor
icebp
or
repz
dec
xchg
fsub
cwde
movs
fisub
rcl
fdivr
xchg
inc
pop
les
aam
ret
mov
(bad)
push
inc
je
das
xchg
adc
(bad)
jge
dec
dec
lea
imul
lock
out
xchg
pop
(bad)
push
jo
mov
aad
into
dec
call
xor
mov
mov
ds
into
aad
fiadd
mov
clc
lods
test
aam
icebp
sub
xlat
mov
jl
call
fmul
mov
ja
test
aad
movs
sbb
mov
or
inc
xchg
mov
bound
dec
fs
lea
push
rcl
cwde
jmp
cmp
cmp
sbb
out
cdq
cmp
lea
push
das
sar
ret
cmps
push
pop
out
xchg
xchg
dec
cwde
fiadd
xchg
mov
inc
pop
add
retf
pop
rol
dec
outs
out
nop
int3
arpl
rcr
fcmovne
sti
sbb
clc
ret
or
rcr
push
scas
mov
int
lds
repz
nop
call
sub
and
test
idiv
mov
pop
int3
push
ror
sub
cmps
fstp
mov
pop
std
add
(bad)
pop
cmc
mov
cmp
inc
jae
push
dec
cmps
sub
mov
dec
or
out
stos
loop
int
clc
test
(bad)
sgdtd
pop
leave
pop
push
sbb
sbb
std
adc
pop
pop
inc
movs
mov
xchg
push
out
xor
and
cli
repz
cmc
imul
push
pop
cmps
sub
dec
mov
push
or
xchg
aas
cmps
loope
(bad)
cli
int
or
out
les
xchg
lock
in
stc
aad
in
hlt
cdq
aas
jb
mov
mov
out
fld
adc
scas
repnz
sub
popa
aam
std
outs
mov
loopne
addr16
fidivr
mov
popa
jecxz
movs
adc
int
mov
dec
loopne
jmp
loop
cmps
dec
xchg
mov
retf
ror
sbb
and
jmp
aam
icebp
fidivr
and
mov
and
lods
fst
jno
inc
fnstsw
scas
pop
out
xchg
push
inc
je
push
(bad)
in
xor
test
xchg
aas
cld
jo
pop
adc
arpl
shl
pop
retf
ret
dec
rcr
sbb
cmp
out
adc
nop
das
repnz
inc
popf
fisttp
cs
and
and
jbe
xor
std
or
dec
add
and
sti
xchg
jnp
jb
fs
sub
ficomp
adc
mov
jl
out
adc
pop
jmp
int
aam
jnp
int
mov
aas
pop
adc
add
xchg
dec
(bad)
imul
loope
arpl
ja
inc
inc
push
ja
hlt
mov
xchg
js
in
dec
mov
mov
and
sub
fiadd
add
(bad)
mov
lea
jge
or
(bad)
mov
cmp
enter
call
jno
movs
inc
data16
push
xor
jnp
cmp
mov
lods
movs
inc
ss
enter
cmp
mov
test
or
cmps
pushf
jbe
pop
arpl
iret
jbe
aas
leave
ja
inc
adc
fisttp
in
or
add
pop
pop
rol
rol
sub
sub
ins
cmps
xchg
repnz
jmp
add
lock
and
popf
shl
xchg
add
sahf
fs
shl
je
xor
pop
stos
dec
add
imul
inc
aad
in
pop
push
mov
jbe
fadd
outs
stos
fdiv
mov
xor
loope
mov
cmp
js
bound
cmps
clc
outs
pop
sbb
pop
rcl
stos
ret
sbb
pop
push
lods
jno
cwde
or
push
int3
pop
mov
xchg
xchg
pxor
loopne
cli
sbb
mov
out
std
scas
call
push
dec
jo
pushf
ins
addr16
cmp
jns
inc
xchg
inc
and
rcl
and
sbb
test
sbb
fbld
xchg
stc
lea
jmp
in
xor
add
not
sub
jge
mov
add
jmp
sbb
dec
(bad)
inc
std
stos
inc
xchg
retf
sbb
push
push
push
inc
sub
int3
dec
mov
dec
xchg
mov
jae
sub
xchg
mov
aad
xchg
xchg
fidiv
xor
popf
cmp
dec
ds
inc
aad
or
adc
lods
jo
inc
fcomp
sbb
mov
dec
xor
xor
push
repnz
push
(bad)
jmp
mov
data16
jge
imul
inc
into
mov
mov
cmps
or
mov
(bad)
mov
mov
out
cmps
sahf
sbb
xchg
aaa
test
inc
aas
imul
pop
aaa
cdq
dec
mov
loop
pushf
xchg
cmps
cwde
pop
mov
mov
fmul
xchg
pop
xor
xchg
mov
ss
sti
mov
push
sub
retf
mov
icebp
loope
icebp
sahf
pusha
mov
add
adc
stos
fmul
and
loopne
dec
inc
(bad)
xor
clc
fdiv
and
jno
push
retf
cmp
push
jbe
aaa
test
xchg
punpcklbw
mov
daa
cmp
in
aas
xor
adc
sbb
hlt
mov
imul
ins
fadd
and
(bad)
cwde
outs
cmc
jo
fstp
pop
ret
dec
fs
jmp
adc
pop
test
test
dec
test
fidiv
cmc
imul
(bad)
push
push
jne
movs
dec
sbb
ret
mov
dec
test
mov
xor
push
xstore-rng
cmps
add
jmp
inc
jp
in
leave
(bad)
cld
retf
jns
fisubr
xchg
pop
and
outs
inc
pusha
jmp
xor
movs
mov
mov
cwde
adc
xor
xchg
push
xchg
fstp
cs
mov
jecxz
test
jo
test
mov
cli
push
out
sub
mov
(bad)
pusha
inc
add
add
jns
cmp
movs
call
xor
mov
jno
int3
cmc
mov
pusha
sbb
xor
ja
jp
xchg
cmps
pop
add
dec
pop
and
scas
shl
sub
xchg
push
mov
lds
mov
dec
sub
adc
sar
fmul
mov
aaa
call
cmp
fst
sub
in
aaa
pop
repz
into
sahf
cmp
sub
sar
or
das
or
push
cmp
pop
push
test
sbb
int
mov
mov
dec
pop
nop
jmp
fdivr
popa
sbb
cwde
push
jnp
and
ins
sahf
xor
imul
jns
shl
loope
jmp
cmp
jb
scas
adc
mov
test
or
hlt
mov
pop
jno
(bad)
out
(bad)
or
ret
and
or
call
mov
adc
add
cmc
rcr
jne
sub
int3
call
pop
xor
and
in
sbb
dec
popf
and
inc
aad
(bad)
repz
lods
movs
pop
dec
call
jnp
xor
xor
pop
or
jp
xchg
or
test
xor
cmp
pop
adc
cmc
jmp
loop
jl
sub
jne
arpl
(bad)
jle
into
shl
aad
fisub
mov
into
outs
pop
ins
and
sub
mov
lahf
arpl
adc
aas
push
xchg
mov
int3
int3
inc
fisub
mov
cld
mov
out
and
sbb
jb
mov
movs
sbb
jne
cli
add
inc
rcr
mov
cmp
outs
pop
in
push
xchg
ds
push
add
ficomp
(bad)
mov
out
jbe
ret
cmp
cwde
mov
ins
cld
rol
aaa
jo
scas
cli
cmc
sbb
cli
call
adc
rcl
(bad)
out
fmul
cmp
xchg
das
imul
fidivr
xchg
and
std
dec
and
pop
mov
hlt
fist
adc
pusha
pop
cs
mov
push
fcomp
mov
rol
je
dec
leave
mov
shl
jmp
ins
push
jne
test
mov
mov
outs
jnp
cmps
stc
mov
pop
test
loope
mov
jmp
das
mov
jle
fadd
call
mov
inc
xchg
fimul
dec
push
sub
mov
mov
fild
lea
fadd
cmp
or
pop
ret
ret
stos
jno
push
out
cmp
in
mov
mov
lahf
xlat
out
mov
mov
push
inc
add
jno
iret
xor
retfw
mov
xor
sbb
pop
sbb
aam
pusha
aas
loop
ret
imul
sar
and
push
test
cs
push
sahf
lahf
xchg
mov
pop
sti
push
pop
mov
xor
hlt
xor
add
push
adc
into
mov
push
nop
xor
mov
mov
inc
aam
je
jns
mov
bound
inc
retf
sub
scas
gs
vcmpps
mov
jno
pop
dec
cmp
loopne
scas
mov
or
xor
mov
pushf
fiadd
(bad)
in
mov
cmp
xchg
dec
or
outs
pop
scas
movs
pop
fbstp
outs
stos
adc
outs
into
add
imul
int
jmp
cmp
in
lahf
inc
push
or
(bad)
in
inc
in
mov
stc
shl
test
(bad)
sbb
pusha
jns
sbb
cdq
xchg
retw
mov
popa
mov
jmp
cmp
(bad)
out
xchg
pop
fild
cmp
and
sbb
jp
xor
mov
jns
out
js
pusha
dec
scas
repz
shr
jo
fsub
(bad)
cdq
shl
(bad)
mov
call
xchg
jne
xchg
loop
cmps
xor
mov
scas
or
inc
inc
and
into
mov
xchg
mov
push
pop
mov
in
cmps
nop
cs
scas
leave
outs
stos
add
dec
push
pop
add
fiadd
in
mov
mov
gs
sbb
xor
js
repnz
repz
dec
jl
sbb
xor
and
mov
cmp
stc
inc
stos
mov
mov
je
push
pop
ja
dec
leave
jo
cld
push
xor
dec
mov
cmp
(bad)
sbb
adc
cmc
pop
out
fdiv
jne
xchg
ror
mov
pop
loope
shl
adc
out
sub
add
std
xor
lahf
retf
jmp
cwde
inc
mov
jecxz
add
mov
lods
sbb
dec
add
sub
out
sti
mov
nop
test
icebp
sub
scas
pop
dec
popf
stos
jbe
sub
xchg
xor
(bad)
shr
sbb
retf
xchg
mov
lock
adc
sub
repnz
int3
xor
ss
pop
mov
cmp
jae
dec
pop
lds
icebp
xchg
out
outs
add
add
imul
(bad)
sub
mov
inc
fldenv
fs
push
ja
and
push
daa
cmp
pop
lahf
aas
stos
jp
cmp
xor
inc
mov
iret
jmp
jmp
mov
sub
pop
pop
jle
jno
repnz
rcl
ja
pop
xor
test
popa
lds
mov
jecxz
repnz
out
lea
pusha
mov
mov
fwait
adc
lahf
xor
aam
push
loopne
mov
les
cmps
call
cmc
cwde
stos
cwde
iret
cmp
push
jl
scas
loopne
cmp
push
mov
lods
sub
(bad)
jae
mov
jbe
mov
je
xor
adc
mov
loope
mov
in
xchg
or
test
sbb
pop
int3
outs
mov
inc
mov
cmp
cmps
jno
mov
fwait
mov
sbb
push
push
mov
mov
inc
and
mov
jb
fstp
or
cmps
jbe
ret
pop
mov
sbb
push
xchg
(bad)
fild
xor
mov
nop
push
iret
xchg
sbb
xlat
ins
and
aas
pop
pushf
ss
xchg
adc
xor
(bad)
ss
icebp
aas
push
mov
push
xchg
imul
pop
xor
cmp
out
in
test
in
repnz
and
sbb
push
dec
fadd
mov
pop
loop
(bad)
cmp
xor
nop
or
jecxz
mov
add
cld
and
loopne
fstp
fisttp
outs
daa
push
out
out
pop
leave
dec
(bad)
aam
mov
fdivrp
outs
out
push
xor
xchg
inc
mov
retf
pop
mov
xchg
fisubr
xchg
movs
dec
dec
push
inc
sub
(bad)
ins
cmps
popa
and
pop
xor
mov
jo
adc
and
inc
pop
stos
nop
cli
sbb
and
inc
jae
xchg
mov
rcl
push
jno
mov
sbb
inc
sahf
hlt
jno
fild
repz
cwde
sahf
ja
stos
dec
(bad)
dec
jbe
add
sbb
jmp
xchg
nop
mov
sbb
or
cmps
div
mov
pusha
mov
dec
sub
mov
xor
or
xchg
or
cmp
jns
xchg
fild
sahf
cmps
es
mov
fisub
push
pop
sbb
je
outs
push
daa
jnp
or
(bad)
(bad)
int
clc
les
and
mov
or
in
push
stc
add
cmc
daa
jbe
bound
hlt
push
ds
mov
ss
jae
jb
(bad)
jo
or
or
push
(bad)
jecxz
sub
inc
sti
pop
sub
sti
and
cmps
test
ror
(bad)
hlt
std
add
or
fst
push
sub
rcr
push
pop
sub
(bad)
int
jnp
xor
rcl
xor
stc
add
adc
inc
sub
bound
retf
push
outs
jnp
push
dec
mov
(bad)
movs
call
loop
(bad)
jnp
cmps
xor
dec
sbb
xchg
(bad)
(bad)
mov
mov
and
xlat
xchg
or
sbb
mov
or
cmp
leave
inc
jne
lods
imul
mov
sbb
sbb
inc
das
pop
lds
cwde
retf
stos
cld
pop
cli
mov
cmp
sbb
fidiv
jmp
and
fimul
and
push
jmp
inc
mov
test
sub
cmp
clc
mov
shl
pop
xchg
aam
add
mov
push
ins
into
inc
xchg
mov
push
push
mov
mov
ins
push
ss
popf
add
or
loope
lds
lods
imul
jne
mov
stc
sbb
sbb
dec
inc
or
sbb
sbb
xchg
sbb
dec
adc
(bad)
outs
call
pop
loope
shr
sub
push
push
push
jp
xchg
cmps
and
sub
int
popa
xchg
loop
mov
and
mov
adc
call
jge
shl
(bad)
push
sub
adc
ss
bound
and
pop
push
lds
aas
enter
cmp
int3
cmp
and
mov
mov
in
sbb
mov
aam
(bad)
push
pusha
mov
pushf
pop
xchg
mov
lods
cli
je
cmp
rcl
jecxz
lahf
add
xchg
loope
int
or
std
dec
jne
repz
sahf
dec
xchg
stc
or
dec
imul
test
push
or
rol
leave
mov
fadd
sti
stc
dec
cld
push
jns
mov
int
add
push
dec
inc
dec
mov
test
inc
aaa
mov
test
pop
dec
pop
push
pop
cs
and
(bad)
add
pop
dec
arpl
jne
sbb
retf
retf
pop
adc
fidivr
in
pop
xor
push
push
int3
jno
jl
pop
jl
gs
mov
cwde
cli
cli
jbe
popa
push
lahf
test
fdivrp
mov
(bad)
push
jge
xchg
mov
stos
xchg
adc
and
pop
jg
iret
rol
sysret
cli
pushf
adc
inc
jbe
out
mov
xchg
mov
js
or
inc
xchg
repnz
out
stos
add
cmps
jp
push
rol
int3
sbb
aas
repnz
iret
(bad)
cmp
pop
pusha
iret
(bad)
outs
fisubr
(bad)
jmp
fistp
add
adc
fcomp
stc
jb
ds
mov
pusha
retf
rcl
add
(bad)
(bad)
xchg
in
fwait
push
sub
ret
aam
(bad)
push
dec
arpl
pop
pop
lods
out
cwde
les
add
fnstenv
sub
fldlg2
sbb
clc
mov
data16
push
out
mov
xor
fcmove
rcr
es
nop
ins
dec
dec
push
mov
pop
dec
rcr
call
fcomp
sbb
aam
popa
test
pop
mov
jo
push
iret
mov
jmp
pop
inc
sahf
imul
lods
mov
pushf
in
loopne
shl
jecxz
push
nop
jnp
sub
lock
sbb
and
push
mov
lock
pop
arpl
idiv
xchg
xor
jmp
xor
sub
(bad)
ja
adc
pop
stos
xchg
push
push
lods
pop
scas
mov
ds
cmp
push
ins
lods
je
adc
push
dec
jne
popf
ds
sahf
mov
aam
xor
data16
pop
jmp
mov
gs
push
(bad)
fst
mul
pop
cmc
(bad)
fidiv
push
enter
sti
jne
fadd
push
lods
xchg
or
xlat
mov
jmp
pop
sbb
dec
mov
int
push
out
das
or
dec
dec
jl
cs
retf
sub
(bad)
mov
or
jecxz
cwde
adc
sbb
pop
bswap
adc
fistp
push
cmp
push
les
or
(bad)
fs
mov
add
stos
push
sbb
jbe
in
ja
mov
cld
cwde
rcr
jne
push
cs
cwde
data16
or
out
jg
push
inc
and
push
sub
jecxz
cmp
outs
ins
test
fs
xchg
imul
sahf
mov
pop
cmp
mov
fild
sub
scas
cmp
lods
(bad)
pop
ds
dec
or
push
frstor
push
adc
test
mov
outs
call
fadd
push
jp
aad
call
cli
mov
jecxz
enter
jb
or
and
push
and
aad
push
aaa
xor
nop
adc
out
jle
cdq
mov
stos
dec
test
push
lea
push
cdq
and
loop
fnstsw
adc
(bad)
call
xchg
test
inc
cmps
dec
push
jns
ret
out
or
push
pop
loop
ins
push
adc
gs
shl
mov
xor
outs
sbb
iret
mov
mov
scas
out
shl
adc
stc
push
add
loopne
inc
xchg
cmp
mov
fcom
call
iret
(bad)
jns
scas
fdiv
daa
mov
xor
and
rcl
lahf
sbb
dec
das
aas
stos
dec
idiv
call
cmc
add
(bad)
into
gs
adc
jg
idiv
sub
adc
lea
lock
ret
xchg
gs
push
mov
mov
inc
(bad)
xchg
mov
dec
inc
inc
mov
shl
imul
imul
stos
pop
call
(bad)
rcr
xchg
pop
fwait
xor
aam
sub
jns
push
nop
mul
or
(bad)
pop
in
or
dec
inc
push
xchg
jecxz
(bad)
in
fadd
push
arpl
in
jp
push
std
sub
or
sbb
jge
jmp
pop
xchg
sbb
call
or
ins
pop
loope
push
pop
outs
movs
xor
pusha
ja
pop
mov
mov
loopne
dec
dec
mov
cmp
or
popf
in
pop
push
and
mov
lahf
xchg
sub
fisubr
fsubrp
lock
ins
repnz
mov
cmps
jo
mov
std
lahf
fmul
mov
iret
scas
xlat
(bad)
cmp
fadd
out
pop
push
leave
cmp
inc
mov
mov
mov
mov
dec
xor
mov
out
cld
xchg
lock
jp
mov
and
sub
cmp
mov
and
mov
movs
push
gs
mov
fistp
and
imul
adc
mov
sbb
out
scas
pop
xor
push
(bad)
mov
pop
in
jno
outs
(bad)
jno
out
movs
leave
pop
mov
cmp
jge
mov
movs
cmps
mov
in
(bad)
dec
mov
xchg
js
(bad)
jmp
xchg
retf
movs
xor
adc
jmp
mov
push
inc
mov
movs
cmps
push
cmp
lea
pop
jg
and
cli
or
imul
movs
xor
sbb
call
jne
xor
fdivrp
aam
shl
mov
jbe
push
cmp
loope
mov
retf
xlat
xor
xor
pop
xchg
xchg
bnd
jg
repz
test
or
or
mov
neg
xor
xor
sub
out
jle
jae
add
fisubr
cli
dec
and
mov
fsubr
xchg
stc
ss
ror
or
xchg
xchg
mov
jno
xchg
imul
add
inc
out
fidivr
xor
or
out
into
movs
stc
inc
xchg
stc
data16
call
dec
and
push
cmps
inc
scas
xchg
jmp
call
pop
xchg
adc
rcl
into
sub
int
push
pop
xchg
xor
push
sbb
pop
imul
pop
or
fnsave
shl
mov
pop
femms
idiv
pop
outs
ror
sub
ds
jns
fdivp
sub
cmps
pushf
mov
ret
xchg
xchg
ret
scas
es
or
adc
cld
bound
das
in
dec
cmps
rep
in
mov
push
dec
pop
fcmovnu
sub
repz
push
and
lea
(bad)
pushf
int
sbb
dec
mov
pop
not
movs
cs
and
and
adc
mov
into
adc
fwait
dec
shl
and
call
cld
xchg
mov
mov
shl
or
add
push
jle
jo
fs
xchg
div
mov
rol
and
mov
loop
cmps
push
push
mov
lods
ror
ds
repnz
movs
std
sub
retf
out
xchg
or
adc
ficomp
push
inc
popf
ins
add
and
push
loopne
mov
(bad)
fisttp
(bad)
push
add
mov
fidivr
sahf
push
aad
rcl
cmps
test
inc
ins
or
dec
test
add
pushf
pop
mov
mov
outs
or
add
jmp
sub
dec
pop
mov
xchg
mov
cmps
xor
je
lea
test
xlat
pop
push
ret
push
pop
out
je
pop
push
cli
pop
push
movs
std
fcomp
push
push
test
mov
pusha
imul
js
(bad)
xor
jecxz
jne
jno
pop
mov
mov
ret
and
sub
popa
lods
mov
rol
and
shr
cmp
sbb
pop
and
xor
sbb
or
or
mov
pop
and
and
repnz
mov
out
mul
cmp
sbb
jmp
jmp
fs
sbb
inc
dec
inc
mov
add
push
dec
ds
rol
jecxz
jb
mov
push
int3
popa
repnz
fcom
les
dec
dec
imul
fisub
test
xchg
fiadd
scas
sub
mov
shl
jno
test
adc
jae
cs
fdivr
sbb
loope
aas
xchg
ret
mov
adc
leave
call
jne
jb
mov
int
std
fstp
xor
jmp
mov
sub
retf
mov
cmp
sahf
push
movq
mov
cmp
out
fstp
jae
ins
push
ret
adc
push
or
jnp
jae
or
and
mov
dec
mov
fldenv
fist
(bad)
mov
icebp
mov
cmp
ja
data16
sbb
in
dec
mov
pushf
or
movs
sahf
add
sbb
pop
jl
adc
cdq
or
mov
ds
push
or
loope
cmps
sbb
pop
lock
jb
call
mov
mov
out
dec
pop
dec
jmp
or
out
js
fs
jae
sbb
sbb
xlat
mov
pop
shr
(bad)
test
pusha
add
xor
sub
stos
stos
out
mov
nop
fcomp
inc
push
daa
cmps
push
cmps
lock
pop
dec
and
xor
push
int3
(bad)
fs
rcl
fistp
sub
ds
(bad)
aaa
push
jge
pop
pop
jp
push
mov
cli
mov
mul
lds
in
sub
sub
push
scas
ror
and
jne
leave
inc
jns
aad
pop
jmp
and
xchg
and
pop
movs
xchg
jmp
sbb
mov
ja
pop
jg
mov
test
mov
pop
and
mov
call
inc
xor
scas
pop
push
js
adc
xchg
into
pop
mov
cld
ds
push
jl
mov
pop
jmp
(bad)
adc
mov
pop
popa
cmc
push
dec
das
js
gs
sbb
adc
ffree
pusha
cmp
or
loop
dec
(bad)
(bad)
add
jecxz
add
jmp
add
scas
jne
pop
icebp
and
mov
mov
mov
push
cld
cwde
mov
sub
jl
loopne
pop
pop
das
sub
xchg
mov
sbb
out
or
lods
adc
test
jmp
lods
cli
call
xor
jnp
sub
push
push
cmps
mov
push
mov
push
or
mov
jmp
aad
mov
jmp
mov
scas
cmc
pusha
aas
clc
ds
xchg
test
sar
sub
daa
ds
add
sub
sbb
mov
shr
push
jae
jbe
mov
or
(bad)
lds
stos
imul
mov
(bad)
(bad)
stos
jo
popa
pushf
call
and
sub
std
add
cmp
cmp
inc
out
es
xor
mov
(bad)
icebp
jae
jns
rcl
test
xor
nop
jle
push
push
adc
dec
inc
xchg
call
je
inc
mov
sbb
shl
adc
jg
enter
shl
sub
out
sbb
jmp
shr
lds
sbb
push
mov
sahf
ficom
fadd
inc
or
mov
xchg
test
test
xchg
cmps
jne
cmp
enter
fwait
mov
or
pop
cmps
add
push
push
test
or
inc
scas
cmp
cwde
cs
inc
and
sub
mov
pop
cli
pop
add
(bad)
cmps
adc
data16
mov
xor
std
or
inc
stos
lods
and
enter
ret
or
mov
cmp
std
cli
loop
inc
scas
adc
lods
jno
cs
mov
sar
mov
lock
or
pop
sub
dec
mov
add
mov
jp
adc
cmp
sub
jg
clc
push
jmp
mov
sub
ror
dec
(bad)
std
cwde
jp
arpl
fnsave
push
cli
push
xor
xor
inc
cmp
shl
ficom
push
lds
cmp
adc
mov
push
xor
push
daa
inc
sbb
mov
fadd
test
leave
and
jg
and
test
cmp
mov
xor
das
out
push
sbb
psubd
pop
aaa
mov
mov
dec
cmp
xchg
stos
cmps
mov
outs
and
mov
push
into
sti
jp
xor
rcl
adc
data16
hlt
and
mov
fmul
pop
fisubr
daa
sub
pop
jbe
push
mov
inc
in
mov
fisubr
mov
jmp
inc
sbb
cmp
xor
and
cmps
popf
xchg
imul
aaa
mov
(bad)
cmp
pop
sbb
xchg
cmps
dec
ret
dec
mov
(bad)
adc
js
push
adc
jae
lar
int3
std
xchg
dec
mov
cmp
hlt
in
jno
(bad)
outs
mov
test
and
popa
call
adc
mov
cmp
ins
xor
ror
inc
jne
dec
fsub
dec
inc
adc
ds
xor
push
stos
or
or
adc
jg
and
arpl
or
test
aad
outs
mov
dec
inc
and
cmps
ss
xor
mov
sahf
mov
jecxz
xchg
fld
stos
(bad)
ins
mov
ins
fild
clc
sbb
add
or
sub
adc
push
or
jp
cld
ja
pop
(bad)
rol
fwait
movs
loope
in
ds
stos
and
outs
pushf
sub
inc
xor
stos
add
cmc
inc
pop
jp
jo
sbb
sbb
mov
dec
addr16
mov
push
ret
dec
ja
mov
jns
pop
mov
clc
dec
adc
adc
cdq
lea
(bad)
int3
xor
mov
sub
ins
scas
(bad)
lahf
mov
pop
add
jecxz
mov
(bad)
ror
lea
fucomp
call
dec
dec
mov
sbb
adc
es
push
xor
mov
sbb
nop
call
sbb
mov
jge
inc
mov
sbb
or
inc
or
sub
add
das
int3
aam
not
pusha
dec
cli
ja
pop
fdivr
xor
in
or
fcom
mov
pop
inc
mov
or
sbb
test
push
cmp
inc
inc
adc
pop
jmp
cmp
movs
and
jmp
fadd
std
mov
das
ss
call
mov
icebp
jo
and
stos
lahf
push
jnp
mov
jmp
add
inc
pop
loopne
aam
retf
and
xor
push
push
out
(bad)
in
(bad)
sbb
sbb
add
sub
pop
mov
xlat
inc
dec
jns
std
scas
dec
cwde
sbb
out
mov
fs
jle
lods
es
xor
or
xor
test
xor
xor
imul
(bad)
xor
std
dec
fisttp
add
int3
outs
or
fild
repz
and
mov
mov
or
add
arpl
out
fld
jne
sub
push
data16
out
pop
or
lock
or
dec
dec
(bad)
lahf
call
adc
out
das
retf
scas
(bad)
push
ror
mov
jg
push
pop
xlat
fcomp
fisub
add
or
cmc
mov
loop
aas
push
jg
lea
inc
mov
jmp
scas
fdiv
movs
ins
pop
sbb
inc
ds
jecxz
retf
mov
cmps
sub
and
inc
pop
cmp
mov
shr
cwde
sub
fstp
dec
or
pushf
mov
push
push
dec
sub
outs
mov
sub
int
out
sub
in
shl
stos
push
fadd
jns
in
jns
mov
iret
scas
inc
cmp
push
popf
or
out
sbb
mov
(bad)
adc
sahf
mov
jecxz
sbb
imul
mov
shl
ja
out
jno
fs
inc
jmp
sub
push
mov
sti
push
nop
cmc
into
sti
aas
repnz
fstp
lods
pmulhuw
pop
repz
pusha
data16
adc
lds
out
fwait
ja
out
push
call
lahf
movs
sub
jmp
rep
jg
jmp
(bad)
iret
mov
fisub
or
shl
add
jmp
xchg
inc
inc
(bad)
mov
ss
mov
repnz
pop
inc
out
push
clc
popa
in
loopne
in
or
in
sub
sub
int3
das
cmps
out
dec
outs
mov
lods
fnsave
aaa
fidiv
mov
dec
stos
(bad)
imul
push
pop
adc
pop
nop
scas
stos
or
add
cmc
push
psrlq
outs
(bad)
in
imul
fist
cmp
popf
lods
mov
mov
out
pop
lods
and
ja
adc
xchg
mov
test
xchg
or
sub
add
dec
xor
or
mov
bound
pop
lods
inc
jne
(bad)
lods
and
cli
jg
and
cmp
add
mov
in
cmp
int
fwait
or
stc
jo
xchg
inc
fwait
hlt
mov
aad
inc
(bad)
data16
push
mov
mov
mov
jne
add
push
sub
mov
adc
(bad)
in
sbb
int3
or
(bad)
dec
cmps
ror
cmc
xchg
inc
inc
add
sbb
sub
xchg
loopne
jmp
sub
rcr
repz
shl
(bad)
inc
iret
ds
mov
dec
dec
scas
pop
bswap
jbe
sub
sub
pop
ja
jle
mov
add
push
mov
retf
arpl
int
mov
cmp
push
mov
xor
inc
pop
push
cld
xchg
xchg
jmp
adc
mov
pop
cmp
ret
xor
inc
jmp
retf
imul
adc
ror
in
jns
fist
push
sar
mov
movs
mov
jno
cdq
test
inc
xlat
les
cli
clc
sbb
les
ds
(bad)
pop
sub
sbb
popa
adc
out
sbb
retf
adc
inc
pusha
test
inc
test
test
jmp
jmp
psubw
rcr
or
add
xchg
sahf
dec
je
popf
jp
inc
mov
lea
push
pop
iret
mov
mov
das
adc
mov
rcl
loop
fcmovbe
retf
inc
pop
addr16
pop
out
xchg
sbb
(bad)
movs
mov
xchg
dec
cs
ja
fsub
cmps
popa
mov
inc
sti
cmps
stos
iret
popf
mov
dec
fbstp
ins
js
movs
dec
in
sub
aad
test
ja
mov
sbb
imul
and
jns
xchg
test
rcl
out
and
xor
data16
pop
(bad)
mov
inc
push
vmptrst
xchg
fisubr
mov
pusha
and
std
sti
enter
sbb
jno
pop
je
das
add
je
pop
movs
int
data16
cmp
(bad)
pop
fndisi(8087
jl
jnp
stos
fsub
inc
push
dec
pusha
es
or
mov
push
xor
push
(bad)
scas
pop
inc
fimul
add
repz
mov
aaa
dec
mov
pop
jnp
push
cmps
(bad)
mov
into
sub
xor
xor
sbb
adc
pop
repz
sub
(bad)
jnp
push
(bad)
sbb
dec
(bad)
xchg
mov
inc
lds
jl
sbb
mov
pop
cli
bnd
mov
mov
or
cmp
loope
cmpps
gs
(bad)
out
scas
dec
cdq
cmps
stc
lods
pop
fiadd
mov
pop
add
punpckldq
(bad)
scas
mov
lods
mov
xchg
adc
dec
jl
popa
jle
jl
mov
test
cli
pop
jg
cmps
pushf
jno
ret
movs
dec
mov
dec
pop
push
test
rol
mov
shl
jb
pop
test
jae
inc
mov
dec
imul
fwait
xchg
cmp
aaa
xchg
out
test
cmp
ret
dec
repnz
sbb
into
cmc
pop
aam
or
pop
pusha
sahf
and
in
gs
scas
test
pushf
arpl
inc
pop
xchg
add
rcr
adc
test
stos
xchg
sub
xor
xchg
push
dec
imul
and
pop
cmc
ficom
sub
stc
out
or
and
outs
lods
fs
and
jg
pop
dec
jle
sub
xor
fiadd
das
sbb
repz
adc
mov
(bad)
lods
inc
clc
stc
les
in
jg
movs
inc
dec
nop
dec
or
enter
xchg
inc
jne
inc
jl
push
mov
jb
ja
scas
add
push
and
leave
out
jp
stos
movs
fisttp
fcmovb
mov
sbb
sub
(bad)
lods
or
xchg
push
cwde
sbb
jl
push
xor
xchg
push
mov
outs
ret
mov
inc
jl
xchg
cs
push
scas
mov
sbb
adc
pop
clc
xchg
pop
cli
inc
cmps
ret
xor
mov
enter
jmp
jbe
xor
out
or
loope
aaa
add
sbb
shl
xchg
jbe
xchg
xlat
sbb
or
jnp
fwait
add
ds
adc
fwait
mov
pop
sti
mov
pop
add
sbb
in
xor
push
addr16
pusha
dec
stc
cmp
inc
and
repz
fstp
push
inc
sbb
pop
out
jmp
cmps
inc
cmc
outs
mov
pop
iret
dec
fdiv
sbb
sub
jecxz
lods
sar
lahf
(bad)
jp
push
mov
add
mov
test
(bad)
xchg
cmps
sub
(bad)
mov
mov
sub
shl
in
repnz
cwde
stos
rol
shl
stos
or
push
pop
movs
arpl
clc
out
push
fsub
and
xor
jg
ins
cs
mov
push
sub
faddp
int3
sub
inc
stc
ja
sub
adc
(bad)
es
dec
outs
fdivr
fs
inc
popf
stos
cmc
loop
gs
repnz
inc
jl
or
jo
push
sub
cld
add
mov
push
inc
cs
ins
pop
cmp
pop
sub
jno
dec
cld
outs
ds
in
arpl
je
(bad)
mov
sub
pop
pop
les
hlt
pop
push
and
add
lahf
out
sbb
mov
popa
add
adc
push
rol
inc
jge
daa
mov
imul
pop
cwde
cmovs
jno
test
dec
ja
aas
stc
and
jmp
nop
cmp
(bad)
pop
push
(bad)
jae
pop
(bad)
cmp
dec
mov
stos
fs
jmp
int3
adc
out
cmp
mov
inc
push
jl
mov
sbb
cmp
popa
and
mov
lea
mov
ja
std
div
fist
cdq
xchg
lahf
stc
mov
fidiv
loop
and
int
ss
jmp
sbb
pop
xor
jl
test
nop
shl
push
jle
ror
push
cmp
jo
loop
add
fnclex
(bad)
mov
xor
ficomp
adc
sub
cmp
mov
or
cmp
add
inc
out
neg
popf
cwde
inc
ret
mov
mov
push
fnsave
and
sbb
mov
ds
pop
hlt
loopne
cwde
dec
fwait
jg
mov
inc
cwde
jecxz
inc
test
mov
dec
jb
pop
pop
push
xor
pop
inc
jns
ret
addr16
mov
mov
ins
pop
mov
mov
inc
sub
(bad)
push
aas
cmps
jb
mov
mov
adc
cmp
sub
leave
inc
inc
dec
add
movs
sub
out
call
loopne
sub
xchg
inc
sar
dec
nop
loop
xor
xor
loope
jae
xchg
jns
fmul
xchg
jae
std
mov
dec
jg
pop
leave
mov
xchg
sbb
jge
jnp
jge
jecxz
cmp
mov
xchg
jno
movups
xor
sub
out
bound
adc
cmc
(bad)
xor
popa
pop
xchg
mov
pop
xchg
and
xchg
xor
push
mov
push
xchg
pop
pop
test
imul
mov
mov
jne
out
pop
pop
outs
in
sub
inc
out
scas
inc
ret
xor
sub
xchg
shl
jge
lahf
cld
cmp
pop
iret
xchg
int
fild
leave
or
js
icebp
ret
test
or
or
into
lahf
fst
movs
arpl
icebp
and
ja
test
lahf
rcr
mov
jg
jmp
inc
sti
cmp
jg
add
or
jge
jecxz
jmp
mov
sub
pushf
jnp
pop
sbb
jecxz
sbb
mov
addr16
xor
hlt
and
cdq
repz
ja
or
sbb
jmp
mov
ds
jb
ins
pusha
ins
cli
fdiv
std
sub
sub
ja
cld
enter
and
sbb
xchg
aam
sub
imul
add
add
jmp
mov
push
jg
outs
dec
shl
shl
add
in
mov
pop
cmp
retf
fwait
sti
loopne
(bad)
pop
or
fidiv
hlt
in
push
ins
jmp
bound
mov
pop
in
jmp
push
stos
ret
icebp
sbb
in
repz
je
cld
call
xchg
xchg
mov
inc
data16
std
ret
cli
push
in
data16
jo
xor
jmp
and
xor
push
push
mov
stc
sar
imul
sub
scas
sar
xor
leave
stc
mov
inc
lahf
dec
xchg
rcr
imul
mov
pop
push
(bad)
div
pusha
add
jle
mov
and
dec
cmp
addr16
fwait
rcr
jbe
stos
mov
test
fs
shl
iret
xchg
popf
call
mov
dec
pop
inc
je
xor
inc
xchg
nop
push
jmp
sar
test
jno
sbb
adc
aad
mov
enter
pushf
ins
popa
shl
or
in
sbb
imul
call
in
sub
add
adc
and
div
test
imul
mov
dec
mov
jae
mov
outs
cmp
or
adc
inc
lahf
sbb
sub
call
add
cmps
push
out
out
push
les
ja
into
inc
push
mov
cmp
popf
jns
or
adc
xchg
test
mov
js
and
jmp
sbb
sub
adc
jl
test
xor
aam
mov
pop
cdq
inc
sbb
mov
enter
pop
aaa
push
xor
xor
cmp
jo
sti
adc
mov
in
dec
xchg
push
jg
call
std
icebp
int3
je
pusha
test
sub
sahf
iret
dec
or
pop
xchg
adc
xchg
out
call
add
int
inc
div
icebp
inc
mov
cs
and
into
(bad)
sbb
scas
das
add
cmp
ret
push
xchg
sub
xor
sbb
imul
retf
idiv
fwait
xchg
push
ins
test
test
lods
dec
or
sbb
add
test
outs
ja
pop
stos
ror
aas
cmps
add
pop
leave
adc
mov
loopne
jmp
out
mov
sbb
out
arpl
ins
(bad)
rcl
mov
jno
ss
pusha
xchg
push
push
mov
xor
js
fisttp
jne
pop
outs
shr
in
adc
mov
adc
add
in
jns
lea
xor
mov
sub
ja
aam
jl
test
xchg
push
cmp
sub
nop
jge
addr16
pop
sub
mov
popf
xchg
push
into
leave
xchg
in
push
lods
stos
mov
js
mov
mov
sbb
loopne
and
cwde
arpl
popa
inc
sub
aas
into
jecxz
cmc
loopne
bound
out
test
xor
(bad)
popf
sahf
xchg
pop
xchg
aam
test
add
mov
pop
nop
or
into
inc
pop
retf
ss
xchg
sbb
inc
jle
mov
mov
mov
mov
dec
test
rcr
in
sbb
retf
dec
sti
add
rcl
movs
dec
setns
pop
stos
shl
cs
jecxz
not
fld
push
inc
sbb
mov
fcomp
je
enter
mov
loop
test
movs
mov
stc
and
out
js
fsub
call
mov
push
jno
pop
xor
(bad)
cmp
sti
fistp
mov
push
retw
ret
out
clc
jne
add
fucom
mov
imul
push
mov
mov
fdivr
call
mov
mov
sub
xor
std
fnstsw
xchg
sbb
inc
and
imul
mov
int3
and
fcom
pop
adc
iret
mov
cli
sbb
push
inc
and
xchg
popa
ds
into
inc
test
(bad)
add
jnp
dec
fcmovnu
ffreep
in
inc
jle
jp
das
mov
xchg
mov
ins
adc
fisttp
mov
retf
jl
outs
dec
cmp
popf
xchg
punpcklbw
push
sbb
xchg
adc
pop
mov
cmp
xor
fdiv
fwait
xor
and
xchg
jmp
scas
ins
(bad)
ins
adc
push
out
lods
out
mov
fcomp
icebp
push
dec
dec
mov
mov
pop
sbb
dec
mov
dec
push
xchg
add
or
ud0
mov
mov
mov
cmp
xchg
out
popf
rcr
sub
jge
lock
mov
sub
mov
xlat
xor
adc
inc
arpl
jno
mov
mov
sub
fdivr
or
add
lods
or
mov
cmp
pop
sbb
rcl
sar
adc
and
mov
sar
not
add
test
sub
mov
pop
hlt
mov
add
inc
popf
xor
jmp
pushf
cmp
mov
mov
aam
and
mov
cmp
out
mov
push
xchg
lock
push
pop
in
mov
shl
xchg
inc
pop
(bad)
jo
push
(bad)
adc
dec
sar
adc
(bad)
test
sbb
cmps
jmp
push
psrad
ds
js
mov
test
in
idiv
stos
into
pop
jle
lahf
inc
mov
test
mov
cmp
jge
loop
sti
pop
push
jno
int3
cmps
dec
loop
xor
das
arpl
lods
push
inc
adc
push
sub
inc
jmp
je
call
sub
adc
push
add
xchg
cdq
cmc
jl
dec
sub
ds
in
fcomp
aad
dec
xor
mov
out
mov
cs
adc
or
xor
cmp
cmp
sbb
pop
dec
les
mov
retf
mov
sbb
jb
rcr
cmps
xchg
cmp
mov
mov
push
adc
sti
test
ds
cli
mov
clc
ins
es
add
cli
enter
loop
adc
jmp
pop
push
iret
stos
cmp
leave
mov
inc
inc
push
dec
pop
mov
inc
jo
push
dec
push
xor
jmp
fiadd
adc
loopne
xchg
(bad)
mov
das
out
push
adc
arpl
mov
shl
adc
jecxz
test
adc
xlat
sbb
mov
lock
push
ja
repnz
ss
and
retf
aas
mov
add
xchg
push
ja
dec
push
mov
jbe
dec
push
fstp
rcr
mov
imul
pop
jge
push
mov
loopne
lock
lahf
or
jg
dec
and
call
push
mov
movs
retf
ds
adc
mov
inc
lea
rcl
xchg
dec
shr
mov
in
push
iret
mov
push
xchg
sub
xor
ret
mov
xchg
xor
icebp
push
fs
inc
xor
and
test
inc
and
test
and
dec
call
cmp
(bad)
scas
test
xor
add
and
and
lock
inc
jl
pmuludq
stos
fdiv
sbb
fwait
mov
ret
pop
shl
fldenvw
lahf
xor
lea
aaa
adc
add
imul
dec
and
sub
test
fisttp
xor
or
pop
cdq
xchg
shl
inc
repz
repz
dec
fcom
inc
mov
adc
adc
sub
xchg
stos
aaa
inc
sahf
mov
jmp
or
jmp
les
ds
sbb
or
sar
and
dec
and
in
dec
mov
test
rol
(bad)
sub
mov
jo
dec
sub
pop
enter
fld
or
loopne
add
sub
inc
inc
xchg
fsub
lds
adc
fdiv
mov
xchg
addr16
mov
(bad)
xchg
bound
push
sub
jnp
(bad)
and
cmp
sti
popf
mov
enter
xor
aad
adc
add
push
add
jae
pop
mov
call
add
pop
mov
adc
popf
add
mov
mov
loope
adc
jmp
or
std
mov
jne
sar
movnti
jb
mov
pop
mov
cmp
mov
cmp
xor
pop
sbb
js
pushf
lds
les
clc
mov
sub
in
or
sbb
arpl
leave
cdq
je
je
pop
mov
lea
and
int
or
xlat
shl
ss
mov
(bad)
mov
xchg
std
adc
xchg
sar
cmp
add
jle
loopne
xchg
popa
add
xchg
and
sub
jb
pushf
cli
aam
mov
mov
or
pop
(bad)
leave
inc
es
mov
dec
ins
cmc
xchg
add
mov
mov
js
aad
or
repz
hlt
push
and
push
popf
cmp
mov
add
pop
fwait
sbb
push
mov
cmc
mov
or
mov
push
xchg
mov
or
add
outs
test
ss
push
xor
inc
and
and
add
adc
int3
add
push
push
rol
int
dec
test
mov
addr16
cld
jb
mov
ret
scas
add
enter
(bad)
xlat
push
jp
mov
mov
sbb
and
fidiv
sbb
out
inc
push
test
(bad)
outs
pop
dec
push
shr
cmp
nop
fcmovne
cwde
repnz
repnz
sub
loop
xchg
retf
xor
xor
jge
and
push
aad
inc
mov
mov
sub
sub
in
xchg
sbb
outs
push
pushf
jns
rcl
(bad)
mov
int3
(bad)
and
out
mov
ds
xor
ds
cmp
imul
pop
in
cmp
push
cdq
cmp
fstp
pop
pusha
test
cwde
push
xchg
mov
popf
fbstp
cmp
in
in
push
inc
sub
mov
mov
lods
aam
stos
shr
and
rcr
int
cmp
aas
jg
xchg
int3
jl
std
and
test
mov
sbb
fistp
cmp
dec
mov
fs
movs
bound
cmp
sub
add
cmp
push
sbb
ins
pop
cmp
jecxz
cmp
js
mov
mov
xor
or
inc
mov
(bad)
sti
enter
les
dec
shr
xchg
pop
inc
mov
lds
addr16
jle
or
adc
jp
fld
adc
push
mov
jae
pop
sbb
push
pushf
js
fcmove
mov
add
xchg
in
mov
jl
cmp
and
pop
add
ds
and
out
pop
addr16
push
(bad)
std
std
mov
or
ins
adc
int3
mov
mov
or
cmp
imul
jle
pop
jnp
lods
mov
mov
push
xchg
imul
mov
sbb
or
ins
xrelease
push
pop
rcl
nop
aam
test
jmp
loope
data16
sar
test
jmp
jbe
repz
ss
pop
in
xor
mov
sbb
in
movs
mov
mov
mov
inc
mov
push
ror
mov
out
ror
sub
int3
inc
movs
lahf
cli
(bad)
in
xor
arpl
push
xor
push
sbb
and
and
call
int
mov
cmps
or
inc
jle
ins
lahf
cdq
sbb
das
xchg
push
gs
mov
out
fisttp
cwde
mov
xor
into
rcr
lock
pop
in
cmp
test
das
out
cmp
pop
rcl
mov
xchg
mov
xlat
sub
xor
stos
pushf
jge
(bad)
mov
je
repz
add
cmp
rol
mov
ret
je
mov
cmp
int
imul
cli
out
ja
es
ficomp
xchg
dec
(bad)
gs
inc
mov
adc
inc
or
or
aaa
mov
icebp
mov
cdq
aam
mov
gs
adc
mov
mov
js
sbb
ja
mov
cmp
in
xchg
arpl
ss
aaa
cli
xchg
popa
lods
mov
or
idiv
mov
jge
in
(bad)
in
(bad)
mov
pushf
inc
mov
push
adc
imul
or
mov
cmp
inc
inc
sbb
add
xlat
mov
jmp
jg
sub
imul
add
xchg
sar
ds
and
push
out
xor
dec
xlat
in
test
lods
addr16
or
mov
stc
(bad)
adc
lea
push
sub
rol
mov
stc
inc
xor
int
cli
xchg
test
xor
addr16
mov
push
lea
dec
fnsave
movs
jnp
mov
or
cmp
call
jmp
add
movs
arpl
sub
jno
add
(bad)
or
sbb
jp
dec
retf
out
out
(bad)
push
mov
xchg
arpl
jl
xchg
mov
or
mov
cmp
inc
test
icebp
mov
or
and
outs
lahf
daa
fisubr
mov
(bad)
cmp
push
mov
stos
dec
add
data16
les
cmp
addr16
outs
gs
mov
lods
jge
add
movs
in
ss
sbb
adc
jae
sub
fild
xchg
outs
fwait
push
push
and
push
ss
imul
adc
neg
outs
jb
push
lds
jae
mov
pmuludq
pop
in
or
test
jmp
pop
pop
xchg
inc
ins
in
inc
sub
nop
lea
outs
xor
rcl
pusha
sbb
test
mov
xchg
ins
dec
xchg
add
push
adc
and
dec
loope
cwde
sub
add
jl
in
cmp
cmps
jns
scas
call
aaa
or
data16
or
cmp
pop
add
das
sub
test
xor
push
pop
cmp
push
inc
pop
pop
das
in
pop
icebp
cmp
jl
sbb
push
cmp
mov
inc
stc
jo
cmc
repz
sbb
ins
mov
loope
dec
bswap
jb
scas
loop
dec
xchg
lock
fwait
pop
int
inc
jg
inc
or
inc
int3
(bad)
in
mov
push
and
and
(bad)
pushf
xor
dec
test
gs
ja
jmp
sub
push
ret
ss
int3
aad
xchg
mov
iret
gs
or
cmp
cmc
int3
xor
mov
ret
sub
ins
jne
mov
sub
add
scas
push
inc
test
(bad)
lahf
iret
fcmovbe
sbb
xchg
test
dec
add
das
in
jmp
or
fisubr
mov
out
cmp
call
mov
mov
test
inc
push
sbb
jecxz
nop
xchg
stos
cwde
push
sar
mov
push
jae
add
sub
xor
test
bound
fimul
ins
in
int
adc
dec
stos
out
sub
mov
xor
fcmovnb
ret
fcomp
mov
xchg
aad
(bad)
adc
cwde
pop
ins
xor
mov
xor
in
int3
aam
cwde
imul
mov
test
pop
sub
mov
movq
sub
dec
lock
mov
lds
push
ins
mov
pop
jl
add
push
enter
in
mov
mov
mov
push
sub
push
int3
and
movs
sub
aam
pushf
jl
lods
xchg
sub
repnz
stc
fldcw
push
(bad)
push
scas
mov
fld
arpl
pop
test
ret
inc
lock
jmp
xchg
pop
(bad)
cmp
push
loope
sbb
shl
or
rcr
outs
xchg
out
jns
cmps
pop
(bad)
sbb
dec
mov
sbb
cld
push
movs
stos
sub
jmp
stos
mov
fcomi
and
cmc
fisubr
add
or
push
mov
imul
rcr
sub
iret
cli
sub
shl
pop
out
dec
ret
mov
mov
das
shr
inc
jnp
fsubp
sti
ss
stos
cdq
ins
outs
jmp
inc
add
sub
(bad)
mov
das
les
mov
mov
push
repz
icebp
test
imul
retf
ror
scas
in
push
and
xchg
jmp
arpl
inc
adc
sahf
dec
ret
rol
dec
push
clc
mov
int3
push
retf
(bad)
lods
or
cmp
les
div
cmp
jmp
mov
sbb
push
cli
lods
add
int
or
pop
pop
loopne
f2xm1
fsubr
cmc
lds
jge
loopne
inc
rol
clc
jmp
out
inc
mov
mov
add
jne
popf
jne
or
ins
ins
in
rol
call
xchg
fs
daa
daa
push
xor
les
mov
in
push
das
cmp
and
call
(bad)
or
jmp
push
(bad)
idiv
inc
inc
cld
mov
rol
or
lods
adc
std
lock
stos
test
js
les
cdq
movs
mov
adc
jnp
adc
inc
xchg
les
inc
push
js
bound
lds
ret
xor
jo
out
xor
push
jns
push
in
outs
ret
(bad)
and
mov
push
xchg
sahf
jecxz
(bad)
push
fstp
inc
xor
test
in
pop
int
inc
pop
pushf
inc
das
fstp
dec
popa
add
scas
in
mov
jns
stc
jb
arpl
stc
fisttp
data16
lahf
loop
dec
sbb
int
mov
push
jmp
icebp
inc
mov
and
jmp
call
div
adc
fnstenv
adc
mov
xchg
jmp
inc
push
ret
mov
stc
jp
mov
lock
mov
xor
mov
jmp
popf
mov
outs
push
int3
lods
js
(bad)
data16
call
stc
push
mov
push
scas
aaa
adc
jge
bound
into
mov
xchg
ja
mov
add
ret
adc
and
mov
xor
out
div
icebp
rcl
xchg
leave
pop
mov
icebp
popa
loop
push
out
cmps
(bad)
mov
add
daa
cwde
loop
div
out
inc
rcl
ror
jecxz
fimul
loope
mov
sbb
dec
mov
jno
scas
jns
sub
cmp
je
cmp
mov
sub
cmp
add
cdq
iret
jae
xchg
imul
iret
xor
sti
outs
sahf
clc
nop
adc
cmp
pop
js
mov
mov
inc
neg
mov
mov
arpl
repnz
push
cdq
sub
test
cmps
test
cmp
mov
(bad)
aad
out
shl
pop
inc
ror
fwait
sbb
fs
ins
mov
pop
enter
push
in
push
mov
sti
xchg
push
call
jg
xlat
sbb
mov
nop
mov
jb
cmp
retf
icebp
lds
pop
outs
inc
adc
dec
adc
loopne
push
jnp
mov
pop
sbb
dec
pop
fcom
loop
and
or
cld
scas
loop
pop
mov
xchg
retf
mov
lods
leave
push
mov
ror
lock
(bad)
call
imul
xor
xor
jecxz
sbb
rol
pop
data16
pop
sbb
pop
mov
inc
inc
sbb
dec
(bad)
call
and
test
xchg
pop
retf
adc
push
(bad)
dec
int
fldcw
mov
and
sbb
sbb
je
aam
pop
and
popf
xlat
sub
jae
dec
mov
stc
xchg
mov
push
and
jl
test
pop
mov
clc
mov
jb
(bad)
mov
inc
push
push
mov
and
xchg
data16
mov
and
dec
cmp
jns
mov
dec
mov
jecxz
jle
sbb
mov
cmc
lock
mov
inc
icebp
jmp
sub
sub
pop
inc
rol
push
dec
pop
clc
fidiv
lea
or
add
loopne
bound
scas
pxor
or
popf
sub
jbe
fwait
xchg
sub
or
cld
stos
data16
and
push
xchg
sbb
fwait
jmp
xchg
sub
sbb
lods
mov
mov
call
or
test
add
dec
aad
popf
int
ja
mov
hlt
xor
sahf
rol
mov
clc
scas
in
pop
rol
sbb
fnstsw
sbb
sub
(bad)
aaa
adc
sub
movs
adc
pop
sub
ds
mov
sbb
mov
push
xor
jo
push
inc
xor
mov
cmp
mov
inc
and
inc
mov
jp
cmp
loope
repnz
push
mov
mov
enter
cmps
jecxz
cld
ret
xor
inc
pop
push
inc
inc
push
dec
xchg
pop
sbb
sti
(bad)
xchg
into
shl
dec
int
lods
sub
and
les
cmp
push
mov
femms
or
xor
pushf
in
add
pushf
mul
xchg
lods
out
pop
bound
js
pop
in
or
sbb
jnp
dec
push
push
jle
call
mov
sbb
xchg
ror
sbb
pop
mov
sub
or
adc
and
idiv
icebp
jns
add
lea
xor
ret
dec
push
pop
sub
in
pop
div
int
xchg
inc
jae
(bad)
cdq
mov
aam
push
fldcw
test
out
inc
in
mov
pusha
sahf
ret
out
sbb
test
push
pop
shl
xchg
push
retf
ins
cli
nop
pop
pop
pop
sub
das
rcr
pop
repz
retf
xor
inc
das
jnp
(bad)
pop
imul
mov
xor
sub
out
add
and
mov
retf
cmp
lea
pushw
xchg
xor
xor
or
ins
mov
enter
jb
jg
fs
cmp
mov
call
mov
and
aam
ror
push
not
mov
or
mov
arpl
imul
out
add
inc
jmp
and
loop
cli
dec
pop
sub
jo
pop
(bad)
jmp
into
movs
push
clc
add
mov
shl
add
mov
scas
sbb
xchg
mov
xchg
mov
xchg
jle
rcr
pop
icebp
test
or
cs
js
daa
mov
les
inc
das
pop
xchg
cdq
mov
jmp
dec
and
out
jo
cmps
or
mov
pop
dec
into
xchg
jge
sub
es
xchg
mov
mov
movs
dec
sbb
das
lds
or
imul
mov
daa
(bad)
lock
dec
adc
stc
adc
sub
pop
mov
mov
out
jae
or
mov
dec
mov
xchg
inc
outs
aad
pop
push
mov
push
jnp
call
aaa
test
lds
inc
mov
and
push
jb
mov
ret
jae
push
shl
xchg
or
pop
ror
cmps
mov
mov
mov
mov
xchg
clc
retf
xchg
mov
inc
fcomp
retf
in
xchg
div
pop
mov
sub
jmp
mov
js
xchg
jno
cmp
cwde
mov
ins
imul
adc
inc
and
loop
push
inc
cwde
xchg
or
pushf
mov
out
cdq
(bad)
mov
scas
push
cmps
repnz
in
ret
(bad)
mov
jp
cmc
enter
dec
and
inc
pop
sbb
xor
add
inc
std
test
xchg
cmps
pushf
jae
(bad)
es
into
pushf
push
pusha
ret
push
lods
xor
mov
out
sub
shl
mov
scas
call
pop
ins
pop
jecxz
mov
push
and
outs
push
mov
pop
or
or
pop
inc
inc
adc
aam
cmp
outs
addr16
sahf
fimul
cld
out
pop
mov
jp
outs
jbe
dec
frstor
dec
jecxz
xchg
sti
bswap
inc
adc
lods
test
(bad)
daa
mov
push
pop
outs
pop
out
xchg
xor
arpl
repz
not
and
sti
shl
rcr
repz
sbb
das
and
dec
clc
jnp
jg
std
or
sbb
stos
xor
sahf
icebp
xchg
bound
jo
mov
sahf
clc
sbb
imul
and
scas
addr16
imul
add
sub
repz
rcl
outs
push
in
(bad)
clc
inc
mov
mov
aad
jb
fld
add
dec
idiv
and
gs
add
xchg
idiv
push
jg
xchg
(bad)
test
call
scas
clc
jge
sbb
jmp
sub
sbb
mov
xchg
icebp
push
fdecstp
and
or
imul
outs
test
in
lds
sub
mov
inc
sbb
sbb
xchg
sub
inc
xlat
clc
mov
in
jno
xchg
jmp
jbe
cmp
sub
jmp
int3
aas
dec
push
cmp
sub
in
mov
mov
shl
mov
pop
call
inc
mov
jns
test
je
imul
lods
loope
jmp
jb
ins
dec
add
add
int3
pop
add
inc
jle
fcmovnb
(bad)
jno
mov
adc
les
loopne
mov
repz
jg
cli
lock
jl
(bad)
hlt
xor
xor
pop
push
enter
stc
mov
add
fdivr
mov
das
loopne
mov
lods
adc
xchg
push
mov
gs
xchg
lods
movs
mul
pop
pop
into
lahf
and
scas
dec
aam
sub
lock
jle
inc
mov
js
cmps
popf
xor
mov
sti
inc
mov
mov
xor
xchg
add
shl
dec
push
dec
mov
mov
in
mov
xor
mov
dec
sub
sub
fmul
pop
mov
dec
push
leave
sbb
jecxz
ret
dec
or
cmp
icebp
jb
mov
fistp
mov
push
(bad)
into
in
and
stc
ror
dec
inc
cmp
dec
mov
mov
int
sahf
mov
cmp
dec
ss
add
test
adc
ins
sti
xor
mov
jmp
xchg
xlat
ss
and
enter
xor
sbb
scas
pushf
pop
lods
push
jae
rol
lahf
jnp
adc
push
adc
and
cmp
inc
push
daa
daa
popa
rep
sub
push
inc
adc
cmp
push
mov
sub
xlat
out
dec
retf
adc
cmps
xor
xor
pop
lahf
add
push
xor
js
add
cmc
fmul
and
lods
cld
in
mov
adc
xor
ss
(bad)
adc
shl
hlt
sbb
fs
xchg
into
xor
(bad)
stos
jns
mul
pop
and
cmc
ficomp
leave
add
xchg
fmul
cld
fld
inc
pop
add
sahf
(bad)
inc
jg
(bad)
ins
jbe
sub
or
mov
outs
(bad)
sbb
pop
push
mov
call
adc
shl
out
jb
sar
shl
push
fcom
add
jo
mov
ror
rcr
lods
mov
push
cli
xchg
or
push
loopne
push
mov
mov
(bad)
ds
xchg
cmp
cmp
js
cmc
or
mov
ins
test
shl
repz
ret
fist
faddp
lods
ret
jge
mov
mov
mov
js
stos
inc
xchg
cmps
sar
cmp
ret
adc
out
loope
rol
sbb
aas
pause
add
outs
cmp
ins
mov
retf
dec
ror
out
repnz
aad
sbb
mov
or
cwde
fld
sub
out
cmp
mov
lahf
xlat
pop
cmps
fistp
sub
jns
xor
jbe
fst
cs
scas
loope
(bad)
pop
push
inc
inc
stos
push
js
sub
in
ret
dec
je
aad
hlt
out
arpl
int3
mov
(bad)
jns
jnp
mov
mov
push
mov
mov
mov
enter
call
test
lods
or
aas
popf
mov
or
push
popf
test
push
adc
inc
into
mov
mov
push
int3
xchg
shl
into
retf
sub
cmp
inc
(bad)
in
xchg
and
fld
(bad)
popa
mov
adc
not
cmp
push
and
mov
shl
mov
jae
cmp
neg
and
mov
push
call
xchg
sahf
jle
xchg
cs
stc
or
push
cli
xor
daa
dec
and
and
jns
xchg
scas
ins
(bad)
mov
xchg
jl
sbb
call
cmc
shl
minps
(bad)
(bad)
(bad)
retf
jbe
adc
imul
dec
inc
arpl
cmp
enter
mov
or
daa
cmp
dec
das
push
loope
push
(bad)
pusha
fadd
dec
test
xchg
stc
xchg
push
pop
(bad)
mov
fsubrp
(bad)
outs
push
mov
rol
jle
pop
mov
aas
sub
adc
xchg
mov
and
call
or
add
or
xchg
sbb
jl
loope
mov
cmp
pop
sub
pop
imul
fidivr
xchg
and
dec
mov
loope
daa
cld
sahf
adc
pushf
stos
aad
cmp
lds
(bad)
push
sub
and
inc
sar
inc
add
inc
bound
in
and
dec
stos
sub
jne
mov
fninit
setae
mov
mov
jns
jmp
xchg
inc
dec
mov
xchg
adc
mov
mov
inc
push
cmp
aas
pop
push
jecxz
jnp
xor
jl
ja
mov
inc
mov
or
pop
pusha
inc
(bad)
ffree
pop
and
jns
lahf
out
jne
push
int3
and
mov
mov
adc
xor
mov
xchg
push
jae
rol
enter
add
jl
push
inc
add
mov
ja
fst
nop
inc
sub
sbb
adc
adc
mov
jp
adc
std
lds
adc
gs
mul
adc
xlat
or
call
push
pop
mov
add
and
cmc
movs
mov
cmps
test
retf
lds
lock
clc
int3
out
mov
and
in
std
fistp
cmp
pop
(bad)
fld
call
test
(bad)
in
or
pop
fwait
icebp
pushf
jle
lods
(bad)
add
not
mov
and
test
inc
xchg
pop
jno
jo
mov
loope
scas
xchg
jmp
adc
inc
(bad)
cmp
cmp
dec
test
(bad)
neg
ret
rcl
rol
pusha
(bad)
enter
xchg
clc
stos
add
leave
popf
xchg
mov
cmp
mov
vcvtsi2sd
xchg
repnz
xchg
imul
jo
push
(bad)
(bad)
out
xchg
rcr
xor
sbb
sar
(bad)
je
sub
xlat
push
movaps
int3
sub
dec
pop
mov
add
sub
ins
jns
adc
mov
pop
xor
cmp
inc
int
mov
inc
pop
jne
xchg
loope
push
and
xchg
cmp
cwde
xor
int3
cs
add
sub
mov
dec
leave
mov
imul
add
pop
lods
call
dec
cmp
push
xchg
retf
mov
lea
fld
sti
retf
add
cmp
rcr
jo
scas
mov
into
adc
ret
dec
add
lods
dec
or
or
int3
sub
xchg
hlt
jmp
es
cmp
mov
ret
push
adc
ret
sbb
mov
test
(bad)
or
dec
shl
jb
je
lods
adc
shr
lahf
push
aad
mov
ins
xor
add
sub
jbe
pusha
sub
lock
rcl
cmps
adc
cmp
lods
fcmovb
cdq
mov
lahf
xchg
cmps
clc
cmp
mov
jbe
(bad)
dec
dec
mov
push
and
mov
adc
mov
jnp
fadd
mov
in
adc
sub
repnz
fsubr
push
sub
aad
ror
xor
sbb
jo
rcl
inc
xor
leave
lods
shl
adc
aas
push
lds
and
jl
sub
test
int
aad
mov
push
sbb
jp
scas
out
fwait
push
cmp
fcomp
loop
in
sub
rol
sub
clc
mov
jl
jmp
xchg
test
scas
outs
xchg
dec
fwait
(bad)
ins
xchg
(bad)
movs
rcl
outs
add
jns
fucomip
or
inc
das
out
pop
xchg
outs
mov
cs
pop
jo
test
int
sub
test
test
jns
and
int
xchg
adc
lods
xchg
mov
mov
aam
ja
test
pop
adc
jle
mov
or
jle
ret
inc
ja
jmp
or
fidivr
dec
xchg
sbb
adc
add
xor
push
inc
nop
int
xchg
repnz
pop
xchg
out
mov
and
lods
ins
jmp
lock
sub
sahf
xchg
mov
xor
sub
dec
sub
inc
xchg
sbb
dec
lock
test
cwde
mov
or
stos
idiv
aad
lock
fstp
mov
cld
js
pop
in
or
xchg
retf
add
out
sub
int
push
cmc
jbe
aas
sbb
retf
jmp
and
dec
mov
inc
cmp
repnz
pop
push
ins
push
pop
std
pop
rol
xchg
ss
sub
mov
add
fist
les
inc
xchg
xchg
mov
xor
das
shl
pushf
cwde
mov
jp
cld
mov
cmp
mov
mov
mov
mov
(bad)
sbb
popa
rcr
xor
dec
xor
lods
icebp
movs
or
mov
dec
arpl
dec
scas
xchg
xchg
(bad)
in
push
rcr
xchg
enter
out
fist
mov
xor
xor
cmp
mov
mov
pop
aaa
fucomi
(bad)
shl
dec
dec
mov
aaa
jge
sar
push
jmp
jbe
mov
cmps
iret
pop
popa
jbe
and
jno
inc
mov
pop
idiv
mov
pop
int
stos
cmc
clc
push
push
and
mov
sti
mov
cmps
idiv
jmp
xor
xlat
push
inc
in
ja
mov
pop
pop
mov
jmp
lock
and
mov
mov
cmps
pusha
(bad)
sub
aaa
fiadd
gs
pushf
xchg
adc
xor
jb
int
lahf
pop
jnp
dec
jo
pop
repz
lods
out
ffree
adc
in
adc
mov
movs
imul
stos
and
arpl
in
gs
or
push
inc
das
mov
sbb
push
rol
push
neg
cdq
cld
mov
fist
jp
mov
jns
or
push
cmp
pop
jno
or
mov
call
xor
jp
movs
or
sahf
imul
mov
or
je
inc
inc
cwde
(bad)
xor
xor
sub
stc
mov
bound
int3
hlt
push
sti
shr
inc
rcr
mov
jmp
lea
call
push
xor
stc
xchg
ins
and
addr16
(bad)
fisub
sub
sahf
and
cdq
(bad)
sbb
(bad)
aam
repnz
xor
jo
mov
jg
or
inc
retf
mov
or
sti
sbb
leave
(bad)
(bad)
rcl
cs
pop
stos
mov
shl
mov
mov
push
cli
add
into
and
jae
dec
(bad)
jl
dec
sub
cmc
dec
push
mov
mov
enter
mov
adc
mov
xchg
xchg
test
jmp
into
fisttp
(bad)
dec
add
sahf
popf
mov
or
pop
enter
daa
int3
clc
movs
retf
mov
int
iret
mov
push
div
(bad)
rol
int
arpl
mov
mov
int3
mov
and
scas
mov
jmp
(bad)
outs
test
mov
fs
and
push
std
mov
loop
pushf
xor
jmp
mov
xchg
add
aaa
pop
cwde
ficomp
adc
mov
cmc
aam
loopne
mov
out
lock
pusha
stc
(bad)
arpl
mov
jmp
mov
cmp
cmps
test
pop
and
hlt
xchg
cli
jge
dec
sub
add
mov
push
int3
or
mov
jo
sub
or
daa
push
loopne
pop
imul
aaa
mov
in
cmps
div
loop
retf
dec
inc
add
lods
cmp
(bad)
icebp
imul
sti
retf
loop
test
pop
mov
jecxz
bound
mov
xchg
cmp
fisttp
adc
inc
fist
dec
xchg
lea
ret
push
cmp
sti
push
mov
add
leave
add
cmp
std
add
sub
and
xor
pop
popa
cmp
xor
xlat
pusha
pop
dec
jp
shl
mov
dec
test
addr16
jns
(bad)
dec
in
add
dec
popf
mov
lods
bound
xor
daa
xchg
and
inc
and
call
mov
mov
pop
aas
dec
mov
xchg
int3
cmp
xor
loope
mov
div
xor
add
in
dec
mov
out
cld
loopne
sbb
hlt
or
repnz
sbb
dec
out
cmp
mov
inc
xor
push
add
lahf
das
push
mov
mov
or
and
in
out
and
push
mov
jae
std
sbb
mov
cmp
inc
jecxz
xchg
lds
xchg
pop
movs
jecxz
test
das
hlt
icebp
push
inc
popf
stos
les
mov
idiv
outs
fcmovbe
xlat
sbb
push
mov
pop
popa
sbb
fcmovbe
test
push
or
sbb
sub
dec
ss
lods
in
ret
pusha
cmp
call
sub
fnstenv
jmp
sub
mov
cmps
add
sub
into
call
mov
jmp
mov
mov
jno
push
mov
nop
not
rcl
pusha
push
and
dec
jmp
imul
mov
xor
retf
xchg
mov
mov
cli
cmp
mov
jns
mov
mov
add
mov
or
xchg
adc
ss
inc
push
sti
inc
dec
lock
(bad)
lods
sub
adc
(bad)
(bad)
stos
dec
or
mov
stos
lods
leave
cmp
test
xor
jp
and
pop
stos
sbb
out
push
and
push
jg
or
jg
movs
jg
aad
mov
scas
mov
retf
mov
adc
push
inc
xchg
sub
in
mov
les
mov
outs
pop
and
stc
xchg
pop
test
dec
push
xor
jecxz
mov
je
cmps
popf
mov
push
cli
mov
rcr
gs
cmp
test
jbe
test
nop
jmp
adc
xchg
jne
inc
outs
fwait
sub
xchg
and
jae
xor
fisubr
out
ja
repz
imul
in
jmp
fs
sbb
sbb
mov
push
imul
add
mov
jmp
cmps
out
pop
and
mov
mov
(bad)
sbb
std
pop
jp
sub
jns
pop
or
dec
adc
xor
sbb
fnstcw
(bad)
popa
fidivr
pushf
loope
out
movs
imul
push
stc
ret
cmc
inc
or
imul
mov
rcl
(bad)
push
fadd
imul
cmp
mov
fisttp
add
add
push
clc
mov
pop
pushf
xor
call
lods
(bad)
mov
sub
cmps
ja
outs
ror
out
fiadd
iret
mov
and
mov
cmp
cmp
fidivr
test
loopne
mov
call
dec
outs
sbb
jnp
sbb
pop
cmp
jbe
xchg
cld
je
rol
je
mov
xchg
sub
inc
cmp
cmp
arpl
mov
(bad)
popa
jge
and
dec
lahf
dec
mov
imul
retf
(bad)
jae
cmp
push
mov
test
mov
push
jge
push
mov
in
loope
xor
jno
fldenv
(bad)
jle
mov
xchg
cs
xor
lods
(bad)
mov
cmp
mov
sar
nop
sbb
mov
sub
mov
rcl
das
sahf
xor
retf
jno
push
xor
js
jmp
(bad)
jmp
cmp
ud2
fsubr
sbb
pop
lock
sbb
in
xchg
adc
or
push
sub
dec
shl
cld
sub
js
adc
stc
or
lahf
ds
adc
adc
fsub
fld
or
(bad)
clc
mov
jmp
js
cld
mov
std
add
hlt
xchg
xor
es
inc
scas
sbb
pop
cmp
lock
mov
mov
xchg
clc
pushf
cmps
jne
ja
jmp
test
jmp
or
mov
inc
out
inc
xor
sti
dec
pop
pop
ins
out
add
(bad)
mov
push
call
inc
push
dec
adc
mov
push
stc
ss
dec
dec
ja
mov
repnz
mov
test
xchg
ja
xchg
cmp
push
sub
xchg
mul
(bad)
sbb
dec
adc
out
mov
fidivr
and
sbb
retf
cmp
fs
retf
ret
and
stc
sbb
dec
sti
(bad)
jge
dec
add
outs
pop
and
stos
popa
popf
dec
movs
push
sbb
push
cmp
and
ret
lahf
ja
call
enter
fst
ins
mov
pop
mov
fdivr
inc
(bad)
jae
xchg
ins
jbe
xor
lahf
xor
sti
out
int3
pop
adc
mov
pop
repz
cld
es
sbb
mov
inc
lds
repz
out
or
sub
or
cld
cmp
fxch
or
push
bound
cdq
add
call
add
fiadd
std
and
je
in
sbb
push
into
fidiv
push
jne
out
(bad)
enter
lahf
aam
out
dec
sbb
stos
sub
gs
mov
mov
and
hlt
sub
ins
cmps
dec
movs
pop
inc
adc
jl
dec
mov
call
out
dec
arpl
xchg
lods
call
cmp
inc
popf
xor
xchg
fisttp
or
scas
adc
div
test
pop
sar
adc
ret
inc
movs
mov
pop
dec
in
pop
je
js
dec
outs
pop
pop
xchg
sbb
jmp
xchg
pop
stc
jg
cmp
jbe
push
sub
fistp
push
stos
sub
aas
inc
inc
xchg
push
mov
gs
mov
mov
xor
add
in
or
jmp
mov
push
test
jbe
or
sar
fsubp
cdq
lea
cmp
cmps
add
stos
mov
movs
fcmovne
inc
jbe
jb
xchg
xor
pop
aas
inc
mov
sbb
jle
pop
(bad)
dec
paddq
and
lock
mov
or
ins
cmp
xor
jle
gs
add
push
int3
xabort
adc
lods
mov
lods
mov
dec
das
shl
popa
sub
inc
sub
cld
shl
pop
adc
aam
cmp
mov
jbe
xchg
mov
or
push
or
sar
mov
mov
adc
mov
adc
adc
into
aas
sub
dec
cmps
mov
(bad)
inc
or
lea
mov
fldcw
cld
mov
es
das
pop
and
hlt
pop
mov
xor
repnz
popa
lds
adc
gs
jae
fnstsw
aas
popa
aaa
inc
das
ja
(bad)
int
inc
call
in
lods
mov
ret
inc
pop
or
push
pop
ins
xchg
and
push
icebp
scas
shl
push
int3
dec
pop
cld
(bad)
pop
daa
adc
or
aas
sub
loop
hlt
pop
outs
mov
push
xchg
sar
adc
in
repz
mov
dec
inc
(bad)
mov
into
retf
cmc
xor
je
mov
push
add
scas
inc
in
jnp
pop
popa
adc
add
mov
push
(bad)
xchg
mov
out
push
and
sbb
mov
xor
stos
sahf
add
aaa
(bad)
fwait
(bad)
adc
push
mov
adc
adc
jnp
fmul
add
mov
ins
mov
dec
push
imul
(bad)
add
call
rcl
mov
(bad)
ret
and
stos
push
sub
aas
xor
test
mov
xor
cld
xchg
or
sub
adc
dec
cmp
sbb
jg
adc
in
daa
ret
scas
cmp
(bad)
out
pushf
test
scas
xchg
imul
pop
sbb
jmp
aaa
xor
mov
adc
pop
das
jge
mov
sbb
pop
jae
dec
or
adc
adc
mov
ins
jle
inc
pop
add
ds
retf
out
in
sahf
test
pop
xor
data16
dec
mov
mov
hlt
jbe
aam
mov
(bad)
fwait
cmps
ins
pop
lods
sbb
inc
mov
mov
bound
or
add
inc
(bad)
out
iret
rcr
sub
dec
adc
mov
loop
add
jmp
push
movs
hlt
mov
nop
es
cmc
es
scas
push
in
into
adc
jmp
cmc
xor
cmps
shr
nop
pop
xchg
js
mov
dec
jp
(bad)
ror
sti
fs
pop
mov
dec
loop
inc
icebp
xchg
(bad)
dec
xor
jae
pop
aam
enter
je
mov
mov
dec
jle
stos
xor
pop
mov
test
xor
inc
fmul
sbb
mov
or
jle
retf
movs
ret
adc
sub
and
sbb
fild
jno
jb
ror
fisub
adc
mov
push
loopne
mov
aam
popf
add
leave
movs
retf
xchg
jns
pop
(bad)
clc
jl
pop
loop
jp
and
aaa
xchg
cmps
std
pushf
in
or
std
cmp
psadbw
arpl
and
add
inc
cdq
clc
lea
pop
fstp
push
sbb
jne
dec
ja
mov
adc
int3
fldenv
shl
loope
in
imul
rol
std
in
xor
dec
jne
loope
pop
xor
push
mov
xchg
pop
cmp
out
cld
pop
cmp
fcmovb
out
add
in
ins
xlat
mov
mov
jns
fstp
hlt
mov
push
jb
adc
or
test
jns
xor
jge
dec
and
test
cmp
inc
loop
sti
jg
bound
fsubrp
fwait
xchg
js
cmc
push
addr16
cld
sub
jmp
mov
dec
outs
dec
jge
in
jne
xor
push
fcomp
jg
mov
hlt
cs
add
lods
pop
popa
mov
(bad)
xor
sbb
aad
imul
pop
test
sbb
xchg
add
movs
cmp
cmp
push
push
imul
jmp
add
xor
jl
int3
pop
mov
dec
xor
xchg
xor
test
int3
mov
jb
cmp
ror
test
stc
je
mov
jb
psrld
lods
jle
sub
or
cmp
fs
xchg
or
icebp
dec
add
dec
imul
fmul
jns
jl
movs
inc
fs
ins
retf
ins
in
test
mov
cwde
repz
(bad)
mov
pop
pop
xchg
aaa
push
xchg
xchg
retf
jbe
cmc
sub
popa
push
xor
retf
loope
dec
adc
cli
out
push
mov
mov
test
shl
addr16
add
aaa
sbb
aaa
not
imul
dec
xor
(bad)
cmp
sub
jne
xor
mov
add
gs
das
jae
out
push
lock
stc
cmp
stos
in
xchg
mov
mov
or
jecxz
or
mov
sub
outs
rcr
lods
sbb
and
sbb
sar
inc
aam
out
mov
xchg
dec
inc
mov
rol
movs
loopne
fstp
jae
inc
movs
hlt
retf
sub
cmp
nop
cmp
push
mov
or
retf
dec
sbb
or
pop
pop
xchg
rcl
jno
mov
mov
jb
push
mov
mov
xchg
sub
jmp
jle
or
or
add
call
or
cmp
xor
mov
call
mov
pop
into
mov
sbb
dec
jecxz
sbb
push
mov
ret
addr16
sti
push
(bad)
aad
scas
xchg
mov
mov
imul
enter
jnp
inc
add
cmp
jg
pop
call
(bad)
(bad)
mov
sub
adc
stos
inc
and
test
loope
fisttp
cmc
and
mov
test
pop
xchg
push
stc
out
movs
mov
sub
mov
pushf
sub
jl
mov
dec
mov
into
mov
add
fisttp
sub
mov
out
push
test
data16
pop
imul
inc
test
fsubr
ds
dec
or
ins
dec
iret
into
jge
mov
in
int3
ja
(bad)
sub
outs
xor
fstp
xchg
enter
retf
sub
push
jno
aad
sbb
push
xchg
into
mov
ins
scas
cmps
pop
movs
mov
sbb
loope
js
jno
fsub
in
pop
test
inc
sub
fcomip
int
inc
test
xchg
xchg
je
movs
and
cdq
test
pop
mov
cdq
dec
cmp
cmovl
stos
sbb
mov
lods
cdq
jae
popf
push
lods
idiv
js
jmp
xchg
ret
jp
jle
or
mov
inc
sbb
jle
pushf
scas
mov
sbb
(bad)
(bad)
sbb
lock
cmp
jmp
mov
ins
js
mov
xchg
xchg
jbe
or
test
sbb
fadd
sbb
adc
loopne
dec
pop
cmc
leave
ss
jno
push
rol
cdq
ins
inc
push
pop
aas
add
jmp
inc
in
pop
xor
jnp
inc
mov
pop
mov
(bad)
fsubp
mov
mov
xlat
mov
arpl
dec
xchg
movs
or
bound
int
test
lock
push
and
mov
jg
(bad)
mov
icebp
lods
pop
movs
pop
mov
inc
cwde
sub
sub
inc
add
mov
push
or
jno
into
adc
lods
mov
or
out
cmps
push
push
je
and
lds
mov
mov
adc
inc
sbb
fcmovnbe
mov
mov
fcomp
lods
pop
dec
push
aad
jne
push
jl
ins
scas
movs
cmps
and
push
mov
cs
ja
push
loope
es
or
lea
jno
cwde
xchg
daa
sub
push
dec
mov
and
mov
xchg
jle
jo
shr
or
fcmovu
sbb
push
mov
mul
lods
mov
outs
fistp
out
xchg
out
xor
or
push
rcl
call
hlt
adc
mov
fisub
call
inc
out
das
xchg
inc
push
data16
jg
xor
mov
dec
sub
cmp
inc
lods
(bad)
and
mov
(bad)
jg
dec
push
jo
vunpcklps
mov
mov
mov
arpl
dec
pop
pop
retf
mov
push
push
nop
jbe
adc
jmp
int
mov
jbe
adc
inc
pop
lds
inc
ror
ds
outs
sub
pop
out
or
scas
xlat
cmp
cmp
jmp
movs
jno
and
fwait
add
call
mov
mov
jmp
jle
gs
aad
or
xlat
jmp
fisttp
xchg
pushf
adc
rcl
cmp
je
sub
loope
sbb
cmp
into
cmp
test
mov
(bad)
mov
push
push
jge
add
mov
sbb
fs
or
mov
je
pusha
jge
bound
mov
retf
xchg
vcvttps2dq
mov
ins
jmp
lea
out
sbb
mov
pop
lds
xchg
jno
loopne
sub
mov
xchg
mov
imul
adc
(bad)
sbb
mov
movs
jb
pop
or
pop
test
std
ss
mov
inc
out
les
int
sbb
sbb
rcl
test
out
outs
push
sti
rol
mov
or
ins
sbb
push
push
neg
stos
pop
inc
cmp
fimul
add
xor
pop
ja
loope
push
add
jns
jecxz
sbb
adc
jecxz
mov
adc
mov
push
cmp
repnz
fwait
popf
cli
push
inc
mov
dec
dec
shl
jbe
shl
sub
lahf
js
mov
scas
cmp
add
test
cmp
pop
mov
inc
pushf
in
test
ins
or
mov
xor
hlt
jns
jecxz
js
in
iret
out
mov
pusha
out
jmp
mov
lods
push
in
sub
cli
out
dec
lods
xlat
or
push
push
retf
xchg
xchg
inc
mov
jo
lds
lods
je
int
pushf
and
pop
pop
mov
outs
cs
test
cli
xor
ret
in
sbb
sbb
cdq
mov
mov
fwait
lods
push
fdiv
sub
adc
and
sub
jmp
jae
sahf
and
jnp
and
xor
dec
lahf
jg
repz
pop
mov
xchg
call
rcl
fld
or
mov
rcl
mov
ror
adc
mov
inc
adc
mov
retf
adc
xor
cmps
imul
push
pusha
movs
mov
leave
jle
or
int
lock
les
mov
push
mov
lods
clc
lods
inc
lods
test
add
rol
sbb
mov
jg
out
jp
lds
ficom
daa
sbb
dec
fdivr
test
xchg
lods
(bad)
stc
iret
mov
sbb
mov
xor
adc
mov
sbb
hlt
inc
xchg
pop
dec
lods
test
mov
jmp
xor
pop
inc
pushf
xor
(bad)
pop
inc
mov
mov
push
mov
xchg
in
in
xor
cmp
mov
cli
shl
push
in
mov
pop
ins
mov
mov
(bad)
popa
and
xchg
push
or
pop
jmp
push
cmp
add
mov
arpl
in
sar
ror
push
mov
jb
pop
repz
add
jo
jae
ja
add
(bad)
xor
xchg
test
test
pop
idiv
cmp
mov
int
and
jmp
add
enter
xchg
fmul
cmps
ins
push
push
jmp
mov
stc
clc
or
xlat
add
sub
cmp
outs
es
imul
jo
retf
jl
or
sbb
icebp
iret
aam
stos
xlat
jae
jnp
scas
cmc
outs
xor
push
sbb
shl
(bad)
sar
ror
dec
jns
inc
shl
inc
addr16
jmp
mov
imul
nop
xchg
sub
stos
mov
sub
(bad)
inc
popa
cmp
fld
inc
add
jmp
jb
cdq
or
sbb
movs
popf
int3
leave
stos
gs
and
pop
sbb
out
fst
dec
mov
push
leave
push
ror
loope
xchg
es
out
jmp
ret
(bad)
cmc
or
stos
pop
cmp
jno
adc
push
cmps
mov
dec
pop
outs
dec
ret
fwait
add
(bad)
cmc
call
shl
and
inc
movlps
loopne
imul
push
mov
rcl
cld
imul
sti
jbe
pusha
(bad)
test
mov
pop
mov
mov
sbb
add
push
push
jb
fwait
repz
sub
sub
push
les
loopne
in
sbb
sahf
aaa
xchg
mov
ins
clc
popf
es
add
rcl
push
aas
adc
les
hlt
xchg
dec
xchg
adc
mov
scas
les
enter
cli
hlt
inc
mov
jge
cmps
ret
outs
dec
test
dec
rol
lahf
mov
loopne
cdq
cld
xor
xchg
xchg
ret
lock
int
jp
retf
mov
ror
mov
ds
or
jb
fnstenv
jns
int3
arpl
inc
pop
inc
adc
inc
add
mov
push
jns
arpl
hlt
retf
xchg
xor
and
inc
test
dec
aas
push
jmp
imul
dec
fsubr
sbb
and
sbb
cmp
push
jno
rol
dec
pushf
int3
enter
mov
pop
cmc
pop
mov
sbb
xchg
xchg
adc
sub
jge
and
jb
jg
inc
jmp
into
mov
cmps
mov
scas
fsub
inc
stos
cmps
pop
movs
aad
movs
outs
adc
clc
ins
jg
icebp
aaa
sbb
xor
lock
mov
fdiv
or
out
jns
inc
outs
inc
pushf
dec
shl
arpl
dec
add
sub
push
cld
arpl
xor
outs
cmp
jge
push
pushf
test
push
xchg
pop
cs
inc
les
aas
dec
repz
loopne
push
sub
inc
pop
mov
push
leave
jge
test
mov
sub
mov
mov
mov
call
(bad)
sub
lahf
fldcw
sbb
test
and
jle
arpl
je
mov
test
out
inc
dec
inc
pop
fs
cmps
inc
aas
adc
jmp
inc
loope
add
cmp
int3
test
retf
fsub
add
imul
test
stos
cmp
cs
fiadd
(bad)
fadd
cmp
xchg
xor
mov
jle
dec
(bad)
dec
xor
mov
scas
out
out
loop
xchg
fwait
sub
jae
popa
aas
in
mov
dec
xlat
mov
(bad)
ret
jmp
neg
xchg
loopne
pop
jae
mov
test
in
addr16
imul
pop
ins
pmuludq
leave
and
outs
std
imul
xchg
jbe
push
iret
mov
push
adc
movs
lahf
std
xchg
cmc
(bad)
mov
cmp
mov
(bad)
xchg
dec
leave
fild
bound
or
imul
and
arpl
adc
mov
inc
fidivr
or
ja
ficom
test
pop
mov
dec
bound
leave
or
dec
cdq
adc
dec
gs
dec
aam
js
add
jnp
call
aad
cmps
mov
in
mov
jbe
mov
jns
dec
cmp
cmc
sub
sub
and
fidivr
sar
xor
mov
xor
dec
test
xchg
loopne
ds
cmp
mov
sub
push
jnp
retf
mov
call
sbb
push
sbb
mov
pop
dec
mov
aaa
rcl
cwde
jmp
test
scas
(bad)
mov
push
scas
pop
dec
dec
push
pop
scas
cmc
xor
jl
iret
mov
pop
push
hlt
mov
inc
cmp
smsw
pop
pop
or
pop
or
ret
hlt
mov
mov
fldenv
mov
xchg
repnz
in
test
xchg
nop
or
pop
xlat
mov
dec
dec
sub
jae
pop
outs
cwde
stos
inc
xor
push
xchg
int3
jl
mov
(bad)
inc
xor
imul
cmp
movs
pop
stos
jg
add
(bad)
sbb
repnz
mov
mov
mov
xchg
sub
out
popa
or
sbb
in
cdq
movs
dec
adc
clc
mov
push
xchg
dec
loope
call
mov
sub
enter
lds
aam
mov
xor
add
mov
pop
sbb
aas
out
or
mov
pop
pop
cmp
ret
xor
pop
add
out
push
add
inc
add
call
retf
jp
xor
repnz
push
push
jmp
ror
sub
out
jno
cmp
mov
fwait
aam
imul
xchg
xchg
shl
mov
out
je
ja
add
ret
pop
and
mov
sub
movs
inc
xchg
aaa
imul
ss
sbb
(bad)
cmp
scas
xor
or
jne
cdq
cmp
push
movs
inc
(bad)
mov
jmp
gs
xor
push
fs
or
addr16
popf
not
loopne
adc
inc
repz
bnd
retf
cmp
push
ds
mov
adc
pop
mov
or
and
inc
cld
stc
mov
push
mov
jo
mov
dec
add
jb
loopne
and
test
inc
mov
pause
pop
je
dec
movs
xchg
sahf
cs
adc
pop
fisttp
es
das
adc
clc
jns
stos
inc
and
dec
push
jns
cli
inc
aad
dec
push
fs
xor
cmp
std
jecxz
test
jno
cdq
and
xor
pop
out
into
mov
xchg
pop
mul
xor
iret
mov
(bad)
mov
sbb
test
sub
rcr
jl
outs
hlt
dec
push
push
pop
pop
push
enter
ret
push
push
dec
xor
pop
mov
push
fcomp
lea
push
and
dec
jno
pop
test
movs
adc
jnp
bound
or
push
cs
cli
gs
mov
jmp
jns
adc
pop
fcmovne
jl
fwait
mov
leave
aam
xchg
int
and
loopne
inc
lahf
jle
mov
cld
ja
shl
fst
shl
nop
cmp
lods
adc
outs
pusha
or
jl
pop
pusha
leave
(bad)
jmp
or
popf
jbe
sbb
inc
adc
cmps
jae
test
cmp
lds
cmp
and
ja
cwde
loop
push
out
adc
je
inc
jp
mov
jnp
add
cmp
xchg
add
lds
jnp
inc
imul
(bad)
jmp
push
mov
push
adc
fstp
sub
push
outs
pop
push
imul
sub
cs
push
pop
test
test
xchg
icebp
cwde
adc
mov
fistp
cmps
stc
lds
add
mov
das
movs
xchg
popf
adc
lea
sbb
inc
or
add
jl
hlt
jo
movs
pusha
mov
inc
das
out
(bad)
cmps
jb
in
sbb
mov
movs
push
mov
sbb
aad
xchg
pushf
and
xchg
fimul
(bad)
xchg
and
adc
or
fmul
std
cld
inc
(bad)
test
push
pop
sub
mov
(bad)
int
(bad)
push
add
push
in
in
(bad)
in
arpl
movd
and
mov
pusha
mov
and
push
cmp
imul
mov
sbb
test
adc
and
adc
scas
jg
lods
clc
pop
jbe
mov
inc
xchg
push
xchg
into
test
dec
push
sub
xchg
ror
push
pop
and
mov
stos
test
test
pop
inc
mov
rcr
shr
out
stos
jecxz
mov
pushf
xor
into
cli
outs
cmp
mov
jmp
cmp
rol
or
(bad)
(bad)
jg
call
jmp
test
push
push
sti
xchg
add
ret
dec
into
loopne
mov
loopne
xchg
sub
inc
arpl
lock
stc
pushf
pop
mov
test
or
aas
call
mov
movs
enter
dec
push
sub
shl
inc
mov
shl
mov
movaps
popf
dec
loop
sti
jb
and
or
repz
sbb
inc
lods
shr
jl
ror
loope
in
cmp
adc
mov
push
fistp
mov
jp
sbb
sbb
fldcw
dec
inc
ja
icebp
je
cmp
push
test
cmp
jg
and
movs
push
or
inc
sub
xchg
fisttp
adc
aaa
retf
push
in
call
sbb
popf
cmp
imul
into
leave
jmp
jmp
jnp
ret
gs
fcomp
retf
shl
lock
xchg
mov
je
fdivr
fwait
jne
mov
movs
dec
dec
or
ds
mov
fst
or
mov
adc
mov
mov
inc
lods
add
outs
pop
dec
mov
loope
adc
popf
aad
dec
dec
mov
repnz
pop
sbb
fimul
rcl
dec
cmp
mov
out
dec
fwait
lds
push
xlat
xor
push
ins
enter
enter
sub
je
jle
test
outs
shl
cs
mov
push
sub
pop
rep
push
scas
sbb
or
rcr
repnz
out
jg
loopne
mov
idiv
mov
std
jno
sbb
fs
cdq
sbb
or
dec
aas
(bad)
dec
out
jecxz
aaa
xchg
xchg
je
xor
fldenv
std
sub
cmp
std
cmp
push
leave
leave
(bad)
and
dec
dec
jle
pusha
clc
fdiv
adc
out
mov
jecxz
les
cmps
fs
cmps
hlt
test
rcr
fwait
cs
lods
cs
pop
out
push
pop
(bad)
popa
mov
xchg
push
mov
ficomp
xor
sti
ds
loopne
sar
mov
arpl
lahf
mul
jmp
xchg
sbb
sub
push
retf
sbb
scas
mov
cmp
push
dec
pop
xchg
ror
repz
je
jmp
pop
mov
jmp
popa
mov
jbe
jo
int
add
xchg
push
scas
in
lea
cmp
aas
retf
test
dec
mov
ffreep
jge
sub
and
sbb
aam
arpl
call
sbb
jno
sbb
push
jg
scas
add
jns
je
jmp
inc
cli
mov
cmps
scas
push
pop
inc
lock
mov
pop
enter
and
xor
cmp
dec
mov
repz
jns
jg
lods
push
mov
clc
pop
imul
sub
mov
call
and
mov
xchg
ja
loope
(bad)
lahf
dec
fild
outs
xchg
and
xor
sti
pop
or
push
lods
cmp
xchg
dec
mov
lock
and
mov
jmp
jge
and
mov
(bad)
into
add
lock
(bad)
mov
push
jnp
hlt
pusha
pop
xor
jmp
and
movnti
adc
xchg
xchg
jmp
lahf
cmc
or
jp
mov
xor
cmp
inc
xor
mov
shl
aaa
jne
add
loop
sbb
test
das
test
pop
or
xor
adc
adc
fist
loopne
pop
jno
dec
or
in
adc
outs
(bad)
in
enter
mov
cmps
js
pop
push
jo
rcl
sahf
jle
sub
and
mov
sbb
pop
retf
push
retf
and
add
push
imul
sbb
call
shr
mov
leave
jg
fcomi
mov
sub
dec
mov
sbb
inc
xor
fnstenv
out
retf
jecxz
cmp
jno
pushf
mov
popf
xor
and
adc
adc
fsubr
arpl
test
dec
cwde
adc
xchg
push
in
inc
xor
ins
aad
(bad)
xlat
add
xor
mov
lahf
inc
inc
mov
(bad)
fsubr
or
push
sti
add
lahf
inc
in
in
rcl
jp
or
pop
sbb
push
inc
inc
outs
inc
push
out
fidivr
sub
or
jne
out
out
cmps
pop
xor
jecxz
sti
dec
stos
pop
imul
sub
data16
jmp
out
push
cli
sub
inc
movs
imul
aad
pop
adc
daa
hlt
imul
xor
rol
cmps
pop
xor
int
data16
int
cmp
mov
and
and
push
inc
iret
xchg
sbb
mov
and
popa
pop
dec
add
(bad)
movs
cmp
cmp
and
push
jge
inc
mov
in
in
(bad)
mov
(bad)
jmp
test
mov
push
retf
or
ds
fdivr
sbb
lods
pusha
jbe
(bad)
cmp
sub
js
movs
xchg
cmc
or
inc
(bad)
sub
inc
jnp
retf
lea
jmp
lea
cmp
jp
repz
int3
push
push
adc
sub
popa
xchg
push
out
hlt
and
ret
inc
sbb
sti
out
das
sub
fcom
fcmovb
xor
add
push
inc
popa
jb
repz
call
pop
ror
ret
repz
dec
mov
and
(bad)
shl
mov
aam
addr16
imul
cmp
bound
mov
les
cli
out
xchg
or
inc
stos
(bad)
iret
(bad)
jle
sbb
xchg
xor
jno
jecxz
dec
add
cs
daa
sbb
jl
cmc
popf
mov
push
or
shl
inc
test
ds
push
outs
or
loopne
push
xchg
mov
and
jl
or
aas
mov
(bad)
jecxz
sahf
mov
mov
ror
sti
imul
jae
push
(bad)
mov
jno
les
pop
push
add
test
addr16
out
lds
xchg
xchg
or
inc
fnstsw
sub
dec
pop
pushf
aas
mov
mov
int3
ins
scas
push
gs
div
je
mov
pop
mov
pop
pop
add
add
jns
pop
push
mov
xchg
bnd
inc
dec
sub
out
sub
push
dec
mov
shl
sub
stc
mov
or
mov
aad
in
dec
push
repz
jecxz
enter
iret
jmp
and
fstp
lea
imul
dec
jl
rcl
cmp
dec
jle
and
adc
mov
pusha
xor
ds
mov
or
mov
call
lock
into
test
add
sub
mov
out
fisttp
in
or
in
adc
mov
jmp
cmc
jns
pop
fisub
pop
xchg
push
(bad)
xor
shrd
or
ret
mov
fidiv
add
movs
cmp
xchg
mov
fisub
push
js
loope
xlat
lahf
data16
push
xor
(bad)
inc
and
sbb
ss
mov
sbb
lea
or
repnz
scas
pop
xchg
das
(bad)
jl
jae
mov
push
cmp
fwait
lock
push
pop
cmp
adc
pop
rcl
mov
fsub
hlt
cld
sahf
push
jmp
xlat
mov
(bad)
ja
div
cmps
daa
mov
pop
mov
cmp
lds
jns
retf
and
enter
loope
sub
retf
pop
lea
xor
jle
pop
ror
mov
xchg
lods
jp
mov
ret
rcr
dec
adc
dec
jecxz
sbb
push
sbb
cli
pushf
lds
ds
lock
cmc
mov
dec
in
(bad)
ror
inc
xor
loopne
stos
(bad)
dec
int
xchg
aaa
xchg
out
fimul
call
cmps
adc
mov
add
or
gs
xor
xchg
scas
sbb
and
aaa
jno
adc
mov
movs
push
sti
push
out
popf
aaa
cmp
mov
outs
clc
pop
sti
pusha
add
cli
and
retf
sub
dec
outs
les
pop
mov
mov
lock
movs
bound
mov
or
xchg
sbb
dec
(bad)
gs
mov
pop
ins
mov
push
inc
sub
(bad)
adc
lock
test
repnz
add
iret
iret
movs
loope
out
mov
ja
mov
or
jno
iret
jmp
call
jmp
xor
dec
mov
ds
rcl
xchg
das
lods
dec
je
int
repnz
inc
push
and
sbb
pop
fcomp
ds
mov
mov
fcmovu
mov
jl
nop
int
cs
inc
sbb
inc
jmp
jmp
or
loope
or
cmp
cmp
enter
ja
or
das
cmp
cmc
pop
add
push
or
ins
ficom
(bad)
cwde
add
push
(bad)
lahf
movs
(bad)
dec
sti
xchg
jg
inc
dec
(bad)
cli
outs
pop
das
test
sbb
adc
mov
adc
xlat
popa
fidivr
bswap
xor
xor
pusha
inc
mov
adc
loop
pop
push
lahf
pusha
lock
leave
ret
test
lahf
lods
fcom
or
shl
inc
xchg
lea
out
jns
out
and
iret
mov
mov
jo
adc
les
scas
and
and
sbb
sbb
lods
and
fst
(bad)
mov
push
xchg
repnz
inc
test
add
dec
sti
data16
mov
(bad)
mov
or
pop
dec
outs
les
lods
xchg
js
push
push
pop
xchg
data16
fcmovne
sub
mov
fwait
mov
adc
jp
pop
xchg
xchg
cmps
inc
sbb
pop
xchg
pop
std
loop
mov
jmp
sbb
test
mov
movs
inc
call
mov
xchg
fcomp
add
fild
jo
xchg
lahf
ja
xor
pop
enter
jb
push
lods
jne
movs
jnp
sub
pusha
jo
cs
xchg
adc
inc
fisttp
test
scas
stos
out
loop
repz
jnp
nop
adc
xor
or
push
push
xchg
sub
dec
test
mov
out
cmp
sub
mov
test
mov
dec
sub
fs
jne
jns
push
inc
lods
jnp
mov
pop
adc
gs
jo
mov
push
jbe
dec
and
mov
jne
add
push
in
(bad)
loopne
push
lds
inc
shl
jno
xchg
sub
mov
inc
sbb
bswap
pop
dec
sti
jl
(bad)
pop
cmp
(bad)
pop
mov
xchg
jecxz
scas
xchg
sbb
jno
cdq
sub
mov
(bad)
push
mov
daa
xor
mov
in
adc
adc
aaa
dec
iret
jecxz
inc
push
mov
push
dec
xchg
fld
mov
lods
xor
sub
push
jge
rol
je
sbb
mov
ja
es
aad
push
sbb
mov
stos
and
nop
out
or
jnp
mov
mov
cmps
mov
std
mov
jo
out
clc
imul
mov
dec
popa
fcmovnu
pop
scas
fdiv
jge
or
call
xlat
cmp
sub
sbb
into
mov
jb
xchg
sbb
push
not
lods
push
inc
in
push
adc
cld
sbb
nop
outs
js
outs
adc
fs
dec
inc
add
pushf
jmp
sbb
xchg
lock
push
lods
(bad)
enter
sub
in
and
cmp
test
mov
jge
cmp
jp
jbe
mov
out
mov
test
push
cmp
cwde
push
adc
test
inc
add
mov
add
cwde
push
loop
adc
arpl
mov
jmp
sahf
jle
push
sbb
pop
cmp
mov
sub
add
cli
jnp
in
outs
xchg
das
sub
loop
lahf
imul
mov
xchg
mov
fstp
mov
xchg
and
pushf
jno
jne
sbb
adc
popf
mov
sub
icebp
pop
mov
ror
lods
(bad)
sub
retf
(bad)
idiv
mov
pop
and
data16
leave
cmps
jg
inc
ins
inc
js
sbb
aaa
push
and
jmp
fistp
xor
pop
test
dec
aaa
lods
repz
pop
in
add
icebp
adc
pusha
sub
push
test
add
jo
inc
and
sbb
lock
jp
dec
push
push
fwait
sbb
idiv
add
test
xor
les
cmp
call
mov
sahf
fild
nop
std
pop
xchg
xchg
cmp
mov
xchg
push
xchg
mov
popf
shl
cmp
inc
jnp
jno
jnp
adc
ret
idiv
pusha
clc
aaa
and
push
icebp
cli
add
push
iret
shl
push
div
les
adc
ds
xchg
rcl
xchg
sub
daa
sub
jg
inc
loope
sbb
les
(bad)
cmp
mov
sub
dec
ds
push
loopne
stos
mov
stc
out
cwde
int3
mov
inc
dec
inc
jae
adc
mov
sub
xchg
outs
xchg
inc
sbb
rcr
mov
repz
push
dec
out
jmp
xchg
and
jb
jno
fmul
push
pusha
out
mov
jb
mov
mov
inc
(bad)
les
sbb
fcom
test
inc
and
add
xchg
aam
fdivr
jo
jmp
mov
mov
outs
gs
das
enter
or
outs
jo
sahf
dec
jnp
lods
loopne
loope
in
mov
shl
in
inc
popf
mov
aaa
mov
adc
aam
and
mov
rcl
xchg
jb
imul
fidivr
wrmsr
jmp
or
mov
cmp
pop
rcr
hlt
aad
mov
mov
pop
test
mov
icebp
mov
into
movs
loope
loopne
shl
mov
aaa
add
scas
mov
push
xor
out
into
xchg
adc
jae
mov
mov
xchg
add
sbb
pop
or
(bad)
pop
jo
or
test
scas
pop
push
test
nop
xor
xchg
pushf
push
sbb
pop
aad
mov
cwde
neg
into
add
push
xchg
xchg
jbe
nop
jo
adc
dec
scas
loop
xor
jne
sbb
sbb
xchg
sbb
xchg
daa
sub
push
sub
pop
dec
shr
xchg
leave
adc
xchg
gs
nop
fidivr
fisttp
mov
push
scas
int3
(bad)
xchg
push
sub
aaa
test
aam
jge
sub
movs
(bad)
repnz
adc
xchg
daa
xlat
leave
mov
xor
enter
stos
fld
mov
jmp
in
and
scas
jo
mov
jecxz
xchg
jg
cmps
jnp
jno
xor
mov
or
sti
test
das
mov
mov
jmp
cmp
cmp
std
fdivr
mov
out
in
push
cmp
inc
repnz
retf
and
in
push
add
xchg
stos
adc
cdq
pop
xchg
or
pop
cmp
or
std
int
pop
(bad)
stos
jne
cmp
push
sub
xchg
push
fnsave
xlat
sbb
out
aaa
aas
mov
mov
cmp
bswap
xchg
xor
mov
into
add
div
inc
cwde
jle
movs
mov
std
xchg
(bad)
mov
repnz
dec
icebp
movs
test
adc
xchg
mov
and
dec
sub
cli
das
stc
fcomp
faddp
cwde
push
or
movs
(bad)
jecxz
dec
dec
inc
psllw
(bad)
jo
add
js
int
sub
push
ins
add
sbb
mov
dec
mov
cmp
pop
mov
dec
xor
ins
push
add
adc
pop
fidivr
loope
jecxz
mov
test
fdivr
in
sub
inc
add
mov
ror
xor
(bad)
adc
mov
push
xchg
jmp
sub
sub
test
dec
inc
jl
pop
pop
and
cmc
shl
cdq
pop
cmp
jae
add
inc
xchg
sbb
push
and
rol
pop
xchg
cmp
test
loop
retf
cdq
mov
mul
xchg
mov
(bad)
mov
je
sub
ss
push
ins
dec
jbe
xchg
jo
dec
pop
out
les
iret
outs
popa
mov
clc
lods
cmp
mov
mov
sbb
adc
jns
add
std
movs
mov
push
(bad)
push
sub
cmps
test
sbb
in
inc
icebp
add
cmp
xchg
inc
xchg
jecxz
jno
int3
mov
xor
clc
out
cmp
jbe
ja
sbb
movs
dec
outs
jl
and
pop
mov
fwait
clc
scas
(bad)
cmp
mov
loope
popf
hlt
cli
aaa
sub
mov
enter
inc
mov
dec
dec
dec
or
jle
iret
dec
out
jle
imul
test
mov
adc
popa
nop
cmp
add
std
jbe
in
sti
sbb
nop
mov
push
jb
stc
mov
(bad)
(bad)
jmp
xor
dec
popf
pop
jmp
push
sbb
xor
cld
mov
or
sub
push
dec
lea
pop
test
jb
fs
iret
and
jl
xor
fdiv
xchg
inc
push
loope
jecxz
sub
jo
shl
dec
xchg
add
mov
cmps
ss
cmp
test
mov
lock
add
push
cwde
jnp
cmp
jns
add
adc
pop
jne
out
pfacc
aad
and
in
test
xor
jnp
sub
hlt
mov
(bad)
out
fs
adc
fnsave
xchg
or
xlat
int
mov
int3
xchg
sar
ret
shl
mov
xchg
jmp
int3
in
fsubp
add
cmp
xchg
adc
cmp
jg
pushf
scas
inc
jg
xor
in
add
nop
inc
add
mov
mov
pop
sub
cmp
in
jno
mov
cmp
loope
mov
daa
sub
cdq
sub
out
cmp
jb
out
pop
jb
pop
xchg
and
xchg
outs
repz
jnp
mov
or
sbb
and
scas
not
add
out
imul
cmp
dec
inc
sar
or
pop
adc
add
pop
fst
xchg
inc
les
add
stos
push
xchg
fild
jae
test
scas
es
push
aam
popa
shl
jo
inc
mov
fisub
cmp
shl
out
cld
(bad)
(bad)
imul
xchg
pop
test
jg
imul
test
dec
call
shr
std
sar
into
mov
test
fcomp
jb
xchg
dec
sbb
test
jp
mov
sar
and
or
jecxz
clc
dec
jecxz
pop
xor
stos
jno
cmp
add
jp
(bad)
pcmpgtb
xchg
mov
into
adc
ins
inc
jecxz
or
popf
or
pop
xchg
ins
into
rol
jnp
imul
push
ret
mov
dec
mov
lock
popa
xor
cmp
jbe
ds
pop
jle
adc
mov
int
loopne
mov
jp
out
std
adc
or
xor
dec
cmps
imul
mov
jge
xor
in
ret
inc
aaa
xchg
adc
cmp
sbb
stc
inc
movs
jb
jp
pop
push
cmp
shl
je
arpl
rol
cs
lods
mov
pushf
or
cmp
or
loopne
sbb
mov
stos
test
stos
jns
enter
inc
xlat
repnz
add
mov
mov
pop
or
xor
hlt
into
adc
bound
jo
pop
xor
inc
inc
jl
jne
sti
mov
pop
fwait
and
and
nop
dec
out
jae
inc
xor
push
dec
cmps
push
inc
fwait
mov
jnp
xchg
outs
xchg
jmp
mov
ror
and
sahf
jp
sar
pusha
popf
add
sti
xor
inc
and
jge
out
and
dec
cld
ror
jle
jbe
imul
fadd
bound
ja
ror
daa
cmp
mov
dec
pop
dec
mov
les
imul
pusha
inc
mov
ror
leave
mov
push
mov
cdq
std
jmp
lods
jo
leave
(bad)
leave
mov
xor
dec
push
cmp
pop
mov
mov
(bad)
dec
push
les
jnp
mov
sub
mov
mov
aas
mov
jo
les
or
push
leave
lock
cmp
jnp
popa
sbb
sbb
sub
xor
pushf
mov
shl
push
xchg
pop
test
inc
int
shr
loope
and
mov
aam
mov
sbb
imul
mov
jne
loop
pop
shl
adc
xor
and
arpl
jne
shr
pop
dec
or
xchg
mov
cmp
xchg
pop
mov
addr16
lods
mov
mov
out
push
mov
(bad)
aas
fcmovnu
adc
stc
pop
adc
movs
ins
clc
mov
std
ins
es
arpl
not
ror
inc
push
fld
jmp
xchg
xchg
and
sar
outs
or
es
xchg
lods
addr16
mov
out
mov
and
mov
(bad)
retf
loop
sub
fiadd
in
rcr
xchg
cli
inc
dec
push
iret
mov
aad
sbb
xor
iret
xor
imul
xor
sar
mov
cmc
test
pop
mov
cmp
and
mov
aas
cmp
dec
add
mov
jle
daa
push
lods
ror
mov
addr16
xchg
int3
dec
into
into
(bad)
aam
mov
cli
icebp
cwde
jecxz
test
dec
shr
mov
cld
sbb
stos
fwait
cmp
fwait
out
push
sub
idiv
xchg
sub
loope
gs
iret
dec
and
iret
inc
inc
push
daa
adc
and
xchg
ds
xchg
dec
xchg
stos
ja
mov
jmp
jo
int
jl
rol
or
repz
dec
sbb
fucomip
push
push
fldl2e
repnz
mov
sub
sbb
xor
mov
xor
mov
or
and
push
mov
fistp
jbe
jp
inc
or
movs
pop
xchg
and
sub
mov
adc
shl
push
push
mov
sar
arpl
xor
and
repz
jb
sbb
ror
enter
test
xchg
sbb
dec
jns
sub
je
test
ror
xor
and
mov
int
adc
inc
sub
pop
pop
es
inc
repz
leave
adc
stos
mov
lock
ret
push
mov
(bad)
scas
jne
push
xchg
add
ja
retf
icebp
out
rcl
mov
jae
enter
enter
leave
sbb
xchg
adc
push
icebp
push
shl
mov
call
jg
xor
dec
call
push
mov
cmps
cmovnp
test
jle
(bad)
cmp
aas
out
mov
js
test
shl
popf
fld
pop
dec
sub
cmp
iret
mov
ja
xchg
movs
int3
sbb
mov
jmp
call
rcr
and
xchg
sub
iret
adc
outs
fst
mov
inc
lock
push
in
das
sahf
inc
add
das
pop
mov
js
jne
pushf
sbb
dec
into
jl
movs
icebp
sub
push
push
test
fwait
cmc
and
sub
push
adc
enter
cwde
lock
std
dec
lods
xor
push
pop
pop
xchg
dec
cli
outs
js
dec
imul
out
xchg
leave
dec
cld
mov
dec
sbb
jnp
xchg
cs
ja
jl
(bad)
stos
jns
jle
adc
jge
mov
mov
push
sbb
imul
pop
dec
call
leave
scas
ins
arpl
mov
es
(bad)
ret
pop
ss
push
inc
retf
loop
hlt
pop
lock
cmp
shl
jl
push
cmp
mov
mov
retf
push
mov
pop
repz
ret
and
mov
call
fwait
jmp
sub
mov
xor
or
fs
push
push
stos
aad
scas
push
das
add
cdq
xor
gs
outs
pop
adc
xor
mov
mov
adc
mov
arpl
jne
push
cmc
sbb
jno
test
rcl
push
cmps
test
stos
jno
push
xchg
aam
test
out
inc
sti
sub
mov
mov
cmc
fidiv
pushf
xchg
sbb
stc
f2xm1
ins
je
jbe
cmp
dec
mov
jg
test
add
or
mov
or
sbb
push
leave
xor
mov
xchg
scas
dec
or
adc
ds
ds
fnstsw
cmc
push
jle
mov
les
add
fwait
jg
and
and
clc
repz
retf
pop
xlat
dec
inc
aaa
lods
fstp
adc
das
enter
add
data16
test
adc
push
lods
fiadd
movaps
loopne
lea
pop
xchg
cs
xchg
int
ds
adc
int3
xor
cli
xor
in
jne
out
cs
push
aad
in
push
jb
sub
aad
adc
inc
inc
jge
and
call
push
cld
xchg
addr16
xor
and
ror
adc
sbb
(bad)
sbb
adc
jae
dec
mov
out
dec
aad
sbb
xor
pushf
adc
movs
or
mov
nop
jle
jle
stos
loop
xchg
and
add
push
sbb
cmp
xchg
rcr
pop
sahf
clc
cmps
and
arpl
dec
inc
aas
add
xchg
pop
sahf
mov
imul
add
xor
popf
mov
shl
enter
scas
icebp
xor
out
and
xor
mov
lock
dec
fisub
xor
pop
pop
xor
dec
ss
or
mov
scas
cld
mov
and
fadd
jmp
lods
pop
jg
lahf
cmp
cmp
aam
adc
add
push
and
or
jle
movs
or
rcr
and
cwde
cmp
sahf
mov
mov
add
(bad)
sub
ins
inc
cwde
and
mov
push
mov
jb
mov
add
das
inc
fldcw
ins
jge
xchg
adc
ins
call
push
out
mov
xor
sub
cmp
iret
inc
or
dec
push
aad
addr16
mov
test
sub
jne
mov
mov
adc
or
lock
neg
adc
mov
in
shr
jno
sbb
xchg
jne
ja
xor
mov
repnz
ins
add
gs
inc
mov
push
mov
add
(bad)
mov
(bad)
fnstenv
ficom
or
aas
dec
lods
loopne
movs
sbb
push
dec
call
loope
mov
std
sbb
pushf
call
jge
shl
movs
aaa
scas
movs
mov
sub
ds
sbb
sub
outs
sbb
(bad)
jge
scas
out
add
cmp
mov
ret
add
mov
arpl
push
pop
sbb
leave
aas
stc
cli
pop
not
cmps
gs
in
sbb
mov
shr
xchg
fyl2xp1
popa
test
push
stos
push
sar
icebp
movs
sub
jno
mov
mov
xor
clc
push
xchg
push
push
je
ds
bound
cdq
repz
in
jns
mov
pop
rcr
sub
xchg
bound
mov
jo
shr
cli
test
jmp
inc
fbld
shl
add
mov
add
add
popf
jle
rcr
das
or
jbe
push
add
test
jecxz
ror
mov
xchg
adc
mov
ins
or
mov
xchg
cmp
outs
mov
inc
imul
sub
retf
js
stos
outs
inc
retf
stos
pop
sub
mov
adc
jnp
or
inc
add
xor
mov
test
mov
and
hlt
jmp
popf
fadd
outs
mov
jg
push
sub
sbb
stos
fld
jne
mov
out
inc
ins
je
fadd
js
jl
fs
pop
pop
inc
sub
hlt
sub
in
out
out
sub
les
and
aam
out
pop
xchg
pushf
mov
test
enter
jg
and
pusha
nop
arpl
add
mov
xchg
mov
xor
mov
jmp
sub
and
ins
arpl
mov
fbld
shl
xchg
inc
xor
xor
inc
shl
jle
pop
mov
sub
mov
jmp
or
inc
(bad)
out
xor
adc
ins
push
icebp
fwait
in
jo
mov
ja
pop
ja
stc
push
test
pushf
(bad)
lock
icebp
sub
xor
xchg
jne
mov
xor
or
and
aam
and
add
dec
shl
and
cmps
mov
mov
je
ja
xor
hlt
and
jmp
adc
sub
add
(bad)
into
mov
lahf
mov
jl
jge
in
sbb
push
je
jbe
sub
mov
test
cmps
mov
inc
pop
add
das
ins
test
lods
fldcw
hlt
sar
movs
inc
xchg
adc
(bad)
pop
aad
mov
sub
dec
jmp
or
or
pop
(bad)
rcr
dec
movs
sbb
aam
mov
retf
xchg
jb
repz
in
in
repz
out
cmps
fucomp
aam
mov
into
pop
pusha
sbb
mov
inc
push
out
inc
ss
mov
inc
aas
lea
xor
sub
xchg
adc
jmp
(bad)
and
lods
lods
(bad)
popa
push
push
aaa
push
int
retf
outs
inc
icebp
or
sbb
sar
push
test
std
jmp
jge
ds
xchg
cmps
mov
jne
sub
jb
mov
cdq
fbld
sub
cmps
cwde
or
out
adc
imul
and
cld
bound
jne
add
push
push
jns
mov
dec
arpl
out
mov
ret
or
mov
dec
push
lods
sahf
popa
jg
aaa
nop
dec
push
sub
add
test
push
xchg
xor
popa
dec
xor
sub
into
pop
nop
out
out
mov
sub
ret
xor
int3
shr
repz
and
adc
stos
repz
mov
cmc
pop
sbb
jle
mov
xchg
sbb
jns
jne
xchg
mov
cmps
dec
mov
sub
imul
push
inc
test
mov
adc
xchg
xor
(bad)
imul
rcl
mov
adc
add
test
xor
push
mov
push
or
pop
and
pop
gs
ja
adc
or
mov
dec
push
push
out
push
inc
aam
and
stos
jnp
cmp
mov
(bad)
in
ret
je
cmp
dec
ja
lods
dec
mov
das
mov
sub
in
gs
rcl
(bad)
and
ds
add
pop
jns
ror
loopne
mov
dec
add
pop
xor
clc
mov
fiadd
xchg
or
je
loop
or
jns
pop
sti
out
in
dec
xlat
dec
adc
xor
cmp
xchg
mov
ss
sub
nop
fwait
add
mov
push
mov
popf
and
test
inc
push
dec
and
(bad)
xchg
xlat
sub
inc
pop
in
pop
shl
jecxz
into
mov
push
add
cmps
(bad)
mov
fwait
mov
fwait
inc
lea
jnp
mov
push
mov
shr
pop
or
mov
imul
pop
clc
push
xchg
stc
pop
icebp
scas
xchg
pushf
jne
jae
dec
mov
das
dec
and
(bad)
nop
dec
(bad)
jae
in
(bad)
faddp
push
inc
imul
ins
lods
mov
out
xchg
xor
mov
jl
or
(bad)
loope
or
sar
or
sbb
push
xchg
add
push
dec
jbe
iret
and
(bad)
xor
movs
cmps
sbb
mov
int3
and
cwde
shr
mov
push
pop
add
stos
int
xchg
iret
jge
ja
add
in
scas
(bad)
dec
sahf
adc
inc
jmp
test
xor
mov
call
mov
adc
aam
es
fadd
test
adc
aad
adc
ret
xchg
or
repnz
sub
sets
ret
jmp
push
cli
cwde
rol
jmp
(bad)
outs
add
or
mov
mov
mov
adc
jnp
inc
mov
pusha
dec
and
cmp
nop
cmp
sbb
ja
xor
pop
xor
lods
repz
inc
xor
imul
sub
rcl
hlt
adc
inc
sbb
cmps
in
and
fld
popf
add
jnp
mov
push
xor
movs
pop
test
dec
push
dec
add
mov
fisttp
and
daa
dec
xor
movs
mov
arpl
(bad)
stos
in
rcl
test
stos
mov
sahf
loop
sub
sub
xchg
xchg
dec
jmp
loopne
pusha
dec
retf
cmp
jmp
or
adc
dec
ret
cmc
or
out
or
adc
jns
mov
lock
and
add
pushf
push
fidiv
push
ins
repz
or
adc
sub
sbb
ret
enter
retf
jge
outs
out
sbb
dec
movs
jl
(bad)
jmp
aam
stos
jg
int3
call
in
movs
aaa
cmps
pop
cmp
in
inc
and
add
mov
push
(bad)
mov
daa
cli
test
retf
dec
das
test
daa
xchg
pop
mov
aaa
fbld
enter
ret
int
dec
leave
rol
aas
sub
cmp
push
or
dec
xor
iret
aam
mov
test
jno
cwde
das
imul
mov
inc
inc
stc
or
pop
ss
hlt
nop
push
popf
inc
pushf
mov
xchg
out
xor
fdiv
pushf
pushf
daa
cmp
(bad)
(bad)
retf
mov
es
aad
pop
aad
dec
popa
dec
or
call
jno
add
ret
imul
or
inc
push
push
(bad)
clc
je
rcr
movs
adc
add
lea
add
(bad)
cdq
jle
cmp
into
or
(bad)
loope
push
je
movs
fs
into
push
lahf
jl
scas
or
cmps
jg
lock
jl
pushf
outs
(bad)
sbb
in
test
in
xor
sbb
sub
dec
loope
call
or
xor
jb
dec
push
or
fadd
xchg
sub
adc
lock
jecxz
jo
cmp
inc
mov
daa
xor
xor
xor
dec
xchg
repz
ficomp
xor
(bad)
mov
push
sub
gs
and
xchg
stos
sub
jl
mov
mov
std
xor
addr16
ret
call
dec
push
fcomp
xchg
aaa
inc
es
jmp
sar
adc
cmp
xchg
sub
ja
mov
js
mov
or
or
push
out
cli
sub
dec
js
push
inc
ins
or
je
inc
xor
fdiv
das
ss
cdq
xchg
fs
mov
stos
(bad)
pop
fs
mov
xchg
dec
es
xchg
test
dec
cmps
outs
loope
jge
js
pop
adc
ins
fmul
add
and
xlat
push
xchg
sub
cmp
cdq
pop
inc
xchg
mov
fdiv
hlt
cmp
push
push
mov
xchg
lock
mov
xchg
imul
xor
je
sbb
sbb
sbb
cmp
mov
jg
jge
out
push
lahf
mov
sbb
jmp
sbb
outs
push
in
(bad)
jecxz
push
or
pop
mov
mov
test
inc
sbb
jecxz
daa
test
repz
cmp
ins
xchg
retf
das
addr16
dec
xor
cld
jle
adc
inc
inc
mov
retf
cwde
aam
in
clc
mov
fcom
aam
sbb
pop
pop
cmp
addr16
add
mov
fcom
in
or
jp
(bad)
das
mov
jge
test
mov
or
sti
call
jge
push
imul
add
mov
xor
lds
repz
sahf
mov
xor
and
icebp
fistp
inc
push
and
ds
and
xor
loop
pop
adc
(bad)
pop
sub
xor
(bad)
cmc
js
push
push
test
test
sbb
movs
mov
xchg
xchg
shr
xlat
ss
sar
push
repz
in
jecxz
(bad)
repz
jae
xlat
sti
fisttp
xchg
bound
push
jbe
push
in
outs
test
js
std
jnp
adc
aas
icebp
add
mov
imul
and
dec
mov
fdivr
mov
jnp
mov
icebp
and
in
test
sub
jmp
(bad)
(bad)
imul
imul
std
push
ret
loope
mov
cld
test
leave
add
out
dec
(bad)
ds
idiv
inc
xor
je
sub
popf
jle
popaw
ja
jmp
and
add
aaa
idiv
sbb
nop
xlat
pop
ret
cdq
mov
retf
cmp
hlt
adc
ja
inc
push
in
imul
imul
not
out
inc
inc
mov
retf
push
mov
jge
xor
push
cmp
sti
je
add
das
dec
(bad)
leave
cs
dec
xor
test
loope
fwait
jmp
mov
jbe
pop
pop
(bad)
gs
(bad)
data16
or
mov
imul
pop
fsin
jmp
movs
cmp
icebp
mov
int
scas
jb
icebp
dec
stos
xor
div
push
xchg
xchg
or
jo
xchg
or
lods
pop
std
movs
pop
mov
push
jmp
popf
mov
push
hlt
push
fwait
mov
loope
das
mov
pop
inc
and
cmp
xchg
aaa
and
pop
jnp
and
mov
das
inc
pop
pop
push
or
push
loope
arpl
fistp
push
scas
out
or
ror
jb
and
pop
add
pusha
and
(bad)
fsubr
fmul
iret
cmp
frstor
lea
outs
mov
mov
mov
shr
sbb
pop
nop
sbb
push
mov
cld
xor
ffree
adc
lahf
mov
outs
jo
stos
push
xchg
nop
sbb
ja
add
inc
call
lahf
repz
icebp
pusha
cdq
(bad)
imul
add
cwde
jl
dec
ficom
jo
shr
fist
mov
cmp
sub
xchg
xlat
jge
mov
push
lahf
shl
sar
sbb
dec
mov
aas
outs
movs
dec
icebp
mov
lods
int3
jb
js
or
pushf
ret
out
or
movs
inc
xchg
xchg
bound
ja
test
mov
pop
stc
loopne
dec
inc
xchg
inc
or
sub
jbe
rol
dec
dec
jle
popf
cmps
jp
test
and
ja
cmps
cmp
leave
call
stos
sub
add
and
dec
test
dec
es
pop
mov
out
mov
int
std
addr16
lds
push
jp
jl
pop
xchg
fs
mov
inc
dec
push
sub
les
mov
in
rol
jo
add
mov
out
ins
cld
mov
cmps
in
cmp
(bad)
in
popa
sub
retf
pop
or
cmp
aam
jmp
nop
jns
cmps
sub
mov
xchg
repnz
gs
dec
lock
mov
gs
js
ins
xchg
out
or
pmulhw
xchg
ret
xlat
xchg
sub
pop
(bad)
xlat
dec
xchg
push
mov
stc
call
call
arpl
mov
and
mov
and
pop
in
xchg
sbb
repz
cmp
ds
push
aam
dec
mov
or
mov
fld
(bad)
and
add
or
mov
mov
jmp
pushf
or
jp
add
sub
aam
cld
(bad)
lock
enter
xchg
sbb
mov
test
dec
(bad)
fmul
sar
sub
ja
inc
mov
mov
jae
jmp
jl
nop
ss
or
outs
pop
xchg
mov
or
sar
pop
idiv
dec
test
stos
xchg
adc
sahf
add
(bad)
call
add
sub
jp
mov
imul
stc
add
push
out
mov
mov
push
aas
push
sahf
mov
out
add
fmul
mov
pusha
mov
rol
test
cdq
leave
daa
push
aas
int
sbb
jbe
shl
ins
xchg
jmp
xor
mov
movs
cmp
test
sub
sbb
cmc
sar
inc
mov
cmp
adc
jo
test
mov
cmp
rol
push
jo
push
inc
jno
dec
inc
mov
jae
add
add
daa
jno
aam
fcmovbe
mov
cli
mov
jae
fcmovu
dec
adc
arpl
sub
imul
aaa
lds
mov
adc
dec
adc
or
sub
les
push
mov
fbstp
or
out
sahf
mov
ficom
mov
(bad)
or
xor
int3
pop
sahf
ret
mov
hlt
leave
(bad)
(bad)
push
push
ins
adc
jmp
les
mov
fsub
in
test
add
mov
mov
add
pop
les
fldcw
cmp
mov
sbb
pop
cmp
popa
and
cmps
push
iret
jnp
loopne
loop
pop
dec
xor
add
sbb
inc
xchg
and
inc
test
add
repnz
mov
in
add
ins
pop
pop
mov
aas
pop
adc
stos
fsubr
pop
xor
sbb
fcomp
or
jno
or
gs
(bad)
push
vunpcklps
sbb
cmp
xchg
xchg
pop
push
test
inc
scas
jg
loope
add
add
add
icebp
rcr
mov
push
pop
lss
sub
ss
push
mov
or
pop
aas
and
and
jns
or
pop
dec
jo
inc
jmp
in
or
mov
sub
rol
jl
xchg
inc
scas
sbb
sub
xchg
gs
jo
mov
iret
nop
into
retf
or
or
jge
jns
cld
test
inc
icebp
popa
icebp
inc
jecxz
xchg
fxam
add
mov
cwde
and
call
icebp
and
inc
jle
retf
push
pop
call
xchg
pop
mov
imul
aaa
clc
jb
inc
jg
dec
add
lods
inc
fld
fstp
jmp
bswap
and
rcr
ret
cmp
in
popa
daa
pushf
cmp
daa
xor
cmp
mov
enter
mov
mov
aas
add
fcom
inc
dec
pop
lds
in
pop
jne
dec
repz
popf
fldcw
sbb
inc
sub
ja
outs
shr
cld
std
pop
mov
mov
arpl
je
pop
mov
xor
cmp
fisub
and
inc
jle
fcom
inc
and
sub
jl
sub
cmps
sbb
xor
fisubr
add
mov
rcl
out
sti
iret
dec
int
pop
div
jne
cli
pextrw
(bad)
out
xchg
mov
sahf
adc
adc
jp
lods
add
adc
mov
js
and
cmp
out
addr16
adc
mov
and
sbb
test
sar
movs
shr
adc
mov
or
jae
xchg
fadd
jmp
inc
sbb
ror
mov
loope
sub
je
mov
and
dec
mov
cmp
aas
loope
bound
aaa
aas
xor
iret
xchg
retf
push
stos
add
pop
clc
push
leave
add
push
or
fucomi
jne
sub
fadd
jb
mov
(bad)
retf
push
adc
shl
xchg
push
retf
mov
push
cmp
pop
rol
push
dec
loope
mov
frstor
movs
pop
mov
popf
sbb
nop
pusha
or
mov
nop
push
xor
push
push
xchg
pop
bound
(bad)
out
xor
xchg
jno
daa
dec
nop
nop
mov
mov
ficomp
dec
test
outs
loope
retf
loope
js
dec
jmp
sahf
hlt
cmp
mov
outs
popf
idiv
out
xchg
(bad)
outs
mov
jle
push
shr
mov
in
imul
and
ja
sbb
adc
jo
xchg
or
int3
mov
xchg
imul
movs
or
retf
mov
das
and
call
stos
push
retw
ja
rcl
outs
neg
out
jne
cmps
sub
sub
dec
test
cmps
xor
xchg
icebp
cmp
shl
rcl
mov
add
stos
sti
inc
aas
cvtps2pd
or
jge
stos
lods
out
test
cmp
cmps
in
(bad)
mov
mov
jo
sub
(bad)
(bad)
out
mov
jl
fs
daa
and
aas
mov
add
jmp
and
stos
jne
(bad)
dec
xor
(bad)
mov
push
mul
aaa
mov
mov
fs
lea
imul
push
jl
(bad)
sub
popa
xchg
adc
mov
xchg
pusha
in
cld
or
arpl
dec
adc
stos
jl
stos
in
push
movs
xchg
mov
fdivr
in
dec
mov
xchg
push
dec
adc
xchg
jb
sub
popa
and
mov
shr
push
adc
aam
ficom
inc
in
shl
inc
push
icebp
imul
dec
mov
push
mov
inc
ins
outs
bound
pop
sbb
push
movs
adc
int3
out
call
cwde
push
dec
inc
rcl
and
inc
or
imul
retf
dec
push
fcomip
sbb
out
push
das
loopne
mov
(bad)
xchg
lea
add
xor
inc
jg
jp
ins
xlat
pop
leave
in
rcl
or
push
ins
movs
push
shl
sub
ficomp
mov
ficomp
je
xor
and
imul
push
shr
adc
xchg
iret
cs
retf
dec
sub
pop
cmp
adc
and
sbb
jnp
shr
outs
scas
mov
or
jae
push
test
or
movs
cmp
adc
ret
pop
(bad)
pop
data16
call
shr
(bad)
lods
arpl
aaa
add
mov
in
mov
popf
sbb
cmp
or
inc
push
add
mov
(bad)
mov
cmps
mov
mov
add
(bad)
sbb
mov
cmc
scas
adc
scas
ins
cmp
int
or
adc
jbe
int
cs
mov
sbb
imul
(bad)
imul
cdq
dec
add
data16
xchg
lods
scas
jae
retf
pop
mov
aam
loope
pushf
dec
aaa
dec
stos
lods
mov
in
adc
scas
test
repz
mov
retf
xor
leave
repz
jmp
out
test
or
aam
jmp
test
xchg
jmp
mov
jae
xchg
jge
ins
xor
and
sub
xor
inc
adc
cs
mov
imul
hlt
inc
xor
add
jne
ss
bound
fld
addr16
cmps
scas
jecxz
es
(bad)
fist
push
sbb
test
inc
js
imul
push
fwait
jge
cli
retf
aaa
cmp
inc
(bad)
in
fs
mov
fisttp
add
ja
out
hlt
mov
call
mov
sbb
pop
jns
xchg
loopne
jmp
retf
and
js
jnp
pop
push
aaa
jne
dec
dec
xchg
(bad)
retf
and
fistp
jbe
scas
adc
retf
sbb
test
pop
xchg
and
inc
cld
das
add
jp
int3
icebp
adc
mov
jb
sub
cmp
mov
xchg
arpl
sti
jns
jno
xor
xchg
inc
jo
push
in
mov
pushaw
inc
mov
icebp
int3
dec
cmp
ror
scas
shr
ret
or
dec
jne
or
ror
out
mov
inc
mov
pop
xlat
and
imul
sub
ds
call
(bad)
lock
mov
jbe
inc
inc
push
push
sub
or
jl
xchg
ss
pop
fwait
cmps
fwait
mov
mov
lock
sub
xchg
daa
test
ficomp
loopne
sub
jne
add
xor
sub
fsubr
addr16
jbe
add
push
shl
mov
inc
cmps
push
mov
push
cli
mov
add
je
lahf
or
ins
lds
fsubr
and
ficomp
jl
cmp
jns
cmps
movs
sti
sbb
call
jns
or
ds
fwait
test
bound
push
jle
enter
rol
(bad)
or
pop
pop
xchg
push
(bad)
mov
(bad)
retf
push
dec
mov
fild
jl
mov
mov
xchg
es
int
(bad)
sbb
retf
dec
fadd
enter
ss
mov
xor
cs
mov
jo
ror
cmp
shr
idiv
jmp
sub
stos
repnz
jp
jno
cmp
cmp
sub
dec
pop
call
cli
test
(bad)
jl
inc
jmp
or
dec
(bad)
sbb
sub
retf
pop
jae
shr
xchg
movs
(bad)
mov
adc
lahf
rcr
cmp
push
add
adc
pop
inc
sub
ret
xchg
sti
adc
mov
repnz
mov
das
movs
or
retf
ja
sbb
inc
sar
mov
mov
jg
xchg
add
adc
xor
cld
(bad)
cmp
loop
dec
lock
push
movs
sub
sbb
jp
nop
or
adc
push
in
mov
movs
mov
in
xchg
fwait
sahf
jmp
outs
push
fdivr
(bad)
mov
stos
lods
mov
aad
lahf
sbb
xchg
mov
and
movs
mov
mov
addr16
mov
loope
jecxz
dec
loop
movs
pop
pop
aad
jecxz
xchg
iret
push
pop
mov
pop
mov
xchg
cmp
aam
mov
movs
push
inc
hlt
sbb
sub
sbb
enter
arpl
lock
dec
getsec
mov
stc
shr
jl
jge
push
or
imul
lea
scas
or
adc
mov
mov
xchg
jle
dec
imul
inc
dec
sbb
nop
inc
add
mov
sub
push
aam
(bad)
aaa
fcmovne
outs
leave
and
jnp
test
imul
jae
adc
das
in
push
dec
add
mov
aad
xor
aam
mov
push
movs
inc
rcr
xor
cmps
fldl2t
inc
pop
sar
jecxz
test
push
fnsave
scas
icebp
je
add
retf
pop
jecxz
fimul
push
xor
jmp
jbe
jg
add
sub
push
sub
call
jbe
scas
test
push
xor
loopne
ret
aaa
sbb
cld
pop
in
fsubr
adc
xchg
or
xchg
fdivr
ror
test
push
or
pop
scas
test
mov
ins
mov
sub
mov
push
mov
jg
(bad)
xchg
test
ror
pop
mov
out
cmp
mov
in
push
(bad)
or
pusha
mov
mov
jb
or
into
cmp
pop
(bad)
push
and
aad
push
fs
push
fstp
cdq
pop
stc
mov
or
pop
xor
mov
cmc
dec
outs
clc
pop
div
push
sbb
sub
sbb
dec
jns
pop
or
out
dec
sub
hlt
push
fild
inc
dec
nop
push
test
enter
push
test
or
sub
adc
mov
dec
inc
dec
(bad)
and
scas
cwde
pop
out
jo
std
xor
(bad)
fsubrp
std
xchg
ret
xor
push
sub
sbb
mov
sub
rol
inc
sbb
mov
(bad)
dec
inc
loop
mov
popa
mov
xor
mov
mov
sub
in
lea
and
clc
cwde
dec
or
shl
rol
pop
cmp
hlt
sbb
test
(bad)
ret
out
out
push
adc
xchg
pop
mov
aam
arpl
adc
je
or
jecxz
push
xor
mov
pop
aas
jnp
mov
repnz
jecxz
and
fisubr
sub
and
aas
sub
shr
sahf
cmp
cli
sti
fs
xor
sub
sbb
mov
or
add
lock
ret
xchg
jae
(bad)
pop
loopne
arpl
pop
sar
scas
and
lea
cwde
add
jge
popw
mov
and
mov
shr
cmp
and
push
cmp
and
mov
mov
nop
movs
or
ins
sub
push
out
call
add
jns
pop
rcl
sbb
call
out
mov
test
mov
mov
xor
imul
add
xchg
out
xcrypt-ctr
cmps
sbb
pop
xor
mov
sub
cmp
mov
movs
sar
xor
xor
mov
push
shl
cs
retf
dec
stc
pop
pop
jo
lea
int3
cs
fld
xor
sub
cmp
or
push
repnz
pop
and
xchg
push
aam
sti
mov
inc
les
dec
loop
rsm
mov
push
inc
in
inc
mov
fmulp
arpl
mov
or
stos
dec
xor
sub
and
jo
mov
jmp
(bad)
data16
test
mov
pop
lock
es
call
mov
pushf
mov
rol
repnz
xchg
xor
jp
inc
push
inc
push
enter
(bad)
fcom
lods
out
(bad)
or
mov
mov
mov
lock
sbb
pop
loopne
ss
cs
(bad)
lock
jmpw
adc
ret
aas
pop
xchg
sub
pextrw
pop
stos
jb
add
sub
fsubrp
(bad)
cmp
aaa
cmp
xor
or
jp
out
jnp
ret
sar
mov
pop
test
sbb
fwait
inc
shr
mov
xchg
rcr
adc
(bad)
rcr
adc
nop
and
aaa
and
inc
dec
inc
int
in
ins
xchg
jp
mov
or
out
push
movs
add
cmps
mul
sbb
fxch
loopne
inc
ret
clc
sub
das
xor
retf
inc
push
lahf
fwait
data16
mov
mov
daa
fimul
mov
sbb
call
or
mov
jbe
xchg
dec
div
ror
and
xchg
xor
and
dec
out
cmp
test
test
lahf
arpl
cdq
pop
mov
jno
sub
scas
mov
sbb
xchg
jp
clc
adc
mov
adc
sbb
sbb
fcomp
ret
repz
pop
add
das
js
stos
jo
loopne
scas
sbb
push
jmp
adc
cdq
push
int
scas
fld
cmp
or
mov
retf
push
sub
xchg
ins
cmp
pop
mov
xchg
mov
pusha
repnz
lahf
sar
ja
fsubr
push
(bad)
fnstcw
and
fucomp
adc
mov
sti
xchg
into
dec
ins
rcl
cmp
sub
sbb
aam
cld
(bad)
cmps
loopne
sahf
fldenv
mov
mov
std
jmp
ins
jnp
outs
(bad)
mov
or
and
lahf
mov
les
rcl
pop
or
ins
cmp
(bad)
jnp
push
mov
sub
je
jo
cld
and
shl
dec
mov
pusha
fcmovnbe
sub
repz
push
mov
arpl
bound
lahf
mov
adc
shl
sub
and
jge
add
xor
push
call
fbstp
and
cld
dec
imul
mov
sbb
add
lods
dec
sbb
or
xchg
hlt
cld
fistp
aaa
(bad)
loopne
mov
dec
mov
(bad)
jge
adc
mov
xchg
or
mov
xchg
mov
sub
inc
pushf
add
sub
movs
pop
jnp
push
cli
popf
xor
xchg
sbb
mov
cmps
(bad)
cmp
xor
retf
mov
dec
jecxz
sbb
mov
mov
pop
in
sub
call
(bad)
mov
repnz
ret
jae
ins
sbb
(bad)
jmp
fiadd
lds
mov
leave
inc
out
inc
fist
pop
aad
inc
xchg
mov
lock
or
xchg
mov
sti
clc
jnp
inc
jnp
mov
daa
rol
mov
pop
jne
es
dec
outs
ds
jge
push
in
adc
mov
(bad)
xor
dec
sti
mov
repnz
cmps
dec
cmp
pop
test
std
pusha
adc
mov
adc
cli
lds
repnz
pop
popa
lds
push
jecxz
sub
or
(bad)
push
retf
test
fistp
pushf
inc
pop
test
fstp
ja
mov
jmp
out
xchg
es
pop
nop
sub
mov
retf
sbb
add
xchg
aas
js
lods
xchg
jge
jge
xor
push
sti
pop
cwde
fcom
and
push
in
mov
dec
loop
xchg
xchg
icebp
dec
aaa
icebp
add
jecxz
lea
out
scas
jns
sti
iret
lock
pop
ins
das
xor
and
or
and
cmp
imul
pop
pop
(bad)
leave
add
jnp
je
shl
mov
xchg
mov
and
jo
fsub
inc
pushf
sbb
outs
fbstp
or
dec
xor
and
shl
jae
pusha
add
das
shr
cmp
add
push
lock
addr16
fs
fisub
jp
xchg
pop
mov
or
xor
xchg
sbb
stc
xchg
sbb
and
sbb
xchg
pop
iret
test
dec
mov
push
dec
addr16
sar
leave
sbb
in
sub
cli
mov
and
cmp
cmp
add
xor
add
rcr
rol
mov
add
push
pop
pop
and
(bad)
mov
aaa
xor
sbb
add
ins
xchg
xchg
imul
scas
push
and
xor
xor
push
inc
ss
push
inc
into
mov
stos
push
inc
popa
adc
repz
push
loopne
sbb
jmp
or
mov
sub
pop
stos
or
hlt
add
retf
in
inc
int3
xchg
ins
and
mov
add
test
iret
mov
cmc
or
lods
push
retf
aaa
mov
or
dec
adc
mov
mov
push
ins
fnsave
je
mov
mov
ret
ds
add
(bad)
sub
sti
pop
mov
stos
popa
movs
cdq
nop
push
xlat
lea
inc
fdivr
retf
jb
push
aas
lods
inc
jo
shr
popa
jge
push
ins
mov
jmp
repnz
or
mov
pop
stc
cmc
das
dec
repnz
es
stos
or
xchg
je
dec
mov
outs
lods
loopne
xor
pop
mov
jno
sub
or
adc
sbb
inc
mov
or
adc
adc
jl
push
push
jp
and
mov
mov
dec
sub
mov
ror
mov
cmp
pusha
scas
jmp
jns
(bad)
jp
mov
xchg
push
inc
imul
in
aaa
xor
cmp
jbe
mov
mov
cli
jg
test
shl
push
and
and
paddd
fidivr
xchg
sbb
mov
sub
test
push
imul
mov
cmp
fld
ins
call
sub
jg
xchg
addr16
repnz
std
xchg
scas
jb
jp
jmp
and
(bad)
repz
jp
sbb
and
mov
add
sti
sub
add
loop
std
call
icebp
pop
mov
add
jbe
mov
retf
sahf
fwait
retf
loope
fmul
inc
inc
jmp
sub
pushf
mov
xor
movs
xchg
movs
inc
in
add
xor
jmp
add
mov
movs
xchg
cmp
sti
xchg
sub
adc
js
idiv
mov
jecxz
sbb
cwde
inc
cmp
test
jg
sahf
mov
add
int3
dec
add
rcr
mul
mov
icebp
xor
hlt
lods
enter
xor
xchg
xor
js
fs
mov
bnd
mov
popf
aaa
sbb
push
sbb
pop
and
sub
rcl
stos
xchg
cmp
adc
pushf
pushf
fbld
and
cmp
mov
(bad)
xchg
cmp
mov
arpl
(bad)
dec
fwait
jmp
add
shl
mov
int3
(bad)
retf
add
dec
mov
(bad)
cmp
mov
popf
cmps
jno
out
hlt
rol
add
mov
push
pop
rcl
rep
out
adc
push
and
in
cmps
sub
mov
dec
push
push
xor
or
gs
xchg
dec
ja
adc
(bad)
sti
mov
sub
mov
lds
pop
jle
mov
dec
arpl
push
inc
call
ds
adc
daa
in
or
fst
out
or
pop
xchg
push
loop
mov
mov
inc
fwait
sbb
inc
jbe
pusha
int
dec
add
pop
push
das
push
dec
popa
fwait
clc
sbb
mul
mov
xchg
mov
pop
ins
and
adc
(bad)
or
mov
leave
outs
dec
adc
sbb
dec
ins
xchg
sub
cs
popa
and
jl
push
mov
shl
test
sub
or
mov
ins
mov
cmp
test
mov
cmp
pushf
fwait
xchg
sbb
das
loop
jnp
push
add
shl
push
xchg
dec
sub
dec
cmp
fwait
mov
mov
jg
inc
jo
mov
jne
ss
xchg
leave
sub
mov
adc
push
mov
push
popa
push
fwait
inc
mov
sbb
test
and
dec
enter
gs
jns
pop
sar
inc
add
adc
dec
pop
cwde
xor
push
stos
mov
fidiv
dec
xchg
mov
jmp
inc
ja
jmp
jbe
pop
je
ds
cs
mov
sbb
call
adc
shl
sbb
xchg
pop
adc
push
mov
dec
jmp
add
mov
out
arpl
aas
push
mov
ds
mov
or
cwde
push
xor
fst
and
jp
ss
pop
in
mov
(bad)
mov
rcr
add
les
(bad)
mov
loopne
xchg
push
adc
mov
push
jb
mov
sub
adc
ds
and
mov
pop
xchg
iret
bound
lahf
jnp
repnz
cs
push
push
sub
cmp
lods
sub
retf
lea
xchg
cmp
jmp
inc
add
xchg
inc
je
mov
leave
mov
aaa
lea
jnp
xor
adc
mov
enter
xchg
fs
dec
add
inc
push
sbb
inc
mov
test
out
(bad)
mov
out
mov
inc
cmc
dec
or
adc
fadd
mov
pop
call
sub
push
cmp
xor
xchg
push
xchg
fimul
and
mov
ret
std
out
lods
ret
addr16
popa
adc
(bad)
loope
inc
clc
mov
pop
dec
pop
push
movs
(bad)
dec
push
pop
jp
inc
sbb
int3
inc
cmc
sub
mov
(bad)
cmp
lods
mov
mov
mov
mov
or
aam
gs
pop
iret
jno
inc
add
cdq
xor
and
shl
gs
xchg
scas
mov
adc
or
mov
lods
out
fdiv
clc
mov
hlt
sbb
outs
movs
mov
cmps
fisubr
leave
sub
pop
jecxz
sbb
fstp
or
push
call
aad
js
jmp
xchg
imul
dec
mov
add
xchg
dec
ror
mov
imul
aas
jne
call
out
hlt
mov
mov
dec
sub
mov
sbb
test
popa
push
mov
gs
out
xchg
cmp
fisttp
cmp
sti
add
jmp
push
jnp
stc
mov
jmp
push
pop
fidivr
pop
popf
xor
inc
and
inc
jmp
xlat
cmps
inc
pop
mov
fwait
std
les
aaa
sbb
jne
sbb
cld
inc
push
repz
arpl
sbb
mov
add
dec
fisub
dec
fwait
mov
and
mov
sbb
pop
in
scas
dec
inc
inc
int
push
inc
popf
mov
adc
out
inc
arpl
or
rcr
test
scas
aam
dec
pop
(bad)
inc
mov
shl
int
jmp
test
lahf
stos
in
inc
ins
int3
adc
imul
sar
jns
fist
(bad)
fidivr
xchg
stos
mov
int
jne
push
scas
shl
push
cmp
clc
mov
sub
bound
pop
fld
xchg
dec
or
xchg
dec
fs
xlat
dec
aas
std
out
dec
adc
jb
mov
cld
sbb
xor
cwde
scas
dec
adc
and
rol
mov
adc
xchg
mov
pop
popa
in
push
rol
fldcw
lea
stos
call
enter
popa
push
jns
sbb
push
test
pusha
mov
mov
inc
add
rol
test
mov
jecxz
mov
cmc
jo
add
jp
leave
add
in
std
pop
pop
sbb
(bad)
inc
sahf
xor
imul
fidiv
inc
ret
dec
xchg
mov
ds
xchg
aam
call
out
adc
jae
fidivr
sbb
loop
xchg
or
and
lods
push
call
jmp
movs
js
(bad)
mov
or
loope
add
movs
xchg
pop
mov
repnz
adc
cmp
push
inc
hlt
movs
jo
ins
cdq
sbb
cld
hlt
leave
fsub
ins
adc
pop
push
ss
and
pushf
test
not
iret
mov
in
ins
out
mov
movs
pushf
push
mov
xchg
push
loope
repnz
sbb
test
jno
add
cmps
cli
ret
inc
movs
mov
or
add
rol
inc
mov
aas
(bad)
pop
xchg
arpl
sub
cmps
and
out
xor
movntq
int
xchg
fisub
clc
hlt
cmp
or
stos
stos
fmul
inc
and
inc
pop
push
mov
mov
sbb
or
add
inc
fisubr
mov
cmc
pop
dec
mov
fld
cmp
ret
mov
push
lods
imul
push
pop
ror
ds
in
inc
cmc
push
lahf
shr
adc
lods
(bad)
push
repz
jno
sbb
cmc
in
xchg
enter
in
aas
push
xor
ins
jle
(bad)
pop
jmp
push
push
addr16
cmps
xchg
mov
rcr
cmp
enter
and
xchg
mov
xlat
jne
pop
addr16
mov
dec
pop
xchg
pop
test
outs
das
loopne
lds
pushf
mov
dec
shl
pop
mov
(bad)
jecxz
std
jnp
jno
dec
ins
adc
mov
out
test
add
inc
and
add
xor
cs
pushf
aad
retf
sbb
push
das
mov
cmp
cmp
pop
ret
pop
add
test
mov
cmovo
mov
and
std
scas
outs
and
xchg
sub
daa
push
pop
cmp
mov
bound
xor
add
(bad)
sar
mov
lock
pushf
ja
mov
xchg
jo
cmp
push
sub
stc
dec
jae
jl
sub
test
add
dec
xchg
inc
mov
(bad)
mov
fcmovnu
add
aaa
sub
loop
clc
lahf
dec
cmp
xor
jecxz
jmp
inc
test
inc
in
push
retf
inc
adc
ror
or
push
ss
test
popa
sub
cmps
xchg
or
cli
fsubr
aas
rcr
pop
pop
jno
and
jne
cmc
mov
or
call
sub
and
cmps
push
pop
popa
stc
cs
mov
or
mov
xchg
mov
jle
pop
add
cwde
mov
add
(bad)
fsub
jns
pop
fstp
in
pop
pushf
add
inc
adc
mov
push
(bad)
mov
push
adc
xchg
or
les
sbb
or
xor
pop
iret
pop
xor
aas
scas
add
mov
xlat
jo
mov
sbb
dec
fstp
icebp
adc
pop
pop
adc
shl
sar
jne
mov
adc
xchg
cli
test
sti
out
call
jmp
arpl
or
test
sub
mov
test
mov
sub
add
jl
in
sub
std
xchg
mov
sbb
xor
ja
clc
and
mov
scas
xchg
loop
mov
xor
scas
cwde
out
dec
add
test
cs
dec
cmp
test
(bad)
jbe
xor
mov
les
lods
inc
adc
imul
mov
jp
jl
inc
cmp
sub
cmp
test
inc
lock
(bad)
push
in
push
scas
push
std
cmps
fcmove
js
mov
add
jp
mov
fist
and
inc
push
(bad)
xchg
inc
jmp
loop
fs
xlat
rcl
sub
fadd
repnz
push
push
jg
jb
dec
mov
adc
sahf
outs
jge
loope
icebp
mov
fldcw
sub
add
in
mov
push
hlt
retf
mov
jo
loopne
fwait
loope
jbe
mov
push
inc
xchg
mov
push
outs
dec
sub
ds
rcr
pop
repnz
imul
retf
int
add
jg
add
popf
out
xor
idiv
pop
or
mov
push
jmp
mov
and
jbe
mov
scas
cmp
neg
bound
pop
pop
pop
cmps
out
mov
out
push
test
cld
(bad)
leave
cli
pushf
jge
xchg
and
rcl
outs
clc
jo
scas
jmp
aad
pop
gs
out
dec
std
test
mov
loop
mov
arpl
pop
cmp
arpl
lock
or
movs
cmp
test
adc
mov
cmp
imul
xor
(bad)
dec
mov
sbb
loopne
add
(bad)
idiv
clc
xor
leave
jg
sbb
cld
and
mov
sub
xor
test
or
push
add
jl
xchg
jo
icebp
adc
mov
aad
adc
les
int
xor
lds
mov
or
mov
sub
loope
adc
dec
int
div
xor
out
adc
in
loop
repz
xchg
inc
clc
ss
repz
xor
(bad)
repnz
xchg
mov
inc
xor
in
test
sub
mov
nop
(bad)
lahf
cmp
mov
inc
xor
adc
repz
inc
fild
cmp
data16
push
or
push
jo
push
std
arpl
lock
dec
fld
sbb
movs
call
lods
sar
ins
(bad)
(bad)
mov
ror
sbb
iret
(bad)
jne
mov
retf
pop
xchg
call
jmp
cmp
(bad)
ss
in
(bad)
rcl
xchg
dec
add
rcr
mov
cs
sti
add
pop
aas
xchg
xchg
movs
in
push
(bad)
es
dec
test
mov
jmp
push
arpl
push
jno
int
push
adc
outs
es
(bad)
sti
sti
mov
fstp
jmp
sub
inc
mov
or
lock
cld
sbb
xchg
(bad)
popa
ss
gs
push
lds
ins
mov
and
jno
loopne
stc
fimul
mov
in
push
aas
ds
xchg
adc
popa
mov
pop
(bad)
(bad)
push
or
cmp
push
leave
and
xor
daa
xor
int
push
mov
inc
pop
repz
adc
sbb
mov
push
sbb
mov
int
frstor
ror
mov
pop
and
push
adc
jl
sar
add
mov
jns
adc
push
popf
test
add
movs
and
xchg
and
or
jnp
xor
mov
and
or
sbb
pop
sub
pop
mov
shr
mov
cmp
xchg
enter
sub
cli
popf
cmp
jae
scas
xchg
jmp
and
loopne
adc
push
sub
(bad)
mov
cwde
lea
sub
rcl
sti
cmps
cs
js
jecxz
stos
push
push
and
mov
mov
fidiv
out
ret
mov
data16
push
aas
lods
inc
jecxz
or
sbb
fmul
stc
adc
aam
dec
fist
call
adc
pop
shl
movs
xchg
sub
sub
out
push
into
adc
imul
popa
jge
shr
or
arpl
cld
jb
xchg
mov
lea
arpl
push
inc
(bad)
popf
iret
dec
dec
xchg
arpl
pop
lock
aam
add
cdq
ror
jecxz
add
mov
imul
call
repz
aam
sar
arpl
and
or
pop
inc
inc
mul
cmp
or
ds
pop
pextrw
or
push
and
retf
mov
ds
pop
nop
inc
jge
jo
cmp
or
inc
pop
pusha
push
shl
pop
or
ds
fs
pop
ins
pop
hlt
cmp
xchg
jge
test
pop
cli
adc
jmp
xchg
pop
in
inc
daa
pop
iret
sub
fstp
cmps
add
pusha
adc
imul
push
imul
jg
pushf
inc
lea
and
dec
nop
mov
or
arpl
pop
xchg
gs
xchg
jb
mov
and
cs
fs
xor
mov
retf
pusha
pusha
cmps
adc
popa
mov
loop
addr16
or
rcl
xor
jo
clc
jl
imul
mov
call
dec
(bad)
repnz
mov
fsubp
aas
fdiv
mov
iret
ret
rol
push
push
aas
shl
mov
iret
xchg
in
lods
push
dec
shl
repnz
xchg
mov
push
dec
cld
jno
test
push
push
mov
std
or
dec
push
fadd
push
imul
repz
push
cmp
xchg
pop
sub
jmp
ror
retf
xchg
mov
cdq
lds
hlt
aas
mov
add
and
arpl
cmp
mov
(bad)
data16
mov
xor
xlat
(bad)
push
aaa
scas
add
inc
add
lea
sub
in
fimul
mov
sbb
test
sti
sub
or
in
xlat
fst
out
inc
mov
jmp
call
rcr
jg
(bad)
clc
sub
xchg
and
stc
cmp
cwde
mov
sbb
xor
cmp
sbb
mov
sbb
ret
mov
fidiv
xchg
int3
in
sbb
jae
shl
loopne
int
mov
push
loop
sub
shr
test
(bad)
mov
sub
ds
enter
adc
xchg
das
jmp
pop
popf
ret
mov
dec
out
mov
in
add
add
inc
icebp
call
sbb
xchg
(bad)
in
ins
add
cmp
mov
push
and
stos
adc
xchg
dec
adc
out
mov
fisubr
xor
movups
xlat
imul
loope
or
inc
and
jbe
push
xlat
mov
dec
push
and
icebp
fisttp
fcomp
sub
aam
sbb
push
push
loope
sbb
jle
cmc
fist
fadd
cmp
rcl
inc
mov
mov
fnstsw
cmp
sbb
add
mov
xchg
sahf
and
lock
dec
add
das
sub
push
push
(bad)
in
imul
jmp
out
mov
stos
jecxz
jmp
sub
and
in
and
lods
cmp
mov
dec
mov
dec
jmpw
xor
movs
inc
cmp
test
lock
sbb
out
add
cs
mov
push
jl
adc
shr
in
adc
mov
xor
cmp
clc
push
cmp
inc
push
test
dec
sub
shl
mov
fdiv
je
movs
in
or
pop
inc
(bad)
adc
ret
pop
lock
jo
shl
(bad)
and
lock
dec
rol
jno
shl
mov
ficomp
clc
jle
mov
xor
cmp
movs
sar
lock
xor
aas
movs
jge
fldcw
pushf
inc
adc
retf
push
or
adc
cmp
fiadd
(bad)
xlat
mov
mov
lods
pushf
dec
add
mov
and
xor
jl
js
inc
mov
out
pop
nop
push
fsin
(bad)
ja
lea
dec
iret
hlt
jg
nop
arpl
mov
jnp
cdq
sbb
dec
nop
test
inc
add
stos
stc
in
(bad)
pop
cmp
push
mov
cmp
mov
sbb
xchg
scas
sub
je
sbb
cs
cmp
jl
loope
(bad)
movs
bound
and
push
xchg
and
and
or
mov
fwait
(bad)
repnz
fstp
push
repnz
retf
out
es
mov
pop
out
sti
iret
jge
popa
outs
mov
push
call
sahf
retf
cmp
stc
push
push
jecxz
add
jl
hlt
jmp
stc
dec
adc
jmp
ins
or
call
jnp
aas
mov
pop
inc
inc
add
mov
jmp
daa
fist
retf
sub
add
push
sbb
sahf
adc
pop
cmp
adc
pop
adc
fadd
push
xchg
push
outs
imul
arpl
jge
aaa
and
jecxz
adc
fwait
je
dec
xor
nop
add
xchg
jne
cmps
mov
sete
mov
(bad)
cdq
mov
sbb
mov
and
popf
sub
ret
test
xor
jmp
inc
add
or
loopne
movs
xor
icebp
add
jo
inc
outs
movs
mov
jg
or
in
and
pusha
int3
fwait
movs
or
retf
repz
add
aad
xor
mov
pop
xchg
stc
ja
jnp
or
lods
out
push
jnp
cmp
mov
and
and
mov
retf
sub
jge
mov
int3
pop
rol
xchg
inc
movs
loop
pop
inc
ret
or
xchg
outs
push
imul
aam
pop
int
ficomp
push
adc
jle
fsubr
ja
mov
xor
sub
add
pop
xor
inc
push
retf
rcr
cld
data16
in
mov
test
mov
inc
clc
in
cmp
jg
sahf
aaa
fdiv
sub
cmp
xchg
mul
jmp
sub
mov
and
enter
cwde
sub
add
ret
and
jmp
jmp
add
adc
or
les
(bad)
xor
mov
cmp
in
push
pop
sti
xor
mov
out
xor
fild
scas
into
sti
add
adc
xor
jmp
add
mov
rcl
pop
sbb
add
ret
fistp
daa
call
xchg
push
jmp
movups
imul
imul
test
popf
inc
enter
movs
add
sti
arpl
(bad)
aad
jns
dec
ret
inc
or
xor
aas
adc
fimul
fwait
push
imul
xchg
nop
add
pop
ret
mov
or
repnz
scas
sar
pop
or
mov
mov
fild
xchg
(bad)
dec
cs
enter
mov
mov
es
hlt
movs
sbb
and
int3
bound
jge
cwde
into
aas
fisub
push
push
outs
xor
cmp
mov
add
(bad)
aam
rcr
and
lods
(bad)
test
xchg
leave
imul
test
pop
adc
jnp
add
xor
ret
mov
pop
xor
sbb
ds
mov
mov
xor
ret
out
adc
adc
and
idiv
xchg
or
sub
aas
mov
inc
mov
and
mov
fsubr
stos
xor
mov
pop
mov
fild
fiadd
cmp
mov
(bad)
sbb
inc
pop
pop
adc
adc
outs
int3
out
test
dec
adc
jge
bound
jl
pop
imul
add
or
sar
fimul
and
mov
inc
clc
mov
adc
inc
pop
push
or
cmp
scas
lds
mov
in
mov
xchg
or
ror
repnz
sahf
movs
mov
imul
push
(bad)
inc
(bad)
jle
dec
(bad)
push
mov
and
and
sub
shl
mov
(bad)
push
dec
pop
(bad)
sub
pop
jno
lds
xor
mov
xlat
in
inc
gs
pop
dec
inc
xchg
outs
dec
add
pop
js
push
push
test
or
inc
dec
inc
fldenv
cmps
xor
jno
xchg
retf
(bad)
hlt
jns
mov
shl
test
fisub
push
rcr
xchg
jmp
or
inc
dec
push
pop
lods
repz
aaa
or
fstp
inc
in
aas
pop
mov
xchg
ror
inc
icebp
inc
nop
cld
ret
call
adc
lds
pop
xchg
cmp
lods
add
je
pusha
pop
call
dec
inc
ret
cli
inc
sti
cmp
sub
pushf
xor
dec
stc
cmps
push
push
mov
mov
jae
in
lock
and
and
outs
lahf
jge
cmp
inc
lods
mov
sbb
lods
arpl
xor
gs
pop
dec
xor
jno
dec
cwde
test
mov
sub
or
push
paddw
imul
pop
push
lahf
(bad)
lock
xor
dec
cmp
and
sub
lods
bound
xchg
lods
retf
and
dec
xlat
xor
daa
dec
mov
pop
loope
mov
push
xchg
test
or
push
sbb
into
xchg
(bad)
adc
add
in
push
xchg
shl
xor
push
sub
inc
scas
repnz
retf
shl
xchg
push
adc
add
outs
cmps
jmp
mov
nop
sbb
shl
lahf
stos
aam
movs
add
cmc
fild
and
inc
inc
clc
pop
sub
xchg
clc
ret
lock
pop
loop
xchg
xchg
inc
jle
lea
sub
sub
outs
popf
mov
js
mov
(bad)
ins
and
ret
repz
stos
sbb
adc
call
out
scas
pop
dec
add
icebp
jbe
sahf
jle
retf
dec
lahf
int3
aam
inc
(bad)
cmc
fstp
add
(bad)
jl
dec
sub
or
js
pop
dec
jg
arpl
xor
icebp
or
dec
in
not
sbb
ret
xchg
mov
sub
add
cs
out
xchg
jl
and
push
pop
ins
bound
cmps
arpl
fmul
aam
or
xor
jge
cmp
inc
sub
lahf
dec
jmp
lds
mov
aam
in
das
inc
push
cwde
test
jo
or
(bad)
clc
dec
dec
mov
sahf
dec
sti
mov
pop
jmp
push
fist
outs
lahf
call
sub
ret
inc
data16
pop
mov
hlt
popa
jge
inc
jno
data16
aad
out
call
pop
das
jo
mov
imul
mov
lods
(bad)
mov
xor
inc
push
push
xor
ret
(bad)
fsub
add
retf
pop
out
jno
pop
add
mov
sbb
loopne
(bad)
fsub
mov
ja
dec
out
mov
adc
clc
sbb
sahf
xchg
xchg
pop
mov
mov
div
sub
rol
scas
inc
iret
cwde
iret
ror
sar
fs
mov
mov
mov
mov
sub
enter
xchg
shl
imul
and
loop
lds
fcomp
sub
mov
cdq
cmc
add
jae
out
retf
sbb
adc
push
loop
lds
call
pop
imul
out
push
das
xor
dec
sbb
dec
out
lds
(bad)
or
cmps
inc
pop
push
pop
and
js
mov
push
jmp
retf
pop
jno
fs
push
xor
clc
add
mov
xor
fcmovbe
adc
imul
scas
adc
cwde
push
mov
jae
jno
cmp
dec
xor
jecxz
sbb
xchg
add
mov
fnsave
mov
fld
and
jecxz
fst
cdq
and
xor
out
loop
pop
fbld
jns
jne
shl
and
mov
ins
add
sti
pop
xchg
mov
pop
and
cmp
push
or
fcmovbe
int
dec
sub
and
mov
jnp
mov
sbb
movs
dec
push
int
jp
jecxz
add
or
dec
test
jo
(bad)
repnz
shl
movs
adc
dec
bound
jl
cs
mov
mov
dec
retf
mov
or
sar
mov
in
cmp
das
aad
js
(bad)
xchg
fdivr
xchg
in
stos
aad
mov
cmp
mov
ds
dec
and
or
jmp
ins
lods
xchg
leave
inc
stc
imul
sar
cs
ins
ds
xchg
push
xchg
sub
adc
cwde
inc
push
(bad)
cld
xor
mov
imul
hlt
mov
lods
sub
sub
out
adc
mov
jp
xchg
jns
(bad)
mov
xchg
popa
push
xchg
fpatan
adc
or
cmp
dec
mov
sub
bound
rcl
push
scas
push
cwde
mov
pop
sar
gs
(bad)
mov
aas
(bad)
sub
cmp
pusha
fdiv
mov
mov
cdq
leave
test
loopne
mov
sahf
(bad)
stc
cmp
mov
call
push
int
add
jno
aam
pop
pop
in
out
daa
sbb
stos
adc
xchg
xchg
outs
fimul
ins
movs
repnz
int
jl
lods
jbe
push
sub
and
inc
cmp
mov
test
xor
sbb
shl
sti
and
push
mov
popa
sub
mov
and
xor
add
fidivr
fs
prefetcht1
scas
test
add
push
sbb
mov
daa
cmp
call
jae
ins
fcom
mov
cmovbe
pop
dec
and
mov
mov
add
loop
dec
xchg
push
(bad)
pop
pop
je
inc
enter
iret
xor
pusha
jmp
jl
fnsave
movs
popa
push
scas
and
or
xchg
dec
not
mov
jmp
dec
jmp
lock
sbb
mov
sub
loopne
mov
(bad)
or
ret
push
pop
test
inc
sbb
mov
xchg
data16
and
icebp
mov
call
movs
mov
mov
daa
ds
mov
lds
sbb
push
sub
outs
xor
or
fistp
adc
push
add
xchg
(bad)
push
cs
(bad)
fld
dec
add
and
cmp
xchg
mov
ins
cwde
dec
xchg
fld
clc
sub
sbb
inc
call
pop
aam
push
fmul
rcl
fsub
(bad)
cmps
nop
fs
cmps
(bad)
cld
sub
loope
out
lods
jb
cld
pop
and
scas
hlt
hlt
clc
pop
adc
dec
bt
pop
mov
ret
push
xchg
outs
sbb
jbe
mov
mov
ror
xchg
pop
cmps
adc
cmp
cld
ret
and
and
jg
lock
jmp
cmps
(bad)
leave
mov
and
sub
inc
mov
call
and
emms
stc
adc
fxch
add
inc
aad
adc
cli
dec
dec
test
mov
(bad)
(bad)
add
mov
mov
dec
mov
ja
cdq
rcl
or
inc
pop
clc
add
fstp
pop
xchg
cmp
gs
pop
pusha
jb
dec
imul
sbb
or
je
cmp
cmp
add
ss
xor
popf
xor
aas
add
in
pusha
or
cmp
(bad)
cmp
call
pop
fdiv
test
jge
sub
imul
mov
lods
(bad)
fldcw
mov
cmp
xor
and
pop
add
sahf
dec
mov
test
arpl
cmp
ret
or
jns
mov
xlat
push
jmp
cmps
jmp
xchg
jl
push
pop
gs
push
movs
pop
cli
cmp
jmp
dec
jle
mov
fstp
repnz
mov
or
js
dec
movs
std
mov
aas
pop
sti
add
test
in
and
jne
pushf
xchg
sub
mov
iret
mov
lods
xor
mov
xchg
jno
fsubr
(bad)
mov
mov
jns
cdq
jle
push
out
dec
mov
in
shr
mov
sub
pop
ficomp
mov
in
sahf
aas
es
aad
adc
idiv
icebp
sti
adc
add
push
mov
jno
out
xchg
sub
jg
xor
mov
jmp
xchg
nop
mov
dec
jne
sbb
xchg
hlt
aam
loopne
push
mov
dec
popa
sahf
push
cmp
pop
jnp
lods
pop
xchg
fild
ror
fs
call
xlat
loopne
inc
dec
stos
jb
add
imul
test
fcmovne
pop
or
dec
shl
xor
jns
jg
mov
xchg
popf
mov
jle
out
loope
and
inc
and
sbb
pop
test
mov
xor
push
das
leave
cs
ret
and
nop
test
popa
das
(bad)
push
rcr
movs
fistp
pop
ss
aam
pop
imul
mov
and
dec
bound
inc
fadd
or
xor
xchg
or
in
fadd
mov
push
fsubr
sar
out
jae
add
gs
fild
or
jmp
mov
xor
les
fwait
add
je
enter
into
(bad)
inc
jb
push
pop
std
movs
jecxz
mov
mov
jo
test
daa
mov
and
mov
fistp
jecxz
or
xchg
ret
cmps
pop
inc
sbb
inc
jne
or
and
add
and
pop
fdiv
and
inc
imul
aas
(bad)
adc
add
pop
outs
enter
xchg
pop
ins
cmp
test
jg
mov
ficom
es
sbb
sar
push
cmp
sub
or
adc
inc
sbb
les
mov
xor
mov
call
loope
les
sar
push
inc
pop
mov
jno
jl
outs
jno
je
push
xor
int3
push
ret
clc
je
repnz
cdq
popa
lock
and
pop
test
mov
aaa
cdq
jmp
call
push
sbb
ret
sbb
or
xchg
shr
push
xchg
jne
cmp
add
sbb
les
inc
add
(bad)
cwde
sub
adc
das
outs
adc
mov
js
retf
fimul
mov
adc
fcomp
scas
sbb
mov
loopne
arpl
fistp
mov
aam
mov
outs
(bad)
sub
mov
sti
sub
(bad)
sbb
dec
cmp
mov
mov
or
pop
cs
add
fxch
mov
xor
or
jl
xor
hlt
xor
or
mov
cwde
dec
xchg
imul
mov
imul
adc
xchg
hlt
mov
into
mov
sti
push
pop
scas
mov
mov
jle
imul
aaa
mov
sbb
pop
call
cld
fwait
mov
pop
loop
mov
(bad)
dec
movs
sar
push
jg
inc
and
xchg
das
jmp
mov
xor
jl
jns
rcl
mov
(bad)
fsubr
cmp
(bad)
call
ror
in
loop
sub
mov
pop
fcomi
pop
dec
sub
inc
(bad)
sbb
stos
inc
mov
xor
xor
adc
iretw
mov
fisubr
gs
inc
push
(bad)
inc
xchg
mov
sub
mov
js
jl
iret
or
xchg
inc
xor
(bad)
imul
gs
in
adc
jmp
add
mov
sbb
cmc
adc
enter
xor
das
jnp
mov
add
xchg
test
lds
mov
fstp
fistp
fldcw
jle
or
inc
xor
leave
in
pop
mov
retf
loop
out
cld
out
std
idiv
jl
popf
xchg
in
push
mov
nop
test
es
fsubr
lds
add
jb
pop
scas
jg
sbb
loopne
test
jb
pop
mov
jg
std
sti
stos
inc
in
push
out
popa
pop
(bad)
(bad)
mov
adc
push
push
adc
adc
sbb
aas
sub
push
mov
xor
out
push
ror
fist
push
cmp
jo
cmps
add
xor
jecxz
add
(bad)
pop
icebp
outs
fs
inc
das
jecxz
stos
(bad)
out
stos
xor
or
mov
xlat
mov
add
jecxz
mov
ins
mov
or
stos
pop
inc
lods
push
stos
mov
mov
mov
test
lea
mov
fistp
sbb
clc
mov
lods
sub
jnp
push
jmp
fs
jp
push
pop
sbb
and
jecxz
movs
cmps
cmp
cmp
mov
xor
test
lock
xchg
iret
pop
xor
mov
mov
ins
outs
inc
mov
lock
mov
xchg
shl
or
xor
cmp
add
mov
(bad)
pop
int
dec
cmps
lods
mov
ins
cmc
cwde
push
repz
cmp
movs
(bad)
xor
leave
cmp
out
enter
push
pop
pop
xchg
imul
and
cli
jge
or
and
pop
add
jle
add
cmc
xor
pop
movs
jl
xchg
cmc
dec
jae
loope
ss
int
mov
xchg
xchg
fiadd
fwait
cld
jg
xlat
sub
pusha
fistp
jecxz
pop
cmps
movs
pushf
inc
lds
std
pop
pusha
scas
cwde
cmp
inc
lods
pop
mov
mov
cmp
call
sbb
jmp
dec
enter
daa
jo
mov
jb
jp
dec
adc
(bad)
rcl
jle
and
or
ror
bound
outs
pop
cwde
push
(bad)
sbb
mov
mov
hlt
shl
cdq
(bad)
lock
fst
inc
add
mov
pushf
jmp
pop
jmp
aam
mov
adc
shl
sbb
(bad)
sti
cmp
adc
popf
and
push
ror
xor
push
stos
mov
out
aas
sub
sbb
jmp
mov
pop
or
inc
repz
cs
cs
cmp
inc
pop
out
mov
lahf
aad
dec
cmc
add
ins
inc
dec
inc
pop
in
dec
mov
stos
cmp
pop
cs
inc
cdq
(bad)
fsub
sbb
mov
adc
or
shl
xchg
mov
les
add
ror
push
jb
stos
adc
xchg
dec
xchg
adc
jmp
lds
mov
adc
stc
dec
das
loop
pusha
and
mov
push
dec
sbb
gs
push
push
ffree
sti
imul
or
cdq
int3
imul
stos
out
sar
jmp
lods
add
mov
dec
mov
retf
stos
hlt
js
ds
xor
xchg
pop
pop
ret
std
out
test
jle
(bad)
shl
sub
mov
jbe
pop
and
std
mov
add
cmps
call
test
enter
retf
loop
pop
cmp
loopne
add
dec
mov
fadd
xor
mov
mov
jg
test
xchg
jecxz
mov
xchg
popf
je
enter
cdq
push
imul
je
jbe
or
mov
xchg
in
jge
xor
sub
inc
cmc
stos
pop
jecxz
mov
push
xor
push
sbb
lea
adc
and
movs
sbb
xor
inc
pop
repz
xor
jl
shr
stos
xor
loope
rol
cdq
xor
lds
repz
mov
dec
imul
rcr
ss
mov
scas
adc
lock
add
in
mov
add
call
in
sbb
pop
ss
sub
ret
jmp
lods
das
(bad)
nop
and
addr16
jb
and
out
call
mov
outs
nop
icebp
jmp
mov
mov
test
cmp
inc
fdivp
dec
ds
movs
shr
and
inc
or
(bad)
fsub
jb
loop
pop
popf
in
pop
inc
inc
jecxz
movs
repz
add
jmp
(bad)
mov
mov
jne
(bad)
cmp
jl
lea
nop
xor
out
ficom
mov
icebp
add
mov
xor
out
mov
push
shl
imul
cmp
dec
cmc
out
stos
imul
retf
xchg
lods
pop
mov
push
lahf
ret
icebp
adc
and
hlt
pop
inc
sub
call
mov
bnd
mov
ucomiss
enter
xchg
test
or
fwait
ds
jne
mov
push
(bad)
jbe
xchg
jp
fwait
mov
mov
sub
jecxz
dec
jle
mov
xor
pop
pusha
out
stc
sti
and
ins
sbb
arpl
jb
sbb
dec
jae
sti
loope
jnp
jnp
jnp
in
test
les
mov
pop
call
sbb
jmp
cld
cli
test
jb
sub
stos
inc
test
(bad)
loope
scas
push
arpl
sbb
test
lds
cdq
mov
and
xchg
fnstsw
addr16
fld
inc
cmp
pop
push
sub
arpl
mov
pop
jb
and
lods
jge
(bad)
out
push
in
aas
cwde
xlat
sub
pop
call
call
pop
sub
popa
rcl
sbb
ret
jae
sbb
aad
popa
dec
icebp
sbb
cli
fld
adc
cmp
jno
lock
retf
pop
call
sub
pop
sahf
imul
cmp
test
jo
adc
bound
cdq
push
or
push
jo
xor
xchg
ins
mov
(bad)
cmp
push
scas
sbb
mov
mov
xchg
aas
jne
fcom
ins
retf
xor
hlt
(bad)
cmp
mov
adc
add
adc
std
mov
or
data16
mov
(bad)
cmc
jmp
mov
xchg
call
xor
add
mov
pop
jno
cmovs
je
or
mov
pop
int
rol
add
mov
ror
push
pop
sub
rol
jle
adc
mov
or
jg
xchg
push
cdq
or
push
jo
lds
pop
xchg
push
and
inc
fs
jb
sbb
jl
ret
clc
gs
mov
in
pop
sub
movs
inc
(bad)
int3
dec
sbb
lock
call
xor
call
mov
mov
jmp
sbb
or
nop
icebp
arpl
push
sti
inc
aaa
cmp
jp
enter
stos
sub
push
mov
push
icebp
stc
shr
(bad)
mov
sbb
cmc
and
imul
leave
push
xor
and
push
push
scas
popa
mov
leave
outs
fldenv
adc
add
arpl
leave
ret
(bad)
sbb
and
push
jns
and
adc
fadd
inc
mov
arpl
xchg
push
call
adc
sahf
pop
xchg
in
mov
bound
adc
push
cmps
test
mov
cmp
loopne
mov
xchg
clc
sub
xchg
push
js
enter
dec
mov
dec
mov
cmps
xchg
adc
push
lds
stc
pop
xchg
push
push
sub
(bad)
das
mov
xchg
fisubr
mov
in
and
jmp
(bad)
test
stos
(bad)
or
cmp
ins
pop
mov
mov
cdq
call
in
mov
out
or
cmp
sub
ds
fsqrt
xchg
pop
clc
call
mov
push
jo
rcl
mov
iret
ins
jo
adc
(bad)
jae
shl
cmp
jl
add
in
test
repz
jle
stc
repz
adc
into
dec
pop
adc
mov
mov
mov
mov
and
or
adc
movs
in
jl
adc
dec
sub
popf
pop
scas
adc
into
cwde
mov
push
jnp
jno
cmps
lods
mov
inc
clc
aas
fnstcw
cmp
rcr
cmps
ror
lock
adc
adc
test
sub
gs
bound
cld
or
sbb
call
push
sub
dec
loop
mov
mov
mov
xor
call
in
push
mov
je
jnp
call
xor
mov
out
rcr
test
mov
arpl
test
movs
pop
aaa
sbb
dec
fdiv
jmp
jmp
fisubr
rcl
ror
mov
lahf
and
pop
xor
or
mov
sub
(bad)
movs
sub
jecxz
repnz
test
mov
mov
std
sbb
dec
mov
inc
mov
out
pop
pop
xor
in
sub
data16
dec
daa
int
mov
aad
mov
mov
retf
sub
push
iret
je
call
repnz
push
jns
push
xlat
sub
xor
iret
xchg
fadd
jmp
jnp
mov
and
mov
in
shr
dec
in
pusha
es
mov
jle
pop
xor
ftst
adc
xor
or
int3
cmp
ja
mov
loopne
sub
inc
pusha
loop
into
mov
adc
ins
pop
(bad)
jmp
mov
(bad)
xor
and
lahf
mov
cmc
fst
das
jecxz
test
stc
push
sbb
add
(bad)
ror
test
shl
push
cmps
lahf
pop
adc
lock
(bad)
xor
dec
mov
call
stos
js
xor
iret
fsub
in
xor
mov
push
jmp
jge
repnz
jge
push
pop
xchg
mov
clc
jns
int
adc
fwait
sbb
cwde
sub
pop
jg
mov
iret
dec
leave
mov
aad
data16
jmp
arpl
jge
adc
retf
std
mov
push
(bad)
(bad)
pop
mov
popf
xchg
test
push
jp
push
mov
lahf
jo
or
add
fistp
mov
aaa
mov
jp
dec
cmps
loop
adc
inc
test
xor
xchg
imul
adc
push
mov
push
imul
mov
mov
mov
out
jmp
dec
fdivr
mov
xor
in
in
stos
pop
ret
cmp
movs
dec
pop
leave
cmp
add
data16
jp
mov
mov
jbe
cmps
mov
loop
mov
sub
out
add
cmp
lods
(bad)
data16
and
lock
imul
mov
test
inc
cmps
fldcw
xchg
adc
ins
or
repz
cmps
sbb
add
out
hlt
adc
cmp
push
jbe
push
and
or
mov
inc
sbb
(bad)
fnstcw
loop
mov
push
mov
inc
and
sbb
ds
retf
adc
popf
je
cwde
das
sub
dec
dec
sbb
ud1
xchg
(bad)
push
or
clc
pushf
stos
cdq
hlt
xlat
push
pop
mov
(bad)
cs
cmp
sub
adc
aam
retf
jns
fist
ja
mov
inc
dec
pusha
aad
sar
sub
jo
popa
sub
mov
jb
in
loop
adc
mov
jmp
bound
imul
and
nop
pop
scas
push
fimul
sub
(bad)
adc
ficom
call
add
pusha
cld
or
and
xchg
pop
addr16
jp
rcr
aaa
jle
jno
je
sub
sbb
sub
test
je
add
iret
rcr
xor
cld
push
aad
sub
shr
and
xchg
sub
jmp
retf
add
sbb
xlat
xchg
sbb
dec
clc
dec
add
aaa
in
cli
mov
xchg
xchg
(bad)
mov
xchg
xchg
inc
cmp
sbb
out
(bad)
rol
sub
push
push
outs
ja
sahf
mov
pop
pusha
and
mov
pop
outs
or
sub
out
out
sub
inc
not
fldcw
mov
popf
icebp
jle
add
mov
(bad)
outs
in
sbb
xchg
aaa
stos
mov
xor
imul
adc
dec
addr16
mov
jecxz
sbb
into
pop
pop
cmps
pop
test
mov
lods
or
stos
adc
inc
js
in
push
xchg
mov
je
in
shl
call
stos
dec
cld
out
nop
inc
xchg
jg
mov
sbb
lahf
ficom
add
cwde
loopne
shl
out
or
je
xor
lock
xchg
dec
je
mov
cmps
pop
mov
iret
mov
cdq
pop
sbb
loop
add
jns
rcr
dec
jae
aas
jmp
and
pop
call
cmp
dec
repnz
mov
pop
enter
sbb
push
inc
leave
xor
aam
nop
inc
test
cmps
movs
mov
std
pop
mov
adc
out
setle
mov
pusha
ds
cli
sbb
add
(bad)
xchg
pushf
sub
fisub
pop
(bad)
loop
add
stc
jno
or
jns
xchg
in
pop
and
pop
not
retf
bts
cmc
xchg
imul
imul
sbb
fmul
call
fdivr
xchg
xchg
sbb
outs
cdq
shr
cmp
jbe
inc
dec
std
fld
add
mov
mov
rol
mov
push
scas
cmps
shl
xchg
add
xchg
fs
cmp
lods
pop
call
(bad)
cdq
mov
fisub
loopne
sub
lea
sub
in
scas
mul
mov
leave
pop
inc
(bad)
out
mov
and
test
mov
push
mov
cvttps2pi
out
aad
loop
test
pop
mov
cli
cwde
sbb
sbb
or
arpl
and
cmp
dec
and
inc
jle
dec
jg
mov
call
mov
fdiv
cmp
xor
data16
pop
sbb
sbb
or
mov
hlt
jne
or
pop
mov
sub
iret
rcl
call
mov
xor
pop
clc
xchg
sub
mov
inc
(bad)
sahf
dec
pop
leave
mov
mov
fisub
jecxz
(bad)
pop
sbb
imul
mov
pop
fcomi
dec
cmp
mov
cld
inc
(bad)
jmp
int3
mov
push
jp
pusha
popf
add
xchg
not
jb
movs
xor
das
hlt
push
adc
(bad)
call
cmp
sub
xlat
jb
pop
loop
int
jecxz
mov
nop
jae
cmp
sub
rcl
iret
dec
jmp
pop
and
retf
push
pop
imul
rep
cmp
pop
jmp
mov
cmc
and
je
sub
xor
lea
cmp
mov
push
mov
ds
cs
lock
retf
(bad)
cmps
mov
in
lods
dec
jp
iret
out
push
push
jmp
aas
retf
sbb
sub
cmp
call
sbb
js
sbb
(bad)
mov
call
stos
out
sbb
xchg
mov
or
add
movs
jmp
ret
inc
mov
sbb
push
loop
add
or
fistp
(bad)
(bad)
pop
fisttp
test
adc
sbb
sti
into
out
xor
xchg
ret
lds
ret
push
leave
and
jno
gs
rcl
push
movs
pop
fsub
mov
in
and
jns
outs
scas
scas
mov
xchg
and
fcom
(bad)
ja
retf
push
loopne
sar
cmp
pop
xlat
(bad)
int3
xor
rol
sbb
inc
xchg
xchg
std
xor
sahf
scas
mov
dec
mov
aas
push
push
test
aas
mov
mov
inc
jnp
cmc
shl
pop
jmp
repz
es
jle
repnz
ror
and
sbb
pop
cmc
mov
loope
jae
add
inc
arpl
and
dec
push
bound
cmc
inc
xchg
sub
lahf
fld
add
inc
adc
fs
cli
loope
popf
addr16
sub
or
pushf
sub
mov
cmp
out
jae
out
inc
je
inc
fmul
dec
mov
stc
sbb
lds
outs
mov
fidivr
jae
ins
fisubr
popf
xor
cmps
loop
mov
js
jl
jne
aas
adc
mov
arpl
fs
sub
std
popf
add
stos
movs
jnp
and
sahf
in
cs
push
hlt
add
sbb
xchg
ins
dec
shl
adc
cmp
jp
and
add
push
in
and
mov
sbb
push
push
lahf
push
aaa
xor
lock
bts
int3
fdiv
mov
sub
mov
rcl
jae
fldcw
cmp
(bad)
icebp
ret
lods
add
or
dec
std
enter
xor
cld
test
popa
jle
mov
pusha
and
rol
adc
pop
mov
jmp
imul
das
lods
push
popa
shl
inc
ret
or
inc
ror
mov
outs
jb
mov
jl
mov
in
(bad)
daa
pop
(bad)
rcl
jne
repnz
jle
stos
sti
mov
mov
out
push
in
pop
shr
je
popf
and
icebp
out
pop
pop
ja
jge
test
out
lds
and
add
or
or
in
mov
fs
ret
imul
inc
aad
je
int3
ucomiss
pusha
pop
mov
sti
(bad)
pop
xor
and
or
jp
sub
sbb
sti
pop
add
in
dec
stos
lock
inc
test
push
outs
ror
scas
in
mov
ins
outs
mov
(bad)
(bad)
(bad)
and
test
pop
adc
xchg
pushf
jg
or
xchg
lods
leave
cmp
inc
push
mov
mov
mov
xor
lahf
mov
sbb
scas
push
ret
dec
(bad)
cwde
mov
and
test
jge
jo
sub
mov
push
and
add
rcr
das
xor
xor
mov
lods
les
(bad)
cmps
into
call
outs
pop
fs
hlt
or
addr16
sahf
(bad)
bound
push
repnz
jnp
mov
jb
push
js
sbb
test
(bad)
out
or
pop
adc
fcmovnu
loope
mov
sbb
dec
jb
outs
cmps
push
mov
jg
out
pop
dec
lds
shl
test
int3
ret
psllw
adc
test
inc
fs
xor
and
cmp
pusha
xchg
jge
push
pop
jmp
loope
mov
ret
ds
repnz
int3
xchg
lds
inc
jnp
cs
mov
daa
movs
je
inc
data16
or
dec
out
push
push
fs
retf
addr16
pushf
stos
dec
pusha
(bad)
mov
pop
sub
jg
dec
cli
ret
sti
add
out
xchg
mov
fmul
mov
mov
in
pop
xor
inc
mov
test
push
popf
jl
push
mov
mov
je
loop
out
ficom
pop
push
jne
not
push
out
push
push
sub
push
daa
stc
xchg
cld
mov
add
lods
mov
mov
or
retf
or
pop
jne
les
jo
push
scas
add
data16
sub
push
push
xchg
mov
sbb
sub
add
lds
add
call
pusha
rcl
test
hlt
inc
and
xchg
inc
enter
icebp
rcr
push
cld
sub
fst
inc
or
imul
retf
push
fwait
ss
cmps
cwde
adc
add
aad
repnz
aaa
xor
out
fldz
xchg
imul
adc
mov
int3
mov
dec
daa
jno
sbb
jbe
mov
xor
inc
mov
pushf
cmc
loopne
jb
lea
sub
retf
stos
sbb
adc
or
jg
xchg
mov
aas
mov
cmp
sbb
adc
or
inc
mov
jecxz
fwait
hlt
out
xor
test
mov
xor
jo
jle
cmp
aas
leave
(bad)
push
cmp
adc
fcom
jp
stos
retf
fs
mov
add
add
xor
xlat
loop
jne
push
out
fsubp
pop
xchg
inc
jo
ror
xchg
cmp
jge
ins
mov
int
lahf
cwde
(bad)
imul
mov
inc
adc
mov
sub
xchg
pop
fild
cmp
lock
adc
sbb
and
cmps
stos
adc
or
inc
retf
cmp
cld
push
pop
into
ret
cmp
aam
mov
dec
mov
mov
pop
jne
imul
sub
or
ffree
mov
hlt
dec
pop
scas
pop
xchg
fs
xor
scas
inc
fs
or
pop
xor
sub
and
mov
div
sbb
jl
dec
in
rcl
cmp
xor
sti
xchg
shr
mov
cdq
dec
xor
idiv
(bad)
mov
sbb
inc
jecxz
mov
xchg
cmp
mov
jle
jl
inc
push
call
inc
adc
dec
sub
loop
or
(bad)
aad
or
jg
stos
dec
xchg
rcr
fldcw
mov
dec
div
jle
cs
jnp
xchg
in
mov
jmp
cmp
movs
ret
out
(bad)
or
or
jo
stos
inc
retf
and
or
mov
adc
xchg
mov
stos
call
inc
loopne
aam
int3
fcmovnbe
xchg
jle
or
adc
mov
retf
cmp
imul
idiv
cld
pusha
iret
xchg
das
out
add
rol
push
dec
retf
adc
push
mov
pusha
out
mov
sub
stos
lods
cmp
retf
jns
repz
sub
cld
ret
call
xchg
(bad)
adc
sbb
dec
and
xor
nop
dec
adc
lsl
push
and
mov
fwait
inc
sub
neg
push
enter
cmp
xchg
mov
cmp
or
xor
dec
mov
test
retf
pop
mov
cdq
aas
addr16
mov
cdq
pop
or
retf
shr
jb
sub
sbb
data16
push
(bad)
jns
jnp
inc
ja
dec
rcl
les
add
jae
cmp
test
fwait
test
pop
lods
hlt
adc
repz
inc
sbb
fsin
push
arpl
sub
fisub
adc
shl
aam
aad
stos
xor
pop
jg
mov
ins
jne
mov
in
shl
or
mov
dec
aad
xor
je
out
hlt
lods
push
pop
sbb
arpl
xchg
cmp
push
inc
push
(bad)
lahf
xchg
or
inc
pop
leave
dec
push
ret
push
icebp
pop
lea
mov
scas
out
int
cmc
outs
jle
dec
and
push
sub
in
fnstsw
pop
add
in
in
mov
fldcw
lahf
imul
pushf
sub
stos
sti
sub
adc
lock
mov
cmp
(bad)
dec
cli
adc
in
mov
test
dec
mov
in
daa
pop
dec
xor
jl
repz
jns
scas
aam
(bad)
aas
mov
retf
lods
out
lds
lahf
or
push
cmp
xchg
and
or
xchg
ret
or
sub
sti
scas
jmp
sub
(bad)
cmp
loop
jmp
pop
movs
sbb
pop
into
jne
loopne
fwait
dec
sub
out
mov
cmc
inc
loopne
xor
xchg
inc
aaa
mov
mov
jno
ja
inc
ss
cmps
cmps
ja
push
push
loop
fsincos
cmc
adc
mov
mov
jge
cmp
and
call
pop
xor
pop
push
dec
adc
cmps
jmp
pop
inc
out
movs
cmp
cmc
test
mov
shl
in
jne
cmps
mov
and
test
inc
sar
in
adc
sbb
ficomp
gs
mov
movs
add
add
clc
(bad)
movs
push
scas
push
cmp
stos
aas
les
mov
xor
mov
xor
inc
les
sub
jmp
inc
test
fnstsw
sbb
stos
out
add
in
nop
pusha
pushf
and
push
xor
(bad)
push
clc
xchg
cmp
(bad)
loop
dec
or
dec
mov
mov
in
jmp
mov
test
and
pusha
sub
pop
retf
or
mov
(bad)
movs
loopne
mov
dec
rcr
fisub
xchg
pcmpeqd
dec
adc
mov
fisubr
add
mov
mov
jmp
fstp
jne
dec
adc
sub
cmp
int3
adc
pusha
outs
mov
pop
retf
mov
xchg
(bad)
shl
ja
imul
adc
mov
add
pop
lahf
and
sbb
pop
mov
test
leave
sbb
and
xchg
mov
pushf
sahf
shl
cmp
push
bound
jl
clc
sbb
in
pushf
sbb
fnstenv
cmp
je
imul
push
add
(bad)
cmp
inc
inc
and
adc
fiadd
cmp
cdq
test
add
push
sbb
sbb
xchg
cwde
jb
fwait
jns
jns
daa
retf
ins
mov
movs
inc
push
jne
jg
int
mov
and
sbb
test
sbb
movs
jmp
fdivr
inc
cmp
ins
rcl
add
sahf
fwait
dec
hlt
and
imul
repz
and
lock
mov
push
cli
sbb
test
mov
mov
sbb
xor
pushf
xchg
lods
mov
sti
retf
lahf
fidiv
inc
jg
call
dec
and
or
gs
mov
xchg
popf
xchg
movs
daa
push
push
scas
dec
jo
lock
test
(bad)
ficomp
push
jo
cmp
adc
(bad)
pop
pop
jecxz
dec
cld
stc
in
or
pop
sbb
mov
mov
xchg
popf
sub
add
adc
and
xor
in
add
call
ins
jno
test
scas
or
shl
shl
add
(bad)
xlat
out
mov
popa
mov
int
js
gs
jns
cdq
mov
idiv
and
sub
dec
xchg
mov
lahf
ss
xor
lea
fucomp
mov
or
movs
xchg
cmp
cmp
pop
imul
jmp
add
out
rcl
pop
add
(bad)
loop
sqrtps
mov
push
push
leave
or
or
xor
test
inc
inc
sub
iret
test
daa
ins
push
jae
and
addr16
mov
adc
xor
pop
mov
pop
dec
sub
nop
jmp
jl
xchg
div
mov
imul
(bad)
out
jo
aas
adc
push
pop
cmp
sub
test
mov
cld
or
dec
loop
cld
adc
cdq
in
aam
push
jbe
add
pusha
mov
popf
adc
cmp
jmp
xor
and
mov
ins
and
int
xor
and
in
xchg
sbb
fiadd
(bad)
lahf
and
test
int3
jae
or
hlt
and
sbb
xchg
mov
(bad)
mov
mov
js
pusha
xchg
(bad)
pop
fwait
sub
jmp
xor
dec
sbb
sub
cdq
bound
and
or
int3
add
les
jmp
mov
leave
outs
jg
call
call
outs
pop
xor
ss
cmp
ficomp
out
mov
retf
sub
mov
out
nop
or
ja
sti
(bad)
fs
adc
mov
push
xor
xor
cmp
mov
int3
(bad)
cwde
gs
mov
inc
mov
and
pop
not
and
cld
int3
sbb
xchg
std
leave
sub
cdq
cmp
jnp
push
dec
push
(bad)
fstp
addr16
inc
xchg
clc
inc
mov
shr
in
push
dec
and
rol
call
stos
pop
shl
xchg
fwait
push
sbb
xchg
jecxz
sahf
xchg
clc
mov
fisubr
mov
(bad)
sub
add
out
(bad)
aas
sub
outs
jbe
sbb
or
sbb
test
jecxz
test
xchg
inc
xchg
mov
sub
cwde
out
popa
pop
fsub
je
jmp
(bad)
call
cmp
(bad)
fstp
comiss
push
pop
jmp
adc
dec
call
push
nop
cmps
pusha
mov
dec
bswap
dec
jmp
cmp
fwait
aas
jmp
sub
(bad)
cs
dec
dec
adc
dec
int
dec
(bad)
fnstenv
sahf
data16
mov
call
test
sbb
pop
cmp
pop
dec
mov
(bad)
cmp
es
out
test
into
or
neg
mov
xchg
fimul
loope
xor
mov
rol
cmp
hlt
sbb
out
pop
push
jmp
pop
sti
fld
sub
ins
mov
dec
and
lods
or
inc
fadd
push
sub
push
mov
adc
jp
retf
in
popf
ret
mov
imul
fsubr
ss
fisttp
add
mov
jle
dec
add
sar
add
xchg
mov
stos
mov
pushf
lahf
cmp
jns
into
or
inc
cmp
xor
pop
into
scas
cmp
aaa
dec
xchg
rcl
jno
ror
in
fsubr
in
push
sbb
repnz
jecxz
jae
add
jg
jp
in
stos
pop
inc
xor
fcom
arpl
(bad)
adc
push
out
arpl
pop
adc
dec
mov
add
cmp
mov
or
inc
shl
int3
cld
adc
and
mov
aad
(bad)
push
int3
xchg
dec
sub
sub
jnp
cmp
neg
and
sbb
push
leave
mov
imul
mov
lods
fiadd
jne
data16
jbe
inc
sti
or
jbe
cli
loopne
les
xchg
cli
mov
pushf
push
repz
loop
adc
sbb
mov
scas
retf
xor
retf
or
jmp
das
out
retf
push
mov
pop
outs
adc
or
sub
mov
(bad)
fwait
repnz
icebp
shl
jae
retf
loopne
push
std
cs
sub
dec
sub
jmp
cmp
hlt
jp
icebp
sub
sahf
dec
clc
adc
pop
cwde
scas
fstp
hlt
daa
inc
ficom
fadd
stc
(bad)
call
inc
inc
sub
fiadd
mov
inc
ret
xchg
(bad)
pop
add
and
test
pop
add
cmp
mov
inc
push
mov
jle
push
ror
jg
ja
mov
ja
hlt
xchg
les
add
xor
jmp
adc
inc
pusha
lea
pop
jl
adc
add
pop
jp
push
lahf
scas
out
jl
loopne
and
fs
out
jb
push
or
push
aad
int
pop
icebp
or
(bad)
cmps
xlat
cli
or
mov
or
out
push
mov
and
pop
push
pop
cmp
dec
xor
repz
lahf
je
add
(bad)
std
cmp
lods
dec
mov
adc
loope
and
rol
inc
add
idiv
(bad)
mov
add
ins
jno
iret
mov
pop
sub
out
push
(bad)
mov
arpl
jl
xor
jo
int
dec
or
movs
jbe
stos
add
dec
std
add
and
or
int3
imul
ins
fs
inc
inc
and
cwde
shl
retf
(bad)
push
sbb
mov
xor
(bad)
cmps
mov
inc
mov
pop
add
fisubr
cmp
xor
retf
iret
jb
or
loopne
adc
jg
mov
fisub
clc
mov
addr16
cmp
ret
mov
sub
retf
sub
cmp
add
push
adc
test
je
ins
add
sbb
push
cmp
push
in
mov
into
mov
pop
fsubr
jo
(bad)
test
call
and
add
mov
lock
rol
arpl
cld
jg
loope
gs
pop
xor
push
push
push
mov
in
xchg
in
dec
mov
push
iret
inc
cmp
pop
adc
mov
mov
ss
fcom
jns
inc
das
jbe
push
cli
mov
inc
test
fs
scas
and
jg
idiv
dec
mov
jbe
fldcw
jb
das
pusha
outs
in
jl
imul
hlt
les
test
dec
xlat
jae
sar
pop
push
mov
or
in
repnz
(bad)
in
icebp
cwde
jo
shr
adc
pop
(bad)
cs
popa
gs
dec
push
sub
sti
rcr
icebp
data16
sub
fcomp
pop
xor
lea
and
gs
push
sar
cmp
push
mov
shl
or
dec
pop
fisttp
or
fmul
dec
aaa
or
jnp
ja
push
arpl
push
loope
shl
sub
sub
adc
inc
je
add
gs
inc
icebp
jl
push
into
rcl
mov
ins
xchg
lock
mov
push
xchg
adc
add
xlat
inc
sbb
idiv
cmps
(bad)
movs
and
jne
jne
aad
sti
pop
(bad)
mov
xlat
xchg
into
push
xchg
mov
mov
ficom
call
push
xchg
xchg
loope
sti
ficom
fs
mov
mov
mov
xchg
sbb
jno
jge
jl
icebp
(bad)
fimul
dec
dec
dec
shr
adc
xchg
loop
jb
lods
pop
and
adc
movs
xchg
pop
call
sbb
xor
(bad)
cmc
fcmovnbe
mov
mov
or
aam
inc
(bad)
je
pop
pop
and
jmp
loope
pop
and
sahf
test
xchg
in
enter
rcl
sbb
sbb
lods
sbb
mov
loope
icebp
fisubr
(bad)
pop
xor
xchg
or
mov
js
hlt
mov
je
or
or
clc
or
and
and
in
loopne
push
je
fsub
ins
add
sub
lea
or
pop
cs
icebp
adc
fsub
sbb
sbb
test
inc
cmps
push
std
sbb
cmp
mov
adc
jp
mov
push
sbb
imul
jno
add
test
in
cmps
inc
bound
dec
in
add
fst
cmc
push
mov
cmp
add
daa
fs
fild
mov
test
add
and
push
aas
inc
pop
sub
or
ins
inc
or
sbb
sbb
mov
jl
mov
pop
push
jp
mov
xor
jbe
sar
std
jo
hlt
jnp
push
sar
mov
sbb
vpcmpgtw
xchg
pop
jb
gs
xor
xchg
jb
loopne
mov
in
fnstenv
sahf
push
sub
(bad)
je
lds
mov
add
adc
push
pop
mov
fwait
stc
fadd
push
or
ins
sub
lock
mov
jp
imul
icebp
push
add
out
test
xor
cld
in
test
xor
add
sbb
gs
xchg
popa
movs
retf
inc
or
daa
add
movs
xor
cmc
or
mov
adc
sub
inc
fs
mov
adc
push
sbb
test
in
mov
push
je
cmps
add
or
cli
mov
daa
pop
pusha
push
xlat
outs
lds
mov
mov
push
jle
js
(bad)
stos
pop
repz
mov
or
xchg
call
mov
xor
mul
gs
sar
cmc
std
int3
mov
and
push
fwait
mov
sub
idiv
cli
xchg
sbb
mov
lea
jne
repz
loop
dec
push
cmovne
mov
jmp
mov
push
cmp
fadd
adc
cld
jmp
push
or
mov
sub
(bad)
jns
jle
dec
(bad)
mov
stc
test
stos
pop
mov
fisttp
add
or
sar
jl
fnstsw
mov
in
test
cmp
imul
daa
popf
hlt
push
cmp
bound
adc
xor
icebp
or
aas
(bad)
(bad)
and
ret
jmp
add
fild
hlt
mov
mov
je
dec
dec
sbb
popf
sub
inc
jle
std
scas
push
mov
fsub
inc
jnp
push
jnp
and
jg
fidiv
stos
ja
stos
fistp
dec
addr16
scas
pop
xchg
shl
cmps
sbb
dec
jb
mov
and
mul
in
scas
cmp
call
jae
rol
fmul
jne
push
sub
xchg
cmp
mov
or
pop
mov
and
cmp
stc
fnsave
sub
test
or
or
adc
or
and
jno
call
ss
mov
fs
fwait
cmp
cld
or
fstp
enter
inc
xlat
mov
cmp
js
(bad)
retf
jnp
scas
jmp
out
addr16
mov
lahf
inc
mov
fiadd
jmp
lea
push
clc
test
test
out
add
xchg
test
iret
pop
iret
push
syscall
cld
ins
dec
in
sbb
inc
mov
adc
pop
cs
dec
mov
jg
cmp
cld
jp
mov
sub
addr16
aas
cwde
cmp
sbb
leave
(bad)
call
jmp
jmp
mov
outs
xor
jle
push
in
push
clc
mov
sbb
cmp
jae
ins
test
lods
xchg
leave
cld
cmp
les
int3
push
outs
out
jp
div
loope
popf
jnp
nop
aad
cmc
jns
mov
inc
cli
mov
jns
mov
mov
pop
fwait
pusha
retf
sub
cmp
mov
repnz
sub
aam
xchg
sub
(bad)
push
jp
mov
dec
cli
add
sahf
add
leave
not
xchg
inc
xchg
xchg
gs
jmp
and
leave
ds
gs
sbb
mov
clc
in
push
out
xchg
adc
mov
or
lea
xchg
inc
pushf
add
inc
add
mov
mov
or
dec
xchg
adc
jae
jmp
(bad)
mov
mov
int3
dec
pop
mov
cmp
adc
out
inc
cmps
xchg
push
cli
dec
inc
(bad)
xchg
mov
jmp
retf
jno
into
push
vhaddps
hlt
rcr
adc
push
jns
mov
xchg
nop
fdivr
xor
xor
mov
sub
jmp
sub
inc
jecxz
mov
mov
shl
push
lods
daa
(bad)
out
jno
and
mov
aas
or
rol
jp
shl
add
xchg
jne
(bad)
jg
ins
retf
call
les
daa
xchg
dec
imul
dec
shl
inc
leave
sub
mov
pushf
addr16
add
push
stos
aas
add
pop
sbb
inc
push
push
push
push
sbb
jl
xor
mov
aam
cld
xchg
and
shr
cmps
movs
adc
inc
enter
jecxz
icebp
cdq
call
mov
mov
pop
inc
adc
xor
pop
jg
adc
sbb
sahf
test
add
sbb
inc
enter
(bad)
(bad)
outs
shl
sbb
inc
dec
pop
clc
leave
rcr
lahf
out
mov
fadd
pusha
push
and
inc
inc
mov
loop
shl
inc
shl
or
(bad)
jmp
leave
lods
and
jge
(bad)
clc
fsubr
stos
mov
fdivr
ror
jge
repz
ja
mov
add
fucomp
imul
imul
inc
mov
je
push
sub
icebp
fmul
rcl
in
cmp
and
(bad)
retf
mov
add
dec
hlt
scas
scas
xchg
ret
retf
out
loope
add
lds
in
int
lods
hlt
jnp
aad
mov
aas
add
fisttp
repz
outs
add
inc
neg
pop
sti
mov
loopne
repz
outs
xchg
mov
movs
ficom
mov
push
(bad)
jb
icebp
leave
loope
lods
hlt
movs
xchg
sti
inc
sbb
sbb
dec
mov
in
pop
div
shl
mov
dec
push
les
mov
int3
cld
cmps
mov
sub
xor
test
mov
push
repz
pusha
int
xchg
mov
dec
xor
sub
gs
add
aam
bound
dec
leave
test
sbb
cmp
dec
mov
and
popf
cmp
or
dec
jo
xchg
fidivr
lea
sub
icebp
cmp
jmp
pop
and
mov
push
jb
pop
mov
int
jmp
fwait
xor
popa
sub
hlt
outs
loop
and
shl
daa
jno
notrack
fiadd
xchg
ins
sbb
cli
sub
xchg
sub
neg
sub
fisttp
mov
add
(bad)
pop
push
test
and
scas
sbb
sbb
pop
cdq
adc
aas
les
or
stos
in
inc
ja
clc
aad
fisubr
and
inc
loope
movs
push
pop
fwait
push
xor
and
movs
js
idiv
movs
xchg
(bad)
mov
cmp
jmp
push
cmp
and
shr
leave
ds
daa
iret
or
bound
pop
xchg
or
or
shr
fild
adc
movs
and
(bad)
mov
dec
outs
jmp
xor
push
mov
ror
cmp
xor
lods
jg
and
mov
(bad)
lds
aaa
and
add
cli
adc
nop
mov
jnp
push
mov
mov
stos
adc
jb
inc
dec
out
sub
xor
sbb
call
and
xchg
gs
out
pushf
or
fstp
mov
jns
inc
out
sub
retf
stos
sbb
mov
inc
out
cld
stos
and
xchg
xchg
out
mov
or
ret
mov
xor
dec
or
push
xor
stos
popf
cmp
popf
outs
sub
les
mov
jne
aaa
mov
cmp
ss
arpl
fidiv
push
sub
or
sti
in
mov
push
outs
fs
repnz
xor
test
mov
leave
cmp
xor
jno
or
jae
ficomp
retf
or
test
fnsave
stc
mov
icebp
or
jle
mov
xchg
in
rcr
xlat
or
push
leave
test
addr16
inc
repnz
add
dec
repz
push
pop
mov
popa
aad
and
je
shl
fsubr
ss
or
mov
mov
and
adc
cmp
add
fsub
pushf
ffreep
ins
out
les
add
or
pop
dec
dec
(bad)
(bad)
cmp
and
cmps
fs
or
lahf
fs
sub
mov
xor
sub
lods
mov
mov
mov
sbb
mov
push
push
sti
ror
sahf
std
jne
inc
pop
mov
or
cmp
enter
pop
fidivr
pop
fdiv
test
mov
ins
mov
jno
dec
(bad)
dec
popa
pop
in
stos
lds
pop
push
fist
sbb
push
and
dec
push
jp
cmp
rcr
inc
jns
push
xor
mov
and
fsubp
and
sub
and
add
dec
(bad)
push
mov
pop
test
imul
pop
or
push
dec
cmp
mov
jne
pop
mov
jbe
aam
inc
rcr
fsubr
fist
sub
pop
xchg
loopne
mov
push
and
div
sbb
fld
mov
lahf
ret
mov
sub
sbb
pop
mov
rcr
ret
push
jmp
xor
sbb
or
lock
sti
cmp
pop
out
cld
lods
fcmovbe
stc
shl
add
(bad)
adc
es
pop
out
pushf
push
das
dec
in
dec
xchg
inc
shl
in
adc
mov
hlt
mov
cmp
call
mov
cs
rcr
or
ss
dec
lods
daa
shr
(bad)
cmc
cmp
mov
callw
jecxz
cdq
cld
imul
shl
cld
inc
ror
faddp
dec
cmp
mov
xor
fmul
inc
fnstenv
mov
(bad)
repnz
push
fst
xchg
push
dec
jg
cmp
movaps
not
inc
adc
lock
push
pusha
xor
je
loopne
jnp
xchg
pushf
in
stos
sbb
dec
jp
or
outs
shl
das
mov
or
adc
push
sub
in
cmp
xor
sub
test
push
or
pop
pop
xor
dec
in
mov
(bad)
mov
or
or
sbb
inc
mov
sub
cmps
out
jo
sbb
mov
dec
imul
mov
gs
sahf
lahf
(bad)
shr
in
inc
and
mov
(bad)
repz
or
pop
adc
retf
jmp
dec
mov
not
adc
(bad)
mov
pop
dec
mov
jmp
popa
pusha
push
sbb
or
repnz
hlt
mov
push
ret
inc
mov
xor
xor
mov
in
mov
dec
xchg
fsub
out
(bad)
iret
jle
push
push
xor
sbb
aas
ret
pusha
sar
xchg
push
leave
dec
xchg
(bad)
test
and
add
sub
mov
retf
sbb
dec
xchg
adc
cmps
cli
push
std
pop
sub
or
in
dec
push
mov
mov
ret
push
icebp
mov
pop
arpl
int3
sbb
lods
pop
cmp
jne
sub
fsub
push
sbb
je
ret
out
mov
mov
call
push
mov
(bad)
dec
daa
dec
cdq
int
mov
pusha
mov
test
xor
das
xor
in
push
xor
cmp
jae
and
ror
div
not
mov
es
ror
adc
shl
add
sbb
aad
ficomp
adc
jp
scas
mov
ins
mov
inc
cmp
ds
test
or
and
jno
icebp
xor
mov
aad
mov
add
loope
ret
pop
retf
mov
pop
test
repz
dec
mov
dec
mov
and
xor
adc
mov
adc
gs
out
cmc
and
sbb
in
pop
jge
xor
add
xchg
mov
fild
mov
and
call
je
xchg
jno
pop
sub
push
pop
mov
in
scas
cmp
lahf
adc
xor
fsubrp
fdivr
dec
cwde
jmp
push
in
mov
out
sub
inc
ret
bound
mov
xchg
popa
push
inc
lods
sub
outs
arpl
mov
jno
cmp
icebp
ficomp
repz
call
fld
mov
je
loopne
cmp
push
loopne
push
mov
in
jbe
imul
int
in
sbb
ror
and
fucomp
cmp
lds
arpl
idiv
add
(bad)
cli
pop
cmp
out
or
dec
pop
sub
(bad)
jae
or
or
dec
and
rcl
jnp
out
and
neg
fwait
dec
xchg
movs
push
dec
fcom
imul
popa
jns
or
aad
dec
mov
dec
jb
inc
mov
push
mov
leave
inc
out
fdivrp
mov
xabort
ins
fnstenv
or
adc
aaa
inc
add
inc
outs
test
int3
push
movs
mov
aad
out
sahf
jbe
inc
repz
inc
retf
sbb
fnsave
sti
jmp
dec
mov
cmp
mov
int
ja
pop
retf
dec
jmp
xchg
fdivr
aaa
movs
adc
sub
loopne
ins
or
scas
scas
dec
loope
icebp
push
add
cmp
sbb
jbe
cmp
(bad)
cmp
mov
sub
aas
inc
in
jle
aam
mov
sub
call
inc
inc
in
daa
mov
or
add
pop
sub
maxps
jle
add
xchg
and
add
movs
add
jo
hlt
xchg
(bad)
cld
and
aas
mov
cld
idiv
mov
movs
jecxz
ret
sub
cmp
daa
mov
sbb
push
std
mov
fs
cmovl
xor
cmp
aaa
data16
aad
inc
scas
gs
nop
data16
sbb
mov
sti
cmp
push
and
mov
imul
das
mov
outs
sbb
mov
(bad)
xchg
lahf
mov
test
icebp
fwait
lods
sub
retf
pushf
sub
jno
sbb
rol
ror
cmp
loope
and
int
cld
sbb
fs
dec
sbb
sbb
xor
std
(bad)
mov
movs
add
gs
out
dec
pusha
pop
scas
cmp
mov
sar
lods
fdivr
adc
xchg
mov
xor
pop
addr16
mov
mov
enter
push
aam
or
gs
sbb
inc
cmp
fwait
inc
mov
out
cli
mov
dec
call
sbb
xor
nop
ret
inc
dec
lods
ins
mov
sub
pop
bound
outs
mov
out
cmp
add
pop
jmp
inc
leave
stos
cmp
mov
add
imul
mov
mov
jo
ja
mov
or
fstp
sbb
jle
jne
out
rcr
ror
outs
arpl
push
fnstenv
dec
ins
ror
cld
and
pop
push
xchg
pop
xor
test
add
mov
push
jbe
xchg
imul
stos
aas
inc
shl
jmp
sub
pusha
mov
mov
es
ret
mov
ins
mov
dec
inc
pop
adc
adc
pop
imul
sub
stc
xchg
imul
icebp
popf
cld
ins
lock
sbb
(bad)
(bad)
push
jl
mov
test
inc
cmp
jne
add
xor
cmovns
xchg
sub
outs
test
test
sti
fst
mov
rcl
repz
pop
fild
in
xor
fld
pushf
add
test
sbb
dec
add
inc
ins
les
push
call
call
lods
mov
xor
fist
sub
dec
push
daa
add
mov
push
out
jb
rol
push
mov
push
xor
xor
or
in
mov
ja
xor
xchg
pusha
fld
pop
mov
imul
mov
in
dec
sub
retf
jo
and
add
cmp
(bad)
xchg
enter
jmp
int
cld
aam
aad
inc
mov
repz
add
or
mov
nop
inc
push
sbb
xor
adc
jecxz
pop
int3
adc
xchg
adc
stos
fwait
push
arpl
call
sbb
add
popf
stos
adc
and
mov
not
hlt
fsub
fstp
sub
pushf
push
sbb
xor
sub
pop
or
pushf
mov
adc
sbb
or
out
sbb
int3
(bad)
repz
xchg
dec
(bad)
loop
test
cmps
repz
pop
or
mov
enter
xchg
(bad)
jge
std
call
xor
xchg
inc
test
call
cdq
mov
xor
ja
inc
xor
not
sbb
ins
out
and
dec
jmp
cmps
mov
push
fs
mov
(bad)
popf
mov
sub
nop
cmps
push
into
test
dec
push
push
dec
outs
test
loop
pop
loope
cmp
sbb
pop
stc
adc
les
add
inc
fstp
loopne
shr
mov
aam
repz
dec
inc
cdq
hlt
mov
jno
or
mov
cwde
clc
seto
sub
nop
pop
scas
loop
push
outs
popf
or
jp
xchg
in
lea
xchg
jle
pop
cli
fisubr
rcr
call
mov
xor
sbb
jne
fwait
loop
push
ficomp
clc
push
ret
cli
mov
int3
sbb
movs
pushf
bound
in
cli
loopne
xchg
jge
push
pop
mov
inc
push
jg
out
jmp
movs
pop
push
push
mov
in
das
lahf
mov
push
push
jle
lahf
jmp
mov
je
scas
add
in
in
gs
cmp
cmp
mov
pop
lods
jns
mov
dec
adc
and
ror
in
(bad)
inc
dec
sbb
(bad)
mov
cmps
mov
or
or
dec
(bad)
xchg
cli
sbb
adc
adc
jnp
mov
jb
pushf
pop
or
mov
iret
jo
cld
pop
cmp
push
pop
mov
adc
jne
leave
clc
pop
ret
sub
psubb
adc
dec
add
ret
mov
and
cmp
daa
cmp
sar
out
pop
xor
mov
fwait
mov
in
(bad)
and
xor
mov
es
or
jbe
aad
in
and
movs
ja
scas
mov
push
cmp
mov
inc
pop
test
jbe
or
js
jno
adc
sub
cmps
inc
test
xchg
mov
xchg
popa
push
cmp
pop
xchg
add
cli
cmc
inc
sub
add
repnz
xor
ret
scas
das
xor
push
sbb
adc
add
rcr
out
call
jmp
stc
fcomp
pop
ins
or
jg
je
xchg
in
rol
inc
push
dec
dec
adc
mov
adc
mov
repz
test
clc
scas
call
or
cmps
jg
neg
out
inc
div
inc
dec
dec
sahf
movs
test
mov
sbb
retf
pop
fisubr
cmp
sub
mov
adc
ret
push
out
push
push
daa
loope
sub
inc
lds
fild
jp
out
scas
or
test
sti
mov
mov
mov
les
pop
lea
pop
push
push
cmp
add
loopne
ins
or
shl
xchg
mov
add
sub
inc
xchg
pop
sbb
jmp
daa
outs
cmps
call
jne
ds
push
cwde
bound
pop
push
in
adc
and
mov
inc
(bad)
test
jb
xchg
add
in
jae
ret
mov
jp
outs
cmp
sbb
dec
in
jmp
scas
mov
inc
ficomp
xchg
out
or
js
mov
les
push
or
(bad)
jecxz
pop
cmp
cmp
xchg
fcmovb
or
bndstx
cmp
test
or
in
fldenv
push
mov
mov
scas
xchg
push
xor
mov
and
outs
idiv
xchg
or
and
push
ror
cmp
xor
push
les
jp
test
push
sti
ret
sahf
sbb
xor
shl
fwait
in
hlt
fst
fldcw
xor
xchg
push
loopne
popa
shl
lds
in
int
pushf
push
stos
jmp
or
aaa
pop
dec
fimul
push
xor
push
pushf
in
in
push
test
ss
std
jmp
in
test
(bad)
arpl
scas
or
mov
jnp
retf
mov
dec
push
or
dec
in
pop
stos
dec
dec
jp
xor
call
into
and
xor
jg
pop
stos
jb
mov
loope
fs
arpl
cdq
fcom
cmp
ins
ss
out
out
xchg
add
jne
add
(bad)
fcom
mov
xor
pop
out
fimul
pushf
mov
mov
and
cmps
into
cs
adc
xchg
pop
imul
and
mov
xor
inc
hlt
(bad)
cmp
scas
fwait
adc
sahf
jmp
push
fmul
and
push
jmp
sub
sub
inc
int3
(bad)
outs
inc
std
jo
(bad)
sbb
sar
pop
aaa
jno
pop
(bad)
nop
sub
(bad)
xlat
mov
mov
nop
lock
pop
std
xchg
bnd
jmp
mov
in
mov
(bad)
retf
pop
cmp
(bad)
outs
loop
rcl
mov
jle
popf
and
out
ret
xor
call
adc
jo
shl
dec
mov
out
xlat
mov
in
sub
mov
mov
rol
dec
imul
js
call
outs
pop
outs
fstp
adc
inc
xor
mov
leave
cmp
gs
dec
cmc
push
adc
mov
inc
add
mov
arpl
sub
adc
inc
loopne
mov
add
pushf
stos
loopne
push
loopne
cmps
dec
into
adc
dec
push
xor
std
shr
popa
add
cmp
xor
jmp
cs
idiv
fistp
cmp
mov
push
add
fbstp
xchg
mov
out
cmps
mov
call
mov
cmp
lds
xchg
push
hlt
shl
popf
pop
js
ja
loop
lods
adc
das
or
(bad)
sar
push
sahf
loop
ror
sbb
and
add
push
mov
xchg
in
mov
push
push
rol
inc
cmps
adc
mov
sbb
sub
in
gs
rcl
xchg
jae
mov
jl
sub
cmp
sub
call
daa
outs
xor
xlat
les
loop
push
jo
lds
add
jbe
leave
stos
dec
stc
outs
or
int
jns
cmps
jmp
enter
and
jae
jmp
cmp
(bad)
cdq
sub
daa
stc
jbe
out
das
test
dec
pop
dec
test
xchg
movs
cld
xor
call
sbb
or
loop
pop
mov
test
push
xchg
js
push
not
lahf
mov
sub
not
mov
lock
retf
jno
xchg
sbb
pop
push
add
jmp
xor
aam
ins
sub
sbb
cmp
into
retf
popf
mov
out
idiv
daa
mov
pop
stc
fimul
ss
mov
aam
leave
and
std
jbe
adc
and
cld
push
inc
cli
imul
sub
lahf
jge
leave
cmps
std
movs
jnp
jno
arpl
cs
divps
aas
adc
mov
inc
sbb
test
in
push
jmp
sti
movs
pop
jmp
loop
xchg
sub
(bad)
push
or
(bad)
hlt
push
out
out
adc
jp
je
adc
mov
jmp
cmp
scas
inc
pop
ins
in
cmp
sbb
cs
jb
(bad)
mov
mov
jno
pusha
aam
jmp
lods
cdq
or
jbe
dec
movs
arpl
shld
jg
mov
into
xchg
cmp
mov
mov
add
retf
mov
cmp
xor
fmul
xlat
xchg
push
pop
push
jle
leave
cli
(bad)
fisub
in
icebp
add
test
mov
int
jnp
inc
retf
jge
mov
in
dec
dec
sbb
je
adc
cmp
xchg
mov
sbb
bnd
or
pop
ja
(bad)
scas
sti
adc
add
and
mov
scas
pusha
mov
mov
mov
push
popa
test
stos
sbb
xor
sar
dec
(bad)
stc
mov
push
xlat
test
xchg
mov
sub
out
xor
sub
iret
shr
adc
int3
xor
les
test
aad
rol
dec
(bad)
pop
nop
jno
les
jle
mov
jbe
outs
xchg
sub
add
push
jns
mov
popa
and
sub
rcl
inc
(bad)
pop
xchg
iret
mov
push
push
xchg
loopne
jmp
sub
cwde
jmp
out
mov
gs
das
or
pop
test
(bad)
xlat
data16
les
lods
out
cdq
rcl
mov
sub
dec
clc
mov
daa
mov
pop
mov
call
and
mov
dec
clc
adc
mov
(bad)
(bad)
jle
xor
push
jne
mov
sub
add
std
sub
xchg
imul
stc
and
stc
sar
xchg
hlt
(bad)
pop
mov
jno
repnz
cs
pop
arpl
cmp
aad
sbb
out
mov
mov
repz
mov
pop
jne
mov
mov
es
jge
jecxz
mov
pop
mov
inc
jb
cdq
sbb
jmp
mov
push
(bad)
lahf
out
jo
(bad)
fist
push
arpl
push
loop
popf
scas
xor
int
xor
and
mov
adc
or
mov
sub
or
ds
sub
mov
ins
lock
test
mov
scas
add
mov
retf
jp
inc
shl
sub
dec
into
jecxz
or
rcr
mov
dec
or
mov
cwde
icebp
into
inc
push
or
test
push
scas
sbb
pop
jns
pusha
int3
sar
mov
inc
push
repnz
call
cmp
repz
aam
xchg
sar
or
out
lock
mov
xchg
hlt
adc
xor
lods
repz
push
adc
and
push
add
mov
or
ror
in
xor
in
mov
jge
xchg
pop
(bad)
retf
jl
mov
rol
pop
or
dec
cld
or
dec
stc
test
lock
add
test
dec
sbb
xor
or
xor
xchg
xor
out
popa
mov
in
ins
mov
mov
fcom
hlt
(bad)
xor
mov
fucomi
lahf
je
cmovs
(bad)
mov
push
fwait
stos
bound
out
mov
pop
push
in
pop
cmp
(bad)
movs
pop
dec
xor
inc
push
out
mov
loop
fsub
dec
movntps
nop
mov
cmps
mov
inc
cmp
(bad)
outs
ins
add
and
in
(bad)
push
pop
in
rol
xchg
pop
or
mov
push
(bad)
mov
mov
and
mov
js
xchg
(bad)
jmp
mov
pop
ret
sti
jmp
sahf
dec
(bad)
cld
add
test
cmps
pusha
imul
(bad)
pop
xchg
xchg
(bad)
cld
das
jl
lds
pop
retf
bound
mov
mov
call
iret
aas
lahf
adc
out
cmp
inc
lods
inc
mov
in
das
cwde
fwait
inc
stc
fcom
(bad)
xchg
mov
pop
clc
out
mov
adc
lods
cmc
and
cwde
test
sub
jo
jbe
mov
cdq
mov
gs
mov
out
cwde
out
mov
dec
leave
push
call
cmp
(bad)
jecxz
retf
ret
retf
ja
mov
stc
hlt
pop
mov
mov
sti
sbb
das
and
and
(bad)
int3
shr
rol
fld
test
scas
sub
cmc
test
jecxz
cmps
xor
sahf
inc
xor
aad
jmp
pop
push
test
aas
loop
test
and
sub
int3
nop
jbe
sub
ins
mov
(bad)
cmp
arpl
lods
call
inc
sahf
xchg
jmp
test
sbb
sbb
rcl
adc
push
push
inc
cmp
pushf
dec
repz
pop
jmp
or
cld
xor
js
mov
adc
ds
push
cmp
sbb
dec
adc
dec
call
mul
sbb
or
rcl
in
int3
push
xor
retf
xchg
mov
mov
xchg
add
sbb
in
pop
cmp
xchg
aad
mov
(bad)
mov
fnstcw
mov
and
ins
mov
dec
jg
mov
push
mov
mov
outs
sbb
ins
inc
jne
inc
cmp
call
es
and
(bad)
push
jg
out
scas
cs
sbb
sar
mov
movs
je
jge
les
push
mov
ins
ds
pop
inc
inc
sbb
sbb
mov
cmc
adc
enter
push
xchg
xchg
jb
sbb
mov
cmc
shr
cs
movs
sbb
fsubr
fcom
inc
cmp
aas
cmp
mov
stos
mov
ficomp
xor
jge
pop
fucom
pop
mov
out
push
call
jns
sub
and
into
pop
push
inc
or
jns
mul
sbb
es
push
mov
push
push
(bad)
fisubr
and
sub
mov
sub
cmp
mov
fwait
jbe
test
dec
mov
lock
idiv
lock
pop
repz
xchg
mov
out
test
mov
popa
scas
ss
and
mov
mov
xchg
pop
fisttp
add
inc
call
inc
pop
aas
xrelease
push
mov
push
mov
push
jo
cmc
ds
jnp
adc
inc
cmps
js
sbb
dec
test
mov
neg
push
push
mov
cli
(bad)
std
xchg
imul
sbb
sbb
push
cli
imul
mov
push
sub
ret
imul
setae
jo
loop
stos
mov
jns
and
cmp
retf
mov
test
push
xor
add
push
ret
or
les
xchg
cwde
jg
fwait
push
push
xor
jnp
mov
jecxz
push
dec
mov
setg
stc
fdivr
xor
sar
ins
stos
add
xchg
cli
jmp
imul
test
push
jno
mov
or
(bad)
int3
dec
cmp
sub
clc
sbb
jge
adc
push
sub
cmc
lea
xchg
out
mov
loopne
dec
adc
inc
(bad)
adc
push
cmp
ins
pusha
fldlg2
dec
mov
ds
inc
inc
add
lahf
or
mov
and
dec
xor
and
dec
sbb
adc
mov
dec
das
pop
call
movs
movs
mov
in
les
add
(bad)
fmul
add
shl
aad
movs
pop
push
add
mov
aas
fisubr
add
cs
jo
in
lds
inc
movs
call
xchg
jne
pop
mov
mov
cmp
jns
fs
mov
rol
xchg
push
fucom
pushf
or
pusha
push
dec
jno
ret
int3
mov
das
in
jnp
cmps
dec
rol
es
(bad)
div
add
xchg
(bad)
xlat
rcl
push
lahf
stc
push
cmp
loope
test
mov
lea
xor
cmps
sbb
mov
and
or
inc
xor
adc
into
sub
jne
movs
xchg
mov
sub
mov
xchg
scas
mov
or
pop
int3
ror
popf
(bad)
sbb
xor
sbb
ins
fld
xchg
call
and
test
mov
mov
and
cmp
ins
mov
pop
(bad)
lods
sub
mov
push
fcmove
lods
push
aaa
push
out
sbb
add
dec
xchg
ficomp
jge
loop
add
(bad)
jmp
pushf
mov
scas
jns
mov
fiadd
pop
fwait
call
cmps
call
mov
das
xchg
lock
jge
test
cmp
xchg
fisub
mov
xor
iret
jb
loop
jno
test
adc
repz
push
push
out
xor
test
punpckhwd
mov
(bad)
jns
(bad)
and
popf
cmp
pop
aaa
pop
es
scas
jge
sub
cs
pop
sub
arpl
movs
xchg
mov
add
ss
scas
mov
mov
cmp
loopne
dec
pop
outs
test
mov
aad
inc
cmp
mov
inc
loop
aaa
leave
movs
jae
and
out
jl
add
fst
pop
or
push
push
stos
lds
test
pop
sub
jp
jnp
lods
add
mov
cmp
cwde
adc
mov
call
stc
popa
xor
jmp
repnz
movs
test
cmp
sbb
dec
retf
popa
test
arpl
sub
(bad)
mov
or
gs
cli
jmp
mov
in
xor
push
xchg
sub
jbe
jb
in
jecxz
sbb
fadd
push
pop
fisttp
into
xor
bound
int
int
outs
and
xchg
in
repnz
in
popf
adc
outs
mov
mov
pop
aam
xchg
push
push
push
ins
and
cmp
inc
mov
shl
gs
pusha
jo
icebp
rcl
push
cmp
je
ins
sbb
es
jmp
andps
dec
push
jmp
sub
test
sti
jbe
stc
imul
out
fiadd
sar
aad
sahf
push
xor
jne
daa
(bad)
mov
in
jl
pop
imul
ror
add
push
jmp
mov
pusha
clc
cmc
jbe
int3
add
loop
movs
sbb
cwde
in
cmps
and
ins
fldl2e
imul
add
ins
sbb
jg
jg
jge
pop
ror
(bad)
out
enter
jl
inc
pop
mov
push
aad
mul
mov
add
mov
jl
cli
les
(bad)
cmp
cmp
inc
cmp
add
outs
imul
sbb
call
mov
inc
ror
sub
add
retf
mov
xor
jge
cmp
jg
dec
call
fadd
into
adc
pop
lds
mov
mov
in
inc
pop
ret
inc
mov
in
aam
sahf
add
pop
sbb
pop
xchg
and
push
xchg
and
iret
ds
mov
hlt
stc
add
(bad)
in
jg
(bad)
shr
and
fild
arpl
push
mov
into
fild
cmp
dec
in
fcomp
retf
mov
div
mov
cmps
sub
into
mov
cwde
je
scas
outs
fcom
mov
xchg
mov
jge
enter
leave
addr16
push
push
add
mov
sahf
repz
mov
push
clc
and
lods
xor
test
mov
lock
aas
xor
push
pop
iret
in
(bad)
mov
aas
adc
add
mov
push
pop
je
out
sub
test
add
xor
push
adc
nop
imul
sub
popf
(bad)
lds
mov
addr16
jg
adc
mov
mov
jmp
dec
inc
mov
adc
pop
fwait
mov
pop
add
jecxz
inc
mov
fstp
cmp
cmp
jno
ret
or
or
cmp
jle
mov
mov
xchg
push
inc
or
lahf
xchg
or
je
cli
dec
call
leave
xor
dec
imul
out
into
dec
mov
push
jnp
add
not
mov
test
ins
mov
outs
xchg
pop
push
lahf
sbb
jbe
call
sub
cs
fld
adc
push
push
ret
mov
xor
xor
push
add
data16
push
cmc
ins
retf
add
clc
add
mov
push
loope
jmp
lods
adc
ins
add
stos
and
pop
test
idiv
or
mov
cmp
sub
(bad)
jnp
iret
scas
cmp
mov
rcl
pop
enter
movq
popa
sahf
test
lahf
out
mov
scas
fsub
cmp
add
mov
fs
std
mov
pop
add
jg
test
or
fs
mov
out
fwait
pop
xchg
fnstsw
xor
cmc
arpl
or
(bad)
loope
pop
ins
mov
out
nop
push
push
les
in
pop
aas
adc
jmp
xchg
jnp
call
fwait
or
pop
pop
dec
push
stos
sub
or
in
push
sub
(bad)
es
mov
lahf
jg
xchg
es
adc
and
push
sub
push
mov
daa
or
lock
push
xchg
add
iret
in
bound
ret
in
test
and
mov
xor
mov
repz
add
push
lock
scas
rcl
int
and
lods
inc
dec
(bad)
retf
fnstenv
xor
clc
imul
loop
cmps
pop
shr
add
mov
aad
(bad)
out
pop
nop
xor
ret
sbb
(bad)
stos
out
bound
mov
sti
mov
imul
jbe
shr
mov
pusha
mov
pop
(bad)
sbb
cwde
aas
rol
push
shr
sbb
pushf
hlt
pop
inc
icebp
push
inc
add
push
mov
sti
inc
fdiv
mov
je
add
fiadd
arpl
cmp
fincstp
and
and
ins
mov
leave
loop
mov
repz
adc
rcr
and
mov
xor
mov
je
ret
ror
dec
arpl
les
cmps
jmp
ss
or
and
(bad)
les
ss
mov
push
jns
push
loop
neg
push
xor
test
shl
loope
nop
movs
xor
lahf
je
xor
add
mov
xchg
jp
dec
imul
jg
pusha
fs
arpl
movs
dec
lock
mov
pop
mov
in
pop
mov
mov
ret
arpl
in
cld
adc
in
adc
xchg
pop
jns
gs
jmp
jge
rol
aam
sub
inc
shr
fistp
pop
or
in
cmp
push
xor
idiv
loope
outs
rcl
retf
adc
xor
mov
mov
xor
call
pushf
dec
das
jae
fadd
xchg
jae
loope
(bad)
daa
stc
lock
inc
add
xor
stc
inc
fsub
retf
jae
cmp
ret
out
mov
out
jl
mov
cmps
nop
dec
and
and
mul
jnp
lahf
push
fisubr
outs
mov
je
ja
jmp
push
xor
sbb
ficomp
ins
in
ins
push
cli
(bad)
inc
outs
pop
jne
int
xor
sbb
sbb
loope
jns
outs
cld
jecxz
clc
lods
jecxz
xchg
inc
inc
sub
ds
dec
sub
fwait
sub
xor
adc
je
adc
jmp
push
into
push
(bad)
or
jge
retf
ja
and
ret
mov
xor
push
or
xor
sar
gs
xor
popf
in
mov
inc
lods
into
inc
xor
test
stc
loopne
mov
mov
lds
jo
or
inc
iret
fsub
push
rcr
dec
retf
pop
mov
pop
mov
cmc
(bad)
rol
daa
packssdw
sbb
pop
mov
hlt
mov
rcl
sbb
inc
repz
sbb
adc
arpl
cmps
mov
sub
push
cmp
jp
add
clc
loop
shl
sahf
mov
mov
icebp
mov
and
in
jl
and
jmp
add
imul
jp
ss
stos
adc
dec
retf
add
dec
mov
adc
nop
xchg
cld
(bad)
xlat
popa
lahf
or
inc
push
movs
test
movs
cmps
sub
cwde
(bad)
xchg
ficomp
call
or
xor
movs
aaa
cld
je
lods
push
mov
mov
ja
sub
mov
mov
data16
ror
out
jns
inc
iret
gs
push
fld
inc
clc
pop
push
icebp
pop
pop
imul
jge
jmp
in
mov
push
jge
test
arpl
mov
mov
shr
or
dec
movs
cwde
aad
jmp
push
test
lahf
xor
mov
jl
adc
xchg
add
dec
pusha
(bad)
aaa
or
int
add
jae
mov
pop
xor
(bad)
sub
pusha
push
push
mov
jae
pop
and
add
sti
and
js
jbe
sti
inc
cld
int3
test
and
outs
pop
sbb
dec
fwait
shl
test
std
cmp
mov
sbb
repnz
mov
ror
mov
dec
jge
out
and
(bad)
or
pop
jno
std
imul
icebp
push
cmp
cmp
retf
movs
xor
repnz
not
add
jl
hlt
jae
and
cld
(bad)
scas
sahf
pop
or
pop
add
xchg
iret
mov
les
popa
lods
(bad)
jae
xor
jge
jmp
xor
cmp
inc
cmps
fbld
jmp
push
test
mov
mov
cmps
push
xchg
inc
test
les
sub
mov
fdiv
mov
mov
push
xchg
psllw
iret
stos
push
sub
lds
mov
scas
dec
jge
jl
or
imul
lods
mov
jns
sub
lock
xchg
xor
ror
ret
jmp
and
mov
loop
leave
adc
or
xor
scas
fsubr
loope
jl
sub
mov
or
inc
xor
fdivr
sbb
cmp
push
xor
add
or
and
repz
sub
fs
les
cmps
jbe
push
xchg
and
jge
push
xchg
push
pop
addr16
sahf
sub
adc
xchg
sub
sub
cmp
test
push
pop
into
int
dec
add
gs
dec
or
pop
out
pop
loope
pop
or
call
(bad)
dec
ds
jle
in
cld
xchg
mov
sbb
cdq
shl
ins
sbb
push
inc
in
arpl
pushf
jg
mov
pand
dec
jo
std
arpl
sub
out
or
mov
repz
in
xor
dec
push
icebp
lock
cs
push
call
push
outs
sbb
push
inc
call
cmps
lea
pusha
adc
jle
or
push
dec
popa
cmp
inc
mov
(bad)
xchg
fisttp
inc
or
loop
lds
pop
mov
jae
fs
das
jae
loopne
mov
inc
inc
mov
(bad)
push
mov
cmovge
cld
jle
test
in
pop
xor
test
and
add
out
ja
jle
lds
loopne
ins
repz
push
or
pop
les
xchg
lock
ss
retf
mov
lahf
add
jmp
push
(bad)
lea
push
sahf
mov
mov
dec
lahf
xchg
and
fist
mov
mov
pop
dec
sub
fisttp
mov
fiadd
push
xchg
clc
(bad)
adc
mov
and
xchg
mov
into
movs
ins
pushf
pop
push
pop
pop
or
cmp
pusha
xor
aad
test
sar
jmp
or
and
mov
or
popf
push
mov
cmp
mov
fnstcw
push
adc
lahf
ins
push
arpl
popf
or
enter
paddusw
pop
mov
mov
or
mov
pop
iret
hlt
push
mov
fcomp
in
dec
out
cdq
push
(bad)
xchg
mov
pop
push
jp
or
xor
inc
mov
mov
test
(bad)
in
or
ds
or
mov
adc
stos
add
xor
sub
into
cmp
loopne
mov
(bad)
adc
rcl
int
dec
mov
mov
mov
mov
outs
lods
adc
cmp
lea
adc
sahf
cmp
fmul
clc
rol
lods
cwde
out
adc
es
rol
adc
inc
mov
test
fild
jle
mov
mov
fucom
push
mov
call
and
mov
pop
dec
add
lock
adc
push
push
jns
cmp
mov
xchg
xchg
push
fimul
test
inc
mov
jge
movntq
out
lock
aad
cmp
mov
mov
scas
aas
adc
push
pop
mov
xchg
adc
add
inc
aad
fst
cmp
mov
das
scas
or
aas
add
or
xor
sbb
test
ja
sub
daa
dec
sbb
mov
xchg
fldcw
inc
movs
add
sahf
push
stos
ja
leave
scas
sbb
test
sbb
push
lahf
in
jb
test
lidtd
push
cld
dec
mov
jo
loopne
xor
test
inc
ret
adc
xchg
and
sub
test
sub
imul
mov
cld
movs
(bad)
cli
mov
xchg
mov
xchg
out
jp
xchg
loopne
in
les
inc
cwde
movs
arpl
pop
xchg
push
jp
mov
jb
sar
lods
js
es
push
call
mov
inc
mov
mov
mov
pushf
push
jb
retf
xchg
mov
out
add
imul
push
jg
(bad)
jp
add
outs
and
pushf
mov
(bad)
leave
pop
jo
fimul
sub
xchg
lods
sbb
(bad)
repnz
jle
fistp
xor
sti
lods
mov
imul
and
int3
xlat
dec
pop
push
jge
mov
xlat
jnp
lods
add
aad
jecxz
call
inc
push
mov
stc
icebp
cmp
ins
es
popa
add
clc
aas
ror
jb
cmp
dec
and
push
and
mov
cmp
jp
pop
jmp
mul
pop
scas
daa
adc
pop
std
mov
xchg
adc
ret
mov
fld
test
inc
xor
js
push
or
mov
adc
stc
pop
into
mov
cld
push
pop
inc
xor
stos
xchg
xchg
dec
sbb
mov
xor
or
jb
inc
cmp
(bad)
and
and
jg
cmp
mov
pop
sub
jcxz
mov
outs
repnz
mov
adc
popf
aad
mov
rcr
(bad)
jecxz
fstp
fnsave
mov
sub
xchg
push
inc
push
mov
out
fnstenv
sbb
cs
div
cmp
mov
popf
dec
loopne
adc
outs
fimul
stos
int3
push
cdq
imul
sar
loop
add
mov
ret
xor
push
xchg
or
sub
sub
ss
dec
repz
movs
cmps
jl
or
mov
gs
(bad)
lods
lahf
fistp
or
xchg
mov
push
mov
es
pop
aaa
dec
test
outs
pop
ret
aad
dec
fcom
mov
cmps
sub
mov
dec
add
paddb
mov
adc
in
repz
mov
mov
test
retf
or
(bad)
mov
mov
dec
sbb
ds
imul
leave
push
fdivr
cmc
or
inc
dec
push
sub
out
out
or
rcr
and
pop
dec
mov
test
add
dec
xchg
pusha
movs
push
jge
inc
adc
inc
icebp
arpl
xor
shr
jle
cmp
jae
aas
add
lahf
fsubr
xchg
repz
mov
shl
int3
or
jmp
jle
push
lods
mov
dec
push
mov
dec
xchg
rcl
fwait
cmps
add
les
pushf
xchg
cmp
xchg
pop
fistp
outs
mov
push
cld
pop
inc
sub
adc
mov
sbb
loop
pop
(bad)
cli
jmp
dec
popa
sub
int3
push
dec
push
in
jmp
cwde
xchg
ret
lock
jno
mov
xor
adc
imul
sub
xor
mov
sbb
jne
push
jg
add
mov
rcl
mov
jns
test
xchg
jbe
cmp
mov
or
sbb
imul
xor
sub
out
outs
dec
or
xchg
fs
popf
arpl
mov
outs
xchg
fwait
mov
arpl
push
(bad)
inc
(bad)
jle
jo
iret
out
(bad)
ficomp
xchg
sub
jl
movs
jl
or
or
push
jl
jmp
icebp
jl
fcmovu
jle
sub
mov
loop
mov
aaa
call
icebp
sbb
adc
and
into
rcr
dec
mov
int3
sti
adc
nop
test
pop
and
cld
jbe
jmp
cmp
iret
rcr
inc
ins
mov
outs
push
inc
fs
inc
div
into
mov
jbe
aas
inc
imul
inc
mul
sti
and
outs
arpl
inc
pop
pop
jle
loopne
not
xor
mov
cmp
in
cwde
mov
push
fldenv
cdq
test
mov
jo
push
test
outs
and
test
repz
nop
repz
xor
and
mov
adc
scas
add
mov
retf
adc
rol
xchg
sub
mov
jb
jg
inc
jmp
out
or
cdq
(bad)
in
loop
xchg
(bad)
jecxz
xor
(bad)
push
aam
or
jmp
mov
cmp
inc
or
in
xor
mov
fs
scas
aaa
lar
lea
sub
shr
adc
mov
popa
jle
adc
popf
popa
inc
outs
inc
cmps
out
stos
(bad)
idiv
aam
mov
jns
out
xor
shr
and
mov
rcl
idiv
scas
jp
fmul
push
fisubr
xchg
push
mul
or
ret
fld
movs
(bad)
xchg
xchg
pop
cmp
ret
outs
test
inc
fiadd
inc
or
pop
rol
xor
dec
ds
movs
cmp
mov
in
(bad)
and
loope
dec
lods
je
push
jnp
mov
div
adc
add
mov
imul
cwde
push
in
les
call
icebp
push
pop
inc
(bad)
out
int
mov
xor
xor
lock
push
jmp
push
js
in
dec
cmp
and
ss
jecxz
out
and
imul
retf
dec
pop
mov
mov
xor
push
test
pop
repnz
loopne
call
in
mov
cmp
mov
jmp
mov
mov
mov
push
fadd
mov
ins
sbb
push
mov
in
jnp
dec
popa
cld
imul
inc
pop
aam
xor
mov
xchg
out
aad
and
out
mov
addr16
call
pop
xor
xchg
mov
scas
outs
push
loop
sub
dec
mov
inc
or
aad
cmp
sub
xchg
push
cmp
inc
aaa
aaa
addps
lahf
mov
mov
sbb
bnd
pop
pushf
loop
pop
sbb
and
cwde
loop
dec
xor
(bad)
cmp
and
(bad)
xlat
(bad)
dec
add
and
fstp
data16
sbb
mov
pop
js
pop
mov
sub
clc
cli
mov
inc
jb
jmp
mov
or
lahf
lods
jle
cmc
fstp
les
scas
xchg
fldcw
inc
mov
inc
int3
pop
shr
sbb
outs
push
ret
mov
cmp
push
call
popf
adc
scas
mov
sbb
cmp
sbb
stos
mov
xchg
push
push
or
xchg
pinsrw
inc
mov
add
dec
cmp
cli
pop
loope
dec
mov
jl
fadd
or
or
sar
stc
push
jecxz
fnstsw
sub
or
mov
fisubr
outs
stos
js
mov
loope
mov
test
jmp
ss
mov
mov
add
(bad)
jmp
mov
cmp
stc
inc
ds
mov
cwde
(bad)
or
inc
mov
dec
pop
frstor
add
xchg
lock
retf
lods
adc
push
icebp
xor
mov
retf
xor
xchg
(bad)
ret
ficom
lahf
xlat
test
xchg
xor
stos
retf
retf
jle
data16
cwde
dec
and
sahf
hlt
in
in
test
fnstcw
pop
push
cmps
mov
and
bound
repz
imul
inc
cmp
and
cmp
in
imul
adc
jae
in
xor
mov
int
sahf
xor
dec
popf
mov
pop
sbb
(bad)
mov
mov
pop
ret
sub
mov
scas
inc
in
cmp
or
and
xchg
cdq
je
xchg
sbb
iret
stos
mov
push
call
xor
call
pop
ss
fmul
fs
mov
mov
repz
aam
sti
dec
clc
cmp
loop
mov
gs
int
and
inc
cld
push
cmp
mov
push
loop
push
(bad)
mov
push
sub
sbb
sub
jl
fwait
adc
adc
cmp
icebp
pop
cli
adc
scas
cmp
or
cmp
in
aad
xchg
aas
call
inc
mov
mov
lods
fcmovbe
push
fisubr
jl
pop
cmp
mov
cmp
fneni(8087
movs
stos
jg
mov
stos
je
add
std
push
jg
jnp
jno
test
cli
pop
mov
mov
std
repz
jmp
mov
mov
loop
dec
add
mov
sub
jge
adc
adc
dec
push
jecxz
mov
lods
loop
call
psrld
sbb
mov
xchg
mov
mov
mov
dec
jmp
shl
in
push
xchg
in
enter
add
repz
mov
out
(bad)
pop
mov
mov
jo
sbb
adc
cdq
das
fld
inc
inc
xor
or
inc
pop
dec
stos
cmc
retf
ret
jl
lods
imul
cmps
loopne
repnz
mov
rcr
mov
pop
sub
aas
cmc
add
pushf
or
sub
(bad)
dec
sbb
mov
fisubr
adc
js
jns
dec
cmps
adc
ficom
or
dec
add
and
mov
imul
hlt
mov
test
add
lock
movs
mul
dec
das
pop
ins
cmp
ins
push
cmc
sar
sbb
enter
mov
sar
and
or
xchg
test
add
retf
adc
cmp
mov
test
(bad)
add
jle
test
mov
jmp
fsubr
jnp
fwait
sub
in
mov
cmp
(bad)
mov
rcr
sub
jge
push
loopne
loop
jmp
mov
arpl
adc
pop
pop
icebp
pusha
in
stos
rcr
jns
jbe
add
ficomp
cmp
lock
js
push
mov
jge
mov
or
fisubr
jnp
test
add
movs
mov
xchg
xchg
cdq
cli
or
retf
aam
out
enter
adc
mov
mov
fbstp
bound
mov
pusha
aaa
push
mov
dec
ins
test
mov
adc
sar
(bad)
dec
daa
das
xor
test
and
xchg
cld
push
add
and
mov
mov
shl
nop
sti
cmp
inc
mov
dec
mov
adc
push
mov
nop
in
out
xchg
(bad)
lods
push
jne
and
or
xchg
or
cld
cmp
inc
aas
or
fsubr
test
test
push
test
add
cld
(bad)
and
out
or
loopne
push
add
push
sbb
fld
out
inc
aad
mov
fistp
mov
popf
cmp
js
or
push
lock
int3
(bad)
shl
stc
or
xor
ja
pop
fadd
jno
push
push
(bad)
cwde
adc
fwait
inc
and
repnz
aam
test
(bad)
test
(bad)
scas
pop
push
sbb
retf
addr16
ret
pop
add
in
jl
stc
ds
mov
dec
arpl
fiadd
mov
xchg
cmp
std
mov
(bad)
loop
pop
cmp
(bad)
inc
rcr
add
or
dec
pusha
movs
sbb
ret
imul
adc
fstp
bnd
jne
call
(bad)
stos
sub
cmp
outs
test
cmc
xchg
cmp
es
in
adc
dec
(bad)
jmp
ds
inc
cmps
jbe
inc
pushf
ret
mov
or
mov
jne
xlat
cmc
stos
add
(bad)
add
adc
(bad)
adc
loop
push
lock
shr
xchg
pop
or
sub
enter
aas
mov
outs
add
sbb
(bad)
mov
lds
pop
(bad)
and
jl
shl
imul
ins
and
dec
cld
inc
imul
or
mov
dec
les
shl
add
pop
lock
jae
(bad)
fimul
enter
mov
ret
in
addr16
fstp
outs
in
dec
ret
inc
addr16
sbb
imul
call
jmp
dec
push
add
or
mov
cmp
addr16
ret
int3
cmp
and
lahf
mov
sub
push
mov
repz
leave
gs
or
movs
and
mov
test
xchg
fsub
inc
iret
call
clc
pusha
or
fdivr
mov
shl
mov
xor
pop
pop
mov
in
loope
mov
and
in
xor
and
stos
cmp
cmc
inc
xchg
fidivr
cld
(bad)
jp
repz
out
fisubr
mov
outs
test
aaa
(bad)
out
fsubr
dec
imul
sub
push
sub
jo
(bad)
xchg
sti
sbb
dec
arpl
adc
stos
and
xor
and
fnstenv
push
or
fbstp
push
adc
cmp
enter
xchg
mov
jb
mov
out
xlat
lods
(bad)
ror
in
mov
fs
cli
push
mov
push
icebp
loope
idiv
mov
push
jl
mov
popa
pop
push
scas
in
inc
mov
cs
mov
inc
jbe
fmul
mov
test
mov
gs
xor
pop
retf
movs
imul
jbe
inc
jne
clc
lea
test
pop
dec
divps
add
movs
js
loop
rcl
stos
xchg
adc
and
sbb
adc
or
pcmpgtw
push
ds
xchg
dec
mov
inc
cli
xchg
in
adc
fisub
xlat
xchg
stc
shl
dec
lds
add
and
(bad)
out
int3
or
out
fwait
xor
in
xor
ficomp
mov
add
lea
int
mov
mov
xchg
xor
xor
pop
aaa
daa
(bad)
repnz
rcr
ss
or
and
cli
mov
mov
sub
push
push
scas
push
inc
xor
mov
sub
rcr
pop
pusha
jno
xchg
pop
mov
loop
inc
jmp
adc
ret
out
add
push
inc
nop
dec
xrelease
cmp
add
aaa
mov
out
pop
int
imul
test
xlat
movs
dec
or
adc
pusha
sub
or
jecxz
xor
rol
mov
pop
lods
xor
mov
movs
jge
mov
adc
cld
inc
or
mov
in
aam
ins
shr
out
scas
add
and
mov
test
add
inc
jl
fwait
(bad)
push
fcmovb
pusha
jne
icebp
dec
sub
fldenv
or
shr
adc
mov
ret
sbb
rol
or
mov
jnp
idiv
test
mov
sub
adc
arpl
out
fsub
pop
dec
jmp
add
inc
mov
jo
mov
movaps
cmp
jns
jp
movs
xor
pop
fwait
rcr
rcl
loopne
push
cld
sub
out
xlat
inc
add
xchg
je
out
cmp
jp
cmp
cs
xor
xchg
pop
push
dec
and
out
mov
pushf
addr16
push
dec
pop
mov
pushfw
je
xchg
sbb
stc
hlt
(bad)
js
loope
rol
test
or
shl
mov
sub
(bad)
fiadd
pop
into
push
mov
daa
bound
adc
push
inc
lahf
sar
inc
pop
pop
jbe
adc
push
lock
pop
popf
push
push
dec
je
arpl
jmp
jnp
push
dec
cld
stos
ins
sub
adc
dec
mov
(bad)
ins
call
jecxz
enter
cmps
repz
adc
mov
or
fidivr
pusha
add
fs
sti
bound
jle
adc
cmps
jno
pop
int
sahf
push
sub
(bad)
inc
jnp
outs
mov
adc
leave
dec
jmp
and
fst
cmp
mov
inc
push
adc
mov
mov
mov
retf
rol
aaa
pop
dec
push
xor
pop
cmp
xor
test
scas
and
adc
movs
mov
enter
stos
arpl
ins
jg
add
jbe
mov
mov
loop
aas
add
push
add
into
arpl
mov
fcmovne
push
sbb
dec
or
and
or
call
daa
iret
xchg
inc
push
mov
shr
stc
int
cmps
pop
sub
xlat
imul
outs
mov
out
scas
add
dec
cmps
ins
and
retf
dec
cld
fwait
ins
(bad)
fisubr
xchg
retf
sahf
xor
ret
aam
scas
ds
dec
xchg
in
jmp
pop
mov
clc
mov
push
push
fild
leave
(bad)
repz
stos
call
pop
test
jp
gs
jne
ficom
ficom
cmp
fstp
or
or
add
mov
test
xchg
sbb
(bad)
push
ret
addr16
inc
call
jno
add
fdiv
int
inc
lods
(bad)
xchg
xor
lahf
mov
(bad)
scas
dec
mov
enter
outs
push
ret
pop
in
adc
sahf
(bad)
mov
js
or
mov
lods
shr
mov
or
inc
sbb
seto
jbe
or
pop
inc
sub
or
inc
fwait
ror
inc
pop
dec
adc
(bad)
test
je
fimul
loopne
push
stc
jbe
cmp
xor
cmps
inc
pop
cmp
shr
lods
add
test
mov
movs
dec
out
fcmovb
inc
divps
int
dec
xlat
in
xchg
push
cmps
(bad)
out
out
sub
sbb
jecxz
fcom
or
(bad)
fisubr
xchg
(bad)
sub
adc
sar
or
add
inc
icebp
(bad)
jle
mov
jge
je
enter
push
in
sub
repnz
dec
retf
xchg
aas
movhps
in
imul
jl
jnp
(bad)
in
jnp
sub
jae
xor
jp
scas
cs
in
mov
add
mov
nop
mov
xchg
and
dec
inc
or
loopne
pop
sahf
fmul
popa
fld
jp
sbb
aas
ret
jne
fisub
mov
out
mov
iret
mov
cmp
dec
and
js
std
xchg
inc
les
mov
fidiv
cmps
adc
(bad)
scas
les
aam
adc
aas
mov
repz
sub
dec
pop
gs
sbb
leave
aam
rol
pop
cmc
pop
mov
mov
and
std
cmp
push
add
scas
sub
lods
in
mov
fild
xor
add
sub
mov
sub
push
call
inc
sub
repz
cmps
dec
fidiv
nop
xchg
fstp
inc
das
add
mov
push
push
pop
repnz
jnp
cmp
add
adc
dec
adc
and
lock
dec
cdq
mov
clc
repnz
mov
mov
jg
mov
gs
jp
addr16
mov
add
jbe
push
dec
mov
inc
in
mov
dec
gs
sbb
dec
sahf
jne
(bad)
loop
stos
dec
stc
pop
xor
movs
lahf
sub
sahf
jno
inc
hlt
(bad)
popf
adc
sbb
mov
jns
xchg
mov
inc
pop
aaa
cmp
pop
pop
mov
xor
push
ins
add
inc
inc
push
ins
out
and
lea
repz
dec
and
jecxz
popf
jmp
movs
xlat
push
push
aaa
sbb
add
jno
sub
mov
sbb
mov
int
pushf
in
adc
sbb
cli
push
loopne
or
or
mov
inc
popf
xchg
inc
jno
jmp
push
fidiv
ret
add
jb
call
lods
lods
inc
in
imul
xchg
push
outs
retf
repz
mov
nop
dec
xor
jne
fist
out
in
out
fldenv
cli
mov
xchg
pop
std
pushf
cmps
xor
pop
ja
push
data16
clc
add
gs
ror
enter
pop
push
arpl
cli
hlt
adc
sbb
cmp
lods
loopne
mov
ja
sub
fisttp
jb
xchg
lock
cld
pop
inc
movs
sbb
fnstenv
jb
fsub
ficomp
popw
xor
pop
adc
mov
fs
fs
sar
inc
pop
mov
cmps
loope
imul
clc
fcom
sub
dec
fwait
pusha
das
jae
adc
icebp
xchg
adc
xchg
aam
das
imul
sub
or
cmps
adc
sub
mov
jne
sub
xor
dec
mov
js
into
dec
test
or
cmp
mov
div
mov
pop
icebp
pushf
pop
jno
ins
sbb
lods
adc
fbstp
xchg
scas
pop
scas
dec
inc
add
xchg
lahf
lea
fbstp
pop
pop
and
mov
pop
sub
pop
jp
out
add
pop
in
out
dec
or
nop
hlt
mov
mov
inc
cwde
adc
loop
add
vpsrld
adc
push
dec
jle
clc
mov
inc
(bad)
mov
iret
sbb
inc
sbb
inc
or
ficom
fst
xchg
push
aas
push
push
mov
lods
sbb
arpl
das
jmp
leave
(bad)
cmps
xor
loope
out
in
sbb
(bad)
sbb
int
and
sub
sbb
dec
xor
hlt
(bad)
fisttp
(bad)
fdivr
pushf
cmps
push
adc
ss
fwait
aaa
mov
cdq
mov
and
xor
jl
icebp
jge
es
adc
jge
ss
sbb
mov
ja
mov
lds
pop
adc
add
loope
fstp
mov
jae
xchg
push
jbe
into
aad
push
mov
sub
out
sbb
test
xor
(bad)
imul
arpl
sub
(bad)
loop
adc
push
mov
xchg
sub
mov
inc
jl
xor
sub
jo
je
cdq
sub
xchg
pop
push
xchg
test
mov
and
test
mov
xor
loopne
fidiv
mov
mov
pop
mov
lea
in
xor
xchg
lods
inc
sub
or
lds
mov
inc
push
sub
rcl
mov
dec
dec
adc
out
add
test
test
jecxz
mov
les
sub
dec
add
push
sub
inc
sbb
ins
inc
xchg
in
ja
jg
add
lock
pop
cmp
cmps
ds
les
xor
in
retf
jg
stos
sub
int3
jge
(bad)
movs
imul
jo
add
xlat
fcom
(bad)
mov
xchg
adc
outs
cdq
mov
push
sub
push
das
adc
adc
sub
daa
push
and
daa
xchg
icebp
sub
dec
rcr
dec
sub
daa
sbb
mov
movs
movs
sbb
in
inc
inc
loop
mov
sub
push
cmc
xchg
inc
ds
push
js
and
lds
ret
call
cld
arpl
or
inc
mov
add
clc
repnz
neg
ror
or
shr
fild
cs
fdiv
repnz
popf
mov
pop
ss
adc
call
sbb
stos
pushf
jecxz
test
cmp
jo
cmp
inc
inc
xor
or
mov
inc
mov
ss
xchg
dec
xchg
in
stc
fiadd
xor
pop
cmc
fnsave
push
cmp
jmp
push
fidiv
icebp
inc
add
dec
lods
push
scas
cdq
add
mov
dec
pop
mov
retf
jmp
clc
pop
das
jmp
dec
ret
int
mov
mov
pop
mov
int
(bad)
cmps
aad
test
sbb
sub
push
iret
daa
fimul
(bad)
lahf
or
stc
xor
xchg
mov
and
push
aam
sahf
pop
sub
add
sub
sbb
ret
leave
inc
and
dec
xchg
ud1
jnp
cdq
mov
aad
mov
push
adc
and
inc
mov
push
mov
push
iret
test
fs
dec
popf
hlt
hlt
(bad)
sub
pushf
xchg
or
jp
push
stc
retf
not
adc
jmp
mov
add
jmp
jo
push
dec
cmovae
sub
dec
aas
(bad)
stos
cmp
and
div
movs
jmp
adc
es
repz
lahf
inc
aaa
int
mov
pusha
jle
add
dec
imul
mov
fcmovnu
mov
test
mov
and
cmp
xor
repnz
cmp
out
fiadd
scas
cmp
sti
dec
jg
in
or
mov
in
cmps
shl
jecxz
into
and
fiadd
into
and
sahf
sub
push
scas
scas
les
sub
imul
bound
push
iret
mov
and
cmp
adc
jmp
mov
(bad)
pop
mov
iret
mov
mov
cmp
xor
movs
ret
out
stos
out
xchg
push
pop
into
mov
cs
shl
jg
jecxz
cmp
ds
fs
movs
inc
push
mov
xchg
sbb
add
scas
idiv
push
popf
je
inc
push
xor
scas
dec
dec
cdq
push
sub
pop
out
das
fdivr
add
sbb
cld
push
sbb
pop
call
adc
adc
mov
push
push
adc
call
sub
mov
and
dec
xor
jge
sbb
jmp
mov
mov
push
pushf
fdivr
xchg
pop
mov
cmp
retf
fnstenv
mov
jo
adc
xchg
jge
ret
jmp
mov
push
mov
jle
dec
mov
call
sti
mov
and
pop
(bad)
(bad)
jp
out
mov
cs
fst
pop
xchg
push
push
sub
inc
out
hlt
jbe
dec
push
(bad)
mov
cli
push
mov
pop
push
mov
xor
nop
jbe
sub
mov
push
outs
push
js
add
adc
in
enter
mov
sub
add
(bad)
mov
scas
jle
jg
xchg
mov
in
pop
pop
ror
xchg
pushf
fisttp
in
jnp
sbb
fld
xor
popf
fisubr
cmp
pop
sub
pop
xchg
popf
out
push
loope
add
cmp
in
movs
xlat
and
mov
or
add
push
pusha
sub
add
dec
xchg
xchg
jbe
jae
fstp
nop
repnz
adc
data16
dec
pushf
mov
fst
mov
cmp
(bad)
fldenv
ja
add
and
sub
add
pop
in
sub
push
mov
(bad)
jno
pop
xor
hlt
inc
jmp
fcom
mov
add
add
into
dec
out
fisubr
in
pop
jae
xchg
sub
adc
lods
sub
(bad)
sub
js
aam
inc
cdq
retf
dec
jb
cmps
lds
dec
in
mov
pusha
loopne
xor
dec
cs
mov
pop
mov
aas
pop
xchg
ins
scas
or
loopne
fldcw
add
dec
retf
xchg
fdivr
cld
ins
xchg
in
xor
popf
dec
sub
add
mov
inc
or
scas
jge
les
xchg
pop
cwde
inc
cmp
jns
ja
das
jo
xchg
mov
call
dec
test
push
daa
adc
(bad)
adc
cld
fimul
cwde
push
(bad)
inc
mov
xlat
xor
gs
sub
xchg
pop
mov
pop
xor
int
jb
cmp
ins
mov
and
(bad)
or
sub
inc
stos
les
mov
sub
aad
pusha
hlt
cwde
sbb
mov
push
xor
sahf
jb
dec
fnstenv
jp
jnp
retf
xor
daa
(bad)
in
mov
mov
inc
and
out
sub
mov
add
mov
adc
sub
cld
test
aad
movs
adc
cmc
xchg
jns
jp
mov
mov
in
sbb
test
movs
fwait
mov
test
mov
fs
lea
xlat
jne
(bad)
shr
lods
gs
sub
(bad)
jp
cmc
or
xor
test
xor
enter
add
fldcw
jmp
push
aad
in
push
cmp
dec
and
cmps
add
stc
loopne
ins
add
ror
out
inc
adc
adc
mov
stos
pop
enter
cmp
sub
das
push
or
jecxz
or
inc
test
cdq
xor
fnstcw
mov
lea
daa
push
inc
sbb
scas
or
push
pop
push
jl
mov
add
imul
outs
mov
push
cmp
jp
packsswb
mov
pushf
mov
leave
push
dec
call
jge
sbb
adc
test
int
std
lea
pop
jge
push
cmc
into
add
ja
imul
in
daa
out
shl
xchg
xor
xor
push
je
and
xchg
cmp
scas
(bad)
dec
mov
(bad)
(bad)
jmp
and
mov
sti
fsubr
scas
mov
loop
subps
mov
sub
je
push
loopne
jge
mov
xchg
fdivr
inc
add
out
mov
sub
fisub
push
in
adc
or
sbb
jmp
mov
mov
dec
sar
dec
jmp
xchg
or
add
adc
shl
mov
es
mov
cmp
push
idiv
adc
dec
pushf
ret
dec
push
lea
inc
sub
xlat
mov
sbb
mov
and
enter
into
and
or
movs
scas
add
xor
sub
sbb
cmp
fistp
push
(bad)
ficom
js
pop
fcom
inc
inc
xchg
sub
mov
or
stos
ja
scas
repnz
jp
lds
iret
jmp
sahf
fnop
add
sub
pusha
jb
mov
add
rcl
push
out
dec
addr16
add
shl
adc
sub
cdq
fs
aam
dec
and
jmp
fimul
cmp
fs
push
jecxz
push
add
outs
out
or
pop
clc
loop
inc
xor
mov
out
or
xchg
mov
dec
arpl
ins
popa
mov
loop
ret
(bad)
jno
cmp
mov
or
popf
dec
sub
(bad)
dec
cmp
not
jmp
add
test
je
pop
and
jmp
lock
data16
lahf
xchg
inc
mov
shr
(bad)
jl
scas
push
push
cdq
push
imul
or
jmp
mov
cmps
jno
xor
ret
dec
test
das
or
cmps
and
lods
mov
dec
in
pop
std
retf
aad
xchg
(bad)
ins
xchg
jge
mov
jb
popa
ret
mov
inc
scas
xchg
or
fild
imul
stos
push
(bad)
adc
mov
enter
pop
cld
mov
ret
jae
jmp
cmp
jmp
xor
stc
out
icebp
push
popa
mov
add
jae
(bad)
out
arpl
les
vunpckhps
mov
jbe
push
or
push
sub
pop
pop
add
loop
mov
lods
movs
ja
xlat
lahf
inc
and
xor
pop
pop
jecxz
loopne
aam
pop
sar
xor
mov
push
sbb
sub
jnp
into
call
loop
jno
repnz
int
pop
mov
xchg
inc
pushw
pop
dec
and
cdq
jle
or
sub
inc
pop
sbb
sbb
lock
dec
ret
pop
aaa
retf
push
sbb
fidivr
call
dec
or
push
(bad)
jmp
push
push
test
stos
push
(bad)
(bad)
(bad)
and
mov
and
scas
rcl
mov
xchg
sbb
loope
dec
adc
cmps
call
xchg
xchg
shl
das
fcom
cwde
bound
stc
add
pushf
sub
call
das
push
lea
or
sbb
aam
xchg
xchg
pop
pop
add
pop
jmp
dec
sbb
loop
xchg
aas
jg
sbb
dec
mov
imul
mov
dec
jecxz
cmp
mov
in
into
stc
dec
and
cmp
pop
scas
jbe
mov
and
pop
sub
(bad)
push
loopne
mov
mov
mov
call
dec
adc
in
fsubr
push
in
dec
loopne
movs
stos
inc
inc
sub
retf
xor
push
xor
fnsave
(bad)
xchg
add
xchg
and
dec
push
pusha
cmp
(bad)
mov
jno
push
sub
int3
scas
sahf
icebp
int3
mov
pushf
and
popf
stc
scas
rol
outs
stc
sub
inc
pop
mov
mov
mov
loop
fstp
lods
out
shl
sbb
mov
ins
push
cmps
sbb
(bad)
cdq
mov
sub
jbe
jl
(bad)
and
jns
fist
mov
push
mov
mov
clc
add
jno
sub
fs
xor
dec
jne
pop
fisubr
dec
pop
add
xor
js
pop
or
repz
inc
xchg
sub
out
add
cs
xor
push
xor
xchg
(bad)
push
out
sar
pop
push
pop
sahf
adc
repz
pop
adc
mov
scas
lods
and
and
js
cld
pop
xchg
xchg
std
hlt
test
jp
inc
es
movs
xchg
fsubr
arpl
pushf
out
and
rcl
repz
push
call
push
pop
outs
popa
jp
call
pop
sbb
out
pop
cmp
jecxz
pop
or
xchg
les
adc
pop
popa
xor
and
mov
retf
sbb
shl
(bad)
(bad)
enter
movs
(bad)
mov
call
xor
add
mov
mov
ror
cwde
dec
(bad)
scas
cwde
mov
adc
dec
dec
fwait
aam
hlt
add
mov
retf
ror
hlt
inc
(bad)
call
int3
hlt
xor
in
das
or
sub
sti
enter
push
push
mov
and
jecxz
ret
mov
sbb
outs
jmp
jbe
xchg
sub
push
add
icebp
xor
out
xor
sub
outs
add
cdq
pop
pusha
pop
xchg
scas
ror
add
cmps
test
mov
push
enter
mov
jmp
dec
mov
cmp
or
and
pop
push
lahf
mov
js
xor
aaa
mov
ret
cmp
outs
or
lar
dec
mov
lods
or
cmp
push
push
shl
ss
ror
mov
(bad)
xchg
leave
outs
sub
data16
push
loopne
psrld
add
lods
push
add
mov
and
dec
fmul
pop
ret
cdq
retf
shl
das
rcr
cdq
mov
sbb
and
xor
mov
nop
pop
(bad)
push
cmps
jl
dec
lods
sub
pushf
arpl
push
popf
sub
repnz
imul
jmp
pop
and
in
(bad)
mov
jp
mov
cmc
neg
or
arpl
loop
adc
shl
pushf
dec
ds
fs
push
cmps
mov
sbb
and
imul
jecxz
add
daa
repnz
inc
mov
sbb
mov
xchg
cmps
nop
sub
lock
jbe
mov
inc
les
jb
or
(bad)
cmp
cmps
js
or
int3
cmc
push
xlat
inc
and
sub
outs
or
adc
les
repz
jb
mov
push
adc
add
hlt
xchg
imul
jbe
(bad)
inc
call
mov
outs
cmp
inc
or
or
enter
(bad)
pusha
adc
mov
inc
and
and
popa
push
pop
jmp
es
(bad)
imul
cld
cmc
out
call
test
adc
mov
push
or
inc
add
mov
push
popa
sbb
jle
shr
pop
cmps
adc
xor
mov
call
retf
sub
cmp
sti
xchg
dec
xchg
and
call
mov
enter
sbb
fs
call
or
loope
inc
(bad)
enter
mov
in
inc
or
or
or
adc
inc
xor
ss
xor
ret
add
push
xor
hlt
sar
sub
ret
pop
shl
call
sahf
movs
sbb
in
stos
xchg
sub
shl
movs
mov
out
dec
xor
fnstcw
aaa
call
(bad)
sbb
fdivr
std
mov
std
jo
xchg
mov
push
cmp
xor
and
sub
push
or
jg
lock
jl
mov
pop
ins
push
sti
pcmpgtw
fild
fadd
sub
sbb
aaa
xchg
jae
loope
lahf
in
adc
dec
mov
add
mov
sbb
mov
out
dec
dec
daa
jb
mov
push
in
arpl
rol
in
mov
stc
adc
mov
lds
je
icebp
fs
sbb
pop
push
sahf
pop
adc
sbb
mov
xor
stos
push
fs
inc
pop
pushf
pushf
adc
inc
sub
mov
pop
pop
lahf
fimul
sub
(bad)
popf
js
mov
and
(bad)
por
mov
mov
scas
sub
and
std
cmps
xlat
mov
and
jbe
repnz
std
xor
inc
lods
(bad)
dec
xor
mov
int3
mov
cwde
cli
iret
push
imul
push
xor
xchg
ret
pop
pop
jmp
adc
movs
leave
stos
push
jnp
lods
jge
lock
or
inc
push
popw
pop
add
jecxz
jns
rcl
call
sub
and
and
loope
dec
add
push
sub
jmp
imul
lea
sub
mov
or
dec
cmp
jp
sub
daa
jl
stos
sbb
scas
ss
addr16
adc
jae
shl
xor
mov
mov
xor
cli
and
add
out
mov
push
inc
ss
xsha1
cmps
or
lods
cmp
scas
data16
les
and
jge
sbb
jecxz
popf
fistp
inc
and
loop
aas
fs
or
xchg
sub
xor
aaa
stc
mov
fisub
jne
retf
adc
mov
lock
ficom
mov
call
sub
xchg
mov
in
ss
aaa
cmp
retf
sar
in
and
rol
into
(bad)
icebp
cmp
push
sub
fadd
cmp
dec
popf
push
dec
ret
xchg
jmp
std
jge
mov
dec
rol
add
fs
cmp
ds
movs
imul
out
add
aad
pcmpgtw
sub
pop
fisttp
push
push
icebp
shl
push
xchg
into
jns
fstp
xchg
aad
stos
adc
rol
mov
fwait
sti
xor
imul
mov
cmp
pop
jb
add
(bad)
fld
adc
push
xlat
sbb
clc
jle
imul
xor
xchg
dec
xor
in
cmp
(bad)
push
aaa
mov
mov
retf
inc
sub
mov
pop
shl
cli
mov
pop
push
(bad)
bound
mov
or
pop
adc
push
or
cmp
out
adc
enter
ds
repnz
loopne
mov
lahf
xor
pop
imul
mov
mov
jecxz
or
ret
(bad)
loop
dec
xchg
or
gs
xor
adc
lahf
fisttp
sub
inc
adc
xchg
ret
sti
aam
loope
add
rcr
scas
loope
dec
push
inc
add
inc
and
into
push
popa
fisubr
cld
in
pop
fiadd
mov
sub
xchg
pop
pop
push
aaa
sar
xor
add
(bad)
pop
mov
inc
or
out
aas
imul
js
movs
lock
inc
aad
mov
sub
mov
lea
xor
adc
repz
xchg
jo
inc
pop
loope
inc
into
rcr
ds
push
loop
sbb
mov
push
mov
xchg
jmp
xchg
sub
stos
xchg
rcl
pop
inc
test
pop
imul
mov
vcvttss2si
xchg
in
jns
rcr
clc
jecxz
dec
lock
fnstenv
sbb
out
pushf
adc
jge
arpl
mov
push
ja
lahf
lods
sbb
mov
pop
iret
lods
fwait
(bad)
push
hlt
xor
sbb
bound
or
out
dec
inc
js
or
push
loop
mov
add
or
push
adc
test
cmp
mov
inc
push
add
mov
icebp
add
mov
clc
push
popa
inc
sub
push
xchg
mov
jge
cmps
es
sbb
leave
neg
mov
sti
cs
add
or
sbb
gs
rcr
inc
mov
ins
mov
add
hlt
iret
das
call
outs
retf
imul
inc
cmp
cmp
cmps
push
fld
clc
or
cli
adc
(bad)
inc
sbb
addr16
das
(bad)
sbb
xor
das
xor
mov
jns
add
xchg
mov
(bad)
inc
push
stos
icebp
(bad)
test
mov
(bad)
adc
mov
and
xchg
mov
iret
sub
stc
popf
rcr
cs
sbb
enter
xchg
dec
cmp
adc
ret
ins
jae
bnd
adc
sbb
sahf
mov
inc
mov
call
retf
ret
pop
dec
xchg
xor
xchg
loop
mov
ja
xor
ja
adc
mov
push
std
mov
das
rcr
(bad)
adc
(bad)
dec
call
or
imul
mov
cmps
jmp
mov
sub
call
cs
xchg
push
sbb
cmp
iret
xor
sbb
inc
cmps
jp
jnp
pop
mov
cmp
outs
gs
(bad)
fcomp
jp
push
pusha
and
sbb
dec
jmp
mov
fsub
dec
xchg
cmp
dec
lds
not
rcr
ret
repz
arpl
mov
inc
pop
loopne
or
out
pop
out
xchg
loop
push
outs
out
adc
xor
stc
pop
int3
cmps
pop
dec
pop
daa
popf
adc
dec
cwde
xor
lods
and
cld
push
in
ins
dec
iret
adc
sar
fs
add
xchg
nop
push
out
movs
fsubr
sbb
mov
xor
es
or
div
jb
nop
fild
add
sbb
push
mov
ltr
or
xor
bound
loopne
mov
cmp
sub
mov
cs
add
jmp
xchg
popf
repz
push
lds
lods
inc
adc
outs
adc
in
iret
mov
mov
out
and
iret
mov
mov
cmp
mov
dec
in
sbb
dec
sub
pop
pushf
mov
sub
xor
inc
fld
call
push
js
fidiv
shl
test
mov
inc
rol
adc
inc
jle
into
xor
pop
push
loopne
lock
add
xor
outs
sub
cs
xor
sub
lea
mov
lds
std
sbb
lock
jp
jecxz
gs
mov
data16
sti
test
jmp
call
adc
and
outs
dec
cmp
push
pushf
dec
fcom
cmp
inc
dec
mov
jbe
pop
add
out
stos
or
pop
dec
and
push
xchg
cmp
loope
ret
pop
retf
xchg
ins
outs
in
cmp
wrmsr
inc
cmc
mov
call
xlat
daa
(bad)
je
fs
inc
xchg
xchg
imul
pusha
fwait
jne
fbld
dec
popa
mov
adc
adc
add
xor
into
test
shr
mov
adc
mov
push
mov
sbb
cmp
in
nop
dec
sbb
dec
adc
pusha
retf
or
cmp
sbb
fdivr
rcl
in
push
dec
test
mov
ficom
fsubr
push
mov
cmp
cmc
inc
xchg
scas
dec
out
rol
jns
xchg
(bad)
out
sbb
cmp
cmp
in
push
mov
mov
xor
or
fisttp
aas
loop
sbb
jo
addr16
cmps
into
xor
(bad)
push
pop
(bad)
lds
out
jmp
pop
das
in
icebp
xchg
mov
mov
or
outs
dec
xor
add
inc
loope
in
xchg
aas
jmp
pop
or
popf
rep
push
(bad)
out
add
push
ds
mov
or
adc
cmp
or
ja
mov
jg
cdq
outs
mov
push
fidiv
into
dec
les
ret
loopne
jge
mov
sub
imul
int3
jg
adc
div
mov
shr
push
nop
mov
iret
(bad)
out
arpl
sub
shl
test
or
pop
or
or
pop
iret
jae
stos
retf
push
mov
pop
pop
inc
int
pop
jmp
sbb
push
xor
dec
sbb
(bad)
cmps
(bad)
xchg
mov
jle
dec
cmp
sub
dec
(bad)
mov
mov
imul
out
adc
cmp
lahf
std
movs
test
inc
sti
mov
or
mov
pop
scas
lea
test
mov
jge
cld
sub
or
dec
cmps
cli
(bad)
jbe
pop
lods
mov
mov
rcl
dec
push
xor
out
adc
pop
aam
(bad)
imul
xor
adc
add
shl
out
xchg
add
sbb
add
push
cmc
pop
xchg
xchg
inc
fild
(bad)
add
enter
push
retf
ret
mov
jns
or
pop
mov
push
(bad)
push
sub
or
scas
pop
inc
lods
push
pushf
aas
cmp
mov
cmp
test
in
xor
mov
fist
mov
jbe
daa
jns
cmp
xchg
mov
pop
dec
sbb
ins
sbb
xchg
push
xchg
pop
call
cdq
(bad)
cmc
in
push
pop
fs
mov
adc
jnp
add
cdq
ds
cmp
js
repz
sub
imul
jne
push
xchg
jge
push
(bad)
sub
cmp
sub
fld
idiv
mov
les
xchg
cmp
movs
test
ja
repz
add
popa
sbb
sbb
ja
leave
cmc
or
(bad)
dec
pop
and
add
xchg
stos
jle
mov
pop
gs
aaa
push
enter
out
and
inc
mov
int3
ds
aam
(bad)
loope
clc
mov
xor
pusha
and
jb
mov
xchg
daa
ins
int3
(bad)
cdq
sahf
sub
fsub
hlt
fistp
push
sub
test
aam
retf
dec
jecxz
in
jns
xchg
outs
add
scas
sar
bound
jb
mov
jle
scas
push
dec
push
mov
mov
xor
lahf
int3
inc
rol
daa
nop
pushf
sbb
push
mov
adc
scas
inc
ja
mov
aad
push
aad
gs
loopne
ds
test
lds
adc
add
sbb
int
xor
out
adc
retf
mov
fmul
iret
ja
out
int3
bound
add
addr16
jp
pop
adc
sbb
xor
arpl
pop
(bad)
(bad)
mov
ficom
loope
push
dec
cs
dec
dec
dec
xor
sahf
bound
cmps
(bad)
jmp
sbb
sti
jno
xchg
inc
push
imul
push
or
or
into
repz
xchg
outs
jne
mov
inc
jmp
dec
pop
stos
sbb
jbe
jns
movs
xchg
mov
pop
xchg
xchg
out
test
ret
pop
std
cli
cmps
push
mov
push
jmp
popf
fwait
inc
out
push
or
imul
jle
call
xor
add
test
dec
aaa
cmp
ins
outs
mov
imul
sbb
xor
stos
jp
mov
movs
cdq
(bad)
ja
cmp
(bad)
lds
int3
xor
inc
add
xor
ds
dec
dec
push
loop
scas
out
jbe
pop
jmp
in
out
mov
dec
ret
test
(bad)
mov
mov
mov
cwde
mov
xchg
aam
cmp
sub
jecxz
(bad)
cmp
movs
mov
movs
mov
lods
cmp
pop
loopne
xchg
je
leave
jb
pop
jle
jecxz
xor
or
repnz
dec
ret
in
rcr
and
or
and
test
pop
icebp
jecxz
ficomp
bound
out
(bad)
push
leave
jmp
xor
adc
adc
adc
ins
std
ret
xor
lea
sbb
xchg
and
xchg
push
pop
int3
outs
pop
cmps
jbe
cdq
adc
(bad)
cld
out
shr
sbb
pop
nop
pop
jmp
fimul
push
pop
jnp
repz
fmul
cmp
adc
loope
int3
mov
mov
es
stos
inc
and
push
adc
inc
scas
push
stc
pop
dec
cmp
leave
or
xor
or
(bad)
or
scas
sub
inc
dec
mov
popf
or
dec
add
ja
jmp
retf
cmp
jmp
fst
out
mov
outs
in
pushf
push
jge
mov
imul
sar
ss
inc
sub
out
shr
test
mov
adc
in
sub
mov
push
(bad)
stc
sub
push
(bad)
loope
and
loop
mov
mov
add
or
or
test
dec
mov
cdq
mov
push
xor
gs
idiv
hlt
inc
pusha
ins
push
sub
popf
es
movs
iret
cwde
pusha
in
(bad)
shr
cmp
xchg
imul
mov
out
cmc
retf
push
imul
push
loopne
aaa
cmp
shl
sahf
int
out
or
ss
mov
scas
mov
in
ja
cmp
cwde
fcom
push
or
addr16
mov
rcl
fcomp
add
mov
test
and
scas
xor
shl
and
sbb
and
rcl
sahf
xor
add
arpl
aaa
jl
ds
lock
mov
(bad)
std
mov
jg
shl
jmp
jne
mov
loope
xor
rol
into
xor
into
mov
lock
imul
inc
pop
mov
in
(bad)
pop
cwde
out
dec
out
hlt
lock
and
jmp
jo
inc
pop
retf
jl
lds
lahf
dec
sti
call
mov
xchg
sar
cld
jns
sbb
sbb
inc
shl
call
popa
mov
cmp
pop
stos
lds
and
pusha
jbe
xor
lahf
sub
inc
loope
jmp
mov
mov
inc
addr16
xchg
pop
sbb
fs
jl
pop
inc
lock
test
mov
push
push
ftst
mov
sbb
cld
pop
sub
mov
pop
xor
adc
xchg
xchg
sbb
in
cs
push
int
adc
repz
imul
lods
jae
add
shl
mov
xchg
push
mov
jne
aad
repz
daa
cmp
hlt
or
xchg
adc
fst
jmp
push
and
add
sahf
xor
mov
lahf
sub
sbb
adc
data16
stc
dec
icebp
dec
out
lahf
push
cmc
or
mov
fdivr
js
js
sahf
test
dec
pop
push
shr
shr
mov
sub
and
sbb
aaa
fsub
test
sahf
mov
dec
mov
sub
es
cdq
adc
les
cmps
jno
xor
inc
cli
ins
into
mov
lahf
in
or
ret
(bad)
and
push
aas
add
or
pop
test
(bad)
inc
add
das
add
or
jb
jecxz
xlat
pop
mov
aas
or
or
dec
mov
fdivr
jno
mov
pop
loopne
mov
and
rcl
lods
out
jne
and
fucomip
loopne
repnz
sub
jno
sbb
scas
imul
jne
retf
nop
ins
xlat
adc
out
mov
lahf
xchg
push
inc
stos
lahf
fwait
clc
and
mov
mov
jmp
xor
xchg
pop
out
sar
cmp
addr16
cmp
fmul
sub
ss
push
popa
push
ins
xchg
adc
mov
cmp
out
ss
mov
dec
das
fld
dec
mov
pop
lea
sub
push
lods
outs
push
hlt
add
sti
cmp
pop
call
scas
xor
pop
sbb
inc
loopne
xchg
sti
cmp
pop
dec
ret
cmp
cmp
mov
sti
cmp
cdq
scas
xchg
xchg
idiv
inc
push
popa
(bad)
mov
or
(bad)
pop
enter
pop
jnp
sti
repz
xlat
sub
push
cmps
ja
or
push
imul
jg
xchg
push
mov
ret
fxch
cld
bound
push
(bad)
fcom
push
adc
sub
test
pop
sbb
jno
dec
data16
mov
dec
mov
iret
sbb
xor
ins
sbb
add
pop
aaa
movs
xor
pusha
xchg
shl
repz
xchg
(bad)
addr16
loope
sti
and
repz
xchg
or
jno
mov
movs
pop
bound
call
enter
mov
cld
stos
dec
inc
jns
cmps
shl
push
(bad)
les
xlat
(bad)
arpl
aad
dec
loope
hlt
lods
xchg
loop
clc
mov
repz
(bad)
bound
sbb
sti
cmps
push
jns
out
mov
or
stc
mov
jno
jg
arpl
push
sub
xchg
inc
popa
nop
adc
adc
mov
push
mov
pop
sbb
adc
xchg
xchg
add
or
mov
imul
dec
imul
sub
inc
enter
sbb
scas
and
sbb
push
inc
loopne
test
and
and
hlt
mov
jle
mov
xchg
dec
shl
dec
cmp
jmp
imul
leave
fild
push
xchg
mov
mov
call
(bad)
mov
xchg
sar
dec
push
aad
sbb
es
es
shr
(bad)
sub
and
and
cmp
outs
xor
repnz
das
(bad)
fadd
stos
jecxz
es
adc
cdq
sbb
cmps
imul
shl
cld
pop
stc
dec
jp
push
cld
jnp
hlt
call
mov
mov
xlat
loope
jnp
out
xchg
pop
jo
lea
cmp
test
pusha
popf
popf
jmp
shl
cmps
js
sbb
hlt
sets
movs
push
sbb
push
retf
stos
cs
dec
lea
mov
arpl
and
test
bound
enter
jae
jae
push
jge
rol
jge
jbe
movs
and
das
cmp
xchg
mov
push
lock
into
rcl
adc
mov
mov
shl
mov
xor
jge
inc
js
xchg
test
and
push
cmp
mov
test
jno
push
or
fucomip
arpl
sar
add
sub
pusha
push
(bad)
pop
mov
retf
mov
test
out
cld
mov
sbb
fwait
iret
mov
sbb
jne
call
ins
mov
push
and
jp
cs
mov
dec
xor
jmp
cdq
jmp
in
xchg
in
ins
bound
xor
jns
addr16
into
inc
cmp
inc
repnz
cmp
inc
imul
or
nop
mov
jecxz
addr16
imul
das
pop
sbb
mov
cwde
dec
pop
push
mov
adc
jmp
mov
inc
pop
mov
(bad)
xor
(bad)
nop
test
push
and
push
and
les
lock
in
gs
jae
dec
lds
xchg
pop
mov
gs
imul
pop
dec
fld
xor
js
stos
adc
push
imul
jns
les
push
mov
mov
mov
pop
and
ds
sbb
push
imul
lahf
pop
in
jnp
inc
inc
std
sahf
out
inc
cmp
sbb
adc
or
xchg
xchg
call
jecxz
test
pop
in
pop
jle
dec
shl
loop
jo
addr16
pushf
or
push
dec
add
inc
push
mov
push
fidivr
sbb
mov
xchg
in
call
popf
push
jnp
out
push
or
and
mov
out
mov
inc
jnp
inc
stos
cmc
and
nop
jle
and
bound
mov
jge
sub
mov
in
dec
ins
loope
mov
or
mov
(bad)
jae
mov
dec
push
sbb
imul
cmp
jp
mov
jg
mov
jo
sub
loope
mov
arpl
mov
inc
jmp
jo
sbb
xchg
fs
dec
jmp
pop
push
xchg
push
or
pop
ret
mov
push
movs
push
pop
cs
push
test
xor
pop
push
int3
movs
leave
mov
add
push
stos
xor
cs
ror
xchg
mov
pop
retf
out
adc
cmp
add
(bad)
fdivr
or
adc
fild
add
jmp
repnz
lods
aad
jo
or
add
(bad)
xchg
or
pop
pop
sub
push
enter
xor
xor
fadd
mov
in
add
xchg
or
xchg
pop
dec
stos
int3
xchg
sub
sub
in
and
jmp
or
fstp
push
push
mov
fwait
test
xor
jg
icebp
cmc
jbe
push
cmp
jp
int
mov
adc
(bad)
inc
(bad)
cs
sti
hlt
popf
xor
add
mov
mov
fisttp
mov
mov
sti
pop
push
push
clc
sbb
loop
jae
ficomp
sub
xor
imul
imul
dec
jne
jne
lock
sti
sbb
imul
pop
inc
or
rol
pop
pop
and
push
daa
jg
scas
out
pop
and
retf
test
(bad)
jo
fld
mov
xor
test
push
mov
mov
mov
mov
div
inc
imul
hlt
or
pop
mov
leave
lods
dec
pop
mov
leave
pop
bound
jl
push
jnp
ins
shl
push
outs
and
mov
fdivp
xchg
aas
jmp
mov
mov
pop
aad
and
ret
rcr
loope
cwde
gs
mov
sahf
dec
cmp
pop
xor
sub
xor
iret
mov
inc
in
sti
mov
jg
sub
lods
sbb
push
nop
xor
pushf
test
mov
mov
or
aad
add
bound
popf
jns
cmp
out
test
cmps
jl
out
jmp
add
icebp
stos
jae
jmp
out
lds
cmp
dec
or
sbb
lods
inc
fadd
aad
jle
sub
inc
scas
aam
je
jg
adc
mov
xlat
ins
inc
ja
mov
cmps
cmp
je
shl
pop
gs
loope
jmp
test
pop
add
mov
ficomp
or
push
sub
cmps
int
sar
mov
mov
call
xchg
add
jbe
mov
ja
fs
pop
mov
fld
sbb
ins
adc
sub
push
in
xor
adc
aad
jle
jno
jl
imul
jmp
jnp
retf
cmp
lahf
dec
push
push
jnp
ud2
mov
sbb
push
push
pop
mov
test
loope
xor
mov
inc
pop
jmp
popa
std
jnp
lock
and
lds
or
enter
cld
sti
and
xor
scas
jmp
ret
jmp
mov
aam
repnz
mov
in
mov
retf
pop
dec
push
les
aaa
in
sti
imul
jb
test
and
or
push
stos
pusha
xlat
push
cmp
jmp
jno
sub
add
cmp
rol
xlat
in
cmc
pop
retf
adc
sub
int
movs
or
ds
push
(bad)
into
repz
dec
fisub
inc
stos
sbb
xchg
loope
or
mov
je
int3
inc
sub
popf
(bad)
mov
mov
inc
mov
push
scas
xor
out
add
sar
in
cmc
call
add
pop
stos
enter
fidiv
cmps
cld
retf
nop
adc
sbb
into
inc
dec
ret
xchg
test
rol
neg
and
add
sbb
mov
inc
retf
jne
cmps
sub
iret
push
icebp
mov
dec
xor
call
cmps
mov
push
inc
repnz
(bad)
(bad)
mov
xchg
int3
movs
xchg
adc
adc
mov
mov
stos
mov
dec
sub
pushf
aas
inc
in
push
mov
aad
popf
cmp
cmps
inc
das
mov
inc
xchg
mov
mov
mov
add
pop
xor
call
jge
push
cmp
xchg
mov
in
cmp
adc
je
pop
fisubr
adc
lds
xchg
mov
aaa
lahf
xor
pop
fisttp
ret
jecxz
ror
pop
mov
cmp
pushf
sbb
(bad)
mov
adc
push
clc
pop
call
nop
(bad)
lods
(bad)
mov
xor
or
xor
pop
pop
jecxz
push
rcr
addr16
jmp
jae
adc
xor
not
push
ret
pop
sub
mov
(bad)
clc
inc
mov
push
test
adc
mov
adc
into
sahf
lds
shl
stos
jle
icebp
cmp
pop
add
jecxz
shl
ins
jmp
fstp
mov
cmc
or
xchg
dec
xchg
sub
leave
mov
fisub
mov
out
pop
bound
call
cmp
pusha
jno
mov
sbb
sub
sahf
push
jae
fmul
jmp
mov
inc
pop
icebp
lods
jb
mov
les
lahf
cmps
and
jno
ins
ror
pop
rol
jl
xor
push
pop
stc
and
adc
test
fstp
cmp
sub
out
xor
inc
jge
sti
xor
adc
mov
sub
and
xchg
xor
ret
cmps
fcom
fild
inc
sub
or
movs
cmp
mov
bound
dec
fs
mov
xchg
xor
jmp
mov
jge
jp
stos
mov
scas
mov
std
ins
mov
in
aaa
mov
cld
test
movs
adc
xchg
outs
maxps
ret
mov
lods
scas
cmp
mov
ins
jle
fistp
push
sbb
fwait
cmp
out
aam
pop
inc
fcom
lahf
xlat
dec
push
mov
inc
xchg
push
adc
add
pop
sbb
inc
mov
jge
ret
sbb
adc
fcom
push
inc
mov
add
pop
mov
dec
ret
xor
pop
inc
nop
movs
sub
pop
sbb
jmp
cmp
push
mov
sub
neg
mov
sub
cmp
ins
ins
sub
sbb
test
add
retf
shl
fwait
les
loop
ret
dec
mov
ja
aad
int3
dec
test
cmp
or
pop
mov
test
push
xchg
test
popf
push
push
push
(bad)
in
pop
adc
call
xor
rol
xor
dec
xor
push
jmp
aad
inc
jns
add
and
sbb
add
outs
add
mov
clc
jb
dec
mov
fmul
ret
sbb
jl
inc
jmp
mov
arpl
mov
cmp
xchg
(bad)
jns
ret
lahf
adc
push
xchg
ins
xchg
rcr
in
ror
ret
jb
add
mov
js
sti
mov
addr16
cmp
or
xchg
sbb
pop
jnp
push
movs
scas
push
mov
outs
stos
test
inc
mov
jmp
lock
dec
xor
pop
mov
pop
jne
out
mov
(bad)
dec
dec
(bad)
loope
add
fcmovnu
jae
sbb
(bad)
jg
push
or
sar
xor
push
out
cmp
inc
hlt
fs
mov
push
and
cmp
push
mov
push
sbb
repz
mov
fdivp
xor
mov
push
add
xchg
mov
les
add
or
mov
or
jmp
std
mov
mov
out
pop
xor
shr
push
jo
push
jbe
nop
loope
scas
fiadd
push
cs
mov
inc
in
add
movs
sub
sbb
repz
scas
push
add
shr
shl
xor
lea
xchg
xchg
adc
xchg
jl
cmp
ins
js
mov
add
xchg
repz
mov
ins
(bad)
and
mov
cli
dec
jae
sub
mov
xchg
add
xor
xlat
cdq
inc
push
cmps
in
xchg
push
sbb
ss
movs
lock
sub
dec
jo
rcr
dec
mov
aad
push
retf
xor
ja
shl
icebp
jae
mov
sub
adc
push
sbb
aaa
push
xor
(bad)
enter
out
xchg
jb
int3
xor
pop
das
sti
ins
scas
out
mov
pop
mov
into
out
sbb
out
sbb
lahf
leave
mov
sub
add
pop
sahf
icebp
sahf
out
xchg
jne
push
dec
fucomip
bound
mov
fwait
mov
push
neg
or
(bad)
les
add
cdq
xor
(bad)
int
add
push
retf
inc
xor
adc
rcr
jb
dec
mov
dec
lahf
cmp
xor
test
xchg
adc
les
data16
inc
ret
mov
cmp
and
shl
jp
jmp
mov
push
out
test
imul
loopne
loope
mov
jo
nop
add
push
mul
pop
push
add
outs
inc
cmps
adc
and
gs
pop
fcom
cmps
pop
adc
jmp
and
sar
call
jge
call
test
add
sbb
xchg
jns
add
fst
std
iret
lahf
push
mul
sbb
call
or
ret
repnz
xor
mov
and
mov
xor
xchg
loope
sti
jmp
icebp
dec
(bad)
stc
arpl
jo
loopne
xor
(bad)
mov
xor
in
iret
leave
push
clc
pop
push
fimul
and
test
popa
(bad)
sub
test
lahf
jo
mov
not
sub
pop
fwait
inc
push
(bad)
mov
sbb
jge
imul
sub
jecxz
lock
je
repnz
mov
test
addr16
les
sete
mov
or
out
pop
mov
and
in
out
mov
movs
xchg
sbb
mov
xlat
fstp
mov
push
push
push
xchg
sub
inc
xchg
movs
ret
or
mov
mov
dec
push
inc
push
out
xchg
fistp
in
mov
dec
sbb
pushw
int3
xchg
mov
hlt
push
(bad)
dec
lds
cmc
dec
dec
inc
mov
es
push
out
call
mov
pop
test
xchg
jns
push
cwde
sub
(bad)
gs
jle
jae
ins
xchg
and
dec
mov
fwait
mov
cmps
hlt
inc
int
data16
out
sbb
dec
mov
or
or
xor
into
call
ins
std
rol
mov
add
xlat
cmp
out
out
jmp
jecxz
lods
add
scas
and
xor
fld
mov
mov
outs
inc
aam
or
xchg
out
cmps
jmp
xchg
inc
mov
mov
mov
cmp
hlt
jnp
jbe
sti
neg
jge
mov
ret
sbb
les
cmp
push
pop
jo
aam
sahf
push
call
inc
das
sub
hlt
sub
pop
loop
xor
xchg
add
xor
cwde
or
sbb
mov
mov
les
cs
dec
or
sub
cmp
inc
mov
or
fbstp
dec
stc
sub
sbb
adc
xchg
xor
jl
push
xchg
(bad)
mov
sub
jns
repz
mov
je
jnp
cmp
enter
inc
inc
adc
test
clc
add
test
sub
or
push
mov
neg
sub
jbe
mov
inc
shl
mov
mov
(bad)
nop
inc
stos
repz
lods
xchg
push
rcr
sub
dec
je
pop
push
test
in
inc
nop
mov
pop
inc
(bad)
int
sahf
call
sbb
popf
rol
and
fs
not
jb
pop
pusha
shl
addr16
mov
jnp
cld
fstp
(bad)
and
(bad)
cmp
jne
rep
inc
mov
sti
jecxz
adc
fidivr
inc
xor
mov
lods
mov
inc
push
xchg
lahf
loopne
std
shl
adc
int3
jmp
mov
mov
int3
ja
fdiv
mov
ret
fidiv
aad
dec
jo
or
cmp
das
in
retf
mov
rol
mov
pusha
gs
mov
push
pop
in
(bad)
mov
adc
iret
xchg
int3
jno
push
je
mov
dec
or
and
and
jbe
mov
xchg
fwait
inc
xchg
int3
push
mov
rol
adc
xor
fnsave
cmp
jp
shr
nop
sub
mov
das
xor
and
iret
push
(bad)
ficom
sub
clc
mov
stos
loope
jg
jg
popa
mov
hlt
iret
adc
pop
and
adc
add
out
in
pushf
push
mov
call
inc
dec
sar
imul
mov
mov
jmp
or
push
mov
repz
call
stc
(bad)
(bad)
fcom
pop
jmp
hlt
cmp
dec
sub
arpl
enter
jge
push
dec
rol
fistp
aas
add
xor
or
div
cmc
xor
lea
ror
scas
daa
ins
mov
mov
mov
addr16
pop
pop
push
sbb
mov
dec
sbb
movs
mov
sub
and
mov
add
ja
add
jmp
in
fwait
stos
mov
sub
mov
add
dec
jb
enter
adc
pop
dec
jne
loope
nop
je
lods
stc
push
dec
sahf
movq
sub
jmp
push
outs
xor
ja
inc
cwde
xor
and
add
test
not
pop
movs
sti
mov
inc
sbb
ds
sbb
and
and
sub
lahf
test
xchg
mov
ror
cmc
scas
or
jo
mov
ss
enter
fadd
add
dec
mov
and
dec
mov
sub
add
add
ins
leave
ret
dec
xchg
fs
in
add
add
and
retf
mov
repz
cmps
pushf
pop
mov
push
je
pushf
mov
mov
pop
cmps
or
pop
mov
movs
mov
xchg
dec
adc
ja
and
cwde
icebp
jmp
pop
sub
aaa
inc
sbb
sub
jne
push
stos
aaa
sub
xchg
adc
xor
mov
retf
xor
stos
dec
js
in
and
mov
lods
jnp
sub
mov
inc
add
stos
imul
pop
and
sub
xor
repnz
arpl
fadd
mov
inc
fadd
mov
(bad)
dec
sahf
sub
mov
ror
das
int3
mov
inc
aam
in
inc
mov
xchg
adc
iret
inc
into
rcl
fs
sub
jmp
shr
sub
xor
adc
jge
mov
cmp
xchg
aam
inc
add
call
jge
int
mov
inc
dec
rcr
jo
sub
outs
xchg
sub
ins
cmp
pop
and
inc
sbb
imul
pop
pop
xchg
retf
aas
lds
(bad)
(bad)
imul
arpl
clc
or
lods
repnz
sbb
hlt
dec
ss
mov
adc
fwait
cmc
mov
dec
retf
neg
movs
call
xor
pop
rcl
jp
in
aas
xchg
mov
arpl
(bad)
or
daa
inc
int3
cmps
xor
es
jmp
push
scas
cmps
sub
fimul
mov
inc
mov
mov
scas
mov
in
popa
xchg
push
mov
jno
or
mov
sub
dec
addr16
es
pop
mov
add
mov
pop
in
je
adc
xchg
imul
mov
mov
pop
mov
sbb
repz
sbb
push
add
mov
dec
xchg
imul
loop
inc
sbb
dec
pop
cs
mov
shr
mov
lock
adc
push
add
(bad)
(bad)
xchg
push
jb
inc
sbb
push
hlt
outs
out
(bad)
fstp
fdivp
loop
out
xor
pop
(bad)
das
mov
movs
mov
mov
xlat
mov
mov
popa
popf
mov
es
push
mov
pop
jl
sub
xor
and
cwde
pusha
adc
jg
mov
pop
push
xchg
xchg
test
dec
aaa
sbb
(bad)
cwde
lods
loopne
sub
xor
fmul
adc
fisub
mov
mov
xor
cli
ins
mov
shl
jns
sbb
and
sbb
sub
fld
xchg
in
setb
and
test
and
(bad)
jl
sub
pop
(bad)
cmp
jp
sub
pop
xchg
push
mov
push
xor
and
mov
mov
ret
mov
ja
mov
test
jno
(bad)
mov
jae
fs
dec
mov
mov
fprem
or
mov
inc
jns
jb
and
fnstsw
cmp
aaa
lods
call
pop
push
daa
pop
pop
data16
mov
js
mov
cdq
add
stos
xor
mov
jmp
jo
sub
cmps
das
loop
sub
in
es
jno
adc
xchg
nop
imul
cwde
stos
mov
icebp
pop
xchg
(bad)
push
jb
jae
jb
lods
push
xor
mov
push
jp
push
inc
and
aam
es
mov
mov
sahf
(bad)
pop
fidivr
scas
(bad)
inc
imul
scas
xor
add
aad
imul
xchg
loop
xor
push
xchg
loope
scas
fistp
xchg
xor
loopne
into
ins
jnp
hlt
sbb
pop
pop
sub
pop
call
mov
sub
outs
push
or
dec
out
aaa
or
mov
enter
push
(bad)
imul
ret
into
loop
(bad)
(bad)
ins
loopne
jno
add
adc
setle
aaa
sub
rcl
pop
cmp
mov
jge
xchg
cwde
inc
jp
sahf
loopne
pop
jmp
cmp
jge
xor
pop
and
retf
mov
xor
xor
or
test
pushf
mov
cmp
repz
mul
adc
cmp
outs
mov
cmp
mov
xor
sti
xor
cmp
outs
pushf
repz
loopne
jmp
popf
push
aas
add
sbb
outs
mov
sbb
mov
cmps
std
mov
dec
repnz
xchg
int
(bad)
out
cmps
xor
lock
jl
into
ss
scas
jmp
pop
adc
push
mov
mov
xor
sub
rcl
cmps
fldenv
retf
mov
div
mov
imul
and
or
inc
lods
jle
jns
jmp
out
xchg
pop
or
jb
hlt
pand
cmp
jl
jno
push
cld
adc
dec
fucomi
dec
push
(bad)
and
xchg
push
add
jp
cmp
jmp
mov
and
and
out
ret
(bad)
fcomp
dec
pop
jmp
dec
fstp
jmp
adc
jmp
pop
call
dec
pop
fwait
sti
pop
cmp
fist
cmc
stos
push
jl
sub
xor
lahf
leave
dec
fwait
mov
mov
inc
icebp
sar
loope
inc
imul
mov
hlt
retf
inc
mov
into
or
jmp
rol
test
push
sti
jno
jp
or
adc
sbb
xchg
pop
mov
pushf
and
(bad)
sub
(bad)
mov
xor
xchg
lock
in
ret
mov
inc
push
pop
sbb
mov
movs
cdq
ret
mov
mov
push
xchg
fst
jp
xor
cmp
xchg
fiadd
sub
jg
mov
lahf
xchg
pop
inc
mov
jb
(bad)
jo
fimul
pop
and
(bad)
out
sbb
sbb
jp
pop
fst
fstp
leave
fwait
pop
jno
and
(bad)
mov
test
sub
ds
inc
or
int3
inc
call
cmp
fst
sub
aam
in
aam
push
or
xlat
lods
and
neg
aam
lea
push
and
mov
mov
pop
adc
je
or
stos
shl
mov
mov
add
add
stos
add
mov
cdq
ins
cmc
mov
push
scas
fcom
in
inc
movs
pop
aas
push
ja
(bad)
mov
cmp
add
and
sub
mov
dec
popf
neg
fnstsw
ins
pxor
mov
push
jae
cmps
shr
xlat
inc
shl
lods
pushf
cmps
cmp
aam
mov
scas
cmp
aam
outs
stos
cmp
(bad)
pop
pop
or
sub
in
loope
or
pusha
adc
mov
popa
shl
clc
inc
pushf
pop
sbb
jle
call
xlat
in
sbb
inc
pop
into
jmp
xor
int
push
sbb
leave
cwde
mov
xchg
pcmpeqb
lods
pop
jns
mov
sub
mov
add
pop
mov
mov
and
mov
adc
ins
pop
not
loopne
mov
ficom
mov
je
mov
jnp
mov
adc
push
fldenv
push
stos
and
scas
nop
shl
mov
fstp
out
stos
and
jmp
ffree
push
scas
push
lea
dec
imul
xchg
std
inc
in
lods
out
sbb
bound
lds
jb
paddd
mov
push
fwait
push
loop
xor
cwde
cld
data16
add
or
sbb
sbb
loope
and
adc
jp
mov
and
mov
mov
test
das
cli
add
adc
arpl
movs
(bad)
pusha
adc
sar
scas
test
(bad)
(bad)
fcmovnb
sub
std
les
outs
rol
dec
leave
and
je
jo
and
lods
lods
mov
mov
push
push
xor
lods
mov
or
rol
push
in
fiadd
arpl
xor
mov
sub
clc
pop
pop
mov
mov
mov
lahf
retf
mov
mov
fisub
mov
add
stos
repnz
pushf
mov
retf
xor
fs
ret
adc
ins
fisub
inc
mov
inc
mov
cmp
ret
sbb
shl
daa
bound
adc
mov
adc
scas
add
add
xchg
mov
mov
push
sub
xchg
(bad)
mov
or
adc
or
pop
cmps
fsub
repnz
xor
jecxz
adc
cmp
dec
(bad)
aas
add
ss
inc
(bad)
sub
ss
pusha
imul
and
loopne
out
iret
pop
test
retf
jnp
pop
mov
add
dec
frstor
and
xor
repnz
aad
xchg
inc
ret
cmp
push
jbe
add
add
neg
mov
jbe
jmp
cmp
pop
into
xchg
rcl
mov
cdq
add
lods
gs
pushf
fsin
popa
pop
sub
dec
gs
repz
test
ret
shr
jne
cwde
dec
mov
test
mov
das
fstp
or
cmp
test
push
int3
(bad)
arpl
stos
mov
inc
add
push
pop
loop
(bad)
jge
xchg
xor
fmulp
stc
stos
popa
mov
add
ret
lock
pop
dec
add
xchg
mov
nop
fld
sar
dec
jge
adc
movlps
push
pop
dec
push
dec
add
sbb
aad
icebp
(bad)
fnstsw
mov
jp
or
les
jmp
imul
pop
shl
iret
in
jb
mov
lods
pop
daa
lock
mov
outs
adc
das
push
mov
adc
inc
int3
fldcw
mov
xor
adc
test
mov
sahf
mov
sub
sbb
cmc
pop
xchg
push
mov
fst
daa
add
mov
dec
jge
cmp
xchg
add
jne
popa
ins
cmc
es
and
das
jns
aad
(bad)
jle
adc
or
mov
cmp
orps
jecxz
push
scas
xchg
mov
mov
add
cmp
jmp
(bad)
lea
or
push
dec
pusha
lds
(bad)
mov
add
push
(bad)
cmps
arpl
jmp
out
sub
or
sbb
mov
add
dec
adc
jno
jb
lds
and
push
loop
mov
mov
(bad)
std
sti
jae
push
mov
inc
push
aam
pop
cld
leave
stc
js
ror
sub
mov
add
pop
shl
test
xor
shl
sub
movs
or
mov
mov
or
idiv
jl
mov
pop
push
(bad)
jo
jmp
mov
test
(bad)
repz
dec
cmp
cmps
sahf
leave
jae
push
push
rcr
stos
push
sbb
push
add
test
jge
fadd
mov
sbb
into
or
scas
jb
lea
(bad)
jmp
test
out
mov
into
aam
pop
or
shl
aam
adc
and
pop
mov
and
adc
scas
ret
rol
lods
cli
mov
call
xor
dec
add
and
popf
aam
xor
xchg
xchg
mov
sti
loope
add
(bad)
popa
test
pop
sub
lods
mov
call
jns
mov
xchg
mov
pop
mov
and
mov
(bad)
or
jge
dec
fistp
lods
div
push
push
fs
sub
test
jns
js
mov
pop
or
ja
adc
jne
mov
mov
sub
xchg
dec
or
mov
add
out
leave
add
(bad)
mov
push
lods
sbb
sub
mov
xor
cli
scas
imul
daa
push
jmp
dec
lahf
retf
(bad)
sbb
mov
popf
xchg
jns
enter
xchg
add
sub
dec
xchg
mov
(bad)
push
fcmovb
mov
jmp
test
lahf
sub
push
outs
mov
(bad)
in
imul
pop
int
int3
mov
sar
add
push
xchg
js
pop
jbe
(bad)
shl
daa
in
xchg
outs
xchg
fwait
loopne
mov
xchg
mov
jbe
mov
fiadd
loopne
and
ss
lock
lock
or
dec
mov
sar
push
stos
iret
cmp
cmp
mov
in
in
(bad)
mov
mov
dec
mov
retf
adc
and
mov
inc
pop
fwait
adc
mov
cmp
mov
in
cmp
addr16
addr16
dec
scas
ret
mov
ins
sbb
lds
push
xchg
xchg
in
sbb
cmp
rcr
push
adc
sahf
push
(bad)
aad
mov
test
jns
scas
cmc
sub
rcr
(bad)
cmps
inc
dec
jo
adc
adc
dec
xchg
push
(bad)
enter
mov
es
clc
inc
inc
and
aad
xor
cmps
ins
pop
in
fidiv
lock
mov
call
test
or
mov
aad
xchg
jmp
mov
ret
loopne
sub
cmp
cmp
push
enter
add
cwde
mov
xchg
icebp
and
sbb
scas
mov
sub
sub
or
std
iret
xor
sbb
mov
sahf
imul
mov
jae
sub
push
push
loop
add
leave
leave
mov
push
dec
leave
mov
in
nop
rcr
into
and
jnp
iret
add
push
sub
lea
jge
or
int
dec
sub
out
sub
fcomp
xor
clc
xlat
pop
sub
mov
xchg
mov
add
mov
push
fisttp
jmp
pop
pop
inc
out
pop
push
popf
jae
sbb
call
in
cmp
or
movs
dec
xchg
rcr
mov
sbb
push
push
pop
or
and
enter
xor
les
pop
sbb
pop
lds
fcmovne
fst
aad
lds
pop
xor
pop
retf
sti
inc
in
cwde
repnz
dec
fisttp
xchg
xor
sbb
sbb
(bad)
jae
cmc
aas
sub
jmp
arpl
cmc
lods
adc
xor
sub
mov
jl
repnz
imul
mov
icebp
mov
not
inc
mov
test
and
jbe
leave
jg
test
gs
and
jns
or
and
test
push
lea
in
test
jne
inc
fdivr
aad
imul
push
lds
pusha
and
leave
out
ror
jne
adc
sbb
jle
xor
and
pop
leave
lods
cmps
stos
popa
or
mov
jae
xchg
idiv
jmp
xchg
jo
neg
push
push
add
pop
test
stos
sub
inc
sub
stos
sub
cmp
push
in
(bad)
out
cmp
add
into
jae
dec
xchg
inc
mov
dec
call
repnz
xor
jne
dec
cmp
das
xor
loop
cmp
xlat
cld
out
les
mov
adc
and
jl
sbb
pop
jne
sbb
sbb
pushf
adc
es
shl
xor
lea
push
call
stos
lahf
cmp
xor
ret
pop
jns
adc
mov
out
mov
jbe
or
xchg
ins
(bad)
or
sar
test
mov
xchg
call
cmps
hlt
retf
dec
jp
push
pushf
pop
lea
cmp
test
ret
movs
imul
jmp
xchg
xor
push
mov
cld
push
ins
and
pop
xor
cmp
enter
xchg
cmc
mov
xchg
inc
adc
dec
movs
popf
in
sbb
mov
iret
inc
(bad)
sbb
(bad)
pop
mov
mov
sbb
in
pop
enter
xchg
call
add
mov
test
add
leave
xchg
xchg
fadd
call
inc
and
or
inc
mov
mov
cwde
sbb
and
rol
cli
scas
add
pop
(bad)
sub
movs
jmp
adc
sub
xchg
ins
test
mov
xchg
sub
out
lock
ror
jg
mov
xchg
and
jns
jns
jae
pop
pop
jbe
add
dec
(bad)
jno
mov
setb
outs
mov
(bad)
sub
pop
adc
xor
add
shl
loope
mov
shl
push
sub
cmp
and
(bad)
mov
add
mov
std
(bad)
jecxz
push
mov
xchg
mov
dec
inc
mov
sbb
daa
sbb
outs
jnp
xlat
sub
cmp
ret
add
adc
test
into
out
icebp
add
idiv
mov
pusha
dec
fs
mov
mov
cs
lods
mov
sbb
push
in
jge
mov
les
sbb
mov
bound
lds
jne
push
pop
or
push
add
in
fst
push
sub
xchg
add
push
push
mov
xchg
or
lahf
add
adc
ins
jno
mov
xor
out
ins
cs
popf
mov
cmps
shr
outs
cs
sub
inc
sbb
push
sbb
mov
fild
fwait
scas
xor
and
xchg
mov
outs
sub
dec
mov
xchg
outs
xor
inc
je
call
mov
pusha
aam
cmp
(bad)
std
std
outs
out
add
loop
test
xchg
and
mov
dec
mov
jle
xor
test
jl
int
rcl
adc
xchg
adc
aas
pop
mov
sahf
mov
ss
bound
sbb
inc
dec
mov
test
and
lods
push
jle
out
shl
pusha
sar
add
pop
cmp
outs
pop
or
jle
fmul
int3
mov
fisubr
mov
mov
adc
popa
retf
out
addr16
push
mov
dec
data16
xlat
add
jp
pop
pop
ficom
mov
adc
lea
sub
mov
adc
dec
dec
push
mov
sub
push
inc
test
cmp
data16
hlt
hlt
popf
sbb
jge
jno
and
(bad)
clc
fiadd
mov
jecxz
adc
or
jmp
jb
out
adc
cmps
mov
sti
mov
(bad)
mov
jmp
xchg
jo
lahf
scas
cmps
(bad)
lock
aas
enter
or
mov
mov
and
rcr
outs
add
dec
inc
push
shl
pushf
bound
scas
sti
jns
sub
xor
cmp
push
sbb
psrad
mov
mov
pop
pusha
cmp
push
loope
adc
(bad)
fisubr
es
dec
inc
out
or
or
jle
xor
pusha
call
test
adc
push
dec
ins
std
icebp
pop
mov
cld
mov
lods
ja
es
je
and
popa
inc
inc
fisttp
inc
fisttp
xchg
adc
shl
test
adc
(bad)
mov
fsub
mov
call
(bad)
push
dec
clc
leave
imul
sbb
addr16
mov
jb
shr
aas
pop
mov
xchg
pop
mov
int3
icebp
sub
nop
cld
test
mov
rol
in
shr
mov
pop
movs
jae
inc
sbb
or
je
jl
(bad)
mov
mul
std
arpl
push
mov
jp
or
xchg
mov
jmp
mov
ds
mov
movs
int3
ins
test
mov
stos
pop
fs
sub
lea
xor
xlat
into
cs
mov
xchg
shl
fsub
dec
xor
ins
or
in
cdq
pop
sbb
(bad)
or
sub
pop
jmp
adc
inc
cmp
mov
adc
out
imul
icebp
jmp
retf
sub
push
or
jbe
or
fdivr
stos
xor
cdq
or
xchg
imul
aas
cmps
aaa
mov
dec
ja
mov
into
sbb
int3
add
and
retf
mov
andps
and
mov
adc
adc
sub
fstp
mov
stc
test
(bad)
aas
jns
ja
mov
xlat
mov
jg
(bad)
jmp
dec
or
sub
call
lock
adc
test
push
inc
icebp
sahf
dec
ins
mov
xchg
jne
adc
test
repnz
mov
or
dec
out
movs
test
loop
out
pop
iret
repz
add
stos
mov
ficomp
addr16
or
jmp
(bad)
int3
(bad)
into
test
adc
or
imul
aas
cld
mov
icebp
(bad)
cmps
out
bound
add
(bad)
retf
inc
imul
shl
and
add
leave
je
xor
lods
loop
fstp
dec
mov
push
push
mov
jle
sub
dec
das
pop
and
stc
aam
rcl
(bad)
mov
pop
js
in
pop
jnp
mov
inc
std
cmp
into
and
bound
addr16
adc
cmc
xchg
gs
(bad)
movs
(bad)
loopne
pop
popa
and
mov
cmp
into
aaa
(bad)
ror
jecxz
sbb
cmp
repz
add
ds
dec
loopne
mov
cs
(bad)
hlt
cmc
loop
or
jns
fimul
or
adc
sub
mov
ins
mov
pusha
ss
scas
dec
cmp
test
xor
pop
add
aaa
jb
hlt
add
leave
enter
arpl
fistp
mov
xchg
(bad)
repz
ins
dec
shl
xchg
mov
pushf
mov
jae
push
movzx
jecxz
lods
je
pop
sub
xor
dec
fwait
mov
(bad)
mov
jmp
or
shl
jmp
lea
sbb
mov
icebp
ins
inc
xor
cli
jbe
imul
or
pop
daa
in
push
in
stos
int3
(bad)
popa
es
pop
dec
or
adc
sub
mov
add
call
sbb
shl
push
and
inc
movs
xchg
jmp
or
shl
jmp
cmps
(bad)
push
cmc
xor
xchg
mov
xor
addr16
pop
retf
or
popa
fmul
dec
mov
movs
popf
cmp
jmp
int
imul
lahf
xchg
cmps
sub
pushf
push
mov
pop
std
mov
push
js
push
sbb
xor
addr16
mov
scas
jg
fldenv
dec
test
outs
(bad)
sbb
xor
fs
sub
pop
mov
jbe
call
or
cmp
les
in
jae
pop
loope
sub
pop
jmp
je
push
cld
dec
xchg
adc
mov
pop
or
push
push
shr
mov
dec
repnz
jmp
push
xchg
scas
jb
sbb
mov
xchg
mov
xchg
inc
adc
ret
or
pusha
call
jae
pop
out
sub
push
sbb
sbb
add
cwde
fs
sub
mov
or
mov
cmp
out
addr16
or
xor
jp
sbb
aaa
sbb
icebp
(bad)
or
pop
mov
es
ret
loop
jmp
adc
popa
das
adc
ins
mov
add
push
outs
into
inc
mov
(bad)
cmp
inc
and
call
cmps
shl
cwde
retf
pop
cli
inc
daa
(bad)
xchg
jne
sbb
in
enter
adc
mov
stos
mov
xor
xor
shr
(bad)
out
rcr
fdivr
xchg
retf
rcl
shr
xor
out
arpl
push
push
in
jno
or
pop
(bad)
leave
pop
cmp
inc
mov
xlat
iret
ins
call
mov
mov
or
test
ja
add
jge
push
add
jl
pop
popa
int3
mov
or
jne
add
test
loopne
cmp
stos
loopne
mov
push
push
mov
dec
pop
and
mov
pop
or
jmp
out
jg
add
sbb
repnz
and
dec
push
popf
and
cmc
push
out
adc
add
and
push
xchg
pop
lahf
sub
std
lods
inc
fsubr
sbb
fadd
ins
ds
mov
pop
outs
push
jae
das
adc
enter
inc
add
xchg
add
push
out
pop
fwait
movs
ins
cli
sbb
not
jno
push
mov
test
inc
(bad)
ficomp
dec
push
sbb
add
(bad)
out
xchg
into
aam
cmps
sahf
scas
daa
cmp
retf
(bad)
retf
pop
adc
fidivr
sub
(bad)
jne
adc
rcl
add
sar
mov
imul
inc
push
movs
shr
xor
pop
outs
call
cmps
cmp
jne
sub
retf
stos
into
leave
fistp
out
sbb
jne
pop
das
fwait
idiv
dec
arpl
dec
adc
or
loopne
arpl
xor
pop
nop
cmp
les
or
ja
pop
shr
ds
adc
lods
mov
xchg
cmc
jo
cmp
push
cmp
fiadd
jg
dec
lock
mov
mov
add
ja
adc
or
into
sbb
aam
out
rcr
lods
aad
and
push
and
(bad)
mov
in
sbb
loop
aam
bswap
fadd
inc
xor
adc
cdq
jge
sti
cmp
lock
mov
fisub
imul
mov
fucomip
in
push
repz
or
sbb
sbb
mov
xor
adc
loop
pop
dec
cs
out
push
jo
test
leave
imul
dec
jo
sub
aam
cmp
push
sub
mov
push
xchg
imul
pop
push
leave
pop
sar
pusha
dec
adc
xor
loope
xchg
clc
gs
jns
ret
sbb
pop
mov
adc
(bad)
adc
jnp
(bad)
loopne
mov
fist
bound
cmp
test
js
lahf
fst
lods
icebp
push
arpl
mov
out
sbb
les
mov
push
mov
ds
cmc
ja
xchg
jbe
outs
jge
mov
ins
mov
jbe
lea
push
daa
daa
push
fisubr
sbb
mov
and
ficom
(bad)
cdq
ret
jmp
cmps
inc
add
push
sub
cmp
and
cmp
in
pop
scas
jb
out
pop
jge
jbe
mov
push
pop
sub
ret
mov
lahf
aam
sub
push
adc
add
pop
jbe
sbb
push
xchg
cmp
mov
arpl
gs
inc
sar
mov
test
clc
ret
daa
aam
or
ins
jg
stos
mov
cmp
jmp
dec
mov
add
not
jmp
xchg
mov
adc
das
icebp
mov
ror
fwait
add
inc
pop
xor
dec
adc
in
sub
das
mov
pop
pop
ror
inc
(bad)
icebp
pushf
mov
xchg
push
sub
into
jae
xor
push
scas
ret
xchg
mov
pop
test
pusha
inc
stos
sub
sbb
pushf
in
aas
fst
mov
dec
xchg
lods
shl
shl
ds
xor
jmp
fistp
push
jb
and
sbb
cmp
add
out
push
shl
fsubr
int
xchg
inc
retf
popf
(bad)
jge
pop
or
loopne
cs
and
cmc
jg
sbb
retf
out
pop
mov
sub
inc
fld
pop
clc
rcr
imul
jb
or
enter
or
and
push
idiv
mov
std
dec
push
in
in
into
sbb
push
xchg
xor
pusha
xchg
pop
(bad)
dec
mov
mov
out
push
adc
or
popf
(bad)
lods
xchg
sub
dec
lock
mov
add
inc
push
into
enter
xchg
les
sub
into
add
push
into
rcl
daa
mov
pop
push
(bad)
mov
sub
into
push
ds
aam
and
xor
ins
dec
mov
ror
and
in
push
sbb
push
push
data16
popf
adc
xchg
cmp
push
ret
test
(bad)
fs
cmp
loopne
test
pop
enter
mov
xor
or
inc
cdq
mov
and
stos
sub
jmp
out
mov
add
test
add
mov
cmp
imul
xor
sub
(bad)
xor
daa
dec
sbb
add
xchg
sub
fld
fld
lea
std
(bad)
pop
repz
stos
pop
jns
lods
push
fs
scas
and
int3
sub
(bad)
sub
ins
data16
push
push
mov
mov
clc
fninit
movs
lods
int
jo
mov
mov
sbb
xchg
outs
test
jo
pop
cmp
cmp
rcl
aas
fld
push
jecxz
fmul
xor
sar
jg
sub
push
xchg
sahf
xor
in
cld
inc
adc
je
fist
dec
ret
push
pop
mov
push
addr16
cdq
cs
sub
add
xor
mov
jmp
xchg
lds
xchg
dec
movs
rcr
into
sub
loopne
into
ss
ror
add
pop
dec
xlat
sbb
pop
inc
or
out
ja
scas
push
js
int
mov
pop
jmp
add
or
pop
cwde
or
dec
(bad)
mov
jl
fcom
sahf
xor
sbb
lods
hlt
(bad)
sbb
inc
in
sbb
xchg
mov
push
adc
lahf
scas
push
xor
or
in
jbe
movs
push
lods
push
sbb
jno
mov
std
lods
and
int3
push
mov
cwde
sbb
mov
or
imul
xor
sbb
or
test
sti
sub
mov
xor
retf
mov
xlat
push
jmp
mov
xchg
cs
mov
(bad)
sbb
xchg
xchg
(bad)
cdq
push
jle
in
dec
jbe
(bad)
(bad)
lds
xchg
sti
es
cdq
pop
xchg
xchg
xlat
inc
sub
mov
and
popa
and
jns
and
iret
or
pop
sub
mov
mov
fcmovu
fsubr
sbb
ret
cmp
push
test
into
imul
cmp
mov
mov
mov
or
cmp
pop
sub
fisub
xchg
pusha
pusha
hlt
lahf
out
pop
in
ja
xchg
aaa
in
iret
test
hlt
cmp
outs
xchg
sub
jno
push
scas
gs
jae
push
add
ret
into
inc
push
mov
gs
dec
dec
add
sbb
stos
sbb
jl
mov
das
fild
sar
stc
mov
(bad)
sbb
je
ja
push
fs
ins
or
mov
mov
bound
jp
dec
adc
cmp
pop
fild
lods
scas
cmc
pop
scas
inc
jmp
mov
push
test
sbb
xchg
das
xchg
cmps
mov
sbb
jno
dec
(bad)
ss
push
push
sub
dec
lock
daa
xor
mov
in
(bad)
mov
into
pop
sub
mov
push
pop
add
cmp
inc
xor
xlat
and
inc
mov
scas
add
push
inc
push
mov
pop
jo
mov
xchg
aas
mov
aam
iret
mov
add
lods
pop
mov
adc
(bad)
cwde
test
and
(bad)
push
xor
jb
inc
daa
test
out
xor
aaa
and
mov
sbb
push
aam
jle
aam
dec
fs
dec
or
sbb
pushf
pop
imul
xlat
and
cmp
mov
sub
xor
test
and
out
xchg
lods
mov
loop
imul
push
pop
shl
mov
aad
or
inc
jmp
fwait
inc
rol
xchg
mov
adc
push
das
xlat
les
stos
bound
adc
or
xchg
call
lea
ror
aad
pop
sbb
fdivr
lds
icebp
aad
cmp
jle
out
add
loop
mov
stos
mov
cld
sub
push
dec
jmp
adc
fwait
movs
stc
enter
stos
fucom
sbb
jbe
mov
frstor
mov
imul
retf
ror
pop
push
or
mov
xchg
pop
pop
pop
adc
outs
and
pop
jns
repz
mov
dec
shl
and
inc
xor
pop
xchg
(bad)
jne
call
mov
loop
icebp
mov
sbb
or
and
add
popaw
mov
js
clc
lahf
cmp
mov
loope
cmp
je
aad
mov
(bad)
mov
and
push
xor
fst
pop
out
leave
mov
stc
jle
sahf
pop
xchg
call
iret
or
or
push
bound
push
pop
mov
lahf
inc
jb
push
cmp
pop
inc
xor
enter
adc
aaa
int3
sub
dec
push
(bad)
cmp
fistp
xchg
mov
sbb
je
mov
xchg
or
jns
jae
jp
inc
sub
rdpmc
sbb
dec
call
aam
in
jno
add
stos
xor
in
push
les
or
jg
mov
call
rol
or
cli
add
mov
std
sub
(bad)
pusha
xchg
mov
loop
addr16
test
pop
lock
(bad)
out
mov
mov
in
(bad)
lock
add
push
push
dec
addr16
stc
outs
jge
and
dec
jmp
adc
xor
(bad)
aam
fwait
cmp
stos
hlt
jnp
lods
mov
xor
imul
mov
inc
cli
or
xchg
sbb
mov
aam
iret
pop
outs
xchg
retf
dec
and
popa
inc
xor
test
fild
cmp
jae
jns
push
cli
dec
jle
add
shl
aaa
xchg
cmp
jle
xchg
pop
fs
dec
ja
sub
mov
sub
int
rcl
push
sub
jae
(bad)
mov
jle
add
(bad)
xor
outs
xor
popa
movs
or
sbb
jp
out
je
jp
add
int
mov
push
ins
cwde
out
mov
retf
ror
push
mov
sub
xor
push
inc
in
xor
adc
outs
dec
lds
inc
aad
retf
sbb
xor
fcomp
dec
mov
aas
sbb
mov
push
inc
dec
out
daa
cld
mov
ss
pop
outs
les
mov
cdq
int3
inc
sub
fucom
(bad)
mov
enter
fnsave
movs
dec
sub
add
aas
mov
adc
adc
push
and
jle
fnsave
cmps
xchg
jne
sahf
mov
cmp
ins
xchg
jp
sbb
cmc
jbe
mov
add
xor
mov
jo
xor
test
mov
xchg
adc
push
call
lods
xchg
ja
or
xchg
add
inc
out
mov
stos
sbb
push
adc
push
or
mov
bound
das
retf
or
mov
stos
inc
push
pop
jns
mov
sub
xor
xchg
ret
iret
sub
call
dec
jo
adc
and
jno
sti
cmp
xor
out
enter
fidivr
xchg
ds
imul
cmp
shl
dec
or
jae
les
retf
inc
test
bound
jl
or
popf
mov
or
js
cmp
(bad)
pop
std
pop
cwde
push
mov
dec
and
les
dec
int3
adc
js
gs
or
dec
mov
dec
jb
arpl
jb
daa
adc
push
aas
adc
shl
repnz
and
push
mov
fstp
popf
push
inc
or
dec
test
xor
loop
(bad)
int3
shl
(bad)
fcmovnbe
cmp
jns
pop
adc
imul
in
jmp
loop
(bad)
cs
bnd
pop
(bad)
loopne
mov
in
mov
lahf
jge
mov
cwde
(bad)
lea
and
inc
xchg
or
pop
dec
mov
cli
inc
xchg
shl
outs
rcr
in
pop
sbb
xchg
push
xchg
mov
rcr
movs
int
xchg
retf
mov
fisubr
adc
into
pop
adc
inc
loopne
jnp
jmp
bound
push
push
mov
stos
and
mov
out
inc
mov
ror
mov
ror
sub
push
mov
pop
ror
push
repnz
push
xchg
pushf
pushf
scas
mov
xchg
mov
adc
sub
xchg
arpl
je
and
(bad)
mov
rcl
mov
or
icebp
and
pop
xchg
mov
push
xor
mov
add
inc
test
and
or
je
icebp
dec
rcr
mov
lea
inc
cmp
mov
add
leave
clc
mov
addps
and
fstp
fsubp
ror
out
jecxz
xchg
or
in
scas
das
rcr
inc
push
pushf
in
(bad)
mov
fisttp
jp
mov
push
das
(bad)
aaa
stc
je
mov
jne
inc
test
cmps
(bad)
xsave
or
push
sar
add
int
daa
pop
inc
pop
les
fmul
mov
movs
(bad)
dec
out
adc
pop
mov
aam
push
call
xchg
push
ss
push
pop
mov
sbb
lods
jmp
shl
adc
xchg
rcr
or
test
add
jle
xor
sub
mov
push
xor
jne
push
(bad)
jmp
into
inc
outs
xlat
mov
xchg
stos
jbe
xor
iret
jns
jg
xlat
mov
pop
dec
push
enter
jns
add
int
rol
sub
fst
mov
fisttp
cmps
sbb
or
add
(bad)
mov
test
mov
cmp
test
cs
fadd
jecxz
xchg
cwde
xor
cmc
fist
inc
jmp
das
test
fisttp
cs
mov
xchg
push
dec
push
pop
addr16
out
lods
inc
xchg
shl
cmp
jb
adc
cmp
ins
jmp
sub
les
sbb
les
jo
out
mov
or
sahf
enter
xor
out
ds
lods
sbb
cmp
addr16
jno
iret
push
test
sahf
cli
push
adc
rcr
in
ficom
mov
inc
in
int3
sbb
mov
out
xor
cmp
rol
jp
inc
popf
fisub
or
mov
das
addr16
adc
aad
dec
sub
cmp
cli
addr16
dec
gs
xor
ss
push
out
dec
adc
pop
fimul
mov
lods
fiadd
or
popa
add
xchg
cmps
ret
sub
leave
mov
sub
add
fld
inc
and
pop
jmp
dec
and
fs
lods
scas
and
arpl
sahf
jg
outs
adc
mov
inc
das
sub
(bad)
fdivr
inc
jmp
or
imul
fadd
mov
sub
and
adc
inc
sbb
sub
add
push
cmps
into
psubd
repnz
sbb
fmul
fimul
sbb
test
jae
int
test
out
imul
rcr
rcr
pop
xchg
sahf
push
fmul
push
and
pop
retf
dec
cmp
jmp
cmp
fcom
mov
movs
outs
cmp
clc
pop
push
test
and
paddw
pop
push
stc
xchg
lods
jns
or
outs
test
adc
mov
mov
mov
mov
mov
cvtdq2ps
es
inc
mov
xor
mov
dec
xor
loop
sar
imul
push
xor
xchg
int3
cmp
idiv
jb
fcom
popf
sub
sbb
adc
mov
mov
fisttp
add
xor
and
push
cmp
rol
sub
ffree
ss
cmp
xchg
fs
sub
je
mov
fild
sub
arpl
dec
and
addr16
cmp
les
jmp
cmps
aaa
fst
cs
je
or
popf
adc
pop
xlat
pop
inc
add
jp
adc
and
pop
rcl
sub
ror
mov
mov
mov
and
std
enter
int3
xor
jmp
popf
fnstenv
ss
(bad)
jl
ja
cld
dec
imul
mov
dec
fistp
inc
data16
xor
js
sbb
int
add
js
jle
daa
cmc
std
iret
push
adc
call
jle
xchg
cwde
test
les
out
dec
and
lds
data16
stos
mov
adc
sub
movs
jno
ret
out
mov
push
es
lods
mov
pop
call
adc
jmp
or
push
sbb
std
loopne
mov
fwait
and
and
adc
les
push
inc
(bad)
cwde
ds
dec
adc
push
ja
push
fwait
shr
je
in
xor
das
in
nop
dec
retf
aas
xor
lods
enter
jmp
aaa
jbe
imul
loope
mov
dec
or
hlt
push
scas
jno
add
push
lock
inc
and
adc
enter
jbe
and
repz
add
test
push
fs
inc
push
repnz
mov
jo
movs
bnd
ret
push
(bad)
fwait
adc
loopne
ret
jb
out
bound
add
stc
fld
jecxz
add
jns
addr16
mov
cld
lahf
fwait
sahf
cmc
pop
jne
pop
cdq
xor
fsub
push
loope
aad
sub
adc
push
mov
fcomp
inc
and
pop
popa
in
sbb
add
xor
inc
xchg
mov
dec
xor
mov
(bad)
out
repnz
fisttp
cdq
ret
(bad)
in
sub
and
stos
call
add
dec
leave
cmp
dec
jno
sub
sub
push
inc
outs
dec
pop
fmul
arpl
xor
(bad)
jle
fld
cmc
test
jnp
nop
jg
aaa
clc
adc
jo
mov
out
sahf
pop
cmp
sub
jle
ds
mov
jl
leave
fcom
call
mov
repz
adc
std
sub
cmp
loop
cld
push
mov
je
aad
mov
lock
ret
xor
inc
sbb
in
inc
pusha
and
xchg
frstor
push
cwde
(bad)
int3
es
mov
adc
std
push
dec
rcl
call
dec
loope
inc
jp
and
sbb
aas
xlat
lock
sub
xor
mov
xor
mov
mov
jmp
adc
dec
dec
cdq
inc
add
lods
dec
call
pop
loopne
jb
sbb
mov
sbb
cmps
sahf
movaps
jmp
add
lds
xchg
jb
or
arpl
ss
popf
out
sbb
hlt
aaa
mov
pop
arpl
jno
addr16
dec
push
popf
shr
mov
mov
enter
cmp
lods
jns
sbb
(bad)
in
mov
inc
out
adc
loop
dec
xor
mov
xor
retf
in
repnz
push
cmp
push
inc
cwde
ror
sub
cmp
out
pop
and
pop
fst
movs
jl
(bad)
cmps
push
arpl
cmp
sub
dec
inc
mov
popf
int
(bad)
sar
pop
sub
adc
push
cmps
sub
jecxz
and
ror
add
sbb
and
pop
ins
mov
or
sahf
ffreep
fdivp
pop
pop
pop
adc
or
movs
adc
test
lods
mov
pop
add
sbb
pushf
cdq
ror
push
ret
cmp
out
cmp
xchg
adc
or
and
cmp
es
mov
xchg
mov
adc
neg
mov
adc
ror
hlt
test
push
clc
and
leave
and
mov
(bad)
fnstcw
push
ins
xor
sub
ret
push
in
int
push
jo
cli
inc
xor
cmp
jle
mov
push
ror
outs
retf
das
pop
call
int3
or
test
mov
dec
adc
out
mov
sbb
mov
mov
movs
enter
sahf
in
in
cwde
cmp
pop
pop
xor
cmc
mov
aam
retw
fisubr
daa
(bad)
mov
dec
xchg
in
jmp
or
dec
rcr
xlat
pop
mov
loopne
fadd
outs
sbb
(bad)
adc
jmp
sbb
sub
push
push
mov
fidivr
push
push
das
mov
les
sbb
aaa
retf
add
cmp
fdiv
inc
cmp
xchg
pop
jns
add
outs
call
test
push
adc
and
adc
pop
push
clc
cmp
fmulp
xor
push
push
(bad)
ds
push
repnz
inc
aad
xchg
push
lds
sbb
pop
sar
imul
fwait
mov
sbb
stos
loopne
inc
jbe
sub
sub
ds
int
push
jne
aam
push
shl
sti
and
inc
or
aad
fdivr
popf
mov
xchg
dec
sbb
call
sub
mov
fmul
cmps
sbb
int3
jb
push
inc
test
loope
or
test
dec
sbb
lds
sbb
or
push
or
add
into
adc
scas
ja
xchg
mov
pop
inc
cmps
push
das
or
inc
jmp
cmps
sub
bound
jecxz
lea
int
jecxz
in
cmp
mov
loopne
inc
in
jmp
cwde
repz
adc
and
xchg
sbb
sub
mov
adc
jp
rcr
psraw
dec
sbb
mov
(bad)
ss
sbb
dec
(bad)
xor
cmp
mov
adc
xchg
mov
mov
inc
cmp
jp
les
pop
movs
out
mov
xchg
mov
dec
pop
in
lock
ds
(bad)
arpl
mov
adc
mov
mov
adc
jo
push
outs
adc
jl
sahf
fisubr
mov
mov
mov
or
in
sub
loopne
mov
sar
les
push
xchg
jp
adc
adc
out
gs
in
outs
push
adc
xchg
(bad)
mov
sub
into
mov
mov
push
retf
add
imul
les
aas
ja
pop
mov
mov
cmp
inc
je
jno
imul
adc
inc
jne
add
push
pop
sub
inc
xchg
lahf
push
push
add
inc
and
and
cmp
icebp
int3
mov
fist
lods
loop
daa
movs
jecxz
dec
cmp
push
cmps
cmp
enter
(bad)
fbstp
xchg
inc
xchg
sub
aas
out
mov
fimul
cmc
pop
sbb
in
loope
jmp
stc
and
push
and
mov
sub
or
imul
and
jnp
fld
lds
gs
pushf
sub
jmp
(bad)
idiv
imul
sub
scas
or
push
fstp
repz
in
dec
fucomip
xor
pop
aam
mov
or
push
sbb
aas
push
sahf
xor
jl
mov
fwait
pop
sbb
xchg
jp
xor
add
jecxz
sub
push
push
mov
out
sub
add
add
test
xor
mov
mov
sahf
jge
or
mov
scas
adc
mov
xor
jle
mov
call
inc
or
ror
push
bnd
jmp
cli
sar
mov
add
test
xor
test
movs
jmp
mov
mov
mov
fbld
push
std
es
and
cmps
out
popf
out
out
push
data16
mov
movs
(bad)
imul
xchg
sub
daa
jnp
pop
sbb
pop
std
add
cld
sub
or
aad
cmp
repz
mov
and
je
or
sahf
xor
pop
je
push
in
jecxz
ja
mov
pop
pop
mov
aaa
add
mov
lock
or
call
call
jle
data16
jo
xor
jmp
cmp
jmp
push
jle
mov
push
pop
mov
mov
ins
(bad)
pop
fwait
push
dec
retf
xlat
sahf
sbb
aam
pop
xor
gs
pop
pop
bound
dec
sbb
mov
push
add
inc
js
sar
icebp
cs
call
in
idiv
lds
imul
test
outs
cli
push
aas
hlt
sbb
inc
jns
out
mov
xor
or
repnz
pop
push
ins
add
ror
loopne
sub
xor
push
sar
xor
stos
ins
sti
fld
outs
ins
bound
(bad)
sbb
pop
push
sub
pop
mov
mov
cli
sbb
mov
pop
sahf
cmc
movs
popf
ret
pop
lods
sti
fidivr
jmp
mov
and
jmp
xchg
fstp
add
es
cmc
daa
imul
dec
xor
jecxz
xchg
inc
sub
jecxz
adc
jg
repz
xor
jb
(bad)
loopne
fisub
pop
dec
or
and
fsubr
push
jbe
mov
(bad)
test
pop
jns
mov
(bad)
pop
rcl
or
pop
scas
mov
fmul
sahf
ret
mov
(bad)
or
call
ins
push
inc
or
and
lock
or
stos
xor
retf
popa
push
jmp
sub
cmc
adc
stos
dec
jne
nop
iret
jle
cmp
push
pusha
shl
call
aad
stos
stc
jns
ins
sub
xor
clc
dec
dec
inc
dec
inc
clc
into
mov
aad
lea
clc
fcomp
fs
dec
xchg
pop
push
in
test
mov
mov
sti
or
cli
sub
inc
cmp
xchg
mov
stos
loop
mov
popa
adc
xor
lods
mov
sub
scas
mov
fcomp
popf
call
jmp
pop
fbld
cmp
push
jbe
leave
mov
xor
cmps
xor
jae
inc
mov
jo
mov
lahf
sar
(bad)
mov
dec
dec
clc
test
xchg
jg
sub
ror
inc
cli
sub
outs
xchg
pop
and
test
jmp
aas
sbb
adc
xchg
cmp
in
(bad)
sub
adc
int
retf
cmp
retf
push
dec
pop
lods
cmp
add
cmp
sbb
loopne
popf
pop
and
sbb
and
push
in
into
add
outs
cmp
in
mov
repnz
mov
pop
leave
jge
cdq
mov
or
xchg
pop
(bad)
repz
leave
cmps
jge
into
or
pop
aas
mov
frstor
xchg
dec
fisub
pushf
repnz
pop
adc
cmp
pusha
dec
and
fisttp
paddusw
aaa
xor
test
mov
ja
(bad)
cli
add
mov
jle
sti
mov
xor
and
mov
mov
sahf
jmp
adc
call
call
lds
push
nop
lock
or
sub
dec
jns
js
add
add
jae
cdq
push
retf
and
test
mov
mov
call
data16
add
js
cld
xchg
stos
imul
arpl
ja
pusha
mov
dec
daa
mov
mov
cmp
mov
xchg
mov
mov
scas
xor
loopne
jg
xor
retf
(bad)
fsubr
jmp
adc
ins
push
aam
mov
dec
xchg
movs
adc
lock
cmps
xchg
push
add
retf
arpl
popa
je
daa
imul
clc
ror
xchg
add
rol
lods
hlt
xchg
lea
retf
fld
cdq
pop
retf
lods
inc
adc
mov
jo
test
leave
add
dec
out
sub
loope
xchg
and
ja
pop
jmp
div
jp
pop
sti
es
test
dec
stos
fstp
in
or
sti
add
cmps
call
mov
(bad)
outs
clc
das
dec
retf
jmp
adc
jl
mov
sub
sbb
jnp
xor
adc
mov
dec
dec
in
std
push
or
test
cmc
dec
and
xchg
jl
pushf
inc
add
or
jne
setge
push
jecxz
lds
mov
adc
mov
sbb
mov
sti
push
data16
xor
cmps
xor
jns
test
mov
sbb
xchg
mov
mov
mov
in
pop
icebp
fsub
call
push
pusha
xor
movs
jg
push
add
inc
in
sar
sub
adc
call
cmp
lods
push
push
add
ds
pop
xchg
mov
cmc
and
mov
gs
mov
sbb
call
mov
cmp
punpckldq
push
jecxz
push
mov
sbb
rcr
sub
test
push
sbb
cld
push
mov
or
jmp
push
leave
call
ins
shl
mov
cdq
aad
adc
mov
sub
add
rcl
aad
dec
in
adc
xchg
xchg
scas
das
movs
leave
fstp
mov
icebp
nop
data16
enter
mov
scas
mov
cwde
or
ins
mov
aas
jbe
adc
sbb
add
sti
cmc
xor
rol
ss
mov
dec
or
mov
jecxz
daa
mov
movs
pop
push
pop
test
push
cmc
inc
leave
cmp
mov
fs
inc
js
(bad)
sti
popa
fs
ret
lods
or
ret
jb
scas
push
rcl
mul
add
xchg
nop
mov
dec
mov
sbb
jp
push
(bad)
sbb
jb
loopne
cmp
pop
into
imul
mov
and
inc
adc
and
fisttp
bound
add
cmp
fstp
xor
out
aaa
jmp
mov
push
jmp
inc
push
sub
dec
mov
dec
pusha
sbb
and
mov
dec
push
fcom
mov
je
std
mov
test
push
mov
out
xchg
test
jae
jb
mov
gs
call
sub
adc
data16
loope
and
ret
pop
add
xor
and
and
js
fs
out
imul
cwde
mov
int
mov
outs
push
cs
loop
jge
mov
test
mov
mov
les
scas
movs
outs
xchg
jecxz
stos
mov
add
sub
push
ins
popf
bound
sub
inc
fidivr
pop
mov
ins
pop
call
in
dec
cmps
pop
dec
cmc
xor
mov
and
inc
je
or
push
mov
add
imul
inc
cmp
inc
mov
mov
mov
imul
outs
xchg
hlt
xchg
cld
adc
dec
inc
mov
cmp
jnp
mov
ss
dec
mov
stos
sub
jl
cld
sub
cmp
inc
bound
ds
(bad)
popf
mov
pop
daa
dec
fstp
mov
adc
pop
xchg
sub
jg
scas
mul
and
adc
push
in
ins
jnp
inc
mov
repz
mov
sbb
push
jmp
(bad)
stos
(bad)
and
ret
xor
mul
or
in
cmps
repz
call
mov
mov
inc
and
popa
loopne
inc
ins
push
dec
(bad)
mov
nop
cld
fadd
dec
ja
add
mov
inc
movs
shr
(bad)
repz
jge
fistp
sub
(bad)
fisub
mov
cmp
xchg
add
pop
aas
lods
cli
imul
mov
test
inc
adc
mov
and
cmp
and
outs
dec
lds
add
jae
aaa
out
cmps
mov
aad
mov
pslld
addr16
push
add
push
mov
lds
jge
lea
cli
dec
or
sub
sub
mov
push
mov
fcom
inc
icebp
je
popa
cmp
rcl
cmps
mov
and
rol
pop
xor
iret
jo
jno
lock
xchg
pop
(bad)
aad
push
jo
cmp
div
mov
fisttp
and
sub
int3
push
cmp
inc
daa
cs
xchg
shl
jno
(bad)
(bad)
(bad)
mov
pushf
repnz
aad
loop
aad
cmps
aas
or
adc
daa
add
dec
jl
xchg
add
scas
pop
xchg
pop
iret
inc
push
test
adc
cmps
jne
sbb
push
inc
adc
xor
and
cs
xchg
dec
cmps
or
scas
dec
mov
jne
push
jae
ds
dec
test
ret
or
fistp
cmps
add
bound
fs
mov
aam
mov
pop
popa
mov
pop
je
aaa
or
mov
pop
xlat
add
neg
(bad)
lock
mov
lods
and
push
nop
jmp
mov
jnp
adc
inc
sub
test
test
xor
push
jmp
jnp
dec
jle
adc
cmp
enter
xchg
pop
test
sub
push
daa
test
aad
inc
rcl
ror
or
push
mul
inc
popf
ds
push
pop
pusha
(bad)
cmp
jmp
jmp
lock
mov
inc
pop
aad
push
fistp
dec
cmc
scas
mov
mov
push
inc
mov
mov
bound
retf
mov
mov
outs
adc
add
sbb
lock
cmp
shr
adc
inc
dec
aad
inc
sti
xchg
out
(bad)
xchg
adc
in
popa
imul
in
pop
sub
sbb
xchg
icebp
ja
xor
fmul
xor
push
pop
cmp
arpl
pop
or
xchg
dec
cdq
loope
clc
inc
cmp
cli
or
cs
dec
or
(bad)
aad
push
stos
mov
fcomip
adc
pop
push
rcl
pop
data16
rcl
or
jb
cli
inc
or
sub
and
stos
and
sub
sub
(bad)
fs
fwait
xchg
movs
lock
das
lock
push
stos
mov
daa
fs
je
clc
pop
dec
les
inc
retf
aad
aas
jmp
(bad)
cmp
sub
pop
mov
xchg
mov
push
mov
and
sub
addr16
cmps
xchg
mov
jmp
test
push
mov
fld
or
out
jp
jno
jge
mov
fcmovu
mov
in
jne
ret
xchg
sub
cmp
sbb
in
in
inc
in
in
cmps
(bad)
push
add
cs
fincstp
lock
add
sub
(bad)
and
mov
pop
mov
call
lea
mov
xchg
mov
sti
or
sbb
adc
mov
cli
push
push
imul
cmp
repz
in
dec
js
pop
fcomp
jecxz
ins
scas
sti
cmp
cmp
shl
sub
jnp
mov
cwde
mov
js
rcr
fisubr
sbb
cmp
pop
mov
in
xchg
sub
in
pop
sub
dec
lahf
jne
iret
push
shr
add
mov
dec
or
into
mov
and
mov
loop
pop
xchg
pop
jmp
mov
adc
fs
adc
mov
rcr
addr16
daa
lock
movs
mov
jmp
xor
or
mov
test
in
mov
mov
js
sbb
bound
das
and
pop
push
cmp
cld
je
faddp
arpl
jg
push
enter
xor
test
leave
xchg
aad
adc
push
adc
jecxz
movs
or
xchg
dec
adc
mov
mov
hlt
xchg
jl
pop
pop
add
stc
or
adc
push
add
inc
push
test
mov
test
cmp
fidiv
lods
sub
lahf
mov
les
nop
adc
sbb
adc
or
(bad)
retf
stc
loop
ror
js
repnz
mov
std
nop
cld
add
add
fcomp
sbb
push
and
and
int
daa
outs
lds
mov
mov
lds
scas
adc
mov
les
or
push
push
cmp
and
fisttp
and
push
cmp
shl
std
dec
rcl
pop
xor
xchg
loope
fs
loope
or
sub
mov
mov
sub
sub
retf
mov
cwde
xchg
xor
jae
xchg
jecxz
ins
out
push
sbb
mov
jecxz
or
sub
and
test
inc
push
jbe
lea
mov
jo
sub
sbb
xor
daa
mul
inc
mov
dec
mov
cmps
or
clc
mov
cs
sub
push
jmp
sar
out
les
stc
inc
jmp
stos
rol
mov
dec
sbb
test
int
jmp
je
les
ss
add
outs
cmps
dec
nop
les
adc
ror
and
in
xor
sbb
scas
push
ret
je
mov
ret
ror
es
jecxz
repz
mov
popa
jmp
add
sub
js
jge
loop
out
mov
inc
nop
sub
cdq
fsubr
and
aad
aaa
push
test
das
mov
sbb
sub
icebp
mov
sbb
cwde
fst
push
mov
push
nop
pop
sub
adc
aas
adc
or
nop
adc
popa
imul
jecxz
scas
cmp
les
mov
inc
adc
jle
jns
inc
ins
cli
fsubr
jbe
lods
mov
fdivp
in
inc
shl
jp
sub
call
popa
cld
jg
mov
adc
hlt
jo
and
or
lods
mov
arpl
clc
addr16
sti
pop
bound
ds
cwde
outs
sbb
mov
mov
cld
xor
lock
adc
push
scas
push
and
lea
mul
idiv
push
mov
push
mov
movs
cmc
xchg
mov
jmp
push
add
pop
mov
(bad)
les
sbb
sbb
in
mov
pop
push
mov
xor
mov
inc
xchg
mov
ins
test
lods
push
fadd
mov
push
fcmovnbe
add
(bad)
lods
xchg
xlat
xchg
movs
ins
mov
and
sbb
push
xchg
jo
movs
pop
xchg
jnp
jle
pushf
je
jge
test
jno
sbb
push
lock
in
std
sbb
adc
jp
xor
sar
jae
lahf
mov
fidiv
push
cmps
rcl
add
pop
sbb
imul
std
outs
push
ffree
in
iret
mov
in
mov
mov
adc
cmp
test
and
cmc
sahf
inc
fs
test
and
inc
dec
retf
mov
addr16
jnp
xchg
inc
jo
inc
inc
and
out
sqrtps
xchg
xchg
sub
xor
ins
sysexit
shl
jg
lock
(bad)
cli
ins
imul
xor
idiv
or
jle
je
mov
shufps
adc
and
aaa
stc
push
and
iretw
fisttp
push
aaa
cmp
fmul
je
jmp
and
test
ins
jns
inc
imul
(bad)
cmc
or
pop
and
xor
dec
mov
mov
push
pop
xchg
xor
scas
imul
pop
sti
retf
sub
adc
out
outs
stos
(bad)
aad
adc
sahf
retf
sub
setl
std
jmp
fldcw
add
pop
sbb
into
ins
out
xlat
pop
inc
dec
jle
cwde
jno
in
push
inc
adc
sub
cdq
sub
mov
pop
cwde
xor
cs
call
sub
pusha
dec
mov
mov
and
add
lahf
je
pop
retf
mov
and
add
movs
movs
in
repz
adc
xlat
push
cs
sub
and
and
sub
or
mov
movs
mov
sbb
(bad)
cvtdq2ps
mov
cmc
sbb
ror
jae
adc
xor
jae
repz
adc
xor
rol
inc
in
cld
cmps
sbb
lods
retf
dec
dec
movs
mov
fs
inc
and
sbb
dec
adc
imul
cmc
add
shl
cdq
pop
mov
data16
jo
fistp
cdq
mov
scas
jbe
mov
cld
rcl
xor
movs
jge
mov
out
cmp
inc
dec
ins
das
out
xor
test
fcmovne
jns
mov
xor
jo
sbb
cli
js
push
dec
cdq
and
fwait
dec
inc
ret
mov
sar
mov
push
mov
mov
cli
mov
jp
fmul
mov
fisttp
jne
xchg
pop
jmp
or
jne
das
xlat
test
jb
pusha
xor
add
cmp
push
cmp
sbb
cmp
mov
inc
sub
jg
fs
outs
icebp
and
pushf
cld
mov
sbb
ja
ret
adc
xchg
pop
loop
in
into
or
(bad)
mov
inc
push
dec
push
add
gs
aam
idiv
and
enter
stc
push
retf
stc
mov
call
in
std
lock
cmc
popf
cld
pop
test
pushf
fst
in
sub
cwde
adc
das
and
nop
push
xchg
inc
or
sbb
bound
cdq
das
and
fild
(bad)
bound
das
or
jmp
or
inc
push
mov
lock
add
popa
pushf
sbb
in
movs
ja
push
inc
outs
push
mov
adc
inc
xor
dec
scas
js
cli
mov
cdq
cmc
(bad)
lock
jns
adc
neg
nop
pop
into
aam
fnstcw
jmp
test
mov
int3
out
mov
jl
outs
mov
jns
mov
mov
inc
lods
mul
add
mov
cmps
shr
out
pushf
cmp
les
in
cmc
sub
movs
adc
and
inc
aaa
mov
rcr
xor
and
clc
(bad)
adc
fnstcw
cmp
stos
ret
pop
pop
stc
and
neg
sbb
movs
iret
jo
mov
and
sbb
xchg
jne
lea
mov
and
(bad)
xor
or
push
cmps
xor
into
addr16
cmp
push
daa
ins
enter
ja
das
fild
repz
loop
sub
jne
mov
mov
adc
popf
pop
inc
jge
(bad)
mov
mov
pop
lahf
test
xor
les
push
or
and
popa
jns
pop
mov
lds
pop
movs
jno
sub
cld
xchg
test
cmp
ds
push
movs
dec
repz
sbb
movs
scas
xchg
jecxz
jnp
fwait
pop
jl
adc
add
sub
mov
push
xlat
inc
call
retf
inc
leave
and
mov
mov
cli
test
(bad)
arpl
push
jne
mov
mov
das
js
repnz
push
stc
mov
ficomp
mov
cld
mov
mov
sbb
test
call
gs
ret
fld
addr16
xor
ror
sti
and
mov
or
add
sahf
jbe
js
sbb
mov
push
out
mov
scas
into
pop
push
xchg
(bad)
pop
dec
add
ins
jnp
and
ja
jge
fisubr
mov
fbld
lahf
fstp
movs
fst
jno
sub
lods
jbe
retf
mov
fcomp
sub
cmp
sub
sub
sbb
mov
into
or
in
xchg
xor
ret
stos
ficom
ss
fstp
ins
dec
cmps
(bad)
jnp
add
sub
sub
pop
xor
mov
jp
adc
test
dec
scas
mov
push
mov
push
pop
jmp
xchg
dec
fnstenv
int3
mov
in
mov
popf
mov
scas
sbb
inc
call
loopne
jae
jno
std
sbb
enter
mov
hlt
adc
xlat
imul
ret
xchg
fstp
fsubr
fwait
mov
mov
idiv
loop
push
iret
inc
fs
mov
inc
call
or
pushf
ret
es
leave
mov
sbb
popf
or
jle
cmp
ret
add
and
arpl
mov
jl
pop
or
iret
sub
fcmovnu
lods
in
mov
imul
ret
clc
push
jle
cmp
out
ror
push
pop
scas
xor
fldenv
(bad)
cmp
imul
(bad)
(bad)
push
sbb
in
imul
pop
sbb
jle
jno
scas
jl
mov
ret
xchg
jae
ret
call
adc
arpl
(bad)
bnd
mov
repnz
test
mov
aam
cmp
repnz
adc
lea
pop
mov
sub
ret
aam
(bad)
mov
mov
loope
add
sub
cmc
test
add
dec
rcr
xchg
jne
hlt
jmp
ficom
rol
xchg
(bad)
mov
add
jne
arpl
push
jmp
je
mov
popf
scas
fimul
(bad)
inc
clc
pusha
rcl
add
cmps
enter
out
(bad)
dec
pop
push
lock
scas
xchg
fstp
sbb
movs
mov
mov
pop
adc
and
lods
sbb
clc
xor
lock
imul
imul
ret
inc
outs
out
ret
inc
lods
lea
nop
add
push
sub
out
push
xchg
sub
cld
jnp
das
push
leave
(bad)
fidiv
jno
or
mov
daa
test
icebp
xor
push
ins
mov
sbb
sahf
jno
(bad)
and
jo
xchg
and
into
das
adc
inc
(bad)
jg
dec
fstp
rcl
push
pusha
in
out
pop
inc
pop
mov
stos
sub
xchg
push
sbb
cmc
fwait
add
jl
imul
cmp
cwde
aas
aad
neg
(bad)
xor
leave
add
jecxz
and
int
jl
bnd
test
ja
mov
mov
cmc
add
pusha
(bad)
jmp
sbb
or
out
xor
neg
adc
or
fsubr
movs
mov
outs
pop
pop
xor
mov
xor
lock
push
cmps
mov
loopne
xor
sti
dec
ret
(bad)
(bad)
xor
stos
mov
mov
sbb
mov
pop
js
out
and
(bad)
in
sbb
mov
xlat
dec
cmp
adc
jp
or
sbb
push
add
test
xchg
add
jbe
inc
aaa
sub
jge
ror
loop
clc
call
mov
xor
xchg
sti
fs
nop
ret
nop
pop
ins
clc
aad
pop
das
mov
push
gs
in
bound
and
sti
xor
cmp
gs
jge
popa
fcomp
mov
xchg
shl
dec
sbb
mov
jne
inc
inc
movs
fistp
mov
mov
jle
pop
lods
cmp
cld
jecxz
sub
push
xchg
push
sahf
loop
out
jmp
cdq
xchg
and
cmps
into
(bad)
or
scas
xor
lea
data16
stos
push
xor
repz
and
push
mov
ficom
pop
adc
xchg
xchg
fidiv
sub
jbe
pop
mov
push
jmp
adc
jmp
mov
imul
retf
loopne
mov
pop
and
mov
call
pop
int3
dec
xchg
dec
popa
mov
les
outs
rcl
pop
cs
scas
push
mov
cdq
jg
outs
dec
jne
xor
inc
sbb
sti
and
jge
adc
and
jne
dec
stos
dec
ss
je
in
aaa
cmps
sub
pusha
movs
cmps
iret
stos
dec
dec
lods
fs
mov
push
xor
jne
inc
je
dec
xchg
call
push
mov
popf
fadd
xchg
xchg
pop
ja
add
ds
in
push
call
add
sub
and
xor
xor
add
les
sub
xchg
push
lea
pop
addr16
sbb
and
jo
nop
outs
xor
or
jp
cmp
add
pop
outs
test
sahf
xchg
mov
stos
je
ret
mov
adc
pop
adc
adc
addr16
imul
clc
lods
xlat
icebp
cdq
pop
sub
inc
imul
fwait
clc
dec
xchg
and
inc
imul
sti
mov
push
xchg
and
dec
mov
cs
loop
out
mov
adc
mov
xchg
push
into
ins
jmp
retf
cmp
rol
inc
jns
inc
pop
jae
add
push
into
mov
fbld
pop
sub
inc
dec
sub
and
pop
xor
aaa
mov
inc
sbb
jecxz
cwde
push
outs
xor
and
and
add
and
xchg
mov
ss
xor
cmp
mov
inc
fchs
inc
pusha
inc
and
jmp
daa
mov
dec
in
ror
cmp
(bad)
adc
sub
push
imul
cld
(bad)
mov
xchg
clc
es
cmp
out
dec
je
mov
fst
into
or
xlat
xchg
test
movs
repz
cmp
push
lock
add
add
fimul
shl
dec
pop
jb
pop
inc
addr16
push
jmp
dec
cmp
xor
test
sar
inc
in
test
mov
addr16
jb
adc
clc
push
pop
jo
sub
call
subps
fisubr
cmp
hlt
xchg
and
push
and
and
(bad)
mov
cmp
mov
add
push
aaa
call
cmps
gs
movs
adc
int3
jp
sbb
pop
mov
push
xchg
pop
or
sar
ror
cmp
mov
(bad)
xor
ja
cmps
push
call
jle
jns
push
push
xchg
outs
sar
scas
mov
xor
xchg
add
daa
fldcw
ret
mov
fsub
fwait
js
pop
jno
and
add
mov
aas
adc
out
adc
mov
pop
mov
mov
or
or
lahf
sub
and
data16
mov
inc
push
ds
xor
xchg
adc
or
scas
xor
push
pusha
cmp
out
jbe
mov
imul
and
into
push
pop
les
pop
stos
ror
imul
popa
mov
movs
and
adc
pushf
mov
cs
daa
cmp
pusha
test
bound
mov
cwde
mov
jl
and
add
mov
aad
mov
fs
jno
popa
adc
push
mov
push
mov
xor
xchg
jmp
xchg
shl
shl
out
sar
addr16
lea
push
mov
mov
aaa
mov
fisub
xchg
rcl
inc
stc
aam
adc
aaa
or
mov
cmps
rol
or
test
ds
or
dec
and
les
or
push
and
pop
test
mov
add
xor
jg
inc
sti
push
call
lahf
push
ret
push
dec
sub
or
sbb
sahf
xor
sti
xlat
test
in
in
movs
stc
push
dec
call
(bad)
gs
sbb
xchg
nop
fld
shr
test
leave
sbb
and
(bad)
adc
popf
push
push
sub
ins
or
push
xlat
pop
or
retf
int
sub
push
push
mov
jecxz
adc
or
mov
dec
(bad)
je
(bad)
mov
movs
pop
lahf
cli
lods
into
popf
xor
pop
jbe
enter
ds
mov
push
cmp
outs
pop
ror
fistp
ins
fdivp
es
cmps
pop
mov
adc
xor
int
cmp
imul
lods
xor
lods
xchg
(bad)
mov
lods
(bad)
stc
cmp
fild
