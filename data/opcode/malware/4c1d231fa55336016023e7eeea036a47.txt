call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
shl
retf
mov
and
mov
cmp
lds
arpl
jmp
ins
sub
add
or
push
pop
frstor
mov
xchg
call
xor
std
sar
leave
push
adc
out
mov
cmp
ret
or
mov
imul
mov
xchg
push
adc
pop
and
cmp
lds
pop
fbld
jge
dec
or
mov
frstor
call
add
xchg
fstp
aaa
div
jg
dec
adc
xchg
pop
push
out
data16
outs
cmp
les
or
rcl
pop
pop
mov
imul
jl
or
test
sbb
mov
ins
das
mov
inc
add
mov
adc
icebp
mov
cld
mov
xchg
pop
pop
sbb
mov
ins
sub
mov
xor
jge
std
rcl
sbb
xor
mov
xor
sar
mov
aad
push
adc
xor
mov
push
adc
cwde
pop
and
out
lods
outs
cmp
ror
aam
push
sbb
xor
ror
arpl
out
lods
mov
cmp
enter
xchg
push
adc
repnz
xor
cli
mov
pop
sbb
cdq
pop
and
movs
ins
xor
mov
jg
adc
xchg
push
sbb
imul
dec
adc
cdq
pop
jecxz
outs
xor
inc
rol
push
frstor
out
test
cmp
mov
retf
mov
cwde
pop
jne
stc
in
jle
pop
push
pop
sti
fcmovnbe
sub
repnz
shl
xlat
dec
push
cs
ss
das
ror
jne
inc
pop
movs
add
add
and
pop
shr
cld
pop
leave
(bad)
in
test
mov
xchg
pmulhuw
scas
mov
icebp
or
fimul
jp
mov
lds
xchg
je
mov
cld
pop
mov
push
pop
mov
jnp
xor
(bad)
push
cmp
stc
push
mov
clc
pop
or
rcr
inc
out
mov
inc
out
stos
add
in
add
in
xor
clc
in
fnstsw
push
mov
int
scas
add
out
test
add
pop
or
leave
pop
dec
pop
add
dec
jmp
out
inc
mov
pop
add
mov
mov
jnp
das
jge
mov
add
dec
aam
inc
fisttp
clc
in
stos
mov
jnp
push
push
xor
adc
jb
adc
or
pop
fs
xor
mov
(bad)
std
gs
inc
clc
add
ins
clc
mov
inc
mov
fnstsw
enter
shl
xor
in
xchg
movs
test
sbb
gs
jmp
mov
aad
pop
inc
aad
pop
inc
aad
add
jne
int3
aam
daa
(bad)
into
push
mov
inc
aad
pop
inc
aad
pop
inc
aad
dec
shl
mov
aam
mov
inc
aad
dec
shl
mov
aam
mov
inc
aad
pop
inc
mov
ds
lods
jnp
aam
mov
aam
mov
inc
aad
pop
inc
aad
pop
inc
aad
jecxz
inc
mov
inc
aad
pop
inc
aad
pop
inc
lds
jg
push
xchg
int
mov
inc
aad
pop
inc
aad
(bad)
sar
daa
mov
push
ds
int3
aam
daa
arpl
push
lods
movlps
xchg
fistp
inc
aad
pop
inc
aad
pop
ja
mov
aam
mov
inc
aad
pop
inc
aad
add
aam
mov
inc
aad
pop
inc
iret
daa
addr16
mov
inc
aad
pop
inc
aad
fs
inc
mov
inc
aad
pop
inc
aad
pop
inc
aad
(bad)
fadd
pop
inc
aad
pop
inc
aad
psubsw
aam
push
jnp
xchg
xchg
inc
cmp
(bad)
out
xchg
xchg
inc
mov
inc
aad
pop
inc
aad
mov
pop
fimul
aad
pop
inc
aad
add
in
cmp
aam
daa
mov
push
mov
inc
aad
pop
inc
aad
pop
inc
in
xchg
xchg
inc
mov
inc
aad
pop
inc
aad
mov
pop
mov
inc
aad
pop
inc
aad
pop
inc
aad
pop
pop
pop
mov
xchg
inc
mov
inc
aad
pop
inc
aad
pop
inc
aad
mov
inc
mov
inc
aad
pop
inc
aad
pop
inc
and
les
ja
sub
push
xor
aam
daa
cmp
push
fsub
xor
sub
int3
aam
and
pop
mov
pop
add
pushf
xlat
and
sbb
add
sub
inc
fwait
or
ja
inc
lahf
inc
(bad)
inc
jmp
xchg
pop
xchg
add
jns
lods
pop
mov
pop
mov
mov
aad
adc
adc
xor
inc
pop
push
inc
clc
in
idiv
cmps
mov
stc
pop
loop
sbb
push
std
jns
or
mov
fsub
popf
or
bound
test
pop
mov
adc
aas
add
loope
sbb
jle
jmp
fcomp
add
in
out
mov
ja
clc
fsub
add
inc
pop
stos
pop
fmul
add
dec
mov
loopne
xchg
inc
mov
pop
int
movs
mov
jnp
mov
in
in
pop
aas
movs
mov
jnp
or
pushf
dec
push
inc
mov
jecxz
pop
mov
adc
xchg
stc
and
mov
adc
ins
sahf
xor
adc
stc
std
and
mov
adc
and
pop
in
dec
test
mov
jnp
scas
mov
adc
add
mov
shl
std
sbb
inc
clc
inc
mov
add
pop
inc
clc
mov
clc
jmp
sbb
jmp
out
add
pop
dec
sbb
and
adc
mov
enter
frstor
dec
jmp
imul
push
lfs
or
fimul
es
fadd
add
lods
out
or
ins
mov
inc
sbb
mov
jbe
mov
sbb
mov
jbe
mov
mov
iret
pop
loope
sbb
jae
jne
adc
sbb
imul
mov
sbb
pop
jbe
mov
add
push
in
iret
add
cld
sbb
jae
sbb
jae
add
sar
sbb
jae
or
jae
jo
in
sbb
sub
mov
sbb
(bad)
jbe
mov
inc
cmp
sbb
(bad)
jbe
mov
sbb
jae
dec
mov
jne
cmps
fimul
pop
mul
mov
rcl
(bad)
and
movs
xchg
sub
test
ja
movs
jo
ret
sbb
pop
loopne
and
mov
inc
sbb
add
ins
test
clc
sub
imul
xchg
imul
xor
imul
xchg
imul
xchg
jnp
mov
mov
pop
and
adc
and
leave
ins
mov
sub
and
pop
and
shrd
clc
ins
mov
retf
jg
mov
iret
mov
fdiv
add
cmp
inc
clc
int3
and
imul
jmp
pushf
add
stc
(bad)
pop
dec
sub
dec
mov
clc
pop
xlat
add
pop
mov
add
pop
mov
pop
pop
and
mov
and
add
sub
ret
sub
xor
loope
movs
adc
fbld
outs
jmp
test
ret
push
mov
mov
nop
lahf
in
xor
repz
retf
mov
daa
mov
imul
mov
rcl
xchg
leave
jecxz
adc
pop
loope
mov
ret
sub
bnd
jns
pusha
and
in
(bad)
xor
jns
jnp
pushf
jae
add
popf
stos
and
stos
cdq
xor
shl
in
retf
jno
xchg
dec
sahf
xor
mov
mov
and
(bad)
in
push
jle
push
and
jmp
nop
loop
and
(bad)
pop
cmc
sbb
pmulhuw
fwait
xor
adc
mov
mov
xchg
mov
iret
fimul
stos
repnz
loope
mov
adc
pop
out
nop
mov
jo
stc
fnsave
jo
mov
mov
fs
repz
xor
xchg
mov
(bad)
mov
icebp
and
das
je
in
pop
fimul
(bad)
sub
add
mov
mov
sbb
mov
xchg
movs
sbb
fcomp
mov
mov
and
outs
or
lahf
push
imul
pop
fs
pop
loopne
lock
lahf
jo
imul
lock
adc
and
(bad)
pop
ds
arpl
mov
jo
pop
mov
add
mov
sub
mov
outs
jmp
dec
sub
mov
fwait
jmp
outs
sub
mov
fwait
jmp
outs
pop
scas
mov
fwait
jmp
outs
aas
scas
mov
outs
jmp
dec
sub
mov
outs
jmp
dec
sub
mov
mov
in
pop
popf
test
mov
mov
push
sub
mov
cwde
mov
push
mov
outs
jmp
outs
sub
mov
sub
mov
outs
or
add
dec
sub
jl
sub
mov
outs
push
xchg
outs
push
push
push
iret
out
test
xchg
push
push
inc
mov
fist
adc
push
in
push
sub
inc
inc
sub
dec
sub
mov
out
sub
dec
sub
mov
out
outs
test
xchg
push
pop
ret
ret
mov
xchg
movhps
sub
ret
dec
sub
dec
sub
mov
out
sub
dec
pop
scas
mov
inc
rcpps
fist
adc
xlat
adc
out
mov
rcl
adc
inc
pop
inc
push
retf
jl
sub
mov
out
sub
outs
sub
mov
or
or
push
mov
push
pushf
stos
push
inc
ficom
aas
xor
lock
mov
jne
pop
push
mov
dec
pop
dec
sub
mov
lahf
sub
outs
dec
scas
xchg
jl
jp
sub
dec
dec
xor
mov
sub
push
sub
ret
dec
sub
dec
xor
mov
outs
int
jle
wbinvd
push
pop
sub
sub
mov
outs
shl
stos
xchg
retf
jl
sub
mov
aaa
sub
outs
sub
mov
xchg
call
mov
call
fwait
inc
repz
pop
dec
xchg
pop
cdq
retf
xchg
mov
pop
jmp
outs
sub
mov
stos
dec
inc
sbb
dec
sub
sub
mov
dec
lea
or
xlat
sbb
call
mov
or
inc
sub
sub
mov
jne
pop
push
dec
sub
mov
out
jmp
outs
or
jle
jmp
pop
sahf
mov
leave
iret
push
pop
xor
pop
push
(bad)
mov
pop
call
pop
lock
mov
jne
aad
call
out
je
mov
or
mov
mov
nop
lahf
in
mov
mov
xchg
inc
mov
pop
xor
in
scas
pop
inc
out
dec
bound
sub
xchg
nop
fdivr
xchg
dec
pop
jne
sahf
out
sub
imul
mov
sbb
mov
jg
outs
dec
mov
dec
jg
(bad)
adc
dec
jae
outs
in
nop
int
cmp
pop
mov
movs
dec
je
pop
nop
mov
mov
arpl
push
and
loope
mov
popf
sub
bound
ins
xor
stos
scas
fld
or
and
xor
ds
push
and
cmp
pop
add
push
and
and
ror
clc
retf
mov
pop
push
movs
and
pop
fimul
fadd
jmp
dec
jo
xor
inc
push
cdq
adc
stos
inc
fs
jo
dec
in
jle
repz
cs
ret
mov
cmp
xor
xchg
repz
or
pushf
loopne
ins
cmp
xor
cmp
into
or
lock
stos
lea
pop
mov
cdq
imul
add
fcomp
jnp
xchg
in
outs
int
sub
fstp
std
pop
ds
or
xor
das
cmp
xchg
jge
push
leave
fld
sub
stc
arpl
fldenv
(bad)
arpl
fldenv
sub
fldenv
push
sub
cmp
pop
push
clc
fst
push
sub
fst
or
fldenv
sub
sbb
(bad)
nop
dec
sub
frstor
jae
or
adc
pop
lods
push
cmp
ror
in
dec
jae
cmps
cmp
jp
or
sbb
push
jecxz
stc
xor
dec
jmp
fld
push
clc
sbb
dec
sub
fldenv
push
sub
fldenv
push
sub
fldenv
sub
in
arpl
jge
cmp
js
in
aaa
cdq
sbb
and
sbb
sbb
sub
mov
sub
fldenv
sub
mov
popf
or
sub
xchg
or
mov
push
sub
fbld
sub
icebp
inc
push
sub
fld
mov
fldenv
sub
frstor
sub
cmp
(bad)
mov
sub
enter
fldenv
jmp
arpl
sbb
js
inc
push
ins
cmp
mov
sub
sbb
iret
fld
sub
fldenv
cmp
sbb
sub
cli
arpl
lahf
jecxz
or
sbb
lahf
jecxz
or
sbb
cld
mov
(bad)
in
jnp
mov
cmp
dec
dec
std
xchg
int3
test
mov
or
dec
dec
cmp
mov
dec
fnstcw
xchg
cmp
lahf
inc
in
(bad)
rol
retf
or
test
cmp
vmread
pop
xchg
mov
ins
aas
xor
lock
jmp
test
mov
arpl
cdq
test
pop
xor
out
mov
jl
mov
xlat
scas
iret
icebp
retf
xor
jmp
int
xor
sbb
jl
sub
test
mov
sbb
mov
mov
ins
mov
mov
lock
loop
rcr
and
push
fmulp
push
xor
dec
mov
xchg
and
fldenv
jne
sub
movs
hlt
xchg
dec
hlt
sbb
movs
sbb
fnstenv
and
aaa
xor
pop
jo
add
dec
(bad)
xor
stos
outs
cdq
in
ds
ins
sbb
jb
out
jno
mov
(bad)
xor
push
mov
(bad)
retf
in
pusha
mov
mov
xor
jo
mov
and
xor
nop
mov
ror
nop
mov
jecxz
lock
ret
adc
mov
xor
xor
add
aam
jo
dec
mov
sub
(bad)
xchg
pop
mov
bound
stos
pop
outs
fucomi
mov
sbb
ins
add
jmp
sbb
ins
add
imul
inc
out
cs
dec
jecxz
ror
jb
pop
or
sub
call
push
iret
jb
sbb
outs
out
add
outs
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
xlat
mov
or
int3
jp
pop
shl
fwait
dec
test
ins
cld
retf
push
fbld
xor
shl
rol
xor
out
mov
sar
xor
hlt
pop
sbb
xor
shl
ror
xor
daa
xor
shl
xor
in
push
sar
xor
hlt
pop
sbb
xor
shl
rol
xor
out
mov
shr
xor
cld
xor
hlt
pop
sbb
xor
shl
shl
xor
shl
xor
adc
push
rol
lea
mov
shl
xor
pop
push
shr
xor
add
push
shl
and
sar
xor
hlt
pop
sbb
xor
shl
shl
xor
shl
xor
mov
int
cs
xlat
mov
add
mov
xlat
test
adc
push
lds
jp
xor
jb
add
dec
out
mov
ror
xor
cmp
(bad)
jb
dec
test
and
mov
in
ret
(bad)
jb
ret
lods
mov
push
ja
idiv
int3
xor
cmps
loopne
rol
out
push
rcl
xor
xor
add
xor
fbld
shr
xor
xor
push
out
mov
out
push
ror
push
rol
mov
cmp
(bad)
xor
shl
push
ror
out
dec
ja
pop
inc
call
push
sar
xor
ret
xor
daa
jmp
xor
out
push
shl
xor
or
push
mov
ret
test
ret
(bad)
mov
out
mov
out
push
shr
xor
ret
xor
and
xor
ret
rol
xor
or
mov
cmp
fisub
mov
xor
shl
push
shl
push
test
push
push
out
push
rcl
xor
cmps
xor
test
xchg
push
out
push
rcr
data16
xor
add
push
cs
xchg
xor
push
sub
xlat
mov
cmp
mov
loope
rol
out
push
rol
xor
xor
cmc
mov
out
push
shl
xor
daa
xor
(bad)
out
jnp
dec
xor
into
mov
in
ret
(bad)
jb
fld
ss
mov
jl
mov
loopne
rol
out
push
rcr
xor
jecxz
push
push
xor
imul
mov
cs
mov
xor
out
int
out
mov
rcr
xor
add
xor
fnstcw
and
(bad)
mov
retf
fisub
shl
jb
out
push
sar
xor
push
xor
in
add
jnp
out
mov
shl
xor
or
push
adc
(bad)
test
fld
mov
sbb
mov
mov
push
test
adc
adc
mov
cmp
out
mov
rcl
push
ror
push
daa
cmp
pop
psubw
icebp
js
xchg
or
mov
fbld
cmp
xlat
or
mov
fbld
outs
lods
cli
cs
cld
mov
arpl
ret
and
stos
ret
or
mov
ins
aas
inc
mov
retf
out
mov
jecxz
mov
fimul
fstp
ds
pushf
fisttp
inc
xor
rcr
mov
ficom
push
and
add
lock
sbb
inc
test
inc
aaa
ins
and
and
sub
and
add
nop
aaa
push
xor
loopne
iret
pop
fs
nop
xor
mov
or
sahf
aad
cdq
lds
or
or
cmp
sub
cs
dec
push
je
popf
aam
push
test
dec
adc
(bad)
retf
hlt
mov
jns
icebp
nop
aad
movs
sbb
jmp
movs
inc
call
mov
mov
and
js
mov
sbb
mov
mov
and
xor
xor
sbb
mov
shl
jecxz
xor
xchg
and
stos
and
xor
nop
mov
repnz
and
adc
mov
lea
lock
lahf
push
push
xor
mov
inc
and
and
retf
je
in
in
gs
pop
(bad)
jae
js
pop
sub
loop
add
out
movs
jp
and
mov
push
(bad)
jge
js
arpl
fbld
dec
js
dec
push
(bad)
cmc
sub
repnz
popf
fidivr
mov
pop
xlat
lea
pop
popa
add
cs
sahf
fsubr
scas
xchg
xor
sahf
pushf
pop
xor
xor
out
hlt
arpl
enter
retf
fmulp
nop
cdq
fmulp
push
imul
xchg
cmps
ds
out
or
fld
es
inc
out
stos
cmp
adc
(bad)
in
xor
lods
into
es
sahf
sub
cmp
jnp
xor
sbb
pop
and
ret
out
ins
sti
jae
out
xor
and
(bad)
pop
sti
xor
aam
fild
inc
cmp
xor
sub
div
out
sbb
xlat
sbb
in
mov
loop
jnp
aad
hlt
aas
es
adc
test
stos
sub
and
jp
lock
mov
or
(bad)
push
or
xor
ret
sbb
push
aaa
cmp
and
js
xlat
int
and
out
imul
in
mov
mov
mov
mov
cmp
imul
fadd
es
jl
jnp
ret
rcr
jo
inc
mov
pop
repnz
jecxz
shl
xor
pop
mov
jmp
pop
sub
sub
shl
jp
iret
lods
or
shl
out
dec
sbb
jo
cmp
inc
ret
adc
push
pop
inc
push
jne
cld
lds
imul
pand
ja
ins
shr
add
push
add
push
mov
push
(bad)
cwde
imul
pop
fwait
cmc
ins
xchg
cwde
cmc
test
mov
fwait
div
xchg
test
imul
imul
add
push
add
push
sub
add
repnz
add
push
popf
imul
add
push
(bad)
imul
mov
imul
add
push
cwde
imul
pop
add
ins
pop
pop
ins
in
cwde
imul
pop
fwait
cmps
test
test
add
push
push
imul
pop
add
push
test
pop
call
pop
add
imul
fadd
push
hlt
imul
cwde
int3
mul
imul
pop
add
push
add
push
jbe
imul
pop
add
push
ds
imul
pop
add
push
es
hlt
idiv
mov
icebp
dec
call
idiv
js
xchg
sbb
clc
fcomp
mov
fldenv
fidivr
cmp
fidivr
sbb
scas
mov
movs
ds
inc
test
ss
dec
sbb
and
aas
or
cmps
xchg
xchg
repnz
cs
sub
pop
xchg
sar
add
cld
jge
pop
lahf
ja
aaa
arpl
and
sbb
std
mov
call
loope
fucomip
mov
inc
inc
sbb
ret
cli
ret
aas
js
ds
test
cmp
ins
pop
or
(bad)
frstor
mov
mov
lock
mov
retf
in
mov
jmp
aas
mov
test
aas
pop
pop
sbb
cmp
cmps
stos
xchg
mov
lock
add
add
inc
cmp
add
mov
cmp
ds
movs
ret
and
out
arpl
push
xor
or
and
xor
in
jle
rol
and
in
daa
stos
jmp
jns
pusha
aas
imul
dec
nop
mov
inc
das
stos
idiv
and
(bad)
sbb
shl
outs
jecxz
fist
xor
(bad)
in
test
cdq
(bad)
sbb
scas
ret
stos
mov
nop
cmp
clc
lahf
jns
inc
fist
mov
mov
sahf
fisubr
addr16
and
jp
daa
jmp
inc
and
pop
ja
call
leave
test
mov
push
daa
icebp
(bad)
xor
cmp
pop
lods
and
sub
cmp
lods
and
pop
lods
das
movs
pop
push
mov
and
xor
cmp
pop
lods
and
sub
cmp
lods
and
pop
iret
and
(bad)
lods
and
pop
pop
mov
imul
mov
inc
add
movs
pop
lods
mov
popa
inc
xor
cmp
xor
cmp
js
cmp
xor
mov
call
js
cmp
xor
jns
push
xchg
jo
or
cdq
mov
retf
cmp
pop
popf
cmp
xor
shr
cmp
(bad)
pushf
(bad)
cmp
pop
and
lods
and
pop
inc
xchg
pop
mov
adc
xor
sahf
dec
mov
cmp
push
into
and
nop
mov
cmp
push
cmps
sbb
imul
pusha
jmp
cdq
mov
mov
stc
outs
and
lods
sti
cmp
pop
pop
and
lods
and
pop
mov
and
sbb
and
pop
lods
stos
cmps
pop
aas
mov
cmp
lahf
daa
stos
cmp
and
pop
lods
jo
pop
test
out
les
inc
xchg
and
pop
test
movs
cmp
pop
and
test
adc
pop
lods
xchg
movs
pop
mov
jns
lods
and
pop
lods
mov
movs
sub
movs
pop
add
jns
lods
and
pop
fbld
movs
sub
movs
pop
lods
mov
jno
fdiv
icebp
(bad)
jb
xchg
sbb
lods
and
pop
lods
mov
test
pop
je
cmps
pop
xor
or
pop
lods
sti
movs
pop
lods
mov
loope
lods
and
pop
add
jns
lods
sti
cmp
pop
xor
and
pop
lods
mov
jno
fdivr
icebp
(bad)
jno
xchg
popf
xor
int
lods
sti
movs
pop
lods
mov
cmp
sbb
pop
xor
int
lods
and
pop
lods
cmps
pop
fsub
icebp
(bad)
jo
xchg
adc
lods
dec
movs
pop
pop
and
(bad)
lods
pop
movs
pop
ins
jo
pop
test
scas
cmp
push
iret
cmps
push
daa
adc
xor
jne
lods
and
pop
add
xlat
adc
xor
adc
retf
inc
add
mov
pop
lods
adc
lds
and
lods
and
pop
js
add
test
les
xor
mov
mov
mov
xlat
shl
mov
fdivr
xor
mov
mov
out
in
in
jb
out
in
in
cmc
cmp
in
test
cmp
in
cmp
out
cmc
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
mov
and
data16
add
mov
and
cmp
cmp
(bad)
in
mov
imul
xlat
jg
loop
pop
in
neg
cmp
aas
cmps
gs
and
and
fist
jmp
pop
ins
out
or
clc
sbb
inc
sbb
out
ret
out
call
and
xor
jno
aaa
mov
test
shr
cdq
arpl
add
data16
call
and
out
push
aas
ss
cmp
arpl
mov
adc
imul
jnp
call
aad
and
and
arpl
into
je
shl
in
(bad)
jmp
mov
(bad)
jp
and
xchg
(bad)
(bad)
and
popf
pop
cld
sub
cmps
mov
cmp
sub
push
and
jp
push
clc
push
rol
mov
push
mov
cmc
in
sub
not
hlt
inc
(bad)
retf
out
jnp
fstp
xor
test
jge
dec
leave
daa
in
mov
mov
jo
and
(bad)
sti
in
idiv
mov
fisub
imul
mov
xor
jnp
pop
mov
xor
mov
xor
mov
add
mov
stos
push
push
enter
mov
sub
cli
and
jge
pop
fs
sub
push
test
sbb
mov
mov
das
bound
sbb
jb
test
lock
inc
lds
into
sub
xor
add
dec
arpl
sbb
mov
scas
lahf
add
out
fwait
sub
lods
jmp
popf
jle
xor
mov
xchg
jmp
sahf
jle
jae
push
mov
test
sub
xchg
lods
lods
inc
mov
sbb
add
xor
xchg
jmp
arpl
push
mov
xchg
aas
push
and
jle
jecxz
add
jno
sub
scas
fwait
sub
jnp
sub
movs
cdq
sub
xor
(bad)
lods
jb
scas
mov
scas
mov
sub
xor
push
scas
add
out
fwait
sub
pop
mov
scas
mov
sub
xor
push
scas
add
out
fwait
sub
cwde
sub
add
shl
xlat
mov
scas
or
cs
fwait
sub
call
scas
fwait
sub
mov
cdq
mov
scas
mov
sub
loopne
sub
dec
sbb
xchg
push
fidivr
mov
fidivr
cmps
mov
scas
ret
loopne
scas
fwait
sub
xor
lahf
stos
cmp
fwait
sub
push
fwait
sub
scas
pop
shl
fwait
sub
scas
fwait
sub
and
pop
lods
xlat
sub
mov
sti
dec
arpl
xor
push
or
stc
dec
out
mov
push
cmp
into
out
sub
ds
sahf
mov
fldcw
mul
dec
jns
nop
mov
cmc
jb
ror
mov
test
out
pop
mov
movs
mov
fs
test
repz
ins
sbb
(bad)
popf
pop
cli
std
jg
call
jns
sbb
xor
ja
aas
fistp
and
jae
das
xor
call
stc
lods
xchg
push
mov
ins
iret
jmp
push
mov
xchg
and
in
jns
into
out
ds
popf
fstp
xor
in
mov
call
and
stos
ret
sbb
push
ret
out
push
cmp
ins
pop
mov
pusha
in
and
std
sbb
aas
mov
sub
and
jnp
add
add
mov
cmp
jo
lods
mov
push
fs
xchg
repz
adc
in
loop
in
neg
mov
sbb
daa
and
fdiv
mov
inc
enter
jle
xor
inc
xchg
push
and
mov
shl
enter
jge
pop
or
jg
dec
push
bound
in
xor
ds
cmps
lock
adc
adc
jge
(bad)
popf
ja
retf
pop
ins
xor
jne
test
sbb
jo
jnp
loopne
push
ficom
push
push
jae
das
xor
call
jmp
daa
cwde
inc
fidiv
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
(bad)
pop
sub
stc
es
pop
push
out
stos
jo
inc
stos
pusha
cs
push
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
mov
inc
scas
inc
retf
inc
stos
cli
mov
cli
xchg
cli
test
cli
pop
stc
scas
inc
retf
inc
stos
cli
mov
cli
xchg
cli
cmps
inc
(bad)
cli
pop
inc
push
pop
cli
xchg
stc
out
loop
inc
cli
pop
inc
mov
pop
inc
(bad)
cli
scas
inc
retf
inc
mov
cli
pop
stc
scas
inc
retf
inc
stos
cli
mov
cli
xchg
cli
test
cli
pop
stc
test
cli
pop
cli
pop
inc
push
pop
inc
jmp
inc
ret
inc
ret
inc
jmp
inc
jmp
inc
pop
cli
test
cli
pop
inc
push
pop
inc
jmp
inc
ret
inc
pop
cli
pop
inc
push
cli
pop
stc
das
inc
push
out
inc
mov
pop
inc
mov
das
inc
retf
inc
jmp
inc
ret
inc
push
daa
inc
sar
cmps
inc
push
cli
daa
inc
retf
inc
ret
inc
ret
inc
mov
xchg
cli
xchg
inc
mov
pop
cli
daa
inc
ret
inc
(bad)
cli
mov
cli
cmps
inc
(bad)
cli
pop
inc
push
pop
cli
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
stc
pop
inc
ret
inc
jmp
inc
mov
cli
das
inc
mov
pop
inc
jmp
inc
(bad)
cli
cmps
inc
jb
test
cli
pop
inc
mov
mov
mov
das
inc
cmp
inc
ret
inc
ret
inc
ret
inc
ret
inc
mov
cli
pop
sti
iret
inc
ret
inc
inc
cli
pop
inc
pop
cli
test
cli
daa
inc
adc
out
inc
mov
xchg
inc
mov
cli
mov
stc
inc
cli
test
cli
xchg
inc
inc
cli
pop
stc
xor
sub
ffreep
sti
jo
jle
adc
pop
gs
pop
mov
fdivr
(bad)
fdivr
adc
adc
xor
cmp
shr
jl
adc
xor
stc
(bad)
fadd
icebp
adc
adc
xor
cdq
(bad)
fadd
icebp
adc
(bad)
popa
adc
pop
mov
inc
clc
das
adc
sti
mov
test
adc
(bad)
popa
adc
pop
adc
gs
cvtps2pd
adc
mov
stc
lea
clc
mov
cmp
fdiv
sti
adc
pop
adc
gs
add
or
cwde
adc
fadd
add
fcomp
adc
adc
test
mov
inc
xchg
cmp
fadd
(bad)
fdiv
adc
pop
adc
gs
fcomp
pop
fadd
stc
adc
pop
gs
fcom
clc
adc
pop
adc
adc
mov
ret
nop
add
inc
ret
mov
xchg
fdivr
push
pop
fdiv
sti
adc
pop
adc
mov
fcom
clc
adc
(bad)
popa
adc
mov
mov
xlat
fdivr
push
pop
fdiv
sti
adc
pop
adc
gs
(bad)
mov
adc
gs
fdiv
pushf
adc
(bad)
popa
adc
gs
pop
gs
push
adc
gs
fcom
clc
adc
adc
sti
xlat
out
fadd
sti
pop
fadd
sti
adc
pop
adc
gs
add
fadd
popa
adc
gs
fcomp
(bad)
fcom
clc
adc
mov
mov
xlat
fdivr
push
pop
fdiv
sti
adc
pop
gs
fmul
clc
adc
adc
gs
out
ret
inc
xchg
cli
mov
movs
pop
gs
fcomp
(bad)
fmul
clc
adc
adc
gs
out
ret
inc
xchg
cli
mov
fcomp
adc
pop
adc
gs
(bad)
cld
adc
(bad)
popa
adc
pop
adc
mov
mov
xlat
fdivr
push
pop
fdiv
sti
adc
pop
adc
pop
gs
fadd
clc
adc
pop
adc
adc
gs
out
ret
inc
xchg
cli
mov
fcomp
adc
pop
gs
fadd
clc
adc
pop
adc
adc
gs
out
ret
inc
xchg
cli
mov
push
pop
gs
fcomp
(bad)
fadd
clc
adc
mov
fadd
clc
(bad)
fsub
stc
adc
pop
adc
adc
gs
inc
call
stc
adc
(bad)
popa
adc
adc
gs
adc
mov
mov
add
call
ja
ret
sti
mov
cmp
test
sti
aaa
fdivr
push
pop
fdiv
sti
adc
pop
adc
xlat
(bad)
fadd
sti
pop
fadd
stc
adc
pop
adc
gs
pop
mov
cmp
adc
pop
adc
aad
inc
sar
test
push
iret
mov
add
or
adc
add
fadd
add
adc
gs
pop
mov
out
add
ja
xchg
loop
out
adc
ja
xchg
cli
mov
fcomp
adc
pop
adc
out
xchg
repnz
inc
stos
dec
mov
lds
adc
gs
clc
push
add
mov
pop
gs
clc
push
add
mov
pop
gs
mov
ret
fdivr
adc
gs
mov
ret
fdivr
adc
pop
adc
adc
gs
out
ret
inc
xchg
cli
mov
fcomp
adc
pop
gs
fcomp
(bad)
fadd
clc
adc
pop
xchg
(bad)
fadd
clc
adc
adc
adc
test
call
scas
sub
sti
inc
mov
lds
adc
sti
fisttp
cmp
fdiv
sti
adc
pop
adc
gs
pop
test
test
mov
les
adc
pop
adc
mov
test
xlat
(bad)
fadd
sti
pop
fadd
stc
adc
xlat
(bad)
fadd
sti
pop
fadd
stc
adc
jecxz
pop
mov
mov
mov
cmp
and
add
test
fsubr
adc
(bad)
popa
adc
adc
lds
fmul
cmp
sbb
popa
adc
gs
fsubr
adc
(bad)
popa
adc
pop
gs
pop
add
adc
pop
adc
pop
into
xlat
add
test
stos
mov
push
cmp
and
ret
add
fcomp
adc
fld
or
cmp
add
push
add
dec
pop
adc
ret
mov
pop
fdivr
push
pop
fdiv
sti
adc
pop
adc
fwait
push
pop
fadd
sti
adc
pop
gs
xor
or
lods
jmp
test
sti
je
test
mov
adc
push
outs
inc
outs
jp
fsubr
adc
(bad)
popa
adc
pop
movs
(bad)
fmul
clc
adc
gs
fadd
fst
fcomp
adc
pop
gs
pop
gs
pop
fimul
fdivr
push
pop
fdiv
sti
adc
pop
adc
or
push
xlat
fadd
sti
adc
pop
gs
pop
gs
pop
mov
or
dec
clc
sub
shr
fdivr
adc
pop
adc
xor
adc
pop
gs
pop
mov
or
sbb
test
cmps
inc
rol
out
cmp
inc
ret
(bad)
xor
fcomp
adc
sbb
gs
fdiv
adc
adc
pop
gs
or
clc
cdq
mov
popf
adc
out
cmp
inc
ret
fdivr
adc
pop
gs
pop
gs
pop
gs
push
cmp
pop
fdiv
sti
adc
pop
gs
pop
gs
fcomp
adc
pop
gs
rcr
sti
or
xlat
fdivr
push
pop
fdiv
sti
adc
pop
gs
add
lea
clc
mov
ss
xchg
bnd
xchg
cli
mov
fcomp
adc
fwait
push
pop
fadd
sti
adc
pop
adc
pop
gs
pop
gs
fcomp
adc
gs
cdq
sub
test
pop
inc
inc
call
pop
psubusb
add
fcomp
adc
adc
gs
inc
sbb
out
out
cmp
inc
ret
fdivr
gs
pop
adc
gs
fmul
cld
adc
(bad)
popa
adc
pop
in
fadd
sti
adc
pop
adc
gs
pop
mov
sub
mov
imul
mov
jb
adc
pop
gs
pop
adc
fwait
adc
adc
gs
fmul
lods
adc
(bad)
popa
adc
pop
rol
sbb
fadd
ss
pop
adc
gs
ret
jl
gs
pusha
pop
gs
xchg
xor
fadd
stc
adc
pop
gs
pop
fcom
jecxz
iret
adc
sti
lea
lds
lea
ret
fmul
enter
gs
pop
gs
pop
mov
mov
sub
fadd
popa
adc
pop
adc
gs
xchg
sbb
ret
ret
mov
pop
stc
pop
mov
lds
adc
(bad)
popa
adc
or
repnz
fadd
sti
adc
pop
gs
fcomp
fdivr
adc
pop
lds
fdivr
adc
mov
fdivr
(bad)
fadd
stc
adc
pop
mov
fdivr
(bad)
fadd
icebp
adc
adc
gs
ins
call
jns
adc
test
ret
fmul
enter
adc
mov
pop
mov
mov
in
inc
fsubr
and
rol
fdiv
adc
pop
adc
gs
fcomp
sti
adc
gs
and
adc
pop
adc
gs
fmul
cld
adc
(bad)
popa
adc
sbb
fsub
ss
pop
adc
gs
call
fld
pop
fadd
sti
adc
gs
fcomp
(bad)
fadd
stc
adc
gs
pop
gs
add
adc
pop
gs
pop
adc
gs
fcomp
(bad)
popa
adc
pop
adc
pop
cmc
pop
fadd
sti
adc
pop
adc
gs
(bad)
cmp
fadd
popa
adc
pop
lds
fcom
clc
adc
adc
gs
inc
call
icebp
adc
(bad)
popa
adc
pop
mov
fadd
clc
(bad)
fadd
stc
adc
pop
adc
adc
gs
ins
call
jns
adc
pushf
mov
ret
fmul
enter
mov
fcom
clc
(bad)
fadd
stc
adc
pop
adc
adc
mov
sub
mov
ret
inc
ret
stc
mov
add
ja
xchg
cli
mov
fcomp
adc
gs
pop
mov
cmp
adc
gs
xchg
sbb
mov
mov
pop
stc
inc
mov
lds
adc
(bad)
popa
adc
pop
adc
pop
xchg
(bad)
fmul
clc
adc
adc
gs
pop
in
(bad)
pop
retf
mov
mov
stos
inc
fsubr
adc
adc
pop
gs
pop
adc
gs
sbb
clc
cdq
nop
(bad)
mov
cmp
(bad)
jo
cmp
inc
jae
cmp
add
jno
mov
dec
jno
xor
pop
mov
mov
out
cmp
pop
in
int3
adc
iret
icebp
mov
daa
and
daa
sar
sub
test
and
jmp
xchg
ja
out
daa
jnp
sub
mov
mov
cld
loopne
scas
test
lds
imul
and
push
sbb
lods
fs
retf
retf
pop
lods
fs
pop
xchg
out
cmp
es
call
cmp
and
je
jnp
cmp
and
loop
js
into
ss
retf
aas
adc
and
mov
cmp
ins
div
adc
ret
sbb
cmp
daa
sar
and
jnp
mov
pop
lock
shl
ret
adc
adc
aam
in
pop
sbb
push
fistp
jle
lock
(bad)
cli
jg
retf
add
jne
push
shl
int3
aas
imul
shr
inc
and
jnp
imul
add
adc
inc
ret
in
push
ds
xchg
cmp
ret
daa
fcom
cmp
cmp
pop
js
test
cmp
pop
jmp
jne
rcl
jp
clc
cmp
xor
mov
lar
lods
mov
sub
ins
add
out
mov
and
ret
or
imul
adc
std
adc
lea
or
push
sub
cmc
adc
lock
fwait
popf
arpl
mov
jle
mov
pop
xor
popa
cmc
mov
inc
lock
popf
loope
mov
or
clc
ins
test
mov
cld
mov
sar
xor
mov
push
stos
xchg
repnz
xchg
and
mov
lea
psrld
xchg
push
sub
hlt
cwde
pop
stos
push
stos
xchg
lock
fwait
popf
shl
mov
sar
lods
push
dec
add
loope
mov
inc
test
ins
and
jns
sub
popa
aaa
add
cmovb
scas
arpl
mov
jbe
mov
dec
xor
repnz
sbb
cli
addr16
test
ins
mov
adc
mov
repnz
pop
cli
pop
test
or
(bad)
cmc
adc
cmc
test
or
es
outs
imul
adc
ja
pop
inc
gs
jmp
(bad)
pop
jg
lea
pop
jmp
fisttp
pop
or
adc
lea
cmovb
push
mov
push
fidivr
push
mov
jg
cmc
jns
or
sbb
bound
imul
loopne
fwait
test
fwait
test
aad
(bad)
cli
outs
inc
ja
sbb
cmc
mov
pop
cli
jle
pop
push
cmp
enter
push
pop
mov
cpuid
or
test
xchg
push
pop
sbb
or
sub
adc
data16
push
cmp
icebp
gs
inc
in
or
ret
cmp
test
bound
bound
xor
cmovb
jno
adc
adc
dec
daa
adc
sub
push
sub
cli
(bad)
push
pop
push
pop
daa
cli
mov
test
dec
push
jno
inc
ins
push
repnz
inc
daa
bound
sbb
fdiv
lds
adc
(bad)
xor
push
cmp
pop
or
fnstcw
psubb
xchg
adc
adc
push
cmps
push
outs
jns
push
pop
daa
cli
cmc
mov
repnz
sbb
push
cmp
push
sbb
std
sbb
fisttp
push
loope
mov
clc
mov
test
cmc
adc
inc
jb
fdiv
mov
outs
add
adc
test
(bad)
out
lahf
push
sub
inc
gs
scas
pop
lea
cmovp
jns
ret
(bad)
lahf
mov
push
popa
inc
push
jno
sbb
push
cmps
push
cmp
sub
or
sub
cmovb
adc
fisttp
ja
cmp
adc
(bad)
and
retf
xchg
loope
arpl
push
std
cmp
sub
scas
loope
stos
pavgb
adc
frstor
daa
inc
sahf
or
mov
sbb
repnz
cmp
in
sbb
and
dec
punpckldq
xor
adc
sbb
dec
xor
adc
jno
and
adc
lds
ja
outs
sbb
cli
lea
movlps
adc
mov
lahf
retf
jg
gs
retf
pop
push
pop
iret
jb
sbb
cmp
imul
push
(bad)
(bad)
in
pop
scas
bound
dec
xchg
ret
mov
xchg
outs
adc
mov
cli
fnsave
dec
stos
std
bound
push
sbb
push
sbb
inc
lea
add
xor
sub
mov
and
adc
dec
daa
fisubr
add
in
dec
inc
repnz
popa
pop
push
sbb
loope
arpl
loopne
fwait
xchg
inc
cmc
adc
lea
sub
(bad)
mov
std
mov
sub
adc
adc
mov
pminsw
adc
dec
add
fnstsw
lahf
retf
pop
cli
popf
mov
pop
push
sbb
std
jns
push
std
(bad)
sar
mov
dec
std
(bad)
retf
ja
ins
adc
int
ja
cmc
adc
in
jb
and
or
lods
dec
daa
jb
xor
adc
in
push
ficom
popa
pslld
cmp
sbb
adc
and
cmc
and
and
sbb
push
push
scas
dec
cmc
sbb
or
jns
bound
xchg
add
or
lea
xchg
imul
push
and
and
or
pop
imul
xor
sub
stos
popf
ror
bound
pop
push
cmp
sbb
(bad)
mov
cdq
or
jb
adc
cmc
or
mov
inc
cmps
push
imul
push
cmc
add
fstp
xor
jns
cli
cmc
adc
test
sbb
mov
push
pop
xchg
shl
jno
push
imul
add
sbb
retf
xchg
or
psubd
adc
data16
push
cmp
inc
cmc
mov
cli
in
mov
cli
ins
jns
inc
std
cmp
cli
test
sbb
frstor
retf
xchg
sbb
mov
daa
push
cmp
add
fld
push
push
pop
jp
pop
pop
jno
imul
repnz
add
imul
cmc
adc
pop
jg
cmc
add
and
or
aad
aaa
sbb
sub
pop
push
sbb
out
inc
push
cmp
push
mov
sbb
sbb
cli
mov
adc
std
adc
std
xor
jmp
push
adc
add
std
jns
dec
cmc
pop
aaa
mov
cmc
inc
ja
ins
mov
cmc
or
aad
daa
sbb
imul
mov
dec
repnz
and
fstp
ret
outs
call
test
pop
push
sbb
jg
pop
loope
or
data16
test
cdq
test
fstp
pop
icebp
xor
rcl
stos
jge
ja
div
xchg
dec
test
xchg
bound
mov
mov
bound
adc
imul
adc
cmovb
mov
bound
jg
cmc
adc
push
daa
jb
mov
lahf
ror
mov
int
mov
cmps
adc
fnstsw
outs
jmp
cmovp
test
lahf
repnz
add
dec
pop
imul
inc
mov
push
sbb
and
push
and
bswap
in
sbb
mov
pop
icebp
lea
sbb
jg
cmp
or
and
xchg
lahf
push
or
inc
into
sbb
ins
imul
test
adc
adc
mov
pop
push
imul
or
outs
icebp
cmp
retf
lahf
push
cmp
sahf
sbb
dec
std
sbb
cmp
mov
cmp
inc
lea
sbb
(bad)
daa
push
into
sbb
cmc
jno
pop
gs
ret
pop
push
cmp
mov
mov
bound
(bad)
bound
adc
frstor
fimul
or
cli
cmc
and
frstor
lahf
cmp
popa
mov
or
cmc
adc
and
outs
mov
push
jno
sub
imul
push
jno
repnz
cmp
repnz
mov
test
xchg
and
adc
cmc
test
ja
into
xor
push
pop
daa
sbb
pop
pop
jmp
fisttp
push
sbb
movhlps
test
lar
daa
(bad)
cmc
adc
in
daa
jp
add
lock
sbb
aad
lahf
sbb
pop
push
add
add
xor
retf
jg
fstp
jmp
cmovb
pop
mov
cli
jne
daa
or
push
daa
push
jns
xor
pop
push
popa
aaa
xor
ja
cmc
cmp
mov
cmc
jns
or
outs
shl
sar
(bad)
in
add
ret
xchg
retf
inc
retf
pop
push
adc
cmc
and
clc
outs
sbb
cmc
push
inc
dec
pop
cmp
push
sahf
inc
pop
push
sbb
pop
mov
punpckhdq
imul
retf
inc
inc
cmc
adc
fstp
(bad)
jno
jno
or
shl
adc
xor
ror
(bad)
cmc
adc
push
pop
jb
mov
lahf
cli
ss
push
xor
test
ror
test
ror
jb
popa
inc
bound
outs
adc
adc
mov
sbb
xchg
or
jp
imul
adc
adc
cmc
mov
ret
scas
push
pop
das
cli
jbe
lahf
push
imul
sub
sbb
cli
cmc
test
cmps
push
pop
jns
jns
or
mov
cmc
add
or
ja
test
ret
xor
inc
bound
rol
fcmovne
push
xchg
and
and
cmp
cli
cmc
adc
lods
mov
ja
adc
or
cmc
imul
fcmovbe
rol
push
cmp
push
pop
jg
out
xchg
push
popa
aaa
dec
sahf
imul
xchg
mov
std
cmp
test
mov
adc
ja
popf
stos
mov
cmc
adc
sbb
jne
cmp
lea
(bad)
ins
imul
push
mov
or
test
lahf
fimul
mov
push
fstp
pop
jmp
test
ja
(bad)
and
jg
jg
pushf
loopne
push
lahf
icebp
mov
imul
or
adc
sbb
jmp
xchg
mov
fisttp
psubb
xchg
push
adc
lea
movhlps
sub
jns
or
bound
pop
repnz
adc
in
lahf
adc
mov
mov
not
pushf
lock
mov
icebp
mov
imul
push
or
push
(bad)
or
cmp
sbb
adc
cdq
popf
xor
cmp
inc
xchg
sbb
and
sbb
gs
inc
push
popa
jg
ins
adc
or
cmc
adc
pop
xor
jbe
movs
push
lea
lahf
leave
test
aaa
inc
cmc
adc
mov
xchg
dec
jne
xchg
and
adc
addr16
inc
stc
out
punpckhbw
pop
aaa
leave
(bad)
fisttp
push
std
sub
fcmove
add
cmc
imul
sbb
ja
mov
pop
outs
repnz
addr16
lods
jno
jb
push
pop
sub
popa
scas
bound
cmp
push
or
std
mov
cpuid
xchg
jp
adc
adc
mov
jno
add
bound
cli
cmc
adc
test
(bad)
std
and
push
mov
lahf
xor
push
daa
cli
jne
mov
out
ja
cmp
pop
outs
ret
adc
mov
xchg
adc
mov
xor
adc
adc
fnsave
scas
(bad)
cmc
adc
push
mov
ret
outs
or
adc
aas
cmp
fcom
lds
cmc
adc
mov
cli
outs
inc
ja
jne
jg
ficom
xchg
push
cmp
popa
in
cdq
or
icebp
cmp
cmp
cmps
adc
lea
xchg
sub
cmp
inc
fnstsw
lahf
clc
not
test
inc
mov
jns
(bad)
repnz
outs
push
pop
scas
sbb
(bad)
inc
test
adc
add
cli
xchg
lahf
repnz
pop
xchg
mov
gs
and
add
test
psubd
mov
or
xchg
dec
add
cmp
adc
adc
xor
inc
fstp
bndldx
inc
loopne
fwait
xchg
stos
fst
and
std
jno
shl
cmovb
adc
test
dec
and
mov
jp
cmp
popf
or
push
pop
jg
(bad)
inc
mov
mov
in
mov
adc
dec
punpckhdq
popa
outs
jns
cmp
xor
imul
cmc
pop
pop
dec
fnstsw
pop
cli
out
mov
push
mov
jb
add
std
push
pop
stc
int
bndldx
adc
int
daa
inc
cmc
sub
sbb
xchg
daa
leave
cmc
mov
repnz
cmp
xor
shl
cmp
bnd
aaa
call
cmc
adc
mov
jb
jns
(bad)
int
aaa
(bad)
cmc
adc
bound
push
pop
pop
jg
jg
mov
mov
adc
cmc
adc
mov
xor
push
mov
cli
cmc
or
sbb
mov
lock
mov
sbb
jg
in
xchg
pusha
jne
xchg
icebp
cmp
cmp
ret
sbb
push
and
and
push
push
mov
jmp
cmovb
dec
daa
inc
fstp
bswap
xchg
push
pop
jg
mov
popa
punpckldq
cmp
jmp
xor
(bad)
push
ror
jmp
jg
(bad)
leave
cmp
loop
mov
jp
imul
stos
outs
jns
push
or
lea
punpckhdq
pop
pop
jns
popa
(bad)
std
sbb
(bad)
frstor
jno
(bad)
and
scas
(bad)
cmc
adc
in
mov
out
jns
push
mov
daa
sbb
mov
test
mov
adc
mov
dec
push
or
cli
(bad)
push
mov
popa
daa
popa
test
iret
push
xor
dec
lea
das
jno
sub
inc
fnsave
cmp
cmovb
adc
out
pop
aaa
push
or
std
sbb
inc
outs
mov
jmp
ja
outs
xor
icebp
scas
push
punpckhbw
mov
mov
ficomp
and
push
mov
add
cmps
push
cmp
icebp
fnsave
or
(bad)
cli
push
jp
sbb
jns
(bad)
std
sbb
ins
sbb
ret
fs
pop
pop
add
pop
addr16
pop
bound
imul
mov
pop
push
mov
outs
jno
cdq
or
push
xor
lea
movlps
outs
push
dec
xchg
xor
adc
push
add
adc
mov
push
mov
dec
pop
add
jns
and
or
mov
pop
dec
mov
dec
and
inc
inc
cmc
mov
cli
sahf
push
ja
cmc
cmp
repnz
xchg
cmps
repnz
pop
daa
cli
ins
xor
repnz
popa
daa
shl
or
jns
or
popa
mov
rsqrtps
aas
push
inc
push
inc
pop
sbb
std
sbb
sub
adc
cmp
sub
test
xchg
bound
adc
xor
push
(bad)
imul
fstp
mov
scas
adc
mov
inc
lea
or
cdq
or
inc
jbe
sbb
in
dec
sub
imul
push
mov
div
loopne
mov
push
fstp
das
dec
test
scas
dec
fstp
pslld
inc
bound
xchg
push
sbb
xchg
pop
push
push
sub
add
jno
icebp
test
mov
add
bound
adc
mov
sub
imul
(bad)
into
adc
(bad)
add
inc
clc
cmc
adc
gs
ja
push
jns
jb
adc
imul
push
ror
retf
pop
push
cmp
push
sub
lea
or
retf
iret
inc
aad
addr16
test
and
mov
ret
mov
popf
mov
retf
ja
sbb
fnsave
repnz
jmp
push
(bad)
cmc
sbb
ins
cmp
push
dec
pop
push
std
sbb
jmp
sahf
add
mov
jne
jg
std
xchg
ja
inc
adc
(bad)
rol
ins
pop
das
ret
pushf
or
mov
(bad)
cmc
adc
outs
jns
push
sub
cli
(bad)
popa
ja
sbb
cmc
popa
das
sbb
mov
pop
cmp
cli
sub
inc
fisttp
dec
inc
test
adc
adc
sub
bound
pop
leave
ja
psubb
adc
ins
pop
outs
cli
gs
ja
xchg
cmp
and
adc
mov
sbb
aad
ja
(bad)
add
shl
xor
pop
inc
ja
test
cmps
or
adc
lds
pop
mov
daa
jb
adc
sahf
jno
push
jno
repnz
sbb
pop
cmc
inc
daa
mov
xor
xor
pop
xchg
cmp
xor
sbb
cmp
imul
fisttp
push
or
mov
and
adc
jno
jmp
xchg
cli
cmc
imul
push
cmp
aad
pop
bound
sub
ins
xor
retf
xchg
inc
pop
pop
das
mov
fisttp
sbb
jns
jmp
pop
mov
inc
aad
addr16
cmc
adc
pop
daa
jb
rol
test
lahf
(bad)
cmc
and
push
fiadd
daa
and
mov
push
push
pop
jmp
jg
std
mov
mov
mov
push
pop
pop
loopne
mov
leave
cmc
test
addr16
outs
xchg
inc
push
mov
jmp
aas
inc
and
inc
cmc
adc
cmc
inc
cmps
cli
std
mov
retf
pop
inc
test
and
mov
(bad)
std
mov
pslld
test
lahf
mov
mov
lahf
repnz
add
lea
dec
outs
pop
jg
mov
xchg
inc
jmp
lea
sub
mov
cmpps
bound
mov
or
cmc
adc
xor
adc
mov
ins
mov
inc
imul
sbb
xchg
daa
sbb
jns
push
cmp
loopne
fwait
popf
pop
cmc
cdq
or
stos
cmc
jns
repnz
cmps
jp
add
fstp
(bad)
std
xchg
(bad)
cli
cmp
xor
cmc
adc
cmc
xchg
ja
fnstsw
cli
cmc
and
popf
jp
bound
xchg
inc
adc
mov
jmp
aad
pop
sbb
adc
pop
pop
repnz
mov
push
cmp
mov
adc
lea
adc
adc
lea
inc
cmp
jg
jge
cpuid
std
or
cmc
adc
pop
pop
lahf
(bad)
cmc
or
lea
inc
add
mov
mov
cmc
jns
repnz
bound
jb
mov
retf
inc
and
adc
fnsave
jg
std
or
push
mov
jmp
pop
push
imul
lods
pop
pop
jb
and
dec
test
xchg
jb
sbb
push
test
aas
adc
pop
lahf
sbb
jp
inc
ins
and
cli
dec
adc
fstp
scas
(bad)
imul
and
cli
ins
adc
ins
popa
pop
ret
pop
jb
mov
adc
adc
add
ret
xchg
sub
and
and
fld
cmovb
mov
cli
aas
or
dec
(bad)
(bad)
cli
cmc
adc
popf
push
retf
inc
push
sbb
sbb
sbb
adc
push
push
repnz
jns
repnz
daa
jp
adc
fld
pop
xor
popa
pop
jmp
out
push
push
imul
push
sub
std
mov
ins
mov
retf
jg
mov
or
push
out
lahf
push
mov
dec
out
jg
push
sub
retf
inc
mov
outs
shl
pop
daa
add
test
jg
int
cmps
and
adc
gs
inc
neg
(bad)
adc
mov
sbb
jno
(bad)
(bad)
adc
fnstsw
xchg
sbb
(bad)
retf
xchg
jns
or
adc
adc
dec
inc
sbb
pop
sub
popa
scas
icebp
lds
cmovp
imul
adc
popa
mov
pop
mov
loop
arpl
outs
or
(bad)
sbb
mov
jno
jns
sbb
bound
pop
and
sub
cmc
sbb
inc
(bad)
sbb
sub
or
pop
repnz
xchg
pop
cli
std
xchg
ja
std
adc
sbb
inc
in
sbb
and
imul
cli
std
adc
ins
shl
adc
mov
pop
shl
popa
daa
retf
lahf
and
mov
mov
or
push
mov
inc
xchg
pop
das
or
add
sub
cpuid
xchg
xchg
(bad)
(bad)
cmc
adc
push
push
clc
dec
sub
(bad)
rcl
sbb
cli
xchg
sub
or
cmps
push
std
xor
in
adc
lea
mov
lea
pop
push
sub
jmp
fst
cpuid
frstor
jp
sbb
cmc
or
retf
inc
jb
bound
lea
adc
jno
inc
ja
xchg
rcl
xchg
lea
xchg
mov
mov
inc
fiadd
xchg
cli
out
mov
jg
ins
sbb
sub
adc
cmp
inc
add
inc
mov
inc
fisttp
dec
or
adc
cmc
adc
popf
bound
mov
cmp
add
adc
cmc
or
retf
inc
or
adc
or
cmc
adc
xchg
push
inc
cmc
pop
lahf
dec
aad
jg
std
mov
bound
mov
lea
cmpps
inc
cmc
adc
fstp
push
fidivr
cmps
push
popa
daa
and
jns
jno
cmp
and
sub
rcl
xor
int
aaa
push
mov
ja
cmp
sbb
ror
or
enter
push
lea
inc
cmc
adc
std
xchg
dec
xor
add
repnz
test
inc
jmp
lahf
add
or
adc
ja
lea
lahf
sbb
push
(bad)
or
mov
and
popa
punpckhdq
mov
add
pop
stos
outs
add
push
cmp
inc
in
adc
jle
xchg
cdq
sub
popa
std
cdq
(bad)
out
(bad)
daa
retf
inc
push
cmp
or
mov
cpuid
dec
bound
inc
cmc
mov
jp
mov
push
mov
or
stc
cmc
mov
sbb
daa
(bad)
fisttp
pop
or
adc
rol
push
mov
rcr
cli
cmc
adc
fnsave
jb
cmp
in
adc
gs
cmovb
cmp
popa
in
xor
and
lahf
push
sbb
out
(bad)
push
popa
das
jp
sbb
std
jns
repnz
xchg
and
adc
cmc
mov
in
jp
and
dec
push
dec
xchg
dec
inc
imul
fstp
(bad)
push
pop
stc
xor
adc
scas
mov
fstp
or
retf
xchg
cli
mov
aaa
icebp
fstp
bswap
std
imul
std
xor
dec
adc
gs
xor
mov
xchg
icebp
ins
popa
bswap
imul
jb
sbb
repnz
jns
push
popa
xchg
xor
ja
cmc
popa
aaa
sbb
or
mov
inc
push
mov
inc
push
mov
dec
mov
jg
mov
iret
(bad)
std
sbb
sbb
bound
xor
adc
xchg
inc
push
adc
outs
adc
gs
lahf
icebp
inc
sub
and
jg
mov
cmp
shr
adc
mov
pop
adc
add
retf
pop
jno
cmp
adc
adc
int
cmps
and
adc
gs
adc
sub
(bad)
(bad)
inc
jmp
daa
retf
scas
jmp
std
sub
push
mov
inc
mov
adc
dec
mov
push
mov
outs
jmp
jbe
scas
push
adc
adc
and
mov
or
lods
mov
cmp
cmp
sbb
xchg
pop
fidivr
sbb
sbb
jb
and
dec
(bad)
and
lahf
stc
std
sbb
and
xchg
bound
push
daa
pop
mov
inc
test
adc
push
bound
push
mov
repnz
mov
bound
adc
xchg
or
test
mov
std
and
add
sub
cli
ins
mov
bound
mov
bound
jno
jb
mov
jl
(bad)
daa
add
ja
outs
arpl
shl
or
adc
lea
adc
mov
cli
aad
daa
bound
daa
(bad)
fst
dec
mov
cmc
adc
mov
xchg
pop
(bad)
aad
scas
adc
sub
sub
mov
in
sbb
fst
fs
push
inc
inc
cmc
adc
out
mov
push
cmp
add
cmp
inc
std
push
retf
pop
push
popa
pop
jb
cmp
retf
daa
sbb
inc
inc
out
adc
out
jg
cmc
imul
jle
jg
pop
xor
enter
test
mov
or
bound
(bad)
mov
ror
or
popa
push
sar
test
fld
lahf
clc
aad
xchg
movs
adc
(bad)
and
push
dec
outs
inc
fld
xchg
loope
or
adc
inc
inc
jge
lods
cli
mov
adc
std
or
and
or
and
adc
pop
adc
ins
mov
and
jns
push
sbb
idiv
outs
lock
popf
inc
ds
mov
jg
xchg
call
fst
test
addr16
loope
or
cmc
mov
dec
jle
xchg
push
mov
enter
(bad)
lds
xchg
lock
fwait
popf
adc
adc
push
fwait
xchg
mov
adc
mov
cmc
adc
jge
outs
or
jae
push
pop
cmp
loop
and
jmp
daa
push
sbb
cmc
push
ja
push
and
push
fwait
popf
lock
fwait
popf
enter
test
and
neg
mov
aad
pop
cli
imul
popf
lock
popf
popa
pop
and
enter
popa
pop
mov
(bad)
push
cmp
jg
test
mov
test
cdq
or
inc
dec
sbb
inc
std
mov
jno
or
add
daa
loope
jns
loop
cmp
fisub
ja
ins
mov
mov
addr16
push
mov
test
push
mov
cmps
pop
std
cmp
loop
mov
adc
popa
das
and
adc
xchg
sub
(bad)
cmc
cmp
cli
in
xor
cli
test
pop
adc
cmp
push
sbb
inc
xchg
mov
in
add
adc
adc
inc
or
fisttp
(bad)
cmc
mov
bound
pop
lock
popf
loopne
adc
dec
add
outs
xchg
vorps
test
cmc
test
dec
repnz
imul
xchg
sub
push
mov
jns
imul
sar
test
dec
adc
cmc
imul
push
cmp
in
jnp
and
mov
push
sbb
std
test
punpckldq
pop
lahf
jp
adc
aad
daa
popa
jne
lar
mov
and
imul
sbb
pop
bnd
daa
push
cmp
loope
xchg
or
push
sbb
dec
ins
mov
bound
push
inc
(bad)
cmc
adc
sbb
fisttp
addr16
or
std
fist
or
pop
loope
push
psrld
mov
dec
outs
pop
jg
inc
sbb
fcom
int
push
mov
lock
fwait
popf
clc
adc
mov
or
jno
mov
outs
push
clc
dec
xchg
test
scas
mov
push
cmc
imul
pop
add
pop
pop
mov
stc
outs
jae
loopne
and
cmc
jno
or
outs
inc
addr16
mov
jne
mov
sahf
cmp
(bad)
cmc
mov
pop
clc
outs
fwait
test
out
mov
test
test
bound
adc
aad
or
jb
ret
addr16
popf
loopne
fwait
popf
clc
in
adc
cmp
cmp
(bad)
cmc
adc
aaa
xor
inc
fwait
lods
lock
popf
popa
pop
fisttp
inc
not
pop
loop
mov
cmps
dec
inc
sbb
inc
adc
cmp
ja
psubsb
lea
xchg
lea
inc
add
pop
adc
cmp
and
adc
mov
sbb
clc
popf
arpl
sbb
pop
js
sbb
and
xor
jbe
inc
push
add
shl
cmps
dec
ins
push
repnz
popf
mov
fnstsw
or
retf
scas
bound
mov
and
out
pop
jg
in
(bad)
inc
or
bound
cmp
cli
gs
daa
enter
test
and
outs
popa
das
push
pop
(bad)
pop
sar
outs
rcl
mov
and
cmp
inc
cmc
stos
xchg
enter
jb
sbb
enter
popa
popf
mov
xchg
inc
in
punpckldq
pop
fild
mov
sbb
inc
aas
mov
aas
adc
mov
test
lds
inc
push
xchg
test
sub
cmc
cmp
and
xchg
lahf
xor
jg
xchg
adc
cmps
mov
push
pop
pop
inc
cmc
mov
cmps
or
and
dec
pop
pop
loop
test
punpckldq
inc
ret
sbb
addr16
jg
push
mov
shl
mov
jb
sbb
enter
bound
mov
into
mov
dec
cmc
imul
ja
(bad)
call
ins
xchg
lea
cmp
(bad)
fnsave
mov
or
inc
mov
sar
mov
in
xchg
inc
sahf
popa
aaa
push
imul
jns
sbb
xor
jg
xchg
adc
bound
mov
adc
xchg
xor
adc
pop
pop
cmp
jno
lock
popf
sbb
pop
adc
outs
dec
out
cmp
stos
std
cdq
sub
cli
test
adc
sbb
not
test
out
daa
push
mov
pop
leave
test
mov
and
cmc
adc
pop
daa
retf
ja
xor
cmc
sbb
(bad)
std
pop
xchg
or
outs
pusha
push
adc
xor
cdq
mov
test
mov
sahf
sbb
jb
sbb
adc
adc
outs
mov
popf
push
cmc
mov
(bad)
mov
xchg
popa
aaa
cli
fst
retf
scas
inc
mov
pop
jb
mov
inc
adc
dec
clc
push
cmp
shl
loopne
adc
mov
movs
jb
jns
push
sbb
not
loop
pop
daa
adc
or
xor
adc
fisttp
or
push
std
test
pslld
adc
popa
pop
jno
sbb
and
mov
jmp
aaa
retf
inc
icebp
cmc
sbb
mov
lea
shl
mov
repnz
jno
push
cmp
inc
cmc
and
ret
pop
clc
in
test
fs
pop
daa
sub
jns
inc
popf
jns
adc
cmp
sar
mov
or
(bad)
std
adc
imul
dec
popa
scas
push
imul
jmp
popf
retf
daa
sbb
add
cli
push
push
pop
adc
(bad)
jb
push
pop
push
cmp
repnz
cdq
pop
push
mov
xor
xor
sbb
add
mov
mov
aaa
push
popa
aaa
bound
push
cmps
mov
jg
aaa
loopne
fwait
test
fwait
test
gs
lea
mov
push
sbb
ret
jg
xor
clc
in
fwait
popf
ret
cmp
lea
jmp
push
mov
bound
push
daa
push
arpl
lock
cdq
or
shl
adc
lea
ja
std
mov
stc
mov
pslld
adc
xor
or
adc
jne
mov
bound
outs
js
sbb
dec
cmc
imul
cmc
sbb
sbb
jns
loop
cmp
xor
ja
fnstsw
cli
pop
adc
mov
and
fisub
ja
addr16
clc
test
jg
push
sub
bound
adc
not
lods
lock
call
fst
mov
adc
jae
enter
dec
inc
sub
push
mov
outs
cmp
enter
adc
xor
cmc
pop
xchg
retf
pop
jmp
xchg
push
sub
pop
mov
pop
jg
test
and
adc
popf
inc
pop
ret
jg
mov
sbb
bound
xchg
daa
push
cmp
fstp
fcomip
mov
and
inc
cmc
popa
aaa
(bad)
std
pop
jg
mov
pop
(bad)
frstor
cli
popf
adc
inc
cmp
icebp
inc
fwait
or
(bad)
fst
fs
daa
jno
jns
inc
jbe
inc
push
pop
daa
retf
ja
jge
push
shl
fwait
mov
std
call
test
xchg
inc
xor
call
neg
xchg
fcom
movs
bound
mov
push
fstp
cli
outs
xchg
ja
dec
adc
popf
rol
(bad)
in
inc
inc
cmc
mov
retf
xchg
retf
jg
popf
imul
adc
sbb
fnsave
and
sbb
inc
cmc
adc
test
ja
ins
jno
bound
mov
test
ja
lea
daa
and
scas
push
popa
xchg
retf
inc
repnz
jb
bnd
daa
(bad)
fstp
rcr
test
lea
mov
lea
add
popa
pop
push
mov
stos
add
jg
lea
addr16
or
loope
mov
push
gs
daa
popa
ins
mov
inc
cmc
popa
inc
bound
push
rcl
xchg
xchg
xchg
push
sahf
pop
pop
push
sbb
adc
movlps
cmp
add
popa
pop
adc
xchg
bound
mov
pop
cmp
rol
movs
(bad)
std
imul
push
push
push
ja
fld
inc
retf
xchg
bound
dec
push
pop
daa
cli
push
mov
pop
dec
add
sar
stos
mov
aas
stos
or
push
pop
jno
repnz
inc
daa
loope
mov
shl
mov
and
mov
sbb
or
fst
sub
std
cmp
or
ja
std
popa
pop
inc
fstp
or
xchg
(bad)
add
dec
rol
push
add
ret
lahf
retf
pop
bound
jns
and
cmp
inc
outs
popa
aaa
shl
mov
push
fisub
rcr
mov
xchg
and
cmp
dec
(bad)
sbb
sub
scas
and
sbb
push
jno
inc
cmc
cmp
gs
inc
addr16
mov
(bad)
mov
push
inc
mov
jg
fstp
outs
sbb
mov
repnz
adc
inc
ret
cmc
jns
mov
out
sbb
and
push
lahf
sbb
inc
shl
(bad)
lock
movs
jb
jns
and
jg
in
sbb
jge
inc
bnd
xchg
ret
xchg
add
cmp
add
pop
pop
repnz
or
cmc
mov
jmp
pop
adc
aaa
push
sbb
dec
xchg
xchg
popf
cli
cmc
xor
push
lds
dec
neg
xchg
lock
call
fstp
inc
std
mov
or
mov
inc
sub
xchg
push
mov
push
inc
push
xchg
xchg
dec
pop
sbb
lods
jns
bound
cmp
inc
std
cmp
std
mov
or
ja
(bad)
adc
xchg
add
jno
jno
inc
xchg
cmp
push
popa
daa
inc
cmc
imul
push
push
inc
lock
fwait
popf
push
cmc
mov
inc
clc
jle
movs
push
imul
popf
enter
push
jg
push
loope
ret
xadd
xchg
inc
adc
cmp
inc
cmc
pop
mov
or
fnstenv
inc
jle
outs
push
and
cdq
pop
icebp
inc
mov
push
idiv
cmps
lock
fstp
jno
cdq
or
shl
lods
fdiv
movs
jb
dec
pop
push
cmp
sbb
or
jmp
pop
mov
push
sbb
cmc
popa
inc
inc
push
adc
mov
adc
cmc
adc
int
aaa
dec
outs
popa
add
inc
std
mov
movlps
sbb
and
jg
cmc
adc
jb
and
dec
push
popa
cmps
xor
lahf
clc
jge
xchg
adc
lea
scas
jns
popa
bswap
mov
cmps
adc
pop
loopne
arpl
bound
scas
ret
jg
mov
adc
or
test
das
loope
mov
rcr
enter
loopne
adc
int
inc
sbb
inc
sub
pop
xchg
push
popa
pop
retf
xchg
(bad)
std
sub
repnz
pop
jp
adc
gs
jg
lea
sub
mov
popa
cmovb
mov
sbb
cmp
add
popa
cmovb
imul
mov
out
cdq
xchg
mov
cli
test
(bad)
cli
std
or
cmc
adc
div
lahf
loop
push
dec
std
push
(bad)
jp
add
or
mov
daa
add
pop
ja
std
dec
psubd
pop
pslld
xor
adc
sub
(bad)
jns
push
pop
daa
and
popa
pminsw
xchg
cvtpi2ps
sub
ret
pop
adc
and
push
cmp
push
pop
push
xor
popa
lar
mov
or
xchg
inc
std
adc
mov
xchg
(bad)
daa
mov
mov
cmp
add
jns
and
adc
mov
xchg
sub
std
jno
and
sbb
cli
in
mov
(bad)
fst
pslld
mov
and
lahf
bound
adc
ins
mov
popa
test
dec
jmp
aaa
or
push
mov
shl
loopne
mov
mov
lods
and
adc
add
in
sub
and
sbb
test
xchg
and
cmp
inc
bound
cmp
popa
inc
sbb
adc
sahf
xor
test
xchg
and
addr16
pop
xor
cli
std
add
cli
test
sbb
addr16
das
loope
fwait
or
jb
sbb
retf
pop
inc
into
and
cmc
cmp
adc
outs
adc
or
test
adc
enter
add
or
repnz
xor
push
dec
outs
sbb
pop
jmp
test
mov
lds
(bad)
mov
cmc
mov
sub
xchg
adc
adc
adc
mov
stc
push
mov
clc
popf
adc
aad
pushf
inc
(bad)
rcl
add
adc
mov
fstp
test
sbb
add
cmovb
mov
lock
fwait
popf
push
cmc
cmp
add
not
int
push
mov
adc
adc
sbb
clc
not
pushf
test
mov
popf
loop
stos
daa
add
popa
inc
sar
or
(bad)
bound
mov
pop
jae
enter
loope
mov
xchg
sbb
adc
pushf
clc
div
or
push
outs
xor
popf
adc
loop
pop
jg
xchg
mov
popa
cmp
jecxz
or
icebp
popf
mov
push
imul
mov
sbb
push
cmc
sbb
and
mov
cmovo
mov
and
sbb
popa
outs
popa
psubb
or
sbb
jnp
pusha
jge
xchg
popa
ins
or
inc
std
xor
sar
ror
adc
mov
push
neg
cmp
push
pop
pop
loop
xor
jmp
test
ja
jge
nop
jnp
pusha
lea
or
push
mov
push
jbe
popf
push
cmc
sbb
bound
push
cmp
adc
mov
jno
loope
push
sbb
addr16
loope
mov
sub
sbb
inc
gs
pusha
push
adc
dec
and
cli
neg
fbld
mov
test
aam
ja
jge
bndldx
inc
enter
jno
mov
jg
outs
fwait
popf
push
pop
cmp
shr
adc
mov
(bad)
rcl
bound
pusha
addr16
ins
or
xor
mov
and
pop
loope
or
lock
test
(bad)
fld
bound
cmp
push
jno
adc
pop
stos
jge
jg
dec
adc
bnd
int
jg
or
push
sbb
mov
mov
addr16
test
pminsw
pop
xchg
add
ja
cmc
popa
daa
retf
ja
aad
pop
jb
mov
imul
jmp
xchg
lods
mov
dec
lea
pushf
push
out
stos
mov
(bad)
fld
push
imul
cwde
push
stos
jge
xchg
jmp
xchg
cli
neg
mov
retf
and
cmp
adc
sbb
add
das
clc
dec
arpl
cmp
adc
dec
adc
push
pop
imul
adc
(bad)
adc
push
jne
pop
mov
cmp
adc
adc
jae
jo
imul
jne
or
push
sub
push
cmc
fwait
pop
jb
cmp
add
sbb
push
std
xor
repz
iret
popa
outs
adc
clc
fisttp
xchg
outs
adc
cmc
mov
push
pop
sbb
aad
inc
popa
jge
bndldx
inc
enter
enter
bound
dec
clc
lea
xchg
adc
jbe
inc
push
add
imul
popa
ins
mov
repz
push
clc
lea
or
shl
lods
mov
push
sbb
repnz
retf
pop
sub
or
(bad)
hlt
rcr
retf
push
or
push
xor
lods
mov
outs
push
and
pop
cdq
cmps
inc
push
fsubr
icebp
jge
or
push
jge
lea
sbb
pusha
aad
xchg
popa
jge
or
enter
popa
frstor
inc
dec
ja
add
ins
pop
jg
outs
cdq
or
mov
not
pushf
call
aad
popf
pusha
in
mov
fistp
xlat
mov
or
jb
sbb
clc
int
xchg
adc
loop
cmp
test
sub
dec
ins
test
add
outs
or
jae
sbb
bnd
xchg
dec
imul
loopne
call
std
fwait
popf
sub
popa
aaa
clc
dec
cmp
pop
idiv
std
lock
cwde
popf
jb
sbb
(bad)
imul
loop
jb
xor
cmp
neg
or
jb
sbb
lock
popf
(bad)
cmc
adc
pop
ja
aad
push
clc
xlat
test
or
push
pop
jg
fld
pop
jecxz
pop
punpcklwd
imul
in
popa
pop
jmp
or
retf
gs
(bad)
xor
test
or
lock
cdq
test
outs
xor
ins
mov
repnz
push
clc
aad
(bad)
popa
jge
or
enter
test
mov
das
dec
(bad)
adc
push
dec
adc
mov
ja
fstp
push
jl
jg
sahf
jnp
push
les
cwde
in
xor
cwde
div
and
add
das
clc
(bad)
arpl
dec
not
push
test
mov
pop
cli
imul
popf
sbb
xor
popa
push
(bad)
lock
popf
push
push
sbb
call
or
ror
push
pop
cmp
inc
std
or
inc
cmc
mov
loop
fwait
xchg
adc
call
std
xchg
(bad)
mov
and
adc
fistp
dec
std
adc
jmp
dec
das
adc
pushf
clc
dec
mov
fadd
adc
sub
dec
adc
loop
pop
jg
std
mov
bnd
mov
jbe
das
push
std
sbb
push
test
sub
rol
int
ins
or
aad
pop
cli
push
test
popf
sub
adc
in
popa
pop
push
ins
xor
inc
dec
rcl
loope
or
retf
lahf
lock
popf
inc
aam
xchg
inc
or
loope
or
sar
clc
push
mov
loopne
adc
pop
mov
sub
adc
push
jmp
xchg
adc
fwait
popf
sub
adc
jg
addr16
sbb
inc
cmc
sbb
xlat
mov
jae
sbb
loope
push
or
push
cmp
pop
imul
shl
inc
mov
sbb
clc
hlt
arpl
push
sbb
call
or
jmp
mov
sub
aad
or
inc
in
mov
into
inc
ja
std
imul
retf
push
adc
mov
jg
test
jg
test
in
mov
imul
xor
inc
jge
pop
mov
aad
xchg
sbb
imul
rcr
lods
leave
jge
or
push
jge
daa
loope
fisttp
inc
pop
stos
lahf
enter
push
pop
fwait
pop
jb
cmp
jp
mov
dec
inc
jg
std
adc
jno
mov
loope
sbb
(bad)
(bad)
sbb
imul
addr16
ror
repnz
pop
cli
ja
ja
cld
xchg
(bad)
loopne
adc
aam
push
inc
mov
or
adc
push
pop
add
sbb
push
outs
popa
pop
clc
ja
xchg
push
adc
cmc
adc
push
lock
std
lock
cwde
popf
adc
adc
aad
pop
popa
jge
or
enter
test
mov
adc
inc
mov
loopne
adc
ja
(bad)
aad
scas
cli
test
ja
fbld
dec
(bad)
adc
push
test
pop
cli
outs
test
test
not
pushf
clc
jl
xchg
fs
push
rcr
rcl
lock
fwait
popf
push
div
addr16
sbb
mov
jle
test
fwait
test
mov
xchg
cmp
pop
or
shr
test
popf
arpl
loop
pop
jg
dec
mov
dec
sahf
imul
dec
mov
loope
test
xchg
sbb
sbb
cmp
lea
sar
xchg
jmp
or
repnz
adc
aad
pop
jb
mov
retf
aaa
add
push
(bad)
popa
addr16
das
rcl
mov
std
or
jge
dec
and
daa
push
fld
test
sbb
push
popa
addr16
xchg
dec
pop
imul
lea
pushf
clc
jge
xchg
(bad)
in
adc
rcl
xchg
loop
xor
sar
popa
pop
mov
push
mov
xchg
mov
clc
test
adc
jg
daa
sbb
test
test
test
sbb
pop
and
adc
test
cmp
dec
(bad)
sbb
xlat
sbb
adc
mov
mov
popa
scas
test
jge
pop
(bad)
not
fdiv
aad
popf
add
sbb
or
(bad)
call
push
cdq
mov
xlat
fwait
popf
jae
sbb
inc
sbb
and
outs
sbb
clc
not
xchg
sbb
repz
adc
ret
dec
and
adc
loopne
adc
push
stos
das
enter
sbb
mov
push
imul
sbb
loope
cmp
bound
or
clc
neg
movs
lock
popf
bound
sbb
push
not
test
ins
mov
repz
push
sti
gs
loopne
adc
xor
(bad)
loope
nop
bswap
ins
cmp
adc
mov
(bad)
cmc
mov
cmc
sub
bound
pop
test
fwait
vandnps
add
cmp
dec
bswap
mov
mul
lods
loopne
or
retf
xchg
push
jno
sub
lahf
push
jno
bnd
xchg
dec
pop
imul
frstor
cmps
popa
inc
or
ja
sub
fdiv
adc
push
add
push
aam
test
std
add
lea
push
shl
xchg
loop
sub
mov
jmp
psrld
mov
clc
xchg
movs
add
ja
aad
pop
cli
imul
int
jg
test
std
or
jl
xchg
push
sub
not
test
aad
push
clc
push
test
popf
cli
jge
je
jle
outs
push
ja
(bad)
loopne
fild
fdiv
mov
pusha
jge
lds
jle
lea
dec
pop
sar
fwait
lahf
clc
idiv
scas
dec
test
push
ret
pop
push
mov
loopne
fwait
(bad)
stc
addr16
or
push
mov
clc
not
xchg
addr16
clc
addr16
test
jne
test
push
adc
std
adc
push
sbb
bound
lahf
loop
imul
jg
dec
popa
dec
(bad)
push
mov
rcr
lahf
clc
dec
cmp
and
mov
pop
lock
fwait
popf
shl
or
popa
mov
jns
cli
cmc
mov
jae
sbb
imul
addr16
xor
neg
xor
imul
adc
not
or
not
or
not
or
not
or
not
or
not
or
not
or
not
or
not
or
not
or
not
or
not
or
stc
adc
outs
sub
imul
nop
cmc
outs
mov
imul
push
popf
add
imul
mov
adc
fadd
iret
mov
js
cmp
jmp
cmp
(bad)
in
mov
cmc
jmp
sar
sub
repnz
fdivr
data16
inc
imul
movs
shl
pop
popf
inc
xor
call
pushw
mov
dec
sub
adc
push
xchg
hlt
mov
leave
cmc
push
nop
cmc
xor
nop
sub
xor
fcomp
or
mul
push
ins
imul
cmc
xchg
mov
cmc
das
mov
push
dec
retf
push
mov
pop
test
cmc
push
nop
cmc
pop
mov
fldcw
je
push
inc
cmc
push
nop
cmc
(bad)
mov
imul
nop
push
pop
mov
ret
mov
push
mov
hlt
pop
mov
daa
(bad)
xor
hlt
adc
mov
cmc
push
nop
cmc
pop
mov
dec
not
outs
hlt
pop
xchg
fwait
lahf
adc
mov
sbb
ins
add
push
mov
in
repz
mov
cmc
repnz
push
push
cmp
push
or
int
nop
pop
outs
mov
cmc
push
nop
cmc
jmp
jno
add
shl
ins
nop
add
push
dec
icebp
push
or
push
nop
cmc
outs
mov
cmc
call
(bad)
jmp
pushf
fldcw
je
push
inc
cmc
jmp
jno
push
sbb
inc
int
mov
js
cmp
jmp
cmp
(bad)
in
mov
cmc
push
xchg
cmc
stc
mov
jno
mov
push
movs
mov
push
imul
cmp
xor
adc
fimul
and
jle
push
adc
dec
or
hlt
adc
imul
cmp
sbb
push
xchg
hlt
pop
repnz
jae
jnp
das
mov
retf
mov
xor
clc
int
pop
or
dec
cmp
aad
ss
movs
adc
rcr
jecxz
test
add
sub
lock
jnp
ja
pop
mov
nop
mov
cmps
push
jo
out
cmps
cmp
aad
mov
clc
or
aad
ror
iret
jecxz
inc
sbb
mov
in
das
jp
ds
cmp
scas
daa
mov
sub
dec
(bad)
in
mov
cmp
and
jns
xor
in
shl
or
jecxz
int
add
out
fsub
test
jecxz
jl
in
addps
fisub
lock
push
retf
xor
shr
xchg
clc
jnp
pop
ins
add
aam
call
div
push
(bad)
cmps
xlat
ins
and
mov
sbb
pushf
in
mov
add
enter
out
stos
cmp
gs
imul
repz
add
out
(bad)
fst
push
test
mov
mov
jle
push
je
inc
jo
jo
addr16
mov
cmp
fcom
lahf
mov
fs
retf
dec
mov
jae
out
ret
sbb
push
ret
dec
ficom
pop
cmc
std
jecxz
and
jecxz
ficom
and
hlt
push
pop
ficomp
push
(bad)
das
cmp
mov
pop
mov
leave
mov
or
and
and
es
and
adc
adc
(bad)
mov
jmp
repnz
leave
cmp
mov
push
cld
push
and
push
and
out
push
ds
and
loop
and
mov
retf
xchg
push
cmp
and
push
and
push
and
cmp
jmp
push
in
push
and
push
and
out
push
mov
xchg
cmp
and
scas
and
in
push
and
push
and
out
push
cmp
and
push
and
xchg
nop
push
cmp
and
push
and
push
and
out
push
cmp
and
push
and
cmp
xchg
leave
cmp
mov
push
int3
push
and
push
and
in
or
movs
push
cmp
and
mov
push
and
or
leave
cmp
mov
pushf
iret
and
movs
push
and
aam
dec
dec
sub
inc
inc
movs
retf
add
je
sub
xor
movs
jmp
add
xor
sbb
mov
pusha
out
sub
ror
mov
or
and
cmp
and
(bad)
in
cmp
stos
sar
add
sbb
xor
out
push
adc
and
mov
call
loope
dec
push
mov
or
sbb
cmp
loopne
outs
mov
and
in
clc
ins
pop
stc
in
(bad)
and
jnp
and
jp
push
mov
and
jecxz
ficom
ficom
aam
call
and
push
aas
jp
or
aaa
push
sbb
cmp
fidivr
repz
jg
cmp
and
jbe
js
pusha
setb
xor
ds
xchg
or
in
ins
(bad)
fsubr
bnd
shr
or
mov
xchg
cmc
jns
mov
inc
sbb
cmp
adc
rcl
add
jae
pop
push
ret
in
push
cmp
mov
sub
arpl
fst
aas
test
sbb
pushf
inc
stos
xor
pop
xchg
clc
sub
or
mov
inc
or
mov
mov
add
and
xchg
push
jmp
mov
jb
jge
jno
push
push
rcl
adc
or
mov
mov
lds
push
pop
call
movs
mov
xlat
bound
push
and
push
into
and
out
push
xchg
jmp
mov
or
mov
(bad)
ror
mov
add
jmp
ret
add
adc
mov
int
in
out
or
retf
mov
push
jmp
or
mov
or
mov
xchg
daa
mov
or
mov
or
mov
mov
lahf
pop
or
push
or
sub
xchg
adc
add
sbb
inc
ret
push
xor
jp
cmp
lds
xor
and
cmp
ins
mov
in
inc
test
jmp
cmp
cmps
aam
xor
cmp
cmp
and
adc
and
jb
shr
lock
aam
cld
out
es
pop
and
push
out
js
sti
out
sub
cli
movs
stos
into
aas
jns
ds
lods
bound
lea
ret
jmp
push
retf
sub
mul
push
xlat
or
inc
adc
aas
js
cmp
and
and
jmp
call
cmp
pop
cmp
mov
mul
sub
lock
jmp
fcomp
repnz
loop
lock
xchg
push
adc
fist
ds
mov
out
imul
es
and
in
shl
jnp
(bad)
cmps
xor
ds
pop
div
adc
cdq
sbb
push
cmc
mov
frstor
clc
and
les
add
out
sbb
push
int3
pop
dec
jae
jg
pop
add
add
stc
(bad)
cld
jge
pushf
into
out
pushf
outs
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
leave
lahf
outs
stos
jmp
pushf
out
test
pushf
outs
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
leave
lahf
outs
stos
jmp
pushf
out
test
pushf
outs
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
stc
pushf
outs
stos
mov
stos
fcom
sub
dec
or
leave
add
jbe
pop
push
adc
arpl
aaa
jb
inc
dec
lea
xchg
lods
adc
arpl
aaa
jb
inc
dec
jecxz
xchg
sub
sahf
outs
das
mov
add
aaa
adc
into
cs
xor
jno
outs
test
adc
lahf
repnz
int
div
mov
inc
retf
fld
outs
sub
add
adc
jo
aaa
xchg
mov
aaa
sub
stos
retf
pop
adc
xor
adc
lahf
pop
mov
adc
add
aaa
adc
sbb
ror
cmp
adc
shl
adc
xor
out
ins
dec
test
mov
push
std
mov
push
pop
adc
add
aaa
adc
add
xor
div
aaa
stos
arpl
jo
inc
(bad)
jae
xchg
sub
add
sbb
mov
aaa
mov
repnz
jbe
dec
push
mov
dec
test
adc
pushf
repnz
test
lods
imul
adc
add
aaa
adc
add
out
add
aaa
gs
div
xchg
push
adc
popf
cmc
aaa
cdq
add
adc
add
aaa
adc
cwde
jb
fistp
retf
rol
outs
fwait
adc
xlat
repnz
mov
add
aaa
adc
lods
div
mov
scas
popf
adc
jp
adc
lods
repnz
scas
fwait
jne
jnp
push
xchg
adc
cwde
icebp
aaa
xlat
add
adc
add
adc
push
adc
addr16
int
add
jo
inc
(bad)
fistp
xchg
sub
addr16
test
lahf
xchg
add
(bad)
xchg
push
leave
fdivr
test
sahf
cmp
leave
(bad)
fs
es
push
mov
stos
call
lock
iret
std
inc
retf
dec
adc
outs
rol
pop
inc
(bad)
cwde
daa
scas
ret
dec
inc
fwait
outs
test
xchg
push
mov
and
pusha
out
sub
call
mov
cmp
inc
(bad)
rcr
and
ds
(bad)
ss
add
aaa
daa
lock
mov
enter
call
cmp
cld
xor
cmp
call
shl
sbb
ja
sahf
push
jge
sbb
mov
or
repz
fucom
je
and
test
out
add
bound
jmp
inc
cmp
lds
or
mov
cmp
xor
stos
enter
clc
mov
sub
out
(bad)
cmp
gs
xor
repnz
jo
cmc
mov
adc
test
test
cmp
aad
(bad)
jnp
cmp
jae
adc
pop
jno
aas
lods
jl
push
cmp
sub
xor
and
mov
xor
ds
pop
jae
stos
xchg
pusha
fst
jb
mov
gs
push
mov
(bad)
and
fist
xor
js
mov
cmp
and
fdiv
mov
sbb
in
pop
stos
leave
sbb
push
push
push
test
stos
retf
sub
push
int
adc
mov
cmc
ins
cmp
ficom
inc
adc
push
mov
cmc
adc
js
add
jp
cmps
and
ret
mov
fwait
jg
xor
in
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
stos
pop
or
fwait
add
cmp
dec
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
in
pop
or
xor
jne
dec
or
cmps
or
(bad)
jge
jg
in
xor
or
xor
jne
dec
or
cmps
or
(bad)
inc
xor
or
xchg
or
xor
or
xor
or
xor
dec
xor
or
xor
or
xor
or
xor
jne
dec
or
cmps
or
xor
or
jg
in
xor
or
jg
jge
das
or
pop
or
xor
or
xor
or
ss
or
inc
xor
lds
dec
lods
lods
pop
or
scas
or
jno
fwait
xchg
jno
cdq
xchg
push
xor
in
jmp
scas
add
shl
imul
icebp
ins
and
jne
xor
jno
fwait
xchg
jno
fwait
xchg
xor
push
jno
fwait
xchg
jno
fwait
xchg
icebp
mov
xchg
cwde
scas
arpl
jne
add
jno
fwait
xchg
xor
(bad)
(bad)
jb
pop
std
jno
fwait
xchg
icebp
xor
mov
out
xor
push
scas
(bad)
cmps
jne
xor
jno
fwait
xchg
loope
fwait
xchg
mov
xor
jno
fwait
xchg
jno
fwait
xchg
jno
fwait
xchg
in
and
std
fld
pop
cs
xor
xor
scas
xor
jno
fwait
xchg
jno
fwait
xchg
int
inc
or
add
pop
pop
scas
lods
push
jno
add
jmp
scas
fwait
xchg
jno
fwait
xchg
int
inc
or
add
pop
pop
scas
lods
push
jno
add
jmp
scas
fwait
xchg
jno
fwait
xchg
jno
fwait
xchg
int
inc
or
add
pop
pop
scas
lods
push
jno
add
jmp
scas
fwait
xchg
jno
fwait
xchg
int
inc
or
add
pop
pop
scas
lods
push
jno
add
cmp
add
jno
fwait
xchg
int
inc
or
add
pop
pop
scas
lods
push
jno
add
sbb
add
jno
fwait
xchg
jno
fwait
xchg
test
push
or
add
out
scas
mov
jno
fwait
xchg
jno
fwait
xchg
cwde
scas
fwait
adc
jno
fwait
xchg
std
adc
daa
in
scas
pop
or
add
jno
fwait
xchg
jno
fwait
xchg
fst
cmp
in
scas
pop
or
add
jno
fwait
xchg
mov
xor
jmp
and
cmps
lods
retf
out
or
bound
icebp
out
mov
out
scas
ret
cmp
fwait
xchg
jno
fwait
xchg
out
ss
pop
imul
pop
mov
pop
jge
outs
and
mov
sti
cmps
mov
scas
(bad)
cmps
jne
xor
jno
fwait
xchg
jno
fwait
xchg
mov
lahf
xchg
jmp
scas
fwait
xchg
jno
fwait
xchg
jno
fwait
xchg
jmp
mov
xor
adc
cmp
sub
scas
out
mov
fwait
xchg
jno
fwait
xchg
jno
cdq
xchg
ret
xor
xor
stos
xchg
jno
fwait
xchg
jno
fwait
xchg
jno
cdq
xchg
push
scas
pop
or
add
jno
fwait
xchg
shl
or
inc
jb
icebp
out
xor
pushf
test
cmps
adc
xor
fsubr
fwait
xchg
loope
pushf
xchg
push
add
icebp
sub
add
jno
fwait
xchg
push
scas
add
jno
fwait
xchg
xchg
not
inc
cmp
sub
add
push
std
fsub
stos
rol
lock
fwait
push
std
ins
sahf
lods
mov
scas
ja
jno
fwait
xchg
jno
fwait
xchg
pop
scas
pop
in
scas
add
jno
fwait
xchg
int
iret
or
scas
add
jno
cwde
xchg
inc
retf
out
add
icebp
jno
add
mov
(bad)
int
or
mov
icebp
pop
scas
pop
movs
jne
add
jno
fwait
xchg
sbb
jg
fisttp
or
neg
jecxz
das
std
neg
add
xchg
xor
inc
in
add
adc
add
jb
retf
scas
aas
sbb
and
xor
pop
jmp
xchg
xchg
in
scas
sbb
jno
fwait
xchg
retf
xchg
pop
scas
pop
movs
jne
add
jno
fwait
xchg
inc
scas
pop
in
scas
add
jno
fwait
xchg
and
and
jno
fwait
xchg
jno
fwait
xchg
retf
xchg
outs
scas
in
mov
jno
pushf
xchg
ins
scas
aas
aaa
jno
fwait
xchg
fnstenv
cdq
xchg
jge
aas
sbb
fwait
xchg
jno
fwait
xchg
jno
fwait
xchg
shr
sub
jno
fwait
xchg
fnstenv
cdq
xchg
pop
scas
aas
cmp
fwait
xchg
jno
fwait
xchg
outs
scas
or
xchg
jno
fwait
xchg
and
add
jno
fwait
xchg
jno
fwait
xchg
test
xor
repnz
xchg
inc
bound
icebp
out
jmp
out
scas
retf
cmp
fwait
xchg
jno
fwait
xchg
inc
scas
fwait
add
jno
fwait
xchg
jno
fwait
xchg
icebp
stos
cdq
xchg
out
scas
or
mov
xchg
push
and
or
jecxz
or
out
jmp
out
scas
retf
cmp
fwait
xchg
jno
fwait
xchg
cmp
add
jno
fwait
xchg
icebp
stos
cdq
xchg
out
scas
or
xor
imul
sbb
add
retf
out
add
pop
and
scas
add
jno
cdq
xchg
imul
cmp
scas
pop
add
add
jmp
sub
pop
dec
adc
popf
xlat
mov
scas
ffreep
jno
fwait
xchg
shl
lahf
xchg
jmp
scas
clc
div
fwait
xchg
jno
fwait
xchg
push
stc
add
retf
in
sbb
push
add
pop
and
push
add
fwait
jmp
pop
gs
jno
pop
sub
sub
cmc
sub
dec
bnd
imul
sbb
(bad)
retf
loop
pusha
out
sub
out
mov
cmp
and
test
and
jnp
cmp
test
iret
rcl
imul
sbb
and
cmp
sub
test
daa
mov
xchg
dec
xchg
repz
xor
mov
sub
cmp
dec
stos
fwait
jae
cmp
pop
fimul
cli
jp
xchg
cmp
mov
(bad)
and
cmp
inc
inc
sbb
movs
rcl
cmps
and
out
lock
pop
pop
push
mov
rcl
jo
dec
mov
enter
adc
mov
jecxz
sti
arpl
cmp
test
jecxz
pop
test
(bad)
xlat
out
and
and
test
loop
adc
mov
in
xor
test
cmp
add
adc
dec
sub
and
xor
inc
and
js
hlt
out
push
xor
in
in
and
aaa
movs
inc
sbb
in
lock
icebp
bound
jp
sbb
cmp
cmp
aad
(bad)
sbb
cmc
mov
cli
out
aas
ficom
adc
inc
dec
or
scas
jmp
inc
out
xchg
sbb
cmps
(bad)
mov
(bad)
or
mov
xchg
xor
jno
sbb
lods
shl
push
and
mov
lock
test
jg
adc
pop
sub
mov
sbb
or
inc
mov
fidiv
ja
mov
push
call
mov
mov
adc
sbb
mov
pop
mov
mov
mov
mov
ja
call
fs
push
test
push
call
sbb
or
inc
mov
fidiv
ja
mov
adc
sbb
jo
ja
call
test
push
call
push
movs
mov
fidiv
cwde
test
in
test
push
call
sbb
push
xor
call
sbb
(bad)
ss
jecxz
mov
sub
int3
test
push
call
test
push
call
sub
lds
pop
sbb
ret
nop
jmp
or
ret
xchg
jmp
or
push
int
jl
jbe
pop
pusha
mov
or
push
adc
cmp
sbb
cmp
lock
mov
repz
sbb
daa
sar
sub
test
add
or
mov
popa
arpl
out
fistp
popf
lods
push
push
sub
xor
jge
dec
adc
sbb
pop
pusha
enter
shr
mov
fcom
js
pop
repz
cmp
and
out
js
shl
pop
dec
lock
mov
out
sub
xor
test
mov
fdivr
mov
sub
sahf
aas
adc
sbb
stos
add
cmp
ins
iret
cmp
lock
(bad)
adc
cmc
int
or
mul
(bad)
xor
retf
push
and
sti
in
cli
push
jo
test
lock
mov
push
clc
loop
stos
mov
sbb
xchg
movntq
cmp
daa
jo
jecxz
arpl
sbb
ins
rcr
jecxz
fcom
call
add
mov
lock
jmp
fcom
loope
sub
sbb
mov
or
jnp
scas
cmc
aad
sbb
das
ret
rol
push
adc
in
xor
pop
jae
imul
aad
hlt
int
test
cmc
shr
test
dec
dec
stos
xor
mov
aad
stos
test
dec
dec
jg
dec
dec
dec
xor
(bad)
jne
leave
daa
mov
test
shr
test
and
dec
push
jmp
dec
dec
push
ins
lds
stos
mov
dec
stos
xor
xchg
lods
stos
mov
dec
stos
xor
xchg
lods
stos
test
dec
dec
stos
xor
xchg
xchg
stos
test
dec
dec
stos
push
dec
dec
ret
(bad)
dec
stos
test
dec
dec
ret
mov
test
dec
dec
xchg
test
dec
dec
je
dec
push
ss
dec
dec
stos
icebp
dec
dec
stos
popf
dec
dec
cmp
retf
scas
xor
cmps
ss
add
scas
test
dec
dec
stos
repz
dec
add
enter
fnstenv
retf
iret
cmp
out
call
pop
test
dec
dec
stos
test
dec
dec
shr
in
xor
sbb
xor
popa
movs
pop
mov
sbb
stc
in
mov
xor
push
xlat
leave
xor
sti
jb
push
pop
arpl
xchg
mov
mov
add
movs
jnp
test
jnp
xor
mov
mov
shl
jnp
xor
movs
mov
mul
(bad)
mov
xor
out
cmp
test
jnp
xor
out
xor
jnp
jmp
mov
xor
jnp
test
jnp
xor
out
xchg
cmp
and
xor
sar
xor
jnp
test
jnp
xor
out
xor
jg
xchg
cmp
and
mov
in
mov
outs
imul
add
gs
jnp
xor
sar
out
add
xchg
pop
mov
add
jnp
stos
mov
retf
mov
loope
jnp
xor
fnstsw
cmp
adc
test
jnp
xor
sar
xor
jnp
test
jnp
xor
out
xchg
cmp
and
xor
sar
xor
jnp
test
jnp
xor
sar
xor
out
mov
xor
mov
cmp
add
xor
jnp
xor
out
xor
mov
mov
cmp
push
xchg
mov
jle
xor
jg
repz
lods
mov
movs
mov
mul
iret
mov
cdq
cmp
and
jmp
out
stos
cmp
lea
cmp
and
pop
cmp
shl
stos
mov
push
mov
pop
movs
jnp
stos
mov
mov
mov
mov
jg
add
jns
mov
dec
mov
sub
jnp
sbb
les
mov
jg
add
jns
mov
out
xor
jnp
out
mov
ret
mov
daa
sbb
add
cmp
or
mov
out
repz
pop
test
add
test
jnp
xor
sar
xor
jnp
test
jnp
xor
test
xchg
cmp
and
xor
out
xor
jnp
sahf
movs
jnp
test
out
mov
pushf
cmp
sub
test
shl
imul
movs
jnp
test
out
xor
mov
mov
cmp
cmc
popf
mov
jnp
xor
xor
xor
(bad)
and
cmp
out
test
movs
or
push
ins
pop
jne
and
fadd
movs
jnp
stos
mov
mov
xor
dec
es
in
sub
jnp
xor
push
mov
mov
inc
test
retf
add
cmp
and
mov
jnp
xchg
mov
or
xor
xor
and
jp
jg
popa
test
out
lods
cmp
out
test
aas
or
push
ds
cdq
mov
stos
mov
xor
jnp
dec
mov
jg
xor
jnp
(bad)
mov
and
mov
xor
or
out
mov
jnp
xor
mov
fiadd
ret
jnp
inc
mov
add
xor
jnp
out
mov
pop
mov
xor
jnp
test
jnp
xor
sahf
mov
hlt
ds
lods
mov
out
xor
jecxz
mov
retf
pop
and
mov
stos
mov
xor
jnp
xor
jnp
xor
jnp
push
sar
xor
jnp
xor
out
xor
jnp
ins
movs
jnp
test
jnp
xor
jg
xor
jnp
pushf
mov
jnp
hlt
mov
jnp
xor
jnp
xor
jnp
xor
jnp
jmp
imul
jnp
xor
jnp
sub
jnp
pushf
mov
and
mov
lahf
sub
(bad)
iret
or
fucomp
movs
jnp
test
jnp
xor
ret
mov
daa
sbb
add
cmp
or
mov
out
repz
pop
test
and
cmp
aaa
into
and
jle
xchg
out
test
out
mov
mov
jecxz
xor
pop
mov
pop
movs
jnp
stos
mov
jnp
add
jnp
stos
mov
adc
loope
jnp
add
jnp
xor
jnp
retf
mov
xor
jnp
xor
jnp
xor
jnp
hlt
mov
jnp
xor
jg
xor
jnp
pushf
mov
jnp
xor
jnp
sub
jnp
pushf
mov
popa
mov
mov
dec
sub
mov
cmp
add
cmp
sbb
gs
mov
jecxz
xor
pop
mov
pop
movs
jnp
stos
mov
or
xor
mov
mov
xor
dec
mov
data16
xor
inc
cmp
add
xor
movs
mov
xchg
cmp
and
xor
out
xor
jg
sahf
cmp
and
or
xchg
cmp
and
pop
in
mov
cs
in
scas
dec
out
add
jnp
push
mov
jnp
xor
sar
out
add
jnp
out
jecxz
xor
jnp
pop
movs
jnp
stos
mov
jnp
add
jnp
stos
mov
dec
mov
pop
or
loop
jnp
xor
mov
mov
jmp
mov
xor
jnp
xor
test
hlt
mov
sar
xor
mov
mov
sub
jnp
pushf
mov
in
mov
cs
in
scas
mul
add
jnp
pop
mov
jnp
xor
cmp
add
cmp
cmp
aad
mov
jnp
xor
aas
mov
push
ds
cdq
mov
mov
mov
jmp
mov
xor
jnp
adc
iret
mov
cdq
cmp
and
pop
or
repz
jnp
xor
js
xor
jnp
test
jnp
xor
jnp
retf
mov
xor
jnp
aaa
mov
out
xor
jnp
retf
and
mov
jg
sahf
cmp
and
mov
out
xchg
cmp
and
xor
jnp
xor
out
xor
jnp
sahf
movs
jnp
test
jnp
xor
pusha
mov
xor
out
pushf
cmp
sub
test
mul
sub
jmp
jnp
test
js
xor
jnp
test
jnp
xor
jnp
push
jnp
xor
retf
mov
xor
clc
int
pop
dec
mov
(bad)
in
out
or
jnp
xor
js
xor
jnp
test
out
xor
jnp
in
movs
jnp
test
jnp
xor
js
xor
jnp
test
mov
mov
mov
mov
jecxz
xor
jnp
shl
add
push
mov
or
retf
mov
lds
in
jnp
xor
or
xor
stos
popa
xor
jnp
jmp
jnp
ss
mov
xor
mov
mov
cmc
mov
test
inc
mov
jg
ret
movs
movs
test
ds
sbb
mov
mov
mov
in
sub
idiv
xor
add
mov
mov
jnp
xor
leave
mov
aaa
cmp
lds
mov
test
xor
out
mov
pushf
adc
ds
movs
mov
or
hlt
cmp
aaa
mov
jl
cmp
out
loope
jnp
add
mov
xor
jg
push
ds
cdq
mov
sar
out
or
cmps
pop
(bad)
cmp
xor
mov
sbb
push
mov
sbb
dec
mov
sbb
daa
mov
mov
xor
aas
mov
push
ds
cdq
mov
mov
mov
out
xchg
xor
push
mov
jecxz
xor
cld
sbb
daa
and
lods
cmp
and
xor
jnp
xor
cld
mov
pushf
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
mov
and
fsubp
dec
test
stos
in
mov
jmp
pop
es
xchg
jg
push
ds
cdq
mov
sti
mov
xor
jnp
xchg
jnp
xor
inc
mov
ins
adc
rcr
mov
jg
xor
jnp
test
jnp
xor
mov
mov
inc
adc
fsub
mov
xor
pop
movs
xchg
fadd
movs
jnp
stos
mov
out
cmp
mov
jnp
xor
leave
mov
pop
(bad)
in
stos
or
sar
xor
jnp
shl
mov
pop
(bad)
in
stos
or
jnp
xor
cmp
jg
fiadd
mov
lock
or
xor
xor
and
jp
adc
nop
ds
lods
cmp
and
mov
loop
hlt
adc
mov
loop
add
out
clc
cmp
and
xor
fbstp
lods
cmp
and
mov
test
sub
loop
lock
aas
fnstsw
out
fcomp
mov
mov
sub
push
or
xor
lods
and
or
loop
lods
adc
mov
cmp
aad
test
pop
movs
jnp
stos
mov
jmp
cmp
and
mov
inc
mov
inc
data16
add
cmp
cmp
dec
movs
jnp
test
jnp
xor
retf
mov
xor
jnp
xor
cli
mov
dec
cmp
and
cmp
mov
clc
daa
sbb
clc
ret
jnp
push
mov
jnp
xor
sbb
pop
mov
sar
stos
and
test
loop
add
sbb
rcr
and
es
jg
xchg
jmp
ins
and
jl
jo
ret
jnp
push
mov
mov
mov
pop
mov
leave
mov
xor
mov
and
clc
or
retf
cmp
pop
xchg
loop
or
and
fst
gs
mov
clc
aas
adc
clc
jae
or
mov
and
xor
jnp
push
mov
out
xor
jnp
dec
movs
jnp
test
inc
mov
xor
mov
add
clc
retf
jge
fs
fwait
sbb
int
ins
in
stos
ins
mov
fiadd
ret
jnp
pop
mov
out
xor
clc
int
pop
loop
repnz
pushf
leave
and
pop
(bad)
in
stos
or
jnp
xor
or
xor
mov
test
mov
or
movs
es
xchg
and
mov
mov
loop
xor
and
sub
fadd
(bad)
in
stos
or
jnp
xor
jnp
xor
clc
mov
bnd
inc
out
ds
in
dec
sets
in
sub
adc
xor
jnp
lods
mov
movs
mov
scas
movs
jnp
pop
movs
jnp
stos
mov
movs
mov
xor
jnp
push
mov
retf
mov
xor
out
mov
aaa
mov
clc
aas
or
xor
mov
jnp
xor
in
xor
in
stos
ins
pop
jne
fs
pop
movs
jnp
stos
mov
loop
xor
jnp
or
mov
loopne
xor
dec
mov
mov
movs
mov
xor
jnp
pop
mov
jnp
xor
cmc
mov
test
test
mov
test
cmps
ss
das
sbb
clc
ret
jnp
dec
mov
jnp
xor
out
xor
mov
jmp
mov
clc
aas
add
clc
repz
call
mov
sbb
xchg
jnp
xor
jnp
push
mov
dec
mov
ins
xchg
jg
push
ds
cdq
mov
js
sub
jnp
push
mov
mov
hlt
cmp
ss
aas
mov
clc
aas
add
clc
adc
call
mov
in
push
cmp
xchg
pop
movs
jnp
stos
mov
mov
stos
ret
jnp
push
mov
mov
mov
inc
data16
add
mov
and
movs
jnp
jmp
mov
mov
mov
out
xor
mov
and
jne
pop
and
jnp
xor
push
mov
mov
add
and
adc
jnp
lods
mov
cmp
cmp
or
xor
jnp
xor
repz
aaa
push
jnp
xor
repz
xor
jnp
mul
mov
xor
add
adc
sbb
movs
jnp
test
cmp
sbb
stos
loope
jnp
xor
jnp
xor
jg
xor
jnp
add
jnp
xor
out
xor
sar
jae
jnp
xor
idiv
and
jg
cmp
and
mov
mov
adc
jnp
mov
adc
xor
jnp
add
jnp
xor
mov
mov
dec
mov
(bad)
mov
xor
out
ret
sbb
mov
movs
jnp
jmp
sbb
test
out
xor
mov
mov
movs
jnp
jmp
mov
xor
jnp
test
cmc
mov
xor
mov
inc
mov
jg
xchg
and
mov
mov
dec
mov
jnp
xor
jnp
xor
jmp
mov
fs
dec
es
jg
pop
or
out
jnp
xor
jle
xor
cmp
cmp
or
xor
jnp
xor
dec
mov
aaa
mov
jnp
xor
stc
mov
mov
jnp
cld
mov
js
xor
jnp
test
dec
mov
xor
ins
movs
jnp
test
jnp
xor
cmc
mov
test
test
(bad)
cmp
mov
or
push
sbb
out
out
push
cmp
in
mov
sar
cmp
and
test
pop
and
pop
(bad)
cmp
xchg
jo
jnp
xor
jnp
in
jnp
xor
jnp
xor
sar
mov
stos
mov
xor
jnp
push
jnp
xor
leave
mov
xor
jnp
scas
mov
out
xor
jnp
sbb
mov
pop
jl
mov
or
lods
mov
jnp
xor
or
hlt
cmp
xor
movs
jnp
jmp
jnp
xor
scas
mov
xor
jnp
movs
mov
fstp
xor
sub
xor
repnz
and
mov
test
jmp
xchg
jg
push
ds
cdq
mov
(bad)
mov
push
ds
cdq
mov
sbb
push
sahf
jnp
xchg
mov
xor
jnp
test
jg
xor
sub
out
jnp
add
mov
xor
jnp
xor
jnp
aaa
mov
sbb
movs
xor
outs
movs
jnp
test
jnp
xor
retf
mov
xor
clc
int
pop
dec
mov
(bad)
in
out
or
jnp
xor
jnp
xor
js
xor
jnp
test
in
xor
jnp
cmp
jnp
xor
inc
mov
adc
jnp
jmp
out
xor
jnp
lods
mov
jnp
xor
mov
mov
inc
data16
and
jnp
cmp
loope
jnp
xor
dec
mov
xor
jnp
aaa
mov
movs
mov
hlt
mov
mov
and
xchg
cmps
mov
pop
cmp
jne
mov
jnp
xor
dec
mov
ins
xchg
cmps
adc
fiadd
cmp
push
stos
mov
dec
mov
ins
xchg
cmps
lds
out
pop
cmp
xchg
stos
mov
sbb
add
in
sub
jnp
call
mov
sbb
add
out
or
gs
mov
and
xor
and
rol
out
push
cmp
sub
xor
cmc
mov
test
inc
mov
out
add
and
xor
jnp
xor
out
xor
jg
mov
mov
jnp
hlt
mov
jnp
xor
jnp
pushf
mov
jbe
xor
out
xor
jnp
mov
pop
and
mov
jnp
mul
sti
mov
xor
jg
mov
jnp
add
mov
mov
retf
mov
xor
jg
and
and
mov
jnp
out
movs
jnp
jmp
jnp
xor
sar
xor
jnp
test
jnp
xor
jnp
xor
out
xor
jnp
lods
mov
dec
mov
out
arpl
int3
mov
out
xor
jg
xchg
cmp
and
mov
xor
and
int3
rcl
movs
mov
aas
out
imul
out
and
mov
mov
and
gs
sbb
out
(bad)
sub
jnp
mov
and
test
shl
call
push
(bad)
ret
call
jp
or
cmp
and
sbb
and
fs
daa
stos
mov
adc
mov
call
fnsave
loope
repnz
call
pushf
in
imul
lock
in
mov
mov
cmp
dec
cmp
and
and
sub
js
xor
imul
cli
mov
mov
push
fld
sar
ins
jmp
ficom
jg
dec
add
fadd
ins
scas
sub
and
aaa
in
cmp
and
and
js
push
retf
in
adc
icebp
in
add
loopne
imul
cmp
add
movs
cmp
jmp
sbb
iret
mov
fidivr
in
push
cmp
lods
sub
stc
adc
sbb
and
and
das
rol
loopne
push
cmp
int
(bad)
jns
neg
fdiv
push
sbb
mov
rol
mov
aam
fldcw
in
fnstcw
movs
jmp
fs
les
fs
arpl
pop
and
add
pop
jns
aam
mov
fs
fs
stos
call
pop
mov
ja
push
jbe
sbb
(bad)
and
mov
clc
jmp
fs
mov
(bad)
jmp
fs
pop
mov
loopne
fld
push
sub
jns
and
test
fdivr
mov
pusha
out
(bad)
cmp
mov
cmc
out
pop
ja
push
imul
fs
fidivr
fs
fs
fs
fnstcw
cmp
fnstcw
in
jno
fs
mov
addr16
fst
fs
pusha
in
fnstenv
sub
mov
cmp
mov
imul
or
sub
mov
loopne
fld
fs
inc
mov
push
jmp
fs
push
mov
cmc
jmp
fs
mov
xor
fnstcw
addr16
xchg
fs
mov
fucomi
fstp
fs
fs
fs
fs
push
mov
fs
stos
jmp
fs
(bad)
jmp
call
pop
movs
sar
pop
pop
jb
fadd
outs
xchg
daa
cmps
pop
shr
jb
in
fs
les
(bad)
jmp
push
jbe
js
fstp
mov
fs
fs
fs
fnstcw
pusha
jmp
fs
fs
jno
fs
int3
jmp
fs
mov
addr16
fld
int3
jmp
fs
mov
movs
jmp
lock
pop
inc
clc
push
and
mov
in
inc
xor
inc
sub
jns
and
test
or
cli
mov
xor
xchg
push
stos
cli
push
int
jae
iret
cmp
sti
ins
stos
cli
jbe
es
mov
jnp
sub
mov
pusha
jb
ret
or
push
adc
cmps
hlt
cmp
xor
test
out
int3
cmp
lds
aam
dec
test
mov
xor
jnp
xor
or
imul
pop
push
mov
jmp
xor
loop
xor
aas
iret
xchg
jae
and
cmp
sub
mov
adc
adc
jae
xor
pop
inc
outs
test
jo
out
mov
clc
dec
jbe
push
mov
ja
call
test
das
aad
and
sbb
add
in
jns
hlt
loop
pop
cwde
aas
seto
and
je
and
and
jp
push
mov
and
cmp
adc
xchg
js
cmc
(bad)
out
mov
loopne
addr16
sub
test
push
cmp
add
in
sub
scas
mov
cmp
sub
js
cmps
loop
mov
repz
mov
std
arpl
aam
not
mov
pop
dec
shl
jns
inc
pop
in
and
mov
xchg
or
imul
retf
mov
stos
sbb
cmp
sbb
in
mov
outs
jecxz
fst
inc
push
inc
call
imul
(bad)
(bad)
jecxz
fst
mov
(bad)
out
test
cwde
retf
sbb
add
mov
adc
cmp
cmps
iret
add
cmp
sub
push
jno
(bad)
push
ins
and
test
dec
retf
sti
push
and
dec
push
test
jecxz
pop
dec
dec
push
sbb
dec
add
push
sbb
dec
push
test
xchg
push
dec
push
sub
dec
push
test
dec
enter
aaa
sbb
push
pop
or
call
sbb
push
fwait
call
push
lods
xor
xchg
test
cmp
pop
aam
aam
dec
push
test
jmp
cmp
loopne
sbb
shl
out
sbb
fmulp
loopne
icebp
imul
cmp
dec
push
test
clc
xlat
sbb
sub
cli
dec
push
mov
dec
lods
test
sub
cli
(bad)
push
sbb
dec
push
test
clc
iret
cmp
push
loopne
(bad)
push
sbb
dec
push
test
clc
iret
cmp
push
loopne
(bad)
push
sbb
dec
push
test
dec
aaa
xchg
(bad)
push
loopne
dec
push
sbb
dec
push
test
mov
add
push
add
dec
push
test
dec
aaa
xchg
dec
push
in
dec
push
test
mov
xchg
fld
dec
dec
and
dec
enter
push
pop
mov
dec
or
neg
cmp
xchg
push
mov
sub
dec
mov
(bad)
aaa
js
mov
pop
fimul
in
dec
push
test
cli
pop
cli
(bad)
push
mov
call
push
lods
xor
push
test
aad
add
sbb
dec
loope
dec
push
sub
dec
push
test
mov
jmp
dec
push
adc
dec
xor
mov
loopne
(bad)
push
loopne
dec
push
test
in
push
shr
loope
push
loopne
dec
push
sbb
dec
sub
cdq
cli
dec
sub
loop
ror
ja
leave
addr16
sub
dec
test
push
rol
push
test
ror
sub
dec
in
(bad)
sbb
cs
dec
dec
dec
push
pop
popf
dec
mov
cdq
dec
push
sbb
or
sub
mov
or
or
cdq
sahf
enter
sar
push
ret
jl
sbb
(bad)
retf
xlat
aaa
dec
xor
in
dec
dec
test
aam
aam
dec
out
test
mov
inc
stc
dec
push
test
enter
jbe
sbb
push
enter
sbb
dec
mov
xlat
aaa
dec
xor
in
dec
push
test
mov
rcr
(bad)
aam
push
sar
or
(bad)
pop
aam
aam
dec
aam
cdq
dec
and
cdq
mov
add
(bad)
lock
push
sbb
dec
push
test
jmp
test
sub
(bad)
(bad)
push
mov
cdq
dec
test
sub
mov
fs
sar
xchg
(bad)
push
fs
dec
dec
test
sub
mov
(bad)
lods
or
sub
loop
ror
pop
cmps
cli
dec
sbb
enter
push
pop
cmp
sbb
dec
retf
test
xchg
dec
push
jb
ja
push
enter
xor
sub
out
repz
cwde
sti
dec
mov
test
xchg
mov
sbb
sub
(bad)
adc
add
cmp
sbb
outs
out
sahf
cwde
mov
(bad)
mov
add
sub
cli
adc
jb
adc
push
sbb
dec
mov
sub
dec
push
test
cmp
sbb
das
out
sahf
shl
enter
and
std
enter
xor
push
call
jns
(bad)
std
sub
out
sub
mov
jp
out
rcl
dec
push
sbb
dec
and
cdq
retf
cdq
sub
out
(bad)
cwde
mov
push
fnsave
sbb
sub
aaa
mov
sub
pop
push
daa
out
xchg
push
out
(bad)
push
in
and
test
dec
in
cdq
mov
lea
jns
call
push
mov
loope
loopne
dec
push
sbb
dec
and
cdq
retf
cdq
sub
(bad)
dec
sbb
cdq
push
pop
retf
in
dec
in
test
sub
dec
xchg
test
dec
push
pushf
daa
dec
push
test
push
push
inc
jmp
dec
push
test
lock
add
dec
push
in
dec
push
test
or
sahf
push
stos
dec
dec
xchg
jl
dec
aaa
test
dec
push
in
dec
push
test
shl
sbb
push
in
dec
push
test
mov
test
dec
push
test
retf
cdq
push
or
sub
dec
and
cdq
mov
sbb
retf
cdq
jmp
add
dec
push
test
pop
dec
sbb
push
jmp
dec
sub
sbb
push
test
dec
dec
xchg
xchg
push
sbb
sub
dec
push
test
dec
mov
(bad)
push
push
outs
dec
rol
into
dec
arpl
mov
or
add
aaa
add
push
loopne
dec
push
sbb
dec
das
test
cmc
enter
sar
jle
sbb
(bad)
push
adc
mov
sbb
movs
sbb
mov
jmp
fxch
push
xchg
inc
dec
push
in
dec
push
test
mov
dec
aam
cdq
mov
dec
push
test
repz
jmp
aad
les
xor
add
sub
loopne
out
shl
pop
sub
dec
push
test
dec
xor
xchg
push
loope
sub
dec
push
test
dec
int
cdq
jb
xor
pop
int
jge
xor
inc
(bad)
aam
mov
jg
xor
leave
dec
out
aam
mov
sub
sub
jnp
mul
jnp
xor
mov
mov
test
jnp
push
mov
sbb
adc
mov
sbb
push
ror
jnp
xor
add
cmp
adc
cmp
rcr
out
test
test
push
xchg
jae
xor
or
pop
xchg
enter
aaa
or
and
jnp
sub
add
and
neg
int
fwait
inc
inc
sbb
pop
(bad)
out
dec
cmp
ins
xchg
out
and
jmp
(bad)
(bad)
jb
rcr
jb
pop
jb
sbb
cmp
cmp
jp
xchg
sbb
lock
add
cmc
and
mov
dec
ins
jg
aaa
daa
mov
and
cmps
inc
add
jmp
pop
sub
outs
ret
in
mov
or
loop
icebp
mov
call
cmc
mov
mov
ret
clc
and
into
shl
add
mov
push
ds
gs
sbb
in
lock
cmp
cmp
scas
cmp
add
arpl
lods
inc
sbb
jmp
push
movs
xor
push
retf
loop
test
sbb
and
jecxz
fst
call
mov
and
fist
sbb
dec
ret
loop
push
xlat
test
frstor
pusha
and
clc
mov
ret
fcmovu
push
in
mov
and
fld
lock
xor
call
jmp
xchg
imul
inc
loope
pusha
out
mov
mov
pop
ss
jmp
mov
out
imul
out
mov
out
lea
lea
jnp
push
(bad)
jnp
push
(bad)
sti
adc
(bad)
out
sub
inc
adc
repz
adc
inc
jnp
mov
jnp
push
(bad)
jnp
push
(bad)
sub
mov
jnp
push
(bad)
jnp
push
(bad)
call
mov
loop
mov
jnp
push
(bad)
out
pop
pop
jnp
mov
jnp
push
(bad)
jnp
push
(bad)
sbb
and
jmp
jmp
adc
pop
jnp
mov
jnp
adc
mov
mov
lea
(bad)
jnp
push
(bad)
sti
sbb
repz
ret
lea
(bad)
jnp
push
(bad)
cmp
mov
not
xbegin
std
out
mov
lea
xchg
jnp
push
(bad)
jnp
push
(bad)
sti
pop
adc
fisttp
(bad)
pop
jnp
push
(bad)
jnp
pop
(bad)
data16
xlat
mov
lea
(bad)
sti
pop
adc
fisttp
(bad)
addr16
push
(bad)
jnp
push
(bad)
retf
mov
mov
jnp
adc
add
push
cwde
mov
or
mov
shl
adc
pop
or
mov
sbb
push
je
in
ins
pop
ret
mov
mov
mov
xor
and
adc
and
add
outs
and
mov
cmp
push
icebp
xor
aaa
and
cmp
in
call
mov
out
lods
cmp
gs
push
jae
cmp
jecxz
gs
inc
adc
in
add
jg
and
jb
imul
mov
ret
aas
jmp
out
sbb
or
inc
pop
cmp
lods
push
idiv
addr16
fstp
cs
mov
aam
jmp
mov
sbb
test
xor
push
jle
dec
jecxz
sar
movs
xor
in
lock
mov
mov
add
jmp
pop
cdq
out
lods
aas
outs
in
xor
fistp
adc
ret
loopne
push
addr16
(bad)
sbb
jge
jo
pop
fs
and
and
(bad)
cmp
xlat
pop
popa
js
js
out
gs
in
push
repz
lock
jmp
movs
(bad)
inc
jnp
jmp
mov
add
inc
sbb
cmps
ret
jbe
push
mov
clc
xchg
adc
sbb
push
fwait
jae
loop
sub
push
cmps
add
and
sti
xchg
inc
jae
jg
add
rol
adc
call
loop
push
jno
popa
ror
loopne
lock
jb
push
rol
popa
adc
out
sub
shr
aaa
dec
aam
sub
jle
push
sar
push
shl
popa
push
push
popa
push
mov
popa
inc
mov
rcl
push
repz
dec
jle
leave
dec
push
add
aam
push
jl
xor
add
sbb
cmp
pop
retf
mov
push
out
outs
cmp
xchg
cmp
and
mov
out
retf
and
xor
jnp
xor
out
xor
jg
scas
cmp
and
cmp
mov
test
jnp
xor
loope
xor
out
xor
jnp
test
jnp
xor
movs
mov
xchg
ret
jnp
push
mov
jnp
xor
in
mov
stos
(bad)
in
mov
mov
jnp
xor
cwde
mov
ins
cmp
and
mov
jg
xor
jnp
test
jnp
in
jnp
xor
jnp
xor
pop
mov
pop
cli
jnp
xor
sar
xor
jnp
test
jg
pushf
cmp
inc
mov
mov
sbb
or
ret
in
dec
or
jnp
xor
and
xor
jnp
bt
dec
mov
jnp
xor
stos
mov
xor
jnp
xor
movs
mov
jmp
fiadd
cli
jnp
jo
jnp
xor
sbb
mov
loopne
mov
(bad)
aad
or
jnp
out
movs
jnp
test
jnp
xor
dec
mov
xor
(bad)
xor
jnp
push
mov
jnp
xor
or
hlt
cmp
aaa
into
xor
jp
cmp
test
mov
sbb
push
mov
mov
mov
mov
mov
jnp
test
jnp
xor
adc
xchg
retf
fst
jnp
test
jnp
xor
jg
xor
jnp
hlt
mov
mov
mov
test
rcl
sbb
mov
adc
ficom
sbb
push
retf
out
or
jnp
scas
mov
sbb
ins
cmp
(bad)
mov
pusha
mov
push
ins
adc
fdiv
ficom
jg
push
ds
cdq
mov
sbb
mov
mov
es
jnp
mov
cmp
push
inc
out
sub
and
xchg
jnp
push
movs
jnp
test
jnp
xor
retf
mov
xor
aam
pop
(bad)
retf
cmps
jmp
popa
xor
jnp
hlt
mov
arpl
xor
jnp
pop
movs
jnp
stos
mov
dec
cmp
ficom
dec
(bad)
call
or
jnp
xor
or
xor
jnp
pop
dec
mov
fst
jnp
retf
mov
xor
jnp
inc
mov
jnp
xor
and
xor
jnp
xor
sub
xor
jnp
test
sbb
push
mov
or
hlt
cmp
aaa
into
xor
jp
cmp
test
mov
js
xchg
ret
jnp
push
mov
out
xor
jnp
push
mov
adc
test
leave
mov
xor
out
pop
cmp
and
test
jg
xor
jnp
hlt
mov
mov
mov
test
rcl
sbb
mov
adc
ficom
sbb
push
retf
out
or
jnp
scas
mov
fstp
xor
out
ins
cmp
(bad)
mov
inc
mov
(bad)
push
ins
adc
fdiv
ficom
jg
push
ds
cdq
mov
sti
mov
xor
out
push
cmp
int
leave
jnp
pop
mov
arpl
hlt
ret
lahf
aam
inc
out
sub
sub
xchg
jnp
push
movs
jnp
test
jnp
xor
retf
mov
xor
aam
pop
(bad)
retf
cmps
jmp
popa
xor
jnp
hlt
mov
and
pop
movs
jnp
stos
mov
adc
inc
sbb
ficom
dec
lods
call
or
or
xor
sbb
pop
mov
rol
pop
(bad)
push
pop
retf
and
fs
retf
mov
jnp
xor
jnp
xor
in
sub
jnp
outs
mov
and
xor
test
movups
lock
sbb
scas
mov
jnp
xor
cmc
mov
test
inc
cmps
cmp
sub
cmp
(bad)
mov
or
in
movs
jnp
test
jnp
xor
js
xor
jnp
test
mov
mov
retf
mov
jnp
les
js
hlt
ret
jnp
push
mov
out
xor
ret
xlat
jnp
pop
mov
add
mov
xor
loopne
nop
ret
mov
and
mov
jnp
xor
jnp
lods
mov
mov
lods
ret
scas
loop
sub
sub
ret
sbb
push
ret
adc
pop
mov
jnp
push
movs
jnp
test
jnp
xor
adc
xchg
jnp
push
movs
jnp
test
adc
test
sbb
clc
retf
in
ins
outs
and
das
and
fadd
movs
jnp
stos
mov
cwde
mov
ins
xor
add
nop
ret
jg
push
cmp
and
mov
sbb
in
jle
fisubr
cmp
adc
mov
jnp
xor
jnp
lods
mov
aas
mov
push
ds
cdq
mov
out
xor
jnp
je
jnp
test
or
xor
mov
and
retf
jnp
int3
mov
sbb
in
sar
test
jnp
xor
gs
je
jnp
xor
mov
mov
int3
aas
jg
call
jns
mov
pusha
mov
push
jle
jns
mov
jnp
xor
arpl
xor
jnp
pop
movs
jnp
stos
mov
and
xor
sbb
bswap
inc
or
jg
fisubr
(bad)
jnp
mov
jmp
xor
jnp
les
lahf
mov
ror
xor
jnp
mul
out
xor
jnp
scas
movs
jnp
test
retf
mov
inc
mov
pop
mov
xchg
ret
jnp
push
mov
mov
mov
inc
dec
and
les
push
jle
jns
mov
jg
xor
jnp
hlt
mov
and
pop
movs
jnp
stos
mov
inc
mov
ins
adc
lock
out
xor
jnp
test
jnp
xor
call
mov
test
fstp
xor
jnp
push
mov
jnp
xor
popa
mov
inc
dec
and
(bad)
fbstp
xchg
jg
push
ds
cdq
mov
dec
mov
jmp
jnp
outs
mov
jnp
xor
out
xor
clc
int
pop
fs
ins
pusha
inc
divps
movs
jnp
pop
movs
jnp
stos
mov
leave
mov
xor
jnp
das
mov
add
mov
ret
movs
push
add
fadd
movs
jnp
stos
mov
js
xor
jnp
test
jnp
hlt
mov
jnp
xor
jnp
xor
cmc
mov
test
inc
mov
jmp
xchg
jg
push
ds
cdq
mov
in
mov
in
mov
or
xor
in
in
in
jne
add
mov
test
push
in
add
cmp
xor
out
out
sbb
add
loope
movs
jecxz
aad
in
es
push
loopne
pop
fstp
jmp
jge
ficomp
dec
mov
out
push
cmp
fbld
and
test
dec
daa
test
jecxz
in
sub
out
xor
test
adc
inc
push
stos
mov
push
jp
xchg
sub
js
dec
add
aas
or
cmp
and
cmp
ins
fist
es
in
jo
in
in
cmp
leave
mov
jb
pop
fsub
icebp
xchg
lods
in
cmps
aam
sti
popf
jmp
fdiv
cmp
in
mov
jp
shl
jecxz
ficom
gs
out
inc
push
adc
push
add
jo
sub
scas
ret
out
push
cmp
lods
mov
(bad)
cmp
cmp
js
mov
sbb
cld
loope
sub
xchg
push
inc
xchg
aaa
inc
gs
and
sub
pop
and
or
ret
loop
xchg
pop
js
xor
js
clc
mov
ret
ret
in
clc
test
out
mov
adc
ret
xor
push
push
test
push
test
test
daa
mov
retf
je
sar
cli
in
xor
(bad)
pop
cmp
push
push
cmp
rcr
mov
pop
add
ret
mov
(bad)
pop
cmp
(bad)
pop
xor
xchg
push
adc
fstp
pop
pop
cmp
(bad)
pop
inc
mov
push
pop
and
mov
mov
(bad)
pop
(bad)
adc
pop
cmp
shl
jne
pop
sbb
sahf
repz
(bad)
pop
sbb
les
mov
(bad)
pop
and
xor
pop
adc
sbb
vcvtdq2pd
in
mov
rol
(bad)
pop
(bad)
mov
pop
ret
(bad)
pop
sbb
jo
jmp
pop
add
xor
pop
daa
or
dec
shl
loop
pop
add
movs
cmp
ret
test
pop
js
movs
sub
jnp
push
mov
mov
xor
pop
mov
clc
ret
in
jmp
jnp
pusha
mov
jnp
xor
js
xor
jnp
test
sbb
mov
out
or
lds
mov
or
test
add
ss
and
mov
jnp
xor
or
xor
mov
scas
addr16
add
and
push
add
fadd
movs
jnp
stos
mov
dec
mov
xor
jg
push
ds
cdq
mov
in
in
out
test
mov
stos
jg
es
xchg
jg
push
ds
cdq
mov
stos
mov
xor
jnp
or
inc
mov
push
movs
jnp
pop
movs
jnp
stos
mov
mov
mov
stos
mov
jnp
ins
mov
or
xor
jnp
xor
lds
in
jnp
xor
jnp
xor
jo
xor
dec
dec
add
and
stos
xchg
in
push
ins
push
jne
les
pop
movs
jnp
stos
mov
adc
sub
push
jg
fiadd
sti
jnp
nop
mov
jnp
xor
movs
mov
push
fs
pop
movs
jnp
stos
mov
out
xor
out
mov
pop
mov
call
ret
jnp
push
mov
fs
scas
or
dec
and
mov
cmp
ins
aas
pop
outs
clc
add
fadd
add
adc
les
and
xor
jnp
xor
jnp
xor
sbb
scas
mov
jnp
xor
out
xor
xchg
int
jge
sub
and
cmp
ins
mov
xor
fisubr
or
lods
sar
ja
out
aam
cmp
and
stc
jae
jg
adc
dec
out
stos
arpl
pop
sub
rcr
in
pop
fs
or
jecxz
fincstp
in
clc
push
int
stc
sbb
call
cmp
and
cmp
ins
xchg
loop
and
ret
lock
pop
and
cmp
pop
rcl
adc
pop
mov
sbb
push
inc
or
div
add
loope
add
out
pusha
push
cli
cmp
aas
xor
pop
and
jp
jp
ret
sub
push
push
(bad)
cmp
ret
loop
jge
repnz
ss
mov
call
ret
adc
lock
sub
xor
fs
xor
jno
clc
dec
jne
(bad)
fist
hlt
cmp
aam
in
xchg
push
sbb
jno
pop
js
xor
jne
add
push
fstp
mov
loopne
retf
sub
mov
jae
sbb
(bad)
adc
push
mov
fisttp
xchg
mov
xchg
mov
sbb
adc
mov
outs
dec
dec
imul
mov
adc
inc
jmp
xchg
xlat
dec
aad
push
cmp
cli
stos
mov
mov
xchg
mov
mov
outs
mov
mov
mov
loope
fisttp
xchg
mov
xchg
mov
mov
add
mov
mov
dec
xchg
mov
mov
mov
outs
mov
mov
lea
outs
dec
xchg
mov
xchg
mov
mov
dec
outs
mov
mov
xchg
mov
mov
mov
xchg
mov
in
sub
ins
jge
neg
test
xchg
and
icebp
jmp
sub
mov
or
mov
call
mov
mov
mov
aaa
jle
jns
mov
jnp
xor
jnp
retf
mov
fs
lods
add
xchg
mov
out
xor
fldcw
(bad)
jmp
in
pop
jnp
lds
jnp
xor
js
xor
jnp
hlt
mov
mov
mov
icebp
mov
repz
mov
jnp
xor
inc
mov
xor
popa
mov
and
scas
movs
jnp
push
mov
mov
xchg
test
adc
movs
jnp
pushf
mov
jnp
xor
jnp
xchg
mov
jnp
xchg
mov
jnp
xor
jnp
pushf
mov
sar
xor
cmp
addr16
jp
int
pop
mov
cdq
xor
mov
xor
jnp
loope
jnp
pushf
mov
add
mov
add
jnp
xor
sar
adc
mov
ror
outs
jnp
call
or
and
movs
cmc
add
(bad)
mov
add
ds
test
xor
and
cmp
jmp
imul
cmp
(bad)
adc
stos
in
pop
gs
jno
and
call
sbb
xor
inc
inc
sbb
clc
(bad)
jb
xchg
out
scas
jns
cmp
inc
cmp
lea
or
push
jge
push
jbe
call
and
push
aad
imul
lahf
jle
adc
cmp
fsubr
mov
add
in
and
mov
jb
cmp
in
dec
adc
cmp
adc
test
sub
outs
cmp
gs
imul
popw
jno
sbb
cmp
cmp
jge
jmp
jg
(bad)
push
jno
mov
jp
inc
sbb
stos
ret
pop
ficom
(bad)
mov
pusha
data16
icebp
and
and
push
out
sldt
rcr
psllq
add
fs
imul
aaa
mov
aaa
sahf
mov
cmp
test
push
(bad)
sbb
sbb
inc
and
sbb
and
std
movs
cmp
test
out
mov
push
addr16
jmp
das
and
lea
pop
inc
ja
jmp
popa
ja
jmp
or
xchg
and
(bad)
or
hlt
jne
in
jns
stos
cmp
jne
adc
mov
in
pop
push
test
or
jmp
xor
movs
mov
mov
and
cmp
sub
mov
or
scas
xchg
int
(bad)
ret
cmp
mov
ds
gs
mov
stc
cmp
or
aaa
jmp
popf
das
ins
jle
add
je
xlat
fdiv
cmp
hlt
fnstsw
mov
std
std
lock
mov
dec
jecxz
adc
test
mov
(bad)
cmp
and
cmp
in
in
and
xchg
stos
shr
and
and
add
push
jb
fdivr
std
loope
data16
mov
mov
(bad)
test
(bad)
ds
cmps
es
push
jo
sbb
push
jmp
fdiv
cmp
gs
push
in
idiv
ret
pop
mov
and
or
sar
loop
cli
mov
sub
adc
scas
cdq
retf
jo
pop
mov
mov
sub
jle
test
push
ret
cmp
sub
ret
out
push
cmp
lea
jo
in
mov
loop
out
arpl
popf
test
push
xchg
int3
(bad)
jmp
in
leave
in
xchg
lock
push
nop
aad
je
or
sub
fnstsw
xchg
movs
mov
test
aad
fs
mov
pop
jno
push
mov
mov
(bad)
in
pop
gs
mov
pop
(bad)
jl
jne
in
shr
sar
ins
jmp
cld
mov
pop
enter
jmp
outs
(bad)
leave
pop
test
dec
(bad)
ins
push
sub
in
cmp
out
fnstenv
push
mov
aad
aam
in
in
fucomp
in
movs
mov
or
aad
pop
shl
(bad)
enter
icebp
ja
into
xchg
inc
out
mov
gs
aas
(bad)
mov
jnp
mov
pop
enter
jmp
gs
(bad)
leave
and
lea
dec
(bad)
ins
push
sub
in
cmp
out
fnstenv
push
mov
aad
aam
in
in
fld
jns
fidiv
mov
test
fnstsw
sub
(bad)
stc
dec
inc
scas
inc
inc
(bad)
mov
out
into
xchg
jl
pop
sar
push
aas
test
call
inc
jl
dec
(bad)
pop
ss
ficomp
call
fcmovbe
push
jbe
cmp
push
push
ficomp
jb
pop
push
jbe
test
inc
(bad)
push
mov
(bad)
pop
ss
ficomp
call
(bad)
icebp
les
dec
int
ds
push
jmp
in
inc
ret
into
(bad)
iret
call
push
loop
ret
push
fcmove
call
inc
sbb
popf
mov
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
or
test
loopne
sbb
in
in
cmps
mov
pop
mov
test
push
pop
inc
jmp
(bad)
xlat
ja
call
add
mov
out
repnz
in
stos
retf
jae
xor
jecxz
inc
push
sti
cmc
fst
das
xor
xor
in
push
xor
sub
imul
adc
(bad)
xlat
ret
shl
lock
mov
mov
add
jo
movs
mov
loope
xchg
arpl
and
test
or
test
stos
bound
and
jb
mov
mov
sbb
mov
mov
stc
std
cmc
sub
retf
imul
clc
mov
pusha
in
mov
add
or
add
test
ja
icebp
adc
jmp
scas
cmp
sub
pusha
cmp
js
gs
mov
mov
sub
xor
sub
out
inc
cld
mov
retf
(bad)
sar
lds
sar
or
cmc
mov
sbb
(bad)
sub
out
xor
push
neg
inc
xchg
loope
jno
adc
and
cmp
adc
jb
outs
jecxz
ficom
sbb
rol
dec
bound
call
sbb
mov
je
and
push
out
sti
pushf
ret
cs
loope
push
cld
in
movs
fst
jo
mov
push
adc
push
call
xchg
sar
mul
and
mov
and
ret
and
or
and
add
and
or
and
dec
and
into
and
or
and
or
dec
add
outs
dec
push
add
push
sub
and
or
and
or
and
sbb
sub
out
mov
test
jmp
ret
or
add
into
and
or
mov
push
sbb
sahf
sbb
int3
out
xchg
mov
sahf
sbb
and
cdq
popf
int3
xchg
bound
mov
sahf
sbb
popa
mov
mov
push
and
popf
dec
and
or
add
sahf
xchg
add
push
mov
sahf
sbb
sar
mov
mov
add
mov
or
mov
mov
push
mov
sahf
sbb
push
mov
sahf
sbb
mov
or
add
(bad)
mov
sahf
sbb
push
es
sbb
push
mov
sahf
sbb
int
add
mov
or
mov
mov
push
mov
sahf
sbb
enter
push
mov
sahf
sbb
into
and
xchg
and
(bad)
mov
sahf
sbb
int3
mov
sahf
sbb
into
add
push
mov
sahf
sbb
(bad)
mov
sahf
sbb
push
adc
out
int3
and
mov
cli
in
cdq
lahf
mov
push
adc
sbb
push
mov
sahf
sbb
xchg
and
inc
push
mov
sahf
sbb
enter
push
mov
push
adc
sahf
sbb
outs
push
sbb
xchg
mov
sahf
sbb
into
mov
push
sbb
sahf
sbb
int3
out
rol
mov
sahf
sbb
push
mov
sahf
sbb
push
pop
sahf
sbb
or
leave
pop
mov
mov
sahf
sbb
jle
sub
push
mov
sahf
sbb
test
sbb
minps
in
dec
add
fbld
mov
jle
test
pushf
aas
add
push
mov
adc
fwait
sbb
push
mov
sahf
sbb
push
mov
adc
sbb
xchg
and
xor
sahf
sbb
push
and
test
push
sbb
sahf
sbb
jg
call
sbb
sahf
sbb
jle
call
mov
mov
sahf
sbb
enter
fcom
dec
push
mov
sahf
sbb
push
sub
mov
cmc
mov
jbe
push
mov
sahf
sbb
push
mov
sahf
sbb
(bad)
mov
sahf
sbb
outs
mov
sahf
sbb
mov
push
adc
sahf
sbb
into
or
test
pusha
pop
adc
adc
iret
mov
push
adc
sbb
popa
mov
mov
push
mov
sahf
sbb
or
and
ror
sbb
popa
mov
mov
push
fcomp
sbb
push
cmp
sbb
sahf
sbb
mov
push
or
mov
adc
sbb
enter
push
mov
sahf
sbb
push
mov
sahf
sbb
clc
mov
push
sbb
sahf
sbb
or
xor
out
rcl
adc
inc
or
xor
into
mov
push
sbb
sahf
sbb
clc
mov
push
adc
sahf
sbb
fidivr
sbb
push
cmp
outs
mov
ficom
sahf
sbb
test
sbb
push
mov
sahf
sbb
repnz
mov
mov
ret
mov
push
sbb
sahf
sbb
or
xor
cdq
and
jle
dec
inc
sbb
push
ror
cmp
fstp
inc
and
push
(bad)
mov
sahf
sbb
(bad)
mov
adc
sbb
or
mov
sahf
sbb
int
cdq
aad
out
and
mov
cmps
and
xor
xor
(bad)
stc
add
xchg
inc
cdq
int3
sbb
and
mov
push
mov
sahf
sbb
or
mov
mov
push
mov
sahf
sbb
cs
or
jl
sbb
sahf
sbb
push
mov
sahf
sbb
into
mov
sahf
sbb
mov
mov
sahf
sbb
shl
fwait
sbb
lock
push
sbb
sahf
sbb
mov
out
xor
(bad)
clc
add
mov
mov
sahf
sbb
jmp
and
ror
or
test
pusha
pop
adc
adc
mov
mov
sahf
sbb
popa
mov
mov
push
mov
sahf
sbb
enter
push
and
sbb
popa
dec
add
adc
cmp
adc
(bad)
fimul
and
xor
sahf
sbb
push
jecxz
sbb
and
cmp
pop
xor
sahf
sbb
adc
or
sbb
sbb
xor
adc
(bad)
mov
sahf
sbb
xor
push
push
mov
fwait
sbb
(bad)
mov
mov
push
mov
sahf
sbb
push
mov
sahf
sbb
aad
adc
mov
push
mov
sahf
sbb
aad
adc
enter
push
mov
sahf
sbb
int
add
and
cmp
mov
sahf
sbb
int3
and
xor
mov
push
sbb
sahf
sbb
pushf
and
or
inc
ror
or
fldenv
pop
cmp
push
adc
sbb
push
mov
sahf
sbb
int3
mov
sahf
sbb
push
cmp
js
mov
sahf
sbb
push
es
sbb
popa
mov
mov
sbb
push
es
sbb
es
add
je
sub
int3
es
ja
sub
sar
cld
jle
sbb
shl
loopne
sub
popf
iret
icebp
push
dec
daa
dec
sbb
and
cmp
sub
test
and
mov
mov
and
jg
push
jp
lahf
inc
xchg
xchg
adc
icebp
mov
and
out
in
cmp
test
ss
cs
jmp
sub
or
out
dec
pop
repz
enter
arpl
push
cmp
or
scas
ds
jp
out
js
xchg
int3
iret
sub
(bad)
adc
jecxz
pop
xchg
(bad)
add
test
cld
neg
sbb
and
arpl
aad
ds
xlat
jne
out
lock
lds
fldenv
adc
in
outs
pop
sub
mov
fild
sub
sbb
inc
ret
sbb
push
stos
clc
jmp
ds
sub
imul
loopne
mov
sub
or
lea
jo
and
int
(bad)
icebp
test
push
ret
lds
(bad)
mov
fcomp
push
fs
(bad)
out
loopne
push
and
es
push
fcom
loop
sub
push
clc
cmps
push
js
add
push
pop
call
cmp
imul
outs
popa
fsubr
outs
dec
fsubr
ret
call
push
jbe
inc
mov
xor
push
(bad)
or
fdivr
pop
pop
shl
sahf
imul
in
add
pusha
aam
ins
lock
aad
mov
pop
ret
jo
(bad)
push
in
nop
test
icebp
mov
inc
ret
je
frstor
pop
mov
je
adc
jp
inc
pop
fdivr
adc
aam
psllw
cmp
mov
std
inc
jbe
std
inc
jbe
std
inc
jbe
lods
inc
jbe
jge
jbe
inc
mov
inc
jbe
test
pop
gs
mov
popa
hlt
inc
outs
loope
jmp
pusha
(bad)
outs
popa
fsubr
outs
(bad)
fsubr
mov
adc
std
ret
ja
push
inc
pop
or
adc
popa
cmp
outs
lock
out
gs
icebp
popa
dec
jno
mov
(bad)
repnz
inc
mul
add
inc
es
popa
jmp
loope
jmp
test
outs
popa
fsubr
outs
in
fsubr
push
dec
fiadd
inc
je
gs
repz
movs
pop
outs
push
fsubr
lods
(bad)
fst
outs
adc
jmp
pusha
(bad)
outs
popa
fsubr
outs
std
fsubr
jecxz
mov
popa
inc
out
outs
mov
fsubr
inc
popa
stos
push
outs
popa
inc
out
outs
lods
fsubr
sbb
fsubr
push
jo
popa
js
outs
popa
fsubr
outs
dec
fsubr
dec
shr
jmp
inc
je
mov
out
ret
popa
hlt
inc
outs
leave
jl
outs
cmc
(bad)
in
pop
dec
mov
pop
mov
imul
outs
(bad)
fsubr
(bad)
(bad)
fsubrp
jecxz
js
outs
popa
fsubr
outs
(bad)
fsubr
(bad)
(bad)
fsubrp
sti
popa
js
outs
popa
fsubr
outs
(bad)
fsubr
(bad)
(bad)
fsubrp
push
popa
js
outs
popa
fsubr
outs
std
fsubr
mov
js
repz
inc
jbe
test
fucomi
lock
inc
mov
scas
sub
jae
imul
lods
inc
cmc
popa
pusha
(bad)
outs
popa
fsubr
outs
popa
fsubr
outs
in
jmp
hlt
inc
outs
popa
fsubr
outs
repz
ds
fild
popa
inc
je
popa
fsubr
outs
(bad)
jmp
xor
(bad)
xor
hlt
dec
mov
popa
mov
je
popa
fsubr
outs
push
fsubr
ud0
jmp
mov
je
popa
fsubr
outs
repnz
cli
popa
pop
call
fsubr
outs
in
fsubr
int
jno
outs
popa
inc
out
outs
loope
jmp
jle
repnz
jl
outs
loope
jmp
jns
cmc
popa
pusha
(bad)
outs
cmps
fsubr
(bad)
popa
fsubr
outs
popa
je
outs
rcr
mov
popa
fsubr
outs
in
jmp
je
pop
in
mov
int
jno
outs
popa
inc
out
outs
popa
fsubr
outs
jmp
jmp
jno
outs
popa
inc
out
outs
jmp
jmp
jmp
popa
inc
out
outs
popa
fsubr
outs
in
fsubr
lock
fdiv
or
inc
jbe
lds
mov
popa
hlt
inc
outs
icebp
fsubr
outs
(bad)
fucomp
hlt
popa
test
outs
(bad)
fsubr
psubd
jmp
inc
jbe
popa
inc
out
outs
popa
fsubr
outs
cmp
jmp
push
(bad)
std
push
repz
inc
jle
loope
out
outs
cli
fsubr
cld
jle
pop
pop
in
inc
jbe
popa
jno
outs
popa
inc
out
outs
jmp
jmp
jg
repz
inc
je
popa
inc
jbe
jns
jmp
fsubr
(bad)
popa
fsubr
outs
leave
je
outs
popa
fucomi
imul
outs
rcr
out
jmp
jmp
jno
retf
(bad)
call
jns
popa
dec
jbe
popa
fsubr
outs
jb
jmp
pop
call
add
or
call
cli
inc
fdivrp
mov
jbe
popa
jno
outs
loope
out
outs
(bad)
fsubr
ret
gs
repnz
jl
outs
popa
fsubr
outs
loope
jmp
js
repz
inc
jbe
popa
fsubr
outs
mov
fldl2e
icebp
push
jo
std
add
popa
xor
inc
out
outs
jns
jmp
adc
movs
inc
jbe
jge
push
icebp
inc
stos
imul
jae
ins
je
popa
dec
jns
popa
fsubr
outs
neg
jmp
pusha
(bad)
outs
popa
fsubr
outs
popa
fsubr
outs
in
jmp
hlt
inc
outs
popa
fsubr
outs
test
fucomi
pop
gs
mov
popa
hlt
inc
outs
movs
fsubr
fld
inc
jno
int
pop
fidiv
push
cli
inc
jno
xchg
push
fidivr
inc
jno
cli
scas
icebp
push
pop
inc
or
dec
fst
ja
cmps
ds
adc
cmp
xchg
jno
out
pop
sbb
lock
mov
and
jg
or
pop
je
stos
or
jmp
out
lock
cmp
and
mov
add
adc
jnp
xor
sub
js
or
into
leave
adc
mov
push
cmp
jne
cmp
ins
lahf
or
and
ins
mov
(bad)
xor
test
adc
inc
inc
cmp
and
loopne
shl
out
sbb
test
ret
jmp
fst
stc
mov
lock
clc
adc
xor
clc
bound
in
xor
ds
dec
icebp
xchg
hlt
imul
mov
loopne
test
icebp
and
movs
in
movs
inc
clc
and
mov
pop
in
jge
imul
cmps
pop
cmp
pop
sbb
stos
dec
aas
fucomip
jge
stos
es
adc
adc
add
cmp
movs
nop
loopne
jns
in
loopne
pop
or
str
xor
call
ds
xor
call
push
sbb
jmp
push
(bad)
and
test
fbld
and
mov
cmps
in
test
add
and
inc
fisub
sbb
fisub
xchg
fcmovu
mov
sbb
and
fcmovu
pop
mov
inc
cmps
adc
jne
test
scas
sbb
fisub
sbb
fisub
call
mov
stos
fcmovu
add
jb
lods
inc
sbb
xchg
retf
into
jp
lods
leave
imul
inc
inc
mov
mov
popf
add
mov
inc
ret
in
push
mov
pop
adc
test
sbb
and
inc
clc
adc
sar
pop
scas
test
jg
jnp
aaa
mov
movs
mov
cld
sar
mov
jnp
xor
cmps
mov
inc
adc
and
cmp
inc
mov
in
adc
xor
xor
repz
int
in
daa
test
jle
mov
icebp
(bad)
jmp
push
movs
dec
mov
out
idiv
movs
scas
jge
std
(bad)
and
hlt
jmp
cmp
adc
fsubr
sbb
aaa
jno
cmp
and
cmp
sbb
in
sbb
ret
retf
mov
fdiv
cmc
popf
fistp
lock
sub
daa
cmp
lahf
aaa
cmp
add
fdivr
jle
lds
jle
adc
add
cmp
jne
std
and
call
push
mov
enter
or
mov
mov
xor
lock
retf
loopne
push
jg
xlat
gs
and
arpl
xchg
inc
xor
ds
sbb
fs
imul
inc
imul
lods
sbb
and
jmp
ficom
or
cli
pop
adc
and
jmp
test
test
pushf
fisubr
jmp
cs
aaa
rol
sub
pop
rol
in
pop
xchg
jb
cmc
jle
adc
inc
add
push
mov
pop
movs
push
push
push
in
jp
(bad)
push
sub
inc
imul
dec
cmp
pop
sbb
pop
or
mov
dec
add
hlt
xchg
cmp
inc
sbb
adc
sub
jo
fdivr
jno
fistp
add
fistp
add
fistp
add
fistp
sub
aas
push
sub
mov
popf
mov
adc
xor
inc
add
mov
aas
sub
fbld
add
mov
cmp
rcr
add
inc
mov
popf
mov
aas
pushf
adc
cmps
dec
das
fbld
popf
mov
aas
lahf
mov
mov
add
mov
mov
pop
add
fistp
mov
mov
popf
mov
cmp
rcr
sahf
stos
and
popf
mov
cmp
rcr
and
fistp
add
ficom
dec
add
cmp
test
sub
popf
mov
mov
popf
mov
inc
inc
dec
jo
pop
rcr
mov
popf
mov
adc
jecxz
aas
test
sub
popf
mov
cmp
mov
mov
add
mov
mov
popf
mov
mov
pop
sub
mov
popf
mov
rcr
inc
mov
popf
mov
fstp
inc
pop
mov
add
mov
mov
fwait
mov
mov
std
mov
mov
popf
mov
fcomp
shl
inc
pop
inc
mov
popf
mov
pop
sahf
xor
cmp
xchg
aas
sub
inc
mov
popf
mov
adc
sub
aas
test
sub
popf
mov
test
or
nop
dec
das
and
stc
out
inc
sti
popf
mov
inc
sahf
mov
jg
push
fistp
push
sub
mov
popf
mov
mov
popf
mov
mov
add
mov
mov
add
mov
cmps
fwait
mov
mov
popf
mov
push
popf
mov
daa
pushf
je
push
dec
das
cmps
aas
lds
jb
cmp
outs
add
aas
add
cld
sar
cmp
inc
inc
mov
popf
mov
cmps
popf
mov
jmp
js
outs
jle
cld
jg
mov
aas
and
mov
(bad)
mov
xor
mov
adc
mov
aas
movs
aaa
fst
dec
das
sar
mov
adc
mov
cmp
mov
mov
popf
mov
mov
popf
mov
jg
sub
aas
sub
nop
add
cmp
jns
inc
mov
popf
mov
mov
popf
mov
imul
aam
push
js
mov
movs
aad
imul
jo
add
fst
stos
jmp
cmps
out
frstor
popf
mov
xlat
popf
mov
aas
pushf
adc
cmps
dec
das
fbld
popf
mov
cld
cwde
mov
mov
popf
mov
sbb
fistp
add
fbld
add
mov
fstp
pushf
sar
sbb
stos
mov
add
mov
je
mov
test
les
aas
sbb
mov
add
mov
cmp
dec
fs
neg
fs
sbb
fbld
popf
mov
rcr
mov
jmp
fs
neg
fs
and
fbld
popf
mov
mov
popf
mov
movs
outs
les
xlat
xor
jae
adc
frstor
popf
mov
cmp
loopne
mov
add
mov
inc
fwait
je
rcr
and
cmp
leave
gs
or
frstor
popf
mov
pop
cdq
xor
rcr
and
shl
xchg
push
(bad)
xlat
xchg
add
icebp
pop
les
frstor
add
mov
arpl
mov
das
ins
xor
adc
out
test
fbld
popf
mov
jb
mov
xchg
push
(bad)
(bad)
xchg
add
icebp
scas
movs
adc
cmps
dec
das
fbld
popf
mov
(bad)
sahf
mov
pop
lods
xor
adc
out
test
fbld
popf
mov
mov
mov
cmp
push
jg
add
inc
mov
popf
mov
sub
mov
or
popf
mov
aad
inc
jmp
mov
aas
pushf
mov
mov
popf
mov
sbb
iret
(bad)
aas
and
sub
aas
add
shl
add
mov
aas
pop
jg
sbb
sub
dec
add
pop
jge
inc
push
rol
and
popf
mov
mov
popf
mov
mov
popf
mov
mov
popf
mov
stos
call
mov
popf
mov
rcr
mov
cmp
das
ffreep
inc
sub
nop
push
js
cmp
fstp
and
les
mov
popf
mov
rcr
mov
jl
gs
cmp
push
scas
je
inc
mov
popf
mov
mov
and
mov
cmp
and
inc
add
mov
mov
popf
mov
cmp
test
add
mov
aas
popf
mov
mov
add
mov
cmp
push
scas
jb
inc
pop
inc
mov
popf
mov
aas
popf
mov
aaa
cwde
adc
inc
inc
das
fsubr
pop
sbb
fnstsw
inc
das
fwait
cmps
sub
jg
mov
and
out
popf
add
gs
arpl
enter
push
jl
je
ret
jnp
push
mov
mov
mov
sti
jmp
bound
jnp
aaa
mov
mov
xor
sbb
and
mov
and
mov
push
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
sbb
push
cmp
(bad)
cmp
and
test
out
test
sbb
push
cmp
(bad)
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
cmp
and
test
out
test
out
test
out
test
out
test
mov
test
out
clc
cmp
mov
cmp
and
test
out
and
test
out
test
out
test
out
test
out
test
out
test
out
test
dec
and
test
out
jp
ror
mov
aas
out
in
cmps
add
lock
dec
outs
dec
sbb
jg
bound
dec
jb
mov
aaa
aad
cmp
sub
xor
hlt
cmps
call
enter
mov
mov
ret
bound
push
out
mov
call
cmp
cld
test
add
movs
bnd
xlat
loop
lds
fisub
cmp
dec
cld
(bad)
in
dec
mov
imul
hlt
dec
lock
mov
loopne
xchg
movs
sbb
adc
jmp
fcom
or
out
leave
or
in
fs
sub
cmp
and
fs
outs
(bad)
sbb
pushf
(bad)
stos
mov
sub
lock
and
clc
xchg
je
push
aam
jmp
ja
adc
mov
loop
aaa
or
frstor
mov
pop
stc
lock
pop
and
fist
rcr
lock
pop
shl
push
ret
retf
in
mov
inc
int
jo
mov
mov
aas
call
xchg
out
fidivr
ds
inc
xor
daa
dec
ret
cmp
push
push
movs
inc
and
jnp
xor
or
in
cli
add
cdq
lock
sub
aad
lahf
std
mov
movs
mov
xchg
mov
jg
xchg
js
dec
ds
mov
mov
xchg
mov
loop
loopne
mov
push
movs
mov
xchg
mov
adc
xchg
and
push
shl
xchg
add
xchg
mov
cs
lea
mov
xchg
mov
mov
xchg
mov
sar
scas
shl
xchg
add
sbb
sti
add
xchg
cmp
and
mov
sahf
xchg
cmp
data16
mov
arpl
mov
mov
add
ds
test
xor
out
and
pop
pop
sar
jecxz
xor
jmp
mov
stos
jnp
out
xor
and
jmp
sub
or
sub
rcr
(bad)
fcom
jl
in
retf
out
jle
repnz
mov
and
jp
sbb
add
arpl
mov
jle
fdiv
call
jne
and
cdq
mov
stos
lods
ret
or
push
test
mov
js
cmp
and
cmp
in
and
imul
cdq
cld
mov
pop
mov
push
adc
fs
adc
neg
lock
in
idiv
lods
ins
push
gs
icebp
fnstsw
sub
mul
push
out
loop
inc
cmps
mov
jg
fstp
mov
sbb
push
ret
cmps
loop
sbb
nop
popa
fwait
jecxz
ins
push
mov
cmp
xor
scas
lock
ds
sbb
repnz
icebp
fcom
arpl
sub
xor
bound
or
jmp
push
retf
pop
(bad)
mov
or
in
mov
jmp
in
jg
in
mov
jmp
in
xchg
jmp
in
popa
jmp
sti
and
jmp
in
mov
jmp
jp
mov
in
in
ds
mov
inc
xchg
in
in
aas
jmp
loope
mov
jmp
in
jno
in
mov
jmp
in
out
jmp
and
and
jmp
in
mov
jmp
or
mov
inc
pop
out
and
aaa
in
shr
loope
mov
jmp
in
popa
jmp
in
mov
loope
and
xchg
in
in
aas
jmp
jnp
mov
retf
cmp
jb
ja
xor
jnp
aas
jb
scas
xchg
xchg
clc
inc
inc
cmps
inc
and
popa
push
push
and
jnp
ds
cmp
(bad)
and
inc
out
scas
cmp
add
(bad)
in
loop
cld
(bad)
stc
int
or
mov
daa
out
add
sbb
xor
aaa
mov
test
scas
push
loopne
clc
stc
frstor
and
jmp
in
add
sbb
(bad)
mov
sbb
cmp
xor
jle
scas
jl
cmp
stos
mov
out
jne
xor
ds
aas
(bad)
popa
cmp
and
daa
sar
rol
cmp
jmp
lods
gs
loope
arpl
repnz
shl
xor
push
ret
add
push
out
mov
jb
test
mov
cmp
neg
push
mov
push
fst
cmp
lock
sub
out
repnz
mov
loop
imul
and
jo
gs
sbb
test
(bad)
call
push
imul
push
push
bound
test
clc
sbb
xor
cmps
(bad)
or
mov
dec
jnp
cmp
daa
cmp
add
mov
sti
pop
adc
and
mov
push
aas
or
sub
aas
fidiv
aas
xor
xor
xchg
popa
push
and
shr
out
sbb
xchg
(bad)
jmp
arpl
push
mov
mov
jecxz
sbb
imul
pop
xchg
mov
jnp
test
and
mov
xor
jnp
xor
cmc
mov
test
inc
mov
xor
inc
fs
and
cmp
mov
cld
sub
cmp
scas
cli
add
retf
jae
sub
out
or
ds
dec
shl
mov
call
cmp
xor
xlat
push
xor
hlt
adc
stos
cdq
(bad)
dec
mov
in
ins
xlat
or
arpl
hlt
lods
or
std
mov
in
mov
mov
mov
out
mov
and
arpl
sub
xor
xchg
stos
jl
in
cmp
and
cld
xor
stos
ret
pop
fcom
or
shl
aaa
jnp
cmp
and
jno
jp
jae
push
retf
jp
xchg
sbb
inc
sbb
outs
mov
fnsave
cmc
sub
xlat
adc
cs
fcom
sti
dec
and
(bad)
in
(bad)
lahf
nop
lock
in
clc
mov
jno
mov
repnz
push
jge
dec
rcr
arpl
cmp
stc
jb
jbe
out
adc
jne
(bad)
xor
jg
xchg
jns
push
or
mov
add
sbb
enter
jnp
jo
and
inc
cli
push
mov
jns
sbb
(bad)
mov
push
je
mov
add
loop
enter
cli
div
add
call
adc
fwait
ss
les
div
fxch
or
sbb
cmc
in
je
cmp
movs
mov
adc
mov
mov
arpl
add
xor
enter
add
in
add
add
mov
cmp
inc
add
test
push
sahf
mov
fld
mov
cmp
cmp
inc
(bad)
cmp
push
jmp
inc
push
test
sbb
int
repnz
mov
jnp
dec
mov
stos
jnp
cmp
gs
cmp
ja
lock
out
clc
cmp
and
pop
and
inc
cld
(bad)
and
cmp
lods
mov
xor
mov
cs
jmp
adc
mov
mov
push
mov
ja
test
clc
loopne
adc
stc
mov
imul
or
cmps
cmc
int
sbb
or
enter
jae
fcom
sbb
test
inc
ficom
aaa
bnd
cmp
div
mov
stos
into
add
movs
loop
sub
test
out
mov
int3
aaa
jle
ds
scas
mov
repnz
cmp
ins
fild
sbb
pop
fs
stos
cmp
in
dec
jo
and
or
fwait
sub
jl
(bad)
cmp
mov
shl
(bad)
fcomp
or
lods
mov
(bad)
cli
lds
jmp
xchg
js
ret
mov
cmp
fs
mov
shl
jp
push
clc
push
rol
xor
push
and
cmp
leave
lock
movs
retf
xchg
adc
pushf
xchg
cmps
(bad)
scas
aas
sbb
mov
mov
invd
(bad)
mov
shl
jo
fnsave
fcmovne
icebp
test
push
dec
cmp
movs
mov
dec
rcr
stos
cdq
clc
xor
mov
xor
and
adc
sbb
jmp
clc
je
push
clc
je
push
cld
je
jnp
jo
push
inc
stos
push
sti
dec
je
xchg
clc
fst
push
jl
test
(bad)
cmp
clc
movs
sub
je
push
sti
je
sub
clc
jmp
push
push
xor
pusha
retf
mov
mov
sti
je
or
xor
je
mov
add
push
cmp
clc
je
push
clc
je
push
clc
or
xchg
clc
je
push
clc
je
push
clc
adc
call
mov
je
xor
je
push
clc
sub
xor
aas
int
jmp
push
test
ja
arpl
cs
rol
arpl
xlat
adc
xor
push
mov
rcr
push
int
inc
mov
adc
mov
test
inc
cmps
ds
into
scas
cmp
gs
mov
and
cmp
dec
(bad)
call
call
rcr
icebp
jo
ja
aas
jb
cmp
and
shl
sub
inc
cmp
ret
push
sub
adc
loopne
or
imul
xchg
ins
lods
out
jl
loopne
or
xor
pop
shl
push
ret
cmp
push
loopne
ja
aas
push
inc
cmp
and
cmp
ins
das
popa
sub
pop
fs
and
or
jb
mov
aas
sti
jge
sub
lock
jmp
cld
ds
cmp
and
push
aaa
sub
inc
ror
jns
in
cmp
lea
sub
jmp
cmp
aaa
out
inc
ret
pop
data16
jge
lahf
mov
loop
or
mov
dec
jae
clc
push
mov
stos
fst
test
(bad)
fistp
retf
pop
pop
push
sbb
cmp
cmp
jg
mov
cld
lds
jecxz
pop
or
frstor
clc
es
dec
fist
jnp
cmp
pop
sbb
mov
sti
gs
inc
fldcw
imul
fist
lea
mov
xchg
add
jb
add
lea
mov
jb
jb
out
sub
mov
bound
cmps
aas
popa
inc
push
adc
add
mov
loopne
cmp
clc
pop
jle
pop
(bad)
mov
cwde
in
cmp
or
ret
leave
xchg
into
addr16
jle
popf
in
ret
mov
movs
inc
and
jnp
cmp
cmp
dec
movs
jnp
test
jnp
xor
mov
xor
cmps
mov
test
mov
sbb
sub
daa
stos
inc
out
test
adc
jp
xor
push
stos
jb
mov
sub
jnp
ss
pop
and
cmp
xor
call
or
cmp
(bad)
adc
and
aam
into
stos
pushf
pop
inc
inc
icebp
loop
adc
xor
out
aas
daa
test
adc
cli
xchg
loope
mov
and
cmp
ins
push
or
mov
repnz
(bad)
fwait
jle
cmp
es
fist
int
stos
jmp
lods
mov
mov
xchg
lock
or
repz
lahf
fs
and
mov
(bad)
lock
out
rcr
jo
ins
mov
cli
ds
out
cmc
cmp
ins
inc
test
js
mov
cmp
sbb
push
pop
stos
cmp
and
js
aas
sbb
add
mov
add
jge
cmp
in
cmps
sub
aaa
repnz
fs
cvtpi2ps
pop
ds
lahf
test
adc
ins
cmp
fdiv
xor
add
std
rol
jmp
ficom
sbb
push
xor
cmp
in
cmp
imul
push
stc
cmp
in
test
pop
add
fcmovu
shr
fild
imul
add
(bad)
fcomp
sahf
imul
add
fcmovu
test
jnp
pushf
scas
push
dec
xchg
imul
imul
imul
add
fcmovu
shl
fcmovu
pushf
imul
add
fild
imul
add
(bad)
imul
add
fild
jmp
fild
fs
xor
xchg
outs
jle
pushf
imul
lock
ror
fimul
(bad)
clc
inc
inc
fsubr
mov
add
fcmovu
or
fild
not
xchg
imul
imul
imul
add
fcmovu
lds
sbb
imul
add
fcmovu
test
fistp
popf
fld
push
movs
div
fcomp
inc
fild
imul
add
(bad)
fstp
sub
test
inc
out
add
test
outs
fcmovu
push
imul
add
fild
stos
fcmovu
add
or
add
fild
imul
add
fcmovu
jb
push
pop
popf
adc
leave
jg
imul
imul
add
fcmovu
shr
add
fadd
stos
fcmovu
add
fcmovu
test
inc
out
mov
sub
(bad)
inc
jle
jle
pushf
imul
stos
fcmovu
add
fild
imul
outs
fcmovu
(bad)
imul
add
fild
retf
fcmovu
add
fcomp
data16
inc
outs
adc
inc
aas
pushf
mov
xchg
lock
xlat
arpl
mov
inc
shl
sbb
mov
mov
js
xor
jnp
test
or
hlt
cmp
cmp
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
and
pop
in
int3
ins
retf
and
mov
push
jnp
jmp
mov
xor
in
xor
mov
lds
jnp
call
mov
jo
xor
js
xor
jnp
push
mov
in
mov
sbb
mul
jnp
xor
idiv
in
mov
jnp
xor
dec
mov
stos
or
jnp
xor
cmc
mov
test
add
cmp
gs
jnp
push
jnp
aaa
mov
out
xor
jmp
xchg
jg
push
ds
cdq
mov
sbb
xor
xor
in
cmps
fist
sbb
mov
mov
clc
ds
jg
ins
jmp
ret
jnp
push
mov
sbb
and
mov
push
mov
in
in
push
xor
mov
xor
xor
mov
test
push
popf
jecxz
jae
cmp
add
adc
mov
xor
mov
dec
ins
cmp
inc
lods
mov
loop
test
adc
mov
xor
pop
adc
pop
cmp
mov
mov
sbb
lods
or
stos
cmp
lods
add
push
ins
sbb
pushf
in
(bad)
repnz
ficom
sbb
push
retw
cld
loop
jae
fincstp
and
push
aaa
out
inc
cmp
mov
inc
pop
pop
es
pavgw
std
ds
mov
in
imul
call
loope
loop
loop
adc
inc
xor
lock
arpl
sbb
loopne
xchg
loope
in
in
scas
and
ret
punpckhdq
idiv
fs
mov
arpl
sti
imul
lock
ss
loop
sbb
jl
sti
add
cmp
rol
fcom
stos
mov
and
add
je
push
test
cli
ficom
out
icebp
xor
in
f2xm1
and
aaa
add
jmp
add
pop
jg
lahf
or
mov
dec
mov
test
and
pop
loop
cmps
pop
loop
and
sbb
pop
rcr
pop
out
jle
mov
sar
mov
push
jle
mov
ror
mov
pop
push
ret
mov
pop
ds
mov
stos
aaa
xchg
outs
push
into
mov
jbe
inc
push
(bad)
jmp
mov
jbe
das
mov
test
ds
sub
push
pop
jmp
mov
xlat
push
pop
test
scas
mul
dec
push
jle
aas
out
pop
inc
(bad)
sahf
pop
call
inc
es
enter
mov
inc
cmps
pop
out
and
sbb
pop
rcr
pop
out
jle
mov
shl
mov
jle
mov
sar
shl
and
dec
frstor
ins
jle
mov
sar
shl
xchg
jle
and
jle
mov
shl
mov
pop
jle
mov
shl
mov
lock
cs
loop
and
mov
sar
add
test
nop
add
sbb
(bad)
mov
jle
mov
shl
mov
jle
mov
scas
and
dec
lock
repnz
pop
mov
fchs
je
fnstcw
sar
shl
fmul
fnstcw
rcl
lea
loopne
cmps
pop
bound
pop
retf
lahf
jle
mov
shl
push
loope
and
(bad)
les
mov
rol
pop
inc
inc
sbb
(bad)
mov
jle
mov
jb
int
pop
call
jne
inc
sub
jmp
jne
pop
sub
inc
leave
mov
jb
ret
sbb
das
(bad)
lods
retf
out
cmps
and
gs
jnp
call
mov
addr16
test
jnp
pop
movs
jnp
stos
mov
scas
push
shl
cmps
ds
push
mov
xor
add
lock
shr
cdq
dec
fsubr
cmp
push
mov
ret
mov
add
ins
lods
popa
mov
lea
jnp
js
cmp
dec
fndisi(8087
or
dec
jle
cmp
cwde
retf
jne
pop
test
lods
jecxz
xchg
add
fucom
mov
jecxz
lods
mov
and
jae
mov
cmp
and
push
mov
(bad)
mov
and
stos
into
sbb
dec
ret
stos
ficom
cmps
jp
jmp
cwde
sub
cdq
and
mov
lock
jmp
xchg
sbb
repnz
pop
in
test
repnz
out
mov
es
lea
and
jp
icebp
sub
jo
mov
or
ja
xchg
ds
push
mov
mov
mul
or
fdiv
mov
adc
cmp
jb
ret
(bad)
push
sbb
ds
mov
mov
cwde
sbb
or
cli
pop
cmp
jo
movs
shl
and
or
xchg
adc
xchg
shl
xchg
rol
and
(bad)
adc
ret
shr
and
jecxz
call
add
and
push
dec
aam
call
nop
(bad)
dec
jo
push
shl
xchg
shl
xchg
ror
es
(bad)
jmp
xor
jo
push
rcl
and
dec
inc
inc
sub
out
adc
xor
inc
mov
sar
xchg
or
xchg
mov
push
icebp
shl
xchg
shl
es
shl
or
jo
xchg
rol
es
jo
and
dec
jo
push
shl
xchg
rcl
mov
dec
fnstsw
jbe
jo
xchg
shl
jno
and
or
jo
xchg
shl
xchg
outs
jo
and
jo
xchg
shr
and
mov
cli
xchg
rol
es
xor
adc
je
gs
in
mov
mov
jo
dec
rcl
and
dec
jo
jno
jo
xchg
rcr
es
push
or
push
mov
lods
shr
std
adc
ret
out
sbb
outs
jmp
jae
jo
dec
shl
xchg
shl
xchg
shl
xchg
mov
jo
xchg
shl
es
add
adc
out
(bad)
mov
aas
adc
in
shl
xchg
shl
xchg
shl
es
pop
into
cmps
cmp
mov
mov
mov
jo
xchg
shl
es
shr
es
int
ror
dec
cli
cmp
int
aad
aam
mov
xchg
mov
or
mov
mov
or
cli
or
(bad)
mov
push
addr16
mov
pop
cmps
mov
or
dec
cld
mov
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
loope
sbb
cli
push
inc
in
push
les
push
inc
in
movs
xchg
mov
inc
in
mov
push
dec
lods
mov
push
jl
stos
cs
test
inc
in
mov
dec
in
mov
push
dec
fdivr
cs
test
sub
push
pop
in
mov
dec
adc
mov
in
cmp
and
adc
enter
retf
dec
pop
mov
(bad)
mov
push
pop
jmp
mov
and
ja
mov
in
cmp
mov
data16
in
sbb
sbb
mov
hlt
cwde
mov
pop
mov
push
add
repnz
and
sub
mov
aam
aas
or
test
adc
fisub
adc
(bad)
cld
or
dec
clc
loop
gs
mov
cmp
inc
or
out
ins
aas
into
sar
inc
stos
xor
cmp
mov
dec
and
mov
cmp
xlat
pop
or
sbb
ror
xor
pop
cmp
wbinvd
xchg
push
mul
out
jmp
outs
dec
movs
xchg
and
push
popf
mov
aam
cmp
adc
dec
stos
rcr
cmp
mov
jle
xor
xor
xchg
das
adc
and
fwait
outs
fild
and
push
popf
dec
push
mov
dec
(bad)
lods
ror
ret
and
out
dec
ins
pop
add
(bad)
aas
in
jmp
ret
outs
retf
pop
pop
jns
jl
lahf
or
aad
fisttp
aam
fild
cmc
scas
push
push
lock
fiadd
jae
inc
cmp
mov
push
push
cmc
test
or
repnz
int3
adc
mov
inc
add
pop
xor
mov
test
and
inc
jecxz
je
stos
inc
je
fmulp
pop
hlt
xchg
hlt
leave
stc
inc
clc
add
popa
clc
ds
xchg
pop
xchg
mov
lock
ds
cmp
cmp
inc
xchg
fistp
cdq
push
jmp
sub
dec
inc
push
cmc
sti
fsubr
es
dec
sbb
inc
pop
add
sub
lock
mov
test
xor
lods
xor
jmp
(bad)
in
sbb
daa
out
retf
lea
and
cmp
mul
bound
outs
stos
ret
stc
sbb
(bad)
jge
cmp
sub
cdq
and
aaa
xchg
mov
fsubr
or
dec
stos
sar
stc
cmp
cmp
inc
movs
push
aam
xchg
pop
xor
(bad)
mov
movs
inc
and
mov
mov
and
mov
xor
sub
loope
scas
rcl
mov
xchg
and
sub
mov
shl
aaa
or
push
and
ss
shr
arpl
adc
(bad)
jnp
xchg
sar
pop
sub
mov
rcr
push
clc
ss
xchg
shl
push
fstp
rol
lds
pop
inc
push
xchg
cmp
sub
inc
sub
dec
daa
lds
inc
push
xor
les
dec
xchg
sub
xor
sub
bound
test
dec
mov
xchg
call
fcom
or
out
aad
lahf
pop
cmp
pop
pop
xchg
(bad)
add
adc
xchg
adc
pop
loopne
mov
in
aas
or
test
or
add
mov
mov
xor
lock
mov
mov
jae
pop
retf
cmc
retf
outs
int3
jge
retf
in
scas
ficomp
hlt
leave
stc
inc
mov
popa
sar
xor
pop
mov
pushf
out
pop
jecxz
jp
aaa
sti
and
dec
in
xchg
mov
movs
jmp
call
pop
int
mov
je
mov
mov
cs
(bad)
sbb
sbb
out
gs
es
movs
push
into
mov
in
in
and
or
add
push
xchg
dec
adc
inc
outs
sub
sar
push
xchg
sbb
xchg
cmp
mov
call
and
pop
mov
ja
dec
movs
ror
ret
and
lods
inc
aas
dec
aam
or
jmp
pushf
mov
popf
pop
out
ret
leave
adc
fst
enter
sub
in
inc
dec
sbb
jns
addr16
popw
xor
and
scas
adc
in
jl
dec
in
or
sar
mov
adc
in
cld
adc
les
push
push
in
call
cld
mov
es
ins
mov
cld
in
xor
fwait
in
xor
inc
pop
cli
push
pop
jae
es
push
test
xor
fadd
jmp
cmps
xlat
xor
or
jg
(bad)
cmp
loope
sbb
jecxz
jns
push
popa
daa
fiadd
(bad)
pop
jo
imul
push
sub
rcr
or
idiv
jns
test
adc
mov
cmp
mov
mov
bound
push
mov
mov
js
fisub
bound
psrld
adc
fdiv
fwait
dec
rcl
mov
popa
sub
lods
lods
inc
inc
adc
jg
call
xor
adc
fidiv
imul
add
cdq
out
jmp
outs
xchg
scas
int
in
in
ret
mov
and
xor
mov
lock
mov
or
les
mov
leave
mov
arpl
loope
or
lea
and
xchg
jecxz
nop
sub
pop
pop
mov
dec
call
nop
push
js
aad
add
xlat
rcl
jp
iret
jb
jecxz
and
cwde
sbb
xchg
dec
cmc
test
out
cli
je
imul
cmc
mov
sbb
out
fistp
pop
sub
fistp
cli
or
aad
xchg
inc
dec
mov
shl
out
sbb
fst
neg
sub
sbb
cdq
in
add
pop
inc
movs
(bad)
pushf
std
push
(bad)
ds
lahf
cmp
movs
inc
pop
dec
adc
cld
scas
std
ret
nop
pushf
jp
pop
push
loop
cmp
cdq
std
fild
xchg
js
sub
sub
ins
repnz
(bad)
push
pop
pop
jnp
js
addr16
mov
push
pop
sub
ror
mov
ss
mov
lahf
aam
xchg
jmp
dec
lods
pop
xchg
push
ins
in
cli
cs
cld
mov
push
ins
jne
push
int3
in
xchg
sahf
lds
scas
pop
loope
scas
(bad)
pusha
mov
(bad)
arpl
pop
adc
pushf
or
push
inc
fsub
xchg
int3
xchg
inc
xchg
scas
jp
xchg
jnp
adc
pusha
test
rcr
gs
aas
(bad)
pop
loope
cmp
dec
cmp
inc
push
mov
movs
adc
icebp
(bad)
jns
and
lahf
or
adc
scas
push
scas
and
inc
scas
mov
push
fwait
int
test
sbb
sbb
sub
rcl
and
(bad)
fdiv
push
cmps
sub
out
mov
outs
push
pop
cmp
cli
cmps
push
mov
(bad)
or
dec
xor
cmp
inc
ins
call
pusha
add
jnp
adc
cwde
cmp
lahf
dec
int3
test
xor
jns
lds
or
lock
xor
add
fsub
inc
cli
je
fist
mov
arpl
add
sub
es
pop
jae
popf
add
out
lea
and
scas
inc
push
loop
les
popf
push
test
adc
cmp
sbb
fst
sbb
sbb
push
and
push
sbb
sbb
imul
mov
pop
mov
inc
mov
in
dec
push
mov
loopne
lahf
lods
js
mov
mov
xchg
imul
cdq
adc
and
out
test
dec
and
stos
add
out
xchg
sbb
cmp
aaa
mov
call
jbe
ret
mov
into
xor
dec
pop
sbb
xlat
push
lea
xor
pop
dec
pop
jmp
add
adc
mov
fsub
adc
ins
inc
add
adc
mov
fsub
popf
cmps
fdivr
std
gs
out
push
fld
pop
shl
jecxz
push
(bad)
mov
mulps
(bad)
fwait
lea
fmul
repz
out
test
mov
sar
adc
inc
mov
mov
dec
xchg
pshufw
dec
test
int3
mov
data16
pop
xchg
xchg
idiv
jne
cmp
push
call
outs
aas
cmp
pop
sbb
xchg
es
cmps
pop
mov
mov
ret
mov
mov
push
inc
in
call
fisubr
or
daa
(bad)
into
stos
jmp
sahf
call
in
xchg
sti
push
pop
xor
cdq
out
adc
sbb
fucomip
dec
pop
int
xchg
mov
pop
into
aas
sbb
pop
jo
inc
pop
cli
ret
cmp
data16
cmp
out
popf
cmps
cwde
loope
mov
add
(bad)
mov
ds
out
outs
add
adc
jg
xor
ret
xchg
mov
add
icebp
std
add
cli
dec
aam
jbe
dec
jae
icebp
ins
cmps
int3
mov
jmp
jb
push
push
dec
arpl
xlat
mov
jno
jge
es
mov
push
sbb
in
(bad)
xor
sub
out
cwde
mov
loop
jge
mov
loope
out
xor
mov
dec
xlat
push
hlt
test
mov
dec
sub
retf
cmps
mov
add
sbb
bound
imul
pusha
mov
add
(bad)
ss
in
push
inc
in
stos
push
dec
in
push
dec
int3
mov
push
int
xor
pop
adc
push
out
in
add
adc
or
push
cmp
mov
cli
jae
popa
cwde
cli
(bad)
dec
nop
inc
push
mov
mov
addr16
je
clc
xchg
cli
sub
nop
adc
sbb
pop
xchg
adc
mov
xor
outs
aam
ds
js
in
ror
in
arpl
mov
enter
lods
nop
daa
mov
repz
pop
lahf
inc
bound
jg
dec
call
cvtdq2ps
push
arpl
jecxz
popa
sbb
jmp
xchg
inc
or
dec
leave
pop
sub
xchg
sbb
inc
imul
push
pop
arpl
outs
xchg
ins
cld
fstp
inc
xchg
in
icebp
stos
pop
mov
add
movsx
xchg
or
or
mov
sub
lea
xor
cld
out
imul
add
fild
mov
sbb
inc
dec
jle
add
xchg
ret
lock
adc
lods
lods
jge
mov
das
inc
iret
xchg
push
sahf
xchg
test
jbe
pop
ds
and
inc
stos
mov
shl
test
in
stos
fstp
fisttp
or
mov
popf
mov
bound
inc
xchg
ds
jg
and
(bad)
idiv
jg
jmpw
outs
push
daa
scas
push
inc
mul
mov
add
sub
lods
push
dec
ja
sbb
int
sbb
fldcw
xor
jmp
mov
xor
push
xchg
sbb
mov
pop
ret
mov
fstp
xchg
icebp
jnp
dec
jecxz
push
xchg
in
retf
cmp
retf
push
adc
sbb
iret
sub
add
mov
inc
test
dec
mov
inc
sbb
adc
adc
xor
ror
clc
fidiv
int3
mov
push
jl
jmp
int3
mov
push
inc
xor
fidivr
test
mov
test
pop
push
arpl
add
cwde
pop
push
adc
scas
or
push
jl
mov
cli
xchg
mov
cld
shl
iret
xor
push
push
xchg
mov
mov
inc
test
out
and
fisub
or
xor
xchg
mov
jnp
and
hlt
enter
xchg
sbb
push
jmp
fdiv
push
mov
xchg
sub
push
jo
push
cmp
xchg
sbb
stc
in
pop
xchg
fsubr
cmps
cmp
call
cmp
jns
push
pushf
cmps
cmp
cmps
ret
and
ja
ins
movs
mov
das
js
fst
mov
sti
movs
test
(bad)
or
pop
jbe
mov
adc
mov
sub
fstp
sub
xchg
neg
mov
or
sub
mov
adc
and
scas
in
retf
jl
arpl
fmul
repz
test
mov
adc
rcr
dec
dec
inc
je
mov
mov
or
outs
sub
ret
lea
mov
ins
addr16
js
pop
loope
xchg
inc
nop
sub
fldenv
sub
aaa
jmp
mov
add
out
test
call
inc
xor
sbb
mov
cmp
mov
cwde
jb
sub
fdiv
jecxz
add
in
pop
inc
jp
push
sub
xor
mov
mov
or
mov
mov
mov
js
ror
repz
sahf
rcr
inc
test
push
sub
and
pop
xchg
xchg
sub
mov
and
mov
add
gs
scas
cmp
mov
cmps
and
jb
mov
pushf
aas
add
or
cwde
neg
cmps
sub
call
cli
dec
scas
push
cmc
pop
inc
repz
popa
mov
mov
int3
je
xor
push
mov
push
mul
lea
ror
sub
dec
cmp
push
adc
xchg
xor
les
add
cmp
add
mov
xchg
xchg
push
sub
add
jp
daa
cli
das
test
push
pusha
push
mov
(bad)
dec
nop
dec
xchg
xchg
add
xor
lahf
inc
scas
and
(bad)
adc
call
into
test
mov
dec
add
cmps
stos
mov
fmul
jmp
mov
(bad)
aam
ss
mov
imul
jg
outs
shr
or
std
(bad)
loopne
ins
pop
cld
fist
inc
hlt
push
hlt
mov
neg
rol
xchg
ja
jp
rcl
and
inc
bound
imul
aaa
xor
dec
cmp
dec
mov
sbb
mov
lods
sub
imul
leave
fiadd
lock
sub
stos
sub
daa
icebp
imul
mov
mov
adc
inc
out
and
sbb
inc
sub
dec
fs
out
fadd
mov
fsubr
jbe
cmps
(bad)
adc
loopne
and
jne
jp
fxch
frstor
mov
inc
xchg
test
jg
xor
sub
push
stos
and
pop
cmps
sub
les
out
cld
adc
jne
mov
mov
int
mov
push
dec
in
mov
push
dec
ins
mov
push
(bad)
addr16
push
inc
loop
add
mov
icebp
inc
xchg
cli
push
inc
jmp
div
xchg
add
mov
out
(bad)
xor
xchg
ins
arpl
xchg
sar
or
mov
adc
dec
push
fist
push
pushf
cmp
xchg
pop
mov
jg
sub
mov
push
ds
mov
mov
jno
jmp
xor
jns
inc
fld
sti
push
mov
iret
jmp
shl
ret
inc
(bad)
test
call
(bad)
bound
jg
(bad)
xor
pushf
aam
jge
dec
xchg
clc
std
div
push
je
imul
jg
rcr
sbb
dec
(bad)
retf
iret
mov
shl
lods
jns
pusha
int3
pop
cmps
dec
pop
xchg
icebp
gs
sbb
icebp
xchg
inc
or
sub
das
dec
mov
ficomp
xchg
sahf
or
mov
movs
sub
int3
ficom
xchg
aaa
dec
inc
push
fdivr
loopne
sub
xor
xlat
ins
(bad)
fimul
push
outs
lds
popf
mov
and
call
mov
jmp
(bad)
das
popa
mov
popa
xor
inc
push
out
imul
pop
jbe
mov
dec
jae
or
add
in
cmp
gs
or
pop
dec
movs
scas
xor
xchg
pop
push
cli
std
inc
cs
dec
std
mov
xor
jp
pop
and
mov
fwait
cmc
in
or
rcr
movs
xchg
or
retf
mov
movs
pmaxsw
fs
dec
xchg
mov
add
ret
cmp
shl
dec
inc
mov
xchg
lock
jnp
ret
add
loope
push
jne
leave
add
xchg
push
loope
mov
lds
sbb
push
and
add
into
dec
ret
ds
mov
cdq
out
sar
inc
gs
push
stos
mov
jb
and
cs
(bad)
push
fiadd
es
ret
mov
xor
in
jnp
mov
pop
ins
loop
jno
xor
stos
repz
movs
sbb
and
xlat
sub
cli
add
jno
sbb
(bad)
push
push
cmp
dec
jmp
fsubr
mov
in
push
inc
scas
cwde
push
mov
or
ds
and
inc
pop
jae
jno
xchg
add
adc
(bad)
ds
retf
xor
jg
xchg
in
in
cmc
adc
mov
lods
call
shl
inc
call
call
ins
mov
leave
adc
sar
xor
and
mov
jl
push
hlt
mov
push
dec
out
mov
inc
dec
pop
mov
push
xor
push
fimul
push
dec
into
mov
retf
repnz
je
mov
jae
test
or
and
push
inc
jmp
scas
out
scas
ss
push
mov
ins
jmp
push
or
add
mov
daa
test
pop
pop
movnti
fisttp
fidivr
pop
cwde
mov
pop
push
rcr
jl
push
adc
xchg
lahf
sar
repz
jp
inc
imul
loop
test
mov
jno
inc
sti
out
inc
jle
dec
lea
scas
aas
sub
add
push
call
dec
shl
cmps
nop
and
sub
in
push
or
cmps
(bad)
aas
sub
dec
pop
adc
ret
cwde
fst
or
xchg
aam
cld
cmp
dec
dec
cli
or
in
xchg
imul
or
mov
push
jmp
mov
aam
push
pop
and
push
dec
in
mov
or
out
into
xor
dec
sub
ds
lock
fdivr
xchg
push
push
in
mov
push
inc
in
push
lds
push
dec
imul
add
inc
in
or
or
push
repz
push
loop
inc
and
daa
jne
dec
adc
repz
shr
and
sbb
(bad)
mov
and
(bad)
aam
push
push
or
aad
out
fmul
xchg
jge
pop
cld
fdivp
and
cli
sysexit
bound
icebp
test
repz
test
jmp
pop
in
jb
pop
xor
loopne
jecxz
jmp
movs
dec
sub
icebp
dec
ror
xchg
mul
xchg
add
inc
jnp
fdivr
loope
dec
or
ja
sub
mov
ja
xchg
dec
push
mov
push
stc
inc
lock
lahf
pop
push
and
es
xchg
or
ds
mov
pushf
inc
jp
push
cmp
pop
nop
stos
test
(bad)
pop
nop
out
out
retf
pop
jecxz
sub
cmp
sub
jo
cmp
movs
nop
daa
inc
push
popf
fadd
fwait
jmp
das
(bad)
push
(bad)
push
lahf
mov
and
sub
mov
mov
xchg
shl
adc
adc
icebp
mulps
jo
cmc
(bad)
xchg
and
jg
loopne
inc
scas
dec
sub
in
xchg
movs
jp
mov
mov
repz
xchg
xor
cmc
les
data16
fs
mov
mov
je
in
xchg
stc
sub
cmps
test
mov
sbb
neg
mov
push
retf
dec
sbb
mov
inc
cmp
mov
cmp
jo
push
xor
fisttp
inc
jb
push
xor
adc
leave
stos
sub
aam
inc
gs
inc
sbb
out
not
cmps
rcl
arpl
pushf
pop
movs
xchg
loop
pop
aaa
inc
out
jmp
pop
inc
sub
fs
imul
and
test
sbb
movs
cmp
test
pop
pop
add
xchg
mov
in
pop
or
push
clc
jne
push
and
cmp
adc
stos
jno
loop
pop
xor
es
cmp
rcl
sub
or
les
repz
or
fcom
mov
pop
retf
aas
xchg
push
aaa
pop
clc
jne
(bad)
and
addr16
mov
cmp
jne
mov
or
fdiv
pop
loop
or
add
push
mov
mov
int
pop
add
sbb
jns
inc
add
dec
or
pop
stos
nop
int
leave
and
retf
jb
adc
dec
cdq
pop
loop
jae
enter
cli
in
push
movs
add
scas
nop
lods
cmps
cmp
mov
add
xchg
stos
jmp
retf
arpl
or
add
sub
(bad)
std
nop
fs
adc
mov
aaa
gs
test
push
aam
call
xchg
inc
int
sbb
cmp
das
sbb
mov
(bad)
das
std
and
or
shr
gs
call
or
mov
inc
or
out
call
push
lds
cld
call
in
call
fs
push
inc
data16
inc
cmp
mov
sar
add
cld
cmp
inc
ins
mov
push
mov
aaa
jo
test
inc
inc
xor
dec
add
mov
das
mov
jle
and
push
adc
test
xchg
xor
pop
mov
in
fld
jo
test
mov
xrelease
dec
push
sub
shl
push
dec
adc
or
call
sti
inc
aaa
mov
sub
aam
xchg
cmp
or
out
inc
and
pop
std
lds
or
fmulp
out
popf
jle
loop
sbb
dec
or
push
inc
mov
push
shr
in
cmp
inc
or
test
push
outs
xor
pop
inc
sub
stc
sub
mov
loopne
cmps
cmps
jg
ret
outs
(bad)
hlt
fidivr
or
sbb
addr16
aaa
test
jp
sub
add
push
jb
in
jl
cmp
imul
xor
sub
mov
sbb
and
mov
mov
mov
mov
movs
ffreep
sub
mov
pop
lods
mov
imul
shl
dec
jmp
mov
push
xor
rcr
scas
mov
inc
xchg
in
mov
sub
lea
clc
push
movs
adc
push
and
mov
fsubr
sbb
mov
in
inc
or
mov
ins
(bad)
(bad)
leave
mov
pop
sub
js
in
sbb
or
mov
rol
sbb
scas
mov
stos
cli
montmul
cmps
ret
jmp
test
rol
arpl
ja
sbb
push
(bad)
dec
in
or
adc
cmp
mov
mov
jb
mov
sub
pop
inc
nop
and
fsub
popf
int3
or
ins
or
pop
push
ins
mov
jae
push
mov
or
or
push
int3
dec
cld
inc
sub
push
pop
in
cs
in
stos
push
dec
fs
push
(bad)
loopne
pop
xor
lods
xor
dec
in
(bad)
push
int3
pop
inc
(bad)
or
mov
arpl
cmp
mov
cmps
sbb
or
(bad)
pop
outs
cli
dec
pop
cs
icebp
inc
cwde
fcom
in
out
fidivr
jl
push
cmc
pop
mov
cli
(bad)
outs
enter
daa
dec
add
mov
arpl
ja
mov
fdivrp
mov
js
adc
stos
sahf
xor
lahf
xor
call
scas
mov
cs
push
cwde
mov
test
test
pop
xchg
jge
int3
enter
inc
int3
test
cmp
gs
sub
sub
sahf
outs
add
mov
jl
cwde
cli
in
cmp
mov
lods
push
pop
inc
shl
retf
int3
sub
jb
sbb
clc
cmp
dec
inc
push
push
mov
mov
inc
fist
fisub
cmps
dec
mov
cld
sbb
popf
push
mov
pop
xor
movs
adc
ins
data16
sahf
sti
pop
dec
(bad)
bound
sbb
loopne
imul
jnp
inc
push
in
nop
pushf
stos
or
jnp
xchg
outs
nop
retf
cmp
ins
jae
(bad)
cwde
jmp
sahf
jo
sti
cmp
cmp
xor
mov
retf
(bad)
sbb
js
or
(bad)
into
jp
pop
leave
enter
jle
xchg
dec
mov
(bad)
je
sahf
movs
out
(bad)
mov
push
mov
mov
mov
call
lods
xlat
adc
pop
jle
mov
fcomp
cmp
test
add
(bad)
xchg
push
cdq
mov
sar
sub
bound
cmp
mov
iret
cli
arpl
or
(bad)
or
rcr
stos
fcmovbe
cmp
ss
push
mov
scas
mov
fld
icebp
out
shr
xchg
ja
popf
push
mov
lods
sub
inc
pop
add
movs
lock
and
(bad)
adc
std
and
inc
loopne
sub
mov
in
les
repz
push
xor
push
cmp
cmp
sub
mov
pop
pop
adc
sbb
(bad)
push
enter
cmp
push
clc
mov
fs
and
sahf
mov
sahf
out
scas
cmp
ins
outs
stos
mov
dec
cmp
pop
rcl
mov
test
lods
ins
sbb
gs
push
and
loope
shr
out
into
mov
push
or
stos
mov
lods
jne
out
add
jmp
push
xor
push
stos
cld
movs
sub
je
aas
jo
test
xchg
jecxz
push
movs
or
mov
ins
icebp
imul
xor
mov
dec
in
test
scas
dec
cs
shl
jmp
adc
imul
idiv
(bad)
xor
retf
int3
pop
scas
mov
scas
(bad)
gs
adc
in
mov
or
push
jge
pop
movs
repnz
inc
mov
or
jbe
cmps
cmp
repz
dec
sbb
sbb
inc
and
stos
fs
push
scas
shl
adc
xchg
call
add
push
std
sbb
and
xchg
xor
xor
cmps
stos
lahf
lods
sbb
add
int
pop
enter
shl
je
stos
mov
cld
sub
(bad)
(bad)
fwait
ss
xchg
int3
dec
ins
mov
sub
call
test
pushf
adc
loopne
mov
fnstcw
push
adc
test
movs
pop
popa
push
loope
pop
or
icebp
xchg
ss
cmc
and
mov
iret
xchg
jmp
sti
add
into
sub
mov
sub
xchg
fcomp
or
fsubr
dec
xchg
ins
addr16
lock
pop
repz
retf
mov
retf
add
pusha
fstp
cmp
enter
in
imul
pop
cmps
cdq
add
aad
pop
jb
mov
std
jns
inc
in
test
ds
pop
leave
out
and
mov
or
mov
inc
leave
sbb
mov
cmp
in
mov
dec
hlt
mov
rcr
push
pop
int3
mov
push
ins
int3
mov
es
call
test
outs
adc
jmp
ins
retf
inc
loop
in
xchg
xor
cld
inc
add
in
jmp
push
les
es
es
sbb
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
mov
sbb
or
mov
or
xchg
push
imul
test
inc
in
stos
push
dec
in
mov
push
jl
mov
cs
in
push
xchg
in
or
push
dec
in
mov
dec
in
mov
push
push
aam
es
mov
(bad)
push
int3
fwait
cmp
sbb
mov
push
pop
xchg
into
pop
push
les
in
stc
mov
mov
cs
pop
out
push
jbe
add
sub
sub
fndisi(8087
sub
xchg
iret
ffree
out
push
div
and
test
mov
cdq
mov
push
test
movs
and
inc
(bad)
rol
and
addr16
fcomp
outs
cmp
ins
mov
mov
mov
push
je
lock
rcr
gs
sbb
jb
fs
inc
fisttp
add
(bad)
out
adc
or
jge
repz
xor
pop
cli
lods
into
not
movs
sub
jp
mov
mov
jle
jecxz
add
stos
push
pop
and
xchg
xchg
je
jae
clc
add
jl
ror
pop
xor
shl
jb
stc
popa
lock
pop
jmp
xchg
fnstcw
fdivr
in
loopne
jne
mov
push
ins
das
mov
call
hlt
sbb
lock
movs
push
mov
das
or
mov
xor
js
aam
xchg
xchg
fwait
aad
adc
loope
mov
pop
in
add
mov
add
push
sbb
test
gs
jecxz
xor
pop
xor
inc
or
pushf
xchg
shr
test
sbb
mov
int3
or
inc
or
sub
jno
pop
pushf
hlt
xchg
and
rcr
and
(bad)
fist
ja
cmp
jnp
jne
mov
pop
or
xchg
fwait
out
ficom
jns
shl
mov
cmp
push
icebp
into
popa
in
cmps
stos
xchg
mov
xor
fnstenv
cmp
icebp
js
sbb
pushf
pop
fcomip
inc
pop
xchg
iret
or
fmul
nop
push
sub
inc
cmps
cmovne
hlt
and
popa
pop
enter
std
test
outs
mov
pop
add
pop
jnp
inc
scas
mov
jae
popa
iret
jle
sub
push
xor
(bad)
call
adc
sbb
add
xchg
shl
xor
outs
pop
and
cmp
adc
test
cwde
out
les
inc
iret
jmp
inc
mov
dec
lds
adc
adc
pusha
sbb
pop
adc
jl
push
mov
adc
dec
jae
jp
jmp
(bad)
mov
push
loop
in
shr
push
repnz
scas
in
jno
test
enter
icebp
dec
sbb
in
ret
retf
test
sbb
xor
jle
dec
and
sbb
dec
pop
add
cmp
cmps
popa
jp
mov
xor
cmps
fimul
movs
xchg
push
in
xchg
retw
movs
stc
mov
or
rcl
sti
clc
hlt
sub
mov
addr16
and
jge
aaa
jnp
retf
pop
and
(bad)
mov
mov
lods
cmps
and
aas
sbb
dec
push
dec
jge
dec
inc
mov
dec
and
iret
cmps
repz
int3
js
(bad)
fldenv
std
leave
arpl
mov
daa
inc
mov
add
cmp
mov
(bad)
mov
popf
xchg
dec
push
push
pop
inc
mov
dec
xor
inc
xlat
neg
xchg
movs
enter
push
pop
push
fwait
xchg
or
lock
fstp
cwde
mov
dec
sahf
dec
cli
div
add
adc
sahf
js
push
std
xor
cmps
cmps
out
or
dec
mov
mul
pushf
movs
es
push
popf
lods
cmp
xchg
es
pop
and
xor
dec
adc
call
in
sub
test
icebp
mov
xchg
xchg
lock
and
or
lds
jnp
dec
mov
mov
clc
dec
and
inc
cmp
dec
jp
jbe
inc
xchg
fcmovne
push
fstp
cmp
rcl
mov
jbe
cld
sub
ror
cmp
test
dec
sub
mov
jle
push
or
mov
sbb
sub
xlat
movs
mov
sbb
xor
cmp
lods
clc
mov
sbb
(bad)
in
clc
or
and
int3
push
cwde
pop
in
ret
aam
mov
inc
sub
push
push
in
push
inc
in
mov
push
ins
in
mov
push
in
aad
sahf
dec
in
cmps
(bad)
mov
xor
push
pop
or
int3
jmp
push
or
imul
rcl
cmp
jg
cdq
and
(bad)
and
sbb
ss
pop
or
(bad)
sar
(bad)
ja
popa
push
cmp
mov
sbb
push
shl
je
and
repnz
sbb
adc
inc
shl
sub
dec
sub
sub
mov
pusha
jp
js
pop
mov
push
das
hlt
xlat
ret
jmp
pop
in
jae
imul
mov
bound
xchg
test
aaa
cmp
mov
add
add
rol
push
or
fsubrp
mov
stc
stos
mov
cdq
leave
inc
fnstenv
adc
or
cmc
ins
idiv
or
sub
xchg
mov
inc
xchg
mov
mov
rcr
cli
(bad)
cmps
gs
cmp
ret
add
cmps
fisubr
xor
fild
mov
jo
mov
mov
retf
int3
stos
fstp
sbb
or
push
jnp
mov
push
(bad)
fs
popf
jl
imul
mov
bnd
lea
imul
dec
xchg
aaa
push
retf
data16
out
ins
mov
(bad)
in
addr16
pop
std
in
mov
aam
mov
repnz
cmp
cld
mov
(bad)
pop
push
xchg
aas
fst
mov
xchg
cmps
pop
and
pop
pop
or
xchg
and
inc
cld
push
sub
cmp
int
or
pop
out
test
jge
addr16
jg
pop
pop
and
js
mov
dec
shl
dec
fist
jp
fsubr
sub
and
call
xor
in
ja
or
out
lock
arpl
addr16
mov
mov
daa
call
jle
mov
shr
jnp
into
mov
sbb
and
dec
daa
adc
seta
arpl
sub
push
repz
inc
sub
pushf
dec
popf
mov
dec
xchg
cdq
add
push
rcr
nop
lods
aas
jecxz
push
mov
fild
rcr
or
dec
add
jmp
or
adc
dec
adc
sub
push
(bad)
sub
mov
fs
xchg
adc
sub
mov
inc
or
std
jo
xlat
xor
in
in
inc
test
(bad)
loope
mov
xor
adc
(bad)
(bad)
test
push
push
test
dec
stc
adc
sub
mov
rcl
rol
jae
xchg
pushf
sub
jmp
dec
popa
mov
cmp
ror
nop
dec
sar
movs
inc
jmp
stos
push
repnz
test
mov
and
mov
jo
stos
pusha
cmp
inc
scas
push
loopne
sar
dec
cmps
fwait
mov
or
jle
pop
adc
sbb
outs
ins
arpl
sbb
mov
dec
test
sub
out
mov
inc
mov
mov
add
(bad)
jb
imul
push
in
aas
adc
repz
scas
jge
test
xor
jb
jl
adc
daa
out
in
push
loop
mov
fwait
scas
movs
jmp
jne
arpl
mov
sar
sbb
push
sbb
stc
add
pop
jb
pop
mov
push
loopne
xor
push
iret
hlt
sbb
shl
pop
std
jns
add
push
adc
lock
mov
popa
inc
or
jp
test
bound
cmp
out
call
pop
mov
push
stos
pop
aas
mov
inc
dec
retf
cmp
adc
sbb
clc
test
dec
push
pop
xchg
mov
push
das
jmp
and
aaa
das
jns
lahf
inc
cmp
fiadd
test
out
and
cmp
or
stc
ins
push
arpl
int
call
xchg
int
lods
pop
(bad)
icebp
dec
jmp
daa
jbe
push
call
das
gs
pushf
adc
mov
(bad)
xchg
jnp
in
stc
ja
std
add
jo
xlat
jnp
pop
pop
inc
aas
ja
out
sbb
mov
test
adc
mov
into
in
pop
data16
not
mov
test
xchg
xchg
fcmovnu
ret
lods
or
call
mov
fsub
pop
addr16
pop
hlt
push
mov
cmp
pop
std
pushf
dec
lock
jno
jecxz
cli
std
pop
sub
or
outs
pop
pop
sbb
xchg
sub
cmp
fst
sub
popf
dec
js
imul
jbe
jecxz
push
or
mov
adc
xchg
jp
outs
gs
pop
push
inc
(bad)
cli
test
jae
cs
out
cmps
and
and
sbb
cmp
push
cmp
add
and
add
cmps
test
and
cwde
int
inc
test
inc
lea
ret
idiv
mov
scas
ror
cmovp
inc
sub
push
pop
les
cs
in
mov
pop
jl
push
ins
lds
xchg
inc
out
push
(bad)
lahf
aad
mov
cmp
in
test
push
inc
mov
(bad)
data16
popa
add
inc
aas
(bad)
loope
inc
aam
mov
addr16
xchg
je
test
and
div
pop
je
sub
call
fstp
out
pop
push
inc
cs
(bad)
out
xchg
dec
cmp
push
pusha
xlat
xchg
mov
add
loop
cmp
in
pushf
xor
pop
retf
sbb
and
cmp
mov
and
cmps
mov
xor
mov
fcomp
inc
stc
dec
(bad)
mov
xchg
popa
push
pusha
xchg
dec
(bad)
adc
rep
dec
add
rcl
popf
push
push
adc
jecxz
mov
popa
mov
xor
sbb
(bad)
sbb
into
into
fwait
push
jl
adc
jns
inc
jns
repz
jno
xchg
mov
pop
pop
ror
add
movs
xchg
dec
mov
icebp
xor
(bad)
imul
adc
int
(bad)
or
(bad)
call
mov
daa
cmp
mov
adc
xlat
imul
xchg
jle
popf
aad
test
test
dec
cmc
mov
jbe
je
mov
out
xchg
pushf
aas
xor
shl
mov
and
pop
inc
clc
out
outs
pop
int
cmp
xchg
js
or
ret
xor
ror
daa
lods
dec
cmp
(bad)
pop
stos
and
or
and
cmp
jnp
pop
aam
or
sbb
cmpps
shl
xlat
push
cmps
jp
add
scas
stos
xor
xor
add
jns
fwait
cmp
push
mov
ins
push
mov
adc
jecxz
xchg
jbe
daa
fcomi
fucomp
in
aad
push
dec
int3
fidivr
or
push
loopne
(bad)
xor
push
ret
jno
lods
arpl
add
adc
mov
dec
out
aam
bound
in
inc
ins
and
push
pop
push
cwde
adc
lea
test
jns
add
or
into
dec
xchg
dec
and
out
stc
inc
push
pop
sbb
out
int
bnd
fdivr
add
add
and
fwait
sbb
xchg
dec
ret
int
adc
gs
xor
not
sub
xor
pop
ss
(bad)
xor
push
bound
aam
mov
mov
out
sar
inc
push
jne
int
leave
cmp
sahf
cdq
xor
dec
arpl
lahf
mov
ja
(bad)
scas
imul
test
cmp
adc
aad
cli
fdiv
xchg
jo
mov
inc
or
out
outs
cmp
retf
push
mov
ret
or
pusha
inc
or
pop
fucom
mov
sub
pop
shr
outs
std
mov
sub
stc
repz
xchg
pop
inc
sub
aaa
cdq
(bad)
test
cmp
push
cmp
or
inc
int
jge
loopne
mov
int
inc
cdq
xlat
xchg
pusha
push
fistp
cmp
inc
sub
retf
dec
ds
pop
das
cmps
into
xor
sub
ftst
sub
cs
jae
push
test
aad
sub
or
lods
test
nop
adc
cmp
jne
rcr
mov
mov
mov
aad
mov
icebp
pop
out
enter
and
ins
add
int3
cld
xchg
shl
(bad)
jp
xor
jbe
xor
sub
dec
lahf
iret
and
jno
inc
(bad)
jb
jb
in
out
mov
fwait
out
xchg
add
dec
xchg
int
test
pop
imul
test
xor
movs
cmp
call
jbe
fdivr
xlat
call
dec
iret
xor
pop
add
inc
push
and
fidivr
popa
repz
push
psubq
stos
mov
inc
dec
or
mov
popa
jmp
pop
xor
(bad)
pusha
or
jecxz
cmp
mov
xchg
bound
test
mov
pop
sbb
lods
jle
dec
mov
jmp
sub
push
jo
unpckhps
popa
cwde
bound
(bad)
in
jmp
ret
inc
sbb
mov
repz
(bad)
icebp
mov
or
scas
jne
in
ins
jne
push
test
jne
mov
jo
sub
dec
fs
sbb
mov
rcl
cli
not
pop
jbe
jmp
pop
outs
jbe
xchg
adc
cwde
push
retf
jmp
test
ficomp
and
pop
mov
cmp
in
shr
imul
xchg
mov
pop
les
fcom
shr
xchg
std
in
or
daa
adc
and
pop
(bad)
fisub
add
lea
xor
outs
cmp
sahf
inc
dec
fist
pop
push
and
cs
js
js
cmp
mov
and
mov
std
out
xor
cmp
icebp
es
dec
cld
sbb
fs
call
fs
push
inc
jge
sahf
pop
xor
push
int3
mov
loopne
stos
add
adc
test
push
inc
jb
push
mov
test
pop
aas
imul
jno
inc
imul
inc
call
out
mov
test
sbb
(bad)
repnz
inc
(bad)
jbe
and
mov
stos
add
imul
inc
jmp
xor
add
popf
mov
pop
sbb
dec
int3
jg
mov
div
sub
xchg
adc
movs
jl
into
and
push
inc
(bad)
mov
jmp
mov
iret
xchg
inc
fcmovu
ss
lea
sbb
xlat
lahf
cmp
mov
mov
adc
inc
or
adc
in
or
test
xor
pop
dec
push
das
cmp
push
movs
ret
je
mov
mov
call
cmp
fdivr
xor
(bad)
add
and
inc
sbb
mov
pushf
inc
sbb
test
jae
js
icebp
imul
das
and
shr
push
dec
and
stos
cmps
adc
cdq
push
stc
inc
stos
sub
stos
repnz
and
lods
icebp
or
cmp
fistp
lods
jp
pop
adc
sbb
add
adc
pop
xor
leave
psrad
mov
adc
xor
loop
scas
sbb
scas
lds
cmp
push
pop
cmp
or
pop
adc
mov
or
out
pop
out
mov
aam
mov
xchg
cmp
add
push
jle
std
xor
pop
in
loopne
mov
shl
fs
popa
xor
pop
(bad)
pop
ss
xlat
das
sub
mov
cmp
adc
bswap
pushf
push
mov
adc
fsubr
cmp
adc
add
inc
sbb
push
adc
popa
pop
xchg
jp
inc
adc
mov
jno
adc
cmp
jo
push
add
loop
add
inc
adc
mov
dec
jmp
arpl
jbe
push
dec
je
add
mov
cmps
pop
push
jb
sbb
sbb
ror
adc
das
mov
push
(bad)
repnz
cmp
(bad)
dec
fs
and
and
sub
sbb
pop
cwde
fnop
inc
data16
rol
popa
push
das
fimul
inc
mov
dec
jae
test
out
add
hlt
pusha
add
add
out
(bad)
hlt
aaa
cld
pop
(bad)
adc
(bad)
mov
leave
xlat
xor
mov
mov
cmp
push
mov
mov
or
mov
div
push
retf
push
mov
jne
add
jb
mov
pop
jge
sub
sbb
lds
or
jmp
mov
ins
and
adc
in
dec
pop
test
jl
or
fdivp
test
xlat
push
(bad)
dec
movs
cli
add
ds
(bad)
mov
mov
sar
and
push
(bad)
jmp
fiadd
cmp
push
fs
xchg
cs
push
mov
adc
loopne
inc
outs
int3
mov
push
mov
stc
sbb
dec
pop
fld
xor
(bad)
xlat
jg
mov
fwait
jb
shl
jmp
loop
jmp
and
pop
(bad)
shl
fadd
int
popf
fsubr
enter
push
xchg
dec
inc
add
xchg
jae
(bad)
les
ja
sbb
sub
fistp
lock
push
xchg
gs
ja
outs
xor
jnp
call
mov
imul
pop
mov
xchg
mov
dec
push
jno
mov
jne
dec
sbb
cwde
fnstsw
mov
xchg
xchg
lods
inc
cmp
inc
repnz
(bad)
xchg
aas
cmp
jns
ss
inc
sub
jl
js
(bad)
gs
xchg
movs
data16
rcl
push
out
daa
and
retf
ret
(bad)
in
hlt
push
jmp
clc
pop
outs
rcl
pop
or
xchg
pop
std
and
loop
lea
dec
stos
stc
inc
mov
jnp
aaa
jp
inc
xor
fs
sbb
dec
push
xlat
or
aas
pusha
rcl
hlt
pushf
add
fistp
xchg
mov
mul
bound
cmp
push
mov
jne
push
jp
iret
in
fld
push
cdq
ret
lahf
dec
fs
movs
fistp
sub
out
sbb
stos
clc
dec
or
xchg
sub
rol
jns
sbb
xor
inc
or
(bad)
sub
es
dec
and
repz
xor
and
hlt
bound
add
mov
cmp
xlat
or
adc
jb
shr
inc
push
enter
xchg
xchg
push
fist
out
jbe
xor
xor
mov
loope
mov
dec
sar
and
mov
push
repz
cmp
(bad)
lods
cdq
cmp
popa
and
ds
mov
and
pop
adc
pop
push
adc
lahf
int3
(bad)
jge
es
loopne
sahf
std
lock
test
inc
mov
sub
stc
mov
and
inc
and
iret
popa
xchg
inc
xchg
fimul
imul
sub
pop
xor
(bad)
fcmovbe
enter
fidivr
pop
xchg
invd
bound
xchg
retf
(bad)
enter
call
in
call
popa
mov
xchg
or
and
cwde
pop
or
adc
ja
jle
lods
dec
dec
clc
jae
test
jp
jl
call
xchg
mov
mov
lods
push
mov
mov
jne
sbb
xor
fwait
out
push
xchg
rcr
sbb
test
jns
cmp
std
sbb
pop
cmp
dec
sbb
jmp
fmul
(bad)
jmp
cmp
or
(bad)
mov
push
aam
or
and
int3
int
mov
div
fwait
mov
add
pop
dec
xchg
aas
push
fnsave
(bad)
cmp
cmps
push
int
xor
dec
out
push
rol
test
cli
cmps
repnz
cmp
cmp
lahf
shl
pop
in
and
xchg
xchg
and
(bad)
(bad)
pop
cmc
nop
jo
mov
push
lahf
push
adc
(bad)
xor
push
ja
xchg
sahf
mov
and
ja
aam
fwait
xor
into
bound
data16
xchg
xchg
add
pop
fstp
aad
xchg
outs
xchg
sbb
pushf
xchg
adc
mov
hlt
mov
jmp
jg
xchg
pop
pushf
test
stc
fisub
jecxz
mov
cmp
loopne
dec
and
xchg
cs
pushf
pop
out
xchg
adc
das
sbb
dec
retf
or
mov
inc
ss
in
push
push
aam
push
jl
call
int3
mov
push
fs
xor
(bad)
sub
pop
je
push
loopne
mov
shr
ins
dec
xor
fistp
sbb
int
adc
adc
cmp
sbb
or
push
cmp
ret
xor
jp
and
mov
jb
retf
test
hlt
aam
sbb
pop
add
inc
jnp
int3
and
add
cmp
js
hlt
out
or
fiadd
mov
and
xor
cmps
and
addr16
sbb
pop
fidiv
cmp
neg
xchg
jp
pop
cmp
fcmovnu
jge
add
cmc
sub
outs
je
push
and
test
data16
jno
jb
mov
xchg
cmp
dec
enter
dec
not
jo
dec
clc
rcl
aad
loopne
and
out
shl
mov
pop
les
mov
in
outs
add
mov
adc
gs
imul
in
cmc
cbw
jl
stos
mov
jns
int3
pushf
or
sub
adc
jns
and
stc
jg
fs
adc
test
or
mov
cwde
push
mov
push
cmp
inc
loope
stos
repnz
repnz
jge
aas
pushf
call
popa
cdq
lahf
call
int3
add
dec
adc
xchg
test
movs
out
(bad)
in
outs
pushf
or
std
push
adc
out
and
ins
daa
adc
jg
mov
xor
inc
inc
or
fwait
iret
mov
xchg
jmp
out
outs
cmp
(bad)
ds
mov
test
arpl
lods
jg
fwait
adc
inc
idiv
inc
jg
jae
push
jecxz
cwde
push
cmc
js
xor
or
jmp
leave
mov
out
mov
sbb
(bad)
(bad)
std
cmc
test
ret
add
adc
mov
adc
cmps
pop
test
(bad)
cmps
mov
int
xchg
loope
xchg
mov
adc
test
cmp
arpl
xor
jge
dec
outs
call
add
cmp
mov
shl
push
out
loop
imul
mov
mov
mov
push
xchg
and
or
out
xlat
cmps
rcl
dec
cmps
out
inc
in
out
add
ret
in
bnd
xor
or
mov
inc
fdivr
mov
clc
xchg
in
(bad)
fucomip
push
rol
inc
aam
mov
mov
test
add
mov
clc
adc
xor
retf
jg
shr
ror
arpl
inc
(bad)
push
rcl
or
mov
dec
add
and
loopne
adc
xchg
xor
cmc
sub
sbb
dec
dec
pop
cmc
xchg
(bad)
jo
mov
dec
jmp
fcomp
adc
mov
in
sti
(bad)
das
js
pusha
(bad)
pop
dec
sbb
jmp
inc
mov
or
xor
cmp
sub
or
mov
into
push
pop
stos
xchg
retf
repz
aam
movs
test
dec
and
push
aas
dec
rcr
lahf
pop
push
add
popa
pop
dec
jmp
xor
repz
jge
imul
arpl
daa
jo
jne
arpl
mov
ins
adc
into
sbb
cmp
mov
jno
pop
dec
push
jmp
std
jnp
jmp
mov
sub
out
pop
je
fld
jmp
xor
push
movs
xor
shl
jo
retf
inc
dec
sub
jno
jae
gs
ds
cmp
dec
inc
push
lea
daa
ins
push
mov
cwde
test
dec
push
das
lds
mov
fld
setl
inc
or
lea
inc
jo
cmp
jnp
rcr
and
and
add
scas
cmp
xchg
aaa
ret
xor
ret
popa
inc
push
lea
add
jg
add
add
or
call
test
push
retf
jbe
sbb
adc
sub
cmp
xchg
sahf
(bad)
cmc
popa
dec
aas
nop
fistp
fidiv
jge
sbb
adc
out
mov
or
mov
sub
bnd
pusha
dec
stos
cli
xor
ss
dec
and
add
push
call
out
test
and
cdq
popa
out
movs
sub
xchg
mov
mov
mov
shl
jb
das
inc
and
and
dec
sbb
fisub
mov
fmul
jbe
xchg
xchg
push
jmp
mov
dec
cmps
xchg
movs
adc
ja
xlat
pop
stc
dec
out
or
aad
dec
mov
and
cmp
shr
mov
dec
fcom
xchg
fld
adc
(bad)
pop
cmps
in
xor
in
retf
sub
pop
push
arpl
lods
test
or
cmp
test
dec
sbb
push
jmp
inc
lds
inc
stc
stc
mov
retf
daa
sbb
stos
pop
sub
call
pop
or
(bad)
push
cmp
lahf
pushf
shr
xor
loopne
aaa
push
cmp
push
lods
mov
or
sbb
xchg
xlat
adc
cwde
adc
mov
xlat
mov
adc
xchg
fadd
not
cmp
jg
mov
fidivr
push
push
sub
cmps
xlat
or
push
mov
sub
adc
push
daa
sbb
add
rol
call
call
popf
sti
gs
mov
push
adc
xchg
hlt
xchg
movs
or
mov
mov
sub
jl
mov
xchg
leave
cmp
and
outs
fwait
sbb
sbb
icebp
aad
adc
mov
sub
pop
push
mov
loop
test
popf
pop
cmc
push
fistp
mov
ret
dec
sbb
dec
add
jmp
gs
inc
jbe
inc
mov
jmp
in
jae
aaa
jo
push
aam
fs
loopne
test
jae
lods
pop
inc
stos
ins
mov
xor
div
xchg
jmp
dec
ss
rol
das
fistp
or
aam
and
iret
push
lahf
dec
inc
cmp
fwait
mov
sbb
cmp
aaa
mov
mov
movs
adc
fild
jb
std
(bad)
loop
inc
into
jecxz
les
stos
xor
jp
in
mov
ficom
push
(bad)
dec
push
fnstenv
les
add
adc
sub
scas
pushf
ins
pcmpeqw
adc
or
sbb
out
jmp
jmp
dec
lds
retf
mov
(bad)
in
xor
repz
and
pop
mov
das
mov
inc
icebp
dec
xor
dec
lods
sbb
sti
fstp
ret
std
and
jae
jp
inc
push
push
push
sbb
add
fnstcw
cli
mov
xchg
out
jmp
aaa
iret
pop
sahf
int3
jo
and
jb
xchg
cld
out
or
push
mov
mov
add
mov
jmp
bound
scas
jne
jmp
addr16
pop
xor
pop
xor
inc
arpl
adc
movs
pop
mov
in
push
(bad)
jp
sub
dec
dec
inc
mov
xor
cmp
fimul
pop
mov
mov
movs
inc
cmp
das
jbe
inc
mov
ret
mov
clc
test
iret
mov
and
push
push
jecxz
fmul
loop
xchg
push
out
and
(bad)
int3
or
xchg
arpl
dec
pop
inc
mov
push
mov
mov
jg
jl
je
std
mov
xchg
test
jns
mov
pop
int
movs
jecxz
fisttp
fiadd
add
fisub
fs
rcr
or
xchg
cld
aam
or
in
sbb
lahf
jecxz
mov
cmp
sbb
xor
(bad)
cmp
push
(bad)
scas
loopne
ja
xchg
stc
push
push
xchg
loop
dec
jp
xchg
scas
dec
xor
mov
add
or
and
(bad)
sar
fs
sbb
retf
cmps
sbb
(bad)
jle
ror
and
les
dec
ja
jbe
repz
inc
inc
mov
out
mov
or
jge
test
bound
mov
adc
loope
iret
and
xchg
pop
mov
jmp
cs
sub
xchg
imul
xor
jns
aaa
and
sub
mov
retf
leave
outs
sub
in
sub
dec
inc
mov
mov
ret
cs
stc
ret
jbe
and
mov
(bad)
js
jmp
dec
je
stc
call
inc
daa
in
jp
in
in
jbe
xchg
sub
pop
mov
fmul
call
push
xchg
loopne
pop
dec
mov
pop
mov
(bad)
(bad)
mov
push
adc
stos
retf
and
mov
aam
jle
js
fist
and
mov
cmp
push
and
adc
aad
inc
xor
inc
or
sbb
into
pop
ror
lods
lods
icebp
stc
add
popa
jno
(bad)
mov
push
dec
arpl
not
push
sbb
mov
shl
js
imul
mov
mov
arpl
mov
dec
test
stos
daa
pusha
xor
pop
sub
movs
adc
pop
stos
mov
fwait
cdq
or
push
icebp
rol
mov
dec
gs
rcl
sub
cmp
jne
js
popa
ss
sub
cwde
add
(bad)
push
inc
adc
jnp
pop
out
mov
rcl
xor
adc
cs
movs
adc
pop
test
loop
lods
loope
xchg
fldcw
mov
cld
cs
repz
dec
sub
loop
and
ret
jo
pop
sub
(bad)
sar
call
cwde
aam
mov
and
dec
mov
cmp
call
mov
jns
aaa
push
enter
inc
inc
dec
sbb
ja
(bad)
(bad)
cmp
push
xchg
rol
dec
mov
or
mov
mov
cwde
mov
ins
ins
pop
loope
jb
dec
scas
out
ror
add
jae
pop
add
addr16
mov
pop
and
popf
rcr
or
cmp
fdiv
idiv
enter
push
and
movs
rcr
pop
aam
imul
adc
inc
pop
cmp
mov
pusha
adc
aaa
fistp
mov
sub
stc
loop
and
mov
test
imul
xor
jg
cmp
lea
mov
jbe
daa
gs
jo
push
mov
mov
or
dec
cmc
mov
arpl
mov
and
inc
mov
shl
cmps
sbb
cmp
mov
shr
jae
jne
stos
mov
push
clc
lea
adc
es
push
cli
adc
add
sub
pop
in
scas
loopne
repnz
adc
sahf
cmp
test
sbb
xchg
xchg
fwait
mov
test
or
cmc
(bad)
cmc
cdq
inc
sar
sbb
loopne
sbb
shl
mov
into
xchg
sub
out
jl
rcl
sub
cmovnp
movs
add
or
adc
cs
mov
in
ds
mov
lock
les
iret
jnp
rcl
fld
cli
dec
mul
push
add
xor
scas
mov
jle
outs
loopne
xchg
mov
cli
mov
add
stos
pop
cld
sar
dec
int3
rcr
mov
addr16
leave
mov
into
cwde
jno
daa
sub
xchg
test
fdivr
icebp
cmp
pop
inc
adc
cmp
xlat
dec
sbb
repnz
mov
call
cli
fld
pop
add
hlt
push
push
idiv
in
test
mov
ins
xor
test
xchg
neg
lock
add
in
test
mov
adc
push
loop
hlt
ret
mov
mov
rcl
and
in
lods
mov
out
test
bound
push
es
push
rcr
sub
sub
adc
fcomip
mov
fidivr
fstp
outs
outs
sahf
outs
(bad)
pop
cmc
adc
mov
and
int3
int
iret
sbb
jecxz
and
adc
jge
(bad)
(bad)
lock
jne
arpl
fistp
jae
pop
fdivr
xchg
xchg
cmps
arpl
dec
arpl
push
mov
ds
jg
sub
(bad)
sbb
std
mov
xlat
inc
aad
retf
add
loope
push
ret
dec
mov
jl
add
cmp
in
hlt
cmc
movs
mov
out
adc
and
pop
jmp
mov
adc
xor
into
pop
xor
mul
xchg
inc
jg
jbe
mov
lods
mov
xor
mov
lods
mov
cmp
pusha
add
mov
cmp
(bad)
mov
ret
aaa
jae
hlt
or
jae
loope
xchg
xchg
and
xchg
cmp
pop
sar
cmp
repz
cmp
xor
xchg
cdq
vmovdqa
push
aaa
mov
jns
pop
sbb
and
or
lods
shl
adc
ds
sbb
and
mov
neg
jmp
dec
xor
jae
pop
push
cmp
stos
nop
loop
mov
(bad)
fsub
jo
rol
shl
bound
jns
and
scas
and
aas
push
push
cmp
cmp
lods
jns
pop
sub
cmp
add
in
adc
jmp
pusha
loopne
jmp
sbb
test
pop
imul
or
xchg
pop
mov
push
jg
mov
in
sub
push
push
in
call
in
mov
push
inc
push
mov
dec
loop
add
cmp
mov
dec
mov
mov
cmp
nop
je
pop
in
xor
mov
xor
pop
inc
or
inc
mov
daa
jnp
sbb
jo
push
fwait
push
not
fstp
dec
dec
xchg
mov
int
test
leave
in
inc
or
fisttp
fprem
lahf
jg
aas
dec
mov
push
jbe
jo
test
fucom
jno
jne
sub
pop
test
mov
std
ds
mov
retf
xchg
and
pop
popf
js
aam
sbb
push
leave
pop
pop
into
sahf
xchg
xor
xor
es
pop
cmp
mov
rol
pusha
mov
sub
jb
test
and
(bad)
imul
mov
fmul
and
int3
jo
(bad)
mov
daa
add
out
sbb
pop
fwait
mov
pop
(bad)
push
xchg
repz
pushf
adc
and
sub
ret
cwde
push
lds
fdiv
pop
jo
jge
jg
mov
mov
repnz
pop
pop
cmp
int3
aam
cwde
mov
dec
loopne
pushf
add
pop
lods
(bad)
jl
sbb
push
lahf
int3
or
mov
mov
or
sbb
ss
pandn
push
popa
std
js
fnsave
cmps
data16
inc
sar
cli
stc
scas
(bad)
lds
aam
ins
pop
leave
pop
xchg
cmp
scas
hlt
cmp
fsub
es
call
shl
xchg
out
adc
or
jge
rol
mov
or
push
sub
mov
sbb
sbb
adc
jnp
fidiv
cmp
pop
daa
and
or
pop
cmp
push
mov
push
cdq
loop
clc
fdivr
dec
fwait
fwait
cmps
mov
pop
pushf
(bad)
loop
retf
sub
dec
(bad)
fsub
call
and
jmp
mov
inc
retf
push
test
push
pop
jo
pop
push
bound
ins
lock
das
pop
sbb
pushaw
inc
sbb
and
push
jge
mov
data16
sbb
loop
pop
push
adc
lock
pop
sar
stc
das
jmp
jle
dec
add
mov
cdq
xchg
mov
xchg
sahf
pop
repnz
sbb
stc
stos
sub
mov
sar
int
xor
popa
xacquire
push
stc
fs
push
outs
stc
data16
mov
jo
int
mov
xor
adc
sar
icebp
mov
(bad)
in
test
imul
xor
es
add
call
sbb
mov
mov
jno
inc
sti
outs
inc
mov
sti
inc
and
cmp
out
mov
sbb
mov
(bad)
pushf
outs
pop
daa
aam
sub
pop
clc
jnp
and
dec
inc
lahf
xchg
adc
mov
test
add
data16
int
inc
push
xchg
mov
lods
ss
(bad)
lods
add
xchg
fcmovu
lds
cmp
dec
sub
push
or
mov
jae
test
sbb
jbe
jmp
jmp
arpl
ret
inc
or
rcl
mov
cli
cmps
pop
xor
dec
iret
dec
(bad)
(bad)
or
pop
xchg
xchg
fwait
mov
rcr
jmp
scas
add
dec
stos
cmp
inc
mov
pop
mov
xchg
cwde
xchg
mov
inc
or
fsub
sub
mov
enter
cmp
mov
out
stos
adc
in
and
dec
pop
mov
out
enter
pop
outs
cwde
loope
popa
dec
in
into
xor
in
push
fstp
retf
scas
mov
sahf
pop
(bad)
xchg
push
out
sub
push
fist
jmp
popf
or
fst
mov
iret
jl
sbb
icebp
jbe
pop
jmp
fdivr
lahf
and
inc
ins
dec
out
xlat
sbb
xchg
popf
outs
pop
xchg
lds
call
fs
or
into
dec
xor
and
std
jno
sub
dec
push
adc
cmp
(bad)
aas
and
xor
mov
mov
lods
mov
dec
dec
mov
cs
mov
pop
call
es
dec
xchg
call
addr16
push
pop
pop
pop
outs
retf
lahf
(bad)
xchg
push
cmp
pop
es
pusha
js
push
mov
mov
cdq
or
sub
mov
and
xor
(bad)
addr16
jmp
icebp
retf
fwait
call
jge
mov
mov
fwait
mov
mov
push
xor
or
lods
shld
(bad)
rcr
adc
push
mov
call
into
cmp
sbb
dec
enter
mov
xchg
test
idiv
sbb
int
popa
ror
push
jmp
xor
aad
sub
push
add
or
push
gs
xor
outs
pop
pop
fsubr
and
(bad)
mov
fwait
cwde
add
mov
jmp
out
das
inc
jns
adc
xor
adc
and
inc
mov
xor
out
push
and
and
sub
dec
inc
push
push
data16
outs
retf
les
inc
ja
pop
and
(bad)
dec
xor
ins
lahf
mov
int3
xchg
add
sbb
js
stos
lea
cmp
dec
test
cmp
sub
mov
cmp
xchg
(bad)
popf
sti
dec
sbb
out
xor
cwde
mov
shr
or
lds
dec
in
jp
loop
aad
repnz
(bad)
pop
into
mov
mov
int3
call
mov
loope
xor
or
sub
add
scas
cli
lea
pop
fidivr
jmp
push
mov
(bad)
test
call
dec
pop
in
out
jmp
mov
dec
mov
fist
add
mov
xchg
(bad)
mov
enter
inc
xchg
cmc
repnz
imul
add
aad
sbb
inc
inc
or
popa
fdiv
inc
sub
mov
imul
jne
movs
jmp
add
and
adc
inc
mov
push
leave
sti
into
(bad)
stos
push
sub
lods
jp
cmp
sub
jp
cwde
inc
data16
pop
dec
cmp
dec
mov
pop
adc
cmp
mov
scas
in
jmp
lahf
add
aas
sbb
mov
loop
sbb
retf
ret
push
sbb
mov
(bad)
mov
sbb
std
icebp
and
shl
je
cld
xlat
push
(bad)
call
pop
hlt
xor
sbb
mov
shl
pop
sbb
movs
in
fwait
push
scas
arpl
out
in
and
fnstenv
call
adc
mov
mov
popf
push
cmp
aas
dec
mov
rol
mov
xchg
cmc
gs
jb
out
mov
cmp
clts
xor
and
xchg
daa
mov
leave
jl
cmp
ret
retf
or
ss
mov
jo
outs
fs
xchg
popf
test
adc
or
stos
jp
pop
xchg
pop
or
outs
icebp
dec
fcom
inc
scas
jle
push
mov
stos
or
ror
stc
into
pop
js
cmp
aas
mov
test
or
jl
and
xchg
dec
cmps
mov
cdq
add
mov
inc
sbb
ds
xor
fst
ret
mov
mov
cmc
cmp
mov
(bad)
pop
cwde
pop
push
add
mov
jno
jg
shl
addr16
pusha
(bad)
dec
out
lods
in
sub
push
mov
and
mov
or
movlps
cmp
or
inc
push
jb
nop
mov
xchg
mov
xchg
push
mov
out
mov
jo
jno
mov
das
lds
inc
mov
sub
push
shl
fnsave
imul
inc
ffree
xor
xchg
test
into
repz
imul
fucompp
arpl
sti
pop
xor
push
sbb
mov
(bad)
xchg
int
push
ds
cmps
push
jge
sbb
ffree
not
and
mov
and
int
adc
lock
mov
es
das
std
xor
jo
nop
mov
(bad)
lds
xor
daa
jns
dec
rol
das
fist
mov
pop
pop
mov
push
dec
int
dec
(bad)
in
(bad)
dec
pop
(bad)
pop
mov
cmp
mov
pop
popa
sub
dec
push
addr16
jmp
aaa
mov
xchg
test
xor
outs
pop
sub
icebp
mov
ins
mov
sub
popa
dec
pop
mov
test
or
pop
(bad)
cmps
imul
lock
mov
clc
mov
hlt
cmp
and
shl
add
in
fimul
add
pop
xchg
rcl
imul
cmps
mov
push
jbe
sahf
xor
ss
mov
jmp
pop
scas
sbb
mov
sbb
outs
add
sar
dec
xchg
arpl
inc
and
add
xchg
xor
lods
cmp
push
mov
aaa
and
out
test
jp
push
pop
loope
mov
or
test
int3
pop
xchg
mov
cmp
je
push
hlt
mov
push
dec
movs
mov
inc
fist
sub
pop
xor
fwait
lods
je
inc
or
xor
inc
jle
jmp
pushf
gs
(bad)
into
out
sub
movs
push
aad
xlat
push
jecxz
mul
sbb
nop
test
scas
dec
out
cdq
push
jae
mov
movs
enter
mov
mov
out
das
jns
ins
repnz
std
movs
ins
pop
jno
ret
dec
cs
popf
aaa
lahf
rcl
out
dec
int3
cmc
retf
mov
jo
jo
movs
dec
out
xchg
sub
lods
cs
das
cmp
das
push
dec
adc
and
or
and
das
inc
mov
neg
sub
dec
lock
adc
sub
or
push
ins
in
mov
dec
in
stos
push
dec
in
push
les
into
xor
int
mov
inc
arpl
dec
in
fld
push
in
inc
(bad)
jge
stos
movs
sub
mul
xchg
sub
pusha
mov
nop
outs
retf
xchg
xchg
add
mov
and
pop
mov
xchg
int3
push
cmp
dec
iret
sbb
adc
xlat
jbe
gs
aam
(bad)
sbb
sti
push
push
cmp
in
inc
mov
lea
jo
clc
push
sub
sbb
call
cdq
jnp
loope
pop
pop
cmps
movs
sub
addr16
jbe
inc
xor
jge
jmp
inc
pop
or
jge
hlt
int
pop
nop
cmp
sbb
sbb
es
fwait
in
mov
fisub
push
inc
inc
cmp
popa
push
rcl
mov
scas
xchg
push
pop
inc
sub
xor
icebp
push
hlt
xchg
sahf
cmp
icebp
sbb
inc
retf
fdivr
vcvttss2si
outs
dec
js
test
adc
mov
aad
xor
scas
sti
sbb
test
or
pop
or
jmp
movs
test
pop
push
mov
scas
mov
in
inc
int3
dec
fisubr
inc
scas
ds
push
fisttp
sub
or
mov
cs
cmps
dec
ss
gs
jnp
or
jns
jp
test
int3
and
cwde
cld
into
iret
dec
mov
mov
adc
cdq
aaa
stc
dec
sub
cld
and
pusha
pop
in
mov
cld
jge
push
bound
movs
in
or
mov
mov
fdiv
in
fcom
imul
or
mov
xchg
push
sub
fldcw
jmp
cmp
mov
sub
daa
imul
ds
test
mov
cld
into
cmc
pop
inc
stos
adc
mov
xchg
pop
fdivr
and
ret
inc
or
xchg
stc
mov
mov
enter
cmp
leavew
nop
retf
sbb
jl
xor
(bad)
jecxz
or
cmp
idiv
pop
push
or
and
xchg
sbb
cdq
adc
das
retf
icebp
out
adc
loopne
adc
adc
push
or
sbb
gs
inc
shr
sub
inc
push
out
cwde
jns
push
lods
jmp
mov
cwde
into
outs
lahf
fadd
mov
ret
movs
loop
lods
stos
hlt
mov
out
repnz
push
jb
aaa
cs
popf
dec
shl
xor
cwde
push
in
dec
leave
or
jne
sti
push
sti
mov
inc
mov
or
stc
pop
shl
pop
inc
xchg
mov
pop
add
scas
sahf
push
stos
jnp
inc
mov
(bad)
out
push
sbb
push
lea
sahf
cmp
ret
(bad)
fistp
adc
inc
pop
das
popf
es
jecxz
stos
sbb
jecxz
sar
pop
sub
or
sbb
pop
call
mov
xlat
adc
fist
es
push
call
mov
push
sub
xchg
out
inc
dec
(bad)
pop
push
mov
jl
xchg
or
inc
jae
(bad)
jmp
add
xor
and
(bad)
and
ror
rol
sbb
jmp
int
dec
pop
popa
adc
xchg
fcmovbe
sbb
int3
je
mov
mov
cli
push
xlat
or
mov
test
jae
push
and
sti
xchg
cmp
push
ret
inc
ins
in
mov
inc
nop
mov
nop
in
add
mov
pop
int3
imul
adc
and
pop
in
aaa
das
rcl
lods
xchg
lods
jecxz
dec
cld
inc
sub
push
push
in
stos
push
inc
in
mov
dec
fs
push
inc
ins
mov
iret
loopne
test
gs
add
ins
mov
push
outs
je
lods
fadd
stc
sbb
(bad)
adc
addr16
shrd
std
add
sbb
cs
shr
jnp
ret
call
jle
mul
jb
ins
hlt
popa
inc
push
lods
mov
pusha
push
iret
out
jp
jno
(bad)
and
jecxz
lods
scas
pop
ret
inc
out
pop
add
push
mov
repnz
shr
fdivr
addr16
(bad)
dec
outs
fsub
push
xor
add
es
scas
mov
or
jmp
mov
pushf
sahf
xor
push
mov
js
fcom
xchg
out
mov
sub
ss
cmp
aas
mov
(bad)
repnz
push
mov
push
daa
xor
fcom
cdq
jp
pop
js
int3
inc
imul
or
mov
les
xor
fbstp
cmps
es
sbb
data16
sti
mov
mov
mov
pushw
imul
ja
in
adc
sahf
xchg
into
fild
jne
out
mov
dec
jnp
jg
mov
pushf
in
out
jle
stos
mov
push
sub
call
int3
pop
imul
daa
xor
(bad)
cmc
data16
mul
loopne
cmp
pop
cwde
mov
and
mov
cmp
inc
or
aam
jmp
iret
wrmsr
(bad)
jecxz
mov
pop
fld
dec
rol
mov
fistp
push
inc
mov
mov
rol
repnz
repz
jl
fcom
(bad)
into
data16
imul
jnp
mov
nop
xchg
repnz
mov
jb
jne
inc
int
or
cli
dec
mov
xor
adc
xor
xchg
inc
bound
hlt
inc
pushf
and
sbb
js
repnz
repz
push
fidiv
adc
and
cwde
lds
ret
adc
pop
aas
jl
sbb
jl
dec
mov
mov
mov
nop
rcr
int
jmp
fmul
push
cdq
stos
out
ret
pushf
test
and
mov
mov
mov
ret
fs
loop
pop
push
icebp
mov
xchg
(bad)
sbb
test
stc
out
icebp
inc
shl
dec
inc
pusha
sar
jmp
jae
dec
push
and
sub
dec
loope
pop
rcr
loopne
call
mov
or
fdivr
mov
mov
xor
stc
mov
mov
in
xchg
xchg
mov
inc
fwait
iret
pop
cs
jo
jne
xor
in
out
imul
fisttp
shl
pop
cs
sub
push
or
sbb
xchg
mov
xchg
ret
into
movs
inc
xchg
mov
lods
ja
push
mov
push
mov
xor
rol
sbb
sbb
call
stos
test
retf
outs
outs
(bad)
mov
loop
imul
mov
rol
add
cmp
jbe
pop
jmp
sbb
cmp
(bad)
int
cli
gs
retf
sub
in
sub
mov
mov
cmp
pop
sub
imul
adc
fsubrp
xchg
pop
jmp
push
sub
test
sar
test
adc
gs
clc
jmp
emms
(bad)
idiv
jno
add
jno
push
and
and
mov
sub
mov
mov
inc
nop
push
pushf
push
add
ds
fs
xor
mov
and
jge
xchg
jne
pop
inc
(bad)
sbb
add
push
neg
(bad)
sub
jns
adc
sbb
xchg
in
or
shl
mov
inc
mov
mov
scas
pop
(bad)
jl
lea
cwde
lods
mov
mov
loopne
xchg
or
push
movs
arpl
bound
sub
das
mov
ss
les
mov
lock
(bad)
(bad)
rol
mov
inc
xor
or
dec
mul
(bad)
sbb
scas
adc
push
pop
or
and
sub
adc
mov
out
push
add
and
sahf
repz
jg
xchg
and
mov
popf
xchg
pop
loope
pop
imul
jl
push
adc
pop
inc
jo
push
inc
(bad)
mul
add
call
lea
das
mov
sar
sub
mov
sbb
add
mov
sbb
js
cmp
lea
neg
mov
fcmovnbe
ja
jne
retf
test
icebp
int
mov
push
pop
in
push
push
in
push
dec
gs
push
inc
gs
dec
ins
mov
leave
jecxz
add
mov
dec
in
(bad)
push
cmp
inc
(bad)
sbb
in
jl
mov
(bad)
aam
sub
add
iret
push
gs
and
adc
sahf
test
xchg
daa
js
mov
xor
nop
test
pop
test
test
sahf
or
imul
test
and
gs
(bad)
retf
imul
xor
inc
push
daa
into
mov
mov
inc
mov
pop
pop
pop
xor
cmp
gs
(bad)
imul
xor
jns
call
lods
sub
push
sti
xor
jmp
xor
outs
cmps
out
scas
call
(bad)
mov
cmp
cmps
sub
in
in
sahf
stos
jmp
push
dec
mul
mov
(bad)
push
adc
les
in
(bad)
cmp
cmp
ja
jb
dec
outs
sahf
adc
add
movs
and
mov
sub
cmp
retf
mov
mov
jecxz
ficomp
mov
retf
jp
pop
push
outs
shl
test
call
sub
pop
pop
adc
cmp
inc
add
stos
dec
and
xor
and
jmp
or
pusha
xor
pop
pop
movs
mov
xchg
mov
sbb
out
lds
call
je
sub
dec
repnz
scas
add
add
push
aas
and
or
inc
mov
and
or
cmp
inc
adc
or
in
shr
sub
jne
aam
or
movs
mov
loop
std
icebp
and
fimul
and
js
ja
push
push
sti
loope
add
mov
jno
je
dec
mov
imul
push
mov
dec
xor
cdq
test
jb
int3
outs
jmp
mov
les
jns
dec
mov
sahf
(bad)
hlt
loope
fwait
clc
and
nop
pop
add
adc
cs
sbb
xor
mov
xchg
scas
ins
jnp
fcmovnb
aam
xor
xchg
dec
mov
push
inc
xchg
sbb
retf
push
mov
adc
pop
pop
xchg
cmp
and
mov
test
pop
imul
test
lds
dec
aam
in
mov
cmp
push
push
out
(bad)
or
and
mov
ret
fsubr
jbe
xor
push
add
pop
dec
jo
xor
cmp
aas
int3
ja
and
mov
pop
add
pop
fucomip
jp
popf
mov
dec
cmps
ins
call
test
pop
out
lahf
or
mov
or
mov
add
ret
push
inc
nop
xor
retf
sub
sub
(bad)
fistp
hlt
push
int
cld
mov
sub
cmps
sub
popf
jp
push
retf
inc
ss
push
adc
mov
sbb
jl
dec
fcomp
iret
fwait
add
mov
xchg
jmp
fwait
cmps
pop
(bad)
movs
cmp
(bad)
mov
jmp
addr16
pop
lds
js
jns
hlt
ffreep
inc
mov
jae
cmp
push
inc
jne
imul
test
pop
lods
push
and
sub
lods
jmp
adc
mov
sbb
inc
pop
cmps
jp
in
fwait
mov
mov
cmps
ror
sub
js
sbb
xor
jmp
mov
mov
sub
fmul
out
fcomp
pop
(bad)
out
ret
rcl
fisubr
sbb
fbld
inc
jb
outs
add
mov
mov
clc
sub
or
cmp
mov
dec
jmp
mov
add
gs
iret
mov
and
leave
scas
sbb
(bad)
jp
dec
pusha
lahf
xor
mov
jl
or
ins
nop
and
mov
jo
std
in
mov
cmp
jmp
ret
add
push
ins
fscale
and
xchg
out
pusha
jnp
adc
shl
das
rol
cmps
(bad)
pop
retf
repz
neg
scas
addr16
shl
arpl
add
pop
sub
addr16
inc
pushf
lock
int
and
test
mov
inc
out
addr16
loopne
ret
mov
scas
fsubrp
mov
rcr
iret
out
and
adc
movs
push
shl
push
ret
mov
mov
mov
fs
retf
sub
xchg
call
xchg
pop
jno
jmp
inc
sbb
dec
das
test
pop
push
inc
gs
dec
jmp
aam
test
and
imul
fld
or
or
shl
inc
int3
mov
or
jae
cwde
jmp
push
mov
fadd
xchg
das
(bad)
dec
fwait
dec
push
in
jo
push
adc
add
adc
shl
and
imul
inc
jae
mov
mov
js
ror
push
outs
and
mov
js
or
mov
add
pop
pop
mov
cwde
mov
xchg
ja
add
add
cmp
jl
ins
xlat
stc
iret
scas
adc
xchg
leave
(bad)
xchg
and
je
leave
mov
hlt
leave
in
add
pop
or
into
icebp
in
loop
mov
ret
lea
mov
pop
ins
test
inc
mov
push
fist
mov
mov
jb
push
and
sar
and
data16
jecxz
aam
aad
dec
mov
cld
cld
fadd
cmp
test
cli
test
js
bound
icebp
sub
push
imul
pop
jl
ins
pushf
or
mov
bound
xor
xor
push
jne
imul
inc
leavew
inc
cli
ss
dec
sbb
popa
xchg
fdiv
bound
jbe
push
daa
xor
ss
push
push
mov
in
lahf
push
jge
jns
sub
mov
aam
jmp
fdiv
out
inc
int
mov
imul
sahf
in
or
sbb
icebp
inc
jb
dec
or
and
push
cmps
jae
xchg
adc
push
cmps
lock
dec
fld
hlt
mov
popa
loope
jnp
js
scas
xchg
dec
test
jmp
and
dec
or
test
movs
cmp
xchg
in
test
mov
xchg
popf
inc
mov
and
mov
in
clc
jnp
lds
push
fsubr
cli
mov
pop
cli
push
out
jl
pop
inc
rcl
add
dec
cmc
test
in
sub
mov
cmp
push
push
popf
idiv
pop
(bad)
not
inc
outs
push
mov
cli
cli
or
into
xor
inc
loope
xor
dec
push
xor
jg
and
fild
gs
data16
sahf
dec
mov
pop
pop
mov
(bad)
xor
mov
jge
sar
rcr
inc
jge
xchg
mov
mov
pop
mov
xchg
push
mov
push
je
mov
or
jp
or
sti
pushf
aam
mov
(bad)
icebp
pop
and
shl
shl
shr
or
mov
retf
push
jecxz
add
inc
pop
les
neg
inc
jmp
(bad)
xchg
mov
arpl
mov
or
hlt
in
push
loop
cwde
push
out
scas
sbb
sbb
outs
imul
arpl
push
daa
cld
fidiv
xor
dec
cmps
lods
mov
mov
ret
jne
test
pushf
inc
cmp
ficom
into
jno
or
into
mov
(bad)
sub
in
test
popf
xchg
or
xor
popf
inc
xchg
loope
ror
xchg
movs
ror
xor
cmp
fs
fsqrt
jg
add
adc
(bad)
loope
cdq
lock
xor
push
sub
ins
pop
frndint
push
int
sub
aas
xor
add
ret
stc
and
add
xchg
nop
adc
rcr
fisub
test
clc
jmp
pop
push
cwde
fnstcw
call
cmp
pop
add
pop
sub
out
mov
jb
jo
mov
inc
jl
jbe
loop
adc
movs
retf
and
int
pop
or
and
rcl
or
cmp
dec
(bad)
mov
das
sahf
lods
out
add
xchg
xor
lahf
pop
dec
dec
jg
out
dec
fisubr
cmp
jg
push
push
stos
sub
add
call
sbb
xor
inc
or
cmc
in
mov
mov
lea
cs
sbb
add
or
push
push
cmps
shl
lds
lahf
xor
or
mov
sar
adc
leave
sar
push
or
xchg
inc
in
mov
cmps
add
jnp
sub
outs
xchg
mov
sub
xor
mov
loope
pop
pop
aad
or
cmc
and
pop
jl
mov
adc
into
call
pop
adc
popf
xchg
adc
jmp
or
and
mov
outs
dec
sub
jp
call
call
xor
xor
popa
ss
inc
out
retf
pop
pop
imul
push
pop
add
mov
push
out
pop
pop
enter
push
lea
ret
xchg
movs
push
retf
push
sbb
xor
lods
loop
outs
icebp
pop
xchg
inc
jg
fdivr
push
popa
sbb
mov
hlt
popa
xchg
into
pop
gs
lock
push
sub
mov
enter
adc
sbb
je
scas
repnz
inc
inc
ss
aad
pop
sbb
loopne
mov
repnz
and
xchg
and
loop
repnz
dec
jae
add
jbe
jmp
add
add
adc
jmp
enter
adc
sahf
lock
xchg
mov
add
inc
fwait
mov
js
(bad)
jmp
dec
sti
test
ds
stos
mov
pop
rol
pusha
fs
xor
cmp
movs
mov
bound
pop
jo
xor
pop
jge
retf
xchg
and
es
arpl
aas
inc
lock
icebp
int
mov
cmp
cwde
push
in
push
cld
out
pop
push
inc
push
test
dec
out
repnz
fsubr
lds
iret
xor
and
xchg
scas
nop
aaa
mov
inc
sub
push
mov
cmp
jno
or
and
push
mov
push
addr16
mov
cmp
or
push
out
inc
mov
lahf
pop
mov
repnz
out
xchg
mov
ret
(bad)
sbb
jecxz
rol
stos
mov
ins
push
jecxz
aaa
lods
outs
mul
sahf
jle
sub
xchg
popa
es
xor
test
cmp
mov
adc
mov
or
pop
scas
pop
ins
lahf
dec
shr
pop
cs
sub
adc
data16
jg
xor
lods
outs
std
stos
fisub
inc
test
sahf
ins
xor
sub
cmp
and
pop
inc
outs
inc
(bad)
jg
jne
pop
inc
cwde
pop
add
sbb
scas
xchg
repz
stos
xlat
xlat
pop
xor
ins
cmps
push
idiv
push
add
sbb
sbb
retf
cld
dec
pop
and
outs
add
mov
adc
mov
cs
push
cmps
cmp
repz
in
xor
or
push
mov
outs
fadd
mov
xchg
imul
jae
xchg
mov
loop
inc
xchg
xor
xchg
sbb
loope
mov
or
xchg
out
sbb
xchg
or
call
pop
lods
jae
pop
pop
mov
nop
sbb
js
int3
xchg
sub
lea
mov
imul
xchg
call
mov
fs
call
push
dec
mov
mov
movs
ret
iret
out
mov
and
inc
loopne
aaa
test
(bad)
jp
es
arpl
stos
ja
into
in
clc
in
or
leave
fist
(bad)
sub
out
mov
rol
sbb
stos
nop
pop
in
mov
cld
xchg
jae
add
add
dec
mov
mov
call
(bad)
add
mov
cli
fcom
clc
mov
outs
cmp
mov
mov
cmp
int
lahf
js
stos
imul
clc
and
into
mov
inc
pop
mov
inc
leave
sbb
mov
cmp
in
mov
dec
hlt
mov
rcr
push
pop
int3
mov
push
ins
int3
mov
es
call
test
outs
adc
jmp
ins
retf
inc
loop
in
xchg
xor
cld
inc
add
in
jmp
push
les
es
es
sbb
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
mov
sbb
or
mov
or
xchg
push
imul
test
inc
in
xchg
push
dec
in
mov
dec
in
mov
push
je
call
hlt
inc
sub
push
inc
in
mov
dec
in
mov
push
push
fdivr
cs
in
xor
ins
ficom
push
inc
stos
mov
push
dec
aas
adc
push
cli
and
jp
push
fcmovu
out
jecxz
ins
ds
or
stos
ror
ins
xchg
adc
xor
and
stc
xor
and
sub
clc
mov
sub
or
add
int3
and
mov
popa
xchg
std
mov
pop
test
inc
mov
dec
adc
pop
sub
xor
cs
fcom
pop
lods
sub
ret
bound
movs
mov
imul
add
pop
arpl
mov
sbb
mov
xor
fcom
fxch
cmp
xor
xor
outs
cld
ins
push
xchg
dec
cmp
sbb
cmps
aaa
(bad)
sub
sub
add
push
je
mov
inc
inc
in
mov
cs
in
out
fidivr
out
imul
popf
out
loop
mov
xchg
adc
and
rcl
sbb
lock
ja
cld
ins
leave
dec
inc
sbb
es
popf
rol
push
cwde
adc
push
xchg
sbb
(bad)
dec
stos
int3
cmp
xchg
sbb
cmps
sub
jnp
jb
push
and
cli
push
dec
call
scas
xor
mov
push
cld
sar
mov
mov
test
(bad)
inc
daa
xchg
(bad)
adc
out
out
dec
lds
push
or
neg
dec
js
xor
sbb
jge
repz
push
xchg
sub
pusha
push
fidivr
sub
adc
jmp
jae
mov
inc
mov
push
int
cmp
mov
or
jnp
xor
adc
mov
clc
sub
add
pushf
jo
xchg
inc
xchg
stos
clc
test
ins
and
push
adc
lods
mov
add
in
adc
inc
jge
pop
inc
lods
scas
lock
cmp
sub
fxam
outs
shl
xchg
shl
and
add
xor
add
and
and
mov
out
cmc
and
sub
pusha
xchg
shl
(bad)
inc
js
ror
fs
mov
add
dec
fisubr
sar
push
out
clc
rcl
push
(bad)
inc
dec
mov
js
jae
inc
or
fisubr
push
inc
jmp
dec
aaa
mov
cmp
mov
ja
leave
(bad)
xor
mov
dec
lods
cmp
ret
add
fwait
(bad)
in
hlt
out
mov
loop
jnp
cmps
shr
jmp
rol
loope
xchg
pop
push
loop
loope
xchg
int
adc
push
aaa
sahf
mov
test
fild
push
pop
test
shl
sub
retf
and
out
push
and
ins
stos
add
retf
rsm
aas
cmp
clc
jmp
rcl
pop
loop
or
cmp
push
das
call
pop
dec
std
repz
cdq
hlt
jae
jp
xchg
xor
retfw
in
lods
sar
xchg
xchg
sbb
leave
cmp
(bad)
dec
adc
and
fnsave
cmps
neg
enter
lahf
ret
loope
scas
xchg
stos
nop
test
shl
push
pushf
loope
and
into
cmc
in
stos
cs
xchg
int3
jl
jne
jno
push
jae
xchg
aaa
outs
sbb
mov
les
clc
pop
hlt
loop
inc
fsubr
or
stos
cs
mov
inc
xor
or
stos
ret
out
and
sub
pop
push
lods
idiv
jae
and
bswap
dec
cdq
dec
jp
out
jle
iret
pop
push
jl
jecxz
jge
loop
outs
inc
clc
loope
ins
fdiv
clc
stos
cs
lods
mov
dec
imul
dec
sbb
clc
push
inc
retf
mov
test
mov
push
pop
in
call
in
push
fs
pop
and
in
in
das
or
push
inc
call
lods
out
cmp
mov
push
pop
movs
das
test
outs
in
and
xlat
mov
xor
out
in
les
inc
cmp
sbb
sub
push
mov
dec
xor
cli
test
adc
cmp
lods
clc
cwde
push
bsf
in
fdivr
push
cmp
es
pop
pop
sbb
mov
cmp
je
push
scas
xor
inc
jb
cmp
je
cwde
popf
cld
mov
daa
sub
test
pop
fs
ss
mov
and
mov
add
jns
(bad)
fisub
sub
jmp
rcl
test
(bad)
mov
jnp
outs
leave
and
adc
mov
jno
nop
popa
enter
sub
ficom
push
mov
and
fcomp
pop
(bad)
push
cmp
jbe
pop
repnz
imul
stc
adc
mov
mov
(bad)
fisub
add
cs
mov
inc
or
das
scas
mov
or
xor
icebp
loopne
pushf
aam
scas
scas
push
push
push
ja
mov
dec
inc
ds
fcomp
add
jge
loope
clc
sbb
ss
inc
inc
call
shr
mov
xor
cmp
les
cmps
pusha
xchg
pop
fimul
lds
jge
add
imul
fdiv
mov
retf
inc
mov
mov
jl
into
pop
lods
cmps
or
jmp
int
loop
imul
pop
dec
pcmpeqw
stos
lock
mov
out
fs
add
lods
pusha
inc
or
aas
jmp
imul
and
add
cmp
push
jp
push
sub
popf
cmp
and
and
cli
test
in
cmps
sub
retw
cmp
std
ret
pop
mov
jecxz
adc
sbb
jg
ret
imul
sahf
adc
into
xor
pop
cmp
loop
or
(bad)
mov
xchg
sub
xchg
fstp
xor
mov
pop
jo
stc
das
mov
inc
dec
clc
cmp
push
fmul
sbb
in
test
xchg
stos
fld
push
push
adc
mov
stos
pcmpgtw
or
jae
mov
arpl
mov
hlt
adc
cmp
(bad)
xchg
and
imul
ffree
(bad)
out
out
mov
jg
aam
mov
(bad)
cmp
dec
in
rol
and
dec
sub
jl
push
push
in
mov
mov
clc
loopne
(bad)
in
jno
push
pop
out
push
pop
cdq
iret
jmp
add
fadd
jbe
movs
cmp
lahf
mov
xchg
popf
pop
or
clc
outs
rcl
pop
pop
ss
sti
mov
cmp
je
stos
in
je
xor
pop
pop
repnz
mov
cwde
ret
or
fistp
aaa
jnp
(bad)
and
or
rol
sbb
inc
mov
jl
push
cmp
ret
jns
aam
push
into
jecxz
test
call
out
ds
cmp
inc
and
je
mov
sub
iret
add
leave
mov
mov
mov
les
ds
inc
cwde
cld
inc
jnp
adc
and
or
xlat
dec
and
xchg
xchg
or
popf
fiadd
shl
mov
dec
sbb
int
test
js
fnstenv
fs
iret
adc
mov
mov
cmp
xor
sub
fimul
aam
mov
cmp
xchg
test
xlat
leave
mov
mov
clc
inc
mov
popf
adc
out
popa
sbb
loop
fist
vcvtss2si
addr16
adc
cmps
repnz
imul
outs
dec
ficomp
add
in
xchg
or
push
(bad)
and
sbb
mov
bound
jg
loopne
out
cmc
dec
xchg
mov
mov
cwde
retf
outs
out
inc
dec
adc
hlt
xor
xchg
sub
jae
adc
mov
lods
xchg
dec
cmp
sub
pop
push
mov
into
xchg
sub
add
test
repnz
mov
call
cmp
fs
mov
xchg
test
mov
aam
pusha
jecxz
xor
loopne
daa
sbb
(bad)
stos
xchg
or
jns
dec
mov
jmp
xchg
xchg
jp
fistp
sbb
add
sub
in
or
xchg
push
ss
out
ret
popf
bound
aam
xor
ja
test
jbe
sti
fistp
stos
ins
pop
aaa
push
mov
popa
(bad)
cmps
ds
ror
cmp
imul
outs
jmp
das
mov
nop
int
fwait
mov
repz
and
frstor
sahf
out
add
and
xor
push
(bad)
in
pop
test
addr16
and
and
pop
cmp
fs
xor
out
mov
outs
push
(bad)
xlat
repz
mov
(bad)
std
jge
push
mul
cmp
cld
pop
jmp
sub
in
sub
push
pop
hlt
mov
ds
in
mov
push
inc
in
xchg
std
sub
vcvtsi2ss
aam
xor
inc
in
dec
mov
mov
jl
adc
mov
rcr
shl
test
fnsave
cld
jmp
test
mov
lods
xor
cmc
jmp
add
(bad)
retf
call
ss
retf
lea
jge
xchg
pop
pop
das
inc
int
pop
retf
mov
inc
mov
mov
push
stc
pop
mov
shl
sub
push
jge
out
or
daa
lods
add
cmp
jl
sahf
psllq
cmps
mov
and
and
in
scas
sahf
leave
dec
mov
push
mov
fld
fstp
sub
mov
pop
stos
imul
cmp
stos
mov
popa
dec
xchg
sub
push
sbb
in
cdq
repnz
aam
out
pop
xlat
or
cld
nop
or
iret
mov
fmul
into
shr
sahf
aad
test
(bad)
cwde
push
push
ret
loop
mov
(bad)
out
(bad)
into
fnstenv
dec
int
or
ds
and
lods
test
outs
aam
add
jl
and
ret
and
pop
loop
sub
(bad)
(bad)
dec
cmp
and
push
lahf
mov
(bad)
shl
shl
jno
loopne
retf
sbb
inc
stos
and
dec
das
sub
jbe
push
lods
scas
xchg
jmp
add
cmps
ret
sub
xor
pop
popa
jb
rol
cmp
jl
mov
imul
out
push
pop
xor
std
icebp
fsub
mul
fdivr
lahf
jne
in
adc
aas
cmp
js
rcr
stos
fdiv
out
mov
aaa
lahf
add
inc
iret
repnz
mov
pusha
xor
shl
hlt
call
xchg
fdivr
shl
or
je
pop
out
les
test
pop
cmp
aas
push
and
mov
adc
rcr
bound
pop
lods
das
push
mov
test
pop
pop
enter
test
and
pushf
(bad)
mov
les
xor
mov
adc
mov
mov
lock
imul
call
mov
mov
in
mov
aas
jo
fs
popf
dec
fidiv
cmc
cmps
imul
fadd
daa
loopne
pop
mov
sub
sub
iret
push
pusha
pop
sbb
not
mov
jmp
shl
outs
inc
sahf
aam
jp
aam
jbe
xor
jmp
fidiv
jg
mov
cmc
jmp
pop
mov
test
and
cmp
mov
and
test
push
in
and
scas
and
ret
jno
dec
xor
push
dec
mov
int
shr
fisttp
dec
stc
fcomp
pop
data16
mov
into
cmps
aad
push
jg
aad
loopne
pushf
add
inc
arpl
imul
add
pop
mov
mov
(bad)
sub
fistp
jmp
jmp
dec
mov
cmps
jle
call
mov
mov
nop
loope
rcr
adc
xchg
mov
push
sub
repz
and
shl
repnz
imul
mov
fidiv
hlt
jecxz
das
sub
sub
out
loope
push
xchg
cdq
and
and
ins
mov
push
inc
pop
stos
sar
sub
pusha
adc
ja
ret
je
data16
push
inc
test
in
pop
jo
sub
popa
mov
ror
mov
mov
test
jg
xchg
setno
fnsave
into
sub
ja
xor
xchg
or
push
xor
scas
fiadd
sti
aad
lds
or
adc
lahf
dec
out
adc
add
sti
inc
xor
hlt
loop
scas
in
cmps
adc
xor
lea
scas
adc
mov
retf
aam
clc
or
lea
mov
cmp
mov
mov
sub
call
lock
sub
pop
inc
inc
pop
push
test
mov
lods
int3
in
or
push
ins
in
mov
es
hlt
mov
push
inc
je
sahf
int
call
ja
add
imul
repnz
inc
cli
push
inc
inc
mov
shl
and
or
push
imul
mov
icebp
pcmpeqd
and
fbstp
add
stos
sub
mov
out
aaa
dec
push
mov
int3
mov
adc
bound
loopne
jge
ss
pop
mov
aaa
(bad)
je
(bad)
jle
in
arpl
stos
aaa
sub
inc
xchg
adc
xchg
adc
mov
rcr
rcl
push
pop
test
dec
cmps
pop
adc
xchg
outs
fisub
test
sti
push
ins
xchg
mov
rcr
jmp
and
cmps
cdq
push
mov
in
pop
ds
xchg
xchg
fdivr
int3
mov
sub
or
inc
out
xchg
ret
(bad)
add
xchg
enter
into
mov
outs
shl
popa
ret
push
aas
xchg
dec
push
das
jp
mov
push
inc
pop
pop
pop
mov
retf
pop
xchg
ins
sub
inc
sub
daa
shl
push
aam
adc
xor
into
xlat
(bad)
xchg
call
jecxz
es
loopne
call
cmp
fldpi
xchg
rol
xlat
lods
adc
shr
ss
dec
fmul
sub
dec
sub
pushf
adc
xchg
out
stos
int
jae
(bad)
aad
loop
jg
arpl
div
xchg
sbb
mov
mov
jb
loop
jbe
fldenv
dec
inc
dec
lock
or
fcmovbe
daa
mov
stc
inc
sub
int
mov
aam
pop
jae
mov
xor
adc
arpl
mov
lock
cmc
call
addr16
in
pop
adc
add
push
repnz
inc
sti
int3
icebp
or
mov
and
mov
cmp
dec
test
and
fisttp
cmp
xor
dec
int
or
ss
and
movs
or
ret
std
jl
xchg
ja
add
adc
loope
arpl
in
mov
push
and
mov
and
fidivr
lods
mov
xchg
sbb
add
daa
mov
retf
mov
jmp
scas
out
adc
mov
or
sub
pop
add
jmp
pop
sub
es
or
sbb
sub
inc
imul
movs
mov
lods
or
bound
push
pop
fbld
add
idiv
lods
in
loope
ins
or
test
stos
mov
data16
xchg
mov
adc
mov
int
fstp
lahf
cmps
xchg
ss
in
push
aam
out
into
dec
cmc
pop
in
xor
lock
mov
push
pop
mov
pop
jbe
xor
daa
lods
cmps
dec
enter
stos
(bad)
add
sub
pop
repnz
mov
inc
push
ds
xor
push
cmps
adc
aas
and
jnp
repnz
jno
adc
test
retf
(bad)
into
cmps
pop
add
cld
push
dec
sbb
pushf
mov
push
in
mov
sbb
shl
adc
mov
mov
and
adc
jne
inc
or
scas
mov
das
jge
push
inc
jecxz
sub
test
pop
mov
mov
mov
inc
xor
in
xchg
push
sub
cs
xlat
pushf
mov
jecxz
and
xchg
sub
dec
icebp
and
xchg
jge
xchg
(bad)
imul
inc
or
cmp
dec
pop
pop
icebp
outs
jp
enter
sbb
sbb
push
imul
mov
retf
mov
ret
jp
fcomp
das
imul
mov
pop
call
jle
dec
les
lods
pushf
fadd
inc
jae
or
lds
xor
pusha
pusha
or
aam
call
adc
jecxz
rcr
mov
popa
loope
push
mov
jecxz
les
inc
aad
add
repz
cmp
in
test
fidivr
sbb
jb
addr16
retf
mov
int3
push
test
jne
(bad)
jmp
stos
not
inc
add
mov
setp
(bad)
mov
outs
fmul
mov
cld
movs
outs
mov
mov
sub
fdivr
inc
(bad)
in
daa
dec
push
push
ret
jle
inc
and
imul
add
inc
xlat
std
xchg
push
sbb
add
push
mov
pop
jl
add
mov
retf
inc
dec
shl
inc
sub
push
jl
mov
es
hlt
mov
pop
jl
push
(bad)
std
mov
xchg
(bad)
jge
pop
push
std
xor
loopne
sub
jbe
adc
test
shl
sbb
jl
mov
sub
out
xchg
rcl
pop
jnp
add
pop
outs
je
pop
add
std
scas
ret
jg
and
out
ja
jg
mov
ds
jb
ins
mov
mov
out
das
loope
leave
cld
lods
xlat
mov
adc
stos
stc
xchg
mov
mov
in
and
sbb
xchg
xlat
ret
repnz
push
sub
ja
xor
and
iret
xchg
mov
retf
jge
call
neg
adc
mov
pop
sbb
rcr
ret
mov
pop
xchg
pop
cwde
dec
outs
sub
jecxz
pop
stc
sub
inc
lock
xor
ret
test
mov
inc
add
je
sub
jno
stos
ds
hlt
add
mov
jne
xchg
dec
aam
pop
jmp
rol
(bad)
adc
cmp
push
addr16
jb
jns
mov
in
retf
dec
aad
adc
loopne
mov
outs
(bad)
in
xlat
push
movs
jb
popa
and
stc
outs
aas
push
pop
in
jge
inc
cmps
mov
cmp
shr
xor
cmc
ss
mov
es
xor
cmp
mov
add
popf
mov
das
add
repz
mov
inc
mov
std
mov
cmp
mov
leave
mov
jb
fwait
add
pop
(bad)
gs
sbb
std
aas
cli
push
idiv
imul
mov
inc
xchg
das
bound
fld
mov
xor
sahf
cmps
(bad)
data16
jle
div
mov
loopne
jecxz
cmp
or
pop
fcomp
int
nop
xor
xor
or
lock
push
adc
inc
add
pop
jo
push
jae
and
sub
les
sub
ins
aam
xchg
mov
in
xor
and
mov
out
jge
mov
sbb
stos
imul
fld
xor
stc
pop
sahf
aaa
rcl
cmp
ins
push
test
sub
mov
pop
movs
xor
daa
xchg
jae
fwait
push
ds
(bad)
fist
jg
cmps
mov
pop
xor
daa
cmp
xor
shl
push
loopne
sub
pop
xchg
jmp
jg
imul
xor
in
mov
in
mov
loopne
cmc
pop
or
out
daa
addr16
or
mov
in
xor
xor
stos
xchg
xor
div
loop
fmul
mov
fild
or
icebp
stc
jmp
retf
sbb
push
imul
jmp
(bad)
jmp
sbb
cmc
cld
inc
call
and
inc
inc
xor
add
dec
sbb
add
leave
(bad)
jmp
cwde
add
out
sbb
les
mov
mov
push
ja
outs
adc
cmp
cdq
lods
mov
and
jg
hlt
mov
push
mov
pop
out
jge
inc
inc
push
add
pop
ja
xlat
outs
cwde
dec
cmp
test
push
and
xor
cmp
daa
cmp
jo
pop
mov
jmp
xchg
mov
inc
jne
out
shl
scas
aas
pop
mov
pop
inc
test
movs
icebp
or
cmc
inc
sub
popa
sbb
mov
add
pop
xchg
mov
xchg
or
aaa
movs
or
fs
sbb
xor
inc
dec
jb
pop
xor
sbb
jbe
mov
push
retf
and
pusha
jne
sbb
test
push
js
jmp
mov
and
jecxz
xlat
cmp
jbe
xor
and
pop
gs
(bad)
(bad)
pop
mov
fidivr
sub
add
movs
popf
mov
(bad)
adc
out
xchg
jge
mov
xchg
in
pop
dec
or
dec
mov
repnz
mov
xchg
ret
sbb
sub
sbb
mov
in
add
pop
hlt
add
push
inc
mov
cmps
cmp
movs
inc
mov
lds
lahf
dec
cmps
pop
dec
inc
cmc
push
(bad)
mov
sub
aaa
out
pop
xor
xor
dec
xor
pop
or
jg
cli
hlt
ss
sbb
loope
cmp
sub
mov
frstpm(287
mov
mov
std
or
mov
rcl
mov
sub
mov
shl
loopne
iret
add
jmp
fwait
adc
icebp
mov
(bad)
fstp
push
xchg
ja
and
or
fld
pushf
sbb
pop
jmp
xchg
xor
enter
cmp
test
xchg
rcr
ja
in
and
in
inc
pop
das
dec
daa
stc
jae
(bad)
loope
adc
fcmove
(bad)
data16
mov
fcomi
sub
push
icebp
mov
and
and
jge
adc
fisubr
pop
ss
sub
outs
xor
retf
adc
fnstcw
(bad)
mov
jno
push
cwde
mov
or
sahf
ins
fdivr
test
sbb
pop
popa
int
shl
test
xchg
jne
push
repnz
pushf
mov
fidiv
sub
pop
hlt
jp
adc
inc
pop
lea
mov
and
jge
pop
test
pushf
xor
jecxz
dec
and
xchg
xchg
mov
mov
adc
test
repnz
lods
push
cmp
shr
sub
test
(bad)
push
cmp
sbb
imul
out
sbb
or
pop
add
inc
ret
push
dec
xor
je
inc
add
cmp
inc
or
or
fwait
adc
or
add
outs
(bad)
ins
hlt
xchg
mov
ins
jge
cmp
or
cwde
mov
cmp
(bad)
jb
inc
xor
cwde
xor
add
dec
cmp
cmp
push
(bad)
in
ja
adc
call
lods
dec
(bad)
cmp
pop
and
jl
xchg
xchg
pop
sub
call
(bad)
push
in
push
in
mov
sbb
mov
loop
push
push
aad
pusha
xchg
and
outs
fcomp
xchg
mov
jecxz
jp
ror
int3
ins
sub
ins
mov
and
retf
test
int3
scas
pop
mov
sbb
loopne
pop
adc
mov
jp
add
ror
cmps
mov
jnp
mov
test
fucompp
je
aaa
mov
lahf
mov
jo
xor
sub
mov
cmp
iret
jae
les
rcr
mov
dec
dec
imul
test
and
add
test
inc
jnp
test
cmps
in
xchg
mov
icebp
jmp
mov
xor
jbe
cs
scas
adc
inc
add
mov
and
xchg
scas
push
sti
mov
pop
(bad)
mov
gs
or
test
and
in
xchg
dec
pop
scas
mov
loope
adc
icebp
popf
sub
add
mov
dec
ficom
jnp
xchg
cmp
fmul
fdiv
jg
jns
pop
ins
loopne
cdq
mov
add
repnz
fisttp
pop
dec
std
adc
sub
jle
data16
aam
js
inc
in
push
mov
xor
ins
lock
push
and
mov
into
scas
in
xchg
xchg
lahf
push
push
sbb
dec
pop
imul
adc
cmc
push
out
push
add
ror
sub
pushf
inc
pop
push
adc
loope
sbb
dec
inc
bsf
scas
ror
xor
idiv
xor
jg
call
push
and
pop
pushf
mov
xchg
cmp
dec
gs
cld
push
(bad)
dec
and
scas
mov
jmp
imul
adc
dec
jmp
mov
cs
mul
cmp
in
sub
out
jne
mov
xor
mov
movs
enter
lea
dec
xchg
and
push
sbb
cmp
adc
leave
imul
fbld
pop
jae
enter
sub
push
rcl
ror
mov
popf
ror
mov
jle
inc
rcl
idiv
call
xchg
dec
push
or
loop
gs
test
out
aad
pop
adc
and
and
sti
cmp
(bad)
jno
mov
xchg
xchg
jmp
sbb
arpl
imul
cmp
retf
fld
push
out
sahf
adc
mov
cli
xchg
push
loop
xchg
jae
dec
xchg
cmps
add
jl
fcmove
cli
cmp
call
xchg
add
pop
jl
sub
sbb
les
jg
rcl
mov
dec
out
(bad)
push
ret
adc
xchg
mov
and
push
popa
ins
and
pushf
ret
or
dec
add
and
inc
fstp
cmp
mov
xor
xchg
push
ficom
push
mov
daa
mov
cld
(bad)
adc
mov
cli
or
popa
mov
or
or
and
or
add
and
jmp
mov
dec
mov
pop
sbb
xor
dec
mov
inc
ret
scas
test
mov
repnz
mov
(bad)
sahf
mov
push
cmps
cmp
in
cmp
pop
fdivrp
idiv
retf
mov
adc
repz
jmp
das
mov
(bad)
push
aam
xor
adc
jmp
dec
jle
push
dec
push
xchg
jo
pop
xchg
int
fld
lods
fxch
pop
dec
xor
cmp
jnp
mov
sub
cwde
mov
jecxz
cmc
inc
es
ds
not
sbb
push
inc
movs
fisub
rol
dec
mov
not
into
add
xchg
retf
sub
inc
or
sub
add
mov
fsubr
inc
xlat
push
jne
xor
jecxz
gs
lea
mov
sub
push
dec
ror
imul
loopne
sbb
daa
push
mov
(bad)
cwde
push
frstor
xchg
cdq
pop
xchg
ror
cmc
daa
aad
or
xor
xor
mov
icebp
adc
dec
inc
rdmsr
mov
loope
pop
xchg
fstp
stos
dec
inc
in
jge
lods
jbe
jl
adc
add
in
scas
jns
mov
mov
jns
cmp
fs
es
fistp
imul
je
cmp
push
xor
test
loop
outs
mov
push
dec
dec
jae
jge
movs
add
(bad)
test
xor
jmp
sbb
movs
mov
mov
mov
pop
fst
xlat
jne
xor
or
xchg
fist
pop
mov
nop
mov
gs
call
adc
jns
hlt
loop
jge
jo
and
lock
and
adc
ret
sahf
mov
sbb
daa
fild
je
push
out
call
outs
icebp
mov
add
div
shl
mov
gs
shr
sub
fisub
fsubr
mov
test
pop
popa
cmp
cmp
and
(bad)
ss
int
rcl
shl
into
push
jmp
add
movs
mov
pop
sub
in
fidiv
fcmovb
add
mov
int3
clc
sub
(bad)
loop
retf
outs
mov
rcr
test
mov
cli
adc
adc
clc
xor
aas
imul
cwde
fcmovu
adc
movs
test
cli
lock
push
sbb
fcomp
jns
pop
pop
aas
and
scas
mov
and
dec
adc
add
jb
stos
and
cmp
mov
dec
xor
xor
lahf
jae
add
xchg
ds
pop
jae
sbb
push
push
cwde
cmp
pushf
sub
xchg
dec
mov
push
mov
pusha
int
xchg
call
push
mov
push
leave
push
retf
mov
arpl
xor
outs
jns
mov
cmp
ffreep
movs
mov
(bad)
cmc
arpl
pop
or
pushf
add
pop
sbb
push
cld
fadd
push
pop
dec
mov
sahf
and
pop
iret
arpl
imul
push
push
(bad)
jge
xor
test
jbe
adc
push
add
dec
out
pop
loopne
add
sar
ins
mov
pop
stos
lock
mov
(bad)
les
mov
js
push
cmp
imul
sbb
jg
adc
push
xor
cdq
mov
enter
add
and
test
pop
jns
sub
movs
ret
xor
stc
shr
mov
inc
pop
loopne
fcomp
cmp
add
add
dec
mov
cmps
pop
add
mov
cmp
test
neg
or
jmp
daa
ror
retf
push
adc
xlat
test
xor
add
xor
cmp
xlat
push
or
and
cmp
jecxz
push
jne
mov
call
pop
outs
shl
pop
stos
dec
in
cli
push
pop
push
xchg
test
xor
cmps
aad
sbb
or
das
aaa
sub
jbe
sbb
iret
xchg
cmps
aad
pop
mov
cmps
aas
(bad)
repz
mov
and
adc
xor
bound
push
mov
jb
cmp
or
enter
xor
pop
retf
inc
fisub
fs
fmul
shl
mov
mov
loope
mov
mov
or
dec
mov
scas
pop
cmp
sub
mov
fdivrp
mov
dec
lock
call
push
(bad)
push
aad
xchg
mov
add
adc
jae
push
pop
xchg
call
xchg
sbb
and
sub
dec
jge
sbb
pop
neg
cmp
lahf
outs
call
jge
push
xor
cdq
pop
adc
and
iret
cs
stos
js
inc
retf
adc
cmp
mov
or
sub
add
pusha
pop
inc
cdq
fist
jbe
imul
repnz
cmp
(bad)
out
push
test
xor
mov
mov
in
icebp
int
mov
push
ins
in
call
gs
push
inc
popa
mov
inc
push
add
cmp
(bad)
(bad)
push
mov
add
cmp
das
retf
xor
sar
call
mov
or
(bad)
popa
push
bound
adc
int3
(bad)
stc
dec
adc
lock
out
jb
cdq
scas
jbe
cmps
aas
inc
xchg
mov
or
sub
addr16
jbe
bound
out
movs
xchg
sub
fcom
dec
mov
mov
add
adc
cmp
inc
inc
pop
es
je
jnp
cmp
fwait
mov
lahf
xor
xor
cld
dec
lods
xchg
jo
pop
dec
mov
sub
(bad)
dec
mov
retf
jl
mov
mov
jl
daa
pop
mov
or
cmc
leave
gs
xlat
push
mov
add
sbb
pop
js
das
lea
cmp
mov
sub
sub
outs
adc
xlat
mov
ds
adc
je
mov
sub
sbb
ss
or
cli
jno
outs
lds
stos
pop
xchg
iret
mov
movs
pop
outs
fsubr
sub
cmps
rol
jbe
call
in
pop
sti
sub
sbb
sub
sahf
inc
(bad)
xchg
popf
iret
loop
scas
fnsave
dec
and
sub
aas
cmp
and
fucomi
dec
pusha
jb
sbb
cmp
sub
lea
or
and
push
mov
mov
(bad)
xor
dec
xchg
loope
rcr
push
fidivr
jmp
leave
and
xchg
ins
add
mov
loope
lahf
mov
(bad)
into
mov
mov
jle
pop
xchg
sti
call
addr16
push
movs
and
adc
jbe
scas
fs
call
scas
or
fdiv
loopne
cmp
push
inc
movs
ins
dec
sub
push
dec
repnz
xchg
dec
jb
xchg
lods
sub
jge
mov
int
push
repz
xor
cmps
pop
rcr
jle
and
mov
push
mov
push
jnp
int3
add
jbe
dec
push
ror
call
or
xchg
pop
dec
aad
aam
lods
mov
mov
jae
test
into
or
sub
push
jo
std
xor
das
sub
aas
xor
sbb
mov
sar
push
aam
jmp
jecxz
movs
ficom
jecxz
inc
neg
iret
mov
xchg
ds
ins
jmp
(bad)
xchg
sub
out
in
cli
jmp
or
cmp
mov
mov
fld
cmps
mov
lahf
mov
cmp
mov
push
jmp
enter
popa
ds
xor
pop
pop
add
jecxz
mov
mov
mov
mov
mov
mov
mov
and
aas
mov
neg
daa
push
xchg
pusha
xchg
push
gs
loopne
sbb
xchg
dec
xchg
outs
not
adc
js
je
out
add
out
(bad)
loope
inc
fiadd
adc
(bad)
sub
jnp
pop
sbb
push
lea
aas
sbb
leave
pop
adc
lds
jle
int
shr
ins
xchg
add
sti
dec
or
retf
add
dec
cmc
lea
add
pop
xchg
jmp
push
rcr
xor
adc
sti
jmp
fisubr
add
pop
les
and
add
mov
mov
adc
add
pop
fwait
dec
aas
jns
stos
sbb
in
dec
sub
out
push
jo
or
mov
les
lds
mov
aas
mov
sbb
push
xchg
ret
ins
enter
push
push
sbb
mov
call
xchg
fsubr
or
push
mov
xlat
pop
mov
push
aam
aaa
movs
sbb
pop
xor
dec
inc
mov
out
bound
mov
enter
out
jae
and
pop
call
and
sub
pop
and
or
inc
add
cdq
repz
cmp
jo
outs
mov
(bad)
sbb
inc
cld
add
out
repnz
or
xchg
ret
je
push
adc
sahf
ret
stc
sub
adc
adc
arpl
jge
dec
js
xchg
xor
retf
inc
and
out
add
adc
outs
loop
fisubr
test
das
push
cwde
adc
pop
inc
iret
call
ja
jmp
jno
jmp
xor
(bad)
leave
js
sbb
dec
out
jmp
mov
cmp
aam
sub
jmp
mov
jl
jne
fwait
add
jo
stos
or
pop
out
pop
cli
inc
lea
mov
addr16
and
and
and
jg
retf
adc
ret
jg
enter
xor
outs
push
outs
push
leave
cs
jne
and
inc
mov
mov
adc
and
test
sahf
add
lods
jmp
jmp
pop
sub
ds
je
test
mov
jp
bound
and
cdq
jle
sub
ja
in
cmp
repz
shl
push
xor
outs
jecxz
aaa
fdiv
call
mov
das
ss
stos
daa
push
mov
xchg
rcl
fiadd
outs
mov
aaa
adc
sti
pop
lea
add
jl
or
mov
aam
cli
pop
jg
xor
ficom
sbb
and
into
(bad)
pop
test
call
stc
or
outs
jmp
sbb
pop
adc
das
cmp
stos
push
dec
sub
clc
fild
call
std
jb
pusha
dec
adc
arpl
sbb
dec
jo
push
sbb
arpl
pop
aad
adc
push
mov
ret
mov
inc
sub
lods
pop
mov
and
loop
rcl
js
loope
dec
inc
outs
mov
cmc
out
dec
(bad)
out
(bad)
jno
jg
pop
xchg
jnp
sub
xchg
push
cmps
loopne
cs
cmc
mov
fsubr
shr
push
scas
js
pop
lock
push
fwait
jno
movs
sub
adc
dec
setne
mov
mov
aas
les
mov
imul
cmp
test
sahf
arpl
dec
(bad)
pushf
cdq
mov
jp
mov
rcr
popf
and
pop
ins
or
jmp
pop
xchg
shr
and
mov
das
std
leave
pop
aas
add
push
clc
in
jne
stos
(bad)
push
mov
inc
lods
cmp
xchg
mov
out
jle
inc
mov
push
push
dec
imul
cmc
xchg
fdivr
mov
or
fxch
mov
or
(bad)
icebp
sahf
rcl
sar
mov
data16
sbb
mov
out
into
xchg
jmp
lods
scas
ss
pop
sahf
jle
dec
(bad)
aad
mov
stos
sub
mov
sbb
mov
je
jge
ror
or
test
cmps
dec
out
pushf
dec
out
cmp
ret
loop
femms
mov
add
jb
jmp
lods
ret
jp
in
adc
lods
mov
pop
jge
aas
(bad)
and
fyl2xp1
dec
jle
mov
stos
xor
push
popf
inc
(bad)
mov
mov
repz
cmps
(bad)
sub
xlat
xor
test
sub
ss
sub
movs
pop
mov
cmp
shl
in
rcl
ror
mov
movs
jmp
addr16
and
cld
ret
mov
mov
repz
dec
out
sahf
repnz
mov
mov
dec
dec
aad
icebp
(bad)
cmc
mov
cwde
jbe
mov
or
loop
or
dec
mov
imul
inc
fld
int
inc
mov
and
fisttp
jmp
jle
sti
ss
sub
ins
vpcmpgtb
stos
inc
mov
(bad)
imul
or
cmp
ss
lods
aaa
dec
sbb
xor
cdq
mov
loop
or
imul
lock
mov
or
sbb
sub
jle
rol
mov
mov
es
sbb
jbe
jo
mov
mov
inc
cli
out
cwde
aad
adc
jno
out
(bad)
mov
xchg
inc
and
pusha
pop
retf
sub
or
rcl
sti
(bad)
lods
int
dec
add
shl
ins
xor
mov
arpl
(bad)
cmp
push
popa
fnstcw
jo
ss
rcr
popf
mov
lds
cmc
lods
cmps
xchg
mov
add
or
out
jle
cmps
pop
fld
push
stos
ss
cli
je
pop
pop
std
mov
ror
out
xchg
cmp
xchg
sub
inc
and
ret
iret
xlat
fisttp
xchg
popa
push
mov
test
(bad)
and
sbb
jge
bound
mov
jne
fdiv
popa
mov
imul
mov
(bad)
ds
scas
lods
ja
jno
shr
inc
jg
xchg
sbb
cmp
(bad)
popf
add
sbb
xchg
jno
ret
sar
ret
jmp
test
xchg
sub
push
out
retf
and
sbb
stc
dec
mov
inc
mov
fwait
cmp
fcomp
test
loope
pop
imul
nop
fsub
mov
jns
hlt
xor
pop
lock
add
pusha
leave
pop
add
aam
jmp
into
test
pop
xor
mov
movs
fild
push
pop
in
mov
dec
frstor
inc
pop
push
nop
call
push
and
sub
gs
pop
xlat
sub
inc
mov
popf
cmc
fsub
ret
sub
or
add
sub
aaa
leave
sbb
sbb
lea
fisub
mov
mov
fld
push
fxtract
jmp
adc
test
mov
jbe
cmc
sub
cmp
cmp
xor
enter
iret
xchg
cld
add
pop
and
pushf
add
mov
jmp
lahf
aam
int3
lahf
popf
arpl
aad
adc
sub
outs
or
add
sbb
fisttp
sub
adc
sub
or
push
jl
mov
dec
in
mov
dec
in
push
(bad)
out
push
(bad)
out
pop
lds
push
retf
adc
add
push
inc
xchg
mov
xchg
cld
out
lock
pop
mov
cmps
call
out
jmp
sbb
pop
jecxz
dec
ss
test
or
repnz
xor
mov
loop
mov
push
inc
jnp
ret
fidivr
outs
int
fcom
mov
outs
and
int3
xor
imul
popf
in
div
mov
mov
cmp
dec
mov
cdq
pop
in
call
test
jmp
sbb
movs
clc
cmps
(bad)
mov
loope
clc
add
neg
push
(bad)
mov
pop
dec
out
add
aaa
sub
xchg
or
out
mov
cli
add
push
push
aam
pop
push
or
ret
pop
(bad)
adc
inc
inc
jns
(bad)
(bad)
sahf
mov
pop
cli
push
aaa
ret
(bad)
xor
xor
push
hlt
scas
arpl
or
cmp
or
cmc
movs
inc
and
add
leave
mov
or
imul
cmp
gs
cmps
fisub
xor
sub
aad
js
push
or
mov
pop
bound
add
iret
ja
test
(bad)
fisttp
jb
cmps
iret
push
fwait
in
hlt
(bad)
cmp
fisub
push
add
jnp
daa
jle
sbb
sub
(bad)
ss
fistp
mov
mov
pop
out
sub
or
xchg
retf
scas
or
xor
fisub
loopne
in
mov
jl
push
int3
cs
div
int3
int3
or
push
or
push
(bad)
mov
jl
inc
adc
mov
push
pusha
repnz
inc
outs
test
inc
sbb
mov
jo
and
lods
(bad)
jne
push
imul
test
(bad)
test
mov
cld
or
mov
pop
popf
inc
std
xchg
fs
adc
iret
xchg
pop
xchg
dec
push
lds
pop
pop
push
nop
gs
inc
adc
mov
les
test
imul
jecxz
loope
pop
aas
lea
retf
iret
mov
fcmovbe
mov
int
jge
test
test
mov
test
(bad)
mov
mov
push
pop
cmc
cwde
outs
and
shl
imul
inc
mov
dec
mov
dec
jno
inc
shl
pop
sub
es
retf
mov
int3
add
mov
jne
mov
test
out
aam
movs
xor
ss
es
adc
inc
sub
cmp
pop
pop
xchg
cmps
repz
xchg
mov
push
cli
push
mov
test
in
fld
xor
jmp
push
push
mov
xchg
mov
cld
mov
in
hlt
lods
inc
out
inc
test
cmps
dec
loope
pusha
(bad)
je
pop
mov
lock
mov
repz
jecxz
(bad)
xchg
cmp
jge
mov
jge
sub
and
add
call
lahf
pop
fsubr
mov
mov
mov
mov
dec
and
fldcw
or
add
out
bound
lahf
push
jae
repnz
sub
push
cwde
xor
push
xchg
mov
clc
xlat
retf
and
inc
pop
xor
jl
cmps
shl
add
mov
out
rep
mov
jg
fnsave
pop
cmp
xchg
xor
test
xlat
pop
shl
lds
stos
pop
ret
imul
inc
xchg
pop
sub
or
mov
jg
clc
inc
mov
outs
shr
test
pop
jg
sub
dec
fstp
add
jl
shl
mov
cmp
in
icebp
(bad)
dec
pop
hlt
mov
push
dec
in
push
dec
gs
xchg
mov
int
ss
inc
lods
mov
dec
in
fld
push
mov
(bad)
cmp
jmp
call
jge
jle
aas
ror
mov
imul
xchg
jae
repz
inc
jl
sub
(bad)
not
fnstcw
fcom
enter
shl
shl
test
xchg
sbb
sbb
cs
xor
into
sar
cli
jecxz
outs
mov
lds
or
fwait
mov
call
mov
mov
scas
shr
and
jno
pop
cmc
mov
cwde
cmps
loop
pop
mov
enter
inc
loop
int
push
or
mov
mov
nop
push
out
(bad)
rcr
pop
std
retf
inc
adc
inc
add
mov
add
push
and
(bad)
jge
out
jge
mov
std
mov
ins
test
dec
jae
xlat
cmps
ins
shl
daa
mov
loopne
cmp
ds
fwait
xlat
fnstsw
push
retf
stc
xlat
jmp
xor
and
or
iret
movs
pop
or
aas
mov
addr16
dec
fldcw
bound
mov
int
jns
sub
xchg
xchg
mov
arpl
push
or
fiadd
test
mov
add
out
cmp
pop
xor
sti
xchg
mov
ret
push
push
push
leave
mov
push
sbb
and
ins
mov
cwde
cli
pop
jo
mov
inc
sub
sub
imul
xor
cdq
and
dec
inc
imul
dec
mov
sub
in
push
fisub
jmp
(bad)
jg
loop
repz
mov
dec
mov
inc
sub
lahf
je
and
icebp
rol
push
mov
ja
sbb
cmc
fmul
mov
dec
ret
push
pop
push
fisub
jmp
std
movs
mov
(bad)
mov
push
push
adc
cmp
sub
sub
sbb
push
fadd
or
lods
xor
sub
sbb
retf
icebp
mov
or
cdq
mov
call
inc
push
inc
push
xchg
arpl
xrelease
mov
out
mov
repz
and
xor
xchg
mov
out
fwait
mov
pop
repz
iret
mov
movs
mov
mov
ret
xlat
and
out
and
ja
jl
in
imul
push
xor
mov
shl
or
pusha
int
inc
or
cli
mov
mov
sbb
jns
cmp
pop
stos
or
jmp
ficomp
mov
mov
in
mov
jns
test
pop
pushf
retf
or
or
call
test
dec
mov
ret
cmp
cmp
pop
in
lea
xchg
inc
ret
add
movs
jbe
clc
pop
jmp
ins
xor
popa
dec
inc
cmp
(bad)
inc
dec
and
dec
jo
mov
cmps
jo
enter
sbb
mov
fbstp
push
fs
cmps
xchg
xor
mov
retf
push
ret
rcl
movs
adc
cmp
int
nop
pop
push
mov
imul
jle
or
std
mov
ins
push
aad
pop
sbb
push
icebp
ss
push
pop
test
call
cmp
rcr
ja
mov
or
ret
ins
fs
sbb
pop
rol
inc
pop
dec
sti
dec
call
jle
out
ins
sub
xchg
push
div
movs
mov
lock
retf
inc
xor
or
cs
ja
sbb
jl
pop
test
cs
adc
or
mov
call
test
push
inc
imul
dec
aad
dec
add
mov
and
sub
outs
mov
imul
jl
mov
data16
out
stos
xchg
mov
and
loope
and
and
pop
xchg
fmulp
aam
or
int3
and
dec
mov
lahf
sbb
call
or
mov
push
jbe
movs
mul
or
push
push
in
mov
cs
in
push
dec
out
xchg
push
xor
mov
mov
inc
ins
mov
push
cmp
or
shl
psadbw
leave
daa
add
pop
xor
pop
aas
out
jns
mov
xor
and
mov
sbb
fimul
mov
out
xchg
jle
mov
fist
aad
dec
daa
cmp
bound
int
ficom
sub
sbb
or
pop
push
stos
sbb
and
jae
jecxz
ret
jl
sbb
xchg
movs
movs
fdivr
fist
or
and
neg
jle
xor
outs
mov
loop
mov
shrd
xchg
(bad)
push
ja
pop
sbb
movs
cmp
fstp
dec
fwait
shl
(bad)
mov
mov
cmp
mov
sbb
mov
or
mov
and
cmp
or
add
call
inc
outs
and
and
int3
cmp
xor
fisttp
jecxz
lea
pop
fild
cmpxchg
fmulp
pusha
jecxz
dec
pop
sub
fdivr
imul
in
je
jno
and
xor
ret
cmps
fsub
xchg
inc
adc
adc
stos
inc
cli
les
adc
dec
enter
inc
stos
mov
sub
lea
xor
lea
mov
(bad)
outs
pop
xor
popa
leave
fld
sub
add
arpl
fidivr
sub
fdiv
fidiv
jnp
(bad)
push
scas
push
js
adc
jb
pop
cs
fcmovnu
call
hlt
inc
jns
enter
mov
dec
call
sti
adc
pop
stos
mov
xor
es
jns
mov
int3
xchg
inc
lahf
push
scas
loop
adc
adc
dec
inc
test
mov
gs
mov
or
mov
mov
test
push
cld
mov
jmp
movs
hlt
push
(bad)
dec
mov
sbb
and
pop
fdiv
mov
mov
sti
dec
add
mov
inc
(bad)
mov
cmp
sub
es
sbb
mov
inc
push
jns
jo
fs
xchg
enter
daa
lock
push
jle
mov
xor
push
ins
std
cmp
fmul
dec
jge
adc
fadd
pop
ret
push
cld
mov
mov
les
and
ss
ror
pop
cmp
inc
mov
mov
ret
inc
lds
inc
mov
adc
jp
in
push
push
pop
pop
mov
cdq
or
invd
stos
call
sar
aam
lods
jge
(bad)
cmp
cmp
cmp
test
inc
popa
fwait
push
(bad)
stos
adc
push
xchg
les
(bad)
stos
push
sbb
out
daa
xor
mul
xor
leave
call
sbb
cmp
imul
mov
test
in
sub
out
out
mov
fs
sbb
and
fucomp
std
fnstcw
(bad)
scas
sbb
add
xchg
jmp
lock
aas
jmp
test
mov
fistp
xchg
add
jae
fs
cmp
sub
arpl
test
stos
popa
(bad)
sbb
pop
add
mov
and
pop
mov
test
dec
jg
test
repnz
sbb
push
dec
cmp
push
inc
or
cmps
mov
test
mov
jne
sbb
cmp
dec
mov
push
push
mov
or
rcl
ins
dec
pop
fsubr
ds
jo
retf
movs
or
mov
repnz
and
stos
ret
imul
mov
xor
or
adc
(bad)
adc
not
fwait
cmp
jp
sub
lods
movs
sbb
add
push
enter
inc
in
fild
xchg
enter
inc
dec
push
shl
sbb
jnp
or
sub
mov
icebp
cs
in
leave
cmp
mov
sub
fsub
nop
lea
lods
ret
ins
xor
retf
int3
sub
xchg
das
and
bound
in
mov
sbb
xor
clc
cmps
xchg
sub
data16
or
xlat
fcom
iret
into
fnstsw
cmp
sbb
pop
cmp
pushf
or
in
cdq
mov
lahf
mov
cmc
test
repnz
mov
dec
fnstcw
pop
jmp
jmp
or
sub
push
jae
(bad)
dec
aaa
inc
inc
push
test
retf
cmp
cmp
push
cli
repnz
cwde
repz
sbb
or
test
mov
daa
add
sub
je
and
sbb
repnz
sub
sar
imul
cld
outs
cli
data16
cmp
in
jecxz
fsubp
fdiv
mov
lods
ds
in
ins
dec
adc
mov
mov
div
add
xchg
mov
pushf
adc
jmp
test
adc
pop
clc
(bad)
add
mov
and
xchg
cmp
sahf
pop
into
mov
adc
push
(bad)
out
(bad)
jbe
ds
popf
sar
or
out
popf
arpl
jecxz
push
or
jns
mov
repz
inc
jmp
xchg
rol
adc
ret
push
imul
mov
pushf
mov
sub
test
mov
shl
sub
dec
sbb
push
mov
cmps
ins
jo
mov
sbb
imul
rcr
cdq
stos
jnp
repz
adc
int
(bad)
add
cld
dec
adc
scas
add
ret
mov
fbstp
popf
pmulhuw
(bad)
jb
inc
outs
mov
sub
daa
xlat
mov
imul
test
rcl
into
pop
jb
mov
or
and
(bad)
icebp
ds
dec
pop
outs
shl
mov
fidivr
call
xor
sbb
push
inc
mov
mov
pop
or
fcom
pop
outs
pop
xchg
push
cwde
lock
test
or
sub
gs
pop
stc
jo
inc
shl
out
dec
pop
add
scas
test
jmp
iret
pop
ret
aam
pop
cwde
scas
repnz
outs
in
cmps
ins
cmp
xor
inc
mov
cmp
or
adc
leave
sbb
dec
jmp
jne
addr16
retf
mov
lfs
inc
loop
jnp
shl
and
mov
inc
xor
mov
mov
dec
lea
or
mov
adc
rol
lea
jae
push
jl
mov
addr16
cmps
push
adc
mov
jae
fstp
mov
adc
jo
outs
xor
inc
add
cld
push
fst
sbb
cmps
sub
sub
inc
loop
add
cdq
pop
jecxz
sahf
or
cmp
es
test
inc
pop
popa
or
clc
sbb
push
rcl
inc
fist
lock
aaa
test
bound
ror
sbb
or
(bad)
cli
xchg
out
sbb
out
jmp
scas
jmp
pusha
cmps
lahf
ss
cli
xchg
jmp
js
mov
aaa
cmp
in
pop
xor
out
jmp
adc
loope
ins
les
iret
mov
push
adc
stos
xor
sar
jge
repnz
stos
pop
inc
lea
push
jb
je
or
mov
mov
xchg
dec
in
pop
lahf
dec
pop
repnz
or
cmps
mov
jmp
pop
sti
xor
pop
loop
sti
pop
mov
cmps
cmp
popf
pop
enter
push
cli
push
xor
jp
shr
sub
pop
mov
sbb
ror
dec
mov
push
mov
arpl
or
idiv
inc
lds
daa
scas
sbb
jmp
and
scas
cwde
enter
shr
jecxz
inc
xor
mov
not
add
les
outs
arpl
or
dec
mov
mov
jbe
arpl
push
retf
xor
fcom
js
mov
(bad)
movs
pusha
loope
movs
mov
mov
stos
fucom
sub
lods
cmp
or
daa
fsub
jae
add
pop
xlat
sbb
mov
lds
pop
cdq
dec
ret
sub
test
fld
mov
jp
adc
ja
mov
add
dec
jmp
jbe
cmp
gs
retf
mov
xor
push
jl
xchg
test
push
jb
scas
sar
inc
adc
(bad)
jns
or
cld
xor
add
adc
out
jmp
call
xor
lds
jno
jne
ror
sbb
shr
aam
nop
xchg
add
xchg
ds
cld
addr16
xor
xor
cmp
cmc
add
(bad)
jmp
mov
sbb
retf
jle
das
mov
popa
push
sbb
aam
push
imul
mov
add
cwde
arpl
fwait
arpl
mov
mov
mov
inc
jl
dec
push
icebp
push
mov
mov
ret
push
add
jg
cwde
add
(bad)
cmp
in
mov
stos
into
das
inc
test
and
cmp
aas
jmp
(bad)
scas
sbb
or
jmp
jo
fisub
xor
jge
fimul
stos
dec
mov
icebp
cmp
xchg
xor
jg
repnz
inc
(bad)
mov
sbb
ficomp
ja
fidivr
lods
icebp
or
pop
inc
and
sbb
xor
xor
popa
ins
dec
cli
ret
mov
dec
xchg
dec
mov
pop
in
mov
xchg
inc
sub
jle
adc
ss
mov
pop
cld
xchg
cmp
inc
add
pop
mov
icebp
fnsave
mov
inc
fisttp
or
out
pop
inc
shl
cmp
imul
mov
or
outs
fidivr
add
jl
sbb
xchg
repnz
pusha
fmul
mov
aad
xlat
(bad)
sub
xor
mov
jo
loop
scas
push
sbb
test
adc
push
(bad)
mov
mov
xor
cmp
dec
mov
movs
xchg
sub
imul
xor
or
mov
repz
dec
fisttp
sub
pop
ret
push
(bad)
inc
into
mov
jl
mov
enter
and
mov
mov
push
aam
sub
jp
or
cmp
leave
push
inc
in
or
xor
cmps
cmps
dec
outs
ds
mov
dec
pusha
xor
cdq
sbb
mov
lds
lods
fcmovu
cmps
xchg
cli
(bad)
in
inc
ficom
inc
jp
xchg
jno
dec
lods
cmp
or
fsubr
xchg
and
or
cmp
jbe
into
mov
and
jmp
jae
jp
cs
xor
sti
fcomp
mov
add
push
enter
fadd
inc
cmps
outs
out
(bad)
pop
rcl
nop
dec
adc
popf
stos
not
mov
out
popf
(bad)
lock
pop
mov
sub
mov
push
cmps
addr16
mov
jecxz
lds
repnz
and
jge
cmp
(bad)
fist
xchg
adc
jge
mov
aam
rol
in
lods
inc
push
jo
sbb
in
out
retf
outs
hlt
or
mov
test
sub
xor
mov
lods
jp
pop
(bad)
mov
(bad)
cmc
push
adc
mov
and
lahf
add
mov
in
aad
cli
mov
cmp
push
repz
mov
dec
dec
jns
xchg
or
bound
int
arpl
retf
inc
in
iret
mov
fadd
xchg
jmp
inc
cwde
movsx
cmp
popf
sbb
lds
shr
retf
pop
call
cmp
xchg
sbb
mov
jl
sbb
gs
shr
test
pop
xchg
loope
push
popa
(bad)
bound
push
lahf
aas
in
xchg
jle
sbb
cmp
pop
fwait
ror
arpl
stos
push
iret
(bad)
cmp
in
scas
pop
jg
ins
cmp
lahf
loope
cli
jle
sti
mov
data16
adc
pop
ins
push
in
ja
aas
jp
imul
test
jg
pop
mov
test
(bad)
push
pusha
and
scas
cli
dec
jp
(bad)
xor
hlt
out
sub
cmps
sbb
mov
and
push
out
or
int3
fiadd
mov
or
sbb
jno
add
cmp
cmp
stos
sub
mov
inc
ror
or
in
cmp
lods
mov
dec
mov
mov
push
push
hlt
stos
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
jmp
cli
push
inc
in
adc
inc
in
movs
xchg
mov
push
dec
in
mov
push
push
in
push
pop
jmp
dec
in
push
inc
in
mov
push
dec
int3
mov
push
fs
inc
ins
ficom
push
cmp
mov
push
dec
fdivr
mov
mov
mov
icebp
fsub
out
lods
pop
and
and
je
cmp
mov
shl
pop
(bad)
nop
sub
add
adc
dec
js
sbb
into
ret
es
xor
or
pop
ss
add
scas
add
mov
int
fs
mov
adc
aad
out
jbe
popw
push
jecxz
sub
adc
gs
dec
scas
jmp
xor
cmp
aad
sbb
or
jg
cs
out
dec
inc
xchg
adc
and
pop
out
ret
jae
daa
fwait
jns
xchg
cmp
mov
sub
cs
xchg
stc
cmc
pushf
(bad)
or
retf
pop
pop
xchg
stos
jp
clc
stc
cdq
outs
lds
and
out
jb
or
pop
adc
xchg
movs
loopne
outs
icebp
and
mov
enter
pushf
fst
and
mov
xchg
scas
lods
and
pop
sub
mov
hlt
push
lods
mov
jo
stos
call
jbe
test
mov
jg
fistp
xor
push
adc
scas
imul
mov
push
rcr
adc
retf
xchg
inc
js
and
mov
push
stc
test
pop
pop
and
(bad)
inc
cmp
stc
mov
inc
mov
xchg
adc
xchg
adc
jne
add
pop
jns
mov
stc
mov
les
xor
cmp
pmaxub
mov
sar
add
jp
cmp
cmp
inc
fsubr
aas
sub
and
mov
jbe
jae
or
xor
fxch
movs
leave
(bad)
sub
aas
push
mov
cli
mov
mov
push
mov
and
mov
ins
(bad)
fwait
lahf
cmp
mov
test
inc
xor
iret
cmp
mov
push
(bad)
pop
inc
imul
shl
pop
adc
xchg
fninit
xor
ds
or
out
(bad)
sbb
(bad)
jne
mov
(bad)
call
fld
(bad)
retf
(bad)
ret
mov
inc
jmp
push
pop
repz
rcr
sub
pop
neg
outs
inc
mov
or
dec
imul
mov
cli
int3
jp
dec
enter
call
push
pushf
mov
inc
sbb
and
test
dec
dec
add
cmp
adc
adc
rcl
lods
push
push
ins
push
mov
inc
cmp
push
(bad)
into
add
in
pop
mov
pop
in
mov
mov
sbb
cld
mov
push
push
in
stos
push
dec
cld
call
je
push
fcomp
les
jne
mov
pop
in
mov
scas
fwait
in
stos
hlt
inc
cmp
push
pop
ins
mov
sbb
inc
mov
pop
and
mov
pop
sub
scas
ins
out
gs
sbb
mov
loop
push
and
rcr
jbe
call
test
mov
test
stc
sbb
cmp
(bad)
or
mov
fadd
aam
push
scas
sbb
aam
sbb
lea
pop
call
inc
or
pusha
jge
cmp
and
jb
mov
adc
adc
xchg
frstor
add
cmp
aas
std
inc
dec
xchg
or
xchg
cli
sbb
out
push
cmp
sub
movs
cdq
outs
and
or
lea
fistp
inc
nop
addr16
adc
addr16
dec
and
mov
fs
stos
fstp
(bad)
xchg
test
push
sbb
xchg
xor
nop
xor
jl
mov
test
add
loopne
mov
loop
mov
or
ins
mov
cmps
push
outs
or
fdivr
mov
rcpps
stc
fsubr
rcl
sti
call
push
sbb
adc
jae
popf
adc
sub
jns
clc
adc
sub
add
mov
stos
les
dec
pop
jmp
enter
push
xchg
jg
pop
add
pop
jmp
idiv
call
cwde
cmp
push
loop
mov
pop
arpl
fdivr
pop
mov
adc
mov
push
pop
clc
adc
xchg
cmps
out
cwde
hlt
inc
test
daa
cmp
imul
sti
inc
and
sar
xor
inc
out
das
out
mov
jno
xchg
mov
fidivr
(bad)
pop
shr
nop
xchg
or
mov
push
aaa
mov
mov
mov
adc
rcr
mov
and
cdq
movs
inc
cmp
mov
mov
sbb
push
stc
sub
xchg
mov
inc
xchg
lock
jecxz
(bad)
stc
leave
bnd
loopne
cdq
push
add
jns
sti
adc
movs
aam
(bad)
and
frstor
aad
ret
shl
cmps
shl
iret
pop
pop
shl
mov
mov
imul
inc
mov
bound
jp
cld
add
pop
sub
shr
cmp
dec
pop
pop
(bad)
push
pop
push
push
cmps
aas
bound
setae
or
jns
mov
jmp
hlt
jae
cmp
jbe
and
sbb
sbb
call
sahf
pop
shl
push
xor
rol
fisubr
jg
test
or
retf
adc
lds
mov
stos
dec
jns
push
mov
sbb
js
ins
pop
cmp
sbb
mov
or
ins
inc
vmulss
jmp
xor
jb
mov
cmp
push
dec
repnz
mov
lods
sbb
sbb
inc
retf
or
test
push
jge
jl
pop
sahf
enter
icebp
pop
push
cmp
and
mov
sbb
(bad)
adc
sbb
push
mov
call
daa
mov
mov
pop
loope
aas
(bad)
out
pop
fbstp
or
xor
jmp
cmp
xchg
movs
jno
pop
(bad)
fwait
and
push
cmp
dec
popf
xchg
mov
adc
dec
jbe
or
js
jbe
dec
mov
mov
mov
ret
dec
pusha
ja
test
dec
movs
xlat
and
push
mov
outs
ror
mov
mov
xchg
jbe
cmps
out
push
out
hlt
gs
or
call
in
mov
push
dec
hlt
mov
push
ins
in
sahf
aam
xor
int
mov
add
adc
or
push
jmp
mov
inc
ss
retf
mov
outs
mov
push
test
xor
retf
xor
mov
sbb
test
loope
dec
add
out
cwde
mov
sbb
dec
lods
push
(bad)
(bad)
pushf
pop
pop
mov
imul
scas
push
clc
loop
mov
inc
movs
cld
sub
bound
out
pop
sub
and
jno
pop
mul
and
push
inc
add
xchg
out
mov
out
movs
fild
imul
sub
std
aaa
das
fst
adc
enter
fidivr
xlat
jmp
push
(bad)
loop
ds
je
les
movs
xchg
mov
dec
push
sbb
ss
mov
and
xchg
dec
jnp
sub
dec
push
in
ret
jmp
push
daa
out
popf
xor
xor
cmps
dec
xor
out
xor
and
int3
into
pop
mov
and
sbb
movd
jo
inc
cmp
xchg
and
inc
sub
test
dec
cld
rcl
sbb
ds
and
rcr
fnstenv
adc
mov
cmp
cmp
or
loopne
cmp
mov
jmp
fwait
sahf
sub
adc
adc
pop
inc
lods
sbb
(bad)
jb
jle
cmp
in
(bad)
xor
mov
popf
jo
(bad)
inc
popf
mov
sbb
xor
(bad)
cmp
sbb
mov
cmp
into
mov
lods
dec
dec
mov
jmp
xor
outs
sub
jns
fdivr
jno
jp
or
fmul
lahf
jo
(bad)
mov
out
lods
mov
and
sub
sbb
mov
test
int
or
or
xchg
das
ror
(bad)
in
adc
idiv
push
sar
outs
loop
jmp
scas
jbe
pop
pop
push
jecxz
xor
in
push
test
xor
jp
adc
sub
adc
xor
test
inc
sbb
lds
arpl
in
mov
and
cmp
ss
rcr
mov
in
mov
adc
jae
pop
cmps
call
popa
jle
pop
mov
adc
ss
push
mov
cmp
dec
leave
leave
out
mov
xchg
inc
sub
pop
(bad)
(bad)
outs
fnstenv
adc
(bad)
mov
sbb
clc
mov
push
add
and
shl
adc
test
xchg
xor
popf
xchg
out
mov
pop
dec
cld
inc
sub
push
inc
hlt
mov
push
in
mov
dec
in
xchg
push
pop
jl
push
(bad)
les
xchg
cmp
lds
sahf
push
jle
add
cmp
xchg
mov
mov
inc
in
dec
mov
mov
popa
jo
ror
xlat
xor
pop
je
loope
and
add
lds
mov
fadd
sub
rol
idiv
pop
cmp
repz
xchg
in
lds
sbb
jno
ror
dec
pop
hlt
cmp
iret
xor
imul
movs
jb
pop
out
bound
out
call
push
popf
cmp
add
sub
or
(bad)
sub
or
mov
or
adc
jo
cmps
add
push
inc
stos
xor
call
movs
popf
jbe
push
hlt
or
jmp
fstp
jne
mov
push
sub
scas
jg
fld
inc
add
inc
jecxz
(bad)
jg
js
imul
mov
cmp
or
dec
aad
or
jmp
aam
loope
xor
xor
cld
test
push
nop
clc
ins
jb
mov
pusha
jo
dec
dec
mov
push
sbb
(bad)
ins
or
inc
pop
push
sub
sub
je
outs
ds
mov
ins
test
sub
(bad)
jno
mov
mov
mov
lahf
push
lock
mov
lock
sar
and
icebp
inc
sbb
jmp
leave
sbb
adc
or
add
je
adc
jg
(bad)
cwde
push
shl
mov
dec
mov
cmp
pop
adc
out
retf
cmps
repnz
fwait
jbe
inc
mov
cli
adc
mov
int3
fwait
ja
adc
pop
xor
pop
out
mov
(bad)
cmp
fsub
repz
dec
cli
add
mov
and
or
shl
jae
ins
mov
call
push
shl
bound
outs
xchg
ret
mov
adc
pop
add
add
cmp
cmc
xor
jecxz
push
push
fsub
push
popa
je
cmc
lahf
bswap
repz
jae
or
ret
movs
jmp
imul
xor
retf
mov
push
push
sbb
sub
jns
std
mov
sub
cmps
push
cmps
jbe
mov
icebp
mov
push
pop
or
ins
retf
adc
jmp
ret
mov
out
jo
ins
(bad)
nop
imul
inc
out
in
js
push
inc
or
shr
cmps
pop
cwde
hlt
in
add
mov
aas
rcl
daa
(bad)
stos
or
sbb
scas
aaa
popa
and
sbb
cmp
(bad)
pushf
test
loopne
mov
inc
jp
sub
lods
cmp
or
cmp
xor
and
mov
or
mov
sbb
sub
icebp
and
in
fisub
aaa
mov
sbb
sti
les
jle
mov
mov
pop
pop
add
imul
rcl
fsub
inc
or
push
stos
or
push
dec
pop
in
lahf
pop
js
popa
stc
mov
div
fnsave
jno
gs
js
push
ss
push
imul
test
sub
push
call
dec
xchg
out
xchg
out
popa
mov
jl
mov
ja
adc
pop
xor
in
stos
jae
mov
bswap
cli
xchg
(bad)
cmps
imul
adc
xchg
xor
dec
call
or
ja
fwait
sub
popa
ja
push
pushf
push
mov
arpl
or
mov
(bad)
call
out
adc
mov
mov
shr
sub
test
adc
inc
sahf
pushf
imul
and
pop
cmc
retf
add
repnz
jbe
adc
int3
cmps
loope
sbb
mov
in
sub
push
ins
movs
stos
push
ins
in
jmp
jl
push
ins
gs
xchg
inc
hlt
mov
in
out
and
push
pop
ret
add
and
jecxz
stos
mov
jmp
scas
sar
shr
(bad)
push
pushf
jmp
pop
or
in
add
stos
outs
(bad)
loope
xchg
mov
cmps
js
sbb
jecxz
push
leave
movs
lahf
stc
inc
jl
push
inc
neg
mov
inc
scas
repz
push
inc
cs
jns
fild
rcr
mov
sbb
jns
pop
cmps
pop
pop
ror
add
mov
scas
pusha
push
es
mov
aad
jne
mov
fnstcw
mov
jo
mov
pop
pop
mov
sar
jns
fsubr
inc
ret
outs
xchg
repnz
scas
jne
inc
(bad)
(bad)
pop
retf
aam
mov
ret
pop
stos
loopne
and
or
jmp
dec
inc
sbb
or
fadd
and
out
cmps
or
fwait
jns
mul
inc
scas
dec
sbb
cmp
shl
fist
ret
jp
aaa
(bad)
push
and
jnp
sti
out
rol
or
movs
aam
imul
dec
ins
xlat
ror
hlt
repnz
sub
adc
cmc
jg
movs
sub
add
lods
aad
jne
inc
adc
call
nop
iret
mov
jnp
call
int3
stc
xor
retf
dec
pop
das
adc
xchg
shl
into
cmp
(bad)
pop
pop
and
jbe
or
push
adc
fst
pushf
repnz
enter
lock
das
fnstcw
sub
dec
xchg
pop
hlt
jge
or
xor
xor
lods
sbb
dec
movs
cld
std
cld
push
mov
js
lea
jp
fisubr
cmp
and
mov
lea
in
dec
dec
pop
and
aaa
push
add
mov
enter
sub
xchg
sahf
and
and
aaa
repnz
movs
ror
(bad)
pop
out
adc
xor
es
test
mov
adc
mov
shl
mov
push
shr
xchg
mul
pop
push
xor
arpl
and
ss
xchg
xor
shr
jnp
les
mov
push
mov
outs
call
scas
popa
sub
mov
sar
xchg
push
dec
xchg
sti
pusha
repnz
sub
xor
cs
add
imul
test
outs
rcl
outs
mov
mov
fsubr
push
xchg
mov
push
test
popf
adc
into
pop
fisubr
addr16
fisttp
shl
cmp
mov
jp
test
les
sahf
cld
in
sar
dec
pop
sub
std
test
mov
sti
mov
cmps
push
jge
sub
adc
sub
ret
sbb
xor
xchg
sbb
push
shl
sub
cld
dec
sbb
and
xlat
inc
(bad)
jb
mov
aad
(bad)
pop
jo
iret
pop
xor
cmc
jmp
xchg
jns
mov
dec
jnp
mov
mov
fyl2xp1
sbb
push
test
cmp
inc
mov
arpl
(bad)
sbb
fist
ja
shr
xchg
adc
sbb
(bad)
dec
fisubr
and
xchg
cli
stc
es
test
push
popa
ficomp
lahf
(bad)
jg
jp
jae
add
cli
push
lods
adc
imul
xor
and
js
fidiv
ror
imul
js
dec
fwait
test
sub
adc
out
fist
test
mov
cwde
div
retf
and
cmp
sub
xor
xor
ins
rcl
(bad)
call
cmp
imul
mov
(bad)
cmp
aas
pop
jb
xchg
cdq
mov
out
cmp
sbb
dec
cmc
mov
pop
in
sbb
in
jno
loopne
retf
cli
into
sti
dec
pop
movs
pop
xor
xor
pusha
leave
pop
xor
hlt
inc
stos
mov
loope
sti
jbe
loope
(bad)
cmp
xchg
jne
push
sar
imul
add
shl
push
mov
out
data16
jecxz
mov
lods
sbb
aad
sar
stc
lock
sbb
test
movs
push
enter
mov
or
ret
mov
sub
cmp
push
test
pop
mov
xchg
ins
and
push
stos
call
lock
mov
push
mov
push
test
xchg
jle
pushf
push
xlat
pop
icebp
aas
cmp
jmp
push
jns
mov
cmps
pop
dec
xor
daa
dec
xchg
(bad)
pop
xor
hlt
mov
mov
dec
movs
add
std
or
psadbw
pop
adc
mov
retf
xchg
aam
jg
lock
jge
sub
call
loopne
and
aas
cmp
cmp
mov
mov
vmwrite
or
ret
les
(bad)
jmp
dec
fild
sbb
cmp
mov
ins
ins
ins
pop
adc
mov
mov
fs
jb
mov
scas
inc
mov
inc
adc
xchg
cmc
mov
xor
fxch
jmp
ds
loope
ja
fs
jg
cld
cmp
and
scas
(bad)
repnz
sub
retf
ffree
and
adc
enter
dec
and
aad
xchg
cld
sbb
mov
mov
push
lods
fbld
rcr
test
push
add
retf
cdq
add
xor
jp
data16
cmp
ins
aaa
nop
jns
xor
cmp
mov
retf
repz
ja
popf
mov
in
pop
jo
cmp
push
(bad)
mov
sbb
ret
loopne
iret
and
dec
dec
xchg
lock
push
lea
aad
pop
jle
ja
xor
push
and
ret
ja
push
cmp
icebp
outs
cmp
xchg
jno
pusha
xor
adc
mov
add
inc
fwait
and
mov
and
inc
call
dec
inc
dec
stos
std
push
das
dec
cmp
shl
mov
push
xchg
or
popa
je
(bad)
sub
xchg
or
inc
jnp
sub
inc
lock
add
inc
in
mov
cmp
xchg
out
(bad)
jmp
xchg
adc
nop
ja
fstp
jg
cdq
push
or
mov
cmp
cmps
stc
pop
jmp
jp
pop
xchg
and
(bad)
adc
movs
in
mov
int3
fisttp
pop
mov
stos
sti
addr16
movs
mov
iret
pop
push
push
sbb
test
nop
mov
and
jl
psubw
mov
pop
movs
out
data16
mov
mov
push
cmp
xchg
retf
cmp
(bad)
cmp
jno
cdq
push
jmp
inc
pop
stos
fwait
mov
xor
div
lods
retf
sub
std
sbb
shl
cmp
ins
adc
outs
ins
jle
stc
fadd
cdq
mov
retf
inc
adc
push
test
adc
adc
xchg
xor
test
lock
mov
xor
xor
gs
and
add
mov
xor
fucom
xchg
mov
jne
aad
and
jecxz
outs
rol
cdq
dec
dec
sbb
push
mov
cli
in
test
jb
jmp
fnstcw
and
test
add
push
dec
inc
dec
mov
adc
xchg
sti
fdiv
sbb
js
ret
daa
pushf
xor
xchg
pop
or
nop
psubd
pop
jp
jg
mov
sub
sbb
clc
inc
loope
mov
sbb
push
das
lahf
or
addr16
std
push
pop
sti
add
xchg
sub
sub
jecxz
or
cmp
adc
inc
sub
ror
les
shr
xor
cmp
neg
fwait
lea
ins
mov
inc
push
(bad)
icebp
xor
mov
jno
inc
add
jne
mov
arpl
pop
pop
std
xchg
mov
sub
icebp
or
fist
pushf
jb
pusha
popa
mov
xchg
dec
cld
jmp
scas
mov
cmp
jg
push
idiv
mov
jne
mov
jae
xor
leave
and
dec
inc
sbb
and
addr16
cs
rcl
xchg
enter
dec
jle
dec
dec
inc
or
lea
popf
ret
xchg
push
jb
sub
mov
sbb
add
cmc
xor
gs
jle
or
xor
add
retf
(bad)
fsubr
or
or
push
ret
jae
fld
sub
inc
or
xchg
adc
jns
scas
shr
loop
retf
adc
cld
add
call
in
push
inc
in
mov
push
dec
out
xchg
loopne
pop
shl
add
inc
cmp
cmove
mov
push
mov
test
sbb
mov
aas
loope
aam
pusha
mov
jl
or
pop
push
push
mov
cmp
les
fidivr
push
popa
rcl
addr16
inc
or
inc
scas
push
sbb
pop
es
xchg
inc
dec
daa
jge
sub
call
test
pop
sub
neg
inc
xchg
mov
xchg
and
(bad)
cmps
call
outs
mov
push
inc
neg
push
xor
sub
jge
pop
push
and
shl
mov
(bad)
out
xchg
pop
jmp
dec
jmp
movs
add
aaa
xchg
jne
jle
stos
fwait
mov
mov
mov
and
adc
icebp
pop
inc
bound
stc
repnz
add
pop
retf
pusha
repnz
xchg
pop
sbb
jp
sahf
pop
dec
xchg
ja
inc
xor
mov
push
inc
jl
out
xchg
outs
inc
pop
xchg
jecxz
jbe
shl
xor
test
inc
cmp
pop
add
test
loope
btr
add
dec
inc
aas
imul
ret
in
mov
ins
cmc
pushf
inc
clc
cmp
fst
cmc
xchg
mov
push
dec
dec
pop
icebp
sbb
pusha
push
outs
pop
fcom
dec
fidivr
mov
cwde
and
sti
sbb
add
and
or
sbb
jg
rol
jno
pop
mov
adc
shr
daa
sub
fcmovbe
call
rcr
push
xchg
loopne
pop
jg
add
test
or
dec
aad
scas
sbb
fwait
ds
gs
fucomip
popf
dec
sub
pop
repnz
lock
xchg
call
push
add
xor
pcmpgtb
mov
int
daa
push
lods
mov
sbb
mov
push
stc
out
sub
mov
(bad)
fldcw
shr
or
lods
mov
mov
mov
outs
outs
outs
and
pop
ins
cmp
inc
adc
test
and
sbb
aas
and
nop
jnp
imul
lea
std
neg
mov
cli
and
mov
ins
sahf
add
jae
push
xchg
cli
mov
adc
lods
push
xchg
sub
pop
outs
fs
cld
or
inc
mov
push
rcl
sbb
sbb
sbb
in
mov
cdq
stc
rol
mov
xor
retf
xchg
mov
int3
cld
lock
daa
adc
scas
pop
or
lods
xchg
jl
push
cli
out
lahf
fist
fsubp
aas
push
retf
add
pop
loopne
imul
xor
test
sub
aad
repnz
pusha
push
and
out
(bad)
out
jno
(bad)
cmp
and
xchg
push
and
movs
adc
mov
push
int3
clc
jmp
jo
sub
mov
mov
jg
iret
add
and
cmp
jp
daa
lods
call
inc
cwde
xor
mov
in
sbb
jmp
jnp
inc
std
scas
add
dec
xchg
xor
cmp
imul
xchg
mov
xchg
pop
mov
jnp
outs
fs
dec
jbe
inc
ds
icebp
push
(bad)
in
pop
leave
scas
sbb
push
enter
mov
and
xchg
rol
mov
popa
stos
or
adc
iret
daa
inc
lahf
scas
dec
pop
jb
lods
leave
inc
and
push
sbb
xchg
(bad)
adc
cs
dec
push
shr
dec
cmp
inc
jo
sbb
cld
fst
test
pop
or
sub
mov
in
mov
pop
repz
mov
add
dec
fldcw
scas
fsub
call
int
rol
hlt
xchg
jle
jge
mov
fdiv
pop
push
mov
sbb
aam
or
xchg
ret
cli
arpl
dec
hlt
xchg
aad
bound
imul
fnsave
add
div
sahf
cmp
push
je
scas
sub
(bad)
xor
pop
into
xchg
test
aaa
lock
adc
or
inc
sahf
and
mov
test
xchg
mov
jo
inc
pop
lea
sbb
fild
ret
pop
scas
and
sti
xchg
popf
(bad)
xor
jmp
cwde
dec
test
mov
inc
push
icebp
dec
stos
sbb
outs
dec
sub
fiadd
xor
ret
les
push
inc
jge
inc
test
and
push
fs
inc
test
jmp
test
ss
inc
push
cmp
dec
add
mov
sbb
hlt
push
inc
shl
pop
(bad)
mov
sub
pushf
mov
jmp
ins
pop
inc
std
dec
mov
mov
aam
int3
test
add
pop
rcr
retf
icebp
jb
adc
xchg
sub
mov
and
inc
(bad)
mov
scas
cli
cdq
cmp
cmp
scas
fist
lahf
add
clc
mov
xlat
lds
jmp
or
dec
pop
push
mov
xor
xor
inc
inc
lds
jmp
jo
shl
data16
or
xor
inc
xchg
fld
ins
mov
mov
rol
fwait
test
push
inc
inc
bound
cs
pop
fwait
or
jge
out
retf
jge
sbb
dec
jno
ss
or
mov
adc
pushf
fld
in
mov
xchg
pop
lods
cmc
cmp
jb
jmp
sub
inc
cs
jns
sbb
pop
rcl
out
and
clc
adc
lods
out
aas
std
leave
fcomp
mov
mov
dec
outs
push
shl
pop
aam
mov
div
pushf
push
popa
ret
adc
add
ins
cmc
je
and
push
xchg
hlt
movs
imul
call
inc
pusha
sub
inc
ds
clc
dec
or
out
push
outs
fsubr
or
test
and
pushf
xor
div
pop
nop
bound
call
mov
and
pop
mov
push
scas
ins
fsub
mov
or
sub
out
popa
cdq
int
xor
and
inc
retf
push
je
out
inc
mov
movs
xor
mov
push
dec
jg
pop
stos
faddp
sahf
push
inc
jecxz
nop
popf
outs
xlat
sub
inc
addr16
popa
pop
(bad)
xor
xchg
pop
cmp
sbb
pop
neg
aam
cli
sub
and
pop
xor
outs
sbb
sbb
jl
push
jb
mov
lahf
mov
jae
loopne
jp
iret
xor
out
les
sub
adc
sbb
jmp
mov
jnp
pop
scas
aam
icebp
adc
mov
push
in
xor
repz
in
adc
cmp
cmp
push
mov
mov
outs
dec
ins
mov
push
cmps
les
or
mov
clc
stc
dec
into
jecxz
loopne
and
data16
fsubr
xor
cld
les
xchg
lahf
les
cmp
fdiv
stc
popf
mov
sbb
inc
(bad)
jl
mov
cmp
aas
lods
sbb
mov
inc
sahf
jno
cmps
fsubp
xor
adc
std
and
inc
fsubr
dec
sub
jmp
sub
dec
hlt
mov
push
dec
cld
inc
sub
push
pop
in
stos
push
inc
in
stos
push
dec
fs
push
inc
gs
dec
in
cmp
leave
cmp
add
ins
mov
push
or
dec
pop
ret
dec
mov
(bad)
daa
or
xor
push
retf
adc
sbb
xor
fs
cld
dec
push
dec
sahf
ja
daa
jae
and
mov
in
gs
sub
std
stos
mov
retf
lock
ret
mov
lods
fcomp
enter
xlat
push
xor
inc
sbb
inc
out
sti
pusha
iret
sub
iret
mov
es
mov
and
inc
outs
mov
add
fadd
pushf
stos
push
mov
jg
mov
in
push
inc
mov
or
shr
fisubr
pop
mov
dec
sbb
and
xchg
sbb
and
mov
mov
jl
inc
jo
cwde
jp
out
xlat
push
imul
jo
outs
mov
mov
aas
jmp
lahf
cmp
adc
leave
xchg
pop
add
mov
test
xchg
cs
ret
test
(bad)
jno
cmp
movntq
out
(bad)
dec
movs
push
mov
fcomi
cli
enter
mov
or
xor
pushf
jp
retf
push
repz
inc
cmc
xchg
(bad)
sub
scas
push
out
xor
mov
imul
in
sub
push
enter
out
and
sbb
jge
(bad)
mul
xor
retf
ror
pop
arpl
inc
add
fcmovbe
push
mov
int3
sti
test
mov
push
jmp
dec
mov
xchg
(bad)
scas
sbb
ds
ror
(bad)
shl
aaa
(bad)
mov
cmp
inc
inc
in
imul
daa
mov
mov
mov
jle
mov
sbb
cwde
rol
pop
jmp
(bad)
sahf
neg
(bad)
dec
push
or
mov
inc
gs
aaa
and
rol
add
mov
pop
or
lahf
sub
mov
cmps
jg
dec
cmp
push
int3
(bad)
cmc
aaa
int3
out
fmul
mov
mov
push
cmp
sbb
adc
ss
es
jno
cli
xchg
aad
clc
ss
jecxz
mov
(bad)
or
and
scas
leave
fistp
jo
in
cdq
inc
bound
imul
repz
hlt
xacquire
push
ins
in
call
in
push
lds
push
(bad)
imul
add
xchg
cmp
fld
push
in
inc
(bad)
cmp
aaa
jle
cmp
inc
pop
shl
or
aaa
jecxz
leave
dec
sbb
xchg
pop
pop
cmp
pop
ss
adc
jo
xlat
cmp
pop
jo
sbb
pop
fld
sub
cmp
dec
cmp
cmps
jne
call
inc
lods
push
mov
call
int3
inc
je
sahf
xor
mov
cmp
enter
jmp
push
xchg
jb
mov
xchg
out
sbb
mov
sub
jmp
pop
mov
cli
test
jmp
popa
cmp
dec
mov
dec
or
(bad)
xchg
push
mov
mov
icebp
pop
sbb
mov
and
push
into
jo
jo
stos
and
dec
shr
les
sti
outs
and
adc
pop
clc
cmc
stos
popf
daa
(bad)
push
cmp
push
ja
lods
int3
lea
arpl
aam
inc
or
loope
call
xor
ins
push
rcr
or
sub
inc
(bad)
xchg
in
push
push
ret
mov
pop
inc
ins
loopne
jl
dec
and
out
inc
mov
dec
cwde
fcmove
adc
fdiv
push
fist
sub
pop
and
xor
rol
test
repz
mov
fsub
adc
hlt
mov
push
pop
int3
cmps
add
sti
(bad)
(bad)
push
cmps
cmp
mov
(bad)
icebp
(bad)
cli
addr16
push
jle
cli
call
(bad)
push
xchg
pop
dec
jbe
int3
hlt
repnz
ds
sbb
pop
cmc
jge
sbb
jnp
sbb
clc
mul
jp
aaa
sub
imul
cmps
and
in
stc
cmps
pop
push
cld
mov
inc
jmp
ja
dec
cmp
(bad)
mov
sub
scas
mov
fdiv
stos
pushf
dec
mov
aam
rcl
inc
jecxz
movs
ds
hlt
adc
xchg
imul
call
xchg
repnz
add
iret
aam
or
sahf
or
xchg
(bad)
jmp
push
add
cmps
sub
xchg
cmp
push
call
xchg
ds
imul
dec
cmp
fmul
mov
popa
xchg
retf
add
fisttp
xlat
daa
std
out
adc
stos
jmp
(bad)
jmp
mov
inc
pop
(bad)
xor
xchg
stos
jg
mov
push
fs
daa
mov
into
imul
sub
inc
inc
or
pushf
outs
fadd
shr
arpl
sub
cmp
dec
sbb
and
hlt
(bad)
xchg
pop
or
jb
xor
sub
mov
test
mov
push
cwde
stos
mov
mov
popf
push
shl
pop
in
rcl
cwde
mov
rol
retf
mov
and
jecxz
mov
fdiv
jnp
movs
push
and
rcl
sub
std
in
lea
adc
adc
or
in
inc
jns
movs
pop
xor
adc
repz
cld
or
in
stos
push
dec
fs
inc
in
push
(bad)
push
(bad)
popa
ss
imul
inc
cmp
cmove
dec
mov
mov
xor
pop
jmp
sub
rcl
aam
or
stc
(bad)
mov
retf
test
mov
icebp
mov
or
fmul
pop
movs
and
and
inc
pop
cmp
sti
jo
push
jge
mov
gs
or
push
das
adc
xchg
adc
out
jno
stos
pop
jnp
and
mov
ret
push
push
loope
jns
(bad)
jne
fiadd
loopne
rol
mov
enter
(bad)
lea
xor
mov
jae
mov
jge
xor
test
push
leave
nop
dec
sbb
jecxz
sub
jp
jp
mov
push
mov
std
shl
push
mov
pushf
loop
mov
test
sbb
arpl
push
fiadd
mov
xchg
ja
xchg
mov
cmp
mov
cmp
addr16
retf
dec
sbb
bound
mov
jno
xchg
pop
fs
bound
bound
jbe
inc
xor
dec
jns
push
test
retf
test
cmp
or
inc
int
imul
adc
and
nop
test
rcl
adc
int
out
imul
retf
lahf
daa
add
(bad)
aam
xchg
(bad)
sbb
mov
xor
cmp
cld
cmps
xchg
cmps
sbb
out
dec
(bad)
add
frstor
inc
jmp
sub
out
pop
out
inc
and
js
and
rol
ss
dec
fwait
dec
and
ret
pushf
or
and
push
mov
lods
ins
mov
cmp
pusha
and
cmp
in
sub
mov
jp
pop
out
gs
popf
(bad)
add
xor
dec
fistp
inc
int3
or
in
jle
jp
xor
cmp
nop
jecxz
or
lock
fwait
sbb
pop
int3
or
inc
cld
repnz
scas
jp
or
or
xchg
out
jno
mov
pmaddwd
push
cmp
adc
mov
ror
test
mov
pop
in
and
pop
dec
sub
imul
push
mov
add
daa
and
cmp
or
adc
or
xor
and
out
xor
inc
pop
add
jle
add
sbb
lods
dec
and
bound
cmp
and
jge
xchg
xchg
lods
outs
sub
pop
out
shr
jg
lahf
xchg
adc
push
xchg
push
sub
stos
jp
rol
mov
sbb
dec
sub
ins
ins
mov
cmps
dec
sahf
mov
nop
sbb
dec
int3
pop
scas
sub
sbb
jmp
jo
inc
or
stos
retf
aad
jns
xor
pop
lds
movs
in
push
call
cmp
fdiv
sar
or
jmp
fwait
dec
(bad)
test
outs
data16
mov
or
jg
lods
out
es
jb
or
push
jl
dec
scas
mov
fwait
aaa
inc
mov
cmps
(bad)
cmc
outs
cmp
aam
push
jmp
and
daa
xor
xor
inc
or
inc
mov
imul
cmps
dec
sub
retf
sahf
shl
mov
pop
neg
push
dec
sbb
loop
and
pop
lods
dec
data16
mov
lods
and
xor
jns
pop
mov
movs
popf
mov
ret
cmp
mov
xor
outs
inc
fsub
inc
jg
xchg
add
lahf
fidivr
call
lock
cmovae
es
xchg
das
stos
dec
mov
ja
pop
sbb
jge
fwait
mov
push
aad
stos
push
loopne
loopne
scas
rcl
lods
iret
rol
hlt
cmps
xchg
mov
pop
ret
dec
mov
fdiv
outs
out
dec
fdiv
pushf
cmp
lock
in
add
ja
test
es
or
in
aam
mov
outs
hlt
mov
and
cwde
in
push
mov
fistp
mov
(bad)
fsub
imul
xchg
and
cs
sar
popa
mov
sar
dec
addr16
sbb
scas
jg
push
pop
js
or
ret
or
jne
push
push
aam
ficom
data16
add
mov
(bad)
out
push
inc
repnz
imul
inc
inc
mov
stos
sub
push
sbb
xlat
pop
xchg
pusha
or
pop
cdq
mov
outs
cmp
add
nop
jge
sub
scas
push
sub
int3
mov
push
mov
sub
sbb
add
test
inc
add
call
rol
add
shl
sub
pop
leave
jno
lahf
scas
jge
adc
xchg
add
int3
and
pusha
iret
cmp
mov
outs
mov
mov
mov
scas
shr
jmp
cmps
fiadd
js
sbb
fisubr
(bad)
in
js
fmul
jmp
or
hlt
pop
faddp
dec
fadd
sbb
sub
repnz
inc
jp
sub
clc
jnp
xor
mov
inc
call
xchg
add
sbb
jl
or
jbe
inc
cmp
or
jecxz
push
stos
std
or
mov
(bad)
mov
mov
inc
xchg
sti
sbb
mul
fidivr
stos
pop
ficomp
sbb
lods
mov
push
popf
xor
or
imul
setbe
fsub
or
lock
or
clc
jmp
fidivr
mov
push
mov
xlat
inc
pop
add
or
imul
in
push
dec
jb
xchg
shl
xor
jb
aad
ja
dec
mov
xchg
out
mov
mov
or
mov
mov
test
mov
in
dec
mov
pusha
mov
mov
mov
cmps
dec
dec
cmps
out
out
loop
sbb
(bad)
pop
sbb
fild
pop
add
mov
cmps
mov
mov
into
sbb
pop
pop
pop
push
mov
xor
push
call
xlat
xor
sbb
repnz
mov
(bad)
std
jns
xchg
pop
sbb
imul
xchg
mov
jns
outs
ret
adc
fadd
cmps
shl
pusha
loop
adc
mov
in
into
dec
sbb
xchg
call
xor
cmps
out
add
imul
daa
lods
xchg
das
(bad)
mov
call
mov
add
stc
addr16
fadd
aam
xchg
add
or
test
xor
dec
in
xchg
or
paddusb
or
mov
bound
mov
push
es
fistp
mov
iret
in
ror
mov
icebp
ret
pop
adc
inc
mov
jmp
dec
cs
int
(bad)
bnd
inc
fisub
jecxz
sub
or
not
dec
cdq
push
es
sbb
popa
push
cmp
mov
out
xor
shl
iret
retf
jo
pop
inc
cmc
daa
push
leave
cwde
dec
push
adc
js
leave
in
dec
into
fld
mov
jo
clc
xor
xchg
bound
xor
push
jae
retf
or
mov
push
into
sti
out
inc
ja
loope
xor
cld
dec
push
mov
test
imul
inc
pop
test
cs
sbb
stos
mov
mov
or
movs
or
add
shl
jo
cld
stos
or
cmc
mov
xor
and
test
(bad)
std
test
or
loop
sahf
hlt
adc
in
cmps
in
shr
or
mov
hlt
inc
out
adc
scas
cwde
push
scas
or
mov
pusha
fs
imul
sbb
xchg
shl
jp
call
mov
popf
cwde
mov
lds
ss
cmp
pop
sbb
cwde
shl
jmp
sub
cli
mov
mov
mov
sbb
mul
rcl
(bad)
adc
outs
ins
(bad)
std
jne
dec
jg
mov
mov
fs
jmp
sbb
inc
add
sub
outs
movs
sahf
mov
repz
add
mov
sbb
adc
fwait
sbb
in
ret
xchg
cmp
sbb
pop
rol
ss
cmp
pusha
mov
and
xchg
xchg
enter
mov
lea
outs
adc
xchg
jae
cmp
or
(bad)
add
mov
mov
test
(bad)
std
das
repnz
or
addr16
fsubr
popa
lods
cmp
fs
inc
call
add
mov
adc
dec
xor
sbb
inc
stc
add
jl
xor
sbb
sub
hlt
mov
inc
ror
or
in
cmp
lods
mov
dec
mov
mov
push
push
hlt
stos
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
out
sbb
push
inc
in
adc
adc
push
inc
in
movs
xchg
mov
push
dec
in
mov
push
dec
in
dec
push
jmp
inc
in
push
inc
in
mov
push
dec
fdivr
push
je
call
hlt
mov
push
dec
pop
cmp
cs
jge
xchg
sub
add
mov
pop
movs
in
mov
int
ds
sub
cld
add
in
cmp
test
scas
mov
div
mov
add
xor
adc
mov
mov
loopne
fldenv
mov
bnd
sub
daa
int
ins
out
icebp
mov
dec
or
fdivr
mov
mov
hlt
pop
mov
sub
retf
inc
xlat
jo
sbb
mov
jbe
stc
push
and
inc
xor
ins
rcr
sbb
sbb
push
ds
xlat
pusha
adc
or
dec
int3
fld
int
aad
xor
test
daa
adc
xchg
mul
jno
repz
std
je
pop
dec
addr16
or
push
outs
xchg
xchg
outs
add
je
mov
mov
inc
push
jecxz
mov
pop
int
mov
inc
imul
xchg
in
dec
sbb
fdivr
xchg
dec
aad
test
into
sar
ins
clc
outs
adc
sbb
je
adc
jbe
mov
mov
push
pop
cmc
cmps
enter
lods
push
push
mov
in
stc
inc
lods
inc
addr16
lds
sbb
fdivr
jnp
mov
(bad)
test
(bad)
mov
jb
sub
icebp
(bad)
cmc
ins
pop
in
xchg
mov
cli
and
add
enter
inc
and
cmps
(bad)
sub
fadd
cmp
rcr
pusha
push
movs
shl
adc
xchg
add
cmp
xchg
in
jmp
jl
or
lds
xlat
mov
pop
sub
jmp
cmp
sub
sbb
cmp
mov
int
mov
cmp
or
jmp
push
xchg
pop
xor
mov
out
xchg
sar
addr16
je
dec
mov
call
popa
mov
add
sbb
fstp
cmp
mov
ror
push
jmp
scas
push
sub
cdq
daa
(bad)
xor
popf
sbb
mov
hlt
mov
cmp
jge
int3
add
or
pop
popf
mov
sbb
pop
loop
int3
retf
ror
mov
mov
int
mov
cs
in
mov
dec
int3
mov
dec
fdivr
push
je
mov
xchg
adc
lods
(bad)
or
push
inc
mov
push
fcmovbe
or
(bad)
loope
sub
pop
jbe
hlt
call
fs
les
out
cmp
pop
xchg
mov
sub
call
pop
aam
pop
out
inc
pop
pop
sub
dec
sbb
sub
int3
les
pop
cli
lea
ja
sar
adc
and
add
mov
add
icebp
mov
sub
and
and
push
in
add
bound
or
inc
push
int
sahf
iret
out
pop
xchg
add
lds
jno
xor
ficomp
fisttp
cmp
scas
cmp
jg
clc
stos
and
adc
dec
stos
in
ficomp
ja
rol
out
jecxz
test
call
pop
test
xchg
fwait
jb
jp
(bad)
int3
dec
cmp
fidiv
dec
sti
pop
add
mov
push
mov
push
int3
ficomp
mov
dec
jnp
ffreep
add
pop
and
ret
pop
mov
cmp
repnz
imul
or
add
pop
in
inc
cmp
retf
stc
and
das
ja
mov
(bad)
sahf
push
inc
test
inc
jmp
sub
push
or
sub
mov
adc
(bad)
jge
jl
repz
push
inc
pusha
pop
cmp
fwait
cwde
mov
dec
das
ss
repnz
imul
and
xor
mov
push
xor
in
out
sub
push
jnp
add
or
push
ret
push
cmps
dec
rcl
mov
lds
dec
cmc
loop
add
dec
test
sub
out
std
movs
xor
scas
push
pop
sbb
js
mov
mov
aas
(bad)
out
fs
or
xchg
xchg
outs
jmp
pop
jo
punpckhdq
sar
sbb
inc
leave
fsub
into
sti
jb
push
(bad)
fst
push
bound
aaa
adc
mov
pop
in
mov
lahf
sar
div
mov
ret
cmp
cli
inc
faddp
xor
dec
pop
xor
push
imul
lahf
push
test
push
jmp
and
pushf
(bad)
mov
sbb
mov
jg
adc
pop
inc
test
fild
fsubr
into
cmp
scas
daa
push
cmp
out
mov
iret
dec
bound
jbe
test
test
mov
imul
jno
add
in
scas
shl
xchg
sar
xchg
sbb
aaa
leave
xor
xchg
jae
stos
sub
stos
lahf
push
aaa
mov
cmps
pop
sbb
dec
mov
or
sbb
ret
cmp
aas
stos
ret
shr
retf
repnz
adc
adc
scas
repnz
xor
sbb
nop
scas
hlt
sbb
cmp
xlat
lahf
cmp
(bad)
mov
mov
pop
mov
pop
xchg
data16
xchg
push
scas
imul
cmc
scas
inc
push
push
in
repnz
or
das
mov
push
cld
xor
mov
mov
in
das
jne
mov
loopne
fld
nop
mov
outs
movs
fucomp
int
add
and
xchg
fsubr
fisubr
pop
sbb
jl
(bad)
int
pop
pop
mov
hlt
jno
adc
cwde
lds
pop
fsub
rcr
jns
arpl
cmc
push
outs
addr16
cmp
push
mov
fwait
neg
jecxz
mov
jns
dec
add
sub
mov
data16
jmp
(bad)
jns
sub
xchg
cmp
mov
mov
fsubp
hlt
xchg
(bad)
test
scas
mov
adc
sar
inc
sub
push
ins
in
stos
cs
in
mov
push
pop
les
push
les
sahf
int
mov
(bad)
in
test
loope
mov
(bad)
adc
pop
retf
or
or
push
cdq
and
mov
stc
retf
and
xchg
jo
test
lods
into
das
ss
push
sar
hlt
cmps
ror
dec
aam
push
fmulp
fdiv
pushf
xor
jg
in
movs
pushf
ficom
or
add
push
outs
sahf
iret
push
xor
fwait
and
adc
push
cmps
inc
loopne
dec
mov
jae
push
xchg
dec
or
jmp
inc
les
ins
or
jge
sahf
cmp
mov
add
cmp
mov
xchg
jnp
jmp
push
sub
xor
mov
int3
inc
pop
pop
xor
repz
inc
adc
or
inc
shl
aad
mov
popa
pop
ss
aas
push
fwait
daa
sahf
shr
cmp
cmp
adc
jmp
fdiv
dec
or
mov
pushf
lock
mov
xchg
(bad)
push
in
sbb
clc
jge
add
jmp
add
test
push
aas
and
cmps
cmp
sub
arpl
mov
cmp
cwde
mov
retf
xor
xor
cmp
arpl
ss
xchg
inc
aad
adc
push
xor
fsubrp
xchg
ror
cmps
xor
int3
mov
push
ins
in
mov
in
push
dec
in
mov
push
fsub
xchg
xchg
xchg
jle
cmp
in
mov
sti
jle
mov
cmp
scas
mov
mov
inc
in
dec
mov
mov
cmp
xor
sbb
jg
aam
mov
xor
adc
call
push
mov
xchg
pop
fistp
sbb
jle
xor
and
mov
adc
outs
adc
scas
or
add
sahf
cli
fwait
and
lahf
sub
lock
jnp
les
imul
mov
imul
mov
sbb
iret
jne
repz
mov
xor
out
(bad)
fdivr
lahf
fsub
lds
xor
daa
sbb
lahf
mov
push
daa
cld
add
pop
inc
arpl
scas
xchg
cwde
pop
push
jecxz
(bad)
scas
and
xor
icebp
jno
pop
ret
cmp
dec
in
lds
or
pop
push
lahf
out
sbb
sbb
mov
pop
dec
xchg
cdq
ins
ja
xor
jbe
add
loopne
shl
xor
popf
test
sub
jge
cmc
push
mov
fwait
retf
xchg
in
jg
xor
outs
popa
call
xor
iret
xlat
jno
push
adc
xor
dec
cmps
xchg
mov
test
jp
mov
cmc
jne
jb
jmp
or
jbe
add
pop
cli
push
out
pusha
lahf
in
in
int3
(bad)
push
ja
movs
movs
lock
adc
add
xlat
or
cmp
ss
xchg
jge
jb
scas
jmp
lahf
sbb
sub
loope
jle
sbb
mov
jg
push
and
jmp
loop
call
nop
fdivr
mov
test
xchg
scas
cld
push
dec
in
sub
push
push
fsub
push
dec
hlt
mov
push
les
cs
push
(bad)
dec
test
add
jne
pop
dec
inc
mov
aam
xor
fild
sbb
jne
add
outs
cmps
(bad)
(bad)
lods
xor
(bad)
push
and
inc
pop
pop
cmp
xor
(bad)
popa
sbb
xchg
nop
popf
xchg
adc
dec
cmps
arpl
rcl
fs
mov
mov
sar
pop
inc
xchg
xor
xchg
fild
int
cld
shl
cmps
mov
jl
or
inc
or
stos
ss
cli
je
jne
mov
sub
sub
push
pop
adc
sbb
sbb
es
enter
ss
mov
sub
and
mov
xchg
cmps
push
jle
pop
or
xchg
xor
add
pop
dec
adc
pop
jae
xor
inc
wrmsr
or
shr
pop
dec
pop
aad
aas
pop
xchg
mov
push
rcr
jge
jne
xor
jmp
adc
sti
gs
adc
adc
push
imul
cmc
adc
cli
xor
test
idiv
mov
or
lock
sti
pop
push
mov
test
push
pop
icebp
loop
in
inc
imul
inc
enter
ret
adc
and
jns
gs
xchg
push
les
add
xor
hlt
jo
(bad)
or
int
jg
popf
xor
cmp
aaa
mov
dec
test
cmp
push
imul
push
repnz
xchg
pop
sbb
iret
sub
pop
bound
inc
and
fiadd
xor
aad
pop
scas
xchg
jo
ins
jmp
ret
mov
inc
pop
pop
fmul
cmc
adc
xchg
push
mov
ret
mov
hlt
jl
jmp
push
adc
loop
icebp
aas
jmp
rcr
pop
push
daa
inc
mov
xchg
xlat
ins
pushf
imul
dec
push
movs
push
mov
and
lds
inc
shl
mov
arpl
adc
fs
retf
mov
or
loop
inc
inc
mov
icebp
adc
enter
les
pop
imul
cli
fisub
lahf
inc
neg
sbb
add
adc
outs
aaa
(bad)
fldenv
xor
pop
pop
mov
inc
mov
(bad)
push
test
test
push
sahf
jg
test
xlat
lock
xchg
or
jnp
aam
lahf
jmp
idiv
popa
outs
mov
or
adc
shr
leave
cmp
int3
jge
outs
push
mov
add
out
nop
xchg
shr
xlat
movs
jae
jl
mov
cmc
mov
mov
dec
add
mov
stos
dec
aam
or
das
rcl
sbb
aad
popf
rcr
adc
retf
and
add
add
mov
test
lods
or
add
xchg
sbb
cmp
sbb
test
mov
rcl
les
inc
jecxz
lock
sub
push
fidiv
mov
jecxz
int
mov
and
je
aas
xor
or
rol
out
xor
pop
outs
mov
inc
jl
mov
or
aad
je
fisttp
mov
xor
leave
aaa
sub
adc
jle
fld
es
lock
inc
or
fwait
imul
sti
int3
add
icebp
jo
mov
imul
pop
and
push
sbb
push
jb
jp
push
aad
jae
inc
mov
imul
aaa
je
in
(bad)
xchg
or
push
call
mov
mov
dec
loop
or
in
push
or
mov
mov
mov
test
shl
in
add
aas
or
mov
aad
jp
retf
inc
push
inc
dec
sub
fwait
push
loope
pop
push
pop
inc
mov
push
lods
jbe
inc
or
pop
mov
popa
jle
inc
xchg
jmp
xor
mov
mov
dec
fbstp
ins
xchg
idiv
daa
pop
xor
bound
push
mov
cmps
je
ret
ja
ss
jmp
fst
sub
inc
jnp
mul
dec
mov
push
je
sbb
push
imul
in
and
ds
dec
push
jno
in
lahf
loop
push
inc
inc
cwde
je
mov
sub
movs
jl
push
jo
shr
scas
sbb
xor
push
pusha
sub
xor
or
and
inc
mov
mov
int3
xchg
into
mov
jo
or
inc
mov
pop
iret
sbb
adc
daa
xchg
mov
sti
jle
out
retf
push
in
cmp
cmps
daa
adc
sbb
push
lahf
xchg
int3
pop
pop
pop
in
adc
push
jo
bound
fbld
and
mov
fstp
pop
stos
cs
mov
addr16
or
call
inc
or
aas
push
mov
fdiv
je
popf
dec
sar
sbb
inc
cmp
cmp
lods
jno
cmp
mov
popa
sbb
sub
jmp
xchg
sbb
(bad)
sahf
cmp
icebp
push
xor
mov
ret
and
js
in
xor
xor
xor
jl
call
leave
cmp
std
cld
xchg
adc
scas
dec
movs
mov
cli
push
lock
mov
mov
mov
adc
test
ret
push
(bad)
jmp
add
mov
inc
xchg
xchg
fnsave
mov
fisttp
stos
cwde
ror
out
pop
imul
pop
(bad)
imul
ja
aas
pop
lock
loop
and
cmp
jae
call
jmp
cmp
lds
add
cmp
mov
das
std
(bad)
or
xchg
xor
cmp
mov
retf
shl
hlt
daa
push
xor
mov
dec
(bad)
cs
or
cmp
mov
jecxz
int3
cli
add
imul
cmp
xor
adc
inc
inc
sbb
neg
cmps
xchg
sahf
ret
jl
cld
and
and
jmp
jmp
add
dec
call
test
pop
add
and
dec
popf
sbb
dec
sub
mov
push
pop
adc
push
jns
popa
push
popf
pop
(bad)
ffreep
and
push
aas
and
imul
fucomp
lock
outs
imul
or
out
test
ja
sub
adc
cmp
int
pop
dec
dec
fld
leave
hlt
push
jl
mov
mov
pop
stc
push
in
add
push
idiv
inc
pop
sub
out
push
pop
cmp
lods
jb
ins
test
inc
and
outs
out
in
iret
sbb
mov
dec
cmp
hlt
dec
fs
xor
inc
or
icebp
xor
mov
jle
fimul
push
and
imul
xchg
adc
movs
mov
mov
pop
pop
xlat
add
push
adc
or
mov
sbb
hlt
adc
add
call
repnz
xor
mov
outs
push
xchg
mov
daa
leave
imul
das
cmp
sbb
pop
mov
sar
xor
inc
dec
lds
jge
xchg
dec
mov
clc
div
mov
sbb
in
int
mov
(bad)
les
aad
fst
push
lods
add
rcl
jmp
jns
dec
inc
sub
xchg
xor
add
jae
scas
inc
icebp
retf
and
test
in
push
push
in
call
ins
mov
push
(bad)
loopne
pop
(bad)
gs
dec
in
xor
retf
jmp
inc
int
push
inc
xor
fldcw
mov
cmp
aad
pop
mov
sar
inc
pusha
mov
or
or
xchg
add
jmp
fwait
loopne
pop
or
out
dec
sub
in
or
call
loope
and
cmp
sahf
out
cmc
sbb
xchg
sub
jmp
push
jmp
mov
or
(bad)
sub
mul
jl
jecxz
in
adc
fwait
xchg
scas
add
push
iret
xor
stc
mov
(bad)
cmp
movs
int3
dec
in
test
leave
test
daa
fisttp
repnz
cmp
dec
cmp
cmc
ja
or
mov
loop
outs
fwait
dec
inc
ja
add
pop
mov
sahf
jmp
mov
xchg
mov
cmps
test
xchg
jae
mov
pop
fwait
mov
cmps
in
scas
mov
cmp
mov
inc
xor
out
sbb
ror
lods
pusha
icebp
xchg
sbb
sbb
in
out
(bad)
push
push
pop
popf
dec
jns
scas
sub
mov
push
jbe
sbb
sub
test
add
(bad)
sti
dec
and
movs
or
dec
sbb
not
ss
mov
int3
jp
xor
ja
sbb
dec
mul
clc
mov
shr
or
sbb
loop
or
add
out
sbb
adc
js
mov
dec
push
outs
enter
sbb
push
imul
rcl
add
test
cmc
(bad)
push
ror
xor
push
and
jo
fsubr
call
add
cli
add
dec
loopne
lock
push
aad
and
repz
call
pop
xor
cdq
xchg
lahf
idiv
outs
arpl
xor
out
in
and
mov
in
or
es
cmp
mov
rcr
test
add
sbb
loope
push
rcr
sbb
jecxz
fldcw
jb
sbb
and
cmp
jb
fsubr
cmc
imul
cmp
js
push
jo
or
and
mov
ins
call
cdq
bound
scas
mov
xchg
aaa
add
pusha
pop
repnz
push
mov
or
xchg
jecxz
sahf
inc
sub
pop
sub
or
leave
icebp
mov
jge
add
out
mov
add
and
or
push
add
xor
push
cmp
mov
test
pop
jmp
xor
mov
jb
push
adc
pop
add
and
into
mov
jae
dec
mov
mov
sub
mov
adc
repz
mul
movs
pusha
pop
outs
aas
cli
aam
sbb
fisttp
jnp
lahf
pop
sub
ret
inc
and
fimul
loopne
push
(bad)
sub
pop
ret
pop
scas
cmp
mov
inc
cs
and
sahf
pushf
sub
lods
pop
test
jo
sbb
mov
das
xchg
add
das
fwait
repnz
imul
scas
or
pop
pop
mov
inc
pop
test
sub
jp
fwait
sbb
outs
inc
xor
call
std
xchg
popf
jl
jp
(bad)
outs
loop
pop
push
cmp
(bad)
inc
mov
les
mov
sub
arpl
cmp
loopne
out
sbb
and
daa
aam
jmp
jo
pop
mov
pop
clc
jns
gs
cmp
mov
mov
imul
add
xchg
test
or
sub
in
jmp
addr16
push
inc
xchg
mov
cmps
mov
or
fild
dec
add
inc
(bad)
stos
dec
movsx
jno
adc
shr
stc
ror
adc
cmp
call
jle
(bad)
leave
call
pop
leave
and
cmp
fistp
xchg
sti
stos
pushf
in
lea
inc
inc
jp
outs
mov
push
cli
ins
mov
or
(bad)
les
sbb
inc
and
jnp
movs
mov
sbb
and
imul
(bad)
push
ins
gs
mov
dec
and
ins
xchg
cmp
add
sbb
ins
mov
popf
sub
or
cdq
dec
sub
jb
push
push
push
rol
scas
push
pop
rcl
jnp
add
sbb
jns
pop
add
xchg
jo
call
shr
sbb
jg
inc
out
pop
jecxz
(bad)
not
mov
test
leave
add
cmp
mov
cmps
int
cmp
(bad)
aaa
mov
dec
xchg
dec
cmp
loopne
xor
xor
ins
dec
dec
pop
aad
push
outs
cli
jnp
push
popf
jb
ror
dec
mov
ss
inc
addr16
stc
mov
scas
sbb
jbe
ins
sub
call
push
dec
jle
fsubr
sub
adc
in
div
cmp
sbb
mov
out
fisub
sahf
pop
repnz
jb
cdq
fadd
push
fs
inc
or
mov
jbe
or
inc
xor
jae
pop
or
xchg
fwait
jmp
jle
or
inc
and
out
mov
add
les
mov
shl
sbb
adc
fndisi(8087
pop
cmp
and
jg
mov
add
or
fisttp
test
xchg
out
fadd
in
mov
outs
dec
ins
mov
push
mov
lock
lahf
outs
jmp
dec
jge
sahf
outs
mov
mov
xchg
dec
movs
cs
int3
pushf
lock
jmp
jbe
dec
in
mov
mov
dec
into
in
cwde
jle
in
mov
add
or
in
loop
outs
in
add
sub
std
lahf
(bad)
outs
mov
mov
(bad)
push
call
loopne
or
call
int3
mov
or
movs
sub
int
lock
mov
pushf
xchg
(bad)
dec
pop
in
mov
push
dec
in
push
dec
in
mov
push
inc
pusha
mov
inc
push
test
mov
inc
lods
xor
fld
push
inc
loope
pop
mov
lods
dec
jecxz
fcmovnbe
call
mov
sahf
dec
aaa
dec
xchg
mov
sbb
mov
(bad)
push
fisub
inc
imul
icebp
ins
push
sub
inc
test
arpl
adc
push
or
jg
enter
add
jp
mov
add
js
mov
outs
pop
xchg
pusha
test
cdq
fnstcw
jne
mov
stos
jg
shr
push
mov
ror
loop
xor
push
aaa
xchg
int
out
(bad)
je
xor
in
ja
or
mov
movs
(bad)
cmps
jb
jno
and
scas
pushf
ret
add
imul
inc
or
adc
jg
js
pop
dec
sar
push
(bad)
cld
push
loopne
mov
mov
nop
adc
in
test
fcomp
jle
sar
enter
mov
sbb
sbb
cld
ret
sar
fldenv
jge
cs
in
push
adc
cmp
sbb
xchg
fistp
adc
(bad)
cmp
call
gs
or
mov
ficom
call
test
xor
push
adc
pushf
ja
fwait
jnp
fistp
mov
out
icebp
or
aad
jl
call
in
xchg
es
in
mov
dec
gs
xchg
mov
loope
mov
adc
xor
or
push
dec
sub
push
es
mov
mov
adc
cmps
movs
add
cmp
sub
xchg
jae
mov
cwde
mov
push
leave
mov
xor
xor
movs
ja
icebp
out
into
pop
or
pop
ins
jmp
xchg
push
jae
push
xor
adc
jno
add
stos
cmps
outs
mov
push
shr
inc
add
add
mov
and
mov
inc
iret
imul
pop
jmp
xchg
cmp
cmp
jne
sub
jmp
mov
cmp
and
push
add
pop
aaa
sub
and
fsub
jbe
sbb
rol
inc
fstp
pop
or
mov
pop
ss
cwde
and
lahf
popf
and
sbb
and
mov
scas
pop
out
mov
mov
xchg
xor
inc
or
cmc
push
mov
or
(bad)
push
mov
mov
inc
push
dec
(bad)
cdq
ins
fwait
inc
add
add
mov
ins
aaa
mov
cmp
mov
xchg
add
call
adc
lods
aad
or
ds
sbb
fdivr
repz
pop
and
xchg
sti
pop
ror
sbb
xchg
in
(bad)
repnz
shl
loop
popa
setnp
inc
test
jg
icebp
mov
pop
mov
lods
or
inc
sub
push
ins
hlt
stos
push
pop
in
stos
push
dec
in
mov
les
push
inc
fs
enter
dec
in
aaa
add
cmp
add
dec
mov
mov
adc
fucomi
iret
cmp
(bad)
mov
push
xchg
call
ss
test
jae
mov
xor
jb
sahf
out
sbb
xchg
test
pushf
and
retf
sbb
lock
jmp
xchg
add
inc
out
or
sahf
cld
fild
push
mov
dec
in
int
call
adc
lods
pop
mov
mov
repz
in
daa
push
loop
mov
jecxz
dec
mov
scas
sub
push
mov
mov
scas
dec
icebp
and
push
cmps
add
test
aaa
or
mov
fmul
mov
jb
shr
add
pop
out
or
fwait
es
(bad)
xchg
cmps
inc
pop
cs
fs
pop
cmp
shl
pmullw
mov
cmps
cmp
fnstenv
int3
cmp
mov
dec
mov
ja
xor
(bad)
fcomi
and
cmps
add
shl
mov
xchg
push
and
push
jge
xchg
pop
xor
fidivr
nop
fwait
sbb
add
ror
jmp
cld
push
cdq
(bad)
es
imul
hlt
dec
jmp
stos
xchg
mov
push
jno
mov
loope
lea
push
gs
sub
inc
dec
call
cmp
and
test
dec
addr16
and
or
jae
sub
or
xor
lea
pop
(bad)
mov
sti
cs
mov
pop
adc
loop
push
iret
and
les
call
test
adc
sar
or
inc
dec
out
ja
and
pop
cdq
sub
pop
and
outs
mov
fidiv
(bad)
pop
cli
and
enter
stos
adc
cmp
sbb
dec
in
dec
pop
icebp
in
pop
fs
xchg
out
(bad)
jbe
push
les
or
mov
dec
outs
in
test
mov
xchg
out
dec
adc
pop
mov
or
lock
pop
les
stos
mov
push
push
(bad)
sbb
popf
add
add
xchg
xchg
fscale
scas
stos
fmul
pop
stos
test
pop
stos
jns
jno
push
mov
loop
dec
sbb
and
cmp
loope
in
xor
and
(bad)
fist
push
sub
pushf
leave
cwde
lock
call
xor
sub
adc
lds
jnp
xor
pop
or
add
sar
dec
add
push
maxps
retf
daa
mov
push
outs
inc
sbb
pop
cwde
mov
ja
loope
ror
mov
stos
push
xor
xchg
ds
imul
into
lods
pusha
jl
nop
inc
mov
mov
repz
inc
mov
push
xor
mov
jmp
mov
sub
inc
or
or
test
xor
mov
cmp
or
cmp
inc
mov
mov
xor
nop
cmp
sub
jge
xchg
add
add
xchg
mov
add
adc
add
add
fdiv
aaa
enter
mov
add
mov
leave
arpl
int
into
xor
cmps
(bad)
popf
mov
pusha
xchg
xlat
mov
enter
aaa
cmp
xor
arpl
push
out
mov
cwde
pop
and
jbe
ficomp
dec
fldcw
xchg
in
push
sbb
mov
fild
in
leave
add
je
iret
call
inc
dec
mov
or
add
(bad)
pop
sbb
ror
les
jmp
in
pop
stos
jl
ss
fld
dec
jns
in
idiv
ret
retf
cmc
aas
clc
mov
je
or
inc
jno
shl
push
popa
mov
ret
pushf
jae
or
add
out
pop
push
push
pop
(bad)
icebp
push
mov
mov
bound
std
adc
sub
leave
lahf
mov
mov
out
test
inc
sbb
jecxz
inc
push
or
sub
xchg
inc
jbe
rcl
shr
ins
and
pop
or
sbb
aad
stos
(bad)
cli
xchg
call
mov
outs
pop
popa
mov
fidiv
cmp
dec
lods
ss
and
stc
adc
fcmovb
push
mov
mov
jl
test
std
out
or
or
clc
das
imul
mov
sbb
dec
in
retf
cmp
pushf
retf
or
shl
push
and
stos
xor
fcmovnb
call
fimul
in
xchg
dec
or
jecxz
fcom
(bad)
cmc
mov
sbb
cmp
mov
jne
ss
sbb
push
cs
icebp
pop
das
dec
xor
jl
cmp
push
cmp
(bad)
pushf
xchg
push
pop
sbb
out
mov
mov
(bad)
push
inc
and
not
sub
pushf
lahf
out
lds
push
pop
rol
dec
sbb
fdivr
cli
pop
cs
js
push
jnp
pop
inc
or
xor
fidivr
sbb
adc
out
repz
cli
lock
or
in
mov
xor
or
fcomp
fidiv
jl
jmp
xor
adc
sub
outs
dec
lods
mov
mov
mov
jae
fmul
push
mov
cmp
addr16
call
in
stc
inc
and
je
jo
retf
or
out
mov
add
adc
sub
dec
in
(bad)
push
in
loope
cmps
out
jmp
pop
inc
cmp
xor
xchg
das
jae
(bad)
not
jno
or
ror
xor
pop
call
adc
push
jbe
cmp
mov
or
jmp
repnz
mov
sbb
retf
arpl
in
sub
cmp
xor
push
or
jmp
loope
arpl
mov
cs
in
jae
addr16
xchg
xchg
mov
(bad)
hlt
out
insertq
jns
dec
jle
and
sti
add
sbb
jg
es
jle
xchg
sbb
je
push
aam
aam
xor
push
mov
xor
stos
ret
ret
sbb
and
dec
clc
shl
cli
shl
loop
enter
dec
std
and
retf
push
lock
push
xchg
mov
inc
inc
movs
push
loop
jo
pop
mov
jecxz
mov
imul
jl
push
shl
stos
sub
sbb
fild
jns
and
loope
fdiv
ins
mov
add
xchg
sbb
bnd
pop
or
pop
dec
push
je
and
retf
retf
mov
je
jne
in
lds
in
ja
in
inc
aas
and
push
jb
into
cmp
push
std
push
ret
jmp
fs
jnp
jno
ds
(bad)
push
in
mov
push
mov
mov
pop
inc
lahf
enter
push
test
or
push
aaa
fsub
adc
xor
mov
hlt
loope
int
cs
clc
inc
push
cmp
or
inc
imul
adc
mov
jno
into
lock
mov
push
shr
out
and
push
mov
mov
sbb
cmc
or
outs
das
ins
int3
repz
jb
jae
mov
sti
xchg
loope
leave
push
shl
sar
or
jbe
ror
cmps
call
pop
push
mov
and
or
add
test
mov
ret
inc
mov
xor
and
add
mov
inc
leave
sbb
mov
cmp
in
mov
dec
hlt
mov
rcr
push
pop
int3
mov
push
ins
int3
mov
es
call
test
outs
adc
jmp
ins
retf
inc
loop
in
xchg
xor
cld
inc
add
in
jmp
push
les
es
es
sbb
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
mov
sbb
or
mov
push
dec
fs
push
jmp
inc
in
or
dec
in
mov
dec
in
mov
push
dec
jmp
inc
in
add
dec
in
mov
dec
in
mov
push
dec
cmp
cs
hlt
mov
push
dec
fnstcw
push
inc
in
pop
fmul
or
in
mov
push
dec
in
mov
push
dec
in
mov
push
xchg
(bad)
jmp
mov
push
dec
in
mov
push
dec
in
mov
push
adc
mov
lods
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
adc
es
push
jmp
mov
push
dec
in
mov
push
dec
movs
mov
push
mov
sbb
int3
in
mov
push
dec
in
stos
push
dec
les
push
hlt
in
mov
das
dec
in
(bad)
push
in
xor
adc
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
aaa
mov
aad
cmps
sbb
test
test
push
gs
rol
xor
movs
pop
xchg
(bad)
xor
mov
in
jg
shl
push
int3
lea
xlat
fiadd
cwde
push
or
popa
scas
fild
push
inc
push
mov
adc
or
mov
movs
dec
repz
loope
jp
movs
sub
xor
mov
in
jg
shl
push
int3
lea
xlat
fiadd
cwde
push
or
popa
scas
fild
push
inc
push
mov
adc
or
mov
movs
dec
repz
loope
jp
movs
sub
xor
mov
in
jg
shl
jle
lea
xlat
fidiv
cld
push
test
dec
in
mov
push
dec
cld
mov
push
(bad)
in
sub
dec
in
fld
push
ins
cld
inc
pop
bound
lods
dec
(bad)
into
mov
add
and
aas
out
pop
int3
mov
adc
push
cmp
add
ret
pop
or
push
cmp
int
clc
jle
cld
mov
add
out
loop
lods
dec
(bad)
into
mov
add
and
aas
out
pop
int3
mov
adc
push
cmp
add
ret
pop
or
push
cmp
int
clc
jle
cld
mov
add
out
loop
lods
dec
(bad)
into
bound
inc
push
mov
pop
jbe
cmc
xor
and
clc
or
xchg
sub
movs
scas
mov
push
dec
mov
cli
mov
sbb
mov
repnz
pop
sar
mov
mov
fadd
shr
int3
in
stos
add
ins
loopne
call
sub
and
dec
mov
cli
mov
sbb
mov
repnz
pop
sar
mov
mov
fadd
shr
int3
in
stos
add
ins
loopne
call
sub
and
shl
sbb
adc
xchg
dec
cld
inc
sub
push
dec
in
mov
push
dec
in
mov
push
les
scas
aam
test
cmc
pop
mov
push
inc
xchg
mov
or
jp
jmp
dec
sar
aaa
mov
loopne
into
push
addr16
add
xchg
sahf
and
(bad)
sbb
shl
and
ds
fadd
mov
lahf
or
ins
cli
fbstp
jne
mov
jl
(bad)
push
ret
sub
sar
aaa
mov
loopne
into
push
addr16
add
xchg
sahf
and
(bad)
sbb
shl
and
ds
fadd
mov
lahf
or
ins
cli
fbstp
jne
mov
jl
(bad)
push
ret
sub
sar
aaa
mov
loopne
into
push
pop
cmp
lods
jo
xchg
rcl
in
xchg
inc
or
sub
jae
adc
mov
fld
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
mov
push
jge
loop
adc
xchg
mov
aad
mov
mov
lods
xor
in
mov
push
fs
stos
push
dec
cld
mov
push
aam
fwait
push
fdivr
fs
mov
lods
dec
fadd
dec
xchg
pop
adc
adc
(bad)
adc
xor
xor
popa
or
cmp
push
and
add
pushf
jae
cmp
push
inc
add
outs
cmp
int
mov
mov
mov
pop
push
ss
mov
or
adc
clc
mov
xor
sbb
mov
movs
addr16
jo
lahf
jp
cwde
fcomp
movs
rcl
das
daa
xchg
test
and
aas
lock
call
mov
cmp
push
and
add
pushf
jae
cmp
push
inc
add
outs
cmp
int
mov
mov
mov
pop
push
ss
mov
or
adc
clc
mov
xor
sbb
mov
movs
addr16
jo
lahf
jp
cwde
fcomp
movs
rcl
das
daa
xchg
test
and
aas
lock
call
mov
cmp
push
and
add
pushf
jae
cmp
push
inc
add
outs
cmp
sub
push
sbb
mov
sbb
test
xchg
adc
pushf
adc
out
mov
daa
inc
stos
push
loope
mov
adc
mov
stos
out
jecxz
sbb
jno
(bad)
fs
out
jg
mov
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
es
dec
adc
repz
cdq
cli
dec
or
icebp
dec
in
sub
push
inc
in
mov
dec
in
mov
dec
push
push
inc
gs
xchg
in
dec
mov
mov
push
add
jle
sbb
movs
(bad)
mov
pop
enter
mov
dec
vmovntps
pop
pop
repz
sahf
pushf
push
shr
jle
push
jle
sbb
movs
(bad)
mov
pop
enter
mov
dec
vmovntps
pop
pop
repz
sahf
pushf
push
shr
jle
push
jle
sbb
(bad)
(bad)
mov
jp
fidiv
xchg
hlt
or
fnstsw
movs
xor
and
ror
rcl
jns
je
sub
jb
cmp
(bad)
(bad)
rcl
jns
je
sub
jb
cmp
(bad)
vzeroupper
rcl
mov
bound
mov
in
inc
test
push
int3
adc
push
dec
adc
test
test
test
test
test
test
test
test
test
test
test
test
test
test
fwait
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
in
lahf
outs
into
sub
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
adc
lahf
dec
hlt
inc
sub
push
pop
in
mov
dec
in
mov
dec
in
push
inc
loop
push
shr
add
jmp
push
(bad)
cli
push
int
mov
cmc
std
(bad)
clc
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
std
push
pop
movs
int3
push
pop
cmc
mov
pop
das
adc
shl
sbb
or
hlt
mov
rol
mov
adc
add
movs
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
fistp
mov
add
jbe
(bad)
daa
mov
and
hlt
inc
test
push
dec
in
mov
dec
in
push
dec
mov
popa
xor
fwait
in
cmc
pop
in
cli
push
int
mov
test
lahf
xchg
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
stos
fist
call
retf
cmp
iret
adc
repz
std
sbb
stos
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
mov
pop
pop
lods
sti
pop
pop
push
or
push
jmp
inc
in
mov
push
dec
in
mov
push
inc
out
mov
pop
fwait
in
cmp
inc
push
cli
push
int
mov
popa
xchg
test
fiadd
movs
cdq
sbb
mov
push
push
fstp
cmp
xchg
sar
inc
pop
push
cdq
sbb
xor
push
fstp
cmp
xchg
sar
inc
pop
push
cdq
sbb
xor
loopne
sbb
push
repz
xor
(bad)
lock
jae
fdiv
loopne
cmp
xchg
xchg
push
(bad)
loopne
addr16
lods
push
pop
jp
jns
and
repnz
xchg
push
(bad)
loopne
addr16
lods
push
pop
jp
jns
and
repnz
push
out
pop
sub
adc
push
xchg
adc
scas
mov
or
mov
mov
or
cli
or
cld
mov
or
hlt
stos
push
push
int3
mov
push
fs
call
mov
pop
adc
loop
fcomp
jle
dec
loop
aam
cmp
mov
fdiv
sbb
mov
adc
inc
int3
mov
cs
inc
and
repnz
in
dec
shr
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
lods
sbb
or
mov
push
inc
retf
stos
xchg
mov
push
dec
in
mov
dec
in
mov
push
ins
lods
stos
push
push
and
ss
hlt
inc
sub
push
dec
in
mov
dec
in
mov
push
inc
adc
push
fs
movs
cs
push
pop
in
mov
dec
jmp
mov
dec
in
mov
push
dec
in
mov
push
sbb
mov
cmp
sbb
in
and
dec
cmc
add
aam
repz
(bad)
inc
mov
xchg
xor
dec
in
stos
in
push
stos
dec
fisttp
xor
stos
jno
pusha
jmp
sbb
inc
cmp
stos
dec
jne
jg
imul
cmp
bt
xchg
int3
(bad)
je
xor
pop
hlt
jle
mov
and
outs
or
lock
xchg
int3
pop
leave
ja
shl
sahf
jmp
sub
cwde
aaa
cmp
pop
xor
or
adc
cmp
std
adc
dec
sub
(bad)
into
fadd
mov
pop
mov
push
(bad)
call
out
mov
add
retf
imul
addr16
push
pop
jmp
add
xlat
mov
or
xchg
jmp
mov
loope
pusha
pusha
test
dec
cs
push
lock
jnp
pop
cwde
mov
mov
icebp
push
xor
jmp
dec
mov
push
cmp
test
add
push
mov
mov
test
cmp
cwde
mov
fiadd
lods
xor
gs
adc
cwde
adc
adc
pop
mov
add
pusha
cmp
imul
into
mov
dec
sbb
and
mov
mov
hlt
pop
imul
sub
and
mov
sbb
pop
xor
pop
inc
rcr
out
imul
shr
xchg
sbb
xor
cmp
repz
fld
in
ja
les
or
and
pop
dec
mov
(bad)
fmul
push
ss
fdivrp
push
cmc
in
mov
push
inc
adc
xchg
mov
dec
bound
or
daa
mov
xchg
popa
jno
push
lods
mov
popa
dec
in
adc
scas
push
mov
mov
in
push
mov
ja
push
add
mov
cmp
push
leave
out
in
mov
dec
in
mov
push
dec
in
mov
push
dec
jmp
dec
cld
cmp
pop
in
xchg
push
dec
in
push
push
in
mov
fmul
int
and
(bad)
pop
and
push
pop
cmp
les
inc
test
idiv
xchg
mov
leave
inc
call
aam
cdq
or
mov
jge
jbe
fidiv
lds
lods
adc
outs
stc
jae
jo
fstp
jbe
jno
mov
imul
cmp
sar
cmps
out
and
fcomp
ja
push
ret
mov
xor
pop
ins
jp
mov
(bad)
inc
shl
outs
lods
fwait
je
and
aaa
push
cmc
cmp
outs
imul
rcl
sbb
cli
jle
(bad)
std
out
mov
movs
movs
cdq
inc
dec
adc
push
outs
movs
cmps
pushf
add
or
cmp
sbb
fmul
adc
and
dec
mov
ins
stos
sbb
fst
cmp
inc
mov
lahf
inc
test
addr16
out
cli
sahf
jno
daa
adc
pop
jns
pop
pop
push
sahf
jg
data16
mov
xchg
and
in
xchg
or
jmp
stos
aaa
(bad)
cmp
(bad)
cmp
ins
pop
xchg
adc
hlt
sbb
adc
movs
jl
(bad)
cmp
dec
lahf
sbb
sbb
das
rol
sbb
neg
test
cdq
sub
add
jne
pop
sub
push
sub
lods
adc
mov
jbe
pop
jg
jl
cwde
std
nop
adc
int
adc
sub
mov
mov
jg
dec
imul
std
push
mov
adc
(bad)
sbb
scas
xor
xor
dec
cmp
rcl
add
out
pop
mov
jb
sahf
out
popa
fadd
in
fsubr
call
xor
out
lods
call
adc
ficom
and
add
mov
rcl
xlat
fwait
imul
data16
js
push
cli
ffree
rcr
mov
push
jecxz
int
clc
adc
sbb
rcl
lods
mov
ins
xor
add
xchg
xchg
ins
jnp
mov
dec
pop
test
pop
lods
aad
or
inc
inc
out
and
(bad)
aam
cdq
xor
cwde
cmp
inc
std
fnstcw
outs
in
out
xor
shl
jmp
jg
jmp
enter
inc
fs
cwde
mulps
sub
dec
and
sub
push
mul
loope
dec
int
or
scas
test
cmp
sub
dec
adc
test
sub
call
in
stos
cs
in
mov
push
pop
in
push
les
sahf
int3
in
stos
(bad)
aam
mov
into
addr16
dec
jmp
push
cmp
push
inc
gs
pop
jb
inc
fadd
xchg
cli
pop
inc
fs
cmps
icebp
xor
cmps
stos
out
popf
cmp
fs
mov
(bad)
or
rol
rol
mov
jg
mov
jns
clc
inc
and
add
mov
stos
sbb
cdq
mov
in
xchg
sahf
add
dec
add
dec
stos
and
jbe
scas
add
mov
pop
jo
adc
addr16
dec
and
mov
xchg
stc
pop
mov
icebp
mov
fcomp
push
(bad)
pop
gs
(bad)
adc
dec
outs
sub
push
push
ror
fistp
icebp
push
fwait
outs
pusha
das
call
cmps
inc
cmp
jg
cmps
je
mov
enter
push
cdq
mov
push
xchg
ja
fild
pop
aam
mov
icebp
je
sbb
(bad)
add
jb
xor
add
xor
imul
movs
dec
imul
rcl
cs
inc
jg
scas
lock
push
inc
lock
add
xchg
mov
mov
ror
jae
dec
sahf
in
scas
inc
xchg
push
add
cmp
push
adc
rcr
ja
sbb
mov
call
mov
scas
fadd
xlat
add
cld
pop
mov
cs
mov
mov
mov
(bad)
int3
nop
out
sub
les
jns
jmp
out
push
pop
jmp
push
xor
ds
push
jb
xor
cdq
retf
xchg
mov
jl
(bad)
jle
int3
stos
push
push
in
xchg
push
dec
in
mov
push
push
in
push
lds
push
pop
out
xchg
fmulp
xor
cmp
add
mov
mov
and
inc
or
lods
sbb
mov
jbe
and
cmp
dec
sbb
nop
out
cmc
daa
push
mov
and
das
xchg
stos
ror
jmp
push
std
sti
imul
push
jo
or
adc
out
mov
les
out
bound
push
mov
jmp
js
and
mov
jle
dec
cmp
sub
rcl
repnz
aad
mov
(bad)
ret
sub
lds
pop
mov
cmp
repz
sbb
in
push
dec
repnz
push
or
mov
mov
leave
std
xchg
or
mov
mov
int3
imul
ja
aam
shl
(bad)
fadd
pop
pop
cmp
gs
inc
pop
mov
xor
cmp
in
inc
adc
(bad)
int
xchg
dec
xor
mov
xor
repz
in
inc
stc
pop
aaa
jmp
ds
and
pop
xlat
bound
and
or
cmp
adc
and
test
loopne
jg
adc
sti
div
pop
sahf
inc
and
inc
es
cmps
loope
mov
sbb
mov
fisubr
sub
xchg
imul
nop
popf
and
aaa
push
stos
sbb
push
scas
(bad)
loop
cmp
inc
and
cmp
xchg
cld
call
in
mov
es
in
mov
push
inc
jge
sahf
pop
data16
xchg
(bad)
cmc
mov
dec
loopne
stos
(bad)
jle
pop
dec
cmc
cmp
shl
pop
lods
cmp
dec
fadd
dec
jmp
push
mov
inc
pop
pop
int
xor
popf
dec
js
sub
aam
and
mov
adc
or
dec
popf
out
sub
ins
xchg
cmp
aam
push
leave
aam
(bad)
and
mov
mov
sbb
out
dec
cs
push
mov
cmp
ss
jnp
dec
inc
rcl
push
or
clc
lds
pushf
xchg
add
pushf
inc
add
mov
lahf
aad
sbb
sahf
rol
(bad)
push
aaa
adc
sbb
sar
fs
jno
pop
test
or
in
jnp
pop
xchg
cmc
sar
push
fadd
sub
and
mov
loopne
cli
adc
test
pop
aaa
or
xchg
inc
mov
push
inc
(bad)
(bad)
sub
(bad)
rol
mov
cmp
and
popa
sbb
shl
mov
jbe
bound
and
jbe
repnz
lock
mov
xchg
mov
jae
rol
popf
or
and
shl
pop
mov
xchg
(bad)
adc
call
cwde
fadd
cmp
mov
mov
pop
jmp
pop
sbb
push
jno
fld
or
jns
int3
cmps
(bad)
inc
mov
jno
sbb
push
cmc
xchg
aas
or
mov
dec
inc
xor
lds
es
dec
test
xor
jecxz
or
sbb
xchg
sub
pushf
(bad)
xor
and
xchg
or
sub
sbb
loopne
retf
adc
xor
mov
cwde
mov
push
or
or
loope
stos
dec
movs
pop
mov
xor
in
or
mov
mov
pop
shr
xchg
scas
sub
lds
call
push
(bad)
or
xor
bound
icebp
pop
fmul
fldcw
push
xchg
cmp
test
push
sbb
loope
push
or
bswap
daa
jns
mov
xchg
add
(bad)
out
mov
bound
ret
mov
shl
fs
cld
xlat
in
scas
and
inc
and
inc
retf
jl
cmp
dec
sbb
arpl
ret
jmp
push
loope
mov
sub
adc
popa
ficomp
dec
sbb
cli
lods
(bad)
mov
dec
xchg
xchg
daa
xchg
and
jns
call
jns
out
cmp
retf
adc
jmp
mov
imul
cld
sbb
stos
icebp
call
sbb
je
jae
loope
push
xchg
jg
xlat
test
call
cmps
cmp
fbld
jo
ror
cmc
mov
sub
fcomp
cmp
outs
(bad)
mov
add
mov
xchg
test
sub
call
cdq
imul
and
add
push
shl
cmp
mov
ror
stos
mov
ror
movs
mov
into
dec
scas
hlt
pop
push
jmp
ins
xor
mov
and
lock
lods
into
mov
xchg
in
fxch
jbe
mov
push
add
cmp
mov
push
add
fcomp
lock
imul
pusha
jle
jmp
aas
mov
adc
xor
pop
data16
fsubr
inc
shl
rol
mov
sub
gs
xor
ins
fimul
popa
or
bound
fsubp
mov
into
out
gs
je
stos
cmps
and
nop
dec
pusha
inc
pusha
mov
sar
push
fistp
iret
(bad)
push
jmp
or
sub
add
ins
les
(bad)
test
push
fdivr
fwait
xchg
add
inc
mov
push
mov
(bad)
outs
mov
aad
int3
push
lock
test
jmp
jl
jmp
pusha
retf
xchg
mov
outs
fcmovnu
sbb
dec
mov
mov
sub
repz
jae
mov
xchg
shr
rep
or
into
fbld
jb
mov
mov
sub
or
jae
shr
and
js
jb
adc
pop
cmp
in
or
add
test
mov
dec
mov
mov
popa
adc
std
loop
pop
push
pusha
fldl2t
add
inc
cmp
dec
jmp
dec
cld
loop
push
in
push
push
in
xchg
cs
fs
inc
in
push
lds
push
(bad)
popa
xor
or
mov
dec
cmp
or
in
dec
mov
mov
or
mov
mov
jle
lods
cmp
pop
clc
jmp
dec
jge
cmp
sbb
sti
addr16
out
lock
push
mov
inc
int3
sub
fcomi
ss
push
cmc
(bad)
lods
or
xchg
mov
jmp
stos
sub
stos
or
push
sub
(bad)
out
outs
test
jbe
xor
push
add
int
out
mov
xchg
or
cmp
push
xor
repnz
div
in
enter
pop
int3
lods
dec
sub
or
test
jns
xchg
xor
imul
mov
or
shr
sub
mov
call
ffree
outs
psubw
mov
mov
or
imul
mov
and
push
mov
jb
fwait
sahf
sub
push
inc
lea
jecxz
imul
mov
push
sbb
aas
xor
add
sahf
enter
push
push
aaa
push
in
mov
cmc
push
shl
add
mov
dec
lods
stos
scas
jl
into
js
call
mov
sub
loope
adc
and
and
and
stc
push
xlat
mov
xor
lods
into
shl
xchg
retf
mov
shl
push
ins
and
xchg
sti
popa
out
add
push
or
repz
and
rcr
in
fsubrp
xchg
loope
adc
loop
lods
pop
jne
jne
jg
cdq
mov
xor
xchg
xor
in
cmp
call
push
(bad)
dec
dec
add
gs
adc
ins
pop
mov
sub
in
sub
out
pop
adc
imul
xor
imul
mov
push
pop
fdiv
imul
cmp
inc
pop
pushf
scas
jno
adc
push
test
xor
fidiv
stos
leave
hlt
loop
iret
pushf
sub
adc
or
(bad)
data16
jo
outs
adc
xlat
push
ret
mov
daa
out
sbb
dec
lods
repnz
repnz
mov
jno
push
sbb
mov
in
test
(bad)
frstor
mov
(bad)
xor
out
xor
sahf
test
fisttp
xchg
arpl
in
cmp
pop
ds
call
in
mov
sbb
and
in
pop
fidivr
outs
enter
ds
rcl
ins
and
mov
cmp
lods
hlt
or
mov
data16
mov
cmp
cwde
fsubp
enter
in
mov
push
shl
sahf
test
inc
mov
mov
fwait
repnz
jbe
adc
xchg
dec
jmp
inc
jns
cmp
out
or
fidivr
mov
outs
js
jmp
inc
mov
add
popa
out
cmp
xor
and
pop
xor
das
and
iret
mov
xor
mov
inc
ja
or
pop
cmp
cmp
in
es
inc
mov
les
jmp
mov
pop
and
outs
outs
or
adc
nop
cmp
clc
fbld
mov
retf
fwait
bound
push
out
cli
sbb
pop
push
mov
sahf
jle
daa
pop
inc
mov
mov
fmulp
adc
fwait
cmp
cmp
dec
xchg
imul
cdq
mov
xchg
adc
push
inc
xchg
clc
je
int3
movs
(bad)
and
fs
add
lahf
popa
mov
push
sbb
fsub
mov
mov
mov
fimul
jl
and
mov
(bad)
cmc
or
pop
fmul
and
(bad)
jne
fs
loop
stos
rcl
rcr
xchg
data16
retf
fisttp
or
cmc
dec
retf
mov
jecxz
mov
fst
adc
mov
test
jle
das
cmp
sbb
sub
mov
push
aas
in
mov
inc
stos
and
leave
dec
mov
shl
push
push
das
dec
xchg
mov
stos
jae
jae
jo
adc
ins
cmp
mov
dec
push
outs
mov
js
shr
inc
or
(bad)
fisttp
addr16
xchg
mov
jmp
sahf
mov
mov
adc
out
dec
add
sub
inc
fs
pusha
pop
out
ds
pop
dec
mov
int3
mov
cld
inc
(bad)
push
dec
in
mov
mov
push
dec
in
mov
push
dec
nop
mov
push
dec
xor
push
dec
je
push
dec
lock
inc
jl
cmps
dec
push
icebp
sub
mov
lar
or
out
bound
dec
sbb
aam
jo
push
in
or
mov
cmp
mov
int
cmp
int3
and
dec
push
cli
push
mov
mov
jle
dec
int
or
dec
hlt
cmp
dec
and
or
mov
push
dec
in
mov
or
push
dec
in
jb
dec
in
mov
push
dec
in
mov
push
dec
xchg
mov
push
dec
cld
inc
sub
push
push
in
mov
push
in
call
out
push
inc
imul
enter
inc
adc
or
adc
or
push
dec
lds
mul
and
dec
rep
sar
test
jmp
cmp
sbb
mov
mov
xchg
test
and
and
fdiv
push
aas
(bad)
cmp
sub
xor
sbb
pop
or
mov
(bad)
cli
sbb
pop
sub
repz
or
add
iret
dec
lock
inc
cmp
fisttp
sub
push
shl
dec
or
imul
xchg
ja
call
int
mov
sub
mov
lds
std
inc
dec
and
rdtsc
scas
adc
push
cmp
stc
xchg
das
pushf
inc
mov
fmul
adc
mov
rol
and
pop
mov
pop
cmp
add
in
leave
dec
in
or
dec
push
push
iret
mov
jne
int3
jmp
xchg
jne
jns
out
mov
ss
mov
int
inc
xchg
enter
sbb
mov
xchg
lock
(bad)
popf
das
dec
popf
cmp
jb
pop
cmp
push
movntq
adc
(bad)
test
adc
into
mov
ret
mov
jmp
ror
mov
imul
lods
rcr
add
push
and
xor
pop
repnz
bound
(bad)
rcr
inc
outs
sbb
test
cwde
push
repz
or
sub
call
out
idiv
adc
int3
add
fcom
xchg
jno
shl
cmps
mov
mov
inc
retf
std
xlat
(bad)
inc
mov
mov
loopne
push
inc
movs
xchg
push
pop
cmps
sti
fcomp
retf
sti
addr16
popf
mov
push
loopne
jmp
retf
fnstcw
(bad)
pop
pop
int3
mov
push
dec
in
push
dec
gs
xchg
push
xor
push
ret
add
ins
mov
push
sbb
inc
or
cmp
jnp
fstp
movs
xchg
push
fcmovbe
fadd
xchg
call
jmp
ss
mov
cdq
push
mov
adc
imul
ds
imul
(bad)
pop
stos
out
fistp
sti
push
out
out
push
ficom
sahf
hlt
xchg
ret
addr16
adc
or
inc
xor
jnp
cmc
call
jmp
(bad)
retf
fwait
(bad)
imul
or
lods
sbb
add
loop
inc
int3
xor
cmp
mov
sub
cmp
inc
dec
adc
jmp
xchg
push
shr
adc
push
mov
int3
push
clc
or
push
jle
jbe
push
lock
jecxz
mov
sti
inc
add
mov
inc
bound
into
test
adc
les
test
jg
jae
push
loopne
lea
or
mov
jmp
mov
js
shr
das
fsubr
fstp
ja
xlat
mov
nop
repnz
and
sub
mov
push
fidivr
ficomp
sti
xchg
mov
lds
popa
mov
sti
fs
stc
and
fs
dec
ret
fistp
mov
or
pop
push
jle
or
loope
imul
enter
and
(bad)
into
out
jb
mov
rol
sbb
imul
shl
xchg
rol
xchg
mov
retf
inc
or
jns
add
pop
push
pop
adc
dec
mov
(bad)
adc
mov
cmp
sub
mov
out
std
sbb
scas
(bad)
jmp
inc
in
(bad)
pop
hlt
stos
push
jl
mov
push
inc
in
push
(bad)
out
(bad)
jmp
add
bound
add
cmp
dec
cmp
or
ins
mov
push
in
inc
or
jb
es
xlat
cwde
out
clc
xor
retf
mov
sbb
or
call
enter
pop
test
jmp
cli
and
sbb
dec
sahf
(bad)
jns
test
jne
mov
hlt
in
inc
dec
repnz
dec
inc
xchg
dec
cmp
add
out
popa
into
mov
fist
and
rcr
sbb
mov
jp
pushf
shl
mov
inc
sub
leave
cld
xchg
pop
mov
mov
adc
or
loope
add
mov
dec
jno
xchg
(bad)
out
cmp
push
ja
adc
sahf
jmp
add
push
pop
sub
mov
push
sub
(bad)
outs
or
arpl
or
loop
dec
sbb
ins
mov
mov
jmp
pop
in
imul
es
inc
sub
int3
fs
fisubr
inc
inc
rcl
imul
xchg
hlt
add
gs
fistp
add
inc
xor
scas
adc
mov
imul
xor
call
dec
out
ror
lods
xor
or
ret
test
push
(bad)
sub
bound
loope
in
aas
mov
jecxz
es
fmul
retf
jmp
test
fcmove
push
dec
xchg
lea
add
sar
add
or
inc
jl
jnp
mov
xchg
dec
add
pop
push
outs
sub
into
cmp
dec
cmp
(bad)
mov
or
pop
push
adc
adc
dec
or
not
fadd
mov
lods
ss
cmp
jns
cmp
inc
push
push
lods
xchg
jmp
sbb
xor
pusha
cmp
fcom
and
add
add
inc
(bad)
imul
ins
loopne
loope
add
mov
in
mov
jo
sub
loopne
in
jle
cs
cdq
pop
or
jecxz
in
call
dec
cmp
in
fsubr
lods
stos
xchg
mov
push
or
mov
cmp
push
arpl
mov
add
ins
push
and
loopne
jnp
pop
addr16
test
ins
mov
cs
ds
mov
enter
cmp
pop
dec
loopne
cmps
sbb
aaa
mov
out
inc
pushf
dec
cmp
loop
test
fcmovu
js
call
(bad)
jp
in
hlt
push
and
data16
call
es
cs
pop
das
cmps
mov
jbe
jnp
jl
fxch
fnstsw
add
sbb
pop
xor
pop
aas
and
jns
int3
into
inc
loopne
in
ins
cld
test
sub
adc
mov
mov
sahf
xor
jbe
(bad)
out
fmul
sub
adc
or
fwait
cmps
xchg
add
dec
repz
push
cli
outs
in
mov
int
sbb
fisubr
push
aam
loop
pop
std
cdq
aam
pushf
cwde
or
jle
pushf
mov
push
or
mov
mov
push
lds
test
mov
hlt
iret
pop
sub
sbb
cmc
retf
sub
push
pop
sub
sbb
ret
scas
jo
jno
in
push
jp
xor
or
or
dec
or
loopne
pop
push
inc
jge
add
pop
mov
into
sbb
xor
out
lock
shl
pop
test
mov
es
shl
jnp
mov
dec
gs
sub
dec
out
rol
mov
clc
ror
dec
test
cmc
ins
dec
inc
or
push
stos
loope
sub
adc
pushw
fiadd
lock
xchg
std
stos
pop
xchg
xchg
adc
cmp
push
int
movs
inc
mov
jp
(bad)
int3
scas
push
xchg
jo
scas
mov
ficomp
cmp
shr
inc
sub
sub
mov
js
ffreep
and
sbb
and
push
in
ss
fwait
es
xchg
lods
mov
jle
mov
aas
ds
mov
ficom
inc
fmul
dec
rol
and
jne
jg
inc
xchg
fnsave
movs
add
sbb
mov
inc
xor
sub
mov
ins
test
movs
mov
mov
add
cli
pop
enter
inc
jne
and
lods
pop
dec
xchg
jg
js
jle
mov
and
sbb
aas
add
dec
scas
retf
sub
lds
mov
push
mov
push
add
ficom
std
and
xor
pop
shr
mov
loopne
mov
in
xchg
adc
push
cmp
dec
mov
push
pop
ja
repz
clc
push
dec
(bad)
pop
scas
sahf
cmps
fadd
mov
clc
mov
imul
sub
iret
dec
fsubr
mov
pop
sbb
nop
test
test
xchg
xchg
push
int3
mov
xchg
popf
out
daa
js
test
ret
xor
jno
leave
dec
pusha
dec
push
add
shr
cli
lock
outs
dec
out
mov
fwait
das
mov
pop
add
ss
adc
sub
xor
outs
xor
mov
(bad)
and
dec
dec
adc
dec
aaa
ja
ret
sti
dec
adc
add
pop
dec
enter
stc
fsubr
mov
je
and
dec
fadd
xchg
sub
or
out
stc
or
hlt
cdq
mov
pop
int
popa
xchg
xchg
mov
jp
mov
aaa
ret
sub
xrelease
mov
xchg
imul
int
bound
icebp
hlt
mul
not
cmp
mov
pop
cmps
pop
mov
cwde
xor
scas
push
scas
inc
mov
dec
les
ret
ret
imul
aam
mov
jl
dec
movs
gs
fisubr
adc
xchg
jge
jno
stc
push
add
xchg
call
push
add
in
pushf
enter
sbb
loop
inc
sub
in
stos
adc
cld
xchg
(bad)
mov
or
mov
mov
or
xchg
sub
mov
dec
pop
(bad)
jg
test
jl
add
pop
jge
test
push
inc
retf
in
mov
fsubp
fwait
mov
mov
xor
push
xor
dec
jno
ja
push
pop
xchg
inc
mov
js
arpl
dec
xchg
mov
add
lods
or
jo
push
sub
jb
imul
fnstenv
es
pop
pop
jno
sbb
pop
or
jg
xlat
(bad)
cmp
clc
cmp
xchg
daa
mov
arpl
inc
leave
ss
pusha
scas
pop
pop
pop
dec
into
or
(bad)
ins
mov
adc
jge
mov
popa
int3
pop
cmp
or
add
mov
loopne
addr16
sbb
int
ja
adc
xchg
adc
out
inc
fmul
call
sahf
in
pop
xor
or
in
mov
dec
xor
js
pop
popf
mov
(bad)
jmp
test
xlat
cli
or
outs
sub
ins
stos
(bad)
dec
in
leave
in
loope
inc
mov
inc
adc
cwde
and
inc
or
out
mov
inc
inc
out
mov
or
cli
or
cld
mov
or
hlt
stos
push
push
int3
mov
push
fs
call
mov
pop
adc
loop
fcomp
jle
dec
loop
aam
cmp
mov
fdiv
sbb
mov
adc
inc
int3
mov
cs
inc
and
repnz
in
dec
shr
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
lods
sbb
or
mov
push
inc
retf
stos
xchg
mov
push
dec
in
mov
push
dec
aam
push
ins
retf
mov
mov
lods
dec
inc
in
fiadd
push
dec
in
mov
dec
hlt
mov
push
jl
call
hlt
mov
push
dec
cmp
mov
fld
movs
cmp
xor
sbb
sar
test
inc
cs
dec
mov
inc
retf
or
or
pop
mov
(bad)
fnstcw
ja
dec
shr
pop
xchg
sub
xor
mov
call
in
call
les
cs
mov
in
and
dec
mov
xchg
push
pushf
jo
inc
dec
adc
jns
(bad)
data16
and
sub
mov
shl
rcl
add
inc
dec
and
push
sub
inc
jle
xchg
imul
enter
jno
xor
cmps
push
add
clc
ja
mov
ror
xchg
add
or
mov
inc
aad
inc
jmp
dec
cld
rol
dec
in
cli
ss
cld
mov
push
(bad)
out
push
inc
cld
sub
lds
lahf
pop
arpl
or
fld
push
push
or
iret
inc
mov
mov
aad
add
mov
xor
jmp
scas
sub
cli
sub
clc
cmp
in
jo
xchg
xor
inc
cs
addr16
sub
jbe
into
stc
add
pop
cdq
lods
sbb
mov
sub
(bad)
sub
imul
sbb
sti
out
inc
add
xchg
pop
test
jns
movs
and
adc
push
in
inc
or
xor
mov
push
xchg
pop
neg
dec
dec
test
cmp
bound
cs
or
dec
cmp
gs
xor
call
in
call
fs
push
fs
cs
mov
jg
xor
loopne
xchg
(bad)
lods
cmps
pop
dec
in
fld
push
ins
pop
inc
pop
rcr
sub
in
dec
pop
loop
sub
add
dec
test
xor
hlt
lock
mov
sbb
dec
cmp
and
movs
scas
and
sbb
cdq
pop
mov
fnstenv
lods
push
rcl
iret
xor
(bad)
imul
jl
loop
clc
icebp
mov
mov
pusha
xchg
popf
mov
add
push
pop
ins
fimul
js
mov
pop
lds
mov
push
sbb
dec
add
sbb
mov
cmp
in
push
rcl
mul
xor
mov
bound
data16
call
pop
in
mov
jmp
sub
cmp
mov
or
mov
adc
mov
mov
(bad)
mov
sbb
out
loope
sbb
or
push
mov
inc
cmp
cmps
jns
loope
inc
pop
or
and
popa
aaa
pop
movs
call
call
(bad)
and
or
xor
loopne
pop
xor
lds
jnp
cwde
mov
or
cmps
popf
in
and
xor
xlat
mov
fs
(bad)
pusha
je
xchg
cld
cmp
or
pop
jecxz
fs
dec
sub
xchg
mov
jno
mov
add
retf
jnp
mov
sub
int
mov
push
je
xchg
es
in
push
dec
int3
mov
push
fs
xor
(bad)
jne
pop
(bad)
cmp
(bad)
loop
xchg
inc
lods
mov
dec
fadd
dec
pop
mov
test
inc
pop
outs
cmp
add
and
xchg
popf
push
mov
nop
mov
das
outs
add
leave
dec
jecxz
pop
fisttp
mov
adc
ret
xor
ja
mov
mov
fidiv
jp
push
cwde
and
int3
loopne
mov
outs
push
xchg
xor
xchg
mov
xor
xchg
sti
rcr
mov
push
xchg
push
jne
scas
gs
mov
xor
add
ror
cmp
pop
sub
pop
jb
jge
popa
sar
push
les
push
fwait
sub
add
jmp
adc
test
(bad)
sbb
xor
loop
cwde
jb
clc
xor
or
mov
pop
inc
loop
push
push
add
push
inc
xchg
rcr
daa
sub
sti
sbb
jno
xchg
fisubr
adc
add
fsubr
mov
add
push
pop
mov
loop
retf
xor
adc
xchg
pop
push
enterw
in
mov
dec
or
nop
popa
mov
sub
adc
in
ins
int
inc
hlt
call
in
mov
dec
in
mov
dec
in
push
dec
out
xchg
loopne
pop
les
aaa
lea
in
dec
mov
mov
mov
ins
sbb
es
xchg
cmp
mov
xor
gs
retf
ret
lods
jge
pushf
adc
dec
cwde
cwde
fdivr
dec
lock
mov
push
call
xchg
ds
lahf
mov
xor
iret
pop
xchg
je
pop
sbb
(bad)
loop
daa
push
dec
imul
and
das
jmp
sub
stos
cwde
add
pop
arpl
jnp
lock
adc
and
retf
into
lock
outs
cmp
sub
mul
mov
mov
sahf
jnp
js
mov
hlt
sub
popf
mov
test
imul
jno
cmpxchg
sub
sti
aaa
jns
push
push
stos
xlat
mov
mov
adc
bound
xchg
or
xor
mov
inc
jne
hlt
mov
push
dec
(bad)
mov
mov
adc
jo
in
add
inc
sub
push
pop
in
stos
push
dec
in
mov
dec
in
push
les
push
inc
loopne
xchg
adc
mov
push
inc
pusha
mov
dec
ret
hlt
(bad)
aaa
int
jae
(bad)
xor
sar
pop
cmps
fcomp
repnz
xor
xchg
push
call
call
(bad)
jns
int
xor
imul
mov
mov
mov
emms
xchg
ror
sti
lods
cmp
or
cmps
in
adc
(bad)
popf
mov
daa
push
or
and
fcom
mov
repz
pop
inc
push
repz
sbb
int3
lods
in
pushf
out
jle
xor
pop
sbb
jp
stc
push
sub
xchg
retf
enter
pop
cli
lds
lds
movs
inc
cmc
jmp
inc
in
mov
push
in
mov
es
fs
push
lds
push
inc
loop
test
mov
dec
in
fld
push
movs
xchg
outs
lods
mov
stos
sub
push
or
(bad)
cli
or
pop
cmp
inc
lds
lea
retf
sbb
imul
(bad)
xor
dec
pop
mov
dec
dec
es
mov
fstp
jne
iret
pop
mov
cdq
mov
xor
inc
dec
dec
shr
fadd
sbb
not
aas
dec
shl
add
scas
or
xor
or
pusha
cdq
sub
jno
ins
and
cwde
int3
jle
push
call
mov
into
mov
inc
sbb
xchg
cmpps
or
je
add
lock
aaa
std
cmp
ret
out
jle
paddsb
rol
repz
wrmsr
xchg
movs
jno
mov
out
mov
jo
sbb
je
sub
jle
sbb
mov
lea
inc
cld
mov
dec
in
mov
push
dec
in
mov
xchg
loopne
pop
inc
jmp
inc
ins
cli
push
int
mov
and
int3
push
xchg
into
mov
pop
lock
adc
(bad)
pop
xor
repz
in
in
inc
pushf
repz
out
(bad)
pop
xchg
rol
add
cmps
dec
fwait
sbb
jp
cmp
mov
push
cli
imul
inc
pop
std
cs
mov
xor
or
mov
sbb
pop
jmp
cwde
daa
sbb
pusha
jg
cs
xchg
jo
inc
mov
jmp
iret
push
pop
repnz
outs
mul
xchg
jno
je
out
ins
add
outs
les
sub
mov
cmps
push
push
clc
cmc
es
and
pusha
dec
sbb
add
inc
out
xchg
pop
movs
(bad)
or
dec
pop
fldz
cli
xchg
jbe
ins
sub
arpl
dec
push
stos
cmp
jnp
push
cwde
fidiv
sub
sub
adc
shl
mov
mov
mov
inc
inc
out
mov
or
cli
or
cld
mov
or
hlt
stos
push
push
int3
mov
push
fs
call
mov
pop
adc
loop
fcomp
jle
dec
loop
aam
cmp
mov
fdiv
sbb
mov
adc
inc
int3
mov
cs
inc
and
repnz
in
dec
shr
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
lods
sbb
or
mov
push
inc
retf
stos
xchg
mov
push
dec
in
mov
dec
in
mov
push
jl
call
in
or
push
inc
in
mov
dec
in
mov
push
pop
int3
mov
es
cld
inc
(bad)
push
int3
push
cmp
test
mov
mov
out
fdivr
sbb
push
(bad)
jno
mov
dec
in
adc
dec
xchg
push
in
dec
(bad)
popf
or
inc
add
and
xchg
outs
fs
out
int
imul
mov
xor
push
lods
mov
xchg
rep
push
ss
sbb
aaa
sbb
sbb
mov
int3
mov
push
js
iret
mov
stos
test
cmp
jns
loopne
sbb
pop
and
bound
push
outs
ret
cmp
mov
dec
in
dec
or
movs
cmp
jae
xchg
adc
mov
sar
das
xchg
lods
aam
sar
dec
in
cmp
dec
into
mov
jne
push
je
js
fst
shl
outs
adc
push
jb
mov
adc
and
xor
dec
test
stos
mov
mov
inc
dec
push
movs
jo
jecxz
push
cmp
adc
or
(bad)
popf
ficomp
jmp
dec
ds
push
out
scas
pop
fst
test
(bad)
scas
cmc
movs
adc
dec
in
lahf
sub
jl
test
xchg
in
add
dec
in
xchg
test
push
mov
into
cs
lock
jg
cli
lea
iret
hlt
aas
das
test
fcom
mov
movs
icebp
or
pop
mov
sbb
push
test
mov
or
jbe
xor
and
mov
popa
nop
(bad)
pop
xor
in
xor
in
data16
inc
mov
push
jns
inc
cmc
dec
in
mov
push
dec
add
push
dec
in
ss
dec
in
adc
dec
in
mov
push
mov
in
add
dec
in
mov
push
je
mov
mov
in
mov
push
dec
and
(bad)
dec
in
mov
push
dec
jmp
push
mov
mov
sbb
dec
int3
mov
push
dec
in
mov
push
dec
sbb
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
cld
inc
sub
push
inc
int3
mov
push
dec
hlt
mov
push
cld
in
ds
stos
scas
push
in
sub
dec
in
(bad)
push
adc
nop
push
test
test
pop
es
lock
gs
lock
sub
iret
stos
or
sub
jecxz
iret
movs
push
(bad)
lock
lahf
push
mov
pop
cmp
fsqrt
popa
sbb
mov
(bad)
xchg
push
test
fadd
cmp
push
mov
arpl
xor
and
loop
add
or
adc
push
rol
add
stos
or
mov
push
jbe
daa
xchg
and
loopne
call
repnz
jbe
aas
xchg
and
loop
rol
call
or
ror
cmp
sub
sbb
in
rol
ror
xchg
stc
rol
mov
mov
lock
mov
and
jmp
nop
xchg
iret
loope
jp
(bad)
std
xor
out
fdivr
int3
lea
xlat
(bad)
gs
cli
mov
push
pop
popa
sahf
ss
cmp
jle
or
adc
(bad)
out
jmp
cmp
pop
(bad)
push
mov
cmp
pop
add
aas
es
enter
mov
add
and
jmp
or
or
add
das
repz
jmp
fild
aad
dec
popa
inc
cmps
mov
jo
in
mov
daa
cli
pop
push
xchg
cmps
(bad)
sti
xchg
pop
and
lock
fsubr
mov
cmp
mov
and
loope
loope
imul
fcomp
mov
pushf
push
(bad)
in
dec
repz
fstp
fisub
jae
add
cmps
jae
dec
movs
mov
popf
adc
xor
popf
sbb
mov
enter
aad
mov
mov
movs
in
scas
adc
repz
sbb
lahf
aas
(bad)
stos
jmp
scas
add
rcr
fstp
dec
test
inc
add
sbb
lahf
xchg
stos
shl
dec
push
test
leave
mov
or
pop
cld
pop
dec
cmp
lods
mov
jae
call
adc
rcl
xor
mov
enter
or
jle
adc
stos
cld
inc
std
xor
inc
inc
retf
xchg
movs
mov
movs
scas
adc
adc
cmp
pop
retf
lock
cld
cmp
retf
dec
movs
mov
pop
pushf
pop
cli
pop
sub
test
mov
call
xlat
fisttp
sub
es
xchg
adc
pop
cmps
cmp
test
pusha
dec
pushf
aad
add
repz
or
mov
dec
pop
test
add
adc
dec
shr
push
mov
int
mov
les
mov
and
ret
cmps
test
aas
outs
and
mov
dec
jno
repnz
out
(bad)
clc
adc
dec
pop
sub
fimul
cmp
out
dec
mov
into
cmp
xlat
sbb
out
dec
mov
into
cmp
iret
sbb
(bad)
or
popa
xchg
mov
in
pop
lock
sbb
xchg
cwde
aaa
adc
add
(bad)
xor
push
stos
add
enter
xchg
dec
scas
add
jp
push
cmp
retf
cs
sbb
repz
enter
jo
cmp
movs
and
aad
fs
jnp
ret
push
lahf
pop
fiadd
add
pushf
xor
hlt
mov
xchg
xchg
das
popa
mov
data16
cmp
mov
push
xchg
daa
dec
cli
ins
rcr
add
or
call
push
daa
pop
fisub
push
cmp
aas
xchg
(bad)
jp
pavgb
gs
sub
stos
retf
cmp
push
inc
ins
jae
(bad)
js
push
iret
push
sahf
pop
sahf
pop
fcmovu
xchg
and
or
ror
sub
ds
xor
jl
xor
addr16
int
jl
fcom
cmp
cmps
and
(bad)
pop
push
inc
popf
mov
clc
xchg
xchg
xlat
xchg
inc
(bad)
out
int3
jecxz
xor
jb
dec
fist
fwait
pop
aam
pop
xlat
xchg
xor
push
movs
repz
xchg
sub
add
cmp
and
cmp
or
stos
ja
shl
inc
loope
mov
rol
mov
mov
and
mov
adc
jbe
fnstsw
mov
adc
adc
jbe
fnstsw
mov
adc
adc
jbe
fnstsw
mov
adc
adc
jbe
fnstsw
mov
cld
sahf
cmp
mov
data16
sbb
mov
mov
ss
xlat
add
mov
push
test
pop
(bad)
je
push
cmp
jp
(bad)
loopne
adc
xor
retf
cmp
inc
or
les
cs
in
xchg
push
dec
in
xchg
push
dec
cld
mov
cs
data16
in
xchg
gs
sub
mov
test
push
inc
fbld
fidivr
push
outs
hlt
sub
dec
and
push
sti
test
popf
cmp
inc
wbinvd
outs
sbb
push
ss
fld
pop
sbb
mov
faddp
dec
adc
cmp
adc
dec
inc
scas
or
or
dec
into
loope
div
mov
mov
xor
adc
(bad)
xchg
push
not
inc
dec
(bad)
sti
sti
clc
test
inc
mov
sub
and
(bad)
sub
cmp
iret
out
ror
jnp
xchg
(bad)
pop
outs
sbb
popa
mov
cwde
(bad)
je
ins
cld
fisttp
push
push
rcl
ficomp
iret
cs
fcmovnb
xchg
mov
and
mov
inc
jp
pop
lea
js
aad
push
lahf
arpl
(bad)
call
mov
add
cmp
or
popa
cli
xor
xor
in
and
fs
loopne
mov
push
mov
inc
pop
mov
test
(bad)
mov
test
into
or
retf
lods
jno
retf
add
ins
addr16
movs
jl
jge
xchg
pop
and
inc
push
jae
inc
jne
mov
ds
jmp
jnp
sub
(bad)
pop
inc
inc
sub
jns
fild
inc
dec
and
cmp
pop
adc
and
pop
add
mov
cmp
sbb
cwde
jns
push
fs
mov
xchg
addr16
xor
js
popf
mov
xchg
aam
and
pop
aam
inc
add
pop
adc
cmps
enter
mov
push
enter
popa
jg
not
loop
mov
jae
jns
push
ss
js
pop
push
ss
and
retf
ds
shl
jg
jo
das
popf
pop
xchg
xor
cld
push
dec
lods
push
jp
xor
sbb
xchg
pop
mov
add
cmp
sar
xor
inc
aam
cmp
ret
cli
or
xchg
push
(bad)
(bad)
rcl
lahf
sar
test
adc
mov
loopne
pop
icebp
mov
or
mov
or
je
neg
icebp
mov
ins
fcomp
das
push
retf
outs
outs
add
(bad)
cwde
ins
mov
das
js
add
jb
inc
pop
mov
int3
shl
xor
sbb
mov
or
push
ja
sbb
sar
lea
add
sahf
ins
lods
pop
xor
leave
out
add
push
fs
addr16
(bad)
or
cmc
mov
sub
rol
mov
jmp
cmps
mov
ret
loopne
and
adc
inc
jns
mov
push
sbb
pop
std
mov
xchg
lea
cmc
mov
or
mov
pop
ret
cmp
dec
cld
pop
add
mov
test
or
push
in
fiadd
pop
mov
pop
mov
jb
iret
loopne
and
adc
inc
jns
mov
push
sbb
pop
std
mov
xchg
lea
cmc
mov
or
mov
pop
ret
cmp
dec
cld
pop
add
mov
test
or
push
in
fiadd
pop
mov
pop
mov
jb
iret
loopne
and
adc
inc
jns
mov
out
push
dec
pop
test
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
stos
hlt
sbb
jmp
movs
call
adc
and
(bad)
dec
fstp
mov
outs
popa
ror
test
push
ins
sub
pop
loop
cs
xor
jo
cdq
test
addr16
xchg
dec
imul
xchg
xchg
mov
and
(bad)
dec
fstp
mov
outs
popa
ror
test
push
ins
sub
pop
loop
cs
xor
jo
cdq
test
addr16
xchg
dec
imul
xchg
xchg
mov
and
(bad)
mov
inc
scas
in
push
xor
pop
mov
mov
dec
loopne
sbb
inc
dec
cmps
jno
out
in
out
dec
adc
xor
push
mov
rcr
stc
cmps
cmp
pop
push
push
adc
es
mov
mov
imul
mov
mov
jo
scas
pop
or
sbb
pop
aaa
sbb
fsub
loope
xor
jmp
push
sub
enter
jle
outs
adc
fist
call
push
xchg
xor
ret
cwde
rcl
ins
in
jbe
cwde
enter
jp
add
jo
pusha
mov
pop
xlat
dec
xor
jns
xchg
(bad)
push
push
sub
inc
popf
idiv
rcr
or
(bad)
fidivr
test
loop
test
push
popf
cmp
push
sub
adc
lds
call
hlt
mov
dec
in
mov
dec
je
push
inc
mov
ins
mov
xchg
sbb
mov
mov
dec
mov
mov
mov
adc
aas
xchg
add
and
mov
cwde
lods
stos
ss
sub
sub
cmp
shl
or
cmp
xor
in
adc
rol
inc
or
push
repz
xor
stos
xlat
inc
mov
add
out
mov
sub
sbb
out
mov
sub
push
(bad)
mov
push
gs
inc
loope
mov
inc
jnp
mov
out
mov
sub
lods
sbb
je
(bad)
cmp
out
jae
push
fsub
push
out
mov
sbb
js
mov
pop
push
xchg
inc
(bad)
nop
aaa
(bad)
mov
jmp
mov
das
sub
cdq
ret
sbb
sar
fiadd
pop
outs
stc
retf
out
int
mov
sub
into
jae
add
cmp
sub
mov
sbb
(bad)
jo
imul
rcr
lahf
mov
dec
inc
sbb
push
scas
loopne
jno
rcl
lock
test
call
(bad)
mov
scas
cmps
and
fcomp
hlt
out
bound
in
ret
sbb
clc
in
and
out
push
ss
int3
xlat
fldenv
jg
dec
loope
leave
mov
or
adc
faddp
jb
pop
dec
adc
pushf
sbb
pusha
sub
dec
inc
push
sbb
test
mov
in
push
test
mov
cmp
push
ins
scas
mov
inc
adc
push
arpl
in
imul
adc
les
pusha
pop
(bad)
je
idiv
repz
ffree
adc
(bad)
sti
mov
loop
pop
add
jl
adc
in
mov
cld
test
adc
push
lods
push
push
cmp
std
leave
xchg
xchg
mov
je
push
and
jge
push
repz
sub
or
cmp
imul
(bad)
push
call
sbb
aad
fldcw
mov
test
mov
jl
mov
fbld
aas
pop
fwait
lea
std
retf
pop
cmp
test
jns
std
retf
pop
cmp
test
jns
and
pop
test
xchg
lock
mov
xor
dec
std
xor
pop
retf
inc
rep
xchg
out
cli
sbb
js
pop
cmp
adc
cmc
cmp
loop
mov
pop
cmp
movs
and
and
push
aam
out
out
bound
jmp
mov
cmp
rol
pop
cli
fcmovbe
sbb
cli
cmp
xchg
cmps
popf
stos
repnz
in
pop
fs
pop
mov
push
hlt
shl
jae
aad
dec
cmp
push
push
fcom
xor
aam
cdq
daa
mov
cmp
cmps
pop
arpl
cmp
xchg
jnp
fldcw
and
jb
fist
imul
dec
test
xlat
nop
mov
call
mov
xor
ja
rcr
push
inc
jbe
(bad)
pop
cmp
lahf
jnp
fldcw
add
cmc
push
pop
mov
add
cmc
push
pop
mov
add
cmc
push
pop
mov
add
cmc
push
pop
mov
dec
jge
sbb
neg
dec
call
inc
out
mov
call
inc
out
mov
call
inc
out
mov
call
inc
(bad)
mov
jmp
inc
(bad)
mov
jmp
inc
(bad)
mov
jmp
inc
(bad)
mov
jmp
inc
jmp
cmc
mov
inc
or
les
cs
in
xchg
ds
xchg
push
dec
int3
mov
push
fnsave
scas
shl
aad
scas
xchg
sbb
push
cld
mov
test
inc
sub
out
mov
sbb
in
sbb
jl
mov
shr
mov
fsub
push
lods
mov
stos
xchg
cli
mov
(bad)
rcl
pop
mov
bound
(bad)
jg
cmp
push
mov
xchg
stos
or
mov
pop
adc
pushf
mov
cmp
add
jge
call
sub
in
dec
fdiv
test
daa
or
adc
cmps
mov
mov
cld
div
call
retw
mov
cmps
in
inc
sbb
ror
cwde
addr16
lahf
imul
add
dec
dec
retf
(bad)
mov
out
lock
jae
inc
sar
mov
addr16
sbb
les
(bad)
jecxz
push
dec
sub
ds
mov
sbb
icebp
dec
div
mov
dec
dec
inc
or
push
mov
xor
cli
in
shl
mov
mov
loopne
test
cld
ss
jle
inc
lds
sub
push
xor
sbb
sbb
icebp
gs
dec
mov
add
cld
dec
or
outs
pop
or
fmul
pop
xchg
call
jmp
call
dec
or
outs
pop
or
fmul
pop
xchg
call
jmp
call
dec
or
outs
pop
or
fmul
pop
xchg
call
mov
int3
mov
rcl
xlat
popa
fwait
mov
out
test
jp
add
je
pop
addr16
jg
les
pop
aaa
rcl
std
gs
xor
pushf
or
je
in
push
xchg
leave
or
ss
retf
int3
call
mul
xchg
push
or
xchg
push
xchg
dec
inc
inc
or
mov
or
rol
ss
js
arpl
push
push
in
movs
enter
iret
sti
call
mov
(bad)
retf
lds
push
mov
sub
ret
xor
sbb
shl
xchg
cld
outs
xor
loope
jle
push
ret
dec
or
sub
or
movs
cmps
iret
push
xchg
cwde
sub
pop
fimul
xor
push
jp
adc
mov
or
ret
dec
or
sub
or
movs
cmps
add
stos
call
add
test
mov
enter
mov
pop
pop
popa
call
add
mov
push
imul
ja
xchg
call
cs
sub
ret
lods
hlt
sahf
dec
dec
popf
and
mov
scas
jo
push
jl
ins
stos
cdq
jne
ja
push
xchg
lods
and
jle
and
cld
mov
and
fs
xor
fwait
ret
and
inc
out
bnd
in
fisttp
fld
cdq
(bad)
mov
in
scas
cmp
or
nop
arpl
xchg
adc
cmc
and
jl
sbb
xchg
cmp
dec
lock
sub
into
(bad)
mov
mov
xor
xchg
loop
ins
dec
and
mov
das
out
xor
(bad)
mov
fstp
adc
shl
or
xchg
(bad)
arpl
push
sbb
fstp
push
add
inc
dec
lock
and
out
fistp
or
cmp
inc
(bad)
adc
lds
pop
out
shl
jmp
or
jbe
add
fsincos
ds
push
xor
rol
in
mov
lods
dec
sar
(bad)
dec
cli
and
ds
mov
pusha
ins
mov
jl
jns
dec
jbe
outs
retf
push
jno
mov
jl
scas
pop
and
popf
jmp
popa
ss
call
popf
rcr
shl
mov
pusha
into
sbb
xor
icebp
push
jge
sbb
cmp
push
mov
pushf
out
fwait
pop
nop
xor
xchg
into
jno
cs
gs
retf
pop
sub
sti
and
mov
rcr
div
and
inc
dec
(bad)
jge
je
xchg
adc
inc
lock
dec
call
sbb
lock
or
sub
fld
xor
es
jmp
je
jmp
lods
or
dec
cli
xchg
pushf
mov
(bad)
movs
lods
sbb
(bad)
movs
jmp
imul
mov
push
stos
sub
add
sbb
or
push
jg
and
jle
jbe
aam
push
pop
push
inc
or
ret
pushf
(bad)
cmp
rcr
dec
cmp
icebp
mov
mov
jns
mov
fldcw
add
mov
(bad)
xchg
out
jo
add
jl
addr16
jae
rcr
mov
fistp
lock
cmp
shl
fdiv
adc
mov
mov
js
inc
add
push
mov
call
int
enter
sub
addr16
(bad)
fisubr
lds
jno
ret
nop
pop
and
inc
or
(bad)
aad
mov
cmp
or
push
test
enter
push
mov
and
fisttp
jmp
inc
mov
lea
test
sar
shl
add
cmp
mov
in
cmp
dec
mov
pop
pusha
not
or
test
push
scas
jle
cli
mov
cmps
inc
test
adc
mov
pop
xor
push
hlt
hlt
jmp
add
(bad)
jnp
sub
out
dec
push
cs
sub
sub
movs
jle
mov
push
push
and
popf
xchg
shl
xchg
fidiv
mov
test
test
add
ins
or
jle
mov
and
xor
call
cmps
mov
add
enter
mov
icebp
movs
jmp
add
repnz
inc
cmp
or
aad
gs
mov
and
xor
es
xlat
mov
adc
or
mov
xor
mov
aaa
popf
push
xor
(bad)
fwait
xlat
cmp
test
ss
mov
fstp
dec
xchg
or
ins
jp
(bad)
jge
inc
sub
xor
scas
fmul
and
cld
mov
mov
cwde
stos
jae
cmp
jecxz
iret
mov
les
movs
bound
js
and
fs
mov
inc
arpl
dec
je
xchg
fcom
(bad)
cmc
js
add
and
fs
in
ret
sbb
daa
iret
mov
add
stos
test
retf
cmp
jne
sti
cmp
push
ds
out
lds
adc
push
sahf
sahf
mov
gs
fnstcw
jb
pop
mov
sub
mov
adc
daa
xor
push
lods
retf
daa
loope
aas
(bad)
push
cwde
sbb
sahf
cmps
xchg
sub
jl
leave
xchg
pop
or
jne
sti
cmp
push
ds
out
lds
rcl
dec
and
cdq
sub
into
jge
push
(bad)
xchg
jnp
xor
push
pop
pop
je
xchg
enter
daa
mov
pop
push
adc
retf
clc
hlt
push
inc
push
sub
push
sub
push
aad
es
and
inc
or
vmovsldup
retf
shr
xchg
je
jo
or
add
cmps
in
ins
fs
ins
or
adc
fsubp
nop
fisttp
cmps
not
loope
dec
pop
lods
mov
in
(bad)
mov
gs
dec
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
dec
(bad)
outs
mul
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
push
add
ins
add
int
add
push
ds
push
add
push
ds
xchg
add
popf
mov
jae
out
ror
xchg
iret
jae
out
ror
xchg
iret
jae
out
ror
xchg
iret
jae
out
ror
xchg
iret
jae
or
or
lods
jecxz
loop
popf
jae
xchg
jo
push
popa
lds
data16
push
dec
cwde
jo
daa
mov
daa
popf
shl
mov
xchg
int3
(bad)
cmp
and
fcmovbe
dec
cli
retf
add
jmp
xchg
pop
sub
call
mov
rcr
test
xchg
push
out
inc
xor
xor
sbb
jae
adc
or
xor
adc
addr16
or
ins
cmp
not
adc
div
jae
rol
adc
(bad)
mov
arpl
ins
cmp
not
adc
div
jae
rol
adc
(bad)
mov
arpl
ins
cmp
not
adc
div
jae
rol
adc
(bad)
mov
arpl
ins
cmp
not
adc
div
jae
rol
adc
(bad)
mov
arpl
ins
cmp
neg
mov
test
mov
out
xchg
loope
pop
fs
dec
popa
mov
pop
mov
cli
outs
xchg
mov
hlt
add
push
cmps
fdiv
pop
les
aad
sbb
adc
loope
push
mov
sahf
loope
adc
sbb
js
out
ja
cmp
mov
mov
loop
jmp
mov
push
movs
and
ret
dec
aaa
lods
popf
pop
out
sti
(bad)
mov
test
clc
or
call
in
mov
push
dec
in
push
dec
data16
inc
bound
pop
inc
in
xor
iret
popa
cmp
fwait
in
mov
inc
(bad)
cli
push
inc
add
add
or
out
(bad)
into
fmul
js
dec
out
mov
repnz
fisub
add
mov
fistp
mov
push
idiv
in
mov
or
in
or
lahf
js
cmps
sbb
test
(bad)
call
into
dec
retf
push
test
imul
call
sahf
pop
push
aam
adc
shr
clc
cld
pop
retf
mov
stos
adc
inc
or
into
and
les
push
jmp
dec
inc
mov
mov
jl
mov
pop
mov
test
pop
loopne
fisub
jno
stos
hlt
das
sbb
(bad)
push
dec
or
dec
aaa
sahf
das
stc
sbb
inc
lods
clc
(bad)
pop
pop
ins
cmp
or
call
cmp
jecxz
(bad)
xchg
pop
dec
lods
imul
jle
sbb
(bad)
xchg
jno
test
sbb
shl
leave
mov
lds
out
sbb
loopne
inc
dec
adc
(bad)
fsub
pusha
mov
cwde
test
sbb
(bad)
dec
or
jo
cmp
push
aad
push
inc
shl
xchg
push
data16
jmp
adc
lock
mov
imul
adc
gs
xor
fwait
add
aas
sbb
inc
stc
xchg
xchg
xchg
shl
fldenv
mov
imul
(bad)
xchg
push
mov
inc
cs
jge
pop
cli
add
dec
pop
std
jmp
pop
inc
scas
sbb
imul
pop
sub
cld
imul
mov
push
push
test
mov
ins
dec
or
fadd
test
lock
cli
jae
add
dec
test
ficomp
pop
shr
dec
mov
scas
mov
pushf
mov
mov
dec
xor
inc
jecxz
scas
inc
cmp
pusha
jmp
movs
inc
test
out
std
add
ret
paddusw
sub
cmp
push
sub
ins
cmp
repz
dec
push
jle
dec
xchg
dec
mov
mov
mov
gs
loop
dec
fldenv
rol
sub
stos
xchg
mov
in
outs
je
mov
mov
ss
jno
cmp
jne
loopne
out
and
leave
(bad)
sbb
dec
fstp
int
neg
adc
outs
jle
adc
add
mov
pusha
pop
inc
push
cmp
dec
sbb
mov
movs
cmp
inc
scas
or
inc
xchg
ss
(bad)
push
mov
xor
fimul
pop
lods
sbb
pusha
je
or
sub
loop
pop
popf
cmp
or
and
cdq
mov
dec
jmp
add
popa
ss
movs
loope
add
xchg
push
and
mov
inc
pop
mov
cmc
inc
(bad)
loope
xchg
adc
loop
gs
xor
jecxz
dec
xchg
ss
mov
xchg
aam
mov
(bad)
call
out
dec
add
nop
mov
cmp
retf
sbb
les
push
out
int
cmp
pop
cli
pop
repz
adc
or
push
push
dec
and
jp
ins
push
inc
dec
fsub
arpl
sbb
adc
or
push
cdq
sbb
adc
jle
jp
push
std
pop
xchg
or
xor
loop
lods
retf
cwde
sub
lods
shl
or
repz
dec
fmul
(bad)
xor
rol
lds
ret
ror
rcl
xchg
stos
neg
popf
cmp
inc
int3
xlat
mov
jge
outs
shr
aaa
add
push
xchg
mov
aas
outs
adc
adc
fsubr
ret
jmp
call
(bad)
cmp
push
sahf
or
ret
imul
(bad)
mov
fist
push
and
mov
or
js
xchg
in
mov
scas
int3
cmp
jnp
stos
mov
lods
and
mov
and
cli
or
pop
ficomp
jne
fnstsw
dec
sbb
mov
clc
mov
sbb
mov
xchg
mov
pusha
push
mov
mov
xchg
and
inc
xchg
stos
pushf
cwde
int
lods
js
inc
int3
adc
sahf
stos
sbb
cmp
fild
cmp
mov
(bad)
lods
rol
add
or
sbb
cmps
pop
dec
je
adc
inc
in
add
test
mov
or
dec
scas
mov
sub
sti
pop
xor
stos
test
jp
pop
pushf
movs
mov
(bad)
cmps
outs
loop
sub
retf
ret
xchg
push
sbb
hlt
fwait
lods
push
pop
pop
sbb
and
repnz
xchg
pop
(bad)
call
fwait
inc
ins
call
into
mov
inc
ins
call
cmps
mov
je
fwait
mov
jo
call
stos
aad
ret
fldenv
sbb
pop
fisttp
es
sbb
out
and
inc
sbb
sar
nop
in
ret
sub
xor
mov
je
ror
jge
mov
cmc
jo
je
jne
xchg
stc
xor
in
jmp
test
dec
pop
in
cli
push
or
mov
dec
pop
daa
cli
push
js
mov
shr
pop
xlat
int
mov
xchg
fidivr
xchg
and
and
outs
ror
or
sub
lds
xor
and
sbb
mov
push
(bad)
icebp
mov
daa
and
jp
or
ret
shr
sbb
repnz
dec
cwde
(bad)
test
cmp
fidiv
hlt
mov
push
dec
addr16
ds
sbb
sar
push
push
adc
scas
lock
add
push
and
psrlq
inc
fs
call
pop
push
mov
fstp
call
(bad)
mov
aam
call
sub
pop
call
and
sar
push
inc
fst
lock
xor
lods
pop
xchg
out
sar
ins
in
stos
add
push
dec
jge
push
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
int
lahf
inc
jge
inc
outs
mov
lock
xor
pusha
xchg
pop
sar
(bad)
pusha
sub
jge
lahf
outs
pop
cs
and
and
sar
xchg
pop
sar
inc
sar
dec
fs
mov
aam
(bad)
ss
int3
stos
push
inc
in
mov
push
dec
fs
push
ret
in
cmp
inc
data16
into
adc
pop
inc
in
add
inc
pop
mov
cs
push
inc
das
add
cmp
test
inc
test
call
pusha
jmp
or
sahf
inc
arpl
dec
in
shr
lods
mov
ins
mov
cmp
sub
cmp
ds
jp
cli
adc
push
outs
sbb
lds
or
retf
mov
and
dec
std
sahf
in
sbb
addr16
sbb
jns
enter
or
mov
cmp
add
movs
and
sub
adc
and
xor
push
xchg
inc
out
adc
adc
inc
mov
jmp
retf
push
imul
mov
and
out
adc
call
popf
jno
sar
dec
cdq
div
jge
ins
mov
inc
sub
gs
(bad)
or
dec
pop
popa
push
enter
mov
push
mov
ja
add
inc
sbb
std
xlat
jl
inc
jp
sbb
fistp
xlat
fimul
sub
ins
jno
test
pushf
push
and
mov
test
pop
push
sar
cmp
scas
jno
pop
mov
mov
mov
push
jmp
lds
cmp
or
clc
mov
out
call
sub
repnz
xchg
dec
fmul
clc
mov
mov
out
pusha
not
pop
les
dec
cs
cdq
sub
sbb
push
xor
and
(bad)
pop
scas
or
mov
cmp
inc
xchg
jp
cmp
mov
or
push
fidivr
xchg
push
data16
pop
mov
int3
adc
(bad)
jmp
mov
retf
fs
dec
test
dec
pop
in
cli
push
or
scas
dec
and
movs
mov
(bad)
retf
js
mov
(bad)
retf
js
mov
(bad)
retf
js
mov
(bad)
retf
js
(bad)
push
adc
cmp
in
inc
imul
sbb
adc
mov
cmp
push
pushf
out
inc
nop
out
sti
imul
push
pop
mov
ror
cdq
sub
addr16
lods
loopne
cld
mov
push
jbe
sub
test
sbb
mov
cdq
(bad)
lds
mov
jns
ja
sbb
push
inc
lods
(bad)
cmp
(bad)
lds
mov
jns
ja
sbb
push
inc
lods
(bad)
cmp
and
cmc
popa
pop
add
fidivr
jno
cwde
fdiv
shl
dec
les
and
and
pop
add
fidivr
jno
cwde
fdiv
shl
dec
les
and
and
inc
fiadd
retf
cli
int3
inc
enter
sbb
fld
sub
ss
mov
push
cmp
add
repz
push
test
fsub
test
inc
aad
inc
ins
jnp
out
enter
push
xchg
dec
sahf
pop
aam
int3
dec
lods
repnz
sub
push
ins
in
push
inc
in
stos
push
dec
fs
push
lds
add
inc
out
or
xor
mov
mov
dec
mov
mov
ja
inc
dec
test
inc
sub
xor
sub
sub
mov
(bad)
popf
or
xchg
pop
sub
into
enter
mov
(bad)
push
mov
inc
jnp
test
mov
push
xor
dec
adc
in
pushf
gs
gs
xor
add
push
das
sbb
daa
stc
xchg
add
mov
fnsave
jecxz
pop
add
(bad)
fadd
pop
enter
jae
cmc
jmp
cmps
mov
ins
stc
outs
ja
cs
out
inc
jge
mov
push
inc
pushf
cmp
enterw
sub
div
fucomp
lock
stc
fwait
lahf
mov
and
cmc
std
arpl
popf
jmp
adc
sbb
out
xchg
jge
mov
or
(bad)
push
add
out
sbb
pop
inc
test
imul
(bad)
repnz
fsubr
lods
ins
inc
push
sub
test
push
into
jo
test
jmp
repz
and
sar
lds
aaa
mov
push
xchg
or
dec
sbb
fiadd
mov
pop
icebp
xlat
in
pop
mov
or
data16
(bad)
data16
data16
pop
xor
add
ins
jmp
mov
pop
fisubr
imul
fwait
movs
push
pop
dec
pop
aam
mov
cld
call
sub
mov
push
ins
call
out
sub
fstp
push
cmp
push
jae
sbb
xor
nop
(bad)
pop
xor
ret
xor
cli
js
inc
in
dec
es
mov
push
pop
in
test
mov
js
outs
pop
sub
mov
invd
pop
inc
ds
ss
xchg
and
lea
and
dec
repnz
inc
iret
clc
ds
push
rol
pop
rcl
xor
pusha
jae
and
push
add
scas
call
cld
mov
shl
pop
push
push
sbb
in
lods
out
mov
daa
push
out
xlat
or
ret
dec
aaa
push
(bad)
hlt
or
das
rcr
test
enter
int3
aam
mov
dec
jmp
ror
shl
inc
ins
cmp
lods
rol
int3
dec
sbb
jb
mov
rol
pop
mov
outs
sbb
std
jmp
cs
retf
pop
mov
es
mov
push
iret
les
mov
(bad)
lock
pop
fwait
lahf
outs
pop
cs
cld
pop
or
cld
pop
or
cld
pop
or
cld
pop
or
mov
or
sbb
mov
inc
loopne
ds
out
fstp
mov
mov
inc
loopne
ds
out
fstp
rcl
popa
rcl
popa
rcl
popa
rcl
mov
xchg
and
mov
push
pop
in
mov
push
dec
gs
push
inc
out
mov
xor
in
add
dec
mov
mov
retf
test
cmp
movs
lods
inc
retf
and
mov
mov
das
sub
cmc
sahf
popf
mov
xor
jmp
outs
inc
and
jl
out
ja
or
sbb
dec
repnz
pop
out
sub
pop
pop
int3
sbb
pop
dec
iret
or
add
aad
mov
not
fnsave
jge
pop
mov
jo
ss
cmps
cld
push
sbb
in
xor
add
bswap
or
test
adc
jmp
pop
inc
jbe
fwait
jne
das
ret
add
fldl2e
add
sub
push
rcr
jl
adc
sub
cmp
mov
and
pop
cmp
or
iret
dec
outs
add
movs
xchg
cs
push
inc
movs
xor
ins
cmp
pop
aad
loop
pop
gs
inc
fcomp
push
pop
dec
mov
into
rcr
push
adc
fcomip
repz
inc
sub
cmp
adc
out
jb
mov
dec
pushf
jmp
mov
push
out
or
mov
clc
mov
pop
or
leave
pusha
or
or
test
mov
mov
outs
lahf
shl
sbb
mov
pusha
imul
(bad)
scas
lods
pop
xchg
inc
sbb
int3
xor
xchg
enter
adc
push
clc
inc
push
je
sbb
xlat
jmp
in
mov
cmp
not
pop
daa
push
cmps
inc
pushf
mov
xchg
jp
push
mov
sub
pop
mov
xchg
sbb
dec
pop
inc
sbb
lock
mov
jmp
inc
push
jnp
inc
sbb
dec
push
mov
mov
mov
out
call
outs
jge
gs
push
movs
aam
push
jns
xor
out
pop
sub
and
scas
jae
(bad)
sbb
pop
mov
jno
push
(bad)
mov
dec
imul
mov
xlat
mov
loopne
loop
sbb
ins
add
push
stc
and
daa
xor
pop
mov
(bad)
fisub
sbb
div
scas
mov
sar
mov
and
in
jle
jno
test
pop
and
call
sub
xchg
sub
xchg
into
movs
mov
clc
leave
push
sub
sub
ret
lea
mov
mov
dec
mov
xchg
mov
jl
adc
ss
mov
and
push
mov
lahf
(bad)
sti
popf
jl
jmp
cmp
retf
cmps
add
mov
mov
mov
in
or
jb
or
jno
adc
mov
xor
dec
xchg
push
xchg
pop
jecxz
pop
inc
pmullw
jge
mov
jne
icebp
mov
in
or
jb
std
arpl
push
rcr
mov
cld
and
into
jmp
cli
outs
movs
or
dec
aas
jnp
mov
scas
xor
leave
out
cmp
xor
xchg
fcmove
add
movs
sbb
sub
sub
or
(bad)
in
sub
push
mov
push
movs
xchg
call
fidivr
mov
(bad)
mov
gs
iret
add
fidiv
xor
(bad)
or
sbb
jle
pusha
test
(bad)
sub
test
pop
xor
lods
imul
xchg
fidivr
adc
mov
push
dec
push
movs
or
repz
add
in
(bad)
ret
fidiv
lock
pop
icebp
mov
or
xor
mov
pusha
xor
out
jne
out
outs
add
sub
loope
jl
aad
sbb
mov
mov
out
mov
fs
test
add
inc
push
mov
cmp
aam
inc
dec
mov
daa
and
in
sbb
jmp
xlat
data16
popa
inc
sub
popa
mov
pop
mov
fisub
adc
push
(bad)
mov
(bad)
push
outs
aaa
clc
je
cs
loop
jmp
aas
lock
aad
fwait
stos
xchg
ds
fwait
lahf
je
sbb
mov
(bad)
mov
lea
add
lock
dec
add
mov
cmp
sbb
out
push
rcr
neg
mov
mov
pop
inc
mov
xor
popa
dec
fstp
sub
int3
push
test
sub
mov
sahf
scas
or
rol
lea
lock
dec
ins
push
pop
enter
bound
mov
push
cmps
pusha
aas
push
aam
fwait
test
inc
xor
inc
ins
mov
pop
addr16
int3
or
mov
ins
rcl
(bad)
loope
scas
jne
es
or
pushf
inc
imul
mov
in
rcl
daa
or
and
inc
mov
sub
ja
inc
pop
dec
jbe
sbb
retf
lahf
pop
jg
imul
push
shr
sahf
jl
mov
pop
sahf
sbb
pusha
mov
dec
(bad)
pop
mov
mov
and
out
fisub
fimul
adc
aam
jns
mov
call
pop
(bad)
inc
sbb
call
test
scas
xchg
sbb
push
fiadd
xchg
push
les
pop
das
daa
in
dec
ds
(bad)
jo
fs
mov
cmp
mov
fcomp
dec
xchg
popf
test
dec
pop
mov
and
ret
repnz
popa
imul
mov
popa
les
retf
cmps
push
mov
add
push
jns
fmul
add
js
mov
stos
xchg
dec
xchg
stos
xchg
push
xor
sbb
or
or
std
jo
pop
loope
and
loope
jb
sar
jo
sar
aad
mov
xchg
pop
jae
lahf
je
xchg
pop
je
repnz
stc
icebp
add
jmp
aaa
xor
sar
dec
xchg
stos
lods
push
xor
xchg
jns
adc
repnz
dec
cwde
(bad)
test
xlat
rcr
sbb
ja
pcmpeqb
or
std
jo
es
and
jmp
aas
jo
sar
pop
xchg
stos
xchg
pop
jb
lahf
je
sbb
push
add
jns
or
in
xor
sub
and
sar
leave
nop
scas
nop
dec
xchg
stos
xlat
push
xor
(bad)
fs
sub
loopne
sbb
outs
adc
stos
and
clc
(bad)
xchg
push
pop
or
test
sub
sar
adc
out
xor
mov
iret
mov
ins
inc
ror
or
in
cmp
lods
mov
dec
mov
mov
push
push
hlt
stos
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
loopne
sbb
cli
push
inc
in
push
les
push
inc
in
movs
xchg
mov
inc
in
mov
dec
in
mov
push
je
mov
ins
jmp
inc
in
push
inc
in
stos
push
dec
in
mov
dec
in
push
dec
fdivr
push
or
lods
ss
push
pop
in
mov
dec
pop
mov
mov
fwait
sub
add
cmc
inc
cmps
add
out
(bad)
dec
xchg
cmp
inc
movs
jmp
jg
dec
inc
into
stos
mov
xchg
shl
pop
xor
aad
in
dec
retf
mov
push
cmc
cmp
add
int3
cmp
cdq
movs
enter
addr16
xlat
mov
and
loop
ss
in
inc
or
fwait
cmps
(bad)
add
ins
adc
inc
icebp
jb
push
xchg
pop
xchg
pop
mov
xor
arpl
push
jnp
fwait
in
dec
sub
dec
xchg
add
xlat
mov
adc
push
sub
add
sti
cld
inc
pop
jno
(bad)
stc
push
xlat
add
xlat
lahf
mov
mov
stos
call
sahf
push
jae
xchg
dec
jno
mov
push
and
mov
cmp
dec
cmp
jno
add
xchg
arpl
or
sbb
xchg
xchg
clc
dec
xchg
mov
sub
popa
aaa
cmp
mov
inc
aas
mov
clc
ins
int3
retf
mov
data16
push
push
add
mov
dec
jmp
test
nop
add
push
mov
and
test
xchg
push
lahf
cmp
xlat
ja
sbb
add
lds
push
call
mov
aad
outs
in
sub
push
mov
gs
shr
popf
mov
and
imul
aam
mov
aad
jne
pop
jecxz
call
xor
dec
cdq
cdq
and
retf
scas
xchg
shl
mov
lahf
xchg
outs
cwde
mov
adc
cmp
sti
push
mov
in
and
mov
mov
jecxz
ds
adc
ins
sbb
dec
jp
je
rcl
adc
test
mov
test
dec
xor
xlat
or
add
push
mov
aad
cld
mov
push
or
and
jg
mov
push
mov
in
inc
adc
arpl
pop
sbb
xchg
dec
and
ins
repz
mov
iret
push
hlt
xor
dec
pop
das
icebp
adc
and
shr
xacquire
fisub
mov
add
and
movs
cmc
xor
aaa
add
jnp
cmp
in
fs
sub
test
or
out
sahf
dec
dec
in
mov
push
stos
inc
mov
in
out
sub
js
push
dec
iret
mov
ror
push
in
call
in
and
dec
out
and
pop
add
ss
push
push
push
gs
cmp
repz
ret
cld
in
inc
in
sub
dec
in
mov
sub
call
jb
int3
pop
std
ss
add
mov
jb
push
xchg
dec
in
imul
in
call
in
mov
inc
loop
sub
cmc
and
xor
in
retf
ins
add
push
mov
jbe
mov
inc
int3
mov
dec
not
je
xchg
sub
in
push
int3
fwait
cli
xchg
sub
inc
stos
dec
iret
cmp
in
and
inc
call
retf
mov
fs
fwait
in
mov
mov
mov
dec
ret
inc
mov
sub
in
push
out
dec
push
push
fsubr
mov
shr
(bad)
gs
push
int3
in
cmovle
stos
mov
stos
push
(bad)
in
cli
dec
dec
retf
mov
ss
mov
push
ins
in
call
in
mov
cs
mov
int
cmp
cld
inc
xor
inc
jmp
inc
int3
cli
push
pop
out
es
pusha
ss
sub
adc
int3
fwait
dec
sbb
icebp
or
fisttp
ja
jo
shl
js
pop
cmp
int3
sbb
inc
add
pop
fist
jb
sub
dec
sbb
xchg
push
mov
lods
sub
arpl
jp
mov
outs
lods
adc
sub
aas
dec
clc
clc
retf
push
stos
jmp
(bad)
sub
jo
pop
xor
cmps
push
ret
lock
jmp
retf
push
lods
inc
push
jmp
lahf
xor
je
pop
test
push
(bad)
pop
aam
rep
(bad)
loop
in
in
dec
popa
jmp
scas
dec
sti
arpl
cli
pop
(bad)
data16
mov
inc
push
out
ja
call
jb
jnp
push
and
jnp
aas
pop
cmp
in
sar
je
hlt
scas
rol
cmp
push
xor
ja
in
cmp
addr16
imul
cli
test
adc
jle
aaa
fsubrp
mov
dec
in
adc
cmps
or
in
mov
add
out
xchg
push
fisub
or
in
(bad)
jge
in
push
adc
mov
dec
cwde
xchg
gs
data16
jmp
mov
jb
xchg
lods
mov
les
scas
mov
bound
jnp
xor
scas
mov
sub
(bad)
int3
in
add
je
xchg
(bad)
xchg
lods
mov
push
mov
xchg
aaa
gs
imul
cmp
mov
sub
xor
hlt
(bad)
in
adc
imul
sbb
adc
in
test
das
mov
int
aas
dec
jne
iret
cmp
call
imul
loop
mov
shl
or
jg
(bad)
pop
and
les
arpl
inc
jg
loope
and
add
jo
jmp
lods
shl
jmp
pop
cmp
mov
pop
lock
fdivr
inc
push
psrld
sbb
mov
push
sahf
cmp
xor
mov
add
mov
jmp
ds
popf
cld
add
test
add
cwde
iret
call
or
dec
cmc
dec
pop
jnp
int
dec
call
sub
dec
dec
scas
sub
xchg
xor
pop
pop
test
loope
stos
jno
repz
dec
dec
jae
and
inc
cmps
lds
neg
call
jns
fadd
push
ja
xchg
pop
ins
addr16
pop
pop
fcom
push
jno
stc
ret
cs
enter
pop
and
mov
pusha
cs
stos
sub
jb
cli
xchg
mov
push
mov
cdq
or
adc
outs
imul
sub
push
or
mov
push
dec
hlt
mov
push
les
fsub
aas
(bad)
ins
mov
pop
jbe
or
push
test
jne
sbb
cmp
out
cmp
popf
inc
in
dec
mov
mov
push
xchg
sbb
cmps
cs
ss
and
add
es
lods
jge
jge
inc
mov
lock
cwde
xlat
outs
xor
popf
add
call
sub
pusha
fiadd
sti
test
outs
adc
sub
add
clc
iret
push
test
add
inc
sbb
cmc
dec
ins
cmp
lea
repz
jno
xchg
adc
in
ss
and
add
es
lods
jge
jge
inc
mov
lock
cwde
xlat
outs
xor
addr16
clc
das
and
sub
push
sti
test
outs
adc
sub
add
clc
push
mov
ror
jae
add
test
mov
push
in
jg
xchg
ret
push
pop
fs
lsl
xor
ficom
mov
pop
mov
rcr
aas
add
inc
sbb
and
fsubr
lea
cmc
sbb
dec
arpl
out
movs
mov
pusha
or
jp
out
sar
(bad)
jbe
push
sbb
cdq
xor
or
test
fsubr
ja
sub
cdq
xchg
push
test
fbld
mov
push
aaa
lods
repz
(bad)
sub
cmp
fistp
hlt
ror
add
mov
add
xor
jae
imul
repz
outs
ins
cmc
jbe
xchg
loope
dec
xchg
inc
cwde
aas
push
mov
ins
js
pop
jno
fisttp
cli
mov
pop
das
xchg
test
ret
mov
push
sub
dec
shl
mov
pop
inc
cmp
aad
pop
xchg
div
push
fisttp
ret
div
stos
adc
push
out
sar
xchg
push
push
leave
mov
lods
loop
shl
mov
inc
cmc
js
std
inc
lods
jp
test
pop
popf
aaa
and
mov
fnstcw
xchg
cmp
pop
mov
icebp
inc
push
lahf
inc
out
(bad)
cs
mov
jecxz
(bad)
dec
dec
and
pushf
fs
stos
test
and
cmps
sbb
pop
xlat
repz
jae
ins
add
inc
fld
(bad)
xlat
jmp
xchg
mov
dec
fwait
data16
fadd
and
inc
or
ja
mov
sahf
outs
push
fstp
movs
inc
out
addr16
xor
xor
sub
cmps
add
xor
out
shl
mov
mov
cli
pop
inc
dec
pusha
std
xor
cmp
hlt
mov
mov
lds
mov
push
fs
ds
push
jmp
loopne
push
vmread
adc
jmp
push
fcmove
fcomp
test
test
mov
mov
and
xor
mov
sahf
sbb
ins
retf
mov
outs
mov
(bad)
jne
pop
push
stos
inc
shl
mov
test
inc
inc
pusha
in
retf
jmp
mov
gs
icebp
mov
xchg
neg
scas
loopne
inc
stos
in
call
std
mov
aam
imul
dec
jb
sbb
sub
scas
or
rcr
aaa
sbb
xchg
out
xchg
dec
loop
adc
inc
push
jmp
std
mov
mov
cmp
imul
repz
push
add
push
or
fcom
loop
pop
repnz
cs
addr16
lea
dec
mov
lock
pushf
fisttp
mov
movs
test
arpl
sub
cmovl
sbb
add
inc
inc
sbb
(bad)
(bad)
dec
mov
mov
rcl
int3
and
ffree
adc
adc
retf
loopne
imul
jbe
mov
xlat
rol
arpl
sbb
fwait
push
aas
sbb
in
ds
mov
cli
pushf
cmp
sar
jnp
jae
and
outs
xchg
daa
ins
push
sti
loop
pusha
inc
dec
ret
stos
test
in
dec
ret
fstp
xchg
sti
sub
aas
addr16
out
sub
movs
(bad)
out
pop
pop
inc
out
pop
mov
jns
mov
push
sbb
jl
fwait
imul
sbb
gs
stos
fdivr
call
in
call
hlt
mov
push
lds
gs
and
(bad)
pop
jle
test
and
or
push
inc
fwait
stos
push
jp
mov
retf
add
pop
loop
jp
outs
into
(bad)
add
in
popa
retf
lods
shl
dec
pop
retf
ror
mov
ret
(bad)
lods
sbb
popa
xor
ds
jmp
mov
adc
or
imul
shr
sahf
mov
pusha
sbb
pop
retf
ret
cs
rcl
jge
dec
mov
in
mov
push
inc
cwde
cmp
stos
cld
or
dec
pop
pop
ins
lds
icebp
lods
cmp
sub
xlat
sbb
sbb
nop
jp
or
sub
push
fist
xchg
pop
push
sar
inc
push
push
or
and
jp
loope
pop
mov
(bad)
dec
ss
out
pop
ins
sbb
es
scas
out
adc
lds
ss
pop
cmovle
jno
and
test
inc
neg
mov
je
stos
in
(bad)
not
mov
xor
xchg
mov
mov
sub
or
dec
push
add
or
in
div
add
lock
or
neg
dec
mov
dec
jmp
push
dec
mov
in
adc
stos
mov
pop
inc
jbe
sar
rol
out
xor
sbb
out
add
sbb
fidiv
bound
js
or
pop
out
bound
adc
scas
sub
scas
call
in
inc
or
jmp
lds
in
or
inc
mov
push
push
aad
xlat
js
out
xchg
sbb
pop
pop
dec
mov
shl
jns
ror
mov
or
bound
out
cmp
sub
ss
retf
retf
or
pcmpeqw
pop
push
(bad)
push
enter
push
pusha
idiv
pop
fsubr
push
jge
out
xor
mov
fidiv
fdiv
sub
mov
popa
aaa
sub
mov
mov
pop
mov
push
mov
inc
sahf
sbb
and
pop
out
dec
(bad)
and
pop
push
shl
or
shl
loop
(bad)
lds
nop
jge
xchg
push
xor
outs
jae
fnstcw
jmp
or
jp
aaa
jp
mov
add
or
cmp
inc
fs
adc
ror
mov
hlt
jo
push
ror
into
dec
pushf
or
inc
and
xchg
and
mov
rol
inc
fwait
pop
scas
add
cmp
dec
sbb
or
xlat
pop
(bad)
push
cmp
cmp
push
imul
pop
int3
push
xchg
iret
inc
cmps
out
jle
inc
cmovbe
cmc
rol
jmp
mov
aaa
aas
(bad)
sbb
ds
jb
ds
sub
push
outs
mov
call
xor
inc
inc
add
shl
test
test
js
sub
jp
sub
and
sti
adc
retf
call
hlt
stos
ss
in
loop
dec
int3
mov
push
fsub
xchg
scas
pop
out
test
popa
sbb
shr
push
jo
push
shr
sbb
fisubr
sub
(bad)
sub
(bad)
push
jmp
inc
mov
push
pop
nop
mov
scas
xchg
out
jne
lock
jne
pop
scas
dec
and
mov
nop
sbb
cmp
pusha
cmp
fidivr
xor
mov
push
mov
lods
pop
adc
or
cs
push
mov
xor
call
enter
adc
push
xchg
xchg
mov
push
mov
and
je
clc
ins
mov
sub
jmp
jb
push
sub
mov
mov
xchg
(bad)
jmp
stc
movs
retf
fst
or
ds
in
xlat
adc
mov
enter
cmp
pusha
cmp
fidivr
xor
mov
push
mov
lods
pop
adc
inc
cmps
loop
push
dec
cs
pop
adc
push
hlt
ja
pop
push
adc
adc
in
mov
xor
sbb
iret
fbld
xchg
(bad)
fstp
sbb
push
dec
push
mov
iret
fs
test
fdivp
mov
rcr
mov
(bad)
dec
(bad)
stc
mov
daa
push
std
ret
test
push
mov
retf
sbb
hlt
fs
inc
mov
js
sbb
jae
cmp
imul
icebp
xor
test
es
sbb
adc
mov
sub
int3
mov
hlt
cmp
xchg
inc
push
push
xchg
and
dec
mov
lock
rcr
out
fwait
xlat
xlat
in
and
cmps
dec
repnz
mov
pop
pop
xchg
aad
push
sar
jo
retf
pop
popa
sbb
mov
cmps
adc
adc
in
outs
sub
xor
(bad)
xchg
dec
scas
pop
mov
mov
adc
out
retf
fstp
in
push
mov
jg
cdq
ret
mov
dec
or
xlat
and
cmp
or
mov
iret
push
cmp
mov
scas
dec
sub
xchg
cli
(bad)
mov
repz
sub
jle
inc
test
mov
sti
cmp
cs
or
mov
addr16
mov
sub
or
mov
repz
mov
or
xchg
pop
in
push
int3
pop
repnz
pusha
test
pop
inc
pop
mov
lock
jl
sbb
sbb
test
inc
cmp
outs
cmp
add
call
cli
js
iret
lock
sahf
hlt
rcr
icebp
pusha
mov
les
xchg
xchg
cmps
jecxz
call
outs
cmp
rcr
cmc
out
jmp
je
jbe
fmul
out
mov
popa
dec
push
pop
push
les
ds
ja
pop
lods
(bad)
movs
movs
or
outs
out
test
enter
pop
fld
mov
outs
ror
pop
out
mov
push
sbb
fwait
cmp
mov
inc
adc
jp
sahf
enter
jo
sbb
fdiv
jbe
clc
mov
test
mov
fdiv
pushf
or
sbb
push
aam
pop
jne
inc
stos
xchg
xor
and
pop
js
pop
pop
push
jo
loop
or
dec
add
mov
inc
xchg
dec
pop
push
mov
mov
das
jle
popa
pop
jne
ss
aas
jne
xor
fcom
fisubr
mov
outs
sbb
je
test
pop
test
neg
lods
sub
scas
repnz
aas
dec
gs
test
mov
jns
int
cmps
fcmovnu
jno
push
sub
je
jo
(bad)
jmp
xor
sub
xor
gs
jecxz
xor
mov
mov
add
and
popa
retf
xchg
xor
inc
xor
sbb
mov
cwde
xchg
xor
call
cmps
fsub
sar
and
xchg
(bad)
neg
xor
jns
clc
jge
sbb
mov
ja
shl
sbb
fistp
adc
xor
and
xchg
or
jne
add
adc
push
aad
push
fdivr
push
push
xchg
out
pop
pop
pop
sub
test
dec
add
xchg
test
out
neg
les
out
mov
mov
or
fsubr
sbb
jbe
cmc
aam
mov
push
xchg
mov
test
(bad)
(bad)
int3
cmp
(bad)
mov
jno
in
push
or
pop
lea
jns
xchg
push
xchg
xor
xchg
mov
out
std
dec
xlat
ret
xchg
out
adc
mov
imul
mov
jne
xchg
fsub
and
sub
sub
mov
enter
or
mov
jno
in
lods
cdq
xchg
add
neg
push
cwde
sub
dec
out
pop
clc
fwait
inc
loopne
lea
and
jne
pop
push
add
cwde
mov
pop
sub
call
subps
mov
cmp
int
(bad)
adc
stc
fucomip
outs
xchg
dec
loopne
pop
xor
fldenv
mov
(bad)
mov
and
pop
pop
sub
adc
sbb
js
lahf
ins
cmp
sbb
mov
pop
std
daa
mov
push
mov
and
cmp
(bad)
adc
mov
push
add
xlat
dec
scas
pop
push
sbb
mov
inc
mov
popf
add
in
daa
push
adc
lods
push
scas
mov
sar
fcomp
jmp
jle
rcr
addr16
shl
loope
cmp
retf
out
stos
adc
add
mov
imul
dec
mov
clc
out
mov
push
xlat
adc
cmps
xchg
pop
or
test
fisubr
daa
lods
lock
mov
pusha
cmps
sub
inc
inc
js
(bad)
(bad)
mov
pop
push
mov
loopne
or
sbb
in
push
mov
dec
in
jno
or
mov
jbe
xor
in
xchg
test
adc
mov
mov
sahf
(bad)
mov
repnz
lahf
lds
movs
fsub
test
popf
sahf
inc
lahf
sbb
xchg
and
inc
mov
out
xor
push
lods
xchg
test
cmp
movs
adc
aam
xor
mov
sub
xor
pop
adc
sbb
xchg
sbb
leave
and
pop
xor
pushf
ins
pusha
js
dec
cmp
xchg
mov
mov
mov
sbb
inc
cld
loop
push
hlt
mov
pop
in
mov
dec
fs
inc
in
push
lds
push
(bad)
in
add
popa
ds
inc
out
or
mov
or
dec
mov
mov
pop
sub
push
arpl
lods
cmc
aaa
xor
test
pop
mov
shl
ja
xchg
out
jge
cmc
jmp
popa
cdq
mov
push
cmovae
mul
out
push
in
mov
jns
dec
jne
addr16
pusha
fild
adc
mov
mov
push
mov
add
jg
sub
adc
pop
sbb
and
pop
or
xchg
sub
adc
pop
and
or
mov
mov
fstp
addr16
xor
aaa
movs
mov
fisttp
aad
and
int3
push
jge
mov
sbb
out
pop
mov
jo
int3
mov
jl
das
pop
xor
shl
icebp
cmp
dec
cdq
and
sbb
(bad)
xor
and
push
loope
cmc
scas
mov
push
mov
jnp
jmp
xchg
js
ja
cmovbe
jg
rol
mov
and
ins
mov
adc
sub
inc
push
adc
in
aaa
pop
sbb
inc
jp
and
aaa
jbe
(bad)
push
xchg
fisttp
mov
sbb
pop
mov
inc
int
sbb
or
jl
sub
fmul
cmc
les
jns
add
or
icebp
adc
xchg
mov
cdq
cmp
mov
mul
(bad)
bound
repnz
or
inc
sahf
aad
jnp
ins
pop
push
ja
bound
gs
xchg
enter
add
push
xchg
push
(bad)
xchg
add
sbb
sub
dec
mov
(bad)
and
cmp
xchg
push
pop
popa
inc
jae
cmc
popf
ja
dec
jmp
push
lock
lock
cmp
outs
sub
int3
pushw
test
rcr
add
jl
pushf
sub
mov
aad
scas
push
stos
pop
jg
(bad)
ftst
test
or
xchg
call
inc
cmp
or
mov
ss
sbb
(bad)
mov
sub
jmp
dec
(bad)
sbb
pop
cmps
mov
call
push
(bad)
adc
pop
outs
dec
xchg
into
jbe
lods
out
imul
out
inc
(bad)
into
jne
popf
jmp
stos
add
pushf
jb
push
jno
mov
mov
std
gs
sub
adc
inc
xchg
xor
add
ror
fdiv
outs
movs
pop
push
mov
shl
fstp
jmp
int3
cmc
cmp
gs
cmp
imul
shl
jae
mov
dec
div
cmp
cmp
sub
shr
xchg
pop
lds
call
aas
jno
out
or
mov
imul
movs
and
nop
and
mov
es
pop
pop
and
xchg
push
sbb
jns
xor
scas
mov
xchg
not
pop
adc
mov
xor
mov
mov
jb
add
es
(bad)
mov
xor
fcomp
or
or
sub
out
outs
add
push
stos
jbe
cmps
jp
lds
shl
or
xor
pop
stos
xchg
or
icebp
jg
pop
lods
push
push
add
mov
cld
cmp
rol
cli
adc
xchg
fs
adc
push
or
test
adc
mov
push
xchg
jb
not
inc
inc
rcr
dec
jne
dec
sahf
outs
pop
call
mov
je
movs
nop
xchg
test
sub
pop
imul
cmp
sbb
jge
lods
mov
xchg
(bad)
cmp
pop
shr
push
int
jecxz
enter
jecxz
inc
or
pop
clc
jbe
addr16
jb
sub
mov
and
pusha
jmp
mov
sbb
xor
std
jecxz
dec
push
push
loope
call
sbb
xchg
pop
enter
adc
aas
inc
fidivr
(bad)
scas
or
leave
rcr
jecxz
pop
or
pop
mov
and
in
or
mov
xor
cmc
push
(bad)
ds
addr16
dec
pop
adc
idiv
cdq
fisttp
fistp
dec
jp
scas
dec
adc
jp
sbb
(bad)
leave
pop
paddb
call
push
mov
or
mov
xchg
jmp
iret
or
aaa
fld
fwait
int
jg
sbb
jne
shl
inc
fs
bound
pop
add
mov
inc
sub
pop
in
mov
dec
xor
xchg
pop
retf
dec
inc
aam
imul
push
mov
in
aaa
sub
pop
inc
or
mov
fwait
push
mov
push
or
push
add
inc
cwde
outs
fisubr
inc
cmp
inc
fs
jmp
out
or
imul
repnz
inc
mul
adc
sar
jb
mov
test
jmp
inc
mov
mov
jne
test
in
das
adc
in
jl
or
pusha
rcl
sub
cmp
xchg
loope
sub
pop
fs
fld
dec
push
cli
nop
ret
fs
inc
or
out
inc
push
fs
mov
mov
inc
shr
jge
loopne
push
stos
inc
out
mov
popa
lods
mov
paddusb
(bad)
jecxz
inc
loopne
push
repnz
mov
or
inc
je
jle
ss
lds
dec
push
repnz
movs
adc
push
mov
inc
or
hlt
mov
push
push
in
mov
dec
in
push
dec
gs
push
into
push
test
pusha
xor
(bad)
dec
pop
xor
or
push
inc
pop
mov
into
add
fist
ror
in
jmp
fld
dec
adc
sub
and
adc
or
add
iret
push
out
push
push
mov
ffree
mov
fmul
push
mov
mov
sub
mov
sub
cmp
jmp
mov
ins
shr
(bad)
cmp
hlt
mov
xor
hlt
xchg
mov
and
jle
loope
ja
call
adc
imul
jmp
cmc
sbb
jmp
fs
cmp
sub
sub
xchg
jge
rol
inc
cld
repnz
mov
hlt
dec
daa
pmaddwd
mov
jg
sub
outs
std
ins
mov
aad
out
pop
or
je
sub
ret
ss
pushf
mov
push
je
xchg
mov
loop
loopne
mov
mov
cmp
xchg
mov
cwde
fwait
mov
jp
mov
scas
rcl
sti
iret
fst
ss
jns
loopne
push
sahf
sbb
test
ins
push
pop
cmp
push
cmp
out
sub
jl
imul
sar
loopne
dec
popa
popf
sbb
mov
cmps
dec
sbb
fs
pusha
aas
pop
cwde
ret
rcl
fisttp
pop
xor
hlt
stos
pusha
adc
popa
and
popf
stc
dec
mov
xlat
nop
cld
jmp
jae
pop
leave
lahf
aad
push
adc
push
out
or
inc
pop
pop
js
adc
push
mov
mov
pop
in
pop
or
mov
dec
scas
mov
fsubp
push
test
inc
nop
fcom
cli
and
iret
les
pop
cmp
mov
xor
jnp
pop
arpl
data16
and
call
lock
and
cmps
adc
sar
xor
xor
jns
jp
(bad)
ficom
xorps
cmp
jb
mov
or
jnp
cmc
push
loope
jb
jecxz
push
pusha
push
xchg
cld
mov
arpl
xchg
cmp
in
jae
scas
iret
jge
mov
sahf
out
sub
lahf
test
fadd
add
xor
addr16
(bad)
push
adc
ins
lock
dec
ror
jle
(bad)
shr
xor
retf
or
sub
inc
(bad)
sahf
mov
and
in
mov
cmps
dec
jmp
in
mov
mov
pop
stos
pop
(bad)
push
or
mov
out
addr16
xchg
ret
pop
sub
mov
(bad)
mov
add
movs
test
(bad)
test
(bad)
push
xchg
popa
mov
in
or
test
js
add
lods
fsubr
fbstp
xchg
sub
jp
mov
push
and
inc
push
sub
dec
push
adc
pop
inc
xor
pop
ret
pushf
scas
js
inc
sub
arpl
pop
xchg
sbb
sub
cmp
xlat
mov
lahf
dec
sub
dec
(bad)
or
rol
sbb
scas
dec
push
adc
cmp
gs
lock
call
in
sub
in
mov
dec
in
push
les
push
inc
loopne
pop
shl
lds
mov
addr16
dec
lods
mov
fld
push
int3
sahf
inc
(bad)
and
mov
fist
mov
xchg
(bad)
imul
sbb
test
out
sbb
test
jl
(bad)
popf
inc
call
cwde
movs
lahf
je
movs
ds
retf
sbb
add
mov
fist
mov
xchg
(bad)
sub
in
sbb
sbb
scas
lock
sahf
ds
cs
fcom
fisubr
and
lock
stos
adc
mov
dec
jbe
push
test
pop
or
aaa
fist
sahf
mov
dec
ficomp
clc
mov
dec
je
pop
sub
nop
cmp
mov
sbb
mov
fs
cmps
ins
imul
cs
xor
push
outs
jb
inc
in
and
movs
(bad)
mov
shr
push
jmp
aad
xlat
std
xchg
out
push
sub
push
dec
sub
mov
ror
cdq
fdiv
dec
and
out
cmp
fucomi
mov
lods
jmp
iret
fcom
ins
jg
icebp
jge
mov
pop
xor
ror
and
test
cdq
add
sub
dec
(bad)
mov
and
jns
pop
mov
xor
or
adc
cs
dec
sbb
pop
mov
ja
push
aaa
dec
jno
add
in
sbb
mov
jp
aam
mov
inc
or
popf
test
pop
xlat
and
sbb
cmps
and
aaa
mov
jg
lahf
jne
retf
loopne
mov
bound
fisttp
and
test
dec
sbb
sbb
hlt
into
mov
mov
lock
sub
rcr
cs
mov
xchg
(bad)
mov
ret
in
and
mov
hlt
xor
dec
pop
push
xor
imul
popa
movs
mov
shr
mov
ret
xchg
rol
pop
lahf
cmp
mov
mov
push
fcom
jecxz
jp
ret
ficomp
add
data16
xchg
ins
xchg
rcl
(bad)
jle
mov
(bad)
dec
cdq
call
es
pop
dec
or
pop
cmc
mov
mov
lahf
cmp
lock
(bad)
and
cmp
sub
enter
inc
xchg
lahf
mov
int3
retf
in
pop
push
out
dec
rol
sub
test
jg
sar
nop
cmp
retf
cmp
xor
mov
int3
jle
int3
jbe
sub
cli
cmps
les
fild
mov
inc
pop
push
mov
inc
cmp
sub
dec
in
dec
xchg
or
pop
fs
xchg
lods
shl
aad
dec
sub
xor
cld
jae
das
fidiv
out
test
dec
loopne
cmc
add
xchg
nop
fidivr
mov
scas
pop
xor
and
sub
stos
dec
pop
(bad)
rol
mov
sbb
pop
dec
cmp
sar
jmp
push
cmp
xlat
jge
mov
rep
cld
mov
fild
ds
adc
and
xor
into
cmps
int3
jne
pop
xor
mov
and
test
push
dec
in
mov
push
inc
fs
push
(bad)
in
mov
dec
cmp
add
ins
mov
push
cwde
or
sahf
mov
test
xor
aam
xlat
jge
push
out
out
mov
mov
add
inc
pop
inc
dec
fist
in
inc
or
dec
idiv
shl
addr16
fnstenv
jg
push
sbb
pop
mov
mov
push
imul
fidiv
inc
shl
adc
idiv
mov
mov
xchg
in
(bad)
popa
inc
aas
loop
fdiv
stc
pop
in
movs
clc
shl
inc
cmp
jmp
out
mov
fdivp
clc
jmp
pop
int
mov
pop
push
push
jne
push
adc
(bad)
sti
dec
xchg
inc
into
or
jno
cmp
sbb
mov
adc
pop
inc
test
outs
mov
adc
dec
add
pop
scas
aam
mov
pop
ins
sahf
popa
shl
mov
fld
movs
retf
bound
int3
jl
dec
into
ret
std
push
sub
pop
lods
fst
push
ds
(bad)
pop
jne
xchg
dec
jmp
or
jnp
mov
out
nop
pop
pop
pop
jno
lds
(bad)
js
pop
xor
and
lahf
repnz
jbe
dec
mov
dec
sar
push
dec
xchg
hlt
push
lds
cs
mov
arpl
adc
call
imul
push
fidivr
sbb
rcr
push
popf
outs
retf
(bad)
xor
cmp
or
or
ret
sub
add
and
mov
or
add
mov
pop
lods
push
sub
pop
movs
pop
hlt
xor
sub
jno
push
test
adc
push
hlt
inc
lahf
or
(bad)
or
or
dec
fcmovnbe
rol
xchg
jmp
cmc
push
sbb
sub
out
xor
loop
dec
fst
cmp
dec
sub
and
and
mov
pop
pop
sti
and
add
in
test
scas
xchg
sub
push
test
loope
call
fwait
inc
cmp
jge
add
xchg
dec
adc
ds
xor
popf
cmp
dec
fistp
scas
mov
adc
dec
or
cmp
xor
arpl
mov
enter
xchg
std
fs
dec
rcr
dec
shl
jecxz
int3
in
dec
rcr
cmp
ficom
fldlg2
dec
mov
mov
cmps
push
or
outs
push
cdq
mov
pop
retf
sbb
mov
mov
lea
jae
and
and
call
mov
dec
mov
leave
mov
rcr
stos
inc
mov
imul
pushf
add
or
mov
lods
out
scas
ins
xor
dec
inc
popa
icebp
aas
les
sti
adc
jbe
push
fwait
mov
or
cmp
sti
and
aaa
test
iret
dec
pop
mov
mov
imul
mov
stos
pop
cmc
das
adc
xchg
stos
push
pop
ds
mov
shr
neg
xchg
or
pop
scas
xor
(bad)
ja
mov
sbb
ror
mov
nop
into
push
jne
push
hlt
call
push
lock
jno
and
fcomp
jl
inc
pop
dec
pusha
lea
loopne
or
sbb
xor
gs
push
fsub
cli
xchg
xchg
lods
fistp
fidiv
cmp
inc
mov
dec
fwait
sub
jp
outs
in
mov
imul
dec
mov
fstp
sub
add
add
pop
mov
adc
(bad)
ds
pop
popa
pop
pop
inc
push
add
mov
nop
push
arpl
mov
scas
pcmpgtb
lods
fucom
add
std
int3
sub
jno
jl
movs
int
loope
es
mov
push
lds
movs
push
outs
sbb
aad
shl
test
gs
lods
fs
push
lods
mul
and
aas
inc
push
cld
pop
ret
(bad)
(bad)
scas
pushf
ins
in
mov
inc
inc
loope
inc
aaa
jmp
adc
mov
xchg
sbb
call
stc
add
fsub
sar
test
mov
cmp
les
jne
cmps
sbb
jge
daa
sbb
int
xchg
xchg
int3
retf
inc
mov
cmp
aam
mov
fnstcw
arpl
test
cmp
or
adc
popf
fcomp
mov
repnz
je
add
or
xor
dec
sbb
cli
sub
mov
leave
pop
test
cmc
in
cmp
jne
(bad)
jno
enter
mov
out
jle
inc
pusha
cli
dec
shl
aas
enter
retf
jg
popf
xor
dec
inc
mov
fadd
cmp
inc
fild
sbb
push
mov
(bad)
(bad)
dec
add
mov
ret
mov
push
(bad)
es
(bad)
popa
sahf
xor
mov
ret
mov
adc
pop
test
push
inc
and
fidiv
sbb
aas
scas
and
jb
sub
inc
mov
inc
or
in
neg
retf
(bad)
in
mov
lss
inc
(bad)
iret
icebp
sub
in
into
out
int
stos
ret
pop
sub
(bad)
enter
ja
icebp
out
lods
out
jns
or
lds
sbb
jl
adc
(bad)
pop
jge
lds
jne
push
jecxz
movs
inc
sub
sub
mov
ja
xchg
jl
xchg
sbb
cs
inc
jg
dec
in
sbb
fld
sub
or
push
cmc
jo
cs
shl
ret
mov
cmps
pop
push
sub
cmps
movs
pop
(bad)
mov
adc
push
int3
fcomi
retf
ss
sbb
pop
cs
sahf
mov
mov
pop
into
mov
stos
push
pop
adc
ins
stc
mov
sbb
push
dec
mov
dec
into
pop
cmp
outs
and
and
call
rcr
dec
(bad)
pop
adc
daa
ss
out
sbb
xchg
imul
lock
sub
lea
je
cmps
int
jo
xchg
sub
adc
cmc
dec
cmps
jp
jle
cmp
out
mov
adc
push
dec
out
std
or
hlt
bound
pop
hlt
mov
push
ins
lods
mov
cs
aam
es
xchg
pop
sub
mov
pushf
fisubr
pushf
loop
and
sub
int3
inc
cmp
xor
adc
dec
jp
in
sub
ins
movs
mov
fs
xchg
cs
xchg
es
rcl
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
pop
xchg
sbb
dec
in
dec
push
fs
pop
in
push
les
push
dec
cld
inc
sub
push
inc
in
mov
push
dec
aam
push
jl
mov
es
mov
inc
hlt
mov
push
dec
in
mov
dec
in
mov
push
jl
call
cld
inc
(bad)
push
int3
push
cmp
mov
imul
mov
pop
push
or
mov
cmp
jno
je
adc
mov
pop
mov
loop
pop
(bad)
repz
outs
and
or
or
sbb
dec
fnstcw
mov
or
cmp
rcl
cmc
(bad)
mov
mov
aam
repz
imul
stos
dec
enter
cmp
cmps
retf
jp
xor
or
imul
cli
or
push
call
sbb
cmp
call
shl
push
jae
cdq
movs
mov
and
in
(bad)
push
cmp
ret
enter
dec
xor
cli
xor
in
(bad)
dec
inc
ret
je
jno
cmp
ins
fstp
scas
test
dec
mov
pop
dec
sbb
stc
push
(bad)
mov
cld
test
cld
and
or
mov
or
xlat
mov
cmp
or
in
adc
test
jecxz
or
popa
jne
repz
xchg
adc
scas
sbb
sti
ja
sbb
(bad)
fisub
adc
ss
or
out
mov
popf
mov
cmps
push
add
pop
enter
sbb
ins
popa
ret
mov
dec
ins
rcl
push
push
xchg
sub
inc
jecxz
outs
jecxz
(bad)
sub
enter
add
add
add
jbe
mov
or
inc
mov
or
sub
add
movs
jge
adc
test
shl
pop
test
sbb
add
sub
pop
sti
pop
and
movs
nop
arpl
jecxz
sbb
adc
mov
outs
jbe
(bad)
fild
movs
mov
sbb
(bad)
pop
popa
daa
dec
pop
add
sti
push
inc
adc
inc
adc
dec
pop
(bad)
mov
inc
int
xchg
xor
xchg
and
pop
and
int3
into
mov
sbb
inc
cmps
dec
loopne
fs
jmp
ins
add
sbb
psllq
jmp
pop
push
xchg
mov
jl
jle
in
xchg
test
or
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
je
push
dec
mov
push
jae
pop
xchg
dec
in
mov
push
dec
xor
imul
jnp
xor
jbe
pop
cmc
dec
in
cli
or
push
dec
pop
mov
out
pop
inc
rol
jmp
xchg
jmp
in
mov
push
push
push
mov
inc
mov
sahf
adc
jp
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
ins
mov
or
push
je
mov
push
dec
int3
mov
push
inc
mov
int
add
int3
in
and
aam
cmp
int3
cli
push
pop
loopne
es
repnz
push
addr16
adc
add
inc
sub
add
stos
push
cmc
mov
outs
inc
add
push
out
sbb
or
sti
iret
test
dec
xchg
push
add
add
jg
cmp
xchg
adc
inc
push
sbb
ret
inc
fcmovb
movs
adc
adc
fidivr
and
(bad)
and
inc
loopne
inc
adc
or
jae
std
add
inc
push
inc
push
dec
fdivr
in
test
push
shl
jbe
adc
mov
add
dec
jbe
mov
repnz
ja
and
arpl
xor
shl
dec
ins
push
sub
or
jnp
out
jmp
fldcw
xor
cdq
mov
sub
mov
cmp
add
mov
leave
outs
mov
xor
jle
ret
sahf
leave
adc
jmp
mov
cmps
call
loopne
xor
repnz
mov
pop
xor
fstp
push
cld
call
jge
out
pop
div
out
std
out
imul
hlt
mul
loopne
loopne
jb
inc
(bad)
xor
popa
ins
xor
nop
iret
mov
lods
cld
out
pmaxub
(bad)
ins
adc
sbb
lock
es
push
or
push
stos
dec
xlat
xchg
push
mov
dec
js
imul
push
pop
pop
(bad)
cli
fs
ror
push
cmp
lods
test
movs
call
dec
cmp
popf
sbb
dec
fiadd
xor
out
out
test
repnz
mov
sbb
sub
mov
repz
jmp
lock
jae
mov
and
stc
arpl
pop
lea
je
and
mov
xchg
stc
in
mov
cwde
std
add
lods
cmps
cdq
lea
mov
push
lds
mov
out
pop
mov
test
lea
inc
cmp
dec
out
retf
ror
loop
ficom
dec
int3
xchg
loop
cdq
(bad)
loopne
jecxz
movs
fxch
daa
outs
mov
sbb
rol
xor
retf
sbb
out
fldcw
test
add
cli
cs
ins
aaa
or
mov
mov
sub
retf
icebp
or
mov
cs
jmp
in
mov
push
inc
in
xchg
jle
sahf
(bad)
xchg
push
test
mov
fucom
cmp
dec
out
sbb
pop
adc
movs
(bad)
cmp
or
push
add
sbb
out
fidivr
out
call
iret
(bad)
add
cli
push
adc
mul
add
mov
int
xchg
fdivr
xchg
and
int
adc
arpl
xor
adc
data16
pop
shl
inc
cli
test
jbe
mov
mov
fidivr
inc
shr
fisub
jle
outs
das
xor
and
loop
pop
into
sbb
add
js
mov
inc
into
add
lock
fs
pop
push
clc
ret
stos
or
mov
or
xchg
fidivr
mov
add
sub
adc
push
adc
push
mov
push
xchg
fdivrp
test
mov
xchg
shrd
mov
(bad)
mov
jne
pop
retf
shl
dec
stc
xchg
fsubr
test
lea
das
lds
inc
mov
add
mov
mov
add
enter
out
sub
sahf
(bad)
push
pop
xor
pop
jne
inc
std
sub
xchg
aas
mov
pop
add
test
fsqrt
mov
fwait
stc
addr16
pop
je
xor
repnz
inc
outs
jns
imul
or
sahf
or
mov
enter
scas
stos
pop
das
and
xor
pop
vcvtss2si
cmp
stos
pop
sub
shr
ret
(bad)
push
push
pop
je
fadd
cmps
cld
gs
dec
inc
jmp
mov
scas
xor
sbb
adc
fisttp
je
hlt
inc
sbb
xchg
dec
and
ds
xchg
jl
pop
jl
inc
jns
cdq
mov
pop
mov
inc
jns
fwait
mov
sbb
test
fwait
mov
adc
inc
hlt
dec
fwait
jae
mov
adc
or
scas
push
cmp
js
stos
add
dec
xor
lods
ss
rcr
add
cmc
jmp
pusha
mov
cmps
cdq
push
ror
out
lahf
inc
clc
mov
xor
lahf
(bad)
mov
aas
int3
xchg
test
push
jg
xlat
pop
dec
rcr
and
fsub
push
xchg
loope
pushf
jns
es
fld
cld
sar
or
hlt
lea
arpl
adc
outs
push
mov
clc
dec
inc
sub
cmp
in
sub
faddp
cmp
test
ret
push
fidivr
and
fcomp
jle
inc
ror
(bad)
pop
(bad)
out
mov
shl
stos
repnz
clflush
cmp
sub
pop
ficomp
(bad)
cmp
bnd
in
mov
aad
jno
pushf
xor
pop
cdq
cmp
pop
xchg
lahf
daa
jl
jmp
push
or
mov
mov
sbb
aaa
sub
dec
test
xchg
iret
ins
jne
in
ficomp
inc
jge
imul
out
iret
push
mov
push
mov
pop
jb
add
jmp
mov
push
and
and
mov
or
pop
mov
hlt
push
daa
sub
ss
and
mov
aaa
(bad)
mov
test
or
call
jno
push
std
pop
inc
jbe
cmp
xor
inc
or
xor
retf
out
js
in
sub
jp
cli
push
sub
or
in
stos
imul
mov
inc
pusha
retf
mov
loopne
es
mov
mov
and
cmps
sti
ret
imul
in
pop
shl
aas
inc
dec
push
cmp
fimul
sbb
lods
jmp
adc
sub
sub
xor
mov
bound
push
and
(bad)
shl
in
ins
or
ficom
jge
retf
sbb
in
jl
(bad)
xchg
pop
hlt
mov
je
call
int3
mov
push
les
aam
xor
int
cmp
(bad)
in
mov
out
adc
add
in
popf
or
push
inc
lea
push
sub
out
and
add
pop
pop
test
mov
xchg
sbb
test
sub
cdq
loope
pop
in
out
cmp
arpl
sbb
pusha
dec
inc
into
pop
dec
pop
icebp
out
mov
fs
push
loope
test
mov
jmp
add
mov
pop
sbb
(bad)
dec
mov
push
mov
fild
mov
inc
ret
jg
pop
rcl
(bad)
push
call
imul
dec
fdivr
dec
aam
dec
dec
dec
adc
test
pusha
push
fidivr
sbb
cmp
sub
out
movs
fs
movs
pusha
pop
xor
jb
push
cmp
imul
jmp
js
sbb
mov
push
stos
dec
pop
push
loop
cvtpi2ps
in
mov
sub
add
pop
pop
dec
jns
clc
push
sbb
add
mov
std
sbb
out
mov
rol
sub
pop
and
xor
mov
pop
add
iret
jl
ja
icebp
push
push
mov
ret
aam
lock
fidiv
and
inc
jp
aaa
pop
inc
outs
cmp
in
test
inc
cmp
loop
jae
fdivr
lahf
inc
mov
outs
gs
mov
jmp
sar
pop
mov
or
shr
test
sbb
sub
inc
ror
shr
or
pusha
pop
mov
mov
pop
hlt
(bad)
ror
pop
imul
popa
dec
retf
cmp
sub
mov
inc
mov
(bad)
xlat
outs
retf
sub
pop
shl
push
pop
es
les
push
xchg
sti
lds
mov
or
cmps
mov
(bad)
ret
cld
hlt
int3
rcl
std
push
cmp
test
dec
pop
into
or
popa
push
call
ret
fcmovnbe
push
xor
adc
test
xor
retf
sub
pop
shl
xlat
es
arpl
sub
mov
fs
adc
cld
lods
in
ret
mov
add
imul
sbb
jnp
ds
and
scas
loop
mov
out
xor
nop
adc
cmps
jbe
push
mov
mov
jp
xlat
js
loop
call
(bad)
test
mov
cmc
loopne
fisttp
imul
pusha
inc
sti
js
rcr
jne
sub
test
into
call
jmp
pop
push
imul
pop
jl
arpl
loop
sub
popf
mov
aam
popf
inc
sti
dec
xchg
and
cmc
and
mov
(bad)
mov
test
push
(bad)
adc
retf
adc
fidiv
outs
inc
mov
pop
mov
push
je
mov
push
dec
in
mov
push
inc
dec
cwde
xchg
dec
xchg
sahf
(bad)
stos
xchg
xor
int3
pusha
sub
rol
sub
push
into
push
sub
outs
and
setnp
stos
repz
mov
push
pop
data16
cmp
adc
in
or
sub
and
cld
mov
jnp
fs
aas
pop
add
cmps
js
jle
push
xor
xchg
cwde
dec
ss
cdq
cwde
rcr
mov
push
iret
ja
(bad)
gs
or
xchg
sbb
xor
aas
cdq
rol
mov
add
call
pop
(bad)
mov
fs
push
mov
sbb
add
neg
sub
data16
pop
adc
xor
call
pop
sub
dec
mov
add
sub
mov
pop
daa
out
fs
dec
sub
gs
or
loop
sub
sub
(bad)
retf
mov
cmp
in
jne
xchg
mov
inc
outs
loopne
popf
sbb
xchg
mov
or
out
jb
ja
mov
sahf
xchg
shl
addr16
dec
neg
fstp
(bad)
ins
and
xor
sti
push
and
stos
pop
jmp
mov
adc
push
cmp
loopne
dec
ret
pop
movs
(bad)
in
(bad)
xchg
mov
enter
and
(bad)
cmps
arpl
push
ds
ud2
xor
add
jo
and
rcl
test
jge
mov
fmul
repnz
and
retf
mov
hlt
movs
aam
cmp
arpl
fisub
leave
xchg
call
cmps
mov
dec
mov
cmp
icebp
add
imul
repnz
clc
lahf
adc
or
adc
xor
in
add
pop
mov
ins
outs
cmps
inc
adc
or
in
lds
xchg
pusha
mov
cdq
mov
ja
loope
inc
fist
xchg
cmp
mov
pop
imul
ret
dec
cmps
(bad)
les
mov
je
mov
push
mov
out
out
jne
and
lock
dec
(bad)
enter
adc
test
gs
inc
fisub
aaa
mov
xchg
adc
test
xchg
jne
scas
iret
fs
push
or
adc
mov
inc
retf
mov
sub
push
sbb
and
jle
dec
pop
rol
adc
out
sub
sub
sti
dec
in
mov
scas
rol
and
inc
or
add
cmps
add
idiv
jnp
lds
call
cmp
pop
mov
repnz
clc
bound
xor
out
xchg
rcl
xlat
aaa
xor
cmp
(bad)
dec
mov
or
mov
test
push
xor
mov
jae
xor
in
movs
push
inc
es
mov
movs
xor
daa
sub
imul
in
jb
cld
movs
or
mov
outs
or
jl
xor
xchg
push
inc
or
cwde
loope
int
test
movs
jp
mov
clc
or
lock
sti
das
jno
pop
push
inc
(bad)
test
lock
test
add
addr16
je
xchg
xor
addr16
mov
int3
les
icebp
adc
pop
sub
jecxz
pop
in
sbb
data16
lods
retf
cs
loopne
aaa
adc
fidiv
jne
inc
pop
sub
int
mov
jno
nop
lahf
add
mov
call
fcomp
push
test
rcr
cdq
clc
dec
pushf
xor
pop
and
pop
and
dec
in
ja
inc
xchg
aad
xchg
out
push
cwde
fistp
outs
xchg
fimul
shl
fcomp
xchg
and
push
clc
das
ror
aas
inc
jmp
cwde
imul
jmp
dec
pmaxub
xchg
lahf
cwde
pop
ss
mov
pop
or
jns
inc
outs
dec
dec
hlt
in
retf
pop
addr16
or
mov
inc
in
fwait
xor
ret
inc
pop
mov
mov
ret
add
pop
mov
mov
cmp
push
or
(bad)
xchg
cmp
pop
sar
pop
xchg
sub
cmps
(bad)
ret
popf
repnz
sar
add
aam
cmp
mov
mov
push
mov
and
mov
sar
mov
mov
push
std
mov
inc
adc
test
inc
fidivr
shr
mov
push
and
iret
cmp
test
cmp
push
jmp
sub
mov
sub
mov
inc
sub
mov
je
aas
push
and
rcr
xchg
pop
shl
push
and
(bad)
xchg
dec
(bad)
cwde
ins
push
dec
out
xchg
aam
js
leave
adc
popf
or
mov
or
pop
xchg
fdivr
jb
dec
or
dec
out
jns
and
std
fnstcw
xchg
out
cmc
stc
(bad)
fist
in
or
repnz
inc
test
imul
in
test
add
cmp
hlt
or
(bad)
jge
(bad)
mov
dec
pop
je
xchg
pop
aam
pop
cld
mov
scas
out
sub
or
rcr
mov
jae
out
cmp
cmp
fldenv
add
pop
out
cmps
mov
in
shl
jmp
dec
mov
mov
imul
lea
sbb
mov
adc
adc
cs
scas
mov
push
lods
fs
std
loopne
add
or
addr16
mov
jmp
call
xor
mov
out
nop
cmp
retf
dec
fldcw
loop
xchg
mov
popf
or
adc
ret
pop
or
shl
cld
mov
push
pop
in
mov
dec
in
push
dec
in
mov
push
(bad)
loopne
add
in
pop
retf
xor
pop
aas
bswap
in
or
push
inc
cli
mov
xchg
push
shl
lods
fld
xor
mov
xchg
out
mov
les
cs
aam
paddw
cmps
push
cmp
mul
(bad)
lock
mov
(bad)
into
and
xchg
sbb
popf
jnp
mov
in
pop
into
loop
stos
xchg
fsubr
xlat
sbb
cs
sbb
mov
lock
rcl
sbb
push
push
add
inc
jb
fs
jnp
fistp
and
dec
pushf
fs
pop
out
sbb
jmp
scas
add
dec
cmp
fcomp
outs
shl
adc
jb
ret
add
rcl
or
jle
push
xchg
jp
popf
lock
ret
ins
test
mov
ins
pop
scas
push
cwde
loop
jmp
movs
adc
pop
mov
loope
mov
cmp
retf
cmp
loop
mov
in
mov
enter
jg
or
out
call
outs
mov
xor
adc
(bad)
or
lods
iret
push
sub
data16
xchg
pop
dec
push
rcr
mov
and
aaa
sbb
jno
add
movs
in
or
mov
mov
and
xor
dec
nop
mov
retf
xor
xor
retf
call
aas
and
(bad)
loopne
cmps
iret
aaa
(bad)
cs
jl
or
pop
jl
adc
sub
ds
aam
sbb
adc
imul
fadd
push
mov
mov
(bad)
push
mov
inc
call
adc
mov
icebp
cdq
es
push
aaa
push
push
mov
data16
out
data16
or
into
es
or
cs
sbb
or
jle
jge
je
fisttp
stos
dec
rol
mov
pop
or
mov
sub
dec
mov
adc
mov
aad
fwait
dec
or
mov
repz
and
jno
fisttp
xor
cwde
or
stos
lahf
dec
and
(bad)
cmp
jp
jne
call
or
ins
not
or
stos
fbstp
or
pop
test
and
movs
mul
xlat
clc
sbb
test
dec
jg
pop
or
cmps
icebp
add
in
push
jae
jnp
aas
int
aam
ret
sbb
out
dec
dec
and
cmps
outs
xchg
and
movs
inc
(bad)
outs
inc
test
pop
call
icebp
(bad)
je
dec
push
jnp
fcom
mov
sub
dec
sub
xchg
outs
cmp
sti
aam
push
fs
nop
jmp
test
add
out
pushf
daa
lods
mov
aad
jl
mov
sub
mov
push
or
mov
fdiv
mov
sub
in
adc
leave
inc
outs
loopne
(bad)
out
sub
iret
mov
stos
cmp
sbb
shr
pusha
sbb
adc
(bad)
fisub
xchg
add
push
test
jne
into
fs
fidiv
out
dec
call
es
jge
sub
iret
cmp
sahf
out
call
dec
mov
or
inc
add
jp
sub
xchg
mov
mov
or
cli
ds
loop
and
push
hlt
cmpxchg
mov
ss
std
in
inc
jle
lahf
inc
cld
pop
rcr
push
imul
pushf
sub
int3
cmp
inc
sar
add
nop
xor
pop
jp
repz
lods
xchg
dec
mov
rol
mov
nop
lods
sub
jns
das
xlat
xor
or
push
pop
mov
in
fwait
in
inc
cmc
inc
in
ficom
push
mov
mov
jp
into
push
lahf
dec
cmps
adc
xor
mov
lahf
scas
cli
sub
into
jmp
sub
add
outs
pop
es
test
fs
(bad)
nop
sub
sub
jge
call
lock
jge
mov
aad
xor
addr16
pop
push
lock
jnp
pop
es
jle
into
mov
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
jge
lahf
jbe
cs
(bad)
lock
jne
lahf
outs
mov
sub
mov
lock
outs
cmp
inc
aad
lock
jge
lahf
outs
mov
lock
jge
lahf
outs
mov
lock
retf
fwait
lahf
mov
sub
(bad)
push
pop
in
push
fs
stos
es
in
push
dec
gs
push
inc
gs
dec
imul
(bad)
pop
cmp
iret
in
or
adc
or
push
cs
in
fidivr
jg
mov
lea
push
mov
adc
sub
outs
pop
hlt
imul
add
mov
outs
cmc
mov
mov
sbb
or
fs
ffree
test
dec
cwde
push
aam
jns
or
das
call
popf
jo
retf
cdq
mov
test
mov
test
retf
rcr
inc
jmp
repz
sbb
in
ins
lock
pop
push
aad
aaa
push
aaa
lods
cmp
scas
mov
cmp
clc
inc
out
jno
fld
ins
or
mov
outs
jecxz
add
neg
inc
fwait
xchg
pop
mov
and
or
sbb
jns
jo
add
es
sub
jecxz
inc
and
add
fbstp
mov
and
pop
loope
popf
cmps
add
addr16
adc
push
(bad)
or
cmp
add
fist
mov
xchg
pusha
icebp
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
int3
pusha
cmc
inc
cld
gs
adc
sub
mov
out
mov
sbb
pop
mov
popa
add
xchg
xor
mov
mov
cmp
cmp
cwde
dec
jl
jl
test
mov
cmp
icebp
fs
mov
inc
mov
mov
pop
out
pop
dec
fldcw
test
nop
sub
jno
dec
test
dec
mov
jmp
push
fdivr
rcr
or
mov
adc
aam
jl
(bad)
jns
sub
mov
sub
lds
inc
pop
mov
ror
mov
pop
not
inc
xlat
aas
ds
inc
not
xchg
push
mov
xchg
cmps
push
imul
cld
jle
xchg
(bad)
lds
jl
test
aad
sub
loopne
rcl
das
sub
dec
sbb
dec
jns
jmp
gs
loop
xor
icebp
in
ja
mov
or
or
adc
jnp
cmp
out
mov
cmp
pop
daa
or
jle
xchg
mov
push
icebp
fmul
sbb
dec
out
arpl
sbb
jmp
leave
push
icebp
cmp
repz
mov
inc
push
out
popf
xchg
stos
pop
into
push
push
or
(bad)
jb
fistp
adc
cmp
and
(bad)
xchg
xor
inc
shl
mov
pop
lods
cmc
cdq
mov
mov
pop
sub
mov
pushf
rcr
cdq
and
push
and
mov
iret
popf
retf
cmc
stos
push
mov
int3
pop
mov
pop
loop
dec
rcr
sub
push
(bad)
cwde
xor
popf
cmp
adc
xchg
mov
loope
xor
cmp
int3
int3
ds
dec
dec
ror
(bad)
pop
mov
outs
cli
xor
cmp
pop
jge
add
or
jmp
inc
test
sub
test
shr
aaa
out
mov
std
pop
pop
dec
mov
nop
sub
fsubr
imul
fisubr
sahf
mov
ins
retf
or
ds
call
iret
mov
cli
imul
cmc
dec
int3
fiadd
dec
in
stos
push
dec
in
mov
push
(bad)
push
(bad)
jmp
leave
outs
xor
(bad)
in
lea
push
inc
mov
cmp
cmp
sub
inc
cdq
and
pop
popa
fxch
les
and
ret
sub
adc
mov
mov
add
retf
iret
jg
sbb
cmp
fiadd
test
push
inc
dec
push
jl
sbb
xchg
add
iret
movs
imul
adc
and
mov
and
sbb
add
mov
enter
push
xchg
pop
cmp
adc
rcl
cmp
movs
lods
jecxz
imul
add
movs
aas
cmp
jnp
fs
adc
scas
std
movs
scas
(bad)
outs
test
imul
scas
(bad)
xchg
sbb
xchg
and
mov
sub
scas
cwde
mov
jle
push
test
xor
test
in
add
cld
xor
es
test
mov
cmp
loopne
mov
add
mov
jmp
push
or
jno
push
inc
pop
push
mov
stos
into
lods
pop
mov
out
mov
aam
cmp
dec
loop
mov
jmp
pop
(bad)
mov
lock
fcmovnbe
mov
(bad)
sub
ret
shl
out
(bad)
retf
in
scas
pushf
fwait
jg
sti
stos
sbb
inc
and
add
adc
ss
fdivr
mov
test
add
fdivr
fisttp
cmps
aam
or
mov
test
xchg
adc
jae
or
int3
in
and
loopne
pop
div
das
jb
rcr
(bad)
and
frstor
stos
ins
jg
lahf
pushf
push
or
ins
retf
dec
adc
(bad)
aaa
cmc
stc
jno
ja
push
or
or
xchg
in
xor
scas
sub
xchg
in
outs
xchg
mov
cmc
xor
idiv
stos
xchg
push
mov
mov
xor
ja
xlat
test
jle
cmp
ficomp
addr16
mov
retf
push
inc
sbb
xchg
cs
clc
or
cmps
out
xor
inc
mov
imul
fsub
mov
aam
iret
gs
aas
and
dec
in
ja
sub
loopne
lahf
inc
out
sbb
imul
pusha
lods
mov
add
movs
aas
pop
out
jmp
test
aad
adc
stos
add
retf
sub
cmp
cs
sub
test
push
xlat
adc
add
das
mov
popa
mov
or
(bad)
int3
repz
stos
es
stos
cmp
or
add
mov
xchg
jne
shl
push
sbb
loope
mov
arpl
mov
dec
adc
cld
mov
push
ins
in
mov
dec
in
push
dec
gs
push
dec
gs
int3
out
mov
cmp
mov
mov
dec
mov
mov
fidivr
gs
lahf
jnp
jecxz
add
adc
call
adc
popf
or
mov
sub
inc
pop
dec
arpl
ss
mov
push
push
aas
inc
or
cli
sbb
fwait
test
pop
lds
arpl
movs
push
or
pop
ret
movs
xlat
add
mov
pop
repnz
movs
jl
cmps
xchg
mov
out
mov
in
imul
xchg
jle
mov
xchg
out
outs
int3
jg
and
mov
xchg
rcl
inc
shl
mov
push
ss
jmp
push
aam
outs
sldt
mov
leave
ss
or
sbb
push
pop
jns
adc
sbb
lahf
call
push
retf
lods
into
sub
int3
in
and
cmp
sbb
outs
mov
dec
jnp
push
push
xor
aas
ins
inc
cmp
popa
fsubrp
pop
ins
mov
sti
mov
xchg
popa
mov
sub
das
lods
into
or
cmp
push
xchg
rcr
into
lahf
aaa
mov
adc
loop
cmp
ss
pop
xchg
add
retf
or
sbb
or
(bad)
scas
test
out
add
out
add
add
loope
jle
sbb
inc
mov
fcmovne
in
inc
out
cmp
loop
xor
xor
(bad)
int3
sbb
jecxz
pop
stos
out
inc
sbb
push
out
sub
stc
dec
push
push
shr
int3
jnp
out
ins
call
outs
test
dec
jns
scas
dec
ret
jmp
xor
daa
and
(bad)
cs
pop
cmp
dec
je
mov
sub
pop
in
jle
or
and
push
add
pop
push
dec
out
push
sbb
cs
cmps
or
dec
addr16
mov
aam
pop
(bad)
push
sub
cmp
push
and
add
inc
adc
jb
xchg
and
out
mov
dec
popf
push
(bad)
sbb
loop
jae
adc
stos
sub
dec
scas
xor
sub
mov
je
xlat
mov
cmp
cmp
add
cld
out
shl
and
sub
loopne
fmul
cmp
clc
mov
cmp
dec
les
daa
call
mov
xor
mov
pop
jecxz
(bad)
hlt
adc
dec
cmp
mov
jmp
inc
push
and
pop
sub
(bad)
jmp
(bad)
dec
push
cmps
ja
and
and
dec
imul
adc
ins
sbb
mov
in
xor
pop
stos
pop
outs
fwait
adc
scas
(bad)
(bad)
outs
movs
cdq
pop
call
xchg
jns
(bad)
sbb
xchg
out
push
adc
not
sub
ror
pop
loope
fs
rcl
outs
sub
faddp
cdq
sub
dec
xchg
xor
cld
outs
xchg
idiv
xor
and
push
push
ror
xor
jo
sbb
out
xor
movs
lahf
in
call
and
xor
mov
loopne
je
inc
in
sbb
ss
rcr
movs
mov
jnp
jle
dec
mov
stos
in
or
stc
pusha
loope
fsub
mov
jno
fs
add
rcr
push
ds
or
stos
hlt
dec
or
push
mov
(bad)
lods
dec
xchg
sbb
mov
add
jae
stos
and
cmp
bound
sbb
push
sbb
xor
out
int3
pop
and
mov
xchg
cmc
pop
add
pusha
lock
cli
leave
jge
dec
xchg
in
stos
cmp
in
mov
sub
xchg
xchg
call
push
pop
mov
and
mov
push
mov
dec
and
or
pop
repz
cmp
shr
ficomp
pop
int
push
mov
aaa
repz
mov
adc
in
inc
imul
fs
mov
xor
push
push
fcmovbe
mov
sub
lods
mov
rcr
mov
xor
call
xchg
dec
adc
sahf
mov
iret
adc
shr
sub
sub
sub
sbb
fdiv
arpl
stc
sub
cmp
push
push
bound
into
sbb
cmp
stos
mov
pop
or
das
and
popf
pop
push
adc
arpl
movs
dec
out
mov
inc
inc
out
mov
or
cli
or
cld
mov
or
hlt
stos
push
push
int3
mov
push
fs
call
mov
pop
adc
loop
fcomp
jle
dec
loop
aam
cmp
mov
fdiv
sbb
mov
adc
inc
int3
mov
cs
inc
and
repnz
in
dec
shr
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
lods
sbb
or
mov
push
inc
retf
stos
xchg
mov
push
dec
in
mov
dec
in
mov
push
ins
in
ss
stos
push
dec
in
sub
push
inc
in
xchg
push
dec
in
mov
push
inc
aam
push
jl
call
hlt
mov
push
dec
cmp
push
mov
in
jp
dec
in
mov
push
dec
aam
or
dec
mov
loop
call
mov
push
loope
add
sub
inc
sbb
imul
dec
call
mov
push
mov
lods
add
(bad)
daa
stos
add
repnz
(bad)
jns
and
loopne
sub
pop
aaa
sahf
in
adc
in
xor
ins
cmps
mov
push
sub
sbb
mov
test
in
nop
xchg
(bad)
jns
cmp
jecxz
cmp
mov
aas
in
dec
xchg
dec
in
jp
dec
xor
dec
jl
mov
jne
push
sub
pop
push
pushf
cli
int
mov
cli
in
jmp
cld
sbb
dec
push
cmp
mov
fdivrp
cmp
jmp
mov
sub
cld
fdiv
mov
rol
call
jnp
dec
ja
push
cmp
mov
mov
jp
out
dec
mov
lds
add
add
int3
mov
or
aad
mov
mov
or
mov
ror
mov
mov
imul
jno
mov
fwait
call
aam
mov
popa
lock
scas
rol
in
dec
cmps
jmp
push
mov
adc
aad
in
push
test
cmps
call
xchg
stos
dec
mov
das
sub
rcr
mov
adc
dec
pop
and
pop
xor
push
repnz
jae
movs
mov
push
imul
int3
stos
dec
xchg
push
fild
adc
or
xor
xchg
sbb
jns
or
pop
mov
push
pop
das
pop
mov
out
arpl
sar
mov
loope
jne
sub
adc
mov
pop
jg
call
push
call
cld
adc
cs
test
xlat
mov
outs
mov
pop
jae
fld
icebp
mov
out
call
mov
push
not
adc
xor
aas
lods
pop
sbb
cmp
(bad)
out
push
rol
push
adc
push
(bad)
in
dec
jne
in
adc
dec
xchg
call
mov
fwait
sbb
retf
addr16
scas
in
push
cmp
in
mov
mov
jge
into
cmp
in
mov
push
adc
dec
xlat
pop
inc
cs
push
div
in
call
mov
pushf
out
call
mov
push
dec
les
push
sbb
int3
ret
jp
dec
in
mov
push
xchg
lods
mov
dec
cld
inc
sub
push
inc
in
stos
push
push
in
call
in
mov
push
fucomp
mov
mov
cmp
or
cld
mov
push
mov
inc
or
dec
out
test
mov
or
pop
es
cmp
repnz
push
pusha
(bad)
mov
neg
jns
mov
cmp
das
std
xchg
(bad)
out
cmp
xor
mov
jb
mov
(bad)
xchg
inc
push
adc
(bad)
pop
inc
(bad)
js
shr
cmc
das
movs
mov
pop
xchg
adc
inc
pop
jns
call
adc
mov
outs
pop
mov
fild
(bad)
mov
lock
int3
add
pop
mov
lds
dec
inc
pop
out
loop
xchg
repz
out
js
push
in
out
xor
xchg
xchg
fcom
inc
in
cmp
jl
and
es
call
sub
inc
out
es
mov
mov
cwde
adc
rol
fcom
jo
aas
(bad)
repz
push
push
xchg
(bad)
hlt
jb
mov
pop
push
hlt
jno
dec
push
(bad)
lock
jmp
jge
mov
pop
and
cwde
ret
mov
(bad)
aas
push
add
dec
pop
(bad)
sbb
jbe
mov
enter
sub
push
jmp
mov
jo
imul
ins
arpl
call
cwde
jno
icebp
jmp
pop
adc
loopne
dec
xor
push
inc
push
xchg
lods
out
adc
mov
retf
rol
pop
enter
xchg
xchg
sub
loop
adc
shufps
and
mov
add
std
or
aad
lahf
fisub
push
push
ret
call
mov
pop
xor
push
pusha
sbb
nop
dec
pop
add
and
push
gs
xor
call
in
xchg
push
dec
in
mov
push
push
jl
push
fs
xchg
dec
and
push
js
or
loope
test
lods
movs
add
in
fld
push
mov
inc
pop
fdivr
pop
or
fisttp
pop
push
pop
xchg
inc
mov
jecxz
cmp
das
xor
sahf
sub
and
out
mov
inc
lods
test
sbb
ins
pop
(bad)
ror
js
inc
sahf
loop
cmp
add
(bad)
xlat
sbb
cld
loope
scas
das
es
or
mov
lea
stc
cld
push
sbb
lods
pop
into
pop
stos
xor
and
or
adc
push
jle
repnz
push
xor
jae
gs
sbb
jmp
jp
sbb
push
ficom
or
xor
mov
mov
sbb
(bad)
xor
inc
mov
or
pop
mov
pop
aam
jmp
int
push
gs
inc
and
xor
daa
daa
enter
mov
mov
and
outs
jo
jne
(bad)
adc
xor
jb
cmp
icebp
sub
imul
inc
add
push
cmps
sar
pop
mov
fidivr
sbb
(bad)
pop
or
loopne
sub
fs
push
movs
scas
xchg
in
and
sub
lods
ss
push
fistp
div
jb
jno
inc
sub
jecxz
jnp
bound
sub
and
pop
or
outs
cmp
dec
mov
fs
aad
push
mov
jmp
xor
mov
mov
cs
dec
and
pusha
std
mov
cmc
into
bound
outs
pop
test
nop
xchg
jg
jle
cmps
call
xchg
fisubr
imul
in
and
and
outs
cs
pop
(bad)
mov
jmp
mov
lea
add
fwait
dec
push
inc
aaa
test
ret
stos
pop
xchg
imul
es
pop
das
or
xor
test
and
loope
(bad)
xchg
das
cli
push
push
adc
jmp
aaa
movs
or
mov
jne
fcom
mov
in
mov
daa
iret
mov
xlat
dec
lods
mov
in
mov
mov
inc
mov
adc
cmps
xlat
loopne
dec
pop
in
loop
mov
mov
mov
out
adc
imul
test
cmps
or
push
cli
lods
push
in
cmc
or
sti
jmp
lea
pushf
(bad)
pop
or
std
popa
aaa
push
inc
out
sti
inc
sub
arpl
pop
or
arpl
clc
inc
(bad)
loop
lods
mov
jns
gs
pop
xor
mov
mov
jl
in
outs
mul
out
aad
cmps
call
mov
jmp
cmp
lods
ficom
pop
fidiv
aad
inc
and
mov
or
inc
hlt
dec
cld
mov
push
push
in
and
cld
xchg
push
inc
fs
fsub
ds
in
mov
pop
imul
test
aas
pop
retf
test
out
pop
fistp
jecxz
mov
pop
in
pop
or
push
inc
shr
out
add
cmps
mov
fld
sbb
(bad)
cmc
jb
xchg
(bad)
ret
pop
leave
test
add
pop
mov
and
pop
out
fisub
fiadd
idiv
sbb
(bad)
and
push
or
xor
push
xchg
jbe
push
and
aaa
mov
in
inc
enter
fld
or
aaa
movs
fisttp
pusha
mov
dec
nop
hlt
or
pop
ja
shl
pop
push
lods
dec
dec
ins
push
mov
cmp
sbb
ds
scas
lea
lahf
or
fs
sbb
mov
mov
inc
shr
xchg
inc
or
lahf
pusha
xchg
icebp
dec
jl
xchg
fsub
sub
mov
(bad)
rol
pushf
fsubr
sahf
out
loop
movs
test
xchg
mov
popa
jo
imul
scas
movs
dec
scas
and
xchg
retf
or
mov
(bad)
pop
je
xor
je
xor
into
push
cmp
in
dec
sar
mov
dec
sub
cmc
push
mov
cdq
mov
iret
or
aad
dec
fdivr
and
dec
jecxz
mov
test
cmc
(bad)
xchg
xor
dec
mov
pop
ins
xor
xchg
sub
clc
sar
shl
and
ret
gs
inc
mov
clc
stos
sub
pop
loopne
arpl
mov
push
jne
and
add
pop
imul
cmp
mov
jbe
stos
(bad)
mov
cmps
push
mov
inc
test
xchg
repnz
cmp
out
cs
ds
bound
cmp
ss
cmp
inc
push
jb
adc
push
xchg
xor
push
mov
mov
sbb
cmp
fcmovnbe
or
clc
sub
dec
call
xchg
sbb
sbb
sub
(bad)
jmp
test
mov
or
jnp
fidiv
dec
fidiv
mov
dec
sub
cmp
loope
imul
fild
jns
sahf
cmp
sahf
jp
mul
jmp
repz
jo
and
or
jne
sub
retf
daa
sahf
call
jmp
push
add
scas
jbe
mov
cmps
popf
clc
or
sbb
pop
int3
inc
shr
mov
hlt
dec
mov
or
mov
push
xchg
and
fisub
(bad)
shr
neg
fwait
outs
and
dec
jl
sbb
jae
push
movs
inc
inc
je
adc
ficomp
mov
nop
jns
aam
adc
xlat
mov
mov
in
repnz
push
mov
mov
imul
mov
scas
xchg
mov
test
fs
cli
xchg
mov
lds
cmp
fld
addr16
rcr
iret
adc
test
je
rep
lahf
in
cmp
jae
mov
int
add
inc
scas
and
in
jne
jne
cmp
repnz
outs
iret
mov
(bad)
aam
scas
mov
test
inc
test
fs
lods
and
mov
test
and
out
jle
push
push
dec
xor
mov
rcl
retf
es
jb
push
dec
cdq
adc
and
stos
add
mov
and
and
inc
inc
add
sar
mov
add
sub
fwait
and
(bad)
sti
add
add
sbb
mov
dec
mov
mov
aas
mov
(bad)
imul
in
lock
dec
and
ret
and
push
cmp
mov
movs
fstp
dec
out
cmp
pop
cmp
pop
mov
ret
cmps
cmp
xchg
mov
dec
mov
add
mov
and
xlat
gs
push
jo
pop
clc
dec
imul
call
fwait
out
aad
mov
stos
nop
push
cmps
cmp
jae
test
in
cli
ja
bound
sbb
lods
call
xchg
mov
jb
adc
scas
hlt
pop
shl
xor
cmc
dec
sbb
les
cmp
aam
ja
sub
push
adc
cmp
pop
fild
test
fs
mov
out
mov
adc
pop
ror
stos
jbe
(bad)
js
jge
outs
test
sbb
sahf
dec
imul
push
xor
aam
add
cmps
lahf
sbb
jo
add
repnz
adc
mov
xlat
adc
add
or
sbb
sbb
jno
and
adc
dec
ss
inc
jae
fucomip
and
push
or
(bad)
scas
iret
xchg
push
loope
or
cmp
out
je
xor
movs
xor
or
data16
mov
aad
push
(bad)
pop
rcl
cmp
jnp
ins
jb
inc
loopne
jecxz
jbe
jb
ins
call
cmp
dec
sahf
test
and
data16
or
imul
push
ja
pushf
push
dec
xchg
sbb
call
call
pop
and
xchg
fs
inc
pop
enter
xchg
js
or
cmp
lds
xchg
sbb
retf
loopne
sub
ficom
lods
jmp
aaa
sub
rol
int
or
(bad)
clc
jbe
pop
adc
popa
out
xor
shl
pop
sbb
cmp
repz
(bad)
jmp
dec
int3
push
push
hlt
mov
je
and
cld
xchg
push
inc
in
mov
cs
sub
data16
mov
dec
in
push
(bad)
xor
inc
pusha
pushf
pop
(bad)
jg
cdq
dec
jmp
inc
adc
push
pop
(bad)
(bad)
neg
mov
jo
xchg
lods
and
ds
jne
pop
mov
lods
(bad)
(bad)
xchg
daa
jl
mov
lahf
cmps
pushf
add
lds
mov
jns
ds
mov
mov
(bad)
jecxz
jp
adc
sbb
push
dec
add
push
(bad)
xchg
mov
cmp
mov
jo
inc
mov
fs
or
call
mov
jg
arpl
xor
xchg
vcvtpd2dq
fld
inc
retf
push
dec
call
ret
out
dec
xlat
push
imul
mov
int3
push
ror
packuswb
add
xchg
sub
pushf
sbb
ss
into
xchg
icebp
iret
cmps
pop
fs
jb
xchg
mov
std
jg
movs
mov
lahf
mov
int
adc
jns
inc
or
fyl2x
dec
and
jle
push
stos
jb
xor
out
adc
push
pop
pop
arpl
lahf
or
fs
pop
sbb
and
ds
sbb
lods
mov
retf
pop
xchg
mov
fwait
push
mov
and
xchg
mov
cs
jge
std
cmp
mov
or
movs
dec
xlat
mov
mov
push
xchg
xlat
dec
nop
inc
pop
mov
add
push
adc
mov
repnz
sbb
push
pop
cmp
test
lds
xor
jg
and
clc
int3
and
mov
adc
mov
pop
arpl
mov
hlt
mov
and
ja
leave
pop
pop
mov
(bad)
fsub
in
push
mov
aad
pop
shl
in
mov
inc
or
data16
les
hlt
out
daa
jge
call
mov
cmp
sbb
aam
sbb
test
(bad)
and
loop
pop
hlt
movs
aam
lahf
aaa
rcr
jl
out
scas
ret
sub
repz
inc
stos
jg
cmp
cmps
mov
sub
dec
test
(bad)
ror
cli
mov
pop
(bad)
sbb
cmp
(bad)
cmp
sar
xor
not
or
add
xor
push
inc
test
jp
xor
push
xor
jns
call
ficom
in
call
retf
shr
mov
pop
fsubr
cwde
loope
int
pop
int
pop
xchg
lods
les
or
js
rcr
out
inc
xchg
mov
mov
test
(bad)
imul
pop
sub
jnp
sbb
inc
and
sbb
inc
cs
adc
jl
and
aam
sub
repnz
inc
xchg
pushf
movs
and
dec
int
popa
fs
or
pop
xchg
cmp
loopne
inc
jge
fcom
movs
sub
stos
push
adc
inc
or
hlt
test
(bad)
or
std
add
popf
retf
pop
out
cli
aam
dec
mov
push
sbb
pop
fs
out
cmp
ret
mov
retf
mov
mov
sub
adc
nop
dec
inc
call
sub
mov
in
push
add
imul
(bad)
jg
jb
sbb
shl
cmp
repnz
test
push
mov
or
les
or
push
push
repz
mov
test
fcomp
mov
in
test
cmps
(bad)
in
mov
inc
xor
clc
retf
call
sbb
mov
cmp
pop
cmc
jo
out
in
int3
out
dec
call
and
lock
fld
add
cli
adc
lds
aam
or
sbb
mov
adc
sbb
scas
addr16
jb
xchg
xchg
cld
mov
xchg
(bad)
cmp
stos
gs
in
sub
push
push
in
push
push
in
mov
push
les
push
inc
out
xchg
loopne
or
inc
adc
or
xor
or
push
jecxz
mov
ins
sub
adc
push
mov
fisubr
shl
push
xchg
fmulp
or
fidivr
or
(bad)
pusha
inc
ins
cmp
mov
adc
sbb
test
hlt
sbb
push
adc
jno
adc
inc
adc
shl
int3
loop
stos
mov
fistp
sub
mov
jecxz
mov
push
fwait
sbb
add
mov
sub
and
cmp
ret
ret
test
sub
xchg
jl
shl
xchg
pop
dec
jb
inc
aad
xchg
lock
push
inc
(bad)
inc
adc
cmp
push
stos
adc
aaa
dec
pop
mov
mov
sub
inc
sub
es
push
cmc
cwde
xchg
xlat
cmp
fidivr
gs
std
inc
popa
(bad)
fdiv
out
lds
xchg
mov
push
cmp
fst
out
xchg
add
aam
ins
jns
adc
push
addr16
sbb
je
mov
aad
adc
push
pop
dec
ja
add
out
xchg
sbb
ror
movs
xor
into
push
mov
hlt
call
ss
xor
xchg
xor
out
mov
or
mov
into
mov
or
mov
ins
sbb
xor
mov
sbb
dec
add
retf
mov
dec
loope
out
inc
jne
movs
and
jmp
out
pop
repnz
lock
pop
xor
xchg
es
std
inc
add
addr16
aaa
cmp
dec
jbe
mov
sub
js
sbb
and
jg
lock
call
mov
xchg
pop
ss
les
pop
inc
das
jo
sbb
mov
shl
pop
cmp
mov
addr16
test
push
mov
add
nop
sbb
and
jne
test
xor
xor
cmp
dec
stc
cmp
sbb
add
xchg
in
rsqrtps
sub
dec
jmp
imul
ins
js
in
push
mov
xor
in
ins
fisub
inc
add
(bad)
popa
pop
mov
mov
pop
(bad)
adc
pop
xchg
popf
call
mov
fld
retf
pop
ret
sub
out
arpl
cld
les
xchg
(bad)
iret
mov
fwait
mov
adc
ss
jg
cs
ins
das
jmp
cwde
xlat
loopne
sar
std
stos
jbe
rcl
shr
outs
add
lahf
mov
cmp
(bad)
sahf
cld
adc
or
sahf
es
sbb
daa
movs
cs
push
ret
dec
dec
jecxz
push
jne
or
xchg
cwde
aad
or
mov
popf
mov
pop
xchg
dec
mov
clc
jns
enter
ins
push
in
mov
jmp
test
dec
sbb
jmp
test
dec
sbb
jmp
test
jmp
inc
in
ficom
push
pop
stos
push
int3
xor
xchg
pop
sar
inc
stc
mov
inc
icebp
pop
add
or
out
arpl
pop
rcl
inc
and
outs
shl
pop
(bad)
lods
add
fs
add
push
rol
fisub
mov
sar
mov
pop
sar
lahf
jp
js
pop
xlat
mov
addr16
adc
or
lahf
cli
fs
pop
sar
fistp
aam
add
or
aas
jp
pusha
icebp
pop
aad
add
pusha
pusha
rcr
xor
addr16
sub
mov
inc
or
inc
rcl
or
inc
jmp
sar
test
pop
or
add
or
inc
cdq
std
add
or
inc
sar
dec
in
mov
push
je
cmp
or
push
fs
call
in
push
les
push
inc
out
xchg
popa
mov
mov
cmp
add
push
dec
sub
imul
sbb
div
movs
scas
call
ret
jp
(bad)
mov
jmp
cmc
or
pop
outs
or
xchg
ds
dec
inc
or
in
jb
mov
cdq
mov
inc
call
ds
daa
mov
test
jp
pop
push
inc
jno
push
or
mov
inc
mov
add
lock
and
sub
gs
mov
adc
outs
aad
mov
test
cli
repz
movs
adc
pop
loopne
lods
sub
dec
out
pop
add
in
out
aam
sbb
push
out
cmp
pop
dec
jp
xchg
xchg
mov
loopne
iret
(bad)
push
shl
jmp
jae
loope
retf
popa
add
outs
scas
push
leave
add
or
mov
or
sbb
loop
xor
dec
je
lock
gs
xchg
xor
jp
xor
xor
fmul
dec
cmp
sti
jno
jmp
push
lahf
xchg
les
addr16
neg
arpl
movd
cmc
jge
call
ret
sbb
loopne
das
jbe
cmps
pop
lods
out
push
inc
std
lods
push
cmp
xchg
in
nop
jmp
cli
mov
and
sbb
xchg
gs
addr16
pop
mov
bound
mov
mov
rcl
fild
mov
adc
and
es
les
test
out
and
adc
push
adc
cmp
xor
fcomp
sub
mov
jae
nop
das
sub
outs
add
adc
add
push
div
xchg
ins
mov
or
dec
cdq
lea
lea
mov
push
add
out
jmp
movs
cmp
jbe
dec
mov
adc
loope
sub
mov
(bad)
pop
push
adc
data16
dec
call
pop
je
pop
int3
push
add
repnz
and
jmp
mov
test
adc
pop
or
neg
cmps
int3
lds
push
in
ins
fiadd
mov
ss
cld
lods
sbb
das
sti
jo
fs
jns
mov
mov
sub
cld
xor
cmp
imul
sbb
ror
je
addr16
mov
test
adc
(bad)
jmp
jbe
pop
(bad)
mov
scas
push
enter
dec
nop
lahf
push
movs
scas
sbb
out
and
jge
sbb
xchg
sbb
retf
cld
sub
cld
mov
push
ins
in
mov
dec
in
push
dec
gs
push
into
pusha
mov
inc
ins
ss
ret
in
mov
push
inc
cli
stos
push
jne
idiv
xchg
enter
or
(bad)
dec
mov
add
cli
inc
stc
jmp
cs
push
fwait
loope
sub
dec
das
pop
jle
mov
jo
xor
gs
pop
cmp
xchg
ret
fild
mov
cdq
or
mov
popa
in
ins
inc
mov
inc
ins
adc
xchg
jmp
aam
mov
fldenv
ja
pushf
cmps
jmp
jmp
adc
icebp
dec
dec
or
(bad)
sbb
and
add
dec
dec
xor
fmul
rcr
(bad)
bnd
xor
movs
push
(bad)
clc
out
repnz
fwait
push
and
nop
xchg
in
stos
pusha
cwde
out
out
mov
out
sub
dec
lock
mov
and
fisub
pushf
mul
jmp
(bad)
mov
or
test
mov
shl
pushf
adc
pop
mov
push
add
push
cs
pop
nop
and
sbb
cld
ficom
jle
dec
(bad)
stos
jl
jmp
cwde
in
pop
out
imul
data16
enter
bound
hlt
cmp
xor
ret
jmp
inc
stc
mov
dec
sbb
pop
jmp
mov
(bad)
jl
mov
sbb
outs
outs
(bad)
mov
and
jns
mov
mov
lods
jle
(bad)
mov
push
cmc
les
mov
sbb
popf
ins
or
out
ss
lods
or
dec
imul
jne
js
jns
les
sub
add
das
cld
add
jmp
enter
ror
ds
dec
pushf
imul
xor
cwde
das
(bad)
xor
int
sti
mov
dec
lods
mov
and
or
lods
sbb
mov
ins
xor
(bad)
shr
mov
pop
popf
jle
into
pop
inc
pop
es
shl
cmovno
test
adc
cdq
retf
pushf
jmp
call
jmp
aam
dec
xor
jl
fwait
in
pop
call
imul
adc
not
sub
pop
es
ins
ret
fbstp
dec
inc
add
mov
xor
inc
ins
leave
loope
mov
mov
pop
jno
add
imul
mov
mov
call
test
in
out
push
test
push
xor
push
lods
es
dec
jecxz
imul
push
and
mov
jb
inc
or
icebp
add
stos
std
jno
div
pusha
ret
fild
ja
pop
gs
popf
push
xor
bound
xchg
xchg
mov
xchg
pusha
mov
jns
jne
and
push
(bad)
or
sti
dec
mov
rol
adc
or
call
mov
ret
mov
jnp
in
pop
and
and
adc
call
sbb
cli
stos
je
push
mov
push
jmp
mov
jg
push
sbb
in
mov
mov
pop
sub
adc
stos
xchg
pop
cld
xchg
mov
inc
mov
dec
pop
dec
popf
or
push
retf
add
jg
pushf
cdq
jbe
std
add
loope
cmps
outs
call
cmp
push
loop
mov
pop
fcomp
sub
in
test
out
or
sbb
enter
or
mov
(bad)
jge
xor
xchg
in
ror
inc
psubq
or
jnp
stos
cmc
cli
xor
outs
xchg
xchg
out
mov
pop
lock
push
enter
push
jg
dec
cmp
push
jle
cwde
js
in
add
cmp
mov
mov
mov
ins
les
ins
in
mov
pop
lds
or
loopne
or
aad
stos
sbb
jmp
sbb
lock
out
rsqrtps
mov
push
adc
xor
jp
mov
jmp
add
mov
push
push
movs
shr
retf
and
ret
shl
mov
adc
in
xchg
fwait
inc
and
cli
sub
fstp
push
cmp
retf
or
mov
sub
cs
int
movs
add
retf
cmp
int
mov
push
push
in
stos
push
dec
in
push
dec
fs
push
into
in
mov
iret
popa
mov
inc
jmp
inc
adc
push
int
mov
jge
mov
jno
shr
mov
sbb
rcl
cmc
mov
clc
lea
mov
push
fiadd
imul
adc
sub
dec
adc
pop
push
sub
stc
and
xchg
addr16
(bad)
scas
mov
int3
mov
jb
das
pop
sbb
gs
js
ins
iret
aaa
cmp
xchg
(bad)
fldcw
stos
movs
and
dec
mov
or
in
add
call
mov
cmovns
in
dec
daa
hlt
pop
pushf
cdq
sahf
(bad)
sub
xor
or
and
stos
sub
(bad)
outs
pushf
mov
cmps
repnz
pop
mov
test
lea
ss
in
push
lea
add
out
out
jmp
jnp
push
in
pop
inc
repnz
sbb
jnp
xchg
jmp
mov
push
mul
push
ficomp
(bad)
pop
xor
sbb
pusha
xor
nop
jns
pop
test
sub
dec
mov
mov
pop
loopne
jg
and
pusha
mov
clc
jno
ds
dec
cmp
(bad)
dec
or
das
icebp
sahf
imul
xor
les
mov
ja
leave
stc
or
xor
mov
leave
outs
dec
and
and
push
ja
or
sahf
xchg
push
dec
sti
lahf
cwde
(bad)
xor
sbb
rcr
ret
add
stos
call
push
dec
fmul
cs
lods
rcr
fld
inc
and
add
loop
dec
imul
into
outs
loop
pushf
mov
dec
inc
mov
int3
push
fidiv
inc
mov
dec
fwait
inc
or
xor
push
mov
dec
imul
push
jbe
xor
jg
push
fild
mov
in
cmp
dec
pop
mov
int
mov
push
repnz
outs
add
jbe
repz
(bad)
cmp
stc
add
xlat
repnz
ret
pop
aaa
cs
jmp
mov
outs
sub
pop
and
inc
and
rcl
popf
xchg
push
cs
pop
popf
ins
adc
(bad)
jecxz
test
or
fbstp
out
in
loope
enter
jnp
add
sbb
pushf
xor
je
mov
xor
mov
das
iret
add
or
sar
pop
retf
ss
cli
das
dec
or
cli
int
mov
dec
sub
and
pop
xchg
adc
cmp
xor
sub
dec
dec
xor
pop
(bad)
clc
das
jle
cmp
cwde
mov
fcom
ja
mov
out
mov
(bad)
ror
rcl
mov
(bad)
in
dec
sub
out
xor
sbb
scas
sub
cs
stos
jmp
push
jp
add
cmp
inc
scas
call
adc
jmp
dec
aas
movs
sar
add
or
push
(bad)
mov
(bad)
test
cwde
push
cmp
pop
sub
scas
outs
cmp
retf
scas
jg
(bad)
imul
sub
mov
xchg
or
push
in
lahf
pop
daa
cmp
(bad)
sbb
call
mov
or
or
mov
and
mov
mov
sbb
imul
test
add
sub
mov
and
popf
jge
cmp
mov
ficom
ins
in
outs
loopne
lahf
xchg
mov
pop
int
mov
adc
scas
ja
mov
sub
pushf
xor
retf
sbb
adc
push
or
jle
sbb
add
dec
inc
push
into
jl
push
add
xchg
xchg
inc
test
xor
add
mov
es
sbb
int3
js
and
xor
out
test
jmp
sbb
xchg
or
dec
movs
push
inc
push
xchg
push
test
in
xchg
jo
out
in
dec
icebp
mov
test
mov
clc
jmp
mov
or
jo
push
jo
sti
aam
movs
mov
xchg
(bad)
fnstcw
sub
jmp
mov
adc
mov
das
movs
cld
fadd
int3
clc
jp
dec
imul
mov
outs
in
mov
sbb
lods
jnp
mov
sahf
addr16
aas
cmp
movs
mov
rcr
lock
call
xchg
rol
mov
jecxz
dec
mov
push
pop
mov
rol
neg
jecxz
popa
jo
outs
fs
cmp
xor
mov
in
mov
mov
adc
fnstcw
pop
jecxz
push
pop
mov
mov
dec
push
add
cmp
cmps
jp
jle
cmp
out
mov
adc
push
dec
out
std
or
hlt
bound
pop
hlt
mov
push
ins
lods
mov
cs
aam
es
xchg
pop
sub
mov
pushf
fisubr
pushf
loop
and
sub
int3
inc
cmp
xor
adc
dec
jp
in
sub
ins
movs
mov
fs
xchg
cs
xchg
es
rcl
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
pop
cmp
test
push
fs
push
les
push
dec
in
inc
sub
push
inc
in
mov
push
dec
les
push
push
retf
mov
in
inc
inc
hlt
mov
push
dec
in
mov
dec
in
mov
push
jl
call
ins
push
pop
in
mov
dec
inc
mov
mov
push
push
icebp
xor
adc
mov
adc
std
call
mov
add
cmp
fst
jb
dec
loopne
leave
div
ffreep
jp
jmp
out
imul
pop
push
imul
push
cmp
or
les
or
repnz
fsub
movs
cmps
jmp
sub
pop
pushf
inc
sar
xor
clc
fnstcw
adc
xchg
dec
jecxz
clc
test
pop
movs
add
jo
mov
mov
add
push
xor
mov
and
ja
mov
xchg
ja
inc
pop
outs
stos
je
adc
push
and
pop
sbb
(bad)
loopne
inc
or
mov
push
ins
adc
jo
push
mov
push
sbb
fld
test
enter
or
retf
loop
dec
xchg
icebp
pop
shr
dec
sbb
(bad)
and
xor
adc
nop
ror
nop
sbb
sbb
push
add
jae
jmp
out
sti
push
dec
mov
or
inc
add
add
adc
or
retf
add
dec
add
out
inc
movs
xchg
jo
jae
cmp
imul
xor
test
jns
xor
jle
xor
inc
push
inc
and
call
adc
test
mov
push
cmp
cmp
mov
daa
add
sub
aad
push
mov
jmp
test
push
in
xor
shr
ds
dec
sbb
out
cdq
mov
in
out
sub
(bad)
jle
out
mov
int
in
mov
push
dec
in
mov
push
dec
pop
mov
push
dec
lods
dec
imul
xchg
outs
jns
xchg
std
adc
in
stos
inc
dec
xor
pcmpgtb
mov
ja
pop
ret
xor
ret
loop
sbb
jmp
fbld
outs
push
xchg
ds
pop
shl
sub
fwait
xchg
mov
cmp
push
ror
or
push
jle
dec
cmp
xlat
popa
sub
rcr
jecxz
and
mov
icebp
retf
pop
add
mov
xor
aas
and
pushf
adc
cmp
xor
scas
sti
sbb
lods
scas
outs
add
mov
scas
cmp
inc
mov
fst
dec
xor
ds
ficom
and
cmp
xchg
js
scas
fldcw
xchg
pop
pop
(bad)
cli
mov
jno
ss
test
push
mul
xor
(bad)
leave
pop
imul
push
es
xchg
fdivr
stos
loope
fisttp
ret
jnp
cmp
(bad)
add
sbb
sub
xchg
pop
fmul
or
pop
mov
(bad)
jmp
fwait
aam
sbb
es
push
aad
sub
pop
repz
dec
mov
or
and
inc
dec
outs
dec
hlt
dec
aas
loopne
pop
sbb
dec
in
dec
mov
or
jecxz
imul
sub
jecxz
mov
sbb
pop
cli
sub
adc
daa
and
in
out
push
jmp
adc
mov
movs
mov
les
cs
in
mov
dec
les
push
ins
inc
mov
push
int
or
mov
mov
inc
cld
mov
push
dec
xchg
ret
sahf
xor
mov
or
dec
pop
add
pop
pop
jnp
dec
push
xchg
test
shr
repz
mov
cmp
sbb
shl
and
dec
out
cmp
shl
int
sbb
int3
mov
cli
xchg
and
sahf
sub
aad
xor
std
clc
push
out
inc
(bad)
push
(bad)
inc
cli
mov
or
jmp
cmp
pop
pushf
in
popf
xchg
xchg
mov
xor
cmps
sub
adc
push
lock
in
call
adc
ins
or
xor
aaa
in
sar
lods
sbb
aad
daa
mov
inc
xor
out
mov
push
mov
jle
jno
or
and
xchg
mov
sahf
(bad)
and
xchg
add
push
dec
cs
push
pusha
enter
add
fs
jl
and
movs
nop
in
mov
inc
xchg
loop
sbb
inc
(bad)
xchg
add
sub
push
mov
rcr
scas
in
mov
int
lds
je
in
add
push
jnp
dec
aad
sti
mov
and
jns
and
inc
xchg
ins
xchg
popa
test
mul
out
stos
add
mov
pusha
hlt
sub
(bad)
cmp
(bad)
mov
sbb
cdq
shl
sbb
jp
into
int
dec
addr16
xor
xor
pusha
xchg
mov
add
in
fyl2xp1
fild
push
dec
out
inc
rcr
imul
mov
int
cmp
gs
jecxz
xlat
jl
cmps
shr
sahf
ret
cdq
add
pop
xchg
dec
mov
dec
movs
mov
mov
jp
sub
not
adc
int
mov
fdivr
cmc
push
and
(bad)
jbe
pop
inc
in
sahf
fdivr
cmc
jne
sub
pop
mov
inc
in
cdq
fdivr
cmc
push
and
(bad)
jbe
pop
inc
in
sahf
fdivr
cmc
adc
mov
dec
sub
pop
and
lock
movs
push
leave
pop
pop
jmp
pop
lods
(bad)
out
mov
push
jl
sbb
loopne
dec
mov
mov
dec
je
lods
push
loop
arpl
xchg
jle
jg
add
lock
loopne
dec
sub
pop
and
lock
movs
push
iret
pop
jnp
cs
xchg
call
xchg
sar
xor
pop
cmp
js
and
imul
inc
adc
lds
sbb
xchg
and
fmul
sub
inc
ret
mov
sub
and
in
add
ss
dec
mov
mov
mov
movs
push
pop
fstp
cs
xchg
in
lods
call
dec
and
(bad)
das
xchg
sahf
add
scas
clc
fcomp
jge
cwde
pop
dec
fdiv
aaa
jno
bound
cmp
daa
mov
pop
xchg
iret
mov
adc
mov
push
scas
rol
loopne
mov
loop
push
cmp
push
icebp
ror
mov
in
cli
js
adc
pop
retf
dec
cmp
(bad)
xchg
inc
and
arpl
adc
adc
sbb
aaa
adc
mov
or
cs
sbb
std
xchg
imul
add
jbe
push
dec
add
movs
fistp
mov
das
mov
sbb
dec
push
loope
sub
adc
repz
cdq
icebp
pop
add
jmp
pop
mov
mov
pop
jmp
mov
loopne
sahf
push
mov
retf
movs
jp
aas
mov
arpl
das
cmps
pop
test
call
mov
sub
push
xchg
cld
mov
or
xor
jne
scas
cmps
mov
leave
popf
mov
movs
push
cmp
jg
aaa
dec
sti
fiadd
add
jmp
mov
enter
in
add
xchg
mov
fwait
clc
dec
or
fidivr
push
sbb
add
nop
outs
dec
jl
adc
xlat
and
add
inc
sub
push
add
mov
push
in
stos
push
dec
cld
mov
inc
fdivr
push
lds
fsub
and
out
call
xor
pop
adc
lea
push
inc
inc
mov
(bad)
cs
dec
add
jg
stc
outs
lods
and
leave
jle
test
pusha
mov
sbb
xor
test
icebp
cmp
mov
std
sub
neg
popf
cmp
mov
sub
cmp
int
fcomp
imul
imul
arpl
dec
xor
mov
clc
jno
jbe
dec
and
test
pop
je
in
push
sbb
out
stc
push
test
dec
aaa
cmp
stc
pop
out
sahf
jb
cmp
cmc
sbb
add
mov
vpmadcswd
das
dec
sahf
addr16
push
add
cli
jnp
inc
test
test
mov
sub
jp
inc
cmps
(bad)
out
pusha
adc
push
xor
pop
or
shr
int3
cs
bound
sub
out
pop
dec
jnp
mov
pop
loop
cmps
les
out
test
push
sub
ins
ficom
push
retf
int3
pop
push
push
mov
call
xchg
jge
push
and
sub
cwde
and
xlat
sub
popa
pop
mov
dec
inc
mov
fisttp
jno
lds
add
cmc
pop
sbb
je
cmp
jbe
sbb
lock
mov
cmp
dec
ja
jne
sbb
rol
adc
jbe
adc
add
sbb
xchg
sbb
fs
xlat
lods
ins
aam
jno
retf
or
lahf
addr16
mov
mov
loop
aaa
push
(bad)
mov
push
xchg
pop
xchg
(bad)
icebp
in
into
sti
jmp
cs
or
in
sbb
jge
stos
mov
dec
mov
mov
mov
xor
dec
imul
jecxz
xchg
mov
push
add
pushf
xchg
push
sub
out
add
clc
imul
xchg
fmul
ja
pusha
test
push
jo
scas
fst
jb
dec
in
shl
std
jne
pop
jbe
repz
pop
es
ds
dec
mov
ins
test
test
cdq
das
and
or
mov
push
aam
mov
xchg
nop
das
lods
cmc
(bad)
leave
pop
cmc
jne
test
neg
ins
sub
lock
inc
out
repnz
into
or
inc
punpcklbw
xchg
aas
fcmovnu
inc
lock
(bad)
dec
in
shl
ja
jnp
stc
pop
cld
int3
hlt
pop
and
movs
pop
adc
mov
je
pop
fldenv
mov
jno
mov
mov
aas
fisttp
retf
mov
es
ret
ja
fwait
into
mov
gs
cmp
adc
dec
call
enter
int
das
movs
mov
sbb
inc
xchg
add
cmp
jo
outs
icebp
jle
(bad)
stc
dec
push
js
call
imul
sti
sahf
push
std
mov
out
enter
test
push
pushf
scas
jae
outs
add
fisttp
das
push
xchg
jnp
pop
pushf
mov
add
mul
sub
xlat
iret
aam
push
je
sbb
imul
rcr
inc
push
cmp
push
cmps
repz
std
(bad)
iret
loope
mov
es
inc
pushf
daa
enter
inc
or
jnp
aas
cmp
jo
sub
das
rcl
lea
adc
dec
adc
xlat
shr
adc
pop
ins
jp
jns
jge
jo
add
and
(bad)
out
les
addr16
cmp
pop
pop
and
fidivr
push
sar
fwait
jb
movs
ret
imul
jo
sub
das
rcl
lea
adc
dec
adc
xlat
shr
adc
pop
ins
jp
jns
jge
jo
add
and
(bad)
out
les
addr16
cmp
mov
and
(bad)
push
mov
out
stc
or
jmp
pop
pop
mov
dec
and
ret
and
jecxz
fimul
pop
push
xor
xchg
pop
outs
daa
dec
mov
daa
or
sub
adc
(bad)
adc
and
inc
or
and
xor
jmp
add
sub
test
sbb
(bad)
push
gs
fidivr
sub
fadd
(bad)
in
jp
mov
lahf
xchg
and
call
pop
(bad)
cmc
into
sti
jns
cmp
inc
test
push
add
jecxz
push
push
adc
(bad)
movs
mov
test
mov
pop
push
xor
xchg
pop
outs
daa
dec
mov
daa
or
enter
bound
sahf
add
dec
adc
inc
and
jae
hlt
jno
inc
sub
push
mov
xor
lea
lods
pop
es
add
cdq
sbb
jl
mov
lods
test
push
dec
add
and
xor
lds
or
scas
push
inc
nop
push
out
push
imul
jmp
mov
repnz
js
ins
push
ds
sbb
ret
sti
pop
jbe
inc
jecxz
mov
dec
adc
cmp
fmulp
mov
xor
sub
adc
(bad)
not
push
cmp
rcl
adc
(bad)
mov
loope
pop
in
xor
fbld
test
add
jg
movntq
sar
inc
gs
xor
xor
or
lods
data16
rol
sbb
dec
in
movs
inc
inc
ds
je
movs
cwde
enter
add
mov
xor
pop
popf
pop
mov
inc
push
mov
movs
fistp
xchg
lods
pop
mov
jmp
inc
(bad)
jle
(bad)
cmp
fdivr
or
or
loop
pop
mov
sub
push
jne
pop
ret
inc
xchg
or
sub
pop
jmp
test
push
jle
mov
mov
repnz
js
ins
push
ds
sbb
xor
mov
xor
repz
push
jne
cld
push
mov
sbb
jmp
sahf
ja
inc
int3
repnz
add
push
mov
and
adc
sbb
add
sbb
mov
out
clc
sub
pop
stc
movs
cmp
xchg
push
stos
gs
addr16
cmps
paddw
or
push
cmp
push
mov
xor
pop
aaa
sbb
(bad)
push
cld
mov
push
inc
in
stos
push
dec
hlt
mov
push
int3
gs
in
pushf
in
imul
into
jmp
pop
movs
cli
push
inc
(bad)
mov
push
mov
mov
sbb
scas
cmc
out
aas
xor
jo
push
add
in
js
test
xor
jl
cwde
popf
iret
(bad)
jg
push
xor
inc
icebp
push
and
popf
push
loopne
sbb
in
push
arpl
dec
in
mov
cmps
adc
mov
retf
call
fcom
push
lea
pop
sahf
adc
mov
dec
test
daa
push
mov
xlat
pop
jp
test
fild
sub
mov
loop
xor
cmc
das
and
cdq
sbb
lods
sub
movs
cwde
or
cmps
in
cmps
rcl
jg
out
mov
push
or
push
cmp
ds
sub
mov
clts
mov
(bad)
cdq
push
mov
mov
add
pop
les
push
arpl
jl
sbb
xchg
cdq
xchg
mov
sar
out
push
inc
(bad)
leave
mov
pop
stos
data16
dec
pop
jae
(bad)
iret
xlat
dec
pop
jbe
dec
stc
or
mov
into
dec
mov
cmp
mov
pop
sub
add
mov
cli
adc
(bad)
cdq
ds
shl
jno
jae
(bad)
iret
or
mov
fcmovu
pusha
push
lods
mov
or
adc
jg
mov
pop
mov
xchg
outs
push
lock
in
push
jnp
mov
sub
shr
inc
outs
das
add
sbb
out
jbe
lock
pushf
call
jns
and
pushf
mov
ja
sub
cmp
movs
sbb
dec
out
(bad)
fisttp
repnz
jae
xor
cmp
pop
in
imul
sbb
out
cwde
cld
in
in
bound
push
mov
jecxz
xchg
jnp
mov
xchg
jo
pusha
in
push
pop
push
fisub
test
repnz
jg
lds
cwde
fidivr
mov
aas
lahf
nop
adc
sub
lds
pushf
fidivr
mov
xchg
mov
sar
or
(bad)
addr16
fdivr
test
xor
(bad)
addr16
fdivr
test
xor
adc
mov
adc
xchg
xor
cld
ret
push
ins
ds
sub
pminsw
mov
aad
fcmove
sti
mov
dec
sbb
xor
cs
mov
adc
xchg
xor
cld
ret
push
ins
ds
sub
pminsw
mov
mov
lods
add
mov
lods
add
das
add
(bad)
shl
cmc
add
add
cmp
mov
and
pop
pop
mov
mov
sbb
mov
std
gs
fild
xor
das
shl
inc
mov
add
aam
jle
aam
jbe
aam
jne
aam
jne
aam
jne
frstor
lds
xchg
cmp
psllw
scas
xor
ds
aas
scas
jp
cmp
sbb
xor
stos
sahf
push
rcr
mov
adc
sahf
jne
repnz
fsubp
ins
dec
sbb
sub
std
stos
fs
dec
adc
push
daa
and
mov
jae
addr16
js
xchg
mov
xor
fwait
in
push
push
sbb
jnp
pop
lahf
add
pop
call
xlat
sbb
cmps
xor
int
jg
xor
xchg
or
cs
adc
sub
dec
addr16
mov
ins
ret
fwait
dec
push
jmp
jmp
jl
pop
adc
cmp
data16
mov
mov
stos
cli
ret
xlat
cmps
jmp
jle
retf
popf
cmp
mov
sbb
aad
(bad)
in
outs
push
pop
sar
outs
mov
neg
add
fcom
cmc
mov
repnz
sbb
mov
mov
lds
lea
sbb
fwait
(bad)
iret
sub
add
imul
push
lock
int3
mov
cld
jnp
jecxz
je
pop
mov
adc
and
les
inc
scas
inc
jns
and
test
daa
mov
jne
xor
xchg
sti
rol
mov
mov
xchg
mov
ret
fisttp
xchg
add
mov
cld
inc
sub
push
add
stos
cs
in
mov
dec
hlt
mov
inc
fs
cs
in
xchg
in
cli
sub
(bad)
loope
xchg
fnstenv
adc
pop
imul
add
out
sbb
outs
lods
ds
fadd
dec
mov
push
int3
fiadd
call
cwde
pop
dec
jl
push
add
scas
ror
popf
loopne
xlat
pop
xchg
call
push
jb
repnz
sbb
sub
xor
mov
sub
jp
ds
xor
xchg
outs
call
jne
add
jnp
popf
lock
xor
movs
inc
sbb
test
and
sbb
push
call
xlat
add
mov
rep
neg
and
rep
and
jmp
adc
ins
ret
push
call
inc
jg
sub
fcmovu
cmp
pop
test
fcom
arpl
gs
adc
fsub
out
jne
retf
jb
adc
aad
pop
sbb
imul
clc
inc
ret
jns
aad
push
mov
pop
pop
inc
xchg
add
mov
push
jbe
xchg
mov
push
cmp
cmp
aaa
dec
addr16
rol
lods
xchg
test
dec
clc
add
and
cld
es
push
mov
lods
cli
les
dec
push
mov
cmc
test
pop
shl
je
test
loope
dec
xchg
push
aad
add
lock
loope
lods
aas
add
sub
inc
mov
and
jne
mov
es
jmp
pusha
pop
xchg
nop
sysret
sub
mov
adc
inc
dec
xor
shl
(bad)
hlt
mov
pop
aaa
jo
inc
ja
dec
sub
mov
sahf
fidiv
push
sbb
push
cmps
scas
clc
aam
pop
sti
iret
aaa
div
lea
or
pop
push
lea
sub
adc
fbstp
das
inc
mov
pop
inc
mov
push
or
fild
addr16
add
mov
ret
mov
in
mov
pop
push
push
retf
nop
fisubr
in
sahf
ficom
pop
jl
repz
fisttp
adc
push
mov
imul
adc
mov
scas
loopne
pop
xlat
pop
ror
and
xchg
xchg
(bad)
push
add
or
cmps
and
repz
dec
test
dec
scas
jae
hlt
xchg
aam
gs
fdiv
jp
das
sbb
ja
(bad)
pop
shr
or
mov
xor
enter
pop
mov
xchg
jae
lock
xchg
(bad)
jecxz
out
xchg
pusha
mov
in
test
lods
fcmovnu
inc
inc
cmp
jno
sub
jle
call
les
inc
or
not
loope
push
sar
mov
fisttp
addr16
xor
call
(bad)
cli
pushf
popa
cmp
imul
inc
add
out
inc
mov
inc
imul
pop
push
xchg
outs
loopne
cmp
lock
jl
fdiv
gs
lods
xor
sti
push
mov
mov
lods
inc
retf
xor
push
fs
cmp
lock
cmps
(bad)
add
push
loope
aam
cmp
push
mov
add
sahf
mov
mov
(bad)
adc
mov
pop
imul
mov
fwait
pop
rcr
ins
mov
mov
repnz
retf
xchg
imul
push
pusha
std
adc
adc
(bad)
dec
(bad)
and
lahf
sub
call
or
gs
addr16
(bad)
call
scas
pop
mov
push
mov
mov
add
jg
push
mov
rol
jmp
(bad)
out
dec
pushf
das
dec
mov
jmp
and
(bad)
and
int
adc
or
mov
xchg
jns
sti
jbe
outs
cdq
dec
mov
daa
fnstenv
in
cmp
retf
rcl
and
xchg
add
inc
ins
clc
movs
mov
mov
int3
in
mov
xchg
xchg
(bad)
mov
xor
xchg
add
push
sub
int
sar
sbb
ret
push
mov
fbld
pop
xchg
cmp
bound
ds
in
inc
outs
jnp
pop
gs
in
cmp
repnz
(bad)
gs
jge
cwde
and
jnp
add
mov
loop
push
popa
(bad)
pop
leave
scas
cdq
add
mov
cmp
sti
xor
(bad)
fst
lahf
cs
call
mov
fsub
fisttp
mov
test
or
add
xchg
rcr
push
xor
faddp
faddp
sub
cmps
mov
jb
mov
and
pop
and
dec
jns
fwait
les
xchg
add
add
(bad)
fst
lahf
cs
call
mov
fsub
fisttp
mov
test
or
add
xchg
rcr
push
xor
fiadd
ret
movs
mov
sbb
test
xor
push
pop
mov
sbb
(bad)
and
ds
cld
leave
xlat
dec
stc
pop
lahf
inc
loop
cli
rcr
daa
jp
lock
sti
xlat
or
mov
cmp
lods
dec
sbb
jb
clc
inc
xchg
das
jns
hlt
idiv
outs
ins
lock
mov
pop
aad
xchg
sahf
(bad)
cmps
and
popa
ds
js
inc
test
es
imul
loope
mov
fild
test
mov
pop
jne
fmul
jns
jne
out
(bad)
push
xor
adc
jbe
int
iret
gs
mov
addr16
pushf
shl
packssdw
sbb
es
(bad)
sub
pop
test
sbb
xor
addr16
push
and
push
add
ds
gs
jne
mov
mov
in
lods
adc
pop
pop
mov
mov
icebp
pop
xchg
shr
test
cdq
mov
xchg
pop
jo
mov
pop
cs
dec
in
inc
add
pop
xchg
int
je
mov
movs
dec
mov
or
pop
inc
push
loopne
cmp
jmp
mov
push
ds
sbb
ret
pop
push
and
stos
mov
mov
xchg
push
hlt
xchg
xchg
inc
dec
push
(bad)
sar
jle
mov
mov
dec
add
dec
fistp
cmp
cli
xchg
sbb
xchg
adc
push
xchg
rcr
push
ds
lea
mov
cmps
and
jb
push
jbe
push
mov
aad
outs
push
push
jb
pop
xchg
sbb
cwde
xor
cmp
fisttp
or
xchg
cmp
and
mov
mov
sbb
sub
mov
adc
inc
dec
sub
add
jns
sbb
retf
dec
pop
or
lock
xor
lahf
pop
imul
bound
add
loopne
or
int
ret
mov
push
into
dec
std
cmc
loopne
sbb
inc
sbb
add
imul
idiv
out
and
mov
aas
inc
hlt
js
pop
pop
ret
enter
cmp
(bad)
fistp
nop
fst
das
dec
mov
adc
pop
inc
clc
fidivr
sub
cmp
dec
mov
mov
add
adc
pop
and
out
sahf
and
les
cmps
test
or
stos
jmp
fdiv
pop
mov
dec
test
stc
xlat
call
push
int3
mov
test
pop
jge
(bad)
mov
(bad)
jns
cmp
mov
or
and
lea
jg
xchg
(bad)
out
daa
into
jb
dec
jns
mov
xchg
rcr
xchg
mov
jl
mov
stc
fstp
sub
rcl
xchg
mov
rcl
std
loopne
cmc
mov
sub
lahf
addr16
(bad)
mov
lods
je
mov
(bad)
jbe
lahf
jmp
or
sbb
add
mov
sbb
jbe
fadd
mov
xchg
and
pop
or
loope
out
jbe
mov
push
xchg
cwde
push
cmp
dec
outs
dec
jle
daa
sub
movs
divps
clc
ror
cld
dec
xchg
dec
mov
add
adc
(bad)
mov
fisub
jmp
ds
push
movs
cli
loope
test
dec
imul
test
jl
stos
cs
in
mov
push
inc
gs
push
inc
push
add
mov
int
mov
dec
in
add
push
inc
fs
leave
aam
daa
pop
sbb
cmps
jb
mov
retf
adc
ret
call
push
test
imul
adc
jmp
sub
push
jmp
jb
cmc
add
jmp
jmp
mov
cli
je
cwde
pop
jne
gs
pop
sbb
idiv
pop
dec
jb
fsubr
int
cmp
sbb
jp
mov
fistp
(bad)
loopne
mov
cmp
(bad)
mov
jne
jmp
in
push
dec
cmp
(bad)
adc
fwait
fs
ja
or
jge
inc
int
jmp
add
ins
xor
mov
mov
ss
fnstsw
or
sub
sub
lds
xor
outs
loop
inc
outs
mov
xor
push
sub
nop
or
loope
pop
cmp
mov
test
push
and
in
sub
sbb
lahf
aas
dec
cmp
aaa
pop
icebp
or
add
cld
jbe
xchg
out
mov
sub
inc
cmps
hlt
push
add
xchg
js
cmp
pop
fidivr
jg
and
lods
sub
out
mov
in
xor
and
retf
and
inc
mov
out
out
pusha
pop
jne
std
sub
adc
gs
call
add
mov
sti
clc
sub
daa
idiv
aaa
xchg
aam
inc
aad
mov
pmaxub
mov
daa
xchg
leave
sub
add
out
sub
pop
stos
push
mov
mov
sub
les
dec
(bad)
fnstsw
adc
dec
push
push
push
jg
neg
imul
sub
mov
lods
out
add
mov
stos
addr16
je
push
cmps
jbe
hlt
outs
rcr
or
xchg
mov
test
mov
push
push
add
fst
aam
cmp
mov
daa
popf
sbb
add
jmp
pop
(bad)
loopne
add
or
mov
lds
mov
mov
aad
dec
outs
lea
scas
test
mov
mov
pop
(bad)
stos
popa
test
pusha
inc
loope
cmp
push
jge
(bad)
xchg
cwde
pop
sub
loopne
fidiv
sub
fdiv
loopne
stos
mov
retf
sbb
mov
and
or
mov
jnp
mov
test
xchg
out
fcom
scas
mov
mov
lods
cli
inc
out
mov
gs
xor
dec
repz
loopne
and
pop
xlat
jnp
mov
test
into
test
pop
fwait
cdq
dec
mov
icebp
ins
cmc
pop
dec
sub
rcr
cmp
cmp
cs
ds
frstor
rol
and
pushf
cdq
sub
cld
adc
mov
push
or
xchg
dec
dec
rcr
das
mov
jp
je
push
inc
jp
xchg
cmp
cwde
pusha
cmp
nop
xor
xor
and
das
retf
data16
jmp
dec
dec
in
and
dec
jb
xchg
cdq
cld
fiadd
rcr
and
pop
adc
int
inc
mov
popf
sub
pop
xlat
je
js
sub
mov
mov
inc
adc
fwait
mov
add
pop
mov
mov
dec
push
call
sbb
sub
pop
pop
jnp
mov
lahf
ds
rcr
ret
mov
retf
push
pop
sub
popa
cmps
scas
stos
inc
das
adc
dec
add
jle
dec
rol
mov
ins
mov
iret
push
scas
jl
adc
int3
xchg
jns
adc
stc
and
mov
mov
loop
pop
(bad)
stos
inc
js
cmp
aas
into
dec
in
data16
jmp
sub
fs
jmp
sbb
add
pop
and
cmp
adc
cmp
popa
loopne
lods
das
cmp
mov
ss
in
jnp
pop
fild
inc
out
pop
mov
out
push
xchg
mov
pop
mov
(bad)
call
fcom
and
leave
mov
push
mov
xor
retf
sub
aas
pop
inc
pop
loop
arpl
(bad)
jae
mov
iret
add
sbb
jo
mov
rol
out
int3
loopne
jo
mov
add
fnstsw
adc
jne
cld
jb
and
sub
dec
shl
mov
cwde
sub
js
or
fidivr
je
pop
add
in
fsub
pushf
sub
test
mov
dec
jo
push
mov
jae
(bad)
push
dec
shr
lock
mov
repnz
jge
or
ss
adc
pop
cs
sbb
in
pop
xor
adc
and
mov
dec
cld
inc
(bad)
push
dec
xchg
mov
mov
mov
sub
retf
cmc
sub
lds
mov
pushf
sahf
sbb
imul
sub
lahf
aaa
push
out
imul
ficomp
int3
pushf
adc
push
sub
mov
mov
xchg
add
pushf
mov
adc
sub
adc
test
mov
test
test
test
test
test
test
test
imul
mov
sub
adc
lahf
dec
les
or
pushf
xchg
out
mov
outs
cmp
dec
movs
cwde
mov
repnz
push
jnp
mov
inc
loopne
call
movs
into
push
pop
mov
in
(bad)
jge
xchg
out
inc
fist
or
gs
pop
or
call
in
mov
inc
in
mov
dec
in
push
(bad)
loopne
push
inc
loopne
pop
(bad)
popa
xor
inc
push
mov
jmp
push
pop
cli
push
int
mov
es
call
adc
leave
inc
hlt
ret
xchg
cmp
dec
sbb
call
sti
scas
xor
ds
mov
outs
mov
cdq
rcr
mov
inc
iret
stos
ds
push
add
clc
push
out
push
mov
sub
ret
and
pop
mov
stos
mov
inc
int3
pop
jne
jno
jg
xlat
adc
sbb
xchg
mov
call
movs
ficomp
or
xor
xor
mov
add
sahf
sti
push
sar
pop
xor
pop
sbb
fs
clc
push
push
or
lahf
jge
aaa
dec
pusha
lods
add
jp
aaa
mov
mov
sbb
out
jl
xor
lock
mov
lods
pop
dec
popf
retf
xor
jnp
push
repz
je
mov
dec
cmps
push
adc
(bad)
out
lea
gs
push
push
push
xor
inc
movs
mov
dec
inc
mov
dec
dec
movs
mov
test
and
jl
fld
sub
sub
in
dec
retf
aaa
test
(bad)
or
xor
push
out
xchg
jle
adc
mov
mov
jb
sub
mov
cld
pop
mov
js
mov
hlt
test
or
sbb
lock
inc
mov
dec
dec
dec
mov
cdq
push
jle
test
xor
sbb
push
leave
sub
xchg
cmp
stc
shr
mov
mov
in
push
mov
or
inc
in
and
sbb
lods
adc
int
pop
cmc
aas
pop
pop
gs
int3
sbb
stos
cmp
aam
pop
out
jmp
sub
mov
push
cmp
imul
fnstsw
sub
in
clc
mov
push
mov
jmp
dec
sub
jmp
outs
nop
data16
and
sbb
not
jecxz
pop
inc
enter
repnz
add
arpl
push
mov
push
jle
cmps
pop
inc
enter
repnz
out
add
sbb
cmp
sub
mov
mov
mov
push
jle
cmps
pop
inc
enter
repnz
add
arpl
push
mov
push
jle
cmps
pop
inc
enter
repnz
mul
inc
push
aam
ss
mov
and
xchg
shl
cmps
in
push
aam
xchg
jbe
imul
xchg
inc
lds
mov
sbb
mov
pop
js
call
add
int
mov
inc
imul
mov
dec
enter
fs
test
mov
sahf
fdivr
jbe
cmc
inc
mov
xchg
jl
aam
call
or
mov
or
repz
sbb
movs
fimul
pop
mov
dec
cli
fcmovb
(bad)
cmc
(bad)
lods
push
retf
inc
mov
xor
dec
mov
push
mov
ret
repz
or
jb
pop
nop
cmp
inc
ret
add
sti
adc
xchg
add
dec
inc
cmps
mov
push
xor
xor
(bad)
retf
psubd
and
cld
call
fisub
or
int3
(bad)
pop
test
cmp
mov
repz
mov
cld
mov
stc
mov
cmp
pushf
movs
inc
pop
inc
mov
pop
scas
rcr
mov
mov
or
lds
mov
test
push
inc
xor
and
dec
add
pop
call
or
xchg
outs
stos
das
mov
sub
or
int3
jne
xor
int3
(bad)
mov
dec
repz
mov
not
mov
iret
mov
inc
cmp
outs
mov
pushf
push
lods
out
sbb
jnp
test
arpl
mov
rcl
int3
stc
jg
out
push
add
lea
xchg
adc
nop
cmp
(bad)
pop
add
and
pop
cmp
or
push
push
dec
xchg
inc
mov
jbe
in
sub
and
xchg
cmp
xchg
dec
scas
xchg
or
cmp
mov
pmulhuw
jb
int3
gs
loop
push
push
in
push
dec
inc
hlt
call
fcomip
mov
fsubp
data16
mov
mov
and
cld
lods
mov
test
cmp
ret
jno
leave
shl
push
or
dec
mov
icebp
sub
inc
repz
int3
xacquire
push
inc
in
mov
push
inc
addr16
push
(bad)
xchg
bound
add
add
lods
mov
dec
in
fld
push
pop
pop
inc
(bad)
cld
push
and
ret
jnp
cs
sub
inc
test
cmp
xor
mov
jae
or
ret
imul
push
mov
inc
jbe
sub
cmps
mov
or
push
mov
mov
xor
xlat
out
loopne
ss
loop
cmp
fisttp
movs
jge
sub
int
or
mov
out
push
xchg
inc
inc
pop
dec
cli
outs
fmul
sub
push
call
cwde
add
lds
jno
movs
inc
sbb
xor
ret
icebp
test
ins
mov
xchg
adc
or
adc
and
das
push
add
outs
or
and
retf
lods
imul
cwde
fbstp
sar
fst
icebp
dec
pop
cmp
cld
push
sub
push
imul
fstp
arpl
test
mov
push
and
into
xchg
popf
iret
or
pop
aam
shl
call
cmp
frstor
add
mov
pusha
add
push
inc
stos
stc
retf
push
js
push
sbb
mov
neg
pop
push
lods
cmp
push
repnz
stos
sbb
adc
mov
pushf
mov
test
mov
xchg
pop
clc
aas
pop
mov
pushf
jmp
lods
mov
mov
popf
mov
lahf
mov
fldenv
cdq
xor
fwait
es
push
or
(bad)
sbb
cmps
mov
dec
call
xlat
add
mov
inc
sbb
ja
push
nop
jle
pop
lahf
sbb
repz
and
and
sbb
pop
pop
push
jmp
movs
or
ss
sub
add
call
pop
push
(bad)
lods
fnstsw
call
inc
ja
in
pop
add
jb
add
repnz
repnz
repnz
fisttp
mov
out
jge
lahf
out
jge
lahf
out
jge
lahf
out
jge
lahf
out
jge
lahf
out
jge
lahf
out
or
sbb
dec
popf
mov
out
dec
call
scas
retf
retf
int
dec
int3
fisubr
jecxz
fcmove
lds
sbb
sbb
sub
dec
scas
mov
sub
(bad)
and
push
outs
dec
jbe
je
mov
mov
cld
xchg
push
(bad)
aam
push
cmp
iret
pop
outs
jl
mov
pop
ds
mov
aaa
movs
movs
cwde
and
pop
cmp
add
movs
cmps
xchg
in
aaa
fst
adc
dec
cwde
lock
mov
dec
adc
xchg
sub
(bad)
mov
mov
fimul
jbe
jno
lock
jge
sbb
and
ins
push
call
fcom
js
movs
xchg
addr16
std
pop
inc
(bad)
fld
push
push
push
pop
mov
push
mov
jmp
and
or
hlt
mov
jae
cmp
pusha
inc
push
fsub
pop
icebp
sbb
sub
(bad)
out
pop
sub
ins
pop
cmps
xchg
jb
das
stos
jnp
pop
inc
(bad)
in
inc
xlat
pop
or
aaa
sub
fwait
inc
in
inc
add
call
aaa
(bad)
cld
sbb
cmp
(bad)
les
add
out
movs
fdivr
mov
mov
mov
push
mov
add
pusha
les
fst
xor
lea
or
loopne
lock
sub
clc
sbb
call
mov
dec
ret
lahf
add
push
xchg
in
dec
in
or
push
push
imul
cmc
inc
in
(bad)
ins
in
push
inc
in
mov
push
inc
in
push
les
xsaves
add
jmp
or
mov
dec
in
or
or
push
pop
mov
jbe
push
int3
and
push
test
mov
call
cmp
shl
fiadd
inc
sbb
pop
mov
jl
je
sub
push
cld
into
addr16
(bad)
pop
adc
cmp
inc
or
sub
jge
ret
mov
mov
imul
lods
sar
ins
outs
xchg
jns
es
cwde
dec
(bad)
out
add
scas
jbe
mov
popa
sub
add
cdq
sbb
cs
mov
push
sti
dec
dec
call
call
pop
mov
pop
sbb
pushf
ficomp
int3
ficomp
push
fld
push
js
mov
test
push
cwde
add
test
cmps
sbb
loop
mov
rcr
inc
mov
add
test
mov
add
pop
pop
inc
(bad)
mov
pusha
rcr
out
stc
and
in
aaa
mov
jle
stos
mov
pop
inc
in
retf
test
sbb
(bad)
jecxz
jmp
repnz
xchg
pop
or
loope
inc
(bad)
mov
and
in
push
rcl
push
push
cmc
mov
mov
or
mov
mov
lods
stos
xchg
pusha
and
sbb
jle
xchg
mov
sub
out
imul
push
mov
pop
mov
mov
xor
and
mov
xchg
mov
loop
stos
ins
pop
pop
sbb
push
sbb
xor
dec
pop
jmp
add
pop
push
jp
push
imul
loop
lock
js
aaa
adc
or
mov
shr
xor
add
(bad)
pop
mov
clc
push
adc
adc
dec
ficomp
out
retf
mov
(bad)
cmp
clc
cmp
sub
inc
cmps
retf
lock
push
(bad)
jb
mov
cmp
and
mov
or
pop
(bad)
mov
mov
push
mov
xchg
repnz
or
mov
cdq
sub
hlt
imul
call
out
dec
inc
push
dec
pop
add
add
bound
sub
ja
or
add
push
sub
pop
loopne
fwait
mov
dec
pop
sbb
pop
mov
sub
pop
clc
xchg
sub
fisubr
cmp
std
xchg
int
adc
pop
xchg
push
cld
ss
pop
dec
shl
xor
dec
mov
(bad)
pop
jmp
xor
lock
sbb
pop
jmp
repnz
xchg
jns
mov
test
sub
inc
push
xor
mov
xor
mov
fdiv
gs
dec
jecxz
test
jbe
sbb
sub
xor
cmp
cmps
or
es
sub
js
das
add
icebp
jl
les
aaa
mov
bound
fmul
lock
in
ja
cdq
pop
pcmpgtb
pop
call
imul
and
sub
push
cld
add
xchg
push
sbb
ins
movs
es
mov
dec
xchg
ins
icebp
xchg
and
cmc
dec
mov
icebp
aaa
sti
push
icebp
ins
mov
sub
and
nop
push
fdivp
cmc
(bad)
in
ret
aam
outs
test
fstp
mov
dec
cmp
xor
sbb
daa
loopne
ret
push
xchg
mov
adc
lock
mov
lahf
ret
cmps
fstp
add
mov
dec
scas
movs
sbb
adc
(bad)
mov
mov
adc
ror
xor
jmp
dec
xchg
gs
ins
push
sub
add
dec
adc
out
sub
out
lock
icebp
mov
and
mov
dec
lock
add
ins
adc
cwde
jb
test
retf
daa
mov
pop
or
adc
cli
dec
adc
pop
mov
std
in
test
sti
push
mov
mov
cld
in
mov
inc
mov
(bad)
jge
xchg
jns
and
je
push
or
pop
add
dec
int3
add
gs
in
imul
retf
test
xor
sub
sbb
daa
xchg
popa
out
aam
mov
imul
push
(bad)
loope
lods
sti
addr16
add
fs
test
push
fisub
xor
push
add
sbb
mov
mov
ss
ja
aas
ss
mov
ss
dec
cli
mov
cmp
pop
xchg
adc
cmp
fstp
sub
xchg
and
xor
lods
scas
mov
cli
shl
and
mov
cwde
cmp
movs
jmp
inc
adc
scas
clc
add
xor
add
call
xchg
adc
mov
inc
fisttp
dec
mov
in
inc
mov
jae
jmp
ret
loop
cmp
outs
gs
push
jle
mov
cmp
mov
ins
and
repnz
xlat
out
ja
hlt
add
sbb
out
ficom
fadd
sbb
xchg
test
sub
push
ins
(bad)
cli
or
push
addr16
xlat
dec
fistp
sub
pop
or
inc
repnz
add
dec
int3
lods
stos
mov
test
or
stc
loop
and
stos
addr16
and
(bad)
leave
pop
jp
lock
test
in
and
mov
add
cmp
leave
cdq
push
mov
or
in
mov
ret
popa
or
out
dec
sub
sbb
outs
sahf
push
in
mov
cmp
sub
xor
cli
dec
ds
out
pop
and
mov
clc
or
in
pop
xchg
lods
jno
stc
mov
(bad)
sub
shl
inc
sub
or
jecxz
bswap
test
mov
cdq
push
inc
dec
int
ror
shl
sub
mov
push
xchg
fs
(bad)
dec
xchg
dec
mov
cmp
fbld
(bad)
retf
(bad)
mov
xor
addr16
sub
sub
rol
movs
retf
inc
mov
sbb
call
sub
mov
ins
inc
ror
or
in
cmp
lods
mov
dec
mov
mov
push
push
hlt
stos
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
jmp
cli
push
inc
in
adc
adc
push
inc
in
movs
xchg
mov
push
dec
in
mov
push
ins
cld
mov
dec
imul
test
inc
in
mov
push
dec
les
push
jl
mov
ss
hlt
mov
push
dec
in
cmp
dec
ins
jmp
outs
call
in
rcl
in
mov
push
in
mov
mov
dec
in
repz
call
cmp
loopne
scas
aam
popa
add
in
or
or
push
jl
pop
in
mov
mov
(bad)
mov
leave
fiadd
and
dec
in
inc
in
dec
dec
mov
pop
jmp
mov
jno
lods
xchg
ss
outs
in
dec
jne
in
jp
dec
push
mov
outs
stos
lods
jle
mov
xor
inc
nop
dec
in
push
or
push
add
mov
cmp
xor
xor
or
inc
mov
in
mov
rcl
adc
mov
mov
inc
push
leave
std
das
add
xchg
mov
loop
push
imul
push
out
les
xor
out
mov
xchg
mov
mov
and
lods
fdivr
mov
(bad)
mov
retf
aam
cmp
pop
add
ffreep
pushf
inc
mov
mov
push
and
mov
cmc
jg
sbb
mov
icebp
adc
daa
mov
and
xchg
mov
call
and
movs
fisttp
add
jmp
xchg
jl
movs
rcl
in
jle
ret
xchg
adc
inc
sub
mov
xor
xchg
xchg
and
ins
sub
test
es
jae
mov
out
dec
(bad)
ret
fldcw
aad
call
cdq
push
push
push
inc
das
and
ja
out
adc
mov
cmp
les
int3
adc
jecxz
sub
jmp
rcl
jo
xor
enter
pop
jmp
xchg
mov
jno
pop
loop
push
lds
aas
pop
pop
lds
inc
in
aas
sahf
and
jne
mov
and
sbb
retf
nop
popa
and
test
mov
out
pop
jmp
js
lahf
std
mov
cmc
add
jnp
pop
xchg
bnd
ret
jmp
adc
and
mov
into
or
push
cmp
xchg
dec
shl
mov
inc
pop
shr
inc
jmp
call
add
das
lods
jae
jl
test
xor
xchg
xchg
add
and
imul
push
ins
push
stos
push
nop
xor
rol
xchg
or
sar
clc
fs
loopne
adc
mov
loopne
xchg
cdq
ror
push
fmul
add
repz
cmp
or
int3
enter
pop
and
mov
or
ret
call
mov
push
(bad)
cmp
lds
ret
test
outs
sub
shl
push
loopne
lods
xchg
int
popf
aas
mov
jns
cs
fstp
xchg
dec
in
adc
pop
ror
mov
or
rcr
jns
jb
sbb
(bad)
mov
xchg
enter
stos
aad
inc
xor
pusha
sbb
push
ins
idiv
push
or
and
jmp
(bad)
callw
into
cli
clc
jp
cwde
dec
pop
jne
sbb
mov
add
int
and
inc
out
jnp
imul
dec
leave
call
or
js
push
mov
iret
inc
push
fcomp
repnz
add
or
push
ins
in
stos
push
push
in
mov
push
inc
dec
mov
push
fsubr
add
lods
stos
pop
dec
in
(bad)
push
movs
inc
xchg
push
dec
push
sbb
imul
adc
cli
rol
xchg
sub
test
push
sub
mov
pop
and
dec
(bad)
adc
fistp
jl
imul
out
test
cmp
shl
aad
mov
(bad)
loopne
push
in
movs
bound
stos
fnstsw
aas
and
cmps
das
push
xchg
pop
add
out
or
nop
outs
xor
enter
mov
mov
sar
cdq
dec
or
push
(bad)
ja
enter
xchg
push
shl
out
xor
add
pusha
fs
aas
(bad)
and
(bad)
ds
push
stos
mov
mov
add
inc
xchg
cmp
dec
sar
inc
lea
(bad)
cmp
out
xor
mov
ds
mov
cmps
add
inc
in
jne
js
inc
push
and
inc
dec
inc
aad
inc
mul
imul
mov
pop
jp
ror
cmps
jbe
aaa
mov
mov
jbe
ret
mov
test
mov
inc
retf
lock
icebp
mov
lahf
xor
call
retf
test
hlt
cmp
sub
das
and
mov
xchg
xor
lahf
in
mov
dec
sti
fimul
rol
(bad)
fdivr
add
mov
pop
sub
scas
lods
pop
add
mov
inc
jecxz
xchg
or
mov
cmp
mov
ret
scas
mov
inc
dec
sub
sti
popa
sbb
aas
rcr
leave
leave
push
in
lds
and
dec
adc
cmps
sub
pop
jno
je
into
scas
aas
push
inc
lock
jb
cmc
inc
lock
xchg
pushf
mov
inc
add
nop
gs
dec
das
out
hlt
or
cmp
adc
sbb
lods
xchg
sbb
call
fld
push
cdq
imul
add
jecxz
or
repz
es
addr16
add
sbb
push
pop
mov
bound
lock
xor
shl
dec
stos
or
mov
out
push
and
fistp
mov
dec
shr
push
(bad)
ds
jae
xchg
fwait
push
pushf
ret
imul
fistp
fwait
mov
stc
pop
jge
test
(bad)
fst
movs
out
dec
push
xor
neg
repz
cmps
and
mov
and
or
xchg
cmp
dec
jmp
xor
jmp
popa
mov
adc
stc
es
stc
es
mov
add
movs
mov
adc
push
jge
xor
dec
pop
cmps
mov
pop
dec
inc
xor
pop
je
xchg
outs
push
mov
inc
les
sub
inc
sub
or
(bad)
sub
iret
mov
mov
lods
fstp
mov
loopne
pushf
mov
or
lock
push
push
daa
and
push
fst
cmp
and
aaa
push
add
hlt
fwait
cmp
cmp
(bad)
je
adc
call
push
mov
lods
int3
test
sbb
imul
mov
in
pop
inc
adc
xlat
mov
pop
aad
mov
adc
and
adc
mov
bound
fwait
ret
retf
test
sub
adc
aam
test
sub
ja
or
inc
inc
pop
(bad)
out
pop
add
stos
cmps
push
es
mov
jg
push
sub
push
sub
movs
cmps
retf
pop
dec
sbb
sub
push
push
dec
dec
xchg
out
movs
push
arpl
pop
ret
loop
or
add
adc
xchg
mov
ret
cmc
shl
pop
or
jnp
lods
out
out
and
or
xor
jb
mov
mov
jge
jecxz
(bad)
sbb
cmps
cmp
xor
pop
dec
ins
push
movs
cmp
lock
inc
or
sub
cmps
stos
inc
lods
jo
fcomip
adc
mov
pop
imul
repnz
cld
push
ins
fdiv
pop
dec
cld
mov
push
les
push
lds
push
pop
dec
mov
leave
out
test
push
lahf
ret
add
mov
cs
jmp
push
or
push
inc
pop
mov
mul
mov
repz
and
and
test
or
cwde
retf
mov
push
or
movs
movs
jae
jb
out
std
and
push
sbb
xchg
mov
mov
shl
test
adc
and
sub
aaa
lods
fdivr
mov
sub
fistp
pop
rol
jae
adc
jge
imul
mov
jae
mov
and
loop
in
sub
or
jbe
mov
fild
add
icebp
cdq
mov
fld
aam
xor
inc
clc
mov
lods
scas
dec
xchg
daa
(bad)
sbb
push
(bad)
push
(bad)
pop
fidivr
pop
daa
stos
inc
inc
in
dec
(bad)
jno
cmp
jl
dec
dec
xor
test
mov
outs
shr
add
ror
pop
sti
outs
push
sub
fisttp
mov
push
lea
loopne
loopne
sahf
ss
addr16
and
mov
or
mov
aaa
mov
test
mov
sub
in
mov
adc
or
arpl
aas
cmc
jne
outs
xor
dec
stc
outs
push
retf
popf
mov
nop
data16
sub
shl
sbb
fcom
and
sbb
popa
bound
aaa
mov
jge
sbb
aad
push
or
inc
and
js
out
comiss
adc
cs
sti
pop
xor
adc
xor
out
adc
sar
xchg
mov
or
ss
in
rcr
mov
mov
fdiv
or
add
fsubr
cmps
push
inc
in
mov
leave
adc
push
sub
repz
js
stos
xchg
(bad)
(bad)
icebp
sahf
push
jae
jl
test
jle
or
mov
hlt
and
mov
xchg
or
sbb
push
pop
pushf
mov
jl
shl
mov
mov
or
xchg
mov
mov
inc
pop
push
jecxz
pop
or
jecxz
xor
xchg
outs
cmp
adc
xlat
cmp
jg
loop
outs
xor
xchg
or
add
and
add
adc
movs
pop
popa
cdq
push
out
fs
xchg
and
in
in
inc
call
bnd
inc
jecxz
mov
cmp
lahf
imul
mov
aas
ins
jnp
push
sub
loope
sbb
pop
cmps
test
jb
mov
push
cwde
bound
jg
jle
(bad)
mov
push
cmp
ret
sbb
ja
mov
cmp
out
clc
clc
mov
add
(bad)
ud0
mov
lds
stc
mov
pop
and
(bad)
jmp
fidiv
sbb
(bad)
pusha
out
(bad)
movs
mov
mov
fild
inc
xor
pop
call
aas
into
stc
lods
push
sub
xchg
xchg
loope
dec
cdq
shr
inc
pop
clc
jmp
inc
imul
cmp
imul
mov
cmps
imul
stos
ret
sbb
fistp
sbb
cdq
lock
dec
sar
stos
out
mov
pop
add
imul
cli
les
cmps
movzx
cmc
ss
push
stos
xor
or
mov
aaa
cs
dec
mov
dec
mov
mov
ins
mov
xchg
mov
lods
push
mov
push
cmp
push
or
xor
xchg
push
mov
xchg
popa
cld
imul
inc
cmps
jne
je
jle
fimul
(bad)
mov
pop
pop
sbb
push
out
or
or
daa
mov
(bad)
aad
add
mov
int3
jne
(bad)
mov
int3
outs
test
pop
and
retf
je
lods
fs
aam
es
sar
hlt
push
xrelease
les
out
mov
jge
int
popa
xchg
mov
dec
out
or
jp
in
add
(bad)
sahf
fwait
cmps
fild
addr16
or
ins
cld
leave
(bad)
mov
fwait
aaa
adc
pop
push
add
ins
adc
int
test
mov
jmp
(bad)
nop
lea
dec
(bad)
pop
sbb
adc
jp
sub
cmps
outs
test
leave
mov
xor
loopne
mov
xor
std
in
cmp
popa
jl
mov
fldcw
add
xor
cmp
les
cmps
enter
leave
cmps
sub
(bad)
dec
sbb
out
lds
sbb
pop
mov
daa
shl
lea
mov
dec
out
mul
and
inc
mov
daa
movups
inc
pop
push
out
sub
mov
push
adc
mov
jns
bound
test
mov
add
rcl
in
xchg
jnp
xor
(bad)
pushf
movs
movs
retf
aaa
pop
rcl
adc
push
mov
mov
mov
out
in
packuswb
mov
sbb
sbb
add
(bad)
fcomp
sti
mov
popf
adc
repnz
aaa
les
xor
adc
fisub
popa
add
ins
push
cmc
and
sbb
dec
pop
es
mov
push
or
push
leave
add
rcr
mov
and
push
outs
(bad)
push
and
sub
dec
push
xchg
sbb
nop
sub
call
in
ficomp
sar
inc
arpl
std
fiadd
xlat
sti
in
mov
jns
push
xor
call
jmp
jb
dec
les
mov
aad
cmc
push
mov
rol
ss
pop
daa
pop
imul
mov
cmp
mov
inc
pop
mov
cs
jb
lds
aaa
lods
leave
cmc
mov
lahf
pop
aam
and
and
mov
fisttp
mov
mul
stos
ins
imul
mov
(bad)
xchg
gs
call
ins
jae
xchg
xchg
(bad)
sub
es
jmp
xchg
xchg
cdq
outs
jmp
dec
les
push
fs
call
int3
mov
xchg
out
push
(bad)
and
frstor
push
inc
push
push
ret
add
out
pop
ffree
xor
cmps
pop
adc
fwait
or
push
inc
push
stos
push
adc
mov
jp
or
mov
pop
sub
pop
xchg
sahf
adc
leave
sub
jp
xlat
into
sbb
or
mov
mov
cli
jbe
jge
jge
xchg
pop
mov
push
add
adc
sbb
jle
or
sub
push
ja
(bad)
fsub
pop
test
mov
pop
pusha
(bad)
shr
mov
imul
cli
pop
clc
mov
lds
pop
fisubr
test
pushf
add
xor
dec
add
leave
sub
in
sbb
pop
shl
popf
out
and
inc
(bad)
mov
arpl
out
fbstp
dec
out
adc
mov
cmps
loope
jmp
inc
ret
(bad)
fild
popa
cmps
jmp
and
shr
pop
ret
xor
push
sub
or
jno
mov
js
cwde
or
rcl
clc
cmps
test
sub
ror
idiv
inc
(bad)
pop
adc
movs
daa
and
mov
push
cmp
pusha
sti
arpl
xchg
push
or
(bad)
sbb
mov
and
cld
cmps
shl
fcomi
pop
pusha
test
xor
test
repz
sub
push
test
or
mov
sbb
jp
movs
call
add
push
int
jo
test
cmc
jecxz
aas
idiv
and
adc
fimul
add
cmps
sub
add
add
(bad)
mov
mov
pop
lods
sbb
movs
xchg
and
mov
lahf
inc
mov
fcom
sbb
lahf
push
mov
loope
push
mov
(bad)
xor
ret
enter
paddq
fistp
pusha
stos
daa
dec
and
adc
jbe
rcr
cmp
sbb
icebp
xchg
mov
pop
or
mul
popf
(bad)
mov
inc
mov
jecxz
iret
jae
pop
sub
(bad)
jle
push
xor
fstp
jnp
pop
dec
push
pop
(bad)
fistp
lods
mov
in
pushf
mov
call
push
aaa
xchg
xchg
jnp
push
and
push
js
xlat
mov
sub
pusha
jg
jo
test
xor
add
pop
ret
pop
mov
es
sub
and
mov
fisttp
or
call
data16
mov
push
jns
sbb
dec
sub
retf
movs
push
ins
add
pusha
movs
(bad)
aam
aad
xor
sub
jle
mov
xor
jbe
or
call
add
cmp
jo
dec
and
out
dec
out
popf
mov
mov
cmp
and
rcr
mov
mov
jae
pop
enter
mov
iret
lods
add
pop
sahf
xor
pop
mov
adc
imul
xor
in
push
xor
ror
mov
cmp
data16
icebp
scas
xor
sub
push
ja
sub
and
je
sbb
xchg
aas
pop
sbb
mov
push
ins
pop
fwait
(bad)
int
push
fist
out
mov
add
sbb
inc
out
scas
adc
cld
test
pushf
jnp
pop
sbb
pop
lock
and
imul
loop
std
nop
push
inc
cmp
pop
fdivr
jmp
sbb
les
xchg
dec
xor
mov
test
pusha
cmp
loope
cld
sbb
xor
inc
ss
sub
jmp
jno
pop
and
inc
sub
xchg
ins
sti
lea
sub
push
jno
mov
cmp
push
xor
push
aaa
clc
loope
mov
das
movs
jg
and
cmps
pop
rcpps
sub
test
jae
xchg
xlat
(bad)
test
add
bound
stos
arpl
leave
and
sbb
(bad)
jp
popf
shr
movs
js
ror
repnz
push
repz
and
mov
ins
int
(bad)
(bad)
js
add
sbb
add
repnz
in
dec
sbb
cmps
call
jo
adc
xor
xchg
push
shr
pop
popf
pop
sub
or
cmp
push
jmp
sub
xor
jns
pop
push
in
movs
clc
pop
inc
gs
fnclex
mov
aaa
cmp
cld
fistp
(bad)
test
and
fiadd
stc
sbb
xor
outs
push
cdq
mov
test
stos
ds
test
push
xchg
or
rcr
dec
mov
mov
fimul
fnstcw
shl
nop
test
lods
scas
xchg
xor
pushf
jno
pop
shr
adc
rcr
les
mov
adc
mov
inc
je
out
aas
push
in
cmp
not
or
movs
stc
stc
push
mov
sti
xchg
shl
push
scas
mov
ja
int3
cmp
loope
inc
cmp
adc
fcomp
mov
cmp
retf
adc
mov
fs
ins
dec
dec
jp
push
sub
jnp
in
mov
fisubr
xchg
cmps
data16
stos
icebp
add
test
jnp
mov
sub
or
pop
es
(bad)
imul
call
cld
daa
mov
push
and
rcr
loopne
cmc
stc
mov
(bad)
push
not
mov
retf
and
shl
outs
mov
cmp
jnp
in
mov
jno
in
inc
pop
out
mov
gs
mov
cmps
pop
mov
or
pop
cmc
pop
out
dec
std
cmp
mov
jae
sti
mov
sub
xchg
icebp
mov
cmps
mov
ficomp
add
adc
push
call
aas
cli
scas
jmp
imul
pop
or
push
pop
pop
mov
pop
stc
mov
in
push
xor
adc
popa
pop
mov
and
mov
mov
or
test
test
xchg
pusha
fwait
jo
xor
shl
data16
mov
pop
idiv
arpl
pop
inc
(bad)
and
mov
mov
das
xchg
aad
sbb
push
fadd
mov
rcl
jnp
mov
jg
dec
push
test
sbb
or
cmp
push
pop
shr
mov
test
dec
out
idiv
fld
fsub
jl
mov
ins
adc
clc
sub
or
lods
sti
(bad)
xchg
mov
mov
cdq
call
cmps
cmp
sbb
cmp
nop
call
and
fsubr
imul
ja
dec
cmp
jne
fs
les
(bad)
gs
push
sbb
mov
out
ins
pusha
out
imul
pop
mov
cmp
test
push
fld
ss
scas
sbb
inc
bound
and
in
jb
pop
aas
aad
je
jle
jle
aaa
mov
loopne
jecxz
push
xor
xchg
mov
pop
mov
pop
jne
mov
jecxz
add
pop
ret
or
mov
std
xchg
xlat
shl
inc
dec
xchg
mov
or
popf
or
xchg
xchg
sti
jae
push
xchg
test
enter
xor
in
cmps
adc
sub
pop
dec
cmps
ror
mov
xchg
mov
jns
retf
mov
outs
mov
pop
dec
sub
imul
add
lods
hlt
dec
setns
jne
push
push
pop
cmp
mov
ins
mov
xchg
sub
inc
or
test
test
mov
ficomp
xlat
mov
mov
or
shl
hlt
sbb
cmp
jp
pop
push
enter
(bad)
cmp
bound
sbb
xor
fld
and
xor
or
aam
cld
adc
in
sbb
cmps
mov
ror
push
sub
push
arpl
arpl
ror
arpl
mov
popa
push
or
push
or
jge
ss
add
sbb
pop
bound
aaa
pop
rcr
sub
xchg
push
pop
pushf
mov
jmp
test
movs
pushf
xchg
fnstsw
pslld
jl
sub
and
out
ficomp
jbe
test
mov
adc
jp
rdmsr
push
cld
mov
sbb
stos
ins
inc
add
pop
movs
dec
adc
cdq
ror
add
(bad)
jmp
inc
pop
arpl
pmaxub
inc
push
pop
imul
aaa
push
movs
(bad)
pop
xor
jo
es
mov
adc
shl
push
xlat
pop
push
pop
shr
mov
or
cmp
mov
push
aad
nop
leave
push
pop
cmp
dec
mov
(bad)
sbb
ins
adc
cmps
rol
and
leave
out
icebp
and
cld
mov
pop
jp
into
pextrw
lods
cdq
push
test
sbb
xchg
xchg
ret
mov
dec
jmp
push
xchg
test
push
sbb
hlt
mov
and
inc
or
int3
call
lahf
add
cdq
inc
ret
jmp
dec
imul
test
push
fs
stos
ss
adc
jl
push
(bad)
cld
mov
das
(bad)
out
pop
pop
loope
popf
sar
push
(bad)
cmp
arpl
xor
aad
mov
sub
xchg
setnp
stos
repz
add
push
pop
mov
sub
sub
cmps
pop
sahf
bound
xchg
ins
cmp
jo
mov
push
sub
scas
leave
sar
leave
push
xchg
pusha
adc
dec
mov
sbb
shl
out
ror
repz
shl
(bad)
repz
retf
ret
in
std
fdiv
jg
icebp
sahf
scas
int3
repnz
push
xor
mov
jmp
stos
ss
sub
nop
adc
sbb
cli
mov
inc
add
mov
repz
pusha
pusha
gs
sub
add
cmps
xlat
or
test
(bad)
aaa
cmp
aas
fisub
call
or
shr
mov
fist
imul
clc
jge
in
pushf
fstp
in
jmp
ins
ds
out
adc
jle
pop
shl
push
adc
imul
adc
stc
icebp
adc
xchg
xchg
inc
vorps
(bad)
js
ss
scas
sub
rol
int3
cli
jg
sbb
enter
pop
fstp
push
jno
ins
ror
ret
jbe
jno
repnz
(bad)
sub
add
sbb
fcomp
mov
add
mov
mov
mov
push
sub
pop
ror
or
jae
or
call
add
xor
pusha
mov
or
mov
test
push
xchg
mov
loop
shl
ret
cmp
and
push
and
and
add
jne
jle
movs
pop
addr16
sbb
mov
popf
dec
sbb
xchg
fdivr
or
mov
mov
push
mov
lods
lea
js
adc
mov
cli
imul
ret
es
ins
popf
mov
sub
push
mov
imul
mov
push
sti
test
lods
pushf
inc
fdivr
lods
ret
imul
sti
dec
les
sbb
in
out
xchg
sti
cwde
adc
xor
pusha
jmp
sbb
sub
xchg
jge
dec
push
push
leave
sub
jge
lods
add
sbb
and
ja
push
loopne
push
sti
int
call
(bad)
(bad)
pop
leave
push
fdiv
add
sub
int3
inc
movs
xchg
mov
addr16
pusha
xchg
cmp
push
sbb
popf
or
sbb
cmp
mov
sub
or
push
ins
enter
cmp
(bad)
dec
inc
pmaddwd
test
sti
cmp
addr16
xor
inc
cmps
(bad)
sbb
aaa
jb
cmp
or
hlt
jp
sub
test
arpl
pop
rcl
imul
mov
mov
imul
retf
outs
loop
sub
fnsave
sub
aad
xchg
das
popa
cmp
and
push
push
xor
arpl
or
movs
inc
(bad)
(bad)
dec
fbstp
push
sahf
xor
call
adc
dec
jecxz
xchg
push
xor
and
sub
jno
adc
pop
leave
dec
in
mov
pop
mov
push
or
cld
jecxz
cdq
xchg
mov
lea
aad
(bad)
pop
addr16
cld
pop
rol
pop
mov
test
lahf
add
sub
push
sub
or
dec
mov
mov
dec
hlt
hlt
rol
pop
push
mov
or
xor
stos
into
cld
loop
inc
loope
repz
dec
sbb
mov
pop
adc
aad
jle
push
cmp
sbb
stos
cmp
inc
or
and
test
xchg
dec
xchg
sbb
icebp
adc
push
or
jle
scas
adc
mov
lds
enter
arpl
sbb
pop
imul
mov
idiv
(bad)
mov
pop
and
sar
xor
loopne
jecxz
adc
and
inc
rol
aam
push
dec
nop
iret
iret
leave
rcl
js
shr
int
jecxz
das
mov
ffree
mov
lds
mov
fs
mov
cmp
mov
shr
sbb
leave
cmp
iret
xchg
or
mov
rcl
jnp
inc
scas
(bad)
mov
add
stos
fdiv
arpl
mov
and
cs
int3
mov
sahf
pop
movs
lds
jecxz
ins
cmp
jp
xor
and
fadd
stos
push
jb
(bad)
lock
push
xor
mov
out
cs
arpl
pusha
jbe
lods
test
jge
cli
xor
test
rcr
pop
mov
xor
push
mov
into
add
mov
out
test
pop
sub
pop
xor
stc
lock
std
lea
pop
imul
sbb
adc
adc
rcr
push
(bad)
pushf
in
jnp
movs
ss
outs
jp
gs
fsubr
aam
mov
sbb
sbb
cmp
pop
in
mov
cdq
dec
out
mov
adc
and
aam
mov
sub
test
jmp
dec
hlt
xchg
xchg
jo
cs
adc
sti
mov
repnz
test
shl
adc
neg
pop
push
in
out
xor
inc
ror
jecxz
inc
and
jp
sub
out
jle
movs
and
mov
jns
js
or
pop
jl
adc
in
mov
and
outs
pop
mov
pop
test
mov
and
xor
cmp
mov
clc
leave
pop
aam
fldln2
cmp
scas
rcl
scas
outs
push
movs
enter
mov
and
nop
push
mov
clc
test
les
mov
icebp
ret
push
aad
popf
pushf
outs
mov
aas
jns
mov
sub
frstor
mov
mov
jp
jbe
sub
loope
into
push
jle
xor
retf
std
clc
pop
push
add
lea
sbb
test
xor
shl
ja
stos
loop
in
rol
ds
and
add
dec
add
lods
or
enter
push
push
shr
mov
fdivp
movs
mov
inc
les
and
mov
cld
inc
jmp
pop
pop
adc
xlat
imul
movs
push
push
add
cs
shl
add
pushf
xchg
lahf
loop
jb
test
or
pushf
jae
mov
clc
loop
mov
cdq
xchg
cli
or
xor
fwait
ror
fiadd
bound
jns
inc
cmps
jno
pop
mov
mov
xor
adc
add
in
add
lods
mov
pushf
adc
sbb
aaa
cli
mov
movs
lock
pushf
adc
add
retf
push
ss
cmp
adc
std
jg
mov
pop
shl
stc
jle
test
sub
jmp
xchg
push
adc
pop
rcr
adc
cmps
pushf
ins
mov
pusha
mul
mov
ret
adc
adc
xchg
jbe
mov
pop
push
add
xchg
mov
test
jae
add
je
adc
jno
frstor
pop
or
or
fist
inc
ror
ficomp
xor
(bad)
pop
test
adc
adc
sbb
repnz
(bad)
call
int
mov
fild
int
adc
cli
(bad)
mov
(bad)
fwait
mov
mov
inc
retf
jl
mov
movs
push
jns
outs
xor
mov
jecxz
xchg
mov
(bad)
push
imul
hlt
push
adc
adc
or
mov
sbb
addr16
cmp
mov
xlat
push
push
mov
pop
movs
jno
push
gs
jge
arpl
jl
data16
dec
jge
imul
xchg
adc
leave
rol
ror
fild
sbb
dec
or
inc
aam
sti
jmp
sbb
sub
jmp
out
mov
and
xchg
sbb
push
retf
lds
out
pop
outs
repnz
sar
adc
sub
movs
fist
mov
pop
gs
rcr
push
mov
pop
test
scas
add
jb
mov
scas
or
scas
pop
loop
jp
daa
xor
retf
adc
loop
xchg
stc
jle
jecxz
(bad)
in
xor
add
out
popf
push
xor
retf
jne
repnz
xor
xchg
add
fdivr
fisubr
sbb
and
xchg
rcr
mov
mov
aaa
jp
mov
(bad)
stc
into
repnz
xchg
hlt
lock
cmp
(bad)
mov
add
inc
xor
dec
or
mov
jg
outs
std
push
pop
mov
je
loop
push
rcl
xor
adc
adc
push
cmc
call
and
mov
fwait
mov
dec
inc
fst
jge
jecxz
dec
adc
test
mov
outs
hlt
push
dec
cmp
std
loope
push
mov
mov
popf
mov
push
sbb
popa
sub
add
xchg
xor
and
xchg
in
imul
das
push
inc
psubusw
fiadd
test
xor
out
(bad)
jl
repnz
pop
cmp
das
cmp
into
mov
jle
cmp
inc
pop
dec
and
popa
hlt
cmps
push
sbb
jmp
ret
lock
and
pop
(bad)
fisttp
xchg
cmp
stos
jg
jecxz
and
fwait
push
sub
dec
inc
pop
ins
outs
or
neg
xor
jne
cwde
sub
ret
icebp
nop
loopne
(bad)
int3
sub
sub
sub
add
cmp
in
out
arpl
pop
btr
inc
sub
ins
lods
push
and
adc
inc
xor
pushf
push
push
pop
imul
mov
pop
or
jo
ret
out
repnz
xor
pusha
push
sbb
loopne
mov
enter
dec
push
rol
mov
rcr
or
not
and
into
sbb
mov
sbb
dec
jle
or
xchg
cmp
mov
and
push
cmp
fiadd
or
sub
jne
mov
mov
jns
arpl
in
gs
popa
mov
jl
xor
inc
add
xor
bound
test
mov
in
mov
into
ins
loope
inc
ins
fist
cmc
fs
jns
fcom
xchg
adc
sbb
test
fcomi
mov
jne
imul
inc
fwait
enter
cmp
rcr
adc
call
adc
sub
fimul
movs
lds
ret
into
sbb
ins
sbb
inc
sbb
or
mov
std
or
rcl
and
push
repz
pop
mov
rcr
jno
mov
pop
mul
jle
mov
sub
ror
cmc
or
loop
outs
fnsave
cld
mov
push
ins
in
stos
push
dec
in
push
dec
fs
push
inc
loopne
test
jmp
lea
xor
or
push
inc
mov
mov
dec
pop
movs
cmps
out
and
jns
pop
push
cmps
mov
adc
push
inc
jle
inc
(bad)
vldmxcsr
sbb
pop
imul
das
addr16
jmp
cmps
push
pop
adc
fnsave
lea
fdivr
outs
inc
or
into
movs
sbb
dec
movs
aas
push
push
hlt
mov
(bad)
dec
jb
or
push
lock
push
sub
adc
cmp
sahf
scas
pop
imul
retf
inc
or
cmp
stos
and
addr16
mov
mov
xchg
bnd
and
fiadd
loope
dec
pop
lods
sbb
iret
lock
dec
daa
jmp
mov
mov
push
cs
pop
jmp
push
shr
call
add
push
and
and
push
dec
outs
adc
les
lds
mov
in
mov
inc
outs
push
pop
into
add
dec
imul
ss
test
rol
xor
sub
or
or
ss
jp
into
push
or
call
xor
mov
sub
adc
fisubr
loop
xchg
jle
dec
lahf
scas
mov
and
jmp
mov
mov
push
jb
test
push
ss
jg
hlt
(bad)
ins
push
clc
cld
je
mov
push
jge
mov
nop
rol
or
mov
xchg
hlt
or
inc
inc
and
or
xchg
push
xlat
mov
fnstenv
cmc
je
in
fldenv
mov
test
inc
cmp
fcomi
shr
iret
and
in
dec
aam
lods
jne
jno
(bad)
sbb
mov
and
add
outs
test
push
mov
popa
movs
jl
pusha
xor
sti
int
mov
dec
fcom
enter
es
test
mov
and
sbb
stos
inc
popw
retf
sbb
pusha
push
gs
shl
retf
lods
sub
dec
xchg
xchg
jg
push
in
sub
xor
sub
xchg
scas
mov
add
stos
or
fidivr
movs
cdq
out
or
scas
ja
xor
push
imul
pop
(bad)
jmp
jbe
out
mov
cmp
dec
sbb
retf
outs
(bad)
aad
pop
mov
inc
mov
scas
ss
cmc
mov
dec
or
jp
ret
push
or
out
inc
lods
ror
xlat
iret
outs
cld
popf
ins
push
push
sub
jecxz
adc
lods
test
jnp
pusha
rcr
enter
mov
mov
adc
cld
stos
in
push
sbb
cmc
cmps
inc
(bad)
gs
dec
mov
sbb
outs
pop
xchg
add
adc
sbb
and
rol
xor
aaa
out
mov
fisubr
inc
sub
test
ins
fucomp
loop
jl
sbb
fsub
xor
xor
and
push
xchg
iret
mov
xchg
ins
or
xchg
and
mov
fiadd
cmp
or
clc
mov
mov
out
dec
mov
mov
adc
js
(bad)
sbb
std
arpl
arpl
fistp
shl
add
sub
adc
and
cmp
xchg
push
lahf
mov
push
sub
mov
jmp
test
sahf
sub
mov
ss
mov
aam
call
sti
cmp
xor
lds
retf
xor
sub
cmc
rol
pop
and
mov
out
adc
jmp
fwait
xchg
pop
test
movs
pushf
hlt
pop
or
mov
scas
pop
mov
push
mov
icebp
sbb
add
adc
jmp
mov
int
outs
jmp
popf
test
out
ins
arpl
bound
jge
ja
xchg
mov
nop
mov
dec
ja
call
adc
xchg
jb
fiadd
sub
mov
jo
or
(bad)
push
or
pop
fist
push
mov
fsubr
jae
push
icebp
call
out
mov
stos
in
sub
fcomp
(bad)
jp
and
imul
sub
push
int3
dec
cmp
int
inc
push
lahf
ret
lods
fdiv
stos
lahf
push
cli
push
cld
outs
outs
sub
mov
pop
and
push
add
and
jmp
pop
jecxz
pop
out
dec
ins
fcmovb
bound
xor
sub
jae
(bad)
call
lock
adc
push
cmps
out
cdq
jno
sti
hlt
imul
pop
or
sbb
aas
ficom
nop
out
mov
inc
push
add
inc
adc
cmp
ret
mov
dec
popa
dec
lds
mov
ret
jo
int3
movs
jnp
ins
ss
scas
xchg
and
es
jmp
or
std
movaps
pop
imul
stos
rol
in
mov
push
sub
sub
cmp
lahf
(bad)
add
leave
mov
sub
cmp
push
adc
add
add
test
(bad)
and
test
cmp
shl
cs
cmp
xor
or
outs
lea
pushf
dec
push
pop
mov
xor
mov
adc
repz
iret
jge
dec
xchg
xor
or
xor
xchg
mov
sub
aas
fld
imul
xor
imul
popf
cmps
shl
cmps
test
push
add
dec
repz
xchg
in
jbe
sar
not
cli
xor
cwde
rol
cmps
xchg
pop
jmp
dec
sti
lahf
cmp
int
xor
or
push
dec
ret
inc
dec
push
fld
xchg
or
add
repz
aad
xchg
outs
fbstp
and
cmp
dec
bound
test
sbb
mov
popa
sti
lds
movhps
test
(bad)
aam
retf
es
hlt
push
sbb
cmp
push
ds
pop
inc
repnz
mov
loopne
and
into
push
mov
in
addr16
popa
push
lods
fsub
dec
cwde
mov
jae
std
nop
(bad)
fdivr
icebp
push
fist
loope
ret
jg
cdq
mov
pusha
pop
push
pop
stc
xchg
adc
popa
clc
aam
shl
retf
pop
jo
movs
add
ds
jns
cmps
movs
inc
jecxz
outs
inc
ret
jns
mov
pop
cdq
cmps
jno
cmp
stos
shl
(bad)
adc
test
and
push
xor
cli
dec
popa
or
and
out
jnp
sahf
dec
xor
pop
xor
add
retf
call
sbb
dec
out
sub
jecxz
iret
cmp
retf
fcomp
add
shl
jae
xchg
xor
sub
fld
or
cmc
jb
test
lock
and
icebp
xor
pop
sbb
cmp
loope
test
in
xchg
xor
push
sbb
xchg
xchg
test
adc
adc
xor
je
call
cmps
mov
pop
call
mov
enter
sub
cdq
lock
aas
in
pop
jb
repz
shl
rcl
in
xchg
push
pushf
xor
ror
fst
add
push
mov
(bad)
pop
cdq
outs
xchg
push
xchg
pusha
out
mov
xor
mov
xlat
push
jb
pushf
jo
sbb
aad
inc
pop
adc
aaa
sbb
pop
cdq
pop
leave
clc
retf
js
ss
jmp
jl
pop
call
popf
sbb
ins
ja
jge
ss
std
hlt
jle
sti
or
jno
and
int3
mov
das
inc
es
mov
daa
in
addr16
dec
out
movs
retf
sbb
es
xchg
js
shl
outs
aas
sub
or
ins
push
mul
xor
sub
fcomp
fdiv
xor
inc
ret
call
sub
sar
dec
shr
outs
shr
pop
push
aad
or
xor
pushf
adc
scas
repnz
in
push
stos
ja
adc
mov
pop
jne
outs
cmc
shr
cdq
mov
xchg
setne
cli
push
adc
mov
sbb
fsubr
xor
jbe
mov
cmp
sub
jns
dec
outs
daa
mov
sub
js
lea
xchg
pop
mov
add
daa
repnz
or
mov
retf
out
jmp
repnz
push
inc
xchg
mov
lock
sbb
mov
test
retf
loop
jno
test
iret
popf
inc
movs
jge
sbb
mov
inc
sub
cmp
imul
shl
out
lods
dec
(bad)
pop
(bad)
ins
ins
movs
inc
ret
mov
sub
int
aas
out
jecxz
jge
xchg
int3
pop
and
inc
outs
jns
lods
jno
pusha
ficom
ficom
(bad)
pop
mov
in
sar
jmp
or
movups
in
sub
jmp
inc
in
ficom
push
jl
push
int3
movs
mov
sub
jl
lahf
ins
pop
ds
(bad)
lock
or
sub
xchg
jo
js
fwait
xchg
outs
cmps
cs
icebp
(bad)
repnz
add
lahf
test
sbb
cmps
imul
aaa
repnz
and
pop
xchg
add
sbb
mov
pusha
mov
push
clc
xchg
mov
dec
inc
cmp
(bad)
ins
sbb
add
xchg
lahf
js
jge
or
gs
add
cmps
pop
adc
push
imul
push
sub
lahf
xchg
cmp
xor
jge
jno
shl
movs
das
push
dec
in
sub
push
push
in
push
inc
in
xchg
push
dec
in
mov
push
inc
pusha
mov
inc
push
test
mov
inc
push
cmp
xchg
push
inc
sub
push
sub
aas
(bad)
add
add
stc
inc
or
sub
cmc
inc
push
sar
icebp
mov
and
int
push
and
dec
jns
je
push
inc
mov
pop
mov
jle
xor
sbb
movs
sar
sub
or
sar
push
daa
jo
dec
pop
ds
inc
repz
ds
pop
fptan
adc
movs
push
jnp
lods
in
cmp
inc
mov
cmps
lods
(bad)
leave
stc
into
jns
dec
sub
and
adc
pop
rcl
pop
jno
movs
inc
sar
mov
jge
cmp
stos
test
retf
popf
or
or
xlat
cld
call
xor
sbb
ss
bound
push
(bad)
and
ret
imul
pop
dec
cmp
push
xchg
jns
aas
push
fisttp
sub
or
sbb
adc
or
out
test
aad
mov
xor
pop
dec
mov
movs
sbb
add
movs
cmps
dec
(bad)
sub
dec
add
push
int3
jge
hlt
jmp
add
sbb
fldcw
repz
add
lea
adc
inc
push
adc
sbb
push
arpl
stc
push
mov
sar
imul
std
icebp
xchg
xlat
jbe
xor
push
pop
rol
icebp
jecxz
sti
loopne
jb
xchg
cmp
pop
in
pop
mov
adc
cmp
mov
outs
(bad)
mov
cmp
jno
nop
call
test
xchg
(bad)
test
add
dec
push
mov
rcr
mov
xor
xor
fiadd
dec
mov
xchg
xchg
test
jg
test
cmc
pop
sub
cdq
and
inc
or
cmp
ss
cs
rcr
sub
mov
loopne
leave
stos
dec
test
outs
loope
and
ins
shr
adc
fcom
and
push
nop
dec
mov
nop
pop
addr16
mov
xor
jns
popf
pop
xor
cmp
mov
push
bound
jmp
adc
mov
or
xchg
je
sub
mov
jb
push
popa
stc
push
shl
retf
and
mov
or
dec
je
fst
loopne
inc
jb
and
push
(bad)
outs
cmp
mov
and
cwde
inc
stos
lock
cmp
fucomp
dec
out
cmps
mov
ret
dec
int3
inc
cli
mov
addr16
outs
xchg
adc
cwde
into
cmp
cmp
xchg
fild
(bad)
test
pop
aam
gs
push
dec
shl
inc
popa
les
mov
inc
push
pop
dec
outs
sub
movs
ffree
fisubr
pop
mov
(bad)
popa
inc
icebp
div
dec
clc
push
aas
xchg
repz
push
in
pop
xchg
fidivr
fldenv
add
rcr
jmp
test
cmp
sbb
dec
adc
stos
xchg
aaa
mov
inc
cmp
mov
fldenv
cmps
mov
inc
mov
fstp
icebp
add
cmc
jbe
jmp
push
aad
mov
pop
jg
pop
in
mov
pop
and
lods
mov
icebp
scas
enter
mov
pop
lods
push
out
push
cwde
idiv
lea
or
cmp
call
lods
out
dec
sub
dec
stos
push
or
fiadd
push
gs
test
push
outs
add
jbe
push
push
adc
outs
(bad)
adc
adc
js
sbb
retf
cdq
or
or
xchg
imul
adc
gs
jmp
(bad)
outs
loop
dec
stos
push
or
pop
jge
xchg
pop
xchg
fsubr
mov
test
les
loop
imul
rcl
mov
movq
inc
or
xor
push
cmc
pop
jmp
jmp
shl
mov
popa
adc
scas
xchg
adc
jbe
xchg
je
xlat
inc
dec
push
sbb
pop
dec
and
xor
pop
and
les
out
mov
xchg
push
ds
and
sub
mov
out
xor
and
or
stos
jecxz
or
fs
cmp
cmp
jmp
add
and
es
lds
jmp
adc
xchg
adc
and
xchg
mov
mov
push
sbb
mov
and
or
movs
ds
(bad)
sub
jp
mov
lock
or
pop
mov
addr16
adc
(bad)
mov
scas
retf
and
jno
dec
fs
adc
out
mov
pop
sub
test
data16
and
loope
int
repz
cmp
jae
mov
neg
addr16
or
int3
xchg
cmp
popa
inc
bound
ss
xchg
sub
jae
xor
mov
pop
sub
xchg
stos
pop
and
loope
inc
fnsave
(bad)
cld
adc
pop
push
xchg
sahf
inc
movs
es
xor
xchg
jb
stos
mov
leave
fstp
mov
jmp
test
retf
xchg
or
outs
or
inc
inc
out
mov
sbb
pop
mov
les
fwait
adc
push
or
sbb
xchg
sub
or
retf
xor
(bad)
push
cmp
xor
cmps
and
mov
(bad)
sub
push
jecxz
mov
or
ja
add
push
mov
loope
push
or
pop
mov
xlat
mov
aas
(bad)
cmp
mov
std
push
scas
mov
stc
je
sub
jbe
adc
xor
inc
jnp
retf
add
sti
bound
jmp
aaa
std
inc
xor
das
pushf
(bad)
out
ficom
std
fild
or
es
leave
mov
and
leave
iret
test
test
lods
dec
adc
cld
push
popa
movs
fdivr
(bad)
movs
cli
mov
leave
and
stos
xchg
stos
clc
sbb
test
test
(bad)
mul
jae
mov
sbb
mov
int3
arpl
frstor
pusha
adc
stos
std
push
mov
pop
jp
clc
aam
pop
bound
nop
out
cmp
mov
dec
cmp
lds
dec
int3
jg
sub
add
(bad)
iret
pop
xchg
call
cmp
adc
in
dec
cmp
lods
gs
mov
(bad)
int
cmp
gs
mov
ins
icebp
(bad)
inc
pop
hlt
mov
push
inc
in
push
dec
fs
push
inc
arpl
add
jmp
add
jmp
pop
sbb
push
int
mov
mov
stos
mov
fild
and
inc
movs
mov
daa
jle
jns
add
mov
ins
out
dec
or
icebp
mov
xor
es
movs
push
in
mov
add
lock
enter
pop
sti
cwde
jl
dec
mov
lods
mul
sub
xchg
xor
(bad)
xchg
bound
xchg
in
xor
push
xchg
pop
push
sahf
inc
mov
mov
ins
sahf
cld
(bad)
mov
xor
lahf
arpl
dec
xchg
sbb
cmp
xchg
hlt
sbb
add
xor
pop
mov
or
test
fdivr
adc
mov
pop
push
push
xor
in
test
sub
jecxz
mov
xchg
repnz
mov
sub
push
mov
mov
sahf
test
adc
mov
cmp
js
dec
sbb
ja
test
push
test
jmp
cmp
aam
xchg
cmp
dec
and
sahf
sti
pop
lea
sub
dec
retf
sbb
ins
mov
(bad)
sub
ret
leave
inc
ror
pop
pop
std
mov
sub
inc
dec
dec
dec
sub
add
ja
repnz
sub
and
jae
pusha
mov
in
add
inc
imul
inc
maskmovq
test
xchg
fild
sti
xchg
stos
dec
repz
add
call
popf
cmp
cmps
outs
outs
je
into
mov
sub
and
int
movs
sahf
pop
inc
stc
pop
rdmsr
jno
or
inc
ror
push
pop
enter
popf
pushf
mov
loope
xor
xor
call
pushf
stc
add
mov
add
jmp
sbb
mov
stc
sbb
lock
int3
sbb
mov
cmp
add
aad
add
xor
(bad)
iret
mov
push
sbb
dec
outs
hlt
cmps
inc
mov
sbb
dec
mov
ret
cmc
pop
rcl
pop
dec
add
dec
jno
adc
push
repz
or
out
aam
push
ja
dec
(bad)
cdq
dec
mov
cmp
ins
add
bound
inc
push
or
cmp
lods
sbb
xchg
mov
ds
xor
stos
ins
scas
fld
psubsb
pop
in
inc
je
data16
jns
push
cmp
pop
xor
pop
add
ins
or
or
sbb
gs
xchg
(bad)
jle
ja
and
jl
cmp
mov
iret
push
sbb
or
repz
push
dec
movs
jo
js
sbb
dec
xor
push
jge
add
cmps
fldcw
pop
and
add
mov
jb
xchg
lock
cmps
dec
dec
cmps
mov
arpl
xor
xchg
pop
pop
aam
cmp
into
ss
mov
int
push
test
or
sub
inc
pop
fmul
(bad)
into
ds
shr
xchg
ds
movs
call
sub
mov
and
(bad)
daa
aad
sub
test
jmp
xor
add
cmp
xor
push
outs
mov
and
in
aas
inc
inc
sbb
mov
ja
pusha
xchg
xor
sbb
int
jb
sub
sbb
sbb
mov
and
(bad)
daa
enter
daa
jno
mov
jp
push
add
pop
sbb
das
out
xchg
sub
jo
dec
or
pop
fld
and
jb
stos
inc
xlat
xor
pop
pop
jnp
jb
enter
pop
jne
lahf
in
ss
enter
jmp
sub
mov
mov
je
fs
and
push
stc
mov
or
jle
js
jne
mov
fxch
inc
movs
mov
pop
xor
cld
or
sti
cmp
js
push
stc
push
(bad)
sar
inc
inc
dec
pop
inc
bound
daa
into
jnp
jmp
pop
and
xchg
sbb
(bad)
mov
cmps
sahf
cmp
(bad)
push
cdq
stos
inc
jg
push
int
sbb
lock
mov
sahf
ins
data16
jnp
call
push
mov
jmp
(bad)
cwde
ret
cmp
cmp
cmp
cmc
leave
push
mov
lods
push
xchg
int3
stos
xchg
sbb
xchg
lock
and
mov
test
fdiv
sub
xlat
sub
mov
push
daa
mov
aad
sbb
dec
mov
cs
fisttp
sbb
mov
jp
call
retf
and
mov
sbb
jmp
fidiv
data16
add
fadd
mov
mov
popf
scas
pop
add
test
mov
shr
jl
xchg
dec
pop
ret
jb
hlt
mov
outs
sub
out
loopne
into
dec
cmc
je
retf
ret
das
mov
and
scas
fidiv
mov
jge
ror
ret
cmp
push
ja
inc
mov
push
stc
sbb
xchg
push
mov
mov
xchg
mov
mov
ins
fsubrp
dec
push
pop
daa
cld
test
jl
retf
dec
repnz
scas
je
or
ins
cmp
mov
jl
pop
(bad)
pop
pop
push
cmp
cmp
scas
push
xor
sbb
and
mov
inc
dec
cli
jecxz
js
pushf
(bad)
inc
out
ficom
xor
pop
aas
sbb
int
mov
push
jmp
push
adc
or
mov
in
ins
test
mov
fadd
cmp
mov
arpl
pop
loop
inc
jae
jp
xor
add
call
push
push
in
fcomp
lahf
sbb
xchg
test
fiadd
mov
fsubr
sbb
jmp
imul
xor
mov
pop
adc
adc
leave
mov
dec
add
cmps
xlat
pop
inc
rep
xchg
fwait
mov
xchg
inc
rcr
pop
movs
adc
push
popf
popf
aam
xor
mov
xor
pop
outs
jno
xchg
sar
daa
jmp
shr
cmp
and
scas
jl
mov
and
jle
arpl
or
call
ror
dec
rol
or
cmp
sub
mov
test
lahf
(bad)
mov
mov
sub
stos
add
out
fs
cld
push
push
mov
(bad)
pusha
push
call
sbb
push
push
or
test
popa
cmp
add
icebp
fdiv
push
fldcw
sbb
(bad)
stc
sub
dec
loope
pop
push
test
push
test
scas
cs
dec
sub
dec
cld
stos
mov
or
lock
jmp
push
pushf
fwait
das
(bad)
repnz
mov
dec
xchg
fidivr
stos
fdivr
add
cmps
push
add
mov
popf
mov
lahf
dec
dec
(bad)
mov
leave
xchg
iret
or
cmp
fadd
in
je
cmp
sub
mov
call
jnp
test
mov
or
dec
xor
mov
fist
add
jp
shr
add
out
xchg
hlt
sub
loop
dec
out
je
movs
mov
into
pop
adc
shl
pop
lahf
cwde
ins
loop
int3
mov
mov
pushf
mov
(bad)
fistp
jge
mov
test
push
js
push
sbb
data16
or
jmp
daa
pop
inc
inc
jmp
daa
cmp
das
mul
mov
jb
mov
and
lods
pushf
mov
inc
in
xchg
sbb
(bad)
shr
or
ds
lods
or
xor
mov
cmp
push
arpl
inc
sub
push
in
stos
shr
mov
in
mov
cmp
hlt
mov
inc
stos
sub
mov
fild
cld
jmp
mov
mov
js
xor
mov
or
or
push
inc
in
push
inc
in
mov
push
inc
out
xchg
out
pop
lds
mov
mov
or
push
imul
(bad)
push
mul
js
cmp
adc
adc
or
in
gs
scas
mov
inc
mov
movs
jg
fistp
sti
cmp
mov
or
pop
adc
and
or
ja
sbb
dec
into
xor
fsub
enter
hlt
lods
mov
ins
outs
jmp
lods
les
data16
ret
or
push
inc
fisubr
ds
sar
out
movs
mov
dec
loopne
inc
ins
jmp
cmp
mov
das
or
ret
dec
cli
out
ss
mov
int3
pop
cwde
(bad)
sbb
aas
push
arpl
dec
(bad)
repz
pop
loope
inc
movs
mov
dec
and
les
inc
mov
jmp
cmps
test
les
lods
ret
icebp
jno
inc
scas
adc
adc
out
push
aad
into
inc
cmp
leave
dec
push
or
xor
out
pushf
ss
cmps
dec
(bad)
dec
xor
fwait
sahf
in
adc
rol
push
pop
movs
adc
std
int3
daa
xor
or
stos
pop
pop
mov
out
inc
leave
sub
arpl
push
pop
sahf
movs
adc
pop
es
adc
push
icebp
jno
out
aad
lods
pop
imul
loopne
sbb
in
mov
mov
in
int
enter
mov
retf
add
call
xlat
mov
jmp
mov
das
lea
ins
mov
jp
ja
mov
iret
sbb
jmp
add
mov
dec
pop
sahf
add
xlat
pop
cmps
pop
or
push
mov
cmp
mov
push
(bad)
imul
movs
loope
js
sub
je
in
scas
jle
ins
shr
cmp
stos
cmp
dec
scas
inc
xor
gs
pop
mov
xor
or
or
inc
sub
sbb
leave
jmp
gs
int3
les
test
mov
(bad)
cli
lods
inc
mov
mov
fmul
pop
sar
inc
ins
fsub
or
jbe
repnz
and
aad
imul
pop
inc
mov
mov
mov
mov
cmp
lds
leave
out
push
mov
stos
mov
stos
retf
cli
std
clc
mov
adc
in
xchg
push
inc
mov
call
adc
aaa
stc
gs
out
push
dec
sub
fimul
add
mov
xor
dec
sub
sub
xchg
loop
es
in
push
dec
int3
adc
push
mov
call
cmps
les
xor
addr16
lods
fistp
fcomp
fistp
arpl
sub
jnp
mov
dec
cmp
pop
mov
in
ins
sbb
dec
mov
jno
pop
jne
imul
das
ins
xchg
hlt
pop
jbe
jne
sbb
sub
jae
push
inc
or
iret
inc
push
jb
in
jo
add
jne
cmc
fst
ds
or
out
jmp
mov
push
test
clc
inc
outs
fisubr
test
(bad)
inc
cmps
mov
add
cmp
adc
dec
out
xor
mov
dec
pushf
mov
rol
(bad)
idiv
ret
pop
popa
mov
cs
add
cs
addr16
sti
ins
icebp
adc
xchg
cmp
push
cmps
or
call
fmulp
pop
test
pop
sbb
pop
mov
inc
sub
rcl
ins
or
pop
call
and
inc
mov
mov
cli
push
ja
ja
popf
and
ins
shl
pop
out
pop
push
bound
sbb
sbb
js
mov
outs
sbb
lods
inc
sub
pop
mov
xlat
outs
pop
push
or
mov
sub
in
movs
enter
mov
mov
or
out
sahf
addr16
inc
clc
add
jns
sub
sub
xchg
shl
mov
nop
add
push
sbb
scas
ins
fwait
nop
sbb
ja
aam
mov
xchg
arpl
(bad)
idiv
outs
cmp
and
iret
loope
mov
xchg
sub
cmc
sub
sbb
push
jo
(bad)
and
in
sti
popf
jecxz
fs
shl
jp
cmp
fwait
mov
retf
cmp
cmp
push
stc
cmps
mov
push
xlat
scas
sub
xor
ret
das
xchg
pop
sub
stos
gs
fcmovb
outs
fmul
in
or
ds
cmps
jle
outs
enter
lahf
fmul
movs
sub
xchg
lods
cmps
push
jno
xchg
and
lds
and
test
aas
mov
adc
add
add
xor
out
push
out
add
int3
(bad)
adc
jae
dec
ja
lods
retf
fild
cmp
xor
movs
cmp
cmp
mov
ret
push
jle
mov
scas
pop
pop
int
and
ds
pop
pop
dec
shl
ja
dec
jbe
jg
mov
popf
and
jne
cli
cmp
jp
xchg
xchg
fsub
clc
adc
aad
dec
jecxz
imul
movs
jmp
pop
mov
stos
fs
add
push
push
call
loope
aas
dec
cmp
sbb
cmc
dec
mov
jo
lods
movs
sub
or
push
jecxz
jmp
dec
pop
cmp
int
fisubr
(bad)
enter
ins
cld
jmp
aas
sbb
lea
and
inc
push
jp
(bad)
outs
dec
movs
pushf
push
mov
or
in
outs
movs
and
sub
(bad)
sbb
cmp
sub
stos
call
xor
cmp
sbb
pop
add
ss
jo
fs
leave
mov
call
lea
cs
gs
or
out
sub
sub
add
push
stc
into
aam
add
xchg
add
xchg
mov
das
add
lods
nop
mul
cmp
test
xor
arpl
shr
call
js
mov
or
push
mov
imul
or
push
call
shl
lss
adc
in
lods
inc
inc
in
pop
or
mov
pop
(bad)
into
jb
mov
mov
sub
pop
sub
push
add
mov
js
movs
cmc
mov
jae
mov
sbb
cld
push
dec
repnz
icebp
mov
and
cmp
mov
aad
das
in
loop
fwait
mov
jnp
or
mov
xor
test
shl
adc
ins
lds
int
call
mov
ins
enter
mov
cdq
lods
xor
out
mov
cdq
in
push
jp
test
pusha
pushf
dec
push
hlt
lahf
mov
hlt
(bad)
aas
movs
inc
lock
mov
cs
ret
mov
je
mov
arpl
pop
ret
and
sbb
nop
test
push
sbb
ins
shr
jmp
ja
inc
lar
xor
dec
jns
and
out
jmp
jmp
and
je
shl
daa
dec
and
inc
cld
xchg
in
mov
stc
stos
(bad)
xor
xchg
mov
stos
mov
sbb
jp
push
mov
mov
movs
push
hlt
ins
dec
test
dec
mov
cli
arpl
dec
aam
mov
cli
cmp
jmp
pop
cmc
ficomp
xor
mov
clc
pop
add
aas
add
or
clc
push
sar
sbb
push
push
ror
fnstcw
je
out
add
mov
jmp
pop
ins
ficomp
stos
ins
xchg
mov
std
jmp
sbb
add
dec
sub
inc
lods
mov
pushf
(bad)
test
mov
daa
pop
push
mov
or
mov
loop
or
xchg
mov
jae
lds
or
xchg
out
fdivp
sub
mov
xor
push
adc
test
inc
sub
call
dec
test
stos
pop
xor
lock
out
sahf
mov
leave
lods
adc
es
mov
ret
add
sbb
stos
lods
in
jns
aas
jg
and
xor
fst
jae
fwait
das
repnz
div
popa
cwde
lods
xchg
push
in
adc
mov
out
mov
in
push
ins
cld
xor
inc
inc
jne
mov
repz
inc
sub
xchg
add
cmp
dec
push
push
push
retf
pop
dec
cdq
adc
(bad)
loopne
pop
addr16
xor
adc
shl
add
fsubr
push
arpl
fild
dec
out
sbb
push
sti
bts
(bad)
jne
in
pop
cmp
ins
push
dec
imul
push
shl
mov
push
mov
sbb
stos
xchg
icebp
test
jge
mov
inc
pop
xor
push
cmp
xor
adc
mov
mov
sbb
movs
mov
jmp
shr
adc
ret
dec
leave
push
addr16
inc
ins
sub
cwde
xchg
pop
inc
inc
mul
xor
sbb
pushf
lea
sbb
mov
retf
fmul
push
and
test
sahf
(bad)
(bad)
or
in
imul
sub
push
fdivr
add
das
fs
pop
(bad)
xor
mov
lods
sbb
iret
aad
mov
int3
in
sub
push
jmp
push
js
retf
das
mov
sti
add
mov
les
movs
mov
sub
mov
movs
idiv
sub
stos
ret
stc
push
jge
mov
ins
cmps
test
mov
mov
dec
cmc
sub
mov
arpl
push
cmp
inc
dec
ins
ins
lods
sub
outs
cmc
xor
jne
sub
dec
mov
jle
sub
sti
pop
in
mov
xor
push
cmovg
(bad)
out
pop
jbe
clts
cs
mov
jo
xor
ja
dec
icebp
mov
(bad)
movs
ficomp
stos
jbe
adc
ins
(bad)
sub
sbb
mov
pop
jmp
push
rcl
ins
jle
enter
in
add
or
outs
xor
test
jl
pop
push
out
test
bound
dec
into
sub
mov
sbb
les
jecxz
push
outs
or
pusha
pop
pop
mov
mov
jge
(bad)
(bad)
stc
pop
add
mov
xchg
mov
sub
push
fadd
ds
sbb
lahf
adc
or
pop
mov
jmp
loope
pop
pop
sub
sbb
jne
add
ds
jmp
sub
shr
inc
mov
fiadd
push
in
cmp
lods
mov
dec
mov
mov
push
push
hlt
stos
push
push
hlt
stos
push
push
les
es
fcom
ss
cli
outs
sbb
ficom
fs
cmp
cmp
je
push
les
in
sbb
mov
scas
in
out
cmps
push
les
ins
les
es
dec
xchg
inc
in
dec
loop
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
dec
jmp
cli
push
inc
in
adc
adc
push
inc
in
movs
xchg
mov
push
dec
in
mov
push
fs
ds
mov
test
inc
in
mov
push
dec
hlt
mov
push
inc
jmp
inc
ins
ficom
push
mov
mov
or
in
mov
push
dec
ins
mov
ret
dec
cmc
mov
push
jns
jnp
int3
in
repnz
push
popf
add
inc
out
es
lods
jle
and
icebp
jae
adc
ret
cli
or
push
mov
dec
test
inc
mov
pop
and
xchg
in
xchg
ins
dec
test
or
and
adc
call
loop
inc
fdivr
lods
or
dec
inc
in
fld
mov
inc
mov
sbb
pop
ss
call
out
shl
push
mov
and
fild
(bad)
test
lods
add
rcl
sti
imul
test
adc
mov
jns
fwait
xchg
xor
lods
inc
(bad)
jmp
pop
pop
sub
xchg
pop
out
xor
shl
in
mov
je
cli
call
out
mov
push
mov
iret
pop
jmp
repnz
pop
cmc
xor
push
jno
retf
mov
cmp
in
ret
aam
call
xor
loop
xchg
push
dec
adc
add
ror
and
inc
add
or
push
jno
pop
xlat
cmp
pop
lock
add
inc
push
icebp
cmc
pop
sar
jne
adc
jl
sub
xor
imul
push
in
in
or
pusha
and
sub
jne
push
dec
outs
cwde
ins
(bad)
mov
vpslld
(bad)
dec
cmc
push
fneni(8087
push
and
add
mov
cmp
add
mov
jo
(bad)
leave
loope
es
adc
mov
jmp
mov
push
sbb
mov
pop
(bad)
repnz
rdmsr
jp
rcl
inc
fstp
inc
ja
cdq
ror
mov
sub
jle
ins
jp
pop
mov
out
js
cld
xchg
dec
jl
or
push
mov
mov
push
dec
in
mov
push
imul
test
inc
les
push
dec
int3
mov
push
fs
int3
aad
xchg
int3
in
scas
std
int
push
push
cmp
xchg
dec
fs
mov
shl
inc
dec
scas
cmp
sub
and
adc
arpl
les
jmp
xchg
lock
je
cmp
rol
repnz
int
test
bound
stc
leave
sbb
stos
inc
add
pusha
mov
push
int
scas
test
xchg
scas
std
loopne
sub
and
sub
xacquire
fcomp
jg
cmp
or
dec
aaa
adc
loop
lahf
enter
addr16
add
add
add
push
rcr
cdq
mov
dec
inc
xor
inc
cmps
jmp
mov
mov
jno
adc
scas
jge
ja
stc
test
lods
jle
rcr
jmp
inc
(bad)
repnz
fwait
aad
fdivr
jle
dec
shl
mov
xor
pop
xor
xchg
in
inc
push
cli
sub
imul
shl
sub
pop
xchg
gs
mov
and
xchg
enter
arpl
pop
(bad)
ud0
jge
outs
jl
mov
ins
arpl
adc
push
cmp
pushw
sahf
push
dec
xor
sub
and
sbb
xchg
ja
adc
adc
sub
or
inc
dec
and
fisubr
cli
jo
fcomp
(bad)
jbe
adc
jle
inc
jp
dec
adc
xchg
aas
mov
mov
adc
inc
inc
fisttp
sti
cmp
outs
adc
mov
sub
cmc
xor
xor
or
inc
jl
jae
ds
push
fwait
pop
ja
mov
push
retf
ds
test
leave
jbe
fs
and
cdq
sbb
xor
mov
mov
stos
imul
or
dec
nop
dec
or
das
(bad)
jle
loopne
jl
xor
jmp
cld
pop
bnd
dec
jge
pop
and
stos
clc
cmp
outs
js
cli
adc
xor
push
jbe
clc
out
pusha
push
js
pushf
iret
retf
mov
shl
and
cli
out
(bad)
push
mov
jae
int
int
imul
mov
pop
mov
mov
adc
inc
sbb
leave
fwait
lods
mov
inc
pop
lods
lock
xchg
push
pop
shl
pop
mov
dec
push
std
xor
cmp
mov
mov
(bad)
and
scas
es
ins
(bad)
jae
pop
xchg
push
int
adc
dec
rcr
adc
or
loopne
xchg
dec
dec
rcr
int
ret
call
fst
lock
std
imul
dec
jo
pop
inc
pushf
je
(bad)
stc
pop
jg
into
add
cli
rcr
pop
stos
xor
xor
jp
fsubr
in
loop
iret
imul
inc
mov
pop
ror
popa
ja
jo
in
adc
cmp
push
aad
pushf
bound
inc
or
ror
and
out
and
sub
cli
cmp
aaa
hlt
cmp
jmp
mov
fnsave
ds
out
fldenv
dec
hlt
sbb
jl
xchg
ds
in
mov
push
(bad)
in
push
(bad)
push
int
and
fsub
cmp
dec
popa
xor
inc
in
or
adc
or
push
shl
out
je
retf
xor
aad
or
iret
sub
adc
mov
call
xor
call
mov
mov
rcl
fimul
pslld
push
pusha
jmp
push
push
cmps
push
xor
mov
cdq
imul
push
popf
cmp
cmc
or
in
jb
fisubr
iret
inc
ins
pop
leave
cs
inc
xor
or
push
jb
out
xchg
sbb
jecxz
cwde
mov
jae
lds
xchg
sti
ret
xor
(bad)
or
imul
xchg
inc
cmps
mov
and
jp
shl
scas
mov
sbb
cdq
sbb
out
movs
mov
arpl
popf
enter
aas
mov
frstor
mov
nop
pop
dec
inc
cmp
sbb
add
jmp
add
dec
and
xchg
or
inc
and
push
fcmovne
pusha
(bad)
mov
xchg
sbb
add
xor
prefetch
or
(bad)
lods
inc
and
sti
jnp
(bad)
rol
sti
cs
outs
out
das
rol
push
pop
jno
cs
test
ret
shl
aam
adc
lds
retf
jb
and
pop
add
ds
arpl
xor
dec
adc
jne
add
push
and
ja
jmp
ins
pop
out
mov
not
cld
or
out
or
cli
cmp
loope
xchg
in
test
sbb
mov
xor
int
pusha
dec
movs
fcmovu
dec
xchg
imul
xchg
sbb
stc
inc
xchg
test
xchg
sbb
pushf
and
and
lea
dec
loop
std
push
mov
mov
scas
push
aam
push
je
call
fs
push
inc
(bad)
sub
inc
hlt
cmp
inc
lods
add
jnp
pop
loope
add
or
in
fld
push
xchg
xor
pop
pop
mov
xor
std
ror
stos
push
adc
lea
neg
mul
add
adc
fbstp
popf
jbe
xor
aad
mov
jbe
push
out
cs
cdq
cmp
jge
aas
dec
in
jmp
ret
pop
dec
add
lods
mov
xchg
pop
jbe
mov
mov
add
mov
or
in
out
pop
test
(bad)
fidiv
sub
mov
jle
dec
jg
pop
add
cld
outs
cld
ret
je
sub
mov
sub
sbb
nop
sbb
clc
aam
cmp
aam
dec
or
pop
shr
mov
cld
(bad)
sub
xchg
cwde
jb
test
sbb
or
je
push
sbb
and
mov
xchg
mov
cmp
movs
xchg
sbb
es
ins
push
and
mov
fnsave
aad
cmp
cld
cmp
cmps
pusha
jnp
inc
(bad)
lock
sub
daa
mov
scas
mov
xchg
add
or
jns
jmp
sub
test
sbb
xor
in
fdiv
scas
ins
cmp
dec
(bad)
imul
ret
inc
movs
ret
add
push
icebp
mov
dec
fcom
fidiv
inc
lahf
ret
pusha
add
(bad)
in
xlat
xlat
and
pop
out
ret
xchg
pop
pop
stc
je
repnz
arpl
push
pop
fnstenv
(bad)
sahf
lock
bound
mov
jp
outs
movs
pop
enter
arpl
call
mov
mov
push
jb
out
inc
rcl
jmp
sahf
and
aas
mov
cmp
es
push
pop
shl
cmp
mov
mov
mov
ds
lods
stos
push
je
xchg
push
pop
in
dec
dec
fs
push
inc
mov
jmp
sahf
ror
jge
mov
inc
mov
sbb
lahf
dec
clc
xor
fcomip
daa
sbb
cmp
sbb
dec
mov
mov
and
cmp
mov
test
or
cwde
and
test
dec
mov
add
shl
js
leave
or
xchg
mov
(bad)
sub
(bad)
sub
dec
addr16
loop
lea
and
sub
sub
sahf
push
adc
add
pusha
add
mov
jnp
sub
jo
scas
retf
test
aaa
inc
sbb
iret
mov
mov
push
shr
(bad)
lea
add
int3
add
xchg
and
add
out
cdq
fldenv
aam
icebp
mov
fs
mov
and
test
mov
daa
sbb
cmps
rol
or
xchg
jb
add
xchg
into
int
pushf
pushf
inc
and
jne
jnp
jge
fst
fwait
or
test
xor
sbb
cmp
(bad)
jae
dec
popa
cld
xor
ins
(bad)
jne
mov
and
stos
push
stos
push
cld
stos
imul
and
int3
xchg
mov
sbb
mov
fwait
sahf
cld
jle
and
js
jmp
sahf
popa
cs
into
imul
pop
and
mov
add
xchg
and
call
dec
dec
jp
mov
mov
sbb
pop
retf
rol
ja
push
xor
mov
push
int
inc
mov
in
inc
je
mov
test
arpl
adc
lds
cmp
repz
loop
sub
jg
clc
add
mov
fnsave
pushf
into
repnz
pop
pop
jmp
inc
add
(bad)
fldenv
mov
dec
cdq
into
nop
cmc
dec
xor
popa
mov
nop
stos
mov
fbstp
dec
js
push
ja
inc
test
jbe
mov
pop
mov
arpl
fadd
mov
mov
cmp
test
dec
mov
xor
mul
js
std
popa
call
dec
push
aas
dec
scas
add
scas
(bad)
push
dec
movs
cmps
pop
out
cdq
fcomp
cdq
mov
lock
(bad)
cli
sbb
ror
out
push
mov
(bad)
mov
mov
inc
mov
enter
mov
push
loope
cwde
xchg
and
mov
(bad)
sub
sbb
jo
jg
cmps
das
jmp
mov
dec
push
push
test
mov
mov
ins
sbb
sub
and
jae
ins
sub
sbb
sub
(bad)
pop
push
jecxz
xchg
ror
xor
retf
mov
xor
xrelease
pop
inc
mov
lahf
xchg
std
mov
(bad)
jp
jge
jno
hlt
retf
mov
daa
sbb
retf
ror
jl
mov
ret
jbe
cmp
pushf
movs
or
cli
lods
mov
movs
sbb
call
test
hlt
shr
arpl
inc
aam
pop
xchg
pop
mov
adc
xchg
lods
mov
fwait
mov
sbb
ret
imul
enter
mov
sbb
add
ss
int
pusha
xchg
out
dec
test
xchg
js
jmp
pop
addr16
data16
pushf
js
and
outs
(bad)
and
lods
and
mov
les
bound
mov
dec
mov
in
les
data16
fistp
sub
mov
je
(bad)
les
sub
xchg
lahf
(bad)
rcr
cmc
mov
jb
dec
adc
stc
pop
jb
push
jecxz
ja
int
mov
pop
xchg
loope
pop
mov
push
mov
push
sub
xor
pop
push
sbb
inc
mov
jecxz
retf
push
xor
add
dec
jne
jne
and
mov
pusha
adc
jg
ret
push
lods
or
inc
adc
cwde
fcom
mov
pop
scas
call
add
adc
dec
stos
jg
cmp
arpl
push
ret
bound
mov
pop
rcr
pushf
ins
or
or
push
sti
or
test
xor
sbb
and
loopne
in
pop
clc
dec
xchg
jae
out
sub
outs
cmp
jnp
ss
outs
xor
movs
mov
xor
pop
sub
adc
mov
icebp
xchg
movs
ins
sub
sahf
mov
daa
call
sub
xchg
xchg
test
std
or
loope
dec
mov
mov
pop
adc
ss
test
jmp
clc
push
shr
dec
ror
mov
push
xor
sub
xor
pop
and
xlat
outs
lea
cmp
xchg
leave
cmps
test
pushf
(bad)
hlt
in
adc
lea
mov
push
(bad)
dec
push
add
xchg
lahf
add
loope
adc
pop
lea
scas
adc
mov
pop
mov
push
dec
imul
in
dec
fxch
jne
popa
enter
or
dec
pop
nop
jmp
test
inc
sub
lock
mov
ret
and
and
and
mov
adc
cli
or
test
cdq
ret
outs
loopne
inc
xchg
add
bound
xchg
aad
movs
add
idiv
pop
xlat
fwait
lahf
xchg
sar
inc
xchg
lods
aad
mov
pop
mov
and
and
outs
mov
mov
inc
out
adc
xchg
jg
pop
xchg
fcomp
fstp
jnp
pop
das
push
xor
add
inc
das
pop
xor
dec
cld
(bad)
movs
cld
pop
aas
add
xchg
pusha
and
jno
(bad)
lods
sbb
ror
rcl
data16
inc
pop
hlt
enter
mov
push
jae
lahf
arpl
xor
xchg
mov
fist
sbb
mov
in
test
xlat
loop
xchg
neg
bound
jmp
js
pusha
pop
lahf
jmp
adc
add
push
pusha
xchg
mov
outs
enter
fmul
sub
cmps
out
push
cwde
fistp
shl
ins
or
in
add
outs
sub
dec
lods
push
cmp
(bad)
test
out
jmp
icebp
push
int
mov
std
pop
xchg
dec
(bad)
(bad)
ret
call
mov
loope
(bad)
les
jno
clc
aaa
stos
popa
add
jbe
pop
mov
(bad)
mov
repnz
aam
test
cmps
es
jno
stc
(bad)
fidiv
ja
(bad)
stos
cmp
sub
enter
fidivr
loopne
jg
cmps
gs
mov
xor
lods
sbb
inc
mov
cmc
xchg
mov
sub
pop
pop
push
(bad)
mov
dec
add
lods
lea
int3
or
sbb
dec
cwde
rcl
aas
cdq
ja
dec
das
out
push
in
jle
sar
in
stos
jge
sbb
pop
sahf
dec
adc
mov
aaa
dec
and
ja
sbb
mov
and
jb
jecxz
hlt
or
xor
ja
sub
(bad)
retf
or
mov
adc
stos
sbb
lahf
pop
mov
bound
mov
sbb
and
int3
or
mov
xchg
pop
data16
inc
or
jne
jns
jne
icebp
movs
std
fnsetpm(287
xchg
push
push
and
dec
das
jmp
mov
inc
std
les
pop
pop
or
loope
mov
sar
fsub
add
pop
aad
mov
inc
xor
in
mov
lods
adc
jecxz
sahf
sub
adc
mov
arpl
scas
fisttp
sti
call
inc
pushf
popa
adc
jecxz
cmp
into
cwde
cmp
(bad)
add
and
pop
add
jb
mov
arpl
lds
and
dec
mov
cld
pushf
scas
(bad)
push
mov
pop
in
inc
sbb
jnp
adc
pop
jl
sub
pop
mov
cmp
popa
mov
dec
xor
add
inc
icebp
mov
clc
dec
jge
adc
test
clc
xor
movntq
stos
sahf
pop
push
(bad)
mov
stos
push
dec
jo
pop
xor
xchg
sub
ja
cmp
jmp
push
ins
dec
adc
test
(bad)
cld
ror
js
pop
push
jmp
fistp
mov
mov
and
bound
imul
inc
repz
push
jmp
(bad)
xchg
cmp
sub
rol
push
out
jbe
cmp
dec
adc
mov
mov
shl
cmp
push
pushf
movs
xor
pop
rcr
and
and
mov
push
mov
out
xchg
rcr
jge
add
shr
lods
add
repz
inc
mov
xchg
loopne
add
push
xchg
sub
mov
push
mov
sbb
sbb
push
das
sbb
xchg
ins
add
repz
inc
add
test
jae
inc
push
xor
xor
aas
movs
sub
jp
mov
orps
mul
jl
inc
je
idiv
push
mov
push
in
js
xchg
neg
enter
ins
gs
add
cmp
jae
or
das
cs
mov
(bad)
xchg
push
jp
rcl
inc
mov
test
aad
sbb
lods
mov
jle
lods
push
daa
pop
jno
movs
pop
push
jo
push
test
push
push
call
jns
in
retf
cmp
fcom
imul
pushf
or
daa
inc
cmp
out
imul
mov
cmc
push
call
test
pop
jp
xchg
xchg
fsub
adc
and
inc
(bad)
jmp
(bad)
sub
jmp
stc
bnd
mov
dec
xchg
sbb
bound
or
or
(bad)
dec
xor
xor
push
xchg
int
mov
push
(bad)
lea
ds
or
or
popa
icebp
or
sub
aaa
dec
xchg
mov
push
test
mov
adc
mov
sar
push
ret
or
mov
jb
rcl
aad
cwde
lea
push
ss
push
jnp
adc
and
push
cmp
test
movs
mov
mov
fiadd
inc
sbb
pop
and
or
pop
fs
adc
jg
cmp
iret
sti
sub
push
(bad)
jle
jle
or
bound
push
mov
mov
sub
mov
or
popa
push
inc
fcomi
retf
arpl
sub
imul
adc
lds
movs
imul
fld
jnp
ret
or
dec
mov
lock
pusha
jl
js
add
cmp
xor
scas
dec
mov
inc
clc
add
call
in
push
push
in
mov
dec
in
push
dec
out
xchg
in
xor
enter
inc
data16
xchg
mov
mov
mov
inc
in
dec
mov
mov
push
loope
xadd
mov
mov
icebp
cmc
mov
sbb
push
cmps
push
dec
cld
mov
out
jno
nop
nop
mov
in
cdq
xchg
in
pop
xchg
mov
sub
(bad)
clc
push
cmps
test
outs
icebp
movs
mov
(bad)
fld
movs
add
aas
loope
add
int3
inc
sub
inc
cwde
adc
dec
ret
scas
push
adc
test
mov
inc
xor
adc
(bad)
jmp
mov
lods
mov
mov
retf
int
out
push
jle
fmulp
mov
mov
pop
mov
sub
or
mov
in
mov
outs
xchg
xchg
dec
and
lea
cs
pop
cmp
fwait
pop
jo
xlat
retf
xchg
and
and
mov
mov
xchg
cdq
cmps
outs
(bad)
jmp
jbe
sti
cmc
jl
test
popf
push
mov
lock
cmp
pop
jb
mov
fsub
cmp
aas
sub
popf
pusha
xchg
or
bound
mov
lahf
cwde
fs
push
add
sahf
cld
and
cmp
fxch
(bad)
pop
push
adc
add
sti
push
dec
xchg
jne
add
mov
push
jo
cmp
outs
xor
scas
xchg
xor
pop
mov
push
gs
enter
jbe
push
retf
xchg
mov
cs
out
sar
lods
int
cs
mov
inc
in
leave
mov
jmp
int3
pop
leave
mov
xor
out
lods
xchg
imul
add
call
fbstp
dec
std
cmp
test
and
and
int
jnp
jbe
loopne
sub
leave
call
std
rcr
scas
push
xor
(bad)
cld
(bad)
outs
fistp
adc
sub
push
das
jb
ror
sbb
rcl
push
or
mov
sbb
xor
fwait
fwait
push
adc
pop
(bad)
and
xor
shl
cld
imul
jno
out
push
cmps
fwait
mov
ret
xor
pop
mov
mov
test
imul
in
mov
stos
aaa
inc
js
(bad)
jmp
jle
sub
sahf
in
jno
xchg
push
mov
push
test
adc
lock
sbb
xor
into
mov
idiv
push
xor
mov
sbb
imul
mov
xchg
mov
mov
xor
rol
addr16
sub
adc
sbb
add
xor
ror
das
cmc
or
push
es
sub
fsub
jb
loop
or
fdiv
jbe
retf
ret
sbb
es
sti
sbb
aad
dec
call
cwde
les
in
cld
std
adc
je
dec
add
(bad)
ins
dec
jbe
out
cmp
xor
cmp
scas
sub
jmp
movs
mov
push
mov
retf
sbb
bound
add
xor
pop
inc
adc
ja
jecxz
push
ror
mov
stc
or
and
movs
cmp
pop
int3
in
movs
imul
push
leave
add
mov
rcr
sbb
sbb
or
pushf
xchg
add
(bad)
adc
inc
fcomp
add
fild
sbb
sar
clc
inc
scas
into
lds
mov
jnp
xchg
js
ja
fcomp
add
movs
push
shl
and
idiv
hlt
sub
inc
push
outs
imul
mov
pushf
adc
leave
aad
fdivr
retf
ss
dec
xchg
adc
jg
ss
mov
push
test
mov
and
loope
nop
retf
data16
pop
xor
sbb
adc
popf
in
dec
js
fidivr
aaa
xchg
cli
add
pop
pop
pop
fild
scas
pop
cmp
or
ins
sbb
test
xor
push
pop
aas
cmp
sub
mov
(bad)
out
sahf
movs
sbb
cli
aaa
cwde
(bad)
inc
pop
ret
mov
inc
(bad)
jle
popf
cs
xchg
sahf
push
lahf
xor
and
out
test
dec
push
cmp
xchg
cmp
mov
xor
call
(bad)
xor
mov
addr16
add
ds
mov
sbb
dec
outs
push
push
inc
movs
mov
(bad)
pop
xor
cdq
mov
les
sbb
outs
dec
ins
add
sub
xor
and
mov
add
js
and
cli
add
mov
or
dec
sub
call
cs
div
xor
jne
pop
dec
xor
js
sbb
fnstcw
mov
push
and
pusha
adc
movs
fs
pop
sub
xor
add
and
jno
arpl
stos
mov
sar
push
inc
mov
stos
loope
test
mov
sbb
mov
xor
cmp
jbe
dec
push
and
sbb
xor
cmp
pop
push
xchg
popa
fimul
ins
or
inc
push
inc
in
xor
add
inc
out
adc
shl
stos
xor
movs
stos
pop
dec
std
jbe
cmps
xor
add
cmc
xor
jo
mov
mov
dec
das
clc
aam
mov
ins
jp
pop
test
fldcw
test
pushf
inc
xchg
mov
pop
and
loope
xor
std
mov
xchg
mov
xor
sub
push
sti
sub
mov
and
scas
test
cwde
jno
cmp
sbb
fbstp
jg
in
dec
arpl
repz
xor
sbb
mov
mov
mov
retf
outs
xor
add
test
shl
dec
xor
push
push
adc
inc
ror
xor
cmp
jns
jmp
and
lea
pop
(bad)
popa
push
(bad)
cmp
aaa
inc
lea
(bad)
adc
push
jo
pop
loopne
hlt
fcmovb
(bad)
jmp
mov
xchg
popa
inc
out
push
jne
mov
hlt
xchg
mov
dec
add
and
push
inc
mov
add
repz
mov
xchg
jne
into
scas
sti
outs
inc
dec
or
xor
add
inc
jle
pop
mov
rol
popa
(bad)
xlat
push
mov
movs
lahf
pop
ficom
or
addr16
rcr
jl
add
jg
and
pop
ror
push
add
xor
jecxz
in
out
jmp
lds
popf
sub
and
data16
sub
xchg
cmps
mov
dec
sar
clc
xor
sub
adc
dec
jl
cdq
jmp
imul
fstp
loopne
scas
js
cvtps2pi
fmulp
mov
xchg
mov
mov
scas
cmp
sub
adc
xchg
cmp
dec
and
or
add
xor
neg
mov
dec
push
mov
imul
pop
cmps
adc
leave
push
sbb
or
into
aaa
pop
xor
shl
adc
out
xor
mov
xchg
push
stos
das
cmp
stos
addr16
mov
lods
sbb
mov
test
push
into
push
mov
aam
and
xor
dec
aas
ret
cli
and
jg
loope
cmp
jb
bound
jmp
cmp
dec
sub
dec
mul
retf
jo
jle
sub
(bad)
out
icebp
xor
sbb
pusha
mov
xchg
stos
mov
fist
mov
mov
fwait
in
loop
inc
in
ficom
push
jl
push
int3
movs
mov
sub
jge
lahf
ins
clc
cs
(bad)
sub
pop
mov
adc
int3
lock
add
das
inc
fisttp
cwde
pop
ins
mov
inc
sub
xchg
fdivr
lahf
or
(bad)
lock
pmaxsw
push
(bad)
or
out
xchg
mov
and
repz
dec
and
dec
mov
jge
aas
push
imul
dec
jg
lahf
push
sbb
sub
jge
ds
mov
lock
jge
movd
lock
in
sub
push
fs
mov
push
dec
in
mov
push
inc
out
xchg
ins
ds
bound
add
in
or
mov
imul
jge
sbb
jg
jne
dec
pop
xor
xchg
xor
sub
cmc
lds
pop
jns
inc
aas
xchg
or
add
loope
xlat
sub
push
out
mov
jmp
inc
inc
les
inc
inc
test
push
sahf
(bad)
jbe
mov
scas
shr
xchg
enter
test
cmps
xchg
retf
loopne
std
lods
out
js
sub
rcr
fbld
or
mov
fldcw
or
out
cmp
inc
fwait
dec
fs
jno
jle
mov
shl
push
jno
add
aas
lods
sub
dec
mov
and
fcom
fst
cmp
push
scas
retf
ret
mov
inc
ins
xchg
fsubr
lods
xor
xlat
mov
cdq
xchg
pusha
loop
test
(bad)
sti
movs
movs
push
mov
inc
dec
shr
jb
shl
and
or
(bad)
pusha
pop
cmp
and
aas
dec
xor
loope
inc
cmc
dec
mov
fcom
and
stc
fimul
adc
xchg
jge
push
dec
jle
xor
xchg
mov
daa
xchg
(bad)
in
and
mov
lahf
lods
xor
pushf
xchg
popa
mov
(bad)
mov
mov
mov
out
hlt
mov
cmps
test
test
mov
jmp
adc
xchg
fisttp
loopne
es
jecxz
cmc
xor
adc
adc
adc
dec
inc
shr
cmp
in
fwait
movs
ins
adc
bound
out
gs
fs
in
or
adc
pop
add
cmp
retf
jp
or
push
dec
cmc
dec
cmp
out
ds
xlat
setns
fisttp
inc
aas
add
repz
ret
test
or
iret
mov
int
cmp
aaa
or
ror
cdq
mov
repz
or
neg
mov
mov
jg
pop
out
mov
stos
add
cmps
fbstp
jno
rol
cmp
in
fcmovb
lock
jnp
test
add
dec
aam
mov
movs
shl
sbb
inc
pop
sti
add
or
mov
inc
or
adc
push
pop
fstp
fs
sbb
push
sbb
fisubr
mov
ss
inc
int3
jmp
in
mov
dec
fs
inc
in
push
lds
push
inc
pusha
xor
imul
fwait
in
hlt
pop
adc
push
int
mov
mov
mov
sub
sub
pause
(bad)
push
push
jae
adc
cmp
bound
inc
aaa
outs
push
dec
iret
call
lods
(bad)
inc
sbb
aad
cs
leave
inc
sahf
cmp
jecxz
xchg
cwde
xchg
mov
test
adc
(bad)
push
push
mov
lods
fbstp
mov
push
out
cmp
inc
cli
mov
mov
add
(bad)
scas
out
mov
adc
cmp
retf
sti
(bad)
pusha
mov
sub
jo
test
rol
int
mov
cmp
popa
sbb
dec
test
push
push
add
pop
xchg
push
mov
dec
pop
mov
add
out
hlt
push
push
pop
fcmovnbe
jge
jl
mov
das
adc
dec
or
xchg
icebp
and
jp
push
fucomip
pop
pop
arpl
adc
add
adc
and
aad
neg
ins
mov
pop
rcr
repnz
dec
cs
test
mov
les
xchg
leave
shl
in
cdq
mov
dec
pop
mov
cld
sub
mov
pop
lds
mov
sbb
dec
je
mov
sbb
sub
test
pop
aad
repz
xor
lahf
fwait
cmp
xchg
xor
mov
loop
and
inc
cli
pop
push
out
aaa
scas
cwde
loope
je
mov
sbb
xor
or
test
cmp
jge
jmp
and
sahf
cmp
mov
jbe
(bad)
call
sbb
sbb
jg
mov
dec
jmp
adc
call
and
sbb
jae
shr
adc
int
ins
repz
xchg
push
ins
sbb
add
cmp
jne
cs
in
jno
cmp
pushf
sub
cmc
les
inc
push
xchg
loope
xchg
pop
iret
inc
in
mov
daa
mov
jmp
dec
push
inc
inc
(bad)
push
mov
test
xor
inc
outs
adc
sbb
iret
movs
or
aas
cmps
jecxz
std
loope
cmp
adc
cmc
pop
inc
push
(bad)
hlt
xchg
sub
or
push
rol
(bad)
aam
js
add
loop
out
xor
into
xor
pop
or
js
loopne
call
rcr
push
push
in
call
pop
unpckhps
lea
sahf
push
sbb
jecxz
xor
xchg
mov
fiadd
fdiv
pusha
stc
in
dec
pop
cmp
js
mov
gs
arpl
in
data16
inc
xor
shr
mov
lea
dec
mov
push
popf
mov
mov
jne
mov
mov
es
int3
mov
inc
in
mov
push
dec
fs
push
inc
out
mov
lds
pop
mov
fwait
in
mov
inc
sbb
push
int
mov
dec
xchg
popf
push
pushf
inc
rcl
adc
cmc
mov
and
jecxz
ret
or
repnz
inc
into
mov
pop
lock
lea
mov
out
ret
cmp
daa
bound
repz
sub
ins
sbb
lahf
jle
(bad)
cmp
enter
cli
jg
pop
push
shl
jmp
lahf
push
in
ins
ins
xchg
sar
and
and
fwait
scas
pop
pop
mov
out
stos
jne
icebp
dec
loope
ds
arpl
dec
mov
mov
outs
out
(bad)
adc
mov
test
or
xchg
dec
jge
out
adc
out
adc
aas
shr
dec
mov
jge
stos
movs
push
or
std
ss
xchg
imul
repnz
mov
pop
cli
sub
sbb
cmp
dec
call
arpl
push
push
scas
sbb
dec
sub
popf
lock
(bad)
sar
lods
cli
stos
fsub
mov
push
mov
retf
out
stc
cmp
mov
aaa
pop
je
cdq
aaa
cmp
icebp
push
add
or
mov
or
xchg
mov
outs
dec
and
push
add
push
int3
sbb
lock
push
movs
in
and
in
sub
adc
shr
mov
stos
xchg
add
sbb
inc
pop
adc
sbb
xchg
pop
jb
cmp
arpl
mov
mov
pop
inc
jge
outs
jecxz
adc
sbb
mov
(bad)
mov
jmp
mov
inc
cmp
xchg
cmps
xchg
sub
das
sbb
call
jge
jp
mov
push
jno
fisttp
inc
je
stc
push
mov
daa
test
pop
out
int3
jg
jb
movs
sahf
dec
imul
int
loop
dec
push
push
(bad)
int
retf
cmp
sub
mov
test
pop
sub
mov
jno
jg
fwait
iret
pop
or
jge
mov
mov
mov
and
adc
mov
addr16
out
loopne
rcl
mov
imul
clc
sub
ss
(bad)
into
(bad)
jae
int3
pop
mov
outs
push
mov
mov
mov
push
je
dec
jns
popf
pusha
inc
jne
and
pop
outs
jno
push
leave
in
cmp
dec
and
bound
ror
stos
mov
and
jle
mov
inc
pop
lods
sub
std
in
xor
call
sbb
mov
mov
or
fst
or
loopne
pop
int
mov
ins
mov
dec
xor
mov
pop
push
sbb
xchg
in
or
nop
movs
cmp
mov
jmp
popa
lods
cmp
lahf
sub
xchg
push
dec
xor
mov
shl
neg
arpl
pop
ins
stos
cmovb
(bad)
mov
icebp
cmps
in
cmps
aad
mov
mov
cmp
cs
lods
sub
(bad)
clc
inc
xor
xchg
xor
jmp
(bad)
mov
sub
cmps
jo
adc
(bad)
pusha
add
jp
cmp
aad
sbb
aad
mov
popf
ret
retf
retf
jp
lods
popa
ret
jge
daa
inc
cmp
sbb
fdivr
enter
int3
nop
mov
jmp
scas
mov
cld
arpl
pop
sar
jmp
aas
push
sub
scas
adc
pop
(bad)
rcl
ss
clc
adc
cmp
jp
xor
cmp
add
ret
mov
out
dec
jge
push
jo
mov
femms
mov
(bad)
fnstsw
es
fbstp
mov
fistp
sar
cmp
nop
ss
outs
or
mov
sbb
popa
fadd
test
push
add
inc
ret
(bad)
retf
leave
sub
(bad)
test
ret
ret
sbb
int3
dec
push
pop
jl
sub
jmp
bound
cmps
fs
fwait
pop
inc
in
imul
xchg
dec
push
and
xchg
inc
das
outs
js
cmps
stos
les
lods
dec
jecxz
xchg
fwait
and
test
push
sub
sub
jecxz
aas
pop
cmp
repz
ret
push
cmp
outs
ins
pushf
adc
scas
push
mov
cdq
sbb
test
inc
repnz
ins
lds
test
dec
in
cmps
mov
jno
retf
pop
cmp
es
mov
sub
xor
jle
dec
fsubr
lahf
aaa
lds
inc
clc
imul
push
cmps
jns
mov
pop
cmp
inc
jmp
push
icebp
scas
cmp
std
mov
jns
mov
sbb
cwde
lods
jmp
mov
rol
movs
inc
and
xor
add
dec
adc
test
scas
bound
sbb
push
or
mov
cld
or
inc
arpl
test
mov
fnsave
adc
iret
jb
push
jp
pop
jbe
leave
fild
or
mov
mov
bnd
and
dec
mov
repz
(bad)
jle
stos
sar
cld
int3
in
push
ret
inc
mov
lds
ins
or
jno
aas
dec
jne
leave
or
in
xchg
mov
aaa
jg
int
jecxz
cmp
mov
cmp
mov
pushf
sub
jno
add
or
jb
call
mov
mov
jo
push
stos
mov
sbb
push
jmp
mov
adc
in
jmp
mov
scas
es
mov
femms
mov
push
and
mov
mov
fisubr
jae
(bad)
lock
dec
push
lock
aas
outs
data16
jbe
pop
fwait
adc
movs
rcr
in
(bad)
rol
sbb
rcl
pop
xor
jae
les
mov
sahf
les
dec
mov
jg
test
mov
dec
int
rcl
push
out
jae
dec
mov
inc
mov
mov
xor
pop
dec
js
fwait
xor
leave
cmc
fs
mov
mov
js
nop
scas
out
dec
cld
jg
pop
jecxz
fild
mov
(bad)
dec
movs
lods
jl
jle
rcr
dec
aad
test
mov
inc
add
movs
push
cld
ss
sbb
jl
aas
cs
mov
movs
test
mov
and
sub
xor
or
out
xchg
mov
gs
jp
pop
lock
mov
sub
jecxz
retf
xchg
mov
push
jae
cmp
jmp
push
clc
sub
leave
rcr
sub
cmc
cmp
popf
jns
lods
sbb
jnp
je
mov
mov
xchg
jl
not
push
(bad)
int3
jmp
sub
xor
test
sahf
sbb
cmps
pop
dec
and
cmps
sub
mov
shr
xchg
sub
xchg
add
aam
inc
cld
xchg
(bad)
test
or
xor
test
jbe
pop
push
mov
pop
mov
inc
pop
pop
popf
test
fwait
pop
adc
test
aad
mov
out
cld
out
or
iret
mov
mov
je
imul
in
popa
xor
adc
mov
dec
lods
jge
test
call
loope
movs
inc
das
xchg
or
dec
mov
or
sbb
add
retw
scas
int
js
rol
adc
and
adc
mov
dec
rcr
retf
lods
enter
call
idiv
dec
cli
test
sbb
push
dec
pop
or
call
(bad)
sti
inc
push
cmp
jbe
push
in
xchg
add
inc
sub
(bad)
adc
test
jmp
dec
imul
imul
dec
mov
cmp
dec
and
jbe
jmp
mov
fiadd
sbb
mov
cmp
in
mov
dec
hlt
mov
rcr
push
pop
int3
mov
push
ins
int3
mov
es
call
test
outs
adc
jmp
ins
retf
inc
loop
in
xchg
xor
cld
inc
add
in
jmp
push
les
es
es
sbb
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
mov
sbb
or
mov
or
xchg
push
imul
test
inc
in
call
in
mov
push
or
xchg
ds
in
cs
in
or
push
dec
in
mov
dec
in
mov
push
pop
aam
push
jl
xchg
push
dec
cld
inc
(bad)
push
int3
loope
push
in
clc
mov
or
aad
inc
cs
push
cmp
push
stos
mov
sbb
cmp
sub
mov
adc
sbb
cmp
ret
(bad)
(bad)
cmp
leave
jmp
stos
xchg
movs
mov
sbb
inc
ret
stos
outs
in
test
adc
cmp
test
in
dec
arpl
outs
inc
ja
out
mov
out
(bad)
and
cmp
repnz
add
jns
pop
ret
inc
loopne
cmp
jmp
ss
add
jo
repz
push
loope
call
mov
and
jae
lock
inc
push
fwait
xor
pop
scas
fmul
shl
outs
ins
or
cmps
ret
adc
outs
jns
push
repz
gs
loop
mov
inc
cmp
outs
ror
and
outs
mov
mov
pop
xor
in
inc
mov
sub
mov
dec
and
mov
lods
rol
(bad)
lods
jl
jmp
dec
jg
cmp
les
xor
nop
call
push
(bad)
loopne
addr16
js
fld
sti
shr
add
es
cdq
lock
pop
jne
loope
cld
inc
mov
imul
comiss
popa
ret
add
mov
pushf
push
daa
sbb
cmp
jmp
and
mov
push
popa
or
lea
gs
aaa
mov
loopne
jecxz
mov
pushf
sbb
fldcw
jmp
mov
dec
(bad)
mov
loope
ins
xchg
addr16
xor
jnp
(bad)
and
pop
push
test
movs
sbb
mov
mov
in
imul
call
movs
jne
call
(bad)
jmp
sahf
pop
movs
lds
(bad)
add
push
imul
mov
xlat
and
js
test
fiadd
mov
movs
(bad)
loope
bnd
daa
adc
add
ds
jge
xor
jmp
ins
popf
call
lods
xlat
lds
jmp
fs
sar
(bad)
mov
cmp
out
jae
stc
inc
mov
xor
std
inc
into
test
pop
sbb
sub
gs
mov
dec
sbb
fcom
xchg
mov
(bad)
jno
out
movs
pusha
mov
cmp
and
loopne
in
push
mov
addr16
sbb
jb
inc
pushf
js
xchg
push
call
add
jno
sub
sahf
mov
or
int3
push
in
pop
retf
and
int
mov
push
inc
in
mov
push
dec
in
push
jl
xchg
push
je
stos
push
aam
mov
xchg
cmp
pop
inc
cld
mov
push
pop
pop
rcl
and
ja
mov
push
add
fxch
inc
retf
push
ja
lahf
data16
pusha
movs
mov
clc
push
fsub
mov
nop
cmp
lea
mov
mov
pop
jbe
jl
mov
setge
loopne
gs
xor
loopne
or
repnz
retf
mov
mov
inc
iret
cwde
fisttp
push
popf
push
movs
outs
mov
dec
and
sbb
icebp
daa
cmp
push
sbb
into
add
inc
adc
outs
retf
bound
lds
xor
iret
pop
out
sub
mov
fsubr
cdq
pop
xchg
jp
mov
ret
jne
and
movs
push
and
test
sbb
ins
push
enter
data16
sti
inc
sar
and
add
and
movs
mov
retf
test
(bad)
imul
jle
call
add
cmp
pop
xlat
loop
call
push
clc
call
in
test
setp
adc
xor
(bad)
mov
push
jp
adc
add
(bad)
xchg
ds
or
dec
xchg
mov
mov
mov
pop
sbb
mov
mov
mov
push
pop
int
addr16
dec
stos
sbb
mov
fs
pop
es
mov
fimul
pop
call
iret
sti
or
test
dec
cmp
xor
jae
leave
cmp
pop
xchg
sub
and
and
dec
cvtpi2ps
add
in
sti
or
add
push
or
out
imul
dec
call
or
sub
xor
int
adc
popa
test
mov
loope
xor
cmp
add
sub
jg
sbb
arpl
mov
push
sbb
add
(bad)
xor
xlat
int
rcr
test
stc
je
lock
jmp
(bad)
cmp
pop
test
dec
jnp
std
mov
push
adc
ja
xchg
mov
fnstsw
mov
out
call
cmp
mov
aas
ss
pop
movs
sub
fidivr
mov
mov
mov
jb
sti
jnp
mov
ror
test
push
mov
retf
sar
aas
xchg
call
dec
jae
cli
in
mov
mov
cmc
call
ins
push
sahf
xor
enter
lds
ret
push
and
push
pop
fadd
xchg
xor
scas
popa
cmps
jle
mov
fldl2t
push
inc
jnp
cmc
aaa
adc
pop
(bad)
xor
(bad)
fsubp
int3
push
or
push
push
adc
retf
mov
movs
sub
test
fsub
fimul
or
mov
adc
cmp
dec
(bad)
mov
neg
retf
std
ror
push
jbe
sbb
inc
div
out
lock
mov
out
test
imul
sbb
pop
push
addr16
mov
lods
stos
mov
fcmovb
xor
inc
loopne
aad
jp
cs
ins
dec
aam
or
les
cmp
test
js
stc
aad
cmc
out
mov
idiv
xor
int
lds
mov
push
pop
cmp
dec
cmc
into
js
cmp
or
cmp
into
pusha
(bad)
loop
adc
jae
jae
dec
hlt
inc
sub
push
jl
stos
push
fs
mov
dec
cld
mov
push
inc
ins
xor
data16
int3
std
and
inc
loopne
test
mov
inc
in
dec
mov
mov
js
ins
pop
and
dec
push
sbb
repnz
mov
adc
ins
bound
jne
shl
cmc
leave
mov
jns
jge
push
sbb
pop
movs
inc
leave
adc
sbb
jmp
fild
mov
stc
jle
sub
and
popf
push
popf
mov
or
and
push
mul
and
push
shr
xchg
inc
push
iret
neg
add
or
sbb
dec
pusha
out
(bad)
cmps
fisub
(bad)
xchg
retf
push
shr
jg
fs
hlt
adc
data16
pop
sub
xor
and
js
push
(bad)
fsub
mov
push
scas
idiv
push
jae
jmp
inc
xor
mov
int
or
lea
inc
push
fisttp
jne
jg
test
out
int
xchg
pop
pop
pop
pop
mov
jge
jae
les
stc
fstp
dec
or
add
sub
repz
jmp
jmp
js
dec
hlt
mov
loop
fmul
ins
push
xchg
out
mov
xor
jecxz
loop
or
lea
dec
repnz
dec
adc
in
enter
jo
lea
scas
es
push
fcomp
cmp
inc
xor
retf
pop
dec
push
dec
jne
outs
in
and
pop
dec
gs
call
pop
sbb
icebp
shl
sub
lea
(bad)
shl
xor
adc
pusha
in
fsub
ret
jp
xor
in
iret
aad
add
sahf
jle
fdivr
push
(bad)
mov
push
jg
imul
xlat
cmp
inc
pop
jle
xlat
and
adc
sub
xor
and
dec
adc
out
rol
sar
cs
aad
sub
sub
adc
stc
ja
mov
adc
jge
scas
push
inc
stc
add
ret
sbb
cmp
cli
outs
pop
inc
fiadd
mov
mov
bound
call
xlat
mov
cmp
mov
jmp
jge
pop
push
dec
pop
es
in
mov
push
popf
lods
sbb
call
daa
sub
addr16
jo
sti
sti
imul
sar
cdq
sbb
(bad)
jae
test
or
shl
clc
in
mov
repz
hlt
adc
fs
xchg
ds
cld
mov
push
(bad)
cld
mov
push
push
dec
xor
inc
data16
pop
loopne
pop
gs
in
lods
mov
dec
in
fld
push
lods
cmp
and
shl
rcr
dec
cmps
pop
mov
or
bound
mov
add
xor
fs
scas
fisttp
inc
cmp
jecxz
sti
push
adc
imul
mov
pop
sbb
in
fild
push
jp
test
popa
out
cwde
fsqrt
push
or
inc
xchg
mov
jne
jnp
test
and
xchg
fstp
imul
repz
inc
(bad)
aad
shl
neg
lods
mov
sub
fistp
fiadd
shl
cli
les
shr
daa
push
and
mov
rcl
int
sbb
loop
imul
push
mov
push
loop
loop
outs
pop
add
rol
jo
pop
or
jmp
mov
clc
push
into
retf
xlat
mov
mul
inc
mov
mov
jp
shr
call
enter
add
leave
dec
inc
mov
jnp
daa
mov
jno
push
inc
sbb
pop
xchg
ror
xlat
movs
and
and
inc
scas
(bad)
repz
mov
dec
sub
int
pop
sbb
jecxz
sub
xchg
pop
pop
jnp
stos
sahf
push
dec
ror
mov
mov
xor
adc
sub
loop
jl
mov
xchg
int3
adc
pop
out
mul
cli
xor
in
pop
popf
jbe
mov
push
repz
pop
xor
inc
or
jmp
xchg
icebp
jle
mov
sbb
std
push
push
sbb
jbe
or
test
sbb
pop
dec
out
mov
xchg
jns
aam
test
sbb
arpl
mov
enter
adc
fs
mov
pusha
repnz
cmp
test
imul
mov
repz
mov
inc
shl
ins
lock
push
int3
call
jnp
push
push
movs
xor
cmp
int3
sub
or
(bad)
adc
popa
pusha
lea
adc
pop
lahf
pop
cmps
lods
mov
in
aaa
std
mov
mov
jle
outs
mov
sbb
xchg
inc
pop
dec
and
jnp
mov
(bad)
cmp
fild
lock
inc
loopne
out
push
rcl
ins
push
push
lahf
cmp
loope
imul
(bad)
fbld
or
cmp
adc
push
pop
bound
xor
in
rcl
add
xlat
stos
jae
scas
pop
sub
test
shl
dec
mov
aaa
out
cs
inc
pop
mov
sbb
out
shl
jo
adc
icebp
test
adc
adc
sub
pop
jp
jge
cmps
sbb
sahf
jmp
jne
jmp
pop
addr16
push
inc
mov
inc
inc
fstp
dec
or
popa
fisubr
cs
rcr
cld
sbb
adc
rcr
or
out
loope
mov
popf
mov
dec
adc
add
daa
fwait
jbe
push
cwde
adc
push
les
cmp
push
(bad)
sub
pop
inc
repz
mov
icebp
hlt
and
xor
ds
ror
lahf
mov
les
jbe
aad
xor
or
mov
(bad)
ja
xlat
cmc
dec
sbb
inc
or
add
ror
ds
sahf
xchg
sahf
ins
add
pop
or
xchg
mov
mov
ss
push
xor
cmp
sub
shl
cmp
ffreep
outs
sub
mov
push
mov
dec
xchg
in
outs
and
jmp
pop
xlat
(bad)
rcl
inc
bound
pop
push
outs
arpl
xchg
data16
mov
xchg
mov
pop
add
inc
sub
pop
sahf
ss
rcr
test
clc
jl
int3
ficomp
sbb
xchg
cmp
not
aad
and
sahf
shl
push
xchg
mov
aad
adc
out
sbb
cmps
inc
fs
in
pop
jae
cmps
(bad)
ret
xchg
or
inc
daa
cmp
add
repnz
jnp
iret
sub
xchg
mov
not
add
mov
shl
cmp
nop
mov
and
and
push
adc
xor
sahf
cmp
jae
xchg
pop
pop
sub
push
push
and
or
inc
pop
hlt
fstp
or
scas
gs
jno
inc
es
movs
add
mov
xchg
mov
sub
add
xchg
or
sar
and
xor
jge
nop
out
sub
nop
jmp
adc
cmp
retf
or
into
hlt
mov
push
or
xchg
push
push
in
ds
in
mov
push
fsub
xor
lds
push
inc
std
xor
data16
(bad)
(bad)
push
jecxz
mov
aad
xchg
(bad)
push
clc
sub
(bad)
in
scas
or
push
jl
mov
cmp
ficomp
and
mov
jne
sbb
and
xor
dec
rcl
jo
jb
cmp
sbb
pop
sbb
jp
push
ficom
dec
inc
cmps
loope
ret
jb
add
cmp
cmps
call
or
mov
(bad)
retf
dec
cmp
pusha
fmul
adc
ds
ins
inc
xchg
push
test
neg
or
jp
cmp
add
sbb
lahf
sub
pop
and
fcom
fsubr
or
sbb
and
push
rol
inc
in
int3
dec
retf
test
sub
bound
add
gs
loope
xor
cwde
and
push
xchg
jmp
dec
in
jb
jge
push
iret
(bad)
xchg
es
adc
xor
adc
cmp
and
cdq
pop
inc
lea
iret
and
pop
imul
int
loopne
shl
je
inc
or
mov
imul
mov
scas
mov
iret
jge
cs
cmp
popa
adc
int3
pop
add
nop
scas
ins
call
push
jnp
(bad)
pop
pop
test
mov
ds
fist
aam
xchg
in
sahf
adc
adc
add
and
loop
je
cmps
out
jecxz
loopne
aaa
mov
add
push
xchg
pop
push
clc
sub
jmp
clc
(bad)
fadd
push
xor
inc
or
das
stos
jmp
ds
xchg
outs
mov
push
add
fs
and
xor
fimul
(bad)
jg
add
rcl
ds
ins
pushf
jmp
add
int3
jge
test
test
jbe
or
in
imul
lock
cmps
popa
sub
sbb
lea
lods
and
gs
push
sbb
sub
push
daa
and
xchg
xchg
xchg
inc
into
lea
(bad)
dec
pop
mov
dec
dec
mov
push
jmp
shl
cld
inc
and
pop
call
icebp
scas
fstp
inc
xchg
fwait
dec
xlat
and
cs
xor
gs
xchg
loop
push
xor
add
div
adc
dec
stos
mov
mov
sub
fistp
imul
inc
out
jns
mov
push
scas
xor
xor
xor
xlat
xlat
(bad)
sub
leave
pop
and
cmp
test
dec
out
pop
mov
test
jnp
icebp
movs
ss
pop
mov
jbe
lds
in
pandn
in
push
in
jge
add
sbb
retf
jne
mov
rcr
cwde
stc
sub
add
in
test
jne
scas
xchg
cmp
mov
clc
pop
inc
mov
movs
jns
jl
sub
sub
or
pop
test
add
xchg
or
in
inc
(bad)
es
jne
xchg
out
test
ds
xchg
aad
hlt
mov
push
(bad)
jle
xchg
mov
movs
outs
or
push
arpl
mov
stos
out
push
mov
cmps
retf
dec
je
fiadd
(bad)
aas
mov
retf
dec
push
retf
or
popf
pop
dec
push
xor
or
es
push
sub
xchg
pop
mov
pop
jnp
push
in
cmps
nop
pusha
ins
scas
test
mov
adc
pop
mov
and
out
ss
mov
cmp
xchg
cmp
gs
xor
fst
mov
dec
jmp
xchg
sub
or
push
jp
lods
mov
lds
ins
leave
xor
add
cmp
push
xchg
xor
int3
sub
iret
ds
leave
and
mov
push
pushf
inc
xchg
lahf
add
(bad)
add
mov
cmp
neg
cmp
popf
pop
jg
xchg
pop
push
sbb
ds
jne
push
xchg
cmp
bound
sbb
xor
test
sbb
xor
into
mov
push
pop
jnp
fstp
aas
pop
or
mov
fisub
mov
popf
cmp
mov
push
xchg
push
dec
movs
scas
xlat
jmp
pop
xchg
in
icebp
jnp
int
inc
push
adc
scas
ins
mov
mov
gs
dec
retf
pop
xchg
push
dec
add
push
std
pop
mov
(bad)
scas
fidivr
jmp
pop
mov
call
mov
sbb
clc
and
cld
out
xchg
stc
stos
cs
jmp
and
jo
stos
sub
add
pop
inc
cmc
sub
daa
mov
sbb
xor
add
pop
push
lock
sub
xchg
fmul
rol
sub
in
adc
dec
xor
mov
inc
inc
xor
inc
or
dec
ja
rol
xchg
mov
mov
inc
or
mov
scas
scas
iret
push
add
ds
dec
xlat
imul
xor
je
test
sar
test
pop
aaa
lahf
jno
movs
inc
test
push
movs
(bad)
bound
mov
xor
jae
(bad)
dec
ds
fcmovnb
lahf
setbe
lahf
fsub
and
test
fld
push
imul
inc
pop
loopne
sbb
jne
pop
xchg
mov
fadd
and
ret
repz
int3
sub
mov
cmp
adc
pextrw
ins
nop
adc
push
push
outs
add
sub
pop
imul
sbb
dec
adc
dec
leave
js
stos
mov
jno
push
notrack
dec
scas
inc
or
xor
fwait
pop
push
adc
imul
test
xchg
add
push
add
iret
ret
in
xor
movs
mov
sub
sbb
les
lods
xchg
aaa
dec
mov
mov
addr16
sub
not
cwde
mov
pop
push
sbb
push
sbb
ds
fadd
pop
sbb
(bad)
mov
jle
adc
mov
sub
mov
xor
xchg
sub
retf
adc
inc
cld
mov
dec
lahf
mov
inc
pop
mul
cmp
stos
test
mov
pop
les
int
stos
xchg
out
jo
jmp
inc
lock
or
dec
adc
call
ret
and
adc
xchg
fisttp
ja
test
lods
jno
gs
xor
sbb
adc
shl
mov
aas
lds
mov
cs
out
in
(bad)
les
adc
fs
xchg
dec
lods
push
movs
xchg
jl
adc
add
sbb
fidivr
xchg
cmp
test
outs
xchg
pop
mov
stos
fsubr
cmp
push
rcr
mov
iret
mov
je
or
sti
jae
sub
cmp
mov
stos
pop
imul
les
imul
or
mov
scas
xor
jae
mov
adc
(bad)
fwait
pop
in
sahf
sub
mov
retf
ror
dec
stos
cmp
mov
int
mov
jmp
jecxz
inc
stos
mov
or
mov
aas
(bad)
js
cmc
jmp
pop
push
cmps
sbb
cmp
pop
icebp
or
xlat
pop
fdivrp
das
js
std
lock
add
dec
and
sahf
fsub
sti
xchg
faddp
scas
test
leave
inc
lods
dec
ror
mov
fdivr
xchg
div
sub
movq
xor
ins
pusha
cmp
cld
out
or
jb
fcomp
lds
arpl
call
out
in
inc
or
test
jge
pop
les
mov
retf
add
test
push
and
pop
inc
or
(bad)
mov
push
sbb
mov
and
cmps
xor
push
(bad)
push
dec
popa
int3
fnstenv
mov
es
loop
add
mov
jle
xchg
cmps
push
push
mov
cmp
aad
cld
retf
test
fs
sub
iret
jle
scas
jmpw
mov
aaa
mov
cwde
and
mov
jnp
pushf
icebp
dec
hlt
ret
sar
xchg
int3
popf
mov
mov
or
mov
cmps
ficomp
push
sbb
xchg
xor
js
mov
scas
pop
arpl
iret
loope
xchg
adc
push
call
mov
aaa
adc
(bad)
(bad)
sub
xchg
push
xchg
cld
out
cmp
(bad)
test
jne
xchg
mov
mov
(bad)
push
sbb
xchg
jp
cs
push
adc
xor
iret
dec
and
and
mov
push
mov
call
pop
movs
xchg
repnz
jno
bound
jg
arpl
scas
xchg
sub
sbb
repnz
sbb
pinsrw
xchg
outs
lods
aad
cmp
out
stos
lds
(bad)
out
jb
sbb
cmp
fmul
jmp
mov
addr16
rcr
jnp
xor
add
mov
and
rol
pop
mov
add
mov
pusha
push
sbb
imul
shl
push
or
dec
sub
pop
add
and
mov
mov
aas
aam
adc
adc
les
xchg
mov
jae
sub
jbe
arpl
pop
aad
mov
pop
int
imul
adc
leave
leave
mov
xchg
popf
dec
or
in
xchg
jno
cmc
add
dec
pop
(bad)
mov
or
pop
nop
out
push
push
cmc
shr
mov
cmc
ret
fisttp
mov
jae
mov
in
add
call
mov
adc
xor
test
xor
or
jae
lahf
jmp
fwait
mov
xchg
push
and
sti
mov
and
(bad)
imul
fild
cs
jne
shl
jecxz
adc
out
(bad)
(bad)
adc
mov
xchg
and
sub
mov
xchg
popf
cmps
pop
xor
outs
fcmovnbe
cmc
lods
mov
dec
retf
mov
aam
jecxz
pop
mov
js
outs
pop
sub
retf
fst
int
mov
push
push
in
stos
push
inc
in
push
dec
fs
push
inc
in
mov
enter
inc
cmp
inc
in
dec
mov
mov
xchg
jo
scas
pop
jl
push
fst
inc
cli
repz
inc
sbb
jne
pop
jnp
gs
ins
fisttp
sub
ds
sti
mov
pop
popf
fimul
(bad)
out
push
lahf
shl
cmp
test
jbe
pop
out
sub
in
lods
pop
sub
and
sbb
sbb
inc
mov
add
mov
repnz
(bad)
inc
and
popf
push
test
test
je
or
mov
cli
mov
jg
aad
int
push
in
inc
lods
jne
jo
mov
inc
mov
ficom
sbb
and
into
popf
loope
dec
popf
mov
or
(bad)
mov
and
js
call
test
stos
aam
repz
mov
mov
bound
imul
loope
cmp
out
and
mov
scas
sbb
test
sub
test
(bad)
mov
ja
sub
xor
inc
push
mov
push
retf
mov
inc
sub
fidivr
clc
stc
jno
mov
stc
rcl
cli
data16
dec
mov
aam
fidiv
scas
adc
les
inc
js
mov
push
pop
add
dec
sub
xchg
aad
sub
pop
and
xchg
les
hlt
adc
or
loop
lods
mov
movs
sbb
dec
push
outs
sbb
movs
adc
pop
scas
sbb
shl
cmp
aad
mov
mov
mov
fadd
mov
ror
shl
push
aas
inc
inc
ins
push
aam
fisttp
pop
push
int3
das
cmps
mov
jb
mov
sbb
pop
imul
imul
bswap
daa
pushf
std
jb
jae
test
rcl
repnz
inc
jb
gs
retf
lds
aam
inc
pop
mov
daa
stos
or
ds
jl
movs
rol
mov
cwde
add
xor
ja
lods
sahf
rol
dec
mov
jae
sub
(bad)
mov
ret
push
mov
shl
stos
xor
js
ret
and
adc
cmp
daa
jge
push
ds
fbstp
dec
jbe
sbb
xchg
xchg
(bad)
(bad)
(bad)
(bad)
in
pusha
or
jo
stos
cmps
gs
test
cmps
or
pop
aam
sbb
sbb
mov
movs
or
sub
cmps
dec
int3
outs
sahf
mov
test
imul
pushf
shrd
inc
leave
cmp
sbb
and
adc
in
cmc
cmc
or
sbb
icebp
xchg
push
(bad)
or
fisubr
mov
outs
cmp
cmp
js
push
test
dec
jl
mov
inc
inc
(bad)
mov
mov
loopne
mov
cmp
ja
in
cli
(bad)
lds
aas
adc
jns
mov
stos
jl
mov
sub
out
sahf
mov
mov
gs
pop
rcl
rol
fmulp
push
lock
mov
xchg
ret
test
(bad)
in
mov
(bad)
xchg
sbb
pop
add
xor
punpckhdq
and
dec
loop
lds
(bad)
mov
imul
pop
cli
sbb
sar
add
out
fdivr
sub
jns
and
sub
js
push
or
test
ror
cld
pop
push
jp
aam
xor
sub
and
jmp
xor
fild
scas
xor
xchg
movs
dec
pop
sbb
xor
jb
std
nop
cmc
retf
push
mov
(bad)
stos
jmp
enter
mov
fsub
pop
xor
fs
or
xor
jl
sbb
mov
sub
sub
fiadd
cmps
inc
sub
test
dec
push
jge
js
cmp
jmp
(bad)
call
data16
fdiv
fidiv
mov
push
xchg
mov
iret
ja
add
or
xlat
add
(bad)
std
or
xchg
loope
jge
cmp
add
and
loope
bound
popa
pop
cs
mov
cmc
ins
aam
pop
pop
sbb
mov
stc
mov
add
jbe
jnp
mov
mov
fdiv
stos
popf
mov
mov
mov
xchg
adc
ds
inc
sub
(bad)
pop
mov
les
in
lods
clc
sub
pop
test
(bad)
rcl
add
aam
scas
dec
(bad)
adc
gs
sbb
(bad)
in
xor
jge
fs
gs
xchg
test
mov
mov
push
(bad)
data16
or
pop
(bad)
fadd
outs
mov
rol
(bad)
adc
cmp
es
jle
(bad)
jo
pusha
or
mov
data16
jg
pop
inc
push
mov
add
or
(bad)
div
lahf
mov
(bad)
mov
ins
mov
adc
mov
adc
inc
or
shl
and
into
add
jae
fistp
mov
mov
mov
pop
jp
or
aam
fidiv
push
xor
popa
add
mov
mov
and
pop
stos
mov
dec
mov
pop
jg
mov
adc
ja
sar
pop
xchg
enter
inc
retf
bnd
cmp
(bad)
cli
mov
pop
inc
popf
movs
sbb
mov
mov
adc
pop
scas
xor
bnd
jmp
in
mov
popf
push
or
jmp
add
or
stos
mov
xor
and
stos
xchg
loop
cmp
(bad)
in
mov
sbb
imul
xor
mov
xor
sbb
push
inc
cmp
aas
lea
or
sub
mov
and
in
mov
int
stos
dec
mov
nop
mov
dec
outs
lods
push
jmp
ret
xor
imul
ret
mul
aas
sahf
inc
iret
pop
pop
pop
sbb
cwde
mov
retf
popf
xchg
mov
mov
mov
push
add
test
dec
movs
rol
mov
retf
pop
or
adc
xor
mov
in
inc
cdq
lahf
repnz
mov
sub
test
stos
push
inc
fwait
mov
or
loopne
imul
daa
xchg
push
lock
sub
xlat
push
(bad)
jo
fwait
arpl
std
xchg
jmp
or
je
xor
lods
jle
mov
(bad)
add
dec
mov
jle
pop
sub
jmp
mov
loopne
add
arpl
scas
fidiv
movs
les
xor
lds
sub
icebp
int
mov
dec
pop
pop
ror
sub
push
pop
in
mov
dec
(bad)
mov
sahf
outs
mov
enter
lahf
(bad)
outs
mov
adc
(bad)
ins
cwde
pop
dec
fsubr
inc
fcmovu
shr
and
push
dec
xor
repz
xor
pusha
test
mov
xchg
sbb
pop
jl
add
mov
fst
mov
cwde
outs
es
fstp
(bad)
cmp
loope
frstor
jne
fstp
lods
add
outs
pop
mov
stos
mov
imul
repnz
hlt
add
in
mov
push
inc
in
push
lds
push
inc
ins
cmp
inc
cmp
add
dec
mov
mov
clc
pop
push
test
mov
jg
out
shr
ins
push
and
dec
mov
or
adc
cmps
nop
dec
adc
dec
ja
sbb
outs
ret
test
inc
rcl
push
jae
adc
imul
push
mov
aas
imul
xor
imul
lods
lods
addr16
inc
jge
fisub
data16
push
cdq
jmp
cmp
stos
xchg
or
push
mov
jae
in
push
pop
jo
(bad)
jmp
mov
adc
xchg
mov
jne
das
jmp
imul
or
jbe
xlat
es
retf
test
dec
dec
xchg
push
icebp
sub
pop
pop
cli
mov
fimul
jecxz
rcr
cmp
sti
push
shl
pop
hlt
inc
xchg
hlt
addr16
repz
xchg
cmp
mov
or
rcr
outs
xchg
xchg
outs
arpl
out
cld
lock
and
cmp
lock
push
or
cdq
inc
sar
add
fmul
add
push
stos
pop
nop
clc
dec
mov
imul
pop
addr16
inc
cld
push
(bad)
leave
sbb
outs
out
xchg
jmp
je
mov
inc
or
mov
mov
daa
mov
mov
cmp
mov
pushf
fistp
push
sar
hlt
scas
imul
into
das
fidiv
aaa
mov
xor
pusha
cmp
cmp
jmp
adc
mul
push
lods
fld
or
inc
sub
add
cmp
jmp
lods
xchg
repz
addr16
shr
cli
sahf
jnp
(bad)
mov
push
out
shl
and
(bad)
push
add
dec
push
sub
xchg
sahf
mov
sub
pop
imul
sbb
sbb
in
sub
lahf
ds
cmp
push
xchg
add
sahf
call
stos
movs
addr16
pop
pop
mov
pusha
xchg
icebp
and
stos
sti
mov
jge
and
mov
popa
iret
fnsave
or
mov
dec
or
jno
lea
pop
xchg
in
xchg
cmps
neg
jmp
xor
jmp
out
mov
movs
pop
nop
lock
imul
(bad)
gs
jnp
mov
fnstcw
add
imul
mov
mov
int
xor
test
xor
jnp
xchg
loopne
test
pop
ror
pop
stc
cmp
push
(bad)
rol
or
sub
inc
inc
cdq
jmp
inc
hlt
cli
xchg
push
push
in
call
in
push
(bad)
push
(bad)
loope
add
jmp
or
xor
or
push
inc
jle
push
jnp
cmp
out
loop
fidiv
sub
ins
and
dec
test
and
dec
sub
jle
cmp
mov
je
cmc
das
popa
inc
mov
mov
xchg
(bad)
xchg
sahf
and
sahf
pop
rcr
in
push
mov
adc
cmp
sbb
rcl
mov
leave
sar
mov
cmp
push
add
or
cmp
repnz
or
mov
retf
leave
xchg
jp
or
pushf
retf
stc
retf
ror
dec
push
lods
mov
mov
test
and
shl
das
sbb
outs
(bad)
fimul
mov
ret
lds
mov
sahf
(bad)
pop
ds
add
mov
popa
shl
jge
mov
addr16
lods
and
push
fld
stos
jbe
jmp
fldenv
push
repnz
ins
jle
fwait
retf
fcom
jmp
shl
sbb
pop
mov
pusha
jl
cmp
push
(bad)
fdivr
fs
loopne
xor
add
xlat
mov
(bad)
fmul
inc
sbb
out
cmp
je
jl
rol
gs
push
cmps
sti
mov
clc
lods
jbe
lock
enter
pand
clc
and
push
fstp
mov
ds
xor
jg
push
fiadd
ret
adc
sti
push
outs
lods
or
out
mov
(bad)
sbb
mov
imul
mov
jge
fs
(bad)
push
or
out
and
test
int
dec
add
mov
bound
inc
xor
sbb
ret
inc
cmc
mov
push
mov
push
pop
in
iret
push
int3
cdq
test
xchg
push
and
pop
jnp
push
sbb
sub
cmp
dec
je
(bad)
mov
shl
out
cmp
vmwrite
ins
xchg
cmp
out
inc
adc
mov
inc
mov
test
outs
sbb
add
mov
pop
or
test
or
ja
push
je
enter
cli
cmp
xor
(bad)
jo
push
fdivr
retf
loopne
loope
jmp
jnp
jp
mov
repz
xlat
iret
adc
loopne
sar
push
fisub
dec
mov
cmc
rcr
(bad)
pusha
inc
mov
mov
push
xchg
cmp
out
aaa
das
push
into
pop
ffreep
sub
inc
ins
aas
int3
mov
ds
fnstsw
fst
fild
and
fst
stos
pop
mov
mov
repz
xor
hlt
xor
call
mov
stc
adc
jbe
jp
inc
pop
ja
mov
jle
xor
lods
shl
loope
and
add
or
das
test
cli
and
mov
add
in
stc
cmp
mov
jae
gs
push
les
movs
aad
mov
and
sbb
sbb
xor
push
imul
add
mov
rol
lods
sub
aam
cmp
pop
aad
pop
retf
pusha
xor
adc
stos
cmp
and
push
dec
add
mov
es
test
dec
or
sbb
inc
fist
mov
dec
fisubr
sbb
xor
pop
jp
mov
call
jl
and
loopne
dec
jecxz
js
and
cs
xor
ret
popa
xchg
or
clc
push
mov
out
xchg
add
mov
aas
(bad)
fisub
or
xchg
mov
mov
ss
(bad)
jecxz
pop
fstp
out
or
jg
out
lods
(bad)
dec
fucomp
pop
ss
ins
and
leave
jns
xchg
adc
int
(bad)
adc
das
enter
outs
xor
dec
gs
stos
push
pushf
pusha
into
aas
xor
loop
sar
scas
xchg
les
fcom
xchg
push
sub
repz
pop
or
rol
inc
inc
jne
cwde
pop
sbb
xor
mov
rcl
movs
aad
shr
sti
inc
out
add
scas
push
mov
mov
add
into
or
bnd
mov
jno
inc
jnp
fidivr
fmul
mov
push
jmp
jns
pop
sbb
push
ja
test
jb
iret
pop
mov
cmp
xor
and
add
jge
xchg
cld
push
cld
shl
xchg
and
shl
mul
add
pop
movs
fdivr
popf
jne
call
push
inc
je
and
cli
test
push
pop
and
push
ror
dec
and
jno
adc
rcl
shl
fst
sahf
pusha
pop
dec
repz
call
js
cmps
xchg
stos
movs
mov
mov
push
mov
and
jno
jno
inc
sbb
jno
xchg
mov
xchg
mov
xor
sub
dec
add
hlt
push
dec
int3
js
jo
mov
fdivr
mov
fwait
rcl
and
into
shl
xor
ja
cmp
(bad)
mul
add
fstp
cmp
pop
mov
add
popa
mov
inc
sub
adc
ja
inc
pop
inc
xchg
mov
sbb
stos
cwde
aaa
stos
push
push
mov
adc
je
hlt
call
in
mov
push
dec
in
push
dec
out
xchg
out
pop
lds
push
sar
add
ins
mov
push
shr
int3
xchg
outs
outs
scas
xchg
into
xor
inc
adc
(bad)
(bad)
add
fld
fadd
int
mov
push
xchg
into
fnstenv
das
sub
cwde
scas
sahf
sbb
rcr
mov
(bad)
mov
xchg
pop
push
int3
nop
xor
sahf
pop
dec
cwde
pop
in
xor
stos
sub
test
pop
loope
(bad)
call
les
cmc
fucomip
mov
ds
fcmovb
dec
xlat
xlat
pop
ret
call
xchg
pop
mov
stc
adc
dec
xor
in
dec
sub
jb
jge
daa
shl
lds
(bad)
xchg
mov
adc
(bad)
mov
arpl
sbb
xor
rcr
add
(bad)
dec
mov
pop
dec
pop
sub
pop
cmp
mov
int
shl
mov
fld
add
imul
xchg
cmp
mov
fwait
cmp
or
sbb
test
mov
push
inc
push
cmps
std
or
push
(bad)
arpl
jb
mov
sahf
xchg
or
mov
mov
mov
xor
mov
ins
cmp
femms
sbb
cmp
pop
sub
daa
xchg
loopne
dec
mov
sub
jmp
jge
inc
psrad
leave
mov
xlat
dec
sbb
dec
pop
push
mov
jl
pop
sub
test
mov
je
dec
jle
dec
jp
stos
or
push
inc
cmp
pop
das
clc
mov
xchg
add
cld
fnop
and
imul
inc
or
pop
inc
call
(bad)
mul
and
scas
adc
xor
aad
or
pusha
int3
adc
pop
mov
mov
ficomp
fisttp
retf
jmp
arpl
(bad)
stc
add
and
imul
or
mov
dec
pushf
dec
loop
adc
mov
outs
lods
xchg
rcr
jle
test
mov
lods
loop
ficomp
bound
push
mov
fwait
aaa
mov
jl
add
sub
in
mov
jg
(bad)
call
mov
xchg
push
dec
jl
dec
jmp
jmp
cmp
inc
retf
outs
fwait
jb
test
retf
push
push
cmp
addr16
pop
fnsave
pop
fidivr
inc
push
inc
ins
mov
sbb
cmp
pop
out
mov
mov
ss
loopne
pop
fisub
mov
test
cmp
arpl
popa
repz
pop
xchg
pusha
repnz
sbb
loopne
cld
jne
jge
adc
(bad)
dec
jp
jmp
mov
lods
mov
scas
inc
fwait
xor
cmp
mov
xchg
out
sub
mov
adc
pop
inc
lea
popw
jmp
adc
sub
push
js
xor
es
ror
or
neg
inc
and
mov
sub
push
int
mov
xlat
inc
loop
mov
cli
lods
dec
or
jb
iret
icebp
aam
dec
or
scas
mov
dec
sub
pop
adc
pusha
not
sbb
cmc
ins
cs
retf
test
fstp
inc
hlt
loopne
clc
fldlg2
les
in
add
ror
push
nop
in
mov
repnz
mov
push
add
cmp
adc
push
mov
repnz
inc
pop
dec
in
mov
cwde
nop
sub
cmp
dec
xabort
outs
push
cmc
lods
xchg
dec
repz
js
jmp
cmp
push
repz
xchg
cmp
into
punpckhbw
push
test
xchg
je
aam
jmp
xor
(bad)
dec
mov
jg
rcl
pop
pop
jmp
dec
(bad)
int
xor
jmp
jle
into
cwde
mov
pop
push
jnp
dec
hlt
sub
jbe
movs
pop
popf
cmp
in
xchg
push
mov
test
data16
mov
int3
fnstsw
jl
pop
(bad)
fst
or
inc
or
sub
jecxz
test
mov
add
outs
fisubr
xchg
iret
mov
or
inc
ficomp
lods
ins
in
inc
pop
push
sbb
jl
or
mov
pop
dec
rol
test
xchg
dec
sqrtps
sub
pusha
jnp
push
dec
stos
inc
and
test
call
int
xor
add
dec
and
ins
dec
and
iret
paddusw
scas
inc
inc
xchg
dec
nop
movs
cmp
std
out
ss
cmp
xor
imul
adc
arpl
fs
fstp
dec
push
mov
cdq
popa
je
mov
pop
movs
and
iret
push
adc
and
pop
outs
or
mov
out
retf
cs
sahf
push
lods
and
jno
sbb
dec
test
mov
imul
inc
pop
mov
xor
pop
cli
add
rol
inc
jle
popf
fs
adc
push
cld
mov
test
pushf
(bad)
out
mov
je
mov
dec
add
repz
(bad)
pusha
dec
xor
in
sar
fwait
js
ins
dec
test
in
jmp
sub
jmp
mov
mov
sbb
jp
push
mov
rol
adc
and
cwde
into
fimul
outs
outs
mov
mov
ror
mov
dec
push
sub
test
push
sti
cmp
cmps
icebp
push
or
and
bound
retf
dec
cmp
les
push
arpl
loope
cli
imul
jl
dec
xor
retf
sbb
and
test
mov
scas
and
into
outs
xchg
or
dec
mov
pop
repnz
cli
mov
inc
push
pop
call
in
ror
jae
test
mov
inc
das
lock
dec
cmps
add
fsub
adc
pop
jbe
(bad)
int3
jmp
sbb
lock
xchg
test
add
dec
jno
pop
cld
clc
mov
aam
and
and
retf
and
pop
sti
loopne
xchg
pop
jle
movs
dec
lods
sahf
push
cmp
xchg
fisubr
and
cs
stos
(bad)
jecxz
mov
mov
(bad)
xchg
retf
call
enter
cdq
arpl
(bad)
jbe
pop
pop
popf
sbb
inc
(bad)
jae
scas
push
stos
xor
mov
je
mov
outs
fild
fst
mov
call
sub
mov
ins
fwait
imul
iret
jne
dec
cmps
fcom
dec
test
jmp
jns
jp
cmps
adc
test
jp
sbb
jge
sbb
pop
cwde
inc
dec
out
jecxz
outs
dec
enter
jb
push
das
xor
sub
(bad)
movs
mov
pop
cmp
push
cs
cld
sahf
jl
aam
arpl
loopne
pop
mov
out
add
push
sar
mov
add
cld
gs
mov
fldcw
scas
sbb
cwde
pop
fwait
and
mov
mov
push
inc
daa
sar
out
es
push
out
lea
add
lods
addr16
hlt
or
mov
cmp
push
cmps
sbb
clc
push
arpl
or
loopne
inc
or
and
scas
mov
pop
(bad)
cmp
sahf
fisubr
push
test
ret
dec
jnp
data16
add
dec
rcl
jmp
push
add
dec
pop
adc
cmps
sub
push
ins
add
mov
(bad)
push
leave
fst
push
lea
pop
ins
stos
add
hlt
into
retf
call
dec
rcr
push
xlat
jne
in
rol
loope
dec
pop
sbb
loop
dec
sbb
mov
sub
out
sub
jno
cmp
movs
jge
inc
dec
into
mov
mov
mov
mov
sahf
xchg
jmp
into
ret
sar
pop
adc
(bad)
ficom
(bad)
add
and
pop
int
std
movs
sub
sbb
out
in
ss
push
or
dec
(bad)
jmp
or
enter
mov
pop
mov
outs
sub
icebp
dec
cmps
jp
jle
cmp
out
mov
adc
push
dec
out
std
or
hlt
bound
pop
hlt
mov
push
ins
lods
mov
cs
aam
es
xchg
pop
sub
mov
pushf
fisubr
pushf
loop
and
sub
int3
inc
cmp
xor
adc
dec
jp
in
sub
ins
movs
mov
fs
xchg
cs
xchg
es
rcl
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
pop
mov
aaa
dec
push
fs
push
les
push
dec
cld
inc
sub
push
inc
in
mov
push
dec
les
push
ins
retf
mov
mov
lods
push
inc
in
(bad)
inc
in
stos
push
dec
in
mov
dec
in
mov
push
ins
adc
push
je
mov
sub
push
pop
in
mov
dec
jb
mov
xor
or
sub
les
jne
xor
xor
fld
or
aad
rcl
inc
mov
and
mov
ins
mov
sub
cmp
lock
imul
retf
add
iret
in
mov
mov
ds
xchg
daa
aad
sbb
dec
mov
pushf
mov
xor
test
fsubrp
nop
add
push
dec
das
mov
fidivr
pushf
and
push
xchg
and
mov
cmc
ret
xchg
pop
or
xchg
into
sbb
or
mov
mov
bound
mov
inc
inc
ins
dec
xlat
loopne
rol
xor
scas
popf
rol
fisttp
pop
mov
mov
pop
pop
cmp
loope
jl
pop
test
mov
in
sub
in
xor
dec
daa
mov
push
cmp
out
arpl
xor
stc
in
out
mov
jb
dec
pop
mov
jbe
mov
xchg
retf
bound
fidiv
xlat
or
in
mov
or
add
xor
pusha
ja
sbb
xor
daa
es
(bad)
jmp
and
dec
sub
cmc
or
adc
fmul
pusha
jg
movs
cld
fisub
data16
lods
jne
in
test
aam
push
arpl
push
pop
jne
inc
push
push
and
push
and
push
adc
sub
xchg
xor
imul
xor
loop
mov
inc
xor
pop
iret
push
xor
fcomip
cmp
and
xchg
inc
enter
xlat
dec
xchg
add
popf
mov
fs
popa
sbb
cs
push
lock
pop
jl
push
pusha
in
outs
push
cmc
std
xchg
jb
sbb
adc
mov
xor
jp
iret
mov
mov
jae
in
retf
sbb
dec
and
xor
fmul
fdiv
pop
xchg
xchg
stos
xor
jg
jmp
push
push
push
std
jne
lock
sbb
sub
xchg
dec
call
mov
sahf
or
xchg
push
push
inc
inc
inc
lock
and
push
adc
mov
sbb
or
icebp
push
les
or
in
adc
in
or
call
jecxz
sar
jb
call
int3
push
jmp
lods
cmp
adc
stos
test
shr
and
jp
ss
in
pop
or
xchg
movs
(bad)
jmp
inc
(bad)
fimul
loopne
test
clc
add
fnsave
leave
ret
aad
sahf
sub
leave
xchg
dec
pop
retf
or
in
pop
js
mov
in
mov
dec
adc
or
jecxz
xchg
add
push
(bad)
add
jmp
addr16
in
(bad)
push
enter
cmc
(bad)
jg
mov
test
push
in
hlt
dec
fdivr
push
xor
mov
jmp
imul
test
inc
hlt
call
in
mov
push
fs
stos
push
aam
mov
aam
xor
push
adc
add
or
push
std
and
xchg
stos
imul
ds
test
cmc
pop
xor
ret
and
push
pop
fs
push
in
lock
mov
xchg
adc
or
popa
push
xchg
sbb
mov
jb
bound
add
lock
jo
inc
retf
push
mov
test
aam
aaa
dec
push
je
jnp
xchg
push
mov
add
mov
in
fmul
loop
push
add
mov
loopne
(bad)
ja
loopne
mov
fistp
rol
data16
out
ret
lahf
cmps
adc
ss
push
cld
cmps
sbb
mov
add
push
out
push
js
mov
sub
dec
mov
dec
jmp
les
xchg
lock
xchg
fisub
sbb
dec
sub
sub
nop
cmp
jb
jbe
(bad)
push
xchg
sahf
imul
call
and
xchg
dec
pop
push
fidivr
sbb
jg
loopne
scas
inc
data16
cmps
and
sti
push
outs
add
cli
mov
scas
in
sub
leave
fistp
nop
lea
rcl
fs
loope
aam
(bad)
jne
or
push
mov
or
or
sub
adc
sub
xchg
mov
push
xor
pop
aaa
gs
push
pop
lods
lods
jmp
fucomip
xor
mov
call
cld
or
xchg
mov
push
test
popf
dec
inc
and
out
dec
xchg
jge
pop
adc
retf
push
mov
sbb
in
push
aas
mov
xchg
je
aaa
ds
shl
jbe
out
inc
shr
call
and
lods
xchg
xor
(bad)
ins
ds
xchg
lods
or
popf
js
test
mov
cmovge
into
sub
and
push
out
in
mov
mov
test
push
aam
sbb
in
mov
stos
push
fsubp
push
dec
adc
aam
scas
jne
mov
pushf
mov
(bad)
shl
sub
dec
ror
(bad)
popf
mov
xchg
imul
imul
add
test
jbe
rol
push
sbb
and
mov
xchg
adc
jbe
adc
push
jmp
sub
addr16
mov
push
movs
test
sbb
ret
ss
add
sub
lock
add
jno
jo
test
scas
or
out
inc
cmp
fld
js
cmp
in
mov
ret
std
sbb
retf
mov
js
outs
test
xchg
pop
dec
pop
xchg
aam
in
pushf
xchg
nop
not
push
enter
int
cmps
mov
inc
sub
push
push
in
mov
push
in
mov
dec
cld
mov
push
les
cs
cmc
cmp
inc
jle
lahf
dec
lods
nop
cmps
dec
in
fld
push
fs
pop
repnz
jo
sbb
mov
fsubr
out
sbb
adc
jnp
aaa
mov
cmps
in
neg
add
sbb
nop
jl
fwait
rep
ins
and
mov
cmps
jns
jb
out
ins
test
xor
test
fidiv
dec
(bad)
fdivp
pop
rcl
call
scas
pop
sbb
cmp
mov
shr
sbb
jg
dec
shr
xor
fimul
sti
lock
or
imul
mov
into
adc
mov
pop
fidiv
mov
sub
sub
jb
nop
lods
leavew
aam
xor
enter
pushf
movs
call
mov
out
jge
dec
in
(bad)
mov
cmp
inc
sar
fisttp
retf
add
(bad)
fwait
mov
sti
clc
mov
scas
hlt
nop
xchg
and
lods
cmp
scas
data16
outs
fsubr
div
mov
(bad)
aam
inc
or
pusha
nop
sub
mov
xchg
add
ja
ds
stos
pop
xchg
add
cmp
dec
xor
mov
ror
pop
jle
jg
stc
inc
adc
pop
mov
inc
aaa
pop
jmp
mov
outs
icebp
mov
pop
movs
mov
stos
aaa
cmp
and
pop
inc
mov
lock
out
test
cmps
test
(bad)
int
and
xor
cs
push
mov
and
inc
lock
push
(bad)
jns
pop
test
int3
xor
fidivr
fidivr
fcomi
jle
fld
lds
mov
jno
lods
ja
mov
sbb
mov
and
jecxz
imul
call
repnz
push
or
cmps
rcr
in
sub
rcr
xor
dec
mov
sub
arpl
movs
sahf
and
jl
push
shl
mov
fidivr
jmp
ins
adc
imul
daa
push
shr
pop
inc
pop
ja
hlt
adc
xchg
outs
mov
mov
xchg
iret
sub
rol
mov
push
pop
xor
and
jno
jge
ss
pushf
and
enter
fadd
(bad)
fbstp
test
leave
lock
and
or
(bad)
pusha
push
jecxz
mov
add
cmp
js
mov
fdiv
(bad)
xchg
push
fs
mov
dec
in
push
dec
int3
mov
push
fmul
into
xor
fucomp
test
in
mov
in
jmp
pop
pop
cli
push
inc
inc
mov
test
rol
mov
adc
mov
mov
out
pop
(bad)
xchg
push
mov
out
lmsw
sti
sub
xor
jle
sbb
sbb
mov
mov
ins
fbstp
inc
and
mov
test
fnstenv
pop
xchg
int
pop
xor
xchg
rol
inc
ds
xchg
sbb
and
in
imul
mov
xchg
push
jmp
out
or
aas
push
call
push
pop
pop
jecxz
test
adc
stos
mov
xor
aas
inc
push
inc
xchg
xchg
outs
pop
popf
add
jo
pushf
or
in
loopne
(bad)
jecxz
ror
in
xchg
sub
cmp
fsubr
jg
xchg
cmp
jb
stos
fidivr
cld
pop
mov
ins
sbb
enter
mov
int
xchg
int3
jl
aam
inc
lods
aad
jno
inc
xor
cmp
shl
pushf
push
dec
push
mov
fwait
adc
loopne
mov
jo
sbb
add
pop
cmp
mov
rcl
out
in
aad
dec
out
inc
sub
sub
test
test
jecxz
xchg
xchg
jecxz
sbb
mov
adc
pusha
cli
or
push
adc
mov
enter
push
sahf
leave
pop
lods
sub
les
adc
push
lgs
ins
xchg
pop
xor
div
outs
fld
cwde
sbb
xchg
jmp
lds
add
inc
fbld
add
ss
das
in
enter
cmps
out
mov
outs
scas
and
sbb
dec
xor
push
iret
clc
test
xchg
or
sbb
stc
imul
outs
mov
std
ret
mov
sahf
jg
repnz
int
es
add
push
xor
pop
mov
mov
jmp
push
fwait
(bad)
cmp
mov
cmps
mov
inc
rcr
add
mov
shl
mov
fstp
(bad)
and
push
cmp
test
out
gs
addr16
fiadd
es
out
(bad)
loope
(bad)
jmp
leave
pop
cld
push
pop
adc
jg
dec
jg
cmp
loopne
cmp
xchg
and
and
pop
into
jmp
inc
cmp
jmp
push
addr16
push
dec
jge
fucomip
sbb
mov
adc
icebp
jnp
test
mov
mov
inc
mov
cmp
das
cs
jns
pop
sbb
mov
rcr
inc
pushf
sahf
jmp
push
cmp
xor
cmps
and
fistp
ror
(bad)
aad
arpl
lea
into
mov
popf
mov
cs
aaa
add
or
stos
xchg
cmps
pop
(bad)
out
pop
clc
test
fs
ret
dec
cs
or
adc
(bad)
xchg
inc
inc
jg
push
mov
xchg
push
stos
dec
xchg
jge
inc
pop
popa
add
pop
jbe
dec
or
(bad)
fisubr
in
xchg
cmp
hlt
cmps
and
(bad)
(bad)
cli
dec
mov
sbb
(bad)
push
push
ins
xchg
(bad)
xchg
hlt
jae
jl
mov
mov
cdq
fcmovnbe
inc
in
jl
mov
out
test
rcl
outs
aas
xchg
jne
push
pop
dec
mov
rol
into
cmp
imul
adc
sub
test
pop
fsubr
inc
dec
cld
mov
push
ins
ins
mov
push
(bad)
push
(bad)
(bad)
mov
(bad)
mov
add
sar
inc
ja
xchg
push
inc
and
mov
movs
pushf
inc
std
mov
sbb
cmp
xchg
fisub
pop
cli
jge
mov
mov
mov
pop
vmread
pushf
cwde
add
xor
or
lock
ins
lods
cmp
clc
fcmove
cmp
aas
lods
les
inc
int
sub
and
pop
push
add
and
xor
jmp
neg
adc
pushf
retf
mov
stc
jg
push
test
fs
sub
call
push
repnz
dec
gs
icebp
mov
inc
leave
pop
dec
mov
leave
shr
inc
test
lods
or
fidiv
out
sahf
xchg
int
pop
out
push
pop
cmc
jp
popf
inc
daa
jns
iret
cmp
in
out
lahf
inc
pmulhw
clc
sahf
xchg
push
sub
test
mov
sbb
stc
loopne
lahf
jge
push
mov
or
ja
enter
fimul
sub
nop
out
and
pushf
xchg
fistp
and
ret
call
add
lods
adc
nop
in
aaa
es
xor
hlt
cmp
mov
or
adc
or
mov
popa
call
lea
sub
loopne
mov
ror
les
xchg
sti
cs
cld
cmp
pop
(bad)
(bad)
sbb
jecxz
or
pop
ins
into
xchg
imul
(bad)
fdivr
mov
out
clc
nop
add
pusha
nop
popa
(bad)
pop
addr16
cmp
xchg
or
loopne
popa
jb
mov
or
fistp
xor
inc
int3
(bad)
lahf
pop
xchg
lea
mov
mov
push
mov
sbb
xchg
cs
push
dec
adc
adc
je
or
jo
sbb
neg
mov
jg
and
fist
jbe
and
data16
jbe
out
mov
mov
call
push
mov
xor
xchg
jbe
cmp
punpckhwd
nop
repz
push
add
repnz
mov
jmp
idiv
out
in
sbb
mov
fcmovnbe
push
or
es
jmp
pop
pop
mov
push
sbb
jne
push
lods
and
pusha
and
int
xor
and
cmp
popf
in
inc
and
mov
ret
das
(bad)
jnp
or
hlt
jp
adc
shr
add
mov
jmp
mov
dec
popf
fimul
out
xchg
nop
repnz
mov
dec
stos
xchg
into
mov
cmc
(bad)
mov
out
inc
es
xchg
mov
popf
mov
mov
jb
jae
pop
pushf
xchg
mov
ds
fisubr
fs
shr
dec
movs
xchg
inc
call
jmp
sbb
add
sbb
pop
jl
(bad)
gs
sbb
jo
and
xchg
or
xchg
ja
push
into
rcr
adc
jne
shl
(bad)
mov
pop
and
add
push
adc
retf
push
icebp
push
bound
adc
inc
sbb
js
loope
shl
addr16
shl
push
cmp
fbld
adc
mov
push
or
xor
pop
sbb
sub
aaa
sbb
jmp
cmp
jp
es
sub
push
in
ins
aam
test
mov
stc
xor
ret
inc
or
ss
and
int3
jb
add
ja
inc
dec
pop
pop
loope
ins
sbb
ds
mov
iret
enter
sub
add
or
aas
je
mov
mov
push
outs
lock
lahf
into
mov
mov
and
lods
add
and
pusha
out
push
adc
xchg
adc
test
sbb
mov
pop
sub
scas
add
jo
leave
and
mov
cmps
mov
add
movs
in
mov
xor
mov
xchg
xchg
mov
fsubr
push
div
(bad)
push
in
mov
xchg
xor
and
or
mov
mov
fwait
leave
stos
stc
in
ss
or
push
sub
add
test
rcr
jmp
jp
dec
std
and
cmp
call
mov
inc
test
out
and
mov
loope
pusha
pop
jge
or
pop
scas
mov
stc
xlat
mov
cmc
loope
iret
repnz
mov
pop
jno
adc
scas
stc
cdq
mov
mov
jecxz
fcom
std
sub
sub
sbb
pop
inc
mov
call
xor
jne
inc
dec
loope
sbb
out
pop
cmp
sbb
jmp
retf
imul
in
xor
int3
mov
push
push
in
xchg
cs
in
push
dec
gs
xchg
jecxz
test
jmp
inc
lods
cmp
(bad)
push
ins
mov
bound
jg
iret
fnstcw
test
int
dec
cmps
push
ss
jb
inc
jge
adc
sti
fwait
xor
nop
push
adc
mov
jecxz
sub
push
dec
loop
push
or
xchg
push
lds
mov
icebp
ins
movs
scas
mov
xor
pop
cs
pop
ds
stos
xchg
pop
nop
int3
xor
cmp
jge
and
mov
ret
or
ins
les
cdq
(bad)
and
scas
jns
movs
mov
sub
inc
xchg
mov
cmp
sbb
push
jle
retf
sar
jle
gs
add
add
out
dec
data16
sbb
movs
sbb
ret
fimul
fld
movs
int3
dec
xchg
and
lahf
xchg
and
jp
rcl
out
sub
adc
jmp
lods
mov
or
rcr
clc
xchg
jnp
mov
jo
mov
xchg
push
loope
sti
outs
ins
scas
jo
or
mov
dec
aad
pop
aad
or
sbb
lds
(bad)
inc
aaa
stos
mov
in
repnz
mov
inc
jecxz
push
xchg
fisubr
push
mov
sub
jne
jle
jns
lods
push
xchg
je
mov
cmc
sub
cmp
jmp
dec
rol
push
cmp
jecxz
in
push
xchg
jge
push
jno
loope
fistp
pusha
inc
int3
shl
movs
in
sub
int
pop
mov
and
sub
mov
call
ret
jns
pop
imul
inc
mov
or
(bad)
dec
add
ss
rcl
push
pop
add
out
inc
shl
xchg
dec
popa
in
mov
ins
(bad)
fld
push
loope
neg
jmp
pop
mov
(bad)
dec
cmp
(bad)
int3
mov
or
xchg
or
out
and
cmps
call
movs
xor
loope
lods
rcl
test
and
das
and
add
(bad)
adc
add
js
loopne
mov
xchg
xor
xchg
cmp
retf
add
rcl
scas
repnz
jge
or
ins
adc
or
xchg
xor
pop
fs
loop
mov
xchg
adc
mov
fcomp
repz
clc
and
lea
lahf
mov
arpl
cs
xchg
call
cmp
jnp
js
cmps
out
jge
ins
mov
push
test
int
pop
mov
cdq
add
and
fsub
push
stc
mov
xor
stos
gs
jl
cwde
pop
aaa
cmp
cli
sbb
adc
jno
jns
or
push
pop
rol
mov
add
cld
pop
loope
mov
and
js
and
mov
cmp
scas
sub
pop
mov
popf
ret
shl
mov
or
in
or
xor
sbb
dec
std
sub
outs
jbe
xor
or
jp
mov
imul
enter
stos
js
push
pop
mov
pop
xchg
cmp
or
jbe
or
cmp
dec
(bad)
or
aaa
mov
pop
aaa
push
ins
xchg
(bad)
mov
jge
push
adc
jns
dec
mov
xor
jb
stos
xor
sbb
ja
inc
test
and
les
sub
shl
cmp
cmp
sbb
pop
into
xor
nop
mov
dec
pop
std
add
(bad)
push
mov
jns
xlat
mov
dec
mov
sbb
lods
adc
jo
push
pushf
dec
cld
inc
(bad)
push
dec
fidivr
mov
dec
jge
sub
adc
or
mov
mov
int
pop
xor
in
mov
dec
call
mov
ud2
jmp
in
js
sbb
pushf
mov
mov
repnz
add
fcomip
sahf
imul
or
cli
arpl
jle
int3
nop
cwde
daa
mov
xlat
data16
rol
imul
outs
mov
cwde
mov
adc
scas
inc
dec
in
sub
push
pop
in
mov
push
dec
fs
push
int
mov
(bad)
(bad)
fwait
in
repnz
adc
push
int
mov
xchg
add
pop
jnp
aaa
fmul
or
jl
leave
fstp
cmp
pusha
xor
mov
ret
mov
(bad)
fld
out
(bad)
adc
stos
dec
das
ss
sub
shr
xchg
xor
jge
pusha
lods
cmp
jg
inc
in
adc
mov
push
mov
mov
xlat
mov
xlat
xchg
xchg
sti
jnp
jmp
gs
sbb
xchg
scas
adc
and
(bad)
pop
add
mov
rol
jnp
sub
daa
es
inc
xor
js
scas
in
jnp
scas
(bad)
sti
inc
ins
popf
das
fnstsw
sub
xchg
jmp
mov
(bad)
mov
shr
dec
test
scas
in
gs
adc
and
fwait
cli
sub
jne
fwait
push
movs
jmp
stos
and
lahf
clc
outs
mov
imul
cmps
lea
jg
ret
xlat
pop
icebp
inc
jns
dec
mov
leave
push
jae
rol
fldenv
stc
hlt
cmp
sub
mov
(bad)
lahf
mov
jmp
adc
rcl
fsubr
mov
dec
cmc
pop
rcl
push
mov
push
and
mov
mov
or
inc
dec
push
imul
(bad)
adc
in
retf
jae
mov
std
sar
arpl
push
ficom
scas
ret
shl
pop
jns
sbb
movs
imul
dec
lahf
jae
ja
scas
cmps
cmps
mov
mov
add
cmp
and
cmps
in
repz
movs
push
lds
inc
hlt
mov
pop
in
mov
inc
in
mov
dec
in
push
les
push
inc
loopne
pop
jmp
pop
fs
push
int
mov
sub
push
xor
jbe
push
mov
push
loop
iret
test
xor
nop
inc
or
cmp
mov
stos
mov
push
mov
fstp
xor
in
mov
jmp
push
fcomp
push
dec
movs
pop
fldenv
sbb
clc
aad
cmc
outs
and
and
pushf
jle
iret
data16
mov
stc
rcl
mov
mov
adc
xchg
mov
mov
in
aaa
sar
call
xchg
ja
push
cs
sbb
sti
psrad
fist
push
sub
xchg
dec
xor
dec
in
inc
ds
push
or
lock
dec
ins
jmp
pop
jae
jmp
test
je
hlt
xor
stc
add
jle
pop
mov
xchg
std
mov
ret
and
pop
cmp
add
jp
in
mov
jno
dec
or
dec
jp
ror
(bad)
pop
mov
loop
or
dec
push
push
scas
or
fild
inc
add
int3
(bad)
dec
not
push
adc
aas
inc
dec
adc
vandnps
dec
dec
(bad)
jbe
or
jge
clts
ins
adc
neg
inc
pop
cmc
pop
sbb
xor
push
fnstsw
inc
movq
jle
test
rcl
mov
xor
scas
out
fcom
dec
pop
xor
xchg
imul
sbb
push
jnp
xor
fisttp
add
push
mov
xchg
stos
outs
bound
retf
shl
dec
loopne
sub
clc
push
lock
dec
sub
dec
imul
add
jecxz
adc
iret
cmc
test
mov
popf
mov
in
lds
inc
inc
shr
lea
push
mov
jbe
test
sub
or
xor
jge
adc
nop
xor
jecxz
mov
mov
cli
in
fisub
lds
sub
lods
lods
mov
sub
push
push
in
push
inc
in
stos
push
dec
fs
dec
mov
pusha
mov
inc
ins
mov
leave
loop
add
(bad)
mov
xor
inc
ins
mov
push
cld
xchg
mov
outs
nop
push
loop
dec
out
fnstsw
outs
push
cmp
loope
std
lods
push
fmul
repnz
cld
or
jb
pushf
pop
dec
repz
cdq
bnd
cwde
imul
sti
sbb
cdq
test
int3
test
mov
int
daa
jle
(bad)
jnp
push
scas
sub
gs
sbb
lea
mov
std
arpl
jl
mov
push
mov
cmp
test
call
(bad)
das
push
aam
loopne
iret
in
add
daa
pop
push
fwait
lds
xor
pushf
pop
inc
lea
sub
iret
retf
inc
xor
jmp
lock
scas
rcr
and
cmc
popa
xor
aaa
push
push
and
xor
(bad)
aas
in
add
or
dec
pop
xor
dec
mov
addr16
out
cs
lock
fwait
push
pop
mov
cmp
push
clc
cmp
pop
(bad)
mov
cmp
mov
cmp
(bad)
idiv
pop
cwde
mov
hlt
mov
test
les
imul
ss
(bad)
stos
or
das
out
pop
and
mov
adc
aam
ret
(bad)
mov
dec
pop
xor
jp
jbe
loopne
fisubr
adc
out
mov
dec
js
into
leave
call
dec
lea
(bad)
push
xchg
mov
clc
jg
mov
cmp
pop
mov
imul
push
mov
mov
movs
push
test
sub
and
jmp
outs
mov
mov
pop
lods
adc
mov
ins
xor
jns
mov
pop
lock
cmp
dec
(bad)
int3
mov
xlat
shl
xor
aaa
mov
or
imul
test
xor
scas
jmp
pop
mov
(bad)
hlt
pop
xchg
dec
mov
or
and
jnp
add
gs
jg
test
inc
shr
scas
bnd
daa
icebp
mov
(bad)
cmps
sbb
fucomi
in
inc
mov
repz
out
mov
enter
adc
jecxz
loopne
ss
adc
mov
fdiv
bound
or
xor
movs
outs
retf
jne
or
push
dec
js
mov
sti
sbb
das
test
add
lods
add
xchg
mov
js
dec
xor
outs
es
push
cwde
(bad)
mov
outs
mov
jne
mov
pop
cs
call
icebp
sar
in
(bad)
xor
cmc
fmul
jbe
les
cmp
fdivr
push
int
cmps
mov
hlt
add
ins
mov
test
mov
cmp
mov
mov
cmps
fsubr
jnp
shl
or
mov
inc
push
and
cmp
sti
loopne
fadd
pop
jge
aam
iret
shl
add
mov
sbb
into
fmul
jae
data16
fcomp
jp
sbb
fucomi
pop
push
jmp
out
fwait
ss
cmp
pop
push
arpl
arpl
mov
sub
loop
sub
xor
inc
jmp
les
push
mov
sub
cmp
fidiv
and
push
inc
sub
out
or
xchg
push
cmp
push
add
pushf
shl
add
mov
jbe
push
xor
imul
cdq
test
jo
out
mov
ja
xchg
in
inc
adc
mov
inc
inc
mov
pop
push
aas
mov
dec
ins
push
ins
clc
inc
aad
(bad)
mov
dec
xchg
mov
cdq
push
push
je
cmp
int
or
jl
mov
or
sbb
jmp
add
(bad)
test
into
outs
(bad)
sbb
test
push
rcr
sub
adc
int3
jne
push
xchg
cmps
jecxz
sub
mov
push
je
ins
ja
jae
cmps
cwde
lock
mov
push
fs
jp
ins
in
out
lods
ins
ror
adc
fnstsw
xlat
jecxz
mov
sub
adc
sub
jl
(bad)
mov
mov
arpl
jne
mov
imul
adc
sbb
pop
xlat
cmp
(bad)
and
dec
xor
cmc
(bad)
in
and
in
out
in
neg
mov
mov
cmp
imul
mov
jns
jns
xor
pop
inc
inc
sub
std
popa
data16
mov
push
outs
mov
mov
or
mov
mov
mov
dec
mov
sub
pop
mov
neg
or
adc
pop
mov
xchg
cmp
adc
arpl
inc
or
retf
mov
stos
cmp
jge
add
seto
jbe
add
cmps
inc
dec
mov
(bad)
sub
out
clc
dec
gs
inc
in
xchg
sbb
mov
xchg
mov
mov
push
xor
inc
pop
iret
rol
rep
fucomip
mov
leave
mov
out
lods
lock
xchg
jg
in
ror
sub
mov
int3
push
daa
ja
mov
bound
mov
fdiv
xchg
dec
dec
pop
sbb
xchg
ds
loope
pop
int3
pop
sbb
(bad)
leave
data16
adc
inc
mov
inc
push
push
shr
cmp
or
ds
test
pop
mov
cmp
mov
and
jno
add
scas
ds
out
mov
xchg
or
mov
pop
shr
imul
fnsave
sub
mov
xchg
mov
mov
retf
lock
dec
or
mov
push
sub
mov
or
sbb
or
in
mov
repnz
in
mov
dec
hlt
mov
rcr
push
pop
int3
mov
push
ins
int3
mov
es
call
test
outs
adc
jmp
ins
retf
inc
loop
in
xchg
xor
cld
inc
add
in
jmp
push
les
es
es
sbb
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
mov
sbb
or
mov
or
xchg
push
imul
test
inc
in
mov
push
dec
les
push
ins
adc
ss
in
push
pushf
in
or
push
dec
in
mov
dec
in
mov
push
push
adc
push
jl
lods
es
push
pop
in
mov
dec
out
mov
cmps
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
cli
in
mov
dec
in
cmp
push
jmp
push
test
inc
into
pop
pop
push
ins
cmp
inc
jne
leave
aaa
popf
pusha
mov
scas
cmp
push
xor
pop
cmp
pop
popf
es
jbe
idiv
stos
xchg
sub
xchg
repz
repz
test
xor
or
push
inc
ror
xchg
(bad)
xchg
out
or
sub
push
sbb
pusha
(bad)
or
arpl
int3
ret
outs
sbb
pusha
stos
rcr
clc
jmp
pop
(bad)
mov
sub
outs
mov
sbb
or
cmc
ins
popf
das
or
inc
push
push
fdivr
scas
mov
inc
mov
movs
mov
div
push
mov
and
leave
loopne
shl
and
jne
xlat
int3
aaa
mov
es
ja
shl
add
fdivr
enter
and
mov
jmp
mov
lock
not
mov
mov
jae
pop
leave
sbb
mov
push
fadd
or
add
mov
push
dec
cwde
movs
add
mov
mov
xchg
xchg
nop
aas
ficom
data16
pop
(bad)
mov
loop
pusha
fisttp
jmp
pop
cmp
and
lods
sbb
mov
xchg
in
adc
in
cmp
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
adc
push
xor
mov
or
push
inc
in
mov
dec
in
mov
push
pop
dec
call
int3
mov
xchg
iret
in
or
les
inc
fs
dec
xchg
test
iret
xchg
jg
mov
push
jge
je
mov
pop
cmps
push
inc
in
sbb
cmps
xchg
int3
(bad)
(bad)
(bad)
stc
cmps
pop
fidivr
mov
addr16
push
sbb
int3
jbe
xor
and
jg
js
push
dec
sbb
rcl
mov
dec
(bad)
pop
fbstp
mov
xor
xchg
mov
and
dec
stc
jmp
fadd
rol
mov
push
ja
int3
mov
push
iret
xor
push
test
or
mov
dec
xchg
aas
jno
(bad)
mov
push
das
pusha
idiv
xor
(bad)
popf
enter
das
call
or
out
mov
dec
popa
ins
jb
and
fisub
sti
mov
mov
pop
inc
ss
scas
pop
cmp
shl
pusha
mov
retf
mov
cmp
push
fldcw
sti
lahf
shl
ror
outs
mov
xor
adc
push
mov
xchg
or
push
mov
nop
add
shl
cli
xor
cmps
test
add
dec
rcr
bound
pop
repnz
sbb
or
cmc
mov
setne
pop
add
mov
jmp
(bad)
lahf
out
sub
das
test
add
arpl
and
push
fmul
sub
movs
push
push
test
mov
mov
cwde
inc
test
popf
retf
into
inc
jno
jbe
sbb
adc
scas
mov
push
rcl
dec
inc
xor
je
mov
mov
jle
in
xor
pop
imul
or
cli
or
mov
inc
sub
dec
mov
in
fwait
sub
mov
stos
ficomp
mov
jmp
loope
test
outs
pop
inc
dec
ds
inc
sub
fbstp
dec
lea
add
stc
sub
xchg
mov
sbb
push
jmp
scas
push
fadd
ja
jl
jmp
emms
leave
mov
mov
jno
lock
icebp
mov
mov
imul
add
cmp
loop
inc
mov
mov
fld
push
push
(bad)
sbb
xchg
mov
ficom
and
adc
mov
aas
and
mov
cmp
sub
rol
mov
mov
not
imul
lods
add
jne
add
sub
and
adc
jns
jmp
lock
outs
push
les
push
dec
hlt
mov
dec
in
mov
push
fdivr
in
inc
xor
outs
out
add
lods
scas
add
in
fld
push
mov
inc
pop
call
mov
jg
xchg
adc
test
and
jmp
ins
in
add
mov
xor
rdtsc
mov
sbb
sbb
stos
out
scas
sbb
inc
inc
daa
cmp
jmp
pop
or
sbb
in
jnp
aad
(bad)
cmp
ins
mov
neg
int3
hlt
sub
cmp
test
sub
pusha
pusha
pop
(bad)
and
sahf
call
das
inc
stc
xchg
push
mov
jae
sbb
sbb
xchg
lods
jl
imul
scas
cmp
sub
sahf
cwde
inc
outs
mov
dec
add
mov
mul
inc
call
repz
mov
mov
cmovo
xor
adc
mov
add
stos
pop
ret
fcomp
shl
es
fwait
add
in
stos
lods
xor
pop
enter
ja
mov
pop
mov
mov
jae
aas
add
push
test
out
mov
fwait
mov
in
sbb
retf
cmp
ins
in
and
mov
pushf
pop
xchg
cmp
push
dec
(bad)
clc
adc
pop
mov
mov
ss
adc
repz
jne
aam
ins
nop
and
mov
data16
xor
mov
add
test
int
push
jbe
mov
add
fwait
pop
sub
push
push
jl
lods
jg
pop
adc
hlt
xor
lods
dec
xlat
and
push
adc
dec
or
cmp
pop
mov
sbb
leave
pop
stos
pop
adc
or
xlat
mov
push
fist
pop
mov
dec
mov
loopne
je
pop
push
scas
push
or
dec
test
sahf
jb
bound
sbb
popa
or
jl
jmp
dec
int3
mov
inc
in
stos
push
dec
cld
mov
push
les
push
inc
ins
sub
int
stos
das
fwait
in
hlt
pop
sbb
push
inc
pushf
mov
pop
jmp
xor
xor
(bad)
sbb
jno
clc
jmp
xor
sbb
sbb
cmc
pop
or
icebp
hlt
(bad)
pushf
mul
xor
test
mov
inc
jmp
sub
mov
mov
xchg
pushf
dec
inc
xchg
sub
fidivr
push
fsub
pop
mov
fist
fadd
jbe
ja
xchg
cmc
(bad)
push
dec
and
js
test
fdivr
pop
shl
or
popa
test
or
cmps
dec
xchg
nop
fmul
jg
xor
shl
popf
aam
jne
enter
pop
pusha
cld
dec
(bad)
dec
stos
sub
cmp
test
fnop
dec
sub
pop
cmp
mov
popa
sub
cmp
out
gs
fs
adc
xor
cli
and
repz
jle
test
out
inc
int3
push
push
inc
into
fcomp
iret
push
adc
xchg
cmps
fmul
xor
leave
movs
mov
adc
popf
icebp
pop
hlt
call
movs
stos
push
fs
mov
push
push
je
push
fmul
xchg
xchg
push
inc
addr16
inc
out
push
fnstsw
adc
bound
cs
clc
sbb
(bad)
in
cmp
arpl
mov
pop
adc
xchg
or
push
jl
mov
dec
or
cmc
lods
cmovne
fadd
jb
pop
mov
push
lods
jno
es
dec
movs
cmp
sahf
hlt
mov
push
(bad)
rcr
jmp
(bad)
xlat
and
test
pop
test
adc
scas
pusha
dec
mov
add
mov
dec
pop
or
loop
or
cmc
and
ret
and
fcmove
ins
sbb
ja
pop
ja
pop
dec
push
mov
pusha
sub
add
add
dec
adc
mov
ss
xchg
sub
push
pusha
cmp
xor
(bad)
repz
shr
call
add
sbb
mov
mov
ss
cmps
enter
aad
sub
lods
fucomip
cmp
jge
outs
shl
jnp
in
fdivr
fild
clc
out
mov
int
and
cmc
loop
xor
or
and
call
fst
out
in
or
iret
adc
inc
or
in
(bad)
xchg
push
ds
jl
inc
or
push
pop
adc
cmp
sbb
push
scas
or
jg
cs
jecxz
call
enter
fidivr
cmc
xchg
push
sub
mov
(bad)
loopne
push
mov
push
and
xchg
scas
test
sar
popa
aad
cmp
and
cmp
loope
sub
jmp
push
jb
(bad)
jo
das
aad
cmps
mov
movs
xlat
jnp
jo
jecxz
ins
fld
(bad)
aad
mov
rcr
mov
inc
cmp
in
sub
cmp
sub
sbb
ins
loop
pop
retf
xchg
xchg
out
sub
loop
mov
std
das
cdq
sub
call
push
(bad)
jp
arpl
nop
sub
test
movs
jg
rcl
pop
pmulhw
pop
sbb
jmp
push
or
jmp
mov
stos
(bad)
dec
in
cmp
test
lea
cmps
aas
repz
sub
sub
push
pop
mov
test
push
ja
pop
jmp
xor
inc
or
sbb
test
pop
in
ss
stos
dec
shl
ja
call
fld
cmc
add
cmp
call
xchg
mov
retf
sub
in
popf
push
mov
lods
cwde
xchg
lock
mov
jecxz
mov
gs
shl
xor
(bad)
cmp
fst
stos
mov
ins
and
push
or
mov
test
sahf
mov
or
mov
ret
inc
sub
adc
inc
sbb
sub
sahf
dec
pop
jp
loopne
std
cdq
retf
jbe
fmul
aad
mov
pusha
xor
mov
in
cdq
pop
test
inc
mov
cmc
in
mov
(bad)
cmps
cmp
lds
cdq
inc
mov
jp
cld
pushf
pushf
inc
fisttp
aam
je
in
cmp
xchg
test
arpl
fistp
jle
gs
xor
out
(bad)
aad
dec
pushf
lea
clc
jecxz
mov
inc
ins
mov
je
gs
(bad)
xlat
loop
mov
fsub
or
cwde
mov
and
mov
push
sbb
fcmovnu
or
cmc
push
aam
and
loop
xor
cli
icebp
jl
scas
or
es
push
jns
xor
stc
xor
push
add
mov
cwde
pop
ror
lock
ror
push
adc
and
leave
cmps
(bad)
cmp
cmp
jg
xchg
inc
loope
jnp
xchg
jb
xchg
repz
daa
ret
dec
jnp
xor
(bad)
movs
(bad)
fs
in
(bad)
mov
push
aam
mov
dec
pop
stos
int3
fldenv
jg
sub
pop
xor
shl
mov
dec
retf
aad
test
(bad)
inc
pop
cwde
call
sti
enter
stc
push
ins
(bad)
sub
shl
movs
jecxz
cmp
mov
loop
icebp
or
inc
or
loopne
rol
ds
in
cmp
pop
dec
mov
pop
jmp
pop
xchg
iret
xor
dec
adc
add
add
(bad)
pop
pushf
stos
pop
push
and
mov
jbe
ret
cmc
test
cli
std
outs
cmp
adc
jne
in
mov
mov
pop
jnp
sbb
inc
pop
cmp
add
pop
mul
ret
xor
(bad)
scas
stos
popf
sub
sub
aaa
sahf
mov
fdivrp
das
inc
xchg
sbb
les
mov
push
mov
jne
xor
loop
dec
jge
or
sbb
gs
shl
xchg
sub
pushf
out
xor
pusha
scas
cmps
cmp
jecxz
mov
xchg
mov
into
loopne
dec
push
cmps
xor
or
loopne
movs
mov
cmc
mov
clc
pop
mov
xor
jmp
sbb
xor
aam
shl
mov
enter
sbb
mov
icebp
xor
dec
inc
cwde
mov
je
mov
into
mov
or
xchg
test
ja
test
pop
xor
adc
ins
rcr
adc
push
mov
ss
mov
ret
jno
sbb
aaa
cld
pop
ret
aad
and
lea
pusha
xlat
dec
or
scas
cmp
test
mov
jne
sub
mov
inc
dec
cmp
mov
aaa
shl
cld
popa
add
fwait
hlt
dec
fldcw
int
cmps
pop
mov
xor
gs
(bad)
jmp
ds
add
mov
lods
sar
inc
shl
test
retf
push
and
cmp
lahf
es
jle
pop
ja
or
inc
or
shr
(bad)
sub
lahf
xor
pop
sub
pop
retf
bound
mov
adc
cld
in
dec
sub
jmp
lock
push
jo
mov
sti
and
lock
dec
adc
xlat
nop
repnz
jp
cmc
and
inc
dec
pop
call
jbe
push
cld
ror
xchg
loope
push
out
mov
mov
cmp
fucomi
cmp
daa
mov
xor
outs
add
sbb
jo
sahf
xor
jb
sahf
test
inc
retf
test
pop
repz
clc
pop
dec
sti
test
shl
retf
xchg
dec
cld
mov
mov
xchg
out
mov
sbb
sub
jge
jns
jmp
loop
push
or
cmps
xor
popa
mov
out
(bad)
jge
dec
xor
add
sbb
fidiv
cwde
xchg
mov
dec
hlt
out
das
jbe
rcl
iret
mov
iret
jp
fbstp
stos
and
test
add
fwait
lock
and
test
xchg
(bad)
jne
repnz
xor
mov
push
add
jbe
adc
push
mov
imul
or
and
push
mov
add
jmp
test
iret
movs
inc
lods
dec
aas
add
dec
lahf
movs
hlt
sub
jmp
call
arpl
pop
mov
aam
mov
es
mov
and
jnp
ficomp
pop
pop
and
mov
jno
dec
gs
fisttp
mov
in
mov
add
mov
adc
into
xchg
clc
mov
adc
cmp
leave
xor
pushf
arpl
mov
out
jl
sub
inc
fiadd
loop
ja
mov
jmp
push
mov
int
mov
push
pop
in
stos
push
inc
in
push
dec
fs
push
inc
imul
mov
xor
fwait
in
mov
inc
adc
mov
pop
inc
mov
mov
int3
xor
or
int3
jo
ret
arpl
scas
inc
add
fild
inc
jl
mov
(bad)
rcr
jo
xchg
inc
or
and
inc
and
mov
pop
push
je
(bad)
or
xchg
retf
retf
pcmpeqw
out
hlt
cmp
jge
add
pop
gs
push
mov
lahf
cmps
data16
ins
mov
call
and
sahf
das
ret
xor
icebp
fmul
jge
or
pop
fwait
and
ja
jb
out
pusha
mov
sbb
xor
push
mov
xor
or
jecxz
mov
sub
das
int
outs
push
push
jecxz
idiv
fnstcw
or
mov
sub
inc
ficomp
cdq
push
out
test
das
aas
ins
dec
jne
cli
jg
pop
push
mov
pushf
out
ds
push
mov
mov
rol
or
dec
xor
pop
jle
ins
pop
enter
es
lods
js
lea
lods
push
shl
cdq
out
imul
out
call
inc
enter
out
jae
or
inc
jg
(bad)
fisub
or
dec
jecxz
gs
jne
cs
fistp
xchg
jnp
enter
xor
retf
jp
push
add
xor
test
mov
mov
ret
fld
push
and
sub
out
push
push
jo
sbb
(bad)
aas
mov
out
sti
add
shl
(bad)
cmp
sbb
xchg
or
shl
cmp
add
sbb
sub
jmp
scas
push
mov
pop
out
lds
out
repnz
int3
ja
jle
push
cmp
sbb
lahf
fwait
push
daa
pusha
xor
sbb
adc
cmp
mov
movs
inc
mov
scas
xlat
mov
cmp
push
inc
jp
xchg
xchg
pop
enter
xor
xchg
fild
stos
sbb
inc
mov
pop
mov
pop
iret
bnd
fstp
mov
pop
jl
sbb
out
pop
xor
dec
dec
ficom
fdiv
mov
xor
je
stos
pop
mov
clc
jb
sbb
rcl
retf
ins
shr
xor
sbb
or
repnz
fnsave
jecxz
mov
push
sub
xchg
mov
repz
and
out
ins
dec
(bad)
sbb
xchg
dec
sub
fidiv
mov
lods
xchg
int3
mov
jl
je
add
(bad)
in
call
pop
repz
dec
enter
retf
out
ror
cmp
pop
lods
sti
push
nop
cld
ins
pushf
sbb
jo
xor
fnstenv
mov
fisttp
dec
mov
pushf
js
js
dec
cmp
aam
enter
cmps
gs
scas
das
fisub
and
mov
shr
mov
push
jge
int
mov
or
xchg
dec
cmps
mov
and
inc
and
mov
sbb
or
jmp
test
mov
aad
(bad)
add
or
jp
retf
push
xchg
sub
lds
jno
push
push
or
fisttp
aam
adc
cmps
inc
and
test
mov
jle
lods
shl
cmp
and
mov
mov
cmps
add
sub
in
cdq
mov
mov
xchg
mov
enter
ret
stos
int3
mul
sar
aaa
call
dec
mov
xor
aad
inc
retf
push
xchg
popa
dec
dec
cs
mov
shr
xor
push
repz
test
inc
sub
adc
das
sahf
cmp
sbb
dec
xchg
pop
jp
mov
nop
in
push
cmp
mov
add
jbe
sbb
call
mov
cmp
mov
xchg
scas
lock
xchg
push
mov
inc
daa
data16
push
push
mov
dec
lods
in
cmp
jne
add
add
dec
cdq
int
xor
iret
pushf
fistp
scas
mov
test
fimul
or
mov
les
mov
cdq
inc
jo
mov
adc
dec
(bad)
int
pop
call
mov
push
sub
repnz
and
popa
in
pusha
enter
pop
cmps
lock
sahf
dec
mov
add
pop
fbstp
mov
std
mov
mov
lahf
out
push
stos
fist
test
cwde
cmp
into
cs
ss
inc
dec
out
sbb
xchg
xchg
jo
adc
or
cmp
in
and
outs
dec
ins
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
pop
in
mov
push
ins
movs
mov
scas
dec
in
lahf
outs
jo
push
(bad)
std
sahf
push
push
mov
xor
int
mov
dec
ins
xchg
mov
cmp
pusha
mov
lods
jno
mov
dec
out
inc
repnz
in
cli
adc
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
in
mov
push
dec
retf
mov
jbe
cld
mov
push
fs
mov
dec
in
push
dec
gs
xchg
mov
leave
loop
test
xor
fld
push
pushf
test
ficomp
faddp
push
add
jmp
nop
jnp
dec
ret
sub
add
pop
pop
xchg
loop
sbb
scas
sbb
addr16
and
je
loop
ds
test
ds
icebp
push
mov
adc
xchg
iret
or
iret
dec
in
js
and
scas
and
push
scas
push
popf
xor
lds
mov
and
mov
mov
xchg
mov
and
ins
push
pop
sar
imul
ret
pop
jns
cmp
cs
cwde
adc
pop
jmp
gs
adc
inc
inc
ficom
gs
popa
cmp
xchg
sbb
xor
bound
repz
fst
gs
sbb
jnp
loop
(bad)
fwait
sar
sub
pop
mov
mov
loope
or
and
mov
or
(bad)
ins
in
test
jmp
fucomp
ficom
dec
push
mov
scas
test
sbb
les
cld
fidivr
mov
clc
pop
call
mov
lods
fs
es
pop
xor
push
push
hlt
out
mov
retf
int
mov
sbb
(bad)
push
pop
hlt
mov
push
dec
in
mov
push
inc
data16
inc
data16
dec
jmp
pop
or
push
int
mov
mov
sbb
sub
mov
mov
loope
push
(bad)
int3
outs
arpl
fsubrp
fistp
pop
in
(bad)
in
adc
and
hlt
test
adc
ins
or
or
movs
sbb
in
lods
shrd
dec
sub
(bad)
and
ja
add
push
cmp
pop
mov
jmp
enter
out
cli
inc
cmp
idiv
add
dec
and
fsubr
aad
outs
inc
imul
xchg
xor
jmp
hlt
inc
fst
xchg
dec
les
add
arpl
add
retf
mov
xrelease
jne
std
test
add
mov
fldcw
mov
dec
xchg
(bad)
mov
push
add
adc
retf
add
and
in
mov
push
pop
in
mov
es
gs
push
inc
data16
dec
outs
mov
dec
adc
or
or
push
dec
cmp
(bad)
cld
data16
dec
xor
in
lods
(bad)
fcmovu
cwde
add
popf
pop
pop
arpl
push
je
mov
nop
cmps
in
sub
or
dec
mov
jg
dec
xchg
sbb
jns
movs
jo
retf
(bad)
push
xor
xchg
(bad)
ret
or
sbb
lds
push
out
mov
mov
call
imul
out
test
popf
add
mov
push
addr16
adc
push
inc
in
pop
xor
mov
movs
mov
and
mov
aad
(bad)
fsubr
cld
sub
das
cs
lods
jmp
jmp
iret
in
mov
dec
aad
aas
addr16
ins
mov
frstor
or
fcmovne
jmp
mov
push
mov
mov
mov
push
hlt
mov
sub
xor
sbb
mov
jl
or
movs
push
aaa
cwde
out
(bad)
jae
aam
addr16
dec
xor
fsubr
cld
popf
mov
jmp
je
(bad)
ds
lahf
outs
and
cli
inc
and
sub
lea
adc
jno
dec
push
imul
sub
xchg
sub
sahf
hlt
sbb
loop
jbe
dec
inc
xor
in
cmp
mov
push
adc
sar
cmp
jmp
fldcw
icebp
pop
lods
add
icebp
imul
push
cmp
sub
jno
es
mov
mov
jno
mov
(bad)
and
push
retf
call
out
cld
arpl
xchg
in
idiv
and
repz
push
inc
cmp
sbb
xchg
ds
jnp
mov
pop
scas
fs
push
or
mov
xchg
and
ffreep
out
jmp
mov
adc
leave
mov
adc
jnp
pop
pop
std
mov
cmp
pop
inc
mov
or
stc
or
in
xchg
std
xchg
dec
jg
mov
scas
shr
mov
out
int3
mov
mov
xor
mov
frstor
mov
aad
sbb
xor
inc
fld
lock
cld
imul
jmp
jne
jb
inc
daa
push
cmp
push
test
shr
pop
je
mov
adc
mov
scas
xor
mov
mov
xchg
xor
push
inc
outs
jecxz
fimul
retf
adc
loopne
xor
push
pop
add
jecxz
leave
lods
mov
fcmovne
push
cmp
jmp
dec
mov
jb
pop
cmps
bound
or
mov
adc
push
cmp
(bad)
mov
test
outs
xor
cmps
cld
xor
(bad)
fs
push
jle
call
aam
lock
stos
stos
inc
push
stos
mov
or
dec
push
add
and
sbb
cmp
repz
jo
jo
push
add
mov
adc
outs
aad
mov
retf
cmp
rcr
in
sbb
xchg
jp
pop
popa
ror
and
jmp
cmp
pop
or
lods
cmp
mov
xchg
test
iret
das
arpl
or
sbb
jnp
xchg
js
ffreep
cmp
adc
mov
movs
jno
jns
add
shr
jge
iret
cmp
cmps
shr
mov
mov
aas
xor
iret
adc
jmp
pop
pop
rcr
cmp
xchg
mov
mov
clc
sahf
xor
fimul
fs
ror
fs
push
mov
jge
ret
add
lods
popf
cmp
imul
gs
out
dec
jg
pop
dec
jl
jno
xlat
pop
out
mov
mov
shl
dec
ja
add
xchg
dec
(bad)
loopne
jecxz
dec
or
pop
dec
outs
mov
cmp
xor
adc
es
movs
addr16
pop
(bad)
daa
das
push
sub
push
cld
ret
outs
jmp
int
std
sub
mov
pop
rcl
pop
fucom
or
pop
fs
cmps
dec
adc
jbe
movs
mov
stos
mov
jno
mov
pop
dec
xlat
fsubr
(bad)
ja
mov
mov
inc
les
xchg
test
leave
dec
add
xchg
mov
lods
jg
cmp
xchg
inc
inc
sahf
mov
into
jl
mov
ror
out
loopne
push
mov
adc
stos
(bad)
outs
mov
cmp
imul
(bad)
mov
aas
add
ins
popa
into
mov
push
fild
lea
idiv
inc
sbb
mov
cmps
popf
movs
or
ja
icebp
jl
sub
hlt
push
add
add
jmp
push
xchg
sbb
int
mov
and
jae
pop
shl
jno
pusha
adc
mov
cmps
mov
jbe
sub
push
std
pop
rcr
int
std
push
inc
push
aaa
mov
loop
cmp
mov
jmp
sbb
jno
mov
das
ficom
test
add
lock
pop
popa
inc
ror
gs
movs
imul
mov
mov
push
pop
lods
leave
out
dec
movs
cdq
add
jge
push
ret
lods
adc
and
mov
adc
cmc
sub
or
mov
sbb
fdivr
in
push
adc
push
push
jle
mov
adc
hlt
sbb
cdq
std
pop
inc
push
outs
shr
xchg
mov
adc
mov
or
mov
mov
or
cli
or
cld
mov
or
hlt
stos
push
push
int3
mov
push
fs
call
mov
pop
adc
loop
fcomp
jle
dec
loop
aam
cmp
mov
fdiv
sbb
mov
adc
inc
int3
mov
cs
inc
and
repnz
in
dec
shr
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
dec
sbb
in
lods
sbb
or
mov
push
inc
retf
stos
xchg
mov
cs
in
mov
push
dec
aam
push
jl
stos
es
xor
push
dec
hlt
inc
sub
push
inc
in
mov
dec
in
mov
push
inc
fdivr
push
fwait
in
xor
ins
ficom
push
int3
stos
mov
push
mov
movs
jb
dec
leave
call
neg
cmp
outs
cmc
push
aam
out
mov
cmp
jno
ss
pop
pop
int3
mov
add
pop
cmp
shr
ds
daa
and
stos
nop
pop
cld
fucomi
jge
jecxz
rcl
lods
out
mov
mov
and
inc
(bad)
mov
test
sti
lods
push
adc
out
add
mov
mov
push
mov
adc
mov
push
sar
dec
in
jmp
addr16
jno
jne
out
mov
stos
repz
mov
dec
repz
iret
loopne
pop
stc
shl
and
cld
inc
or
add
call
ins
mov
dec
jbe
mov
cmp
pop
cmps
mov
jno
setp
cmps
jl
mov
imul
js
dec
lahf
fimul
dec
jne
push
cs
add
push
aad
stos
int3
fcmovbe
in
imul
mov
xchg
dec
es
ds
or
jp
jp
lods
fisubr
xchg
repnz
ret
shl
mov
(bad)
lods
push
loopne
clc
jge
and
adc
shl
dec
arpl
ins
pop
pop
cdq
je
lds
stc
stc
loope
sub
retf
pusha
pusha
out
and
pop
call
jle
div
lods
or
cli
(bad)
psrld
jmp
loope
shr
int
and
outs
xor
repz
not
inc
and
aaa
clc
or
inc
shl
cli
int3
jl
leave
mov
test
push
shl
rol
xor
into
call
pop
jbe
sub
imul
aad
loope
or
xor
mov
xchg
pushf
aam
pop
fist
jns
cdq
(bad)
jecxz
ins
add
cmc
out
mov
adc
cmc
adc
xor
ret
in
or
push
sbb
retf
mov
loope
xchg
int3
push
in
dec
clc
xor
mov
push
mov
jecxz
stc
jp
movs
in
mov
dec
adc
or
ins
cmp
or
push
jl
mov
push
dec
fdivr
es
mov
dec
pop
adc
idiv
mov
mov
or
inc
cld
mov
push
loopne
push
test
cmp
gs
scas
cdq
adc
out
mov
pop
stos
or
pusha
rcl
shr
inc
fwait
gs
sub
int3
pop
dec
jns
push
aad
shl
imul
and
outs
cmp
shl
sub
int3
jo
mov
aaa
fwait
aad
and
xchg
mov
lock
add
cli
xor
cmp
ins
inc
popa
or
jmp
mov
jae
pop
xor
adc
(bad)
mov
cdq
nop
cmp
mov
(bad)
test
mov
fs
ins
into
sub
outs
loop
add
into
mov
inc
lea
jmp
ja
adc
xabort
xlat
pop
pop
xchg
sbb
xchg
arpl
mov
jl
or
add
push
mov
adc
je
int3
dec
cmps
lock
add
fxam
loope
fucom
adc
bound
add
loopne
outs
pop
sbb
xchg
adc
dec
dec
ret
cmp
xor
mov
mov
rol
(bad)
js
sbb
and
xchg
cmp
mov
pop
inc
rol
mov
loopne
push
out
arpl
mov
call
pop
push
sbb
ss
imul
jno
mov
sbb
push
cmc
out
inc
arpl
(bad)
shr
cmp
cmp
lea
sbb
or
(bad)
je
ret
mov
push
cmp
mul
add
and
push
xchg
jecxz
ret
test
sar
repz
jns
test
push
jo
mov
adc
stc
mov
clc
add
pop
mov
neg
arpl
inc
in
(bad)
pop
loop
aas
in
adc
jecxz
in
(bad)
cmp
jmp
outs
cmp
std
lods
retf
mov
sbb
test
in
out
mov
sub
mov
ins
pop
fild
fisttp
test
in
aad
lahf
pop
cmc
pop
mov
mov
retf
outs
cmp
adc
mov
ja
lods
sub
jle
adc
cmp
mov
dec
ret
add
or
or
retf
pop
and
leave
retf
and
jge
jle
adc
pop
cmp
xor
jno
js
mov
stos
mov
ficom
into
xor
mov
dec
fisttp
aaa
sbb
push
xchg
adc
sar
jmp
dec
fdiv
xchg
cs
in
stos
push
dec
hlt
mov
push
pop
dec
xor
fdiv
int3
pop
cmp
inc
mov
lods
xor
dec
in
fld
push
int3
xor
and
inc
mov
(bad)
mul
cdq
inc
int3
sub
jno
movs
cmc
add
pop
pop
idiv
xor
jae
imul
inc
mov
cmp
push
std
lods
inc
stos
fimul
shr
sub
inc
jno
sbb
popa
cmps
jmp
and
sbb
bnd
cmps
mov
cli
inc
inc
xchg
adc
push
lahf
mov
int3
lods
test
jecxz
sbb
sbb
jmp
dec
cld
fiadd
push
in
mov
dec
in
mov
push
(bad)
int
push
inc
jl
xchg
in
ins
mov
and
pop
adc
inc
in
(bad)
adc
or
push
sbb
mov
mov
mov
data16
cwde
call
ds
inc
bswap
pop
fs
scas
xor
mov
es
add
pop
int
lea
aas
(bad)
cdq
mov
stc
add
call
iretw
push
pop
dec
retf
jge
cmp
and
outs
je
cmp
or
and
iret
stos
fidivr
loopne
loop
and
add
in
jl
or
ret
repz
push
push
adc
fst
bound
xor
in
imul
dec
inc
ins
aaa
pop
dec
pop
cmp
or
out
sbb
in
int
pop
xlat
ror
mov
push
sbb
ja
mov
movs
stos
and
or
loop
inc
loopne
bound
sub
jg
adc
mov
xor
(bad)
mov
or
fst
cmps
scas
dec
cli
cwde
clc
xchg
push
clc
push
dec
mov
ss
js
in
stos
xlat
shr
mov
loope
pop
pop
push
pop
jge
mov
or
rcl
or
inc
test
or
arpl
pop
iret
outs
cmp
xchg
jmp
int3
cmp
fcmovu
xor
mov
repz
mov
retf
cmps
push
and
test
adc
cmps
leave
mov
dec
jl
and
stc
sbb
retf
adc
or
test
sbb
jl
je
or
mov
aam
rcl
xor
pop
ins
lods
mov
mov
cmp
aam
in
xor
push
lods
mov
rcl
xor
movs
adc
cmc
add
push
fiadd
sbb
frstor
arpl
add
mov
push
rcl
pop
ror
aad
pusha
aad
movs
sahf
mov
popf
add
test
push
cmp
or
jmp
shl
call
and
fisttp
movs
push
jmp
clc
popf
xchg
and
dec
and
or
sti
jne
lahf
xor
xchg
fst
(bad)
jno
outs
jmp
ret
pop
nop
xor
push
pop
fiadd
inc
and
imul
cmp
sahf
stc
bound
or
aas
xchg
add
in
outs
sbb
xchg
sub
jmp
cmp
push
call
test
pop
pop
mov
jle
add
push
gs
lods
mov
shrd
adc
ret
dec
jbe
push
in
outs
sti
dec
retf
adc
mov
aam
into
int3
mov
push
fs
stos
es
in
inc
dec
in
mov
push
fdivr
xor
les
scas
inc
in
test
in
ds
int3
in
xor
in
loope
das
inc
jg
pushf
pop
loop
mov
out
js
xchg
fsubr
cmps
sub
cmp
push
pop
mov
fsubr
pop
dec
jne
xchg
inc
mov
inc
sbb
or
push
push
push
mov
ret
jecxz
sbb
pop
mov
cmp
(bad)
loope
cdq
mov
stos
test
cmp
cmps
shl
add
(bad)
inc
add
mov
or
(bad)
jecxz
cmp
cmp
repz
mov
ror
aam
in
out
mov
push
cmp
mov
in
cmp
lahf
jle
movs
out
pushf
into
inc
sti
jmp
shr
mov
mov
sbb
scas
jne
popf
das
cmp
xchg
xlat
popa
lds
xor
or
fwait
adc
popf
push
xor
push
mov
popa
imul
sbb
pop
jnp
inc
inc
cmps
aad
jle
stos
dec
std
pop
pop
imul
xchg
out
cld
clc
push
xor
enter
mov
inc
adc
jb
jge
cdq
ja
es
popf
sub
jmp
xor
adc
mov
fstp
shl
je
je
(bad)
or
inc
jb
js
push
mov
leave
mov
enter
adc
xchg
pushf
fwait
ins
out
jmp
(bad)
push
xor
mov
jp
inc
mov
and
mov
add
pop
cmp
mov
movs
mov
xchg
sbb
ds
sbb
push
mov
mov
push
sar
sbb
and
inc
pop
and
inc
bound
adc
mov
dec
rcl
imul
hlt
mov
jne
shl
push
call
cmp
(bad)
cmp
test
lock
inc
fsub
sahf
sbb
sub
inc
xchg
movd
push
or
xchg
pushf
or
aaa
lahf
fdivr
jmp
jg
sbb
inc
or
cld
stos
xor
daa
push
mov
jp
in
inc
mov
xor
pop
pop
scas
ret
rcl
cdq
push
push
ret
inc
cmp
hlt
lahf
mov
sub
dec
repz
sti
xchg
jp
inc
jmp
mov
sub
clc
sub
call
mov
pop
cmps
fiadd
fsub
dec
pop
jb
xchg
adc
xchg
mov
cmp
sti
fcmovnb
mov
cmp
xchg
popa
(bad)
jo
mov
mov
fisubr
fcmovnu
sbb
cs
call
adc
jge
mov
pop
add
arpl
xor
mov
jne
fst
cmp
retf
or
data16
dec
jecxz
mov
nop
shr
dec
sub
dec
loopne
sub
test
sbb
or
push
or
pop
outs
mov
addr16
and
mov
test
retf
add
or
popf
xchg
scas
mov
jp
sbb
push
mov
stc
mov
in
inc
sub
dec
aam
jb
sbb
cld
adc
sbb
clc
stos
xchg
mov
rcl
test
dec
int
pop
fcomp
xchg
jbe
jg
inc
sub
xchg
popf
push
jbe
stos
movs
out
push
out
inc
stc
mov
(bad)
stos
adc
pop
mul
out
add
push
lock
gs
mov
popa
cld
jg
(bad)
jns
sbb
mov
dec
lahf
or
les
add
je
dec
adc
add
(bad)
(bad)
jge
xor
jbe
mov
dec
pop
sub
sbb
movs
icebp
and
cmc
aam
pop
xchg
mov
push
cmps
push
outs
fsubr
cmp
push
pop
(bad)
in
xchg
shl
int
mov
fst
inc
fs
mov
jmp
sub
cdq
and
cmc
in
dec
mov
xor
or
inc
stc
xor
mov
les
das
sahf
mov
test
pop
and
sbb
sar
xchg
jg
mov
dec
in
aad
jp
cmps
lea
stos
aaa
jmp
fdivr
jo
loopne
cdq
inc
sbb
pop
leave
mov
dec
sub
jb
fdivp
retf
dec
clc
dec
adc
inc
sub
fisubr
or
in
ret
dec
arpl
cs
scas
lock
(bad)
outs
jbe
not
call
or
mov
fcomp
stos
(bad)
push
jp
imul
into
lahf
in
adc
mov
cmp
push
ror
fsubr
and
or
popa
imul
out
in
jmp
push
dec
lds
inc
retf
pop
jmp
stos
jb
push
test
push
aaa
mov
cmps
xchg
inc
xchg
and
enter
dec
jmp
pop
jae
dec
dec
xchg
mov
add
and
out
and
lahf
nop
in
add
push
stc
retf
push
dec
sar
std
into
cmp
adc
(bad)
push
and
pop
in
pop
cmp
fsub
call
sub
cmps
(bad)
enter
dec
pop
xor
jb
stos
test
nop
jns
mov
in
sub
jae
pop
int3
sbb
mov
jge
test
pop
std
pop
xor
dec
mov
and
imul
nop
sbb
dec
sub
call
pop
push
adc
in
not
sbb
out
sbb
mov
stc
into
xor
xor
mov
mov
(bad)
mov
jge
sbb
test
outs
push
adc
mov
pop
(bad)
adc
popa
in
and
mov
lea
sub
popf
push
mov
adc
sahf
sbb
push
jae
scas
jnp
xchg
pop
rol
(bad)
in
loope
es
adc
jnp
mov
sbb
neg
inc
in
mov
iret
inc
and
xor
adc
aaa
mov
adc
pop
adc
gs
rcl
retf
out
jge
mov
call
dec
jno
sub
ror
sub
push
(bad)
sub
jl
dec
call
mov
mov
int
jno
shr
(bad)
pusha
push
jns
add
jno
mov
shr
fld
(bad)
rcl
hlt
pop
adc
cmp
inc
pop
sbb
fadd
mov
cdq
(bad)
mov
fsubr
sbb
xchg
nop
pop
push
dec
inc
and
test
sub
inc
loopne
aad
dec
jmp
sub
jmp
inc
in
(bad)
pop
hlt
stos
push
pop
in
mov
push
inc
in
push
(bad)
push
(bad)
in
add
jmp
inc
in
or
or
push
ret
not
pop
adc
inc
push
pop
jecxz
daa
cmp
sahf
pop
call
mov
(bad)
mov
lea
pop
inc
or
shl
mov
jg
inc
in
das
xchg
shl
scas
mov
dec
sbb
dec
dec
(bad)
and
out
pop
lods
push
loope
jae
stc
ret
addr16
adc
xchg
in
sub
jle
jno
push
cmp
lea
or
mov
jecxz
test
mov
movs
xor
pop
push
cmp
inc
scas
nop
xor
and
pushf
or
mov
shl
or
movs
movs
pop
je
ret
jp
push
adc
push
ret
loop
loope
dec
fdiv
or
xor
jns
nop
xor
scas
mov
pop
jecxz
jo
call
call
test
jle
fwait
adc
out
ss
cmc
jp
jle
aam
icebp
inc
js
sub
sbb
inc
adc
cwde
push
in
lahf
lods
imul
sub
test
xlat
mov
int
mov
movs
or
and
loopne
call
mov
fimul
pop
inc
rcl
dec
xor
jecxz
xchg
mov
xor
mov
int
mov
mov
mov
push
repnz
enter
cmp
and
mov
xor
inc
hlt
or
inc
jno
outs
inc
out
and
sar
in
pop
cmp
call
xchg
sub
fbld
lds
push
and
pusha
mov
adc
ret
outs
out
ins
jg
sub
inc
jbe
pushf
cwde
addr16
js
hlt
movs
mov
push
ds
daa
aas
shr
std
cmp
jp
pop
adc
jl
rcl
fcomp
jno
rcr
movs
add
das
fcmovne
(bad)
jb
pushf
add
add
fstp
mov
adc
sar
jno
inc
in
rcl
fiadd
push
stos
ins
pushf
mov
fsubrp
cmp
enter
pop
in
call
cmp
fisub
(bad)
jle
inc
and
pop
xchg
outs
mov
jmp
inc
into
movs
sub
jmp
ins
out
cmps
nop
push
push
in
repz
ret
mov
push
sub
out
fwait
mov
movs
pop
or
aad
push
pop
in
mov
jbe
aaa
(bad)
ins
mov
(bad)
shl
pop
(bad)
lods
rol
in
fild
stos
les
popa
adc
push
inc
dec
and
jle
sbb
icebp
sbb
xchg
adc
aad
arpl
mov
add
sbb
jbe
and
add
fidiv
adc
jbe
lods
fadd
or
dec
test
dec
pop
xchg
jl
mov
cmp
xchg
xchg
loope
aam
or
call
push
jecxz
push
sbb
int
fidivr
cmps
add
ret
ror
enter
icebp
rol
je
pop
inc
adc
mov
std
mov
or
jg
aas
pop
inc
mov
(bad)
sbb
dec
mov
hlt
mov
retf
(bad)
xor
cmp
imul
pusha
jp
inc
add
pop
or
dec
and
xor
jo
shr
xchg
sub
cmps
mov
test
dec
out
xchg
fistp
sti
enter
pop
xor
scas
xor
xchg
int3
aam
mov
pop
cmps
rcl
stos
inc
inc
pop
adc
xchg
test
fsub
mov
lods
add
call
adc
inc
dec
lea
mov
es
jo
enter
idiv
sub
xor
arpl
out
or
sti
xor
push
sub
jbe
jmp
fwait
jmp
stc
pop
pop
popa
int
cld
dec
(bad)
sub
sub
mov
xchg
and
adc
cmp
fwait
dec
das
repz
cld
rol
mov
adc
inc
jnp
mov
mov
mov
mov
popa
les
adc
das
xchg
cmp
out
mov
jle
mov
in
cmc
push
hlt
mov
push
dec
xor
mov
cs
into
shr
jl
cdq
mov
clc
sub
cmp
pushf
push
mov
push
(bad)
lock
test
stc
push
mov
pushf
sub
xchg
cmps
ins
loopne
ret
mov
(bad)
adc
and
mov
push
jne
scas
inc
inc
call
fs
adc
xor
and
jae
icebp
hlt
sbb
fsub
popf
shl
pop
sub
jge
or
movs
ds
faddp
lock
add
das
inc
dec
in
inc
sub
push
push
in
stos
push
dec
in
mov
dec
fs
push
int
mov
lds
mov
add
mov
mov
xchg
ficomp
leave
pop
popf
jmp
stc
movs
xor
fdivr
jge
sbb
inc
outs
mov
scas
mov
test
mov
cs
scas
and
dec
shl
xor
loope
movs
cmp
inc
movs
in
lahf
dec
or
ret
ret
pusha
arpl
in
scas
jge
dec
add
cmp
enter
jo
mov
inc
jge
push
sbb
fmulp
bound
in
dec
out
xchg
cmc
mov
lahf
in
les
or
aaa
into
adc
push
(bad)
xor
sub
lds
cmc
sub
lds
add
jge
pop
lahf
and
mov
push
clc
xor
popf
mov
aaa
jecxz
inc
mov
lods
cli
(bad)
aaa
in
cmp
cmp
jecxz
pushf
sbb
out
addr16
daa
ss
inc
mov
mov
mov
push
in
in
or
push
push
in
mov
push
dec
in
push
les
push
inc
outs
xor
(bad)
cmp
add
cld
xor
inc
ins
mov
push
pop
sub
jae
jne
not
out
sahf
mov
jmp
std
mov
push
adc
mov
jb
or
nop
stos
and
out
loope
jno
mov
ret
lods
test
fcmovbe
push
mov
dec
out
inc
stos
lods
or
or
jl
sbb
popa
mov
xor
adc
mov
hlt
hlt
loope
push
jp
cdq
cmp
push
lds
fbstp
jbe
cmp
mov
outs
dec
loope
mov
xchg
inc
mov
jle
xchg
mov
adc
mov
imul
sub
jg
jl
sbb
xchg
lods
xchg
cld
fsub
pop
and
add
xor
lea
push
add
mov
(bad)
xor
gs
mov
test
stos
ins
jmp
add
or
ss
cs
push
nop
cmp
adc
add
clc
jb
and
and
and
stos
scas
cwde
(bad)
in
sbb
in
pop
popf
out
fstp
inc
retf
repz
fwait
inc
pop
jg
mov
dec
cmps
int
stos
popf
mov
js
in
jge
(bad)
mov
std
or
mov
pop
mov
mov
mov
rol
retf
lods
ds
pop
test
mov
and
gs
outs
pop
pop
xor
stc
mov
mov
mov
sbb
cld
adc
push
xchg
(bad)
ins
jbe
addr16
sub
fist
dec
out
addr16
sub
push
xchg
test
add
or
or
stos
xchg
mov
cmp
or
xor
int3
push
mov
fimul
dec
lods
(bad)
xchg
sbb
out
aas
and
jle
popa
pop
xor
inc
clc
imul
mov
cwde
mov
adc
int
push
daa
mov
dec
add
pop
lods
mov
xor
mov
jmp
adc
jmp
inc
cld
call
in
mov
push
inc
in
push
(bad)
push
inc
in
or
adc
test
in
add
push
inc
and
push
not
pop
(bad)
mov
mov
cmp
jno
inc
adc
jno
ffree
ret
jbe
xchg
and
dec
ror
mov
and
imul
mov
pop
mov
mov
shl
repnz
loop
or
mov
movs
cmp
adc
dec
icebp
call
idiv
adc
in
in
std
repz
mov
and
nop
mov
sbb
jb
cld
retf
xchg
add
adc
pushf
fwait
shl
jb
shr
sub
jmp
addr16
and
dec
mov
adc
loope
cld
mov
cmp
aas
pop
add
fiadd
jmp
cmp
lahf
xor
dec
(bad)
or
mov
mov
sbb
adc
inc
add
pop
popf
jecxz
call
mov
jb
mov
cmp
cli
fimul
push
jmp
ss
cmp
jne
adc
inc
int
imul
xchg
fistp
dec
adc
dec
aad
mov
pop
pop
pop
stos
mov
and
pop
mov
stos
test
add
push
push
idiv
dec
mov
fcmove
(bad)
cli
out
call
push
fdivr
dec
mov
lds
mov
es
shl
jb
scas
xor
fidiv
or
jbe
sub
sar
xchg
rol
xlat
in
jmp
adc
movs
js
cmp
sahf
jne
jae
jnp
dec
jmp
repnz
jb
and
outs
dec
mov
dec
sub
fcomp
(bad)
mov
add
adc
and
(bad)
out
jle
stos
fistp
out
je
pop
sub
fidiv
jmp
gs
sub
push
dec
cld
sub
out
ins
enter
test
out
loopne
or
shr
jmp
xor
or
adc
pop
dec
cli
pop
retf
jae
sbb
xor
cmp
int
sar
stc
in
mov
sbb
mov
nop
xor
adc
adc
imul
mov
jle
fistp
or
xor
sti
add
cmps
ins
pop
leave
pop
mov
retf
adc
iret
sbb
sub
aam
mov
sub
es
retf
cdq
js
or
addr16
inc
xor
mov
mov
cmp
add
mov
or
popa
sbb
(bad)
push
xchg
xchg
mov
dec
scas
out
stos
dec
mov
push
aam
pop
int3
gs
add
lahf
pop
mov
add
push
scas
jns
hlt
aam
pop
stc
adc
xor
adc
out
push
jb
outs
push
adc
cli
fsubr
fmul
data16
or
jg
sbb
and
std
mov
xchg
sub
je
lods
adc
popf
out
mov
out
int
imul
dec
in
pop
test
adc
int3
inc
add
mov
or
xor
add
scas
push
fwait
add
outs
fist
mov
xor
jl
(bad)
adc
les
std
pushf
push
aas
and
cli
jl
retf
push
push
jb
test
aaa
mov
xchg
out
xchg
gs
dec
push
fisttp
adc
xchg
movs
clc
aad
loopne
(bad)
outs
fisub
cmp
inc
and
ret
rdmsr
add
push
cmp
sbb
out
xor
movs
or
adc
sub
and
inc
cmp
jmp
(bad)
xchg
or
(bad)
mov
mov
(bad)
les
pop
mov
cmps
(bad)
xchg
inc
cmp
push
xchg
enter
xlat
loope
cmp
dec
test
aam
cmp
xor
test
jecxz
push
cmp
pop
inc
cmp
push
mov
cmps
inc
ja
pop
add
ficomp
cmc
add
xor
xlat
sbb
dec
in
dec
rcl
pop
bswap
icebp
xor
imul
je
aad
mov
push
jmp
aas
mov
inc
lds
mov
and
clc
jae
fisub
imul
jge
cmp
push
ss
mov
and
ins
aas
and
mov
mov
inc
xchg
and
or
dec
push
popa
push
mov
jns
iret
mov
mov
(bad)
out
jg
shr
pop
scas
into
xor
ficom
add
cdq
sub
xchg
inc
cmp
sub
push
xchg
pop
mov
add
pop
cmp
jbe
ficomp
mov
xor
cwde
add
mov
jae
cmps
add
fst
(bad)
enter
int3
call
sub
mov
ss
sub
inc
cmps
mov
or
cmc
push
push
mov
xor
adc
cmc
inc
sub
xor
mov
or
mov
in
repz
int
xchg
xchg
inc
movs
rol
push
push
or
js
repnz
cmp
xchg
fs
sub
movs
ins
or
cmp
add
xor
pop
mov
sbb
(bad)
sub
cmp
add
dec
test
push
and
mov
fisttp
mov
jecxz
sahf
out
jle
int3
(bad)
test
jmp
dec
pop
cmc
xor
aad
mov
sub
mov
push
inc
data16
lods
sbb
movs
jge
and
add
scas
dec
pop
icebp
repnz
shl
mov
iret
lahf
dec
fwait
dec
icebp
outs
movs
xchg
cmp
icebp
mov
repnz
fsubr
cmp
shr
gs
loope
mov
mul
jns
jne
cs
outs
cmp
pop
test
sbb
psadbw
pop
pop
dec
inc
xlat
push
and
mov
xchg
in
jb
jl
into
outs
or
sub
push
push
sbb
jp
xor
call
push
cmc
push
push
mov
sahf
and
mov
je
dec
out
and
inc
in
mov
or
dec
out
call
out
sub
in
(bad)
dec
out
cmp
dec
out
stos
cmp
mov
pop
in
mov
add
xor
out
mov
test
adc
dec
out
adc
in
xor
pop
in
ret
out
stos
ds
in
xor
dec
out
mov
xchg
dec
out
mov
adc
sub
in
mov
in
jb
dec
out
rcl
in
mov
out
push
push
ins
in
mov
pop
inc
in
dec
or
out
mov
or
out
adc
dec
in
cli
or
pop
out
pop
and
sbb
dec
in
mov
push
mov
xor
pop
mov
push
test
push
dec
out
add
pop
out
xor
dec
in
mov
push
mov
xor
pop
mov
push
test
push
dec
out
sub
pop
out
xor
ins
in
mov
in
mov
push
mov
gs
dec
adc
hlt
dec
in
mov
push
dec
out
sbb
pop
in
add
mov
push
mov
(bad)
dec
in
mov
push
dec
in
mov
push
dec
out
or
out
mov
xchg
pop
in
xor
adc
hlt
dec
adc
mov
push
test
or
push
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
retf
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
adc
pop
out
ret
in
mov
push
dec
adc
push
mov
lods
hlt
dec
adc
pop
mov
push
test
push
dec
out
jb
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
bound
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
push
cvtps2pd
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
call
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
mov
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
ror
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
sbb
out
ret
in
mov
push
dec
adc
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
dec
or
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
stos
or
push
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
fimul
push
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
retf
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
or
push
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
fimul
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
ror
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
ret
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
dec
or
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
mov
retf
push
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
cmp
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
xor
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
inc
or
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
cli
or
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
sbb
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
jb
pop
out
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
push
or
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
dec
out
inc
or
ret
in
jb
dec
in
mov
push
mov
lods
hlt
dec
adc
mov
push
test
push
jne
movs
loop
xchg
mov
ss
je
or
push
shl
xchg
shl
es
shr
es
ret
aaa
in
bound
loop
out
or
bound
loop
aad
or
jl
push
dec
dec
xor
push
mov
inc
aaa
or
push
(bad)
in
ss
je
or
push
shr
and
jp
jno
xchg
push
je
xchg
dec
jo
or
les
xchg
(bad)
in
and
dec
je
or
push
rcl
and
jo
push
rol
xchg
mov
jmp
jo
xchg
rol
es
push
je
xchg
dec
jo
or
jo
xchg
shl
es
shl
ins
shl
xchg
rol
xchg
mov
jmp
jo
xchg
shr
es
fbstp
add
jo
xchg
shr
es
shl
xchg
shl
xchg
cs
and
and
shr
and
push
je
dec
dec
jo
or
mov
xchg
shl
xchg
shl
dec
shl
xchg
shr
xchg
and
dec
jge
push
adc
adc
jo
or
jge
xchg
adc
pop
mov
push
adc
test
pushf
jo
or
jo
push
shl
xchg
rol
es
push
out
and
mov
in
push
push
dec
aam
dec
fucomip
mov
push
dec
jo
(bad)
jo
xchg
shl
xchg
pop
pop
es
sbb
call
fnstsw
mov
lock
xchg
faddp
push
cmps
xor
mov
add
(bad)
loope
pop
or
cmp
jg
rol
dec
outs
fldenv
aas
std
mov
dec
jle
and
ss
cmp
lods
jmp
inc
mov
or
shl
xchg
shl
xchg
shr
es
fidiv
adc
mov
xchg
and
and
outs
jle
mov
aam
mov
xchg
shr
es
dec
jo
arpl
jo
xchg
ror
and
dec
inc
je
push
dec
jo
or
and
dec
pop
and
inc
dec
mov
call
jo
xchg
shl
xchg
shl
xchg
mov
jo
or
shl
xchg
rol
dec
sub
outs
popa
dec
in
cvttps2pi
push
shl
xchg
shr
es
sbb
and
int3
int3
cli
or
sbb
mov
mov
shr
es
fidiv
mov
ror
es
dec
inc
and
out
mov
pushf
stc
push
clc
mov
dec
jo
aas
shl
xchg
ror
es
sar
xchg
in
in
aam
mov
xchg
shr
es
jo
es
in
inc
cmovne
call
jo
xchg
shl
xor
xor
dec
jo
push
shl
xchg
rcl
(bad)
in
daa
xor
xor
dec
jo
push
shl
es
ror
es
mov
push
pop
in
pop
mov
mov
jge
(bad)
iret
rol
xchg
mov
and
int
clc
int
je
test
aas
shl
xchg
rol
es
retf
mov
jo
xchg
rcl
mov
xchg
retf
mov
jo
push
rol
es
jo
and
shl
xchg
shr
es
(bad)
out
and
push
jo
xchg
rol
es
jo
and
rcl
mov
xchg
dec
jo
or
jo
push
shl
xchg
rol
xchg
mov
and
outs
jecxz
and
test
mov
dec
inc
imul
dec
stos
inc
xchg
dec
pop
or
enter
jmp
or
and
aam
mov
icebp
es
push
je
xchg
dec
jo
sub
mov
es
shl
mov
jo
xchg
rol
es
jo
and
shl
xchg
rcl
es
shr
xchg
mov
int3
aam
mov
xchg
shr
es
mov
cli
or
lock
xchg
shl
xchg
shl
xchg
shr
and
xchg
rol
es
jo
and
shl
xchg
rcl
xchg
dec
out
and
push
mov
mov
shl
xchg
shl
xchg
cs
and
and
rcl
es
rcr
push
mov
jo
not
jo
xchg
sar
and
sbb
jmp
out
adc
sub
dec
jmp
push
into
rcl
dec
adc
(bad)
dec
fnstsw
push
shl
xchg
shl
xor
adc
jo
or
into
es
xor
clc
frstor
mov
or
les
xor
mov
push
cmp
je
or
jo
or
jo
xchg
shl
xchg
shl
and
fs
jbe
jo
push
aam
push
sub
jo
xchg
sar
es
mov
repnz
shl
push
jo
mov
shl
es
pop
jo
push
shl
xchg
ror
and
jo
xchg
rol
xchg
add
and
shl
xchg
shl
into
jo
mov
loopne
and
jo
push
shl
es
aam
push
lods
rol
xchg
add
and
rcr
xchg
adc
xchg
shl
xchg
shl
loopne
and
jo
push
shl
es
aam
push
in
shl
xchg
sar
es
hlt
jo
mov
shl
xchg
dec
jo
mov
shl
es
pop
jo
(bad)
shl
es
aad
push
sub
jmp
xchg
mov
repnz
shl
xchg
rcr
es
push
pop
in
mov
adc
sub
adc
inc
adc
stos
push
dec
in
std
pop
fs
mov
mov
or
jo
jmp
jo
xchg
shl
es
sar
and
dec
inc
mov
mov
jnp
inc
jmp
sbb
imul
shl
icebp
rcl
es
mov
pop
stos
push
dec
in
std
pop
adc
div
mov
or
jo
jmp
jo
xchg
shl
es
shl
and
pop
sar
or
jo
jmp
test
xchg
shr
and
(bad)
loop
adc
shl
icebp
ror
and
dec
or
test
std
rcl
inc
xchg
shr
and
(bad)
loope
xor
shl
icebp
shl
xchg
sar
es
sti
addr16
std
mov
mov
or
jo
jmp
jo
xchg
rcl
es
shr
and
(bad)
in
nop
xchg
dec
jo
push
shl
xchg
ror
and
dec
rol
and
adc
jno
jmp
pop
(bad)
aam
ja
ins
mov
sub
mov
inc
mov
shl
xchg
rol
es
jo
and
dec
jo
push
shl
xchg
shl
xchg
xchg
in
test
dec
jo
or
jo
push
rol
es
jo
and
dec
jo
push
shl
xchg
shl
xchg
rol
xchg
mov
jmp
dec
push
ret
jo
mov
rol
xchg
mov
and
loop
cli
stc
shl
xchg
rcl
and
dec
fnsave
shl
xchg
sar
es
shr
daa
xchg
dec
jo
push
shl
xchg
ror
es
adc
loope
ins
in
sahf
dec
dec
retf
push
jo
fst
jo
push
rcl
out
dec
retf
push
scas
shl
adc
and
jo
xchg
shl
xchg
shl
xchg
shl
dec
shl
xchg
shl
adc
ret
jo
and
or
jp
vcmpneq_oqss
lds
daa
(bad)
out
mov
inc
or
sbb
std
imul
add
shr
cmps
mov
xor
push
jle
mov
sbb
xchg
mov
jnp
xor
push
ja
ret
jnp
dec
mov
mov
mov
xchg
mov
in
xor
push
mov
pop
movs
jnp
stos
mov
retf
mov
xor
sbb
pop
xchg
add
test
retf
mov
xor
jnp
xor
jnp
xor
jnp
dec
mov
adc
dec
les
scas
jmp
mov
jmp
out
stos
cmp
lea
cmp
and
pop
ret
jnp
dec
mov
sti
mov
xor
jl
dec
pushf
in
cmps
ins
retf
jne
push
in
stos
cmp
mov
cdq
mov
inc
mov
mov
addr16
ds
cmps
scas
inc
jnp
pop
movs
jnp
stos
mov
pusha
mov
test
(bad)
xor
jnp
xor
xor
hlt
cmp
and
xor
ret
mov
dec
sbb
add
cmp
or
mov
jnp
jnp
jnp
test
pushf
mov
(bad)
cmp
or
mov
movs
dec
les
stos
mov
jnp
xor
jnp
xor
jnp
in
mov
jnp
mov
or
xor
movs
ret
in
add
jnp
lahf
mov
jnp
xor
cmps
mov
cld
fidivr
mov
jnp
xor
add
bound
jnp
aaa
mov
aas
mov
push
ds
cdq
mov
out
mov
mov
jnp
das
mov
add
mov
jl
and
mov
mov
xor
les
call
mov
loopne
xor
js
xor
jnp
dec
mov
pop
mov
cld
mov
jo
jnp
xor
sar
cmp
and
test
out
and
mov
dec
push
cwde
jnp
rcr
sar
sub
cmp
pop
sbb
(bad)
aad
jae
out
xor
and
arpl
cmp
sub
aam
jb
jno
std
lds
sbb
fs
mov
and
in
add
ret
mov
jg
out
adc
xchg
cli
in
cmps
in
pusha
jle
in
pushf
div
xor
fadd
clc
shl
gs
addr16
sar
test
in
add
add
in
clc
daa
test
outs
mov
pop
jo
std
mov
fidivr
mov
dec
push
cwde
scas
and
pop
fs
lock
mov
adc
cmp
(bad)
cmp
add
(bad)
stc
cli
adc
je
outs
pop
aas
fcom
(bad)
retf
in
lods
cdq
xchg
pop
(bad)
lock
mov
call
cmp
mov
and
fcom
out
sub
popf
jnp
retf
lss
inc
ds
lock
scas
cmp
in
aad
pop
and
pop
loop
push
dec
add
(bad)
ja
or
imul
mov
stos
xchg
jmp
adc
loopne
adc
rcr
jne
pop
icebp
test
mov
adc
loop
jne
pop
icebp
test
mov
ins
stos
sbb
jge
or
stos
bnd
retf
xchg
cmp
loope
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
test
cdq
jb
mov
xor
test
xor
test
cdq
jb
sbb
pusha
fisttp
mov
pop
mov
add
dec
adc
mov
xor
add
push
adc
mov
push
(bad)
fucomp
stos
mov
(bad)
mov
add
out
xchg
mov
jb
add
test
stc
jb
xor
add
out
inc
inc
repnz
mov
jne
mov
inc
xchg
mov
jb
xor
add
out
es
repnz
xchg
mov
add
xor
add
out
mov
add
jo
stos
dec
jae
mov
leave
jno
xor
lods
jo
sti
add
out
in
stos
cdq
repnz
xor
add
out
dec
xor
lods
jo
push
add
out
or
xor
mov
xor
add
out
mov
mov
fisttp
stos
add
out
adc
fcmovnu
mov
xor
add
out
xor
fst
mov
adc
lds
xor
push
cmp
mov
ja
adc
sahf
stos
mov
mov
push
adc
mov
jo
stos
inc
lea
sbb
mov
or
and
movs
mov
cmp
add
mov
out
daa
lock
cmp
pop
push
mov
ja
sub
ins
loopne
fidiv
jecxz
xchg
imul
in
and
and
daa
sbb
mov
fiadd
or
jmp
ret
sar
pusha
in
and
ror
jae
in
jg
loop
sbb
fisttp
ret
xchg
fincstp
xchg
clc
in
cmps
mov
neg
jnp
cwde
div
(bad)
lods
cmp
loope
fist
test
pop
cld
dec
in
mov
sub
fs
cmp
arpl
not
and
std
sub
fs
xor
ds
jp
jo
add
push
lock
in
bound
leave
mov
pop
cmp
js
fsubr
jp
lock
mov
ror
xor
push
jnp
popa
mov
jo
sbb
retw
add
push
loope
fidiv
iret
push
addr16
call
leave
mul
sti
mov
xchg
(bad)
ja
cmp
pop
adc
arpl
inc
add
or
daa
inc
pop
pusha
pop
scas
int3
and
fmulp
fs
fimul
ficom
fwait
inc
int3
mov
fmulp
cld
ficom
fwait
inc
enter
int3
fs
fmulp
cld
fidivr
ficom
cld
fwait
lds
add
fmulp
cld
fmulp
cld
fmulp
cld
fwait
inc
int3
cmp
fmulp
cld
fisubr
fwait
scas
enter
int3
in
add
idiv
fwait
pop
fdivrp
fstp
push
sbb
int3
fs
mov
mov
bound
pop
sub
jo
ds
popa
cmovb
pop
sub
jo
pop
scas
popa
bsr
pop
sub
jo
pop
push
popa
cmovb
ror
rcr
sub
outs
in
test
std
inc
popa
out
add
int3
retf
int3
fs
fidivr
ficom
fwait
int
dec
pop
scas
or
inc
jge
add
fs
fimul
dec
push
jle
inc
fsubp
or
jp
arpl
pop
int3
inc
or
push
int3
cli
fmulp
and
fisubr
ficom
fwait
int
dec
pop
inc
int3
pusha
xlat
fmulp
fs
fmulp
cld
fiadd
fwait
or
push
popa
pop
inc
push
pop
mov
rol
cli
retf
int3
inc
and
int3
fs
fmulp
cld
fidiv
fmulp
clc
pop
fmulp
cld
fidivr
fwait
jle
clc
fwait
inc
push
cmp
ficom
cld
fwait
push
pop
sti
fwait
inc
push
je
int3
push
mov
inc
imul
(bad)
and
fmulp
cld
fwait
push
int3
cli
fisubr
ficom
fwait
int
dec
pop
inc
int3
pusha
xlat
ficomp
lahf
ficom
fwait
inc
ficomp
push
jnp
jg
and
add
dec
int3
inc
lods
fmulp
cld
fmulp
cld
fwait
push
int3
cli
fmulp
add
fisubr
ficom
fwait
int
dec
pop
inc
int3
pusha
xlat
fmulp
fs
ficomp
ficom
fwait
inc
ficomp
or
outs
jmp
sti
pusha
add
pusha
leave
pop
sub
mov
fmulp
cld
(bad)
cld
fmulp
clc
pop
fidivr
fwait
jle
clc
fwait
inc
push
cmp
fmulp
cld
fmulp
cld
ficom
fwait
dec
imul
pop
inc
pop
call
daa
pop
push
popa
pop
inc
test
bound
jg
push
ins
pop
int3
jo
cmp
pop
inc
fimul
push
jnp
jg
and
add
scas
mov
inc
pop
jmp
daa
pop
push
popa
pop
inc
fs
mov
cmp
push
ins
pop
int3
jo
cmp
out
inc
fisubr
jmp
push
pusha
add
scas
cmp
inc
push
jmp
push
popa
pop
inc
les
bound
jge
push
fs
int3
jo
cmp
test
jg
push
push
pusha
add
scas
cmp
inc
push
jmp
push
mov
popa
pop
inc
movs
pop
mov
inc
jge
push
fs
int3
jo
cmp
mov
fsubrp
add
outs
jmp
jo
add
inc
fisubr
jnp
outs
jmp
sti
pusha
add
jnp
outs
jmp
sbb
loop
arpl
jnp
outs
jmp
mov
bound
jnp
outs
jmp
(bad)
loop
bound
jnp
jg
push
arpl
inc
lock
add
arpl
scas
adc
add
arpl
scas
sub
push
inc
lock
add
arpl
scas
lock
push
inc
lock
add
arpl
scas
cwde
cmps
cmovo
out
add
arpl
scas
mov
out
add
arpl
ins
push
out
push
int3
cld
fwait
push
int3
cli
fmulp
movs
lahf
fmulp
cld
fimul
cld
fwait
ins
cmp
inc
enter
int3
fs
fimul
fidiv
fwait
ins
push
aaa
ds
int3
cld
fwait
push
int3
cli
fisubr
ficom
fwait
int
dec
pop
inc
int3
pusha
mov
int3
fs
ficom
fidivr
sub
xor
and
fmulp
cld
fmulp
cld
fidivr
sub
push
mov
mov
mov
daa
dec
ficomp
ficom
sti
fwait
out
movs
ins
inc
push
stc
dec
mov
int3
nop
into
fcmove
xor
fmulp
cld
fisubr
push
int3
clc
fmulp
cld
fisub
cmp
arpl
sub
add
inc
int3
test
fmulp
fs
fmulp
cld
fwait
jbe
cld
push
fmulp
cld
fwait
jle
cld
inc
ficom
fmulp
cld
fmulp
je
fisubr
fwait
push
push
cli
jae
or
sbb
js
and
add
inc
ud2
bound
imul
(bad)
shl
sub
add
out
add
int3
retf
int3
fs
fidivr
ficom
fwait
int
retf
int3
pusha
aaa
fmul
je
fiadd
fwait
je
push
cmp
int3
jl
fmulp
cld
fisub
pop
pop
(bad)
fwait
rcl
xlat
inc
int3
cmp
ficom
call
fsubrp
cld
fimul
jp
fst
cwde
pop
int3
mov
lahf
ficom
fucomp
sti
mov
inc
popa
test
ficomp
ficom
sti
fwait
add
push
inc
jecxz
xchg
fcmove
cdq
test
int3
push
add
fisubr
cld
fwait
scas
dec
outs
ins
inc
adc
add
pop
and
fcom
(bad)
test
fidivr
sub
add
rcr
xchg
push
jmp
jb
fsub
in
fiadd
and
leave
mov
ret
add
int3
cld
ficom
fwait
jo
clc
add
int3
in
faddp
cld
fwait
shl
push
faddp
sti
fwait
dec
xchg
fcmove
fs
ficom
clc
fwait
inc
int3
fs
fmulp
cld
fisubr
call
inc
sbb
add
lock
and
arpl
js
pop
pminsw
scas
shl
push
cmp
int3
cld
fisubr
faddp
cli
fwait
mov
int3
fs
mov
clc
fwait
inc
int3
fs
fmulp
cld
fimul
fwait
gs
cld
fwait
rcr
bound
jnp
lahf
test
jl
add
in
pop
loope
inc
dec
hlt
add
jl
daa
cmp
bound
in
pop
mov
add
jl
daa
cmp
pop
sar
pop
hlt
add
jl
daa
cmp
bound
inc
stos
test
push
dec
test
call
inc
fdiv
fmulp
cld
fimul
cld
fwait
int
cld
pop
add
and
je
sub
popw
sbb
movd
jl
jle
pop
jnp
inc
and
or
hlt
jns
sbb
popa
jge
sub
jns
cs
add
test
pop
jg
fwait
sbb
pusha
inc
add
adc
cmp
sbb
int3
xchg
in
scas
xchg
retf
sub
jnp
push
mov
out
xor
mov
mov
add
push
stos
inc
out
lods
cmp
mov
int3
jae
(bad)
xor
adc
(bad)
repz
pop
mov
jg
mov
sbb
cmp
inc
scas
jae
sub
adc
cmp
add
iret
loopne
inc
sbb
loope
and
and
sbb
add
push
inc
mov
add
aaa
fisubr
pop
push
mov
sub
daa
mov
sub
(bad)
xchg
cmps
dec
mov
out
stos
cmp
mov
jne
in
lock
clc
popf
les
adc
cli
push
xor
in
lds
and
arpl
mov
cld
cmp
aam
in
xchg
and
cmc
sbb
test
cmp
out
js
xchg
xchg
ins
push
and
jns
mov
adc
jmp
pushf
in
imul
cmp
jbe
shl
lock
retf
xor
js
scas
xlat
lock
mov
(bad)
div
(bad)
std
out
shl
sbb
outs
ret
out
push
cmp
in
in
enter
mov
cmp
jmp
call
dec
sub
stc
repnz
ja
mov
push
push
mov
sbb
xchg
push
popa
xor
add
mov
popa
xor
popf
dec
popa
imul
stc
test
mov
std
icebp
jge
arpl
xchg
out
adc
sub
and
test
or
std
in
sub
jl
test
mov
std
add
mov
test
popf
aam
imul
sar
inc
sub
dec
stc
test
pusha
aam
call
inc
call
push
test
mov
in
sub
aam
test
xchg
aam
inc
sub
dec
stc
test
ret
sub
arpl
mov
std
xor
aam
test
repnz
cdq
sub
aam
test
mov
std
push
sub
aam
test
sub
aam
test
xchg
xlat
std
inc
or
rcr
sub
aam
test
dec
loop
or
sub
dec
stc
test
sub
popf
aaa
sub
aam
test
xchg
xlat
std
adc
or
mov
push
inc
adc
xchg
pusha
popa
adc
dec
jns
mov
push
gs
mov
arpl
ret
push
adc
scas
push
retf
sahf
push
sbb
sar
fldcw
cs
inc
cmp
and
add
in
int3
cmp
jnp
pop
mov
out
mov
movs
ds
movs
mov
out
aas
ss
add
lock
add
or
stos
push
pop
xor
das
cmp
xor
outs
enter
pop
adc
pop
sub
sub
out
jbe
cmp
and
mov
add
sbb
jmp
ins
hlt
enter
or
cmps
out
test
ja
sub
and
push
sbb
cmp
(bad)
lahf
dec
push
sbb
cmp
sbb
std
and
ja
jns
aam
out
cmps
je
cli
in
add
enter
mov
aas
sti
mov
loopne
les
ins
ret
mov
and
cmp
cmc
lods
out
clc
jns
cli
loope
cdq
and
repnz
push
fcom
add
mov
out
add
sbb
mov
in
imul
pusha
arpl
sub
mov
sbb
xor
cmp
pop
test
shl
or
fnsave
pop
in
neg
inc
aad
jl
js
ret
adc
push
sub
sbb
rcl
push
(bad)
xchg
fs
arpl
in
sbb
cmp
cli
push
stos
cld
fincstp
xchg
fsubr
cmps
dec
push
cld
movs
adc
out
sub
push
mov
jb
aas
test
in
cmp
mov
and
push
jmp
cs
dec
neg
dec
in
stos
shr
outs
dec
inc
and
enter
hlt
inc
and
cmp
sysexit
dec
cmp
das
dec
pop
pop
dec
ins
sub
cmp
inc
ins
aas
mov
dec
push
cmp
adc
int3
out
jne
inc
push
ja
dec
push
ja
daa
aaa
pop
xor
daa
ja
inc
xor
pop
push
daa
daa
sbb
ins
les
mov
daa
ins
jle
pop
xlat
shr
pushf
repnz
repnz
fdivr
das
dec
addr16
outs
imul
sbb
xor
push
fs
outs
popa
inc
and
dec
add
dec
movs
int3
mov
dec
cmp
dec
(bad)
mov
or
dec
mov
mov
jnp
mov
es
pusha
adc
js
stos
ret
jnp
dec
mov
mov
mov
inc
cmp
and
test
in
int3
pop
loop
cmp
movs
lahf
mov
pop
mov
test
xchg
sbb
xor
cmp
fcom
mov
in
in
adc
xor
and
xor
cmp
xor
lock
ja
add
sub
fst
sub
ret
rcl
jo
pop
mov
fnstcw
fs
or
arpl
mov
push
xchg
push
lods
stos
xlat
xlat
popf
stc
sbb
js
xor
push
xor
cmp
jge
jle
cmp
and
cmp
and
out
ins
cmp
push
imul
repz
in
daa
inc
aas
fnsave
sbb
or
inc
aad
or
and
stos
stos
loope
movs
jp
or
jo
ds
cmc
mov
jae
xor
cmp
inc
pop
push
shld
xor
ds
xor
icebp
adc
or
mov
dec
and
imul
mov
ret
rol
jo
jne
sbb
ds
jmp
and
ja
das
adc
cmp
(bad)
jnp
sub
rol
xlat
lock
sub
adc
or
call
int
push
adc
or
jbe
mov
jbe
popa
adc
sbb
cmp
sbb
cmp
aaa
mov
leave
lods
ins
adc
mov
aam
adc
(bad)
and
xchg
inc
add
jl
jp
sbb
sub
inc
mov
inc
movs
mov
scas
cmp
xchg
mov
xor
mov
xor
xor
lea
out
popf
cmp
mov
ja
jmp
xor
pop
dec
inc
or
sub
add
aad
(bad)
cmps
cmp
pop
jbe
mov
call
mov
add
(bad)
ins
jno
(bad)
ins
test
jae
lock
into
mov
test
clc
popf
push
sub
test
pop
or
sub
cmp
scas
xor
inc
or
cli
inc
es
jp
rcl
pop
jl
push
xchg
imul
cmp
and
inc
pop
xor
clc
div
aas
jle
ds
call
cmp
add
sub
loop
jp
sbb
jle
aas
sub
cmp
and
mov
sar
or
mov
es
adc
ret
rcr
push
and
jnp
jo
add
in
stos
ret
sub
push
in
out
mov
pcmpeqw
sti
sub
pop
pop
add
ror
xor
jl
cmc
test
repnz
xchg
mov
jnp
jg
cmp
inc
and
mov
sub
sbb
sub
data16
scas
xor
cmp
in
mov
in
xchg
mov
push
adc
jmp
push
jp
movs
adc
mov
in
jl
in
dec
cmp
retf
fmulp
dec
neg
retf
jae
dec
mov
data16
adc
sbb
aad
cmp
leave
cmp
mov
dec
cmp
in
jns
leave
xor
sub
sbb
mov
inc
sbb
das
jmp
pop
(bad)
and
loope
stc
xor
mov
mov
jnp
call
mov
retf
mov
xor
inc
leave
mov
cmps
inc
cmps
cmp
push
test
push
xor
inc
mov
mov
xor
(bad)
mov
mov
out
test
mov
mov
aas
out
div
mov
daa
lock
aaa
mov
cmp
out
cmp
and
jl
aad
cmp
sub
test
shl
mov
sub
cdq
push
dec
and
jne
sub
or
out
test
cvtps2pi
repz
icebp
aam
out
(bad)
push
add
xchg
jmp
loope
mov
cmp
pusha
inc
stos
cld
adc
adc
pop
or
push
out
jl
ret
push
or
adc
and
inc
loopne
jo
mov
cmp
leave
loop
pop
in
push
stos
bnd
push
stc
mov
arpl
pop
xor
jns
ss
retf
mov
and
call
sbb
cmc
(bad)
sbb
shl
outs
arpl
ficom
pop
cmp
sbb
in
sbb
(bad)
call
fnsave
clc
xor
jnp
sbb
xchg
jns
fbstp
aas
sahf
inc
cmp
sub
sbb
cmp
ret
push
ficom
ds
xchg
add
repnz
push
fs
scas
cmp
jnp
loopne
adc
cli
and
add
xor
xor
addps
pop
mov
fwait
push
inc
and
mov
add
ret
mov
dec
mov
cmp
fwait
lods
push
sub
sub
push
push
lods
sub
je
sub
mov
xor
ret
mov
loopne
mov
push
xor
sub
sub
sbb
sub
mov
sub
sub
imul
sbb
into
gs
sub
sub
mov
sub
xor
xor
leave
xor
sub
sub
pushf
lods
sub
dec
gs
jge
push
outs
sub
sub
test
fsubr
sub
push
xor
dec
int
jge
push
outs
and
xor
cmp
xor
dec
mov
dec
sub
push
scas
lods
sub
pop
test
mov
sub
push
push
sub
sub
mov
sub
xchg
test
inc
sub
lea
cld
lods
sub
sub
sub
jae
sub
lock
xor
mov
mov
sub
sub
test
push
lods
sub
sub
ret
int
push
xchg
scas
sub
das
sbb
or
aaa
in
or
sbb
stos
cmp
cmp
cmp
popf
push
pop
ss
popf
sbb
dec
sbb
xchg
les
in
cmps
movs
sub
out
mov
inc
test
retf
add
cmp
and
mov
jnp
aas
mov
jnp
xor
or
hlt
cmp
cmp
add
hlt
sub
test
sbb
(bad)
mov
sub
inc
sub
add
inc
out
scas
cmp
std
mov
in
out
mov
cli
mov
icebp
inc
idiv
xor
test
and
jg
enter
call
jno
xchg
call
rcr
sbb
push
cmp
fdiv
out
out
(bad)
lea
jecxz
jg
jp
loopne
push
sub
adc
adc
icebp
scas
movaps
lock
call
test
cmp
arpl
fs
sbb
cmp
call
std
mov
mov
repnz
lds
lock
int
sbb
cmp
mov
and
aam
in
cmps
(bad)
ss
or
push
sub
mov
mov
mov
mov
arpl
and
sti
mov
ficom
in
lock
sbb
(bad)
loope
xchg
and
addr16
mov
jp
or
psrad
pusha
ds
test
(bad)
push
push
adc
(bad)
jecxz
fcom
push
mov
xor
repnz
sub
mov
stos
push
pushw
push
js
sbb
mov
dec
scas
sar
add
mov
retf
sbb
cmp
and
mov
popa
sbb
dec
mov
push
arpl
mov
dec
and
xor
mov
or
dec
jecxz
cwde
dec
adc
xor
mov
dec
inc
mov
dec
jecxz
cwde
dec
adc
xor
mov
dec
sbb
inc
sbb
sub
jmp
or
adc
stos
sbb
fstp
adc
mov
adc
test
pop
imul
adc
test
test
lea
cmps
mov
adc
in
pop
lds
or
dec
scas
push
pop
and
mov
adc
sub
pop
mov
scas
push
pop
and
mov
push
pop
mov
adc
js
out
aad
jbe
aad
dec
aaa
lods
cwde
xchg
loope
lock
fwait
mov
pop
dec
and
inc
and
scas
mov
adc
test
pop
mov
pop
adc
test
pop
loopne
aad
jbe
sbb
es
dec
jns
loopne
mov
cmp
adc
test
xchg
loopne
sbb
test
pop
cmps
test
mov
mov
adc
aad
cmps
test
mov
mov
xchg
adc
aad
push
test
out
daa
test
loopne
sbb
test
pop
push
test
movs
ja
int3
jbe
mov
adc
test
out
mov
xchg
daa
adc
in
pop
adc
test
mov
mov
loopne
sbb
test
xchg
gs
out
inc
adc
sbb
pop
adc
test
shl
or
mov
add
pop
mov
pop
fstp
adc
mov
adc
test
pop
lds
sbb
xor
pop
adc
test
xlat
mov
mov
sbb
ror
dec
dec
pusha
mov
mov
pop
adc
test
pop
out
xchg
les
mov
jl
mov
pop
adc
test
pop
stos
xchg
cmps
movs
xchg
adc
mov
add
ins
mov
scas
xor
inc
sbb
push
and
add
dec
sti
pop
mov
arpl
cmp
pop
jo
retf
sahf
xchg
pusha
ret
xchg
cmp
mov
mov
sbb
or
mov
push
xor
jmp
jnp
xor
or
hlt
cmp
cmp
test
out
test
out
test
out
test
out
test
out
test
and
fisttp
int3
les
pusha
rol
out
push
xor
pop
xchg
jnp
xor
les
aad
jnp
xor
loopne
xor
sub
loope
out
test
jmp
xchg
jg
push
ds
cdq
mov
mov
mov
cmps
ds
(bad)
mov
out
icebp
ss
adc
aaa
and
add
int3
test
stc
in
test
out
shl
jge
test
xor
jge
or
bound
jae
xor
ss
jge
bound
and
retf
leave
mov
ret
sbb
je
jmp
loopne
clc
mov
cmp
ins
scas
or
inc
sbb
out
cmp
icebp
mov
jo
scas
sbb
out
test
out
scas
cmp
ins
xlat
jo
and
ja
aad
push
sbb
ds
test
loopne
mov
fdivr
fs
les
into
mov
and
cmp
and
mov
and
adc
ds
mov
dec
sbb
mov
idiv
and
lods
xchg
jle
shl
inc
fnstcw
repnz
stos
ss
imul
push
or
mov
xor
fidivr
shr
adc
add
js
neg
in
mov
in
addr16
and
(bad)
cdq
int3
aas
jp
ds
mov
adc
push
or
sbb
punpckldq
fdiv
add
dec
lods
aam
clc
or
mov
das
cdq
mov
outs
mov
mov
dec
mov
mov
inc
mov
aaa
outs
and
xor
stos
lock
scas
lock
fild
lock
adc
das
stos
lock
scas
test
into
stc
mov
add
xor
ret
dec
lock
enter
mov
out
sub
cmps
inc
xchg
ror
stc
xor
add
sbb
ret
dec
sbb
lods
outs
mov
and
mov
mov
pop
retf
inc
sbb
and
push
sub
xor
inc
or
jb
movs
addr16
enter
sub
leave
push
das
add
xchg
outs
xchg
cdq
movs
aaa
sub
mov
enter
mov
pop
sub
sub
ret
and
nop
push
scas
fwait
sub
and
movs
inc
mov
xor
sub
adc
mov
and
sub
dec
push
and
xor
mov
cwde
sahf
pop
sub
mov
mov
stc
dec
pop
add
cmp
ret
dec
mov
fisub
mov
cmp
mov
and
inc
xchg
jge
xchg
stos
sbb
mov
stc
dec
pop
add
push
inc
ret
dec
mov
sub
sbb
lods
aaa
nop
sub
repnz
push
outs
lock
int
cwde
ins
pop
jp
inc
inc
sbb
aaa
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ins
mov
mov
ja
and
retf
stos
lock
stos
test
dec
or
ja
and
mov
lock
lock
mov
outs
mov
dec
aaa
xchg
mov
das
popf
xor
das
xor
and
mov
lock
das
scas
sub
das
cmp
stos
lock
mov
lock
les
das
stos
lock
stos
lods
lock
(bad)
shl
add
inc
mov
mov
adc
nop
cmp
sbb
fs
das
stos
lock
mov
cmp
dec
ja
mov
das
popf
adc
scas
xor
and
das
out
and
stos
lock
das
sub
hlt
and
pop
aaa
ins
pusha
sbb
ret
inc
mov
outs
mov
scas
fbld
sbb
lock
mov
jg
das
iret
fsub
es
lock
sub
and
xchg
test
cmp
das
aaa
sub
fbstp
hlt
and
sbb
cmp
mov
in
popf
push
cmps
ja
das
into
ret
and
add
pop
stos
lock
scas
lock
sub
mov
dec
popf
pop
inc
jg
das
ins
and
adc
das
stos
lock
das
test
pop
and
das
jae
and
cwde
add
sbb
imul
sub
pop
fisttp
lahf
int3
inc
shl
addr16
dec
mov
mov
das
popf
push
and
scas
stos
lock
test
imul
retf
ret
inc
mov
outs
mov
outs
fisub
pop
stos
lock
mov
lock
adc
dec
cmp
stos
xor
or
scas
xor
and
das
cmps
ja
das
stos
lock
mov
pop
outs
and
xor
stos
lock
mov
lock
and
push
dec
mov
mov
das
popf
je
das
xor
and
pop
lods
lock
scas
std
call
lock
pop
stos
lock
das
jl
and
adc
mov
scas
mov
das
xor
stos
lock
nop
and
das
fst
and
das
stos
lock
imul
mov
das
stos
lock
mov
add
cmp
inc
jp
xor
sbb
arpl
sub
mov
mov
adc
outs
pop
and
xor
jo
ins
xchg
iret
int3
and
mov
scas
int3
and
mov
mov
sbb
ret
mov
sbb
xchg
mov
mov
ret
mov
sbb
fstp
stos
iret
fcomi
int
and
push
mov
das
add
das
stos
lock
mov
ret
jmp
mov
mov
iret
(bad)
and
das
stos
lock
or
ret
and
add
das
stos
lock
mov
out
mov
outs
fisub
xchg
stos
lock
sbb
cmp
mov
in
popf
push
cmps
ja
das
into
ret
and
add
retf
stos
lock
and
clc
push
dec
int3
xchg
mov
das
popf
xor
das
xor
and
mov
jo
mov
dec
movs
pop
dec
dec
mov
dec
jb
sub
ss
and
adc
mov
outs
cmps
jno
add
loopne
enter
aaa
outs
inc
adc
xor
loopne
enter
aaa
outs
mov
pop
cmc
xchg
pop
xor
mov
and
mov
les
xchg
popf
push
popf
mov
fs
mov
inc
sub
ss
mov
inc
sub
ss
mov
inc
sub
ss
xor
retf
push
dec
mov
mov
das
popf
aam
das
xor
and
mov
push
mov
das
xor
stos
lock
das
test
and
xor
stos
lock
scas
lock
mov
ja
cmps
(bad)
mov
xor
mov
ins
mov
das
stos
lock
sub
and
mov
lock
das
xor
stos
lock
mov
lock
mov
inc
mov
das
xor
stos
lock
mov
lock
xor
retf
push
dec
mov
mov
das
popf
aam
das
xor
and
mov
lock
mov
dec
imul
stos
lock
sub
and
scas
stos
lock
das
(bad)
and
das
stos
lock
xor
and
and
jo
das
xor
ja
lock
test
lock
lods
stos
lock
cmc
test
ds
aas
xor
mov
ins
outs
and
mov
mov
ins
mov
das
xor
and
outs
scas
jo
mov
repz
sub
ins
and
sbb
imul
je
pop
cmps
imul
fistp
mov
pop
mov
mov
int3
mov
das
sub
hlt
and
jmp
lock
sub
imul
stos
lock
das
pop
out
and
xor
stos
lock
lahf
enter
xor
push
mov
das
stos
lock
mov
lock
xor
retf
push
dec
mov
mov
das
popf
aam
das
xor
and
stos
scas
nop
mov
sbb
dec
inc
mov
out
mov
retf
cmp
sbb
ins
inc
mov
scas
mov
int3
aas
dec
inc
sbb
xchg
inc
mov
into
mov
retf
cmp
mov
ins
out
xor
pop
inc
rcr
inc
mov
outs
mov
(bad)
shl
sub
lock
das
fwait
(bad)
and
jmp
lock
sbb
das
retf
repz
mov
lock
movs
test
xchg
xor
(bad)
mov
popf
stos
lock
cmps
mov
and
das
stos
lock
das
jo
and
dec
stos
lock
das
popf
adc
das
xor
and
mov
xor
mov
and
das
aaa
fs
das
stos
lock
das
test
and
xor
call
mov
mov
push
mov
sbb
inc
inc
mov
outs
mov
dec
sub
mov
inc
sub
ss
mov
inc
sub
ss
dec
push
inc
sub
ss
xor
(bad)
xor
dec
mov
inc
sub
add
popf
aam
das
xor
and
push
lock
dec
stos
jo
popf
mov
scas
mov
das
aaa
ins
and
mov
lock
das
aaa
ins
and
cmp
ret
inc
mov
outs
mov
psrld
loopne
lock
jecxz
lock
sub
xchg
mov
das
stos
lock
inc
stos
lock
sub
mov
or
into
ret
and
add
xor
lock
sub
xchg
mov
mov
lock
scas
jo
mov
(bad)
mov
jecxz
les
mov
in
mov
outs
shl
xchg
scas
lock
sub
xchg
mov
mov
lock
scas
jo
mov
lahf
mov
jecxz
les
mov
in
mov
outs
shl
cwde
stos
lock
dec
pusha
outs
mov
das
popf
adc
das
xor
and
mov
lock
scas
jo
mov
xlat
mov
mov
les
das
into
ret
and
add
das
stos
lock
xor
addr16
sub
pop
and
push
lock
mov
jo
mov
dec
inc
jmp
mov
jg
das
iret
fsub
sub
and
rep
push
mov
das
cmp
stos
lock
sbb
cmp
mov
in
popf
push
cmps
ja
das
into
ret
and
add
das
stos
lock
mov
inc
mov
das
xor
stos
lock
mov
lock
das
stos
lock
mov
pop
rcl
push
outs
popf
adc
imul
pop
or
pop
outs
and
xor
stos
lock
scas
lock
xchg
adc
mov
xchg
mov
mov
lock
scas
jo
mov
setge
cmp
sub
pop
outs
inc
mov
mov
iret
(bad)
and
loope
lock
mov
in
mov
das
xlat
and
das
stos
lock
mov
out
mov
outs
fisub
xchg
test
mov
sub
pop
and
mov
sub
movhps
das
into
ret
and
add
das
stos
lock
push
test
mov
je
mov
imul
lahf
(bad)
jmp
sub
pop
and
mov
lock
sbb
ins
inc
mov
outs
mov
dec
shl
stos
test
stos
mov
int3
aaa
js
mov
mov
outs
cmp
popf
xor
das
xor
and
mov
lock
stos
sub
dec
push
outs
mov
das
popf
adc
das
xor
and
fsubr
imul
sub
popf
cmp
das
into
ret
and
add
das
stos
lock
mov
push
sub
pop
and
mov
cmp
or
into
ret
and
add
das
stos
lock
stos
test
push
xor
aaa
or
mov
dec
aaa
jl
and
das
popf
push
and
das
stos
lock
mov
xor
cmp
mov
dec
aaa
ins
cmp
popf
push
and
rep
lock
mov
outs
jmp
das
into
ret
and
add
das
stos
lock
push
test
mov
mov
not
sub
pop
and
push
lock
mov
je
mov
imul
lahf
out
sub
pop
and
mov
lock
fsave
mov
das
into
ret
and
add
das
stos
lock
lahf
test
cdq
sti
xor
dec
cmp
sbb
out
repz
mov
sub
stos
pop
outs
push
sub
pop
and
scas
stos
lock
mov
imul
outs
mov
mov
in
mov
das
shl
pop
test
cdq
jecxz
adc
mov
ins
sub
pop
outs
push
sub
pop
and
mov
dec
dec
icebp
dec
xor
jo
and
xchg
scas
lock
or
into
ret
and
add
das
stos
lock
repz
mov
dec
mov
outs
pop
das
popf
je
scas
xor
and
mov
imul
bound
sbb
dec
inc
mov
in
mov
das
shl
ja
lock
jmp
adc
mov
ins
adc
pop
outs
push
sub
pop
and
mov
lock
scas
jo
lahf
dec
dec
icebp
dec
xor
jo
and
dec
stos
lock
xchg
dec
mov
fsub
ins
cld
sbb
ret
inc
mov
xchg
mov
outs
shl
cli
stos
lock
addr16
sar
jecxz
mov
dec
clc
mov
sub
xchg
mov
imul
lock
sbb
push
mov
outs
mov
dec
shl
adc
test
xor
loope
into
ret
and
add
and
inc
mov
aaa
outs
and
xor
stos
lock
xchg
ins
cmp
mov
ins
and
ja
and
mov
lock
int3
sbb
je
sub
pop
inc
das
xchg
xchg
and
jmp
lock
stos
xor
mov
dec
mov
in
ins
loop
pop
fs
stos
pop
pop
mov
mov
dec
call
xor
mov
in
dec
xlat
fwait
popa
call
call
xchg
inc
lods
int3
jae
pusha
push
outs
ret
jecxz
push
(bad)
(bad)
in
test
jnp
sbb
mov
xor
aas
inc
push
xchg
jg
push
ds
cdq
mov
out
hlt
cmp
xor
test
data16
shl
mov
scas
js
pop
mov
cmc
and
jne
clc
rcr
in
test
inc
jge
loop
cli
lea
call
cdq
mov
test
aas
pop
dec
cmp
and
jnp
sub
jecxz
stos
mov
lds
sar
test
and
(bad)
sbb
push
(bad)
sti
push
cmp
and
dec
jmp
lods
es
(bad)
femms
sub
cmp
pop
jne
jp
cmp
and
ds
mov
loopne
js
ret
std
lods
scas
mov
and
jno
sub
out
clc
stc
out
mov
aam
in
cmps
cmp
ins
iret
jo
and
mov
daa
shl
or
test
addr16
aas
stc
adc
adc
cmp
mov
dec
xor
out
mov
inc
add
cmp
push
pop
clc
int
fs
mov
sub
jmp
inc
pop
call
paddw
imul
fist
mov
js
push
and
mov
imul
sbb
inc
dec
(bad)
fincstp
in
test
mov
sbb
push
test
repz
test
fsub
movs
(bad)
mov
fnstcw
cmp
jg
push
inc
xor
into
pop
rcr
push
pop
ror
rcl
push
pop
rcr
sub
lds
int
push
cli
into
push
mov
imul
jbe
adc
fcmovnb
adc
xchg
inc
out
lea
rol
jbe
imul
call
(bad)
retf
mov
pusha
out
sub
out
mov
cmp
and
repnz
out
iret
cmp
test
loopne
xor
aam
loope
cmc
and
test
inc
(bad)
sbb
sar
sub
rol
sar
sub
mov
and
jmp
pop
inc
out
sbb
js
dec
add
sub
pop
add
out
or
fldenv
push
sbb
push
sbb
pop
test
mov
std
mov
sbb
(bad)
and
mov
aas
inc
ins
ds
mov
aas
jge
cmp
sub
cmp
cmps
and
and
and
stos
in
loopne
ret
out
push
cmp
ins
pop
jbe
and
xor
test
cdq
clc
out
mov
mov
cmp
or
ins
enter
and
in
movs
ret
je
lock
fucomi
cmps
aam
clc
(bad)
jmp
xchg
dec
leave
or
in
fs
jge
in
movs
inc
daa
sbb
sbb
jmp
fist
cli
and
sub
hlt
and
push
dec
add
jb
sub
aaa
js
cmp
and
mov
ret
jecxz
ficom
cld
in
fcomp
nop
adc
jae
out
ret
mov
push
aam
jmp
add
mul
cmp
cli
mov
lock
clc
ins
(bad)
fisttp
jmp
push
or
cld
inc
push
sub
mul
mov
or
into
shl
pop
sbb
(bad)
xor
push
pop
cmps
stos
neg
lock
jb
ja
pop
jp
cmp
adc
addr16
push
sti
dec
popf
int
dec
add
push
sti
(bad)
(bad)
int
rol
mov
arpl
call
dec
popf
push
dec
pusha
call
gs
int
data16
jno
inc
mov
lods
call
jbe
jno
inc
mov
lods
gs
push
push
push
or
pop
inc
mov
lods
gs
push
ss
or
pop
inc
mov
int3
popa
pusha
pop
pop
addr16
cmp
repz
push
sti
dec
popf
int
rol
int
rol
pop
sti
(bad)
(bad)
int
rol
int
rol
int
rol
jg
aaa
lods
push
sti
ficomp
int
rol
push
fiadd
jb
jg
popf
push
arpl
call
dec
popf
push
dec
pusha
fidivr
ror
sub
gs
int
data16
jno
inc
mov
lods
call
jbe
jno
inc
mov
lods
gs
push
push
push
or
pop
inc
mov
lods
gs
push
ss
or
pop
inc
mov
int3
popa
pusha
pop
pop
addr16
cmp
repz
push
sti
dec
popf
int
rol
int
rol
jg
shr
int
rol
int
rol
jg
(bad)
lods
push
sti
ficomp
int
rol
push
xlat
add
mov
addr16
in
pusha
dec
popf
rol
cs
ins
push
neg
leave
addr16
mov
pusha
dec
lahf
ror
push
gs
mov
(bad)
outs
outs
gs
push
call
dec
popf
(bad)
outs
das
pusha
push
jbe
call
dec
popf
(bad)
outs
out
pusha
push
ins
ficomp
sub
dec
popf
(bad)
outs
iret
pusha
push
ins
ficomp
sub
dec
popf
push
and
xchg
push
pop
out
cwde
push
fcomp
data16
leave
sti
dec
popf
int
rol
gs
aam
leave
sti
adc
int
rol
popa
gs
repnz
sti
mov
rol
push
test
pop
dec
jno
addr16
lahf
push
into
cmp
or
call
(bad)
or
inc
outs
popf
push
neg
call
dec
lahf
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
cli
cmps
xchg
xchg
outs
aaa
mov
bound
icebp
pusha
dec
fcmovb
lds
addr16
movs
push
sti
pop
popf
int
rol
gs
aam
leave
sti
adc
popa
gs
loop
sti
mov
cmp
add
jg
in
iret
dec
popf
pop
pop
movs
ds
outs
pop
addr16
jle
call
dec
popf
(bad)
outs
das
pusha
push
jp
call
dec
popf
(bad)
outs
out
pusha
push
outs
ficomp
sub
dec
popf
(bad)
outs
iret
pusha
push
ins
ficomp
sub
mov
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
call
rol
jne
dec
xchg
push
xor
mov
push
dec
cmc
(bad)
lahf
into
addr16
push
rcr
cmp
int
rol
jg
xor
mov
js
(bad)
adc
inc
out
mov
js
dec
adc
scas
inc
sbb
cmp
arpl
mov
out
test
movs
test
out
test
out
test
mov
and
cmp
ins
iret
cmp
and
mov
aas
out
cmp
inc
cmp
pop
adc
out
mov
aas
or
das
es
out
mov
cmp
aaa
es
out
and
cmp
and
pop
aas
scas
and
aas
inc
es
aas
aaa
es
aas
out
adc
push
and
xchg
sar
es
aas
mov
es
aas
xchg
or
iret
and
cmp
out
loopne
inc
and
ds
xor
iret
cmp
aaa
es
cmp
iret
mov
aas
inc
and
shl
and
ds
movs
scas
add
(bad)
jecxz
out
lds
cmp
imul
shl
mov
jmp
mov
icebp
mov
mov
sub
jae
xlat
mov
jg
push
add
mov
xor
enter
ds
mov
push
imul
push
add
(bad)
daa
stos
pushf
mov
in
ds
mov
xor
lea
and
jno
dec
adc
mov
sub
pop
fs
stos
cli
out
mov
pop
out
repnz
and
loope
jnp
push
mov
jg
push
ds
cdq
mov
jecxz
xor
js
in
jnp
push
mov
cmps
mov
cld
fdivr
in
jnp
xor
jnp
xor
jne
xor
dec
cmp
es
aas
(bad)
mov
shl
stos
mov
call
mov
cmp
ret
jnp
dec
mov
jbe
xor
out
mov
mov
ret
cmp
das
test
mov
xor
movs
jnp
retf
mov
xor
scas
ds
shl
out
mov
in
scas
outs
pop
lea
inc
jnp
pop
movs
jnp
stos
mov
in
xor
out
gs
sub
xor
jo
xor
js
xor
jnp
push
mov
scas
mov
call
mov
mov
mov
dec
mov
pop
mov
cld
mov
jo
jnp
xor
popa
mov
inc
xor
and
test
loopne
add
cmp
mov
test
test
and
test
jne
daa
jne
cmp
es
cmp
scas
push
cmp
xor
cmp
sbb
rcl
out
add
and
xor
pop
mov
test
scas
push
cmp
xor
cmp
cmp
and
out
add
and
xor
jnp
xor
out
xor
mov
and
jecxz
inc
repz
test
adc
add
daa
not
scas
push
cmp
xor
cmp
cmp
ins
cmp
popa
loope
cs
or
lock
enter
retf
mov
jb
and
mov
fistp
and
jnp
cdq
mov
mov
and
push
or
lock
sub
add
ss
fcom
pushf
inc
and
inc
inc
ds
xchg
pop
xor
pop
les
bound
jnp
cdq
mov
or
repnz
xor
movs
jnp
retf
mov
xor
mov
and
ret
jnp
push
mov
sub
xor
(bad)
mov
cmp
imul
test
jnp
xor
jecxz
xor
jnp
cmps
mov
call
mov
mov
test
jnp
lods
mov
aaa
mov
mov
aas
add
lock
cmp
bound
test
popf
cmps
cmp
xor
cmp
sbb
popf
test
lahf
cmps
shr
fistp
push
inc
into
sub
sahf
int3
inc
mov
adc
push
jecxz
fucom
and
and
cmp
and
in
mov
sub
mov
std
sti
sbb
inc
out
cmps
cmp
ins
lods
ss
lods
jnp
int
hlt
aas
es
or
lods
pop
aaa
pop
fistp
es
cmp
jmp
jns
mov
ds
push
inc
pop
shl
and
dec
or
xor
mov
shr
mov
jo
add
lahf
cmp
and
and
jp
pop
sub
scas
ja
or
into
add
add
xchg
jne
out
dec
xchg
push
cmc
out
jp
not
aas
aaa
icebp
jge
ss
je
lahf
jp
sbb
cmp
and
cmp
jg
adc
mov
inc
or
fnstcw
adc
push
sbb
and
call
rcr
out
arpl
push
inc
js
sbb
xchg
jo
ins
div
mov
dec
cmp
mov
fdivr
xchg
push
mov
mov
fld
or
push
push
ds
xor
shl
movs
pusha
and
lock
loopne
push
std
push
push
pop
dec
pop
sbb
data16
mov
lock
dec
xor
xor
push
aad
or
inc
cmp
loop
mov
or
cmc
rcl
sbb
inc
sub
inc
sub
or
std
cmp
push
std
inc
bound
std
inc
xor
pop
or
imul
ds
loop
ss
pop
mov
lock
jge
push
or
shl
mov
aad
mov
jg
inc
push
int
or
xor
aad
or
aad
push
mov
push
and
push
or
jne
push
movs
rcl
jne
cmp
aad
or
or
in
or
push
cmc
inc
cmp
ins
pop
js
sbb
xor
push
aad
push
sbb
xor
jle
sub
push
xor
outs
lods
loopne
or
shl
mov
aad
mov
jg
inc
push
int
or
xor
movs
sbb
scas
inc
xor
in
imul
loopne
outs
popf
xor
lods
(bad)
fsub
push
movs
and
inc
push
sub
push
shr
push
std
cmp
lahf
rcr
aad
mov
jle
sub
mov
cmp
sbb
push
or
fstp
jle
or
outs
push
xor
mov
and
fld
xchg
loopne
xchg
mov
push
lods
inc
sub
push
and
std
inc
mov
xchg
call
push
ds
mov
aad
mov
dec
loop
(bad)
clc
sub
inc
sbb
ret
ja
and
aad
or
inc
pop
pop
ds
call
call
cmp
(bad)
or
push
lea
call
dec
push
push
xlat
ror
(bad)
fnstsw
push
xchg
shr
loop
es
fcomp
dec
clc
sub
std
inc
bound
std
inc
xor
loopne
data16
add
inc
pop
pop
movs
call
cmp
loopne
xchg
std
fsub
mov
shr
mov
pusha
and
xchg
ror
push
(bad)
xor
push
aad
mov
outs
aad
inc
ss
sbb
push
xchg
push
call
ds
dec
ss
push
push
sbb
shr
popf
inc
push
popf
push
sub
mov
inc
cmp
ins
shl
outs
lods
inc
push
jbe
inc
xor
aad
js
popf
xor
and
dec
and
in
push
lods
push
and
push
mov
(bad)
je
mov
mov
clc
and
out
mov
ds
or
aad
adc
gs
mov
lods
pusha
mov
movs
push
adc
loopne
jbe
or
fst
jle
push
or
gs
outs
out
dec
push
aad
add
rcr
mov
inc
cmp
std
shl
push
movs
inc
sbb
adc
and
inc
push
push
lods
inc
mov
(bad)
cmc
loop
xchg
inc
add
std
lock
jne
cmp
inc
push
xchg
inc
adc
xchg
push
and
jge
mov
xchg
loop
cmps
std
add
movs
inc
xor
pop
mov
inc
loop
pop
inc
inc
bound
or
mov
push
call
inc
push
mov
cmp
movs
fsubr
aad
and
loop
ds
loop
data16
push
pop
je
sub
lods
loopne
mov
loopne
ds
mov
dec
cmp
ds
inc
dec
cs
sub
inc
call
fmul
xchg
mov
std
lock
or
push
aad
add
pop
dec
sbb
aad
pop
xchg
cmp
adc
fadd
aad
mov
aad
mov
cmc
dec
push
data16
imul
movs
dec
inc
outs
xchg
loopne
mov
xor
(bad)
push
ins
push
and
cmp
push
fisttp
and
jo
fs
xchg
stos
push
push
cmp
push
out
call
ds
or
ja
push
push
jge
or
add
push
xlat
or
mov
push
imul
or
jbe
dec
xor
ins
inc
push
movs
or
int
add
pop
inc
mov
sbb
mov
push
mov
outs
cmc
inc
and
push
ds
push
mov
inc
xchg
xchg
pop
outs
lods
inc
jmp
sub
jbe
or
int
or
xor
std
sbb
mov
dec
adc
fst
and
and
aad
or
movs
shr
scas
push
push
popf
rcl
scas
jo
push
lods
xor
pop
pop
rol
iret
cmp
ds
cmp
aad
pop
xchg
cmp
or
and
mov
call
mov
inc
sub
std
inc
mov
pop
jne
adc
inc
or
pusha
cs
sar
data16
cwde
xchg
mov
pop
pop
ds
sbb
call
inc
mov
cmp
lods
movs
pusha
and
loopne
jl
inc
sub
call
inc
add
push
movs
and
fld
xchg
movs
push
dec
push
inc
loopne
xchg
dec
ror
ds
cmp
inc
fimul
push
mov
call
pop
in
xor
and
movs
inc
cmp
lods
dec
add
(bad)
pop
or
xchg
push
and
mov
shr
lahf
push
pusha
mov
jo
and
push
or
and
or
push
xchg
or
ds
ror
(bad)
pusha
sub
clc
sub
aad
push
mov
or
push
aad
mov
std
cmp
jbe
fiadd
lods
mov
inc
and
push
cwde
ss
bound
push
aad
pop
xchg
cmp
sbb
and
outs
std
loopne
pop
pop
or
push
aad
mov
or
in
push
or
std
push
iretw
jo
adc
pusha
inc
cmps
cmc
cmp
inc
pop
sub
adc
fucom
pop
ds
jmp
shr
xchg
jb
(bad)
movs
or
mov
sbb
pop
mov
jbe
clc
imul
pop
pop
movs
shr
movs
loopne
pop
std
jo
jle
js
push
aad
sbb
or
shr
pop
xchg
pop
mov
iret
push
add
push
push
ds
push
push
popf
call
and
dec
lock
std
inc
push
aad
or
shr
pop
xlat
shl
push
dec
and
mov
ds
or
jne
adc
jo
ds
mov
jne
push
mov
or
xlat
or
movs
add
mov
jmp
movs
jmp
out
mov
ds
std
inc
bound
push
push
xchg
popf
push
sub
lea
call
push
lods
push
and
jge
mov
movs
cmp
cmc
loop
xchg
inc
add
std
lock
jne
cmp
inc
push
xchg
inc
adc
aad
mov
ds
or
inc
or
imul
push
lds
add
movs
or
pop
movs
inc
xchg
cmp
clc
and
aad
mov
std
loop
jbe
jo
add
cld
loopne
movs
inc
xor
outs
ins
xor
outs
aad
pusha
outs
std
inc
or
sub
inc
sub
popf
dec
push
jbe
cmp
std
xor
jle
dec
call
test
js
push
aad
sub
movs
xor
inc
loopne
ds
adc
inc
xor
pop
pop
mov
fsub
push
mov
sub
adc
std
xor
xchg
fidivr
mov
sbb
outs
xlat
inc
cmp
(bad)
mov
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
xchg
dec
adc
push
dec
pop
movs
loopne
pop
add
dec
inc
push
inc
push
add
xor
mov
push
lahf
or
outs
popf
xor
mov
sub
push
aad
push
mov
cmp
data16
cmp
lahf
or
sbb
fisub
es
fcomp
dec
clc
sub
scas
sub
push
movs
push
inc
xchg
movs
push
dec
mov
fadd
lods
push
and
movs
xor
aad
push
push
fucomp
push
jbe
dec
push
ja
inc
cmp
lods
pop
js
iret
push
js
lods
cmp
fistp
push
iret
xor
data16
push
push
xchg
pop
xor
and
iret
push
mov
aad
add
int
or
std
inc
mov
fild
adc
popa
push
pop
aad
sub
popf
or
(bad)
or
movs
jo
outs
fsub
push
fisttp
mov
push
cmc
rcr
movs
fdivr
fsubp
bound
push
fucom
pop
ss
shr
xlat
mov
xchg
push
xor
xchg
push
repnz
jg
inc
mov
aas
(bad)
or
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
mov
and
(bad)
shr
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
fiadd
adc
(bad)
shr
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
out
inc
and
(bad)
push
sub
(bad)
cmp
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
into
inc
and
(bad)
cmp
adc
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jbe
and
(bad)
or
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jbe
and
(bad)
or
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jbe
and
(bad)
or
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jbe
and
(bad)
or
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
fiadd
adc
mov
push
adc
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jbe
and
(bad)
dec
pusha
adc
(bad)
inc
and
(bad)
inc
and
scas
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
mov
dec
pusha
adc
(bad)
inc
and
(bad)
inc
and
outs
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
mov
and
mov
push
adc
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
fimul
adc
mov
push
adc
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
fiadd
adc
mov
push
adc
(bad)
inc
and
(bad)
inc
and
pushf
inc
and
popf
test
outs
adc
cmp
pop
pusha
mov
adc
or
movs
loopne
xchg
loopne
push
dec
imul
xchg
jne
or
lea
xchg
inc
cmp
dec
xor
dec
or
aad
pop
ds
dec
nop
mov
xor
jne
sub
pop
pop
mov
push
cmp
mov
or
xchg
mov
mov
push
and
aad
or
or
cmc
push
or
aad
nop
mov
inc
sub
std
pop
sub
lahf
dec
cmp
fstp
mov
xchg
jg
dec
sbb
cmc
sbb
xchg
adc
cld
mov
jl
mov
outs
aad
xor
push
rcl
(bad)
mov
mov
push
sub
pop
pusha
data16
cmp
jge
and
lds
mov
int
and
lods
dec
or
push
inc
(bad)
sub
mov
or
ds
inc
cs
push
xchg
adc
popf
cmp
push
xlat
fdiv
jl
push
mov
push
push
push
push
pop
pop
mov
jne
pop
pop
jne
xor
shl
outs
pushf
xor
xchg
dec
adc
fsub
cmp
push
in
inc
mov
push
or
inc
dec
adc
jmp
pop
mov
push
mov
add
sub
outs
gs
ds
inc
push
aad
inc
ss
cmp
in
pop
ins
jne
and
inc
mov
pop
xchg
inc
mov
push
mov
push
imul
push
sub
loopne
sbb
xor
jl
sub
mov
fisub
mov
lods
inc
mov
aad
and
jmp
popf
push
sub
movs
inc
or
xchg
jle
dec
mov
adc
push
aad
js
jne
sub
in
call
jl
push
jl
or
fucomip
push
push
jge
sbb
lock
and
ins
push
or
in
sub
movs
shr
pushf
dec
xor
loopne
sbb
xor
adc
sub
mov
xchg
jbe
pop
mov
std
imul
popf
loope
push
xchg
dec
inc
xlat
xor
inc
repnz
sbb
adc
loope
push
std
push
mov
movs
inc
xor
pop
pop
mov
inc
sub
sub
aad
mov
jbe
pop
or
or
xlat
fsub
jbe
jb
pop
aad
sbb
inc
cmp
dec
pop
pop
adc
loope
data16
mov
lods
popf
mov
es
xor
push
addr16
cmp
inc
mov
pop
movs
inc
dec
sbb
and
jl
pusha
and
mov
js
hlt
inc
mov
inc
dec
sub
aad
mov
inc
cld
sub
jbe
repnz
sub
jbe
sub
xchg
cmp
jg
push
add
inc
adc
lods
push
outs
lods
inc
adc
jmp
movs
popa
sub
loop
pop
inc
inc
cmp
std
dec
and
ja
jae
movs
push
sub
push
inc
xchg
je
and
and
dec
push
xchg
dec
dec
mov
xor
pop
inc
inc
push
outs
push
pushf
xlat
and
fdiv
sub
push
std
jns
ds
loopne
adc
loope
cmps
mov
adc
mov
mov
inc
sub
(bad)
nop
je
push
and
loopne
sbb
xor
jl
sub
test
mov
pop
xchg
push
pusha
push
std
or
xchg
imul
vmovaps
jne
inc
pop
movs
inc
xor
pop
pop
mov
inc
sub
aad
pop
ss
loop
push
dec
cmp
std
fnstenv
mov
pusha
push
push
std
jns
ds
mov
lods
jecxz
or
inc
or
inc
dec
add
inc
dec
adc
fnstenv
mov
pusha
push
push
std
jns
lods
loopne
je
loopne
outs
xlat
xor
lahf
mov
repz
outs
fnsave
cmp
lods
bound
mov
xor
pop
cmc
pop
pop
push
cmps
loopne
data16
jle
imul
jne
xor
inc
xor
pop
pop
mov
inc
sub
inc
dec
add
call
cwde
mov
and
mov
or
inc
bound
movs
and
outs
jne
add
sub
lods
loop
jbe
cmp
jbe
push
sub
jne
sbb
or
mov
sub
cmc
adc
push
popf
inc
mov
push
jne
cmp
aad
and
and
lods
cmp
fisttp
adc
or
(bad)
jecxz
adc
adc
data16
sub
movs
inc
mov
aad
inc
popw
bound
xlat
push
ja
bound
pop
(bad)
cmc
imul
push
add
ror
mov
inc
xor
inc
inc
outs
hlt
dec
cmp
sub
out
push
or
loope
mov
cmp
push
lahf
shl
outs
fstp
outs
loopne
push
fsub
and
aad
cmp
fld
mov
push
pop
cli
sub
call
and
push
push
add
dec
mov
dec
add
ds
loopne
pushf
movs
inc
bound
pop
fwait
xchg
ja
push
sbb
pop
push
or
and
aad
js
iret
cmp
int
mov
aad
pop
iretw
loop
pop
jne
stos
xchg
xor
pop
add
push
lods
mov
mov
or
inc
rcr
pushf
cmp
movs
inc
or
outs
xchg
pop
adc
or
or
leave
push
xchg
dec
inc
push
(bad)
dec
loopne
movs
retf
push
mov
inc
sub
iret
inc
mov
fisttp
data16
push
xchg
pop
pop
pop
movs
adc
pop
mov
inc
sub
inc
xor
pop
pop
jle
dec
cmp
pop
outs
dec
adc
aas
lods
xor
or
sbb
ss
or
(bad)
fdivr
lods
cmp
fisttp
cmp
push
jle
loopne
outs
jne
mov
pop
mov
inc
sub
jne
dec
pop
movs
inc
xor
pop
pop
jle
dec
and
mov
push
inc
rcr
int
pop
outs
movs
cmp
pop
xchg
push
jge
sub
jge
inc
mov
mov
pop
mov
inc
sub
inc
push
(bad)
fsub
mov
pop
outs
aad
bound
jge
push
xchg
push
dec
dec
inc
xlat
fimul
xlat
jmp
xchg
cmp
cli
cwde
push
jne
cmp
or
in
cmp
adc
mov
and
pop
mov
mov
pop
outs
dec
push
mov
push
jle
push
sbb
inc
dec
add
and
outs
je
cmp
xor
adc
sub
mov
cmp
outs
adc
pushf
je
and
inc
push
aaa
lods
inc
or
iret
xor
cmc
push
inc
push
outs
dec
push
inc
(bad)
dec
dec
data16
cwde
movs
or
data16
jle
cmp
jne
push
pop
popf
inc
xor
mov
xor
popf
xlat
sub
push
rcr
push
inc
imul
or
mov
lods
jo
push
hlt
inc
mov
data16
sub
lods
cmp
fisttp
adc
or
outs
jecxz
test
retf
inc
mov
ds
fsub
lods
xor
outs
lds
xor
sub
scas
sub
in
loop
ds
jmp
cmp
inc
pop
pop
movs
push
mov
jbe
and
mov
inc
dec
xchg
call
inc
push
fisttp
adc
or
std
jecxz
mov
ror
mov
xor
jbe
dec
inc
pushf
inc
mov
data16
bound
out
adc
jl
mov
sbb
shl
pop
aad
cmp
aam
add
jmp
lods
adc
(bad)
loopne
push
lods
or
fisttp
adc
or
movs
loop
outs
fld
ds
loopne
push
jne
and
dec
push
xchg
or
jge
mov
jl
and
pop
or
popf
cmp
mov
xor
push
(bad)
pop
xchg
and
xlat
jmp
aad
or
or
rcr
xlat
push
mov
cld
push
pop
jl
xor
outs
jne
mov
aad
inc
data16
push
pop
cld
fsubr
je
loopne
push
pop
cmp
pop
popa
inc
push
pop
pop
and
clc
and
jne
sub
sub
dec
loop
lods
cmp
jne
sub
lods
or
mov
sub
lods
adc
(bad)
loopne
push
lods
or
fisttp
adc
or
fucom
dec
xchg
call
mov
jle
call
dec
pushf
mov
mov
push
std
push
and
movs
inc
dec
data16
fcomp
std
push
pop
push
inc
fld
jbe
push
paddq
sbb
add
lods
movs
sub
int
push
push
fstp
and
push
jle
cmp
dec
or
lods
inc
imul
lods
or
mov
sub
lods
adc
mov
sub
std
or
std
dec
cmp
xor
adc
inc
dec
push
lods
jmp
adc
or
std
dec
cmp
xor
movs
je
jae
imul
and
push
push
mov
xchg
or
lods
inc
add
ror
ds
push
paddq
movs
xlat
adc
push
scas
sub
dec
loop
lods
cmp
jne
sub
lods
or
xchg
push
jl
sub
lods
sub
in
loopne
push
pushf
or
popf
push
cmp
xor
jl
sub
fmulp
push
mov
jne
push
push
ror
mov
popf
sar
xor
xor
push
std
inc
inc
mov
pop
pop
ds
sub
aas
mov
push
mov
inc
dec
ds
loopne
adc
and
dec
call
and
ins
loop
lods
jge
jae
lods
clc
push
push
in
loopne
push
lods
or
mov
sub
movs
adc
pop
lds
jg
inc
or
std
and
xchg
xor
push
fisttp
adc
or
movs
loop
outs
fld
ds
mov
int
and
ja
xor
std
or
movs
lock
jne
inc
xchg
ror
inc
add
loop
add
cmp
(bad)
jle
xor
mov
xor
popfw
adc
popf
cmp
outs
(bad)
jle
xor
mov
xor
inc
cld
adc
xchg
popa
data16
pop
push
jge
or
int
xchg
aas
mov
sub
push
pop
dec
cmp
inc
xlat
fimul
mov
loop
je
pop
mov
and
jne
inc
data16
or
std
or
pop
mov
mov
xchg
dec
mov
xor
push
int3
ror
pushf
pop
and
xchg
mov
inc
mov
sbb
xor
or
nop
and
xchg
mov
jbe
pop
or
jecxz
mov
adc
movs
ret
mov
cwde
jbe
pop
or
loop
mov
xor
test
jmp
and
mov
ds
imul
mov
sub
movs
inc
stos
pop
mov
dec
add
iret
adc
es
cmp
inc
xlat
push
xchg
push
retf
lods
sub
push
dec
shl
xlat
stc
or
push
data16
lock
mov
xor
adc
adc
pushf
addr16
loop
xchg
sub
xchg
ins
loop
lods
popf
cmp
popf
clc
push
outs
int
cmp
lods
xor
xchg
push
jl
sub
popf
sub
iret
dec
add
fdivr
movs
jge
and
xor
xchg
repnz
mov
dec
adc
xor
movs
jg
dec
lods
addr16
fadd
repz
mov
clc
sub
ror
movs
jge
and
xor
xchg
inc
xor
movs
ret
cmc
cli
cwde
push
(bad)
mov
iret
shr
xchg
jle
cmp
aad
pop
mov
dec
cmp
(bad)
mov
iret
shr
xchg
jle
cmp
sub
movs
dec
push
ds
dec
or
push
mov
mov
push
imul
dec
adc
inc
inc
call
cmp
jbe
dec
call
cmps
int3
cmp
lea
jae
sbb
loopne
jbe
sub
or
inc
cmp
ds
cmp
xchg
xlat
clc
and
and
mov
dec
cmp
inc
or
xchg
xor
xchg
ins
loop
lods
std
cmp
mov
push
jbe
fsubr
lods
push
or
enter
sub
movs
mov
ds
dec
mov
je
or
and
cmps
and
lahf
xchg
jge
sub
(bad)
xchg
xchg
xlat
fsub
and
push
and
xlat
shr
pushf
std
jmp
hlt
and
test
and
aam
cwde
addr16
pop
je
sbb
aas
std
adc
push
xchg
xor
xchg
ins
loop
lods
std
cmp
mov
push
jbe
fsubr
lods
push
or
enter
sub
movs
xor
pop
movs
inc
xor
pop
pop
mov
inc
sub
cmp
popf
push
pop
mov
mov
mov
pop
inc
rol
pop
aad
dec
ds
pusha
(bad)
std
dec
mov
cld
ror
jne
mov
aad
inc
data16
push
(bad)
lods
add
pop
std
add
dec
fsubr
mov
pop
add
sbb
call
inc
mov
sub
outs
popf
cmp
cmp
xor
mov
or
mov
or
aam
mov
aam
stos
xchg
xlat
add
data16
jle
arpl
mov
add
mov
xor
jle
dec
cmp
pop
inc
fst
dec
mov
xor
pop
fld
mov
push
sbb
inc
xor
inc
xor
pop
pop
pop
fld
data16
or
or
mov
dec
sub
pop
std
inc
mov
push
std
sar
pop
push
pop
adc
imul
xchg
icebp
and
ror
movs
loop
pop
int
pop
push
fstp
and
push
outs
pop
cmp
std
adc
popf
call
and
dec
loope
xlat
push
mov
lods
xchg
adc
pop
aad
dec
ds
inc
add
inc
and
push
inc
dec
push
ds
pusha
push
push
pop
call
inc
sub
pop
and
fdiv
pop
mov
inc
sub
inc
mov
xchg
fbld
push
mov
js
std
lock
dec
xor
cli
dec
movs
inc
ret
hlt
fldenv
pushf
stc
pop
xchg
inc
add
repnz
hlt
fldenv
inc
stc
pop
pop
fild
adc
sbb
add
loop
add
cmp
lods
pop
mov
data16
xor
outs
dec
xor
push
jne
cmp
or
dec
xor
aas
lods
adc
mov
dec
mov
add
loopne
outs
je
cmp
xor
inc
dec
sub
jl
or
add
dec
cmp
inc
call
shl
(bad)
aam
jae
pushf
xor
xchg
mov
xchg
icebp
adc
adc
fild
and
dec
add
xchg
xor
shl
std
push
imul
ror
outs
loopne
ins
(bad)
nop
pop
data16
clc
cwde
mov
or
push
ja
cmp
sub
inc
dec
jecxz
aas
mov
xor
push
xchg
jg
imul
fdivr
mov
movs
and
inc
loope
inc
pop
fimul
outs
ret
mov
fstp
pop
cld
popa
add
lods
imul
xchg
jae
mov
(bad)
jg
rol
outs
mov
dec
inc
inc
inc
push
dec
jl
ret
mov
shr
xchg
cmp
inc
dec
mov
aas
push
ror
test
jae
pop
loop
test
jecxz
pushf
inc
or
xchg
jg
xor
mov
loopne
sbb
jo
xchg
or
dec
dec
dec
movs
dec
mov
push
lods
jns
push
fisttp
adc
or
fsub
dec
or
xor
xchg
pop
push
inc
push
mov
test
inc
xor
outs
mov
inc
(bad)
push
cwde
mov
and
jle
pop
sub
int
push
mov
inc
xor
fcomp
fucom
push
lea
jae
mov
js
aam
pop
dec
aam
mov
pop
xor
adc
pushf
push
and
loopne
jl
xor
pop
pop
pop
pusha
inc
xlat
push
pushf
mov
sbb
ss
and
push
fdiv
sub
xor
lods
std
sub
(bad)
push
data16
push
data16
push
push
lods
pusha
mov
loopne
inc
add
loop
lods
jge
pop
xor
clc
push
mov
pop
sub
outs
pop
pop
movs
fsubr
jae
dec
mov
push
mov
loope
push
xlat
cmp
(bad)
cmp
xchg
xor
retf
cmp
mov
dec
add
adc
pop
mov
arpl
mov
ret
xchg
imul
sub
data16
cwde
xchg
popf
shr
dec
movs
cmp
mov
pop
sub
inc
mov
cmps
lods
inc
sub
and
rol
pop
movs
adc
pop
int
pop
aas
inc
inc
add
dec
dec
inc
adc
icebp
xor
shr
mov
sub
repnz
inc
xor
sub
ins
loop
scas
int
call
push
inc
inc
std
dec
dec
xchg
sbb
mov
popf
xor
jle
push
sub
sbb
push
push
push
mov
arpl
pop
mov
inc
mov
mov
cmp
out
and
mov
fadd
or
and
lods
xor
or
movs
inc
cmp
loopne
jl
jp
push
(bad)
imul
inc
xor
pop
pop
mov
inc
sub
inc
shl
je
dec
mov
and
pushf
ror
movs
inc
and
outs
xlat
pop
xor
sub
push
cmp
pop
sub
arpl
scas
(bad)
mov
push
push
pop
lods
sar
jl
sub
es
push
pop
lea
outs
popf
push
mov
iret
push
cmp
cmp
aad
sub
fnsave
cmps
lods
xor
mov
jecxz
pop
movs
adc
pop
mov
inc
sub
inc
inc
ds
xor
pusha
mov
and
inc
and
aad
and
or
push
mov
inc
inc
mov
mov
pop
mov
inc
sub
popf
dec
and
ror
data16
pop
sbb
and
inc
ins
sub
aad
inc
cs
push
mov
xchg
loopne
push
aad
mov
int
mov
data16
push
ds
inc
sub
jne
push
xchg
pusha
mov
and
inc
and
aad
and
or
movs
in
retf
aad
sub
xchg
mov
in
sbb
dec
loopne
inc
xor
in
inc
push
and
dec
nop
(bad)
jne
or
ins
ret
cmp
mov
or
push
xchg
pop
jle
sub
aam
add
pushf
inc
or
mov
jne
dec
pop
movs
adc
pop
dec
pop
pop
push
popf
or
add
int
cmp
lods
xor
outs
fcom
dec
sub
in
nop
outs
mov
cmp
push
jb
pushf
xlat
inc
cmp
and
add
fadd
movs
jge
jae
mov
repz
aam
xor
xlat
repnz
mov
ror
xchg
jle
arpl
push
xlat
retf
mov
sub
int
jae
popf
xor
outs
int
cmp
lods
xor
mov
sub
in
adc
xlat
fisttp
mov
movs
pusha
mov
mov
pop
pop
push
xlat
adc
movs
jg
dec
lods
addr16
fadd
repz
adc
and
mov
cmp
inc
pop
xor
call
sbb
adc
sub
je
stos
push
jge
js
lds
jae
lods
or
or
loopne
or
sub
pop
cmp
pushf
sub
mov
outs
pop
jns
inc
jmp
xchg
mov
sub
mov
mov
jmp
fld
sbb
in
rcr
movs
call
inc
jle
pop
pop
pop
aad
cmp
std
dec
add
pop
clc
imul
xchg
fs
sti
xor
adc
mov
cmp
inc
xor
movs
pop
ret
xchg
mov
cmp
push
ins
dec
add
lea
pop
xchg
sub
in
sub
and
popf
inc
mov
movs
lods
sub
jne
inc
push
popf
jo
push
mov
xor
push
xlat
sub
mov
loop
xchg
jg
stos
push
xlat
sub
mov
cli
mov
sub
aad
and
std
xor
jbe
push
pop
addr16
cmp
mov
push
ss
mov
lods
inc
pop
pop
fmul
or
dec
xor
and
lods
mov
mov
mov
cmp
call
jae
xchg
or
mov
xor
cmp
push
dec
push
xchg
inc
cmp
xor
push
mov
pop
pop
outs
inc
adc
(bad)
push
push
aam
retf
push
ret
xchg
dec
jl
retf
mov
lds
jae
lods
dec
add
iret
or
jle
cmp
mov
jae
jne
cmp
inc
xor
pop
pop
inc
mov
dec
push
int
cmp
mov
xor
jge
sub
jne
mov
movs
push
pop
mov
sub
lods
dec
add
iret
or
jle
cmp
int3
sub
popf
loope
push
int
jae
mov
xor
jge
sub
movs
add
jne
mov
mov
or
fst
arpl
movs
xor
outs
xchg
cmp
sub
cmc
pop
pop
push
xchg
mov
movs
imul
cmc
pop
pop
push
cmps
loopne
data16
jle
imul
xchg
mov
scas
dec
cli
cwde
mov
push
push
xchg
push
jge
sub
jne
sub
inc
push
mov
or
jne
cmp
add
iret
cmp
data16
mov
adc
xchg
jg
jecxz
scas
std
cli
cwde
dec
movs
and
push
mov
pop
pop
inc
jl
dec
sahf
mov
or
pop
int
xor
enter
sbb
movs
sub
mov
rcl
popf
adc
mov
outs
xchg
cmp
sub
int
loope
mov
cmp
dec
adc
mov
pop
pop
outs
xchg
cmp
sub
std
pop
pop
lods
pop
sub
iret
or
xchg
jle
cmp
fsubr
jae
xchg
push
jle
fisttp
pop
std
pop
pop
mov
xor
jge
sub
dec
inc
cmp
into
xor
inc
lds
movs
cmp
mov
pop
pop
inc
int
dec
mov
ds
dec
adc
adc
push
lods
xor
or
push
dec
data16
cmp
movs
pop
sub
and
push
adc
fnstcw
sbb
call
and
lods
rcl
(bad)
jo
inc
(bad)
ror
mov
pop
data16
call
test
stos
inc
std
ror
dec
add
xlat
xchg
and
call
rcl
outs
lods
shl
iret
or
xchg
jle
cmp
movs
sub
lods
or
outs
rcl
iret
sub
inc
clc
cwde
iretw
cmp
xchg
mov
push
cmp
aad
mov
movs
pop
pop
xchg
pop
pop
jge
sub
mov
push
sub
mov
xor
jge
sub
dec
inc
or
adc
sub
popf
shl
dec
xor
lods
sub
cld
call
add
fdivr
jle
cmp
mov
jae
into
or
mov
cmp
xchg
cmp
dec
add
xchg
test
pop
pop
js
lea
push
aad
push
mov
push
imul
sub
iret
loopne
lea
cmp
jae
lds
xor
sub
(bad)
clc
cmp
jae
fst
xchg
jle
or
fst
cs
dec
mov
lea
push
mov
jne
jae
int
imul
or
mov
jae
lods
loopne
pop
iret
or
data16
mov
popf
lds
jae
lods
or
push
xchg
cmp
push
pop
jne
mov
sbb
pop
movs
pop
pop
outs
xchg
cmp
jmp
xchg
aad
mov
jne
mov
sbb
pop
movs
pop
pop
outs
xchg
cmp
jmp
mov
sub
mov
and
xchg
or
dec
xor
fsub
xchg
push
pusha
push
std
or
xchg
imul
lods
pop
pop
outs
lods
jo
or
rcl
mov
mov
adc
outs
shr
inc
(bad)
xor
std
clc
cwde
dec
lods
shr
or
xor
lods
sub
mov
clc
and
movs
inc
xor
pop
pop
inc
lods
(bad)
lds
cwde
fisubr
or
movs
or
mov
add
mov
outs
mov
sub
movs
dec
push
push
jne
sub
inc
xor
xor
jle
cmp
pop
popa
adc
push
adc
repnz
mov
pop
iret
pop
pop
add
fs
push
add
movs
mov
pop
movs
pop
pop
outs
xchg
cmp
xor
data16
pop
mov
dec
cmp
lods
push
mov
iret
or
xchg
push
jge
sub
in
cmp
xor
iret
loopne
data16
cwde
movs
cmp
movs
cmp
jle
pop
pop
jle
dec
mov
dec
shr
mov
xchg
mov
fisttp
sub
frstor
xchg
and
fstp
jg
adc
(bad)
push
or
lea
or
fld
ds
dec
add
mov
xor
xchg
add
cmp
pop
inc
jp
xlat
inc
mov
ja
stos
mov
shr
xchg
adc
inc
xor
shl
lahf
mov
dec
mov
mov
mov
pop
sub
lods
jns
push
xchg
cmp
push
mov
push
imul
ret
and
push
dec
push
adc
retf
popf
jmp
inc
push
std
xor
inc
lods
loope
push
std
push
mov
push
inc
xchg
xchg
jl
mov
xchg
and
int
sbb
movs
cmp
xchg
jle
dec
mov
je
push
xchg
je
and
and
push
jbe
sub
xchg
cmp
mov
call
inc
or
lods
or
mov
sub
lea
xor
int
xor
sub
mov
xor
inc
push
adc
mov
cmp
outs
lods
push
push
sbb
sub
cmc
sub
int
sub
push
inc
inc
lds
dec
lea
push
jne
pop
xchg
push
jge
sub
jne
pop
lods
and
lods
sub
iret
or
fbstp
mov
inc
int
dec
outs
popf
adc
popf
dec
inc
outs
xchg
cmp
xor
pop
movs
and
pop
lods
pop
pop
or
fcom
pushf
sub
xlat
adc
(bad)
(bad)
movs
pop
sub
int
push
dec
add
mov
in
inc
or
add
mov
in
inc
or
add
push
(bad)
xchg
and
in
inc
or
add
data16
push
and
adc
inc
cmp
pusha
and
popf
pop
pusha
mov
or
popf
xor
push
int
push
xlat
in
inc
or
add
push
aad
mov
mov
push
imul
or
sbb
fisub
es
fcomp
dec
clc
sub
dec
sub
push
inc
push
cmp
mov
mov
fadd
cmps
sbb
pusha
and
inc
push
movs
push
push
push
inc
dec
cwde
outs
std
xor
jle
pop
or
int
and
or
popf
sub
ffreep
sub
movs
xor
pop
xchg
inc
adc
rcr
popf
add
outs
xchg
cmp
lock
(bad)
push
push
(bad)
sar
push
lods
(bad)
push
out
adc
or
call
pop
push
fisttp
push
aad
cmp
fbstp
sbb
je
mov
xchg
and
push
mov
rcl
ja
push
push
xchg
push
and
pusha
mov
(bad)
fsub
push
aad
push
xchg
xchg
jl
or
push
jne
pop
push
xchg
cmp
mov
push
and
adc
loopne
push
scas
pop
pusha
push
movs
js
sbb
shl
mov
inc
sub
lods
xor
or
push
mov
aad
pop
cs
push
push
lods
loop
jbe
push
or
push
test
jae
movs
js
pop
aad
mov
aad
and
aad
imul
clc
sub
std
imul
movs
xor
xchg
loopne
push
dec
imul
push
xchg
js
mov
cmp
sbb
push
mov
(bad)
fdiv
push
popf
and
movs
pop
pusha
pop
outs
xor
std
jo
jbe
dec
inc
sbb
loopne
or
pusha
and
or
mov
js
push
ins
rol
pop
in
inc
call
xor
push
aad
mov
fnstsw
mov
dec
push
std
or
scas
pusha
add
fdivr
jbe
xor
dec
inc
sub
inc
inc
mov
adc
popa
push
ds
dec
js
jge
mov
inc
jmp
fdivr
mov
fsub
xchg
pop
mov
lock
cmc
shr
in
pop
push
mov
mov
xchg
inc
mov
fidiv
cmp
ds
push
pop
lods
pop
inc
fstp
and
mov
push
push
dec
cmp
xchg
lods
loopne
xchg
inc
mov
ins
std
pusha
and
inc
cmp
inc
call
inc
sub
lods
inc
mov
push
movs
fmul
movs
loopne
outs
aad
push
ds
pusha
push
sbb
shr
std
inc
mov
jne
dec
push
dec
xor
data16
pop
jl
xor
dec
(bad)
sub
push
lods
xor
push
push
or
jle
dec
call
ja
adc
push
cmc
pop
js
movs
fmul
outs
xlat
inc
dec
cs
call
push
mov
or
ja
or
(bad)
push
or
fisttp
adc
or
xlat
pusha
add
fidivr
sub
sbb
ss
shr
jle
push
inc
in
xor
push
fsubr
inc
inc
sub
mov
mov
mov
and
jne
sub
pop
jp
push
aad
pop
xchg
cmp
data16
push
push
lea
push
popf
and
movs
pop
pusha
pop
outs
xor
std
jo
jbe
dec
inc
je
loopne
data16
push
ins
push
sbb
jg
inc
push
adc
mov
jne
and
aad
and
std
loop
xchg
ffree
sub
and
fnstsw
cmps
(bad)
shr
(bad)
loopne
push
sbb
mov
data16
push
sbb
jbe
dec
inc
or
inc
bound
popf
fmul
mov
push
push
or
pusha
and
or
push
aad
push
ss
add
shl
mov
or
or
scas
(bad)
js
push
cmps
imul
mov
push
or
aad
imul
push
sub
mov
cmp
dec
ror
mov
push
cmp
inc
push
ds
add
cmp
pop
movs
adc
pop
dec
pop
pop
ds
mov
mov
imul
jne
pop
pop
movs
mov
pop
movs
pop
pop
pop
xlat
fcom
xlat
jb
adc
inc
and
inc
and
inc
and
push
push
movs
cmp
mov
push
push
outs
lods
or
mov
or
movs
cmp
outs
xlat
loopne
adc
inc
and
inc
and
push
and
push
lods
out
loopne
outs
popf
sbb
dec
push
sbb
(bad)
imul
lods
push
and
push
lods
(bad)
loopne
outs
movs
sbb
popf
call
fsubr
loopne
push
(bad)
xor
push
lahf
or
lods
mov
sbb
std
dec
push
adc
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
(bad)
inc
and
jle
iret
adc
mov
and
dec
fistp
cmp
ficom
jmp
mov
jbe
dec
iret
adc
(bad)
sub
adc
cli
cmp
dec
dec
inc
and
je
mov
mov
mov
mov
fistp
adc
sar
fcmove
and
cmp
or
jb
lods
cmp
sub
loopne
ins
daa
mov
mov
mov
fistp
mov
mov
call
mov
fistp
inc
dec
inc
ror
dec
fistp
mov
out
int3
fistp
or
inc
(bad)
mov
ror
jp
imul
inc
and
dec
fistp
dec
dec
inc
mov
dec
fistp
mov
mov
mov
fistp
sub
sub
rcr
mov
stc
dec
adc
dec
xlat
and
dec
fistp
mov
fistp
jns
inc
jnp
dec
xlat
and
mov
mov
test
jnp
dec
inc
mov
lods
sub
aas
loopne
ins
daa
sub
daa
out
sub
(bad)
scas
sub
(bad)
outs
(bad)
mov
inc
mov
aam
mov
dec
and
mov
mov
mov
fistp
sbb
dec
inc
and
add
mov
jbe
dec
iret
adc
fxch
adc
dec
mov
mov
mov
shl
mov
sbb
mov
jnp
jbe
test
inc
out
(bad)
push
and
dec
jmp
adc
mov
mov
pop
call
jmp
inc
ins
(bad)
inc
and
dec
pop
jns
je
mov
mov
fdivr
(bad)
inc
push
inc
inc
and
(bad)
inc
and
ret
sbb
inc
jnp
dec
loop
(bad)
sbb
inc
ret
sub
iret
sbb
jne
das
adc
stos
mov
xor
pop
call
rol
ror
arpl
clc
fistp
ss
jnp
adc
dec
fistp
sub
(bad)
inc
and
ret
sbb
inc
mov
dec
loop
(bad)
sbb
inc
jnp
dec
jmp
adc
or
cwde
xor
push
cwde
fidiv
inc
and
(bad)
adc
pop
clc
cmp
aam
sub
(bad)
jecxz
adc
clc
fistp
ss
jnp
adc
jp
mov
xor
pusha
lea
pop
mov
fistp
adc
pop
lea
pop
mov
fistp
loope
cmps
sub
xchg
push
push
scas
cwde
jne
cs
fist
out
and
dec
jmp
mov
test
sub
sbb
pop
and
inc
sub
or
jp
mov
adc
test
jp
push
inc
sub
or
mov
or
popf
mov
mov
xchg
sar
cmp
pop
iret
adc
(bad)
mov
pop
dec
ret
and
dec
inc
and
cmc
fnstsw
adc
dec
inc
mov
push
scas
fdiv
cs
fist
out
and
dec
jmp
mov
mov
fistp
sbb
pop
and
inc
sub
mov
jp
mov
adc
sub
adc
push
dec
pop
adc
push
push
pop
adc
push
mov
adc
into
mov
and
inc
and
scas
pop
iret
adc
outs
imul
clc
retf
and
aam
mov
(bad)
dec
mov
dec
inc
and
into
fdivr
fwait
sbb
inc
fistp
dec
inc
and
dec
fistp
adc
push
stc
fiadd
pop
ror
and
cmp
or
out
and
(bad)
imul
mov
mov
sbb
fld
aam
and
ret
xor
rol
xchg
sbb
inc
and
rol
and
xlat
test
jmp
dec
inc
and
cmp
mov
adc
cld
jno
dec
fld
dec
fistp
mov
mov
adc
div
sbb
dec
shl
neg
mov
pop
jns
and
aam
and
inc
cmp
xchg
cs
and
out
jae
dec
jmp
mov
cmp
rcr
pop
dec
shl
jmp
test
imul
mov
mov
cmp
fstp
pop
dec
stos
add
dec
fistp
mov
fistp
sbb
dec
and
inc
sub
fsubr
jp
mov
adc
cmp
sub
or
mov
rsqrtps
(bad)
sar
jmp
pop
iret
adc
(bad)
add
pop
dec
shl
dec
fistp
cmp
fstp
pop
dec
stos
add
dec
fistp
jns
fidivr
jp
and
aam
jne
mov
ret
rcr
test
jp
mov
adc
mov
jp
push
inc
sub
cmovp
out
mov
inc
sar
sti
adc
dec
inc
mov
mov
fnstsw
adc
dec
inc
mov
mov
fistp
pop
jp
and
aam
add
sar
aaa
dec
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
pusha
int3
clc
aad
sub
sti
and
(bad)
fwait
scas
adc
clc
fistp
ss
jnp
adc
mov
fstp
retf
jp
das
dec
aam
and
fdivr
add
aaa
dec
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
or
aad
sub
sti
inc
adc
fwait
scas
adc
dec
fistp
mov
fistp
sbb
dec
inc
and
mov
fstp
sub
das
dec
aam
and
(bad)
jnp
mov
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
mov
clc
aad
sub
sti
jo
(bad)
fwait
scas
adc
dec
fistp
mov
fistp
sbb
dec
inc
and
inc
fistp
sbb
inc
xchg
xor
(bad)
inc
and
loop
(bad)
sbb
inc
ret
das
dec
jmp
adc
ins
fwait
sub
lods
fwait
shr
dec
add
mov
mov
mov
fistp
sbb
push
and
inc
sub
push
jmp
sub
mov
jp
push
inc
sub
push
dec
mov
push
push
popf
outs
xchg
mov
dec
sub
mov
fistp
adc
mov
inc
sub
nop
jmp
sub
push
jmp
sub
mov
jp
push
inc
sub
push
dec
mov
push
push
popf
mov
mov
xchg
mov
mov
dec
aam
mov
mov
pop
das
test
inc
sub
loopne
jp
mov
rol
test
test
sub
cmovp
push
iret
mov
sar
cli
mov
jle
iret
adc
and
arpl
pusha
and
dec
(bad)
mov
fistp
sbb
dec
and
inc
sub
shr
and
cmp
iret
or
push
js
in
pop
cli
in
(bad)
sti
stc
ficomp
and
xchg
in
mov
sub
dec
or
mov
mov
mov
inc
and
out
imul
fiadd
pop
(bad)
xlat
and
out
dec
push
mov
(bad)
xlat
and
(bad)
push
test
cmp
and
aam
jne
bndstx
xchg
dec
mov
rsqrtps
sar
jnp
dec
inc
sub
cmc
fnstsw
adc
dec
inc
mov
mov
fistp
pop
jp
and
aam
adc
jae
dec
aaa
dec
aam
and
mov
mov
rcr
test
jp
inc
inc
cmp
test
shr
(bad)
jl
adc
dec
inc
and
clc
fistp
ss
jnp
adc
cmp
mov
add
mov
adc
dec
outs
or
dec
pop
iret
mov
mov
(bad)
mov
jae
adc
jnp
adc
das
dec
aam
and
retf
jnp
mov
aam
and
fistp
mov
cmp
dec
aam
and
fcomp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
nop
int3
cmp
mov
aam
push
adc
mov
cwde
xor
inc
and
dec
je
sbb
fmul
rcr
mov
lea
sub
ficomp
sbb
inc
cmp
ret
sbb
inc
mov
dec
loop
(bad)
sbb
inc
jnp
dec
jmp
adc
mov
call
push
call
xchg
inc
and
(bad)
movs
cmp
clc
cmp
dec
jl
mov
mov
mov
fistp
pop
(bad)
xlat
and
out
dec
in
fiadd
pop
(bad)
xlat
and
(bad)
push
aad
fiadd
pop
(bad)
xlat
and
(bad)
jae
stc
fiadd
pop
(bad)
xlat
and
inc
jnp
sbb
inc
sti
add
sub
in
or
in
ja
cli
stc
fimul
pop
cmp
and
aam
loopne
out
pop
outs
sub
loopne
ins
pop
lea
sub
cmp
mov
cmp
add
rol
test
sbb
mov
adc
call
inc
sub
push
jmp
sub
shr
adc
cmovp
push
into
mov
not
mov
cli
mov
dec
je
sbb
fmul
mov
mov
test
inc
cmp
pop
mov
(bad)
xlat
and
(bad)
jae
stc
fiadd
pop
(bad)
xlat
and
inc
jnp
sbb
inc
sti
add
add
in
pusha
cli
in
pop
inc
cli
stc
(bad)
mov
and
sub
mov
mov
mov
mov
fistp
pop
jp
and
aam
add
sar
aaa
dec
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
xor
cmp
ror
out
mov
sub
loopne
ins
pop
lea
sub
dec
fistp
sub
(bad)
inc
and
ret
sbb
inc
push
sub
sbb
inc
ret
das
dec
jmp
adc
lds
xor
inc
fcmovu
jle
iret
adc
fxch
adc
dec
mov
mov
mov
dec
aam
mov
sub
das
dec
aam
and
(bad)
jnp
mov
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
add
cmp
and
out
mov
sub
loopne
ins
pop
lea
sub
dec
fistp
dec
aam
mov
ret
jp
das
dec
aam
and
sar
jp
aaa
dec
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
add
cmp
and
out
mov
sub
loopne
ins
pop
lea
sub
dec
fistp
dec
aam
mov
stos
jp
das
dec
aam
and
iret
jnp
sub
aaa
dec
aam
and
ficomp
mov
cmp
dec
aam
and
fistp
mov
fisttp
int
inc
and
daa
aad
int3
das
std
add
cmp
and
out
mov
sub
loopne
ins
pop
lea
sub
dec
fistp
or
fidivr
not
inc
mov
inc
sub
nop
jmp
sub
push
jmp
sub
mov
jp
push
inc
sub
cmovp
push
into
mov
not
mov
jmp
je
sbb
fmul
mov
mov
test
sbb
inc
inc
cmp
(bad)
inc
and
loop
(bad)
or
into
jb
pop
(bad)
and
(bad)
jge
int
aad
int
std
lock
aad
or
into
mov
cwde
aad
cli
mov
ficomp
sbb
inc
repz
sub
(bad)
inc
and
loop
(bad)
sbb
inc
and
dec
jmp
adc
in
call
sub
fcmovu
jle
iret
adc
(bad)
idiv
pop
clc
retf
and
sub
dec
jmp
mov
test
sub
sbb
dec
and
inc
sub
fsubr
jp
mov
adc
cmp
sub
or
mov
rsqrtps
(bad)
sar
jmp
pop
iret
adc
fnstenv
jmp
mov
mov
mov
sbb
dec
fistp
mov
fistp
sbb
cmp
(bad)
inc
and
loop
(bad)
sbb
inc
jae
dec
jmp
adc
in
call
sub
fcmove
jle
iret
adc
(bad)
repnz
clc
shl
dec
jl
mov
fistp
sbb
dec
and
inc
sub
shr
and
cmp
iret
or
push
push
cli
in
mov
in
seto
stc
fdivp
cmp
clc
retf
and
sub
dec
jmp
mov
fwait
(bad)
test
sub
ficomp
sbb
inc
xor
sub
(bad)
inc
and
loop
(bad)
or
into
adc
(bad)
and
(bad)
jge
int3
daa
aad
int3
das
std
dec
int3
cmp
push
adc
fwait
scas
not
push
mov
and
sub
or
mov
mov
mov
fistp
sbb
cmp
(bad)
inc
and
loop
(bad)
or
into
adc
(bad)
and
(bad)
jge
int3
daa
aad
int3
das
std
dec
int3
cmp
push
adc
fwait
scas
not
push
mov
and
sub
or
mov
mov
mov
fistp
mov
jle
iret
add
into
cmp
pop
dec
shl
dec
fistp
aam
inc
iret
add
into
ficom
pop
dec
shl
dec
fistp
mov
fistp
adc
fmul
jmp
mov
jmp
clc
adc
dec
inc
fist
dec
call
mov
mov
mov
fdivr
jmp
cwde
adc
dec
inc
fist
dec
call
mov
fdivr
jmp
mov
mov
dec
call
mov
mov
push
out
mov
dec
jmp
mov
mov
fistp
mov
sub
setb
mov
mov
mov
fistp
adc
(bad)
inc
and
dec
adc
mov
fmul
cmps
push
and
(bad)
jmp
arpl
dec
fistp
stc
int3
fstp
jbe
inc
mov
push
test
mov
sbb
or
fdivr
mov
dec
call
mov
mov
mov
mov
mov
dec
fistp
or
mov
xchg
dec
jg
mov
sbb
into
adc
ss
xchg
cdq
adc
into
fwait
cmp
fst
mov
xchg
ins
dec
mov
out
test
cmp
adc
add
dec
fistp
cmp
(bad)
rol
and
push
imul
mov
mov
mov
mov
mov
mov
adc
dec
inc
mov
and
jg
push
test
stc
into
and
es
cmp
in
pop
mov
repz
cmp
sub
dec
arpl
lea
and
rcr
mov
adc
dec
fistp
leave
stc
fstp
in
aam
nop
adc
movs
sub
pop
iret
push
xchg
inc
and
js
adc
mov
lea
and
(bad)
jl
adc
dec
inc
and
dec
fistp
mov
fstp
push
cli
cmp
jge
inc
and
push
inc
movs
mov
dec
call
mov
or
lea
and
mov
mov
xchg
out
and
xchg
jmp
imul
les
jo
mov
adc
in
mov
out
and
jo
mov
adc
sub
inc
in
mov
out
and
out
jmp
fist
adc
and
inc
popa
add
mov
and
jns
dec
out
aam
sti
adc
dec
pop
jmp
mov
jmp
fistp
inc
repz
xor
stos
mov
mov
aam
mov
(bad)
inc
pop
adc
inc
fistp
adc
dec
inc
and
jns
mov
mov
xrelease
pop
jns
retf
out
aam
mov
push
push
or
test
mov
aam
and
fnclex
mov
fisub
push
push
dec
and
test
mov
aam
and
fndisi(8087
mov
fsub
push
push
dec
and
test
mov
aam
and
sti
loope
out
mov
mov
inc
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
in
mov
sub
fisub
(bad)
xlat
mov
and
push
in
call
aam
movs
adc
mov
in
aam
and
(bad)
mov
out
pop
pop
mov
test
addr16
aam
inc
adc
dec
pop
adc
aam
adc
test
mov
mov
xor
xlat
mov
loope
push
in
adc
push
xor
lea
and
aam
mov
xor
sar
test
jmp
cmp
inc
inc
pop
dec
repnz
and
push
fs
inc
mov
mov
adc
mov
mov
(bad)
push
xchg
dec
and
pop
dec
xchg
adc
inc
fistp
or
out
popa
cli
mov
leave
xlat
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
aam
es
add
dec
inc
mov
mov
leave
xlat
and
cli
arpl
ins
out
inc
and
leave
xlat
and
cli
arpl
ins
pop
mov
xlat
and
cli
add
mov
ficom
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
aam
cmp
dec
mov
mov
mov
scas
xlat
and
jns
add
aam
inc
adc
dec
pop
adc
aam
adc
test
mov
mov
xor
xlat
dec
and
push
in
call
dec
mov
and
jns
mov
adc
jnp
xor
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fidivr
movups
inc
test
dec
ret
es
dec
fistp
mov
mov
and
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
shr
xchg
inc
jecxz
mov
out
and
jo
mov
adc
das
xchg
inc
loopne
mov
out
and
jo
fwait
adc
inc
mov
xchg
inc
in
mov
out
and
jo
fwait
adc
inc
mov
xchg
inc
out
mov
out
and
out
jmp
sub
jle
and
out
inc
and
push
xlat
and
inc
popa
add
mov
std
fs
add
xchg
out
jmp
fist
out
test
mov
push
xlat
and
inc
popa
add
mov
jne
call
add
xchg
rol
out
jmp
fist
jns
adc
aam
pusha
and
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
inc
sub
cs
out
and
jo
mov
adc
mov
fidivr
out
and
fucompp
fwait
adc
jne
and
aad
mov
lds
pop
outs
lahf
js
push
lahf
dec
inc
pop
aad
imul
pusha
push
es
push
cmp
push
movs
pop
sub
jl
push
xchg
xlat
rcr
jne
push
mov
shr
jbe
dec
push
scas
mov
or
fst
push
push
inc
xor
ds
loopne
push
in
inc
data16
inc
or
jne
mov
std
sub
cs
inc
sub
xor
sbb
fsub
mov
rcr
lods
inc
xor
sbb
std
push
or
in
dec
mov
mov
inc
cmp
aad
mov
xchg
shr
loop
movs
pop
pop
mov
push
xchg
aad
and
aad
and
or
adc
aad
and
aam
and
inc
and
or
pop
xlat
inc
and
aad
and
pop
and
aad
and
xlat
jecxz
adc
aad
and
jae
mov
shl
add
xlat
mov
xlat
jmp
xlat
(bad)
adc
aad
and
aad
and
dec
and
aad
and
shl
cmp
xlat
dec
and
aad
and
aad
and
and
xlat
dec
and
xlat
xor
adc
aad
and
dec
and
dec
and
aad
and
and
push
(bad)
(bad)
adc
repnz
and
shl
imul
jp
(bad)
inc
sub
aam
jno
jns
outs
out
aam
mov
dec
jns
mov
aam
and
(bad)
jnp
xor
fiadd
and
test
int
inc
and
push
popa
and
inc
and
jnp
push
scas
pop
iret
adc
ja
xchg
(bad)
inc
cmp
cli
ret
and
aam
pop
xor
rcr
sub
adc
dec
jmp
fist
fiadd
test
rol
es
dec
jmp
fist
fadd
test
rol
sahf
xchg
outs
jmp
fist
sahf
test
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
jns
sub
inc
mov
(bad)
xlat
mov
and
push
in
call
aam
movs
adc
mov
in
aam
and
pop
jnp
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
shr
inc
xchg
test
inc
arpl
aam
and
imul
mov
sub
mov
aam
jmp
cmp
cli
ret
and
aam
pop
xor
rcr
sub
adc
dec
jmp
fist
fiadd
test
rol
es
dec
jmp
fist
fadd
test
rol
sahf
xchg
outs
jmp
fist
sahf
test
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
jns
sub
inc
mov
(bad)
xlat
mov
and
push
in
call
aam
movs
adc
mov
in
aam
and
pop
jnp
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
test
inc
mov
jl
in
aam
and
imul
mov
sub
mov
aam
jmp
fcmovne
cmp
and
(bad)
inc
mov
dec
fistp
dec
(bad)
dec
dec
sbb
mov
mov
adc
jnp
xor
dec
sub
adc
dec
sub
mov
fmul
aam
movs
sbb
dec
fistp
jmp
bndstx
adc
add
jae
xchg
inc
fist
(bad)
enter
and
sbb
add
rol
cs
fist
dec
xchg
mov
mov
mov
fistp
mov
dec
mov
mov
fdivr
pop
dec
push
sub
(bad)
fist
int3
shl
fsubp
add
lods
test
and
dec
mov
mov
mov
jb
fistp
dec
jmp
mov
test
jmp
sub
aad
popa
inc
jns
and
adc
fwait
test
jbe
inc
arpl
jns
mov
aam
and
mov
mov
adc
mov
push
dec
pop
adc
repnz
and
aad
xor
mov
inc
push
rol
fucomip
jp
mov
arpl
inc
and
cs
out
and
dec
jmp
mov
test
jmp
sub
fiadd
and
xchg
fs
sar
and
adc
or
mov
and
jns
sub
aam
mov
in
dec
mov
and
aam
mov
xor
inc
push
and
mov
aad
xor
mov
inc
push
rol
fucomip
pop
jbe
inc
arpl
inc
and
cs
out
and
dec
jmp
mov
mov
fistp
ins
(bad)
inc
and
fiadd
pop
iret
xlat
and
cli
arpl
ins
out
inc
and
retf
xlat
and
cli
arpl
ins
pop
mov
(bad)
and
cli
arpl
ins
pop
mov
(bad)
and
cli
arpl
ins
jo
and
xchg
adc
(bad)
aam
adc
ror
mov
mov
jmp
mov
mov
push
dec
pop
adc
repnz
and
inc
sti
adc
inc
inc
push
rol
xchg
jmp
jae
jns
xor
aam
mov
in
dec
mov
and
cli
fistp
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
fiadd
test
rol
cmps
xchg
outs
jmp
fist
rol
xor
pop
sub
mov
and
je
bound
inc
inc
pop
dec
repnz
and
popa
cli
mov
scas
xlat
and
xlat
add
loope
push
in
adc
inc
jae
(bad)
call
fs
aam
and
push
mov
and
aam
mov
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
push
xchg
xchg
xchg
jp
es
adc
ds
add
mov
out
and
dec
jmp
mov
mov
cli
mov
and
scas
stos
imul
shr
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
fiadd
test
rol
es
outs
jmp
fist
jns
adc
aam
pusha
and
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
scas
xlat
and
jns
add
aam
inc
adc
jnp
xor
jns
and
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
fsubr
inc
xchg
jns
fs
aam
and
push
mov
and
aam
mov
xor
fiadd
and
test
int
inc
and
push
fisub
push
popa
and
inc
and
jnp
push
out
mov
(bad)
jmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
jns
mov
aam
and
ja
mov
(bad)
pop
pop
mov
or
and
std
popa
add
adc
mov
out
and
out
jmp
fist
push
xlat
and
inc
popa
add
mov
cmc
pusha
repnz
push
push
pusha
lea
test
mov
aam
and
jnp
push
cli
mov
and
push
mov
mov
inc
mov
xchg
out
xchg
ins
(bad)
inc
and
dec
dec
xchg
mov
mov
mov
fistp
pop
(bad)
ret
add
inc
lock
and
dec
inc
fist
dec
not
mov
fistp
push
movs
inc
pusha
push
cs
and
out
add
mov
inc
mov
xchg
dec
dec
xchg
mov
mov
mov
fdivr
jb
lds
dec
lahf
fmul
lock
mov
inc
mov
xor
mov
mov
mov
in
sub
and
dec
xor
mov
mov
mov
fistp
adc
inc
xlat
jp
jp
xor
inc
or
mov
mov
xor
fidivr
mov
mov
dec
(bad)
fstp
mov
mov
push
scas
pop
iret
adc
xchg
jae
mov
cli
mov
and
scas
stos
jp
sahf
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
rol
xor
inc
sub
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
pop
shl
cs
fist
dec
call
mov
fistp
call
pushf
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
add
fwait
pmaxsw
cmc
dec
mov
(bad)
imul
mov
mov
mov
cmp
and
bound
pop
adc
(bad)
test
and
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
pop
xlat
and
inc
popa
add
mov
sbb
inc
sti
sub
fcom
out
jmp
fist
jns
adc
aam
pusha
and
fwait
loop
mov
inc
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
cmp
lods
jns
mov
aam
and
inc
jnp
xor
fiadd
and
test
int
inc
and
push
cs
lea
test
mov
aam
and
jnp
push
out
mov
(bad)
jmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
jns
mov
aam
and
ja
mov
sub
ja
cmp
test
jmp
cmp
inc
pop
dec
repnz
and
mov
into
ret
lods
xlat
and
xlat
add
loope
push
in
adc
push
adc
inc
arpl
inc
and
and
mov
out
and
dec
jmp
mov
push
test
ja
shr
inc
mov
popa
in
aam
and
push
mov
and
dec
fnstcw
mov
mov
cmp
fidivr
adc
and
dec
inc
or
mov
fistp
test
jmp
sub
cmp
test
jmp
sub
imul
jp
push
inc
cmp
inc
(bad)
pop
dec
repnz
and
popa
jp
xchg
xchg
xchg
(bad)
jecxz
xor
xchg
inc
dec
jbe
lock
push
sbb
in
aam
and
mov
mov
jge
adc
inc
shl
xchg
test
js
cs
fist
out
and
dec
jmp
mov
cmp
jg
(bad)
fistp
adc
jnp
inc
rcr
imul
sbb
into
sbb
(bad)
and
jne
add
adc
pop
inc
inc
push
mov
out
and
out
jmp
fist
push
xlat
and
inc
popa
add
mov
sub
not
lea
test
mov
aam
and
jnp
sub
mov
and
shl
imul
jp
(bad)
inc
sub
aam
jno
jns
xor
aam
mov
sub
aam
and
ja
mov
(bad)
pop
pop
mov
rcl
and
test
int
inc
and
push
es
lea
test
mov
aam
and
jnp
sub
mov
and
shl
imul
jp
(bad)
inc
sub
aam
jno
jns
cmp
aam
mov
sub
aam
and
ja
mov
(bad)
pop
pop
mov
rcl
and
test
int
inc
and
push
popa
and
inc
and
jnp
sub
mov
and
shl
imul
jp
(bad)
inc
sub
aam
jno
jns
pop
out
aam
mov
sub
aam
and
ja
mov
sub
ja
cmp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
pop
shl
cs
fist
dec
call
mov
fistp
fwait
lds
sbb
mov
and
jns
jb
aam
jecxz
mov
dec
pop
adc
dec
adc
push
mov
out
and
out
jmp
fist
ret
inc
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
cmp
aam
mov
sub
aam
and
xchg
xor
inc
push
and
mov
frstor
inc
repz
sti
xor
rol
out
jmp
fist
rol
xor
cmp
aam
jecxz
pop
sbb
adc
dec
adc
mov
out
and
out
jmp
fist
rcl
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
add
aam
mov
sub
aam
and
ja
mov
(bad)
pop
pop
mov
(bad)
and
test
int
inc
and
push
popa
and
inc
and
jnp
sub
mov
and
popa
cmp
xlat
and
cli
arpl
ins
pop
mov
(bad)
and
cli
arpl
ins
pop
mov
(bad)
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
call
fist
out
and
dec
jmp
mov
mov
cli
mov
and
scas
dec
push
sahf
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
fiadd
test
jns
xchg
out
aam
mov
(bad)
xlat
mov
and
push
in
call
aam
movs
adc
mov
in
aam
and
lahf
jnp
xor
inc
pop
and
mov
xchg
arpl
push
sub
or
out
jmp
fist
jns
adc
aam
pusha
and
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
jo
fwait
adc
inc
mov
xchg
inc
in
mov
out
and
jo
mov
adc
inc
sub
cs
out
and
outs
jmp
dec
pop
rol
and
dec
imul
mov
mov
mov
mov
mov
fistp
mov
mov
mov
mov
sbb
jns
stos
out
aam
jecxz
inc
sbb
adc
push
aam
lea
test
mov
aam
and
jnp
mov
fsub
push
push
dec
and
test
mov
aam
and
sti
loope
out
mov
cmp
sti
push
aam
sub
rcr
pop
adc
imul
and
jbe
iret
adc
dec
loopne
pop
dec
push
sub
mov
mov
enter
lea
and
aam
mov
xor
dec
sub
pop
iret
adc
dec
xor
dec
push
sub
(bad)
fidivr
dec
ret
and
dec
fistp
jmp
bndstx
adc
add
jae
xchg
inc
fist
(bad)
enter
and
sbb
add
rol
cs
fist
dec
xchg
mov
fistp
test
test
sub
repnz
and
arpl
cmp
pop
sub
mov
and
je
bound
inc
inc
pop
dec
repnz
and
push
arpl
inc
inc
pop
dec
repnz
and
adc
mov
mov
fldenv
push
xchg
dec
and
adc
jae
mov
mov
adc
jnp
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
call
dec
mov
and
repnz
and
arpl
cmp
pop
sub
mov
and
je
bound
inc
inc
pop
dec
repnz
and
push
arpl
dec
repnz
and
adc
mov
mov
fldenv
push
xchg
dec
and
adc
xchg
dec
mov
mov
mov
mov
sbb
mov
jmp
mov
and
arpl
dec
repnz
and
push
arpl
cmp
pop
dec
repnz
and
adc
sar
and
mov
fisub
push
xchg
dec
and
adc
mov
mov
mov
adc
jnp
xor
jns
and
aam
inc
adc
mov
scas
dec
pop
adc
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
rcl
sbb
(bad)
add
aam
and
xlat
(bad)
mov
mov
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
cmp
and
into
dec
mov
rol
xchg
inc
xor
pop
iret
or
(bad)
ficom
fcom
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
int
aam
mov
sub
inc
jo
sbb
pop
iret
sbb
(bad)
ficom
fcom
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
int
aam
mov
sub
inc
jb
sbb
pop
iret
xor
fmulp
ficom
fcom
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
int
aam
mov
sub
push
jo
mov
xrelease
inc
jns
dec
out
aam
mov
push
push
or
test
mov
aam
and
fnclex
mov
fsub
push
push
dec
and
test
mov
aam
and
fndisi(8087
mov
(bad)
push
push
dec
and
test
mov
aam
and
sti
loope
scas
pop
iret
adc
out
imul
fiadd
pop
(bad)
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
int
aam
mov
sub
aam
and
mov
mov
push
dec
pop
adc
repnz
and
int
mov
in
add
xchg
rol
out
jmp
fist
rol
xor
inc
sub
fiadd
and
test
int
inc
and
push
ja
lea
test
mov
aam
and
jnp
add
or
fiadd
pop
rcl
and
jns
or
aam
and
mov
mov
push
dec
pop
adc
repnz
and
xor
inc
sti
out
add
rol
out
jmp
fist
rol
xor
inc
sub
fiadd
and
test
int
inc
and
push
xchg
arpl
jns
mov
aam
and
jnp
sub
mov
and
arpl
aam
jecxz
neg
mov
push
dec
pop
adc
dec
adc
pop
inc
mov
mov
out
and
fucompp
sbb
cmp
or
das
dec
mov
rcl
imul
sbb
(bad)
inc
sub
fiadd
and
test
int
inc
and
push
lahf
arpl
jns
mov
aam
and
jnp
pop
fisttp
sub
into
inc
cmp
jns
and
aam
sbb
mov
mov
push
dec
pop
adc
repnz
and
movs
arpl
inc
repnz
sti
loopne
add
xchg
rol
out
jmp
fist
rol
xor
inc
sub
fiadd
and
test
int
inc
and
push
mul
push
popa
and
inc
and
jnp
adc
or
rcl
and
jns
or
aam
and
mov
mov
push
dec
pop
adc
repnz
and
int
ret
inc
sti
in
sub
cmp
out
jmp
fist
rol
xor
inc
sub
fiadd
and
test
int
inc
and
push
mov
and
inc
and
jnp
sub
mov
and
arpl
aam
jecxz
neg
mov
push
dec
pop
adc
dec
adc
pop
inc
mov
fst
out
and
out
jmp
fist
(bad)
and
sub
add
rol
imul
jp
(bad)
inc
sub
aam
jno
jns
fucomip
aam
mov
sub
push
jo
mov
xrelease
inc
jns
stos
out
aam
mov
push
push
or
test
mov
aam
and
fnclex
inc
aam
and
xchg
mov
ror
test
or
inc
and
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
rol
xor
inc
sub
fiadd
and
test
int
inc
and
push
ja
lea
test
mov
aam
and
jnp
push
out
mov
aam
sti
adc
inc
imul
fwait
scas
cmp
ror
imul
sbb
(bad)
inc
sub
fiadd
and
xchg
arpl
int
inc
and
inc
and
adc
sub
mov
and
jns
das
out
aam
mov
in
dec
mov
and
cli
fistp
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
rol
xor
cmp
aam
jecxz
iret
sbb
jle
cwde
jno
jns
je
aam
mov
sub
aam
and
mov
mov
scas
dec
pop
adc
aam
inc
adc
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
cmp
shl
pop
mov
(bad)
push
xchg
adc
(bad)
dec
out
aam
jno
push
repz
in
aam
and
mov
mov
sub
mov
and
popa
jb
fisub
ficom
enter
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
or
add
mov
out
and
dec
jmp
mov
mov
test
ja
adc
(bad)
test
xor
scas
pop
iret
adc
imul
push
inc
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
cmp
and
add
cmp
rol
imul
sbb
mov
cmp
inc
push
pop
sub
mov
and
je
and
inc
inc
pop
dec
repnz
and
mov
faddp
ficom
fcmovbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
adc
push
sub
test
mov
aam
and
mov
mov
sub
mov
and
mov
jb
inc
inc
pop
sub
mov
and
je
and
inc
inc
pop
dec
repnz
and
mov
faddp
ficom
fcmovbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
adc
push
mov
mov
aam
and
mov
mov
xor
or
inc
sub
scas
int3
and
(bad)
inc
and
out
imul
scas
xlat
and
jns
add
aam
inc
adc
jnp
xor
jns
and
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
push
jns
arpl
aam
and
push
mov
and
aam
mov
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
pop
shl
cs
fist
dec
call
mov
fdivr
sub
dec
iret
lods
movs
inc
and
repnz
and
popa
jb
fisub
ficom
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
sub
pusha
mov
out
and
dec
jmp
mov
push
cmp
outs
sbb
(bad)
jnp
adc
jns
or
aam
and
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
mov
repz
push
cs
and
shr
cs
fist
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
es
jno
push
sti
adc
inc
and
mov
mov
sbb
or
mov
cmp
ror
and
jns
or
aam
and
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
(bad)
ins
repz
push
cs
and
rol
mov
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
outs
jne
popa
push
cs
and
ror
mov
dec
call
mov
fdivr
sub
dec
iret
test
inc
and
inc
and
repnz
and
popa
jb
fisub
ficom
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
loopne
inc
out
aad
in
aam
and
push
mov
and
aam
mov
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
xchg
jns
arpl
aam
and
push
mov
and
pop
fstp
sbb
dec
inc
and
jns
mov
mov
rol
jp
(bad)
inc
sub
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
scas
xlat
and
jns
add
aam
inc
adc
jnp
xor
jns
and
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
sahf
jns
arpl
aam
and
push
mov
and
aam
mov
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
(bad)
jns
arpl
aam
and
push
mov
and
push
fdivr
pop
xrelease
pop
jns
retf
out
aam
mov
push
push
or
test
mov
aam
and
fnclex
mov
fsub
push
push
dec
and
test
mov
aam
and
fndisi(8087
mov
(bad)
push
push
dec
and
test
mov
aam
and
sti
loope
repnz
and
shl
imul
jp
in
cmp
adc
inc
sub
add
out
jmp
fist
jns
adc
aam
pusha
and
fwait
loop
jle
iret
adc
push
cmp
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
mov
jno
(bad)
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
lods
xlat
and
jns
add
aam
inc
adc
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
cmp
rcl
pop
mov
(bad)
push
into
dec
and
fwait
in
sbb
adc
inc
inc
add
cs
fist
out
and
dec
jmp
mov
ret
outs
sbb
(bad)
jnp
adc
arpl
adc
sub
pop
rcl
mov
dec
call
mov
fdivr
sub
dec
iret
lods
int
and
jge
mov
inc
inc
add
cs
fist
out
and
dec
jmp
mov
fcmovbe
fistp
int
sbb
jne
mov
inc
inc
add
pop
out
and
dec
jmp
mov
jp
fistp
(bad)
test
mov
mov
mov
aam
jno
push
add
jns
mov
aam
and
mov
mov
push
out
mov
(bad)
fiadd
pop
cli
retf
and
aam
pop
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
push
test
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
cmp
and
sub
lods
ror
imul
sbb
(bad)
inc
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
mov
xchg
xchg
xchg
jns
es
aam
xor
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
mov
xchg
xchg
xchg
jp
es
adc
inc
inc
add
mov
out
and
dec
jmp
mov
mov
imul
and
(bad)
inc
cmp
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
xchg
jmp
fcmovne
cmp
and
call
adc
(bad)
imul
lea
and
sub
mov
mov
mov
dec
dec
fnstsw
mov
fnstsw
(bad)
pop
mov
xchg
mov
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
mov
inc
jnp
jns
jmp
aam
mov
push
push
or
test
mov
aam
and
fnclex
mov
fsub
push
push
dec
and
test
mov
aam
and
fndisi(8087
mov
(bad)
push
push
dec
and
test
mov
aam
and
sti
loope
dec
dec
and
dec
fistp
mov
xlat
mov
mov
or
fnstsw
pop
scas
xlat
and
jns
add
aam
inc
adc
dec
pop
adc
aam
adc
jns
sub
push
adc
dec
ret
mov
ins
loope
push
in
adc
inc
jae
inc
jmp
fst
out
and
dec
jmp
mov
mov
int
mov
jbe
test
inc
out
(bad)
inc
and
dec
jmp
adc
(bad)
fistp
adc
inc
out
ds
(bad)
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
cmp
and
sub
mov
sbb
(bad)
inc
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
test
and
ror
push
xchg
cs
fist
dec
call
mov
fdivr
je
inc
iret
adc
out
imul
fiadd
pop
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
and
inc
add
mov
out
and
dec
jmp
mov
mov
(bad)
xlat
and
cli
arpl
ins
out
inc
and
int3
xlat
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
dec
call
pusha
in
aam
and
push
mov
and
(bad)
fdivr
sbb
test
sub
mov
and
mov
bound
inc
inc
pop
sub
mov
and
je
cmp
inc
pop
dec
repnz
and
popa
jb
faddp
ficom
fcmovbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
mov
push
pop
out
and
dec
jmp
mov
push
cmp
outs
adc
cmp
sub
rol
imul
sbb
(bad)
inc
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
dec
inc
and
shl
push
xchg
cs
fist
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
jbe
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
into
adc
inc
and
shl
push
xchg
cs
fist
dec
call
mov
fdivr
je
inc
iret
or
fmulp
fcom
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
sub
inc
add
pop
out
and
dec
jmp
mov
xor
fld
aam
and
sub
mov
inc
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
mov
cs
and
ror
mov
dec
call
mov
fdivr
je
inc
iret
cmp
fmulp
fcom
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
das
les
call
pop
out
and
dec
jmp
mov
xchg
cmp
outs
adc
sub
je
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
push
(bad)
repz
push
cs
and
rcr
mov
dec
call
mov
fdivr
je
inc
iret
sub
fidiv
fcom
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
xor
inc
dec
jns
popa
in
aam
and
push
mov
and
(bad)
fidivr
sbb
test
arpl
mov
and
mov
bound
inc
inc
pop
sub
mov
and
je
cmp
inc
pop
dec
repnz
and
popa
jb
faddp
ficom
fcmovbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
adc
push
and
test
mov
aam
and
mov
mov
movzx
or
sahf
inc
and
jns
add
adc
dec
pop
adc
aam
inc
adc
mov
scas
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
pop
shr
mov
dec
call
mov
fdivr
je
inc
iret
inc
out
pusha
and
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
and
mov
out
and
dec
jmp
mov
mov
fld
aam
and
sub
sbb
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
sahf
aam
jno
push
push
xlat
test
mov
aam
and
mov
mov
sbb
inc
and
jns
add
adc
dec
pop
adc
aam
inc
adc
mov
scas
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
pop
shl
mov
dec
call
mov
fdivr
je
inc
iret
jge
pusha
and
rcl
and
cli
arpl
ins
out
inc
and
(bad)
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
daa
in
inc
add
cs
fist
out
and
dec
jmp
mov
jb
fld
aam
and
sub
xor
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
push
cmc
repz
push
cs
and
sar
mov
dec
call
mov
fdivr
pop
jns
add
adc
dec
pop
adc
aam
inc
adc
mov
scas
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
es
arpl
aam
and
push
mov
and
push
fdivr
pop
(bad)
test
adc
ror
inc
ins
(bad)
inc
and
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
scas
xlat
and
jns
add
aam
inc
adc
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
cmp
shl
and
dec
and
popf
mov
inc
jae
jns
inc
out
aam
fwait
adc
mov
lea
and
aam
mov
xor
jns
and
aam
inc
adc
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
sub
fidivr
movups
inc
test
arpl
es
sub
inc
jns
arpl
aam
and
push
mov
and
aam
mov
xor
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fidivr
movups
inc
test
aam
xor
pop
jge
adc
mov
out
and
dec
jmp
mov
mov
rcl
and
cli
arpl
ins
out
inc
and
leave
xlat
and
cli
arpl
ins
pop
mov
rcl
and
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
jo
and
xchg
xchg
lods
jecxz
lods
push
cs
inc
arpl
jbe
sub
out
aam
fwait
adc
mov
lea
and
push
fdivr
pop
(bad)
test
adc
scas
pop
iret
jne
inc
and
push
inc
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
jns
mov
aam
and
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
popa
rcl
xchg
xchg
pop
jecxz
sub
cs
inc
arpl
jbe
sub
xchg
cs
fist
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
test
and
ror
push
xchg
cs
fist
dec
call
mov
fistp
test
jmp
cmp
inc
push
pop
sub
mov
and
arpl
inc
inc
pop
dec
repnz
and
push
arpl
dec
repnz
and
adc
cmp
inc
pop
mov
(bad)
push
mov
inc
mov
xchg
test
mov
aam
fwait
adc
mov
lea
and
aam
mov
xor
jns
and
aam
inc
adc
dec
pop
adc
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
adc
push
cmp
inc
dec
pop
mov
push
mov
sub
popa
lods
rol
cs
fist
dec
call
mov
fistp
call
(bad)
fwait
loop
out
or
stc
outs
inc
sub
scas
into
and
(bad)
inc
and
imul
inc
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
jns
mov
aam
and
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
popa
rcl
xchg
xchg
pop
jecxz
sub
cs
inc
arpl
jbe
sub
xchg
cs
fist
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
adc
mov
mov
(bad)
push
xchg
adc
(bad)
dec
test
and
ror
push
xchg
cs
fist
dec
call
mov
fistp
call
(bad)
fwait
loop
ds
cmp
dec
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
jns
mov
aam
and
xchg
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
push
pop
dec
repnz
and
popa
rcl
xchg
xchg
pop
jecxz
sub
cs
inc
arpl
jbe
sub
xchg
cs
fist
dec
call
mov
fistp
call
pushf
fwait
loop
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
rcl
and
cli
arpl
ins
out
inc
and
leave
xlat
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
(bad)
call
daa
call
fist
out
and
dec
jmp
mov
mov
dec
mov
and
(bad)
test
add
sub
setne
fs
xchg
jmp
imul
les
jo
mov
adc
mov
fidivr
out
and
jo
mov
adc
inc
sub
cs
out
and
out
jmp
fist
scas
xlat
and
jns
add
aam
inc
adc
dec
pop
adc
aam
adc
sub
xchg
sar
test
jmp
cmp
rcl
pop
mov
(bad)
push
xchg
adc
(bad)
dec
inc
aam
jno
push
mov
test
mov
aam
and
mov
mov
sub
mov
and
popa
jb
fisub
ficom
leave
xlat
and
cli
arpl
ins
pop
mov
scas
xlat
and
jns
add
aam
mov
xor
fidivr
movups
inc
test
arpl
es
sub
pop
shl
xchg
cs
fist
dec
call
mov
fistp
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
cmp
inc
mov
dec
repnz
and
mov
xchg
xchg
xchg
jp
es
adc
mov
aam
and
push
mov
and
aam
mov
xor
sar
test
jmp
sub
sar
test
jmp
cmp
inc
(bad)
pop
dec
repnz
and
popa
adc
xchg
xchg
jp
es
adc
ja
add
mov
out
and
dec
jmp
mov
mov
jns
mov
aam
and
xlat
jnp
xor
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fdivr
wrmsr
repz
test
dec
lds
adc
push
fistp
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
push
xor
sub
bound
(bad)
xlat
mov
and
push
in
and
sub
jb
adc
mov
in
aam
and
xlat
jnp
xor
sar
test
jmp
cmp
inc
pop
dec
repnz
and
push
arpl
dec
repnz
and
adc
inc
cmp
inc
pop
mov
(bad)
push
xchg
adc
outs
dec
cs
jno
push
fwait
add
jns
mov
aam
and
mov
mov
sub
mov
and
popa
add
(bad)
and
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
inc
repz
mov
out
and
dec
jmp
mov
mov
(bad)
and
cli
arpl
ins
out
inc
and
fcom
and
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
inc
repz
mov
out
and
dec
jmp
mov
mov
fcom
and
cli
arpl
ins
out
inc
and
(bad)
xlat
and
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
inc
repz
mov
out
and
dec
jmp
mov
mov
(bad)
xlat
and
cli
arpl
ins
out
inc
and
rcl
lods
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
inc
repz
mov
out
and
dec
jmp
mov
mov
rcl
lods
cli
arpl
ins
out
inc
and
iret
xlat
and
cli
arpl
ins
pop
mov
fcmovbe
and
cli
arpl
ins
pop
mov
fcmovnbe
and
cli
arpl
ins
jo
and
xchg
xchg
jp
es
adc
inc
repz
mov
out
and
dec
jmp
mov
stc
(bad)
fnstsw
pop
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
inc
adc
dec
pop
adc
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
adc
inc
jae
mov
inc
dec
jns
arpl
aam
and
push
mov
and
push
fdivr
pop
rol
cli
ins
(bad)
inc
and
repnz
and
popa
and
lods
xlat
and
jns
add
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
call
dec
mov
and
cli
fistp
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
mov
adc
aam
jno
push
fwait
add
jns
mov
aam
and
mov
mov
push
out
mov
retf
dec
cmp
or
stos
fwait
scas
cmp
rol
imul
sbb
mov
cmp
inc
pop
sub
mov
and
inc
inc
pop
dec
repnz
and
push
arpl
dec
repnz
and
adc
inc
cmp
inc
pop
mov
fsub
push
xchg
dec
and
adc
cli
fistp
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
mov
adc
aam
jno
push
sub
test
mov
aam
and
mov
mov
push
out
mov
ret
jmp
imul
fwait
scas
cmp
rol
imul
sbb
(bad)
inc
sub
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fnstcw
psubsb
inc
test
dec
rcr
dec
push
and
push
fistp
pop
adc
push
ins
cli
mov
and
aam
cmps
adc
shl
(bad)
shl
sbb
fsubrp
jns
sub
mov
mov
(bad)
shl
sbb
jns
sub
inc
mov
lods
std
mov
and
sub
pop
rcr
xchg
cs
fist
dec
call
mov
fistp
call
(bad)
fwait
loop
ud2
inc
stc
into
inc
cmp
ror
and
jns
or
aam
and
(bad)
jnp
xor
jns
and
aam
inc
adc
jnp
xor
jns
and
aam
adc
scas
dec
pop
adc
aam
mov
xor
xlat
dec
and
push
in
call
dec
mov
and
cli
fistp
xor
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
mov
adc
aam
jno
push
or
jns
mov
aam
and
mov
mov
push
out
mov
shr
sti
sub
inc
imul
fwait
scas
cmp
rol
imul
sbb
(bad)
inc
sub
sar
test
jmp
sub
sar
test
jmp
sub
sar
test
jmp
sub
fnstcw
psubsb
inc
test
dec
(bad)
ficom
dec
fistp
mov
cli
mov
and
scas
mov
sahf
rcr
sub
adc
dec
jmp
fist
fld
test
rol
ficom
dec
inc
fist
fiadd
test
rol
es
outs
jmp
fist
mov
adc
aam
jno
push
arpl
mov
and
mov
mov
push
out
mov
aam
sti
cmp
ret
(bad)
dec
ja
mov
mov
mov
jl
dec
jmp
mov
cmp
outs
mov
mov
jmp
inc
cmps
dec
mov
out
and
dec
jmp
mov
call
dec
fwait
loop
dec
fistp
mov
fistp
lea
and
add
mov
dec
(bad)
dec
adc
fistp
mov
pop
and
adc
xchg
dec
or
xor
or
arpl
jmp
mov
mov
jnp
lods
mov
mov
xor
jg
xor
jnp
test
jnp
xor
mov
mov
mov
pop
test
and
adc
add
test
pop
add
les
push
fs
pop
movs
jnp
stos
mov
cmc
mov
test
jg
test
jnp
test
jnp
xor
fstp
xor
loopne
call
and
mov
mov
jnp
xor
and
xor
and
test
add
mov
and
xor
and
test
add
cmp
in
mov
ret
mov
mov
and
mov
ds
idiv
jnp
mov
mov
or
xor
out
test
sbb
pop
mov
jnp
xor
jnp
xor
retf
mov
xor
jnp
pop
mov
jg
xor
jnp
pushf
mov
mov
mov
mov
out
movs
cmp
and
ret
jnp
push
mov
pop
mov
out
mov
jnp
xor
jbe
xor
cmc
mov
add
jnp
stos
mov
scas
mov
xor
jnp
test
jnp
xor
or
xor
jnp
pop
mov
jnp
xor
les
cdq
push
out
pop
or
nop
cmp
and
or
mov
test
jnp
xor
nop
mov
xor
sub
pushf
xor
sub
cmp
and
fwait
ret
jnp
push
mov
mov
mov
push
mov
jnp
xor
ds
idiv
jnp
mov
jne
mov
mov
sbb
lods
mov
jnp
xor
out
xor
adc
stos
pushf
push
add
cdq
push
out
pop
xor
js
jnp
test
jnp
xor
sar
fbstp
jecxz
mov
pushf
sub
test
jnp
pop
mov
out
xor
out
mov
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
mov
test
cmps
and
out
mov
mov
cwde
mov
inc
sub
or
inc
out
lods
cmp
sub
(bad)
in
call
rcr
mov
mov
movs
jno
mov
cmps
sti
cmps
cmp
mov
scas
xchg
nop
cld
mov
idiv
jno
mov
mov
(bad)
sti
inc
inc
sbb
loope
clc
jle
repnz
loope
inc
out
cmps
cmp
inc
lods
es
js
or
sbb
sub
or
fs
mov
pop
jnp
and
and
adc
je
and
cmp
and
fs
jecxz
in
mov
repnz
arpl
xchg
out
in
mov
fisub
cmp
addr16
sbb
repz
and
ret
outs
ficom
stc
std
fst
stc
mul
or
sbb
daa
push
cs
mov
outs
jb
lods
pop
gs
mov
fisubr
test
xchg
and
arpl
or
mov
push
fistp
sbb
and
and
ficom
xor
rol
or
push
pop
mov
ds
pop
imul
std
sbb
ret
repz
push
not
(bad)
xchg
xlat
xchg
hlt
pop
imul
out
neg
rcl
loop
dec
in
jno
jns
rol
out
imul
xchg
outs
in
inc
repz
dec
mul
out
dec
in
jno
jne
shl
jnp
rol
pop
xor
inc
out
daa
in
shl
in
shl
cmp
shl
out
imul
out
div
out
repz
maskmovq
not
rcl
in
sub
xor
out
gs
mov
jne
aad
jnp
rol
cli
xor
in
shl
ja
ror
in
dec
mul
out
neg
out
addr16
shr
push
fs
out
div
out
fs
dec
mul
jle
mul
out
test
inc
repz
dec
mul
out
div
ror
xor
in
dec
test
inc
arpl
icebp
push
dec
adc
jecxz
arpl
fs
push
dec
inc
cli
or
xchg
repz
dec
xchg
jnp
mov
pop
call
in
das
cmp
jnp
mov
mov
mov
xor
cmps
mov
test
mov
je
xor
mov
or
cmp
in
sbb
js
xor
bound
and
xor
call
sub
test
clc
shl
aas
jmp
or
pop
fdivr
aad
call
xor
adc
mov
inc
inc
sbb
pushf
cmp
ins
scas
rcl
push
rol
movs
imul
jo
hlt
ins
adc
jecxz
popf
sbb
and
cmp
jge
lahf
cmp
shl
mov
aas
scas
cdq
sbb
or
cmovge
adc
imul
adc
(bad)
in
xchg
scas
jge
push
out
repnz
add
pcmpgtd
retf
sar
shl
imul
lock
sbb
jp
cmps
sbb
jne
sub
loopne
arpl
push
push
cmp
rol
and
push
pop
sub
adc
stc
jp
xchg
shr
add
xor
mov
add
jle
addr16
cmp
mov
sub
ds
mov
cmp
sbb
rcr
fidivr
inc
jmp
gs
jnp
ja
fidivr
inc
mov
or
dec
adc
movs
adc
mov
cmp
adc
(bad)
adc
cmc
outs
cmp
mov
movs
mov
jmp
ds
adc
mov
outs
cli
adc
mov
mov
adc
cmp
adc
call
push
adc
movs
adc
adc
call
outs
cmp
adc
(bad)
adc
mov
xchg
inc
adc
cmc
outs
cmp
push
adc
movs
adc
mov
mov
test
adc
adc
mov
(bad)
adc
aam
cmp
adc
adc
outs
cmp
adc
fist
cmps
outs
cmp
mov
int3
mov
mov
mov
mov
(bad)
sbb
or
ret
popa
rcl
shl
jnp
jae
jnp
xor
sti
mov
xor
(bad)
mov
aaa
into
and
call
sub
jnp
jae
jnp
xor
sti
mov
xor
pop
iret
sub
jo
ret
jnp
jae
jnp
xor
jmp
xor
into
mov
adc
or
mov
cmp
sub
adc
js
es
ss
fnstsw
cwde
pushf
jg
out
das
push
cmp
and
test
shl
dec
neg
out
or
push
adc
mov
ret
out
jg
sbb
scas
ret
call
jecxz
sub
loop
add
int3
aas
es
loopne
cmp
jl
cmp
and
push
shl
loopne
cmp
cmp
inc
jmp
and
test
rcr
outs
jo
add
push
cmp
aam
in
xchg
jp
leave
(bad)
xor
movs
push
adc
repz
out
call
ins
mov
bswap
xchg
sbb
fs
adc
sub
pop
push
div
int
(bad)
repz
xor
add
mov
into
ds
jge
aas
popa
adc
aaa
cmp
sub
push
mov
inc
or
fnsave
cmps
sub
pop
cmp
test
sti
jmp
sub
imul
leave
fdiv
in
pop
adc
sbb
cli
cmp
jecxz
fist
sbb
ret
into
bound
adc
aad
call
cli
lahf
mov
push
cmp
cmps
or
xchg
push
dec
jb
mov
cdq
cmps
mov
fisub
dec
inc
js
out
movs
xlat
dec
fldenv
rcl
inc
js
iret
inc
js
rol
sub
aam
js
dec
inc
js
push
inc
mov
push
inc
xor
test
hlt
mov
xor
(bad)
das
fidivr
fisub
aam
js
or
inc
js
aam
int
or
js
dec
inc
js
sti
fnstcw
xor
aam
out
aam
js
dec
inc
js
(bad)
xchg
jmp
aam
mov
mov
inc
js
aam
jp
and
js
popa
inc
js
ret
scas
xchg
fstp
sahf
and
popa
inc
js
out
cmps
(bad)
dec
fadd
sub
or
scas
sub
aam
cmp
aam
js
aam
js
dec
inc
js
aam
repz
fnstsw
inc
js
popa
inc
js
imul
cld
das
dec
mov
xchg
fcomi
lods
ins
or
in
mov
in
aam
xor
inc
js
dec
shl
imul
cld
das
mov
xchg
stc
cdq
sub
aam
js
inc
js
dec
inc
js
dec
mov
in
aam
js
aam
js
xor
loopne
sub
aam
in
inc
js
dec
inc
js
dec
jns
sub
cmovne
rol
sub
xor
inc
clc
mov
cmc
out
repnz
js
aam
dec
mov
in
out
arpl
sbb
pop
cmps
mov
add
js
xor
js
dec
loopne
sub
aam
in
aam
js
inc
js
dec
inc
js
dec
mov
in
aam
js
xor
js
dec
loopne
sub
aam
in
inc
js
dec
inc
js
dec
jns
sub
aam
js
inc
js
dec
inc
js
dec
sbb
sub
aam
js
aam
js
pop
inc
js
dec
jecxz
sub
aam
in
xor
js
dec
loopne
sub
aam
in
dec
inc
js
aam
shl
dec
inc
js
aam
div
aam
js
fadd
ins
loopne
or
aam
movs
mov
fucom
mov
inc
js
xlat
(bad)
out
aam
aas
mov
inc
js
push
inc
js
dec
inc
js
jmp
test
call
repnz
aam
movs
mov
fucom
mov
inc
js
xlat
mov
rcl
lea
mov
inc
js
push
inc
js
dec
inc
js
pusha
xor
dec
fucom
sub
dec
loopne
sub
aam
in
aam
js
xor
ror
test
out
inc
ins
fsubr
shl
in
aam
js
sbb
js
sbb
call
sbb
inc
js
dec
inc
js
dec
mov
in
aam
js
inc
js
dec
inc
js
dec
push
repnz
aam
js
aam
js
bound
add
movs
mov
fucom
mov
inc
js
dec
inc
js
xchg
inc
js
aam
sti
mov
and
js
push
inc
fsubr
shl
in
or
js
dec
inc
js
aam
mov
aam
js
aam
js
popa
inc
js
aam
loope
or
jl
mov
js
aam
dec
mov
inc
js
aas
inc
js
rol
sub
sbb
js
add
fisub
aam
js
retf
inc
js
mov
js
jns
out
sahf
aam
cld
mov
fnstsw
inc
js
into
inc
js
out
inc
mov
rcl
lea
mov
inc
js
pushf
inc
js
dec
inc
js
aam
in
aam
js
ins
inc
js
xor
movs
sub
dec
frndint
and
shl
mov
fucom
mov
inc
js
dec
test
or
mov
movs
mov
out
aam
movs
mov
inc
js
aam
js
aam
js
aam
mov
mov
test
mov
inc
js
xchg
inc
js
aam
(bad)
aam
js
aam
js
lahf
inc
mov
rcl
movs
aas
mov
inc
js
fs
js
dec
inc
js
push
cdq
js
rcr
das
aam
aad
aam
js
lock
js
pop
inc
fsubr
xor
sub
shr
rcl
popa
push
sbb
or
ins
das
mov
int
popa
mov
xchg
ret
(bad)
arpl
adc
sbb
push
repz
fld
out
mov
in
sub
gs
aas
in
call
inc
jnp
pop
movs
jnp
stos
mov
jnp
ins
mov
jnp
xor
mov
xor
es
push
sbb
out
pop
and
mov
inc
cmp
push
stos
aas
out
cli
cmp
pop
bound
mov
shl
fwait
mov
mov
jnp
stos
mov
in
mov
stos
pop
rcr
jl
or
jae
sti
mov
xor
in
sub
jne
cmp
cmps
test
(bad)
in
stos
or
jnp
xor
bound
xor
jnp
and
cmps
sub
sbb
out
cli
lea
fwait
mov
inc
cmp
push
stos
aas
out
cli
cmp
pop
gs
aas
(bad)
and
mov
shl
sti
mov
xor
jnp
aam
jnp
xor
in
mov
stos
popf
pusha
fadd
jl
push
stos
ret
jnp
jae
sti
mov
xor
mov
inc
in
(bad)
or
cmp
popf
mov
xor
bound
jnp
cmp
cmp
dec
fsub
sbb
xlat
mov
xor
ret
push
cmp
call
test
jg
iret
inc
sbb
jmp
mov
cmp
add
cmp
and
call
in
ja
(bad)
sbb
cli
pop
sbb
not
cmc
lods
push
(bad)
mul
lods
xchg
inc
or
mov
lods
adc
and
pop
ds
jg
mov
inc
jne
call
and
adc
cld
(bad)
std
jae
shl
mov
call
cmp
jne
loop
lock
add
sbb
in
dec
or
out
out
ret
cmp
gs
loope
ja
out
pop
cmp
in
sbb
sbb
cmp
repnz
add
sti
xor
ret
and
cmp
out
fsub
sbb
mov
and
stos
cdq
sbb
js
out
jp
sti
in
int
stos
and
mov
jmp
cmpps
shr
or
dec
cdq
jp
ja
mov
lahf
xchg
sub
xchg
sub
jmp
aad
cmp
sub
xchg
push
repnz
aam
enter
fadd
addr16
(bad)
dec
(bad)
je
dec
sbb
sbb
inc
sbb
mov
cwde
dec
mov
xchg
repnz
mov
sub
push
repnz
dec
ror
sbb
inc
sbb
mov
movs
xor
fsubr
sub
push
repnz
dec
test
dec
sub
dec
mov
sbb
inc
jmp
mov
lods
test
jbe
sbb
add
sbb
inc
sbb
mov
dec
dec
mov
test
fistp
dec
mov
sbb
or
sub
push
repnz
adc
dec
mov
sbb
mov
mov
ror
vzeroall
ss
cmp
xor
pop
fldcw
xor
mov
pusha
add
ret
out
push
cmp
and
popf
fldcw
in
(bad)
or
inc
out
stos
cmp
add
(bad)
in
pop
lods
leave
cmp
mov
mov
xor
sub
jg
inc
adc
jecxz
ins
jmp
and
test
push
(bad)
std
std
mov
pop
rcr
mov
and
iret
out
inc
sbb
mov
out
jp
sbb
sar
push
ds
jmp
aaa
and
pushf
push
sub
mov
repz
push
aas
sub
cmp
and
and
sar
shl
loop
out
cmp
daa
mov
push
xlat
cmp
arpl
cmp
sub
loopne
js
mov
jbe
mov
cmc
(bad)
repnz
add
lds
sar
fs
cmp
lock
repz
xchg
(bad)
add
fnstsw
aaa
(bad)
jg
in
test
aas
xor
in
shl
aaa
jo
add
lahf
ss
clc
std
adc
clc
xchg
ds
rol
retf
(bad)
and
fnstcw
fstp
add
in
mov
ret
nop
dec
pop
or
or
sbb
push
adc
(bad)
dec
jnp
out
jecxz
push
cs
gs
retf
jae
xor
sub
jb
xor
add
push
xchg
xchg
sbb
les
adc
cmp
xchg
sbb
pop
mov
sbb
xor
or
pop
or
pop
xchg
or
or
dec
xchg
fild
xor
cmp
or
push
mov
xor
and
xchg
xchg
sbb
add
or
pop
and
sbb
add
or
mov
loop
out
xor
sbb
sbb
cmp
cmp
xor
test
mov
sbb
sbb
or
(bad)
fist
loope
add
add
pop
int3
sbb
addr16
xor
or
les
in
push
test
xchg
sbb
(bad)
sbb
pop
loop
xchg
xchg
sbb
add
or
add
dec
sbb
out
mov
add
or
pop
sbb
pop
xchg
and
or
pop
inc
js
pop
aaa
xchg
sbb
cmp
or
lds
cmps
sbb
add
or
sbb
pop
sbb
pop
scas
movs
or
or
call
mov
sbb
or
icebp
adc
pop
pop
or
pop
xchg
add
mov
mov
inc
add
push
mov
mov
inc
cmps
mov
dec
imul
(bad)
dec
xchg
aaa
(bad)
(bad)
pop
pop
sub
in
test
arpl
xor
sbb
clc
xchg
add
or
pop
xor
pop
pop
xchg
sbb
sub
or
mov
push
pop
sbb
pop
xchg
sbb
cld
pop
inc
mov
add
cmp
out
sbb
fs
push
les
push
lock
fisttp
movs
jge
pop
cmp
les
push
lock
mov
movs
jge
sbb
loope
xor
mov
dec
xor
xchg
xchg
mov
aaa
cmp
push
mov
xchg
loope
imul
sbb
arpl
mov
fldcw
es
inc
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
pop
and
test
push
test
out
js
out
clc
cmp
and
test
and
and
and
out
add
mov
icebp
mov
inc
cmp
or
inc
aaa
in
test
in
mov
out
push
add
rcr
out
test
mov
sub
call
cdq
cmp
mov
or
ret
fs
and
push
xor
and
sbb
xor
rcr
mov
je
stos
fincstp
and
adc
arpl
jbe
ds
sbb
and
sbb
test
jo
daa
cmp
ret
inc
ficom
mov
shl
jbe
push
sahf
push
(bad)
fisub
mov
jge
and
jnp
jo
add
jne
int
lock
psubusb
mov
js
mov
ficom
jmp
sar
lock
int3
sbb
sub
jg
mov
sub
jo
js
(bad)
popa
or
cmc
ins
cmp
je
icebp
xchg
inc
in
cmps
arpl
jmp
cmc
push
jno
in
fs
test
jbe
std
mov
push
lods
mov
cmp
and
ja
xor
rol
fcom
mov
jnp
sbb
ficom
inc
jmp
or
jg
xor
inc
into
and
xchg
stc
jmp
cli
and
push
mov
ss
data16
sub
test
stos
(bad)
cmp
stos
sar
test
push
jae
jge
shl
push
push
jb
mov
sub
mov
and
pop
retf
mov
(bad)
pop
cmps
sub
int
clc
sub
pop
mov
daa
call
mov
int
xor
das
iret
icebp
cs
and
sbb
daa
sar
sub
adc
js
sub
ret
loop
add
in
call
loope
ret
and
cmps
icebp
add
std
iret
lock
inc
sbb
nop
jmp
push
sub
and
loope
adc
jne
mov
and
loop
dec
mov
out
(bad)
cmp
in
cmp
ins
push
repnz
sti
in
out
repnz
ins
lahf
or
and
in
sub
and
cmp
inc
jmp
fnstsw
aaa
and
push
sub
and
add
sbb
ror
push
mov
rol
sti
push
in
xor
test
in
(bad)
stc
out
lock
cmp
sbb
arpl
push
inc
in
mov
out
ret
cmp
push
mov
outs
retf
xchg
ds
pop
cmp
xor
sbb
inc
retf
out
div
aam
aas
jns
pop
js
int
lods
or
adc
lock
js
ds
stos
hlt
and
jns
je
outs
pop
or
push
in
ins
(bad)
stc
inc
pop
stc
jnp
jbe
out
jo
je
ja
jae
xor
aas
and
sub
ret
lea
cmp
(bad)
loop
jl
mov
lods
cmp
nop
test
xor
fs
xchg
pusha
adc
mov
push
or
mov
punpcklbw
enter
xor
rcr
enter
sbb
movs
loope
shl
fdiv
imul
jecxz
aaa
outs
(bad)
sbb
mov
xor
cmps
sub
add
clc
jnp
lea
ret
jnp
jb
fstp
xor
out
enter
mov
mov
add
mov
push
mov
in
xor
jnp
scas
mov
jnp
xor
or
lods
push
jecxz
sahf
shr
cmp
mov
test
aad
out
jecxz
popf
mov
(bad)
ja
pop
ret
out
sbb
gs
and
jo
cmp
push
js
jb
scas
retf
iret
and
aas
rol
out
jle
out
lods
ds
xor
and
and
daa
aas
jp
pop
adc
add
pusha
jg
xor
shl
sbb
std
shr
aam
scas
aam
jmp
xor
test
mov
mov
push
aam
cmp
adc
sbb
ret
pop
loop
loope
fnstcw
js
xchg
leave
xor
js
out
push
ds
gs
mov
and
aas
test
test
sbb
mov
shr
sub
mov
mov
add
ror
in
enter
mov
retf
sbb
movs
ret
rcl
push
mov
xchg
or
sbb
fcom
stc
ret
in
lea
mov
inc
xchg
push
fsub
stos
ret
in
push
push
sbb
xchg
(bad)
jae
div
add
inc
call
fdivr
ret
fprem1
sbb
jecxz
icebp
add
mov
aaa
sub
mov
cmp
cmp
dec
popf
icebp
sbb
mov
dec
sub
mov
outs
or
sub
ds
scas
outs
into
xchg
or
sahf
and
inc
cmp
scas
outs
sahf
push
or
(bad)
and
pop
icebp
ret
(bad)
pushf
push
ret
retf
push
push
addr16
movs
mov
loopne
xor
jmp
pop
cmp
xchg
iret
mov
sar
sub
mov
punpckhbw
ror
dec
imul
clc
out
in
cmp
test
test
std
cmps
int3
retf
mov
pop
(bad)
iret
hlt
inc
inc
sbb
sub
shr
and
mov
js
adc
jge
cmp
sub
jg
jns
cmp
and
jecxz
jg
out
fdiv
repz
pop
lock
call
shl
out
mov
test
stos
add
dec
push
arpl
lock
sbb
jp
jnp
push
cmp
test
and
push
push
mov
and
push
sbb
push
inc
push
imul
adc
in
or
in
js
das
in
and
mov
out
jle
add
dec
add
js
mov
mov
jle
aaa
(bad)
jp
aaa
and
bound
jg
sbb
ds
imul
sub
ja
clc
das
rol
fist
sti
cmc
pop
dec
(bad)
sbb
cmps
ret
stos
adc
pop
clc
xor
jmp
ficom
int
xchg
jns
seto
pop
and
loopne
push
push
(bad)
mov
mov
cmp
push
fst
movs
sbb
cmp
or
push
push
sbb
outs
xchg
lea
push
jo
jg
cmps
add
mov
sbb
and
adc
and
lea
inc
(bad)
cmp
cwde
inc
push
popf
and
mov
inc
iret
pop
xchg
out
sub
cmps
(bad)
icebp
xchg
ja
sub
int
xchg
das
pop
fs
and
mov
mov
mov
and
xor
pop
daa
sar
jp
inc
movs
(bad)
sub
out
xchg
cmp
and
xor
js
xor
jnp
add
inc
mov
hlt
mov
jnp
xor
into
mov
in
mov
movs
mov
mov
out
sar
iret
popa
inc
out
push
cmp
jge
rcr
and
ds
add
pop
lock
loopne
dec
inc
and
shl
mov
out
or
sbb
sub
call
mov
das
adc
int3
jg
or
rol
int3
pop
es
or
or
lock
cmp
and
enter
cmp
in
scas
xor
cmp
int3
mov
adc
jl
out
mov
cmp
and
pop
out
jo
cmp
and
int
inc
pop
cmp
and
mov
and
ret
add
push
call
cld
jnp
fwait
and
lock
(bad)
sti
sub
test
dec
add
adc
adc
push
mov
cld
mov
loopne
outs
arpl
fst
mov
shl
sti
retf
in
and
fsub
mov
imul
push
dec
ret
pop
fcom
mov
push
xchg
or
fs
stos
call
ja
std
movs
popa
sub
inc
in
outs
(bad)
push
loopne
and
sbb
jg
xor
mov
(bad)
sti
lods
cmp
icebp
not
push
jmp
xor
fcom
cmovb
xor
ds
in
pop
ficom
fadd
push
jnp
xor
sub
pop
dec
movs
(bad)
(bad)
stos
in
ja
jae
outs
push
pop
push
adc
xchg
push
lea
adc
mov
ror
loopne
mov
lock
push
adc
add
mov
dec
pop
adc
enter
ja
sbb
(bad)
aam
jb
int
sub
jnp
pusha
cmps
jnp
clc
mov
jnp
xor
jecxz
aaa
mov
ror
add
or
test
jnp
xor
sar
xor
jnp
test
jnp
xor
out
xor
jnp
jmp
mov
xor
jg
sahf
cmp
and
mov
out
xor
jnp
sub
mov
xor
jg
sahf
cmp
and
or
mov
test
jnp
xor
sar
xor
jnp
test
jnp
xor
jg
movs
ds
and
mov
xor
jnp
mov
mov
in
xor
out
mov
mov
repnz
xchg
jnp
stos
movs
jnp
stos
mov
jnp
xor
jnp
xor
in
xor
jnp
mov
mov
repnz
xchg
or
test
jnp
xor
or
xor
loopne
(bad)
cmps
out
vmovaps
pop
mov
test
mov
rol
dec
sub
call
popa
hlt
sbb
mov
imul
xor
and
sbb
xor
call
dec
mov
xchg
ja
cwde
ret
xor
push
inc
cwde
fucom
fs
es
adc
fs
lds
sub
push
mov
jge
daa
(bad)
jp
cmp
aam
jmp
add
jmp
mov
(bad)
jg
cmp
and
xchg
inc
sub
mov
retf
mov
ja
call
ins
mov
sbb
xchg
ret
or
push
mov
(bad)
imul
jge
cli
cli
mov
xor
pop
loopne
dec
out
jae
(bad)
in
cmc
rep
and
in
mov
push
pop
dec
mov
or
out
sbb
add
bound
iret
pop
in
or
adc
pop
xchg
ds
dec
cmp
jo
into
sbb
push
or
mov
mov
cmp
hlt
sbb
mov
clc
imul
call
xchg
push
lods
adc
aas
xor
inc
pop
xor
ficomp
xor
ficomp
test
sbb
ficomp
xchg
mov
xor
or
jb
mov
scas
and
xor
push
rol
cwde
call
in
push
adc
hlt
mov
lahf
mov
ins
adc
or
test
loop
ror
pop
mov
test
repz
popf
inc
retf
jecxz
out
retf
mov
mov
jg
out
dec
pop
cmp
and
popa
mov
jg
cmp
in
cwde
or
fdivr
es
popf
inc
inc
sbb
pop
jmp
das
and
and
sar
fs
je
jae
add
jmp
adc
push
inc
jecxz
(bad)
aaa
ins
test
out
pushf
cmp
adc
push
test
shr
int
jnp
xor
loopne
fdivr
ror
add
inc
xlat
psubusb
and
sub
and
test
xor
mov
xor
test
adc
leave
stos
add
mov
cmp
jo
out
inc
aas
jp
cmp
and
jb
inc
mov
lock
jmp
mov
and
sbb
loop
sub
fs
test
loopne
jb
lahf
adc
fs
cli
dec
cmp
mov
neg
in
not
jg
sub
int
stos
ret
cli
ficom
pop
lock
sbb
pop
inc
xchg
push
mov
jbe
pop
cmp
jnp
xor
add
pusha
and
retf
jmp
jle
jmp
cmp
adc
cmp
imul
ffreep
and
mov
pop
mov
or
out
add
retf
retf
pop
(bad)
mov
mov
or
xchg
daa
pop
(bad)
or
mov
mov
call
inc
ret
mov
scas
(bad)
cmp
or
push
jbe
fist
fadd
sbb
or
xor
mov
shl
mov
mov
mov
jnp
xor
jnp
xchg
mov
in
xor
jnp
mov
mov
push
mov
mov
push
pop
and
nop
movs
aad
call
xor
push
stos
mov
int
test
out
xchg
jge
and
sbb
and
cmp
sub
test
and
jp
inc
cmp
in
or
test
mov
cmp
gs
test
and
cmp
jge
outs
fnstcw
jg
pop
dec
pop
fs
retf
jmp
leave
adc
out
xlat
ret
out
jle
aaa
mov
sbb
cmp
fidivr
in
xor
mov
add
retf
xor
and
xchg
loop
into
aaa
jnp
add
pop
cmp
mov
in
push
xor
loop
lock
mov
and
jp
lock
dec
sti
dec
cli
std
in
or
fincstp
fs
push
cmp
jbe
push
cmp
pop
repnz
jp
jns
adc
aas
push
data16
and
and
jp
ret
int
push
test
sbb
jo
xor
scas
ret
loopne
push
and
xchg
jmp
sbb
jmp
push
cmp
out
arpl
fcom
push
std
or
adc
xor
stos
push
adc
dec
cmp
sub
xor
shr
fadd
mov
mov
push
jl
push
jl
retf
mov
xchg
lahf
into
test
cwde
call
push
jle
enter
lock
cmps
sbb
ret
mov
push
aas
pop
cmps
movs
aas
int
clc
sub
pop
sub
call
mov
xchg
xchg
ds
cmp
mov
push
ds
xor
adc
and
cmp
and
mov
into
mov
or
and
xor
outs
mov
push
ds
cmp
rsm
inc
out
test
dec
or
in
call
sub
mov
out
sub
jne
inc
jnp
xor
pop
stos
jnp
xchg
mov
or
cmp
pop
mov
je
loop
ret
out
das
xor
sahf
xlat
jae
xor
pop
fisttp
hlt
cmp
fcomi
mov
in
push
in
mov
or
cwde
mov
and
shl
dec
sbb
out
mov
repnz
movs
add
jae
jns
cmp
and
cmp
sbb
cmp
lea
push
push
lock
and
js
mov
adc
shr
and
stos
add
(bad)
mov
lock
repnz
cmps
push
jmp
jmp
adc
test
prefetch
dec
cmp
jns
movs
loopne
fwait
push
or
aam
jmp
cmp
not
and
xchg
mov
scas
jge
cmp
sub
sbb
cmp
dec
(bad)
bound
sbb
(bad)
lods
ret
in
push
push
dec
or
lods
shl
push
cld
sbb
push
call
dec
std
jg
cmp
jne
sahf
and
loopne
jns
mov
or
push
xchg
mov
mov
mov
cmp
mov
cmp
mov
pushf
xchg
mov
mov
pop
fisubr
xchg
push
jp
xor
ins
fdivr
lock
push
pop
or
ins
adc
in
loopne
add
ret
leave
rcl
in
movs
push
jnp
mov
mov
hlt
popa
icebp
xchg
and
pop
and
jp
pop
hlt
and
sahf
enter
in
aaa
push
repnz
mov
in
or
and
jnp
mul
jnp
xor
jg
xor
jnp
mov
mov
lock
mov
jnp
inc
mov
jnp
xor
(bad)
mov
jmp
mov
xor
mov
fld
mov
mov
xor
call
adc
push
daa
mov
cmp
sub
mov
or
js
out
push
jbe
loop
test
enter
xor
cmps
not
xor
mov
push
mov
fld1
and
arpl
not
xor
in
int
pop
test
xlat
xchg
fucomi
and
test
xor
test
out
ret
ins
das
mov
and
test
sub
daa
aaa
jp
xchg
sub
xor
mov
mov
jbe
pmulhw
jecxz
fs
jb
jecxz
pusha
and
xor
jo
cdq
add
adc
repnz
ds
mov
out
xchg
repnz
rcl
mov
rol
(bad)
jo
add
movs
xchg
push
leave
not
call
arpl
clc
fnsave
std
addr16
daa
test
adc
push
aam
jmp
xchg
fld
lock
or
or
push
icebp
push
popf
addr16
cmp
xchg
inc
sbb
js
test
dec
ret
sbb
push
ret
sbb
(bad)
sbb
test
fisub
shl
sub
dec
(bad)
into
mov
jno
hlt
into
mov
cmp
adc
push
loop
mov
dec
lds
mov
jl
movs
and
push
test
fist
or
and
push
pusha
out
sub
call
mov
das
ret
inc
scas
adc
and
cmp
and
mov
jnp
jmp
mov
dec
mov
xor
jnp
xor
inc
mov
pop
or
push
mov
out
movs
jl
in
scas
pop
sbb
add
jnp
in
mov
int
xor
gs
mov
mov
daa
sar
sub
leave
jnp
jo
cmp
cmc
jecxz
sub
pop
cmp
push
es
call
push
mov
iret
loop
inc
sbb
pop
jmp
mov
in
jl
aad
lock
cmp
jge
sbb
cmp
in
(bad)
jp
mov
or
fucom
mov
cli
ss
lea
sbb
cmp
mov
inc
ds
mov
arpl
lds
push
jge
mov
mul
stc
cmc
stc
sub
jg
stos
jb
(bad)
out
add
ins
lods
and
pop
xchg
stos
jl
mov
push
mov
aaa
jns
ds
sbb
jb
ret
mov
push
popa
lock
int
adc
aaa
xlat
int
and
lock
sub
cmp
in
std
jns
and
arpl
popa
in
js
div
jo
sbb
adc
sub
push
and
jp
addr16
inc
mov
(bad)
(bad)
mov
(bad)
clc
lods
cmp
loope
in
adc
in
ins
(bad)
cld
xchg
or
mov
sbb
cmp
stc
push
mov
fnsave
or
push
jns
ret
cvttps2pi
in
imul
or
nop
(bad)
adc
mov
mov
mov
test
movs
jp
aaa
mov
xchg
dec
mov
push
movs
test
mov
adc
inc
dec
gs
sbb
fmul
(bad)
pusha
or
fistp
mov
stc
mov
jnp
xor
sub
inc
in
or
cmp
movs
mov
xor
sub
(bad)
push
adc
ret
out
cli
std
xchg
jnp
out
xor
and
loope
(bad)
cmp
loop
loopne
mov
mov
(bad)
inc
inc
sbb
mov
and
aaa
add
cmp
and
imul
test
cmp
int
sub
test
dec
pop
lock
js
cmp
and
in
js
xchg
xor
xor
and
nop
and
jnp
in
outs
cmp
and
retf
(bad)
jecxz
xor
and
in
mov
sub
retf
mov
enter
js
mov
outs
leave
sub
ins
repnz
rcl
js
ins
jmp
leave
nop
add
jb
lods
in
clc
mov
xchg
in
adc
lock
aas
retf
rcr
xor
in
sbb
(bad)
scas
push
or
sbb
push
ret
jmp
fincstp
arpl
mov
jg
cmp
xacquire
jae
cmp
adc
jge
sbb
dec
rcr
adc
jno
pop
fdiv
xchg
or
and
imul
push
xchg
inc
fsubr
mov
imul
fs
jb
nop
or
ss
xchg
pop
and
mul
lds
dec
push
fld
mov
imul
fs
test
fadd
fisub
sub
hlt
cli
fimul
ins
sub
cmp
out
pusha
repz
ret
jecxz
push
adc
hlt
ret
jnp
push
mov
sti
mov
xor
out
scas
cmp
and
ins
xor
add
nop
ds
cmp
mov
xor
test
mov
(bad)
fnsave
inc
cld
iret
leave
xchg
call
cmp
push
stos
adc
lock
jnp
push
mov
in
in
adc
clc
add
ret
xchg
cwde
inc
push
ret
into
leave
push
inc
add
or
shl
rol
into
push
dec
sbb
int3
daa
repz
ret
sbb
push
shl
push
mov
out
push
cmp
mov
xor
sbb
inc
mov
out
xor
je
mov
or
mov
out
push
cmp
jne
mov
and
xor
or
add
jmp
stos
mov
jmp
mov
addr16
std
mov
jmp
mov
ins
xchg
jg
push
pop
jnp
test
movs
mov
push
jmp
(bad)
xlat
mov
stos
mov
xor
cmc
sub
mov
inc
test
add
popf
popf
das
inc
pop
(bad)
or
cmp
and
(bad)
in
(bad)
test
(bad)
mov
cmps
int
bound
neg
push
mov
or
pop
mov
jmp
xchg
js
lahf
in
add
(bad)
sub
je
out
idiv
jne
cmp
not
stos
fucom
and
and
and
push
xchg
or
and
idiv
js
cmp
sub
aam
repnz
jmp
cmp
fdivr
daa
test
adc
inc
ja
js
cmp
and
leave
aaa
jp
ds
or
in
sbb
test
in
dec
push
out
dec
sbb
clc
ins
jnp
cwde
mul
call
ret
in
jg
test
jnp
sbb
(bad)
icebp
push
fdivr
data16
sub
cmp
pop
ds
sub
mov
push
cmp
fdiv
arpl
aam
jmp
rcr
jo
add
(bad)
jo
repz
jnp
loopne
hlt
or
jp
icebp
cmc
shl
jg
pop
sub
fbld
pop
mov
inc
inc
dec
ret
aad
test
aad
sbb
aad
stc
xchg
cmp
test
dec
pop
fstp
lds
sub
pop
inc
cmp
test
dec
pop
(bad)
retf
(bad)
pop
and
mov
cmp
test
dec
pop
fcmovnb
jb
jmp
cmp
pop
inc
cmp
test
dec
pop
fcmovne
fmul
sti
pop
(bad)
lds
enter
cmp
test
dec
pop
fld
dec
lds
arpl
fbld
cmp
test
dec
pop
fld
gs
sbb
jns
mov
inc
(bad)
ret
aad
inc
jge
pop
inc
inc
dec
ret
aad
mov
aad
xchg
(bad)
(bad)
fcom
pop
inc
mov
ret
rol
jno
aad
inc
pop
(bad)
fiadd
ret
aad
aam
aad
sbb
pop
inc
rcl
fadd
jle
lea
clc
inc
loope
fdiv
dec
std
fsubr
movs
pop
inc
jge
ret
rol
in
aad
fcomp
aad
inc
jge
mov
xchg
(bad)
ret
aad
inc
jno
ret
aad
cmp
aad
clc
dec
fisttp
xchg
repz
ret
aad
rcr
dec
ret
pop
inc
outs
repz
(bad)
jo
dec
fabs
pop
test
mov
daa
pop
ins
mov
add
ret
aad
or
aad
fisttp
jne
loope
cmp
jno
inc
dec
dec
ret
aad
js
aad
inc
scas
stos
retf
adc
inc
(bad)
ret
aad
jo
aad
js
mov
pop
mov
lds
pop
repnz
arpl
inc
rcr
mov
ins
pop
add
arpl
mov
jnp
test
or
hlt
cmp
aaa
mov
dec
jp
rol
fiadd
aaa
pop
add
lock
loopne
push
push
xchg
ret
dec
xor
(bad)
fild
ret
mov
out
in
and
and
jae
ja
pop
pop
gs
add
sub
cwde
mov
loop
xor
mov
out
sub
test
out
fwait
cmp
in
mov
jo
in
jnp
cmc
(bad)
rcr
retf
xchg
xor
adc
shl
sbb
ret
mov
(bad)
(bad)
int3
out
xor
stos
es
mov
jb
jo
movs
mov
loope
cmp
data16
cmp
cmc
pop
or
pop
or
jl
in
adc
lock
mov
mov
repnz
hlt
mov
and
push
cmp
lahf
sub
add
out
(bad)
fidiv
aaa
jge
sbb
pushf
xor
push
loopne
jnp
jmp
add
and
jae
(bad)
fst
xor
(bad)
and
js
xor
jmp
aaa
bound
cmp
in
cmp
js
jmp
push
xor
rcl
arpl
dec
dec
arpl
adc
test
mov
cmps
xlat
pop
ror
test
lock
sti
inc
add
jbe
xlat
pop
jo
xchg
jo
int
jo
int
retf
add
xor
jmp
ss
iret
jle
fxch
push
jno
int3
mov
int3
ss
int3
xor
arpl
jp
mov
jb
pop
xor
pusha
cmps
ss
iret
cmps
jno
int
jno
int3
ds
int3
ss
or
xor
sbb
xor
jo
iret
xchg
jo
iret
pop
jb
int
pop
loope
xor
jb
cmps
ss
iret
push
jno
int
sub
int3
ss
gs
scas
out
int
stos
jge
push
aam
pop
loope
out
gs
stos
push
std
push
stos
cmp
push
scas
push
lods
and
retf
push
xor
xchg
push
mov
add
out
sub
push
stos
adc
push
and
(bad)
pop
in
gs
jb
push
inc
out
popa
pop
scas
out
gs
stos
out
std
push
stos
jb
push
xor
shl
sahf
popa
xlat
pop
jo
sbb
jb
lds
out
test
push
stos
ds
push
stos
jb
push
fiadd
and
shl
ss
adc
stos
cmp
cld
push
ss
gs
sahf
jns
shr
or
(bad)
jmp
stos
out
std
push
stos
ds
push
stos
jb
push
fisub
retf
adc
fisub
ss
loope
stos
out
std
push
stos
adc
cli
push
sbb
jp
fidivr
ins
in
out
loope
stos
out
std
push
stos
cmps
std
push
sub
ds
std
pop
push
cmp
out
jae
popa
pop
scas
out
gs
stos
out
std
push
stos
aad
push
push
clc
push
or
jp
fidivr
ins
in
out
and
stos
xchg
std
push
push
stc
push
jno
jp
fidivr
ins
in
out
and
stos
out
std
push
stos
out
std
push
stos
int
push
hlt
idiv
cs
out
std
push
stos
fscale
push
fwait
jne
clc
aam
pop
loope
out
gs
stos
out
std
push
stos
cs
push
stos
cmps
(bad)
push
sub
fistp
dec
das
mov
pop
xchg
xor
fmul
idiv
gs
pop
pusha
mov
mov
xchg
cli
addr16
xor
pusha
in
fwait
dec
aaa
sar
data16
xor
data16
retf
ror
jnp
sub
jnp
aaa
mov
dec
mov
mov
in
int3
pop
loopne
mov
in
and
mov
test
inc
jge
fst
cld
aad
jae
ja
adc
push
or
inc
sti
mov
cld
in
push
push
loope
jnp
inc
ins
cmp
and
mov
loopne
pusha
repnz
push
jmp
or
pop
stos
dec
js
test
pop
and
push
adc
inc
jnp
dec
lods
cmp
and
mov
not
cmp
and
add
ret
in
and
cmp
push
lods
in
xlat
movs
cdq
aas
push
scas
cli
loopne
icebp
sbb
cdq
sar
or
mov
shl
jo
popf
mov
cli
repnz
call
mov
pop
imul
shr
push
loop
cwde
mov
retf
mov
ret
retf
in
daa
test
cmp
stos
pop
cmp
lock
jmp
out
pop
cmp
std
scas
dec
sar
jo
aad
int
jp
sub
and
loop
push
xor
rol
loope
push
adc
sub
not
cs
and
push
jmp
in
not
pop
int
pusha
popa
jge
int
inc
retf
add
mul
mov
ja
loopne
pop
shl
jns
stos
es
scas
loope
mov
stos
xor
adc
mov
aaa
es
ds
add
mov
(bad)
push
popf
and
les
sub
scas
push
add
scas
es
cmps
scas
add
fidivr
add
ja
mov
daa
and
xchg
xor
fnsave
xor
mov
mov
es
pop
scas
es
cmps
scas
cmps
add
stos
and
jo
rcl
add
scas
add
scas
push
add
xor
test
push
es
add
fiadd
xor
mov
mov
xor
mov
xchg
mov
cs
mov
jbe
pushf
mov
inc
adc
fwait
mov
xchg
mov
mov
das
call
sbb
add
xchg
and
pop
out
inc
cmps
cmp
xor
inc
arpl
inc
sbb
daa
sar
sub
and
js
pop
push
js
xor
sub
pop
jmp
push
cdq
ins
cmp
and
ret
fs
sbb
jmp
mov
lods
(bad)
out
dec
adc
arpl
not
cmps
ds
add
cmp
aad
cmp
ins
test
mov
sbb
loope
or
xlat
fst
aaa
stc
cmc
or
out
ins
cmp
(bad)
clc
and
fs
adc
sbb
aas
jbe
leave
es
in
addr16
in
xchg
dec
int
cmp
gs
hlt
fincstp
aam
in
(bad)
loop
jg
(bad)
repnz
dec
mov
adc
outs
ss
xor
fs
daa
test
sbb
in
psrld
or
fs
and
arpl
rcl
pop
cmp
or
jbe
pop
in
in
fst
cli
jmp
das
(bad)
out
cmp
xchg
dec
shl
jo
in
and
loop
lock
adc
(bad)
sbb
lds
fisub
ret
pusha
ficom
int3
jns
push
test
test
test
js
shl
into
inc
imul
cmp
cmps
xor
mov
mov
jne
ret
jmp
and
(bad)
outs
cmc
or
cdq
dec
or
jo
cmc
adc
add
fisttp
jo
cmc
adc
add
imul
add
adc
mov
add
imul
add
fimul
mov
jae
mov
pop
mov
pushf
jae
jbe
jae
es
jnp
add
imul
add
popf
es
mov
hlt
les
add
leave
mov
out
cmc
adc
pushf
jmp
adc
add
fisttp
jo
cmc
adc
add
jge
add
sbb
aaa
mov
xor
sub
pushf
jae
adc
mov
(bad)
fild
add
imul
add
pushf
jbe
adc
mov
add
les
add
add
imul
xor
xor
adc
jae
leave
repnz
xchg
mov
cmc
adc
add
imul
lahf
pop
add
push
lea
cdq
jae
retf
repnz
iret
push
lock
add
imul
lods
xor
add
ret
adc
aam
imul
lods
adc
add
imul
lods
add
add
fxch
pop
pop
fldl2e
pop
sbb
sbb
imul
pop
outs
fstp
xchg
or
lea
xor
mov
jo
jmp
in
adc
lods
jno
dec
add
jmp
xchg
sahf
or
test
pop
mov
push
inc
outs
not
add
imul
daa
or
pusha
shr
out
imul
xor
xchg
lahf
imul
call
xchg
out
cmc
cmc
cwde
jae
es
fmul
adc
add
imul
add
(bad)
clc
getsec
adc
xor
imul
les
dec
or
cmc
inc
dec
je
mov
jae
adc
add
lods
adc
add
imul
mov
ins
adc
add
imul
repnz
rdtsc
adc
pop
adc
inc
imul
push
jg
je
cli
(bad)
es
retf
or
rol
adc
add
not
mov
jae
adc
add
fst
add
imul
pop
cmp
sahf
test
lods
push
stos
push
imul
add
jecxz
test
mov
arpl
xchg
xor
lods
sub
imul
add
imul
out
imul
pop
dec
cmc
adc
add
imul
cwde
jae
adc
add
imul
pushf
jae
mov
out
imul
pushf
jae
adc
add
leave
mov
out
cmc
adc
pushf
jmp
adc
add
jge
add
jne
iret
push
lock
add
imul
hlt
pop
imul
cwde
jae
adc
add
imul
add
imul
add
adc
add
imul
add
adc
add
imul
add
adc
add
imul
add
adc
add
imul
pushf
and
add
repz
pop
call
imul
add
jne
call
or
xor
jbe
arpl
cmps
sbb
cld
imul
mov
cmc
adc
pushf
jmp
in
out
imul
mov
clc
adc
add
imul
(bad)
mov
pop
div
adc
add
imul
pushf
jae
adc
pop
adc
mov
adc
add
imul
add
ins
adc
add
imul
push
data16
adc
add
mov
adc
add
jmp
mov
cmp
add
dec
call
cmp
mov
mov
mov
fwait
add
pushf
jmp
mov
out
imul
mov
imul
test
ins
adc
add
imul
popa
pop
int
mov
or
nop
jae
adc
add
sbb
or
xor
jb
mov
mov
inc
adc
pushf
jmp
adc
add
jmp
pop
add
mov
push
sbb
sbb
imul
pop
out
dec
adc
pushf
jmp
xchg
add
imul
test
mov
push
adc
pushf
jmp
xchg
add
imul
lock
mov
push
out
mov
push
fst
mov
cmc
mov
xor
imul
add
sar
jg
mov
jnp
loope
jae
jbe
and
jae
pop
jg
addr16
mov
xor
jnp
mov
out
xor
add
xchg
adc
add
imul
scas
gs
or
je
mov
xchg
add
lahf
push
bound
xchg
add
imul
adc
popa
fsubr
lods
jno
adc
add
lods
adc
cld
jmp
adc
add
sar
jg
mov
jnp
loope
jae
jbe
and
jae
pop
jg
addr16
jne
aaa
adc
xor
adc
add
ja
add
or
retf
cmp
fsubr
lods
jno
rol
jp
pop
sub
loopne
in
ficomp
jnp
xchg
mov
jae
mov
pop
pop
test
fwait
jae
rcr
or
jl
xor
pop
in
adc
lods
jno
pusha
add
push
and
mov
xchg
or
mov
adc
add
imul
jae
pop
cmp
mov
adc
add
imul
leave
nop
or
add
imul
ja
pop
pusha
pusha
jl
jae
pop
jb
mov
xor
aad
jmp
stos
pop
out
shl
fcom
sbb
and
scas
mov
shl
mov
jno
mov
adc
mov
inc
pop
adc
xchg
mov
or
or
mov
fldcw
or
jnp
cmp
movs
jnp
retf
mov
xor
jnp
scas
mov
or
xor
loope
ror
in
xchg
outs
lock
jecxz
test
dec
int
repz
cmp
adc
ret
jecxz
std
or
out
xor
and
add
cmp
out
inc
rol
aad
test
lock
rcr
int
jae
or
jmp
fucom
and
and
sbb
dec
and
test
adc
xor
cli
and
shr
xor
sbb
out
pushf
cmp
or
and
jne
in
pusha
and
inc
sub
test
sbb
inc
cli
add
lods
jbe
js
cmp
and
jecxz
push
add
cmp
adc
inc
ds
mov
cs
jp
jns
pop
jo
aaa
inc
scas
sbb
cmp
xor
ret
or
push
push
ficomp
cdq
repz
cmp
add
mov
(bad)
in
js
div
pop
adc
and
nop
aas
hlt
std
or
sbb
(bad)
lods
push
jbe
ficomp
call
push
std
xchg
cmps
pop
cmp
loop
ret
sbb
push
mov
inc
jo
fnsave
loop
fdiv
sbb
ja
push
and
pop
push
pop
in
enter
call
jle
push
nop
leave
js
push
loop
not
sub
adc
enter
aaa
rcl
(bad)
out
test
js
push
loop
push
loop
mul
mov
js
push
loop
cmp
out
shr
out
sar
sbb
jle
repnz
js
push
loop
jbe
loop
sbb
push
jns
cmc
and
test
xchg
push
loop
lds
sbb
mov
js
push
loop
not
cmc
push
loop
test
jbe
loop
sbb
push
jns
adc
sar
or
jbe
inc
enter
jp
js
lods
out
xchg
push
loop
test
js
xor
js
push
loop
ins
pusha
push
repnz
in
int3
jle
not
cs
loop
gs
loop
push
enter
xor
sbb
loopne
aad
push
int
lds
push
test
data16
js
push
loop
not
js
push
loop
cli
inc
je
push
(bad)
loope
mov
jl
dec
jle
cmp
push
loop
not
loopne
push
loop
mul
sbb
test
js
push
loop
imul
lds
in
repnz
js
push
loop
mov
xchg
div
or
sbb
js
push
loop
xchg
push
loop
div
js
div
js
push
loop
sbb
push
loop
cmp
jle
imul
jle
not
js
push
loop
cmc
push
inc
sbb
xor
js
push
loop
push
loop
ins
loopne
inc
adc
xchg
in
cwde
jle
call
iret
es
push
loop
not
push
loop
dec
loopne
out
enter
int3
jle
push
jl
test
js
push
loop
and
jl
outs
sbb
xchg
sar
push
loop
push
push
loop
mul
jge
not
not
mov
add
not
js
push
loop
div
js
push
loop
(bad)
push
loop
not
js
lods
out
dec
push
loop
fwait
push
mov
mov
mov
dec
bnd
xchg
xchg
push
js
push
loop
push
push
loop
xchg
push
loop
test
js
xor
js
push
loop
ins
push
loop
pusha
push
xor
vmovq
adc
or
into
push
in
int3
jle
mul
cld
js
push
loop
add
inc
cli
jne
cmp
jle
mov
push
enter
out
dec
sub
push
xor
js
push
loop
xor
dec
ins
sub
inc
rcl
js
lods
out
not
xchg
push
loop
cmc
push
inc
sbb
xor
js
push
loop
ss
loop
jo
loop
retf
loop
and
fdiv
xor
jl
cld
jl
not
ins
push
loop
(bad)
sbb
imul
repnz
out
je
js
push
loop
or
not
js
push
loop
ins
push
loop
push
loop
test
js
push
loop
not
test
repnz
add
push
push
loop
push
loop
test
js
int3
out
xor
imul
movs
push
pop
in
mov
cld
cmp
call
add
in
jmp
iret
imul
in
retf
jle
xchg
jle
xchg
or
pop
aaa
rcl
bound
js
int3
out
lds
sbb
arpl
out
jl
js
push
loop
dec
push
and
dec
mov
cld
cmp
call
add
(bad)
pop
iret
outs
cmp
jg
and
iret
pop
xor
xor
inc
push
ins
push
xor
cmp
lds
popa
movs
pusha
out
ret
or
adc
cmps
hlt
cmp
xor
test
cs
rcl
mov
cmp
or
push
sbb
and
cmp
leave
xor
out
cmps
leave
imul
mov
mov
sbb
ins
test
test
(bad)
cmps
out
xchg
stc
pop
jecxz
mov
mov
es
jmp
mov
add
adc
cmp
and
out
jg
stc
int3
arpl
movs
punpcklbw
push
and
push
inc
and
mov
and
sbb
in
out
jae
cs
iret
inc
out
lock
or
sub
xor
bnd
repnz
imul
mov
bnd
inc
pop
in
and
stos
sbb
mov
mov
loopne
int
call
ins
mov
xor
sub
jle
ret
daa
fcom
enter
cli
cmp
jecxz
mov
add
lock
mov
jo
in
add
repz
in
not
xor
scas
rcr
and
jp
cmp
mov
add
lock
jmp
push
and
cmc
xor
out
add
push
rcl
pop
arpl
xor
in
push
mov
fwait
mov
dec
arpl
ror
(bad)
dec
ret
pushf
ror
ror
ror
ror
ror
lock
fwait
sahf
enter
pushf
and
lds
dec
push
fwait
cwde
stos
xor
aaa
mov
mov
jnp
test
(bad)
pop
add
pop
add
enter
lahf
data16
dec
mov
cwde
adc
icebp
mov
fwait
mov
dec
xor
fdiv
jge
push
pop
fs
rol
test
add
leave
add
jns
add
fistp
retf
mov
in
pop
bound
sub
(bad)
repz
add
leave
sbb
aad
jbe
jno
jle
retf
call
cdq
add
pop
add
jbe
add
add
pop
dec
pop
cmp
(bad)
mov
add
cwde
add
fwait
in
pop
bound
sub
(bad)
mov
add
cdq
add
cmp
ret
cdq
in
popa
xor
or
mov
popa
fnsave
movs
cmp
pop
xchg
cld
xchg
pusha
mov
ret
or
push
adc
hlt
ror
cmp
ds
sahf
cmp
adc
jl
aas
and
ds
inc
dec
hlt
jge
call
popa
jmp
cmp
fdivr
aaa
sbb
xor
test
xor
xor
xchg
repnz
(bad)
ja
popf
add
xor
xor
or
fucom
je
and
test
stos
xor
daa
cmp
mov
(bad)
stc
dec
cmp
and
jo
and
fs
dec
xor
test
dec
push
cli
and
ds
cmp
add
call
and
sar
or
daa
(bad)
aaa
inc
aas
sbb
cmp
aaa
jge
cmp
and
lock
and
fs
stos
cmp
and
mov
jb
adc
ins
xchg
ds
adc
lock
test
jb
lock
out
xor
mov
jp
mov
and
cs
add
ret
icebp
ficom
sbb
ret
cmp
push
leave
xor
popa
ret
cmp
js
bound
jp
jno
push
pop
fs
stos
mov
lock
jecxz
and
rol
pop
mov
icebp
jle
xor
fadd
fmul
(bad)
pop
inc
mov
out
push
fmul
rol
leave
jbe
inc
imul
mul
pop
loop
fdiv
push
jle
adc
call
retf
inc
lods
pop
stos
int
jne
lds
int
(bad)
jmp
movs
sub
dec
daa
test
jnp
int3
mov
jnp
xor
test
hlt
mov
sar
xor
jnp
xor
nop
mov
pushf
jp
int
cmp
and
bnd
inc
dec
sbb
icebp
mov
sbb
jmp
out
stos
cmp
lea
cmp
and
inc
je
or
cmp
movs
mov
in
inc
test
cmps
jno
cdq
pusha
mov
mov
mul
xchg
mov
ja
dec
jmp
adc
mov
cmps
and
mov
sub
dec
push
inc
inc
sbb
call
aaa
jnp
ds
adc
pop
adc
call
jg
push
lds
and
jmp
out
ins
cmp
ins
dec
jo
and
in
pop
in
out
int
fmul
push
and
stos
scas
pop
add
add
or
sti
out
jl
jecxz
dec
scas
shl
lods
stc
cli
or
sti
into
mov
xor
test
jmp
out
sbb
pop
cld
xchg
push
pop
out
(bad)
std
inc
loop
addr16
mov
jb
or
mov
cmp
shl
jo
fnsave
push
cmp
inc
in
repnz
mov
jle
sbb
rcl
jle
int3
stc
data16
sbb
and
xor
ret
cmp
push
or
mov
or
xor
jne
pop
clc
pop
mov
jmp
clc
(bad)
mov
push
push
inc
aam
push
mov
sub
jg
in
loopne
sub
jge
test
pop
daa
mov
mov
push
lods
sub
cmp
in
or
jne
loop
jne
loop
jb
dec
mov
pushf
loop
jne
push
mov
in
loop
jne
loop
jne
jle
xor
loop
jne
loop
jbe
push
mov
jmp
mov
sub
mov
sub
mov
pushf
loop
jne
loop
je
jle
leave
mov
mov
sub
add
push
scas
loop
or
sub
jns
lods
lods
test
call
mov
sbb
out
mov
enter
sub
jmp
sub
mov
call
loop
jne
cld
mov
pushf
loop
jne
loop
jne
shr
dec
std
(bad)
push
pop
xor
jne
and
lea
loop
jne
shl
jne
loop
jne
loop
ja
out
movs
(bad)
sub
stos
repz
sub
jmp
das
sub
dec
test
dec
xchg
mov
add
mov
sub
mov
sub
add
mov
loop
or
sub
mov
push
mov
cld
loop
jne
loop
jne
loop
jne
mov
mov
sub
aad
sub
add
inc
adc
outs
cs
fst
push
pop
xor
jae
jle
mov
loop
jne
loop
jne
out
lds
loop
jne
loop
jne
and
jne
loop
jne
cmp
movs
pushf
loop
jne
loop
jne
xchg
retf
jbe
jne
out
add
mov
sbb
mov
sub
stos
jne
xchg
mov
in
loop
jne
and
or
sub
retf
shr
dec
fst
push
pop
xor
jne
sub
sub
sub
jl
test
sub
dec
jne
push
add
mov
mov
sub
mov
sub
dec
jne
push
lds
bound
sub
jge
out
loopne
sub
dec
mov
add
mov
sub
sub
test
loopne
sub
dec
mov
add
mov
sub
(bad)
jne
xor
sub
mov
mov
mov
shl
add
jae
loop
lods
das
loop
jne
loop
jne
loope
(bad)
xchg
jne
shl
pushf
loop
jne
jp
jne
loop
jne
loop
jne
js
jo
mov
jge
loop
jne
loope
jb
std
mov
pop
loop
jne
loop
jne
loop
jo
cmps
xor
push
(bad)
adc
xor
pop
pop
xor
(bad)
mov
out
loop
jne
loop
jne
loop
jne
out
mov
loop
jne
inc
(bad)
jno
xor
jno
loop
jne
bound
sub
push
sub
test
adc
dec
mov
pushf
loop
jne
loop
jne
loop
jne
out
inc
repz
jne
bound
ja
imul
mov
xor
dec
and
fbld
and
dec
das
loop
jne
loop
jne
out
test
loop
jne
loop
jne
out
mov
loop
jne
popa
add
push
sub
jle
cmp
loop
jne
loop
jne
cmp
mov
loop
jne
outs
mov
lods
loop
in
sub
or
retf
in
loop
jne
and
lods
sub
mov
sub
mov
out
cmps
jne
mov
ja
ja
out
and
loope
loop
jne
loop
jne
loop
jne
cmp
mov
loop
jne
loop
jne
cs
lods
loop
and
sub
mov
in
loop
jne
loop
jne
loop
jne
cmp
mov
loop
jne
loop
jne
loop
jno
jb
mov
sub
sbb
ja
inc
mov
test
mov
pushf
loop
jne
loop
jne
mov
cs
in
inc
popf
adc
es
mov
add
jae
loop
lods
sub
mov
sub
mov
out
mov
sub
jne
sub
mov
sub
mov
xchg
loop
jne
cmp
mov
loop
jne
scas
mov
lods
loop
xor
sub
mov
loopne
jo
and
out
mov
loop
jne
cmp
mov
loop
jne
loop
jne
cs
lods
loop
and
sub
mov
in
loop
jne
loop
jne
cmp
mov
loop
jne
loop
jne
loop
jno
jb
mov
sub
xor
cmp
shl
loop
jne
loop
jne
mov
mov
cmp
jo
scas
in
mov
sbb
mov
repz
jne
loop
jne
dec
mov
jmp
aas
jne
dec
sub
jle
and
loop
jb
data16
xor
xor
inc
sub
push
sub
jp
add
imul
xchg
cmp
jno
xchg
add
imul
shl
in
iret
fwait
pop
adc
ret
mov
mov
mov
pop
test
and
adc
add
test
cmps
add
in
jp
mov
jnp
xor
cmc
mov
test
or
stos
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
mov
mov
ds
fdiv
aaa
add
lock
dec
test
mov
cmps
(bad)
add
mov
sub
dec
mov
jp
cmp
gs
call
jmp
xchg
int
inc
cld
ja
lahf
outs
jg
xor
clc
loope
xor
and
out
js
test
inc
test
lock
add
js
aaa
test
sbb
or
and
jp
lock
and
jne
in
movs
cdq
retf
call
icebp
pop
in
test
stos
in
out
aam
xor
cdq
(bad)
xlat
push
arpl
pop
icebp
xor
stc
fstp
adc
cmps
jno
js
cmp
and
mov
retf
in
test
test
out
dec
cmp
sbb
pushf
fs
(bad)
adc
ds
stc
cmc
in
mov
add
push
sbb
pop
cld
test
stos
ret
sbb
push
ret
aas
xchg
push
ds
test
fs
idiv
sbb
mov
mov
shr
fist
jb
sbb
xor
mov
or
fisubr
movs
stos
or
(bad)
out
ins
cmp
jne
jg
lock
sub
push
out
out
mov
sub
pop
imul
(bad)
push
ret
xor
push
inc
jnp
jge
and
nop
test
or
loop
add
(bad)
xlat
loope
dec
jp
pop
lock
pop
rcr
mov
sbb
pop
rcr
pop
rcr
adc
sbb
inc
cmp
ror
rcr
dec
(bad)
sbb
pop
mov
(bad)
pop
js
rcl
rcr
mov
sbb
adc
push
cmps
sbb
dec
pop
inc
cmp
ror
rcr
dec
(bad)
sbb
pop
mov
(bad)
pop
js
rcl
rcr
rcr
adc
sbb
pop
dec
lods
rcl
rcr
mov
sbb
pop
rcr
mov
sbb
mov
cs
fs
dec
adc
rcr
mov
sbb
mov
or
adc
rcr
mov
sbb
mov
sbb
fwait
or
dec
mov
cmp
pop
mov
(bad)
pop
js
shl
rcr
adc
sbb
pop
dec
lods
rcl
rcr
leave
rcr
or
jae
or
sar
pop
out
rcl
dec
sbb
pop
rcr
mov
sbb
pop
rcr
mov
sbb
mov
sbb
mov
dec
mov
cmp
xor
mov
(bad)
pop
js
rcl
rcr
jbe
sbb
adc
sbb
pop
dec
lods
rcl
rcr
leave
rcr
or
jae
or
sar
pop
out
rcl
dec
sbb
xchg
rcr
mov
sbb
pop
push
adc
rcr
mov
sbb
fwait
or
dec
mov
cmp
pop
mov
(bad)
pop
js
rcl
rcr
cmps
rcr
pop
push
sbb
ror
dec
nop
xlat
enter
jae
or
sti
pop
out
rcl
dec
sbb
pop
rcr
mov
sbb
pop
ror
dec
rcr
mov
sbb
cmps
dec
sub
data16
pop
mov
shl
rcr
add
(bad)
cmps
dec
clc
inc
arpl
add
dec
cmps
inc
lods
inc
popa
mov
dec
rcl
jg
sbb
ret
loope
inc
and
and
mov
jnp
add
jnp
xor
retf
mov
and
in
das
or
jnp
xor
js
xor
jnp
test
add
mov
xor
in
xor
jmp
xor
push
or
xor
jecxz
cs
fnstcw
lods
sub
and
mov
jg
ss
jnp
mov
dec
mov
hlt
pop
jnp
repnz
mov
mov
mov
jns
xor
jnp
mul
jg
xor
jnp
mov
mov
mov
mov
out
xor
jnp
lods
mov
inc
mov
dec
mov
inc
mov
xor
jnp
sub
ret
mov
xor
jnp
leave
mov
and
(bad)
xchg
arpl
arpl
aaa
mov
sar
fs
imul
inc
mov
mov
xchg
mov
and
fdivr
or
std
mov
mov
mov
mov
jno
pop
loopne
mov
jnp
xchg
jnp
xor
int3
mov
inc
movs
(bad)
rsm
inc
out
scas
cmp
jne
sbb
jns
in
das
stos
cmp
call
call
loope
pop
loopne
outs
arpl
and
(bad)
loopne
mov
cmp
cmps
repz
sbb
push
dec
(bad)
out
stos
enter
rcl
test
jl
cli
adc
aas
(bad)
push
cmp
sub
cmp
ins
pop
push
sbb
pop
in
push
stos
fsubr
mov
shl
or
hlt
imul
out
clc
and
std
shl
jo
std
mov
xor
enter
jmp
pop
rsm
in
mov
mov
mov
pop
shl
xor
js
gs
idiv
sbb
shl
push
repnz
jmp
sar
ss
and
or
push
adc
jp
lock
iret
sbb
mov
iret
or
gs
retf
out
fist
ds
or
repz
add
sbb
test
sub
ja
aaa
sub
or
stos
sub
mov
mov
sbb
test
aaa
or
aaa
cmp
pop
sbb
(bad)
call
fnsave
ret
psubusb
mov
ret
repnz
jge
jg
lods
mov
test
loope
ror
clc
xor
jns
pushf
xchg
in
into
jle
int
ret
xor
ror
gs
pusha
sbb
ds
imul
cmp
rcr
xor
gs
test
sar
or
jg
or
inc
test
loope
mov
ror
xor
xchg
in
bound
stos
test
aam
test
aad
test
sar
or
fild
or
jg
or
jg
psrlw
pop
mov
push
pop
and
movs
dec
mov
cdq
in
bound
stos
test
aam
jo
aad
test
sar
test
sar
or
fistp
push
cmp
inc
loopne
push
in
xor
dec
and
scas
mov
test
aad
test
sar
or
and
mov
jecxz
jle
paddq
in
test
and
or
les
pop
dec
mov
add
pop
hlt
push
xchg
pop
sbb
fdiv
ins
mov
aaa
xchg
out
sbb
in
(bad)
in
or
mov
jge
sbb
retf
imul
or
push
adc
hlt
cmp
aaa
outs
and
jp
aaa
in
test
jecxz
jmp
js
pop
mov
test
sub
jne
call
adc
stc
nop
es
out
push
imul
test
shl
(bad)
fwait
mov
(bad)
test
int
call
mov
adc
sbb
jnp
ret
and
loopne
push
leave
fwait
out
icebp
adc
in
jne
loopne
js
aaa
(bad)
imul
sub
add
and
loopne
aaa
es
sub
outs
out
sar
ins
inc
jbe
and
repz
and
mov
cmp
lea
xor
test
sbb
in
aaa
lods
call
sbb
std
xor
ret
fcom
stos
bound
es
cmp
pop
js
scas
jp
xlat
sbb
inc
ret
mov
cmp
dec
int3
shl
sbb
or
dec
push
mov
and
jns
ins
jb
retf
rol
js
and
arpl
shl
call
retf
aas
cld
sbb
fnsave
push
jmp
sub
out
js
js
cmp
push
ret
sub
push
pop
leave
xchg
(bad)
cmp
repz
ret
mov
test
ja
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
ds
(bad)
sbb
test
in
mov
adc
jmp
adc
jmp
adc
jnp
adc
out
and
adc
adc
aas
sti
les
xor
and
fadd
das
leave
(bad)
adc
adc
jmp
mov
adc
push
test
push
mov
jmp
jl
and
or
mov
mov
jae
call
or
adc
push
scas
out
push
adc
test
adc
push
adc
push
xchg
push
adc
inc
adc
sub
adc
push
call
(bad)
rcl
out
out
adc
adc
jmp
adc
jmp
icebp
push
out
cli
and
das
scas
enter
mov
jmp
adc
dec
adc
pop
(bad)
in
push
adc
adc
adc
push
mov
out
push
mov
mov
cmps
fild
push
mov
jle
leave
out
xchg
pop
hlt
mov
int
xor
pusha
pop
hlt
ret
retf
pop
push
addr16
movs
mov
mov
mov
test
ds
mov
jmp
and
sbb
and
cmp
sub
mov
xor
(bad)
stos
repnz
dec
cmp
cmp
aas
addr16
cmp
and
mov
jae
jg
pop
repnz
fistp
dec
dec
xchg
adc
inc
aam
shl
mov
cmp
or
sub
push
scas
and
add
sub
js
call
test
test
aas
imul
mov
jp
repnz
and
hlt
add
retf
jmp
sub
call
sbb
inc
jne
cmp
xchg
pusha
bound
mov
and
dec
sub
push
mov
and
clc
out
outs
and
dec
pop
and
wbinvd
xor
sub
pop
cld
test
stos
ret
sbb
push
ret
jmp
push
sbb
pushf
in
outs
(bad)
in
enter
sbb
mov
or
jecxz
fist
sbb
push
sub
sub
push
(bad)
arpl
out
call
fldcw
dec
mov
jmp
inc
inc
xchg
lock
ret
into
aam
add
ins
imul
push
mov
mov
xchg
loope
xor
fstp
retf
jg
fst
out
sub
aad
inc
test
xor
out
sub
push
aad
cmp
(bad)
cmp
stos
repnz
lock
xor
les
xor
cmp
xor
adc
xor
sub
cmc
fistp
push
leave
ret
add
xchg
pop
dec
push
mov
cmp
call
aam
outs
fstp
loopne
ret
dec
aam
ins
dec
bound
addr16
outs
inc
jp
outs
dec
sub
leave
bound
jg
mov
call
enter
call
outs
mov
inc
add
pop
leave
ins
push
fadd
aam
jns
adc
enter
enter
push
push
xchg
pop
into
popa
lahf
inc
sub
xchg
loopne
push
add
js
loop
retf
cmc
jg
aaa
outs
dec
pop
cld
loopne
ret
dec
aam
ins
into
xor
leave
es
out
aam
outs
dec
pop
mov
pop
mov
add
mov
mov
stc
pop
in
cwde
aaa
add
push
paddb
loope
ins
xor
cmc
sub
cmc
pop
inc
lea
xor
std
adc
std
and
out
and
xchg
xchg
xor
xchg
(bad)
enter
inc
sub
xchg
xor
lahf
xor
xor
call
in
lahf
xor
retf
in
lahf
inc
in
mov
loope
lahf
fld
js
loopne
call
cld
dec
mov
add
shl
leave
dec
in
sahf
inc
dec
mov
ror
add
jg
mov
pop
xchg
call
addr16
outs
xor
shr
loopne
ret
dec
aam
outs
fldcw
fmul
ret
pop
aam
outs
dec
jb
outs
pop
mov
add
pop
inc
cdq
in
inc
xor
imul
add
dec
aam
outs
jp
xchg
outs
retf
cmc
jg
aaa
imul
add
ins
push
xor
(bad)
lahf
fmul
sub
das
aam
outs
pop
pop
in
aas
inc
push
imul
adc
call
adc
push
dec
aam
sbb
xchg
lock
adc
mov
dec
adc
mov
jns
sub
(bad)
push
aam
inc
rol
imul
xchg
(bad)
pop
rcl
adc
(bad)
(bad)
bound
or
lds
bound
or
mov
inc
xchg
dec
(bad)
(bad)
lds
(bad)
(bad)
bound
fmulp
cld
lds
mov
bound
or
pop
inc
or
lds
(bad)
(bad)
(bad)
(bad)
bound
or
lds
fwait
bound
(bad)
std
pop
inc
(bad)
mov
and
push
rol
(bad)
bound
fimul
bound
or
test
add
inc
adc
(bad)
bound
fisttp
rol
mov
or
test
sbb
rcr
inc
dec
xchg
(bad)
(bad)
bound
fisttp
inc
xchg
xchg
(bad)
(bad)
bound
or
pop
fimul
rcr
loope
jo
shl
sbb
and
mov
shl
add
mov
outs
xchg
ret
in
stc
push
cmp
mov
xchg
and
push
cmp
sub
sar
xor
push
daa
xor
cmc
lds
out
call
icebp
aad
(bad)
sar
cmp
jmp
dec
mov
cdq
bound
xchg
iret
fild
sbb
test
sbb
jb
and
in
adc
lock
mov
imul
aas
add
cmp
and
cmp
ins
xchg
and
inc
lock
mov
lock
shl
cmp
fistp
lock
test
sar
test
xor
repnz
jge
retf
push
xchg
adc
cmps
loopne
jge
cli
out
push
jp
cld
pop
cmp
shl
in
or
sbb
popf
rol
push
test
aam
and
mov
sar
jo
in
dec
sbb
std
mov
mov
push
adc
hlt
or
jge
repz
fistp
xchg
ds
mov
jmp
(bad)
repnz
loop
(bad)
mov
in
mov
sub
lds
xlat
and
sbb
and
fcom
sbb
(bad)
fsubr
test
fsub
dec
pusha
mov
jo
movs
pop
cmp
push
xchg
add
jecxz
or
jecxz
sahf
or
sahf
mov
jecxz
call
aas
sahf
sahf
jo
ds
retf
lock
ret
xchg
or
scas
call
cmp
sub
scas
pop
or
xchg
call
aas
inc
or
aas
sahf
or
sahf
cmps
cmp
cmp
pop
mov
pop
cmp
xchg
out
arpl
mov
push
add
xor
aas
mov
imul
or
mov
push
xor
and
ds
mov
cmps
add
lock
hlt
aam
mov
stc
jnp
jg
push
or
xchg
retf
pop
sub
jne
mov
test
inc
mov
test
call
sbb
cmps
xlat
push
push
(bad)
xchg
in
xor
retf
enter
rcl
ret
out
jl
out
lods
xor
ins
mov
jmp
pop
jns
out
pushf
cmp
push
stos
out
jp
xchg
or
cmp
in
mov
and
in
jl
and
lock
mov
test
fcmovnu
out
cmp
dec
lods
sbb
cmp
push
fimul
add
loope
in
or
fucomp
and
lock
mov
xor
fs
es
mov
loop
jo
jne
pop
cli
cli
aad
push
adc
rcl
in
dec
pop
cmp
sbb
movs
fld
fist
cmp
ret
cmp
push
stc
bound
in
mov
loope
mov
adc
cmps
mov
test
or
(bad)
jne
inc
stc
sub
jg
aas
sar
cmp
add
add
loop
jge
clc
mov
jns
mov
ret
fs
mov
jmp
cmc
add
mov
imul
dec
ret
jo
ret
pop
jecxz
jbe
mov
dec
je
mov
aaa
ins
pop
mov
retf
call
(bad)
aas
push
push
(bad)
aas
mov
sahf
movs
leave
or
stos
ss
addr16
(bad)
je
pop
mov
push
ja
aas
cdq
fisttp
mov
cli
(bad)
loop
push
call
outs
mov
mov
inc
dec
shl
retf
repnz
je
sub
lea
mov
retf
inc
sub
sbb
pop
pop
retf
call
(bad)
aas
push
xor
aas
retf
repnz
je
sub
lods
sbb
retf
inc
sub
sbb
pop
pop
retf
call
(bad)
aas
push
and
aas
push
inc
aas
adc
pop
jecxz
jbe
mov
mov
mov
mov
icebp
call
outs
mov
popf
inc
ret
or
pop
pop
retf
inc
aad
inc
int
cmp
pop
pop
retf
inc
aad
jnp
lock
push
call
(bad)
aas
push
inc
aas
adc
jecxz
mov
leave
inc
dec
mov
data16
retf
inc
aad
jnp
lock
push
call
(bad)
aas
mov
pop
retf
inc
aad
jnp
lock
push
call
(bad)
aas
push
jl
aas
out
(bad)
lahf
retf
or
(bad)
int3
in
jmp
cld
(bad)
sub
pop
jmp
addr16
pop
sub
mov
(bad)
ss
in
dec
or
push
arpl
mov
and
mov
ins
(bad)
or
cmp
xor
(bad)
xor
shr
stos
jae
xor
sub
cli
out
sub
scas
test
pop
inc
cwde
fwait
scas
cli
mov
or
push
retf
sbb
and
or
pop
xor
push
cmp
and
jnp
clc
and
out
xor
ds
or
icebp
int
lock
sti
out
idiv
cmc
lods
adc
not
fs
dec
jecxz
lock
repnz
mov
ret
rcl
js
(bad)
pop
jle
dec
jge
in
jnp
loope
sbb
rcl
pop
js
jp
adc
enter
mov
cmp
(bad)
ds
mov
mul
clc
outs
pop
mov
sbb
xchg
jmp
(bad)
(bad)
lock
push
cmps
enter
ds
test
or
push
jp
test
and
je
outs
pop
retf
fist
inc
js
or
and
test
mov
push
shl
aad
pop
aad
fs
test
jnp
cmp
add
lds
and
inc
mov
pushf
and
loope
mov
test
mov
pop
push
retf
add
xor
mov
fistp
push
and
into
push
retf
cmp
fistp
retf
push
retf
pop
jmp
push
retf
push
retf
add
mov
inc
push
retf
add
and
int3
add
jle
inc
stos
push
mov
xor
or
sahf
into
and
retf
movs
fild
pop
and
scas
push
and
inc
push
retf
add
mov
stc
push
retf
add
dec
mov
fild
push
and
inc
push
retf
add
mov
fild
and
fild
retf
push
retf
nop
dec
and
push
push
retf
add
and
(bad)
push
retf
add
cmps
inc
and
out
fbld
dec
mov
dec
push
retf
pop
retf
sbb
fild
retf
push
retf
add
mov
and
and
stos
push
retf
ret
fild
and
fild
mov
fild
retf
push
retf
pop
retf
mov
retf
add
mov
pop
push
retf
add
xor
fistp
push
and
mov
pop
retf
push
gs
leave
push
retf
add
fld
retf
push
retf
sub
sahf
into
and
inc
pop
retf
sbb
fild
retf
push
retf
push
retf
pop
repz
fild
retf
push
retf
add
mov
pop
push
retf
add
cmps
fbld
mov
dec
push
retf
pop
retf
inc
fsub
fild
retf
push
retf
cmp
je
fdiv
fild
into
and
pop
push
dec
mov
(bad)
fsub
fild
retf
push
retf
cmps
js
iret
mov
rol
jg
inc
mov
xchg
lea
nop
mov
pop
mov
inc
inc
jg
xchg
sbb
aad
fimul
mov
xor
inc
in
or
cmp
cmc
mov
in
cmp
lods
xchg
sbb
adc
xchg
sti
cmp
std
mov
verw
mov
and
test
mov
sbb
mov
sbb
loop
push
add
and
cmp
and
cmp
ins
(bad)
loope
and
mov
mov
pop
in
or
test
out
lods
daa
lods
in
lods
stc
stos
daa
jo
clc
mov
sub
adc
arpl
sub
sub
std
mov
sbb
push
or
sub
push
out
or
pop
fnsave
jo
in
mov
sar
jns
(bad)
cmc
jecxz
sti
neg
sar
(bad)
call
ins
mov
mov
jp
cmp
push
imul
arpl
fcom
addr16
adc
ficom
cmp
data16
add
push
jne
fidivr
loope
js
iret
sub
push
cdq
add
ja
dec
mov
call
xlat
aas
push
out
xchg
addr16
or
xchg
or
rol
cmps
jns
loope
out
or
push
or
out
arpl
dec
and
jb
xlat
or
xlat
or
dec
or
xlat
fisttp
xlat
xchg
jmp
out
arpl
dec
or
jno
xlat
or
dec
or
xlat
fisttp
xlat
xchg
jmp
xlat
or
lds
arpl
into
push
jecxz
mov
arpl
dec
arpl
dec
or
xlat
push
stc
out
or
out
arpl
dec
or
jae
dec
arpl
dec
or
xlat
jne
out
or
xlat
or
test
cmps
(bad)
jmp
test
ja
or
xlat
sbb
out
or
xlat
or
xlat
mov
arpl
or
xlat
sbb
out
or
xlat
or
xlat
mov
arpl
dec
or
shr
jmp
xlat
or
lds
arpl
xlat
push
repz
mov
arpl
dec
or
jno
xlat
dec
cli
out
xchg
addr16
or
in
add
push
inc
clc
fs
nop
inc
dec
xlat
int
out
or
dec
or
push
or
push
retf
mov
xlat
xor
xchg
jmp
xlat
adc
xlat
or
(bad)
or
xlat
push
repz
mov
arpl
xlat
packsswb
xlat
jno
out
or
dec
or
(bad)
movs
cmp
xlat
xchg
mul
xlat
mov
arpl
xlat
fxch
out
or
xlat
push
repz
mov
arpl
xlat
fxch
out
or
js
jecxz
xlat
lahf
inc
out
xchg
addr16
or
cmc
pop
mov
daa
jecxz
xchg
jmp
xlat
or
aam
arpl
sti
or
push
mov
sar
not
pop
out
or
xlat
mov
arpl
js
arpl
xlat
lahf
mov
out
or
xlat
or
arpl
dec
or
xlat
push
cli
out
xchg
addr16
or
js
arpl
sub
mov
xlat
or
xlat
or
loopne
arpl
jecxz
adc
mov
aas
jecxz
xchg
jmp
xlat
or
dec
or
ror
nop
jnp
mov
out
or
js
arpl
jmp
xchg
mov
jg
arpl
or
xlat
aad
jecxz
xchg
jmp
xlat
or
(bad)
or
arpl
std
dec
ror
jb
xlat
fxch
out
or
or
sar
dec
xchg
test
xchg
addr16
or
imul
jle
sbb
jmp
xlat
or
arpl
arpl
or
jb
jg
xlat
xor
cmps
std
out
xor
xlat
or
leave
or
xlat
or
arpl
pop
or
dec
jmp
jae
dec
cli
out
xchg
addr16
or
in
add
or
mov
cmps
or
dec
or
dec
xlat
dec
jae
xlat
or
xlat
or
xor
arpl
or
data16
add
jmp
aam
arpl
xlat
or
xlat
rol
xlat
or
xchg
or
jne
(bad)
shl
movs
push
mov
xchg
repz
xchg
ret
xchg
ja
addr16
lahf
xchg
mov
mov
jns
jbe
(bad)
jmp
mov
jno
and
sbb
and
cmp
sub
(bad)
xor
jecxz
jno
out
mov
jmp
mov
(bad)
jmp
jge
lods
aaa
xor
sub
adc
cwde
push
push
hlt
inc
inc
sbb
push
out
out
ins
cmp
ins
scas
lock
inc
jecxz
sbb
(bad)
repnz
leave
not
sbb
cmps
(bad)
js
out
inc
fcom
or
js
leave
fisubr
stc
icebp
xchg
stos
mov
imul
clc
imul
push
jmp
pop
jo
push
sub
cdq
sbb
cmp
repnz
das
(bad)
out
(bad)
aaa
mov
and
out
or
mov
sbb
cmp
aas
jl
cmp
and
int
js
shr
jo
aad
adc
jmp
mov
and
or
lea
mov
fisub
adc
out
pusha
call
(bad)
aas
push
adc
daa
test
jecxz
push
jno
je
xor
repnz
add
cmp
dec
jle
arpl
inc
(bad)
jmp
ja
popf
jnp
inc
loope
jmp
in
sbb
test
push
es
dec
fwait
and
arpl
dec
(bad)
push
popf
jns
mov
scas
add
push
es
dec
arpl
jns
sbb
dec
dec
call
lds
dec
dec
fwait
add
arpl
dec
(bad)
push
in
jns
fwait
add
lds
dec
dec
jnp
sub
scas
add
push
es
dec
add
jns
sbb
dec
dec
call
lds
dec
dec
fwait
add
fwait
and
push
popf
jns
jnp
sub
test
lds
dec
dec
pop
add
lds
dec
dec
arpl
jns
sbb
dec
dec
fwait
and
arpl
dec
(bad)
popa
(bad)
jns
push
lock
push
in
gs
push
xor
push
out
addr16
fs
or
mov
jns
sbb
xchg
push
es
dec
fwait
add
arpl
dec
(bad)
push
lods
imul
test
dec
dec
sti
add
lds
dec
dec
add
jns
dec
test
push
ret
mov
lds
push
int
sub
test
push
cmp
mov
adc
cmp
das
cmp
ds
cmp
xor
aaa
and
aas
and
call
cwde
fnstsw
out
inc
test
mov
mov
int
cmp
jmp
in
inc
sbb
pop
addr16
jge
sbb
cmp
mov
call
and
cmp
test
xor
push
loop
loop
imul
xor
test
cmp
test
sar
xlat
jo
add
adc
xchg
cli
jmp
inc
and
clc
jge
xor
and
aas
jge
jl
cmp
and
add
jge
adc
ins
mov
(bad)
in
pushf
mov
jge
sbb
call
(bad)
pop
push
cmp
fdiv
adc
movs
mov
cmp
daa
pop
or
stos
cmp
cmp
cmp
sbb
push
int
sbb
push
sti
js
push
ret
sbb
push
fwait
mov
loopne
aas
fist
loope
test
jae
inc
xor
jp
rol
cmc
jge
cmp
cmps
std
adc
mov
xchg
add
sub
add
popf
out
cmp
dec
out
cmp
xor
ret
popf
out
cmp
imul
sub
out
cmp
sahf
fcomp
add
out
cmp
add
cmp
stos
mov
xchg
popf
(bad)
sbb
add
out
cmp
lods
imul
popf
or
add
out
cmp
(bad)
out
cmp
imul
scas
xor
fwait
add
out
cmp
sub
test
popf
out
cmp
xor
cmp
popf
js
add
out
cmp
cdq
out
cmp
pop
out
cmp
out
stos
pop
popf
cwde
mov
add
out
cmp
popf
out
cmp
popf
inc
add
out
cmp
or
add
add
outs
test
popf
out
cmp
xor
cmp
popf
js
add
add
out
cmp
popf
sbb
add
out
mov
adc
jbe
add
out
cmp
xor
cmp
popf
sbb
add
jmp
dec
je
lahf
popf
(bad)
xchg
add
out
cmp
cmp
cmp
(bad)
cli
xchg
lds
imul
add
out
cmp
(bad)
pop
sub
add
out
cmp
popf
jmp
loop
popf
out
cmp
add
in
cmp
popf
cli
xchg
ret
inc
add
out
cmp
cdq
hlt
(bad)
lahf
popf
(bad)
xchg
add
out
cmp
xor
cmp
fcomp
(bad)
lahf
or
xchg
out
sar
es
add
cdq
jno
lahf
popf
(bad)
xchg
add
cmp
xor
cmp
popf
fdivr
add
out
cmp
jmp
xchg
add
out
cmp
xor
cmp
add
popf
popf
jb
add
out
cmp
and
cmp
sbb
cmp
jmp
xor
adc
jno
push
popf
js
add
out
cmp
popf
out
cmp
sub
cmp
in
out
cmp
add
cmp
popf
out
cmp
sbb
in
cmp
popf
outs
cli
add
mov
cmp
add
scas
popf
jmp
popf
out
cmp
xor
cmp
popf
push
add
out
cmp
xor
(bad)
scas
popf
mov
add
out
cmp
sbb
cmp
popf
xor
add
out
cmp
ds
add
in
stos
xchg
sub
jecxz
scas
mul
fstp
sbb
hlt
scas
inc
add
lods
scas
out
sub
push
dec
mov
mov
jno
xchg
lods
push
sahf
mov
or
add
out
cmp
(bad)
mov
inc
movs
lahf
popf
(bad)
xchg
add
out
cmp
popf
out
cmp
pop
out
cmp
out
cmp
popf
into
cmp
pop
out
cmp
xor
cmp
popf
cwde
pop
add
jmp
or
(bad)
clc
xchg
and
pop
movs
sbb
mov
sub
jb
scas
xor
aam
inc
add
scas
scas
loop
das
dec
das
or
pop
mov
cmp
adc
or
mov
and
adc
(bad)
push
inc
sbb
mov
ret
or
push
xor
movs
mov
in
jmp
mov
in
test
sbb
cmp
call
test
pop
or
ins
cmp
mov
cmp
lods
lods
dec
mov
icebp
cmps
in
sbb
adc
sub
cs
fwait
bound
xor
xlat
mov
int3
fincstp
aam
in
cmps
cmp
and
or
sti
add
je
jp
cmp
and
daa
jnp
xchg
push
aaa
add
cmp
and
stos
lods
cmp
test
clc
jp
lock
icebp
popf
xchg
mov
lock
retf
jge
sets
jmp
xor
test
jo
mov
and
fs
test
aaa
cld
in
or
sub
dec
cmp
push
sbb
inc
loope
push
leave
mov
push
jmp
mov
mov
pop
in
or
jo
in
sbb
jmp
psubd
and
in
mov
jp
jmp
loope
cld
adc
add
and
rcr
outs
jmp
fcom
(bad)
push
ja
xor
jl
mov
push
pop
loopne
push
aaa
retf
cmps
cmp
js
test
dec
jns
add
xor
mov
add
sub
sbb
cwde
push
cli
mov
add
clc
aas
add
clc
aas
mov
clc
mov
fadd
cld
test
iret
mov
adc
clc
fisttp
fprem
cmp
add
inc
aas
add
cld
aas
xchg
fdivr
cmp
(bad)
movs
(bad)
push
and
fsubr
jmp
add
clc
cmp
mov
sub
clc
out
add
clc
aas
add
cld
aas
mov
fidivr
push
mov
add
enter
data16
add
clc
fild
push
aas
lods
fdivr
aas
add
clc
mov
outs
aas
add
clc
aas
mov
fidivr
push
mov
mov
retf
fistp
js
cmp
fdiv
mov
add
clc
aas
xchg
clc
cmp
(bad)
cmp
enter
add
aas
add
cld
aas
dec
fdivr
aas
leave
(bad)
jns
mov
call
aas
add
clc
aas
scas
fdivr
xchg
add
clc
aas
add
cli
aas
add
clc
aas
mov
fidivr
test
dec
pop
aas
add
cld
aas
mov
fdivr
mov
add
pop
aas
add
cld
aas
jp
clc
xchg
add
sub
add
clc
aas
je
clc
stc
call
aas
jno
clc
call
cmp
fwait
mov
stos
mov
push
sbb
fwait
pop
test
dec
pop
aas
lods
inc
cld
aas
add
clc
cmp
inc
sub
push
fdivr
fwait
pusha
pop
dec
mov
jmp
test
stos
pop
aas
add
cld
aas
(bad)
fdivr
aas
stos
fprem
sub
stos
sbb
add
ins
cmp
data16
rcr
clc
cmp
add
enter
data16
add
clc
aas
jecxz
clc
cmps
push
fdivr
mov
leave
std
pop
add
mov
aas
pop
fdivr
pop
add
clc
cmp
sar
add
clc
aas
(bad)
fdivr
xchg
test
push
loop
inc
mov
mov
fcomp
and
adc
in
mov
nop
push
mov
inc
in
mov
mov
(bad)
loopne
pop
imul
fst
ja
cmps
ds
jle
cmp
(bad)
ss
dec
sbb
and
cmp
dec
mov
mov
adc
mov
test
fisub
sub
mov
cmp
and
push
jmp
pusha
outs
test
repnz
aam
inc
sbb
out
out
ret
ins
(bad)
or
fisubr
test
out
push
cmp
int
push
xor
add
loopne
jp
(bad)
dec
xor
ds
jecxz
sti
stc
test
aas
sti
mov
sbb
bound
sbb
in
sub
and
add
leave
ja
jle
(bad)
jge
pop
and
cli
mov
mov
cs
mov
mov
(bad)
in
es
ror
jmp
pop
push
retf
in
stos
cdq
cmp
inc
pop
in
or
ret
mov
jge
add
jno
or
out
cmc
sbb
shr
int
mov
sar
jo
int
and
jp
cmp
add
stos
mov
ret
setp
sub
sub
call
xchg
pop
and
and
ficom
sbb
push
adc
sub
call
jmp
das
mov
xor
mov
xor
mov
scas
inc
sbb
test
and
ffree
ds
outs
mov
mov
inc
xor
movs
xor
mov
xor
xor
and
shl
push
pop
mov
aas
sti
shl
mov
les
mov
shl
ja
rdmsr
pop
(bad)
mov
repz
shl
std
sar
jmp
mov
mov
shl
dec
and
xor
xor
mov
cmp
add
xlat
cmp
addr16
mov
lods
sti
sar
sar
in
ss
ds
ins
mov
xchg
sti
rol
stc
shl
addr16
mov
popf
sti
shl
addr16
jge
cwde
repz
pop
pop
sbb
clflush
add
daa
push
mov
xor
shl
cld
push
movs
xor
mov
aas
sti
shl
cmp
movs
xor
mov
xor
shl
ffree
ds
outs
mov
stos
sti
shl
pop
jb
xor
movs
xor
mov
cmp
add
(bad)
cmp
addr16
mov
xor
shl
jl
cmp
push
pop
nop
mul
xor
scas
lock
nop
ss
xor
xor
imul
mov
or
add
mov
xor
inc
movs
xor
test
xor
shl
jle
cmps
and
jmp
ins
mov
mov
xor
mov
xchg
shl
fild
push
(bad)
es
sbb
ins
and
popf
outs
pop
mov
int
adc
gs
scas
imul
arpl
mov
mov
ror
xlat
add
ss
cmp
jae
mov
mov
inc
lods
iret
xlat
mov
xlat
add
pushf
xor
pop
cmp
push
rdmsr
lahf
aad
xor
shl
sti
shl
shl
std
shl
sti
shl
pop
pop
mov
loop
shl
and
mov
xor
movs
xor
mov
ss
ror
cwde
mov
xor
rol
sti
add
xor
shl
shl
pusha
mov
mov
idiv
sar
cmp
mov
cmp
daa
lods
inc
push
getsec
lahf
aad
ss
push
ds
outs
mov
xor
shl
pushf
xchg
or
pop
add
cdq
sti
rol
std
sar
inc
add
mov
movs
jp
jnp
xor
pop
sbb
addr16
xor
shl
std
sar
push
mov
xor
shl
(bad)
mov
cmp
outs
pop
mov
scas
inc
cmp
cmps
pop
mov
push
sti
shl
dec
test
bound
xor
mov
je
shr
popf
xchg
clc
push
xchg
inc
and
call
addr16
add
test
adc
imul
cmps
adc
pop
cdq
fwait
add
mov
mov
les
rol
xchg
push
pop
shl
mov
ds
outs
mov
(bad)
std
cmp
out
outs
aad
dec
cmp
fwait
add
jb
les
mov
data16
popf
mov
sar
out
outs
sbb
je
lods
sahf
mov
mov
mov
sbb
bound
stc
int
xor
shl
clc
rol
lock
xor
mov
in
stc
ror
push
inc
fild
je
shl
test
ds
outs
mov
xor
nop
movs
xor
mov
cmp
and
(bad)
fxsave
push
xor
push
push
mov
mov
sar
imul
cmp
sbb
add
add
xchg
lea
int
cmp
xchg
jne
lods
dec
pop
adc
cmp
icebp
and
mov
pop
ret
mov
mov
mov
inc
and
cmp
das
add
lock
push
jo
xor
jo
cmp
cmp
call
fisub
cmp
lods
jmp
sub
add
sub
xor
pop
cmc
and
cmc
test
iret
and
inc
sbb
shr
repnz
xchg
out
sub
cld
out
xor
lods
mov
jo
and
out
or
and
aaa
inc
out
cmps
cmp
int
icebp
cmp
fdiv
push
jmp
add
mov
jmp
in
addr16
lea
or
test
js
cmp
and
sbb
imul
xchg
int
in
and
cdq
stc
sar
xchg
push
dec
fld
loop
arpl
adc
adc
fs
in
icebp
adc
sbb
inc
shl
jecxz
fst
enter
(bad)
mov
mov
add
js
jg
ret
(bad)
ficom
cmp
xor
mov
push
pop
or
sbb
ret
rcr
lock
mov
enter
cmp
jle
push
fcom
mov
loopne
call
mov
xchg
test
lds
inc
push
and
fcom
popa
fadd
nop
std
cmps
push
xor
inc
push
or
pause
std
fmul
xchg
std
inc
push
and
fcom
popa
fsub
nop
std
sbb
std
fcom
push
std
inc
push
dec
popa
fcom
std
fmul
mov
inc
addr16
push
inc
test
call
push
adc
clc
(bad)
fcom
std
fcom
std
or
cmps
aam
popf
into
cmps
retf
outs
leave
mov
push
xor
fcom
std
fcom
std
fsubr
nop
std
pop
push
aam
fcom
std
fadd
nop
std
fist
cmp
push
push
xchg
fdivr
nop
std
js
xchg
std
cwde
stos
push
jnp
in
sti
call
dec
pusha
(bad)
iret
or
pusha
(bad)
iret
or
pusha
(bad)
iret
or
pusha
loopne
or
pop
inc
in
in
pusha
rcl
fcom
std
fsubr
std
or
std
fst
loopne
dec
nop
std
push
push
vrcpps
std
fcom
adc
push
cwde
stc
fadd
nop
std
in
test
in
das
inc
push
push
vrcpps
std
push
adc
cmc
fsubr
std
push
inc
vrcpps
std
fmul
std
push
push
vrcpps
std
fsubr
std
data16
add
inc
loopne
or
clc
fcom
std
fist
mov
fsubr
std
or
std
fst
sbb
nop
std
push
push
vrcpps
std
sbb
std
fcom
std
fmul
std
data16
adc
(bad)
nop
std
fmul
cmc
inc
push
push
vcvtdq2ps
std
fcom
std
fsubr
std
pop
pop
xchg
std
inc
sbb
loopne
fist
ror
punpcklwd
push
xchg
fist
sahf
fcom
xchg
std
in
enter
push
xor
inc
push
or
or
xchg
sub
or
std
fcom
(bad)
fadd
nop
std
fmul
xchg
std
cmps
jmp
lea
add
add
aad
pop
addr16
pop
mov
mov
dec
inc
(bad)
jl
ins
inc
xchg
inc
loop
dec
xlat
xlat
es
ins
(bad)
xor
mov
add
movs
jecxz
or
mov
jnp
repz
jnp
xor
js
xor
jnp
add
jnp
xor
inc
mov
hlt
mov
cmc
mov
test
popa
test
xchg
iret
xor
daa
sar
sub
xchg
cli
and
scas
bnd
xchg
or
cmps
out
out
enter
stos
imul
in
xor
test
ret
loopne
lea
xlat
mov
mov
mov
xor
push
cmp
and
in
js
scas
ffreep
fmul
or
adc
aaa
call
loopne
js
aas
in
scas
sbb
cmp
(bad)
jns
cmp
pop
test
sub
es
sub
ror
arpl
out
jae
fisubr
test
aaa
aaa
dec
cmp
and
and
add
cmp
inc
inc
cmp
js
in
or
loopne
retf
mov
call
int3
jge
idiv
repz
je
not
jg
cmp
and
fsub
push
and
mov
in
jg
in
add
ret
inc
mov
retf
mov
xlat
xchg
rol
add
ret
in
push
ret
shl
sti
jp
push
clc
add
ret
mov
(bad)
and
jmp
mov
inc
jnp
jg
aaa
add
add
sub
jecxz
sti
push
iret
(bad)
in
adc
cld
scas
push
xchg
cld
or
mov
shl
movs
jecxz
dec
movs
test
(bad)
and
jl
in
dec
mov
test
dec
and
jnp
jns
rcl
push
dec
ret
dec
pop
push
daa
in
cmps
movs
cmp
jns
xchg
and
sbb
sar
add
call
jo
pop
test
out
lock
imul
sub
mov
lahf
jnp
cs
call
fst
cmp
sbb
mov
cmp
and
in
mov
jp
mov
xor
je
and
sub
std
popf
stos
rol
out
mov
test
stos
pop
js
cld
cli
inc
sbb
jmp
lods
or
repnz
and
fwait
neg
out
in
rcr
push
mov
add
ret
mov
stc
mov
mov
aaa
js
cmp
and
hlt
(bad)
jp
cmp
and
pop
nop
cmp
push
or
in
jge
sub
addr16
daa
test
push
jne
in
shl
aam
jmp
pushf
stc
cld
popf
repz
xchg
(bad)
in
cmps
jmp
lock
sbb
loop
add
fst
loopne
adc
jne
jge
cli
gs
mov
fist
enter
push
in
mov
and
arpl
fcom
aas
sti
in
push
and
pushf
sbb
les
fcomp
adc
stos
ret
in
push
adc
xor
test
cmp
push
sub
sub
adc
pop
inc
out
mov
sbb
call
dec
jge
sar
pop
ret
mov
pop
mov
imul
imul
jge
mov
pop
pop
jge
pop
stc
imul
imul
jge
mov
pop
jge
mov
cmp
addr16
jge
mov
add
pop
mov
mov
imul
jge
mov
pop
jge
addr16
jge
mov
clc
mov
imul
jge
mov
pop
jge
mov
outs
cdq
outs
adc
std
imul
jge
mov
loop
imul
and
cwde
or
mov
scas
sbb
mov
sbb
push
repz
fbld
in
in
add
enter
jecxz
loop
and
dec
enter
jecxz
in
push
fiadd
pop
adc
add
mov
out
inc
cmp
and
test
out
test
out
test
out
mov
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
or
test
out
jp
out
pop
clc
enter
fs
test
add
jl
mov
cmp
xor
(bad)
pop
in
bound
(bad)
xlat
ret
sub
jnp
mov
movs
and
mov
jmp
push
loop
ja
xcrypt-ofb
cmps
stos
aas
cmps
cmp
mov
clc
pop
xor
push
cmp
and
out
cmc
movs
retf
mov
imul
mov
mov
fsub
loopne
adc
not
stc
xchg
clc
pop
in
or
ret
cmp
js
cmps
sub
jle
mov
sub
cwde
inc
out
aas
and
jne
mov
fs
sbb
in
clc
imul
cdq
std
inc
xchg
das
in
cmps
mov
cmp
cmp
lea
add
xor
sbb
jg
sub
jg
pusha
shr
fs
js
loop
je
clc
lods
cdq
(bad)
loopne
and
mov
xchg
div
(bad)
sti
neg
leave
ret
test
out
jp
jns
clc
cmp
icebp
sub
jae
ficom
or
sbb
nop
stc
jge
xor
cmps
cli
ds
cmp
movs
addr16
and
scas
in
sub
das
in
cmp
lahf
in
les
aaa
in
xchg
lds
mov
add
inc
lds
fsubr
cmps
sub
in
mov
adc
inc
cmp
in
and
fwait
jb
aas
lahf
jb
cmp
ret
and
fwait
jb
repz
jb
daa
pushf
jb
movs
push
lods
cld
test
out
adc
add
fbld
cmp
jb
cmp
in
and
fwait
jb
cmps
fwait
jb
inc
inc
in
adc
add
mov
or
outs
lea
fistp
cmp
jb
cmp
and
sub
and
cmps
sbb
imul
stos
imul
mov
or
mov
aas
test
push
and
fwait
jb
mov
jb
ja
repnz
cmp
in
and
fwait
jb
push
fwait
jb
adc
popf
movs
cmp
push
int
cmp
jb
loope
jb
xlat
div
mov
ss
cmp
jbe
cmp
jb
aas
popf
fidivr
xchg
fwait
jb
aas
popf
fidivr
cmp
jb
pop
pushf
jb
cmp
and
add
in
jb
cmps
pushf
mov
cmp
inc
in
mov
cmp
jbe
movs
call
cmp
jb
fcomp
call
and
fwait
jb
mov
popf
jb
cmp
and
cdq
jb
cmp
and
mov
jb
cmp
call
and
fwait
jb
cmps
fwait
jb
push
add
and
sub
and
fwait
jb
mov
cdq
jb
movs
outs
outs
xchg
pop
inc
xor
aas
test
cmp
jb
mov
out
and
add
cmp
jb
lods
dec
call
mov
cmp
xor
and
call
cmp
jb
test
pop
arpl
test
sbb
fsub
cmp
jb
cmp
jne
cmp
jb
cmp
jne
cmp
jb
cmp
hlt
and
cdq
jb
cmp
int3
and
fwait
jb
daa
fwait
jb
or
out
xchg
jnp
ds
pop
push
cmp
sub
or
lods
and
add
repz
jb
daa
pushf
jb
movs
push
lods
cld
test
out
adc
add
fbld
mov
call
cmp
jb
cmps
fwait
jb
cmp
jbe
or
jb
out
jl
movs
or
xchg
in
ds
push
lods
mov
cmp
jb
cmp
jbe
or
jb
out
jl
movs
or
xchg
in
ds
push
lods
mov
cmp
jb
cmp
jbe
xor
popf
inc
mov
cdq
test
cmps
das
in
cmp
lods
and
add
and
fwait
jb
movs
sahf
jb
cmps
aaa
aas
mov
aaa
fsub
cmp
jb
push
cdq
jb
clc
push
fdivp
mov
inc
ins
cmp
jbe
mov
xor
adc
lock
dec
xchg
xor
pop
movs
in
pop
cmp
fsub
cmp
jb
call
fisub
cmp
jno
cmp
jb
aas
lahf
cmp
dec
nop
cmp
movs
and
fwait
jb
fwait
fwait
jb
imul
pop
inc
inc
adc
out
mov
es
jb
aas
lahf
mov
cmp
ret
and
fwait
jb
imul
mov
cmp
jb
cdq
call
cmp
in
and
fwait
jb
fwait
fwait
jb
dec
cdq
jb
aas
pop
xchg
aas
dec
nop
cmp
movs
and
cdq
fisub
cmps
inc
inc
int3
cmp
shl
cmp
jb
movs
cdq
jb
cmp
cld
and
fwait
jb
pushf
fwait
jb
movs
cdq
jb
cmp
int3
and
fwait
jb
cmp
jb
cmp
aad
cmp
in
and
fwait
jb
mov
jb
mov
dec
cmp
jae
xor
xor
das
in
xchg
pop
das
cmp
inc
(bad)
pusha
sub
ret
movs
icebp
push
cmp
cmps
mov
out
mov
out
test
or
xor
and
adc
xor
mov
rcr
jecxz
test
jle
push
mov
and
into
mov
icebp
cmps
mov
in
scas
out
adc
retf
jecxz
xor
sahf
stos
and
mov
adc
sbb
ret
out
jp
aaa
inc
scas
sbb
cmp
into
sub
js
arpl
push
aaa
or
cmp
and
cmp
and
aaa
or
cmp
and
and
mov
shl
jno
and
test
iret
xlat
pop
xchg
inc
and
push
cmp
and
ret
pop
aam
out
(bad)
pop
stc
call
aam
out
cmps
add
repz
fcmovnu
jmp
cmps
adc
out
test
sbb
push
and
jg
(bad)
fcomp
loop
pushf
in
imul
stos
stc
sti
and
ja
jle
ret
mov
push
mov
icebp
int
sbb
mul
xor
mov
mov
int
fsub
sbb
adc
vunpcklps
add
jae
out
jnp
mov
adc
in
pop
sub
sbb
jl
int3
test
cli
ficom
cli
pop
jge
call
push
out
cmp
jnp
jg
xor
adc
fcom
cmps
(bad)
fcom
(bad)
fcom
(bad)
fcom
(bad)
fcom
(bad)
fcom
(bad)
fcom
(bad)
fcom
push
add
push
adc
(bad)
push
cmps
inc
scas
das
addr16
bound
add
cmp
std
or
ja
das
pop
fidivr
into
inc
push
xor
arpl
arpl
sbb
fiadd
mov
ins
(bad)
push
addr16
scas
das
addr16
bound
arpl
retf
ja
das
pop
fidivr
into
inc
push
aaa
arpl
arpl
sbb
nop
leave
sbb
fsubr
lea
fidivr
into
inc
push
aaa
arpl
sbb
mov
sbb
mov
sar
mov
push
js
mov
lods
pop
inc
jae
addr16
push
and
sbb
jmp
sbb
or
sbb
ja
das
pop
fidivr
into
inc
into
xor
arpl
retf
ja
das
pop
fidivr
into
inc
push
aaa
arpl
sbb
nop
leave
sbb
fsubr
mov
fsubr
inc
addr16
push
and
sbb
mov
push
jnp
and
push
inc
push
js
inc
xchg
mov
inc
retf
(bad)
retf
fcmove
sbb
inc
push
lea
retf
mov
dec
inc
clc
clc
jbe
rcr
push
mov
inc
arpl
sbb
cmc
scas
(bad)
fst
push
and
std
jmp
cld
mov
arpl
arpl
retf
fcmovne
pushf
lods
(bad)
cmp
or
sbb
jle
scas
mov
push
jnp
jmp
sar
sub
std
inc
xchg
mov
pushf
retf
fmul
sbb
cmc
scas
(bad)
fst
push
and
std
jmp
cld
mov
arpl
retf
inc
enter
jp
arpl
arpl
sbb
aad
inc
mov
fidivr
rcr
scas
das
addr16
bound
arpl
sbb
ror
sbb
ficom
rol
arpl
arpl
sbb
mov
cld
stc
test
push
and
std
jmp
cld
fsub
push
sbb
retf
fcmovne
sbb
aad
xchg
js
ins
(bad)
stc
jge
push
and
js
jmp
cld
clc
arpl
arpl
retf
test
repnz
ja
das
pop
fidivr
into
inc
cs
arpl
arpl
retf
fcmove
sbb
fadd
cmp
push
ss
cs
fnsave
(bad)
icebp
fsubr
shl
test
ja
lahf
mov
mov
mov
mov
pop
test
and
adc
add
test
leave
add
popa
fwait
es
sar
sub
mov
push
cwde
mov
add
cmp
add
xchg
sub
aas
(bad)
jg
and
test
fcmovnbe
mov
test
in
cmps
jmp
xchg
adc
or
mov
hlt
push
cmc
mov
frstor
aas
and
mov
cmc
xor
sub
ss
and
mov
loopne
fsub
cli
leave
sti
sbb
mov
adc
es
jo
inc
jge
adc
test
mov
jb
push
(bad)
xchg
jns
ret
int
jnp
and
xchg
loop
or
cmp
and
inc
jle
xor
ret
cmp
mov
stc
repz
cmp
cdq
not
pop
jmp
fdivrp
idiv
cmp
repnz
repz
not
mov
jp
lock
mov
add
jecxz
fst
sbb
(bad)
sbb
shr
outs
jae
ficom
sub
push
es
sub
stos
or
out
shr
mov
or
jle
cmp
je
sub
push
xchg
jge
out
sbb
ret
dec
push
push
mov
and
ret
inc
add
pop
push
jnp
adc
push
pop
clc
adc
push
pop
clc
adc
push
pop
clc
adc
push
pop
clc
adc
push
pop
clc
adc
push
pop
clc
adc
push
pop
clc
adc
or
clc
dec
push
push
arpl
push
fwait
pop
jge
leave
(bad)
cmp
int
cmp
je
adc
pop
jmp
adc
ss
adc
(bad)
pop
push
pop
(bad)
pop
rcl
addr16
js
aaa
pop
adc
pop
mov
aaa
pop
rcl
call
pop
jg
cwde
pop
iret
pop
pusha
pop
(bad)
pop
push
pop
aaa
pop
adc
pop
mov
push
pop
rcr
retf
pop
xor
retf
ret
fs
ret
fs
(bad)
cmp
xlat
dec
pop
retf
mov
mov
ret
mov
lds
xchg
jb
xor
ins
mov
in
stos
aam
pop
dec
sbb
and
loop
fs
jb
stos
xchg
xlat
pop
iret
scas
xor
retf
mov
mov
ret
mov
(bad)
push
sbb
adc
mov
sub
fnstsw
mov
ret
fs
ret
fs
push
pop
mov
dec
lods
xor
xchg
data16
lods
retf
cmc
mov
mov
ret
fs
ret
fs
shl
retf
jae
mov
sbb
fs
retf
ret
mov
fs
cmc
mov
inc
lock
mov
pop
test
retf
pop
lahf
mov
pop
pusha
mov
fs
pop
sar
bswap
xlat
cmp
pop
nop
pop
out
pop
aam
retf
cmps
push
(bad)
retf
imul
add
fs
shl
xlat
mov
mov
push
pop
psubq
clc
pop
fsubr
push
psubq
daa
dec
mov
ret
mov
fs
inc
jge
retf
pop
pusha
mov
ret
mov
fs
scas
pop
add
xchg
aad
retf
cmc
pusha
mov
pop
pusha
mov
ret
mov
(bad)
cmp
retf
cmps
sub
retf
ret
fs
ret
fs
and
xchg
movs
push
out
rol
outs
or
mov
cmp
push
ret
fs
push
lds
pop
sti
push
push
pop
mov
ins
retf
cmps
push
(bad)
retf
imul
jp
fs
inc
pop
mov
pop
pusha
mov
ret
mov
fs
lods
(bad)
mov
cmps
retf
cmc
pusha
mov
pop
pusha
mov
les
scas
pop
sti
push
pop
test
retf
cmc
or
ret
fs
ret
retf
jae
mov
inc
push
lds
pop
sti
push
push
pop
mov
ins
retf
cmps
push
(bad)
retf
imul
jp
fs
mov
mov
les
pop
mov
adc
iret
pop
add
retf
jmp
mov
ret
retf
jae
mov
inc
push
lds
pop
sti
push
push
pop
mov
ins
retf
cmps
push
(bad)
retf
imul
jp
fs
inc
mov
mov
ret
fs
les
pop
mov
adc
iret
pop
add
retf
jmp
mov
mov
fs
aas
aaa
mov
inc
push
lds
pop
sti
push
push
pop
mov
ins
retf
cmps
push
(bad)
retf
imul
retf
ret
fs
ret
fs
shl
aad
retf
ret
mov
ret
mov
fs
jnp
push
jge
ja
cmp
fiadd
pop
retf
jmp
mov
ret
fs
ret
fs
clc
(bad)
mov
cmp
sub
data16
mov
retf
pop
pusha
mov
ret
mov
cmp
xlat
dec
js
jecxz
sbb
mov
pop
push
je
cmp
mov
cli
adc
retf
ret
fs
ret
fs
and
mov
adc
retf
ret
mov
mov
fs
mov
mov
add
cli
adc
retf
ret
mov
fisubr
push
pop
jb
pop
push
add
cmp
xlat
cmp
and
clc
pop
mov
cmp
sub
adc
mov
cmp
outs
dec
retf
pop
jg
retf
pop
pusha
mov
shl
clc
ja
in
push
mul
push
movs
and
retf
pop
pusha
mov
adc
movs
fcom
add
retf
pop
pusha
mov
ret
fs
jp
fs
(bad)
jp
fs
mov
mov
pop
pusha
mov
fs
cmc
cwde
mov
pop
pusha
mov
fs
les
add
mov
ret
mov
fs
ret
fs
arpl
arpl
fs
les
adc
mov
fs
outs
jecxz
inc
stc
pop
and
loopne
fwait
inc
les
imul
pop
retf
das
stc
mov
ret
fs
ret
mov
ret
fs
iret
fs
push
retf
pop
enter
mov
fs
dec
mov
retf
ret
mov
add
cmp
push
ret
mov
add
jae
mov
add
retf
ret
fs
ret
fs
push
(bad)
fs
fbstp
mov
ret
fs
ret
fs
ret
fs
imul
retf
(bad)
int3
mov
ret
fs
ret
fs
imul
arpl
fs
les
inc
or
dec
jmp
add
int3
or
dec
adc
iret
inc
(bad)
push
retf
pop
mov
jne
sub
and
retf
ret
fs
ret
mov
fs
addr16
(bad)
retf
jae
mov
fs
push
retf
pop
ror
push
les
in
fwait
ins
retf
cmps
push
(bad)
retf
imul
retf
ret
mov
fs
inc
sbb
mov
ret
fs
les
pop
mov
in
push
psubq
daa
dec
mov
ret
mov
fs
(bad)
fs
retf
mov
mov
ret
mov
shl
push
dec
push
jbe
cmp
mov
fs
ret
mov
fs
retf
pop
pusha
mov
ret
mov
js
pop
retf
xchg
aad
retf
ret
mov
ret
sub
in
retf
fs
mov
fwait
ror
ud1
(bad)
stc
mov
pop
pusha
mov
fs
retf
(bad)
xor
retf
pop
clc
mov
ret
mov
mov
add
imul
or
shl
sar
jae
mov
les
scas
pop
sti
push
pop
test
retf
cmc
or
ret
mov
ret
retf
jae
mov
push
pop
psubq
clc
pop
fsubr
push
psubq
daa
dec
mov
ret
mov
fs
inc
cmp
mov
ret
fs
(bad)
sbb
cwde
ja
mov
add
push
ret
fs
retf
pop
pusha
mov
ret
mov
shl
lds
iret
outs
(bad)
adc
retf
ret
mov
ret
mov
fs
jne
pop
iret
pop
js
retf
xchg
aad
retf
ret
mov
mov
pop
cs
retf
cmc
inc
mov
pop
pusha
mov
fs
mov
mov
pop
pusha
mov
fs
lds
pop
add
jns
inc
and
retf
pop
xor
retf
ret
mov
mov
ret
sti
cmps
loop
push
out
cmp
(bad)
adc
retf
pop
pusha
mov
ret
mov
lds
inc
les
mov
sti
ret
fs
(bad)
sbb
cwde
ja
aam
add
push
ret
fs
retf
pop
pusha
mov
shl
lds
iret
outs
(bad)
adc
cmp
mov
fs
jne
pop
iret
pop
js
retf
xchg
aad
dec
ret
mov
pop
cs
retf
cmc
inc
mov
pop
pusha
mov
fs
mov
mov
pop
pusha
mov
ret
mov
mov
scas
pop
push
mov
push
push
adc
retf
ret
mov
fs
jns
mov
adc
push
(bad)
ja
adc
retf
ret
mov
lds
inc
les
mov
imul
mov
fs
leave
ficomp
popf
jns
xor
jne
cmp
pop
jo
jns
(bad)
cmp
jne
push
and
or
jp
ret
loope
xor
out
sub
out
and
test
or
and
js
mov
sub
mov
repz
mov
mov
out
idiv
sub
add
xor
pop
ins
fcomp
neg
inc
sbb
push
out
out
cld
cmp
ins
out
lock
cmp
in
push
sti
push
int
in
daa
test
out
ss
in
scas
es
loopne
mov
cmp
jnp
mov
call
shr
fisub
cmc
jecxz
shl
out
(bad)
cmp
inc
lods
cmps
ss
push
mov
enter
jmp
sbb
das
shl
arpl
ficom
mov
repnz
add
xchg
mov
pop
xchg
add
test
sbb
jle
mov
sub
inc
sbb
aad
loopne
js
jmp
rcr
jl
in
imul
std
fistp
cmc
mov
call
fnsave
loop
push
mov
add
imul
sbb
ret
jo
push
je
mov
push
xor
sub
call
mov
addr16
mov
fidivr
jg
(bad)
in
jg
out
lds
inc
jmp
arpl
jb
inc
out
jecxz
outs
push
jg
jp
jg
out
pop
inc
jecxz
test
jno
fisubr
fld
sub
inc
add
in
sub
or
add
fidivr
test
push
in
jg
jecxz
mov
inc
jecxz
jg
cmp
jg
sub
inc
jecxz
loope
jecxz
mov
push
jb
pop
sub
sbb
fsubrp
pop
mov
repz
pop
sub
jae
push
in
pop
in
int
jecxz
loopne
xchg
and
fdivrp
sbb
bnd
loopne
fbld
dec
fdivrp
mov
mov
es
jecxz
jg
jecxz
int3
inc
jecxz
mov
push
icebp
mov
jge
retf
xlat
loopne
das
and
mov
mov
es
jecxz
iret
inc
jecxz
loope
jecxz
mov
push
jb
pop
sub
sbb
fsubrp
jbe
push
inc
jb
pop
sub
jae
push
in
jg
jecxz
or
pop
arpl
jae
hlt
push
sbb
mov
mov
pop
arpl
jae
jl
and
mov
shr
jg
jge
jg
jecxz
int3
inc
jecxz
mov
push
icebp
mov
jge
jae
pop
jae
and
imul
fldcw
(bad)
jg
xchg
jg
out
mov
jecxz
mov
fdivr
out
jg
sub
inc
jecxz
sbb
jb
shr
jg
daa
in
jg
out
cmp
pop
add
jae
stos
push
ja
ds
jae
cmps
push
pop
xor
pop
mov
mov
xchg
add
les
cs
aas
mov
out
scas
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
and
std
dec
cmp
xor
es
cs
add
mov
cmp
in
xor
out
and
aas
push
loope
xchg
mov
imul
push
push
je
test
call
pop
imul
fwait
cmps
idiv
inc
fucomp
xchg
dec
call
icebp
push
cmp
and
scas
leave
fcmovb
stos
leave
xlat
jge
test
js
lahf
mov
out
cmp
mov
cmp
and
sar
js
daa
std
stos
push
(bad)
call
in
mov
xor
mov
inc
mov
js
imul
xlat
popf
push
mov
js
mov
jg
cmp
and
cmp
ins
xchg
cmp
and
cmp
test
lock
mov
add
std
dec
adc
retf
xchg
ds
lods
xchg
in
retf
inc
stos
movs
mov
jp
sbb
add
xor
ja
or
sub
inc
and
js
cmp
lds
or
retf
cmp
push
(bad)
enter
retf
mov
jp
jbe
and
jmp
leave
jecxz
sbb
and
push
popa
jp
jg
xor
push
adc
or
movs
test
pop
out
sti
fcmovb
jg
inc
pop
fidiv
bound
inc
jl
or
in
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
jl
xchg
inc
je
xchg
inc
jle
xchg
inc
loopne
inc
fstp
paddsw
cmovnp
push
add
adc
add
scas
adc
mov
paddusw
paddusw
cmovno
adc
fucom
jo
fucom
jo
fstp
jo
and
inc
cmp
push
in
int
scas
mov
jle
ret
adc
lods
xor
loopne
or
loopne
paddusw
out
in
outs
inc
loopne
mov
fnstsw
movq
sbb
in
imul
jo
ffree
jo
lods
fs
inc
xchg
fst
aad
cmps
inc
or
loopne
rcr
loopne
ins
fucom
jo
(bad)
jo
pop
pusha
cmp
ret
jle
or
je
cwde
loopne
sbb
loopne
or
loopne
paddusw
jo
cli
jg
xlat
adc
xchg
sbb
ret
xchg
stc
loopne
retf
fucom
call
(bad)
loopne
(bad)
fchs
rcl
push
jo
int
scas
mov
call
retf
mov
loopne
sub
loope
minps
jo
inc
loopne
mov
add
in
xchg
inc
cmp
add
jle
cmp
xchg
pop
retf
sub
jle
retf
outs
push
je
int
scas
mov
loopne
rcr
loopne
xchg
fst
jo
inc
test
inc
inc
dec
jnp
mul
inc
dec
fst
jbe
inc
(bad)
cld
mov
outs
pusha
mov
jns
xchg
sahf
in
cmp
loopne
xchg
ffree
jo
sar
andnps
pushf
inc
push
clc
xchg
int
inc
sub
add
or
bound
outs
pusha
mov
jns
xchg
sahf
in
cmp
loopne
xchg
fucom
jo
fnsave
pmaxub
dec
movs
cld
xchg
in
in
fild
pusha
mov
ffree
jo
out
test
inc
dec
arpl
fld
or
push
jb
retf
jmp
loopne
xchg
fucom
call
shrd
inc
sar
jle
shr
pop
mov
shr
inc
mov
loopne
das
fucom
jo
fucom
jo
fstp
jo
inc
sub
push
inc
cld
ja
ret
ret
sbb
adc
xchg
fst
(bad)
test
ret
std
loopne
jmp
loopne
or
pusha
jo
fucom
jo
loope
sub
adc
mov
retf
fnstsw
call
bsf
xor
fst
nop
movq
xchg
sbb
loopne
rcr
loopne
ins
fucom
jo
fld
jo
pop
in
cmovae
pusha
mov
xchg
jae
fsubp
adc
jo
fst
jo
mov
iret
xor
pop
loopne
cmp
loopne
xchg
fst
jo
mov
out
xor
adc
jg
lock
xchg
cmp
mov
add
xchg
inc
lock
add
xchg
inc
jl
mov
fucom
jo
(bad)
jae
imul
rol
push
jmp
cmp
call
outs
jl
pop
mov
lods
hlt
frstor
or
jge
psrld
push
push
jmp
dec
adc
mov
xchg
rcl
cmp
jle
xchg
jo
mov
fnstsw
prefetch
cmovno
inc
das
int3
dec
add
inc
jl
mov
popa
jl
xchg
inc
sub
xchg
inc
sub
ret
inc
fs
ret
inc
jge
ret
sar
push
push
jmp
dec
adc
mov
xchg
sar
adc
xchg
and
call
(bad)
jge
(bad)
sar
push
push
jmp
dec
adc
mov
xchg
rcl
cmp
jle
xchg
jo
je
fucom
jo
fisttp
xor
scas
nop
ret
rcl
jg
xchg
adc
nop
adc
nop
adc
mov
jg
sbb
stos
imul
mov
inc
dec
and
fnstsw
call
cmovbe
in
rcr
cmp
loopne
xchg
(bad)
jo
sbb
jl
mov
fs
call
dec
push
retf
mov
jl
mov
xor
repz
mov
cwde
push
jmp
push
inc
xchg
or
inc
outs
in
xchg
adc
mov
cmp
loopne
xchg
fucom
jo
fst
jne
inc
loopne
mov
fst
psubusw
dec
loopne
rcr
adc
or
push
jo
(bad)
(bad)
cmp
leave
add
pop
loopne
cmp
loopne
xchg
fnstsw
add
or
fchs
call
cvtps2pi
movq
and
adc
jg
xor
stos
sti
inc
movs
ret
mov
inc
jge
mov
test
adc
rol
xchg
mov
loopne
sub
cs
(bad)
btc
adc
hlt
sub
loopne
paddusw
jo
mov
loopne
and
loopne
paddusw
jo
fst
jo
ins
cld
in
inc
fnsave
test
adc
jle
xchg
jo
aam
fucom
jo
fld
cmovbe
ret
out
out
test
mov
fnstsw
call
(bad)
dec
in
loope
sub
adc
out
ret
inc
sub
ret
inc
fs
ret
inc
jge
ret
sar
push
push
jmp
dec
adc
mov
xchg
rcl
cmp
jle
xchg
jo
hlt
and
fnstsw
syscall
test
inc
dec
mov
mov
loopne
or
loopne
paddusw
bswap
pop
jo
add
inc
pop
xchg
mov
sbb
ins
fs
call
sbb
mov
lods
inc
add
mov
push
push
jge
aad
(bad)
and
out
sbb
jnp
mov
jmp
jmp
push
(bad)
in
stos
or
cmc
mov
xor
rol
pop
ss
mov
scas
sub
push
stos
inc
out
scas
cmp
sub
(bad)
in
xor
fimul
or
mov
out
sar
in
sub
mul
test
shl
and
loopne
mov
cmp
call
retf
std
or
jae
fincstp
inc
out
cmps
cmp
cmc
lods
cmps
push
int3
mov
cs
and
retf
aas
jg
ds
xchg
mov
loop
jo
mov
fwait
enter
and
repz
sbb
xor
arpl
es
cmp
sbb
mov
repz
adc
test
popf
ds
xor
and
rol
ret
in
(bad)
jge
cmp
fistp
enter
sub
jo
jp
push
jge
std
adc
ret
or
push
fs
mov
pushf
cmc
mov
cmps
enter
ds
pop
ja
sbb
adc
sub
hlt
out
inc
cmp
lds
dec
(bad)
(bad)
mov
retf
out
popf
lahf
int3
rcr
or
cmp
out
sbb
clc
adc
dec
aam
jmp
xor
jp
je
xor
fwait
jnp
cmp
sub
je
inc
bound
cdq
sti
or
int
mov
inc
xchg
(bad)
push
jne
cmps
mov
mov
mov
es
xchg
pop
push
inc
jae
jbe
jae
mov
add
push
outs
loop
lds
enter
retf
lds
loop
pop
outs
sub
jmp
repnz
sub
pushf
push
pop
repnz
sub
add
jmp
dec
xor
dec
add
lds
in
sar
cmp
fstp
pop
repnz
pop
imul
mov
retf
(bad)
aaa
push
push
iret
xchg
ins
or
cmp
leave
pushf
enter
enter
push
pop
xchg
add
or
pushf
xor
(bad)
repnz
push
pop
repnz
push
pop
xchg
add
or
pushf
enter
push
pop
repnz
pop
shl
push
pushf
clc
(bad)
repnz
push
pop
repnz
pop
ss
dec
dec
add
test
in
dec
and
fnstsw
add
sahf
outs
and
jmp
xor
jmp
push
add
inc
add
adc
sub
add
push
sub
out
in
inc
push
ror
ficom
pusha
in
ret
or
hlt
cmp
aaa
mov
cs
shl
inc
mov
ds
dec
xor
aas
and
cmp
mov
add
lock
call
out
jg
push
mov
inc
lahf
mov
ja
pushf
jno
icebp
ss
fcmovu
jecxz
je
inc
fucom
je
and
mov
loop
aas
std
in
and
and
push
outs
jo
inc
out
fwait
cmp
gs
icebp
push
and
(bad)
mov
std
test
jne
test
adc
jo
sbb
inc
ret
jbe
push
xor
fidivr
je
dec
fidivr
cli
fld
sbb
imul
cli
jnp
fwait
mov
lock
pop
out
cmps
push
cld
neg
add
not
xor
js
or
call
xor
mov
mov
leave
cmp
in
pop
adc
in
dec
fidiv
pop
pop
sti
icebp
int
push
test
and
xchg
cli
imul
mov
jmp
sbb
mov
fnsave
ds
xchg
push
adc
test
fist
jno
mov
pop
push
loop
daa
mov
sbb
and
sub
(bad)
mov
jmp
mov
stos
push
sbb
out
cmc
ins
enter
enter
retf
int
adc
sbb
inc
ins
push
retf
dec
push
call
cmp
fdiv
mov
push
(bad)
lods
xchg
dec
mov
push
jb
lods
sti
sti
(bad)
jns
cmp
sti
fwait
pop
int3
push
and
enter
xchg
int
(bad)
into
xchg
ins
nop
int
in
dec
into
inc
fiadd
lods
jge
push
xchg
fnsave
or
fcmovu
aam
mov
push
push
div
push
push
fisub
mov
fcmovbe
arpl
mov
lods
jne
push
jns
ror
push
ins
retf
int
xor
sbb
inc
ret
mov
mov
fcmovbe
arpl
mov
lods
jne
push
jns
ror
outs
ins
mov
retf
push
xchg
and
test
ja
fldenv
stos
cmp
gs
jne
enter
test
inc
ins
sti
into
inc
push
push
stc
sbb
enter
enter
push
int
out
dec
adc
repz
mov
into
xchg
into
push
test
aas
cmps
jge
dec
js
sub
mov
fcomip
jns
jns
fild
push
test
jle
ret
or
adc
cmps
hlt
cmp
xor
test
jle
int3
mov
shr
jnp
mov
mov
js
xor
jnp
add
jnp
xor
jmp
xor
out
mov
push
enter
lea
inc
jnp
call
mov
dec
mov
ins
adc
retf
jg
xchg
and
mov
push
mov
pop
movs
jnp
stos
mov
int3
mov
xor
(bad)
addr16
arpl
call
mov
cmps
mov
add
xor
bound
mov
mov
inc
mov
call
mov
jg
xor
jnp
test
retf
mov
xor
out
mov
dec
(bad)
push
stos
inc
out
lods
cmp
jge
fsubr
adc
mov
jb
ja
mov
push
cmp
aad
mov
cmp
cmp
cmp
enter
call
dec
push
int3
mov
jne
enter
mov
in
sub
outs
out
jl
(bad)
add
xor
int
mov
and
cmp
xchg
lods
mov
jmp
int3
not
pop
lock
mov
mov
dec
mov
fs
(bad)
sbb
cmp
das
shr
icebp
in
xchg
js
lock
in
lock
scas
mov
mov
fst
cmps
and
ds
pop
and
aad
mov
shl
jo
cmc
mov
(bad)
(bad)
sbb
aam
out
xchg
retf
out
adc
fwait
(bad)
jno
inc
sbb
pop
stc
cli
push
and
imul
clc
lods
mov
ret
xor
jmp
sbb
gs
lock
aaa
cli
and
dec
sub
pop
mov
xchg
push
shr
jg
call
dec
push
mov
mov
cmps
sub
push
add
dec
jno
add
dec
test
and
dec
xor
add
dec
xchg
sub
and
arpl
push
sub
or
shr
mov
test
and
xchg
inc
push
test
in
dec
add
shl
call
xchg
cdq
loope
nop
pop
dec
xor
sub
xor
cdq
shl
cdq
push
nop
aas
and
test
movs
dec
xor
or
shl
cdq
aad
cmp
shl
cdq
rol
push
mov
or
shl
call
nop
pop
dec
xor
sub
xor
cdq
ror
xchg
sbb
icebp
jnp
sahf
cmp
shl
cdq
shl
xchg
cdq
shl
cdq
aad
cmp
shl
cdq
sar
push
jmp
mov
add
shl
xchg
cdq
rol
movs
test
xor
popf
ror
xchg
sbb
icebp
jnp
mov
shl
cdq
ror
xchg
dec
shl
cdq
rol
push
and
sbb
push
fisttp
inc
or
test
sub
jle
shl
cdq
rol
cdq
shl
push
shl
cdq
shl
popf
shr
xchg
cdq
mov
stos
sub
xchg
aad
dec
add
xor
popf
shl
cdq
shr
xchg
cdq
mov
fbld
lods
or
xor
add
mov
xor
lods
cs
test
rol
in
shl
cdq
push
stos
xor
dec
xor
int3
aad
or
ror
xchg
cdq
or
xchg
and
xor
cdq
shr
xchg
cdq
mov
xor
sub
mov
sbb
xor
cmp
xor
popf
shl
cdq
rcl
nop
cmp
(bad)
sub
or
rol
xchg
cdq
jne
in
bound
inc
shl
cli
rol
adc
mov
rcl
cdq
jno
cs
shr
xchg
cdq
push
mov
jbe
or
xor
clc
ror
cdq
popa
xor
dec
shl
cdq
shl
cdq
int3
xor
jmp
shl
cdq
sar
push
stc
add
ror
add
dec
jmp
mov
int3
push
sbb
dec
xor
add
shl
cdq
shl
xchg
cdq
(bad)
xor
jns
xor
cdq
shr
xchg
cdq
mov
xchg
sbb
sbb
xchg
or
scas
xor
sub
xor
cdq
shl
xchg
cdq
rol
xchg
cdq
dec
rol
add
dec
xor
add
rcl
cdq
in
aaa
(bad)
add
inc
xchg
cdq
push
stos
xchg
pop
xor
test
outs
dec
xor
adc
shr
cdq
in
(bad)
add
in
cdq
shl
cdq
aad
xor
shr
push
stc
jne
movs
sahf
dec
xor
or
shl
cdq
rcl
nop
pop
dec
xor
xchg
xor
add
das
xor
test
shl
xchg
cdq
shl
cdq
aad
xor
sar
cdq
shl
cdq
shl
cdq
shl
xchg
cdq
push
inc
push
jmp
pusha
xor
retf
shl
cdq
shl
xchg
cdq
das
xor
cmp
xor
cdq
ror
xchg
cdq
loope
xchg
pop
sar
cdq
shl
cdq
sar
xchg
cdq
push
inc
push
jmp
pusha
xor
retf
shl
cdq
shl
xchg
cdq
das
xor
sub
xor
cdq
shl
xchg
cdq
shl
cdq
aad
xor
xor
cdq
shl
xchg
cdq
push
scas
push
jmp
or
xor
stc
shl
cdq
shl
xchg
cdq
rol
in
shl
popf
shl
xchg
cdq
shr
xor
pop
mov
mov
(bad)
test
mov
xor
daa
aad
or
rcl
mov
hlt
repnz
in
shl
popf
shr
xchg
cdq
mov
xchg
pop
shl
cdq
rol
cdq
adc
sbb
xor
popf
rcl
cdq
dec
xor
add
shl
cdq
dec
mov
es
ds
dec
mov
mov
add
shl
cdq
rcl
push
adc
in
cs
into
test
mov
xor
or
shl
cdq
movs
sub
aam
test
add
aad
or
ror
xchg
cdq
push
movlhps
push
aaa
mov
stc
shl
cdq
shl
xchg
cdq
rol
in
shl
popf
shl
xchg
cdq
shl
push
jmp
xor
add
shl
cdq
shl
xchg
cmp
or
ror
xchg
cdq
loope
(bad)
pop
shl
cdq
shr
ss
xor
add
rcr
xchg
cdq
push
inc
push
jmp
pusha
xor
retf
shl
cdq
rol
cdq
shl
popf
shl
xchg
cdq
shl
cdq
aam
xor
shl
cdq
rcl
xchg
cdq
push
inc
push
jmp
pusha
xor
retf
rcl
cdq
shl
pushf
ror
xchg
cdq
mov
xor
cdq
shl
cdq
aad
inc
sbb
xor
cdq
rol
push
mov
dec
test
xor
call
xchg
cdq
fs
pop
dec
xor
sub
xor
shl
xchg
cdq
ror
xchg
cdq
dec
mov
jle
dec
xor
add
cmp
pop
mov
adc
shl
call
xchg
sbb
scas
add
scas
xchg
xor
cdq
rol
push
mov
dec
xchg
scas
xor
repnz
repnz
in
shl
popf
shl
xchg
cdq
shr
ss
xor
cdq
aad
and
xchg
xchg
cdq
add
scas
or
xor
cdq
rol
push
arpl
popf
lods
xor
mov
xor
call
xchg
cdq
xor
shl
or
aad
repnz
rol
cdq
adc
sbb
xchg
push
shr
push
add
ror
xchg
cdq
dec
mov
es
ds
dec
mov
mov
add
adc
push
stc
movs
sbb
sbb
mov
shl
cdq
ror
cdq
loop
xchg
inc
aad
or
je
push
sub
xchg
dec
jmp
push
and
cs
xchg
or
inc
test
std
dec
mov
or
dec
mov
push
xor
add
dec
xchg
sub
and
mov
arpl
sub
push
mov
push
shl
cdq
shr
dec
xchg
shl
popf
shr
xchg
cdq
arpl
cmp
or
xor
mov
pop
sub
int
call
or
mov
cmp
sub
inc
mov
into
addr16
retf
jnp
call
mov
retf
mov
xor
out
mov
pop
in
repnz
jnp
xchg
outs
mov
movs
ds
push
cmp
push
xor
sbb
and
xor
mov
fnstsw
(bad)
sub
jnp
fisttp
and
enter
test
(bad)
cmps
ret
(bad)
stos
xor
adc
dec
xlat
ret
sbb
push
push
outs
in
cmps
push
cmp
push
xor
sbb
ret
inc
sbb
or
repz
sub
loopne
inc
and
add
cdq
push
push
js
bswap
jnp
cdq
ds
addr16
out
stos
xor
stos
and
jb
add
arpl
std
add
mov
std
jne
add
das
rcl
shl
push
jnp
stc
pop
add
dec
neg
or
fs
enter
enter
data16
gs
and
jmp
pop
push
jmp
jb
jno
aas
pop
adc
in
xchg
sbb
mov
(bad)
(bad)
fdiv
aam
in
xchg
sti
imul
call
mov
push
jo
stc
add
add
in
outs
(bad)
cli
pop
inc
inc
sbb
pop
push
pop
push
xchg
xor
gs
pop
fdiv
shr
fidiv
add
xor
call
cmp
sti
and
(bad)
push
and
inc
enter
enter
enter
call
out
enter
test
imul
push
and
ja
push
hlt
jmp
cli
rep
clc
and
das
enter
enter
int3
and
arpl
and
jmp
aaa
hlt
jmp
mov
ins
ja
sbb
stos
mov
pop
jle
mov
ja
and
scas
int3
and
ja
and
jmp
adc
jmp
and
jmp
and
out
enter
and
enter
fwait
cmp
sub
adc
stos
cmc
jecxz
sahf
cld
mov
test
enter
enter
int3
and
xor
int3
and
arpl
and
jmp
lahf
hlt
jmp
mov
pusha
stos
cld
mov
adc
add
and
fcmovne
and
jmp
and
jmp
and
cmp
loopne
jmp
and
sub
and
xor
sbb
jmp
and
jmp
and
jmp
lock
jmp
rcl
ins
xor
sub
icebp
jae
xchg
out
fdivr
push
cmp
outs
out
adc
inc
jne
mov
nop
ds
mov
fisubr
cmp
jnp
fbld
jnp
xor
sar
cmp
and
test
and
jl
jo
sbb
jmp
xor
mov
sub
or
cmp
std
mov
in
xor
sbb
lock
cmp
and
retf
push
gs
mov
and
test
(bad)
(bad)
fucom
iret
rol
sbb
sar
ins
pop
or
and
cmc
or
iret
idiv
shr
jg
mov
shl
lock
in
iret
stos
shl
aaa
mov
xor
pop
in
and
stos
(bad)
sbb
ret
adc
push
in
jle
in
dec
movs
jmp
adc
scas
jecxz
jne
mov
and
xlat
in
or
fs
cld
xlat
and
aam
out
xchg
sbb
test
aaa
jg
sbb
cmp
in
or
out
js
jg
dec
lock
mov
sbb
imul
clc
in
mov
pop
jno
aam
in
cmps
arpl
(bad)
fcomi
push
ror
ret
mul
punpckhbw
bound
mov
jbe
pop
cwde
ret
sub
push
mov
adc
imul
div
mov
cmps
shl
pop
sbb
ja
pusha
loopne
xlat
sbb
sahf
and
aad
jno
test
js
popf
add
mov
mov
cmp
xor
(bad)
js
pop
cmps
mov
mov
cmp
jg
cmps
pusha
rcr
daa
mov
mov
pop
mov
mov
es
xlat
daa
mov
ja
adc
push
dec
stos
mov
lahf
adc
cmp
jp
call
ret
xchg
mov
xchg
jnp
stos
mov
cmc
mov
xor
mov
and
fidivr
xchg
and
adc
mov
test
jnp
xor
jnp
xor
idiv
and
jg
cmp
add
mov
add
mov
out
jnp
xor
dec
mov
xor
jnp
out
mov
jnp
xor
out
xor
jnp
ja
mov
mov
push
mov
enter
jnp
sub
mov
push
mov
pop
movs
jnp
stos
mov
out
fistp
out
mov
jl
ja
sbb
jmp
jnp
xor
dec
mov
ins
ja
scas
call
ret
jnp
jp
or
mov
in
fsubr
lds
rcr
loop
test
and
sub
jae
xor
loopne
adc
sti
aad
mov
sub
jmp
pop
je
out
lock
in
adc
stc
jge
cmp
cmps
shr
xor
cli
or
icebp
sbb
sub
rcr
or
adc
sub
out
mov
add
iret
fnsave
or
or
adc
movs
shl
js
(bad)
out
fs
ins
(bad)
mov
test
mul
(bad)
sbb
cmp
jg
push
cmp
popa
rcr
adc
jae
mul
in
mov
mov
mov
mov
cmp
sub
shl
dec
cmp
inc
stos
jnp
hlt
(bad)
icebp
mul
adc
and
sub
or
add
loopne
jle
call
mov
cmp
cmps
es
cmp
and
ret
loopne
push
gs
js
shr
jb
aas
xchg
popa
(bad)
cmp
pop
sbb
aas
push
or
sbb
(bad)
aas
push
or
xor
xchg
pop
adc
imul
sub
xor
pop
(bad)
in
jmp
mov
(bad)
and
retf
fisub
sbb
and
sbb
sub
sbb
push
mov
inc
xor
adc
add
aas
adc
or
inc
cmc
stos
mov
mov
jmp
mov
or
mov
call
mov
data16
std
out
inc
fs
or
cmp
lds
xor
add
and
xor
mov
mov
mov
cmp
cmp
pop
in
jb
loope
iret
jmp
ret
enter
loope
mov
sub
in
and
jo
xor
fs
fcom
jp
call
cmp
and
cmp
xor
stos
mov
and
sbb
cmp
push
cmp
js
fs
stc
mov
sub
xchg
sbb
cmps
(bad)
cmp
ret
fcom
dec
repnz
pop
daa
repz
ds
and
sub
jns
aaa
push
dec
ds
pop
push
retf
das
ds
stos
xchg
mov
lock
or
enter
sub
test
out
(bad)
cmp
test
jmp
fimul
inc
test
add
call
ror
adc
push
inc
and
not
add
cmps
repnz
jns
cmp
and
loopne
jle
lock
pop
xor
leave
jg
in
adc
lods
sub
repnz
lods
popa
jne
lods
popa
jne
add
cmps
scas
pusha
jne
cmp
pop
out
shl
scas
pusha
jne
es
sub
(bad)
scas
dec
ja
lods
popa
stc
out
aas
popa
jne
(bad)
data16
dec
ja
out
fcmove
lods
gs
dec
dec
je
dec
bound
outs
xor
jbe
dec
ja
xor
jmp
mov
clc
jmp
jb
std
jmp
jmp
jno
jbe
gs
scas
std
jmp
mov
lea
mov
add
push
scas
pusha
jne
push
sar
xor
jmp
dec
xor
jbe
dec
ja
inc
std
jmp
jb
and
jmp
es
inc
jne
xor
jmp
shr
out
mov
retf
sub
out
movs
popa
jne
and
out
lods
pop
pop
out
dec
ja
lods
popa
jne
mov
push
out
shl
scas
inc
push
shl
(bad)
das
inc
ds
imul
popa
stc
mov
jg
fsubr
ins
es
sbb
jecxz
out
adc
out
cld
in
and
fs
dec
(bad)
data16
in
push
out
adc
jnp
(bad)
arpl
mov
out
mov
cmp
and
test
out
test
out
test
out
test
mov
and
jl
jb
sbb
addr16
xor
cmps
mov
add
ss
jnp
daa
mov
out
xor
jnp
jl
jnp
test
retf
mov
xor
jle
mov
ins
(bad)
or
cmp
push
mov
in
cmp
test
rcl
and
sub
xor
loop
shl
add
jnp
cmp
and
xor
push
retf
fisubr
push
lahf
ss
hlt
xchg
add
mul
ret
in
cmps
cdq
std
out
mov
sbb
pushf
je
push
test
inc
hlt
lods
jns
ficomp
mov
pop
push
or
sub
and
jp
ja
sub
stc
out
mov
dec
loop
js
jmp
mov
test
mov
xchg
jno
cmp
popa
aaa
enter
cmp
adc
xchg
adc
ds
xor
jle
jp
retf
sbb
in
mov
or
das
aaa
test
in
stos
cdq
stc
jecxz
adc
in
daa
test
out
sar
push
lods
mov
shl
and
aaa
fistp
stc
or
jmp
ficom
sbb
mov
lahf
sub
sbb
ins
mov
push
and
sbb
(bad)
xor
fcomp
(bad)
shr
loop
fnstenv
ret
sar
push
and
jnp
loope
add
call
fst
fdiv
cmps
cmp
pusha
cwde
test
pop
int
push
sub
rcl
inc
push
shl
or
shl
or
shl
or
ja
or
rcr
or
rcl
lahf
push
ja
or
mov
or
ja
scas
mov
into
and
push
shl
or
jge
mov
push
shl
or
mov
inc
push
std
cmc
or
shl
xor
dec
icebp
or
(bad)
ins
xchg
pop
dec
imul
dec
ins
xchg
add
push
call
xchg
test
dec
jno
add
dec
cmp
shr
push
cld
loope
rcl
push
dec
adc
mov
xchg
call
xor
popa
or
repnz
or
shr
push
test
cmp
rol
push
test
lods
pop
push
hlt
(bad)
and
adc
scas
addr16
rcr
or
ja
scas
mov
out
out
jnp
or
in
mov
or
std
pop
ficomp
pop
lock
stos
(bad)
das
pop
icebp
add
inc
mov
test
or
add
outs
and
les
gs
mov
xchg
jnp
push
dec
mov
xor
mov
mov
inc
dec
and
(bad)
inc
movs
(bad)
or
test
push
lds
xor
jmp
jae
cmp
add
mov
cmp
iret
mov
std
mov
pop
push
addr16
leave
ja
call
imul
iret
out
inc
sbb
in
shl
xchg
enter
sub
adc
in
dec
adc
lds
or
mov
pop
jno
and
arpl
inc
mov
ret
cli
add
mov
push
jo
sbb
xor
or
adc
mov
adc
sti
push
mov
cmps
in
fchs
cmc
lods
inc
jp
pusha
in
mov
sbb
and
sub
jo
lds
cmp
clc
jo
(bad)
push
cmp
xor
sbb
bound
lea
sbb
ret
jp
ret
mov
push
sub
xor
dec
mov
inc
or
js
jbe
jmp
cmp
dec
rcr
addr16
daa
test
push
fcom
pop
bound
stos
jmp
repz
stc
ss
pop
outs
mov
and
mov
outs
mov
movs
outs
push
mov
es
movs
inc
es
mov
mov
es
movs
inc
or
(bad)
pushf
dec
inc
mov
pop
outs
cmpxchg
fidiv
dec
or
mov
outs
mov
movs
ret
std
ins
cs
imul
pushf
out
cs
imul
in
mov
bnd
cmp
das
cmp
or
or
test
xor
mov
push
xor
mov
add
mov
popfw
xchg
adc
call
mov
std
outs
xchg
enter
mov
add
xchg
cld
ins
popf
or
xlat
xchg
call
push
or
outs
dec
pop
cmps
mov
add
cmps
push
add
cs
aas
mov
mov
cmps
inc
push
push
pop
xchg
gs
mov
lods
fwait
cmps
xchg
mov
pop
inc
sbb
bnd
fild
cmp
aaa
mov
in
int3
adc
push
push
out
pop
retf
pop
mov
test
call
ror
in
ja
cmp
(bad)
not
sub
aaa
cmp
daa
and
sti
jae
cmp
es
outs
(bad)
(bad)
stos
cwde
popa
jmp
sub
and
ret
out
jns
out
lods
cmp
jo
aas
cli
jb
and
lock
call
or
sahf
leave
adc
pop
in
and
sbb
push
ret
sub
push
and
jp
out
fld
inc
xor
hlt
lea
ds
imul
xor
in
mov
xchg
dec
and
jae
mov
scas
repz
imul
idiv
sbb
and
in
mov
cmp
lock
in
iret
fcmovnb
call
push
mov
ror
hlt
shl
jo
popf
mov
sti
hlt
or
in
adc
fcmovnb
leave
add
js
(bad)
fs
mov
adc
out
cmp
and
push
loopne
jle
fstp
jb
ret
lahf
mov
sbb
xor
enter
pop
pusha
test
jns
jmp
jmp
add
out
cmp
cdq
cmp
cdq
cmp
cdq
cmp
cdq
xchg
pop
jl
cmp
mov
addr16
jns
sahf
js
push
das
jnp
cmp
mov
aas
push
adc
jl
cmp
mov
dec
jnp
neg
sub
dec
rcr
cmp
daa
xor
movs
sti
cmp
movs
sti
in
movs
addr16
cs
movs
cmp
jl
movs
sti
in
movs
pop
in
pop
data16
lods
addr16
jns
inc
js
sbb
jns
inc
cmp
js
push
stos
arpl
xor
push
fwait
pusha
addr16
adc
pop
loop
or
gs
mov
and
push
fwait
pop
daa
and
addr16
cmp
aas
xchg
push
pop
and
lahf
push
adc
dec
mov
jmp
and
daa
js
cmp
fild
push
bound
out
push
sbb
int
pop
or
out
adc
jne
(bad)
out
xchg
daa
rol
mov
test
inc
in
(bad)
sti
and
cmp
call
and
(bad)
dec
pop
cmp
and
cmp
inc
jmp
sbb
ins
imul
loopne
cld
and
inc
sbb
in
cmp
pop
and
js
mov
push
rsm
in
mov
repnz
sti
in
stos
int
and
and
in
int
shl
xor
mov
cld
int
lock
aaa
fs
mov
mov
shl
lock
mov
push
retf
sbb
sbb
arpl
fist
pop
cmp
aas
jg
cmp
sub
sbb
cmp
jo
aad
jb
js
add
inc
xchg
out
pusha
jns
not
or
cmp
lock
cli
int
in
not
dec
sbb
in
inc
cwde
jg
bound
dec
(bad)
mov
mov
mov
stos
mov
mov
and
das
in
and
arpl
push
push
xor
ds
in
and
push
sbb
jb
cmp
jnp
jg
pop
adc
aas
xor
add
cmp
shl
push
xor
mov
sbb
dec
cmps
pop
mov
xor
sar
movs
lahf
dec
aas
xor
add
xor
cdq
jle
scas
xlat
dec
or
add
mov
icebp
es
(bad)
xor
add
dec
add
xor
add
add
add
xor
xchg
dec
aas
lods
pop
dec
aas
xor
add
mov
push
adc
add
dec
sti
xor
arpl
aas
adc
add
xor
jge
aas
xor
add
pop
inc
pop
mov
scas
imul
(bad)
dec
aas
lods
pop
dec
aas
xor
add
aas
ss
dec
aas
xor
add
mov
imul
sub
aas
add
add
aas
xchg
mov
lods
lahf
dec
aas
xor
add
mov
mov
sar
lods
lahf
fimul
stc
mov
hlt
mov
iret
test
stos
push
pop
mov
xchg
sti
sub
mov
push
or
xchg
pusha
rcr
jle
ret
retf
cmp
out
sub
out
mov
cmp
and
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
clc
and
repnz
inc
das
adc
xor
iret
nop
rcr
in
test
push
in
sub
cs
xor
int3
sbb
xchg
shl
loop
cmp
gs
sar
dec
out
loop
inc
(bad)
cmp
loope
mov
cli
js
mov
mov
and
sub
jg
scas
jp
(bad)
out
inc
cmp
popf
lods
loope
cmp
push
cmp
cmp
sbb
cmp
jo
mov
xlat
cmp
adc
scas
pusha
sub
mov
ds
enter
dec
sbb
imul
add
fmul
inc
sub
sbb
in
pushf
lods
(bad)
and
mov
mov
xchg
xor
je
push
stos
ret
hlt
fst
sbb
cmps
(bad)
cmp
ret
pop
fcom
enter
ud1
cdq
test
ja
xor
push
fld
jge
jmp
inc
lods
lods
cmp
loopne
jae
ds
ret
sbb
push
mov
out
sbb
jg
cmp
outs
(bad)
sbb
(bad)
mov
fsub
push
fdivr
mov
mov
test
push
je
push
push
je
xchg
push
cmp
test
pop
das
test
push
je
loope
cmp
xchg
lods
xchg
test
mov
je
push
mov
les
test
push
je
cmps
or
jbe
pop
mov
call
test
adc
push
push
mov
xor
into
call
clc
mov
cli
pop
cmp
adc
push
push
mov
xor
into
call
mov
icebp
push
hlt
adc
pop
mov
xor
into
call
inc
stos
cli
aaa
mov
into
call
daa
mov
call
sti
jmp
rcr
mov
and
scas
jmp
scas
leave
call
mov
xor
into
call
inc
stos
cli
aaa
mov
into
call
mov
cmps
push
fcomp
push
je
stc
add
pop
mov
adc
xor
scas
mov
xor
into
call
inc
jmp
shl
jmp
lods
fild
lds
xor
into
call
mov
test
mov
test
adc
sbb
mov
xor
into
call
inc
jmp
jmp
jo
stos
add
jmp
shl
mov
cwde
lods
fisttp
xor
push
in
daa
push
into
call
mov
sbb
mov
xor
data16
xor
into
call
mov
xor
into
call
pop
xor
into
call
jg
int
adc
inc
xor
scas
jmp
test
xchg
jno
stc
add
stc
jno
cwde
dec
push
and
sbb
add
data16
xor
into
call
daa
xor
call
daa
xor
into
call
daa
xor
into
call
xchg
push
fisttp
lods
mov
xor
into
call
jmp
add
push
(bad)
adc
push
mov
stos
(bad)
xor
into
call
jns
push
cwde
daa
xor
into
call
daa
xor
into
call
xchg
xor
into
call
daa
add
call
xchg
push
int
inc
xor
into
call
daa
xor
call
daa
cmc
into
call
and
mov
call
daa
xchg
call
pop
test
push
jbe
rcl
fwait
test
jp
lahf
mov
ins
xchg
mov
mov
je
test
push
je
xchg
dec
jo
int
mov
sub
xchg
ins
adc
adc
and
xchg
pop
xor
into
call
and
scas
mov
xor
into
call
daa
xor
into
call
jae
jnp
ret
inc
inc
jbe
sbb
xor
sbb
mov
jbe
stos
mov
xchg
pop
or
mov
out
inc
cmp
and
add
cmp
sar
mov
jnp
xor
jmp
aaa
mov
push
iret
rol
daa
sar
sub
mov
cmp
push
rol
push
jo
out
(bad)
cmp
and
cmp
fs
xor
or
adc
inc
pop
and
push
xor
cmp
int3
or
and
test
into
add
int
in
test
stc
lds
shl
xlat
outs
(bad)
and
es
sbb
cmp
cmc
dec
sub
fstp
ret
pop
stc
lock
and
push
xlat
sbb
outs
arpl
fist
test
xlat
cmp
and
mov
and
arpl
mov
sub
ds
xor
dec
aam
adc
outs
push
lods
and
aam
call
in
sbb
test
xchg
fnsave
into
mov
cwde
jns
loop
adc
clc
mov
mov
test
mov
sbb
jmp
ds
gs
stos
xchg
pop
cmp
in
mov
pop
hlt
inc
pop
clc
lahf
sub
mov
test
stos
call
call
jno
repz
cmps
xlat
sub
retf
or
movs
or
std
movs
or
std
movs
cmps
pop
std
in
or
std
xchg
sahf
aaa
loopne
or
shl
or
std
xchg
pop
mul
movs
and
rcr
or
movs
sub
std
clc
sub
push
adc
inc
out
push
test
adc
movs
sub
cld
or
adc
pop
xchg
cmp
cmp
mov
dec
mov
xchg
dec
loop
xchg
jmp
cmp
mov
mov
or
and
add
in
mov
add
xchg
mov
jmp
mov
(bad)
adc
push
or
mov
popa
dec
push
mov
push
jmp
cmps
push
xchg
movs
sub
std
in
xor
movs
outs
sar
or
cmc
xchg
or
movs
jno
std
test
dec
stos
movs
sub
std
adc
dec
xchg
std
or
call
mov
and
cmps
xor
pop
std
pop
cmp
mov
cmp
xor
mov
cmp
jne
cmp
int
sti
cmp
mov
cmps
sbb
int
retf
pop
push
sbb
mov
sbb
test
jnp
call
mov
in
xor
xor
data16
bound
mov
out
xor
mov
and
jl
jb
sbb
cwde
jmp
jnp
xor
dec
mov
ins
das
pop
out
jl
es
jnp
jns
mov
mov
inc
shl
or
ss
sub
aas
and
aas
cmp
rdpmc
cli
sub
xor
jl
sbb
mov
mov
and
add
pop
in
push
or
das
xor
or
outs
in
addr16
clc
sub
mov
loopne
xor
push
cmp
and
out
jp
jecxz
inc
loopne
mov
and
cmp
ins
cmps
rcl
push
sub
dec
in
push
cmp
push
pushf
or
sub
and
jp
mov
adc
jp
out
in
and
fisttp
inc
cmc
ja
dec
sti
wbinvd
xlat
lds
daa
js
xchg
dec
scas
sub
xor
mov
or
mov
pop
xchg
stos
cdq
push
out
lock
in
aad
je
lock
sbb
cmps
stc
adc
std
loop
aam
cmp
xchg
out
and
pusha
stos
ins
loop
and
jmp
aas
mov
in
sub
and
jp
push
xor
rol
or
push
xor
ficom
jg
or
idiv
dec
(bad)
xchg
mov
pavgb
sbb
clc
and
fcom
add
inc
sbb
sub
jmp
popf
idiv
xor
mov
mov
icebp
movs
adc
and
movs
adc
adc
nop
icebp
mov
adc
shl
or
mov
and
and
movs
adc
es
and
and
cmps
adc
jl
movs
adc
cmps
imul
mov
icebp
cmp
mov
(bad)
cmp
xchg
ja
jmp
scas
mov
adc
enter
mov
icebp
aas
mov
mov
mov
or
or
mov
push
adc
add
push
pcmpeqd
pop
add
add
mov
adc
mov
out
jmp
mov
pop
fld
jmp
cmp
icebp
ins
loop
mov
ins
cmp
mov
dec
mov
icebp
cmp
mov
in
cmp
sub
dec
xchg
or
test
sub
mov
sbb
mov
sbb
aad
sub
mov
push
mov
icebp
cmp
mov
in
cmp
sub
dec
xchg
or
test
mov
push
mov
mov
mov
ins
mov
cmp
mov
push
pop
mov
mov
ins
cmp
mov
out
fld
push
mov
out
cmp
xor
dec
(bad)
(bad)
mov
mov
icebp
movs
adc
and
movs
adc
and
movs
adc
sbb
xchg
pop
and
mov
adc
ins
repz
pop
adc
xchg
push
push
icebp
popf
cmp
xchg
pop
and
mov
dec
fcomip
adc
and
movs
adc
and
mov
inc
mov
dec
es
imul
mov
aas
cmp
stc
mov
ins
cmp
cmp
cmp
and
lds
inc
ins
std
jmp
mov
int
mov
adc
and
lds
mov
icebp
cmp
mov
ins
mov
mov
icebp
cmp
mov
mov
out
mov
lds
mov
cmp
and
in
mov
icebp
cmp
fsubr
dec
and
test
mov
xor
or
sub
push
mov
idiv
mov
call
add
and
in
mov
or
xchg
aaa
mov
ins
cmp
cmp
ins
ins
pop
mov
ins
cmp
sub
ins
stc
and
cmp
ins
icebp
mov
sbb
ins
cmp
ror
and
adc
mov
lds
mov
cmp
and
sub
cmp
and
test
add
sub
cmp
sub
xchg
ja
ins
ror
mov
mov
ja
ins
cmp
cmps
ins
stc
and
cmp
ins
ins
pop
outs
mov
ins
cmp
adc
dec
xchg
jmp
cmp
ins
fstp
ins
cmp
mov
ins
stc
and
cmp
ins
ins
pop
jle
ins
popa
lea
or
xchg
idiv
sub
cmp
dec
ins
mov
idiv
test
mov
ins
stc
and
ins
cmp
and
mov
or
and
mov
adc
cmp
daa
mov
sbb
ins
cli
aas
mov
ins
cmp
das
icebp
stos
push
and
and
sub
adc
mov
ins
cmp
mov
cmp
and
inc
push
mov
(bad)
cmp
or
stos
dec
mov
(bad)
cmc
and
movs
sbb
pop
icebp
in
and
movs
adc
push
icebp
popf
cmp
xchg
pop
jl
movs
adc
and
mov
xor
mov
adc
repz
pop
adc
aad
das
icebp
scas
mov
sbb
int
mov
ins
lea
mov
icebp
cmp
and
movs
adc
and
movs
adc
js
(bad)
or
mov
adc
shl
or
mov
and
and
movs
adc
es
and
and
cmps
adc
jl
movs
adc
adc
inc
or
ins
mov
mov
in
mov
imul
mov
mov
cmps
inc
(bad)
lods
push
or
adc
push
ins
cmps
push
mov
fidivr
mov
cmp
(bad)
icebp
pushf
cmp
cmps
adc
and
lea
or
test
and
pop
icebp
cmc
xor
add
mov
cld
or
mov
and
mov
movs
sbb
ret
ins
movs
push
mov
ins
cmp
sbb
aas
mov
mov
mov
icebp
cmp
adc
and
movs
adc
push
fucomip
mov
and
xchg
movs
adc
ins
repz
pop
adc
cmc
jno
icebp
popf
cmp
xchg
pop
and
mov
jge
icebp
adc
and
movs
adc
and
mov
mov
dec
es
imul
mov
ins
mov
mov
xor
mov
inc
mov
mov
lock
sbb
icebp
inc
and
std
xor
jmp
mov
xor
pop
jae
cmps
dec
and
fnstsw
cmp
mov
dec
es
inc
pusha
pop
mov
and
and
or
cmc
ins
repnz
mov
(bad)
cmp
and
mov
mov
gs
(bad)
icebp
pushf
cmp
cmps
adc
and
lea
or
test
es
mov
xor
add
mov
fmul
jmp
xchg
and
mov
movs
sbb
and
push
mov
(bad)
cmp
and
mov
mov
mov
or
push
stos
mov
mov
outs
aas
mov
ins
icebp
jmp
cmp
mov
test
ror
mov
popf
es
mov
pavgb
push
mov
sbb
sub
call
mov
cmc
mov
test
gs
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
mov
and
pop
pop
sub
stos
inc
out
test
aam
jns
in
call
pop
mov
mov
aam
mov
adc
out
xor
and
push
imul
jo
popf
jmp
aaa
xor
xchg
cmp
imul
pop
sbb
stos
fs
test
lock
mov
mov
and
jo
sbb
jge
in
test
hlt
movs
jnp
loope
je
adc
sbb
stos
cdq
adc
jle
sbb
push
cmp
fidiv
mov
cli
gs
add
div
mov
inc
dec
jno
mov
fs
stos
sub
in
or
repnz
neg
sub
inc
mov
mov
ficom
outs
sub
sbb
or
aad
mov
fnsave
push
nop
cli
aam
fidivr
or
iret
imul
sub
xor
xor
in
xchg
jnp
and
and
push
push
test
rol
sbb
push
ret
or
push
stc
jmp
out
or
cmp
cmps
div
add
shl
jo
cmc
adc
div
cwde
es
cwde
es
cwde
es
cwde
es
cwde
es
cwde
es
cwde
es
cwde
imul
sub
pushf
mov
mov
xor
imul
imul
add
push
add
push
add
jl
push
pusha
out
pop
and
clc
xchg
dec
imul
es
add
in
inc
outs
in
jl
shr
fldenv
stos
shl
neg
test
fdivp
imul
push
add
fisubr
push
imul
mov
imul
push
add
push
add
mov
add
jno
aaa
lds
xor
push
add
imul
mov
test
add
imul
push
add
push
add
push
imul
and
imul
addr16
and
imul
stos
test
pop
push
add
cmp
add
pop
pop
sbb
push
cmps
aaa
mul
mov
xor
neg
es
xor
(bad)
imul
mov
push
add
push
test
nop
push
add
mov
add
jno
aaa
lds
xor
push
pushf
mov
push
add
retf
imul
mov
push
pop
mov
sahf
imul
and
pop
add
stos
test
cmps
push
add
push
add
push
add
xlat
imul
and
sbb
stos
test
cmps
push
add
push
add
cmp
mov
neg
cdq
es
sbb
test
cmps
bnd
and
fistp
std
div
cwde
mov
imul
mov
imul
es
add
push
add
mov
add
or
xor
(bad)
imul
mov
push
add
push
test
nop
push
add
push
add
jbe
fsub
pop
ins
push
fdiv
imul
push
add
std
inc
pop
jb
ins
ss
lods
es
add
push
pop
mov
(bad)
test
fwait
pop
or
imul
pop
cwde
es
sub
jp
hlt
imul
push
push
mov
sahf
jl
into
jle
cdq
pop
sub
popf
scas
hlt
vmovhpd
sbb
fxtract
sbb
push
ror
xchg
mov
mov
out
inc
cmps
cmp
xor
cwde
retf
and
cmp
sub
jmp
das
loop
fwait
jae
and
mov
mov
call
and
stos
cmp
sub
add
cmp
call
enter
cld
shl
aad
les
push
hlt
push
xor
ins
pop
jno
and
mov
cmc
xor
cmp
mov
sbb
in
out
cmps
cmp
ins
(bad)
or
mov
jmp
in
jbe
loope
ds
adc
movs
cmp
mul
sbb
stos
ret
push
fcom
sbb
jmp
mov
and
xor
sub
test
ss
push
xor
loop
daa
loopne
mov
fiadd
in
and
sub
jge
mov
add
(bad)
sbb
pop
ret
cs
push
cmc
aaa
jmp
in
stos
call
stos
add
stos
inc
cmp
int
sbb
cmp
xchg
js
jno
mov
ja
mov
ficom
push
int
or
pop
sub
fist
retf
out
gs
(bad)
sbb
ret
pop
mov
in
jecxz
repnz
out
fst
xchg
mov
iret
test
ret
jecxz
jae
imul
les
imul
les
imul
les
imul
les
imul
les
imul
imul
imul
imul
pop
imul
push
imul
cmps
imul
mov
jge
dec
imul
imul
pop
inc
test
pop
xchg
loope
enter
stos
cmc
loope
stos
cmp
js
enter
stos
cmc
jns
stos
fs
sti
icebp
jge
aaa
cmc
loope
stos
cmc
jns
stos
sub
fwait
loope
test
mov
push
into
scas
cmc
loope
stos
cmc
jns
stos
mov
jg
lods
pop
imul
ja
push
sub
xchg
cmc
in
mov
pop
jns
sub
shr
std
jmp
in
ja
in
aaa
adc
cwde
icebp
out
xor
jne
pop
stos
imul
cmc
test
cmc
jns
stos
cmc
jns
stos
imul
cwde
xchg
out
xor
cmc
dec
pop
stos
sub
jle
aaa
retf
in
push
inc
sbb
mov
gs
icebp
pusha
ds
add
jns
xchg
dec
iret
test
mul
mov
cmc
or
stos
add
jns
xchg
ins
iret
dec
sbb
loopne
enter
stos
cmc
jns
stos
outs
jns
loopne
jge
scas
cmc
loope
stos
lods
jns
sub
jp
pushf
or
ins
cwde
sub
cmp
imul
stos
cmc
jns
stos
imul
cwde
xchg
out
xor
cmc
dec
pop
stos
cmc
loope
stos
cmc
jns
stos
jmp
jge
iret
imul
pop
retf
ja
(bad)
call
xor
sbb
cmc
loope
stos
add
jns
xchg
dec
iret
adc
mul
mov
cmc
or
stos
cmc
jns
stos
add
jns
xchg
ins
iret
fcomp
mul
mov
cmc
or
stos
sub
jp
aaa
cmc
movs
(bad)
stos
cmc
jns
stos
cmc
jns
stos
sar
xchg
inc
cmp
sub
cmc
in
scas
cmc
loope
stos
cmc
jns
stos
push
pop
jae
jge
aaa
or
rcr
inc
hlt
test
dec
sbb
and
jp
aaa
jp
xlat
fnsave
cmc
sbb
scas
cmc
rol
stos
cmc
jns
stos
inc
jns
jnp
jns
enter
stos
cmc
jns
stos
test
mov
(bad)
jo
sbb
les
test
mov
mov
mov
sbb
fidiv
mov
xor
cmc
jns
stos
sub
pop
clc
icebp
jge
aaa
cmc
loope
stos
cmc
jns
stos
add
jns
(bad)
fcomi
sbb
stos
cmc
jns
stos
icebp
jp
or
aam
mov
mov
loope
enter
cwde
xchg
pusha
ds
xor
cld
stos
cmc
loope
stos
outs
jns
repz
stos
pop
dec
mov
stos
cmc
loope
stos
pop
jns
stos
sar
jno
add
icebp
pushf
das
outs
jecxz
sti
shl
aaa
outs
les
add
stos
xor
and
dec
shr
jns
jle
jl
xor
xchg
stos
pop
jns
stos
cmc
jle
scas
cmc
test
pop
sub
pop
cmp
imul
mov
popa
into
scas
cmc
leave
(bad)
stos
xchg
jns
mov
jp
xchg
xor
cwde
icebp
loopne
xor
cmc
jns
stos
xchg
jns
add
jp
xchg
icebp
dec
movs
cwde
icebp
loopne
xor
push
jns
add
cmc
loope
stos
cmc
jns
stos
jg
pop
xor
push
stos
clc
jns
test
cmc
mov
stos
icebp
jns
mov
ror
stos
jne
pop
stos
arpl
pop
shl
jo
dec
xor
or
stos
cmc
jns
stos
inc
jns
and
cmc
jns
stos
test
(bad)
ret
jns
stos
inc
jns
add
cmc
jns
stos
push
pop
jae
jns
aaa
pop
loop
xchg
icebp
dec
movs
cwde
icebp
loopne
xor
cmp
jle
xor
out
xor
out
cwde
cmp
cmp
rol
xor
out
scas
cmc
loope
stos
cmc
jns
stos
jmp
aaa
xchg
(bad)
call
test
dec
pop
stos
cmc
loope
stos
cmc
jns
stos
add
adc
jns
inc
(bad)
iret
inc
int
in
push
cmc
jge
stos
cmc
jns
stos
push
jns
arpl
jge
push
(bad)
sbb
mov
jge
stos
push
pop
jae
jg
xor
push
mov
push
(bad)
addr16
(bad)
addr16
mov
iret
imul
cmc
sbb
scas
cmc
rol
stos
cmc
jns
stos
imul
stos
cmc
loope
stos
cmc
jns
stos
inc
jns
or
fadd
ins
std
push
lds
je
imul
outs
inc
ins
in
mov
xchg
gs
in
mov
(bad)
(bad)
mov
icebp
push
adc
cmp
mov
(bad)
adc
inc
out
scas
cmp
dec
mov
in
call
adc
cmp
mov
icebp
rcr
jg
aas
jg
cmp
and
retf
jne
cmp
cmps
retf
cmpxchg
jmp
retf
retf
test
(bad)
ret
out
addr16
lods
sbb
aam
out
xchg
xor
mov
sub
add
mov
idiv
lods
scas
and
xchg
adc
addr16
test
movs
gs
fs
push
sbb
in
ror
test
shl
add
or
std
jp
dec
cmp
mov
jo
aad
and
xor
test
(bad)
test
or
xchg
js
fidivr
out
jnp
cmp
ret
cmp
mov
mov
loop
rol
outs
jecxz
fcom
stc
and
fwait
pop
shl
aam
in
(bad)
pop
fdivr
push
bound
lock
add
stos
je
data16
ret
fcom
push
or
aas
test
ins
je
push
mov
sbb
push
loope
outs
jb
mov
ja
out
cld
fstp
cmp
rcr
ss
gs
adc
iret
enter
inc
cmp
add
adc
leave
or
adc
mov
fsubr
jne
cmp
add
adc
sub
shr
xchg
inc
xor
or
dec
sub
scas
arpl
in
xor
or
xor
or
scas
or
xor
imul
in
loope
das
mov
pop
ret
inc
mov
jno
sub
jnp
xchg
xor
fidivr
adc
loop
pop
scas
pop
inc
pusha
add
aam
lods
mov
pop
xor
push
div
cs
sub
add
jmp
jge
xchg
sub
mov
imul
xor
repz
or
xor
cmp
xor
or
mov
or
inc
mov
add
push
cmp
mov
cmp
xor
push
div
cs
jnp
or
add
xchg
lods
adc
or
sub
pop
stos
xor
xchg
pop
loop
retf
arpl
xor
adc
cmc
push
xchg
aas
dec
mov
adc
movs
inc
shr
and
cmp
and
xor
aaa
and
ds
cmps
dec
dec
cli
push
or
mov
jnp
ret
pop
cmp
and
mov
jo
pop
sbb
mov
inc
jmp
sbb
jle
ret
out
addr16
adc
fs
addr16
scas
loopne
cmp
daa
test
enter
bound
adc
out
outs
cmp
in
sub
jbe
sbb
ret
cmp
fdiv
mov
mov
and
imul
stos
retf
mov
add
jmp
aaa
nop
outs
ds
rcr
idiv
jns
pop
jo
mov
add
xor
adc
cmp
add
pop
pushf
bound
clc
cmp
inc
and
mov
jo
dec
inc
inc
xor
ds
sub
jae
jle
ret
sbb
push
(bad)
stc
push
inc
test
mul
(bad)
in
jnp
enter
cmp
mov
loopne
jns
adc
(bad)
loope
punpcklbw
sbb
and
arpl
jns
stc
xchg
daa
inc
xchg
cli
jg
cmp
cmp
cmps
ins
and
imul
or
mov
push
mov
mov
pop
push
mov
mov
mov
nop
dec
stc
push
loopne
jmp
mov
adc
and
sar
sub
test
and
mov
loopne
ins
add
and
test
es
lds
sub
shr
and
loop
mov
lods
fucom
je
and
sbb
cmp
pop
(bad)
ds
ds
xor
hlt
repnz
sub
ja
mov
and
in
push
stos
aad
stos
jg
mov
rol
mov
jp
leave
(bad)
popf
jns
aas
xchg
push
sbb
xchg
pushf
and
jp
or
add
mov
cmp
pop
(bad)
inc
jbe
aas
aad
sbb
cmp
clc
jge
loope
mov
adc
icebp
jne
add
das
pop
sbb
sbb
clc
fist
les
xchg
sbb
cmps
popa
leave
jg
add
out
inc
fistp
fst
rcr
jg
xlat
cli
dec
int3
sbb
sub
jecxz
ficom
ss
aas
cmps
push
xor
test
sub
xchg
aaa
shr
loope
out
jl
adc
inc
jnp
xor
sbb
stos
fadd
sub
jmp
inc
je
fld
rol
pop
inc
test
pop
lea
mov
pop
inc
test
pop
mov
mov
adc
jmp
pop
inc
push
mov
out
add
adc
(bad)
call
jmp
xchg
call
es
adc
jmp
mov
(bad)
arpl
push
data16
push
jle
jns
mov
stc
mov
movs
jg
movd
test
jmp
xor
jbe
xor
out
cs
jnp
xor
clc
mov
adc
push
or
mov
nop
jnp
repnz
jnp
xor
repz
and
dec
mov
shr
add
add
retf
cmp
inc
movs
(bad)
sub
jnp
mul
jnp
xor
loope
xor
jle
loope
movs
ds
adc
lock
jg
xor
out
out
cdq
jnp
jbe
jnp
test
jnp
xor
xor
aaa
daa
repz
sahf
scas
js
stos
fidivr
add
jnp
xor
sti
mov
xor
jnp
dec
mov
test
jb
out
jmp
sbb
mov
or
adc
cmp
int
push
push
(bad)
in
call
sbb
iret
test
xchg
mov
pop
mov
outs
xchg
(bad)
mov
xor
and
loope
cli
lds
mov
ja
call
jno
repz
mov
inc
inc
sbb
xor
repnz
test
pop
fsub
call
and
pushf
inc
mov
cmp
inc
leave
pop
jp
in
enter
push
sub
adc
inc
add
push
(bad)
bound
jmp
in
out
(bad)
cmp
or
inc
jae
fdiv
cdq
inc
adc
arpl
cmp
arpl
out
lock
addr16
sti
adc
xor
cmp
int
xor
sti
lods
jno
push
jbe
aas
shl
add
jb
into
mov
and
xlat
adc
and
or
jp
adc
clc
js
fucom
add
out
mov
repnz
in
test
cli
(bad)
sub
in
test
mov
mov
mov
je
aas
shl
out
test
lock
and
sbb
cmp
or
jae
inc
xor
(bad)
das
mov
out
aam
cld
sub
xor
fs
sti
push
fisubr
jnp
scas
rcr
sub
loopne
fwait
xchg
jo
ror
ret
mov
sbb
int
cwde
fnstcw
jb
jnp
xor
idiv
add
js
and
and
int
fsub
fwait
sbb
sub
loopne
fstp
jb
jnp
xor
idiv
clc
sahf
cmp
mov
sti
mov
rcl
test
sbb
xchg
call
add
add
inc
nop
arpl
add
movs
xor
repz
call
xchg
sar
test
sub
push
enter
leave
fsubr
test
mov
sbb
jno
sar
test
fstp
xchg
pusha
cwde
repz
call
mov
sub
sti
(bad)
enter
sub
sbb
pop
push
xor
cwde
sub
mov
inc
nop
mov
cmp
mov
mov
into
fdivr
adc
add
(bad)
rcl
dec
xchg
loopne
adc
add
(bad)
shr
pop
test
xchg
jecxz
jo
call
xchg
call
cwde
rcl
enter
cwde
add
cmps
enter
xor
rcl
enter
cwde
mov
cmps
enter
xchg
mov
cmp
jo
rol
mov
rcr
cwde
sub
fst
add
loopne
fwait
sbb
clc
lock
sub
mov
fwait
xchg
call
fmul
and
pusha
mov
imul
test
nop
mov
clc
sub
and
sbb
xchg
and
pop
sbb
enter
jo
fstp
inc
nop
xor
jo
rcr
loope
pop
sbb
call
and
enter
jnp
imul
adc
cmc
lock
xchg
js
imul
repnz
mov
sub
enter
jno
arpl
clc
mov
sub
and
movs
enter
loope
retf
sbb
adc
mov
jns
mov
pusha
and
enter
fistp
rcr
enter
rol
sbb
adc
mov
xchg
push
mov
cdq
clc
rcr
enter
rol
sbb
clc
lock
xor
loope
mov
ror
fmulp
cmp
movs
cdq
fadd
add
sub
repz
nop
mov
sub
sbb
dec
mov
rcl
jo
jmp
test
add
mov
fstp
loopne
xabort
rcl
mov
mov
sub
inc
cwde
mov
popa
sub
mov
rcl
xchg
jo
ror
call
mov
pop
sub
mov
arpl
cdq
sub
cwde
sbb
xchg
clc
fcom
mov
nop
mov
rcr
cwde
popf
clc
mov
add
fadd
movs
loopne
sti
movs
call
fdiv
sbb
enter
leave
sbb
aad
and
call
nop
pop
test
pop
hlt
clc
enter
xchg
imul
sbb
xchg
nop
nop
xor
jo
rcr
loope
fistp
call
add
add
enter
loopne
fistp
call
fwait
shl
enter
test
rcl
and
mov
cmp
int
mov
sub
sti
nop
pop
mov
enter
and
mov
or
sbb
inc
fsubr
inc
nop
sti
and
cwde
sbb
leave
lock
push
shl
lds
mov
sub
enter
leave
sub
int
mov
sub
ror
cmp
mov
mov
js
rcl
call
and
xchg
js
rol
cmp
inc
nop
sti
ktestw
es
mov
jno
arpl
and
xchg
js
mov
nop
fmul
lods
loopne
mov
nop
add
mov
adc
mov
fiadd
mov
xchg
inc
rcr
mov
mov
cwde
add
add
mov
mov
clc
enter
sbb
clc
sub
mov
loopne
inc
push
shl
cmc
stc
xchg
xor
jo
pop
cmc
stc
xchg
mov
stc
mov
mov
pop
add
pushf
cwde
rol
test
mov
call
sub
(bad)
enter
cdq
sub
movs
dec
mov
(bad)
jo
imul
mov
movs
cmp
mov
inc
cwde
repz
nop
jns
add
cmp
dec
nop
xor
arpl
mov
fwait
mov
and
mov
and
xchg
js
repz
cmp
sbb
and
xchg
js
repz
or
cmc
xchg
cwde
rcr
test
sbb
enter
cmp
(bad)
rcr
sbb
pusha
cwde
(bad)
test
nop
mov
mov
add
pop
ror
jnp
rcr
call
rol
fcomp
shl
nop
xor
loopne
imul
sbb
popf
js
rcr
loopne
xchg
inc
sbb
jne
mov
mov
jmp
sbb
mov
mov
jle
mov
popf
jno
mov
leave
mov
add
cmp
xchg
rol
jecxz
rol
cmp
loope
shl
inc
mov
and
loopne
rcr
and
and
leave
and
idiv
sbb
and
cmp
(bad)
sbb
mov
enter
pusha
cwde
jecxz
jo
arpl
and
fucomp
enter
and
sbb
cwde
mov
arpl
js
rcr
call
rcr
jo
push
add
pop
nop
ror
jo
repz
js
cli
sub
js
pop
movs
cmp
retf
mov
pop
mov
mov
movs
test
cli
xchg
shl
xchg
and
jecxz
clc
rcl
js
xor
mov
repz
pop
sub
jge
lock
nop
and
add
and
sbb
loope
pop
hlt
lock
cli
xchg
and
movs
jno
pop
sbb
pusha
fcom
lods
test
mov
sub
clc
sbb
cmp
and
movs
loope
rcr
enter
icebp
mov
arpl
xchg
cmp
nop
shr
loopne
repz
clc
sub
sti
nop
(bad)
adc
lods
jno
push
std
loopne
pop
jge
mov
cli
xchg
and
repz
inc
nop
and
lock
inc
sub
popf
test
jmp
inc
sbb
in
mov
adc
sub
ficomp
cwde
jecxz
enter
jns
pop
sbb
repz
scas
xor
fwait
mov
test
imul
adc
xchg
clc
jo
hlt
inc
mov
shl
pusha
and
sub
js
arpl
shl
movs
jo
sti
sbb
fadd
sub
enter
nop
rcl
loope
push
test
inc
or
enter
jae
xor
mov
nop
rcl
jmp
and
sub
pop
enter
mov
movs
mov
rol
call
nop
shl
clc
cmp
fwait
xchg
ror
js
pop
or
loope
mov
jo
cli
xchg
jo
arpl
adc
pusha
std
jmp
sub
call
nop
fcomi
clc
fdiv
sbb
cmp
cmc
js
pusha
sbb
pop
and
xchg
inc
lock
js
mov
dec
sub
nop
dec
and
leave
nop
mov
sbb
cwde
cli
mov
add
mov
sbb
mov
sbb
int
lock
js
cmp
enter
test
xchg
mov
push
js
mov
loopne
push
xchg
enter
loopne
mov
jo
pop
xchg
jo
arpl
inc
shl
adc
lds
enter
sbb
cmc
shr
and
fdivr
jecxz
cwde
mov
inc
lds
mov
rcr
sub
and
fadd
cli
pushf
inc
mov
test
push
jno
arpl
clc
icebp
ret
and
add
(bad)
nop
mov
fdivr
jecxz
enter
sbb
jne
cdq
xor
sbb
nop
clc
fwait
cmc
fsub
shl
lock
(bad)
arpl
mov
nop
mov
inc
mov
or
repz
inc
loopne
(bad)
pusha
sbb
rcl
sbb
inc
mov
mov
and
inc
and
jmp
sub
movs
push
enter
lock
repz
and
jmp
jnp
pusha
sbb
xchg
enter
mov
mov
clc
nop
jmp
mov
shl
sti
nop
repz
nop
mov
aam
shl
cmp
jnp
sbb
sti
sub
test
fwait
int3
leave
mov
(bad)
fild
call
and
jo
arpl
leave
sub
xchg
inc
mov
ficom
jo
mov
loopne
retf
sbb
dec
mov
xchg
enter
inc
fdivr
call
fcom
pushf
leave
test
xchg
mov
ret
xchg
inc
fdivr
call
sbb
test
test
xchg
mov
retf
and
sub
rcr
add
je
shl
mov
xchg
js
mov
nop
xchg
imul
nop
mov
inc
and
xchg
js
push
les
mov
xchg
es
mov
int3
and
xor
jg
clc
cdq
jmp
add
adc
daa
dec
and
fs
jmp
fs
daa
and
leave
and
movs
ds
fs
jg
cli
and
fs
and
daa
leave
and
movs
fisub
fs
jg
mov
and
daa
and
clc
and
fs
in
daa
fs
jg
clc
and
fs
and
adc
jg
cli
daa
jg
(bad)
push
fmul
mov
ret
jg
mov
fwait
mov
jo
imul
xchg
sti
movs
fnstsw
sbb
sbb
xor
(bad)
mov
mov
shl
test
mov
sub
test
and
fld
xchg
pop
mov
sbb
lahf
cmp
fnstsw
out
fwait
pusha
cmp
and
mov
add
in
mov
int3
mov
(bad)
xlat
ret
bnd
dec
leave
and
lea
ds
in
and
hlt
fisubr
mov
lods
sbb
cmp
das
sub
push
and
jp
pop
enter
jecxz
mov
mov
shr
daa
test
nop
jmp
mov
inc
outs
dec
and
jmp
retf
and
inc
pop
cmp
push
adc
adc
adc
aam
in
(bad)
fst
std
jge
in
lock
aas
loop
cmp
fdiv
xchg
pop
bound
mov
xlat
sti
shr
jo
sbb
pop
clc
aaa
(bad)
imul
sbb
je
es
call
adc
arpl
dec
outs
cmp
sub
call
adc
ja
cmp
push
(bad)
mov
std
test
aam
mov
je
dec
mov
add
pop
mov
mov
mov
ror
sub
pop
sub
pop
adc
outs
pop
adc
pop
xchg
mov
je
hlt
(bad)
ins
fdiv
push
mov
ins
push
frstor
mov
std
iret
in
push
test
xadd
iret
in
push
test
scas
inc
std
iret
in
push
test
mov
std
iret
in
push
test
mov
std
iret
in
push
cmc
lea
frstor
mov
std
iret
in
push
cmc
lea
frstor
mov
std
iret
in
push
hlt
lea
frstor
mov
std
iret
in
push
hlt
lea
frstor
mov
in
iret
dec
mov
lea
sub
sub
pop
adc
xchg
add
mov
pop
sub
out
xchg
push
aas
ret
addr16
(bad)
push
out
iret
popf
les
mov
mov
rol
and
iret
stos
idiv
jo
sbb
pop
and
mov
xor
and
sar
sub
mov
xchg
mov
dec
test
fwait
cmps
std
out
push
cmp
or
cmp
and
inc
(bad)
call
and
mov
pop
and
push
in
mov
push
in
mov
bound
stc
mov
adc
ret
sub
clc
in
rep
leave
mul
clc
pop
mov
and
(bad)
in
imul
cmp
and
imul
add
or
sar
or
fwait
or
mov
das
push
in
pop
or
dec
jne
mov
cld
and
in
mov
repnz
mov
and
bound
sti
pop
ret
loop
lds
aam
in
xchg
clc
stc
dec
sub
cdq
test
call
fisubr
adc
(bad)
idiv
test
add
in
mov
and
repz
and
shl
push
or
cmp
mov
cmp
bound
imul
xchg
imul
push
mov
imul
push
sub
push
cs
push
sub
adc
push
sub
push
sub
push
sub
push
sbb
pusha
mov
pop
call
adc
(bad)
mov
cmp
push
sub
adc
add
sub
adc
les
mov
mov
jo
mov
mov
sbb
div
adc
fadd
mov
idiv
push
inc
ja
popf
or
cwde
ret
or
push
xor
movs
mov
out
cmp
rcr
out
test
or
push
cli
sub
adc
jle
xor
mov
sub
ins
adc
mov
aas
cmp
mov
mov
fidivr
sar
in
push
push
xchg
jae
xor
adc
popa
cmps
sbb
leave
rcl
xchg
(bad)
ret
out
adc
add
cmp
and
sbb
jno
in
fmul
sbb
add
les
xchg
js
jg
scas
cmps
sub
out
in
(bad)
cmp
mov
out
lock
movs
scas
mov
in
cmc
or
sbb
vpunpckldq
outs
jecxz
ficom
xchg
retf
clc
sbb
xchg
(bad)
cmps
stc
mov
arpl
pop
jnp
adc
xor
xor
sub
gs
mov
or
mov
pop
ret
jo
and
inc
mov
ret
cmp
sbb
mov
je
push
mov
test
push
aam
jmp
jnp
lock
jp
mov
repnz
xchg
clc
dec
shl
ja
pop
push
jbe
ins
mov
cmc
push
jne
mov
mov
cmp
mov
clc
cmp
jmp
or
add
jle
mov
fild
xor
into
mov
or
jecxz
nop
jle
inc
sti
dec
stos
pop
xchg
jle
into
std
ficom
cmp
test
enter
or
or
cmp
and
dec
hlt
pop
or
or
hlt
pop
or
sub
and
or
dec
mov
inc
inc
xor
adc
pop
jmp
inc
clc
xor
push
pop
mov
inc
dec
(bad)
(bad)
mov
add
aam
or
mov
jecxz
or
in
dec
(bad)
clc
rcr
in
test
push
inc
add
xor
cmps
retf
shr
repz
test
fisub
cmp
aad
ds
hlt
inc
test
xlat
cmps
retf
push
sar
int3
cli
push
sti
push
sub
js
sub
je
ret
int3
mov
mov
fwait
sbb
xchg
shl
jecxz
fst
out
mov
sbb
ins
(bad)
sbb
cmp
lock
mov
mov
inc
leave
popa
repnz
jle
call
test
mov
(bad)
jp
inc
test
cwde
in
xchg
icebp
and
stos
sub
in
scas
cdq
call
fbld
mov
cmp
js
sub
out
fidivr
int
or
cli
jge
jg
not
(bad)
popf
xchg
ds
sbb
sbb
test
rcr
popa
dec
xor
or
test
mov
sbb
ret
dec
bound
xor
or
xor
jbe
(bad)
in
shl
cli
(bad)
das
push
icebp
mov
pop
inc
(bad)
xchg
lock
mov
mov
mov
cmps
sti
das
shl
add
xor
pop
les
sub
jns
dec
adc
ss
jmp
mov
adc
xlat
ins
mov
mov
jmp
and
(bad)
je
push
adc
ins
jnp
je
call
je
mov
adc
mov
(bad)
je
push
adc
adc
push
push
mov
int
pusha
jg
(bad)
fst
sub
imul
jb
inc
shr
movs
jmp
aaa
fst
daa
cmp
cmp
call
mov
xchg
stos
cmp
xchg
stos
cmp
(bad)
stos
cmp
lahf
stos
cmp
sahf
stos
cmp
xchg
stos
cmp
sub
out
mov
(bad)
and
sar
and
mov
daa
test
out
stos
cmp
and
push
cmp
and
cwde
(bad)
aas
pushf
dec
test
pushf
mov
(bad)
aas
pushf
sbb
aas
pushf
xor
aas
pushf
fcomi
aas
pushf
fstp
ds
adc
(bad)
pushf
add
cmp
pushf
fwait
sti
aas
pushf
and
(bad)
pushf
fwait
(bad)
arpl
cmp
pushf
fisttp
cmp
pushf
imul
pushf
dec
cmps
or
jns
pushf
mov
or
fwait
add
out
pushf
jmp
aas
pushf
cmp
cmp
sub
aas
pushf
sub
ds
and
cmp
pushf
(bad)
pushf
and
pushf
imul
sub
leave
pushf
push
nop
ds
imul
pushf
jmp
cmp
pushf
repz
pushf
sbb
pushf
mov
push
cmp
xchg
aas
pushf
jecxz
cmp
pushf
and
cmp
pushf
mov
and
rcl
ds
pop
test
pushf
retf
mov
pushf
xor
pushf
stos
sahf
aas
pushf
sub
add
mov
pushf
imul
call
and
and
sbb
mov
jae
mov
ret
adc
jae
adc
add
adc
fist
adc
xor
adc
jecxz
pop
mov
sbb
repz
mov
pop
mov
sbb
jae
push
mov
and
push
mov
je
mov
sbb
mov
dec
(bad)
mov
sbb
mov
cmps
adc
mov
dec
sbb
ret
xchg
adc
fcmovne
adc
add
dec
mov
dec
dec
mov
rcl
inc
into
ins
xchg
fwait
stc
ins
xchg
xor
ins
xchg
jecxz
ins
xchg
or
xchg
sub
xchg
jecxz
ins
xchg
or
adc
xchg
mov
imul
lods
push
ret
pop
ins
xchg
fwait
leave
lods
xchg
fwait
or
lods
mov
scas
mov
or
mov
xchg
mov
mov
outs
movs
mov
imul
mov
mov
mov
cmp
mov
push
mov
mov
jg
mov
inc
test
jecxz
or
leave
xchg
(bad)
imul
lahf
repz
lahf
mov
mov
sbb
lahf
imul
lahf
cmp
fist
lahf
adc
mov
mov
mov
lahf
xchg
mov
lods
lahf
jae
cmp
pop
aam
sbb
aaa
sub
cmp
mov
out
add
out
mov
out
mov
cmp
and
test
and
sbb
cmp
test
sar
sub
test
mov
repz
mov
ja
mov
mov
cmp
test
mov
xor
jge
or
rcr
push
jmp
cmp
xchg
ret
cmp
div
aas
cld
push
or
loopne
pop
data16
inc
(bad)
lods
or
jb
jb
aas
mov
test
out
loope
shr
loope
mov
adc
in
mov
loop
xor
jecxz
fcom
out
jmp
out
lods
cmp
and
arpl
cmp
enter
test
mov
push
iret
sbb
xor
pusha
push
sbb
sbb
fdivr
cmc
(bad)
jmp
test
and
and
adc
arpl
add
mov
in
imul
addr16
push
mov
jbe
clc
es
pop
fist
push
dec
cmp
and
inc
sbb
cmps
ret
loop
push
js
repnz
xchg
popf
fisttp
fist
sbb
in
stos
(bad)
and
ficom
stos
add
in
adc
ret
lahf
jp
xor
cmp
adc
cwde
fnstsw
sbb
push
loope
fidivr
sbb
jg
cmp
cmps
rol
and
div
popf
(bad)
movs
jmp
and
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
movs
add
dec
cmps
add
add
add
dec
mov
and
add
pop
movs
or
push
mov
xor
adc
pop
movs
sub
shl
pop
movs
test
xor
adc
pop
movs
shl
test
movs
adc
pop
movs
clc
and
add
dec
mov
xor
sbb
adc
add
dec
movs
sbb
mov
xor
mov
and
adc
jmp
ins
adc
cdq
mov
xor
adc
pop
movs
call
xor
adc
pop
cmps
and
jno
add
dec
mov
sub
or
ins
movs
ds
dec
cld
add
dec
add
ds
dec
cld
add
dec
add
ins
movs
ds
dec
cld
add
dec
inc
add
ins
movs
ds
dec
pushf
add
dec
movs
add
ins
mov
dec
movs
or
dec
(bad)
fldenv
js
cmp
ret
push
mov
cmp
mov
fistp
adc
cmp
add
lods
movs
cmp
inc
shl
pushf
sbb
xchg
inc
adc
in
lds
add
ins
fs
add
lods
movs
cmp
add
test
pushf
loope
xchg
inc
adc
pushf
dec
lds
add
ins
pushf
pop
lds
add
ins
in
ror
and
push
add
lods
movs
cmp
pushf
loope
xchg
adc
pushf
push
ror
and
dec
lds
add
ins
in
push
dec
add
push
add
lods
movs
cmp
pushf
mov
jns
lods
push
ror
and
mov
adc
dec
mov
cmp
movs
add
and
or
dec
fsub
add
dec
sub
push
movs
add
shl
add
inc
add
sbb
and
add
or
add
ins
mov
lds
add
jbe
mov
add
test
popa
add
inc
add
ins
mov
lds
add
jno
pop
std
mov
loope
jno
add
add
call
mov
loope
popa
movs
add
dec
jns
and
fwait
sbb
inc
adc
dec
inc
add
ins
mov
lds
add
jno
pop
std
mov
and
and
push
xchg
pop
sub
or
dec
pushf
or
mov
and
adc
and
adc
and
adc
and
jno
add
add
dec
call
sbb
inc
mov
adc
cld
sbb
adc
xor
sbb
add
pushf
dec
inc
dec
add
ins
mov
add
scas
in
sbb
test
popa
add
test
and
ins
pushf
pop
inc
dec
inc
add
ins
mov
inc
dec
in
add
jno
pop
ins
test
popa
add
mov
and
mov
and
ins
mov
inc
dec
mov
pop
ins
mov
popa
add
call
mov
and
call
add
pop
inc
dec
mov
pop
ins
mov
add
dec
lods
adc
inc
movs
add
mov
xor
test
and
mov
and
movs
add
and
inc
cmp
loope
adc
rcl
add
sub
es
movs
mov
loope
mov
popa
add
add
mov
dec
cld
and
jno
add
add
push
movs
dec
sbb
and
add
rcl
add
adc
sbb
and
dec
mov
and
jns
jbe
mov
add
test
popa
add
push
movs
dec
sbb
and
inc
movs
pop
adc
add
pop
lods
or
jns
add
es
add
mov
jno
add
or
and
add
loopne
add
jno
add
ror
and
movs
add
and
mov
and
mov
pop
mov
xor
xor
mov
jns
in
sbb
mov
mov
and
cld
add
mov
and
push
movs
add
shl
loope
mov
add
test
mov
and
movs
xchg
sbb
and
adc
loopne
movs
add
rcl
popa
dec
cld
and
jo
add
add
push
movs
xchg
sbb
and
add
xor
and
dec
cld
and
call
add
and
xchg
sbb
and
fnstenv
sub
cwde
and
pop
cmp
inc
sub
add
dec
je
or
add
push
mov
xor
inc
add
ins
test
add
in
movs
cmp
pushf
loope
frstor
jns
pushf
push
or
dec
test
add
dec
add
xor
movs
add
mov
ins
movs
cmp
add
adc
rcl
add
jmp
add
in
movs
cmp
and
in
movs
cmp
and
dec
movs
and
push
sbb
and
mov
push
dec
add
rcl
add
rcl
add
jmp
mov
sub
or
inc
rcr
inc
movs
push
adc
add
outs
movs
pop
sbb
and
outs
movs
pop
sbb
mov
and
pop
sbb
shl
add
outs
movs
pop
sbb
loope
dec
add
imul
sub
push
mov
pop
xchg
pop
nop
xor
cmp
mov
xor
mov
pop
xchg
pop
add
sbb
and
adc
loopne
adc
cmp
and
imul
inc
cmp
loope
adc
loopne
movs
add
dec
adc
rcl
add
in
movs
cmp
and
jns
add
sub
loope
ins
movs
inc
cmp
loope
adc
rcl
add
jmp
add
imul
cmp
dec
add
dec
add
sbb
and
jmp
cmp
es
xchg
or
dec
movs
sbb
push
fmul
and
sub
ins
xchg
fld
dec
movs
or
dec
mov
add
add
ins
mov
test
add
jo
pop
xchg
mov
mov
and
mov
and
adc
in
movs
cmp
fwait
and
ins
in
add
ins
in
inc
dec
add
jns
popf
loope
std
adc
pushf
push
or
dec
test
add
ins
pushf
pop
test
add
ins
mov
or
rol
add
icebp
xor
dec
and
jns
popf
loope
std
adc
xchg
push
or
or
dec
mov
sub
or
ins
movs
ds
dec
cld
add
dec
add
ds
dec
cld
add
dec
add
ins
movs
ds
dec
cld
add
dec
inc
add
ins
movs
ds
dec
pushf
add
dec
movs
add
ins
mov
dec
movs
or
dec
(bad)
stc
movs
imul
pusha
xor
sbb
mov
adc
cwde
pop
fst
(bad)
cmp
add
imul
cmp
inc
shl
popf
sbb
mov
adc
in
lds
add
ins
fs
add
lods
movs
cmp
add
cmp
loope
mov
adc
pushf
dec
lds
add
ins
pushf
pop
lds
add
ins
in
ror
and
push
add
lods
movs
cmp
popf
loope
mov
adc
pushf
push
ror
and
lds
add
ins
in
push
dec
add
push
add
lods
movs
cmp
popf
mov
jns
lods
push
ror
and
mov
adc
dec
mov
cmp
movs
add
and
or
dec
fsub
add
dec
sub
push
movs
add
shl
add
inc
add
sbb
and
add
or
add
ins
mov
lds
add
jbe
mov
add
test
popa
add
inc
add
ins
mov
lds
add
jo
pop
fisttp
mov
loope
jno
add
add
mov
loope
popa
movs
add
dec
pop
and
icebp
fwait
sbb
inc
adc
dec
inc
add
ins
mov
lds
add
jo
pop
fisttp
movs
add
daa
push
std
add
or
adc
cmc
loopne
and
fcom
(bad)
add
dec
cmp
imul
mov
mov
ror
dec
sbb
add
push
adc
arpl
(bad)
fistp
jb
mov
loop
or
fmul
jns
mov
int
xchg
jb
sub
pop
aaa
and
pop
daa
mov
cli
cmp
mov
out
cdq
fucomp
dec
js
and
sar
cmp
aad
popf
mov
dec
cmp
fs
add
mov
mov
and
pop
mov
mov
cmp
mov
dec
or
xor
cmp
mov
call
cmps
xor
js
shl
movs
or
mov
adc
js
mov
or
js
mov
and
mov
mov
cmps
xor
js
popa
stc
call
cmps
xor
js
mov
or
mov
add
js
mov
or
js
mov
or
js
mov
add
mov
mov
cmps
xor
js
add
jmp
or
and
jle
test
cmps
xor
js
mov
fimul
aad
nop
add
add
pop
sub
rcl
dec
xchg
and
pop
add
xchg
ficom
lahf
les
pop
dec
xchg
fst
lahf
mov
or
pop
(bad)
aad
sahf
add
shl
sub
rcl
dec
mov
sub
cmps
test
jmp
xchg
std
mov
movs
push
jno
cmp
aad
popf
mov
cmp
sbb
cmp
mov
sar
xor
mov
add
xor
mov
mov
adc
clc
mov
cmps
xor
js
mov
cmovns
xor
sar
add
mov
mov
cmp
dec
cmp
and
cmp
mov
mov
int
cmp
and
cmp
mov
sar
xor
mov
js
and
aad
popf
mov
xor
movs
lahf
xor
(bad)
mov
mov
xchg
cmp
sar
xor
mov
push
cmp
and
and
mov
xchg
loope
cmp
mov
sbb
std
push
cmp
mov
inc
cmp
loope
cmp
aad
popf
mov
push
cmp
jns
inc
popf
mov
dec
cmp
adc
cmp
mov
aad
inc
mov
out
fmul
aad
sahf
fs
movs
mov
fst
adc
sbb
aad
popf
mov
aad
popf
mov
sbb
dec
cmps
aad
popf
mov
fidivr
push
or
and
cmps
mov
stc
aad
popf
mov
pop
cmps
mov
sar
add
mov
aad
popf
mov
dec
cmp
add
cmp
mov
push
xchg
cdq
popf
xchg
sbb
add
out
sub
movs
sahf
xor
and
cmp
mov
push
cmps
sbb
aad
popf
mov
aad
in
aad
popf
mov
addr16
sub
sar
xor
mov
aad
lahf
mov
(bad)
cmp
(bad)
cmp
mov
inc
test
cmp
or
loope
push
and
cmp
mov
dec
cmp
and
cmp
mov
xchg
cmp
fs
add
mov
dec
mov
or
adc
inc
ds
add
mov
fst
stos
add
call
popf
mov
aad
popf
mov
inc
movs
adc
inc
fmul
pop
movs
add
inc
sbb
in
xor
call
cmp
mov
(bad)
sar
jecxz
push
popf
shr
push
mov
sub
push
adc
add
aad
popf
mov
aad
sahf
mov
dec
cmp
sub
cmp
mov
xchg
nop
popf
jge
mov
and
dec
movs
and
dec
cmp
not
cmp
mov
adc
or
aad
popf
mov
(bad)
jg
pop
cmps
cdq
mov
cmp
aad
popf
mov
cmc
movs
sahf
mov
dec
cmp
adc
cmp
mov
dec
aas
mov
out
stc
fsub
cmp
xor
cmp
aad
popf
mov
dec
nop
pop
(bad)
push
mov
and
dec
movs
and
dec
cmp
not
cmp
mov
adc
(bad)
aad
popf
mov
or
clc
dec
mov
mov
popf
mov
push
mov
add
test
xchg
lods
cli
xchg
cmp
loopne
cmp
mov
aad
popf
mov
aad
popf
mov
aad
popf
mov
push
mov
cmp
add
and
sub
js
and
adc
mov
mov
aad
popf
mov
aad
popf
mov
aad
popf
mov
cmc
cmp
mov
push
xchg
sbb
or
xchg
out
ficomp
pop
add
xchg
ficom
nop
cmp
add
movs
adc
dec
cmp
and
cmp
mov
movs
sub
dec
cmp
adc
add
mov
add
inc
pop
aad
add
mov
aad
popf
mov
aad
popf
mov
pop
cmp
aad
add
mov
jg
cdq
adc
aad
popf
mov
data16
or
dec
aas
fist
out
fdiv
mov
mov
cmps
xor
js
loope
cdq
cmp
(bad)
cmp
mov
fsub
and
cmp
mov
push
cmps
mov
sti
aad
popf
mov
adc
cmp
mov
cmp
mov
(bad)
xchg
cwde
popf
xchg
jmp
and
add
add
cmp
mov
xchg
movs
sub
cmp
and
cmp
mov
pop
movs
mov
sar
add
mov
addr16
xor
xlat
movs
lahf
xor
(bad)
cmp
mov
sub
dec
(bad)
sar
xor
mov
(bad)
and
mov
dec
cmp
mov
xchg
fld
push
cmp
mov
mov
sar
add
mov
cmps
mov
push
dec
movs
sbb
movs
cmp
jns
cmp
adc
cmp
mov
movs
cmp
jns
cmp
adc
clc
popf
mov
aam
and
mov
mov
add
cmp
mov
clc
cmp
aad
add
mov
mov
xor
cmp
mov
sbb
inc
aad
add
mov
xchg
cmps
cdq
sub
inc
mov
jo
jle
(bad)
fcomp
int
movs
xor
dec
aas
sub
sar
xchg
sub
cmp
mov
jbe
add
cmp
mov
or
sub
lods
and
lock
mov
push
push
jno
cmp
mov
cmp
mov
sbb
cmps
aad
add
mov
pop
movs
push
jae
cmp
mov
cmp
mov
pop
movs
data16
cmp
aad
popf
mov
leave
cmp
and
cmp
mov
shl
mov
aad
add
mov
dec
cmp
mov
or
cmp
lods
and
call
sahf
mov
or
sbb
inc
movs
xor
pop
cmp
add
movs
adc
dec
cmp
aad
popf
mov
jg
sbb
mov
aad
popf
mov
add
fwait
mov
aad
push
mov
fsub
and
cmp
mov
aad
popf
mov
jge
imul
sub
mov
xlat
cmp
aad
popf
mov
aad
lahf
mov
dec
cmp
mov
(bad)
cmp
popf
inc
cmp
aad
popf
mov
push
cmps
xor
js
mov
sub
cmp
aad
popf
mov
adc
mov
mov
enter
sar
xor
mov
push
mov
cdq
xor
cmp
aad
popf
mov
adc
cmp
mov
push
add
aad
pop
mov
mov
push
cmp
lods
bound
pop
pop
pusha
mov
loope
dec
cmp
mov
shl
mov
aad
add
mov
dec
cmp
popa
sar
add
mov
mov
cwde
mov
pop
cmps
cwde
push
aad
popf
mov
aad
popf
mov
aad
popf
mov
aad
popf
mov
stos
neg
xor
add
mov
sar
pop
cmps
push
cmp
sar
add
mov
push
add
mov
sub
dec
hlt
ficom
push
call
cmp
mov
sar
inc
(bad)
aad
add
mov
dec
cmp
aad
popf
mov
sub
mov
aad
popf
mov
or
mov
aad
popf
mov
xchg
cmp
sar
add
mov
dec
cmp
mov
shl
mov
aad
add
mov
dec
xor
popa
sar
add
mov
mov
pop
es
inc
sti
or
sbb
push
pop
xor
xchg
dec
cs
cmp
sar
add
mov
aad
or
mov
push
cmps
xor
js
loope
aad
popf
mov
js
loope
loop
add
js
loope
aad
popf
mov
aad
popf
mov
dec
movs
xor
dec
cmp
and
cmp
mov
lahf
cmp
(bad)
aad
add
mov
dec
cmp
adc
cmp
mov
js
shl
cmp
mov
dec
or
in
mov
clc
xor
inc
mul
mov
movs
xlat
adc
add
aad
add
mov
xchg
cmps
inc
sub
and
inc
cmp
push
dec
cmp
adc
cmp
mov
sahf
cld
imul
push
mov
stos
dec
pop
push
or
cmp
cmps
pop
dec
js
inc
not
dec
popf
mov
js
cmp
aad
popf
mov
sar
dec
aad
ficomp
mov
inc
push
(bad)
(bad)
adc
cmp
sar
xor
mov
jo
pop
int
cmp
mov
xor
cmp
imul
popf
mov
and
adc
popa
not
in
popf
mov
sub
pop
(bad)
sar
xor
mov
dec
movs
cwde
mov
loope
icebp
adc
xor
adc
adc
loope
push
and
cmp
and
and
mov
aad
call
cmp
mov
aad
add
mov
aad
popf
mov
push
cmps
cdq
mov
mov
cmp
leave
adc
cmp
sar
xor
mov
adc
cmp
aad
popf
mov
mov
pop
popf
mov
sahf
movs
imul
movs
push
cmp
rcl
add
neg
nop
movs
sub
dec
cmp
and
cmp
mov
movs
cwde
sbb
dec
cmp
mov
aad
pushf
mov
aad
popf
mov
aad
lahf
mov
aad
popf
mov
pabsw
aad
popf
mov
movs
lods
cwde
cmp
jno
test
clc
dec
cmp
and
cmp
mov
js
cmp
js
loope
dec
jge
shr
cmps
xor
js
sar
cmp
and
cmp
mov
test
cmp
and
cmp
mov
aad
fnstsw
aad
popf
mov
sar
xor
mov
adc
cmp
aad
popf
mov
aad
popf
mov
aad
cdq
mov
cwde
jo
jns
cmp
aad
popf
mov
aad
popf
mov
imul
fmul
cmp
sar
xor
mov
aad
lahf
mov
mov
sbb
or
nop
add
sbb
icebp
sub
cmp
mov
aad
popf
mov
xchg
cmp
mov
aad
popf
mov
push
xchg
cdq
popf
lahf
cmp
loope
cmp
mov
push
mov
mov
pop
xor
idiv
aad
popf
mov
dec
cmp
fs
add
mov
popa
cld
pop
ds
cmp
adc
cmp
mov
aad
fwait
mov
popf
cmp
mov
test
movntps
add
mov
cs
and
cmp
adc
cmp
mov
add
and
cmp
mov
jno
cmp
add
and
jne
and
lea
and
mov
push
mov
and
sbb
inc
mov
das
mov
jnp
xor
retf
mov
xor
clc
int
pop
in
mov
cmp
inc
(bad)
call
and
and
cmp
sub
mov
push
mov
and
cmps
shl
push
cmp
lds
xor
or
jge
push
lods
iret
and
sbb
repnz
mov
shr
ret
out
sub
(bad)
cwde
xchg
cmp
in
adc
lock
lds
jmp
mov
sbb
cmp
or
test
in
sbb
cmp
js
mov
pop
mov
and
and
and
add
shl
jecxz
fst
cmp
fstp
xor
lock
xchg
out
mov
xchg
out
loop
ins
mov
sar
lock
jmp
int
enter
(bad)
push
push
sub
pop
fs
adc
sbb
cmp
repnz
push
add
jge
push
loope
push
cmps
sbb
adc
(bad)
and
ficom
and
cli
mov
pop
js
cld
push
mov
cdq
ret
loopne
push
fs
cmp
lock
jl
ret
retf
fisubr
cmp
cmp
xchg
lock
retf
mov
popa
cmp
xor
add
push
sub
ror
call
pop
(bad)
in
sub
test
dec
mov
repz
jmp
retf
test
inc
adc
in
fadd
cwde
push
(bad)
(bad)
jl
(bad)
jne
sub
jl
imul
rcr
push
imul
inc
mov
pop
sti
sbb
ss
cld
sub
push
nop
jnp
repz
out
xor
loopne
mov
cmp
(bad)
adc
inc
out
stos
cmp
xchg
mov
in
ins
scas
cmp
fdiv
pop
push
pshufw
test
jmp
hlt
out
add
cmp
xor
out
dec
push
xchg
xor
push
pop
iret
cdq
inc
inc
sbb
outs
repnz
mov
jo
and
add
clc
call
and
inc
out
cmps
cmp
and
and
in
daa
test
out
push
inc
cmp
daa
test
sub
inc
jno
daa
jo
mov
jne
aaa
std
fisttp
mov
cmp
and
stos
in
nop
add
xor
cmp
and
or
ins
jb
aad
xor
or
jl
and
jno
and
dec
mov
pop
ds
sbb
xor
clc
adc
jg
push
(bad)
and
scas
stc
rol
arpl
add
dec
cmp
clc
es
ret
mov
ins
(bad)
in
sbb
inc
sbb
xchg
lock
pop
pop
xor
out
cmp
push
sub
bound
(bad)
(bad)
cmp
cld
sbb
cmps
xchg
call
loop
fistp
(bad)
in
add
out
js
push
ffreep
push
jb
sbb
out
dec
jnp
jg
sbb
push
inc
jae
xor
push
stos
push
into
call
mov
inc
jg
cmp
out
pushf
ret
or
fild
test
icebp
push
fldcw
rcl
repnz
sub
aas
pop
mov
jmp
mov
inc
aad
jmp
ror
push
inc
sbb
sahf
sub
outs
sbb
enter
mov
and
mov
movs
(bad)
pop
stos
inc
out
test
rcr
cmp
jns
in
sbb
cmp
jmp
push
sub
pop
sub
out
mov
cmp
and
pop
jae
ja
and
push
add
out
cmps
out
fcomp
jecxz
add
jo
and
push
sbb
pop
not
jmp
retf
mov
mov
gs
sti
xchg
mov
aas
and
lods
leave
sub
add
out
imul
mov
(bad)
jns
es
fs
and
imul
mov
repnz
rol
imul
fst
rcr
or
std
xor
cmc
mov
and
movs
mov
test
cmc
mov
sbb
inc
stos
cmp
out
psubusb
dec
ds
push
bound
retf
pop
cmp
and
or
ret
repz
jp
cmp
add
xabort
aas
jb
fidiv
xor
xor
ret
sub
push
in
mov
or
pop
and
rcr
and
cmp
push
cli
sbb
std
stos
call
fisubr
jbe
sub
or
(bad)
retf
mov
push
aaa
inc
sub
or
(bad)
dec
cmp
scas
inc
adc
aaa
inc
and
or
(bad)
xchg
cld
mov
aaa
inc
and
or
(bad)
xchg
fmul
test
aaa
pusha
sbb
pop
and
xchg
inc
adc
mov
pop
inc
cmp
pop
and
iret
mov
sub
addps
(bad)
or
xchg
dec
cmp
pop
push
sub
pop
push
sub
or
xchg
xchg
clc
mov
aaa
inc
and
or
xchg
xchg
fmul
test
aaa
pusha
sbb
pop
and
xchg
pop
push
sub
pop
inc
cmp
pop
and
into
mov
sub
addps
(bad)
or
xchg
dec
cmp
pop
push
sub
pop
push
sub
or
xchg
xchg
stc
mov
aaa
inc
and
or
xchg
xchg
(bad)
test
aaa
pusha
sbb
pop
and
xchg
pop
push
push
aas
pop
sub
or
(bad)
iret
mov
push
aaa
inc
sub
or
(bad)
dec
cmp
inc
adc
aaa
inc
and
or
(bad)
xchg
clc
mov
aaa
inc
and
or
(bad)
xchg
fmul
test
aaa
pusha
sbb
pop
and
xchg
inc
adc
aas
pop
sub
or
(bad)
into
mov
push
aaa
inc
sub
or
(bad)
dec
cmp
inc
adc
aaa
inc
and
or
(bad)
xchg
stc
mov
aaa
inc
and
or
(bad)
xchg
(bad)
test
aaa
pusha
sbb
pop
and
xchg
inc
adc
lahf
pop
inc
cmp
pop
and
into
mov
stos
xor
sub
or
push
dec
cmp
xchg
stos
cwde
aaa
inc
and
or
push
xchg
stc
mov
aaa
inc
and
or
push
xchg
(bad)
test
aaa
pusha
sbb
pop
and
xchg
xchg
or
pop
inc
cmp
pop
and
retf
mov
or
addps
(bad)
or
mov
cmp
scas
daa
jo
cwde
aaa
inc
and
or
mov
cld
mov
aaa
inc
and
or
mov
fmul
test
aaa
pusha
sbb
pop
and
xchg
daa
jo
mov
pop
retf
std
movs
fwait
mov
mov
fwait
mov
mov
fwait
mov
mov
fwait
mov
mov
fwait
mov
mov
xor
inc
sub
sub
rcr
adc
test
retf
cmp
mov
xor
inc
sub
and
rol
adc
xchg
out
cmp
mov
xor
inc
sub
cmp
rcl
jb
test
pushf
inc
(bad)
cwde
out
cmp
mov
xor
inc
sub
sbb
shl
jb
test
pushf
inc
inc
fwait
mov
mov
xor
inc
sub
adc
sar
jb
test
pushf
inc
(bad)
mov
fwait
mov
mov
xor
inc
sub
sub
rcr
add
test
test
fwait
mov
mov
xor
inc
add
cmp
add
cdq
out
push
sub
or
test
push
dec
ins
xchg
inc
ret
pop
sub
push
inc
ret
push
dec
xchg
ret
inc
sub
add
cwde
out
push
sub
or
test
pusha
sub
and
sub
sub
push
inc
ret
push
dec
xchg
fisub
push
pop
ficom
adc
pusha
fidivr
adc
push
fcmovb
adc
pusha
(bad)
adc
pop
and
add
data16
mov
cmp
or
mov
test
pop
or
ss
aaa
dec
xor
ficomp
or
test
pushaw
aaa
mov
imul
push
mov
dec
mov
mov
add
add
shl
sbb
ror
sbb
jp
(bad)
cmp
mov
mov
outs
and
ds
div
out
es
cmp
pusha
mov
mov
adc
lock
xchg
aas
test
dec
test
mov
aam
mov
cmps
aam
loope
fimul
mov
inc
inc
sbb
sbb
out
jnp
shr
add
shl
dec
arpl
push
aas
mul
mov
shr
jo
and
(bad)
loop
and
rcr
bound
ret
loope
push
mov
std
popf
fwait
sub
not
test
repz
sub
lock
pop
out
idiv
sub
test
cmc
addr16
mov
add
cdq
mov
adc
pushf
sbb
ret
mov
fidiv
or
pop
mov
shl
jo
int
add
jge
push
in
pop
arpl
lods
in
mov
jge
div
mul
cmp
imul
call
sbb
inc
rcl
in
mov
push
mov
add
aaa
leave
add
jb
cmp
pop
ret
or
push
add
pop
pop
xor
ds
pop
ja
xchg
aad
jno
cmp
clc
mov
jae
xor
add
dec
push
arpl
xchg
dec
arpl
dec
arpl
dec
dec
or
push
mov
shr
in
test
arpl
aad
out
or
adc
pop
(bad)
std
cmove
arpl
dec
arpl
dec
dec
lods
or
stc
sub
push
arpl
aad
arpl
dec
dec
sbb
or
adc
gs
cmps
retf
loopne
scas
pop
dec
arpl
dec
dec
xor
dec
div
sahf
mov
loopne
iret
pop
popa
clc
gs
sub
xchg
dec
xor
into
cmp
mov
dec
dec
mov
dec
mul
test
dec
push
or
dec
mov
ja
shr
dec
(bad)
shl
sub
xchg
dec
dec
adc
dec
mov
push
ret
scas
pop
dec
arpl
dec
dec
arpl
dec
dec
mov
mov
dec
adc
dec
out
or
dec
ror
dec
in
std
cmovns
(bad)
jmp
or
scas
into
pop
std
out
pop
jecxz
outs
sub
pop
std
cmps
xlat
jecxz
fild
and
shl
(bad)
add
xlat
ret
dec
test
movs
and
jp
aaa
in
test
loope
mov
jo
pop
mov
test
shl
or
js
lds
and
pop
sbb
imul
xor
jo
out
aaa
cmp
gs
mov
loop
ror
push
test
loope
adc
mov
mov
inc
inc
sbb
pop
cmp
ins
xlat
or
aaa
jp
sbb
cmp
mov
ficom
jmp
cmp
and
arpl
(bad)
pop
adc
sbb
call
pop
sbb
pushf
in
mov
adc
and
jae
div
and
fs
adc
or
jb
dec
jmp
dec
cmp
mov
sbb
in
sub
and
jp
daa
mov
add
cld
gs
shl
cmp
mov
cld
sar
jo
in
mov
sub
loop
test
cmp
jge
inc
cli
cld
xchg
xor
aam
call
(bad)
mov
pop
in
adc
adc
call
lahf
push
pushf
jno
mov
fs
cli
lods
adc
std
xchg
ds
and
out
shl
nop
jmp
psrlw
mov
cmps
aam
rol
xor
dec
sahf
jb
cld
xor
clc
repz
xchg
das
fsub
jl
jg
push
ficom
add
push
inc
push
inc
scas
sar
and
jno
adc
pusha
dec
cli
xor
jae
push
mov
mov
scas
mov
es
in
dec
sahf
in
rcr
aam
ror
outs
rcr
dec
inc
cld
push
mov
inc
xor
dec
push
aam
push
push
jl
dec
mov
or
cmp
add
dec
jno
addr16
movs
mov
mov
or
add
(bad)
and
fwait
cmp
jg
mov
aas
and
call
add
data16
dec
mov
cmp
out
cmp
and
and
ja
das
call
or
stc
adc
mov
gs
int
sbb
cmp
stos
lods
jl
cmp
dec
test
js
packuswb
push
push
shr
test
pop
hlt
sub
in
loope
das
(bad)
push
inc
imul
mov
mov
sub
push
add
add
jecxz
mov
or
call
call
fst
jecxz
jp
and
daa
jl
sbb
fwait
ret
repnz
aaa
jl
cmp
and
jmp
jg
fstp
sbb
cmp
loopne
aaa
fst
or
test
xor
dec
jnp
xor
ds
dec
cmp
dec
cmp
cmp
aas
add
sub
test
aaa
loop
sbb
in
sbb
test
shr
mov
retf
leave
das
jg
in
jns
out
mov
jnp
xor
jp
mov
and
cmp
test
push
jecxz
push
pop
scas
mov
ds
cli
cmp
fs
mov
fs
mov
cmp
(bad)
cmp
(bad)
xchg
push
(bad)
cmp
(bad)
cmp
stc
lods
cs
xchg
cmp
pop
(bad)
cmp
pushaw
cmp
mov
mov
daa
cmp
pushaw
cmp
(bad)
fs
(bad)
fs
jle
in
and
cs
ds
sar
cs
cmp
fs
cmp
jle
push
repnz
(bad)
fs
(bad)
cmp
fs
mov
stos
leave
xchg
cs
outs
xor
pop
(bad)
fs
cmp
jbe
push
repnz
(bad)
movs
outs
ror
fsubr
(bad)
fs
jnp
fs
jnp
mov
adc
cmp
sahf
gs
(bad)
cmp
(bad)
fs
call
cs
cmp
(bad)
cmp
and
in
jp
xchg
cs
cs
pusha
cmp
cli
int3
cmp
cmp
cmps
mov
jp
xchg
cs
cs
pusha
cmp
(bad)
cmp
cli
int3
cmp
arpl
sar
mov
cli
movs
cmp
(bad)
cmp
(bad)
cmp
(bad)
fs
cs
cmp
cli
mov
call
cmps
sub
scas
cs
into
cmp
fs
mov
stos
leave
xchg
cs
outs
and
pop
(bad)
fs
cmp
outs
cs
repnz
(bad)
cmp
(bad)
movs
outs
ror
lods
cs
into
cmp
(bad)
cmp
fs
cmp
push
cs
repnz
(bad)
fs
(bad)
cmp
fs
call
xchg
cs
outs
add
pop
(bad)
fs
clc
xchg
xchg
enter
cmp
fs
outs
pop
cmp
fs
clc
xchg
mov
mov
nop
dec
(bad)
enter
into
cmp
fs
cmp
ds
jmp
(bad)
movs
outs
ror
call
cmp
clc
fs
jnp
mov
cs
cmp
mul
stos
(bad)
and
mov
push
add
mov
push
into
cmp
(bad)
cmp
cli
fs
jnp
mov
adc
cmp
fisub
(bad)
(bad)
cmp
add
in
jp
xchg
cs
cs
cmp
cld
fs
repnz
cli
int3
xchg
pop
bound
fidiv
sub
xchg
cs
into
cmp
(bad)
cmp
cld
fs
cs
repnz
(bad)
cmp
(bad)
outs
ror
lock
push
into
cmp
stc
fs
jnp
mov
push
cli
nop
cs
cmp
out
popa
cmp
fs
stos
cmp
movs
test
jnp
cs
cmp
(bad)
cmp
fs
cmp
push
cs
jmp
(bad)
cmp
fs
call
xchg
cs
jbe
cmp
(bad)
cmp
(bad)
les
ds
cs
cmp
cli
mov
icebp
sub
push
(bad)
loopne
repnz
and
and
cmp
(bad)
cmp
(bad)
cmp
(bad)
fs
cs
cmp
cli
int3
cmp
jle
cmp
(bad)
cmp
fs
mov
stos
leave
xchg
cs
jbe
cmp
stc
fs
jnp
mov
push
cli
nop
cs
cmp
outs
data16
(bad)
cmp
fs
stos
pop
loop
test
jnp
cs
cmp
(bad)
cmp
fs
cmp
xchg
cs
jmp
(bad)
cmp
fs
call
xchg
cs
jbe
cmp
(bad)
les
ds
test
fs
mov
mov
dec
lock
loopne
mov
push
cmps
cs
cmp
(bad)
cmp
(bad)
fs
cs
cmp
cli
int3
cmp
jle
cmp
cli
int3
cmp
data16
(bad)
fs
(bad)
mov
cli
movs
cmp
(bad)
fs
(bad)
fs
rol
in
jp
xchg
cs
cs
pusha
cmp
cld
fs
cs
repnz
(bad)
cmp
(bad)
fs
call
(bad)
fs
sub
jmp
test
xchg
cs
cs
pusha
cmp
(bad)
cmp
cli
int3
cmp
push
pusha
cmp
(bad)
cmp
cli
int3
cmp
push
cmp
cli
les
icebp
sub
(bad)
(bad)
loopne
repnz
and
and
cmp
cmp
jle
cmp
cld
fs
cs
repnz
(bad)
cmp
(bad)
outs
ror
lock
push
into
cmp
stc
fs
jnp
mov
push
cli
nop
cs
cmp
outs
pusha
cmp
(bad)
movs
outs
and
loopne
cs
into
cmp
(bad)
cmp
(bad)
cmp
fs
cmp
xchg
cs
jmp
(bad)
movs
outs
xor
shl
(bad)
cmp
(bad)
cmp
(bad)
les
ds
test
fs
stos
cli
mov
cmp
ficom
jmp
cli
xchg
lods
mov
mov
jmp
cli
pop
mov
pop
xchg
pop
pop
loop
jmp
lock
mov
mov
ds
jo
cmp
mov
fs
and
ds
call
adc
jp
bound
test
enter
xor
xor
adc
cmc
loopne
add
mov
xor
bt
sub
mov
mov
arpl
out
push
es
sub
out
stos
jecxz
mov
ret
push
pop
je
adc
in
adc
in
lea
sub
das
das
aas
add
mov
sub
(bad)
out
xor
fs
mov
jo
inc
div
mov
cli
pop
adc
jo
cmp
cmp
std
es
js
dec
out
fnstcw
sub
lds
cmp
js
mov
sar
xchg
cmp
cmp
in
enter
call
jb
mov
xor
out
pop
sbb
push
lods
cdq
sar
idiv
mov
ficom
test
call
stos
shl
sbb
add
xor
ficom
neg
inc
mov
shl
adc
jg
stos
sbb
xor
cmp
cmp
mov
xor
xchg
xchg
loop
adc
and
or
or
cmp
daa
sti
jp
dec
xor
sbb
(bad)
arpl
stos
xchg
sbb
call
inc
jne
sub
gs
sbb
stos
pop
loope
sbb
dec
(bad)
dec
mov
scas
cmp
sar
mov
cmp
cmp
add
aaa
and
cmp
adc
jecxz
pop
push
loop
mov
cmp
int
enter
leave
jnp
jo
xor
mov
mov
iret
fiadd
sbb
icebp
add
int
jg
ds
dec
fwait
es
loop
daa
enter
lock
dec
ret
loop
push
stos
push
out
fsub
test
aam
push
pop
or
daa
jecxz
xor
xor
and
mov
sbb
jle
shrd
jbe
add
adc
out
out
jo
lods
fs
mov
pushf
(bad)
mov
dec
out
adc
fxam
pop
ror
add
pop
in
jns
xchg
mov
clc
jne
pop
and
mov
mov
scas
retf
aam
mov
js
int
ja
jecxz
xor
in
and
in
outs
(bad)
neg
add
sbb
push
ret
push
add
div
in
sbb
fs
sbb
jnp
push
jl
clc
lea
push
fs
mov
jb
and
mov
pop
add
jae
xor
push
mov
sbb
retf
push
cmp
call
add
aas
lahf
jg
dec
pushf
push
cmp
jmp
fucomip
out
cmp
jmp
xchg
dec
jbe
cmp
out
cmp
jmp
dec
mov
cmp
out
cmp
out
mov
dec
jmp
dec
in
out
scas
dec
cmp
dec
jmp
dec
in
inc
cmp
jmp
adc
out
mov
out
outs
cmps
mov
inc
in
inc
dec
pop
int3
pop
inc
jno
mov
jbe
cli
std
pop
sub
inc
jno
mov
sbb
std
pop
in
inc
jno
ror
adc
jmp
mov
clc
int
pop
in
mov
cmp
inc
(bad)
dec
inc
iret
mov
cmp
xor
and
cmp
sub
mov
dec
pop
stos
(bad)
arpl
jg
out
mov
jbe
test
out
(bad)
popa
jae
ja
loop
push
ror
and
in
ret
sar
ins
test
or
aad
je
and
adc
xchg
ds
or
and
and
and
xchg
pop
aam
xchg
clc
(bad)
mov
aam
in
cmps
pop
stc
icebp
and
lock
push
mov
and
in
imul
(bad)
test
and
xchg
out
mov
mov
fldcw
adc
jmp
sub
arpl
add
pop
(bad)
inc
jp
sbb
daa
ret
sbb
out
mov
loop
or
clc
pop
mov
pand
push
ds
ja
mov
ficom
mov
jno
mov
and
loope
enter
rol
sbb
pop
cld
mov
ficom
pop
addr16
xor
ficomp
jo
pop
fcmovne
mov
dec
clc
movs
rcl
js
mov
mov
hlt
xchg
pop
neg
sbb
mul
ja
hlt
and
div
xchg
pop
not
mov
and
mov
cmc
hlt
mov
jb
xor
sbb
mov
push
xor
cli
pop
push
inc
mov
sub
jb
push
clc
pop
sar
mov
retf
mov
xor
mov
and
jg
jo
sbb
in
jnp
inc
mov
or
xor
in
xlat
stc
out
lea
call
out
test
mov
xor
call
ror
repz
out
xor
and
adc
cmp
sbb
out
sub
pushf
ret
sub
jne
or
sub
fdiv
ret
cdq
ficom
push
div
jbe
cli
test
div
out
jle
(bad)
jmp
aad
leave
ja
add
movs
ins
pmulhw
push
cmp
cmp
js
js
pop
je
mov
test
mov
sbb
loop
add
fsub
enter
mov
aad
shl
pop
adc
test
fst
imul
clc
cmc
lock
lds
mov
jmp
lock
std
cmp
gs
xor
xor
or
jecxz
cmp
cmp
adc
arpl
sbb
cmp
in
sbb
jg
add
mov
mov
xchg
cmp
fcomp
fimul
lock
mov
xor
fsub
pushf
jnp
mov
jmp
inc
jns
and
and
xor
jp
push
bound
addr16
xlat
ja
(bad)
xlat
inc
cmp
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
dec
sbb
pop
(bad)
cld
inc
sbb
iret
adc
inc
add
(bad)
test
scas
push
cmp
sbb
inc
inc
ret
call
popf
aam
loop
mov
loop
cmps
pop
and
fcom
icebp
gs
fs
mov
loop
hlt
add
(bad)
test
sub
not
ins
cmps
daa
sbb
xlat
outs
cmp
xlat
ja
(bad)
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
addr16
xlat
lahf
xchg
(bad)
xlat
pop
cmp
cmp
xlat
ins
cwde
fisubr
jae
jle
pop
cmp
and
cmp
aaa
cmp
cmp
push
ins
dec
pop
daa
cmp
adc
cmp
or
cmp
xchg
cmp
add
clc
xlat
ds
xchg
inc
pop
daa
jg
std
xlat
psubw
inc
aas
cmp
aaa
lahf
cmp
popa
pop
cmp
push
xchg
cmp
mov
cmp
loope
cmp
sti
test
(bad)
xlat
leave
fcom
push
mov
cld
xlat
fiadd
out
fild
inc
cli
fild
sahf
push
out
cmp
inc
out
sti
xlat
mov
cmp
add
and
xchg
ja
(bad)
xlat
xchg
mov
xor
cmp
xchg
jg
clc
xlat
pusha
pop
push
aaa
mov
stc
xlat
outs
cmp
push
out
cmp
jne
push
fld
cmp
jp
push
addr16
inc
inc
scas
sbb
dec
cmp
mov
push
out
sub
pop
dec
ds
cmp
mov
cld
xlat
sub
ret
das
cmp
xor
(bad)
adc
movs
mov
xlat
add
xor
cmp
or
stc
scas
cmp
pop
ss
cmp
sbb
xlat
in
push
or
cmp
call
cmp
bnd
xchg
cmp
std
push
push
std
scas
cmp
shl
jo
xchg
fnstsw
cmp
rol
sbb
fcomp
(bad)
xlat
movs
out
jnp
cmp
scas
dec
cs
daa
cmp
mov
mov
mov
cmp
and
cmps
cmp
lea
es
cmp
xchg
mov
call
popf
enter
cmp
bound
std
xlat
ins
pop
(bad)
pop
addr16
jb
jbe
lahf
cmp
jle
dec
dec
(bad)
xlat
inc
add
mov
sti
xlat
push
sbb
aas
cmp
pop
mov
test
inc
and
mov
call
xor
sahf
sbb
cli
xlat
ds
daa
cmp
add
jle
scas
cmp
or
fidivr
cmp
adc
(bad)
xlat
cmp
sbb
jbe
pop
cmp
in
loope
xor
cmp
lock
(bad)
sub
cmp
(bad)
push
cs
cmp
rcr
xlat
into
mov
cli
out
(bad)
xlat
shl
scas
push
mov
repz
xlat
movs
inc
jbe
xlat
cmp
test
cmp
mov
fidiv
cmp
mov
cmp
xchg
outs
pop
aaa
cmp
mov
stc
xlat
xchg
mov
stc
xlat
popf
jecxz
push
xchg
(bad)
mov
cmp
ins
dec
inc
ins
xchg
cmp
jno
cs
addr16
jnp
push
ret
(bad)
xlat
inc
ret
out
sti
xlat
dec
jnp
dec
ja
stc
xlat
push
or
jg
cli
xlat
pop
mov
call
fist
aas
cmp
sub
pop
mov
clc
xlat
xor
xchg
jb
push
adc
cmp
add
push
adc
cmp
or
sbb
cmp
adc
push
jp
cmp
sbb
fdiv
cmp
out
mov
xlat
in
dec
push
pop
div
sti
xlat
cli
sbb
xlat
lds
sti
xlat
into
mov
std
xlat
shl
cli
xlat
fcomp
xlat
cmp
mov
cmp
test
xchg
xlat
cmp
mov
ss
sti
xlat
mov
cmp
xchg
push
int
cmp
mov
clc
xlat
xchg
clc
jle
xchg
mov
out
cli
xlat
addr16
scas
test
xlat
push
cmps
lods
daa
test
xlat
jne
push
or
call
js
jle
jg
std
xlat
inc
in
data16
test
cli
xlat
push
sub
inc
test
xlat
pop
xor
sub
cld
xlat
daa
cwde
(bad)
stos
xlat
test
xlat
sub
call
xor
test
xlat
cmp
std
xlat
add
test
test
xlat
push
aam
and
test
xlat
adc
add
sti
xlat
push
fcom
push
dec
test
xlat
loope
mov
pop
test
xlat
call
test
xlat
neg
fs
test
xlat
cld
icebp
fisub
test
xlat
ret
ins
jle
fild
mov
xlat
shl
push
or
test
xlat
fcomp
inc
ja
cli
xlat
mov
test
xlat
lods
sbb
std
xlat
mov
out
pop
test
xlat
mov
test
xlat
add
xchg
cs
test
xlat
xchg
int
inc
mov
clc
xlat
(bad)
les
mov
imul
cli
xlat
jno
sahf
cmc
mov
mov
(bad)
xlat
inc
test
call
dec
xor
fild
or
(bad)
xlat
pop
in
scas
das
test
xlat
and
test
xlat
sub
or
clc
xlat
lea
xlat
cmp
fisubr
iret
test
xlat
push
xor
stc
xlat
or
push
je
xchg
test
xlat
sbb
clc
xlat
in
data16
test
xlat
jmp
test
xlat
test
xlat
clc
test
push
(bad)
je
ds
std
xlat
into
jle
mov
test
xlat
rcl
mov
xlat
(bad)
push
mov
test
xlat
mov
test
xlat
stos
retf
xchg
xor
test
xlat
mov
(bad)
jle
test
xlat
mov
test
xlat
sub
outs
test
xlat
pop
ds
test
xlat
nop
aaa
sahf
pop
stc
xlat
lahf
fcmovb
jecxz
xchg
xlat
data16
(bad)
daa
fild
push
lods
push
xchg
xlat
jne
mov
aas
xchg
xlat
jns
pop
sbb
adc
sub
cli
xlat
dec
enter
xchg
xlat
push
std
xchg
daa
xchg
xlat
pop
repnz
push
mov
cli
xlat
and
sti
xlat
sub
ins
mov
int
js
xchg
xlat
cmp
xchg
xlat
pop
and
mov
or
std
xlat
adc
xchg
xlat
sbb
es
mov
cli
xlat
out
xchg
pop
xchg
xlat
jmp
xchg
xlat
hlt
ins
push
jmp
cs
push
xchg
xlat
lds
in
xchg
xlat
into
jae
ret
stc
xlat
sar
inc
ins
fild
xchg
cld
xlat
cmps
jns
ror
xchg
xlat
scas
rol
inc
xchg
xlat
mov
out
mov
push
call
test
(bad)
jg
xchg
xlat
mov
cli
xlat
nop
sub
sahf
pop
xchg
xlat
lahf
rol
daa
xchg
xlat
addr16
(bad)
xlat
push
xchg
xlat
jno
outs
mov
jl
jbe
xchg
xchg
xlat
inc
clc
(bad)
jp
xchg
xlat
dec
adc
(bad)
inc
xchg
xlat
es
call
sub
clc
xlat
xor
clc
xlat
cmp
out
daa
mov
or
sbb
inc
movs
mov
stc
xlat
push
mov
sti
xlat
out
mov
xlat
jmp
xchg
xlat
cmc
mov
cmp
xchg
xlat
sti
loope
push
test
sti
xlat
iret
mov
scas
xchg
xlat
aad
push
daa
addr16
xlat
(bad)
inc
add
xchg
xlat
movs
jle
cmps
addr16
xlat
mov
jbe
out
xchg
xlat
mov
xchg
xlat
xchg
stc
xlat
mov
clc
xlat
xchg
or
jmp
xchg
xlat
sahf
fwait
mov
aas
mov
xlat
inc
xor
mov
std
xlat
dec
imul
push
into
data16
(bad)
mov
xlat
pop
xor
bound
mov
xlat
daa
call
call
cs
inc
cli
push
mov
xlat
xor
mul
mov
xlat
cmp
push
(bad)
jns
out
inc
mov
xlat
or
mov
adc
mov
xlat
sbb
(bad)
bound
clc
xlat
out
jbe
inc
mov
xlat
out
(bad)
outs
jle
mov
xlat
icebp
sbb
fsub
mov
xlat
(bad)
mov
stos
scas
mov
xlat
rcr
or
iret
or
xlat
aad
sbb
int3
(bad)
push
das
mov
xlat
movs
es
cmps
mov
xlat
stos
retf
xchg
jns
pop
repnz
mov
xlat
mov
mov
xlat
or
mov
xlat
mov
lea
mov
xlat
xchg
adc
xlat
cdq
test
xor
mov
xlat
fs
scas
mov
xlat
imul
xlat
jbe
into
lds
mov
xlat
jns
outs
arpl
stc
xlat
inc
fiadd
mov
mov
xlat
dec
popa
cmps
push
(bad)
push
push
dec
push
out
std
xlat
pop
push
call
das
call
cli
xlat
xor
push
pop
xchg
cmps
std
addr16
xlat
add
mov
xlat
or
call
adc
push
pop
fisttp
and
(bad)
xlat
loop
mov
cmp
mov
not
cld
xlat
clc
stos
cmps
xor
mov
xlat
ret
pop
xchg
scas
inc
js
push
loope
mov
xlat
fld
std
(bad)
mov
xlat
mov
mov
xlat
scas
sub
lock
mov
xlat
mov
push
sub
mov
xlat
mov
mov
xlat
mov
idiv
iret
mov
xlat
xchg
leave
into
pop
pop
mov
xlat
sahf
inc
scas
data16
cli
xlat
push
mov
xlat
je
xchg
jmp
ss
mov
scas
out
test
(bad)
xlat
push
and
clc
xlat
pop
cmps
mov
ja
std
xlat
and
adc
std
xlat
sub
xlat
xor
mov
xlat
cmp
pushf
xchg
mov
jnp
push
out
fisttp
push
cmp
std
xlat
sbb
clc
xlat
out
push
dec
ja
cld
xlat
jmp
data16
mov
xlat
hlt
jle
rcr
push
push
pushf
scas
mov
xlat
rol
xlat
leave
movs
cmps
pop
pop
mov
xlat
fimul
xlat
mov
mov
xlat
stos
js
jmp
mov
xlat
mov
push
loopne
mov
xlat
mov
mov
xlat
sub
push
cmps
mov
xlat
mov
out
repnz
mov
xlat
nop
push
xchg
std
mov
(bad)
pop
xlat
aaa
mov
xlat
pusha
popf
(bad)
jno
mov
xlat
ins
aaa
inc
test
cli
xlat
jge
push
(bad)
lahf
mov
xlat
inc
fdecstp
pop
daa
mov
xlat
dec
test
cli
xlat
push
add
push
(bad)
mov
xlat
pop
frstor
iret
mov
xlat
and
mov
sub
mov
xlat
xor
push
add
call
cmp
sahf
inc
mov
xlat
add
mov
xlat
or
cli
xlat
adc
shl
jle
aas
mov
xlat
cld
out
fiadd
sti
xlat
les
mov
jle
jo
mov
xlat
shl
(bad)
xlat
fld
stc
xlat
cmps
in
mov
lahf
mov
xlat
stos
ficomp
xlat
mov
xor
mov
xlat
mov
mov
xlat
sub
xlat
mov
(bad)
push
(bad)
mov
xlat
xchg
inc
pop
repz
sahf
sbb
fnstsw
rcl
(bad)
std
xlat
ins
cdq
inc
inc
daa
(bad)
call
jo
mov
scas
(bad)
cli
xlat
jg
push
outs
(bad)
(bad)
xlat
inc
cdq
inc
dec
out
sti
xlat
dec
dec
out
outs
(bad)
sti
xlat
push
outs
push
repz
(bad)
clc
xlat
pop
or
inc
push
(bad)
sti
xlat
cs
(bad)
xlat
aaa
fwait
push
mov
(bad)
sti
xlat
cmp
std
xlat
push
dec
into
cdq
cmps
(bad)
(bad)
xlat
or
(bad)
sti
xlat
adc
(bad)
xlat
sbb
out
pop
(bad)
(bad)
xlat
in
cmps
pop
mov
sti
xlat
ret
xor
pop
aaa
(bad)
std
xlat
rcr
clc
xlat
ficom
lea
mov
cld
xlat
test
(bad)
std
xlat
mov
push
call
mov
(bad)
call
xor
mov
(bad)
xor
sbb
cld
xlat
xchg
cwde
into
and
(bad)
stc
xlat
fwait
adc
test
mov
clc
xlat
outs
jno
mov
clc
xlat
je
xchg
jp
sahf
mov
inc
and
push
out
mov
xlat
dec
fstp
sub
cli
xlat
push
hlt
mul
pop
jecxz
pop
(bad)
mov
xlat
and
movs
dec
mov
xlat
sub
mov
xlat
xor
sti
xlat
aas
jne
push
(bad)
mov
xlat
add
cmps
int3
mov
scas
inc
mov
adc
out
daa
mov
xlat
sbb
mov
xlat
loop
scas
cdq
pop
mov
xlat
in
sbb
xlat
repz
cmp
cld
xlat
cli
pop
pushw
mov
xlat
shr
sbb
mov
mov
mov
xlat
rol
pop
xchg
mov
xlat
fidiv
stc
xlat
mov
mov
xlat
stos
pop
test
cld
xlat
mov
push
sub
test
add
push
je
mov
xlat
(bad)
sti
and
jl
fsubr
mov
xlat
call
xlat
pusha
les
das
(bad)
stc
xlat
push
dec
push
pop
(bad)
sti
xlat
je
inc
add
jl
inc
xchg
(bad)
sti
xlat
inc
cmp
xlat
dec
jmp
(bad)
xlat
push
cld
xchg
jbe
jb
(bad)
(bad)
xlat
and
ss
(bad)
cld
xlat
sub
mov
out
(bad)
(bad)
xlat
xor
sbb
(bad)
sti
xlat
cmp
xchg
outs
(bad)
clc
xlat
add
int3
mov
in
sahf
mov
adc
out
pop
(bad)
call
sbb
sahf
dec
ja
(bad)
xlat
jecxz
(bad)
ins
cmps
(bad)
cli
xlat
jmp
xlat
repz
xlat
stc
(bad)
mov
dec
(bad)
std
xlat
shr
fisttp
push
loop
(bad)
(bad)
xlat
aad
into
fld
mov
lahf
mov
cld
xlat
mov
(bad)
cld
xlat
lods
sar
mov
out
dec
(bad)
stc
xlat
mov
(bad)
call
test
sti
dec
mov
aaa
(bad)
call
xchg
cmp
stc
xlat
fwait
in
div
icebp
mov
xchg
mov
xlat
push
xchg
aaa
jg
call
jne
out
xchg
ds
inc
sub
ins
fisttp
outs
jl
mov
xlat
push
xor
addr16
xlat
pop
fwait
into
retf
out
mov
xlat
and
mov
xlat
sub
xchg
jle
imul
jle
jle
xchg
fisubr
or
push
(bad)
jg
cli
xlat
push
rcr
pop
mov
xlat
sbb
sti
xlat
jecxz
push
mov
or
clc
xlat
cmc
cmp
or
std
xlat
clc
cmp
stc
xlat
(bad)
push
mov
xlat
retf
jmp
cld
jle
mov
mov
jb
ja
mov
xlat
cmps
adc
das
mov
xlat
stos
aad
lock
mov
xlat
mov
scas
daa
(bad)
mov
xlat
mov
mov
xlat
cmp
inc
jg
sti
xlat
lea
call
pop
test
fwait
inc
out
pop
xchg
call
bound
xchg
scas
xchg
std
xlat
push
inc
xchg
push
xchg
sti
xlat
jbe
push
out
mov
cli
xlat
jp
push
ret
out
xchg
stc
xlat
inc
add
xlat
dec
sub
fist
(bad)
pop
addr16
cld
xlat
pop
cmps
test
xchg
call
and
xlat
cs
xchg
pop
xchg
sti
xlat
ss
pop
scas
xchg
(bad)
xlat
cmp
jbe
xlat
xchg
clc
xlat
cmovle
inc
pop
xchg
std
xlat
adc
jle
(bad)
xchg
clc
xlat
pop
xchg
(bad)
xchg
xchg
(bad)
xlat
loope
ss
out
test
fwait
das
xchg
stc
xlat
hlt
add
and
mov
sti
xlat
ror
pop
setno
xlat
iret
or
std
aas
xchg
cld
xlat
sar
(bad)
cs
push
mov
xlat
mov
xchg
cli
xlat
stos
lock
adc
mov
mov
pop
xchg
std
xlat
mov
xchg
cld
xlat
xchg
cmps
pop
xchg
stc
xlat
mov
push
sub
xchg
cld
xlat
xchg
mov
stc
xlat
pushf
mov
enter
xlat
pusha
ds
jae
nop
stc
xlat
imul
sti
xlat
je
(bad)
and
jnp
inc
fistp
jge
xor
nop
call
dec
pop
out
fucomip
nop
cld
xlat
push
js
daa
out
sti
xlat
pop
lods
(bad)
in
nop
clc
xlat
and
(bad)
aaa
nop
cld
xlat
sub
or
std
xlat
xor
scas
mov
cmp
push
mov
cld
xlat
push
or
pop
das
nop
sti
xlat
or
push
xor
sti
xlat
adc
dec
mov
push
rcl
out
cld
xlat
out
into
cmps
dec
nop
sti
xlat
jmp
dec
call
push
add
nop
sti
xlat
stc
sbb
pop
mov
(bad)
xlat
ret
mov
sub
nop
sti
xlat
int3
xchg
mov
aas
nop
clc
xlat
xlat
sub
nop
(bad)
nop
sti
xlat
fild
add
out
inc
or
nop
(bad)
xlat
lods
ds
mov
std
xlat
mov
mov
call
jbe
ja
cld
xlat
xchg
(bad)
xlat
(bad)
jmp
popf
daa
nop
clc
xlat
xchg
fstp
xchg
std
xlat
lahf
repz
sti
xlat
pusha
stos
(bad)
imul
xchg
sti
xlat
jb
push
in
pop
xchg
stc
xlat
jnp
inc
xchg
cli
xlat
inc
test
dec
scas
jbe
pop
xchg
(bad)
xlat
push
add
dec
lahf
xchg
sti
xlat
pop
adc
out
pop
xchg
cld
xlat
daa
mov
stc
xlat
sub
(bad)
fidiv
xchg
stc
xlat
xor
jle
mov
std
xlat
cmp
pop
aas
xchg
clc
xlat
pop
push
es
aas
xchg
stc
xlat
or
std
xlat
adc
cmc
out
cli
xlat
pop
sar
xchg
sti
xlat
in
mov
xlat
xchg
sti
xlat
jmp
xchg
sti
xlat
neg
pop
xchg
cld
xlat
lods
test
lahf
xchg
stc
xlat
mov
scas
cmp
xchg
(bad)
xlat
mov
xchg
sti
xlat
adc
popa
inc
xchg
stc
xlat
mov
cld
xlat
xchg
lods
imul
popf
mov
jge
xchg
clc
xlat
fs
push
pop
xchg
sti
xlat
push
xchg
stc
xlat
jo
push
add
ss
pop
xchg
sti
xlat
inc
iret
push
xchg
(bad)
xchg
cld
xlat
dec
gs
dec
xchg
stc
xlat
push
pushf
push
test
pop
div
xor
and
mov
xchg
std
xlat
sub
call
fld
(bad)
xchg
call
cmp
sahf
not
xchg
sti
xlat
add
cld
xlat
or
cli
xlat
push
rol
rol
clc
xlat
sbb
mov
xlat
loop
add
into
mov
xchg
cld
xlat
repnz
stc
xlat
std
adc
iret
xchg
call
ret
mov
into
movs
outs
leave
lahf
xchg
cli
xlat
aam
dec
call
out
cmp
xchg
clc
xlat
cmps
jl
or
xchg
std
xlat
test
xchg
cli
xlat
mov
push
xor
xchg
call
mov
xchg
sti
xlat
xchg
ss
fist
mov
push
xchg
cld
xlat
xchg
dec
push
add
xchg
std
xlat
fwait
sub
retf
pop
xchg
clc
xlat
popa
pop
mov
xchg
clc
xlat
push
xchg
(bad)
xlat
jo
jbe
ja
cli
xlat
jg
cmps
jl
xchg
call
inc
rol
fcmovb
xchg
stc
xlat
dec
mov
ja
(bad)
xlat
push
loope
sbb
call
pop
dec
sahf
fwait
out
xchg
cli
xlat
and
ds
cs
pop
xchg
cli
xlat
xor
jle
xchg
(bad)
jnp
xchg
sti
xlat
add
xchg
(bad)
xlat
or
add
sti
xlat
pop
pop
push
ja
xchg
clc
xlat
push
xor
(bad)
xchg
stc
xlat
loope
es
xchg
cld
xlat
jmp
xchg
stc
xlat
neg
ss
xchg
stc
xlat
push
jb
xchg
call
(bad)
fdecstp
mov
enter
outs
xchg
clc
xlat
aad
jbe
pop
xchg
std
xlat
(bad)
jle
(bad)
xchg
(bad)
xlat
movs
aaa
out
sbb
stos
fwait
xchg
and
(bad)
jo
xchg
clc
xlat
mov
xchg
sti
xlat
test
es
xchg
std
xlat
mov
dec
daa
xchg
cld
xlat
xchg
addr16
pop
xchg
sti
xlat
cdq
les
ret
daa
xchg
clc
xlat
bound
push
jecxz
xchg
clc
xlat
outs
mov
int3
dec
xchg
std
xlat
jne
push
aas
daa
xchg
cld
xlat
jp
into
mov
inc
fild
inc
cmps
xchg
clc
xlat
dec
mov
cld
xlat
push
pop
out
push
das
xchg
std
xlat
pop
cmp
pop
inc
xchg
cld
xlat
and
jle
(bad)
xchg
(bad)
xlat
sub
xchg
clc
xlat
xor
out
pop
xchg
clc
xlat
cmp
std
xlat
pop
push
outs
dec
(bad)
xchg
(bad)
xlat
or
fimul
adc
xlat
pop
push
mov
out
xchg
(bad)
xlat
loopne
push
gs
xchg
(bad)
xlat
out
outs
fimul
test
xchg
xchg
stc
xlat
(bad)
xchg
push
xchg
call
ret
loop
xchg
call
enter
ja
stc
xlat
shr
ss
daa
xchg
stc
xlat
fnstenv
outs
mov
cmps
loopne
test
xchg
sti
xlat
stos
fisttp
outs
xchg
(bad)
xlat
mov
scas
lea
add
sar
pusha
push
adc
std
xlat
mov
sahf
jmp
idiv
sete
xlat
call
xlat
or
xlat
outs
cmp
xlat
jo
ss
xchg
call
jg
push
arpl
xchg
stc
xlat
inc
sahf
scas
call
dec
pusha
ficomp
xchg
cld
xlat
push
orps
pop
and
daa
xchg
(bad)
xlat
and
dec
xchg
cld
xlat
sub
cmps
pop
fist
out
addr16
cli
xlat
cmp
ds
pop
xchg
stc
xlat
pop
fsub
pop
xchg
cli
xlat
or
sub
xchg
sti
xlat
adc
int3
pop
xchg
sti
xlat
push
pop
cs
(bad)
xchg
sti
xlat
loop
ficomp
xchg
sti
xlat
jmp
xlat
icebp
in
out
jg
(bad)
xlat
(bad)
mov
dec
out
xchg
clc
xlat
(bad)
push
mov
xlat
leave
jnp
pop
xlat
xchg
(bad)
xlat
(bad)
es
mov
xchg
(bad)
xlat
scas
xchg
mov
mov
mov
(bad)
xchg
stc
xlat
mov
xchg
call
test
mov
xlat
(bad)
clc
outs
call
xchg
mov
(bad)
xlat
popf
loopne
aas
(bad)
xchg
call
gs
cwde
dec
xchg
cli
xlat
outs
nop
es
xchg
call
je
(bad)
xor
cli
xlat
jle
push
add
pushf
push
outs
xchg
cli
xlat
dec
daa
cmps
bound
cld
xlat
push
cmc
xchg
scas
xchg
std
xlat
pop
pop
ss
dec
xchg
sti
xlat
and
xlat
sub
xchg
sti
xlat
xor
xchg
(bad)
xlat
cmp
stc
xlat
add
sti
xlat
or
xchg
(bad)
xlat
pop
shr
xlat
push
jnp
in
pop
xchg
cli
xlat
loope
dec
dec
outs
xchg
std
xlat
in
inc
into
mov
xchg
(bad)
xlat
icebp
jmp
inc
outs
dec
xchg
call
shr
retf
adc
sti
xlat
shl
push
xchg
not
mov
aaa
xchg
(bad)
xlat
movs
jnp
nop
push
xchg
(bad)
xlat
test
xchg
sti
xlat
mov
es
pop
xchg
(bad)
xlat
mov
xchg
cld
xlat
xchg
(bad)
loopne
xchg
stc
xlat
mov
inc
xlat
xchg
std
xlat
xchg
call
clc
xlat
call
xlat
gs
lods
pop
cdq
cli
xlat
imul
(bad)
cdq
call
je
xor
cmps
jne
cdq
cli
xlat
inc
popf
push
shl
cdq
cld
xlat
dec
sub
push
lahf
cdq
std
xlat
push
dec
cmps
xlat
cdq
sti
xlat
pop
mov
xor
daa
jg
outs
cmps
cdq
stc
xlat
sub
faddp
jg
(bad)
xlat
xor
cdq
call
cmp
and
cdq
clc
xlat
add
xlat
cdq
(bad)
xlat
or
(bad)
xlat
adc
mov
pop
imul
inc
(bad)
cdq
cld
xlat
in
mov
mov
cdq
stc
xlat
repz
stc
xor
arpl
cdq
stc
xlat
(bad)
jnp
(bad)
clc
xlat
retf
cmps
push
cdq
std
xlat
aad
inc
add
cdq
std
xlat
fisub
fidiv
clc
xlat
mov
cdq
call
test
mov
mov
cmp
(bad)
xlat
das
or
xlat
addr16
xchg
cmp
jnp
cmp
inc
pop
cmp
push
addr16
jecxz
cmp
add
push
or
outs
ja
clc
xlat
pop
and
leave
iret
cmp
jg
cmp
jp
cmp
ss
stc
xlat
cmp
popf
jg
call
add
push
mov
or
stc
xlat
adc
cmp
fld
cmp
jg
cmp
fimul
cmp
inc
xchg
jbe
ja
stc
xlat
ret
js
cmp
jecxz
cmp
inc
push
cmp
sbb
cmp
dec
xchg
cmp
movs
pop
cmp
fild
cmp
out
cmp
inc
lahf
cmp
jge
cmp
iret
jno
imul
cmp
imul
test
stc
xlat
jle
(bad)
inc
ret
out
inc
fild
mov
cmp
push
push
dec
loop
cmp
pop
mov
loop
cmp
and
(bad)
call
inc
(bad)
xlat
xor
jecxz
cmp
aas
shr
retf
cld
xlat
add
dec
ins
pop
cmp
push
out
inc
addr16
adc
scas
test
push
cld
xlat
loope
(bad)
cli
out
cmp
in
fisttp
and
call
neg
xlat
cmp
call
stc
xlat
ret
xchg
inc
cld
cmps
cmp
ror
mov
xlat
fdiv
(bad)
xlat
movs
lahf
out
dec
cmp
lods
adc
xlat
mov
neg
inc
cmp
mov
cmp
add
sbb
cld
xlat
mov
outs
xchg
cmp
xchg
mov
xlat
sahf
push
es
jae
sahf
icebp
lahf
cmp
outs
aam
test
cmp
je
mov
cmp
jge
(bad)
jecxz
cmp
inc
setbe
pop
cmp
dec
or
mov
push
test
adc
cmp
pop
and
stc
xlat
and
mov
mov
cld
xlat
sub
push
jno
cmp
xor
std
xlat
cmp
cmp
add
ss
cmp
cmovno
xlat
adc
es
lahf
cmp
push
dec
outs
push
test
cli
xlat
in
sub
dec
aaa
cmp
test
xlat
stc
fisttp
mov
cmp
sar
shl
clc
xlat
iret
push
push
push
(bad)
std
inc
inc
inc
cmp
fstp
std
xlat
mov
cmp
lods
(bad)
mov
sbb
xlat
mov
clc
xlat
xchg
xlat
jbe
inc
xchg
js
cmp
(bad)
lock
loope
cmp
imul
sti
xlat
jne
jbe
addr16
jnp
fisubr
inc
xchg
cmp
dec
add
stc
xlat
push
stos
cs
cmp
pop
add
and
scas
call
push
push
cmp
xor
cmps
data16
cmp
aas
mov
cli
xlat
add
adc
cmp
or
xlat
adc
adc
xchg
and
cmp
out
scas
sahf
push
cmp
jmp
cmp
lock
stc
xlat
clc
jecxz
cld
lahf
cmp
ret
stc
jbe
lahf
cmp
int
scas
mov
ror
cli
xlat
(bad)
push
inc
lahf
cmp
cmps
(bad)
(bad)
(bad)
cmp
test
cmp
mov
out
out
std
xlat
mov
cmp
xchg
pop
jbe
cmp
mov
(bad)
shl
(bad)
xlat
xchg
xchg
push
mov
cmp
fwait
dec
mov
xchg
test
xlat
jcxz
rcr
test
xlat
push
test
xlat
jno
jle
mov
std
xlat
inc
xchg
out
mov
test
xlat
dec
test
jg
test
xlat
push
or
pop
test
xlat
pop
pop
cmps
outs
scas
test
xlat
and
jle
xlat
test
xlat
sub
cs
sti
xlat
xor
sahf
jmp
ss
jne
mov
xlat
or
inc
sahf
xchg
pop
or
call
sbb
(bad)
es
test
xlat
in
scas
mov
test
xlat
jmp
push
adc
test
xlat
div
call
cli
sbb
ficomp
out
jl
test
xlat
leave
adc
xlat
sar
cli
xlat
fimul
iret
mov
stc
xlat
lods
sub
inc
out
pop
fdivrp
pop
test
xlat
xchg
pop
fild
push
cmps
daa
test
xlat
nop
mov
call
cdq
out
or
call
bound
scas
arpl
idiv
xlat
jo
push
inc
mov
xlat
inc
fsub
int3
dec
test
xlat
dec
jp
sub
test
xlat
push
lahf
packuswb
icebp
pop
test
xlat
and
push
xlat
test
xlat
add
xlat
xor
(bad)
fsubr
test
xlat
and
addr16
xlat
add
cli
xlat
or
jbe
xlat
test
xlat
adc
(bad)
xlat
sbb
bound
test
xlat
in
out
xlat
test
xlat
out
xor
xlat
lock
(bad)
and
stc
and
jle
test
xlat
mov
xlat
test
xlat
into
sub
pushf
mov
call
xlat
or
xlat
fild
out
test
xlat
mov
test
xlat
test
test
xlat
mov
pop
add
mov
test
xlat
add
xlat
mov
mov
xlat
xchg
neg
cld
out
test
xlat
fwait
dec
(bad)
jae
xchg
xlat
bound
and
stc
xlat
outs
jmp
cld
xlat
jo
cs
jge
into
es
je
xor
ficomp
mov
xchg
xlat
push
xor
xlat
pop
call
and
lods
ja
into
loope
xchg
xlat
xor
xchg
xlat
cmp
xchg
xlat
pop
(bad)
sahf
cld
out
cld
xlat
or
sbb
xchg
xlat
adc
push
(bad)
mov
fisubr
xlat
loope
mov
daa
xchg
xlat
jmp
pop
pop
scas
xchg
xlat
hlt
jo
dec
call
(bad)
push
push
jp
xchg
xlat
(bad)
rcl
ja
stc
xlat
retf
test
(bad)
xlat
aad
xchg
push
ja
cld
xlat
fiadd
xchg
out
cld
xlat
scas
in
out
xchg
outs
xchg
xlat
mov
dec
xor
xchg
xlat
mov
xchg
xlat
add
out
std
xlat
sahf
pop
dec
push
jg
call
arpl
dec
pop
xchg
xlat
outs
movs
cmps
add
repz
cmps
test
(bad)
xlat
inc
outs
(bad)
std
fild
jbe
pop
xchg
xlat
push
stos
scas
scas
lahf
xchg
xlat
pop
aam
or
xchg
xlat
and
dec
cmp
test
aam
xchg
xlat
xor
(bad)
mov
aas
and
pop
sub
test
call
jmp
(bad)
loopne
xchg
xlat
clc
shl
push
xchg
xlat
ret
idiv
pushf
test
stc
xlat
sar
(bad)
xlat
test
cmps
and
mov
xchg
jbe
cmps
mov
xchg
xlat
test
ficom
mov
sti
xlat
push
mov
xlat
jae
sbb
cld
xlat
jg
into
push
mov
xlat
pop
cdq
push
ins
aas
mov
xlat
daa
fidivr
xlat
cs
jbe
pop
mov
xlat
xor
call
cmp
outs
dec
fisttp
dec
cld
push
mov
xlat
or
std
xlat
adc
(bad)
xlat
sbb
lods
xchg
mov
xlat
jecxz
push
or
mov
imul
cli
xlat
hlt
add
cld
mov
adc
fwait
ds
mov
xlat
int
xchg
ret
dec
mov
xlat
fidivr
xlat
mov
mov
xlat
scas
adc
daa
mov
xlat
mov
not
mov
xlat
mov
mov
xlat
add
xlat
(bad)
ins
jbe
jg
stc
xlat
xchg
loopne
stos
pop
mov
xlat
pushf
and
inc
scas
mov
xlat
bound
clc
xlat
ins
adc
inc
mov
xlat
jae
pop
fmul
mov
xlat
push
sbb
jle
mov
xlat
pop
mov
jo
mov
xlat
and
jle
jg
std
xlat
sub
clc
xlat
xor
mov
xlat
aas
mov
stc
xlat
or
mov
xlat
push
addr16
lods
js
(bad)
add
repnz
(bad)
mov
xlat
hlt
xchg
ss
sti
loope
mov
shr
xchg
mov
xlat
retf
rcl
daa
mov
xlat
sar
loop
mov
xlat
fild
(bad)
inc
pop
mov
xlat
movs
add
inc
js
push
jo
mov
xlat
mov
scas
jb
mov
xlat
mov
mov
xlat
xchg
clc
xlat
mov
mov
aaa
mov
xlat
cwde
lock
pop
mov
xlat
fiadd
xlat
ins
mov
mov
mov
xlat
jno
data16
cld
xlat
jg
into
stc
mov
push
adc
mov
xlat
dec
dec
xchg
push
push
out
stos
addr16
xlat
pop
lds
push
mov
xlat
daa
inc
arpl
out
push
fisttp
xchg
pop
mov
xlat
cmp
rcl
mov
xlat
push
xor
xlat
or
outs
pop
mov
xlat
adc
sti
xlat
pop
std
ss
in
xchg
pop
mov
xlat
jmp
mov
xlat
repz
pop
mov
xlat
cld
sti
xchg
jge
mov
xlat
ret
ret
stc
xlat
int
push
fs
mov
xlat
ror
int3
mov
cld
xlat
fimul
lock
mov
xlat
movs
xor
daa
mov
xlat
scas
jns
jmp
mov
jle
jnp
sbb
rol
mov
mov
cli
xlat
nop
jg
adc
mov
xlat
cdq
(bad)
(bad)
push
pop
mov
xlat
bound
lahf
mov
xlat
ins
pusha
(bad)
mul
ret
lods
xchg
push
dec
scas
mov
xlat
inc
xor
xor
mov
xlat
dec
push
clc
xlat
push
ret
aaa
mov
xlat
pop
pop
inc
and
sti
xlat
and
out
iret
mov
xlat
sub
mov
xlat
xor
push
cmp
mov
xlat
aas
retf
jbe
mov
gs
sbb
xlat
or
jbe
das
mov
xlat
pop
or
xlat
sbb
cld
xlat
out
jbe
cmps
mov
xlat
call
mov
xlat
hlt
aam
adc
mov
xlat
jmp
(bad)
xlat
(bad)
xchg
dec
stc
lahf
mov
xlat
enter
scas
mov
xlat
rcr
push
dec
mov
xlat
(bad)
clc
xlat
movs
or
test
mov
and
mov
xlat
mov
cmps
adc
mov
xlat
mov
mov
xlat
test
ins
aaa
mov
xlat
mov
push
push
mov
cmps
mov
mov
xlat
cwde
jo
not
(bad)
call
test
jmp
mov
call
jl
(bad)
scas
jge
pop
xchg
(bad)
stc
xlat
dec
pop
jbe
dec
push
push
das
(bad)
call
pop
sbb
addr16
cli
xlat
and
(bad)
std
xlat
or
xlat
xor
cs
iret
(bad)
(bad)
xlat
cmp
(bad)
xlat
add
(bad)
cld
xlat
or
cli
xlat
adc
(bad)
clc
xlat
push
mov
mov
clc
xlat
loop
mov
dec
push
cmp
sti
xlat
icebp
or
addr16
(bad)
xlat
(bad)
cmp
sar
xchg
int
(bad)
std
xlat
into
sub
clc
xlat
rcl
cld
xlat
fsubr
cli
xlat
mov
(bad)
call
lods
xchg
scas
adc
mov
mov
xlat
mov
(bad)
call
xchg
cli
xlat
mov
outs
(bad)
clc
xlat
xchg
loope
jae
(bad)
sti
xlat
cwde
dec
push
xchg
addr16
xlat
les
mov
xlat
outs
cdq
push
aad
mov
xlat
jb
push
out
mov
xlat
jge
mov
xlat
inc
sub
pop
xchg
popf
addr16
xlat
push
ret
inc
mov
xlat
pop
pop
pop
mov
mov
xlat
and
cli
xlat
sub
dec
mov
mov
xlat
xor
mov
xlat
cmp
mov
xlat
push
dec
push
dec
push
mov
xlat
or
dec
mov
xlat
adc
mov
xlat
push
and
xlat
loopne
mov
xlat
in
cmp
xlat
not
cld
xlat
clc
clc
out
jg
stc
xlat
rcl
test
xlat
(bad)
neg
mov
fld
jle
lahf
mov
xlat
mov
mov
xlat
test
dec
(bad)
mov
xlat
mov
out
jge
mov
xlat
mov
mov
xlat
add
xlat
mov
mov
mov
inc
mov
xlat
call
xlat
rol
(bad)
cli
xlat
push
mov
xlat
je
data16
outs
(bad)
(bad)
xlat
jge
push
(bad)
iret
(bad)
stc
xlat
inc
mov
cld
xlat
dec
xor
push
out
sti
xlat
push
and
sub
jg
xor
clc
xlat
and
xchg
jne
(bad)
(bad)
xlat
sub
add
aaa
or
mov
cmp
into
ja
std
xlat
push
pop
(bad)
loop
(bad)
cld
xlat
pmaddwd
mov
adc
mov
xlat
sbb
pop
mov
mov
cli
xlat
out
or
pop
(bad)
call
lock
jae
(bad)
sti
xlat
cli
sub
push
pop
(bad)
(bad)
xlat
lds
cld
xlat
into
push
inc
arpl
(bad)
xlat
xlat
(bad)
outs
lods
out
sti
xlat
fsubr
into
or
(bad)
(bad)
xlat
mov
(bad)
sti
xlat
test
dec
adc
mov
out
mov
(bad)
(bad)
xlat
mov
(bad)
call
test
cmps
ins
jg
es
xchg
xchg
fisttp
cmps
cmc
jle
dec
cld
das
mov
xlat
outs
out
pop
cmps
mov
xlat
jno
push
mov
jns
out
pop
outs
mov
xlat
inc
push
cld
xlat
dec
mov
std
xlat
push
adc
push
outs
mov
xlat
pop
push
fdivp
test
clc
xlat
sub
aaa
mov
xlat
xor
ds
out
clc
xlat
cmp
pop
adc
std
xlat
add
mov
mov
xlat
or
dec
and
mov
xlat
adc
xchg
and
xor
out
cli
xlat
jecxz
inc
or
call
in
sbb
cli
xlat
rep
es
aas
mov
xlat
inc
jle
test
clc
xlat
iret
(bad)
inc
fisttp
and
mov
xlat
fisub
cmp
mov
xlat
mov
mov
xlat
lods
rcl
mov
mov
xlat
mov
sahf
mov
mov
xlat
mov
mov
xlat
adc
lea
push
test
(bad)
xlat
pushf
xor
jp
xchg
stc
xlat
fs
xchg
je
xchg
cld
xlat
imul
shl
pop
(bad)
cmc
dec
xchg
cli
xlat
js
push
lods
(bad)
xchg
call
inc
stos
test
xchg
clc
xlat
dec
hlt
xchg
sbb
jl
fs
xchg
call
pop
stc
(bad)
xor
cmps
cmps
aaa
xchg
clc
xlat
sub
xchg
std
xlat
xor
(bad)
pop
xchg
std
xlat
cmp
sti
xlat
push
cmp
test
movd
shr
xlat
adc
xchg
sti
xlat
sbb
push
in
xchg
sti
xlat
jecxz
jbe
inc
xchg
call
jmp
xlat
repnz
push
adc
xchg
call
sti
cmp
in
xchg
cli
xlat
les
inc
pop
xchg
stc
xlat
enter
das
xchg
cli
xlat
sar
push
inc
pop
xchg
stc
xlat
fisubr
in
ja
(bad)
xlat
mov
xchg
cli
xlat
stos
loope
sahf
out
cld
xlat
mov
mov
jg
sti
xlat
mov
xchg
sti
xlat
xchg
push
cli
cmps
xchg
std
xlat
mov
xlat
xchg
rol
inc
das
xchg
std
xlat
pushf
aas
outs
push
xchg
nop
sti
xlat
popa
xchg
data16
nop
(bad)
xlat
outs
xor
jle
nop
stc
xlat
jne
out
inc
daa
nop
clc
xlat
jg
sahf
dec
addr16
stc
xlat
inc
pop
cs
nop
clc
xlat
dec
xor
xlat
push
cmps
out
xchg
nop
call
pop
or
enter
xlat
and
mov
xlat
sub
cs
xor
inc
lods
pop
nop
(bad)
xlat
cmp
xchg
inc
nop
cld
xlat
pop
adc
dec
iret
nop
std
xlat
invd
inc
jg
nop
sti
xlat
adc
idiv
lahf
nop
(bad)
xlat
sbb
sub
nop
std
xlat
in
fdivrp
ja
cld
xlat
jmp
xlat
repz
(bad)
add
nop
std
xlat
cld
xor
jg
clc
xlat
ret
add
not
cmps
daa
nop
stc
xlat
rcl
test
nop
std
xlat
fdiv
xchg
das
nop
std
xlat
mov
nop
clc
xlat
scas
jge
test
nop
std
xlat
mov
(bad)
in
nop
sti
xlat
mov
nop
cli
xlat
test
mov
nop
clc
xlat
mov
adc
nop
std
xlat
xchg
sbb
clc
xlat
call
xlat
pusha
imul
pop
xchg
stc
xlat
imul
xchg
cld
xlat
je
push
and
xchg
sti
xlat
jg
into
fisub
stc
xlat
inc
mov
stc
xlat
dec
sti
(bad)
jmp
xchg
call
push
popa
mov
(bad)
xchg
cli
xlat
pop
cmp
cwde
mov
adc
mov
call
cs
pop
not
push
push
out
std
xlat
cmp
shl
xchg
(bad)
xlat
pop
dec
xchg
ret
iret
xchg
call
jb
cld
xlat
adc
ds
movs
sahf
push
out
xchg
cli
xlat
loopne
xchg
and
call
out
shl
xchg
data16
(bad)
in
ds
xchg
sti
xlat
les
sti
xlat
retf
leave
outs
xchg
stc
xlat
aad
push
fbld
xchg
cld
xlat
fst
cli
xlat
mov
xchg
clc
xlat
stos
pop
xchg
test
mov
sahf
aas
lahf
xchg
stc
xlat
mov
xchg
cld
xlat
sbb
xlat
(bad)
icebp
out
(bad)
xchg
clc
xlat
xchg
push
std
xlat
cdq
and
iret
xchg
cld
xlat
addr16
cs
out
(bad)
xlat
ins
pusha
push
ss
xchg
cli
xlat
jo
out
pop
xchg
stc
xlat
jns
fdivrp
scas
xchg
std
xlat
inc
loop
xlat
jg
(bad)
xlat
dec
dec
push
xchg
not
cmps
xor
inc
xchg
jo
xchg
cli
xlat
and
push
aaa
inc
xchg
stc
xlat
sub
xchg
call
xor
(bad)
fist
push
dec
jg
sti
xlat
add
mov
xchg
sti
xlat
or
into
xchg
xchg
(bad)
xlat
adc
(bad)
xlat
sbb
xchg
lea
xchg
sti
xlat
jecxz
sub
xchg
sti
xlat
out
imul
pop
xchg
(bad)
xlat
hlt
ds
xchg
(bad)
xchg
cli
xlat
std
xchg
(bad)
das
xlat
xchg
(bad)
xlat
shl
ds
xchg
std
xlat
leave
shl
setb
xlat
(bad)
in
adc
std
xlat
fisttp
cmp
mov
xchg
(bad)
xlat
test
data16
xchg
(bad)
xlat
mov
inc
inc
ja
cli
xlat
mov
xchg
(bad)
xlat
add
pop
xchg
sti
xlat
mov
mov
xlat
xchg
(bad)
xlat
xchg
not
xlat
(bad)
xchg
cld
xlat
cdq
pop
fiadd
xchg
stc
xlat
cmp
(bad)
xlat
out
dec
(bad)
xlat
pop
cmp
addr16
cmp
int
cmp
xchg
dec
cmp
sbb
cmp
dec
pop
cmp
out
pop
cmp
call
mov
aaa
cmp
jb
cmp
mov
cmp
pop
pop
xchg
push
cmp
and
cli
xlat
or
std
xlat
adc
mov
jp
mov
cmp
mov
std
xlat
in
jno
add
cmp
adc
cmp
sbb
(bad)
push
push
iret
cmp
mov
cmp
(bad)
outs
cmp
jmp
cmp
add
sti
xlat
scas
push
dec
cmps
pop
cs
cmp
mov
cmp
cdq
out
cmp
mov
cmp
pop
iret
cmp
aaa
pop
cmp
pusha
gs
xlat
imul
xlat
je
es
(bad)
xlat
jle
scas
pop
scas
cmp
inc
cmps
div
dec
shl
push
loope
adc
pop
pop
xchg
lds
out
(bad)
std
cmps
cmp
sub
push
add
cmp
xor
into
popa
mov
clc
xlat
push
outs
mov
mov
sti
xlat
push
dec
push
sar
fs
cmp
loope
inc
inc
dec
cmp
out
popa
data16
cmp
imul
push
(bad)
xchg
cmp
shr
dec
mov
(bad)
xlat
int3
int
jle
cmp
xlat
js
or
cmp
fsub
xlat
mov
cmp
lods
xchg
scas
pop
ja
clc
xlat
mov
push
xor
xchg
inc
ret
clc
xlat
test
into
jns
cmp
(bad)
push
push
outs
daa
cmp
xchg
jne
jmp
imul
inc
out
xlat
cmp
push
cmp
jb
sahf
mov
cmp
js
rcl
scas
fs
cmp
dec
push
cs
sti
xlat
push
push
jle
out
(bad)
xlat
pop
shl
aaa
cmp
and
(bad)
cli
aas
cmp
sub
cmp
xor
(bad)
mov
jmp
inc
pop
cmp
add
mov
sti
xlat
pop
xchg
sahf
cdq
mov
call
loopne
inc
aad
cmp
in
mov
clc
xlat
idiv
(bad)
xlat
cli
jbe
cs
cmp
(bad)
in
xchg
xchg
cmp
enter
test
stc
xlat
fcom
pop
iret
cmp
cmps
xlat
cs
pop
cmp
scas
jno
aad
cmp
mov
dec
mov
call
mov
cmp
xchg
into
dec
cmp
mov
push
jle
cmp
xchg
int
pop
scas
cmp
lahf
xchg
out
jb
(bad)
outs
daa
cmp
ins
xchg
xchg
inc
cmp
jae
xchg
mov
call
jnp
push
mov
inc
mov
pop
out
sti
xlat
dec
mov
mov
cmp
push
sahf
mov
inc
(bad)
xor
cmp
and
xlat
lods
and
xlat
mov
fidiv
mov
cmp
test
imul
ret
outs
test
xlat
pusha
sbb
icebp
addr16
xlat
ins
inc
sahf
cwde
mov
std
xlat
jae
cs
inc
push
xor
inc
sbb
cld
xlat
dec
xor
pop
pop
test
xlat
push
mov
xlat
pop
xor
xlat
es
fidiv
cs
inc
pop
test
xlat
xor
div
test
xlat
cmp
shl
cdq
pop
ss
test
xlat
or
test
xlat
adc
out
pop
test
xlat
sbb
cmps
int
test
xlat
out
adc
cli
xlat
call
test
xlat
icebp
jmp
clc
xlat
sti
int3
fcompp
jne
ds
mov
loop
not
call
fcmovb
(bad)
xchg
lahf
test
xlat
mov
test
xlat
stos
add
xlat
mov
mov
mov
test
xlat
add
cmps
outs
test
xlat
mov
xchg
test
xlat
xchg
lock
mov
fwait
cli
inc
stos
xchg
ret
xchg
test
xlat
outs
iret
ss
test
xlat
jae
imul
stc
xlat
jp
inc
fwait
xchg
mov
dec
shl
dec
aaa
test
xlat
push
and
shl
test
xlat
pop
add
std
xlat
and
test
xlat
sub
sti
xlat
xor
outs
in
test
xlat
cmp
test
xlat
add
sahf
loopne
test
xlat
or
mov
clc
xlat
adc
mov
xlat
loopne
(bad)
ja
test
xlat
jmp
push
and
call
repz
pusha
push
test
xlat
cld
out
out
mov
daa
xchg
leave
in
xchg
or
rcr
rcr
test
xlat
fucomp
(bad)
push
outs
test
xlat
mov
test
xlat
test
mov
out
test
xlat
mov
xchg
jg
sti
xlat
mov
test
xlat
or
xlat
mov
std
xlat
xchg
rol
push
scas
test
xlat
pushf
lods
dec
call
pusha
std
imul
imul
clc
xlat
je
xchg
pop
xchg
xlat
js
ss
xchg
mov
pop
xchg
xlat
dec
xor
clc
xlat
push
cmp
cmps
mov
cli
(bad)
sub
add
push
adc
clc
xlat
or
mov
push
jl
inc
iret
xchg
xlat
push
cmp
xchg
mov
clc
xlat
jecxz
outs
sbb
(bad)
xlat
in
pushf
mov
xlat
hlt
movs
jle
inc
xchg
xlat
clc
mov
mov
(bad)
xlat
ret
jbe
xchg
xlat
int
sahf
sbb
push
cld
xlat
fiadd
stc
xlat
movs
outs
push
adc
xchg
xlat
stos
push
cmp
clc
xlat
mov
push
test
cld
xlat
mov
xchg
xlat
xchg
mov
mov
clc
xlat
xchg
out
mov
sbb
call
data16
xchg
xchg
xlat
imul
dec
lahf
xchg
xlat
jno
cs
daa
xchg
xlat
js
es
inc
dec
push
fild
xchg
call
push
mov
std
xlat
pop
adc
std
pop
xchg
xlat
and
clc
xlat
sub
xchg
xlat
xor
in
test
call
push
xchg
out
lahf
xchg
xlat
or
xchg
xchg
xlat
adc
push
push
out
(bad)
xlat
sbb
rol
std
xlat
loopne
push
movs
test
clc
xlat
lock
(bad)
xlat
std
addr16
ror
xlat
retf
outs
das
xchg
xlat
aam
outs
aam
xchg
xlat
fmul
push
jbe
es
xchg
xchg
xlat
lods
inc
imul
xchg
xlat
mov
xchg
mov
xchg
xlat
test
sti
xlat
mov
(bad)
cmp
dec
mov
pushf
adc
ins
addr16
xlat
addr16
cli
xlat
imul
scas
scas
mov
xlat
jne
push
jmp
sahf
xchg
pop
mov
xlat
inc
mov
stc
xlat
dec
and
clc
xlat
push
int3
out
out
mov
xlat
pop
pop
retw
clc
xlat
and
push
fldcw
cli
xlat
das
stos
push
xor
mov
xlat
aaa
push
cmps
hlt
cmps
mov
xlat
cmp
mov
scas
mov
xlat
add
mov
xlat
or
push
in
iret
mov
xlat
pop
movs
(bad)
xchg
pop
mov
xlat
push
imul
daa
mov
xlat
in
(bad)
sahf
pop
mov
xlat
out
adc
cli
xlat
imul
stc
xlat
cli
gs
mov
mov
xlat
lds
(bad)
xlat
enter
lahf
mov
xlat
aam
sahf
dec
out
mov
xlat
(bad)
dec
call
mov
mov
xlat
test
mov
xlat
mov
xor
cli
xlat
mov
mov
xlat
sbb
std
xlat
mov
jbe
dec
mov
xlat
xchg
sub
cwde
push
mov
xlat
cdq
xlat
mov
iret
mov
xlat
pushw
mov
xlat
ins
js
inc
pop
mov
xlat
jo
scas
mov
jle
ss
pop
mov
xlat
inc
push
mov
mov
xlat
dec
jle
aas
outs
mov
xlat
push
hlt
sahf
jmp
pop
or
push
xchg
mov
mov
xlat
sub
lahf
inc
mov
xlat
xor
cwd
pop
mov
xlat
aas
jb
repz
cld
xlat
or
push
sub
xlat
pop
loop
arpl
mov
xlat
push
cmp
sti
xlat
in
jbe
mov
clc
xlat
out
mov
stc
xlat
icebp
div
aas
mov
xlat
clc
adc
sub
and
xor
mov
xlat
into
jmp
shl
std
xlat
(bad)
dec
xchg
push
add
mov
xlat
test
mov
xlat
mov
out
pop
mov
xlat
mov
mov
xlat
adc
cmps
mov
xlat
lea
lods
dec
imul
mov
xlat
cdq
jnp
test
sti
xlat
mov
mov
(bad)
xlat
ins
pop
fisub
inc
mov
xlat
jbe
jle
scas
mov
xlat
jl
ds
pop
mov
xlat
inc
adc
xlat
dec
push
neg
or
pop
push
mov
xlat
pop
sub
xlat
jno
jbe
mov
stc
xlat
jae
sahf
mov
cmp
push
lahf
cmp
repnz
cmp
mov
cmp
scas
pop
cmp
or
cmp
jmp
cmp
mov
cmp
fwait
lahf
cmp
sub
call
push
loop
add
cmp
jmp
adc
cmp
sar
call
out
cmps
fld
popf
data16
pop
cmps
adc
(bad)
repz
push
out
cld
xlat
lds
clc
xlat
int3
sbb
pop
jno
(bad)
std
out
cmp
jae
cmp
aad
cmp
(bad)
cmp
pop
addr16
std
pop
cmp
jecxz
cmp
push
push
cmp
jmp
cmp
mov
popa
repz
push
xchg
jl
cmp
jno
test
cli
xlat
jle
push
out
cmp
inc
mov
inc
cmp
dec
and
stc
xlat
push
(bad)
push
xchg
aaa
scas
and
call
and
sub
cmp
das
xor
scas
xlat
cmp
ss
test
cmp
cmp
std
xlat
add
cmp
or
push
emms
cmp
adc
cmp
sbb
cld
xlat
loopne
sahf
push
fild
xchg
stc
ja
cli
xlat
icebp
popf
(bad)
xchg
pop
cmp
stc
mov
xlat
(bad)
mov
cmp
iret
push
fadd
cmp
shr
test
fistp
xlat
mov
cmp
stos
push
outs
inc
pop
cmp
mov
mov
cmp
mov
cmp
xchg
xor
cld
xlat
pop
jbe
xchg
pop
das
inc
cmp
cdq
mov
push
iret
cmp
ins
out
ja
sti
xlat
imul
(bad)
xlat
jbe
(bad)
sub
cmp
jp
push
sar
cmp
inc
or
mov
cli
xlat
dec
adc
stos
jg
cli
xlat
push
ins
(bad)
pusha
fild
jbe
lahf
cmp
and
cmp
sub
dec
mov
jbe
pop
mov
std
xlat
add
(bad)
xlat
push
lods
es
cmp
adc
cmp
sbb
mov
xchg
cmp
out
out
addr16
jmp
sahf
arpl
call
stc
xlat
cli
sbb
dec
inc
sahf
loope
cmp
retf
stc
lahf
cmp
aam
xchg
cmp
fidivr
sahf
shr
xlat
cmps
int
pop
out
cmp
scas
lods
sahf
or
cld
xlat
mov
push
ins
ja
std
xlat
mov
cmp
test
push
scas
mov
stc
xlat
xchg
jg
pop
xchg
cmp
call
xlat
mov
xchg
cmp
outs
jp
or
cmp
jno
xchg
xchg
xlat
cmp
jns
pop
iret
pop
sahf
imul
ret
xchg
cmp
push
fwait
mov
xlat
pop
fadd
push
pop
cmp
and
std
xlat
sub
faddp
mov
cmps
dec
mov
ds
leave
jb
ds
cmp
push
xlat
push
inc
addr16
adc
cmp
sbb
(bad)
xlat
in
push
test
call
cmp
repz
out
jp
cmp
inc
(bad)
xlat
setl
xlat
xlat
cmp
daa
ja
cld
xlat
inc
sti
ss
cmp
jb
cmp
jne
cmp
cmp
cmp
leave
mov
cli
xlat
bound
jg
cmp
pop
pop
xchg
mov
cmp
ret
pop
cmp
inc
fisub
xchg
movs
push
cmp
dec
scas
cmp
cmp
cmp
call
mov
stc
xlat
iret
movs
xchg
jbe
cmp
cmp
cmp
add
out
(bad)
je
cmp
shr
pop
fisub
sbb
pop
cmp
fwait
xchg
cmp
cmp
bound
cld
xlat
jnp
cmps
(bad)
iret
cmp
inc
mov
cld
xlat
dec
push
xchg
jl
cmp
push
mov
xor
xlat
pop
add
cmps
ja
(bad)
xlat
and
call
sub
push
add
cmp
aaa
cmp
ins
dec
cmp
cmp
cli
xlat
add
cmp
or
cmp
adc
idiv
cmp
sbb
cli
xlat
loop
pop
add
cmp
in
and
pushf
mov
pushf
(bad)
sub
cmp
stc
ds
xchg
cmp
int
out
add
cmp
ror
xlat
fsub
(bad)
icebp
inc
cmp
cmps
mov
call
scas
or
aad
cmp
mov
jle
out
std
xlat
mov
cmp
adc
inc
dec
das
cmp
xchg
xchg
out
das
cmp
lahf
add
ins
mov
cli
xlat
pusha
rcr
jae
cmp
push
cmp
ja
imul
out
cmp
jge
push
jmp
scas
jns
cmp
push
fwait
mov
xchg
into
lds
cli
xlat
es
icebp
test
sti
xlat
xor
stc
xlat
cmp
jbe
lahf
cmp
add
dec
scas
cmp
or
xchg
dec
and
(bad)
xlat
sbb
std
xlat
out
ss
push
cmp
call
cmp
cmc
jbe
sbb
cmp
cld
stos
es
mov
std
xlat
leave
adc
test
(bad)
xlat
fcmovnb
inc
imul
scas
scas
daa
cmp
lods
sub
xlat
mov
xchg
dec
xlat
cmp
mov
cmp
or
xlat
mov
call
xchg
rcl
cmp
lahf
push
jbe
lahf
cmp
pusha
jno
and
mov
cld
xlat
jb
push
adc
cmp
js
jbe
push
cmp
inc
jecxz
(bad)
out
cmp
dec
icebp
dec
out
cmp
push
pop
dec
stos
pop
cmp
pop
dec
out
or
cmp
and
cmp
sub
sti
xlat
aaa
jnp
mov
cmp
cmp
scas
sbb
cmp
add
jbe
das
cmp
or
mov
adc
jle
mov
(bad)
xlat
in
fidivr
cmp
jmp
xlat
icebp
add
hlt
outs
cmp
sti
arpl
xlat
ret
adc
(bad)
xlat
int
mov
(bad)
push
cmps
mov
fidiv
test
cmp
movs
fldcw
xlat
stos
lock
mov
cmp
mov
(bad)
mov
cmp
mov
cmp
mov
inc
das
aas
cmp
xchg
dec
push
je
cmp
fwait
add
das
pop
test
xlat
arpl
add
test
xlat
ins
mov
cld
xlat
jo
into
adc
fisubr
das
test
xlat
inc
push
cs
das
test
xlat
dec
jnp
jecxz
test
xlat
push
rcl
das
test
xlat
pop
mov
jle
test
xlat
and
ds
test
xlat
sub
test
xlat
xor
test
xlat
ds
jbe
scas
test
xlat
add
sahf
cdq
daa
test
xlat
or
ds
lahf
test
xlat
adc
in
out
clc
xlat
sbb
test
xlat
loop
push
loop
test
xlat
in
pop
into
(bad)
fild
dec
xchg
pop
test
xlat
(bad)
and
mov
test
xlat
(bad)
mov
mov
leave
mov
cli
xlat
rcl
jbe
jg
call
fld
sub
sti
xlat
mov
test
xlat
mov
jle
daa
test
xlat
mov
test
xlat
mov
cld
xlat
xchg
cmp
out
test
xlat
pushf
les
pop
test
xlat
pusha
mov
std
xlat
imul
std
xlat
je
fisubr
test
xlat
jns
pop
and
inc
xchg
inc
dec
sub
jg
test
xlat
push
or
pop
test
xlat
pop
retf
sahf
xor
test
xlat
and
pop
into
ja
stc
xlat
ds
sahf
adc
test
xlat
add
ss
test
xlat
or
sub
stc
xlat
adc
out
out
test
xlat
sbb
test
xlat
loop
out
das
test
xlat
jmp
xlat
cmc
jg
and
test
xlat
stc
ja
push
pop
cmp
std
xlat
enter
cmps
test
xlat
aad
leavew
das
test
xlat
fisub
outs
cmps
test
xlat
mov
test
xlat
scas
jmp
mov
test
xlat
xor
inc
test
xlat
(bad)
mov
sti
xlat
xchg
repnz
ja
stc
xlat
cdq
jecxz
fwait
xchg
test
loope
xor
call
jno
out
jg
cli
xlat
jle
inc
sub
inc
mov
movs
fild
(bad)
fidivr
das
dec
and
clc
xlat
and
xchg
xlat
adc
xchg
xlat
(bad)
mov
std
xlat
(bad)
sahf
popf
pop
xchg
xlat
cmps
and
(bad)
xlat
test
push
mov
xchg
xlat
mov
xchg
xlat
xchg
cld
xlat
mov
das
ja
ds
cwde
mov
std
xlat
bound
std
xlat
ins
xor
xlat
jbe
xchg
jge
cmps
push
out
xchg
xlat
inc
movs
push
lock
xchg
xlat
dec
pop
retfw
pop
xchg
xlat
push
pusha
out
out
xchg
xchg
xlat
pop
pop
out
pop
xchg
xlat
and
(bad)
xlat
push
cmp
xlat
test
cli
xlat
ins
push
out
out
clc
xlat
jbe
dec
mov
cmp
mov
inc
movs
cmps
ja
cmp
push
cmp
inc
addr16
push
inc
push
mov
aaa
sbb
sti
out
(bad)
xlat
cmp
data16
das
cmp
pop
ja
cld
xlat
or
cmp
inc
pop
cmp
lea
std
xlat
out
cs
cmp
add
(bad)
mov
sti
xlat
(bad)
jno
xlat
mov
std
xlat
(bad)
mov
stc
xlat
fisttp
cmps
loop
cmp
imul
xlat
scas
aad
aas
aas
cmp
add
cmp
stos
das
cmp
aad
cmp
push
cmp
pop
test
stc
xlat
test
xlat
push
cmp
je
inc
xchg
xchg
ds
cmp
inc
adc
repz
cmp
dec
or
inc
pop
cmp
push
pop
push
push
xlat
cmp
pop
mov
(bad)
xlat
and
cmp
sub
mov
xor
out
ja
call
cmp
outs
sbb
cld
xlat
pop
or
xlat
shld
pusha
inc
cmp
adc
mov
xlat
sbb
inc
loop
cmp
out
xchg
push
inc
cmp
out
xchg
pop
sub
call
idiv
das
cmp
clc
cmp
push
iret
cmp
ret
aad
cmp
retf
xor
call
shl
xchg
or
cmp
ficomp
aam
cmp
cmps
retf
cmps
cmp
lods
and
test
stc
xlat
mov
(bad)
test
std
xlat
sub
or
(bad)
xlat
mov
stc
fild
ficom
xlat
cmp
lahf
add
ror
xlat
popa
jmp
dec
scas
cmp
ins
pop
mul
je
sahf
cmp
cmp
jge
push
scas
inc
cmp
inc
mov
xlat
dec
xchg
int
cmp
push
adc
xlat
pop
inc
imul
out
cmp
and
leave
inc
pop
xor
clc
xlat
ss
(bad)
ds
call
aas
inc
push
jno
cmp
add
(bad)
push
das
cmp
pmulhuw
xlat
adc
cmp
sbb
cmp
loope
dec
dec
cmp
cmc
movzx
stc
pop
test
shl
xlat
leave
repz
shl
(bad)
xlat
(bad)
sub
(bad)
lahf
cmp
fnstsw
cld
xlat
mov
cmp
test
jle
daa
cmp
mov
into
sahf
cmps
cmp
mov
cmp
test
call
mov
(bad)
xlat
xchg
and
nop
daa
cmp
lahf
dec
inc
cmp
cld
xlat
popa
setbe
cmp
push
ss
outs
cmp
jne
mov
xlat
js
mov
xlat
cmp
inc
inc
(bad)
je
cmp
dec
inc
mov
xlat
push
or
mul
cmp
pop
(bad)
mov
xlat
and
imul
(bad)
and
cmp
xor
dec
loope
cmp
cmp
push
sub
cmp
add
clc
xlat
or
cld
xlat
push
aam
sub
(bad)
xlat
push
ja
popw
cmp
jecxz
xchg
imul
clc
xlat
out
fist
test
pop
cmp
cld
xchg
inc
in
cmp
les
imul
into
jns
adc
test
dec
out
(bad)
xlat
fcomp
call
cmps
cmps
adc
xor
xlat
mov
es
mov
cmp
sbb
aaa
cmp
mov
stc
xlat
xchg
push
ds
cmp
cdq
imul
int
test
xlat
ins
mov
cld
xlat
je
cmps
mov
test
xlat
js
out
jg
test
xlat
inc
div
test
xlat
dec
xchg
scas
test
xlat
push
fsubp
outs
pop
test
xlat
pop
jmp
and
or
test
xlat
sub
outs
cmps
inc
mov
outs
test
xlat
cmp
pop
test
xlat
pop
imul
pop
push
ror
stc
xlat
adc
cmp
test
xlat
sbb
mov
xlat
jecxz
xchg
pop
pop
test
xlat
jmp
test
xlat
cmc
cmp
xlat
cli
pop
mov
xlat
ret
js
test
xlat
iret
pop
push
jl
test
xlat
xlat
cli
mov
xlat
fcmovu
mov
xlat
cmps
push
ds
jg
lods
pop
test
xlat
mov
outs
out
test
xlat
mov
test
xlat
test
in
pop
test
xlat
mov
scas
push
iret
test
xlat
xchg
arpl
fs
test
xlat
lahf
(bad)
push
sub
test
xlat
fs
cld
inc
sahf
test
xlat
jle
jbe
daa
test
xlat
inc
sub
jp
test
xlat
dec
add
xlat
push
push
not
test
xlat
pop
(bad)
ins
mov
stc
xlat
daa
repnz
movs
pop
test
xlat
sub
(bad)
xlat
xor
cli
xlat
cmp
test
xlat
add
test
xlat
or
test
xlat
adc
es
dec
test
xlat
sbb
test
xlat
loop
jbe
mov
adc
xchg
xchg
(bad)
test
xlat
clc
frstor
pop
aas
test
xlat
ret
iret
dec
aaa
test
xlat
int
mov
out
stc
xlat
rcl
push
and
test
xlat
fldenv
cli
xlat
cmps
imul
test
xlat
test
mov
pop
test
xlat
mov
(bad)
push
mov
xlat
xchg
inc
add
out
int3
push
test
xlat
cwde
shl
xlat
addr16
dec
cmps
xchg
xlat
outs
mov
add
xchg
xlat
jb
push
push
ja
stc
xlat
jp
mov
xlat
inc
push
push
icebp
mov
clc
xlat
push
repnz
xor
xchg
xlat
pop
xchg
fidivr
xchg
xlat
and
stc
xlat
sub
cs
xchg
xlat
aaa
icebp
jbe
pop
xchg
xlat
cmp
clc
xlat
push
inc
mov
xlat
or
dec
cmps
xchg
xlat
adc
es
xchg
xlat
sbb
sti
xlat
jecxz
(bad)
push
lahf
xchg
xlat
call
xchg
xlat
repnz
adc
xchg
xlat
clc
xor
xlat
rol
inc
jle
pop
cmps
inc
aas
xchg
xlat
fisubr
std
xlat
mov
xchg
xlat
test
xchg
xlat
mov
push
adc
xchg
xlat
mov
xchg
xlat
add
fild
sahf
add
xchg
xlat
xchg
pop
cs
ja
cs
push
xchg
xlat
pusha
fs
add
clc
xlat
imul
xlat
jne
mov
pop
(bad)
(bad)
daa
xchg
xlat
inc
sbb
jg
cld
xlat
dec
sahf
outs
rcl
xchg
xlat
push
jge
sahf
jbe
into
pop
push
xchg
xlat
and
(bad)
iretw
xchg
xlat
sub
jbe
test
cld
xlat
aas
ror
xlat
add
fimul
or
outs
(bad)
out
std
xlat
adc
outs
ret
call
sbb
(bad)
ja
clc
xlat
in
jbe
inc
xchg
xlat
jmp
xchg
xlat
cmc
fidivr
xlat
cli
mov
cld
xlat
ret
movs
inc
xchg
xlat
int3
aam
push
fild
dec
add
xchg
xlat
(bad)
std
xlat
mov
xchg
xlat
stos
(bad)
lahf
xchg
xlat
mov
push
push
dec
xchg
xlat
mov
xchg
xlat
xchg
cld
xlat
mov
outs
xchg
xlat
xchg
pop
pop
xchg
dec
xchg
xlat
fwait
ss
push
jg
stc
xlat
addr16
sti
xlat
imul
xlat
je
(bad)
pop
mov
xlat
jl
outs
xchg
out
std
xlat
inc
xchg
jg
call
dec
lds
cmps
mov
xlat
push
or
std
xlat
pop
fnstenv
pop
mov
xlat
and
mov
xlat
sub
push
sub
mov
xlat
ss
jecxz
mov
xlat
cmp
out
loope
mov
xlat
add
pop
lods
aaa
mov
xlat
or
xlat
adc
mov
xlat
sbb
mov
xlat
out
cmps
addr16
mov
xlat
out
popa
push
sub
mov
xlat
div
mov
xlat
clc
dec
sahf
pop
addr16
xlat
rol
ds
mov
xlat
leave
dec
mov
xchg
mov
xlat
rcl
clc
xlat
fdivr
push
aam
mov
xlat
mov
mov
xlat
test
mov
xlat
mov
xchg
mov
xlat
mov
mov
xlat
xchg
clc
xlat
lea
clc
xlat
nop
adc
call
xlat
popa
(bad)
(bad)
ud0
data16
mov
xlat
jae
cmps
and
clc
xlat
jl
push
pusha
ja
cld
xlat
inc
cmp
xlat
dec
adc
ror
mov
xlat
push
jae
fwait
push
mov
xlat
pop
das
data16
xchg
(bad)
lahf
das
mov
xlat
sub
cmps
and
mov
xlat
ss
es
cmp
in
mov
xlat
add
mov
xlat
or
mov
xlat
adc
mov
xlat
pop
adc
(bad)
xlat
loop
(bad)
xor
jmp
mov
xlat
repz
push
xlat
mov
xlat
sti
push
std
xlat
mov
xlat
enter
test
(bad)
xlat
fstp
out
push
mov
xlat
mov
mov
xlat
lods
hlt
pop
nop
mov
std
xlat
mov
push
pop
pop
mov
xlat
mov
mov
xlat
xchg
pop
out
mov
xlat
mov
pop
and
xlat
xchg
gs
xchg
mov
xlat
popf
lea
xlat
arpl
xlat
ins
repnz
clc
aaa
mov
xlat
jae
sub
std
xlat
jge
out
shl
call
inc
mov
std
xlat
dec
loope
sub
mov
xlat
push
mov
cld
xlat
pop
ss
(bad)
(bad)
xlat
and
mov
xlat
sub
inc
jnp
dec
or
and
fisttp
inc
mov
xlat
or
sti
xlat
adc
xlat
pop
in
mov
out
ds
pop
mov
xlat
jmp
xlat
hlt
sbb
xlat
std
xchg
xlat
lds
es
dec
(bad)
jnp
mov
xlat
shl
out
dec
pop
mov
xlat
fmul
cmps
cmp
mov
xlat
stos
xchg
push
test
std
xlat
mov
push
xor
call
mov
mov
xlat
test
es
jnp
cmps
push
ja
(bad)
xlat
xchg
shl
(bad)
das
mov
xlat
fadd
dec
mov
xlat
popa
iret
xchg
mov
xlat
outs
xlat
cs
jp
jle
mov
retf
pop
imul
push
jecxz
mov
xlat
dec
dec
outs
push
(bad)
mov
xlat
push
bound
pushf
outs
mov
xlat
pop
add
xlat
aaa
mov
xlat
and
mov
sub
mov
xlat
xor
mov
xlat
cmp
imul
stc
xlat
push
(bad)
fisub
mov
xlat
or
cld
xlat
adc
mov
xlat
push
pushf
es
test
cli
xlat
jmp
mov
xlat
icebp
push
es
jp
cmps
shl
sbb
addr16
xlat
leave
push
mov
(bad)
ins
mov
fisttp
mov
mov
mov
xlat
test
es
dec
mov
xlat
mov
cmps
fistp
push
out
adc
mov
xlat
xchg
pop
out
mov
xlat
mov
sti
xlat
xchg
cmps
push
sub
mov
xlat
sahf
lds
(bad)
(bad)
clc
xlat
rcr
cs
(bad)
call
outs
call
jae
push
mov
jg
mov
std
xlat
inc
nop
xchg
(bad)
std
xlat
dec
ret
inc
(bad)
xchg
(bad)
(bad)
xlat
push
jle
cld
fisttp
out
sub
cld
xlat
and
inc
mov
mov
(bad)
xlat
jno
dec
mov
imul
lds
cmp
or
cli
xlat
js
mov
cmp
jbe
cmp
and
dec
into
aad
cmp
gs
cmp
fisttp
or
xlat
xchg
cmp
jb
cmp
(bad)
cmp
mov
cmp
dec
lahf
cmp
bound
pop
jle
dec
cmp
mov
rcr
mov
sti
xlat
into
loopne
sbb
lea
addr16
stos
xlat
cmp
xor
jmp
cmp
cld
xlat
mov
out
mov
cli
xlat
mov
cmp
sar
jmp
xchg
jge
inc
out
cld
xlat
cdq
cs
stos
pop
cmp
addr16
pop
out
cld
xlat
imul
das
cmp
jno
push
adc
cmp
jg
xchg
cli
xlat
inc
jmp
aam
cmp
dec
push
cli
xlat
push
sbb
clc
xlat
pop
push
out
retf
stc
xlat
sub
mov
daa
cmp
xor
cmp
push
ret
inc
inc
jmp
cmp
loopne
(bad)
aaa
inc
mov
aaa
cmp
std
sbb
movhps
push
ja
cmp
into
mov
stc
xlat
(bad)
arpl
rcl
(bad)
xlat
fdiv
(bad)
xlat
cmps
push
cmps
(bad)
pop
cmp
stos
es
gs
cmp
mov
dec
pop
jo
jbe
addr16
sub
xlat
mov
push
test
call
fwait
in
jns
cmp
arpl
push
outs
test
cli
xlat
jb
dec
fidivr
iret
data16
jg
stc
xlat
inc
adc
fdiv
cmp
dec
fst
pop
inc
daa
mov
pop
jle
ja
sti
xlat
and
call
cs
cmps
mov
cmp
xor
(bad)
aas
iret
cmp
cmp
adc
cmp
add
adc
cmp
or
cmp
adc
sahf
cmp
xlat
sbb
es
cmp
in
outs
imul
mov
sti
xlat
hlt
xchg
mov
mov
(bad)
xlat
shl
xor
iret
mov
call
aam
push
icebp
pop
cmp
fcomi
data16
in
cmps
iret
cmp
test
cmp
mov
sahf
in
cmp
mov
cmp
xor
test
std
xlat
xchg
(bad)
mul
cwde
ja
aam
cmp
bound
cld
xlat
ins
test
push
mov
ins
out
mov
(bad)
xlat
inc
mov
ins
xchg
outs
sub
mov
clc
xlat
pop
xchg
mov
fild
fsubp
push
cmp
sub
or
cmp
xor
cmp
cmp
into
neg
data16
das
cmp
or
xchg
xchg
neg
iret
cmp
sbb
inc
cmps
pop
cmps
cmp
jmp
xlat
cmc
jecxz
in
cmp
(bad)
mov
(bad)
xlat
rcr
scas
cmp
retf
retf
push
imul
cmp
fisttp
cld
xlat
cmps
pop
mov
xlat
scas
xor
jno
cmp
mov
xchg
mov
cmp
cmp
xlat
mov
mov
xlat
xchg
mov
sti
xlat
lahf
pop
(bad)
jns
test
xlat
data16
xlat
imul
and
test
xlat
jne
ficomp
jp
out
xchg
mov
fwait
cmps
test
cld
xlat
dec
bound
jns
test
xlat
push
and
(bad)
mov
cli
xlat
and
xor
test
xlat
sub
inc
jnp
test
xlat
xor
jle
cmps
test
xlat
cmp
mov
xlat
add
test
xlat
or
xlat
adc
sub
test
xlat
sbb
test
xlat
out
inc
(bad)
test
xlat
in
lods
cmps
pop
pop
test
xlat
cmc
or
xlat
cli
popa
mov
xlat
sar
retf
retf
cld
xlat
aam
into
inc
test
call
mov
test
xlat
lods
clc
out
xchg
cmps
call
mov
test
xlat
and
cld
xlat
mov
mov
xchg
push
cli
pop
test
test
xlat
addr16
push
and
stc
xlat
imul
xlat
jbe
inc
adc
test
xlat
inc
int
mov
dec
fbld
pop
test
xlat
push
mov
clc
xlat
and
out
iret
test
xlat
sub
xlat
xor
xchg
test
xlat
cmp
or
sti
xlat
add
scas
or
test
xlat
or
std
xlat
push
outs
int3
je
dec
mov
out
push
daa
mov
xlat
lock
(bad)
sub
test
xlat
std
pop
out
daa
test
xlat
ret
xlat
pop
jno
test
xlat
xlat
in
jne
test
xlat
fldenv
dec
cmp
test
xlat
movs
add
clc
xlat
stos
dec
mov
xlat
mov
dec
test
xlat
mov
test
xlat
adc
test
xlat
mov
sti
xlat
xchg
in
mov
xlat
arpl
sahf
out
das
xchg
xlat
imul
xlat
je
push
test
xchg
xlat
jns
dec
ret
clc
xlat
inc
fnsave
scas
xchg
xlat
dec
jae
dec
scas
xchg
xlat
push
cmp
dec
xlat
xchg
xlat
pop
lahf
push
jecxz
xchg
xlat
and
lock
sti
xlat
xor
xlat
cmp
data16
dec
cs
xchg
xlat
or
stc
xlat
adc
push
push
das
xchg
xlat
sbb
(bad)
mov
jecxz
cmps
pop
scas
xchg
xlat
jmp
xlat
icebp
dec
inc
xchg
xlat
sti
pop
xchg
aaa
xchg
xlat
(bad)
sti
out
daa
xchg
xlat
enter
scas
xchg
xlat
rcr
(bad)
cmp
xchg
xlat
fild
std
xlat
cmps
adc
push
lahf
xchg
xlat
lods
push
jbe
fild
xchg
fild
sahf
pop
scas
xchg
xlat
cmp
xlat
pop
push
ja
pop
mov
xchg
xlat
cdq
lods
inc
pop
xchg
xlat
lea
mov
loope
je
xchg
xlat
jbe
scas
in
xchg
xlat
js
(bad)
xlat
inc
xchg
xlat
inc
retf
xlat
xchg
xlat
dec
shr
dec
mov
sti
xlat
push
sub
pop
sbb
xlat
and
fs
xchg
xlat
sub
outs
xchg
xlat
ss
sbb
xchg
xlat
cmp
fdivrp
mov
cld
xlat
or
mov
pop
sti
xchg
pushf
push
xchg
xlat
sbb
std
xlat
out
xchg
ja
xchg
xlat
in
cwde
scas
cwde
jg
cld
xlat
repz
(bad)
ss
xchg
xlat
stc
lods
ds
jbe
jbe
pop
xchg
xlat
iret
pop
sahf
je
xchg
xlat
xlat
mov
repnz
clc
xlat
mov
xchg
xlat
scas
xor
mov
xchg
xlat
mov
into
sbb
cld
xlat
mov
xchg
xlat
xchg
xlat
xchg
xlat
mov
clc
xlat
xchg
popf
mov
cmps
xchg
xlat
fwait
mov
cli
xlat
outs
pop
pop
aas
mov
xlat
push
push
les
add
(bad)
mov
xlat
jge
cs
mov
xlat
inc
fimul
aaa
mov
xlat
dec
popf
test
mov
xlat
push
jmp
cld
xlat
pop
(bad)
out
jg
sti
xlat
and
mov
xlat
sub
ror
xlat
aaa
iret
outs
push
mov
cld
xlat
cmp
jbe
test
clc
xlat
or
std
xlat
pop
imul
dec
push
cmc
(bad)
mov
xlat
out
xchg
std
daa
mov
xlat
in
sti
mov
iret
mov
xlat
lock
sub
clc
mov
cld
xlat
ror
xlat
int3
enter
mov
xlat
shl
stc
xlat
fiadd
sub
movs
sub
jns
scas
fisub
mov
xlat
mov
mov
xlat
pop
push
scas
mov
xlat
xchg
repnz
jne
mov
xlat
popf
into
(bad)
in
mov
xlat
sub
test
cld
xlat
jbe
(bad)
es
mov
xlat
jle
xchg
pop
mov
xlat
inc
push
es
(bad)
dec
iret
out
outs
mov
xlat
push
pop
lea
stc
xlat
pop
pop
jbe
cmps
mov
xlat
and
(bad)
fld
mov
xlat
sub
(bad)
xlat
xor
push
(bad)
dec
pop
cdq
scas
mov
xlat
add
xlat
push
mov
clc
xlat
adc
xchg
(bad)
sbb
jbe
mov
xlat
loope
outs
xchg
pop
mov
xlat
call
mov
xlat
cmc
mov
mov
xlat
cld
add
xlat
ret
test
xlat
enter
scas
mov
xlat
ror
sub
std
xlat
fadd
call
movs
nop
xchg
mov
stc
xlat
scas
test
xlat
mov
inc
dec
mov
test
xlat
cmp
or
(bad)
xlat
lea
clc
xlat
xchg
(bad)
out
and
cdq
inc
push
sub
mov
xlat
popa
pop
outs
lds
rcr
je
cs
mov
call
js
not
aas
mov
xlat
inc
adc
clc
xlat
dec
loopne
test
sbb
pop
mov
xlat
pop
xor
out
sti
xlat
and
xchg
xchg
pop
mov
xlat
cs
mov
xlat
xor
outs
mov
xlat
and
sub
add
into
xchg
sti
xlat
or
pushf
dec
into
cs
mov
xlat
sbb
idiv
out
out
ss
sti
xlat
jmp
xlat
lock
xchg
pop
mov
addr16
xlat
ret
xlat
push
jo
mov
xlat
int3
sahf
imul
mov
and
stc
xlat
(bad)
push
rcl
mov
stc
xlat
scas
mov
(bad)
mov
push
idiv
iret
mov
xlat
mov
mov
xlat
adc
(bad)
mov
xlat
lea
mov
mov
xlat
xchg
push
mov
xlat
call
xlat
arpl
and
mov
xlat
push
mov
daa
mov
xlat
jo
scas
push
outs
mov
xlat
jns
push
cmp
inc
or
iret
inc
mov
xlat
dec
mov
stc
xlat
push
(bad)
add
cli
xlat
pop
inc
data16
mov
xlat
and
shr
rol
repz
stc
xlat
ss
inc
push
out
mov
xlat
cmp
sbb
cli
xlat
add
(bad)
xlat
or
xchg
add
mov
xlat
pop
and
xlat
sbb
jecxz
mov
xlat
in
mov
xchg
mov
xlat
call
mov
xlat
repz
cs
clc
xlat
cld
xor
pop
iret
mov
xlat
rol
xlat
retf
test
mov
xlat
aad
xchg
aaa
dec
inc
pop
xchg
mov
xlat
cmps
rep
lea
mov
xlat
scas
addr16
inc
mov
xlat
mov
into
add
inc
jle
mov
cld
xlat
test
stc
xlat
mov
clc
xlat
xchg
mov
fmul
mov
xlat
fwait
test
cli
xlat
arpl
out
dec
fisttp
out
addr16
std
xlat
jae
push
xchg
(bad)
clc
xlat
jle
sahf
mov
stc
xlat
inc
jbe
add
(bad)
call
push
sbb
jns
(bad)
call
pop
xchg
pop
pop
daa
(bad)
(bad)
xlat
and
add
(bad)
stc
xlat
cs
push
ins
inc
(bad)
clc
xlat
xor
jle
mov
clc
xlat
cmp
(bad)
stc
xlat
add
(bad)
cld
xlat
or
call
adc
loopne
(bad)
(bad)
xlat
sbb
xchg
dec
push
(bad)
sti
xlat
in
jbe
dec
(bad)
cli
xlat
jmp
xlat
cmc
fild
jg
(bad)
std
xlat
cld
jp
and
(bad)
cld
xlat
ret
stos
fisttp
sahf
jmp
ds
(bad)
sti
xlat
fnsave
test
push
cs
test
mov
xlat
(bad)
sti
xlat
mov
sahf
mov
push
out
pop
(bad)
cli
xlat
cmp
repnz
mov
push
ja
(bad)
xlat
sahf
dec
scas
push
ja
cld
xlat
jo
push
idiv
mov
xlat
js
push
xchg
mov
xlat
inc
mov
xchg
pushf
dec
mov
mov
xlat
es
push
retf
(bad)
mov
xlat
sub
mov
xlat
xor
add
mov
xlat
cmp
sti
xlat
add
call
or
call
adc
std
xlat
sbb
cs
test
xlat
jmp
mov
xlat
hlt
scas
push
pop
push
mov
xlat
cli
(bad)
fcompp
das
mov
xlat
ret
lahf
das
mov
xlat
int3
imul
aam
jbe
aas
mov
xlat
ficomp
std
xlat
mov
mov
xlat
stos
jg
push
scas
mov
xlat
mov
ds
(bad)
mov
xlat
mov
mov
xlat
test
xlat
mov
push
push
addr16
xlat
xchg
or
push
mov
sbb
xlat
push
cmps
jns
(bad)
call
jae
push
jmp
jp
push
fist
(bad)
cli
xlat
inc
add
daa
(bad)
(bad)
xlat
dec
nop
mov
lahf
(bad)
std
xlat
push
cmc
push
loope
(bad)
sti
xlat
pop
mov
std
xlat
daa
mov
sbb
sub
scas
test
call
ds
idiv
add
sahf
pop
cmps
(bad)
cli
xlat
or
dec
in
(bad)
sti
xlat
adc
call
sbb
sahf
dec
dec
(bad)
(bad)
xlat
loope
outs
mov
(bad)
xlat
jmp
(bad)
sbb
std
xlat
hlt
cwde
not
stc
pushf
(bad)
add
lds
ds
(bad)
std
xlat
int3
in
push
(bad)
sti
xlat
rol
push
jne
(bad)
call
fcmovb
into
and
push
(bad)
out
outs
(bad)
(bad)
xlat
lods
retf
outs
inc
(bad)
(bad)
call
mov
data16
(bad)
stc
xlat
mov
(bad)
cli
xlat
xchg
(bad)
iret
inc
(bad)
stc
xlat
mov
mov
xchg
nop
cs
inc
(bad)
cld
xlat
pushf
inc
(bad)
sti
dec
mov
xlat
gs
fidiv
mov
xlat
ins
mov
or
mov
xlat
jne
push
inc
outs
mov
xlat
jns
dec
mov
fidiv
fisttp
push
inc
dec
mov
xlat
push
xchg
push
iret
dec
mov
xlat
pop
mov
xchg
out
xlat
mov
xlat
sub
dec
aam
mov
xlat
aaa
cmp
pop
mov
xlat
cmp
out
das
mov
xlat
adc
sahf
hlt
xchg
mov
xlat
sbb
ss
mov
xlat
jecxz
push
clc
daa
mov
xlat
out
jae
and
mov
xlat
mul
clc
xlat
cli
imul
xlat
(bad)
retf
jmpw
cli
xlat
iret
leave
not
mov
xlat
aam
outs
mov
mov
xlat
(bad)
data16
mov
xlat
mov
mov
xlat
stos
mov
add
mov
xlat
mov
cs
xlat
mov
xlat
mov
mov
xlat
add
xlat
mov
xlat
xchg
add
call
xlat
pusha
xor
movs
mov
mov
dec
xlat
xchg
cli
xlat
jb
out
ret
cmps
xchg
stc
xlat
jg
mov
clc
xlat
inc
cmps
idiv
je
pop
(bad)
xchg
std
xlat
push
outs
mov
aas
xchg
call
pop
data16
and
xchg
call
sub
clc
xlat
xor
(bad)
pop
fist
ficomp
xchg
std
xlat
add
xchg
stc
xlat
adc
into
dec
inc
xchg
cld
xlat
sbb
xchg
clc
xlat
loope
(bad)
jo
xchg
call
in
mov
xchg
mov
cld
xlat
hlt
add
fisttp
mov
std
xlat
(bad)
jmp
jbe
xchg
sti
xlat
int
cs
(bad)
xchg
call
ror
clc
xlat
fisttp
cli
xlat
mov
xchg
clc
xlat
scas
push
push
mov
mov
push
or
xchg
(bad)
xlat
mov
xchg
stc
xlat
adc
iret
xchg
(bad)
xlat
mov
jae
xchg
stc
xlat
xchg
fistp
inc
xchg
stc
xlat
fwait
cld
outs
mov
push
jle
aas
nop
cld
xlat
jbe
test
mov
retf
call
scas
sub
nop
cli
xlat
push
cdq
sahf
out
nop
clc
xlat
pop
fcmovb
and
nop
cli
xlat
and
and
nop
call
sub
inc
fistp
nop
std
xlat
xor
push
gs
nop
call
cmp
xchg
mov
aad
int
nop
cli
xlat
or
std
xlat
adc
ror
cli
xlat
push
jge
loop
nop
cli
xlat
in
mov
xlat
in
les
xor
xlat
div
pop
nop
cli
xlat
mov
fxch
nop
cld
xlat
int
ds
aas
nop
stc
xlat
aad
sahf
or
nop
clc
xlat
fnsave
stc
xlat
mov
nop
cli
xlat
lods
xchg
(bad)
sub
nop
(bad)
xlat
mov
push
mov
nop
std
xlat
mov
nop
sti
xlat
xchg
push
inc
nop
sti
xlat
mov
scas
mov
stc
xlat
xchg
inc
xlat
popa
(bad)
not
xchg
cli
xlat
outs
data16
push
xchg
(bad)
xlat
jne
mov
xlat
inc
push
ss
xchg
std
xlat
dec
pop
push
loopne
xchg
std
xlat
push
xor
push
inc
xchg
std
xlat
pop
xchg
xchg
outs
setae
xlat
and
sti
xlat
sub
ss
xchg
call
xor
mov
ss
call
add
aam
xchg
stc
xlat
or
(bad)
pop
dec
xchg
std
xlat
adc
dec
fist
mov
xlat
jmp
xchg
call
lock
out
sti
xlat
push
cld
xlat
ret
fisubr
xchg
std
xlat
retf
mov
cld
xlat
(bad)
test
ja
xchg
call
fisub
(bad)
xlat
cmps
push
xchg
pop
xchg
cli
xlat
lods
push
dec
pushf
xlat
xchg
cli
xlat
mov
xchg
(bad)
xlat
cmp
xlat
mov
out
xchg
push
outs
pop
xchg
(bad)
xlat
fwait
pushf
(bad)
ror
mov
cmp
xchg
stc
xlat
ins
(bad)
pop
icebp
not
push
ret
jg
sti
xlat
js
out
test
inc
les
ret
(bad)
xlat
dec
cs
je
xchg
cld
xlat
push
(bad)
xor
pop
push
test
xchg
std
xlat
es
push
xchg
cld
xlat
sub
xchg
(bad)
xlat
xor
cli
xlat
ds
data16
xlat
xchg
cld
xlat
pop
inc
out
pop
xchg
cli
xlat
or
xchg
std
xlat
adc
push
xor
xchg
stc
xlat
push
(bad)
cmps
cdq
out
sti
xlat
loope
inc
adc
xchg
(bad)
xlat
out
sub
bound
cld
xlat
div
sti
xlat
cld
cli
mov
xchg
std
xlat
(bad)
mov
ret
cld
xlat
retf
pop
pop
xchg
call
aad
xchg
fisttp
inc
xchg
stc
xlat
mov
xchg
stc
xlat
stos
sbb
loopne
xchg
cld
xlat
mov
jle
pop
xchg
stc
xlat
mov
xchg
cld
xlat
test
mov
inc
outs
in
xchg
call
sahf
sub
xlat
pusha
pop
out
jb
xchg
cld
xlat
outs
in
into
loopne
xchg
call
jg
dec
xor
xchg
std
xlat
inc
push
mov
sahf
inc
stos
scas
xchg
clc
xlat
push
rol
pop
pop
bound
imul
clc
xlat
sub
xchg
clc
xlat
ss
fisubr
add
stc
xlat
(bad)
mov
xlat
adc
sbb
xchg
std
xlat
sbb
jle
outs
xchg
clc
xlat
loopne
xchg
xchg
clc
xlat
out
nop
push
jnp
xchg
std
xlat
lock
xlat
jmp
stc
mov
cmps
ds
fist
push
sbb
cld
xlat
rol
mov
xlat
ficomp
sahf
sti
push
xchg
cld
xlat
cmps
or
clc
xlat
lods
cmps
mov
xlat
mov
push
js
xchg
stc
xlat
mov
xchg
(bad)
xlat
test
outs
fst
xchg
std
xlat
mov
dec
enter
xlat
xchg
xchg
and
call
pushf
jb
sbb
xchg
sti
xlat
fs
push
retf
das
xchg
(bad)
xlat
jo
mov
pop
xchg
std
xlat
jl
(bad)
jp
xchg
cli
xlat
inc
call
cli
xlat
dec
popa
push
shl
cs
xchg
(bad)
xlat
pop
retf
cs
pop
xchg
call
and
push
in
cmps
xchg
cli
xlat
sub
(bad)
lods
not
sub
sti
xlat
cmp
inc
sete
xlat
add
data16
clc
xlat
(bad)
cs
out
xchg
(bad)
xlat
adc
ds
xchg
stc
xlat
sbb
add
xchg
(bad)
xlat
out
mul
addr16
stc
xlat
out
movs
cs
cli
xlat
div
cli
xlat
inc
(bad)
xlat
lds
stc
xlat
int3
lock
ret
sti
xlat
ror
cld
xlat
fnstcw
stc
xlat
cmps
dec
scas
mov
stos
xchg
shr
imul
mov
xchg
cld
xlat
xchg
clc
xlat
pushf
push
ds
xchg
stc
xlat
arpl
push
imul
ds
xchg
clc
xlat
jo
cs
jl
xchg
test
xchg
cld
xlat
inc
scas
sahf
mov
dec
or
jg
stc
xlat
push
push
es
(bad)
xchg
cld
xlat
pop
sbb
xlat
and
out
(bad)
(bad)
xchg
clc
xlat
sub
xchg
call
xor
scas
repnz
xchg
(bad)
xlat
cmp
sahf
or
add
stc
xlat
or
xchg
(bad)
xlat
adc
mov
push
jne
mov
in
out
sbb
xchg
(bad)
xlat
jmp
jle
mov
sar
out
std
xlat
stc
cmp
xlat
(bad)
movs
scas
mov
sti
xlat
retf
(bad)
imul
(bad)
sbb
das
xchg
cli
xlat
fst
(bad)
xlat
cmps
push
scas
loopne
xchg
sti
xlat
scas
mov
xlat
mov
mov
daa
xchg
std
xlat
mov
xchg
sti
xlat
test
clc
xlat
(bad)
jae
fld
xor
adc
clc
xlat
cdq
inc
(bad)
loopne
xchg
stc
xlat
pusha
pop
out
aas
xchg
call
outs
push
scas
mov
jno
dec
rcl
xchg
std
xlat
jns
test
mov
pop
fist
sahf
jne
xchg
stc
xlat
push
cmp
pop
mov
sti
xlat
and
call
sub
dec
rcl
stc
xlat
xor
push
(bad)
xchg
clc
xlat
cmp
inc
xchg
xchg
call
add
push
push
addr16
cld
xlat
or
adc
sti
xlat
adc
pop
and
inc
pop
add
inc
data16
xchg
stc
xlat
jmp
xchg
clc
xlat
cmc
sbb
and
xchg
(bad)
xlat
jmp
inc
daa
xchg
sti
xlat
ret
dec
mov
call
ror
cli
xlat
fiadd
cli
xlat
cmps
sub
mov
std
xlat
lods
int3
push
dec
xchg
xchg
(bad)
xlat
mov
outs
test
xchg
cli
xlat
mov
xchg
(bad)
xlat
cmp
and
xchg
clc
xlat
mov
clc
xlat
xchg
int
pop
aaa
xchg
cld
xlat
pushf
xor
fistp
dec
sub
cld
xlat
push
out
inc
cdq
call
jbe
sahf
push
daa
cdq
call
js
sahf
call
mov
inc
cdq
std
xlat
dec
out
push
xor
push
(bad)
jecxz
cdq
clc
xlat
pop
mov
(bad)
out
clc
xlat
and
cdq
clc
xlat
sub
outs
in
cdq
(bad)
xlat
xor
cli
xlat
aas
push
call
add
and
push
es
cdq
cli
xlat
push
or
xlat
sbb
fwait
xlat
cdq
std
xlat
jecxz
imul
stc
xlat
jmp
cdq
std
xlat
hlt
push
xor
cdq
std
xlat
sti
(bad)
xlat
mov
xchg
xlat
enter
fistp
cmps
sub
(bad)
ss
cmps
lock
cdq
stc
xlat
test
out
neg
es
xchg
push
sbb
add
xlat
mov
stc
xlat
xchg
push
not
mov
data16
cs
cwde
cld
xlat
pusha
inc
(bad)
pop
ja
(bad)
xlat
jb
push
dec
out
stc
xlat
jge
imul
cwde
stc
xlat
inc
mov
sti
xlat
dec
loope
jge
cwde
std
xlat
push
fimul
xlat
pop
and
and
cwde
clc
xlat
sub
cwde
std
xlat
aaa
push
cmps
mov
clc
xlat
cmp
cld
xlat
add
push
cmps
cwde
clc
xlat
push
outs
inc
scas
cwde
(bad)
xlat
adc
cwde
stc
xlat
sbb
(bad)
xlat
in
test
(bad)
xlat
call
cwde
sti
xlat
idiv
jbe
call
fiadd
ret
mov
cwde
call
int
jle
aaa
cwde
cld
xlat
aam
(bad)
xor
ficom
and
cwde
(bad)
xlat
movs
or
stc
xlat
lods
xchg
push
fwait
iret
cwde
sti
xlat
mov
pop
ds
cwde
(bad)
xlat
mov
cwde
cld
xlat
and
xor
mov
clc
xlat
xchg
fmul
out
cwde
std
xlat
sahf
int
jmp
push
jmp
fwait
cld
xlat
imul
xlat
je
push
scas
xlat
fwait
call
jns
sahf
jae
fwait
std
xlat
inc
mov
mov
fwait
stc
xlat
dec
int3
scas
xor
fwait
call
push
push
push
cmps
iret
fwait
call
pop
mov
iret
mov
in
push
push
jg
sti
xlat
das
jmp
xor
es
outs
fwait
clc
xlat
cmp
outs
cmps
iret
fwait
std
xlat
push
and
jg
cli
xlat
adc
xchg
mov
mov
stc
xlat
out
cs
neg
ss
fwait
sti
xlat
cmc
adc
call
clc
pop
bound
iret
push
xchg
setnp
xlat
retf
sar
sar
cmps
rcl
(bad)
xlat
fstp
fdivp
ja
std
xlat
stos
sbb
stc
xlat
mov
push
xor
fwait
std
xlat
mov
fwait
std
xlat
test
std
xlat
mov
call
xchg
sub
popa
xchg
fwait
stc
xlat
cwde
gs
xlat
arpl
cli
xlat
imul
mov
xlat
call
(bad)
call
ja
(bad)
xlat
dec
rol
inc
fistp
mov
xlat
and
clc
xlat
sub
call
fistp
scas
push
add
into
test
or
call
pop
call
call
(bad)
push
push
call
iret
call
out
call
lahf
call
neg
(bad)
(bad)
dec
call
(bad)
call
lahf
call
inc
call
call
mov
setp
xlat
xchg
cmps
dec
daa
call
xchg
cs
iret
call
mov
call
addr16
(bad)
xlat
ins
lods
(bad)
nop
out
stc
xlat
jno
mul
aaa
popf
(bad)
xlat
js
push
sub
popf
cli
xlat
inc
sbb
popa
fistp
into
imul
xlat
push
push
dec
out
popf
cld
xlat
pop
(bad)
out
inc
das
popf
sti
xlat
and
sti
xlat
sub
(bad)
push
call
sahf
adc
popf
call
cmp
(bad)
mov
xchg
mov
xlat
adc
into
jp
popf
call
pop
aad
xor
call
(bad)
xlat
out
(bad)
sahf
pop
daa
popf
cld
xlat
repz
mov
stc
xlat
sti
mov
adc
rcr
loop
popf
cli
xlat
into
xor
jg
cld
xlat
rcl
clc
xlat
fnstcw
cld
xlat
movs
lods
mov
lahf
popf
cld
xlat
stos
cmp
pop
popf
stc
xlat
mov
push
lds
cli
xlat
mov
popf
sti
xlat
xchg
mov
popf
std
xlat
mov
clc
xlat
nop
or
cmp
xchg
arpl
mov
ss
pushf
cli
xlat
je
not
leave
sahf
sbb
pushf
call
inc
sbb
call
dec
cld
out
pop
pushf
stc
xlat
push
cmp
dec
daa
pushf
(bad)
xlat
pop
xor
pop
pushf
stc
xlat
and
push
call
sub
pushf
cld
xlat
xor
push
rcr
pushf
cli
xlat
ds
cld
xlat
pop
inc
push
icebp
outs
pushf
stc
xlat
movhps
xlat
pop
outs
push
xchg
scas
pushf
cld
xlat
sbb
call
loope
cs
outs
pushf
clc
xlat
jmp
xlat
hlt
dec
scas
adc
pushf
std
xlat
stc
push
xchg
pushf
std
xlat
shl
xlat
leave
jge
cli
pop
pushf
cld
xlat
sar
push
daa
setl
xlat
fcomp
pushf
inc
pushf
cli
xlat
mov
pushf
cli
xlat
lods
leave
push
fincstp
pushf
call
mov
inc
pushf
call
mov
pushf
clc
xlat
xchg
inc
sub
std
xlat
mov
sub
pushf
stc
xlat
xchg
sub
scas
pushf
(bad)
xlat
cwde
mov
xlat
arpl
call
imul
xchg
aas
lahf
clc
xlat
js
pop
jnp
lahf
clc
xlat
inc
inc
test
arpl
imul
test
sti
xlat
pop
pop
mov
aaa
lahf
clc
xlat
es
mov
lahf
cld
xlat
das
adc
dec
(bad)
lahf
call
xor
(bad)
cmp
aas
scas
test
call
add
sbb
lahf
clc
xlat
or
sub
add
stc
neg
inc
mov
(bad)
xlat
jmp
lahf
stc
xlat
cmc
xor
cld
cwde
mov
clc
xlat
(bad)
rcr
fistp
inc
addr16
lahf
sti
xlat
aad
pop
jo
lahf
std
xlat
fist
xlat
out
cld
xlat
cmps
pop
out
jl
lahf
stc
xlat
stos
aam
nop
xlat
lahf
cli
xlat
mov
sahf
sbb
lahf
stc
xlat
mov
lahf
std
xlat
test
cld
xlat
mov
imul
jp
sbb
mov
(bad)
xlat
popa
sti
cs
imul
jmp
je
push
jb
sahf
call
jp
mov
xlat
inc
lock
push
sahf
stc
xlat
dec
push
mov
(bad)
xlat
push
fsub
movs
aas
sahf
cli
xlat
pop
mov
xrstors
ss
cli
xlat
cs
inc
(bad)
sahf
std
xlat
xor
xor
push
(bad)
sub
add
mov
xlat
sahf
clc
xlat
or
fs
cld
xlat
pop
mov
pop
sahf
call
sbb
(bad)
xlat
loope
dec
push
scas
sahf
call
call
sahf
call
div
stc
xlat
cld
jns
cdq
das
sahf
cli
xlat
ror
ja
clc
xlat
retf
push
push
sahf
call
shr
jno
sahf
stc
xlat
fdivr
dec
xchg
sahf
cld
xlat
movs
adc
sub
cld
xlat
test
out
mov
inc
push
fst
sahf
cli
xlat
mov
sahf
cli
xlat
and
addr16
stc
xlat
mov
clc
xlat
xchg
sbb
cli
xlat
cwde
fstp
pop
cld
xlat
retw
outs
mov
idiv
jae
mov
iret
mov
(bad)
inc
iret
mov
jle
inc
mov
out
iret
mov
ss
mov
(bad)
add
mov
(bad)
sub
cmps
repnz
mov
push
jo
mov
inc
pop
sti
xlat
add
xchg
movs
cmps
mov
push
inc
(bad)
mov
push
clc
pop
mov
into
rol
mov
out
jo
mov
push
push
ja
(bad)
xlat
neg
stc
xlat
cli
(bad)
data16
pop
cli
xlat
(bad)
and
mov
es
inc
mov
ds
mov
(bad)
cwde
inc
mov
(bad)
call
div
(bad)
mov
out
xchg
data16
iret
mov
ds
lea
add
mov
push
shr
clc
xlat
cwde
into
inc
das
outs
mov
mov
ins
sar
xchg
mov
xchg
mov
jns
outs
lods
inc
mov
inc
inc
iret
mov
xchg
dec
mov
(bad)
icebp
das
mov
mov
pop
mov
push
ins
lahf
mov
(bad)
imul
std
xlat
ss
(bad)
jae
mov
cs
jg
sti
xlat
add
(bad)
jmp
setge
xlat
adc
mov
mov
jle
lahf
mov
mov
xlat
in
jecxz
mul
(bad)
jg
mov
out
mov
cld
xlat
(bad)
dec
(bad)
sti
cmps
mov
mov
mov
into
xchg
mov
xchg
outs
push
mov
out
pop
mov
push
dec
(bad)
mov
pop
jae
mov
push
inc
jmp
cmps
sbb
mov
mov
xchg
adc
clc
xlat
pushf
mov
gs
sub
fild
xlat
js
scas
ret
aaa
mov
fidiv
clc
xlat
push
pop
cs
mov
jbe
bt
xlat
and
ss
mul
cmps
and
mov
(bad)
rcr
sbb
fstp
lds
pop
mov
jle
fbld
xchg
aas
mov
push
or
stc
xlat
loop
push
stc
xlat
jmp
pop
imul
sub
mov
dec
cmps
push
das
mov
(bad)
sub
int
out
das
mov
push
adc
clc
xlat
fdiv
push
mov
out
mov
mov
out
out
mov
cmps
test
mov
sahf
xor
sti
xlat
test
sti
xlat
mov
or
clc
xlat
nop
gs
fistp
pop
scas
pop
xchg
mov
(bad)
xchg
(bad)
mov
(bad)
xchg
pop
mov
push
fldcw
sbb
xlat
inc
jnp
hlt
mov
imul
push
test
mov
pop
stos
dec
clc
xchg
mov
div
iret
mov
push
inc
mul
mov
addr16
cmp
out
enter
xlat
add
mov
xlat
mov
out
sahf
pop
mov
xchg
dec
mov
out
cmps
mov
ss
mov
jle
jmp
inc
mov
into
in
mov
inc
test
or
std
xlat
shl
ds
fcom
outs
cmp
std
xlat
mov
mov
mov
iret
mov
(bad)
enter
xlat
mov
mov
pop
cmp
test
xlat
xchg
cld
jle
out
mov
es
scas
movs
cld
xlat
popa
scas
mul
movs
(bad)
xlat
outs
inc
mov
movs
call
jno
cmps
cdq
out
movs
cli
xlat
js
ss
das
movs
cli
xlat
inc
add
mov
movs
clc
xlat
dec
mov
xlat
push
dec
push
cmp
movs
stc
xlat
pop
rcl
xlat
movs
std
xlat
es
test
movs
stc
xlat
sub
std
xlat
xor
(bad)
sub
movs
cld
xlat
cmp
push
xchg
test
mov
xlat
adc
movs
stc
xlat
sbb
xlat
jecxz
out
mov
jmp
xlat
lock
cwde
mov
stc
xlat
inc
(bad)
xlat
mov
(bad)
xlat
inc
outs
pusha
ja
call
outs
push
into
(bad)
pop
xchg
cmp
in
cmp
inc
mov
stos
jle
mov
stc
xlat
pop
outs
dec
hlt
push
cmp
and
cmp
or
cmp
enter
xlat
cmp
xchg
cmp
scas
test
cli
xlat
adc
mov
mov
(bad)
xlat
push
adc
adc
push
outs
mov
in
or
push
fild
(bad)
lods
xlat
cmp
les
(bad)
xlat
int3
mov
dec
fild
scas
in
cmp
xlat
cmp
loope
cmp
mov
mov
data16
mov
sti
xlat
xchg
shr
cmp
xchg
jno
xchg
cmp
int
cmp
fs
(bad)
xlat
imul
jo
sahf
ja
cmp
jle
shr
cmp
inc
pop
sahf
mov
cmp
dec
xor
adc
push
call
pop
mov
cli
xlat
daa
adc
call
sub
push
cmp
cmp
xor
popa
addr16
les
(bad)
dec
cmp
add
cmp
or
(bad)
xlat
adc
(bad)
push
cmps
cmp
push
sub
xlat
cmp
out
push
call
jmp
xlat
cmc
outs
outs
ret
xchg
cmp
clc
lds
loope
cmp
(bad)
adc
call
iret
outs
jle
aas
cmp
xlat
lds
xlat
fdivr
push
sub
std
xlat
mov
cmp
scas
arpl
outs
cmp
mov
push
gs
cmp
mov
cmp
or
cmp
mov
stc
xlat
xchg
(bad)
sahf
cmp
cmp
lahf
push
cld
xlat
pusha
ret
inc
push
enter
xlat
jae
dec
jl
pop
stos
pop
cmp
inc
mov
cwde
xchg
cmp
dec
pop
push
ds
cmp
push
loop
fstp
call
pop
dec
out
test
stc
xlat
sub
ds
cmp
aaa
xchg
out
out
mov
stc
xlat
pop
sahf
ds
cmp
or
sti
xlat
adc
out
outs
pop
cmp
push
lds
out
cmp
loop
push
mul
(bad)
xlat
in
inc
cmps
push
jae
into
stos
xchg
outs
or
cmp
rol
icebp
das
cmp
into
xor
pop
cmp
aad
es
cmp
fsubr
mov
movs
pop
jbe
addr16
test
outs
movs
pop
cmp
mov
sahf
adc
cmp
mov
cmp
xchg
cli
xlat
fwait
inc
sahf
inc
xchg
cmp
addr16
mov
xlat
imul
std
xlat
jbe
mov
cli
xlat
jge
push
cli
addr16
inc
in
es
mov
inc
scas
out
cmp
push
fisttp
inc
aas
cmp
pop
jne
popa
mov
cli
xlat
and
ds
aas
cmp
sub
cmp
xor
std
xlat
cmp
push
loope
cmp
add
mov
xlat
or
pop
cmps
daa
cmp
adc
(bad)
xlat
sbb
mov
jg
sti
xlat
jecxz
cs
pop
cmp
jmp
xlat
cmc
adc
xchg
out
cmp
cli
sahf
pop
xor
cmp
lds
pop
cmp
retf
out
jbe
xlat
cmp
aam
(bad)
push
outs
cmp
fadd
and
cmp
mov
cmp
scas
retf
push
pop
jb
jbe
xchg
(bad)
or
hlt
scas
cld
dec
cmp
mov
xchg
mov
cli
xlat
pushf
(bad)
sahf
pushf
pop
test
xlat
popa
cld
ss
test
xlat
imul
fild
(bad)
addr16
xlat
jg
fiadd
cmc
cs
dec
add
pop
test
xlat
push
daa
data16
test
xlat
pop
das
push
push
pop
(bad)
ret
pop
test
xlat
sub
jbe
aaa
test
xlat
xor
test
xlat
cmp
addr16
xlat
add
test
xlat
or
xlat
adc
sahf
imul
clc
xlat
sbb
inc
mov
std
xlat
in
cmps
out
test
xlat
out
gs
out
test
xlat
icebp
or
xlat
cld
int3
ds
test
xlat
(bad)
mov
xlat
leave
pop
out
cmps
test
xlat
rcr
push
stos
mov
push
mov
mov
cld
xlat
scas
fistp
xlat
mov
into
stc
xchg
into
jnp
test
xlat
add
mov
jle
pop
test
xlat
xchg
test
or
test
xlat
popf
or
push
mov
sti
xlat
mov
(bad)
xlat
imul
dec
out
call
jo
out
outs
test
xlat
jg
inc
dec
pop
mov
test
xlat
dec
pop
(bad)
sub
jmp
mov
iret
ss
(bad)
add
test
xlat
das
dec
xchg
fild
ja
test
xor
test
xlat
add
push
outs
out
test
xlat
or
pop
mov
test
xlat
adc
(bad)
adc
sbb
jge
test
xlat
loope
(bad)
shl
push
jbe
ja
sti
xlat
neg
inc
inc
fild
test
xlat
ret
inc
out
cld
xlat
int3
ret
xchg
test
xlat
rol
outs
call
fldcw
call
cmps
or
mov
xlat
mov
jle
fild
xorps
test
lea
clc
xlat
xchg
rol
test
xlat
pushf
imul
arpl
ss
push
xchg
xlat
jbe
inc
dec
pop
xchg
xlat
jns
out
lahf
xchg
xlat
inc
sub
stc
xlat
dec
jbe
shr
xchg
xlat
push
fadd
addr16
xlat
pop
loopne
test
cld
xlat
es
std
xlat
sub
ficom
xchg
xlat
xor
xchg
xlat
cmp
push
(bad)
iret
xchg
xlat
push
jns
js
xchg
xlat
or
pop
mov
call
sbb
sti
xlat
in
inc
push
inc
dec
cmp
cli
xlat
repnz
out
popf
iret
xchg
xlat
clc
mov
jg
xchg
xlat
les
fiadd
retf
scas
jle
test
call
ficomp
cs
mov
xchg
xlat
scas
ret
xchg
pop
pop
xchg
xlat
mov
jle
pop
ficomp
dec
xchg
xlat
xchg
sti
xlat
mov
dec
cmp
sti
xlat
xchg
pop
scas
mov
xchg
xlat
fwait
adc
stc
xlat
addr16
cld
xlat
push
xchg
xlat
jae
out
push
outs
xchg
xlat
jl
dec
icebp
xchg
out
jno
xchg
xlat
dec
hlt
mov
pop
xchg
xlat
push
add
pop
pop
outs
int
xchg
xlat
and
into
imul
xlat
cmp
xchg
xchg
xlat
xor
push
mov
xchg
xlat
cmp
xchg
xlat
add
adc
in
mov
mov
ss
mov
sbb
test
or
test
jmp
outs
inc
out
call
test
pop
ss
sar
and
cld
xlat
iret
jmp
cld
xlat
shr
cld
xlat
fbld
mov
xlat
mov
xchg
xlat
scas
pop
mov
outs
xchg
xlat
mov
push
out
iret
xchg
xlat
mov
xchg
xlat
xchg
fdivr
cwde
dec
inc
jg
call
xchg
das
mov
jbe
outs
lahf
daa
mov
xlat
data16
mov
push
mov
xlat
push
inc
or
mov
xlat
jb
sahf
leave
lahf
mov
xlat
jg
inc
sbb
inc
call
xor
mov
xlat
dec
inc
mov
mov
xlat
push
and
xlat
pop
mov
xchg
mov
xlat
and
mov
xlat
cs
cmps
dec
(bad)
mov
xlat
xor
cli
xlat
cmp
xchg
add
sbb
call
or
stc
xlat
adc
stc
xlat
sbb
out
aaa
pop
mov
xlat
in
push
arpl
add
cld
xlat
icebp
push
clc
xlat
std
dec
cs
test
cld
xlat
into
je
test
ror
movq
xchg
shl
mov
xlat
mov
mov
xlat
stos
loop
mov
std
xlat
mov
cs
dec
dec
sbb
mov
xlat
xor
xlat
mov
clc
xlat
xchg
cmps
xchg
lea
ret
sub
mov
xlat
pusha
repnz
xlat
ins
hlt
inc
outs
mov
xchg
scas
mov
xlat
jnp
dec
sub
mov
xlat
inc
out
mov
(bad)
xlat
dec
mov
std
xlat
push
push
es
daa
mov
xlat
pop
js
rcl
mov
xlat
and
pop
nop
xlat
mov
xlat
cs
loopne
mov
xlat
xor
dec
inc
lahf
mov
xlat
aas
jle
ss
mov
xlat
add
cld
xlat
or
jle
aas
mov
xlat
adc
mov
sbb
mov
xlat
loope
push
inc
das
mov
xlat
jmp
mov
xlat
neg
sbb
mov
xlat
cld
dec
cmps
ins
daa
mov
xlat
shl
pop
scas
mov
xlat
retf
test
mov
xlat
xlat
out
icebp
ja
stc
xlat
fcomp
sti
xlat
movs
cmp
and
mov
xlat
test
mov
xlat
mov
outs
pusha
scas
mov
xlat
mov
mov
xlat
test
mov
ret
das
mov
xlat
xchg
xchg
(bad)
(bad)
cmps
mov
xlat
cdq
cmp
test
mov
xlat
data16
push
ja
sti
xlat
imul
(bad)
xlat
jbe
movs
xchg
mov
xlat
jg
into
xlat
pop
mov
xlat
inc
fsubr
out
mov
xlat
dec
mov
push
ja
clc
xlat
push
cmp
lods
iret
mov
xlat
pop
mov
cld
xlat
daa
(bad)
pop
fisttp
(bad)
cmps
ja
call
xor
cmps
or
(bad)
xlat
cmp
call
pop
in
mov
xlat
or
mov
xlat
adc
sahf
push
fisttp
into
lahf
mov
inc
jle
dec
mov
xlat
jmp
cs
mov
xlat
icebp
lea
inc
mov
xlat
call
xchg
mov
xlat
lds
cli
xlat
retf
jle
mov
xlat
rol
add
call
fsubr
or
call
cmps
xchg
iret
mov
xlat
stos
xlat
sahf
sbb
mov
xlat
mov
pop
test
mov
xlat
mov
mov
xlat
xchg
(bad)
xlat
mov
mov
nop
sar
xlat
call
xlat
popa
retf
out
stc
xlat
imul
fiadd
clc
xlat
ja
(bad)
lods
test
clc
xlat
inc
aad
sbb
mov
mov
push
sbb
test
call
and
outs
mov
xlat
sub
jbe
pop
mov
xlat
xor
aam
mov
xlat
cmp
es
outs
mov
xlat
pop
inc
(bad)
sti
pop
mov
xlat
or
clc
xlat
adc
mov
xlat
sbb
push
outs
addr16
xlat
loope
data16
mov
xlat
in
or
mov
xlat
icebp
gs
xlat
cld
or
aaa
mov
xlat
lds
mov
mov
xlat
retf
adc
cld
xlat
ror
and
sti
xlat
fistp
sbb
mov
xlat
mov
mov
xlat
lods
ins
jbe
mov
std
xlat
mov
es
das
mov
xlat
mov
mov
xlat
xchg
into
fs
mov
xlat
mov
sbb
mov
xlat
xchg
hlt
cs
mov
xlat
pushf
push
not
mov
jne
retf
dec
(bad)
cli
xlat
push
push
mov
jno
outs
test
jp
push
adc
(bad)
std
xlat
inc
cs
xchg
(bad)
movs
dec
(bad)
(bad)
xlat
push
(bad)
push
push
pop
(bad)
std
xlat
pop
pop
(bad)
aad
(bad)
call
and
xchg
fwait
out
stc
xlat
das
push
mov
cmps
(bad)
clc
xlat
ss
into
scas
das
(bad)
std
xlat
cmp
outs
or
cli
xlat
push
push
pop
(bad)
dec
(bad)
pop
test
call
push
movs
into
xor
(bad)
stc
xlat
out
test
cld
xlat
call
(bad)
call
icebp
mov
into
(bad)
(bad)
cli
xlat
(bad)
js
push
ret
ror
ret
cld
xlat
int3
jge
fisttp
ds
fcomip
sahf
mov
(bad)
stc
xlat
stos
pop
(bad)
loope
(bad)
cld
xlat
mov
inc
das
(bad)
call
mov
(bad)
cli
xlat
and
xchg
xchg
or
lahf
jbe
stos
outs
mov
xlat
bound
stc
xlat
ins
add
lea
mov
xlat
jb
mov
dec
add
mov
xlat
inc
add
daa
mov
xlat
dec
nop
fisubr
mov
xlat
push
iret
cmps
adc
mov
xlat
pop
gs
pop
mov
xlat
es
push
test
xlat
sub
mov
xlat
xor
or
mov
xlat
rcr
add
pop
test
xlat
adc
clc
xlat
pop
(bad)
lahf
mov
xlat
jecxz
jbe
pop
mov
xlat
in
(bad)
dec
aas
mov
xlat
neg
push
sbb
mov
xlat
rol
xlat
into
das
cs
mov
xlat
shr
(bad)
mov
add
daa
mov
xlat
scas
pop
cmps
in
outs
mov
xlat
mov
(bad)
mov
mov
push
cmps
mov
xlat
xchg
repnz
mov
mov
xlat
call
xlat
je
bound
cld
xlat
jle
xchg
out
stc
xlat
push
movs
es
sbb
ds
neg
stos
daa
(bad)
(bad)
xlat
lds
outs
mov
mov
cld
xlat
mov
(bad)
sti
xlat
scas
imul
(bad)
(bad)
xlat
add
xchg
cld
xlat
xchg
xor
call
imul
out
daa
mov
xlat
push
loop
popa
scas
mov
xlat
sub
pop
mov
test
cld
xlat
or
(bad)
push
mov
lods
out
aaa
mov
xlat
pop
push
xchg
mov
mov
sub
mov
xlat
jmp
mov
xlat
repnz
mov
xlat
std
dec
mov
stc
xlat
lds
xlat
iret
push
push
fld
call
(bad)
mov
lock
cli
xlat
fld
push
push
mov
rol
jmp
xchg
sub
mov
xlat
mov
sahf
adc
mov
xlat
mov
mov
xlat
and
out
mov
xlat
pop
push
xor
(bad)
xlat
xchg
bnd
iret
mov
xlat
pushf
int
inc
iret
xchg
std
xlat
addr16
ss
xchg
cli
xlat
push
dec
inc
daa
xchg
(bad)
xlat
jae
xchg
mov
jmp
sub
xchg
stc
xlat
inc
mov
clc
xlat
dec
adc
xchg
pop
xchg
std
xlat
push
int
xor
std
xlat
pop
addr16
cmp
xchg
clc
xlat
and
xlat
das
ficomp
xchg
stc
xlat
xor
std
xlat
cmp
stc
xlat
push
out
mov
sti
xlat
or
(bad)
stos
pop
xchg
cld
xlat
adc
xchg
call
sbb
xlat
out
inc
xlat
xchg
stc
xlat
jmp
xlat
repz
fimul
setno
xlat
inc
mul
ret
jmp
retf
xchg
out
addr16
stc
xlat
(bad)
xchg
scas
xchg
cld
xlat
fisttp
sti
xlat
mov
xchg
clc
xlat
lods
xchg
xchg
sbb
xchg
stc
xlat
mov
movs
out
xchg
std
xlat
mov
xchg
clc
xlat
test
call
mov
std
xlat
xchg
addr16
call
push
mov
nop
cli
xlat
push
nop
cld
xlat
jno
mul
nop
cli
xlat
jge
(bad)
into
inc
nop
call
inc
adc
jl
nop
clc
xlat
dec
mov
std
xlat
push
or
or
cli
xlat
pop
aam
fiadd
nop
call
daa
jle
mov
nop
cli
xlat
sub
jle
seto
xlat
ss
outs
aas
xchg
into
cdq
xlat
nop
(bad)
xlat
push
fdivr
pop
nop
cld
xlat
adc
dec
mov
std
xlat
sbb
push
cmc
scas
nop
stc
xlat
in
cs
pop
nop
clc
xlat
out
cld
push
mov
bnd
jbe
nop
sti
xlat
stc
xchg
data16
not
sahf
dec
inc
nop
cli
xlat
into
pop
cmps
rep
nop
(bad)
xlat
aad
sahf
cmc
fist
cmps
dec
seto
xlat
mov
nop
cld
xlat
test
nop
clc
xlat
mov
test
nop
stc
xlat
mov
nop
sti
xlat
xor
mov
mov
mov
xlat
xchg
call
sahf
sar
xchg
cld
xlat
fs
imul
enter
xchg
call
jae
xchg
cmps
xchg
(bad)
xlat
js
mov
xlat
inc
gs
xchg
setae
xlat
dec
call
stc
xlat
push
ins
out
out
xchg
clc
xlat
pop
adc
out
clc
xlat
and
ficom
stc
xlat
das
dec
push
bound
std
xlat
xor
cs
xchg
cld
xlat
aas
inc
push
fcomp
xchg
(bad)
xlat
add
pop
adc
xchg
call
or
lods
mov
sti
xlat
adc
inc
pop
xlat
xchg
clc
xlat
sbb
ss
inc
xchg
stc
xlat
out
es
not
push
cmps
(bad)
xchg
(bad)
xlat
cmc
repnz
lods
ja
call
cld
mov
inc
jg
stc
xlat
sar
xlat
iret
cmp
sti
xlat
aam
mov
xlat
fild
cld
xlat
mov
xchg
stc
xlat
lods
movs
sahf
(bad)
jg
clc
xlat
mov
pop
adc
add
not
scas
in
xchg
cli
xlat
mov
call
xchg
push
sahf
dec
dec
xchg
sti
xlat
popa
and
xlat
out
paddd
dec
xchg
xlat
push
movs
into
mov
pop
xlat
outs
sbb
push
not
inc
mov
xlat
popa
push
into
push
jg
(bad)
xlat
outs
ins
pop
cmp
mov
xlat
ja
into
sbb
std
xlat
jnp
ds
and
cld
xlat
aad
dec
sar
std
xlat
sbb
mov
xlat
loop
push
in
mov
xlat
out
jmp
pop
daa
(bad)
sti
xlat
and
(bad)
std
xlat
out
jae
xor
test
mov
int
xchg
xlat
jp
xlat
out
call
cmps
clc
pushw
xchg
xlat
mov
cli
xlat
xchg
push
push
pop
pop
xchg
xlat
adc
dec
addr16
xlat
sbb
xor
xchg
xlat
out
pop
jmp
repnz
(bad)
xlat
fstp
out
mov
xchg
xlat
movs
adc
std
xlat
xchg
(bad)
xchg
jno
xchg
xlat
pushf
dec
fiadd
cld
ss
mov
xlat
inc
xor
bnd
xchg
fstp
cmp
cmp
stc
xlat
(bad)
xchg
xlat
jp
mov
xlat
inc
jmp
dec
scas
push
jmp
fisub
loopne
sahf
(bad)
fisttp
push
(bad)
jg
(bad)
xlat
pop
inc
(bad)
xlat
daa
push
sti
xlat
cwde
sbb
bound
sbb
shl
sti
or
sbb
dec
jns
addr16
dec
sahf
(bad)
aad
cmp
dec
sbb
bound
and
sti
sbb
bound
dec
bound
lods
out
and
aam
dec
(bad)
cli
scas
cwde
sbb
js
adc
push
sbb
bound
add
addr16
mov
das
gs
sti
aam
push
dec
sti
sbb
bound
cs
lahf
cmp
xor
(bad)
call
retf
xchg
mov
(bad)
stc
jg
repnz
sti
sbb
bound
sbb
sbb
bound
sbb
pusha
sbb
bound
inc
bound
sbb
cli
dec
sti
sbb
bound
and
sti
sbb
bound
and
(bad)
sti
jle
dec
xchg
sbb
bound
pop
bound
sbb
gs
bound
sbb
retf
sbb
bound
and
mov
pop
lds
aam
addr16
xlat
push
sbb
bound
mov
dec
and
addr16
cwde
sbb
bound
lds
sti
jle
dec
xchg
sbb
bound
and
dec
(bad)
sbb
pop
movs
int3
aad
sbb
cli
xlat
sti
sbb
bound
sbb
addr16
bound
mov
dec
lods
adc
dec
sbb
bound
sbb
bound
mov
int3
aad
sbb
bound
cdq
bound
fldenv
gs
in
sbb
cli
dec
sti
sbb
bound
sbb
bound
sbb
dec
les
bound
mov
mov
xor
sti
sbb
bound
sbb
xchg
adc
sti
fisub
push
(bad)
lock
sbb
bound
scas
idiv
daa
push
into
aad
sbb
bound
in
dec
mov
sbb
bound
sbb
add
cwde
gs
(bad)
pop
sbb
mov
dec
sti
push
bound
push
retfw
fstp
mov
sti
lea
sti
and
sbb
bound
sbb
bound
lods
mov
push
and
sbb
push
xor
mov
dec
imul
lods
and
loop
cmp
bound
mov
dec
sub
bound
popf
bound
sbb
fimul
int
dec
sti
sbb
retf
sbb
and
sbb
bound
sbb
bound
sbb
bound
sbb
bound
sbb
bound
jp
dec
imul
daa
push
push
mov
sbb
bound
int
dec
sti
and
enter
gs
sti
cmp
pop
sti
sbb
bound
sbb
adc
sti
sbb
bound
sbb
cli
dec
sti
and
sbb
bound
pop
fs
test
(bad)
sti
sbb
bound
add
cmp
bound
inc
fs
mov
mov
sti
int
dec
sti
sbb
rcl
sti
and
addr16
shl
cmp
cmp
sbb
bound
and
sti
push
bound
xor
pusha
sahf
in
fld
(bad)
xlat
dec
sbb
bound
sbb
dec
fs
bound
sbb
adc
sti
sbb
mov
dec
lahf
mov
cli
mov
sbb
bound
enter
sub
test
sbb
bound
and
fisttp
mov
pusha
add
adc
sbb
bound
cmp
push
adc
addr16
bound
cli
bound
fbld
jle
jb
stc
sbb
bound
into
out
clc
sbb
push
xchg
sti
sbb
bound
sbb
bound
mov
xchg
out
cli
xlat
loop
shl
addr16
bound
sub
gs
sti
sbb
bound
mov
dec
push
cdq
(bad)
xchg
or
push
xchg
jnp
fimul
sti
sbb
retf
sbb
bound
sbb
bound
sbb
bound
sbb
bound
sbb
loop
sti
sbb
bound
sbb
mov
dec
call
bound
sbb
call
and
mov
js
sbb
bound
sbb
bound
lods
bound
sub
cs
aam
sbb
retf
sbb
bound
sbb
bound
lods
bound
lods
aam
bound
sub
add
sbb
bound
sbb
bound
push
dec
and
add
xor
pop
sbb
retf
sbb
add
and
push
dec
and
mov
push
xchg
mov
das
aad
hlt
jmp
bound
pop
bound
sbb
bound
loop
dec
enter
aad
hlt
mov
sbb
bound
sbb
bound
popf
bound
and
add
adc
enter
test
js
sbb
bound
in
bound
sbb
cmp
and
sti
sbb
bound
cmps
bound
sbb
cli
xlat
sti
pop
bound
and
sti
sbb
bound
sbb
addr16
bound
test
and
(bad)
dec
sbb
bound
mov
(bad)
out
cdq
dec
sub
bnd
arpl
xchg
dec
pop
ds
gs
bound
sub
outs
sbb
scas
mov
bound
imul
pop
sbb
bound
sub
fbstp
pop
sbb
bound
ins
bound
sbb
sbb
and
sti
cmps
bound
mov
loopne
out
fdivp
addr16
bound
sbb
bound
loopne
dec
inc
sbb
bound
and
sti
sbb
bound
mov
lahf
out
addr16
cli
dec
sti
sbb
bound
and
sti
sbb
bound
mov
addr16
sbb
bound
bound
sub
daa
mov
lahf
in
addr16
cli
dec
sti
shl
loopne
cmc
inc
mov
mov
xlat
sbb
ds
bound
mov
pop
iret
iret
mov
fild
sbb
bound
mov
lahf
das
out
pop
jg
test
(bad)
push
bound
shl
sbb
bound
loopne
dec
inc
mov
ja
push
pusha
sahf
sbb
inc
addr16
bound
sbb
dec
dec
sti
jns
dec
cmps
fprem1
sahf
gs
jg
(bad)
cmps
jle
neg
sbb
enter
jnp
lea
sti
mov
into
loope
pop
dec
mov
bound
cli
xlat
sti
sbb
bound
sbb
bound
sbb
bound
(bad)
int3
ffree
sbb
sti
lods
bound
sbb
fimul
bound
retf
sbb
bound
and
lds
bound
int
dec
sti
lods
bound
sbb
mov
dec
sti
mov
dec
mov
sbb
bound
and
push
sbb
bound
push
bound
sbb
bound
and
mov
and
out
sub
xchg
xchg
push
je
ins
bound
sbb
sbb
lea
sti
mov
(bad)
loope
fprem
iret
and
xchg
adc
sti
fisub
sbb
aam
ins
bound
sbb
sbb
lea
sti
mov
(bad)
loope
cdq
clc
iret
and
out
aas
sbb
sbb
sbb
popa
dec
out
arpl
stos
dec
sbb
bound
sbb
sbb
sbb
bound
cdq
(bad)
xchg
cmp
cmp
lods
dec
aas
sbb
sbb
lds
sti
and
test
bound
fldenv
addr16
rcl
sti
fbld
movs
sbb
shl
test
shl
sti
fisub
and
sbb
bound
mov
clc
xlat
pop
sbb
cli
xlat
sti
lods
bound
sbb
fimul
sbb
bound
push
xchg
daa
sbb
xlat
addr16
bound
sbb
bound
sbb
bound
sbb
bound
and
push
sbb
lahf
test
bound
lea
sti
and
pop
mov
iret
and
(bad)
jmp
stos
sbb
cli
dec
sti
frstor
sti
sbb
rcl
sti
sbb
bound
ins
out
jg
pop
in
push
mov
(bad)
daa
sbb
aad
cli
call
push
sbb
ret
fbld
lds
push
xor
push
bound
sbb
addr16
bound
inc
bound
sbb
bound
sbb
dec
test
bound
inc
bound
sbb
bound
sbb
ins
sbb
bound
frstor
sti
sbb
push
xor
mov
dec
jnp
pusha
dec
and
cli
xlat
sti
sbb
bound
sbb
bound
lea
jg
enter
(bad)
addr16
xlat
sbb
(bad)
enter
into
sti
sbb
bound
or
sbb
sbb
bound
aas
pusha
dec
mul
and
mov
lahf
lahf
sti
movs
bound
sbb
(bad)
sti
sbb
bound
sbb
bound
movs
bound
sbb
ficom
sti
adc
sti
and
sti
sbb
bound
mov
xlat
add
clc
aad
(bad)
jae
bound
sbb
bound
fldenv
inc
sbb
jecxz
sbb
bound
sbb
mov
dec
sti
pop
bound
sbb
bound
iret
bound
sbb
or
jle
dec
call
sub
sbb
bound
shl
mov
sbb
fimul
int
dec
sti
sbb
retf
mov
data16
sti
sbb
bound
pop
out
and
bound
sbb
or
sbb
bound
sbb
xchg
sbb
bound
das
retfw
mov
in
inc
sbb
fimul
frstor
sti
sbb
pop
idiv
sbb
bound
cdq
dec
add
ret
sbb
cli
xlat
sti
(bad)
bound
jmp
pop
add
xlat
inc
test
(bad)
out
or
push
add
push
out
es
daa
sahf
into
aad
cmp
sbb
popf
mov
fisubr
cvtpi2ps
ja
mov
mov
inc
cmp
and
clc
add
cmp
out
mov
fistp
icebp
push
stos
and
sbb
daa
sar
sub
popa
ret
jmp
sbb
or
sbb
push
mov
ja
out
mov
cmp
and
dec
jnp
jg
aaa
inc
dec
in
push
dec
out
adc
test
(bad)
ret
out
pusha
cmp
mov
xor
ins
mov
in
and
xchg
fsubrp
cmps
mov
cmp
aaa
inc
dec
sbb
in
lahf
call
jecxz
dec
or
loopne
aaa
es
and
test
out
fstp
cmp
jbe
and
add
mov
and
aas
sub
xor
sub
add
clc
retf
mov
sub
ret
int
mov
jmp
in
mov
jb
or
add
cmp
ins
cmp
sbb
loop
jns
loope
jmp
cmp
lock
sbb
fsub
sub
call
cmp
mov
ret
(bad)
int
sbb
out
mov
ficom
add
and
repz
push
neg
jge
cmp
fcom
sbb
cmps
lock
fnsave
shl
xor
(bad)
inc
fdivr
dec
stc
out
push
stc
jnp
jg
loopne
popa
xor
cmc
(bad)
(bad)
dec
arpl
test
repnz
sub
sub
push
jno
repz
mov
(bad)
sbb
mov
stc
push
retf
in
scas
mov
adc
inc
pop
sub
cs
inc
int
fs
int3
jb
sbb
ins
mov
and
jle
leave
mov
stos
or
push
dec
loope
dec
dec
aaa
popa
mov
int
inc
adc
bound
sbb
or
imul
sub
(bad)
scas
imul
inc
or
fdiv
xchg
sub
jbe
and
sub
(bad)
scas
pop
std
xchg
mov
sbb
rcl
mov
jp
inc
std
push
lahf
aad
inc
mov
jb
pop
pop
xchg
ret
jno
sub
lds
cdq
cdq
ins
xchg
fisub
cmp
hlt
pop
ficom
cld
inc
mov
xchg
mov
sbb
rcl
pop
imul
sub
(bad)
fild
jmp
jmp
jp
cld
dec
push
mov
ss
mov
jb
pop
pop
xchg
and
push
jae
lds
cdq
cdq
ins
xchg
fisub
cmp
inc
pop
ficom
and
sar
rol
mov
pop
rcl
xor
mov
nop
mov
sahf
jnp
dec
lahf
adc
(bad)
fild
jmp
jmp
jnp
inc
iret
push
mov
ss
mov
jb
pop
pop
xchg
or
outs
cs
les
cdq
cdq
ins
xchg
fisub
cmp
scas
pop
fiadd
and
sar
mov
mov
xor
mov
adc
popf
jnp
dec
lahf
adc
(bad)
fild
jmp
jmp
jnp
or
pop
mov
ss
mov
jb
pop
pop
xchg
jmp
and
les
cdq
cdq
ins
xchg
fisub
cmp
outs
pop
fidivr
cld
mov
xchg
mov
sbb
rcl
pop
imul
dec
lahf
sbb
(bad)
fist
jmp
jmp
jp
stos
out
push
mov
ds
scas
xchg
fstp
xchg
jb
fdiv
sub
lds
cdq
xchg
ins
call
mov
and
aam
mov
ret
mov
mov
and
mov
jp
sar
es
daa
xchg
fstp
xchg
call
jl
ret
stc
lds
cdq
sub
and
ret
aad
popa
xchg
fld
pop
add
xor
mov
nop
mov
sub
pop
fild
jmp
sub
push
jp
pop
dec
mov
pop
daa
xchg
fstp
xchg
inc
pop
enter
movs
ret
pop
sub
mov
sub
and
ret
sar
cwde
fld
pop
add
xor
mov
adc
sahf
mov
int
fild
jmp
sub
out
sbb
mov
pop
daa
xchg
fstp
xchg
pop
pop
enter
movs
xor
sub
and
ins
outs
cdq
sub
and
ret
sar
data16
pop
add
xor
mov
nop
cmp
push
call
pop
fild
jmp
sub
stos
out
lahf
jnp
in
mov
pop
daa
push
push
sbb
mov
shr
push
sahf
jmp
dec
xchg
(bad)
pop
push
(bad)
sub
(bad)
inc
mov
(bad)
fadd
mov
jl
push
sub
jecxz
in
(bad)
cdq
pushf
sahf
or
sub
and
(bad)
pop
jno
cmp
push
push
sbb
mov
push
outs
mov
jmp
dec
xchg
nop
test
in
xlat
sub
(bad)
es
mov
jb
shl
sbb
sub
arpl
sahf
or
sub
(bad)
bound
cmp
push
push
sbb
mov
shr
std
push
cwde
jmp
dec
xchg
dec
pop
push
sbb
push
aam
in
dec
xchg
cdq
sbb
pop
push
in
and
shl
cmp
ret
and
push
pop
(bad)
and
gs
sub
inc
add
pop
sbb
jmp
jnp
add
push
mov
sub
push
(bad)
sbb
mov
lock
test
xchg
in
dec
xchg
cdq
sbb
pop
push
or
hlt
push
jl
mov
rcl
(bad)
and
call
sub
ret
add
sbb
pop
push
in
inc
bound
sti
int
xchg
fsubrp
fild
sbb
call
xor
fst
jb
sbb
shl
jl
and
sub
inc
popf
sub
cdq
bound
nop
(bad)
shl
jecxz
xchg
sub
push
cld
mov
lock
sub
jmp
jp
in
repnz
xor
fst
jb
sbb
shl
jl
inc
sub
ret
popf
sub
cdq
bound
nop
mov
lods
shl
arpl
xchg
push
cld
mov
jo
stc
std
push
call
pop
fisttp
sbb
stos
jnp
mov
repnz
xor
fst
jb
sbb
shl
jl
mov
sub
inc
popf
sub
cdq
bound
nop
and
shl
jecxz
xchg
sub
push
cld
mov
lock
sub
jmp
jnp
adc
fst
jb
sbb
shl
jl
aas
lds
cdq
bound
nop
movs
ins
rcr
jno
sar
mov
push
pop
dec
xor
test
stc
cmp
or
inc
pop
lea
pop
je
or
jecxz
dec
mov
into
call
iret
dec
dec
mov
in
inc
or
lea
dec
aam
lds
mov
(bad)
push
cmp
addr16
jnp
call
mov
cmp
test
scas
and
sbb
sub
test
std
addr16
jecxz
and
mov
jnp
xor
out
xor
out
das
cmp
and
test
dec
and
test
jae
in
out
xchg
and
test
stos
inc
in
leave
ins
test
in
cmp
and
pop
mov
push
stos
cmp
out
test
inc
or
lock
jae
iret
ror
and
sbb
and
cmp
sub
popa
mov
jo
call
mov
std
mov
fwait
cmps
test
adc
and
scas
push
fcomi
aad
jae
ja
add
rol
sub
or
outs
sub
inc
call
gs
push
xor
jmp
stos
std
addr16
and
arpl
jge
outs
mov
add
arpl
std
je
adc
ja
in
test
ins
daa
shl
push
les
adc
adc
sbb
stos
fs
scas
jns
cmp
mov
inc
inc
jo
std
mov
lahf
ds
inc
test
arpl
push
xor
ds
js
es
jge
repnz
or
jmp
pusha
ret
pop
adc
sub
clc
std
or
cmc
mov
stc
bnd
inc
loope
fs
mov
jge
jmp
cmp
jae
fst
push
jmp
jno
icebp
movs
fwait
out
idiv
lods
lods
les
retf
push
cld
add
fcom
dec
sbb
in
sub
scas
daa
call
jecxz
sub
cmp
sahf
lods
xor
adc
cmp
ss
fidiv
(bad)
xor
jp
ss
inc
je
clc
fcmovb
lods
cld
jp
xor
mov
je
clc
fidiv
fidiv
fcmovb
xor
das
inc
xor
mov
je
clc
fidiv
fidiv
fcmovb
sub
mov
jmp
je
clc
fidiv
fisubr
inc
inc
push
add
pushf
rcr
cld
cmc
je
clc
fcmovbe
stos
(bad)
(bad)
test
xchg
pusha
fidiv
(bad)
ss
test
pusha
inc
je
clc
fidiv
fisubr
push
jo
pusha
inc
je
clc
fidiv
fcmovbe
stos
(bad)
(bad)
les
(bad)
pusha
fidiv
fisubr
dec
movs
mov
ss
jmp
je
clc
fisub
inc
fnstenv
ficom
sub
push
push
fwait
fwait
jmp
je
pusha
fidiv
ficom
test
xor
repnz
les
inc
cs
pop
call
test
and
je
clc
fidiv
(bad)
stos
jl
shr
push
pop
fdivr
je
clc
fiadd
sti
mov
xchg
enter
push
sub
push
test
movs
fnstenv
pushf
xchg
fidiv
(bad)
stos
jl
iret
mov
push
bound
sub
int3
inc
fnstenv
pushf
xchg
fidiv
fidiv
(bad)
stos
jl
into
sub
ss
push
je
clc
fidiv
fidiv
fisubr
aam
(bad)
stos
cld
call
popa
push
je
clc
fidiv
fidiv
fimul
aam
(bad)
stos
cld
call
bound
mov
ds
stos
mov
jmp
arpl
sub
into
ds
pusha
fidiv
ficom
dec
ret
cwde
fnstenv
fidiv
ficom
xchg
fs
push
xor
imul
xor
dec
inc
inc
jno
mov
fist
mov
call
ss
fidiv
fidiv
ficomp
jno
jmp
mov
clc
or
(bad)
lahf
mov
pop
dec
mov
mov
pop
test
mov
je
clc
fidiv
fidiv
fimul
cwde
mov
je
clc
(bad)
cs
fcmove
repnz
call
ss
ret
cwde
fnstenv
fidiv
ficom
dec
inc
je
cwde
fnstenv
(bad)
(bad)
fs
imul
cld
cmc
je
clc
ficom
std
fcmovb
adc
cmp
pushf
mov
outs
push
fwait
mov
inc
std
lahf
mov
inc
adc
ins
add
pushf
mov
je
clc
fidiv
fidiv
fimul
cwde
mov
je
clc
(bad)
mov
fcmove
xchg
ds
inc
push
stos
dec
loop
ss
add
fidiv
ficom
aam
dec
test
rcl
jno
ss
jo
push
fcmovu
sar
fcmovu
push
enter
dec
push
jmp
cwde
adc
dec
loop
jno
ror
fwait
jmp
or
jmp
inc
xor
ja
out
fidiv
ficom
dec
and
fnstenv
fisubr
cld
pop
les
pusha
inc
pop
ss
je
clc
fidiv
fisub
cmp
ss
fidiv
(bad)
or
jmp
fidiv
fidiv
fidiv
fiadd
clc
mov
push
ret
jmp
cwde
adc
dec
loop
push
cdq
rcl
inc
dec
push
pushf
mov
push
adc
ret
inc
xor
ja
into
clc
fcmovb
xor
fdivr
je
clc
ficom
push
mov
jge
fdivr
je
clc
fidiv
fcmovbe
push
clc
jb
ss
jo
push
fidiv
fcmovb
movs
push
jge
fdivr
je
clc
fidiv
dec
les
fidiv
fcmove
and
ss
mov
mov
(bad)
fidiv
(bad)
ficom
dec
push
sahf
cwde
fnstenv
ficomp
test
push
lock
ss
(bad)
je
pusha
fidiv
fisub
call
sbb
cmp
je
clc
fidiv
fidiv
(bad)
ss
inc
je
clc
fidiv
fisubr
ss
(bad)
je
clc
fidiv
fidiv
fcmovbe
xor
out
ss
mov
je
clc
ficom
xchg
jb
push
xor
and
inc
(bad)
push
mov
pop
stos
fnstcw
je
clc
fidiv
fisubr
outs
not
mov
mov
sub
ss
mov
aam
clc
ficom
stos
jecxz
call
ss
fidiv
fiadd
ret
fist
adc
add
cdq
rcl
sbb
shl
popf
jmp
je
clc
fidiv
fidivr
or
mov
cs
adc
mov
pop
test
mov
je
clc
fidiv
fidiv
fcmove
xor
call
push
clc
fidiv
ficom
and
je
clc
(bad)
enter
add
je
clc
fcmovu
push
sti
fidiv
xchg
add
xchg
jb
push
lock
ss
je
clc
fidiv
fiadd
ret
xor
push
loopne
jl
retf
fs
xchg
retf
inc
inc
xor
ja
ss
fidiv
fidiv
fcmovb
sub
(bad)
mov
ja
cwde
mov
inc
push
cmc
mov
push
xchg
retf
inc
inc
xor
ja
ret
jmp
clc
adc
dec
mov
pop
ss
je
clc
fidiv
fidivr
ficom
retf
arpl
pushf
mov
pop
ss
jle
ss
fidiv
fiadd
ss
sbb
dec
les
(bad)
ss
inc
jo
pusha
inc
je
clc
fidiv
fidiv
cmp
ss
fidiv
(bad)
xor
jp
ss
inc
je
clc
fidiv
fiadd
fdivr
pop
imul
shl
popf
jmp
je
clc
fidiv
(bad)
push
stc
ficom
push
arpl
pop
push
arpl
push
repnz
inc
inc
xor
ja
ss
fidiv
fiadd
sti
pop
arpl
int3
test
ss
fidiv
fimul
jl
adc
in
inc
xor
mov
je
clc
fidiv
fidiv
(bad)
mov
mov
jo
push
inc
je
clc
fisubr
cmp
mov
fidiv
fiadd
movs
inc
in
sbb
out
leave
lahf
mov
lock
jmp
je
clc
fcmovbe
test
fcmovbe
test
cld
push
popa
test
into
sar
aam
nop
sub
pusha
test
inc
rcl
adc
sti
and
mov
pusha
pop
inc
ret
ficomp
hlt
test
cmovs
and
lock
out
mov
and
mov
out
xchg
sbb
test
inc
test
in
mov
inc
in
or
and
sbb
add
in
adc
sub
cmp
sub
repnz
push
sbb
sar
sub
test
and
and
mov
test
daa
mov
(bad)
jb
cmp
and
call
rcr
lock
cmps
cmp
sbb
jmp
into
imul
adc
lock
jne
sbb
daa
jg
call
call
shl
adc
in
mov
push
jp
sar
pop
lock
iret
and
cmc
lods
mov
cs
aad
shl
jae
rcl
out
test
shl
enter
mov
cmp
xor
test
push
cmps
aas
cld
in
adc
aam
jmp
in
jnp
ret
test
sahf
ja
aas
out
adc
or
or
cmp
shl
jo
repz
sbb
stos
in
mov
mov
or
mov
sar
jo
and
daa
cmp
sbb
ret
test
push
pop
adc
js
mov
(bad)
aad
shl
stos
ret
cld
fst
jb
cmps
aas
sbb
jmp
pop
sub
sbb
xlat
mov
cmp
aaa
out
loop
sub
icebp
arpl
scas
and
xchg
mov
push
and
sbb
sub
idiv
call
in
and
shl
mov
xchg
sahf
mov
ret
mov
sahf
push
xchg
ret
test
mov
xor
adc
ret
xchg
add
rol
pusha
push
sbb
lods
sbb
movs
in
jl
pop
stos
ret
jnp
mov
out
hlt
cmp
xor
test
(bad)
jmp
mov
sub
test
mov
icebp
in
out
jnp
ja
pop
ficom
cmp
call
leave
pop
std
cmps
mov
ja
cwde
(bad)
imul
or
stos
or
out
mov
and
in
and
jbe
mov
test
push
mov
cdq
xchg
cmp
and
aam
cli
dec
xor
in
jge
sub
push
call
sub
xchg
jp
jns
push
js
pcmpgtw
(bad)
ds
stos
js
mov
cmp
push
inc
imul
sahf
scas
sbb
in
ret
in
pop
stos
xchg
push
rol
arpl
fst
sbb
jg
xor
out
add
bound
shr
sbb
mov
test
ficom
push
cli
push
outs
(bad)
xor
ds
adc
test
jg
xor
cmp
pushf
inc
nop
fdiv
aas
add
cmp
pop
push
adc
cmp
daa
sbb
mov
sub
xchg
call
inc
pop
ins
and
jle
add
xlat
aam
mov
adc
out
out
(bad)
mov
sbb
dec
mov
sub
stos
loop
sar
ror
add
cmp
enter
sub
sub
dec
xchg
jnp
cmp
add
and
dec
cmp
daa
dec
pop
mov
mov
outs
and
mov
inc
(bad)
or
sbb
shl
push
mov
hlt
add
repnz
shr
jmp
popa
jmp
pop
ins
adc
(bad)
jmp
shr
call
jp
imul
pop
jp
cmp
stc
aaa
ins
xor
out
cli
mov
dec
dec
adc
jmp
stos
stc
dec
mov
jnp
fld
mov
frstor
jne
data16
fld
lods
jne
data16
int3
data16
fldenv
fstp
jne
data16
lea
jne
addr16
(bad)
cmp
data16
frstor
jne
data16
frstor
sub
data16
frstor
jne
(bad)
mov
(bad)
data16
out
pop
pusha
frstor
sub
data16
in
data16
inc
arpl
out
inc
arpl
cmc
imul
jne
data16
frstor
ffree
sub
data16
dec
data16
sbb
inc
pop
and
mov
fisttp
jne
data16
jne
sti
mov
frstor
jne
data16
fnstsw
mov
inc
(bad)
sbb
jl
(bad)
jns
or
adc
(bad)
jmp
jns
push
inc
adc
repz
mov
inc
test
std
imul
add
jmp
push
adc
loope
call
daa
test
cmps
jp
(bad)
push
clc
add
or
scas
mov
fistp
xor
mov
mov
cmp
sub
test
and
mov
icebp
xor
loopne
cmp
aas
aaa
adc
pop
xor
jae
cmp
adc
ja
pop
and
stos
out
xor
call
cmp
or
fucom
and
and
and
and
fs
stos
cmp
ins
aaa
cmp
and
int3
out
cmp
sub
test
sbb
add
jmp
test
xchg
fist
adc
cmps
jmp
and
jo
mov
jns
cmp
and
jmp
fwait
imul
(bad)
jge
add
repnz
mov
retf
loop
jo
pusha
jmp
or
arpl
inc
push
idiv
fs
ror
arpl
or
cmp
aam
in
xchg
sbb
idiv
shl
cdq
adc
add
jle
dec
mov
cmp
and
sbb
stos
fs
mov
sbb
cmp
test
cmp
push
xor
sub
hlt
out
cmp
mov
dec
sbb
pop
cld
test
stos
ret
sbb
push
ret
loope
push
mov
sub
jecxz
ret
loopne
enter
shld
and
movs
mov
test
(bad)
and
repz
test
fisub
mov
mov
clc
movs
jbe
test
mov
mov
cmp
mov
push
movs
mov
mov
cmp
and
cmp
mov
sub
mov
xor
lea
xor
sbb
cmps
mov
clc
push
push
and
adc
cmp
xor
adc
stos
cmp
mov
xor
lea
stos
movs
and
pop
mov
sub
mov
xor
adc
int
adc
cmp
movs
mov
mov
adc
sub
cmp
mov
aam
dec
pop
cwde
xchg
(bad)
addr16
and
push
xchg
and
cmp
mov
dec
mov
leave
sub
mov
adc
cmp
mov
xor
push
mov
xchg
cmp
mov
xor
adc
xchg
cmp
mov
xor
push
mov
xchg
cmp
mov
xor
xchg
mov
xchg
cmp
mov
xor
mov
xor
adc
lea
adc
cmp
mov
in
mov
cmp
mov
xor
pop
mov
hlt
cmp
mov
xor
mov
mov
or
mov
(bad)
pop
js
cmp
adc
adc
cmp
test
movs
in
xchg
pop
pop
js
cmp
adc
xchg
mov
adc
shl
stos
and
std
mov
or
adc
cmp
mov
adc
pop
push
jmp
mov
xor
xor
mov
in
xchg
daa
mov
mov
mov
mov
adc
dec
cmp
xor
pop
mov
popf
cmp
fld
cmp
adc
in
fadd
pop
mov
stos
xchg
adc
cmp
mov
xor
mov
gs
adc
pop
cmp
adc
cdq
jno
xor
adc
push
cmp
fdiv
cmp
xor
mov
hlt
push
push
and
adc
cmp
mov
or
and
adc
cmp
mov
cmps
adc
mov
mov
xor
adc
std
mov
sti
dec
mov
xchg
dec
test
sub
jmp
sbb
popf
sbb
ins
(bad)
fisubr
add
or
ja
mov
mov
inc
movs
and
adc
pop
adc
sub
inc
data16
add
pop
aas
int3
mov
scas
cmp
(bad)
sbb
cmp
mov
in
xor
lods
int3
add
sbb
loop
ficomp
and
cmp
and
cmp
lds
xor
push
imul
mov
jecxz
je
hlt
xor
in
fadd
jne
call
cmps
loope
cmp
and
cmp
ins
pop
or
and
test
sar
or
jg
fdiv
cmps
mov
(bad)
fwait
idiv
stc
sbb
cmp
add
sbb
popf
aaa
cmc
aad
and
div
rol
and
stos
cdq
cmp
jo
fbld
jge
cli
and
mov
ficom
out
sub
stos
fisub
daa
(bad)
jp
add
pop
lock
repz
jecxz
pushf
pusha
sbb
stos
in
push
sti
sbb
mov
adc
push
inc
in
test
inc
and
jp
push
test
rol
sbb
push
ret
scas
call
xchg
int
in
mov
cmp
sbb
outs
jae
fcom
sub
push
and
push
push
xor
rol
sub
push
mov
mov
sub
fstp
cld
adc
adc
ja
xor
fsub
shr
and
sbb
xor
fisubr
test
jmp
test
xor
sbb
and
sbb
fnstsw
lods
ins
stos
inc
lods
jmp
test
jmp
sbb
and
outs
push
fisttp
jb
and
fist
test
loope
lods
shr
sub
test
call
out
xor
sbb
inc
sbb
jmp
test
repnz
jae
repnz
lahf
mov
and
fdivr
in
cmp
mov
lods
inc
sbb
jmp
test
xor
test
cmp
inc
lods
inc
sbb
jmp
test
xor
lock
mov
pushf
sub
test
ins
scas
in
std
out
lahf
imul
pusha
xchg
xchg
pop
jbe
jae
push
fiadd
mov
push
lods
jno
inc
lods
jmp
test
jmp
cmp
fild
inc
lods
jmp
test
sbb
sub
xchg
jno
fstp
sahf
fwait
and
sub
sub
sbb
cs
shl
jae
repz
add
xor
outs
adc
xor
jae
repnz
iret
and
mov
xor
in
lods
or
test
jmp
test
xor
in
lods
in
lods
inc
lahf
jmp
test
xchg
out
lods
shr
lods
jmp
test
shr
fimul
and
pop
aad
cmc
mov
pushf
and
clc
pop
popa
cmc
jo
xchg
fmulp
call
pop
outs
dec
ret
mov
out
or
pop
adc
push
cmp
xor
test
dec
and
test
in
int3
add
out
lea
rcr
loop
test
dec
dec
jl
jb
xor
cmp
enter
add
mov
das
mov
push
rcl
add
cmps
enter
inc
mov
or
mov
jmp
aas
adc
sbb
dec
sti
cmp
ret
and
push
in
pop
lds
std
dec
or
aaa
and
cmc
push
cld
leave
not
lods
out
cmps
cvtdq2ps
hlt
clc
test
retf
out
fdivr
jmp
clc
ret
add
shl
arpl
and
sbb
in
sub
jne
jns
cmp
and
fs
cmp
cmp
jns
adc
out
jg
stc
gs
ret
mov
lock
inc
in
jg
mov
and
and
jb
in
jge
(bad)
mov
cmps
cwde
cli
cmc
pop
sar
leave
mul
(bad)
cmp
xlat
int
fsub
js
repnz
je
rcr
out
mov
cmp
cld
jnp
lods
fst
dec
mov
mov
movups
mov
adc
inc
sahf
and
out
and
cli
and
popf
mov
(bad)
adc
and
popa
xchg
mov
cwde
arpl
mov
fwait
arpl
mov
cwde
arpl
cli
cwde
arpl
pop
push
(bad)
hlt
cmp
std
out
and
cli
dec
(bad)
(bad)
push
and
cmps
push
(bad)
(bad)
(bad)
aas
cmp
imul
fdivr
add
mov
das
cmp
xor
dec
add
sar
sub
icebp
jnp
js
push
or
arpl
sub
xor
jo
and
icebp
add
xor
jae
js
add
pop
or
inc
out
fisubr
cmp
call
xchg
or
lods
and
cmp
jge
retf
mov
sub
not
cli
int
out
mov
in
in
sbb
arpl
(bad)
push
ds
jo
and
dec
ret
loope
mul
adc
cdq
in
sub
in
mov
xor
(bad)
scas
jge
or
sub
repnz
mov
jmp
out
aam
jmp
jno
jns
aam
jmp
jnp
hlt
lds
mov
add
dec
add
dec
in
icebp
add
mov
(bad)
popa
leave
cmps
jne
in
inc
add
sbb
faddp
sbb
(bad)
retf
aas
fst
push
cmp
(bad)
mov
fbstp
aaa
add
pushf
xor
cmp
call
call
stc
mov
enter
cwde
lock
int3
ficom
xlat
pop
inc
aaa
fadd
retf
push
push
fsub
push
push
sbb
push
push
jl
mul
mov
iret
aaa
retf
inc
loope
fdiv
retf
jbe
les
icebp
retf
cmp
jge
es
lock
pop
in
mov
in
test
in
or
test
in
sar
test
mov
pop
adc
mov
(bad)
xlat
test
ja
out
inc
or
adc
mov
es
repz
mov
out
fstp
arpl
out
jbe
add
outs
test
ins
and
pushf
dec
dec
(bad)
mov
lahf
loope
repnz
fistp
or
xor
xchg
jns
pop
jmp
sub
pop
push
and
mov
shl
gs
mov
mov
int
pop
bound
jmp
arpl
imul
add
in
ja
repz
fwait
in
mov
mov
rcr
sbb
ret
pop
jg
loop
inc
add
xor
mov
pop
cmp
cmps
(bad)
retf
test
xor
leave
retf
cmp
sbb
or
aaa
or
dec
inc
sar
movs
outs
test
lahf
loop
cmc
sbb
fcmovbe
lods
pop
ss
pop
jnp
jecxz
inc
push
or
jge
push
lea
daa
cdq
dec
inc
fdivr
cmps
arpl
les
mov
cmps
sbb
int
jge
jmp
arpl
add
mov
and
pop
push
sub
mov
fwait
in
xchg
lea
(bad)
mov
jne
loope
inc
add
adc
jg
add
inc
sar
cmps
outs
icebp
retf
popf
xchg
in
xlat
stc
mov
mov
outs
cmp
sbb
or
sbb
addr16
test
sub
mov
fdiv
stos
addr16
rcr
xor
xor
pop
jns
loopne
inc
pop
adc
lods
jnp
add
outs
pop
and
(bad)
movs
outs
test
xchg
out
(bad)
cmc
test
add
enter
jmp
dec
adc
popa
pop
jne
sbb
add
enter
in
xacquire
push
fst
scas
adc
icebp
dec
jno
pop
fs
lsl
mov
cs
sti
fisttp
mov
xlat
(bad)
lods
outs
ss
inc
jbe
in
pop
or
push
pusha
sub
mov
daa
cdq
mov
sar
movs
ins
test
div
mov
bound
test
push
add
mov
pop
push
and
test
mov
and
rcr
movs
sbb
ret
pop
jg
loope
inc
or
cmpxchg
and
dec
dec
sar
cmps
jbe
int
cdq
cli
fimul
mov
test
je
out
inc
or
adc
mov
pop
es
mov
fcomip
stos
pusha
cld
rol
mov
retf
aad
pusha
cmp
inc
jno
in
pop
add
pop
test
push
push
and
ins
inc
sahf
xchg
in
sar
test
add
retf
push
ins
inc
adc
gs
push
unpcklps
pop
push
and
scas
fs
fadd
scas
lea
(bad)
shl
addr16
inc
sbb
cmp
mov
and
xlat
jmp
call
ss
movs
mov
imul
sbb
push
jae
sbb
addr16
test
sub
scas
addr16
ret
or
push
fcom
mov
ja
out
pop
or
sub
mov
es
repz
sahf
cmp
mov
scas
adc
inc
jno
sbb
pop
add
movs
data16
xchg
cs
mov
data16
or
mov
outs
and
inc
dec
sbb
pop
push
add
cmps
push
push
sub
mov
fwait
clc
fadd
mov
or
shl
jne
loope
inc
add
pop
mov
pop
and
dec
inc
fucom
cmps
ja
retf
call
ss
cmps
mov
imul
sbb
or
adc
pop
push
sub
mov
addr16
ret
or
push
rcr
cmps
sbb
rcr
cmc
dec
dec
sbb
outs
push
jo
add
outs
pop
cmp
jbe
retf
loop
lea
mov
imul
dec
dec
adc
fs
add
adc
push
and
imul
sahf
nop
jmp
cmp
mov
add
int
pop
bound
ja
add
adc
ja
add
dec
fucom
mov
xchg
in
icebp
mov
mov
(bad)
leave
push
fs
inc
jo
adc
push
pop
sbb
pop
push
sub
scas
popa
repnz
mov
add
shr
and
dec
dec
sbb
push
mov
dec
inc
shl
mov
call
loope
mov
ror
push
push
adc
or
pop
xor
jae
hlt
xchg
pusha
cld
fmul
mov
xor
(bad)
lods
pop
into
stc
pop
jle
out
jbe
add
push
js
push
mov
and
sahf
inc
dec
(bad)
jmp
in
ror
scas
mov
vandnps
icebp
inc
jbe
sbb
pop
mov
pop
push
das
xchg
mov
(bad)
clc
scas
imul
sub
mov
xor
sar
bound
jmp
je
pop
mov
inc
inc
fucom
cmps
push
retf
call
and
scas
mov
(bad)
stos
outs
xor
inc
jg
loop
inc
add
cmpxchg
cmp
mov
cdq
call
cmp
ror
ins
aaa
repz
ja
sbb
or
sub
add
shl
addr16
fmul
mov
xor
movs
mov
pusha
cmp
dec
dec
sbb
fs
(bad)
add
sahf
inc
inc
shl
mov
xchg
jmp
cmp
mov
push
gs
inc
jno
adc
cmp
mov
inc
dec
aad
mov
sar
arpl
fild
mov
aaa
(bad)
fidivr
jge
in
jo
add
adc
ja
or
fwait
dec
inc
fucom
test
mov
(bad)
shl
bound
ja
sbb
cmp
mov
inc
dec
sub
mov
(bad)
(bad)
mov
mov
ret
frstor
jle
out
jbe
add
popa
pop
(bad)
adc
pop
sub
sti
stos
data16
(bad)
mov
mov
rcr
mov
bound
ja
sbb
arpl
add
mov
pop
push
das
xchg
mov
popa
clc
rol
or
mov
imul
and
and
shl
retf
and
mov
add
mov
(bad)
push
jne
pop
mov
or
adc
popa
jle
adc
and
jmp
jne
ds
xor
inc
ds
xor
inc
push
jmp
aad
jle
jne
jle
adc
inc
or
inc
fsubrp
cmc
mov
fimul
rcr
mov
dec
push
loope
mov
jg
jne
jle
push
add
push
je
mov
mov
test
popa
pop
mov
mov
enter
mov
pop
enter
call
adc
(bad)
xor
jg
je
pop
test
sar
push
inc
mov
push
je
pop
enter
mov
aas
call
je
aas
test
pusha
fucomip
xor
jg
adc
aas
enter
call
push
pusha
aas
mov
add
je
pop
enter
test
pusha
aas
or
jg
adc
(bad)
aam
fisttp
xchg
mov
fucomip
aam
dec
mov
aas
dec
aam
fisttp
aam
mov
enter
test
pusha
aas
sub
jg
adc
dec
hlt
pusha
fild
xchg
sbb
xor
(bad)
call
xchg
cmp
xor
dec
hlt
mov
fisttp
hlt
cmp
mov
aas
dec
xor
pop
or
lahf
call
hlt
loopne
dec
aam
lahf
or
fild
add
dec
adc
dec
xchg
jecxz
dec
xor
lahf
enter
imul
or
mov
push
aam
mov
push
mul
mov
push
xchg
add
push
mov
mov
imul
pop
sub
mov
mov
and
jecxz
mov
lahf
mov
ret
jl
aaa
and
mov
jl
aaa
and
inc
pop
mov
cld
mov
and
and
ret
pushf
test
add
mov
jl
aaa
add
mov
cmp
test
jl
ja
fsubr
pop
inc
jl
ja
pushf
retf
xlat
arpl
sbb
arpl
retf
xchg
arpl
pop
jecxz
jmp
inc
cld
retf
mov
cmp
sbb
arpl
jmp
inc
sbb
aaa
ret
cmp
aaa
inc
pushf
jmp
inc
cmp
xlat
and
aaa
cmp
mul
cmp
xlat
mov
fmul
xlat
sbb
ret
fmul
cmp
cld
stos
test
dec
mul
pop
sub
sbb
ret
pop
loop
retf
push
arpl
aaa
ret
push
add
push
and
push
xchg
pop
mov
pop
mov
pop
mov
pop
test
xor
icebp
sbb
sub
leave
pop
cmps
add
adc
push
js
jae
test
jno
xor
add
xor
movs
and
dec
pop
retf
dec
es
cdq
pop
cs
imul
push
mov
cli
sub
outs
mov
mov
and
les
or
xchg
and
bound
js
or
inc
repnz
ror
add
pop
popa
popf
mov
mov
sub
iret
push
stc
or
pop
pop
cld
inc
push
test
test
inc
stos
jmp
pop
fs
push
stc
je
sahf
xor
pop
dec
inc
cmp
loop
in
pop
out
(bad)
add
ds
es
push
and
xor
movs
or
or
lods
adc
shr
shr
cmp
jle
adc
sar
leave
cmps
or
outs
(bad)
xor
mov
test
test
loopne
mov
imul
jmp
out
test
cmps
sti
unpcklps
inc
es
imul
dec
pop
mov
in
ins
mov
out
pop
xor
mov
les
xlat
fdiv
or
lea
sbb
xor
or
jl
shl
mov
mov
dec
movq
mov
pop
cmp
cmp
push
retf
mov
inc
dec
inc
push
retf
xor
imul
aas
sub
add
sahf
push
sbb
cmp
repz
mov
push
movs
xchg
not
sub
push
test
and
mov
sbb
in
scas
in
aam
arpl
sahf
mov
xor
pop
pop
xor
lea
jp
mov
jo
jg
enter
(bad)
pop
call
cmp
nop
xchg
in
(bad)
and
lods
mov
inc
jbe
push
lahf
jns
stos
xchg
or
cmp
mov
aam
xor
loop
lahf
xchg
mov
dec
mov
xor
xor
je
mov
into
ins
adc
outs
and
push
push
bound
(bad)
retf
mov
sbb
repnz
push
jmp
adc
repz
xchg
jmp
xchg
adc
call
jmp
mov
data16
jp
push
jo
shl
xor
cwde
call
add
xor
enter
js
ja
xor
rcr
mov
fwait
out
pop
test
pop
jecxz
or
dec
add
push
cmovg
mov
iret
inc
mov
sbb
xor
fmul
aas
adc
mov
mov
jg
lea
iret
popa
xlat
adc
mov
(bad)
cmp
cmps
cdq
and
xor
or
cwde
in
dec
leave
push
jae
and
mov
mov
xchg
or
sbb
jge
cmp
rcl
cwde
in
leave
ins
retf
ret
ins
fsin
mov
xchg
js
enter
arpl
popa
dec
popf
adc
pop
jnp
clc
jnp
in
mov
and
mov
xchg
or
mov
and
in
cmp
adc
push
ja
adc
icebp
xchg
test
jg
bound
cmp
test
pop
xchg
dec
jnp
scas
outs
push
mov
je
pop
popa
jp
shl
fistp
jecxz
dec
inc
cmp
cmp
sub
or
or
push
or
sub
retf
stos
inc
dec
sbb
lods
dec
push
xchg
mov
popf
fs
xor
push
int3
addr16
inc
aad
or
movs
ss
popa
nop
push
out
enter
dec
push
xor
mov
jmp
xchg
jbe
xor
mov
or
adc
mov
ret
(bad)
fbld
fdivr
in
or
icebp
push
push
ins
jbe
mov
xor
(bad)
mov
or
sti
outs
imul
adc
or
ins
fstp
(bad)
movs
fst
adc
je
daa
sub
lahf
dec
es
daa
push
mov
sldt
mov
test
jb
iret
jne
(bad)
cmp
dec
xor
sub
addr16
into
mov
xchg
retf
xor
pushf
and
jnp
in
inc
add
movs
adc
xchg
lods
imul
jb
daa
fstp
sub
bound
sbb
mov
push
mov
cmps
sub
jbe
add
xor
push
sbb
vpacksswb
aad
inc
and
jne
loope
dec
add
ficom
xlat
dec
adc
cs
rcl
adc
dec
shr
cmps
dec
pop
addr16
jge
adc
mov
shl
pusha
sbb
cmp
not
mov
jns
js
data16
dec
mov
mov
ja
push
loopne
test
mov
or
rcl
or
mov
int3
pop
jmp
dec
or
sti
je
rcl
pop
pop
xchg
sub
pop
xor
cmp
mov
arpl
sub
jo
(bad)
add
jmp
mov
loop
jmp
pop
jno
mov
push
sahf
(bad)
sub
hlt
cmp
push
pop
sub
call
cmp
add
sbb
popf
test
mov
mov
or
jae
pop
push
add
mov
(bad)
hlt
cmp
push
into
outs
dec
aas
pop
jbe
ins
xchg
xor
fisttp
jo
xchg
cmp
sub
lods
add
lock
rcl
ins
stos
out
aas
rcl
add
hlt
retf
pop
ja
push
leave
sbb
pop
aaa
add
push
mov
inc
or
mov
jb
scas
sub
or
xlat
push
popa
adc
mov
push
fist
add
adc
lock
ins
in
mov
jne
daa
jns
rcl
dec
cwde
sub
jmp
(bad)
in
ds
sbb
add
neg
xor
adc
loopne
fcmovnb
push
sbb
imul
gs
jo
outs
pop
sub
cdq
lea
dec
sbb
dec
xchg
add
leave
test
addr16
mov
dec
sti
fwait
test
adc
xchg
cmp
shr
push
mov
lea
call
repz
mov
xor
in
fwait
xor
and
sbb
pusha
and
sub
pop
das
inc
movs
mov
scas
or
popf
(bad)
sub
cmp
push
adc
mov
pop
jmp
retf
jbe
addr16
ficomp
xchg
lods
cld
sbb
or
fsub
shl
(bad)
lods
fiadd
cmp
push
mov
aaa
pop
pop
jmp
retf
cmp
sbb
rcl
inc
ja
push
jbe
jb
jo
pop
popa
icebp
icebp
xchg
or
add
pop
mov
xlat
xchg
pop
add
in
mov
adc
and
dec
mov
and
push
ret
jg
addr16
nop
mov
push
popa
ror
cmps
dec
ins
leave
pop
nop
or
cmps
ret
cmp
in
imul
push
ja
cmp
out
pop
bound
jb
scas
loop
inc
gs
stos
and
loopne
fsub
ret
jns
rcr
das
loope
test
in
xchg
scas
sub
rcr
push
mov
int
sbb
popf
sar
dec
jne
mov
dec
repnz
data16
inc
jb
add
hlt
pop
sti
pop
adc
jmp
cmp
adc
cwde
pop
push
cmp
xor
daa
add
addr16
push
pop
or
bound
mov
arpl
imul
mov
jb
shr
std
sub
mov
repz
or
addr16
out
imul
push
inc
inc
xchg
imul
(bad)
mov
pop
jbe
lea
imul
mov
add
gs
lods
xchg
pop
pop
movq
test
inc
icebp
aas
push
cmp
push
xchg
jle
(bad)
mov
adc
fidivr
pop
stc
rol
loop
daa
les
jae
pushf
mov
pandn
cdq
jb
outs
mov
rcl
cmp
popa
cmp
push
js
fcom
and
adc
inc
add
test
fwait
xchg
xor
sbb
push
out
sub
in
cmp
jnp
cdq
cmps
xchg
or
xor
mov
cmp
push
inc
outs
nop
ins
and
hlt
xor
jb
lock
lea
xor
sahf
cld
ret
rcr
in
sbb
inc
xchg
bound
push
jnp
jne
(bad)
lods
pop
fsqrt
and
sbb
jne
push
mov
and
jle
in
add
clc
pushf
test
dec
sub
les
adc
mov
loop
lea
dec
push
xchg
in
outs
mov
aad
in
sbb
mov
rol
call
fisttp
dec
add
inc
test
mov
inc
push
lahf
jns
std
jp
jge
and
jno
push
adc
js
fstp
movs
add
fmulp
push
mov
mov
ds
mov
mov
and
mov
xchg
fcmovu
dec
adc
bound
mov
jno
in
shr
add
sbb
sub
retf
leave
test
pop
dec
jno
imul
loop
imul
test
xchg
in
mov
lea
not
mov
sub
xchg
cmp
inc
test
fmul
or
xchg
mov
aas
sub
dec
jne
push
mov
(bad)
imul
cdq
or
data16
movs
idiv
jp
inc
push
sub
bswap
ins
rcl
push
lods
pop
leave
adc
shl
popf
test
lea
jno
adc
push
jne
add
loope
hlt
aaa
inc
mov
scas
imul
fcom
sbb
add
xor
and
inc
nop
pop
xchg
xchg
fnstenv
dec
jle
lock
push
inc
retf
mov
retf
ins
sub
xor
aas
push
dec
dec
enter
dec
inc
adc
mov
sbb
bound
icebp
push
jge
push
fisttp
arpl
sbb
mov
repnz
pop
inc
ror
add
mov
dec
test
jle
push
stos
pop
push
test
fwait
outs
inc
mov
ins
push
test
vminss
inc
cmp
push
test
mov
(bad)
sbb
sti
fs
popf
push
dec
loopne
inc
not
dec
and
xchg
cwde
fld
leave
jle
loopne
mov
aaa
or
dec
aas
popf
mov
push
xchg
leave
cmp
adc
inc
test
loop
jecxz
ins
or
push
push
addr16
push
fsubr
inc
mov
sahf
sbb
mov
push
xchg
in
cmp
pop
push
xchg
fadd
push
mov
jge
movs
sbb
imul
add
or
push
cmp
int3
push
mov
ficom
sbb
pop
iret
mov
jbe
cmp
push
dec
sahf
add
inc
inc
inc
cmps
sbb
or
and
push
dec
popf
jae
into
push
das
fwait
mov
aad
das
add
add
sbb
stos
dec
xor
dec
adc
bound
div
pusha
lods
fldenv
data16
sub
xchg
arpl
ins
sbb
retf
js
mov
or
add
lds
xchg
(bad)
sbb
mov
shl
call
stc
fisubr
push
aam
mov
xor
mov
pop
fdivr
call
adc
push
inc
leave
shr
cs
mov
shr
mov
pop
add
jle
add
adc
retf
fdiv
arpl
mov
push
shr
inc
pusha
inc
xchg
stc
stos
or
sar
popf
ret
mov
aam
jp
inc
scas
test
rol
dec
pusha
pop
lods
movs
pop
sbb
retf
js
fsub
xchg
cdq
je
cdq
cli
lock
mov
pop
loop
push
jecxz
test
and
cmp
pop
add
sbb
mov
jae
cmp
int3
pop
nop
cmp
stc
and
push
jo
stos
mov
into
in
sar
rcl
in
nop
sbb
or
loop
rcr
xor
shl
loopne
xchg
adc
dec
and
sbb
std
mov
jecxz
outs
retf
cmps
repz
aam
jle
nop
arpl
xchg
adc
icebp
sub
pop
mul
jo
in
and
push
mov
pop
fsub
cmp
sub
cmp
or
mov
jmp
push
test
xor
in
cmc
pop
je
dec
jnp
dec
dec
mov
leave
test
pop
leave
les
lock
adc
jp
leave
out
cmp
jne
mov
(bad)
and
popf
ins
adc
fldcw
mov
mov
cmp
icebp
dec
or
(bad)
fsub
mov
jbe
mov
and
ins
inc
or
mov
int
jns
mov
sbb
pop
mov
jg
je
pop
in
lods
cmp
dec
xchg
loope
inc
xor
xlat
jp
dec
mov
dec
pop
inc
in
sbb
cmp
(bad)
xor
pop
sub
mov
mov
ffreep
mov
sbb
adc
sub
es
arpl
or
fist
jns
adc
xor
fstp
divps
xor
mov
inc
int3
inc
pop
xor
dec
mov
jmp
or
pop
and
hlt
lods
sbb
sbb
pop
aad
clc
jno
das
pushf
call
mov
mov
mov
jbe
jmp
retf
mov
leave
mov
movs
lahf
(bad)
lods
loope
push
mov
in
(bad)
xlat
push
jmp
cmp
sti
push
sbb
shl
not
push
outs
xor
pop
adc
sub
mov
mov
icebp
rcl
cdq
xchg
iret
jo
inc
out
xchg
jae
sub
dec
mov
sbb
mov
inc
push
fisubr
pop
jp
xor
fs
inc
pushf
sar
adc
nop
and
xchg
in
pushf
leave
pop
cmp
dec
mov
xlat
mov
imul
lock
shl
xchg
outs
out
sub
fist
imul
call
ds
in
out
xchg
push
sub
jnp
sbb
es
xlat
imul
sub
cwde
and
add
pop
sar
mov
daa
into
cdq
retf
jg
ret
xor
dec
or
arpl
xchg
ins
jbe
out
mov
inc
adc
out
mov
sub
loopne
popf
sbb
ins
dec
enter
jae
rcr
mov
and
sub
cmps
gs
shl
mov
mov
jo
mov
aas
mov
dec
or
out
pcmpgtw
sar
dec
mov
xchg
xchg
in
sbb
xor
stos
jbe
outs
enter
and
push
js
or
stc
or
std
js
adc
pop
icebp
adc
pop
or
push
sbb
in
mov
xchg
add
lods
mov
cmp
scas
mov
in
outs
retf
bound
ins
cmp
inc
mov
pop
rcl
dec
inc
mov
pop
jb
imul
jmp
xor
xor
inc
adc
jo
cld
jg
cmp
lods
jne
dec
outs
idiv
out
data16
loopne
cmps
cmp
cmp
pop
push
push
cmps
movs
mov
mov
push
ficom
(bad)
jo
and
push
or
push
mov
pop
mov
adc
not
and
push
jp
test
sub
push
jp
pop
cs
mov
ds
call
or
adc
mov
pushf
aad
outs
dec
or
cdq
rcr
(bad)
in
dec
aas
nop
and
jae
ds
xchg
adc
ja
movs
lods
mov
pop
jno
cmp
cmp
xchg
lahf
push
ins
in
push
xor
loopne
lods
jne
dec
and
fprem
xchg
cmps
xchg
in
ins
movs
aad
in
push
xchg
push
aas
pop
mov
mov
(bad)
cmpxchg
mov
add
je
adc
(bad)
aad
cs
mov
dec
pop
mov
je
bound
mov
jbe
into
cmp
xchg
fmul
enter
xchg
sbb
aas
fimul
pop
and
mov
fs
xchg
mov
sbb
(bad)
mov
mov
jp
hlt
scas
sbb
(bad)
inc
or
das
add
pop
in
jne
retf
je
push
pop
shl
dec
pop
retf
inc
out
mov
adc
std
dec
daa
mov
fwait
movs
pop
outs
cmp
scas
pop
aad
push
xor
pop
xchg
popa
and
jne
les
sub
xor
mov
push
mov
pop
popa
push
repz
ret
aas
outs
aam
mov
dec
jl
ror
pop
or
enter
xchg
cmp
std
xchg
outs
inc
push
enter
pop
inc
jbe
xor
mov
inc
adc
cmp
std
lods
sub
dec
loopne
lods
test
jge
dec
ins
pop
dec
scas
test
mov
in
movs
xor
sub
scas
xchg
repz
stc
aaa
sbb
rcr
in
sahf
jne
imul
fmul
push
pop
mov
mov
icebp
pop
adc
fdiv
jle
lea
adc
mov
mov
out
out
outs
icebp
sete
aas
in
and
push
mov
fnsave
xchg
add
or
jmp
pushf
mov
outs
and
jnp
ret
pushf
or
adc
inc
enter
xchg
icebp
cmp
sub
jo
pop
mov
or
outs
ja
cmp
fild
mov
stos
arpl
dec
pop
cmp
xor
or
(bad)
jns
add
inc
push
and
cmp
ret
leave
clc
and
dec
dec
xor
fisubr
mov
fst
ja
daa
adc
pop
in
mov
jae
sbb
mov
mov
mov
nop/reserved
cmp
outs
shl
ds
push
pop
mov
sbb
cmp
or
pop
mov
cmps
pop
bound
aam
inc
retf
je
dec
xchg
push
cmp
adc
inc
dec
dec
and
jb
popa
sbb
stos
xchg
mov
mov
pop
je
fwait
jne
js
pusha
adc
addr16
sbb
add
add
add
jbe
sub
pop
or
popa
es
mov
imul
mov
mov
aam
and
pusha
jb
imul
js
xchg
xchg
in
(bad)
mov
push
inc
sahf
xchg
ins
and
mov
cmp
in
inc
inc
fcmovnbe
out
lahf
cdq
ins
xchg
inc
dec
nop
inc
ret
jns
leave
cmp
mov
inc
pusha
jmp
dec
pop
(bad)
cmps
test
scas
add
dec
fdiv
out
lea
shr
hlt
push
mov
call
test
jge
enter
enter
adc
ins
jne
lods
xor
xchg
or
shl
and
cs
xor
push
test
outs
inc
test
addr16
pusha
(bad)
in
retf
into
dec
(bad)
push
jbe
or
push
dec
dec
(bad)
in
xchg
inc
cmp
mov
and
dec
adc
add
cmc
pop
fimul
call
rcl
pandn
pop
xchg
mov
cmc
mov
stos
and
xor
adc
push
lea
inc
aaa
pop
dec
xor
inc
nop
cmp
stc
movd
aad
cmps
pop
(bad)
aad
mov
pop
pop
cmps
pop
jle
sub
mov
fidivr
in
sub
inc
add
data16
xlat
dec
outs
ret
sahf
bnd
pusha
imul
push
div
scas
iret
sub
jmp
ja
cmp
repnz
int3
ret
imul
fistp
sub
scas
cmp
ja
lock
add
ins
std
retf
arpl
mov
push
fcom
xor
imul
and
test
push
xlat
bswap
cmp
xor
xchg
inc
xchg
push
out
mov
mov
ficomp
push
and
fdiv
cmp
xlat
pop
ret
adc
push
fild
add
xor
xchg
test
inc
add
xlat
dec
cmps
adc
cmp
repnz
(bad)
loope
adc
or
mov
jae
inc
dec
out
and
fld
inc
adc
cmp
mov
lahf
iret
dec
mov
adc
ds
out
mov
lahf
cmps
xchg
push
(bad)
dec
inc
repnz
xchg
inc
sbb
js
sub
mov
xor
adc
iret
sbb
xchg
cmp
jmp
dec
pop
stos
xor
stc
ret
cwde
and
and
call
sbb
jmp
lods
(bad)
fnop
cmp
scas
repz
jle
sahf
mov
xor
jb
ret
scas
adc
pop
scas
dec
cmp
push
adc
cmp
cmp
sbb
mov
jmp
rol
gs
rcl
jnp
in
mov
xlat
jecxz
mov
out
push
test
xor
push
xor
fs
jb
cwde
addr16
imul
push
sub
sbb
dec
xor
aas
xchg
hlt
adc
es
mov
mov
fcmovnbe
fwait
or
inc
xchg
gs
sbb
sub
adc
sti
ins
mov
cmps
sbb
push
adc
cmp
or
mov
fldcw
push
push
cmp
stc
test
or
retf
push
stc
and
pusha
mov
(bad)
imul
pop
mov
js
sbb
add
shr
xchg
xor
sbb
mul
xor
icebp
int3
cmp
adc
push
jns
mov
cmc
jno
and
movs
push
movs
push
add
push
popf
je
jb
push
inc
pushf
fsub
or
mov
daa
pop
pushf
shl
xor
cmps
les
jae
mov
pop
jne
ret
add
xchg
fs
mov
mov
ret
sbb
sahf
frstor
pop
jae
push
push
pusha
jne
(bad)
pop
adc
cdq
fsubrp
sahf
pusha
inc
sti
adc
addr16
sub
fidiv
stos
dec
inc
sbb
fldenv
cmp
ss
cmp
and
push
dec
xor
pop
popf
inc
lea
pop
or
xchg
inc
mov
pop
mov
xlat
daa
push
jge
xor
sub
add
adc
and
push
shr
push
outs
adc
xchg
inc
int
xchg
xchg
mov
jae
sti
pop
jg
or
xchg
add
pop
push
arpl
aaa
sub
sbb
dec
xchg
push
jo
bound
push
ror
sub
pop
retf
std
mov
sub
xor
sbb
push
addr16
mov
je
cmp
in
loop
inc
cmp
pop
out
sbb
mov
xchg
cmps
rol
and
mov
and
mov
aad
inc
rcl
ss
xlat
sbb
dec
or
loop
pop
aad
dec
dec
icebp
jmp
(bad)
fcmovnbe
sbb
sbb
jo
movs
inc
sbb
outs
call
rcr
inc
mov
out
jl
jae
iret
pusha
lahf
movs
jmp
daa
and
cs
and
outs
push
(bad)
pop
and
inc
jbe
inc
or
dec
aam
xor
fild
and
data16
inc
cmc
inc
xor
sub
aas
ins
push
and
jmp
and
sub
add
or
mov
outs
jnp
test
xor
pop
rcr
aaa
push
xchg
cmc
mov
mov
or
push
jns
dec
push
mov
sub
pop
adc
sbb
xor
gs
int3
leave
sbb
xchg
mov
push
or
imul
mov
mov
or
fucomip
dec
nop
push
jnp
cmp
mov
fstp
(bad)
adc
pop
sahf
xor
sub
pop
inc
loop
shl
xor
adc
imul
rol
add
mov
add
loope
xchg
mov
cmps
or
jl
sub
popa
jge
or
popa
pop
inc
loop
push
sbb
adc
clc
out
in
int3
in
shl
jne
push
xor
cwde
sub
jae
loop
rcl
ins
jns
xchg
fst
dec
(bad)
out
es
cmps
scas
(bad)
fcmovb
bound
mov
arpl
mov
inc
mov
inc
stc
mov
nop
jecxz
cmp
jns
inc
and
inc
jb
inc
movs
pop
mov
xchg
mov
add
sahf
test
stos
add
cmps
jl
xlat
adc
adc
dec
dec
call
dec
dec
sbb
ja
mov
fldenv
fcomp
int
push
out
xor
hlt
cmp
cmp
fimul
repnz
mov
cld
fwait
pop
lock
stc
in
push
je
scas
inc
push
aam
bound
adc
test
aaa
cli
jmp
xlat
or
call
in
cmp
mov
iret
jl
repnz
dec
in
lahf
stos
add
pop
dec
sub
ret
cld
mov
shl
out
push
and
push
inc
pop
push
shl
and
loope
xchg
push
ins
jnp
inc
or
adc
popf
ins
(bad)
sbb
mov
enter
jb
mov
cli
dec
mov
in
inc
mov
int
adc
mov
push
pop
cwde
icebp
mov
mov
jecxz
into
shl
xor
lods
outs
push
imul
dec
add
bswap
jl
inc
jns
dec
mov
nop
mov
mov
jne
push
fsubr
cld
shl
outs
loop
push
mov
out
pop
daa
ror
dec
mov
inc
in
mov
push
je
sub
pop
hlt
loope
aad
cmc
add
fstp
imul
pushf
or
mov
pushf
call
fincstp
aas
mov
cmp
push
cld
xor
mov
push
jle
push
inc
sbb
ficom
out
clc
push
dec
fucomi
push
push
jp
stc
sbb
icebp
mov
xchg
lods
out
rcl
(bad)
jl
jae
imul
sbb
(bad)
push
dec
loope
push
adc
push
xchg
dec
mov
add
adc
pop
dec
sbb
sub
push
add
xchg
or
test
dec
dec
dec
jp
mov
fmul
mov
pushf
(bad)
adc
mov
dec
test
dec
ret
sbb
retf
push
sub
cmp
and
call
sbb
adc
sbb
hlt
xor
pop
(bad)
adc
lods
sub
and
stc
and
mov
push
jns
cld
pop
retf
ret
(bad)
xor
inc
enter
add
push
add
or
sti
fcmovu
adc
fsub
(bad)
or
jne
adc
call
push
mov
inc
inc
dec
lahf
imul
push
cmp
pop
dec
adc
mov
mov
rcl
enter
nop
cmp
ds
push
xor
jp
dec
test
pusha
arpl
je
dec
or
iret
cwde
shr
fld
pop
add
add
dec
loopne
xchg
(bad)
adc
cwde
bound
xor
cmps
dec
jmp
lahf
add
sbb
test
sub
pop
loope
xor
sahf
inc
call
call
mov
inc
dec
push
fwait
push
cs
or
cdq
imul
mov
mov
(bad)
movs
fisttp
inc
popa
data16
out
jge
mov
add
fcomp
int
xchg
add
xor
pop
ror
push
mov
xchg
dec
retf
and
mov
jnp
push
int
addr16
stos
xchg
add
pop
fcomi
outs
jp
lods
pusha
xor
inc
adc
in
jbe
push
test
scas
sub
frstor
scas
ins
test
and
add
scas
jge
scas
push
push
sub
in
loopne
cwde
aaa
xor
aad
dec
enter
xchg
leave
xor
int
cmp
arpl
mov
push
stc
dec
and
cmp
mov
lods
pop
aaa
mov
push
inc
and
test
(bad)
cmc
add
pop
test
cdq
sub
and
push
mov
sahf
test
cmp
aaa
adc
dec
enter
and
jle
fimul
push
cmc
loope
pop
inc
push
fisttp
stos
cmps
and
aaa
pop
add
dec
sar
push
cmovp
aas
sub
aaa
sti
mov
jae
push
dec
aad
lods
aad
fmul
andps
sbb
mov
xor
(bad)
iret
mov
inc
push
sub
push
pop
push
popa
jnp
les
outs
cmp
lock
jb
mov
xor
mov
and
cld
out
sub
jnp
sub
pop
add
push
ror
inc
not
aam
dec
sub
pushf
addr16
inc
inc
add
xor
dec
test
and
cmp
sub
arpl
xor
dec
enter
pop
sub
pop
dec
cmps
lods
pusha
jp
dec
daa
lods
in
mov
push
cmp
popa
test
sub
inc
xchg
mov
inc
and
xchg
int
pop
dec
mov
dec
imul
popa
push
dec
inc
sub
cdq
aaa
fistp
fwait
popa
cmp
inc
xchg
inc
xchg
or
xchg
sti
(bad)
fistp
inc
inc
mov
std
cwde
inc
les
test
inc
push
mov
ret
cmp
and
mov
mov
gs
popa
shr
cwde
mov
int3
cmp
icebp
mov
fadd
xor
aaa
mov
sbb
inc
imul
test
dec
jmp
adc
sahf
xchg
enter
popf
dec
xor
dec
pusha
retf
xchg
out
aaa
pushf
sub
das
cdq
inc
sub
sub
xchg
aam
dec
dec
inc
add
adc
fmul
xor
dec
sub
scas
cwde
xchg
inc
mov
cmp
inc
addr16
aaa
and
inc
sub
stc
jne
push
test
aaa
jne
out
xor
(bad)
cmp
xor
loope
cmp
dec
imul
js
xor
inc
jle
xor
(bad)
loope
lahf
inc
inc
pop
out
sub
mov
xchg
push
or
inc
arpl
jnp
jl
inc
add
mov
add
mov
aas
mov
dec
jb
mov
(bad)
push
cmp
imul
pop
cmp
pop
mov
in
cdq
mov
inc
in
in
pop
jns
pop
aad
dec
or
adc
xchg
ret
test
sub
mov
pop
mov
mov
push
adc
mov
and
push
jg
lea
pop
inc
call
xchg
mov
arpl
hlt
scas
gs
push
add
mov
das
dec
sub
lahf
sbb
lds
dec
and
xchg
in
cmp
dec
xor
inc
sbb
xor
(bad)
ins
xchg
test
xchg
retf
xchg
shl
(bad)
cmc
dec
push
fcomp
jp
cmp
jl
xchg
mov
pop
mov
(bad)
dec
sub
out
xchg
push
mov
fiadd
mov
data16
test
mov
and
add
push
cld
movs
aam
dec
enter
pushf
iret
cmp
es
pusha
mov
dec
and
(bad)
pop
int3
ins
xchg
aad
push
or
in
jp
push
jo
lods
sub
mov
fmul
sti
lods
int
sbb
dec
add
push
imul
sbb
sbb
inc
mov
mov
enter
(bad)
mov
or
cmp
aaa
aaa
fimul
mov
add
cmp
mov
xlat
cdq
dec
xor
jl
dec
or
leave
push
mov
jle
adc
dec
enter
xchg
stc
ss
inc
xchg
out
leave
pop
inc
and
xor
pop
loopne
popf
cmp
push
xor
sbb
dec
pop
mov
sbb
jne
pop
dec
inc
mov
cmp
inc
push
dec
inc
pusha
rol
push
in
push
leave
inc
(bad)
test
mov
mov
addr16
inc
call
mov
daa
push
retf
iret
jo
inc
call
xchg
jb
call
add
aas
fcomip
mov
test
inc
lods
ds
fadd
mov
sti
dec
es
sahf
mov
xchg
and
cmp
sub
adc
mov
fidiv
dec
add
mov
jnp
test
or
aas
xor
xor
dec
or
(bad)
xchg
das
pop
xor
dec
push
sub
inc
lahf
and
gs
mov
and
dec
dec
push
xor
pushf
xchg
xchg
loope
test
test
ins
adc
and
mov
sub
arpl
int
enter
xchg
cmps
cmp
aad
call
cmp
lea
inc
inc
(bad)
xchg
and
lahf
jnp
jg
jmp
mov
mov
test
jns
mov
dec
pop
inc
(bad)
cdq
push
cs
adc
inc
add
cmc
push
popf
dec
push
pop
shl
cmc
popf
push
call
repz
jg
rol
dec
pusha
pop
xchg
sub
and
pop
call
mov
adc
dec
or
jecxz
xor
sub
pop
mov
mov
push
(bad)
xor
push
cmp
lods
mov
inc
lea
sbb
xchg
ret
adc
lods
(bad)
sahf
imul
cmp
lds
cmp
push
fld
rol
stos
and
and
inc
cmp
jno
sbb
or
mov
jmp
inc
out
aas
xchg
dec
add
inc
loopne
and
adc
dec
mov
xchg
icebp
cmp
gs
inc
test
repnz
test
or
or
pop
inc
dec
push
fdiv
mov
xor
and
dec
inc
adc
adc
xor
mov
jecxz
mov
or
aaa
rcr
inc
and
je
inc
push
fnstsw
push
loop
dec
enter
xchg
int
fimul
dec
mov
mov
imul
jle
das
test
stos
pushf
sbb
mov
call
dec
mov
or
push
mov
dec
test
aas
neg
jo
bnd
das
adc
push
and
fisubr
clc
sbb
lock
add
add
retf
gs
movs
in
xor
inc
pop
pop
cmp
icebp
mov
daa
dec
test
sbb
xor
jecxz
push
leave
pop
mov
jle
push
leave
inc
or
inc
xchg
xor
aas
gs
loope
mov
not
xchg
aad
sub
cwde
sub
cmps
inc
push
dec
not
jne
pop
leave
push
loopne
adc
inc
xor
push
push
cwde
dec
xor
push
sub
repnz
mov
adc
mov
loop
jecxz
mov
test
dec
cmp
dec
or
mov
in
sahf
fst
mov
cmp
(bad)
pusha
or
pusha
(bad)
xchg
mov
xchg
cld
mov
xchg
cdq
inc
ds
imul
dec
shr
xchg
add
test
or
mov
add
inc
and
add
pop
dec
test
dec
add
out
cmc
and
push
cdq
mov
fwait
pop
not
stos
sbb
stc
add
(bad)
arpl
push
out
cmps
mov
jne
sar
sar
inc
sub
(bad)
bound
fimul
and
cs
jnp
add
in
imul
std
jmp
popf
inc
test
or
sub
push
iret
xor
aam
dec
jno
mov
sub
adc
outs
hlt
ret
mov
lahf
addr16
push
imul
fdiv
adc
inc
jno
or
xchg
lahf
add
lods
mov
xor
ret
add
dec
dec
inc
daa
scas
popf
cmp
mov
arpl
addr16
xchg
jmp
inc
test
loope
and
pop
arpl
dec
enter
xchg
out
fistp
sub
jb
loopne
pop
mov
(bad)
inc
test
fsub
dec
rcl
inc
or
xor
pop
jg
inc
add
mov
gs
adc
push
movs
(bad)
lods
dec
and
xchg
push
xor
stos
mov
cwde
jae
add
and
and
out
add
sbb
imul
sbb
or
or
sub
aad
sub
sbb
mov
and
mov
and
xchg
or
jns
jg
sub
push
mov
pop
imul
test
xor
cmp
into
test
adc
inc
dec
dec
add
dec
xchg
sti
inc
or
mov
add
fmulp
adc
add
jge
fwait
inc
sub
ret
jle
xchg
cmp
cmp
(bad)
mov
inc
loope
sbb
fist
inc
add
xchg
cmp
arpl
jbe
shl
pop
xchg
push
mov
mov
jmp
mov
xchg
xchg
sub
pop
or
xlat
cld
cwde
neg
call
call
arpl
push
jae
mov
or
push
dec
mov
pop
bound
fpatan
loope
icebp
sub
out
xchg
xchg
loopne
add
add
cmp
enter
aad
inc
mov
mov
dec
lock
inc
push
lahf
jnp
push
dec
aad
xchg
add
(bad)
in
adc
push
pop
xor
pop
sbb
pop
pushf
fmul
repz
call
mov
adc
pop
add
sub
pop
daa
pop
jno
pop
jne
mov
pop
dec
xor
mov
movs
(bad)
dec
daa
adc
adc
pop
inc
xor
popf
xchg
(bad)
pop
cld
jl
mov
inc
out
loop
out
arpl
add
or
pop
jae
inc
(bad)
hlt
ins
clc
pop
lods
jmp
dec
clc
sub
cld
out
out
xor
test
xchg
pop
outs
loope
stc
movs
adc
inc
cmp
test
cmp
fdivrp
mov
mov
shl
xcrypt-ecb
cmps
int3
inc
sahf
push
mov
in
outs
xchg
popa
inc
add
pop
sbb
push
add
pop
icebp
popf
mov
mov
push
inc
gs
imul
repnz
inc
jns
je
enter
outs
or
and
mov
ins
es
fld
ins
mov
pusha
xor
push
ins
push
mov
xor
mov
push
inc
pushf
adc
pop
jle
pop
vmread
dec
xor
les
fidiv
inc
sti
ins
movaps
ins
push
or
movs
ret
add
or
pushf
sub
cmp
push
cmc
inc
call
fisubr
jbe
mov
xor
fwait
cdq
add
sbb
mov
bound
mov
ds
add
(bad)
jns
out
inc
les
fdivr
int3
ins
mov
sbb
adc
adc
mov
rol
imul
cld
add
popf
rol
in
push
push
jl
fisubr
es
jmp
cmc
fnstenv
loop
xchg
inc
dec
sbb
sbb
shr
mov
ins
movs
jle
(bad)
push
add
mov
sahf
jmp
xchg
push
jp
jmp
or
(bad)
data16
add
xchg
xor
sbb
jp
lds
sbb
jae
push
pop
retf
in
dec
int3
mov
jb
mov
pop
adc
or
imul
sub
(bad)
aam
pop
mov
adc
pop
test
imul
popf
fnsave
ret
jle
shl
stos
popf
ins
inc
dec
and
fidiv
jne
movs
shr
jbe
popf
in
mov
(bad)
jnp
icebp
cld
nop
add
sbb
ficomp
push
mov
shr
mov
adc
sbb
mov
jecxz
fcom
add
or
sub
xor
lods
sbb
out
cdq
xlat
jo
loop
sbb
ret
in
lea
cs
scas
imul
inc
dec
jno
pop
xor
cmp
in
movs
loope
xchg
add
fsub
pop
mov
mov
pop
scas
pop
popf
xchg
push
or
cmps
sti
mov
movs
data16
mov
mov
inc
les
pop
sbb
sbb
or
pop
(bad)
jae
ror
adc
shl
jne
xchg
mov
adc
mov
push
jecxz
inc
push
adc
or
fadd
pop
sub
in
es
mov
xor
rcr
adc
mov
scas
dec
dec
dec
pop
add
pop
popf
cdq
(bad)
fs
inc
fscale
loope
push
imul
jb
xchg
add
xchg
dec
xor
pop
xchg
retf
mov
jge
pop
pop
add
pop
xchg
mov
ret
cwde
mov
cmps
xlat
dec
les
fs
push
add
nop
inc
out
pop
pop
rol
and
popa
aas
mov
sar
daa
fstp
pop
adc
popf
mov
mov
inc
sbb
ins
and
inc
mov
imul
adc
push
les
mov
or
push
mov
lahf
cmp
jl
mov
fisttp
cld
cmps
sbb
jge
push
adc
sar
pop
pop
mov
push
or
xor
sbb
enter
mov
xchg
jp
ja
push
stos
cmp
pop
repz
mov
inc
ins
sbb
add
enter
scas
inc
xor
(bad)
test
mov
xchg
test
ror
jo
push
jb
fidiv
cmp
push
xlat
dec
popa
mov
xchg
and
call
xor
dec
imul
inc
or
push
adc
fcom
stos
dec
add
mov
cmp
xchg
xchg
mov
adc
or
cmps
push
mov
cmp
neg
scas
sbb
ror
shr
test
xchg
test
test
mov
fst
sbb
gs
mov
movs
pop
daa
test
jns
xchg
mov
mov
(bad)
mov
sahf
pusha
pop
xchg
push
inc
xor
int3
cwde
jmp
mov
call
in
inc
or
sub
xchg
cmp
xchg
or
test
dec
ret
push
outs
mov
mov
sub
mov
test
ins
frstor
inc
cmp
or
pop
mov
imul
test
mov
ins
inc
dec
adc
arpl
clc
scas
test
add
pop
aas
mov
fwait
push
int3
sbb
imul
ret
jnp
pop
inc
pop
pop
ret
cdq
std
out
mov
outs
vmulps
test
xchg
push
push
mov
dec
pop
inc
test
ficom
in
jmp
inc
sahf
test
sbb
loope
push
inc
cmp
xor
sub
sbb
ret
test
xlat
add
popa
cmp
mov
mov
popf
cmps
iret
ds
inc
outs
cmp
sbb
sub
test
cmp
dec
sub
adc
repnz
mov
dec
inc
push
ds
ins
sbb
xchg
dec
push
mov
jge
mov
xor
dec
jge
or
jmp
cmp
icebp
push
fisttp
out
ins
and
cmp
xor
pop
popa
lods
js
mov
add
mov
lea
jnp
ret
test
inc
clc
jge
or
pop
cmp
sub
mov
dec
fisttp
or
add
pop
adc
push
mov
(bad)
aad
dec
in
jg
adc
fwait
push
and
inc
xchg
stos
jp
inc
cdq
stos
mov
cmps
repnz
pop
fst
test
retf
mov
add
dec
cmp
mov
mov
fmul
or
cmp
fnstenv
popa
loope
fs
shr
retf
pop
jb
js
mov
push
icebp
int
sahf
mov
(bad)
mov
movs
fisubr
stos
inc
xchg
and
inc
rcr
pavgw
pop
rcr
mov
sbb
sbb
xchg
loopne
test
xor
pop
mov
data16
aam
xchg
sbb
mov
pop
fldenv
(bad)
adc
mov
xchg
mov
pushf
mov
mov
cmp
pop
mov
and
cwde
pop
int3
es
dec
cmps
xchg
mov
daa
add
adc
cdq
mov
movs
shl
push
sbb
das
jb
pop
sub
or
push
shl
xor
adc
inc
or
xor
aad
jge
in
mov
cmp
shr
outs
in
fs
xor
jo
outs
cwde
cmp
cmp
(bad)
(bad)
fisttp
aaa
jns
cmp
lea
aad
jge
dec
sbb
ds
push
dec
packsswb
test
push
test
dec
jmp
cwde
mov
cmps
call
es
jne
adc
and
stos
pop
ffree
rcl
dec
aad
ds
sbb
mov
popa
gs
das
lods
fst
in
inc
mov
push
movs
xlat
mov
adc
xchg
dec
inc
popf
jns
xchg
xchg
jnp
inc
pushf
std
and
mov
xchg
lods
push
fwait
inc
cmp
pop
mov
mov
push
in
leave
pop
popa
mov
aam
lods
daa
jne
push
sub
jl
aad
sub
test
sub
and
push
push
outs
mov
outs
ins
popf
gs
adc
xchg
pusha
out
add
sbb
lahf
test
outs
(bad)
add
jns
push
in
enter
fist
push
aam
mov
pop
popa
retf
xchg
dec
push
dec
push
adc
fisubr
in
sbb
push
popa
push
mov
mov
aad
mov
dec
mov
das
lods
arpl
push
mov
mov
arpl
inc
pop
test
dec
jl
and
push
sbb
mov
test
jmp
mov
fistp
mov
push
sub
addr16
addr16
sub
push
neg
es
push
(bad)
jns
icebp
mov
jnp
hlt
push
stc
pop
add
jmp
xchg
imul
pop
and
pop
fstp
(bad)
adc
fiadd
icebp
cmp
jbe
or
fimul
lds
cdq
pop
and
mov
rcr
movs
jmp
mov
sbb
pop
mov
mov
(bad)
in
pop
push
fstp
(bad)
push
outs
in
test
xlat
jecxz
pop
outs
mov
fsubr
or
add
or
dec
push
mov
int3
mov
pop
xchg
add
sub
in
mov
add
pop
add
mov
sub
adc
sub
or
pop
push
aas
push
xchg
loop
call
jne
or
mov
sub
and
xchg
fst
je
jb
mov
or
rcl
in
cmps
sub
or
sub
hlt
jne
dec
cmps
cmps
sbb
dec
and
and
mov
pop
dec
leave
pop
icebp
xchg
mov
pop
dec
shl
xor
lods
push
dec
push
inc
push
test
ja
stc
push
rol
pop
mov
mov
rcr
push
mov
or
inc
dec
aam
push
rcr
cmp
jle
adc
push
fiadd
aad
pop
sub
mov
mov
pop
stc
adc
add
pop
imul
aas
loopne
pop
loope
pusha
jb
aas
mov
ror
and
(bad)
jp
xchg
mov
aas
inc
add
or
sbb
cld
popa
(bad)
pop
aam
and
xchg
jno
sahf
in
das
in
xchg
push
push
or
mov
hlt
and
cmp
adc
int3
sbb
and
dec
aaa
adc
mov
xchg
mov
retf
daa
sbb
add
call
add
das
(bad)
sub
adc
call
retf
push
jns
and
jno
xchg
push
sbb
(bad)
(bad)
or
stos
pop
pop
push
(bad)
mov
fnsave
sbb
mov
sub
sbb
int
inc
test
inc
pop
stc
sub
stos
mov
push
rol
xor
xchg
sbb
aad
jmp
pop
sub
push
dec
pop
xchg
xchg
sub
cld
sbb
pop
xor
sahf
shl
mov
or
aad
push
cmp
inc
cmps
push
adc
outs
dec
inc
inc
add
adc
push
aas
xor
retf
aaa
loopne
jno
xchg
mov
into
add
pushf
test
push
retf
jp
les
pop
fs
retf
push
push
mov
mov
inc
cmp
test
dec
xor
rcl
test
test
cli
sub
cs
push
out
imul
sbb
jmp
scas
add
xchg
rcl
and
movs
jmp
stos
push
or
push
mov
das
jle
mov
add
cmps
sbb
dec
icebp
lds
or
or
cmc
fs
stc
mul
cmp
inc
pop
icebp
push
add
(bad)
adc
cmp
stc
xor
pop
mov
pop
jo
xchg
mov
test
sub
mov
lods
repz
adc
addr16
(bad)
aaa
fdivr
jno
jp
jg
(bad)
movlps
cmp
adc
pushf
aas
outs
sbb
mov
cmp
retf
jns
dec
push
and
sahf
inc
sub
pop
popa
in
int3
or
push
add
call
aad
fdivr
push
jno
pop
movs
aaa
adc
mov
std
iret
xchg
pop
pop
stc
push
rol
mov
inc
pop
loope
stc
out
sub
xor
mov
into
xor
mov
out
xor
cs
push
movs
(bad)
pusha
dec
imul
or
and
out
sub
mov
xchg
(bad)
cdq
pop
inc
out
iret
sub
(bad)
push
mov
fiadd
xor
mov
sub
leave
push
push
push
lea
or
icebp
push
lea
and
pop
xchg
pop
push
add
mov
pop
sbb
jmp
mov
pop
cmp
add
movs
push
mov
cli
sub
pushf
shr
pop
jno
add
pushf
mul
lds
push
sbb
das
jae
scas
mov
and
jne
push
adc
jno
mov
fs
dec
pop
dec
aas
mov
fsubr
shl
sbb
xor
cwde
cdq
jne
dec
adc
not
xchg
mov
sbb
mov
imul
arpl
add
jns
ror
mov
and
pop
dec
push
and
mov
adc
or
or
std
push
jns
adc
out
sub
push
or
mov
aad
sbb
jno
xchg
call
lahf
dec
cmp
(bad)
mov
lock
sti
retf
pop
pop
xor
in
mov
sbb
push
sub
or
add
pushw
or
and
int3
movs
mov
sub
sbb
push
push
jns
popa
sub
lds
sub
or
add
ror
fwait
sub
dec
in
push
jns
add
sbb
cmp
pop
add
add
push
iret
lds
inc
call
cli
pop
sbb
dec
jb
fnstcw
push
sbb
or
ror
push
(bad)
mov
leave
test
adc
mov
push
sub
popf
add
sbb
dec
push
imul
mov
sbb
mov
loope
pop
daa
in
cmp
push
sbb
aam
xchg
pop
cwde
ins
icebp
(bad)
test
jecxz
jns
inc
ret
sub
xor
push
cmp
jmp
popf
imul
sub
mov
mov
lea
test
xchg
loope
jmp
sub
or
or
aas
jnp
push
test
sub
addr16
test
test
push
add
inc
retf
mov
loop
inc
pop
or
xchg
add
dec
(bad)
jmp
pop
sub
rcl
pop
mov
cmp
(bad)
push
sbb
xor
xor
loope
mov
sub
pop
movs
cs
mov
pop
rcl
xlat
(bad)
mov
sbb
add
shr
das
mul
push
cdq
push
add
lods
jl
push
mov
data16
leave
adc
pop
jl
fst
rol
iret
rol
mov
xorps
ja
leave
shl
push
or
int3
and
test
clc
jb
and
push
mov
adc
shl
add
inc
mov
push
imul
fs
jmp
jecxz
dec
sub
push
rol
or
push
fstp
add
pandn
jb
add
jae
rcl
data16
push
pop
jp
jle
sub
pop
jne
push
mov
mov
(bad)
daa
mov
xchg
fwait
push
jns
bound
test
cli
dec
dec
ds
stc
push
add
(bad)
xor
pop
cmp
mov
and
aad
pop
jno
lea
jns
popa
cli
sub
pop
scas
sbb
cmp
push
shl
rcl
push
popa
es
mov
leave
push
test
xchg
es
test
mov
or
mov
into
mov
sub
fs
lods
(bad)
adc
dec
jbe
cdq
lods
lahf
aaa
and
movs
jg
cmp
aaa
mov
adc
test
outs
pop
pop
(bad)
fldenv
arpl
loop
cdq
push
mov
add
lahf
fstp
jne
or
and
fcom
pop
xor
iret
cmc
adc
push
mov
mov
mov
jmp
inc
pop
test
test
outs
xor
retf
pop
jno
xchg
jmp
repz
aas
and
sub
mov
sub
cmp
jecxz
imul
dec
js
repnz
inc
cmps
out
push
push
mov
es
jne
push
imul
and
pop
mov
and
inc
pop
adc
add
ins
stc
xor
mov
out
retf
push
imul
enter
lods
mov
ins
cmc
add
push
shr
mov
mov
push
cmp
and
sub
ins
push
jmp
sbb
mov
test
hlt
cmp
test
sbb
push
mov
mov
movs
lds
pop
cmp
test
bound
inc
push
inc
jp
test
mov
xor
jno
sub
adc
retf
or
xor
adc
mov
mov
or
rcl
in
daa
cmps
or
dec
jo
into
pop
sub
jl
jp
or
sbb
aad
sub
fldcw
mov
jns
jl
sub
xchg
mov
cwde
and
inc
scas
test
cmc
push
ss
mov
sahf
jmp
inc
pop
sub
out
lea
sub
jmp
imul
sbb
add
in
aaa
imul
mov
mov
dec
pop
pop
imul
mov
in
or
popa
mov
or
rcr
or
popf
mov
and
call
xchg
xor
fstp
push
and
shl
ret
inc
mov
fs
xchg
outs
out
(bad)
inc
push
push
inc
sub
ret
pop
and
scas
xchg
dec
push
cmp
mov
or
or
xor
sub
cmp
fistp
and
call
out
and
arpl
sub
mov
dec
daa
lock
xchg
in
push
clc
xchg
mov
add
mov
mov
movs
(bad)
push
xor
addr16
or
jnp
jg
scas
cli
cmp
cld
mov
jecxz
loopne
inc
movs
push
inc
mov
mov
jns
xor
mov
push
aaa
icebp
add
mov
mov
sbb
mov
shl
ret
pop
inc
xchg
xor
(bad)
fadd
ja
jo
imul
mov
inc
dec
dec
lods
sbb
inc
fdivr
ror
pop
xchg
mov
mov
pop
inc
(bad)
out
add
ins
sbb
cmp
xchg
ficom
imul
loop
jnp
xor
rcr
mov
push
jp
call
pop
jge
std
and
mov
sub
mov
push
adc
push
(bad)
sahf
imul
shl
pusha
jo
jmp
lods
stc
add
sub
sub
mov
mov
mov
arpl
mov
lods
sbb
ja
sub
loop
xor
ss
fwait
sub
mov
sbb
enter
ror
cs
aaa
scas
retf
sbb
mov
lock
ins
inc
push
add
jnp
jg
ss
fdivr
add
sbb
sbb
lods
push
mov
jb
add
inc
inc
xchg
pop
adc
jmp
sub
sbb
cdq
stos
aad
jno
pop
push
outs
les
adc
xchg
fild
sub
loop
sbb
adc
sbb
inc
pop
int3
ret
cmp
out
push
aam
aaa
cli
sti
add
lahf
or
cs
adc
pop
shl
xchg
cld
icebp
fs
movs
loop
lods
enter
movs
ds
int3
repz
push
lahf
mov
push
shr
(bad)
jno
jg
icebp
gs
shl
pop
in
sbb
jnp
inc
call
pop
and
mov
push
cmp
rol
or
call
pusha
or
dec
fldcw
stc
add
leave
push
call
fild
nop
stc
jge
rol
stc
int
adc
dec
mov
inc
mov
loopne
jo
pop
mov
push
(bad)
pop
cmp
mov
stos
jnp
test
sub
inc
cmc
mov
lahf
retfw
and
ret
jl
add
xchg
or
addps
inc
ins
push
ret
add
fisttp
shl
xor
mov
dec
pop
cmp
xor
(bad)
xchg
mov
test
mov
les
inc
add
pop
mov
xchg
xor
out
dec
fiadd
test
fmul
sbb
stos
aas
sub
xor
sub
outs
int
add
mov
and
jnp
fisub
dec
mov
xor
aad
addr16
cli
jbe
adc
imul
mov
adc
inc
xor
sub
add
adc
pop
xor
pop
or
sub
ss
popf
mov
and
nop
cmp
sti
stos
push
scas
jbe
aaa
push
aas
fnstsw
xchg
daa
adc
inc
popf
pop
repz
mov
bound
out
or
xchg
icebp
mov
mov
jge
cmp
and
sub
adc
dec
sbb
iret
adc
push
or
pop
jmp
cmps
shr
inc
sub
imul
aam
fadd
pop
or
push
xor
(bad)
pushf
stos
retf
pop
mov
inc
fs
jns
and
scas
jecxz
retf
add
xor
adc
xchg
sbb
shr
sub
adc
cmp
cdq
sub
jge
imul
sub
cmp
in
bound
gs
pop
(bad)
mov
leave
xor
addr16
mov
fbstp
mov
sar
dec
xor
pushf
add
mov
lock
push
mov
jp
sbb
addr16
pop
retf
xor
fwait
clc
loope
mov
test
push
xor
scas
inc
and
sub
(bad)
push
adc
inc
loope
push
rol
pop
or
mov
and
ins
das
push
inc
push
cmp
std
nop
push
sub
cmp
(bad)
imul
push
push
cmp
enter
mov
add
repnz
dec
pop
test
xor
imul
or
xchg
xor
sub
fwait
inc
lea
dec
mov
jl
test
xchg
mov
sub
mov
sbb
(bad)
(bad)
mov
stos
push
jnp
sub
xchg
xor
ss
push
data16
inc
or
mov
fild
fild
pop
ss
cwde
dec
pop
aam
jb
je
push
sbb
loopne
pop
(bad)
xor
and
or
pop
pop
dec
fwait
and
popa
pop
xchg
(bad)
cs
cs
mov
xchg
in
dec
leave
mov
inc
movzx
jo
rcl
xchg
mov
adc
lods
fld
mov
pop
mov
xchg
jne
clc
in
mov
cmp
call
xchg
lods
xchg
mov
fbstp
add
movs
sub
xchg
xor
push
pop
add
adc
cmp
fimul
ins
rcl
je
lods
fwait
rcl
sahf
test
inc
sbb
in
clc
(bad)
xchg
outs
das
push
lds
sub
int
arpl
sbb
sbb
add
sub
mov
jns
cmp
pop
dec
ins
xchg
xchg
pop
stos
and
pop
loop
lods
push
pop
repz
hlt
sbb
mov
fcom
push
outs
xor
lahf
sbb
sbb
mov
fstp
sub
dec
lds
pop
pop
add
sub
leave
repnz
lahf
xor
mov
in
xchg
cdq
xchg
fistp
test
pop
in
sub
aas
inc
and
adc
fidivr
inc
dec
dec
fstp
mov
push
mov
fiadd
cmp
sbb
sbb
xchg
and
aaa
adc
and
ins
shl
in
jns
fsubr
dec
pop
scas
jb
jnp
fs
out
sub
ret
adc
fcomp
or
cli
into
ins
mov
test
fld
xchg
cmp
dec
stc
loopne
scas
aas
and
(bad)
out
pop
in
sub
test
rcr
outs
test
pop
fstp
dec
pop
lods
ja
or
mov
test
mov
inc
mov
jge
cmc
mov
pop
xchg
out
inc
xor
or
push
test
pop
rol
in
gs
dec
lods
sub
dec
and
push
call
imul
icebp
bound
jb
dec
pusha
mov
push
cmp
loop
add
push
add
jecxz
adc
jl
pop
sbb
pop
pop
pop
inc
or
jmp
dec
call
(bad)
ret
in
xor
inc
mov
push
sub
jns
or
in
xor
test
inc
xor
and
push
jbe
inc
gs
(bad)
pop
add
xor
mov
jbe
mov
cdq
scas
aam
sbb
inc
xchg
clc
or
scas
xchg
add
mov
dec
mov
push
movs
xor
dec
and
xchg
xlat
pop
sbb
xor
sub
into
xchg
inc
xchg
jle
or
sbb
add
(bad)
gs
out
push
lods
push
xchg
hlt
xor
or
dec
cs
sti
sub
jb
mov
div
cmp
pop
adc
cmc
jmp
and
dec
gs
or
icebp
test
fld
outs
sbb
test
jb
jecxz
pop
(bad)
jmp
cmps
push
ja
sub
out
idiv
xchg
add
sbb
push
dec
popf
pop
popf
push
lea
ins
sbb
pop
loop
loop
out
cmps
dec
mov
pop
or
push
mov
add
cld
sbb
cdq
pop
jae
mov
dec
mov
inc
xchg
cli
stc
lods
dec
ins
movs
rol
sbb
mov
or
pop
pop
jmp
fistp
push
inc
fcmovnu
xor
xchg
scas
inc
out
jo
loope
mov
cmp
mov
fmulp
push
ror
sbb
jle
jmp
ins
and
xchg
retf
or
pop
retf
cmc
or
mov
jo
in
enter
jmp
jbe
mov
dec
js
or
sub
mov
int
jg
pop
shl
sbb
pop
mov
das
adc
je
cmp
inc
aam
sbb
push
and
adc
push
lock
add
mov
dec
or
(bad)
dec
adc
adc
sub
jne
aad
pop
mov
xor
pop
xchg
push
jns
lea
lds
xlat
test
je
add
cmp
jns
movs
cmps
out
fisub
retf
cmps
jecxz
pop
fist
inc
push
push
dec
mov
push
and
mov
cmc
arpl
pop
shl
and
repz
sbb
or
scas
lods
and
jns
pop
scas
scas
and
pop
ins
popa
out
push
sub
and
test
dec
gs
and
xlat
push
test
push
cs
out
dec
shl
lods
sub
jne
pop
rcl
mov
cmps
pop
inc
xor
stc
jns
or
mov
ins
js
ins
pop
or
mov
ja
mov
adc
fisubr
push
and
xchg
aad
les
imul
pop
dec
inc
inc
popa
jb
bound
popf
add
adc
xchg
ja
mov
mov
add
cmp
or
and
mov
push
test
ins
retf
pop
mov
fnstenv
add
std
or
movs
push
(bad)
dec
xlat
sbb
sbb
icebp
or
add
enter
mov
fld
pop
jns
popf
push
sbb
fcomp
push
retf
mov
fld
push
dec
jb
adc
aas
movs
lea
pop
mov
pusha
mov
(bad)
and
shr
and
sbb
loope
ds
lods
inc
pop
aad
push
pop
pop
(bad)
aaa
adc
dec
int
push
fmul
jb
mov
pushf
cmps
mov
imul
cs
and
dec
push
stos
or
in
inc
aad
or
sbb
mov
loopne
mov
push
loop
(bad)
mul
pop
pop
push
adc
xor
add
adc
and
fsubr
aam
push
add
scas
cmps
lds
fucom
(bad)
mov
cwde
xor
pop
xchg
ror
outs
or
mov
xor
sub
popf
and
cmc
sbb
arpl
ss
mov
pop
sub
jp
jo
xchg
xrelease
bound
adc
xchg
fisttp
rcl
and
mov
data16
rcl
sbb
stc
sahf
test
mov
icebp
push
mov
or
xor
jp
sbb
pop
dec
int
pop
sbb
loope
or
ins
fcomp
rcl
mov
mov
(bad)
mov
fadd
xchg
ins
push
push
dec
push
shr
or
pop
mov
cwde
inc
dec
xchg
jge
inc
mov
or
into
movs
add
cmps
pop
adc
adc
mov
sti
mov
add
dec
rol
ss
popa
daa
pop
mov
push
push
mov
daa
fdivr
test
mov
push
cmp
mov
pop
cli
xchg
jle
and
xor
cmc
add
push
loope
or
movs
cmps
lds
sbb
sub
push
or
call
into
and
and
xchg
repz
push
sub
dec
movs
inc
ror
pop
mov
jns
mov
movs
xchg
push
pop
pop
push
cmc
jp
sbb
clc
and
cmps
xchg
and
leave
or
leave
inc
push
pop
cmp
sbb
les
fimul
or
mov
and
sbb
jne
jle
sbb
add
mov
lds
dec
adc
gs
add
lock
jl
and
xor
cmp
push
pop
jns
leave
(bad)
shr
inc
mov
or
xchg
lea
mov
or
shl
adc
outs
in
jp
icebp
and
xor
dec
adc
jmp
cmp
cdq
or
push
or
and
pop
dec
(bad)
mov
jge
mov
fisttp
xchg
xor
pop
pop
pop
jno
mov
mov
xlat
xor
jae
cld
pcmpgtw
loope
std
jb
std
std
xchg
mov
jecxz
outs
mov
arpl
enter
fcom
call
xlat
fisttp
cld
mov
call
mov
add
xor
rcr
inc
adc
mov
cmp
or
popa
push
or
inc
arpl
dec
push
fild
jne
push
mov
push
mov
jne
je
in
push
pop
mov
dec
cmp
ins
or
pop
add
mov
stos
mov
inc
or
and
out
xchg
or
push
arpl
ss
push
(bad)
ror
mov
sub
in
xor
mov
and
cmp
aaa
addr16
out
xchg
in
pop
ins
or
jmp
push
and
adc
mov
jno
rcr
fsubr
loope
inc
js
push
jp
mov
and
ret
in
push
(bad)
lea
pop
pop
sub
sub
push
lahf
jle
add
or
daa
in
clc
mov
fist
lahf
jns
ror
repnz
pop
mov
pop
cmps
add
aam
lds
add
mov
jae
inc
inc
sbb
mov
cmp
jb
xor
push
shl
sbb
or
dec
mov
fdivr
inc
and
mov
jb
std
push
jno
or
and
cmp
push
or
cmp
push
or
popa
daa
xchg
shr
xor
sbb
jl
jbe
fidiv
xlat
test
jo
xor
adc
mov
popa
sahf
mov
sub
icebp
(bad)
mov
mov
daa
int3
inc
mov
(bad)
or
bt
jl
dec
xor
mov
mov
dec
scas
outs
jecxz
fistp
cdq
call
out
jl
sar
adc
jo
push
and
(bad)
jecxz
cmovns
js
push
mov
cld
add
mov
idiv
dec
rcl
test
inc
cwde
sbb
mov
push
or
cmps
aas
rcr
pop
inc
or
mov
jmp
push
sbb
pfadd
xchg
icebp
adc
push
imul
lods
ds
inc
imul
data16
sbb
nop
and
dec
xor
push
or
jmp
ja
mov
dec
pop
fldcw
ja
jp
mov
adc
cmp
in
pop
jb
sub
dec
xchg
daa
in
adc
adc
xchg
dec
es
cmp
jno
or
cmps
xchg
sub
jb
mov
outs
push
add
mov
or
and
mov
or
nop
aad
jge
(bad)
xlat
ret
sub
adc
inc
inc
pop
xor
mov
out
sbb
jmp
push
mov
push
xor
xor
push
or
in
pop
mov
outs
aad
mov
cmp
add
daa
cli
aad
push
xor
pop
scas
mov
out
mov
fsubr
dec
rcl
pop
and
push
sub
and
fsubr
rol
(bad)
out
adc
mov
or
mov
fbstp
mov
dec
cdq
mov
inc
mov
stos
movs
xor
xor
sti
aam
or
mov
fcomp
cdq
sbb
in
test
(bad)
jmp
or
mov
dec
jo
fild
lods
xlat
int
and
ret
cmps
jmp
sbb
fcmovne
rol
cmp
push
add
xchg
push
push
xchg
xchg
fucom
xlat
mov
movs
lea
imul
mov
pop
jno
jns
mov
test
ins
scas
jno
mov
or
pop
jg
xchg
ror
adc
xor
add
in
je
mov
dec
and
aaa
ds
pop
lds
xchg
scas
mov
(bad)
cvtps2pd
mov
mov
mov
or
dec
out
fwait
push
mov
dec
and
or
and
mov
inc
ss
sub
sbb
adc
sub
adc
fistp
mov
pinsrw
pop
adc
std
cmp
push
xor
lods
loopne
ror
mov
iret
lds
(bad)
leave
push
popa
outs
mov
ss
jmp
pop
ja
push
movs
movs
pop
loope
cmp
or
pop
ret
inc
sbb
popa
aam
inc
(bad)
mov
pop
mov
adc
add
int
fcomp
xchg
cmc
jnp
cmp
pop
fst
sbb
mov
mov
sbb
(bad)
or
les
add
or
pop
and
stc
lea
mov
fyl2xp1
push
call
in
mov
std
dec
aam
and
mov
pop
ins
cdq
pushf
enter
lods
pop
shl
paddq
xchg
or
cld
cmp
pop
jmp
jge
adc
lea
psrlw
xor
cmps
imul
xchg
enter
popa
cmp
sub
bnd
stc
xor
pop
pop
xor
add
adc
icebp
inc
mov
mov
mov
pop
into
cli
imul
aas
push
into
mov
loop
movs
pop
sar
ficom
jb
xor
xor
(bad)
pop
sbb
bound
popa
push
mov
pop
nop
in
test
enter
mov
pop
fmulp
fstp
jns
imul
mov
pop
mov
pop
jns
or
(bad)
(bad)
jne
cmp
movs
push
popf
out
inc
sub
fnstcw
mov
jbe
test
imul
fcomp
mov
xor
xor
lahf
int3
das
dec
inc
mov
jno
sahf
mov
jl
sbb
add
pop
or
movs
pop
cli
or
xor
and
fiadd
ror
mov
popf
fs
cmp
or
sbb
retf
in
leave
ret
fidiv
or
mov
push
jle
jnp
dec
loop
and
mov
fmulp
mov
iret
leave
call
das
or
pop
jo
and
scas
cvtps2pd
test
fbstp
movs
mov
mov
int3
pop
pop
sbb
jb
mov
inc
push
mov
popa
dec
adc
pop
pop
or
test
lock
or
lods
cmp
lods
sar
push
rcl
int
inc
xchg
sbb
ror
sub
mov
or
test
push
into
les
popa
(bad)
xlat
mov
and
sbb
push
stc
mov
xlat
pop
lods
jle
or
sti
shl
jecxz
sub
dec
push
inc
mov
push
aam
cmp
loop
cwde
popf
xor
add
(bad)
(bad)
adc
jecxz
xchg
test
and
retf
mov
jne
cli
inc
outs
shl
mov
pop
arpl
add
inc
mov
adc
add
out
movzx
add
js
xchg
mov
movs
push
dec
dec
ficomp
shl
mov
jmp
jb
xchg
xchg
arpl
in
lods
fld
mov
scas
sbb
inc
mov
adc
rcl
pusha
jbe
mov
(bad)
sub
mov
rcl
fsubp
cmp
add
dec
dec
bound
lds
iret
(bad)
cmp
in
gs
ret
iret
dec
jns
scas
cmp
pushf
lea
and
sbb
mov
push
dec
pop
out
stos
fsub
mov
cs
dec
lods
add
fst
or
pop
aad
mov
das
imul
and
or
cmp
or
or
jae
inc
sbb
mov
jle
mov
xor
aad
ja
add
mov
sub
daa
xor
xor
dec
lahf
lods
(bad)
xchg
adc
in
repnz
rcl
dec
push
pop
mov
movs
icebp
push
mov
pop
dec
repnz
rol
cmp
push
cmc
push
sar
sbb
fld
jg
mov
test
mov
data16
cmp
push
or
sbb
sub
inc
dec
movs
push
sbb
add
and
push
mov
aas
pop
fwait
mov
ins
push
cwde
push
addr16
inc
imul
sbb
push
pop
sbb
ds
call
inc
and
test
loopne
add
outs
or
jae
popa
jecxz
adc
stos
(bad)
fmul
jg
out
add
jnp
sub
lea
mov
jl
mov
and
imul
mov
add
sub
je
int3
sbb
adc
cmp
xor
fisubr
ds
sbb
data16
in
push
jecxz
or
rcl
pusha
adc
ficomp
lods
les
inc
mov
je
es
push
jle
in
leave
xchg
mov
inc
sahf
cmp
or
xor
enter
cdq
add
sbb
push
or
pop
or
and
adc
push
leave
int
xor
dec
das
cs
push
dec
dec
retf
adc
mov
mov
inc
icebp
push
cmps
sbb
hlt
pusha
mov
rcr
fwait
cmc
sbb
mov
cwde
fcom
into
hlt
add
push
aam
jg
mov
(bad)
ja
jmp
or
add
pop
pop
and
xchg
jb
lock
(bad)
push
push
dec
ficom
inc
sbb
das
jg
jns
push
jo
nop
hlt
ficomp
pop
loopne
mov
stc
es
push
sub
sub
cmp
inc
js
cmp
jb
adc
xchg
adc
sbb
in
ds
dec
lea
fs
xchg
or
xchg
mov
push
xchg
arpl
fmul
loop
dec
dec
mov
arpl
es
cmp
js
jl
dec
ins
jecxz
retf
aad
js
popf
and
sbb
int
xchg
aaa
shl
pop
retf
or
push
pop
mov
(bad)
outs
icebp
add
rcl
adc
pop
or
jg
iret
popa
mov
add
movs
fild
add
shl
and
xchg
je
dec
fdivr
or
mov
dec
push
or
jg
(bad)
cdq
shl
lods
sbb
bound
aad
dec
int
pop
dec
dec
jp
push
retf
sahf
adc
ret
(bad)
jp
inc
nop
mov
movs
xor
(bad)
adc
adc
adc
jns
adc
shr
pop
push
lea
dec
mov
addr16
xor
xchg
sahf
lods
mov
sbb
mov
loop
(bad)
popa
and
pop
aad
dec
push
hlt
cmp
mov
and
push
mov
retf
ja
mov
adc
fwait
jno
sahf
mov
(bad)
in
std
sbb
cmc
sub
adc
jno
inc
cmp
test
pop
jns
dec
pop
inc
fimul
pop
std
mov
data16
fwait
imul
inc
cld
pop
xchg
pusha
and
xor
lds
jnp
adc
(bad)
mov
xchg
add
jle
iret
cld
xchg
pushf
mov
fsubp
add
add
xor
popa
cmc
mov
push
xchg
jae
scas
adc
cmp
dec
daa
cli
jl
jae
mov
je
push
inc
int
cmp
lods
jmp
in
push
add
xchg
mov
and
adc
jno
and
dec
sub
mul
outs
cmc
xor
js
push
adc
jmp
dec
fcmovbe
stos
retf
sbb
xchg
dec
mov
pop
out
mov
dec
mov
dec
inc
jno
lea
cmp
mov
std
cmps
push
js
cs
gs
popa
arpl
or
mov
out
fild
sub
cmp
push
mov
jle
or
push
out
(bad)
enter
std
mov
dec
mov
test
cwde
pop
jnp
sub
or
sbb
fs
xlat
mov
loope
fwait
xchg
xor
mov
push
(bad)
xor
push
sub
sbb
pop
add
enter
mov
jmp
int3
sbb
inc
test
jnp
xchg
ret
loopne
sar
fcomp
lods
sub
adc
adc
jns
pop
push
fwait
lods
iret
add
loop
mov
je
mov
outs
pop
dec
cmp
dec
ror
mov
and
jg
imul
repnz
popf
loope
test
rcr
xchg
test
push
clc
lods
and
mov
(bad)
ret
movs
ror
movs
inc
(bad)
movs
sub
aam
jbe
xchg
dec
add
fadd
push
leave
mov
push
jae
aas
not
cld
xchg
fmul
and
push
rcl
push
test
rcr
fsubr
pop
mov
cwde
jbe
ins
adc
jno
imul
push
aad
dec
lea
xor
pop
xchg
jno
fstp
jmp
cmp
or
stos
icebp
aas
test
and
in
jne
sub
jnp
xchg
rol
and
adc
dec
out
es
dec
xlat
mov
pusha
inc
sbb
cmp
mov
inc
push
frstor
mov
(bad)
lock
xchg
xchg
popf
(bad)
lods
push
(bad)
and
inc
cwde
ins
not
fwait
(bad)
jmp
or
outs
or
sub
les
xchg
or
lds
dec
test
scas
or
sti
xchg
stos
dec
mov
aas
fadd
ror
pop
mov
shl
inc
addr16
cmp
cmps
mov
rcr
dec
not
mov
daa
test
lock
test
adc
push
cmp
das
jo
push
xor
mov
pop
jl
dec
dec
ins
ror
ins
(bad)
sbb
sbb
(bad)
dec
div
iret
ret
xchg
mov
jb
jb
dec
or
push
(bad)
fucomp
test
sbb
inc
jb
cmc
and
jge
sahf
es
ficomp
push
sub
push
popa
es
loope
dec
pop
dec
xchg
or
aas
and
cwde
cmp
out
vxorps
cmp
adc
inc
or
sahf
or
sub
mov
xchg
out
xchg
stc
sub
inc
in
ja
sub
sbb
pop
add
fisub
cmp
test
imul
adc
sbb
mov
retf
adc
xchg
icebp
or
test
pusha
pop
push
push
imul
bound
(bad)
push
stos
lock
pop
nop
fcom
push
or
mov
call
repnz
(bad)
mov
add
sbb
push
inc
popf
dec
and
leave
push
jne
mov
pop
fwait
std
adc
retf
and
adc
or
inc
and
push
dec
nop
pop
sbb
and
inc
mov
pop
popf
int
inc
dec
gs
xchg
adc
inc
cmp
leave
xor
in
icebp
inc
or
std
ins
inc
retf
lea
leave
ror
fcmovnb
lds
inc
push
mov
push
adc
add
add
jl
inc
mov
or
dec
xlat
lock
jno
push
lods
adc
out
or
jne
pop
dec
adc
ret
xor
pop
xchg
add
inc
mov
xor
cmp
pop
mov
mov
lea
mov
mov
push
cdq
arpl
outs
mov
sbb
dec
pop
in
sub
adc
out
les
sbb
into
inc
loopne
xchg
or
xor
pop
ret
pop
lahf
adc
pop
fld
jge
cmp
inc
mov
scas
outs
test
sub
add
ja
lods
cld
sbb
sahf
mov
sub
fsub
sti
pushf
test
pop
jge
das
inc
enter
pushf
rcr
pushf
scas
in
lfs
(bad)
fcomp
push
in
sahf
add
jmp
test
jmp
jb
lods
push
dec
lods
jmp
cmp
pop
aam
pop
(bad)
jl
fisubr
jno
inc
xchg
mov
pop
aad
add
and
pop
xor
int
popa
(bad)
cmps
repz
imul
push
sahf
rcl
bound
mov
punpcklwd
lods
push
jl
hlt
mov
or
push
push
pop
mov
sahf
xchg
pop
lods
inc
or
fwait
sahf
test
and
xchg
imul
xor
push
or
jmp
sbb
pop
push
sbb
and
dec
scas
mov
jge
inc
mov
inc
and
test
push
loope
int
pusha
retf
imul
cmp
or
(bad)
mov
push
int
enter
or
cmp
enter
cwde
cmc
ficomp
adc
mov
mov
inc
or
and
push
xchg
sbb
ret
nop
aaa
mov
outs
(bad)
sbb
in
jno
mov
fild
in
into
or
add
mov
cmp
es
dec
scas
imul
push
mov
outs
lahf
std
outs
push
popa
add
mov
cwde
mov
push
aad
push
or
mov
(bad)
add
sub
adc
mov
sub
mov
js
pop
pusha
div
xlat
in
mov
int3
test
xchg
add
jecxz
mov
sahf
cmc
(bad)
sub
enter
fwait
jmp
dec
pop
ret
push
and
jne
pushf
jo
enter
loope
test
dec
sbb
add
nop
sbb
mov
retf
inc
and
cmc
xor
inc
add
pop
mov
and
jb
xchg
mov
push
mov
aas
scas
add
sbb
cmps
add
jnp
fs
jne
lds
lahf
xchg
inc
mov
js
jl
adc
xchg
jne
scas
cld
pop
inc
pop
jmp
jnp
mov
add
(bad)
or
iret
mov
(bad)
push
sub
or
or
cmps
pop
pushf
(bad)
lea
mov
sbb
or
and
cmp
or
and
sbb
or
add
rcr
pop
xchg
cmc
push
ins
mov
fisubr
sbb
sti
sub
lahf
test
ins
jp
popa
and
sbb
mov
sbb
add
ja
std
das
fist
cmp
sbb
imul
add
xchg
mov
in
ins
mov
pop
sti
fimul
pop
mov
adc
inc
dec
out
hlt
ret
fcmovnu
std
dec
mov
jo
dec
repz
or
lods
adc
jno
mov
lds
stc
or
imul
retf
and
aam
call
push
push
push
out
inc
dec
jg
pop
cld
and
mov
in
lea
xchg
dec
int3
lock
pop
push
(bad)
loope
in
enter
mov
add
ret
mov
mov
sbb
sub
pop
ins
mov
(bad)
mov
jnp
jge
pop
pop
xchg
fs
retf
addr16
xchg
add
jge
or
imul
icebp
aas
push
ins
adc
cs
js
aad
jns
sbb
jne
into
mov
xchg
sub
cmp
pop
xchg
cmp
push
xor
je
int
popf
sub
mov
inc
ja
push
cmovo
ds
or
dec
aad
jmp
xchg
pop
popa
aam
jl
jbe
in
cmp
lds
je
fild
push
sahf
lods
or
add
inc
loope
hlt
(bad)
std
sahf
jno
(bad)
dec
loope
test
cmp
lahf
fidiv
dec
jl
fmul
xchg
inc
mov
retf
xchg
xor
cmps
add
(bad)
cmp
push
lods
clc
push
adc
jmp
jns
retf
ins
xchg
inc
cmp
push
jae
ret
dec
outs
pushf
rcr
xor
adc
add
lock
xchg
aam
push
enter
xchg
or
mov
dec
jne
mov
out
out
ins
add
jbe
and
push
push
mov
shr
ss
or
nop
mov
xchg
dec
ss
add
xor
fdivr
leave
mov
push
pop
sbb
or
push
add
rol
xchg
or
jg
loopne
push
mov
jno
push
inc
or
sub
imul
jnp
aas
mov
pop
aad
enter
mov
aam
push
mov
enter
cwde
icebp
cmp
mov
test
or
xchg
and
cdq
jge
cmp
push
jnp
lds
add
jp
aas
xchg
test
mov
mov
sbb
cmp
jbe
push
cmps
xchg
mov
xchg
dec
dec
or
imul
(bad)
aam
xchg
fld
pop
test
sub
push
or
dec
and
es
mov
cmpps
clc
mov
and
scas
jns
ficom
xchg
outs
dec
sti
loopne
lahf
aad
popf
cmc
aam
dec
aam
mov
iret
int
lods
push
mov
and
rcl
clc
jecxz
imul
sub
xlat
pushf
popa
mov
cmps
cmp
mov
pop
inc
xchg
cdq
inc
retf
jae
je
cmp
push
(bad)
jle
dec
and
lds
add
jp
jl
lds
mov
and
aam
inc
ret
mov
js
dec
mov
mov
and
mov
adc
cwde
pop
inc
sub
mov
jg
and
sub
(bad)
jp
mov
push
push
das
push
iret
dec
and
mov
mov
jae
lahf
movs
test
sbb
mov
jne
pop
jp
inc
and
mov
xlat
sub
mov
sub
inc
aad
dec
or
push
mov
sti
push
enter
mov
mov
push
mov
sub
dec
jne
xlat
movs
jmp
jmp
dec
call
push
shl
push
ret
inc
daa
mov
fwait
and
and
loope
xor
jnp
ja
mov
xlat
sub
shl
mov
jne
mov
or
inc
int
loopne
xor
adc
dec
ja
xchg
fucomp
les
push
push
shl
cmp
jge
lahf
pop
outs
inc
mov
shl
movs
or
mov
sub
mov
mov
popa
push
imul
mov
cmp
add
xchg
popa
mov
add
push
mov
or
fidivr
xchg
inc
outs
mov
push
xor
dec
int
leave
pop
and
mov
add
and
inc
clc
sbb
(bad)
sub
mov
fbld
movs
dec
pop
mov
pop
cmp
dec
sbb
xor
lods
or
mov
xchg
lea
add
pop
lahf
xor
sahf
scas
xchg
and
jo
in
stc
fdivp
shr
jne
inc
inc
out
ret
xor
popf
pop
fld
pop
and
icebp
adc
pop
xchg
jge
mov
or
cmc
adc
jle
jg
add
sbb
data16
push
lahf
fnstsw
jl
movs
and
rcr
mov
jnp
mov
dec
jp
jl
cmc
xor
pop
inc
sub
lahf
adc
mov
cdq
and
(bad)
mov
out
dec
movs
cli
add
mov
dec
lods
int
cmp
jne
xor
cmp
add
dec
mov
cmps
cmp
ja
xor
sbb
jne
mov
xor
enter
xchg
mov
or
cmp
sub
xor
cs
and
fst
mov
or
int
jo
inc
in
mov
push
push
jle
inc
mov
pop
cdq
xchg
or
jmp
xor
xchg
push
xor
cmp
xor
daa
xchg
shr
mov
and
popf
adc
inc
or
clc
xchg
fnstenv
out
fcmovb
inc
mov
or
das
and
mov
pop
pop
adc
dec
mov
sub
or
mov
enter
in
cdq
inc
das
dec
jmp
push
xchg
dec
outs
push
adc
mov
fst
sbb
in
cmp
fwait
xor
push
push
push
popa
call
push
call
retf
dec
pusha
aas
nop
jns
nop
or
jb
dec
bound
mov
xchg
cmp
mov
movs
xor
mov
push
lahf
pop
das
(bad)
push
xchg
lea
or
cmps
cwde
frndint
cmp
sahf
and
push
push
in
retf
xchg
mov
or
cdq
pop
popa
inc
dec
inc
sbb
pop
mov
dec
and
xor
test
leave
das
add
mov
es
mov
test
ret
jb
mov
lahf
lods
in
push
xchg
sub
xchg
and
push
mov
aaa
pop
mov
sbb
imul
shl
out
mov
test
push
xchg
adc
fst
xchg
ins
and
xchg
cmps
inc
pop
(bad)
mov
js
fdivp
test
or
adc
or
int3
aas
mov
mov
leave
ret
add
cmp
adc
cld
test
dec
inc
icebp
sti
cmp
das
jne
rcl
icebp
hlt
add
inc
sbb
jae
aad
(bad)
fiadd
in
inc
test
movs
clc
sbb
inc
mov
jle
aaa
cld
aad
or
or
pushf
test
inc
xor
sti
fild
mov
ins
in
sbb
data16
out
jecxz
rol
mov
xor
cmp
add
ret
sbb
sti
aam
push
ins
(bad)
arpl
mov
mov
add
add
sbb
sbb
daa
inc
mov
bound
xchg
sbb
push
and
ja
(bad)
push
pop
(bad)
xchg
pop
in
sbb
int
inc
add
(bad)
ins
dec
test
cmp
pop
pop
test
mov
ja
cmp
fild
hlt
cmp
ins
lahf
mov
rol
mov
(bad)
fwait
(bad)
cmp
cli
mov
jbe
jmp
xchg
out
das
pop
inc
scas
cmp
mov
jae
(bad)
pop
lods
add
adc
ret
jmp
xchg
scas
popf
jnp
aas
(bad)
jae
sahf
sbb
fcmovne
pop
xor
adc
mov
popa
mov
fst
sbb
jp
(bad)
(bad)
sbb
mov
rcl
push
pop
push
dec
cmp
enter
pcmpeqb
aas
lds
ds
fsubr
mov
movs
pushf
ins
mov
inc
clc
xchg
add
into
dec
test
mov
(bad)
imul
call
(bad)
loopne
inc
arpl
dec
pop
xor
outs
pop
mov
rcl
xor
popf
fld
and
add
mov
pushf
hlt
movs
push
jno
mov
test
xor
sub
push
push
test
out
lods
popf
das
jmp
jg
stc
dec
sar
jge
pop
loop
and
cmp
push
fnstenv
in
movs
(bad)
rep
mov
popaw
out
fcmovnb
dec
jno
sar
retf
xchg
mov
sub
and
pop
mov
mov
int3
and
and
and
sbb
pop
(bad)
pushf
sub
or
ret
aas
push
jb
loopne
hlt
and
sub
outs
jo
jb
scas
cmp
jmp
xchg
popa
into
int
xor
mov
pop
mov
aas
pop
pop
cs
aas
add
mov
pop
and
jmp
ret
inc
mov
dec
xor
xchg
cmps
sar
in
dec
adc
neg
inc
aaa
mov
gs
and
xchg
and
or
dec
mov
enter
retf
jl
sbb
cmc
aaa
dec
xchg
fs
dec
scas
dec
and
jmp
ins
retf
retf
push
push
or
adc
adc
mov
sub
in
dec
xchg
cdq
jae
cmovle
sbb
push
rcr
idiv
ror
mov
inc
sahf
dec
mov
movs
sar
popf
iret
pop
mov
add
sbb
int
sbb
icebp
add
cmp
ror
fstp
jp
jno
fisttp
pusha
imul
adc
pop
xchg
aad
adc
xchg
nop
or
inc
pop
retf
jmp
ret
push
jne
or
stos
mov
call
xor
aaa
xor
cwde
test
rcl
sbb
mov
xchg
add
xchg
lock
syscall
cdq
xlat
pop
and
fcmove
or
add
mov
cmp
sbb
leave
stos
out
mov
aaa
test
popa
fsub
shl
push
daa
lods
inc
and
ins
cmc
push
add
xchg
jb
sub
dec
repnz
push
sub
idiv
adc
dec
dec
xchg
and
mov
jns
pop
dec
pop
sub
xchg
mov
jb
pop
mov
dec
repz
push
push
xchg
sub
popa
adc
add
ss
pop
retf
xchg
enter
adc
push
out
(bad)
fs
xchg
sub
loopne
data16
pop
in
push
sub
aam
jg
push
cmp
dec
pop
fldcw
je
out
inc
call
aad
pop
cwde
mov
pop
outs
inc
add
xor
imul
push
pop
dec
pop
and
mov
scas
mov
scas
(bad)
cwde
out
test
int3
mov
adc
ins
xor
adc
jg
adc
and
fdivr
(bad)
movs
xor
cmp
mov
je
push
inc
xchg
ja
dec
fbstp
lea
lahf
mov
pop
adc
cld
sahf
push
sbb
std
das
or
test
xor
push
push
out
enter
sub
(bad)
or
popa
data16
sub
loope
xchg
xchg
sbb
dec
clc
cmps
rcr
jmp
aas
repz
push
add
cdq
ror
and
dec
ror
std
mov
or
fsub
dec
in
jmp
ins
sub
sub
imul
inc
push
adc
dec
sbb
lds
adc
and
gs
inc
rcr
push
mov
loope
call
cmp
call
add
retf
(bad)
out
std
adc
push
pop
push
int
xor
or
add
ret
sbb
lds
aas
mov
test
popf
retf
mov
jl
cli
adc
test
cs
leave
rcr
and
add
push
(bad)
jmp
pop
ret
dec
jmp
packsswb
sbb
lods
mov
and
and
adc
out
jno
cmc
mov
in
popa
add
daa
jno
mov
enter
mov
retf
pop
icebp
mov
(bad)
cmp
inc
test
das
dec
arpl
xor
add
(bad)
push
jmp
addr16
dec
jnp
or
xchg
sahf
pusha
jge
pop
loop
icebp
mov
push
jp
lods
inc
retf
aam
ins
cmp
xlat
add
pop
cmp
pop
mov
mov
xchg
mov
(bad)
cmp
das
inc
inc
mov
jae
adc
adc
mov
and
jne
imul
dec
or
mov
pop
jae
loop
mov
sub
adc
pop
mov
sar
stos
or
pop
xchg
dec
movs
xor
dec
adc
repz
enter
dec
fiadd
stc
cmp
xor
popa
aas
in
jle
sub
inc
popa
popf
das
jmp
push
lea
(bad)
fmul
xor
inc
std
xchg
mov
fnsave
std
and
div
and
test
aam
inc
adc
jp
cdq
sar
repnz
sar
jmp
push
call
ffreep
xor
and
and
sub
pop
push
cmp
xchg
ins
stc
fild
jecxz
jle
pop
das
pop
pop
int3
lds
into
push
inc
jns
aas
bound
sbb
adc
pop
into
into
sub
outs
(bad)
xchg
into
or
dec
cmp
xchg
jmp
mov
pop
lahf
hlt
aaa
dec
pop
div
jp
rol
cmps
test
fwait
(bad)
mov
or
stos
ficom
stc
jecxz
outs
lds
inc
or
dec
jge
xchg
adc
sub
ja
dec
pop
jle
retf
imul
push
ins
sar
(bad)
not
popf
and
lahf
test
sbb
popf
fimul
mov
pop
aaa
adc
push
mov
pop
jmp
lods
movs
sub
test
cmps
movs
adc
mov
cmc
cmps
shr
rcl
xchg
ss
or
repnz
out
push
mov
data16
or
jge
int
pop
mov
movs
(bad)
std
pop
and
js
adc
adc
push
nop
push
test
dec
jb
push
test
popf
xchg
movs
loop
mov
xor
push
loope
cld
push
push
pop
mov
sub
cmp
out
inc
lahf
sbb
inc
mov
add
dec
in
xchg
sub
xor
rol
cmc
icebp
push
imul
jle
adc
mov
jge
xor
int3
data16
aas
push
test
push
sub
add
or
xchg
xchg
pop
cmps
ror
or
mov
sub
lods
adc
ret
inc
cmp
mov
stc
test
xchg
pop
pop
inc
jae
adc
xlat
and
mov
push
jecxz
leave
ins
rcl
xchg
inc
xlat
lods
outs
jge
test
jmp
(bad)
xchg
das
cmp
inc
aam
dec
dec
dec
and
mov
lahf
adc
mov
outs
test
sub
cvtdq2ps
add
repz
test
xchg
cmp
in
daa
inc
sub
add
mov
xor
mov
pushf
(bad)
cmc
inc
pop
sub
sub
xor
pusha
call
xor
inc
loopne
iret
jae
outs
ds
sbb
sub
and
pop
shr
inc
call
and
pop
add
(bad)
fdiv
mov
add
fst
push
leave
push
jecxz
add
push
jmp
mov
xchg
push
push
sub
out
ret
pusha
fisttp
aam
cs
imul
cmp
pop
push
mov
mov
push
imul
adc
sub
inc
jo
call
fst
cmps
lds
aaa
cmp
pop
loope
js
and
(bad)
(bad)
ret
push
sub
std
inc
jg
call
daa
push
mov
and
xor
inc
sub
xlat
cs
xor
inc
adc
xor
add
sbb
push
call
pop
xor
loope
arpl
inc
bound
mov
rcr
mov
adc
mov
dec
or
xchg
sbb
js
xchg
hlt
cdq
push
sbb
mov
arpl
or
addr16
imul
xchg
xor
inc
loope
test
adc
cmps
and
xchg
sub
pop
jmp
imul
bnd
popf
dec
imul
jmp
push
and
push
inc
xchg
(bad)
aaa
sub
enter
mov
xor
xchg
pushf
mov
arpl
das
pop
int3
ins
or
mov
push
sub
repnz
pop
xchg
mov
pop
adc
dec
push
add
xchg
unpckhps
sbb
jns
mov
add
fwait
dec
cmp
lods
aas
adc
or
mov
imul
(bad)
je
inc
call
std
cmp
push
xor
jp
dec
add
lods
ja
push
imul
jg
push
mov
jecxz
sbb
fdivrp
xchg
sti
pop
call
int
cmp
je
dec
imul
unpckhps
push
pop
call
cdq
xor
pop
test
loopne
xchg
push
fcomp
pop
adc
mov
mov
sahf
call
dec
mov
aaa
sbb
sti
pop
or
mov
iret
fist
lods
imul
dec
and
jns
sbb
(bad)
inc
pop
sub
jmp
mov
ror
push
cdq
inc
mov
and
iret
dec
push
enter
(bad)
in
cmp
add
stc
mov
cmp
push
mov
dec
mov
xchg
aad
sub
inc
fisttp
mov
(bad)
mov
inc
pusha
push
fwait
hlt
into
fnstenv
gs
aaa
sti
popf
xor
aaa
xchg
sbb
pop
stos
sub
xchg
imul
and
icebp
retf
mov
pop
js
dec
mov
sbb
xlat
daa
dec
enter
xchg
popf
inc
lahf
pop
xchg
pop
dec
dec
inc
and
pushf
shl
mov
adc
xor
daa
xor
mov
lahf
push
add
loope
xor
push
dec
inc
mov
jmp
scas
push
mov
push
add
sbb
jmp
fld
cmp
sub
add
mov
xor
call
cmps
fistp
mov
push
push
sbb
pop
push
fisttp
rcr
mov
push
test
loope
lea
and
mov
jne
sub
xchg
xor
jecxz
push
daa
popf
mov
aas
pop
dec
inc
pusha
pop
xchg
leave
daa
fisub
aad
push
cs
stc
mov
cmp
xor
popa
jnp
out
dec
dec
lock
push
sub
into
cdq
jne
pushf
cmps
pop
cmc
jl
pop
inc
or
sub
xchg
jg
leave
push
dec
aaa
jns
dec
js
push
mov
fld
out
or
test
xor
jg
pop
stos
imul
loop
and
test
clc
mov
fisub
jno
sub
fistp
data16
inc
lods
cmp
dec
or
xchg
stos
sub
enter
xchg
ss
mov
xchg
dec
call
fld
jle
hlt
pop
inc
or
cs
fbstp
enter
sahf
add
pop
cmc
in
mov
das
packssdw
pop
push
or
pop
dec
daa
sub
adc
sub
and
cmc
rcl
dec
iret
inc
xchg
sbb
push
push
inc
hlt
stc
sar
imul
and
xchg
daa
cmp
sti
xchg
mov
(bad)
mov
(bad)
fdiv
lahf
adc
fwait
inc
cs
pop
xor
adc
add
adc
mov
test
movs
daa
fmul
push
cmp
cmps
iret
pop
mov
inc
xchg
mov
pop
xor
(bad)
inc
xchg
pushf
jne
aas
add
and
xchg
(bad)
push
mov
mov
inc
mov
pop
mov
fisttp
mov
mov
and
dec
and
repz
or
jmp
call
mov
in
ja
mov
inc
add
cmp
aam
inc
dec
dec
rol
sub
push
mov
cmp
call
loope
std
imul
das
fisubr
or
inc
and
add
push
jmp
adc
pop
cmc
push
leave
pop
or
xor
sub
loope
out
loope
mov
daa
pop
xlat
xchg
fwait
push
dec
inc
out
imul
mov
sub
lahf
push
push
pop
mov
movs
es
push
jne
dec
test
push
inc
pop
loope
xchg
loope
inc
pop
loope
xchg
cmp
xchg
push
sub
pop
and
mov
and
pop
ins
pop
xor
int3
aas
pop
pop
push
popf
pop
or
xchg
xchg
es
or
test
jg
xor
mov
pop
shr
or
cmps
mov
pop
out
icebp
jecxz
stos
lock
xor
sub
mov
sub
icebp
xchg
out
movs
jae
stos
dec
or
(bad)
cmp
xor
mov
mov
das
aam
aas
pop
push
xor
inc
enter
add
mov
push
dec
inc
or
nop
push
cmp
and
mov
lahf
imul
add
add
push
clc
xor
mov
or
mov
xchg
aam
dec
mov
das
xchg
and
or
push
sbb
rcl
call
xchg
cwde
inc
out
inc
xor
stos
dec
bound
lahf
xchg
(bad)
xor
in
xchg
pop
fsubr
pop
xor
imul
pop
xchg
loop
imul
jle
jne
push
imul
daa
dec
rcl
push
mov
adc
xor
inc
xchg
stos
popf
sub
add
rcl
hlt
daa
push
mov
mov
adc
addr16
push
jecxz
sub
and
ror
aaa
xlat
push
pop
sbb
imul
cmps
in
(bad)
out
ffree
sub
out
jge
xchg
and
rol
leave
cmp
pop
je
dec
push
add
iret
pop
mov
push
leave
pop
sbb
and
adc
fld
inc
loopne
xchg
sti
sub
xor
dec
cmp
js
sbb
sub
inc
pop
cdq
inc
xor
dec
lods
dec
loopne
xchg
shr
in
push
jg
cmp
adc
push
retf
rol
inc
aaa
pop
in
pusha
jno
aaa
ror
fadd
pop
jecxz
add
add
test
and
ret
mov
test
cwde
xor
out
dec
test
loopne
in
sbb
fisttp
movs
dec
test
push
jl
xchg
add
jmp
movs
cmp
mov
pop
mov
cdq
sub
sub
nop
cs
sub
lock
pop
mov
sbb
mov
rcr
fld
loope
mov
adc
stos
push
pop
adc
jg
sub
(bad)
sbb
sbb
arpl
xor
and
imul
inc
xor
inc
call
in
(bad)
lock
mov
mov
pushf
ins
xchg
add
add
cmp
push
test
les
push
dec
inc
sbb
les
jle
xchg
ja
mov
dec
xor
xchg
mov
dec
or
xchg
cmp
sahf
int
mov
out
pop
mov
ficom
popf
pusha
lock
cmp
push
je
inc
das
jp
mov
pop
pop
pop
rol
dec
cmp
test
push
xor
inc
ret
es
xor
inc
and
sbb
or
nop
xchg
sbb
or
pop
(bad)
xor
mov
aad
pop
dec
pop
add
cmp
mov
xchg
inc
popa
inc
adc
mov
test
stc
xor
mov
imul
pop
cmp
cmps
out
pop
leave
jns
dec
or
pop
imul
jmp
fsubr
jg
push
popf
cmp
jp
push
and
xchg
sar
stos
mov
jbe
pop
shl
imul
movs
out
loope
xor
xchg
xchg
dec
enter
xchg
mov
arpl
xchg
mov
push
jmp
shl
push
loop
outs
hlt
leave
pop
pusha
jmp
fisttp
inc
sub
xchg
sbb
xor
push
rcl
xor
push
dec
ss
std
je
dec
call
dec
xor
xchg
hlt
ins
out
mov
dec
mov
imul
pusha
out
ffreep
pop
jle
cmps
sub
add
inc
enter
cwde
daa
cmp
or
ret
and
mov
pusha
inc
or
and
inc
dec
ins
mov
mov
adc
push
sbb
mov
enter
sbb
rcr
popa
scas
xchg
mov
jnp
test
stc
das
add
push
imul
jg
add
dec
test
push
push
and
mov
movs
add
loope
jmp
data16
mov
clc
xchg
pop
xchg
mov
(bad)
pop
jns
or
xchg
sub
cmps
pop
pop
lods
add
inc
xchg
loopne
ds
loope
mov
inc
lock
push
call
mov
call
lahf
jg
es
jl
shr
je
xchg
add
sbb
or
xchg
in
xchg
shl
adc
push
pop
pop
sub
adc
arpl
mov
stc
dec
dec
mov
out
mov
lods
pop
pop
pop
(bad)
sbb
lahf
dec
in
mov
jae
repnz
sub
out
pop
pop
aas
jmp
movs
jp
xchg
in
or
jns
inc
xor
out
mov
xor
inc
aad
jge
pushf
add
inc
cld
add
inc
cdq
jmp
sbb
icebp
push
sti
jno
xchg
shl
xchg
das
dec
add
xchg
out
loope
test
or
les
inc
xchg
sub
inc
jno
jle
(bad)
icebp
dec
in
imul
push
jno
ins
xchg
jno
and
sbb
dec
or
sub
add
fdiv
adc
mov
jle
adc
inc
inc
repnz
add
je
mov
in
mov
sbb
int3
rcl
retf
into
inc
cmp
pop
pop
es
(bad)
and
cmovge
outs
dec
xchg
sub
xchg
mul
push
sbb
nop
shl
sbb
lods
inc
test
jno
jle
enter
arpl
push
fcmovnu
cmps
leave
inc
xlat
ret
xchg
add
jg
pop
push
(bad)
or
sbb
add
xchg
mov
test
jno
jmp
adc
(bad)
fisubr
mov
inc
jns
outs
stos
sub
adc
mov
call
mov
scas
cwde
push
call
mov
lea
cmp
or
out
dec
fucom
dec
sub
cmp
cmp
jno
inc
arpl
push
ins
dec
or
dec
dec
add
js
daa
lds
ror
mov
dec
sub
mov
lock
cdq
gs
mov
imul
sbb
pop
jl
loopne
mov
mov
(bad)
fucomp
add
sahf
lock
pushf
mov
xchg
sbb
jmp
test
inc
sub
cdq
sbb
mov
(bad)
mov
ins
mov
or
push
mov
sub
(bad)
repz
or
sbb
dec
adc
daa
lea
xor
jmp
inc
addr16
push
xor
sub
mov
cmc
inc
mov
mov
outs
mov
stos
fwait
mov
cmps
xor
add
cmp
ins
jae
jbe
fwait
sub
and
fild
cwde
jmp
mov
fcmovnu
xor
or
fwait
mov
rcl
xchg
cdq
outs
cmp
fdivrp
fsub
into
sbb
jge
dec
mov
pop
inc
retf
(bad)
adc
fistp
mov
cmp
dec
dec
xor
clc
adc
ins
mov
ror
push
and
imul
test
movs
pop
mov
shr
stos
(bad)
pop
sbb
push
push
jae
arpl
fcmovu
les
int
mov
dec
fucomip
stc
push
(bad)
sub
xor
pusha
aad
ss
shl
stc
(bad)
retf
cmp
outs
std
fild
and
mov
movs
bound
dec
fs
add
test
bound
push
(bad)
cmp
add
mov
add
inc
test
int3
xchg
mov
ret
icebp
and
popf
mov
test
push
xor
pop
rol
pop
push
sub
mov
cld
pop
enter
mov
iret
addr16
mov
popf
nop
add
xchg
pusha
pushf
pushf
pop
mov
pop
sbb
aaa
xchg
(bad)
data16
cwde
fisubr
dec
ja
push
xor
daa
popf
xchg
inc
cmps
fadd
and
cmc
ss
pop
push
sbb
xchg
adc
(bad)
push
inc
test
or
lods
jno
sahf
mov
pusha
pop
out
cmc
and
and
imul
and
inc
ins
jbe
inc
add
lock
pop
into
call
xor
mov
mov
idiv
pop
sbb
sti
inc
or
and
gs
inc
pop
and
jge
sub
stos
cmp
and
add
sbb
or
retf
mov
dec
pop
mov
and
fcom
movs
mov
jb
inc
ins
mov
sbb
icebp
pusha
push
lods
or
aas
push
and
inc
push
mov
jmp
pop
jp
inc
loope
mov
xchg
mov
pop
and
xor
and
lods
test
mov
add
sbb
cs
dec
xlat
push
mov
push
push
dec
dec
pop
mov
psubd
bound
jns
push
mov
mov
add
xor
shl
jmp
gs
or
and
(bad)
jns
push
in
dec
cmps
dec
push
adc
cmp
(bad)
daa
mov
mov
into
or
pop
int
inc
push
pcmpgtw
fcomp
xchg
mov
retf
and
enter
popf
fs
test
jbe
loop
call
and
pop
adc
inc
je
mov
das
icebp
xchg
jg
loopne
push
sub
pop
sub
mov
inc
or
icebp
neg
sub
push
std
mov
ret
pop
scas
jne
push
xor
into
sbb
aam
mov
fst
push
mov
sahf
movd
ja
mov
popa
add
(bad)
inc
cmc
data16
inc
add
and
pop
sbb
cs
jns
sbb
mov
pop
rol
out
inc
lds
jno
jbe
xor
rcr
jmp
dec
popa
dec
mov
push
sbb
xchg
mov
pop
fild
daa
fstp
cmps
inc
mov
aam
adc
shr
ficom
xchg
hlt
or
outs
inc
dec
push
mov
dec
int
mov
and
pushf
jl
fist
aad
fxch
aad
test
xchg
mov
adc
mov
jp
dec
popa
push
mulps
mov
sbb
lahf
addr16
in
sub
cmp
aas
and
sbb
push
arpl
stc
ins
aad
test
shr
lahf
xchg
in
popf
jmp
inc
gs
je
xor
mov
push
stc
push
or
ins
sbb
pop
cmps
icebp
iret
call
cs
xor
bound
xchg
xchg
js
daa
or
(bad)
push
adc
cwde
mov
popf
mov
std
mov
popa
fld
adc
mov
jns
cmp
jns
stos
inc
jecxz
retf
push
pop
cmp
popf
xchg
mov
sbb
mov
xchg
sub
fidivr
(bad)
dec
mov
fdiv
push
jmp
daa
add
outs
test
loopne
mov
in
push
pop
gs
inc
adc
dec
inc
stos
(bad)
jnp
sbb
arpl
lods
cmps
mov
shr
mov
cdq
les
stos
inc
mov
mov
call
and
aaa
adc
popa
push
(bad)
fdivp
pop
test
cmp
jo
ds
cmps
popf
test
add
add
push
cmc
xchg
stc
inc
loope
pop
sbb
outs
call
push
and
movs
outs
fxch
mov
mov
or
xchg
adc
iret
dec
push
mov
(bad)
push
test
sub
scas
out
sub
mov
std
loopne
cmp
cmp
xchg
cmc
loope
xchg
in
pusha
(bad)
xchg
push
mov
adc
jns
sbb
enter
xchg
pop
not
(bad)
mov
jns
xchg
hlt
or
lods
or
xchg
gs
inc
jne
inc
sbb
ja
sbb
pop
jbe
sub
out
inc
xchg
imul
xor
adc
ret
inc
xor
jbe
dec
test
repz
mov
adc
aaa
and
push
mov
test
rol
and
sbb
push
mov
repz
jmp
mov
enter
cmps
and
dec
jno
mov
sub
xchg
xchg
push
imul
sub
or
aam
add
cmp
mov
es
shl
pop
jns
shr
(bad)
adc
stc
cmp
test
mul
jmp
add
xchg
clc
mov
ja
unpckhps
pop
cmp
mov
test
retf
push
sti
pop
push
div
xchg
push
xor
dec
inc
loop
loope
sbb
cwde
sbb
pop
inc
mov
in
push
cmp
mov
fisub
pop
sti
movs
imul
into
and
aad
cli
pop
jns
shl
test
jl
movs
fwait
pop
cmp
out
test
sub
push
leave
pop
jno
lea
push
inc
sub
push
in
movs
imul
cmp
or
cli
test
outs
push
fst
or
sub
or
add
mov
adc
gs
cmp
inc
aaa
inc
cwde
sub
cmp
inc
mov
mov
popf
and
jl
adc
popa
push
cmp
adc
xlat
lock
data16
dec
pusha
adc
adc
dec
mov
jnp
and
mov
out
pop
pop
popa
into
(bad)
mov
in
push
or
out
add
inc
fimul
adc
popa
xor
inc
in
or
mov
inc
lds
pop
mov
test
and
gs
pop
jns
ror
lea
sub
jmp
in
cs
je
xor
jg
push
in
cmps
sub
nop
gs
leave
or
stos
retf
fsubr
pop
jns
loope
xchg
and
mov
push
imul
fbstp
push
jno
or
push
dec
pop
aaa
push
pop
sub
push
mov
mov
loope
cdq
pop
inc
(bad)
jmp
sub
push
push
cwde
push
pop
pop
and
pop
xchg
pop
push
imul
jg
push
outs
pop
jmp
sub
in
jne
pop
sub
sbb
push
scas
cmp
and
stos
inc
inc
jbe
xor
dec
js
cmp
push
jae
inc
scas
dec
mov
push
add
inc
dec
dec
mov
xor
cmps
aaa
push
pop
or
loopne
push
ins
xor
push
mov
sub
test
pop
sub
mov
lahf
push
imul
sbb
mov
shl
std
(bad)
gs
pop
leave
push
push
mov
xchg
push
dec
push
popa
push
test
int3
and
pop
inc
xor
push
adc
jno
xchg
mov
push
js
jl
fstp
add
sar
cs
xchg
sbb
fstp
mov
test
sahf
test
dec
push
cmp
adc
inc
outs
pop
sub
push
lea
in
mov
jg
fisttp
sbb
jne
push
fcomp
mov
jmp
mov
xchg
mov
sar
loop
popf
push
cs
cmc
cmps
push
jns
add
(bad)
into
es
test
ins
jp
movs
pop
pop
stc
iret
inc
inc
out
movs
outs
cmp
push
bound
aam
dec
mov
cs
cdq
aam
pop
cwde
jo
dec
test
sub
and
imul
cmc
retf
enter
mov
push
xor
cld
daa
cmp
xchg
and
pop
ror
jne
push
jns
aaa
repnz
cmp
jmp
and
pop
(bad)
sbb
push
mov
scas
pusha
test
push
pusha
pop
sbb
cld
xor
mov
xchg
mov
jge
jno
pop
sahf
dec
mov
test
sahf
jge
je
jle
ja
sub
cmp
jp
or
adc
xor
fidivr
pop
rcl
xor
ins
push
rcl
mov
cld
lods
xor
xchg
jle
push
jle
pop
push
and
pop
movs
jp
test
mov
into
push
(bad)
push
xchg
inc
xchg
stos
push
mov
fisubr
leave
pop
and
and
pop
xor
test
cmc
jb
leave
iret
and
lea
xchg
lds
pop
sub
sub
jge
repnz
inc
cs
jmp
test
(bad)
push
test
movs
mov
pop
sub
sbb
jae
jmp
ret
push
cmp
dec
cs
hlt
lods
pop
xor
call
scas
test
and
mov
pop
sbb
stc
jne
push
test
int
int
and
xor
int
and
popa
push
xchg
rcl
push
mov
call
push
xor
icebp
in
push
ins
lds
js
ucomiss
sbb
adc
xor
(bad)
es
adc
fld
iret
je
pop
sub
pop
mov
sbb
int3
mov
push
sub
out
sub
sub
pop
imul
outs
(bad)
movs
sub
pop
mov
aam
out
stc
inc
pop
ffreep
push
mov
fbstp
lds
ret
lods
dec
xor
xchg
sahf
or
lahf
hlt
aad
push
mov
push
sbb
sahf
mov
bound
jbe
cmp
cmc
fimul
(bad)
jl
mov
cmps
add
mul
pop
pop
je
sub
push
mov
mov
cmp
jo
call
fbstp
outs
scas
hlt
add
xor
mov
sub
sbb
ret
rol
mov
push
xchg
(bad)
fnstcw
or
mov
or
lds
sbb
or
pop
(bad)
and
sub
cmp
pop
loope
dec
xchg
scas
ret
vaddsd
pop
jno
test
cs
push
enter
sub
jmp
(bad)
das
pop
aad
cli
ins
pop
adc
mov
mov
imul
test
xchg
es
icebp
lds
pop
dec
push
xchg
cli
mov
outs
test
jns
jns
add
xchg
xor
push
leave
pop
loopne
cmc
cwde
jle
xor
sbb
movs
xchg
and
cmp
stc
jnp
pop
jle
sub
mov
push
pop
add
cmp
lahf
xlat
mov
push
mov
xor
pop
or
cwde
and
dec
jmp
push
xor
pop
jecxz
adc
mov
adc
adc
js
call
pop
sub
inc
push
leave
xchg
xchg
imul
dec
ja
les
xor
or
(bad)
push
test
mov
mov
sbb
rcl
pop
add
aam
push
mov
ds
and
or
add
push
jne
jmp
test
or
pop
ja
pop
mov
mov
inc
sub
pop
xor
sar
movs
repz
fstp
mov
push
inc
stc
fsub
sbb
sbb
jb
fsub
push
std
cmc
or
rcr
frstor
fistp
jno
adc
(bad)
pop
pop
push
popa
push
mov
sub
ret
push
int3
pop
cmp
mov
(bad)
out
imul
xchg
jp
pop
or
add
mov
sbb
inc
imul
add
(bad)
xor
clc
fs
pop
cli
xor
pop
cwde
inc
mov
pop
pop
repnz
mov
mov
cmp
ret
mov
out
push
fstp
mov
dec
xchg
sahf
cmp
sub
imul
xor
inc
add
jne
bnd
ss
xor
pop
xor
and
jns
leave
pop
inc
in
retf
lahf
push
pop
xchg
stos
push
test
jecxz
(bad)
push
cdq
pop
adc
mov
mov
jmp
pop
inc
popa
test
call
pop
mov
lahf
repz
sub
dec
stc
mov
div
test
fsubr
ds
push
and
pop
inc
jmp
add
add
mov
loope
or
inc
push
mov
jle
lds
arpl
stos
(bad)
jnp
pop
cmp
push
and
in
icebp
and
rol
push
sub
popa
test
or
cdq
pop
loope
or
into
add
rol
push
(bad)
pop
pop
mov
test
lea
pop
xor
adc
out
out
inc
push
sub
bound
cmp
fwait
loopne
ret
xchg
add
mov
mov
adc
ds
fstp
inc
mov
in
add
imul
dec
mov
mov
jno
hlt
ds
xor
lahf
push
aad
push
and
call
push
inc
pop
rcr
push
mov
xchg
dec
loope
imul
add
rcl
ins
cdq
cmp
aad
pop
jl
mov
cmp
jne
push
pop
pop
icebp
fwait
xchg
rcl
pop
add
movs
retf
es
mov
dec
ds
push
pop
loope
xor
jl
aad
jnp
pop
loope
rcr
cmp
repz
icebp
add
cmc
movs
pop
jns
adc
(bad)
cmp
mov
pop
sub
cs
cdq
pop
cmp
xchg
mov
adc
pop
sar
mov
ret
lds
in
sub
leave
pop
cli
call
inc
push
imul
mov
inc
ret
pop
adc
in
and
jmp
inc
add
jge
repnz
lock
lods
es
fdivr
repnz
fstp
bound
mov
or
mov
ins
lods
inc
loope
(bad)
std
sub
pop
mov
push
cdq
mov
add
in
or
mov
and
mov
pop
xor
test
sub
test
pop
pop
adc
popf
(bad)
mov
adc
out
mov
add
mov
leave
pop
inc
mov
mov
(bad)
jns
shr
(bad)
cmc
rcl
and
sub
cwde
in
(bad)
vsqrtsd
popf
or
push
std
pop
xor
test
mov
jp
mul
cld
mov
sub
jns
adc
mov
and
in
pop
push
push
push
rcl
add
push
imul
lods
mov
pop
loope
xor
std
push
sub
mov
aam
int3
out
mov
jmp
sahf
retf
or
pop
mov
lods
(bad)
ja
pop
nop
mov
shr
rol
loop
push
popf
push
outs
sahf
and
cmc
xor
push
inc
add
cwde
pusha
adc
xchg
jbe
add
and
mov
fdivr
adc
jmp
inc
jmp
sub
mov
xor
inc
(bad)
dec
inc
mov
jae
movs
in
jge
pop
jb
jbe
and
xchg
rol
jl
jno
add
mov
loopne
ds
jl
pop
out
ror
xchg
or
test
mov
sbb
pop
std
mov
retf
inc
xor
aaa
add
(bad)
cdq
cdq
shl
and
out
xchg
dec
daa
sbb
jge
out
lock
add
dec
rcl
clc
mov
inc
sbb
cmp
mov
sti
popf
in
out
and
or
aaa
rcr
mov
loop
inc
sub
jae
into
adc
sti
xor
cld
xchg
pop
xor
clc
enter
adc
pusha
ror
pop
jge
aaa
retf
cld
test
push
adc
xor
jecxz
pop
mov
and
(bad)
movs
inc
pop
sahf
jno
pushf
xor
jp
push
jmp
pop
pusha
fidivr
pop
mov
mov
dec
cmp
aam
je
push
cmps
repnz
sbb
dec
cmp
or
cmp
xchg
sti
leave
mov
sti
ins
fdivr
loop
std
xor
sub
pop
in
jge
push
cmp
adc
das
push
cmp
xchg
cmps
lock
dec
sbb
adc
dec
sbb
mov
mov
cld
cmp
loop
rol
popa
xchg
ss
iret
in
add
xchg
lea
push
call
pop
add
cmp
xchg
in
jecxz
push
pop
aad
pop
int3
sbb
(bad)
add
movs
leave
ja
int
pop
or
cs
cmp
shl
sub
jne
int
dec
lahf
sbb
ins
pop
ins
add
or
pop
dec
into
cmp
pop
out
imul
cmp
retf
dec
sbb
fisubr
pop
stos
dec
dec
cdq
loopne
aad
or
stos
fstp
xchg
sbb
inc
cmp
pop
in
push
push
movs
aad
rcl
jbe
jge
xchg
ins
add
or
mov
push
and
imul
es
ds
inc
out
bound
jp
mov
mov
pop
pushf
xor
cmp
jl
cs
(bad)
iret
add
sub
cmp
mov
or
outs
ds
dec
sar
sub
dec
and
mov
dec
sti
in
inc
mov
xchg
sub
in
ret
mov
adc
push
(bad)
into
cmp
push
mov
push
(bad)
popf
pop
dec
fcmovne
shl
clc
repz
jmp
jl
add
aas
mov
pop
mov
sub
retf
cmp
call
addr16
dec
xor
popa
push
lea
jle
push
mov
ins
retf
add
cmp
adc
cli
leave
pop
and
dec
hlt
sub
ret
pop
fmul
repz
cmp
xchg
dec
das
(bad)
xor
and
adc
stos
fiadd
pop
dec
mov
imul
hlt
loop
mov
inc
sbb
xchg
push
stos
adc
test
call
ror
jmp
xchg
inc
add
inc
mov
(bad)
jne
jg
add
in
cmps
push
dec
jge
inc
push
mov
cwde
dec
aaa
or
mov
push
cmc
sbb
(bad)
xor
test
xor
arpl
mov
cmps
fstp
scas
dec
ins
xor
popa
xor
ror
adc
fist
or
pop
pop
inc
in
xor
ins
jne
lahf
xor
dec
xchg
lock
(bad)
mov
sub
stos
push
lds
je
jbe
push
fst
dec
xchg
dec
pop
(bad)
sub
xlat
add
ror
fcom
icebp
gs
jge
pop
rol
dec
or
push
adc
(bad)
jle
sub
pcmpgtw
out
test
mov
fst
stos
push
rcl
jno
adc
mov
pop
inc
mov
pop
movs
xchg
or
repnz
pop
(bad)
fistp
and
xor
pop
scas
dec
jo
mov
cmps
das
cli
hlt
cmp
sbb
mov
rol
add
js
add
mov
sbb
sub
push
sub
xchg
mov
pop
xchg
lea
movs
cmc
mov
jl
jge
push
ret
aam
jge
(bad)
add
movs
jecxz
cmp
div
mov
pop
int3
mov
dec
mov
cmovns
fnstenv
pop
out
jmp
sub
xlat
aas
les
add
jo
enter
jmp
sbb
pop
and
sahf
mov
pop
leave
ss
mov
and
dec
daa
push
fwait
test
inc
stc
mov
jo
xchg
or
xlat
stos
push
sub
sub
cmps
mov
pop
mov
pop
xchg
sbb
and
daa
mov
push
fcmovnb
and
jbe
je
xor
add
loop
pop
mov
(bad)
popa
fcmovnu
cmp
and
icebp
sbb
(bad)
int3
jecxz
les
jnp
in
and
push
inc
push
push
rcl
das
ret
fistp
movs
push
push
mov
pop
lock
mov
enter
outs
cmp
jnp
mov
pop
cli
xchg
test
dec
mov
rcl
rcr
mov
xchg
ror
pop
pushf
cdq
pusha
jl
xlat
sbb
xor
inc
inc
mov
addr16
push
pop
jp
pop
xchg
(bad)
stos
dec
fwait
sahf
dec
inc
test
jl
xchg
push
push
inc
cmps
rol
sub
jb
push
push
imul
add
icebp
test
rcr
cmp
imul
cmp
pop
scas
dec
fmul
nop
mov
mov
inc
and
mov
xchg
or
jno
aas
test
rcr
cmps
pop
sub
push
xlat
add
outs
pop
pop
xor
or
retf
int
mov
fldenv
imul
pushf
(bad)
xchg
and
dec
cmc
sub
adc
jb
je
push
jno
cmp
xor
or
mov
or
cmp
popf
inc
or
es
ss
jnp
scas
add
addr16
fcomp
fisub
repz
stos
movs
fprem1
hlt
jp
adc
scas
rcl
pop
sbb
pop
add
or
add
sbb
cmp
add
sar
out
fdiv
xlat
stos
push
xchg
outs
mov
das
xchg
xchg
fst
cmps
push
cmp
cmp
xor
xchg
dec
mov
pop
std
dec
retf
(bad)
iret
bound
add
fs
rol
cdq
lods
pushf
pop
cmp
xor
cmc
or
or
cwde
shr
dec
jge
int3
dec
sub
mov
int
sbb
adc
outs
mov
adc
xchg
(bad)
mov
xlat
push
scas
sub
mov
pop
(bad)
jge
inc
rol
and
outs
jns
aaa
inc
xor
rol
imul
ss
mov
push
in
jno
lahf
nop
inc
nop
mov
mov
jbe
call
sar
pusha
push
or
dec
mov
shl
push
and
retf
movs
out
cmc
sub
pop
aas
aad
outs
fsub
jb
inc
add
icebp
daa
iret
xor
adc
xchg
das
xchg
pushf
add
dec
pop
pminsw
push
(bad)
fadd
cmp
xor
and
dec
jp
test
dec
xchg
push
cmp
mov
xchg
mov
imul
stos
cld
sahf
and
push
loop
addr16
inc
or
das
(bad)
sbb
ins
call
jge
iret
dec
std
cs
jns
test
jo
popf
xor
push
aad
daa
push
cmp
bound
push
xor
cdq
xchg
jns
cmc
int3
push
retf
imul
lea
mov
sbb
js
out
mov
add
mov
gs
out
sub
test
sub
or
fbld
movs
ins
xchg
xor
ficom
ret
xor
cmps
int
and
test
mov
jbe
push
and
inc
xchg
std
push
mov
out
inc
pop
ss
pop
(bad)
pop
popf
sar
jp
ret
fst
scas
sbb
mov
enter
pop
cdq
sub
iret
sub
sbb
mov
shr
or
mov
inc
sbb
xor
test
push
mov
mov
cmps
call
xchg
mov
xor
icebp
pusha
or
mov
hlt
jmp
jl
inc
push
mov
or
aam
into
inc
push
xor
lea
fbld
js
int3
into
std
rcr
push
adc
aas
mov
pop
loope
or
test
loope
xor
(bad)
mov
fcmovbe
shr
inc
rcl
pop
sub
xchg
push
cmova
jns
test
inc
leave
xlat
xor
jge
mov
sub
mov
mov
sbb
ds
dec
push
rcl
imul
mov
movs
mov
push
jb
xchg
mov
pop
cmp
mov
das
xor
jl
rcl
sub
int
inc
call
mov
and
loope
and
push
(bad)
xchg
xor
dec
adc
and
and
(bad)
cmove
pop
retf
rcr
mov
mov
push
push
mov
cmps
adc
or
push
(bad)
push
cmps
jg
add
sub
xor
pop
mov
out
adc
sub
stc
mov
inc
in
push
fistp
pop
add
sbb
into
test
icebp
mov
push
xchg
inc
pop
xchg
push
inc
adc
mov
pop
(bad)
adc
xor
or
daa
into
cmp
cmp
imul
jp
jb
dec
loop
xor
xchg
push
cdq
push
xchg
inc
and
mov
repnz
pop
test
sbb
(bad)
push
and
dec
and
test
aam
or
dec
mov
hlt
retf
test
mov
iret
sar
and
push
int3
push
loop
push
cmps
mov
mov
pop
rcl
mov
jno
pop
inc
cmps
add
jo
xchg
sbb
test
push
ja
stos
faddp
aam
and
bound
(bad)
mov
jge
test
loope
xor
or
int
std
push
pop
clc
hlt
xor
cmp
pop
leave
push
and
or
jge
cmc
push
pop
or
out
push
cmps
sbb
cmp
dec
add
and
cmps
aad
fst
xor
popf
and
jns
mov
cmps
add
gs
stc
je
or
pop
or
jns
lods
jae
push
(bad)
stc
or
fist
push
pop
push
sub
in
xchg
cmp
jno
stos
jp
push
xor
lea
frstor
fnstenv
pushf
inc
and
fwait
sbb
rol
in
ja
jmp
ror
mov
pop
rcl
or
mov
fisubr
push
test
out
adc
imul
pop
pop
xchg
add
jl
dec
ret
mov
inc
push
push
mov
and
dec
jge
add
or
xchg
aaa
fs
dec
lock
fidivr
les
stos
clc
xor
icebp
add
dec
fdiv
(bad)
or
movs
xor
in
fucomip
push
loope
push
cmp
fild
add
lea
pop
mov
pop
cwde
shl
pop
into
sbb
cmp
push
xor
sub
sbb
pop
and
pop
cdq
rol
ss
cmps
jle
gs
loopne
rcr
jne
lea
mov
and
cmps
cmps
mov
fdiv
xlat
inc
(bad)
(bad)
xor
pop
pop
ror
or
push
(bad)
dec
adc
(bad)
cmps
fadd
and
pop
daa
stos
out
in
cmp
or
jge
add
push
fnstenv
sbb
imul
and
pop
xlat
pop
jb
(bad)
lock
add
push
dec
jle
xchg
xchg
outs
pusha
cmc
add
pop
xor
or
xlat
or
jo
pop
sahf
or
jle
daa
mov
enter
pop
push
mov
retf
inc
jmp
add
cmc
fnsave
sbb
out
add
fcomp
dec
push
add
jne
sub
punpcklwd
push
mov
and
fidivr
lock
pushf
out
sbb
shr
ror
popf
push
pop
test
aaa
push
mov
jns
push
push
push
mov
push
pop
sbb
daa
daa
loope
jl
loope
fnstcw
movhps
fnsave
ror
(bad)
in
ins
cmp
inc
pop
xchg
push
sub
or
dec
cmp
push
inc
and
in
ficomp
jmp
test
push
popa
push
mov
cmps
sub
and
dec
and
jge
xchg
rcl
fbld
aam
aam
(bad)
mov
not
xlat
movs
jp
inc
mov
pop
push
xlat
imul
xchg
xchg
fisub
dec
and
jne
fild
mov
mul
jae
or
push
cmps
mov
into
ficomp
jnp
mov
jg
enter
mov
in
mov
and
xchg
aas
push
ret
enter
or
(bad)
xchg
push
js
shl
pop
shl
or
jle
pushf
(bad)
pop
push
int
xor
add
push
fldcw
rcr
xchg
clc
cmp
cmp
or
(bad)
std
cmp
daa
movs
nop
cmp
sbb
in
dec
jnp
push
xchg
cmp
xor
fcomp
mov
push
mov
xchg
pop
shl
xchg
(bad)
mov
push
sti
lea
pop
jne
xor
xchg
cwde
jne
pop
dec
push
pop
inc
push
cmp
data16
arpl
or
and
rcl
sar
or
scas
xchg
aaa
pop
loope
fst
jb
xchg
mov
outs
pop
pop
push
shl
sbb
mov
jns
les
and
or
add
call
or
fstp
mov
jns
dec
out
push
xor
fld
sub
lds
jnp
and
ss
(bad)
dec
cdq
adc
fimul
inc
leave
arpl
inc
std
leave
cmp
neg
push
mov
add
jne
pop
mov
and
dec
sbb
mov
and
cmc
adc
mov
es
push
sbb
or
xor
outs
dec
jmp
jo
sti
shl
push
mov
mov
fisub
lock
out
in
push
pop
adc
movs
pop
mov
push
pop
outs
(bad)
cmps
sbb
loopne
jns
or
and
inc
fcom
dec
setno
cmps
mov
adc
inc
ds
and
aas
frstor
push
stc
push
mov
or
or
sub
cmps
(bad)
dec
fs
mov
sbb
or
and
ror
xlat
or
cmps
or
lahf
test
cmp
cmp
jle
jle
adc
aad
pop
jmp
jp
popa
and
mov
adc
pushf
dec
xchg
fmul
xor
pcmpgtw
xlat
cwde
xchg
lds
cmp
push
test
nop
sub
inc
or
push
fbld
das
sbb
lods
cmc
jle
mov
sub
lea
les
push
loope
or
cmp
stc
push
(bad)
mov
(bad)
(bad)
shr
or
and
fistp
mov
test
adc
adc
xchg
jns
or
shl
test
xlat
and
mov
inc
mov
(bad)
cmp
inc
(bad)
pusha
bound
fstp
adc
fcomi
push
and
xor
or
loop
inc
cmp
enter
fcmovnu
dec
push
xchg
or
mov
sbb
leave
push
add
retf
adc
push
scas
inc
mov
pushf
sbb
mov
mov
aaa
push
mov
(bad)
pop
idiv
jae
lds
scas
pop
das
push
or
sub
in
jae
mov
sub
inc
pop
push
jo
inc
test
int3
daa
sub
push
or
jne
push
fldenv
leave
outs
lods
xor
mov
adc
and
mov
pop
dec
aam
dec
lea
movs
ins
dec
in
mov
ins
push
xor
jne
or
ror
push
retf
ins
mov
add
das
or
mov
(bad)
push
loope
(bad)
xor
xchg
add
(bad)
out
pop
sbb
or
jge
aaa
(bad)
rcl
or
and
fst
outs
mov
push
in
pop
push
adc
adc
cmps
pop
popa
lods
inc
or
inc
and
call
cmp
or
iret
and
stos
adc
xchg
inc
or
movs
ins
les
movq
jge
outs
repz
dec
xchg
jns
or
loopne
dec
lock
inc
pushf
mov
je
xlat
out
xor
cmp
inc
pop
or
jg
shl
sbb
jns
sbb
int3
fstp
addr16
push
rcr
add
cmp
rcl
jle
lahf
(bad)
or
pop
mov
or
pop
mov
pop
and
aad
pop
and
inc
dec
cmps
out
pop
mov
fldenv
push
mov
cmp
mov
fcmove
mov
sub
add
mov
dec
loope
jg
popa
push
pop
xor
dec
js
leave
push
mov
les
push
xchg
adc
adc
inc
sbb
imul
scas
cmp
push
jnp
mov
jb
mov
outs
jmp
jnp
outs
icebp
inc
mov
add
push
fimul
xchg
xchg
std
or
into
or
mov
fisttp
fst
lods
cs
push
xchg
pop
xchg
dec
mov
push
(bad)
fdivr
fcmovb
das
push
aam
sbb
cs
fpatan
xor
inc
mov
in
lds
(bad)
mov
retf
dec
popa
xor
xlat
xor
cmp
stc
inc
mov
mov
enter
daa
inc
in
sub
mov
or
mov
enter
dec
or
xor
and
add
(bad)
fmul
inc
bound
(bad)
or
sbb
jmp
inc
inc
xlat
fst
pop
or
xor
mov
xchg
shl
or
pop
cld
movs
div
int
mov
movs
push
(bad)
jbe
push
or
and
cmps
mov
pop
sbb
cmps
xor
(bad)
outs
mov
daa
pop
jmp
bound
push
add
aaa
fbld
das
cs
imul
loope
pop
adc
mov
ja
shrd
sub
adc
inc
int3
and
adc
or
jo
xor
fimul
jne
push
imul
and
push
sbb
jmp
inc
sbb
mov
sahf
leave
sub
inc
call
in
mov
xor
shl
and
or
sub
(bad)
lock
cmp
pop
cmp
out
pop
lahf
stos
popa
(bad)
sahf
xor
jecxz
sbb
mov
push
dec
add
les
mov
mov
cmp
retf
in
test
adc
arpl
rcl
add
pusha
call
fld
pop
fs
pop
dec
retf
cmp
test
repnz
pop
xor
sub
and
xchg
fs
xlat
jmp
rcl
loopne
xor
and
jge
ins
movs
adc
(bad)
sbb
imul
sahf
inc
dec
loopne
not
xor
(bad)
fwait
and
mov
retf
mov
into
inc
or
inc
movs
mov
pop
int
les
pop
push
bound
loope
and
pop
mov
sahf
sub
ds
inc
lock
and
fcmovnb
inc
or
push
cmps
jmp
(bad)
jne
in
push
dec
and
(bad)
dec
or
sub
jmp
in
mov
sub
out
push
or
pop
and
inc
pusha
cmp
xchg
pop
into
dec
or
sub
outs
mov
push
inc
mov
mov
iret
push
(bad)
outs
sbb
loope
mov
jg
inc
adc
fst
bound
jmp
ins
adc
leave
icebp
adc
xchg
aas
mov
ins
nop
inc
sub
icebp
adc
je
sub
stos
xchg
shl
mov
cs
ja
jmp
in
mov
cmp
or
fnsave
cmp
int3
pop
and
pop
inc
icebp
xor
mov
test
mov
(bad)
sti
mov
cs
arpl
movs
pop
ds
es
xchg
das
gs
push
adc
or
rcr
push
stos
adc
inc
bnd
push
aad
mov
push
push
(bad)
sbb
stos
fwait
ins
cmp
sub
dec
lea
jmp
or
bound
sbb
sbb
adc
pop
jmp
inc
push
mul
jns
jle
cwde
outs
push
push
push
mov
jb
(bad)
lds
adc
xor
or
(bad)
xor
ins
inc
sub
lds
enter
popa
sub
jae
jecxz
jge
and
mov
adc
or
inc
(bad)
(bad)
xor
(bad)
rcr
add
outs
sbb
call
lock
dec
pop
or
cmp
test
bound
xchg
shl
cmp
retf
cs
push
mov
repnz
ret
inc
pop
mov
inc
xor
clc
loope
xor
and
scas
adc
sbb
push
outs
mov
lods
sub
inc
pusha
push
int3
jno
(bad)
stc
sbb
loope
rcl
xor
call
push
or
test
adc
and
ins
mov
dec
pop
scas
or
sub
push
xchg
pop
adc
xchg
xchg
mov
sbb
shr
jecxz
ret
add
(bad)
adc
test
mov
jbe
sub
xchg
jno
mov
cmp
ficomp
jne
add
sbb
scas
repz
inc
sar
popf
pushf
inc
or
add
cmp
movs
jb
pop
jns
xchg
jb
lldt
pop
sub
fcmovnb
popf
xchg
mov
fst
mov
add
mov
push
enter
push
ja
push
dec
(bad)
dec
or
sub
push
leave
mov
loope
adc
dec
push
add
rcl
push
sbb
inc
cmp
push
push
push
sbb
cmp
or
rcl
sub
jno
jbe
pop
loope
sbb
pusha
dec
sbb
pop
mov
mov
ret
out
push
int
fcomp
imul
(bad)
adc
xchg
inc
ret
push
inc
jne
inc
inc
clc
pusha
mov
pop
popf
ins
jge
xchg
mov
cmp
retf
addr16
test
xor
cmp
xor
sbb
enter
push
xor
pushf
mov
cmp
add
and
test
js
push
inc
and
cmc
repz
mov
push
inc
sbb
cmps
mov
imul
cmps
push
cdq
in
mov
arpl
(bad)
in
movs
and
inc
sub
mov
pop
(bad)
pusha
sbb
xchg
xlat
in
scas
and
xor
push
ins
pushf
cld
into
xchg
fcomp
pop
stos
adc
(bad)
ja
dec
mov
aaa
add
lods
xchg
cmp
mov
dec
cmps
push
repz
scas
dec
inc
and
mov
pop
jle
push
dec
mov
pop
les
push
bound
xchg
pushf
test
fcmovne
adc
call
mov
inc
cmps
nop
push
movs
sub
mov
cmp
xor
xchg
or
xchg
data16
inc
arpl
jb
daa
add
mov
aas
mov
xor
dec
xor
push
push
pop
gs
push
popa
retf
mov
retf
inc
mov
(bad)
or
fnstenv
icebp
jns
pushf
add
icebp
sub
push
adc
mov
lds
mov
and
sbb
daa
push
aaa
push
lds
dec
imul
add
mov
sbb
std
pop
add
pop
inc
mov
cmps
push
and
pop
jno
rcl
sub
push
rcl
in
sti
pop
ret
dec
mov
gs
pop
ja
push
or
sahf
shr
add
out
cmp
inc
cmp
in
inc
mov
fcomp
mov
out
rcr
jae
jns
cwde
pop
mov
dec
mov
aas
test
adc
movzx
(bad)
sbb
das
jge
mov
pop
add
stc
sub
fcomp
sub
std
pop
mov
(bad)
or
sar
dec
(bad)
mov
cmps
jae
add
call
pusha
add
loop
adc
fwait
push
sbb
pushf
add
dec
jmp
mov
in
xor
dec
add
add
adc
je
adc
(bad)
mov
(bad)
gs
test
loope
pushf
popf
cmp
mov
cmp
sub
(bad)
push
jae
and
fwait
repz
movs
stos
inc
push
sbb
test
sbb
lock
jmp
dec
lods
(bad)
sub
or
pop
loope
sub
dec
dec
mov
or
xor
xor
push
daa
ins
adc
jecxz
mov
in
sbb
movs
das
ss
xlat
xor
repnz
jl
aad
jbe
fmul
inc
jo
enter
jmp
jbe
cwde
xor
add
nop
lock
mov
lds
add
dec
push
in
or
mov
xchg
push
(bad)
lds
xor
loopne
(bad)
sahf
jl
sbb
and
pop
sbb
loope
jmp
dec
adc
out
sbb
lahf
xchg
enter
popf
cdq
pop
sub
push
call
int3
cmp
cmp
mov
fs
dec
popa
aas
cmps
lds
xlat
pushf
adc
retf
pop
bound
xlat
imul
mov
loopne
into
ss
fld
pop
dec
jecxz
mov
sbb
mov
xchg
mov
inc
and
lds
aad
int
dec
push
mov
sub
es
aam
sbb
push
enter
fld
and
push
cmc
or
call
neg
cmps
jns
test
add
dec
sbb
into
jb
shl
les
and
test
mov
jnp
xchg
add
mov
mov
or
push
pushf
cli
sar
sub
out
pop
sub
dec
mov
mov
xor
loopne
mov
xor
jge
call
loopne
add
std
nop
or
stc
je
ins
enter
inc
loope
adc
sbb
xchg
imul
push
or
add
arpl
dec
das
retf
nop
and
out
lahf
lahf
cmc
push
pop
sub
and
lahf
leave
es
mov
jne
or
mov
xchg
loope
sub
pop
adc
cmp
int
pop
enter
push
inc
test
sar
xchg
jmp
fwait
jo
gs
add
sub
popa
adc
scas
push
rol
inc
jp
imul
adc
dec
outs
mov
mov
jg
loopne
in
fnsave
js
and
loope
mov
or
and
mov
xchg
sbb
(bad)
out
jae
movs
xor
dec
aas
inc
or
add
cmp
je
ins
cli
pop
mov
outs
push
in
add
jo
call
pusha
loopne
xchg
or
dec
(bad)
imul
mov
dec
sti
mov
lock
add
dec
dec
and
cmp
pop
add
retf
mov
ins
lahf
xchg
hlt
aad
adc
shl
jne
xchg
xchg
xchg
icebp
inc
adc
sar
fcomi
push
ins
pop
test
div
sub
shl
push
sbb
(bad)
jne
lahf
sub
mov
dec
test
xchg
jno
mov
clc
stos
jmp
pusha
ja
fimul
jae
fs
fbstp
or
dec
cmps
inc
cmp
fst
sub
mov
mov
enter
bound
cmp
outs
imul
cmp
adc
pop
push
jmp
pusha
mov
cmp
sub
adc
xlat
cmp
mov
jmp
test
aam
jb
adc
xor
cmc
jmp
and
mov
mov
retf
retf
sbb
push
dec
mov
cdq
test
loope
rcl
jne
adc
xchg
pop
adc
lods
repz
pop
adc
mov
test
push
popf
aad
mov
pop
in
cmp
enter
pop
xchg
jae
mov
mov
outs
dec
mov
fwait
mov
aas
scas
mov
movs
adc
push
cmp
xor
push
inc
push
push
test
les
inc
fs
fidiv
mov
ins
mov
in
ins
and
aaa
icebp
test
lea
xchg
mov
or
daa
xchg
mov
fucomp
aam
repnz
adc
fisttp
es
pop
inc
(bad)
lock
pop
lahf
nop
pop
mov
xor
sub
imul
push
test
sub
fwait
(bad)
ins
pop
push
adc
push
ret
cmps
js
test
rcl
xchg
push
mul
sbb
sbb
arpl
mov
(bad)
fld
outs
pushf
mov
sbb
push
or
lahf
push
daa
dec
pop
and
sti
mov
pop
push
dec
addr16
jns
sub
pushf
sub
nop
aaa
adc
cmp
rol
addr16
movs
add
or
mov
int3
aam
out
ja
retf
jbe
in
jns
retf
dec
cmps
sbb
and
inc
mov
sbb
bnd
add
and
cdq
xor
dec
ret
aad
loope
dec
int
pop
or
inc
cmps
push
inc
shl
pop
pop
or
fwait
adc
popa
and
xchg
xor
mov
test
scas
jb
dec
xor
das
xor
dec
and
and
mov
int
popa
jge
sub
adc
(bad)
data16
mov
repnz
jmp
mov
arpl
inc
inc
add
mov
sti
jge
jg
jae
sbb
adc
xor
test
lds
dec
pusha
xor
out
add
arpl
pop
call
in
lahf
jmp
inc
pusha
(bad)
lods
lods
ds
adc
inc
enter
fwait
inc
(bad)
pop
std
xchg
mov
add
int3
jo
dec
inc
push
cmps
js
call
add
cld
popa
pushf
push
sub
loope
call
leave
les
mov
fcom
sbb
aas
cwde
fwait
xor
scas
sub
test
or
xchg
int
and
mov
jg
mov
in
xlat
sub
dec
pop
mov
mov
icebp
pusha
int3
lods
xchg
sbb
cmp
jl
and
adc
or
xlat
adc
loop
mov
push
xor
fld
int
je
stos
xchg
(bad)
sub
aad
inc
or
pop
lods
xor
frstor
xor
cmp
xchg
movs
pop
xchg
std
ret
cmp
inc
jnp
xchg
addr16
repz
dec
or
sahf
outs
pop
jbe
xchg
out
fwait
popa
fwait
int
dec
push
test
xor
mov
(bad)
std
jl
ins
rol
mov
shl
call
test
mov
adc
jecxz
cmps
xor
repnz
xchg
inc
jae
data16
ins
out
mov
mov
(bad)
ficom
cld
jo
cmp
enter
clc
nop
sub
xchg
adc
and
outs
stos
push
mov
add
dec
jae
sbb
pop
push
mov
lods
cmps
imul
xchg
inc
dec
pop
sub
adc
adc
jecxz
lea
mov
and
xor
outs
cli
push
fwait
loope
dec
sbb
adc
popf
sbb
cmc
aaa
jae
je
ficom
sahf
jbe
call
adc
jle
pop
and
dec
and
jmp
lock
adc
aas
xor
mov
(bad)
aas
push
ins
sbb
sahf
in
nop
jae
dec
ret
imul
jmp
inc
ins
mov
pop
loop
and
or
ja
fstp
jns
pop
stos
or
aad
stos
mov
and
inc
dec
xchg
or
adc
movs
lods
push
pop
into
add
int3
(bad)
jb
mov
sbb
icebp
out
inc
mov
push
mov
aam
mov
ret
add
lahf
mov
sub
dec
xchg
inc
pop
pop
push
jo
ins
sub
mov
test
aaa
rol
(bad)
push
push
mov
pop
cmp
push
cli
dec
inc
xor
(bad)
jbe
sub
imul
inc
mov
and
adc
dec
mov
jg
cwde
mov
pop
adc
jle
(bad)
mov
sbb
pusha
jle
and
jb
out
leave
fwait
mov
ins
cmps
sbb
mov
xchg
nop
repnz
ds
and
mov
dec
and
int
sbb
cwde
add
loop
sub
movs
(bad)
xchg
sub
int3
sub
scas
or
pop
and
add
in
push
test
popa
sub
aam
cli
in
pop
adc
jecxz
mov
je
ss
ret
hlt
xchg
jb
mov
mov
aaa
sub
adc
pusha
clc
mov
xchg
das
inc
push
adc
fst
loop
mov
stc
fsubr
mov
mov
push
fld
jae
sti
in
inc
and
pop
cmp
clc
xchg
ja
adc
call
stc
sub
push
js
call
lods
mov
xor
leave
push
ret
jb
fwait
(bad)
ds
sub
aad
adc
or
(bad)
retf
ja
and
lock
sbb
test
pop
fwait
and
int3
loopne
sub
sbb
gs
mov
mov
mov
dec
sbb
in
or
dec
arpl
icebp
sbb
mov
xchg
cmp
movs
call
inc
adc
in
shl
sbb
adc
lock
add
jg
loop
or
(bad)
pop
and
pop
cmp
mov
imul
mov
xchg
rcl
xor
inc
jo
test
stc
mov
js
in
ins
pop
scas
sbb
fcomip
not
push
sahf
or
popf
and
xor
and
mov
jbe
movs
jg
ins
inc
scas
out
(bad)
lea
idiv
inc
push
loope
lea
enter
push
leave
adc
mov
and
jecxz
test
pop
push
js
dec
lods
add
or
pop
mov
jp
add
bound
xor
pop
imul
pop
pop
les
sti
lock
ds
cmc
jno
jge
push
popa
adc
test
(bad)
mov
mov
mov
pop
or
pop
(bad)
jle
call
leave
pop
sub
inc
dec
stos
cmps
adc
pop
stos
and
lods
mov
fs
out
jp
cmp
jmp
ret
push
or
and
mov
pop
xchg
mov
mov
dec
push
add
xor
leave
inc
jo
xchg
cwde
and
push
mov
pop
retf
lods
cld
xchg
inc
push
dec
sub
(bad)
jne
popf
jnp
fs
in
sub
in
(bad)
jns
jbe
sbb
inc
cmps
jno
cmp
ins
stos
repz
sahf
jecxz
fisttp
test
jmp
dec
shr
adc
jg
jnp
ret
dec
loopne
inc
xchg
mov
js
scas
jae
cmc
push
call
pop
ret
fld
cli
jmp
adc
mov
xchg
fcomp
mov
sbb
inc
sbb
inc
cmps
div
adc
and
mov
add
sub
jmp
aas
adc
pop
push
adc
jb
mov
xor
mov
cmps
sti
jnp
pop
(bad)
hlt
addr16
in
stc
or
ficom
sti
xchg
xor
inc
data16
mov
cmc
or
pop
movs
add
xor
pop
pop
fadd
into
jno
popa
enter
jnp
pop
in
enter
pop
cs
adc
mov
push
stc
jne
add
ins
lea
dec
gs
clc
pusha
fwait
jecxz
inc
into
popa
pop
xor
add
push
xchg
lahf
push
test
(bad)
lock
inc
iret
add
movs
stos
xchg
mov
jnp
loope
xor
xchg
aam
or
shrd
out
aam
mov
jge
addr16
enter
cwde
(bad)
cmp
hlt
fbld
scas
and
in
cld
mov
mov
jb
loopne
loop
imul
push
movs
mov
mov
ret
xor
ins
mov
out
(bad)
xor
pop
sub
fld
or
stc
stc
dec
pop
jecxz
fisubr
adc
inc
jmp
movs
inc
mov
scas
rcl
data16
cmc
mov
mov
and
xchg
dec
stos
xchg
loopne
movs
dec
jb
adc
sbb
fs
and
cmp
stos
mov
add
dec
mov
sbb
jb
aam
jecxz
cmc
(bad)
mov
mov
and
mov
sub
jns
out
aas
adc
fwait
retf
push
jle
pop
sub
push
call
and
sbb
(bad)
retf
pop
add
xor
mov
or
add
and
pop
jmp
xchg
cmp
pop
cwde
icebp
jae
stos
or
(bad)
xchg
test
cdq
sbb
push
adc
cs
mov
cmp
inc
test
cmp
imul
cdq
leave
and
cmc
xchg
xor
mov
scas
shl
jl
mov
dec
dec
bnd
loope
jle
pop
loope
cmp
fs
mov
pop
lahf
retf
jns
mov
xlat
popf
pushf
fs
mov
call
repz
cdq
out
sbb
dec
dec
(bad)
push
push
push
cmp
test
lahf
js
(bad)
test
mov
aaa
addr16
xchg
fs
adc
out
lods
pushf
icebp
cmp
fistp
and
dec
add
xchg
push
into
adc
(bad)
repnz
int
add
mov
cs
push
les
jg
jo
pop
sbb
test
pop
sub
xor
stc
das
fisubr
aam
inc
jmp
cmc
lods
push
cs
mov
mov
push
outs
dec
pop
or
mov
retf
mov
leave
jne
push
and
mov
cli
lods
hlt
mov
jp
inc
fwait
cmp
pop
ficomp
cmp
or
scas
rol
mov
int3
push
mov
int3
test
cmps
fsub
jae
dec
xchg
pop
sub
enter
jae
pushf
add
(bad)
mov
push
fdiv
pop
mov
dec
mov
dec
xlat
and
ds
add
jp
fcmovnbe
pop
es
add
xchg
mov
mov
or
xor
jmp
mov
sub
xchg
inc
mov
xchg
push
cmp
push
push
cwde
jns
push
ret
lahf
and
xor
sub
pop
xor
adc
add
mov
dec
stc
in
dec
xlat
jp
data16
lods
(bad)
ins
(bad)
mov
dec
loopne
rcl
mov
nop
aaa
repnz
call
ror
ss
scas
mov
dec
fcom
xor
je
jp
inc
dec
ret
sub
adc
pop
sar
sub
add
pop
ror
jg
dec
or
jo
mov
xor
rcr
adc
retf
xor
jge
movs
xchg
mov
sub
jnp
movs
pop
inc
xchg
cmp
xchg
test
or
jmp
xor
out
add
or
scas
dec
pop
mov
loopne
rol
sar
retf
jae
cmp
adc
test
ins
ret
pop
adc
icebp
push
addr16
(bad)
jo
add
rcr
or
jnp
retf
push
fucomi
(bad)
test
test
mov
pusha
fnstsw
jno
fdiv
into
arpl
inc
jle
in
mov
push
pop
xchg
dec
dec
es
ret
fcmovu
or
push
int
arpl
mov
and
daa
push
jg
jns
out
aaa
cld
pop
pop
dec
push
out
shl
adc
fs
sbb
pushf
push
push
adc
call
jnp
fisubr
sbb
gs
mov
pop
sar
int
push
mov
jno
stc
push
jns
push
jne
or
mov
push
unpckhps
jmp
push
jo
clc
pop
outs
sub
es
mov
xchg
or
stos
jecxz
and
(bad)
scas
push
retf
leave
xlat
add
jle
mov
xchg
jg
les
adc
in
xor
or
cmp
cmp
add
ret
test
jbe
jbe
sub
pop
xchg
mov
ins
ret
xchg
lock
sbb
xchg
fwait
push
xchg
inc
pusha
cs
pop
loope
sub
scas
or
fs
or
call
fcmovnbe
loope
je
rol
sbb
mov
stos
fnstsw
push
ds
mov
int3
imul
inc
dec
push
push
retf
test
hlt
test
cmp
xor
sti
adc
pop
inc
sub
aad
mov
and
leave
int3
imul
iret
stos
xlat
sub
out
mov
or
sbb
inc
inc
xchg
jge
inc
push
mov
sbb
xchg
xor
fcom
test
inc
into
push
sbb
sub
retf
cs
movs
add
push
cmp
adc
sbb
mov
clc
fild
sbb
add
adc
jbe
mov
scas
adc
xor
jg
push
sbb
cmovbe
xor
pop
test
int3
xor
shl
loopne
stc
xor
retf
jo
mov
scas
push
popf
and
ss
call
movaps
push
jns
sub
imul
sub
movs
addr16
call
in
add
jno
ror
dec
xor
add
(bad)
iret
aam
fmul
or
movs
and
arpl
dec
stos
leave
movs
pop
sub
push
nop
mov
loope
and
mov
lds
movs
add
xchg
sbb
mov
jne
enter
mov
inc
jmp
not
mov
cwde
aaa
pop
movs
scas
test
outs
and
es
mov
dec
mov
xor
ret
dec
not
mov
cmp
jle
aas
fcom
test
or
push
lea
lahf
pop
sbb
bound
mov
mov
pop
sub
aam
cs
adc
pop
push
dec
jmp
cmps
mov
in
cmp
lea
outs
jmp
imul
mov
and
lock
push
adc
or
xchg
(bad)
popa
aam
sub
mov
arpl
dec
dec
dec
xor
int3
mov
mov
and
ss
mov
and
fld
je
xchg
popf
aaa
jbe
scas
or
mov
aaa
xchg
xchg
sub
aas
adc
dec
dec
ss
rcr
loope
div
xchg
push
je
test
add
aam
out
push
out
fmulp
dec
mov
in
(bad)
retf
jo
mov
(bad)
in
das
fldenv
leave
test
sub
sbb
cmps
fisub
imul
rol
pop
sbb
pop
fwait
and
popa
inc
sbb
aaa
test
xor
addr16
inc
in
shr
pushf
dec
mov
popa
adc
jo
enter
(bad)
push
and
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
loope
adc
add
xor
sbb
popa
(bad)
into
jns
imul
fstp
shl
(bad)
shr
(bad)
rol
fstp
fbstp
(bad)
test
fcompp
(bad)
fcompp
fild
fsubp
fisttp
fucom
fimul
fisttp
dec
inc
fmul
adc
(bad)
lea
or
sbb
outs
sbb
push
add
frstor
cmp
add
mov
inc
or
and
in
and
xor
and
xor
jmp
pop
and
dec
add
nop
add
and
jmp
pop
sub
mov
xchg
add
sub
mov
bswap
or
rol
jmp
pop
not
and
add
sub
shr
dec
sub
shl
jmp
pop
and
rol
jmp
push
bswap
and
and
shl
or
add
or
sub
xor
add
and
or
jmp
call
xchg
inc
ror
neg
mov
and
or
add
shl
xchg
sub
and
jmp
pop
sub
and
and
and
ror
mov
mov
xor
not
jmp
rol
mov
add
add
shr
or
nop
shr
or
mov
or
xor
bswap
ror
jmp
nop
and
shl
or
dec
rol
add
or
xchg
jmp
rol
or
xor
sub
ror
shr
xor
or
jmp
call
and
dec
and
or
not
and
xchg
jmp
mov
sub
and
not
sub
add
shr
or
add
shr
jmp
push
xor
rol
jmp
pop
add
xor
sub
and
add
mov
and
bswap
shr
jmp
sub
mov
and
jmp
call
xor
add
not
mov
jmp
pop
and
ror
or
inc
sub
or
xor
xchg
add
jmp
mov
sub
mov
sub
xchg
neg
jmp
call
xor
shl
sub
mov
add
xchg
xchg
jmp
pop
mov
xor
not
xor
inc
xchg
xchg
jmp
pop
xchg
sub
xor
and
inc
xor
or
add
jmp
mov
mov
xchg
sub
sub
add
not
not
sub
xchg
rol
and
dec
mov
jmp
push
sub
sub
dec
or
xor
jmp
mov
xor
xor
sub
sub
not
and
mov
add
not
jmp
call
add
or
sub
shr
neg
rol
add
sub
add
xor
or
jmp
pop
sub
xchg
xchg
inc
xor
bswap
xor
or
bswap
and
xor
shr
jmp
pop
sub
or
nop
and
mov
sub
jmp
pop
xor
add
mov
xor
and
not
and
xchg
inc
add
ror
neg
jmp
pop
shl
not
not
xor
xor
mov
xchg
mov
shl
xor
jmp
add
mov
shr
jmp
call
add
rol
not
add
or
or
rol
and
or
xor
rol
mov
jmp
push
shl
mov
and
bswap
add
shl
add
jmp
sub
xchg
mov
xor
sub
nop
bswap
inc
add
or
jmp
rol
not
add
xchg
add
and
xchg
add
dec
and
add
xor
shl
jmp
xchg
xchg
and
xchg
or
xor
xchg
jmp
push
xor
shl
mov
xor
sub
not
and
and
sub
bswap
jmp
add
or
shl
add
inc
xor
nop
and
jmp
call
or
xchg
xchg
or
mov
nop
or
jmp
push
bswap
xchg
xor
xchg
sub
and
shl
add
jmp
mov
xor
or
sub
mov
add
ror
rol
sub
sub
dec
sub
jmp
push
xor
mov
ror
rol
xchg
sub
and
shl
xchg
bswap
xor
rol
and
jmp
push
or
or
xor
inc
xor
xchg
or
mov
and
and
xor
sub
mov
not
mov
jmp
mov
sub
and
bswap
bswap
jmp
call
shl
or
xor
and
not
rol
xor
sub
jmp
pop
xor
and
add
add
sub
sub
ror
mov
add
rol
and
mov
xchg
jmp
push
bswap
sub
or
neg
sub
ror
rol
jmp
mul
and
or
mov
or
jmp
sub
add
or
and
xchg
not
inc
and
dec
nop
or
xor
xor
sub
xor
sub
jmp
mov
shl
add
dec
or
mov
sub
or
jmp
mov
xchg
xor
and
xor
xor
xor
sub
jmp
rol
and
mov
xor
jmp
or
xor
and
xor
sub
jmp
pop
and
sub
xor
xchg
and
or
rol
dec
or
jmp
pop
xor
xor
jmp
push
neg
xor
add
xchg
or
jmp
mov
add
xor
xchg
ror
shr
sub
not
sub
jmp
call
shr
sub
add
xor
not
or
inc
jmp
call
or
xchg
and
sub
dec
mov
jmp
mov
nop
or
sub
and
sub
add
jmp
push
add
mov
or
shr
and
jmp
mov
mov
mov
xor
mov
shl
xor
neg
xor
mov
sub
xchg
sub
and
and
bswap
jmp
mov
and
shl
shl
add
and
xchg
mov
inc
or
not
and
jmp
pop
add
and
add
add
xor
xchg
and
xor
jmp
rol
add
and
xor
xchg
xchg
xor
xor
and
sub
and
jmp
pop
mov
inc
sub
and
mov
add
rol
xchg
xor
jmp
push
sub
xor
or
and
mov
sub
or
jmp
rol
neg
sub
xor
bswap
xor
ror
jmp
add
mov
sub
add
add
inc
ror
rol
xor
not
or
bswap
xchg
jmp
mov
and
add
xor
bswap
xchg
add
add
add
xor
jmp
pop
mov
shl
bswap
sub
or
sub
ror
mov
xor
mov
ror
and
jmp
call
and
and
not
and
xor
or
mov
not
add
sub
jmp
mov
sub
mov
add
mov
xchg
mov
xchg
and
sub
neg
xchg
jmp
pop
or
or
sub
inc
and
sub
jmp
call
ror
xchg
not
add
sub
and
sub
jmp
pop
neg
not
and
mov
and
xchg
and
mov
sub
jmp
call
xchg
xchg
sub
inc
neg
jmp
push
xor
xchg
or
xchg
xchg
neg
not
inc
and
mov
xchg
jmp
rol
dec
or
rol
or
neg
add
sub
jmp
pop
xor
sub
or
add
sub
mov
sub
shr
xor
mov
inc
mov
and
bswap
ror
xchg
jmp
mov
and
add
xor
ror
sub
sub
and
jmp
pop
or
xor
and
dec
sub
and
mov
add
add
mov
or
jmp
push
or
and
xor
neg
add
and
or
mov
ror
or
bswap
jmp
add
xor
xor
or
and
sub
mov
xchg
shr
ror
sub
xor
and
or
mov
ror
jmp
call
xchg
mov
neg
or
dec
xchg
add
and
shl
and
jmp
push
sub
mov
add
sub
add
shr
add
or
sub
jmp
pop
not
or
mov
sub
shl
and
or
jmp
push
xchg
mov
and
and
sub
xor
add
and
jmp
call
neg
xor
dec
not
shl
xchg
add
and
sub
and
xchg
xchg
jmp
call
or
add
or
add
xor
xchg
dec
and
shl
jmp
call
bswap
xor
and
or
add
and
and
not
xor
bswap
jmp
add
shr
add
mov
and
shl
mov
jmp
call
mov
add
and
xchg
ror
or
add
xor
mov
sub
mov
mov
add
sub
mov
and
jmp
call
and
or
rol
sub
sub
or
dec
and
jmp
ret
xchg
and
and
xchg
inc
neg
jmp
call
mov
xchg
inc
sub
add
and
add
jmp
call
ror
add
bswap
shl
sub
sub
mov
xchg
not
neg
shl
jmp
pop
add
add
mov
or
mov
xchg
xor
jmp
mov
and
not
add
mov
ror
jmp
pop
mov
and
sub
and
not
add
xor
jmp
mov
add
or
or
mov
xor
or
ror
and
xchg
add
mov
nop
shl
jmp
add
neg
xor
add
bswap
bswap
inc
xchg
mov
sub
jmp
mov
or
or
shr
sub
dec
xor
xor
xor
xor
add
jmp
pop
mov
xchg
or
or
shr
xchg
xor
or
sub
xor
jmp
push
xor
mov
add
add
ror
and
xor
rol
sub
or
mov
ror
jmp
nop
and
mov
ror
sub
dec
and
and
add
jmp
mov
inc
mov
neg
sub
or
mov
xchg
inc
jmp
rol
add
add
jmp
push
mov
xchg
add
xor
sub
mov
add
jmp
call
dec
shl
add
add
dec
shr
sub
jmp
ret
shr
not
and
sub
mov
add
sub
and
xor
shr
xor
sub
sub
add
sub
dec
jmp
push
sub
mov
xor
rol
not
mov
add
sub
or
and
rol
inc
xchg
mov
jmp
push
add
sub
and
and
xor
jmp
call
sub
and
or
add
sub
and
mov
jmp
push
xchg
and
ror
add
or
jmp
mov
mov
or
sub
sub
and
ror
mov
add
xchg
sub
jmp
pop
mov
xchg
shr
or
add
dec
and
rol
mov
add
xor
add
jmp
call
xor
mov
shl
jmp
push
xchg
xchg
add
inc
dec
add
bswap
mov
shl
or
sub
jmp
mov
or
or
not
rol
and
add
not
xchg
jmp
pop
mov
xchg
mov
xor
add
xchg
or
shr
or
jmp
call
add
and
and
mov
inc
xchg
xchg
xor
rol
sub
jmp
push
add
add
or
xchg
shr
xchg
xchg
add
jmp
mov
and
add
rol
mov
shr
xor
or
sub
dec
not
xchg
xchg
and
jmp
call
xchg
xchg
mov
dec
add
xchg
and
sub
sub
jmp
xor
add
add
bswap
sub
xor
inc
and
or
jmp
mov
add
xchg
dec
mov
shl
and
xor
or
or
xchg
or
xor
jmp
mov
xchg
xchg
xor
dec
xor
add
and
xchg
jmp
pop
shl
mov
xor
add
mov
mov
jmp
mov
or
sub
and
and
jmp
push
rol
add
shl
sub
or
jmp
mov
sub
shl
or
add
rol
sub
jmp
pop
and
mov
xor
sub
xor
or
or
xor
xor
xchg
xor
jmp
mov
not
and
mov
jmp
pop
mov
xchg
xor
mov
shr
or
inc
mov
mov
xor
sub
add
mov
rol
jmp
pop
rol
shr
or
xor
ror
add
ror
ror
or
rol
jmp
push
sub
and
xor
dec
inc
and
shl
add
and
jmp
push
inc
xchg
or
xor
mov
sub
xor
and
neg
rol
shr
neg
jmp
and
not
and
add
xor
not
add
add
jmp
mov
add
add
not
mov
sub
bswap
sub
sub
or
sub
sub
shr
mov
jmp
movzx
xor
mov
or
xor
not
neg
bswap
mov
add
or
xchg
jmp
pop
add
or
or
nop
and
jmp
pop
shr
and
or
shr
not
mov
inc
xor
dec
and
jmp
pop
or
mov
mov
and
sub
or
add
or
sub
xor
xor
dec
mov
jmp
nop
add
mov
sub
xor
xchg
inc
sub
xor
add
add
jmp
push
xchg
xchg
nop
or
add
xor
xchg
jmp
call
xchg
and
sub
or
xor
mov
xor
shl
xor
rol
or
jmp
push
or
sub
ror
xchg
bswap
xor
inc
or
and
jmp
pop
shl
add
xor
jmp
pop
add
xor
mov
shl
and
dec
dec
and
dec
or
xor
xchg
neg
and
sub
jmp
push
xchg
not
and
shl
bswap
xor
sub
or
jmp
call
rol
and
xor
xchg
jmp
call
xchg
xchg
or
or
jmp
push
shr
and
inc
ror
jmp
call
rol
shr
shl
and
or
xchg
add
jmp
mov
shr
dec
mov
shl
not
ror
dec
sub
neg
mov
xor
jmp
push
or
and
or
sub
jmp
pop
add
xchg
mov
or
add
add
xor
and
jmp
call
xchg
not
or
and
ror
bswap
add
shr
xor
and
jmp
push
add
or
or
or
add
or
or
xor
xor
mov
or
or
shr
mov
jmp
rol
mov
or
mov
xor
xchg
xchg
mov
shr
xor
neg
sub
jmp
push
sub
sub
inc
ror
add
shl
ror
sub
and
dec
jmp
mov
or
xor
sub
inc
sub
jmp
pop
or
not
mov
and
dec
and
or
or
xchg
neg
and
sub
jmp
push
mov
shr
xchg
not
add
ror
mov
add
xor
xor
bswap
xor
jmp
call
add
xor
ror
xor
mov
not
dec
and
xchg
neg
inc
xchg
jmp
mov
xchg
mov
shl
and
dec
xchg
shl
jmp
add
or
mov
mov
sub
sub
or
jmp
pop
xor
xor
xor
mov
sub
or
and
mov
jmp
call
sub
sub
and
xor
shr
xchg
xor
xor
jmp
mov
mov
or
xor
xor
add
or
add
shl
xchg
rol
mov
add
shl
bswap
jmp
mov
xchg
xchg
sub
xchg
or
shl
xchg
or
rol
xor
dec
dec
xchg
and
xchg
and
jmp
pop
shr
and
and
xor
add
shl
xor
mov
xchg
xchg
not
add
not
and
inc
jmp
push
or
and
sub
sub
jmp
mov
add
xchg
sub
xor
shr
neg
add
add
and
jmp
mov
and
xor
xchg
mov
xchg
mov
or
xor
jmp
mov
shl
sub
add
xor
add
jmp
call
add
add
neg
xchg
dec
ror
jmp
push
or
xor
dec
add
and
add
xchg
and
jmp
push
or
and
or
and
sub
dec
mov
jmp
xor
add
rol
mov
xchg
and
add
xor
jmp
and
dec
shl
add
add
or
add
xchg
and
xor
xchg
add
sub
jmp
pop
add
mov
rol
neg
xor
add
sub
dec
xor
or
rol
jmp
mov
or
mov
bswap
xor
or
shr
sub
sub
add
inc
sub
rol
or
jmp
call
add
add
xor
dec
and
rol
xor
add
bswap
jmp
call
mov
or
inc
shr
sub
xor
and
add
mov
and
and
mov
jmp
pop
xchg
inc
neg
and
mov
mov
sub
sub
sub
jmp
add
mov
and
xor
dec
or
sub
xchg
and
jmp
call
xor
neg
and
add
or
and
jmp
push
neg
neg
jmp
push
xor
sub
add
sub
mov
jmp
call
xor
sub
xchg
xchg
xchg
not
dec
xchg
sub
jmp
call
add
mov
add
mov
and
xor
bswap
mov
jmp
pop
shr
neg
xor
or
xchg
xor
not
inc
jmp
nop
inc
xchg
bswap
xor
sub
and
shr
sub
xor
xchg
jmp
push
or
or
sub
shr
sub
sub
xchg
and
ror
mov
shl
xor
or
jmp
inc
xor
or
add
and
not
jmp
mov
inc
ror
xchg
xor
xchg
dec
sub
or
sub
xchg
add
mov
jmp
call
ror
or
sub
neg
mov
and
sub
add
add
inc
xor
inc
xchg
bswap
jmp
rol
add
neg
xchg
dec
xor
sub
jmp
mov
bswap
add
add
mov
sub
dec
xor
mov
not
shr
or
nop
and
mov
or
jmp
call
or
xor
sub
or
shr
sub
xchg
shl
and
mov
bswap
inc
or
jmp
mov
xchg
xchg
or
xor
and
shl
xor
rol
neg
add
jmp
push
shl
xchg
add
mov
ror
shr
sub
or
sub
jmp
xor
or
add
add
mov
mov
xchg
xor
sub
and
jmp
pop
xor
mov
add
inc
jmp
push
nop
and
or
and
and
or
and
xor
nop
jmp
push
xchg
add
sub
dec
and
or
xchg
add
and
and
mov
and
jmp
push
mov
and
ror
sub
or
inc
xchg
sub
jmp
push
sub
shl
and
xchg
mov
ror
sub
bswap
jmp
push
xor
add
sub
nop
mov
or
shl
sub
xor
jmp
pop
or
mov
xchg
and
mov
and
xchg
ror
and
neg
or
and
jmp
pop
add
sub
and
mov
neg
sub
or
jmp
jne
mov
xchg
rol
or
or
and
xchg
sub
shl
mov
xor
shr
jmp
ret
and
add
sub
sub
add
shr
bswap
shr
sub
jmp
and
sub
sub
mov
bswap
jmp
mov
bswap
not
xor
rol
shl
jmp
push
sub
sub
neg
shl
sub
xchg
xchg
inc
or
rol
jmp
mov
and
ror
shl
mov
add
xor
mov
jmp
mov
sub
or
add
and
mov
xchg
mov
xor
or
xor
xor
or
xchg
xchg
add
jmp
pop
xor
shr
add
add
jmp
pop
xor
bswap
xor
sub
jmp
push
mov
xor
mov
dec
and
or
shr
add
shl
xor
mov
ror
sub
shl
add
jmp
mov
add
xchg
rol
and
xor
or
sub
or
jmp
pop
and
sub
mov
sub
bswap
and
mov
rol
or
sub
xor
or
jmp
call
add
mov
xchg
inc
jmp
mov
mov
mov
or
ror
mov
xchg
shl
jmp
push
not
xor
or
or
sub
sub
and
sub
sub
mov
jmp
ret
xor
shl
add
xor
not
and
xor
xchg
inc
jmp
add
or
xor
dec
mov
mov
ror
xor
jmp
push
xor
xor
and
and
mov
or
sub
sub
mov
jmp
pop
sub
add
bswap
shl
shl
xchg
ror
add
inc
not
jmp
mov
xor
sub
add
and
add
xor
jmp
add
ror
shr
shl
ror
xor
dec
and
jmp
push
sub
add
or
or
xor
xchg
xchg
sub
bswap
jmp
add
or
add
add
and
dec
or
xor
jmp
add
or
shl
and
rol
and
shr
sub
add
jmp
push
add
or
mov
xchg
bswap
xchg
sub
mov
xor
inc
not
rol
jmp
inc
shr
xor
sub
sub
rol
mov
or
mov
mov
or
jmp
pop
inc
dec
and
sub
ror
mov
add
sub
shr
xor
jmp
mov
xor
xor
sub
bswap
xor
or
shr
dec
xor
dec
xor
jmp
pop
add
and
neg
nop
add
add
sub
or
or
add
jmp
mov
xor
and
xchg
add
inc
mov
jmp
call
mov
rol
or
and
sub
neg
mov
shr
sub
bswap
jmp
pop
or
neg
bswap
shl
sub
jmp
cmp
jmp
call
xor
and
or
rol
and
xchg
add
sub
sub
jmp
call
and
add
or
ror
and
sub
nop
not
rol
and
jmp
push
shr
sub
and
and
dec
dec
and
xor
jmp
mov
bswap
sub
xor
ror
and
xchg
sub
add
or
or
jmp
add
sub
and
or
mov
inc
shl
inc
xchg
xor
ror
shl
add
sub
or
jmp
mov
xor
bswap
and
shr
shl
jmp
pop
dec
and
and
shl
xor
jmp
add
ror
neg
not
xor
rol
and
sub
sub
xor
inc
xchg
xchg
jmp
pop
bswap
add
xchg
and
sub
or
mov
not
ror
shr
sub
sub
jmp
add
xchg
xor
mov
mov
xor
mov
or
xor
ror
and
sub
or
dec
jmp
xor
and
shl
sub
sub
dec
bswap
sub
neg
mov
xor
mov
shl
or
mov
or
jmp
ret
and
add
ror
and
or
add
or
jmp
push
add
neg
or
inc
dec
mov
dec
not
neg
and
xor
jmp
pop
shr
xor
rol
shl
or
mov
xor
jmp
push
mov
not
add
add
or
ror
xchg
bswap
neg
or
jmp
push
and
dec
sub
add
mov
and
dec
sub
sub
xor
jmp
pop
mov
or
xor
and
jmp
add
mov
inc
xor
xor
or
sub
xchg
mov
bswap
xor
add
jmp
mov
sub
and
or
inc
xchg
or
or
jmp
push
and
sub
add
xor
rol
and
sub
xchg
jmp
push
shl
neg
add
jmp
push
or
neg
xchg
not
rol
or
shr
or
and
mov
not
jmp
mov
xchg
xor
xchg
neg
neg
ror
xor
add
add
jmp
xchg
sub
shr
and
not
mov
add
jmp
push
add
dec
sub
sub
sub
jmp
ret
sub
or
or
or
xor
jmp
nop
add
and
mov
xor
xchg
or
sub
add
sub
jmp
mov
sub
and
or
mov
ror
jmp
call
rol
mov
xchg
sub
and
add
mov
xor
add
sub
ror
shr
jmp
shl
or
or
and
xor
xor
inc
and
ror
shr
sub
neg
add
jmp
cmp
jmp
call
and
or
shr
mov
shr
and
mov
mov
xor
add
jmp
pop
or
xchg
ror
mov
xor
nop
xor
ror
xor
add
neg
and
neg
jmp
push
xor
or
and
mov
and
mov
ror
mov
xchg
jmp
pop
sub
xchg
sub
xor
add
xor
rol
not
shr
nop
jmp
xor
mov
ror
not
rol
mov
xchg
and
xchg
jmp
mul
shr
mov
mov
mov
inc
rol
or
sub
jmp
push
nop
xchg
xor
xchg
mov
bswap
mov
inc
xor
xor
add
mov
bswap
jmp
mov
add
sub
neg
inc
or
or
or
shl
xor
shr
ror
not
neg
sub
jmp
push
sub
shl
xor
sub
add
xchg
and
add
neg
xchg
ror
add
mov
jmp
xor
rol
inc
and
mov
or
or
add
jmp
pop
xchg
sub
or
and
mov
xor
add
xchg
xor
or
shl
jmp
add
mov
add
or
shr
neg
add
shl
bswap
jmp
pop
xor
or
shl
shl
rol
or
rol
jmp
pop
mov
sub
xor
inc
and
add
xor
xchg
dec
jmp
mov
and
sub
xor
sub
xor
add
jmp
add
add
mov
shr
xor
or
mov
jmp
push
mov
not
jmp
nop
sub
sub
add
xor
sub
sub
sub
mov
xchg
jmp
push
add
rol
dec
or
xchg
ror
mov
add
inc
xchg
jmp
cmp
jmp
push
add
sub
xor
xchg
shl
and
sub
xchg
mov
or
shr
jmp
pop
xor
xchg
ror
and
jmp
mov
add
add
sub
mov
xchg
xor
add
bswap
and
or
add
rol
shl
jmp
pop
or
mov
or
xchg
rol
mov
not
jmp
call
or
or
add
shr
inc
mov
mov
and
add
jmp
pop
mov
sub
inc
xor
sub
or
mov
ror
and
xchg
shr
xor
jmp
xor
or
add
rol
xchg
jmp
ret
xchg
shl
add
or
add
shl
bswap
add
rol
and
and
xchg
shl
add
jmp
mov
mov
mov
mov
add
and
or
jmp
pop
and
mov
add
and
xor
shl
or
shl
jmp
push
neg
neg
xchg
and
and
mov
sub
or
and
ror
add
shr
mov
mov
jmp
call
add
bswap
sub
jmp
push
add
and
not
add
or
xchg
sub
not
xchg
sub
shr
jmp
rol
mov
xchg
mov
and
not
add
xor
neg
jmp
jne
sub
sub
nop
rol
sub
or
ror
bswap
sub
xor
or
and
jmp
push
or
inc
or
mov
xor
shl
add
or
rol
jmp
pop
xor
xchg
or
sub
mov
jmp
call
xor
dec
xor
nop
mov
nop
xchg
xor
jmp
mov
and
xor
and
bswap
xchg
add
dec
inc
jmp
mov
and
sub
shl
sub
sub
add
add
shl
and
jmp
mov
or
sub
add
rol
xor
or
jmp
pop
xchg
xor
sub
and
or
and
nop
and
xor
jmp
push
add
mov
and
mov
or
shl
and
sub
not
jmp
pop
xor
or
mov
mov
add
rol
add
mov
jmp
add
or
sub
and
mov
xchg
xor
sub
xor
jmp
push
neg
dec
and
sub
sub
not
or
sub
xor
shl
sub
jmp
mov
inc
ror
or
add
or
xor
mov
or
jmp
push
sub
xchg
or
add
and
shl
and
neg
add
mov
or
or
xor
jmp
add
xchg
xor
shl
sub
add
dec
add
and
add
add
rol
or
mov
jmp
push
sub
mov
neg
or
xchg
xor
mov
jmp
ret
xchg
shl
and
xchg
xor
add
not
jmp
mov
add
xchg
xor
add
inc
jmp
mov
mov
xchg
mov
sub
and
xor
not
and
mov
bswap
xor
jmp
push
dec
shl
and
mov
xor
mov
bswap
xchg
jmp
push
xor
sub
xchg
bswap
or
sub
xor
add
jmp
call
xchg
or
mov
xor
mov
not
mov
not
inc
xor
add
xchg
jmp
push
not
neg
or
ror
shr
sub
add
xchg
or
add
jmp
pop
mov
and
sub
xor
sub
xchg
not
xor
xor
and
neg
xchg
xchg
xchg
ror
and
jmp
mov
xor
or
dec
sub
or
inc
add
sub
add
ror
sub
or
xor
jmp
pop
inc
xor
or
xchg
mov
and
shl
add
xor
jmp
pop
and
rol
or
shl
add
xor
bswap
add
or
jmp
mov
and
sub
xor
mov
sub
mov
dec
inc
jmp
push
mov
or
mov
xchg
xchg
shl
and
add
or
jmp
mov
not
or
or
and
shl
xor
xchg
jmp
push
and
sub
mov
ror
add
xchg
and
shl
xor
rol
sub
jmp
jl
neg
shl
inc
sub
xor
xor
inc
jmp
jmp
jmp
jmp
jmp
jmp
