rcl
test
ret
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
push
call
push
call
xor
mov
pop
ret
int3
int3
int3
mov
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
inc
js
je
jb
arpl
jae
xchg
add
gs
add
je
jb
outs
jb
outs
fs
dec
inc
push
dec
inc
dec
xor
cs
ins
add
jae
adc
repnz
pushf
push
push
sbb
mov
xchg
loopne
pop
cmp
xchg
mov
sub
push
mov
dec
mov
cmp
dec
push
dec
in
or
outs
pop
xor
imul
xor
jmp
push
popa
cmps
out
cmps
rol
jae
xor
icebp
adc
xchg
mov
fcom
shr
adc
add
ins
and
mov
jne
dec
icebp
pop
enter
xlat
jge
mov
enter
jo
ret
bswap
jo
cmp
dec
not
mov
dec
imul
xor
lea
ja
dec
or
movsx
and
lea
or
xor
push
je
test
lea
pop
mov
add
imul
dec
imul
test
lea
mov
xor
sub
add
add
lea
sub
add
xor
add
sub
inc
sub
inc
lea
cmp
sub
dec
mov
imul
imul
mov
xchg
mov
add
imul
adc
movsx
mov
bswap
jbe
sbb
mov
xchg
sbb
push
xchg
pop
sub
jne
xor
mov
test
lea
test
xor
xor
sub
add
test
xor
lea
sub
xor
xor
ja
sbb
dec
imul
mov
push
dec
xchg
push
push
cmp
mov
imul
neg
sub
sub
cmp
push
push
movzx
test
dec
xchg
imul
xor
imul
inc
cmp
jo
mov
cmp
jb
dec
lea
inc
imul
dec
sbb
add
xchg
sbb
imul
mov
bswap
cmp
jb
test
jo
movzx
or
dec
push
mov
pop
inc
bswap
mov
movsx
test
xor
push
mov
pop
jne
mov
neg
mov
xor
imul
jmp
mov
movzx
dec
inc
bswap
inc
neg
push
dec
pop
sub
xchg
xor
add
test
xor
xor
dec
push
bswap
pop
inc
add
bswap
xchg
dec
sub
add
imul
xor
lea
mov
dec
add
imul
or
mov
xor
imul
cmp
je
mov
cmp
mov
xchg
push
xor
pop
dec
add
cmp
je
sub
bswap
add
inc
lea
jne
not
jae
mov
sub
sub
cmp
jo
inc
test
and
dec
cmp
jae
imul
lea
dec
movzx
mov
imul
cmp
bswap
inc
imul
push
push
jmp
movsx
cmp
ja
test
mov
imul
inc
add
neg
push
test
pop
sub
or
push
xchg
pop
imul
lea
xchg
and
push
test
pop
jmp
mov
imul
mov
xchg
xchg
test
movzx
mov
mov
sub
sub
sub
mov
mov
mov
xor
or
add
xadd
adc
xor
cmp
jne
bswap
imul
xchg
xor
mov
bswap
xor
not
xchg
imul
imul
mov
test
mov
xor
add
push
test
pop
jmp
lea
bswap
sub
push
pop
adc
add
cmp
js
mov
add
bswap
mov
xor
inc
xadd
cmp
jno
xchg
mov
xor
mov
mov
xor
dec
mov
or
cmp
jne
cmp
mov
neg
test
xchg
adc
mov
jmp
add
jmp
lea
add
movzx
mov
mov
cmp
jb
mov
push
bswap
pop
dec
add
imul
mov
movsx
test
mov
ja
add
adc
test
xchg
test
mov
cmp
mov
lea
xor
add
lea
cmp
js
dec
add
mov
xchg
bswap
xor
mov
mov
add
test
mov
mov
xchg
lea
xchg
mov
test
movsx
mov
xor
imul
xor
ja
mov
or
cmp
jo
mov
xchg
add
mov
mov
inc
jmp
mov
push
mov
pop
dec
sub
bswap
test
mov
sub
or
add
bswap
inc
cmp
jae
imul
lea
js
lea
mov
add
xchg
not
not
dec
mov
mov
adc
movsx
movzx
mov
dec
test
xchg
cmp
ja
imul
mov
mov
imul
mov
push
pop
mov
jmp
mov
xor
imul
xchg
push
cmp
jbe
movsx
pop
xor
xor
cmp
add
xor
adc
mov
inc
sub
imul
xchg
xchg
imul
mov
mov
mov
dec
xor
neg
cmp
xchg
adc
jmp
xchg
bswap
imul
mov
lea
sub
xchg
xchg
add
movsx
mov
imul
add
imul
mov
sub
movsx
mov
lea
imul
cmp
add
test
xchg
cmp
jno
imul
neg
sub
imul
xadd
mov
add
push
mov
cmp
jo
lea
mov
and
mov
and
xchg
mov
imul
xor
xadd
jmp
add
test
add
push
cmp
jb
mov
dec
cmp
js
cmp
mov
imul
add
imul
imul
mov
mov
test
add
inc
imul
movsx
mov
mov
imul
xor
dec
sub
xor
mov
sub
movsx
push
ja
inc
neg
not
pop
inc
add
cmp
ja
lea
test
movsx
xor
sub
xchg
test
jne
xchg
mov
lea
xor
or
sub
inc
neg
lea
imul
and
mov
test
bswap
imul
mov
lea
push
bswap
pop
adc
mov
not
mov
neg
add
imul
shl
dec
sbb
dec
lea
jne
lea
imul
or
add
bswap
add
push
test
mov
mov
lea
xor
add
xchg
sub
sub
imul
bswap
mov
add
add
mov
test
push
pop
sbb
or
mov
or
movzx
mov
cmp
je
test
sub
and
sub
push
imul
jne
xchg
imul
imul
imul
sbb
shr
xor
shr
cmp
js
neg
or
shr
xchg
shr
inc
shr
jo
movzx
xchg
shr
cmp
jb
test
xchg
movzx
cmp
dec
imul
mov
mov
sub
mov
adc
or
push
cmp
ja
movsx
mov
dec
movzx
pop
mov
mov
cmp
ja
mov
test
bswap
mov
imul
xor
sbb
pop
inc
bswap
imul
mov
cmp
jb
lea
not
bswap
add
jbe
lea
xchg
pop
mov
mov
test
add
mov
mov
add
add
je
imul
sub
xchg
adc
push
pop
imul
and
imul
xchg
imul
xor
xchg
add
dec
add
sub
dec
imul
add
imul
test
imul
dec
dec
lea
cmp
jo
test
not
adc
movzx
lea
jae
imul
mov
add
neg
sbb
lea
lea
imul
movzx
mov
cmp
lea
and
neg
imul
movsx
test
mov
mov
mov
dec
js
inc
add
jmp
sub
lea
mov
xchg
ja
test
not
xor
mov
mov
lea
bswap
neg
add
cmp
je
imul
neg
xor
dec
add
mov
adc
xchg
js
test
mov
dec
and
push
imul
pop
xor
lea
sub
add
xor
xor
mov
xor
lea
mov
bswap
add
jo
bswap
imul
mov
inc
add
or
or
imul
lea
push
jo
neg
pop
test
sub
imul
mov
cmp
inc
sub
mov
add
xchg
xchg
movsx
cmp
jae
jmp
movsx
mov
test
dec
xchg
dec
jmp
add
dec
imul
mov
cmp
mov
cmp
jae
not
xor
test
add
mov
imul
xchg
test
test
lea
cmp
jbe
imul
mov
mov
add
movzx
inc
mov
cmp
js
xchg
mov
mov
dec
mov
push
jae
inc
pop
imul
push
pop
cmp
xor
mov
bswap
xor
test
or
cmp
jb
imul
add
mov
add
xchg
add
imul
add
imul
sub
dec
add
mov
cmp
jl
ret
xchg
mov
imul
mov
sub
mov
cdq
mov
sub
pop
jo
stos
xchg
dec
movs
cmps
cmp
xchg
cmps
mov
cmp
mov
inc
call
mov
jmp
mov
cwde
mov
sbb
mov
sbb
pop
mov
stc
lock
mov
out
rol
popf
inc
in
mov
icebp
daa
push
sub
pop
adc
or
mov
lea
clts
test
into
sti
cmp
scas
mov
adc
cmps
ss
call
or
sbb
clc
mov
mov
or
mov
fstp
add
(bad)
lods
leave
fcmovb
into
pop
shl
int
pop
cmps
pop
nop
xlat
jp
jns
(bad)
int
push
pop
dec
(bad)
xchg
or
mov
xchg
cld
mov
mov
shl
xchg
popf
sub
push
push
daa
or
xor
retf
bswap
xor
dec
mov
lds
aad
add
cs
or
retf
jae
adc
call
jno
jmp
xchg
sbb
cmp
ins
movs
rol
inc
jp
jae
dec
scas
clc
test
cmp
mov
imul
or
cmp
ins
sub
mov
push
push
(bad)
cmp
bound
xchg
nop
jns
inc
stos
test
imul
cmp
pop
and
xchg
das
mov
neg
xor
and
clc
or
inc
pop
mov
fsubp
xor
cli
mov
es
inc
and
test
mov
out
mov
not
jmp
cmp
pushf
(bad)
or
addr16
or
dec
sbb
int3
pop
test
cmps
pop
retf
mov
fdivr
out
mov
mov
sbb
cmp
dec
repnz
mov
aad
xchg
rcr
add
fcom
imul
adc
aad
arpl
cmp
mov
sahf
mov
mov
fdivp
xabort
fs
in
loop
mov
jge
or
cmp
data16
mov
fnstsw
dec
inc
daa
adc
jmp
cmp
mov
adc
js
ins
shr
cmp
xchg
and
cmc
(bad)
fadd
shl
jbe
movs
inc
pop
mov
popa
mov
into
or
inc
push
test
push
sbb
inc
sub
jns
xor
xchg
jg
cmps
call
fcomp
fwait
push
add
(bad)
cmp
rcr
dec
repz
clc
push
mov
hlt
fnstenv
gs
popf
ja
mov
movs
push
lods
(bad)
cmp
jno
sbb
or
cmp
in
jns
and
and
inc
aaa
mov
inc
mov
ret
rol
pop
inc
clc
mov
add
test
pop
test
inc
pop
leave
ja
xchg
jmp
dec
(bad)
pop
outs
mov
inc
outs
xchg
mov
movs
lds
(bad)
test
scas
xor
add
(bad)
sbb
sbb
inc
dec
sbb
movs
pop
or
mov
hlt
pop
pushf
push
adc
(bad)
fbld
fbstp
pop
mov
popa
rol
mov
fsubr
sbb
retf
or
inc
jge
pop
scas
xchg
sbb
rcl
or
movs
mov
push
loopne
mov
or
sbb
lock
jl
popa
fbld
push
and
das
imul
xchg
call
xor
retf
fs
retf
pop
mov
mov
data16
mov
xchg
jb
ins
pop
xor
push
(bad)
pop
retf
add
addr16
push
scas
mov
xor
push
adc
inc
adc
std
repz
mov
adc
fdivr
jnp
push
lods
fisub
inc
mov
gs
jmp
push
(bad)
outs
jne
repz
lock
test
push
mov
in
mov
or
icebp
mov
jle
push
add
fcomp
pop
hlt
sbb
adc
lods
pop
rcl
ja
mov
xchg
sti
mov
dec
mov
adc
sar
mov
jae
sub
das
pop
out
cmp
jmp
(bad)
xlat
mov
inc
outs
fimul
sub
das
mov
mov
push
mov
sbb
push
add
lds
jbe
push
(bad)
push
ins
xor
push
cmp
mov
mov
sbb
mul
xor
repnz
push
stos
ror
stos
mov
repnz
jae
aam
xchg
xor
ss
xor
mov
or
out
jl
cmp
sub
repz
jmp
xchg
es
dec
sti
std
dec
mov
push
cmp
jo
push
inc
sbb
jo
stc
or
xor
repnz
xor
stos
push
stos
push
in
sbb
jo
push
push
sbb
test
ret
mov
sbb
cwde
jcxz
or
fdiv
hlt
pop
sbb
xchg
cmps
dec
push
jbe
pop
xor
push
mov
and
fadd
jge
mov
pop
push
mov
(bad)
xchg
test
pop
dec
repnz
cmp
aas
repnz
xor
imul
add
add
sub
mov
js
sub
mov
or
(bad)
xchg
mov
loopne
cmp
dec
push
sbb
and
and
or
push
cmp
bound
add
ins
fwait
call
xor
imul
push
cmps
fisub
mov
rol
je
outs
jg
cmps
mov
mov
lock
and
jae
das
mov
sub
xlat
xlat
jg
stos
sbb
inc
rol
call
in
enter
mov
cmps
cmp
mov
(bad)
push
lds
adc
fwait
adc
in
xor
shl
paddw
movs
fdiv
scas
jb
mov
mov
mov
dec
mul
xor
aad
add
push
inc
cwde
add
xchg
pop
sub
add
les
pop
(bad)
xchg
add
and
psrad
xchg
lods
mov
push
rdpmc
in
and
push
push
ficom
ret
cmp
mov
sti
pop
mov
cmovno
neg
bound
test
mov
mov
test
cdq
pop
mov
xchg
and
inc
sub
cmp
xchg
jae
into
dec
(bad)
sar
fs
inc
sub
icebp
(bad)
cmp
mov
mov
in
add
cdq
sub
push
and
push
xchg
fxch
fwait
scas
fdiv
jno
sbb
lods
xchg
xlat
test
pop
shl
jl
jmp
cs
inc
test
(bad)
dec
mov
ja
pop
ror
(bad)
pop
in
inc
jmp
gs
lods
inc
push
in
xchg
cmp
fisubr
pop
in
sar
mov
pop
repnz
pop
int
pop
inc
jnp
xchg
fwait
adc
add
xchg
pop
popf
sbb
cs
(bad)
jns
clc
jae
into
out
adc
xor
mov
fadd
test
stc
pop
fdiv
jg
test
mov
push
sub
xor
mov
cwde
adc
stc
jns
xlat
test
or
jl
mov
iret
movs
sbb
jmp
mov
movs
clc
mov
add
neg
adc
xchg
popa
js
xchg
mov
(bad)
aad
ret
xchg
pop
in
jl
aam
xor
ficom
inc
fwait
jge
inc
mov
(bad)
(bad)
aas
inc
xchg
push
and
gs
imul
and
int
xor
into
and
sbb
mov
clc
std
loop
ja
fmulp
dec
jmp
retf
add
sub
imul
call
cmp
jp
push
fdivr
sti
and
jbe
adc
push
jle
in
test
je
icebp
dec
clc
adc
retf
push
in
mov
cld
push
mov
and
jnp
dec
pop
test
addr16
sub
int
cmp
cmp
stos
jl
(bad)
in
imul
inc
sti
rcr
jne
dec
sbb
pop
lds
stos
inc
pop
sub
popf
or
sti
inc
fidiv
xor
push
sub
dec
pusha
push
add
test
add
push
add
pop
push
mov
sbb
fistp
jl
push
test
outs
dec
outs
jecxz
mov
jle
xchg
add
pop
add
scas
or
pop
repz
mov
mov
add
cmp
fidiv
sahf
push
mov
add
sub
add
add
adc
cmps
mov
push
cmc
clc
cmp
sbb
cmp
outs
mov
pop
xor
adc
add
adc
jmp
lds
pop
pop
add
adc
hlt
jnp
out
ficomp
or
iret
js
dec
push
inc
inc
mov
mov
call
out
inc
push
pop
pop
inc
int3
pop
push
gs
sub
jl
and
cmp
xchg
inc
xor
and
mov
jmp
bound
cmc
hlt
or
xchg
add
sar
jle
call
movs
sti
xchg
hlt
sbb
repz
sahf
jp
jns
addr16
mov
sti
mov
mov
(bad)
sbb
pop
shl
in
(bad)
por
sbb
sbb
call
adc
add
mov
iret
jmp
lea
cmc
or
rcr
adc
xor
xor
fcmovnb
pop
xor
sbb
dec
icebp
mov
cmp
(bad)
fist
ja
cld
fadd
psrld
aam
mov
push
ss
xchg
loopne
inc
(bad)
xor
ret
push
or
add
push
jns
js
popf
or
leave
mov
xchg
mov
push
xchg
test
ins
aad
and
push
sub
fwait
xor
push
outs
sbb
mov
dec
cmp
retf
pop
adc
lods
aam
mov
ss
xor
(bad)
xchg
or
mov
cmc
sub
add
into
cmps
push
xchg
ret
add
sahf
jne
lods
popf
(bad)
mov
stos
fldenv
push
jl
jb
cmc
pop
out
ja
sar
adc
ror
and
out
data16
mov
and
dec
mov
push
outs
inc
xchg
loopne
fsubr
xor
xor
(bad)
fucomi
inc
retf
pusha
push
test
cmps
mov
xchg
xchg
adc
cmp
add
and
daa
je
sbb
mov
cmps
mov
int3
add
add
dec
packuswb
popf
pusha
leave
or
cmp
jg
dec
jnp
sti
or
aaa
cli
test
sub
repz
ja
xor
aad
fs
movs
shl
cwde
fst
cmps
cdq
out
add
pop
or
push
je
std
sub
push
imul
js
xlat
pop
jb
out
mov
retf
push
dec
mov
jne
nop
mov
lods
rcr
sbb
mov
and
sbb
data16
stc
rcr
popa
and
je
movs
je
pop
sbb
lahf
jg
pusha
sbb
fisttp
push
fs
xchg
(bad)
cs
sub
pop
jp
aaa
mov
jle
add
inc
or
cmc
push
xchg
sbb
cs
xchg
dec
shl
xchg
retf
test
(bad)
ror
ret
pop
movs
fnstenv
mov
or
out
mov
xchg
cmp
sbb
int3
sub
out
or
ficom
jecxz
adc
xor
outs
push
inc
add
in
cmp
fmul
pop
jo
or
cmp
cmp
mov
and
out
lods
push
mov
pop
lods
mov
addr16
mov
aaa
ficom
or
imul
sbb
cdq
fld
pop
push
mov
dec
jecxz
cdq
ja
or
bswap
out
fistp
outs
mov
aaa
jle
mov
scas
mov
xchg
xor
mov
and
in
mov
cmc
add
add
les
pusha
in
sbb
pusha
in
bndldx
test
mov
jecxz
lock
mov
pop
mov
adc
and
gs
mov
fcmovnbe
lods
xor
call
adc
pop
pop
or
dec
pop
out
in
out
out
push
inc
sbb
or
xor
push
repnz
pop
outs
and
fldcw
jmp
sbb
sbb
mov
fist
fwait
or
add
jne
hlt
sbb
stos
cwde
ds
jns
jp
(bad)
sub
pop
mov
loope
push
lahf
clc
adc
mov
jmp
aaa
icebp
sbb
fstp
sar
lea
mov
cmps
cwde
fnstenv
stos
dec
dec
jp
mov
imul
addr16
dec
scas
std
sbb
push
or
lea
mov
out
add
xchg
leave
ins
xchg
add
and
xchg
mov
fcomp
mov
adc
cmc
inc
movs
xor
jno
pushf
cmps
mov
stos
das
xor
jmp
repz
adc
test
in
push
mov
xchg
lahf
pop
mov
cmps
icebp
mov
xor
lahf
xchg
lods
mov
jge
pop
push
popa
test
fnstenv
mov
inc
loope
mov
mov
aas
inc
jmp
dec
jnp
mov
cmc
ret
mov
idiv
mov
enter
inc
fisub
jae
jmp
imul
dec
cmp
dec
(bad)
sbb
test
inc
popf
sar
mov
cmps
fnsave
ins
test
push
jne
mov
ins
and
dec
bound
push
add
mov
rol
ja
outs
xchg
mov
dec
xlat
shl
or
push
fstp
jg
xlat
je
push
mov
jne
cmp
lea
jne
push
hlt
ins
lock
sbb
mov
mov
test
or
movs
add
dec
jecxz
push
sbb
dec
xchg
aam
sbb
jne
arpl
cdq
sub
or
ja
pop
cmp
sbb
test
ret
mov
dec
adc
icebp
push
pavgb
jp
test
loop
pop
out
imul
xor
cwde
or
push
std
mov
and
loope
jp
aaa
(bad)
repnz
xchg
imul
jb
fld
mov
cli
add
jge
jnp
push
mov
fwait
add
cs
xchg
mov
stos
pop
pop
pushf
cmp
scas
jnp
push
call
cmps
inc
mov
jnp
out
cli
in
enter
out
jae
mov
test
cmp
jg
(bad)
or
and
mov
jne
add
add
push
jns
pop
stos
in
shl
xlat
and
push
fsub
mov
ins
xchg
lahf
or
xor
pushf
ret
loop
add
mov
icebp
mov
pop
retf
push
imul
xchg
jbe
ins
dec
addr16
push
inc
adc
adc
fs
ins
fdiv
movs
inc
mov
push
cmp
test
jns
xchg
in
ficom
shr
jmp
xchg
shl
dec
pop
cmp
mov
dec
xchg
sbb
ins
mov
cli
je
pop
sahf
fcmovnb
ins
jg
and
or
mov
inc
and
scas
add
or
cld
std
pop
std
sub
mov
loop
add
jp
cmps
sti
and
movq
dec
popf
inc
jo
mov
dec
mov
fsub
pop
retf
sbb
loope
mov
retf
in
mov
mov
enter
mov
(bad)
xor
xchg
ret
mov
cmc
sbb
xor
and
leave
jns
mov
iret
cmc
iret
mov
pop
retf
adc
cmp
inc
jnp
jbe
into
movs
scas
or
xchg
xlat
inc
in
or
outs
or
dec
pop
and
sub
push
in
in
xlat
fwait
ins
add
out
call
int
outs
retf
jmp
jae
div
cdq
cmp
add
add
mov
adc
mov
jno
loopne
je
outs
call
lahf
movs
pause
pop
jle
jo
and
jl
mov
sti
push
bound
xor
loop
in
push
test
rcl
xor
repz
jge
fbld
and
push
into
lods
inc
or
(bad)
(bad)
and
xor
cld
and
push
xchg
repnz
ffreep
int
shr
sub
mov
jge
sbb
repz
jae
mov
movs
rcl
mov
pop
mov
test
gs
xchg
inc
push
aam
dec
out
fisub
loope
or
mov
mov
imul
repz
xchg
cmp
test
push
xor
and
pop
pop
mov
dec
cmp
rol
shl
fwait
xchg
mov
xor
jns
imul
shl
jle
push
enter
repz
ret
inc
mov
aas
xlat
push
(bad)
outs
das
mov
out
(bad)
pop
dec
and
retf
ins
jmp
arpl
outs
mov
push
ins
xor
cwde
test
(bad)
aaa
pop
(bad)
sbb
xlat
stos
cmp
and
int3
(bad)
call
aam
imul
dec
std
xlat
mov
aam
cmps
push
xchg
inc
sub
and
adc
sbb
dec
mov
mov
inc
adc
leave
sbb
xchg
xchg
imul
mov
out
rcr
(bad)
repz
inc
pop
jnp
or
cmc
stc
js
fwait
sbb
jnp
adc
in
(bad)
mov
and
mov
jl
loopne
in
mov
xchg
cmp
enter
add
pop
(bad)
mov
aam
and
ins
in
imul
mov
mov
(bad)
sbb
sbb
pop
loopne
jmp
jp
pusha
and
and
and
and
aam
mov
fiadd
push
repnz
lods
es
pusha
icebp
idiv
cmp
dec
cli
jl
push
pop
xchg
pop
repz
outs
(bad)
inc
cmp
out
xor
push
fwait
cwde
outs
stos
adc
fnstenv
mov
pop
mov
adc
int3
movs
mov
mov
lds
jp
or
and
out
lock
js
dec
jmp
clc
jns
ficom
out
cs
sub
jmp
push
jae
cmps
jmp
mov
arpl
shl
inc
(bad)
mov
ds
inc
das
les
mov
add
jmp
add
pop
adc
push
fisub
adc
ins
mov
dec
jecxz
ds
mov
loop
fld
xchg
inc
movs
dec
fsubr
dec
mov
inc
movs
out
test
add
out
jmp
fstp
push
mov
dec
or
mov
sub
ja
rcl
or
dec
repnz
mov
test
mov
lock
dec
mov
cmp
mov
xchg
popf
shl
mov
mov
mul
retf
nop
sar
or
sbb
(bad)
jbe
popf
ins
ins
shl
xchg
xor
sbb
aam
stos
imul
mov
push
cmp
in
test
jg
clc
icebp
cmp
cmps
mov
cmp
dec
xchg
fidivr
adc
movs
pushf
jecxz
dec
sbb
mov
leave
sub
sar
cs
imul
fwait
out
neg
mov
retf
xchg
icebp
loop
ret
loop
cmps
mov
jecxz
outs
repnz
xchg
jge
inc
push
imul
lock
gs
jg
cmp
imul
(bad)
and
push
inc
call
mov
add
(bad)
dec
icebp
movs
pop
mov
jp
aaa
push
xor
hlt
and
add
pusha
into
loopne
imul
cmp
cmp
mov
inc
lods
nop
scas
add
into
repz
retf
and
cwde
jae
jo
jbe
and
loop
mov
pop
(bad)
pop
lods
xchg
adc
not
test
push
add
iret
cmp
xchg
or
cmp
pop
jp
and
(bad)
ins
iret
pushf
cwde
dec
hlt
add
ret
call
test
push
test
test
rcl
mov
push
xchg
cmp
xor
dec
in
lods
push
pusha
push
out
xchg
mov
dec
arpl
nop
adc
outs
adc
data16
into
(bad)
jl
stos
dec
jne
mov
dec
bound
xchg
daa
mov
hlt
mov
xor
dec
rcl
add
or
pop
inc
mov
jne
out
cmp
mov
jle
popf
clc
add
(bad)
jg
rcl
xor
mov
iret
mov
sahf
push
nop
sbb
push
sub
or
xchg
movs
add
mov
push
adc
sub
gs
or
sub
movs
out
lock
test
cmp
aas
sbb
mov
sbb
pop
and
xchg
mov
arpl
fs
stos
xor
test
dec
adc
push
mov
sahf
rcl
aaa
jb
(bad)
jbe
dec
adc
in
lahf
out
ins
call
mov
jmp
push
out
jne
add
and
add
clc
sub
in
hlt
sbb
(bad)
cmp
cdq
daa
add
clc
push
jne
dec
outs
aad
inc
enter
fs
mov
adc
mov
repz
xor
pop
sub
xchg
stos
mov
out
dec
fadd
xchg
pop
adc
hlt
pop
movq
pop
sbb
stos
pop
mov
not
fmul
(bad)
push
adc
push
cmp
hlt
push
jne
push
loope
sub
ins
fsubr
xor
cmps
popf
xchg
jmp
pop
aas
jae
test
adc
fnstenv
loopne
addr16
stc
iret
inc
jnp
adc
retf
lahf
ror
(bad)
hlt
js
retf
loop
repnz
add
es
add
dec
jb
retf
nop
pop
leave
inc
dec
push
test
sti
or
xchg
push
lock
mov
jmp
js
and
lock
sub
mov
add
xor
jno
ret
xchg
(bad)
std
sbb
stos
and
ret
jp
adc
retf
out
imul
dec
out
fsubrp
test
pop
xlat
stc
pop
int3
mov
jo
retf
lods
cmp
(bad)
adc
push
bound
ret
pushf
ss
and
dec
fnstsw
cwde
in
lods
shl
scas
cld
mov
mov
call
rcr
mov
mov
pop
sbb
mov
std
in
in
lods
and
ror
pop
pop
add
sub
pusha
mov
iret
ds
rol
cwde
cmp
retf
or
inc
inc
call
mov
mov
addr16
or
rol
pop
(bad)
and
xlat
retf
sbb
(bad)
add
movs
mov
test
xor
mov
push
bound
xchg
aad
cmp
adc
ret
call
cdq
bound
jo
adc
pop
mov
out
jl
adc
cmc
aad
fmul
mov
and
mov
ret
out
mov
add
ss
(bad)
nop
adc
add
jp
aas
ds
cmc
in
rol
pop
(bad)
fs
sub
mov
push
cmp
cmp
cmp
das
ret
mov
pop
jl
lea
out
jae
dec
(bad)
cs
cmp
fldcw
cmp
dec
outs
mov
mov
mov
aaa
sub
pop
jl
pop
jmp
mov
dec
int
sub
call
or
inc
leave
jns
leave
add
dec
xchg
daa
mov
jmp
jns
add
scas
dec
arpl
adc
icebp
sbb
dec
fdivr
out
outs
bound
mov
add
stos
jmp
in
cmc
stos
or
outs
test
(bad)
out
int3
adc
(bad)
(bad)
cli
xchg
jbe
jbe
int
and
cmp
mov
pop
jge
mov
fcomp
jecxz
push
and
sahf
in
or
xchg
clc
push
and
fimul
aad
stc
add
xor
fistp
xchg
cmps
in
sti
inc
sub
dec
sbb
iret
push
repz
add
repnz
or
pop
in
dec
dec
and
out
sti
dec
push
hlt
int3
aad
xchg
and
cwde
cmps
imul
jno
aas
fdivr
out
cwde
bound
xchg
scas
outs
xchg
nop
loop
or
lea
push
je
push
and
rcr
lods
mov
scas
mov
push
dec
jge
adc
ins
adc
daa
(bad)
movs
xchg
int
fwait
add
popa
and
into
sub
pop
enter
je
icebp
inc
mov
sub
xchg
cmp
jns
push
cmp
icebp
(bad)
repnz
mov
popf
adc
xor
fstp
cmp
fmul
mov
cmp
cmc
sahf
and
pop
pushf
or
xchg
push
push
xor
aas
mov
cmp
push
mov
add
adc
jle
leave
mov
fmul
xor
push
hlt
and
repz
in
js
adc
lahf
data16
test
in
mov
or
sbb
add
loope
frstor
inc
std
imul
adc
and
lods
lea
adc
(bad)
jge
jno
cli
lods
xor
sbb
or
inc
test
fisttp
mov
ds
inc
fs
xchg
jmp
inc
es
lea
test
sbb
cmp
xor
lahf
scas
loope
xor
xchg
not
dec
jle
add
imul
test
xchg
jmp
test
fs
xor
loope
xchg
cmps
mov
push
inc
sbb
mov
lea
ds
stc
retf
xchg
or
pop
movs
scas
neg
mov
sub
mov
retf
fst
imul
pop
dec
xor
scas
pop
ss
bound
pop
test
sub
jne
sub
jle
cmc
mov
add
std
mov
in
and
cmp
xor
ss
mov
mov
(bad)
mov
jns
imul
out
es
pop
dec
lahf
sbb
dec
std
sub
mov
cmc
mov
arpl
cmp
(bad)
loopne
and
movs
dec
addr16
xor
add
mov
sub
sbb
push
or
(bad)
and
mov
inc
clc
fdiv
fiadd
sbb
loope
pop
inc
and
push
(bad)
mov
sbb
dec
sbb
mov
imul
enter
ret
add
pop
test
sub
loop
and
fwait
aas
mov
inc
push
xlat
mov
int3
int3
jne
xchg
and
mov
data16
cdq
jbe
adc
fist
aas
add
cmp
push
mov
cmp
inc
mov
add
push
fcom
inc
jg
xor
test
loopne
fild
in
pop
jmp
pop
test
push
fild
enter
xor
inc
std
mov
mov
jae
add
loop
cmps
enterw
sbb
lds
std
mov
and
add
inc
add
adc
movs
cmps
aaa
jge
fisub
rcr
mov
dec
sbb
cmc
and
mov
bound
push
shl
inc
enter
and
add
xchg
cmp
push
push
icebp
or
test
ret
clc
int3
cmps
xor
jecxz
dec
fld
jp
inc
iret
jmp
jle
lods
inc
or
cmc
js
dec
pop
fwait
mov
xor
pop
xor
mov
lahf
xor
in
test
cli
inc
in
fwait
adc
mov
cmp
add
xor
neg
into
ins
jb
das
sub
or
ror
mov
aas
push
and
aam
jbe
push
lds
sbb
mov
jg
mov
pop
push
hlt
xlat
add
(bad)
aad
rcr
loope
inc
sub
add
add
xor
add
jge
xor
jae
data16
imul
mov
push
pop
ret
icebp
or
adc
lahf
or
fstp
fist
add
sti
jecxz
ins
test
(bad)
(bad)
jns
mov
sahf
mov
jge
jb
outs
adc
into
push
pop
dec
add
rcl
inc
pop
fwait
and
aas
and
sub
ins
fnsave
mov
inc
mov
pop
lods
(bad)
mov
cmps
xor
test
pop
jp
into
add
inc
sbb
push
out
or
outs
xchg
iret
xchg
daa
es
in
jecxz
cs
xlat
inc
in
push
cmc
ret
add
dec
cmp
jmp
adc
movs
and
mov
ss
xor
xor
dec
sub
int
cmps
mov
pop
scas
mov
xchg
sub
push
(bad)
aas
into
jo
mov
push
fsubr
cmp
(bad)
mov
cmp
mov
shl
cdq
push
sti
mov
xchg
adc
sub
mov
mov
jge
lods
xchg
fidivr
pop
mov
mov
call
xor
in
fldcw
mov
jno
sub
leave
pop
popf
test
push
je
mov
push
rol
ins
mov
sub
mov
out
jnp
add
mov
cmp
retf
xchg
aas
mov
pop
inc
fxch
movs
popf
nop
inc
inc
das
inc
pop
popa
minps
icebp
push
and
jle
nop
loopne
or
push
movs
int
lds
and
scas
cmp
sbb
and
ret
fnstenv
mov
xchg
lods
adc
leave
cmps
hlt
(bad)
push
scas
(bad)
jecxz
push
mov
sbb
hlt
scas
jg
xchg
repz
adc
(bad)
mov
mov
(bad)
popf
mov
inc
fwait
ins
xchg
or
rcr
or
cs
mov
inc
nop
pusha
fadd
std
sub
jae
enter
jecxz
mov
popa
fcom
int3
and
mov
in
mov
call
xor
jp
xchg
push
adc
or
jmp
add
sub
lods
cdq
pop
xor
bound
test
stos
mov
jmp
jp
pushf
ror
mov
mov
ffreep
lock
(bad)
push
push
xchg
push
pop
in
cmp
scas
inc
pop
pop
(bad)
lds
test
xchg
jg
fist
lahf
pop
adc
inc
ins
pop
ror
test
pop
aad
adc
call
cmc
pop
ds
xor
ds
sar
daa
scas
push
sub
mov
pop
imul
or
pop
mov
jmp
push
fsub
sahf
xchg
fidivr
fistp
pop
and
pushf
xchg
or
xchg
pop
fild
sar
sbb
addr16
jae
mov
push
add
ss
inc
mov
(bad)
xchg
dec
repz
sub
js
mov
in
adc
mov
outs
scas
inc
sahf
inc
(bad)
and
pop
or
loop
sub
mov
stos
shl
jbe
aas
mov
sub
cld
shl
jle
and
repnz
std
pop
pop
pushf
mov
xor
cmp
dec
ret
pop
punpckhwd
lods
out
mov
and
repnz
jge
stc
das
inc
loop
cdq
or
dec
repnz
retf
sahf
fs
cmps
xor
(bad)
jmp
mov
push
call
clc
jl
inc
or
jnp
loope
imul
dec
frstor
(bad)
mov
sbb
pop
inc
(bad)
jb
mov
mov
gs
xchg
int
(bad)
int3
push
jmp
mov
ins
pop
cli
ss
lahf
(bad)
lahf
jecxz
(bad)
(bad)
es
mov
pop
in
mov
fnstsw
mov
icebp
(bad)
sub
outs
jmp
push
cwde
std
(bad)
mov
jmp
xchg
dec
xor
fs
iret
or
mov
in
icebp
mov
scas
push
cmp
aad
retf
pop
or
cmps
pushf
cdq
out
ds
ja
mov
adc
push
loop
dec
retf
mov
ret
add
fldenv
fimul
jmp
fdivr
sub
mov
push
vpslld
add
dec
enter
in
cdq
add
or
push
pusha
jl
je
xchg
rcr
aas
ins
add
inc
movs
push
scas
adc
gs
dec
lds
jmp
push
push
or
scas
pushf
out
pop
sbb
cdq
out
cmp
popf
aas
pop
dec
add
neg
push
sub
dec
outs
mov
test
jl
inc
mov
cli
adc
aad
xchg
aaa
(bad)
jae
add
xor
mov
test
daa
mov
fld
sar
out
or
push
jg
daa
js
inc
or
retf
xchg
dec
leave
pop
pop
movs
pop
popa
mov
mov
inc
pop
(bad)
pop
movs
retf
sbb
(bad)
shl
xor
jp
mov
imul
pop
add
cwde
and
(bad)
pop
leave
ret
mov
stos
call
sub
cmp
repz
add
in
sbb
mov
mov
fisubr
out
arpl
cs
pusha
xor
jmp
rcr
mov
or
out
daa
add
imul
(bad)
aam
mov
(bad)
call
adc
xor
mov
cwde
sbb
xchg
bound
lock
ins
addps
xor
stos
les
in
in
(bad)
loope
dec
push
push
(bad)
cmps
das
sbb
mov
lds
sub
(bad)
pop
pop
test
push
dec
xchg
data16
pop
popa
scas
mov
(bad)
(bad)
(bad)
mov
pop
lods
or
pop
jnp
retf
add
test
shl
mov
stos
sub
and
std
xor
mov
push
outs
scas
icebp
xor
popf
sbb
jno
pop
inc
dec
fcom
lahf
push
retf
cmc
popf
push
cmp
or
stos
dec
ds
dec
xchg
loopne
lods
push
inc
and
pop
mov
outs
sub
add
jle
pop
jo
jae
mov
cmp
push
xchg
pop
push
xchg
or
jg
jp
mov
mov
sub
sbb
rcl
hlt
fild
out
popa
inc
adc
aas
(bad)
pop
pop
lahf
xchg
aam
mov
xor
xor
imul
cwde
xlat
cmp
scas
fsub
(bad)
xor
out
hlt
call
cdq
fcmovnu
(bad)
fsubr
xchg
sub
push
inc
xor
push
pusha
(bad)
test
movs
loopne
and
clc
xor
ret
push
mov
mov
movs
add
jecxz
mov
mov
loopne
cmp
or
add
ins
int3
jno
in
push
repz
std
inc
mov
sbb
xlat
ficomp
inc
mov
into
or
dec
rol
jne
pusha
mov
mov
fbstp
xor
mov
cmp
call
and
fwait
sbb
cmp
or
fisttp
cli
lock
fld
and
rol
movs
inc
scas
lds
(bad)
(bad)
jle
push
sub
or
inc
pushf
push
mov
sbb
jecxz
scas
out
jb
cld
std
cmps
fucom
stos
mul
mov
jecxz
push
(bad)
test
loop
imul
or
mov
jae
fcomp
cli
shl
imul
sbb
shr
xor
rol
mov
in
jl
inc
lds
push
(bad)
into
xchg
loop
adc
mov
xchg
pop
jne
jmp
xchg
jp
push
iret
sahf
retf
pop
dec
outs
sbb
cmc
mov
repnz
xor
add
dec
mov
rcr
call
and
movs
adc
inc
jo
xchg
push
cld
mov
popa
push
hlt
imul
sub
xchg
cwd
or
mov
movs
jnp
cmp
dec
push
jb
iret
xchg
mov
jbe
lds
ss
push
fs
and
outs
aad
inc
mov
enter
test
or
loope
fild
cmps
mov
sbb
dec
sbb
pop
stos
or
stos
hlt
mov
mov
xchg
mov
inc
in
pushf
hlt
xchg
mov
lea
clc
daa
ins
cmps
dec
out
fcmove
pop
sbb
sti
lods
push
and
or
dec
(bad)
ror
movs
(bad)
pop
ds
out
(bad)
adc
dec
and
jno
test
inc
jb
bound
and
mov
and
xchg
mov
mov
icebp
and
mov
mov
cmps
adc
mov
ret
loope
mov
mov
cwde
icebp
cdq
repz
bts
pop
jbe
dec
fsub
cmp
movs
cmp
ficomp
jmp
push
and
pop
inc
jnp
jg
mov
mov
nop
jl
stos
mov
mov
cwde
mov
and
icebp
jno
cli
adc
jmp
or
ror
popa
or
ja
stos
inc
lea
add
mov
mov
and
icebp
xchg
fisttp
outs
or
push
(bad)
mov
mov
in
ins
xor
mov
inc
cdq
test
cmps
push
adc
dec
in
ror
(bad)
mov
ret
(bad)
outs
xor
pop
nop
cld
in
retf
movs
addr16
ds
sub
repz
(bad)
sub
xor
test
iret
inc
pop
or
out
sub
into
loop
cld
jno
mov
pop
test
sbb
out
into
rol
push
fdiv
addr16
cmp
cmp
xor
cmp
movs
and
xor
adc
out
sbb
add
sub
into
(bad)
test
pusha
and
sahf
cmc
push
aaa
sbb
imul
nop
call
mov
cmps
out
xchg
push
sub
es
xchg
fs
jbe
movs
(bad)
dec
fsubr
pop
mov
jmp
xchg
ja
adc
and
inc
or
mov
sub
mov
fcmovu
lods
push
adc
or
xor
lds
lahf
mov
in
call
jge
mov
xor
pop
scas
and
out
jne
cli
dec
int3
repnz
cwde
cmps
rcr
ret
cwde
mov
xor
lods
pcmpeqd
shl
std
fist
out
jo
xor
fdivr
sub
and
test
rcr
add
and
add
mov
pop
retf
push
mov
in
mov
cli
sbb
cmp
int
dec
xor
fcomi
sub
mov
jle
mov
jbe
(bad)
adc
adc
add
pop
lods
daa
es
xor
jp
sbb
pop
std
mov
stos
push
outs
test
imul
enter
mov
hlt
pop
jge
push
inc
or
or
aaa
cmp
in
push
fs
xchg
sahf
xchg
test
retf
jle
and
in
push
(bad)
repz
cmps
mov
adc
mov
and
push
popa
repz
jge
addr16
ss
push
xor
out
jb
mov
mov
push
adc
movs
add
or
fisttp
mov
push
adc
mov
push
(bad)
mov
int3
xor
stos
mov
ffreep
mov
xor
movs
repz
cmp
xchg
or
fwait
shl
aad
jmp
loope
addr16
loopne
jno
mov
dec
(bad)
sbb
ror
stos
and
cmp
movs
cmc
mov
scas
mov
inc
cli
out
sub
xor
mov
or
fcmovu
test
retf
int3
loop
retf
mov
jbe
mov
mov
add
pop
das
add
ror
lea
bound
dec
fnstenv
je
rol
cmp
pop
sub
out
inc
mov
lea
mov
mov
iret
push
mov
cmp
sub
mov
loopne
jne
fiadd
xor
fist
test
mov
xchg
and
fcom
xchg
jns
into
lahf
mov
mov
cmp
std
das
jmp
adc
int3
retf
clc
and
cmps
ins
mov
pop
pop
pop
push
jne
push
lods
shl
pop
inc
mov
mov
int
mov
fwait
idiv
dec
push
jge
mov
jb
xor
ds
push
dec
push
xchg
jmp
inc
sub
sub
loopne
sbb
addr16
add
pop
push
add
das
mov
mov
fisub
add
test
fnstsw
loope
jg
retf
lods
enter
xor
sbb
mov
push
enter
ret
sub
shld
lahf
sub
push
data16
push
sbb
scas
gs
xor
test
loop
sbb
scas
mov
movs
dec
es
mov
outs
repz
aas
mov
repnz
sbb
fs
pop
addr16
clc
nop
push
inc
imul
je
pop
lds
or
clc
stos
dec
aaa
stc
lods
stos
push
aam
mov
enter
movs
push
xor
aad
dec
pop
push
cdq
stos
jbe
sahf
mov
cs
dec
inc
(bad)
sbb
fwait
adc
adc
inc
push
mov
add
dec
mov
and
and
jnp
retf
clc
shl
xchg
lds
mov
pop
lahf
std
jp
xchg
jo
scas
push
nop
sub
test
push
xchg
ins
cmp
push
ins
mov
cmp
sbb
in
cmp
ss
push
mov
cmps
fild
jo
dec
push
iret
ficomp
adc
sbb
(bad)
popa
xor
(bad)
repz
scas
ds
fwait
je
mov
sub
jmp
rcr
pop
or
sbb
sub
loop
xchg
int
pop
jnp
inc
inc
mov
sbb
or
es
clc
sbb
push
jl
xchg
dec
leave
icebp
loop
xchg
or
mov
add
fldenv
aaa
int3
andnps
inc
leave
jmp
sbb
retf
pop
and
dec
mov
sbb
xor
mov
jg
aam
popf
hlt
out
dec
sub
clc
dec
xlat
jae
scas
inc
and
jp
imul
inc
loope
popf
leave
clc
xor
cwde
das
and
out
cmp
fcomp
pop
mov
aas
aad
and
(bad)
repz
mov
push
and
cmp
push
push
out
push
lods
mov
xor
ins
stos
sbb
mov
(bad)
and
fimul
pop
aas
rcl
push
mov
sub
or
pop
cmp
pop
das
fwait
xchg
xchg
or
aas
xor
jle
cmp
and
jae
mov
inc
xchg
inc
or
mov
rcl
jno
push
bound
pop
out
xchg
sahf
dec
icebp
sbb
add
inc
shl
inc
sbb
mov
dec
popf
pop
scas
pop
ret
fiadd
mov
fimul
cmp
not
push
push
jno
cmp
mov
xchg
adc
xor
cmp
sbb
test
popf
retf
sbb
ror
test
and
popf
push
sbb
jg
jle
cs
push
retf
sub
cdq
cmp
pusha
ret
xchg
data16
inc
jno
sar
js
in
repnz
cmp
or
div
xchg
retf
mov
jl
scas
mov
pop
xchg
mov
out
dec
push
pop
mov
inc
fwait
add
mov
mov
aaa
outs
lds
lock
jp
cmps
mov
push
test
xchg
dec
out
xor
(bad)
push
inc
call
loop
scas
pusha
dec
pop
ret
pop
mov
clc
cmps
(bad)
call
xor
sub
ja
hlt
sub
popa
sbb
push
push
adc
call
lahf
fwait
jbe
aam
jmp
jb
or
neg
rol
add
add
lock
sbb
or
in
inc
cmp
xor
sbb
daa
stos
push
adc
fldenv
sti
cmp
mov
fild
inc
cmp
push
or
cld
(bad)
into
shl
xchg
fnstenv
mov
out
sbb
pop
pop
inc
jl
enter
add
fbld
psllw
fdiv
in
add
inc
push
adc
mov
cmp
jns
inc
cmps
in
call
cmp
sbb
pop
dec
mov
int3
ror
add
mov
fidivr
iret
sbb
cmp
lahf
push
ins
loopne
inc
int
sbb
sbb
sti
mov
adc
ds
add
fcom
xchg
xchg
xchg
fbld
add
loop
sbb
sahf
sbb
or
aam
clc
xor
out
xchg
lods
xchg
add
cmc
sbb
or
lock
push
sub
push
push
or
out
pop
out
mov
xchg
and
or
cmp
mov
std
pop
add
cmp
jp
pop
fistp
loopne
inc
icebp
sub
add
dec
xchg
xor
dec
push
sti
popa
jnp
fadd
repz
outs
cwde
lods
hlt
add
rcr
test
adc
pop
test
xor
stos
test
movs
into
imul
sbb
jno
jge
ins
push
dec
dec
or
adc
dec
dec
cmp
out
dec
and
movs
lds
xchg
dec
inc
int3
fild
dec
nop
sar
mov
cdq
cmp
push
sti
sbb
push
das
imul
cmp
movs
add
xchg
inc
out
shl
xor
jnp
cmp
or
test
jle
jmp
jge
loopne
jecxz
jp
fcmovnu
aam
test
rol
jne
and
ret
cmp
add
sub
mov
jns
xchg
imul
push
mov
pop
in
gs
push
or
cmpxchg
dec
adc
xor
xor
mov
js
mov
and
pop
(bad)
popa
in
mov
data16
pop
xchg
inc
mov
mov
enter
sahf
cmp
mov
lahf
das
cmp
movs
dec
mov
push
movs
daa
lock
shr
and
das
aaa
test
loope
dec
(bad)
in
pop
mov
add
repnz
rcl
inc
test
adc
retf
mov
js
dec
arpl
ins
pop
sbb
pop
out
or
add
jmp
mov
jg
ins
adc
retf
scas
jg
pop
and
mov
push
imul
sub
adc
push
mov
inc
mov
sub
fs
cmp
dec
imul
jnp
and
inc
sbb
add
lock
pop
pop
mov
fdivr
mov
lock
(bad)
fldenv
xchg
sbb
xchg
pushf
fwait
sbb
and
mov
pop
dec
es
or
jb
fistp
jo
sub
dec
dec
iret
iret
jno
lea
xchg
pop
inc
mov
or
(bad)
test
push
xchg
out
lahf
pusha
pushf
xchg
je
ins
ror
sub
mov
jmp
xor
adc
mov
add
mov
popf
scas
aas
scas
idiv
imul
ret
jge
push
mov
hlt
ror
repnz
pop
test
or
adc
neg
popf
mov
outs
xchg
stos
jnp
inc
add
retf
mov
cs
sar
adc
repnz
ret
cmp
mov
mov
inc
imul
cmc
adc
test
std
mov
mov
add
hlt
int
mov
mov
lods
sub
cdq
sahf
stos
out
cmp
shl
ss
rcr
jne
pop
inc
xor
dec
push
iret
adc
pop
pop
pop
loopne
adc
loope
jno
mov
jg
fs
mov
dec
(bad)
mov
cmp
sbb
sbb
cmp
rcl
(bad)
enter
sbb
add
je
ror
in
popa
data16
or
test
nop
jmp
jp
jle
std
clc
ret
fs
(bad)
xor
jnp
jo
dec
push
scas
mov
xlat
mov
sub
dec
and
cwde
cld
pop
xchg
sahf
add
jbe
mov
dec
mov
jmp
push
ror
cmps
cmp
xchg
dec
lea
mov
loope
call
sbb
inc
or
jg
mul
enterw
pusha
test
sub
cmp
not
es
push
stos
jp
mov
pop
mov
loope
mov
sub
add
out
fstp
dec
xchg
scas
leave
scas
pop
sub
sbb
fisttp
push
pop
nop
push
push
push
neg
les
xchg
inc
pop
or
jp
call
inc
mov
ror
mov
dec
inc
mov
push
mov
fadd
cmp
mov
inc
jno
pop
jp
xor
call
cmp
pop
out
fucomp
mov
xchg
pop
inc
hlt
cwde
test
sub
ins
mov
xchg
ficomp
jecxz
inc
dec
or
int3
and
movs
lods
cli
fild
test
cs
mov
repz
xchg
cmove
fldenv
pop
mov
jge
and
xchg
enter
pop
sub
mov
or
adc
sub
es
ins
scas
scas
mov
cmp
(bad)
stc
dec
or
ror
div
or
jl
fwait
sbb
xor
test
push
sbb
xor
outs
movs
sbb
mov
cmp
(bad)
dec
mov
jp
enter
repnz
add
xor
(bad)
bnd
xchg
xor
pop
inc
les
dec
and
repnz
pop
jno
inc
inc
dec
call
idiv
push
call
ret
(bad)
outs
out
xor
pop
push
outs
sbb
xchg
xchg
ret
in
mov
adc
daa
xlat
cld
repnz
fdivr
(bad)
out
jno
mov
xchg
imul
or
ret
dec
stos
or
dec
pop
lahf
and
add
jbe
xchg
inc
bsr
xchg
mov
aaa
and
push
pusha
fwait
inc
addr16
sar
sahf
xor
jle
es
test
test
rol
in
(bad)
mov
rol
mov
mov
add
icebp
sub
mov
test
repnz
or
xchg
pop
mov
fld
adc
sbb
jecxz
repnz
out
xchg
clc
cmps
jnp
mov
test
in
sub
cmp
popf
cld
cwde
test
mov
les
imul
popf
iret
push
std
and
fdiv
adc
sti
sub
mov
mov
int
int3
add
xchg
stos
scas
(bad)
jp
sahf
cmp
sub
je
les
add
inc
mov
cld
ja
mov
pusha
ret
mov
mov
popf
inc
pop
and
in
mov
lock
pusha
mov
inc
inc
inc
lods
push
dec
pop
cdq
(bad)
xchg
or
pushf
and
rol
test
stc
pop
jne
mul
or
cmp
sub
and
jge
mov
adc
scas
sbb
jbe
inc
jg
das
cli
(bad)
dec
das
sub
pop
pop
cwde
popa
movs
xor
ret
mov
push
sbb
lahf
pop
sbb
(bad)
ins
call
dec
mov
inc
inc
lods
inc
pop
mov
in
rcr
fcmovnb
push
mov
pop
test
js
cmp
jns
test
ds
and
push
scas
ds
adc
neg
cld
call
repz
jp
sar
jne
into
mov
cld
jns
mov
push
push
jno
pmulhuw
pop
cli
mov
fiadd
push
add
outs
add
push
inc
cmp
or
push
xchg
jmp
add
push
pop
in
mov
mov
ins
imul
or
mov
jmp
popa
gs
call
outs
mov
(bad)
lock
sbb
std
stc
push
jns
repnz
xor
xchg
fdiv
xor
and
nop
pop
lods
cmp
stos
loopne
pushf
add
jne
hlt
mov
pop
add
or
push
pop
or
mov
dec
push
fwait
adc
adc
cmps
call
std
lahf
movs
add
cmp
fmul
jmp
ins
add
xchg
lock
adc
inc
push
adc
pop
lock
jle
data16
jns
xor
fsubr
cld
into
fldcw
(bad)
push
ins
inc
mov
inc
or
int3
cmps
push
out
icebp
adc
into
adc
mov
add
out
jge
jle
add
cmps
jb
sub
scas
mov
enter
iret
outs
cmp
pop
xor
dec
loop
(bad)
out
jno
xor
out
cmp
lds
cmp
mov
add
mov
mov
push
push
ss
ja
dec
push
out
pop
or
cmp
xchg
aas
rcr
pop
adc
inc
mov
inc
adc
jae
sbb
add
(bad)
repz
pop
pop
jg
push
xlat
adc
mov
mov
aas
mov
mov
lea
inc
das
mov
leave
lea
cmp
aas
and
inc
scas
outs
push
call
adc
retf
pop
sahf
stos
(bad)
push
mov
mov
adc
jbe
cli
dec
out
in
or
cmp
aas
movs
or
sbb
xchg
sub
das
xchg
xor
adc
je
pop
adc
into
lods
in
inc
sbb
cmps
push
sub
shl
call
xor
sub
push
jmp
mov
shr
hlt
sbb
jns
inc
fs
sbb
mov
dec
xchg
stc
lock
fld
pop
ret
test
or
ffree
rdmsr
push
ja
fcmovu
scas
imul
rol
and
mov
in
lods
inc
cmp
push
pusha
movs
push
stos
in
jle
sub
into
(bad)
movq
jp
mov
xchg
push
jbe
and
mov
xchg
hlt
push
adc
ret
or
pusha
sbb
cdq
push
jo
mov
or
pop
push
mov
xchg
aam
inc
mov
or
dec
pop
mov
mov
(bad)
sbb
push
ja
push
mov
repnz
retf
mov
fistp
rol
inc
and
mov
cmps
aaa
iret
or
xchg
sub
icebp
jl
movs
aam
test
mov
and
das
jge
and
push
inc
pandn
inc
nop
cmp
ja
push
cmps
inc
sar
bound
enter
and
pop
lahf
in
stos
and
pop
addr16
xor
cmps
rcl
ror
aaa
cs
les
sub
int
shl
xchg
add
mov
dec
mov
scas
ss
adc
sbb
test
rcl
scas
mov
dec
imul
mov
inc
ret
xchg
popa
cmp
(bad)
repz
push
mov
stos
inc
cdq
fild
(bad)
xor
adc
(bad)
stc
mov
lods
xor
sub
pop
div
ret
test
jne
aam
clc
lods
mov
jmp
sti
pop
inc
cmp
movntq
rcl
in
dec
mov
xor
jg
das
or
stos
mov
aaa
repnz
add
xor
rcl
stos
xor
je
mov
xchg
fnsave
cmc
add
sub
je
(bad)
mov
adc
iret
inc
push
dec
adc
jae
outs
call
ja
fbstp
popf
and
pop
fwait
pop
jp
mov
retf
or
mov
or
dec
outs
and
pop
xchg
add
and
xor
js
femms
jg
fsub
push
mov
rol
retf
arpl
shl
mov
retf
jno
or
(bad)
mov
pop
or
fwait
mov
or
jl
rcr
out
fwait
push
sbb
ja
test
push
int
cmp
jne
repz
dec
or
mov
push
dec
sub
push
or
call
add
pushf
lods
lahf
clc
loopne
add
xor
sti
test
jnp
stos
mov
push
cmp
sbb
loope
or
rol
scas
sbb
and
repz
sub
(bad)
mov
sahf
dec
movs
dec
cmps
jnp
push
aad
test
retf
enter
pop
ficom
adc
rol
ret
movs
daa
out
(bad)
gs
out
lods
outs
xor
pop
scas
test
je
and
pop
fnstenv
push
sbb
sbb
pushf
rcl
and
mov
popf
arpl
enter
adc
test
repnz
je
adc
push
adc
ins
jl
xor
add
mov
ins
mov
sub
sar
and
std
adc
leave
pop
(bad)
leavew
pushf
inc
mov
add
xor
xor
lea
gs
xchg
mov
inc
bound
push
sbb
call
push
jl
imul
bound
inc
dec
xchg
add
(bad)
dec
inc
sti
sub
cs
or
mov
jo
xchg
mov
xchg
mov
pop
test
inc
in
pusha
dec
sti
into
test
enter
pusha
rcr
adc
jmp
pop
aaa
jl
lods
hlt
ds
cli
scas
outs
inc
push
test
inc
movs
cmps
fstp
fld
or
in
scas
(bad)
dec
sbb
shl
(bad)
pop
sbb
call
cmc
and
jbe
jp
data16
rol
mov
jbe
imul
jg
repnz
inc
cmp
inc
les
sub
jae
ret
aam
or
mov
outs
push
leave
out
mov
popa
(bad)
push
xlat
(bad)
push
mov
ret
jmp
rsqrtps
sbb
cdq
sub
mov
lock
imul
mov
into
xchg
dec
push
outs
sub
outs
sbb
imul
dec
xchg
xchg
sbb
or
jno
mov
imul
leave
mov
jg
sti
pop
add
fstp
rol
test
fnsave
push
jle
jbe
iret
dec
adc
xchg
shr
push
int
cmp
(bad)
iret
mov
mov
jmp
enter
les
dec
and
shl
arpl
int
rcr
addr16
ins
adc
mov
sub
jg
dec
xchg
je
data16
ds
mov
jle
mov
cwde
imul
setl
jno
mov
mov
popf
stos
sub
sbb
repz
and
clc
test
jno
scas
mov
lods
(bad)
into
popf
add
ror
dec
sbb
dec
add
sbb
mov
fmul
fimul
dec
int3
push
mov
les
adc
dec
add
das
pop
cmc
mov
mov
jns
sub
out
push
shl
inc
xchg
repnz
jno
adc
add
repnz
pop
sbb
xchg
mov
in
mov
jmp
push
je
dec
add
jnp
sar
retf
das
mov
dec
js
xor
aaa
addr16
dec
jbe
sbb
mov
mov
mov
retf
clc
mov
jns
cmp
add
jmp
pop
std
jp
jle
mov
and
pop
ins
add
jp
iret
lds
sahf
int3
pop
push
loopne
jmp
mov
mov
inc
jmp
pop
dec
into
icebp
add
or
xchg
sti
pop
add
hlt
jo
xchg
cmp
jne
dec
in
test
cmp
mov
repnz
and
push
mov
cld
xchg
in
pop
lods
jo
xchg
dec
cmp
sti
adc
(bad)
jmp
lahf
ror
cs
adc
clc
jne
iret
push
rol
fist
mov
(bad)
daa
xchg
test
jmp
mov
sub
cmp
pop
cmp
xchg
pop
cmc
popf
xor
mov
jmp
sub
popa
(bad)
(bad)
call
je
pop
adc
dec
sbb
and
fistp
lods
or
add
in
xor
sub
dec
daa
jg
call
inc
stos
inc
or
cdq
rol
rol
mov
inc
jle
xchg
cmc
rcr
adc
push
push
jmp
cmp
push
into
imul
sbb
cmp
or
add
nop
cdq
jnp
lea
mov
push
push
or
add
sub
les
push
push
scas
retf
pop
cmp
and
cmp
loope
sub
sahf
test
mov
loopne
jb
xor
inc
movs
imul
lods
pop
jle
ins
add
push
fwait
cwde
jb
pop
loop
adc
loop
and
sub
(bad)
mov
adc
jae
imul
mov
cdq
or
push
mov
movs
icebp
sub
enter
push
push
sub
fisub
or
outs
lahf
pop
jns
push
inc
xchg
movs
xlat
xor
or
push
mov
lea
xchg
fdivr
jecxz
mov
push
pop
jae
push
jecxz
dec
jb
repnz
pop
mov
fld
data16
mov
dec
(bad)
dec
popf
(bad)
mov
ins
adc
repnz
stc
retf
outs
adc
mov
fmul
movs
push
into
retf
mov
jmp
ret
fisub
mov
adc
(bad)
daa
in
test
xor
add
cmps
push
dec
xchg
mov
in
push
rcr
push
push
imul
icebp
cmp
inc
mov
push
(bad)
push
pop
rcr
ja
jo
out
je
cmps
push
shl
lds
jp
(bad)
addr16
call
and
lahf
pop
(bad)
icebp
jmp
or
outs
leave
retf
(bad)
les
adc
ins
mov
push
retf
mov
jmp
xchg
mov
pop
mov
jne
fild
xchg
xchg
pop
aam
xor
into
daa
xchg
bound
and
push
add
loopne
ins
lea
cs
xchg
in
mov
call
sbb
aam
or
or
dec
ins
popa
add
push
cmps
test
iret
daa
(bad)
bswap
xor
add
adc
sub
adc
inc
fcompp
cmp
sti
mov
das
(bad)
dec
inc
je
xor
out
das
mov
shl
mov
add
adc
xchg
jae
scas
fmul
scas
call
jo
jns
int3
cli
addr16
xchg
mov
fimul
xor
or
cld
add
dec
fistp
call
mov
jbe
lock
xchg
mov
aad
pop
stc
jae
cmp
test
stos
call
inc
into
dec
jp
xchg
mov
stos
fild
sub
jp
xor
pop
pop
test
pusha
movs
retf
pop
cmovge
rol
or
sbb
dec
fmul
mov
(bad)
addr16
sahf
push
stos
int
dec
and
test
(bad)
fsubr
or
cdq
xor
push
push
cwde
call
xchg
pop
jp
test
adc
or
jmp
dec
or
fadd
xsaveopt
adc
lock
and
push
test
sbb
mov
outs
xchg
push
jo
adc
and
in
sar
add
ror
and
(bad)
xor
jne
jl
xchg
outs
adc
pop
mov
icebp
or
rcr
xor
xchg
(bad)
aaa
in
jnp
jp
sbb
push
push
inc
lods
sub
stos
fwait
add
fcmovb
aas
pop
sbb
daa
cmps
shl
(bad)
stos
(bad)
jns
mov
cmp
pop
ins
jg
xor
imul
xchg
xor
fcmovne
and
and
jne
xlat
or
pop
lahf
hlt
xchg
push
sub
adc
into
inc
pusha
into
sub
pop
mul
leave
js
sar
popf
js
xchg
or
jo
data16
stc
sbb
push
sbb
ja
cmps
xchg
lods
jbe
hlt
iret
cmp
dec
(bad)
sar
mul
push
adc
adc
in
movs
cld
dec
dec
xor
dec
call
jle
ficomp
adc
pop
cmp
in
add
inc
pushf
outs
or
mov
dec
fdiv
xor
mov
iret
sbb
push
(bad)
int3
cmps
mov
adc
pop
jo
pop
stc
enter
inc
(bad)
cli
outs
xor
xchg
inc
pop
push
aam
xchg
clc
mov
jmp
inc
inc
pop
iret
mov
(bad)
dec
aam
(bad)
movs
and
retf
push
and
sbb
sub
fsub
into
sbb
retf
ins
jne
bound
retf
ds
ins
out
or
ds
(bad)
fs
mov
enter
mov
mov
mov
ret
add
mov
mov
mov
popf
xor
sbb
pop
ds
test
stc
add
inc
cmp
push
xchg
cld
cdq
cwde
dec
lea
pop
add
cmp
jae
jns
not
mov
push
inc
jle
adc
repnz
idiv
rcl
std
adc
iret
in
stos
mov
or
mov
ja
mov
sub
in
shl
mov
fbstp
mov
sbb
je
add
cmp
jge
cmc
movs
xor
cdq
mov
jle
jno
ret
xor
icebp
xchg
dec
xlat
fwait
adc
xchg
sar
int3
mov
or
scas
inc
jp
fdivr
sbb
(bad)
fiadd
js
jmp
cmps
adc
pop
daa
jl
mov
pop
lods
mov
mov
jae
jmp
in
cmp
xchg
cmp
inc
pop
movs
dec
mov
adc
add
imul
ror
loope
pop
int3
in
pop
sbb
mov
pop
mov
fs
or
in
test
(bad)
clc
rol
lahf
xor
cli
fcmovbe
sub
or
and
jo
adc
or
xor
adc
jp
xor
xchg
jo
ins
arpl
or
mov
adc
std
call
(bad)
loopne
mov
cmps
dec
mov
and
add
pop
and
ror
jmp
add
dec
sti
xor
mov
shl
xor
(bad)
dec
in
mov
bound
sub
push
in
sub
push
push
or
push
fisttp
push
jo
lods
xchg
xor
cli
(bad)
pusha
popf
pop
or
push
mov
mov
pop
mov
or
stc
(bad)
out
adc
(bad)
ror
(bad)
movs
or
cmp
and
mov
(bad)
in
cmp
shr
scas
xor
dec
mov
jne
jle
shr
or
cmps
pop
and
cmp
hlt
cmp
xchg
ret
jle
add
ss
cmp
into
xor
(bad)
inc
scas
fld
jp
inc
out
clc
mov
push
sub
mov
lock
inc
es
sbb
pop
clc
push
bnd
inc
and
cmps
inc
loop
pop
mov
jg
call
xchg
jecxz
repz
add
cmc
inc
cmc
gs
dec
fs
ds
or
push
loope
sub
jmp
std
les
dec
(bad)
push
mov
xchg
mov
mov
sbb
inc
scas
cmp
lock
aas
jmp
cmp
jg
jp
gs
or
in
sub
sub
xor
pop
out
loopne
mov
xor
ss
sti
fsubp
ds
sub
pop
in
fdivp
xchg
out
cmps
dec
pop
jns
arpl
dec
mov
cmp
and
mov
xchg
cmp
mov
outs
sub
cmp
push
adc
pop
jle
sbb
mov
jo
inc
retf
xchg
imul
mov
jecxz
lods
aaa
sti
push
mov
mov
adc
sub
sub
bound
mov
js
mov
push
adc
ret
cmp
arpl
add
sub
or
shl
imul
mov
xor
xlat
sub
and
mov
adc
in
mov
dec
ins
push
sbb
push
mov
mov
div
pusha
mov
pop
into
iret
leave
push
xchg
dec
or
fbstp
es
iret
xchg
sub
call
dec
or
sub
fsin
mov
lods
and
iret
push
dec
adc
cmps
stc
xchg
xchg
lahf
in
ja
pop
scas
scas
je
fld
or
jnp
jns
sahf
fsubr
daa
cmp
iret
lds
in
pop
ja
pop
movs
movs
lock
mov
ja
in
xchg
adc
pushf
sar
mov
sbb
int
mov
sbb
nop
mov
xchg
sbb
neg
outs
xor
cld
or
out
pop
inc
dec
inc
xchg
adc
aad
adc
jle
lods
movs
pushf
ins
aaa
dec
and
adc
mov
cmp
push
inc
or
or
cmp
sbb
cdq
pop
add
xlat
or
lock
adc
mov
ret
ret
push
jg
adc
ror
add
int
push
(bad)
jmp
adc
shl
or
aam
(bad)
lods
xchg
mov
adc
push
xchg
retf
retf
pusha
lods
mov
es
adc
cmps
stc
out
push
jp
imul
add
jmp
cmp
inc
xchg
mov
in
mov
cmp
mov
test
pop
push
jmp
retf
xchg
mov
jb
push
nop
loop
jbe
adc
add
sub
pusha
and
dec
mov
leave
je
or
jg
pop
push
mov
and
lods
in
add
fidiv
in
repnz
clc
jmp
(bad)
pop
pop
mov
jae
mov
ins
arpl
je
std
call
mov
or
imul
pushf
push
jmp
loope
fiadd
push
adc
popf
xchg
xchg
rol
add
je
sub
sbb
jl
imul
scas
ja
adc
sahf
pushf
pop
adc
dec
mov
(bad)
call
and
dec
dec
xor
mov
and
cmps
xchg
rcl
adc
push
je
cmp
leave
div
jb
jp
sub
cmc
jge
jle
dec
fsub
in
mov
loopne
rcr
sub
dec
jo
sbb
mov
stos
addr16
outs
sti
(bad)
xchg
das
mov
js
ins
data16
movs
sub
dec
pop
stc
adc
sub
repz
shr
stc
add
xlat
out
xchg
shr
les
in
fdecstp
add
xlat
adc
out
jns
mov
mov
xlat
sar
aaa
adc
or
test
mov
fild
in
xchg
mov
jmp
mov
stos
test
loop
iret
dec
lock
push
push
mov
xchg
sahf
aad
and
push
movs
mov
cld
mov
dec
sbb
imul
mov
and
fcmovnb
into
(bad)
jae
xor
dec
mov
sub
fiadd
mov
jb
psadbw
and
ret
cwde
push
test
(bad)
adc
jnp
mov
pop
mov
int3
push
fisubr
(bad)
xchg
mov
fnstcw
xor
push
and
repz
stc
pop
push
cmps
and
pop
pop
sti
ja
cmp
mov
rsm
in
push
aas
outs
inc
hlt
mov
test
scas
pop
inc
jbe
xlat
outs
addr16
add
ror
es
cmp
inc
dec
(bad)
mov
aad
not
cmp
dec
inc
and
popa
lds
popf
adc
test
fdivp
lea
repz
(bad)
jne
sub
mov
jae
inc
push
fisttp
add
cld
push
add
jno
pop
cdq
cdq
inc
mov
test
xlat
inc
push
ins
scas
mov
arpl
push
inc
or
xor
out
push
leave
xlat
bound
xor
call
xchg
arpl
or
cmc
iret
xor
scas
retf
movs
jns
adc
fcomp
add
xchg
cmp
jae
pop
mov
jg
push
test
ss
sbb
sbb
(bad)
ret
jg
scas
cmp
outs
(bad)
push
push
iret
dec
outs
pop
jge
add
icebp
push
neg
mov
jns
jmp
lods
inc
(bad)
icebp
ret
(bad)
repz
frstor
mov
mov
ja
adc
push
outs
stos
out
pushf
sub
sbb
cmp
imul
push
adc
adc
sub
loopne
imul
aaa
fst
aas
jl
pusha
push
inc
inc
std
inc
push
(bad)
adc
and
fcom
jbe
mov
je
call
add
jge
scas
pop
jmp
and
sub
mov
shr
mov
out
popa
jo
lods
rcl
mov
jmp
pop
xlat
pop
mov
mov
test
outs
mov
push
adc
enter
je
pop
fdiv
ret
sub
push
and
fild
mov
(bad)
mov
aaa
dec
test
lods
push
xor
sar
pusha
out
pushf
(bad)
(bad)
mov
mov
xor
call
call
icebp
clc
inc
stos
xchg
cld
out
mov
aad
mov
sbb
xchg
or
jp
imul
or
stos
and
js
pusha
pop
jecxz
and
sbb
sub
cld
mov
cmps
dec
cs
push
das
push
ins
dec
ds
js
frstor
cmp
leave
and
add
or
push
sbb
imul
dec
fild
inc
adc
mov
mov
fcom
popa
mov
inc
retf
test
outs
xlat
cmp
stos
pop
pop
or
in
xchg
dec
pusha
or
in
push
dec
jne
cmp
fisttp
std
inc
and
jnp
lock
(bad)
lock
cmp
mov
jl
mov
iret
jae
retf
out
sbb
(bad)
int
mov
jns
sub
pop
fwait
cmp
xor
repnz
pop
mov
cdq
push
popf
sub
mov
movs
test
sub
mov
push
sub
pop
add
arpl
and
add
addr16
jle
test
mul
sbb
sub
push
loop
ret
je
cmc
xchg
pop
in
xor
mov
mov
and
movs
pop
lea
xchg
sub
cld
test
push
push
pushf
shl
xor
fist
pop
inc
cmp
je
xchg
(bad)
rcl
imul
movs
mov
sbb
jno
mov
shr
cmp
cs
xor
loop
jmp
dec
dec
pop
xor
mov
and
inc
pusha
jge
sbb
cmc
call
shr
push
mov
mov
cmps
mov
jecxz
sbb
ja
mov
neg
lods
rol
mov
jo
(bad)
fistp
pop
sahf
(bad)
icebp
test
pop
sahf
in
xchg
jmp
js
ss
cmp
retf
mov
cld
sar
fwait
daa
out
cmp
add
ins
scas
popf
xchg
rcl
xchg
inc
xchg
or
(bad)
adc
stc
push
je
cmp
sub
jae
imul
outs
in
aas
xor
xor
cmc
xchg
dec
call
test
pop
ror
mov
retf
das
mov
jmp
out
retf
adc
ss
ret
popf
xchg
sub
mov
cwde
sbb
sub
into
in
pusha
cmc
dec
test
adc
jae
cmp
jae
das
je
add
mov
or
(bad)
pop
xor
sub
mov
cmp
cmp
shl
fwait
mov
imul
add
push
cdq
cmc
cmc
dec
xlat
xor
in
adc
nop
popa
push
push
jno
sbb
mov
mov
sbb
ror
ss
jo
cmp
jb
pop
in
dec
out
jne
mov
loop
xchg
nop
pop
push
ja
mov
inc
cmp
les
test
sar
xor
dec
ficom
mov
lods
popf
sbb
push
push
pop
outs
test
mov
xor
aas
stos
push
popf
fwait
clc
push
es
lods
ins
push
fsubr
push
and
cwde
push
fnsave
out
xor
sub
push
sbb
dec
stos
call
es
(bad)
xor
xchg
pop
jns
rcr
mov
aas
cmps
cmp
jb
add
jns
xchg
add
pop
rol
arpl
mov
sti
adc
clc
cmp
add
stc
mov
enter
mov
dec
lahf
dec
sahf
hlt
in
and
sub
pop
push
push
fisub
pop
inc
cmp
stos
mov
lea
add
sbb
neg
(bad)
xchg
jle
add
pop
mov
retf
movs
out
sub
pushf
scas
xor
dec
ins
fs
aas
push
scas
sbb
in
mov
nop
in
jl
pop
mov
mov
ret
xchg
jge
bound
sub
jno
imul
es
nop
icebp
jl
jns
aaa
aad
dec
stos
jnp
test
jg
out
xor
mov
mov
adc
into
add
sbb
enter
pop
mov
loope
inc
dec
push
dec
xchg
sbb
inc
jg
or
or
sbb
pop
icebp
mov
jmp
ins
and
adc
xchg
xor
nop
push
sbb
sahf
pop
imul
test
dec
cld
(bad)
das
add
imul
shl
inc
ss
call
shr
inc
cs
mov
stos
into
adc
xchg
sbb
gs
inc
jb
pop
ins
jne
sub
push
mov
cmp
ffreep
jbe
cmp
data16
mov
xchg
pop
jae
mov
pop
push
cmps
test
and
pop
(bad)
out
cmp
imul
cmc
add
iret
dec
push
fwait
mov
call
inc
stc
push
leave
bound
ss
sub
imul
pop
xor
test
in
test
dec
imul
pop
shl
xchg
sub
mov
push
in
push
iret
push
cmp
push
movs
push
inc
xchg
(bad)
dec
iret
jmp
clc
and
or
test
outs
(bad)
mov
mov
and
repnz
cli
mov
js
sub
jmp
int3
ss
xor
(bad)
fld
aas
and
or
in
fistp
mov
cmp
loop
push
xor
or
(bad)
arpl
shl
pop
mov
shl
xchg
fisub
es
pusha
dec
out
mov
xor
shl
popf
mov
test
jo
dec
cmp
cmps
fldcw
daa
jae
mov
pop
adc
adc
mov
test
rcl
dec
add
push
xor
(bad)
out
cmp
and
and
lahf
inc
test
push
push
pop
repnz
sub
and
pop
das
and
jge
fnstcw
or
fcom
jmp
push
xor
out
xchg
movs
push
or
imul
dec
stos
add
repz
test
clc
loop
(bad)
xchg
push
das
dec
push
aam
add
cmp
stos
lds
sti
mov
mov
pop
push
fnsave
sbb
mov
(bad)
cs
adc
call
push
jo
or
repnz
add
lea
test
es
push
imul
into
icebp
test
mul
mov
aaa
mov
jae
test
arpl
fwait
adc
jmp
repz
mov
mov
hlt
mov
xor
stos
jmp
cmp
sahf
sub
pushf
stos
ror
add
adc
mov
lods
or
jl
jge
es
addr16
or
in
cld
mov
mov
jp
fcmovnbe
leave
ins
jp
call
mov
push
mov
adc
dec
ja
jecxz
or
push
jmp
es
cli
cmp
neg
test
mov
sub
fwait
sbb
retf
dec
fwait
lock
rol
dec
les
sbb
jne
test
push
xchg
imul
jmp
sub
jno
push
xchg
sbb
mov
pusha
in
dec
mov
xor
ret
(bad)
ins
or
pop
dec
xor
xchg
fimul
xchg
adc
out
(bad)
mov
ficom
mov
addr16
push
dec
and
je
leave
xor
xchg
jb
stc
pop
jg
cmp
adc
ror
cdq
dec
out
pop
and
mov
bound
into
cmp
mov
clc
mov
out
lock
loop
pop
not
stos
fldcw
and
jl
add
jmp
lock
cwde
dec
in
lock
mov
aaa
xor
fcomp
dec
pop
push
and
movs
in
dec
mov
mov
out
(bad)
mov
lahf
pusha
push
mov
cmps
mov
adc
sbb
cmp
cmp
mov
sbb
mov
outs
cmps
pop
add
jbe
std
pop
pop
mov
movs
jb
mov
sbb
push
push
(bad)
movs
imul
jl
fldcw
mov
cmp
mov
in
adc
add
mov
fild
xchg
pop
cdq
xchg
push
add
daa
sub
and
cmp
ja
jge
icebp
in
adc
dec
xchg
mov
ja
movs
ins
and
iret
clc
sar
xor
gs
(bad)
xor
xlat
pop
xchg
push
jg
sub
jo
and
pop
(bad)
sbb
sub
int3
scas
fstp
(bad)
jmp
lock
xchg
jle
scas
ret
int3
sahf
shl
mov
rol
dec
mov
jp
mov
mov
mov
fbstp
sub
cmp
or
daa
rcr
es
push
repz
sub
out
mov
push
jl
out
push
(bad)
(bad)
cmp
lahf
sub
sub
xchg
std
imul
adc
(bad)
fisub
shl
add
call
mov
stos
(bad)
inc
in
retf
and
ins
mov
fcmovbe
adc
rcr
into
shl
push
jbe
sub
ins
ret
mov
lock
fnstsw
ficomp
adc
arpl
mov
jb
ja
int3
jae
push
jl
cmps
mov
push
add
mov
jecxz
push
(bad)
int
cmp
mov
gs
mov
xor
mov
mov
lods
mov
jbe
std
int
add
sbb
mov
sbb
mov
adc
cmc
sbb
inc
jmp
sbb
jle
push
stc
in
or
xchg
mov
sub
scas
dec
pop
sub
clc
mov
cmps
xchg
xchg
mov
jp
das
stos
xor
in
aam
bound
xor
stos
xchg
fcom
repz
call
sbb
aas
adc
retf
rol
add
push
int3
pop
ds
inc
std
adc
jmp
(bad)
cmp
inc
push
cli
mov
js
rcl
mov
xchg
pop
xor
outs
cwde
jmp
push
pop
add
xor
add
jnp
cld
iret
loope
push
aam
pop
out
aad
sbb
adc
leave
in
mov
jo
in
dec
dec
retf
cmps
cmp
test
shl
scas
cwde
xor
aas
test
cmc
xor
inc
cmp
scas
or
xor
dec
push
xchg
jno
and
into
cmp
jmp
rcl
sub
lods
inc
(bad)
pop
add
dec
aas
cmps
in
popf
aas
add
jp
inc
xor
icebp
mov
ss
test
es
sbb
aam
int
leave
xchg
mov
cmp
sub
mov
pop
xor
popa
(bad)
jmp
jmp
jl
mov
sub
inc
pop
das
rol
cmp
gs
outs
lock
(bad)
ins
inc
dec
adc
inc
mov
fs
jne
out
xchg
sbb
jb
mov
push
fimul
xor
std
addr16
dec
adc
sub
or
cdq
jecxz
xor
hlt
fisttp
pop
pop
lods
(bad)
mov
mov
xchg
cmp
sbb
fwait
in
push
in
dec
movs
and
pop
or
mov
adc
jbe
or
and
ja
dec
into
nop
adc
dec
pop
sub
outs
(bad)
(bad)
xor
mov
sar
inc
mov
div
std
dec
stos
aam
sbb
shr
cmps
jmp
sbb
jo
adc
retf
adc
push
sbb
add
(bad)
add
xor
adc
dec
add
add
adc
loopne
das
push
aad
std
sbb
jmp
pop
adc
test
adc
pop
shr
test
ja
retf
ret
mov
shl
test
jo
imul
xchg
aas
inc
test
ins
inc
add
xchg
xor
or
xchg
shr
int3
call
fbstp
das
frstor
je
pusha
or
pop
inc
sti
mov
sbb
and
add
jne
cwde
or
inc
push
pop
repnz
or
mov
int
pop
push
scas
out
mul
test
xor
and
xor
in
mov
adc
push
dec
fld
hlt
in
cmc
cmp
ret
pop
xor
test
pop
sbb
mul
outs
push
retf
outs
dec
pop
adc
xchg
fist
sbb
jns
enter
cmp
cmc
sbb
cmp
jno
cdq
out
pop
and
inc
and
inc
jmp
sbb
(bad)
sub
fiadd
pop
(bad)
(bad)
add
sub
fdiv
std
add
and
xchg
sub
push
jne
adc
in
cmp
jno
fsubrp
inc
fwait
jbe
sbb
mov
leave
inc
push
cmp
fdiv
push
ret
mov
push
sbb
mov
and
mov
add
in
(bad)
mov
std
stos
in
in
scas
loop
mov
jmp
mov
sub
outs
int
cmps
loop
push
xchg
or
aam
sub
sub
cmp
addr16
daa
and
dec
sahf
jae
stos
lods
pop
fucomi
inc
xlat
pop
into
imul
into
gs
into
(bad)
pop
sbb
(bad)
pop
ror
or
adc
add
pop
daa
xchg
adc
jne
inc
fisubr
jns
aam
icebp
in
lods
cmp
sub
daa
mov
or
push
test
addr16
cmp
std
mov
icebp
leave
and
stc
lea
leave
xor
push
jge
mov
aaa
repnz
push
cmp
stos
mov
cmp
aam
fld
leave
mov
dec
fst
add
call
jge
or
inc
pop
sub
stc
inc
out
imul
stos
add
(bad)
(bad)
call
stos
add
inc
int3
or
push
dec
cli
cmps
in
out
pop
xor
sbb
pusha
movs
hlt
mov
jns
cli
cdq
(bad)
jo
inc
xchg
mul
pop
pop
ja
cmp
push
mov
push
jge
dec
mov
in
jmp
ss
xor
cmps
ins
outs
xchg
xchg
test
jns
cmps
mov
pop
xor
xor
jno
add
dec
lods
xor
dec
mov
dec
mov
in
xchg
xor
addr16
cmps
jnp
dec
lods
xor
push
inc
jns
push
call
inc
cli
std
add
shr
pop
dec
pop
push
inc
sub
loopne
daa
xchg
or
cmp
rcl
sbb
loope
shl
and
push
push
cmp
dec
mov
loopne
call
jecxz
inc
adc
jno
xor
pop
aas
jmp
scas
enter
sti
cwde
sbb
sbb
nop
(bad)
and
adc
mov
mov
daa
fistp
pop
add
mov
neg
call
sbb
sbb
loopne
jns
movs
sbb
fsubr
mov
xchg
and
push
call
sub
jae
mov
scas
retf
out
leave
sub
sbb
inc
mov
xor
jecxz
aas
(bad)
aad
push
ins
push
inc
jb
iret
push
test
pop
fdivr
outs
add
ss
and
bound
cmp
cmp
inc
push
mov
pusha
inc
mov
xchg
fimul
adc
mov
add
scas
jnp
in
mov
inc
push
sub
cmps
pop
or
sub
adc
loop
jle
push
sar
inc
cs
mov
rcl
outs
jno
and
mov
cmp
shl
mov
pand
mov
movs
in
loop
int3
mov
lea
inc
jp
bound
jl
xor
std
lods
sti
xchg
repz
setp
movs
(bad)
cdq
xchg
sub
dec
xor
jmp
or
pop
mov
rcr
div
add
aas
imul
enter
dec
fisub
mov
int3
enter
arpl
call
cld
push
add
xor
pop
push
cmps
ins
or
test
shl
imul
in
in
je
aad
mov
push
div
mov
pop
repz
jne
add
cmp
ret
popa
std
pop
jmp
retf
dec
inc
inc
dec
repz
dec
xor
clc
cwde
jbe
xchg
sbb
or
std
mov
mov
lock
mov
test
ret
or
lahf
pop
movs
shl
mov
pop
cmc
jb
cmp
pop
mov
dec
out
mov
xor
rcr
into
mov
dec
std
mov
cs
imul
aam
fist
mov
jnp
xlat
clc
jecxz
in
cld
int
ja
pusha
dec
cmp
dec
sar
aad
ret
jle
mov
jmp
cmp
mov
inc
iret
dec
pop
sub
jno
mov
xchg
dec
jmp
adc
jg
cld
ret
push
aas
push
jecxz
(bad)
pop
in
test
mov
(bad)
test
cmc
adc
or
jg
rcl
fdivr
mov
rcl
mov
inc
sub
pop
adc
jo
leave
push
dec
leave
inc
loop
test
mov
sahf
sbb
call
jmp
mov
push
arpl
cmp
mov
cmp
jge
pusha
jae
and
adc
mov
and
imul
xor
jg
push
into
loope
in
retf
jl
fistp
mov
mov
sbb
jnp
inc
fst
shl
mov
cmp
cmp
mov
sub
pop
and
js
ror
xor
pop
dec
xchg
mov
mov
xlat
xchg
xchg
aad
cmp
xchg
xchg
scas
cmp
shl
rol
jno
pop
loopne
fs
xchg
jnp
div
fst
mul
arpl
repnz
or
cmps
pop
jbe
inc
popf
pusha
cs
push
fsubr
pop
cmp
test
or
(bad)
call
xor
sub
inc
pop
nop
cmp
popa
fst
stc
or
shl
and
adc
cmps
sbb
adc
enter
movs
movs
out
addr16
push
js
rcl
dec
ds
mov
pusha
pop
enter
das
pop
fnstenv
fsub
sub
cwde
push
bound
stos
pop
sub
call
or
jmp
jae
xor
fisttp
rcr
cli
ret
popf
shl
jne
dec
imul
mov
push
call
psadbw
cmp
adc
cwde
push
mov
imul
ja
add
ds
inc
icebp
ins
and
inc
call
mov
or
in
loope
daa
adc
sar
sbb
xchg
dec
cmp
mov
shr
sbb
pop
mov
mov
adc
(bad)
icebp
pop
add
sbb
out
arpl
add
mov
(bad)
add
or
mov
push
fs
stc
std
inc
add
aaa
clc
loop
addr16
dec
xor
add
fnstcw
ja
dec
xchg
dec
push
mov
or
adc
add
or
ret
push
lea
mov
and
sbb
movs
ror
stc
sbb
add
cmps
or
mov
mov
leave
push
sbb
int
dec
cmps
loopne
outs
mov
cmc
je
fst
shl
and
xor
outs
repnz
mov
cmp
(bad)
dec
or
inc
cwde
xchg
fcom
(bad)
pop
es
mov
pop
inc
and
and
push
push
repz
aaa
outs
(bad)
popf
add
lods
das
(bad)
int
push
mul
pusha
mov
jne
jno
mov
movs
nop
mov
jmp
hlt
push
jns
cli
ret
dec
popf
inc
xchg
pop
int3
cmp
add
(bad)
xor
sbb
sar
(bad)
xchg
leave
popa
lahf
es
(bad)
jge
xor
and
out
sub
sar
into
push
push
setp
dec
leave
dec
pop
sbb
aas
sub
mov
dec
pop
and
stos
xor
cmp
push
cmp
cmp
loopne
push
inc
je
dec
cmp
pop
add
test
jmp
xchg
sub
fcomp
aam
add
lock
scas
xchg
stos
jo
cs
stos
leave
jbe
movs
mov
ja
outs
stc
dec
xor
mov
add
(bad)
es
mov
inc
jbe
fisubr
cdq
lea
leave
push
xor
push
pop
sub
mov
inc
mov
aad
int3
sar
outs
xchg
imul
mov
daa
xchg
push
es
retf
lods
nop
nop
add
aaa
push
push
repz
imul
in
xchg
shl
jbe
jecxz
stos
(bad)
and
cmp
out
add
xchg
loope
xlat
(bad)
cmps
cmp
dec
and
imul
xor
mov
mov
imul
std
(bad)
outs
cdq
(bad)
push
jne
int3
call
inc
test
popa
stc
inc
add
js
mov
push
sub
clc
xchg
pop
and
je
fcom
or
push
push
jmp
lods
movs
xchg
adc
repnz
push
adc
xor
repz
mov
jns
and
clc
mov
stos
xchg
inc
xor
xor
inc
dec
push
xchg
mov
in
mov
mov
outs
inc
cli
stos
push
push
popf
mov
lds
lahf
mov
clc
(bad)
fsub
cmp
inc
ins
test
jno
call
sub
xchg
imul
mov
push
push
std
push
pop
xchg
inc
test
outs
fcom
xchg
ret
inc
add
cmc
iret
xlat
(bad)
aaa
xor
in
or
mov
hlt
int3
sar
ficom
pop
cs
inc
jnp
xchg
out
imul
into
fs
retf
ret
xchg
cmp
cmps
call
call
xchg
and
mov
(bad)
inc
out
fcmovne
es
mov
inc
cwde
xchg
push
not
and
lock
jge
or
or
inc
pop
(bad)
ds
push
lock
ins
inc
or
cli
adc
inc
ja
inc
gs
mov
in
push
sbb
cmp
push
pop
and
inc
add
cs
sub
rol
push
cwde
out
in
stos
outs
test
nop
dec
retf
icebp
(bad)
clc
pop
movs
and
into
arpl
cmc
sub
sbb
xor
sbb
loopne
add
cmp
call
push
ret
int3
mov
outs
cmp
xor
dec
iret
dec
dec
pop
shr
test
xchg
jno
xor
movs
data16
cmp
add
pop
loope
fbld
ficomp
dec
cmc
(bad)
mov
fcomip
mov
lds
jl
scas
mov
(bad)
mov
xchg
pop
pop
or
ds
pop
cmp
ds
jecxz
mov
scas
inc
outs
imul
scas
or
pop
mov
jnp
mov
jbe
push
nop
sbb
jecxz
shl
inc
int
or
test
(bad)
jle
aad
loope
and
imul
test
ja
xchg
jp
pop
and
pop
adc
or
mov
std
mov
fwait
sahf
jl
xchg
and
push
cs
cmc
(bad)
inc
jne
repnz
pop
mov
mov
mov
mov
test
jecxz
(bad)
aad
(bad)
cmc
pop
and
repnz
call
jmp
xchg
clc
loope
sbb
inc
sbb
jl
out
cdq
mov
pushf
xor
es
retf
inc
hlt
sar
adc
or
fstp
push
mov
fnstsw
jg
fmul
rcl
jns
add
mov
fcomp
call
test
das
dec
fst
ror
into
lea
pop
out
in
fsubr
inc
cli
test
jl
mov
loope
adc
movs
sbb
dec
sub
ror
lods
mov
mov
pop
mov
(bad)
mov
ins
out
test
mov
mov
cmps
lea
imul
jp
lahf
jecxz
mov
inc
test
push
loop
mov
mov
adc
inc
mov
xchg
mov
scas
cmc
sbb
scas
add
sbb
(bad)
pop
fwait
jle
push
sti
sbb
out
push
mov
out
jmp
pop
out
push
mov
inc
int3
fadd
cmp
sub
jb
sub
cmp
js
mov
xchg
fmul
outs
out
push
mov
sbb
(bad)
mov
cmp
test
mov
push
and
dec
jb
lock
and
sbb
shl
inc
inc
call
jo
sub
add
jmp
cwde
cs
jae
jge
push
enter
xchg
jbe
(bad)
cld
mov
and
mov
ret
(bad)
dec
xchg
sub
xchg
ja
ds
xchg
stos
inc
push
loopne
clc
mov
push
dec
push
outs
arpl
cmps
aaa
add
ror
mov
xchg
or
leave
xor
repnz
xor
jne
loop
clc
sbb
mov
cmove
mov
xchg
movs
mov
or
mov
mov
ins
push
shl
jge
xor
or
popf
ins
and
inc
movs
sbb
dec
pop
(bad)
adc
push
fisttp
leave
pop
movs
dec
fmul
mov
or
inc
scas
bound
add
sbb
push
shr
adc
leave
in
push
test
fs
mov
and
push
or
fisttp
sbb
ss
and
mov
popa
fwait
(bad)
out
push
(bad)
or
or
dec
cmc
cmc
into
popf
mov
fxch
out
in
sti
(bad)
retf
push
add
mov
js
ret
mov
add
xchg
test
inc
and
lock
cmp
fisubr
int
mov
xchg
cwde
mov
push
xchg
iret
xor
lock
xor
pushf
cmps
pop
pop
jecxz
fmul
jg
popf
enter
mov
xchg
scas
sub
push
adc
scas
jb
pmuludq
outs
test
dec
inc
loopne
or
ins
or
adc
jnp
or
icebp
loope
sbb
dec
xor
cli
call
cmc
sbb
ror
daa
pop
lods
icebp
inc
xchg
mov
cmps
and
pop
or
push
(bad)
imul
sub
mov
jb
push
not
push
jo
mov
inc
loop
mov
shr
aam
mov
dec
inc
fstp
lds
sar
xor
xor
push
test
call
jo
sbb
xor
ret
dec
mov
mov
dec
lods
inc
mov
xchg
imul
xor
mov
lahf
sub
aaa
loop
movs
lods
jp
push
xlat
push
ret
loop
add
xor
shl
adc
loope
mov
mov
jne
fist
mov
adc
xor
sbb
rcr
mov
mov
or
jno
inc
mov
pop
lods
repnz
ret
icebp
aas
imul
aam
lock
mov
or
popf
leavew
jl
jecxz
in
dec
clc
push
fs
arpl
cmps
outs
sbb
stos
test
jnp
shl
xchg
xchg
xchg
int
sub
inc
xchg
xor
jle
mov
pop
pop
xlat
iret
shr
mov
leave
mov
loope
dec
pop
jae
jb
cmp
call
cmp
inc
xor
dec
hlt
mov
ret
out
mov
mov
xor
jb
jecxz
xchg
in
fwait
sahf
or
call
dec
mov
sbb
xchg
addr16
inc
retf
mov
mov
movs
sbb
lock
(bad)
cmps
or
sub
addr16
fs
(bad)
jle
or
and
inc
in
pop
fadd
adc
pop
sub
xor
jae
icebp
jp
inc
arpl
mov
sub
outs
aad
mov
inc
int
std
fadd
lea
iret
and
pop
rcl
add
(bad)
mov
adc
stos
push
ret
xchg
ja
rcr
push
inc
in
enter
pop
xchg
xlat
add
mov
jge
stos
ss
xor
imul
lods
xor
in
mov
nop
pop
pop
es
pop
in
cs
jmp
out
nop
adc
mov
mov
push
cmp
cdq
and
iret
pop
das
cmp
sar
dec
jp
iret
(bad)
leave
or
(bad)
or
sub
push
mov
jmp
test
hlt
popa
es
and
jle
ret
mov
icebp
pop
or
(bad)
loope
push
std
std
pop
mov
(bad)
cli
imul
retf
add
into
in
push
cmp
inc
(bad)
mov
mov
mov
or
push
cld
dec
loope
(bad)
outs
repz
hlt
cli
jb
int
leave
(bad)
repz
and
adc
out
sub
sbb
addr16
nop
jp
inc
mov
add
or
inc
into
mov
leave
fisttp
stc
int3
pop
(bad)
inc
repnz
inc
sub
fist
div
fmul
(bad)
pop
popa
sub
sub
fisubr
(bad)
shr
jge
pop
push
inc
fwait
or
cdq
push
aam
in
pop
ds
sub
and
pusha
cmps
int3
xchg
sbb
jbe
out
push
sbb
xor
icebp
mov
sub
cmp
xchg
es
dec
push
cmp
pop
push
sub
pop
iret
cdq
in
adc
adc
pop
mov
(bad)
outs
pop
inc
outs
loope
sub
sbb
jno
push
test
test
sahf
inc
sbb
xchg
lahf
cmps
push
ins
retf
movs
dec
je
shl
sbb
out
into
cmps
inc
rol
(bad)
push
xor
pop
outs
sahf
arpl
jnp
push
fisttp
jge
sub
(bad)
push
les
imul
and
and
adc
adc
adc
sbb
shl
dec
outs
push
int
or
jno
mov
sbb
mov
add
ins
cmps
xchg
call
ficomp
nop
mov
in
nop
cdq
inc
(bad)
cmps
push
adc
(bad)
enter
mov
xchg
lahf
(bad)
sub
inc
mov
sub
(bad)
bound
sar
jmp
pop
ds
mov
sub
pop
mov
push
dec
mov
mov
mov
aad
pop
jmp
imul
in
je
icebp
push
(bad)
nop
jmp
mov
ins
xchg
dec
pop
outs
xchg
movs
cmp
dec
or
jmp
test
pop
inc
xchg
adc
inc
push
inc
or
or
int3
add
test
(bad)
aaa
jl
jecxz
into
or
mov
into
ror
nop
stos
mov
jb
bound
add
xchg
test
jnp
lock
push
cmp
test
mov
pop
and
mov
xchg
adc
xchg
repz
mov
cwde
bound
loope
adc
es
sub
dec
aaa
xor
loope
or
and
jg
xor
rcr
sub
or
cmp
shl
shl
shr
xchg
push
dec
aas
jbe
or
push
dec
inc
cmp
dec
sub
xchg
bnd
inc
mov
add
addr16
fstp
cmp
xchg
cmp
add
ret
sbb
push
aas
cmp
push
lock
fsub
clc
(bad)
(bad)
or
icebp
cmps
daa
pop
push
sbb
jecxz
mov
fsub
std
jecxz
dec
mov
adc
rcl
lods
xchg
and
scas
mov
jnp
out
adc
std
mov
sbb
enter
retf
das
imul
mov
or
mov
cmps
mov
or
mov
xchg
inc
jbe
sub
cs
xchg
mov
push
aaa
or
sub
pushf
js
cmp
sub
push
retf
ja
inc
lods
or
mov
sub
xchg
ins
add
pop
or
jae
inc
mov
jae
add
lods
add
loop
pop
addr16
sub
jo
lods
xor
sbb
inc
push
and
aam
add
inc
mov
xchg
in
clc
(bad)
out
jae
adc
lods
dec
cmp
add
or
mov
call
push
leave
jns
cmp
stos
bound
cmps
inc
and
sbb
dec
mov
inc
inc
nop
ret
test
lahf
xchg
aad
or
jge
out
push
mov
add
pop
jae
jb
jle
loopne
lods
(bad)
pcmpgtb
ret
imul
(bad)
(bad)
cmp
ret
and
add
push
mov
or
fidivr
nop
rcr
xchg
inc
mov
pop
shl
neg
loope
xrelease
scas
push
sar
inc
test
mov
add
int
fistp
not
xchg
push
push
test
stc
mov
js
imul
xor
xor
inc
dec
mov
pop
fistp
mov
fs
adc
cmps
jmp
fsub
sahf
mov
test
xchg
std
pop
ret
(bad)
mov
daa
sbb
dec
setns
clc
mov
shl
push
xchg
neg
dec
test
fcom
or
jmp
adc
das
and
jmp
push
jl
pop
fiadd
mov
xchg
retf
test
fdivp
clc
inc
inc
cmps
fiadd
in
add
or
lahf
cmp
scas
out
nop
pop
aam
push
cmps
add
addr16
pop
outs
enter
loope
or
out
inc
int3
mov
push
mov
xchg
inc
aaa
cmp
popf
mov
push
leave
stc
inc
xor
pusha
retf
das
sahf
repnz
cmp
xor
push
adc
xchg
push
dec
cmc
test
fcom
mov
pop
jp
bound
cwde
pop
test
push
fsubr
scas
mov
jbe
mov
inc
inc
push
cmp
adc
inc
dec
ins
mov
sbb
jle
aad
mov
(bad)
mov
and
(bad)
jmp
xchg
popf
fucomip
daa
jno
std
push
push
inc
push
pop
mov
fld
sar
out
pop
cs
add
loopne
dec
mov
sub
ins
xchg
repnz
mov
(bad)
push
cmp
and
std
les
jb
(bad)
mov
jmp
mov
loop
lea
and
push
push
inc
sbb
and
cli
jo
in
cmps
lods
fldenv
push
adc
push
stos
xchg
sub
jns
(bad)
mov
and
xchg
cmp
adc
push
pop
mov
mov
fdivr
clc
push
loope
dec
mov
out
and
nop
das
or
push
stos
popa
bound
jecxz
pushf
arpl
mov
mov
sub
push
les
jb
xor
dec
jmp
push
cli
pop
mov
add
sub
or
cmp
arpl
xchg
mov
test
sbb
xchg
mov
addr16
(bad)
ins
in
or
push
mov
sahf
push
mov
(bad)
jg
jmp
out
cmp
fsub
outs
rcl
add
xor
jnp
pusha
xchg
mov
imul
pop
cmp
je
scas
outs
xchg
ins
mov
movs
jl
les
out
fsqrt
adc
out
ins
enter
cmp
lock
arpl
xlat
pop
fdiv
adc
cmps
jge
pop
std
imul
adc
cmp
or
dec
pop
mov
mov
xor
sub
(bad)
movzx
mov
(bad)
bnd
xor
into
nop
add
out
(bad)
and
mov
push
out
(bad)
(bad)
or
out
clc
push
adc
mov
mov
ja
and
add
retf
imul
jb
stos
cs
loopne
out
jle
popf
push
dec
add
loop
xchg
mov
lds
inc
xor
int
(bad)
adc
bound
or
or
push
int3
dec
dec
adc
mov
popf
mov
outs
out
pop
movs
push
pop
iret
imul
xchg
mov
mov
addr16
popa
je
in
out
sub
fisubr
ins
xor
mov
mov
out
movs
pushf
mov
jnp
dec
jmp
or
add
jno
push
jbe
pushf
or
xor
cmps
lahf
push
inc
mov
imul
shl
dec
loopne
(bad)
ja
sub
or
or
cmp
aaa
mov
jnp
sub
loop
fisttp
sahf
imul
jle
test
add
and
and
mov
jl
xchg
(bad)
icebp
mov
sbb
xchg
fstp
inc
dec
cmp
jl
xor
add
or
hlt
ficom
mov
nop
pop
inc
xor
test
push
ss
or
retf
nop
or
repnz
pop
pop
and
add
ins
jno
sub
or
pusha
push
mov
sbb
jae
popa
sbb
inc
xor
in
idiv
retf
jge
js
sti
daa
int3
popf
std
test
(bad)
fcom
push
sub
sbb
enter
dec
pop
adc
adc
sbb
popf
scas
mov
pop
mov
shl
(bad)
mov
jge
ror
mov
cmp
dec
pushf
pushf
xchg
push
push
aam
nop
mov
mov
in
les
aas
jo
cs
or
lock
jle
xchg
es
jge
or
out
and
or
and
mov
loopne
xchg
imul
mov
ret
outs
daa
hlt
xchg
in
daa
xchg
sbb
push
cmc
test
cmp
add
out
add
test
or
sti
xchg
mov
je
mov
jns
inc
mov
mov
push
sub
pop
cmp
test
sbb
out
xchg
icebp
shr
dec
test
sti
(bad)
not
mov
in
in
pop
push
out
and
push
xor
dec
pop
jae
repz
arpl
jbe
or
mul
les
push
adc
addr16
fidivr
xlat
mov
jmp
scas
in
push
cwde
stos
dec
std
mov
mov
ds
push
mov
iret
ret
repz
pop
adc
cmc
jg
(bad)
sbb
ds
mov
lds
mov
fimul
or
imul
add
mov
mov
lds
rcr
(bad)
aad
jae
mov
test
das
add
xchg
aad
lods
push
sub
sbb
dec
cmp
add
jo
(bad)
ret
mov
arpl
jae
pusha
mov
cs
dec
into
sbb
jo
and
dec
mov
das
jne
out
pop
dec
sub
dec
dec
iret
sub
stc
jb
cld
shl
xchg
inc
sub
mov
xchg
cmc
mov
je
imul
popa
retf
add
or
sub
out
mov
not
dec
mov
nop
or
and
dec
out
mov
jo
imul
lods
mov
(bad)
xchg
cmc
jo
cmps
add
inc
test
ins
jg
adc
rol
jecxz
imul
call
adc
(bad)
cld
(bad)
fbld
pushf
mov
mov
pop
inc
shr
retf
jo
out
ss
mov
arpl
or
xor
cdq
aam
mov
pop
and
mov
into
cmp
outs
cs
sbb
ret
inc
scas
mov
addr16
aam
test
fdivr
jno
or
repz
dec
and
nop
retf
sbb
inc
cmp
mov
and
xchg
scas
dec
clc
(bad)
enter
pop
stos
in
push
inc
popa
lods
sahf
sbb
and
xlat
call
(bad)
popa
clc
stos
jno
lods
push
(bad)
mov
les
or
adc
aam
fdivr
mov
xor
xor
dec
lods
out
dec
icebp
push
or
call
imul
xchg
mov
in
ja
pop
jge
repnz
xchg
fstp
inc
imul
xor
pop
xchg
sbb
sub
pop
int
push
cdq
inc
aaa
mov
add
out
jb
pop
mov
lods
or
mov
fwait
and
mov
shr
adc
jnp
xchg
mov
ja
dec
or
xor
retf
into
pushf
out
mov
xor
scas
mov
ds
jnp
xor
mov
(bad)
retf
int3
add
lahf
ins
xlat
clc
jns
push
jge
push
(bad)
retf
cs
or
(bad)
mov
jmp
stos
jno
pushf
adc
jb
js
xor
pop
or
out
lahf
imul
ins
stos
popf
cmp
mov
stos
xor
repz
cmp
inc
pop
jns
push
cmps
pop
cmc
loope
cmps
mov
jge
aam
pop
sbb
cmps
movs
mov
mov
xchg
ret
and
shr
test
xchg
es
xchg
cmp
or
dec
sbb
stos
sub
pushf
sub
dec
or
inc
dec
mov
aaa
les
popf
xor
test
(bad)
mov
ret
cmc
inc
ja
pop
popf
lods
test
pop
lds
out
cmp
jg
dec
sbb
xchg
je
(bad)
fisttp
in
in
xor
(bad)
pop
add
cmp
jmp
gs
call
xor
sar
cld
dec
xchg
mov
sub
sbb
mov
call
test
pop
dec
imul
xor
fdivp
inc
popf
cmp
push
mul
xchg
bound
sub
aaa
daa
jge
into
lods
xchg
sti
jge
dec
lods
cld
lea
adc
adc
aaa
jg
mov
jl
xchg
cmp
pop
xor
clc
shl
mov
out
cli
mov
mov
xchg
mov
cmp
jmp
movs
adc
or
pushf
test
shl
cmps
cmp
dec
or
sar
mov
loopne
repz
out
or
rcl
cmp
and
dec
and
mov
adc
and
fcomp
and
(bad)
(bad)
in
xor
mov
mov
mov
fisttp
ss
cmps
xor
outs
int
sub
stos
std
sbb
rcl
ror
inc
loopne
inc
ja
add
xchg
nop
psadbw
dec
xchg
repz
test
sbb
mov
in
or
jl
or
mov
push
int3
mov
mov
lahf
mov
mov
repz
stos
adc
mov
xchg
push
push
xchg
and
push
jbe
frstpm(287
lahf
mov
pop
inc
jmp
mov
sbb
gs
outs
mov
(bad)
stos
popf
mov
out
push
jb
pusha
loopne
xchg
fs
test
in
push
call
and
sbb
mov
pop
cwde
push
mov
repnz
(bad)
fld
out
lods
sub
pop
or
loopne
push
adc
popa
mov
add
jbe
out
add
stc
inc
fisub
dec
pop
xor
imul
or
outs
pushf
push
aaa
jmp
mov
mov
shl
(bad)
mov
scas
ins
dec
push
mov
and
cmps
inc
imul
mov
dec
inc
inc
push
mov
xlat
sub
popa
pop
mov
cwde
shr
jae
jo
es
lock
mov
aad
retf
bound
loope
cdq
cmp
mov
sub
je
int
add
adc
cmps
and
mov
lods
lods
mov
sbb
xchg
imul
mov
mov
push
inc
das
popf
xchg
mov
and
cmps
sub
stos
loopne
jl
mov
outs
sbb
lods
retf
data16
jge
and
push
dec
(bad)
sub
movs
jmp
clc
push
test
xor
fstp
pop
mov
pop
cli
lea
mov
or
fdivr
sbb
pop
cmp
in
scas
not
pop
out
sub
(bad)
int
push
jmp
jmp
or
daa
sahf
pop
dec
xchg
and
sbb
lock
pusha
adc
xor
inc
rcl
sub
and
xchg
nop
out
pop
dec
bound
mov
dec
inc
mov
mov
xor
test
scas
dec
jle
stos
push
ret
test
sbb
inc
in
adc
int3
jo
sub
push
lahf
push
or
shl
cmp
mov
leave
inc
cmps
and
test
out
pusha
cmp
cmps
jb
mov
mov
or
popa
or
pop
cmps
aad
add
add
xor
pop
and
in
das
sbb
lods
xor
sub
mov
sub
pop
sar
xor
lea
mov
and
out
in
arpl
lds
rol
push
cmp
les
ror
mov
pushf
das
out
lods
lea
sbb
call
rcr
int
aam
jge
adc
hlt
scas
(bad)
sbb
lods
stos
mov
mov
or
loop
outs
mov
loope
jmp
pop
xchg
sahf
inc
and
in
xchg
out
adc
xlat
not
shl
sbb
iret
fldcw
xlat
pop
sub
mov
repz
mov
retf
les
push
pop
pop
into
pop
mov
outs
adc
inc
in
mov
sti
test
pop
inc
out
(bad)
aaa
test
dec
popf
xchg
lahf
cli
cli
fs
popa
sbb
je
ins
les
xchg
cmp
jb
jbe
lock
ds
bound
inc
or
jo
mov
(bad)
int3
inc
lods
add
repnz
mov
addr16
aas
xchg
shl
mov
mov
cmp
push
push
cdq
sub
cmp
add
(bad)
fld
xchg
les
dec
push
mov
mov
sbb
mov
loope
mov
cmp
test
daa
cmp
call
imul
xchg
cmp
aam
push
std
pop
fistp
sub
loope
idiv
xor
mul
jmp
sbb
mov
sbb
xor
push
les
cmp
rol
adc
arpl
dec
inc
inc
cld
mov
imul
test
icebp
sahf
xchg
dec
pop
xlat
or
popa
int
arpl
test
jp
sbb
xchg
inc
push
rol
mov
mov
retf
mov
dec
(bad)
mov
sub
adc
pop
inc
jl
ja
je
push
inc
mov
inc
mov
sub
pop
push
ins
in
adc
pop
movs
push
push
jo
mov
pop
sbb
test
sub
not
cmp
push
test
push
fnstcw
lods
jge
in
ret
loopne
pop
sbb
fwait
mov
out
dec
xor
pop
pop
dec
fwait
mov
add
test
test
xor
lods
scas
push
call
dec
jge
test
(bad)
(bad)
fist
cmp
or
mov
pop
inc
fbstp
int
adc
fld
add
mov
in
sub
frstor
idiv
push
movs
add
mov
mov
ret
outs
fcmovnu
popf
sbb
ins
mov
fsqrt
ins
jg
mov
and
cmp
loopne
pop
imul
adc
push
clc
lea
in
sbb
fs
arpl
jg
sbb
or
jae
xchg
inc
(bad)
xchg
jb
fwait
popf
mov
jne
or
call
sbb
mov
(bad)
xlat
stos
sub
xchg
mov
std
mov
xchg
jno
or
nop
out
add
jmp
in
jp
inc
jno
das
lahf
inc
jbe
jp
cmc
(bad)
adc
push
outs
aad
cmp
rol
or
push
xchg
shl
inc
pop
in
outs
push
xor
xchg
pop
sahf
push
imul
pop
mov
aam
enter
daa
inc
jmp
frstor
or
aas
add
outs
pop
dec
push
mov
add
pop
ret
nop
inc
popf
xor
(bad)
daa
lods
fwait
idiv
cmp
jnp
xor
test
cmp
pop
repnz
daa
xchg
test
shl
shr
jl
pop
pop
sar
push
xor
sti
xlat
aam
jmpw
stos
aad
dec
sub
ror
test
xchg
jnp
repz
retf
push
mov
and
xchg
cld
mov
jge
cmovp
dec
stos
ret
ret
pop
popf
jp
std
xor
or
xchg
push
ret
vhaddps
mov
xor
es
xchg
clc
lea
cmp
fwait
add
or
loopne
xor
outs
mov
add
dec
popf
jg
sub
or
mov
repz
and
dec
sti
inc
das
xor
rcr
sbb
mov
inc
mov
bound
shr
add
cmp
daa
retf
inc
or
push
icebp
jge
das
pusha
adc
sub
ficom
sbb
sti
fcmovnu
push
out
enter
inc
add
cli
(bad)
test
dec
icebp
in
mov
adc
pop
push
ret
repnz
jnp
ror
into
xor
test
sbb
cld
rcr
std
ds
icebp
mov
icebp
test
fisubr
mov
pop
mov
fdiv
sub
(bad)
icebp
fs
sbb
rcl
out
dec
pop
push
xchg
cli
jge
push
xchg
push
add
mov
in
sub
mov
push
xor
jo
adc
or
push
pusha
cmps
mov
dec
fisub
inc
pop
mov
cwde
sbb
shl
sub
daa
sbb
(bad)
cmps
mov
add
lea
or
in
mov
push
test
mov
jmp
pop
or
cmp
pop
mov
cmp
pop
or
jmp
and
jmp
test
add
pop
ds
sbb
mov
retf
push
mov
icebp
adc
dec
push
xchg
lds
sahf
test
and
fwait
bound
in
adc
lods
xchg
mov
or
inc
push
push
(bad)
loope
frstor
cmps
or
movs
in
inc
loop
aas
mov
push
fcmovb
sub
iret
pop
sub
mov
pop
shl
or
adc
xchg
cmp
sbb
out
xchg
inc
and
sbb
cli
repnz
pop
fwait
into
jmp
inc
xchg
(bad)
push
cli
stc
xchg
mov
mov
sbb
dec
add
pop
popf
mul
xchg
mov
lahf
out
addr16
pusha
in
push
sub
push
lahf
cmp
push
in
sar
call
fst
es
and
test
add
retf
jmp
ret
add
cmc
nop
inc
sbb
sub
mov
cmps
add
call
stc
xor
fistp
not
mov
sub
ja
ins
push
or
push
add
ss
xor
jmp
or
push
(bad)
sti
adc
jne
inc
out
aaa
or
mov
(bad)
out
sahf
es
pop
mov
shl
and
stc
imul
sub
mov
sahf
loope
leave
mov
ret
jl
inc
inc
inc
out
loope
(bad)
out
mov
xchg
cli
fs
sbb
mov
pusha
cs
(bad)
push
add
and
and
nop
aaa
mov
xor
jg
mov
mov
dec
sub
rcl
xor
push
outs
lods
cld
cmp
daa
ror
jno
mov
and
push
mov
fs
or
jo
push
in
inc
sub
push
into
inc
inc
fisttp
inc
test
clc
push
pop
sbb
popf
pusha
sbb
ds
(bad)
mov
enter
out
aam
xor
scas
out
mov
xchg
cmp
xchg
xchg
xchg
clc
fwait
stos
dec
cdq
mov
or
loopne
mov
xchg
adc
or
dec
cmp
daa
out
jle
pop
clc
push
lods
rcr
cdq
in
add
in
cmp
in
loop
in
ss
in
cmp
dec
xor
js
into
bswap
ins
fwait
das
pusha
mov
out
loop
div
loope
adc
les
shr
aad
xor
call
vpshufhw
outs
push
cmc
or
xchg
leave
mov
in
push
dec
rol
mov
sbb
jb
aaa
push
rcr
lods
fsub
jo
dec
shr
mov
pop
inc
inc
cmp
(bad)
(bad)
ds
or
in
sbb
test
mov
fcmovnb
ror
imul
scas
sbb
cld
pop
repnz
xor
mov
ss
cmp
or
cmps
dec
test
adc
xchg
mov
or
ror
push
jmp
int
scas
repnz
add
pop
inc
stos
mul
in
arpl
out
pushf
mov
cmp
and
xchg
je
lods
ret
stc
fiadd
adc
jp
mov
sub
(bad)
stos
fs
jge
test
je
cmp
mov
mov
int
cmp
arpl
push
inc
retf
adc
enter
pop
jae
mov
retf
mov
dec
push
sbb
lock
adc
rcr
pushf
aam
(bad)
bound
or
adc
out
mov
push
dec
imul
mov
outs
cmp
xchg
fiadd
push
and
add
sar
sti
pop
push
pop
rcl
fmul
es
sbb
jno
mov
cwde
das
pop
scas
call
or
xor
jae
icebp
and
rcl
mov
jg
jmp
mov
lahf
push
das
cmp
enter
cmps
arpl
mov
cmp
dec
iret
outs
sub
adc
mov
add
fs
push
ficom
inc
xchg
sub
mov
cmps
adc
cld
sub
or
fstp
aad
mov
cmp
jmp
std
and
aas
jg
out
inc
pop
cdq
sub
int
sbb
push
pop
daa
enter
dec
dec
pushf
mov
daa
sbb
add
add
leave
jae
or
fwait
push
iret
sub
stos
mov
pusha
pop
jo
mov
aaa
mov
popa
cmp
add
int3
mov
add
sub
cmp
fsub
fwait
mov
xor
pop
scas
pop
or
pop
mov
shr
in
movs
sbb
ds
arpl
shl
jmp
test
push
fnsave
pushf
lods
stos
xchg
cli
loop
xor
rcl
in
in
jg
xchg
add
or
in
iret
pop
pop
idiv
movs
out
sub
movs
pop
pusha
jne
cmp
bound
inc
pop
iret
mov
dec
in
imul
movs
cli
inc
test
or
or
add
cmc
xchg
imul
and
and
sbb
mov
repnz
xchg
fstp
test
push
xor
push
or
pop
and
xchg
iret
or
cmc
or
es
popf
movs
dec
mov
mov
jmp
loop
jmp
pop
movs
jo
int3
loope
xor
ja
ins
gs
jmp
mov
pop
sbb
sti
fprem
pop
add
inc
jge
push
aad
dec
in
out
and
and
(bad)
xchg
out
xor
xor
(bad)
jge
push
xchg
lahf
lahf
mov
cmp
pop
or
rcl
push
xlat
lahf
popw
mov
stos
pusha
(bad)
cmp
addr16
fwait
mov
ret
popa
fcom
test
std
and
jno
cmc
mov
inc
test
mov
in
repnz
pop
in
scas
scas
pop
test
ror
sbb
or
mov
(bad)
adc
xor
(bad)
stos
lods
jbe
cmp
pusha
popa
leave
aad
stos
xchg
sbb
mov
test
pop
sbb
xor
cmp
add
js
mov
(bad)
add
arpl
jb
mov
ds
mov
xor
out
test
cmp
inc
inc
lods
sbb
add
or
jp
mov
imul
leave
pushf
fnstenv
out
aas
pop
(bad)
stc
je
push
xor
stos
stos
sbb
clc
jmp
ins
call
cmp
jmp
cld
push
xor
cmp
in
push
ficom
and
cli
add
mov
and
out
js
fistp
popf
icebp
xchg
xchg
sbb
adc
addr16
shr
pop
ins
jns
(bad)
cmp
xor
ffree
rol
retfw
mov
loope
sub
adc
aas
pushf
cmp
inc
test
imul
or
(bad)
jno
icebp
and
dec
lods
xor
xchg
mov
into
sbb
cmps
sahf
int
mov
ret
or
dec
imul
data16
jmp
adc
call
sub
mov
lock
or
movs
push
push
adc
hlt
mov
lods
sub
pop
jg
stos
ficom
pop
arpl
pushf
imul
(bad)
jmp
mov
inc
mov
sbb
(bad)
idiv
xchg
push
adc
cwde
mov
lods
int
cs
stc
movs
push
lods
add
xor
pop
jne
or
mov
ins
pop
ret
cmc
popa
int
and
adc
scas
and
ror
ffreep
cmps
cmp
jno
pop
mov
cmp
aad
in
pop
and
test
test
mov
fxch
aam
add
popa
fwait
xchg
pop
ins
in
adc
enter
pop
das
or
test
jne
in
adc
xchg
test
stc
nop
movs
xlat
mov
je
cwde
dec
mov
aam
cmp
mov
scas
movs
inc
adc
sbb
sbb
mov
xor
jno
cmps
repz
xchg
inc
or
bound
mov
bndstx
mov
inc
sub
jae
cmc
in
sub
pushf
inc
add
and
fild
sahf
bound
scas
adc
mov
das
xchg
xchg
iret
jg
retf
ds
test
mov
dec
jo
xor
mov
jge
sub
fs
aam
and
aad
rol
int3
nop
(bad)
or
dec
mov
adc
(bad)
pop
mov
jmp
lahf
pop
fst
repnz
add
jb
in
dec
jno
add
sub
lds
cmps
xchg
pop
mov
add
rcl
out
mov
imul
xchg
mov
popa
pop
es
int
push
push
dec
scas
jo
stos
xor
xor
mov
(bad)
xchg
cs
adc
push
bsf
cmp
push
lock
sub
sub
mov
outs
repnz
fst
mov
lds
push
xchg
mov
mov
dec
ds
adc
jp
fild
clc
sbb
mov
retf
inc
mov
jge
xchg
das
adc
xor
xor
fsub
xchg
cwde
adc
out
nop
pop
mov
sar
rcl
in
jnp
mov
ficomp
enter
in
rcl
cmp
xlat
pop
inc
fst
sbb
stos
xor
dec
sub
mov
pop
push
inc
sahf
mov
mov
push
ret
add
adc
adc
call
mov
(bad)
cmovae
dec
or
mov
outs
cmp
scas
lods
and
nop
mov
cmp
repz
(bad)
out
pusha
adc
rsqrtps
mov
and
or
addr16
sbb
push
mov
inc
sub
mov
sbb
test
mov
bound
out
cdq
pop
mov
mov
imul
cld
add
pusha
test
cmps
(bad)
push
add
jecxz
sbb
mov
mov
fcom
fisttp
lods
adc
cmp
lock
(bad)
jne
std
xor
(bad)
xchg
out
lods
mov
xchg
out
ja
movs
add
fdivr
add
fmulp
adc
sbb
mov
test
xor
rol
hlt
dec
dec
sahf
mov
(bad)
mov
out
pop
mov
sub
fwait
mov
inc
dec
fbld
mov
jo
pop
adc
lods
sbb
lods
js
ins
cmp
loope
fbld
mov
mov
mov
inc
adc
stc
xor
stos
movs
imul
loope
adc
cmp
ror
bound
add
loopne
xor
dec
inc
xchg
xor
fdivr
addr16
loop
sbb
adc
je
stos
in
test
scas
ds
jp
mov
test
ins
or
stos
cmp
imul
int3
cmp
adc
dec
idiv
sub
clc
dec
dec
mov
sbb
es
mov
or
int3
xor
pop
fs
lods
shl
dec
sar
push
jg
outs
pop
out
sub
pop
xchg
(bad)
in
and
jmp
pop
imul
and
adc
ins
lods
cmp
and
add
pop
aas
jns
enter
xchg
mov
in
aas
scas
sub
mov
sti
dec
or
rcr
push
in
outs
shr
loopne
shr
repz
mov
andnps
xor
ret
add
sbb
cvtdq2ps
sbb
push
(bad)
cdq
push
xor
push
test
push
mov
jecxz
test
push
in
aam
test
rcr
mov
sub
lods
sub
sub
rcr
(bad)
cwde
pop
sbb
scas
outs
pop
lock
inc
inc
cmp
and
mov
(bad)
mul
push
or
adc
dec
imul
sub
(bad)
or
shr
pop
cli
shr
jle
retf
cmps
mov
mov
mov
sbb
imul
push
dec
ds
and
sbb
scas
lahf
fst
cmp
aad
adc
inc
repnz
std
xor
mov
jp
lahf
loope
aas
dec
jns
sub
movs
leave
mov
mov
call
leave
retf
adc
xlat
push
popf
cmp
int3
dec
adc
outs
js
rcr
and
mov
sub
sub
arpl
jo
adc
dec
and
xor
in
mov
mov
pusha
dec
gs
jb
mov
adc
aad
outs
dec
lock
and
jecxz
push
add
out
pop
dec
fs
das
adc
(bad)
mov
xlat
fist
aad
inc
mov
jg
dec
pop
inc
mov
ja
push
div
add
aaa
jl
xor
sub
shr
mov
fnsave
iret
sbb
adc
out
inc
out
leave
mov
int
push
pop
jne
(bad)
(bad)
mov
lea
xor
mov
test
mov
xchg
outs
fisubr
xchg
mov
ror
bound
sar
arpl
call
mov
es
ret
mov
and
dec
popf
jle
ficom
push
test
lea
test
add
ss
inc
pop
xor
sub
jmp
pop
mov
jnp
jecxz
xchg
cmp
stos
xchg
(bad)
std
sub
add
push
sar
sub
icebp
sub
lea
addr16
jbe
retf
push
mov
inc
iret
fwait
movs
ss
xchg
jmp
mov
cs
test
add
pop
les
mov
shr
or
sub
sub
sub
pop
hlt
icebp
gs
dec
mov
mov
xchg
sub
add
mov
and
xchg
pop
add
retf
int3
mov
push
xchg
sahf
pop
je
retf
mov
mov
lods
sar
ds
cmp
loopne
sub
dec
loopne
data16
ins
addr16
out
int
dec
mov
xchg
mov
shl
vxorpd
fwait
dec
sahf
fxtract
xchg
jge
iret
sub
shl
test
mov
adc
dec
jb
repnz
jns
icebp
cwde
push
xor
sbb
ins
mov
fidivr
test
fnstenv
adc
icebp
fisubr
jae
fcmovb
enter
ror
add
aam
xchg
into
pop
gs
xchg
mov
les
adc
in
or
fcomp
mov
int3
rol
dec
mov
mov
retf
popf
mov
cmp
stos
and
and
mov
dec
int
dec
sub
pop
xchg
xchg
dec
mov
xchg
pop
mov
loope
jne
dec
pusha
jle
pusha
jbe
lock
aam
test
sub
pop
cs
lock
shl
vpsrlq
jp
xchg
aas
es
push
je
sti
test
ret
push
js
xchg
fs
mov
dec
cmp
pop
pop
jb
or
push
or
ret
in
fcomp
push
pop
jge
sub
stos
jmp
in
xchg
xchg
jo
mov
dec
clc
pop
inc
dec
mov
xor
push
mov
cli
jg
scas
ins
out
jecxz
adc
(bad)
dec
jge
push
xlat
push
add
push
cmp
jl
xchg
fadd
movs
(bad)
mov
push
inc
xlat
jnp
jle
sub
test
mov
loop
call
xor
inc
dec
xor
ins
xor
inc
icebp
jecxz
call
xor
xor
pop
(bad)
mov
ss
and
movs
sti
cmp
mov
add
dec
xchg
push
sub
ja
or
(bad)
mov
sub
add
(bad)
add
sub
neg
mov
push
imul
das
jae
pop
mov
mov
fwait
xor
ins
ret
imul
mov
inc
pop
cdq
lods
ins
sti
xlat
imul
outs
stos
dec
push
dec
and
adc
sub
sub
jg
sbb
jo
jge
loope
push
sbb
xchg
mov
stc
jmp
in
add
ins
sub
add
lahf
mov
popaw
fwait
xchg
sbb
cmps
jne
test
pop
jmp
mov
pop
rcl
xor
mov
in
loopne
pop
pusha
leave
mov
mov
sub
in
lahf
dec
scas
sti
nop
sub
nop
jmp
sub
jno
dec
lods
(bad)
xor
push
mov
xchg
or
mov
mov
cmps
scas
(bad)
outs
retf
ror
xchg
sub
sbb
(bad)
push
xlat
dec
enter
cld
cmc
jmp
mov
add
cmp
mov
imul
in
(bad)
push
out
dec
mov
popa
push
add
popa
out
repnz
clc
push
cmp
push
out
mov
retf
pop
push
aas
xchg
mov
jns
xchg
xor
mov
rcr
sub
cdq
shr
pop
scas
mov
mov
out
addr16
popf
aaa
out
imul
and
fidivr
into
inc
and
and
sub
inc
push
ficom
mov
push
sub
pop
(bad)
or
dec
and
cs
hlt
sub
stos
pop
xchg
xchg
sbb
test
pop
out
mov
or
(bad)
and
movs
push
lock
push
(bad)
in
fst
aad
out
fs
xchg
or
imul
inc
ja
lods
shl
push
mov
and
mov
push
ret
into
or
sub
sub
mov
test
wbinvd
mov
jnp
outs
fwait
jbe
cmc
push
(bad)
jle
cmp
daa
scas
mov
push
xchg
sub
jbe
ja
scas
mov
push
ins
adc
outs
ret
outs
jns
and
jb
jg
leave
retf
stos
sahf
adc
mov
out
icebp
arpl
jge
or
test
dec
(bad)
jg
cmp
stos
or
sub
push
push
cmp
xor
bound
movs
je
pop
rcl
adc
nop
mov
push
pop
pop
mov
or
in
call
sub
sbb
and
mov
dec
pop
sbb
inc
or
std
mov
cmps
xchg
and
lea
mov
inc
ret
mov
into
jb
movs
mov
movs
jmp
ret
push
xor
jecxz
inc
lds
das
cmp
dec
lea
bound
pop
js
jg
mov
stos
push
xchg
pop
pop
das
mov
and
clc
mov
lock
cld
repz
mov
cli
sti
dec
or
push
and
push
rol
xor
push
inc
mov
jne
xor
scas
mov
push
sbb
adc
pop
jnp
std
jle
(bad)
adc
inc
mov
std
test
pop
xchg
ins
cmp
cmps
pop
fsubr
sbb
fsub
outs
and
ret
inc
xchg
xlat
dec
push
sub
repz
mov
add
(bad)
pusha
push
pusha
test
jmp
jl
mov
jge
jmp
(bad)
rol
add
shl
and
pop
xchg
aam
pusha
sub
dec
out
mov
loope
int
mov
shr
aaa
mov
and
sub
retf
sub
sbb
mov
arpl
popa
rcl
push
inc
and
jne
aas
xchg
sub
loope
mov
aaa
clc
push
pop
(bad)
data16
and
xchg
mov
fld1
lds
cmp
push
pop
push
call
jl
or
push
cmp
sbb
lods
mov
dec
(bad)
(bad)
loopne
(bad)
call
retf
jecxz
int3
pop
adc
fs
and
xchg
sub
les
setns
lods
mov
mov
dec
fcomi
aaa
mov
addr16
xchg
imul
test
sbb
imul
sub
xor
cmp
repz
fidivr
cmp
jns
mov
lea
shr
mov
push
sti
add
subps
popa
jno
jno
mov
inc
jbe
ret
jge
inc
iret
ret
in
and
fwait
push
mov
jecxz
arpl
fwait
int
cmp
imul
ret
xchg
sbb
xchg
popa
mov
jp
std
add
add
xor
mov
dec
es
sub
cmps
movlps
xor
pusha
add
loope
mov
or
nop
mov
mov
dec
push
lods
js
cli
xor
lods
mov
sbb
xchg
jg
inc
adc
mov
mov
push
lahf
sub
mov
pop
sbb
das
cmp
cmp
pop
cmp
fcmovb
xchg
push
mov
add
out
pop
jnp
add
jl
or
jmp
(bad)
jmp
mov
and
push
pop
inc
pop
scas
ss
dec
jnp
mov
xchg
mov
pusha
pop
fs
push
out
mov
fadd
add
sbb
mov
(bad)
mov
rcl
pop
or
out
cmp
adc
push
ds
jge
jle
cmp
cmp
and
cmovbe
push
add
xlat
mov
push
movs
push
stc
xchg
mov
ror
push
sbb
xchg
aad
out
cmp
push
outs
sub
cmp
cmp
stos
stos
cmps
inc
and
jno
in
cwde
jae
cmp
gs
mov
sti
mov
lea
pop
cmp
sub
shl
xchg
loope
ret
ret
push
pop
int
leave
(bad)
aad
or
xchg
jae
idiv
xchg
jecxz
push
and
xchg
mov
jecxz
ret
mov
push
retf
pushf
jb
cmc
push
test
xor
xor
sti
pextrw
pop
retf
mov
mov
add
(bad)
or
out
jbe
outs
mov
cs
sub
int
mov
je
in
lahf
jmp
data16
and
mov
sahf
cmc
sar
pop
push
push
add
cmps
pop
(bad)
stc
lahf
add
xchg
jg
and
ds
pop
int
adc
cmp
or
xchg
sti
sub
ins
fbstp
push
cmps
cmps
movs
pop
inc
(bad)
iret
imul
jb
mov
lds
call
in
int3
xor
nop
imul
lods
ins
shr
xor
mov
popf
or
lods
xor
popaw
scas
fstp
jb
ror
dec
(bad)
retf
retf
outs
sub
scas
adc
sub
loop
inc
or
in
pop
xchg
pop
(bad)
cmps
mov
test
nop
sub
xchg
jb
xchg
paddb
gs
pop
adc
es
mov
mov
dec
fsub
retf
cmp
cmp
adc
outs
lea
pop
ds
jnp
mov
push
icebp
ror
scas
adc
xchg
repz
sbb
cld
fnstcw
or
popf
rcl
rcl
shr
mov
(bad)
fst
mov
sub
out
imul
mov
mov
test
push
pop
mov
not
push
js
ret
in
pmulhw
sub
shl
cli
cmp
jnp
cmps
imul
sbb
movs
mov
aad
sbb
lahf
daa
mov
jo
data16
mov
push
ins
loopne
fiadd
push
imul
xor
loop
jo
ds
jns
sub
sbb
push
push
jno
(bad)
aas
repnz
jp
push
inc
jmp
ret
imul
add
mov
add
ja
retf
pop
mov
add
mov
sub
std
sub
cmp
jno
xchg
shl
pop
inc
les
pop
mov
(bad)
ins
(bad)
bound
xchg
inc
sub
or
sub
or
xor
pop
rol
adc
mov
hlt
fdiv
test
inc
push
and
cmps
rol
mov
inc
in
outs
xchg
jbe
movs
mov
or
das
fxch
push
aam
and
jp
xor
dec
inc
dec
lods
in
and
icebp
ja
sub
dec
pop
dec
lds
push
daa
mov
xor
stc
push
mov
push
loopne
push
xor
adc
xor
popa
ret
mov
fisttp
inc
sar
cmp
pop
cmps
or
test
les
jb
lea
cmp
in
call
les
add
push
inc
aam
jle
neg
sti
ficom
(bad)
scas
xchg
in
sub
(bad)
cmc
div
jmp
neg
neg
cs
mov
scas
ja
mov
inc
pop
push
push
(bad)
test
mov
lahf
retf
(bad)
jecxz
sbb
fcom
pop
rcl
fwait
push
lock
inc
inc
into
pop
lods
xor
test
sbb
popf
sub
jle
mov
adc
inc
push
rol
ins
sar
adc
out
lods
imul
inc
popf
leave
dec
mov
imul
mov
js
repz
inc
cmp
dec
add
dec
sahf
rol
nop
in
retf
jmp
cmp
or
mov
stos
movs
cmp
or
and
(bad)
mov
xor
and
sar
xchg
lods
cdq
out
test
cdq
sub
jmp
retf
loope
sbb
jle
jl
cmp
inc
xchg
div
js
fild
mov
xor
mov
and
jns
cdq
std
jp
sar
jp
repnz
dec
test
dec
pop
leave
(bad)
adc
add
std
add
addr16
addr16
int3
ss
cwde
add
xchg
out
outs
ja
mov
ins
push
jns
dec
outs
adc
rol
xchg
(bad)
jmp
pop
test
xchg
add
mov
cwde
pop
add
push
jecxz
fadd
pop
arpl
fldenv
jmp
pop
pop
adc
push
in
test
lods
adc
scas
mov
push
leave
xchg
pmulhuw
ds
pop
ja
pop
mov
mov
or
and
mov
add
mov
jmp
clc
(bad)
ror
mov
mov
(bad)
aaa
lahf
mov
das
mul
sahf
jmp
mov
iret
ror
aad
mov
imul
dec
xor
mov
popf
outs
xchg
arpl
(bad)
or
retf
pop
cli
push
nop
(bad)
jmp
lods
xchg
jnp
mov
xlat
mov
cmp
mov
leave
mov
xor
cmp
mov
mov
(bad)
jnp
cmp
fistp
ins
sub
sub
fist
xchg
lahf
mov
jg
mov
mov
aad
sub
mov
pop
xor
das
mov
mov
bound
cwde
push
pop
outs
jo
cld
mov
cmps
loope
mov
push
cmp
fisttp
retf
call
clc
pop
in
sub
mov
adc
retf
cmps
or
dec
int3
pmuludq
push
pop
(bad)
call
and
sbb
test
push
add
dec
xor
adc
xchg
shr
stc
das
ficomp
cld
pop
xchg
push
add
mov
adc
pop
jns
mov
xchg
(bad)
out
dec
jnp
test
bound
pop
clc
scas
jl
in
out
sbb
in
cmps
inc
xor
daa
div
inc
jge
sti
js
out
sub
xor
stos
cmp
sbb
iret
mov
out
push
xchg
xor
ins
mov
xchg
jmp
fdivr
out
les
inc
cmp
xor
test
and
rcl
clc
sub
sar
je
sbb
xchg
cmp
cmp
or
inc
test
adc
add
mov
lods
push
cmp
(bad)
repnz
or
sbb
mov
js
adc
sbb
fnstenv
and
add
xchg
push
mov
in
call
push
in
leave
add
adc
push
pop
push
push
(bad)
and
pop
in
jecxz
and
adc
sahf
stos
ins
cmp
test
or
popf
mov
mov
fcomp
xchg
daa
pop
jnp
jle
xor
shl
movs
pushf
cwde
fcmovu
jnp
out
dec
xchg
sti
cmp
std
lea
mov
add
div
popf
pop
xor
fsubr
jno
dec
in
rcr
push
jns
and
imul
popf
mov
jmp
sub
inc
push
xchg
dec
pop
lock
cdq
arpl
pop
ror
pop
mov
jle
dec
and
inc
mov
xchg
jae
pop
xchg
pop
movs
out
push
shr
mov
or
call
push
std
cmp
(bad)
cld
scas
mov
rcl
out
mov
adc
xchg
cmp
jae
xchg
aam
and
ror
jno
push
fcom
and
mov
neg
fisttp
ds
es
repz
xchg
scas
out
mov
test
and
fidivr
gs
pop
fstp
xchg
cwde
cmc
cs
scas
mov
fs
rcr
xor
mov
xchg
or
pop
pop
in
sub
mov
fdivr
pusha
iret
stos
(bad)
fstp
jl
mov
into
and
mov
out
pop
cmps
add
(bad)
arpl
push
out
sub
jg
imul
fist
pop
inc
add
jne
cmc
xchg
sub
jecxz
xor
push
mov
jne
(bad)
or
ror
jmp
and
cmp
fld
push
jmp
xchg
dec
mov
xchg
(bad)
mov
clc
cmps
dec
mov
lods
lahf
add
dec
ret
ins
addr16
in
inc
mov
mov
arpl
sahf
mov
xlat
out
sub
cld
shl
adc
(bad)
mov
cmps
cmp
add
push
loope
or
xchg
push
outs
cmp
arpl
jg
out
cmp
xchg
xchg
frstor
jo
cmp
jg
stc
pushf
add
(bad)
mov
stos
mov
shl
loope
fst
pop
xor
or
out
pop
cmp
push
test
test
out
adc
daa
add
push
or
inc
cmp
fwait
mov
add
mov
(bad)
outs
arpl
adc
loop
leave
inc
cwde
adc
sbb
cdq
fimul
jne
push
gs
pop
mov
fdivrp
push
enter
sbb
imul
rcl
ret
mov
or
add
loop
std
jl
in
div
push
add
es
push
ret
and
mov
adc
fst
lea
retf
mov
(bad)
push
cmp
movs
sbb
adc
iret
pop
push
inc
push
addr16
mov
pop
pop
pop
sub
test
sahf
or
dec
inc
xor
mov
stos
repnz
xchg
jle
retf
jae
imul
mov
dec
inc
scas
cmp
sub
mov
popf
or
push
adc
xchg
int
sbb
call
fdivr
and
xchg
mov
rcl
mov
add
xchg
xchg
int
das
xor
add
iret
fnstenv
xor
ret
iret
dec
push
and
xor
test
fimul
jnp
adc
xchg
sbb
inc
push
xchg
jno
cwde
rcr
mov
push
lods
mov
adc
mov
movs
ja
pop
mov
jecxz
je
cmp
fdivp
jl
rol
jmp
and
inc
cmovne
dec
sbb
cli
inc
mov
mov
push
sub
mov
les
mov
jge
push
pop
mov
sbb
out
add
or
cmp
xchg
adc
inc
cmp
scas
imul
inc
loope
div
es
sbb
jnp
mov
push
out
push
mov
repz
shl
mov
xchg
sub
pop
ret
ret
adc
enter
ja
or
push
pop
mov
push
rcr
mov
push
addr16
jge
retf
pop
mov
jnp
loop
test
in
jnp
mov
xlat
pop
mov
jg
(bad)
repnz
stc
es
push
cmp
movs
aad
into
test
cmp
call
cmc
jb
adc
sbb
adc
dec
mov
ret
shr
xchg
sbb
aaa
and
fisubr
adc
or
movs
jbe
into
inc
jmp
mov
jmp
jne
push
mov
adc
mov
repz
push
xor
xchg
jge
cmp
cmp
pop
and
icebp
push
mov
lods
and
adc
jo
dec
pop
aas
dec
fucomi
xchg
rep
add
fstp
addr16
lods
inc
test
loope
xor
retf
cwde
arpl
or
outs
add
xchg
jg
inc
push
dec
cs
data16
mov
stos
sub
xchg
lock
or
inc
jbe
int
test
pop
sub
out
add
jo
pop
aam
cmc
inc
xchg
stos
xchg
sub
push
jae
hlt
add
fsubr
(bad)
in
dec
outs
dec
push
ds
mov
push
xor
dec
out
jmp
sbb
sub
cmp
shl
sar
push
xor
ds
xor
push
jg
les
fdivr
adc
mov
stos
dec
inc
pop
mov
mov
adc
(bad)
sahf
jo
or
xchg
adc
sbb
xchg
adc
adc
lds
or
push
clc
rol
sbb
outs
outs
pop
in
bound
data16
sub
or
push
lods
and
test
aad
mov
add
test
cmps
out
stos
sbb
sbb
pusha
mov
sti
aad
sbb
lds
jp
cmp
inc
xchg
mov
cs
jb
fwait
xchg
outs
les
out
inc
mov
add
fdiv
ins
mov
adc
xor
repz
adc
pop
adc
sti
add
aad
xor
ja
add
repnz
outs
dec
adc
call
xchg
mov
xchg
mov
xor
(bad)
cs
xor
arpl
jecxz
sbb
pop
or
lock
pop
popf
arpl
js
out
cmp
popa
dec
daa
(bad)
retf
add
repz
cdq
mov
in
push
int
scas
shr
ret
cmp
inc
adc
inc
add
or
ret
pop
or
neg
pushf
inc
mov
jmp
retf
in
pop
call
enter
jecxz
add
adc
ror
push
int
bnd
dec
mov
dec
das
xor
pop
push
out
leave
or
adc
adc
pop
fcmovnbe
and
and
in
popf
lods
lahf
sbb
jl
mov
leave
push
addr16
adc
push
and
popa
ret
out
cli
retf
inc
cmp
jns
push
adc
add
adc
mov
mov
cwde
xor
ds
outs
out
jg
rcl
cmp
movs
xor
sbb
dec
xor
(bad)
fimul
(bad)
repz
xor
mov
ins
sbb
sbb
jmp
sub
scas
add
sub
out
adc
jnp
jno
pusha
push
add
add
add
enter
int3
cmp
lea
cwde
xor
cmp
sbb
inc
retf
test
ret
mov
adc
mov
js
adc
stc
xchg
inc
repz
add
gs
xchg
ret
and
jmp
jns
call
xchg
or
push
cmc
jp
or
xor
cld
es
clc
addr16
fistp
mov
mov
in
movs
jo
cmc
jg
pop
jno
adc
pop
ss
int3
mov
ss
bound
cwde
inc
cmp
stos
xor
adc
ds
movs
adc
adc
test
jbe
xor
xor
mov
jne
sbb
ret
clc
pop
adc
or
push
push
out
push
aaa
mov
es
xchg
jmp
jno
add
fisub
and
sbb
out
jge
cmp
fisttp
sbb
test
xchg
(bad)
or
push
std
sub
ss
loope
inc
dec
pop
xor
test
icebp
dec
mov
mov
jle
pop
jo
pop
mov
cmp
cdq
mov
pop
out
sbb
push
lahf
xor
sub
cld
sbb
push
push
push
add
pop
jbe
daa
mov
mov
fwait
cmps
lahf
mov
sbb
jmp
mov
pop
sub
in
shl
fdiv
push
pop
ret
xor
in
(bad)
adc
or
mov
lods
jl
aaa
sbb
scas
adc
adc
push
xor
sbb
jmp
cmp
ja
xchg
fisttp
inc
popf
and
jb
fs
jge
hlt
inc
jo
(bad)
cmc
ins
lahf
jo
pop
jl
arpl
mov
dec
mov
lds
call
ficomp
fidiv
add
or
sbb
test
push
cmps
xor
(bad)
jge
dec
dec
inc
xchg
push
outs
push
dec
jae
sbb
(bad)
loopne
fmul
lods
xchg
jns
add
(bad)
call
sbb
jb
ins
(bad)
push
pop
mov
jb
cmp
lods
xchg
bound
mov
in
xor
xchg
sub
test
lahf
mov
mov
ins
xlat
in
addr16
push
es
push
ret
push
addr16
fisttp
daa
xchg
jl
xchg
jb
dec
and
sahf
aaa
fwait
inc
aaa
jno
push
scas
fistp
push
jno
fld
mov
(bad)
cld
mov
shl
cmp
arpl
neg
or
mov
sbb
jno
xor
sub
push
push
adc
pop
push
es
fcomp
xchg
mov
fwait
inc
arpl
int
sub
test
cmp
rcl
push
out
pop
ficomp
hlt
jg
dec
shld
mov
fwait
fs
inc
lods
pop
mov
mov
mov
ret
lods
lahf
shl
sub
idiv
lea
shl
dec
pop
pop
shl
in
push
push
push
mov
mov
mov
mov
and
rep
mov
shr
rep
mov
pop
pop
pop
pop
ret
push
mov
push
and
push
push
mov
mov
lods
scas
jne
test
jne
xor
jmp
mov
jl
neg
mov
mov
pop
pop
leave
ret
push
push
call
ret
push
mov
add
push
ret
push
pusha
call
ret
ret
popa
sub
mov
add
mov
mov
sub
ret
push
mov
add
push
mov
ret
mov
cmp
jne
lea
ret
lea
push
mov
mov
test
je
xor
mov
not
test
mov
je
inc
jmp
mov
pop
ret
mov
push
push
xor
movzx
movzx
test
lea
jbe
mov
test
jne
mov
mov
cmp
jb
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
ret
push
push
call
pop
pop
mov
test
jne
ret
mov
sub
add
add
ret
push
mov
sub
push
push
push
call
ret
shr
inc
(bad)
(bad)
inc
add
call
mov
mov
add
push
mov
push
call
pop
test
pop
je
push
push
push
call
mov
xor
add
cmp
je
mov
mov
mov
add
add
add
mov
mov
add
shr
test
je
mov
cmp
je
and
mov
mov
call
fwait
(bad)
mov
mov
movzx
cmp
jne
mov
mov
add
mov
call
(bad)
cld
xor
push
push
call
pop
test
pop
je
mov
inc
add
add
dec
cmp
jbe
mov
mov
inc
dec
cmp
jbe
xor
pop
pop
pop
leave
ret
mov
mov
jmp
mov
mov
cmp
jne
cmp
jne
mov
inc
inc
add
dec
cmp
jbe
jmp
mov
shl
add
jmp
push
mov
sub
push
push
push
call
ret
call
fstp
ret
je
mov
add
call
mov
paddsw
mov
adc
jl
sbb
mov
push
mov
lea
shl
sub
add
mov
mov
call
pop
mov
cmp
jbe
lea
movzx
mov
mov
add
cmp
jae
mov
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
stos
das
dec
and
call
mov
push
push
push
call
add
lea
push
call
mov
mov
xor
div
xor
mov
mov
div
test
je
inc
imul
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
push
call
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
push
call
add
mov
call
out
mov
xchg
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
push
call
mov
mov
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
adc
xchg
(bad)
lea
push
call
push
push
push
call
add
mov
push
push
push
push
call
mov
mov
call
adc
sub
adc
add
push
push
push
call
add
cmp
mov
jbe
movzx
mov
lea
lea
mov
add
mov
mov
add
mov
call
push
xor
dec
push
push
push
call
add
inc
mov
cmp
jb
mov
mov
add
mov
mov
cmp
jne
push
push
push
jmp
mov
cmp
je
add
call
sub
jbe
cmp
jne
cmp
je
mov
add
push
call
cmp
mov
jne
push
call
cmp
mov
je
call
pop
mov
les
or
xor
mov
cmp
jne
mov
jmp
add
mov
mov
mov
cmp
je
jmp
mov
add
test
je
and
push
jmp
add
push
push
push
call
add
cmp
mov
je
add
add
call
out
outs
mov
cmp
jne
mov
add
jmp
mov
cmp
je
add
cmp
je
lea
mov
add
cmp
jae
movzx
mov
and
cmp
jne
mov
and
add
sub
add
add
jmp
cmp
jne
inc
inc
jmp
add
jmp
mov
jmp
mov
mov
cmp
jne
mov
xor
mov
jmp
call
pop
sahf
dec
mov
lea
mov
mov
lea
mov
lea
xor
div
xor
mov
mov
div
cmp
ja
mov
mov
and
and
and
mov
cmp
je
or
cmp
je
or
cmp
je
add
or
inc
cmp
jbe
inc
mov
mov
cmp
jbe
mov
xor
mov
push
pop
movzx
sub
je
dec
je
sub
je
mov
jmp
mov
jmp
mov
jmp
mov
call
mov
jge
inc
je
lea
push
push
push
push
call
test
je
add
inc
cmp
jbe
mov
mov
add
call
aam
(bad)
aas
push
push
push
call
mov
jmp
push
push
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
call
ret
cmp
inc
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
xchg
mov
jno
xchg
je
(bad)
dec
inc
test
inc
add
and
push
pop
xor
lea
rep
stos
stos
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
(bad)
call
(bad)
cmc
(bad)
call
push
push
call
add
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
cmp
movs
fdivr
(bad)
inc
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
jnp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
fcomp
sub
add
call
jne
call
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
mov
or
mov
mov
mov
lea
push
push
lea
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
push
lea
push
push
push
push
call
add
push
push
push
call
mov
mov
mov
popa
add
jmp
and
call
icebp
sti
in
push
call
mov
push
lea
push
push
call
and
push
pop
xor
lea
rep
stos
stos
and
push
pop
xor
lea
rep
stos
stos
and
push
pop
xor
lea
rep
stos
stos
and
push
pop
xor
lea
rep
stos
stos
call
cdq
test
clc
das
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cld
(bad)
call
push
lock
call
push
push
call
add
mov
push
lea
push
call
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
sub
inc
outs
lea
push
push
call
mov
mov
movsx
cmp
jne
mov
dec
mov
mov
movsx
cmp
jne
mov
dec
mov
and
and
jmp
mov
inc
mov
cmp
jge
mov
movsx
and
test
je
mov
inc
mov
jmp
mov
movsx
cmp
jne
mov
mov
mov
movsx
test
jne
jmp
jmp
mov
add
mov
mov
inc
mov
push
lea
push
lea
push
call
add
mov
inc
mov
mov
inc
mov
and
and
and
and
and
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
mov
call
or
(bad)
inc
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
push
push
scas
lea
push
call
pop
push
push
push
call
add
mov
push
push
push
push
push
push
lea
push
call
mov
cmp
je
push
push
call
mov
push
push
push
call
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
dec
jmp
(bad)
call
mov
(bad)
call
push
push
call
add
mov
call
dec
pusha
xchg
mov
add
call
mov
cld
(bad)
(bad)
push
push
call
mov
push
call
cmp
je
push
mov
mov
lea
push
lea
push
call
add
and
jmp
mov
inc
mov
cmp
jge
mov
movsx
movsx
xor
mov
mov
mov
movsx
not
mov
mov
jmp
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
call
cmps
xor
lea
push
push
push
push
call
push
lea
push
push
call
add
lea
push
push
push
push
call
and
jmp
mov
inc
mov
cmp
jge
mov
and
jmp
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
call
in
and
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
push
mov
mov
lea
push
lea
push
call
add
movsx
mov
sub
mov
push
mov
add
push
lea
push
call
add
mov
mov
lea
mov
push
mov
add
push
lea
push
call
add
mov
mov
lea
mov
mov
mov
lea
mov
and
jmp
mov
inc
mov
mov
cmp
jae
mov
add
movsx
movsx
xor
mov
add
mov
mov
add
movsx
not
mov
add
mov
jmp
call
movs
loope
push
and
jmp
mov
inc
mov
mov
cmp
jae
mov
add
movsx
movsx
xor
mov
add
mov
mov
add
movsx
not
mov
add
mov
jmp
call
fsub
adc
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
daa
ficom
test
push
out
call
push
push
call
add
mov
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
push
push
push
call
add
mov
and
push
pop
test
je
lea
mov
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
pop
mov
mov
push
lea
push
call
pop
push
lea
push
call
add
lea
mov
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
je
(bad)
int
or
test
call
adc
(bad)
call
mov
lea
push
call
add
lea
mov
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
pop
push
mov
lea
push
call
add
lea
mov
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
pop
push
mov
lea
push
call
add
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
pop
push
mov
lea
push
call
add
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
fwait
movs
sahf
push
push
lea
push
call
pop
push
mov
lea
push
call
add
jmp
cmp
jne
and
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
je
sub
(bad)
call
mov
push
mov
lea
push
call
add
jmp
jmp
mov
inc
mov
and
push
call
mov
cmp
je
lea
push
call
pop
push
push
push
call
add
mov
cmp
jne
jmp
cmp
je
jmp
push
push
push
push
push
push
push
call
mov
call
imul
push
add
call
mov
cld
(bad)
(bad)
push
push
call
push
call
jmp
jmp
and
push
call
mov
cmp
je
lea
push
call
pop
push
push
push
call
add
mov
cmp
je
jmp
jmp
cmp
jne
mov
mov
mov
mov
and
call
(bad)
or
push
push
push
call
mov
push
lea
push
push
push
push
call
add
mov
cmp
je
lea
push
call
pop
push
push
call
pop
pop
mov
push
push
push
call
push
push
push
push
push
push
push
push
push
lea
push
push
push
call
pop
pop
pop
leave
ret
call
ret
call
push
call
lods
lea
mov
mov
mov
lods
cmp
je
xchg
lods
mov
push
call
sahf
push
push
cmp
push
pop
js
xlat
mov
mov
add
call
(bad)
push
xor
add
mov
cmp
jne
mov
cmp
jne
call
mov
dec
dec
mov
add
mov
mov
add
mov
add
push
call
xor
fistp
jne
push
call
xchg
in
int
test
push
push
sub
ss
mov
push
cmps
ficom
xor
(bad)
hlt
dec
popf
pop
push
xchg
jge
dec
call
mov
inc
je
jbe
dec
xor
enter
push
and
pop
jno
ret
(bad)
mov
dec
cmc
push
push
jmp
pop
jp
mov
sub
xor
push
xchg
push
sub
cmp
sub
fcom
(bad)
mov
and
repz
retf
pop
pop
imul
push
cmp
je
retf
inc
sub
add
pop
(bad)
xchg
rcr
add
popf
out
mov
jo
in
jae
and
sysenter
(bad)
dec
mov
adc
sub
pushf
sub
loope
retf
dec
ret
cwde
push
cmps
xor
mov
fcmove
mov
xchg
fstp
call
fs
adc
call
clc
or
cmps
js
fwait
lods
mov
adc
xor
ret
mov
in
push
inc
(bad)
jle
xchg
sbb
(bad)
pop
pop
syscall
cmps
nop
cmp
fidivr
stos
rcl
into
data16
xchg
lods
xor
ins
dec
add
addr16
xchg
xor
jecxz
aas
movs
stos
jmp
push
mov
ret
imul
or
and
fisttp
scas
xlat
sbb
mov
push
stos
loopne
cmp
ret
mov
mov
push
sub
pop
lods
jnp
jp
out
into
fild
(bad)
rol
lahf
(bad)
loop
mov
pop
dec
div
and
and
jp
(bad)
stc
cmps
dec
cmps
mov
in
push
in
sbb
fs
jecxz
imul
lds
stc
pop
repz
adc
mov
add
add
rcl
push
orps
or
call
aam
dec
or
and
addr16
jns
rcr
mov
cmp
loopne
and
lahf
test
les
add
or
dec
and
iret
mov
add
scas
and
push
jle
pop
js
mov
lods
fwait
icebp
popf
(bad)
daa
mov
out
or
sti
inc
add
imul
loopne
rcr
jne
sar
ret
jle
ins
fld
xchg
popa
push
push
into
mov
push
les
int
sahf
xor
cmp
push
jg
inc
jmp
das
repnz
adc
stc
dec
or
and
or
sbb
adc
cs
in
jp
pusha
jmp
pop
test
mov
repnz
pop
mov
(bad)
sub
(bad)
push
mov
mov
pop
push
ins
and
and
iret
mov
int
test
jnp
jmp
nop
popa
fistp
loope
xlat
test
jne
lea
dec
sbb
pop
loopne
fstp
lahf
in
hlt
sbb
add
mov
push
dec
ss
add
call
(bad)
pop
xlat
sbb
and
pop
fwait
xor
sbb
add
cs
mov
or
adc
call
pop
ins
push
(bad)
lea
xchg
lds
mov
fdivr
jl
or
test
or
test
dec
cli
and
sbb
or
mov
ss
hlt
xchg
ins
push
push
and
pop
js
xor
mov
in
pop
out
cli
loope
dec
test
push
fxrstor
mov
fidivr
cmc
nop
jno
ficom
xchg
adc
jmp
scas
ret
sub
cld
stos
jl
ins
jae
sbb
sbb
xchg
mov
in
mov
inc
dec
and
jb
lahf
addr16
or
cmp
in
dec
xor
sbb
mov
jp
xchg
xchg
and
pop
sbb
ds
and
jne
jno
sbb
and
sahf
xor
mov
punpckhdq
call
mul
jle
jp
int3
outs
out
int
cmp
dec
push
nop
call
mov
sub
mov
mov
movs
repnz
repz
inc
mov
pmulhw
fwait
mov
inc
inc
repz
push
sub
push
test
push
cmp
mov
pop
les
dec
or
mov
scas
add
jmp
leave
mov
adc
rcr
mov
adc
and
add
push
mov
cdq
stos
jb
js
mov
or
xor
cmp
mov
jmp
cmp
in
int
in
es
fnstsw
hlt
xchg
pop
cmp
popf
ds
call
out
(bad)
jp
and
movs
adc
cli
adc
hlt
lods
repnz
(bad)
fcmovnbe
shl
adc
cmp
adc
push
ins
fstp
lods
jecxz
(bad)
mov
cmp
push
pop
inc
xchg
mov
cmp
mov
jg
test
fsub
xor
mov
packsswb
test
shl
jmp
push
mov
push
retf
je
lock
sub
mov
inc
and
cmc
mov
(bad)
and
adc
push
mov
xlat
lds
je
xchg
test
xor
jg
add
stc
mov
in
mov
mov
add
ficomp
push
adc
test
rcl
push
retf
enter
jo
fmul
(bad)
or
adc
mov
int3
push
inc
jg
jge
shl
sbb
push
jl
and
push
xchg
xor
cmp
neg
retf
int
div
test
div
dec
and
inc
scas
aad
add
mov
xor
adc
call
stos
aad
push
sbb
repz
inc
jo
retf
add
inc
pop
adc
fadd
movs
movs
dec
repnz
arpl
adc
bound
mov
ins
(bad)
sahf
scas
jl
cmps
jg
pop
jmp
pop
mov
sbb
clc
jne
(bad)
mov
int
ret
adc
push
test
push
aas
dec
xlat
push
and
mov
leave
bound
jo
ret
xchg
ja
int
lahf
mov
rcl
call
inc
or
(bad)
cwde
out
ss
add
xor
shl
int
push
sub
mov
inc
div
dec
mov
lock
stos
stos
cmps
push
sub
pop
and
cmp
mov
dec
mov
test
fs
cli
sub
loop
retf
cmp
mov
adc
neg
pop
imul
(bad)
ins
fiadd
jmp
or
test
sahf
and
cwde
pop
add
stos
arpl
and
inc
or
not
cmp
sub
adc
or
sbb
stos
push
and
dec
outs
imul
mov
test
mov
test
xchg
lods
mov
(bad)
rcr
sbb
sub
loop
mov
es
jbe
adc
fbstp
inc
sbb
(bad)
cli
sbb
adc
aaa
mov
xchg
pop
addr16
cli
jp
add
retf
fmulp
test
retf
sbb
mul
(bad)
aam
sub
scas
xlat
cmc
xor
mov
loopne
fadd
(bad)
call
fisubr
cmp
mov
adc
adc
repnz
dec
int
xor
pusha
retf
in
jl
dec
(bad)
adc
or
jbe
cdq
and
mov
mov
loope
outs
aam
xchg
jmp
pop
in
(bad)
icebp
adc
loop
mov
pop
(bad)
aad
push
sub
xchg
xor
mov
mov
xchg
js
aad
or
cld
lods
loopne
sti
pop
(bad)
push
or
jmp
and
cmp
rcr
ret
cmp
xchg
xchg
sbb
repnz
test
daa
arpl
aas
mov
or
add
(bad)
call
inc
inc
aas
add
sub
xor
pop
push
ror
adc
int3
push
bound
test
sub
fdivr
jo
scas
popf
scas
add
test
inc
inc
or
jmp
ret
push
cmc
in
div
imul
or
ror
test
and
sub
jg
push
aad
mov
cmc
xor
and
lods
dec
in
aad
inc
pop
aas
and
int
sub
in
enter
pop
rcl
xchg
loop
jl
stos
arpl
jae
and
dec
inc
mov
pop
and
fld
mov
(bad)
iret
xchg
cmp
in
mov
mov
sar
add
leave
mov
xor
(bad)
cmp
(bad)
adc
inc
adc
rcr
aad
test
jmp
gs
push
jge
mov
mov
cmp
mov
loope
dec
pusha
cmp
mov
js
dec
mov
sbb
adc
inc
inc
pop
lods
pop
ss
call
mov
ss
sbb
(bad)
mov
xor
cli
cmc
and
js
sbb
(bad)
lods
cdq
jl
cwde
scas
inc
adc
stos
cmp
adc
mov
fdivp
in
and
add
xchg
inc
inc
jno
pusha
push
jo
cmp
push
mov
pop
cmp
jl
les
out
sub
data16
fcom
aad
cmps
xor
not
adc
mov
mov
push
jmp
in
imul
iret
lods
into
lahf
fst
push
xor
(bad)
pop
cli
push
rcl
std
shr
mov
in
in
add
pusha
dec
lahf
in
cmps
in
and
or
mov
int3
fild
jbe
pop
and
sbb
jmp
sti
pop
ror
adc
call
test
inc
cmps
int3
js
push
push
mov
mov
test
dec
push
mov
xor
cmp
call
xor
jbe
clc
pop
leave
mov
ret
and
push
cmp
repnz
not
mov
jmp
scas
js
inc
push
cwde
cmc
(bad)
push
jmp
push
or
scas
leave
sbb
cmps
push
and
jge
inc
mov
dec
cmps
test
pop
inc
pop
jne
jno
xchg
jg
lea
sahf
or
aaa
(bad)
out
imul
adc
inc
addr16
fdiv
call
cmps
or
outs
aad
mov
inc
hlt
sbb
cdq
push
dec
add
sbb
push
mov
leave
sub
cld
ret
shl
push
nop
enter
xor
das
jg
in
out
mov
push
xchg
sbb
mov
jno
fsub
or
push
dec
xchg
pop
mov
sub
jl
push
cwde
int
jae
arpl
(bad)
in
mov
and
sbb
(bad)
adc
sahf
ret
xchg
addr16
clc
pusha
sub
cmp
push
mov
mov
sub
mov
push
stos
pop
repnz
mov
mov
push
jo
test
cs
push
addr16
pop
adc
and
mov
or
or
out
mov
retf
mov
mov
outs
or
jmp
retf
test
movzx
rol
cmp
lock
into
int
fstp
push
mov
hlt
mov
xchg
add
cmp
jge
sbb
cwde
xchg
imul
les
mov
leave
cld
cmp
add
pop
inc
out
dec
jmp
add
xchg
and
(bad)
js
jns
xchg
push
cld
vpsrlw
xchg
adc
scas
popa
xchg
dec
(bad)
rcl
mov
in
and
in
dec
dec
(bad)
imul
cld
pop
das
mov
xbegin
xor
int
push
out
mov
fmul
in
ret
mov
mov
fdivr
push
lods
fild
test
sub
adc
out
pop
rcr
dec
data16
out
aaa
xchg
inc
lods
inc
lods
ret
pop
or
das
xchg
add
inc
addr16
or
jno
jbe
dec
xchg
dec
(bad)
mov
pusha
lahf
pop
adc
push
sub
jne
add
call
pushf
dec
mov
mov
and
cmp
jno
bound
test
cmc
fucomi
(bad)
mov
ret
cmp
pop
je
std
mov
mov
lods
in
fwait
push
ret
or
mov
push
cdq
mov
inc
fsub
mov
push
xor
loopne
mov
lods
pop
sbb
adc
mov
add
add
mov
lds
into
and
sub
add
mov
out
shl
fdivr
mov
test
jge
xchg
cmps
sub
dec
and
cmp
xchg
mov
mov
arpl
pop
jns
in
in
mov
cmp
sub
clc
jl
sub
mov
sar
out
popf
fcomp
mov
or
cmps
test
xor
ficom
xchg
jnp
jmp
mov
and
ss
inc
mov
lds
inc
jge
cdq
into
pop
inc
inc
cs
enter
lds
rcl
adc
(bad)
inc
pushf
mov
mov
(bad)
jmp
and
add
(bad)
xlat
test
xor
jb
aaa
(bad)
arpl
xlat
iret
mov
sbb
xor
mov
lahf
dec
cld
mov
cmps
xor
and
xchg
cli
arpl
jg
push
fwait
call
cli
ins
xor
xlat
xchg
xchg
add
cwde
repnz
scas
outs
or
jae
pop
sub
sahf
in
push
fnsave
xor
mov
popf
ficom
(bad)
bsf
mov
sub
fisttp
rol
enter
stc
xor
push
or
or
loope
inc
outs
mov
lock
out
dec
(bad)
movs
rol
xor
loop
sti
cmp
fdiv
pushf
std
mov
sub
repz
mov
and
inc
loop
adc
adc
shl
sbb
sbb
stos
mov
arpl
out
mov
enter
jae
lods
aam
push
dec
xchg
mov
inc
and
sbb
jp
icebp
and
adc
lahf
cmp
loop
jo
retf
jo
sbb
or
fdiv
mov
xchg
jp
mov
sub
inc
cmp
js
into
sub
xor
bound
push
out
int
mov
jnp
clc
pop
xchg
mov
gs
push
mov
sti
cli
gs
test
ss
div
aas
scas
cmp
call
out
xchg
into
mov
test
sub
xchg
or
mov
push
dec
mov
pop
xchg
pop
sub
or
nop
sahf
jmp
mov
call
test
popa
aad
sbb
mov
push
movs
pop
jo
push
xor
push
retf
and
out
mov
pop
push
push
xchg
popa
out
fstp
loope
mul
ror
xor
jnp
jecxz
mov
rcl
(bad)
in
xchg
fisttp
and
dec
adc
push
mov
xchg
shl
mov
cmp
test
sub
loop
cwde
or
dec
mov
mov
and
xchg
fdivr
pop
jbe
movs
mov
mov
sub
arpl
dec
subps
mov
lods
xchg
lods
mov
inc
sub
and
fmul
push
add
sahf
int
shl
sub
into
cmp
pusha
pop
xchg
dec
enter
(bad)
xor
sub
aad
mov
nop
pop
push
jmp
push
mov
dec
adc
adc
adc
sahf
mov
cwde
fdiv
ds
xor
push
add
xor
dec
int
clc
and
cmp
ror
cmp
fisttp
fld
push
lods
mov
add
jmp
push
jp
mov
xchg
data16
pop
loopne
icebp
mov
dec
xchg
cmp
retf
aas
cs
ret
cmp
std
in
push
and
sbb
out
inc
out
sbb
fchs
jmp
push
fst
in
ins
dec
inc
loopne
mov
add
cmp
pop
ret
inc
add
stos
pop
inc
xor
xor
cld
lahf
idiv
stos
cli
adc
push
push
adc
pop
jnp
or
ss
shl
adc
test
mov
dec
jns
sbb
xchg
outs
movs
iret
jmp
aad
jbe
inc
fsub
mov
sti
fcom
jnp
retf
push
pop
push
pop
std
sub
je
shl
rcr
dec
xchg
repz
jle
ss
icebp
xchg
jmp
pop
mov
xchg
cdq
jnp
mov
imul
mov
sub
pop
fdiv
in
push
push
xchg
(bad)
jl
sub
xchg
push
mov
pop
arpl
pop
pop
mov
sbb
jo
and
xor
or
sbb
loopne
or
and
and
int3
sub
out
and
outs
mul
jnp
lock
call
xor
add
inc
test
retf
les
mov
cmp
cdq
add
retf
pop
(bad)
je
pusha
inc
fs
fld
repz
ffreep
sbb
lods
and
fcom
pop
xor
aas
cmc
jnp
enter
mov
mov
xor
or
fcomp
adc
call
cmp
into
jo
das
mov
xor
(bad)
push
imul
and
mov
push
mov
sbb
mov
mov
or
into
xor
test
sub
sbb
jns
sub
jo
test
mov
movs
xchg
adc
mov
sahf
idiv
sar
dec
es
lods
or
into
retf
and
ins
mov
jg
je
or
mov
jecxz
outs
mov
xchg
xlat
adc
mov
xchg
out
cmp
mov
(bad)
jne
ror
xor
mov
xor
mov
stc
ins
call
mov
sbb
fisttp
cwde
cmp
movs
xcrypt-ofb
cmps
das
mov
and
scas
add
mov
sahf
cmps
cmp
dec
mov
cmp
mov
xor
jg
mov
das
fist
sti
icebp
mov
sahf
inc
mov
fstp
xor
add
cmc
enter
pushf
push
push
scas
mov
cmps
add
push
xor
dec
cmp
ins
inc
cmp
pushf
inc
ss
clc
mov
dec
imul
arpl
and
jmp
pop
in
icebp
retf
mov
ins
dec
int3
sub
ret
icebp
adc
mov
ds
(bad)
pop
inc
lahf
dec
das
fnstenv
repz
adc
jae
aam
pop
adc
mov
vpunpckhdq
mov
outs
add
adc
push
jg
mov
cmc
mov
fstp
outs
jl
retf
mov
ret
bound
in
shl
mov
sub
loop
cli
sub
sub
inc
mov
push
add
cli
add
jle
mov
xchg
rcl
jnp
in
retf
inc
out
je
pushf
dec
or
push
cmc
in
iret
fcmovnu
cmp
sti
push
call
pushf
aad
lds
push
lahf
leave
jmp
aas
jno
iret
fisubr
nop
je
mov
mov
stos
lea
sbb
ja
das
mov
push
push
mov
icebp
xor
push
mov
add
fst
mov
mov
movs
jge
jl
mov
add
jns
cmps
push
in
cmp
cli
xchg
sbb
dec
ficomp
leave
neg
or
add
pop
cdq
out
cmp
push
aam
retf
sbb
push
scas
jle
xlat
or
mov
repz
and
pop
jae
retf
adc
repnz
mov
arpl
pushf
not
arpl
loope
dec
leave
je
sub
imul
adc
or
outs
jmp
and
fbld
sbb
jmp
mov
mov
mov
adc
outs
mov
xlat
lock
add
or
outs
xchg
xchg
jg
popa
sbb
or
push
out
pop
cmps
xor
mov
fwait
dec
push
in
push
(bad)
mov
mov
js
or
mov
mov
in
das
stc
(bad)
jnp
outs
loopne
cmp
jp
cmp
inc
lods
jl
ret
(bad)
xchg
(bad)
fisubr
mov
lods
fucomi
cmp
ins
int3
mov
and
mov
loope
or
pop
add
sbb
in
pop
pop
lods
outs
push
xor
fsubr
loope
sub
cli
push
xor
inc
jge
mov
ss
pop
jns
inc
cmp
mov
call
stos
fld
jnp
push
pop
cdq
movs
int3
lahf
mov
add
clc
mov
mov
aad
mov
jmp
out
inc
cs
stc
mov
stc
pop
jp
imul
push
adc
xchg
loope
push
pop
and
aam
jb
xchg
mov
add
sahf
fadd
pop
fwait
call
aam
sub
jl
ficomp
pop
repz
cli
mov
in
repz
cmp
dec
dec
out
ret
xabort
mov
and
std
jne
xchg
retf
call
int3
shl
jne
in
pop
addr16
sbb
test
lods
enter
push
movs
jge
and
add
mov
retf
cmp
pop
movs
sub
xchg
mov
adc
fwait
sbb
pop
cmp
dec
mov
pop
inc
xchg
scas
inc
push
outs
cld
push
mov
sti
(bad)
and
aaa
aad
mov
ds
call
pop
daa
test
inc
sbb
pusha
ss
jne
pop
add
xlat
shl
ret
mov
shl
pop
xchg
out
lods
and
dec
mov
mov
add
(bad)
shr
cli
nop
fdiv
ss
dec
push
in
xchg
inc
cmc
(bad)
add
sbb
out
clc
dec
mov
leave
mov
and
xor
or
loop
sahf
in
sub
movs
dec
sub
test
int3
