mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
test
add
inc
add
sbb
cmp
cmp
cmp
data16
sub
das
sub
pop
sub
sub
add
add
add
xor
cmp
and
and
das
add
add
push
sub
das
sub
lar
adc
sbb
add
sbb
cmp
cs
sub
daa
or
cmp
add
add
add
or
sbb
and
cmp
add
xor
add
add
add
add
adc
add
add
push
pop
and
and
add
or
add
sub
add
push
pop
or
and
add
or
add
sub
add
push
pop
lea
add
add
add
or
add
add
or
add
sub
add
push
mov
add
add
adc
adc
push
pop
adc
and
add
or
add
sub
add
push
mov
add
sub
pop
jle
add
add
sbb
add
or
sub
add
push
or
add
push
pop
sub
add
push
or
pop
sbb
and
add
or
add
sub
add
push
pop
or
and
add
or
add
sub
add
push
sub
add
sub
push
or
sub
add
push
add
ficom
adc
adc
or
add
sub
add
add
sub
adc
add
add
add
jmp
adc
add
add
add
add
add
add
jmp
loope
lods
jno
or
dec
std
test
mov
or
sbb
cmp
cmp
das
data16
cmp
and
sub
sbb
cmp
cmp
jp
xor
add
add
adc
and
and
add
or
add
add
add
adc
pop
lea
add
add
add
or
add
sub
add
push
sbb
and
add
or
add
sub
add
push
pop
lea
add
add
push
push
pop
or
adc
add
and
add
or
add
sub
add
push
mov
add
add
pop
push
push
mov
add
add
add
add
or
sub
add
add
xor
cmp
and
and
sub
daa
or
cmp
add
add
add
sbb
cmp
cs
sub
daa
or
cmp
cmp
add
cs
add
add
add
add
es
and
cmp
cs
sub
daa
data16
es
es
push
and
das
cmp
add
xor
cmp
and
and
sub
daa
data16
es
cmp
xor
cmp
and
sub
add
xor
cmp
and
sub
and
xor
cmp
daa
or
sub
push
or
sbb
sbb
push
add
adc
or
aas
add
add
add
adc
rcr
add
add
push
add
or
push
sbb
or
add
add
push
add
or
lea
add
add
add
or
add
sub
add
push
sub
add
or
add
or
pop
and
and
add
or
add
sub
add
push
sbb
adc
add
and
add
or
add
sub
add
push
sbb
adc
add
pop
push
lea
add
add
add
or
add
sub
add
push
mov
sbb
and
add
or
add
sub
add
push
mov
jge
and
add
or
add
sub
add
push
mov
and
and
add
or
add
sub
add
push
mov
add
add
adc
add
add
mov
add
add
lea
add
add
push
adc
push
pop
jge
and
add
or
add
sub
add
push
mov
adc
add
mov
add
sub
add
sub
add
add
sbb
cmp
cs
sub
daa
or
cmp
add
add
add
add
sub
add
add
xor
cmp
and
sub
add
xor
add
add
add
add
add
sbb
and
add
or
add
sub
add
push
sbb
and
add
or
add
sub
add
push
pop
lea
add
add
pop
push
pop
or
add
add
or
add
sub
add
push
mov
add
add
push
add
add
or
add
sub
add
add
add
ds
and
or
aaa
add
add
add
and
add
or
add
sub
add
push
pop
sbb
or
pop
pop
lea
add
add
pop
push
add
pop
mov
add
sub
add
add
adc
add
add
add
adc
add
add
or
or
adc
pop
add
mov
pop
pop
pop
xchg
pushf
pop
pop
pop
or
push
mov
add
or
add
sub
add
add
add
xor
add
add
add
add
adc
add
sub
add
or
add
sub
push
sub
add
add
adc
add
push
add
add
add
adc
add
outs
adc
add
or
or
call
or
adc
inc
adc
add
adc
add
push
add
or
or
sbb
or
mov
add
add
add
(bad)
adc
add
adc
pop
sub
add
add
add
xor
push
add
add
add
adc
add
add
sub
add
push
add
sub
sub
push
sub
add
add
add
add
add
es
and
push
add
add
add
add
adc
add
and
add
or
add
sub
add
push
pop
sbb
or
push
add
pop
sub
add
or
or
add
sub
add
add
xor
add
add
add
add
adc
add
sldt
or
add
pop
add
push
or
add
sub
add
add
add
add
sbb
cmp
cs
sub
daa
data16
cmp
and
add
cs
add
sub
sub
sbb
cmp
xor
add
add
adc
add
outs
sbb
add
adc
adc
add
add
add
adc
add
add
adc
inc
adc
adc
sub
sbb
add
or
or
add
pop
pop
or
add
imul
imul
pop
pop
lea
add
add
add
or
add
sub
add
push
pop
or
add
add
or
add
sub
add
push
sub
add
sub
call
add
add
adc
adc
sub
imul
adc
adc
sub
sbb
adc
adc
inc
push
adc
cmp
(bad)
call
sub
add
add
add
add
xor
cmp
and
cmp
or
xor
cmp
das
cmp
cmp
xor
and
es
sub
sub
sub
add
cmp
sub
cmp
cmp
sbb
cmp
sub
or
xor
cmp
das
cmp
cmp
xor
or
xor
cmp
sbb
sub
cmp
daa
cmp
cmp
cmp
daa
cmp
and
and
sub
add
add
add
xor
cmp
and
sub
add
xor
cmp
and
jnp
add
add
sbb
cmp
cmp
jp
xor
add
add
or
add
add
add
or
push
add
add
or
push
pop
sub
adc
add
and
add
or
add
sub
add
push
pop
jge
and
add
or
add
sub
add
push
push
lea
add
add
lea
add
add
or
add
or
pop
sub
add
add
or
add
sub
add
push
pop
adc
and
add
or
add
sub
add
push
sbb
or
lea
add
add
add
or
add
sub
add
push
mov
lea
add
add
add
or
add
sub
add
push
mov
lea
add
add
add
or
add
sub
add
push
mov
add
add
add
add
add
mov
add
add
mov
sbb
add
mov
add
sub
add
sub
add
add
xor
xor
add
or
push
or
or
sbb
and
add
add
add
pop
ins
sub
add
imul
or
pop
pop
or
sbb
add
or
add
sub
add
cvtps2pi
and
sub
cmp
and
jnp
add
add
sbb
cmp
cmp
jp
add
add
and
and
add
sbb
pop
add
add
push
add
adc
rol
push
add
or
lea
add
add
add
or
add
sub
add
push
sbb
adc
adc
push
pop
or
adc
add
and
add
or
add
sub
add
push
mov
or
adc
add
and
add
or
add
sub
add
push
mov
add
push
or
push
sbb
adc
adc
push
push
mov
add
add
mov
add
add
add
sub
sbb
or
push
adc
sub
or
pop
mov
add
add
mov
add
add
push
add
or
lea
add
add
or
or
pop
setl
or
pop
add
push
sub
add
sub
pop
add
or
add
add
mov
add
add
push
add
or
lea
add
add
or
or
pop
or
add
sub
add
sub
push
lea
add
add
or
add
sub
add
or
lea
add
add
add
or
add
sub
add
push
sub
add
sub
add
adc
add
adc
cmp
add
add
adc
sub
inc
push
inc
sub
pop
adc
adc
sub
add
add
sbb
adc
adc
push
adc
mov
add
add
add
add
add
sub
add
or
add
sbb
or
and
mov
add
add
mov
add
add
push
add
or
lea
add
add
or
or
pop
setl
or
pop
add
push
sub
add
sub
or
add
or
or
add
pop
mov
add
add
push
add
or
lea
add
add
or
or
pop
or
add
sub
add
sub
add
add
add
push
pop
pop
adc
adc
adc
or
or
add
adc
adc
cmp
(bad)
call
add
adc
add
das
or
or
add
adc
adc
cmp
(bad)
(bad)
dec
adc
sub
adc
sub
adc
add
add
add
or
sub
adc
add
add
add
adc
push
or
sub
or
adc
push
add
xchg
jle
add
add
xchg
popa
rcr
jle
add
add
imul
add
fld
pop
pop
or
add
add
add
leave
add
add
or
or
or
push
add
xchg
popf
push
pop
pop
or
or
add
add
jmp
or
or
sub
add
and
add
sub
add
add
add
cli
ret
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
neg
dec
in
add
and
add
inc
add
add
bound
push
add
dec
add
jns
add
ins
add
inc
add
add
add
and
ret
inc
xchg
repz
loop
xchg
pop
push
adc
add
and
pop
rol
shl
xchg
add
pop
jbe
out
add
test
adc
je
out
fcomp
scas
mov
push
push
imul
addr16
mov
xchg
retf
test
jae
xchg
xchg
pop
adc
(bad)
xchg
in
ror
dec
or
mov
sahf
arpl
and
sbb
ja
mov
dec
les
xchg
bound
in
sub
addr16
in
jne
lahf
test
or
dec
popa
adc
xor
jbe
ret
xchg
jbe
(bad)
stos
loop
jl
xor
inc
gs
dec
add
sbb
jnp
mov
mov
arpl
xchg
fst
std
jno
pop
out
sub
inc
rol
icebp
jnp
xor
jge
push
ror
xchg
call
cs
rcl
or
dec
ret
std
add
or
mov
jb
xor
sbb
retf
and
jmp
in
jmp
xchg
mov
mov
ret
sub
push
jnp
push
movs
mov
stos
and
or
push
add
xor
push
cmp
dec
(bad)
adc
lods
mov
movs
cmp
rcr
inc
add
scas
inc
into
pop
cmc
pop
es
mov
mov
aaa
dec
clc
push
stos
call
cmp
sar
sub
pop
add
adc
or
stos
adc
lea
fbstp
push
mov
push
push
ins
inc
sbb
jno
sahf
jle
mov
fwait
leave
mov
xchg
jmp
in
jp
xchg
push
jb
or
es
in
xor
enter
sub
ret
add
int3
jmp
out
jle
stc
fldcw
sbb
mov
push
mov
adc
mov
jmp
cld
cs
adc
adc
add
aas
add
lods
push
mov
cld
or
mov
xor
mov
cli
xor
daa
jnp
xor
ins
addr16
pop
inc
jp
aaa
xor
sbb
pop
inc
dec
jns
out
or
das
jmp
(bad)
in
sub
loopne
push
inc
and
jno
les
into
xor
lods
sub
xchg
push
cmc
loopne
adc
cmp
out
or
mov
mov
jbe
movlps
test
aad
dec
push
cmp
jmp
xchg
mov
dec
mov
lods
inc
ror
add
pop
test
arpl
sub
ins
ss
and
imul
js
stc
mov
mov
mov
mov
inc
outs
pop
dec
jo
mov
cmc
loopne
out
mov
les
shl
jnp
jb
popa
(bad)
(bad)
push
cmp
rcr
retf
js
cmp
xor
(bad)
adc
scas
pop
rcl
in
std
(bad)
int3
cmp
fmulp
mov
shr
mov
out
shl
jp
adc
hlt
pop
cmc
je
sub
inc
imul
adc
sub
popf
mov
popf
rol
jns
pop
loopne
sbb
call
sub
inc
inc
icebp
lahf
mov
repnz
int3
pop
out
inc
xchg
movs
jmp
in
jbe
cmp
jecxz
adc
les
mov
or
lgs
mov
and
(bad)
mov
std
int3
cmps
jmp
xchg
cmc
pop
xor
(bad)
leave
xchg
jmp
addr16
push
fisttp
lock
jle
js
inc
imul
cdq
cmp
and
lods
retf
(bad)
addr16
sbb
(bad)
int
loopne
stos
push
sbb
leave
add
(bad)
inc
mov
nop
icebp
jl
adc
int3
xchg
pusha
pcmpeqb
sbb
int3
and
push
dec
mov
aam
rcl
jmp
lock
test
push
cmp
hlt
push
enter
repz
sub
das
fnsave
cdq
iret
out
ret
xchg
(bad)
hlt
pop
mov
push
stc
xor
pop
popf
stc
pushf
lea
std
adc
fwait
mov
sti
in
das
(bad)
mov
mov
jmp
cli
(bad)
sub
add
mov
rcr
add
mov
das
mov
mov
cmp
xor
mov
pushf
aas
(bad)
xor
stos
lea
add
mov
sub
nop
mov
push
dec
mov
inc
xchg
lock
mov
fiadd
mov
push
jnp
popa
push
scas
push
mov
xchg
and
call
ss
enter
inc
sbb
push
or
arpl
nop
fmul
(bad)
mov
sbb
jge
xchg
xor
add
call
mov
adc
and
aad
popa
stos
lods
mov
lods
push
inc
rcr
pop
push
sti
imul
push
sti
lea
repnz
aam
cmps
int3
pushf
or
jle
lods
es
(bad)
jp
popf
stc
inc
push
scas
mov
jno
mov
inc
dec
loop
mov
repnz
arpl
jo
mov
add
gs
dec
outs
push
mov
stc
and
and
pop
adc
jbe
pop
dec
and
cdq
jg
inc
xchg
repnz
(bad)
cmp
pop
mov
imul
loopne
inc
loop
and
iret
loop
jbe
mov
fs
in
jnp
add
mov
lods
(bad)
and
int
mov
enter
fimul
mov
jne
pusha
push
mov
jbe
les
nop
mov
inc
call
xchg
fdiv
outs
bound
push
mov
push
enter
loopne
imul
loop
inc
test
enter
jo
sahf
dec
and
mov
movs
pop
shr
add
or
mov
push
gs
popa
sub
cmps
ins
add
pop
movs
jns
out
adc
and
test
arpl
cmps
mov
xor
add
xchg
loop
movs
adc
cs
push
pushf
jns
(bad)
sub
(bad)
adc
fwait
std
dec
imul
retf
movs
clc
dec
adc
push
mov
(bad)
or
pop
out
jo
dec
xor
jg
mov
retf
push
add
jnp
xor
inc
push
in
test
es
mov
inc
push
and
(bad)
out
mov
jl
mov
inc
push
imul
pop
stc
jne
lods
mov
mov
cld
xchg
pop
dec
sbb
add
aam
mov
xchg
jg
imul
sub
test
dec
jne
rol
int3
out
mov
ss
jmp
ret
icebp
jg
arpl
pop
xor
jle
push
cmp
or
lods
cmps
cmps
jmp
out
jmp
stos
lods
cmp
jno
imul
icebp
adc
cld
jne
adc
mov
mov
xor
or
cli
pop
adc
jno
outs
inc
in
test
add
push
sub
lods
fimul
leave
test
xchg
daa
addr16
xchg
fisub
dec
enter
jg
call
jl
and
stos
and
sub
scas
nop
mov
ins
(bad)
xchg
arpl
add
aas
pop
in
add
cmps
out
push
pop
inc
cmp
pop
sub
retf
sbb
jbe
ss
enter
push
dec
out
lods
cdq
or
sahf
cwde
jg
test
xchg
xchg
mov
adc
fwait
dec
ins
or
or
and
jns
mov
add
push
out
rcr
aam
sub
dec
sbb
js
add
cld
repnz
sub
jmp
test
cmc
jmp
pop
cmps
or
xor
mov
sbb
inc
pop
test
push
jo
pop
aad
and
pop
or
mov
and
lock
call
cmc
stos
cli
xor
mov
mov
jle
test
push
push
hlt
pop
mov
cmps
retw
sub
loope
enter
fbld
add
push
cli
pop
hlt
mov
out
jno
inc
out
test
xor
jmp
adc
out
setb
paddsb
xchg
test
rcr
xchg
leave
xor
shl
push
aam
mov
push
sub
dec
or
mov
scas
lods
enter
push
jge
xchg
cmp
popf
mov
in
cmc
cmp
cli
mov
movs
push
arpl
std
cdq
and
mov
xor
test
dec
psubb
fiadd
sub
fcomp
push
pop
cmp
outs
xor
push
mov
data16
stos
xchg
add
xor
sub
enter
and
dec
xchg
lods
add
stc
mov
inc
pop
sbb
push
add
xchg
sbb
out
aas
lahf
or
jbe
pop
aaa
sbb
jne
test
jmp
add
loope
or
out
dec
mov
mov
mov
and
add
adc
push
jb
jnp
pop
xor
js
sbb
mov
or
addr16
shl
gs
mov
xchg
jbe
lea
inc
cmp
jle
out
pop
push
ret
mov
(bad)
fcomp
lods
cmp
add
cmc
mov
frstor
pop
mov
test
retf
sar
movs
inc
iret
push
or
mov
enter
iret
in
push
mov
mov
(bad)
gs
fwait
(bad)
out
inc
add
mov
es
inc
and
test
add
dec
repnz
stos
jmp
dec
xor
mov
push
stos
mul
push
imul
out
cmp
xlat
je
jb
pop
or
dec
jp
icebp
hlt
cmp
daa
icebp
sar
or
call
cmp
mov
scas
ss
adc
add
dec
cwde
test
mov
dec
and
retf
retf
sub
mov
sahf
stos
test
sbb
dec
mov
xchg
frstor
jnp
mov
test
iret
imul
or
lea
test
stos
mov
jmp
fwait
addr16
cmc
xchg
mov
and
pop
adc
inc
xchg
arpl
enter
lods
loopne
push
fsubr
minps
imul
enter
call
cwde
aad
add
or
push
ds
sbb
pop
or
sub
cmp
mov
in
cmp
push
sub
and
pop
das
cmp
icebp
jno
retf
cmps
clc
xor
int3
xchg
lods
pop
sar
lods
add
(bad)
sub
dec
retf
adc
mov
sti
mov
jge
scas
jnp
inc
and
clc
inc
xor
xor
xchg
in
fdivrp
test
outs
or
push
inc
das
repnz
popf
jge
loopne
in
inc
inc
addr16
adc
aaa
pop
popf
cmp
arpl
push
or
pop
xchg
push
or
and
mov
sahf
adc
inc
jge
xor
xchg
add
cmp
push
cmp
push
mov
jg
xchg
xchg
(bad)
pop
xor
cli
popa
mov
and
sub
test
adc
fisubr
cmp
repz
call
cmp
pop
out
movs
mov
xchg
and
in
pmovmskb
mov
dec
add
inc
test
fstp
les
pusha
(bad)
and
inc
aaa
cmps
jecxz
fist
jg
into
push
scas
fwait
cmp
xlat
inc
and
jo
call
scas
ja
ret
xchg
mov
shl
and
fimul
and
mov
data16
cmps
std
(bad)
mov
ret
(bad)
mov
fist
iret
pushf
cmp
push
dec
(bad)
dec
add
test
std
iret
mov
inc
xor
stos
push
mov
scas
add
and
jb
cmp
int
and
js
ja
ins
jmp
mov
out
lock
sbb
in
gs
dec
sub
test
cmp
ss
push
xchg
fxch
hlt
fistp
mov
out
bound
push
cwde
mov
lods
push
pop
sub
adc
cmp
xchg
mov
or
mov
int
int3
jge
dec
xchg
daa
mov
sti
cmps
movs
ret
or
ret
inc
dec
and
loopne
movs
push
adc
mov
dec
push
sub
mov
jmp
das
pop
xchg
jne
in
mov
iret
ins
test
push
mov
jnp
dec
cwde
xor
inc
cld
and
call
fcomp
xchg
sub
push
scas
dec
ja
xchg
cmc
int
sub
jns
inc
and
cdq
in
lea
in
cmp
pop
mov
inc
test
pop
into
movs
out
outs
xor
add
(bad)
das
pop
jne
sbb
repnz
fstp
imul
out
push
xchg
int
test
shrd
test
mov
mov
shr
stos
push
xor
sbb
fisttp
xchg
rcl
imul
int3
adc
push
adc
in
sbb
fnstsw
fiadd
stos
and
jb
es
icebp
dec
pop
mov
fdivr
(bad)
xlat
mov
sub
ins
jo
inc
sub
sbb
mov
sbb
outs
inc
mov
mov
out
inc
shl
or
jo
fiadd
(bad)
pop
(bad)
and
sub
cmc
cmp
adc
aad
dec
loopne
mov
dec
jle
pop
mov
or
outs
dec
mov
fdiv
inc
or
pop
inc
pushf
ds
sahf
push
mov
jmp
pushf
cmp
test
mul
xor
sub
imul
adc
je
cs
mov
scas
call
push
sub
es
cmp
xchg
mov
or
aaa
dec
xchg
popf
cmp
fdiv
xor
mov
and
ret
mov
push
movs
add
adc
cmp
pop
mov
popf
cmp
push
(bad)
cmp
test
mov
retf
pop
jae
jns
iret
rcl
test
push
aaa
ror
inc
sbb
rcr
stos
sbb
js
loop
icebp
jmp
repz
arpl
and
jbe
aad
ins
sbb
fld
out
scas
mov
ins
cmps
aas
mov
and
test
test
stos
test
fadd
cmp
and
scas
cmp
inc
and
or
mov
ins
mov
jmp
ror
scas
push
cwde
out
inc
push
mov
xchg
mov
das
jns
dec
sub
ror
test
add
inc
sub
dec
lods
retf
mov
push
cdq
sub
dec
pop
push
and
jne
arpl
pop
inc
mov
pop
mov
ins
dec
mov
add
ror
mov
push
inc
xchg
and
cmps
add
or
mov
mov
fcomp
call
adc
cmps
fcom
adc
scas
mov
sbb
addr16
sub
pusha
mov
outs
lods
xor
sub
and
jle
popf
fsub
cmp
retf
lods
stos
sbb
mov
dec
into
inc
cld
mov
mov
or
mov
(bad)
cmp
adc
repz
mov
mov
(bad)
lahf
shr
push
push
mov
movs
das
dec
dec
ds
pusha
fcmovb
cmp
ins
lea
jp
sub
adc
pop
push
test
add
and
movs
xor
inc
mov
mov
das
xchg
adc
mov
xchg
xor
in
push
outs
adc
pop
iret
mov
jmp
push
(bad)
ja
sbb
aas
icebp
add
or
rol
loopne
retf
out
mov
xor
xor
or
shl
or
push
or
xor
out
sub
xor
fisub
mov
jecxz
xor
cld
outs
cmc
into
jg
fcomip
pop
push
popa
call
out
sbb
or
mov
in
sub
les
ja
add
cmp
loop
and
mov
fwait
(bad)
cmc
jbe
repnz
cmp
mov
jo
mov
sub
mov
xchg
ret
inc
mov
mov
jmp
and
mov
jo
add
cmp
dec
jbe
jmp
repnz
add
loope
fdivr
sbb
mov
inc
pop
mov
mov
dec
outs
jecxz
inc
fwait
ins
sub
sub
aam
adc
xchg
sbb
xor
push
inc
xor
pop
aad
sub
imul
idiv
sbb
push
pop
in
loopne
inc
aad
std
test
stos
imul
jno
push
fwait
shr
js
xchg
cmp
jno
mov
data16
es
repnz
ins
add
loopne
stos
xchg
movs
in
rcl
idiv
sbb
and
fisub
js
mov
push
sbb
fwait
sbb
sar
fs
push
stos
cwde
xor
jnp
(bad)
fwait
jle
push
(bad)
icebp
jp
push
and
lds
fidiv
xor
shl
std
cdq
xor
jmp
jp
repz
jae
mov
sub
call
ins
stc
out
xchg
daa
pop
sub
aad
dec
push
mov
jg
cmp
lods
imul
retf
push
inc
(bad)
test
or
(bad)
jo
outs
cmps
pop
xor
jp
call
mov
mov
repz
xchg
add
add
mov
pop
push
xchg
in
sti
call
xchg
dec
add
ins
mov
in
out
lods
inc
jmp
sbb
fsubr
cmps
ins
and
sbb
inc
adc
xchg
pop
dec
cs
pop
cs
ficom
add
and
int
mov
jmp
scas
xor
imul
sbb
mov
std
sub
mov
mov
aaa
xor
(bad)
xchg
cmp
xlat
mov
lods
(bad)
or
push
ret
pop
dec
repnz
cmps
test
cmps
dec
mov
push
xchg
mov
leave
add
xchg
out
adc
jmp
jg
mov
out
add
repz
aaa
adc
adc
lahf
into
push
adc
dec
ja
inc
push
ins
(bad)
fstp
jb
mov
mov
mov
dec
add
repnz
jo
(bad)
push
cmp
add
lock
icebp
push
sbb
pop
fdivr
cs
sbb
xor
dec
test
imul
xchg
xor
xor
xor
add
push
jg
push
test
cmp
sar
pop
and
dec
sub
pop
dec
xchg
arpl
push
test
inc
mul
mov
shr
adc
sbb
dec
faddp
loopne
outs
xchg
sbb
inc
shl
unpcklps
jmp
rcl
fimul
call
xchg
or
and
and
mov
mov
push
aad
retf
cdq
pop
fild
inc
shr
mov
movs
sub
cmp
or
cmp
dec
and
add
das
clc
sub
sahf
pushf
arpl
inc
xor
mov
cli
mov
and
add
repz
pusha
inc
push
jle
pop
inc
xchg
sub
in
jae
mov
leave
(bad)
push
mov
xchg
hlt
repz
rol
std
dec
and
sbb
xor
inc
pop
fwait
xor
jle
pop
sbb
mov
xor
xchg
hlt
nop
stos
imul
fimul
call
push
test
and
leave
fiadd
mov
stos
jb
mov
mov
imul
leave
jp
sub
dec
stos
push
test
pusha
sahf
ins
xchg
hlt
(bad)
jbe
xchg
sbb
(bad)
test
xor
jmp
jae
pop
int3
pop
mov
stos
daa
jecxz
push
outs
test
(bad)
mov
and
mov
push
ret
lea
outs
lahf
(bad)
ror
and
rol
fistp
ja
pop
pushf
mov
fcomp
test
data16
es
cmp
int3
ret
xchg
add
pop
les
add
cmp
loop
ficom
jl
call
add
call
xor
cmp
mov
push
loope
pop
sbb
out
and
cwde
pop
mov
jecxz
pop
fild
popa
call
push
add
mov
pusha
test
jbe
(bad)
mov
add
aaa
add
pop
sbb
fild
cmp
pop
cwde
rol
dec
scas
inc
not
mov
inc
ficom
outs
add
push
imul
jg
loopne
scas
cmp
jae
cmp
cmp
ror
stc
mov
push
call
and
xchg
jl
int
dec
xor
pop
in
adc
push
pop
inc
dec
dec
int
inc
sbb
daa
dec
std
mov
add
xchg
inc
xchg
(bad)
retf
mov
xchg
fsubr
xchg
jp
je
out
mov
ja
xor
pop
push
cli
popf
jp
dec
adc
jno
arpl
loope
ds
mov
jb
jbe
mov
pop
loop
jnp
jmp
pop
jnp
xor
stc
mov
fist
xlat
sub
jae
test
xor
out
pop
or
cwde
int3
arpl
cmp
inc
sbb
test
dec
in
fwait
adc
cwde
or
dec
(bad)
mov
test
test
vpackuswb
test
xchg
es
stos
xlat
sbb
pop
in
xor
out
scas
sub
dec
sbb
cs
shl
pop
adc
movs
sar
pop
sbb
je
repz
inc
push
pop
pop
(bad)
jne
or
sahf
pop
fcmovb
adc
icebp
pop
daa
int3
cmps
(bad)
mov
mov
cld
call
jbe
or
outs
repz
out
mov
jmp
or
add
pusha
inc
jl
arpl
or
(bad)
xlat
gs
dec
sub
push
cld
pop
(bad)
mov
inc
add
sub
inc
add
and
jge
test
cdq
add
pop
adc
mov
daa
cs
data16
(bad)
mov
mov
mov
adc
xchg
aam
jle
imul
mov
hlt
push
xchg
retf
stc
adc
ja
out
movs
and
push
fs
add
lods
fisubr
mov
(bad)
in
mov
xchg
shr
rcl
xchg
mul
imul
popa
pushf
jecxz
xchg
mov
mov
in
mov
js
sbb
and
fwait
not
push
(bad)
ret
lock
and
xchg
nop
push
retf
aaa
mov
popf
jb
in
mov
sub
sbb
aaa
sbb
cld
shl
hlt
mov
jne
dec
ret
lock
sub
aam
add
dec
dec
dec
imul
add
push
not
and
fidiv
outs
inc
int
inc
sub
inc
iret
xor
test
stos
jmp
cmp
(bad)
imul
adc
inc
mov
clc
mov
xchg
sub
sub
in
in
add
xchg
dec
ja
int3
add
or
pop
sbb
jl
pop
movs
test
push
jbe
and
or
push
scas
(bad)
cmps
bound
add
call
rol
dec
pop
adc
sbb
bound
jo
and
mov
add
cmp
inc
and
loop
movs
mov
lods
sub
jo
mov
aas
data16
shr
or
dec
and
outs
test
call
mul
mov
cld
bound
pop
lods
in
mov
mov
mov
add
inc
inc
repnz
xor
fmul
xor
xchg
sbb
push
pop
mov
es
and
out
lods
sahf
std
out
jg
rol
leave
movs
iret
fcomp
pop
adc
inc
lahf
jp
or
enter
cmp
dec
fs
adc
sbb
mov
pop
retf
ja
jne
jmp
aaa
ret
fmul
push
arpl
xor
mov
add
inc
sbb
ficom
mov
scas
test
jnp
cld
cmp
dec
xlat
inc
and
jb
pop
xchg
push
into
inc
xchg
shl
loopne
mov
repz
arpl
lods
cdq
outs
repz
sub
push
dec
push
fdivr
test
fistp
push
lea
mov
sub
mov
sub
mov
push
inc
cmp
ins
or
inc
xchg
mov
dec
(bad)
mov
and
xchg
imul
cmp
aaa
rol
sub
and
out
cmp
es
adc
add
or
pop
aad
fiadd
in
fld
out
and
inc
ret
jp
xor
rcr
daa
jg
jle
in
mov
jmp
pusha
mov
mov
outs
and
dec
sub
hlt
cmp
int3
vpavgb
test
or
(bad)
outs
sub
sub
xor
imul
xchg
aas
xor
rol
(bad)
xor
and
xor
xchg
or
adc
call
nop
movs
sbb
pusha
mov
fdivr
xchg
or
jmp
jp
repnz
push
scas
push
test
cmp
lahf
das
rcl
jo
fistp
inc
repz
dec
fidivr
addr16
scas
mov
jle
add
imul
mov
clc
jmp
xchg
out
push
sbb
(bad)
data16
(bad)
cmps
stos
rol
inc
shl
outs
sbb
dec
ret
int3
xor
fsub
rol
xor
cmp
(bad)
mov
inc
ret
je
retf
and
jge
lock
aam
push
sub
gs
ret
and
push
ss
mov
mov
imul
dec
jmp
mov
aam
cmp
pop
mov
test
or
fidiv
bound
pop
out
rol
jl
add
xchg
mov
mov
fs
jbe
out
cli
jb
popa
push
ins
adc
adc
(bad)
shl
arpl
jmp
movs
pop
cmps
fs
es
(bad)
sti
dec
shl
push
cmps
and
xchg
xchg
mov
adc
ret
les
in
sbb
pop
scas
lods
sbb
jo
out
sub
cwde
push
test
(bad)
xor
add
push
(bad)
xor
mov
lds
aas
cwde
(bad)
fdivrp
xchg
std
mov
div
outs
sub
jp
lea
out
pop
sbb
add
sub
rcl
sbb
lds
dec
leave
fiadd
inc
push
jno
adc
mov
loope
arpl
cmp
jbe
and
dec
loop
mov
jae
or
loop
es
js
xchg
mov
aas
dec
fst
jbe
inc
fstp
stc
cmp
push
shr
lods
jne
ret
xlat
daa
and
pop
mov
fs
jb
adc
jge
mov
loopne
xor
add
sbb
mov
sbb
mov
xchg
xchg
jecxz
sbb
dec
dec
cdq
(bad)
add
pop
bound
das
jge
mov
push
push
push
outs
pusha
add
fisttp
daa
mov
xor
sbb
pop
dec
stc
xchg
cmp
ds
pop
jb
and
es
into
test
sub
out
repz
test
push
bound
push
call
in
shl
shl
xchg
add
jbe
cmp
and
int
mov
add
xchg
fisttp
xchg
mov
mov
cmp
mov
mov
jne
test
and
test
nop
out
adc
shl
cli
and
mov
jae
sbb
sbb
mov
ja
cmp
mov
pop
clc
pop
cmp
dec
sub
jae
or
mov
push
out
xor
mov
fdiv
pop
ret
mov
dec
adc
mov
shr
sbb
and
bswap
rol
pusha
sbb
in
(bad)
loopne
adc
mov
loop
inc
or
and
mov
inc
mov
sub
add
mov
rcr
cmp
sbb
js
mov
sbb
data16
inc
mov
mov
leave
sub
(bad)
gs
sub
inc
pop
adc
sahf
int3
addr16
bound
sar
xchg
and
and
xor
and
cmp
cld
or
cmp
je
and
in
test
mov
idiv
aas
add
cdq
pop
fcom
int
sub
scas
mov
mov
mov
mov
jg
xchg
mov
mov
sbb
or
push
imul
hlt
popf
sub
(bad)
and
mov
add
cmp
add
test
inc
je
xor
scas
jg
pushf
push
add
push
or
lods
mov
lock
fidiv
and
add
enter
adc
mov
cmps
push
cmc
sub
rcr
jne
out
cmp
test
in
mov
scas
and
ins
int3
(bad)
mov
stc
test
sbb
shr
pop
inc
lahf
push
pushf
jmp
inc
fwait
xchg
dec
js
xor
inc
and
inc
scas
jne
mov
dec
aaa
jmp
lock
jge
xchg
rcr
pop
or
mov
mov
fsubp
sub
leave
cmps
pushf
jmp
xor
jnp
fs
or
test
loope
adc
(bad)
test
and
jp
or
xchg
xor
mov
adc
fs
sbb
and
push
into
es
cmp
pop
aas
jbe
xor
xor
mov
xor
pop
mov
out
add
retf
jns
repz
or
dec
loope
test
mov
mov
mov
bound
outs
mov
fisttp
cdq
cld
lods
mov
cmp
idiv
mov
bsf
js
jl
fwait
or
lds
jne
mov
in
inc
jg
adc
imul
pop
in
ins
or
mov
popa
mov
push
in
pop
sar
cmp
ret
icebp
ret
fist
jmp
cmp
test
pusha
pop
cmc
inc
or
in
sahf
push
nop
imul
add
scas
dec
push
mov
stos
adc
and
repz
out
fdiv
and
cwde
aas
(bad)
jbe
and
cdq
pop
xchg
mov
and
adc
into
jl
mov
stc
mov
cmps
push
cs
xchg
(bad)
sti
cmps
iret
into
pop
ja
or
jae
in
mov
mov
jle
scas
sbb
clc
mov
xchg
mov
and
adc
sar
cmps
jo
outs
stos
mov
dec
repnz
inc
sbb
ins
cmps
not
xor
dec
xchg
std
jmp
sbb
lds
(bad)
scas
popa
pop
jp
stos
jae
jg
mov
movs
shl
sbb
or
xlat
shl
in
and
test
pop
xchg
daa
aam
sub
mov
mov
loopne
cmp
scas
jbe
and
cdq
ds
movs
(bad)
clc
cdq
pop
sbb
lock
test
pop
xchg
adc
neg
aas
stc
mov
cdq
xor
into
sbb
mov
jg
pop
daa
jo
adc
jo
and
imul
push
dec
aad
ret
xchg
cwde
imul
fisttp
scas
xor
push
outs
(bad)
xchg
pop
dec
mov
cmps
das
pop
call
jle
ins
fisub
les
pop
or
mov
inc
enter
inc
sbb
aam
test
cs
mov
enter
jg
fist
aad
jno
mov
(bad)
mov
add
push
mov
or
and
pop
pop
and
lahf
ret
aad
jmp
and
jg
call
xchg
sbb
jne
xchg
inc
sbb
cmp
shr
mov
cld
xchg
inc
(bad)
movs
rcr
int3
or
daa
ss
out
scas
xchg
fmulp
sub
add
(bad)
cwde
inc
pusha
bound
mov
xchg
lahf
pop
sbb
jp
mov
jp
jmp
pushf
ins
outs
ds
jmp
ret
adc
and
je
int3
sub
imul
sbb
pop
(bad)
fisttp
mov
ds
retf
xchg
and
lods
imul
imul
xor
cmp
push
xor
pop
cmp
(bad)
jmp
jnp
cmps
xchg
inc
jns
sti
shr
or
(bad)
aam
ror
outs
mov
add
es
inc
pop
adc
pop
imul
jg
pop
dec
xchg
int
pop
hlt
push
sbb
xor
dec
ss
pop
and
iret
jne
mov
ret
or
ja
xchg
xchg
std
sub
fcomip
xchg
data16
pop
or
popf
adc
std
fisubr
xchg
mov
mov
and
in
jnp
mov
jmp
cld
cmp
xchg
scas
icebp
jne
test
popa
xor
fiadd
stos
sbb
ret
adc
push
pop
cmps
inc
jns
jb
jnp
xchg
dec
loopne
push
int3
fwait
xor
add
fbld
test
inc
dec
mov
ins
fsubr
addr16
dec
mov
adc
lods
loop
ins
cwde
(bad)
mov
push
cli
xchg
cli
into
add
in
lahf
mov
dec
clc
cmps
mov
mov
pop
xor
push
push
or
sub
out
mov
outs
gs
int
cli
xchg
or
cmp
push
pop
ss
xchg
sub
ins
sti
int
sub
into
aad
mov
adc
stc
add
hlt
loop
mov
scas
fs
sub
jbe
lock
or
mov
mov
out
cli
fldcw
pusha
add
pop
or
mov
in
in
lahf
jmp
inc
or
call
(bad)
mov
xor
cmps
cmp
lods
lock
out
cmp
inc
jmp
loope
test
cmp
xchg
ret
fwait
repz
pusha
sub
adc
xchg
ret
ficomp
jmp
sbb
xor
je
dec
lods
xchg
div
xchg
mov
xchg
push
ins
scas
popf
sub
xor
cli
scas
les
cmps
sub
jno
lea
into
xor
loopne
jb
daa
pop
push
xor
inc
xlat
stc
mov
sti
dec
lock
loopne
jle
out
push
push
movs
cmps
inc
mov
push
(bad)
inc
and
rcr
loop
xchg
out
fs
fidivr
and
out
dec
out
jne
dec
add
aaa
push
cmps
push
jno
lods
inc
sub
lahf
or
xor
fisttp
movs
popa
fcom
imul
pop
and
rcr
push
push
mov
add
cwde
dec
and
cmp
shl
sbb
and
dec
std
sti
ja
and
mov
push
pushf
fmul
xor
arpl
aad
loop
jno
xlat
xchg
mov
mov
lods
mov
aad
mov
add
aaa
and
in
lock
add
xchg
or
dec
aaa
arpl
xchg
sbb
or
das
std
int
aad
inc
fs
popa
int
pusha
cmps
or
dec
cld
mov
pusha
mov
jbe
mov
pop
nop
jle
lahf
jmp
rol
popa
pop
sub
push
not
hlt
add
push
mov
inc
test
cmp
push
inc
adc
div
aam
push
or
test
fs
neg
xor
data16
adc
adc
out
jno
arpl
movs
not
dec
idiv
in
sbb
fbstp
jo
add
mov
sbb
les
loop
popa
mov
mov
push
push
mov
int
test
inc
inc
jge
(bad)
iret
ud2
push
lods
sub
xchg
pop
mov
fwait
mov
(bad)
leave
mov
outs
mov
ffreep
jmp
ds
out
pusha
clc
aas
and
and
pop
(bad)
cmps
or
jo
jle
aaa
jle
scas
cwde
inc
mov
pushf
pop
stos
inc
mov
mov
mov
ret
nop
dec
mov
les
jmp
pop
test
pusha
outs
rcl
push
sbb
ins
xor
(bad)
fcomp
aam
inc
daa
jge
adc
stos
fs
mov
mov
cmovno
add
pop
mov
sar
mov
pop
pop
inc
pop
adc
addr16
mov
cmp
mov
and
and
cmp
test
inc
or
push
cmp
mov
(bad)
xchg
push
jae
jae
outs
jecxz
imul
fmul
fnsave
lds
mov
xor
cmp
pop
sbb
dec
dec
dec
dec
dec
outs
sbb
jecxz
and
lahf
pop
inc
pop
xchg
dec
test
out
outs
inc
and
mov
icebp
jno
push
cdq
stc
sub
ret
rol
push
out
inc
ss
sbb
(bad)
imul
mov
jno
out
shr
jo
cmp
icebp
and
aaa
lods
xchg
rcl
aaa
int3
xlat
pop
and
add
jbe
icebp
ins
mov
xor
jle
rcl
aas
imul
xchg
(bad)
cmp
sar
jbe
add
push
inc
mov
xacquire
scas
sbb
jp
das
lea
mov
ja
sub
cmp
pop
mov
jmp
push
in
scas
icebp
les
out
mov
and
mov
scas
and
xor
ret
add
sti
add
imul
inc
(bad)
std
inc
(bad)
aam
or
xchg
sbb
outs
sbb
xchg
cmps
sbb
xlat
test
mov
test
sbb
or
ret
adc
mov
mov
aas
jbe
sub
mov
push
sti
or
sub
cmp
pop
xor
fs
clc
fs
add
jmp
ret
cmp
cld
outs
(bad)
mov
xchg
nop
int3
aaa
pop
fbstp
call
sub
int3
add
inc
test
call
icebp
not
sub
pop
test
test
aam
pop
pop
fptan
jbe
ret
push
cs
mov
pop
fisubr
call
or
xor
push
xchg
add
cmp
push
shl
mov
mov
mov
cli
shl
xchg
or
in
dec
push
sub
nop
daa
mov
cmc
stos
fdivr
mov
(bad)
fldl2e
(bad)
call
xor
xor
jnp
mov
mov
loope
inc
xor
xchg
cmps
add
jp
test
pop
xchg
inc
push
je
fisttp
dec
stos
and
sbb
cmc
jns
test
jmp
pop
jecxz
icebp
arpl
push
addr16
pop
adc
xor
data16
aaa
cmp
adc
mov
adc
and
or
popf
dec
jmp
sbb
repz
dec
pop
xor
mov
aas
(bad)
fwait
retf
std
xor
inc
mov
push
mov
inc
cmps
stc
inc
pusha
inc
fmul
inc
add
push
pushf
std
mov
shl
mov
in
or
inc
dec
data16
cmps
(bad)
es
out
mov
fiadd
int
shl
leave
ror
(bad)
or
fimul
stos
jp
mov
(bad)
call
xor
in
fcomp
xchg
popf
sti
add
(bad)
stc
xor
out
idiv
add
mov
mov
es
fisubr
mov
xchg
sbb
dec
out
dec
cmp
mov
into
hlt
sub
fdiv
shr
sbb
mov
push
cmp
fdiv
daa
push
or
pop
inc
pop
add
adc
ret
push
and
xchg
(bad)
inc
mov
loop
sub
pusha
push
sbb
popf
aas
pusha
mov
and
fsubr
mov
or
mov
shl
inc
xor
mov
lds
mov
clc
data16
aas
daa
bound
loop
ja
or
sbb
push
les
imul
js
arpl
pop
ins
lods
inc
test
mov
xor
mov
and
(bad)
int3
cmc
push
jmp
loopne
pop
sub
ss
lea
jge
pop
xchg
movs
imul
xchg
mov
call
fcmovne
and
mov
sbb
fwait
xchg
fldenv
adc
fld
fadd
lods
repz
pop
or
test
add
(bad)
movs
and
inc
sahf
inc
mov
stos
add
jnp
enter
xlat
movs
stc
sahf
xor
or
cli
in
jno
mov
push
(bad)
sbb
stc
sti
and
push
xor
test
fisubr
or
pop
test
add
add
movs
cmp
mov
cmp
daa
inc
cmp
fmulp
sbb
cdq
dec
push
fild
js
and
inc
sub
daa
sbb
imul
shr
mov
inc
add
int
rcr
adc
mov
out
call
lds
mov
pushf
push
push
dec
lea
and
hlt
aam
dec
movs
(bad)
cmps
jl
es
in
(bad)
es
fdivr
push
add
add
mov
push
pusha
sub
ja
push
xchg
add
mov
mov
xor
sbb
xchg
in
mov
(bad)
nop
cld
stos
jb
cmps
jle
mov
in
push
(bad)
mov
push
xchg
pop
sub
push
js
and
sahf
loope
stos
sbb
cmp
into
push
adc
cmc
ins
xchg
jae
imul
inc
gs
fcomp
mov
dec
cmps
xchg
add
mov
repnz
jmp
cmp
std
aaa
enter
adc
stc
out
ficomp
int
mov
outs
xchg
clc
dec
or
rol
xchg
dec
or
cmp
rcl
out
and
xchg
xor
jp
push
cld
cmp
jmp
pop
xchg
dec
xor
adc
inc
clc
jbe
into
imul
push
cmp
and
fidiv
fisub
or
fld
in
scas
sbb
lahf
and
xchg
retf
scas
mov
or
xchg
rcr
retf
scas
(bad)
and
aaa
jge
pop
ret
out
call
hlt
sbb
in
jg
ror
fs
(bad)
data16
stc
popa
das
xor
cmps
ins
call
jnp
adc
out
cdq
sub
aad
bndstx
iret
sti
lahf
and
push
imul
iret
fwait
mul
pop
push
xchg
das
inc
pusha
xchg
stos
xor
xchg
dec
ins
add
jbe
add
or
sub
xchg
inc
jmp
pop
push
xor
mov
xchg
lahf
imul
inc
fcomp
and
inc
(bad)
push
out
adc
clc
and
push
rcl
adc
lods
cmp
outs
repz
mov
cmovbe
into
jno
or
sbb
retf
xor
pop
sahf
mov
bts
imul
out
cwde
movs
test
jmp
aam
rol
ret
fcmovne
rol
and
int3
inc
daa
dec
lea
inc
in
dec
cmps
cdq
lds
(bad)
sar
jecxz
in
neg
cmp
or
into
mov
and
loopne
loope
(bad)
push
xor
xor
adc
xor
imul
lds
repnz
int
ss
out
sahf
or
mov
or
and
add
aad
outs
sti
test
cmp
adc
inc
test
mov
cld
sbb
aaa
mov
fnstsw
dec
sahf
(bad)
mov
mov
shl
fsubr
pop
pop
jmp
call
(bad)
pop
data16
xlat
push
repz
xor
and
sbb
jns
pop
ins
ret
enter
stos
pop
icebp
dec
jge
std
adc
pop
dec
out
adc
(bad)
sbb
aas
pminub
push
jmp
jne
fst
rol
imul
imul
dec
pop
cmp
sub
cdq
sub
jnp
int
push
pop
mov
mov
(bad)
cdq
jp
pop
xchg
lods
inc
inc
cli
push
std
popf
dec
dec
imul
mov
or
fcom
push
out
inc
cmp
xor
ins
mov
sub
sti
jne
push
lds
pop
ja
(bad)
jmp
aam
lock
xchg
imul
ror
sub
pop
out
in
idiv
cmps
add
clc
or
dec
rcl
call
mov
mov
ins
adc
sbb
pop
outs
test
retf
aaa
dec
pusha
mov
xor
sbb
mov
and
adc
imul
daa
fnstcw
push
sbb
fcom
daa
mov
dec
sbb
enter
sbb
ficomp
mov
sti
outs
lods
lock
fdiv
jecxz
scas
rol
jnp
scas
mov
sub
icebp
cmp
xor
push
jge
dec
push
push
loopne
out
in
and
sbb
mov
data16
into
add
mov
data16
mov
ss
mov
test
retf
repnz
je
mov
sbb
sub
mov
ror
jle
pop
test
(bad)
sbb
movs
pop
out
loop
jmp
lahf
mov
lea
mov
inc
cs
cmp
(bad)
mov
or
movs
mov
inc
xlat
adc
mov
fidiv
push
cmc
rcl
mov
and
cmp
std
xchg
jnp
outs
int3
pop
repz
into
sub
add
adc
adc
inc
and
rcl
xchg
and
cmp
push
fs
jae
jp
pop
push
xchg
data16
and
or
pop
in
out
mov
pop
out
xchg
push
cmp
addr16
rcr
mov
cmp
lahf
cmp
cmp
and
mov
fisub
dec
mov
jnp
add
cmp
cs
repnz
pusha
sub
addr16
or
sbb
adc
mov
leave
fwait
and
fwait
dec
sbb
rol
jno
inc
call
cdq
aam
sar
in
and
stc
xchg
dec
sub
and
dec
call
int3
jle
addr16
adc
cmp
push
mov
sbb
jle
sar
mov
test
mov
dec
addr16
mov
mov
mov
shr
(bad)
cdq
inc
push
mov
dec
mov
sub
ret
pop
loopne
cmp
mov
push
add
fwait
dec
mov
and
gs
dec
nop
cs
sbb
inc
pop
jnp
movs
push
mov
xchg
add
pshufw
stc
add
lahf
retf
loop
mov
loope
cmp
jo
jmp
xchg
or
xchg
out
inc
dec
xsha1
cmps
mov
dec
jbe
in
ins
sahf
mov
bound
push
ss
loope
jnp
(bad)
cmps
fidivr
cmp
sbb
inc
test
adc
inc
push
sbb
cwde
(bad)
fdivr
pop
mov
mov
dec
sub
fld
mov
push
inc
xchg
cmc
and
outs
cmp
sbb
or
xor
and
ins
scas
sti
adc
test
adc
(bad)
scas
in
outs
in
mov
js
mov
lods
push
mov
xchg
dec
dec
fst
and
pushf
stc
jne
add
stc
into
sub
jae
cmp
adc
push
pop
pushf
ins
mov
mov
in
mov
stc
and
or
fnstsw
mov
fisub
mov
iret
test
fldenv
aad
dec
push
sbb
iret
stos
pushf
or
jg
fsubr
add
cmp
pop
repnz
movs
xor
xchg
fwait
add
push
or
call
pushf
jle
scas
mov
fidivr
adc
les
test
ins
cdq
cld
test
iret
les
push
jnp
arpl
rol
jo
cmp
shr
xchg
cmp
retf
sub
cmp
retf
aam
sub
loop
shl
ror
xchg
pop
out
ds
test
pop
jmp
sub
arpl
fmul
out
(bad)
jl
add
cwde
cmc
add
sbb
out
test
test
sub
imul
and
lock
aad
pop
push
and
mov
ins
mov
push
push
sub
imul
pusha
cli
ja
sub
push
jo
jge
pusha
ss
or
sahf
or
out
data16
js
mov
mov
int3
xchg
and
inc
mov
cmp
sbb
add
aam
xchg
std
mov
in
push
xor
mov
add
sti
dec
mov
lock
xchg
lea
mul
adc
mov
cmp
addr16
cs
mov
or
mov
jmp
outs
pop
or
mov
xchg
clc
xor
mov
jbe
push
ds
mov
push
push
js
mov
dec
aaa
pop
sub
ja
retf
jne
outs
sbb
into
jmp
cdq
pop
leave
mov
in
pop
(bad)
mov
mov
ret
mov
cmps
sbb
mov
stos
pop
retf
imul
lahf
imul
inc
xchg
faddp
ud2
into
cmp
div
and
and
or
lea
xor
cmc
push
scas
rcr
out
je
test
inc
cmp
pop
pop
lock
and
push
dec
ret
addr16
ins
sub
xchg
call
movs
dec
jl
jle
adc
nop
mov
stos
sbb
jmp
mov
dec
cmp
js
ret
sub
push
ss
test
mov
sub
cmps
mov
std
stc
out
int
hlt
cmp
inc
adc
jo
loope
jmp
sti
pop
movs
iret
ja
mov
lods
jmp
pop
pop
jae
in
out
movs
mov
inc
inc
add
jmp
movs
popf
mov
inc
push
aas
loopne
sbb
pop
push
movs
inc
mov
scas
aaa
xchg
jo
in
lods
icebp
pusha
ins
arpl
push
aam
pop
shr
jmp
loopne
inc
sbb
int3
not
adc
pusha
movs
retf
push
retf
jp
cli
mov
mov
sub
jnp
int3
in
add
movs
jno
pop
xchg
repz
push
dec
test
inc
into
pop
rol
sahf
pop
xchg
js
cld
and
mov
dec
movs
dec
jg
mov
or
in
rcl
push
cwde
jge
idiv
daa
movaps
mov
cmp
gs
sbb
popa
jge
jmp
lahf
or
cmp
shr
jmp
xor
add
shl
retf
inc
sub
mov
sbb
in
mov
les
loop
and
(bad)
std
shl
in
pusha
push
aas
fisubr
aad
xor
dec
cmp
(bad)
mov
mov
repz
push
xchg
or
sub
sub
paddb
fidiv
test
push
cmp
retf
sub
call
scas
popf
rol
aad
cdq
mov
sahf
fadd
mul
mov
dec
xchg
xchg
or
mov
out
stc
cmc
loop
cmp
mov
jne
lods
cmp
and
pop
(bad)
and
into
imul
cmp
pop
dec
cmp
scas
add
shl
jp
xchg
push
movs
push
mov
mov
xor
add
lahf
sub
rol
sbb
or
rcr
push
inc
xor
jne
inc
fild
pop
out
xchg
push
mov
cli
test
sbb
mov
repz
xchg
mov
xchg
out
xor
xor
cwde
loop
mov
mov
dec
clc
imul
push
leave
fs
jnp
ins
enter
out
cmp
ret
pusha
rcl
xchg
in
jb
mov
(bad)
jle
aad
xor
je
sub
mov
fcmovnbe
out
mov
inc
dec
mov
dec
in
loop
mov
jl
(bad)
xchg
leave
cmp
push
ins
test
mov
das
push
push
mov
push
add
sbb
ret
movs
sbb
je
es
out
jae
cmp
test
and
iret
jmp
in
inc
mov
mov
(bad)
test
xor
sub
sub
movs
iret
inc
dec
pop
jo
and
sbb
(bad)
push
add
mov
xchg
mov
je
hlt
or
data16
loopne
mov
mov
out
lock
mov
add
pusha
jle
mov
in
cli
add
jle
cmp
jnp
or
frstor
mov
int
inc
push
div
cmp
ret
add
pop
sub
mov
sub
inc
pop
nop
lods
jnp
mov
cmc
pop
(bad)
xor
loop
push
lods
cld
jae
jmp
cs
push
test
add
fcom
jne
jb
inc
gs
aas
rep
or
dec
add
xlat
adc
sub
push
pop
out
arpl
call
and
cmp
sub
out
or
imul
adc
mov
and
fld
and
sbb
retf
ins
fbstp
dec
call
xchg
stos
das
popf
sti
out
lods
adc
adc
rol
xchg
cmp
jle
fnstcw
sahf
daa
iret
sbb
das
or
add
pop
mov
fld
outs
ror
(bad)
les
push
fnsave
(bad)
aad
outs
into
jp
movs
dec
test
cmp
dec
dec
dec
pop
ret
shr
dec
and
mov
mov
push
xor
push
jo
test
jnp
clc
fadd
mov
and
int3
cmp
or
imul
mov
ror
cmp
jo
push
dec
arpl
fwait
je
cmps
ins
add
mov
dec
and
mov
test
mov
mov
repz
loope
xlat
cmps
sbb
test
(bad)
jnp
mov
in
pmullw
aaa
add
or
ja
shl
neg
in
into
jmp
call
addr16
sar
jmp
ds
cmps
in
fmul
in
aad
aaa
repz
mov
rol
rcr
stos
push
xor
or
sbb
mov
aad
or
es
mov
pushf
fs
add
mov
fisub
ja
cmp
mov
outs
arpl
shr
jmp
test
jnp
push
leave
push
or
mov
mov
xor
ins
mov
cs
xchg
std
movs
mov
imul
xchg
xchg
aaa
dec
inc
lds
icebp
add
les
sub
sub
push
inc
stc
jno
push
adc
jecxz
push
daa
mov
test
addr16
or
scas
jae
adc
mov
push
mov
or
xchg
repz
fld1
out
inc
mov
jae
xor
or
adc
popf
cld
jae
fistp
xchg
popa
stc
pop
es
fcomp
out
mov
cmps
xchg
jmp
push
or
jmp
loop
jnp
mov
lds
leave
test
cmp
xor
ret
jo
mov
lods
jne
dec
pushf
rol
mov
js
pusha
dec
xchg
mov
add
fisubr
or
sar
repnz
sahf
jge
dec
xor
add
sbb
mov
adc
data16
cmps
out
push
pop
pop
(bad)
mov
adc
or
pop
(bad)
stos
lods
in
push
sbb
repz
shl
in
sbb
pop
icebp
or
pop
fs
int
inc
mov
mov
repz
gs
(bad)
arpl
xor
call
ret
je
push
jo
sub
jb
stc
jns
jb
xlat
scas
mov
add
sbb
hlt
das
sar
add
xchg
jno
ins
inc
pusha
je
xchg
dec
movs
jo
push
add
jg
dec
popf
cmp
loopne
cli
dec
mov
pusha
push
or
sub
icebp
add
icebp
stos
movs
xchg
lds
retf
adc
lods
jne
push
or
mov
ds
(bad)
movs
or
and
stc
call
push
or
push
push
movs
stos
das
or
mov
jae
sbb
jns
out
pushf
pop
and
call
jg
nop
repnz
popa
cwde
iret
cmp
xchg
test
fs
cli
adc
cmp
out
push
or
ftst
popa
pop
inc
dec
leave
or
cli
jmp
adc
pop
xlat
push
mov
jmp
lock
popa
repz
and
rol
lods
adc
addr16
retf
mov
test
addr16
imul
lds
fiadd
xor
add
(bad)
jecxz
fnstsw
daa
or
push
xchg
sahf
loopne
push
cs
xor
mov
push
mul
and
sti
cld
dec
je
xor
ins
mov
pop
and
popf
sti
pop
ret
stos
test
jae
mov
sbb
add
pop
iret
xchg
xlat
fld
in
rol
ja
mov
jp
adc
popf
and
in
imul
mov
inc
dec
inc
fnstcw
ss
cmp
jge
jp
jecxz
add
aas
jb
sub
test
xlat
mov
mov
cmps
ins
retf
bound
int3
cmps
sub
lods
or
push
sbb
dec
ins
imul
mov
mov
ret
fs
cld
and
fwait
or
cld
push
pop
cwde
jbe
jno
das
cs
pushf
xchg
dec
out
mov
jp
jno
mov
pop
adc
adc
test
sub
mov
lods
cmp
pop
mov
fnstsw
or
test
popa
repz
and
inc
arpl
call
sti
cmp
or
jmp
sbb
pop
or
jmp
dec
std
imul
mov
in
sub
push
lods
push
xor
jg
add
mov
idiv
adc
sub
pop
sbb
cmp
dec
dec
xor
inc
movs
sub
jb
inc
(bad)
jnp
adc
std
pop
cmp
test
test
push
xchg
xchg
inc
sbb
ss
call
arpl
sub
movs
mov
test
add
jnp
clc
xchg
cmp
add
in
pusha
jg
push
ins
imul
pusha
mov
xor
aaa
rcl
jne
mov
cmp
nop
xor
in
jl
in
in
jns
sbb
cmps
mov
mov
(bad)
add
xchg
inc
mov
mov
pop
call
add
out
inc
pop
ins
in
push
pop
jo
movs
lea
push
fadd
addr16
neg
mov
in
mov
mov
stc
in
pop
jne
add
sti
sub
inc
add
leave
sbb
(bad)
mov
xor
mov
dec
inc
(bad)
js
retf
and
sub
mov
nop
mov
cmps
stc
nop
outs
leave
fcmovnb
xchg
scas
push
push
xchg
int3
jmp
shl
xor
inc
mov
retf
test
and
cs
mov
ins
or
cwde
dec
les
icebp
leave
jp
push
(bad)
sub
in
fsubr
jl
xlat
in
call
pop
data16
push
sub
aas
in
add
popa
test
sbb
xchg
mov
stos
add
add
mov
test
xchg
mov
les
pop
nop
les
ins
or
movs
sub
adc
rol
push
jbe
fistp
pop
fisttp
xchg
push
xor
in
push
hlt
int3
mov
or
xchg
mov
xchg
pop
xor
aaa
xor
iret
cmp
push
mov
jns
test
pop
xor
mov
cmp
div
imul
inc
cmc
data16
push
inc
push
shl
push
jbe
and
and
mov
or
cmp
sti
push
cmp
sbb
sub
daa
adc
jp
stos
int
push
in
jmp
xchg
add
lods
and
xor
inc
sub
(bad)
imul
aam
ret
xchg
mov
inc
lahf
pushf
scas
add
rol
aas
test
shl
push
mov
scas
xchg
jo
frstor
dec
mov
mov
adc
jecxz
xchg
mov
mov
add
push
pop
fidivr
sub
addr16
xchg
xor
imul
repnz
sub
(bad)
sbb
pop
cmp
enter
daa
lds
jbe
lods
mov
dec
mov
xchg
xor
push
push
or
clc
clc
daa
call
popa
test
sbb
push
jmp
push
mov
iret
and
push
inc
loope
xchg
inc
mov
jmp
out
xchg
fcom
aaa
(bad)
int
mov
pop
iret
addr16
daa
leave
mov
loopne
mov
xchg
fs
add
into
add
and
int3
mov
pop
jle
es
sbb
imul
fnstsw
fist
or
push
or
cli
cmp
sbb
in
xchg
push
mov
xor
pusha
imul
add
inc
mov
call
jb
fldz
fild
add
ficom
out
js
fdiv
adc
mov
lock
xor
adc
xchg
cmp
or
and
test
nop
scas
jns
mov
push
xchg
and
lods
jbe
icebp
add
mov
jg
or
pop
ds
pop
je
pcmpgtb
in
imul
addr16
into
mov
aaa
in
cmps
fwait
inc
jno
inc
sar
add
add
ret
iret
mov
stos
adc
push
es
pop
test
fnsave
(bad)
xchg
xchg
xor
xchg
fisttp
retf
mov
scas
out
mov
fcomp
outs
test
xor
and
pop
push
adc
dec
call
inc
aad
mov
dec
scas
movs
and
and
cmp
xchg
xchg
scas
nop
lahf
mov
add
scas
or
and
sub
sbb
ins
xor
and
push
ret
sti
cmps
mov
adc
dec
movs
out
movs
xor
test
dec
pop
cmp
fs
add
ins
xchg
jp
and
push
xor
mov
adc
rcr
out
pop
sub
mov
jns
leave
mov
push
fld
adc
xor
sub
adc
mov
and
enter
xchg
adc
scas
inc
cmp
jns
dec
push
ins
adc
mov
and
imul
loopne
inc
push
pop
inc
jns
psubusb
pusha
pop
xor
adc
pushf
push
sub
mov
test
jb
ds
pop
pop
adc
push
fsub
mov
mov
ja
(bad)
stos
ficom
je
es
dec
sbb
pop
mov
jge
cmp
jecxz
cs
in
js
cmps
xchg
pop
retf
sub
jbe
fmul
mov
sti
arpl
xor
ins
mov
cwde
rol
and
mov
jae
mov
jmp
inc
scas
push
jle
push
cmp
dec
add
dec
cmps
pop
xchg
sahf
(bad)
clc
xchg
pop
cmp
pop
xchg
lea
je
mov
pushf
stos
nop
sub
mov
push
test
xchg
push
adc
iret
adc
dec
js
icebp
leave
cwde
mov
(bad)
rcl
push
xchg
ds
sbb
sub
out
shr
cmp
ret
pusha
sbb
mov
retf
int
sar
sbb
mov
xchg
xchg
inc
mov
sub
fimul
mov
push
out
adc
je
pop
fwait
mov
scas
push
pop
mov
(bad)
jle
loopne
into
sub
adc
sar
jge
or
sbb
fldcw
push
adc
push
push
mov
data16
pop
stc
inc
leave
stos
xchg
and
sub
cli
sbb
and
xchg
dec
cmp
ins
adc
pop
fs
stos
test
mov
(bad)
push
fst
jae
inc
cmc
pop
fild
gs
loop
ins
retf
fidivr
daa
jae
mov
pop
jnp
inc
or
and
mov
aad
cmps
das
pop
loope
push
mov
stos
and
arpl
jge
sar
mov
pop
jmp
scas
xor
out
mov
sbb
ins
cdq
loope
ss
or
outs
cli
(bad)
sbb
sbb
ror
les
icebp
mov
das
jp
aam
out
ror
clc
pop
rol
pusha
jae
xchg
pusha
sbb
movs
sbb
imul
push
push
or
sbb
ja
rcr
or
mov
xchg
mov
dec
jge
xchg
scas
adc
push
fsub
inc
out
cmps
pop
xchg
sbb
cmc
in
pusha
out
div
pushf
cmps
(bad)
fidiv
inc
pop
mov
std
mov
sub
cmp
lods
sub
dec
xor
mov
or
sub
cmp
cli
popf
push
lock
sub
xchg
sub
jge
push
gs
test
xchg
jbe
lea
mov
(bad)
xchg
adc
push
cmps
or
sub
inc
mul
jl
lea
pop
dec
daa
lea
add
mov
add
add
cwde
repnz
test
cmc
jl
pop
mov
or
xor
cwde
xchg
jg
cmps
dec
lods
out
icebp
jmp
dec
sar
inc
dec
out
out
and
div
jle
cmps
leave
enter
jl
(bad)
call
(bad)
push
stc
retf
leave
ja
mov
dec
and
cdq
adc
imul
inc
mov
xor
jecxz
xchg
ds
dec
cmp
rol
adc
or
out
push
int3
and
in
test
in
(bad)
cmc
dec
scas
cmc
imul
cmp
(bad)
(bad)
jnp
shr
out
mov
nop
(bad)
mov
retf
push
pushf
mov
test
cmp
dec
dec
adc
in
dec
sbb
sti
and
jae
int
ret
xor
ds
jns
pusha
jmp
inc
test
sub
mov
add
dec
ins
popa
mov
xor
into
imul
ret
pop
or
cwde
mov
cdq
test
arpl
rcr
hlt
fcmove
mov
add
mov
ss
xchg
in
pushf
jae
pop
das
push
imul
js
cmps
popa
sub
mov
sbb
dec
dec
pop
dec
shl
sub
out
jmp
push
xchg
xchg
mov
or
mov
mov
fbld
or
push
mov
fstp
cmp
in
arpl
test
mov
lock
and
(bad)
xor
mov
pop
add
bound
inc
lahf
and
mov
ror
(bad)
mov
mov
push
test
mov
mov
add
jecxz
(bad)
mov
(bad)
jns
out
jnp
inc
pop
fisttp
ds
lea
ret
push
and
call
aam
lods
shl
sub
mov
arpl
mov
mov
(bad)
cmp
int3
push
sub
data16
push
pop
xchg
mov
inc
ja
(bad)
jp
retf
cmc
jo
mov
lahf
int
sub
call
push
test
pop
scas
xor
movs
xor
mov
ret
cli
ror
ss
fnstsw
xchg
daa
js
lahf
pop
es
mov
cmps
pop
sbb
data16
push
out
dec
in
mov
add
iret
sbb
and
test
mov
scas
jg
out
inc
or
adc
fldenv
sbb
cmp
sbb
ret
sbb
or
imul
jbe
mov
inc
inc
adc
outs
aaa
push
push
sbb
rol
out
xchg
adc
shr
and
jge
dec
jo
or
add
or
clc
repz
cs
aam
and
cdq
xchg
ret
and
outs
jnp
pop
mov
nop
dec
cmp
js
adc
stc
mov
pop
loop
mov
push
jmp
adc
aaa
cmp
popf
out
sbb
mov
push
dec
or
leave
movs
lock
imul
loopne
loopne
add
out
xor
test
aad
mov
pop
les
push
outs
cmp
or
pop
inc
and
fbld
retf
mov
cmps
sbb
push
or
mov
adc
xlat
mov
push
jns
(bad)
mov
push
test
add
aam
fbld
xor
cmp
scas
mov
gs
add
push
xchg
pop
cmp
sahf
rol
ror
mov
or
jl
test
je
fmul
push
mov
push
sub
mov
out
pop
stos
xchg
shl
retf
mov
enter
shl
mov
sar
cli
push
cmp
and
jmp
sub
cmovae
pusha
out
rol
push
fild
ret
(bad)
int3
popf
sub
std
test
jp
sub
aad
scas
xor
ret
out
xchg
dec
lock
lock
pop
jae
sbb
ret
add
lock
fwait
js
pushf
(bad)
mov
jge
xchg
outs
or
sub
or
adc
loop
in
scas
mov
js
push
mov
stos
out
shl
cmp
cmp
pop
mov
fidivr
pop
adc
call
dec
pop
test
clc
inc
sub
test
pop
lods
pop
jae
fst
arpl
mov
movs
sub
and
mov
stos
pop
push
nop
popa
inc
adc
mov
aad
mov
cmovns
jle
jmp
popa
sbb
pop
dec
pop
or
cmpps
fst
adc
jmp
test
mov
aam
dec
sub
sbb
hlt
adc
repz
sbb
outs
and
sub
xchg
jp
outs
and
(bad)
out
push
mov
fs
stc
xchg
popf
mov
aad
or
das
mov
xchg
fild
into
sub
or
fcmovb
popf
sbb
xor
or
cmp
pop
mov
jnp
out
sub
push
cmps
adc
loopne
aam
arpl
mov
push
rol
je
jp
hlt
xor
xchg
adc
(bad)
mov
adc
push
jg
cdq
cmp
pop
cmp
ret
adc
fcomp
add
aaa
cmp
sub
mov
outs
popa
shl
sub
sub
movs
test
mov
fidiv
les
sub
jp
cmps
ss
add
push
dec
mov
int
pop
xor
push
push
add
xchg
aas
pop
sub
push
jp
xor
mov
sbb
cdq
sub
cmps
icebp
pop
es
jmp
loop
shr
dec
test
out
or
or
add
adc
add
ins
in
xor
mov
sbb
inc
fdivr
mov
xchg
inc
pop
call
sub
cwde
xor
popf
stos
xchg
jmp
test
(bad)
jp
out
mov
rol
cmps
popf
cwde
mov
push
dec
out
popa
fucom
movs
mov
and
clc
cmps
retf
les
outs
pop
xchg
imul
mov
xor
sbb
out
cmp
enter
jl
inc
jmp
sub
outs
jle
or
mov
ds
jle
xchg
(bad)
std
jecxz
addr16
jmp
repnz
aam
call
aad
je
int
jge
fldcw
jp
das
in
(bad)
ss
clc
cmps
mov
xchg
jnp
and
rcr
imul
lods
pop
bound
bound
pop
fistp
test
cmps
pop
sbb
mov
rol
(bad)
retf
arpl
outs
in
jl
cld
or
ss
(bad)
loopne
shl
push
je
sub
repz
push
jne
mov
add
push
sahf
mov
add
mov
test
cmps
(bad)
push
pop
inc
mov
sub
in
int3
loop
push
ss
ins
es
add
jle
int
jmp
outs
pop
pop
pop
jb
push
push
mov
and
in
mov
movs
inc
les
hlt
jae
in
pusha
(bad)
imul
cs
sbb
xchg
and
lahf
ffree
sbb
sub
bound
ja
inc
loopne
cmc
add
gs
mov
jge
mov
in
xchg
fnsave
clc
mov
add
xchg
xchg
imul
mov
fcmove
or
jmp
jmp
push
dec
jecxz
xchg
jo
cmps
loop
lods
jno
dec
jo
out
push
pushf
test
pop
cs
xchg
push
je
mov
jb
int
add
not
lahf
push
stos
sbb
cmps
jle
sbb
je
jnp
jnp
sub
lahf
or
neg
ret
daa
cmps
mov
ins
mov
pop
inc
sub
lods
sub
lahf
fcomi
mov
(bad)
popa
call
les
mov
jbe
push
pop
push
mov
dec
inc
xor
or
xor
jbe
mov
gs
and
mov
test
mov
rcr
dec
sub
sub
sub
dec
pop
mov
and
pop
or
js
icebp
and
adc
adc
shr
push
out
shr
loopne
xor
(bad)
icebp
sti
ret
ret
test
mov
fs
xchg
repz
fcmovb
inc
mov
cmp
daa
jnp
mov
add
xor
inc
cwde
mov
cmps
xor
mov
jnp
adc
add
(bad)
xor
cmp
inc
pop
and
pop
(bad)
(bad)
push
test
mov
cmps
lds
(bad)
and
mov
mov
and
cmp
dec
cdq
fild
pop
sub
push
xor
jmp
stos
or
fist
dec
jl
ret
shr
xchg
je
rcr
pop
scas
lods
jnp
dec
sbb
pop
pusha
dec
stos
cmps
fistp
mov
xchg
pop
call
lods
dec
sahf
iret
out
cmp
aaa
aam
stc
mov
mov
cmp
fcomp
sbb
jle
mov
jbe
mov
jmp
std
retf
mul
outs
iret
scas
pop
fnstcw
pop
jb
movs
mov
push
jg
push
xchg
push
inc
ror
mov
call
or
enter
push
add
div
in
cmc
sub
and
clc
xchg
call
add
fild
inc
pop
dec
jle
adc
push
ds
lock
mov
mov
mov
add
dec
addr16
push
push
call
mov
fstp
adc
data16
mov
lods
mov
retf
outs
xor
imul
into
inc
fst
inc
xor
cmp
push
inc
test
sbb
iret
(bad)
mov
xchg
ret
and
add
inc
push
outs
ja
push
sbb
loopne
bound
in
sbb
clc
or
in
mov
stos
mov
mov
or
int3
add
sbb
std
fstp
and
jo
adc
sbb
nop
push
aaa
fimul
mov
jno
mov
mov
(bad)
jo
jns
imul
cli
sbb
xchg
xor
cmp
sub
xor
fstp
cmp
cmp
pop
xchg
fld
cmc
inc
movs
xchg
pop
fisub
mov
pushf
push
xor
xor
xchg
adc
mov
sub
pop
xor
pop
adc
adc
mov
mov
(bad)
push
icebp
dec
pop
adc
jmp
push
hlt
cli
and
inc
adc
mov
lods
jge
shl
movs
jmp
jl
mov
pop
adc
es
cld
ja
stos
iret
ja
mov
out
jge
fcmovbe
and
into
lock
pop
mov
pop
xchg
and
mov
and
int
(bad)
(bad)
aam
sbb
dec
pop
push
push
and
ficomp
xor
mov
jle
push
mov
shr
movs
sub
mov
popa
push
pop
adc
pop
int3
adc
or
(bad)
xchg
adc
call
mov
mov
stos
fs
push
fbstp
popf
cmp
ret
cdq
inc
sti
sub
pop
cmps
in
xor
mov
xchg
inc
mov
das
and
jl
jne
mov
inc
cli
outs
push
popa
cmp
dec
pop
lock
ins
pop
imul
mov
dec
and
push
jmp
xchg
dec
fistp
in
dec
and
sbb
xchg
push
mov
cmps
xchg
sti
cwde
adc
ret
xchg
addr16
sahf
and
jle
add
ins
lahf
rcl
lods
and
out
add
xchg
pop
sbb
push
adc
cmp
add
xchg
xchg
jp
jno
test
outs
pop
mov
push
pop
iret
mov
mov
pop
outs
mov
ja
cmps
out
into
pop
lods
aaa
mov
les
retf
imul
int3
ds
rol
imul
jno
ins
xchg
mov
cmp
vmovaps
mov
imul
imul
into
xchg
(bad)
fadd
inc
(bad)
add
add
xor
sar
ret
adc
cmps
daa
daa
das
inc
and
daa
ss
jb
enter
arpl
retf
push
jle
jnp
xchg
(bad)
jno
popf
enter
ins
xor
inc
pop
or
mov
jge
xor
jns
fmul
pop
mov
in
scas
ret
call
or
test
pop
push
shl
and
sub
mov
xor
das
mov
or
mov
or
arpl
std
pop
std
adc
loope
cwde
mov
add
in
into
pop
les
mov
enter
mov
mov
jns
jmp
xchg
sbb
fidivr
addr16
jmp
sar
cli
loop
jecxz
repz
mov
xor
leave
adc
outs
leave
xchg
mov
lods
inc
xor
retf
int
hlt
out
sbb
gs
cld
inc
mov
mov
xchg
sub
jbe
mov
xchg
fcomp
int3
pop
adc
scas
cmp
mov
lods
dec
in
(bad)
sub
cmp
push
aad
std
adc
or
adc
mov
sub
mov
xchg
repnz
inc
ret
push
je
cmp
cmp
enter
and
jns
adc
lahf
aad
cwde
lods
dec
in
dec
fcom
dec
jge
pop
in
add
test
fcom
cmp
imul
int3
or
fs
add
pop
pop
xor
xchg
mov
shl
xchg
inc
sbb
es
pop
in
add
sti
cmp
inc
(bad)
sub
pop
push
ss
or
inc
xlat
mov
xchg
pop
cmc
(bad)
cld
inc
jbe
xchg
push
dec
pop
loope
pop
cdq
dec
xor
cmps
outs
pushf
sub
adc
nop
call
cmp
or
movs
cmp
loope
sti
xlat
int3
cmp
jns
jb
inc
call
repz
adc
adc
xchg
mov
push
pop
(bad)
xchg
jae
sbb
(bad)
ins
mov
jmp
cmps
stos
xor
cmps
not
xchg
pop
and
xchg
dec
mov
mov
or
jns
js
(bad)
mov
push
stc
cmp
push
pop
sahf
add
or
cdq
je
jmp
push
neg
aad
cmp
loope
outs
(bad)
sti
push
inc
xor
xchg
nop
xlat
pop
pop
mov
cwde
sbb
call
jecxz
call
cmp
pop
and
mov
ror
int3
push
test
xchg
test
mov
(bad)
fld
inc
mov
jmp
(bad)
mov
cmp
mov
cmp
(bad)
sub
(bad)
push
push
push
ret
ss
aaa
lahf
ror
in
sbb
rcl
(bad)
fs
dec
(bad)
rcr
inc
cmp
and
inc
aam
mov
in
push
cdq
ins
sbb
cmp
cdq
lods
fisubr
mul
push
pcmpgtb
pop
into
sbb
fld
xchg
(bad)
pop
jae
cmp
retf
popf
jns
imul
xor
mov
xchg
sbb
cs
xchg
mov
std
sbb
xor
push
es
out
shr
outs
sub
jbe
mov
fxch
ins
sti
inc
sbb
mov
and
imul
out
xchg
pop
out
xor
je
mov
rol
sub
sti
les
arpl
(bad)
fmul
adc
mov
int3
data16
repz
cdq
sbb
or
or
cmp
repz
push
sbb
sbb
xchg
pop
xor
out
call
jne
sar
sub
out
ja
dec
jp
push
ds
neg
push
xchg
cmp
stc
loopne
pusha
cmp
jnp
or
into
sbb
push
cmc
cld
shl
ja
push
call
jecxz
inc
aam
inc
mov
bound
popf
sbb
xchg
jnp
call
sbb
loopne
push
and
gs
loopne
fmul
and
dec
ja
cmp
jno
xor
mov
or
pushf
(bad)
mov
inc
sti
fld
jg
add
ficomp
cdq
ss
scas
mov
jmp
dec
xchg
dec
test
retf
cs
aad
dec
add
loope
mov
and
js
popa
sub
fist
mov
cwde
pushf
(bad)
mov
pop
push
jmp
mov
sbb
jno
add
add
dec
mov
mov
stos
and
mov
retf
or
adc
sbb
pop
scas
dec
mov
or
jmp
test
push
jecxz
adc
jp
dec
sbb
cmps
das
lahf
imul
cli
pushf
jno
std
cmps
lods
cmp
jo
adc
pop
mov
and
and
outs
xchg
cdq
mov
ins
(bad)
stc
call
data16
push
in
xor
cli
jmp
fldcw
pusha
mov
rol
and
scas
sub
pushf
mov
and
xor
dec
dec
or
aad
adc
push
add
popa
leave
ret
out
retf
sbb
mov
and
xlat
and
cmp
adc
popa
push
dec
sete
and
adc
addr16
sub
dec
xchg
xchg
push
pop
mov
xchg
sbb
inc
imul
mov
dec
iret
jbe
in
loopne
fadd
rcr
cmp
xor
pop
call
push
stc
mov
bound
ret
cmps
or
mov
call
push
jne
mov
xchg
arpl
pop
cmp
pop
fstp
jp
sub
outs
ins
das
push
into
repnz
loopne
add
jmp
movs
adc
ins
dec
sbb
cmp
push
mov
and
ins
add
mov
and
cmp
mov
push
shl
xchg
int
jns
adc
ins
cmps
aaa
jno
imul
push
movs
push
das
push
loop
in
jmp
mov
loopne
jnp
adc
popa
pop
sbb
stos
xor
xlat
mov
and
jno
mov
pop
mov
dec
xchg
mov
jmp
je
sub
cmp
pop
retf
or
pop
ds
adc
dec
sbb
or
lock
fisttp
sbb
sub
jnp
(bad)
xrelease
sub
xor
push
dec
out
cmp
pop
nop/reserved
dec
add
jle
mov
in
pop
enterw
jnp
loop
dec
or
rol
xchg
inc
ins
arpl
push
or
dec
rol
js
push
pop
xchg
jns
sbb
(bad)
ret
and
sbb
dec
je
pop
pop
cmp
ins
or
push
xchg
cmps
repnz
pop
xchg
retf
cmp
fidiv
mov
ret
adc
aaa
test
pop
push
mov
shl
jg
les
cmps
retf
xchg
imul
mov
dec
push
rcr
aaa
mov
repnz
cld
nop
sahf
std
std
or
mov
xchg
test
call
xchg
sbb
sub
add
stc
and
scas
or
(bad)
adc
test
test
and
shr
jl
mov
bound
ror
inc
pop
or
fwait
enter
int
repz
mov
or
shl
fistp
mov
ja
ret
add
(bad)
aas
into
(bad)
popf
or
fdivr
mov
ret
xchg
out
mov
test
setg
enter
ret
add
pop
xchg
xchg
jmp
outs
jns
sahf
leave
or
pop
stc
sar
or
push
adc
dec
es
out
sbb
movs
ret
or
add
add
xor
cmps
(bad)
nop
cmps
xchg
xchg
shl
add
dec
icebp
or
and
push
pusha
sahf
repz
sub
or
ins
or
and
cdq
test
data16
test
int3
clc
jo
mov
ss
addr16
xchg
and
outs
aad
std
out
add
adc
loopne
(bad)
push
add
pushf
movs
je
inc
outs
xor
mov
sti
push
cmp
ins
jns
inc
pusha
pushf
sbb
and
(bad)
xor
das
outs
sub
ins
xor
add
xlat
or
jg
cs
jmp
imul
gs
push
mov
rol
clc
pushf
outs
push
std
aaa
adc
jmp
mov
cmp
xchg
mov
mov
jmp
cdq
sub
cdq
clc
out
jo
es
imul
add
cli
je
je
push
addr16
fidiv
(bad)
jmp
or
pop
push
or
inc
inc
lahf
daa
push
adc
sub
stos
dec
hlt
pop
ret
mov
mov
dec
sub
popf
outs
mov
repnz
xchg
push
push
sbb
jb
sub
jb
outs
sbb
test
mov
mov
(bad)
in
fimul
lahf
mov
ds
retf
loop
stos
popa
loope
sub
and
cwde
sbb
cmp
(bad)
cmps
jmp
pusha
mov
inc
(bad)
mov
js
sub
test
fsub
jecxz
sbb
aam
xor
pop
pop
mov
jb
xor
icebp
stc
in
sahf
jns
xchg
lea
cmc
pop
rcr
pop
xchg
mov
pop
inc
out
mov
push
inc
sub
jbe
mov
shl
mov
test
out
ins
cmp
cdq
jo
(bad)
call
es
pushf
sbb
dec
mov
mov
nop
cmp
scas
clc
or
or
pop
adc
pop
cmp
jl
dec
pop
sub
fadd
(bad)
push
sahf
ret
xchg
out
sbb
imul
jns
loope
mov
push
xlat
repnz
and
into
lods
enter
retf
sub
xor
lahf
cmp
sbb
dec
and
push
in
cmp
dec
mov
push
(bad)
dec
clc
adc
dec
push
inc
push
sub
cmp
push
and
div
sbb
push
add
push
loopne
mov
stc
dec
popa
jae
jl
test
xor
iret
push
mov
xor
or
sbb
push
(bad)
cmp
pop
push
inc
sub
xor
jne
rol
out
add
ins
jne
adc
add
out
push
test
rcr
out
sbb
jnp
xor
cld
jns
jecxz
stos
or
sub
jmp
sar
sub
sub
aaa
mov
rol
lea
xchg
cmps
outs
mov
add
test
lods
imul
cli
(bad)
mov
sub
in
ins
xchg
retf
xchg
xchg
xchg
sahf
inc
sub
mov
retf
lods
lock
jae
mov
and
dec
pop
fisubr
pushf
pusha
jbe
rcr
out
cwde
test
stos
jp
or
mov
dec
shl
iret
jle
push
sbb
outs
mov
jnp
ins
xchg
nop
dec
mov
xchg
jecxz
adc
dec
fdiv
stos
adc
scas
mov
xrelease
jg
in
rcr
jle
add
ret
test
daa
fdivr
int
mov
dec
pop
inc
fidivr
dec
lea
mov
cld
int3
mov
pop
iret
je
xor
jl
inc
imul
mov
add
jmp
imul
cmp
cs
xchg
frstor
sbb
imul
xchg
outs
das
push
xchg
add
jne
outs
pop
pop
push
mov
mov
popa
mov
add
jecxz
xchg
pop
(bad)
push
mov
xchg
fstp
mov
std
or
jnp
out
jns
out
cld
jbe
outs
mov
xchg
or
jne
push
adc
fdiv
mov
add
shl
mov
mov
jnp
sbb
pop
mov
mov
mov
retf
call
pop
dec
push
(bad)
sbb
mov
call
or
fsub
dec
jno
scas
and
les
push
addr16
rcr
adc
fadd
sub
stc
jle
add
push
aad
test
stc
push
xchg
xchg
mov
sar
push
dec
jbe
sbb
cmp
or
mov
jmp
xchg
fwait
mov
(bad)
js
xchg
mov
mov
cli
sbb
in
scas
dec
dec
cmc
inc
cli
popf
test
add
cld
pop
sub
mov
pop
adc
mov
hlt
movs
xor
fisttp
scas
mov
iret
pop
es
dec
jecxz
mov
cdq
cmc
jne
icebp
push
stc
xchg
mov
repnz
adc
mov
out
adc
sbb
out
push
test
mov
aaa
jns
mov
test
cmp
mov
adc
outs
sub
scas
std
sub
bound
icebp
test
jg
push
sbb
xor
sub
ror
ret
inc
scas
mov
pop
push
push
out
dec
int3
xchg
cmp
repnz
cwde
pop
fld
mov
dec
lock
fnsave
call
xlat
xor
mov
jecxz
sub
ss
xchg
inc
mov
jno
fsub
push
jle
fistp
sub
jne
sbb
iret
les
mov
icebp
mov
pop
push
mul
in
jb
pop
sbb
mov
pop
into
xor
push
sbb
icebp
jbe
pop
bound
xchg
push
loope
in
or
les
and
ins
pop
in
pop
sbb
sbb
xor
add
or
test
pop
adc
rcr
ret
ret
movs
test
test
bound
cmc
sahf
or
and
cwde
mov
inc
or
add
test
sbb
jge
add
cmp
pop
mov
test
test
mov
push
xor
jae
pop
push
jl
cmp
ins
test
(bad)
jmp
add
ds
adc
sub
ds
lods
movs
ror
xchg
push
ror
ficom
or
outs
xor
in
les
inc
cmovno
inc
clc
je
sbb
mov
stc
into
outs
xchg
xor
je
das
sahf
cwde
cmp
pop
mov
hlt
adc
mov
fwait
jg
stos
mov
daa
out
ins
aam
dec
sbb
test
push
test
cwde
test
int
xor
mov
pop
mov
dec
inc
retf
ret
sbb
in
pushf
repz
xor
inc
and
mov
jmp
inc
jb
fcomp
inc
push
stos
sbb
jno
sub
jno
int3
or
pop
in
js
loop
test
jg
mov
movs
and
mov
ins
mov
lods
xchg
inc
psllw
aaa
xor
add
popf
aaa
(bad)
shl
pop
es
ds
inc
shl
lds
pop
push
sub
call
test
loop
xor
cmp
inc
popa
cmps
xchg
xor
jo
push
gs
test
mov
mov
rcl
les
xchg
push
jle
outs
xchg
mov
mov
jnp
jecxz
(bad)
(bad)
in
les
inc
sbb
add
inc
cmp
pop
cmp
add
out
test
jmp
repz
inc
test
mov
fdivr
retf
enter
sub
std
and
clc
mov
cli
loopne
mov
test
or
addr16
sub
enter
inc
cmp
div
adc
ins
or
sbb
les
lds
and
xchg
cs
xchg
shl
sbb
inc
jmp
cmp
mov
push
dec
inc
inc
movs
sub
inc
sar
lock
pop
(bad)
inc
push
push
sbb
outs
mov
std
sar
dec
aad
sti
add
and
int3
mov
inc
cmp
mov
test
test
test
je
cmps
clc
sbb
push
retf
mov
sub
adc
inc
sub
lahf
sub
(bad)
das
fsubr
js
fisubr
sub
push
push
cmps
and
out
mov
pop
popa
or
adc
pushf
inc
cld
and
dec
loopne
jne
adc
repnz
call
mov
(bad)
xor
sbb
sub
out
pop
les
rol
aam
lahf
cmp
retf
xchg
inc
out
les
sub
adc
inc
ret
push
scas
and
rcr
pop
cmp
adc
(bad)
ins
sbb
cld
inc
mov
sub
adc
gs
ins
popa
(bad)
in
retf
aas
lahf
xchg
clc
cmp
fdiv
test
test
js
mov
ja
adc
jo
iret
mov
jne
pop
mov
mov
inc
sbb
add
mov
fdivrp
push
call
xor
push
mov
mov
outs
pop
cld
fwait
or
stos
dec
pop
scas
gs
xchg
cmps
xchg
cdq
lahf
(bad)
movs
cmps
sub
mov
retf
and
dec
sbb
stos
pop
mov
out
test
pop
scas
scas
push
sub
or
nop
shl
int3
call
lds
cmp
popf
and
pop
mov
xchg
xchg
les
aam
lods
mov
ret
(bad)
fst
loope
cmp
and
xlat
pop
push
icebp
push
cld
and
movs
xchg
scas
add
imul
ret
or
mov
sahf
or
xlat
fnsave
out
or
and
or
ds
repnz
mov
fwait
and
mov
idiv
jle
or
cmp
lods
pop
lea
cdq
rcl
das
es
dec
sub
fbstp
shl
call
fild
xlat
aas
cmp
sub
add
std
mov
xor
sub
adc
mov
loop
int3
test
xchg
add
jns
(bad)
sahf
les
sbb
popf
movs
jmp
and
(bad)
fsub
pusha
sub
inc
pop
scas
(bad)
add
or
push
out
inc
inc
cmp
add
mov
into
movs
mov
or
mov
ret
outs
imul
test
or
fidiv
add
push
adc
xor
call
(bad)
call
jae
loop
fimul
sbb
lods
outs
xor
jl
lods
fwait
and
cmp
sar
xchg
rep
push
(bad)
clc
add
(bad)
(bad)
out
cmp
cmc
xchg
daa
lods
movs
xor
pop
pop
sub
mov
push
std
aam
out
aam
jmp
jnp
mov
add
dec
repz
xchg
ins
cs
mov
xor
in
fld
cmps
xchg
jecxz
dec
adc
jbe
push
push
iret
xchg
stos
int3
mov
aam
pushf
cmps
xchg
pop
push
lahf
aaa
and
jg
adc
mov
push
pxor
sbb
ss
pop
jo
adc
jecxz
sub
out
adc
sub
mov
mov
inc
xor
call
mov
inc
mov
mov
pop
stos
lods
daa
or
add
add
xor
xor
pop
clc
adc
(bad)
(bad)
sub
add
retf
mov
sti
std
jnp
std
sbb
sbb
ds
pop
mov
cwde
sub
mov
ds
stos
mov
mov
dec
and
ja
pop
push
into
daa
(bad)
(bad)
loopne
mov
mov
loope
xor
imul
mov
jmp
or
push
mov
in
add
nop
sub
or
adc
(bad)
retf
rcl
movs
jbe
pushf
sub
fisub
mov
cmps
sbb
jnp
adc
loope
jne
jp
mov
jne
mov
gs
inc
aad
popf
sub
arpl
pop
in
retf
lds
scas
mov
adc
or
push
sub
mov
daa
in
jns
es
xchg
in
add
(bad)
popa
add
nop
adc
xor
mov
call
aas
mov
xor
fwait
xchg
or
xchg
rol
pop
push
repnz
out
shr
cmps
ja
mov
(bad)
mov
stos
hlt
rcl
test
js
jl
or
pop
push
es
jno
push
test
mov
sub
xchg
dec
dec
mov
loope
inc
test
and
or
ret
pusha
in
or
enter
retf
imul
add
clc
cmp
jo
jle
adc
out
jle
adc
and
dec
cs
push
loopne
pop
xchg
cmp
cli
push
sar
jmp
and
hlt
(bad)
mov
xchg
mov
push
dec
pop
std
les
daa
mul
ret
and
cmp
add
test
ror
add
add
mov
add
jg
add
sub
push
(bad)
movs
add
mov
pop
movs
scas
lods
xchg
lahf
and
int3
icebp
mov
or
arpl
jmp
(bad)
adc
sbb
in
pop
cli
shl
lods
jne
cs
inc
jg
sub
dec
dec
ret
nop
sub
daa
add
mov
sti
sub
loopne
pop
cmp
sub
mov
je
mov
sbb
aam
push
shr
mov
cld
rcl
xor
ds
arpl
call
repz
push
int3
div
inc
adc
xor
sub
clc
cmp
pop
inc
adc
sti
adc
js
sub
add
retf
dec
xchg
dec
and
lock
sub
das
inc
ins
not
jge
call
jg
and
sbb
test
inc
repz
fadd
add
js
adc
dec
pop
pop
imul
cmp
leave
test
vmovapd
ins
inc
lea
cwde
cmps
mov
jo
and
dec
inc
pop
leave
pop
in
out
idiv
jl
or
push
jle
add
je
ret
pop
xor
sar
fild
jo
(bad)
mov
push
test
push
push
xchg
push
ss
retf
push
fwait
pop
cmps
jp
ret
lock
cmp
xchg
mov
dec
aas
stos
cmp
xlat
sub
mov
and
or
mov
and
cmp
and
ret
sahf
mov
adc
jnp
jo
or
sbb
add
and
xchg
xor
lock
mov
es
imul
inc
jp
mov
jo
pop
adc
add
mov
jmp
outs
mov
fwait
cli
out
sub
adc
ficomp
or
aad
loopne
push
xchg
mov
lods
push
lock
or
or
or
outs
push
pop
push
add
mov
xor
xchg
cmp
mov
fidiv
jg
adc
mov
aad
lahf
aam
mov
ror
(bad)
stos
pusha
sub
daa
mov
cmp
repnz
popf
fmul
lahf
pop
adc
mov
jb
add
into
add
not
pop
cmp
aad
inc
out
jb
leave
add
imul
sbb
(bad)
nop
inc
inc
cmp
mov
mov
jge
adc
mov
jmp
mov
ins
mov
sub
cmp
mov
daa
xchg
jg
mov
ja
jae
xchg
or
sub
inc
popf
and
pop
arpl
scas
and
cmc
inc
(bad)
hlt
jmp
outs
mov
mov
mov
in
cmps
js
xchg
or
lahf
repz
mov
sub
hlt
cdq
xor
push
test
mov
inc
xchg
sbb
retf
call
js
pusha
and
lods
and
lods
pop
and
adc
xchg
xor
(bad)
ja
ss
popf
xchg
dec
pop
jl
or
xor
xchg
cmp
push
imul
dec
xor
aam
mov
retf
sub
mov
mov
xchg
outs
ret
sub
mov
inc
mov
(bad)
fdivr
dec
aas
test
jne
in
jmp
bound
or
pop
ja
mov
mov
dec
rol
jns
xchg
pop
movs
and
std
retf
div
jae
push
imul
push
xor
jb
in
fst
pop
repz
aas
repnz
jbe
push
lahf
xchg
cmp
idiv
add
mov
ja
lds
js
push
mov
xor
mov
arpl
sbb
(bad)
std
jbe
jle
jnp
sbb
jnp
imul
mov
or
cmp
cmps
inc
jecxz
jae
inc
out
cli
sbb
sahf
adc
mov
adc
in
sub
mov
mov
pop
inc
fs
into
popa
les
loop
pop
rcr
cmp
and
push
sub
daa
xchg
rcl
add
pop
js
aas
adc
fwait
jle
jae
push
pop
xor
clc
xor
jl
ss
stos
jle
test
and
std
fsub
ss
sub
cmp
cmp
push
dec
xor
sub
dec
dec
cmc
cmp
lock
push
shl
and
sub
or
pop
xchg
stos
cld
stc
je
data16
pop
sbb
mov
xchg
outs
je
out
lods
es
ja
xor
mov
xor
mov
dec
jge
in
xor
mov
pop
jns
in
stos
xchg
jmp
push
es
jo
int
mov
pusha
movs
sti
retf
lahf
adc
test
movs
pop
mov
fs
adc
rcl
xor
das
dec
in
and
xchg
jle
shl
fcomp
xor
aam
sub
sar
mov
in
add
and
lods
idiv
cmp
fcom
outs
rcr
in
jle
cmp
gs
stc
xlat
into
mov
push
lock
loopne
sbb
hlt
cli
inc
jmp
inc
or
int3
int
or
pop
int
hlt
stos
cmp
ds
add
jp
shl
jns
ins
test
push
jno
das
and
aad
pop
jmp
jnp
test
mov
xor
jmp
add
push
stos
lds
push
mov
pop
jle
cmp
int3
loope
(bad)
or
imul
or
xchg
mov
sbb
mov
push
xchg
cdq
repz
(bad)
and
retf
sbb
test
jle
cmc
cmp
pop
and
ins
pop
sub
push
pushf
pop
mov
bound
mov
xchg
mov
rcr
movs
cmp
fs
movs
movs
mov
xor
jnp
enter
xor
das
push
addr16
mov
sti
cmps
lods
push
push
dec
push
ins
sar
cmp
out
mov
xchg
xchg
push
jo
sub
lods
jmp
sub
xor
jmp
imul
adc
sub
adc
push
cld
inc
pop
push
mov
xor
stc
fmul
in
cld
mov
mov
pop
inc
rol
imul
add
(bad)
mov
stos
arpl
idiv
cmc
add
mov
ins
nop
xor
ja
std
cmp
mov
add
xor
ret
mov
leave
pop
mov
adc
clc
dec
pop
rcl
sahf
fsubr
nop
mov
mov
fcomp
pop
mov
in
push
add
or
pop
sti
clc
fadd
(bad)
push
sbb
out
stos
bound
in
sub
and
jl
fild
mov
push
mov
dec
mov
aaa
inc
movs
ret
fbld
jmp
into
inc
adc
inc
mov
cmp
adc
or
sub
dec
or
mov
xchg
cmps
adc
(bad)
jbe
clc
loope
or
xlat
xchg
mov
call
jnp
jle
das
push
jl
fisttp
xchg
in
mov
cmp
or
push
ins
inc
mov
and
mov
scas
loope
movs
mov
sub
aad
test
mov
data16
jle
aam
sar
jb
imul
cdq
les
int3
mov
and
retf
cmp
sbb
mov
sbb
(bad)
inc
dec
(bad)
arpl
ss
push
shr
sar
push
scas
jg
mov
lds
imul
xchg
push
out
repz
daa
sub
add
push
jl
(bad)
aam
clc
test
sub
pushf
pushf
adc
adc
imul
inc
addr16
adc
pop
jl
jge
movs
add
cdq
sbb
es
sub
cmp
ins
dec
xor
mov
retf
ja
cmp
sbb
retf
(bad)
shr
xchg
mov
xchg
and
test
das
into
add
fs
imul
mov
cli
aam
mov
push
popf
xor
mov
mov
test
stc
popf
sbb
push
mov
out
adc
jl
nop
ins
inc
(bad)
push
cmp
outs
push
out
push
hlt
mov
xor
xor
fcom
movs
pop
xchg
dec
enter
xchg
inc
data16
mov
repz
sti
cmp
add
cmp
adc
ror
jl
cs
xor
and
pop
xchg
dec
daa
stos
imul
dec
xchg
pop
out
cld
out
ins
sar
or
mov
sbb
push
pop
jle
mov
outs
ret
mov
inc
xlat
in
sbb
add
cmp
mov
scas
sub
pop
xor
mov
add
cmp
lock
fdivr
and
inc
xlat
mov
out
ins
call
or
leave
data16
jmp
or
lock
cmp
adc
shl
cli
call
xchg
jbe
cmp
test
adc
shl
pop
mov
xor
shl
in
out
repnz
xchg
mov
and
pop
sbb
jl
push
icebp
jb
bound
and
mov
add
bound
mov
stos
stc
sahf
jp
fistp
sti
cmp
movs
or
out
push
mov
adc
aas
aad
retf
icebp
mul
mov
jecxz
cmps
in
cmp
mov
inc
cmp
ja
adc
repz
mov
inc
sub
mov
push
inc
idiv
xor
sub
(bad)
ficomp
pushf
dec
and
xor
das
pop
jb
xchg
push
sub
xchg
mov
fwait
jnp
inc
push
test
iret
int3
imul
mov
test
mov
mov
and
add
sahf
xor
aam
fld
lods
(bad)
mov
popa
push
dec
jmp
icebp
shl
out
or
mov
gs
mov
add
or
mov
cmc
mov
inc
mov
aam
(bad)
hlt
fsubr
xor
fidivr
push
movs
shr
mov
mov
pop
(bad)
mov
mov
cli
in
dec
repnz
into
inc
mov
jecxz
ficom
push
add
fscale
adc
mov
push
sbb
cmp
jb
sub
sub
jb
sahf
vmovsd
inc
movs
retf
loopne
scas
pop
push
jnp
mov
movs
(bad)
test
pop
stos
loopne
in
mov
mov
jge
mov
sub
loope
rcr
shr
dec
stos
loopne
lods
mov
cmp
fcomp
xchg
and
sub
jbe
inc
push
or
test
push
bound
aad
imul
dec
fcomp
fld
fld
loop
adc
mov
(bad)
out
mov
mov
mov
push
mov
mov
arpl
fadd
lahf
cmps
and
fadd
bound
adc
push
data16
call
out
mov
bts
jne
inc
push
cmp
imul
repnz
mov
aam
je
pop
inc
sbb
dec
test
repnz
movs
loop
retf
pop
or
pushaw
jl
jb
adc
push
cs
add
and
int
mov
inc
or
(bad)
nop
xlat
xchg
sahf
lock
shl
and
xor
cmp
(bad)
repnz
adc
dec
cld
sub
add
cmc
adc
inc
mov
inc
pop
sub
pop
push
cmps
push
inc
sar
call
aam
jecxz
div
xchg
dec
mov
pushf
mov
into
mov
jg
dec
lds
in
adc
int3
jbe
fnstenv
pop
cmp
not
lahf
(bad)
cld
mov
xchg
popf
es
adc
lods
mov
les
cli
std
mov
scas
mov
adc
out
add
(bad)
and
jae
cli
popw
shr
call
jb
ret
sbb
lods
and
call
pop
mov
mov
adc
or
dec
cmp
cmp
mov
cmp
xabort
out
out
out
mov
xchg
addr16
and
push
xor
in
or
loop
xor
push
in
add
scas
pop
pop
fbstp
dec
cmp
retf
cs
cdq
ret
xor
repz
dec
(bad)
repz
test
fadd
push
xor
inc
xlat
es
shl
es
sti
cmp
jno
add
retf
out
aad
inc
les
(bad)
push
out
fdivr
aam
and
hlt
cld
jg
fidivr
jmp
sub
add
mov
aam
stos
pop
movs
mov
mov
scas
xor
lds
scas
mov
test
xor
fwait
outs
push
jne
ja
in
data16
js
cmps
ucomiss
and
sub
cmp
pop
inc
mov
imul
adc
xor
mov
stos
repz
adc
movs
cld
sbb
std
rcl
jno
aas
adc
pop
or
xlat
lods
and
fistp
dec
and
shl
mov
add
jmp
adc
mov
out
das
or
adc
test
ins
xor
and
out
jae
xchg
xor
bound
mov
jb
mov
cmc
pop
mov
fcmovnbe
in
fsub
call
xor
sub
in
inc
push
push
repnz
cmp
cld
inc
lahf
cmc
cmp
(bad)
out
aam
sub
mov
cmovp
out
movs
sti
loop
sahf
jo
(bad)
or
in
stc
inc
dec
cmp
dec
mov
pop
push
fwait
out
pop
popa
pop
ror
mov
push
mov
(bad)
fidivr
pushf
aad
repz
push
mov
xor
xor
je
add
in
mov
sahf
mov
mov
xor
sub
shl
xchg
call
ins
push
rol
sub
cmp
or
out
cmp
or
in
daa
inc
loopne
addr16
movs
loope
jmp
xor
cmp
ffreep
mov
inc
nop
out
adc
ins
fstp
imul
mov
push
pop
jae
enter
sub
mov
xchg
call
cdq
bound
lea
jmp
imul
pop
push
and
fistp
ret
int
sub
push
cmp
or
push
mov
sub
push
sbb
repz
jg
(bad)
lock
mov
pop
mov
bound
add
ret
dec
movs
jo
inc
dec
enter
test
jmp
scas
cmp
sub
cmp
not
add
mov
scas
arpl
stos
sar
mov
(bad)
push
loopne
cmp
add
mov
or
xchg
fstp
mov
mov
sub
(bad)
sub
push
jb
loopne
sbb
xor
pop
or
lods
pushf
mov
and
adc
aad
jg
cli
xor
xchg
movs
scas
sub
dec
jge
pop
mov
pushf
fwait
test
push
adc
jae
add
or
mov
cmp
pop
popa
xchg
test
inc
xchg
sub
jno
pop
cmp
add
mov
xor
jg
push
push
jge
test
enter
movs
jns
mov
push
clc
ret
shr
sti
push
mov
push
sbb
ds
sti
pusha
mov
test
enter
dec
mov
xor
sbb
loopne
push
adc
push
or
add
mov
daa
cmp
add
jo
std
push
dec
add
test
clc
ds
or
xor
inc
ret
fnstenv
sbb
not
dec
mov
scas
mov
shl
lahf
rcr
outs
jbe
mov
mov
push
sub
(bad)
mov
xchg
sbb
test
clc
fild
jle
add
mov
mov
or
out
mov
icebp
push
inc
gs
and
sub
fiadd
repnz
(bad)
outs
scas
ins
shr
leave
scas
stc
mov
pop
lahf
push
in
pop
or
cli
cmp
sti
lds
not
xchg
fsubr
retf
xor
pop
add
xchg
adc
xchg
sub
out
rcr
xor
and
popf
mov
pop
mov
fist
scas
xor
(bad)
jle
dec
push
dec
or
idiv
sbb
pop
outs
xor
sbb
adc
push
pop
cmp
xchg
sub
jecxz
enter
cld
mov
leave
ins
pusha
adc
inc
sbb
leave
mov
mov
add
jg
iret
ins
fstp
ins
pop
iret
(bad)
dec
rcr
pop
out
jp
mov
fsubr
push
pop
cdq
inc
je
mov
inc
scas
lahf
mov
add
mov
into
pusha
cdq
dec
ud1
inc
xchg
test
imul
jmp
cmp
icebp
dec
sbb
jg
jmp
aam
ins
xor
mov
inc
sbb
or
jmp
cmp
call
and
push
dec
add
dec
dec
jns
inc
sbb
in
inc
stos
xchg
dec
and
je
dec
(bad)
inc
aaa
std
in
adc
adc
add
iret
iret
lds
sub
test
loop
lock
jmp
aam
pop
or
push
(bad)
xor
mov
cli
xor
test
pop
data16
push
adc
jne
sub
adc
int
adc
jmp
stos
dec
push
or
ss
pushf
dec
sti
(bad)
repnz
mov
and
inc
adc
xchg
shl
stos
mov
aas
jae
pop
xchg
jg
pop
inc
mov
leave
mov
movs
and
mov
inc
test
adc
xchg
shl
test
pop
sub
push
sub
or
ins
xchg
pop
fstp
inc
jge
push
dec
pop
shl
enter
arpl
cmc
fwait
cmp
mov
jo
jno
jb
call
je
push
cmp
ficomp
adc
sbb
or
stos
and
fs
jecxz
test
(bad)
xchg
jp
jne
mov
inc
xor
repnz
cmps
xchg
xchg
xlat
lds
outs
cwde
dec
aas
into
sbb
sbb
cdq
into
ret
aad
cmp
cmc
cmps
inc
mov
sub
pop
rol
nop
movs
push
hlt
popf
sahf
lods
outs
xor
out
adc
loop
push
mov
ja
imul
push
ret
(bad)
xor
mov
pop
xchg
lods
push
shl
add
aad
jecxz
dec
xchg
pop
ins
mov
retf
jp
movsx
(bad)
int3
out
test
es
daa
cmp
arpl
adc
inc
(bad)
popf
mov
push
call
mov
lods
sub
(bad)
pop
fwait
repz
in
lahf
cmp
mov
dec
push
mov
cli
push
pop
mov
es
xadd
pushf
loope
mov
scas
rol
imul
inc
jb
cmps
add
xchg
push
push
jmp
pop
int3
sbb
jl
xchg
adc
(bad)
je
imul
dec
lods
xor
jp
cmp
pushf
outs
jnp
and
sar
in
test
retf
cmps
rcl
lods
add
std
push
or
xor
div
jno
movs
adc
pusha
loopne
outs
repz
popf
(bad)
sbb
sub
dec
dec
(bad)
std
fs
shl
mov
push
fprem1
xchg
jecxz
or
into
ret
iret
icebp
cmp
pop
dec
ins
add
mov
mov
js
jbe
pop
cmp
jle
mov
js
push
adc
mov
sub
ret
cmps
and
jmp
pop
fmul
scas
lahf
aam
sub
push
ret
xchg
stc
mov
retf
jmp
inc
jge
int
add
lods
mov
int3
pushf
dec
xchg
and
test
sbb
pop
mov
sub
mov
lea
retf
and
or
push
ss
xlat
stos
jge
inc
and
push
fucomi
cmp
dec
or
mov
bound
rcr
cli
add
clc
pop
pop
and
sbb
hlt
and
xor
mov
jne
add
mov
fwait
xlat
mov
inc
cmovb
mov
push
pop
(bad)
jae
xor
das
gs
mov
xor
sbb
xchg
adc
rol
arpl
push
retf
(bad)
cmc
push
add
rcl
sbb
pop
mov
imul
push
or
loope
call
pop
add
test
cmps
jmp
into
cmp
lahf
stos
add
scas
sub
scas
cmp
or
push
repz
stc
xor
std
jle
fld
shl
pop
xor
xchg
sbb
aaa
gs
sbb
mov
imul
mov
or
or
daa
aas
ret
stos
jecxz
push
(bad)
xchg
cmps
adc
sbb
les
mov
mov
fadd
pop
pop
shr
ret
int
into
in
outs
dec
xor
inc
pushf
out
mov
(bad)
(bad)
mov
jmp
div
sbb
dec
bound
fsubr
mov
les
dec
lods
mov
cmp
scas
adc
add
cmp
ficom
inc
dec
xchg
cmp
aas
fwait
shl
push
dec
out
and
addr16
test
rcr
add
pop
jg
icebp
stos
adc
add
loop
jp
outs
sbb
ret
mov
mov
adc
jl
fnstcw
fs
mov
or
ins
fimul
mov
fs
lods
xor
pop
xchg
mov
jnp
jl
sbb
xlat
outs
mov
test
cwde
sahf
fidivr
lods
dec
cli
outs
jmp
lods
xchg
mov
fstp
fs
enter
cdq
jl
jecxz
dec
mov
icebp
ret
add
stc
das
mov
xchg
(bad)
sub
sbb
xchg
xlat
sub
mov
fdivr
mov
fs
pop
clc
rcr
push
data16
dec
mov
lods
int
xchg
lea
not
pushw
push
outs
adc
push
imul
sbb
in
mov
popa
sahf
mov
xchg
xchg
cmp
inc
out
jmp
or
div
adc
loop
sti
jge
jnp
xlat
jae
pop
pop
cmp
arpl
shr
test
in
xchg
stos
jp
in
and
mov
xor
aas
sbb
retf
cmp
fcom
(bad)
or
out
sub
retf
mov
out
pop
adc
xor
pop
push
push
ds
fild
stos
div
mov
test
scas
and
inc
js
push
ss
stos
add
mov
out
push
fnstenv
adc
adc
and
shl
add
jge
adc
loopne
in
stos
push
dec
loop
cmp
push
inc
and
sbb
icebp
mov
pop
pop
add
add
jmp
or
push
call
sahf
adc
std
pushf
xchg
in
ror
or
fcom
sar
push
ret
call
mov
mov
in
mov
loopne
xchg
cmova
cli
and
pusha
xor
cmp
mov
xchg
bound
jb
pop
jae
sbb
jno
in
xchg
lods
fcmovb
sbb
or
push
mov
mov
jno
je
jl
leave
and
dec
jae
sub
lock
mov
(bad)
ja
jmp
mov
outs
retf
mov
adc
add
imul
jl
les
in
cmp
add
sbb
cmps
push
xor
icebp
data16
pushf
sbb
mov
xchg
sub
mov
mov
add
push
inc
mov
es
xchg
or
xor
add
or
pop
cmp
aad
push
ins
cmovp
xchg
mov
test
or
shl
and
push
in
test
and
mov
in
adc
mov
sahf
and
out
pop
mov
inc
mov
xor
aas
int3
popa
mov
icebp
xor
icebp
leave
sbb
aas
cld
(bad)
int3
scas
inc
inc
out
mov
fs
pop
das
fiadd
int
adc
std
cmp
xchg
mov
ret
add
shl
jne
cmps
pop
sbb
sub
jp
mov
xchg
stos
xchg
pop
fsubr
and
idiv
fwait
test
stos
jne
cld
pop
iret
jns
aad
inc
and
daa
xor
dec
jne
pop
ja
hlt
ins
inc
inc
xor
add
ror
sar
mov
test
pop
jecxz
pop
bnd
fild
dec
pusha
or
stos
jl
add
inc
ja
push
nop
enter
inc
shl
mov
dec
das
pushf
mov
mov
(bad)
mov
jbe
hlt
and
push
jmp
xchg
dec
mov
cmp
ins
jmp
ins
hlt
int
test
cmp
adc
jl
dec
jns
and
xor
icebp
mov
pop
jle
test
mov
repnz
fnstsw
add
ret
fidivr
repz
xchg
inc
add
ins
repnz
lahf
add
and
mov
sub
in
test
arpl
call
mov
lahf
sbb
pop
mov
pop
add
mov
adc
ja
shl
inc
icebp
add
(bad)
retf
mov
adc
dec
pop
and
or
repnz
add
pop
movs
test
mov
xchg
pop
mov
xlat
and
es
and
mov
ja
in
ins
dec
popa
xor
cmps
aad
cmps
dec
and
pop
mov
dec
rcr
lods
inc
xchg
orps
fs
pop
sbb
pop
or
mov
pop
scas
mov
mov
test
jae
jp
and
test
mov
ins
lock
sbb
sbb
into
xor
xchg
and
xchg
test
xchg
ins
aas
cmc
aam
or
inc
xor
xor
mov
imul
js
mov
cmp
pop
adc
jb
out
pop
push
test
pop
mov
fld
scas
int3
add
inc
sbb
ror
adc
push
inc
mov
fist
sub
mov
xor
sbb
mov
and
imul
inc
sub
pusha
scas
pop
not
fld
(bad)
(bad)
out
jno
mov
int3
es
movs
dec
push
std
mov
icebp
adc
loop
push
push
fcom
(bad)
mov
scas
sbb
pop
xor
in
sahf
(bad)
scas
hlt
and
pop
xor
mov
(bad)
jmp
repz
pop
fsubr
push
mov
jecxz
pop
mov
jmp
pop
jnp
pop
and
mov
add
dec
mov
mov
int3
or
in
xchg
dec
push
in
data16
in
push
jbe
pop
inc
sar
push
popa
es
mov
std
inc
and
jns
ret
mov
cmp
xchg
dec
loopne
push
mov
dec
retf
or
jae
ins
sbb
xchg
(bad)
fcmovu
mov
jnp
in
cwde
jp
xchg
aam
mov
cmp
adc
sar
pop
mov
test
movs
out
imul
xchg
(bad)
out
(bad)
mov
div
jp
movs
outs
cdq
movs
popa
inc
xchg
out
mov
(bad)
add
call
ret
xchg
and
sbb
pop
ss
outs
scas
fadd
add
cmp
inc
rcl
jb
sbb
call
cs
sbb
sub
xchg
ja
ret
pusha
pop
stos
fimul
mov
mov
fadd
jg
call
sar
gs
push
pusha
retf
loopne
cmp
or
(bad)
call
jbe
cmp
add
inc
out
jge
jbe
cwde
ret
jge
pop
jg
mov
prefetcht0
inc
test
cmp
ins
jbe
jmp
lods
outs
aas
sub
test
jae
call
retf
add
adc
add
loope
in
dec
int
stos
mov
leave
js
add
retf
(bad)
jmp
fs
mov
data16
sbb
aad
popf
das
lahf
mov
ror
es
cmps
loopne
cld
dec
mov
arpl
push
hlt
iret
bound
cmp
popf
idiv
jo
daa
mov
stos
mov
mov
xlat
out
aam
pushf
(bad)
jne
ret
add
jns
icebp
into
dec
cmp
mov
gs
sbb
push
jg
(bad)
adc
dec
cmp
mov
in
add
adc
out
or
jbe
pop
xchg
xor
cli
mov
or
repnz
repz
fsubr
pop
push
in
dec
test
daa
addr16
and
pushf
or
adc
hlt
inc
call
cs
jmp
push
inc
jmp
xchg
js
jge
ins
js
mov
adc
aad
sub
out
or
cmp
jle
sub
sti
(bad)
xor
cmp
push
enter
scas
mov
cmp
push
mov
lock
adc
imul
sbb
xor
xchg
arpl
and
push
inc
movs
pop
lea
inc
dec
sti
xchg
data16
scas
push
jo
imul
ss
inc
ja
aam
xchg
test
and
pop
lds
dec
sar
mov
int
mov
int
jmp
pop
or
js
fadd
loop
mov
dec
dec
aaa
repnz
push
ins
push
das
dec
fcom
ins
adc
aaa
in
loop
test
lahf
xlat
cwde
or
faddp
adc
mov
dec
mov
mov
shl
bound
push
aad
push
retf
sti
dec
fst
xor
add
js
loop
pop
pop
outs
or
nop
and
jae
sub
dec
clc
ss
mov
inc
out
push
pop
add
sbb
movs
inc
mov
sub
inc
outs
and
sbb
push
and
and
mov
pop
inc
fist
dec
imul
pop
jge
mov
sbb
movs
pop
call
aad
movs
clc
xchg
sbb
and
call
cmp
(bad)
jbe
push
retf
add
adc
clc
fwait
das
test
jae
push
and
and
lea
jl
fld
popa
add
adc
neg
inc
jns
shl
xor
adc
mov
push
sahf
cld
dec
sti
pop
mov
pop
xchg
sub
stos
jbe
add
and
or
leave
pop
ins
pop
sar
inc
mov
(bad)
adc
and
aad
stc
dec
sti
mov
mov
mov
jbe
lds
das
ret
js
sbb
icebp
sbb
into
scas
pop
enter
xchg
ss
dec
pusha
xchg
adc
xor
(bad)
cwde
je
xchg
or
inc
push
fwait
mov
add
or
pushf
retf
add
sub
movs
int3
jmp
fst
mov
sahf
and
repnz
push
push
pop
aam
(bad)
fisttp
idiv
push
adc
mov
push
inc
loop
inc
inc
xorps
(bad)
clc
into
aaa
mov
add
cmp
shl
and
mov
imul
outs
push
cmp
adc
or
dec
ret
in
mov
mov
int
mov
dec
jge
xlat
cmp
mov
enter
test
sbb
mov
adc
sub
movlhps
mov
sbb
jne
cmp
inc
scas
jle
push
imul
rol
adc
pushf
jmp
dec
in
push
lock
not
movs
sub
in
pop
(bad)
mov
mov
push
inc
pusha
dec
outs
mov
add
pop
int3
push
mov
dec
xchg
adc
arpl
std
loop
dec
in
dec
mov
sbb
aam
das
lods
imul
lods
test
adc
or
and
mov
xchg
push
jb
mov
push
in
rcl
jp
rcr
push
jp
sar
add
jecxz
outs
inc
scas
jno
xor
adc
fldcw
loop
mov
xchg
pop
xchg
jge
push
mov
bound
or
adc
fist
pop
pushf
aas
shr
xor
stos
jmp
test
mov
and
shl
sbb
sub
sar
out
in
test
bound
add
jbe
hlt
call
inc
leave
jg
rol
das
ficom
retf
mov
jbe
mov
cwde
xchg
sti
adc
add
sbb
int3
je
jmp
lock
mov
push
pop
lock
div
mov
into
pop
movs
jbe
xchg
lahf
jmp
ja
cmp
push
loop
xor
inc
repnz
sub
inc
pop
jge
sub
mov
mov
sbb
mov
fistp
out
out
loop
push
mov
clc
loop
add
inc
scas
mov
cmp
es
and
push
push
mov
cld
shr
xchg
push
data16
pushaw
(bad)
outs
inc
inc
push
mov
push
and
popf
push
sbb
or
push
fwait
or
mov
adc
es
popf
add
test
stos
sub
out
cmp
push
xor
adc
cwde
int3
mov
ret
call
ja
push
or
add
adc
ja
test
or
ja
push
mul
jp
dec
jecxz
fbld
push
sbb
pop
imul
(bad)
adc
imul
sbb
data16
jle
inc
rcr
iret
pop
ret
movlps
adc
mov
or
(bad)
iret
imul
mov
sar
add
jmp
fisttp
mov
push
rep
popa
clc
jmp
cdq
pop
sub
dec
or
cs
push
lods
stc
inc
cmp
xchg
scas
inc
ins
or
fisub
mov
cmc
dec
adc
out
and
or
or
push
push
mov
cld
fisttp
cli
imul
cmps
and
test
arpl
loop
jl
jnp
ss
inc
mov
inc
cmp
and
lock
push
push
push
inc
pusha
push
enter
mov
in
cmp
aam
pop
add
push
jbe
push
add
mov
and
(bad)
stc
movs
shl
mov
fwait
into
pop
cmp
cmp
jmp
aam
sub
and
ds
add
or
inc
cmp
mov
hlt
cmp
call
mov
sbb
stos
cmp
fidivr
neg
or
cdq
mov
adc
scas
mov
gs
pop
scas
(bad)
call
xchg
dec
stos
out
mov
pushf
inc
push
push
and
hlt
pop
enter
jnp
push
mov
adc
pusha
jb
in
mov
dec
mov
imul
add
dec
lds
aaa
pusha
sub
test
stos
push
std
sar
jl
adc
pop
pop
xor
je
out
enter
(bad)
jne
or
jae
xchg
call
mov
jbe
shr
or
mov
mov
mov
sub
fisub
leave
rsm
xchg
(bad)
and
rcl
cmc
int3
dec
push
or
leave
(bad)
aam
or
enter
dec
cmp
lods
jae
mov
out
ss
sub
test
pop
mov
push
cld
sar
cmc
xchg
imul
xchg
sbb
add
lods
sbb
ins
adc
fwait
xchg
jbe
xlat
dec
fadd
outs
fiadd
pop
ret
jb
shl
cwde
push
fsubr
fst
dec
adc
or
int
mov
jne
sbb
(bad)
xchg
into
inc
sub
jae
sahf
xlat
xor
jo
bound
call
enter
imul
mov
(bad)
xabort
xlat
retf
push
push
xchg
jo
jl
mov
test
clc
loope
sbb
out
or
or
repz
lods
and
js
stos
cmp
inc
xor
lds
and
into
hlt
xchg
pop
hlt
(bad)
in
sahf
aas
add
jae
mov
inc
mov
in
lock
rcr
fs
sub
fcmove
or
push
pop
sbb
aas
xor
mov
int
or
mov
pop
idiv
pushf
mov
fcmovnu
mov
pop
jne
xchg
arpl
pushf
imul
sbb
jbe
mov
movs
mov
inc
adc
lock
mov
shr
xor
add
mov
or
mov
movs
sbb
add
adc
shl
dec
ja
add
jno
mov
scas
xor
pusha
jbe
cmp
clc
clc
adc
push
out
jae
dec
mov
jns
(bad)
cwde
retf
pop
mov
xor
test
and
cmps
(bad)
int3
and
int3
cli
mov
pop
repnz
xchg
sbb
popa
shr
pop
(bad)
pusha
in
mov
sub
xchg
and
call
jmp
dec
pop
pusha
lahf
rol
mov
push
push
and
mov
gs
cmp
rcl
mov
and
retf
mov
(bad)
cwde
in
cld
adc
mov
pop
add
lods
or
sbb
mov
xchg
pop
pop
pop
jmp
jns
mov
out
cmp
mov
add
or
adc
in
jb
fs
mov
adc
test
jae
sbb
pop
jge
mov
leave
dec
xor
lea
lock
sub
stc
repnz
push
ja
(bad)
jne
add
scas
xchg
ja
rcr
lds
mov
popa
inc
ret
add
js
fcom
push
pusha
xor
imul
mov
test
xchg
inc
(bad)
xlat
cmp
xchg
cmovnp
and
addr16
sub
sahf
jae
ror
nop
xor
pcmpgtb
sahf
scas
jmp
or
ficom
jle
popa
fwait
call
jp
(bad)
das
cld
(bad)
addr16
fld
rcr
pushf
cmps
in
cmp
retf
lods
dec
cmp
mov
jge
push
js
in
dec
fsubr
xchg
data16
mov
mov
add
cs
imul
cmp
stc
movs
xchg
and
bound
shr
push
cdq
retf
jg
jmp
xor
or
shl
or
bound
sahf
inc
mov
xchg
inc
inc
cmp
sbb
retf
adc
aas
gs
pop
dec
rol
and
adc
adc
sub
jno
scas
test
push
stc
or
mov
dec
stos
pop
frstor
dec
and
(bad)
xlat
imul
leave
shl
cmp
inc
retf
stc
jmp
xchg
and
sbb
pop
das
push
and
dec
stos
out
push
xchg
ret
xchg
pop
mov
pop
test
jmp
push
cmp
std
mov
mov
daa
aas
pop
ret
(bad)
pop
push
jp
sub
pop
popf
adc
adc
push
add
pop
repz
sub
mov
mov
push
out
int3
pusha
scas
mov
fnsave
std
test
adc
inc
push
int3
or
popf
ins
dec
adc
mov
xchg
cmps
xchg
xchg
mov
dec
inc
test
js
repnz
icebp
push
movs
or
test
push
dec
arpl
shl
push
icebp
in
lahf
sbb
sub
pop
ds
add
pop
mov
adc
iret
test
ins
and
jg
(bad)
scas
xchg
push
jmp
out
sahf
(bad)
push
addr16
sbb
jl
(bad)
push
lea
cld
mov
(bad)
outs
lea
cwde
jns
and
js
test
dec
inc
cmp
sbb
jge
adc
mov
cmp
lods
pop
mov
adc
popf
shl
mov
bound
cld
xor
fwait
adc
aaa
sub
adc
icebp
pop
xor
imul
pop
inc
inc
call
dec
fmulp
mov
clc
mov
outs
imul
call
sbb
sbb
in
aas
jp
imul
sbb
sub
or
and
fnsave
fadd
data16
mov
cmp
jmp
nop
xchg
movs
push
pop
sub
xor
xchg
sbb
lds
push
or
sti
jmp
jbe
call
add
xchg
jp
bnd
and
sbb
xor
or
dec
xchg
mov
sbb
jnp
in
movq
jae
fdivr
mov
mov
and
jb
push
inc
daa
div
cmp
adc
out
icebp
sbb
dec
or
mov
pop
add
jecxz
mov
xchg
jns
xchg
test
scas
into
jg
cmp
dec
mov
(bad)
out
imul
jecxz
add
cmp
lea
inc
push
pop
push
xchg
xchg
push
push
cld
in
inc
call
je
cmc
jge
adc
pushf
test
pop
xor
mov
sbb
inc
(bad)
jbe
mov
mov
sbb
push
retf
push
push
cmps
jnp
jno
mov
mov
loop
jns
loop
out
add
mov
or
push
mov
mov
and
(bad)
lods
mov
xchg
jbe
lahf
dec
adc
fcomp
std
or
fmul
xchg
(bad)
jmp
xchg
pop
xor
jb
test
dec
enter
dec
adc
lds
push
es
retf
outs
push
mov
mov
pusha
mov
stc
cmps
ins
aas
ret
test
mov
add
cmp
jno
shr
test
into
mov
jl
into
fbld
movs
jnp
mov
add
sbb
je
fwait
imul
pushf
(bad)
inc
add
cmp
repz
sub
nop
adc
(bad)
adc
leave
int3
mov
mov
ss
loop
mov
and
cmp
bound
sub
dec
repz
hlt
repz
and
jo
pop
imul
push
jae
ins
pop
fnsave
pop
xor
fnsetpm(287
xchg
mov
sub
fdiv
xchg
mov
movs
(bad)
mov
hlt
jno
les
imul
cmp
xchg
dec
xor
gs
rcl
dec
movs
pop
(bad)
mov
xchg
cmp
pop
retf
out
(bad)
and
add
out
cmps
nop
hlt
mov
(bad)
in
cmp
xlat
cmp
sbb
xor
adc
pushf
jns
cs
dec
adc
jo
test
and
push
add
enter
mov
stc
sub
push
lods
adc
sub
xor
mov
push
mov
iret
jge
lods
(bad)
outs
lock
int
div
jae
mov
test
leave
adc
add
mov
mov
out
jb
popa
in
in
js
dec
mov
cmp
(bad)
jg
sub
push
mov
(bad)
addr16
dec
inc
inc
pusha
sub
loop
addr16
in
mov
es
cmp
aad
pop
and
imul
imul
daa
mov
mov
cs
adc
adc
xor
xchg
arpl
adc
mov
cs
jg
inc
(bad)
sub
mov
adc
retf
push
sub
jl
jne
std
lock
xchg
movs
rol
dec
cmps
stc
pop
fidiv
xlat
xchg
out
sub
cmp
push
mov
lahf
and
repz
dec
xor
push
cld
xchg
scas
mov
xchg
sub
adc
adc
mov
push
popa
das
xchg
push
jns
loop
out
mov
daa
xchg
add
and
jmp
mov
push
push
pop
jmp
cmp
cmp
in
cld
test
retf
(bad)
jecxz
in
movs
ja
inc
push
sub
mov
jmp
pop
(bad)
xchg
dec
stc
xlat
aam
cmp
and
je
mov
stc
xchg
mov
dec
pop
xchg
repz
idiv
int
imul
(bad)
mov
xchg
daa
hlt
mov
cmc
call
lods
push
adc
popf
pushf
fld
(bad)
pop
in
cld
std
ins
xor
push
pop
mov
xor
call
fst
xor
cs
(bad)
out
cmovs
gs
aas
adc
pop
jg
das
hlt
push
sub
sar
rcr
and
xchg
xor
jae
dec
mov
mov
pusha
dec
adc
(bad)
and
adc
sub
adc
dec
dec
out
or
js
out
push
ins
fs
out
sub
add
mov
sub
sub
outs
cmp
mov
stc
xchg
push
fisub
aad
lock
mov
ror
std
loop
icebp
lods
pop
mov
xor
or
mov
enter
cmc
ret
lods
daa
bnd
dec
jmp
adc
push
out
and
fidivr
out
dec
mov
movaps
jne
push
daa
lods
adc
rol
out
dec
sti
or
bswap
loope
sbb
jno
xchg
jle
cmc
fisttp
(bad)
sub
not
pop
inc
fidiv
jo
pop
push
jae
cmp
dec
dec
ins
ja
jmp
cmc
std
xchg
mov
or
retf
mov
in
push
cld
mov
(bad)
jnp
xor
dec
cli
pop
sbb
daa
pop
fild
fmul
icebp
ret
and
pop
adc
lahf
call
ja
mov
aaa
jp
iret
aaa
push
and
cdq
sahf
gs
mov
pop
adc
rol
push
cmp
fcmove
mov
add
jle
outs
pop
clc
sub
retf
mov
mov
add
push
(bad)
jl
mov
sahf
cwde
xor
add
push
dec
loop
dec
jl
mov
(bad)
pop
jae
in
fiadd
loope
mov
outs
jle
adc
mov
sub
mov
movs
ja
mov
pop
pop
std
(bad)
aas
and
lods
sub
loope
cmp
or
adc
add
add
int
outs
lahf
push
call
into
test
cmp
psadbw
gs
add
jge
add
sbb
out
sub
pop
std
mov
ror
in
xchg
push
add
dec
inc
or
adc
jp
pop
std
icebp
ret
mov
imul
test
adc
adc
xchg
mov
stc
popa
and
repz
f2xm1
sub
inc
in
enter
mov
int3
push
or
pop
test
mov
mov
and
cmp
popf
cmps
pop
popf
jne
push
and
cld
cs
std
popa
mov
sti
mov
and
mov
push
lea
push
push
out
add
dec
and
xlat
je
jo
addr16
mov
xor
mov
leave
pop
xchg
out
aam
jae
leave
or
cmp
icebp
cld
and
add
xor
movs
and
pop
xchg
shr
jmp
stos
cld
lea
bound
sbb
or
jmp
and
and
mov
scas
mov
clc
add
cli
or
pop
cmc
sar
push
or
pop
mov
cmps
icebp
mov
ins
mov
add
retf
mov
imul
addr16
(bad)
adc
aas
mov
push
mov
out
int
mov
test
lock
sbb
shl
rol
mov
shl
push
jmp
leave
(bad)
pusha
fisub
dec
fadd
ffreep
shl
add
adc
repnz
std
jmp
fstp
je
in
mov
leave
js
dec
popf
dec
fldcw
and
and
add
inc
xchg
inc
addr16
cmp
daa
jg
cdq
jge
mov
mov
pop
xchg
and
push
mov
add
(bad)
stos
retf
imul
shr
push
repz
cmc
sub
sub
jecxz
mov
bswap
(bad)
test
aas
dec
out
and
test
xor
retf
xchg
arpl
pushf
pop
rol
adc
inc
jmp
dec
inc
pop
jg
or
mov
out
movs
sbb
sti
fidiv
jbe
xor
lods
add
int
pop
imul
lahf
(bad)
jmp
or
pop
xchg
shl
mov
mov
test
fwait
shr
sub
fcmovnb
mov
out
loop
pop
xchg
stos
pop
es
dec
mov
adc
imul
sbb
jnp
cwde
pop
jns
jle
xchg
cmps
cmp
movs
xchg
mov
sbb
xor
add
sbb
ret
add
dec
or
cmp
je
push
es
jl
mov
jbe
push
repnz
inc
std
imul
ror
stos
inc
lods
ins
addr16
mov
out
and
jl
retf
loop
test
xchg
and
mov
mov
outs
inc
(bad)
aam
ret
cmp
pop
das
fcomp
inc
push
adc
ret
mov
cdq
fimul
push
add
addr16
fs
iret
pop
leave
mov
sub
and
xchg
call
aas
inc
call
pop
cld
mov
sub
ror
stc
cwde
xchg
gs
aam
xor
xor
mov
loop
push
call
aaa
dec
add
mov
xor
mov
pop
or
add
fwait
loope
retf
(bad)
jb
lock
and
int3
cmc
les
test
ror
rol
clc
adc
or
jmp
pop
pop
adc
shr
and
add
hlt
mov
mov
cmp
test
aaa
ins
xor
dec
in
jle
fwait
(bad)
cmps
jae
lahf
sbb
mov
push
icebp
and
sti
hlt
(bad)
jbe
add
rol
pop
outs
cmp
xchg
test
sub
pop
xchg
pop
ins
rol
lds
punpcklbw
pop
scas
pop
sub
inc
test
repnz
shl
mov
sub
or
dec
adc
arpl
mov
push
xor
pop
fisub
bound
jae
bound
in
es
aaa
adc
sbb
jmp
rcl
(bad)
mov
icebp
out
sub
adc
pop
nop
mov
ds
cmc
pop
test
sub
(bad)
add
sub
loope
stos
xor
ins
repnz
dec
mov
enter
call
xchg
jl
jnp
hlt
lds
retf
icebp
inc
aaa
inc
test
jbe
adc
inc
pop
push
jle
xchg
ds
lea
ja
call
sbb
sbb
ss
rcl
nop
rcr
push
mov
jbe
fcomp
cmp
or
in
cmps
jmp
add
int
iret
push
fdivr
std
imul
lods
sbb
bound
add
sbb
jno
push
aad
aam
dec
jns
mov
inc
pushf
(bad)
adc
popf
rcr
ja
pop
sub
in
scas
mov
mov
mov
lods
xchg
ins
call
adc
mov
jmp
mov
xor
sti
fstp
cmp
xchg
cmp
xchg
fmulp
xor
adc
gs
mov
bound
rol
aas
aaa
xchg
mov
mov
cmp
fisttp
xor
aam
jo
shl
dec
xor
xchg
ins
and
out
and
mov
and
pop
pop
add
clc
leave
inc
shl
inc
ret
sar
ss
and
in
jecxz
sub
std
mov
sahf
out
cmp
cmp
sub
outs
movs
xor
ret
data16
jnp
fild
cmps
test
fcmovu
mov
mov
ret
push
hlt
push
jmp
jae
nop
out
dec
xchg
inc
push
rcr
xchg
ss
pop
pop
inc
pop
mov
adc
(bad)
inc
xor
sub
stos
push
pop
sub
mov
dec
inc
(bad)
in
stos
or
std
retf
out
mov
or
faddp
cmp
mov
and
jecxz
jge
and
popf
cmp
ror
inc
xchg
lock
mov
and
popf
mov
jno
pop
jecxz
(bad)
or
push
sub
pop
push
or
xor
aad
push
cmp
ins
lds
ins
jl
js
(bad)
lahf
outs
xor
jno
sub
push
jne
mov
(bad)
aas
lock
repnz
xlat
test
pop
add
inc
loopne
pop
lahf
mov
test
pop
cmp
xchg
cmps
xor
mov
leave
call
or
and
adc
mov
neg
mov
jl
inc
fsubr
in
ret
jmp
cld
inc
cmps
aam
div
adc
push
gs
xlat
adc
daa
xchg
cmp
call
(bad)
(bad)
clc
xchg
into
cdq
(bad)
icebp
pop
arpl
arpl
dec
dec
xor
dec
mov
adc
xchg
adc
push
mov
imul
pusha
icebp
mov
mov
mov
push
mov
fsubr
inc
int3
or
ss
mov
lahf
mov
int
xor
pop
repz
outs
fwait
inc
addr16
cdq
mov
or
fwait
pop
retf
push
mov
pop
retf
xor
fild
mov
fild
inc
into
iret
(bad)
test
cld
dec
inc
xchg
jnp
movs
rol
add
cmp
clc
and
xchg
loope
push
pop
outs
iret
mov
sbb
push
mov
sbb
loope
inc
jae
adc
aaa
push
jl
dec
shl
and
add
xor
mov
cdq
jb
nop
and
mov
jae
scas
xor
aam
xchg
xor
mov
mov
jp
sub
retf
sbb
pop
icebp
stos
xchg
imul
popa
scas
rcl
scas
mov
hlt
xchg
out
rcl
push
aaa
arpl
xor
jmp
dec
call
sbb
jns
das
ins
(bad)
mov
lods
lahf
nop
xor
sub
inc
add
push
sbb
inc
and
imul
inc
mov
ror
shr
fcom
in
shr
gs
ret
or
jne
pop
ja
pop
push
(bad)
xor
cmps
dec
mov
jmp
out
aam
jmp
add
xor
adc
cmp
ror
cmps
ins
push
mov
push
imul
int
jp
in
sbb
jbe
retf
pop
sub
retf
xor
or
enter
test
cmps
xor
mov
fistp
or
test
fstp
lds
cmp
mov
jecxz
sbb
pop
and
pop
mov
jns
fnstsw
inc
les
mov
mov
mov
mov
sbb
xor
dec
cmc
mov
aas
fxch
push
nop
sbb
jge
out
or
or
inc
sbb
(bad)
and
fstp
nop
and
mov
jg
int3
xor
xchg
cdq
in
mov
gs
test
clc
jmp
daa
ret
mov
push
add
pop
test
rol
cmp
test
cmp
hlt
mov
jo
pop
ror
mov
fsubrp
stc
sbb
xor
xlat
clc
or
sbb
cmp
sahf
scas
mov
mov
sub
mov
es
mov
xchg
add
shr
ins
ja
fcom
or
sbb
js
dec
repz
loope
jo
and
add
sbb
cld
data16
pop
pop
mov
cli
lahf
outs
repz
adc
inc
dec
add
fdivr
add
mov
cmp
mov
test
mov
out
out
(bad)
and
or
daa
fisubr
mov
inc
add
and
in
mov
xor
mov
push
lea
add
rol
cmp
xchg
pusha
(bad)
push
and
lds
push
xchg
jmp
add
or
repz
sbb
fisttp
into
icebp
shl
dec
scas
jge
in
mov
add
jge
enter
out
sub
(bad)
ins
sub
fcmovne
and
mov
repnz
mov
call
enter
outs
test
ficom
fisttp
fdivrp
daa
adc
pop
div
sub
pop
sti
pop
(bad)
repz
cwde
pop
mov
cwde
jp
fst
(bad)
cmp
nop
dec
sub
push
cmc
popf
repz
in
outs
fld
jp
cli
(bad)
jecxz
cmps
adc
arpl
ss
popf
pusha
jb
fucomi
cmp
(bad)
lock
or
dec
adc
jno
xchg
xor
outs
in
test
cmp
sbb
dec
adc
stos
xor
xor
xor
cmp
push
popa
into
loope
mov
sqrtps
xchg
or
push
dec
xacquire
leave
pop
mov
add
xor
pop
mov
sbb
inc
cmp
int3
xchg
sbb
xchg
loop
xor
ins
test
mov
add
sub
cmp
push
(bad)
dec
xor
xchg
cmp
adc
add
or
push
loopne
pop
fscale
push
or
and
jge
sub
xchg
mov
int3
push
mul
jne
mov
xor
and
sbb
adc
adc
movs
lahf
loop
pop
call
adc
dec
xchg
in
inc
in
loopne
in
sbb
les
fimul
push
mov
lds
jae
loop
ret
pop
fadd
cmp
sub
inc
jg
mov
lods
lods
sbb
retf
pushf
loop
enter
pop
jmp
popa
call
(bad)
(bad)
push
mov
xor
popa
or
cld
and
sbb
push
lock
(bad)
cmp
xchg
stos
cmp
push
jns
jo
fdiv
fldenv
in
adc
inc
in
call
cmc
sub
and
int3
daa
jo
sbb
pop
pop
scas
dec
cmp
or
movs
pop
outs
fcmovu
cmp
xchg
xchg
xor
jo
and
sub
and
add
mov
loope
mov
outs
pop
jbe
imul
stos
pop
loopne
inc
jg
mov
out
fs
lods
aaa
mov
movs
and
xor
adc
lock
idiv
enter
xor
je
push
cld
push
inc
fld
sti
call
addr16
or
dec
sbb
icebp
pop
mov
push
xchg
lock
xor
stc
xor
sub
scas
pop
stos
push
lds
hlt
js
in
mov
xchg
sub
call
cld
sbb
outs
fld
enter
sbb
iret
js
push
xor
inc
out
retf
jmp
ret
out
mov
dec
popa
movs
aaa
cmp
push
leave
pop
sbb
push
inc
test
mov
adc
test
pop
es
jno
mov
sahf
xor
mov
and
sbb
mov
test
fldcw
sbb
add
mov
pop
fwait
and
jno
sub
(bad)
mov
cld
stos
std
cmp
mul
xchg
loop
add
pop
sar
outs
push
fidiv
jmp
fwait
mov
retf
pop
int3
retf
shl
inc
retf
sub
mov
adc
and
ret
add
mov
adc
add
push
pop
mov
add
mov
dec
xor
xor
jmp
xor
ins
jmp
(bad)
aaa
adc
fimul
add
(bad)
sahf
stos
popa
mov
xchg
shl
fbld
fisubr
ror
out
jae
cmps
cdq
add
cld
ds
mov
sbb
mov
movs
and
daa
cwde
cwde
in
ja
add
xchg
xor
push
in
addr16
(bad)
add
std
pop
es
or
push
fs
add
movs
push
aas
cld
ds
mov
push
sbb
fnstsw
enter
and
mov
jmp
test
add
test
popf
icebp
and
sbb
outs
cmps
xor
jmp
jbe
push
sub
lock
das
pop
call
jae
pop
rcr
mov
mov
imul
scas
rcl
stc
inc
out
data16
rcr
cmp
aas
das
arpl
in
sahf
xor
inc
dec
mov
sub
int
fbstp
fwait
sbb
ds
mov
aaa
add
stos
or
scas
mov
pop
cld
mov
sahf
fmul
cmps
jae
pop
dec
mov
hlt
jb
or
push
in
out
movs
cmp
fs
lods
call
cmps
(bad)
jmp
call
cmp
mov
out
sbb
lahf
push
sbb
repz
jge
mov
mov
jl
sub
jg
pop
push
mov
mov
jmp
es
pusha
aam
xchg
test
dec
inc
or
scas
hlt
out
repnz
rcr
mov
pop
xor
retf
mov
jno
cmp
sar
scas
fsubr
xor
(bad)
mov
outs
bound
ret
cli
inc
jl
jb
push
imul
cmp
sbb
pop
xor
movs
inc
mov
or
push
in
retf
sub
mov
test
shl
mov
retf
inc
sub
in
js
es
dec
inc
pop
(bad)
hlt
jl
sti
mov
outs
out
sar
sbb
jne
es
jbe
pop
lds
dec
mov
repnz
out
cmp
xor
out
jno
or
inc
push
push
and
popa
xor
sub
(bad)
in
adc
cmp
aaa
xchg
inc
push
clc
aas
rcr
mov
sbb
shr
sar
or
mov
inc
lea
imul
xchg
mov
mov
std
stos
lock
pusha
outs
sti
inc
xlat
bound
loopne
sub
mov
outs
fiadd
gs
pop
dec
cmc
addr16
sbb
xor
cmps
mov
stos
xor
xlat
inc
cld
retf
fild
ds
sub
and
pop
mov
xchg
mov
adc
sar
inc
cld
(bad)
jl
jno
aas
in
push
call
jno
cs
xlat
cmp
movs
sub
jae
int3
test
and
aad
shr
loop
xor
sbb
imul
mov
inc
sub
movs
jp
sub
ja
cmp
pop
and
cld
push
push
fwait
mov
xchg
cwde
mov
(bad)
cmps
mov
in
jl
movs
pop
sbb
cmps
scas
test
adc
jl
popf
cmp
inc
loop
rcr
fisub
or
retf
inc
mov
stc
lock
mov
xchg
mov
sub
mov
in
into
mov
sar
and
and
pop
pop
add
mov
(bad)
sar
imul
ss
mov
iret
adc
push
stc
std
sub
inc
lock
cmp
cmp
inc
cs
push
mov
call
popa
aaa
dec
daa
mov
push
or
in
dec
adc
mov
ss
xor
cld
sahf
out
push
stc
jbe
jno
loop
add
seto
call
test
mov
dec
cmp
xchg
xchg
jmp
imul
mov
mov
scas
ss
into
jmp
in
ret
jae
lods
fld
mov
arpl
inc
popf
iret
cld
mov
out
push
pop
mov
sti
into
lock
movs
es
dec
xchg
jae
jnp
jbe
dec
and
dec
sub
xor
cmp
push
jle
mov
test
outs
cld
mov
cwde
int
jle
xchg
gs
mov
jg
cld
and
nop
test
or
push
gs
jnp
jp
push
ret
sbb
or
imul
arpl
adc
push
sub
imul
lods
cwde
dec
push
dec
hlt
outs
jle
sbb
mov
adc
or
loopne
jno
mov
and
cmp
jnp
test
adc
test
pop
lea
or
xchg
cmp
jg
dec
add
push
push
imul
cmp
cli
mov
dec
xor
sbb
ds
mov
mov
ror
mov
push
clc
call
xchg
xlat
jge
neg
sub
test
cwde
mov
outs
mov
stos
xchg
pop
jg
loopne
pop
pop
hlt
mov
dec
sbb
icebp
fisttp
es
inc
cmps
mov
imul
add
imul
cmp
xchg
addr16
outs
popa
mov
xchg
out
stos
test
cwde
jae
popa
dec
jne
dec
fs
adc
jns
dec
mov
cld
pop
xchg
pusha
repnz
cmp
inc
and
sub
fistp
add
mov
xchg
lods
inc
push
jbe
xchg
mov
lahf
xchg
pop
out
vpcmpeqd
lds
push
jecxz
aaa
and
dec
out
add
pop
in
jbe
lahf
and
xchg
jne
lahf
push
inc
fild
daa
mov
(bad)
movs
cmp
shr
loope
call
sbb
and
push
je
loop
leave
dec
pop
and
cdq
cmps
push
ins
mov
xor
xchg
sysenter
rol
ror
ins
int
cmp
jno
in
pop
loope
popf
ja
icebp
mov
lods
in
mov
sbb
and
jne
nop
aaa
xchg
inc
addr16
jbe
sub
ja
mov
cdq
popa
jne
xchg
push
sete
xchg
arpl
mov
cld
or
sub
popa
std
(bad)
dec
push
cmovg
push
loopne
test
daa
jle
mov
mov
and
adc
ret
arpl
adc
jae
jnp
push
addr16
sahf
mov
pop
cdq
mov
cli
outs
in
cli
add
adc
mov
int
sahf
retf
mov
movs
adc
lods
std
fnstcw
xlat
xchg
(bad)
repz
aad
test
xchg
in
aas
jmp
out
mov
inc
(bad)
mov
push
jmp
ds
or
push
imul
stos
xchg
dec
adc
jo
(bad)
iret
fwait
cmp
mov
jmp
cmp
cli
pop
hlt
mov
push
cmc
mov
out
(bad)
sbb
xchg
dec
inc
js
inc
aad
inc
adc
int3
pop
ins
outs
out
in
gs
mov
imul
pop
fild
cmp
push
cmp
sub
ja
and
adc
add
arpl
mov
cmp
out
xchg
lods
aam
or
test
lock
jge
or
sub
in
xchg
pop
inc
shl
mul
sub
shl
not
jmp
fld
rcr
enter
push
or
inc
jb
sub
movs
pop
cmp
mov
movs
leave
sbb
std
xor
dec
les
(bad)
mov
cmc
out
dec
std
call
jge
pusha
dec
push
mov
push
pop
push
loopne
mov
inc
inc
js
call
lods
add
(bad)
xchg
hlt
sbb
ror
cmp
xchg
ins
in
ss
xchg
test
ret
test
inc
and
lahf
and
sbb
mov
inc
sub
das
mov
pop
mov
ret
cmp
cmc
cdq
shl
(bad)
fsubr
or
(bad)
push
pop
mov
or
rol
rcr
mov
and
xchg
add
(bad)
sub
mov
loopne
jbe
push
jbe
fistp
icebp
jno
loopne
sbb
add
sub
test
pop
out
jns
pop
adc
xchg
enter
les
gs
test
inc
icebp
scas
out
pop
or
ror
(bad)
pop
pop
xor
(bad)
cmp
jo
or
test
jbe
jmp
push
or
loope
dec
xchg
sbb
fcmovbe
(bad)
add
ror
cmp
xor
cli
mov
imul
sar
pop
dec
xchg
mov
pop
stos
(bad)
push
icebp
out
dec
jg
push
sbb
cmp
xchg
mov
lahf
mov
lahf
scas
and
test
pop
rcr
mov
and
jp
inc
mov
ins
mov
sub
dec
hlt
aad
pusha
in
loop
jne
push
mov
cdq
dec
mov
jle
dec
dec
mov
mov
inc
sub
in
pop
and
mov
retf
add
je
out
adc
adc
jle
mov
jo
cld
cdq
sbb
repz
xchg
mov
stc
or
adc
mov
sbb
movs
add
add
hlt
jg
ja
imul
sbb
push
imul
ja
jmp
dec
repnz
scas
dec
pop
daa
pop
jg
mov
jne
bound
mov
mov
or
adc
fisttp
fld
pop
scas
jmp
stos
les
adc
inc
dec
sub
pop
adc
push
xchg
std
jo
repz
sub
into
dec
fwait
mov
and
jo
dec
sbb
and
cmc
or
pop
mov
(bad)
pop
lea
imul
popf
out
push
dec
xchg
inc
push
sub
call
inc
(bad)
push
sbb
data16
aam
or
in
fisubr
jno
xchg
xlat
cmps
js
pusha
repz
cmp
test
xor
ins
xchg
mov
mov
pop
lods
dec
or
jp
sub
repz
imul
inc
(bad)
out
mov
stc
int
ror
stc
push
pusha
sub
push
jecxz
sub
dec
(bad)
push
pop
fsubr
aam
or
das
fs
int3
das
aad
ja
and
xor
scas
(bad)
in
ins
pop
sbb
ficom
cmp
xchg
pop
(bad)
push
sub
dec
mov
push
jnp
outs
sub
xor
scas
enter
call
and
int
push
pcmpeqd
stc
dec
cmp
and
(bad)
adc
jne
test
aas
(bad)
retf
les
ss
movs
sbb
and
mov
mov
pop
sub
enter
push
loop
adc
addr16
scas
fild
leave
mov
jbe
int
ja
add
adc
cmp
and
pop
faddp
outs
and
pop
and
mov
mov
test
std
lock
das
in
xor
dec
sub
jae
stos
std
fcom
xor
dec
arpl
or
ror
or
sar
sub
aad
pop
es
pop
cmp
pop
jle
fimul
scas
adc
xchg
jge
sub
mov
mov
push
mov
and
into
dec
mov
inc
inc
(bad)
shl
dec
mov
adc
mov
and
outs
pop
dec
jl
aad
stc
mov
cld
pop
push
retf
and
shr
xchg
dec
xchg
xor
or
in
clc
sbb
sub
mov
shr
push
push
pop
sbb
sbb
and
push
sbb
push
popf
repz
or
fdiv
add
mov
dec
jnp
bound
movs
jp
aad
push
xchg
xchg
in
addr16
or
push
outs
imul
iret
push
pop
(bad)
pop
inc
dec
enter
hlt
fist
or
repnz
(bad)
aam
adc
jmp
loopne
addr16
leave
test
mov
test
sub
mov
gs
not
ret
push
dec
mov
dec
cmovno
sub
xchg
fwait
xchg
mov
mov
push
mov
sub
scas
ds
mov
cdq
lds
cli
xor
(bad)
sar
bswap
fmul
add
rcl
cli
retf
adc
adc
out
jno
xor
mul
xor
mov
and
and
cmp
lods
jae
imul
push
sti
pusha
lods
shr
push
mov
push
popa
mov
mov
inc
and
(bad)
jge
xor
imul
stc
xor
out
and
(bad)
xchg
lea
adc
xchg
jmp
jb
sbb
jb
adc
dec
add
jns
stc
xchg
sub
arpl
mov
push
dec
sub
or
in
cmp
or
mov
rcr
in
dec
out
ficomp
ds
mov
or
in
into
sub
cwde
mov
dec
sbb
movs
cli
ins
ins
ud2
push
jae
stos
dec
hlt
pop
pop
movs
call
push
pop
sub
add
push
mov
pushf
(bad)
dec
outs
sar
dec
inc
daa
mov
in
ret
dec
xchg
mov
loope
and
je
dec
add
jmp
imul
cmps
pop
mov
ins
rcl
cs
mov
(bad)
sbb
inc
pop
rcl
loope
test
jmp
cs
cmps
xchg
pop
(bad)
ror
stc
retf
ror
inc
sahf
retf
pop
jg
push
nop
mov
mov
xchg
ret
jns
mov
or
lods
mov
test
rcr
pop
cmp
push
sbb
(bad)
shl
push
xchg
push
sbb
hlt
out
pop
fs
jge
or
mov
pop
xor
mov
xchg
mov
adc
ins
dec
jae
loope
xchg
cli
les
mov
es
pop
inc
or
sub
cmp
sub
in
stos
mov
test
adc
addr16
ins
dec
jle
add
mov
pop
inc
ds
cmp
cli
xchg
cmp
mov
push
outs
xchg
imul
sub
jg
push
fmul
inc
cmp
rol
cdq
das
xchg
dec
adc
test
add
outs
sar
out
mov
add
test
mov
sub
sub
sahf
jns
push
inc
add
test
or
sub
(bad)
jg
and
jne
xor
(bad)
test
out
dec
dec
movs
sbb
out
pop
out
xor
pop
sbb
mov
sub
xchg
push
sub
sub
cmp
rcr
fsub
(bad)
mov
pop
dec
and
cdq
xchg
xchg
call
dec
(bad)
imul
mov
repz
jbe
mov
sbb
sqrtps
out
repz
jb
adc
mov
scas
jns
fs
loopne
es
outs
pop
movs
imul
test
repz
mov
add
mov
sahf
loope
test
jmp
xor
xchg
adc
add
push
cmp
push
out
rcl
jns
sub
mov
push
pop
test
movs
sbb
xor
adc
fcomp
pop
lahf
repnz
sub
scas
lock
(bad)
fistp
aam
mov
mov
and
ins
call
(bad)
xlat
dec
leave
aaa
adc
push
push
adc
fs
jnp
mov
jg
add
mov
movs
out
mov
mov
sub
stos
xor
mov
int3
aas
mov
xchg
out
ss
cdq
xchg
out
inc
inc
push
rcl
aaa
scas
sbb
(bad)
aad
adc
sub
push
pop
mov
js
add
lods
shl
and
test
nop
mov
retf
cmps
add
cmps
dec
and
fisttp
loope
mov
add
mov
inc
std
in
mov
in
jle
cmp
fisttp
out
cmp
aam
or
(bad)
xchg
movs
stos
inc
mov
xchg
jno
xchg
ins
pop
popa
retf
dec
inc
lds
call
sbb
sub
mov
adc
sti
cmp
xlat
shl
push
dec
add
cs
sub
loop
iret
aad
(bad)
daa
mov
jns
cmc
stos
retf
xchg
pop
sti
test
pop
inc
cmp
sub
test
cmp
inc
push
mul
and
jmp
repz
add
inc
push
retw
push
popf
cdq
xor
add
xor
daa
mov
ret
sbb
(bad)
in
out
loopne
mov
and
mov
cmps
mov
sar
sub
push
out
xor
inc
mov
pop
xchg
dec
mov
mov
sahf
ins
push
and
retf
xchg
retf
out
pop
mov
mov
cmp
mov
imul
inc
je
or
call
fstp
and
mov
and
push
mov
push
fcomp
xor
ss
dec
pop
sti
out
mov
loop
dec
data16
inc
out
and
gs
cmp
leave
lea
jg
jl
sar
adc
ja
adc
stc
push
loope
adc
xchg
jmp
xlat
sbb
scas
call
into
aas
pusha
dec
(bad)
jg
inc
test
jecxz
loop
sub
enter
jae
cld
jg
mov
lods
adc
push
mov
popa
test
(bad)
retf
out
push
sti
lahf
pop
push
daa
mov
dec
sbb
lahf
mov
sbb
cmp
(bad)
sbb
cmp
ins
add
in
(bad)
icebp
gs
dec
in
cwde
push
lods
mov
lea
cmc
dec
add
push
dec
jp
lds
mov
into
icebp
adc
pop
out
push
push
mov
lea
or
fwait
arpl
cmp
dec
fs
mov
adc
sbb
xor
jno
mov
neg
xlat
ret
rcr
pop
pop
out
ret
retf
xor
and
or
push
xor
push
xchg
sti
pushf
loope
adc
fisubr
cwde
pop
data16
mov
divps
test
jg
jl
mov
mov
dec
xchg
hlt
in
push
sbb
frstor
and
sti
jbe
retf
or
jmp
mov
mov
and
and
cdq
xor
jmp
jg
mov
lahf
dec
cmp
jmp
jnp
out
mov
test
pusha
xchg
adc
pop
sbb
test
aad
pop
jnp
sbb
sbb
cmps
cmp
ss
(bad)
in
aad
jo
jl
imul
sbb
sub
scas
sub
enter
js
mov
cdq
push
stos
sub
sub
jg
dec
cmp
call
aaa
aam
jbe
into
xor
xor
sbb
jg
sti
stos
je
cmp
retf
std
icebp
push
call
loop
leave
ins
stos
mov
aas
cmp
loopne
mov
cwde
sub
xchg
cs
xor
leave
pop
std
je
push
daa
rep
aad
in
mov
xchg
dec
fistp
xchg
lahf
cwde
fnstenv
xchg
cmp
mul
jp
test
xchg
add
lock
ficom
cmp
imul
push
xchg
shr
pop
jecxz
mov
inc
inc
sub
or
(bad)
dec
lock
and
and
aad
mov
xlat
nop
repnz
lock
xor
sub
adc
(bad)
mov
in
xchg
sbb
pop
xor
mov
cld
dec
xchg
jo
stos
dec
pop
(bad)
and
out
jbe
jo
dec
dec
ror
dec
loopne
mov
add
dec
dec
or
push
ds
mov
cld
cmp
mov
das
push
mov
call
aad
inc
scas
mov
iret
add
or
addr16
aad
add
push
jg
dec
in
push
imul
or
shl
add
sbb
mov
fiadd
stos
adc
popa
loop
cli
and
pop
mov
enter
jmp
stos
enter
sahf
(bad)
jge
movs
sbb
mov
add
gs
jp
and
lods
dec
add
in
add
wrmsr
jb
dec
popf
xchg
xchg
jmp
mov
push
stos
call
xor
loopne
push
rol
lahf
add
dec
ret
cld
fwait
mov
dec
je
adc
xor
cmp
stos
cmps
rcl
ins
mov
in
mov
adc
xchg
xchg
or
loope
cs
add
or
sub
enter
(bad)
fsubp
push
push
add
jle
dec
call
loopne
test
call
test
es
dec
xor
sub
jg
std
icebp
inc
xor
popa
popa
cmp
jmp
or
fstp
popa
mov
cld
dec
jnp
test
aas
jg
or
and
push
jno
mov
dec
in
inc
in
mov
adc
out
das
test
add
repnz
cld
shl
(bad)
cmc
sub
pop
xor
cmc
push
ret
pusha
xor
out
pop
aas
pop
dec
sti
imul
stc
inc
jg
push
add
hlt
xchg
cmc
mov
jg
pop
add
leave
sar
jg
ret
dec
mov
shr
mov
push
call
faddp
add
outs
loope
mov
jb
dec
xlat
in
push
pop
adc
outs
retf
ss
pop
int3
xor
sbb
xchg
pop
and
xchg
call
mov
push
lock
cmp
xor
stos
xor
push
ins
dec
mov
or
not
inc
retf
in
(bad)
rcl
xchg
xchg
and
sbb
mov
scas
je
cmps
retf
mov
mov
sub
inc
push
sub
stc
sar
mov
repz
bound
lds
cwde
scas
fidiv
aaa
push
and
pop
inc
inc
neg
and
mul
push
lods
xchg
jno
aad
sub
pop
inc
dec
js
and
push
popf
xchg
cdq
add
adc
sbb
cmp
jg
rcl
(bad)
sub
mov
test
stos
or
cwde
outs
jle
rcr
jae
loope
xchg
jmp
or
and
les
mov
bound
inc
or
jge
jbe
movs
add
out
cmp
xchg
inc
inc
(bad)
mov
mov
sbb
pop
lods
out
in
mov
enter
jo
gs
jl
or
mov
cmp
inc
pop
in
sahf
bound
stc
jbe
popa
scas
sti
popa
cld
ds
jb
mov
xchg
in
loop
lahf
add
cmp
retf
fadd
lahf
repnz
dec
mov
xor
(bad)
cmp
push
mov
in
sbb
pusha
xchg
retf
test
cmp
mov
hlt
pop
fiadd
jge
inc
idiv
inc
jle
sar
mov
sti
in
sbb
int3
adc
xchg
arpl
xchg
test
clc
mov
sbb
mov
mov
dec
movs
dec
push
ret
or
stos
aad
pop
and
scas
jne
sbb
or
ror
cmp
add
xchg
jle
(bad)
inc
adc
int
js
dec
push
pop
push
push
mov
je
je
and
xor
sub
mov
shr
mov
(bad)
shl
sbb
and
lds
outs
and
mov
ins
jns
mov
inc
ins
ficom
addr16
imul
scas
popa
pop
pop
xchg
mov
and
in
mov
outs
sbb
inc
icebp
push
les
cs
ds
cli
sub
and
push
into
mov
inc
scas
xor
das
cmp
xor
mov
imul
xlat
cmp
in
add
xor
dec
add
and
jg
mov
inc
(bad)
pop
test
push
dec
inc
or
and
xor
mov
(bad)
fmul
jmp
pcmpgtb
push
xlat
jno
cdq
pop
adc
je
dec
push
scas
test
add
dec
or
scas
push
cli
aad
inc
jbe
sub
mov
pop
mov
mov
(bad)
ss
pop
add
push
push
jmp
dec
js
xchg
(bad)
pop
test
pop
jno
pop
sbb
push
gs
mov
xchg
(bad)
rcl
xchg
pop
jb
xchg
push
int
ret
fmul
ins
xchg
out
dec
adc
mov
ss
lods
pop
bound
push
pop
cmp
ins
xlat
inc
daa
add
inc
or
fcom
or
fwait
cmp
jl
test
loope
fld
scas
push
rol
(bad)
repz
mov
xor
dec
pop
mov
xor
add
mov
mov
jnp
lds
xchg
adc
inc
rcr
nop
and
mov
hlt
mov
enter
das
movs
sub
jp
cmp
lds
inc
jl
sub
scas
sbb
ja
add
dec
mov
int3
sbb
fiadd
movs
mov
xchg
add
ins
mov
repz
scas
adc
stc
lods
or
jne
(bad)
fld
xor
mov
inc
mov
movs
xchg
push
pop
pop
add
sbb
into
xchg
aad
adc
iret
pop
ins
neg
jo
push
mov
add
mov
adc
lahf
in
shr
les
test
add
test
inc
popf
cmps
(bad)
inc
inc
cmp
sub
nop
repnz
mov
jne
push
or
pop
(bad)
pop
inc
int3
push
iret
or
pop
push
retfw
popa
push
mov
enter
and
into
cmc
pop
xchg
add
les
enter
aas
ja
fwait
jbe
add
push
aas
add
mov
and
loopne
xchg
xchg
mov
lahf
repnz
dec
test
dec
mov
(bad)
push
aas
push
imul
pushf
fist
sbb
repnz
mov
test
mov
add
mov
and
sti
dec
push
popf
movs
and
ret
jne
jmp
gs
arpl
out
ins
out
mov
nop
xor
out
push
push
add
loopne
inc
cli
lds
mov
mov
pop
call
(bad)
jae
and
mov
mov
add
pop
cmp
and
imul
xchg
sub
repz
dec
sbb
jbe
std
sahf
loop
mov
dec
je
jmp
lods
shr
or
cli
push
jg
push
inc
daa
adc
add
inc
mov
push
shr
jmp
xlat
xor
mov
push
mov
jmp
sbb
test
fwait
push
sahf
inc
adc
rcl
popf
adc
lea
test
jmp
cmp
ds
xchg
(bad)
out
mov
mov
adc
mov
add
fs
ret
stos
fdiv
or
xchg
cmp
ja
rol
add
jo
add
ins
std
or
xor
call
rol
xor
xor
ins
(bad)
mov
adc
pop
sbb
fidivr
mov
sbb
sar
mov
jb
mov
mov
ret
je
(bad)
fiadd
xor
out
jmp
push
mov
shl
xchg
and
sub
popa
shl
iret
cmp
xchg
cmps
lds
jne
cs
jno
pop
dec
jnp
jle
lock
dec
jle
adc
push
movs
clc
retf
jns
mov
outs
push
cmp
push
loope
sub
je
call
rol
push
test
dec
mov
mov
movs
xlat
gs
js
outs
xchg
xchg
and
jmp
ret
push
pop
call
pop
xchg
and
(bad)
shr
sti
js
js
add
(bad)
mov
xlat
mov
stos
fwait
cdq
jbe
inc
jg
push
rcr
push
adc
mov
ffreep
push
movs
dec
xchg
cmp
(bad)
mov
cdq
push
popf
xchg
mov
(bad)
rcl
arpl
push
out
push
cmp
or
and
movs
jmp
cli
pusha
(bad)
jno
(bad)
gs
mov
shl
jo
data16
test
jne
dec
js
dec
fnstsw
outs
push
mov
jp
fbstp
sbb
pop
outs
aam
push
inc
stc
adc
xchg
jno
lea
lds
cmc
and
jl
xchg
ins
sbb
mov
loope
push
pop
mov
repz
jecxz
loop
mov
rcr
adc
inc
pop
sub
loope
nop
or
mov
cdq
mov
shr
pop
add
sbb
xchg
mov
jle
leave
add
xchg
pop
adc
popf
jp
ins
mov
(bad)
sub
cmps
stc
inc
arpl
fadd
push
pop
pop
jb
and
jle
jmp
add
jae
or
stos
mov
pop
arpl
dec
push
repz
inc
ins
std
adc
leave
movs
mov
pop
inc
and
clc
sar
sbb
int3
fistp
inc
xor
and
aas
mov
icebp
ret
movs
or
mov
jl
add
mov
jo
or
popa
shr
movs
rol
sbb
push
cmp
icebp
xchg
test
sub
syscall
ss
xor
into
xchg
pop
pop
sub
add
scas
xor
push
in
int3
(bad)
out
or
xor
add
push
sub
inc
pop
stc
jmp
shl
in
leave
gs
stos
pop
cdq
aad
cmp
mov
or
push
fwait
mov
push
add
leave
xor
cmps
adc
dec
mov
jnp
inc
or
fwait
cli
add
pushf
inc
scas
xor
sbb
cmp
out
jae
ud1
pushf
push
shl
pop
neg
cdq
fsubr
stos
rcr
jb
mov
aas
inc
and
mov
out
fld
jo
jmp
test
inc
stos
fld
push
inc
test
das
cli
movs
xor
popf
ret
aam
push
xchg
ins
sbb
sub
mov
mov
push
cmp
fsub
popf
mov
sbb
xchg
mov
xor
cmp
pop
mov
je
stos
outs
dec
push
push
aaa
and
hlt
out
neg
int
clc
sub
into
mov
adc
mov
push
pop
jmp
call
xchg
cwde
lea
xor
daa
stos
cmps
xchg
loop
test
retf
mov
pop
test
adc
ret
ja
cmp
adc
add
stos
(bad)
jmp
mov
scas
adc
inc
xchg
jge
xchg
sub
scas
aas
xchg
loop
popf
mov
lea
and
mov
add
scas
and
jbe
pushf
sub
xor
xor
cmp
or
cmps
pop
je
add
mov
xor
(bad)
push
rcl
inc
nop
jbe
add
inc
jg
jbe
xchg
adc
sahf
repnz
pop
(bad)
in
adc
mov
call
call
mov
and
jp
idiv
push
imul
scas
popa
jmp
adc
cmp
sar
sbb
mov
jno
enter
in
ret
sub
mov
mov
xor
sub
imul
add
int
fdivp
mov
sub
mov
jb
xchg
pop
retf
cdq
pop
and
lds
mov
and
jbe
pop
lea
inc
xor
add
cmc
jge
mov
out
xchg
test
xor
xor
fist
retf
mov
test
mov
icebp
retf
adc
xchg
les
fwait
sub
mov
mov
xchg
pop
jmp
aaa
push
loop
leave
out
scas
xchg
pop
or
xchg
sbb
add
push
mov
sub
cs
ret
push
test
aad
ret
cmp
int
adc
(bad)
push
inc
test
lock
neg
jns
rol
push
jne
mov
push
nop
jns
stos
pusha
mov
and
retf
add
mov
call
(bad)
into
or
mov
sub
int3
addr16
push
les
dec
cmp
jnp
push
sbb
inc
enter
push
sub
push
fdivr
out
dec
push
sti
xor
cmps
(bad)
imul
rcl
sub
mov
rcl
mov
fchs
and
(bad)
repz
fs
mov
enter
push
mov
dec
hlt
inc
mov
sbb
in
adc
cmp
cwde
int3
cmp
(bad)
adc
sbb
xor
outs
popa
add
gs
aam
leave
or
mov
xchg
(bad)
aad
pop
push
(bad)
retf
aas
jge
dec
push
xchg
push
sub
jmp
push
ins
xor
out
inc
sub
and
sti
mov
js
out
test
(bad)
gs
out
jge
dec
clc
cmp
mov
lods
in
je
pop
mov
shl
lea
xor
call
cs
push
jbe
and
aaa
test
sbb
inc
cmp
jns
enter
popf
pop
jmp
mov
jbe
sbb
fcmovb
(bad)
push
push
mov
mov
xchg
jae
jmp
stos
and
pop
(bad)
adc
mov
div
adc
mov
scas
mov
dec
lods
and
pusha
dec
jmp
cmp
push
loop
add
out
xchg
retf
in
das
aam
dec
mov
imul
sbb
mov
enter
int
xchg
sbb
xchg
pop
jecxz
aaa
jmp
xchg
fucomp
jle
stos
inc
adc
jnp
inc
cmp
xlat
bound
cmc
xor
xchg
dec
push
or
mov
xor
pop
pop
popf
out
inc
inc
or
push
and
dec
ss
mov
scas
or
fld
stos
or
cdq
xor
popa
fcomp
sub
stc
cwde
mov
int3
mov
sti
adc
outs
mov
push
inc
jmp
pop
lea
jo
mov
cmp
popf
mov
jns
mov
test
fcmovbe
fs
idiv
movs
call
shl
fild
mov
jmp
je
lahf
mov
lods
jecxz
popa
adc
jb
push
adc
xchg
or
mov
add
add
dec
jns
pop
mov
fld
call
jecxz
out
jae
push
ror
xchg
(bad)
pushf
outs
jne
jmp
cmc
(bad)
or
xchg
fdivr
inc
lahf
loopne
jl
lahf
cmp
xor
and
cmp
mov
xchg
xor
add
or
sbb
push
es
pop
sub
sbb
rcr
xchg
jp
add
sahf
sub
dec
addr16
push
xlat
mov
ins
test
adc
fdivr
aad
sar
icebp
sbb
in
adc
add
mov
repnz
cmps
xor
push
dec
mov
mov
neg
jle
add
mov
ss
aaa
pop
jae
popa
cmps
jmp
pop
mov
and
add
add
and
cmp
sub
out
pop
(bad)
ret
lods
pop
pusha
in
xor
add
jle
fsub
mov
sub
out
add
je
and
xchg
mov
int3
loopne
outs
pusha
repz
xor
mov
mov
cmp
pop
xor
and
out
nop
shl
cmp
push
enter
fiadd
scas
push
xlat
call
mov
push
mov
scas
jae
(bad)
bound
dec
popf
out
xor
movs
mov
test
out
out
pop
lahf
into
ds
sbb
jne
ins
and
and
outs
idiv
ret
or
(bad)
xchg
addr16
sbb
mov
xchg
ret
push
fld
out
dec
aas
call
xor
pop
jne
dec
dec
sti
(bad)
hlt
repz
sub
adc
jge
cmc
test
scas
pop
xchg
mov
fstp
inc
inc
icebp
inc
push
nop
call
push
sub
sbb
pop
rcr
add
adc
pop
pop
xchg
out
repz
ret
and
repz
sahf
hlt
sbb
ret
inc
inc
sub
pop
es
out
xor
mov
xchg
test
fild
sbb
ret
shl
ss
gs
(bad)
sub
jp
lods
ret
push
int
mov
into
mov
push
rcr
jns
jns
aaa
and
pop
adc
adc
cvtpi2ps
mov
add
loopne
(bad)
adc
mov
div
xor
popa
pop
pusha
and
retf
cmp
sbb
push
cmps
cmp
mov
mov
adc
ins
ret
lock
ins
sahf
push
scas
mov
out
mov
out
mov
sbb
loopne
fwait
xchg
add
mov
pop
mov
mov
aad
adc
cmps
mov
pop
inc
adc
pop
cmp
and
pushf
fsubr
pop
jmp
xchg
and
adc
mov
xchg
scas
cld
add
movs
mov
out
stos
and
fiadd
inc
(bad)
(bad)
das
out
push
adc
fild
rcl
jns
pop
adc
iret
pop
lds
adc
cmp
pusha
and
loopne
ret
xchg
or
xor
int3
sbb
adc
popa
ja
(bad)
f2xm1
les
retf
cmps
or
sar
lock
xchg
push
test
test
sub
pop
test
movs
mov
pop
sbb
cld
jl
add
jmp
jmp
pop
and
add
movs
push
inc
adc
test
out
cmp
inc
push
lahf
mov
out
pop
(bad)
xchg
add
or
jmp
sub
mov
jmp
ins
xchg
ret
sbb
lds
inc
fisttp
fcomp
stc
xor
fbld
inc
je
rcl
pop
xlat
dec
sbb
data16
jbe
mov
(bad)
(bad)
loope
fadd
sub
add
inc
and
fld
xchg
inc
mov
or
inc
js
adc
xchg
outs
inc
lock
ret
xor
dec
in
je
mov
dec
jmp
ret
add
sbb
jmp
jne
pop
jne
retf
les
mov
popf
popa
in
imul
mov
mov
mov
imul
mov
pushf
push
push
push
push
and
xchg
loopne
add
test
test
lods
fsub
add
xchg
mov
mov
adc
mov
inc
sbb
add
into
shr
jne
(bad)
pop
jle
push
jle
cmp
pop
(bad)
jl
jbe
int3
push
cwde
jmp
mov
jnp
jge
push
frstor
mov
stos
test
outs
cli
in
cmp
push
inc
add
mov
xor
dec
sbb
jmp
pop
jno
mov
or
inc
xor
daa
mov
cmps
jle
or
sar
mov
test
(bad)
movs
jmp
iret
(bad)
jmp
pop
jae
sti
adc
stos
imul
push
in
mov
xchg
add
push
sbb
in
outs
aaa
sub
outs
repnz
in
mov
(bad)
in
imul
xchg
enter
xchg
sub
(bad)
stos
sbb
add
lods
lods
ja
test
ins
mov
mov
and
add
xchg
test
int
and
ja
sbb
xchg
jmp
jmp
adc
xchg
push
clc
dec
mov
leave
dec
jb
nop
sbb
(bad)
dec
inc
mov
les
or
or
aam
inc
mov
and
jns
inc
xchg
adc
mov
ftst
es
pop
xchg
and
push
movs
mov
add
rcr
mov
pop
dec
sub
pop
xor
cld
shl
outs
pushf
sbb
cmp
imul
fs
dec
inc
xchg
cmps
push
dec
cmc
xor
test
ret
mov
popa
cs
lods
inc
and
pop
sar
call
xchg
inc
pop
mov
dec
je
pop
pop
push
pop
mov
add
loopne
sbb
clc
ins
std
inc
jae
jp
xchg
in
in
mov
mov
inc
mov
inc
cdq
inc
sti
dec
push
lock
out
cmps
or
sub
imul
mov
push
push
test
outs
dec
in
mov
inc
inc
(bad)
test
in
popa
sub
sub
js
sbb
popa
add
pushf
pop
cmc
lock
dec
call
lea
loope
pop
inc
jecxz
xlat
jl
jp
imul
push
jb
mov
inc
inc
jl
sar
adc
fstp
mov
mov
inc
int3
mov
mov
mov
or
imul
loop
sbb
inc
jmp
in
push
push
rcl
xor
xchg
push
dec
mov
dec
retf
adc
fidiv
shl
pop
les
out
(bad)
xor
add
shl
mov
add
cs
or
mov
stos
adc
fcomp
(bad)
sbb
push
iret
mov
mov
sbb
adc
cs
mov
cmps
add
xchg
fst
shr
mov
popf
sahf
(bad)
shl
cmp
pop
cmp
or
xlat
xor
lahf
dec
mov
sub
or
popf
push
inc
or
aad
cli
dec
xlat
aaa
not
rol
pop
adc
sub
addr16
div
movs
pop
inc
in
adc
out
push
ins
push
popa
(bad)
loop
mov
sahf
mov
push
push
push
cmp
pop
inc
sbb
lds
pop
mov
hlt
pop
mov
pop
jmp
sbb
aad
sbb
sbb
popa
lahf
and
mov
pop
push
loope
and
mov
and
mov
fdivr
xor
pop
mov
scas
push
cmp
jmp
das
int3
pop
lds
lds
(bad)
inc
or
pop
ins
xor
std
outs
or
sbb
sub
add
jecxz
push
mov
jge
stos
push
mov
test
sar
stc
adc
dec
mov
add
daa
bound
lea
aas
and
jo
aad
sbb
js
cmc
xchg
fisub
outs
push
xchg
in
imul
xlat
mov
dec
mov
add
jb
ins
mov
pop
cmp
out
fsub
and
leave
push
enter
cs
mov
jnp
ror
sti
xor
sub
loop
sbb
xor
fild
sar
cmp
mov
mov
out
and
adc
in
add
stos
inc
call
sub
jl
inc
mov
pop
stc
cmp
arpl
adc
aad
mov
xor
mov
xchg
jbe
dec
dec
adc
adc
inc
add
test
jmp
call
xchg
push
sbb
add
xor
xchg
cmp
push
xlat
fcmovu
rcr
xchg
sbb
mov
shr
jl
mov
cdq
mov
daa
mov
inc
and
adc
adc
adc
jmp
inc
out
inc
test
cld
cmp
inc
iret
push
iret
sub
xor
pop
enter
enter
aaa
add
pop
or
mov
inc
cs
mov
int
mov
xor
cmp
jno
aad
jno
xchg
dec
sub
mov
out
add
jp
out
ss
retf
adc
call
push
mov
fwait
lea
push
test
cmc
popf
or
into
inc
mov
pop
xor
fidivr
call
ret
addr16
xlat
rcl
inc
inc
cmp
mov
ss
inc
ds
dec
sbb
addr16
cmp
push
mov
daa
cmp
xor
mov
stos
idiv
cmp
(bad)
into
aad
pop
cmp
mov
mov
push
sbb
int
adc
adc
or
pop
(bad)
sbb
jle
ins
test
ds
pop
push
retf
std
les
pop
mov
nop
(bad)
shl
mov
rol
in
test
inc
xchg
out
leave
cs
and
lock
fmulp
adc
or
(bad)
push
stos
cmp
int
iret
sbb
std
mov
mov
jnp
(bad)
call
je
dec
sbb
pusha
lock
mov
pop
fs
xlat
xor
das
xor
pop
sub
pop
scas
mov
adc
pop
aaa
add
mov
cmp
sbb
mov
imul
xlat
mov
adc
ja
and
add
push
xor
jge
fcmovnb
cmps
sbb
mov
jmp
rcr
lds
and
imul
lods
cmp
jb
hlt
cwde
in
ret
adc
repnz
imul
xlat
into
sti
fwait
add
rcr
cmp
adc
sbb
gs
mov
mov
test
leave
data16
dec
inc
push
mov
fs
mov
(bad)
push
mov
push
jo
dec
cmps
inc
out
shr
xchg
jmp
test
les
out
jg
es
test
es
int
faddp
jne
test
pop
and
out
add
sub
add
test
push
jo
mov
scas
xchg
xor
(bad)
push
mov
pop
mov
(bad)
xor
mov
adc
and
mov
jge
sbb
das
sub
mov
ins
out
pop
div
icebp
enter
movs
loope
mov
fild
scas
and
js
dec
popa
icebp
inc
lods
cmp
test
imul
jp
lods
dec
ja
inc
add
push
sar
mov
and
(bad)
or
adc
cwde
(bad)
mov
test
inc
mov
movs
dec
cmp
sub
outs
adc
sub
popa
pop
test
xchg
or
test
std
add
sub
dec
adc
sub
or
scas
mov
mov
outs
and
call
jp
sbb
dec
ret
dec
inc
jge
jecxz
leave
icebp
sub
or
(bad)
int
cmp
jo
sub
cmp
ds
sub
sbb
inc
xchg
sbb
cld
fsin
inc
imul
inc
and
lods
inc
dec
pop
push
mov
pop
es
adc
adc
fcom
cmp
xor
out
add
mov
cmp
movs
outs
js
push
addr16
pop
adc
fisttp
rcr
mov
jp
bnd
mov
push
sahf
xchg
push
gs
push
scas
lahf
ret
test
fst
lea
or
inc
and
and
addr16
out
jge
rcl
aas
scas
cdq
stos
push
sbb
pop
and
(bad)
repz
arpl
hlt
mov
or
jno
xor
stos
(bad)
cmp
data16
hlt
jg
xchg
mov
cs
test
lds
aaa
outs
xor
sbb
scas
fdivr
jns
mov
or
and
stc
ds
fistp
xlat
xchg
and
jp
mov
xchg
fcmovne
popa
mov
loopne
out
out
inc
pop
(bad)
pop
bound
(bad)
or
xchg
mov
inc
lahf
fs
jb
and
pushf
inc
(bad)
push
add
movs
mov
int
shl
inc
add
add
pusha
inc
call
cdq
(bad)
daa
add
push
dec
pop
hlt
mov
push
jge
ds
jns
gs
(bad)
hlt
pop
jg
js
dec
xor
pop
push
add
mov
int
sub
pop
sub
xchg
sub
lea
(bad)
iret
loope
dec
xchg
push
push
aam
jne
hlt
adc
rcr
out
pusha
popf
jl
sbb
cld
(bad)
push
cld
ins
push
daa
loop
or
rcl
lahf
pop
xchg
cdq
jne
push
mov
into
cmc
jp
sbb
mov
mov
push
imul
lahf
add
in
es
aam
and
jp
jns
sub
xchg
xchg
movups
adc
in
cmp
pop
push
or
or
sbb
in
into
inc
jne
pop
mov
daa
(bad)
icebp
adc
adc
aaa
(bad)
loope
dec
mov
jge
imul
xchg
ins
push
push
test
std
imul
fiadd
fidivr
mov
outs
sub
jp
int
push
loope
cmp
mov
ret
es
fiadd
push
push
ret
mov
pop
cmp
fidivr
xchg
lods
js
ret
mov
retf
data16
repz
in
lods
mov
imul
xor
mov
int3
sbb
mov
sbb
iret
mov
(bad)
sbb
arpl
pop
jbe
dec
dec
and
add
xchg
jmp
sbb
jmp
fcomip
in
popa
sbb
cld
cld
fnstenv
jmp
sar
js
ds
out
fmul
inc
mov
fld
cmps
mov
add
aaa
ret
sbb
mov
mov
(bad)
mov
test
icebp
scas
mov
ds
shl
ins
outs
xchg
stos
sbb
ins
dec
dec
push
mov
aaa
retf
lods
ja
cs
sbb
scas
ins
aaa
push
test
push
popf
mov
mov
lods
mov
lahf
and
add
rcl
out
movs
adc
push
mov
lods
pop
movs
scas
and
and
sub
push
xchg
sbb
or
or
sub
sub
retf
dec
arpl
addr16
inc
dec
push
xchg
aaa
dec
cld
mov
lds
and
inc
(bad)
aad
push
cmp
mov
cmovl
in
mov
outs
ins
adc
push
gs
mov
sti
pop
ss
pop
or
call
repnz
jg
and
or
or
adc
es
into
fild
mov
dec
arpl
out
test
bnd
and
fs
jecxz
push
xor
in
push
div
jo
or
in
or
sbb
test
mov
jae
push
adc
les
out
xchg
pop
or
loopne
jo
jae
xor
push
(bad)
fs
or
les
inc
mov
data16
cmc
push
ss
mov
int3
inc
push
mov
sub
jne
inc
lea
inc
cld
mov
fsub
sti
aaa
add
add
pop
push
scas
inc
shr
scas
mov
sbb
cmp
loope
test
iret
or
mov
xor
pop
xor
mov
ja
push
pop
dec
dec
mov
ret
outs
idiv
mov
ss
xchg
pop
lods
jne
cmp
js
and
dec
loop
dec
rcr
xor
xchg
jge
cmp
add
gs
push
fmul
lock
mov
inc
outs
cwde
xor
retf
or
in
mov
data16
xchg
stc
add
sub
aad
jl
popa
xor
adc
push
jae
std
mov
sub
idiv
fist
cld
cmp
push
jmp
mov
daa
pusha
pop
xor
jmp
jg
mov
dec
add
popa
push
dec
daa
jge
cmp
sahf
sbb
fiadd
cli
mov
push
push
and
inc
adc
or
fs
mov
arpl
jmp
test
test
(bad)
cmp
pop
pop
xchg
mov
sbb
adc
and
xchg
(bad)
in
or
and
cmp
mov
ins
dec
fisttp
retf
push
(bad)
out
daa
cmp
cmp
xor
outs
scas
mov
sub
cmp
push
mov
in
sub
adc
jg
(bad)
lock
xchg
or
mov
cmps
jp
int3
xchg
fidiv
in
dec
sub
push
mov
fadd
jbe
sub
sti
add
push
mov
mov
mov
jl
jg
cmc
(bad)
das
cld
dec
jmp
js
or
jns
cmp
inc
sub
clc
mov
adc
test
(bad)
or
and
push
or
sahf
mov
xchg
dec
into
push
call
sbb
mov
rol
int
mov
cmp
shl
ja
or
(bad)
or
sbb
cmps
and
add
idiv
cmp
jmp
xor
cmp
pavgb
fs
lock
hlt
or
daa
adc
xor
jp
dec
ja
or
mov
xchg
jp
and
mov
xchg
inc
in
xchg
push
jmp
in
sbb
imul
and
inc
xlat
repnz
scas
push
leave
xchg
sbb
std
fimul
cmc
xor
mov
cs
mov
lock
aad
or
ds
daa
leave
jnp
in
dec
mov
adc
xchg
mov
or
aam
jle
cld
inc
dec
adc
push
cli
mov
(bad)
inc
push
outs
sub
popa
push
fidiv
add
fnsave
push
push
mov
pop
sbb
sub
stc
pop
daa
addr16
stos
mov
or
cld
sub
bts
sahf
xlat
js
test
mov
mov
cmp
pop
adc
pop
or
out
mov
mov
fdiv
push
push
data16
in
push
pop
inc
xor
popa
test
fild
sub
ror
outs
xlat
aad
inc
mov
adc
sahf
fwait
int3
push
xchg
out
out
jge
fild
cli
jb
ja
iret
mov
test
sub
or
fcom
pop
adc
fnstcw
ins
mov
loope
xchg
and
mov
push
shl
shl
loop
cdq
or
push
popf
inc
lods
ret
sbb
push
dec
xchg
idiv
xchg
aam
ds
je
leave
or
es
cwde
shr
std
jmp
movs
mov
dec
add
sbb
and
xchg
retf
cmps
ins
inc
cmc
xchg
mov
out
and
call
mov
push
je
and
mov
into
jns
in
and
xchg
mov
mov
gs
into
lods
imul
push
rol
mov
adc
sbb
stos
jge
(bad)
mov
and
adc
(bad)
ja
ins
fadd
or
sbb
imul
(bad)
(bad)
fcomp
out
in
fisubr
mov
sar
fisubr
pop
and
sub
arpl
add
xor
xor
pop
mov
mov
movs
and
inc
rcr
cmp
test
mov
lods
mov
ss
fld
cmps
cmps
lds
dec
call
popf
fst
cmps
sub
cs
jb
add
inc
adc
add
lock
pop
scas
aam
rcl
jae
sub
cmp
push
lahf
or
sbb
jbe
arpl
xchg
fist
lock
jb
fwait
jae
inc
xor
or
push
mov
mov
adc
mov
pop
push
dec
add
and
cli
sbb
dec
push
and
cmp
out
mov
push
popa
add
mov
xor
cdq
adc
pop
and
loope
mov
inc
ins
outs
(bad)
cmp
lods
data16
rol
hlt
mov
daa
repz
inc
mov
xor
xor
into
add
or
dec
lds
push
nop
adc
or
xchg
mov
jge
xor
push
lock
ds
inc
mov
mov
and
in
mov
out
fadd
int
(bad)
jno
rcl
js
adc
push
push
out
xor
add
fiadd
sub
int
fstp
test
sbb
mul
out
pusha
(bad)
cli
jge
(bad)
sbb
cmp
dec
lods
sti
ins
imul
push
in
sub
shl
or
push
jp
cmp
jmp
dec
mov
jl
dec
or
pop
sahf
fild
(bad)
aas
inc
dec
mov
(bad)
and
mov
sti
sub
nop
mov
jbe
adc
sbb
inc
xchg
and
or
sub
dec
loopne
es
(bad)
push
mov
sbb
dec
fucomi
mov
out
fsubr
loope
fsubr
outs
aaa
imul
xchg
inc
hlt
xchg
int
jns
cmp
xor
std
in
movs
or
sub
mov
arpl
jmp
in
jae
dec
fnstsw
test
xor
xchg
scas
out
dec
pop
dec
sbb
xor
cli
pop
or
pop
jns
and
out
dec
mov
pop
mov
and
fcomp
hlt
sub
push
retf
popa
adc
jo
lods
add
xchg
cmp
mov
push
inc
push
stos
aam
iret
sbb
lods
push
clc
push
sbb
outs
(bad)
scas
std
(bad)
(bad)
test
out
add
(bad)
cmps
enter
jmp
cmp
popf
in
jg
stos
jle
int
ins
ror
add
sub
jecxz
shr
sbb
aas
mov
jne
adc
push
adc
fs
and
repz
(bad)
pop
out
repz
adc
stos
and
xchg
sub
stos
jae
and
fistp
stc
sbb
dec
add
add
(bad)
xor
(bad)
inc
xchg
fdiv
aam
pop
mov
cmps
fnstsw
push
xchg
mov
pop
mov
cdq
scas
loopne
and
pusha
add
fnstenv
jo
mov
clc
aas
bound
push
in
pop
out
mov
add
ret
inc
pop
scas
(bad)
dec
je
ds
lods
addr16
pushf
mov
(bad)
mov
sti
cmps
push
push
nop
mov
das
loopne
xor
xor
add
mov
pop
push
cs
xor
cmp
mov
dec
test
clc
stos
fadd
ret
addr16
inc
pusha
mov
lods
stos
call
out
mov
and
(bad)
imul
sbb
mov
adc
dec
mov
mov
hlt
fiadd
aam
daa
shr
mov
daa
fwait
add
push
ds
push
neg
mov
add
fwait
push
(bad)
jne
mov
add
pop
jmp
fidiv
pop
jnp
(bad)
cmp
rcl
(bad)
jg
test
aaa
test
dec
stc
pop
retf
in
mov
fisttp
mov
stos
int3
mov
leave
jge
mov
enter
xchg
mov
jmp
jle
dec
fcom
outs
ins
xor
clc
not
adc
dec
in
or
push
and
mov
adc
clc
sbb
adc
or
push
imul
daa
pop
test
sbb
rol
push
xor
and
fidivr
ret
sbb
or
je
dec
int
hlt
mov
xor
ss
pop
cwde
fcom
aas
inc
pop
xor
push
xor
jecxz
mov
push
lods
cmp
jns
mov
dec
add
push
shl
retf
jns
fsubr
xchg
or
and
ss
add
jmp
das
jecxz
lock
std
xor
cmp
xchg
aas
push
ret
cmp
mov
mov
stos
jnp
das
int3
in
sbb
push
in
es
loop
clc
fdiv
lea
fisubr
loope
dec
leave
(bad)
lahf
jp
bound
cmp
dec
inc
or
adc
dec
lods
push
aam
sub
push
xchg
jne
nop
fnsave
jbe
data16
inc
leave
push
mov
sahf
pop
sbb
daa
inc
ret
dec
jns
(bad)
outs
dec
adc
sbb
daa
push
std
sbb
cld
add
dec
inc
(bad)
dec
pop
mov
rol
and
call
es
out
ins
dec
pop
scas
inc
ins
xlat
aas
out
mov
push
enter
es
jecxz
jecxz
push
xor
scas
sti
jae
popf
cmp
and
fist
add
sahf
ret
jg
in
imul
in
mov
sub
cli
dec
imul
xchg
or
push
and
and
sub
xchg
and
in
repz
(bad)
and
lods
inc
inc
iret
jb
(bad)
fucom
loopne
push
out
jmp
cdq
imul
pop
xor
out
pop
retf
xor
in
cmps
movs
mov
or
push
push
jns
or
push
sbb
cwde
xlat
pop
cld
sub
dec
xchg
lahf
add
and
dec
jno
sbb
sub
test
sub
pop
inc
inc
outs
loope
xor
aaa
je
sbb
aad
sub
mov
pop
shl
mov
outs
dec
mov
out
ficomp
data16
jne
jl
mov
dec
pushf
add
mov
sub
mov
leave
fisubr
mov
or
xlat
sbb
outs
or
fnsave
lahf
das
mov
not
ror
js
xchg
pop
jecxz
hlt
sti
rol
js
jno
mov
sub
mov
push
test
mov
cmp
cmp
mov
jecxz
daa
jae
stos
adc
cs
mov
addr16
test
xchg
ins
cmp
(bad)
in
hlt
mov
cs
fisttp
xchg
(bad)
xlat
int
xchg
and
sub
pusha
and
cmp
cli
fs
retf
leave
sbb
jbe
jle
sahf
jns
jmp
sbb
fcom
mov
mov
xchg
jo
adc
cwde
loope
push
out
pop
mov
jbe
and
add
cmp
xchg
push
pop
push
sbb
adc
(bad)
outs
mov
cmp
cs
dec
jge
or
mov
jmp
aas
(bad)
ins
sub
xor
push
xchg
or
jno
mov
fcom
mov
or
jle
jmp
in
mov
loope
push
sub
rol
in
cs
cdq
leave
mov
mov
int
fist
test
cmp
jno
test
push
js
and
jge
mov
sahf
out
(bad)
frstor
fimul
xor
aaa
mov
push
(bad)
inc
ficom
mov
ss
jnp
jnp
shr
data16
cld
fisttp
and
gs
mov
test
(bad)
(bad)
cmp
outs
fistp
cmp
sbb
aas
cmp
and
dec
dec
xor
pop
xchg
jae
call
mov
and
in
dec
sbb
retf
xor
cmp
jmp
or
test
daa
cmp
js
idiv
cli
lods
loope
adc
dec
mov
lahf
xchg
icebp
fimul
aad
movs
xchg
nop
xchg
(bad)
fst
dec
push
shr
sbb
jns
sbb
cmp
test
adc
nop
push
jb
(bad)
push
lods
scas
push
fcomp
adc
cmp
fld
mov
adc
mov
daa
adc
test
mov
push
sub
xor
aad
pusha
pusha
lea
je
and
cmps
lods
jns
push
addr16
ror
sub
or
das
xor
jl
(bad)
in
jmp
or
sbb
jne
jge
cwde
mov
or
mov
das
push
xchg
dec
pop
sti
test
pusha
cmps
ins
stos
add
sar
daa
cmps
xchg
jo
in
inc
pop
scas
loope
xchg
xchg
pop
leave
lods
adc
mov
mov
mov
push
mov
fimul
popa
mov
inc
push
jne
cmp
pop
jae
cli
fcomp
retf
and
mov
aas
xchg
(bad)
mov
inc
mov
sub
test
adc
hlt
jno
sbb
inc
es
and
test
pop
jne
sub
jle
cli
push
sahf
dec
int
sub
ins
loope
jbe
ins
enter
ds
retf
fdiv
jmp
in
cmc
cmp
mov
imul
scas
pop
imul
pop
(bad)
(bad)
aad
bound
xor
daa
mov
cmps
call
xchg
pop
push
js
cwde
adc
out
mov
aam
enter
int3
cwde
adc
mov
popa
or
push
adc
xor
bnd
(bad)
sbb
mov
pusha
mov
lods
mov
imul
sbb
adc
inc
mov
inc
out
int3
stos
data16
or
pop
push
inc
rcr
sahf
repnz
adc
adc
pop
mov
jl
cmp
mov
jns
pop
push
test
scas
pop
push
or
cwde
cmps
jmp
push
retf
ror
jo
or
stc
or
mov
push
push
add
mov
fild
mov
dec
mov
shr
pop
xchg
mov
inc
mov
sbb
jle
(bad)
pop
(bad)
out
icebp
cmc
ds
push
jge
mov
or
cmc
out
or
lods
fstp
mov
add
test
mov
xchg
mov
(bad)
fist
loope
lock
sbb
pop
outs
adc
jmp
and
ror
out
or
xchg
mov
adc
mov
inc
dec
movs
ds
sbb
xchg
or
dec
sbb
test
xor
inc
fs
cwde
jmp
pop
add
test
mov
inc
xor
or
je
pop
popf
xchg
test
xchg
scas
ss
lds
xchg
inc
jp
mov
pop
pushf
imul
and
cli
movs
mov
fsub
cmc
mov
jbe
call
xor
sbb
scas
jbe
and
js
jge
repz
fucomi
and
aam
jno
jb
pop
js
pop
(bad)
jl
adc
call
js
dec
push
push
(bad)
test
sub
add
lock
push
cmc
ds
push
or
jb
xchg
jp
out
ss
aaa
ficomp
adc
scas
inc
das
fwait
push
cmps
or
xor
mov
add
enter
jne
cwde
add
pop
sbb
lahf
inc
jns
cmp
retf
lea
and
sahf
fcomp
leave
aam
jmp
call
cwde
ficomp
sub
xor
outs
sbb
stc
(bad)
push
adc
call
jo
(bad)
int3
lock
dec
fmul
das
test
(bad)
push
jnp
mov
jnp
shr
sub
gs
add
sbb
loopne
mov
bound
ja
hlt
cmp
fisttp
shl
cmp
je
pop
pop
pushf
std
push
pop
and
cmp
cmp
int3
cmp
add
clc
jnp
inc
(bad)
daa
push
jbe
xor
xor
adc
xor
(bad)
rcl
xchg
mov
or
icebp
outs
aaa
dec
pop
lea
bound
jl
in
push
js
std
cmp
cs
in
or
aas
sub
mov
not
and
inc
out
jno
pop
addr16
ds
in
mov
mov
retf
add
xor
pop
dec
cmc
xor
push
pop
xor
xchg
daa
sub
pop
xchg
pop
test
cmp
sti
and
xor
add
sub
gs
pop
scas
int3
scas
repz
inc
push
pop
inc
mov
sub
add
sub
retf
xlat
inc
enter
lahf
fs
std
das
add
and
lock
push
sub
inc
(bad)
repnz
sbb
add
popa
rol
mov
adc
push
pop
and
sub
(bad)
jb
aad
xor
shl
(bad)
call
aad
imul
and
or
or
gs
dec
movs
cmp
out
aaa
cmps
sbb
in
ds
dec
or
sub
xchg
cmp
in
mov
lahf
(bad)
jmp
dec
test
mov
dec
in
out
or
inc
push
iret
popf
jge
cld
jae
fld
ret
adc
mov
test
sub
icebp
mov
add
aaa
sar
stos
dec
adc
pop
popa
gs
les
pop
adc
mov
xchg
outs
(bad)
neg
retf
and
daa
loopne
mov
mov
or
aad
dec
lea
inc
add
push
adc
test
adc
mov
xor
test
shl
sbb
sar
sub
ja
test
xor
sbb
int
xchg
cmp
sub
loope
add
imul
std
push
pop
xchg
mov
jnp
cwde
xor
ds
outs
jbe
pop
or
jno
ds
pusha
cmovge
sbb
and
cmps
adc
int3
ds
jns
cmp
dec
mov
daa
(bad)
fistp
mov
sub
call
mov
mov
sub
ror
std
mov
inc
mov
stos
push
sub
(bad)
aad
jmp
cmp
xchg
xor
out
push
stos
popa
lock
dec
jmp
fs
(bad)
add
mov
lock
mov
(bad)
sub
push
mov
and
jmp
mov
and
push
jbe
sbb
adc
aaa
jb
enter
pop
call
ja
imul
cmp
adc
fwait
push
retf
inc
mov
adc
sub
push
test
inc
push
adc
jmp
out
mov
cdq
mov
push
add
fs
in
data16
add
mov
add
jmp
mov
jmp
pop
and
icebp
sar
jbe
call
adc
dec
(bad)
sub
aad
or
out
pop
std
test
rol
mov
adc
pop
add
std
mov
ret
sbb
sbb
lock
dec
sbb
fadd
in
pop
lea
push
dec
mov
sub
inc
fs
mov
test
mov
push
stos
mov
adc
jmp
out
push
pop
fidiv
ja
pop
scas
dec
cdq
xchg
cmp
xor
sbb
ret
leave
movs
mov
jns
or
xchg
shl
test
mov
pop
pop
test
sar
jecxz
test
pop
mov
jl
push
push
fcom
shl
and
xchg
popa
addr16
dec
and
jle
jnp
mov
hlt
jmp
mov
cwde
icebp
inc
inc
push
iret
rcl
int3
push
call
int3
arpl
fidiv
mov
mov
adc
call
sub
imul
(bad)
xchg
shr
adc
mov
jno
movs
test
retf
xor
in
push
arpl
and
stc
jge
sahf
pop
js
adc
test
clc
cmps
pushf
mov
mov
xchg
enter
sahf
into
pop
jns
mov
jmp
push
cmps
jmp
sti
push
pop
xor
mov
bound
loopne
xor
clc
(bad)
sti
lods
sub
mov
outs
bound
add
mov
adc
test
es
inc
movs
loope
fwait
ss
xor
movs
jmp
mov
cmp
icebp
out
jnp
mov
outs
mov
mov
stos
jge
pop
adc
(bad)
mov
das
adc
jge
aaa
pop
cmps
stc
mov
and
dec
jne
mov
xor
leave
aam
and
add
xchg
add
dec
jecxz
adc
jge
test
fisttp
les
ja
pop
ficom
mov
push
retf
pop
call
shl
lahf
mov
add
mov
iret
adc
or
push
mov
(bad)
cmp
(bad)
out
in
not
lods
mov
fistp
pusha
lea
and
push
or
pop
add
test
and
(bad)
xor
mov
pop
js
and
sbb
hlt
je
dec
xor
push
cmp
mov
mov
popa
inc
ds
loope
pop
lahf
pop
push
and
jecxz
adc
add
adc
retf
les
mov
daa
mov
mov
jo
dec
repnz
in
or
add
lea
aaa
add
ja
push
stos
nop
mov
aas
mov
sbb
or
and
ins
iret
popa
mov
ja
ret
ja
push
push
sar
pop
aaa
push
loopne
mov
fsubr
lods
pop
or
bound
inc
adc
xor
outs
mov
pop
je
lods
xchg
add
jae
movs
test
imul
jo
cdq
jp
pop
jns
dec
outs
jno
add
sbb
jge
lods
and
(bad)
popf
fsub
cld
or
add
pop
pop
test
sub
outs
push
mov
adc
push
xcrypt-ofb
cmps
test
pop
shr
inc
xchg
mov
addr16
dec
fs
loop
movs
or
stc
sbb
sbb
fisubr
into
cmp
or
rcr
sbb
test
pop
jp
adc
js
js
xor
sub
fcmovnu
fdiv
pop
movs
(bad)
std
test
dec
lods
mov
pusha
ds
adc
adc
mov
ds
inc
or
adc
ficomp
mov
jno
cmp
outs
xchg
cmps
pop
sbb
sbb
cmps
dec
rol
or
and
movs
push
sub
cs
mov
pop
mov
sbb
shl
jle
das
in
in
xchg
xor
rcr
and
rcr
or
xchg
cmp
mov
les
dec
push
daa
ins
mov
movs
jo
movs
fsincos
cmp
xor
and
movs
dec
stc
push
push
lock
loopne
pop
test
adc
jmp
dec
mov
(bad)
sub
jge
cmp
or
test
cmps
add
push
movd
addr16
xlat
or
and
mov
inc
fiadd
bnd
sbb
cmc
xchg
and
add
ins
dec
pop
add
ins
cmp
movs
not
mov
mov
add
jge
xor
sbb
jg
rol
or
aas
adc
jle
pop
clc
jge
out
mov
loope
cmp
and
movs
or
xor
mov
inc
lea
adc
fwait
adc
fist
mov
xchg
inc
or
mov
lods
sahf
daa
xchg
test
jp
mov
hlt
jne
dec
(bad)
jbe
sbb
dec
dec
adc
sub
add
xchg
jl
movs
xchg
pop
popf
iret
test
hlt
in
fist
inc
push
enter
or
dec
xchg
xor
les
and
lods
mov
into
in
das
push
sub
push
sub
add
retf
jmp
jne
inc
jne
sub
sbb
bnd
call
dec
arpl
inc
cmc
pop
cmc
xlat
or
mov
pop
sub
(bad)
and
inc
(bad)
xor
jns
jo
mul
xor
cdq
sti
sbb
mov
adc
jne
retf
inc
ins
push
mov
or
bnd
or
aad
cdq
and
scas
lds
add
pop
rcr
push
xchg
xor
into
jbe
call
ins
add
pushf
mov
ret
cmp
aas
div
xchg
and
and
loope
daa
jecxz
push
gs
out
push
test
push
mov
mov
mov
mov
add
loop
mov
cmp
movs
js
push
jecxz
dec
mov
fimul
xor
and
mov
adc
test
xchg
mov
call
pop
popa
mov
(bad)
adc
mov
add
int
loope
ror
jp
xchg
pop
mov
in
or
(bad)
xor
mov
jecxz
int
and
jno
push
xchg
fistp
xor
daa
mov
pusha
push
or
fs
adc
bound
fld
sbb
mov
or
cwde
inc
lods
fist
movs
xchg
loopne
mov
pop
xchg
mov
stc
dec
in
jns
add
cmp
movs
jmp
lgs
jge
push
(bad)
int3
sub
ficomp
ds
out
mov
loop
gs
push
xchg
xchg
push
pop
jb
movs
xor
xor
jae
dec
hlt
outs
out
test
(bad)
jmp
jle
push
mov
jns
je
jecxz
xor
ins
push
mov
mov
(bad)
jne
cmc
cwde
mov
sub
cli
in
dec
pop
icebp
call
andps
ins
lods
retf
fstp
jbe
hlt
or
pop
inc
xor
arpl
ret
mov
mov
inc
fwait
or
jge
adc
gs
cmp
cmp
sbb
xor
or
jno
jno
sbb
and
inc
aam
or
or
into
add
pop
test
in
jl
out
pop
int3
outs
leave
dec
and
sbb
jg
jge
mov
cs
retf
pop
pop
and
pop
mov
retf
xchg
cld
ins
stos
adc
sbb
cmc
rcr
jle
inc
aaa
sub
or
cmc
fstp
stos
aam
int
sub
dec
mov
lods
test
cmp
mov
push
aad
jge
mov
mul
mov
cmp
loope
loop
jne
inc
mov
cmp
pop
call
jle
dec
jle
inc
pop
pop
outs
push
mov
outs
mov
inc
(bad)
inc
sub
mov
xlat
inc
xchg
push
lds
jnp
mov
or
mov
fs
fld
sar
mov
push
mov
std
inc
mov
popa
popf
dec
xchg
inc
cdq
loopne
adc
(bad)
dec
adc
add
mov
mov
test
jno
ins
or
pop
dec
outs
cwde
stos
xor
sbb
push
mov
cdq
outs
pop
pop
or
adc
sti
and
popf
dec
mov
bound
mov
mov
cmc
jb
repz
es
mov
and
int
out
push
ret
gs
xchg
fwait
xchg
int3
out
jne
aas
jl
mov
adc
pop
shl
mov
dec
gs
outs
jb
sbb
push
cdq
mov
push
mov
lahf
lods
fadd
arpl
fidiv
hlt
cs
xchg
pop
add
fcmovnu
fcomi
fwait
sub
xchg
adc
clc
xor
mov
pop
xchg
inc
xor
outs
sub
inc
sahf
hlt
adc
pop
test
cmps
xchg
mov
sahf
out
pop
cmps
imul
mov
in
cdq
scas
mul
(bad)
cmp
xchg
les
add
sbb
sbb
(bad)
clc
cmps
outs
sub
sti
push
fisub
or
repnz
fucomip
call
les
or
and
or
jnp
pop
inc
icebp
push
and
(bad)
int
add
int
leave
add
int
or
xor
in
ficom
ins
xchg
or
aad
dec
sar
lods
outs
aas
dec
push
enter
gs
and
fsubp
call
out
add
mov
mov
scas
call
mov
popf
xchg
xchg
mov
sub
mov
pop
mov
cmp
dec
cmp
repz
mov
jge
cmc
ins
fdiv
stos
push
loope
hlt
dec
cmp
push
lds
cmp
shl
cld
jmp
push
pop
dec
adc
stc
adc
movs
dec
sub
shl
push
adc
or
lods
jle
jle
adc
xchg
pop
popf
outs
lock
sub
or
jns
inc
inc
fstp
cmc
mov
mov
pushf
das
movs
hlt
repnz
adc
adc
fdiv
sbb
shr
lahf
mov
push
xchg
add
mov
(bad)
add
xor
shr
jl
xchg
bound
cmp
call
sbb
pop
pop
push
popa
pop
mov
xchg
and
push
cmps
popa
fdiv
arpl
or
add
mov
inc
fistp
leavew
fmul
cmps
sbb
lods
or
leave
dec
sbb
cmp
sar
dec
call
dec
stc
adc
mov
(bad)
mov
test
test
(bad)
cmp
call
test
leave
fsubr
dec
dec
sub
bound
sbb
leave
(bad)
sub
mov
scas
xchg
add
sub
lahf
pop
jns
es
scas
sub
movs
outs
retf
jne
xchg
mov
cmp
pop
sahf
cmp
dec
fidiv
aam
cmc
cmp
mov
xchg
cmc
fnsave
(bad)
mov
dec
adc
je
sbb
pop
test
nop
into
ret
int3
adc
add
add
sbb
sbb
fstp
mov
ret
lods
pop
or
add
jae
(bad)
xchg
rcl
pop
std
test
xor
out
cmp
push
ins
loopne
retf
add
sub
in
mov
push
in
xchg
clc
fimul
inc
cmp
push
sbb
push
(bad)
push
adc
ret
stos
xor
shl
sub
fdiv
xchg
pop
repz
je
sbb
xchg
repz
mov
adc
mov
test
xchg
popa
bound
je
mov
add
xor
or
test
je
out
add
fs
lock
out
gs
retf
jp
mul
sti
push
mov
pandn
sti
sub
pop
cmp
pop
pop
and
jmp
mov
mov
cs
cmp
pusha
outs
out
cmp
cmp
or
push
jns
pusha
fisubr
stc
daa
dec
stos
idiv
push
test
inc
cmc
test
mov
dec
out
mov
stc
and
xor
inc
js
shr
shl
pop
pop
dec
inc
xor
rcl
daa
lods
sbb
cmp
or
jnp
mov
stc
sahf
ss
jge
repnz
cld
xchg
les
repnz
mov
mov
js
mov
aam
in
mov
stos
cmp
mov
mov
js
mov
sbb
xor
xchg
dec
pop
pop
dec
icebp
and
bound
push
rol
and
cwde
sbb
mov
dec
aaa
jle
push
and
push
push
ret
add
retf
shl
mov
pop
adc
jg
lods
outs
and
cmp
jne
sub
cwde
xchg
mov
ins
popf
xchg
es
rcl
movs
adc
push
cmps
aam
mov
mov
inc
cli
cmps
inc
xor
sub
cli
jp
xor
fwait
dec
xchg
nop
jno
jg
sub
stos
fdiv
and
popf
xor
(bad)
shr
ror
mov
or
push
xchg
xor
jns
je
pop
xchg
loopne
or
mov
lahf
sub
mov
test
out
push
fdiv
popf
cmp
fstp
sbb
cwde
loopne
mov
lods
(bad)
lahf
stos
in
in
imul
bound
js
or
imul
sbb
mov
jne
mov
jo
pushf
shl
inc
mov
ja
ds
xlat
das
sbb
jg
add
ins
shr
xor
cmp
iret
sbb
fistp
cmc
or
(bad)
pop
push
mov
cmps
test
pop
daa
loop
data16
cmp
jo
mov
ss
xor
mov
jae
test
xchg
and
dec
popa
movs
int
dec
inc
and
int
xor
adc
dec
xchg
aaa
and
sub
stos
mov
push
shl
and
repnz
hlt
add
cdq
fdiv
out
mov
fwait
jo
jbe
(bad)
(bad)
repnz
int
fdiv
adc
(bad)
jp
mov
out
dec
rcr
mov
jg
xchg
imul
inc
test
and
in
mov
add
xchg
and
sub
(bad)
shl
add
cld
stos
push
ds
sbb
neg
sub
sub
loopne
aam
scas
cmc
push
dec
in
stos
pusha
fs
sub
sar
or
jle
dec
adc
inc
sbb
push
xor
mov
add
xor
adc
stc
sub
mov
rep
cmps
push
fist
scas
cmp
mov
test
sub
mov
arpl
sbb
loopne
dec
imul
stos
cli
jle
enter
push
xor
neg
sbb
or
nop
jae
in
fcmovbe
pushf
or
pusha
out
jno
clc
pushf
sbb
jo
cmp
call
adc
sub
enter
dec
jle
and
ins
sar
mov
test
ret
icebp
and
pop
enter
push
pop
ret
xchg
pop
push
cmp
stos
xchg
mov
pop
adc
mov
and
mov
sbb
sub
push
sub
or
shr
ds
clc
ins
mov
mov
repz
mov
mov
(bad)
mov
and
cmp
sti
imul
cdq
shr
or
xchg
pusha
out
icebp
or
xchg
mov
push
mov
std
sbb
xchg
rcr
ret
out
and
inc
and
xchg
adc
xor
gs
and
sbb
mul
jb
das
(bad)
add
inc
jns
and
leave
xchg
fst
mov
add
push
xchg
jns
xchg
push
fcmovnu
pop
es
push
inc
sub
ja
mov
daa
ret
xchg
push
sbb
push
fist
adc
mov
sbb
icebp
nop
push
ret
xchg
in
stos
inc
pop
mov
push
xchg
xchg
push
jmp
and
jbe
je
icebp
sub
mov
ret
mov
data16
(bad)
or
sub
cs
mov
pop
imul
jns
pop
pop
push
pop
dec
cmps
sub
(bad)
std
cmp
xor
xchg
cmp
iret
(bad)
pop
out
mov
arpl
pop
cmps
xor
test
push
mov
sbb
dec
and
xor
cs
bound
xchg
xchg
stos
dec
push
and
jb
xchg
dec
cmp
xor
xchg
data16
lock
daa
jmp
mov
fs
imul
xlat
fstp
(bad)
sti
cmc
mov
xchg
push
scas
stos
test
imul
or
add
shl
(bad)
inc
adc
ret
lds
je
cmps
ret
test
sbb
pushf
pop
pop
jg
sbb
push
mov
push
fcomp
ret
pop
ins
stos
and
hlt
loope
mov
movs
and
call
into
sub
dec
fxch
jle
in
mov
mov
cli
bound
test
pop
ror
shr
inc
retf
(bad)
jmp
xchg
xor
movs
repnz
add
lea
test
pop
jecxz
stc
jno
sahf
mov
lods
stos
call
neg
mov
jle
push
sub
xor
push
and
aas
add
loopne
das
xor
pop
and
or
loop
cmp
call
mov
clc
outs
je
mov
enter
je
(bad)
jmp
pop
dec
shl
cwde
lods
mov
jp
mov
xlat
and
fwait
mov
lds
fimul
pop
mov
out
sbb
test
mov
test
scas
jg
ret
cmp
sar
pushf
in
outs
jmp
(bad)
(bad)
push
iret
or
shl
ja
retf
ret
jbe
call
movs
(bad)
xor
loope
xor
lods
mov
mov
out
cmp
inc
loop
xchg
sub
not
cs
and
sub
mov
adc
adc
and
add
or
xchg
std
mov
pop
jno
movs
xchg
and
mov
xchg
(bad)
mov
aad
addr16
dec
jnp
mov
jmp
push
aaa
lods
xchg
xor
fsub
fdivr
sub
(bad)
inc
jnp
push
test
mov
jg
rcl
and
push
pop
mov
push
sub
or
clc
xchg
add
xor
jne
es
hlt
js
sti
add
mov
sbb
ror
mov
mov
mov
xchg
fcomp
jecxz
cmps
adc
mov
je
daa
jmp
mov
cli
in
loop
adc
mov
lods
mov
sub
pop
mov
jge
mov
sub
out
(bad)
inc
inc
clc
cmc
movs
inc
mov
inc
jecxz
(bad)
push
scas
fwait
xchg
bound
fidivr
sbb
add
xchg
dec
and
das
movs
jp
test
(bad)
or
stos
inc
adc
aas
les
fwait
mov
mov
add
(bad)
push
pop
lods
adc
imul
int
je
adc
jge
jmp
adc
xchg
std
add
sbb
in
mov
dec
mov
lods
lea
jb
adc
sub
ins
(bad)
push
test
cmp
ins
stos
dec
stc
pop
and
sar
mov
in
test
sub
popf
xchg
sub
push
mov
sahf
sub
cmps
lock
leave
test
test
loop
mov
and
pusha
or
sbb
cmp
pop
jmp
cmp
mov
sub
adc
and
(bad)
cmc
mov
pop
jle
sbb
iret
jno
mov
clc
iret
jne
ret
out
ret
push
pop
jno
dec
lods
sub
cld
daa
adc
mov
jne
jno
mov
xor
fnsave
and
ins
sub
fsubr
pusha
adc
addr16
in
sahf
enter
fnsave
inc
jns
lds
xchg
fucomip
out
sbb
jne
mov
daa
mov
jnp
sbb
mov
push
xchg
push
aad
pop
lods
xchg
das
xchg
inc
int
int3
out
les
mov
add
xor
mov
add
sbb
popf
mov
and
in
push
pshufw
ins
dec
xchg
enter
shl
jge
enter
retf
je
dec
ret
cs
xor
sbb
movs
adc
ins
inc
push
sub
icebp
ror
ror
test
imul
lahf
sbb
(bad)
sub
and
jae
mov
outs
mov
pop
mov
aas
sti
test
sahf
and
pop
mov
jle
push
push
jl
mov
mov
pop
xchg
jo
int
push
ins
jno
call
add
adc
ret
xor
push
and
dec
cli
sub
adc
sub
pop
daa
jne
scas
les
mov
adc
sbb
mov
pop
das
sbb
cmps
int
mov
lods
xchg
ja
cli
push
mov
div
sub
sub
ror
aas
push
rol
jne
in
mov
(bad)
xchg
ficom
daa
jle
fisub
mov
fcom
repz
retf
push
pop
test
fcomp
sbb
mov
stos
sbb
mov
mov
mov
popa
in
mov
add
jnp
sahf
and
inc
pop
xor
int
movs
jp
mov
jp
mov
xor
pusha
(bad)
adc
mov
cmp
vunpcklps
aad
out
aad
mov
mov
jp
stos
retf
sub
ins
xchg
shl
dec
stc
ret
sub
cmc
pop
hlt
push
jo
mov
xor
mov
pop
jns
mov
push
add
mov
and
mov
rcr
test
sbb
adc
sahf
sbb
jo
mov
addr16
fcomp
inc
popf
neg
push
or
sub
(bad)
jmp
das
dec
iret
call
xor
data16
mov
or
adc
jbe
jle
xchg
push
adc
xchg
(bad)
fnstcw
mov
retf
dec
adc
and
mov
(bad)
cmc
mov
inc
test
and
add
pop
jle
das
retf
clc
sbb
push
icebp
test
(bad)
xlat
shr
sbb
mov
scas
xchg
sub
mov
push
xor
dec
cmp
cld
(bad)
jo
scas
or
lahf
pop
(bad)
push
push
cwde
adc
cmc
in
xor
neg
adc
adc
jo
adc
jg
sub
adc
mov
addr16
inc
dec
add
fcom
jp
and
pop
push
and
mov
gs
cmp
std
cmp
aaa
arpl
jg
push
mov
mov
sbb
mov
rol
mov
jmp
nop
mov
mov
dec
mov
in
jno
std
or
call
pop
jns
inc
mov
cmc
xor
pop
add
mov
sbb
lods
add
movs
xchg
push
rcl
out
add
in
(bad)
in
mov
sub
int3
wbinvd
sbb
in
repnz
sbb
cmp
out
push
mov
pop
pop
or
fst
int3
jo
jmp
fisttp
push
not
dec
popf
xchg
or
xor
test
imul
push
and
or
jl
push
mov
test
icebp
mov
jb
jb
sub
pop
push
int3
movs
sbb
dec
(bad)
mov
jmp
push
imul
stc
sub
push
les
int
aaa
mov
out
movs
call
ins
shl
push
xchg
loope
loopne
mov
push
mov
ins
shl
es
std
in
mov
mov
ror
int
rol
or
pop
pushf
add
push
fwait
cmp
mov
mov
(bad)
fidivr
or
mov
push
pop
aas
scas
inc
push
repnz
xchg
arpl
pop
add
leave
adc
sbb
sbb
ins
hlt
fistp
pop
xor
mov
cdq
add
rcr
pusha
test
and
jne
ror
pop
daa
mov
jmp
arpl
aas
mov
arpl
les
sbb
int
inc
pusha
mov
mov
daa
cdq
add
popa
mov
add
cmc
inc
mov
dec
jno
fstp
jle
mov
xor
leave
adc
push
and
add
dec
lahf
sub
(bad)
dec
mov
xchg
sub
popf
pop
call
into
mov
ror
jl
or
aaa
jnp
repnz
lods
sbb
or
fldcw
or
xchg
clc
out
lods
(bad)
fstp
(bad)
and
xchg
mov
stc
mov
dec
mov
cmp
aaa
mov
cmp
sub
cmp
dec
cs
pop
jne
test
pop
stos
das
fldcw
push
out
es
fsubr
sub
inc
adc
jns
jmp
shr
ins
xor
add
mov
jo
mov
add
imul
mov
jecxz
and
fdiv
push
add
mov
mov
aaa
sub
jge
into
imul
or
cmp
push
(bad)
outs
inc
xchg
stos
push
or
adc
mov
add
cwde
jmp
ss
lods
mov
js
(bad)
adc
mov
cwde
jmp
ror
imul
stc
xor
inc
jne
push
jmp
mov
mov
aad
mov
aad
repnz
push
scas
mov
(bad)
fimul
call
dec
fisubr
xchg
inc
xor
xor
clc
repnz
outs
call
ins
imul
push
mov
mov
mov
fucomp
in
dec
(bad)
adc
dec
inc
fmul
mov
int
test
pop
mov
jae
sbb
push
add
std
jne
fisubr
dec
loop
test
lods
stos
sbb
retf
sti
add
push
sar
call
cmp
inc
into
stos
sbb
lods
jecxz
(bad)
bnd
add
rcl
sub
dec
aas
out
fdivp
(bad)
sub
mov
or
jmp
data16
ds
cmc
nop
xor
fs
xchg
cld
push
stc
out
jg
mov
es
sbb
sub
mov
repnz
inc
clc
mov
ja
push
sub
ds
jo
cmp
test
add
cmp
cli
aaa
adc
pop
push
xor
vcvtps2pd
and
inc
iret
int3
fnstenv
push
cmp
xchg
add
dec
push
repz
or
mov
lock
push
mov
add
and
xchg
ja
mov
xchg
inc
jp
dec
popf
push
jp
dec
rcr
or
and
retf
bound
sub
fidivr
mov
sahf
mov
jle
(bad)
mov
push
por
push
sub
xor
cmp
loope
adc
inc
cmps
xor
or
es
pop
jo
cmp
xchg
xchg
not
shl
pop
and
mov
mov
or
push
cdq
pop
mov
in
stos
sub
mov
out
movs
xor
pop
aad
fidivr
and
lea
jg
inc
shl
inc
std
or
sar
mul
sub
inc
sar
jno
ds
jbe
xchg
sub
pop
pop
outs
jp
jl
jmp
ins
add
lds
xchg
xor
in
sub
push
and
fcomp
sub
scas
aas
sbb
in
add
test
shr
outs
fwait
jae
mov
fs
fld
fst
sahf
jp
add
mov
js
dec
adc
cmp
mov
push
es
mov
cmp
fcom
jo
out
xchg
into
or
dec
cmp
cld
out
shr
imul
sbb
jecxz
rcr
ret
mov
mov
mov
fist
sub
test
jl
sub
dec
xor
(bad)
xor
push
mov
inc
cmp
mov
loopne
or
sbb
add
dec
xor
xor
stc
push
push
out
loope
dec
cmp
cmp
pop
das
inc
rol
jno
push
xchg
fistp
adc
xchg
or
xchg
jb
jecxz
out
adc
or
inc
xor
cwde
js
loop
ja
inc
mov
and
movs
test
sbb
mov
jecxz
addr16
push
sub
or
push
lahf
xlat
xchg
je
sti
push
inc
sub
xchg
fcmove
mov
ins
shr
add
ins
rol
push
mov
mov
js
dec
in
(bad)
and
adc
jecxz
adc
adc
xor
and
or
dec
mov
pop
leave
loopne
repnz
test
in
enter
xchg
mov
or
fld
sahf
shl
dec
or
(bad)
adc
and
loopne
daa
mov
jmp
and
daa
jle
and
(bad)
lods
mov
in
leave
aam
imul
jne
out
jnp
iret
and
fwait
pop
out
je
pop
rol
daa
mov
mov
cmp
push
add
fsubr
popa
shr
inc
mov
ds
mov
in
fcmove
das
jge
sub
dec
shr
ins
inc
or
les
movs
xchg
movs
dec
das
add
push
mov
sbb
sub
adc
aas
add
das
enter
pslld
sub
xor
or
cdq
adc
lock
ja
sahf
inc
pop
ret
pop
std
pushf
add
inc
fcomp
or
or
out
leave
retf
mov
jmp
cmp
push
aad
(bad)
jbe
mov
into
dec
cmp
sti
addr16
sbb
or
or
add
popf
je
jmp
imul
push
add
in
xchg
jl
test
xchg
mov
or
addr16
(bad)
mov
xchg
jnp
mov
cmp
fs
retf
xchg
aad
daa
cld
pusha
aam
dec
jmp
mov
xor
jns
fbld
ins
mov
mov
pop
fwait
push
lea
adc
leave
sub
mov
scas
add
ror
sbb
popw
cdq
bound
hlt
mov
inc
jg
fwait
int3
push
or
mov
stos
push
jns
mov
push
sub
std
jp
sbb
xor
rol
stos
pop
lods
inc
mov
dec
mov
fld
neg
pop
lock
and
ror
fnstcw
dec
mov
mov
push
inc
cmp
sub
int3
sbb
add
add
sub
inc
lahf
push
pop
cdq
in
adc
std
cmc
imul
jle
jne
cld
dec
pop
daa
mov
and
lahf
push
loope
call
push
mov
jge
gs
fs
ds
pop
loope
sbb
sbb
push
mov
cmps
ficomp
loop
retf
call
das
stos
pop
in
mov
cmps
out
aaa
(bad)
aad
dec
sahf
push
push
sub
and
cmovno
jge
xchg
aad
mov
loop
rcr
or
(bad)
aam
mov
inc
mov
ret
sbb
add
dec
scas
add
sbb
or
out
mov
(bad)
hlt
outs
das
sub
and
pop
loopne
push
pop
xchg
adc
xor
in
mov
sub
(bad)
push
mov
xor
pop
mov
das
test
lods
or
jb
fidiv
xchg
pop
mov
popa
or
iret
rcr
mov
xchg
xchg
cmp
push
or
or
mov
cmp
or
cmp
mov
cmp
inc
mov
lods
xor
jge
cmc
(bad)
std
scas
cld
imul
scas
mov
and
int
pushf
push
adc
inc
push
test
scas
or
call
jne
sub
push
in
stos
and
cmp
lods
loop
mov
inc
pushf
push
dec
inc
js
xor
mul
pop
push
sub
adc
int3
repz
addr16
push
inc
xlat
and
pop
call
scas
shl
dec
or
int3
out
retf
cli
xor
xchg
adc
mov
fdivr
test
mov
sbb
jne
lods
xor
inc
add
jmp
adc
sub
in
cs
pushf
mov
popf
sub
mov
enter
test
das
xchg
shl
sar
retf
lock
pop
add
jmp
inc
call
sub
xor
dec
and
and
loope
(bad)
cmp
xor
cmp
lods
add
les
push
ret
sahf
(bad)
and
add
mov
rol
lods
jl
push
imul
(bad)
sbb
or
add
mov
cmp
sahf
push
data16
sub
sar
imul
push
mov
add
ret
push
jbe
out
xor
jnp
pop
adc
add
ds
stos
addr16
cli
rcl
lock
aam
push
xor
lods
dec
xchg
mov
and
xchg
iret
cmp
cmps
or
stos
nop
jmp
pop
(bad)
ins
jl
lods
xor
mov
pop
inc
sub
pop
push
push
mov
aaa
add
rol
iret
imul
sbb
jmp
call
jg
and
pop
cdq
push
(bad)
push
popf
outs
mov
fcomp
pop
or
jmp
movs
jmp
or
leave
scas
cmc
cld
movs
test
in
nop
popf
call
jmp
(bad)
cld
leave
xor
ror
retf
stc
and
jg
mov
pop
out
imul
or
mov
cmp
retf
(bad)
leave
pop
xchg
test
pop
cld
mov
lods
and
sbb
xor
mov
(bad)
mov
xor
mov
pop
call
fbld
xlat
sbb
pusha
jae
xor
jae
jge
push
test
and
push
out
dec
imul
das
mov
push
or
jae
mov
inc
or
repnz
cmps
scas
xor
sub
in
int
mov
int3
xchg
and
xchg
pusha
stos
cmp
ins
popa
xlat
sar
mov
xlat
loopne
sub
xor
scas
sbb
ret
adc
movs
dec
mov
cmp
ret
bound
push
jns
fst
adc
cwde
pop
scas
cmps
(bad)
int3
dec
lea
xor
dec
fwait
jbe
aad
into
ret
(bad)
push
adc
xlat
cmp
outs
cwde
aas
jle
inc
aam
dec
mov
lock
jge
out
xchg
mov
jno
je
adc
shl
sahf
gs
aad
sbb
xor
cmp
or
and
clc
test
rcl
fnstenv
cmp
jmp
scas
and
inc
movs
stc
fcom
fadd
mov
into
push
xor
popf
pop
pop
aas
adc
sbb
push
pop
mov
push
or
adc
cmp
pop
(bad)
cmp
pop
scas
inc
jmp
pop
loop
cmps
adc
jnp
(bad)
mov
xchg
xchg
add
out
or
outs
jns
push
and
sbb
push
popf
in
test
(bad)
inc
pop
or
xor
xchg
jns
je
icebp
xor
popa
push
lods
and
cwde
das
cmp
adc
adc
dec
xchg
cmp
xchg
out
pop
mov
mov
xor
(bad)
rcl
nop
js
push
inc
sbb
gs
arpl
fstp
sti
sahf
mov
aam
push
(bad)
push
pop
jl
mul
movs
jecxz
adc
out
or
lods
dec
(bad)
sbb
inc
sbb
loopne
and
jne
cmp
test
sub
in
push
ins
(bad)
loope
call
clc
sbb
sbb
rol
push
sub
les
movs
fwait
mov
adc
in
pusha
add
push
idiv
cdq
(bad)
call
cmp
in
out
mov
fcmove
(bad)
(bad)
int
push
mov
enter
mov
aaa
mov
ins
leave
test
xchg
or
cmps
jle
out
cmp
std
aas
iret
mov
pop
adc
imul
lahf
and
sbb
ret
aas
loop
ret
cmps
nop
sub
push
loopne
test
add
jp
jp
cmp
aas
xchg
sub
sti
stos
clc
je
out
cmp
xchg
adc
add
adc
xchg
dec
mov
push
dec
repnz
imul
inc
out
dec
cmp
dec
repz
mov
dec
(bad)
scas
ins
stc
mov
popa
mov
push
sti
jmp
test
push
jne
mov
add
cmp
xor
dec
sbb
inc
pop
fwait
sahf
cmp
push
test
mov
daa
iret
push
rol
cli
xor
mov
xor
add
add
pop
shl
push
mov
shl
mov
pop
add
adc
movs
and
in
inc
sub
inc
retf
js
(bad)
mov
mov
ret
pop
sahf
fistp
into
adc
xor
push
out
push
pop
lock
ins
sbb
fld
lock
pusha
out
push
cli
mov
push
mov
enter
mov
ror
and
stc
clc
int
imul
mov
sub
cmp
jle
adc
pusha
push
jl
in
out
pop
sar
shl
ret
push
clc
mov
test
ds
mov
sbb
lods
cmp
pop
and
dec
ins
xchg
add
(bad)
imul
mov
(bad)
mov
push
xchg
(bad)
ret
lock
xor
jae
inc
dec
mov
xchg
cmps
mov
clc
xlat
and
xchg
pop
cwde
jl
mov
scas
in
ss
xchg
mov
adc
call
fwait
mov
inc
fs
fs
inc
aad
movs
in
nop
push
mov
enter
xor
loopne
sti
fmul
repnz
or
adc
xchg
mov
cmp
(bad)
cld
add
mov
xor
push
inc
jge
or
cs
adc
test
(bad)
inc
fistp
jl
jle
jmp
jo
or
out
pusha
xchg
mov
out
repnz
loope
pop
lea
add
dec
maxps
xchg
push
mov
mov
push
mov
push
dec
(bad)
popa
daa
mov
inc
add
adc
mov
repz
leave
imul
xchg
retf
xor
sub
sub
push
repnz
add
cli
aaa
fild
out
addr16
fld
dec
retf
dec
xchg
push
adc
add
(bad)
xchg
out
dec
stos
xor
out
pop
cmp
les
out
call
pop
jge
rol
ins
mov
pop
push
jle
inc
sbb
ret
or
mov
stos
sbb
fld
movs
xor
adc
sub
stos
jl
or
(bad)
retf
bound
cmp
fsubr
mov
pop
and
fist
sar
cmp
dec
loop
pop
and
jecxz
jnp
(bad)
jmp
bound
cwde
das
inc
repnz
inc
adc
and
mov
sub
jmp
sti
in
cmp
inc
dec
popa
push
out
dec
xchg
fs
dec
shl
fsub
fisubr
fs
inc
in
cdq
push
pop
sub
xor
int
fdivr
test
fcomip
jb
(bad)
dec
push
lds
popf
outs
pushf
test
xchg
jbe
in
cmp
mov
sbb
mov
xchg
test
scas
js
xchg
sbb
jbe
mov
xor
fsubr
mov
sbb
in
loopne
mov
mov
fcom
je
push
mov
mov
popa
dec
ins
repz
stos
fbld
(bad)
jne
cmps
imul
shl
sahf
and
mov
mov
pandn
inc
stc
and
ret
addr16
lods
mov
inc
dec
ficomp
es
cmp
retf
push
aaa
sub
retf
or
xor
xchg
daa
or
inc
call
add
(bad)
in
or
dec
stos
ror
sbb
pop
hlt
enter
pop
or
push
dec
push
xor
mov
mov
daa
push
and
pop
ds
cmp
ror
and
sar
addr16
jb
sti
jbe
mov
fimul
cmp
xchg
jmp
je
inc
mov
fstp
xor
loope
or
sbb
mov
call
dec
sti
bound
clc
mov
sbb
cmp
pop
rep
inc
scas
repnz
rol
jge
mov
js
ror
inc
and
enter
fisttp
dec
xor
stc
pusha
rcr
add
mov
or
(bad)
les
lods
adc
xchg
fmul
js
not
cmp
jle
imul
das
mov
aam
mov
(bad)
retf
into
adc
out
popf
mov
mov
xor
jnp
mov
cmp
retf
(bad)
clc
fstp
sub
mov
data16
lock
inc
ja
popf
aad
mov
sti
mov
jnp
pop
data16
jp
lock
jecxz
mov
inc
int3
jo
push
rol
push
cmps
mov
push
je
fs
cwde
cmp
sbb
push
mov
inc
or
int3
inc
test
cmp
test
daa
sub
xchg
neg
arpl
shl
lea
xor
xor
or
xchg
sub
idiv
xchg
or
sbb
mul
out
or
dec
pop
mov
test
fcomp
xchg
mov
sub
out
fisubr
jno
add
in
cmp
adc
stos
sbb
repnz
and
xchg
jbe
(bad)
outs
mov
out
lods
aam
xchg
ins
xor
fadd
fst
or
jmp
in
jbe
out
cmps
sti
ins
push
cmp
jnp
jno
inc
lods
cmp
pop
jge
mov
jns
mov
mov
dec
outs
add
and
mov
adc
clc
(bad)
jp
inc
dec
fcom
pop
fcomp
add
daa
push
jecxz
repz
xor
bound
pop
daa
pop
sub
inc
dec
push
mov
aam
jo
cmp
cmp
dec
loop
jg
cmp
push
adc
mov
cmp
js
cdq
pop
dec
jo
mov
inc
jmp
rcl
retf
jb
mov
fdivr
xor
mov
in
scas
int3
and
cmp
test
mov
iret
pop
fmul
inc
lahf
pop
or
add
jle
jecxz
jmp
test
mov
leave
inc
jg
push
mov
test
retf
mov
out
rcl
inc
out
push
mov
es
cmps
ror
inc
es
dec
mov
xchg
jl
clc
xchg
addr16
xchg
or
fstp
mov
mov
add
sub
pop
mov
xor
aam
pop
jle
xor
pusha
pop
mov
test
mov
imul
and
in
pop
push
and
xchg
pop
(bad)
aam
int
scas
cli
jno
cmp
test
imul
cmp
xchg
scas
mov
out
and
jne
inc
xchg
gs
dec
lock
xchg
and
arpl
sbb
sbb
xchg
retf
xor
xor
inc
add
leave
jbe
sbb
push
mov
sbb
fild
xchg
pop
fst
mov
not
or
ds
mov
xchg
mov
cmp
cli
vpextrw
jge
lds
mov
(bad)
(bad)
cmp
gs
movs
pop
add
retf
jge
cdq
ret
xor
mov
push
cmp
aam
test
mov
mov
sub
test
cli
js
outs
or
cdq
movs
imul
fsubr
jecxz
xor
(bad)
jno
xchg
xor
mov
xchg
pop
nop
inc
mov
arpl
iret
add
js
push
cmps
jge
xchg
sub
sub
loopne
out
stos
shl
mov
(bad)
mov
add
in
sbb
sti
int
in
jns
cmp
push
pop
sbb
xchg
loopne
mov
das
mov
inc
shl
out
push
stc
mov
test
cmp
adc
inc
mov
imul
xor
add
retf
xor
cmp
mov
add
adc
dec
mov
int3
inc
pushf
pushf
xchg
mov
lea
pop
add
cmp
or
mov
adc
pushf
mov
addr16
rol
test
repz
jae
js
cli
pop
mov
outs
sbb
xchg
retf
lds
pop
std
jecxz
xchg
mov
xor
mov
add
shr
shl
adc
repnz
mov
inc
jne
cwde
inc
push
push
mov
in
aaa
retf
lahf
or
mov
out
dec
mov
dec
xchg
xchg
in
mov
pop
mov
xchg
jecxz
sbb
add
dec
sbb
mov
dec
fs
add
repz
or
inc
sbb
pop
aad
mov
jg
loopne
cmp
clc
xor
and
xor
or
test
aam
shl
into
shr
popf
inc
clc
xchg
lock
xchg
adc
push
dec
ins
xchg
mov
dec
jne
sbb
movs
inc
push
xor
xchg
push
fcmovnb
aad
add
sahf
out
jbe
popa
not
sub
leave
inc
add
(bad)
fist
sahf
lods
xor
ret
push
fstp
xor
mov
jge
adc
cmp
jo
mov
cwde
sub
mov
add
enter
sti
int3
test
sbb
fdiv
lods
mov
pop
test
push
inc
jae
clc
xor
dec
retf
cmps
fild
dec
adc
sub
and
gs
stos
or
push
cld
xor
aad
fidivr
out
mov
mov
inc
mov
loop
xor
xor
mov
mov
push
lods
cli
pop
popf
aas
adc
and
dec
sar
sub
pop
xchg
jg
out
jae
xchg
xchg
shr
adc
xlat
xor
(bad)
jmp
jmp
sbb
test
adc
xor
sbb
xchg
mov
cmp
ror
mov
adc
jp
adc
pop
xchg
sub
imul
xor
inc
pop
test
add
pop
mov
and
iret
xlat
cmc
mov
icebp
mov
mov
fprem1
jp
imul
loop
xchg
shl
jns
not
push
subps
hlt
cmp
es
fnstenv
mov
psadbw
xchg
movs
adc
out
fiadd
push
add
jg
or
fs
fisub
jb
mov
push
sub
jmp
les
sbb
je
dec
push
mov
jp
push
adc
cmp
push
(bad)
mov
add
(bad)
mov
jnp
push
fucom
dec
aaa
(bad)
or
cmp
push
ror
test
lds
addr16
sbb
pop
add
xchg
ds
aas
cmc
(bad)
rol
xor
or
cmp
ins
in
sbb
cmc
push
movs
mov
retf
js
loope
push
mov
or
pop
dec
je
daa
mov
push
pop
or
add
and
inc
jbe
mov
mov
lahf
aas
scas
mov
cdq
cmps
jp
stos
push
jle
push
cmp
and
cmp
fs
data16
cmp
sbb
fadd
push
in
fnstcw
dec
bound
push
sub
fisubr
mov
(bad)
cmp
mov
popa
aam
xor
sbb
cmps
mov
ret
mov
(bad)
or
mov
ins
lds
pop
push
(bad)
rol
in
ins
pop
cwde
adc
cmp
cmp
mov
jecxz
js
loopne
dec
dec
ss
mov
dec
out
jecxz
add
cmp
out
out
dec
(bad)
int3
stos
aam
or
xchg
cmp
scas
sbb
mov
jo
push
pop
mov
inc
aad
xchg
dec
(bad)
retf
and
xchg
mov
inc
pushf
sub
in
xor
shl
es
scas
repnz
add
div
adc
sbb
aad
loope
mov
inc
xor
xchg
iret
js
loop
dec
loop
cld
pop
movs
pushf
mov
fcomp
and
inc
xchg
out
jno
push
repz
cmp
sbb
imul
xor
adc
mov
es
jg
add
pushf
pop
loop
jge
lahf
dec
push
cmp
lock
scas
cmps
neg
arpl
inc
push
jg
ror
imul
icebp
push
mov
sbb
pop
shl
lods
and
lahf
jp
cmps
fwait
or
in
vpunpckhdq
pop
dec
sbb
iret
into
push
add
es
mov
mov
mov
jg
jae
fild
out
mul
and
outs
(bad)
cmc
mov
into
jp
cmp
mov
fstp
sbb
and
lea
pop
xacquire
and
mov
jb
mov
ficom
pusha
pushf
sbb
push
cmc
js
arpl
jp
daa
cwde
iret
mul
fmul
cmp
jecxz
inc
sbb
dec
(bad)
mov
add
outs
mov
jo
cmp
out
nop
pushf
fistp
aam
ja
sahf
pop
ror
jle
mov
adc
xchg
sub
xor
inc
add
aad
(bad)
push
inc
mov
into
pop
mov
sbb
out
call
xor
int3
add
sub
sbb
jl
aad
jno
ins
out
cmp
loope
sahf
xor
call
or
adc
rcl
jmp
stc
addr16
stc
div
pop
gs
enter
adc
outs
jmp
mov
push
test
mov
imul
lods
retf
aam
popf
in
push
pop
je
fstp
add
and
jo
mov
outs
mov
push
jb
in
pop
sub
push
scas
dec
fbstp
cdq
mov
cmp
sbb
imul
or
mov
adc
lock
or
es
repnz
lods
cmp
pop
inc
outs
dec
inc
add
push
dec
pop
xor
imul
mov
mov
mov
div
push
cmp
jb
sbb
(bad)
sbb
adc
rol
pop
out
arpl
out
mov
call
loop
outs
ja
mov
mov
pop
ror
jmp
jle
fsubr
pushf
sbb
imul
push
and
ss
sbb
push
bound
mov
xor
test
mov
jbe
sbb
jmp
test
xor
and
jp
ficomp
pop
int3
popa
ins
lock
sbb
xchg
or
repnz
xchg
fmul
ror
(bad)
sbb
outs
lahf
push
imul
ja
shl
(bad)
or
xchg
mov
mov
xor
out
xchg
adc
fwait
sbb
xchg
aas
mov
mov
jns
shr
push
out
jmp
ret
xchg
cmp
inc
sub
in
popf
mov
ds
sbb
mov
bnd
or
jbe
(bad)
dec
sbb
cmp
das
stc
sbb
add
jns
int3
out
sbb
lock
jg
jp
adc
cmc
sbb
and
jle
mov
lahf
movs
outs
add
cmc
int
hlt
jle
xor
xor
stc
cmp
ja
cmps
call
loope
outs
fs
test
std
fwait
in
sti
push
clc
push
xor
cs
fist
cwde
fwait
and
mov
sar
pop
xchg
sub
and
repz
dec
push
mov
std
enter
jo
mov
jg
shl
push
aaa
ss
mov
jecxz
or
push
xchg
or
imul
in
cld
inc
xor
add
shl
inc
cwde
jge
shl
pop
movs
adc
push
test
inc
pop
or
js
pop
jmp
scas
inc
and
in
xor
addr16
mov
cmp
ret
test
add
scas
mov
fsub
repz
jmp
popf
cdq
mov
mov
jl
jb
loope
mov
push
lock
and
ret
fwait
aad
stos
jns
sahf
sub
push
mov
enter
test
shl
inc
xchg
fimul
or
cdq
test
pop
int
xchg
jl
inc
adc
or
jge
jmp
aam
xor
pop
test
pop
sbb
in
push
mov
xor
(bad)
repz
repz
pop
hlt
jecxz
mov
out
pop
aad
lods
ret
retf
sahf
shr
call
cmp
cmp
popa
cmps
lods
push
cmp
js
in
add
jmp
faddp
push
jo
mov
xor
jmp
push
adc
pop
sbb
add
xchg
sub
rcl
xchg
mov
push
ins
daa
stos
sbb
into
and
enter
xchg
xchg
and
sti
shl
stos
sub
(bad)
cld
test
adc
mov
repz
jae
and
movs
mov
adc
xchg
push
or
bound
cmps
shl
cmps
xchg
arpl
or
push
das
stos
pop
sub
das
clc
fild
ror
je
jmp
out
mov
sbb
inc
loope
clc
mov
int3
sti
cmp
mov
xchg
pop
mov
lock
addr16
push
fnstenv
sahf
add
arpl
cmc
mov
mov
(bad)
retf
into
adc
stos
mov
add
sub
ins
add
push
or
pop
sub
mov
lods
mov
xchg
fild
jnp
repnz
(bad)
jge
jns
iret
mov
imul
mov
and
out
bound
(bad)
gs
mov
push
adc
push
sbb
or
inc
inc
jp
in
mov
push
or
pop
and
cld
dec
mov
test
fisttp
es
add
sub
data16
sub
and
sar
lea
loopne
push
leave
pop
pop
or
cmc
pop
ret
shl
arpl
mov
mul
pusha
movs
jb
stos
mov
adc
enter
loopne
xchg
jb
into
ror
cdq
jnp
mov
xor
push
fdiv
push
mov
jbe
jae
repz
xlat
jb
ret
test
into
pop
in
ficom
imul
outs
sub
adc
push
stos
sbb
outs
jmp
inc
xchg
sub
mov
push
pop
push
shr
sbb
cwde
shl
pop
inc
arpl
fist
popf
xchg
mov
add
lds
scas
sub
mov
in
hlt
adc
std
shr
ins
es
bound
icebp
aaa
rol
mov
aas
sub
mov
icebp
inc
inc
jl
push
jbe
inc
dec
inc
(bad)
js
ret
xlat
popf
in
jno
inc
fld
push
aam
mov
addr16
or
push
mov
cmp
pushf
push
xchg
push
test
add
push
outs
xlat
loop
jg
daa
inc
push
xor
cmp
pop
call
and
pop
mov
sub
mov
cdq
cmp
jmp
inc
add
mov
cmp
shr
mov
ja
add
inc
call
xchg
stos
loopne
data16
mov
cmp
ins
dec
dec
mov
(bad)
repz
dec
imul
or
lahf
test
arpl
rol
jmp
cmp
xor
(bad)
cld
mov
and
je
add
cmp
js
mov
(bad)
loopne
loopne
pop
xlat
sub
shl
mov
sub
gs
test
ins
inc
not
pop
mov
daa
sbb
iret
xlat
repz
push
fstp
loop
mov
add
stos
jle
lock
fdiv
lods
mov
cli
pushf
int3
lea
adc
repz
add
test
and
es
xchg
pop
mov
xor
js
pop
movs
push
(bad)
lods
inc
shr
xchg
dec
push
pop
mov
mov
mov
xor
push
std
push
add
das
xchg
cmp
mov
mov
jp
and
mov
mov
pcmpgtd
paddusw
std
mov
and
xor
popa
out
gs
push
mov
jl
int
stos
addr16
pop
(bad)
jl
add
xchg
pop
aas
xor
mov
(bad)
ror
sub
call
addr16
add
daa
dec
pushf
in
fbld
cmp
mov
fcmove
xor
pop
cmc
fldenv
(bad)
test
dec
imul
outs
loop
int
inc
in
pop
pop
dec
dec
cmps
push
xor
pop
xchg
inc
push
lods
push
dec
jecxz
sbb
jmp
mov
addr16
fst
cmp
xlat
push
lea
xor
lods
and
mov
push
jmp
inc
loope
xor
aam
cmp
ret
sbb
int3
jmp
inc
dec
inc
cwde
or
pop
je
loop
aad
jb
fbstp
adc
and
or
adc
iret
fsub
push
out
mov
das
out
push
cld
shl
mov
imul
aas
mov
mov
cmp
add
cmps
jmp
push
or
dec
add
jb
cmc
stc
sbb
inc
lods
cmp
push
scas
fs
(bad)
cmp
jl
sub
daa
push
add
adc
test
punpcklbw
inc
add
(bad)
rcr
dec
dec
fisubr
jmp
repz
popa
bound
cdq
adc
aam
mov
or
inc
cld
mov
scas
add
aaa
fadd
movs
in
repnz
call
mov
jo
stc
aas
jno
mov
or
lods
add
cmp
and
retw
fisttp
ss
add
nop
and
mov
pop
movs
sub
ins
call
push
mov
aaa
cmp
movs
inc
stc
loope
mov
inc
cmp
jbe
sti
(bad)
pop
cmc
cmp
ret
and
jnp
mov
cld
mov
or
mov
or
push
pop
xor
js
jl
pop
pushf
jno
mov
cmp
iret
inc
(bad)
loopne
inc
mov
retf
lahf
stc
(bad)
pop
cmp
cmps
cmps
and
mov
sbb
je
lds
fucomp
in
sub
xor
mov
jecxz
fbld
cmc
(bad)
or
mov
mov
fxch
ds
push
imul
aaa
out
xor
add
or
push
adc
push
sahf
shr
pop
jp
mov
mul
aad
jl
or
fsubrp
push
cmp
sub
out
test
xor
inc
mov
fist
test
mov
xchg
mov
out
mov
xchg
int
leave
jecxz
pusha
jg
loop
shr
outs
pop
fistp
(bad)
daa
fisttp
inc
(bad)
pop
dec
loopne
or
das
sbb
fldenv
adc
cld
sub
adc
out
cld
xor
xor
xchg
add
jbe
or
jnp
push
ret
inc
cdq
imul
fdiv
mov
das
rcl
ins
sbb
out
sahf
ret
je
mov
popf
cmps
scas
(bad)
bound
sub
jno
mov
mov
sbb
or
rep
les
xchg
jns
pop
mul
dec
ja
scas
push
mov
adc
cs
pusha
pop
sar
xlat
retf
xor
cmp
je
or
pop
out
daa
in
ins
(bad)
fbstp
cmp
retf
dec
push
outs
pop
or
cmps
add
ja
mov
and
cld
in
repnz
mov
or
sbb
adc
std
retf
lds
(bad)
mov
mov
adc
inc
pop
(bad)
dec
not
mov
(bad)
ficom
add
xor
and
pop
cmps
int
stc
cmp
sbb
xor
aam
dec
xor
xor
mov
cdq
pop
add
push
hlt
pop
into
jnp
repz
xchg
jo
rcr
clc
dec
(bad)
ss
push
and
or
xor
xor
mov
dec
and
push
pop
imul
dec
jge
inc
push
mov
xor
lods
push
sahf
cdq
aam
lea
addr16
adc
bound
jmp
push
cmps
jno
arpl
ja
adc
inc
lock
adc
push
movs
sbb
sub
fld
rcl
icebp
jg
daa
jp
mov
movs
jecxz
in
loop
sbb
aas
push
pop
fcmovnu
retf
pop
rol
jbe
rol
mov
xchg
pusha
push
je
fucom
mov
add
aas
js
int3
sbb
test
lds
repnz
push
mov
leave
popa
or
out
and
push
xchg
cmp
mov
movs
xor
xor
and
xor
and
mov
je
sub
mov
push
cdq
out
loop
das
jl
(bad)
jbe
call
cmp
and
cld
add
hlt
fs
clc
sub
mov
enter
xchg
xchg
out
sbb
fdivrp
neg
xor
pop
leave
mov
sub
ret
cmp
retf
jae
adc
les
sbb
ja
or
int
in
movs
ror
pop
mov
ret
jle
das
dec
ds
mov
add
jmp
repz
mov
ss
ret
mov
ss
sbb
fs
fistp
div
inc
sub
cmp
cmps
jb
icebp
add
cmp
mov
(bad)
enter
inc
shl
cmp
das
rol
pop
sti
mov
xchg
mov
pop
and
add
mov
or
mov
push
jmp
out
jae
cwde
lea
mov
jmp
add
or
fnstcw
mov
out
mov
ficomp
call
inc
mov
jbe
mov
push
mov
xchg
cld
xchg
outs
dec
imul
adc
lods
adc
sbb
pushw
xchg
fstp
add
aas
or
lea
(bad)
icebp
lea
inc
and
in
jns
pop
ss
clc
adc
out
arpl
(bad)
stos
xchg
mov
xchg
push
push
xor
inc
lahf
push
mov
(bad)
pop
pop
dec
movs
pushf
jo
jge
adc
lahf
cmps
push
imul
jge
leave
(bad)
mov
inc
dec
sub
mov
cwde
xchg
fmul
dec
dec
ror
and
cmp
sahf
push
mov
add
jae
mov
pushf
mov
push
out
xor
sahf
jmp
mov
mov
push
push
sahf
and
popa
push
mov
inc
jb
repz
in
pop
(bad)
pop
pop
lods
cs
out
xor
addr16
test
ja
retf
retf
or
xchg
and
int
dec
add
fnstsw
mov
in
(bad)
mov
xor
shl
mov
loopne
lods
inc
pop
sub
or
pop
mov
mov
sbb
pop
iret
mov
nop
fdiv
(bad)
repz
xor
cmps
or
dec
push
(bad)
mov
enter
inc
ret
ja
cli
cmps
mov
jne
dec
add
fadd
int3
and
out
pop
sbb
mov
mov
les
shl
lods
or
scas
out
xor
xchg
repnz
loopne
adc
sbb
add
sbb
inc
int
cmp
add
mov
imul
xchg
cli
mov
stos
sbb
cmp
shl
jle
pop
or
pop
sbb
jmp
mov
imul
cmps
inc
aas
jae
int
fs
fsubr
jae
(bad)
cs
std
or
or
push
pop
dec
popf
imul
xor
int3
int
mov
jecxz
imul
sub
sub
shr
xchg
cmp
push
jle
xor
mov
or
adc
push
xchg
int3
ficomp
push
pushf
mov
fadd
movs
sub
mov
and
(bad)
es
retf
adc
jo
pushf
mov
call
and
xor
dec
cli
aas
retf
gs
push
or
and
pushf
imul
gs
(bad)
inc
movs
sbb
clc
xor
add
pop
imul
jno
or
gs
imul
jmp
xchg
xchg
and
push
mov
push
push
mov
fs
or
vandps
sbb
jle
cmps
and
je
(bad)
sbb
jmp
fprem1
loop
mov
out
mov
jbe
push
lock
rcl
pop
sti
xor
imul
pop
cmp
dec
jg
rol
mov
jbe
xchg
aam
loop
or
xchg
pop
sbb
stos
rcl
movs
inc
stc
imul
in
(bad)
into
cwde
stc
jbe
cmp
dec
imul
jne
xchg
mov
in
xchg
mov
outs
adc
or
hlt
and
dec
pop
inc
cdq
xor
or
inc
gs
adc
into
cmp
dec
out
jo
jmp
dec
add
rcr
xchg
push
outs
or
inc
xor
stos
fdivrp
rcl
call
or
mov
sbb
sahf
cmps
jle
push
or
dec
pushf
push
ins
(bad)
shl
mov
dec
retfw
fstp
scas
sbb
cld
xor
cmc
clc
mov
add
or
or
fmul
retf
dec
jmp
gs
je
cmp
or
sahf
push
fwait
push
stc
(bad)
xchg
aas
ror
add
fnstsw
add
fucomip
mul
sub
inc
jae
popf
aam
sub
(bad)
enter
sahf
xchg
aam
ins
jg
sub
dec
add
lods
push
scas
cmp
ins
rol
fsubr
sub
mov
cs
xchg
(bad)
int
mov
jne
loope
jns
adc
and
pop
js
sbb
add
dec
cmp
mov
out
mov
ins
mov
dec
sub
mov
inc
push
mov
lods
jmp
ror
repnz
popa
loop
mov
lds
rol
add
cmp
mov
jbe
neg
jge
xchg
sub
and
popf
stos
fstp
fwait
sub
jo
adc
sbb
call
mov
xor
and
pop
sub
inc
lock
mov
std
jae
or
xor
jle
adc
out
push
xchg
or
sbb
mov
je
mov
mov
popf
pusha
xchg
jo
(bad)
mov
inc
pushf
cmps
cmp
inc
or
int3
dec
sbb
int3
inc
(bad)
sti
adc
repnz
and
cmps
stos
and
cld
out
jp
shl
fisub
jge
xchg
test
test
in
ret
ins
push
xchg
imul
inc
jl
pop
pop
ja
test
out
mov
es
cmp
cmp
add
movs
cld
jbe
push
retf
not
pop
icebp
jp
outs
std
and
ds
gs
js
jmp
aam
pop
data16
lods
test
add
mov
cwde
sahf
(bad)
mov
push
dec
lods
fmulp
pop
and
mov
jo
not
pop
adc
repnz
xor
dec
stc
ins
or
fmulp
pop
repz
mov
mov
mov
cmc
pop
pushf
clc
mov
pushf
adc
sbb
lds
test
pushf
shr
bound
je
pop
mov
fcmovbe
mov
stc
mov
int
pop
mov
hlt
mov
push
out
push
(bad)
xor
or
out
mov
mov
in
popf
iret
inc
(bad)
test
gs
hlt
jge
xor
imul
push
cli
and
outs
clc
sbb
in
jns
test
repz
test
fisub
lock
shr
ds
movs
adc
adc
aam
inc
xchg
dec
(bad)
xchg
sub
lods
scas
mov
mov
data16
jl
and
in
(bad)
mov
sahf
out
xchg
loope
hlt
test
inc
mov
(bad)
outs
mov
mov
jbe
push
jnp
or
out
stos
stos
mov
sbb
out
cmp
xchg
jnp
mov
test
ds
xor
mov
mov
pop
nop
jmp
jge
and
xlat
movs
jle
cmp
je
stos
lock
add
loope
dec
lods
loop
xchg
mov
jb
aaa
shr
xor
rcl
xchg
and
xlat
out
shl
inc
mov
fadd
outs
push
xchg
jl
test
sub
shr
xor
xchg
xchg
sub
cmp
jb
ss
jg
mov
movs
push
loope
out
cmp
mul
xchg
shl
xor
pop
lds
sub
imul
cmc
ss
loop
in
push
jge
jl
mov
mov
pop
arpl
cmp
jecxz
pusha
sub
adc
or
xchg
cmp
xchg
jle
int3
inc
inc
push
in
sub
pop
fdivr
rcr
iret
les
call
aam
dec
loope
jp
xchg
das
xchg
(bad)
loope
fdiv
test
xchg
mov
mov
retf
(bad)
mov
xor
push
mov
ret
lods
inc
mov
ret
fwait
loopne
loop
mov
mov
push
sbb
(bad)
mov
add
iret
outs
(bad)
sbb
icebp
jb
sbb
leave
mov
xor
or
xchg
pop
xchg
inc
sbb
mov
mov
ficom
jae
push
(bad)
sub
mov
and
jne
sub
jne
iret
sbb
mov
int3
test
lea
mov
fbld
jbe
pop
dec
cli
jmp
sub
sub
dec
mov
int3
sbb
pop
enter
mov
call
jnp
xchg
dec
sub
out
loope
cmp
xor
(bad)
push
ret
popa
arpl
cli
xchg
inc
dec
popa
jg
push
retf
or
push
jmp
or
mov
pop
cmps
ins
mov
push
xor
popa
dec
and
xor
jae
cmp
or
ins
out
fnsave
out
out
push
aam
leave
sbb
ins
xchg
pop
add
mov
lock
leave
imul
or
mov
ss
cmp
lss
jbe
rcr
pusha
test
scas
std
arpl
ret
inc
xchg
lods
or
jns
or
stos
or
rol
sub
in
mov
pop
xor
add
pop
test
in
mov
not
stc
cld
stos
test
cmp
pusha
sbb
sbb
int
add
mov
test
lock
outs
aam
nop
jecxz
jecxz
aas
mov
mov
xchg
xchg
pop
sbb
and
push
mov
mov
push
vmovddup
rol
mov
(bad)
lock
pop
and
sub
mov
adc
psubd
cmp
pushf
mov
div
sub
jnp
and
add
(bad)
retf
fcomp
mov
cdq
sbb
sbb
jbe
int
scas
sub
loopne
lods
leave
cmp
call
mov
jmp
ja
mov
rcpps
fist
adc
lds
fnstenv
push
mov
mov
out
inc
aaa
scas
stos
push
std
sub
xchg
fs
cmp
jbe
lea
mov
mov
sub
add
ret
xor
add
and
push
push
fild
ror
outs
add
clc
es
dec
jl
jmp
mov
fs
idiv
xor
and
ret
and
jb
sbb
imul
xchg
add
fsubr
xor
in
add
sahf
mov
adc
ja
mov
mov
push
dec
in
pop
cmps
add
push
adc
mov
add
cmps
and
ficom
in
bound
push
sub
mov
rol
(bad)
fcomp
xchg
std
jnp
cwde
sbb
clc
pop
add
or
sbb
xchg
imul
jnp
ins
sbb
adc
sti
scas
push
test
leave
pop
pop
sar
in
fcom
push
mov
ret
cmp
into
rol
test
int
shl
inc
adc
aaa
nop
sbb
es
in
lds
xchg
pop
test
push
push
cwde
shl
loopne
add
cmp
cwde
mov
adc
mov
mov
push
add
ja
mov
fist
ds
test
push
sub
lea
and
neg
xlat
or
xor
lods
pop
outs
cmp
stos
inc
mov
out
xchg
sub
clc
adc
inc
std
test
dec
push
mov
xlat
mov
sar
mov
into
and
xchg
call
cmp
stos
pop
iret
xor
repnz
(bad)
imul
mov
xchg
fdiv
and
sbb
ins
push
or
cmp
addr16
add
rcl
sub
push
jmp
ss
loop
adc
mov
xchg
retf
mov
cld
sub
jne
inc
xor
gs
stos
lods
es
imul
loop
pop
dec
xchg
es
cmps
jmp
mov
adc
jmp
fst
div
(bad)
ror
dec
mov
mov
ds
pusha
xor
xchg
mov
pop
add
xor
jecxz
jle
sbb
stos
fwait
call
rol
push
iret
cwde
sub
and
imul
(bad)
call
mov
popa
mov
sub
and
loopne
mov
jnp
xor
pop
and
scas
rcl
lods
pop
rol
push
lods
jmp
mov
ret
add
outs
shl
scas
iret
sahf
aam
inc
mov
leave
push
dec
add
(bad)
bswap
fnsave
and
mov
nop
xchg
arpl
lods
jbe
sub
out
fild
xchg
repz
repz
popf
call
fcom
or
ins
int
rcr
in
jns
cmps
mov
inc
cdq
stc
dec
jo
and
stos
test
cwde
xor
movs
lds
js
mov
retf
sbb
cmp
ror
inc
and
push
sub
pop
mov
pop
xor
enter
push
loope
jo
mov
out
xchg
mov
das
inc
xchg
pop
xor
in
inc
jecxz
xchg
leave
scas
jne
push
push
dec
cmp
and
imul
fmul
jmp
loope
es
pop
test
mov
lea
jmp
cmps
aad
and
mov
dec
push
mov
xor
in
fadd
mov
movd
mov
in
pop
loopne
loopne
inc
mov
sbb
inc
mov
std
cmp
in
ins
sub
mov
stc
sti
mov
bound
mov
cmps
cmp
cmp
out
push
push
or
lfs
rol
sub
mov
movs
retf
sub
repz
push
push
ins
jle
xor
mov
sbb
dec
mov
in
ret
out
push
jmp
cwde
pop
imul
mov
test
ins
push
cmp
sub
or
popa
neg
jmp
add
rcr
dec
into
sub
repz
fdiv
pop
mov
add
add
lods
mov
cmp
call
aam
inc
jnp
adc
shl
(bad)
mov
cmp
sahf
clc
mov
and
cdq
sub
mov
jmp
pop
adc
push
out
ja
xchg
sbb
add
pop
mov
dec
xor
in
adc
mov
cwde
sbb
daa
cmp
jns
imul
xor
aam
ss
sub
enter
pop
arpl
cld
in
fldenv
es
push
jae
and
(bad)
cmps
and
dec
fs
es
pop
dec
(bad)
pop
xor
mov
inc
mov
mov
lea
jnp
pop
cmp
(bad)
inc
sub
popa
iret
dec
pop
movs
lahf
mov
xor
xchg
aad
icebp
loopne
mov
jno
lahf
hlt
cld
xor
mov
push
movs
repnz
inc
repz
out
sbb
js
mov
jno
loope
dec
mov
or
jmp
sub
fst
cmc
ficomp
pop
pop
es
xchg
add
int
dec
push
mov
clc
mov
aas
movs
add
pop
clc
arpl
xor
push
mov
pop
lods
ins
pop
inc
dec
dec
inc
pop
call
mov
sahf
sbb
and
jnp
sub
xchg
sbb
cmp
pop
jbe
loope
push
push
sti
adc
push
xchg
aad
adc
(bad)
jns
fsubr
stos
mov
clc
test
jle
arpl
mov
jo
ret
xor
push
xor
ins
push
jl
es
repz
out
mov
xchg
jbe
test
adc
cmp
leave
add
test
mov
inc
push
xchg
xor
xchg
test
pop
ret
enter
repz
jae
ja
mov
mov
ret
(bad)
xchg
data16
inc
scas
mov
repz
jg
cmp
xor
sub
arpl
xchg
daa
sbb
movs
sbb
imul
fwait
inc
xor
or
icebp
outs
sbb
push
jnp
popf
fist
dec
test
mov
(bad)
adc
outs
adc
push
stc
sbb
imul
mov
pop
test
jp
pop
js
cdq
aam
push
lock
and
xchg
inc
mov
push
call
cmp
jo
test
cmp
adc
adc
icebp
call
daa
fnstcw
call
sub
shr
sub
sbb
inc
cli
nop
jl
cs
repnz
pusha
mov
adc
daa
inc
fistp
sub
xchg
xchg
or
xor
sbb
ss
nop
int
adc
mov
vorps
and
cdq
jae
add
jo
jne
mov
rcr
xor
call
adc
fisttp
xchg
cmps
mov
mov
mov
and
enter
jbe
ds
push
cmp
(bad)
xlat
clc
sbb
mov
dec
push
aam
jecxz
push
mov
or
imul
inc
sub
dec
add
push
fistp
cld
push
add
daa
in
xor
or
stos
pop
je
sub
sbb
and
in
iret
and
repz
(bad)
iret
mov
ins
adc
(bad)
xlat
add
retf
inc
inc
adc
pop
mov
and
jg
retw
add
repz
mov
add
or
dec
adc
fisub
sar
add
sbb
test
sub
adc
arpl
push
sbb
adc
pop
sub
jp
jle
mov
sbb
xor
mov
enter
mov
jnp
xor
neg
fs
(bad)
ficom
xor
bound
xchg
pop
shl
mov
jmp
call
sbb
xchg
mov
addr16
inc
xor
mov
into
lea
daa
div
adc
xlat
cmp
mov
adc
or
or
leave
out
or
and
inc
push
inc
in
lods
in
push
lods
jp
dec
into
pop
adc
ret
into
cmp
push
inc
adc
cmp
mov
or
enter
inc
aaa
xchg
mov
jo
retf
ins
pop
mov
sahf
push
add
mov
fwait
pop
xor
movs
mov
mov
and
xor
xchg
push
push
pop
lock
mov
push
mov
rol
jne
inc
mov
in
loopne
cmp
inc
jbe
add
movs
adc
and
push
scas
inc
adc
sub
xchg
or
or
push
aam
enter
xchg
lds
repz
in
push
das
outs
(bad)
xchg
mov
mov
push
lds
mov
mov
pop
adc
into
xor
xor
push
push
dec
jle
(bad)
sub
adc
xchg
and
add
mov
and
sar
mov
mov
mov
xchg
retf
jns
(bad)
out
and
sbb
cdq
adc
mov
mov
cld
push
lods
hlt
les
out
cmp
xchg
add
int
fcmovne
and
adc
and
jge
addr16
arpl
mov
(bad)
fmul
loope
fsubrp
jg
bound
push
xchg
jnp
add
es
icebp
inc
jns
inc
in
and
jne
mov
rol
mov
push
and
and
push
outs
xchg
or
pushf
fs
ja
mov
ret
jb
mov
xchg
movs
clc
mov
jno
mov
mov
out
push
mov
mov
dec
sti
imul
lds
imul
xor
mov
pop
adc
mov
ficomp
sar
cs
sub
inc
cmp
rol
cmps
mov
outs
dec
pop
test
(bad)
neg
push
jp
loopne
(bad)
xchg
cli
fcomi
sub
mov
aas
mov
aaa
retf
sub
push
add
retf
pop
movs
in
(bad)
loopne
and
mov
hlt
sbb
out
or
lock
test
popa
sbb
ss
push
pop
lods
(bad)
xchg
jne
mov
pop
jo
(bad)
in
sbb
idiv
cmp
pop
jo
ins
dec
xchg
jp
xor
cld
fdivr
hlt
or
retf
popf
xchg
cmp
in
cmp
sub
les
call
bndstx
int
jae
daa
jecxz
jae
push
mov
fistp
lahf
add
enter
ret
in
aaa
push
mov
ret
jmp
data16
xchg
cmp
xchg
mov
out
adc
inc
popa
ret
sub
push
xor
lods
enter
jmp
(bad)
mov
dec
call
inc
movs
nop
dec
jle
dec
test
cmps
(bad)
xor
sbb
adc
ds
cmp
imul
mov
inc
scas
ja
adc
call
es
and
push
pushf
movs
xchg
xor
xor
mov
cmps
add
inc
inc
bound
loop
xchg
call
and
sub
inc
inc
xor
mov
fwait
test
add
mov
push
pusha
cmp
ret
jp
out
aam
out
mov
call
pop
iret
inc
sub
mov
fdivr
and
daa
push
sti
je
mov
cmps
les
push
(bad)
std
fstp
adc
sbb
(bad)
mov
mov
push
icebp
stc
cmp
adc
ins
fsincos
add
fcomp
push
sbb
retf
out
(bad)
inc
aam
pop
(bad)
mov
sbb
lods
in
data16
pop
xchg
and
test
xor
push
and
arpl
or
cmc
shr
xchg
scas
lahf
cmps
bsr
adc
cmc
bound
outs
into
in
inc
cmps
mov
cmp
shl
mov
pop
mov
(bad)
popa
xor
dec
inc
rcl
nop
jp
loopne
shl
call
ins
rcr
ret
imul
push
mov
pop
(bad)
mov
mov
dec
repnz
enter
jns
mov
jno
sar
(bad)
test
pop
int3
pop
jl
and
fdiv
push
repnz
mov
hlt
pop
(bad)
mov
popa
popf
xchg
push
dec
jl
inc
lods
addr16
inc
mov
(bad)
push
cmps
imul
mov
mov
retf
arpl
and
leave
fdivr
xchg
xchg
mov
(bad)
into
mov
sub
addr16
cmp
sahf
ins
or
jg
mov
sub
call
fist
mov
push
and
mov
in
push
cmp
inc
cmps
xchg
adc
cdq
gs
inc
ds
mov
les
and
fs
or
outs
sub
mov
es
add
hlt
gs
or
in
adc
int3
scas
ret
adc
fcom
jns
and
mov
fst
aaa
xor
pop
and
outs
mov
cmp
data16
test
stc
jp
out
es
add
test
xor
popa
mov
sbb
cmp
mov
jle
iret
fimul
ja
jns
bnd
ja
mov
enter
jnp
xchg
mov
add
loopne
sahf
ficomp
cdq
iret
xchg
enter
outs
sub
inc
jp
fwait
stos
pop
test
(bad)
mov
mov
sub
and
loopne
push
mov
dec
hlt
stos
mov
mov
in
repz
lds
test
mov
sti
dec
and
popa
inc
mov
popf
std
add
sub
rol
out
sbb
ja
fbld
push
or
cmps
sbb
test
int3
inc
and
pushf
push
xchg
or
das
movs
(bad)
push
test
pusha
xor
std
cld
call
inc
push
sbb
call
lea
push
out
aas
cs
mov
xchg
mov
jnp
mov
pop
fisttp
mov
test
or
stc
fisub
mov
mov
mov
mov
fistp
mov
and
push
test
mov
pop
mov
out
adc
rcr
es
add
sub
dec
out
movs
and
xor
repnz
xchg
leave
jle
add
mov
pop
adc
mov
in
adc
ret
xchg
in
repnz
push
push
bound
(bad)
fist
ret
dec
pushw
cld
cmp
inc
nop
mov
mov
fistp
pop
jb
xchg
iret
or
je
xor
jno
mov
mov
pop
push
shr
dec
dec
jne
out
outs
repz
inc
push
adc
or
xchg
(bad)
ins
mov
test
jo
jb
das
sbb
ja
sbb
add
add
cmp
mov
in
mov
sub
inc
inc
jae
test
(bad)
xor
push
sbb
inc
jbe
aaa
(bad)
push
push
stc
popf
xchg
nop
cmps
push
pop
cld
bound
adc
(bad)
aas
or
(bad)
cmc
and
adc
mov
push
xchg
and
cmp
mov
jmp
cmps
mov
add
mov
inc
xor
mov
sbb
loope
(bad)
xchg
daa
mov
mov
cmp
jo
(bad)
pusha
das
dec
imul
mov
xchg
ds
push
cdq
inc
es
inc
cdq
jo
xchg
mov
xlat
movntq
out
xor
mov
xchg
xor
xor
xchg
jl
pop
addr16
cmp
enter
xchg
pop
cmp
imul
push
xor
shr
push
(bad)
push
pop
fidivr
fwait
or
ret
cmp
add
sub
(bad)
mov
mov
mov
imul
data16
fld
test
mov
push
jecxz
lods
push
enter
movs
es
test
xlat
pop
inc
inc
cmp
xchg
sbb
add
into
test
pop
adc
(bad)
aas
shl
sbb
inc
sub
call
xchg
mov
push
jne
inc
jns
enterw
jle
push
cdq
jp
mov
arpl
pop
xor
fdivr
or
dec
fsubr
xor
es
and
dec
(bad)
push
sbb
adc
sub
lock
jno
rcl
nop
pop
(bad)
mov
je
sub
mov
js
ss
ja
pop
jns
cmp
(bad)
pop
adc
dec
xchg
and
mov
or
or
pop
xor
sub
shl
js
(bad)
lahf
retf
repz
sbb
(bad)
fimul
mov
lock
and
pop
and
movs
loope
lahf
aad
and
mov
lods
inc
bound
dec
iret
fsubr
and
mov
mov
and
clc
ds
jo
push
test
popf
idiv
mov
and
hlt
xchg
inc
jo
pop
mov
xchg
add
jo
test
xchg
adc
and
mov
ins
jb
lahf
test
mov
data16
push
adc
push
or
inc
cmp
(bad)
xlat
xchg
ins
ss
aaa
cmp
inc
scas
ins
add
push
add
ins
fild
inc
outs
push
push
jl
fiadd
jno
sbb
clc
mov
sbb
imul
or
(bad)
(bad)
(bad)
popa
mov
cmp
jns
imul
out
ret
int3
jecxz
mov
test
outs
cmp
push
cli
adc
sbb
repnz
out
cmc
dec
push
mov
jmp
out
clc
add
pop
xchg
push
jnp
outs
add
mov
rcr
jae
adc
mov
pop
or
fadd
scas
jle
push
stos
into
lahf
daa
das
mov
imul
jmp
dec
cli
sub
cmp
in
(bad)
mov
enter
outs
nop
sbb
pop
sbb
call
cwde
or
clc
fnstcw
fwait
xchg
cmps
xor
adc
dec
aad
inc
inc
(bad)
sar
mov
(bad)
inc
xchg
jle
xchg
jnp
idiv
scas
ffreep
(bad)
loope
in
cmp
and
sub
imul
xchg
leave
ret
jae
(bad)
dec
out
push
repz
xlat
pop
cs
das
sti
(bad)
(bad)
mov
test
(bad)
fcmovnb
(bad)
and
pusha
xchg
sub
rcr
repz
add
or
push
add
jmp
sbb
aas
add
sub
hlt
mov
aas
mov
mov
jne
or
or
xor
mov
int3
mov
jmp
ins
inc
(bad)
jmp
add
dec
aas
xor
in
adc
sbb
fadd
mov
adc
adc
adc
nop
pop
inc
(bad)
xchg
cmp
retf
imul
mov
or
sub
mov
test
nop
jae
jns
push
mov
ja
into
adc
outs
outs
add
push
sub
out
js
push
cmp
sbb
aas
call
ss
stos
push
cmp
loopne
jecxz
sti
pop
and
pushf
test
pop
adc
xchg
ret
sub
pop
std
pusha
add
or
fwait
and
movs
adc
push
hlt
ror
fwait
jl
xor
ror
xor
pop
sbb
xchg
mov
push
sub
mov
(bad)
add
sbb
inc
arpl
fs
inc
test
imul
leave
in
add
jnp
jno
jae
jl
ins
cdq
push
inc
out
stos
mov
xchg
and
xor
pop
je
mov
jecxz
jne
or
loopne
int3
pop
stc
dec
inc
mov
cmp
mov
sbb
mov
into
push
adc
bound
push
jl
leave
or
pop
jo
pop
jb
(bad)
mov
xchg
mov
jg
sbb
inc
pop
out
mov
mov
(bad)
in
add
adc
scas
dec
jmp
scas
divps
ret
or
rcl
pop
sbb
mov
sbb
es
shl
push
enter
imul
cdq
sbb
daa
in
jno
shl
js
sbb
lods
ret
xchg
xchg
ins
sbb
mov
bound
jge
and
inc
add
sbb
push
sub
xor
mov
outs
mov
mov
ror
mov
dec
sub
jne
pop
pop
sub
rol
sbb
add
xchg
xor
rol
fcom
aas
or
cmps
cdq
mov
or
jb
and
movs
adc
jno
pop
xor
xchg
movs
rcl
(bad)
stos
fld
jae
mov
jnp
pusha
fdivr
dec
dec
sub
push
mov
sbb
call
pushf
adc
jmp
inc
int3
in
add
fs
ret
mov
cdq
cmc
jle
out
clc
shr
jne
and
xor
xor
jle
lock
pop
add
push
and
jnp
rol
xchg
out
inc
jge
sub
and
and
and
jmp
push
mov
and
mov
retf
pusha
fsub
xchg
bound
nop
push
rcl
sbb
scas
pop
xor
sbb
or
mov
cld
push
popa
sbb
xlat
jmp
dec
lea
lods
xor
in
dec
test
sbb
pushf
rcr
jne
push
sbb
cli
js
xor
push
xchg
jne
mov
inc
adc
pop
mov
retf
inc
test
pop
(bad)
mov
ins
enter
cmp
mov
ins
pop
aaa
popf
xchg
loopne
iret
sub
dec
pop
or
pop
pop
movs
in
dec
adc
scas
nop
das
lahf
test
jl
cmp
mov
ja
mov
add
leave
stos
(bad)
mov
xor
jp
cmc
int3
ins
call
mov
(bad)
xor
call
mov
shl
xor
push
ins
fisttp
mov
fimul
rcl
push
enter
fild
jno
fwait
ret
or
mov
xor
add
cmps
jns
cmps
cdq
imul
push
add
fld
jmp
in
fimul
ror
xchg
or
(bad)
mov
add
sbb
stos
mov
mov
fcom
mov
in
inc
adc
cmp
adc
test
xchg
cmp
imul
add
sub
imul
jo
je
mov
sahf
or
xlat
std
test
stos
call
xchg
movs
rcl
and
mov
pop
push
xor
(bad)
cld
or
retf
pop
bound
sub
and
repz
add
jmp
jnp
cmp
mov
lea
aas
cmp
add
mov
and
in
int
stos
xor
jnp
sub
inc
push
ins
mov
pop
or
sar
xlat
or
jne
popf
and
je
or
dec
add
xchg
add
mov
test
jno
lods
rcl
pop
or
or
pop
lock
push
mov
outs
das
ja
data16
mov
inc
shr
pop
js
jno
cli
repz
mov
mov
cmps
clc
or
int
mov
cs
mov
mov
adc
(bad)
mul
fwait
imul
je
and
ret
mov
sbb
sub
sub
call
mov
and
loop
or
jno
push
test
sub
jl
out
push
icebp
inc
jecxz
jo
adc
sar
adc
js
jb
sbb
shl
cmps
scas
push
pop
lahf
add
dec
mov
scas
(bad)
stos
stos
jno
aaa
das
ficom
in
xchg
dec
test
repnz
mov
adc
fs
hlt
aam
and
rsqrtps
(bad)
mov
pusha
and
(bad)
cs
jl
and
and
dec
pop
bound
loop
popa
adc
jmp
xor
sub
push
lods
add
jg
retf
inc
add
pop
adc
sub
aas
rol
cmp
xchg
add
nop
fbstp
xlat
lods
int
(bad)
push
shr
sti
adc
addr16
and
or
pop
je
test
push
or
ret
cmp
retf
cld
cmp
call
mov
xor
mov
outs
hlt
mov
shl
inc
mov
xchg
leave
call
mov
xlat
push
lock
or
mov
inc
xchg
rcl
and
xor
xchg
enter
inc
pop
adc
pop
mov
jo
(bad)
cmp
xor
push
push
outs
push
or
dec
sub
adc
cmp
pop
lock
lods
sub
icebp
mov
mov
ins
adc
pop
xor
out
push
js
add
out
cmc
jle
mov
jp
add
aas
outs
push
mov
loop
xchg
rcl
xor
imul
icebp
push
pop
test
cmp
jge
out
jmp
or
fnstenv
pop
leave
mov
inc
sbb
nop
adc
jle
lahf
scas
cmp
pop
inc
int
mov
xchg
jge
xor
loop
push
add
or
add
cs
inc
xchg
dec
addr16
xor
sub
retf
sbb
sbb
outs
popf
pop
and
mov
dec
mov
les
mov
jno
stos
adc
mov
loope
push
inc
aad
cdq
inc
out
jno
out
fild
dec
jge
cmps
lods
sbb
cdq
aad
call
sqrtps
mov
jecxz
sub
out
xchg
(bad)
mov
int
push
push
inc
add
int
or
dec
pushf
scas
mov
lahf
fldlg2
cmp
cmp
add
arpl
shl
std
xor
sbb
outs
fidiv
mov
jecxz
mov
movs
pop
in
scas
mov
mov
mov
les
pxor
movs
lea
test
cmp
or
ret
lock
lods
jmp
cwde
clc
sbb
xchg
push
mov
add
aam
xor
push
stc
retf
sbb
outs
ss
outs
arpl
pushf
nop
movs
aad
test
ficom
cwde
add
xchg
inc
jb
jp
mov
pop
fist
adc
mov
je
jns
xchg
jl
xchg
or
or
lock
das
mov
imul
mov
mov
pop
and
loop
cmp
jmp
test
lods
jne
idiv
lahf
push
or
ror
sbb
shr
or
adc
int3
push
dec
repz
sub
mov
or
jbe
loop
jle
push
sar
inc
(bad)
(bad)
jmp
nop
leave
imul
in
icebp
push
fwait
cmps
xor
outs
fbld
adc
dec
std
inc
mov
dec
cld
cmps
lahf
fidivr
jge
aad
inc
dec
and
loopne
or
pop
adc
push
aas
arpl
into
add
stos
push
sbb
iret
pop
mov
xor
inc
(bad)
pushf
adc
pop
adc
rcl
mov
loop
jle
int3
pop
jae
daa
out
jae
push
aaa
dec
loopne
lods
and
push
sbb
cmp
push
push
xor
cmp
mov
adc
mov
inc
push
cs
push
fucom
cmp
dec
push
loopne
jle
mov
sbb
mov
sub
in
movs
cdq
enter
mov
scas
pop
fidivr
out
test
jmp
mov
and
cmps
call
lods
jmp
fbld
xchg
mov
adc
sbb
add
setg
or
repnz
lods
push
bound
and
dec
inc
xor
arpl
or
sbb
jmp
and
jp
adc
mov
enter
adc
ret
loop
mov
mov
pusha
in
sti
imul
mov
inc
adc
mov
imul
adc
or
add
jne
(bad)
mov
cmc
inc
cli
(bad)
and
mov
xchg
push
in
clc
aas
loop
sahf
repnz
out
sahf
rol
push
push
xchg
stos
pop
jg
test
enter
dec
shl
push
ins
mov
outs
(bad)
shl
inc
inc
shl
loope
int
xor
adc
cmp
sbb
pop
outs
ret
fld
fs
addr16
fmul
and
mov
pop
push
dec
sub
xchg
shr
inc
mov
bound
mov
idiv
stc
inc
lock
loope
xlat
adc
xchg
sub
fsubrp
cmp
(bad)
fdivp
cmc
mov
(bad)
jle
into
pop
sub
push
cmp
adc
ret
stos
enter
pop
jne
pop
xor
xchg
push
pop
nop
mov
push
sbb
jns
hlt
leave
xchg
(bad)
mov
stos
and
ins
iret
out
retf
ret
push
mov
jl
sysret
push
ss
add
scas
sub
lock
sbb
call
inc
cmp
fmul
adc
pop
cli
and
push
aaa
lahf
cmc
xchg
pop
add
mov
sbb
movs
push
add
mov
and
arpl
jmp
jle
dec
(bad)
ficomp
lea
mov
enter
arpl
inc
pop
sub
fs
xlat
aas
cmps
rcl
fild
adc
sub
adc
pop
stc
add
xchg
sub
imul
xor
mov
add
int3
inc
fdivr
push
cmp
lds
lahf
mov
push
pop
hlt
mov
dec
daa
inc
outs
jmp
xchg
call
scas
test
and
or
adc
or
movs
cwde
sbb
arpl
ss
outs
xchg
retf
mov
test
mov
or
add
test
clc
sub
xchg
dec
imul
call
(bad)
stos
or
mov
inc
sub
sbb
pop
sbb
das
jp
dec
movaps
pop
iret
std
in
sahf
dec
int3
out
adc
hlt
fsubr
jne
mov
out
rol
sbb
test
mov
pop
mov
imul
mov
inc
or
cli
inc
loope
out
data16
sub
int3
cld
movs
ins
rcl
mov
popf
loope
add
mov
lods
push
jmp
inc
push
add
fimul
dec
pushf
mov
nop
out
pusha
cmp
or
pop
push
std
xchg
popa
inc
cli
sub
xchg
mov
repnz
cmc
add
ins
std
jge
out
pusha
xor
(bad)
out
cmps
fadd
and
inc
(bad)
enter
fild
xchg
loop
(bad)
or
sar
lahf
xchg
lahf
jmp
or
fldlg2
add
mov
pushw
lods
jg
xor
and
arpl
ss
mov
xor
dec
std
sub
or
cmps
cmp
push
xlat
pop
pop
in
test
mov
push
xchg
ss
lods
mov
lock
push
sbb
push
and
push
and
sbb
dec
adc
in
cmp
push
pop
in
call
mov
test
in
test
retf
jmp
cmps
pop
pop
sbb
rcl
jmp
(bad)
jbe
dec
or
out
aas
xor
or
fdivr
cdq
test
xor
ret
push
aas
lea
pop
mov
add
loopne
mov
pop
sub
iret
adc
shl
sbb
cs
scas
and
sbb
int3
dec
xchg
inc
xor
add
and
(bad)
arpl
add
popa
pop
and
les
cs
mov
in
sbb
daa
mov
ret
(bad)
cmps
arpl
cmps
xchg
stos
adc
or
and
pop
aaa
cmp
data16
addr16
cmp
or
(bad)
push
shl
mov
mov
lea
daa
push
das
sbb
mul
loopne
jle
cmp
push
ffreep
aam
ffree
in
imul
cmp
jp
or
jno
pop
jne
mov
sbb
push
jae
(bad)
sahf
stos
mov
or
mov
sub
mov
inc
push
cmp
xor
xchg
imul
pop
dec
les
sahf
stc
inc
xchg
xchg
sbb
dec
or
mov
int
(bad)
or
movs
pop
cdq
out
xor
xor
js
cs
sbb
push
inc
cmps
and
into
cmc
sti
sbb
pop
mov
push
xchg
lock
add
cs
adc
ja
rol
shl
pusha
xor
xchg
icebp
mov
mov
push
cld
cmp
dec
push
mov
sbb
mov
ror
mul
push
aas
push
cmc
dec
xor
dec
and
dec
and
pop
outs
fisubr
xchg
fist
push
mov
cwde
(bad)
sti
loop
pop
inc
push
mov
and
ror
or
fiadd
cmp
and
mov
jle
add
jg
jb
das
or
pop
movs
das
fnsave
pop
jo
sub
frstor
cmp
stos
shl
mov
lods
stc
mov
test
ret
push
jl
push
popa
fst
hlt
jo
bound
ret
cmc
mov
and
scas
(bad)
sbb
into
pop
imul
xchg
dec
fistp
adc
fucom
dec
nop
hlt
mov
jo
je
cmp
in
and
lods
inc
adc
fmul
std
pop
stos
in
or
fmul
jg
or
call
ins
adc
mov
mov
jle
stc
mov
xor
jbe
js
pop
fwait
mov
mov
jbe
nop
lea
call
shl
aad
popa
sbb
loopne
inc
sub
loope
jns
imul
sbb
xchg
dec
in
inc
pop
xlat
inc
and
cs
xor
sub
int
xchg
mov
mov
jae
push
sbb
dec
or
dec
imul
pop
(bad)
cdq
push
xchg
mov
xchg
dec
ds
dec
sub
xchg
pop
movs
jno
push
jns
mov
pop
sub
push
daa
mov
sbb
xor
pop
imul
(bad)
aam
fscale
repnz
les
dec
mov
ror
mul
or
and
gs
cmp
and
(bad)
or
scas
scas
into
stos
push
mov
sti
bound
inc
stos
cmps
int
xchg
popa
adc
sub
int3
push
ins
push
(bad)
xchg
dec
retf
in
neg
pop
pusha
push
leave
mov
ret
(bad)
iret
inc
fdivrp
mov
mov
aaa
dec
adc
or
in
mov
aas
mov
sub
pop
shl
add
adc
or
icebp
push
icebp
loopne
or
push
jp
fnstcw
xchg
add
push
bound
xlat
shr
add
mov
mov
add
jbe
adc
retf
adc
aas
mov
cmc
rol
retf
test
outs
cmps
out
xor
dec
jle
inc
push
cmp
jmp
scas
pop
das
mov
xlat
dec
xor
jnp
dec
cwde
jmp
pop
xchg
pop
pop
sbb
push
add
cmc
ds
push
mov
and
das
xchg
ins
arpl
idiv
cmc
sbb
xchg
mov
dec
mov
add
mov
xor
lock
mov
lods
ins
pop
push
mov
push
xchg
pop
enter
inc
call
lds
ins
mov
and
adc
iret
mov
fs
xchg
shr
xchg
adc
inc
test
jle
icebp
fst
not
add
iret
dec
stos
bound
adc
fs
ficom
dec
pop
xchg
push
int
push
mov
mov
push
inc
rcl
and
pop
xchg
loope
loop
test
inc
xchg
stos
ret
inc
ret
iret
aam
pushf
or
cld
cmps
adc
jae
(bad)
xchg
shl
or
shl
and
jmp
and
inc
xchg
jl
jnp
cli
in
push
arpl
and
xchg
xchg
jne
xchg
sub
sbb
repnz
ss
lods
retf
pop
repz
cmp
(bad)
inc
cwde
dec
int3
or
test
popa
(bad)
pop
cmp
pop
bound
add
rol
lea
fist
stos
ss
mov
fdivr
lods
dec
jne
inc
mov
repnz
stos
mov
sbb
and
push
les
sub
jnp
pushf
aas
push
mov
mov
in
jno
jl
in
mov
push
xchg
daa
pop
and
ja
sbb
push
(bad)
call
adc
retf
inc
test
inc
lods
pushf
ds
es
jns
and
mov
pop
(bad)
inc
in
push
imul
sub
and
aad
jge
test
xor
mov
ins
lock
out
enter
add
mul
pop
mov
add
rol
cmp
fwait
mov
pop
test
jle
sar
mov
loopne
push
jp
dec
xchg
push
dec
ja
mov
push
lahf
lds
std
jns
fisttp
int
mov
jnp
fstp
inc
std
inc
js
mov
or
loope
mov
push
hlt
scas
inc
repz
mov
or
test
xor
cmp
xchg
push
cdq
pop
dec
lods
ds
test
(bad)
fsubr
mov
jns
mov
xor
fisub
cmps
jg
adc
gs
dec
enter
test
mov
pop
add
inc
mov
fst
pushf
dec
sbb
xor
and
push
inc
mov
xchg
jl
jno
mov
shr
mov
adc
sub
xchg
cld
pop
retf
out
int
jno
xchg
daa
mov
adc
sbb
sbb
push
fwait
push
xchg
mov
fcom
pop
lods
xchg
xchg
jl
mov
(bad)
test
scas
mov
pop
das
push
add
ins
ror
bound
clc
outs
shl
inc
(bad)
dec
rol
arpl
mov
ret
out
inc
pusha
mov
jge
cmps
dec
adc
stc
repnz
add
pop
cmp
int3
or
xchg
sbb
es
psrlw
adc
add
fbld
test
in
dec
js
pushf
pop
call
pop
shl
enter
bound
cld
nop
call
cmc
dec
mov
jae
mov
inc
shl
cmp
inc
or
fild
push
mov
add
jle
into
pop
jmp
inc
add
out
cdq
daa
sub
or
test
jmp
xchg
in
push
repnz
dec
test
sub
push
lahf
mov
and
(bad)
(bad)
icebp
in
or
add
and
stc
rcl
cmc
stc
addr16
xchg
popf
inc
or
sub
push
icebp
mov
ror
mov
icebp
inc
xchg
add
push
jp
icebp
stos
xchg
ja
(bad)
mov
jnp
lock
push
inc
test
(bad)
mov
shl
mov
popf
(bad)
jnp
(bad)
call
jmp
jg
inc
icebp
push
push
push
mov
dec
cmp
ror
inc
lahf
or
mov
pop
pop
(bad)
sub
mov
(bad)
jg
(bad)
or
adc
not
retf
cs
test
cmp
sub
leave
jp
pop
pop
pcmpeqd
xor
movs
imul
adc
pop
pusha
or
int
adc
retf
mov
xchg
mov
cs
xchg
pusha
add
or
add
mov
cwde
mov
loop
and
das
sbb
inc
add
jne
ins
fsubr
scas
outs
dec
mov
cmovnp
and
cwde
add
push
jp
sbb
mov
push
cmp
loope
sub
ror
sub
pop
clc
sub
ds
aas
aas
jp
je
xor
adc
pop
push
adc
out
adc
mov
scas
and
jb
popf
jne
arpl
test
push
repnz
popa
dec
rol
pushf
mov
cmps
add
add
and
or
jge
mov
maskmovq
test
loope
inc
adc
adc
jmp
idiv
cmp
push
(bad)
stc
dec
add
sub
push
push
out
ficom
rcr
or
js
inc
in
dec
push
push
fbld
shl
cmp
adc
inc
inc
mov
inc
inc
or
xchg
xchg
fisub
pushf
clc
xor
mov
mov
add
jne
in
fdivr
xchg
pop
inc
cs
dec
mov
ret
mov
pop
mov
pop
cmp
pop
sbb
inc
mov
jo
mov
clc
push
push
push
or
rcr
xchg
retf
sbb
cmps
repnz
jbe
mov
dec
shl
inc
sub
popf
adc
jp
movs
sti
fstp
imul
test
inc
mov
inc
(bad)
pop
jge
sub
(bad)
sti
push
adc
mov
push
dec
pusha
(bad)
outs
ja
cmp
mov
int3
repnz
mov
jp
repnz
ret
inc
stos
jb
or
jbe
gs
test
mov
mov
jb
scas
mov
cmp
fisttp
clc
pop
ins
jmp
int3
les
int3
cmc
dec
les
loopne
mov
movs
jns
sahf
inc
dec
add
retf
jecxz
fsubrp
int
pop
loopne
in
test
lock
dec
dec
call
data16
int3
and
xchg
and
test
jecxz
pop
sbb
xchg
(bad)
into
nop
hlt
xchg
jmp
mov
pop
dec
ss
cli
inc
xchg
xor
inc
test
repz
ins
xor
dec
shrd
sub
inc
out
clc
out
inc
dec
sub
bound
fst
add
aaa
rcl
cmp
inc
adc
cmp
int3
push
cmp
outs
in
sar
out
mov
add
dec
or
mov
loop
pop
sahf
adc
lock
cmp
mov
aam
jmp
bound
imul
add
repz
cmp
pop
inc
fwait
push
sub
mov
jle
push
jnp
lea
adc
sub
jbe
or
jns
sub
out
shl
xor
jae
in
and
push
pusha
mov
test
rcr
push
pusha
in
retf
mov
out
ffreep
sbb
xor
stos
and
and
lock
fidivr
push
dec
xchg
mov
out
ret
xchg
push
or
sti
sub
cmp
dec
lods
sub
leave
xchg
add
add
adc
mov
cmp
adc
push
inc
xor
push
lods
test
js
mov
outs
mov
loope
pushf
shr
push
js
sbb
mov
aas
push
mov
mov
inc
jp
mov
jo
in
dec
push
xchg
fwait
sbb
pop
enter
gs
pushf
test
(bad)
popf
(bad)
push
xchg
fadd
dec
inc
cmp
(bad)
jno
std
retf
push
bound
gs
stos
sbb
lock
and
adc
or
xchg
xor
sbb
adc
(bad)
mov
aad
jp
mov
dec
jecxz
pop
pusha
xor
out
inc
ror
sub
jle
inc
or
fcmovu
jp
in
enter
xor
mov
movs
adc
xchg
or
dec
scas
inc
adc
fst
mov
or
xchg
loope
mov
sub
scas
dec
jl
setnp
loop
in
sub
and
xor
fldenv
push
cmp
scas
jnp
popf
xchg
or
inc
(bad)
jmp
xor
es
adc
push
in
test
cmps
stos
cmp
pusha
(bad)
aaa
and
pop
dec
cdq
fs
push
cmp
pop
dec
xchg
outs
dec
stos
fldenv
scas
xor
shl
fld
repz
push
cmps
xchg
jns
push
enter
cmp
jle
ins
test
clc
dec
arpl
shl
loope
push
pushf
in
mov
xor
mov
test
or
push
cmc
pop
imul
jge
mov
cmp
aam
test
jmp
les
or
ficomp
sbb
pop
rcl
mov
and
cmp
dec
cwde
adc
jge
fs
icebp
xor
out
test
dec
stos
jno
out
int3
fsub
push
(bad)
mov
jne
aas
dec
jge
sub
pop
hlt
cmp
pop
popa
jmp
dec
pop
das
adc
jmp
mov
push
retf
jb
xchg
das
cmp
jno
call
mov
mov
pop
sti
mov
addr16
or
cmp
fs
data16
add
jmp
test
ss
pop
hlt
mov
sub
pop
mov
xor
out
fnstcw
dec
jno
repz
inc
ds
push
dec
add
out
push
leave
int
mov
jmp
test
jge
or
and
and
scas
loopne
inc
daa
xchg
mov
leave
cmc
retf
dec
adc
and
mov
les
xor
mov
or
imul
repz
adc
daa
push
fisub
ret
jmp
ficom
addr16
jmp
pop
das
xor
fwait
jbe
ins
mov
and
outs
jmp
adc
push
cmps
inc
rcr
jns
cmp
hlt
adc
test
cs
mov
mov
scas
mov
retf
xor
xor
cmc
test
pop
cmp
daa
fisubr
adc
xchg
xchg
nop
pop
imul
ret
cmp
js
or
adc
and
mov
int3
ins
clc
inc
dec
jecxz
or
or
jl
lock
loope
(bad)
imul
pop
dec
pcmpgtb
jae
(bad)
fcmove
retf
adc
pop
cmp
xchg
clc
rol
jl
iret
test
iret
repz
lahf
jecxz
fs
call
xchg
xor
loop
nop
(bad)
mov
push
imul
(bad)
fimul
or
and
loopne
shl
inc
fcmove
lods
sub
(bad)
movs
lods
xchg
cli
cdq
cmps
inc
dec
or
sbb
bound
jb
pusha
sbb
jecxz
and
xchg
or
mov
mov
mov
push
adc
jo
push
fst
aas
aad
out
push
sub
bound
jmp
xchg
xchg
fistp
iret
into
out
jle
inc
dec
loopne
jl
lods
add
jo
loope
cdq
pop
push
cmp
sbb
clc
adc
stos
sub
jmp
pop
or
jge
sbb
sbb
lods
out
pop
dec
loop
dec
(bad)
jl
mov
loop
mov
sub
ret
in
pop
int
test
(bad)
adc
test
loop
inc
and
add
or
adc
pop
js
xchg
pop
lea
jo
push
sbb
add
pusha
mov
jp
or
push
push
retf
or
lock
mov
lds
jo
inc
dec
mov
xor
xchg
push
stc
jle
jbe
(bad)
and
in
push
inc
retf
xor
(bad)
movs
and
mov
stos
pop
repz
sbb
sbb
cmp
fld
push
jmp
hlt
push
in
sub
sbb
lods
mov
(bad)
fnstenv
cwde
jge
adc
adc
adc
(bad)
popa
cmps
leave
cmp
xor
add
xchg
pop
push
sbb
dec
push
add
dec
mov
out
or
sub
aas
into
sub
jo
jmp
sub
cmps
in
sub
mov
inc
or
rcl
and
xchg
sbb
add
jg
add
into
test
push
pop
and
cmc
(bad)
mov
jne
xlat
xor
ret
retf
push
and
xchg
xchg
pushf
ret
movs
enter
fcom
adc
je
loopne
dec
stos
sbb
sub
push
mov
mov
xor
data16
mov
or
dec
add
fidivr
pop
jne
popa
sti
test
out
jb
xor
fcmovne
aam
(bad)
test
aad
cmps
cmp
jmp
cmp
jge
mov
stos
loop
pushf
mov
mov
pop
jno
sub
lock
mov
mul
adc
jne
fs
and
mov
cmp
jne
in
jg
dec
popf
mov
adc
adc
jo
lods
bound
jp
push
sbb
adc
jnp
jle
pop
jae
pop
aaa
rol
mov
retf
pop
sub
or
in
mov
mov
stos
inc
stos
(bad)
xor
call
lahf
push
mov
jno
outs
clc
and
jge
mov
mov
shr
jmp
lds
sub
js
ror
cs
out
or
cs
movs
and
gs
fadd
icebp
sbb
adc
popf
mov
(bad)
xor
add
aam
and
(bad)
stos
add
push
outs
jbe
rcr
inc
mov
movs
push
cmps
xchg
inc
mov
xchg
mov
inc
lea
jne
arpl
mov
lock
cmp
add
ss
add
popf
mov
lods
jg
and
ja
(bad)
jnp
lea
cmc
mov
dec
sub
cmp
mov
(bad)
in
mov
call
inc
popa
neg
(bad)
fiadd
cdq
and
add
cmp
rcr
jle
loopne
pop
stos
pop
ja
ret
ins
or
mov
or
cmp
adc
cli
leave
jnp
out
jle
sub
das
test
mov
and
in
(bad)
iret
adc
push
mov
pushf
repnz
out
sbb
arpl
xlat
jecxz
fnop
or
leave
add
imul
pop
dec
push
xor
adc
pushf
adc
outs
mov
push
ins
push
jle
call
adc
adc
mov
pusha
pop
mov
stos
cli
retf
scas
cdq
mov
cmp
mov
ficom
mov
(bad)
add
sbb
je
and
in
fld
fwait
push
cli
lods
test
call
dec
imul
push
or
jg
jl
outs
mov
pop
jo
pop
add
cdq
das
mov
lods
aad
jg
add
cld
mov
xchg
xor
mov
and
sbb
das
enter
push
and
out
dec
sti
mov
sub
adc
aad
ret
imul
js
into
(bad)
xor
adc
mov
sub
add
cdq
add
shl
js
jg
xor
(bad)
pop
(bad)
mov
jb
pop
cwde
push
adc
pop
aad
dec
adc
lods
call
dec
sbb
jno
int
add
xchg
popa
scas
jge
scas
out
push
inc
stc
dec
mov
sbb
mov
and
inc
jg
mov
mov
fsubr
test
mov
sbb
adc
push
mov
fdivr
sub
loope
inc
je
sahf
add
int3
or
cld
fisubr
aas
sub
cli
xchg
popf
and
xor
pop
and
scas
mov
dec
aaa
jmp
ret
xor
push
es
dec
add
movs
aad
xchg
test
test
and
xor
call
push
aam
or
mov
xlat
mov
or
rcl
int
mov
ss
lock
push
xchg
push
and
imul
(bad)
popa
or
or
sti
xchg
cmp
mov
mov
loopne
into
ds
popa
pop
sub
jb
shr
mov
retf
xlat
mov
fisttp
fistp
pop
inc
jg
aam
lock
popf
push
(bad)
in
adc
test
push
or
into
jg
inc
sub
push
inc
jo
les
es
add
les
or
fnsave
jo
add
mov
imul
xchg
or
sub
test
push
fisttp
mov
sub
(bad)
outs
adc
outs
fld
mov
add
xchg
gs
pop
add
test
add
and
pop
neg
inc
pop
shr
dec
and
push
inc
push
arpl
mov
cmp
sbb
in
ret
cmp
imul
sbb
jl
popf
add
cmp
(bad)
ficom
mov
cwde
test
idiv
popf
mov
mov
adc
or
push
jge
icebp
jmp
hlt
sub
push
push
or
add
mov
pop
les
xchg
cmp
cli
push
push
cmp
ror
pop
shl
mov
into
jecxz
inc
dec
icebp
xchg
mov
xchg
fndisi(8087
imul
and
mov
pop
lea
popf
mov
mov
scas
sbb
dec
xlat
push
sub
scas
xchg
adc
clc
or
std
jg
test
dec
lods
xchg
ficom
leave
popa
aad
(bad)
ror
sub
ins
inc
jg
inc
xor
dec
jg
push
or
xchg
pop
(bad)
loopne
and
jae
fcom
and
xor
sbb
xchg
in
(bad)
mov
sti
push
jmp
or
adc
jle
nop
fdivrp
popa
pop
pop
mov
ds
(bad)
adc
arpl
test
xor
pop
mov
cwde
mov
jae
loop
stos
push
stos
retf
std
mov
xor
hlt
inc
lea
cmps
xlat
adc
inc
(bad)
mov
push
push
xchg
test
mov
jnp
iret
out
fstp
inc
ror
or
jne
rcl
mov
or
stc
or
push
mov
mov
mov
pop
jb
rcr
inc
pop
loopne
cmp
in
push
xor
out
pop
push
test
mov
call
sbb
pushf
imul
fldenv
lds
or
mov
jecxz
xor
pop
push
pop
cmp
mov
push
loope
mov
adc
es
and
dec
or
loop
les
loop
cmp
pop
mov
(bad)
lahf
sub
push
aas
and
or
jmp
or
loope
mov
mov
or
gs
jle
out
xor
sub
xchg
into
pop
xor
push
sar
cld
shl
mov
scas
stos
mov
rcl
add
pop
daa
stos
mov
mov
xor
test
pop
out
ins
aas
fxch
icebp
sub
pop
rcl
push
lods
jmp
fst
cmp
(bad)
(bad)
add
les
imul
inc
sbb
and
ret
fistp
js
lods
mov
add
push
movs
rol
jp
or
pop
test
cdq
add
xchg
or
mov
add
xor
adc
jae
cs
imul
fcomp
add
dec
mov
mov
std
add
leave
ret
into
push
push
daa
mov
(bad)
mov
pslld
xchg
mov
(bad)
push
retf
jne
dec
xchg
xchg
jle
add
adc
shl
in
dec
popa
mov
push
xchg
mov
mov
aas
ins
mov
cld
jecxz
mov
stc
adc
dec
sbb
xchg
inc
fldcw
sub
dec
xchg
push
mov
jl
pop
jmp
jge
popf
ja
add
out
sub
push
push
into
retf
push
cmps
inc
dec
cmps
sub
jge
adc
cli
mov
stc
sti
push
clc
dec
push
push
es
inc
pop
pop
(bad)
leave
inc
jae
rcl
push
loop
or
dec
ror
daa
mov
fcomp
ror
(bad)
repz
sbb
mov
aad
(bad)
shl
add
cmc
std
jns
pop
in
xor
dec
xlat
jae
cmp
cmp
in
or
mov
mov
adc
dec
xchg
mov
mov
push
call
sbb
arpl
stos
mov
jg
lea
mov
mov
movs
cmp
inc
gs
inc
in
fidiv
push
ins
movs
xchg
adc
js
mov
loop
add
add
sbb
xchg
mov
sub
and
ds
push
inc
test
nop
les
test
jecxz
test
add
popf
cmp
jmp
repz
popf
nop
(bad)
mov
dec
jecxz
lods
arpl
xchg
adc
or
gs
loope
(bad)
std
jbe
aas
xchg
mov
repz
pop
sbb
popa
mov
push
sti
adc
rcr
adc
out
push
test
xchg
jg
fs
xor
jp
inc
je
data16
popf
push
aam
adc
add
in
add
xchg
xor
push
sbb
dec
lods
cwde
jmp
xor
clc
mov
jne
push
lods
jmp
pusha
pop
sbb
xor
int
not
cmps
xor
repz
pop
and
cwde
push
cmps
xchg
es
lods
mov
mov
call
xor
dec
fnsave
xor
add
add
lods
je
out
mov
leave
add
xor
pop
mov
clc
ret
rcl
stc
in
push
dec
inc
mov
imul
inc
jne
ret
js
loop
gs
lods
fdivp
pop
push
adc
mov
hlt
pop
mov
dec
mov
clc
mov
lods
daa
aas
bound
mov
xchg
mov
dec
addr16
int
retf
ss
pop
inc
push
dec
call
mov
and
test
leave
neg
sub
stc
cmps
jnp
iret
dec
mov
pop
jne
dec
adc
mov
dec
cmp
popa
aas
push
(bad)
call
add
cmp
shl
test
mov
repz
or
cmp
pushf
or
xchg
xor
nop
scas
in
push
pop
mov
or
push
enter
cli
jge
ins
ja
imul
add
das
mov
cmc
les
(bad)
jno
lods
popf
or
dec
mov
ss
not
aad
or
push
int
fdiv
jge
mov
mov
sub
cld
arpl
sti
push
stc
jge
add
clc
inc
(bad)
sbb
cmp
jne
shl
test
dec
les
jp
shl
ins
or
xlat
inc
outs
or
push
ins
push
jne
test
scas
push
adc
aaa
jbe
jle
sbb
in
and
jo
xor
ss
adc
mov
xor
test
call
test
and
icebp
iret
cmp
xor
push
sar
inc
mov
xor
xchg
jmp
les
in
sahf
mov
mov
sub
cmp
or
adc
cmp
lahf
psubd
shr
fwait
nop
les
ja
sbb
out
adc
sub
movs
bound
jle
test
stos
sbb
adc
mov
popf
pushf
dec
arpl
add
ja
sahf
dec
call
and
xchg
jne
mov
push
das
scas
cli
lods
and
cmc
in
pop
mov
shr
shr
inc
pop
movlps
mov
jl
pop
lock
aam
shl
and
inc
xor
fsubr
int
bound
mov
jbe
push
mov
mov
stos
push
aam
jp
jns
mov
mov
rcl
pop
add
(bad)
jae
movs
(bad)
and
cwde
push
in
add
pop
loop
pop
scas
and
aaa
add
mov
or
call
push
jns
push
mov
sub
cmp
repz
fisttp
movs
leave
es
jae
(bad)
je
pop
xchg
push
add
sub
adc
stos
xchg
cmp
arpl
pop
int
xlat
movs
jo
mov
sahf
ja
xchg
ret
adc
loop
out
jecxz
sbb
aas
dec
adc
and
cwde
mov
in
imul
(bad)
fwait
or
sub
add
dec
cs
lds
mov
pop
or
ds
cmp
xchg
add
ins
cmp
xor
(bad)
call
and
fst
shl
mov
dec
cmp
iret
push
dec
icebp
xchg
loope
xchg
fld
daa
jbe
push
or
or
cmp
push
popf
ds
test
out
jmp
sub
inc
cmp
outs
mov
xchg
aam
aaa
sbb
or
(bad)
jo
or
and
inc
lea
aas
mov
cld
scas
pop
cs
mov
cmc
dec
dec
sub
and
sub
push
adc
ins
out
aam
push
dec
jmp
mov
push
and
stos
lods
je
and
adc
out
fsub
or
or
lea
movs
out
mov
int
(bad)
jb
pop
je
and
xchg
(bad)
je
mov
cmp
scas
int
push
jbe
ins
loope
mov
sbb
jno
(bad)
and
imul
cmps
jmp
sbb
jle
mov
sti
cmps
sbb
dec
jmp
hlt
icebp
repnz
or
mov
jge
pusha
popa
or
pop
xchg
push
push
xlat
jne
jmp
mov
in
pop
mov
ret
bound
outs
xor
or
cwde
imul
loope
push
enter
call
lahf
pop
mov
imul
scas
repnz
icebp
sar
pop
or
mov
fisub
in
cwde
inc
outs
push
bound
das
mov
or
lds
imul
out
(bad)
jnp
das
pop
add
xchg
loope
cmps
shl
pop
dec
bound
pop
add
xor
jno
sub
leave
les
jae
dec
into
rol
sbb
aad
fidivr
sub
aam
lods
or
ins
int
shl
aad
push
out
repz
fbld
fstp
push
(bad)
mov
adc
push
(bad)
cmp
sbb
or
imul
pop
jnp
mov
jne
stos
xchg
ins
or
pop
retf
loop
and
jnp
push
mov
in
push
mov
sub
ja
ja
cmp
xchg
sbb
dec
stos
pop
jae
ror
leave
xor
adc
fild
dec
add
pop
jecxz
pop
and
in
ins
and
and
test
imul
xor
fstp
mov
movs
outs
(bad)
pop
popf
lock
dec
pop
enter
mov
dec
jbe
(bad)
loopne
jne
dec
hlt
cmp
sbb
and
stos
add
xchg
sub
mov
shl
mov
out
add
pusha
xchg
fst
addr16
lock
pop
cmps
push
fwait
in
jmp
jnp
in
fcom
adc
out
add
sbb
xor
lock
mov
cli
nop
(bad)
sub
dec
push
bound
sar
inc
push
mov
mov
mov
mov
in
cmp
aad
dec
jmp
and
test
or
movs
retf
fcomp
or
jo
jg
push
push
adc
and
nop
lahf
enter
push
and
dec
pop
mov
push
sbb
push
sti
cmc
(bad)
cmp
cwde
inc
lahf
push
jg
jmp
add
mov
xchg
inc
pop
and
adc
enter
daa
mov
and
mov
adc
out
sbb
pop
pop
outs
pushf
adc
inc
or
imul
xchg
cli
(bad)
in
int3
fadd
jle
loop
mov
inc
pop
inc
push
movs
in
out
jecxz
or
mov
dec
mov
(bad)
out
hlt
dec
cmp
fwait
add
add
jb
mov
lods
dec
sbb
into
xchg
clc
out
lahf
pop
or
xchg
dec
repz
dec
ffree
hlt
sbb
jle
addr16
push
repnz
rol
mov
push
test
ss
pop
scas
xlat
push
into
jo
pop
in
sbb
xchg
lea
jg
imul
sub
cmp
fcmovnu
xor
inc
push
pushf
mov
je
sbb
mov
jae
jns
add
or
mov
pop
cmp
cmp
mov
cmovno
and
fild
inc
int3
js
pop
sbb
and
and
mov
scas
call
xchg
mov
mov
repnz
inc
xchg
loopne
(bad)
sub
xchg
dec
add
loopne
cmp
mov
rcr
jo
sub
outs
jl
adc
(bad)
shr
jp
add
aaa
mov
or
inc
les
inc
jne
iret
add
adc
push
and
shr
mov
out
cld
jl
sub
jmp
ins
fscale
pusha
call
pusha
gs
out
and
pop
cmp
fsubrp
cmp
stos
dec
inc
cmp
popf
ret
xchg
mov
pop
inc
shl
imul
inc
push
ins
push
jmp
jecxz
out
enter
sub
(bad)
mov
ins
stc
scas
sbb
push
add
stos
mov
and
arpl
add
mov
dec
jl
pop
loop
mov
or
and
out
sub
pop
stos
and
das
loop
fwait
mov
fnstsw
push
pop
sub
aas
call
xor
push
sbb
pop
aam
sbb
test
mov
xchg
movs
pop
(bad)
mov
sti
outs
and
jg
lods
jns
mov
add
pushf
ins
dec
adc
outs
or
dec
lods
xor
shl
(bad)
lahf
mov
aaa
mov
pop
adc
shl
test
sub
mov
mov
enter
cmp
or
jg
xor
push
out
arpl
xor
xchg
cmp
icebp
movs
and
loope
int3
aad
pop
ret
out
sub
inc
inc
(bad)
(bad)
push
mov
jb
(bad)
adc
call
sub
cmp
cwde
popf
or
in
(bad)
sahf
dec
enter
and
jmp
fst
sar
icebp
div
mov
shl
in
mov
into
and
(bad)
mov
das
jmp
and
cdq
daa
jge
in
cmp
rol
aam
push
lds
adc
cmps
sbb
sar
cmp
iret
retf
and
cmp
mov
jb
or
shl
push
mov
jp
push
mov
stos
dec
loopne
push
imul
std
sbb
cmps
sub
cmps
push
inc
cmp
les
clc
cs
mov
sub
inc
xchg
or
clc
rcl
cmp
pop
cli
pusha
or
add
push
sahf
in
pop
inc
fstp
jae
jb
in
ja
stos
repz
dec
xchg
(bad)
xchg
ins
cmp
mov
xor
jno
mov
and
ret
sbb
inc
or
sub
sbb
jg
fidiv
ins
outs
ja
add
adc
adc
(bad)
sub
sahf
stos
les
enter
push
mov
mov
push
add
mov
add
rcr
cs
scas
mov
sbb
dec
push
out
or
sbb
jae
sub
lds
mov
(bad)
sub
test
add
add
pop
mov
(bad)
sub
jp
cmp
mov
pop
leave
adc
sub
mov
push
add
and
push
push
inc
xchg
mov
out
fild
pop
jl
jmp
int3
inc
rcl
ja
xlat
lock
dec
test
imul
adc
fcomp
inc
scas
repz
data16
xor
adc
(bad)
push
lds
jbe
int
fs
jp
mov
mov
outs
mov
shr
lahf
xchg
lahf
push
or
cld
pusha
mov
loopne
(bad)
iret
movs
pop
and
pop
lock
xchg
adc
pushf
sbb
push
and
(bad)
clc
into
sbb
rol
mov
push
mov
or
mov
aad
imul
out
mov
jg
scas
das
jp
cwde
rcl
mov
push
mov
push
mov
fs
dec
xchg
mov
mov
or
mov
lods
push
imul
sub
xor
loope
idiv
cld
adc
adc
cli
movs
ins
fldenv
(bad)
add
push
or
mov
mov
fstp
into
popa
mov
pusha
jl
in
retf
in
jl
out
cmp
dec
pop
fld
push
ffree
loop
aaa
inc
out
leave
hlt
in
xor
sbb
out
adc
loopne
ja
jmp
cmps
dec
sar
clc
jo
push
iret
fmul
push
jmp
push
cdq
add
and
les
call
mov
mov
or
out
add
imul
out
loop
xor
stos
leave
(bad)
test
ret
ss
jne
(bad)
(bad)
push
gs
sbb
mov
ins
repnz
cs
push
jne
cmps
dec
and
dec
lahf
inc
pop
xchg
call
scas
mov
cmp
lock
outs
xor
adc
fcmove
pop
hlt
adc
push
push
mov
or
(bad)
mov
jg
call
(bad)
xor
in
lahf
es
pusha
(bad)
xlat
adc
movs
aam
sti
int
les
or
out
xor
stos
das
(bad)
arpl
mov
inc
ja
inc
ss
pop
sbb
add
jge
das
xor
dec
dec
daa
es
and
jns
repnz
or
dec
das
mov
jne
leave
cdq
and
xor
inc
xchg
sub
mov
rcr
mov
inc
inc
imul
inc
add
inc
outs
icebp
push
inc
push
cmp
dec
push
push
xor
or
sahf
inc
rcr
push
jmp
add
icebp
imul
jecxz
mov
clc
mov
out
mov
xchg
sbb
cmovns
daa
mov
dec
cmp
xchg
xchg
sub
xor
xchg
jl
push
loopne
dec
cmp
jg
sbb
sbb
(bad)
in
retf
call
call
adc
jge
jmp
mov
push
les
mov
pop
dec
inc
add
push
pop
cmp
lods
neg
add
clc
test
mov
or
cmp
les
aad
movs
cmps
sbb
dec
imul
adc
jns
mov
inc
mov
daa
fs
xchg
mov
push
fsubr
in
dec
aas
repnz
cmp
fisub
add
aaa
xlat
cmp
xchg
psrld
add
push
aam
gs
cmp
mov
cdq
dec
jecxz
push
fidiv
(bad)
cmp
adc
inc
lahf
idiv
cmp
jns
mov
pop
das
or
jmp
xchg
(bad)
mov
inc
xor
xchg
sbb
sti
stc
adc
inc
fldenv
and
jl
push
call
ds
arpl
jo
adc
sub
sti
cld
and
adc
jb
test
or
(bad)
dec
sahf
sbb
call
neg
pop
xchg
pop
clc
test
dec
jb
ds
sub
cmps
stos
fisubr
xchg
lea
mov
push
lds
mov
cwde
retf
shr
sbb
xor
xor
sti
xor
out
pop
outs
ins
or
sbb
and
dec
out
cmp
xchg
inc
lods
outs
(bad)
pop
jb
(bad)
fcmovu
add
ficom
push
cs
fdiv
in
test
jbe
add
jl
fdiv
mov
dec
rol
scas
push
retf
mov
fmul
in
xor
out
(bad)
sti
out
fdivr
jl
in
out
fcomp
pusha
scas
push
pop
sub
repz
mov
ins
xchg
stos
arpl
imul
iret
or
dec
pop
es
aaa
js
sbb
lods
and
dec
adc
loop
and
les
out
fisub
fcomp
pop
ret
shl
add
xchg
mov
or
mov
jecxz
sub
test
and
push
scas
(bad)
mov
repnz
mov
lods
sbb
sti
cmp
fsub
sub
lds
xor
and
jg
enter
iret
cmp
inc
xor
xchg
cmp
cmp
mov
mov
mov
jae
outs
sub
inc
test
ins
frstor
jno
inc
mov
or
jecxz
cmp
sbb
xor
ins
or
mov
jecxz
dec
jb
clc
ficom
imul
clc
add
movs
mul
xor
push
rcr
mov
adc
mov
mov
push
imul
in
(bad)
sti
inc
add
movs
cmp
ds
mov
jp
ffree
rol
sbb
adc
pop
cwde
pop
jbe
sbb
ret
cdq
call
in
mov
adc
cmp
mov
popf
mov
sub
mov
jnp
cmps
push
push
addr16
sbb
add
in
push
stos
or
cmp
cdq
pop
inc
add
dec
loop
xchg
jae
cs
lea
adc
mov
xor
jno
push
into
sahf
fild
ret
in
push
jbe
push
xor
pop
fst
xchg
popa
jecxz
xor
dec
sti
ret
mov
retf
jae
movs
mov
pop
mov
adc
retf
xor
scas
add
inc
pop
cwde
stos
dec
jns
mov
pop
xchg
repz
out
sub
xor
rol
sbb
out
push
repnz
mov
jecxz
cdq
mov
xchg
fs
xlat
inc
addr16
dec
cmps
int3
retf
ja
sub
rol
mov
push
nop
push
mov
sahf
je
jns
inc
mov
pop
nop
and
std
ficomp
pop
fwait
fwait
mov
out
das
and
add
stos
ret
movs
cmp
pop
inc
js
adc
push
in
jp
mov
hlt
loop
dec
pop
in
jne
inc
push
(bad)
jns
stos
mov
mov
or
(bad)
mov
xchg
push
(bad)
push
pop
inc
ffree
dec
movs
call
scas
(bad)
xchg
(bad)
and
jae
int
data16
stos
fst
xchg
ins
mov
ins
or
add
out
sbb
popf
popf
xchg
(bad)
jmp
cmp
(bad)
mov
es
inc
inc
mov
dec
out
xlat
ds
jne
retf
xor
daa
mov
push
sbb
pop
mov
inc
mov
push
jg
cli
push
fs
test
lds
popf
add
pop
xor
mov
(bad)
sub
iret
push
push
xchg
stc
gs
jmp
sbb
arpl
xor
sti
or
jge
push
and
aam
cld
mov
lock
int3
or
cmp
inc
mov
xor
xchg
enter
pop
jns
dec
aam
adc
cld
mov
inc
inc
fnsave
ins
out
and
loope
(bad)
sti
pop
lea
jge
cmp
int3
adc
jp
lahf
add
call
(bad)
push
cwde
lahf
jmp
and
push
fnstcw
mov
ret
mov
sbb
jle
neg
lods
inc
sbb
and
dec
add
pop
cmp
cmp
shl
mov
arpl
pop
leave
retf
jne
xlat
and
mov
in
daa
jl
(bad)
retf
mov
xchg
xlat
or
cmp
pop
iret
mov
aaa
mov
sub
fsubr
push
mov
jge
dec
stc
add
es
jg
add
xor
std
inc
int
ins
enter
aam
mov
out
push
push
(bad)
sbb
jg
and
jecxz
xlat
mov
add
lods
pop
fst
push
loopne
lahf
(bad)
fdiv
xor
in
cmp
punpckhdq
cmp
jno
(bad)
imul
lahf
pop
(bad)
push
cwde
xor
push
adc
mov
cmc
test
pop
test
dec
cmp
int3
out
out
js
mov
pop
jmp
mov
popa
jbe
test
cmp
pushf
imul
fstp
adc
mov
retf
rcr
test
fiadd
inc
into
test
or
outs
int
pop
inc
mov
sbb
sbb
xchg
xlat
das
push
and
pop
mov
pop
call
pusha
sub
jae
aas
push
mov
loope
imul
int
daa
add
push
push
(bad)
imul
push
mov
retf
jo
call
imul
icebp
loope
adc
adc
or
out
or
sub
pop
pop
or
into
sbb
xchg
pop
push
sbb
outs
inc
lods
sub
mov
fs
scas
cmps
data16
mov
std
ror
xlat
call
int3
mov
or
xchg
adc
sbb
imul
mov
fcomp
inc
mov
popa
jg
push
sbb
mov
fwait
sub
lds
ror
retf
data16
adc
ror
dec
or
cmp
je
inc
pushf
cmps
xchg
push
retf
into
sub
push
loope
jp
dec
xor
out
xor
add
loope
lods
popf
sbb
xor
lods
int3
add
js
fdiv
mov
adc
out
mov
jns
cs
loop
hlt
lahf
lock
int
lock
add
push
jnp
pusha
popa
adc
rep
(bad)
icebp
call
push
fsub
and
push
loop
and
add
ins
dec
jne
mov
in
ds
(bad)
jl
test
and
sbb
retf
aam
sbb
cmc
movs
add
js
arpl
fwait
outs
(bad)
fs
cmp
mov
mov
inc
sub
xor
jmp
rcl
test
or
aam
fcom
pop
leave
cs
mov
nop
inc
data16
or
cli
daa
(bad)
rcr
aaa
(bad)
dec
mov
bound
inc
push
add
mov
pop
pop
xchg
lods
cmp
adc
xchg
or
sbb
mov
sbb
retf
rcr
jbe
inc
mov
in
lods
sar
pop
nop
lds
push
dec
jle
cmp
dec
addr16
ret
push
adc
and
jne
xchg
shl
(bad)
and
sbb
lods
and
push
outs
inc
cmp
cmps
ja
lock
push
sub
push
sub
fsub
sbb
push
and
sub
mov
mov
mov
(bad)
movs
jmp
(bad)
xlat
lods
les
addr16
and
fnsave
cmp
aas
loopne
cmps
hlt
and
retf
mov
add
dec
seto
pusha
cmp
add
sahf
mov
stos
popf
sub
pop
jb
(bad)
loope
hlt
adc
jno
and
inc
fwait
push
push
pop
add
mov
nop
rcl
sbb
jecxz
jno
add
mov
fidivr
inc
outs
adc
popf
ret
jne
sbb
push
pop
xchg
shr
sub
sub
outs
or
lea
jne
xchg
fidivr
stc
dec
stc
frstor
loop
adc
mov
mov
test
dec
sar
inc
xor
jb
ficom
cmp
xchg
push
aaa
mov
pop
xchg
sub
loop
xor
xor
inc
cdq
adc
mov
mulps
xor
loop
cmp
push
retf
bound
cli
popf
mov
pop
cmps
repz
mov
sbb
jo
adc
ret
inc
shl
rcl
xchg
mov
popf
dec
imul
jne
adc
repnz
rcr
mov
(bad)
sbb
sbb
out
sub
mov
inc
(bad)
loop
dec
mov
mov
sbb
dec
dec
mov
jmp
sbb
ins
ss
cmps
jb
ds
and
leave
pop
push
aaa
mov
or
and
(bad)
in
ins
mov
pop
ror
dec
pop
addr16
fmul
ss
and
(bad)
not
add
or
push
jb
adc
push
inc
test
push
xor
repnz
cwde
push
push
in
xchg
es
push
aas
iret
mov
or
jecxz
stos
push
adc
and
add
test
lods
out
mov
push
aas
mov
and
addr16
lea
jmp
addr16
loopne
iret
cmp
mov
rcl
or
push
jp
and
jecxz
pop
cmp
mov
sub
ja
mov
add
out
mov
ss
mov
push
mov
mov
xchg
push
and
mov
fs
mov
add
inc
push
fsub
aaa
enter
rcpps
leave
dec
sar
mov
jo
ins
cmp
sub
cli
mov
fistp
mov
xchg
daa
adc
mov
cmp
outs
les
xor
js
inc
push
cmp
out
xchg
clc
loopne
xchg
inc
int
inc
rsm
setl
adc
rcl
aad
inc
inc
jecxz
ror
retf
pop
xor
pop
cmp
loopne
sub
inc
ds
nop
push
xchg
pop
movs
mov
xchg
push
inc
jecxz
leave
mov
sub
shl
push
cmp
ds
aas
mov
das
dec
pushf
cmps
pusha
add
push
add
jl
ds
sub
push
adc
and
test
cld
push
movs
mov
dec
cmps
mov
jbe
or
repnz
fdiv
hlt
retf
lods
mov
or
sbb
mov
fnsave
mov
dec
and
ins
(bad)
js
push
push
test
fwait
mov
test
pusha
loope
mov
xchg
out
bnd
mov
adc
fsubr
test
push
outs
xor
es
mov
ins
pop
pop
pop
sbb
ins
sti
(bad)
and
movs
out
xchg
pop
xchg
clc
push
test
sub
add
fnstcw
cmp
add
jl
retf
outs
push
and
xchg
aaa
mov
sub
rcr
push
adc
push
or
add
dec
sub
mov
daa
(bad)
mov
push
sbb
pop
xor
ins
imul
arpl
or
mov
adc
mov
sub
loop
adc
(bad)
sub
jmp
out
mov
inc
dec
sub
sub
xlat
pop
xchg
rol
sbb
scas
stc
mov
push
icebp
adc
push
xchg
adc
ss
xchg
call
sbb
xor
jle
push
push
sub
xor
mov
mov
add
popf
imul
fld
test
ins
cmp
repnz
push
test
vmwrite
inc
or
outs
push
sahf
jne
adc
pop
mov
or
jmp
cmp
nop
push
ja
cmp
nop
xchg
(bad)
out
pushf
fucom
cmp
add
mov
or
xchg
popf
jg
xchg
xchg
fwait
js
adc
daa
cs
cmc
dec
imul
nop
in
cmp
lods
mov
mov
mov
fwait
cmps
les
clc
adc
fadd
retf
jno
pop
call
jecxz
(bad)
pop
ja
xchg
cmp
movs
jae
jl
in
xor
push
lds
xchg
(bad)
scas
mov
xor
pop
into
fldlg2
std
xor
pop
or
leave
dec
mov
lea
call
scas
test
shl
jmp
jle
add
or
scas
(bad)
sbb
and
je
inc
or
sub
sti
and
xchg
fdivr
jmp
ficom
enter
leave
cmp
fstp
imul
cs
loopne
mov
adc
or
iret
inc
xchg
sub
jl
pushf
arpl
lods
and
int
clc
cwde
in
xchg
mov
iret
jbe
fisttp
and
jae
lea
cmp
js
xchg
in
lods
shl
fwait
dec
xchg
lock
xor
je
sahf
mov
sub
into
mov
out
xchg
js
test
mov
mov
and
fld
mov
jno
inc
pop
jp
ret
dec
cs
imul
cdq
sbb
or
xor
inc
jmp
pop
sub
int3
xchg
cs
call
fwait
push
lods
and
inc
cwde
pop
in
imul
retf
aad
xchg
mov
imul
fld
push
sar
test
aaa
push
mov
aas
sub
xchg
call
jne
or
loop
add
mov
add
adc
fldcw
stc
lea
stos
pop
xchg
dec
ins
les
dec
jo
sub
and
cmp
sub
pop
inc
xor
adc
(bad)
in
pop
movs
hlt
or
or
cmp
ss
iret
(bad)
jmp
jns
xchg
hlt
dec
or
mov
into
inc
pop
add
(bad)
or
push
push
daa
(bad)
sbb
movs
retf
enter
jecxz
sar
push
repnz
bound
das
dec
mov
sub
ss
push
sbb
ja
fs
jl
lds
ret
pusha
ror
pop
movs
ror
lahf
stos
pop
shl
xchg
sbb
ins
inc
dec
ins
out
mov
push
rcl
xchg
outs
mov
cmp
(bad)
cmp
sbb
(bad)
dec
inc
sbb
in
jbe
mov
sbb
adc
test
push
push
mov
rcl
xchg
int3
stos
dec
pop
(bad)
push
sbb
push
sbb
ins
aaa
lahf
or
inc
les
ja
pop
jmp
jecxz
push
inc
xchg
mov
dec
mov
push
cwde
mov
pavgw
mov
xchg
jmp
xor
pop
repnz
jne
mov
lds
and
mov
push
adc
push
je
jg
cmps
rep
push
dec
sbb
scas
xchg
xchg
jno
inc
aam
inc
cmp
fstp
pop
and
iret
add
mov
imul
push
fisubr
cwde
fidivr
(bad)
mov
cmc
push
pop
inc
ror
cmps
push
test
out
xlat
in
and
arpl
mov
pop
aas
cmp
repz
mov
pop
ret
jl
jle
js
xchg
mov
xor
fimul
rcl
mov
aam
test
push
lods
imul
sti
or
xor
enter
bound
cmp
jae
mov
push
(bad)
pop
stc
(bad)
push
pop
out
pusha
ret
sbb
gs
daa
inc
xor
inc
sbb
inc
adc
inc
outs
jbe
aaa
rcl
jmp
loopne
out
xchg
xchg
sbb
enter
pop
cwde
pop
cmc
retf
add
call
daa
pop
sbb
mov
out
jp
(bad)
push
test
mov
xor
sti
dec
out
pop
jns
(bad)
retf
cmps
loop
cld
cmp
mov
jmp
sbb
cmp
imul
mov
cmp
in
sub
or
and
xlat
jge
aad
or
add
icebp
dec
cmps
std
fisub
test
jb
xchg
jge
pop
cmp
inc
rcr
sbb
pop
loop
pop
cdq
sbb
outs
pop
test
out
test
addr16
pop
outs
test
in
ret
fsub
sub
mov
ret
ret
jle
bound
mov
es
pop
sbb
nop
addr16
fistp
xchg
neg
(bad)
xchg
inc
aad
imul
mov
lea
mov
mov
xor
cs
pusha
mov
pusha
mov
cmp
addr16
push
je
xor
es
pop
inc
fld
fsub
in
jo
dec
fsub
mov
dec
inc
iret
jle
push
pop
xchg
stc
mov
sbb
dec
xor
mov
ins
in
ss
push
jmp
or
fild
inc
add
sti
xchg
xor
and
in
test
fwait
inc
jne
and
jo
pop
inc
fadd
add
enter
jno
shl
push
adc
xor
pop
jp
jo
outs
sti
or
xchg
adc
in
test
sbb
or
sti
std
(bad)
inc
mov
sub
mov
ret
lock
xchg
in
sub
sbb
aad
cmp
bound
xchg
or
sar
cs
mov
pusha
push
push
mov
xchg
jle
test
xchg
shl
jae
and
jns
adc
pop
neg
and
xlat
and
scas
(bad)
or
(bad)
or
xor
jmp
mov
cwde
rcl
add
dec
mov
sbb
xor
test
std
std
xor
jae
push
(bad)
out
stc
imul
loopne
cmovo
add
pop
mov
loope
into
shr
shl
or
stos
fs
mov
shrd
adc
out
idiv
cmp
neg
daa
xor
repnz
and
push
and
push
push
out
jle
pop
or
and
cs
xchg
xor
loope
bound
jno
stos
ins
jecxz
dec
inc
inc
pop
sub
scas
pop
cmp
cmps
ins
ins
das
add
retf
imul
rol
xchg
out
add
ins
dec
fistp
jb
sub
adc
mov
cmp
xor
ja
hlt
fst
fsub
test
and
in
icebp
leave
out
xchg
fiadd
das
es
sbb
shl
pop
jge
(bad)
aas
fsubr
stc
movs
lods
sti
call
sbb
test
fild
iret
mov
shr
test
test
and
mov
repnz
js
mov
sahf
dec
push
mov
xor
jnp
push
jmp
es
in
in
pop
mov
cmps
cmp
mov
addr16
or
mov
adc
mov
dec
xchg
fdivr
push
jp
xchg
add
mov
cwde
jg
icebp
int3
mov
inc
retf
mov
test
xor
mov
jmp
in
xchg
sub
ret
jo
push
sbb
pop
and
aas
mov
shl
test
(bad)
out
jmp
mov
lock
mov
stos
pop
ror
or
std
pop
pop
inc
add
lahf
xor
or
in
pop
aam
std
xchg
push
xor
or
or
xor
cdq
sbb
outs
test
cmps
jmp
xchg
call
xchg
sbb
(bad)
lock
or
mov
and
xchg
pop
xor
test
movs
dec
std
xchg
fnstcw
aas
jno
pop
(bad)
loope
add
xchg
and
jo
inc
test
retf
jae
shl
mov
rcr
pop
add
std
dec
(bad)
stos
mov
in
cmp
lock
push
out
or
xor
xchg
lock
xchg
imul
xor
mov
aad
adc
cmp
xchg
dec
add
mov
lahf
into
icebp
loope
pop
jbe
sub
mov
pop
adc
push
cli
push
or
push
xchg
stos
outs
xor
mov
xor
mov
sbb
inc
lea
test
cdq
je
inc
xchg
jns
add
or
scas
push
and
push
mov
mov
inc
jg
or
cdq
inc
in
push
into
dec
cmps
in
xor
add
rcr
mov
in
xchg
push
cmps
aam
xchg
ja
sub
loope
and
stos
or
enter
fsubr
loop
clc
add
and
and
data16
imul
jle
fdiv
std
es
mov
mov
xor
push
movs
pop
xlat
scas
push
lahf
addr16
cmps
scas
outs
daa
xlat
lea
leave
lahf
sub
jl
jne
jo
jnp
leave
ja
push
mov
dec
test
xchg
mov
mov
pusha
retf
jp
push
nop
mov
stos
and
ins
in
daa
loop
pop
cmp
pop
aam
fcom
mov
ret
push
repnz
mov
ss
(bad)
push
imul
popa
pop
mov
xor
fucomip
xor
fadd
cmps
pop
addr16
sti
shr
sub
cmp
push
pop
fistp
cmp
mov
or
in
fsubr
test
mov
test
test
mov
loop
not
inc
bound
hlt
scas
inc
retf
idiv
ret
adc
scas
gs
bnd
out
inc
jne
data16
xchg
rcl
jbe
mov
(bad)
pop
mov
or
jmp
jb
xor
or
loope
push
loopne
mov
pop
jg
stc
add
cmp
test
pop
sbb
jge
(bad)
mov
inc
push
icebp
loop
test
data16
pop
retf
add
mov
fild
in
mov
jl
popf
jae
sub
jnp
data16
sub
leave
inc
mov
sbb
pop
sub
xor
hlt
std
in
mov
cmp
sub
xor
(bad)
pop
xchg
cmp
les
pop
jp
cs
push
pop
xor
(bad)
retf
(bad)
call
(bad)
jae
in
push
jmp
sub
xor
iret
arpl
data16
fninit
jmp
jbe
fstp
nop
dec
and
aas
push
(bad)
jno
pusha
(bad)
cmp
movs
adc
cs
push
std
add
out
out
adc
dec
cmp
sub
cvtps2pi
test
jl
fwait
jb
push
xor
call
dec
ror
adc
dec
mov
ds
outs
scas
and
fmul
xor
xor
in
mov
ret
les
sbb
stc
imul
loope
mov
sub
loopne
test
cli
mov
inc
sub
push
push
jns
xor
loop
pop
mov
xor
jae
test
mov
xor
xor
(bad)
shr
scas
sahf
lods
xor
xchg
(bad)
int
add
call
mov
(bad)
xchg
xlat
dec
ins
aaa
mov
or
sub
mov
push
xlat
mov
mov
ss
es
add
dec
jnp
jno
loope
inc
cdq
in
dec
or
push
fwait
pop
sub
fild
ret
xor
cwde
pop
mov
add
movs
stos
push
out
sti
retf
jno
clc
mov
push
mov
jecxz
cdq
jnp
or
ficomp
dec
imul
iret
int
test
mov
pop
(bad)
loop
test
test
sub
test
inc
pop
xchg
push
rcr
mov
les
sbb
cld
sub
test
add
add
mov
stos
xor
ds
stos
pop
cdq
popf
hlt
lods
mul
aaa
and
sub
mov
dec
push
push
mov
pop
jne
push
xchg
fisubr
dec
jb
xchg
mov
fisttp
xor
push
adc
arpl
add
ins
cld
test
fwait
cld
or
outs
cmp
lods
not
push
out
bound
lds
push
fs
inc
ret
dec
jp
cmc
in
rcl
in
call
shr
sub
pop
stos
xor
js
ja
pop
ss
or
sti
sar
fdivr
adc
and
ins
mul
inc
xchg
out
xor
shl
pop
xlat
pop
bound
pop
ficom
cmp
nop
arpl
and
pop
sbb
mov
or
nop
out
mov
mov
nop
out
mov
test
daa
adc
mov
cdq
inc
adc
jbe
adc
dec
inc
cwde
adc
repnz
enter
scas
adc
xchg
retf
daa
jo
add
(bad)
jp
fstp
adc
sbb
std
mov
js
std
scas
jb
cwde
inc
inc
ret
and
and
lahf
mov
das
adc
lds
fldenv
dec
das
stos
sahf
jmp
inc
sbb
jne
sahf
mov
in
fidivr
fs
nop
int
rol
mov
mov
outs
pushf
emms
jmp
mov
mov
out
pop
sar
pop
or
push
pop
add
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
mov
push
je
imul
add
add
and
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
ins
outs
bound
add
add
add
add
add
push
xchg
add
or
add
add
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
add
or
add
add
add
push
add
add
push
add
pop
add
add
add
add
or
sub
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
add
push
add
add
add
push
add
sub
push
add
add
sub
push
add
cmps
add
add
add
sub
push
add
gs
sub
push
add
add
in
push
pop
add
add
test
xchg
push
add
pop
pop
add
add
pop
pop
add
add
or
push
add
pop
add
add
pop
add
add
or
or
add
add
fmul
push
add
sub
or
pusha
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
retf
add
add
iret
add
add
add
add
add
add
add
dec
add
stos
add
add
push
add
add
push
and
adc
arpl
add
add
lds
add
add
push
scas
add
add
push
add
add
add
dec
add
add
mov
pop
and
adc
inc
or
add
add
add
add
add
add
add
add
or
add
add
or
or
add
add
or
add
add
or
adc
cmp
cli
add
add
add
add
test
and
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
xchg
ja
sbb
add
fwait
and
xchg
add
add
add
add
add
add
and
xchg
add
add
and
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
mov
add
add
fisub
add
add
xchg
add
add
add
add
add
add
xchg
add
add
adc
xor
add
add
xchg
add
add
add
cmp
add
add
xchg
add
add
adc
push
daa
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
xor
add
add
xchg
add
add
sbb
ins
sub
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
mov
push
add
add
add
add
add
add
add
add
add
and
add
add
imul
xchg
add
add
add
pop
add
add
mov
add
pop
add
add
int
add
add
mov
add
pop
add
add
int
add
add
mov
add
pop
add
add
and
add
add
sub
add
add
add
add
imul
xchg
add
add
add
pop
add
add
and
add
add
sub
add
add
aam
add
add
and
add
add
sub
add
add
and
add
add
ror
add
add
and
add
add
sbb
add
pop
xor
push
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
cwde
add
mov
add
add
push
pop
xor
stc
add
add
pop
jle
adc
add
fadd
mov
or
add
or
add
or
or
add
or
add
sbb
inc
push
add
adc
add
ins
or
or
add
add
add
xchg
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
ins
add
push
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
add
add
add
add
add
add
jns
xchg
add
add
add
add
add
add
add
add
and
add
nop
and
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
clc
and
add
add
add
and
add
add
add
adc
pusha
and
add
add
add
adc
nop
and
add
add
and
add
adc
sbb
mov
add
add
sbb
pusha
daa
add
sbb
and
add
add
add
sbb
cwde
sub
add
test
add
sbb
add
add
sub
add
add
sub
add
add
sub
add
add
add
and
js
add
and
mov
add
and
cwde
sub
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xchg
add
add
pushf
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
ins
bound
xor
gs
add
imul
pop
inc
add
arpl
ins
imul
gs
add
push
arpl
popa
imul
add
arpl
outs
jb
fs
push
pop
push
add
push
dec
inc
push
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
dec
inc
inc
outs
add
pop
inc
imul
gs
outs
fs
outs
outs
add
inc
data16
push
dec
imul
inc
push
jp
imul
jae
add
jns
pop
inc
arpl
inc
outs
jp
outs
dec
add
push
dec
dec
ja
push
add
add
jbe
outs
add
dec
gs
push
add
dec
push
jb
js
jno
add
push
dec
jne
add
dec
dec
jae
bound
pop
outs
push
dec
add
push
jp
push
push
push
add
jne
add
dec
inc
push
jb
dec
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
inc
push
push
data16
ins
dec
dec
ins
add
jae
add
inc
push
addr16
jae
ins
add
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jns
je
ins
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
bound
xor
fs
inc
push
add
je
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
xor
xor
sub
sub
sub
sub
xor
xor
inc
ss
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
outs
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
xor
sub
jb
outs
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
arpl
je
outs
outs
add
je
dec
gs
popa
add
jae
gs
cs
imul
inc
outs
jb
jae
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
je
xor
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
gs
outs
xor
xor
xor
xor
gs
jns
add
outs
jae
jb
arpl
dec
outs
outs
add
je
outs
outs
jae
jb
arpl
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
xor
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
and
gs
outs
xor
xor
xor
xor
imul
ins
popa
addr16
and
ins
gs
outs
xor
xor
xor
xor
gs
js
arpl
imul
ins
bound
jb
dec
pop
push
inc
jp
imul
and
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
pop
jo
dec
dec
inc
add
ins
gs
outs
xor
xor
xor
xor
sub
arpl
jae
data16
push
imul
jae
arpl
dec
outs
je
jb
arpl
outs
add
ins
ins
push
jns
add
ins
ins
inc
jns
popa
ins
add
push
inc
jbe
bound
ins
pop
jne
imul
jp
dec
add
push
dec
push
inc
dec
push
add
outs
jo
jb
jns
outs
outs
add
je
jb
jo
jb
imul
bound
dec
outs
outs
add
je
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
popa
ins
jne
add
dec
dec
imul
push
gs
bound
push
popa
jb
ins
inc
jb
popa
jns
je
jb
bound
add
ins
gs
outs
xor
xor
xor
xor
sub
je
gs
outs
fs
dec
gs
outs
fs
popa
jae
add
jb
ins
gs
jb
outs
outs
add
je
popa
jb
ins
gs
jb
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
pop
inc
inc
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
imul
dec
popa
outs
popa
gs
ins
ins
gs
imul
imul
pop
dec
gs
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
jb
jo
outs
push
jb
outs
jae
outs
jb
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
je
add
ja
inc
dec
imul
add
ins
gs
outs
xor
xor
xor
xor
add
ins
gs
outs
xor
xor
xor
xor
add
ins
gs
outs
xor
xor
xor
xor
add
ins
outs
jb
addr16
inc
add
je
push
add
ins
gs
outs
xor
xor
xor
xor
add
popa
add
je
dec
imul
popa
jb
inc
inc
inc
push
dec
gs
bound
dec
push
arpl
jb
jae
jne
arpl
add
add
add
add
add
add
arpl
retf
lock
mov
mov
pop
push
sbb
mov
push
add
add
add
add
and
adc
sbb
add
or
add
adc
add
add
push
or
add
push
add
adc
or
add
push
sbb
adc
add
add
or
add
or
or
add
or
push
or
add
add
sbb
pop
jg
aad
cmp
add
sbb
add
push
sbb
add
add
add
push
add
xor
or
add
add
push
adc
pop
add
add
push
adc
push
adc
push
adc
add
adc
or
sbb
and
push
adc
or
adc
add
push
sysret
pop
sbb
add
adc
push
sbb
sub
push
adc
push
adc
add
add
pop
add
add
adc
adc
add
adc
push
pop
and
adc
adc
add
adc
push
adc
add
adc
push
adc
push
adc
add
or
pop
pop
adc
adc
sbb
sbb
push
or
add
or
pop
add
or
add
sbb
adc
pop
add
pop
add
add
add
add
add
add
add
and
sbb
add
add
push
push
and
sbb
sbb
sysret
push
adc
adc
add
pop
add
add
adc
adc
adc
dec
add
add
adc
pop
pop
adc
or
or
add
add
add
mov
add
adc
add
and
sbb
add
or
add
or
add
push
or
test
add
add
adc
or
add
add
add
push
pop
or
or
add
sbb
sbb
add
add
or
sbb
add
pop
xor
xor
xor
xor
add
add
add
push
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
mov
add
add
add
add
push
add
add
add
sub
add
push
push
inc
push
inc
scas
mov
inc
mov
fld
arpl
pop
push
jae
jb
pop
inc
fs
imul
popa
je
pop
dec
outs
arpl
pop
push
gs
jo
ins
push
inc
jns
imul
outs
outs
ins
bound
xor
jo
bound
add
add
add
add
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
