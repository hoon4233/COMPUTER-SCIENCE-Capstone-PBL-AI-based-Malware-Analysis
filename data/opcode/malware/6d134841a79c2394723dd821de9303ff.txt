std
(bad)
(bad)
(bad)
mov
ret
push
mov
call
mov
push
mov
push
lahf
(bad)
jmp
push
rdpmc
and
lea
mov
or
jg
sbb
sbb
mov
sub
shl
cs
mov
leave
data16
add
(bad)
(bad)
clc
(bad)
int
or
push
mov
cmps
add
add
inc
add
pop
loopne
lock
pop
ret
push
mov
mov
popf
loopne
in
daa
sahf
mov
call
pushf
and
in
sbb
add
sti
cs
cmp
retf
adc
jl
rdmsr
je
dec
cld
inc
push
push
test
mov
push
push
push
mov
out
inc
je
push
(bad)
mov
push
mov
xchg
push
dec
fisubr
sbb
aam
add
and
mov
and
pop
outs
add
icebp
mov
ror
cmp
ins
shl
mov
push
lea
das
pusha
adc
lock
lock
push
lea
push
xor
or
out
fnstsw
retf
or
add
js
lock
mov
dec
push
cmp
int
mov
(bad)
and
push
adc
mov
mov
out
ds
inc
xor
sar
inc
mov
inc
div
es
les
xor
push
in
lock
adc
mov
mov
ja
dec
lock
push
sbb
mov
push
cmp
out
or
ins
pop
jl
add
test
push
hlt
dec
or
mov
clc
int
mov
pop
pop
je
push
push
push
dec
int
test
add
mov
xchg
push
jge
js
ja
xor
mov
push
sub
int3
imul
jg
je
scas
scas
mov
sub
mov
dec
sub
inc
xor
inc
jnp
lea
into
jmp
xchg
jmp
sbb
adc
lahf
bound
fdivp
(bad)
pushf
jbe
pop
fldenv
push
cmp
in
pop
cmc
clc
loopne
mov
sub
adc
mov
inc
or
cli
xchg
or
jp
mov
pop
jge
test
jge
xor
jl
scas
adc
jb
or
push
sti
es
push
push
ja
or
cmp
popa
or
or
xchg
ja
loope
or
in
lock
push
sub
pop
(bad)
add
xor
ss
(bad)
cmc
jmp
cmps
lods
sub
push
lock
adc
add
out
fcmovnbe
ss
or
push
mov
push
sbb
or
xlat
add
into
cdq
xchg
or
aas
(bad)
fwait
jmp
cmp
add
lock
test
call
lahf
push
in
adc
add
(bad)
enter
push
sbb
ret
pop
push
cmp
pusha
sub
jge
or
(bad)
cmp
pop
pushf
lods
clc
jb
mov
js
shr
cmp
or
mov
es
inc
dec
jo
add
jo
dec
js
jne
sbb
mov
data16
cmps
push
leave
pop
xor
mov
retf
mov
das
push
shl
leave
aas
rol
jo
sub
mov
push
pop
lea
pusha
lock
mov
lea
push
fst
data16
inc
cmp
(bad)
sbb
cmp
mov
add
push
pop
dec
and
rcr
popa
xor
stos
mov
xchg
mov
inc
add
mov
xchg
jne
lods
je
out
iret
inc
fisttp
add
mov
sar
mov
push
fisttp
fdiv
ror
cmp
pop
xchg
les
neg
push
or
arpl
push
pop
imul
mov
(bad)
push
pop
clc
aas
cmp
scas
cmp
ja
add
jmp
icebp
inc
or
xor
push
rcl
cld
xchg
test
shr
push
clc
jo
shl
ins
jge
pop
cvtdq2ps
ret
mov
clc
or
push
in
fstp
sar
sar
mov
sub
jmp
add
test
pusha
xchg
iret
lds
sbb
pop
dec
jno
inc
call
pop
push
push
push
cld
fwait
sar
cmp
jg
inc
pusha
or
add
cmps
popa
pusha
pop
mov
sar
jecxz
retf
xadd
dec
test
jg
cli
adc
push
add
push
inc
scas
adc
sub
jbe
ret
enter
jl
push
cwde
out
and
std
or
je
js
jnp
loopne
inc
xor
sub
inc
sub
inc
or
mov
idiv
jmp
cmp
test
push
hlt
dec
mov
pop
sub
repnz
popw
loope
pop
retf
or
jmp
js
(bad)
jge
mov
outs
mov
sub
shl
push
inc
shr
mov
arpl
mov
out
cmp
mov
inc
dec
clc
add
mov
mov
jecxz
adc
(bad)
jb
test
fmul
pop
pop
je
in
or
push
dec
cld
mov
inc
add
inc
clc
mov
pusha
xchg
pop
push
les
in
cmp
or
jo
cmove
les
mov
push
loopne
pusha
rcr
fwait
xchg
pop
add
or
inc
push
mov
(bad)
fisub
into
je
cmp
das
push
cmp
push
jne
push
push
pop
or
loope
mov
mov
jmp
repz
stos
adc
push
cmp
push
xchg
rcl
outs
push
push
push
jne
das
jne
jae
sbb
add
jg
push
ja
lea
push
jne
mov
clc
push
je
bound
xor
pop
repz
sub
push
add
je
push
or
adc
dec
jno
clc
jge
mov
cwde
mov
pop
imul
or
iret
aaa
xor
push
push
leave
pop
pop
pop
mov
add
xor
add
outs
icebp
xor
inc
add
or
(bad)
call
push
inc
adc
ret
xor
ins
stos
xor
jl
sar
les
cli
add
(bad)
outs
stos
adc
adc
xchg
inc
les
jp
ret
test
idiv
sbb
cld
mov
xor
mov
sub
stc
dec
fdiv
gs
and
das
and
sbb
loopne
cs
in
mov
xchg
xlat
jge
idiv
ja
cli
mov
loopne
cs
mov
lock
stc
dec
pop
call
cmp
repz
sbb
push
nop
mov
mov
xor
sbb
push
clc
jb
push
xchg
push
test
lock
loopne
dec
imul
imul
(bad)
sbb
mov
mov
xchg
xor
arpl
add
pop
stos
cmp
fsubr
jmp
jb
xor
(bad)
sbb
in
or
aaa
or
ins
mov
jp
imul
and
or
mov
pop
push
adc
aad
cmp
inc
pop
mov
cmp
ins
or
fnstsw
sbb
sbb
pop
test
mov
adc
xor
mov
mov
je
sub
ds
mov
rcr
xor
or
xor
push
push
je
scas
add
jne
test
enter
mov
ror
shr
push
mov
sbb
gs
lods
pusha
push
adc
sbb
sbb
push
xchg
retf
xchg
push
sahf
add
mov
sub
nop
repz
fsubr
jnp
lock
out
cmp
inc
push
popf
adc
in
jae
add
adc
sbb
cli
or
inc
outs
ja
(bad)
push
rol
mov
repnz
add
movsx
add
cmp
jne
push
stos
mov
pop
add
inc
test
sahf
mov
and
jl
lea
mov
ret
data16
cli
repz
push
aas
add
add
test
add
add
sbb
out
fdivp
test
inc
xor
popa
ret
xchg
jnp
add
or
pop
add
leave
rol
add
mov
outs
xor
sbb
jmp
movs
sti
stc
jns
add
jmp
add
gs
dec
lock
add
ds
push
loopne
ret
and
inc
add
data16
cmp
std
cmps
jecxz
sub
cmp
jge
push
adc
inc
cmp
jl
out
mov
pop
pop
ret
push
push
add
hlt
xor
push
(bad)
stc
pushf
retf
mov
push
or
inc
xor
adc
dec
imul
push
or
adc
mov
sbb
pop
push
fwait
inc
jnp
dec
xor
xchg
pop
add
(bad)
sbb
dec
and
(bad)
outs
adc
sar
lock
mov
pop
push
lea
and
imul
mov
pop
psubsw
in
add
pop
mov
mov
neg
nop
sbb
push
cmp
cmp
xor
jl
push
mov
xchg
inc
adc
xor
je
outs
and
fstp
repz
mov
adc
test
mov
(bad)
push
(bad)
cld
popf
dec
idiv
push
push
push
push
sbb
fwait
jns
pop
add
sub
push
sub
lock
jmp
repnz
or
add
or
scas
and
sub
and
inc
push
mov
pop
rol
xor
js
neg
adc
sbb
(bad)
jo
sbb
ret
fild
(bad)
loopne
inc
pop
sub
add
sub
add
inc
add
mov
mov
cmp
data16
pop
cld
xchg
pushf
inc
cmps
push
mov
inc
jae
test
mov
push
sbb
icebp
lds
jns
mov
inc
call
mov
ret
push
xor
xor
cmp
je
push
out
(bad)
scas
sbb
sub
jle
pop
push
mov
in
scas
in
mov
push
push
jb
neg
and
pop
jb
in
add
or
pop
pop
push
sbb
xchg
cmps
adc
test
inc
cmps
loopne
pop
jp
and
xchg
and
xchg
sub
or
mov
outs
or
or
sbb
adc
pop
popa
xchg
and
xchg
or
and
leave
xchg
dec
adc
leave
xchg
sbb
sub
loop
xor
or
add
addr16
pushf
push
sbb
mov
adc
pop
cwde
xchg
jb
sub
inc
sbb
adc
adc
(bad)
mov
jb
movq
sbb
and
and
push
push
ins
or
inc
pop
dec
push
mov
sbb
add
and
ret
nop
add
je
push
push
push
or
cdq
or
sbb
xchg
xchg
dec
dec
and
sub
or
pop
pop
or
pop
add
mov
add
movs
shl
sahf
inc
arpl
jmp
sub
pop
retf
test
xor
add
push
jmp
xor
test
cmp
mov
mov
sub
inc
cld
add
pop
sar
xlat
cmp
sbb
clc
cmp
jl
outs
push
shl
or
(bad)
jmp
mov
push
jo
lea
mov
and
fcom
xchg
or
int3
mov
push
es
xor
sbb
(bad)
sub
sub
or
xchg
add
or
ss
lahf
ror
pop
pop
leave
add
std
das
jb
lods
and
out
(bad)
(bad)
mov
data16
sbb
sub
call
push
push
cs
popa
add
push
push
or
mov
aaa
xor
add
sub
push
popa
and
xor
inc
rcr
xor
cmp
in
shl
out
sahf
sbb
pop
in
add
psubsb
outs
out
or
inc
in
shl
jge
xchg
mov
(bad)
inc
or
stc
or
cmp
jl
jmp
cmp
dec
add
data16
jne
push
jle
cld
sub
jge
icebp
inc
push
inc
or
push
daa
loop
fdivrp
mov
mov
retf
adc
dec
xor
outs
xor
loopne
inc
sub
pop
jb
data16
mov
push
jo
fwait
mov
jmp
and
xor
mov
setne
dec
mov
jmp
add
test
mov
xchg
hlt
shl
push
mov
or
mov
pop
xchg
inc
cmc
mov
(bad)
sbb
adc
test
adc
jecxz
jmp
add
push
lock
push
cmp
sahf
inc
push
push
arpl
add
mov
shl
mov
push
cmp
dec
hlt
sub
inc
inc
sbb
jbe
ins
sahf
ds
sub
cmp
mov
or
cs
add
xor
cmp
sub
or
push
mov
sub
adc
loopne
(bad)
ss
mov
out
pop
cli
push
push
or
(bad)
cmp
and
add
(bad)
mov
lea
cmp
mov
jl
cld
add
sbb
in
lea
jne
add
mov
(bad)
push
push
cmp
data16
cmp
(bad)
sbb
int3
pop
aam
fwait
and
sub
(bad)
repnz
cmc
mov
mov
call
ds
or
dec
mov
jb
ds
mov
jne
mov
jg
into
repnz
in
cmp
(bad)
cmp
jl
xor
test
push
mov
jp
out
sar
add
sub
lea
adc
push
add
inc
adc
or
or
adc
mov
add
or
jl
add
mov
std
mov
mov
inc
cmp
jl
arpl
ror
jle
stc
in
or
pop
mov
enter
jne
pop
ds
les
jno
jl
inc
inc
aaa
mov
inc
mov
and
jg
mov
cmps
jnp
push
sbb
sbb
cmp
pop
mov
adc
adc
out
(bad)
aam
xor
icebp
shl
add
fs
out
mov
ja
cmp
je
or
xchg
cmp
sbb
add
addr16
jnp
push
cmp
push
lods
jo
ins
inc
int3
add
outs
mov
xchg
pop
repnz
lods
addr16
add
lock
cli
div
dec
xchg
fadd
xchg
sahf
xor
cmp
fsub
mov
push
cmp
adc
cmp
nop
inc
ror
add
ins
or
xchg
sbb
mov
adc
je
mov
jne
nop
fsub
ss
push
and
cmp
sbb
cmp
push
cmp
in
push
loopne
adc
jle
popf
inc
inc
or
std
pop
jbe
push
(bad)
mov
(bad)
in
xchg
call
push
sbb
test
push
push
dec
icebp
mov
add
add
fiadd
es
push
cmp
adc
nop
inc
shl
shl
enter
pop
ins
enter
mov
dec
lock
adc
jle
or
ja
cld
jo
adc
imul
ss
rcl
cli
fdiv
lods
push
in
dec
je
add
pop
je
mov
inc
and
inc
call
inc
lock
es
lods
push
rcr
std
ins
jmp
push
sub
test
jmp
mov
je
inc
enter
ss
hlt
inc
jo
pop
mov
dec
dec
xchg
call
or
sub
push
xchg
cs
sahf
cmps
pop
inc
mov
or
out
sahf
adc
das
and
sbb
push
cmp
out
mov
cmp
popa
inc
aaa
(bad)
repz
jno
add
add
sbb
add
(bad)
aas
in
add
add
or
or
fdivp
fdivrp
adc
adc
push
pop
sbb
push
cmp
mov
iret
jnp
es
or
jnp
dec
xlat
loope
jmp
inc
xor
cs
in
fiadd
fst
stc
mov
xchg
je
mov
cmp
jl
outs
and
lahf
push
add
push
jmp
dec
rol
push
push
jbe
adc
sub
popa
mov
iret
not
sbb
enter
fbld
pushf
sub
mov
pop
or
cmp
xor
push
mov
push
push
push
inc
push
loope
mov
sbb
cmps
mov
je
or
je
adc
je
push
push
inc
mov
je
cmp
or
in
cmp
dec
sub
push
add
clc
data16
call
mov
je
int3
or
ds
adc
dec
sub
jae
ffree
and
pop
xor
sti
loop
shl
sbb
xchg
cmc
xor
xor
xchg
je
test
aaa
inc
or
mov
sub
pop
test
inc
cmp
and
cmp
jmp
mov
or
jle
push
pop
loope
loopne
push
cmp
fmul
lods
fstp
push
lea
loope
and
sub
pop
loope
ret
push
shr
inc
ret
movs
in
sbb
in
hlt
adc
or
mov
loope
jmp
dec
inc
pushf
push
and
add
push
sbb
popa
sbb
je
aas
dec
and
add
and
jbe
cmp
div
jae
dec
enter
push
add
sbb
or
loope
xor
push
ret
(bad)
jmp
imul
sbb
push
mov
ret
xchg
pop
add
cmp
adc
and
pusha
mov
arpl
jge
and
jo
adc
mov
punpcklbw
inc
loopne
leave
dec
or
jbe
test
in
jno
dec
cli
push
or
xor
push
push
xor
add
cmp
xchg
push
test
pop
iret
cs
jmp
retf
shr
pop
push
test
mov
push
push
test
jg
les
fcmovnb
mov
jmp
mov
jmp
shl
sbb
sub
push
xchg
cmps
sbb
pop
push
adc
xchg
int3
jge
cmp
fbstp
sub
push
mov
pop
or
sub
pop
fmul
ret
push
mov
jne
adc
add
add
loopne
sub
pusha
aad
adc
out
data16
int3
sub
call
pcmpeqd
cmc
cmp
je
cmp
je
pop
nop
mov
sbb
(bad)
es
outs
jmp
mov
icebp
pop
inc
add
or
data16
sub
fadd
dec
(bad)
xor
inc
div
pop
aam
adc
ret
test
sub
adc
sbb
leave
leave
shr
fdiv
nop
pop
mov
dec
aam
xor
aam
ss
mov
jmp
xor
adc
aaa
dec
mov
inc
add
sti
lock
jmp
cmps
call
add
or
cmp
aam
xor
and
and
add
and
mul
jnp
sub
cs
push
add
(bad)
sti
or
push
out
lock
sbb
add
mov
ret
dec
and
jmp
jge
sub
mov
lea
adc
pop
xchg
cmp
jl
repnz
ins
out
push
xor
push
push
fadd
and
inc
mov
push
cmp
jle
pop
mov
dec
loopne
fst
iret
xchg
loope
test
neg
inc
scas
jmp
push
in
sub
cld
ror
shl
movs
push
movs
enter
pop
xor
ja
or
shl
je
(bad)
in
push
push
and
in
inc
xor
mov
xor
lock
push
cmp
(bad)
fcmovbe
mov
pop
test
call
pusha
lock
push
imul
xlat
or
and
add
nop
es
in
sub
push
je
mov
push
nop
push
in
mov
and
and
fmul
sbb
in
inc
inc
push
push
jo
rsm
push
imul
in
enter
jecxz
xor
out
in
out
aam
ret
push
push
push
xchg
xchg
push
imul
add
adc
lock
popa
pop
push
sbb
popf
shr
push
mov
rol
cmp
icebp
dec
in
sub
add
das
pop
dec
loopne
loopne
mov
cmp
adc
lock
jo
adc
push
jmp
or
fdivr
push
int3
loop
jbe
cmp
sbb
(bad)
mul
seto
lock
neg
or
push
push
imul
add
mov
push
xor
(bad)
outs
adc
pop
adc
int3
lea
je
sub
adc
and
and
sub
inc
call
pop
(bad)
call
mov
or
jne
inc
cld
cwde
push
push
mov
mov
mov
imul
ficom
or
out
add
push
aaa
cmp
cmps
sbb
jle
xchg
bound
loopne
shl
add
jo
dec
jne
dec
xchg
sbb
cdq
mov
sbb
adc
sub
repz
cmp
loopne
cmps
pop
mov
push
push
xor
push
push
int
pop
mov
push
or
sbb
pop
xor
xor
loope
xor
test
dec
(bad)
neg
mov
clc
test
mov
(bad)
jb
and
aam
adc
lock
dec
pop
jne
inc
je
scas
adc
cmp
dec
mov
ret
loop
mov
lock
in
jmp
outs
and
mov
outs
and
mov
iret
mov
(bad)
bound
psrad
repz
adc
lea
push
bound
das
add
pop
xchg
jnp
(bad)
les
or
fist
or
in
mov
jle
cmp
adc
push
add
push
mov
or
neg
mov
out
cmp
pop
sbb
push
cld
loope
mov
in
mov
push
push
jne
loope
fist
(bad)
scas
push
ins
in
scas
je
mov
cmp
je
push
push
cmp
icebp
adc
aaa
xchg
pop
rol
or
add
jo
loop
mov
and
mov
fstp
fist
pop
lods
popf
(bad)
fimul
or
jl
fild
pop
inc
push
cmp
jge
mov
lea
hlt
lea
int3
daa
sbb
popf
clts
shl
das
xchg
or
mov
lds
(bad)
clc
sbb
in
or
push
pop
cmp
je
adc
mov
push
adc
hlt
push
inc
ror
in
adc
iret
je
and
clc
je
ret
xchg
xor
dec
sbb
out
dec
clc
pop
cld
xor
or
sbb
and
jp
add
or
adc
add
cmp
cmp
icebp
or
mov
xlat
in
jmp
xor
mov
cmp
or
and
scas
add
fwait
pop
jmp
mov
icebp
dec
pop
or
xor
mov
xor
leave
imul
mov
movs
mov
push
or
lods
xlat
mov
or
loopne
ja
(bad)
and
loopne
jle
or
mov
jns
test
mov
pop
les
pusha
fdiv
jmp
nop
jmp
jae
rcl
in
xor
ret
push
cmp
int3
inc
and
sub
adc
cld
je
cwde
dec
jne
inc
sahf
adc
adc
inc
jmp
add
jo
cmp
popa
inc
jae
ret
adc
xor
mov
add
add
out
push
pop
jmp
(bad)
sub
shr
aaa
push
movs
push
shl
xlat
test
(bad)
or
hlt
mov
push
sbb
add
sbb
fstp
leave
and
inc
inc
jmp
js
adc
push
push
dec
xor
loopne
cld
(bad)
cld
(bad)
int3
(bad)
push
push
ror
mov
stos
add
jbe
or
pop
cs
and
push
in
push
xchg
dec
push
push
inc
clc
(bad)
neg
sbb
into
mov
inc
and
adc
shr
cmp
shr
sbb
jg
push
push
jnp
push
jne
jbe
sub
adc
or
xor
ss
pop
or
push
and
jnp
adc
add
add
in
and
push
and
(bad)
lods
imul
je
fcomp
cwde
jmp
adc
dec
inc
push
adc
jmp
scas
jl
sub
pop
std
jmp
or
fcmove
call
push
cld
xchg
push
pushf
(bad)
lock
in
ins
adc
add
push
add
adc
outs
sub
or
lods
pop
or
jno
stos
pop
mov
jb
add
mov
push
add
dec
out
mov
test
add
or
pop
leave
loopne
rol
xchg
ror
enter
shl
or
xor
ror
pop
std
addr16
mov
cli
add
jo
sbb
sbb
mov
mov
test
xchg
pop
je
xchg
call
int3
retf
mov
popf
sub
sahf
jp
daa
xor
add
xchg
ja
push
mov
in
ins
in
(bad)
pop
mov
pop
add
les
add
aaa
sbb
ins
push
push
sbb
mov
xor
add
and
fucom
fs
or
fs
dec
ficom
jl
outs
je
cdq
mov
mov
jge
push
push
test
push
iret
ins
dec
jo
lahf
and
js
mov
pop
mov
pushf
nop
sub
enter
xchg
xchg
push
call
cmps
and
mov
fistp
jl
cmps
pusha
leave
sub
repz
fwait
pop
lds
sbb
cmp
lods
and
leave
cmp
cmp
adc
arpl
push
add
add
pop
rcl
mov
adc
ins
out
xor
lea
retf
and
sbb
leave
in
sub
imul
das
push
and
ror
sub
xchg
add
push
jns
cmp
add
cmova
jae
retf
js
sahf
jl
push
push
push
std
mov
mov
icebp
or
fadd
loopne
add
mov
jne
dec
push
sub
test
or
cld
add
and
sbb
pop
push
call
mov
xchg
(bad)
mov
add
inc
ja
add
xor
dec
and
push
add
and
push
push
ja
xchg
push
cmp
or
arpl
sbb
je
jo
std
cmp
xor
test
ins
push
add
jno
xchg
enter
sub
sahf
(bad)
in
dec
retf
mov
pop
cwde
jl
mov
cmp
hlt
push
mov
fwait
loopne
pop
adc
mov
cmp
movs
push
cmps
ins
mov
or
push
dec
adc
adc
std
xchg
pop
push
xchg
js
not
or
push
ins
cs
in
int
push
lea
push
cld
or
in
adc
retf
or
lods
popf
les
cmp
lds
sub
mov
mov
inc
push
icebp
fcmovnb
into
mov
jl
out
cmp
xchg
sub
cmp
mov
pop
add
pusha
sub
push
sbb
inc
pop
cwde
sar
pop
js
pop
in
xor
jl
add
rcr
nop
loopne
adc
sar
push
loopne
fistp
mov
and
movs
adc
dec
mov
repz
push
xor
loope
adc
dec
push
ins
mov
pop
adc
add
cmp
sbb
or
or
mov
imul
loopne
ss
scas
pop
jmp
adc
inc
(bad)
add
inc
or
sbb
or
xor
adc
push
push
fiadd
adc
and
xor
aaa
and
in
push
xchg
popf
mov
loop
jg
jle
mov
mov
and
xchg
or
xor
pop
jnp
popa
les
xchg
push
adc
mov
leave
dec
movs
bound
ins
push
jbe
mov
mov
adc
sub
push
or
sbb
in
and
sbb
dec
mov
sub
pop
(bad)
in
mov
xor
or
enter
pop
aas
and
add
sbb
sbb
pop
outs
iret
cmp
pop
in
shr
jo
leave
inc
leave
add
xchg
or
nop
or
sub
nop
sti
sbb
sbb
jb
loope
add
enter
sbb
or
inc
sub
sub
ss
push
scas
movs
aam
xchg
push
repnz
mov
jne
inc
mov
test
xor
leave
adc
pop
lea
xchg
in
inc
mov
add
stc
cs
in
into
or
xor
and
adc
inc
enter
add
sub
nop
xchg
sub
sbb
xchg
add
jo
popf
nop
dec
sbb
out
cmp
pushf
movs
fdivr
or
mov
cmp
mov
jo
add
inc
sbb
pushf
add
sbb
leave
in
push
pop
sbb
add
push
xchg
or
je
add
repnz
mov
or
xor
sbb
add
add
sbb
sbb
add
or
ror
and
inc
pop
imul
add
sbb
push
inc
sbb
and
adc
and
in
leave
push
mov
inc
popa
and
push
cmp
aaa
add
or
lods
mov
xchg
sete
push
lahf
sub
xor
lahf
in
sbb
push
std
dec
xchg
sub
push
sbb
add
inc
push
pop
mov
daa
and
and
mov
push
add
(bad)
push
xchg
pop
xchg
dec
sub
cld
push
mov
push
movs
add
mov
add
sbb
add
sbb
push
sar
mov
inc
dec
or
fdiv
je
fadd
cld
pop
add
fild
mov
retf
pop
mov
dec
dec
jg
lea
and
(bad)
pop
ror
dec
rol
inc
pop
push
(bad)
ror
call
adc
call
adc
push
stos
xor
mov
mov
movs
or
ficom
das
daa
daa
adc
data16
adc
dec
es
jbe
adc
inc
nop
add
test
push
(bad)
dec
mov
mov
pop
mov
(bad)
jbe
mov
scas
and
dec
push
adc
mov
pop
pusha
mov
sbb
xor
push
or
bound
mov
adc
sub
mov
cld
sbb
jmp
rol
or
push
ror
or
mov
fmul
inc
stos
sti
das
xchg
inc
sbb
add
imul
or
cmp
cdq
cmp
shl
loope
(bad)
or
enter
inc
push
fadd
cdq
jbe
call
or
adc
pop
int3
enter
enter
jmp
fadd
int3
mov
xchg
les
and
or
or
in
nop
or
sar
mov
mov
adc
nop
inc
push
cdq
mov
lods
push
in
sbb
pushf
push
push
mov
adc
or
push
(bad)
jo
mov
mov
mov
popf
mov
test
pop
inc
cld
ror
cmp
into
hlt
xor
loopne
xchg
push
xor
sbb
in
and
(bad)
dec
ret
add
das
inc
cli
fimul
add
in
push
push
jbe
adc
dec
mov
inc
push
sbb
or
and
daa
daa
in
call
je
mov
mov
pusha
outs
dec
ins
test
jno
mov
mov
inc
lahf
fadd
cmp
sub
or
in
sub
fadd
inc
and
nop
mov
adc
sbb
or
inc
cmp
push
mov
add
dec
int3
inc
in
loope
ss
pop
push
jb
inc
inc
dec
xor
mov
dec
pop
gs
and
out
pop
and
sub
xchg
adc
and
sbb
enter
xor
ficomp
adc
ins
outs
mov
mov
xor
mov
cmps
dec
jl
dec
sbb
out
jnp
mov
mov
push
cmps
pop
bound
pop
popa
(bad)
rcr
or
add
mov
and
adc
gs
sahf
and
sbb
or
sub
repnz
push
cmp
or
in
inc
cmp
dec
jge
jne
sbb
lds
adc
xor
movs
xchg
je
xor
push
or
sub
xchg
test
mov
pop
inc
fmul
or
xor
xor
mul
xor
or
xor
outs
nop
push
inc
inc
sub
retf
push
or
cdq
sub
fs
cs
or
or
mov
inc
enter
and
sub
pusha
ins
lahf
inc
jne
nop
sub
sub
imul
rol
das
out
inc
push
test
iret
adc
mov
sbb
add
pop
mov
ret
(bad)
dec
sub
js
and
fisubr
(bad)
push
mov
and
mov
das
mov
inc
push
adc
pop
hlt
add
add
and
push
mov
ds
jle
scas
sbb
out
cs
inc
cmp
(bad)
cmp
sti
add
mov
pop
mov
mov
mov
and
ins
sub
inc
dec
adc
adc
jmp
enter
test
(bad)
les
push
mov
mov
and
cmp
or
jo
pop
pop
int
loop
movs
outs
fdivr
hlt
jle
sbb
xlat
inc
inc
pusha
inc
jno
pop
shl
cmp
and
and
add
iret
sub
jo
push
(bad)
pushf
mov
in
dec
ficom
sub
sbb
sbb
xor
in
ret
dec
es
in
or
lds
loope
dec
inc
sbb
sar
inc
cmp
inc
into
mov
push
and
mov
cmc
lods
dec
lock
and
mov
aaa
jle
inc
in
push
aas
xor
push
and
in
(bad)
cs
inc
inc
add
inc
mov
push
pop
mov
cmp
(bad)
mov
jp
pop
inc
push
add
repz
call
je
idiv
daa
mov
jmp
loope
(bad)
ror
mov
in
or
int
or
in
je
test
cmp
jl
sub
in
dec
jno
jo
add
pop
dec
popf
adc
movd
shr
sbb
pop
inc
aam
push
inc
add
(bad)
sbb
jmp
cwde
out
mov
push
(bad)
and
xchg
sub
sub
xchg
ds
mov
pop
mov
les
in
xor
call
sub
mov
popa
lods
out
sbb
lods
lea
lods
xchg
dec
pop
call
loopne
pop
inc
xchg
push
test
xor
add
fist
dec
arpl
sbb
mov
jne
push
cld
or
jne
xchg
jg
mov
mov
or
mov
xchg
xchg
xor
sub
xchg
cmp
inc
fild
ret
in
(bad)
ins
jmp
mov
aaa
push
cld
push
mov
(bad)
cdq
sub
push
ins
imul
pop
mov
fdivp
jmp
jge
inc
outs
cmp
jle
push
sbb
push
add
jmp
mov
mov
dec
fmul
shl
pop
dec
ss
cli
xor
stc
inc
mov
ins
cmp
or
leave
pop
sar
scas
fiadd
cmp
jge
movzx
push
add
repnz
into
dec
inc
jnp
mov
push
push
cmp
add
ret
inc
pop
shl
dec
xchg
xchg
das
push
nop
in
mov
rol
mov
loopne
in
jo
mov
pushf
push
repz
push
shl
mov
mov
mov
fld
mov
mov
or
add
pop
cmp
cmc
dec
jmp
out
mov
xor
cwde
je
hlt
movs
and
es
mov
push
jb
inc
das
mov
dec
cmps
fwait
repnz
xchg
xchg
fldenv
adc
fcomip
xor
mov
adc
jne
push
pop
cmp
push
cmp
mov
je
clc
fadd
adc
test
and
push
sbb
call
or
cdq
imul
add
add
jg
je
cmp
jmp
ror
adc
sub
cmp
add
and
enter
inc
dec
out
(bad)
sbb
and
adc
lds
sub
sub
mov
aad
(bad)
pop
sbb
mov
xor
xchg
mov
dec
fisttp
dec
push
add
mov
dec
fcom
cmp
inc
jmp
sar
cmp
cmp
test
in
std
sub
shl
add
jecxz
xchg
xor
push
cmps
pusha
pop
lods
sbb
push
sub
and
movs
xor
retf
cmp
dec
sub
pushf
cli
add
push
jne
xlat
pop
add
add
dec
adc
and
ffree
repz
jl
mov
and
and
mov
sbb
ror
adc
shr
cmps
xchg
sub
nop
push
lods
jp
xor
and
lahf
push
dec
inc
cs
cs
xchg
out
fstp
rcr
ds
sbb
dec
inc
xor
mov
jl
sbb
mov
and
je
sbb
jbe
or
sbb
sub
pusha
popa
nop
test
das
cmp
sub
loopne
jb
jo
mov
dec
mov
je
js
retf
mov
inc
cmp
sbb
and
shl
data16
sbb
cld
scas
mov
das
outs
xor
jle
js
pop
add
add
or
sub
jno
pop
mov
sub
lea
loope
adc
arpl
clc
mov
mov
jmp
and
push
xchg
push
add
test
add
sbb
mov
add
into
aad
jge
(bad)
xchg
scas
icebp
sub
out
jns
mov
dec
mov
sbb
into
test
pop
push
cmps
and
imul
sub
jmp
sbb
push
push
mov
sub
outs
test
or
lods
arpl
cmps
std
pop
sbb
push
xor
jnp
add
mov
test
or
mov
inc
pop
test
fsubr
out
mov
xchg
shr
jl
and
aam
or
sub
xchg
int3
sub
xchg
jns
rcr
outs
es
mov
push
or
mov
in
push
call
out
addr16
jmp
dec
mov
fdivr
jmp
dec
loopne
nop
push
sub
shl
adc
cmp
add
xor
dec
enter
test
or
mov
sar
jae
add
and
lock
mov
pop
or
inc
adc
fs
fcmovb
inc
movs
pop
inc
(bad)
js
jl
xchg
mov
add
push
cmp
xchg
clc
xchg
leave
or
adc
sub
aas
push
int
dec
fucom
in
movs
push
sbb
and
in
in
sub
cmp
in
in
inc
inc
dec
add
in
push
xchg
fistp
cdq
pop
dec
mov
mov
xchg
cwde
pushf
mov
movs
test
fs
dec
es
mov
mov
jecxz
mov
push
mov
push
icebp
dec
jo
mov
dec
outs
scas
in
adc
and
mov
in
and
inc
jbe
inc
push
adc
adc
add
sub
test
pop
in
sahf
loopne
or
push
dec
ins
add
inc
xchg
mov
push
loopne
mov
pop
push
push
inc
aaa
pusha
leave
leave
in
inc
daa
dec
and
int
lods
fist
or
mov
enter
or
or
mov
pushf
cwde
enter
xchg
nop
mov
or
xor
xchg
dec
jl
js
enter
push
dec
inc
and
cmp
sub
and
jb
and
sbb
sbb
and
sbb
and
fidiv
cmc
clc
pop
ror
sar
mov
push
mov
add
pusha
mov
xor
mov
cmp
out
adc
call
clc
pop
out
jae
das
add
(bad)
mov
or
mov
jo
nop
imul
mov
jge
nop
xor
cs
pop
add
mov
push
lds
fwait
leave
leave
leave
ja
mov
sub
leave
leave
leave
inc
xor
inc
mov
adc
xor
mov
or
cld
or
les
or
push
leave
and
xor
mov
xchg
cwde
pushf
cmp
mov
iret
add
test
and
rcl
test
mov
hlt
push
push
sbb
or
fimul
in
mov
rcl
cmp
fdivr
mov
or
in
or
out
ja
mov
mov
rep
ja
pop
or
push
add
xor
or
(bad)
dec
xor
push
add
inc
pusha
clc
add
pop
cmp
dec
clc
ins
mov
retf
cld
fst
adc
inc
sbb
mov
add
add
jbe
add
dec
call
xchg
ins
lods
push
idiv
adc
ins
lock
or
sbb
mov
shl
lods
sbb
mov
jne
push
ins
add
sub
inc
and
pop
add
push
push
mov
loop
sbb
aas
push
out
(bad)
xor
cmp
je
jno
add
add
add
cmp
push
sbb
hlt
arpl
pop
test
jb
into
cmp
sub
mov
adc
js
adc
xor
and
sub
cmp
jbe
push
(bad)
lea
fiadd
push
pop
pop
jne
xor
xlat
aaa
ret
add
mov
and
xchg
nop
test
pop
or
lea
add
jne
inc
cmp
popf
test
sub
adc
or
xor
jns
push
jnp
xor
inc
or
ret
inc
pop
pop
push
or
test
andps
mov
jl
int3
jne
bound
mov
sub
cmp
push
push
lea
dec
sbb
test
loop
adc
into
jmp
push
popf
sbb
push
rol
mov
enter
add
add
pop
loopne
or
jl
in
cmp
or
inc
sbb
aaa
jecxz
shl
in
test
dec
lock
sbb
push
jno
leave
test
in
pop
or
sub
pushf
add
lea
cmp
out
addr16
popa
fimul
cmp
and
out
inc
nop
or
out
adc
lock
fidivr
and
or
sbb
xchg
and
xor
add
cdq
and
lock
ret
fnsave
pop
shr
adc
jmp
cmp
outs
leave
adc
in
inc
lock
mov
inc
outs
dec
push
sub
xchg
ja
mov
pop
mov
or
je
push
push
push
fcmovne
inc
es
dec
pop
sbb
or
sbb
pusha
or
or
sbb
mov
cmp
sbb
or
pop
icebp
cmp
lahf
call
push
and
mov
and
inc
cmps
push
mov
je
or
inc
and
add
xchg
xor
daa
adc
or
enter
test
sub
add
cmp
fs
pushf
rol
add
inc
enter
movs
shr
das
adc
mov
xor
xchg
movs
mov
mov
test
add
xor
lods
int3
in
push
cwde
lea
cmp
cdq
xchg
mov
cs
mov
push
nop
sub
cmp
mov
dec
cs
cmp
in
inc
ror
add
inc
inc
rol
inc
mov
push
or
inc
enter
inc
les
add
inc
add
lds
enter
dec
sub
xor
enter
xor
push
jb
add
sbb
dec
test
and
enter
sbb
jo
cdq
cmp
push
mov
fimul
bound
push
in
and
push
sbb
cmps
inc
inc
push
xchg
sub
nop
nop
or
inc
push
nop
or
nop
pop
pop
pop
inc
push
nop
adc
nop
pop
pop
pop
inc
push
nop
adc
nop
pusha
popa
bound
nop
sbb
nop
arpl
push
nop
sbb
nop
addr16
nop
and
nop
imul
call
nop
ins
ins
outs
inc
push
nop
sub
nop
outs
jo
jb
xchg
cmp
test
jae
adc
or
cld
cmp
mov
inc
push
cmp
loop
jbe
pop
inc
cs
add
enter
js
cmp
jb
jp
sbb
cmp
jnp
pop
inc
cs
add
nop
inc
push
and
loop
adc
mov
xor
or
or
fdivr
mov
int
test
test
adc
retf
cs
mov
xchg
inc
cs
jbe
dec
mov
mov
push
lea
(bad)
in
push
nop
sbb
jecxz
and
inc
es
xchg
fs
mul
je
mov
xchg
xchg
mov
xchg
add
pop
lea
mov
or
cmp
pop
push
(bad)
add
jbe
cs
mov
test
pusha
cld
pushf
dec
je
and
xchg
data16
repnz
xchg
push
pop
nop
retf
push
cdq
sbb
and
movs
mov
push
call
xchg
movs
or
cld
mov
pushf
js
add
mov
and
fcomp
push
xchg
add
cmp
push
jo
and
xor
and
fsubr
inc
movs
xchg
and
enter
in
xchg
retf
mov
enter
aam
movs
fs
xchg
or
es
ror
rcl
add
xchg
pop
les
nop
test
inc
push
pop
cmps
lods
cwde
mov
push
cmp
pop
jb
test
cwde
in
inc
stos
mov
sub
cwde
mov
mov
add
in
or
add
loopne
or
shr
lea
dec
loopne
lea
pop
xchg
rcl
mov
sbb
stc
lock
adc
or
pop
mov
dec
daa
jne
lock
lock
faddp
(bad)
add
lea
adc
and
mov
or
pop
xor
movs
or
call
inc
push
add
add
lock
in
in
and
in
add
xor
xchg
pop
or
and
or
inc
js
lahf
(bad)
push
leave
leave
ins
mov
adc
adc
inc
stos
adc
xor
jl
es
test
leave
or
push
jge
add
push
pop
adc
jle
add
cmp
in
dec
dec
add
pop
or
xor
pop
add
int3
pop
xchg
inc
mov
adc
iret
and
cmps
aam
adc
adc
cdq
adc
adc
mov
xchg
int3
enter
sub
jl
pop
jb
cmp
cdq
in
pushw
pop
sar
sbb
fs
sub
les
mov
mov
loop
mov
or
mov
enter
fs
xlat
mov
push
lock
scas
daa
xchg
lock
pushf
dec
mov
scas
dec
xchg
inc
lock
cmp
out
les
mov
int3
ret
lea
mov
add
call
xor
dec
jb
das
call
inc
or
cmp
push
out
jbe
das
sub
xchg
sub
mov
mov
ss
pop
xchg
or
outs
ins
rcr
and
inc
or
adc
cmp
mov
cmp
and
bound
int3
les
push
lock
enter
xor
push
xchg
inc
push
xor
out
xchg
jo
movs
inc
cs
jne
sbb
cmp
das
retf
mov
pop
arpl
adc
mov
aam
fsub
push
xlat
pop
pop
push
fstp
in
fadd
aad
ins
rol
shl
fsubr
add
adc
xchg
(bad)
push
fcomp
adc
cli
or
jb
mov
mov
inc
or
retf
sub
ds
xchg
and
adc
inc
test
jnp
sbb
xchg
test
and
lds
push
pop
jge
pop
or
bswap
ret
movs
rcr
push
add
push
fmul
cmps
imul
loopne
jo
xor
push
add
ins
sbb
pop
and
add
test
mov
aad
and
lea
add
aad
add
hlt
or
pop
pop
shld
mov
out
mov
and
iret
adc
jne
or
pop
out
push
jns
pop
add
push
push
add
jne
jns
push
jo
pop
sub
add
ss
push
dec
inc
inc
rol
clc
loopne
xor
and
das
enter
leave
repnz
add
xchg
sar
in
adc
ds
pop
mov
mov
push
lods
sbb
sub
adc
fs
(bad)
(bad)
push
adc
mov
add
push
mov
cmp
mov
lahf
adc
or
(bad)
adc
popf
xchg
inc
add
mov
and
retf
jae
adc
call
sbb
dec
sub
test
shr
jns
mov
sbb
in
loop
jmp
sbb
loope
pop
or
fsubr
enter
(bad)
in
leave
adc
add
xor
mov
mov
adc
inc
push
inc
push
mov
xor
xor
sar
sub
mov
jmp
mov
add
inc
cwde
dec
stos
rol
pop
jno
cmp
cdq
xchg
icebp
mov
ret
not
add
and
mov
sub
add
test
mov
repz
push
inc
ins
adc
cwde
push
xor
aaa
and
outs
jmp
fwait
cli
add
mov
jecxz
pop
imul
push
xchg
fstp
test
push
add
mov
cdq
sub
lea
movs
push
mov
cdq
xchg
xchg
lahf
movs
out
inc
add
repz
inc
cmp
add
mov
jns
and
push
push
fidivr
or
sub
sahf
mov
mov
enter
sbb
xchg
jl
dec
mov
pop
add
test
cmp
push
add
mov
dec
or
pop
call
movs
mov
lds
xchg
outs
loop
ret
popf
mov
pop
push
push
(bad)
jno
add
or
cmp
or
inc
pop
call
rol
dec
pop
ss
pop
push
scas
jg
fwait
in
or
add
push
push
push
jae
or
lock
rol
dec
clc
pop
add
add
push
and
mov
jnp
retf
js
out
jne
cwde
pop
cmp
sar
(bad)
call
sub
mov
jg
jl
test
jae
and
push
pop
push
add
enter
or
or
rcr
ins
push
add
ins
lea
es
inc
ret
retf
dec
jb
sets
and
add
and
js
int
add
or
das
mov
cmp
push
sub
jbe
push
test
(bad)
or
dec
fisttp
or
cmp
fmul
(bad)
or
pop
pop
jae
adc
mov
ret
cmp
adc
push
in
xchg
ror
call
xchg
push
or
imul
dec
xor
call
shr
retf
sbb
cmp
jl
jg
cmp
jbe
dec
sbb
aam
sub
jmp
sub
cli
mov
mov
push
clc
rol
push
push
cmps
mov
mov
shl
ins
mov
mov
push
mov
icebp
sbb
push
push
ds
push
push
push
xchg
jo
mov
hlt
push
pop
fstp
pop
pop
test
push
(bad)
(bad)
cmp
adc
add
sub
test
sub
pushf
pusha
cmp
clc
jne
inc
xor
mov
je
js
push
fs
jl
jae
lods
sbb
push
and
push
and
ja
out
loopne
(bad)
xchg
inc
jmp
repnz
jg
cmp
std
xchg
cwde
add
push
cmp
mov
mul
(bad)
dec
or
fmul
fstp
push
pushf
(bad)
ins
das
ficom
jl
call
push
cmp
or
push
js
lea
add
adc
pop
repz
repz
cs
jl
call
dec
or
aad
push
jmp
push
aam
(bad)
and
jp
(bad)
ins
xor
jmp
aas
loopne
bound
or
jmp
jmp
inc
mov
and
shl
push
leave
xchg
cwde
xchg
dec
xchg
dec
pushf
cmp
sbb
sbb
repnz
fdivr
ins
movups
mov
and
add
pop
push
ds
mov
out
add
pop
add
xor
and
jae
in
sbb
outs
(bad)
imul
retf
jp
dec
push
inc
hlt
or
aam
cmp
fs
cmp
jne
loopne
pop
inc
push
or
or
push
and
inc
sub
and
daa
sbb
sub
test
pop
lea
sar
loopne
mov
or
pop
sbb
xchg
je
xor
mov
mov
loopne
dec
cmps
dec
fcomp
or
push
jmp
shr
and
add
(bad)
and
push
jmp
push
shl
cmp
mov
lfs
inc
ja
inc
stc
clc
dec
push
inc
and
rcr
ja
and
dec
cli
and
xor
test
clc
icebp
imul
movs
add
ror
data16
cmp
je
mov
fisttp
adc
push
jns
inc
call
leave
adc
sub
sub
mov
inc
xor
in
mov
in
push
mov
mov
adc
add
push
inc
xchg
inc
ins
or
dec
and
imul
xor
mov
push
test
adc
stos
xchg
cmc
addr16
inc
pop
lahf
rcl
xor
pop
or
movs
pop
outs
adc
loope
int3
shr
or
adc
and
leave
adc
jmp
inc
cs
pop
aam
pop
or
ror
cmp
pusha
and
dec
fdivr
pop
xchg
dec
xor
mov
and
mov
jne
je
sub
adc
stos
and
push
push
mov
ds
push
(bad)
aaa
inc
sbb
cs
mov
cmp
lods
jg
push
pop
jl
ficomp
jae
sbb
sub
repz
jg
mov
jmp
call
or
in
fisttp
icebp
or
pop
ret
das
fcmovu
add
cmps
push
add
dec
psubsw
shl
jne
test
mov
mov
mov
or
pop
or
dec
jno
loope
not
xchg
idiv
sub
add
rcr
out
cmps
push
jb
mov
cmp
das
js
enter
jg
jge
out
cmp
jl
jg
pusha
and
inc
pop
cmp
jbe
push
fiadd
int
jmp
inc
popa
addr16
je
mov
add
push
mov
lock
mov
pop
pusha
jb
test
cmp
dec
dec
cdq
loopne
inc
xchg
les
jbe
xchg
fistp
pop
hlt
jle
lea
mov
daa
mov
movs
pop
mov
xchg
cmp
jl
pop
pop
(bad)
mov
adc
add
adc
mov
xor
jle
push
movs
int
jg
cwde
jbe
lds
sub
ret
adc
cdq
pop
fstp
retf
ret
leave
ret
repnz
and
mov
pop
inc
jle
mov
cdq
mov
cmp
nop
sub
mov
jnp
test
jle
cmp
sbb
fadd
or
loope
fcmove
jmp
push
lea
add
jne
add
mov
push
push
movs
push
movntq
gs
cmp
pusha
cmps
push
inc
mov
push
icebp
inc
hlt
jge
jne
test
sbb
sub
xor
repnz
or
or
cs
(bad)
pop
je
mov
sbb
pop
mov
mov
dec
and
xchg
aam
cmp
inc
mov
pop
fcom
or
pop
cmp
jecxz
mov
mov
popa
pop
inc
jl
sub
jbe
pop
cmp
push
pop
lock
sbb
add
dec
aaa
push
aaa
and
xor
lock
mov
or
mov
add
mov
mov
sub
rol
xchg
dec
mov
loop
xor
call
add
dec
sub
add
sahf
cmp
cmp
mov
enter
shl
adc
inc
mov
pop
sub
xor
push
mov
call
iret
lahf
mov
call
add
push
rol
pop
sub
add
call
cli
add
mov
cmp
jae
lahf
mov
jns
xchg
and
call
mov
dec
or
imul
and
movs
pop
ins
fistp
inc
xlat
adc
xor
xor
(bad)
pushf
xchg
adc
aaa
or
cmp
and
movs
and
inc
enter
inc
adc
mov
sbb
mov
popf
xchg
inc
adc
inc
or
lds
cmp
adc
dec
add
mov
mov
or
(bad)
push
adc
or
mov
cmp
outs
push
jne
repz
push
cmp
les
test
adc
jg
cli
pop
pop
jae
test
test
add
and
rol
xchg
or
mov
test
adc
or
mov
mov
sub
jge
xor
and
fs
imul
or
dec
call
je
jmp
adc
xor
jmp
lea
jge
sub
or
push
jmp
add
mov
cmp
add
call
loopne
pop
nop
pusha
add
or
push
add
xor
ret
and
adc
mov
loopne
es
push
pop
push
(bad)
mov
or
push
push
push
pop
sbb
imul
pop
inc
daa
adc
mov
pop
in
and
adc
sub
inc
ficomp
outs
adc
mov
in
rol
(bad)
dec
in
pusha
repnz
rol
adc
jmp
es
outs
dec
(bad)
pop
cmp
inc
fs
fnsave
push
or
ins
jmp
imul
sub
add
add
xchg
lods
cdq
lods
add
jb
sahf
sar
jecxz
imul
mov
push
nop
add
xchg
xor
and
cwde
pushf
cwde
je
inc
les
imul
nop
retf
js
push
jne
jg
shl
and
loopne
aam
mov
jmp
push
inc
add
cmc
add
loopne
mov
inc
and
lods
xor
jge
xor
pop
add
cmp
jg
scas
cmp
jne
jae
pop
clc
mov
(bad)
fidivr
add
xchg
call
add
dec
into
sar
inc
movs
xchg
in
push
xchg
push
add
inc
(bad)
lock
pop
rcr
mov
pusha
and
dec
add
or
out
nop
mov
mov
mov
mov
out
add
mov
in
add
pop
sub
xor
cmp
mov
add
or
and
or
adc
xor
dec
cdq
and
push
rcr
in
xchg
movs
add
or
lea
or
and
mov
xor
popa
mov
cs
add
or
add
scas
test
xor
mov
in
mov
sub
iret
sbb
lock
add
cmp
sbb
fwait
inc
ret
add
add
jl
and
clc
(bad)
inc
clc
sbb
outs
icebp
adc
ret
push
add
add
add
(bad)
call
pusha
mov
dec
inc
inc
add
mov
ret
aam
adc
and
jns
rcl
je
adc
push
pop
add
or
clc
js
jmp
lock
push
lea
add
or
in
adc
mov
pop
jmp
mov
mov
mov
adc
dec
cmp
jo
mov
mov
outs
ins
xor
pop
jo
sti
stos
aaa
mov
dec
add
pop
mov
add
jno
dec
pop
and
pop
leave
aaa
pop
adc
cmp
stos
pusha
and
sbb
je
pusha
push
xor
in
jmp
xchg
jmp
or
repz
pop
xor
and
in
mov
xchg
mov
dec
iret
or
mov
add
push
aaa
xchg
pop
mov
sub
fs
push
push
and
and
retf
xor
mov
pop
xor
add
es
jmp
pushf
fs
loopne
adc
(bad)
jmp
sar
lock
push
push
je
pusha
mov
sub
mov
push
xor
cmp
dec
pop
inc
mov
xor
sbb
adc
inc
push
aas
ins
and
jo
je
push
cmp
(bad)
cmp
xor
push
jge
xchg
out
jle
push
sbb
pop
je
and
movs
scas
or
pusha
mov
xchg
mov
push
xchg
cs
pop
or
call
mov
pusha
in
bound
cmps
mov
jns
mov
pop
pop
shl
add
jae
dec
(bad)
mov
add
push
jo
int3
(bad)
ja
mov
push
dec
stos
cmp
push
jl
jg
test
jbe
scas
add
adc
and
xlat
fimul
sbb
jmp
adc
sbb
mov
dec
pop
pop
push
adc
cld
ds
cmp
or
pop
xchg
data16
stos
push
fs
mov
mov
inc
sbb
mov
and
adc
rcr
mov
mov
test
mov
cmp
je
push
push
sub
mov
mov
jl
sub
jmp
mov
mov
sub
and
adc
adc
sbb
push
cmp
fwait
mov
or
sub
fstp
adc
and
sub
cmps
xchg
inc
xor
sbb
cmp
jg
sar
jg
(bad)
dec
and
or
sbb
jge
or
aas
jbe
fs
test
fld
je
int
cmp
imul
inc
add
inc
dec
cmps
pop
push
dec
mov
sbb
pop
ins
test
inc
add
push
fstp
inc
cmp
and
movs
sti
jle
addr16
out
sahf
and
cmp
inc
push
mov
data16
mov
movs
rcl
pop
jnp
ss
or
adc
inc
add
jge
or
mov
test
mov
test
mov
push
sbb
mov
mov
cmp
push
jmp
je
clc
inc
jg
or
(bad)
xor
jne
mov
add
mov
adc
cmp
jge
push
or
aas
aas
popa
mov
test
dec
mov
cmp
in
and
adc
or
dec
mov
cmp
inc
jmp
mov
lea
adc
inc
loop
sbb
rdmsr
sbb
movs
add
imul
xchg
js
sbb
fneni(8087
je
push
mov
xor
xor
adc
sub
fs
pop
fcomp
pop
imul
cmp
mov
ss
js
add
clc
cmp
add
inc
sub
mov
mov
je
cmp
mov
jp
mov
push
adc
push
push
push
adc
les
cmp
sbb
sub
sbb
jo
ins
push
les
dec
xor
jae
clc
ds
shr
sbb
int3
pop
add
ins
sbb
arpl
cs
test
rcl
call
sbb
int3
inc
push
les
jns
push
test
clc
leave
js
cmp
int
pop
mov
call
dec
jo
inc
(bad)
mov
cmp
icebp
inc
(bad)
sbb
in
push
pop
adc
pushf
je
jo
aad
rcr
mov
sahf
lahf
and
push
test
popf
xchg
jl
mov
and
cmp
sub
stc
mov
and
dec
xchg
add
cmp
in
pop
lods
push
scas
mov
test
xchg
or
mov
push
stos
imul
pop
cli
or
ror
shr
nop
mov
fmul
movs
jns
inc
push
add
loope
fs
add
xor
jns
sub
dec
cmp
jecxz
inc
call
dec
push
enter
add
push
xchg
repnz
repz
je
add
lea
(bad)
mov
fisubr
cmp
and
mov
and
sub
jb
movs
call
add
or
nop
xor
test
int3
jmp
push
aad
sub
cmp
mov
aas
je
add
fmul
in
or
nop
cmp
imul
pop
out
dec
enter
fs
pop
in
retf
xor
imul
popa
xchg
jmp
sahf
and
mov
jns
shl
test
sbb
xor
dec
push
xchg
js
int3
push
fwait
jp
pushf
mov
sub
inc
dec
movs
cmp
in
ror
lock
push
and
test
pushf
out
lods
jb
daa
adc
shr
icebp
push
add
sub
mov
sbb
(bad)
mov
rcr
int3
push
mov
inc
out
aam
push
pop
xchg
data16
cmps
pop
push
and
fs
sbb
movs
imul
ins
pop
hlt
mov
add
lock
rcr
inc
jb
into
dec
adc
in
add
iret
data16
adc
iret
jmp
mov
popf
mov
jecxz
push
lea
std
out
pop
rcl
fcomp
sti
cmp
jl
jecxz
jg
jbe
call
fmul
cmp
cli
mov
and
push
arpl
mov
cmp
xchg
inc
or
mov
(bad)
dec
pop
cmp
(bad)
or
dec
inc
push
in
icebp
arpl
and
aad
cmp
lods
push
sti
mov
jb
cmp
push
lea
sub
adc
sbb
or
adc
pusha
push
add
repnz
lea
int
mov
in
push
adc
jo
xor
enter
pushf
pop
ror
inc
push
inc
inc
push
push
loope
fistp
mov
mov
nop
je
jl
xchg
fldenv
movs
sbb
nop
cmps
push
movs
push
xor
and
les
xor
xor
movs
inc
fmul
add
cmp
sti
mov
adc
inc
gs
push
mov
and
push
and
push
and
fwait
sbb
in
dec
mov
xchg
pop
out
mov
jb
xchg
dec
or
add
add
pop
and
sbb
jne
push
xlat
cmp
das
je
push
inc
jle
clc
mov
icebp
push
shl
je
pop
iret
xor
xchg
dec
inc
pop
jp
dec
adc
ret
mov
ror
pop
movs
rol
pop
inc
push
jl
out
je
sbb
jne
cli
xchg
push
cmp
enter
movs
(bad)
jmp
dec
cwde
mov
iret
stos
mov
xchg
gs
cmp
je
cmp
je
jnp
ins
fsub
jmp
sbb
or
das
cmps
rol
inc
fiadd
xchg
adc
pop
mov
and
add
push
in
mov
inc
pop
fimul
push
jmp
es
rcr
xor
ret
mov
adc
je
test
push
fidiv
test
mov
retf
rol
ss
ss
cmps
adc
es
iret
xchg
enter
pop
mov
sbb
lea
nop
mov
test
xchg
mov
imul
jl
mov
and
hlt
jg
mov
inc
int
or
inc
mov
mov
ss
ret
xor
hlt
push
jg
jl
(bad)
js
cli
add
data16
or
adc
in
add
sub
add
adc
dec
aad
add
sbb
mov
or
pusha
and
lock
lds
xor
pop
mov
add
movs
jno
add
pop
popa
push
stos
iret
call
fstp
jp
jg
xchg
cs
dec
push
dec
mov
cld
in
sbb
and
sbb
and
std
push
or
in
add
fstp
add
(bad)
repnz
(bad)
jmp
lock
mov
mov
lea
loope
push
push
arpl
adc
inc
sbb
adc
inc
(bad)
sbb
sbb
jo
mov
test
sub
or
rep
out
iret
xor
mov
fist
inc
mov
add
sub
aaa
adc
rcr
movs
push
inc
ds
push
lea
mov
adc
cld
jbe
xor
or
sbb
or
mov
push
pushf
ret
out
out
or
jmp
mov
(bad)
jle
push
ss
imul
or
ja
or
inc
jl
jmp
xor
mov
lods
adc
pop
adc
push
mov
daa
mov
jle
clc
inc
and
xor
jl
push
inc
cmp
mov
mov
push
mov
lock
mov
add
fcom
push
popa
xor
adc
cmp
dec
xor
push
inc
cmp
icebp
add
push
retf
push
push
mov
int
out
pop
(bad)
mov
mov
aas
mov
xor
pop
pop
xor
pop
inc
sub
pop
test
adc
mov
into
stos
imul
lock
outs
test
adc
jle
test
sub
mov
leave
sub
mov
into
dec
out
jecxz
xchg
cmp
je
or
push
outs
loop
test
icebp
or
adc
sub
pop
ret
call
inc
or
cmp
jecxz
mov
mov
xchg
add
and
call
mov
aaa
out
sbb
or
xor
sbb
adc
add
sbb
or
add
loope
(bad)
sbb
dec
cmp
in
pop
jo
add
inc
mul
jmp
push
(bad)
jge
add
pushf
pop
leave
jnp
mov
adc
daa
cmp
and
shl
and
pop
or
add
add
call
pop
je
mov
rcl
sub
push
ja
adc
sbb
dec
mov
pop
ret
xchg
ss
fdiv
inc
sahf
shr
ins
jne
fst
adc
inc
or
xor
cld
je
data16
cmps
add
cmp
jle
sti
cmp
aaa
mov
adc
or
pushf
jl
jg
add
pop
adc
or
imul
cld
mov
inc
pop
and
ret
out
mov
or
and
(bad)
add
xor
add
retf
or
iret
push
cld
add
and
scas
sar
das
cld
cmp
jl
cmp
jb
add
cdq
add
adc
fs
adc
cmp
jg
pop
sbb
xchg
xchg
pop
sbb
lea
jne
pop
cmp
add
ret
add
enter
xor
aas
mov
adc
dec
push
pusha
push
fcmovu
retf
rcr
mov
lds
dec
sub
mov
sbb
test
mov
pop
mov
jmp
inc
rcr
das
loope
adc
cmp
jns
mov
jns
rcl
aas
call
sar
xchg
or
add
sbb
mov
pop
adc
push
call
fild
fst
call
mov
push
inc
(bad)
or
and
jecxz
pop
xchg
or
(bad)
cmps
pusha
mov
and
push
cmp
aam
jecxz
cdq
cmp
or
call
inc
jecxz
adc
mov
ror
cmc
adc
rcl
cmp
je
push
or
push
pop
or
add
push
push
movs
sub
pusha
nop
les
sbb
movs
jle
clc
fpatan
or
add
sar
pop
push
imul
int
sbb
adc
shl
jle
mov
inc
ret
and
adc
sub
jle
inc
xor
loopne
repnz
mov
sub
or
pop
jmp
cmp
dec
sbb
mov
adc
dec
clc
or
xchg
jmp
adc
into
mov
loopne
push
ins
xor
mov
sbb
daa
mov
mov
in
in
dec
ds
dec
sbb
clc
sbb
add
sbb
xchg
push
jg
and
leave
add
and
(bad)
sub
enter
or
and
jb
or
push
sbb
nop
or
or
inc
push
dec
push
bndstx
or
mov
push
dec
cld
or
xchg
neg
sub
push
jo
leave
data16
lock
adc
and
cmp
pop
test
cmp
mov
enter
fld
cmp
xlat
es
jbe
adc
and
mov
adc
mov
mov
and
dec
(bad)
and
jbe
les
enter
xchg
dec
jb
adc
pop
sbb
aam
adc
test
xor
cmp
jl
es
mov
xchg
cwde
pushf
mov
inc
add
pusha
lock
xchg
lods
not
(bad)
cmp
adc
mov
enter
cmp
jo
in
(bad)
cmp
jnp
dec
push
push
pop
xor
inc
mov
push
ror
int3
jo
js
cs
retf
movs
xchg
test
jb
pop
in
je
sub
mov
add
or
retf
xor
jae
sar
push
push
fist
js
or
push
push
mov
in
out
fst
out
sar
push
sbb
lea
loopne
mov
rcl
jmp
ret
aas
xchg
retf
rol
rep
mov
xchg
cmp
ins
outs
mov
dec
idiv
mov
adc
xor
or
pop
push
or
mov
mov
pop
or
add
cmp
lea
add
xchg
sbb
ss
sub
and
adc
adc
xchg
pop
ja
cwde
and
jnp
out
repnz
movs
or
stc
cs
test
icebp
sub
or
in
jb
push
jo
je
lahf
xchg
retf
fdiv
add
sub
sub
aam
fist
fsub
das
fcomp
xor
or
nop
pop
in
rcr
and
push
ds
and
push
mov
add
push
call
xchg
push
and
repz
or
call
jnp
mov
inc
push
push
lock
push
adc
(bad)
push
mov
hlt
mov
push
pusha
and
cmp
nop
cmps
cmps
pop
push
and
push
mov
dec
dec
sub
jl
or
icebp
push
xor
fadd
adc
adc
pop
cmp
push
lea
cmp
mov
sbb
lea
mov
out
push
pop
sub
mov
into
push
int3
add
sbb
outs
push
rcl
add
nop
idiv
sbb
nop
cwde
xchg
nop
sbb
cmp
jb
add
daa
mov
and
aam
mov
push
sbb
jb
clc
and
sbb
in
call
mov
daa
jnp
outs
ins
push
or
dec
and
enter
rcr
dec
pop
(bad)
icebp
or
push
aam
ror
das
mov
mov
add
adc
and
sub
or
and
inc
cld
pop
sbb
xlat
pop
mov
loop
pop
outs
pop
sbb
sbb
pushf
movs
or
sub
cmp
enter
sbb
sbb
fwait
fwait
xchg
add
pop
fisubr
dec
pop
sbb
or
js
sbb
sbb
xor
shl
xor
ror
xor
out
mov
dec
gs
cmp
mov
or
add
and
add
add
sub
jns
in
and
in
add
jmp
and
jns
in
call
xchg
push
pop
push
cli
dec
push
cld
movs
enter
sti
and
stc
push
pusha
ins
arpl
loopne
inc
push
xchg
popa
sub
ds
in
xchg
and
sbb
and
cmp
push
scas
push
inc
sub
push
(bad)
rcl
xchg
in
mov
stos
add
das
(bad)
sub
test
cmp
loopne
(bad)
jle
push
les
and
push
jmp
sbb
mov
mov
mov
xlat
push
mov
push
add
adc
mov
pop
push
push
adc
mov
mov
aas
jne
add
jmp
cmp
push
mov
fidivr
leave
mov
cld
retf
cmp
push
call
mov
adc
adc
inc
test
cmp
add
(bad)
mov
mov
pop
jecxz
out
inc
je
push
pop
push
jle
push
icebp
ins
ret
inc
mov
out
or
or
(bad)
lock
retf
lock
fidiv
sbb
mov
jnp
out
adc
push
or
bound
sub
sub
dec
push
fmul
les
xchg
push
(bad)
jb
fcomp
imul
sub
push
nop
lea
repz
and
push
sub
mov
cmp
mov
pushf
in
add
sub
movs
mov
xor
mov
cdq
in
push
data16
jo
mov
test
movs
pushf
mov
push
je
rcr
cmp
(bad)
xor
push
leave
clc
in
xchg
jmp
inc
and
dec
mov
jnp
fld
inc
sub
clc
and
out
push
das
and
test
xor
push
sbb
lahf
mov
add
(bad)
cmps
cmp
dec
sahf
mov
je
outs
or
pop
mov
jle
out
cmp
push
ret
test
and
popa
and
mov
nop
xor
add
js
or
and
xchg
cdq
js
je
jl
(bad)
lahf
sub
add
stos
add
repz
mov
mov
sbb
mov
mov
add
mov
fidiv
lea
push
adc
add
mov
in
psllw
sahf
data16
ret
cmp
sbb
pop
xor
rcr
loopne
fs
loopne
jmp
je
test
inc
cmp
add
cmp
jne
cmp
iret
jbe
mov
and
test
dec
inc
dec
je
jb
or
inc
fstp
(bad)
fimul
cs
mov
enter
add
xor
dec
je
sbb
or
inc
ret
mov
add
or
cmp
jne
lea
mov
mov
aaa
mov
push
or
mov
jmp
cld
lahf
std
xor
and
or
or
pop
cmp
jle
int
mov
mov
das
sub
retf
and
cmps
jns
cmp
xor
clc
and
out
xor
nop
push
fcom
xor
dec
retf
jae
cmp
sub
pop
xchg
mov
and
or
ror
mov
add
pop
dec
pop
mov
imul
sub
sub
mov
push
mov
pop
inc
and
adc
icebp
sbb
stos
and
sar
pop
pop
mov
jl
adc
mov
sbb
cmp
mov
or
loop
or
hlt
mov
adc
push
jge
or
adc
jbe
jl
dec
dec
push
aam
dec
rcr
mov
js
and
int
jmp
or
or
and
add
push
or
xor
add
mov
or
inc
sbb
and
shl
add
adc
(bad)
and
push
das
loopne
mov
mov
fadd
sbb
mov
pop
sbb
jne
and
cli
and
nop
ins
xor
call
clc
ret
dec
dec
inc
movs
imul
rol
add
or
sub
cmp
sbb
mov
adc
push
ja
cli
push
push
jmp
and
in
and
test
jp
add
(bad)
cmp
adc
push
pop
idiv
(bad)
out
mov
or
mov
cdq
and
add
shl
shr
clc
add
cmp
gs
ss
pop
or
push
push
mov
add
pop
adc
jb
jb
inc
cs
loope
jo
jmp
das
push
push
sub
inc
pusha
adc
not
inc
jnp
dec
xor
mov
cld
lahf
sti
jge
out
cld
and
pop
or
push
clc
and
cmp
lock
hlt
sbb
mov
jge
shl
xor
jne
cmp
sub
jae
xlat
jo
adc
adc
imul
push
cmp
fwait
sbb
mov
and
rcl
mov
pop
cmp
add
in
cmp
dec
sbb
adc
sbb
add
repz
adc
pushf
inc
push
jae
adc
nop
adc
and
xchg
sub
dec
loop
mov
arpl
push
or
fnstsw
pop
cwde
pop
dec
push
test
out
mov
rol
sbb
push
mov
dec
cmp
sahf
inc
and
shl
inc
fidivr
dec
push
cmp
inc
loopne
ss
cmp
mov
ins
mov
jns
data16
fiadd
push
adc
sbb
sbb
ret
iret
sbb
add
stc
mov
(bad)
ret
xor
push
push
adc
(bad)
dec
push
xor
(bad)
lods
aad
les
call
gs
pop
je
xchg
rol
rol
ins
je
xchg
lock
xor
or
xchg
pop
add
adc
cld
sbb
pusha
push
cmp
push
push
add
loop
pop
or
aad
int
or
fisub
dec
and
pop
sbb
jecxz
ds
or
imul
cmps
pop
inc
in
lods
mov
jb
shr
dec
add
mov
div
pop
movs
mov
test
jb
mov
or
test
loop
out
punpcklbw
sbb
adc
add
sub
pop
cld
mov
push
mov
gs
jge
ds
jmp
int3
mov
cmp
outs
dec
in
adc
xor
call
pop
sbb
(bad)
cmp
pushf
jo
mov
sbb
sbb
xchg
int
lock
sbb
xor
jmp
mov
jne
ja
ror
xor
loopne
sub
sub
add
aas
mov
xor
pop
call
ds
add
shr
lea
or
jbe
push
nop
dec
xchg
popf
in
inc
mov
cmp
call
push
not
xlat
mov
mov
lea
out
mov
adc
xlat
xor
inc
movs
pop
jp
aaa
fwait
sahf
mov
loopne
in
call
loop
inc
and
out
lahf
movs
sbb
(bad)
sbb
add
adc
jbe
mov
lock
push
test
inc
push
pop
mov
jecxz
xor
add
clc
clc
aas
shl
and
je
mov
push
hlt
test
inc
mov
loop
sbb
jecxz
arpl
fadd
inc
mov
push
jne
(bad)
out
adc
jmp
ficomp
push
push
add
push
pinsrw
push
pop
pop
pop
mov
(bad)
and
or
shr
mov
fstp
inc
retf
or
(bad)
(bad)
in
cwde
fcmovu
(bad)
je
xchg
push
and
and
into
xchg
loop
push
jbe
ficom
inc
or
add
cmp
mov
je
inc
mov
or
push
pop
pop
lock
call
hlt
sub
push
mov
inc
clc
dec
stos
pop
xchg
lea
pmaxsw
or
inc
push
imul
out
add
out
sub
cmp
and
or
or
add
and
push
xchg
lea
mov
dec
add
and
imul
inc
es
ins
cld
fs
sbb
(bad)
aas
pop
inc
sahf
add
in
jp
jmp
scas
push
inc
jns
dec
loop
sar
and
dec
popa
lock
push
(bad)
in
push
add
pusha
sub
(bad)
mov
xchg
loopne
sbb
mov
push
retf
mov
and
or
or
xchg
aad
mov
pop
into
dec
sbb
lods
cs
rcr
adc
xchg
or
add
add
nop
cmp
push
aad
pop
jae
fsubr
rcr
xchg
in
inc
inc
rcl
test
dec
pop
mov
sbb
je
or
or
push
ret
lods
dec
adc
adc
xchg
mov
cmp
repz
and
sbb
xor
loopne
repz
push
jno
test
not
inc
mov
sbb
(bad)
mov
adc
inc
jl
sar
and
(bad)
cli
adc
mov
xchg
outs
sub
sub
(bad)
sbb
mov
or
lock
inc
cmp
pop
jl
push
cmp
jb
or
outs
sbb
cmp
faddp
pop
lahf
mov
les
or
inc
cvtps2pi
pusha
adc
cmp
pop
sbb
aad
mov
or
add
and
sub
mov
pusha
and
mov
push
mov
add
add
jbe
xchg
mov
sub
movs
adc
add
ret
inc
lods
mov
jp
push
retf
pop
push
mov
xchg
rcl
jmp
imul
cmp
xchg
jmp
xchg
fs
pop
pop
cld
ret
cmp
mov
loopne
add
mov
lahf
cs
and
push
mov
stc
sub
test
sub
inc
jmp
xchg
(bad)
dec
test
jbe
(bad)
dec
jnp
fisubr
xchg
inc
sbb
mov
mov
jmp
mov
test
push
je
aaa
mov
test
ss
inc
add
pop
mov
cmp
mov
mov
mov
mov
push
mov
jb
inc
add
mul
or
inc
jb
in
dec
xor
sahf
test
inc
xchg
fild
push
or
adc
loope
or
retf
xchg
icebp
mov
movs
push
adc
dec
mov
sbb
dec
mov
mov
mov
rcl
jp
rcr
and
shr
les
mov
add
ins
hlt
lock
or
dec
test
nop
arpl
xchg
and
xor
add
ror
push
pop
mov
ror
or
inc
or
and
pop
(bad)
sar
jo
stos
retfw
ins
sub
xor
mov
inc
in
sbb
popf
mov
mov
jp
adc
daa
add
movs
inc
mov
daa
xor
xchg
shl
sub
xchg
stc
xchg
push
push
aam
jmp
adc
(bad)
(bad)
add
xchg
stos
aaa
sbb
xor
inc
add
push
mov
lods
add
movs
outs
es
pop
fs
(bad)
inc
adc
push
sbb
push
xor
int3
popa
loop
jmp
pusha
seto
test
add
add
xor
bound
xchg
js
sbb
call
add
enter
js
push
jmp
push
push
fld
test
push
ds
xchg
push
sub
pop
ret
inc
push
fs
or
xor
cmp
leave
popa
clc
neg
rcl
jle
cmps
pusha
jl
or
and
mov
lea
xor
shl
dec
rol
mov
shl
sbb
ins
pop
fsubr
sar
(bad)
add
fcomp
mov
inc
mov
outs
push
jge
adc
mov
not
clc
mov
sub
ins
mov
mov
loope
imul
cmp
fld
mov
pop
jb
stos
xor
call
je
adc
mov
mov
push
popa
shl
fadd
mov
test
movs
call
ror
add
sahf
std
(bad)
std
push
fdiv
add
addr16
push
imul
popf
clc
and
push
jne
call
mov
jl
mov
or
enter
push
or
bound
and
mov
push
xor
cmp
and
xor
lahf
push
jns
dec
push
rol
push
enter
xchg
jp
xchg
(bad)
xor
jecxz
dec
stos
je
mov
into
js
pop
es
and
rcr
inc
xor
jne
mov
and
dec
fsub
jno
pop
imul
pop
sub
cmp
mov
daa
sub
xor
xchg
dec
inc
adc
test
and
enter
(bad)
pop
sbb
sti
fcomp
rcr
inc
out
std
dec
movs
lahf
jmp
out
sub
jne
push
jmp
jo
xchg
mov
or
push
sbb
nop
sbb
mov
lods
fcom
sbb
ror
mov
mov
imul
sti
xchg
pop
inc
mov
adc
or
test
mov
inc
(bad)
loopne
adc
(bad)
in
jp
icebp
inc
fimul
dec
lea
aas
pop
adc
inc
cmp
add
add
and
push
loopne
push
mov
loopne
jbe
aas
mov
and
shr
or
int3
inc
(bad)
or
ds
cdq
and
jmp
daa
add
addr16
lds
mov
mov
dec
imul
ret
dec
loop
push
jae
push
or
push
sbb
xchg
mov
and
and
xor
sbb
arpl
inc
aas
sub
jge
adc
adc
push
mov
pop
or
in
jmp
aam
daa
rol
ins
adc
stc
stos
or
cwde
mov
xchg
sbb
dec
loopne
ret
push
stos
push
xchg
push
mov
push
and
mov
cmp
adc
add
in
rol
add
jmp
fcomp
test
mov
sub
push
loope
xlat
and
adc
arpl
repnz
js
lods
sub
mov
stos
mov
jbe
stos
nop
rcl
push
push
icebp
aaa
mov
pop
mov
mov
jle
xor
push
mov
sar
xor
cmp
setnp
xor
es
sbb
es
jmp
or
loop
js
sub
inc
out
movs
test
int3
aam
mov
xchg
fstp
cmp
mov
les
in
pop
xchg
jo
pop
es
in
aad
gs
pop
push
out
add
and
out
ss
in
es
push
aas
test
movs
mov
and
icebp
ret
or
out
retf
fdivr
dec
dec
stos
xchg
es
xchg
xchg
sahf
(bad)
mov
and
in
jmp
jmp
lea
leave
push
rol
pop
push
xor
or
push
sbb
add
xor
or
or
ret
pusha
sub
and
xor
push
add
adc
cld
add
out
add
fisttp
aas
jmp
push
add
loop
je
(bad)
push
shr
push
sub
es
sbb
fs
mov
add
mov
iret
ror
sahf
push
xchg
inc
mov
dec
fs
cmp
dec
inc
in
imul
retf
push
xchg
pusha
sbb
ds
push
sub
push
dec
sbb
jp
push
loope
sbb
xor
sub
inc
dec
sub
push
pushf
push
and
sub
daa
push
xchg
packsswb
(bad)
stos
inc
sbb
jo
jmp
test
pop
sbb
test
loope
mov
cmp
inc
sbb
movs
mov
push
mov
lods
pusha
cdq
inc
(bad)
mov
jmp
cmp
inc
movq
stos
mov
dec
outs
ins
jmp
mov
mov
and
xor
jne
in
cmp
sbb
push
lahf
xchg
cmp
adc
sbb
js
add
cmps
imul
xor
lea
mov
arpl
fwait
push
in
js
sbb
mov
jbe
rol
cmps
fstp
jg
adc
fdiv
js
push
ret
addr16
push
push
and
mov
sbb
push
cmp
jne
mov
dec
jnp
and
or
pusha
ja
push
pop
jl
dec
lods
or
pop
xchg
out
and
mov
je
inc
scas
inc
push
je
add
push
stos
xor
pop
cmp
jno
mov
dec
xor
add
ror
pusha
leave
in
lea
inc
movs
push
and
adc
sub
dec
xor
add
mov
mov
add
push
fnstcw
xor
and
adc
dec
cmp
xchg
or
jb
xchg
fadd
rcr
mov
stos
and
push
loop
pop
or
push
pushf
aaa
sar
or
int
iret
jnp
(bad)
inc
inc
mov
iret
sbb
or
add
xchg
imul
inc
movs
push
mov
jnp
out
sub
sub
cmp
call
enter
pop
int3
sub
mov
sub
adc
push
jg
sti
rcr
add
mov
adc
sub
sti
cmp
lods
xlat
fnstcw
fld
xchg
add
push
push
mov
sbb
or
push
nop
iret
shr
pusha
xor
cs
daa
fs
jo
jge
pop
in
mov
xchg
sub
inc
lea
mov
iret
mov
cmp
xchg
and
add
out
push
dec
inc
cs
or
dec
pop
test
pop
pop
push
or
push
push
pop
cdq
fs
push
xchg
les
push
fiadd
mov
lea
and
dec
sub
or
jl
adc
jecxz
xchg
adc
lea
jg
dec
jmp
cmp
mov
jnp
call
mov
movs
das
movs
xchg
mov
bound
pop
xor
in
ja
jns
fcmovne
jo
jo
pop
imul
lods
pop
(bad)
push
mov
(bad)
jle
adc
das
bound
call
sbb
les
je
and
jb
out
push
mov
test
ror
add
mov
in
cs
push
xchg
movs
retf
ror
imul
pop
sar
js
outs
fadd
enter
sbb
mov
sub
daa
adc
xchg
xchg
xchg
push
or
mov
imul
pusha
inc
push
cs
mov
jne
add
mov
adc
push
jb
sbb
fadd
xor
add
xor
sub
loopne
or
add
js
pusha
mov
sbb
or
adc
sbb
je
imul
pop
sub
or
stos
mov
sub
jb
sub
push
sub
adc
adc
pop
push
dec
pop
jecxz
test
sub
mov
or
inc
hlt
sbb
mov
ja
es
sub
rol
cwde
pop
add
not
ret
cmp
mov
das
outs
adc
add
cdq
mov
fcomp
test
cmp
dec
push
lea
mov
pop
icebp
int
add
push
or
xor
xor
push
pop
or
addr16
aaa
sub
jno
mov
mov
inc
sbb
inc
ds
sbb
es
xor
daa
int
lock
adc
or
(bad)
lds
out
pop
push
retf
mov
cdq
or
mov
adc
adc
pop
das
sub
mov
push
scas
xchg
mov
xor
mov
(bad)
into
adc
cmp
xchg
pushf
ret
stos
mov
leave
xor
or
push
movs
lea
xor
add
or
pop
je
push
inc
cdq
adc
mov
inc
lods
dec
dec
fcom
movs
test
or
push
cmps
and
mov
mov
mov
cmps
int3
(bad)
push
jne
mov
aas
mov
mov
mov
push
(bad)
jne
cmp
jne
test
jg
sub
pusha
jl
jg
cmp
jbe
rcl
stos
pop
cmp
imul
xor
pop
shl
push
mov
popa
cs
push
add
ins
cmp
sub
(bad)
movs
repnz
jo
retf
cmp
imul
lock
lea
or
xchg
loopne
inc
ror
add
fs
fucomi
adc
xchg
push
enter
sbb
add
je
push
rol
and
and
pop
sar
int
data16
cmps
je
push
push
daa
or
mov
cmp
pop
imul
push
les
jno
dec
adc
push
add
loope
cmp
arpl
adc
adc
cld
lock
lahf
mov
cmps
push
or
and
enter
loope
(bad)
cwde
mov
jnp
add
dec
retf
sub
xchg
or
outs
dec
xchg
es
xchg
idiv
add
pop
test
add
sub
xlat
mov
and
ds
push
jnp
mov
push
mov
push
lahf
pop
cmp
pop
push
cmp
mov
adc
outs
call
ins
dec
arpl
dec
rcr
add
mov
dec
and
clc
adc
cmp
clc
and
arpl
sahf
cmp
and
mov
mov
and
jp
and
xchg
inc
mov
bound
in
sub
lods
push
jge
inc
mov
push
cdq
pop
idiv
test
pop
inc
or
mov
lock
sbb
add
or
in
pop
outs
js
cli
neg
lahf
inc
mov
mov
movs
push
test
inc
mov
push
bswap
jg
xor
push
aam
pop
xor
ficomp
and
nop
add
int
iret
fwait
or
in
mov
push
mov
cli
outs
or
add
adc
nop
icebp
cdq
add
enter
and
mov
(bad)
push
push
outs
mov
cmp
cwde
mov
sbb
or
add
xlat
mov
xor
dec
sub
or
addr16
jecxz
dec
pop
cmp
stos
mov
das
outs
add
xor
std
jecxz
imul
addr16
or
jecxz
adc
mov
fs
or
add
add
pop
call
les
or
push
mov
xchg
add
mov
add
and
jmp
je
loope
enter
(bad)
jo
fisttp
or
xchg
daa
adc
push
ret
movs
and
mov
fidiv
in
lods
test
scas
push
mov
add
sar
retf
xchg
xchg
je
push
sti
push
sahf
add
fmul
cmp
xchg
out
fsub
or
xchg
lahf
and
leave
fldcw
xlat
iret
xor
inc
and
sub
data16
and
adc
jle
lea
cmp
xchg
clc
pcmpgtb
sahf
add
xor
scas
push
mov
mov
into
sub
mov
call
lock
and
dec
or
inc
out
mov
pop
pusha
sbb
xor
jl
jne
mov
xchg
aas
or
mov
lds
pop
div
mov
jge
int3
pop
aas
cld
inc
xchg
or
pushf
rol
addr16
cmp
imul
inc
shr
pop
and
or
ins
mov
dec
sbb
adc
mov
(bad)
mov
ret
xor
jle
mov
adc
push
cs
sti
push
sbb
xchg
or
adc
inc
push
and
xor
iret
arpl
sbb
jl
adc
es
dec
clc
movs
aad
push
pop
test
dec
jnp
sub
add
jmp
repnz
push
xchg
mov
fdiv
or
push
push
test
movs
add
cld
mov
fadd
pop
mov
and
or
inc
mov
jbe
push
(bad)
int
movs
int3
push
rcr
pusha
cmps
cmp
lods
dec
sbb
push
mov
sahf
xor
mov
repz
aam
xchg
mov
or
jne
push
or
and
push
inc
cs
xchg
mov
fs
add
std
(bad)
jmp
cmp
imul
or
enter
and
xchg
cs
sub
xchg
pop
mov
xchg
add
call
pop
lods
xchg
ror
xor
js
and
xchg
sub
and
lds
setp
push
icebp
pusha
inc
sub
popf
and
adc
pop
or
data16
sbb
fiadd
aad
xor
dec
sbb
(bad)
dec
adc
(bad)
and
imul
stc
pop
jmp
rcr
adc
jl
(bad)
push
je
mov
les
(bad)
ffreep
(bad)
dec
mov
jmp
outs
push
mov
ror
and
sub
xchg
dec
mov
es
sar
mov
cmps
jnp
cmc
or
mov
sub
mov
mov
push
jae
mov
popa
and
scas
add
inc
in
mov
imul
push
call
jle
sub
pop
jmp
jmp
je
xor
clc
push
add
pusha
xchg
mov
push
push
fadd
in
mov
or
mov
adc
jmp
jecxz
cmp
sbb
pop
xchg
xchg
xchg
dec
mov
ret
sbb
add
fadd
les
pop
sar
fmul
inc
lea
ficom
sbb
jmp
adc
dec
test
mov
mov
test
fld
(bad)
mov
test
cmp
add
adc
mov
mov
jl
sub
mov
stc
ror
adc
cli
sbb
add
adc
add
adc
mov
adc
cld
retf
fdiv
ja
into
inc
jb
mov
xor
adc
sub
retf
push
inc
and
or
sub
fmul
mov
mov
in
mov
int3
add
push
or
or
icebp
push
xchg
rcl
push
(bad)
je
push
mov
nop
test
iret
pop
ret
std
xchg
jl
or
mov
jb
adc
icebp
add
daa
cli
into
mov
sub
xor
mov
lods
fwait
imul
cmp
dec
add
(bad)
jge
into
push
dec
jo
or
mov
and
out
mov
scas
test
or
iret
fs
je
iret
jbe
push
jo
dec
in
inc
fisubr
add
inc
ret
push
cwde
or
push
xor
or
sti
xor
push
pop
jl
sbb
sub
cmp
sbb
xor
sbb
push
(bad)
mov
push
xor
add
std
xor
hlt
adc
sbb
xor
ficom
repnz
or
enter
imul
enter
jns
dec
dec
push
push
xor
and
sub
inc
mov
add
sub
pop
jecxz
push
push
ret
mov
das
inc
cmp
inc
(bad)
jo
imul
test
(bad)
in
in
(bad)
mov
add
push
jo
sbb
aaa
and
movs
cdq
movs
sub
sar
sub
pop
sbb
adc
cmp
iret
cmp
test
in
adc
xchg
xor
and
and
pop
dec
cmp
pusha
add
add
add
sub
cmp
movs
inc
(bad)
jae
inc
je
adc
js
prefetcht0
push
(bad)
and
retf
xchg
push
add
push
xchg
dec
test
or
push
pop
and
fdivr
scas
scas
mov
sub
pop
jbe
mov
add
jb
add
aas
daa
mov
cmps
add
xor
inc
mov
outs
mov
adc
xchg
xor
jbe
lock
inc
jo
sub
cs
leave
or
daa
(bad)
push
ins
imul
pop
or
sbb
je
shr
pop
retf
add
ror
cmc
inc
test
sbb
bound
or
adc
adc
repnz
setns
adc
test
sub
xchg
in
neg
jno
adc
pop
hlt
jmp
jne
jl
add
jne
ss
xor
jg
jne
add
mov
sbb
inc
sub
repz
nop
pop
loop
dec
or
adc
(bad)
jg
mov
or
pop
in
or
movs
jns
adc
xchg
jp
mov
and
xor
mov
adc
or
shl
xchg
add
fild
cmp
test
jl
push
sbb
jmp
mov
repnz
ret
sub
sub
das
add
shl
mov
xchg
adc
(bad)
xor
data16
add
mov
gs
je
scas
je
lock
mov
dec
add
aad
(bad)
or
pop
je
add
pop
or
es
ins
mov
mov
jnp
cwde
mov
inc
loope
cmps
xlat
inc
ror
mov
xchg
pop
dec
mov
nop
xchg
and
popa
adc
movs
or
mov
and
cmps
(bad)
mov
pop
pop
sbb
pop
sbb
lock
mov
sub
or
ss
ret
cmp
or
cld
test
inc
push
rol
jl
xchg
ins
bound
sub
jge
inc
out
enter
mov
cmp
push
xor
mov
lahf
adc
jge
inc
pop
push
dec
inc
sub
sub
and
lods
xchg
in
loopne
bnd
shl
leave
call
rcr
mov
ins
loopne
nop
std
scas
js
mov
int3
mov
or
mov
sbb
in
pop
add
bnd
cmp
je
push
(bad)
push
retf
jmp
push
push
out
or
loopne
xor
mov
adc
repz
mov
pop
inc
pop
icebp
xor
or
jg
ss
xchg
and
inc
test
rcr
test
add
test
dec
repz
sahf
sbb
sbb
sub
addr16
push
cmp
or
enter
dec
dec
stos
add
xchg
fild
inc
dec
loope
movs
pop
push
fwait
inc
add
movs
or
jo
and
xchg
lock
jle
xchg
xor
dec
imul
fbstp
movs
and
fisttp
add
push
xchg
call
mov
sbb
mov
jo
pop
xchg
mov
or
sahf
test
mov
test
add
or
cmp
sbb
outs
push
ret
and
rcr
fs
lea
pusha
aas
call
sbb
outs
pop
push
pop
cmp
sub
loope
(bad)
ror
fimul
xor
and
nop
lock
fadd
in
mov
or
pop
cmp
sbb
add
sub
loope
pop
cmp
cmp
inc
enter
or
add
(bad)
cmp
jl
mov
or
dec
xchg
test
stc
out
jno
mov
cmp
jge
or
xor
and
test
loopne
icebp
fist
sbb
jne
sbb
scas
mov
add
push
or
scas
push
adc
sub
push
aam
mov
sbb
push
in
adc
loopne
or
lahf
outs
mov
jge
cmp
pop
jecxz
cwde
mov
or
mov
popa
push
pop
jo
loope
aas
pslld
pop
popa
jl
cmp
aam
rol
retf
and
enter
xor
adc
mov
lods
push
enter
int
jae
mov
(bad)
fcom
js
inc
fsub
xlat
mov
push
or
dec
retf
test
mov
pop
push
sbb
retf
dec
outs
cmp
enter
je
shr
push
dec
inc
or
loopne
adc
enter
mov
add
js
add
push
mov
mov
(bad)
mov
dec
jo
push
cmps
cmp
sbb
or
xchg
rol
or
sbb
inc
adc
and
sub
shl
mov
movs
jb
(bad)
push
enter
push
pop
and
das
cmp
dec
fcomp
and
enter
sbb
pop
stos
or
mov
sbb
sbb
cli
xchg
inc
xchg
xchg
shl
cmps
push
inc
dec
fcomp
pop
push
or
fdivr
push
(bad)
and
arpl
scas
mov
or
enter
or
push
lea
mov
(bad)
xor
dec
sbb
xchg
dec
mov
xchg
(bad)
xchg
or
and
jae
shl
fdiv
out
out
shr
push
or
mov
stc
dec
mov
inc
inc
popa
call
and
sbb
ret
aaa
adc
loopne
(bad)
adc
test
jmp
jp
pop
jne
mov
ror
sahf
cdq
idiv
pop
add
mov
pop
mov
cmp
test
call
mov
fsub
mov
(bad)
push
or
jmp
outs
dec
or
xchg
dec
bnd
or
push
cwde
sbb
sub
sub
lods
repnz
(bad)
loopne
fidiv
lea
je
jmp
call
add
mov
icebp
test
rcl
add
or
data16
pop
inc
sbb
push
movs
cmp
xchg
daa
or
adc
and
and
or
sbb
fs
icebp
hlt
and
fdivr
sub
pusha
lods
and
popa
mov
pop
push
cli
call
sub
pop
jmp
adc
ds
adc
push
pop
mov
push
push
cmp
and
and
test
and
cwde
mov
dec
add
push
in
push
mov
sbb
adc
or
or
adc
mov
add
jmp
je
xchg
xchg
icebp
fldenv
mov
mov
xor
add
sub
jle
popf
(bad)
shr
adc
shl
add
scas
dec
cld
push
sub
dec
and
and
add
jo
je
xor
jne
add
data16
test
push
or
or
adc
rol
sbb
and
or
jns
pusha
xchg
pop
xor
stc
sub
jne
push
lea
les
add
and
sub
mov
dec
mov
dec
cld
inc
dec
inc
dec
mov
jne
mov
or
sub
add
jmp
push
loopne
in
sbb
inc
fmul
mov
mov
jl
hlt
cmps
push
adc
and
fnsave
mov
adc
xchg
(bad)
jne
cwde
pop
or
fs
jae
dec
jmp
sub
push
sbb
push
xor
adc
loop
pop
adc
les
cmps
pop
xchg
add
sub
lea
aaa
push
stos
sti
mov
(bad)
nop
pop
inc
xor
ss
call
cmp
xchg
je
mov
or
add
push
xchg
out
sahf
add
push
inc
add
fbld
lock
push
push
jmp
or
jns
or
arpl
shr
movs
push
cs
inc
add
adc
adc
into
jne
loop
pop
scas
lea
push
add
push
jle
and
dec
daa
pop
fcomp
ret
add
mov
ret
adc
mov
cmps
adc
inc
lods
into
test
repnz
stos
int
inc
adc
jo
or
pushf
xchg
daa
test
inc
cwde
jmp
movs
icebp
push
sub
push
push
jo
jmp
(bad)
ja
dec
stos
cdq
pop
push
aas
inc
jmp
dec
and
shl
adc
jo
pop
fist
mov
mov
xchg
push
loopne
fisubr
cmp
jne
mov
and
jno
mov
xchg
or
jbe
dec
aam
call
pop
cmc
push
pop
adc
xlat
or
xchg
in
rcl
mov
stc
inc
hlt
add
dec
leave
fadd
js
bound
push
pop
rcl
and
lods
out
ret
pop
push
stc
cmp
loopne
mov
mov
mov
mov
xchg
movs
jne
pop
hlt
xchg
or
and
mov
push
mov
repz
add
sar
inc
cmp
sub
add
sub
dec
or
xor
pextrw
and
call
retf
rcr
aad
cmp
iret
pop
popa
inc
lea
cmp
fimul
pop
sub
je
jmp
add
ret
cmp
neg
shl
sbb
cmc
jl
jg
adc
out
sahf
pop
jbe
or
cs
pop
xor
xchg
jbe
push
fs
push
or
stos
daa
test
nop
rol
cmps
push
mov
in
jb
xor
push
out
and
ret
cmp
lock
jmp
mov
mov
or
sbb
jb
cmp
dec
cmps
or
adc
sbb
or
jno
or
push
mov
mov
xchg
jo
sbb
adc
push
jmp
mov
push
lock
cli
pop
adc
mov
aad
hlt
sbb
sbb
mov
dec
xor
dec
scas
pop
mov
ret
xor
cs
sar
add
dec
aam
ret
mov
loopne
add
xchg
and
jmp
(bad)
neg
mov
repz
mov
(bad)
add
sbb
mov
mov
fist
dec
icebp
stos
push
pop
and
lahf
(bad)
or
sub
pop
dec
sbb
clc
and
ret
clc
leave
jbe
add
mov
lahf
xor
xchg
inc
add
inc
shr
push
mov
sbb
loope
sbb
xchg
cmp
jae
loope
dec
jne
sbb
imul
movs
add
lods
adc
adc
or
adc
(bad)
pop
add
in
and
inc
dec
sub
(bad)
adc
loope
loope
pop
dec
fild
and
mov
xor
add
jae
sbb
adc
mov
ret
push
cmps
hlt
jl
sub
push
imul
fs
mov
daa
adc
ror
pop
ror
dec
retf
mov
jg
jl
cmp
jae
mov
lods
add
popa
inc
sub
dec
and
fisubr
add
call
mov
test
stc
dec
sub
add
jne
pop
adc
in
inc
nop
adc
in
inc
sub
sbb
retf
jns
cmp
and
sbb
push
(bad)
iret
or
ins
sub
lea
movs
add
test
pop
fmul
or
iret
push
push
jge
cmp
add
push
cld
cmp
loopne
loope
ds
inc
cmp
pusha
fs
add
repnz
push
dec
imul
rcr
es
in
push
mov
cwde
lea
adc
test
jl
and
inc
or
and
dec
fcomp
mov
mov
adc
loop
xor
jbe
xor
or
outs
xchg
loopne
or
sbb
cmp
mov
repnz
sub
mov
push
inc
dec
adc
jl
xchg
xor
adc
test
mov
test
jne
aas
or
push
jns
popa
test
nop
xor
dec
dec
adc
xchg
xchg
dec
fsub
fidiv
scas
in
cmp
add
mov
jmp
mov
loopne
push
in
pop
arpl
xor
pop
imul
fsub
sub
aaa
mov
fwait
dec
ins
nop
pop
mov
call
jge
mov
div
add
or
add
push
push
ja
mov
pop
test
jb
xor
lock
and
test
dec
ins
rol
xlat
(bad)
cmp
mov
inc
adc
fsubrp
popf
js
cmp
cld
push
push
push
sub
push
into
cdq
push
pop
out
push
xchg
add
jmp
xchg
mov
(bad)
fld
in
mov
adc
or
jle
repz
fadd
and
cmps
std
into
cmp
sbb
push
inc
cmps
add
jp
inc
loop
jnp
sub
test
mov
(bad)
icebp
ror
pop
pop
inc
add
pop
mov
add
retf
cmp
or
arpl
(bad)
add
dec
sbb
fidivr
(bad)
iret
clc
enter
mov
sahf
inc
pop
mov
imul
xor
inc
mov
push
inc
loop
ds
movs
cs
jp
push
test
dec
cmp
mov
mov
mov
clc
add
adc
cmp
jle
xchg
fistp
in
jae
fiadd
dec
cs
aas
pop
(bad)
imul
dec
fadd
ret
or
adc
bound
add
sbb
dec
add
sub
inc
inc
lock
stos
ret
or
jg
xchg
loope
ins
das
jbe
pop
adc
jle
pop
sub
push
std
out
fcmovnb
sub
add
jnp
lock
pop
sub
ret
lock
movs
mov
pop
push
mov
aad
xlat
fs
jge
clc
add
lods
pop
mov
jmp
lods
fs
or
add
stos
add
cmps
add
in
add
pop
inc
in
cld
jle
daa
ret
jne
mov
jb
test
inc
aam
imul
fmul
int3
fptan
push
cdq
sar
dec
and
push
lea
adc
push
fdivrp
test
fmul
idiv
jno
jne
daa
xor
pop
mov
stos
jo
(bad)
mov
adc
cmp
push
push
push
and
inc
mov
test
pop
in
push
mov
push
or
fdiv
or
daa
xor
mov
add
cmp
ins
loopne
shl
cld
fdivrp
fld1
fcompp
mov
jp
xor
add
cdq
mov
mov
pop
push
out
add
add
ror
mov
leave
jne
or
sbb
push
fidivr
stc
addps
or
pop
daa
mov
ja
inc
cmp
int3
and
or
not
push
or
sub
mov
jg
cmp
mov
js
fs
mov
les
retf
jl
mov
sahf
test
and
and
jecxz
add
mov
sub
dec
sbb
xor
push
adc
dec
(bad)
push
cli
add
mov
add
push
mov
adc
push
and
mov
inc
and
pop
jmp
mul
fld
add
fxch
fld
sbb
leave
fmulp
or
fstp
mov
rcr
inc
test
clc
and
jne
push
gs
shr
scas
xor
push
or
mov
inc
pop
fwait
pusha
add
cmp
and
das
push
sub
pop
adc
hlt
inc
(bad)
mov
addr16
lea
sti
jo
add
(bad)
hlt
add
jl
jne
add
sub
jge
sub
out
(bad)
pusha
cmp
test
push
mov
push
in
test
cmc
pop
add
rol
arpl
pushf
jno
call
js
or
jbe
mov
jle
movs
or
xor
scas
mov
stc
jmp
mov
jmp
and
dec
push
add
dec
add
pop
pop
add
mov
sub
jnp
push
adc
jo
rol
adc
mov
ins
jo
add
retf
dec
ja
xchg
iret
add
jge
mov
lods
lahf
cwde
neg
push
push
xor
mov
cmc
add
cmp
imul
iret
test
std
outs
aam
sub
int
cld
cmp
js
js
pusha
or
push
and
mov
pop
mov
sbb
add
out
cmp
jns
cmp
push
xchg
inc
and
lods
test
sahf
dec
push
pop
xchg
inc
mov
loop
iret
mov
mov
mov
adc
jmp
cmp
les
xchg
jns
popf
out
into
rcl
sbb
push
dec
pop
sbb
cmp
sbb
sbb
mov
lods
pop
push
fidiv
mov
mov
mov
and
xchg
dec
fild
test
fdiv
test
fcomip
pop
fld
enter
test
out
jg
inc
jb
dec
xchg
cmp
inc
pusha
outs
push
pop
and
data16
test
popf
and
in
fsubr
stos
addr16
and
mov
pop
cmp
nop
movs
sub
mov
test
cmp
sub
movs
sbb
nop
loopne
rcl
call
pop
push
in
je
add
jo
ins
or
xor
or
in
xchg
push
repz
fxch
add
push
push
(bad)
pop
das
pop
rol
cs
and
mov
push
inc
cmp
cwde
in
outs
push
int
dec
test
mov
xchg
cs
mov
out
mov
and
inc
outs
jmp
ja
dec
mov
cmp
push
add
or
arpl
and
les
sub
ret
push
jg
ds
sbb
pop
mov
add
fmul
add
loop
cmp
mov
sti
adc
inc
add
imul
sub
outs
adc
int3
mov
out
fild
or
fsubp
and
mov
adc
(bad)
call
jmp
inc
push
pop
cdq
mov
int3
xchg
icebp
fisttp
inc
cmp
or
sub
adc
jge
imul
mov
jne
fcomi
adc
fdivr
and
call
push
mov
out
sub
sbb
int3
dec
adc
jg
sub
stos
hlt
add
mov
je
adc
mov
pop
movs
add
sbb
fild
test
add
iret
add
cmp
push
lods
and
cmc
sbb
cmp
and
shl
sbb
add
and
out
cli
int3
xchg
sahf
daa
loopne
xchg
cmp
jle
xchg
sbb
std
inc
pop
inc
ins
fdiv
mov
hlt
pushf
enter
push
retf
cmp
jo
stos
imul
jae
shr
test
or
les
je
push
mov
adc
inc
dec
je
mov
push
and
add
jo
jb
iret
idiv
push
fdiv
retf
adc
inc
dec
ss
xor
add
pop
push
jne
pushf
cmp
retf
xchg
scas
popa
mov
lea
inc
sub
mov
loop
les
inc
rcr
push
pop
out
or
jecxz
xor
retf
cwde
cmp
dec
xor
push
and
data16
or
sbb
add
clc
ret
lds
push
fistp
add
push
bound
enter
add
dec
adc
mov
pop
out
jmp
jne
aas
adc
and
mov
jo
icebp
js
and
sbb
sbb
adc
jne
add
inc
repnz
push
or
popa
inc
jmp
stos
ins
push
sbb
and
arpl
pop
pop
xor
dec
sbb
aaa
ss
mov
loope
fwait
add
adc
mov
push
mov
add
mov
(bad)
mov
inc
inc
(bad)
push
cli
mov
hlt
test
icebp
stc
mov
xchg
pop
js
add
mov
push
mov
or
adc
cmps
dec
pop
stc
jae
mov
in
or
add
or
mov
test
add
add
cmp
adc
dec
shr
pop
fbld
inc
push
mov
xor
leave
push
xor
inc
jo
jmp
outs
sub
jne
push
(bad)
mov
pop
ss
xadd
xor
and
mov
inc
sub
and
xor
cmp
xor
sbb
test
dec
scas
imul
sbb
pop
adc
jb
or
push
sub
adc
cmps
adc
lock
sub
ins
(bad)
jg
(bad)
stos
ret
xchg
mov
cmp
adc
or
push
pop
mov
sub
fadd
cmp
mov
jnp
push
xchg
mov
inc
cmp
lahf
ss
or
mov
xchg
xchg
cs
aaa
cdq
js
xor
fstp
mov
sbb
in
loope
nop
out
jmp
fstp
lahf
jp
sbb
psadbw
scas
clc
mov
or
push
aam
nop
pop
jb
mov
add
inc
enter
(bad)
push
sbb
int3
fistp
or
out
fld
shl
repnz
or
outs
sti
test
pusha
cmps
adc
in
and
push
and
or
out
dec
and
inc
cmp
daa
push
adc
or
cmp
inc
loopne
jg
call
mov
adc
sbb
cmp
fisttp
mov
adc
sbb
loopne
mov
(bad)
in
cmp
xchg
aad
daa
jo
jge
aad
mov
dec
inc
shr
imul
rcl
push
jns
xchg
cmp
(bad)
cmp
jge
test
je
cmp
jge
ds
cmp
cmc
test
mov
(bad)
loope
in
jae
adc
rcl
ret
mov
jecxz
jmp
adc
data16
ja
cmps
jl
jmp
icebp
and
sbb
jns
mov
(bad)
sub
sbb
pop
push
sub
jl
inc
adc
hlt
cmp
inc
stos
add
cmp
xor
push
add
add
pop
push
pop
push
pusha
or
(bad)
shl
push
imul
and
(bad)
mov
mov
es
or
lds
rol
rol
pushf
movs
cmp
push
pop
(bad)
or
cmps
xor
jl
push
push
mov
movs
movs
push
aam
js
loopne
ins
jbe
rol
cld
je
and
push
(bad)
ins
mov
dec
add
push
push
lock
mov
dec
jne
xchg
jl
push
ror
shl
xchg
loopne
add
shl
or
push
add
push
or
push
and
test
pop
push
test
adc
jge
ret
and
pop
adc
and
call
call
sbb
sbb
(bad)
mov
or
cli
mov
inc
cdq
setne
cwde
push
cmps
movs
jnp
adc
jmp
stos
test
ja
data16
add
xor
rcl
and
and
pop
inc
xor
jmp
add
shr
leave
cmp
xlat
dec
xor
pop
cmp
or
pop
rol
inc
pop
pop
lahf
rol
or
inc
xchg
das
pop
jle
out
xor
and
test
adc
mov
in
inc
mov
xor
mov
(bad)
aad
out
mov
inc
retf
inc
jl
ret
loope
add
sub
pop
test
or
mov
lsl
lock
pushf
inc
adc
push
push
dec
push
fnstsw
mov
cmp
inc
and
(bad)
aas
icebp
dec
fisub
and
push
and
outs
test
test
pop
repz
pushf
aam
mov
add
popa
add
sbb
pop
jmp
sub
adc
js
retf
sbb
sub
sbb
rcl
or
imul
dec
push
mov
loope
add
pusha
add
xor
and
lds
mov
(bad)
or
dec
mov
jo
mov
(bad)
ins
out
mov
or
xchg
push
enter
and
pusha
xor
and
ss
bound
(bad)
(bad)
push
add
add
mov
shl
and
nop
fcomp
inc
xor
std
and
repnz
push
mov
mov
push
sbb
xor
inc
mov
push
add
(bad)
adc
add
test
mov
cdq
ins
shr
and
dec
(bad)
cld
add
test
pusha
add
jp
push
movs
loopne
mov
add
test
and
in
shl
inc
imul
rol
cs
push
in
jmp
cmp
add
cmp
jae
loopne
mov
push
icebp
pop
sub
mov
clc
push
nop
cdq
pop
cld
adc
mov
add
mov
adc
cmp
inc
or
xchg
push
in
daa
or
cli
dec
push
imul
lea
adc
js
fild
lahf
adc
das
adc
loopne
std
mov
and
add
and
and
cmp
les
stos
aam
or
push
pop
repnz
add
pop
loope
dec
sub
add
daa
mov
adc
push
and
outs
or
push
mov
sbb
push
aaa
sbb
add
sub
and
add
or
dec
loope
inc
adc
fadd
xor
and
dec
or
cdq
shl
test
sbb
jns
int3
fnstenv
mov
and
sub
sbb
sbb
push
cmp
add
xor
or
xchg
pop
adc
xchg
icebp
adc
adc
xor
test
icebp
push
repz
pop
test
xchg
es
sbb
mov
loope
adc
jb
pop
mov
jo
neg
pop
adc
or
jno
sub
cmp
and
push
adc
add
xlat
xlat
imul
jnp
xor
jb
xchg
mov
not
add
js
push
jnp
inc
hlt
push
sbb
imul
adc
and
and
xor
sub
fs
(bad)
mov
xchg
xchg
fmul
adc
sub
jl
sub
dec
ret
xchg
adc
int3
sbb
adc
push
dec
or
out
shr
test
popa
dec
push
dec
jle
jnp
mov
adc
push
inc
add
sub
sar
cwde
or
dec
push
dec
pop
and
jmp
xchg
dec
jne
sbb
adc
or
push
cli
and
add
(bad)
call
jge
cmp
jl
jg
cmp
jb
sahf
lods
or
push
pop
add
and
inc
cmp
mov
mov
sbb
inc
cmps
ins
sbb
in
adc
fadd
rcl
enter
or
pusha
sub
popf
je
push
std
test
pop
(bad)
or
fisttp
xor
(bad)
jg
cvtdq2ps
pop
dec
jle
jecxz
cmp
inc
scas
les
gs
lds
cmps
push
mov
repz
xor
shl
add
xor
xchg
and
and
retf
add
or
sahf
aam
add
mov
fdiv
push
mov
xchg
bound
test
fwait
mov
xchg
pop
dec
add
or
sbb
aad
in
test
(bad)
cmovg
inc
data16
or
inc
pop
and
gs
aad
mov
loope
shl
popa
div
ss
scas
test
fimul
in
lahf
enter
in
sub
in
or
sar
or
loop
inc
or
mov
push
pusha
xchg
and
add
inc
pop
pop
add
imul
adc
ins
mov
or
sahf
push
ins
mov
xchg
mov
push
hlt
add
retf
add
repnz
sbb
cs
test
clc
(bad)
shl
or
out
inc
popf
mov
xor
jmp
sub
add
mov
mov
sub
sub
add
mov
add
adc
xor
out
xor
xchg
data16
int
push
and
mov
add
jmp
js
mov
xor
sbb
sbb
cld
jnp
sbb
inc
pop
jecxz
aam
cmp
add
adc
mov
mov
rol
cmp
retf
sbb
or
dec
cmps
pop
call
call
ror
rol
ficom
fdivr
aas
xor
mov
mov
mov
cmp
pminsw
sbb
xor
inc
jmp
push
jo
loopne
pop
dec
mov
push
and
mov
lahf
push
xor
out
dec
jecxz
inc
add
xor
lahf
(bad)
imul
test
cmp
pop
nop
push
cmp
leave
add
sahf
pop
push
sub
push
ffreep
jmp
rol
cmp
jne
daa
rcl
mov
or
add
aas
sub
jbe
invd
lea
std
ret
stos
stc
bound
pop
call
dec
shr
dec
adc
or
sbb
jne
push
inc
mov
scas
popf
cmp
cmp
pop
mov
push
xor
or
or
xor
and
iret
xchg
sbb
push
inc
add
ds
stc
adc
mov
push
adc
add
sbb
test
xor
cmp
pusha
ror
mov
sub
jbe
pop
push
inc
and
sbb
out
mov
adc
int
out
cmp
cmp
add
cmp
cld
loop
push
je
xchg
bound
int3
jne
movs
jnp
ret
das
scas
jne
in
rol
aam
dec
push
movs
adc
or
or
out
ror
push
and
in
add
xadd
xchg
or
pop
adc
ins
cmp
test
aam
(bad)
dec
mov
xor
add
sar
push
dec
add
add
xchg
or
xor
inc
pop
pushfw
shl
inc
dec
fwait
xor
mov
shr
xchg
push
push
add
push
inc
add
push
push
push
clc
xchg
or
or
xor
xchg
or
xlat
push
test
dec
push
cli
fst
(bad)
adc
cmp
cld
dec
add
pop
push
add
cdq
dec
jg
add
xchg
mov
push
popf
xchg
xor
mov
pop
xchg
adc
movs
shr
dec
pop
jge
mov
mov
lock
cld
je
ret
sahf
ins
add
shl
in
mov
pop
jmp
sub
dec
sbb
pop
aaa
pop
cs
mov
mov
call
daa
push
gs
pop
test
and
push
push
adc
mov
ret
jnp
xchg
push
push
inc
or
adc
xchg
add
test
cs
fmul
test
adc
add
and
daa
loopne
cld
mov
xchg
call
push
add
mov
lds
aam
or
fidivr
ins
push
lahf
mov
call
sbb
and
add
pop
mov
dec
push
jns
stos
or
or
das
mov
addr16
popf
(bad)
inc
and
and
add
std
daa
dec
aam
jb
pop
or
enter
xor
push
retf
ror
mov
fisubr
and
xor
(bad)
rcl
xchg
sbb
adc
cmps
add
ss
push
xor
movs
pop
inc
xchg
add
adc
xchg
jge
adc
sub
das
mov
imul
gs
leave
cmp
xor
xchg
ret
cmp
je
push
sub
jo
mov
push
adc
nop
inc
js
lea
pusha
inc
or
aas
inc
push
lea
ret
stos
jmp
data16
(bad)
add
inc
nop
sub
or
xchg
sub
sbb
and
dec
or
inc
add
je
in
adc
neg
cmp
leave
lods
xlat
add
mov
dec
test
aad
adc
ror
add
out
pop
(bad)
xor
das
and
pop
xchg
fstp
sub
pop
push
int
fild
dec
adc
loop
ror
repnz
ins
rcl
lea
pop
dec
clc
mov
into
fst
or
(bad)
pop
adc
push
jecxz
mov
cmp
push
dec
test
inc
pop
inc
jmp
not
sbb
jns
rcl
out
in
out
and
lahf
mov
out
pop
sbb
sbb
sbb
cmp
and
mov
mov
or
pop
sbb
dec
mov
cmps
in
adc
push
sbb
fadd
pop
pop
pop
mov
inc
rol
add
mov
stc
sbb
xchg
bound
sub
sbb
call
int3
and
and
retf
ja
or
leave
pop
mov
or
pushf
mov
add
mov
add
div
lds
mov
add
(bad)
mov
imul
fdivr
or
leave
bound
or
mov
mov
test
mov
pop
pop
inc
xor
call
stos
mov
aaa
dec
rcl
add
push
mov
pop
lods
add
xchg
imul
out
ins
mov
lea
arpl
sbb
and
adc
inc
xchg
addr16
mov
ds
mov
loope
cmp
sub
into
and
mov
and
ins
test
or
xor
pop
add
dec
lea
enter
jl
pop
(bad)
cs
shl
and
or
add
jne
add
mov
push
pop
adc
ror
sahf
push
add
sbb
lock
push
xchg
arpl
dec
lock
js
ret
inc
xor
rol
cmps
jae
inc
push
in
adc
add
and
add
sbb
cmp
fs
push
in
dec
pop
pop
mov
push
jmp
lea
pusha
es
cmc
push
add
es
fisttp
adc
dec
sbb
mov
repz
or
push
xchg
pusha
sbb
xchg
push
or
mov
add
xor
mov
pop
add
push
cmp
neg
push
add
inc
scas
test
jne
sbb
lock
adc
pop
jne
sbb
div
sbb
mov
ins
and
hlt
dec
inc
imul
xor
gs
pop
xchg
jo
hlt
mov
cmp
int3
fisttp
jl
cmp
mov
ins
adc
loop
lds
pop
lock
lds
sbb
aas
xor
das
mov
je
adc
ret
push
xor
cwde
add
push
inc
jmp
push
inc
cwde
or
in
je
enter
inc
(bad)
jbe
retf
xchg
pushf
cmp
pop
mov
shl
movs
aaa
add
loope
in
xchg
inc
xchg
add
xor
sbb
add
into
add
mov
or
test
mov
sar
nop
rol
out
push
push
enter
push
push
mov
sub
push
xchg
fstp
jg
repz
push
repnz
or
and
sub
mov
dec
scas
nop
aam
scas
or
xor
sar
popa
jae
(bad)
test
rol
or
pop
std
xor
jmp
std
xor
div
jmp
test
inc
adc
sub
dec
jne
cmp
lock
aaa
add
test
mov
gs
push
dec
loope
cmps
push
jne
mov
icebp
jne
lds
aad
inc
pusha
pop
mov
xchg
dec
pop
gs
sbb
mov
fiadd
in
jmp
shl
push
test
sub
leave
leave
sbb
xchg
shl
lods
or
mov
or
aaa
out
inc
pusha
inc
(bad)
in
in
movs
dec
daa
sbb
jns
nop
mov
or
les
add
dec
jae
in
ss
arpl
sub
daa
ret
inc
enter
sbb
add
sbb
test
int3
xor
add
lahf
rcr
clc
mov
mov
push
pop
dec
add
adc
call
pop
push
pop
xchg
mov
lock
push
dec
dec
ins
sbb
retf
push
add
movs
je
jmp
in
jb
push
rep
call
rcl
add
sbb
jb
js
mov
bound
add
pop
sub
mov
popf
stc
cmps
xchg
dec
dec
fwait
movs
cmps
mov
add
dec
std
jo
adc
(bad)
rol
sub
dec
mov
push
ret
sbb
fst
ret
sub
sub
or
push
paddsb
shl
push
add
test
call
push
cmp
sub
sub
add
mov
push
icebp
mov
nop
dec
jle
add
cmp
pop
test
test
test
push
ret
aam
mov
cs
dec
mov
or
outs
jmp
repz
dec
fmul
in
xchg
xchg
push
add
sbb
movups
add
cmps
add
xlat
push
or
lds
xor
xchg
ins
ins
sub
dec
pop
lock
push
or
xchg
stos
or
in
xchg
scas
and
or
jmp
cs
add
xor
stos
push
stc
mov
or
fmul
mov
mov
shl
jge
std
mov
inc
jmp
sbb
retf
sbb
xchg
xchg
fs
adc
sub
dec
or
or
or
cs
dec
sub
push
jmp
or
or
stos
push
call
xor
ret
mov
inc
dec
jno
push
sbb
mov
push
cli
xchg
pop
retf
mov
or
pop
cs
retf
je
mov
mov
or
jge
fst
frstor
loop
fcom
lock
nop
sub
in
jb
cwde
ja
pop
repz
cmp
and
and
push
adc
outs
fcmovnb
(bad)
jmp
test
(bad)
and
call
cmps
test
push
shl
sbb
dec
push
push
out
jne
mov
mov
push
or
adc
add
rcl
push
push
push
fnop
cmps
pop
sbb
mov
xor
mov
fiadd
retf
mov
loope
nop
(bad)
nop
shl
push
push
inc
inc
add
popa
leave
cmp
dec
xchg
jge
mov
push
in
cmc
add
in
lds
add
sbb
pop
push
push
dec
outs
rcl
push
pop
mov
leave
inc
or
xchg
in
inc
das
cmp
add
xchg
and
mov
mov
or
bound
aad
int
and
fdivr
adc
dec
adc
lods
add
push
sar
push
and
xor
aam
cmp
xor
add
and
push
jle
or
add
scas
popf
fmul
mov
adc
add
dec
nop
xchg
mov
repnz
fs
or
arpl
xor
or
repnz
dec
add
fs
or
or
add
test
xchg
xor
or
inc
xor
lds
es
test
cmp
xlat
dec
nop
or
ret
dec
(bad)
aam
mov
mov
and
mov
call
adc
adc
jo
jo
icebp
adc
adc
add
jp
push
push
add
pop
call
add
xchg
add
les
add
pop
add
add
push
in
push
add
lds
in
or
dec
aaa
xchg
add
jl
enter
mov
sub
push
js
mov
xor
jle
inc
out
adc
push
jl
inc
sbb
mov
dec
sub
and
xchg
add
pop
add
inc
or
pop
push
push
add
mov
loop
pushf
mov
or
aad
scas
cmc
xchg
lods
push
or
ret
and
and
in
aas
fcom
aam
leave
shl
inc
fstp
cmp
outs
and
mov
mov
jne
jb
daa
push
jmp
jbe
add
and
pop
add
mov
adc
sbb
or
mov
dec
ret
xor
fld
js
jecxz
push
cmp
jle
adc
shl
jmp
mov
and
mov
xchg
and
dec
jnp
cli
and
les
or
ror
dec
fld
movd
in
xor
xchg
sub
jmp
inc
sbb
push
mov
or
adc
shr
cmps
lods
loop
and
pusha
xchg
leave
outs
mov
mov
sub
and
xchg
add
cmps
push
loope
xchg
fsubr
dec
and
pop
xchg
call
cmp
js
inc
cmp
sbb
cmp
leave
ffree
xor
push
pop
pop
push
add
das
xchg
outs
adc
push
movs
pop
sub
sbb
(bad)
aam
xchg
lods
ins
stc
imul
pop
cmp
push
or
adc
repz
inc
mov
add
mov
inc
inc
aaa
mov
cmp
jl
jmp
cmp
mov
int3
mov
mov
push
iret
sti
mov
gs
leave
inc
push
stos
mov
lock
cmp
jne
enter
and
lods
lods
mov
push
lods
jmp
inc
inc
femms
cmp
sti
mov
sbb
xchg
pushf
fs
nop
push
and
cmps
ja
jmp
inc
xchg
mov
sti
das
sbb
pop
cmp
sbb
add
jne
xchg
adc
mov
cdq
mov
sbb
aad
in
add
pop
add
xor
and
adc
(bad)
push
pop
or
xor
fwait
dec
jae
adc
cwde
sar
push
mov
add
sbb
or
adc
pop
push
fsubr
sbb
stc
add
lea
loope
iret
fnsave
jg
cmp
cmp
add
jb
mov
cdq
inc
pop
cmp
pop
setb
and
push
add
add
push
push
ins
mov
push
fst
xor
fidivr
das
gs
sub
and
pop
add
adc
je
xchg
cmc
scas
add
jecxz
dec
jne
pop
cli
test
sub
adc
mov
jnp
clc
add
jge
cmp
jge
or
add
stos
pusha
lahf
ja
imul
mov
push
je
ins
xchg
(bad)
mov
(bad)
cdq
(bad)
jne
mov
jl
jg
out
mov
pop
mov
jbe
push
push
jmp
jle
call
push
jmp
mov
inc
and
pop
adc
sub
pop
sar
pop
add
call
ror
aam
cmps
test
dec
add
sub
rol
shl
mov
mov
inc
and
push
jge
call
add
imul
mov
cmp
inc
shr
loopne
push
loope
in
shl
pop
sub
xchg
(bad)
idiv
and
mov
sub
push
or
xlat
push
imul
push
shl
add
cdq
nop
add
or
adc
or
cmp
lds
cmp
dec
(bad)
or
(bad)
(bad)
jmp
mov
ret
dec
sbb
aas
jge
xchg
xor
pop
push
(bad)
push
(bad)
mov
imul
mov
and
mov
pop
ret
or
popf
or
and
mov
and
or
dec
add
sbb
enter
mov
sbb
sbb
js
sbb
sbb
mov
test
sub
and
and
jnp
mov
mov
adc
in
bound
aad
in
and
and
jb
dec
xor
sub
or
push
rcr
stos
dec
inc
push
push
fadd
in
inc
or
hlt
add
inc
sub
scas
lods
out
lea
xor
retf
pop
jne
mov
push
mov
(bad)
addr16
(bad)
(bad)
mov
xor
movs
pop
loopne
jg
fdivr
rcr
aad
mov
sti
popa
loope
or
inc
enter
clc
push
sete
dec
aaa
jno
fucom
fbstp
nop
pop
mov
imul
mov
mov
fs
inc
int3
fcom
inc
adc
cmp
nop
icebp
int3
push
add
and
lea
les
cmp
add
mov
pop
call
shr
imul
in
(bad)
xor
inc
ja
pop
ins
dec
adc
enter
mov
and
push
jmp
lods
xchg
mov
jb
sbb
(bad)
sar
(bad)
cdq
or
push
and
adc
sub
xchg
div
and
add
dec
ins
dec
div
sbb
pop
(bad)
push
add
movs
jb
push
xlat
imul
lock
mov
dec
add
and
je
add
xchg
dec
jmp
jg
or
and
jno
shl
xor
cwde
pop
scas
sbb
or
sub
mov
iret
jo
xor
call
and
jbe
in
popf
retf
sub
push
push
sbb
int
leave
xor
shl
clc
mov
ret
pusha
(bad)
push
arpl
fmul
aas
leave
repz
mov
loopne
out
push
add
and
pop
hlt
adc
xchg
sub
fnstcw
inc
jno
sub
mov
repz
aam
add
mov
mov
repnz
or
push
adc
push
dec
mov
dec
lock
mov
add
imul
stc
nop
test
call
int3
cmp
mov
cmp
fcom
dec
add
mov
fsubr
test
loopne
xchg
sahf
or
lea
lea
cs
or
inc
(bad)
loope
jno
lock
fbstp
in
shr
clc
dec
or
dec
imul
mov
jb
push
das
or
inc
shr
je
ja
jo
mov
sbb
int3
cmp
inc
jno
(bad)
ror
dec
inc
adc
sbb
sub
loope
mov
lds
jb
pop
sub
je
xchg
shl
xor
mov
jnp
xchg
clc
add
popa
je
pop
jp
(bad)
icebp
call
cmp
int3
pop
punpckhdq
add
mov
adc
sub
popa
cld
xchg
fs
add
pop
xor
test
fucom
(bad)
fsub
or
or
aaa
inc
stos
pop
jo
(bad)
jmp
test
out
adc
mov
je
push
clc
mov
push
and
push
xchg
mov
dec
cmovbe
and
sub
or
sub
repnz
fwait
ret
sub
or
std
fdiv
mov
xchg
and
cwde
test
pop
loopne
test
adc
mov
loopne
fs
dec
into
movs
jmp
sub
push
jl
adc
clc
mov
adc
adc
lds
ret
fs
add
or
fcmovu
fnstenv
dec
aam
adc
ins
dec
and
or
adc
pop
xor
gs
sbb
das
lea
lock
je
push
sbb
adc
or
scas
imul
mov
xchg
fldcw
dec
jge
push
nop
into
cmp
sahf
imul
push
push
data16
arpl
mov
xchg
sub
js
ror
stc
icebp
sub
pop
push
and
dec
or
and
adc
pop
jb
pop
loopne
and
cmps
mov
vmulsd
rol
push
and
imul
jp
push
lods
and
sbb
dec
xchg
pop
and
and
dec
bound
or
dec
daa
mov
aad
fld
stc
pusha
or
test
in
mov
sub
sub
or
fxrstor
add
rcr
inc
and
test
aam
sub
and
sar
movs
xor
ret
inc
test
mov
sub
lea
and
pop
cmp
push
cmp
or
ins
or
dec
pop
dec
add
sti
sub
dec
data16
xor
cmp
xor
cdq
or
add
fidiv
and
shl
cvtps2pi
inc
ror
xchg
add
jno
repnz
mov
cmp
xor
pop
add
and
aaa
or
pusha
test
or
pop
push
or
adc
outs
add
jo
je
fcom
pop
test
into
jmp
and
add
jmp
cmp
adc
aam
inc
push
gs
icebp
cmp
pushf
xor
aaa
sbb
sbb
das
inc
les
inc
adc
jae
push
mov
fcomp
imul
add
call
mov
xor
push
in
mov
in
pop
mov
adc
pop
inc
sub
jns
test
sbb
int3
cs
xchg
mov
movs
lock
es
retf
ja
add
or
out
sti
cs
daa
nop
test
push
ror
xchg
(bad)
enter
or
shl
pop
loope
cmc
sub
push
cdq
sbb
and
je
push
jecxz
xor
xor
in
shl
lea
retf
sub
push
or
add
push
stc
xlat
sar
js
dec
inc
sbb
das
inc
fisttp
adc
or
lock
adc
dec
mov
sub
popa
add
in
push
inc
mov
xor
cmp
in
fld
popf
dec
push
rol
adc
dec
add
test
jns
add
inc
dec
or
mov
inc
push
sbb
jb
inc
cdq
lahf
adc
sbb
add
sbb
clts
nop
in
xor
pop
mov
mov
sbb
jae
push
je
dec
or
xor
jno
retf
jae
sbb
leave
and
icebp
ins
sbb
ret
jno
cld
inc
in
mov
add
(bad)
int
into
sub
dec
push
cmp
and
mov
sbb
fld
dec
cmps
push
xchg
add
ins
jmp
cld
pusha
stc
jno
cmp
and
add
call
fdivr
xor
test
imul
mov
push
imul
jns
push
and
fcomp
sub
pop
repz
add
mov
out
and
add
pop
retf
test
sub
sbb
nop
aam
fadd
ja
int
dec
dec
pop
(bad)
inc
dec
pusha
es
imul
je
daa
mov
out
in
(bad)
jns
imul
arpl
or
xchg
jmp
pop
(bad)
mov
or
or
lea
adc
jb
xor
xor
xchg
inc
cld
sbb
cmp
pop
or
clc
shl
popa
adc
pop
mov
mov
int
popf
jbe
mov
sub
add
and
push
(bad)
movs
sbb
cmp
xor
mov
jge
inc
dec
jecxz
jb
push
ins
lock
fimul
sub
cwde
push
dec
sbb
xchg
mov
aad
mov
push
call
push
daa
adc
das
fstp
sar
add
in
ret
(bad)
xchg
ret
gs
out
sbb
pop
ret
and
inc
mov
aam
imul
jae
push
test
mov
jge
mov
add
cmp
jle
xor
enter
cmc
dec
push
lock
div
and
cmp
lods
cmp
xlat
sbb
fwait
nop
dec
sub
fdiv
nop
aaa
mov
fstp
add
scas
cmp
adc
lods
xchg
and
push
movhps
adc
add
sub
xchg
adc
scas
sbb
ret
cmp
stc
push
cmp
mov
inc
sbb
and
ins
dec
xor
mov
daa
xchg
sub
loopne
xchg
sahf
dec
or
fs
(bad)
arpl
lea
sar
add
jb
dec
cmp
inc
add
sbb
push
inc
unpckhps
inc
pushf
push
adc
fisub
dec
xchg
xchg
sub
and
div
leave
xchg
add
add
mov
push
dec
mov
cmp
cmp
ror
das
imul
or
and
cmp
or
mov
xchg
xor
jns
add
or
cdq
add
add
cs
sbb
or
(bad)
jge
push
adc
xchg
sbb
or
orps
dec
pop
and
xchg
inc
js
or
pop
push
inc
pop
sbb
pop
inc
xor
and
add
jo
lds
xchg
xor
stc
pop
je
jne
xchg
sbb
or
or
cmp
addr16
(bad)
pcmpeqb
and
mov
ja
inc
jp
mov
mov
test
pop
dec
jecxz
cmp
retf
cwde
and
shl
aam
sub
cwde
in
inc
nop
dec
xlat
mov
mov
into
sub
add
into
push
sbb
adc
je
in
out
inc
jb
mov
xor
adc
or
cmp
stos
fldcw
adc
add
sbb
mov
dec
sahf
call
in
(bad)
rcr
retf
pop
add
or
sub
in
or
cmps
pop
jae
les
xchg
push
iret
lock
cli
adc
pop
je
test
sbb
rcr
aam
or
test
jg
jge
push
inc
and
das
adc
test
sub
sbb
adc
or
stc
and
mov
push
test
mov
push
(bad)
xchg
push
push
xchg
jmp
int
push
xor
out
xor
div
xchg
adc
das
jnp
cmp
cwde
sbb
adc
sbb
xchg
mov
add
dec
pop
mov
ret
inc
out
add
mov
adc
xor
inc
sbb
push
or
or
pop
add
dec
push
(bad)
rcl
sbb
mov
idiv
push
mov
mov
xor
xchg
mov
rcl
dec
call
test
or
jns
cld
outs
test
add
sub
jl
push
out
and
or
data16
push
les
jg
mov
jns
pop
dec
repnz
sub
(bad)
nop
loop
je
mov
add
outs
dec
repnz
movs
sub
lahf
shl
xor
sub
mov
add
xor
je
xor
xor
bound
jg
add
or
(bad)
int3
xlat
cmp
cli
bound
js
sub
cwde
movs
fild
jl
jle
stos
ins
sub
jno
xlat
cmp
test
xor
dec
inc
fdivrp
cli
jmp
push
inc
and
cmp
push
sub
mov
add
data16
mov
into
and
and
mov
(bad)
ins
jl
fsubr
jmp
ret
add
bound
dec
sub
lods
hlt
ret
inc
cs
ins
push
ret
cmp
xchg
add
mov
cmp
pop
jo
fldcw
ror
cmps
sub
dec
add
add
in
push
adc
mov
jbe
mov
or
and
mov
add
adc
ret
sub
(bad)
add
or
pmulhuw
push
add
cmp
lea
ret
pop
shl
sti
push
jb
rcr
xor
add
add
imul
add
adc
sub
push
enter
push
or
mul
adc
and
and
or
popf
push
adc
xchg
repz
mov
nop
push
sahf
mov
jecxz
sbb
dec
cwde
jmp
nop
and
and
es
(bad)
mov
sbb
push
dec
cmp
bound
push
pop
mov
sbb
not
cmp
cmp
add
sbb
dec
(bad)
ss
ds
mov
mov
ds
mov
and
push
loopne
imul
(bad)
es
out
pop
mov
or
push
sbb
mov
push
in
push
sbb
push
ja
push
in
inc
pop
push
push
jge
jno
mov
xor
xor
repz
or
or
xor
push
lock
fmul
push
es
pop
pop
jl
mov
hlt
outs
inc
cmps
pop
sub
pop
fs
enter
jns
push
(bad)
adc
xchg
test
push
adc
xor
xor
xchg
dec
xchg
mov
push
sub
pusha
mov
xchg
pop
fwait
xor
cmp
xchg
jo
dec
push
popf
call
dec
sbb
test
add
adc
ja
not
mov
ins
div
fcom
pop
movs
sub
jbe
rcl
mov
pop
and
xchg
and
xchg
cmp
push
pusha
repnz
and
ja
aam
and
mov
jp
cs
pop
lea
in
sahf
pop
rcl
inc
cmovs
pop
cmp
mov
jae
inc
or
out
pop
dec
arpl
add
pop
pop
sbb
cmp
xor
imul
mov
cmp
je
movs
and
test
xor
stc
int3
inc
leave
fcom
xor
inc
iret
je
sahf
arpl
jae
stos
pusha
enter
push
push
push
mov
xor
xchg
dec
xor
dec
inc
push
dec
xor
and
cmp
pop
sub
dec
lds
sahf
(bad)
je
shr
cmps
inc
push
rol
add
sbb
(bad)
nop
cmps
test
iret
mov
pusha
sbb
inc
and
mov
je
xchg
(bad)
neg
sbb
and
mov
out
nop
mov
leave
or
add
push
xlat
and
ret
in
jmp
mov
add
int
inc
sbb
push
inc
clc
fistp
imul
fild
(bad)
push
lods
dec
pop
rcl
(bad)
jb
ret
adc
ins
imul
rcl
lods
pusha
mov
push
in
sti
add
mov
push
dec
cwde
out
mov
out
mov
adc
loopne
dec
pop
push
adc
clc
ds
das
adc
sub
test
mov
push
or
sti
daa
add
rcr
jne
sub
inc
ins
add
push
dec
cmps
jno
and
mov
lea
lock
or
jno
mov
push
push
mov
sahf
and
mov
or
bound
or
and
rol
mov
xchg
fsubr
jo
lods
sub
cmp
nop
adc
adc
enter
lahf
mov
mov
jl
mov
ror
js
jo
in
add
loopne
aad
ss
jmp
(bad)
push
sar
popf
nop
inc
push
sbb
les
push
test
add
xchg
test
stos
or
or
adc
inc
aad
cmc
mov
(bad)
call
ja
cmp
xor
jmp
or
loop
jo
(bad)
cmp
pusha
xor
add
mov
jmp
cmp
cmp
jge
and
movs
dec
add
cmp
cmp
xor
div
mov
inc
test
sti
push
test
sar
push
dec
mov
cmp
test
inc
jle
call
add
mov
pop
push
push
push
out
adc
push
cs
popa
mov
jmp
aad
inc
lahf
inc
jbe
push
sbb
or
rcr
xlat
dec
bound
or
pop
sub
jo
(bad)
jmp
je
or
imul
sbb
pop
pop
ret
ja
jge
popa
push
or
mov
and
shr
fsub
inc
or
adc
push
cmp
adc
out
ret
sti
(bad)
sub
fsubrp
add
inc
sub
(bad)
in
and
cmp
or
maxps
mov
ins
jmp
mov
mov
es
outs
jge
pop
xchg
les
push
cs
cld
and
adc
pop
sbb
out
js
test
jg
adc
mov
scas
push
gs
mov
out
rcr
jmp
leave
rcr
mov
xor
mov
dec
push
test
dec
cld
sbb
lahf
mov
add
push
enter
fist
sub
mov
call
sub
adc
jnp
fld
rcr
fwait
or
push
sbb
call
mov
mov
shl
into
ins
sub
jne
jmp
sbb
shl
add
jns
sbb
out
fld
push
ja
lea
in
dec
or
cmp
push
ins
push
das
sbb
jl
mov
push
sbb
and
sbb
push
mov
push
ror
jne
xchg
(bad)
add
popf
lds
jge
xchg
fidivr
loopne
out
fst
cmp
mov
shl
aaa
cwde
in
test
jo
push
mov
call
or
push
sub
(bad)
xchg
cmp
push
movs
mov
mov
jge
mov
aaa
in
stos
add
xacquire
push
cmp
cmps
(bad)
retf
xor
mov
fld
mov
mov
mov
mov
cmp
mov
jle
xor
pop
popa
imul
movs
fs
cmp
adc
add
js
call
pop
fxch
push
mov
sbb
add
jno
cmp
xchg
test
sbb
test
sar
jl
xchg
jl
xor
jnp
adc
lods
pop
les
je
mov
dec
lods
or
mov
fadd
test
leave
ins
jo
fdivr
daa
mov
iret
adc
push
inc
cmp
and
pop
cmp
xchg
cmp
xor
add
bound
ret
adc
adc
mov
mov
pop
dec
out
and
mov
mov
inc
and
mov
push
fld
(bad)
lock
mov
dec
pop
jne
inc
gs
mov
xchg
xchg
out
hlt
xchg
iret
test
mov
test
mov
dec
(bad)
lea
xor
mov
push
test
mov
xor
or
mov
mov
popa
or
mov
inc
shl
shl
pushf
add
pop
cmp
cwde
dec
jmp
test
sbb
mov
inc
or
or
and
sub
xchg
jl
pop
push
jecxz
jecxz
inc
nop
xor
sub
xchg
jbe
push
in
sub
jmp
pop
lea
shld
cmp
and
cdq
sub
mov
ins
add
lea
rcr
sti
xchg
sub
dec
sub
cs
das
inc
sbb
jns
sbb
je
jo
pop
push
cdq
xor
jge
pop
xor
mov
ja
push
js
pushf
or
xor
iret
mov
push
add
jno
and
aaa
stc
cwde
xor
push
mov
xor
jmp
sbb
xchg
sbb
js
ret
dec
adc
test
mov
dec
in
cs
push
leave
mov
mov
test
dec
push
mov
xor
cmp
cmp
dec
mov
arpl
sub
jne
mov
cmp
popa
test
lock
dec
cmp
push
stc
cmp
and
xchg
push
mov
xchg
aas
movs
rcl
mov
push
adc
scas
mov
test
dec
jae
clc
pushf
dec
hlt
mov
(bad)
and
popa
dec
shr
call
dec
or
rol
inc
push
mov
js
cld
(bad)
sbb
das
js
inc
dec
mov
add
sbb
std
adc
inc
xor
(bad)
push
js
mov
mov
adc
aas
test
add
loop
in
loopne
xchg
outs
mov
push
retf
inc
imul
mov
xor
xchg
pop
mov
retf
cwde
gs
les
gs
test
xchg
dec
leave
add
(bad)
push
ins
data16
add
test
add
jo
addr16
push
pop
inc
mov
dec
or
cmp
(bad)
js
pop
cwde
jl
xor
cs
dec
jl
fsub
jmp
clc
sti
sbb
jo
enter
nop
mov
xor
and
sbb
dec
push
inc
call
(bad)
nop
add
mov
dec
fwait
dec
and
xchg
dec
jb
sub
cmp
dec
sbb
cmp
dec
dec
dec
dec
inc
pushf
dec
jb
push
or
fadd
jb
fmul
and
mov
pushf
loop
mov
and
daa
jmp
cdq
dec
call
jge
sti
les
xchg
inc
out
xchg
push
mov
std
mov
mov
and
inc
in
lods
sbb
add
and
mov
sub
out
dec
(bad)
xchg
inc
jg
stc
inc
adc
lahf
test
push
adc
icebp
pusha
pop
sahf
sub
push
loope
lds
jmp
icebp
jmp
or
push
push
or
inc
das
lahf
jmp
mov
sbb
xor
mov
mov
adc
pop
add
ins
inc
push
cld
pop
push
jns
mov
retf
pop
xor
add
fsub
rcr
in
stos
mov
mov
stos
mov
and
inc
sub
xor
push
and
mov
popa
and
mul
mov
cmp
and
rol
xor
inc
mov
inc
es
enter
lock
jge
jno
cwde
adc
lock
sbb
push
ret
and
mov
data16
rcl
push
push
lea
js
imul
aad
xchg
nop
imul
xor
sahf
mov
mov
into
ins
add
inc
add
jno
test
or
je
mov
in
pop
sbb
in
push
clc
pusha
mov
mov
pop
hlt
sub
push
out
sbb
arpl
test
dec
mov
mov
cdq
not
add
lock
mov
jo
xchg
pop
jb
ret
test
jno
mov
push
mov
pop
jne
push
add
push
inc
jns
cdq
add
cdq
push
loope
call
or
ret
pop
or
in
sbb
aas
cdq
lods
fadd
jp
(bad)
xlat
outs
pop
or
stc
cwde
dec
jl
call
int
jge
mov
jns
imul
lahf
xchg
or
nop
dec
stos
clc
ds
dec
ret
div
inc
data16
cmps
jecxz
xlat
test
lods
lds
or
aad
sub
push
sbb
sbb
mov
jg
jns
call
add
repnz
enter
or
imul
test
in
inc
sahf
retf
add
std
jns
bound
out
fdivr
cmps
shl
(bad)
pop
stos
add
pop
or
add
jne
mov
or
adc
add
mov
mov
sbb
and
and
xor
or
stc
sub
imul
xor
fidivr
xlat
mov
enter
and
add
enter
jne
les
xchg
mov
xchg
sbb
xor
ins
ds
push
push
(bad)
int3
dec
dec
test
fmul
and
stos
lock
test
inc
sub
jmp
xor
or
add
cld
es
es
add
test
jne
cli
push
mov
mov
call
fld
mov
mov
mov
lock
daa
xor
les
fwait
mov
sti
rcl
fld
xchg
mov
cwde
sbb
call
mov
cdq
add
adc
das
adc
jnp
add
xchg
mov
or
add
cmps
pop
mov
inc
fadd
pushw
mov
or
lock
push
iret
push
xchg
rcl
por
add
enter
and
xchg
retf
out
pusha
(bad)
xchg
cwde
or
jp
popf
lods
inc
cmp
xor
aam
push
and
add
jge
dec
and
dec
in
or
sti
nop
or
xchg
les
je
cmp
add
pop
stos
mov
std
sbb
(bad)
lea
xchg
adc
dec
xchg
loopne
cmp
dec
dec
and
in
push
xchg
push
pop
iret
mov
xchg
ds
sub
loopne
out
cdq
push
mov
dec
xchg
and
cmps
adc
fdiv
into
lods
fsubr
retf
enter
fwait
fs
cwde
fs
call
xor
into
mov
and
je
movs
jo
loope
leave
xchg
repz
sahf
push
je
dec
fadd
push
stos
inc
sub
add
cmp
adc
xor
test
daa
popa
inc
loope
add
mov
std
loopne
ss
mov
inc
mov
in
cmp
cmp
adc
pop
dec
adc
dec
int3
sbb
pusha
mov
pop
mov
cld
push
out
movs
cmps
inc
xor
add
jo
push
cmps
mov
mov
shl
xor
test
into
xor
inc
int3
xlat
aam
js
sbb
aad
pop
pop
pop
test
mov
push
or
xchg
dec
outs
pop
test
xchg
repz
add
les
push
fiadd
push
mov
or
mov
jmp
xlat
scas
pop
pop
xchg
jb
inc
mov
ffree
jb
test
xchg
jb
adc
movs
add
mov
punpckhbw
mov
jp
dec
das
cwde
scas
cmp
and
add
push
mov
rol
test
sbb
mov
or
test
mov
outs
mov
imul
aam
or
mov
jecxz
jne
dec
(bad)
pop
inc
(bad)
das
nop
les
sbb
xor
inc
pop
(bad)
fcmovnbe
and
add
test
cmp
or
mov
fnstenv
es
inc
out
sbb
push
mov
adc
add
mov
mov
cmp
aaa
pop
xor
aaa
dec
es
int
sbb
(bad)
pusha
int
les
dec
adc
scas
(bad)
scas
sar
or
push
rcl
push
adc
out
xchg
jbe
push
std
out
shl
adc
mov
sub
pop
xchg
fisttp
lods
fstp
neg
(bad)
jge
mov
stos
fwait
cmp
pop
mov
sub
mov
inc
jno
in
push
jnp
and
or
out
sahf
push
aas
mov
sub
in
inc
test
ret
mov
or
mov
mov
loope
mov
idiv
js
and
mov
movs
push
dec
outs
lock
sub
xor
and
jbe
pop
sahf
xor
fbld
add
add
in
add
fbld
push
inc
pop
cmps
or
test
rol
or
hlt
loope
push
test
mov
xchg
dec
test
add
xchg
mov
inc
in
mov
mov
push
cmps
mov
inc
mov
push
ins
lds
ror
adc
dec
inc
or
cmp
out
call
lds
loopne
je
imul
cmp
jge
sbb
jmp
mov
mov
loopne
pushf
mov
xor
add
je
dec
dec
xchg
test
mov
in
jns
ret
sub
xor
xor
cmps
push
mov
test
out
popa
add
sub
je
lahf
loopne
inc
fsubr
and
and
fcomip
xor
and
cmp
or
xor
leave
or
or
push
xor
or
inc
aas
dec
nop
and
mov
sub
(bad)
je
push
setge
ror
jmp
shl
mov
mov
mov
or
shl
push
in
cmp
or
xchg
jg
loope
ins
jno
ja
add
inc
rol
and
and
leave
xchg
mov
add
dec
mov
(bad)
push
push
sub
xor
(bad)
stc
cmp
mov
daa
pop
retf
mov
ja
add
gs
xchg
ss
jo
and
fidivr
sbb
and
adc
or
mov
push
fiadd
jle
dec
jge
push
sbb
xchg
sub
xchg
das
mov
test
rcl
xchg
mov
push
xchg
inc
mov
pushf
and
push
mov
mov
pop
cmps
sar
mov
mov
cld
pushf
add
in
jb
jnp
mov
outs
dec
ds
addr16
mov
out
sbb
and
movs
adc
xor
dec
rol
sahf
test
inc
loopne
inc
lods
es
add
dec
or
dec
inc
mov
mov
push
pop
scas
in
lods
lods
test
stc
std
addr16
mov
enter
in
and
xor
(bad)
rcl
push
ja
add
in
mov
popa
add
loopne
and
sub
and
cmp
dec
cmp
xchg
xchg
fstp
fdiv
(bad)
in
inc
xchg
(bad)
aaa
mov
rol
fisubr
sub
cmp
mov
nop
inc
cs
shr
mov
movs
fcom
in
test
nop
jmp
push
push
and
push
and
add
pushw
imul
test
pop
in
dec
rcl
push
test
sahf
pop
dec
pusha
pop
inc
jo
in
jge
jo
dec
repnz
call
stc
(bad)
repz
mov
dec
mov
xchg
sub
dec
jmp
in
cld
scas
(bad)
pusha
inc
imul
sbb
outs
leave
mov
icebp
jno
cmp
pop
adc
mov
test
add
inc
mov
fisub
pop
xchg
pop
mov
xchg
or
pusha
xchg
push
ins
dec
hlt
shl
mov
xor
sbb
or
ret
lods
dec
xchg
aam
xchg
dec
jns
cmc
xor
and
pop
push
and
sahf
or
es
cmp
adc
ds
sbb
push
add
push
and
enter
ret
mov
test
dec
jl
add
push
xor
jecxz
adc
sub
push
mov
and
add
cmp
mov
movs
add
je
xlat
test
idiv
loopne
repnz
add
sti
out
push
cmc
add
mov
cmp
push
or
setg
loop
mov
push
xor
or
xchg
mov
mov
clc
push
jge
dec
stc
out
ins
xor
inc
adc
and
mov
bound
jmp
or
scas
sbb
rol
jae
push
daa
sbb
mov
imul
icebp
lods
mov
test
in
cmp
and
push
retf
sar
mov
ss
movs
mov
jecxz
pop
test
jmp
mov
outs
(bad)
lock
push
std
mov
dec
ror
and
adc
daa
mov
push
mov
inc
jl
gs
(bad)
in
push
ret
and
stos
js
mov
(bad)
cmp
jb
pop
or
pop
jmp
jb
mov
mov
cmps
cs
sbb
xor
rol
sbb
clc
fisubr
xor
xor
scas
ja
adc
loopne
push
mov
pop
fsub
pop
or
xchg
cmp
nop
adc
dec
lock
sub
inc
adc
and
jg
or
(bad)
shl
aam
inc
cli
ror
push
neg
push
jns
test
aad
inc
das
push
iret
add
or
adc
leave
adc
data16
test
cmp
shr
retf
sub
or
inc
sbb
add
add
sub
jb
xchg
add
dec
inc
test
push
call
and
jge
dec
lock
mov
fst
or
push
test
adc
inc
lahf
cmps
int3
sbb
sub
push
and
inc
into
mov
add
das
jne
cmp
mov
dec
mov
or
push
clc
pop
mov
dec
sbb
add
mov
test
clc
push
pop
cmps
adc
fcom
nop
shr
pop
and
jge
mov
(bad)
mov
retf
push
cmp
in
pushf
div
push
jbe
jle
mov
and
nop
or
(bad)
movs
stc
je
mov
add
mov
jbe
xor
mov
rol
push
mov
aaa
inc
cmp
mov
mov
inc
test
sub
dec
and
iret
xor
inc
dec
call
or
movs
jb
repz
mov
fs
inc
and
or
push
int3
pop
sar
repnz
and
in
sbb
adc
pop
cmp
mov
dec
and
retf
shl
lods
movntq
inc
repz
add
xor
xchg
imul
xchg
pop
ins
add
pop
lods
popa
jne
test
sub
adc
sub
dec
jmp
xchg
or
push
or
cwde
jge
add
xor
dec
adc
and
adc
aam
push
dec
push
adc
add
xor
adc
je
sbb
sbb
int
nop
mov
loope
mov
ins
add
cs
xchg
push
adc
out
pop
arpl
sbb
cmps
das
dec
ret
push
pop
pop
in
and
lock
jle
adc
enter
cld
adc
add
retf
mov
mov
xor
xor
test
add
push
les
popa
cmp
xor
push
jns
push
(bad)
sbb
and
cld
mov
js
push
mov
pushf
test
jp
pop
cld
pop
add
push
imul
jmp
test
mov
pop
imul
enter
cmps
add
and
cmp
adc
mov
pop
inc
and
(bad)
call
ret
inc
jne
xchg
xor
cmp
mov
adc
inc
pusha
or
stc
lods
inc
mov
shr
sub
fdiv
test
add
in
adc
inc
sub
dec
inc
loop
inc
je
neg
(bad)
in
and
xor
cmp
ss
push
(bad)
(bad)
jne
push
sbb
jg
je
adc
repnz
fnsave
addr16
in
adc
cmps
pusha
pop
push
sub
jl
mov
mov
and
add
jl
and
xor
mov
mov
or
push
cmp
inc
mov
push
mov
and
push
xchg
sub
sbb
mov
call
adc
mov
nop
pushf
inc
pop
or
jae
call
fstp
cli
push
lea
push
push
push
add
add
adc
jne
mov
mov
cmp
mov
enter
es
mov
or
sahf
scas
and
add
inc
mov
inc
pop
loopne
mov
push
rcr
xchg
add
cs
pop
sub
mov
hlt
push
fadd
adc
push
xlat
push
sbb
mov
pop
movs
push
adc
call
ret
push
fwait
or
and
dec
adc
or
rcr
mov
out
aam
stos
pop
(bad)
dec
mov
jae
inc
hlt
xor
mov
shl
sbb
test
xchg
xor
test
cs
shl
mov
nop
sbb
mul
and
mov
cs
mov
sbb
fisub
mov
into
movs
sbb
or
mov
add
add
das
or
xlat
and
inc
dec
mov
jmp
or
pop
xchg
mov
and
pop
repz
or
add
adc
imul
cmp
in
shl
xor
dec
nop
adc
aad
sub
stos
stos
jmp
test
push
dec
(bad)
in
jns
jae
hlt
xor
push
mov
mov
jle
mov
dec
pop
rol
add
mov
jnp
call
and
aas
cmp
sub
popa
push
xor
aaa
mov
cmp
dec
lds
dec
inc
mov
xor
jp
inc
push
or
rcl
xchg
mov
mov
add
add
(bad)
lock
popa
push
add
pop
inc
test
push
add
ffreep
fild
or
push
sub
lds
stos
xchg
xchg
aad
(bad)
in
cmp
inc
mov
xor
ins
push
cmc
in
pop
into
cs
sub
int
call
xchg
push
outs
mov
push
cs
add
jge
je
pusha
adc
fdivr
pop
mov
test
das
call
imul
cmp
push
xor
cmp
and
scas
or
cmp
dec
cwde
scas
jno
mov
inc
fs
push
pop
sar
rcr
xchg
jmp
or
xchg
sar
pop
mov
aam
aad
add
or
or
test
jns
mov
jns
mov
lock
and
sbb
leave
test
aas
inc
retf
test
dec
add
or
xor
movlhps
movs
in
adc
aam
and
dec
or
mov
dec
inc
push
test
xchg
inc
dec
and
sbb
or
inc
lods
add
dec
push
inc
inc
sbb
dec
test
mov
cdq
nop
xchg
icebp
iret
fiadd
jecxz
sub
ins
std
int3
pop
enter
call
mov
loopne
inc
xchg
call
jne
movs
(bad)
test
inc
dec
push
adc
loopne
dec
mov
dec
or
add
pop
inc
adc
mov
std
pop
sbb
pop
shr
add
(bad)
repz
dec
add
xchg
sar
lods
jmp
fs
shr
daa
imul
outs
mov
outs
loope
mov
sahf
adc
(bad)
mov
xlat
mov
ja
data16
mov
sbb
sub
nop
and
test
push
sbb
imul
sbb
wrmsr
dec
rcr
mov
rcl
push
pop
mov
bts
outs
push
in
and
add
cmps
adc
mov
and
push
mov
imul
sahf
add
mov
mov
ror
or
sub
int3
(bad)
out
push
push
enter
(bad)
pop
pop
or
bound
adc
sbb
ret
pop
mov
cmp
or
ins
ins
pop
lock
mov
in
cmp
xchg
pop
mov
das
or
mov
outs
(bad)
push
lahf
and
fs
mov
and
xchg
je
mov
call
movs
jecxz
pop
cmp
sub
pusha
jmp
push
add
xor
cli
ror
test
test
mov
ins
leave
push
pusha
push
ret
and
mov
in
xchg
pop
xor
sub
push
adc
or
mov
mov
and
adc
cs
(bad)
popa
or
lods
hlt
imul
mov
aaa
imul
xor
or
add
enter
sti
pop
pop
xor
retf
pop
pop
nop
cmps
or
push
retf
lods
sub
sub
xchg
add
pop
enter
xchg
arpl
(bad)
mov
arpl
cmp
dec
retf
rcr
jnp
sbb
inc
lds
enter
adc
push
dec
mov
mov
and
push
mov
sbb
sbb
adc
aaa
push
sbb
in
inc
mov
sbb
outs
fcom
xor
add
push
int3
shl
adc
sub
xor
jg
idiv
and
xor
ret
fs
(bad)
inc
push
pop
(bad)
aam
inc
jmp
rcl
push
sub
fcom
cwde
popa
ins
or
fdivr
xchg
mov
xchg
das
jo
sbb
add
lahf
inc
sub
xor
jmp
lock
sbb
jmp
or
jl
cld
add
dec
je
pop
movs
(bad)
cmp
and
adc
pop
movs
mov
pusha
dec
adc
fld
add
xor
push
add
ret
or
add
inc
pop
loope
add
xchg
dec
mov
cmp
push
pop
iret
lock
sbb
add
stos
mov
imul
aam
mov
dec
adc
out
mov
mov
sbb
sbb
mov
jl
mov
jle
std
push
or
and
dec
cmp
jbe
push
xchg
or
cmp
fbstp
sar
mov
rcl
xchg
aad
sub
sub
pusha
add
sbb
adc
jecxz
movs
icebp
mov
mov
lea
sbb
mov
add
sub
or
nop
dec
jne
push
aas
jo
inc
dec
dec
or
push
push
shr
sbb
add
adc
pop
pop
xor
mov
retf
xchg
jmp
push
inc
xor
pop
add
mov
shr
mov
xlat
test
adc
inc
add
add
xchg
lds
sbb
push
ret
xchg
test
jge
pop
push
gs
push
push
daa
test
mov
in
push
gs
lahf
imul
je
and
push
dec
aad
and
movs
xor
xchg
test
push
push
mov
and
adc
sar
push
mov
cmp
test
sti
cmp
idiv
or
mov
ins
loop
out
(bad)
sub
jbe
shr
sub
out
bound
sub
jb
test
mov
fs
jb
xchg
or
in
es
cli
shl
arpl
fidiv
mov
mov
pop
inc
pop
loop
inc
push
(bad)
xor
and
or
xchg
dec
leave
mov
jl
lods
rcr
xchg
nop
or
pushf
mov
movs
test
mov
nop
or
mov
mov
or
push
or
inc
inc
jnp
dec
fiadd
mov
gs
add
test
xor
add
mov
pop
psrld
leave
leave
pop
pusha
mov
cdq
in
mov
dec
xor
and
sub
xchg
dec
cmps
inc
cmp
retf
inc
es
push
jp
out
push
loopne
sbb
and
retf
adc
adc
push
pop
pusha
es
fs
fs
xchg
dec
pushf
mov
es
rcl
cld
and
sbb
add
xor
or
adc
dec
xor
and
pop
pusha
xor
and
jl
test
cmp
int
(bad)
rol
les
inc
cmp
ss
sahf
mov
cmp
sbb
cmp
(bad)
sbb
dec
cmp
cdq
movs
repnz
adc
xchg
dec
mov
dec
lods
mov
xchg
dec
es
mov
pushf
fs
adc
adc
pop
xor
sbb
sub
dec
adc
adc
cdq
fs
dec
push
je
cmps
sbb
or
push
in
vmwrite
dec
or
push
or
and
dec
cmp
and
or
cmps
fcom
xchg
xchg
pop
das
xchg
pusha
pop
mov
xor
mov
test
push
sbb
push
ins
adc
(bad)
je
test
outs
les
inc
xor
mov
nop
dec
inc
or
push
icebp
or
idiv
and
and
adc
retf
in
ins
je
jl
mov
adc
cmp
add
push
jns
push
xor
xor
mov
add
or
pop
stc
cs
out
sbb
and
ror
aam
movs
bnd
in
call
xchg
dec
inc
dec
ins
jo
retf
in
mov
mov
das
xchg
mov
cs
xchg
retf
aam
sbb
and
xor
fs
xchg
retf
ins
push
in
mov
xchg
pop
cs
retf
rol
hlt
clc
out
push
fnstcw
add
or
sti
mov
pushf
pop
adc
and
jmp
mov
stc
mov
xor
(bad)
sbb
or
dec
push
xchg
add
push
inc
push
push
ja
cmp
mov
(bad)
sti
cs
cmp
out
adc
stc
jge
movs
js
aaa
mov
mov
imul
pop
pop
or
add
jo
je
mov
fadd
fdiv
dec
div
pop
add
mov
enter
retf
js
or
in
ins
hlt
push
or
dec
mov
shl
mov
cmps
ror
or
call
add
adc
mov
adc
loopne
cwde
or
addr16
mov
jns
mov
sub
lea
repz
add
add
bound
push
cmp
in
ins
dec
inc
sbb
add
mov
adc
xchg
rol
enter
cmp
aam
mov
xchg
inc
pop
sbb
pop
repnz
add
inc
add
or
add
shl
jbe
ja
mov
dec
inc
mov
xchg
adc
xor
jbe
aad
sbb
mov
cmp
push
mov
pop
test
pop
movs
fscale
and
add
sub
in
push
pop
mov
or
out
ror
push
test
test
out
cmp
or
pop
mov
mov
add
push
and
sar
loope
push
adc
js
fcomp
xor
pop
call
sbb
add
mov
cmp
xchg
xchg
mov
je
enter
mov
sub
rcr
in
add
sbb
cmp
test
leave
nop
add
mov
aaa
or
dec
adc
and
in
and
push
cmps
sahf
mov
dec
or
test
push
sahf
je
pop
add
imul
push
fidiv
adc
push
arpl
cmp
neg
jmp
retf
inc
and
jmp
jae
lods
cmp
leave
and
pushw
nop
retf
lds
sbb
sbb
bnd
loop
sbb
inc
add
inc
pop
movs
add
cmp
dec
test
dec
lods
mov
and
sub
jae
adc
xor
and
push
je
in
xchg
dec
int3
in
or
nop
dec
cmp
ds
mov
fcmovnbe
dec
mov
jnp
sbb
or
add
imul
sub
in
pop
or
jns
dec
in
or
or
or
ins
fisub
push
(bad)
and
jns
add
mov
cmp
inc
push
movs
add
and
push
call
mov
enter
enter
test
mov
jl
ins
nop
and
sub
add
sbb
cdq
js
(bad)
mov
or
push
cmp
imul
sbb
pusha
sbb
add
sbb
nop
pusha
pop
pop
sbb
adc
sbb
add
nop
add
cld
add
and
jb
(bad)
rol
and
mov
xor
mov
xor
and
fs
pop
and
xor
push
push
push
jecxz
sub
das
test
fwait
scas
xor
adc
jne
cdq
clc
les
sbb
and
xor
sub
add
and
and
dec
dec
push
in
add
push
cmp
fmul
adc
pop
add
(bad)
aas
add
cmp
mov
ret
push
and
lea
loope
or
push
mov
xor
push
rcl
add
(bad)
pop
push
ja
sti
ins
pop
jnp
mov
ins
dec
sub
dec
mov
pop
rol
mov
adc
fwait
aas
cmp
es
jl
sbb
mov
or
add
pop
inc
in
dec
in
add
mov
sbb
cmp
mov
xchg
sub
in
clc
mov
inc
xchg
mov
js
xor
xor
neg
mov
fild
lock
fxch
fdiv
inc
or
mov
inc
and
repnz
hlt
jl
stc
and
out
mov
fldz
dec
xchg
adc
mov
test
sahf
shl
test
movs
xchg
hlt
pop
fcomp
mov
sbb
inc
xor
sahf
data16
fld
add
pop
fnsave
mov
pushf
stos
daa
int3
addr16
test
or
inc
(bad)
sbb
and
fsub
sub
add
stc
lock
iret
sbb
and
dec
or
enter
mov
outs
mov
bound
call
mov
jmp
inc
adc
sbb
and
add
aam
arpl
and
or
dec
push
repnz
dec
add
jmp
je
das
xchg
inc
inc
sub
sbb
jno
aaa
xlat
outs
sbb
xchg
jae
pop
test
mov
cli
sub
popf
ins
loop
shr
and
add
stos
cwde
mov
dec
pop
inc
out
cs
cmp
sbb
retf
je
dec
stos
fs
pop
add
sahf
dec
enter
add
adc
fild
mov
fdiv
push
sahf
inc
add
out
pop
or
int3
repz
mov
retf
das
inc
dec
push
sbb
and
fmulp
fsubp
jnp
fdiv
stos
in
ror
or
jnp
pop
sbb
sbb
sbb
aaa
inc
pop
cdq
mov
retf
idiv
lods
jo
sub
mov
mov
mov
inc
fisttp
and
add
retf
outs
ja
jne
dec
fld
fdiv
and
mov
ret
inc
daa
jge
inc
cs
retf
xor
pop
jnp
inc
fdivr
xchg
and
fdivr
dec
inc
icebp
and
fcom
adc
cmp
daa
fstp
mov
rcl
jbe
data16
xchg
push
mov
adc
sub
or
push
jge
stc
ror
loopne
adc
xchg
push
jo
push
xchg
data16
mov
imul
int
push
(bad)
fadd
sahf
sbb
fcomp
pop
xor
retf
ficom
ins
ja
sbb
push
(bad)
rcr
ins
mov
or
or
test
xchg
inc
add
xchg
push
or
test
sahf
or
je
jmp
(bad)
push
cmp
mov
add
mov
scas
popa
les
xchg
inc
and
mov
or
test
popf
je
pop
push
nop
ret
pusha
add
push
push
and
xchg
pop
mov
call
adc
fcmovbe
out
adc
jo
jle
adc
pop
adc
cli
xchg
add
pop
xchg
retf
adc
mov
jb
mov
pop
les
cmps
movs
pushf
test
(bad)
aad
xlat
nop
or
sub
or
jecxz
(bad)
jno
rcl
push
leave
movzx
les
mov
ds
leave
dec
push
lock
mov
dec
in
cmp
add
or
mov
(bad)
nop
push
imul
retf
ss
test
shl
cli
or
(bad)
dec
fidiv
adc
push
push
mov
mov
pop
xor
js
adc
sub
mov
mov
pop
in
fnsave
sub
pop
push
adc
or
sbb
xchg
(bad)
cmp
or
dec
inc
test
call
push
nop
push
pop
mov
in
inc
sub
mov
repnz
je
cwde
arpl
sub
and
arpl
push
pop
sahf
mov
outs
add
add
sbb
pop
mov
dec
pushf
mov
fadd
inc
cmp
xor
imul
mov
(bad)
in
sar
loopne
xchg
and
js
push
gs
cmp
or
push
or
popa
cmp
adc
push
test
inc
adc
inc
cwde
push
and
push
dec
push
push
or
leave
dec
sbb
cs
cmp
or
add
sbb
mov
jns
mov
cmp
cmps
jecxz
shl
shl
or
jne
movs
dec
adc
add
adc
push
mov
icebp
xor
sbb
fist
adc
(bad)
xor
cs
dec
mov
xchg
pop
dec
cmp
fbstp
lea
or
rol
cmp
lds
mov
or
mov
dec
sahf
pusha
mov
not
(bad)
dec
and
or
pop
rcl
(bad)
or
add
mov
push
call
test
and
push
or
mov
pop
or
aam
pop
and
mov
aaa
cmp
sbb
bound
inc
add
and
sahf
add
jg
sbb
mov
or
jl
cmps
popf
push
scas
xor
xchg
test
call
das
pop
mov
xchg
pop
out
jge
clc
ror
pop
mov
stos
xchg
clc
out
add
mov
inc
xor
and
jmp
mov
sbb
mov
xchg
cmp
test
pop
clc
mov
pop
movs
sar
jae
sub
add
in
push
cmc
xor
test
stos
xor
mov
pop
inc
je
inc
push
lds
fild
sahf
in
mov
shl
test
mov
add
loopne
inc
pop
sub
pop
aas
je
dec
push
inc
call
mov
pop
stc
mov
sub
mov
pop
cmp
xor
xor
mov
push
sbb
cmp
or
add
adc
popf
jmp
xlat
mov
inc
pushf
bndstx
hlt
or
(bad)
adc
cmp
add
add
xchg
stos
push
or
sub
ret
retf
dec
pop
and
sub
add
clc
aam
mov
and
push
dec
mov
push
leave
(bad)
and
xchg
ds
or
inc
cmp
push
(bad)
imul
and
pop
loope
ja
sbb
mov
rcl
call
pop
jne
ins
push
mov
cld
add
in
jle
mov
jne
dec
inc
add
sahf
push
sub
xchg
mov
mov
ror
push
adc
aas
mov
pop
lods
mov
iret
dec
cmp
test
retf
mov
lods
or
mov
and
call
leave
jle
inc
shr
xchg
sub
jge
pusha
dec
push
test
movs
mov
inc
push
jo
ja
outs
loop
fild
scas
int3
(bad)
fst
(bad)
cld
add
mov
rcl
loopne
fidiv
pushf
(bad)
sbb
stc
jmp
pop
repnz
or
push
add
fnsave
mov
sbb
cmp
mov
add
sbb
xor
rcl
ror
int
jns
mov
add
dec
xor
shr
xor
cmp
jg
xor
push
shr
cmps
repnz
pop
fdiv
or
jle
cmp
xor
and
sbb
inc
imul
pop
shl
mov
arpl
inc
cs
sti
cmp
sub
and
rcr
scas
jno
sar
and
btc
adc
xor
loopne
xor
or
ins
out
mov
mov
cmp
mov
sub
je
nop
or
jbe
jg
inc
inc
adc
push
stos
dec
data16
inc
mov
xchg
lea
arpl
xor
mov
ds
mov
jmp
sub
les
mov
fs
xchg
or
add
movs
cmps
jo
sar
inc
dec
mov
mov
pcmpeqb
rcr
lea
shl
sbb
mov
xor
or
sub
ds
int
cli
scas
and
jmp
pop
ret
push
rcl
sbb
rcl
xchg
sub
shl
fmul
mov
pop
dec
pop
cmovnp
into
jl
mov
fmulp
xchg
and
jle
xchg
lea
or
sub
jns
inc
sbb
xchg
sub
adc
jno
jge
xor
xor
xchg
jle
push
lea
idiv
xor
retf
push
add
fsubr
sbb
jge
sub
pop
daa
xchg
scas
cmp
daa
push
retf
ret
push
repnz
mov
pop
ret
pop
push
mov
out
xchg
add
mov
xor
sub
sbb
dec
mov
push
xchg
test
add
mov
into
adc
push
sub
into
add
sbb
imul
shr
mov
push
daa
and
rcl
add
rcr
or
xor
leave
inc
call
addr16
dec
cmp
scas
add
test
adc
cli
or
adc
pop
arpl
xchg
(bad)
sbb
enter
xor
xchg
mov
imul
sub
mov
sbb
adc
not
ret
xchg
add
imul
push
mov
jb
xor
xchg
or
cmp
mov
je
pop
jne
add
fisubr
sbb
shl
and
and
add
add
push
test
inc
jo
jo
push
data16
or
or
inc
stc
xor
mov
or
mov
les
adc
movs
out
loopne
int
addr16
mov
sbb
cmp
(bad)
les
add
xor
and
dec
ret
loope
movs
xor
xchg
lods
in
jge
ret
push
dec
add
cs
mov
mov
and
cmps
popa
aam
aad
pushf
mov
and
mov
lods
add
popa
push
sbb
or
jp
inc
xor
fstp
imul
lods
add
ss
or
push
or
mov
adc
ror
ss
aaa
rcl
push
fs
es
cld
outs
push
cmp
repz
(bad)
jne
or
ss
pop
out
xchg
inc
add
xor
call
imul
ins
ret
cmp
sbb
mov
mov
pop
in
jge
in
test
cmp
cmc
bound
mov
cmp
jg
les
jg
jo
or
jae
jmp
or
jne
sub
(bad)
mov
lea
(bad)
sti
mov
pop
push
jl
xchg
pop
ja
jb
movs
sbb
add
sar
cmps
jl
add
std
cmps
imul
add
nop
movs
push
mov
push
dec
cmp
gs
dec
test
sbb
push
aam
in
xchg
and
into
cli
popf
mov
push
pause
pop
loopne
add
cmp
loopne
inc
mov
or
mov
mov
mov
je
add
xor
jmp
lahf
ret
dec
or
mov
ret
ror
je
and
data16
push
js
inc
jmp
jge
adc
mov
sbb
pop
pop
sbb
ds
sbb
or
push
loope
pusha
inc
jge
in
dec
fwait
inc
loopne
ficom
xchg
jl
or
shr
pop
or
adc
sub
je
pop
adc
mov
jo
in
sub
push
push
jmp
out
gs
dec
cmps
cmp
bound
(bad)
add
adc
mov
fs
imul
rcl
sbb
adc
lahf
jb
ret
(bad)
les
add
or
inc
icebp
dec
mov
push
sub
or
mov
or
mov
bound
and
xchg
pop
jmp
dec
inc
pop
pop
dec
sub
clc
pusha
lock
les
adc
pop
and
(bad)
mov
pop
jb
mov
adc
push
mov
ss
rcl
mov
cs
pop
mov
add
push
movs
jo
xor
aam
xor
mov
dec
inc
push
and
mov
mov
adc
aad
cmp
aas
or
loope
mov
or
add
test
jbe
loopne
rcl
sub
sbb
jp
or
push
mov
movs
adc
push
dec
lods
mov
leave
sbb
mov
add
mov
pop
jo
push
cwde
jp
add
jnp
mov
cs
mov
repz
sbb
xchg
mov
or
xchg
lods
inc
adc
sar
leave
iret
sub
inc
inc
push
mov
or
jns
push
or
adc
and
sti
pusha
and
xor
cdq
add
adc
jg
xor
and
sbb
cmp
cmp
inc
ja
xchg
out
push
cmp
jmp
jmp
pop
push
inc
pop
hlt
cld
sahf
cmp
shr
and
in
pop
cmp
push
or
leave
and
ffreep
idiv
stc
cmp
les
cmp
adc
das
add
mov
xor
fwait
mov
adc
push
sbb
fst
div
pop
adc
in
test
imul
pop
(bad)
jg
popf
jge
jne
imul
push
mov
sbb
push
or
mov
inc
pop
mov
mov
mov
inc
call
loope
repnz
outs
pop
ins
mov
jmp
jmp
imul
dec
jg
mov
daa
mov
mov
jmp
ror
(bad)
sahf
scas
xor
xchg
jb
sub
loop
jl
inc
lea
(bad)
fnsave
push
mov
sub
sbb
fadd
jno
mov
sbb
int3
(bad)
cmp
jg
scas
pop
or
jge
jae
call
or
pop
cmp
adc
ins
js
cmp
inc
push
out
xchg
dec
(bad)
(bad)
xchg
jl
jmp
aad
sub
or
aam
test
push
inc
cs
mov
dec
sbb
and
dec
imul
adc
out
retf
jmp
mov
int3
add
sub
out
cmp
jne
(bad)
cmp
call
jl
sub
ret
jnp
fidiv
add
push
jge
xor
cmp
mov
shl
fwait
inc
fistp
cmp
daa
add
sub
pop
scas
add
imul
sbb
sub
enter
or
inc
ss
pop
(bad)
push
sar
sub
push
mov
jne
jbe
sbb
dec
push
add
adc
sub
sub
push
std
inc
jmp
jns
mov
mov
cmp
je
push
(bad)
pop
pop
das
mov
je
outs
jmp
add
pop
mov
mov
rol
loope
inc
add
jmp
xor
aam
shl
xchg
dec
stos
add
or
mov
push
or
gs
lods
pop
fwait
ret
test
push
clc
pop
mov
push
adc
add
pop
jne
mov
sbb
or
and
xchg
inc
sbb
enter
loope
adc
push
(bad)
mov
rcl
test
mov
inc
push
mov
aaa
mov
adc
mov
mov
xor
cmp
push
inc
mov
inc
xchg
xchg
xchg
aam
mov
rcr
jnp
xor
les
loop
cmc
and
mov
add
push
das
jne
add
retf
push
or
adc
xchg
mov
int
dec
inc
leave
lea
pop
sbb
mov
add
add
xchg
xor
or
jne
in
sbb
(bad)
mov
sbb
jne
sub
add
mov
jne
push
fdivr
js
inc
repnz
dec
mov
(bad)
dec
inc
dec
push
cmp
adc
sub
fcom
jb
mov
arpl
ja
pop
ret
or
outs
adc
jl
dec
nop
mov
and
test
or
jno
adc
or
adc
cmp
jge
aam
test
push
mov
add
mov
pop
inc
dec
push
daa
nop
inc
cmp
ds
cmp
pushf
arpl
or
or
sub
mov
jo
ss
mov
xchg
ds
jl
add
mov
sti
in
push
imul
and
into
xchg
and
jne
add
cmp
mov
push
or
dec
mov
xor
mov
and
je
mov
mov
stos
sub
adc
mov
add
sbb
or
shl
xor
and
and
sbb
adc
pop
push
sbb
stos
mov
and
test
mov
or
fs
mov
sar
adc
sbb
sub
mov
mov
sub
mov
mov
sbb
aam
add
mov
mov
cmp
xchg
add
in
clc
int3
and
cmp
push
bound
cld
push
push
xchg
test
xchg
lds
adc
push
arpl
mov
push
add
add
outs
push
add
or
add
imul
push
push
push
sbb
shr
shr
mov
outs
mov
pop
mov
push
cld
fwait
jp
int3
mov
sub
nop
pop
sub
xchg
mov
push
add
mov
cmp
je
sub
cmp
adc
push
push
inc
mov
jmp
adc
push
cmp
sbb
std
dec
pop
push
jb
cmp
mov
sbb
mov
repz
mov
inc
cmp
push
inc
stos
scas
ror
add
int3
jl
div
mov
mov
add
hlt
pusha
stc
sar
call
lea
sub
and
cmp
sahf
xchg
and
adc
push
mov
and
loope
mov
lock
add
jge
add
out
ins
mov
mov
cmp
cmp
or
mov
add
mov
loopne
xor
push
push
or
add
mov
mov
(bad)
mov
cmp
in
cdq
or
cwde
or
pop
add
pop
inc
dec
in
popa
xchg
fld
push
movs
adc
push
and
shl
xchg
rol
lock
push
mov
dec
jl
outs
mov
lods
or
dec
sub
cmp
add
lock
loop
push
lds
clc
inc
mov
push
rcr
mul
and
sbb
jg
cmp
addr16
jbe
add
push
or
sbb
pop
jo
or
mov
jle
inc
inc
or
(bad)
mov
(bad)
lock
xchg
movs
cs
jae
push
mov
fwait
and
jge
inc
sbb
xchg
and
addr16
sahf
inc
popa
addr16
add
adc
adc
lock
out
hlt
and
inc
add
jge
and
xlat
and
stc
jo
sbb
idiv
inc
add
pop
sar
dec
out
leave
aaa
or
xchg
mov
mov
mov
pusha
xchg
ret
xchg
mov
mov
jo
pop
push
dec
inc
cld
scas
and
sbb
add
dec
pop
rol
mov
push
or
cmp
ins
fs
cmp
bound
pop
cmp
movs
dec
loopne
mov
add
pop
sub
jmp
aad
pushf
sbb
mov
adc
or
and
loop
and
jmp
cmp
mov
movs
lock
xchg
add
in
mov
xchg
pop
or
jge
fmul
jmp
add
nop
xchg
je
pop
push
lea
ror
xor
mov
add
hlt
push
dec
je
inc
bound
gs
adc
loope
ds
cli
sbb
mov
add
add
scas
mov
push
inc
push
and
loop
xchg
retf
stos
test
jmp
push
fadd
mov
aam
jne
mov
cld
cmp
dec
cmp
mov
test
sbb
fisubr
add
sbb
or
or
je
test
mov
xchg
jnp
imul
cli
icebp
retf
mov
aaa
ret
jbe
daa
mov
push
(bad)
shr
and
mov
or
mov
adc
sub
mov
or
mov
or
mov
dec
push
inc
xchg
push
xchg
add
inc
pop
jo
sbb
mov
mov
mov
sbb
push
mov
cs
scas
retf
push
adc
sub
and
mov
lock
int3
movs
jge
adc
add
cs
add
add
xchg
movs
shr
in
int
adc
sbb
xor
push
popa
xor
pop
les
push
test
sbb
pop
(bad)
call
icebp
stos
cmp
pop
xchg
dec
jns
or
popa
jmp
cmp
xchg
inc
xchg
dec
push
leave
aad
add
lock
lea
pushf
ins
xchg
or
cmp
or
sbb
les
dec
sbb
inc
xor
inc
js
jmp
call
in
loopne
div
adc
lea
sbb
out
dec
fdiv
rol
mov
adc
lea
inc
add
int
sub
enter
mov
shr
popa
xchg
sti
jmp
movs
movs
inc
pop
in
xchg
rol
push
and
and
push
rol
repz
sbb
lods
fs
push
pop
add
add
fcmovnbe
js
pop
ins
sbb
outs
dec
(bad)
pusha
popa
cwde
test
and
setle
bound
dec
mov
arpl
(bad)
mov
jo
rcr
loope
mov
push
test
aaa
fsincos
jne
lea
cmp
push
mov
fwait
mov
(bad)
inc
inc
shl
push
push
adc
arpl
or
pop
shr
sub
add
and
jnp
sub
test
mov
inc
sbb
fwait
or
dec
or
(bad)
leave
jmp
inc
movs
mov
repnz
xor
test
jne
push
mov
adc
and
pop
push
and
pop
push
fcmovb
mov
or
int
push
sub
scas
shr
sbb
dec
and
or
fmul
xchg
push
push
mov
and
test
push
gs
and
icebp
mov
mov
out
push
adc
jge
sub
xlat
shl
jmp
aad
mov
cli
xchg
je
(bad)
aad
pop
and
pop
inc
dec
iret
test
dec
and
xor
dec
push
cmp
arpl
sub
nop
inc
push
cmp
add
mov
and
inc
fs
popf
rol
scas
xor
mov
bound
cmp
mov
mov
(bad)
movs
mov
je
mov
xchg
cmp
pop
inc
push
scas
cmp
cmp
xor
sbb
popa
sub
xchg
pop
sub
out
pop
xchg
pop
test
std
cmp
pushf
mov
xchg
or
and
cmp
mov
jnp
dec
pop
push
xor
jb
and
jne
cmp
fiadd
and
adc
(bad)
adc
mov
mov
jmp
pushf
sbb
sbb
(bad)
lods
add
pop
movs
lods
push
dec
aam
xor
inc
rol
in
rcr
jmp
adc
dec
push
jecxz
jnp
or
mov
es
push
inc
loope
pop
jbe
aas
or
jle
pop
jne
mov
add
cmp
stos
push
inc
push
sti
mov
adc
push
adc
movs
imul
in
jb
inc
lock
dec
jae
pop
aas
or
mov
or
daa
ffree
sub
mov
les
mov
add
dec
fldenv
daa
or
mov
or
cdq
sub
jecxz
jmp
je
scas
test
cmp
icebp
cs
and
mov
rol
lods
loopne
mov
sub
je
test
lea
test
and
sub
rol
pop
mov
add
lea
es
dec
sub
or
das
iret
xor
shr
outs
cmp
mov
xchg
mov
ds
or
dec
sub
xor
int3
adc
mov
xor
rcr
jae
add
daa
jmp
mov
mov
pop
ins
adc
into
push
push
mov
pop
pop
lea
and
fisub
loopne
mov
dec
mov
lea
lods
xor
sbb
and
ror
pop
aam
fisub
cmp
or
inc
push
popa
or
or
jns
cs
cmp
sbb
or
(bad)
pushf
cmp
mov
adc
iret
imul
call
pop
dec
or
into
test
ins
pop
push
jo
fwait
leave
push
jecxz
cwde
add
or
les
xor
mov
inc
xchg
add
lods
mov
rcl
aas
je
je
push
cmp
pushf
enter
and
fs
ins
fimul
push
enter
aaa
lods
inc
push
in
mov
sbb
cdq
in
jne
push
fdivr
cmc
test
outs
sbb
inc
push
pop
xor
ds
lea
mov
adc
adc
hlt
into
push
pop
cmp
loope
mov
fcmovb
leave
dec
scas
ins
adc
inc
sahf
inc
stos
pop
rcl
outs
add
push
mov
in
mov
fstp
or
pushf
int
pop
cmps
es
fnstsw
xadd
daa
(bad)
inc
cmp
or
sti
ss
out
out
sbb
ret
cmp
adc
imul
push
call
push
adc
test
jmp
or
jb
sbb
and
push
es
pusha
jns
ror
and
mov
mov
movs
loopne
cwde
cwde
lahf
dec
push
pop
js
adc
clc
fistp
xchg
sbb
jns
cmc
cli
retf
clc
ins
sbb
push
leave
(bad)
sbb
jo
push
sub
ins
fsub
sbb
adc
jge
sub
jl
add
push
pop
test
push
and
addr16
push
sub
push
cs
cmp
xor
es
js
cmp
cmp
pop
mov
stc
push
push
int
adc
push
gs
into
sub
pusha
xchg
and
retf
push
pop
or
int3
pop
or
or
mov
push
push
daa
push
bsr
sbb
push
fmul
mov
add
test
xor
xor
cmp
mov
pusha
vmwrite
add
xchg
mov
daa
mov
adc
test
mov
xor
mov
shr
in
and
pusha
into
sub
sub
jne
xchg
movs
in
push
lock
mov
and
and
ins
inc
push
dec
sbb
scas
jge
mov
xchg
int3
in
or
and
mov
or
jmp
mov
and
mov
mov
ret
dec
(bad)
adc
and
dec
or
in
sbb
sbb
ds
lods
fstp
push
add
pop
adc
ja
dec
adc
and
fwait
sahf
sub
mov
add
pusha
add
ins
mov
pop
lods
or
push
sbb
jo
push
jmp
push
pop
adc
loopne
mov
add
sub
fs
adc
inc
push
fsin
rol
sbb
xchg
sbb
or
inc
nop
and
pop
lds
or
xchg
lods
inc
xor
and
jecxz
xchg
(bad)
jmp
dec
hlt
and
push
xor
sbb
and
enter
mov
push
fcmovne
inc
or
inc
adc
inc
or
jne
sub
mov
sbb
mov
sub
out
ss
stc
fwait
mov
jmp
ss
jmp
in
mov
sbb
cmp
pop
push
outs
jne
push
xor
sbb
pop
fcmovu
imul
push
jo
pop
cli
call
xchg
imul
dec
fs
sbb
and
js
cmp
in
push
sub
mov
shr
xor
movs
push
and
sbb
mov
xchg
mov
push
add
and
xchg
je
popa
add
fimul
push
jge
in
stos
call
dec
cdq
hlt
or
adc
push
push
adc
movs
aaa
dec
retf
xchg
(bad)
ficomp
or
mov
loopne
jmp
dec
sysenter
div
push
sahf
adc
or
push
adc
cmp
pop
fild
cmp
jnp
push
nop
js
adc
or
add
mov
fcomp
mov
jp
dec
mov
or
and
dec
sub
test
lahf
ret
push
pop
mov
imul
and
in
pop
pop
ret
test
or
mov
nop
gs
add
scas
(bad)
cli
mov
jb
xlat
inc
cmp
popf
sar
xor
(bad)
push
addr16
jl
xchg
loope
out
imul
mov
scas
xchg
mov
test
dec
mov
or
push
xchg
sbb
mov
adc
jle
dec
sbb
push
mov
aad
inc
and
hlt
or
sbb
cmp
sbb
pop
jp
adc
sub
sub
sbb
or
icebp
dec
cmp
into
ret
popa
jge
adc
stc
fld
pop
enter
and
xchg
ss
je
push
xchg
shl
and
movs
shl
shl
pusha
test
movntq
xchg
hlt
(bad)
push
or
out
inc
adc
popa
jmp
out
add
bnd
push
add
sti
fistp
jns
adc
inc
out
push
cmps
push
jl
jbe
cmp
add
xor
pop
cmp
mov
add
dec
in
hlt
popa
add
dec
ret
and
and
mov
inc
enter
xchg
dec
jle
sbb
sbb
xchg
jne
xchg
retf
(bad)
das
xor
dec
push
add
inc
rcr
pop
mov
sbb
jl
push
ins
xor
retf
and
push
dec
xor
dec
es
sbb
ins
lods
or
aam
aam
pop
in
sbb
and
pop
inc
xchg
or
and
mov
test
adc
push
inc
xchg
add
icebp
adc
mov
mov
dec
or
bound
pop
jne
jnp
and
scas
xadd
shl
mov
mov
imul
pop
ret
sub
adc
sub
and
sub
xchg
(bad)
pusha
lea
push
ds
ins
mov
cmp
mov
pop
cmp
mov
or
and
cmc
outs
fist
sub
addr16
push
sbb
mov
mov
mov
fadd
mov
inc
cld
inc
mov
or
mov
mov
jbe
push
shr
pop
mov
pop
sbb
popa
and
rcr
or
add
es
fsubr
in
inc
mov
in
pop
push
dec
jge
outs
add
sub
imul
aaa
hlt
sub
test
dec
and
cmc
adc
add
in
adc
scas
sti
fbstp
popa
aam
jnp
test
fisubr
das
inc
loopne
sahf
jmp
inc
cmp
xor
add
xchg
sub
mov
mov
dec
sub
in
ret
out
sbb
mov
cmp
test
dec
push
xchg
js
lock
dec
xor
ss
fdiv
push
outs
cmp
push
into
cs
pop
mov
inc
ins
imul
jge
lods
movzx
enter
or
push
jne
xor
jo
int3
sbb
and
stos
lods
adc
xor
imul
ret
sbb
out
add
jg
call
test
and
mov
push
pop
xchg
mov
mov
xor
ds
pop
sub
mov
leave
mov
and
adc
loop
mov
ret
mov
adc
out
das
(bad)
push
cmps
mov
test
jae
push
or
add
adc
dec
mov
ins
fmul
jne
jne
out
jmp
dec
and
push
pop
sbb
xor
add
xlat
push
mov
push
les
lock
pop
dec
or
mov
pop
jge
and
mov
cmp
push
gs
lods
push
dec
bound
popa
push
movs
cmp
lods
es
cmc
stos
fwait
and
loopne
in
mov
mov
shl
xor
add
xor
pop
sahf
pop
arpl
cwde
add
mov
xchg
xchg
shl
sar
mov
dec
and
les
adc
pusha
cmp
or
sub
scas
add
and
stos
fcmovnb
push
cmp
pop
dec
add
(bad)
int
pop
xchg
sub
adc
push
add
sbb
fmul
pop
or
mov
cmp
push
mov
out
cmp
push
mov
cdq
test
inc
mov
mov
add
dec
ficomp
push
push
xor
jo
aam
jl
in
or
push
test
sub
scas
in
adc
xor
add
pop
and
mov
mov
add
push
stos
mov
movs
daa
cli
or
popa
push
in
mov
inc
xor
and
push
or
jae
mov
and
fstp
ficom
mov
ds
jl
jb
pop
pop
pop
jo
add
xchg
shl
sub
dec
dec
call
inc
mov
jb
xchg
sub
mov
jo
les
icebp
sub
leave
leave
jno
and
add
pop
and
inc
cmp
add
push
(bad)
push
push
jne
mov
push
not
mov
in
sbb
fwait
dec
pop
inc
jno
pop
push
lea
pop
cmp
sbb
cld
shl
cmp
jl
das
xor
pusha
xchg
push
jne
ret
dec
push
mov
pop
and
and
push
call
xor
add
ja
xor
fist
add
(bad)
mov
and
(bad)
(bad)
inc
retf
loop
inc
push
test
xchg
retf
sub
ror
scas
add
jl
pcmpeqw
outs
and
adc
fucomip
inc
(bad)
xor
into
pop
pop
cs
add
daa
outs
push
inc
push
ins
mov
pushf
sbb
js
sti
sbb
add
inc
popf
pop
arpl
push
mov
mov
adc
inc
pop
add
sub
adc
dec
sub
pop
sbb
cmps
test
test
mov
retf
push
inc
adc
addr16
xor
or
pop
sbb
syscall
jl
xchg
dec
adc
push
xor
scas
mov
add
mov
add
push
sti
jle
sbb
sub
sahf
out
shl
in
xor
daa
add
adc
inc
and
adc
out
daa
push
aas
adc
fisttp
arpl
cmp
les
rol
fdiv
loopne
bound
add
mov
push
(bad)
rcr
in
mov
jns
add
daa
adc
inc
or
je
mov
jge
push
sub
sar
add
sbb
je
sub
jb
cs
les
bound
test
cdq
or
or
push
xchg
mov
bound
inc
out
dec
ins
dec
sub
cmp
xchg
push
out
pop
push
test
bound
xlat
pop
cmp
mov
test
ja
ins
stc
jne
imul
nop
xchg
dec
shl
shl
lahf
sub
adc
lahf
mov
cmp
mov
clc
xor
mov
ja
mov
dec
loop
in
adc
jb
and
daa
adc
xchg
pop
cmp
adc
jno
pop
pop
push
(bad)
popf
addr16
mov
xchg
out
lods
sbb
jo
pusha
sub
pop
pop
ret
mov
int
mov
mov
jne
add
stos
or
ins
mov
push
and
sbb
or
mov
jmp
jae
push
in
sbb
push
jb
push
inc
mov
fist
or
mov
mov
dec
adc
adc
es
or
mov
enter
daa
mov
adc
aad
xor
pop
les
scas
ret
in
es
mov
pop
sbb
and
pop
cmps
movs
pop
mov
sbb
mov
clc
xchg
mov
adc
xchg
ret
(bad)
adc
pop
inc
jne
xchg
add
push
xchg
stc
sub
invd
jmp
and
aam
add
mov
jmp
xchg
lea
ds
or
call
adc
and
rcr
sbb
or
jae
push
out
popa
fadd
fcomp
ja
mov
cmp
clc
xor
cli
cmp
jmp
in
xlat
mov
mov
ret
add
jg
sbb
sbb
or
push
and
push
jne
int
inc
cli
adc
adc
out
cdq
push
ins
sub
mov
mov
or
outs
imul
neg
adc
icebp
adc
or
ror
dec
(bad)
and
or
mov
and
mov
adc
pusha
mov
or
(bad)
mov
movs
xor
icebp
add
inc
xchg
mov
cmps
ins
adc
loope
mov
inc
dec
push
push
retf
mov
dec
into
cmp
ins
nop
and
xor
sub
and
or
and
pop
retf
and
sbb
pop
pop
push
or
xchg
pop
push
dec
inc
or
xchg
outs
dec
add
xor
stos
adc
dec
sbb
pop
test
mov
sar
cmp
jl
mov
and
xchg
inc
xchg
repnz
jmp
adc
imul
not
add
jg
pop
mov
xor
xchg
aam
mov
add
dec
jne
cmp
push
pop
pop
xchg
inc
cmp
add
clc
mov
add
(bad)
outs
and
push
and
imul
dec
dec
repz
outs
or
pop
loope
mov
inc
sbb
sbb
fadd
movs
inc
add
sti
clc
(bad)
or
mov
or
sbb
je
not
das
and
inc
mov
inc
rcl
(bad)
cmp
(bad)
jge
sbb
cmp
ret
pop
and
xor
pop
and
pusha
fstp
sub
dec
inc
xor
fisub
jo
mov
adc
cmp
les
push
push
nop
pop
ins
loopne
sub
add
sbb
sub
add
push
jne
push
adc
push
scas
pop
cmp
add
cmp
jmp
and
adc
sub
sar
mov
fisttp
xchg
add
pop
adc
ret
dec
mov
fadd
sbb
cmp
and
stc
mov
cmp
jne
ja
add
mov
movaps
test
xchg
imul
arpl
or
jo
out
cdq
dec
mov
xchg
jge
add
inc
adc
movs
fwait
sub
sub
sbb
pushf
xchg
data16
fxrstor
inc
push
sub
adc
or
sbb
data16
test
hlt
and
jbe
rcl
add
or
mov
mov
add
adc
push
push
fnstenv
cmps
lods
jnp
mov
lods
das
in
jmp
clc
lds
add
inc
out
mov
lahf
xor
inc
and
and
sbb
popf
vmread
sbb
mov
lock
or
sub
mov
or
xchg
sub
mov
fld
xchg
rol
stos
in
jne
lods
add
sub
sub
or
pop
adc
nop
jg
inc
ja
xor
dec
xor
cmp
cmps
push
jg
dec
ret
jae
into
or
add
dec
jmp
and
enter
lds
cmp
movs
cdq
sub
adc
push
imul
hlt
jb
dec
pop
inc
xor
add
add
add
outs
sahf
mov
gs
pop
adc
adc
aam
in
pop
cdq
add
sub
sbb
jl
popa
test
fbstp
inc
push
pop
xor
sub
sub
jne
sahf
retf
fdivp
add
sti
or
shl
add
mov
in
stc
or
sbb
push
call
jl
cs
jb
and
mov
imul
sbb
add
or
test
ins
add
out
inc
ret
xchg
fcomp
inc
fbstp
push
xor
jbe
push
and
in
mov
xchg
fs
sub
jnp
pop
mov
cwde
push
inc
ret
inc
inc
add
(bad)
pop
pop
in
xor
test
(bad)
mov
leave
pop
pop
dec
mov
mov
jne
push
cmp
arpl
xlat
popa
loop
test
dec
xchg
mov
xor
nop
stos
cmp
or
xor
idiv
hlt
add
dec
sub
add
adc
imul
test
and
cmp
(bad)
fimul
add
js
mov
pop
mov
aaa
and
call
addr16
test
cmp
scas
sbb
cmp
inc
mov
in
int3
shr
push
and
aad
pop
adc
add
in
out
sbb
popa
bnd
xchg
mov
xor
and
jle
and
jecxz
loopne
push
call
inc
icebp
dec
inc
pusha
add
cmp
mov
aam
pushf
xor
lea
xor
add
dec
dec
adc
pop
es
push
mov
in
dec
xchg
js
inc
mov
es
inc
push
aaa
dec
mov
sahf
daa
xchg
jo
xor
mov
ins
adc
pop
jp
and
dec
rcl
mov
dec
aad
pop
or
mov
sbb
add
pusha
fmul
lods
jl
push
mov
fcomp
or
pop
cmp
std
cmp
fs
dec
xor
mov
xchg
enter
add
adc
fsub
rol
dec
(bad)
sub
int
pop
xchg
inc
push
inc
call
test
cmp
cdq
add
aam
sub
jbe
dec
inc
inc
rcl
add
and
add
fistp
sub
push
dec
fidiv
xchg
loop
push
test
fwait
mov
movs
add
and
or
pushf
and
clc
repnz
push
pop
cmp
or
cwde
push
or
mov
ins
sar
imul
inc
adc
mov
je
or
cs
dec
xor
or
inc
ins
test
and
movs
adc
push
and
fincstp
inc
cmp
ret
jbe
pushf
adc
dec
dec
add
int3
cwde
dec
shr
inc
int
dec
pop
sub
(bad)
adc
pusha
dec
jno
add
shl
es
mov
stos
xchg
scas
pop
fisubr
js
push
push
jmp
fwait
rcr
enter
dec
xchg
add
jb
scas
inc
cmp
push
pop
cmp
cmps
and
sbb
cmp
mov
xor
jb
or
cmp
cs
adc
xchg
(bad)
sub
sub
and
shl
sub
xor
xchg
dec
xor
retf
add
mov
je
pop
mov
call
jo
enter
push
push
fwait
xchg
pop
push
enter
test
push
xchg
or
add
push
push
jp
sbb
mov
xor
ror
add
pop
pop
cmps
loope
mov
xlat
or
sub
mov
inc
jnp
xor
sbb
cmp
sbb
scas
fsubr
daa
push
pop
(bad)
pushf
add
adc
int
call
add
leave
adc
bound
push
js
int3
xchg
je
push
dec
daa
es
fs
adc
retf
stos
ret
add
cmp
xor
movs
popa
dec
jg
in
cmp
fld
inc
je
add
ins
push
inc
popa
pusha
test
sar
out
mov
push
es
popa
add
cmp
sub
mov
and
cld
rol
add
movs
loop
cdq
cmp
jo
push
sar
(bad)
jbe
rcl
and
inc
add
sub
cmp
adc
or
std
std
test
fidivr
adc
jl
inc
les
mov
and
test
and
cld
pop
mov
adc
or
mov
cmps
and
fst
dec
rcr
movs
addr16
pusha
add
in
pop
cmp
push
leave
leave
push
mov
clc
test
dec
xchg
in
jo
push
sub
push
dec
inc
mov
inc
enter
pop
and
pop
arpl
pop
or
pop
jb
or
and
outs
mov
adc
dec
femms
(bad)
int
mov
inc
(bad)
nop
or
sub
mov
stos
out
sub
(bad)
xor
jne
cld
sar
ror
pop
inc
cmp
and
cmp
sbb
mov
pop
frstor
in
or
cmps
push
sbb
stos
outs
push
(bad)
lods
and
in
jmp
add
test
cwde
add
mov
aaa
mov
pop
jp
add
enter
mov
(bad)
call
xor
pop
aam
out
sbb
push
adc
mov
mov
rcr
sysexit
and
add
sti
je
aaa
mov
jne
mov
ret
(bad)
out
and
jns
add
pop
cld
sbb
add
cwde
cmp
xor
xchg
iret
inc
sbb
mov
push
je
pushf
test
xchg
jl
out
pop
nop
xchg
or
mov
jne
push
pusha
dec
jne
push
push
sbb
das
cmps
in
lods
rol
push
add
cmp
xor
and
data16
xchg
frndint
mov
and
push
je
idiv
xchg
icebp
adc
pop
add
add
or
pop
or
cdq
xchg
add
stos
ja
pop
sbb
fisttp
or
mov
or
pop
lds
dec
xor
out
mov
pop
aas
push
xchg
mov
cmp
sbb
cdq
jnp
xchg
pop
xchg
leave
lock
cmc
fdivr
jle
dec
clc
popa
cmp
daa
pusha
pop
cmp
push
add
js
mov
pop
xchg
dec
es
adc
add
add
xchg
cmp
push
pop
sub
bnd
jl
mov
sub
das
and
cmp
jmp
daa
mov
pop
mov
add
std
test
xor
ja
mov
push
jb
cli
inc
lea
stos
loop
dec
push
cmps
aam
fadd
and
xchg
and
add
cmp
es
repz
sub
mov
mov
push
daa
mov
rol
jnp
dec
pop
or
fs
and
int3
or
aaa
pop
(bad)
in
push
mov
hlt
sub
push
or
mov
push
xor
xor
leave
xchg
dec
inc
int3
or
jns
mov
aaa
int3
adc
add
ins
ror
push
add
push
xlat
jns
add
inc
in
add
xchg
dec
or
and
loopne
add
mov
push
dec
pop
movs
and
xchg
dec
or
jb
sub
shl
shl
sbb
add
imul
into
cmps
(bad)
fnsave
push
jle
or
add
cld
leave
fsub
cdq
fisubr
push
push
mov
imul
add
push
outs
or
jge
jle
les
pop
pop
dec
and
dec
cld
dec
add
sub
aad
add
test
adc
les
xor
sub
movs
aas
mov
mov
or
imul
mov
jb
adc
xor
mov
inc
int3
jae
add
inc
je
cmps
jae
clc
sbb
jge
push
xor
xor
ror
sbb
rol
adc
jge
xchg
inc
jne
mov
jmp
push
xchg
jne
adc
rcl
fst
mov
sub
push
in
mov
scas
sub
adc
rep
sub
popa
and
test
mov
add
push
and
or
dec
in
pop
sbb
adc
adc
daa
push
cwde
bound
sbb
sub
cs
sbb
mov
mov
lea
dec
(bad)
mov
dec
mov
adc
mov
loop
add
and
push
movs
xchg
and
fcomp
or
mov
push
push
adc
imul
sahf
cs
push
fwait
pop
lods
add
add
out
mov
pushf
dec
mov
cmp
mov
add
push
jle
ror
mov
movs
adc
stos
mov
cmc
add
pushf
lods
and
cs
aam
gs
cmp
or
call
sbb
adc
rcl
mov
cwde
cmc
or
ins
mov
or
xor
pop
fisttp
movs
int3
xor
xchg
dec
dec
cmp
shl
test
fcom
js
xor
mov
sbb
and
xchg
(bad)
(bad)
and
nop
inc
xchg
pop
test
in
pop
jge
jo
sbb
jns
mov
mov
xor
ret
arpl
xor
mov
sub
fild
dec
aaa
cmp
pushf
cmp
mov
(bad)
dec
jne
push
mov
inc
adc
(bad)
fnstsw
sbb
loopne
xor
pop
loopne
icebp
adc
lea
ss
jae
and
mov
(bad)
mov
arpl
mov
shr
arpl
or
in
and
je
add
out
jmp
aam
and
or
jbe
ror
dec
dec
sub
inc
int3
lods
xchg
(bad)
je
cmp
je
mov
rcr
push
or
fstp
jp
fnsetpm(287
(bad)
mov
and
jmp
sub
xor
sub
ror
scas
jo
jb
dec
dec
jbe
stos
push
jp
push
push
rol
add
das
mov
hlt
ds
cmp
sub
shl
adc
sbb
mov
jmp
out
test
inc
ror
inc
push
push
push
sbb
je
push
fwait
daa
jmp
je
loope
push
ss
ss
in
retf
push
push
fidivr
adc
add
in
mov
(bad)
pop
popa
and
mov
cmp
push
add
mov
arpl
in
pop
pushf
in
ror
sbb
call
(bad)
int
xor
cdq
pushf
inc
sbb
dec
and
sahf
push
(bad)
xor
clc
shl
pop
or
inc
or
inc
jmp
pop
and
ret
add
mov
and
mov
gs
mov
js
mov
inc
ins
mov
cmp
inc
pop
xor
push
xor
shl
clc
push
push
pop
mov
jg
inc
lock
mov
adc
jo
inc
inc
xlat
enter
inc
jecxz
cmps
mov
add
(bad)
sbb
jo
and
loopne
dec
mov
out
lahf
inc
fadd
repz
mov
cmc
icebp
inc
pop
sub
dec
xchg
mov
push
pop
clc
push
push
es
add
and
dec
popf
jbe
inc
in
lds
ret
dec
repz
aam
dec
cmp
cmc
pop
lea
pusha
rcr
movs
cld
ficom
iret
retf
or
pop
inc
mov
mov
imul
dec
stc
dec
sub
jo
jge
cmc
jo
dec
out
inc
mov
sub
adc
dec
mov
mov
and
push
stos
call
add
xlat
push
xor
clc
and
dec
shl
add
cmp
cmp
lock
jg
dec
movs
js
push
rol
and
and
fcom
mov
add
rcl
mov
and
dec
jo
or
add
or
inc
push
scas
or
add
or
sbb
sbb
and
push
loope
mov
jge
xchg
and
sbb
adc
test
and
fmul
ret
mov
add
push
xchg
cmp
mov
xchg
rcl
sbb
fadd
fild
loop
sub
jmp
sbb
and
lods
dec
jbe
add
mov
sub
adc
(bad)
mov
cmp
(bad)
iret
xor
push
mov
xor
jne
cmps
movs
loopne
dec
repnz
shl
bound
jo
in
lods
xor
sub
inc
mov
jmp
ins
popf
xchg
sub
inc
(bad)
imul
scas
sbb
or
jl
lock
retw
lahf
das
pop
add
jl
mov
inc
mov
and
mov
cld
adc
nop
imul
inc
push
outs
xchg
inc
enter
or
push
push
xchg
mov
iret
cs
das
push
aam
or
lahf
in
or
mov
ror
inc
jg
mov
je
jle
test
add
push
push
sub
icebp
lds
call
adc
aaa
ret
sbb
int3
adc
sub
scas
adc
add
mov
pop
fild
adc
sbb
in
add
mov
jl
push
dec
ret
cdq
mov
mov
jno
(bad)
pop
inc
xor
sub
jg
cmps
push
ret
addr16
mov
das
aam
mov
mov
ret
inc
jl
pusha
cmp
mov
rcl
call
and
retf
xchg
retf
jae
cmps
mov
ret
in
add
add
inc
mov
push
inc
jmp
xlat
shr
dec
cmp
adc
pushf
dec
test
mov
imul
add
test
sbb
test
bound
lahf
inc
test
ins
jnp
cmps
loope
dec
pop
pop
arpl
ret
ror
jecxz
push
xlat
retf
lock
push
fmul
cmp
in
outs
adc
(bad)
shl
sbb
adc
outs
sub
(bad)
adc
push
pop
cdq
cmp
popa
aam
add
jg
xchg
jae
push
arpl
xchg
sub
daa
ss
jmp
(bad)
pop
les
xchg
aas
lods
jmp
xor
jmp
cmp
jl
cmp
mov
stos
add
mov
mov
shl
movs
out
mov
rcl
enter
sub
bnd
pusha
pusha
and
push
or
xchg
push
popf
sub
pop
shl
cmp
sbb
add
fisttp
jbe
xor
add
push
push
sub
jo
or
pop
sbb
mov
pop
add
in
mov
mov
jge
test
dec
mov
mov
inc
push
movs
inc
jae
popa
add
(bad)
repz
(bad)
rcr
scas
adc
jl
outs
pop
test
jmp
test
xchg
jne
jns
(bad)
lds
adc
jl
ins
dec
popa
in
jbe
jge
add
test
je
cmc
push
pop
mov
and
pop
adc
mov
and
int3
push
cmp
and
cmp
pop
ror
dec
sahf
mov
aam
push
fsub
dec
(bad)
in
adc
add
push
dec
add
aas
imul
in
movs
sbb
cmp
mov
cmp
jbe
nop
and
or
lods
push
push
retf
std
mov
int
mov
sbb
inc
mov
pop
dec
inc
sub
rol
sub
sub
cmp
inc
add
xlat
lock
xchg
push
sub
jb
add
add
in
ret
clc
mov
fisttp
unpcklps
movs
push
cdq
mov
xchg
cmp
cmp
jnp
nop
jl
jg
sbb
repnz
pop
xchg
ds
mul
xor
(bad)
fidiv
inc
sub
xor
nop
and
push
sahf
dec
fst
scas
sub
jne
jmp
loop
push
pop
adc
arpl
cmp
push
xor
jmp
or
or
adc
sub
call
add
dec
(bad)
retf
adc
test
dec
push
fist
mov
add
inc
sbb
dec
xchg
jo
inc
retf
adc
xor
out
ins
arpl
sub
sti
(bad)
cmc
jbe
fs
sbb
pop
imul
les
pop
popa
ss
pop
xchg
cwde
daa
lods
sar
sub
adc
inc
movs
ins
cmp
ror
push
int
push
sbb
sar
loopne
bound
jne
out
xor
adc
iret
mov
inc
pop
xor
pop
or
and
add
lods
fwait
cmp
call
jnp
pop
sub
jg
movs
lea
or
movs
fucomi
xchg
or
imul
mov
or
mov
repnz
sbb
in
add
fdivr
add
add
sub
sub
fld
sub
sbb
lea
jg
jmp
mov
stc
aas
or
push
mov
add
clc
fdivr
dec
pop
push
add
cdq
jbe
imul
call
pop
pop
out
es
mov
xchg
lods
mov
mov
sbb
jno
ret
lods
xchg
add
jns
adc
adc
or
inc
and
stc
adc
aas
add
movs
add
lods
mov
jmp
push
pop
cmc
jecxz
fild
cmp
or
ja
cdq
cmp
sbb
pusha
or
fbstp
cmc
ins
adc
xor
jle
lods
sub
add
pop
and
cdq
mov
and
(bad)
sbb
jno
test
hlt
cmp
add
sar
jg
mov
push
mov
iret
sbb
add
mov
inc
xchg
(bad)
ret
xor
js
sub
add
data16
sbb
jne
cmp
out
mov
dec
sahf
and
jne
sbb
push
je
addr16
or
les
shl
and
neg
cmp
and
and
in
(bad)
mov
cmp
(bad)
ja
push
pop
mov
test
mov
push
ficomp
inc
mov
mov
pop
mov
push
arpl
out
xchg
ins
and
mov
xlat
pop
or
adc
and
in
add
add
sub
fld
iret
push
xchg
xchg
pop
sti
dec
jecxz
push
and
(bad)
jmp
loop
adc
adc
retf
xchg
dec
push
dec
jmp
jbe
fbld
rcl
ror
cmp
hlt
fmul
xor
jb
ds
xchg
inc
cmps
inc
xchg
xchg
push
mov
pop
cmp
mov
fimul
int
push
call
pop
dec
loop
dec
outs
dec
or
or
pop
cmp
or
sbb
int
and
ja
loopne
adc
imul
lods
(bad)
and
pop
push
push
lock
cmp
cli
sbb
in
cmp
sub
add
leave
push
loopne
pop
or
adc
ror
add
mov
push
mov
and
xchg
fdiv
pop
rol
add
push
and
cld
or
xor
and
mov
push
popa
cs
push
xchg
in
rol
dec
sub
cmp
jp
jne
push
fisub
retf
in
xchg
sbb
retf
add
stos
inc
clc
adc
inc
mov
test
popa
pop
and
loop
call
sub
mov
test
rcr
jmp
and
push
add
mov
aaa
add
mov
push
lds
add
es
outs
ja
cmp
cdq
popf
xor
jbe
dec
pop
sbb
sbb
outs
sub
sti
mov
cmp
jne
iret
je
cmp
dec
sti
mov
mov
int
test
loopne
jmp
push
outs
mov
or
mov
retf
imul
mov
lods
adc
inc
push
lea
adc
or
xchg
and
dec
xor
push
fld
std
(bad)
les
push
aas
push
add
push
inc
inc
add
inc
nop
mov
test
adc
push
or
lods
or
mov
inc
mov
pop
pop
adc
mov
xchg
pop
movs
dec
inc
fisttp
dec
adc
cmps
adc
pop
pop
xor
mov
movs
dec
int3
dec
sbb
lock
add
sbb
in
ja
or
xlat
jecxz
pop
lds
mov
pushf
adc
mov
sub
mov
sbb
mov
in
repnz
pop
ret
pop
mov
rcl
sub
xchg
arpl
jne
mov
ins
daa
pop
push
inc
out
jmp
fmul
sub
(bad)
sbb
inc
cli
xor
xor
lods
xor
xchg
in
je
outs
push
sahf
cmp
and
jne
je
adc
or
mov
repz
add
jmp
jne
pop
xor
popa
pop
adc
pusha
mov
jae
popa
mov
cmp
add
sub
ret
add
xchg
jae
xor
pop
push
nop
das
dec
push
and
or
sub
push
push
or
ror
movs
adc
add
add
pop
push
or
mov
aad
sub
shl
cmc
add
xor
clc
daa
jne
xor
iret
dec
adc
sbb
dec
add
fsubr
and
cwde
sar
sti
sbb
cli
xchg
cwde
mov
add
cmp
pop
cmp
bound
sub
iret
adc
mov
mul
repz
(bad)
dec
call
inc
mov
test
jnp
mov
inc
jno
js
and
and
add
add
and
and
add
adc
add
fucom
sbb
xchg
adc
lea
sbb
mov
outs
retf
mov
push
rol
jl
push
sub
xchg
ret
popf
loopne
ror
int3
xchg
enter
or
mov
dec
and
pushf
pushf
in
pop
les
sbb
or
mov
add
or
loopne
adc
aam
push
fsubp
aas
pusha
adc
pop
or
outs
adc
mov
dec
ror
imul
mov
call
sub
pop
xor
push
fwait
xor
clc
cmp
ret
add
les
mov
lods
(bad)
(bad)
clc
mov
adc
add
mov
jl
sub
adc
ror
lahf
add
dec
jb
imul
sbb
out
lahf
xchg
dec
outs
sub
dec
arpl
push
shl
mov
mov
mov
inc
add
loopne
add
jg
push
in
out
dec
ja
adc
mov
and
adc
dec
scas
xor
jmp
cmp
pop
sbb
cmp
ins
loop
add
fs
cmp
iret
(bad)
fisttp
xor
xchg
lods
ret
fld
mov
retf
ins
push
aam
jg
or
cmp
in
popf
dec
push
ss
add
sbb
cmps
fwait
sbb
inc
or
addr16
adc
add
sub
push
add
dec
js
inc
pop
loope
js
cmp
clc
scas
mov
mov
jle
enter
push
dec
inc
mov
mov
xchg
mov
bound
mov
mov
adc
jg
mov
and
jge
mov
mov
nop
jmp
arpl
and
in
(bad)
in
mov
xchg
lea
mov
and
or
adc
rcl
into
push
loopne
pop
ins
mov
inc
shl
and
test
xchg
clc
inc
mov
dec
add
jo
jle
rcl
cdq
sbb
jp
xchg
movs
xchg
and
xchg
pop
push
in
mov
stc
jne
inc
mov
adc
mov
xor
mov
jmp
jns
jae
mov
or
xchg
call
sbb
shrd
inc
xorps
gs
mov
cmc
add
pop
sbb
dec
test
or
adc
cvttps2pi
ror
(bad)
movups
adc
push
repnz
cmp
jne
push
fbstp
push
in
aaa
ficomp
jmp
pop
pusha
xchg
sub
jo
sbb
xor
cmp
pop
mov
je
cmp
push
and
mov
adc
push
and
inc
out
push
mov
xchg
jno
cmp
mov
lods
dec
enter
push
jne
int3
(bad)
out
stos
call
dec
add
rcr
ss
stos
jae
or
add
dec
fcom
scas
test
xor
dec
inc
call
lahf
rep
push
ret
mov
cmc
and
adc
fiadd
or
in
mov
adc
ja
mov
daa
lea
scas
mov
retf
outs
cmp
call
cs
repz
rcr
pop
inc
rcr
shr
jge
dec
stos
add
fcomp
out
test
pop
adc
or
sub
xor
and
cmp
xlat
cli
jecxz
mov
mov
dec
jb
aam
int
nop
test
push
lods
mov
and
fwait
dec
or
pop
jbe
inc
or
cmp
mov
inc
div
push
xor
xor
jae
xor
or
addr16
loope
daa
stc
stc
scas
pop
fdiv
or
sub
and
sahf
xor
dec
push
lock
or
pop
rcr
cmp
mov
sub
sbb
jne
xchg
jb
stc
mov
push
mov
scas
enter
mov
mov
and
jns
mov
xor
jecxz
xchg
or
cmp
and
stc
mov
or
call
inc
call
push
(bad)
mov
sub
mov
ins
xlat
jne
jecxz
test
ja
or
cmp
inc
adc
nop
mul
or
mov
push
jne
(bad)
dec
add
(bad)
and
jne
add
sbb
sbb
mov
pop
enter
in
call
xchg
jbe
jp
int3
jno
mov
push
cmp
loope
loop
and
mov
lods
lock
push
dec
push
mov
pop
inc
jle
in
and
mov
repnz
sbb
xchg
add
push
cmp
cwde
shr
cmp
mov
xor
mov
xchg
jmp
in
adc
loop
mov
repz
test
fidiv
clc
repz
pop
jmp
xchg
fwait
cmps
mov
mov
or
cmps
ret
fstp
inc
or
jo
dec
scas
pop
(bad)
mov
(bad)
iret
lea
sub
dec
cdq
je
push
cmp
sbb
sbb
lods
test
dec
ror
adc
inc
movs
jge
je
push
xor
mov
xchg
fdivr
ins
sbb
pusha
loop
push
adc
or
cmp
leave
pop
xchg
pop
sub
dec
add
push
jg
xchg
pop
or
push
pushf
aas
fsub
adc
push
jl
lock
cs
pop
mov
int
pop
out
addr16
jbe
dec
sti
xchg
mov
pop
sbb
and
daa
loope
rcr
xchg
fsubr
xchg
call
push
adc
dec
fmulp
popf
mov
cmc
mov
lods
mov
ds
daa
pop
mov
cmp
sar
dec
aam
imul
js
in
call
adc
ins
xchg
je
pop
add
jbe
aas
scas
sub
inc
inc
shr
push
mov
adc
in
mov
push
rol
push
mov
icebp
dec
movs
mov
mov
jne
daa
enter
adc
jg
test
adc
call
ret
push
ss
adc
push
sbb
mov
adc
das
mov
int3
lea
fadd
rol
int
jp
sub
pop
aad
xchg
jg
test
nop
stos
in
mov
pop
push
and
cs
fsub
aas
lods
mov
into
or
push
enter
or
add
es
stos
mov
sub
jle
movs
sub
xor
add
cdq
dec
cmps
add
cmp
xor
dec
inc
and
xor
ds
mov
inc
jmp
loop
cmp
adc
(bad)
fist
std
ins
jmp
mov
mov
and
mov
sub
inc
sub
stc
pop
adc
push
data16
test
dec
test
rcr
pusha
iret
jne
sbb
shl
sbb
lea
ror
or
stos
xchg
pusha
xor
in
mov
sub
mov
add
add
inc
sub
cmc
add
mov
xor
das
loop
std
inc
inc
cmp
mov
mov
loop
push
mov
push
cwde
mov
jne
mov
cmp
ins
retf
push
mov
add
add
rol
das
lods
xor
mov
and
dec
ins
fstp
push
sbb
jp
sbb
jbe
mov
call
sub
sbb
mov
leave
adc
add
jecxz
jbe
push
or
sbb
mov
adc
sbb
cmp
sbb
aad
adc
test
rcpps
aaa
adc
add
into
mov
(bad)
sub
int3
mov
and
mov
clc
ret
sbb
imul
pop
mov
jl
jg
bound
xchg
jbe
dec
jb
cmp
fimul
adc
inc
inc
out
aad
scas
mov
fmul
and
jmp
xchg
jne
mov
shld
loope
aad
aam
popa
mov
pushw
adc
mov
dec
mov
add
jge
movs
pop
mov
aam
(bad)
aam
cmp
pop
or
cld
ins
adc
inc
fstp
add
pop
jb
cmp
cmp
dec
gs
xchg
cmp
dec
ret
jb
push
inc
pop
(bad)
(bad)
adc
movs
pop
aam
pop
and
inc
pop
push
pop
add
nop
iret
mov
sbb
jl
push
(bad)
and
adc
call
xor
push
xchg
stc
mov
jl
xor
(bad)
push
inc
and
test
or
stos
stos
icebp
sub
loop
fwait
dec
and
dec
xor
dec
fcmovb
dec
or
jp
or
out
adc
inc
dec
rcl
enter
mov
add
push
jl
add
in
fdiv
jne
lea
mov
pushf
pop
xor
jmp
test
test
fistp
mov
push
in
xchg
jmp
add
sub
mov
cmp
repnz
xor
repz
mov
imul
inc
rcr
lock
or
dec
test
pop
les
inc
push
pusha
xchg
cmp
mov
pushf
push
cmp
mov
push
xor
adc
mov
jno
call
push
xchg
inc
pop
push
fs
shl
and
aas
inc
repnz
dec
fsub
sub
jns
add
loopne
dec
movs
xchg
inc
ja
adc
dec
repz
and
mov
or
pop
xchg
cmp
test
fild
mov
sahf
popf
outs
cmps
out
adc
cmp
pop
adc
xor
daa
or
loopne
sbb
adc
fild
xchg
js
jl
nop
push
xor
pushf
ins
in
adc
cwde
pop
inc
test
dec
nop
loope
mov
sub
out
loopne
mov
sub
sub
or
add
mov
fldenv
fwait
ins
inc
lock
jl
push
sub
pop
adc
scas
add
inc
mov
mov
xchg
add
dec
mov
sub
and
nop
adc
jmp
jmp
ins
arpl
fbstp
inc
dec
rcl
ret
add
popa
dec
sbb
ror
mov
xchg
adc
mov
das
stos
or
add
sbb
int
aas
imul
dec
mov
xor
je
pop
add
mov
push
cs
pop
imul
shl
sub
int3
mov
xchg
push
scas
imul
test
inc
scas
cmp
(bad)
mov
mov
(bad)
loope
cmps
and
or
jnp
sbb
bound
push
and
and
xchg
cmp
push
push
add
es
xchg
dec
xchg
js
push
push
jns
mov
jne
pcmpgtb
call
ret
sbb
dec
jno
push
mov
sub
test
sbb
mov
adc
leave
dec
mov
mov
retf
leave
int3
loopne
stos
cmp
test
pop
adc
add
sub
jle
dec
jno
pop
test
lock
outs
movs
xchg
pushf
or
mov
adc
adc
mov
mov
movs
jl
into
inc
sub
xchg
retf
gs
in
mov
mov
les
in
in
inc
push
adc
fcom
sbb
jne
push
cmc
or
push
sar
mov
test
je
mov
rcl
aam
data16
cmp
jae
mov
imul
imul
dec
sub
add
pop
add
jle
leave
add
imul
pop
push
test
add
xchg
fcmovnu
mov
push
lds
or
sbb
sub
ret
mov
loopne
inc
or
ret
call
push
adc
and
xor
(bad)
inc
inc
retw
outs
sub
sbb
xchg
inc
(bad)
mov
outs
into
leave
aam
add
push
retf
inc
fcomp
inc
repz
les
stc
jle
rol
push
sub
rcr
adc
mov
pop
stos
jmp
pop
repnz
cmc
icebp
and
cwde
(bad)
int3
lea
jmp
and
dec
cli
movs
cmp
push
dec
and
rcl
cmp
dec
dec
add
push
enter
pop
dec
or
xchg
jne
add
inc
xchg
sub
xchg
or
scas
add
push
sbb
mov
dec
inc
xchg
sub
loope
add
dec
push
aaa
das
test
in
scas
xor
xchg
cdq
mov
lods
imul
fadd
and
cs
dec
dec
aam
cmp
push
or
enter
pop
mov
js
adc
test
fs
add
push
scas
idiv
je
int
xor
xchg
mov
js
cwde
cmp
adc
js
mov
cmp
sub
loopne
jno
iret
mov
cld
inc
pop
lea
out
lds
aaa
dec
shl
jg
or
fstp
pop
hlt
mov
loope
pcmpeqw
in
cmps
rol
enter
lds
outs
xchg
add
scas
xchg
cs
cmp
adc
repnz
cmp
popa
sub
ja
es
daa
dec
leave
js
mov
rcl
pop
pop
mov
rcl
push
stc
aad
or
cwde
out
pop
sub
mov
je
add
pusha
inc
jge
cmp
icebp
dec
add
mov
cmps
jl
pop
inc
dec
sbb
(bad)
dec
sti
(bad)
jmp
in
sbb
and
jo
ins
aaa
call
xor
and
xor
xchg
and
adc
cmps
test
iret
outs
cdq
call
inc
popa
aaa
adc
sti
mov
jp
dec
adc
pop
sub
ja
mov
lea
movs
cmp
xor
push
xchg
int
rcl
xor
sbb
sub
cmp
mov
les
sub
ds
or
cmps
inc
jge
mov
sub
out
loop
dec
ret
pop
inc
and
dec
sbb
(bad)
and
inc
loope
add
int3
push
mov
cdq
js
test
shl
sub
(bad)
adc
shl
add
cmp
jb
dec
adc
jecxz
mov
add
xchg
cmp
out
test
aaa
mov
push
repnz
sub
jnp
inc
add
movs
and
outs
gs
das
cmp
ffreep
js
shl
outs
(bad)
arpl
jle
push
sbb
arpl
sub
jmp
jnp
sub
or
jb
sub
sub
push
sbb
xor
ret
lahf
int3
js
jl
mov
test
lods
push
inc
scas
outs
ins
dec
popa
js
adc
ret
jmp
sub
imul
int3
ret
call
jmp
ret
aas
test
xchg
es
xchg
rcr
add
add
xchg
mov
push
hlt
mov
loop
inc
ja
inc
rcl
mov
or
jbe
das
or
test
xadd
js
movs
xor
sub
mov
push
sbb
rcl
fadd
jge
xchg
dec
add
(bad)
pop
ret
jmp
mov
add
xor
push
or
or
sub
add
add
xchg
mov
inc
lods
in
jmp
and
mov
or
(bad)
push
mov
pop
test
sbb
or
int
push
jnp
fidiv
push
jp
inc
sbb
ins
fild
lds
push
pop
test
pop
in
scas
pop
aam
dec
inc
movs
mov
sbb
stos
mov
mov
dec
mov
pop
cmc
iret
std
dec
push
repnz
test
pop
fisttp
push
jmp
fcom
push
jo
push
leave
adc
das
sbb
stc
mov
test
nop
nop
rcr
leave
push
lahf
lahf
cmp
and
sub
fisttp
adc
mov
xchg
popa
test
sub
pop
inc
addr16
jbe
xchg
lock
sub
push
push
loopne
test
jne
or
xchg
jp
fmul
cmp
adc
test
xor
aas
adc
adc
or
sar
or
dec
call
xchg
adc
inc
or
lahf
rcl
adc
daa
jmp
in
push
in
pop
out
mov
mov
sti
(bad)
sbb
jno
fadd
loope
fld
sub
or
push
test
push
xor
pop
jge
sub
push
push
test
or
mov
push
dec
ss
pop
xchg
pop
sub
adc
mov
pusha
popa
jmp
jns
sahf
or
retf
sub
jbe
mov
js
cmp
add
mov
mov
push
inc
mov
push
push
fisttp
call
pop
xchg
(bad)
aam
(bad)
das
dec
(bad)
das
xlat
push
pop
or
movs
mov
push
jbe
das
(bad)
leave
xchg
xchg
(bad)
jg
pop
imul
nop
pop
push
and
mov
shl
fidiv
lea
xchg
push
and
icebp
sub
rcl
push
and
mov
mov
inc
mov
call
out
call
cmp
jle
cmp
pop
push
push
repnz
jmp
mov
cmp
fadd
sub
mov
clc
icebp
pop
in
add
out
mov
push
leave
in
es
pop
fs
and
sub
xlat
push
and
sub
dec
mov
jno
xchg
mov
pop
dec
cdq
jnp
dec
pop
stc
pop
cmp
(bad)
jl
jg
inc
add
push
cmp
pop
sbb
(bad)
jl
cmp
sbb
cmp
sahf
mov
push
cs
icebp
push
push
call
rol
xor
xchg
shr
add
add
mov
fdiv
jbe
test
push
outs
jmp
add
in
ja
xor
push
fmul
cmps
adc
das
and
shl
inc
div
add
push
rol
lock
xchg
aad
pop
adc
mov
cdq
jge
xchg
icebp
sbb
sbb
push
je
add
inc
or
push
sahf
ffree
ss
or
inc
inc
rcl
jae
movs
add
mov
jl
scas
fwait
cmps
stos
dec
pop
outs
jne
pusha
jecxz
call
sub
sub
push
add
mov
mov
mov
and
retf
sbb
ss
and
xor
cmovl
add
and
mov
iret
pop
push
ss
push
mov
jg
(bad)
fcom
nop
cmp
fidivr
dec
pop
sahf
outs
enter
mov
bsf
cmp
pop
(bad)
mov
sti
or
sub
mov
or
mov
xchg
add
dec
or
shr
xor
push
and
sub
inc
xor
je
stos
dec
and
mov
lea
stos
and
inc
jmp
xor
mov
jae
push
js
sub
cmc
popa
lock
xor
dec
adc
test
mov
mov
rcr
ja
push
pop
loopne
or
jmp
jne
sub
sahf
jmp
sar
mov
cmp
je
jae
cmp
adc
pop
leave
add
or
les
push
or
add
cli
test
rcl
sbb
and
nop
xor
xlat
xchg
or
mov
push
(bad)
mov
cmc
or
sbb
xchg
mov
popf
adc
and
jne
test
into
leave
sbb
das
loopne
dec
jns
aad
in
add
and
cmp
aaa
add
add
push
xchg
push
int3
pop
adc
mov
add
inc
pushf
push
mov
and
cmp
jge
(bad)
out
mov
lea
popf
mov
dec
imul
faddp
pop
pop
sti
add
xor
pop
into
nop
inc
es
push
test
enter
test
dec
xor
jge
push
mov
xor
sbb
dec
mov
cmp
test
jg
and
xchg
fdiv
call
dec
and
jns
mov
leave
lea
pop
ins
outs
enter
lds
dec
enter
movs
mov
xchg
pushf
je
xchg
in
sub
xchg
leave
inc
mov
data16
out
push
mov
dec
test
scas
movs
push
push
xchg
fdivr
je
xor
sbb
adc
jne
push
pop
leave
xchg
sub
inc
cmp
test
fmul
aam
push
mov
xor
add
inc
mov
adc
adc
add
inc
ins
or
sbb
cmp
and
sti
mov
add
enter
js
pop
inc
shl
mov
xor
les
push
fisubr
bound
add
mov
cmp
and
pusha
xlat
popf
jl
rcr
cli
push
mov
adc
mov
push
jge
mov
adc
xor
dec
jb
xchg
loope
jb
jne
jp
xchg
or
adc
fwait
inc
sub
pop
adc
adc
dec
inc
sub
icebp
xchg
nop
int3
je
dec
sbb
int3
push
and
push
scas
mov
inc
push
les
or
pop
and
imul
xor
mov
mov
imul
cmps
pushf
cmps
not
daa
inc
pop
or
shl
mov
xchg
sbb
push
aam
add
mov
hlt
lds
xchg
or
push
push
mov
clc
adc
dec
xchg
movs
and
mov
adc
sub
adc
lock
inc
sahf
inc
call
cmp
pop
jb
lea
aaa
sbb
pushf
or
jb
push
movs
lods
push
dec
adc
shl
enter
cmp
inc
mov
dec
das
pop
rol
push
test
es
or
popa
xor
test
loope
push
fs
cwde
imul
movs
cmp
jl
cmps
and
addr16
or
add
and
adc
dec
mov
xor
mov
cwde
pop
(bad)
outs
add
(bad)
call
inc
ror
outs
pop
dec
xor
cdq
push
aaa
pop
dec
pop
jmp
lods
lahf
cmp
adc
shr
leave
mov
bound
mov
icebp
mov
jb
sub
xor
mov
mov
les
dec
dec
in
add
cmps
inc
sub
mov
and
leave
and
call
mov
dec
inc
bound
or
add
int
(bad)
(bad)
mov
xchg
mov
lea
sub
addr16
call
add
mov
inc
pop
ret
pop
inc
dec
out
mov
add
or
or
ret
sbb
sub
xchg
imul
es
cli
popa
xlat
xchg
and
mov
mov
popa
xchg
xchg
mov
push
mov
add
push
pop
dec
add
test
aas
gs
add
ror
adc
xor
or
adc
rol
jmp
push
or
push
not
ror
pusha
in
add
cmc
stc
jo
aam
cmp
or
jno
rcr
add
xchg
and
adc
dec
jle
jno
lock
push
dec
shl
popf
or
cld
push
enter
pop
fadd
je
sbb
enter
and
rcr
sbb
int3
pop
mov
cmp
imul
(bad)
ins
push
shr
cmp
aas
arpl
inc
cs
push
pop
jl
or
add
cs
ds
jle
in
or
and
xor
lods
add
sahf
mov
add
pusha
xchg
movs
and
add
ffree
pusha
cmc
arpl
pop
sub
pop
sbb
push
cs
pusha
or
sub
adc
push
cmp
mov
mov
iret
repz
vmovups
dec
and
rcl
movs
push
mov
movs
vxorps
cmp
iret
pop
sub
fs
inc
stos
or
fdiv
retf
mov
push
cmp
cmps
dec
dec
pop
jp
xor
inc
sbb
push
cmp
sub
mov
les
cdq
data16
sar
pop
verw
les
sub
push
dec
cmovb
scas
sub
inc
fldcw
pop
movs
add
pop
and
xchg
push
pop
jne
add
mov
enter
pop
cld
fdiv
adc
ins
loop
add
clc
aam
stc
ja
das
xor
or
pusha
div
sub
cdq
pop
push
enter
adc
imul
fadd
or
clc
ror
add
jbe
or
sbb
mov
cmp
mov
inc
fstp
jbe
push
inc
jecxz
jne
xchg
cmps
sbb
sbb
add
(bad)
adc
icebp
cmp
pusha
push
inc
fsubr
and
xchg
sub
mov
pushf
test
push
mov
xchg
sbb
je
cmc
cdq
imul
sub
adc
pop
imul
sar
pop
rcr
sahf
adc
mov
sbb
dec
sub
sub
push
lea
daa
mov
xchg
out
mov
lea
or
cmp
(bad)
push
inc
jmp
mov
arpl
xchg
hlt
cmp
push
mov
aas
cdq
or
or
push
lds
pusha
add
sbb
imul
dec
jmp
push
lea
push
sub
xchg
push
cs
shr
jg
clc
push
inc
addr16
cmp
shl
add
popa
fdiv
or
sbb
es
outs
and
aam
cmps
sbb
cli
dec
sbb
jge
or
sbb
dec
and
or
out
and
cmp
add
mov
dec
les
imul
in
inc
mov
mov
xchg
pop
pushf
sbb
dec
test
add
dec
call
add
xlat
inc
lahf
pop
mov
add
push
fwait
add
mov
ret
xor
retf
or
or
ficomp
push
mov
push
push
xor
mov
lods
or
nop
cmp
not
inc
mov
mov
jle
aaa
xchg
inc
mov
shr
push
mov
fist
jmp
dec
pop
push
inc
dec
ja
mov
adc
pop
dec
gs
in
mov
and
add
loope
push
cmp
xlat
add
retf
cs
cmc
dec
es
inc
push
add
pop
and
gs
xor
lds
loope
loope
sahf
push
push
add
daa
mov
jge
imul
jne
and
cmp
sub
(bad)
mov
cmp
jb
adc
in
add
sti
lock
fs
jne
xor
adc
int3
mov
xchg
or
test
cdq
and
adc
mov
mov
pop
rol
sbb
sti
add
cdq
fcom
mov
es
mov
push
cmps
pop
jae
push
dec
wrmsr
sub
push
(bad)
xor
mov
arpl
and
or
adc
mov
push
(bad)
in
jg
dec
call
add
gs
shl
rcpps
cs
pop
mov
sub
jmp
cmp
je
lock
inc
xor
mov
fmul
and
or
adc
sbb
pop
and
arpl
neg
inc
sub
loopne
loop
(bad)
call
mov
adc
add
inc
fcmovnb
sbb
les
fcomp
ins
adc
mov
add
icebp
das
mov
and
xchg
pop
add
dec
loopne
add
lock
or
cmp
jae
or
and
jecxz
add
push
cld
xchg
pop
ja
pop
push
push
push
loopne
jno
mov
dec
and
mov
lods
data16
jbe
pusha
dec
adc
adc
mov
retf
and
dec
movs
pop
shl
and
or
push
paddb
es
mov
and
xchg
mov
daa
sbb
add
test
sbb
aad
add
jecxz
es
cmp
test
jl
push
xchg
daa
sub
add
cmps
cmp
ret
push
pop
movs
or
test
not
mov
(bad)
dec
or
sub
mov
or
ins
sub
mov
jno
ins
mov
mov
test
xchg
cwde
pop
pushf
sbb
and
ret
inc
sti
xchg
xchg
xchg
or
stos
pop
jb
mov
bound
xor
nop
mov
mov
and
in
xchg
add
jp
popa
mov
dec
or
adc
push
clc
in
adc
lock
push
push
push
cmp
imul
jb
daa
aad
cmp
imul
xchg
jmp
dec
inc
sub
pop
cmp
adc
push
xlat
xor
rcr
pop
fiadd
scas
and
lea
(bad)
xor
cmp
rol
scas
and
cwde
fsub
adc
das
pop
scas
inc
inc
mov
les
push
int
pusha
cwde
jns
pushf
jo
das
leave
adc
push
not
ret
add
arpl
inc
imul
inc
mov
dec
les
fimul
movs
or
dec
ret
aad
and
add
mov
adc
loope
shr
jnp
xchg
mov
(bad)
dec
rcr
xor
loopne
dec
test
sub
xor
and
cli
mov
fisttp
add
fadd
dec
int
add
(bad)
pop
repnz
xor
loope
push
jge
or
pop
and
add
into
sub
adc
xchg
pop
test
into
idiv
lods
add
in
pop
xchg
pop
push
in
dec
push
or
dec
shr
inc
sub
in
xchg
pop
sub
pop
cmp
jne
mov
add
push
push
je
sub
add
cvtpi2ps
mov
dec
sbb
or
mov
addr16
sbb
add
stos
add
sar
mov
je
das
mov
je
xchg
stos
add
or
dec
mov
es
rcl
push
es
xor
js
call
jmp
or
mov
sub
dec
cmp
xlat
fcomp
adc
lea
xor
dec
dec
pop
xchg
fs
in
mov
pop
sub
xchg
jo
nop
add
add
and
sbb
push
and
int3
and
sbb
xlat
mov
inc
mov
jno
outs
adc
aad
push
(bad)
fild
pop
popf
xor
jae
lods
scas
cdq
es
je
push
push
add
aam
push
dec
out
inc
push
inc
call
xor
adc
and
pop
adc
xchg
mov
push
ins
and
xor
push
jl
mov
ror
push
nop
mov
mov
push
adc
adc
imul
dec
xchg
jmp
pusha
imul
jae
fcom
jne
pop
push
jb
ss
fstp
nop
inc
jb
or
xchg
pop
dec
sub
and
jb
push
pop
nop
mov
das
pushf
sbb
pushf
aas
mov
pop
mov
sbb
pop
push
inc
push
(bad)
jo
xchg
retf
mov
(bad)
jp
jbe
push
adc
or
and
rol
or
xor
push
(bad)
adc
cwde
clc
xor
idiv
pusha
jmp
jmp
out
adc
adc
push
in
ret
sub
jg
outs
sbb
imul
mov
jo
sbb
shl
fldcw
add
pop
mov
sub
in
lods
add
jge
add
pop
add
push
movs
shld
sbb
or
rol
es
popa
cmp
push
mov
test
int3
mov
into
sub
xchg
je
test
sti
mov
rol
sub
daa
iret
lea
adc
jo
mov
dec
pop
mov
cmp
jno
add
mov
push
push
mov
mov
lods
xchg
xor
sahf
mov
jmp
mov
inc
and
mov
add
inc
std
mov
push
adc
cmp
sbb
js
cmp
mov
mov
movs
orps
shl
sahf
pusha
xor
daa
test
xchg
mov
and
inc
sbb
add
push
sub
mov
or
sbb
cmp
cmp
mov
inc
push
bound
xor
pop
sub
add
jecxz
mov
outs
push
les
movs
test
or
enter
and
in
call
xchg
xchg
xchg
xchg
stos
mov
xchg
xchg
xchg
or
xchg
or
lods
add
int3
scas
ret
mov
dec
add
nop
adc
inc
mov
sub
add
movs
push
dec
stc
and
sbb
jg
mov
dec
push
push
fidiv
lods
in
sbb
fsubr
sub
daa
or
push
and
fadd
mov
jnp
ins
cmp
aas
jmp
push
cmc
mov
stc
push
inc
or
adc
pop
fidiv
hlt
fisubr
jp
mov
push
jnp
adc
pop
inc
in
je
fld
xchg
jno
aaa
jp
clc
mov
dec
or
xchg
fwait
or
in
out
mov
retf
push
adc
hlt
sbb
retf
jo
movs
push
outs
adc
(bad)
mov
add
jnp
lods
inc
jns
aam
mov
fisttp
loope
shr
sbb
sub
mov
sub
mov
push
or
or
add
or
fidiv
loope
rcr
xlat
xor
mov
adc
xor
sbb
cmp
lds
rcl
(bad)
aam
pavgb
mov
sub
mov
div
and
bound
scas
sbb
test
nop
adc
pop
in
pop
arpl
sbb
and
and
push
jp
jns
add
das
in
or
mov
pop
jno
sbb
mov
push
mov
add
and
or
pushf
sub
xor
call
aaa
and
xchg
and
dec
jbe
imul
or
or
sbb
sub
mov
push
sub
push
add
sbb
jns
add
xchg
push
or
or
les
push
or
in
call
adc
ror
repnz
call
and
xchg
cmp
xor
xor
cmp
jbe
xchg
cmp
sbb
add
aas
leave
xchg
or
mov
push
test
sti
add
pop
enter
push
pop
mov
mov
popa
pop
pop
call
arpl
loopne
mov
or
xchg
jbe
or
jo
adc
dec
cli
xchg
(bad)
arpl
and
push
and
imul
inc
cmp
or
or
inc
lock
xchg
add
mov
mov
xlat
stos
(bad)
xchg
or
jae
push
arpl
repz
stos
add
add
jge
push
jb
dec
shl
jp
push
arpl
push
pop
sbb
lea
sub
cmp
adc
lea
xchg
mov
rcl
mov
je
dec
push
mov
xchg
movs
retf
and
and
fiadd
cmp
ins
jne
je
or
mov
mov
inc
int3
inc
push
or
les
push
adc
add
mov
jecxz
repz
jmp
cmps
mov
outs
popf
push
cmp
ret
cmp
fadd
adc
jno
adc
push
push
mov
adc
dec
icebp
ds
call
movs
sub
adc
mov
mov
or
cmp
push
fwait
dec
js
xchg
shr
sub
jbe
shl
push
cmp
or
(bad)
jnp
in
call
ins
jecxz
enter
xchg
rol
sahf
sbb
mov
or
enter
sub
sub
sub
repnz
cmp
xor
ins
sbb
dec
add
push
retf
mov
mov
or
addr16
pushf
ins
and
sub
pop
xor
(bad)
xor
and
mov
inc
nop
mov
sbb
iret
mov
fmulp
test
sbb
jp
cmp
dec
pop
sbb
adc
push
mov
mov
aad
mov
or
or
dec
nop
adc
and
and
jns
mov
cmps
out
cmp
shl
shr
inc
xchg
or
cdq
lods
and
sbb
fsubr
cmps
inc
movs
adc
out
das
daa
fwait
sti
outs
push
(bad)
in
pop
or
cmp
cmps
ds
or
add
test
xchg
cmp
test
sbb
xchg
inc
push
test
inc
dec
es
or
sahf
dec
push
cmp
lods
inc
nop
add
inc
push
inc
mov
inc
inc
inc
pushf
sbb
inc
push
sbb
loopne
popf
pop
(bad)
out
je
add
cmc
sbb
adc
int
das
dec
adc
xor
repnz
aam
dec
add
sub
aam
retf
dec
sub
dec
add
mov
(bad)
retf
dec
jg
add
pop
fdiv
dec
or
or
mov
fs
mov
mov
cdq
mov
fcom
push
push
sub
push
push
mov
call
fcom
dec
push
jl
jno
inc
xor
sbb
ret
or
movs
inc
sub
cs
imul
adc
mov
and
enter
pop
or
push
xor
nop
add
xchg
pop
adc
in
les
les
sub
inc
int
sbb
rcl
cmp
sub
push
push
add
fs
pop
xor
or
jnp
rcl
lahf
jp
pusha
adc
adc
in
pop
add
adc
xor
pop
dec
xchg
mov
or
jb
je
push
xchg
push
enter
and
jae
sbb
cs
test
mov
push
loope
ret
cmp
and
bound
jbe
dec
or
push
(bad)
xor
lods
arpl
cwde
test
cwde
dec
rol
add
xchg
bound
inc
dec
push
cmp
enter
dec
sub
jb
push
fadd
sbb
call
and
leave
call
call
loop
sub
add
rol
xchg
push
jo
and
movs
jb
neg
add
daa
loopne
and
push
sub
sti
mov
shl
mov
sub
push
lock
xor
(bad)
and
aaa
add
push
inc
push
jo
jae
lahf
or
lock
lods
and
jmp
lock
iret
dec
dec
mov
pop
test
ins
ins
cmp
and
inc
xchg
outs
repz
in
aas
in
(bad)
adc
or
mov
push
add
ins
pop
sub
add
sub
dec
or
adc
pushf
cdq
aaa
jo
lods
jnp
mov
jne
add
jmp
std
inc
and
inc
sub
mov
pop
dec
lods
cwde
xor
dec
adc
mov
nop
sbb
movs
mov
(bad)
jle
dec
mov
lods
add
push
mov
push
out
loope
mov
dec
push
out
cs
gs
or
cmp
adc
mov
nop
enter
push
and
sbb
pusha
mov
sbb
sbb
sub
clc
push
pop
out
shl
sbb
push
or
mov
inc
mov
add
sar
les
add
lock
mov
cmp
or
enter
cs
or
adc
movs
push
pop
fdiv
xchg
or
add
add
or
test
push
jno
adc
xchg
dec
mov
jmp
movs
sahf
inc
xchg
(bad)
inc
in
imul
(bad)
adc
xchg
je
adc
test
das
mov
mov
mov
inc
push
nop
xchg
or
add
jo
or
pop
push
xor
out
push
sub
(bad)
add
push
fistp
pop
sbb
dec
sbb
outs
js
jo
and
or
sbb
pop
fucomip
xor
mov
faddp
xchg
sbb
mov
fs
add
js
push
clc
xlat
adc
std
into
xchg
mov
push
and
dec
mov
faddp
dec
test
retf
test
cli
jno
sbb
push
cmp
xchg
dec
leave
loope
gs
mov
mov
add
enter
inc
inc
mov
inc
dec
jne
push
jo
jo
push
dec
dec
xor
call
add
push
add
add
add
dec
ror
movs
iret
add
mov
push
xchg
daa
sbb
xor
(bad)
test
dec
sbb
add
test
inc
or
in
push
jmp
nop
inc
mov
fld
push
ror
addr16
push
and
cmp
scas
rcr
pop
cs
and
dec
mov
pop
rol
adc
ins
cmp
inc
push
jno
ss
push
mov
push
arpl
addr16
pop
and
sub
push
inc
(bad)
call
push
call
dec
ret
arpl
nop
cmps
push
and
cmp
add
or
in
inc
sbb
add
xchg
jns
lock
stos
mov
push
and
sbb
jb
push
frstor
outs
push
add
fiadd
pop
call
leave
fmul
and
dec
or
lahf
lea
retf
ret
cmps
and
add
sbb
aam
add
cmp
in
add
rcl
cmps
xchg
fnstsw
repz
jne
loopne
xchg
lock
pop
mov
pop
add
test
lds
jle
sub
test
push
xor
cmps
mov
or
inc
js
repz
add
jmp
xlat
adc
push
pop
jp
fdivr
xor
enter
in
test
pop
test
push
js
test
adc
cmps
add
popa
je
push
or
rcl
and
cmp
inc
bound
shl
mov
sub
nop
adc
jae
jno
sbb
push
add
hlt
adc
inc
dec
daa
or
adc
fsub
jge
ret
push
dec
les
in
(bad)
fadd
sub
call
jecxz
mov
fdiv
adc
sub
jmp
sbb
pop
pop
jne
lock
sub
push
sbb
pushf
add
pop
xor
mov
mov
fisub
in
pop
mov
repnz
in
in
and
or
and
adc
mov
sbb
jge
into
test
mov
pushf
inc
adc
dec
dec
inc
or
mov
cmp
fwait
cmp
rcr
loopne
push
rcl
cwde
xchg
push
lods
jo
add
movs
xor
sbb
pop
push
add
pop
and
sbb
and
(bad)
test
add
add
xchg
inc
ret
jl
(bad)
fmul
xchg
add
sub
sbb
push
cmp
push
push
loopne
jne
or
push
clc
(bad)
mov
or
nop
lea
push
cmp
cwde
and
ror
dec
data16
stos
inc
add
ret
inc
or
mov
pop
pop
xchg
scas
rcr
addr16
and
jno
pop
inc
in
cmp
inc
add
imul
pop
adc
call
lea
pop
loope
pop
ins
ds
cmp
push
gs
push
xor
lods
mov
sub
inc
leave
sub
pop
fstp
adc
arpl
ss
lods
or
push
int
mov
jbe
xor
and
cli
pusha
aaa
loope
ds
push
dec
lea
mov
adc
ficomp
sbb
nop
cmp
mov
nop
(bad)
cmps
and
cwde
or
mov
(bad)
cmp
or
xchg
fimul
shr
or
in
adc
push
loopne
mov
add
mov
xchg
mov
push
push
push
cmp
shl
dec
add
fdivr
add
jbe
test
lock
fadd
daa
pop
loopne
add
and
fcmovnb
push
mov
dec
push
sbb
ret
xor
dec
add
jecxz
mov
jmp
mov
stc
add
sbb
add
jb
adc
or
ror
rcr
cmp
mov
pop
push
jmp
push
jne
mov
xor
mov
xor
jle
add
or
add
cmp
mov
in
mov
push
add
outs
adc
(bad)
jl
cmp
lods
ret
dec
lods
aaa
xchg
or
push
push
or
and
and
je
fimul
add
and
clc
fisttp
sbb
xlat
pushf
and
add
xadd
or
or
test
mov
and
mov
cmp
or
pop
and
mul
and
movs
and
adc
sbb
mov
sbb
sub
cld
aad
test
and
push
cmovb
dec
rcl
add
and
sub
push
push
(bad)
adc
rcr
mov
ficomp
mov
sbb
dec
mov
pop
sar
lea
imul
mov
pop
inc
stos
add
js
add
jmp
pop
xchg
js
mov
cmps
mov
add
sub
cwde
adc
int3
jge
xchg
and
add
pop
and
cmps
dec
adc
push
cmp
add
xchg
pop
mov
sub
add
in
and
lea
and
dec
xchg
xor
leave
gs
fsubp
mov
pop
mov
lods
dec
inc
mov
dec
sbb
push
lods
xor
adc
mov
test
stos
pop
mov
pop
int3
fldenv
pop
outs
(bad)
xchg
aad
ins
jmp
lods
push
adc
cmc
arpl
inc
sub
outs
dec
sub
retf
call
repnz
in
mov
pop
mov
jne
int
pushf
or
mov
enter
and
je
sbb
and
inc
mov
xchg
cmp
movs
mov
(bad)
mov
xor
sub
and
les
es
inc
adc
cmp
enter
ss
call
sbb
sub
sbb
jg
mov
add
mov
inc
sar
sbb
mov
loopne
and
fild
and
mov
call
and
mov
leave
adc
add
xor
mov
add
daa
push
cwde
or
jle
lods
adc
adc
push
sub
sbb
xchg
mov
outs
add
xchg
jmp
pusha
popa
mov
dec
out
ret
dec
cld
add
loope
dec
mov
xchg
adc
adc
or
adc
(bad)
cdq
mov
xchg
sub
push
push
movs
cmp
aaa
jne
jno
scas
retf
pop
or
in
ror
and
dec
ja
(bad)
aam
loopne
sbb
fild
push
bound
dec
xchg
add
cli
pop
scas
outs
lea
rcl
test
sub
jmp
xor
xchg
add
or
loope
fcom
inc
mov
int3
movs
stc
es
push
push
lea
push
(bad)
sbb
mov
add
mov
aas
je
(bad)
fs
sub
or
aaa
add
in
jne
fwait
pop
dec
inc
leave
and
enter
or
xchg
shl
mov
sub
inc
(bad)
xchg
imul
and
int
cmovg
(bad)
push
xor
sar
xor
push
mov
push
nop
je
jl
bound
mov
inc
jl
(bad)
mov
fwait
sub
inc
xor
push
imul
mov
adc
or
xor
jne
mov
inc
xor
test
inc
dec
aad
sub
adc
test
in
xlat
push
xor
fsub
shl
and
jb
(bad)
or
in
cld
fadd
fdivr
aad
leave
in
add
mov
and
jbe
addr16
scas
or
das
in
push
test
rcr
xchg
pop
jg
dec
inc
mov
adc
call
sub
dec
ror
in
fsubr
loopne
into
adc
dec
pop
mov
neg
movs
test
adc
mov
les
push
dec
test
cs
and
jp
out
retf
icebp
jle
jne
cmp
jge
cld
and
xchg
or
(bad)
jb
in
stos
add
sub
cmp
or
retf
add
sbb
push
jns
sub
add
sbb
jb
push
pinsrw
xor
mov
(bad)
cmp
push
inc
stos
cmc
pop
fwait
je
and
in
aaa
lock
shr
push
cmps
adc
add
jb
sub
popa
and
pop
retf
arpl
sub
mov
clc
ins
push
mov
cmp
or
mov
out
mov
inc
cwde
hlt
push
push
popa
mov
sub
mov
xchg
inc
cmp
inc
and
inc
sbb
and
cmp
nop
inc
add
in
inc
push
xor
xor
xor
push
aaa
sub
or
movs
mov
push
cmp
sar
test
mov
retf
cmp
and
test
push
adc
sbb
sub
add
xchg
push
and
movs
push
pusha
sbb
dec
add
sbb
xchg
or
shl
movs
cmp
push
push
or
mov
mul
aaa
mov
push
daa
test
mov
sbb
add
mov
pop
jbe
mov
xor
cmp
sbb
call
nop
les
adc
bound
cli
add
add
cli
lea
mov
imul
push
jmp
fiadd
ret
shl
int
adc
sbb
and
outs
adc
jns
loopne
call
add
add
sub
jmp
xor
out
ins
shl
jne
std
test
ins
frstor
or
mov
add
pop
sbb
jne
std
or
xchg
mov
and
sbb
sub
ret
addr16
pop
cmp
dec
scas
and
or
sub
ficom
xchg
pop
ror
push
jne
xchg
bound
ret
pminub
arpl
dec
push
mov
add
adc
gs
dec
cmp
sbb
cmp
cmp
mov
push
push
aaa
dec
mov
(bad)
xor
mov
dec
pop
push
adc
jl
push
jle
sahf
cmp
rol
ret
xchg
mov
mov
aaa
xor
and
sbb
mov
rep
push
cmp
mov
imul
pop
stos
jne
jecxz
xor
push
popf
in
jne
add
push
sub
icebp
into
cli
rcr
add
add
adc
outs
stos
lock
jns
inc
pcmpgtd
add
(bad)
icebp
xchg
mov
cld
sub
enter
or
sar
popf
pop
pushf
mov
out
cmp
push
jmp
push
push
pop
jmp
or
mov
pop
mov
mov
nop
fstp
push
faddp
add
inc
push
ss
dec
pop
jmp
or
lds
dec
or
cld
mov
aam
mov
cdq
aam
ds
mov
push
pop
push
aam
push
lahf
xchg
ret
and
sub
jo
test
jns
cmps
mov
pop
ret
popa
push
or
sar
mov
jg
into
and
movups
cmc
pop
cwde
add
lldt
lods
jo
or
xchg
cwde
mov
adc
jecxz
or
xchg
xor
mov
mov
mov
dec
mov
out
mov
data16
into
dec
imul
xchg
mov
(bad)
dec
or
loopne
or
stos
cmp
ffree
sbb
add
xchg
jo
call
inc
jnp
movs
std
xor
clc
je
mov
pop
std
mov
ret
pop
iret
cwde
(bad)
jbe
jae
jmp
outs
fwait
icebp
dec
sahf
mov
push
mov
scas
test
or
sbb
in
mov
push
push
fst
shl
mov
(bad)
pop
mov
mov
pop
dec
sahf
test
jne
loope
sub
scas
rol
in
sub
and
nop
dec
push
and
add
test
out
inc
sub
add
mov
adc
or
xor
ret
ins
retf
cmp
and
sbb
stc
fcomp
fs
in
pop
nop
inc
xchg
test
add
xchg
add
mov
mov
jbe
je
aaa
push
or
lods
leave
gs
push
sub
or
mov
adc
(bad)
xchg
sub
or
add
add
sar
fcom
jp
loope
adc
dec
cmps
mov
add
xor
xchg
in
push
cs
dec
ins
fisttp
dec
jmp
mov
xchg
xchg
and
repnz
dec
push
mov
add
xor
jnp
aam
xchg
lock
adc
adc
dec
or
daa
and
dec
adc
or
or
xor
or
jno
loop
fmul
call
sub
push
cli
mov
int3
xor
jle
dec
and
push
inc
dec
not
xchg
pop
sahf
add
call
inc
xor
add
imul
mov
int3
xchg
loope
outs
xor
nop
pop
add
sub
xor
push
das
add
mov
xchg
enter
xor
(bad)
leave
je
test
adc
mov
and
jle
test
cli
mov
mov
stos
and
inc
and
daa
push
std
jl
bound
sub
mov
inc
sbb
adc
cmp
sbb
in
cdq
lea
imul
imul
pusha
push
jge
nop
add
sub
sahf
inc
jb
add
jb
sub
mov
inc
xor
and
sti
and
xchg
pop
dec
es
xchg
fwait
or
jmp
adc
mul
inc
or
movs
aaa
inc
cmp
add
sbb
dec
lods
jno
or
mov
or
cmp
push
mov
mov
rcl
xor
dec
loop
and
popa
nop
dec
or
ret
jae
ja
jb
push
addr16
xchg
and
jnp
mov
shl
in
or
mov
fiadd
shl
fdiv
mov
adc
nop
add
jbe
or
or
and
cmp
jmp
fsubr
and
sar
push
or
adc
out
or
mov
sub
xchg
adc
popf
or
inc
mov
push
mov
add
in
adc
xchg
addr16
loope
sbb
clc
mov
jne
mov
(bad)
(bad)
ins
or
retf
mov
sbb
lea
fild
pop
add
mov
mov
jmp
mov
fiadd
jae
or
and
and
jmp
not
or
jle
adc
inc
sbb
outs
cmp
jmp
jno
add
jle
adc
rcr
(bad)
fmul
cmp
xor
push
jmp
jno
push
or
sub
mov
dec
adc
dec
stos
call
cmp
dec
les
fldcw
cmp
add
or
mov
loope
movs
adc
repz
sbb
and
daa
jl
cmp
test
ret
jge
mov
adc
sub
dec
loop
add
bound
mov
loope
aam
adc
xor
test
push
call
popa
push
shl
pusha
lock
mov
cmp
mov
adc
fld
or
mov
fstp
adc
fs
adc
add
add
aas
pusha
fldz
je
sbb
sub
mov
add
and
jl
pop
lahf
shl
retf
pop
enter
test
add
push
jmp
fs
xor
ins
(bad)
mov
or
pusha
mov
or
push
inc
mov
jb
mov
jmp
adc
or
and
mov
jns
add
sbb
adc
add
mov
jnp
int
test
(bad)
sahf
xlat
ins
inc
or
arpl
xor
fs
xchg
xchg
pop
push
inc
xchg
rcr
push
cmp
dec
inc
add
test
jl
jg
ret
xchg
(bad)
out
jo
leave
inc
dec
add
xchg
mov
add
cmp
mov
in
mov
adc
push
fmul
add
stc
jnp
adc
mov
cmp
stos
call
pop
jne
fucomi
and
inc
ret
mov
aaa
push
or
das
mov
adc
add
xchg
sbb
jmp
cmp
popa
xchg
and
fst
add
cli
ds
and
dec
sbb
inc
call
or
sbb
or
rol
add
inc
inc
jecxz
add
sub
lods
add
lods
cdq
push
aam
call
sbb
pop
imul
pop
jo
addr16
lock
sbb
add
or
push
jo
clc
fadd
add
test
out
stos
sub
sub
inc
popa
loope
inc
sbb
mov
ja
cli
push
pop
xor
jne
adc
xor
mov
push
rcl
out
into
repz
dec
xor
mov
sub
lea
icebp
leave
add
pop
fidiv
add
and
dec
inc
and
push
outs
dec
xchg
in
stc
arpl
mov
xchg
sub
cmp
test
pusha
(bad)
loop
inc
jle
fs
mov
and
ins
test
mov
and
xchg
pop
or
pop
cmp
(bad)
iret
mov
popa
cmp
or
mov
adc
push
stc
jne
cmp
add
mov
and
repnz
mov
fcmovbe
jne
inc
mov
sub
mov
inc
or
push
add
ins
jg
ret
dec
test
pop
or
adc
dec
sbb
xor
adc
fadd
pop
ja
mov
loopne
fbld
dec
xor
or
std
push
jmp
cmp
inc
add
adc
fidivr
adc
mov
cmps
aaa
or
arpl
sbb
push
rcr
(bad)
cmp
lock
mov
add
mov
ror
pop
mov
sub
add
dec
jo
push
cmp
cld
jmp
test
xor
and
outs
jmp
mov
xchg
cmp
ror
mov
clc
sub
sbb
inc
call
sub
ja
pop
in
ds
sub
lea
and
inc
or
push
int3
dec
inc
mov
je
sbb
sub
or
dec
xor
xlat
push
dec
pop
adc
cmc
aaa
imul
xor
pop
push
mov
add
test
(bad)
mov
mov
jno
jbe
xor
push
jne
push
mov
aad
je
sbb
xor
and
mov
lds
add
sbb
loopne
mov
repz
int3
or
push
pop
jns
je
mov
sbb
push
(bad)
call
mov
dec
xor
jmp
jl
ffreep
test
or
adc
sub
mov
and
fcom
jne
cmp
iret
dec
or
inc
push
cmp
pop
sub
movs
shl
xor
adc
nop
test
adc
add
push
daa
retf
adc
(bad)
fidivr
or
in
inc
xor
or
rcr
dec
loopne
inc
aas
xchg
xchg
bound
or
jo
test
imul
jge
lea
lea
mov
push
sbb
cmp
movs
push
push
xor
push
pop
gs
add
(bad)
in
pop
inc
daa
loope
add
cs
aad
cmps
mov
adc
cmp
popf
or
dec
xchg
dec
jne
mov
xchg
ins
xor
xor
pop
pop
xlat
inc
xchg
or
aas
sub
inc
mov
cdq
jne
add
pop
in
xchg
std
xchg
add
inc
xchg
add
cld
add
xchg
rcl
push
js
push
inc
add
cmp
mov
(bad)
fdivr
mov
ret
push
sub
xchg
inc
mov
pop
push
into
aas
mov
or
xor
sbb
add
cmp
or
sahf
nop
rol
or
xor
mov
pusha
push
jge
aam
retf
inc
pop
in
sbb
pushf
mov
sub
scas
shl
xor
or
sub
sbb
mov
xchg
rol
and
mov
and
or
fild
or
pop
pop
add
test
push
icebp
mov
fmul
cmc
mov
and
sub
adc
call
jp
and
mov
mov
int
mov
or
pop
and
mov
push
mov
mov
shr
mov
or
adc
icebp
leave
add
xchg
xor
inc
and
push
add
adc
inc
leave
add
lea
inc
sub
dec
bound
inc
mov
test
mov
sub
push
adc
sub
mov
in
push
pop
push
call
mov
out
mov
or
jle
pop
shr
mov
mov
aas
sub
mov
add
hlt
mov
scas
add
mov
jno
push
adc
xor
add
mov
movs
add
gs
lea
sbb
es
adc
dec
jne
and
in
sbb
xlat
mov
rcl
add
inc
push
sar
push
fcomp
xor
test
imul
fldenv
test
loopne
dec
add
dec
nop
es
fcomp
sub
jne
dec
jae
fmul
jecxz
add
cmp
jno
push
jae
or
pop
xchg
out
push
fbld
in
fadd
in
mov
inc
push
jg
adc
inc
or
adc
pop
lock
inc
add
bound
stos
(bad)
or
or
mov
adc
xcrypt-ofb
cmps
push
imul
fcom
leave
test
test
loope
add
cli
addr16
push
sbb
mov
(bad)
mov
mov
push
in
sbb
or
je
mov
add
inc
stc
aam
int3
xchg
mov
sub
in
aaa
jmp
and
in
aam
pop
add
cmp
sub
inc
push
cmp
sbb
and
cmp
nop
add
xchg
movs
inc
pop
out
sbb
or
jg
mov
xchg
xchg
not
pop
add
xor
scas
inc
lahf
push
add
sub
xchg
or
jo
daa
push
adc
in
jmp
mov
inc
fistp
cmp
inc
sbb
add
fld
mov
(bad)
shl
aad
jns
clc
mov
fild
cmp
push
push
adc
dec
add
sub
mov
mov
push
xor
xlat
push
or
mov
jae
adc
call
hlt
enter
ret
inc
sub
xchg
push
mov
lods
mov
push
or
xchg
sbb
iret
add
sbb
add
cmp
mov
or
sub
mov
xchg
jbe
or
icebp
hlt
and
jecxz
ins
push
dec
or
mov
adc
xchg
or
or
and
ins
movs
or
(bad)
mov
or
lods
mov
mov
adc
and
and
fwait
jb
and
mov
jp
inc
mov
cmp
imul
sub
mov
add
pop
out
and
or
sbb
push
adc
mov
test
mov
xor
inc
jecxz
cmp
mov
adc
(bad)
xchg
hlt
or
sub
jle
xor
mov
inc
es
sub
or
sub
inc
xchg
lods
adc
or
add
add
loope
sahf
or
xchg
and
jo
movs
pop
in
cmp
aad
sub
add
cs
rcl
data16
pusha
mov
out
push
js
mov
adc
jo
mov
ja
jg
pop
add
push
dec
scas
mov
sub
loopne
out
inc
mov
sbb
ror
dec
push
(bad)
sbb
pop
mov
test
pop
pop
adc
lods
int3
push
or
in
push
ret
inc
addr16
mov
add
data16
sbb
ret
push
mov
pop
rol
mov
mov
mov
inc
cmp
add
xchg
adc
xor
into
xor
mov
jne
mov
push
or
or
sub
inc
retf
test
test
cmp
mov
add
push
scas
mov
(bad)
popa
cwde
cmp
push
jmp
inc
cld
jmp
pop
or
fwait
pop
nop
dec
inc
bnd
sbb
adc
or
add
mov
shl
mov
push
xchg
push
sub
add
jnp
ins
jg
je
cmp
dec
add
xchg
cmp
add
sub
bound
pop
call
call
xor
sbb
dec
cmp
in
push
jmp
sbb
mov
jo
leave
je
popf
test
dec
xor
not
push
stos
xchg
mov
or
shr
or
dec
xor
adc
inc
add
movs
pop
pop
(bad)
add
add
and
loop
fiadd
fisubr
dec
and
add
(bad)
and
jno
adc
dec
dec
retf
lar
inc
dec
mov
sbb
xchg
and
mov
js
rol
or
pop
push
sar
loopne
cmp
jne
jne
into
dec
int
fist
cmp
cmp
mov
adc
rcr
pop
add
(bad)
mov
xchg
mov
(bad)
jo
dec
mov
fidiv
sub
rcr
dec
sub
sbb
or
sbb
push
icebp
jmp
test
inc
mov
mov
std
mov
inc
inc
mov
dec
and
jl
gs
pop
iret
jnp
scas
inc
dec
pop
comiss
and
movs
push
sbb
xchg
sub
push
xchg
dec
mov
xchg
retf
shl
push
xchg
icebp
mov
lods
mov
or
in
mov
push
push
jmp
sbb
sbb
sbb
and
xor
rcr
test
cmp
xor
test
adc
jbe
mov
sbb
add
pop
push
adc
sub
jnp
add
mov
or
int3
push
adc
fs
push
lods
or
push
jne
xchg
lock
pop
rol
imul
jp
lds
fcmovnb
mov
cmp
(bad)
xchg
or
repz
shl
mov
lds
push
movs
inc
mov
or
movs
mov
jns
adc
or
movs
adc
sbb
add
dec
inc
adc
sbb
adc
cmp
and
push
mov
mov
popa
sub
fnstsw
xor
lods
imul
xor
pop
xchg
into
add
xor
inc
pop
sub
ret
push
mov
xchg
or
adc
cmp
shl
int
mov
sbb
daa
icebp
and
xchg
jl
(bad)
cmp
inc
pop
jno
(bad)
cli
pop
jmp
ja
mov
gs
dec
push
inc
mov
cwde
dec
int3
pusha
jge
mov
ror
lea
out
cmc
and
push
movs
push
jno
sub
test
std
or
xor
enter
fidiv
imul
adc
sub
lods
push
and
in
jne
inc
or
retf
xchg
xchg
dec
sbb
sub
push
jge
push
in
and
inc
xchg
inc
mov
jb
test
dec
cmps
cld
dec
mov
ss
xlat
mov
inc
aaa
mov
xlat
mov
add
js
adc
or
add
jle
cmp
dec
rol
jb
push
push
rol
rcl
xchg
retf
movs
repnz
add
nop
repnz
cs
add
add
out
add
or
xchg
retf
mov
in
jb
mov
jl
add
mov
adc
pop
loopne
fmul
in
jns
add
xchg
retf
mov
hlt
and
sbb
sbb
xor
mov
std
cmps
adc
and
adc
nop
add
lock
dec
sbb
mov
aad
cmp
jno
and
xchg
shr
xor
fcom
cs
dec
imul
push
mov
test
lock
sub
pop
pop
mov
add
and
pop
cmp
cs
dec
sub
or
into
in
or
adc
cwde
cmps
je
enter
das
sar
adc
jnp
lea
xchg
xchg
gs
retf
add
jmp
jecxz
fcmovne
or
fdivr
bnd
or
(bad)
push
call
cmp
icebp
rcl
lea
shl
add
shl
and
adc
pop
mov
shl
rcl
(bad)
and
lods
es
mov
fcom
imul
or
push
inc
cmps
pop
dec
add
pushf
jge
jbe
xchg
call
mov
sbb
mov
das
ins
mov
sub
movs
inc
dec
movs
shl
movs
test
mov
push
add
es
and
or
pop
je
cmp
push
xlat
les
clc
add
out
fwait
je
ins
adc
ror
sar
and
pop
or
call
or
push
add
add
or
push
jmp
push
(bad)
ss
bound
jae
es
mov
cmp
adc
outs
pop
xor
jmp
mov
hlt
repnz
in
test
es
mov
cmp
jg
fild
fwait
cmp
push
mov
ins
lods
and
mov
imul
adc
sub
sbb
es
ja
inc
jmp
xchg
lahf
bound
xchg
aad
ja
add
(bad)
sub
sbb
pusha
xor
stos
add
and
sbb
push
ret
lods
ficom
xchg
sbb
ror
nop
dec
or
leave
rcl
add
jnp
leave
or
pushf
mov
or
cdq
or
add
or
test
int3
imul
mov
jmp
jns
pop
(bad)
mov
rol
icebp
cmp
jp
or
adc
inc
pop
dec
mov
mov
sbb
mov
add
pusha
bound
mov
pusha
adc
xor
xor
pop
pop
inc
pop
jl
call
fmul
xchg
jns
or
pop
test
test
loopne
lds
rcl
sub
inc
sbb
mov
lahf
dec
xchg
fst
jecxz
jnp
inc
and
fadd
push
mov
pushf
cmp
sbb
je
inc
movs
mov
mov
in
movs
stos
mov
movs
mov
mul
jno
sub
test
mov
adc
or
mov
lods
ins
pop
cmp
mov
stc
add
cwde
push
out
lahf
shr
sbb
mov
inc
push
jae
push
scas
pop
mov
push
pop
cs
push
inc
sub
or
add
push
mov
add
inc
pop
mov
add
dec
fisttp
add
nop
dec
xchg
mov
ror
add
pop
xor
and
xlat
sbb
(bad)
mov
js
dec
cmp
sub
mov
mov
mov
and
push
add
dec
cmp
bound
inc
jbe
repnz
dec
jnp
pop
fiadd
gs
push
push
ins
cmp
xor
and
nop
and
push
cmc
pop
sub
inc
daa
adc
adc
(bad)
push
lods
mov
jge
call
or
dec
rcl
add
adc
or
sti
inc
les
je
and
jno
xor
sub
lock
pop
movs
cdq
loope
popf
les
fmul
fs
push
adc
push
enter
es
mov
mov
push
adc
retf
adc
pop
(bad)
push
rcl
in
xor
mov
push
ss
(bad)
shl
and
aad
xchg
inc
test
add
jo
shr
inc
dec
lea
or
inc
movs
or
fcom
inc
or
push
dec
cmp
stos
rcl
pop
push
mov
inc
jno
idiv
cmps
pop
xor
pop
add
pop
inc
loop
mov
adc
loop
rol
loopne
mov
jl
mov
mov
ror
sub
and
cwde
out
or
adc
push
repz
fimul
and
sbb
loope
xchg
push
mov
mov
jge
nop
push
pop
xor
dec
ret
test
data16
fstp
sub
push
dec
pop
fst
sub
icebp
jne
dec
mov
push
(bad)
cs
mov
je
or
sub
mov
daa
or
inc
inc
xchg
adc
cs
dec
bound
jle
add
mov
test
shl
adc
jg
push
fadd
mov
pop
jbe
sbb
mov
or
popa
push
pop
dec
sbb
adc
icebp
fadd
clc
push
stos
mov
sbb
shl
nop
xchg
cmps
xchg
pop
dec
lods
add
sbb
ret
adc
xchg
add
clc
ds
xor
mov
in
add
mov
dec
push
inc
xchg
push
mov
mov
or
cmps
sub
aaa
(bad)
ins
dec
js
icebp
(bad)
sbb
jb
mov
mov
add
popf
xchg
fisttp
cmp
dec
clc
int
sub
cmps
push
in
or
dec
fwait
ror
loope
daa
add
mov
adc
mov
shl
shl
sub
test
add
(bad)
ins
dec
fucomi
inc
sbb
cmps
sar
mov
push
xlat
lods
fld
jae
add
sub
dec
stos
ins
sub
jne
sub
push
add
ins
lock
out
imul
movs
or
adc
add
or
jne
mov
inc
(bad)
cmps
xor
mov
loope
cmp
retf
(bad)
fdivr
mov
push
adc
loope
add
js
outs
xor
push
movs
cli
(bad)
xor
rol
xchg
rol
inc
pop
cmp
jne
mov
adc
test
or
loopne
mov
and
and
sub
cmp
imul
push
ret
push
xor
sub
mov
jae
cmp
mov
test
add
dec
daa
jo
lods
inc
push
aam
mov
popa
mov
jno
pusha
add
jmp
enter
jmp
mov
pop
add
or
mov
adc
adc
mov
inc
nop
retf
sbb
xchg
loope
sbb
adc
sub
adc
jecxz
clc
xchg
or
mov
aas
add
je
shl
pop
nop
sbb
dec
mov
and
test
xor
dec
inc
mov
pop
cmp
sbb
punpckhbw
and
dec
cmp
xchg
dec
cmp
push
stc
jo
mov
jle
push
add
popf
into
js
adc
in
sbb
clc
sbb
stc
adc
xor
jp
pop
sbb
push
scas
sbb
adc
push
pop
xchg
je
push
add
or
or
inc
stos
stos
stos
add
or
(bad)
repz
xchg
push
xor
out
pop
sbb
jo
add
out
xor
stos
les
cmp
or
add
cmc
or
sar
fs
mov
pop
pop
add
imul
and
adc
and
sbb
sbb
adc
push
sub
ja
loop
rcr
push
mov
std
jmp
and
js
jb
xor
(bad)
mov
ins
inc
dec
sbb
lods
sbb
adc
and
cmp
mov
cmp
push
xor
ret
aam
add
add
mov
mov
sub
ins
cmp
or
lds
nop
movs
arpl
push
lods
or
sub
leave
sbb
js
or
je
inc
ins
sub
test
test
popa
or
pop
sub
jo
(bad)
xchg
or
inc
into
jne
xor
jmp
sbb
push
or
cmp
xchg
inc
shr
je
adc
or
jle
pop
push
inc
mov
or
(bad)
adc
clc
or
adc
adc
xor
add
pushf
sub
xor
pushf
xor
dec
and
push
add
mov
xchg
mov
dec
add
mov
mov
dec
imul
sbb
add
adc
data16
push
int
add
xchg
sub
sub
sti
add
aaa
jg
adc
pop
xchg
or
rcl
shl
nop
pop
es
jp
or
lock
cwde
push
cmp
xchg
fsubr
adc
adc
mov
lock
leave
and
sub
jl
shl
cmovp
or
dec
inc
inc
loopne
mov
dec
cmp
cmp
gs
js
ins
or
and
jmp
adc
jbe
or
add
sbb
mov
imul
fs
sub
dec
mov
pop
das
sbb
add
jae
mov
scas
push
sbb
popa
push
and
lea
cmp
jl
inc
jbe
ins
sbb
push
pop
dec
jmp
das
popa
sbb
dec
loope
jo
fdivr
pop
and
pushf
fstp
and
push
fs
sbb
sub
in
push
push
and
mov
push
inc
add
(bad)
mov
lahf
or
aaa
pop
and
jb
jle
int3
xor
js
cs
push
jb
mov
adc
mov
dec
mov
and
adc
adc
xchg
adc
pop
je
lahf
movs
in
add
and
stos
or
ins
sbb
add
dec
inc
dec
mov
or
popa
(bad)
fidivr
iret
cmps
mov
push
jns
or
cmp
jne
and
sbb
and
dec
aam
add
sub
xor
add
mov
mov
inc
jne
push
fs
lea
jmp
or
push
sbb
mov
add
sub
popf
sbb
cmp
adc
ss
adc
mov
mov
add
cwde
add
pop
psrad
adc
and
das
dec
inc
push
rol
xchg
add
push
dec
or
xchg
call
push
jle
inc
ins
xchg
pop
pusha
sub
jae
xchg
fwait
cmp
xchg
outs
inc
leave
popa
arpl
mov
in
test
add
or
lds
add
xchg
test
aad
add
or
or
leave
(bad)
push
mov
mov
push
retf
pop
mov
mov
add
jle
push
fld
inc
xchg
addr16
loopne
pop
mov
push
int3
jle
div
xlat
cmps
clc
push
pop
cwde
or
es
cmp
(bad)
out
or
sub
inc
push
sub
(bad)
sbb
xchg
add
fbstp
inc
jge
repnz
sub
or
and
jl
mov
xor
or
cdq
add
rol
sar
or
or
jae
or
nop
fldenv
xor
dec
mov
stos
mov
movs
icebp
pop
sub
mov
ss
cmp
and
adc
push
cli
xor
sub
cli
fsub
push
scas
jo
(bad)
adc
stos
sub
jg
sbb
inc
push
mov
push
push
cmps
adc
sub
(bad)
enter
inc
loop
mov
or
in
data16
add
sbb
std
adc
add
ffree
inc
jecxz
mov
sbb
add
sahf
(bad)
clc
in
aam
push
mov
jne
pusha
sub
dec
or
dec
xchg
and
xchg
cmp
push
pop
xchg
xor
aam
mov
adc
and
cs
sub
or
test
sub
mov
push
push
cmp
(bad)
movs
sub
xor
xchg
nop
sbb
or
mov
push
or
jno
lock
jmp
pusha
pop
or
mov
js
aaa
ins
mov
xchg
jo
mov
adc
or
(bad)
cmp
dec
pop
push
jge
mov
stos
add
add
rcr
leave
sbb
cmp
gs
xchg
pop
cmp
or
scas
mov
adc
sub
inc
jp
xor
jne
out
push
or
add
sub
sbb
and
daa
cmp
push
and
sbb
loop
cmp
dec
fwait
rol
movs
pop
add
inc
les
add
ins
or
hlt
xchg
js
lods
jp
shl
and
mov
add
xchg
fwait
cmp
test
jp
dec
addr16
sub
sti
lahf
jb
mov
mov
enter
sub
add
inc
mov
sbb
or
test
fld
push
les
popf
jle
jmp
inc
in
mov
pop
xchg
inc
or
or
sbb
push
imul
push
adc
jo
mov
mul
jl
mov
scas
jo
mov
div
sbb
inc
push
push
lock
push
adc
jge
sahf
test
int
or
out
sub
add
leave
pop
loopne
clc
xchg
lock
scas
arpl
rcl
mov
loope
jmp
or
push
call
add
cli
or
mov
and
add
dec
and
je
nop
push
stos
inc
mov
xor
pop
push
jmp
sbb
je
xchg
bound
ja
push
and
cli
loope
jmp
bound
adc
adc
loop
add
test
and
and
or
repz
ficom
pop
add
lea
sub
mov
pushf
add
and
dec
(bad)
cmp
retf
psraw
or
or
or
adc
sub
lock
add
jmp
push
daa
inc
leave
and
fstp
stc
mov
jne
std
add
pop
imul
jns
cmp
fsub
pushf
cmp
sub
movs
pop
or
cmps
movs
push
popa
icebp
add
adc
loopne
cld
mov
iret
mov
fild
sbb
pop
sub
ss
lock
dec
push
inc
imul
popa
popa
(bad)
rol
fdivr
push
jmp
adc
jo
mov
add
jmp
add
test
rol
jl
mov
sbb
jae
xchg
dec
push
cmp
shl
jo
mov
and
xchg
cmp
or
sbb
xor
fnstenv
cmp
dec
ss
xchg
add
aam
xchg
lock
inc
rol
fcom
push
loope
popa
fsubr
fnsave
enter
add
lock
or
enter
sbb
clc
fmul
stc
and
push
add
hlt
ss
shr
or
pop
nop
pushf
rol
pop
and
test
inc
adc
inc
adc
rcl
sbb
mov
dec
mov
sbb
sub
pop
xchg
xchg
xchg
test
pop
xor
ins
inc
xor
movs
cmps
imul
mov
test
dec
das
nop
nop
in
xor
rcr
adc
inc
es
xchg
sbb
add
push
mov
sbb
aam
cmp
jmp
jge
scas
add
bound
jnp
inc
adc
xchg
and
dec
mov
or
mov
dec
call
fsub
sbb
js
or
dec
xor
fidiv
push
sub
push
mov
adc
inc
and
lds
shr
pushf
pop
enter
mov
int3
xbegin
fdivr
jl
push
shl
xlat
aad
jne
rol
push
lock
inc
and
loop
mov
inc
shr
pop
ss
test
adc
jle
add
sbb
pop
and
add
repnz
cs
call
loopne
mov
push
sbb
jno
or
scas
sbb
jge
lea
in
fcmovnbe
mov
mov
or
mov
hlt
xor
push
sbb
sub
or
clc
cmc
iret
push
or
add
ret
pusha
jns
repnz
or
mov
icebp
add
pop
xchg
cmp
shl
mov
movs
push
mov
clc
xor
and
enter
js
ins
loop
adc
sahf
aas
movs
add
cmp
add
aas
xchg
add
xchg
dec
sahf
mov
mov
pop
popf
inc
add
xor
sar
in
sub
add
add
push
rcr
int3
int
push
cdq
mov
add
push
push
inc
add
imul
jno
mov
popf
(bad)
cmps
and
add
dec
int3
fcomp
jmp
inc
add
ins
(bad)
loopne
test
push
push
and
fisttp
push
cmp
dec
jmp
rcr
push
push
aaa
add
inc
pop
mov
sub
mov
hlt
dec
or
xchg
sbb
les
arpl
sbb
push
arpl
sub
mov
sbb
and
or
fwait
jns
adc
mov
(bad)
sbb
adc
sbb
sub
movs
pop
inc
test
or
add
mul
xchg
inc
mov
mov
or
test
sub
inc
adc
pop
and
mov
push
sub
add
sub
dec
xchg
add
xchg
ins
sbb
add
loopne
or
in
push
lock
aas
cwde
and
jns
mov
pop
call
and
scas
nop
retf
add
push
dec
gs
add
and
mov
ins
or
pop
jb
pop
sbb
xchg
add
inc
and
retf
and
aam
and
or
xchg
icebp
jmp
sar
pop
(bad)
push
mov
iret
xor
and
fisttp
push
push
inc
inc
push
mov
pop
xor
aaa
sub
cmp
cmp
ror
std
mov
shr
pop
rol
add
push
mov
jmp
or
repz
call
inc
add
(bad)
jmp
add
push
rcl
mov
sub
cs
add
pause
inc
inc
add
rol
pop
add
adc
mov
or
sub
jle
int
in
push
ficom
or
sub
inc
fld
jl
loopne
sub
sbb
mov
and
shl
add
or
mov
add
or
add
or
sbb
and
push
cmp
cmp
adc
scas
adc
push
cwde
push
(bad)
out
fild
xlat
lea
pop
jno
js
test
scas
push
dec
inc
push
inc
sbb
loopne
std
xor
xor
add
sbb
retf
sub
rol
sub
fs
push
jne
xchg
sub
sub
rcr
and
addr16
pop
test
sub
iret
sub
xchg
pop
adc
inc
daa
pop
xchg
js
lods
inc
mov
arpl
or
in
frstor
or
add
mov
and
enter
add
or
xor
pop
or
mov
lods
inc
mov
cmp
lahf
lea
mov
jns
or
outs
mov
inc
mov
jmp
mov
(bad)
dec
pop
fst
pop
enter
adc
adc
or
jns
jne
nop
aaa
add
ret
cmp
pop
test
push
xchg
das
cmps
retf
aaa
pop
jmp
push
loopne
pop
repnz
push
cmp
ins
ret
or
je
adc
jne
push
ror
fst
out
pop
test
dec
jo
cmp
mov
adc
test
jae
enter
sub
xchg
push
(bad)
mov
or
mov
adc
sub
ret
nop
mov
fsub
xor
add
jg
and
sbb
mov
lea
sbb
sub
popa
jecxz
cmp
sub
xor
test
add
sbb
add
mov
shl
aad
cmp
bound
mov
sbb
mov
sub
mov
push
in
add
sub
das
std
or
dec
or
gs
and
mov
push
cmp
mov
add
rol
push
enter
es
or
jb
ror
pop
dec
push
cmp
mov
or
rcl
push
(bad)
dec
or
sbb
ins
mov
xchg
push
sub
leave
loope
lock
mov
test
and
sbb
int3
pop
call
sbb
or
stos
ds
or
sub
inc
sbb
bound
data16
sub
add
add
push
not
pop
jne
push
pop
je
pusha
or
mov
mov
and
repz
push
cmp
dec
blci
ror
pop
or
add
inc
mov
aas
mov
xor
mov
les
out
jg
add
cmp
js
mov
add
sbb
add
mov
test
jmp
cmpps
mov
and
pop
mov
and
adc
in
jne
add
cmp
mov
jle
and
mov
add
cmp
push
sbb
(bad)
xlat
movs
sub
gs
and
add
push
repnz
popa
ror
jo
nop
adc
jge
call
je
ret
rol
dec
mov
movs
test
inc
cmp
and
inc
add
loopne
and
push
cmp
test
xor
xchg
or
shl
sbb
icebp
mov
cdq
into
das
inc
pushf
lahf
and
ret
mov
cmp
jb
and
mov
cmp
fcmovb
add
dec
add
add
pop
fidivr
or
pop
and
fs
icebp
jecxz
shl
pop
(bad)
and
ret
(bad)
pop
test
inc
inc
je
das
add
js
mov
sar
jmp
push
pop
test
sbb
push
das
lods
fmul
inc
xlat
or
(bad)
push
adc
push
xor
sub
nop
add
push
or
das
jmp
pop
sbb
mov
pop
ret
loopne
(bad)
xor
sub
adc
test
or
je
push
pusha
not
mov
dec
in
out
fimul
inc
dec
cld
sub
movzx
push
push
cmp
pop
or
lock
je
push
push
ret
je
shl
mov
leave
xchg
rcl
outs
sbb
add
adc
mov
pop
push
je
movs
pop
shl
inc
push
jno
and
sub
cmp
xor
loope
inc
jge
jne
and
arpl
sub
fs
out
xchg
mov
outs
mov
fcom
jbe
dec
jle
sub
xchg
and
mov
arpl
ss
pop
lahf
pop
xor
inc
lea
imul
cwde
(bad)
push
adc
fst
sbb
fcomp
in
dec
inc
cmp
push
retf
sub
test
mov
dec
or
mov
jmp
ret
jbe
aaa
inc
mov
jbe
and
mov
cmp
je
jmp
clc
leave
sbb
(bad)
mov
push
mov
out
test
out
push
mov
and
stc
imul
inc
cmp
adc
inc
inc
out
or
mov
jmp
push
xlat
loope
dec
or
add
(bad)
fldenv
adc
fcomp
mov
mov
xor
xchg
out
add
out
scas
or
or
or
adc
mov
mov
mov
aas
dec
pop
or
mov
test
add
xor
push
cs
jb
and
xchg
push
xor
push
loop
push
loopne
push
dec
fs
in
lods
jne
or
xor
jnp
jb
mov
or
mov
(bad)
mov
pop
xor
jo
sub
adc
cld
mov
(bad)
imul
call
inc
sbb
adc
xor
sub
loopne
mov
arpl
scas
loopne
les
mov
lock
inc
or
jo
jne
inc
pop
jo
jmp
daa
nop
and
mov
push
dec
inc
add
mov
rcl
sub
or
aam
mov
les
pop
aaa
arpl
inc
add
lock
dec
xchg
push
xor
jge
fbld
pusha
inc
add
sub
test
pop
push
mov
clc
or
pop
cmp
sbb
imul
dec
ja
aas
cmps
repnz
fs
sub
cld
inc
imul
les
push
push
mov
sbb
fistp
lahf
push
push
sbb
(bad)
and
push
xchg
xchg
sub
test
inc
pusha
(bad)
push
cmc
push
pop
stos
sub
or
lea
mov
inc
rol
pop
xor
or
data16
sbb
mov
and
push
cmps
adc
mov
ja
sub
inc
stos
ret
icebp
ins
inc
sar
fwait
and
ror
leave
leave
sub
pop
cwde
adc
pop
xlat
cmp
aaa
fsubr
add
in
xor
rol
inc
jmp
lods
xor
imul
add
sbb
pop
mov
retf
push
pushf
add
fnstcw
repnz
push
pop
add
hlt
inc
mov
jne
push
les
mov
jg
ret
adc
dec
inc
xor
nop
sbb
push
xchg
cmp
inc
pop
cmc
push
mov
and
mov
or
add
mov
jnp
push
push
add
(bad)
repz
jle
adc
adc
jle
lds
push
sub
adc
stc
push
cld
aam
mov
cmp
cdq
daa
pop
mov
xchg
ret
pop
push
das
gs
std
add
bound
ret
pop
xor
sbb
lahf
or
mov
fiadd
or
aas
push
push
xchg
add
mov
cs
test
sbb
aam
or
or
lods
mov
pop
sbb
cmp
mov
jge
test
inc
xchg
or
popf
rcr
stc
jo
nop
pop
cwde
lea
nop
xor
pop
pushf
mov
mov
in
push
or
fsub
pop
and
sub
push
mov
or
das
hlt
jnp
dec
or
nop
jno
mov
xchg
or
cmp
push
or
adc
and
les
enter
call
ffree
ret
or
rcr
loop
retf
pop
mov
lea
mov
inc
mov
or
adc
mov
in
(bad)
mov
and
je
test
das
xor
xor
push
movs
push
fcos
cli
cwde
pop
repnz
in
enter
test
mov
dec
les
cmp
sti
xor
js
cmp
sub
and
jb
pinsrw
loopne
out
test
ret
and
mov
adc
or
sbb
test
cmp
xchg
sbb
fdivr
aas
inc
cli
mov
add
xor
and
mov
call
les
push
xor
and
mov
dec
adc
push
inc
lahf
shl
add
add
xchg
sub
sub
sub
call
sbb
mov
and
imul
add
dec
pop
adc
add
add
pop
lds
mov
loopne
xor
int
sbb
cmp
sar
lods
arpl
sbb
push
adc
and
xor
add
adc
xor
add
pop
rol
inc
pop
repz
xlat
shl
dec
fwait
mov
pop
cmp
push
jo
pop
sbb
mov
lahf
add
je
cs
and
jo
ins
mov
lea
dec
fisttp
cmps
xchg
add
fistp
adc
push
sub
add
rol
leave
push
mov
dec
lock
js
dec
xchg
jo
sbb
shl
fisttp
and
ins
test
push
inc
ret
dec
aas
add
movs
repnz
aam
sbb
dec
inc
sub
inc
mov
ror
aam
and
xor
enter
xor
in
xchg
xchg
xchg
stos
stc
or
or
xchg
sbb
mov
jbe
sub
fild
mov
ds
out
nop
ds
inc
push
jne
xchg
les
and
loopne
dec
xchg
and
mov
in
lods
call
shl
ds
ins
cmps
mov
add
scas
sbb
fsub
in
in
push
es
dec
stc
push
ins
stos
inc
cmp
cmp
ret
xchg
sub
cmp
jne
push
jnp
push
bnd
and
dec
push
mov
add
les
test
cdq
imul
bound
pop
pop
sbb
pop
push
and
outs
or
xlat
rcl
lods
mov
ds
mov
clc
sbb
cmc
call
mov
and
mov
ror
movs
lock
adc
je
push
push
mov
adc
add
mov
pop
inc
test
adc
adc
inc
sbb
adc
xor
fild
dec
inc
push
jbe
and
rcr
inc
pcmpeqb
inc
mov
mov
or
mov
mov
or
call
les
repnz
out
les
test
add
add
ret
rcl
jmp
jg
xor
movs
dec
(bad)
pushf
push
add
sub
mov
push
nop
jecxz
lods
pushf
dec
push
fcomp
inc
dec
jg
imul
push
pushf
std
mov
iret
add
mov
shl
mov
rol
mov
or
pop
sbb
mov
sbb
pushf
inc
dec
icebp
add
nop
push
mov
ret
test
sub
mov
nop
dec
xchg
mov
in
mov
fwait
shl
sub
sbb
push
or
arpl
mov
movs
arpl
adc
adc
call
popa
adc
test
adc
or
sbb
lock
add
nop
pusha
adc
inc
inc
int
int3
cmp
dec
lock
push
mov
rcr
cld
daa
adc
or
inc
xchg
cmp
add
adc
mov
add
jne
inc
in
xchg
movs
rol
loopne
mov
sub
xchg
mov
shr
fcmovne
aaa
arpl
sbb
mov
retf
jnp
movs
xor
mov
xchg
outs
dec
aam
rcr
lds
jo
rcl
ja
fiadd
int3
mov
sbb
push
pop
pop
sub
inc
dec
les
dec
enter
scas
push
xor
or
popa
mov
jmp
call
mov
xor
sub
dec
rcr
mov
(bad)
mov
push
test
mov
mov
dec
mov
mov
mov
ins
sbb
dec
jmp
mov
xor
add
dec
push
jae
and
adc
mov
jns
not
jmp
push
(bad)
jmp
pusha
(bad)
add
dec
mov
push
sub
sbb
jmp
out
loope
js
jmp
jle
jb
ret
stos
dec
daa
jno
xchg
xchg
into
jne
pop
jae
add
jp
test
mov
fs
ret
push
stos
dec
adc
dec
pop
inc
pop
or
hlt
xor
push
rcl
rol
adc
nop
scas
pop
adc
aam
adc
mov
dec
inc
(bad)
push
mov
test
fstp
test
in
iret
add
imul
in
and
frstor
sahf
sbb
xchg
call
sub
add
call
and
sbb
daa
mov
int
test
cmp
add
pop
push
mov
or
inc
pop
dec
sub
jne
jbe
mov
ins
mov
mov
nop
in
loope
jne
or
mov
and
fwait
arpl
mov
(bad)
dec
(bad)
(bad)
aaa
or
mov
rcl
pop
add
repz
mov
xor
jb
xor
and
add
jno
adc
or
sub
xlat
pushf
or
jmp
add
or
sahf
add
ror
sub
or
jns
push
in
shr
shr
sbb
pop
mov
push
ja
stc
sahf
add
scas
rcl
or
adc
retf
mov
mov
test
movs
das
loop
fist
push
push
xor
fnstsw
bound
push
call
rol
lds
sub
shr
adc
adc
fdiv
and
and
test
inc
add
adc
fcomp
repz
mov
es
pusha
jo
mov
leave
push
punpckhdq
push
or
dec
pop
push
dec
push
mov
jbe
fldcw
ret
sub
jg
movs
rcr
mov
pop
and
jl
mov
or
add
ror
inc
xlat
adc
cwde
adc
sbb
adc
sbb
fidivr
call
mov
add
sti
or
hlt
shl
stos
fdiv
repz
sub
test
xor
adc
push
push
xchg
cmp
arpl
aaa
or
cmp
lds
addr16
test
lods
sbb
and
sbb
add
sub
enter
imul
dec
add
fstp
or
jle
and
stos
add
es
ss
adc
mov
and
push
inc
js
dec
(bad)
iret
and
pop
cmp
add
inc
mov
jg
xor
mov
jnp
jle
dec
jo
push
adc
sub
pop
(bad)
adc
lea
sbb
mov
ret
clc
mov
rcr
push
and
adc
movs
aad
or
shl
ja
mov
arpl
pop
loope
loopne
mov
adc
inc
cmp
jo
mov
mov
retf
rol
pop
mov
outs
dec
pop
adc
xchg
pusha
add
adc
mov
inc
and
and
fadd
and
cvtps2pd
in
test
call
add
mov
sbb
sub
cli
adc
in
sbb
(bad)
mov
fistp
sbb
hlt
jge
and
into
aas
and
jp
mov
jg
aaa
inc
dec
inc
call
pop
xor
imul
cwde
das
js
lock
add
and
retf
shl
sbb
and
inc
(bad)
in
sahf
lods
sti
dec
fisttp
inc
xor
mov
add
lock
shl
sub
retf
adc
mov
and
sbb
popf
add
inc
sbb
pop
jb
pop
loopne
push
mov
and
mov
mov
mov
fsubr
jnp
in
xor
xchg
adc
pop
xor
sub
sbb
cmps
xor
cmp
rcl
xchg
aam
mov
inc
arpl
fisubr
pop
pusha
mov
jg
fadd
pop
aam
nop
mov
aam
dec
mov
test
sar
push
fsub
lea
loop
add
jmp
add
cmp
xor
inc
push
bound
dec
add
movs
clc
pop
mov
jnp
pop
xor
jge
cmps
adc
mov
popf
popa
shr
add
add
sub
outs
ficomp
sub
mov
sti
retf
in
out
xor
sbb
mov
or
xor
mov
fs
xor
fsub
xor
sub
daa
cmps
pop
cwde
push
inc
sub
dec
pop
mov
enter
inc
dec
or
or
add
mov
dec
mov
dec
out
sbb
fldenv
dec
clc
and
js
pop
jnp
dec
inc
mov
adc
xchg
or
xchg
lods
mov
lahf
xchg
mov
add
push
sub
pop
jns
dec
sbb
call
mov
push
cmps
lock
push
outs
loope
mov
popa
jo
mov
(bad)
lds
ja
or
jne
aaa
test
sbb
pop
and
mov
fsub
push
pop
enter
or
and
mov
jne
pop
bound
lods
cmp
enter
inc
and
mov
and
cs
add
sub
add
fadd
jmp
adc
cmp
in
push
push
push
pop
loopne
inc
jl
xor
mov
pop
test
add
les
sub
nop
call
sub
(bad)
jnp
and
inc
sbb
adc
mov
int
inc
cmp
cmp
addr16
xchg
cmp
and
sub
adc
push
(bad)
sub
add
pusha
push
stos
shl
fnstcw
mov
adc
pop
out
in
add
dec
je
inc
js
add
faddp
mov
push
jne
sti
sbb
jnp
xchg
mov
mov
mov
or
sbb
push
xchg
(bad)
call
ins
nop
aaa
dec
pusha
movs
fdivr
xchg
int3
adc
movs
push
leave
jo
dec
(bad)
xchg
xchg
nop
aad
sbb
and
mov
psraw
or
nop
mov
sub
int
jo
scas
mov
mov
mov
(bad)
fdivr
sub
cmp
sub
es
add
cs
inc
xchg
pop
rol
xchg
icebp
or
push
inc
popa
inc
jge
movs
icebp
and
stc
sbb
dec
jns
fldcw
sub
push
test
and
inc
sub
stos
mov
xchg
outs
push
inc
ret
push
add
and
ficom
push
pushf
dec
clc
icebp
inc
or
stos
inc
add
and
xchg
jmp
sti
push
dec
jmp
sub
sbb
pusha
and
jecxz
lea
sbb
cmps
call
add
loopne
loope
pop
shr
aam
push
mov
mov
(bad)
jnp
jecxz
mov
je
dec
fsubr
loope
push
bound
mov
xchg
sbb
arpl
sahf
cli
inc
add
mov
sbb
sahf
in
fmul
xchg
test
aas
add
adc
popa
push
push
lea
mov
or
push
retf
dec
cmp
sbb
imul
mov
push
popa
test
movs
imul
xor
mov
and
lea
jp
imul
push
push
scas
sub
add
xor
je
push
xchg
inc
imul
test
jle
and
clc
sar
cmp
adc
dec
push
ss
pop
cmp
mov
fst
inc
mov
cdq
mov
cmp
jno
hlt
and
push
enter
frstor
in
xchg
mov
daa
jl
popf
pusha
(bad)
repnz
fst
mov
pop
movs
mov
xrelease
or
adc
pusha
add
mov
icebp
ins
xchg
xchg
cmp
ss
je
aaa
enter
sub
gs
push
pop
dec
jne
push
jo
imul
(bad)
push
jo
xchg
pop
popa
pop
cmp
xor
push
cwde
ss
push
jmp
in
xor
inc
outs
out
fimul
popa
push
dec
adc
popa
mov
inc
and
mov
aaa
cmp
mov
adc
js
aad
sub
call
push
dec
add
cmc
push
or
mov
mov
xchg
mov
lock
cmp
je
cmp
add
or
or
or
push
add
das
arpl
cmp
pop
iret
mov
sub
mov
jecxz
fisubr
push
dec
cmovne
sbb
push
jg
into
imul
ret
push
shl
and
(bad)
loop
mov
mov
jp
push
iret
mov
cmp
adc
mov
add
mov
cmp
rcr
pusha
fadd
mov
test
adc
and
test
iret
clc
sbb
push
test
movs
inc
add
xor
cmp
adc
pop
or
xchg
ret
pop
sub
pop
std
push
imul
test
push
inc
fsub
imul
sbb
outs
fnsave
rcl
call
movs
lea
jne
inc
sbb
xchg
cmp
adc
fld
unpcklps
mov
and
or
jmp
push
dec
cmp
or
pop
adc
push
dec
hlt
sbb
mov
inc
cmp
mov
mov
dec
pop
clc
and
or
add
fdiv
(bad)
mov
js
push
mov
rol
add
and
mov
inc
push
clc
cmp
idiv
fmul
lea
rol
pop
(bad)
shr
mov
(bad)
cli
and
or
add
jge
lea
ror
add
cmp
aaa
xchg
(bad)
fnstenv
xlat
or
cmp
mov
js
out
into
mov
retf
out
pop
addr16
xlat
and
sub
(bad)
cmc
in
data16
xor
retf
dec
cmp
cld
mov
add
icebp
mov
inc
rol
mov
xchg
(bad)
inc
and
repz
inc
xor
xor
sti
mov
or
mov
test
xchg
inc
std
repz
retf
cwde
outs
inc
and
not
and
or
add
retf
loopne
add
sub
fxam
cmovl
jnp
hlt
adc
fld
lods
ja
dec
aas
sub
mov
add
pop
mov
and
jl
shr
and
pop
shl
mov
cmc
pusha
(bad)
pmaxsw
add
clc
and
nop
imul
xor
xor
jno
std
sbb
daa
mov
ror
xor
jl
cmp
dec
clc
dec
imul
adc
adc
push
push
fmul
xchg
and
mov
scas
adc
add
xchg
add
and
adc
ja
and
inc
push
(bad)
jo
ins
mov
pop
sbb
inc
mov
rol
add
pop
mov
push
add
push
pop
pop
es
pusha
push
adc
sbb
xchg
jmp
cmp
stos
(bad)
mov
je
push
mov
push
call
pop
adc
(bad)
xchg
sbb
or
sbb
push
sbb
push
adc
add
ds
xchg
(bad)
cmp
out
fsubr
inc
xchg
cmc
lock
std
mov
sti
shl
pop
std
and
ret
cmp
out
loope
cmp
adc
xor
(bad)
pop
aaa
ret
or
cmp
xchg
adc
inc
inc
outs
cs
cmp
xor
jmp
jecxz
cmc
shl
cmp
enter
cld
in
add
sbb
add
mov
xor
or
dec
sub
pusha
xchg
adc
and
and
or
cli
push
add
dec
aad
mov
div
adc
sti
ins
(bad)
into
xor
pusha
sub
(bad)
mul
popa
popf
ins
ret
clc
mov
adc
fild
jb
stc
aaa
xlat
xchg
hlt
dec
out
or
in
mov
or
mov
cli
add
jmp
(bad)
int3
fidiv
adc
int3
test
in
xchg
dec
jmp
in
leave
nop
jl
pusha
dec
mov
mov
imul
icebp
pop
aam
add
iret
ffree
jle
mov
cdq
mov
xor
cli
daa
mov
es
dec
xlat
in
test
out
aam
cld
popf
sbb
(bad)
cld
add
das
sbb
and
mov
(bad)
jecxz
xor
mov
out
stos
xor
outs
jecxz
push
inc
loop
out
jg
add
jl
pop
rol
(bad)
xor
adc
out
in
cs
(bad)
fisubr
call
inc
and
hlt
ret
sar
push
mov
fcmovb
outs
xchg
jmp
inc
jmp
(bad)
sar
loopne
dec
mov
xchg
stos
psubusw
(bad)
iret
xor
cmp
ret
and
in
pop
gs
xchg
int3
or
cwde
fyl2xp1
jae
jge
out
push
bnd
in
dec
and
in
test
hlt
loopne
sub
mov
adc
add
or
int3
cmp
lahf
or
sti
les
dec
or
mov
retf
xlat
sub
inc
adc
mov
test
jp
push
mov
sahf
push
xor
out
pop
mov
adc
rol
or
and
or
mov
int
adc
fdivr
xor
jbe
(bad)
or
int3
mov
nop
retf
sbb
or
jae
inc
mov
sbb
lea
adc
jle
sub
repnz
dec
fcomp
or
test
xchg
ss
mov
sar
sub
std
ins
dec
outs
out
add
imul
cmp
sbb
jmp
clc
or
inc
jp
cmp
adc
repz
test
js
sbb
cmp
jecxz
or
shl
add
xchg
mov
and
rol
inc
das
inc
xlat
outs
hlt
or
cs
out
neg
add
cmp
and
inc
repnz
or
ret
mov
lahf
push
not
jmp
mov
mov
or
pop
mov
push
xchg
or
mov
into
adc
xchg
(bad)
mov
inc
hlt
xchg
lock
mov
(bad)
cmp
mov
not
ins
shr
jbe
hlt
and
push
hlt
mov
out
add
inc
cmp
cmp
dec
clc
or
fnstenv
stc
mov
mov
jae
aad
add
add
or
adc
fwait
jo
leave
(bad)
dec
call
ja
jb
push
or
cs
jmp
mov
call
fnstcw
in
adc
ret
and
adc
in
loopne
xlat
repnz
dec
ins
jo
push
jl
mov
sbb
repz
fcmovnbe
and
cli
cdq
sbb
or
sbb
cmp
int
mov
xor
mov
test
das
icebp
lea
mov
ins
and
inc
sub
pop
loope
and
rcl
cmps
stc
pop
and
sub
cs
dec
or
nop
xlat
ret
loope
pop
xor
inc
sbb
jno
push
or
sub
sbb
or
sbb
adc
adc
sahf
das
sub
pop
ret
sar
push
mov
sbb
sub
adc
mov
inc
and
dec
sbb
jo
int3
push
arpl
sub
xor
sub
add
jo
les
(bad)
pop
cmp
add
add
daa
hlt
inc
in
lods
mov
sbb
push
in
add
pop
mov
xchg
push
nop
js
add
loope
or
cmp
dec
or
sbb
xor
pop
cld
mov
jb
hlt
cmp
xor
or
test
pop
out
mov
and
out
lock
inc
push
cmp
ret
jg
or
add
ins
adc
pop
bound
push
int3
mov
in
outs
push
pop
iret
loopne
icebp
xor
loop
sub
loop
dec
xor
repnz
dec
shl
clc
pop
pop
mov
mov
and
movs
loop
push
(bad)
ds
xchg
push
or
mov
inc
dec
mov
jb
lock
arpl
mov
mov
je
or
jle
imul
and
inc
fiadd
jp
add
xchg
mov
or
bnd
shl
xor
hlt
(bad)
(bad)
je
and
xchg
inc
pop
push
retf
sbb
data16
mov
push
pop
repnz
mov
or
dec
xor
inc
lahf
and
scas
sbb
cmp
cmps
or
push
aas
xor
xor
xor
icebp
cli
cmp
xor
data16
cwde
pop
fisttp
xor
xor
mov
inc
jb
sub
or
mov
les
cmp
push
fcom
add
jbe
clc
adc
rcl
retf
mov
cmp
inc
mov
jmp
pop
cmp
or
in
mov
mov
mov
fcmove
mov
sbb
xor
je
stos
push
sbb
push
dec
imul
les
sub
in
ins
xor
jae
mov
hlt
xor
repnz
pop
enter
or
(bad)
movs
sbb
stos
inc
fbstp
adc
or
fidiv
les
adc
aaa
push
popf
mov
cli
sbb
pop
dec
and
inc
cmp
retf
mov
pop
xchg
and
cmp
cli
(bad)
mov
or
mov
mov
sar
dec
lock
add
pop
mov
xchg
cmp
adc
ins
gs
sti
ret
xor
sub
dec
fistp
jbe
(bad)
or
cmp
mov
sbb
cmp
push
bound
cmp
or
adc
jle
clc
and
pop
dec
fisubr
jge
(bad)
cmp
lock
sti
cli
(bad)
stc
dec
jge
pop
mov
jle
iret
clc
or
mov
mov
sbb
jo
pop
imul
mov
add
shl
xchg
fdivr
(bad)
aam
push
sub
shl
dec
cmovbe
jl
test
cmp
jle
enter
(bad)
xchg
mov
shl
cmp
and
aam
popa
rol
fadd
mov
sbb
out
in
rol
loop
mov
mov
mov
pop
jae
add
sub
shl
mov
stc
mov
out
inc
daa
(bad)
js
cdq
out
rcl
pusha
xlat
mov
or
mov
int3
sbb
int3
add
rol
pop
adc
mov
mov
add
mov
sbb
mov
mov
enter
pop
lods
out
pop
and
(bad)
dec
and
ror
xor
pop
pop
scas
and
(bad)
je
cld
xor
mov
or
mov
mov
inc
jl
pusha
cmp
les
fcom
mov
sbb
adc
add
xor
or
dec
jne
ret
mov
nop
pop
push
xor
test
leave
mov
mov
call
add
push
test
ror
sahf
push
cmp
ret
or
adc
push
inc
mov
jne
push
sbb
sbb
js
jp
adc
xchg
adc
cmp
jae
dec
push
fld
jbe
jbe
jae
fnstenv
and
push
jp
jp
sbb
adc
pop
add
pop
into
jle
test
test
push
adc
mov
cmps
repz
cmps
jo
ret
inc
pop
fsubp
adc
cs
pop
or
fs
mov
xchg
inc
adc
adc
xor
inc
push
inc
and
ror
stos
bound
and
push
add
mov
dec
and
call
ror
dec
outs
mov
dec
imul
add
mov
fisttp
mov
push
arpl
xor
or
(bad)
pushf
lods
push
or
jmp
and
ins
ret
aam
jecxz
inc
inc
shl
inc
adc
(bad)
ins
sub
cmp
std
push
ss
nop
push
mov
adc
dec
popf
dec
push
jmp
mov
inc
call
xchg
enter
aaa
sub
sbb
ret
add
xchg
xor
test
mov
or
mov
sub
adc
or
jne
adc
popa
mov
xchg
nop
xchg
call
push
xchg
test
(bad)
mov
or
xchg
das
push
xchg
pusha
je
lods
outs
add
xor
cmp
add
ret
sbb
add
test
ins
mov
hlt
fild
inc
add
dec
or
into
xchg
lock
scas
push
lock
push
sahf
mov
pop
fisttp
jmp
in
mov
clc
sub
jmp
and
jmp
add
sti
jle
cmp
ja
and
jb
out
call
or
mov
mov
and
mov
and
or
add
inc
mov
sbb
cmp
add
jg
sahf
mov
mov
pop
imul
ins
fbstp
mov
push
mov
and
sti
inc
cwde
cld
pop
out
test
add
add
fcomp
dec
xchg
imul
sub
rcr
xor
inc
add
in
es
mov
je
popa
(bad)
adc
sbb
iret
xchg
sbb
or
ja
xchg
and
cld
jle
lock
mov
mov
shl
or
movs
cs
shr
add
in
adc
dec
jge
xchg
sahf
fsubrp
mov
ret
daa
sbb
pusha
xchg
nop
in
cmp
adc
rcl
aas
movzx
mov
push
je
dec
fninit
mov
inc
cmp
pusha
and
sub
repnz
mov
adc
ror
inc
rcr
test
mov
cmp
mov
push
or
pop
sub
sbb
mov
fisttp
sbb
inc
add
jl
aaa
or
adc
mov
lods
pop
jl
or
iret
shl
cwde
rcl
add
push
shl
push
cmps
jbe
or
test
pop
hlt
inc
imul
cmp
inc
xchg
mov
retf
fdivr
mov
(bad)
jge
sub
push
add
and
fcom
push
movs
inc
(bad)
call
sub
inc
push
cmp
fmul
inc
in
add
nop
push
loopne
mov
mov
adc
push
or
and
jle
or
pop
mov
or
call
add
push
add
adc
dec
adc
push
or
pop
pop
xchg
dec
xor
push
dec
and
dec
jge
dec
adc
jnp
or
inc
jp
inc
push
push
out
repz
adc
shl
sbb
shl
add
cmp
jae
inc
add
lock
clc
add
and
mov
jo
ret
ss
or
dec
dec
jae
call
mov
inc
adc
inc
push
in
dec
jmp
pop
cmp
pop
and
jle
and
and
or
pop
sbb
dec
(bad)
es
arpl
das
and
dec
cmp
sbb
add
jae
inc
or
aas
pop
les
cmp
jae
xor
fdivr
ret
inc
popa
aam
(bad)
int3
aam
mov
xchg
pop
bound
mov
sbb
adc
mov
push
pop
push
push
fwait
ins
adc
xor
push
add
loopne
mov
inc
mov
dec
aam
push
jbe
out
add
pop
popa
mov
push
mov
aam
ins
and
test
(bad)
sar
ret
and
mov
cmp
dec
or
pop
pop
sahf
adc
cmp
cmp
cmps
loope
lock
(bad)
cmp
jl
dec
ret
call
jge
sbb
inc
rcl
mov
adc
retf
repnz
rcr
cmps
je
xchg
inc
call
push
jne
mov
inc
test
fimul
jb
fsub
mov
push
mov
in
les
ins
loope
push
push
sub
add
jmp
sub
pop
mov
(bad)
push
pop
enter
add
push
mov
(bad)
adc
add
xchg
pop
add
stc
test
adc
mov
inc
dec
inc
dec
and
add
fdivr
inc
push
inc
mov
(bad)
lock
sub
pop
mov
retf
dec
sbb
push
dec
sub
sbb
ins
inc
xor
dec
xchg
push
or
mov
lock
mov
sub
nop
test
or
sbb
iret
je
pop
loopne
xchg
into
adc
and
cmp
pop
sbb
xor
sbb
fwait
push
repnz
push
mov
jae
jp
or
je
rcl
repz
mov
or
add
outs
das
pop
pop
pop
loopne
in
and
nop
cmps
jne
and
ins
adc
adc
dec
sub
push
add
sub
mov
cmp
data16
inc
mov
mov
dec
mov
or
scas
ss
stos
dec
xor
jmp
add
(bad)
bswap
cmc
test
imul
and
imul
xlat
lahf
repz
add
mov
push
xchg
mov
mov
call
call
xor
add
sbb
clc
mov
jae
inc
scas
xor
shr
dec
jnp
inc
fs
jo
xchg
dec
cmp
add
push
jb
pop
mov
mov
std
jl
dec
pop
add
mov
add
add
inc
cmp
mov
sbb
jmp
fidiv
add
add
xchg
lock
out
in
xlat
pop
sub
outs
daa
add
lods
mov
add
jno
add
xchg
adc
dec
adc
and
in
dec
(bad)
enter
cld
xchg
or
in
add
call
in
in
sbb
fcom
jl
(bad)
or
mov
cdq
add
mov
sbb
push
repnz
arpl
sahf
sub
rol
leave
inc
fist
lods
xor
aaa
inc
cld
sub
mov
arpl
adc
jle
cs
test
ins
mov
fs
addr16
mov
adc
jae
jne
push
or
pop
sbb
fsubr
pop
leave
xchg
dec
xchg
and
and
arpl
test
(bad)
sub
(bad)
jp
cld
add
gs
jne
sbb
push
in
test
aam
inc
imul
xor
xor
pop
lods
or
lods
sub
arpl
test
sbb
inc
sub
mov
xor
push
xchg
pop
mov
mov
les
add
movs
rol
aam
push
inc
ret
jge
xor
mov
adc
enter
add
and
or
xor
add
lock
cmp
and
jo
add
pop
aam
mov
aam
add
movs
movs
outs
sub
movs
inc
dec
and
movs
jl
(bad)
mov
hlt
ins
js
cdq
add
mov
imul
ds
test
add
iret
imul
add
push
push
push
sbb
ret
adc
pop
jo
cmp
sbb
pop
sub
das
xor
mov
mov
pop
mov
retf
adc
daa
retf
outs
mov
adc
xor
mov
mov
jmp
inc
or
mov
sar
sub
xor
sub
fsub
xchg
call
pushf
add
cmp
in
dec
je
pop
jne
and
jg
jne
dec
push
sub
js
jne
sub
call
push
jmp
xor
add
pusha
cmp
push
sub
add
loopne
adc
je
loop
call
mov
fist
fild
leave
and
lea
push
or
inc
mov
sub
push
xchg
mov
pop
add
add
pop
dec
cmc
xchg
fiadd
add
test
mov
fcmovu
imul
addr16
dec
and
sahf
add
inc
mov
xor
dec
leave
and
rol
cmp
fs
cmp
in
clc
nop
inc
pop
dec
movs
dec
inc
je
mov
dec
and
jle
fs
push
push
int
mov
ins
std
dec
test
dec
mov
or
cmp
(bad)
jmp
ins
cmp
repz
sub
xor
jmp
mov
xchg
imul
je
pop
inc
cmp
cmp
(bad)
fdiv
mov
sub
out
pop
sub
jl
xchg
mov
sbb
jb
hlt
lock
push
adc
je
lea
pop
sub
dec
(bad)
addr16
stos
aas
mov
(bad)
ds
sub
push
add
push
inc
push
ins
inc
mov
mov
cmp
dec
out
lock
lods
sar
mov
lock
and
stos
jl
xchg
shl
jns
push
add
aad
popf
mov
clc
lea
fdivr
daa
test
bound
sti
xchg
push
in
pop
fsubr
and
jmp
cmovb
sar
add
call
je
push
test
xchg
mov
ins
dec
jae
inc
dec
mov
mov
jp
clc
mov
dec
xchg
sub
sti
sub
sbb
cld
mov
sbb
inc
cmp
arpl
sbb
mov
sbb
nop
mov
push
lods
test
dec
sti
add
pop
xor
shl
jae
mov
cwde
and
xor
or
xchg
retf
loopne
and
push
outs
pusha
push
(bad)
fdiv
popa
ret
push
jns
mov
push
inc
loope
shl
(bad)
push
xor
xor
cmc
cmp
ins
jle
push
dec
pop
push
mov
inc
xor
ins
rcl
pop
fcom
mov
dec
push
into
inc
inc
or
xchg
mov
inc
inc
jo
jne
mov
or
retf
adc
xor
push
je
or
loopne
mov
mov
imul
inc
mov
inc
xchg
cmps
push
dec
dec
pop
jns
rol
mov
loope
imul
mov
jmp
or
leave
(bad)
xchg
or
shl
mov
test
adc
jo
ins
push
and
xlat
arpl
pop
out
push
mov
rcl
push
ins
xlat
push
aas
pusha
mov
jge
xor
mov
add
out
lds
fstp
div
sub
mov
sub
adc
mov
jo
aam
cmp
js
rol
(bad)
jno
lock
jl
pop
mov
les
inc
sub
or
cli
push
inc
mov
pop
push
rol
sub
mov
adc
pop
sbb
daa
push
xchg
sbb
push
push
por
sti
shr
je
cld
jne
scas
adc
sub
fsub
and
retf
push
data16
in
js
push
mov
call
jle
es
lods
aam
cld
dec
add
mov
mov
push
scas
imul
test
rol
rcl
dec
jo
mov
push
dec
xor
fld
cmp
(bad)
sbb
dec
add
test
ret
loope
js
push
xor
js
inc
mov
lahf
js
aad
jle
mov
cmp
out
aad
inc
mov
and
je
in
call
and
mov
fcom
adc
popa
clc
ins
mov
mov
cmps
mov
scas
cwde
push
(bad)
bound
ins
mov
jns
sub
ret
dec
mov
stc
ret
pop
dec
xor
xchg
or
and
cmp
push
popf
add
mov
rcl
xor
xor
xchg
cwde
out
pop
mov
stos
gs
push
and
xor
(bad)
pop
push
sub
push
cmp
fwait
and
pop
sub
inc
scas
pusha
ret
push
push
aad
fst
add
(bad)
pop
fsubr
(bad)
int3
pop
pop
inc
adc
inc
push
pop
enter
fcomp
test
iret
push
emms
je
pop
mov
jmp
add
pop
pop
adc
mov
or
xchg
inc
add
int3
add
gs
test
jbe
xchg
jmp
pop
inc
es
in
dec
push
sub
pop
inc
xor
rcr
(bad)
clc
(bad)
cmp
dec
shr
mov
movs
iret
iret
in
xor
xchg
cmp
jmp
add
or
sub
add
out
dec
or
inc
sub
fiadd
int3
add
sub
add
add
add
inc
adc
mov
mov
and
lods
js
pop
lods
into
mov
nop
and
sub
mov
sub
mov
dec
dec
push
dec
cwde
es
cmp
xchg
xor
mov
enter
dec
push
ja
jno
xchg
scas
std
mov
int
mov
rcl
test
sub
outs
jns
mov
xchg
jbe
ret
mov
loopne
out
add
adc
lahf
xchg
or
sub
xchg
movs
lock
je
data16
adc
xor
jg
sub
mov
adc
mov
mov
cmp
push
test
inc
pusha
mov
movs
mov
jl
xchg
lods
test
pop
aaa
jbe
mov
sub
mov
or
dec
jns
push
xchg
outs
add
or
pop
clc
movs
(bad)
jge
fs
scas
test
nop
jmp
je
mov
icebp
dec
sbb
xor
xchg
inc
mov
fxam
mov
mov
push
inc
adc
add
mov
xlat
push
cwde
fistp
pop
test
ins
hlt
xor
out
push
fucomp
or
fidiv
cwde
sub
out
add
xchg
das
inc
push
adc
push
push
xlat
loopne
outs
add
fwait
mov
push
dec
push
xor
inc
pop
call
push
push
sub
(bad)
js
sub
or
movs
push
cli
cs
sub
inc
sbb
adc
and
sbb
mov
or
into
sar
pop
or
push
push
xor
int3
mov
push
jnp
pushf
add
repz
sub
dec
out
int
push
cdq
push
push
xor
scas
cmp
jns
stc
mov
cmp
sub
add
adc
(bad)
ss
imul
xchg
mov
mov
nop
and
out
out
cmp
std
lock
mov
or
push
pop
adc
ficom
xchg
cs
push
cmp
(bad)
jmp
sbb
mov
dec
fdivr
sbb
clc
push
add
add
adc
jo
add
(bad)
push
jne
mov
sub
fld
push
adc
add
adc
sub
fbstp
pop
or
ds
inc
xchg
and
dec
inc
cli
retf
pop
inc
push
dec
jns
and
retf
outs
push
pop
push
addr16
arpl
jb
jns
pop
or
push
retf
pusha
sbb
sbb
mov
xchg
and
jne
jmp
data16
mov
add
stc
mov
data16
(bad)
cmc
mov
hlt
icebp
lods
push
xor
adc
stos
pusha
inc
aad
int3
pop
rol
push
rcl
pop
or
pop
dec
rcl
pop
mov
push
cld
mov
add
xchg
inc
add
into
sbb
bnd
jmp
stos
outs
inc
or
or
sub
ret
loop
xor
cmp
jo
jl
loopne
neg
add
and
sar
pop
pusha
push
add
push
xor
sub
adc
add
mov
ja
add
nop
or
pop
jmp
push
leave
adc
loope
push
or
sbb
loopne
in
xor
mov
adc
loopne
fldpi
add
arpl
ret
add
jno
les
add
sub
jmp
movs
cmp
add
out
push
or
xor
and
pop
xchg
xor
add
inc
popfw
rcl
and
and
jmp
add
(bad)
adc
cmp
pushf
jge
stos
lea
(bad)
bound
xor
loopne
shl
adc
call
test
sbb
inc
sbb
and
push
or
add
mov
jl
ins
and
test
dec
jle
inc
xor
call
aad
push
push
push
pop
cmp
arpl
stc
mov
(bad)
cmp
pop
cmp
into
dec
add
jg
loopne
mov
sbb
dec
div
jae
mov
xor
pop
mov
or
xchg
push
arpl
imul
js
mov
xchg
scas
test
mov
pop
out
adc
dec
enter
inc
sbb
xor
rol
inc
cmp
xor
mov
or
daa
mov
adc
mov
pop
mov
push
ins
xor
add
stos
mov
or
dec
mov
push
dec
and
mov
add
push
push
fs
pop
mov
pop
ror
xchg
sbb
and
pop
arpl
sub
or
jne
push
sub
les
aad
lock
mov
js
sbb
inc
or
cmp
std
(bad)
xchg
mov
mov
jp
xor
sahf
inc
sbb
push
out
adc
push
das
adc
add
sbb
jge
cmp
sbb
lods
adc
mov
popa
pop
sub
cwde
xor
jb
xor
sub
cmp
push
lods
scas
jne
sub
pusha
and
clc
shr
dec
fistp
sub
addr16
sub
fwait
add
jmp
add
jb
dec
aas
mov
and
stc
pop
and
je
retf
or
sbb
inc
add
push
mov
xchg
or
fsub
inc
movs
pop
add
and
add
mov
or
or
and
and
dec
cmp
mov
push
add
icebp
ins
test
xor
das
in
mov
mov
fiadd
shr
adc
fimul
mov
add
aas
cmp
or
xor
sti
in
sbb
mov
xchg
and
push
(bad)
mov
push
adc
sub
xchg
iret
ret
stos
out
in
nop
xchg
xor
cmp
xchg
sahf
push
outs
mov
push
test
push
push
test
inc
mov
jg
or
push
pop
cmps
pusha
mov
add
xor
lock
xchg
xor
add
addr16
add
lods
in
mov
pop
cmp
xor
out
imul
mov
cmp
cmp
mov
cmp
push
adc
mov
je
xchg
push
cmovl
add
out
xchg
dec
push
cmp
(bad)
sti
ret
icebp
popf
rcr
pop
fwait
cli
add
and
pusha
aad
test
outs
lock
add
dec
mov
add
push
or
dec
ret
adc
xor
dec
mov
ins
and
push
mov
aas
dec
popa
xchg
add
inc
cli
rol
push
rol
out
(bad)
in
loope
cmps
xchg
or
lahf
sbb
mov
aad
dec
push
add
idiv
ins
test
mov
test
rol
push
mov
add
stos
push
mov
lock
popa
leave
mov
mov
sub
jno
dec
push
add
lea
pop
xor
cmp
bound
sbb
xchg
xor
mov
and
dec
adc
add
mov
add
inc
loopne
add
test
push
lods
cmc
cdq
into
pop
dec
nop
icebp
ror
ja
inc
pop
adc
loopne
pop
inc
push
push
push
out
mov
inc
and
ror
shl
cwde
(bad)
mov
cmp
and
test
(bad)
adc
arpl
adc
js
and
daa
fwait
daa
push
push
sbb
pop
xor
dec
add
sub
sbb
and
sub
loope
cld
push
adc
fsin
test
rol
adc
fiadd
jle
add
xor
xchg
ins
dec
ror
push
test
les
add
loop
mov
aas
cwde
cmp
sbb
or
jmp
popa
sti
aas
xchg
add
je
mov
setne
sbb
adc
sbb
inc
adc
rol
cmp
mov
and
hlt
or
or
sbb
push
inc
loopne
add
and
pop
dec
add
mov
dec
hlt
lock
js
loopne
jno
in
xchg
push
sbb
xchg
inc
mov
cmps
dec
dec
cmp
mov
in
pop
adc
dec
mov
repz
mov
jmp
fwait
cmp
pop
cmp
test
js
add
sub
push
pop
sbb
test
jb
xchg
sahf
adc
clc
add
pop
xlat
lea
cmp
mov
sbb
aam
or
daa
daa
fwait
loopne
(bad)
(bad)
sub
add
les
xor
and
inc
mov
cmp
sub
mov
xchg
jl
test
mov
sub
ret
mov
sbb
popf
cmp
and
test
jmp
ror
sub
add
inc
imul
xchg
and
adc
and
cmps
mov
fwait
add
ret
add
mov
test
sub
add
inc
test
dec
push
xchg
mov
add
xchg
test
sbb
and
and
cmp
cmp
add
or
popa
mov
pop
sbb
cwde
add
les
pop
inc
dec
mov
xchg
test
lock
and
inc
cdq
or
jo
inc
and
sub
inc
cmps
push
add
add
add
jb
iret
imul
and
and
pop
rcl
xlat
and
mov
add
mov
inc
add
mov
or
in
mov
sbb
xchg
ins
adc
adc
xchg
dec
sub
add
add
or
adc
in
add
xor
stos
popa
stos
mov
mov
imul
inc
push
jns
shl
sbb
ds
call
inc
retf
pop
cld
cmp
pop
xchg
pop
and
xchg
and
xchg
add
pop
or
dec
sbb
dec
mov
call
or
mov
cmp
sbb
xor
push
jb
add
dec
jo
js
shl
call
pop
retf
inc
push
or
je
in
xor
shl
(bad)
mov
nop
or
mov
add
push
xchg
popf
js
pushf
movs
lods
mov
mov
and
or
cld
sbb
in
adc
dec
test
cld
ror
adc
mov
frstor
cmps
jbe
test
push
mov
or
jo
pop
add
sbb
leave
xor
xor
adc
ror
push
fst
imul
lods
(bad)
cmp
and
cmps
bound
popa
push
xor
push
pop
aas
(bad)
test
std
and
in
ror
fcmovnb
inc
cmp
and
pop
mov
test
popa
sub
push
ret
cmp
repz
push
ja
cmp
sub
(bad)
adc
lea
in
xor
es
or
in
xchg
xor
xchg
add
jns
cmp
or
outs
cmps
call
push
cmp
test
sub
pushf
mov
ss
ins
in
push
inc
or
js
mov
push
cmp
sub
push
push
inc
inc
or
lock
fdivr
jbe
adc
rcl
pop
pop
leave
or
jne
and
pop
rcl
ror
pop
adc
mov
pop
or
jne
into
and
inc
cmp
pop
in
f2xm1
jmp
inc
call
sub
icebp
and
sub
sub
bound
cmp
pop
cmps
(bad)
das
(bad)
jmp
stos
movs
xor
or
push
sbb
push
push
lods
jae
jg
inc
jmp
push
sbb
je
mov
jae
imul
rcr
dec
sub
inc
sti
iret
ret
je
mov
xchg
adc
ss
xchg
or
or
cmp
icebp
mov
call
inc
mov
inc
xor
push
cmp
jnp
fsubr
sub
fcom
jge
sub
push
lea
push
outs
clc
clc
mov
cmc
int3
or
jne
cmp
jmp
adc
hlt
loopne
add
cmp
jne
outs
mov
loop
jle
dec
jmp
mov
rcr
cmp
int3
rol
ins
xchg
bound
adc
inc
clc
xor
hlt
aad
stos
add
or
add
mov
xor
es
push
int
fdiv
push
inc
or
or
or
jmp
or
inc
jae
inc
push
sub
call
or
pop
sti
daa
push
sbb
retf
add
dec
inc
dec
not
or
sbb
ins
pop
sub
inc
push
push
cwde
push
loopne
xor
sbb
fild
push
add
xlat
xlat
jl
pop
loopne
inc
push
sbb
pop
dec
loopne
ds
add
pusha
cmp
inc
in
adc
lds
dec
(bad)
dec
mov
mov
sub
pop
sub
jge
cdq
push
jmp
or
pop
and
lds
jg
addr16
and
loop
cmp
jb
lds
cmp
jo
jmp
imul
xor
into
and
fmul
mov
je
and
xchg
mov
mov
pop
dec
xor
dec
loop
rcr
mov
mov
and
or
push
inc
fcom
pop
int
jne
and
add
dec
pop
adc
pop
call
mov
cmps
mov
bound
adc
xchg
and
jae
addr16
or
rcl
aaa
sub
mov
adc
or
xor
sub
stc
xchg
dec
in
shl
add
add
inc
call
add
in
dec
fwait
pusha
and
jno
(bad)
popf
mov
lods
in
jb
lds
push
mov
or
dec
cs
sbb
aam
ror
push
jo
(bad)
push
jl
cmovp
add
(bad)
cmp
mov
add
xor
ja
cmp
enter
jmp
outs
adc
push
in
push
nop
xchg
retf
jl
sbb
push
test
ins
sbb
dec
adc
dec
sahf
sbb
and
xor
cwde
sub
mov
or
and
fs
(bad)
pusha
js
cmps
add
inc
call
sub
jo
push
pop
or
repnz
xchg
ins
fmul
add
sub
movs
repz
mov
leave
sub
and
std
test
cmp
ficom
rol
nop
sub
sbb
into
leave
xor
out
cmp
push
inc
icebp
out
inc
sub
call
pushf
fist
and
mov
mov
pop
ror
mov
adc
setae
push
xor
retf
xor
cli
mov
pop
xchg
adc
pop
ss
or
ret
push
mov
repnz
add
add
or
inc
sbb
imul
imul
out
outs
dec
imul
inc
jo
jno
and
ins
inc
adc
sbb
cdq
rol
ss
xchg
mov
les
xor
adc
inc
push
jl
mov
push
and
mov
test
cs
retf
push
xchg
jl
jnp
div
mov
adc
inc
sub
retf
and
xchg
jg
dec
outs
stos
adc
mov
push
mov
mov
and
call
pop
sbb
mov
retf
test
shl
leave
xor
into
in
inc
mov
push
cmp
or
sbb
xchg
dec
mov
std
xchg
mov
mov
or
out
adc
fbld
je
push
adc
sbb
test
sbb
push
stos
out
gs
dec
in
cmps
sub
(bad)
push
sub
add
rol
(bad)
mov
mov
outs
shrd
movs
jg
sbb
mov
push
push
cmp
inc
add
mov
pop
inc
push
mov
imul
sub
jb
in
mov
add
jbe
mov
es
pop
in
or
sbb
(bad)
jmp
xor
jmp
adc
icebp
nop
je
hlt
pop
retf
(bad)
sbb
mov
mov
shr
repz
repnz
shl
lods
std
adc
xchg
jmp
dec
gs
add
out
cmp
fsubr
inc
jle
sbb
push
add
sar
jnp
stc
(bad)
pushf
xchg
retf
and
push
gs
fistp
and
add
neg
std
addr16
xor
mov
xor
dec
mov
jbe
cmp
push
or
gs
hlt
outs
out
stc
pop
or
or
lock
mov
cmp
dec
pop
jmp
adc
(bad)
fnstcw
movs
inc
in
and
cmp
pop
mov
rol
cmps
imul
clc
or
test
xchg
imul
push
xor
mov
sub
retf
or
ret
jo
fld
pop
pusha
mov
or
mov
inc
add
mov
cld
xor
xor
call
mov
addr16
mov
ror
push
into
push
add
jns
pop
scas
push
add
cwde
pop
xor
(bad)
jg
mov
xor
out
pop
add
sahf
and
into
push
xor
or
sbb
mov
lock
nop
out
or
or
fld
jne
and
pop
call
add
gs
adc
or
or
add
xor
lock
xchg
adc
mov
xchg
pop
lock
adc
dec
adc
sbb
pop
jnp
and
hlt
xchg
sbb
push
xor
sbb
sbb
loope
or
out
jg
cmp
adc
xchg
inc
lahf
and
dec
inc
mov
xor
rcl
mov
sbb
sub
xchg
imul
aaa
lahf
sbb
xchg
mov
cmp
mov
and
pop
or
push
xor
or
sbb
movs
cmp
sbb
xlat
mov
ds
cdq
mov
jge
xchg
cmp
adc
clc
and
jle
pop
or
mov
jo
fnsave
rol
ror
jo
xchg
mov
adc
and
or
inc
or
cmp
(bad)
mov
push
loope
cdq
cmp
cli
xchg
ror
add
jb
data16
mov
clc
add
cld
add
mov
cmp
test
jo
mov
scas
dec
imul
outs
sub
jmp
imul
fs
pop
jp
cli
jae
clc
sbb
ficom
jmp
outs
adc
jge
or
in
ret
mov
or
cmps
jge
test
sbb
adc
ror
pop
retf
jge
popf
dec
ds
pop
jmp
outs
aaa
sbb
loope
pop
(bad)
cmp
outs
pop
movs
inc
ds
addr16
and
xchg
mov
pop
sbb
mov
ret
inc
sbb
mov
in
call
pop
pop
sbb
ret
mov
mov
add
jae
or
jno
sub
aam
jl
pop
nop
ins
fisttp
ror
add
popf
push
sub
int
sar
or
and
js
or
movs
popa
push
xor
add
xor
sub
shr
inc
sub
sbb
xchg
and
xchg
jne
push
push
arpl
xor
jbe
jp
sub
xor
xor
push
sbb
(bad)
or
xor
clc
icebp
int
add
aad
pop
xor
fs
jno
int
cmp
push
sub
call
add
cmp
sub
in
loopne
sbb
mov
js
cld
and
push
lock
in
xchg
cld
lock
adc
adc
cs
and
push
or
mov
or
outs
push
add
sub
xchg
and
ins
shl
xor
add
push
ret
xor
fdiv
inc
or
and
jecxz
adc
or
pop
enter
adc
cmp
sub
cwde
xchg
adc
jae
sbb
or
or
movs
adc
and
loope
and
cmp
pusha
xor
and
add
sbb
xchg
loopne
mov
cmp
popf
out
nop
cmp
fstp
stc
ins
repz
sar
pop
jmp
mov
mov
push
call
ja
je
mov
and
adc
sub
iret
(bad)
cmp
mov
dec
jnp
ret
(bad)
test
push
fisub
lock
add
xor
in
push
or
js
add
pop
mov
xchg
add
pop
cmp
out
jle
popfw
js
sbb
or
adc
inc
hlt
inc
sub
xchg
ss
xchg
inc
adc
retf
inc
pop
sahf
imul
xor
ins
cmp
mov
aas
mov
pop
xor
shl
jp
xchg
out
ret
fld
pop
push
ret
mov
add
enter
enter
clc
inc
pop
pushf
cmp
rol
xchg
enter
addr16
cmp
outs
and
fld
mov
inc
cmp
jns
mov
fdivr
popa
jae
jns
enter
and
cmps
movs
ret
push
xor
inc
push
imul
pop
clc
cld
nop
shl
or
rcr
clc
mov
push
lods
int3
jo
pop
push
leave
add
or
or
leave
adc
adc
adc
mov
or
sub
lods
or
clc
xchg
fnstenv
(bad)
idiv
and
leave
in
jne
and
sbb
and
enter
jmp
jo
push
inc
pop
and
jo
test
pop
lods
nop
movs
sub
xchg
dec
push
or
hlt
cwde
add
hlt
clc
and
ret
xor
arpl
sbb
daa
sub
iret
jbe
dec
xor
sub
jnp
push
ffree
fstp
addr16
xchg
dec
adc
and
sub
sub
push
dec
xor
cmp
sti
(bad)
shl
jge
mov
ins
(bad)
cmp
lods
adc
dec
aaa
cmp
dec
dec
(bad)
test
pushf
jmp
cmp
les
out
or
xchg
cld
outs
cmp
ret
repnz
jno
xor
repz
adc
add
push
lods
loope
or
adc
test
loopne
cmc
and
lock
(bad)
jnp
fcomp
mov
sti
mov
ins
stos
cmps
mov
adc
cld
xchg
jle
nop
xchg
or
push
cmp
int
inc
cmc
retf
adc
push
fcmovb
mov
fidiv
imul
xchg
xor
mov
hlt
pop
or
mov
jnp
scas
jge
cmp
sub
push
sub
stos
fsubr
cli
aaa
sbb
std
dec
adc
add
loope
lock
add
adc
test
add
inc
push
jb
repnz
xchg
cmp
or
xchg
sbb
out
lock
sbb
sbb
cs
pop
mov
es
cdq
push
scas
or
imul
or
sub
mov
loopne
mov
stc
sbb
cmp
push
ror
lock
xor
xor
mov
popa
push
xor
call
ins
dec
push
or
mov
shl
out
dec
cmp
jnp
sub
add
pop
xor
and
mov
mov
call
fdivr
push
xchg
add
ret
mov
sbb
sbb
dec
or
mov
mul
add
add
pop
mov
dec
and
adc
add
movs
xor
add
sbb
(bad)
call
or
shl
xchg
cmp
mov
add
inc
sbb
mov
sbb
sbb
push
pop
sub
push
add
loopne
dec
and
mov
movs
mov
test
jae
or
inc
push
push
add
out
or
push
inc
aas
nop
push
sbb
cld
jb
xor
cmps
adc
daa
add
sub
push
jbe
mov
jp
push
lods
and
(bad)
leave
stos
mov
and
cdq
xor
in
and
mov
pushf
loopne
fisttp
pop
mov
jo
and
sbb
and
mov
jmp
pop
or
mov
push
xchg
mov
dec
or
and
sub
cmp
leave
push
mov
jle
or
xor
jge
adc
mov
nop
or
in
popf
test
(bad)
pop
test
popf
dec
jae
sub
test
repz
push
mov
das
or
jo
out
sbb
xor
jo
jno
cmp
in
jl
push
das
pop
sar
add
add
mov
cmp
fcom
pop
test
mov
inc
mov
dec
clc
and
dec
inc
adc
mov
in
push
inc
push
js
add
jl
je
mov
jb
adc
inc
push
cmp
push
adc
imul
and
cmp
cmps
inc
lods
adc
jo
dec
dec
and
ins
add
hlt
sbb
add
inc
xchg
test
xchg
ja
mov
js
jb
sbb
push
dec
jg
xchg
popf
idiv
adc
movs
inc
add
xchg
call
or
inc
jb
cmp
imul
cmp
jl
xor
jbe
mov
cs
push
leave
pop
retf
les
jp
shr
mov
retf
pop
xchg
mov
cmp
push
add
cli
mov
stos
pop
add
pusha
sub
stos
or
sbb
inc
sbb
ins
add
ucomiss
mov
xchg
mov
sbb
div
mov
cld
adc
xor
sbb
dec
rcl
sbb
sar
jl
cmp
adc
enter
mov
hlt
mov
rcr
es
lods
push
fcom
jecxz
(bad)
push
shl
pusha
in
sahf
imul
sar
in
rcr
mov
or
adc
lds
jno
(bad)
aaa
je
loop
jo
enter
in
mov
or
rol
out
mov
dec
cli
sti
inc
nop
(bad)
pop
and
rol
neg
push
jl
mov
shr
inc
sbb
test
test
pusha
xor
inc
ds
and
sbb
or
and
ss
faddp
push
cmp
pop
xor
les
pop
sub
sbb
or
or
pop
repz
push
push
pop
jb
mov
adc
push
push
add
or
push
adc
rcr
pop
mov
into
test
mov
lea
aas
mov
mov
pusha
inc
pop
and
sbb
mov
jns
mov
xchg
pop
inc
mov
jmp
daa
jmp
jmp
dec
loopne
xchg
hlt
clc
push
xor
jecxz
pushf
sar
int
lock
add
sbb
xchg
pop
enter
popf
rcl
mov
je
xchg
dec
xor
cmp
popf
rcl
add
ror
xchg
dec
fsub
mov
sbb
ret
pop
shr
cmp
add
lea
xor
repnz
adc
data16
les
ret
xor
cld
(bad)
int3
(bad)
mov
sub
adc
xor
inc
call
imul
outs
cmp
xchg
cs
cmp
push
pop
mov
mov
xor
movs
shl
cmp
cmp
pop
data16
jne
jnp
push
inc
cmp
out
lock
mov
and
cld
inc
cmps
out
cld
and
dec
cld
pusha
pop
dec
leave
sub
xor
movs
and
lock
clc
push
add
fcmovnb
in
rcr
mov
shl
dec
in
mov
fsub
pop
xor
pop
and
xor
xor
sbb
rol
adc
mov
cmp
fisub
cmp
xchg
jns
xor
inc
imul
add
cmps
jecxz
lock
rcl
int
cmp
adc
or
imul
gs
sub
and
sbb
test
add
js
mov
mov
inc
rcl
je
enter
repnz
or
sbb
or
ficom
clc
xor
or
stc
(bad)
js
mov
mov
xchg
xchg
dec
mov
jp
jp
push
mov
sub
add
or
rol
pop
lods
jbe
pop
call
inc
or
xchg
dec
and
dec
add
push
push
mov
and
sbb
fisttp
dec
scas
cmp
adc
push
xchg
inc
sub
imul
ins
xor
mov
add
jns
mov
push
or
adc
iret
jns
int3
popf
cdq
push
lock
retf
or
ror
mov
in
xor
cmp
ficomp
xor
imul
jmp
sti
sbb
or
int
sub
add
or
lock
jns
dec
test
fidivr
outs
and
mov
sub
outs
sub
jmp
jl
or
jno
fsubr
imul
shl
jl
lods
popa
jno
and
push
cmps
xchg
mov
mov
xchg
xchg
sbb
sub
aaa
pop
cmp
movs
push
in
xor
(bad)
mov
pop
retf
adc
shl
inc
xor
mov
xchg
xor
pusha
or
push
scas
fcom
pusha
aam
neg
push
div
sbb
lock
add
pop
add
jns
or
jl
mov
cmp
ins
sub
sbb
pop
call
and
loope
xchg
repnz
sub
js
or
iret
dec
ins
test
int3
rol
push
(bad)
sub
aad
and
fcomp
rcr
test
(bad)
xor
(bad)
mov
loop
mov
ins
dec
mov
pusha
(bad)
and
loop
ret
dec
jge
inc
icebp
loop
dec
or
cmp
(bad)
push
mov
sub
sbb
iret
iret
lock
mov
sar
pusha
leave
adc
sar
jge
push
push
ins
mov
ror
add
cmp
je
je
xor
add
push
or
xchg
clc
cmp
mov
or
stc
cmp
cmp
int3
push
movups
xor
mov
fld
mov
rep
(bad)
mov
pushf
sbb
jno
adc
cld
mov
dec
push
pusha
push
sbb
inc
add
cmps
mov
dec
mov
clc
jl
adc
dec
shl
clc
sbb
aad
int3
jl
out
jl
and
jno
(bad)
popa
je
mov
adc
push
cdq
popa
mov
imul
xchg
iret
lahf
popf
and
test
mov
lods
adc
pop
clc
mov
sbb
(bad)
dec
jl
test
ins
test
push
xor
and
push
imul
adc
pop
inc
mov
xor
jbe
or
shl
pop
cdq
sub
pop
sbb
pcmpeqd
push
sbb
loop
daa
push
xchg
adc
sbb
cdq
sbb
jo
or
sbb
add
inc
aaa
inc
push
retf
adc
adc
and
inc
cwde
jns
pop
pusha
scas
and
out
sbb
stc
in
jne
push
push
test
cmp
jmp
int
cwde
in
or
xor
jb
or
es
cmp
hlt
and
and
cdq
add
xor
cmp
cmps
shl
sub
iret
inc
rep
sbb
cmp
fidivr
inc
sub
push
adc
add
ret
shr
int3
hlt
pop
outs
sbb
das
jl
add
mov
frstor
hlt
lock
xor
arpl
loopne
retf
jge
or
cmp
pop
jl
or
cmp
outs
stc
fcom
cmp
stc
pop
sbb
adc
lock
cld
inc
cs
pop
hlt
imul
xor
or
mov
sub
or
loopne
sbb
xor
imul
mov
adc
adc
imul
push
push
add
popa
and
xlat
lock
cmc
jb
or
jge
sbb
adc
or
add
dec
and
nop
pusha
jp
mov
mov
imul
xor
lds
add
xor
xchg
out
inc
clc
les
adc
sbb
or
xlat
sub
push
shl
cmp
sub
jmp
adc
jae
and
push
jge
shr
ud0
out
cmps
adc
(bad)
cmp
dec
out
and
xchg
jecxz
and
mov
or
xor
movs
or
add
pop
test
hlt
jno
xchg
mov
sub
retf
sahf
or
test
sbb
pop
and
mov
test
add
cli
pop
loope
daa
cmp
xor
push
ins
inc
sub
mov
or
dec
repz
lods
setbe
inc
js
jge
or
mov
(bad)
enter
or
into
inc
das
cmp
dec
pop
test
enter
daa
hlt
mov
ficomp
dec
lods
pop
push
add
push
pop
or
ds
es
or
sar
loope
inc
adc
outs
jmp
and
cs
push
push
enter
inc
sub
mov
dec
xchg
dec
and
ret
or
or
add
mov
push
mov
or
sbb
popa
xchg
pop
data16
int3
std
or
pop
mov
cmp
add
sub
les
inc
hlt
sub
pop
adc
arpl
or
clc
movs
test
xchg
add
adc
dec
shl
xchg
imul
cdq
or
or
xor
mov
inc
jmp
ret
adc
inc
push
stc
inc
lock
hlt
cmp
lock
and
hlt
xor
jae
xchg
clc
or
lock
or
xor
jo
xor
cmp
xor
pop
(bad)
call
sub
(bad)
popa
cs
mov
fs
cmp
sbb
(bad)
outs
jns
loop
mov
pop
mov
outs
sub
jp
sbb
repnz
push
call
push
clc
call
jno
jns
imul
pop
sub
jg
stos
push
ds
lods
xlat
push
jbe
pop
gs
add
push
sub
jb
sub
sub
fsubrp
mov
out
sbb
mov
add
sbb
mov
push
mov
outs
or
sbb
add
je
sub
or
jae
mov
ja
xor
sub
adc
outs
mov
movs
mov
int
mov
imul
sub
pop
or
or
mov
es
cmc
push
test
dec
retf
push
lods
enter
push
ds
leave
outs
push
lock
rcl
xchg
jno
mov
bound
push
out
mov
push
dec
push
sbb
cs
ja
shl
leave
mov
hlt
push
mov
adc
push
mov
dec
call
sbb
pop
sbb
inc
int
and
aam
int
std
dec
js
add
and
fldenv
cld
adc
cld
jp
cs
xlat
mov
push
sbb
aaa
in
adc
sti
std
loopne
or
test
aad
movs
int3
ret
sbb
xchg
fcom
mov
add
push
fild
loop
imul
jmp
sub
xchg
cmp
cmp
hlt
xor
xor
cmp
xor
retf
mov
test
out
bound
cmp
jno
xor
loopne
xchg
or
adc
push
cmp
retf
sub
or
enter
mov
push
fsubr
outs
int3
push
mov
lahf
push
fbld
in
jecxz
sub
push
jb
jo
mov
adc
and
in
retf
mov
dec
data16
xor
(bad)
jge
push
loopne
hlt
xchg
push
in
cmp
sub
push
mov
pop
cld
adc
lds
xchg
frstor
sub
aad
movs
(bad)
jge
pushf
push
je
cld
push
hlt
or
jo
sub
out
adc
shl
lock
or
movs
or
fild
sbb
sbb
mov
gs
push
xchg
test
mov
and
(bad)
and
xchg
sbb
shr
xlat
adc
mov
pop
xchg
out
lea
add
cmp
sbb
push
or
test
dec
sahf
cmp
daa
in
nop
jo
test
popa
sub
nop
repz
or
in
mov
cs
mov
adc
or
or
sbb
sub
cs
sub
mov
adc
push
or
jecxz
dec
add
sbb
mov
push
ins
xchg
sbb
push
addr16
lock
mov
push
fistp
or
mov
xor
xchg
sbb
jo
ret
sub
aam
xor
je
xor
mov
cld
int3
or
sbb
mov
nop
and
fs
add
clc
sbb
xor
add
daa
ja
jmp
test
gs
ss
sbb
pop
shr
loop
dec
cmp
xor
ss
mov
in
dec
je
ja
jge
mov
add
inc
shr
xchg
out
or
sbb
shl
or
pop
add
ror
adc
sahf
mov
or
add
dec
sub
loopne
adc
mov
dec
(bad)
lods
shl
in
sbb
aaa
fwait
test
ins
dec
jae
push
ja
cld
adc
cli
ja
sub
ret
retf
add
dec
outs
cmp
dec
or
or
loopne
inc
mov
cli
sbb
aad
inc
retf
scas
add
or
ret
add
pop
or
sub
in
icebp
fwait
push
cli
add
retf
cmp
dec
pop
mov
out
and
mov
xchg
stos
call
aaa
jmp
xor
ins
mov
pushf
xor
in
in
fst
js
add
sub
test
mov
add
scas
(bad)
inc
sub
add
in
nop
inc
icebp
xchg
clc
mov
pushf
mov
js
sbb
push
or
add
xor
push
add
jge
xchg
data16
or
pop
scas
mov
shl
mov
icebp
jge
push
xor
jb
add
sub
(bad)
xchg
xchg
inc
(bad)
push
cmp
xchg
movs
js
pop
ret
bound
jns
std
xchg
jmp
test
(bad)
push
inc
cli
sbb
arpl
mov
push
sti
jge
ins
inc
stos
jno
inc
fmul
iret
hlt
sub
adc
fmul
inc
out
or
imul
xchg
js
out
rcr
push
xor
aas
xor
cmp
retf
xlat
ret
loopne
push
xor
jne
cmps
pusha
pop
jecxz
mov
mov
lock
ror
mov
and
nop
bswap
xor
mov
clc
mov
cwde
xor
adc
cmp
pop
je
push
call
xor
cld
sar
cmp
in
(bad)
push
out
mov
in
out
pusha
test
shl
adc
xor
cdq
rcr
adc
or
xchg
loopne
pop
popa
and
mov
xchg
sub
push
jnp
push
test
pop
and
xor
and
cld
xor
imul
adc
add
lods
mov
in
(bad)
xor
xchg
ins
xchg
loopne
mov
and
inc
test
out
add
iret
xor
cmp
cmp
inc
cmp
or
inc
retf
pop
pop
cmp
movs
mov
add
cmp
adc
(bad)
sbb
mov
lock
nop
xor
leave
movs
ret
and
lods
xor
mov
(bad)
jmp
bound
aad
sub
ret
add
jnp
xor
mov
cli
cmc
cld
in
mov
push
cmc
or
jl
mov
push
or
add
push
or
push
adc
dec
ja
mov
add
and
push
add
hlt
adc
pop
ret
jge
xlat
cs
jecxz
sub
rol
jbe
inc
jmp
shr
bound
push
mov
cwde
stos
push
pushf
and
fucom
icebp
mov
lea
ins
mov
mov
or
inc
pop
pop
or
pop
cmp
mov
inc
push
imul
loopne
jp
in
cmps
cmp
pop
mov
mov
pop
push
push
adc
leave
dec
ds
push
dec
cmc
icebp
xchg
test
jg
cmp
call
adc
imul
xlat
shr
push
inc
call
inc
sar
sub
xor
pop
and
and
inc
add
push
jl
mov
ins
aaa
sub
(bad)
(bad)
push
sbb
rol
xor
sbb
dec
and
or
xor
aaa
add
int
mov
test
inc
and
and
dec
imul
pop
mov
cli
xchg
and
call
sbb
loopne
add
mov
int
rol
xor
inc
mov
xor
adc
mov
test
adc
cmp
adc
je
inc
dec
cmp
mov
xor
or
pushf
add
inc
sbb
repnz
push
ss
fiadd
aam
and
lea
mov
retf
cmc
movs
movs
cmp
mov
aaa
and
(bad)
and
fsubp
xchg
out
push
mov
adc
jne
push
adc
sub
dec
cmps
icebp
sub
add
sub
imul
cmp
aas
adc
push
add
ins
xchg
call
add
out
push
sbb
sbb
in
add
test
mov
mov
inc
push
add
and
push
pop
xor
mov
add
retf
sub
adc
repnz
outs
push
mov
push
mov
bnd
add
pop
mov
nop
mov
daa
(bad)
push
lahf
xchg
and
add
fs
dec
aad
cmp
add
lock
sbb
cld
or
add
cmp
cmp
data16
mov
or
add
mov
push
or
xchg
aas
push
ds
fist
jl
push
push
sbb
mov
xor
test
and
pop
and
add
pushf
nop
adc
and
fild
mov
pop
push
ret
adc
popa
pusha
mov
daa
or
sbb
enter
rcl
cld
add
or
or
in
and
or
pusha
push
test
push
ret
xchg
sub
sti
cwde
mov
inc
push
hlt
add
dec
jecxz
and
push
mov
lock
clc
clc
pop
cmp
repnz
stc
add
leave
div
add
mov
invd
xor
iret
popa
cmps
movs
adc
lock
add
xchg
scas
popf
mov
jl
push
push
xchg
fiadd
std
nop
out
outs
jno
jl
dec
in
add
add
push
loopne
jo
xor
cmp
test
inc
add
es
pop
mov
cmp
gs
mov
dec
retf
popf
push
xchg
test
int
nop
mov
inc
sbb
(bad)
ja
push
cdq
dec
xchg
out
adc
xor
nop
adc
adc
inc
sub
test
dec
rol
enter
mov
ins
mov
enter
sbb
lock
lock
adc
mov
ret
in
test
pusha
mov
shl
mov
push
dec
cwde
add
sbb
ror
xor
scas
dec
or
lea
adc
fs
cwde
nop
or
shl
push
xchg
mov
sahf
jp
xor
or
inc
push
popa
lods
lock
movs
push
jmp
jg
and
dec
add
sar
mov
sbb
mov
push
fimul
adc
std
test
cmp
xor
or
push
jecxz
xor
cs
cmp
test
stos
inc
lahf
xor
cmp
xor
lock
outs
mov
or
or
sub
sbb
pop
popa
push
xchg
adc
xor
cmp
sub
mov
adc
add
and
adc
sbb
add
mov
and
xor
jl
cmp
add
push
and
(bad)
cmp
jl
jg
cmp
pop
mov
sbb
pop
push
push
pop
ins
inc
popa
test
and
test
xchg
inc
mov
or
xchg
pop
nop
xchg
es
jecxz
iret
bound
mov
cmp
xchg
(bad)
push
xchg
and
or
jo
sub
test
(bad)
push
js
xchg
and
xor
test
jne
add
test
lock
mov
(bad)
imul
shr
add
inc
arpl
adc
fmulp
jo
mov
sbb
or
add
push
sbb
(bad)
mov
sbb
out
ret
sbb
in
cmp
and
ss
push
add
inc
mov
aam
(bad)
cmps
movs
ret
adc
inc
push
mov
push
xchg
pop
push
nop
add
arpl
js
push
pop
dec
adc
aad
(bad)
adc
mov
and
sub
cmp
rol
push
inc
jecxz
adc
cmc
xchg
xchg
mov
sbb
test
or
scas
xchg
ffree
cmp
pop
adc
mov
push
(bad)
(bad)
sbb
fcomp
dec
not
shl
inc
mov
sbb
xchg
outs
retf
into
dec
xchg
and
inc
push
inc
movs
(bad)
push
mov
neg
add
es
push
scas
test
inc
xchg
inc
cmp
fwait
sbb
push
dec
push
inc
adc
ja
dec
ins
adc
int3
fiadd
ins
xlat
push
fiadd
sub
sbb
cmp
mov
jmp
in
call
or
clc
sahf
inc
jb
adc
(bad)
shrd
shr
and
and
pop
retf
fild
(bad)
jge
adc
sub
loopne
rcl
fisub
fistp
sub
ins
add
aam
movs
sti
mov
dec
sbb
push
and
sbb
add
and
es
sti
or
ds
pop
addr16
sbb
leave
icebp
popa
mov
(bad)
xor
or
(bad)
cli
add
mov
push
and
adc
or
loope
imul
adc
js
test
push
dec
push
push
fcomp
scas
xchg
gs
mov
mov
or
leave
test
jnp
add
jns
fild
das
outs
cmp
neg
dec
xlat
sbb
in
pusha
push
xchg
push
clc
sbb
adc
or
pop
pop
inc
stos
dec
or
mov
mov
jl
jne
dec
jl
and
jmp
push
lahf
and
out
jmp
es
arpl
or
adc
cdq
dec
add
fs
pop
and
hlt
cmp
jbe
leave
adc
pmaxub
add
hlt
cmp
imul
dec
(bad)
jmp
add
or
or
fs
jo
lahf
(bad)
fistp
mov
cmp
iret
and
pop
js
aad
sbb
push
iret
test
mov
or
jle
lods
add
ins
add
out
add
test
loopne
jne
adc
cs
jmp
mov
retf
push
mov
xchg
cmp
mov
or
and
sahf
sbb
sbb
mov
sub
xchg
shr
int3
mov
lods
sbb
or
jmp
jo
and
dec
clc
movs
cmp
pop
push
cli
add
dec
inc
adc
mov
mov
adc
stc
(bad)
pop
je
add
test
xchg
ret
pusha
add
aas
test
adc
push
jno
jl
pop
outs
mov
inc
dec
lea
mov
loope
push
sub
imul
sub
push
pusha
cmp
test
enter
ror
mov
adc
leave
enter
jo
iret
add
or
lods
sub
jo
adc
in
mov
push
mov
repz
and
(bad)
xchg
cmp
and
xchg
les
sub
retf
mov
lea
retf
pop
js
jnp
dec
push
and
cdq
mov
pop
icebp
dec
push
gs
xor
dec
mov
shl
sahf
push
push
pop
aam
outs
mov
dec
and
es
sar
add
xchg
mov
xchg
dec
fwait
push
leave
mov
jl
and
push
xchg
sub
daa
and
js
test
xchg
xchg
and
and
inc
and
sbb
mov
test
sti
aad
xchg
pop
stc
icebp
or
ror
inc
add
test
dec
ret
xchg
mov
jge
xchg
mov
mov
nop
jge
xchg
ds
fmul
jp
xor
dec
sub
shl
sub
aad
adc
cs
ins
or
cmp
dec
add
xor
retf
ret
es
inc
jmp
scas
add
xor
push
cmp
test
cdq
retf
mov
mov
outs
cmp
push
pop
push
mov
mov
push
dec
push
jns
push
cdq
fst
mov
les
push
adc
cmp
nop
enter
enter
dec
adc
rcl
and
xchg
hlt
cmp
in
pop
ret
push
nop
inc
mov
shl
push
dec
mov
imul
jb
mov
mov
rol
or
mov
hlt
or
cmp
lock
stc
add
rcr
xor
es
pusha
push
icebp
(bad)
and
into
ja
pusha
add
lock
adc
dec
or
rcr
sbb
or
ret
test
sub
cmp
add
stos
cmp
mov
nop
sbb
ror
pop
sub
xor
bound
das
xchg
outs
retf
dec
dec
loopne
les
(bad)
in
or
and
ror
jbe
jo
xlat
jns
add
mov
push
sub
pop
add
sub
je
test
mov
test
sub
pop
add
stc
xor
out
mov
adc
cmp
add
mov
xor
ficom
add
push
adc
ins
sub
push
ds
cmp
jle
sbb
or
sbb
adc
(bad)
jge
icebp
inc
inc
mov
loopne
jecxz
and
cmc
add
mov
and
ins
pop
add
adc
add
fmul
pop
inc
mov
or
mov
xor
push
mov
sbb
add
rcl
in
pop
xor
push
ins
imul
mov
cmp
lahf
loopne
sbb
pop
sbb
(bad)
and
adc
pushf
jecxz
enter
add
leave
nop
pushf
mov
mov
daa
mov
lahf
xor
jbe
xchg
lds
jmp
movs
cmp
pop
push
mov
pop
aam
inc
cmps
push
push
jnp
or
adc
xor
cmp
fs
sbb
sbb
push
jne
ror
xchg
bound
imul
mov
cmp
mov
xor
jle
xchg
retf
popa
jmp
cmp
lea
jl
aam
cmp
inc
fiadd
add
mov
adc
test
ins
mov
push
add
jmp
enter
push
add
mov
or
sbb
jmp
daa
xor
cs
cmp
fcmove
push
or
test
and
popf
daa
inc
pusha
add
cmova
into
and
rol
(bad)
clc
push
push
adc
jge
or
or
ins
cmps
push
je
sbb
adc
ins
dec
or
sub
out
mov
cmp
fcom
jle
inc
ss
inc
xor
and
(bad)
xchg
push
or
repz
xchg
gs
mov
mov
or
sub
push
scas
and
gs
or
adc
mov
ss
popa
cmp
sub
loopne
dec
sbb
mov
xchg
cmp
dec
fdiv
loopne
test
sbb
popa
in
inc
mov
shl
adc
sbb
add
iret
add
rol
push
push
add
adc
jl
sahf
mov
test
addr16
aaa
dec
add
cmps
push
outs
add
rol
out
xor
xchg
jecxz
sbb
and
aam
and
xchg
sub
mov
fcomp
fs
sub
xchg
mov
in
in
pop
and
loopne
mov
rcr
lods
aad
sbb
adc
dec
mov
adc
dec
inc
and
shl
and
and
pusha
into
mov
dec
or
xor
xchg
or
dec
adc
ins
push
adc
or
stc
sub
mov
int3
add
pop
xchg
ror
xor
or
out
lds
sbb
push
or
rol
mov
leave
pushf
lods
push
mov
mov
jmp
push
lahf
in
sub
add
lea
into
or
test
cmp
xchg
je
nop
inc
aaa
sub
mov
mov
cmp
and
das
call
push
ret
sbb
ja
pop
xchg
mov
mov
adc
cmps
mov
add
sbb
sbb
jle
lahf
pcmpgtd
sbb
shr
shl
sbb
movs
mov
arpl
jno
and
into
mov
add
pop
adc
jp
into
pop
int
mov
adc
in
or
xor
jmp
adc
xchg
xchg
xor
pop
sbb
cmp
push
and
add
add
test
and
cmc
mov
aaa
add
stos
add
push
jb
pop
fs
jg
shl
int
inc
or
rcl
sub
aad
pop
or
leave
ror
sub
repnz
mov
jno
mov
push
or
mov
rcl
(bad)
jg
pop
(bad)
adc
das
retf
cmps
push
shr
rol
mov
jnp
pop
dec
push
sbb
lods
in
xchg
rol
test
jg
(bad)
daa
stos
push
imul
xor
fucomip
jo
xchg
or
loope
sbb
inc
inc
and
outs
push
jmp
mov
test
push
call
shr
out
dec
ins
add
push
add
out
jmp
mov
jl
frstor
adc
dec
sbb
cmps
and
out
dec
cmps
lods
adc
cmp
clc
or
jns
push
(bad)
mov
pop
cmp
data16
mov
cmps
mov
cmps
mov
push
jle
test
mov
add
xor
addr16
ret
add
inc
sar
mov
or
cmp
je
dec
cmp
jne
jge
cmp
movs
push
and
(bad)
mov
es
mov
push
mov
movs
arpl
lock
inc
xchg
retf
push
sbb
lds
dec
inc
or
jno
aas
mov
pushf
test
mov
popa
enter
inc
dec
push
xor
dec
mov
rcl
movs
mov
xchg
cmp
cmp
xchg
xor
iret
pop
add
sbb
bound
jl
aas
aaa
mov
add
or
or
and
sbb
std
or
jae
add
xchg
lods
xlat
shl
push
ins
or
mov
enter
cmp
lock
sub
sar
les
les
nop
test
inc
mov
sbb
ror
mov
or
loop
inc
jb
jae
jmp
adc
fild
inc
leave
mov
retf
imul
push
gs
ins
push
pusha
retf
push
sub
xchg
xchg
mov
inc
dec
es
js
pop
xchg
pop
add
dec
jge
mov
shl
shl
mov
mov
and
jp
add
push
or
push
pop
add
leave
and
ins
sub
fnsave
je
lods
inc
ins
push
push
fisttp
lock
pop
or
mov
arpl
retf
mov
mov
ins
and
pop
inc
and
lds
test
daa
sahf
dec
adc
inc
mov
lea
enter
mov
and
or
je
sub
or
dec
mov
shl
aas
nop
sub
dec
in
fwait
add
iret
xchg
js
xchg
jbe
pop
cmp
sub
or
push
icebp
movs
inc
and
add
je
sbb
push
sti
ss
lock
sub
call
es
sbb
or
xor
cmc
ret
or
in
or
xchg
cwde
inc
adc
jne
or
fiadd
call
shl
inc
cmp
sub
jb
ret
and
inc
outs
mov
mov
mov
jne
adc
cmp
sub
shl
sbb
mov
in
pop
add
cmp
mov
jb
and
and
clc
jge
jb
mov
mov
leave
cmps
(bad)
mov
in
cs
test
push
add
icebp
xchg
daa
cmp
mov
les
les
mov
add
adc
scas
cmp
jecxz
sub
repz
fiadd
mov
(bad)
int3
adc
(bad)
lock
cdq
jmp
add
out
mov
rcl
movs
call
sub
aam
push
ds
(bad)
fadd
and
stos
clc
pop
fsqrt
and
ss
imul
adc
into
xor
test
mov
lock
jmp
imul
add
aaa
in
call
jl
push
mov
pop
mov
pop
jmp
rol
mov
shl
lods
xchg
ret
mov
add
std
mov
in
push
loopne
lea
add
push
das
fadd
pusha
inc
ins
leave
dec
dec
mov
cmc
xchg
push
cmp
and
in
sbb
shr
fcomp
fmul
mov
fwait
xchg
pop
adc
mov
pop
pop
nop
test
mov
adc
fsub
push
shl
bound
movs
or
mov
push
call
out
or
jnp
push
mov
imul
ins
fmul
sub
pop
cmp
xor
push
pusha
xor
in
add
adc
sub
dec
adc
cmp
bound
xor
or
sbb
add
cwde
adc
and
call
fsubr
adc
es
inc
cmp
xchg
cmp
add
mov
push
or
leave
mov
in
pop
mov
je
outs
cwde
and
jmp
dec
js
clc
fld
jge
xor
add
adc
gs
or
sbb
or
cmp
mov
xor
push
inc
daa
pusha
adc
movs
mov
jbe
and
lods
pop
or
or
dec
and
test
jae
cmp
mov
inc
push
mov
outs
add
add
mov
aas
mov
xchg
add
call
aam
loop
add
adc
sub
mov
pop
leave
or
stos
mov
je
std
je
pop
pop
push
sub
jbe
movs
aam
lock
jns
push
jle
enter
or
and
push
fsubr
nop
or
pop
sub
dec
test
rol
or
add
(bad)
mov
xor
loopne
jno
push
dec
in
daa
out
and
sbb
cmc
movs
sub
lods
cwde
add
and
nop
arpl
xor
jmp
mov
inc
add
xor
or
imul
or
hlt
sub
cs
pop
dec
and
or
repnz
dec
add
sbb
push
mov
adc
ins
test
addr16
das
xchg
iret
xchg
xchg
xchg
loopne
cmp
and
push
sub
jno
or
xchg
mov
adc
pop
leave
xchg
xchg
add
icebp
out
fdecstp
call
cld
das
dec
int3
sbb
rcl
cmp
cmp
movs
sahf
out
inc
sub
mov
outs
pop
cmp
nop
loopne
leave
jl
add
lods
push
inc
loope
mov
push
mov
adc
mov
sbb
push
imul
sub
xor
cmp
add
movs
push
fimul
push
xchg
inc
or
not
fcom
pop
push
sub
jge
shl
addr16
ss
inc
(bad)
sbb
pop
push
inc
inc
sahf
sbb
mov
fxch
fnstcw
cmps
and
sbb
mov
inc
pusha
call
mov
push
mov
cmp
mov
mov
and
imul
or
lock
sub
fwait
sbb
and
movs
out
cmp
xlat
scas
mov
test
out
push
sbb
xor
pop
xor
pop
xchg
clc
int3
jl
test
mov
clc
xlat
cmps
movs
dec
inc
lock
inc
arpl
out
sbb
inc
add
fmul
xchg
push
pop
inc
shr
xchg
or
lods
pop
test
je
scas
sub
nop
sbb
test
xor
adc
or
rol
pop
adc
cmova
push
adc
test
inc
scas
mov
fist
inc
push
pop
mov
iret
shr
jno
popf
push
rcl
sbb
and
js
mov
dec
leave
add
or
xor
dec
jae
mov
adc
inc
lahf
and
jno
cmc
fisubr
mov
mov
sbb
ror
clc
pop
retf
test
push
or
pop
mov
xchg
sbb
jae
add
ror
xchg
jmp
push
pop
mov
mov
jae
lods
or
xor
imul
xor
(bad)
and
pop
and
aaa
popf
leave
inc
aam
dec
inc
mov
jmp
sub
mov
inc
mov
int
js
fmul
and
test
and
loop
mov
pop
push
xor
sub
push
arpl
push
add
je
(bad)
and
mov
jp
or
jmp
not
lea
push
ja
or
sub
cld
adc
stc
cmp
dec
xchg
dec
or
cs
(bad)
aam
not
in
xchg
clc
(bad)
adc
and
or
mov
outs
pop
js
mov
pop
xchg
add
test
aad
pop
call
(bad)
pop
cmp
call
and
and
dec
push
mov
xchg
fild
sub
add
push
and
push
aam
mov
sbb
add
add
mov
push
push
fiadd
mov
push
int
push
cmps
movs
jl
xchg
call
aas
push
add
and
pop
(bad)
jl
xor
aaa
inc
cdq
add
push
push
xor
push
pop
push
sub
and
aaa
mov
call
jne
adc
pop
hlt
dec
pop
sub
data16
ror
cmp
lds
add
and
(bad)
pop
and
mov
push
dec
inc
fmul
and
ja
xor
sub
jp
rcr
out
js
mov
daa
push
sbb
test
xchg
sar
adc
sub
enter
jecxz
pop
add
push
mov
push
xor
cmp
into
xor
sbb
inc
fimul
ret
push
outs
inc
(bad)
pop
pop
inc
iret
loop
aaa
aas
sub
lea
outs
inc
xlat
in
pop
xchg
mov
and
test
xchg
jl
push
push
imul
fmul
sbb
cmp
mov
pop
jae
mov
jae
xchg
sub
sub
jae
push
inc
dec
mov
cs
add
int3
xor
inc
sar
mov
pushf
dec
xlat
loopne
jge
and
imul
jae
call
es
inc
cmps
mov
pop
dec
maxps
shl
or
jae
retf
xor
xchg
mov
fwait
or
rcr
cmp
shr
adc
iret
add
xchg
dec
in
xor
xchg
cmp
mov
sub
(bad)
js
dec
cmp
push
or
dec
add
or
add
fmul
pop
push
in
fisttp
adc
rcl
pop
cmp
and
and
xor
pushf
in
dec
adc
mov
push
adc
or
in
test
add
mov
jae
test
mov
mov
dec
test
adc
jne
xchg
adc
mov
inc
jne
sbb
push
xchg
aam
mov
cmps
lods
and
mov
sbb
lods
leave
adc
push
aad
in
sub
inc
imul
sub
je
add
(bad)
add
cli
dec
nop
inc
mov
jle
cmp
call
inc
out
lahf
test
fs
sti
xor
call
sahf
stos
mov
lods
inc
lock
dec
sbb
adc
xchg
mov
lea
call
sbb
idiv
adc
mov
push
hlt
and
add
lock
and
aad
inc
inc
ret
scas
add
mov
pop
repz
jge
add
into
and
xchg
cmp
lea
dec
adc
mov
test
cmp
cmp
test
inc
call
xor
xchg
retf
inc
or
inc
xor
adc
mov
das
loopne
shr
jmp
iret
les
dec
call
add
out
mov
add
or
test
cmp
push
sbb
mov
dec
sub
xchg
fcmovu
jge
xchg
outs
daa
mov
shl
iret
(bad)
test
xchg
pop
mov
ror
retf
push
lea
test
inc
je
push
dec
aaa
mov
psubsb
or
mov
xchg
xor
inc
mov
dec
add
and
dec
jmp
xchg
add
pushf
mov
mov
or
in
(bad)
in
mov
or
ret
fst
out
ss
mov
mov
inc
mov
pusha
ds
cmp
sbb
pop
pop
pop
push
add
xlat
pop
adc
fs
xor
push
adc
add
pop
pop
mov
and
and
and
jne
inc
and
xor
dec
(bad)
iret
das
aad
jg
push
xchg
sub
cmp
arpl
xor
add
adc
push
stos
adc
fdivr
xor
fld
push
pop
jle
test
popa
rol
push
jb
into
stc
adc
push
sub
add
into
pusha
ds
mov
icebp
and
push
sbb
or
pop
rcr
sbb
xor
les
pop
lock
mov
int3
fisub
jne
push
retf
aam
adc
repz
imul
movs
retf
pavgb
xchg
lock
call
mov
fisttp
push
lods
mov
add
mov
push
inc
dec
inc
push
push
and
gs
sub
push
imul
sbb
push
test
inc
xor
push
push
push
into
rcl
sar
cwde
daa
xor
sbb
mov
cmp
cmp
mov
and
inc
lods
jnp
xor
sub
cs
sahf
nop
sub
cmp
repnz
sub
fidiv
aaa
lds
inc
push
dec
dec
pop
test
or
lds
call
push
inc
push
cmp
mov
push
sbb
aam
sbb
cmp
adc
lods
fdivr
push
cmp
cmp
inc
push
pop
fisub
retf
call
(bad)
pop
sub
(bad)
std
adc
and
test
xchg
cs
adc
mov
push
mov
mov
and
or
dec
(bad)
adc
pop
push
pop
rcl
out
imul
mov
ins
jmp
adc
adc
push
push
mov
les
movs
iret
sbb
mov
dec
cmp
dec
daa
and
stos
cli
fdivr
sbb
das
and
mov
inc
mov
xchg
out
xor
pop
div
pushf
mov
call
sub
inc
addr16
dec
or
add
and
xchg
dec
aaa
fsub
vmread
loopne
pop
sar
xchg
jb
push
dec
adc
cmp
sub
ret
gs
fisttp
push
mov
push
push
test
lea
aad
retf
mov
lea
xchg
push
or
clc
pop
jp
cmp
mov
nop
and
call
sub
or
or
call
push
xchg
dec
dec
call
or
push
retf
mov
xchg
pushf
adc
jnp
xchg
mov
rol
jbe
pusha
adc
jl
jmp
pop
cmp
dec
mov
ins
lods
int3
shr
push
in
mov
sub
jne
mov
mov
ins
outs
ret
sbb
push
cmps
aad
icebp
jb
sub
sbb
xchg
mov
js
adc
cli
js
shr
movs
shr
add
pushf
fst
adc
test
movaps
mov
shr
pop
sbb
inc
cmp
cmp
sbb
add
ror
push
fnstcw
push
and
les
dec
pop
or
adc
cmp
(bad)
xor
lea
sub
adc
mov
aaa
jo
repz
stc
test
in
push
or
and
xor
es
sub
jp
sti
cmp
jle
mov
mov
jg
pop
inc
mov
shl
xlat
mov
aas
mov
xor
add
xchg
pop
push
ror
inc
and
add
rcr
fcmovne
adc
sub
pop
sbb
cmp
inc
fcmovu
push
adc
add
pop
or
loope
outs
aam
or
sbb
int
mov
aad
push
dec
dec
adc
jle
dec
push
stc
jg
dec
hlt
or
cmp
ret
rcr
add
cmp
or
mov
test
rcl
xor
or
jecxz
ja
and
mov
sbb
loop
jl
mov
jo
jge
dec
scas
jecxz
mov
mov
out
fiadd
xchg
mov
out
dec
stos
and
mov
mov
adc
das
push
push
pop
pop
je
push
adc
mov
or
in
imul
sbb
inc
nop
(bad)
adc
shl
aad
cdq
push
mov
and
stos
popf
or
dec
cmp
or
and
dec
add
(bad)
loop
dec
adc
inc
arpl
push
int
cmp
or
dec
jne
add
pop
adc
xchg
xchg
(bad)
dec
dec
inc
ins
dec
mov
mov
sbb
mov
add
call
mov
js
adc
or
stc
sbb
mov
daa
mov
aaa
icebp
mov
inc
mov
movs
aam
lea
cld
into
(bad)
mov
jbe
cmp
cld
retf
and
pop
and
or
fwait
sub
mov
in
dec
call
stos
bound
out
lock
pop
pop
cmp
cmp
je
jno
imul
cmp
add
jge
add
pop
sbb
test
nop
mov
push
inc
inc
jo
(bad)
cwde
sub
add
ror
mov
push
hlt
cld
(bad)
push
jb
adc
into
and
pushf
adc
push
add
lock
movsx
push
(bad)
or
dec
sub
shl
adc
mov
rcr
or
xor
sbb
cmc
stc
lods
sbb
sbb
push
adc
test
xchg
add
add
std
aad
mov
popa
aad
sbb
mov
ret
lahf
popf
push
je
or
cmps
xor
and
fdivp
xor
xchg
stos
pop
jp
xor
test
sbb
inc
sub
mov
sar
test
push
stos
inc
adc
xchg
loop
cmp
xor
(bad)
jmp
outs
je
jmp
ror
ror
inc
mov
outs
sbb
rcr
add
sbb
xlat
sbb
enter
daa
sub
enter
test
cmp
fcom
fs
pop
mov
in
add
arpl
stos
in
pushf
ret
sub
push
sbb
ins
pusha
(bad)
les
fldenv
call
repz
rol
cmp
xor
add
hlt
es
arpl
imul
adc
mov
adc
adc
pop
in
adc
inc
sub
sbb
inc
adc
inc
adc
and
test
ja
dec
cmps
cdq
push
popa
add
icebp
in
jle
jg
loop
dec
imul
in
mov
lock
adc
push
inc
ret
or
sbb
outs
sbb
ficomp
add
fwait
and
or
mov
pop
jge
int3
xchg
add
inc
jae
dec
rcl
add
and
or
nop
pop
lds
out
or
mov
cli
js
jne
or
cdq
inc
xchg
sub
add
cmp
es
adc
loopne
add
shr
jmp
js
or
imul
mov
ins
inc
fadd
jg
adc
push
jle
cmp
scas
and
in
mov
pop
and
pop
je
sbb
fcom
jnp
or
rol
jo
or
test
test
lods
jge
sub
pop
add
mov
pop
aam
xchg
or
jo
mov
or
sbb
popf
pushf
daa
mov
or
(bad)
mov
mov
enter
push
adc
xor
push
push
push
mov
ds
pop
push
add
fadd
(bad)
push
pop
fdivr
sbb
cmp
and
pushf
dec
jecxz
jne
mov
shr
(bad)
rcr
cmp
add
(bad)
(bad)
repnz
stos
rol
mov
add
fidiv
jne
dec
sbb
pop
sub
sti
push
adc
sbb
clc
arpl
outs
lods
test
clc
imul
rol
lods
sbb
and
mov
mov
int
push
mov
adc
(bad)
cmp
imul
mov
jg
rcr
and
mov
mov
inc
and
stc
bound
out
movs
and
sahf
sbb
cmp
jb
pusha
or
rol
dec
in
jge
jo
loopne
fidiv
mov
inc
nop
xchg
jno
test
rcl
adc
lock
test
rol
scas
jge
inc
mov
and
cs
dec
sar
sbb
dec
cs
adc
scas
call
and
xor
leave
imul
icebp
inc
jmp
ret
push
add
imul
cmp
push
pop
movs
jo
leave
mov
test
adc
xor
and
push
mov
add
loope
mov
inc
fxch
sbb
sbb
sbb
loop
mov
fcmovu
rol
pop
aam
adc
shl
sbb
or
jl
setg
push
sbb
push
jp
xor
outs
adc
xchg
xor
icebp
imul
data16
xor
shr
sub
add
lea
push
in
and
setbe
jl
push
mov
adc
sbb
adc
fisttp
or
out
pop
jb
pop
jecxz
add
ret
sub
scas
mov
add
fxch
popf
int
cmp
mov
pop
or
imul
(bad)
retf
sbb
push
dec
xchg
test
and
dec
push
mov
mov
add
rcr
out
sub
dec
outs
xchg
or
aas
pop
loopne
dec
add
dec
loope
stos
(bad)
jo
scas
sbb
dec
test
inc
and
pop
leave
and
adc
inc
mov
mov
sbb
sbb
ror
push
push
mov
xor
pop
mov
inc
push
test
pop
scas
sbb
jmp
ret
pop
push
push
jl
(bad)
jp
dec
xchg
push
mov
inc
shr
and
leave
lgs
adc
arpl
test
pop
pop
or
sbb
cwde
dec
sbb
push
adc
push
shl
test
push
or
cld
idiv
je
jge
fsubp
add
add
push
push
sar
(bad)
adc
frstor
loopne
dec
cmps
sub
test
fcom
inc
sahf
and
push
sbb
aad
scas
push
jmp
test
imul
pop
jo
outs
or
call
sub
jp
cli
jecxz
stos
cmp
outs
arpl
mov
test
mov
pop
add
movs
in
and
adc
mov
jmp
aad
mov
adc
mov
add
mov
mov
in
xor
sbb
rcl
mov
sub
add
mov
cmp
pop
loopne
dec
fs
aam
jp
ret
push
mov
aaa
lods
ins
jo
adc
cwde
test
stc
fnsave
mov
push
mov
mov
cmp
mov
dec
push
or
cmp
mov
sbb
xor
pop
dec
add
or
jmp
push
sub
in
or
and
(bad)
add
ins
(bad)
stc
mov
out
ror
adc
or
and
and
or
pop
mov
jecxz
in
jo
aam
pop
or
cmp
jb
dec
cli
aad
es
je
movzx
sahf
push
jg
xor
pop
mov
pop
xor
push
bound
mov
popa
add
loope
out
dec
pop
push
loope
scas
pop
jne
mov
je
sub
js
and
mov
ins
sti
popa
adc
push
out
fisttp
sub
push
cmp
pop
dec
jmp
data16
ja
mov
push
push
call
jne
jmp
xchg
mov
mov
sub
inc
popf
test
int3
pop
dec
inc
movs
inc
dec
xchg
cmp
push
pop
adc
cmps
add
imul
jecxz
xchg
or
call
into
mov
mov
jnp
scas
or
or
pop
jno
add
ret
sub
(bad)
jne
retf
fwait
loopne
movs
and
nop
out
push
push
adc
lods
adc
inc
push
pop
sar
adc
adc
sar
fdiv
fiadd
dec
adc
enter
loopne
jb
test
loopne
leave
xchg
inc
ds
clc
push
xchg
jl
dec
or
add
mov
pop
sub
pop
push
mov
xor
(bad)
pop
push
mov
call
loopne
or
add
add
jns
inc
scas
nop
mov
seto
inc
adc
pusha
or
mov
dec
retf
fcomp
and
jbe
int3
mov
xchg
(bad)
adc
call
sahf
(bad)
adc
or
or
or
por
lds
outs
movs
sar
xchg
and
add
push
mov
xchg
xchg
retf
les
adc
cwde
jae
sub
enter
xor
add
pop
(bad)
retf
sbb
dec
push
pusha
inc
mov
sub
mov
add
inc
lock
popf
dec
(bad)
cdq
pusha
push
test
add
outs
sbb
loop
pusha
or
(bad)
jle
jmp
rol
icebp
add
cmp
adc
lahf
cmp
jne
xor
dec
pop
xor
jmp
jp
mov
fistp
ins
aam
fistp
or
out
xchg
add
inc
mov
sbb
mov
in
nop
or
neg
jns
jp
les
push
sub
sbb
gs
and
std
(bad)
push
push
xchg
sbb
cmp
mov
add
push
push
cmp
and
movs
dec
xlat
or
lea
push
mov
jbe
xchg
cmp
sbb
push
mov
inc
adc
sub
add
pop
jb
jbe
cld
das
pop
inc
jne
jb
je
add
cmc
or
xchg
dec
inc
fcom
adc
add
xchg
push
es
(bad)
fs
mov
enter
enter
popf
rcl
add
pop
push
imul
ds
mov
pusha
int
and
int
or
test
shl
arpl
movs
in
push
fwait
push
fmul
push
add
loope
or
nop
stos
dec
mov
adc
mov
add
mov
loopne
sub
arpl
xlat
adc
lock
jns
push
add
pop
adc
adc
lods
popf
or
fs
rcl
jg
push
push
sub
aam
xchg
pop
lock
push
loopne
out
or
sbb
adc
or
aas
mov
je
(bad)
popa
and
inc
push
test
xchg
add
pop
adc
ins
cld
add
jmp
bound
inc
aam
xor
xor
push
fadd
test
mov
jmp
push
(bad)
stos
pop
jl
loopne
(bad)
data16
push
and
or
xchg
repnz
aam
push
push
arpl
clc
jmp
push
inc
xchg
cld
cmps
add
add
dec
push
lods
push
jp
xchg
push
pop
in
enter
retf
xchg
call
sub
cmp
mov
inc
gs
jg
pop
cvttps2pi
sub
cld
sub
pusha
jno
pop
mov
jo
aaa
and
add
cmp
xor
xchg
imul
sub
lods
sbb
adc
pusha
push
out
test
sub
lock
dec
inc
pop
test
(bad)
and
inc
iret
ret
cmp
mov
data16
lock
dec
push
jb
inc
dec
jno
xor
imul
or
or
cdq
dec
jmp
shl
adc
fist
cmp
popf
push
push
je
push
cwde
cli
out
das
jle
cmp
mov
jmp
cmp
pop
jl
enter
inc
cmps
sbb
or
fldcw
dec
test
loopne
leave
retf
ja
lea
mov
push
inc
dec
pop
xchg
or
stos
test
test
inc
or
sbb
dec
vminss
jnp
and
add
shl
test
mov
adc
xor
icebp
mov
inc
out
and
fwait
mov
mov
xor
push
iret
cmc
or
mov
inc
test
add
add
aas
retf
add
aas
shr
push
fistp
aas
mov
lea
mov
(bad)
push
lock
jl
cdq
push
cdq
(bad)
(bad)
ss
pop
test
cdq
loopne
lock
jmp
xchg
dec
rol
add
sub
pop
aas
add
imul
add
sub
popa
sub
scas
sbb
ss
inc
and
or
out
dec
mov
add
xor
or
push
or
xchg
out
rcl
into
sub
add
add
xlat
xchg
mov
or
jge
jmp
(bad)
neg
or
pop
and
sbb
rcr
mov
loopne
mov
xor
xchg
push
sub
or
sub
cld
in
or
add
xchg
dec
in
or
mov
jmp
sub
test
lahf
out
jo
shr
aas
int3
rcr
sbb
in
out
ss
xor
pop
adc
push
and
push
arpl
inc
jecxz
push
fist
pop
call
adc
icebp
ret
add
add
sar
test
popa
push
push
inc
(bad)
push
rol
mov
call
fimul
add
add
xor
dec
pop
push
imul
xor
mov
jge
jb
adc
xchg
je
jg
(bad)
push
(bad)
xor
pop
sub
lock
inc
add
sti
xchg
xchg
sub
xchg
adc
sbb
cmp
mov
and
add
rcl
imul
fmul
imul
jb
aam
cmp
pop
sbb
xchg
mov
xchg
jp
out
and
pop
retf
jno
ret
imul
cmp
or
(bad)
je
shl
mov
das
sub
sbb
shl
icebp
mov
push
and
inc
pop
add
xor
inc
sbb
push
fst
in
xor
cmp
daa
push
pop
test
enter
push
jnp
or
push
loope
mov
and
push
movs
and
ret
sbb
or
inc
dec
push
inc
and
mov
rol
jmp
mov
call
(bad)
ds
lock
and
push
and
push
ins
(bad)
xchg
hlt
mov
clc
xlat
xchg
jl
xor
push
or
jo
jb
sub
inc
adc
add
add
xchg
lock
adc
sbb
retf
daa
jmp
sub
jmp
and
jmp
add
and
inc
push
inc
push
mov
dec
inc
adc
leave
jmp
and
sub
push
xlat
mov
add
mov
fsub
sub
sub
xlat
mov
js
lea
and
add
cwde
push
mov
xchg
cmp
rcr
mov
mov
sub
cli
fstp
and
retf
and
push
jo
shl
cli
and
pop
add
das
inc
mov
or
mov
lods
in
sub
sub
xor
cmp
js
dec
and
jecxz
add
not
cmps
or
stc
jmp
call
and
inc
pop
mov
shl
je
pusha
(bad)
enter
lods
fstp
mov
mov
sub
adc
push
mov
xchg
outs
dec
in
sub
xor
inc
and
mov
mov
cmp
repz
nop
mov
push
or
inc
rcr
sbb
mov
pop
add
xor
mov
push
xchg
test
fldcw
lods
push
ret
pop
retf
and
inc
lods
cmc
popf
xchg
pop
je
cmp
je
cmp
xchg
or
je
cmp
je
not
cmps
not
adc
imul
add
adc
sub
or
sbb
add
xor
fsubrp
push
cmp
push
cs
sub
cmp
add
jmp
push
jne
dec
rcl
call
xor
xor
dec
and
jp
pop
adc
dec
retf
mov
push
xor
xor
call
stos
pop
clc
rol
add
sbb
lock
pop
imul
jg
ficomp
neg
jmp
sub
(bad)
cmp
pop
add
push
in
stos
add
or
retf
inc
xor
(bad)
inc
ss
add
cmp
sbb
lock
xchg
push
inc
pop
inc
inc
dec
jl
jmp
je
or
xchg
add
xor
pop
or
xchg
hlt
adc
movntps
(bad)
rcl
adc
adc
push
inc
mov
or
test
shl
push
mov
add
sub
jl
jae
leave
lock
jnp
out
mov
xor
dec
mov
pop
pop
jo
mov
rol
sub
add
xchg
xchg
adc
ss
jne
or
mov
cld
rol
scas
and
pop
sbb
jns
adc
ret
js
xchg
mov
rcl
add
hlt
xor
jp
add
cmps
fld
mov
adc
je
test
rcr
nop
xor
mov
and
repz
xchg
or
mov
inc
mov
xor
pop
add
bound
or
mov
mov
pushf
push
mov
xchg
and
inc
inc
lods
nop
add
adc
sub
add
loopne
clc
jb
imul
pop
xchg
adc
fs
in
fsubr
add
push
pop
jb
add
loopne
dec
enter
idiv
dec
sub
adc
sahf
xchg
cmp
retf
adc
movs
add
dec
mov
retf
or
sub
mov
mov
mov
(bad)
adc
stos
mov
xor
or
loope
and
jne
xorps
jg
ror
mov
push
adc
xchg
int
sbb
je
xchg
enter
lock
jo
cld
jle
dec
cmp
jne
xor
xor
mov
sub
mov
sub
add
bound
sbb
adc
test
enter
mov
cmp
or
movs
cmp
jb
and
daa
lods
popa
lds
in
jge
mov
or
sbb
adc
in
push
lods
inc
scas
in
pop
inc
add
(bad)
cmp
jnp
shl
sbb
sbb
adc
scas
ja
push
iret
scas
push
mov
scas
push
mov
sbb
(bad)
push
sub
push
add
sbb
xor
adc
jge
in
shl
dec
pop
jo
sub
ins
lods
push
add
add
adc
outs
jecxz
mov
add
cmp
shr
pop
sub
sub
jo
add
jae
add
xchg
mov
ds
and
pushf
nop
pop
call
add
or
stos
adc
loope
popf
pushw
xchg
lods
push
(bad)
xor
scas
js
mov
sub
pop
and
call
cdq
push
lea
mov
or
jbe
xchg
int
jl
xchg
push
adc
std
adc
sub
cmp
call
adc
(bad)
mov
add
test
inc
xor
call
mov
push
push
xchg
pusha
dec
test
xchg
and
pusha
xchg
add
push
sbb
adc
push
xor
and
out
cmp
inc
lahf
lock
fisubr
jb
inc
hlt
lock
mov
or
inc
push
mov
add
push
in
mov
es
adc
sub
ret
add
dec
and
xor
xlat
shl
and
mov
push
mov
and
xor
mov
xchg
fadd
inc
pop
in
not
inc
sub
cld
movs
idiv
sbb
jne
push
adc
jbe
fdivr
mov
cmp
jne
inc
cmp
in
loop
or
jle
in
push
lds
fidiv
outs
mov
test
jne
adc
xor
cli
xchg
sub
jge
cmc
dec
nop
in
jl
mov
or
inc
sub
jl
xchg
(bad)
imul
or
ins
and
sbb
pop
fldcw
adc
inc
adc
inc
arpl
nop
or
sbb
test
mov
movs
xor
sbb
pop
xchg
das
sub
jmp
shr
push
adc
add
ss
mov
xchg
ret
xor
inc
xchg
xchg
fdiv
add
push
(bad)
dec
xor
jmp
adc
mov
dec
mov
(bad)
call
pop
loopne
xlat
add
test
inc
int3
das
push
fdecstp
inc
scas
or
data16
loope
push
retf
cmps
inc
mov
mov
inc
fisub
inc
dec
pusha
fwait
movs
dec
stos
mul
cld
and
popf
ret
mov
pushf
or
mov
xlat
sub
sbb
movs
in
push
add
xchg
cmc
push
add
adc
les
mov
xor
and
es
lea
xchg
bound
pop
pop
pop
sub
je
std
push
imul
mov
test
ins
pop
cld
cwde
mov
xor
movs
rcr
push
lea
rol
push
cmp
push
xchg
cmp
pop
inc
iret
push
push
sbb
or
test
xchg
xor
popf
adc
sub
call
jo
sbb
sub
mov
stc
nop
pop
add
sbb
popa
push
stos
test
inc
lock
jmp
and
xlat
mov
jb
jmp
lea
pop
sub
adc
and
rcl
mov
dec
movs
cli
fs
mov
inc
adc
cmp
into
push
add
xor
add
xchg
and
mov
add
pop
or
cmp
mov
sbb
mov
(bad)
push
inc
cmp
ins
lea
jno
inc
add
sub
loop
push
adc
je
or
sub
or
icebp
sbb
jae
mov
loopne
ret
in
sbb
ret
mov
push
jl
or
mov
mov
or
cli
jle
dec
ret
sub
loope
les
mov
addr16
adc
aam
add
cmp
fild
inc
iret
add
and
pop
mov
xchg
outs
and
cmp
push
imul
xor
jg
in
xchg
or
or
dec
and
add
push
xor
shl
or
mov
push
push
push
xchg
inc
sub
pusha
test
jbe
pop
or
pushw
dec
and
xor
call
dec
or
dec
push
sub
and
xor
dec
dec
ret
ins
outs
or
cmp
add
enter
stos
push
or
xor
xor
popa
and
xchg
fstp
adc
add
mov
or
and
adc
inc
xchg
xor
jl
stos
mov
imul
mov
mov
sbb
add
jno
dec
and
lock
xor
popf
sbb
and
xor
lahf
sbb
add
jo
sbb
in
or
push
pop
enter
pop
outs
ins
or
xor
mov
adc
dec
push
nop
mov
add
adc
aad
sbb
pop
outs
pop
ins
pop
leave
mov
call
mov
sbb
lahf
jl
xchg
movs
or
fwait
sar
clc
js
cmp
xchg
das
push
out
iret
push
or
in
lea
cli
push
scas
cmp
pop
sbb
add
jb
ins
sub
dec
xchg
or
cmp
push
lds
sahf
jo
ficomp
sbb
mov
je
adc
add
pop
clc
fcmovb
(bad)
and
mov
jge
sbb
push
cdq
push
out
out
add
popf
add
aaa
ins
mov
push
push
cmp
jmp
and
mov
xor
sahf
and
xchg
or
test
sbb
sbb
and
lock
push
add
sub
jl
imul
jne
stos
hlt
inc
add
add
lock
mov
inc
add
push
addr16
sbb
dec
add
out
sbb
sbb
stc
push
sbb
dec
dec
xchg
sub
pop
sbb
fsubr
scas
add
das
fidivr
pop
adc
and
jmp
xor
rol
pop
or
repnz
fiadd
cmp
retf
mov
out
sbb
aas
or
(bad)
dec
dec
lock
(bad)
hlt
xor
int
mov
or
test
sub
push
lods
jne
aaa
mov
adc
fdiv
aam
hlt
mov
out
sbb
cmps
es
push
test
add
jle
push
lds
inc
in
xchg
jp
push
leave
(bad)
fnstenv
in
mov
les
or
adc
adc
inc
pop
and
or
xor
daa
ror
xlat
imul
inc
jp
out
fisttp
sbb
cs
or
adc
inc
xchg
push
or
les
adc
shl
lods
inc
cdq
and
dec
mov
shl
shr
imul
popa
and
cmp
add
adc
int3
mov
or
pop
or
scas
xchg
adc
push
mov
or
xchg
xchg
sub
or
inc
push
sbb
or
in
cmp
xchg
and
nop
push
or
das
add
je
or
test
lea
das
cmp
je
(bad)
retf
scas
inc
pop
clc
xor
xchg
add
adc
and
mov
xor
push
movs
push
adc
imul
sar
inc
push
and
or
retf
dec
cmp
cs
xchg
hlt
pop
je
cmp
dec
sub
rol
repz
xor
sub
xlat
add
adc
pop
and
dec
pop
adc
push
enter
push
icebp
(bad)
fild
push
push
ja
sub
push
inc
inc
push
pop
adc
pop
add
sub
mov
addr16
sbb
imul
pop
ins
or
add
adc
pop
xchg
addr16
pop
cmp
ds
das
pop
leave
adc
aas
adc
lahf
loop
dec
loopne
outs
push
xchg
inc
movs
mov
stos
jle
test
and
scas
push
inc
cmp
mov
fdiv
(bad)
mov
retf
adc
aaa
in
sbb
ret
test
mov
inc
sub
mov
or
xchg
add
in
call
outs
sub
mov
sub
ret
dec
mov
scas
lods
and
jmp
push
loop
idiv
fcmovnbe
(bad)
je
pop
dec
add
mov
scas
add
inc
lock
and
jb
lock
lock
mov
add
adc
(bad)
rcl
pop
int3
jg
sub
cs
sbb
pop
push
ror
xor
mov
pop
sub
add
jb
mov
pusha
clc
shl
ret
mov
js
push
popa
test
push
add
push
fild
and
add
je
sbb
push
sti
imul
lods
int
dec
mov
call
push
pop
cmc
nop
scas
cwde
add
jecxz
sbb
cmp
test
add
adc
dec
inc
cmp
and
jo
xchg
(bad)
and
mov
adc
movs
retf
push
inc
nop
jge
adc
not
adc
adc
pop
push
push
cmp
mov
jl
mov
inc
ins
inc
sub
ja
mov
scas
sub
rcl
jg
mov
pop
sar
js
mov
jmp
push
mov
cs
or
mov
jle
pusha
inc
pusha
add
nop
xchg
mov
dec
dec
in
loopne
or
test
enter
push
add
icebp
or
xchg
test
test
enter
add
test
and
in
or
ins
or
mov
jne
add
lea
leave
(bad)
pop
inc
dec
das
inc
arpl
int
mov
xchg
enter
ret
mov
inc
pop
adc
dec
add
les
loopne
scas
cmp
iret
push
addr16
sbb
pop
jle
add
enter
mov
daa
add
mov
jno
inc
mov
cmp
dec
add
lods
push
cmp
fadd
push
(bad)
dec
jmp
adc
and
jg
(bad)
(bad)
push
adc
pop
retf
mov
add
xchg
(bad)
das
mov
mov
push
and
inc
sbb
adc
punpckldq
push
(bad)
sbb
jbe
push
pusha
cmp
xchg
inc
sub
inc
imul
adc
cwde
in
les
add
dec
(bad)
cmp
movs
adc
retf
xchg
adc
adc
aam
push
in
shl
jg
fdivr
jmp
inc
xchg
xor
inc
neg
sbb
test
mov
push
mov
inc
dec
popa
mov
sar
add
mov
scas
sub
or
push
(bad)
scas
add
push
xor
mov
mov
test
in
call
cmp
or
or
imul
push
lock
inc
or
dec
pop
mov
push
mov
bswap
push
dec
or
add
push
mov
aad
push
fist
sbb
and
xchg
add
je
icebp
sbb
push
push
in
jp
lock
sbb
sub
pop
ret
sub
mov
and
movs
push
rol
mov
xor
jae
lea
lahf
jae
jnp
dec
jb
in
es
or
or
adc
sbb
xchg
adc
dec
add
imul
pusha
cli
dec
xor
sbb
push
xchg
sub
sub
push
xchg
xchg
les
pop
lods
fsubr
or
xor
in
fs
pusha
test
add
or
push
mov
inc
add
leave
add
imul
xor
rcr
add
mov
xchg
clc
jbe
mov
and
loope
jbe
inc
hlt
rcr
add
pop
mov
inc
hlt
retf
repz
inc
push
pop
clc
or
push
mov
adc
in
and
nop
rcr
inc
es
call
dec
jle
dec
adc
(bad)
adc
sbb
xor
push
add
adc
mov
sub
inc
sbb
out
adc
imul
outs
outs
inc
shl
adc
xchg
inc
jge
int
mov
dec
pop
add
in
push
sub
daa
das
mov
(bad)
push
adc
in
push
test
mov
jmp
adc
ret
retf
xchg
pop
call
pusha
inc
aam
jb
dec
cs
cmps
jmp
popf
adc
scas
xchg
mov
xor
aad
xchg
pop
and
(bad)
xchg
mov
cmp
fcom
push
add
popa
sbb
in
dec
push
lock
mov
push
rcl
cld
rcl
leave
hlt
mov
cmps
pop
mov
inc
pop
test
jae
stos
sub
jne
pushf
inc
dec
call
int3
scas
push
pop
push
loopne
repnz
enter
or
in
into
loopne
jo
and
imul
or
adc
jns
int3
sub
or
push
int3
pusha
pop
dec
push
in
les
dec
and
enter
sub
or
iret
jae
adc
jmp
xchg
and
aam
jae
push
rcr
adc
and
inc
pusha
push
in
cmp
mov
scas
out
dec
sub
rol
dec
or
fisttp
mov
inc
or
xchg
int3
cmp
lods
je
xchg
mov
sub
cld
ins
adc
sbb
push
mov
mov
sub
jbe
pop
mov
out
pop
(bad)
or
(bad)
rol
mov
xlat
out
dec
icebp
and
into
jp
cmp
jno
dec
sub
adc
outs
xchg
test
and
dec
call
ds
push
mov
scas
add
xor
aam
mov
ins
sbb
cmp
scas
mov
push
adc
pop
mov
and
xor
les
(bad)
cmp
rcr
jg
push
jo
sub
mov
dec
cmp
sbb
jb
pop
mov
xchg
push
es
mov
add
in
dec
cs
jne
lods
inc
pusha
inc
pushf
pop
mov
adc
inc
call
sbb
inc
outs
cmp
test
adc
adc
ins
mov
mov
test
xlat
jb
in
jmp
ins
pop
jne
movs
scas
push
xchg
inc
dec
sbb
icebp
dec
mov
out
adc
mov
sub
and
mov
pop
jp
ror
mov
adc
lahf
cmp
les
and
jne
pop
add
mov
pop
fbstp
push
popa
enter
pop
jl
jl
add
push
imul
and
or
add
add
shl
cwde
leave
pop
icebp
inc
push
jno
loop
retf
fninit
add
and
jne
jl
shr
mov
adc
fadd
(bad)
cmp
rol
lock
push
fnstsw
nop
xor
and
dec
rcr
cmp
outs
push
and
inc
cs
adc
ins
and
clc
adc
(bad)
jg
shl
in
add
pop
add
cs
adc
jno
aad
pop
data16
aad
push
xchg
mov
mov
push
or
jne
aad
inc
fistp
jbe
addr16
mov
test
dec
jle
fwait
xchg
stos
add
pusha
xchg
pop
movs
mov
out
dec
mov
dec
sahf
or
es
movs
sub
cs
mov
repnz
pushf
sub
mov
push
or
mov
lods
and
adc
iret
outs
(bad)
ficomp
push
adc
ret
arpl
or
dec
cmp
add
rol
push
and
adc
mov
add
add
(bad)
push
cmp
xor
mov
ins
add
mov
in
aam
sub
loopne
add
xlat
mul
leave
das
test
mov
mov
add
mov
xchg
sub
sub
adc
int3
es
retf
jle
in
xchg
mov
mov
daa
jmp
(bad)
aam
int
das
and
adc
push
adc
sub
dec
sub
(bad)
xchg
or
pushf
xor
sub
and
mov
sub
xchg
inc
jmp
ret
xor
loop
xor
xchg
fbstp
sub
add
add
adc
add
and
out
pop
in
inc
scas
add
icebp
xor
pop
add
leave
xchg
fs
pusha
nop
loopne
jg
mov
leave
inc
xlat
or
xor
and
cmp
stos
push
lods
sub
loope
aaa
out
mov
dec
cmp
mov
cmps
cmc
push
adc
xor
ret
mov
aas
mov
jmp
shl
push
ret
fsubr
test
push
neg
adc
neg
pop
xchg
mov
push
daa
jmp
shl
fdivr
xor
jbe
mov
sub
fs
pop
xor
mov
cmp
or
jae
push
jbe
sub
sub
add
nop
mov
(bad)
dec
cdq
daa
pop
call
mov
fiadd
pop
fcmovnbe
mov
adc
(bad)
push
jne
adc
add
adc
push
(bad)
rcl
mov
push
push
test
mov
inc
cmp
rcl
jge
pop
ret
test
push
adc
jbe
mov
sbb
cmp
adc
inc
movs
(bad)
push
xchg
cmp
lods
enter
xchg
push
inc
or
dec
push
js
and
into
je
add
push
add
jecxz
imul
push
cli
out
sbb
or
xor
pop
leave
mov
cmp
xchg
movs
adc
mov
lea
xor
push
(bad)
fnsetpm(287
mov
push
mov
push
push
inc
in
add
in
mov
pop
jmp
imul
sub
jg
inc
xchg
rol
push
add
rol
shl
mov
push
or
xchg
xchg
shl
clc
push
and
push
inc
rcr
(bad)
add
adc
inc
dec
pop
and
mov
jne
inc
mov
aas
jge
add
and
add
cmp
out
sbb
movs
ins
mov
push
mov
das
test
push
xchg
add
cmp
cmp
cmp
rcr
test
and
enter
mov
mov
jns
in
inc
mov
and
popa
retf
mov
fs
fld
and
pop
movs
sbb
sbb
dec
repnz
add
inc
sbb
mov
add
xor
xchg
movaps
mov
xchg
rcr
test
sub
test
push
(bad)
push
imul
das
or
mov
mov
cs
enter
call
dec
out
cmp
inc
pop
clc
sti
nop
mov
inc
(bad)
cmp
iret
movs
out
test
dec
and
mov
cmp
sbb
xor
icebp
mov
add
mov
lds
dec
loope
and
and
fst
add
mov
dec
xor
adc
push
je
cmp
jb
retf
dec
cmp
ds
pop
aaa
cmp
sub
xlat
adc
push
sbb
je
adc
mov
xor
jl
fs
add
pop
pop
dec
add
lds
je
mov
je
mov
pusha
scas
pusha
pop
cmp
mov
and
sub
xchg
pop
and
inc
xor
and
push
call
call
test
adc
lock
fucom
add
shr
adc
cmp
cmp
popa
mov
jbe
adc
icebp
inc
and
imul
push
cmp
push
test
and
push
movs
cmp
push
fdiv
inc
sub
pop
rcl
adc
retf
mov
(bad)
push
pop
mov
cmp
mov
or
sbb
jne
jo
in
or
sub
or
call
fwait
adc
(bad)
jmp
sub
sbb
add
ret
push
fisubr
mov
cmp
push
ds
mov
mov
adc
xchg
lods
stos
or
push
and
xchg
cdq
ud2
ror
ror
out
lock
inc
pop
mov
cmp
inc
ror
and
inc
add
dec
push
and
pusha
enter
cmp
add
pusha
mov
or
stos
or
xchg
mov
in
add
mov
clc
add
cmps
pop
jne
xor
and
mov
or
cmp
dec
lods
cmp
pusha
pop
mov
pop
add
int3
nop
add
pusha
ret
cmp
pop
pop
mov
and
sub
enter
xchg
push
movs
add
addr16
pop
pusha
test
and
movs
push
sbb
push
sub
cwde
js
mov
mov
fucomp
fistp
mov
xlat
mov
sub
push
or
sub
xor
fucomi
cmp
mov
enter
push
dec
and
iret
add
pushf
sub
les
cmp
mov
sub
mov
mov
adc
mov
and
mov
addr16
sub
dec
add
repz
mov
jne
ret
add
inc
add
dec
mov
sub
sub
inc
push
mov
dec
fxch
push
and
shr
adc
cwde
jge
mov
push
mov
imul
or
fcom
mov
mov
sbb
sahf
adc
lods
pop
jno
les
mov
arpl
cmp
xchg
enter
mov
loopne
xchg
xchg
daa
jbe
mov
add
adc
xor
mov
cmp
mov
add
pop
lock
mov
cmps
xchg
movs
dec
add
mov
loopne
cs
push
(bad)
add
xchg
add
not
fdivr
or
push
push
aas
add
or
mov
push
sub
or
add
outs
loope
mov
dec
mov
ins
inc
je
sbb
add
test
shr
add
inc
xor
adc
pop
or
add
xchg
popa
jne
popf
hlt
add
sbb
jmp
lods
fisttp
xor
push
cdq
add
clc
leave
sahf
sahf
cdq
mov
mov
div
cmp
jno
cmp
loopne
push
cmp
mov
or
call
loope
popf
ja
mov
lock
call
jle
jbe
adc
icebp
in
and
ror
inc
push
fdiv
and
xor
je
push
jge
or
push
mov
push
or
adc
call
not
js
(bad)
ins
add
or
sub
or
mov
push
fbld
scas
push
push
nop
rcr
adc
adc
or
xchg
add
ret
dec
xor
hlt
(bad)
and
adc
cmp
cmp
repz
inc
sbb
ret
push
jb
in
inc
adc
or
adc
or
push
sub
mov
dec
sbb
sbb
fmul
imul
fcom
loop
push
lock
sbb
add
xchg
ins
ret
lods
inc
fwait
repnz
out
es
sub
xchg
mov
and
mov
out
jb
sbb
test
or
leave
xor
adc
dec
or
outs
xchg
aam
inc
push
call
adc
repz
jne
or
push
aam
jbe
jge
sub
inc
clc
jmp
cmps
or
push
xor
outs
daa
sbb
add
dec
pop
lods
xchg
out
gs
cwde
test
aam
xchg
pusha
xor
dec
mov
dec
inc
jmp
add
xor
inc
daa
pushf
inc
(bad)
fadd
dec
or
add
retf
inc
and
xor
push
dec
jp
(bad)
push
dec
hlt
call
push
inc
fisubr
dec
pop
fld
scas
cmp
mov
pop
sub
dec
mov
es
push
repz
in
dec
jmp
loope
push
inc
jno
adc
cs
aaa
icebp
jle
push
lods
shl
fistp
les
or
sub
or
pop
sbb
(bad)
xor
test
jecxz
inc
and
repz
and
daa
add
add
ins
xor
dec
push
test
push
push
aas
aam
(bad)
cmps
mov
or
int
add
xlat
or
push
dec
cs
sub
mov
adc
mov
or
mov
pushf
ds
mov
jge
inc
sbb
nop
mov
add
enter
movs
lock
add
inc
xor
and
add
mov
xor
test
adc
add
add
adc
xchg
add
push
scas
mov
mov
(bad)
push
or
and
and
test
es
cmc
pop
or
xchg
mov
es
inc
les
pop
test
enter
add
ror
aam
test
fsub
inc
enter
add
test
dec
and
or
or
pop
push
mov
pusha
sbb
and
or
test
mov
rcr
jae
imul
xchg
jmp
ja
mov
imul
inc
or
mov
in
call
or
jne
sti
or
lods
fimul
mov
xchg
lods
mov
cmps
xchg
cmc
mov
mov
call
mov
add
ret
mov
not
and
inc
loopne
imul
and
sbb
add
push
mov
mov
sbb
adc
call
ins
fnsave
adc
pusha
xchg
sahf
and
mov
je
push
cmp
mov
xchg
and
test
dec
rol
xor
add
push
sti
sub
sub
aaa
xchg
leave
mov
rcr
ins
pusha
adc
xchg
in
push
out
add
jno
mov
pusha
or
cmp
pop
ss
fisttp
imul
jnp
sti
mov
enter
nop
xchg
ins
xor
and
loopne
mov
xor
or
inc
inc
retf
sub
xchg
mov
xor
xchg
js
mov
xor
in
(bad)
mov
add
pop
mov
repnz
pop
cmp
jmp
lods
inc
fld
sbb
fcomp
cmp
inc
jns
dec
adc
mov
fstp
ret
dec
xchg
xchg
cmp
sbb
add
jle
jl
mov
fdivr
sub
pop
pop
cmp
sar
lahf
pop
out
sbb
adc
cmp
add
mov
(bad)
and
sub
lea
xor
mov
sbb
and
pop
dec
shr
retf
push
and
mov
js
stos
push
cmc
jmp
push
dec
dec
inc
fild
or
add
xchg
out
lahf
test
(bad)
mov
or
js
stos
js
gs
sbb
jno
jl
mov
mov
push
add
jl
inc
jb
sbb
(bad)
aaa
repz
fcom
mov
mov
push
cmp
add
push
xchg
inc
rcl
in
or
adc
and
push
rol
mov
fiadd
mov
xlat
faddp
inc
inc
and
xor
cmps
or
push
std
fldcw
and
sbb
adc
cli
add
and
mov
icebp
mov
push
xchg
jnp
push
mov
dec
test
pop
ins
gs
ins
adc
cmp
add
daa
add
push
retf
mov
mov
mov
jne
data16
sbb
outs
pusha
inc
cmps
and
mov
aas
pop
jnp
mov
sbb
inc
inc
pop
sub
les
pop
add
jg
or
ds
lock
mov
cmp
cmp
jmp
jl
test
leave
xchg
inc
mov
jnp
push
or
std
and
sahf
ins
push
mov
iret
inc
pop
add
ds
sbb
xchg
fisub
shl
mov
cmp
inc
lock
mov
retf
(bad)
pusha
je
or
push
fdiv
fld1
ins
fld
in
loopne
push
fsubr
outs
fld
mov
stc
call
dec
popf
dec
js
dec
push
add
jbe
lds
test
outs
sbb
and
mov
test
and
add
add
add
pop
or
and
fcom
dec
xchg
pop
mov
enter
dec
add
xor
and
jns
add
add
xchg
sbb
xchg
add
adc
test
out
ret
dec
and
loope
and
push
jmp
push
mov
dec
push
sub
inc
(bad)
fmul
add
call
daa
add
push
mov
iret
repz
dec
sub
pushf
add
xchg
add
xlat
xchg
sub
xor
xchg
add
pop
mov
sub
pop
cmp
pop
jbe
jbe
popf
dec
inc
mov
adc
mov
fs
addr16
sbb
mov
jae
dec
ror
push
rcr
xchg
fimul
cmps
je
push
fadd
inc
xor
add
cmp
lea
aas
and
push
push
push
cmp
pop
retf
add
sar
fwait
dec
jle
xor
imul
add
jle
pusha
cmp
add
adc
mov
push
pop
sbb
loopne
or
and
(bad)
das
loopne
sbb
cmp
jno
clc
xchg
movs
cdq
(bad)
dec
fld
xor
xchg
xor
pop
add
fsub
lock
je
xchg
loopne
mov
dec
mov
sub
xchg
loope
sbb
fadd
cmp
rcl
xor
imul
syscall
stc
mov
inc
mov
jmp
sub
mov
std
add
popf
or
pushf
movs
mov
push
and
outs
pop
cmp
shr
cmp
(bad)
leave
leave
push
inc
push
push
jno
test
gs
clc
and
nop
cmps
adc
clc
xor
add
add
aaa
add
mov
cs
cmp
mov
pop
xor
or
dec
sbb
or
movs
inc
inc
mov
je
add
pop
repz
arpl
xchg
sub
movs
cmp
inc
inc
aad
add
mov
sub
or
loop
outs
ins
jmp
sub
call
mov
adc
or
mov
sbb
mov
ret
jmp
or
xchg
mov
or
push
and
mov
or
jp
push
fbstp
jle
sbb
add
jp
or
push
ja
jp
mov
or
adc
pcmpgtw
xlat
je
adc
bound
sahf
mov
sub
add
daa
mov
outs
gs
adc
and
sub
inc
dec
fimul
mov
loopne
cmps
test
hlt
ret
in
into
data16
jnp
(bad)
fs
sub
popa
fdivrp
pop
ret
loope
push
push
mov
mov
rol
inc
mov
add
iret
repz
jmp
cmp
outs
leave
push
(bad)
call
push
cmp
lea
icebp
push
cmp
adc
lods
mov
mov
push
mov
push
movs
jne
mov
ret
gs
retf
mov
inc
push
push
add
push
sub
popf
dec
mov
out
xor
je
and
ins
sar
cmp
jne
adc
ins
push
inc
jmp
inc
inc
mov
(bad)
jmp
scas
cmp
add
cmp
aas
add
push
add
mov
test
inc
loopne
movs
push
fsub
or
adc
dec
movs
lock
xlat
pop
loope
pop
jmp
jmp
push
push
push
jno
add
call
jp
jne
xchg
mov
scas
popf
(bad)
push
or
push
jge
out
xchg
fbstp
ror
adc
mov
jl
or
push
push
adc
ss
gs
inc
xor
(bad)
mov
push
mov
sub
hlt
mov
imul
and
adc
cmps
add
adc
scas
mov
add
push
add
lea
hlt
lds
call
sbb
repz
in
aam
push
add
adc
dec
or
movs
in
cmp
sbb
loopne
adc
mov
add
xchg
rcl
push
dec
arpl
dec
shr
cs
cmp
inc
and
adc
pop
jne
pop
neg
sbb
and
add
or
xor
in
mov
frstor
aad
inc
sub
cli
shl
jle
sub
cmp
jne
or
rcl
outs
sub
pop
pusha
in
mov
xor
adc
rcr
es
jl
cmp
mov
xor
adc
or
adc
cmp
ss
adc
(bad)
out
leave
inc
call
adc
test
inc
dec
popa
pop
retf
and
xor
and
add
popf
js
mov
cmp
aad
pop
sub
or
popf
add
and
sti
div
js
ja
dec
and
ud2
(bad)
push
push
jo
pop
mov
rol
dec
mov
xor
inc
cmp
nop
nop
sbb
or
mov
call
enter
add
rcl
mov
and
gs
cld
dec
loop
or
lea
sar
neg
and
scas
fsub
add
clc
sub
cmp
inc
mov
pop
inc
add
xchg
sbb
hlt
mov
movsx
and
inc
imul
lea
inc
retf
inc
fisttp
(bad)
fsub
add
mov
shl
inc
not
repnz
mov
mov
add
loop
aaa
or
jecxz
pop
loopne
push
test
push
pushaw
cs
jo
mov
mov
adc
adc
jecxz
rcl
and
and
int
mov
sbb
push
push
stc
push
lock
add
(bad)
push
jne
mov
xchg
cmp
out
cmp
cmp
or
sub
inc
sub
adc
jmp
rol
add
jns
addr16
adc
sbb
mov
xor
or
add
mul
jno
and
mov
sbb
int
and
add
call
add
fstp
cmp
(bad)
int
adc
push
xchg
(bad)
cld
je
or
cld
dec
shl
add
call
and
inc
lds
fisttp
and
adc
pop
je
push
push
and
sbb
in
rcr
jg
add
and
arpl
pusha
mov
jl
add
mov
mov
aam
jmp
sar
pop
push
je
push
leave
ja
in
inc
add
test
add
jp
mov
ss
fwait
shl
xor
int3
push
call
adc
pop
xchg
or
push
xor
adc
leave
(bad)
pop
div
push
lods
cmp
das
movs
and
bound
cmp
out
nop
(bad)
and
mov
clc
inc
and
jo
mov
pusha
or
dec
or
dec
lods
jle
or
es
mov
ss
aam
popa
out
dec
push
das
push
adc
lock
imul
xchg
int3
inc
add
mov
ins
jmp
mov
(bad)
xchg
jle
enter
and
hlt
push
dec
inc
adc
mov
sbb
cmp
enter
sub
cmp
icebp
rol
sub
enter
aad
jp
dec
adc
cmp
inc
fsub
arpl
or
mov
cmp
ja
sub
inc
cmc
mov
xchg
(bad)
jmp
adc
jbe
test
addr16
push
pop
repz
inc
mov
repnz
dec
in
pop
or
jmp
and
outs
rcr
or
adc
xchg
jmp
dec
dec
test
das
jl
pushf
push
mov
(bad)
ja
dec
dec
jmp
pop
sahf
mov
ins
push
inc
sub
push
xchg
add
push
inc
add
jno
push
enter
imul
ror
scas
mov
adc
jno
lods
inc
and
fcomp
adc
cmp
ret
mov
adc
sub
or
js
mov
and
xor
inc
push
jmp
pop
mov
cmp
add
les
push
call
sub
lock
add
or
inc
sbb
dec
dec
inc
sub
clc
sar
adc
je
ja
cmp
rcr
ret
rol
and
test
jmp
mov
ja
mov
jg
scas
dec
add
sbb
adc
fcos
push
adc
aaa
out
test
je
push
mov
and
test
or
out
mov
daa
xchg
adc
and
xchg
fwait
jmp
mul
fist
call
or
jge
icebp
push
push
dec
add
sbb
or
dec
test
jns
loopne
test
inc
movs
inc
add
out
movs
pusha
mov
test
rcr
les
push
add
mov
and
push
test
cmp
adc
je
test
jno
push
nop
pop
add
rcl
xchg
xchg
pop
fild
pop
xor
mov
adc
fnstsw
ds
ins
mov
int3
sbb
adc
ret
jbe
call
mov
xchg
push
mov
fisttp
loopne
(bad)
in
sub
dec
jo
jge
cs
mov
test
push
add
cmp
push
and
or
sbb
adc
and
pushf
out
cmp
mov
out
aaa
test
and
sub
mov
je
jb
(bad)
sub
add
iret
(bad)
mov
jmp
pop
ror
xor
(bad)
mov
xor
xor
icebp
lock
mov
cmp
mov
fnstsw
jmp
pop
ret
cld
and
into
jne
push
xchg
mov
cs
push
leave
aaa
push
bound
sub
sbb
mov
pop
lock
test
pop
mov
cmp
sub
and
rol
ja
push
mov
push
push
jp
into
inc
inc
inc
or
mov
into
xor
jle
and
mov
pusha
fcmovnbe
in
or
inc
adc
dec
adc
adc
mov
ins
js
cmps
ret
cmp
inc
add
(bad)
xchg
dec
or
add
out
je
jne
sbb
lea
or
push
push
xchg
mov
call
call
test
cmp
das
ins
aad
xchg
adc
or
adc
pop
or
cli
retf
in
jns
outs
adc
pop
add
cmp
add
pop
les
jmp
dec
dec
mov
cs
pop
pop
add
(bad)
loopne
dec
or
outs
pop
pop
in
pusha
mov
adc
add
leave
ins
std
inc
lahf
sbb
mov
push
adc
addr16
in
fldcw
pusha
pop
dec
mov
add
or
call
mov
fld
into
mov
scas
ins
aam
adc
js
sbb
and
ja
bound
cs
scas
outs
push
cmp
push
outs
(bad)
lds
loope
leave
and
cmps
mov
push
add
lds
test
xchg
mov
jg
adc
pushf
xor
jle
inc
push
xchg
sub
add
or
adc
mov
pop
push
test
jp
fist
ss
pop
lock
jne
or
or
push
add
sbb
adc
inc
out
mov
xor
jmp
or
retf
mov
int
jbe
push
mov
sbb
push
call
es
retf
idiv
std
fwait
add
push
pop
mov
adc
(bad)
jecxz
push
mov
and
cmp
dec
jecxz
je
inc
cmp
push
add
into
sbb
mov
inc
push
fst
add
sub
pop
sbb
int3
mov
adc
scas
ins
fcomp
sbb
arpl
cmp
mov
loopne
in
adc
mov
es
mov
sbb
add
pusha
xor
fcomp
cmp
and
or
mov
and
and
pop
push
daa
mov
and
pop
cmp
aam
or
pop
mov
xor
xor
cmp
test
ret
inc
frstor
inc
pusha
xchg
jmp
pop
or
jge
push
push
push
inc
scas
jge
adc
dec
jmp
push
jl
and
dec
fst
jo
xor
add
mov
movs
push
ja
movs
pop
mov
outs
mov
xchg
mul
and
stos
pop
call
jne
cdq
jecxz
xchg
mov
fidiv
inc
jo
mov
icebp
push
push
inc
push
in
add
rcr
jge
cmp
or
and
push
sbb
call
js
inc
pop
dec
push
cs
or
hlt
xor
(bad)
ds
pop
and
repnz
shr
sbb
test
add
test
pop
mov
mov
movs
and
mov
cmp
and
xor
shl
pop
and
enter
rol
add
jb
scas
ficomp
mov
rol
cmp
fsubr
adc
and
and
loopne
sub
outs
jg
inc
or
or
push
dec
loope
mov
jge
push
inc
add
adc
inc
add
pop
mov
mov
or
in
(bad)
idiv
mov
inc
or
je
pop
jmp
das
cmc
lods
test
movs
add
lahf
fisttp
out
(bad)
daa
scas
sbb
sub
in
cmp
aad
sar
les
mov
xchg
dec
sbb
imul
or
imul
sub
push
mov
push
or
push
mov
js
mov
add
push
jg
xlat
(bad)
daa
sub
inc
cli
jnp
in
mov
inc
je
xor
jle
sub
dec
and
jb
push
test
sar
push
add
push
mov
add
inc
xchg
ret
push
ficom
data16
or
fsub
xchg
jp
mov
and
add
dec
or
jbe
mov
imul
push
stos
outs
dec
ja
mov
shl
aaa
adc
repnz
je
mov
push
bound
inc
or
fnstsw
dec
or
mov
sub
cld
xchg
outs
xor
sub
push
xchg
mov
(bad)
inc
add
jne
cmp
mov
leave
call
push
dec
clc
adc
loopne
or
add
aad
mov
xchg
sbb
test
inc
sub
add
dec
inc
int
add
xor
lock
inc
push
movs
enter
repz
inc
add
inc
mov
add
jne
je
je
xor
pop
mov
lock
retf
retf
stos
sub
dec
pop
jg
pop
jle
mov
xor
push
jmp
repnz
fstp
inc
into
fcom
jne
lea
pusha
or
jb
pop
add
mov
add
push
in
dec
inc
je
test
je
or
xchg
mov
bound
scas
mov
pop
add
add
jmp
pop
inc
xchg
test
dec
cmps
and
dec
xor
mov
hlt
rcr
push
repnz
add
and
add
dec
and
ror
sub
or
pop
mov
dec
sub
fidiv
ret
popf
or
ss
fbld
push
push
xor
test
jne
mov
mov
mov
cmp
ins
nop
mov
or
popa
orps
push
push
and
push
fld
in
add
lods
add
loopne
xchg
cmp
test
dec
or
inc
cmp
popa
inc
das
push
in
xchg
xor
fbstp
test
mov
push
adc
jg
push
je
mov
retf
shl
retf
jge
ror
mov
mov
ret
ins
ins
or
jb
cmp
pop
pop
aam
in
pop
dec
add
jne
and
push
(bad)
loop
jge
(bad)
aad
and
mov
inc
xchg
push
es
lods
jmp
call
and
sub
out
sub
lds
add
sbb
dec
jo
xor
or
das
mov
jp
stos
(bad)
int
idiv
dec
es
xchg
loopne
cmp
repz
dec
sub
(bad)
jl
cmps
stc
sub
das
je
out
call
sub
int3
inc
cmp
popa
xchg
lods
cwde
sahf
mov
xchg
in
jecxz
xchg
dec
sub
sbb
and
inc
add
jb
ror
cmp
cmovae
xchg
dec
dec
loop
jne
adc
mov
pop
mul
pop
inc
add
inc
xor
outs
xor
sbb
inc
and
sub
cmp
inc
inc
dec
dec
push
mov
std
or
cli
add
rcr
xchg
rol
push
cmp
rcl
and
dec
clc
mov
push
push
add
(bad)
rol
cmp
pop
xlat
and
cmp
in
cmp
push
retf
sub
xor
sub
inc
sbb
mov
and
push
cmp
popf
xor
jne
xchg
popf
ss
out
daa
push
sub
pop
lea
sti
and
cmp
fstp
mov
pop
vmwrite
ja
and
mov
fs
ror
lock
je
xor
push
jb
mov
dec
add
push
and
pop
push
lahf
sbb
pushf
push
mov
popa
jg
push
pop
add
in
pop
(bad)
mov
pop
and
sub
push
add
call
and
ret
sbb
icebp
cmp
jne
cmp
and
in
dec
or
dec
or
mov
loopne
addr16
cmp
pusha
or
inc
in
xchg
mov
mov
jmp
pop
sub
ret
stos
stos
retf
outs
pop
data16
sub
push
xchg
pop
(bad)
std
cmp
test
ds
jb
xor
add
mov
push
test
movs
xor
mov
and
pop
mov
outs
adc
add
and
jbe
jb
add
sysret
mov
or
mov
mov
push
mov
out
adc
sub
mov
mov
cld
imul
mov
pop
jl
popa
sub
jnp
cmp
xchg
or
mov
sbb
sbb
das
inc
jmp
push
enter
inc
or
inc
leave
sub
leave
push
xor
inc
cmp
ret
dec
inc
and
fcomp
sub
mov
mov
add
out
es
pop
adc
sbb
adc
or
shr
dec
adc
inc
xor
inc
push
mov
ins
(bad)
jb
inc
mov
adc
pop
xchg
mov
pop
rcr
or
add
call
push
jae
adc
cmps
dec
sub
ret
push
mov
sbb
jge
hlt
inc
add
lods
jb
cmp
sbb
imul
or
or
push
fisub
or
pushf
(bad)
ss
or
mov
cld
mov
or
sub
pop
mov
(bad)
popf
xor
pusha
ja
ret
mov
rol
or
mov
cmp
cmp
shr
ror
adc
fs
adc
mov
sub
rcl
adc
loopne
or
ss
adc
push
test
dec
and
push
daa
sti
repnz
mov
scas
cmp
ds
add
pop
imul
pop
in
and
push
in
jp
das
adc
xchg
daa
mov
test
push
in
and
cmp
clc
jb
push
dec
jl
and
sbb
jbe
add
sub
and
dec
adc
xchg
jae
js
push
leave
xchg
aam
pushf
or
inc
daa
sub
in
sub
leave
and
sbb
(bad)
lock
rcr
pop
dec
ins
fs
and
xchg
or
pop
aaa
add
push
fiadd
dec
ror
mov
sbb
cmp
je
test
icebp
test
repz
aaa
out
jbe
xor
test
test
mov
sbb
mov
mov
xchg
loopne
test
shr
pop
dec
add
mov
add
or
(bad)
call
add
add
xor
movs
jg
sub
sub
push
jo
push
jne
push
sbb
push
pop
imul
call
sbb
and
ins
adc
push
or
pusha
cwde
hlt
fwait
sbb
test
dec
xor
adc
cs
xor
mov
(bad)
xor
and
adc
je
or
movs
add
dec
or
and
push
adc
adc
call
mov
mov
je
adc
call
in
add
(bad)
adc
jp
ja
pop
fs
mov
cmp
xor
cmps
sub
rcr
push
or
xlat
call
inc
(bad)
cli
dec
xor
scas
adc
sub
mov
mov
push
sbb
pushf
nop
inc
mov
into
adc
mov
out
jmp
mov
add
fwait
mov
ret
add
repnz
push
add
ins
add
loope
or
mov
adc
jecxz
adc
(bad)
add
add
mov
aas
(bad)
nop
push
push
js
unpckhps
and
mov
stos
push
pop
mov
dec
idiv
jg
pop
lahf
sub
shr
js
test
jbe
rcl
sub
mov
(bad)
scas
ins
add
mov
rcl
sub
mov
sbb
xchg
stos
push
jb
xor
fwait
or
pop
jae
movs
out
repnz
add
jge
retf
movs
mov
sbb
mov
or
and
inc
test
fs
in
and
push
xor
ins
adc
sbb
and
sub
and
mov
adc
mov
rol
cmp
(bad)
lock
arpl
cmp
ror
and
cmp
xor
or
mov
imul
adc
cmp
dec
aam
adc
pop
dec
fadd
inc
rcr
fucomp
int3
repnz
inc
jne
push
jecxz
fs
ficomp
pop
adc
jmp
fs
xchg
shl
push
lods
sar
jmp
pop
mov
mov
pop
test
adc
or
mov
or
and
retf
jne
jnp
int3
sbb
mov
and
add
cmps
mov
inc
xor
inc
and
daa
push
pusha
mov
hlt
ins
or
ret
retf
cmp
retf
push
mov
mov
lods
jmp
(bad)
outs
loope
call
mov
fst
xchg
ds
adc
(bad)
cld
clc
or
sbb
lods
popf
mov
fisttp
neg
je
cmp
fadd
mov
mov
lds
cmps
imul
add
cmp
dec
fld
xor
pop
sub
xchg
pushf
idiv
push
pop
or
(bad)
jge
les
je
or
mov
out
push
outs
pop
or
lahf
push
cmp
mov
and
and
and
jg
mov
pushf
movs
idiv
call
test
mov
xor
xlat
mov
ins
call
mov
js
push
push
pop
jg
xchg
loopne
sbb
enter
push
imul
sub
xor
in
add
aam
inc
int3
aad
sub
lock
pop
sub
ins
lock
add
fcomip
lsl
cmp
jle
sub
add
retf
cmp
pop
ins
or
fld
(bad)
or
or
jne
add
push
sub
loopne
outs
rcr
jne
mov
xchg
dec
and
inc
outs
xchg
dec
push
jb
in
loope
mov
je
mov
daa
cmp
or
mov
or
mov
adc
add
or
pop
inc
add
loop
inc
ja
add
jb
xchg
popa
popf
mov
fidiv
push
push
inc
sbb
or
jne
dec
xor
add
dec
or
test
fld
pop
adc
dec
cli
add
sbb
imul
sbb
add
addr16
jle
and
je
sub
sbb
mov
sbb
pop
or
mov
xchg
jmp
in
inc
pop
mov
data16
push
js
cmp
add
add
ins
xor
movs
test
jl
out
sbb
sbb
sub
cmc
xchg
xchg
pusha
pop
sbb
test
mov
jne
ins
xchg
adc
dec
xchg
out
ins
jl
fist
mov
pop
pop
add
adc
(bad)
hlt
dec
enter
sub
mov
nop
test
mov
cmps
sbb
popa
cmp
les
imul
inc
pop
repz
test
adc
add
push
push
fnstcw
retf
pop
daa
or
in
cmp
and
adc
adc
mov
mov
sbb
nop
aad
dec
sbb
dec
jbe
cs
inc
mov
push
cmp
xchg
add
xchg
sub
sbb
ins
jecxz
adc
(bad)
adc
mov
pop
aaa
inc
add
loopne
lea
pop
in
dec
fs
nop
mov
push
rcr
cli
in
ins
and
xor
sub
jo
call
xchg
and
sub
push
or
mov
hlt
push
daa
push
fcomp
das
sub
or
xor
add
dec
or
jmp
lahf
push
dec
xchg
mov
lock
fist
mov
push
stos
ds
sbb
or
jne
into
int3
push
xor
ins
dec
fcom
adc
jmp
add
imul
ret
dec
sbb
pop
and
js
push
mov
hlt
mov
popa
shl
and
sbb
push
mov
scas
arpl
add
retf
add
sub
sbb
push
jb
sub
popa
xor
dec
dec
js
add
pop
data16
inc
push
dec
std
inc
sub
or
xchg
or
add
fisttp
xchg
adc
mov
mov
and
mov
fwait
cs
xor
enter
and
or
shl
cmp
sbb
cmp
or
jp
push
fldcw
aam
in
and
add
adc
scas
dec
dec
jbe
add
dec
dec
and
leave
or
push
and
cmp
dec
adc
dec
cmp
lods
or
xor
or
fimul
xchg
gs
add
add
and
sub
lods
mov
ret
push
pushf
into
test
add
sub
add
mov
or
mov
push
push
cmp
jnp
fld
and
xchg
(bad)
dec
lds
inc
sbb
pop
movs
sub
scas
inc
call
je
or
fadd
adc
pop
sbb
mov
add
or
popf
and
mov
call
fwait
adc
push
sub
add
cmp
add
adc
adc
fcomp
movs
sbb
or
cmp
pop
push
mov
fist
jne
push
push
(bad)
jmp
mov
cmp
test
jmp
pop
push
push
inc
sbb
sbb
shl
dec
aaa
jmp
push
jg
ret
mov
mov
sbb
div
lods
gs
xchg
add
inc
pop
xor
add
ds
stc
push
stc
nop
fs
xchg
sbb
cmp
mov
stos
dec
sub
xchg
pop
popa
xchg
cmp
inc
int
cmp
mov
and
sub
in
invd
sub
adc
and
adc
pop
(bad)
push
aad
pop
or
test
fld
mov
and
ret
icebp
and
out
pop
push
or
jmp
pop
adc
fs
outs
mov
mov
inc
or
or
push
inc
push
jne
mov
xor
js
jmp
repz
jbe
xlat
js
inc
ret
jecxz
mov
rcr
outs
ins
retf
push
sub
push
dec
nop
xchg
add
sub
adc
aaa
jl
cmp
and
sar
adc
inc
out
les
mov
hlt
cmps
je
in
clc
push
out
test
cmps
daa
retf
push
rcr
and
add
push
adc
xchg
js
inc
adc
sub
shr
mov
and
(bad)
or
fmul
and
jne
in
(bad)
aad
or
cmp
xchg
les
scas
movs
aam
inc
daa
push
(bad)
jmp
and
push
and
or
fdivr
cwde
ret
mov
lods
inc
push
or
mov
and
call
loopne
fs
add
and
jle
fs
dec
out
test
mov
pusha
inc
jbe
add
cmp
pop
pop
adc
sub
push
add
mov
dec
ins
dec
mov
sub
pop
inc
pop
inc
sub
neg
rol
xchg
sbb
dec
je
sbb
adc
adc
jnp
push
jne
push
(bad)
sub
scas
add
mov
ss
cmp
pop
cmp
jne
push
imul
out
push
jmp
mov
cwde
daa
sub
inc
jo
cmp
cmps
push
sbb
or
call
pop
pop
push
or
sub
and
adc
sahf
movaps
dec
adc
pop
adc
and
push
inc
or
(bad)
cmc
push
mov
push
cmp
sbb
js
or
pop
or
mov
fstp
add
out
je
adc
pusha
pop
adc
pop
jo
push
mov
cmps
retf
xor
iret
xor
xor
inc
pop
or
retf
aas
mov
sub
add
sub
mov
adc
ret
adc
push
shl
imul
and
fadd
or
lods
and
pop
dec
or
dec
fiadd
mov
push
loope
mov
adc
jge
(bad)
inc
rcr
data16
or
pop
test
mov
adc
mov
pop
dec
jo
mov
push
shl
pop
and
add
pop
dec
and
iret
loop
xor
rcl
push
push
push
ret
inc
adc
inc
sub
sti
xchg
mov
cmp
or
ror
ds
or
mov
adc
add
sar
or
xor
add
jmp
dec
jecxz
add
and
push
(bad)
movs
pop
or
push
push
cmp
ret
and
add
inc
mov
lds
mov
ror
and
or
sub
popa
sub
test
sbb
xchg
ins
sub
sbb
inc
leave
adc
leave
inc
xor
inc
leave
inc
cmp
inc
mov
or
sub
dec
or
and
and
imul
dec
loopne
in
and
test
push
dec
sub
adc
add
push
sbb
lds
xor
aaa
rcr
or
out
sbb
aad
ins
lahf
rol
and
xchg
jge
mov
xchg
sbb
test
sbb
jmp
add
data16
xchg
popa
and
inc
cmp
and
cmp
inc
aam
sub
or
or
push
or
or
push
or
and
(bad)
sub
sbb
jbe
mov
sbb
sbb
pop
xchg
and
lods
or
test
or
push
lea
movs
jno
sub
xor
retf
jl
retf
sub
ins
rcl
shr
adc
out
or
adc
pop
jmp
clc
rcl
pusha
adc
xchg
cs
dec
or
xor
enter
inc
mov
int
mov
xor
dec
or
dec
inc
cmp
or
je
ficom
inc
pop
(bad)
cli
loope
mov
jle
cmp
scas
dec
call
mov
mov
loopne
adc
cmp
out
pushf
adc
sbb
test
fidivr
test
pop
push
push
adc
dec
xchg
mov
mov
xchg
into
mul
xor
sti
retf
sar
ret
(bad)
push
and
add
mov
lods
jge
out
cld
sub
pusha
cmp
inc
les
call
ret
cmp
rcl
shufps
mov
es
sahf
push
lods
mov
xor
ret
push
pop
mov
adc
push
push
inc
les
loop
xor
push
pop
or
inc
xor
push
xor
fucomip
adc
xchg
pop
ror
jmp
call
mov
push
jmp
add
push
add
data16
retf
xor
adc
jmp
icebp
cdq
hlt
jno
inc
je
mov
or
pop
daa
push
sbb
and
popa
push
cmp
hlt
mov
sbb
push
or
mov
mov
sub
jp
fiadd
add
ins
cmps
dec
mov
or
bnd
enter
sbb
retf
push
xchg
sub
xchg
ss
mov
or
dec
rol
stos
add
mov
mov
add
or
sub
xlat
shr
adc
add
or
call
mov
and
cmp
adc
cmps
inc
ror
or
adc
cmp
jne
mov
jns
lods
adc
jb
sar
into
sbb
sub
enter
sub
mov
dec
ret
jl
mov
mov
push
jle
rcl
fisttp
aam
jmp
movs
push
xchg
rcr
mov
push
mov
xor
pop
arpl
push
push
js
loop
jo
jmp
add
pop
or
sub
push
and
jns
and
jmp
test
jl
idiv
push
push
mov
add
inc
mov
add
inc
inc
or
mov
mov
shl
jmp
repz
push
adc
inc
adc
dec
cmp
sub
jno
repnz
jo
pop
or
mov
xor
inc
aad
push
out
inc
jnp
sub
push
sbb
jb
movs
jb
add
sbb
or
ins
cmp
push
call
outs
pop
loope
jmp
dec
je
push
xor
cmps
out
adc
jbe
inc
mov
pop
sub
add
ret
clc
fdiv
aaa
push
pop
push
(bad)
clc
xchg
add
scas
jae
loope
inc
cmps
leave
sar
jne
sbb
ds
in
add
pop
or
add
ret
fdivr
jo
mov
arpl
cmp
add
dec
push
ja
mov
cmp
sub
pusha
repnz
mov
mov
and
sub
nop
push
ins
shr
dec
arpl
and
sbb
bound
mov
push
mov
add
jo
cs
rcr
retf
mov
cmp
out
dec
retf
scas
lea
adc
mov
add
shl
jp
push
push
cmp
imul
bound
dec
jmp
ror
ins
shr
adc
push
movsx
push
loope
push
fs
xor
inc
movs
ret
pop
call
sbb
orps
push
test
xchg
icebp
and
lds
sbb
push
sbb
mov
and
mov
in
sbb
in
pop
or
not
pop
mov
sbb
movs
xor
loope
in
sub
ins
sub
(bad)
aaa
xchg
inc
add
add
cmps
mov
sub
mov
cmp
movs
test
and
mov
cmp
pusha
outs
fdiv
idiv
xor
cmp
push
jmp
pop
pushf
sub
add
ins
sub
ja
sub
ja
fdiv
mov
dec
mov
push
(bad)
adc
cmp
push
sub
sub
inc
mov
lods
test
cs
mov
mov
sub
xchg
sbb
aam
adc
ja
shl
popa
fcmovnb
aam
loope
lock
mul
cmp
add
mov
push
pop
push
or
enter
mov
push
mov
ja
push
jne
(bad)
fsub
pop
fadd
ret
je
pop
push
mov
ja
jmp
jp
rcl
lods
repz
xor
and
mov
adc
out
sbb
pop
stos
push
pop
fwait
sub
aad
mov
xchg
dec
xor
aam
nop
int
cmp
xor
xchg
xchg
cwde
gs
test
mov
sub
loopne
mov
lods
jl
pop
or
xchg
shr
vprotw
pop
call
add
mov
ror
jne
inc
push
push
loop
or
js
ret
test
pop
call
or
je
popf
xchg
sub
mov
imul
mov
inc
xor
enter
inc
sub
mov
je
sub
xor
jp
xor
push
cmp
xor
scas
add
sbb
push
test
outs
rol
push
xchg
call
cdq
scas
push
sub
lock
sbb
cmp
pop
add
aaa
inc
int3
clc
inc
or
pusha
ins
xchg
mov
and
cmp
jo
push
test
pop
push
add
sti
adc
pop
mov
adc
and
add
shr
dec
and
lea
jo
retf
and
in
je
jo
mov
lods
scas
lds
sar
hlt
or
push
cli
xchg
mov
pop
(bad)
cmp
cmps
pusha
cmps
mov
add
mov
movs
mov
(bad)
adc
iret
push
mov
repz
add
sbb
rcl
adc
imul
bound
push
sar
rol
fdiv
cmp
jle
xor
aas
inc
fisub
push
add
add
lea
jg
adc
mov
cmp
sbb
adc
xchg
mov
pop
and
into
ins
xchg
fsubr
jnp
pop
pop
rcl
and
imul
ret
mov
dec
outs
sbb
push
ret
cmp
or
adc
test
and
add
sbb
ins
or
pop
or
xlat
inc
add
aad
pop
or
or
inc
cs
iret
mov
(bad)
pop
fidivr
cwde
stc
inc
ja
adc
outs
pop
xlat
or
push
inc
int
cs
mov
mov
jne
xor
mov
sbb
adc
push
push
movs
inc
mov
inc
inc
fadd
mov
xor
pop
(bad)
xchg
adc
mov
into
push
push
mov
jo
scas
iret
xchg
mov
rcr
lods
shl
shr
repnz
mov
test
(bad)
aas
sub
mov
das
dec
and
mov
pop
sbb
fadd
inc
add
fdiv
iret
add
xchg
jb
or
mov
add
inc
or
mov
not
rol
add
movs
mov
mov
add
mov
arpl
add
outs
jmp
and
bound
cmp
ins
sub
push
pop
orps
(bad)
or
sub
movs
int3
pop
pop
push
inc
cs
jmp
sbb
ja
and
sbb
out
sub
ja
sbb
jge
and
das
adc
jmp
lahf
in
in
mov
push
sub
jmp
int
adc
js
or
sub
and
jmp
add
pop
rcr
ins
mov
movs
retf
mov
jmp
mov
ja
add
jmp
cwde
push
add
bound
pop
ins
mov
sbb
popf
pop
mov
inc
dec
pop
mov
je
ret
dec
sub
xchg
jp
mov
popa
mov
xor
in
ja
nop
sbb
mov
ins
ret
inc
popa
ins
jnp
iret
rep
ficom
outs
sub
cmp
outs
push
cmp
push
dec
outs
fcmove
jnp
pop
pop
push
jnp
mov
xor
mov
repz
aam
loop
add
out
outs
iret
push
sbb
leave
jmp
sahf
iret
or
fisubr
inc
fimul
jg
dec
(bad)
xor
sub
ret
(bad)
es
ja
je
jmp
adc
jbe
or
je
dec
jne
mov
adc
fdiv
jg
jmp
or
cmps
ja
mov
(bad)
popa
jmp
cmp
leave
adc
adc
(bad)
and
gs
or
sbb
jo
and
adc
inc
pushf
mov
inc
adc
push
movs
mov
je
fbld
nop
into
jb
push
ja
jmp
and
xchg
movs
push
fwait
hlt
sti
sbb
sbb
mov
popa
cmp
pop
jne
leave
xchg
mov
test
mov
push
lods
or
push
gs
fs
push
arpl
sub
fcom
cmpps
sar
neg
add
pusha
xchg
lock
clc
test
xchg
in
iret
call
push
lea
mov
ja
xchg
and
rol
mov
rcl
pushf
push
test
adc
rol
(bad)
add
add
fucomi
pop
arpl
mov
or
ins
std
shl
nop
push
push
retf
and
or
mov
int
jno
push
pop
mov
push
add
push
push
or
mov
je
scas
into
add
loop
(bad)
aad
push
pop
ja
mov
outs
inc
inc
(bad)
pop
jb
push
mov
add
xor
inc
inc
add
ret
test
mov
adc
call
bound
jl
sbb
push
or
sbb
fsubp
scas
mov
push
aas
mov
push
xor
push
xor
add
into
(bad)
in
sub
lock
daa
add
in
repnz
adc
sbb
push
je
add
das
sti
dec
movs
jecxz
jbe
shl
dec
inc
cli
add
mov
mov
dec
jae
lahf
lods
pop
xchg
add
push
mov
add
cmps
xor
icebp
outs
jno
and
jo
into
outs
add
retf
clc
or
push
test
ja
(bad)
jno
jmp
sti
and
test
int3
xchg
call
(bad)
jl
or
ins
addr16
push
jne
or
jne
adc
out
mov
jne
bound
mov
pop
(bad)
cmp
pusha
pop
push
push
sub
inc
out
(bad)
div
push
adc
test
dec
mov
adc
minps
cwde
and
or
nop
scas
ror
aam
inc
inc
lea
aaa
dec
aam
xchg
jnp
jo
dec
jmp
jecxz
jns
fwait
pop
daa
fcmovb
js
push
xchg
sub
stc
inc
dec
add
inc
popf
dec
clc
adc
adc
mov
mov
push
sbb
aad
std
xor
and
mov
add
fistp
and
pop
push
lock
push
add
sbb
mov
mov
out
mov
add
aam
ds
jnp
aam
call
aam
shl
mov
movs
lea
inc
pop
or
clc
lods
rcl
scas
cmp
clc
jmp
(bad)
mov
je
or
jne
push
jmp
shr
into
je
fs
je
movs
pop
bound
je
push
push
adc
scas
movs
add
mov
xchg
mov
and
and
js
cmp
retf
lods
xor
jg
sbb
sub
lds
xor
lock
jp
call
popa
cmp
push
in
pop
mov
aam
inc
pop
cmp
lds
cmp
push
add
pushf
push
mov
or
sbb
pop
lahf
add
mov
inc
mov
add
and
or
pusha
push
inc
cld
repz
test
add
inc
int3
ds
icebp
jae
mov
inc
push
je
jle
es
or
cld
inc
popa
pop
int3
dec
addr16
dec
add
test
movs
jnp
les
dec
call
ins
movs
jg
sub
mov
push
sahf
dec
hlt
ds
cmp
inc
or
and
cld
xchg
in
cmp
inc
adc
je
push
and
add
fs
mov
dec
clc
xor
fist
and
and
iret
pop
push
add
outs
iret
jge
fild
lods
mov
cmp
adc
and
mov
inc
push
mov
add
add
nop
or
add
mov
(bad)
scas
lods
or
mov
mov
dec
repnz
or
xchg
ret
and
sub
loopne
mov
push
pop
adc
add
push
movups
js
push
sbb
add
sbb
cmp
add
mov
jmp
fdiv
mov
pop
lock
lods
arpl
int
aam
add
test
or
pusha
data16
push
sbb
mov
inc
sbb
or
xor
stc
jge
push
ins
add
jo
adc
add
pusha
push
cmc
sbb
sbb
cmp
xor
cmp
lock
imul
mov
push
pop
gs
mov
js
xchg
add
push
add
adc
mov
adc
stos
pop
or
inc
mov
cmp
inc
jge
gs
mov
jbe
leave
sub
add
in
mov
ror
push
adc
mov
aaa
rol
ret
rol
inc
add
sbb
or
jge
add
or
and
sahf
mov
loopne
or
in
mov
and
add
add
imul
add
add
popf
add
pop
and
adc
pop
push
hlt
nop
js
add
pop
mov
rcr
ror
and
sub
mov
ins
sub
ins
xchg
test
pusha
add
inc
and
push
ins
sbb
xchg
adc
in
xchg
push
mov
mov
adc
ds
or
push
sub
mov
and
cmc
or
in
push
add
hlt
or
mov
popf
adc
ret
ret
push
xchg
pop
mov
sub
int3
jne
pop
cmps
or
inc
hlt
add
and
aaa
or
test
add
ret
and
sbb
add
adc
mov
ret
fst
sahf
movs
test
repnz
jmp
ret
add
mov
xlat
(bad)
je
jmp
push
inc
xor
xchg
xor
add
and
test
mov
out
or
and
jae
dec
pop
cmp
push
jbe
push
mov
sbb
xchg
push
mov
push
push
test
sub
pusha
neg
movs
arpl
ret
pop
inc
sbb
and
add
js
inc
and
idiv
mov
jns
ret
dec
sbb
leave
pop
jns
add
mov
cmp
sbb
add
pop
inc
mov
daa
outs
inc
lock
sbb
dec
or
pop
and
mov
pop
cs
jno
inc
or
cwde
jns
sub
adc
sbb
sub
test
test
jnp
pusha
cmps
mov
in
cmps
sub
es
jg
cmp
dec
loop
pop
mov
mov
dec
dec
adc
call
fsubr
repz
sub
pop
push
and
js
and
ss
je
loopne
push
inc
jo
push
or
fist
scas
mov
pop
sbb
aas
stos
sub
or
mov
mov
pop
xor
xor
cmp
pop
cmp
movs
inc
(bad)
out
push
lock
adc
inc
push
and
test
or
scas
adc
jmp
ja
sti
out
jl
and
or
pop
nop
fs
dec
or
frstor
or
sub
dec
das
shl
aaa
inc
cmp
lock
inc
jne
out
add
xchg
pop
cmp
and
mov
test
sub
imul
xchg
push
jno
jmp
mov
push
and
jmp
mov
ret
sub
iret
dec
xor
cmp
rcr
icebp
jecxz
sti
(bad)
adc
inc
ins
adc
cmp
xor
lods
clc
clc
mov
cmc
stos
xchg
daa
int
sbb
mov
test
ret
push
push
or
inc
push
add
dec
aas
add
jb
rol
in
sub
add
push
shr
dec
or
popa
or
cmp
adc
jo
dec
mov
cmp
inc
inc
or
pop
push
retf
out
mov
inc
or
push
in
pushf
stos
popa
mov
push
add
and
jl
mov
cdq
daa
sub
dec
mov
inc
jae
pushf
jno
inc
mov
sbb
adc
mov
fadd
inc
adc
jno
cmp
cmp
inc
jne
lods
and
ja
in
pop
test
es
mov
jmp
mov
push
je
sbb
scas
pop
or
ret
pusha
jmp
push
add
pop
cmp
retf
mov
jge
xchg
or
xor
jmp
push
outs
aaa
pop
and
int3
pop
xor
push
(bad)
sbb
push
push
test
sti
(bad)
data16
clc
xor
add
pop
sub
pop
and
and
pop
inc
pop
nop
or
in
aaa
jnp
je
aaa
or
inc
jo
mov
jne
jmp
rcr
inc
ins
mov
sti
and
aam
enter
push
mov
add
dec
jecxz
or
jecxz
xor
vcvttps2dq
mov
or
sbb
aaa
hlt
(bad)
adc
push
and
lock
jo
xchg
sub
jmp
jmp
jns
push
push
mov
push
or
push
add
lea
retf
jp
jb
cmp
push
dec
imul
push
and
into
xchg
xor
ret
fcom
mov
mov
jnp
cmp
movs
movs
mov
jne
jmp
xor
xchg
cmp
popa
cmovno
adc
xor
and
out
adc
in
icebp
and
sub
push
or
push
xchg
push
les
sahf
jmp
cmp
lea
push
pop
clc
xor
jecxz
ins
jg
or
adc
int3
dec
jg
pop
popa
sbb
and
ins
hlt
jp
add
add
or
icebp
or
enter
sbb
ins
dec
scas
gs
clc
js
pop
and
mov
and
jmp
push
push
fld
retf
jg
add
push
mov
call
aam
add
jb
xchg
xor
mov
jnp
dec
test
adc
rol
mov
jmp
mov
leave
ds
cwde
push
pop
push
adc
iret
rcr
jns
ins
test
add
hlt
dec
aad
retf
inc
push
lahf
inc
lds
int3
pusha
pop
and
movs
je
cmp
adc
cmp
lods
inc
rcl
mov
xchg
into
hlt
push
ss
fcomp
lods
call
aas
fiadd
loopne
jmp
add
lock
add
add
sbb
rol
push
movs
xchg
rcl
test
ja
xor
push
loope
sub
pop
mov
(bad)
cmp
out
hlt
add
clc
jge
mov
pcmpeqb
div
popa
call
inc
and
lods
xor
je
or
shr
inc
cmp
xor
push
jl
and
jnp
push
sbb
jae
ja
mov
fisttp
mov
inc
std
cmc
repz
inc
popa
jp
push
addr16
mov
out
and
and
nop
imul
imul
add
je
sub
cdq
dec
jp
jmp
or
lds
sub
ja
or
mov
push
xchg
cmp
pop
std
fwait
jp
aam
or
loopne
mul
or
dec
inc
or
dec
or
adc
ins
cmp
mov
imul
int
sbb
test
xchg
sub
sub
adc
jne
jns
dec
mov
loop
jge
sub
xchg
add
arpl
jbe
jl
inc
push
inc
imul
pop
popf
jge
xchg
bound
add
xchg
dec
add
add
or
cwde
mov
jge
loopne
push
sbb
or
xadd
mov
adc
or
or
pop
xor
xchg
test
and
pop
mov
push
jge
dec
push
stc
inc
push
ins
imul
repnz
push
imul
scas
mov
inc
popa
(bad)
push
jecxz
add
loopne
ds
ja
test
cmp
call
add
inc
add
jl
add
push
jle
xchg
xchg
or
arpl
push
jle
sar
jo
or
sbb
cmps
or
loopne
push
adc
inc
lock
aad
dec
dec
imul
loopne
(bad)
mov
lea
aaa
ins
ins
or
push
(bad)
jne
jl
cdq
or
inc
in
mov
or
jle
stos
pushf
jl
mov
pop
sub
inc
test
ss
and
xchg
mov
push
sub
push
clc
mov
fs
int
xor
sbb
fmul
add
ret
retf
movs
int3
add
ja
push
push
inc
mov
sbb
inc
cmp
pop
or
jg
adc
je
push
rol
(bad)
push
push
enter
inc
or
leave
inc
mov
cmp
mov
sub
pop
sbb
(bad)
retf
dec
(bad)
aad
clc
arpl
out
repz
lea
jmp
adc
sub
int3
(bad)
mov
clc
mov
loopne
or
mov
mov
int3
imul
adc
add
adc
pop
ins
sub
push
add
add
inc
pusha
mov
call
dec
inc
shl
subps
xor
ins
mov
xor
out
cmp
fisttp
pop
xchg
or
rcl
pop
pop
shl
(bad)
push
dec
sbb
cmp
or
and
lar
mov
je
add
xchg
(bad)
jbe
and
aaa
mov
or
cmps
push
adc
inc
ret
in
and
sub
sahf
cld
jbe
daa
add
hlt
or
imul
inc
popa
ja
xchg
shr
mov
shl
adc
push
rcl
inc
add
sbb
pop
test
rcr
lahf
cld
ret
jo
int
fs
pop
xchg
mov
sar
add
les
or
jmp
cmp
pop
ins
retf
or
out
rcl
fcomp
sbb
test
xchg
hlt
out
adc
ror
push
mov
mov
jb
mov
cwde
adc
add
push
sub
jne
sbb
clts
cwde
pop
jno
adc
add
sbb
push
mov
icebp
inc
mov
enter
mov
cmp
sbb
loope
jo
adc
jae
inc
(bad)
cld
cmp
test
ret
adc
lods
mov
xchg
dec
and
pushf
jge
mov
in
adc
js
push
bswap
rol
mov
mov
add
loope
dec
leave
mov
test
jae
add
sbb
sbb
add
add
loope
mov
add
mul
shr
push
push
je
mov
adc
inc
inc
adc
gs
test
movs
inc
pop
jne
retf
add
cdq
mov
mov
xor
and
xchg
push
or
sbb
fwait
add
cmp
mov
jg
loopne
sbb
and
shr
je
clc
push
lods
push
in
xchg
or
add
inc
lods
jbe
and
or
inc
(bad)
adc
dec
pop
jae
lock
ret
lea
inc
sub
(bad)
push
inc
xor
pop
or
push
xchg
mov
mov
loop
mov
lock
scas
cmc
scas
pop
ins
gs
push
jo
nop
loop
inc
and
and
mov
inc
sub
mov
push
dec
xor
mov
sbb
adc
idiv
loope
add
xchg
inc
mov
or
xor
int
jnp
push
and
xchg
jo
add
dec
scas
loop
adc
and
sub
inc
xchg
inc
pop
mov
jmp
add
xchg
not
das
dec
ds
imul
mov
jmp
dec
cmp
add
adc
sbb
outs
ins
pop
je
pop
aas
xchg
add
push
stc
push
movs
add
dec
dec
xchg
(bad)
add
in
jecxz
out
(bad)
jmp
fst
adc
push
push
loopne
loopne
out
das
icebp
pusha
pop
sub
icebp
cmp
sub
and
or
push
push
repnz
adc
adc
sbb
jmp
dec
je
add
dec
push
xor
add
loop
and
inc
jne
push
popa
mov
adc
ins
call
jmp
and
pop
and
dec
mov
xor
cmp
rcr
jo
mov
mov
loopne
or
mov
fdiv
or
push
popa
or
mov
sbb
and
icebp
pop
sbb
inc
arpl
shl
sub
push
loopne
sub
xor
jmp
mov
inc
mov
and
ror
fild
jle
je
stc
and
push
and
sbb
(bad)
ins
or
jg
dec
jo
movs
add
rol
jmp
daa
out
cmp
jne
jmp
pop
dec
fs
call
movs
rol
sbb
(bad)
add
and
das
xor
test
sbb
add
mov
push
dec
cmp
pop
fcmovnbe
pop
call
inc
test
lods
sbb
jnp
and
jp
xchg
les
outs
cmp
jg
add
sbb
rol
or
cmp
add
jae
mov
aaa
cmp
jge
pop
cmps
sbb
sbb
mov
pop
loope
outs
out
xchg
xor
push
retf
clc
mov
push
fs
push
icebp
jne
add
or
push
mov
inc
dec
pop
mov
pusha
adc
or
inc
and
xchg
ror
xchg
push
dec
push
pusha
cs
ja
(bad)
push
xchg
or
sahf
or
mov
and
sbb
inc
dec
lock
and
enter
movs
lds
in
xchg
jmp
(bad)
jp
pop
aad
push
loope
push
fistp
fistp
xor
mov
push
jo
ja
je
xor
ins
xor
dec
enter
or
mov
retf
push
repnz
mov
mov
test
pop
gs
mov
xor
xchg
in
fld
inc
and
sub
(bad)
das
fcmovne
push
jge
cmp
add
fisub
jl
mov
mov
mov
popa
ss
dec
aam
push
push
jno
in
jmp
dec
mov
popf
pop
enter
dec
outs
mov
adc
cdq
clc
ret
mov
pop
push
or
lea
or
jb
push
jecxz
in
mov
add
cmp
mov
cld
push
daa
cmp
jne
push
dec
lea
adc
mov
retf
pop
sbb
or
cmc
sbb
jb
adc
jmp
xchg
pop
rcl
xor
sub
pop
or
popa
arpl
jne
add
xor
cmp
loope
jmp
ja
into
add
or
xchg
enter
add
int
xor
add
movs
inc
scas
into
pop
jecxz
pop
lahf
out
imul
dec
push
xchg
push
adc
xor
jo
(bad)
enter
sbb
pop
adc
sub
call
cwde
and
aad
call
lea
xchg
adc
leave
add
add
add
es
and
cmp
mov
jb
mov
sub
imul
daa
rsqrtps
cmp
js
movs
pop
push
retf
imul
adc
inc
pop
push
test
inc
test
rcl
aad
pop
(bad)
add
rcl
push
cli
or
inc
test
inc
inc
adc
jb
(bad)
and
push
push
std
add
push
push
dec
test
adc
xchg
adc
std
mov
jmp
lods
sbb
or
loopne
adc
cmps
std
movs
mov
lods
add
push
sub
sti
daa
jge
retf
scas
and
js
inc
cmp
int
sbb
cmp
ja
je
and
dec
sti
les
loop
xchg
cld
dec
je
dec
dec
inc
ins
fbld
in
or
jg
jge
jbe
or
call
jo
movs
repnz
push
scas
dec
inc
pop
push
or
dec
push
push
lock
push
or
inc
or
ja
fisubr
sar
in
sub
jbe
inc
rol
fstp
dec
dec
(bad)
stc
add
push
pop
sti
add
daa
push
push
inc
stos
cmp
neg
je
push
xchg
daa
push
ror
pop
ins
sti
mov
loope
nop
add
je
shl
sub
ja
push
pop
ins
repnz
push
jbe
ror
out
je
push
jmp
cmp
xchg
cld
sub
mov
add
inc
(bad)
cmp
jbe
jle
xchg
jecxz
mov
xor
fsubr
stos
mov
pusha
pop
adc
icebp
js
ud0
add
repnz
imul
xchg
pop
or
ja
push
inc
and
or
cmp
mov
test
mov
dec
pop
repz
je
mov
sub
pop
outs
fstp
cmp
sub
pop
mov
bound
mov
sub
fbstp
pop
scas
mov
jg
cmc
sub
inc
fs
test
xlat
xchg
sbb
pop
cmp
mov
imul
bnd
inc
adc
adc
sbb
add
imul
mov
add
push
lock
adc
inc
adc
inc
push
into
add
pop
jecxz
and
add
add
js
add
and
jl
imul
inc
or
sbb
add
cdq
and
ins
iret
inc
ins
jae
(bad)
xchg
mov
add
adc
mov
add
sbb
xchg
mov
lock
in
push
adc
xchg
arpl
inc
push
xchg
sbb
sar
xor
xor
add
outs
cmp
out
or
sbb
push
or
out
xor
ds
cmp
pusha
dec
or
adc
inc
test
add
inc
cmp
dec
pop
push
loope
mov
add
dec
and
cmps
test
jno
bndstx
adc
and
outs
dec
sbb
jmp
lahf
mov
add
cwde
dec
test
push
add
cmp
inc
mov
push
imul
jbe
adc
or
pop
adc
jg
mov
push
(bad)
(bad)
sub
push
lea
push
inc
jmp
jle
out
sub
push
mov
or
mov
and
mov
fcomp
ror
sar
fild
and
shl
js
sbb
jge
rol
or
rcr
pop
inc
sub
ds
fisttp
loope
sub
push
cmp
pop
xor
int
sub
mov
leave
adc
mov
and
dec
rol
mov
clc
jl
add
retf
inc
add
push
add
pop
sbb
cmp
mov
xor
push
cmp
inc
push
hlt
nop
movs
das
sub
push
mov
add
loop
sbb
push
pop
retf
es
sar
xor
jnp
and
mov
jmp
dec
mov
push
lea
jl
push
fsub
fdivr
and
dec
ja
xor
inc
sub
jbe
mov
shl
out
add
add
pop
or
call
mov
daa
or
xchg
adc
mov
xor
nop
in
js
mov
xor
dec
push
and
pop
ror
jg
jne
push
das
call
ret
(bad)
sub
leave
jecxz
addr16
call
stc
mov
mov
movs
mov
dec
(bad)
dec
loopne
inc
inc
add
add
adc
fnstcw
pop
test
push
out
cwde
push
mov
adc
inc
inc
and
ret
arpl
out
mov
mov
push
not
test
(bad)
nop
cmp
je
sub
mov
mov
jmp
xchg
rcl
dec
sahf
sub
sub
pop
or
popa
push
or
mov
loop
dec
mov
ret
test
test
subps
out
add
push
lahf
jb
xchg
cmp
(bad)
clc
adc
cld
xor
hlt
cmp
jp
popa
add
repz
jl
loop
clc
add
jbe
test
jnp
iret
data16
and
sbb
fild
push
pop
pop
or
fild
daa
sub
jbe
daa
enter
push
sub
mov
jae
xor
pop
and
daa
jbe
and
xor
popa
je
add
aaa
xor
ins
cmp
push
nop
or
pop
hlt
pop
ins
retf
cmp
(bad)
add
or
mov
ss
jae
sbb
and
cmp
hlt
push
push
inc
jo
adc
lods
imul
xor
push
int
lods
(bad)
push
clc
adc
push
hlt
add
adc
sbb
cmc
xchg
or
test
and
jmp
push
into
sbb
icebp
or
pop
aas
popa
sti
or
je
or
loope
aas
mov
or
dec
outs
movs
xchg
mov
sbb
push
call
int
sub
sub
jno
stos
xchg
inc
jle
cdq
xor
or
adc
sbb
or
hlt
add
xor
mov
pop
pop
imul
lock
pop
repnz
ins
xchg
jb
push
adc
mov
xchg
jg
jecxz
inc
push
add
sbb
jne
jne
push
iret
sub
inc
pop
rcr
cmp
fdivr
or
sub
das
mov
pop
mov
xor
xchg
rol
push
inc
(bad)
fst
or
and
sub
aas
fistp
pop
daa
jns
sar
cmps
push
lods
pop
add
cmp
sub
clc
adc
stc
or
adc
xchg
add
sbb
adc
or
add
cmp
js
push
fs
cmp
push
push
fucomip
fdivr
add
add
dec
fcomp
pop
mov
sub
sbb
pop
xchg
inc
aaa
jns
add
lock
or
add
jne
add
sbb
inc
shl
les
shr
imul
ret
int3
cwde
cmp
push
inc
and
jmp
push
imul
shl
cli
add
stc
jp
mov
adc
mov
mov
xor
push
mov
sub
push
mov
xor
xor
dec
xor
frstor
push
das
xchg
or
mov
and
(bad)
std
(bad)
inc
inc
fiadd
hlt
push
jo
fmul
pop
or
mov
pop
jmp
pop
pop
mov
push
xor
arpl
jl
mov
stos
inc
push
test
imul
dec
and
call
mov
sub
jae
scas
mov
or
(bad)
or
mov
pushf
retf
scas
out
pushf
jge
xchg
jne
push
xchg
add
das
cmp
mov
pop
or
xor
inc
fs
and
sub
int3
or
lods
and
into
mov
imul
push
adc
ins
cmp
or
mov
cmp
mov
cwde
mov
ror
cli
adc
pop
cmps
(bad)
out
loope
shr
cmp
pop
add
xchg
pop
or
and
test
inc
adc
sub
fs
mov
jb
sbb
cmp
inc
(bad)
sbb
sbb
lahf
sub
jns
add
inc
call
pusha
ffreep
add
cmp
xchg
jo
push
cmp
jge
popf
push
add
jo
xchg
test
aam
ss
mov
inc
sub
push
mov
push
and
jmp
je
ret
push
xor
add
shl
cwde
jo
mov
aas
xchg
mov
cmp
pop
nop
pop
lods
push
or
(bad)
mov
pop
sbb
sbb
jg
(bad)
ror
aas
cdq
les
ud0
pop
sbb
sbb
movs
and
mov
ins
mov
pop
push
icebp
sub
(bad)
aam
rol
fidivr
(bad)
add
add
cmp
gs
sub
add
outs
clc
pop
pop
mov
movs
mov
jnp
jo
jle
add
xor
and
adc
pop
jnp
mov
data16
cmp
inc
sbb
push
inc
loop
push
add
dec
shl
jo
jnp
shl
jl
or
dec
test
in
mov
mov
lods
mov
mov
mov
jb
pop
cs
fcomp
cs
retf
in
in
in
lock
pop
hlt
clc
cld
add
cs
retf
movs
add
or
adc
jb
pop
sbb
and
cs
retf
sub
xor
retf
in
mov
mov
push
push
pop
pop
xchg
retf
in
pusha
fs
pop
cs
jl
cmp
out
xchg
jge
and
movs
(bad)
mov
mov
jns
add
fs
sub
or
je
xor
sahf
add
and
mov
cwde
jnp
inc
and
mov
dec
push
push
das
xor
jmp
outs
ror
sbb
or
push
repnz
les
inc
sbb
pop
push
popa
xor
add
jne
adc
or
jmp
mov
add
xchg
lods
push
inc
add
es
pop
add
dec
out
mov
adc
jns
mov
ins
xlat
out
in
jb
add
les
push
adc
mov
inc
js
dec
adc
sbb
nop
je
(bad)
sub
fsubr
jl
ror
popa
mov
mov
and
add
les
fistp
loop
mov
mov
int
sub
sbb
sbb
jb
cdq
ret
and
xor
mov
push
dec
stos
icebp
pop
mov
shl
push
inc
pop
(bad)
xor
and
jb
push
and
clc
jle
mov
aam
in
es
pop
test
sbb
add
adc
inc
and
imul
mov
in
add
jge
outs
arpl
or
repz
scas
pop
movs
mov
and
and
pop
jns
push
sbb
cwde
adc
sbb
and
adc
je
push
mov
shl
or
shr
add
mov
test
cmp
enter
cmp
sbb
push
dec
enter
mov
inc
inc
jp
call
ds
mov
outs
pop
int3
ins
in
jmp
retf
retf
test
cwde
push
xor
xchg
test
sub
jl
push
mov
mov
push
mov
aad
in
mov
adc
add
cmp
mov
sub
xor
js
and
jecxz
add
cld
cmp
int
jo
pop
or
sub
mov
rcr
and
mov
mov
xchg
lock
adc
sub
ret
mov
sbb
bound
mov
rcl
add
retf
mov
mov
int3
(bad)
popa
cmc
or
push
adc
and
je
ja
mov
movs
pop
add
sbb
add
adc
push
or
mov
rcr
loope
adc
retf
push
add
sti
cmps
rcr
add
cmp
ins
test
jne
cmp
stos
shl
imul
sub
add
ret
xor
adc
push
cmp
mov
jmp
outs
jecxz
rol
inc
int
mov
sbb
or
jne
or
xlat
ins
xor
push
test
adc
mov
add
sbb
jl
addr16
mov
cmp
lods
leave
sbb
inc
jo
sub
add
sbb
cld
push
jo
clc
ss
jns
(bad)
ss
push
stc
pop
ds
mov
or
xchg
sti
add
add
or
rol
mov
icebp
adc
ss
xchg
daa
mov
rcr
and
and
jno
cmp
pushf
das
ins
xor
jle
bound
scas
lock
mov
pop
dec
ret
jae
or
aas
sbb
mov
lods
jne
in
(bad)
mov
add
js
test
adc
mov
stc
xor
test
hlt
mov
add
in
shr
jo
push
rcl
push
mov
sbb
test
test
add
mov
adc
adc
or
cmp
xor
mov
shr
int3
(bad)
es
or
add
or
mov
dec
cmp
pop
and
push
sbb
push
fcmovnb
or
into
test
loopne
push
push
adc
add
test
int
aad
dec
or
stos
push
push
push
(bad)
and
fdiv
(bad)
cs
fist
xor
pop
jne
push
pop
pop
ret
inc
or
sbb
ins
cmp
adc
and
push
xchg
or
movs
mov
cmp
int
jae
xlat
or
scas
adc
inc
pushf
adc
sbb
adc
or
pop
sbb
lods
cmp
pop
cmp
sub
add
aam
pop
dec
scas
or
add
sub
push
xor
(bad)
sub
lock
jb
mov
inc
xchg
or
xor
loope
ret
xchg
fdivr
(bad)
sub
mov
ret
adc
jns
or
push
adc
shr
dec
inc
stc
dec
jg
je
sbb
push
adc
mov
mov
dec
ror
xor
mov
je
dec
je
add
cmovnp
outs
int
adc
add
jmp
jp
fld
sahf
les
popf
pop
dec
mov
outs
inc
popf
rcr
pop
das
adc
or
pusha
sub
je
repnz
arpl
mov
adc
pop
add
dec
push
jnp
shl
pop
bound
repz
mov
aam
sub
aaa
adc
adc
jne
push
aas
iret
iret
repz
or
jne
or
jne
popa
adc
cmp
cld
lds
add
sbb
mov
jg
jns
hlt
call
cmp
mov
and
sbb
dec
and
xor
or
xchg
mov
push
jmp
inc
and
sub
add
enter
sub
adc
icebp
fmul
add
mov
adc
or
sub
shl
mov
movs
xchg
sbb
xchg
mov
mov
or
pushf
mov
jo
mov
jne
sbb
js
enter
lds
cmp
std
dec
push
adc
sub
sub
sub
sahf
push
mov
or
push
sbb
movs
dec
jo
cmp
lea
push
test
inc
jne
les
inc
pop
mov
shl
ds
cmp
retf
or
xchg
add
cld
sub
inc
jge
cld
pop
xchg
ret
xchg
sub
hlt
daa
xchg
test
arpl
pop
sub
iret
nop
mov
mov
and
and
test
jg
mov
mov
ret
lods
mov
out
push
pop
je
and
xchg
test
and
cwde
jbe
and
fwait
sbb
push
push
xor
loop
pop
inc
or
shl
cmp
cmp
imul
and
jbe
push
retf
cmp
inc
push
jmp
ja
out
hlt
add
push
push
scas
sbb
xor
es
or
cld
push
adc
retf
xchg
and
push
fisttp
dec
xor
fst
fst
test
enter
cmp
jo
fbld
(bad)
mov
mov
sub
push
push
shr
pushf
add
aam
sub
cmp
adc
scas
push
dec
or
dec
push
fdiv
inc
pusha
push
sbb
add
cmp
jns
mov
and
xchg
sbb
dec
sti
fiadd
cli
ins
jecxz
and
or
push
ficomp
push
mov
adc
inc
cmp
dec
pop
push
dec
fcomp
movs
cdq
loopne
clc
and
jge
cmp
cmp
in
clc
xchg
loope
call
pop
pop
cmp
dec
xor
cmovnp
push
adc
in
pop
sbb
adc
pop
push
xlat
retf
fcomp
(bad)
ja
stc
jg
mov
inc
rcr
(bad)
rcr
push
in
or
pop
or
add
hlt
jno
cmp
stos
xchg
popf
jl
adc
shl
mov
addr16
push
out
mov
push
cmps
add
sbb
nop
dec
or
xor
aas
sub
clc
cmp
pop
ror
mov
ror
std
or
pop
pop
pop
hlt
cmp
inc
add
je
mov
or
mov
pop
push
sar
pop
pop
aad
adc
popf
jmp
pop
mov
rcr
or
popa
cmp
mov
push
pop
lea
pop
fistp
cmps
aad
mov
pop
add
pop
mov
fld
mov
push
mov
mov
dec
mov
push
les
mov
mov
sub
adc
mov
jo
xor
jmp
xor
jo
cmp
or
fnstsw
iret
sbb
test
inc
inc
(bad)
ds
sti
or
jl
and
jle
inc
mov
stc
or
(bad)
sub
out
dec
dec
mov
push
adc
mov
or
and
ret
mov
mov
xchg
sub
and
cmp
les
and
xchg
mov
adc
add
ja
push
sbb
inc
ror
and
repz
mov
push
adc
ror
pop
cmp
pop
cs
mov
cmp
xchg
ret
retf
fimul
xor
mov
or
inc
push
mov
sbb
call
test
shr
sub
push
dec
repz
sahf
popa
pop
push
inc
ss
mov
mov
push
lods
fs
adc
es
or
in
fstp
mov
les
mov
jl
call
ds
push
in
add
or
mov
push
push
push
xchg
shl
and
adc
cmp
scas
gs
(bad)
ds
sbb
add
jge
retf
jae
and
(bad)
push
aam
xchg
add
xchg
pop
dec
fsqrt
ds
ins
data16
ja
shl
loop
cmp
punpckhwd
mov
sbb
adc
clc
nop
xlat
push
pop
dec
cmp
sbb
in
int3
add
ret
not
and
or
dec
mov
adc
ins
mov
dec
push
or
ret
dec
and
inc
mov
int3
push
je
or
mov
pusha
add
pop
add
in
push
ficomp
jmp
xor
and
mov
push
adc
arpl
cdq
add
leave
and
std
or
and
push
out
test
or
push
push
cdq
sbb
cli
popf
push
jne
sub
leave
or
aas
adc
jp
rcr
jg
mov
xchg
rcr
adc
sbb
scas
test
int3
push
pop
pop
cmps
mov
sub
sbb
cmps
int
and
jnp
inc
sub
push
mov
push
adc
and
in
in
aam
das
or
xor
pop
enter
jle
add
pop
cmc
bnd
pop
fadd
mov
xchg
fiadd
and
xchg
and
je
pushf
out
xchg
adc
stos
mov
jne
fsubr
in
adc
je
sub
xor
xchg
mov
sbb
dec
fldlg2
sub
jo
jmp
cmp
or
bnd
movs
jne
test
sub
sti
or
jmp
xchg
sub
dec
les
js
into
jge
pusha
movs
movs
add
cmps
fadd
dec
dec
cmc
and
ror
xor
fisttp
les
cwde
xor
pop
lea
adc
pop
pop
fs
sub
push
push
(bad)
mov
mov
xchg
push
xor
outs
xor
fidivr
fs
mov
inc
mov
jns
sbb
inc
rcr
mov
mov
cdq
jg
mov
cmp
push
mov
mov
cmps
mov
dec
call
xchg
mov
mov
ret
shr
sbb
(bad)
jbe
and
or
cmp
mov
push
mov
pop
mov
push
inc
mov
xor
adc
stos
push
and
xor
sub
mov
cmp
outs
imul
add
fcomp
push
sbb
mov
or
lods
pop
test
push
or
sbb
mov
or
and
leave
sub
ficom
jne
enter
repnz
jecxz
cmp
mov
push
or
and
sbb
push
sub
cdq
inc
cmc
std
popa
or
sub
aam
pavgb
dec
hlt
add
loopne
cmps
lea
mov
hlt
ds
test
add
pop
push
ret
mov
and
loop
jbe
adc
lock
mov
dec
xor
out
push
and
add
test
cmps
jno
les
push
out
pusha
sub
pop
jnp
(bad)
jmp
and
or
and
cmp
cmp
pop
clc
pop
mov
aam
xchg
dec
or
mov
ss
xchg
sbb
sub
push
sbb
jne
test
xchg
test
pop
dec
pop
shl
add
or
pop
jmp
and
or
sbb
xchg
or
dec
xor
test
ret
test
fnstcw
add
xchg
fimul
mov
hlt
mov
jge
(bad)
or
push
mov
add
mov
popf
mov
mov
inc
mov
sbb
add
mov
sub
push
pop
pop
not
shl
mov
add
ret
movs
inc
movs
movs
ins
jecxz
jecxz
jecxz
in
and
cwde
jb
fisttp
daa
cmp
or
and
or
cmp
repz
adc
push
idiv
sbb
sbb
js
mov
out
mov
retf
jecxz
mov
or
push
push
push
gs
les
dec
inc
dec
jl
fist
fimul
adc
dec
ror
adc
sbb
mov
cmp
cmp
pop
xor
adc
mov
fcos
sbb
out
push
and
mov
push
ins
js
jge
push
rol
repz
push
push
adc
fidiv
cmp
cmp
jg
mov
call
add
sub
adc
adc
add
int3
adc
lea
add
or
sub
mov
push
inc
leave
xor
adc
mov
or
mov
jmp
ror
xor
jb
xor
cmovg
mov
dec
cmp
dec
cmp
push
add
int3
and
xor
cmps
shl
push
stos
nop
sbb
addr16
dec
sbb
ret
xchg
add
dec
pop
ss
add
or
and
or
dec
add
jne
mov
and
add
push
push
fidivr
retf
leave
push
push
movs
xor
mov
push
xchg
xor
or
push
mov
and
(bad)
cmp
sub
push
jb
jp
mov
and
push
and
push
fidiv
dec
jecxz
push
fist
push
repz
jmp
pop
in
push
adc
jbe
fbstp
dec
sub
nop
adc
add
sbb
dec
rol
fbstp
test
fstp
cmps
mov
dec
inc
xor
stos
mov
sbb
outs
icebp
and
cli
sub
loopne
mov
(bad)
xchg
or
sbb
mov
test
idiv
xor
loop
nop
test
push
inc
dec
aam
add
sub
and
arpl
enter
std
inc
popa
adc
mov
and
sub
jne
sar
inc
dec
rcr
jne
jg
jl
pop
dec
mov
sub
ret
or
adc
shl
sub
or
mov
xor
pop
mov
or
jnp
imul
mov
call
sbb
ds
lods
mov
mov
push
push
lea
and
scas
fimul
sub
shl
das
sbb
lea
sbb
fwait
cli
mov
sbb
int3
push
push
inc
dec
inc
jo
or
mov
inc
push
jb
adc
es
lahf
mov
ds
inc
push
add
or
pop
ins
adc
pop
ret
inc
inc
adc
mov
inc
imul
sub
imul
push
add
adc
push
mov
push
cmp
addr16
xchg
mov
call
shr
sti
add
mov
pop
sbb
add
loop
and
xor
test
aas
jbe
addr16
push
and
xor
xlat
xor
or
adc
rol
sbb
jl
clc
add
jo
jmp
mov
add
push
mov
push
in
cmp
adc
sbb
cmps
and
mov
bound
fs
mov
inc
mov
test
mov
or
es
inc
sbb
adc
or
aam
add
dec
cs
xor
sbb
test
mov
add
imul
repnz
mov
inc
les
xor
loopne
mov
mov
push
icebp
cmp
ja
sbb
jne
xor
aad
out
cmp
push
pop
addr16
jnp
test
jp
or
fcomp
movs
fwait
mov
js
cmp
loope
and
mov
cmp
aam
xchg
sub
outs
add
sbb
rcl
je
dec
imul
fcom
jo
inc
ds
mov
inc
sbb
add
mov
and
push
icebp
lods
fwait
not
cwde
je
loopne
je
pushf
pop
sahf
mov
mov
jl
and
inc
push
add
and
(bad)
sbb
or
push
xchg
mov
adc
inc
(bad)
pushf
inc
xor
fst
inc
imul
and
call
shl
push
adc
sub
ins
repnz
imul
dec
shl
pushf
or
pusha
aam
mov
push
bound
lds
(bad)
(bad)
ins
and
dec
dec
mov
push
mov
pop
inc
jne
or
aam
push
or
bound
mov
(bad)
fsub
inc
lock
inc
sbb
adc
jmp
rcl
xor
push
inc
push
test
jo
or
pop
ss
je
sub
cmp
call
es
xchg
lods
bound
sub
dec
pop
inc
mov
in
and
and
loopne
inc
add
jne
cmp
or
adc
and
push
cmps
xchg
fbld
iret
sbb
les
mov
and
and
jb
or
loop
cmp
ja
(bad)
mov
jmp
fcomp
push
pusha
aam
mov
fs
scas
lods
ss
shr
and
adc
into
push
hlt
dec
ficomp
test
fsub
or
xor
test
shr
cld
adc
call
test
pop
fld
imul
pop
sbb
das
(bad)
aas
lods
stos
adc
jae
dec
sti
enter
and
and
jl
push
xlat
shl
xor
dec
cmps
mov
push
int3
(bad)
ret
scas
or
adc
or
je
outs
in
ins
js
add
jl
adc
nop
cmps
sub
call
in
sbb
in
jmp
int3
ret
sbb
xor
cwde
push
shl
inc
mov
iret
pop
xor
add
or
ja
jge
pop
jle
fucom
mov
sbb
pop
cli
xor
cwde
je
lods
xlat
pop
lock
cmp
shr
or
outs
scas
sbb
out
pop
xor
jns
push
xchg
add
cmp
imul
cmp
addr16
hlt
ins
jnp
sbb
adc
mov
jp
jmp
sub
sub
push
pusha
adc
scas
push
test
cmp
jb
cdq
aas
pushf
add
in
or
add
push
stos
fdiv
ret
jmp
lea
ret
pop
fld
pop
pop
clc
std
sbb
(bad)
jns
adc
or
loopne
rol
xchg
sub
ret
add
push
aad
in
and
out
inc
and
push
xor
dec
cmp
hlt
loopne
outs
sbb
or
call
and
xchg
les
in
jecxz
(bad)
retf
add
aam
cmps
jmp
or
sti
lods
ret
addr16
fidiv
ds
pop
test
mov
sbb
push
push
xor
lods
jne
fwait
push
pop
push
ss
mov
jecxz
jo
mov
jmp
add
push
xor
sbb
ret
mov
sub
xchg
or
adc
movs
adc
or
sbb
sbb
movs
daa
test
jnp
dec
push
or
cmp
lea
daa
dec
imul
jmp
mov
lods
ret
out
test
imul
or
sbb
or
xchg
lods
rcl
mov
aaa
out
mov
jo
mov
bound
push
mov
and
pop
sub
and
cmp
jne
mov
adc
jecxz
cmp
stos
and
out
xor
cmp
adc
test
cmp
and
mov
mov
sbb
adc
shr
add
(bad)
push
inc
adc
pop
je
ret
pop
sbb
cmp
add
(bad)
lea
sar
ins
fsub
sbb
dec
jge
sbb
and
xor
lods
adc
adc
retf
aam
push
xor
lea
inc
imul
je
repz
sbb
xor
(bad)
pop
mov
push
dec
je
sbb
jno
push
test
pop
xor
mov
add
adc
adc
ror
imul
sub
pop
mov
test
scas
and
push
or
mov
lahf
popf
add
lods
push
sub
add
inc
test
sysret
jl
push
nop
push
push
in
push
stos
nop
(bad)
dec
inc
sbb
push
or
adc
adc
push
push
cmp
adc
ins
adc
adc
add
push
push
add
push
jnp
pusha
mov
mov
test
xor
cld
adc
jl
jmp
pop
cmp
mov
mov
sbb
hlt
sbb
xor
or
xchg
inc
xor
inc
ret
dec
xchg
loope
outs
pop
out
push
ret
clc
cmp
xchg
call
pop
xor
mov
or
ss
addr16
sbb
arpl
jns
jmp
mov
bound
pop
retf
imul
xchg
sub
pop
fild
add
jo
pop
dec
pop
add
xor
mov
sbb
sub
inc
push
retf
push
or
outs
pop
mov
test
je
dec
aad
add
jmp
sub
cli
call
cmps
add
mov
or
add
push
and
pop
fstp
mov
je
(bad)
outs
cmp
sbb
lock
or
idiv
aam
push
pop
inc
retf
xchg
push
mov
or
int
sub
sbb
push
pop
adc
and
out
lock
mov
ds
fsubr
(bad)
push
xchg
push
fdiv
shl
dec
pop
mov
jo
pop
call
cmp
mov
in
and
loope
inc
es
sbb
retf
pop
and
std
(bad)
std
jg
stos
pop
mov
mov
push
add
sub
fs
es
pop
std
sbb
or
adc
jne
in
pop
cwde
popa
xchg
ret
jnp
mov
pushf
add
movs
lods
mov
jmp
test
xchg
jge
aas
push
adc
cli
push
arpl
movs
(bad)
push
fld
xor
lahf
test
lods
inc
push
inc
adc
pop
loope
adc
push
les
mov
mov
and
iret
and
lea
je
jg
and
sub
or
pop
call
jmp
into
sar
jne
adc
(bad)
les
(bad)
test
ror
rol
pop
add
nop
retf
cmp
(bad)
add
test
add
mov
movs
cmp
adc
push
sbb
fldcw
ins
and
cmps
adc
mov
inc
and
inc
lods
and
jbe
and
enter
adc
sub
lock
rcl
jge
sub
add
cld
movs
add
es
add
call
loope
cmp
lea
daa
out
das
in
and
mov
adc
jle
push
ret
jl
pop
in
push
inc
add
test
pushf
call
xor
mov
in
add
cmp
push
call
adc
push
xor
xchg
retf
cmp
pop
xchg
pushf
push
inc
adc
or
jb
inc
shl
or
sbb
idiv
lock
add
fs
lods
test
dec
loopne
or
xor
jae
js
out
inc
inc
or
mov
arpl
es
jb
xor
xchg
xor
cmp
jp
push
pop
(bad)
fadd
jmp
jne
sbb
sahf
loopne
loopne
cmp
cld
test
or
adc
cmp
pop
mov
div
cld
out
push
add
clc
scas
cmp
repz
add
add
pop
pop
div
mov
add
add
pop
pop
add
add
mov
dec
aad
add
push
mov
add
in
or
add
jbe
dec
push
inc
add
into
push
cdq
ret
repz
sub
jl
inc
cmp
jb
imul
push
hlt
adc
inc
add
ss
and
popf
enter
push
jbe
mov
and
in
and
mov
jge
(bad)
rcr
je
or
loopne
and
push
out
fstp
pop
das
ds
ss
sahf
rol
push
jg
push
jbe
mov
or
xlat
div
movs
je
ja
sub
pop
add
bound
push
adc
ret
adc
push
and
add
sbb
enter
add
add
leave
inc
push
sub
in
pop
adc
sbb
inc
jle
inc
add
mov
pop
fistp
test
jle
jl
add
mov
mov
add
and
mov
push
inc
lea
push
add
loop
sbb
outs
popa
xchg
adc
icebp
js
imul
jle
dec
outs
cmp
(bad)
jbe
mov
push
add
lods
sub
adc
cld
jl
cmp
jne
outs
pop
dec
and
push
sbb
jbe
inc
ror
sub
xor
into
inc
add
push
push
xlat
jb
les
(bad)
scas
mov
xchg
ins
mov
pusha
cwde
aas
lds
test
sub
sub
sbb
or
ds
dec
rol
cli
and
hlt
or
cmp
movs
sbb
jbe
mov
add
mov
not
aas
std
dec
(bad)
es
imul
inc
lock
(bad)
jmp
pusha
(bad)
in
add
or
ss
rcl
push
mov
mov
pop
(bad)
and
add
fistp
cmp
je
mov
daa
add
add
mov
pop
cmp
push
pop
push
inc
inc
push
call
icebp
call
push
cmp
fs
sub
add
ss
xor
mov
lahf
mov
add
scas
push
jl
out
or
inc
push
dec
add
ds
movs
mov
cs
push
mov
icebp
inc
jmp
mov
cmp
inc
or
je
sub
(bad)
rol
je
fadd
push
adc
push
sub
pop
mov
lods
lods
and
adc
mov
xchg
inc
sbb
out
jne
sub
shr
or
jne
and
adc
and
and
inc
add
fs
sar
inc
push
cmp
and
adc
adc
and
jae
jl
cmc
xor
and
add
add
push
mov
adc
add
pop
scas
sub
inc
inc
mov
jbe
repz
lea
(bad)
inc
jne
retf
sub
inc
add
and
sbb
pop
mov
shr
pusha
pop
inc
sub
sub
add
sub
je
sub
mov
daa
jle
push
stos
(bad)
popa
mov
push
fwait
dec
pop
mov
mov
je
inc
add
mov
mov
cwde
mov
or
ins
pop
push
arpl
les
jns
dec
call
push
push
sahf
retf
add
add
nop
sbb
cmp
call
les
cmps
call
outs
or
and
ja
xchg
retf
xor
xchg
lock
or
repz
push
jo
inc
push
cmp
sub
and
pop
dec
add
jmp
add
sbb
adc
in
jmp
xchg
sbb
ret
cs
scas
push
sub
je
push
or
mov
nop
xchg
sahf
sysret
pop
mov
out
shl
movs
lods
mov
pop
or
jmp
cmp
data16
cs
or
scas
sub
or
inc
mov
shl
inc
push
xchg
lock
dec
sub
int3
mov
jecxz
sbb
or
pop
xchg
test
sbb
(bad)
call
push
mov
fdiv
xor
test
popa
sbb
push
adc
xor
clc
push
and
add
gs
pop
inc
les
pop
ret
and
jmp
pop
mov
mov
dec
data16
and
bound
(bad)
push
fs
bound
cld
mov
push
add
xchg
les
jnp
dec
mov
shr
out
cmp
jge
or
jmp
lea
adc
fucomp
sbb
adc
aam
sub
loopne
cwde
and
mov
add
rcr
inc
scas
or
xor
cmp
(bad)
mov
rol
clc
fwait
or
cmp
inc
xor
ret
(bad)
movs
push
ficom
loop
adc
add
add
jbe
cmps
dec
dec
inc
pop
cmp
int3
push
jl
les
outs
mov
xor
add
dec
imul
inc
adc
cmp
or
dec
aad
jl
push
add
rcl
cmp
push
mov
push
repnz
mov
jmp
dec
(bad)
xor
loop
movs
pop
fisubr
xchg
adc
push
dec
in
mov
adc
out
sub
inc
push
shl
cmp
(bad)
retf
inc
dec
and
adc
push
scas
mov
adc
cdq
or
jp
push
cmp
inc
fld
adc
push
cmp
sub
xchg
or
out
push
(bad)
movs
inc
stos
add
fidiv
inc
cmp
xchg
in
add
movs
mov
inc
jecxz
mov
in
and
ins
and
xor
mov
xor
inc
dec
pop
out
cmps
pusha
cmp
into
sbb
fstp
cmp
shr
ss
ss
mov
cmovo
fs
push
push
dec
pop
and
adc
dec
(bad)
xor
mov
mov
push
cmp
xchg
stos
jne
sbb
sbb
repnz
ret
adc
mov
cmp
and
pop
scas
and
add
add
sbb
push
jns
int3
adc
je
inc
add
(bad)
push
test
and
lods
xchg
shl
jmp
sub
or
call
inc
or
push
cld
gs
loope
pop
add
les
frstor
add
sbb
retf
xor
inc
dec
cld
int
add
xor
fidiv
push
sub
jmp
push
stos
icebp
xor
sbb
loop
retf
retf
sbb
out
in
jecxz
sbb
test
repz
repnz
add
(bad)
and
push
inc
rol
jbe
retf
test
daa
ss
jl
mov
fld
lods
pop
mov
fbstp
stos
push
rcl
in
nop
loopne
ret
inc
push
fwait
mov
mov
inc
push
or
mov
cmp
jae
pop
test
sahf
push
xor
es
lods
test
jl
jb
sbb
scas
push
or
fmul
pop
dec
fadd
les
push
lock
test
fsub
test
sub
inc
retf
add
cmp
adc
or
or
arpl
inc
inc
mov
mov
test
(bad)
call
jle
jge
int3
mov
sbb
fdiv
xchg
push
mov
push
push
call
add
sbb
jge
jp
imul
scas
xchg
lahf
cmps
int3
push
sbb
mov
or
inc
jmp
mov
sbb
addr16
sbb
mov
sub
sub
(bad)
cmp
sub
aam
movs
(bad)
fild
and
in
cdq
les
inc
ss
inc
sbb
js
jmp
jae
mov
inc
adc
cmp
cwde
and
dec
add
add
dec
movs
xchg
add
jmp
call
mov
sbb
mov
add
movs
mov
rol
and
and
xchg
add
push
add
add
mov
cmp
push
cmps
inc
js
aas
loopne
daa
sub
loop
mov
movs
data16
push
xchg
push
sub
scas
mov
pop
and
push
xchg
mov
adc
or
stos
lahf
adc
(bad)
ds
ins
mov
loop
test
mov
add
mov
adc
pop
mov
push
and
adc
push
adc
lea
push
or
push
pop
das
push
nop
xchg
push
sbb
cmp
sbb
dec
dec
test
pushf
call
hlt
add
(bad)
mov
sub
sbb
out
mov
adc
pop
adc
jmp
sub
jl
add
aad
popf
or
xchg
or
inc
sbb
mov
pusha
jo
mov
sbb
sub
std
jne
and
mov
ss
mov
dec
mov
and
loope
jo
js
xchg
add
xchg
lds
mov
or
xchg
push
mov
adc
mov
loopne
shl
xor
mov
call
mov
nop
and
jp
or
pop
repnz
push
pushf
adc
xor
adc
add
into
repz
sbb
sub
sbb
popa
cld
xor
add
or
inc
mov
inc
mov
lock
mov
imul
push
or
mov
mov
adc
xor
shl
jmp
shl
adc
jl
icebp
jne
dec
mov
enter
inc
dec
sar
cs
sub
sub
adc
cmp
pop
jb
mov
xchg
pop
daa
lock
aaa
push
fcmovbe
dec
or
lds
mov
pmulhuw
sbb
pop
or
lods
std
sub
push
jnp
retf
int
lds
jp
int3
jno
and
and
sbb
push
or
add
jno
and
add
sub
xor
xchg
add
je
fdivr
and
dec
inc
pusha
adc
adc
mov
and
xor
or
adc
or
dec
push
adc
test
jmp
cmp
inc
fs
ins
js
fwait
nop
pop
sub
dec
cmp
pop
add
fstp
add
ret
test
and
loope
or
mov
push
movs
push
xor
or
mov
sbb
push
les
push
jno
(bad)
scas
mov
lds
mov
out
add
sbb
push
and
out
cmps
inc
dec
and
adc
pop
sub
inc
or
xor
push
jbe
add
cmp
sub
adc
icebp
or
adc
sub
ror
push
adc
mov
adc
dec
clc
jns
inc
xchg
ins
xchg
mov
push
rcr
scas
mov
xchg
or
or
sub
test
daa
inc
dec
je
pop
movs
sub
xor
ins
ficom
cmp
sti
push
or
imul
adc
add
sbb
adc
ins
jo
sbb
or
adc
ret
adc
loop
cmp
bound
cmp
loope
push
shl
outs
in
gs
mov
add
jge
jg
cmp
aaa
iret
in
into
or
arpl
push
add
mov
leave
nop
mov
jle
xor
xor
mov
or
pop
cmc
aam
daa
sbb
pop
jo
push
inc
or
xchg
and
fcomp
jle
cmp
jle
rol
fcomp
and
inc
movs
aam
dec
movs
jle
jns
mov
and
mov
and
ret
jno
push
mov
xchg
jne
dec
xchg
pop
sbb
or
test
movs
jg
jmp
or
dec
arpl
std
add
mov
data16
ins
xor
stos
mov
ins
xchg
pop
push
pop
inc
cmp
xchg
stos
cmp
in
loopne
pop
pop
jp
enter
imul
cmp
pop
movs
nop
mov
sbb
mov
or
loope
cmp
imul
call
xchg
inc
add
not
les
std
jo
test
dec
inc
push
shr
call
xchg
cwde
out
call
adc
sbb
add
je
adc
push
aam
push
fwait
out
push
(bad)
mov
into
mov
push
xor
clc
cmp
ja
mov
outs
inc
adc
or
retf
xor
jecxz
inc
sub
mov
mov
sbb
push
ss
sbb
add
ins
in
cdq
popa
stos
or
je
add
xchg
add
dec
setno
loop
enter
movs
sub
xor
push
mov
shl
adc
fmul
dec
std
adc
or
dec
cmp
in
cs
cmp
or
add
mov
push
loop
jnp
fcom
fdivr
imul
adc
pusha
inc
mov
add
leave
sub
mov
mov
xchg
push
cmp
xor
dec
es
push
fwait
dec
or
cmp
dec
adc
loope
adc
pop
sbb
push
xchg
push
or
cmp
out
loopne
add
shl
je
adc
push
pusha
(bad)
popf
repz
cmp
in
push
iret
repz
test
adc
jmp
and
add
jo
mov
inc
mov
nop
cli
shr
sub
mov
inc
adc
call
inc
cmp
shl
mov
xchg
fldcw
pop
sub
imul
cmp
pushf
pop
jo
push
pop
mov
sub
in
add
adc
adc
scas
lea
xchg
out
xchg
jne
and
adc
adc
push
pop
fsubr
add
fsub
out
sub
or
jmp
dec
xchg
or
pop
push
rol
mov
xchg
adc
in
pop
addr16
mov
out
lea
rol
jne
xor
repnz
pusha
ret
adc
and
sbb
cs
add
daa
loope
aad
jbe
or
mov
push
sbb
shr
ins
ret
repnz
dec
inc
pop
cs
or
fisub
ret
lds
fmul
xor
fcos
imul
xor
cld
(bad)
fcomp
sbb
jge
cmp
and
sbb
sbb
or
fnstcw
dec
push
je
xchg
cmp
mov
inc
jne
jbe
lods
ins
loop
jne
ja
fsubr
nop
int3
xor
xor
jne
push
pushf
add
aam
loop
and
dec
jp
pop
enter
scas
pop
pop
push
fcomp
sub
and
xor
shl
xchg
mov
inc
pop
lock
ins
jge
sbb
push
mov
mov
js
test
mov
or
add
cs
pop
xor
out
pushf
cs
cmp
mov
sbb
mov
and
add
mov
or
les
aam
mov
adc
call
lock
ficomp
push
test
adc
push
add
add
sbb
das
or
pop
or
mov
cdq
fs
in
(bad)
or
jecxz
adc
test
push
inc
mov
pop
icebp
sub
hlt
and
adc
je
(bad)
pop
jb
push
pop
push
mov
cdq
mov
out
ins
push
xlat
std
ins
add
mov
sbb
xchg
shr
fsub
pop
cdq
sbb
xor
pushf
lahf
dec
pop
cmp
add
ss
push
daa
dec
in
xor
loopne
sbb
pop
dec
inc
pop
xor
clc
add
mov
push
ret
call
loopne
xlat
in
sbb
inc
mov
fcomp
push
xlat
je
pop
shl
jb
xchg
into
push
mov
adc
in
fdiv
lock
inc
xor
cs
xor
adc
push
push
clc
and
pop
push
inc
xchg
bound
mov
inc
adc
inc
cmc
cld
push
mov
pop
(bad)
adc
push
pop
mov
add
adc
mov
add
jmp
dec
jl
std
add
pop
addr16
dec
sub
adc
pop
fistp
xor
and
xor
shl
and
test
pop
mov
or
add
jge
call
adc
movs
test
es
lods
fcom
ds
in
fsub
push
push
loopne
(bad)
add
sahf
mov
repz
sbb
call
sbb
in
pusha
enter
push
mov
popa
loope
or
ins
inc
lea
arpl
adc
loopne
cwd
xor
pop
loope
or
jo
jge
mov
mov
pop
dec
lods
imul
inc
ret
bound
adc
and
(bad)
jbe
clc
dec
daa
aaa
cmp
stos
jne
pop
push
mov
fidiv
jmp
jecxz
inc
add
imul
pop
add
add
inc
call
adc
aam
sti
imul
push
sbb
dec
or
mov
adc
xchg
cmp
mov
xchg
das
jge
pop
ins
fisub
or
and
test
push
aas
dec
lea
xor
dec
in
push
sub
nop
dec
sahf
cmp
and
and
inc
in
cwde
outs
fwait
or
in
loope
jmp
shl
add
or
es
xor
clc
les
mov
jecxz
out
out
je
repz
and
push
add
jmp
enter
dec
ins
ror
out
in
pusha
popa
cdq
xor
and
adc
pop
rcr
adc
ret
xor
arpl
adc
scas
xor
lock
cs
fwait
fwait
and
xlat
add
jnp
fild
adc
in
xchg
dec
or
mov
adc
and
xchg
test
jo
in
gs
mov
popf
mov
stos
adc
mov
push
sbb
push
xchg
test
mov
call
data16
jo
add
mov
push
cwde
jno
sub
jne
mov
vmread
xchg
aas
cdq
sbb
lock
enter
cmp
xchg
push
sub
inc
or
dec
push
inc
ins
cmp
add
rcl
ds
pop
pusha
stc
or
jne
fimul
mov
xor
pop
mov
dec
pusha
mov
iret
(bad)
retf
gs
pop
pop
push
out
cld
fs
popa
jle
pop
push
push
push
das
sub
mov
sub
sar
ret
in
rcl
stos
push
mov
add
adc
(bad)
enter
les
sub
sub
and
das
std
pop
stos
(bad)
pop
push
add
es
mov
ja
xor
dec
xor
push
mov
jmp
es
cmp
and
cmp
(bad)
sbb
shl
add
xchg
test
push
sub
inc
das
nop
xor
and
fsubr
loop
sub
mov
lahf
cwde
jmp
mov
inc
fstp
adc
inc
jmp
add
push
out
xor
jb
add
jne
inc
dec
pop
push
retf
(bad)
mov
iret
inc
scas
cmc
ins
repz
cmps
lahf
dec
imul
jge
add
je
sub
or
js
in
xor
pop
dec
retf
or
cmp
cmp
add
jg
jnp
push
push
pop
sbb
loop
pop
les
jne
loop
cmp
and
push
and
mov
dec
hlt
adc
test
int
jg
imul
je
fadd
test
mov
jbe
(bad)
push
in
or
jmp
repnz
add
or
call
xor
mov
mov
pop
pushf
data16
(bad)
push
nop
xchg
sbb
jae
sbb
push
and
inc
fimul
pop
inc
pop
and
mov
adc
sub
and
and
jl
add
adc
add
pop
push
fsub
movs
xor
sbb
cmps
dec
and
loop
fisubr
or
(bad)
jle
imul
adc
fiadd
and
test
ret
inc
dec
test
fwait
mov
cmp
pop
call
(bad)
hlt
shr
add
adc
pop
lods
cwde
pop
fisub
mov
mov
push
test
call
dec
add
push
dec
enter
call
sbb
mov
repnz
dec
loopne
(bad)
dec
push
icebp
outs
xchg
add
cmp
call
(bad)
dec
mov
mov
sub
fmul
sub
nop
mov
inc
push
loopne
xchg
imul
sahf
cs
sub
push
or
xlat
push
sub
mov
jl
cmp
push
lods
shl
les
movs
sub
stos
mov
mov
xor
cmp
push
test
mov
jb
shl
mov
push
in
loop
or
mov
jns
std
rcl
ficom
mov
add
in
cmp
add
add
push
cdq
in
and
ins
push
jbe
cs
or
dec
push
fdiv
and
jne
mov
dec
rcr
loopne
in
in
sbb
push
in
xor
scas
push
mov
in
add
test
xchg
cld
jecxz
sbb
sub
ret
sbb
mov
add
dec
sub
or
lds
sahf
jle
or
xchg
fs
inc
sbb
adc
xchg
push
rcr
fwait
cwde
fld
loopne
add
cwde
pop
lods
cwde
jl
xor
clc
fld
push
adc
cmp
loopne
(bad)
fisttp
mov
inc
call
das
adc
or
jbe
fild
(bad)
mov
jmp
inc
movs
(bad)
or
adc
bound
imul
in
push
shl
add
mov
or
add
and
push
mul
mov
in
lds
mov
and
xchg
or
fadd
or
mov
mov
fstp
dec
xor
and
test
inc
xchg
pop
fstp
sar
add
scas
xchg
pop
inc
cmp
in
retf
xlat
jbe
mov
mov
les
fst
ret
pop
jmp
xor
sub
xor
pop
leave
jle
pop
loope
push
addr16
mov
adc
push
call
icebp
shl
ror
mov
mov
inc
xchg
outs
mov
je
inc
push
xchg
aam
and
pop
pop
or
(bad)
ret
movs
jmp
xchg
(bad)
pop
push
scas
data16
nop
neg
les
push
push
nop
and
dec
ja
test
cmp
call
idiv
jecxz
sub
xchg
push
fild
imul
or
lods
jno
in
push
stc
xchg
cmps
in
fadd
in
push
jo
pop
ret
jae
add
and
jg
sbb
and
pop
(bad)
retf
sub
in
inc
ret
push
arpl
xor
fwait
es
prefetch
ins
mov
pop
push
push
push
adc
or
push
inc
xor
mov
aam
jnp
fidiv
out
adc
or
xor
or
out
push
adc
fadd
ret
xor
mov
and
int3
sahf
mov
cwde
jle
inc
mov
dec
xchg
or
and
sbb
or
adc
adc
movs
add
(bad)
mov
loope
mov
cmc
pop
pop
ror
dec
add
pop
adc
das
jne
xchg
add
test
or
or
push
mov
test
loop
jno
or
adc
movs
dec
inc
test
push
fstp
cmc
jmp
jne
cld
push
push
stc
sbb
xor
adc
sub
mov
cmps
adc
pop
add
add
add
xor
and
push
(bad)
mov
mov
outs
mov
push
test
lock
adc
mov
sar
ins
pop
aad
test
cmps
and
add
push
push
add
xchg
jne
sub
lock
inc
mov
xchg
xlat
sub
neg
test
or
into
loopne
xchg
lock
rol
xchg
hlt
stc
jnp
loopne
xor
adc
mov
jb
dec
mov
or
pop
xor
adc
aam
out
lds
jno
xor
arpl
or
jl
imul
out
jne
dec
pop
or
adc
ja
sbb
popf
push
xor
ret
sub
pop
ins
inc
add
dec
rol
or
(bad)
xchg
test
movs
outs
xor
lods
add
jmp
dec
fiadd
and
loope
aaa
addr16
ja
cmp
mov
fst
fld
sbb
movs
test
sbb
cmc
xor
dec
sub
fucom
and
and
xor
cdq
mov
mov
xchg
lods
xor
xor
push
hlt
dec
mov
mov
retf
xchg
mov
mov
clc
shr
mov
pop
stos
inc
repnz
jo
pusha
add
or
push
and
cmp
jl
pop
or
fnsave
dec
mov
pop
out
add
or
test
sub
fld
add
jne
sub
mov
push
or
je
jnp
fs
out
or
mov
xchg
add
pop
add
jp
ror
inc
and
inc
cmp
cmp
lods
and
mov
cs
mov
push
jp
mov
adc
mov
lds
mov
in
in
or
adc
jg
jne
orps
cmp
je
bound
sbb
popa
jne
scas
comiss
fld
(bad)
jge
dec
das
mov
cmp
(bad)
or
sub
xor
sar
push
cmp
or
adc
scas
and
cld
pop
daa
or
aas
xchg
sub
pop
xchg
mov
pop
xchg
adc
or
js
jle
jns
pop
push
fld
jmp
xor
dec
mov
ror
(bad)
add
ret
sbb
dec
inc
and
mov
ds
mov
or
es
pmaddwd
retf
fwait
cmps
sahf
mov
jle
push
adc
jnp
(bad)
sbb
dec
call
cmp
mov
adc
pop
or
or
xchg
pop
pop
or
lds
pop
xchg
ja
stos
pop
dec
inc
pop
push
add
inc
push
cmp
pcmpgtw
add
cld
les
in
cmp
in
xlat
adc
int
shl
sahf
cmp
adc
arpl
in
push
lahf
or
push
add
sub
xchg
ret
jbe
test
pop
sbb
sbb
jecxz
xchg
inc
sbb
adc
xor
and
and
jno
ja
in
clc
mov
push
(bad)
cwde
inc
mov
xor
or
daa
sub
fiadd
cmp
or
pop
call
iret
push
aad
sbb
inc
and
icebp
and
mov
inc
xor
add
pop
push
gs
jmp
mov
dec
jno
adc
dec
jo
xchg
les
dec
push
adc
pop
ds
pop
sbb
dec
ret
or
(bad)
push
je
lods
or
xchg
sub
and
mov
pop
stc
mov
pop
je
push
daa
push
inc
cmp
cmp
mov
cdq
or
inc
and
mov
std
add
cmp
add
and
sbb
mov
sub
loopne
(bad)
xor
cdq
xor
movs
inc
mov
enter
add
popa
imul
adc
pop
mov
mov
mov
daa
sbb
push
sub
leave
pop
jae
pop
icebp
push
pop
in
daa
and
gs
pusha
sub
mov
inc
add
ins
xchg
sbb
retf
icebp
lahf
lea
(bad)
mov
mov
call
daa
add
scas
adc
push
xchg
push
sbb
push
sbb
out
or
cld
jg
movs
(bad)
mov
jmp
cmp
pop
add
pop
cmp
pop
sbb
stos
sub
jl
push
xor
and
loopne
sahf
sahf
and
in
add
jle
push
xchg
jbe
cmp
jne
add
pop
shr
add
push
dec
stc
test
xor
pop
pop
lea
mov
and
js
nop
or
add
mov
test
ret
test
jecxz
ins
cmc
pop
lea
mov
sbb
fsubr
and
pop
and
push
inc
inc
jmp
pop
push
xchg
mov
cmp
dec
sbb
adc
aam
fcom
aad
shl
adc
or
rcr
fcomp
dec
inc
sbb
outs
push
or
adc
call
jo
imul
mov
xor
xchg
dec
pop
and
pop
pop
push
pop
xchg
add
or
pop
push
jmp
retf
pop
inc
cmp
rcr
sub
xchg
dec
fs
sbb
loopne
arpl
arpl
ror
push
push
hlt
dec
loope
inc
xor
sbb
or
add
clc
inc
in
je
inc
mov
or
std
dec
xor
enter
jo
(bad)
jmp
cmp
movs
loopne
imul
fadd
call
fist
xlat
adc
sbb
or
out
lea
cld
ds
inc
cdq
jo
js
xlat
push
idiv
cmp
pop
adc
pop
ror
add
rcl
jmp
push
xchg
mov
call
mov
cmp
dec
add
pusha
push
test
bound
repz
pusha
sbb
inc
cmp
outs
pusha
adc
cld
pop
add
inc
dec
cmp
fbstp
loop
sub
add
or
add
xor
fistp
dec
sbb
inc
xchg
and
push
push
repnz
invd
imul
js
or
(bad)
out
xor
fsub
xor
ret
loopne
ja
sub
sub
arpl
loope
cmps
mov
sub
mov
sar
xchg
outs
adc
enter
lods
sbb
or
push
xchg
popa
loopne
xor
and
sbb
xor
pop
bound
test
leave
ficomp
out
push
jb
cmp
adc
jge
mov
test
xchg
xchg
cld
lock
ret
sbb
jmp
sub
xchg
icebp
invd
popa
push
enter
gs
js
add
imul
add
adc
fdiv
repnz
push
mov
int
(bad)
jno
pop
mov
or
push
test
ss
adc
popf
jmp
jl
outs
and
in
out
cmps
imul
and
pop
fucomp
jmp
push
sub
and
xchg
daa
popa
loopne
sbb
rcl
jb
ret
test
call
add
pop
or
mov
xchg
shl
xor
pop
or
lods
sub
push
(bad)
xchg
inc
lahf
mov
ret
sbb
frndint
xchg
or
movs
loop
add
cli
xor
test
cmp
push
inc
or
or
push
and
lahf
xor
mov
or
sbb
sbb
lods
push
mov
mov
mov
push
xchg
fs
mov
rol
and
mov
jle
sbb
loopne
lea
lahf
outs
or
rcl
pusha
dec
and
inc
or
outs
push
xchg
inc
cmp
inc
xor
lods
in
pop
and
or
cmp
xchg
push
dec
ret
mov
shr
ins
imul
pop
shr
sub
add
movs
je
fs
nop
popa
das
loope
jp
in
fst
rep
out
mov
arpl
(bad)
jb
inc
shl
icebp
lea
or
cs
js
dec
jmp
push
push
(bad)
push
add
push
mov
jl
mov
push
in
outs
loopne
mov
lds
in
or
cmps
cmc
jmp
jb
pop
enter
cli
cmp
sbb
push
pop
clc
jbe
cmp
cld
ins
mov
cmp
jbe
jecxz
xor
call
push
pusha
push
or
inc
sub
icebp
retf
mov
dec
loop
xor
jno
xchg
dec
pop
leave
aam
rcr
push
es
and
test
(bad)
jbe
lea
inc
enter
fisttp
jecxz
pop
push
ins
movs
popa
add
inc
ins
push
and
cmp
or
movs
rcl
and
mov
lods
and
add
and
lea
lods
test
aaa
or
jg
icebp
dec
push
xor
iret
xchg
mov
ja
call
sub
add
add
test
inc
add
mov
xchg
sahf
jb
nop
adc
mov
ss
aam
fmul
test
and
je
fild
ds
nop
or
or
and
scas
mov
ret
and
jl
inc
stos
or
movs
or
jmp
mov
jmp
or
or
mov
and
jne
and
add
or
je
add
or
add
or
or
nop
fimul
cmps
ins
and
or
(bad)
jnp
and
fsubr
push
xchg
mov
xchg
lea
inc
add
mov
add
mov
jge
fnstsw
imul
cli
test
sbb
adc
jnp
sub
dec
sbb
retf
and
fnsave
fmul
jl
xor
and
popa
cs
or
mov
mov
rol
mov
out
adc
je
sbb
fadd
icebp
retf
dec
div
cmp
(bad)
loopne
add
jbe
mov
adc
push
jne
jbe
add
(bad)
mov
sbb
leave
int3
jbe
mov
pop
and
cwde
push
dec
xlat
sub
out
mov
pop
cs
dec
and
je
out
jb
lods
enter
push
imul
dec
mov
in
dec
nop
xor
or
xchg
pop
and
sub
addr16
(bad)
pop
push
jno
(bad)
je
mov
mov
leave
inc
xchg
xor
js
push
mov
ret
dec
ret
cmp
je
pop
jo
xor
dec
pop
(bad)
ss
rcr
pusha
xchg
xchg
stos
lds
std
dec
push
xchg
fisttp
mov
cdq
daa
inc
shr
and
gs
jno
mov
add
stc
push
pop
test
inc
in
aad
pusha
jge
retf
push
test
(bad)
fcomp
push
clc
leave
lds
or
inc
leave
inc
pop
dec
push
or
ror
inc
fist
leave
inc
inc
push
xchg
sub
push
pop
xlat
push
(bad)
jnp
inc
stos
lea
push
adc
popa
inc
ror
or
add
es
lea
xchg
adc
xchg
push
aad
aas
push
and
clc
retf
xor
test
sbb
cmp
inc
sub
add
push
fist
cmp
in
sbb
lock
cmp
test
bound
div
mov
fist
hlt
mov
cmp
mov
push
ret
es
lock
ins
add
fisub
scas
adc
add
xchg
adc
or
cmp
cmp
in
dec
cmp
fs
cmp
or
test
dec
dec
and
cmp
fst
add
(bad)
mov
inc
add
mov
push
inc
in
adc
mov
cmp
arpl
jmp
xor
js
jp
xchg
test
in
dec
aam
clc
inc
or
movs
inc
outs
dec
(bad)
fcomp
test
arpl
xchg
rol
sbb
dec
cmp
repnz
popf
push
mov
add
call
xor
jg
outs
imul
dec
shl
mov
arpl
sub
inc
pusha
sbb
outs
push
fldenv
or
std
jns
shl
sbb
nop
add
lea
dec
adc
fcom
push
cmp
xchg
test
popf
pop
sbb
repnz
adc
and
repnz
and
inc
dec
and
sbb
or
jns
rol
xor
imul
in
xor
cmp
push
xchg
ja
test
(bad)
mov
mov
loopne
push
(bad)
or
xor
and
adc
jno
dec
push
inc
add
fmul
ss
push
and
and
aaa
mov
sub
xor
ret
cmp
popa
or
pop
or
adc
inc
and
loope
sbb
push
jp
push
call
pop
dec
fwait
pushw
adc
inc
xor
(bad)
push
gs
bound
cs
sub
imul
adc
pop
push
push
ror
lods
and
add
push
push
ss
aas
push
test
js
sub
adc
je
add
lea
ret
jb
pop
sbb
cmp
add
sbb
js
leave
and
cmps
mov
mov
aam
mov
jo
xor
int3
call
push
daa
push
jle
test
clc
imul
pusha
ret
or
fs
or
dec
jns
pop
jae
nop
pop
bnd
nop
sbb
and
in
dec
sbb
movs
inc
rol
pop
cmp
pop
int3
nop
push
lods
pop
cmp
add
adc
xchg
xor
jo
stos
and
and
cmp
mov
pop
push
mov
inc
push
add
ins
jno
jb
mov
adc
and
jb
fwait
push
sub
call
xor
in
movs
ins
not
mov
addr16
ins
mov
mov
push
push
scas
mov
dec
jecxz
fsubrp
pop
ins
cmp
adc
or
retf
loope
dec
popa
out
aaa
push
cmps
adc
cmp
dec
pop
loopne
out
cmp
push
mov
or
jnp
jg
into
sub
add
and
add
mov
nop
int
js
inc
test
dec
inc
add
mov
sbb
mov
add
fcomp
nop
add
xchg
sbb
xchg
int
mov
(bad)
sbb
in
int
cmp
mov
int
xchg
push
push
je
ss
adc
sbb
test
fst
pop
aas
ins
pop
adc
push
jp
xchg
pop
loopne
mov
adc
dec
pop
loope
mov
stc
and
push
adc
and
jb
repz
and
mov
inc
pop
dec
or
sub
and
sbb
mov
int3
cmps
mov
and
ds
rcl
enter
dec
dec
arpl
and
loope
add
stos
push
push
call
mov
or
inc
idiv
retf
vunpcklps
xor
aad
sbb
fwait
mov
rep
jbe
jne
lods
daa
test
and
arpl
xor
test
sub
sbb
jp
sbb
out
mov
add
inc
lea
add
repnz
sub
sbb
ss
adc
pusha
and
push
push
push
xchg
rcr
xchg
lods
xor
imul
mov
push
xor
xchg
fcomi
es
cmps
xchg
test
sub
je
dec
in
xor
sbb
test
jmp
pusha
adc
add
fcom
mov
lea
pop
(bad)
pushf
int3
dec
imul
inc
add
cmps
dec
ret
adc
xchg
mov
push
test
sub
sbb
je
aad
mov
pusha
pop
rcr
pop
cmp
jae
fist
arpl
or
push
or
sti
add
data16
jmp
add
cmp
adc
jl
das
pop
inc
xchg
iret
inc
or
push
nop
test
or
nop
dec
dec
sbb
pop
shr
ror
dec
push
and
(bad)
enter
iret
jl
cmp
jl
sub
push
and
pop
(bad)
mov
mov
dec
cwde
aam
or
jmp
sub
in
and
cmp
or
rol
xchg
xchg
rcl
and
inc
lds
cli
adc
jmp
mov
js
aam
push
and
iret
mov
inc
leave
add
repnz
push
mov
enter
fsubrp
movs
int3
cmp
pop
inc
xchg
mov
rcr
cmps
lahf
and
bound
jmp
sub
jne
(bad)
(bad)
loop
pusha
add
ret
in
les
add
int
loope
ret
ja
js
xor
rcr
mov
mov
sub
fdivr
cmp
clc
push
xchg
or
and
jbe
push
rol
jg
fiadd
sar
adc
inc
inc
inc
xor
aaa
jnp
adc
mov
jmp
inc
ret
mov
and
mov
cmp
sub
mov
repz
mov
jp
push
imul
imul
pop
inc
cmp
mov
lds
lea
aas
and
cmp
mov
mov
jmp
not
and
jecxz
or
push
and
push
cmp
sbb
stos
hlt
cmp
jge
test
sub
xchg
ss
sbb
inc
(bad)
pop
mov
mov
dec
jbe
cmp
into
loope
rcl
lds
jmp
dec
pop
push
jnp
loope
pusha
sub
lea
pusha
jo
loopne
jne
loope
xchg
xor
stos
sti
repnz
lds
mov
adc
or
push
pop
ins
pop
sbb
add
mov
pushf
add
push
jl
dec
inc
jecxz
in
bound
lea
dec
pop
jp
lods
cmp
cs
pop
ja
add
scas
mov
jmp
or
push
(bad)
push
cmp
and
and
repz
adc
jg
adc
je
sub
je
fs
jne
mov
sbb
pop
or
add
inc
adc
push
add
push
push
xor
pop
jle
jne
sub
icebp
xchg
jmp
push
adc
mov
mov
pop
mov
and
cmp
sahf
sbb
lods
jle
lea
inc
cmp
sti
inc
add
sti
and
push
(bad)
stos
xchg
jp
cmc
lock
aad
in
add
enter
and
js
push
sbb
pop
mov
push
pusha
sti
je
inc
scas
add
mov
iret
jl
mov
retf
sar
cmp
xchg
mov
inc
dec
or
fs
add
rol
fcom
pop
(bad)
cmps
jno
xor
fild
sub
adc
aas
mov
lods
pop
dec
xchg
cmps
jo
inc
arpl
mov
out
adc
jo
dec
xor
lahf
add
pop
or
or
xchg
push
loopne
add
mov
mov
xchg
dec
test
stc
rcl
add
popa
dec
outs
push
imul
adc
cmp
jge
push
pushf
push
push
shl
sbb
sub
jbe
mov
ret
retf
cmp
fidiv
ja
mov
ds
inc
or
call
add
hlt
loop
ret
inc
dec
add
push
inc
outs
dec
dec
sbb
jge
add
mov
adc
cdq
jp
jno
js
jl
mov
jmp
retf
pushf
dec
popa
sar
or
pop
mov
les
lahf
inc
or
xor
cmp
sbb
push
pop
xchg
push
push
shl
cs
pop
shr
js
or
jl
inc
jle
movs
pop
test
sbb
mov
push
daa
rol
shl
loopne
adc
push
adc
mov
cmp
scas
test
push
sar
jmp
ror
fbstp
push
in
or
call
mov
lea
mov
sub
push
in
nop
inc
enter
and
nop
dec
int3
sub
xor
adc
fnstenv
call
aad
in
push
push
or
inc
rol
push
xchg
sbb
inc
test
ret
or
inc
mov
pop
ficomp
add
mov
ret
inc
rcl
imul
mov
mov
or
call
xchg
pusha
xchg
retf
pop
pop
or
or
mov
adc
imul
in
pusha
xchg
mov
rcl
or
cmp
mov
push
das
mov
jne
sub
push
jbe
clc
in
jl
pushf
push
je
or
push
inc
pop
or
es
xchg
sahf
or
(bad)
enterw
in
shr
in
loope
(bad)
xor
push
loop
mov
push
frstor
mov
pop
mov
adc
cmp
jbe
mov
inc
pop
cld
sbb
pusha
mov
sbb
pop
sbb
jle
push
(bad)
mov
ficom
rcr
in
std
rcl
test
popa
xchg
mov
inc
and
and
push
inc
imul
aad
in
shr
fdiv
push
les
sahf
aam
fld
movs
pop
clc
mov
dec
mov
pop
dec
sub
or
ins
(bad)
movs
mov
and
in
add
call
jno
(bad)
movs
mov
lods
jle
mov
addr16
sub
xor
sub
mul
sbb
dec
adc
test
xchg
mov
push
cmp
xchg
aam
inc
jle
data16
fist
xchg
aam
dec
stos
xchg
and
ins
(bad)
and
rcr
xchg
pushf
loop
add
and
test
je
xchg
sbb
jae
mov
push
jo
imul
mov
dec
fs
sbb
and
add
or
and
mov
dec
rcl
add
and
push
xchg
dec
push
bound
test
mov
in
sbb
pusha
inc
test
jl
test
dec
mov
int
fist
aas
add
xchg
inc
adc
mov
push
push
imul
mov
pusha
and
and
outs
or
xchg
adc
ret
(bad)
cmp
test
xlat
push
je
jns
dec
push
adc
or
pop
sahf
retf
dec
adc
sbb
cmp
out
adc
and
xchg
cmps
repnz
and
sub
pushf
js
pop
stc
jecxz
js
push
aam
pop
loop
mov
dec
(bad)
daa
and
sbb
in
inc
inc
add
jecxz
mov
repz
fimul
mov
or
cmc
push
daa
jecxz
mov
or
aam
mov
cmp
mov
jo
and
int
push
int
sub
outs
shl
mov
(bad)
or
mov
in
repz
mov
jb
add
loopne
dec
aad
push
sbb
loope
clc
inc
jmp
pop
mov
shr
aam
enter
out
inc
ins
test
(bad)
outs
dec
pavgw
push
jo
inc
push
xor
mov
nop
in
enter
fist
mov
add
cmp
aam
push
cmp
in
pop
add
pop
je
xchg
push
pushf
sbb
add
sub
push
mov
sub
dec
jl
popa
xchg
sbb
shr
xor
in
ret
lea
cmp
push
or
ror
mov
and
icebp
stc
je
rcr
imul
inc
inc
leave
sub
fsubr
rcl
cmp
aas
xchg
pop
dec
push
add
xchg
mov
and
xlat
ret
and
pop
fucom
repz
or
sahf
nop
dec
mov
jge
inc
lods
xor
iret
(bad)
imul
sbb
mov
jae
mov
cmp
cdq
sbb
xor
xor
xchg
fmul
arpl
add
push
pop
jle
inc
or
jbe
les
cld
jle
imul
mov
xchg
mov
push
mov
mov
push
(bad)
adc
adc
xor
pop
lds
push
ss
and
sti
popa
xor
mov
or
leave
inc
and
jp
sar
push
stos
ins
ret
inc
adc
add
xchg
test
jl
mov
mov
push
add
add
mov
inc
add
lods
pop
js
inc
pop
pop
loope
xor
dec
push
sbb
daa
jmp
mov
pop
sub
retf
inc
inc
popa
ins
call
mov
call
clc
push
cmp
inc
add
sbb
and
sar
add
call
dec
mov
jne
adc
xor
xchg
data16
dec
or
ja
lock
add
fisubr
shl
sub
pop
pop
or
pop
adc
sbb
jne
push
cmovb
jnp
int3
adc
fdiv
sub
push
push
mov
add
lods
cmps
sbb
pushw
inc
and
int
imul
(bad)
sbb
cdq
aad
mov
pop
shr
dec
mov
xor
out
and
vunpcklps
jmp
popa
add
shl
add
add
inc
repnz
sets
fadd
movs
sub
inc
sbb
xchg
pusha
push
fs
or
xchg
inc
imul
stc
cmp
hlt
and
xchg
jne
mov
sbb
inc
cdq
dec
es
sub
jbe
inc
enter
push
sbb
dec
dec
out
dec
dec
sbb
mov
cmp
mov
or
push
pop
mov
and
inc
xor
add
lds
or
mov
add
xor
loopne
mov
adc
sbb
dec
movs
pop
ins
xor
dec
pop
sub
pop
pop
enter
shl
mov
xchg
test
ins
pop
add
add
jl
xor
add
lea
push
jmp
jbe
cmp
or
inc
(bad)
and
call
stc
jno
call
shl
adc
not
test
push
fdiv
add
jbe
mov
or
sti
test
add
sub
test
sub
(bad)
nop
push
inc
jae
daa
push
mov
shl
push
popa
movs
mov
jmp
sub
shr
or
dec
xchg
adc
js
and
test
dec
cmp
pop
pusha
adc
lock
pop
mov
mov
inc
retf
jo
or
cmp
ds
jmp
inc
dec
push
cld
add
leave
sbb
imul
out
ficom
mov
inc
xor
clc
ret
add
and
add
adc
mov
sub
jnp
jo
cmp
cs
(bad)
imul
dec
cmp
mov
retf
xchg
ds
dec
sar
mov
cwde
std
cmps
push
(bad)
lea
pop
xor
adc
jnp
xor
sub
push
cmp
movs
shr
popa
lods
arpl
cmps
xor
mov
push
push
retf
imul
out
push
ds
or
xor
add
pop
test
out
dec
cmp
mov
push
test
push
dec
adc
push
dec
cmp
pop
leave
mov
test
fsubr
add
push
mov
jns
mov
jmp
cmp
lahf
push
out
dec
cmp
mov
in
pop
(bad)
xchg
jmp
imul
push
pusha
test
add
pop
fistp
sbb
(bad)
icebp
jne
push
mov
jmp
lea
cmp
scas
inc
or
loopne
in
into
add
shl
(bad)
inc
loopne
lea
mov
mov
mulps
mov
pop
jecxz
fdivr
loope
shr
push
xchg
mov
lock
adc
adc
adc
sbb
clc
xlat
cmp
xor
das
push
retf
add
cmp
jnp
sub
test
stc
adc
or
mov
fs
pushf
mov
lods
xor
or
dec
ror
pop
sub
sbb
mov
push
or
xchg
push
lods
or
ret
pushw
call
push
adc
adc
hlt
pop
shl
out
inc
adc
sbb
sbb
data16
add
mov
push
daa
sub
int
or
add
mov
sbb
add
or
fdiv
bound
push
ins
add
pop
sbb
sub
rol
push
imul
fild
fild
repz
xchg
fidivr
inc
mov
jge
jp
cmps
test
or
or
mov
add
iret
inc
and
or
rcl
inc
bound
mov
pop
jne
shl
push
int3
push
inc
inc
cmp
jb
add
daa
push
add
push
sbb
imul
cld
lahf
mov
add
(bad)
inc
jb
sbb
and
xchg
int3
ret
cmp
or
inc
test
dec
int
test
inc
or
or
fsub
xor
ja
adc
inc
ins
mov
cld
ins
add
sbb
cmp
push
dec
jl
mov
dec
dec
ror
ins
ss
mov
movs
push
sub
jne
add
ror
out
js
pop
sub
loope
movs
pop
cwde
xor
mul
add
or
sub
pusha
sub
sub
daa
imul
pop
shl
ja
xchg
test
pushf
hlt
adc
push
or
push
xor
mov
or
xor
adc
fsubr
sub
add
cmps
add
fiadd
xor
push
jo
fs
dec
push
adc
cmp
sbb
pop
movs
pop
push
lods
and
and
aaa
inc
rcl
enter
fwait
add
test
cmp
and
xchg
jne
loope
push
adc
loop
leave
mov
jecxz
cmp
mov
jne
inc
jmp
lock
clc
jmp
in
push
fldenv
mov
or
in
jmp
test
adc
js
add
mov
inc
xchg
or
ss
adc
mov
test
sbb
ja
cmp
shl
sub
es
and
ret
push
xchg
mov
adc
cmp
shr
mov
jecxz
mov
movs
xor
(bad)
xchg
mov
and
call
popf
xor
lods
pop
loope
inc
pop
dec
lods
pop
jmp
and
stos
sbb
retf
push
jl
fmul
push
pop
mov
pop
jge
cs
ror
and
fcom
xchg
xor
sbb
push
test
in
loop
push
mov
bound
xchg
sbb
pop
repnz
xor
pop
cmp
ins
pop
sbb
aam
jne
push
fcmovnb
jle
dec
jge
mov
fmul
push
cmp
jge
mov
out
and
fadd
jmp
adc
outs
add
ror
adc
bound
pusha
into
lods
fsub
add
adc
sub
shl
inc
call
push
movs
xor
sbb
adc
nop
sbb
dec
or
xor
les
fisttp
pusha
in
ins
das
inc
mov
push
mov
ds
dec
sbb
mov
mov
and
xchg
push
call
cmps
or
push
in
mov
ret
mov
push
cmp
jb
ror
in
(bad)
xor
inc
bound
test
retf
ret
popa
imul
xor
hlt
fist
test
(bad)
std
sub
sub
add
adc
stos
retf
mov
jl
push
adc
xchg
stos
inc
mov
push
imul
push
add
add
add
sbb
pop
xchg
jbe
push
push
arpl
dec
cmp
dec
loopne
test
pushf
xor
xor
pop
int
add
or
call
push
in
adc
push
imul
int
les
cmp
add
or
dec
xchg
xor
cwde
test
mov
push
(bad)
and
mov
sbb
dec
imul
test
adc
ret
sahf
cwde
(bad)
fdivp
or
cmp
or
lods
jae
jmp
and
sbb
ss
and
and
rcl
jne
adc
sahf
mov
(bad)
xchg
and
and
call
adc
xlat
inc
or
dec
cmp
sti
sbb
(bad)
repnz
aaa
jns
rcr
add
inc
test
pop
rcr
add
inc
mov
sub
popa
jmp
loop
push
add
and
xchg
inc
push
lea
ret
inc
push
push
push
sbb
inc
ins
mov
mov
sub
test
mov
push
mov
push
and
xor
jo
rol
and
fisttp
sub
inc
jg
addr16
rol
or
jge
mov
call
and
lea
sbb
jmp
movs
add
jmp
inc
fst
pop
pushf
adc
cmp
or
adc
or
inc
cwde
cmp
jle
ins
inc
cmp
lea
add
lsl
add
rol
mov
add
xchg
pop
pop
ins
sub
add
aas
dec
add
adc
sub
or
xor
jmp
iret
pop
jp
aam
sar
test
fistp
jne
pop
jmp
sbb
add
push
xor
repz
call
gs
adc
mov
mov
je
fistp
sub
stos
call
sbb
add
jge
xor
sbb
cmp
bound
jne
icebp
adc
pop
bound
jne
repz
fsubr
xchg
pop
or
push
je
ins
and
les
arpl
dec
popa
adc
arpl
push
push
dec
or
jmp
mov
je
rol
retf
jne
repz
aaa
sbb
bound
add
xor
pop
inc
cld
xor
mov
add
pop
ror
arpl
daa
mov
mov
out
(bad)
sub
iret
aad
or
push
and
pop
xor
call
div
and
inc
add
in
mov
and
mov
inc
add
add
jae
xchg
in
arpl
sbb
ror
sub
push
add
and
jmp
cs
add
add
push
pop
adc
kmovw
xchg
cmp
mov
and
mov
dec
cmp
push
inc
test
stos
pop
add
cmp
jne
jmp
call
push
push
lods
fst
mov
push
jb
add
into
cwde
and
cmp
pusha
lea
push
test
sbb
or
cmc
push
shr
push
mov
xchg
shr
or
jb
lock
mov
jmp
push
mov
pop
inc
push
push
pop
pop
leave
add
enter
(bad)
cmp
js
ins
sbb
shl
jo
retf
or
and
or
pop
mov
and
jae
or
mov
or
jmp
stos
mov
jo
arpl
shr
out
dec
adc
push
push
adc
inc
inc
je
das
pop
xchg
and
and
xor
clc
jbe
imul
daa
dec
xlat
enter
inc
sbb
inc
cmp
lods
in
aam
and
cdq
es
repz
cmp
sbb
and
xchg
loopne
gs
xchg
jns
dec
mov
add
fincstp
xchg
jb
ret
les
add
ret
jle
bound
jmp
xor
in
or
adc
jmp
or
cli
sbb
scas
mov
cmp
inc
das
frstor
adc
mul
imul
scas
loopne
imul
pop
dec
mov
sub
mov
jne
pop
inc
add
or
ror
or
retf
or
pop
and
xchg
jbe
adc
push
dec
jle
retf
and
xchg
cmp
push
jne
idiv
jg
gs
and
mov
imul
adc
je
ins
test
pop
push
push
(bad)
les
dec
fild
fldcw
push
sti
jge
mov
push
jns
scas
xor
lahf
xor
aam
(bad)
and
or
push
inc
push
push
mov
aas
sbb
xor
or
ret
js
mov
sbb
adc
add
dec
add
mov
das
jne
pop
data16
sbb
les
pop
rep
inc
jb
jnp
aad
add
dec
push
adc
aaa
rcr
adc
cmc
xor
and
cmp
or
xor
stos
bts
or
std
or
js
(bad)
sbb
ja
fmul
xchg
sub
stos
dec
or
xor
add
stc
call
nop
(bad)
xchg
test
cmp
jl
cwde
fadd
inc
shr
jno
ins
sbb
lods
dec
push
cmp
jb
pop
sbb
test
cmps
jb
inc
cmp
fiadd
aam
pop
cmp
mov
inc
pop
sbb
lods
xchg
dec
or
inc
xchg
movs
push
cmp
push
mov
popa
dec
pop
or
mov
mov
or
adc
cmp
xor
cmp
ja
rcr
(bad)
call
or
jne
je
(bad)
fnsave
cmp
push
and
pushaw
sub
pop
leave
pop
adc
leave
inc
mov
cmp
adc
push
add
call
lock
jo
jbe
pop
add
movs
es
mov
cmp
test
inc
aam
add
gs
cmp
xchg
icebp
fsubr
cmp
mov
lods
jb
aas
cmovns
and
inc
mov
or
test
mov
aad
(bad)
push
and
adc
pop
adc
add
sub
les
retf
xor
lock
xor
iret
adc
add
imul
jp
adc
jmp
push
or
sbb
jl
mov
or
rol
and
dec
ror
add
call
aaa
test
pop
dec
adc
jne
and
ret
inc
mov
push
cmp
xor
int3
add
mov
inc
pushf
retf
and
adc
push
lea
or
mov
loopne
cld
adc
cmp
test
es
or
jp
fisttp
or
add
adc
adc
push
jo
push
sub
dec
cmp
mov
(bad)
jb
mov
(bad)
aaa
scas
fisub
adc
or
cdq
add
cdq
dec
test
scas
dec
popa
je
loop
adc
call
pop
test
xchg
in
mov
sbb
ss
mov
pusha
cmp
mov
xchg
clc
dec
mov
push
popf
and
push
push
add
inc
add
xchg
scas
adc
movs
push
dec
cmp
enter
jge
dec
aam
xor
loopne
ret
jno
sbb
or
jmp
push
xor
mov
js
pavgb
in
pusha
jo
fst
xchg
sbb
cmp
jl
cs
bnd
sub
pop
enter
test
push
mov
rol
jmp
mov
and
sub
jg
das
xor
or
ds
jnp
jns
pop
adc
or
imul
lods
or
pop
sbb
or
xchg
push
pop
adc
popf
pusha
mov
dec
int3
or
or
mov
add
cmps
mov
adc
push
xor
jmp
jnp
add
xlat
shl
mov
push
js
mov
clc
dec
push
pop
cmp
jmp
sub
sbb
mov
fwait
loope
pop
lahf
mov
pop
es
(bad)
lock
pop
sub
mov
stc
ret
sahf
mov
ja
or
cmp
fucomp
mov
mov
push
and
icebp
add
sub
or
gs
adc
mov
pop
in
clc
or
xchg
push
push
mov
cmp
pop
aam
movs
test
adc
fcom
test
stos
ss
add
inc
xchg
test
xor
call
lahf
bound
mov
stc
addr16
sbb
movs
loop
test
rcl
adc
add
dec
imul
jb
aam
inc
sub
cmp
int
push
cmp
ret
cmp
mov
lock
movzx
inc
std
ins
cmp
or
adc
cmc
pop
cmc
xchg
xchg
lock
inc
ret
inc
adc
jmp
sbb
jp
arpl
imul
xor
cmps
mov
adc
jle
lea
cmp
push
sbb
pushf
ins
cs
addr16
dec
sub
mov
inc
xor
retf
cmp
push
or
cmps
add
dec
xor
inc
ret
dec
push
dec
cmp
test
(bad)
or
dec
jo
ret
jbe
fisttp
add
dec
pop
cdq
xlat
aam
movs
out
retf
push
icebp
inc
sbb
jnp
inc
push
fdivr
xchg
lahf
add
xor
popf
test
lods
mov
mov
inc
(bad)
jne
and
(bad)
add
dec
jbe
test
lods
add
or
scas
adc
sbb
xchg
movs
jns
loop
xchg
in
dec
dec
jo
arpl
ins
mov
xor
mov
movs
add
and
mov
xor
adc
mov
cmp
inc
enter
sbb
inc
dec
add
(bad)
or
loop
xchg
fist
into
fimul
dec
(bad)
rcl
jne
test
sti
cdq
mov
addr16
imul
adc
jmp
mov
xchg
in
shl
call
xchg
xor
mov
push
cs
into
arpl
dec
repz
icebp
imul
and
add
mov
cmp
jge
popa
outs
int3
rcr
iret
add
imul
or
lods
mov
lds
aas
mov
ja
and
in
in
enter
jne
(bad)
ins
hlt
mov
pop
pop
icebp
js
aad
shl
and
jnp
xlat
sti
inc
fst
and
push
into
adc
jne
and
pop
sub
lods
std
xor
stos
movs
or
adc
mov
(bad)
cmp
mov
pop
sahf
or
imul
mov
sbb
pop
sar
add
lock
pop
push
xchg
mov
inc
inc
jbe
sub
xor
bound
add
lahf
(bad)
pop
mov
xchg
fstp
fs
sbb
add
retf
cmp
or
je
(bad)
(bad)
jmp
hlt
sbb
dec
and
ds
xor
push
ret
dec
inc
jmp
push
xor
pop
ss
push
add
out
add
mov
(bad)
retf
pop
mov
inc
rol
test
sbb
jne
mov
adc
xchg
cdq
bound
or
add
xor
xor
xchg
pop
fwait
push
lea
push
push
jl
add
and
push
das
test
and
xor
movs
xlat
sub
xchg
cmp
and
and
inc
leave
mov
sar
mov
and
mov
mov
push
adc
push
retf
fadd
dec
sbb
dec
sub
pusha
sbb
(bad)
into
xor
cmps
xor
cs
lock
mov
add
es
daa
push
sbb
fsubr
loope
movs
and
stos
lea
jmp
inc
xor
call
mov
je
push
nop
jae
fistp
push
mov
test
xor
imul
stos
cmc
out
rcr
and
mov
in
inc
shr
ror
mov
lock
jbe
repz
jp
jecxz
sbb
adc
pop
pop
call
nop
mov
inc
add
pop
sbb
sbb
or
popf
nop
loope
pop
pop
sub
mov
adc
rol
or
popa
mov
mov
fist
mov
xchg
lock
ret
fisttp
pop
ret
int
cmp
adc
das
jmp
ret
inc
iret
jl
js
add
mov
add
and
scas
and
jmp
lock
fisttp
push
inc
mov
int
enter
or
call
jae
dec
xor
dec
sbb
xchg
or
mov
add
sub
je
and
(bad)
int3
jl
ror
push
das
pusha
sbb
add
call
jle
jmp
xor
add
adc
shl
loop
les
jmp
add
imul
ret
loope
fisttp
cmp
adc
popf
loope
aad
push
xor
dec
sbb
mov
aad
xor
mov
test
add
movs
mov
ret
and
rcl
or
or
push
adc
push
jae
mov
pusha
leave
push
add
and
xor
cli
xchg
sub
jmp
mov
mov
xchg
mov
sbb
and
scas
lea
push
(bad)
enter
sbb
iret
enter
sbb
jae
pusha
adc
push
out
jmp
test
or
xor
add
inc
sub
xor
add
push
or
sbb
js
jmp
jb
loope
cmp
mov
lea
mov
mov
not
lock
jnp
(bad)
pop
nop
xor
adc
adc
rol
push
mov
dec
jae
mov
dec
adc
fadd
xor
and
sub
pop
jae
dec
lods
and
jno
test
sub
push
or
or
sub
stos
add
(bad)
inc
add
clc
mov
adc
inc
push
cld
inc
(bad)
mov
pusha
pop
xchg
loope
pop
nop
icebp
adc
mov
(bad)
sbb
lock
mov
or
xchg
inc
cmps
xor
rcr
mov
mov
sub
outs
inc
sub
push
icebp
add
daa
cmps
shr
jmp
xor
hlt
adc
fwait
adc
cmp
jg
add
test
push
mov
push
sbb
sbb
sbb
and
fs
ins
add
rol
test
clc
push
enter
dec
adc
push
sahf
xchg
loope
cmp
movs
cmp
pushf
cs
or
xchg
cmp
fisubr
sbb
retfw
nop
and
jne
cmps
daa
push
stos
daa
and
pop
or
ins
adc
add
push
push
in
sbb
pop
ja
clc
push
sub
and
push
and
add
sub
fiadd
xchg
push
(bad)
xor
pusha
imul
popa
mov
hlt
popa
push
add
jmp
adc
mov
loopne
lods
ss
lods
pop
hlt
sbb
pop
and
xor
in
jmp
push
inc
lock
and
leave
and
dec
nop
movs
loope
dec
and
clc
adc
inc
dec
push
(bad)
loopne
inc
pop
push
les
mov
arpl
xlat
and
add
ret
je
pusha
push
stc
jae
or
push
mov
(bad)
cmp
xor
jnp
es
add
or
das
add
adc
adc
enter
push
inc
loope
push
imul
inc
and
mov
sub
or
test
pop
jle
add
ins
daa
inc
das
or
add
dec
shl
mov
arpl
jecxz
movs
cmps
sub
mov
mov
shl
mov
and
cdq
aam
aam
lods
jl
xor
and
(bad)
jmp
adc
xor
ret
pop
div
daa
test
sub
retf
cmc
je
add
xchg
sbb
xor
push
add
cmp
les
sbb
ret
add
fcom
shl
div
adc
vpmacswd
outs
sub
lahf
jmp
and
and
popf
pusha
lods
pop
mov
inc
gs
pop
daa
and
mov
cvtps2pd
mov
add
sbb
xchg
add
in
sub
retf
mov
and
test
popa
mov
fisttp
sub
push
mov
or
xchg
cmp
or
push
cdq
and
in
jl
ss
nop
mov
pop
xor
jle
push
arpl
inc
std
push
fisubr
adc
fnstenv
in
pop
add
out
pop
xchg
ret
sbb
test
ret
push
inc
dec
imul
or
shl
add
das
add
add
dec
xchg
cld
ins
dec
imul
pushf
cmps
add
clc
add
(bad)
shl
mov
ins
sbb
or
adc
xchg
mov
and
cdq
inc
push
xor
jmp
div
mov
cmp
je
cmp
fdivr
mov
out
mov
daa
mov
or
loopne
xor
add
sub
push
pop
ja
xor
sbb
cmp
mov
add
mov
adc
push
xchg
pushf
rol
hlt
repnz
in
jo
arpl
shr
jl
xor
add
cmp
pop
jmp
jmp
push
xchg
and
add
mov
in
add
retf
mov
dec
test
push
sub
int3
xor
adc
imul
cmc
push
sbb
shl
mov
pop
push
imul
(bad)
inc
aam
push
or
je
jne
imul
fs
fiadd
inc
push
and
cmc
in
xchg
(bad)
pop
push
xor
add
dec
ins
pop
inc
jmp
cmp
jb
mov
div
inc
inc
loopne
pop
clc
daa
imul
or
pop
jne
or
test
bound
dec
pop
retf
cmp
push
stc
and
inc
push
inc
test
lahf
or
and
pop
cwde
clc
add
inc
in
push
push
ret
rcl
adc
les
or
and
and
or
dec
ret
pop
jne
xor
fdiv
add
dec
xchg
dec
sub
push
out
push
xor
add
das
sbb
ja
sub
pop
push
popa
mov
stos
adc
and
inc
xchg
adc
js
icebp
ret
ja
push
call
jmp
in
sub
inc
dec
mov
add
or
scas
add
gs
dec
add
jnp
icebp
fcomp
or
mov
xor
or
and
xchg
repz
push
inc
dec
pop
dec
sbb
aad
int
dec
or
add
lea
popa
push
cs
adc
pushf
xchg
push
pushf
mov
mov
mov
cmp
loopne
mov
rcl
call
xchg
adc
cmp
repnz
pushf
cmp
and
test
cmp
popf
sbb
lea
test
push
fwait
aam
pusha
in
retf
jmp
adc
stos
and
or
push
cmps
or
add
ret
cmp
pop
mov
rcr
or
add
mov
mov
push
adc
stos
mov
loopne
cs
mov
mov
mov
cmps
or
inc
and
xor
jno
ss
sar
call
mov
sbb
loopne
push
adc
xor
aam
inc
sbb
bound
clc
sub
and
(bad)
mov
dec
dec
cwde
and
jno
mov
lock
xchg
cmp
push
push
pusha
and
lock
adc
sub
adc
push
outs
imul
and
inc
adc
add
aaa
adc
das
and
inc
mov
or
rcr
adc
and
mov
mov
scas
cmp
mov
or
jmp
add
data16
xchg
mov
enter
add
push
push
cmp
mov
or
cmp
or
rcl
and
push
fwait
cmp
shl
mov
(bad)
pop
mov
pop
mov
imul
call
(bad)
ret
push
adc
adc
addr16
fcomp
jo
je
into
add
imul
and
mov
lock
test
dec
cmps
adc
push
cld
inc
inc
or
xor
inc
jo
jo
pop
pop
dec
mov
jecxz
jp
sub
jmp
or
in
ds
add
mov
jne
mov
and
sahf
and
push
dec
clc
fbstp
jne
lea
sub
fs
push
dec
jecxz
shr
or
in
xor
lock
dec
ret
fist
shl
movs
mov
int
mov
lods
mov
jmp
inc
sub
push
call
mov
cs
jecxz
and
mov
aaa
adc
pop
cs
retf
imul
or
scas
sub
sub
lock
cdq
xchg
xor
icebp
pusha
dec
lock
mov
retf
hlt
loop
sbb
mov
adc
sub
xchg
cld
jne
xchg
mov
pop
leave
movs
adc
sub
rcr
ds
ret
cmp
mov
lahf
sub
mov
fdiv
in
jge
in
(bad)
fmul
sub
lods
cld
icebp
and
or
shl
xor
dec
pop
imul
mov
sub
jle
mul
pop
jno
je
in
mov
or
ja
adc
pop
xchg
xchg
fst
or
push
and
xor
imul
add
sub
fisttp
test
test
iret
xchg
fimul
or
ja
xchg
jo
rol
or
or
ins
cmps
(bad)
mov
ret
or
inc
mov
push
sysexit
clc
fidiv
rcl
(bad)
or
push
jo
sub
jns
add
jne
inc
push
jo
jle
mov
mov
or
and
dec
push
imul
push
les
jbe
sub
pusha
jg
push
cmp
je
jnp
ds
inc
test
xor
leave
aaa
mov
add
inc
xor
push
push
push
pop
and
test
(bad)
inc
push
pushf
cmp
jne
pop
pop
mov
std
adc
adc
adc
test
outs
test
mov
cmp
into
push
and
adc
jno
mov
jae
or
les
cmovo
jg
jmp
or
jo
cmp
cmp
jmp
aaa
xchg
into
push
in
popf
push
jmp
mov
adc
xchg
adc
mov
cs
or
push
scas
cmp
jbe
or
push
inc
das
clc
retf
xor
mov
ins
mov
lods
push
into
mov
das
test
outs
dec
xor
mov
xor
pop
(bad)
xor
int3
sub
cmp
mov
ret
mov
gs
rcl
mov
push
xchg
cld
fiadd
or
inc
and
xor
cmp
or
push
mov
les
add
in
jl
ror
adc
cmp
rcr
xchg
push
inc
ds
xor
(bad)
popa
outs
enter
iret
xor
mov
les
inc
mov
outs
mov
(bad)
adc
mov
and
stos
lods
lods
add
sahf
test
or
lock
test
int3
dec
pop
repnz
in
mov
outs
mov
cmp
jo
rcl
sbb
adc
loopne
sub
and
das
push
xor
adc
add
adc
or
(bad)
mov
or
or
clc
and
cli
add
or
jle
cmps
cli
inc
jo
jg
push
sti
mov
shl
pop
mov
xor
or
movs
adc
adc
ret
pop
retf
push
lods
mov
add
hlt
mov
xor
sbb
test
add
aad
pusha
(bad)
lods
sub
push
push
dec
adc
mov
add
test
scas
lods
lods
pop
popf
clc
movs
(bad)
data16
data16
sub
cld
mov
push
lea
cwde
leave
pushf
retf
jecxz
rol
dec
mov
test
add
jg
ins
arpl
xor
push
cmps
lods
lock
jo
sbb
imul
les
mov
mov
cli
into
mov
inc
add
ret
test
jecxz
add
push
fimul
cld
xchg
inc
cmps
lods
mov
loope
mov
dec
cmp
dec
push
pushf
sub
xchg
dec
sbb
lods
jbe
add
mov
or
sub
fsub
jnp
pusha
push
jmp
adc
and
test
jmp
int
mov
fcmovb
mov
dec
loop
cmp
jmp
jnp
in
push
pusha
adc
push
mov
dec
push
pushw
pusha
lea
ror
jnp
fiadd
pop
add
or
movs
pop
lea
(bad)
inc
mov
clc
add
icebp
lods
jb
or
lods
and
inc
ja
or
cld
dec
adc
in
jo
lock
and
lea
xor
mov
push
sub
addr16
push
or
ret
and
pop
cmc
je
mov
push
sbb
inc
and
xchg
push
jmp
imul
push
ficomp
push
repz
stos
push
dec
test
mov
stos
jge
add
add
add
or
xchg
test
push
push
int
test
pop
jge
cmp
sub
fsubr
movs
mov
mov
je
mov
mov
add
inc
out
jns
jbe
or
xor
out
mov
jmp
adc
jne
pop
jns
outs
mov
push
jmp
inc
push
es
xchg
addr16
sbb
adc
lods
mov
jo
sbb
push
or
mov
cmp
imul
cmp
shr
pop
inc
or
xor
jp
pop
sahf
fdiv
js
adc
test
sub
xchg
out
add
inc
repnz
or
mov
int3
xchg
sbb
or
out
cmp
or
adc
and
sub
dec
cmc
loope
inc
dec
addr16
add
sbb
mov
fsubr
mov
or
data16
outs
push
les
rcl
push
or
test
cmp
push
mov
adc
add
imul
movs
xchg
mov
cmp
jae
je
sbb
add
inc
add
push
add
(bad)
sbb
push
jmp
repnz
aaa
ficomp
jmp
pusha
cmp
jle
or
(bad)
jnp
pop
outs
or
ror
xor
shl
pushf
xchg
int3
cmp
inc
xchg
xchg
xchg
sbb
mov
ss
es
addr16
xor
call
push
pop
pop
ret
ja
jns
inc
jecxz
ins
sbb
cmp
sbb
inc
mov
jl
inc
sub
add
cld
mov
sub
imul
sub
outs
and
lods
nop
scas
fisttp
sbb
jmp
ficomp
mov
jp
add
inc
fimul
add
add
add
cdq
imul
imul
cmps
add
pop
rol
mov
fidivr
cmp
push
xlat
push
out
hlt
or
repz
cmp
or
sbb
add
rcl
pop
test
sbb
outs
mov
jmp
es
and
adc
pop
sub
jne
mov
popa
cmp
xor
test
xor
je
cmps
fwait
ret
xchg
push
inc
sbb
mov
sbb
call
hlt
or
jmp
inc
je
and
push
cwde
jge
push
push
jne
imul
jmp
xor
sub
mov
lea
fndisi(8087
loope
outs
lea
popa
sub
rol
mov
add
pop
push
pop
xchg
dec
sub
dec
scas
cmc
cmp
ret
hlt
rol
inc
fwait
lahf
es
icebp
push
loop
push
fisubr
cmp
loope
ficomp
cmp
out
(bad)
push
mov
or
cmp
sub
cmp
daa
add
cwde
jmp
pop
adc
and
push
sbb
inc
jo
inc
mov
sti
outs
fisttp
loopne
push
sub
pop
jmp
rcr
(bad)
pop
je
add
and
pusha
pushf
and
mov
inc
adc
test
mov
cmp
js
js
mov
or
inc
pop
mov
or
mov
mov
dec
mov
pop
or
jp
jne
inc
adc
bnd
call
sub
jbe
enter
fiadd
fimul
cmps
inc
jle
mov
pop
sbb
clc
inc
add
adc
mov
je
ret
je
fisttp
xor
and
aad
loope
xchg
pop
and
inc
xor
push
ins
popa
cmp
ja
push
lds
pop
sbb
and
retf
mov
addr16
xlat
sbb
or
hlt
inc
aad
xchg
sbb
add
rcr
popf
dec
xchg
es
loopne
test
pop
aad
dec
jmp
pusha
push
add
into
pop
mov
shld
movs
out
shl
sbb
ror
sbb
mov
xchg
lahf
mov
cmp
shl
mov
dec
mov
xor
sbb
std
pop
push
mov
leave
(bad)
outs
adc
repz
je
pop
adc
retf
mov
xor
sti
test
sub
js
rcl
adc
push
push
sbb
push
xchg
outs
dec
ja
lea
ror
mov
xor
and
jle
js
adc
inc
and
jle
sbb
cmp
mov
push
pop
mov
retf
or
test
(bad)
cmp
jp
pusha
xor
fnstsw
popf
adc
stos
xchg
test
inc
fisttp
pusha
sub
mov
cmp
jae
pop
je
mov
push
adc
dec
jae
cmp
cmps
or
inc
push
icebp
ret
pop
dec
out
test
aam
mov
ret
add
stc
mov
or
je
push
repnz
sub
fnsave
xlat
and
add
pop
cmps
ret
dec
push
dec
dec
(bad)
pop
jge
dec
and
pop
into
or
cmp
leave
je
push
xor
push
and
call
mov
xlat
fcom
aad
cmp
mov
(bad)
lock
push
pause
out
mov
mov
cmp
or
inc
mov
gs
mov
dec
out
mov
push
add
push
and
mov
xor
dec
in
jle
mov
mov
test
mov
mov
xor
fwait
nop
mov
fnstenv
(bad)
shl
(bad)
out
sbb
pcmpeqd
add
sub
push
aaa
xchg
ins
pop
dec
cmp
xor
push
dec
movs
pop
fadd
xlat
push
and
in
jae
shl
add
sahf
add
push
cmp
and
jmp
and
std
inc
ret
adc
and
and
clc
push
clc
ja
gs
ins
add
adc
sub
mov
pop
mov
cmp
out
cmp
xchg
es
dec
adc
jge
adc
sub
xchg
test
mov
sub
aas
std
out
add
push
push
dec
out
dec
jle
push
pop
adc
sbb
or
and
inc
ja
fwait
fs
jo
cdq
into
out
(bad)
jmp
pushf
call
out
xchg
add
add
sbb
push
sub
add
and
(bad)
xor
pop
popf
mov
out
mov
test
scas
scas
aam
(bad)
pop
inc
(bad)
bound
pop
xchg
add
add
fcom
mov
pop
xchg
adc
and
or
and
ds
loopne
retf
das
fadd
lahf
dec
xchg
pop
popa
in
data16
ins
stc
call
fldcw
pop
add
sahf
gs
lea
xor
movs
inc
sub
imul
mov
cdq
xor
test
cmp
sbb
inc
shl
jl
adc
or
(bad)
add
cwde
or
lds
add
mov
pop
xchg
lock
lock
push
adc
push
push
sbb
clc
dec
push
in
in
mov
add
lods
pop
add
push
pusha
add
adc
push
pop
and
mov
mov
or
sub
push
js
add
add
pop
mov
sbb
fwait
push
inc
inc
scas
add
inc
cmp
add
jne
add
push
inc
loopne
nop
pop
cmp
adc
gs
and
mov
xchg
mov
xlat
je
dec
or
cld
test
or
and
add
jg
sbb
inc
jl
cmp
jg
push
test
js
fisttp
cmp
push
rdtsc
inc
inc
xor
push
add
mov
mov
fs
shr
nop
adc
and
or
inc
add
xchg
and
mov
pop
adc
jmp
icebp
bound
or
mov
dec
inc
pusha
xor
push
mov
inc
sbb
adc
adc
push
loope
mov
pop
shl
xchg
sub
pop
add
ret
add
jmp
aaa
or
inc
fidivr
add
clc
and
cmp
add
loope
pusha
leave
inc
and
sar
movlps
jmp
adc
inc
addr16
lock
add
xchg
and
lods
add
inc
(bad)
sbb
lods
fldl2t
mov
jne
aam
add
inc
mov
int
and
push
test
dec
xor
push
lock
or
dec
js
sar
push
mov
inc
shl
jae
jb
jmp
cmc
or
arpl
std
movs
test
inc
add
jnp
popa
arpl
jnp
jmp
or
mov
jbe
mov
mov
push
add
lea
add
add
add
adc
je
mov
jnp
(bad)
xchg
(bad)
repnz
lock
add
push
sub
pop
pop
sub
lods
xchg
je
cmp
retf
jp
outs
push
jae
inc
push
pop
sbb
rol
xor
clc
add
push
mov
mov
rcl
adc
and
enter
mov
adc
shr
and
lods
aaa
std
movs
push
inc
jnp
sub
xchg
add
fnsave
ret
push
pop
movs
ficomp
mov
mov
mov
or
jge
sub
sbb
push
mov
sar
inc
or
adc
jl
push
pop
aam
std
xchg
les
out
cli
popa
pop
xchg
hlt
push
xlat
cmp
fiadd
push
ds
push
adc
push
mov
sbb
mov
adc
not
addr16
push
or
xor
call
jl
inc
dec
sub
add
cmp
dec
inc
push
push
push
push
add
mov
lock
push
mov
push
push
add
push
aas
sub
inc
push
add
js
or
ret
fisttp
stc
jl
rcl
inc
lock
adc
mov
dec
sbb
xchg
dec
movs
sar
and
ss
loopne
test
push
sar
pop
shr
pop
ret
xchg
cmp
ds
push
jl
push
clc
mov
mov
xchg
add
add
adc
cmp
aam
dec
sub
add
jne
push
or
jg
xor
pop
mov
sub
scas
test
cdq
push
adc
(bad)
out
inc
dec
neg
jb
xor
push
jle
and
rol
pop
sahf
and
icebp
add
sbb
(bad)
pop
xor
inc
pop
jmp
sbb
pop
popa
mov
lock
mov
push
xor
mov
hlt
add
jle
fnstenv
dec
in
inc
shl
fld
sbb
fimul
mov
mov
ins
cmp
mov
ds
jno
push
js
es
or
or
xchg
jmp
test
xor
cmps
je
sbb
cmp
cmc
rol
fadd
js
add
and
jns
xor
test
jb
clc
call
shr
daa
fldcw
sbb
dec
cmovne
enter
outs
jb
arpl
repz
outs
cmovns
or
js
shl
mov
mov
test
add
xor
aam
xchg
dec
je
sub
or
add
sti
(bad)
cmp
mov
div
inc
cmp
jae
pop
mov
nop
xor
inc
arpl
jp
jb
pop
push
pop
cmp
sbb
loopne
aam
sbb
cmps
dec
jnp
sti
mov
test
and
mov
ror
mov
mov
iret
or
adc
mov
fs
shl
sbb
pop
rcr
mov
fadd
fcomp
lods
jmp
or
pop
in
pop
xchg
cmp
adc
lods
jl
jbe
mov
or
xor
movs
sar
pushf
aam
retf
das
loopne
xchg
test
sub
dec
add
test
fcmovbe
jge
adc
aaa
dec
sub
inc
mov
xor
xor
sbb
jl
sbb
not
outs
lea
outs
ret
ins
ja
sbb
in
pop
cmp
sbb
je
inc
inc
dec
dec
pop
add
jle
lock
ret
inc
pop
inc
push
sub
push
js
or
or
push
not
fdiv
cmp
rol
pop
and
enter
cld
shl
test
shr
pop
(bad)
jne
mov
shr
adc
xor
cmps
cmp
shl
or
inc
stos
mov
arpl
loope
iret
clc
mov
dec
(bad)
inc
imul
adc
push
sti
push
inc
call
cmps
cmp
hlt
push
pop
pop
fcom
mov
mov
push
jb
sti
jmp
aad
pop
sbb
mov
xor
dec
pop
lods
loope
mov
rol
adc
movzx
(bad)
xor
lods
test
jo
sub
add
inc
inc
adc
mov
inc
xchg
pop
out
mov
mov
or
sbb
dec
and
push
sbb
adc
loope
xchg
and
aad
inc
and
cmp
rcr
loope
sti
aaa
pusha
jae
cmp
adc
addr16
adc
pop
imul
rol
pop
into
ret
or
gs
cmp
sub
add
adc
xchg
dec
sub
retf
dec
int3
or
sub
pop
inc
fadd
and
or
sbb
add
add
push
add
sbb
or
and
pusha
pusha
(bad)
shr
divps
cmps
fimul
sub
mov
fstp
add
rcl
outs
cld
pusha
test
and
pop
or
neg
push
test
jmp
add
add
das
adc
or
dec
repz
mov
leave
mov
mov
scas
mov
cmp
fs
cmp
push
cmp
inc
or
mov
out
mov
jg
mov
sub
rcl
push
mov
fldenv
add
push
lock
add
(bad)
test
(bad)
inc
rcl
shr
cli
mov
inc
push
fwait
jns
les
sub
jbe
inc
sbb
and
fild
pusha
and
into
test
ret
rcl
dec
cmp
or
fcomp
sbb
jns
leave
clc
popf
add
mov
(bad)
adc
or
dec
sub
pop
push
add
pushf
sub
shl
aam
and
cs
repnz
cmps
inc
add
loopne
adc
ret
das
std
ret
shl
ds
sub
shl
mov
sub
cdq
mov
inc
clc
std
(bad)
dec
adc
or
mov
jne
sahf
push
pop
xor
dec
sbb
cmp
mov
adc
sub
sub
push
push
pop
inc
add
xor
pop
pop
cs
and
or
jp
add
movs
ss
add
mov
push
xor
cwde
jae
cmp
xchg
pop
aam
das
(bad)
jle
push
push
add
loopne
pop
fwait
daa
mov
mov
imul
or
retf
rol
push
sbb
sub
cmp
or
xchg
sbb
(bad)
jb
pop
xor
cmp
cmp
mov
fcomp
das
mov
lea
push
bound
xchg
pop
mov
jmp
out
mov
sub
lds
neg
fdiv
push
pop
jne
inc
xor
sbb
sbb
fwait
sbb
int3
push
dec
or
imul
cmp
imul
out
and
lods
inc
es
(bad)
add
xor
mov
ins
push
adc
pop
xor
or
aaa
jmp
push
jno
lock
jb
fadd
pop
sub
sahf
sbb
cwde
mov
pop
call
hlt
push
cmps
mov
xchg
stos
pusha
sub
inc
ins
adc
fiadd
adc
adc
jmp
or
sbb
ret
mov
scas
je
jbe
sti
and
mov
and
inc
jae
cs
(bad)
xchg
lods
int
or
mov
mov
pop
retf
jge
mov
push
mov
pop
in
inc
pusha
push
fild
lahf
sub
sub
xor
fcom
push
push
or
or
mul
pop
xor
pop
cmp
sbb
sbb
add
sbb
pop
cmp
sub
out
jne
push
fcom
xor
cli
int3
add
cmp
mov
push
cmp
sbb
cwde
call
icebp
xchg
inc
cld
je
pusha
or
inc
dec
cli
xchg
cs
cmp
add
shl
fldcw
xor
push
push
into
mov
sub
ret
xchg
dec
mov
movs
push
inc
or
xlat
mov
pop
cwde
mov
icebp
add
test
in
or
sbb
push
dec
dec
dec
movs
lods
push
or
add
sbb
inc
mov
mov
mov
shl
pusha
sub
sbb
xchg
add
sub
sbb
loop
adc
pop
cmp
cmp
rcr
mov
pop
or
and
push
into
loopne
pop
push
pmulhuw
mov
xor
and
jmp
cwde
and
push
inc
or
sub
jne
mov
bound
mov
shl
adc
mov
test
add
xor
aas
nop
cli
test
mov
xchg
test
out
xchg
or
mov
and
fldcw
mov
or
nop
or
push
inc
icebp
fstp
cmp
push
push
add
mov
xor
mov
jmp
cmps
sar
cdq
xchg
push
dec
in
inc
xchg
sahf
or
mov
push
pop
sub
mov
mov
mov
aad
push
adc
inc
shr
mov
and
sbb
pop
ja
jbe
movs
sub
cmps
sbb
add
bound
add
mov
cwde
fxch
ret
mov
xchg
add
pop
jmp
cmp
es
data16
hlt
push
mov
xchg
adc
add
jb
jg
push
dec
aad
jl
jmp
push
cmp
int3
inc
test
fwait
icebp
adc
sahf
mov
add
movs
or
cmp
or
ret
test
es
ret
mov
bound
bound
rcr
inc
and
xchg
pusha
mov
retf
adc
inc
pusha
inc
imul
call
cmps
push
daa
lods
aaa
aam
cmp
xchg
push
push
jecxz
and
dec
fsubr
mov
mov
mov
pop
enter
xchg
or
push
or
inc
jmp
inc
pop
xor
or
push
(bad)
jl
je
jecxz
add
fst
je
(bad)
push
adc
(bad)
mov
cmp
dec
cmc
cmp
fist
mov
adc
add
or
cmps
or
aaa
es
aas
rcr
xor
into
mov
push
das
mov
js
mov
jb
lods
mov
adc
add
out
sbb
jns
mov
rcr
inc
add
adc
and
mov
icebp
lods
pop
or
(bad)
jmp
jg
stos
cs
cdq
popa
xchg
pusha
fst
mov
fs
mov
pop
or
es
mov
scas
inc
mov
int3
xor
mov
stos
inc
sti
cmp
(bad)
cwde
repnz
out
(bad)
jl
add
push
retf
movs
jb
pushf
xchg
mov
popf
inc
mov
cmc
stos
inc
xchg
cmp
sub
xchg
lds
sub
(bad)
(bad)
push
mov
std
xchg
hlt
sbb
adc
js
retf
scas
inc
pop
mov
push
jne
clc
push
add
and
add
cmp
xchg
mov
jnp
add
pop
add
pop
retf
stos
jae
dec
pop
push
loopne
lea
imul
sbb
test
sub
repnz
jne
jb
(bad)
and
mov
xor
loopne
xlat
(bad)
in
lds
cli
jae
push
test
inc
sub
(bad)
fidiv
mov
(bad)
push
push
dec
js
or
jle
inc
test
rol
ret
cmp
jle
jne
inc
cmps
call
stos
les
and
sub
push
and
cmp
hlt
test
sub
push
mov
loope
and
cmc
sub
xor
out
xchg
mov
sub
mov
mov
push
mov
ins
out
into
test
ror
push
xchg
shr
inc
adc
mov
stos
adc
jmp
jmp
jae
and
push
jnp
mov
or
cmp
adc
int
inc
out
stos
mov
xor
mov
test
inc
xor
sub
push
xbegin
add
jmp
mov
jl
imul
and
rol
cmp
jecxz
and
sub
jae
add
test
xchg
cmp
cmp
icebp
mov
sub
imul
push
pop
mov
inc
mov
pmulhw
inc
push
test
mov
pop
inc
inc
fistp
movs
xor
jg
hlt
or
(bad)
sbb
jmp
shr
or
and
fsubr
adc
dec
jne
js
xchg
adc
add
lds
dec
call
adc
and
mov
dec
add
or
inc
or
sbb
dec
clc
je
pushf
cmp
cdq
mov
dec
fdiv
inc
sbb
push
jmp
dec
pop
imul
lds
pop
movs
push
mov
inc
push
mov
dec
or
out
test
xor
adc
adc
ja
inc
jmp
es
dec
jmp
ins
push
movs
sahf
fucompp
dec
and
dec
xchg
inc
stos
scas
sbb
push
movs
in
or
pop
inc
dec
mov
lods
dec
sbb
in
cs
cmp
outs
iret
cmp
pop
jle
hlt
mov
aad
sub
or
jp
cdq
ret
xchg
or
pop
and
jno
lahf
imul
adc
xor
mov
leave
es
mov
fstp
xor
adc
ror
or
aas
jns
xchg
ja
movs
or
push
or
lods
jno
sub
sbb
sub
add
retf
in
cmp
push
adc
call
stos
mov
leave
jecxz
dec
push
mov
loope
bound
or
nop
mov
xchg
add
in
adc
out
stos
bnd
jmp
adc
idiv
xchg
test
sahf
adc
nop
dec
repz
xchg
pop
mov
or
stos
retf
js
mov
shr
pop
iret
std
ss
call
push
pop
sub
pop
adc
jne
pop
or
or
lods
adc
xlat
sbb
arpl
lds
mov
jae
inc
sbb
scas
xor
test
sbb
sahf
push
dec
cmp
dec
or
adc
sbb
mov
push
or
and
sbb
daa
or
push
mov
add
mov
adc
add
push
adc
jecxz
cmp
push
hlt
jge
mov
rcl
add
adc
ret
pushf
sbb
mov
lods
in
mov
(bad)
cmp
dec
mov
push
vpmacsdql
rcr
nop
inc
dec
xlat
add
popa
xchg
pusha
mov
or
xchg
dec
mov
jno
fwait
nop
gs
js
popa
pop
dec
pop
xchg
es
mov
sbb
imul
jne
dec
dec
add
bound
jbe
jp
dec
popa
jnp
cmp
add
dec
fisubr
add
icebp
push
pushf
rdpmc
mov
or
sub
and
cmp
cmp
pop
mov
add
sbb
sbb
push
or
in
cmp
sbb
or
fs
lahf
xchg
out
xor
push
sbb
mov
add
das
rcr
add
push
arpl
packuswb
mov
test
sub
dec
movs
add
retf
imul
add
daa
dec
mov
int
mov
add
pop
xchg
cmc
or
test
adc
mov
jge
adc
ins
mul
outs
adc
adc
ret
mov
mov
add
push
sub
sub
fucom
add
sub
bound
add
mov
lds
xchg
or
mov
jmp
sbb
mov
mov
out
dec
mov
bound
imul
push
imul
aaa
adc
jle
jbe
mov
sahf
shr
push
(bad)
cmp
lods
mov
dec
jne
movs
xchg
fmul
pop
cmp
jge
inc
xchg
aam
fwait
add
pop
aaa
ret
sub
mov
ins
mov
add
mov
cmp
test
inc
jge
sti
push
xchg
in
cdq
dec
jmp
and
sar
fsubr
add
mov
add
cli
movs
xchg
add
(bad)
dec
add
sbb
cmp
xor
inc
adc
imul
push
in
mov
pop
push
or
test
pusha
adc
cmp
retf
and
ret
mov
lds
inc
jno
cmp
mov
inc
xchg
add
mov
nop
lock
imul
aad
sub
jns
test
push
inc
jae
mov
push
sbb
add
sbb
inc
pop
fisub
sub
dec
push
das
(bad)
dec
or
jns
jle
xor
jnp
rcl
pcmpeqb
sbb
sbb
mov
or
sub
inc
jmp
mov
ds
mov
pop
push
adc
pop
cmps
push
add
retf
inc
add
outs
or
or
jmp
popf
and
jns
rcr
nop
popa
adc
aam
sbb
xchg
xor
in
xchg
sbb
out
ror
xor
push
xchg
sub
push
mov
sbb
pop
push
jp
jbe
or
and
mov
xchg
test
in
jbe
jb
sbb
inc
jl
jns
xor
inc
sub
call
mov
cdq
mov
cwde
pop
pop
xchg
imul
inc
in
test
mov
or
(bad)
pop
nop
leave
push
into
push
mov
shl
loope
inc
and
dec
int
cmp
xchg
shr
pop
sbb
lea
jbe
test
rol
mov
mov
fcom
dec
mov
dec
mov
or
mov
add
pop
add
push
mov
lahf
gs
jmp
fistp
aam
std
sbb
add
jle
mov
or
or
sbb
or
jnp
iret
inc
xor
push
and
adc
ins
jmp
adc
loope
add
(bad)
xchg
jns
jmp
xlat
sub
push
add
outs
dec
pop
sub
rcr
add
lock
sbb
rcl
pop
mov
sub
retf
cmc
xor
adc
jmp
cmp
or
mov
or
bound
or
push
mov
jo
sub
dec
lea
jp
adc
nop
fld
dec
ror
xor
mov
jge
js
mov
sti
mov
sub
or
adc
call
vpcmpeqb
inc
xchg
lahf
mov
add
mov
outs
add
rcr
jp
aam
cmp
jbe
push
cmp
mov
push
lods
push
fmul
dec
push
or
or
push
mov
pop
and
jl
mov
or
inc
imul
jne
je
and
adc
pusha
mov
dec
cmp
xor
inc
xchg
sub
in
push
int
sti
dec
nop
(bad)
push
(bad)
nop
ins
adc
mov
mov
rol
sbb
outs
push
and
push
and
push
test
into
fcmovne
popa
xor
xor
fild
inc
or
call
adc
push
or
xor
mov
dec
xchg
sbb
push
lea
cli
jnp
clc
mov
mov
dec
and
lds
shl
movs
dec
int
or
iret
movzx
(bad)
ins
ja
cmps
sti
aas
or
jmp
mov
mov
jmp
adc
fst
push
sbb
je
dec
jmp
pop
fsin
test
xor
inc
fst
fnstsw
mov
push
adc
or
pop
and
es
mov
les
push
inc
inc
lsl
adc
mov
push
mov
je
scas
jecxz
jmp
imul
bound
fiadd
ds
out
(bad)
push
jmp
movs
cld
add
push
xchg
xchg
int
das
push
add
mov
adc
push
mov
popf
bound
push
push
fucomp
push
inc
jmp
jmp
outs
daa
out
and
xor
shr
mov
mov
outs
pop
cmp
or
and
clc
call
push
ret
add
shr
dec
adc
jb
push
or
xlat
jmp
sbb
and
or
push
mov
ss
cmp
fwait
adc
push
push
and
sbb
lds
push
clc
call
cmp
test
sbb
loopne
sbb
dec
inc
or
push
sub
and
add
jmp
mov
xchg
(bad)
mov
popa
rol
leave
dec
xchg
push
cdq
sub
out
leave
and
and
shl
in
in
ror
scas
sbb
add
adc
sub
rol
or
xor
xchg
mov
nop
and
pop
jno
xchg
daa
xchg
icebp
mov
push
add
or
or
add
push
sub
sbb
cwde
xchg
into
cmp
into
(bad)
xor
add
lock
bound
adc
sbb
or
adc
loope
xor
inc
aaa
add
dec
fcomp
cli
rcr
std
add
push
rcr
or
and
or
and
pop
das
(bad)
jmp
mov
xchg
mov
sbb
das
data16
jo
cmp
into
scas
fnsave
mov
(bad)
jns
add
fstp
add
pusha
cmp
lock
test
pusha
pop
inc
push
push
xchg
imul
inc
add
adc
jmp
sub
and
pusha
jno
push
pusha
pop
stos
loopne
je
push
aaa
add
mov
or
fisubr
lahf
jo
fs
ror
movs
icebp
cmp
pop
adc
stc
fs
jae
push
xor
pusha
inc
outs
mov
mov
adc
adc
mov
and
cmps
xor
inc
sub
or
xchg
cmp
fs
adc
cmps
mov
jo
mov
scas
sbb
dec
dec
xor
inc
jb
daa
adc
cmps
push
(bad)
fistp
push
lock
adc
lahf
mov
int3
lea
mov
push
push
push
mov
cmp
out
adc
add
inc
mov
test
jne
pop
cld
lahf
ret
push
mov
ret
push
cmp
gs
sub
add
shl
adc
and
push
sbb
add
inc
cmp
addr16
scas
movs
(bad)
(bad)
pop
loopne
cld
mov
adc
push
sbb
cld
(bad)
sbb
mov
jmp
or
or
or
or
pop
sbb
mul
loopne
or
or
push
push
push
sbb
(bad)
cmp
or
mov
jmp
cmps
cmp
ss
stos
sub
ss
outs
lock
jne
mov
ins
adc
sahf
outs
adc
test
mov
or
je
pop
mov
sub
call
les
adc
imul
ja
mov
popa
popa
retf
loopne
dec
add
repnz
jl
ins
add
ja
sbb
xor
pop
pop
scas
xchg
iret
cli
xor
fiadd
ins
push
or
mov
in
out
push
or
add
inc
or
jae
dec
sbb
out
repnz
sbb
punpckhbw
dec
sub
push
push
cmp
call
loop
jg
ins
add
std
cmp
inc
lods
push
jne
mov
mov
mov
add
stc
jp
addr16
ins
push
jno
cdq
mov
dec
pop
inc
data16
push
xchg
pusha
cmp
push
add
inc
xor
cmps
lea
mov
xchg
mov
bound
in
je
sbb
xchg
out
lock
dec
push
and
sbb
mov
shl
pop
mov
cmp
xchg
ds
rcl
add
xor
rcl
fwait
or
and
js
jne
xor
scas
xor
push
or
sbb
dec
or
pop
div
in
movs
cmp
xchg
pop
jmp
jnp
jecxz
lea
loop
sbb
lea
test
add
or
fadd
pop
or
sub
and
sub
cmp
icebp
sub
ins
int3
mov
hlt
aad
jbe
enter
inc
inc
call
xor
add
adc
rcr
mov
mov
dec
inc
xor
push
cmp
mov
push
pop
adc
movs
pusha
call
or
aaa
and
mov
dec
and
pusha
sub
xchg
dec
sbb
arpl
pop
arpl
mov
je
mov
stc
mov
inc
sahf
rcr
mov
not
movs
jnp
add
and
dec
add
stos
xor
sbb
les
add
inc
in
cmp
adc
dec
sub
add
in
cmp
pop
pop
sar
or
pop
add
jle
mov
mov
int
mov
adc
cmp
pop
xor
push
(bad)
and
adc
push
pop
pop
inc
je
cmp
pop
cmp
push
cmp
sbb
shr
push
and
(bad)
and
clc
in
and
rol
ja
cmp
jbe
sub
sbb
popf
push
retf
hlt
cmps
mov
and
in
add
inc
ret
push
loope
(bad)
cmps
or
bound
bound
imul
xchg
mov
sahf
sbb
jl
sub
or
or
test
retf
into
add
add
cmps
ins
push
repnz
add
jbe
lahf
push
call
sub
ret
dec
push
mov
popf
ret
je
add
dec
adc
mov
inc
retf
or
out
arpl
and
cmp
xor
adc
(bad)
sbb
mov
push
mov
fidiv
or
rcl
sbb
xchg
je
jo
add
cmove
or
adc
jnp
pusha
add
pop
or
adc
cli
xchg
dec
xor
xor
sar
pcmpgtw
mov
pop
pop
mov
mov
push
xchg
mov
sbb
inc
adc
xchg
xchg
test
aas
pop
dec
and
mov
or
sub
xor
mov
loopne
push
and
mov
cmc
sub
add
push
loop
in
cwde
jmp
ret
push
push
in
add
inc
mov
arpl
clc
mov
ss
jmp
lock
loop
and
(bad)
add
mov
into
stc
test
fmul
mov
inc
into
jne
pop
and
adc
push
add
les
jae
scas
outs
sub
push
enter
sub
sbb
xor
stos
retf
and
mov
cmp
in
jp
and
ret
pusha
jl
sbb
sub
retf
pop
pop
and
pop
push
fst
pop
push
sbb
iret
jbe
xor
fwait
add
cli
pop
into
sub
pop
add
push
loop
and
fidivr
pushf
cwde
sbb
je
jmp
je
pop
add
jbe
mov
and
cmp
add
push
ja
jge
imul
add
sbb
mov
sbb
lea
mov
aad
jbe
hlt
out
jg
enter
adc
cmp
test
jae
sub
push
or
jle
rol
adc
bound
and
push
jnp
push
push
test
push
sub
push
ja
loop
cdq
pop
sahf
add
or
or
ret
ja
push
dec
cmp
xchg
add
cmp
mov
jne
or
jmp
and
cmp
dec
or
adc
or
jbe
jl
or
dec
sbb
xchg
jle
je
cmps
lds
sbb
jg
in
icebp
jb
cmp
cmp
sub
push
adc
cwde
loop
xchg
ror
int
js
mov
je
xchg
push
pop
pusha
push
and
jnp
clts
and
jmp
or
sbb
ins
inc
or
loopne
xor
in
jo
cmp
jbe
inc
or
mov
iret
dec
cmp
or
adc
adc
test
bound
cs
jb
mov
xchg
add
mov
dec
sub
pop
jae
cmp
and
or
sub
jp
xchg
sub
add
ror
mov
sub
test
mov
push
int3
adc
test
xchg
pusha
dec
retf
repz
(bad)
shl
test
pop
add
ins
mov
mov
add
and
adc
jnp
fld
jbe
ins
cli
fwait
cli
inc
sbb
daa
xchg
adc
xchg
out
add
push
push
gs
push
jmp
push
mov
jge
xor
ret
in
jmp
arpl
push
(bad)
inc
rol
pop
clc
jno
mov
inc
mov
pop
mov
mov
or
jg
pop
mov
xor
aaa
imul
je
sbb
add
cli
add
adc
mov
cmps
xchg
pop
adc
lods
adc
dec
inc
mov
ret
mov
dec
xor
add
clc
mov
arpl
pop
mov
pop
add
or
sbb
ds
dec
xor
add
dec
movs
js
xchg
cdq
inc
dec
loopne
es
adc
call
and
push
push
sbb
xor
int3
sbb
and
jo
add
sbb
push
mov
std
cmps
popf
clc
adc
push
cmp
jne
je
add
outs
data16
and
jbe
leave
and
push
stc
fdivr
and
je
(bad)
repnz
test
dec
sub
adc
pusha
adc
add
adc
xchg
add
add
xor
or
mov
pop
mov
mov
mov
and
ret
inc
and
mov
les
aad
push
inc
sub
ss
dec
xor
jmp
aas
cmps
test
ret
add
sbb
add
xchg
push
adc
je
aam
adc
sub
lock
test
fcmove
stc
sahf
loop
push
mov
dec
dec
jecxz
pop
and
and
mov
into
out
mov
or
je
bnd
mov
and
out
in
push
adc
out
sub
sbb
in
fist
push
das
sbb
cli
loope
xor
das
cmp
adc
jo
stos
pop
gs
inc
cs
cmp
fadd
mov
jmp
sub
and
push
sub
xor
xor
dec
or
jle
jo
mov
cmp
mov
pop
scas
or
repz
dec
jmp
push
mov
ss
sbb
xchg
or
test
jmp
dec
dec
pop
es
add
or
or
lea
add
mov
pop
inc
mov
xor
sub
lahf
hlt
sbb
xor
push
das
out
mov
cmp
js
push
mov
xor
ret
or
lock
xchg
ja
add
add
xchg
pop
pop
addr16
pop
scas
or
push
inc
popf
cmp
xchg
aad
dec
popf
sub
mov
cwde
arpl
xchg
or
add
inc
faddp
or
push
push
xchg
cmp
ja
(bad)
pop
or
or
pop
xchg
sbb
test
les
adc
inc
adc
jae
and
shl
and
rcl
nop
nop
or
add
sbb
cdq
nop
ret
and
or
xchg
pushf
add
mov
jl
sti
cmp
dec
mov
push
add
jecxz
sbb
js
sahf
jmp
push
or
jb
adc
xchg
mov
fdivp
mov
adc
bnd
daa
es
sub
or
push
and
(bad)
lds
aaa
repnz
cdq
push
lock
dec
movs
hlt
rcr
imul
push
and
lock
inc
lea
adc
adc
push
jo
pop
sbb
idiv
push
lock
adc
push
xor
test
nop
scas
hlt
aam
enter
adc
cmp
cs
jmp
scas
sub
ins
mov
fwait
test
xchg
push
(bad)
xchg
sti
xchg
add
and
pop
and
mov
es
push
sbb
cmp
add
and
xchg
loopne
sub
pusha
pop
loope
fwait
pop
pop
push
test
mov
pop
jns
test
int3
mov
or
mov
test
call
movs
fld
sub
div
scas
add
call
inc
or
or
scas
retf
mov
xor
sub
inc
adc
xlat
adc
inc
push
mov
aad
jecxz
sub
sub
cmp
test
in
addr16
jge
add
test
mov
movs
mov
add
push
push
pop
add
cmp
mov
dec
dec
mov
add
adc
inc
lods
mov
mov
xor
call
dec
sub
pusha
or
push
sahf
add
popa
cmp
jmp
imul
dec
fwait
adc
jbe
fldcw
jl
ror
mov
int
ss
in
adc
cmp
aam
xchg
test
jp
mov
and
xchg
push
adc
xor
nop
jmp
or
jl
enter
shl
push
mov
add
mov
inc
sub
popa
inc
mov
or
push
enter
ret
loopne
fs
xchg
movs
shr
xlat
fadd
retf
(bad)
sub
add
popa
xor
cmp
or
in
sbb
repz
in
movs
and
xchg
out
cmp
or
push
sbb
in
or
mov
sub
and
nop
call
add
movlps
jne
jle
adc
rcl
rcr
adc
mov
mov
sti
ror
mov
retf
adc
xchg
cmovp
cmps
pop
sti
hlt
push
xor
ja
xor
in
mov
and
push
loopne
inc
repnz
pop
sti
mul
dec
adc
and
and
das
pop
or
dec
cmp
push
pop
mov
or
ss
pop
cwde
popa
jl
je
mov
popa
ins
inc
or
dec
add
cmp
pop
jl
lods
add
pop
es
sub
jmp
cmp
mov
jae
int
push
(bad)
pop
cli
mov
cli
fimul
rcl
adc
push
and
and
les
push
sub
ja
clc
and
sbb
inc
xor
jmp
push
xchg
fs
loop
dec
push
mov
xchg
fsub
jno
movs
jle
push
sti
stos
fdivr
dec
pop
movs
mov
xchg
rol
enter
adc
loopne
sub
push
push
outs
push
jne
sbb
inc
mov
rcl
jbe
dec
or
adc
add
and
pop
xor
or
mov
push
push
adc
add
jne
mov
inc
and
jl
jne
and
mov
sub
sbb
add
mov
test
dec
jo
sbb
mov
in
repnz
dec
les
xlat
sub
mov
popa
loopne
retf
inc
cmp
cdq
mov
mov
jae
pop
add
mov
push
inc
pop
pusha
mov
jne
in
imul
sub
cwde
jmp
shr
clc
fidiv
call
sub
mov
push
push
jns
hlt
xchg
xor
sub
mov
mov
movs
fiadd
in
or
dec
push
push
inc
dec
mov
loopne
cli
test
sbb
sub
push
cli
mov
or
dec
cwde
loop
cmp
jae
and
and
add
inc
mov
adc
test
add
cdq
fs
movs
sbb
adc
div
ja
fs
xchg
cmp
call
cmp
loop
xor
inc
xchg
cmp
or
jo
movs
leave
dec
and
xor
xor
fisttp
mov
inc
cdq
inc
movs
enter
and
ss
push
test
loope
mov
jo
adc
(bad)
call
popa
rcl
ret
sub
adc
jecxz
ds
ins
loop
jbe
mov
out
xor
je
test
adc
and
mov
mov
rcr
mov
mov
jecxz
or
lea
lods
scas
cmp
cmp
outs
(bad)
add
cmp
push
(bad)
out
mov
sbb
fs
mov
shr
add
call
rcr
lods
fist
jae
les
shr
mov
data16
jnp
adc
and
mov
jmp
dec
adc
mov
inc
dec
and
inc
xor
outs
sbb
add
add
xor
add
fcom
pop
adc
and
mov
imul
xchg
add
out
loopne
ret
cmp
push
jbe
ret
inc
(bad)
xor
rcr
mov
mov
iret
adc
sub
xor
push
pop
xchg
mov
in
push
push
mov
retf
inc
(bad)
jne
sub
das
add
mov
jmp
xor
dec
ret
push
mov
imul
outs
or
movsx
movzx
pop
mov
fstp
jmp
fisttp
pop
add
push
dec
shr
push
mov
or
cmp
ret
jle
popa
cmp
jle
adc
sbb
sbb
sub
mov
loopne
sar
es
pop
push
popa
xchg
ja
in
jae
push
jns
jp
xor
cmp
inc
pop
mov
scas
xchg
ins
test
mov
pop
mov
sub
jecxz
push
test
sbb
or
lea
inc
adc
inc
ret
xor
ins
cmp
jle
sub
clc
mov
cld
cmp
push
dec
sub
mov
shl
push
(bad)
iret
mov
(bad)
cmp
mov
push
lods
repnz
xchg
dec
fstp
and
or
call
inc
mov
mov
shr
inc
mov
push
cmp
push
dec
out
(bad)
jle
lds
xchg
in
push
jmp
ret
pop
ja
xor
in
xor
jg
mov
(bad)
pop
ja
push
mov
mov
hlt
mov
inc
inc
cmps
in
sub
mov
(bad)
les
(bad)
xchg
lods
dec
dec
jo
les
rcl
mov
aam
inc
push
mov
mov
and
pop
je
shr
aad
das
(bad)
or
mov
ins
add
mov
sbb
inc
jmp
adc
pop
int3
push
or
push
sbb
rcr
jbe
pop
in
sub
jb
mov
shr
push
lods
lea
mov
enter
sub
push
xchg
inc
mov
dec
mov
mov
mov
add
imul
js
and
mov
pusha
rcl
dec
mov
and
mov
mov
push
fisttp
int3
les
inc
repnz
jmp
clc
pop
xor
bound
arpl
das
inc
clc
cli
cmovs
inc
sbb
pop
fimul
adc
mov
test
lds
mov
shl
pop
ror
jmp
xchg
push
popf
daa
out
fcmove
xchg
repz
jg
pop
sbb
add
inc
xor
dec
dec
inc
sub
ds
dec
pop
xor
enter
add
shr
js
push
inc
data16
je
retf
add
pop
aam
fbstp
sbb
and
mov
jmp
dec
jl
aas
(bad)
js
push
add
push
sti
xchg
cmp
sbb
mov
or
popa
sub
jno
popf
cmp
daa
inc
fild
mov
inc
sbb
adc
movs
das
mov
les
scas
add
(bad)
jnp
push
xor
nop
push
add
cmp
adc
mov
adc
icebp
mov
aam
add
push
jmp
ret
(bad)
mov
push
inc
shrd
scas
or
add
push
add
and
add
(bad)
call
and
adc
adc
data16
fimul
inc
mov
aaa
sbb
rcr
push
int
test
jmp
mov
cmp
xor
jne
popa
loopne
aad
push
ror
or
inc
sar
imul
xchg
pop
imul
inc
outs
cmp
jecxz
mov
pop
mov
and
mov
js
lods
test
add
and
mov
sub
xchg
dec
mov
enter
or
xor
sub
add
xor
loopne
push
add
pop
xchg
stc
(bad)
das
dec
gs
cld
jl
dec
mov
jo
nop
shr
out
pop
clc
dec
dec
pusha
pop
jae
sub
enter
add
cmp
movs
cmp
movs
and
mul
and
sbb
ja
les
retf
jle
or
pusha
add
in
dec
add
mov
sub
mov
pop
call
ret
int3
mov
mov
shr
xchg
rcl
add
dec
and
cld
mov
lea
(bad)
(bad)
jle
rol
cwde
ret
test
ret
ins
cld
jb
test
mov
jle
adc
add
in
jbe
int
inc
dec
sub
ret
adc
std
pop
ins
cmp
cld
push
ror
pop
test
cmp
test
xlat
xchg
adc
xor
call
inc
inc
sub
adc
add
lock
sbb
push
pop
fs
sbb
sbb
pop
inc
push
jmp
ds
xor
aaa
bound
push
and
cdq
cli
xchg
loope
shl
push
mov
push
popf
and
or
(bad)
lods
scas
push
push
lods
xchg
les
sti
inc
enter
(bad)
mov
in
daa
test
add
loopne
imul
dec
inc
mov
xor
fdiv
push
mov
arpl
or
fstp
adc
and
push
add
push
push
or
inc
or
retf
dec
les
call
pop
jmp
mov
cmp
in
in
sbb
(bad)
loopne
mov
jbe
push
dec
push
xchg
mov
sbb
out
mov
cmps
loopne
sbb
adc
pop
fwait
adc
add
adc
lock
and
rol
sub
pop
add
mov
je
fcom
ja
dec
jmp
xchg
mov
dec
or
fist
push
inc
jge
mov
add
add
mov
dec
and
mov
add
iret
adc
sahf
(bad)
jne
into
inc
pop
rcr
jno
add
in
sar
sub
push
jne
in
test
je
add
adc
xor
mov
jbe
mov
inc
push
sub
(bad)
dec
add
repnz
pop
cmp
jne
data16
retf
out
pop
test
sub
loopne
adc
pop
idiv
push
push
jmp
adc
rol
inc
cmps
sub
cmp
push
shl
xlat
push
ret
dec
jl
ret
xlat
outs
cmp
ret
xchg
push
dec
bndldx
lea
inc
arpl
fwait
mov
dec
pop
sbb
dec
push
xor
dec
ret
into
or
add
xor
cmp
in
sub
fdivr
push
mov
call
aad
sub
inc
jo
jne
inc
or
call
sbb
push
jmp
jp
xor
add
loopne
and
pop
hlt
pop
add
adc
cmps
popa
jo
cld
test
sub
adc
pusha
xor
bound
sbb
sbb
jne
xchg
inc
xor
jae
(bad)
and
js
dec
out
sub
shl
mov
add
cmp
inc
jne
mov
mov
cmp
push
mov
push
je
cmp
jne
inc
das
and
fstp
sbb
out
cmp
je
movzx
push
mov
data16
dec
cld
and
inc
inc
test
pop
push
adc
mov
jne
out
jne
inc
inc
pop
(bad)
jmp
out
ret
push
jmp
movs
cmp
jl
lock
mov
movs
pop
sbb
sbb
adc
or
add
cld
sbb
cmp
or
push
je
push
and
mov
test
test
sub
inc
aaa
sbb
mov
push
add
push
fstp
(bad)
call
jmp
sub
cmp
mov
aam
pop
add
jnp
lahf
xor
mov
mov
test
xlat
mov
inc
fnstcw
adc
inc
(bad)
loopne
test
mov
mov
dec
or
pop
jmp
arpl
jg
dec
xchg
jmp
adc
sub
push
in
test
add
mov
cmp
je
out
cmp
imul
(bad)
xor
popa
sahf
mov
or
loopne
pop
jl
cmp
mov
pop
fmul
push
mov
jmp
adc
push
xchg
jp
sub
sbb
push
mov
mov
ss
clc
adc
xlat
xchg
push
mov
jb
nop
pop
mov
xchg
cs
jmp
sub
enter
(bad)
int3
add
jmp
jnp
push
aaa
cmp
ds
data16
push
jae
sti
and
jmp
or
jmp
std
jmp
pop
stc
test
adc
je
mov
sahf
retf
ret
mov
add
arpl
xlat
in
mov
(bad)
bound
test
fdiv
je
test
(bad)
jo
dec
mov
push
mov
sbb
mov
sar
xor
push
jbe
(bad)
or
cmp
repz
rcr
pop
mov
fisubr
mov
movs
sbb
inc
cmp
add
push
cmp
add
mov
jb
neg
rol
adc
pop
movs
xchg
sub
sub
jne
mov
adc
dec
daa
push
or
or
inc
cdq
mov
mov
dec
jmp
pop
imul
jmp
fdivr
jne
sub
sahf
xor
cmps
(bad)
pop
sub
fwait
and
adc
aas
jl
mov
sbb
jp
ror
adc
and
aaa
inc
mov
daa
pop
or
out
jle
bound
es
mov
push
cmc
lock
loopne
sbb
add
jl
sbb
pusha
or
ds
iret
mov
inc
jl
xor
dec
stos
lods
lods
inc
test
scas
and
mov
jnp
jb
sahf
xchg
inc
das
fprem
lea
stos
sub
cwde
jle
dec
or
(bad)
mov
and
lahf
add
test
add
xchg
xchg
cmp
(bad)
jne
idiv
or
add
mov
loopne
adc
popf
popf
mov
enter
scas
mov
pop
cmp
pop
add
or
pop
xlat
push
or
call
xchg
mov
inc
rcl
cmp
ins
inc
cmp
int
rcl
push
pop
mov
or
int3
add
scas
jne
jno
lock
push
mov
push
or
icebp
jg
and
call
pop
cmp
clc
and
pop
ins
push
push
mov
pop
dec
push
push
dec
adc
xor
jnp
adc
int
or
je
dec
std
mov
push
add
popa
ret
cmp
xchg
ror
sbb
scas
data16
repnz
mov
rol
mov
cmp
or
push
or
adc
adc
jne
adc
or
enter
xor
retf
pop
cmp
jmp
cwde
in
in
add
dec
add
add
sbb
xor
mov
pop
sbb
adc
dec
popa
push
test
push
adc
pop
loopne
dec
les
push
out
sbb
pop
jge
int3
das
pop
push
ins
jmp
pop
push
or
inc
pop
jl
xor
inc
push
mov
cmp
adc
pop
push
fcom
call
push
loop
retf
cmps
rcl
add
push
cmp
mov
push
adc
or
inc
mov
inc
inc
push
sbb
retf
pop
mov
xchg
lock
bound
test
sbb
inc
and
ret
adc
out
push
rol
sub
aas
add
inc
aam
xor
inc
mov
mov
std
rcr
fadd
and
or
sub
dec
jmp
rol
(bad)
sbb
inc
pop
mov
(bad)
push
aas
push
fcomp
in
enter
jmp
push
sbb
cwde
adc
test
pop
or
loope
mov
xor
cmp
or
das
dec
push
mov
ins
jp
inc
mov
add
shl
xchg
loop
or
mov
push
loopne
or
cmps
adc
mov
inc
dec
jne
call
adc
xor
inc
sbb
dec
sti
es
ins
adc
mov
hlt
jp
sbb
pop
add
pop
jns
add
cmp
jb
push
(bad)
ja
(bad)
retf
dec
cmc
pop
jae
mov
add
lock
mov
ret
sub
and
sub
mov
shl
in
fs
je
sar
fisubr
cwde
neg
or
xor
pop
push
fist
pop
movs
or
add
pop
push
and
jmp
aaa
dec
pushf
push
mov
push
sub
and
push
mov
and
adc
pop
(bad)
mov
call
hlt
daa
mov
xchg
ret
gs
outs
adc
xchg
dec
adc
ds
mov
(bad)
int3
out
jo
and
retf
jge
pop
or
sbb
imul
or
mov
pop
cs
adc
jo
push
push
adc
ficomp
adc
pop
mov
pop
stc
push
adc
sbb
test
test
sub
mov
pop
inc
int
xchg
inc
outs
(bad)
pop
sbb
enter
jno
lock
dec
adc
push
dec
or
pushf
inc
and
xor
jg
cmp
ins
loopne
or
(bad)
or
push
xor
fwait
mov
pop
aam
jmp
test
mov
in
dec
popa
add
lods
inc
(bad)
add
nop
aad
and
xchg
cmp
stos
adc
sbb
or
inc
sbb
cmc
ret
jo
cmc
and
push
push
test
rol
mov
mov
and
adc
mov
jmp
adc
xchg
fisubr
xchg
jbe
sub
icebp
jns
sbb
mov
adc
inc
mov
xor
hlt
js
in
cmp
movd
add
dec
xor
sti
xor
mov
jbe
pusha
cdq
sub
les
retf
dec
movs
jne
leave
xchg
pop
sahf
inc
outs
add
dec
call
fst
add
cmp
in
xlat
dec
cdq
sub
sbb
imul
loope
and
and
movs
pop
imul
add
mov
xchg
jo
mov
fnstenv
ror
das
push
mov
data16
or
fucomi
and
push
xor
push
sub
cmp
ret
loope
into
fcmovb
sub
ss
jl
mov
jo
add
add
adc
pop
fmul
pusha
test
xor
inc
xchg
outs
sbb
or
cdq
nop
sbb
sbb
mov
sbb
xlat
pushf
jl
jg
ret
in
sbb
outs
adc
inc
cdq
pop
idiv
add
push
sbb
sbb
pop
pop
push
dec
jg
popa
out
dec
lea
sbb
dec
pop
idiv
dec
popfw
sub
rol
xchg
push
adc
data16
inc
es
inc
movs
retf
mov
add
mov
mov
lahf
nop
and
cmp
(bad)
mov
xchg
and
and
mov
fbstp
ja
inc
(bad)
or
mov
push
cmp
mov
inc
ret
dec
push
(bad)
xlat
push
mov
scas
cmp
imul
or
cmp
push
lds
add
nop
outs
xchg
fild
lock
xchg
xchg
bnd
jae
cmp
ja
add
cmp
pop
cmps
gs
xchg
test
xor
(bad)
cli
push
inc
test
jne
add
push
lods
test
jge
rcr
jbe
enter
ror
inc
mov
ins
or
aam
and
cmovs
cli
xchg
mov
les
test
dec
adc
or
(bad)
push
rep
jmp
nop
mov
mov
jb
int3
in
push
mov
enter
xor
lea
neg
cmp
fs
mov
rcl
in
(bad)
mov
mov
mov
mov
or
scas
adc
(bad)
mov
dec
xchg
push
push
cwde
add
mov
into
inc
add
add
or
out
lock
call
jmp
jns
enter
in
inc
(bad)
in
repz
repz
into
repz
hlt
hlt
clc
clc
cld
std
or
add
add
mov
mov
or
cmp
lods
sbb
pop
shl
push
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
(bad)
cld
out
mov
inc
jno
pop
neg
adc
pusha
xchg
daa
stc
fld
xor
nop
les
int
in
fsubrp
push
adc
fiadd
jl
mov
mov
mov
inc
push
jns
adc
push
add
nop
dec
dec
addr16
jbe
cmp
add
push
in
mov
sahf
mul
fs
push
je
test
xchg
cmps
xor
sahf
out
sbb
adc
adc
jns
out
or
or
aaa
inc
inc
sahf
add
inc
ror
test
fsubr
xor
icebp
xchg
xor
pop
(bad)
and
daa
ja
add
neg
xchg
movs
push
and
leave
jecxz
or
xor
mov
aas
rcl
rep
fdivr
pop
or
cli
ins
xor
lds
pop
je
adc
push
mov
or
sbb
ret
jp
imul
aaa
mov
push
mov
inc
sbb
ror
mov
out
clc
mov
jmp
mov
mov
dec
mov
sahf
add
in
sbb
es
inc
das
and
mov
pop
or
je
push
icebp
mov
dec
jne
jmp
cmp
sub
scas
dec
mov
sbb
fild
mov
mov
(bad)
loopne
imul
dec
data16
test
addr16
or
adc
push
imul
movs
test
retf
je
mov
pop
sub
int3
iret
push
mov
push
test
xchg
push
ret
jbe
mov
inc
adc
adc
addr16
les
pop
adc
jl
dec
je
inc
mov
pop
pop
push
fwait
popa
inc
jmp
xchg
sbb
es
xchg
ds
fiadd
mov
add
dec
jnp
pop
inc
aam
pop
loope
push
test
xlat
test
in
sub
add
ror
out
rol
xor
dec
push
dec
cmp
dec
dec
inc
arpl
sbb
dec
cmp
cmp
shr
mov
sbb
lods
test
ret
sbb
push
sub
popf
xor
aam
sub
sub
sub
sbb
ret
jl
or
pop
adc
xor
push
mov
inc
jle
repz
push
in
mov
addr16
dec
cmp
stc
inc
push
lods
retf
iret
(bad)
adc
add
lahf
or
mov
inc
jmp
cmp
sbb
push
add
add
stc
and
sbb
mov
add
pop
ret
in
sub
mov
inc
push
xor
or
ins
pop
hlt
xor
cmp
or
pop
and
scas
and
adc
xlat
pusha
mov
jne
dec
add
inc
lds
(bad)
push
dec
add
dec
dec
adc
add
xchg
lock
sub
dec
fwait
inc
and
pusha
add
sbb
outs
sub
add
ror
cmp
jae
bound
data16
sahf
inc
adc
add
mov
inc
sbb
cwde
and
lock
ds
jb
dec
sub
push
push
inc
pop
adc
fnstcw
aaa
jo
out
mov
sbb
push
or
arpl
or
sub
je
add
jbe
cmp
cli
push
mov
cmp
mov
adc
stc
mov
and
(bad)
imul
push
mov
test
and
pop
sbb
or
dec
inc
sbb
push
add
jmp
mov
sub
cmp
dec
pop
push
mov
adc
and
cmp
adc
pusha
pop
call
or
push
pop
adc
movs
mov
add
in
pop
sbb
test
shl
fild
je
cmp
mov
jbe
fs
pop
dec
sbb
pop
dec
mov
add
shufps
out
mov
dec
mov
out
dec
mov
inc
cmp
jmp
cmp
jae
fstp
lock
lea
or
jae
pop
jbe
mov
push
inc
pop
aas
xor
jmp
and
test
mov
es
push
adc
loope
pop
dec
add
mov
add
inc
pop
aaa
das
dec
gs
adc
je
bound
jo
sbb
dec
(bad)
sub
cld
add
push
fidiv
fistp
ins
add
and
neg
(bad)
imul
out
cmp
inc
das
mov
cmp
cmp
xchg
sbb
add
lock
and
and
mov
fild
loop
push
enter
add
pop
add
cmp
psrlw
pop
sub
dec
sub
dec
push
adc
mov
retf
pop
jo
sbb
add
stos
add
mov
xchg
sbb
jmp
cmp
xchg
enter
add
aas
jge
push
je
idiv
inc
repz
ret
(bad)
mul
push
xchg
inc
out
cmp
sub
mov
jmp
cmp
lods
mov
pop
jmp
dec
cmp
popf
pop
imul
mov
add
imul
xchg
jbe
ins
sbb
push
mov
sbb
nop
dec
adc
pop
mov
mov
sub
sbb
sbb
loopne
adc
cmp
aas
add
fisubr
mov
add
mov
pop
test
(bad)
pop
ds
cmp
sti
cld
gs
jmp
sbb
inc
das
cmps
mov
inc
sub
addr16
cli
cmp
les
test
inc
mov
push
ins
pushf
push
push
xor
test
xchg
push
sbb
jmp
push
jmp
jge
int3
icebp
jecxz
pop
je
sbb
sub
lock
add
xor
jbe
jmp
mov
mov
mov
in
ds
push
pop
je
dec
inc
dec
jne
mov
mov
add
enter
loop
mov
movs
adc
and
mov
pop
or
call
and
push
jmp
xchg
inc
mov
mov
and
sub
int
xchg
or
stc
pop
push
adc
popa
inc
(bad)
pop
call
push
and
clc
mov
dec
sub
test
mov
or
es
xor
mov
les
pop
imul
add
loopne
icebp
mov
mov
imul
loope
jo
add
jns
sti
sbb
inc
adc
or
out
push
adc
retf
call
push
retf
nop
pop
pop
fisttp
daa
or
pushf
fstp
call
test
xchg
(bad)
fidiv
adc
pop
(bad)
fidivr
add
cwde
ins
cmps
lock
int3
int3
cmp
push
ins
out
out
and
add
pop
ja
je
cmp
ret
(bad)
push
add
dec
mov
int3
pusha
inc
push
or
or
adc
fild
ret
outs
rol
mov
push
inc
jg
inc
loope
dec
cmp
sub
pop
cmp
test
gs
call
mov
sbb
icebp
inc
dec
xor
es
sub
inc
inc
and
inc
mov
cli
mov
mov
pop
repnz
adc
add
(bad)
jle
ss
mov
and
cmp
add
enter
add
mov
test
mov
push
mov
inc
call
clc
outs
icebp
xor
jbe
mov
push
inc
sbb
jae
int
jecxz
cmp
repz
push
sbb
mov
xor
mov
or
std
mov
sbb
xchg
mov
xchg
dec
push
push
loope
inc
mov
dec
int3
fs
add
clc
mov
and
cli
test
bsf
(bad)
(bad)
lock
sbb
daa
je
mov
push
sar
mov
mov
jne
int3
xor
js
jno
add
push
pop
xor
push
push
(bad)
inc
int
fidiv
fs
or
call
push
repnz
push
jns
adc
movs
jb
cmps
xchg
xor
js
ret
daa
iret
inc
sbb
mov
dec
sbb
xchg
cmc
fcom
iret
add
mov
adc
cmp
bound
jne
jmp
dec
cmp
or
xor
jmp
jmp
dec
jmp
dec
mov
mov
push
sbb
sbb
mov
fwait
xor
rcl
idiv
mov
icebp
add
(bad)
loopne
inc
aad
pop
jns
inc
in
in
xor
mov
lock
mov
mov
cmp
in
or
jbe
popa
mov
cdq
inc
pop
das
outs
jo
js
jl
fwait
jns
and
push
push
add
in
mov
cmp
ins
adc
sub
sub
add
sbb
xor
push
push
push
adc
xchg
imul
inc
inc
repz
sti
pop
xor
xor
and
outs
ja
or
stc
sub
and
and
mov
adc
or
mov
clc
cmp
jno
mov
sub
xor
pop
and
jmp
jo
or
pop
pop
pop
or
cmp
xor
aas
cld
xor
in
xchg
xchg
pop
das
pop
int
cwde
dec
pop
cmp
(bad)
mov
and
and
mov
cmp
je
mov
lods
fidiv
add
sub
and
jl
dec
cs
lea
mov
sahf
repz
imul
add
push
pop
add
add
repz
daa
add
cmp
dec
sti
push
cmps
add
jno
je
call
fld
add
inc
add
sbb
inc
xchg
pop
push
pop
xchg
cmps
repnz
or
or
jb
cmp
dec
or
pop
enter
or
xor
pop
or
mov
add
or
jns
pop
enter
or
in
cwde
push
push
inc
push
inc
push
ja
push
pmaxub
cmp
adc
pusha
adc
xor
fwait
sub
adc
push
inc
push
or
adc
in
cmp
add
adc
pop
call
call
adc
xor
push
push
push
sbb
iret
enter
xor
movs
mov
sbb
enter
sbb
call
add
sbb
in
jb
sbb
sbb
dec
sbb
je
pop
sbb
nop
out
add
jge
sbb
push
pusha
push
push
mov
push
pop
pop
jne
add
test
ins
loopne
retf
jae
test
add
add
cmp
xchg
jo
out
and
mov
imul
sub
mov
in
jno
repnz
mov
and
sar
(bad)
sbb
repz
cmp
mov
out
fwait
out
xor
xor
jge
mov
mov
dec
cwde
jmp
inc
jmp
push
nop
jmp
cmp
out
in
in
fsubp
add
in
cdq
mov
in
cmp
out
out
nop
adc
or
pop
mov
lock
xor
icebp
cmp
pslld
inc
enter
std
repz
sahf
cmp
ror
pusha
hlt
fdiv
jb
fwait
mov
jns
push
jg
mul
in
in
idiv
mov
call
cdq
add
lea
stc
inc
stc
cmp
retf
lock
cli
cli
iret
repnz
sbb
sbb
stos
cld
and
cld
je
cld
push
pslld
add
mov
xor
enter
sbb
(bad)
adc
mov
sbb
adc
add
dec
push
jae
dec
gs
in
dec
pop
inc
sar
cmps
dec
out
jecxz
xchg
pop
add
jecxz
std
sti
in
in
jns
in
icebp
mov
mov
bound
xchg
sti
out
out
jb
push
out
outs
call
add
sub
jae
and
pop
jmp
add
dec
jmp
cdq
(bad)
pop
leave
and
popf
in
rcl
fsub
dec
out
out
out
cdq
push
and
mov
cli
inc
add
pop
push
cli
sbb
xchg
stc
repz
add
stc
(bad)
push
scas
and
fstp
retf
stc
div
imul
cmp
xor
in
repnz
adc
out
clc
push
cmp
mov
retf
xchg
add
dec
sti
sti
cdq
mov
cld
inc
cld
cmp
sbb
cmp
sub
push
add
sub
mov
xchg
pop
ins
loop
icebp
mul
pop
and
imul
xchg
mul
sbb
pop
ins
nop
out
cdq
(bad)
out
xchg
inc
pop
pop
inc
mul
test
sti
test
call
mov
test
pop
xchg
neg
cs
out
jno
loop
push
inc
neg
not
sub
xchg
add
sbb
(bad)
repnz
cmc
pop
pop
repnz
cmc
jae
movs
test
cmc
div
jne
cwde
xlat
idiv
and
pop
add
clc
clc
sbb
popa
cmp
mov
pop
push
jno
xchg
hlt
pop
sub
xchg
cmp
hlt
push
hlt
push
loopne
adc
push
sar
and
int3
idiv
mov
push
(bad)
sti
lahf
ret
sahf
rcl
adc
jp
dec
loope
loope
(bad)
jns
jne
repz
scas
repz
and
test
in
imul
repz
repz
push
dec
push
cmp
bnd
sbb
mov
pop
repnz
jo
dec
jae
and
jb
sbb
and
pop
repnz
loope
jmp
mov
jns
je
div
icebp
jns
jne
jb
test
push
push
xor
loop
shl
cmc
add
cs
xchg
jecxz
fisttp
and
pop
call
pop
daa
xchg
inc
jne
push
lock
xchg
pop
xor
sbb
push
lock
test
ss
and
ret
adc
xor
ret
ret
mov
sti
ss
ds
add
inc
sahf
xchg
int3
add
stos
or
sbb
dec
add
push
xchg
add
adc
or
adc
add
sahf
(bad)
inc
and
jmp
call
or
push
inc
std
xor
call
mov
call
push
repz
call
jns
dec
and
jns
int
hlt
dec
aam
loopne
add
ss
out
push
jb
(bad)
dec
mov
cmp
mov
ret
push
inc
daa
xor
mov
dec
cwde
out
les
mov
in
hlt
pop
or
idiv
dec
sbb
inc
push
push
xchg
mov
push
enter
jmp
fadd
sar
iret
repz
sar
mov
and
or
sbb
mov
nop
pop
inc
pop
out
in
xchg
inc
xchg
pop
pop
nop
movs
push
enter
daa
sub
outs
mov
inc
out
sahf
test
ins
add
xchg
icebp
jns
xchg
or
xchg
dec
add
xchg
test
inc
rcl
imul
loop
dec
mov
les
pop
jae
mov
adc
mov
xor
xchg
or
mov
xchg
xor
or
xchg
rol
mov
cld
inc
and
add
sbb
jnp
push
call
push
mov
inc
(bad)
fimul
ret
adc
add
fidiv
or
push
ins
xchg
addr16
pop
and
push
sub
dec
into
pop
sbb
cmp
inc
test
pop
lock
iret
push
push
xchg
ficomp
call
in
int3
dec
cmp
ds
popa
mov
call
push
and
test
xchg
and
inc
mov
movs
fist
sub
and
adc
push
sub
in
adc
call
mov
or
mov
cmp
add
jbe
les
jne
neg
fadd
std
pop
rcr
jnp
lea
not
inc
and
je
add
shl
pop
aam
cmp
jb
dec
not
and
pop
adc
sub
aam
adc
jecxz
mov
jb
test
mov
sub
lods
dec
pop
and
inc
sub
lea
jg
cmp
fidivr
fiadd
inc
addr16
or
ja
pusha
mov
cmp
add
mov
jmp
mov
sar
nop
mov
inc
inc
inc
inc
data16
mov
push
sti
add
out
jle
cmp
add
sbb
mov
jno
pusha
mov
hlt
add
pop
add
mov
and
nop
nop
int3
out
xor
pop
gs
fild
mov
fadd
ror
sahf
xchg
jb
cs
or
add
adc
xor
or
loop
cld
dec
dec
inc
mov
hlt
clc
pop
out
lahf
pushf
jnp
push
mov
clc
add
dec
repnz
and
daa
addr16
enter
jbe
cmps
and
jecxz
push
adc
cdq
adc
cmp
js
xor
add
mov
jae
(bad)
loope
xchg
mov
pop
add
test
or
sub
sar
mov
cmps
cmp
inc
pop
ja
dec
rol
(bad)
je
shr
jno
add
xor
push
cmp
pop
pcmpeqb
sbb
push
sbb
mov
dec
dec
and
push
inc
or
jle
push
or
lock
xor
loopne
pop
inc
sub
xor
adc
retf
enter
loope
dec
sub
dec
dec
fcom
push
xor
adc
je
jae
jo
sbb
mov
mov
adc
sub
sar
dec
mov
dec
sbb
cmp
add
dec
aas
arpl
lea
mov
dec
mov
mov
mov
push
pop
dec
ds
pop
sbb
cmp
and
xor
inc
dec
dec
sub
cdq
add
ins
add
push
or
hlt
sub
mov
mov
sahf
stos
movs
mov
mov
add
and
dec
enter
adc
mov
push
or
dec
xor
enter
xchg
or
mov
mov
das
jne
xchg
movs
cmc
popf
add
add
mul
adc
aaa
adc
mov
sbb
repnz
or
sbb
inc
add
cli
js
add
xchg
mov
and
push
cdq
loope
add
push
adc
push
sub
dec
in
sub
sub
push
enter
data16
aaa
jo
test
mov
inc
call
add
sub
rol
inc
or
push
out
loopne
adc
adc
push
sub
dec
mov
sub
sub
sub
mov
in
call
jg
js
lea
enter
mov
lock
aas
in
scas
popa
dec
dec
dec
(bad)
jg
jge
(bad)
fmul
sbb
push
clc
jmp
and
cwde
vaddpd
mov
sbb
daa
sbb
cmp
(bad)
mov
add
daa
mov
xor
fld
mov
jne
retf
iret
adc
jmp
ror
mov
add
inc
xor
add
enter
xor
(bad)
nop
ret
inc
push
sbb
or
add
popa
loopne
je
pop
jo
push
(bad)
psubb
outs
sub
movs
jle
xchg
clc
lea
and
sub
inc
pop
sub
sbb
loop
and
push
daa
xchg
mov
jo
pop
add
pusha
mov
mov
(bad)
xor
mov
in
and
add
cld
inc
or
adc
mov
in
mov
daa
inc
add
outs
jmp
ss
inc
arpl
and
cld
dec
(bad)
test
jne
xchg
sub
xor
ins
sbb
xor
cmc
pop
imul
out
add
ret
ins
inc
aam
rcr
sbb
jl
fldenv
jmp
push
sub
test
icebp
dec
or
int3
add
mov
pop
rcl
mov
jg
dec
shl
jmp
int
or
icebp
call
int3
shl
dec
or
mov
sbb
mov
xchg
cli
fsub
ja
xchg
nop
movs
dec
or
pop
and
add
loopne
pop
popf
inc
pop
or
push
aas
dec
fld
inc
ret
mov
adc
xor
pop
ficom
sbb
dec
out
shl
push
les
and
cmp
dec
or
out
ror
popf
shr
ret
cmp
pop
jne
mov
sbb
add
ss
sub
cmp
push
jbe
inc
mov
inc
inc
sub
and
icebp
retf
ret
push
adc
inc
jno
sub
xor
test
ds
mov
mov
dec
pop
pusha
pop
call
mov
cmps
cmp
cmp
add
je
(bad)
out
sub
or
and
mov
or
mov
aad
shr
push
movs
pushf
lock
xor
sub
or
adc
addr16
into
and
inc
call
jl
sbb
popf
pop
and
fadd
mov
movs
xchg
(bad)
inc
xor
ds
pop
or
cwde
mov
aad
mov
pop
or
retf
pop
and
out
out
sbb
fisttp
adc
test
nop
loopne
adc
add
mov
cmp
or
sub
(bad)
jge
push
(bad)
or
push
jg
xor
jnp
sub
mov
sub
pop
sahf
mov
inc
mov
adc
repz
jbe
and
iret
lods
dec
pusha
push
lds
(bad)
popa
loop
inc
cmp
jb
in
push
add
std
adc
push
pop
jle
test
add
fcmovu
push
and
push
cmp
ror
mov
in
or
mov
adc
and
int
cmc
imul
push
fs
push
sar
push
sub
nop
ins
cwde
arpl
jmp
rcr
xchg
push
dec
imul
xor
jne
xchg
outs
dec
mov
clc
xchg
mov
add
inc
add
or
xor
cmp
mov
test
jmp
mov
bnd
test
or
and
aaa
xor
stos
mov
push
in
ins
gs
xchg
out
test
xor
fmul
xor
and
loop
mov
sbb
mov
pop
out
mov
imul
dec
xor
add
sbb
mov
arpl
or
inc
push
lock
hlt
xchg
sbb
mov
xchg
clc
shr
mov
addr16
mov
lock
jle
inc
in
push
test
mov
enter
movs
test
mov
ja
out
fdiv
xor
dec
ret
push
xchg
shr
not
call
inc
and
mov
jg
(bad)
ins
jmp
push
adc
xor
cmp
adc
mov
hlt
and
pop
gs
add
dec
pusha
inc
(bad)
jl
mov
sbb
cld
arpl
imul
push
or
fidivr
mov
shl
jmp
or
add
pop
pop
test
adc
or
adc
push
nop
icebp
(bad)
fld
inc
or
dec
mov
ins
ins
enter
retf
inc
aam
inc
push
sbb
pop
or
mov
cmp
mov
and
sar
sahf
and
jo
push
int
dec
xchg
add
mov
mov
in
cmps
xor
xchg
or
icebp
div
xchg
cmp
dec
xchg
dec
add
shl
shl
dec
add
pop
jmp
xor
pop
call
dec
pusha
pop
lods
pop
xchg
push
adc
hlt
mov
adc
pushf
dec
xchg
icebp
fnstcw
(bad)
(bad)
call
mov
daa
test
ds
lahf
fld
lods
sub
add
jmp
sub
mov
mov
into
add
test
pop
push
xlat
gs
adc
inc
push
push
ins
sub
pop
pop
xchg
jg
mov
shl
inc
add
cld
sbb
add
push
lods
add
movs
out
dec
sub
add
scas
jne
dec
loop
adc
rol
jbe
jp
scas
jle
cmp
je
dec
jne
jmp
sbb
mov
sub
out
jns
mov
sbb
addr16
push
inc
shl
push
jmp
je
push
dec
jmp
pusha
mov
push
lea
sbb
mov
ja
xor
mov
pop
sub
into
push
xchg
nop
mov
and
mov
push
cmp
test
xor
inc
push
js
add
mov
sub
movs
pop
push
fs
mov
sub
push
stos
movs
mov
dec
xchg
mov
push
cmps
push
sub
pusha
pusha
fisub
pop
loopne
push
push
push
fdivr
xchg
lea
add
dec
and
add
add
sbb
jne
adc
and
or
sbb
xor
(bad)
adc
cmp
shl
cwde
mov
xchg
imul
add
call
or
aas
sbb
dec
aam
or
cmp
cdq
aam
xor
xor
or
push
cmp
and
jo
outs
push
outs
pop
push
(bad)
lods
mov
mov
jnp
inc
fs
out
sbb
xchg
push
mov
loop
push
fild
and
je
idiv
xchg
xchg
je
xchg
or
cwde
xchg
mul
js
xor
pop
outs
pop
je
test
sub
outs
xchg
hlt
add
add
jp
mov
loope
jmp
inc
mov
or
in
mov
stc
int3
pop
or
cmp
push
leave
or
inc
sub
mov
xor
add
fneni(8087
les
or
inc
jl
xchg
push
xchg
test
and
sub
sub
inc
adc
repz
je
loop
mov
pop
pop
in
or
cs
or
push
mov
mov
pusha
ds
cmps
test
mov
and
add
shl
loop
loope
sub
mov
mov
jl
loop
bound
dec
iret
scas
sub
fwait
push
popa
or
ins
cvttsd2si
ret
aaa
pop
add
add
cmp
and
cs
mov
rcr
lock
fldcw
sbb
jl
xchg
fcomp
mov
stc
pop
das
movs
outs
(bad)
cmp
jmp
fstp
icebp
add
rcl
aas
add
je
test
sub
das
fcomp
mov
adc
ret
fstp
sbb
cmp
leave
out
imul
idiv
sub
test
sbb
jnp
jmp
push
xlat
pop
iret
push
pop
push
and
or
or
inc
data16
fld
pushf
fsubr
pop
daa
or
jmp
xchg
xor
jo
cmp
sub
jb
inc
push
fstp
jo
jne
pop
(bad)
rcl
push
sbb
dec
rol
add
or
retf
pop
mov
lea
and
push
inc
out
in
fdiv
mov
int3
push
dec
stc
popa
cdq
in
or
nop
mov
xchg
pop
iret
(bad)
call
inc
push
inc
push
jmp
dec
shr
fiadd
push
mov
or
add
add
stos
mov
mov
mov
xchg
pop
sbb
fld
or
aaa
jl
mov
or
push
pop
daa
or
repz
les
inc
call
je
sbb
dec
lods
gs
mov
imul
sbb
push
push
sbb
and
inc
xor
add
pop
out
lock
test
pop
ret
mov
mov
in
jl
adc
pop
xor
xchg
inc
sbb
xor
inc
inc
adc
call
mov
sub
rol
sub
jp
fmul
call
or
pop
fidiv
and
jne
stos
push
out
js
cmc
inc
rol
cmps
je
pop
or
add
jmp
test
aam
out
(bad)
mov
mov
push
(bad)
sahf
ror
jb
pop
sbb
and
es
jmp
fiadd
sub
inc
ins
inc
(bad)
jmp
das
je
mov
shl
pop
sub
ja
mov
pop
add
mov
ret
ficomp
adc
or
jl
mov
imul
dec
and
jne
dec
ins
mov
loopne
pusha
jae
push
jb
rcl
je
push
cdq
and
sbb
pop
retf
enter
leave
fimul
cmp
stc
idiv
sbb
adc
adc
test
or
mov
es
adc
push
jb
call
cwde
ds
fs
enter
in
pop
pop
jmp
push
pop
(bad)
mov
dec
pop
inc
sub
inc
pusha
sbb
sbb
ja
mov
dec
fadd
push
out
cmp
jno
xchg
test
and
push
rcr
inc
sbb
cmc
imul
push
jbe
pop
or
adc
add
jle
setb
pop
dec
and
or
and
add
add
clc
rol
clc
pusha
jmp
cmps
xor
fidivr
ffreep
xor
ds
add
add
add
shl
inc
pop
or
int3
fistp
cmc
ds
test
imul
pop
outs
sbb
bnd
test
ret
adc
sbb
cmp
jb
inc
add
add
out
dec
repnz
xchg
or
retf
sbb
push
sbb
inc
push
push
repz
ss
aad
push
aam
push
loope
aam
clc
adc
out
or
sbb
mov
mov
mov
lea
mov
add
fild
dec
cli
or
add
jmp
inc
sub
inc
loop
icebp
fwait
aad
jbe
or
push
cld
jb
add
lock
aam
sub
mov
dec
dec
dec
loope
aam
xor
dec
test
push
or
ret
adc
add
adc
push
cmp
cli
outs
adc
jmp
in
daa
leave
push
enter
and
sbb
and
dec
xor
or
jo
cmp
rol
pop
not
or
or
in
mul
and
call
(bad)
or
adc
lods
inc
xlat
mov
aas
cmp
call
or
test
les
ficomp
outs
mov
sbb
xchg
jnp
xor
cs
in
sbb
idiv
(bad)
sub
adc
shr
inc
push
xor
dec
daa
shr
rcr
shr
rcr
or
jne
lock
fisubr
sbb
enter
shl
cmp
clc
pop
cmp
ret
jle
jbe
dec
cwde
bnd
pusha
mov
gs
xor
push
call
sbb
inc
outs
cmps
mov
mov
or
test
push
add
in
xchg
jo
fwait
xchg
add
or
loope
sbb
bound
fdiv
cmp
push
jb
mov
xor
ja
cdq
adc
push
inc
cmp
jge
adc
push
mov
repnz
cli
or
inc
movs
push
iret
test
loopne
lds
mov
sub
xor
or
xchg
push
cmps
jae
outs
jo
test
test
dec
xor
xor
pop
or
(bad)
ror
arpl
and
invd
lock
outs
mov
test
adc
jmp
mov
inc
adc
lahf
cmp
xor
sub
or
or
sub
and
fwait
or
lods
je
cwde
add
repnz
or
dec
adc
fimul
add
push
push
retf
data16
sub
aam
cs
ja
jo
or
ror
cmp
loope
mov
push
and
call
or
and
aam
adc
adc
in
sbb
xor
pop
mov
fs
pop
imul
dec
jae
push
pop
sub
dec
ja
push
cmp
dec
adc
sbb
adc
dec
jmp
add
pcmpeqw
adc
js
adc
mov
jg
mov
cmp
aam
fcom
dec
add
nop
enter
adc
hlt
shr
jbe
lea
and
loopne
inc
outs
inc
cmp
add
add
or
outs
add
adc
adc
inc
add
sub
shl
mov
mov
jne
mov
add
neg
(bad)
nop
sbb
shl
add
ret
xchg
in
mov
cmp
add
add
mov
mov
pop
mov
jmp
mov
and
sti
xchg
and
lea
xchg
sbb
js
je
mov
ds
xchg
pop
jo
inc
ins
sub
push
xchg
sub
lods
mov
fild
mov
or
mov
xchg
outs
sbb
call
add
sbb
inc
pop
enter
mov
jecxz
adc
inc
xchg
push
popa
call
pusha
or
push
jo
inc
inc
push
xor
mov
in
sbb
lods
add
or
les
in
pop
jmp
mov
push
mov
fmul
adc
mov
pop
ret
test
or
and
add
adc
jecxz
and
hlt
adc
cmps
add
test
nop
jo
inc
cdq
adc
jmp
add
or
push
inc
out
sub
mov
sub
and
or
mov
outs
pop
inc
fcomp
adc
jp
cmps
pusha
out
adc
outs
test
ds
push
add
push
jnp
dec
lahf
fdivr
dec
mov
jae
adc
adc
scas
subps
fiadd
mov
xor
or
xchg
sar
xor
pop
imul
add
xchg
pusha
ss
clc
add
out
loopne
pop
or
bound
push
(bad)
mov
int
ret
jmp
xor
cmps
ins
loopne
jmp
dec
fstp
mov
or
push
sub
test
push
adc
and
dec
add
push
pop
ins
sbb
or
add
pop
pop
jo
mov
or
ret
inc
ins
dec
adc
mov
mov
test
jg
dec
xor
out
pop
lods
inc
push
xchg
adc
jg
enter
and
les
jmp
mov
dec
neg
pop
push
fimul
sbb
xor
cmp
jo
or
ins
push
dec
push
js
xor
imul
retf
(bad)
sahf
add
lea
xchg
aam
cmps
xor
shl
add
imul
pop
jmp
jmp
test
movs
add
(bad)
mov
or
call
xor
pop
je
outs
call
inc
lea
mov
mov
sbb
dec
outs
cmps
cmp
jbe
movs
and
xchg
add
fimul
mov
rcr
lods
mov
cs
test
std
stos
inc
retf
mov
mov
sub
cmp
jno
add
ja
lock
fsubr
pop
stos
add
neg
shr
test
and
pop
or
ret
cmps
jge
ja
and
push
xchg
mov
shr
ins
fwait
sbb
sub
sahf
sub
ds
ja
mov
push
pop
ficomp
int3
mov
or
int3
gs
test
js
(bad)
or
sub
cmp
pop
mov
pop
xchg
mov
dec
jo
inc
push
and
inc
dec
push
shr
add
repnz
test
push
sub
sbb
loopne
mov
xchg
je
or
cmp
xor
ja
push
mov
sub
ins
mov
lea
ins
or
mov
adc
and
pop
pusha
ror
mov
adc
jae
push
jb
imul
xor
push
sbb
pop
std
test
in
imul
std
add
shr
js
pop
fst
mov
movs
jbe
adc
daa
push
push
in
enter
add
outs
out
rcl
sbb
fisubr
inc
test
(bad)
push
push
pusha
sbb
push
sbb
imul
inc
je
adc
cmp
ret
loopne
ret
add
aam
inc
(bad)
mov
ss
loopne
mov
adc
(bad)
(bad)
cmp
loopne
outs
nop
lods
out
retf
push
call
jb
xchg
xchg
ins
and
mov
cmc
cmps
cmp
add
cmp
or
jns
or
push
xchg
jne
mov
loopne
data16
mov
es
lea
pop
and
xlat
loopne
popa
popf
outs
lahf
je
add
pop
aam
(bad)
xlat
adc
xchg
xchg
push
pop
jnp
mov
jmp
mov
ds
mov
cmp
xchg
cs
fsub
lea
mov
adc
xchg
je
mov
aaa
sbb
jnp
push
mov
xor
out
sti
daa
hlt
jo
je
(bad)
adc
gs
adc
mov
fmul
add
imul
lods
outs
jne
add
shl
or
jg
leave
mov
cmp
popa
lods
jp
adc
add
or
test
or
pop
mov
ret
stc
mov
or
and
or
js
mov
test
xchg
mov
cmps
mov
push
push
addr16
xor
add
adc
push
scas
add
sub
outs
out
mov
mov
add
lods
je
xchg
adc
xor
mov
popa
mov
or
sub
and
shl
sbb
adc
es
les
out
fisttp
jne
jae
dec
mov
mov
cmp
sbb
ret
daa
test
sub
inc
loop
cmp
push
push
mov
mov
mov
and
jecxz
mov
pop
cdq
mov
add
cmp
not
inc
leave
mov
add
(bad)
es
xor
loopne
sub
or
icebp
loop
nop
mov
add
push
or
or
push
push
neg
xchg
cdq
jmp
sub
add
fdivr
ins
fidivr
or
aaa
sbb
jg
icebp
shr
add
fisubr
scas
movs
outs
call
mov
jge
das
lds
xor
push
test
or
add
push
mov
push
sub
sub
push
xor
adc
sub
push
push
rcl
adc
xor
cmp
xchg
es
mov
jp
sbb
out
xchg
movs
ret
mov
test
mov
dec
outs
sub
sub
xor
adc
mov
inc
push
mov
imul
xor
and
mov
aad
test
inc
hlt
or
pop
gs
shl
in
adc
jno
mov
mov
jo
add
cmp
and
in
shld
jmp
test
je
jmp
les
shr
sub
add
les
add
xor
xchg
inc
adc
adc
push
daa
lea
xor
adc
or
push
push
xor
adc
jbe
pop
mov
sbb
dec
call
push
mov
push
(bad)
adc
and
push
inc
jae
inc
mov
fld
add
inc
int
adc
fist
jmp
inc
adc
xor
shl
in
jl
je
lods
dec
inc
lds
sub
lods
sbb
sbb
mov
lods
out
jle
lock
dec
mov
jnp
addr16
or
icebp
sub
loop
out
cmps
ror
sbb
add
push
add
inc
rol
(bad)
hlt
mov
mov
xchg
rcr
ucomiss
mov
movs
cdq
add
nop
pushf
cwde
mov
inc
push
push
lods
lea
and
add
data16
inc
cs
mov
mov
icebp
jg
call
and
das
cmp
pushf
mov
lods
ins
mov
pop
and
movs
mov
sub
push
pop
inc
inc
dec
or
js
popf
dec
adc
inc
jbe
call
add
lea
sub
je
dec
adc
loop
or
inc
adc
in
adc
sub
push
repnz
lea
in
xchg
cmp
gs
sbb
inc
lods
lea
pop
leave
sub
loopne
sub
inc
inc
xchg
fmulp
dec
sub
xchg
adc
inc
inc
mov
pop
inc
inc
sub
test
daa
xor
inc
inc
inc
hlt
in
in
sbb
mov
sub
push
dec
inc
xchg
xchg
inc
repnz
test
pushf
pushf
cmp
lods
pop
inc
dec
mov
xchg
pushf
mov
add
inc
dec
xchg
jge
jb
push
nop
sbb
nop
int
test
mov
xor
nop
xchg
dec
arpl
cwde
mov
scas
and
dec
push
mov
mov
dec
adc
xchg
dec
in
and
sahf
xchg
sahf
push
sbb
dec
leave
sub
shr
cmp
test
cld
fwait
inc
add
mov
mov
mov
dec
dec
and
jb
mov
mov
xchg
pop
mov
xor
mov
mov
fild
jnp
nop
movs
dec
cmp
inc
mov
dec
hlt
(bad)
pushf
aas
jne
test
pushf
retf
pushf
add
enter
mov
push
enter
test
mov
nop
xchg
mov
jne
inc
inc
xor
in
push
leave
jne
test
add
in
test
cwde
leave
and
mov
repnz
mov
mov
xchg
cmp
cmp
ret
xchg
mov
mov
cwde
sbb
dec
sti
scas
sub
push
xchg
push
jmp
jno
mov
ss
add
bound
pop
fnstcw
push
sbb
stc
std
pop
cmp
jo
or
jns
jns
cmp
cmp
push
xor
push
push
jbe
cld
mov
pop
mov
test
call
mov
push
daa
xchg
(bad)
sub
sar
mov
into
idiv
mov
js
(bad)
out
mov
add
sub
mov
or
inc
inc
adc
add
or
sub
push
(bad)
cld
sbb
rcl
sub
mov
cmps
or
push
or
and
hlt
(bad)
mov
push
adc
and
sbb
mov
int
loop
ffree
jle
stos
add
mov
sti
jg
or
mov
inc
dec
jne
lea
mov
add
xchg
int3
inc
dec
es
cwde
sti
add
loopne
(bad)
shl
lods
cld
pusha
mov
hlt
xchg
out
dec
mov
adc
retf
pop
mov
or
pop
and
lea
movzx
add
std
push
push
xchg
or
xor
mov
sbb
jne
ror
inc
cmps
icebp
in
enter
aad
add
or
in
jmp
clc
push
cmp
jns
inc
inc
add
dec
and
stos
mov
dec
mov
(bad)
test
push
or
mov
cmps
mov
add
(bad)
sub
sub
test
add
sar
push
pop
pop
mov
sub
mov
stos
sti
push
or
pop
and
mov
icebp
ror
cmps
shl
push
and
and
popf
dec
jnp
inc
jb
cbw
add
or
xor
pushf
add
dec
mov
mov
mov
mov
fisubr
cld
loopne
push
or
xlat
xor
push
js
or
lods
xor
add
ret
add
jno
sbb
ja
or
pop
ins
push
loope
or
sbb
jo
mov
or
jge
cmc
cmp
pusha
je
or
rcl
cmp
pmulhuw
aas
sbb
rol
sbb
in
cmp
std
jne
inc
pop
jmp
sub
adc
inc
add
xor
adc
jmp
push
(bad)
push
inc
jmp
scas
push
push
xchg
jns
aad
cmp
sub
push
jnp
cmp
not
xchg
mov
xor
shr
pop
test
adc
out
(bad)
out
scas
push
std
mov
pop
inc
imul
dec
mov
dec
and
xor
mov
or
mov
es
adc
sbb
mov
clc
int
addr16
and
lea
rcl
aad
push
xor
inc
jb
popa
mov
arpl
push
jl
iret
add
mov
das
jmp
mov
sar
ds
div
xchg
mov
cmp
bound
inc
xor
mov
inc
adc
xor
(bad)
sub
jnp
inc
test
mov
lea
clc
call
mov
inc
mov
inc
inc
inc
dec
or
inc
movsx
inc
(bad)
dec
ds
and
jb
ret
jbe
mov
(bad)
out
xor
fdiv
mov
inc
dec
jne
sbb
xor
aam
or
retf
jnp
mov
xor
inc
es
inc
and
mov
nop
cmc
xor
push
aaa
mov
retf
fcomp
add
into
clc
push
mov
add
pop
imul
sub
inc
mov
rep
and
jno
or
pushf
add
sbb
push
xor
out
dec
loope
daa
adc
sub
ins
ror
cmp
jo
ins
jmp
pop
add
(bad)
pusha
xor
and
test
out
mov
dec
and
clc
add
pop
jl
sbb
inc
jmp
xor
mov
mov
jmp
push
inc
sbb
inc
ins
adc
push
call
push
push
aad
jg
sub
and
bound
cmp
mov
shl
(bad)
in
dec
xor
xchg
int3
pop
mov
test
sahf
repz
push
je
cmp
inc
fisubr
es
je
cmp
jne
sbb
jp
popf
mov
scas
nop
data16
cmp
pop
pop
inc
mov
fstp
data16
mov
inc
sbb
sub
xor
sub
or
(bad)
xchg
loopne
push
add
cmp
inc
ror
or
aaa
out
jle
pop
cmp
shl
or
outs
mov
dec
sub
fisubr
cmp
leave
out
xchg
jecxz
daa
icebp
jg
aad
hlt
jo
mov
or
dec
sbb
leave
rcr
push
pop
cmp
das
cmp
call
ret
adc
fsubr
loopne
shl
cdq
or
adc
jg
adc
or
sub
adc
push
les
aaa
dec
xor
push
sbb
xor
push
pop
pop
les
in
xchg
les
and
cmp
dec
retf
dec
(bad)
jmp
test
push
mov
es
xor
and
ins
xchg
nop
add
inc
ja
mov
test
mov
nop
enter
add
jge
adc
fnsave
dec
pop
mov
push
push
xor
idiv
lock
and
or
and
ret
int3
lods
in
or
xor
xor
dec
push
jb
and
scas
movups
mov
push
aad
adc
dec
mov
mov
mov
cmp
rcr
outs
or
or
xlat
push
iret
and
stc
(bad)
and
mov
push
dec
or
jmp
xchg
test
scas
mov
test
xchg
cld
pop
jb
mov
js
fnstsw
icebp
and
sbb
mov
sbb
inc
ror
push
dec
mov
mov
push
rol
xor
mov
ds
mov
add
add
icebp
dec
push
and
dec
ret
movs
mov
mov
das
repz
adc
push
or
push
or
xchg
je
pusha
push
xor
pop
cld
push
mov
add
dec
add
popa
lea
adc
popa
call
ins
shl
ins
push
push
jns
cmp
shl
ret
popa
loopne
push
sub
mov
dec
mov
idiv
push
push
mov
push
add
scas
dec
jne
cs
add
sub
fistp
or
sub
sti
jecxz
retf
or
stos
sub
push
inc
pushf
lock
ins
add
jb
pop
cmp
dec
sbb
cmp
inc
and
push
mov
xor
xor
ins
jmp
adc
loope
inc
jne
cmp
fcomp
pop
pop
cmp
bnd
ror
xchg
test
dec
push
je
ret
addr16
or
lods
pop
sahf
cmp
lds
xor
push
mov
lods
pop
cmp
aam
sbb
pop
ror
xor
fisub
push
cdq
mov
or
sub
ja
mov
scas
sbb
retf
gs
push
outs
loopne
dec
mov
shl
es
adc
pop
es
xchg
test
sub
fild
ja
ja
mov
ja
inc
mov
stos
ins
int
jge
inc
gs
retf
pop
mov
and
and
neg
inc
fldcw
push
push
dec
add
or
or
and
xchg
aas
addr16
adc
adc
push
outs
mov
sar
mov
push
mov
in
outs
cld
inc
cmp
je
cmp
dec
push
shr
jo
dec
dec
and
jle
mov
test
je
add
les
mov
mov
push
in
(bad)
pop
sub
je
jmp
hlt
ins
mov
mov
cmp
push
(bad)
retf
adc
push
int3
es
inc
add
mov
add
cs
stos
add
jmp
pop
fiadd
and
or
(bad)
mov
mov
and
loope
and
add
push
test
push
inc
xor
jp
or
mov
pushf
jecxz
adc
xor
jb
mov
dec
fsubr
dec
cmp
retf
jne
and
lods
mov
push
xor
ins
mov
inc
(bad)
pop
shl
inc
mov
movs
mov
retf
add
loopne
jl
scas
fst
cs
and
fmul
shr
lds
cdq
sub
cld
sti
dec
jge
jle
ja
mov
aas
push
and
xor
inc
out
push
rol
fdiv
mov
out
xchg
cmp
adc
loop
xchg
push
loopne
sub
enter
jno
clc
imul
div
sbb
cmp
adc
pop
xor
inc
jnp
pushf
xor
icebp
cmp
push
hlt
cmp
adc
nop
bnd
mov
loopne
push
or
push
inc
push
lods
sbb
add
add
push
push
add
jmp
adc
mov
dec
ficomp
jbe
adc
add
not
jno
jb
cmp
adc
test
push
sahf
adc
sbb
es
fdivr
mov
outs
cmp
inc
sti
mov
mov
loop
ins
push
dec
cmp
call
fcom
pop
xchg
xor
jle
jg
or
mov
ja
enter
sti
je
and
nop
retf
mov
pushf
rcl
fs
loop
add
jecxz
and
adc
add
and
xor
adc
cmp
scas
and
or
and
pop
cmp
ret
pop
xchg
adc
shl
jle
call
lea
or
and
lods
adc
or
dec
sub
xchg
mov
ds
mov
xchg
test
popf
and
es
mov
out
mov
xlat
data16
nop
sbb
jg
adc
test
xor
pusha
pop
test
pop
jo
jns
adc
mov
pop
lods
adc
cdq
mov
cli
(bad)
out
or
dec
cmp
xor
xchg
xor
add
sub
cwde
adc
retf
dec
and
mov
add
add
sub
arpl
movs
push
cld
std
imul
jmp
neg
jle
mov
xor
lock
adc
cmp
jns
dec
xor
cmps
xchg
clc
pushf
hlt
add
and
stos
pop
lock
push
int
mov
dec
pop
test
jbe
and
leave
imul
add
(bad)
(bad)
xchg
xchg
clc
add
push
dec
jmp
push
test
jo
pop
or
fwait
push
cmp
(bad)
lock
sub
xchg
inc
not
push
and
ins
fadd
out
or
adc
mov
add
lea
out
add
pop
inc
cmc
pop
xchg
cmp
punpckhdq
cmp
add
jge
fidivr
dec
fstp
shl
icebp
scas
cmps
and
xchg
icebp
xchg
fist
mov
ins
leave
sub
les
add
sar
call
add
cmp
fdivr
pop
inc
push
jne
push
je
dec
xor
out
or
add
daa
lahf
xor
(bad)
jge
outs
or
add
and
push
clc
aam
or
outs
push
xchg
sbb
test
adc
sbb
lock
push
mov
push
or
sbb
imul
mov
push
cmps
mov
out
scas
push
cmp
dec
or
dec
lods
sub
(bad)
mov
cmp
ss
sub
cmp
jno
or
fs
add
test
push
cs
or
ins
and
push
into
and
ja
and
jno
leave
adc
test
or
push
or
push
cmp
jmp
ins
add
jecxz
sub
sbb
inc
adc
ins
ret
and
fnstcw
or
push
mov
int3
and
dec
ror
retf
ja
push
xchg
rcl
xor
add
mov
cs
ret
(bad)
mov
cli
add
cmp
jbe
push
pop
mov
xchg
int3
mov
cld
cmp
mov
shr
(bad)
jmp
jg
push
not
and
dec
jne
add
sbb
sbb
dec
retf
mov
xor
push
inc
fdiv
push
jnp
and
fs
and
or
and
mov
jmp
xchg
jecxz
add
and
mov
and
sti
add
add
cmp
jbe
call
cmp
clc
xor
out
and
cmp
je
ret
pop
mov
cmp
mov
out
not
and
sub
pop
dec
push
and
repnz
sbb
pop
xor
cdq
jle
retf
jae
gs
add
cld
leave
xacquire
stos
xchg
retf
test
fimul
call
cwde
neg
pop
dec
or
adc
xchg
pusha
mov
mov
inc
mov
ror
push
push
xchg
jl
lahf
loope
push
or
pop
mov
pop
dec
or
jmp
dec
adc
(bad)
push
mov
or
and
mov
sbb
jecxz
int
fldenv
cmps
adc
je
movs
cmps
add
inc
rol
or
test
scas
jp
push
cmp
add
push
or
sub
and
inc
adc
dec
adc
add
and
bound
gs
push
push
iret
cmp
mov
test
push
and
sbb
fld
enter
cmc
rol
adc
dec
jmp
cmp
movs
push
ins
je
jg
pop
pop
push
mov
inc
inc
mov
xchg
adc
dec
xor
xor
adc
mov
test
test
add
js
jmp
pop
std
cdq
dec
cmc
neg
les
or
dec
jecxz
push
(bad)
lods
pop
cli
add
sub
adc
stos
jmp
push
ins
and
fcmovne
inc
scas
mov
call
loope
test
mov
add
inc
nop
stc
mov
imul
xchg
mov
add
push
push
mov
dec
in
mov
sti
sahf
adc
jns
push
adc
jg
lods
das
lea
xor
iret
shr
pop
clc
pop
pop
cmp
dec
clc
inc
inc
js
scas
nop
sub
adc
out
out
xor
lock
sub
mov
add
pop
cmc
adc
add
or
in
test
sub
sahf
inc
stos
mov
jnp
mov
mov
in
test
cli
fsubr
or
js
shl
mov
shl
push
or
xchg
or
add
push
push
sbb
sub
pop
shr
or
cld
(bad)
add
dec
cmp
push
mov
and
outs
jl
fimul
mov
test
dec
add
clc
fnstcw
repz
mov
stc
add
mov
or
xchg
pop
push
mov
leave
dec
add
sbb
push
mov
add
ds
add
cmp
pop
dec
or
adc
test
mov
sahf
dec
push
xor
(bad)
add
aas
and
aad
pop
xchg
pop
sbb
clc
pop
jg
rcl
int3
adc
jle
sbb
cmp
shl
push
pop
adc
inc
sub
pop
sbb
iret
jmp
add
data16
and
jmp
imul
push
xor
add
push
xor
mov
sti
xchg
push
fs
add
sbb
xor
push
scas
push
jge
mov
dec
inc
dec
ins
pop
xor
push
xchg
loopne
mov
aam
int3
loopne
scas
xor
movs
pop
fiadd
or
cld
ds
xor
cmp
(bad)
xor
inc
into
je
fisttp
add
cmp
pop
je
aam
ja
ja
dec
jbe
add
adc
mov
ja
dec
lea
mov
mov
adc
cld
mov
push
sub
push
bswap
mov
out
cmp
(bad)
xchg
xor
jns
dec
dec
retf
ret
or
xchg
outs
pusha
push
push
js
test
and
xor
push
dec
sub
push
jge
or
shr
xor
xchg
xor
cmps
adc
loopne
inc
or
mov
cmp
or
mov
add
jb
or
jg
sbb
add
jne
jmp
and
fiadd
xor
popf
mov
aaa
arpl
outs
or
stos
jle
and
sbb
test
icebp
inc
stos
cs
push
xlat
mov
xchg
inc
inc
pop
cmp
(bad)
fdivr
je
mov
cli
dec
lds
aas
imul
ret
mov
dec
pop
iret
jne
xchg
xchg
mov
dec
push
cdq
rcr
fcmovbe
xchg
add
mov
out
mov
dec
mov
and
jne
rol
mov
fdivr
leave
inc
test
inc
push
pushf
mov
sub
sub
cmp
pop
pop
or
pop
loopne
dec
and
dec
pop
cmp
ds
stos
mov
dec
adc
cmp
test
cmp
inc
mov
dec
jno
and
xor
(bad)
or
sub
dec
mov
fidivr
retf
dec
bound
dec
push
and
inc
clc
into
sub
add
mov
cmp
mov
repz
or
das
pop
das
arpl
and
adc
icebp
out
or
inc
sar
lock
or
inc
or
dec
or
push
mov
rcl
sbb
or
adc
cmc
lods
cmp
mov
adc
pop
jne
hlt
pusha
lea
cmp
fcom
cmp
add
arpl
lds
mov
sub
cmps
cmp
fistp
inc
add
ror
fdivr
mov
sar
mov
mov
adc
mov
cli
xchg
and
mov
dec
ja
and
leave
push
clc
stc
add
jns
mov
movs
push
or
sub
imul
push
outs
jp
imul
cmc
sti
frstor
or
out
stc
jne
mov
pop
movups
mov
fnstenv
stos
add
mov
pop
ss
mov
add
add
add
mov
and
movs
repnz
stos
add
fadd
fidivr
push
jo
inc
mov
adc
mov
mov
sub
xchg
xlat
push
in
movs
rcl
into
cmp
jne
sbb
push
fld
sbb
xchg
add
sbb
xchg
sbb
retf
scas
inc
jo
push
test
cwde
push
mov
push
(bad)
lods
mov
dec
mov
test
xor
call
xchg
aas
jmp
and
pop
sbb
mov
add
push
pop
jo
inc
in
sub
push
mov
inc
out
add
jg
lea
inc
cmp
and
shl
rcr
(bad)
add
jns
test
pop
imul
and
sub
push
xchg
xchg
fnsave
cmps
or
and
aam
mov
pop
jp
add
push
cmps
mov
sub
sub
sub
leave
pop
jp
pop
ret
push
test
dec
test
or
icebp
(bad)
push
push
mov
xchg
out
adc
retf
es
fcom
mov
xor
ret
shl
push
adc
arpl
push
mov
clc
cwde
stc
or
(bad)
icebp
jmp
xor
push
xor
mov
and
sbb
gs
add
les
push
push
cmp
cld
or
pop
adc
dec
push
mov
je
push
out
out
fidiv
aam
xchg
pop
gs
or
(bad)
outs
or
cld
out
and
popa
xchg
jbe
mov
repz
push
sbb
add
scas
cmp
push
loopne
inc
dec
add
mov
icebp
mov
push
cmp
mov
lea
xchg
push
mov
jne
adc
jle
add
test
(bad)
push
adc
jb
leave
or
cmp
add
xchg
mov
adc
push
dec
lahf
xor
mov
push
inc
mov
adc
cmp
pop
xor
jmp
test
mov
repz
adc
ja
movs
mov
push
cmp
inc
js
sbb
cmc
push
dec
pop
mov
jge
pop
xchg
jl
add
loopne
sub
push
cmc
xchg
bound
arpl
mov
cmp
push
mov
enter
fcom
lods
fsub
push
add
add
xchg
or
pop
mov
mov
fdiv
inc
fdivr
sbb
(bad)
loope
int
inc
sbb
mov
cmps
adc
push
sti
or
cmc
in
(bad)
sar
mov
loopne
xchg
and
fild
cli
call
push
enter
out
cmp
or
add
mov
add
jae
jmp
adc
add
or
mov
jecxz
cdq
out
cmps
sub
ret
enter
mov
or
push
inc
add
cmp
pushw
pop
jmp
xor
push
sbb
sub
ret
outs
fsubr
push
and
(bad)
mov
xor
xor
(bad)
xor
imul
add
(bad)
pop
shl
mov
inc
add
add
sbb
lods
push
shl
mov
adc
shr
add
mov
sbb
shl
test
fsub
fsub
mov
ja
aam
in
es
inc
adc
inc
fidiv
adc
dec
and
into
jmp
cmp
inc
jecxz
inc
lods
enter
mov
ror
or
clc
aaa
rcl
jmp
mov
jo
jle
sbb
cmp
ins
punpcklwd
add
add
adc
out
xor
aas
sbb
sbb
push
dec
enter
mov
adc
and
nop
sub
pop
adc
add
inc
and
pop
push
dec
jne
xor
adc
and
and
push
dec
or
pusha
sbb
cmp
or
xchg
pop
neg
sub
fwait
sti
pop
lea
lock
push
jmp
and
jecxz
xchg
inc
jmp
sbb
loopne
mov
jg
or
sub
lea
mov
inc
push
mov
sub
fimul
fdecstp
xchg
sub
mov
popa
push
pusha
adc
ins
dec
pop
cli
mov
imul
adc
add
mov
pop
sub
add
push
sbb
stos
mov
and
cmp
outs
sbb
mov
(bad)
xchg
sbb
pop
sbb
ins
inc
and
lock
lock
push
dec
out
pop
jmp
icebp
fadd
mov
sbb
mov
xchg
cmp
push
clc
(bad)
and
and
leave
xchg
mov
adc
mov
add
push
jmp
add
ror
push
cs
xchg
nop
inc
sbb
test
pop
in
sbb
and
popf
add
dec
jns
or
dec
sbb
sbb
std
(bad)
sub
inc
shr
(bad)
or
xchg
cmp
pop
jb
push
popf
mov
into
push
add
pop
mov
xchg
scas
cmovs
mov
xor
or
add
(bad)
or
aam
sar
jnp
jne
adc
push
and
or
ins
je
orps
push
retf
adc
sbb
pushf
cmp
xchg
xchg
(bad)
jle
js
xor
adc
push
sbb
push
mov
jmp
sbb
or
add
idiv
or
daa
push
adc
mov
pop
dec
mov
enter
outs
xor
and
sar
push
jle
ins
or
and
mov
jg
push
jle
jge
call
retf
or
inc
mov
xchg
lods
sub
and
jb
xchg
pushf
ror
mov
jo
mov
in
sub
and
mov
inc
data16
mov
cmp
push
nop
mov
adc
mov
sti
outs
imul
cmp
or
in
test
mov
xchg
in
mov
cwde
sub
(bad)
push
gs
cmp
adc
xor
cdq
in
adc
adc
sbb
and
jns
jmp
ss
and
iret
gs
into
xchg
or
xor
mov
push
sahf
retf
cli
ins
and
sbb
push
or
stos
sub
adc
adc
repnz
add
push
jg
(bad)
cmp
or
jecxz
les
sub
bound
and
or
cmp
cdq
xor
push
sbb
mov
add
jecxz
dec
cmp
dec
stos
push
dec
adc
aaa
push
mov
aaa
test
mov
xor
add
(bad)
retf
inc
or
fbld
sbb
mov
add
sub
test
xchg
inc
cmp
jbe
sbb
out
cmp
mov
and
add
xor
call
or
push
loope
enter
mov
out
fisubr
adc
add
cmp
into
sbb
xchg
hlt
inc
sbb
data16
lock
push
and
mov
xchg
mov
scas
adc
ss
xor
or
sub
add
scas
loope
adc
pop
aaa
cmp
popf
ja
cdq
ficom
pop
test
or
shl
addps
add
rcl
pop
cmp
dec
call
adc
sub
fwait
add
stc
mov
push
dec
adc
push
and
aaa
iret
xor
outs
inc
xchg
lock
jl
outs
push
jbe
jle
jo
(bad)
cmp
outs
ja
jo
mov
test
jge
loopne
sub
(bad)
(bad)
hlt
push
push
push
cs
push
cli
retf
cmc
loopne
pushf
push
push
test
ds
(bad)
pop
inc
sbb
je
sub
cmp
mov
aam
add
lods
ja
loopne
shr
shl
nop
cmp
inc
ret
xchg
pop
pusha
stos
lock
adc
movs
push
int3
je
outs
sbb
push
rcl
in
in
pusha
out
test
xchg
push
or
out
mov
in
cmp
sbb
inc
adc
jmp
add
inc
jnp
in
cld
(bad)
jmp
or
aam
imul
jae
mov
mov
mov
mov
push
sbb
pop
and
jmp
mov
inc
imul
add
pop
inc
dec
xchg
mov
scas
in
sar
repnz
icebp
cmp
ret
push
or
inc
popa
cld
setno
jle
popf
xchg
mov
neg
jne
enter
mov
iret
add
and
(bad)
rol
stos
sub
mov
jne
mov
es
call
sub
dec
cmps
inc
push
xor
inc
and
add
sbb
adc
out
push
or
and
pop
cdq
push
into
(bad)
push
lds
lock
sbb
(bad)
adc
loopne
mov
mov
test
rol
test
les
mov
inc
xor
pop
test
adc
sub
cmp
shr
or
shl
jo
cmp
jae
push
jbe
rol
pop
cwde
dec
in
jb
ja
je
add
cmp
lock
sbb
ja
pusha
loopne
sub
sub
and
je
dec
push
and
clc
retf
sbb
add
clc
push
push
sbb
mov
adc
add
ds
add
leave
push
je
push
fst
sar
push
retf
ds
add
dec
push
(bad)
call
pop
daa
mov
push
or
push
adc
ins
cmps
ja
mov
jne
jb
ja
push
das
ins
or
pop
or
push
mov
jmp
sub
dec
outs
repz
lods
and
cmps
cmc
adc
test
sar
aaa
jo
pop
popa
sbb
aam
cmp
pop
nop
cmp
add
pop
popa
sub
or
or
mov
ret
pop
test
dec
add
enter
mov
xlat
sbb
leave
adc
push
jb
ret
jne
jnp
jbe
or
fiadd
call
cmp
jne
mov
push
cmp
fwait
cmps
mov
es
jne
call
mov
dec
loope
or
(bad)
jb
jmp
iret
repz
jmp
adc
(bad)
jmp
std
std
addr16
iret
jmp
cld
cld
jmp
fucomi
pmaxub
adc
adc
pushf
or
ret
aas
dec
jo
ja
shr
add
xchg
inc
lock
ins
pop
add
dec
inc
mov
adc
ret
add
pop
mov
sub
jne
push
or
push
lds
cmc
sbb
lods
mov
cmp
mov
or
dec
pusha
or
jne
inc
jmp
mov
sub
cmp
adc
xchg
add
mov
dec
jnp
and
icebp
xor
dec
jmp
cmps
loop
frstor
mov
aas
inc
mov
add
sub
or
inc
mov
scas
sub
fdiv
cdq
cmps
sub
test
cmps
jo
xchg
sub
push
mov
push
imul
cmp
push
xor
dec
or
push
adc
popa
sub
xchg
mov
dec
lods
jge
cmp
fs
jo
add
hlt
loopne
test
sbb
mov
push
jo
mov
mov
ret
push
jmp
adc
(bad)
idiv
mov
and
add
es
imul
je
jmp
mov
or
mov
pusha
and
push
xor
sub
(bad)
call
pop
push
sub
mov
sbb
dec
cwde
adc
pop
pop
add
jmp
ret
sub
or
stc
sub
cmp
jbe
jo
test
mov
sub
mov
sub
jge
call
mov
inc
in
push
push
mov
bound
test
pop
push
hlt
cmp
adc
test
push
div
mov
jmp
test
cmp
xor
mov
mov
test
sbb
mov
lods
rol
stc
push
adc
std
mov
jmp
mov
push
bound
xor
shl
jle
mov
dec
cmp
ins
pusha
je
or
inc
jecxz
sub
pop
inc
jo
dec
adc
adc
cli
test
aaa
sub
cmp
cmp
imul
stc
adc
nop
sub
mov
aam
out
pusha
call
loopne
or
jge
jle
out
and
cmp
or
add
sub
adc
xchg
add
lods
add
xchg
pop
pusha
or
jno
(bad)
and
cmp
mov
(bad)
cmps
test
push
pop
mov
sub
push
into
push
and
mov
push
ret
xor
and
and
jbe
xlat
stos
mov
and
adc
push
and
cli
ds
int
out
(bad)
std
mov
aas
ja
mov
enter
pop
add
or
inc
test
sub
enter
adc
mov
and
inc
inc
lods
inc
push
xchg
and
sub
jmp
or
cmp
out
jne
xor
lea
repnz
dec
or
pop
cwde
cmp
cdq
push
and
test
leave
pop
jno
mov
or
cmps
push
fnstenv
mov
outs
mov
add
mov
scas
retf
sbb
cmp
add
lods
mov
jae
addr16
jg
pop
fidiv
mov
in
add
sub
jg
mov
jge
add
mov
les
and
mov
ins
arpl
sahf
fsubr
(bad)
fcom
shl
shr
mov
add
or
fadd
jmp
ins
dec
repnz
adc
dec
sub
sub
inc
push
(bad)
adc
xor
retf
js
mov
mov
inc
imul
shl
fnstcw
dec
cwde
jmp
jne
cmp
je
data16
push
loop
xor
ins
cmps
adc
jne
push
xor
adc
sub
(bad)
add
ficomp
fiadd
pop
fiadd
es
dec
xchg
jmp
or
ficomp
cdq
inc
sti
xor
pushfw
(bad)
(bad)
or
(bad)
push
and
mul
or
push
retf
into
je
push
add
shl
add
cmp
add
ins
add
daa
push
jne
push
retf
test
lods
xchg
add
mov
pop
in
cs
in
sub
movups
and
jge
or
loopne
add
or
or
push
push
(bad)
mov
dec
out
fiadd
cwd
fdivp
cmp
repz
fld
test
or
cmp
in
or
adc
jmp
js
fisttp
cmp
je
cmp
mov
push
cmp
or
xor
push
in
and
in
lods
cmp
(bad)
fisub
gs
cmp
jge
sbb
retf
jb
and
inc
gs
and
xor
mov
pop
imul
loope
mov
or
bound
or
and
cdq
dec
and
or
and
mov
xor
dec
shl
or
jmp
and
mov
and
fnstsw
or
cmp
and
sar
pop
xlat
sbb
dec
fs
jle
mov
inc
sbb
and
mov
dec
cmp
xchg
retf
push
test
cmp
sbb
push
cmp
xchg
pop
mov
jmp
inc
or
out
enter
mov
daa
outs
pop
xor
inc
sub
xchg
dec
add
sbb
cwde
sbb
add
and
inc
xor
mov
add
cmp
(bad)
push
or
jmp
shr
jmp
push
add
ss
inc
js
int3
cmp
mov
xchg
sbb
fidivr
outs
mov
shl
add
test
mov
push
inc
push
adc
dec
mov
push
or
je
retf
adc
addr16
mov
inc
or
mov
pop
pop
pop
call
push
push
emms
ret
xor
xchg
xor
cdq
adc
sbb
pop
lods
dec
cmp
inc
pop
mov
out
dec
adc
push
inc
sub
mov
or
push
loop
or
mov
je
add
pushf
or
mov
add
fcmovb
mov
adc
mov
add
and
pop
push
or
ins
mov
pop
and
inc
xchg
adc
push
clc
inc
fld
mov
aaa
xchg
cmc
loopne
xor
test
rcr
sub
or
xchg
add
inc
inc
xor
mov
nop
add
div
dec
jmp
xor
daa
or
jb
inc
adc
pop
cmp
inc
inc
pop
je
pop
xchg
mov
in
add
cmp
out
dec
pop
aam
mov
mov
shr
fmul
cmp
jle
add
hlt
icebp
xchg
ror
push
inc
or
inc
inc
in
add
and
or
inc
(bad)
mov
out
mov
inc
add
xor
inc
jne
int
dec
ror
popa
adc
push
and
and
cwde
dec
fwait
aas
xchg
cmp
jnp
sbb
or
or
dec
ja
fucomi
loopne
sub
xor
jne
xchg
lods
or
imul
clc
rol
xor
cmp
jo
(bad)
test
fnsave
out
push
add
psubusb
fcmovnb
add
inc
pop
je
jge
push
and
push
or
adc
ficomp
push
cmp
adc
pop
sub
stos
add
lods
out
pop
movs
jo
or
stos
sbb
inc
add
lods
ret
sbb
add
sahf
mov
cli
or
(bad)
inc
cmp
cs
add
adc
jne
cli
je
int3
or
(bad)
sub
and
bound
mov
adc
out
mov
test
cmp
mov
dec
pop
push
mov
inc
and
xchg
xor
fcomp
push
cmp
dec
jg
mov
jmp
cmp
out
push
xor
and
push
and
add
stos
int3
pop
idiv
sti
or
lock
(bad)
iret
(bad)
xor
sub
sti
aad
and
sub
vandps
and
(bad)
out
add
push
pop
push
xor
pop
mov
mov
pusha
ss
or
call
add
fwait
ins
repz
or
or
push
and
sbb
pop
adc
push
les
rcl
ins
jge
jne
pop
fist
bound
jbe
mov
ins
clc
jl
retf
mov
ror
loopne
aas
fsubr
or
add
add
pop
pop
repnz
es
and
mov
adc
(bad)
inc
cmp
jp
adc
or
ins
out
aam
test
add
dec
mov
push
loopne
cld
cmp
imul
and
imul
add
add
pusha
mov
jecxz
retf
fisub
rol
adc
imul
retf
adc
jl
mov
xor
sti
jg
out
or
jmp
(bad)
xchg
adc
ret
add
mov
push
add
or
inc
ins
jmp
mov
aas
push
aaa
xor
ds
dec
mov
add
test
or
je
and
mov
mov
mov
jl
pop
ret
xchg
shl
xchg
out
cmp
pusha
lea
and
mov
cmp
dec
into
inc
push
test
dec
mov
bound
test
(bad)
aam
fdivp
shl
gs
inc
(bad)
aam
inc
fisub
scas
les
lock
push
in
retf
arpl
cwde
inc
hlt
xor
xor
ss
call
test
mov
div
(bad)
push
ins
cmp
loopne
xchg
push
adc
clc
fdiv
jl
adc
dec
add
jne
inc
test
cli
add
push
cmp
(bad)
retf
es
jno
push
jl
jl
jmp
mov
pop
shl
test
dec
add
fsubr
add
or
push
adc
or
or
sub
mov
xchg
mov
cli
mov
fcmovu
ret
xchg
mov
lock
ins
mov
loope
test
mov
mov
adc
jo
mov
ds
dec
inc
call
aad
adc
(bad)
int
mov
popf
add
test
mov
call
push
pushf
and
(bad)
and
xor
sbb
add
pop
pusha
test
jne
mov
and
sbb
add
inc
cli
mov
in
aas
xchg
xor
iret
fimul
sbb
int3
call
punpckhwd
sbb
dec
sbb
fxch
add
inc
sub
movs
loope
inc
hlt
push
pusha
jp
push
jb
out
xor
adc
push
lods
add
dec
sbb
sahf
out
fidiv
lock
repz
add
lods
dec
adc
and
mov
add
pop
jl
mov
fdivr
arpl
clc
dec
jg
test
mul
dec
imul
sbb
jne
(bad)
mov
jmp
mov
cmp
adc
add
xchg
std
sub
cmps
mov
outs
mov
jne
xor
dec
and
rcr
(bad)
or
inc
outs
je
js
ss
(bad)
and
call
pop
or
jae
ret
je
or
push
jae
int
xlat
and
push
dec
add
sub
(bad)
and
not
into
jo
add
mov
test
fiadd
xor
enter
xor
adc
xchg
jp
sbb
add
and
rcr
arpl
jnp
push
sub
out
xor
mov
out
dec
mov
lea
loope
test
test
cmp
push
aam
xor
loopne
jmp
and
popf
or
and
test
aas
rol
add
pop
scas
in
jb
jg
xor
in
xor
mov
mov
add
jle
push
sub
xchg
jb
add
(bad)
(bad)
out
cwde
dec
hlt
pop
cmp
or
add
sub
inc
int
add
loop
loope
dec
cld
cmps
add
cld
in
mov
inc
adc
sbb
mov
and
(bad)
sub
xchg
fmul
or
inc
inc
inc
shl
sbb
mov
pop
into
inc
call
sub
mov
fs
mov
dec
mov
pusha
mov
cmp
add
inc
int
cmp
pop
cmps
aad
pop
in
jo
pop
mov
or
loopne
push
imul
dec
add
or
mov
pop
mov
or
sar
test
add
ins
out
push
add
gs
out
jno
sub
sub
pop
xchg
sub
sbb
jbe
loope
inc
sub
dec
imul
inc
jb
push
dec
daa
adc
cli
or
adc
xchg
push
adc
push
sbb
lea
sbb
lea
movs
cs
inc
dec
mov
mov
les
mov
shr
cld
outs
scas
pop
in
outs
jle
repz
mov
mov
push
push
enter
xor
pusha
imul
aad
test
dec
jne
sub
jl
scas
test
ins
cs
shr
fdiv
inc
ins
pop
sbb
icebp
push
inc
mov
shl
push
sar
and
or
pusha
jne
test
xchg
cmp
shl
sbb
sub
add
loop
dec
inc
cwde
mov
enter
push
mov
(bad)
fisub
xchg
cmp
adc
xor
add
inc
inc
mov
adc
ds
loop
mov
inc
add
in
adc
(bad)
sbb
(bad)
add
push
cld
mov
pop
push
in
stos
dec
stos
jb
repnz
add
dec
ret
mov
push
mov
(bad)
cmp
sbb
int
dec
mov
pop
cmp
or
pop
cmp
call
jmp
mov
jmp
inc
cmp
inc
cs
repnz
mov
cmp
je
inc
cmp
mov
jmp
pop
clc
fild
ret
cmp
ja
sub
(bad)
pusha
cli
jg
push
xchg
mov
jmp
call
jecxz
call
or
inc
dec
jne
xor
jmp
cmps
adc
inc
ds
inc
mov
xchg
adc
clc
cmp
in
pop
adc
lock
stos
cli
pop
fisub
loopne
cmc
fwait
push
jmp
dec
fmul
repz
xor
sti
js
je
push
pop
je
in
mov
xor
lds
or
ja
push
jmp
lock
imul
xor
scas
movs
add
cmp
sti
push
sbb
cmps
push
jge
js
push
ss
inc
mov
mov
imul
movs
jmp
jg
clc
push
xchg
shl
xchg
pop
add
inc
test
xor
fwait
or
and
js
adc
jne
and
push
(bad)
nop
push
cli
add
fdivr
fmul
adc
push
or
dec
xor
mov
mov
lahf
aaa
outs
jne
mov
jge
in
mov
shld
push
mov
mov
dec
xchg
xor
aaa
mov
adc
mov
repz
ss
cmp
add
add
push
out
adc
retf
jne
mov
sub
dec
sbb
rcr
ror
xchg
mov
lds
fs
xchg
or
and
push
cmp
daa
lods
push
jno
or
shl
mov
or
and
add
lods
dec
cmp
push
or
xchg
cmp
fmul
les
cmp
inc
pop
or
mov
xor
jle
sub
(bad)
sub
dec
pop
fdiv
test
call
add
or
xchg
mov
mov
dec
mov
repnz
jle
cmc
xor
inc
mov
xor
outs
ret
sbb
push
push
enter
sti
jge
xchg
fnsetpm(287
cmp
sbb
lock
cmc
or
cmp
jmp
in
push
or
add
movs
push
pop
mov
pop
stos
hlt
or
pop
push
push
aaa
outs
out
pop
je
es
mov
sbb
xchg
jp
mov
and
add
pop
call
addr16
sub
jo
ins
jo
sbb
call
mov
add
and
pop
hlt
cwde
dec
mov
leave
shr
aas
sbb
sbb
sbb
fadd
add
mov
cmp
inc
scas
dec
(bad)
inc
xchg
sbb
and
sbb
test
or
movs
push
js
pop
or
jae
mov
add
or
test
movs
imul
or
xor
jo
dec
inc
loopne
sbb
fwait
sub
and
mov
or
add
inc
in
jge
mov
stos
stc
or
push
jae
ret
dec
xchg
cmp
push
jo
jge
je
mov
outs
mov
ja
jl
ins
loope
jg
adc
mov
jno
mov
fs
fadd
xlat
fst
mov
jbe
adc
xchg
add
xchg
jmp
into
dec
ret
out
das
and
or
out
pop
leave
call
cmps
or
(bad)
xchg
and
shr
stc
iret
adc
and
and
rcl
mov
or
jp
dec
lods
nop
xor
test
cmp
and
mov
adc
jno
fnsave
jmp
or
jne
jo
movs
add
sub
in
push
sub
xor
or
sub
pop
or
in
jno
aas
push
imul
pop
push
dec
sbb
or
fwait
popa
loope
dec
jle
adc
or
push
xor
ret
push
push
push
cmc
add
out
daa
sahf
dec
(bad)
jg
jmp
nop
add
cmps
in
jg
cmp
jl
pop
pop
mov
rcr
nop
retf
rol
xchg
mov
mov
nop
jo
js
retf
loopne
pop
push
xor
jmp
fld
jo
jne
inc
fbstp
hlt
and
push
stos
add
mov
cmp
nop
popa
add
lods
repnz
mov
aaa
mov
loope
fdiv
sub
cli
or
push
jmp
push
lods
xchg
push
sub
mov
inc
call
mov
iret
jl
sbb
cmp
jle
dec
or
add
push
(bad)
imul
pop
mov
je
retf
sbb
fimul
jg
cdq
ror
dec
dec
test
jmp
lock
in
aam
or
fwait
or
jno
fs
lods
pop
jmp
and
mov
outs
stc
popa
dec
pop
mov
push
mov
rol
mov
inc
cmp
inc
push
pop
cmp
xchg
and
out
jo
dec
ret
ret
nop
jne
sub
or
jmp
mov
ret
mov
not
pop
cmp
adc
loopne
popf
dec
or
test
mov
ret
adc
mov
or
or
ja
xor
mov
or
call
pusha
or
mov
sti
repz
inc
adc
outs
or
jo
test
je
(bad)
mov
pop
push
pusha
(bad)
push
or
cmp
jmp
lods
xor
or
jmp
cmp
out
mov
push
(bad)
ja
popa
xchg
je
mov
xchg
sbb
jmp
mov
cmps
outs
sub
stos
mov
xchg
test
pop
nop
dec
adc
add
dec
push
cdq
test
repnz
jge
mov
popa
repnz
mov
call
adc
pop
movs
out
adc
mov
leave
jmp
sub
jo
ins
add
dec
jno
push
sti
jmp
xor
xor
and
fld
cs
in
data16
cmc
add
inc
xchg
out
sbb
and
jmp
xchg
mov
cmp
or
or
sub
push
cs
outs
hlt
pop
adc
xchg
in
push
aad
aas
sbb
xchg
pop
je
pop
fstp
mov
and
mov
mov
icebp
or
jge
adc
jbe
dec
pop
dec
jb
pusha
(bad)
in
retf
fld
repz
xor
shl
pop
push
cmp
jl
sahf
jg
call
push
js
xor
aaa
mov
lea
test
jne
clc
cld
mov
(bad)
and
in
pop
lds
push
jmp
mov
cmps
cmc
sub
enter
mov
dec
scas
mov
fisttp
sbb
or
cmp
retf
scas
mov
cdq
lods
test
mov
in
stos
xchg
and
mov
or
adc
or
push
test
daa
rol
xchg
mov
inc
sub
jne
sbb
push
jne
cmc
jle
hlt
jne
frstor
fcmovnbe
cmp
fmul
rcl
xchg
mov
and
out
add
sbb
dec
mov
jmp
loope
inc
mov
sbb
sbb
or
ss
cld
xor
movs
ret
adc
jecxz
cmp
inc
lahf
mov
or
jnp
aam
or
test
dec
add
cmps
push
(bad)
cld
sub
mov
pusha
jg
add
pop
(bad)
and
jno
xchg
jnp
loop
sbb
clc
ins
bound
ds
xchg
in
or
inc
or
adc
mov
dec
mov
or
cmp
ja
cmp
jl
and
jle
or
int
jbe
test
out
xor
test
mov
inc
jg
adc
or
enter
sub
pop
hlt
popa
jecxz
in
pop
xor
outs
lock
mov
pop
icebp
and
nop
xor
sbb
sub
cs
pop
add
cli
pop
xchg
sbb
std
jb
pusha
lds
push
loope
cmp
jne
add
mov
cmp
or
mov
and
leave
xor
cld
in
scas
shl
dec
or
lock
push
add
sbb
mov
mov
pop
aad
cmps
clc
push
test
mov
mov
push
push
call
dec
push
or
push
dec
mov
push
jae
mov
adc
mov
cmp
leave
cli
adc
or
inc
and
xchg
test
cmp
jne
add
sbb
jnp
or
lods
push
jmp
inc
(bad)
add
and
lds
(bad)
cmp
sub
pop
adc
daa
mov
or
ret
inc
push
xchg
inc
sub
ficom
sbb
dec
pop
mul
push
call
(bad)
pop
das
xor
sbb
aam
(bad)
out
push
cmp
and
mov
adc
and
nop
push
pusha
popf
(bad)
xchg
ins
cld
xor
outs
pusha
mov
pop
es
jmp
pop
pop
xor
inc
pop
lea
(bad)
rol
cmp
ret
outs
push
push
xchg
test
and
and
repz
or
mov
je
xchg
cli
adc
xor
jnp
or
lea
or
push
inc
int3
and
btc
pushf
rep
mov
mov
pop
dec
mov
xchg
ja
push
and
ja
fimul
inc
enter
push
and
jl
sbb
nop
add
sbb
arpl
jecxz
sub
sbb
push
ret
push
dec
cld
mov
mov
and
dec
lods
dec
rcr
jmp
inc
cmp
xor
out
enter
jno
ret
add
sbb
push
push
ror
pop
add
or
cld
dec
xchg
mov
xchg
cmp
rol
(bad)
lock
retf
pop
outs
aaa
sbb
add
(bad)
cwde
les
adc
jno
or
push
in
jbe
add
nop
and
sti
jb
lock
jb
mov
aas
adc
(bad)
push
push
and
or
clc
xor
mov
and
cmps
(bad)
in
ret
push
mov
call
jl
mov
rcr
inc
and
not
enter
add
dec
lock
sub
add
adc
add
ret
push
push
or
je
ror
mov
pop
pusha
loop
and
pop
jle
(bad)
push
adc
and
push
mov
or
retf
fwait
and
es
add
inc
or
or
mov
outs
rcr
bound
jl
jo
or
retf
inc
push
loope
rcr
imul
mov
sar
stos
xchg
add
push
sub
dec
dec
les
call
mov
rol
int
pop
shl
mov
dec
inc
mov
int
imul
dec
sbb
inc
ins
sbb
dec
pop
push
mul
fs
push
jle
sbb
inc
out
or
jmp
push
sbb
fcomp
test
xor
xchg
push
pop
ret
ficomp
fld
jbe
sbb
push
inc
iret
add
adc
adc
fdiv
and
sbb
sub
fadd
mov
mov
inc
and
pop
dec
pop
and
push
sub
jb
pusha
adc
add
inc
mov
cld
sbb
scas
add
mov
push
pop
mov
scas
fs
and
lea
test
call
out
sbb
cmp
jmp
sub
add
sbb
inc
data16
fwait
mov
push
mov
int3
data16
and
xor
ror
repz
pop
imul
adc
push
or
mov
sti
scas
hlt
xchg
xchg
adc
inc
das
jne
or
fcomp
sub
gs
adc
test
xor
mov
test
icebp
dec
cmp
sub
call
sbb
in
call
cmp
pop
jne
dec
mov
inc
inc
inc
pop
jne
popa
cmps
add
(bad)
fldz
adc
sbb
or
rol
fiadd
fdivr
or
jne
adc
lea
push
ret
mov
sbb
cmp
add
cmp
(bad)
adc
stc
scas
xchg
sbb
dec
cli
and
rcl
nop
mov
push
aam
cmp
dec
(bad)
pop
in
mov
sbb
iret
mov
jmp
jbe
or
add
pop
or
or
inc
mov
push
mov
dec
ds
xor
loop
sub
call
jo
inc
mov
stos
shl
mov
push
jae
test
inc
mov
fdivr
test
and
pop
jno
sbb
call
cmp
std
fiadd
pop
push
adc
test
xchg
push
or
sub
(bad)
push
mov
push
inc
or
push
mov
pop
add
in
es
xor
test
ret
or
cmp
sub
add
push
sahf
inc
xor
call
daa
dec
pop
and
arpl
out
nop
push
into
sub
prefetchwt1
or
xor
cs
jmp
xor
dec
xor
and
xchg
call
lods
jge
scas
sub
adc
xchg
loopne
ret
lods
gs
ffreep
or
xlat
cdq
jp
xor
xchg
cmps
xchg
sub
jecxz
adc
push
lds
sub
mov
and
mov
call
cld
mov
scas
mov
or
into
cs
push
push
adc
add
adc
push
adc
neg
add
scas
push
cmp
adc
in
add
fadd
ror
sbb
dec
add
shl
or
daa
rcl
cli
inc
loop
mov
add
add
push
sub
jl
dec
ins
push
mov
aaa
xor
into
pop
push
inc
js
sbb
mov
inc
lods
or
in
or
add
push
xor
push
add
xchg
dec
and
add
fcom
fidivr
push
jl
dec
inc
icebp
mov
add
shl
jle
pop
inc
and
fdivr
mov
call
ins
dec
fwait
clc
inc
mov
cli
and
lock
mov
daa
xor
or
pop
cmp
rcl
sub
add
or
or
outs
ficomp
cmp
sbb
aaa
inc
jp
adc
pshufw
adc
int
fstp
ja
cmp
jbe
clc
push
xor
adc
xor
push
or
add
dec
cld
xchg
and
add
mov
adc
cmp
jbe
cli
mov
(bad)
dec
shrd
push
arpl
push
sub
sti
push
ss
jl
cmps
jecxz
stos
imul
std
xlat
add
inc
xor
xor
out
and
adc
xchg
jmp
or
ror
inc
push
mov
mov
test
sub
mov
jge
cmp
mov
fsub
pop
and
sub
pop
sbb
add
sar
ret
jb
push
sub
ret
mov
mov
(bad)
(bad)
lock
inc
shl
push
sub
add
inc
sub
movs
loopne
or
ror
sar
add
mov
inc
sahf
sub
dec
pop
or
or
int3
ror
sbb
add
sar
enter
jno
push
or
test
sub
div
fdiv
int
adc
xor
nop
adc
pop
pop
fidivr
jno
(bad)
mov
pop
add
or
mov
and
jle
rol
sub
mov
jb
mov
xchg
and
ins
adc
mov
or
push
int3
jge
mov
dec
cmp
adc
push
xchg
push
xor
pop
xor
sub
sbb
les
or
fwait
dec
ret
pop
pushf
pop
adc
mov
cmp
adc
or
add
jo
dec
ds
xchg
push
shl
jne
cwde
hlt
loop
cmp
add
dec
jbe
aam
push
dec
imul
lods
xor
pushf
inc
sub
call
push
imul
cld
jl
(bad)
mov
sub
add
xchg
inc
test
mov
shl
loop
mov
scas
pop
ret
sbb
gs
ds
inc
pop
imul
add
fmul
inc
je
data16
dec
lods
mov
add
fadd
push
inc
je
dec
mov
jmp
xor
std
lahf
jmp
popa
leave
mov
cmp
shl
sbb
ror
loop
mov
test
push
(bad)
les
add
mov
jne
or
aam
mov
xor
or
int
sbb
add
jmp
call
jne
fmul
ins
pop
ins
cwde
fst
pop
clc
fstp
or
shr
rcl
push
dec
adc
ucomiss
adc
adc
lock
mov
mov
and
sub
cli
and
and
enter
push
dec
add
push
mov
jmp
test
retf
pop
dec
dec
mov
outs
fisub
mov
sbb
and
mov
in
xor
mov
dec
xchg
sub
je
push
or
ds
fwait
fs
retf
clc
push
imul
(bad)
call
mov
and
mov
pop
loopne
and
outs
in
(bad)
xchg
test
push
je
dec
je
je
and
(bad)
jmp
mov
pop
jmp
pop
and
mov
and
inc
push
xchg
inc
in
hlt
adc
loopne
cmp
les
xchg
push
in
mov
jno
sbb
push
outs
or
dec
and
mov
sub
inc
pusha
cs
sbb
daa
mov
and
add
pop
je
push
adc
inc
jbe
xchg
adc
and
je
fsub
adc
loope
pop
in
jmp
cmp
call
push
fmul
call
ss
sub
(bad)
and
mov
lock
xor
push
sub
js
(bad)
imul
xor
add
jl
les
pushf
or
xor
loop
mov
pusha
pop
mov
bswap
cmp
in
je
adc
mov
sub
pop
dec
call
int
inc
xchg
ds
jmp
and
nop
cdq
xor
pop
cmp
mov
push
popa
pop
ins
pusha
ret
mov
sub
mov
dec
shr
adc
lock
enter
lods
ja
add
jmp
pushf
push
push
xchg
test
adc
push
mov
cmp
or
dec
rcl
mov
adc
or
mov
jnp
xchg
fxch
pop
les
push
int3
pop
shr
cs
jb
cs
push
jecxz
and
xchg
push
stos
inc
sbb
push
ret
pop
add
pop
add
lods
push
xlat
jmp
mov
jns
and
ss
or
xor
and
ficom
jmp
sbb
and
ror
mov
push
mov
and
mov
mov
scas
adc
mov
bound
inc
xor
loopne
fist
mov
cmp
(bad)
mov
mov
(bad)
sbb
push
pop
or
(bad)
dec
js
or
push
xor
les
jns
enter
ror
lea
mov
dec
xor
jne
div
mov
or
xor
add
mov
inc
or
xor
test
jmp
sbb
je
push
and
mov
cmps
sbb
mov
jae
iret
xchg
call
add
and
shl
jmp
push
inc
fsqrt
or
xchg
mov
xor
push
push
xchg
andnps
dec
jmp
push
and
fstp
push
push
mov
add
mov
add
sar
cmp
call
sbb
mov
aaa
pop
xor
push
ja
dec
xor
sbb
ror
packssdw
push
push
jnp
push
adc
ret
dec
jo
stos
add
popf
ins
int
cmc
ins
loopne
not
xchg
inc
popa
push
inc
mov
cmp
jg
or
mov
pushf
popa
sbb
inc
stos
mov
mov
add
ds
jbe
adc
movs
inc
mov
repz
dec
enter
les
rcl
dec
mov
mov
sbb
push
cmp
scas
ds
adc
push
test
call
mov
cdq
cmp
mov
pusha
push
lods
dec
lods
iret
add
out
dec
test
push
dec
dec
dec
xchg
test
imul
inc
and
cmp
shl
add
sar
(bad)
adc
shl
sub
mov
dec
jbe
jmp
cmp
cmp
mov
mov
sub
movs
and
lods
or
ret
add
sub
inc
cmp
push
scas
sbb
cmps
loop
or
mov
mov
dec
loopne
je
(bad)
shr
ret
mov
cmps
jb
rol
mov
fldcw
mov
sbb
enter
pusha
fsub
pushf
cmp
sub
jge
jae
xor
adc
shl
in
mov
adc
cmp
sub
shl
xchg
cmp
retf
cld
dec
sub
cmp
jb
popa
cmp
xor
and
xor
sar
xor
inc
adc
add
inc
mov
pop
and
stos
js
and
add
enter
and
ja
outs
movs
sub
sub
or
push
pop
jne
xchg
movs
add
inc
or
add
shl
adc
mov
add
sar
push
mov
xchg
or
or
sub
enter
mov
add
xchg
jo
or
pop
pop
lock
lods
imul
in
add
push
jg
jmp
xchg
sbb
movs
and
mov
cmp
mov
shl
xor
xor
loope
push
pop
xchg
sbb
sub
sub
push
fisubr
mov
pop
mov
sbb
sub
jne
adc
pushf
sub
or
fstp
sbb
repnz
adc
xor
out
mov
mov
adc
stos
sbb
adc
mov
and
je
pop
sbb
adc
out
jo
loope
and
push
in
mov
jle
inc
xor
les
inc
test
mov
or
cmps
xor
sbb
and
out
lea
xor
inc
rcr
inc
ror
shr
push
add
jne
sbb
inc
sub
or
enter
dec
dec
adc
fld
loopne
xchg
nop
loop
inc
sub
jl
movs
movs
push
pop
jne
push
or
mov
adc
add
mov
mov
push
mov
cwde
xor
rcr
mov
mov
cmc
inc
add
stc
adc
out
pop
sub
(bad)
pop
inc
mov
sub
es
add
inc
add
sbb
add
out
mov
loopne
mov
add
into
pop
movs
dec
cmp
cld
mov
sbb
mov
adc
sbb
test
fld
lock
ja
jmp
push
mov
jmp
pop
sahf
add
mov
(bad)
loope
jge
xor
mov
dec
push
pop
mov
cmp
and
jg
jne
pop
fxch
push
cmp
push
stos
and
pop
add
pop
ret
imul
in
cmp
adc
ins
movs
jbe
push
cmp
inc
clc
sbb
call
call
jno
dec
xchg
mov
rcl
jle
jne
dec
fdivr
jb
sbb
add
and
cmp
popf
sbb
xchg
push
push
jmp
(bad)
lock
push
or
clc
inc
xchg
icebp
into
(bad)
add
pushf
ss
std
les
push
push
inc
push
inc
imul
push
stos
or
jle
cmps
adc
mov
imul
sbb
mov
scas
inc
xor
pop
cmps
sbb
cmc
sbb
xchg
xor
adc
mov
movs
pop
(bad)
sbb
dec
jecxz
stos
idiv
dec
adc
or
mov
xchg
rol
scas
adc
or
and
movs
sub
push
or
in
in
adc
xchg
xchg
fld
sbb
xchg
xchg
xchg
xchg
sub
xor
ss
test
and
daa
mov
inc
inc
cmovs
add
daa
push
pop
movs
and
ins
in
in
jo
js
rcr
adc
leave
and
dec
mov
xchg
cwde
pushf
fwait
dec
xor
mov
inc
and
xor
and
xchg
add
and
or
xor
pop
and
pop
or
sub
and
dec
dec
xor
sbb
and
and
ror
and
cdq
add
xor
stc
nop
rol
rcl
mov
rcl
call
push
add
lods
or
mov
gs
cmp
or
sub
sub
in
push
clc
xchg
push
ror
lods
xor
adc
sub
sar
in
pop
daa
dec
ret
xor
adc
push
sti
hlt
push
mov
ret
je
in
pop
sbb
or
aaa
xor
add
sub
pop
xor
ins
aas
adc
jle
xchg
clc
push
lea
xchg
xchg
ss
(bad)
je
sub
dec
fdiv
cmp
ret
cmc
xchg
dec
inc
pusha
sbb
xor
xchg
cmp
mov
ins
fdiv
pop
push
push
popf
pop
sbb
nop
mov
int3
mov
rcr
inc
xchg
and
scas
cmp
adc
adc
aam
and
pusha
in
mov
add
cdq
and
pusha
and
add
push
loop
xchg
add
add
or
ror
cmp
lea
mov
ds
mov
rol
and
mov
sbb
arpl
xchg
clc
dec
xchg
dec
sub
dec
ficom
jecxz
and
xor
sbb
popf
pushf
loop
mov
mov
ds
cmp
sahf
add
and
lock
sar
clc
pop
mov
mov
repnz
and
or
push
scas
xor
sbb
mov
sete
adc
aas
dec
push
sbb
mov
int3
sbb
sbb
call
add
xor
ret
daa
pop
ror
cmps
mov
repz
cld
mov
mov
scas
or
inc
add
inc
std
add
jp
sub
push
push
push
sbb
ins
cmps
jo
sbb
in
addps
test
xor
ror
stc
inc
add
or
dec
inc
inc
daa
add
mov
jne
lods
dec
mov
pop
adc
jmp
cmp
add
cwde
adc
cmp
xor
inc
in
scas
push
or
sub
mov
loopne
xlat
xchg
movs
xor
adc
push
adc
dec
cmps
in
cmp
jp
ja
popf
mov
mov
aad
pop
gs
enter
add
hlt
add
rcl
test
inc
mov
das
pushf
inc
cmp
jb
push
inc
hlt
jns
cmp
sub
add
jle
arpl
mov
sub
popa
add
and
mov
inc
mov
add
int
outs
adc
xchg
outs
xor
das
sub
jp
push
out
hlt
mov
dec
jno
cmc
xchg
sbb
test
cmp
cmp
push
bound
jg
sbb
nop
loopne
popa
cmp
pop
add
rol
cmp
std
add
or
inc
adc
mov
leave
and
add
xchg
mov
and
in
sbb
jbe
into
mov
inc
cmp
test
and
inc
and
mov
sbb
jl
inc
or
adc
sbb
add
xchg
std
or
pop
push
retf
adc
popf
mov
add
and
dec
xchg
push
or
test
push
(bad)
add
or
(bad)
aas
enter
ror
in
daa
outs
adc
test
jne
add
hlt
ja
jle
outs
aad
xchg
loopne
stos
add
add
mov
inc
ret
(bad)
mov
dec
dec
pushf
mov
and
test
and
mov
jmp
jmp
inc
lea
pop
add
retf
loopne
test
fs
pop
push
sub
shl
not
test
cmp
outs
add
jmp
lock
mov
out
mov
inc
int3
sub
mov
jbe
dec
mov
add
xchg
and
and
xor
test
outs
inc
inc
jmp
or
imul
jae
cmp
cmp
(bad)
inc
push
mov
dec
inc
sbb
add
loopne
sahf
and
add
push
add
cmps
xchg
adc
xor
add
pusha
jmp
sti
cmp
dec
dec
stos
inc
and
xchg
mov
add
xor
aam
xor
cmp
ror
fldenv
mov
and
imul
aam
inc
xlat
sub
add
je
mov
and
mov
ds
push
or
jne
rcr
adc
jl
fadd
mov
cld
pusha
adc
sub
je
rcl
mov
mov
push
mov
jge
popa
pop
iret
int3
mov
pop
hlt
test
and
inc
and
cmc
inc
and
(bad)
call
push
cmp
dec
in
fs
push
pop
dec
dec
push
mov
enter
iret
dec
jns
lock
push
inc
lock
inc
jo
inc
mov
sbb
mov
jecxz
loopne
jge
sbb
mov
test
pop
ds
mov
ja
xlat
xor
mov
jb
lock
push
add
push
into
push
inc
mov
jl
mov
iret
and
push
out
and
fcomp
xor
ror
shl
jge
xor
and
ficomp
mov
cmp
push
sbb
stos
add
(bad)
or
inc
mov
loope
add
in
(bad)
sub
and
or
test
sbb
mov
sub
dec
cs
sub
jl
fs
pop
inc
jb
and
and
sub
test
sub
dec
mov
mov
add
inc
aam
test
imul
push
ror
jae
imul
movs
xor
in
mov
shr
shr
xor
cmps
adc
xchg
repz
jmp
fst
dec
fcmovb
jmp
rcl
or
or
add
or
xchg
cdq
addr16
mov
xchg
retf
into
imul
sbb
pop
jge
dec
sbb
mov
ds
(bad)
ja
adc
fnstcw
jae
dec
lock
mov
clc
cmp
inc
xchg
add
lea
mov
shr
mov
cmp
mov
adc
add
ds
mov
gs
xor
cmp
xor
sar
repnz
fidiv
pop
dec
push
push
adc
rol
sub
mov
jbe
sbb
inc
call
loope
push
jnp
jmp
cmp
fiadd
cli
shl
not
jle
icebp
std
jo
adc
jp
adc
or
dec
aad
test
mov
mov
mov
sbb
xchg
pop
pusha
pop
sbb
or
loop
add
test
ficom
int
and
push
adc
inc
jecxz
and
adc
je
push
lock
adc
push
or
mov
xor
push
popa
movs
inc
sub
xchg
int3
cli
inc
fcom
cdq
(bad)
movs
repz
inc
xchg
sub
es
fadd
adc
sar
push
std
fs
loopne
sub
or
or
adc
rol
mov
jno
js
cmp
sub
cmps
cmc
cwde
shr
pop
and
test
js
push
push
cdq
dec
pushf
dec
jne
neg
and
xchg
add
retf
xor
adc
mov
cli
add
and
add
test
mov
dec
and
inc
add
cmp
fisub
or
loopne
jle
rcr
pop
mov
(bad)
pop
mov
dec
add
jmp
retf
and
adc
dec
or
add
or
add
push
and
loopne
pop
cmp
pop
mov
sub
arpl
xor
movs
and
arpl
or
mov
mov
mov
je
test
loop
jns
data16
lahf
sbb
push
cmp
and
test
loopne
enter
shr
je
sub
pop
xchg
and
mov
sbb
sub
adc
pusha
addr16
jmp
(bad)
lock
ror
adc
ret
sub
hlt
rcr
fcomp
fld
mov
mov
mov
add
cli
(bad)
pop
retf
sbb
adc
jge
mov
jle
lock
push
fcmovb
jl
ficomp
jne
and
loope
xlat
sbb
or
pop
mov
gs
and
pop
add
je
lock
push
jle
mov
mov
push
sub
lahf
loopne
sub
rcl
les
and
or
jl
pop
add
stc
mov
adc
and
or
cdq
leave
add
xor
sub
in
add
mov
inc
shr
hlt
or
cdq
inc
dec
sub
leave
daa
out
mov
daa
clc
inc
push
dec
mov
xor
jae
mov
xchg
scas
xchg
or
adc
xchg
in
mov
cmps
cld
repnz
sbb
shl
push
neg
jmp
pop
hlt
sbb
adc
mov
dec
add
xchg
mov
push
dec
cld
pop
push
mov
xor
sub
and
jecxz
pop
call
ret
jp
cmp
push
ins
mov
xor
add
mov
jmp
sub
and
or
cmp
jmp
fld
in
cmp
mov
nop
pop
or
pop
inc
mov
adc
jmp
ins
cmc
cld
sub
mov
cmp
pop
call
ret
outs
xor
push
fucomp
add
in
adc
xlat
dec
clc
dec
mov
push
push
push
pop
pop
pop
pop
and
xor
and
cdq
ret
es
fdivr
stc
out
and
and
jno
add
mov
jg
neg
mov
add
call
push
sub
nop
fucomi
das
sub
jne
add
call
adc
and
pop
dec
sub
enter
sar
jns
jno
jo
cmc
mov
pushf
(bad)
jmp
jle
push
inc
jmp
popa
pop
les
mov
ins
xchg
retf
xor
mov
pusha
dec
sbb
jg
cmp
lock
jl
cmp
jl
xor
and
cmp
je
(bad)
mov
cwde
shl
mov
inc
push
push
push
push
sete
stos
pop
adc
fmul
into
sbb
jo
je
mov
das
iret
aam
hlt
xchg
ror
inc
adc
(bad)
and
pop
les
mov
adc
push
les
rcr
aam
pop
jg
and
adc
sub
data16
mov
sbb
dec
dec
add
dec
adc
enter
mov
aas
dec
shl
test
aad
add
rol
in
dec
data16
rcl
sbb
inc
bound
clc
dec
je
mov
push
sbb
mov
icebp
es
sbb
dec
ds
(bad)
jp
and
inc
adc
nop
inc
jbe
cld
inc
mov
inc
mov
sar
inc
les
movsx
xor
daa
push
mov
sub
rcl
retf
dec
xchg
or
retf
fadd
pop
xor
mov
push
jecxz
inc
inc
in
sbb
cmp
mov
je
cmp
sbb
mov
sbb
mov
and
push
jecxz
jns
mov
dec
pop
int3
cmp
jae
or
jae
add
jmp
call
dec
adc
(bad)
xchg
(bad)
sti
adc
pop
icebp
pop
push
jmp
enter
lock
push
je
jl
nop
xchg
fwait
mov
imul
push
push
mov
jmp
cmp
je
pop
add
mov
sub
jl
cmp
jno
push
adc
push
mov
xor
mov
fstp
sub
adc
adc
push
jmp
or
jmp
test
dec
push
or
sbb
movs
les
or
and
jg
mov
jne
add
pop
cwde
or
add
test
pop
push
call
add
sub
movs
xor
pop
mov
sbb
sar
stos
cmp
(bad)
inc
add
daa
mov
dec
add
sbb
sbb
pusha
sbb
pop
push
pop
add
xlat
jmp
fadd
daa
and
xor
sub
je
sub
jmp
ffree
push
ja
sbb
mov
lock
xchg
or
mov
int3
add
in
addr16
jne
iret
xchg
adc
ret
xor
sub
call
sub
adc
mov
imul
pusha
or
in
cmp
inc
aad
add
test
sbb
test
mov
xchg
in
(bad)
push
pop
cmp
ss
cmp
test
adc
sbb
pop
inc
sub
scas
stc
es
mov
xor
cmp
in
sub
das
mov
and
adc
push
add
enter
inc
jmp
fisttp
cmp
add
nop
enter
lea
pushf
jne
test
sub
pop
adc
std
movs
sub
push
adc
(bad)
ins
nop
pinsrw
ins
dec
dec
pushf
test
aam
pushf
dec
mov
add
xchg
or
cmp
pop
mov
and
push
dec
push
test
mov
and
or
hlt
or
adc
sub
pop
fmul
or
jge
aam
push
fs
lock
je
mov
cmp
mov
mov
mov
es
das
inc
pop
jbe
sub
sar
adc
ds
arpl
sysexit
mov
xor
fld
jmp
loopne
dec
fisttp
xchg
jmp
cmp
lock
imul
pusha
es
daa
mov
enter
aad
jl
pop
test
or
aad
retf
mov
shl
jbe
jge
imul
cld
pusha
daa
sbb
xchg
ficom
and
cmp
or
or
and
int
push
sub
push
xor
push
ss
sti
outs
adc
adc
ins
sbb
sti
sahf
movs
add
mov
jmp
cli
es
rol
sbb
add
shl
push
(bad)
mov
jmp
jns
jecxz
pop
add
push
xchg
mov
jnp
push
popf
ret
add
and
inc
inc
rol
adc
pop
test
mov
gs
and
shr
test
add
push
nop
jecxz
jns
outs
mov
ss
shr
dec
push
dec
sbb
sub
push
into
jge
lock
movs
cld
cmp
je
sub
leavew
jne
(bad)
push
mov
jmp
les
cmovb
pop
jo
test
inc
in
inc
add
xor
dec
jmp
cwde
add
jg
push
icebp
mov
ins
cmp
dec
add
adc
rcr
or
cli
lahf
ja
cmp
mov
dec
or
or
(bad)
adc
aaa
mov
add
rcl
(bad)
pop
dec
push
aad
pop
or
xor
femms
add
xchg
adc
add
xor
jnp
(bad)
and
xor
mov
push
shr
or
pop
in
inc
jb
jbe
scas
jno
or
lea
or
or
mov
pop
shl
pop
add
sub
adc
(bad)
ja
fisttp
sub
add
push
dec
je
mov
cmp
aad
or
addr16
or
mov
popa
sub
dec
sub
sti
and
push
inc
cmp
push
movs
jb
enter
jne
sbb
dec
add
or
sbb
bnd
outs
fstp
rol
ja
mov
cmp
loop
push
jbe
pop
add
jmp
cs
adc
add
mov
(bad)
cmp
nop
or
xchg
push
and
cwde
pop
cmp
(bad)
mov
rcl
add
es
mov
cmp
or
inc
mov
sbb
pop
inc
rcr
mov
sub
clc
scas
inc
xor
add
jmp
out
jmp
dec
rcl
outs
pop
and
adc
cmp
push
pop
inc
paddusw
push
push
mov
pushf
dec
mov
sub
and
lods
add
shl
mov
jp
dec
pop
add
jmp
add
add
cmp
mov
pusha
mov
ret
test
xadd
xchg
mov
test
js
inc
push
adc
inc
inc
mov
fucomi
pop
inc
clc
add
adc
jb
dec
push
or
mov
jo
pop
call
movsx
and
jne
shl
clc
add
fsubr
inc
popa
and
push
mov
jl
pop
inc
mov
jo
mov
sbb
inc
add
es
sub
jmp
mov
not
lods
or
adc
sbb
and
pop
xor
push
cmp
xor
and
pop
icebp
lods
mov
pop
cld
out
push
cmps
ja
rol
mov
jmp
fwait
call
sub
shl
jo
stc
cmp
xor
adc
adc
or
inc
ds
push
(bad)
and
and
call
jb
add
int
int
xchg
inc
test
add
clc
push
mov
daa
jecxz
push
scas
mov
popf
rcr
adc
and
jb
jmp
jge
push
cmp
mov
inc
int
sbb
sbb
push
push
add
pusha
sbb
sub
xlat
or
push
push
fst
lea
fwait
xor
xor
dec
or
push
mov
lods
or
add
jo
mov
sbb
inc
sub
jno
cmp
and
mov
ss
xchg
pop
inc
jbe
test
add
jmp
lea
sbb
push
mov
jb
enter
add
sahf
test
inc
ror
push
rcl
shl
jns
out
aad
xlat
fmul
add
lahf
(bad)
sti
fstp
jge
xor
dec
xchg
mov
add
or
or
xchg
sar
jne
cli
pop
mov
sub
and
data16
movs
je
lods
or
pop
popa
mov
push
add
push
add
add
add
test
pop
lahf
lock
lea
movs
loop
test
or
push
imul
mov
cmp
cmp
das
pusha
jnp
pop
or
sub
test
sub
or
mov
mov
push
scas
push
xor
push
dec
add
fldcw
aaa
mov
dec
jl
jmp
sbb
inc
ror
or
xchg
mov
sar
fs
adc
fild
mov
inc
ret
out
loop
lods
mov
mov
mov
fldcw
sub
xchg
ja
test
push
and
adc
sti
add
es
mov
mov
pushf
jb
sub
int3
icebp
test
mov
jmp
dec
aam
dec
inc
pushf
ss
cdq
add
into
test
icebp
push
adc
retf
and
xor
enter
aaa
jge
and
out
or
ins
pop
nop
add
sbb
(bad)
and
mov
adc
push
mov
dec
aad
in
or
(bad)
jb
sbb
adc
pop
xor
or
push
jle
rol
add
cwde
pop
or
inc
adc
fs
div
push
cmps
cdq
cmps
shr
and
rcl
fist
add
jle
lea
fadd
xchg
in
mov
lods
cmp
lods
data16
imul
mov
pop
pop
cmp
pop
pop
outs
adc
nop
sub
jns
or
lods
inc
loopne
lea
and
mov
movs
sbb
dec
cmp
and
clc
jg
add
or
shl
push
dec
cli
jb
sahf
loopne
adc
or
add
sti
nop
test
adc
push
sub
mov
neg
and
shl
add
fmulp
out
leave
jp
mov
jae
adc
out
mov
add
shl
iret
and
lock
xchg
retf
lock
in
xor
idiv
cli
add
test
xor
inc
mov
or
cdq
clc
or
loop
and
out
jmp
(bad)
add
add
sub
(bad)
call
xor
std
shr
dec
enter
(bad)
aas
mov
xchg
mov
(bad)
fsub
into
loopne
and
leave
and
clc
test
mov
test
cld
add
jb
adc
call
js
cmp
rcl
inc
sub
dec
inc
inc
inc
jmp
jne
fmul
aam
push
je
les
lods
lods
push
pop
pop
push
clc
mov
push
or
mov
jecxz
push
(bad)
mov
cmp
cmps
fidiv
mov
mov
add
movs
mov
xchg
sub
adc
inc
sbb
mov
push
pop
fisttp
(bad)
std
clc
cs
mov
leave
adc
dec
sub
inc
js
das
test
lahf
test
jmp
mov
outs
xchg
fimul
cmp
cmp
jno
call
xchg
jge
lods
bnd
(bad)
adc
xchg
inc
icebp
sbb
dec
ret
add
push
(bad)
sbb
pop
clc
ror
xor
inc
inc
inc
inc
inc
stc
sbb
xor
mov
loopne
xchg
and
pusha
inc
adc
lods
inc
lock
or
int
ja
add
xchg
daa
and
mov
xor
add
mov
mov
inc
das
push
pop
cmp
push
jae
push
or
out
rol
cld
adc
sub
jb
sub
dec
in
shr
lea
sbb
dec
test
xchg
dec
jge
pop
xor
ficomp
jle
inc
addr16
cmp
outs
data16
adc
mov
dec
push
imul
and
sub
jbe
inc
cmp
jl
mov
scas
popf
imul
or
mov
or
retf
lock
mov
popf
or
call
enter
add
sub
ret
in
dec
shr
jo
clc
or
xor
mov
mov
(bad)
loop
shl
add
adc
ret
in
jb
leave
jno
jae
add
lahf
ret
gs
rcr
or
sbb
cld
or
dec
or
daa
outs
jg
add
xor
inc
push
cmp
mov
dec
cmp
repnz
add
or
add
fadd
add
or
or
jl
popa
push
mov
jecxz
xor
je
jae
push
je
scas
jno
mov
inc
rcl
ret
and
add
push
add
mov
test
ret
adc
xor
dec
movs
test
or
adc
xchg
pop
adc
and
adc
sub
mov
(bad)
jmp
and
mov
xchg
into
in
xchg
mov
or
or
leave
cmp
inc
(bad)
fild
or
jne
or
sub
lods
cmp
je
imul
in
sub
xchg
add
ja
mov
fisubr
xchg
xchg
xchg
adc
or
jae
ret
ja
cmp
mov
mov
and
cmp
xor
into
pusha
add
inc
and
in
and
dec
cs
pop
pop
adc
or
cvtpi2ps
out
ret
or
loopne
iret
push
fld
pop
and
cmps
ror
pusha
cli
outs
retf
or
test
xchg
adc
and
lahf
push
or
dec
mov
push
ja
and
mov
dec
rcl
ror
or
lock
aad
or
outs
add
jno
out
sar
sbb
jo
jnp
add
jl
xchg
xor
loopne
es
pop
mov
jo
add
xor
mov
dec
inc
mov
push
nop
and
xchg
adc
addr16
or
jae
adc
or
push
dec
scas
jnp
sub
fdiv
and
mov
dec
test
add
add
rol
sbb
sbb
not
fiadd
loope
pop
test
into
or
add
cmps
repnz
add
add
add
sbb
add
mov
fisub
jnp
push
adc
push
inc
jb
mov
push
dec
sbb
xor
mov
and
fidivr
sar
push
pop
mov
fsubp
pop
test
mov
push
mov
movs
and
shl
cmp
or
sub
mov
push
mov
push
in
sub
cmp
shl
pop
mov
xchg
sub
xor
pop
mov
mov
(bad)
neg
sbb
(bad)
cmp
mov
retf
sbb
cmp
cdq
into
xlat
in
and
jg
retf
(bad)
in
ret
dec
xchg
mov
pop
add
cmps
add
dec
ret
jg
add
mov
stos
add
adc
push
add
ss
sub
or
sub
(bad)
mov
nop
or
adc
(bad)
retf
adc
mov
push
jmp
cmp
call
pop
xchg
daa
push
pop
or
pop
add
loop
in
mov
or
pop
lsl
mov
(bad)
test
mul
sub
hlt
pusha
xchg
xor
push
ret
pop
cmp
ja
or
jmp
mov
nop
jo
rol
ret
bound
sbb
dec
rcl
add
cmp
aam
hlt
and
pop
cld
frstor
xor
pop
pop
jne
dec
mov
add
xor
mov
jecxz
les
sti
sub
in
and
(bad)
adc
cli
pop
shl
je
add
mov
mov
mov
mov
or
mov
je
and
sti
call
push
loopne
add
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
xor
inc
mov
leave
adc
or
push
inc
cs
loopne
popa
and
or
sub
or
shld
or
test
inc
adc
add
mov
mov
cwde
bound
retf
xchg
push
movs
xchg
sbb
and
movs
sbb
and
fbld
pop
stos
xchg
iret
jne
jle
pop
das
dec
sub
mov
mov
in
retf
ror
inc
jmp
out
jge
mov
push
je
jl
xchg
sbb
cmps
dec
xor
mov
pushw
icebp
cwde
lods
test
push
mov
sub
or
adc
int3
mov
adc
add
dec
sub
lock
outs
ins
add
inc
add
jmp
int
aas
je
xchg
jno
sbb
loopne
retf
add
out
je
mov
ror
mov
jbe
retf
inc
inc
xchg
mov
jmp
pop
sbb
arpl
push
lds
call
and
or
and
loope
into
hlt
xor
fild
sub
sbb
(bad)
jmp
jmp
mov
les
mov
cmps
mov
push
dec
pop
enter
rol
stc
dec
dec
out
cmp
push
mov
addr16
xor
inc
xchg
sbb
xor
push
dec
push
leave
scas
mov
sar
push
push
mov
aam
(bad)
cmps
push
and
add
icebp
mov
es
mov
or
leave
and
test
es
je
and
fcom
nop
aam
adc
fmul
xor
in
push
fisttp
inc
sbb
push
sub
scas
or
stos
inc
movs
lea
and
mov
inc
inc
cmp
bound
pop
push
imul
fisttp
inc
popf
cmps
push
nop
enter
mov
std
or
inc
mov
push
repnz
push
rcr
adc
leave
mov
add
ror
sbb
ds
adc
cmp
aas
push
loopne
mov
inc
push
and
jne
dec
test
xchg
xchg
loope
sbb
pop
loopne
mov
mov
dec
xor
fmul
dec
frstor
sar
sbb
loope
mov
xor
inc
mov
inc
mov
cli
and
inc
mov
sbb
xchg
cs
inc
movs
inc
in
and
fstp
(bad)
pop
test
xchg
add
jmp
dec
loop
or
mov
and
test
add
inc
mov
pop
ins
je
fld
sub
adc
inc
pop
aam
scas
xor
xor
cmp
mov
rol
add
dec
js
mov
xor
mov
and
sbb
xchg
outs
or
arpl
push
push
add
je
mov
jg
test
sub
add
in
je
bound
sub
rcr
aam
dec
in
cmp
lea
call
retf
add
popf
pop
stos
nop
pop
movs
sbb
cs
lock
aas
jae
ficomp
es
js
add
loop
jmp
push
loop
xchg
jp
add
add
xlat
cmp
xor
pushw
ja
aam
sub
and
mov
sbb
sbb
sbb
pushf
adc
dec
js
push
les
mov
nop
adc
push
mov
sub
add
mov
mov
push
cld
mov
cmp
pop
xlat
pusha
push
and
fs
mov
fist
dec
pop
add
jg
fldenv
sub
mov
mov
je
inc
jae
ins
inc
dec
sbb
aam
lods
call
fadd
pop
ins
mov
test
jmp
and
iret
mov
sub
mov
pop
fiadd
imul
add
(bad)
aam
out
and
adc
push
push
dec
xchg
sbb
adc
push
add
adc
popa
test
xchg
push
mov
cs
(bad)
out
mov
pop
add
dec
sbb
cs
test
add
jl
es
xchg
sar
push
rcr
add
scas
mov
idiv
nop
jle
adc
push
lahf
ret
int3
jmp
cmp
xor
add
inc
cwde
dec
sub
add
inc
lods
jl
push
clc
mov
mov
test
lea
ret
inc
(bad)
push
(bad)
mov
rcr
hlt
fwait
(bad)
lods
mov
add
stos
loop
and
inc
aam
push
js
push
xchg
inc
adc
jae
(bad)
ins
popf
ss
mov
dec
pushf
call
push
push
icebp
popa
movs
or
add
push
fs
add
push
jmp
bound
add
sbb
enterw
add
mov
mov
mov
sub
dec
in
xchg
inc
pusha
sbb
or
mov
adc
adc
mov
fwait
clc
out
add
jg
adc
rcl
sub
popf
loopne
lea
lods
(bad)
out
add
or
mov
lahf
xchg
mov
and
ret
sub
xlat
xor
enter
call
push
jle
jle
push
lea
ss
sahf
or
add
sub
mov
inc
ret
mov
ds
pop
mov
cmp
lea
adc
inc
push
mov
sub
repz
fwait
mov
add
sbb
mov
ja
pop
jmp
push
cmp
sub
(bad)
and
(bad)
or
sbb
mov
xchg
outs
add
jae
fild
mov
jns
stc
popa
rcl
or
cmp
mov
dec
pop
adc
lock
or
sti
xchg
add
jb
jmp
sbb
jne
fimul
shl
ja
push
loop
add
add
fs
sahf
pop
outs
or
dec
int3
dec
inc
mov
or
pusha
scas
add
pop
push
pop
jg
daa
js
fsub
mov
popa
push
hlt
dec
mov
mov
call
loopne
pop
fmul
xchg
aaa
mov
mov
call
(bad)
push
mov
push
movs
pop
or
rcl
and
fs
add
xchg
adc
adc
fsub
sbb
push
push
addr16
enter
push
test
push
jge
push
and
(bad)
jle
dec
dec
int3
stos
push
aam
fcomp
or
or
mov
mov
add
push
fcom
xor
std
arpl
inc
add
les
lahf
jmp
dec
or
rcl
lods
es
adc
das
shl
inc
mov
add
pusha
jl
dec
ret
sbb
inc
mov
lea
shl
in
cmp
jns
mov
sbb
sbb
inc
pop
push
push
inc
xor
cmp
fsub
adc
inc
push
push
jle
bound
mov
jle
add
es
je
push
inc
(bad)
pop
adc
fwait
push
ret
mov
mov
push
pop
iret
inc
add
adc
add
jne
cs
sbb
sbb
inc
les
pop
xor
sbb
xchg
outs
js
push
add
out
or
sbb
pusha
dec
push
lock
daa
sbb
lods
pop
daa
mov
add
lods
or
sub
test
jg
pop
fdivr
sbb
addr16
inc
fbld
jne
push
cmp
jmp
mov
test
adc
or
lahf
xchg
test
test
sahf
jmp
xlat
retf
ins
or
add
out
rcr
or
push
mov
pop
pop
mov
push
and
push
rol
sub
popf
add
pop
and
or
test
das
push
and
dec
push
pop
iret
out
jne
lock
push
xchg
ins
dec
(bad)
jmp
dec
les
adc
mov
aaa
lods
or
mov
pushf
pop
xor
jnp
dec
leave
cwde
movs
in
push
enter
push
or
inc
push
cmp
xor
add
pop
push
ret
jge
nop
push
enter
(bad)
and
in
or
(bad)
xor
inc
xor
cmps
sbb
and
movs
nop
mov
push
sbb
ss
mov
jge
popf
sbb
xchg
fucomi
cmp
lods
push
fdivr
pop
xor
test
movs
and
mov
xor
mov
inc
cs
dec
xchg
adc
int3
sbb
cmp
inc
lock
dec
or
lds
ins
dec
shl
aam
lahf
jnp
xchg
rol
mov
lea
and
jnp
push
mov
pop
jb
jmp
sub
xchg
mov
sbb
cmp
mov
mov
cmp
sbb
inc
nop
mov
mov
inc
mov
mov
mov
adc
xchg
and
sbb
idiv
in
xchg
call
push
add
inc
jl
and
and
adc
lds
sbb
or
dec
fcom
adc
in
aam
mov
adc
cwde
inc
xor
dec
xorps
xor
mov
in
out
ss
jl
push
xor
inc
jo
cwde
ret
xor
leave
mov
loopne
dec
push
jb
inc
call
sub
jbe
xor
push
pop
sub
cmp
retf
and
or
dec
add
inc
mov
and
mov
sbb
rol
pop
leave
sub
in
pushf
inc
nop
xor
xchg
popf
in
les
test
call
xchg
call
add
mov
fistp
adc
imul
arpl
leave
test
lahf
(bad)
push
xchg
mov
cwde
xchg
pop
lahf
inc
lahf
enter
mov
lea
add
sub
in
js
add
clc
jmp
xchg
inc
test
and
in
sbb
and
xchg
jge
mov
jb
xchg
mov
adc
in
adc
and
shl
ret
inc
inc
and
outs
lfs
in
xor
add
and
sbb
mov
test
test
mov
loopne
sbb
dec
(bad)
xchg
mov
in
(bad)
cmc
test
mov
dec
cmp
sbb
push
sbb
cmc
pusha
mov
call
fadd
jne
shl
sbb
hlt
aad
cmps
in
and
push
xchg
add
mov
pop
imul
pop
xor
fsub
test
sub
pop
push
cmp
aad
jl
push
mov
pop
or
enter
movs
stos
ficom
call
sbb
rcr
es
std
test
xor
dec
lock
nop
ret
adc
loop
sub
or
pop
sbb
sbb
pop
in
adc
or
in
xchg
jo
mov
cld
aaa
fisub
setb
xlat
push
cmp
jbe
push
xor
add
rol
test
sub
pop
(bad)
call
or
xor
test
sbb
je
fcmovnbe
mov
jg
test
add
or
arpl
adc
mov
xchg
pop
shl
div
inc
sbb
jecxz
xchg
dec
in
out
stos
js
hlt
mov
stos
mov
push
and
pop
mov
xchg
pushf
loopne
inc
mov
lds
lods
das
or
xor
xchg
push
arpl
nop
cmp
in
lods
lods
inc
push
sbb
jmp
jo
inc
addr16
mov
jne
xchg
or
push
mov
aaa
cmp
push
or
push
rcr
sar
xchg
and
lahf
ja
and
inc
lea
mov
pusha
lods
fidivr
dec
scas
rcl
add
mov
loope
scas
lds
daa
enter
(bad)
mov
cmp
outs
and
lods
aad
sbb
adc
push
dec
hlt
sbb
movs
pop
test
fucomip
jmp
push
cmp
in
mov
mov
movs
mov
test
arpl
call
or
mov
jne
push
mov
ret
inc
rcl
push
cwde
aad
gs
inc
ret
int3
shr
adc
lds
mov
add
js
in
cmp
sbb
sub
das
cmp
inc
jmp
add
push
cwde
mov
mov
inc
les
mov
xlat
jo
pushf
dec
mov
in
sahf
dec
push
cmp
xor
enter
ror
mov
add
in
(bad)
jne
sbb
adc
push
inc
inc
mov
mov
ins
mov
cmp
inc
sub
mov
xchg
rcl
mov
mov
dec
push
aad
push
clc
cdq
and
lods
lds
(bad)
aam
jbe
ja
mov
adc
imul
movs
xchg
stos
enter
out
outs
pop
sbb
fstp
push
ins
and
ror
mov
rcr
mov
test
or
inc
cmp
or
inc
enter
xchg
dec
sbb
ja
ja
or
and
call
sub
mov
sti
jns
and
inc
add
and
adc
xchg
push
fs
dec
leave
mov
inc
sar
jl
cmp
sbb
pop
mov
push
dec
add
pop
mov
and
or
leave
jno
and
iret
rcr
and
nop
lea
test
in
dec
scas
test
push
test
rcr
inc
rcr
or
lods
xchg
icebp
mov
pop
mov
push
ret
sbb
in
inc
sbb
sub
fwait
fs
xlat
aam
ret
push
mov
ss
loopne
or
lods
pop
xchg
scas
int
add
test
cmps
adc
and
fwait
inc
mov
mov
pusha
add
cdq
js
sbb
add
aas
in
mov
cmp
sub
loopne
cmps
sbb
dec
pop
popa
mov
or
mov
cmp
sub
add
in
ret
es
in
aam
xor
or
and
lahf
test
inc
call
xchg
iret
or
mov
sbb
cmp
jo
sbb
pop
pop
repnz
and
jo
cmp
iret
scas
ins
int
sbb
xchg
scas
aaa
sbb
push
enter
add
inc
jb
cwde
aaa
jns
pop
shl
sbb
or
nop
add
mov
je
(bad)
icebp
clc
add
add
push
pop
add
cmps
jg
movs
xor
(bad)
push
(bad)
aad
loopne
dec
mov
push
lods
test
mov
or
movs
add
js
mov
enter
jmp
xor
push
push
xchg
pop
cmp
cmp
idiv
sbb
(bad)
dec
popf
or
fcomp
loopne
ja
inc
rcl
cmp
and
or
gs
in
dec
inc
test
or
out
xchg
or
pusha
(bad)
fcom
jb
cmps
icebp
push
jo
jno
addr16
shl
test
aad
sub
fmul
xlat
mov
pop
push
std
push
retf
mov
xchg
pop
push
(bad)
call
test
fbstp
add
mov
xchg
iret
fmul
mov
pop
adc
adc
pop
adc
gs
test
cmc
nop
int3
dec
add
pop
das
stos
push
add
jns
int
add
adc
dec
int
adc
int
add
inc
dec
dec
mov
push
(bad)
fsubr
in
jo
push
inc
movs
int
and
inc
in
and
fdivr
add
jmp
into
daa
pusha
and
iret
imul
push
jne
mov
gs
jno
add
in
xchg
int3
cwde
mov
rcl
pop
loopne
enter
dec
mov
dec
mov
arpl
rcl
retf
xchg
dec
mov
sbb
movs
in
aaa
cmp
hlt
clc
cmp
cld
add
push
enter
add
inc
mov
add
and
nop
popa
or
inc
cmp
leave
xchg
inc
ficomp
shl
outs
sbb
or
ror
add
mov
push
and
out
fadd
mov
sbb
pop
push
sbb
bswap
or
shr
xor
mov
repz
ret
movs
sbb
cmp
lock
shl
inc
sbb
xchg
or
sub
xchg
test
or
or
outs
mov
pushw
pop
adc
in
and
pushf
setb
leave
leave
xchg
mov
fs
nop
xor
dec
mov
xor
dec
or
sbb
adc
sbb
push
adc
aad
or
add
(bad)
cmps
adc
sub
or
cld
fsub
sbb
sub
jae
mov
cmp
inc
add
lods
pop
loopne
inc
sub
jnp
das
test
xor
rcr
dec
pop
mov
and
in
stos
or
pop
pusha
gs
and
mov
xchg
push
int3
aaa
adc
adc
lock
shl
mov
mov
mov
fstp
and
repz
mov
les
mov
mov
mov
and
sbb
lock
nop
and
rcr
mov
mov
icebp
aam
pushf
or
imul
pop
fxch
cmp
push
sbb
in
add
adc
loope
push
xor
fld
(bad)
cmps
xor
sbb
ror
leave
lds
cdq
in
mov
pusha
inc
fdivr
(bad)
ficomp
xor
push
xchg
outs
fist
xchg
(bad)
adc
push
fnsetpm(287
scas
mov
fstp
aas
fisttp
pop
idiv
sbb
jb
or
mov
sub
adc
in
sbb
push
adc
mov
jo
jle
jl
sub
jns
add
fadd
dec
inc
push
xor
add
fcomp
dec
in
mov
test
call
loope
stos
cmp
add
dec
jecxz
xor
mov
and
xor
test
add
mov
and
in
jae
ins
aad
fdivrp
or
jmp
bound
lds
das
sbb
shr
inc
aad
imul
cmp
add
cdq
push
sbb
addr16
adc
out
inc
ins
mov
dec
test
push
stos
ffreep
inc
test
sti
(bad)
div
leave
and
cwde
int3
in
xchg
pop
jb
mov
lds
pusha
cld
adc
add
push
retf
loopne
das
inc
adc
stos
adc
das
push
mov
add
or
xchg
les
xchg
lods
fadd
enter
inc
and
xchg
cwde
mov
jecxz
xor
in
xor
loope
sar
les
sub
pop
out
imul
or
sbb
sub
push
cmp
xor
dec
xor
adc
adc
xchg
push
test
sbb
sbb
sbb
enter
test
sbb
sbb
add
mov
lods
xor
push
push
cmp
add
fadd
das
dec
mov
mov
xchg
stos
and
nop
in
mov
push
fcom
sub
movs
mov
adc
sbb
js
add
dec
in
call
gs
fcom
push
sti
and
add
jmp
fst
add
and
jb
(bad)
jl
arpl
adc
mov
push
sbb
cwde
jmp
enter
cmps
jae
add
mov
xchg
cmp
mov
and
adc
inc
or
ins
push
call
push
leave
lods
neg
xor
(bad)
xor
cmp
sbb
bound
fs
mov
ror
aam
aam
mov
loopne
lock
pop
push
xchg
mov
inc
pop
sbb
shr
daa
inc
mov
fsubr
movs
stc
ret
cmps
sbb
jns
inc
inc
int
int3
sub
and
xor
rcl
shl
inc
cmp
jecxz
push
out
jae
adc
aam
out
in
mov
sbb
or
mov
in
mov
fsubr
fsub
push
aam
or
push
rol
pop
dec
cmc
add
sbb
test
pop
ds
or
dec
std
nop
mov
add
clc
inc
mov
dec
test
sbb
call
sbb
or
enter
inc
inc
cmp
mov
out
sbb
mov
mov
adc
aam
popa
add
cmp
cmp
cmp
cmp
or
or
or
or
or
xchg
or
or
xchg
lock
inc
and
lods
inc
xor
cmp
mov
xor
inc
adc
sub
xor
and
xchg
mov
cmc
push
les
ret
lea
jns
das
retf
js
inc
jmp
not
stos
and
(bad)
mov
pop
dec
pop
jo
call
adc
dec
fdivr
fs
loopne
lds
ins
stos
sbb
pop
mov
jnp
mov
int
push
adc
in
push
xchg
sub
jb
xor
and
test
aam
adc
stos
lods
inc
das
jae
or
mov
jb
lods
test
je
call
xor
or
call
add
data16
push
pusha
adc
dec
xor
pop
fdiv
ins
das
fcomp
sub
push
dec
push
sbb
mov
mov
bound
les
adc
aam
jo
xor
sub
inc
xchg
mov
sti
das
jne
inc
xor
add
stos
push
or
xchg
mov
xor
ins
cmp
adc
cld
mov
add
ins
rdpmc
and
jne
test
movs
dec
jb
xlat
fadd
(bad)
shr
dec
pushf
fcomp
or
mov
pop
test
ror
dec
adc
fsubr
sbb
fmul
sub
in
lods
dec
(bad)
cs
(bad)
fst
je
lea
push
lea
call
inc
push
in
lds
cs
aam
or
adc
adc
inc
ja
add
or
movs
mov
daa
inc
dec
xchg
fadd
sbb
and
loope
add
pusha
xchg
sbb
pop
add
inc
pop
push
pop
mov
push
dec
and
and
pop
dec
or
pop
pushf
je
pop
push
sbb
sbb
movs
rcl
push
inc
fwait
cmpxchg
dec
or
push
arpl
dec
sti
pop
dec
adc
loopne
dec
xor
daa
test
adc
sub
dec
es
sub
xor
and
add
jmp
ror
in
nop
add
push
mov
in
mov
lock
icebp
or
es
cwde
jecxz
add
sub
imul
aam
add
cs
enter
mov
aad
sub
push
and
sbb
add
pushf
dec
add
les
cwde
sub
mov
or
xor
les
mov
sub
add
fisubr
xchg
jl
mov
jne
inc
xchg
cmps
cmp
arpl
out
add
pop
mov
rol
ficomp
push
pop
inc
rcr
mov
mov
inc
pop
adc
pushf
and
xor
adc
pop
je
rol
mov
mov
cdq
and
jmp
inc
xchg
sub
(bad)
dec
adc
inc
fst
pop
out
inc
cmp
add
xchg
xor
loopne
mov
or
in
adc
push
mov
gs
or
inc
es
or
add
jecxz
or
dec
out
mov
or
push
aam
jo
jo
add
or
lock
pop
mov
popa
enter
sbb
add
or
adc
ins
sbb
int3
pop
int3
dec
je
cmp
invd
das
mov
adc
mov
lods
das
add
ret
adc
(bad)
push
sti
cwde
int
or
jno
imul
sub
dec
adc
or
movs
in
xchg
sub
mov
and
imul
mov
pop
fist
fadd
add
rcr
jmp
xchg
xchg
aaa
fbstp
mov
sbb
les
ja
rcr
push
pop
sbb
es
mov
pop
(bad)
unpckhps
push
mov
cmp
sbb
js
ror
pop
in
fcom
test
call
xchg
xor
in
or
add
mov
or
repz
loopne
sub
aad
xor
mov
shl
in
jns
push
nop
int3
test
mov
std
cmp
dec
sbb
add
dec
mov
sub
dec
les
sub
push
test
in
sbb
ins
adc
dec
fs
push
add
dec
mov
imul
dec
inc
cmp
mov
cwde
enter
repnz
mov
xor
in
lods
jne
dec
out
and
ss
adc
aad
std
cmp
xchg
pusha
das
mov
adc
addr16
and
mov
stos
and
popa
adc
fucomp
pop
jo
test
js
std
stos
inc
xor
push
dec
ins
and
imul
mov
xor
loopne
ret
jmp
repnz
add
movs
cmp
mov
xor
fcomp
push
mov
and
fistp
mov
stos
adc
lock
test
or
sub
xor
popa
lods
jecxz
push
add
and
or
movs
jae
outs
loopne
push
movs
inc
xor
mov
jmp
repnz
movs
or
pop
or
stc
int
pusha
push
and
cmps
add
and
sbb
sbb
cdq
xchg
mov
ficom
mov
cld
test
jns
jmp
add
inc
aad
pop
pop
jecxz
inc
gs
push
sbb
fmul
mov
add
lock
aam
add
sub
pop
(bad)
(bad)
(bad)
movs
push
pop
xor
sbb
or
lods
mov
push
mov
fdivr
popa
outs
pushf
dec
fs
mov
(bad)
jmp
repnz
adc
adc
(bad)
or
pop
repz
xor
shl
sub
inc
and
adc
sub
push
xor
add
add
pusha
and
push
and
adc
lds
xor
adc
(bad)
mov
cmps
loopne
inc
mov
mov
cwde
and
out
adc
and
or
mov
push
lods
or
adc
pop
aad
lods
and
dec
pop
popa
pop
adc
sbb
les
push
mov
(bad)
pop
and
or
inc
movs
sbb
movs
xor
ins
in
(bad)
or
add
dec
jle
or
inc
add
test
retf
adc
loopne
fmul
outs
jmp
ror
add
and
inc
add
mov
pop
and
sub
stc
in
movs
pop
xchg
push
inc
shl
les
or
jne
cmp
lea
popa
aam
adc
and
fisub
dec
test
retf
sub
stos
outs
lods
imul
daa
inc
mov
sub
enter
lds
test
xchg
xor
cwde
jbe
or
nop
jl
or
movsx
repnz
das
ret
xor
rcr
sbb
adc
rcr
mov
mov
(bad)
and
or
out
mov
dec
popa
aad
adc
push
add
push
sbb
sbb
ss
fs
dec
fiadd
call
pop
add
add
loope
gs
pop
mov
rol
cdq
les
imul
jne
dec
imul
pop
adc
sbb
add
imul
in
sub
sub
sbb
sbb
enter
(bad)
mov
dec
or
retf
iret
add
add
inc
test
push
sbb
in
push
pusha
fs
xchg
cwde
in
push
in
mov
push
test
rol
inc
(bad)
clc
xor
pmulhuw
add
pop
or
and
jb
adc
jb
pop
jb
pop
pusha
pop
jb
pop
jl
test
pop
jb
lods
mov
jl
sub
js
xchg
aaa
fdivr
push
enter
push
or
sbb
mov
test
sbb
pop
jb
jl
pop
jb
pop
movs
test
and
jb
mov
jb
pop
jb
mov
pop
in
adc
nop
add
nop
adc
cmp
lods
sbb
ret
leave
adc
sbb
inc
push
in
push
je
jbe
push
xchg
(bad)
jns
pop
repnz
int3
in
or
inc
push
enter
nop
or
add
or
sbb
inc
push
enter
pop
or
add
or
jge
or
add
inc
add
pop
cs
stos
adc
pop
jg
and
mov
sub
jnp
push
sub
mov
push
inc
xchg
mov
xchg
adc
fist
xchg
int
fs
xor
xchg
in
xor
scas
add
or
cmp
nop
mov
fcmovnb
or
sahf
add
inc
sbb
xor
and
xchg
jg
xor
push
in
test
or
loope
test
push
cs
sub
inc
or
push
inc
test
aas
stos
enter
jl
test
mov
loopne
shl
sbb
movs
or
inc
dec
mov
imul
rcr
and
adc
fdiv
ss
push
sub
xchg
pusha
mov
and
sbb
cwde
aam
mov
aas
mov
mov
dec
je
inc
and
or
pop
enter
lock
(bad)
cmp
jb
sbb
in
jmp
pop
rcl
nop
push
xor
pop
sub
push
or
xor
mov
sub
adc
rcl
dec
shr
adc
cmp
dec
cwde
and
pusha
add
and
aaa
clc
sbb
and
imul
lods
sbb
sbb
inc
push
jbe
push
sbb
sbb
jb
add
push
sbb
nop
pop
dec
push
fs
mov
push
and
leave
sbb
xor
and
jns
dec
adc
cmp
pop
push
ss
(bad)
aam
lock
inc
xchg
js
and
push
mov
sbb
lock
mov
xor
in
push
les
enter
and
clc
and
mov
pop
push
pop
and
xchg
test
mov
fs
scas
or
mov
push
sar
in
push
push
sbb
xchg
cwde
pushf
cmp
sub
or
test
jns
dec
sub
sbb
inc
add
pop
rol
in
adc
push
out
mov
jne
rcr
stos
dec
and
inc
lock
pcmpeqb
popa
popf
fcom
or
and
sub
sbb
sub
and
and
(bad)
rol
enter
hlt
mov
fs
adc
lods
pop
sbb
loopne
mov
ins
loopne
push
cmp
sbb
loopne
cwde
mov
adc
aam
test
loopne
aas
das
mov
mov
outs
pusha
mov
das
aam
daa
stc
sub
lods
inc
inc
ins
stos
dec
push
push
pop
enter
and
loopne
fadd
add
or
sub
adc
mov
push
call
sar
sbb
or
shr
test
sti
jo
mov
test
adc
mov
dec
dec
or
and
js
xchg
mov
xchg
test
push
push
adc
dec
inc
xor
jo
and
pop
xor
shr
dec
(bad)
add
ins
arpl
xor
rcr
cwde
inc
in
repz
shl
les
and
mul
mov
loope
test
sbb
inc
ins
pop
ror
and
or
push
sbb
mov
push
xor
and
cmp
popa
cmc
mov
aam
pop
or
jnp
rcl
test
jge
inc
pusha
nop
or
repnz
add
add
ret
sti
jae
xchg
push
or
repnz
lods
mov
xchg
or
pop
sbb
add
mov
sbb
aam
mov
add
das
push
ja
aaa
ret
xor
std
nop
scas
cs
sbb
or
or
mov
add
adc
rcl
mov
or
add
sbb
popa
xor
ror
sub
xchg
cs
push
std
js
inc
push
ins
pop
in
mov
and
movs
add
mov
or
mov
ror
adc
shr
push
adc
mov
adc
or
mov
mov
inc
xchg
pop
leave
mov
cdq
ss
pop
cld
adc
icebp
add
add
(bad)
push
cmp
fadd
mov
or
push
add
int3
dec
adc
xor
in
adc
or
cmp
mov
loopne
sbb
rol
(bad)
add
aad
outs
cmp
inc
cmp
push
fdiv
(bad)
sbb
mov
leave
inc
inc
test
mov
addps
in
in
jo
lods
pusha
pusha
push
ret
dec
aad
and
cmp
inc
xor
adc
movs
inc
or
fadd
fs
or
fs
or
fstp
xor
es
lahf
enter
add
cmc
adc
and
inc
adc
sbb
push
mov
cwde
mov
int3
shl
push
lahf
ror
dec
pusha
adc
push
dec
push
add
repnz
dec
xor
std
sbb
pop
shr
add
or
jge
xor
pop
shl
adc
mov
inc
xor
add
in
(bad)
rcr
int3
out
push
mov
pop
cmp
xor
std
in
in
in
inc
push
cmp
in
in
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
sbb
in
add
nop
add
in
nop
add
nop
in
in
in
inc
xchg
add
in
in
and
push
fcomp
ret
rol
or
xor
clc
xor
push
ret
cmp
add
(bad)
mov
test
dec
shl
xor
jmp
in
jnp
sub
les
ins
rcr
ficom
not
jl
adc
or
cmp
cdq
ss
les
nop
cld
cdq
neg
dec
test
sbb
and
mov
mov
cmps
sbb
shl
fs
mov
fs
dec
pushf
mov
adc
dec
xor
or
cmp
and
mov
mov
cs
fcom
cmp
sbb
test
cmp
xchg
mov
rol
loopne
enter
outs
fcomp
mov
fiadd
call
sub
pop
in
lods
daa
das
jmp
or
icebp
call
cdq
fadd
std
ret
mov
xchg
and
pusha
add
mov
bound
push
bound
dec
les
fmul
add
mov
das
lahf
jo
or
mov
leave
inc
aam
les
scas
cmp
dec
sub
call
shr
fs
and
and
les
pop
mov
(bad)
jo
xor
jns
mov
ins
sar
add
(bad)
(bad)
mov
dec
sar
cwde
not
(bad)
push
stc
les
add
push
aas
cmp
pop
add
jne
xor
stos
pushf
mov
sub
test
xchg
push
and
adc
mov
fst
add
lods
popa
pop
out
repnz
sub
sti
add
cmps
add
ret
inc
or
and
sbb
ret
test
dec
adc
mov
push
pop
sbb
pop
add
sbb
leave
jmp
push
retf
or
ret
or
popa
lahf
or
xor
hlt
adc
inc
arpl
iret
inc
pusha
xchg
fist
and
iret
adc
adc
jmp
inc
fcmovu
adc
(bad)
(bad)
in
xor
leave
inc
mov
adc
stos
mov
mov
cmp
jo
(bad)
adc
dec
jne
sbb
jo
xlat
aam
xor
adc
enter
mov
pop
sub
lds
sub
and
sub
es
push
xor
adc
sbb
pop
sub
repz
mov
inc
(bad)
adc
xchg
repnz
in
enter
sub
test
jecxz
xor
lock
push
aam
inc
or
pop
sub
cmp
push
sbb
outs
or
or
ror
daa
stos
jb
add
(bad)
jae
add
add
popa
xor
stc
mov
or
sbb
call
fnstsw
xchg
xor
cdq
dec
add
and
and
enter
push
lea
rcl
dec
das
mov
jb
xchg
pop
or
retf
push
dec
sbb
push
sbb
outs
xor
add
fwait
test
and
cdq
sbb
dec
mov
mov
push
add
or
int
stos
mov
shr
movs
mov
mov
fwait
sar
push
icebp
mov
mov
sbb
js
test
aad
das
shr
adc
and
pop
dec
mov
and
ins
unpcklps
int3
fcom
dec
dec
mov
mov
mov
sbb
mov
add
nop
movd
add
lea
ins
mov
or
pop
xchg
push
mov
pop
cwde
outs
mov
or
mov
mov
sbb
fcomp
cdq
sbb
or
inc
mov
mov
mov
(bad)
xchg
mov
lahf
(bad)
rcl
mov
cmovo
sbb
jg
bound
or
jmp
add
dec
imul
aam
dec
xor
iret
xor
mov
sbb
cmc
and
aam
dec
repnz
(bad)
xchg
or
dec
jb
fdiv
fnsave
les
pop
adc
jns
and
test
jmp
outs
popf
and
bound
sub
aaa
mov
add
inc
loop
jne
sbb
les
outs
int3
enter
sbb
movs
xor
lods
in
mov
test
gs
mov
das
xor
xchg
or
or
pop
or
(bad)
mov
inc
push
jl
add
xchg
or
jb
mov
pop
mov
and
lock
je
dec
jne
stos
mov
fwait
jns
jno
mov
out
add
jmp
mov
shr
add
sar
in
inc
rcl
add
push
pop
in
sub
(bad)
and
loopne
outs
enter
stos
ins
mov
sbb
xor
out
sub
sbb
bound
inc
jo
mov
adc
inc
les
fsub
mov
stc
scas
pop
ja
les
stos
das
fdivr
call
call
inc
pop
js
adc
aas
cmp
outs
xchg
es
jns
sub
and
fdivr
xchg
add
popf
mov
adc
sbb
retf
add
mov
rsm
sbb
(bad)
cmc
not
inc
pop
ins
fsubr
inc
or
js
mov
shr
das
sbb
les
mov
cmp
jl
adc
fistp
outs
mov
ins
adc
lds
xchg
fs
sub
loopne
(bad)
sbb
or
mov
add
jle
bound
dec
mov
test
add
mov
add
mov
mov
add
sti
leave
sbb
in
add
ins
enter
test
test
inc
lea
mov
xor
mov
xor
je
mov
push
jle
pop
and
mov
imul
dec
mov
in
imul
stos
or
or
adc
call
jno
cmp
div
rep
cdq
pusha
adc
adc
shr
test
sub
dec
mov
sbb
dec
mov
aam
push
or
stos
(bad)
icebp
mov
push
and
and
jg
add
fimul
mov
je
mov
dec
push
sti
loopne
dec
rol
mov
and
inc
pop
jb
rcr
jo
push
aas
fcom
inc
popa
aad
dec
or
aam
in
pop
int
aad
or
enter
inc
push
mov
int3
movs
rol
mov
jmp
pop
ins
in
aas
in
shr
movs
adc
cmpxchg
icebp
test
mov
test
lea
and
cmp
mov
adc
fs
pop
leave
ins
push
push
sub
iret
scas
das
mov
cmp
iret
loopne
aas
push
adc
iret
or
or
jmp
xchg
push
push
inc
pusha
mov
daa
test
mov
and
mov
xchg
adc
or
push
inc
aas
dec
dec
push
add
adc
push
xor
jne
sub
add
fcomp
pop
leave
aam
jae
pop
stos
pusha
aaa
minps
inc
mov
aam
sbb
mov
lods
call
lods
and
data16
push
pusha
rol
test
push
mov
push
mov
sub
aas
adc
nop
mov
in
mov
aas
ins
mov
cwde
aas
mov
add
sbb
mov
and
push
lds
loop
enter
lods
fimul
pop
adc
inc
push
int
in
dec
and
sub
mov
sbb
leave
mov
hlt
scas
mov
ins
mov
xchg
cmps
push
sbb
sbb
shr
mov
dec
repz
mov
xor
rcr
fstp
enter
dec
xor
and
add
xchg
fisttp
leave
and
xchg
iret
out
xchg
push
xor
sub
in
and
pop
ins
inc
mov
sub
push
cmp
xor
in
aas
pop
jns
and
sub
pop
jb
push
jb
and
sbb
xchg
mov
push
mov
nop
shl
mov
rcl
rol
push
icebp
fstp
enter
and
adc
fsubr
cmp
fadd
pop
aaa
nop
and
fs
in
inc
mov
and
xor
dec
push
cmp
aas
lock
and
dec
hlt
pop
cmp
cld
inc
pop
dec
push
ja
jns
pop
imul
or
inc
jb
shl
or
adc
adc
xchg
sbb
and
(bad)
jg
jo
sbb
jnp
arpl
test
xchg
push
nop
and
in
sti
cmp
and
or
pop
jb
xchg
and
push
xor
dec
inc
sub
and
pop
and
fs
xchg
ins
imul
jge
jb
and
enter
xchg
fwait
pushf
and
movs
scas
xchg
lods
mov
in
push
push
popa
nop
and
inc
push
in
jecxz
cmp
icebp
in
push
cmp
cmp
pop
lods
sbb
iret
jmp
and
movs
jb
mov
imul
dec
push
test
mov
push
xor
dec
rol
xchg
sbb
adc
xor
and
sbb
mov
in
inc
sub
cdq
dec
test
cmps
fsub
xchg
dec
push
mov
(bad)
and
ret
mov
dec
push
cmp
fucomip
in
and
in
in
sti
or
inc
mov
pop
pop
hlt
sbb
and
or
and
cld
xor
inc
mov
inc
add
leave
arpl
dec
pop
or
es
pop
(bad)
arpl
inc
dec
movs
addr16
mov
jne
mov
adc
dec
js
or
push
jo
sti
sahf
retf
or
add
push
sub
mov
dec
movs
push
test
outs
cdq
jbe
dec
cmp
iret
jnp
shl
xchg
iret
push
movs
or
test
je
jl
pop
mov
nop
or
adc
out
nop
rcl
sbb
lods
mov
sub
rcl
fmul
test
cmp
inc
mov
or
or
adc
outs
adc
cld
mov
sti
adc
sub
lods
push
sub
xor
or
inc
call
into
pop
jb
mov
movs
pop
scas
mov
or
xchg
mov
inc
(bad)
into
dec
enter
adc
mov
push
and
xchg
adc
pusha
ja
ror
push
mov
or
jae
or
sub
and
cmp
outs
bnd
mov
std
pushf
int3
cs
retf
fmul
out
clc
inc
rcl
not
push
pop
mov
nop
inc
in
movs
mov
rcl
fwait
or
sbb
bound
pop
pusha
ins
addr16
cmp
mov
sbb
add
fsub
push
or
mov
and
test
or
push
jl
in
punpckhbw
xchg
fistp
outs
push
mov
loopne
and
mov
push
cli
xchg
jge
or
xchg
test
inc
sbb
dec
pop
cmp
pop
dec
mov
pop
inc
sbb
push
sti
add
test
xor
xchg
and
and
pop
jb
sub
and
mov
or
push
jl
movs
pop
cmp
sbb
and
jb
(bad)
enter
jb
rcl
pop
jb
pop
fcomp
loopne
pop
jb
in
jb
pop
jb
lock
pop
jb
pop
clc
cld
sub
dec
pop
cmp
cmp
or
adc
sbb
cmp
pop
mov
and
sbb
cmp
inc
dec
dec
ja
cmp
fs
nop
inc
ins
je
in
inc
push
test
pushf
movs
lods
les
adc
mov
sub
shr
adc
sbb
rcr
test
sbb
enter
mov
add
enter
sbb
sbb
enter
enter
in
hlt
lock
enter
cld
add
or
fs
add
das
cld
mov
adc
loope
pop
lods
sub
cmp
and
mov
mov
lds
jge
sub
jge
int3
enter
xor
cmp
dec
ret
jmp
adc
cwde
in
and
push
adc
imul
stos
scas
adc
mov
push
stc
mov
mov
add
lods
push
dec
add
out
mov
(bad)
push
dec
pop
gs
stc
cmp
jecxz
out
add
repz
dec
mov
ret
out
iret
out
adc
dec
mov
popf
test
ss
out
repz
dec
lock
repz
sub
jp
stc
cmp
ret
(bad)
adc
jns
dec
imul
repz
inc
repz
repz
jns
mov
out
call
push
lahf
out
sahf
jae
stos
(bad)
jecxz
dec
out
fidivr
dec
push
dec
imul
or
cmp
repz
pop
jnp
cmps
stc
cmp
repz
push
out
sahf
cmps
sub
ins
sbb
(bad)
adc
iret
repz
dec
sbb
repz
and
jns
out
pop
jne
stos
dec
repz
(bad)
jecxz
sbb
cmp
repz
mov
adc
sahf
sub
movs
push
mov
xor
dec
add
call
in
add
ins
fs
popa
jb
gs
imul
out
cmp
mov
and
cmp
or
pop
mov
ja
dec
fcmovb
adc
outs
push
add
es
into
xchg
out
sldt
pop
push
and
aam
out
test
jl
dec
(bad)
dec
push
rcl
inc
add
std
pop
jl
cmp
push
aam
fiadd
ins
outs
add
fild
ins
pop
jle
pop
data16
ss
push
mov
neg
cld
in
inc
add
push
mov
push
repnz
sbb
(bad)
xlat
push
pop
pop
jecxz
(bad)
sbb
push
pop
xchg
pop
pop
cmp
imul
fisttp
inc
jp
xchg
xor
jnp
ja
jb
jae
jmp
aaa
push
fisttp
repz
cmp
addr16
mov
(bad)
sbb
cmp
jns
rcl
add
repnz
shl
dec
je
test
retf
jae
push
out
xor
or
sbb
(bad)
or
push
out
xor
xor
and
and
cmp
jle
es
xor
jns
idiv
push
outs
pop
sub
or
and
enter
ds
test
fs
jnp
fsubr
adc
add
cmp
dec
das
add
das
fcom
ffreep
push
add
aas
push
pop
mov
xchg
int
xor
adc
sahf
sub
pushf
loopne
xor
mov
inc
adc
push
add
es
cmp
mov
inc
ins
addr16
inc
push
outs
fs
data16
cmp
jae
cmps
(bad)
cmp
inc
outs
outs
je
outs
ins
inc
repnz
dec
dec
inc
jb
ins
and
sbb
push
imul
outs
dec
ins
gs
daa
fs
imul
ds
push
test
leave
mov
dec
inc
add
inc
outs
jne
jmp
call
popa
jns
gs
arpl
inc
add
dec
mov
outs
jb
outs
outs
inc
inc
das
in
loop
int
adc
ins
push
outs
imul
jle
arpl
imul
pop
(bad)
(bad)
push
jns
je
ins
dec
adc
ja
push
inc
push
xor
push
sub
mov
add
jb
add
or
mov
daa
inc
mov
jne
adc
jne
add
dec
ins
pop
push
ins
out
mov
inc
inc
sbb
jb
jo
imul
aas
push
push
ins
xchg
pop
cmp
imul
xchg
jo
cmp
jbe
mov
in
pop
adc
mov
adc
sub
jne
inc
sub
xor
sar
dec
stos
mov
push
bound
inc
imul
popa
pop
rol
(bad)
loope
imul
outs
cmp
sub
dec
(bad)
ds
repz
push
cmc
inc
aas
jmp
call
in
push
cmp
ds
repz
dec
inc
mov
dec
repz
out
pop
mov
idiv
jge
out
push
pop
inc
push
mov
mov
dec
out
cld
imul
aaa
fwait
scas
stos
adc
jnp
jp
js
dec
lods
test
adc
jg
ins
outs
movs
xor
popa
cmp
or
call
mov
jge
mov
xor
sbb
loopne
rcr
dec
sbb
push
ins
push
sbb
daa
inc
mov
jg
js
dec
je
ins
dec
gs
jo
push
push
outs
lahf
xlat
ins
lahf
arpl
jp
jo
mov
inc
enter
test
pop
clc
es
inc
mov
iret
repz
out
movs
lds
jne
cdq
dec
repz
pop
enter
ja
repz
pop
pop
push
mov
repz
out
pop
outs
popf
fisttp
pop
sbb
cmp
stos
loopne
pop
push
into
inc
clc
nop
movs
clc
add
out
dec
fimul
jb
fcmovnb
xchg
adc
adc
rol
cld
inc
and
xor
ss
ins
retf
dec
inc
push
(bad)
fs
cmp
das
xor
xor
xor
or
add
pop
add
movs
stc
dec
and
push
sar
sub
push
mov
inc
call
bound
xchg
add
cmp
lds
imul
pop
mov
das
inc
call
(bad)
mov
adc
push
sar
pop
adc
and
sub
bound
lds
push
sar
hlt
jno
mov
outs
outs
cmp
cs
and
fist
dec
fiadd
sub
in
inc
test
sahf
add
and
mov
or
aad
push
or
jb
addr16
imul
jns
mov
out
sar
jnp
sbb
inc
mov
mov
xchg
out
inc
inc
jne
je
push
push
je
je
arpl
inc
das
div
or
or
inc
push
dec
inc
shl
add
aaa
sbb
(bad)
in
adc
jg
jg
inc
push
push
push
dec
dec
add
jnp
mov
(bad)
inc
mov
dec
dec
inc
dec
add
ds
sahf
adc
xor
add
(bad)
pop
sbb
cmovne
scas
cmp
adc
fistp
scas
and
inc
js
gs
imul
jle
jnp
fnstenv
cmp
cmp
xchg
mov
sbb
pop
(bad)
push
mov
outs
jbe
ins
imul
addr16
cs
outs
je
jne
jo
jb
gs
adc
inc
dec
gs
es
sbb
pushf
jp
or
pusha
ss
enter
inc
dec
aaa
xor
pop
push
int3
mov
pop
nop
dec
sahf
jbe
jo
pop
push
xlat
(bad)
dec
sahf
out
(bad)
inc
push
outs
arpl
fstp
loopne
inc
jae
outs
arpl
add
pop
outs
mov
pop
jge
or
and
scas
and
popf
iret
mov
outs
ret
xchg
fmul
imul
cmps
xor
cmps
cmp
xchg
add
inc
push
pushf
and
imul
popa
and
outs
imul
jg
cwde
sub
iret
push
data16
call
cmp
add
pop
jae
pop
jbe
stc
push
call
push
aaa
ins
imul
sahf
mov
lock
ins
data16
jb
cvtpi2ps
push
cs
outs
lock
jno
int
in
out
popf
xor
dec
and
xor
jp
std
xor
inc
inc
imul
imul
dec
mov
cmps
push
movs
(bad)
fnsave
jb
jns
nop
movs
dec
ja
pop
inc
mov
mov
add
test
aad
bound
out
jl
push
xlat
push
dec
push
dec
inc
inc
push
sahf
out
xor
and
dec
add
je
popa
mov
fist
gs
call
inc
je
sti
bound
gs
dec
jae
(bad)
jg
ins
inc
je
push
push
dec
inc
push
dec
inc
dec
(bad)
push
jo
into
fsub
sub
cmps
fwait
dec
repz
out
mov
sub
imul
jle
data16
ins
in
and
mov
lods
push
jg
ja
sub
cld
es
mov
jle
pop
inc
add
mov
push
dec
enter
lahf
pop
adc
jmp
pop
mov
push
std
fstp
jg
dec
inc
inc
dec
cmp
ror
outs
popa
gs
pop
cwde
add
outs
mov
ins
imul
out
enter
xchg
xchg
retf
test
int
xchg
les
ret
loopne
inc
idiv
in
(bad)
out
jmp
(bad)
test
rcl
xchg
call
adc
in
(bad)
xor
(bad)
jns
out
cmp
adc
add
out
sahf
out
aaa
or
sahf
ds
cmp
mov
jo
js
inc
mov
scas
and
dec
add
inc
push
cld
repz
mul
ins
pop
or
adc
jae
sbb
push
lods
in
ja
push
pop
das
in
mov
mov
mov
ss
jmp
call
and
in
inc
jne
cli
pop
aaa
push
push
pop
jecxz
daa
mov
dec
adc
add
das
mov
fst
pop
mov
aaa
imul
cmps
jecxz
neg
lds
js
outs
sar
sbb
rcl
cmps
add
sbb
pop
in
ds
lahf
idiv
std
in
popa
push
scas
push
out
data16
jns
in
and
hlt
push
add
imul
fs
not
pop
xchg
shr
psubb
stc
mov
test
pop
or
pop
in
bound
xor
mov
or
iret
jecxz
in
jnp
mov
mov
in
in
sar
push
cld
(bad)
in
shl
pop
jl
call
mov
(bad)
or
imul
dec
cld
push
in
(bad)
sub
dec
push
dec
(bad)
in
in
nop
pop
enter
push
rcl
(bad)
cmp
ret
push
cs
xlat
push
out
fisub
loopne
leave
dec
retf
repz
leave
in
inc
retf
stc
push
iret
sar
out
dec
int
out
fisub
loopne
loope
aaa
into
push
mov
jl
loope
mov
push
push
loop
mov
ss
jo
fsub
(bad)
les
and
inc
ret
xchg
xor
push
enter
xchg
sub
loopne
and
inc
add
sub
and
div
fwait
in
hlt
es
xor
inc
sub
and
out
imul
add
adc
jno
xchg
adc
mov
es
hlt
dec
xchg
xor
inc
mov
push
mov
push
pop
xchg
push
xchg
ins
inc
fadd
pushw
pop
xor
mov
mov
and
fdivp
sahf
push
cmps
ds
fs
dec
ss
push
pop
imul
or
clc
xor
inc
imul
pop
pop
jb
jp
inc
fs
push
push
popa
and
sub
sbb
xor
xor
inc
push
jae
jb
(bad)
stos
cmp
gs
jne
xchg
aam
loope
cmp
les
rol
fwait
inc
inc
mov
adc
test
mov
test
cmp
enter
or
aaa
push
outs
or
jb
aaa
js
lea
(bad)
mov
repnz
and
jl
add
(bad)
repz
out
pop
shr
outs
push
js
or
xor
mov
inc
(bad)
cmp
cmps
stc
push
mov
jbe
cmp
out
cld
stos
cmp
sahf
out
fild
cmp
repz
mov
inc
leave
rcr
and
jae
pushf
fchs
cs
in
push
jl
mul
rcl
dec
pop
ds
mov
imul
scas
inc
adc
inc
ins
xchg
in
push
fcomi
aad
push
popa
bound
jo
jae
les
adc
and
and
sub
aaa
test
push
ins
inc
je
ins
jae
xor
pop
push
jae
jo
sar
in
jbe
fsub
dec
cmp
push
lods
xor
rcl
cmps
loope
stos
sar
int
mov
mov
inc
call
adc
or
cmps
stc
das
pushf
sbb
or
popa
add
and
mov
adc
jns
data16
cmovs
push
mov
imul
xor
and
mov
outs
jne
mov
mov
daa
test
pushf
es
aad
out
int
add
pop
(bad)
jmp
loope
outs
cmp
(bad)
clc
es
cmps
jo
mov
dec
jns
jecxz
out
scas
imul
test
test
jns
je
je
pop
arpl
xor
mov
push
cmp
dec
dec
add
clc
inc
ds
repnz
or
jg
popf
addr16
add
push
outs
jb
mov
icebp
push
mov
push
pop
mov
outs
je
sbb
jbe
mov
pusha
scas
test
aad
ins
add
push
aam
xor
gs
push
add
push
pop
ror
pop
push
inc
dec
pop
repnz
movs
sbb
in
push
inc
neg
xchg
pop
pop
inc
loope
sbb
pop
not
je
jae
es
inc
(bad)
das
add
pop
sub
into
repz
adc
pop
dec
imul
pop
pop
repz
xor
push
gs
aaa
sub
cwde
inc
movs
cs
js
ins
mov
jb
dec
outs
push
jne
push
inc
pop
repz
push
dec
je
add
and
dec
and
outs
mov
push
arpl
pop
shr
adc
mov
mov
pop
es
test
gs
lods
imul
ja
imul
dec
lods
add
xchg
inc
and
rcl
sbb
or
or
or
in
arpl
dec
jb
out
dec
inc
add
push
mov
sub
clc
fisubr
add
jbe
jo
and
mov
xchg
jne
outs
test
jne
cld
dec
fiadd
mov
addr16
aaa
retf
xor
push
or
jae
pop
je
lods
push
in
sub
pop
dec
and
in
jg
cmps
push
inc
add
push
stos
push
mov
push
inc
add
push
ds
(bad)
sti
(bad)
ins
push
cmp
or
push
and
data16
push
jp
pop
jo
lods
pop
mov
xchg
sub
lds
daa
ins
mov
mov
or
and
jae
das
inc
pusha
ins
mov
cmp
push
pop
mov
add
and
lock
adc
fwait
and
mov
gs
ins
fldenv
jg
xchg
ja
jb
dec
lock
mov
sub
dec
mov
div
and
imul
sbb
aaa
mov
push
pop
push
jne
out
into
popa
div
xchg
push
dec
fld
pop
bound
and
ins
sub
(bad)
test
pop
mov
add
pop
test
inc
and
test
iret
mov
fadd
add
aas
mov
inc
ud0
cmps
add
jo
push
lds
enter
and
sar
test
cmp
cmp
push
sbb
sbb
lods
aaa
xchg
add
arpl
adc
push
and
add
cmps
dec
mov
dec
push
dec
inc
pop
jle
shl
push
pop
pop
test
test
pop
ins
repz
bswap
ins
xchg
and
inc
sbb
leave
dec
loope
push
dec
inc
dec
inc
inc
xor
cs
in
inc
sub
dec
pop
xlat
push
sbb
pop
or
xor
hlt
jns
mov
call
idiv
aam
push
das
add
sub
jle
bound
enter
cs
pop
pop
repz
xchg
cwde
(bad)
xor
data16
mov
and
pcmpeqb
cmps
nop
xchg
cmps
inc
js
inc
jb
fild
daa
sbb
out
lock
mov
lea
retf
test
cwde
push
mov
cdq
mov
out
imul
shl
mov
dec
xchg
call
clc
add
out
cmp
lea
push
enter
and
and
scas
clc
sbb
pusha
addr16
or
push
xchg
adc
jge
movs
cld
xor
ror
scas
call
cmp
lock
dec
jo
outs
lods
sbb
in
inc
daa
push
popa
jbe
loopne
push
cmps
icebp
cmp
enter
xlat
or
in
inc
jae
inc
mov
sub
outs
sbb
pop
inc
xchg
sub
mov
arpl
out
js
popa
je
add
jo
sub
fcom
out
sahf
push
sbb
pop
icebp
add
push
lds
push
imul
jbe
lock
bound
mov
pop
pslld
add
push
add
rol
cmc
rol
rol
iret
sbb
mov
loopne
mov
inc
dec
aam
ins
aas
loope
push
cmps
xlat
push
xor
push
inc
lahf
dec
loope
movs
xchg
inc
push
in
fsubr
fwait
or
push
push
(bad)
or
and
idiv
sub
cmc
and
dec
in
imul
cli
inc
xchg
(bad)
ja
jle
jae
(bad)
ins
xchg
cmps
pop
adc
inc
sbb
pop
and
xchg
fild
cli
cs
dec
clc
push
dec
dec
push
inc
xor
or
dec
dec
pop
jns
daa
mov
mov
push
xor
dec
xor
pop
in
imul
or
add
ds
push
inc
fiadd
adc
add
imul
mov
stc
cmp
add
push
or
setl
ins
add
push
enter
hlt
fwait
iret
repz
repz
sub
outs
mov
hlt
and
out
jns
xor
clts
push
inc
cs
aas
and
inc
dec
das
imul
cs
xchg
ins
jns
scas
std
push
and
lahf
movs
cli
mov
fld
idiv
clc
cli
repnz
sti
xchg
mov
cld
cwde
cld
pop
outs
push
test
jno
repz
xchg
xchg
ret
das
mov
fild
xor
shl
dec
outs
cmps
lock
push
ss
push
xor
mov
test
js
bound
pop
inc
jbe
push
jo
repnz
rcr
pop
or
std
xor
or
cmp
dec
mov
sub
mov
inc
mov
sub
shl
cmp
xor
aaa
xor
sbb
aaa
sti
das
inc
mov
inc
push
jns
pop
(bad)
xor
nop
data16
xor
sti
inc
movs
sbb
and
and
dec
(bad)
pushf
mov
mov
not
xor
outs
adc
mov
rol
and
add
je
push
jp
ds
imul
daa
pushf
mov
rcl
jns
out
jo
test
fcom
xor
adc
push
dec
mov
sbb
pusha
jo
movs
ds
repz
xor
imul
das
xlat
adc
mov
imul
mov
je
movs
dec
out
jns
leave
add
push
cs
nop
xchg
out
cmp
dec
push
push
hlt
and
mov
mov
fs
outs
fs
or
and
call
adc
retf
jo
movd
cs
in
xchg
dec
(bad)
xchg
pop
inc
jl
xor
mov
xchg
(bad)
or
or
sub
mov
mov
clc
push
fiadd
jmp
pop
or
je
mov
mov
push
lds
xor
push
add
sub
mov
in
test
out
test
ss
inc
inc
inc
outs
mov
push
jo
in
(bad)
fsubr
cmp
pop
popa
ret
fisub
push
mov
xor
cmp
ins
inc
cmp
ds
inc
xchg
daa
add
adc
mov
scas
lods
cwde
and
add
sub
xchg
or
lods
bound
ja
pop
les
add
adc
inc
pop
add
(bad)
and
arpl
femms
adc
push
jns
iret
cmovs
sbb
das
aaa
inc
inc
jne
jns
pop
pop
pop
(bad)
shl
outs
dec
push
sbb
aaa
(bad)
mov
dec
aas
inc
push
xchg
push
xchg
dec
push
push
dec
inc
inc
dec
pop
push
cmps
add
in
dec
dec
dec
push
mov
call
shl
sbb
sbb
mov
stos
lods
arpl
lods
mov
ds
add
jae
sahf
pop
inc
jg
add
dec
and
jns
sbb
imul
push
das
das
adc
jnp
test
jb
jbe
pop
jne
sbb
cli
adc
jge
cmovno
jne
dec
jne
ja
outs
(bad)
out
and
jo
imul
jle
bound
push
inc
pushf
jae
sahf
cli
adc
xchg
jae
cmp
jns
jg
addr16
(bad)
cwde
inc
loop
xor
std
adc
jae
push
movs
clc
sbb
push
sar
jne
inc
and
out
jae
jbe
inc
push
pop
jae
ds
popa
das
jo
or
js
inc
lods
cwde
inc
xor
pop
add
push
call
add
sar
jp
or
pop
ja
jg
outs
and
imul
and
call
call
push
and
adc
add
rcl
push
dec
adc
dec
mov
xor
push
and
push
pop
pop
test
(bad)
cld
fsincos
xor
push
push
pop
clc
and
add
pusha
push
jo
mov
pop
sub
add
sbb
add
add
add
xchg
jnp
test
add
or
mov
enter
retf
jb
pop
mov
adc
push
jo
add
fld
push
mov
les
xor
dec
int
cmovle
sbb
push
(bad)
(bad)
(bad)
call
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
out
dec
dec
pop
imul
pop
pop
pop
pop
(bad)
fild
pusha
popa
bound
gs
imul
clc
ins
outs
outs
jo
or
jbe
js
jp
jl
jle
add
ins
xor
arpl
mov
push
fsub
enter
out
or
dec
pmulhuw
je
pop
inc
inc
popf
js
sbb
mov
pop
jecxz
jb
mov
scas
push
bound
push
call
(bad)
sar
xchg
sbb
(bad)
and
xor
(bad)
mov
and
sbb
inc
sbb
dec
dec
inc
and
test
cld
dec
xor
inc
outs
fimul
adc
dec
inc
ins
or
jae
ins
data16
push
lods
pop
popa
cs
push
and
adc
std
adc
je
sub
and
ret
push
scas
mov
imul
xor
jl
inc
data16
shl
in
je
mov
daa
mov
xchg
outs
je
mov
dec
ins
and
ins
mov
not
sub
aaa
add
mov
push
cmp
les
add
pop
outs
call
or
movs
jne
and
dec
pop
or
je
sbb
jp
push
clc
sbb
loope
push
and
push
add
mov
into
push
or
and
push
ds
jo
(bad)
imul
add
int3
push
nop
and
mov
dec
fcom
sub
mov
dec
sub
arpl
cmp
dec
loopne
push
arpl
add
fsubr
mov
add
push
sbb
fadd
imul
es
es
or
add
jo
pop
sbb
push
ret
ins
popa
pop
xor
add
mul
push
push
mov
sbb
cmps
cmp
sbb
xor
shl
sub
xor
pop
add
add
cmps
sub
outs
outs
ss
je
xor
jo
cli
jbe
add
inc
and
mov
xchg
push
mov
sbb
das
mov
and
js
sbb
mov
mov
xlat
outs
push
fs
xchg
imul
cmp
jecxz
bound
cmp
cmp
in
jmp
imul
(bad)
ficom
cmps
pop
or
in
inc
jno
sbb
leave
nop
sub
mov
jbe
fbstp
cmp
xor
in
xor
dec
pusha
or
and
and
dec
lea
inc
in
push
dec
jne
jae
xor
jo
xor
mov
test
mov
imul
inc
sub
pop
dec
jmp
outs
pop
cmp
out
(bad)
into
xor
ja
ds
(bad)
pop
fcomp
inc
and
dec
cmp
stc
mov
mov
push
inc
dec
fbld
dec
fcom
sub
add
add
add
inc
loopne
inc
inc
dec
add
outs
cdq
lea
push
sbb
push
ror
leave
inc
jb
add
inc
mov
sub
cmp
add
sbb
xchg
shl
push
mov
mov
daa
aaa
cmp
icebp
movs
jbe
dec
imul
shl
or
inc
int3
sub
movs
daa
daa
pop
pop
retf
jo
sub
sub
pusha
jge
ss
mov
mov
daa
test
or
pusha
ror
jns
div
push
inc
jbe
dec
aaa
push
jns
lods
sbb
and
sbb
sub
inc
add
(bad)
push
mov
and
push
and
pop
es
dec
fs
dec
lahf
xor
das
xchg
pop
pop
pop
push
imul
aas
cmp
ins
call
push
push
add
ja
or
or
std
and
push
push
push
push
dec
jmp
push
jne
repnz
mov
or
cmp
pop
scas
dec
jge
cmp
add
jg
sub
fs
sub
retf
fild
outs
nop
shl
inc
in
mov
in
xor
sub
outs
bound
jns
pusha
push
or
pop
das
je
scas
(bad)
idiv
daa
xchg
mov
mov
mov
cmp
fisubr
cmp
cmp
push
das
push
sub
out
sub
es
addr16
jle
xlat
jl
pop
sub
sub
clts
mov
aaa
out
out
sahf
add
sbb
aaa
pop
pop
mov
stos
push
sbb
sbb
push
jb
mov
or
jo
ss
sahf
sbb
test
sbb
loop
movs
pop
cmps
mov
jo
sub
cmp
daa
mov
cmp
repz
push
inc
cmp
mov
cmp
sbb
sbb
xor
xor
mov
lock
push
in
call
jnp
xor
in
fadd
aam
fbld
shr
push
pop
cli
mov
pop
mov
int3
aaa
iret
mul
jns
imul
je
cmp
mov
les
sar
mov
test
mov
pushf
cwde
xchg
nop
mov
jae
repz
dec
cmp
imul
sub
addr16
push
test
cmp
xrelease
add
iret
repz
fdiv
movs
xchg
repz
repz
pop
dec
xor
mov
pop
push
cwde
ins
push
loope
iret
repz
fdiv
xchg
add
push
jb
sub
dec
add
sbb
jb
add
pop
add
mov
ret
add
xchg
test
mov
sub
add
fcom
and
add
ja
push
mov
mov
imul
mov
mov
pop
rol
inc
pop
inc
out
and
(bad)
(bad)
jg
scas
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
(bad)
(bad)
(bad)
(bad)
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
pop
sub
clc
clc
stc
cli
sti
cld
mov
xor
add
inc
test
or
and
push
or
add
mov
push
je
imul
xchg
sti
shl
add
inc
mov
into
mov
jo
jo
pop
lea
dec
mov
into
push
bound
xchg
push
push
jae
jle
out
andps
push
dec
inc
dec
(bad)
retf
aaa
repnz
dec
inc
add
inc
dec
outs
xor
push
push
and
out
adc
dec
add
jmp
das
and
rcl
mov
and
fld
sbb
mov
sbb
pop
in
dec
rol
add
shr
jg
fisttp
dec
cmp
mov
push
inc
rcl
enter
cmps
push
add
and
mov
mov
ds
aas
jmp
daa
popa
push
or
scas
int
ds
loop
shr
jmp
pop
cmps
jmp
pop
scas
or
ins
sbb
adc
mov
adc
or
add
or
mov
or
pop
cmps
jg
fistp
pop
test
mov
imul
movs
xchg
or
push
lahf
mov
mul
mov
cwde
pop
les
ss
dec
enter
pop
cs
or
inc
arpl
mov
jns
in
cs
adc
in
adc
pop
push
mov
in
mov
inc
xchg
xchg
in
cs
push
imul
cmc
jl
dec
cmp
rcr
inc
cs
mov
in
cs
cmps
test
stos
addr16
cs
je
in
cs
pop
pusha
cs
mov
in
movs
mov
stos
mov
cs
cs
scas
mov
cs
mov
(bad)
mov
mov
or
nop
mov
cld
mov
(bad)
(bad)
iret
adc
mov
xor
adc
aas
dec
(bad)
fadd
int3
push
and
pop
sbb
mov
cld
imul
add
idiv
xor
add
(bad)
test
dec
pop
scas
sub
(bad)
adc
in
mov
mov
(bad)
mov
shr
mov
xor
mov
push
mov
mov
repz
cmp
popf
jecxz
mov
pop
sbb
test
pop
inc
sub
xchg
mov
mov
push
shl
(bad)
jmp
push
cmc
add
adc
add
and
sbb
mov
out
and
sti
xlat
test
mov
mov
fwait
jg
adc
fdivr
(bad)
pop
pop
jae
sbb
test
pop
fwait
mov
repz
addr16
jg
pop
das
mov
gs
clc
push
or
cmp
rcl
cmp
jp
aaa
dec
dec
inc
inc
inc
inc
cmps
mov
lahf
das
inc
bound
mov
int3
inc
or
and
pop
jg
add
cmp
sbb
sahf
xor
xor
xor
inc
mov
push
outs
mov
outs
pop
and
inc
jne
inc
outs
add
bound
dec
sub
sub
jae
xor
ja
xor
pop
fbstp
ins
or
jb
and
or
xor
xor
and
ins
sub
shr
mov
arpl
in
stos
adc
add
pop
mov
xor
sti
jo
outs
add
sbb
aam
or
dec
pusha
inc
les
sbb
fs
xor
or
xchg
daa
push
xor
and
jg
dec
inc
outs
repz
mov
clc
add
cs
out
push
popa
and
cwde
leave
es
mov
xor
jbe
test
pop
mov
and
or
xor
cwde
add
(bad)
pusha
aaa
lock
repz
dec
pop
jb
aas
cmp
push
bound
fstp
jo
sahf
sahf
mov
jae
pop
imul
sub
loopne
sbb
push
je
cmp
das
add
add
jmp
sub
cmp
addr16
movs
cs
arpl
nop
adc
mov
scas
cmp
and
xchg
inc
daa
adc
leave
inc
or
jns
dec
inc
dec
push
dec
hlt
xchg
cmps
imul
dec
add
push
cwde
push
out
push
enter
aaa
inc
pusha
mov
mov
mov
adc
les
pop
loop
add
inc
pop
imul
movs
scas
imul
lds
and
jo
repnz
and
in
xchg
shl
iret
adc
imul
addr16
lock
sbb
inc
or
test
xchg
cs
pop
lahf
pop
ror
scas
cs
and
cmp
repz
int3
dec
les
push
inc
cdq
popf
cmp
push
cs
jnp
mov
data16
shr
fisubr
outs
sub
inc
outs
neg
test
lods
das
arpl
aaa
jb
push
sbb
out
pop
ins
cmp
rol
aam
cli
cmps
jne
add
outs
sub
inc
dec
mov
inc
js
push
fild
aaa
inc
pop
jae
cmp
fs
ins
ss
sub
pop
daa
movs
or
inc
popa
push
aaa
xor
(bad)
jo
frstor
popa
test
js
push
push
jns
sbb
dec
xor
scas
cmp
bound
dec
or
dec
cmovg
rcr
clc
push
and
fwait
xchg
call
inc
gs
xor
aaa
push
push
inc
dec
inc
push
push
sbb
jns
push
jae
sbb
arpl
push
add
cmp
inc
xchg
inc
jno
fs
ins
jae
push
test
mov
fdiv
(bad)
fld
ret
adc
sbb
mov
loope
add
popf
push
adc
push
inc
fidivr
jne
mov
ins
add
scas
adc
loop
push
jmp
cmp
ficom
(bad)
pop
adc
cmp
in
or
outs
jb
push
push
push
sub
data16
inc
in
je
pop
stc
ret
sub
int3
push
out
stos
and
push
test
pop
jmp
(bad)
jb
sbb
dec
cmp
or
push
cmp
popf
sub
dec
loope
push
lods
retf
cmps
dec
ret
push
mov
mov
imul
aam
mov
das
cmps
jg
je
pop
sti
pop
mov
inc
mov
dec
pop
aaa
fcom
mov
in
lods
cmp
sub
data16
pop
imul
pop
cmp
push
dec
pop
sub
pushf
pop
cs
nop
stos
jo
cs
push
cmps
(bad)
cs
xor
imul
inc
dec
push
cmp
shl
outs
push
xor
loop
sbb
jo
jbe
cmp
aas
mov
jb
adc
aam
inc
jle
loopne
jmp
inc
ss
(bad)
and
popf
push
cwde
push
cmp
push
push
and
shr
sub
inc
xor
cmp
inc
scas
jbe
int
shl
sbb
jp
dec
mov
xchg
or
jmp
sti
outs
xor
xor
sbb
inc
jo
xchg
(bad)
test
fwait
in
adc
int
rol
aad
add
dec
fs
inc
das
dec
repnz
sub
sub
scas
jo
outs
mov
add
push
push
(bad)
jle
pop
loope
or
xor
push
and
ret
push
push
adc
adc
inc
xor
ss
mov
inc
mov
xor
je
inc
scas
push
add
mov
inc
retf
sbb
push
out
add
or
add
jmp
xchg
fidiv
push
das
adc
mov
scas
xchg
xchg
adc
enter
dec
inc
push
xchg
daa
sbb
dec
or
cmp
clc
dec
dec
and
add
pop
pop
leave
push
mov
fnsave
jg
pop
xor
and
xor
adc
popa
fdivr
xchg
push
dec
push
and
push
mov
std
test
xor
imul
sub
inc
jne
lea
sub
pop
inc
test
push
jmp
sub
add
shl
push
pop
(bad)
gs
jae
in
jne
(bad)
jo
adc
in
arpl
mov
xor
add
and
out
cdq
movs
(bad)
xor
data16
and
jo
pop
xor
push
xchg
outs
jmp
inc
cmp
out
mov
pop
dec
sub
push
push
clc
jg
mov
jbe
imul
pop
push
jae
and
xor
jno
pop
je
pop
fsubr
aam
ins
aas
jne
pop
scas
or
je
addr16
out
pop
and
ins
pop
outs
(bad)
imul
test
mov
jae
and
dec
lahf
or
dec
ror
push
cmp
daa
out
es
loop
lods
bound
(bad)
cmp
or
pop
inc
sbb
daa
cmps
add
dec
mov
mov
mov
and
inc
sbb
jae
mov
(bad)
dec
dec
inc
pop
push
push
dec
cmp
jae
and
xchg
pop
xchg
ficomp
popf
and
adc
fimul
cmp
cld
(bad)
arpl
mov
ja
pop
adc
or
pop
repnz
push
pop
push
xor
jle
lods
xchg
int
jae
mov
push
cwde
cmp
sub
stos
sub
adc
jns
cmp
mov
outs
inc
xor
dec
std
out
adc
lahf
and
mov
imul
jo
ret
inc
outs
and
xor
jbe
into
sub
dec
or
outs
jmp
sbb
fstp
inc
outs
scas
out
or
dec
data16
jne
inc
hlt
jae
pop
inc
mov
mov
data16
push
sbb
rcr
mov
jne
xor
dec
iret
out
dec
imul
push
mov
in
nop
push
sbb
push
mov
add
popa
inc
push
push
int3
xor
push
jo
mov
push
inc
xlat
popf
pop
jnp
sbb
or
mov
xor
mov
push
jnp
pop
sub
jae
inc
mov
outs
mov
fist
sub
jns
pop
fucomip
cmp
pop
clc
inc
cmp
push
dec
push
inc
ins
je
fnstsw
xchg
pop
shr
in
paddsw
out
sub
ja
mov
jmp
jecxz
fst
inc
dec
add
xor
mov
mov
dec
and
je
xchg
pop
jmp
out
cmp
leave
int
outs
jae
cmc
or
sbb
imul
xchg
xor
inc
push
aaa
inc
or
les
push
and
jb
movs
cmp
or
and
outs
dec
cmp
and
lods
or
xchg
call
pop
push
push
gs
daa
add
mov
and
pop
das
daa
cmp
xchg
mov
dec
inc
movs
add
mov
es
int3
outs
jecxz
cmp
xchg
sbb
xlat
mov
fbld
scas
arpl
(bad)
loopne
pop
xor
aas
xchg
add
cmp
loope
inc
jmp
mov
push
outs
inc
push
aas
pop
jb
test
imul
outs
add
dec
push
out
aas
push
shl
mov
outs
add
push
or
add
in
mov
sub
dec
inc
jge
push
mov
scas
cmps
add
xchg
(bad)
pusha
adc
pop
cmps
push
and
test
lahf
add
popf
je
ret
js
movs
ret
rol
sti
mov
sub
push
sub
jle
sbb
pop
jg
and
jmp
cmp
dec
fwait
cdq
push
rcr
xor
mov
xor
push
ins
aaa
push
xchg
fidivr
mov
imul
cmp
ds
pop
add
pop
pushf
jbe
enter
xor
dec
jbe
test
popf
cmc
add
xor
sbb
movs
inc
pop
push
adc
test
popa
fisttp
js
mov
ins
test
mov
pop
stos
hlt
pusha
push
xchg
add
inc
push
mov
xor
mov
push
pop
arpl
add
stos
outs
dec
cmp
ins
nop
out
add
and
or
mov
daa
iret
mov
and
xchg
sbb
jae
jecxz
pop
adc
add
pushf
cmp
dec
cmp
dec
xor
mov
stc
ret
loop
mov
stos
jecxz
test
cmp
sub
and
jg
scas
(bad)
add
loopne
adc
or
push
push
retf
xchg
out
nop
add
out
cs
adc
(bad)
push
pop
sub
jnp
lock
in
sub
cmps
adc
push
inc
cmp
add
jnp
fild
sbb
jle
loopne
in
add
add
(bad)
rcr
(bad)
or
adc
movs
or
and
nop
fwait
nop
test
outs
stos
loopne
push
ss
scas
bnd
or
dec
enter
pop
mov
hlt
in
out
sub
or
imul
pop
scas
movs
jns
pop
push
xchg
retf
xor
mov
push
sar
and
cwde
adc
add
mov
dec
call
das
dec
jae
dec
je
inc
sub
pop
jnp
imul
lds
sub
movs
cs
ins
test
sub
mov
dec
fadd
pop
dec
repz
mov
mov
fnstsw
jg
add
scas
pop
loope
das
dec
repz
jecxz
cmp
dec
shl
shl
mov
and
mov
jmp
jns
or
pop
in
ret
out
add
(bad)
hlt
fwait
push
sti
pop
cli
or
das
adc
movs
cmp
xchg
or
nop
inc
mov
inc
cmps
mov
jo
xchg
xor
push
ins
or
adc
mov
outs
push
dec
bound
arpl
popa
add
dec
je
jb
push
push
(bad)
mov
aas
push
aaa
jle
add
inc
jns
and
pop
cmps
mov
mov
inc
and
and
cmp
sbb
int3
dec
ds
pop
in
adc
push
addr16
mov
into
test
adc
ja
ja
sbb
data16
pop
jmp
mov
sbb
inc
pop
arpl
adc
adc
xor
mov
inc
or
add
repz
mov
add
shl
inc
sti
xchg
and
or
and
jae
add
xor
sub
sbb
sbb
popf
cs
out
lds
pop
popa
repz
(bad)
imul
add
inc
fmul
scas
sbb
mov
sub
movs
in
in
dec
add
dec
addr16
and
and
fs
rol
inc
xchg
cmp
sub
jnp
lods
in
js
pop
inc
dec
dec
dec
push
and
pop
push
inc
push
push
inc
dec
dec
inc
dec
push
dec
and
mov
ins
stos
ss
inc
pop
mov
sti
aaa
and
and
xchg
adc
dec
inc
jno
cmp
sbb
push
in
push
xchg
dec
push
push
inc
dec
inc
push
or
out
in
inc
push
inc
mov
(bad)
(bad)
mov
add
int
test
ins
mov
xor
lea
popa
xchg
mov
addr16
shr
arpl
pop
jo
cs
pop
xor
stc
add
mov
ja
inc
cli
or
inc
repnz
pop
retf
int
inc
fld
repz
add
inc
push
pop
mov
iret
sub
adc
mov
mov
dec
inc
retf
xor
pop
in
shl
jmp
dec
mov
aas
and
and
sub
xor
and
(bad)
xor
sub
push
pop
xchg
push
xchg
mov
push
push
push
and
aaa
not
pop
inc
cmp
rcl
daa
nop
add
push
ret
(bad)
lock
and
inc
mov
dec
jo
idiv
mov
jae
arpl
ins
in
movs
adc
aaa
repnz
add
sub
fcmovnb
fadd
add
pop
jecxz
sar
ds
cwde
sbb
popa
imul
stos
mov
fisub
add
ret
pop
icebp
pop
lods
push
fist
pop
dec
mov
jecxz
and
mov
pop
pop
mov
jmp
(bad)
adc
outs
daa
int
dec
outs
dec
scas
push
xchg
mov
lahf
pop
mov
sbb
push
neg
dec
fisub
jecxz
add
aaa
cs
pop
inc
pop
out
adc
pop
mulps
push
jo
or
add
dec
gs
jne
test
fld
ret
and
pusha
mov
xchg
add
jp
test
popa
xor
pop
mov
xchg
inc
in
add
add
or
dec
sub
loope
ror
cdq
and
adc
and
or
dec
push
ficomp
mov
mov
dec
inc
push
xchg
out
aam
push
and
pop
inc
bound
or
xchg
out
sbb
cmp
aas
cmp
or
adc
outs
dec
jg
fadd
shld
movs
fs
cdq
aaa
sbb
iret
sub
out
mov
test
dec
sti
and
jle
in
test
(bad)
push
cmp
ins
dec
dec
adc
pop
or
inc
add
data16
sbb
and
and
cmp
stos
lds
inc
fwait
sets
imul
push
adc
jge
arpl
dec
ret
mov
loopne
add
push
jmp
pop
outs
hlt
pop
inc
adc
pop
dec
inc
inc
dec
dec
dec
fisub
mov
mov
pop
jno
adc
dec
inc
push
sbb
lock
push
cmp
or
das
add
inc
inc
cmp
paddb
dec
jbe
fsubr
rol
jge
sub
inc
inc
sub
push
push
or
sbb
and
popf
adc
mov
js
es
aas
cmp
inc
push
pop
rcl
xchg
frstor
pop
out
mov
mov
mov
dec
std
inc
pushf
loope
popa
cmps
bound
dec
sbb
mov
push
or
mov
xlat
fsub
jmp
and
xor
inc
ret
cs
ret
mov
push
inc
jo
cmp
sbb
add
pop
outs
lahf
push
js
dec
inc
fsub
xor
mov
push
add
xor
jmp
in
add
push
sub
xchg
addr16
jo
lods
fstp
pop
mov
xor
ss
push
inc
pop
das
xor
pop
xlat
dec
pusha
add
fcomp
pusha
jnp
adc
or
rol
push
mov
icebp
push
pop
or
(bad)
cmp
mov
popa
repnz
test
jno
mov
ret
aad
clc
jo
aas
mov
jne
or
pop
xor
pop
adc
jp
iret
and
cmp
pop
xchg
xor
xor
push
cld
inc
add
outs
das
scas
or
ret
inc
stc
rcr
add
clc
popa
push
test
(bad)
mov
jns
rol
outs
sub
shl
fs
push
add
rcl
cmp
cwde
cmp
jg
fsub
sbb
and
jno
sub
fsubr
outs
push
iret
add
lock
arpl
push
inc
into
push
inc
gs
mov
sbb
or
int
sub
jae
fsub
add
mov
cmp
sbb
hlt
cli
mov
out
inc
inc
inc
push
ins
retf
mov
push
pop
xor
cdq
mov
or
push
inc
jl
rcl
add
popa
jbe
lahf
data16
push
xchg
cmovs
lods
sub
test
jmp
push
and
cmp
addr16
adc
xchg
pop
push
push
jo
push
sub
and
mov
adc
pop
push
mov
add
(bad)
pop
and
test
mov
xchg
movs
add
mov
das
fcomp
cmp
int3
fist
or
cmp
or
(bad)
data16
ror
push
xchg
mov
lods
cmp
adc
and
push
inc
pop
aas
cwde
rcl
cmp
jp
inc
test
and
shl
inc
stc
mov
xor
imul
and
and
ins
ds
je
push
ret
fs
cmps
cmps
jns
leave
sar
cs
mov
and
xchg
loopne
outs
push
sub
js
enter
or
inc
enter
ja
jb
inc
and
jnp
inc
xor
inc
in
mov
cmp
or
xor
inc
adc
sub
cmp
cmp
push
inc
push
jecxz
xor
inc
out
call
gs
test
aam
loope
stos
mov
sub
pop
dec
pop
pop
or
test
add
(bad)
movs
sbb
cmc
inc
dec
push
cmps
mov
outs
push
sbb
push
inc
inc
add
add
ja
inc
out
add
add
mov
pop
or
or
cmp
repnz
jl
inc
add
push
mov
or
xchg
jbe
in
(bad)
adc
add
pop
lods
jns
sbb
out
sbb
sbb
dec
sahf
sub
mov
imul
sbb
and
dec
xchg
add
das
and
sub
jae
iret
es
leave
pop
jmp
ins
adc
adc
jg
jns
jbe
mov
in
int
jns
(bad)
jmp
and
or
xor
mov
push
dec
add
sub
dec
or
dec
jne
adc
aas
add
mov
cmp
add
sub
dec
push
jl
adc
adc
and
movs
jp
add
out
adc
popa
aas
inc
imul
add
nop
mov
jle
and
xchg
rcl
retf
ret
mov
or
sbb
nop
mov
push
add
xchg
rcr
es
pop
inc
lods
loope
je
popa
data16
or
fldenv
adc
outs
icebp
push
inc
dec
inc
add
inc
mov
inc
jne
bound
ds
pop
add
outs
push
mov
pop
bound
fcmovnb
div
add
ror
test
xchg
sub
jo
inc
sbb
das
pop
xor
xor
test
fwait
(bad)
and
js
bound
xchg
outs
rcr
cs
inc
inc
pop
sub
and
jmp
addr16
jno
popa
jno
xor
xor
jge
add
push
inc
add
mov
pop
loop
push
inc
push
pop
and
adc
push
stos
das
sbb
lea
shl
iret
push
inc
retf
and
push
add
push
outs
mov
inc
cmp
loopne
ud0
mov
and
push
dec
push
and
sbb
push
push
dec
push
lock
sub
lds
or
or
neg
mov
pop
xlat
clc
das
push
inc
push
push
inc
push
inc
add
pop
pop
mov
not
xor
rol
dec
inc
out
cmp
lods
or
and
inc
dec
pop
and
in
jle
idiv
inc
and
cmp
add
lock
(bad)
test
les
push
aas
sub
test
out
popf
aam
pop
inc
push
push
dec
mov
rcr
out
pop
push
dec
push
xchg
push
aas
and
add
cmps
loopne
test
cmp
sbb
adc
pop
ins
scas
add
pop
sbb
and
out
push
and
call
add
push
inc
scas
xchg
ss
scas
bound
xchg
or
xor
jb
movs
push
call
add
daa
and
in
dec
les
push
dec
add
in
or
xor
jge
jb
cmp
sahf
push
dec
fsub
jno
nop
dec
lock
adc
fprem1
inc
push
jl
push
imul
fdivr
xlat
shl
pop
xor
sub
jae
(bad)
shl
pop
das
push
push
bound
and
nop
and
mov
sbb
dec
daa
fst
mov
xchg
aaa
pop
aaa
mov
in
(bad)
sahf
add
pop
inc
imul
lea
add
pop
xchg
imul
cs
out
daa
pop
push
sbb
pop
mov
cdq
es
mov
pop
jbe
jmp
aam
inc
nop
cmovs
pusha
icebp
and
pushf
sbb
jbe
pop
aam
push
mov
add
and
xchg
fs
cmc
xlat
or
sub
add
or
xchg
mov
xor
add
inc
ins
adc
sub
add
dec
aas
fld
lods
ja
inc
xchg
mov
movs
aad
xchg
mov
dec
js
and
and
cmp
inc
fmul
dec
dec
inc
add
and
movq
shl
xor
pushf
jae
arpl
aaa
(bad)
fstp
es
aaa
das
bound
loopne
xor
mov
fiadd
xchg
mov
mov
js
xor
ds
test
add
test
ficomp
xchg
mov
sub
imul
mov
xchg
ds
pusha
fist
or
or
fistp
and
loope
and
xor
shl
cmp
mov
in
arpl
hlt
push
test
jae
movs
ins
xor
retf
push
and
or
jae
jae
and
mov
push
sub
cs
ja
ins
adc
xor
and
clc
loopne
icebp
es
bound
sub
push
or
sbb
sub
mov
pop
pusha
lock
daa
(bad)
scas
mov
mov
push
push
inc
and
pop
imul
imul
sbb
pop
mov
push
loope
dec
push
sbb
pop
and
mov
inc
push
push
and
pop
inc
cmps
jo
popa
shufps
pop
inc
jecxz
repnz
stc
outs
mov
pop
xor
and
imul
fsub
add
cmp
ins
out
rcl
or
add
rol
je
jne
sbb
xchg
lahf
out
and
and
xchg
sbb
xchg
mov
pushf
das
out
jnp
(bad)
imul
dec
arpl
icebp
push
or
ins
outs
imul
push
mov
addr16
pop
out
push
jno
loope
mov
mov
push
dec
pop
js
jl
pop
push
dec
xchg
xor
das
or
jle
pop
cli
or
adc
fs
sar
cdq
dec
sub
and
ja
push
jo
adc
push
mov
push
dec
xchg
pop
and
mov
add
cmp
ds
xor
push
test
xor
xor
(bad)
rol
loopne
stos
rcl
xor
pop
lods
xor
and
dec
push
mov
cmp
retf
push
pop
test
and
jbe
dec
aaa
xchg
popa
popa
mov
cmp
stos
and
adc
enter
or
mov
outs
xor
cs
xchg
push
test
sahf
sbb
rcr
pop
or
cmc
pop
jo
mov
scas
mov
sbb
outs
xor
pushf
pop
inc
mov
ins
popa
icebp
int
sub
daa
mov
inc
pusha
push
sub
sbb
adc
adc
pop
addr16
push
cs
add
ins
cmp
ins
in
adc
xor
cmp
(bad)
xchg
daa
ror
inc
scas
cli
inc
dec
inc
and
xor
ins
and
lahf
adc
bound
ins
dec
sar
sub
out
adc
xlat
outs
cmps
enter
mov
shr
and
aam
jb
sub
into
rol
xchg
clc
mov
sbb
fld
jo
pusha
or
xchg
pop
mov
aas
ins
call
sub
push
add
jae
push
cmp
or
sbb
aas
out
jb
pop
xor
sub
sahf
ror
call
mov
inc
or
push
sub
mov
add
cmps
rcr
int3
dec
push
outs
test
jp
bound
cmp
(bad)
mov
lea
comiss
das
sub
cmc
(bad)
iret
rcl
dec
ja
add
jns
js
mov
mov
cmp
dec
dec
daa
inc
or
cmp
ret
adc
aas
jp
mov
data16
add
aad
fsubp
sbb
aaa
xor
jnp
cmp
inc
imul
dec
jmp
inc
inc
pusha
popa
jne
push
lock
fisttp
pop
sbb
lea
adc
cmp
std
enter
jge
push
pop
addr16
sbb
cs
dec
cmp
and
ja
sbb
dec
loopne
inc
dec
inc
add
mov
inc
xchg
rcr
inc
das
push
inc
in
add
add
xchg
push
pop
pusha
addr16
dec
(bad)
leave
fidiv
jns
sub
dec
pushf
sub
out
inc
mov
jg
jb
mov
mov
loopne
test
out
sbb
outs
lock
in
pusha
sub
sub
sbb
fs
outs
scas
in
push
push
inc
pop
mov
cmp
loopne
xchg
add
ss
pushfw
(bad)
lock
push
inc
das
stos
idiv
retf
mov
pop
ss
mov
aaa
es
sti
mov
cmp
daa
push
cmp
ror
xchg
test
outs
cmp
popa
adc
pop
dec
outs
mov
and
mul
sbb
and
xchg
push
add
sahf
and
aas
jne
sbb
jl
or
in
jmp
cs
(bad)
sub
aaa
jne
xchg
ror
xchg
imul
xor
and
or
mov
fwait
or
or
inc
cmp
test
mov
mov
cdq
leave
adc
(bad)
adc
jbe
or
cmps
mov
cmp
xor
mov
inc
pop
rcr
add
pop
and
jns
mov
push
mov
lahf
cmp
mov
jmp
sub
adc
fwait
mov
dec
fistp
jmp
dec
ret
rcr
sub
adc
push
sub
sub
adc
cdq
push
dec
dec
dec
inc
pop
or
ror
pop
inc
inc
mov
cdq
add
mov
push
or
sub
bound
dec
cmp
mov
fwait
or
dec
dec
popa
arpl
mov
dec
and
adc
dec
ins
mov
mov
je
aaa
mov
xchg
leave
rol
daa
cdq
jge
enter
ucomiss
ja
inc
push
aas
xchg
fsub
mov
push
outs
outs
sub
jo
add
sub
ja
add
adc
sub
and
cwde
sub
cmp
xor
pop
scas
mov
sub
add
(bad)
push
jmp
out
fistp
push
jno
adc
addr16
hlt
push
les
xlat
aam
test
mov
xor
dec
xchg
stos
loope
add
xchg
pop
nop
pusha
mov
imul
push
sbb
loop
pop
dec
or
and
lock
add
push
inc
add
push
hlt
adc
xchg
fcomp
adc
imul
push
and
cdq
jno
push
aaa
leave
or
and
and
sbb
push
cmp
mov
mov
mov
sbb
add
dec
jo
int
mov
shl
enter
push
dec
cmp
les
lahf
adc
sub
test
cmp
push
xchg
sub
or
push
jmp
push
add
and
mov
loop
xor
xchg
scas
popa
push
(bad)
out
mov
popa
jnp
gs
mov
fadd
push
aaa
test
fdiv
outs
mov
mov
xor
push
mov
xchg
inc
mov
jo
or
jae
xor
push
pop
xchg
out
cli
dec
jmp
pop
lahf
mov
push
cmp
lea
and
mov
cli
xlat
pop
dec
ins
and
bound
jmp
adc
daa
pushf
loopne
inc
ret
jnp
aas
aas
loopne
popa
mov
dec
push
pushf
stc
fstp
pop
das
and
and
sub
pushf
and
xchg
xchg
add
shl
cmp
test
test
test
sub
test
enter
mov
pop
mov
mov
or
and
jmp
loope
sbb
cwde
and
mov
scas
dec
push
cmp
add
inc
add
xlat
dec
arpl
icebp
mov
push
scas
pop
repz
lock
ror
inc
push
mov
vunpcklps
rcr
lock
cmps
and
aam
ins
dec
test
dec
jmp
ret
popa
cmp
nop
pusha
mov
mov
mov
pop
pushf
sub
cmc
neg
sub
movs
loope
fcom
pop
push
push
dec
outs
mov
imul
aaa
cmp
mov
test
sahf
and
add
inc
shl
pop
jp
add
xchg
xor
out
aaa
cmp
rol
and
cs
cmp
push
xor
mov
movs
addr16
jbe
dec
gs
xor
imul
add
pop
adc
out
aas
ficomp
inc
dec
dec
jae
daa
adc
xchg
xor
lea
xor
fwait
pop
pop
shr
mov
aas
(bad)
push
movs
mov
ins
xor
pop
inc
push
outs
das
mov
and
sbb
sahf
fs
inc
adc
push
jno
jle
xor
sub
push
(bad)
aaa
inc
(bad)
xor
mov
inc
pop
leave
sbb
mov
sbb
ret
mov
sar
fs
stc
push
mov
xor
adc
lock
jmp
cld
push
or
dec
push
dec
(bad)
aas
outs
xor
inc
adc
jns
mov
and
fsub
aas
pop
cmps
imul
cmp
mov
mov
mov
dec
das
das
cmp
imul
adc
loope
daa
popa
addr16
xor
int3
inc
sub
in
cmp
jmp
push
lea
push
fmul
mov
mov
xchg
sbb
fsubr
jae
adc
and
adc
add
inc
lods
inc
add
xor
popf
sbb
int
jne
bound
xor
test
inc
jle
push
pop
and
out
dec
mov
xor
lods
dec
ds
pop
and
and
cmp
fadd
pop
jno
xor
mov
aam
xchg
push
mov
gs
mov
popa
popf
movs
idiv
sub
sub
xor
add
dec
mov
xchg
fdiv
push
paddb
and
sbb
ret
test
ret
clc
jmp
pop
sub
push
ror
lds
cmp
lahf
popf
test
adc
add
and
rcl
pop
(bad)
enter
sub
add
dec
pop
sub
dec
or
ins
nop
scas
es
test
push
jno
das
inc
jg
loop
out
dec
inc
sub
stc
mov
and
push
icebp
test
mov
and
inc
push
push
and
test
shl
pushfw
lods
push
clc
jnp
int3
or
out
sti
stos
fsub
emms
popa
outs
(bad)
fist
jmp
xchg
faddp
jb
xchg
aaa
or
je
movlps
sub
add
imul
and
xor
pop
(bad)
pop
mov
sub
add
xor
fcmovne
push
cmp
pushf
sbb
adc
out
jns
repz
push
and
push
sbb
iret
repz
adc
or
out
test
add
sahf
out
sahf
pop
in
fmul
shr
jns
call
add
inc
dec
pop
lahf
out
adc
popa
xchg
dec
lods
cs
stos
mov
das
js
dec
out
das
popa
xchg
outs
or
(bad)
fucomip
cs
add
and
ss
jle
dec
jle
jg
mov
inc
xor
or
mov
push
and
cmps
sbb
lahf
mov
adc
paddusw
or
dec
mov
sbb
aas
and
push
xor
cwde
lahf
das
call
inc
ret
cdq
pop
add
inc
jno
inc
xor
cs
dec
xchg
xchg
jne
aas
cs
jns
mov
ds
sbb
mov
out
pop
test
or
data16
das
repnz
dec
dec
push
das
inc
dec
dec
pop
dec
arpl
push
jp
ror
pop
sbb
xchg
push
or
imul
arpl
push
push
pusha
inc
add
rcl
xor
add
push
ss
fscale
enter
es
cmp
test
inc
fadd
stos
pop
cli
mov
pop
and
adc
add
inc
add
test
pop
dec
xchg
je
cmp
movs
(bad)
mov
dec
loopne
in
(bad)
and
mul
inc
and
aas
js
mov
push
loop
jg
adc
scas
sbb
cmp
in
and
sub
xlat
mov
clc
push
stc
pop
mov
xor
xor
dec
outs
pop
push
inc
push
inc
push
dec
xor
sub
ins
das
pop
adc
push
adc
imul
gs
daa
push
cs
mov
inc
mov
sub
out
cmps
stos
addr16
jo
pop
push
dec
add
in
mov
inc
ins
sbb
int3
dec
xchg
retf
adc
and
mov
adc
inc
pop
imul
push
jmp
cmps
movd
inc
dec
js
inc
and
mov
pop
inc
aaa
scas
cmp
fadd
(bad)
inc
inc
repnz
inc
iret
push
inc
retf
adc
cmovne
pop
pop
mov
(bad)
cmp
rol
inc
fisttp
sahf
icebp
icebp
sbb
mov
pusha
(bad)
jo
rol
pop
aas
or
add
test
inc
js
add
push
jbe
dec
mov
push
sub
adc
adc
adc
push
and
add
inc
das
dec
jo
call
dec
jo
inc
push
jecxz
rcr
and
pop
int
or
and
sub
sbb
pop
and
mov
pop
ja
in
and
and
lds
test
les
dec
fld
outs
xchg
in
mov
pop
jg
or
(bad)
push
and
xor
loop
inc
fidivr
dec
(bad)
pop
das
and
mov
mov
es
out
mov
das
das
aas
mov
or
push
lds
mov
add
out
popa
test
outs
push
xchg
inc
inc
dec
dec
sub
dec
cmp
sub
jnp
xor
xor
xor
and
inc
retf
cmp
(bad)
push
push
sbb
sbb
sub
push
repz
cmps
(bad)
push
jmp
push
dec
and
pushf
test
test
data16
add
(bad)
loop
inc
js
mov
pusha
aam
bound
outs
mov
push
jle
adc
cmps
xchg
sub
ret
push
push
adc
cmps
xchg
dec
popa
jae
and
adc
lods
daa
es
xchg
mov
test
test
loopne
push
(bad)
sbb
fnstenv
fst
rcr
and
and
sub
mov
jmp
jo
push
(bad)
jnp
ja
aaa
add
std
or
out
inc
loopne
xor
and
add
xchg
test
and
inc
xchg
cmovo
push
scas
push
inc
push
out
xchg
or
add
mov
cs
das
push
(bad)
pop
movs
mov
pop
push
pop
pop
or
mov
mov
dec
mov
ss
sub
sahf
mov
xchg
test
mov
leave
xchg
add
and
xor
mov
pop
dec
push
inc
sbb
pop
inc
fidiv
js
mov
push
js
popa
mov
lahf
das
mov
cdq
and
push
cs
dec
push
dec
int
pushf
lods
push
pop
ror
adc
and
cmp
les
push
push
dec
inc
push
sub
dec
push
les
push
dec
mov
pop
or
push
aam
jecxz
bound
pop
fs
mov
add
add
or
xor
xchg
xchg
mov
push
adc
cmp
neg
shl
fcomp
mov
push
sbb
add
mov
xchg
inc
push
or
push
jle
jecxz
add
fadd
push
sbb
das
and
or
dec
jae
pop
fs
xor
adc
addr16
out
sub
add
(bad)
push
fisub
or
daa
add
arpl
xchg
ficomp
jnp
mov
test
mov
xor
push
adc
sub
ins
mov
xchg
into
outs
pop
push
pop
add
sbb
outs
cmp
inc
mov
ds
dec
inc
xor
test
retf
movs
push
inc
inc
dec
clc
sub
xchg
dec
pop
enter
wrmsr
or
or
adc
(bad)
ins
loope
in
or
xchg
mov
cmps
xor
or
sub
in
push
and
test
test
jno
sub
ds
push
ret
add
shl
push
dec
inc
pop
add
pusha
or
dec
jo
push
aad
adc
(bad)
jg
xor
pop
and
inc
outs
adc
add
fbld
xor
xchg
pop
std
adc
dec
ss
pop
sub
xor
dec
fisttp
js
sub
jl
loope
sbb
xor
inc
loope
int3
mov
aas
pop
or
enter
sbb
dec
mov
push
cmp
lock
movsx
mov
dec
inc
lahf
cmovo
inc
sbb
loop
ret
call
aas
cld
test
lahf
add
sbb
dec
push
test
mov
add
adc
and
cmp
test
push
cmp
inc
call
and
fistp
jl
daa
leave
jae
outs
les
and
enter
pushf
cmp
jb
enter
call
mov
or
dec
fisubr
cmps
push
inc
dec
pop
inc
add
outs
xchg
sub
xchg
iret
jae
mov
sub
xrelease
mov
jns
lock
jl
dec
dec
pushf
dec
sahf
sub
(bad)
jo
test
and
repnz
out
xor
jns
sbb
mov
sahf
fwait
inc
scas
shl
scas
mov
pop
jb
out
je
or
pop
leave
mov
add
add
push
xchg
popf
sub
inc
push
adc
dec
xor
mov
push
addr16
add
push
xchg
or
mov
ds
dec
loope
lods
dec
ja
out
push
ret
or
mov
xor
fmul
add
add
cmps
ja
push
mov
addr16
xlat
daa
in
jno
(bad)
dec
push
pop
push
xchg
popa
dec
ss
outs
add
mov
adc
mov
xchg
adc
add
(bad)
stc
cmp
rcr
call
fld
sbb
outs
hlt
movs
popf
nop
pop
sub
cmp
lahf
(bad)
fiadd
sub
xchg
sbb
jns
push
adc
dec
dec
sub
stos
emms
xor
add
sar
shl
sbb
loopne
lock
mov
push
add
push
push
outs
push
add
jg
les
fwait
or
fwait
nop
iret
adc
jo
sbb
push
sbb
out
cmps
test
aam
inc
scas
in
test
jb
popa
jo
fbld
push
xor
pusha
adc
mov
daa
fs
push
pusha
push
je
mov
(bad)
jno
jg
stos
int3
mov
mov
and
jmp
cmp
mov
sub
add
(bad)
adc
cmp
cwde
jb
dec
pop
nop
addr16
ja
fcom
icebp
mov
fcomp
push
xor
(bad)
push
xor
push
xchg
rcl
out
or
ss
push
push
xchg
nop
iret
test
cmp
add
jo
cmp
fisubr
cwde
mov
enter
movs
cwde
mov
and
pop
repnz
pop
loopne
push
xchg
xor
lods
mov
inc
push
lahf
dec
xchg
pop
dec
mov
sahf
jo
es
pop
repnz
add
jo
nop
out
and
ror
in
out
movs
and
inc
jmp
jne
mul
in
fs
xor
inc
push
fld
pop
fs
ja
mov
add
mov
(bad)
(bad)
cmps
add
fucomi
lahf
mov
add
test
mov
push
das
mov
add
ror
push
movsx
and
push
dec
push
push
rcr
leave
mov
ins
adc
scas
ja
cmps
and
and
and
lock
mov
pusha
or
cs
test
lock
cmp
call
pop
pop
mov
cmp
jae
iret
mov
lods
mov
enter
pop
adc
scas
in
daa
or
hlt
cmps
scas
add
adc
daa
fs
and
xor
add
out
dec
and
xor
out
nop
fs
mov
xor
ja
retf
fwait
nop
adc
nop
add
(bad)
hlt
or
pop
sub
mov
(bad)
pop
inc
es
ficomp
pop
sahf
js
mov
add
scas
xchg
pop
xor
movs
cmps
scas
clc
shl
rcr
les
push
pop
stos
icebp
imul
push
xchg
addr16
(bad)
and
enter
push
xchg
sub
fdiv
pop
mov
mov
jl
xchg
pop
leave
jae
add
mov
test
xor
int3
es
mov
mov
iret
outs
clc
es
sbb
pop
sub
inc
pop
ss
push
popf
scas
mov
jg
and
mov
aam
xor
leave
xchg
aam
jae
cmp
hlt
les
ja
pop
leave
xor
loopne
xchg
hlt
add
adc
out
or
adc
and
lods
jge
xor
dec
aas
test
mov
lahf
and
jb
iret
jo
and
repnz
enter
rcl
test
cmp
push
add
xchg
cmp
mov
xchg
push
add
aaa
ins
dec
pop
dec
mov
pushf
pop
pop
ins
pop
shl
cs
dec
lahf
sbb
lods
xchg
pop
xchg
xor
fbstp
lock
pusha
cs
dec
mov
iret
test
dec
pop
scas
(bad)
push
enter
call
les
int
adc
fisttp
aas
lock
stos
fbld
movs
in
add
pop
popa
dec
inc
out
or
outs
xchg
fcom
dec
enter
push
dec
popa
das
fsubr
mov
xchg
outs
add
xchg
jl
jecxz
and
es
xchg
jl
mov
fsub
sub
add
inc
adc
fs
jno
and
cmp
bound
into
jg
into
adc
(bad)
jns
adc
pop
mov
enter
arpl
add
pop
movs
mov
add
arpl
fdiv
arpl
outs
add
inc
lods
loopne
div
aam
adc
xchg
daa
xor
push
shl
hlt
add
outs
inc
lahf
ja
iret
pop
or
cmps
int3
test
inc
fs
js
clc
push
pop
fs
push
(bad)
mov
add
sub
pop
ja
scas
pop
iret
jae
out
lods
addr16
ins
xchg
fs
ja
in
test
cmps
and
xor
or
shl
push
pop
gs
fsubr
mov
(bad)
push
jg
sbb
and
pop
cwde
gs
cs
mov
add
and
inc
call
ins
xchg
inc
inc
push
push
inc
or
outs
jg
fbstp
push
test
test
nop
ror
jmp
or
cwde
iret
jnp
add
in
stos
sbb
sbb
jl
loopne
add
shl
adc
add
pop
mov
or
inc
addr16
addr16
jl
fidivr
cmps
test
nop
addr16
fild
xchg
inc
ja
jnp
mov
dec
dec
shl
jns
out
fnstsw
rcr
call
cmp
xor
pop
aas
xchg
cwde
sbb
out
add
mov
or
inc
jo
xchg
push
fdiv
push
nop
das
outs
add
rcl
push
push
xchg
push
sub
xor
dec
sub
hlt
push
sbb
push
cmp
jno
sbb
pop
pop
loope
shl
or
rcr
xchg
sub
imul
mov
pusha
js
ja
dec
bnd
iret
jl
daa
addr16
imul
mov
iret
cmp
dec
push
cmps
ins
add
pop
loopne
ja
push
out
in
pusha
out
fmul
dec
ss
fmul
or
push
adc
and
or
cld
or
nop
or
adc
in
push
jmp
imul
pop
push
js
scas
ins
aad
imul
out
or
push
clc
jg
rol
mov
scas
mov
in
shl
loopne
cmp
lahf
and
ins
ins
or
xor
push
sbb
ins
xlat
dec
jmp
aam
push
lock
lods
mov
and
lahf
ja
aam
mov
mov
out
ins
cmps
or
add
jp
add
ins
ins
cmovg
test
mul
and
push
sbb
xchg
cmp
ins
ins
ins
test
adc
or
test
retf
pop
outs
cmps
(bad)
fsub
pop
xor
outs
neg
lahf
outs
ins
ror
dec
clc
jo
test
pop
mov
sar
ja
icebp
mov
rcl
outs
enter
cmps
inc
add
pop
cmp
outs
pop
ja
mov
push
pop
outs
ja
push
add
aad
xchg
pop
aad
pop
mov
in
je
ja
mov
xchg
cmps
mov
mov
pop
adc
daa
cmps
test
pop
ja
cld
outs
nop
xchg
int
or
sbb
jo
loopne
(bad)
push
jo
shl
add
pusha
repz
pop
call
ja
scas
mov
pop
mov
nop
cmps
test
iret
test
hlt
or
in
cdq
test
and
ja
mov
dec
mov
in
sahf
dec
pusha
scas
or
sub
das
mov
add
inc
pop
xlat
jmp
pop
mov
bound
or
or
inc
jno
jmp
or
das
iret
mov
aad
push
dec
push
js
mov
push
shl
inc
lock
cmp
ja
jb
jae
or
outs
push
add
out
pop
out
je
jae
push
jnp
adc
sbb
aas
(bad)
push
ds
addr16
nop
dec
jae
add
fs
nop
data16
jmp
movs
jae
jae
bound
enter
mov
call
rol
push
and
es
je
push
fs
mov
loopne
aam
xchg
clc
xchg
movs
mov
clc
xchg
repnz
in
cld
adc
nop
or
add
jmp
fild
pop
inc
jne
push
push
pushf
jne
in
pop
(bad)
jne
jmp
bound
mov
xchg
add
dec
xchg
int3
mov
fadd
call
add
xchg
mov
jbe
ins
outs
bound
sub
xor
aas
pop
add
das
addr16
call
xor
jbe
(bad)
dec
push
add
push
nop
out
and
jbe
adc
lods
test
mov
jmp
ja
sbb
arpl
jg
pop
in
mov
ja
push
mov
dec
dec
repz
je
ja
enter
je
movs
jae
cli
pop
nop
lock
add
enter
js
in
lock
out
scas
lods
dec
js
pop
inc
xor
fwait
js
js
out
lahf
or
js
cwde
js
dec
mov
test
mov
call
outs
aaa
cld
in
push
clc
pop
hlt
add
inc
jnp
mov
in
les
jns
push
nop
xchg
sar
xor
mov
outs
sbb
dec
scas
in
test
mov
addr16
jns
and
mov
enter
not
adc
mov
ret
lahf
add
pop
dec
outs
xor
or
pop
add
push
cmp
pop
mov
test
call
inc
les
das
or
fdivr
int3
cmps
add
movs
adc
(bad)
jnp
and
push
pop
jg
fstp
jnp
dec
push
lahf
fbld
nop
adc
and
(bad)
mov
test
pushf
scas
inc
inc
pop
push
jnp
out
jnp
cs
jge
in
clc
jnp
push
ds
jb
add
xor
fwait
or
xchg
push
out
pop
leave
add
adc
mov
daa
inc
les
jl
pop
sub
outs
add
pop
(bad)
push
out
pushf
cld
jl
fs
or
and
out
mov
sbb
dec
enter
push
jo
movq
cmp
out
ja
in
(bad)
sahf
lock
mov
cwde
lock
mov
inc
call
pop
add
or
outs
clc
adc
cmp
lock
pusha
jle
nop
pop
sbb
and
mov
rep
xchg
nop
jle
and
mov
fisttp
add
stos
jg
dec
push
loopne
call
jg
test
push
dec
loopne
movs
shr
jg
or
xchg
mov
jg
cmp
repnz
mov
mov
pop
repnz
enter
hlt
or
or
nop
in
inc
cmp
pop
add
jl
lods
and
adc
out
cwde
xor
and
call
add
dec
xor
cmp
nop
xchg
xor
dec
dec
jo
iret
add
or
mov
inc
cs
lock
or
push
enter
add
scas
pushf
js
or
add
pushf
cs
nop
js
shl
or
add
mov
shr
inc
(bad)
push
dec
add
nop
pop
shl
inc
adc
add
jl
mov
xchg
sub
mov
pushf
xchg
int
rol
cs
call
and
out
ins
cmp
ja
ins
dec
adc
pop
push
test
test
add
sbb
repnz
je
mov
xor
dec
mov
and
dec
mov
add
add
mov
(bad)
fild
jne
inc
repz
out
or
adc
repz
xor
cld
sahf
out
ds
ja
mov
sub
push
jne
sar
repz
fs
fidivr
out
shr
jns
jp
cmp
sahf
out
pop
and
repz
jnp
push
ja
out
call
lahf
mov
jg
cmps
mov
jle
inc
imul
fld
jg
repz
out
and
cmp
xor
mov
repz
out
ds
cmp
dec
repz
or
call
das
dec
repz
out
cmps
retf
test
repz
mov
stc
cmp
repz
sbb
jns
cmps
inc
xchg
scas
fxch
repz
sbb
xchg
rcr
mov
mov
repz
add
imul
fbld
sahf
out
lods
jmp
stc
cmp
test
loope
mov
push
mov
lea
jmp
inc
jbe
retf
sar
pusha
xor
nop
ss
test
repz
xchg
dec
mov
mov
sbb
repz
out
xchg
push
mov
imul
xchg
jle
iret
repz
imul
xchg
pop
call
cwde
pop
test
int
imul
das
fwait
js
out
cmp
in
pop
pushf
clc
xor
sahf
out
xor
enter
ret
repz
xor
lahf
cmps
stc
jg
test
cmp
iret
repz
mov
dec
repz
repz
out
movs
jne
fist
movs
cmps
stc
cmp
dec
mov
or
lahf
mov
test
(bad)
xlat
jl
cmps
stc
pop
xor
sbb
push
stos
test
fisubr
mov
push
repz
out
mov
mov
retf
jns
out
mov
mov
pop
mov
xor
inc
mov
int
jns
iret
imul
lods
xlat
aas
mov
jl
mov
jecxz
mov
out
xor
mov
cmp
out
movs
in
adc
dec
stos
jl
cmps
stc
cmp
xchg
int
imul
xchg
in
adc
inc
xchg
sbb
out
and
int
stc
xor
push
pop
sahf
out
cmp
out
mov
mov
imul
sahf
retf
or
inc
repz
out
sar
cmps
fincstp
jns
out
into
ins
nop
retf
pop
iret
mov
push
out
shl
out
mov
push
(bad)
out
and
dec
repz
push
mov
push
rol
fwait
aam
aad
(bad)
loop
stc
cmp
sbb
fadd
out
cmp
push
fnstenv
popa
jmp
stos
out
(bad)
call
fs
cmps
stc
cmp
xor
pop
mov
jl
fild
loopne
cmp
repz
sub
adc
ds
mov
cmp
aaa
in
fisub
ins
data16
cmp
arpl
adc
inc
gs
fsubp
repz
and
dec
jg
pop
jmp
jmp
ins
pop
in
xor
ja
cmp
ret
sub
pusha
xchg
mov
ds
(bad)
jmp
clc
into
ss
repz
stc
inc
cli
pushf
outs
sti
dec
cld
imul
inc
add
add
pop
dec
mov
cmp
cwde
add
add
imul
pop
add
lahf
dec
xchg
lock
jl
int
or
jl
jl
out
(bad)
mov
in
sti
out
repz
jns
scas
push
out
adc
data16
adc
sbb
sub
xor
int
sub
sub
movs
xlat
mov
sahf
out
sub
fstp
cmps
stc
into
test
movs
xor
repz
int
aaa
or
jne
sub
cmps
stc
cmp
dec
movs
out
cmp
stc
xor
rcr
cmp
stc
cmp
pop
ds
fidivr
mov
xor
int
inc
pop
inc
add
inc
repz
iret
rcr
int
or
dec
push
jo
mov
les
hlt
or
sbb
pop
jo
dec
mov
add
pushf
iret
mov
jmp
popa
cmps
mov
ja
mov
jne
das
jge
repz
add
in
(bad)
mov
sar
daa
inc
(bad)
(bad)
inc
mov
push
pop
xor
icebp
scas
pop
push
daa
push
repnz
add
cmps
mov
int3
nop
aaa
pushf
dec
push
mov
aas
xchg
cmp
cmp
inc
xor
inc
ret
mov
cmp
xor
sub
iret
ret
jns
lock
inc
out
in
mov
dec
and
je
test
xchg
fmul
push
in
enter
repnz
push
je
fwait
in
nop
push
push
daa
fs
cmp
cmp
nop
xor
cmps
enterw
pop
fsubr
jp
je
leave
test
push
cs
jne
pop
ret
icebp
xor
imul
das
(bad)
nop
xchg
in
mov
test
add
and
pushf
inc
or
push
or
sbb
inc
xchg
pushf
dec
or
xchg
pop
leave
add
adc
and
xchg
mov
xchg
jbe
sahf
pop
ja
sahf
(bad)
test
pop
mov
xchg
sub
push
xchg
add
aam
out
push
jl
cwde
mov
dec
dec
push
push
movs
sahf
pop
add
jns
push
data16
push
add
inc
push
clc
adc
das
nop
mov
mov
xchg
pop
xchg
daa
push
ins
add
xchg
clc
leave
test
xchg
fistp
aaa
enter
dec
jb
ja
push
in
dec
enter
xchg
cmp
inc
ja
dec
jo
pusha
xchg
pop
dec
xchg
mov
addr16
xor
and
jl
add
comiss
cld
aaa
call
adc
fist
ja
cmp
enter
in
ja
xchg
pop
dec
xchg
stos
mov
sbb
xchg
xchg
jb
adc
mov
xchg
adc
xchg
and
pcmpgtb
in
dec
dec
and
inc
lds
fs
das
push
(bad)
dec
jb
call
xchg
mov
push
sub
fs
in
clc
inc
pop
call
repz
scas
inc
popa
jge
mov
lahf
push
aaa
adc
pop
jbe
push
mov
and
sbb
jbe
in
push
mov
das
das
cmp
mov
pop
jns
inc
pushf
dec
push
ret
mov
sar
inc
mov
sbb
scas
fs
push
leave
ret
push
cdq
fs
in
cs
and
xchg
dec
lods
mov
pop
fsubr
pop
test
adc
(bad)
and
sub
mov
mov
call
inc
daa
add
in
(bad)
inc
int3
daa
nop
call
mov
scas
int
je
in
iret
fxch
iret
xchg
and
dec
fwait
pop
rcl
clc
bswap
out
and
call
jb
push
je
test
outs
lods
scas
lock
jnp
cmp
ret
out
fmul
xlat
or
inc
iret
jp
pushf
sbb
fcom
imul
jmp
push
xchg
dec
cs
pusha
popf
mov
xchg
dec
sar
in
jnp
xchg
mov
adc
xchg
mov
or
xchg
outs
xchg
popf
xchg
pusha
add
add
inc
cwde
cmp
pop
mov
outs
mov
out
inc
or
fwait
sub
sahf
iret
add
cmps
rol
lock
in
data16
daa
loopne
or
jae
or
or
or
shl
pushf
rol
add
smsw
dec
mov
das
iret
add
add
push
ja
mov
add
pop
leave
jae
cmp
push
daa
ins
pushf
(bad)
pop
leave
and
and
add
xchg
mov
rol
adc
jae
sahf
fldenv
jge
cmp
push
inc
ins
fsubr
iret
add
sbb
adc
or
sahf
pushf
add
jl
call
lock
fs
andps
mov
cmp
jge
jge
or
in
add
cmp
fdivr
xchg
call
in
neg
pop
call
mov
neg
test
mov
(bad)
das
es
test
je
mov
mov
out
sub
retf
sub
and
cmp
dec
and
aaa
xchg
dec
mov
and
out
xor
test
nop
pop
push
test
xchg
lds
pop
iret
call
fild
aad
xlat
sbb
xchg
pop
mov
seto
repnz
and
clc
jle
mov
enter
repnz
popf
icebp
ror
sbb
movs
xchg
jge
call
movs
mov
jg
inc
iret
and
jo
js
mov
jg
daa
jg
inc
mov
into
xlat
ins
xchg
dec
pop
sub
jb
xchg
push
movs
icebp
jg
mov
js
fbld
jb
daa
sub
outs
push
dec
call
inc
(bad)
push
adc
or
inc
jae
cmp
enter
ja
bts
mov
in
ja
cmps
out
xchg
ja
cmps
or
cmps
fisubr
jae
or
xor
push
dec
or
pop
int3
jne
dec
cmps
xchg
or
lahf
popf
inc
mov
test
repnz
inc
dec
scas
nop
xchg
test
push
jmp
movs
xchg
adc
xchg
test
and
test
shr
test
nop
pop
test
inc
cmp
imul
test
test
add
jo
inc
pop
push
lahf
cwde
inc
xchg
mov
or
rcl
or
(bad)
xor
xchg
in
xchg
xchg
pop
cmps
pusha
stos
xor
sub
fwait
mov
jmp
scas
leave
mov
adc
stos
xchg
dec
mov
in
scas
push
daa
mov
cmp
rcl
repnz
mov
or
xchg
sbb
dec
cmovo
test
inc
rol
jl
ins
lods
in
in
xor
and
mov
ss
cmp
push
add
fcomip
ja
fistp
test
sub
in
push
mov
pop
movs
mov
inc
popa
mov
mov
pop
xchg
pop
ror
fmul
js
test
sub
or
mov
mov
fucom
rol
popa
test
push
shl
leave
dec
sahf
cmps
mov
enter
add
adc
jbe
inc
jg
add
fdiv
cmps
add
test
sahf
mov
scas
cmp
adc
int3
and
xchg
adc
push
push
mov
pop
add
xlat
jl
(bad)
xchg
pop
mov
aaa
mov
jb
loop
dec
(bad)
fdiv
in
mov
mov
in
xchg
xchg
push
in
mov
pushf
mov
adc
cld
lahf
add
(bad)
push
into
leave
or
data16
inc
shr
push
repnz
movs
in
hlt
mov
mov
cmp
adc
repz
and
cdq
in
mov
ins
jb
push
repnz
jecxz
jb
adc
jns
cld
mov
xchg
mov
pop
leave
inc
jb
mov
pop
mov
mov
ins
mov
leave
add
(bad)
fiadd
rcl
stc
xchg
mov
jns
and
pop
or
mov
lahf
aas
mov
jns
inc
push
add
xchg
xchg
mov
ins
ja
jp
sub
xchg
sub
or
pushf
cmp
ret
retf
mov
std
cmp
and
jns
movzx
dec
nop
mov
mov
je
test
cdq
xchg
add
or
data16
repnz
add
cmp
push
mov
ret
dec
dec
scas
je
xchg
xor
mov
add
adc
inc
or
push
out
mov
mov
in
add
cmp
xchg
adc
jp
cmp
inc
xchg
(bad)
aam
and
cdq
nop
inc
in
aas
add
push
adc
adc
push
sub
xchg
aas
dec
dec
adc
int
aas
shl
stc
xchg
mov
nop
ins
dec
push
rcr
iret
ror
jg
jns
add
jns
aas
push
jo
cmp
cmp
mov
inc
cmp
xchg
jno
punpckhbw
xchg
pop
jg
movs
sub
inc
stos
fsub
lods
dec
jb
popf
arpl
out
pop
mov
mov
adc
enter
aas
test
add
repnz
mov
jbe
dec
adc
dec
dec
iret
aas
shl
das
cdq
sub
add
jo
in
scas
clc
jo
jp
cs
cmp
push
stc
cs
push
mov
push
adc
adc
xchg
dec
or
mov
add
or
adc
push
std
dec
add
push
mov
outs
out
ds
pmulhuw
mov
lock
mov
add
add
cmp
cmp
aas
dec
fistp
cs
scas
sar
in
adc
push
dec
ret
fld
or
aas
loopne
dec
scas
pop
jnp
ins
and
sub
cmp
je
es
mov
pushf
sub
sub
(bad)
clc
dec
dec
daa
or
stos
bound
dec
and
arpl
in
mov
sub
jmp
inc
ins
cmps
aam
ss
mov
cmp
mov
cwde
xchg
xchg
leave
leave
inc
repnz
sar
ja
jl
fchs
(bad)
stos
pop
or
mov
dec
es
push
add
out
mov
inc
fwait
in
imul
mov
jo
sbb
inc
inc
enter
mov
sub
mov
enter
add
outs
add
in
icebp
push
ds
inc
jg
adc
pop
(bad)
cmps
push
inc
out
jb
xchg
jl
stc
inc
movs
rcl
sbb
adc
inc
pop
mov
adc
shl
outs
in
xchg
mov
or
cmp
add
cmps
jl
pushf
pop
and
fsub
inc
sahf
pushf
pushf
out
stc
pop
lea
shl
lea
(bad)
xlat
inc
mov
lea
pop
xchg
sbb
dec
es
ret
cwde
dec
ja
dec
mov
dec
sahf
fnclex
mov
inc
jle
aaa
js
xor
pop
leave
and
pop
fadd
xor
fadd
mov
pop
inc
es
out
inc
dec
das
ret
dec
lahf
xchg
sbb
xchg
pop
imul
ret
or
pop
inc
aas
push
(bad)
mov
ret
ja
pushf
call
in
in
mov
xchg
and
mov
(bad)
push
(bad)
jb
add
sbb
pop
aas
(bad)
shl
cmp
hlt
xlat
jnp
call
leave
jae
and
pop
leave
and
nop
xor
xchg
pop
add
pand
push
pop
mov
push
pop
and
es
xchg
dec
jl
lds
cmps
test
jae
sbb
retf
rol
ins
xchg
pop
leave
mov
mov
and
push
xchg
adc
addr16
ss
enter
xchg
xchg
and
or
popf
pushf
pushf
rcr
in
mov
jl
cli
add
xchg
xchg
adc
or
(bad)
aas
xchg
cmp
enter
xchg
pusha
xchg
outs
xchg
out
mov
xchg
mov
rcr
(bad)
mov
jo
pop
xchg
dec
push
xchg
adc
cmp
dec
xchg
out
jb
xchg
dec
loopne
sub
pop
and
pop
jl
scas
jb
cmp
into
fwait
mov
xchg
movs
cmps
mov
inc
xchg
dec
xchg
mov
or
cmp
cdq
dec
jno
or
add
cmp
repz
adc
aam
paddusb
in
inc
sar
xchg
ja
xchg
jb
dec
jb
xchg
mov
xchg
pop
jb
dec
inc
lock
(bad)
js
ins
xchg
aad
leave
xchg
xchg
retf
retf
leave
leave
inc
mov
jnp
loop
add
aas
repnz
(bad)
cli
xchg
push
xchg
and
xchg
or
pop
leave
xlat
sub
mov
push
das
pop
add
jmpw
xchg
xchg
outs
xchg
jbe
cdq
pop
leave
jae
mov
add
das
xchg
dec
outs
addr16
adc
pop
test
inc
cmp
mov
xchg
xchg
xchg
xor
sbb
and
xchg
out
jbe
ja
add
repz
cs
mov
cwde
xchg
xor
ins
leave
xchg
adc
dec
cwde
push
cwde
ja
outs
daa
pop
cmp
jmp
lock
les
sbb
in
xor
fisttp
cdq
push
ins
xchg
and
cdq
jo
xchg
mov
jmp
daa
iret
repz
add
daa
daa
daa
daa
jge
lea
popf
movs
lods
mov
daa
daa
daa
mov
in
add
into
ins
in
xchg
clc
add
xchg
xchg
xchg
fistp
pop
and
xor
jns
xchg
cmp
dec
push
setle
in
pop
pop
pusha
push
fmul
jo
leave
mov
call
pmaxub
push
xor
neg
imul
lahf
out
iret
and
fwait
pop
mov
mov
xchg
xor
xchg
add
cmps
(bad)
daa
pop
out
enter
mov
xor
daa
daa
pop
enter
push
ds
jb
jo
mov
sahf
dec
jb
shr
inc
mov
xchg
or
push
popf
cmps
fwait
xlat
(bad)
mov
pushf
jne
and
pushf
pop
pushf
adc
mov
and
(bad)
sar
cmp
push
add
repz
add
add
cmp
xchg
pop
movs
or
cmp
repz
ror
xor
iret
or
or
lahf
daa
cmp
adc
loopne
sbb
add
dec
aaa
jecxz
out
ja
mov
popf
inc
inc
addr16
push
sub
pop
enter
mov
popf
sbb
jb
sbb
popf
and
mov
repnz
in
jmp
add
repnz
sbb
sahf
cmps
add
in
dec
sahf
push
sahf
pop
sahf
in
cmp
push
sahf
outs
mov
in
sahf
js
addr16
jb
in
adc
or
sahf
ja
jbe
outs
add
fcmovbe
ss
xchg
push
mov
ffree
dec
cs
aam
cs
fisubr
and
push
lahf
mov
mov
mov
and
sbb
mov
inc
jns
enter
mov
out
sahf
out
movq
leave
xlat
inc
pushf
ja
sub
test
inc
push
pop
aad
jbe
pop
fs
aad
fist
mov
add
add
mov
jge
test
aas
(bad)
pushf
loopne
adc
(bad)
pop
adc
iret
sbb
and
nop
sbb
add
daa
mov
leave
add
xchg
jo
out
hlt
(bad)
in
in
sbb
xchg
cmp
into
mov
lea
push
movhps
ja
lds
cmp
push
pushf
fsubr
cmp
ins
pcmpeqw
pushf
pushf
pushf
test
xor
mov
ja
push
add
fadd
sahf
out
loopne
push
lock
sahf
fstp
out
mov
iret
cmp
and
or
sbb
dec
mov
mov
mov
pop
mov
adc
addr16
push
or
fimul
out
inc
push
(bad)
mov
or
es
into
cmp
movs
(bad)
movs
icebp
push
ins
or
int3
(bad)
mov
(bad)
fimul
sbb
mov
fimul
out
add
in
shl
mul
push
xchg
pop
jb
push
jae
in
and
js
movs
pop
mov
adc
mov
lock
fstp
cmps
sub
add
cmps
adc
in
xchg
leave
leave
inc
mov
addr16
repz
jb
out
inc
mov
leave
repz
add
fdivr
fisttp
jecxz
cmp
cmp
repz
add
or
sbb
pushf
pushf
pushf
pushf
sub
cmp
pushf
pushf
pushf
dec
push
pop
arpl
sbb
adc
jb
mov
mov
cmps
aas
mov
cmp
retf
cmps
repnz
in
cmps
out
cmc
cmps
add
scas
adc
pop
cmp
cmp
arpl
inc
repnz
xchg
leave
leave
leave
leave
mov
(bad)
iret
fld
mov
je
xchg
test
xchg
cmp
sub
inc
fisub
push
inc
add
leave
out
out
sub
out
add
in
mov
dec
(bad)
sub
mul
inc
xor
iret
cmp
movs
ficomp
or
sbb
pushf
cmp
or
imul
cmp
das
push
add
push
jns
cmp
push
pop
or
jns
cmp
popa
or
and
xchg
ret
in
mov
pop
push
sub
aas
(bad)
cs
bound
movs
das
lfs
mov
add
loopne
xlat
pop
push
dec
push
fsubr
daa
and
mov
dec
int3
aam
fsubr
in
ss
test
dec
or
mov
daa
dec
dec
sbb
mov
loopne
stos
xor
mov
data16
daa
iret
rep
add
mov
stos
mov
xchg
pop
sahf
pop
in
sahf
ja
cs
or
out
mov
into
adc
repz
adc
adc
jns
out
out
push
adc
cmp
out
push
stos
sbb
aam
in
out
in
cmp
pop
xor
mov
add
js
push
cmp
iret
repz
nop
or
iret
repz
or
iret
repz
mov
sahf
out
enter
loopne
out
jns
call
or
mov
cmp
in
adc
repz
leave
sub
sbb
fmulp
inc
dec
push
and
jns
xchg
out
pusha
push
out
js
or
nop
cwde
sub
test
mov
cs
dec
sar
lods
das
lods
push
xor
out
fsub
xor
lock
repz
xor
or
jns
xchg
lods
adc
sbb
jns
xchg
out
sub
cmp
cmp
dec
push
inc
aaa
test
inc
lods
push
in
dec
sahf
inc
jo
inc
cmp
out
dec
nop
cwde
dec
dec
sahf
out
mov
sahf
out
jns
ror
shl
in
dec
fcom
call
push
jmp
jl
ror
push
or
adc
repz
and
xor
pop
inc
dec
pushf
cmp
repz
push
popa
pop
pusha
pushf
cmp
repz
jo
pushf
cmp
repz
pushf
cmp
repz
mov
mov
rep
enter
dec
movs
imul
scas
push
shl
mov
out
iret
repz
or
js
jns
sbb
out
and
jl
jns
out
cmp
jg
jns
out
push
sbb
cmp
jo
js
sahf
out
add
out
cwde
mov
out
mov
mov
out
enter
fdivr
out
loopne
call
idiv
clc
xchg
add
repz
cwde
adc
mov
out
and
dec
pushf
xor
jns
inc
lahf
dec
push
cmps
shl
mov
test
movs
mov
sahf
out
sahf
cmps
and
out
test
movs
pop
daa
mov
mov
pop
leave
push
jmp
sub
in
mov
movs
out
mov
mov
jmp
in
mov
mov
mov
sub
das
cmp
pop
mov
das
das
das
fs
mov
mov
mov
or
das
nop
mov
mov
cmps
mov
jns
jns
mov
mov
mov
push
js
pop
test
out
hlt
mov
mov
mov
mov
push
sbb
repz
sbb
sbb
push
cmp
repz
fs
jb
repz
repz
and
stos
and
repz
call
xchg
inc
daa
es
mov
jmp
mov
mov
mov
mov
gs
mov
mov
mov
enter
mov
mov
mov
and
ins
(bad)
test
mov
adc
mov
cmp
sbb
mov
mov
mov
(bad)
mov
mov
sbb
out
jb
inc
mov
mov
inc
mov
mov
mov
mov
jb
enter
mov
mov
mov
mov
cmp
gs
pusha
ja
jae
out
pushf
mov
add
mov
in
ret
nop
lahf
adc
mov
in
mov
(bad)
inc
bnd
bndldx
cmp
mov
xchg
leave
leave
leave
inc
outs
jbe
test
js
xchg
in
hlt
iret
test
mov
shl
and
sbb
mov
mov
mov
inc
stos
(bad)
ins
aas
add
adc
and
adc
daa
mov
mov
(bad)
sub
daa
daa
daa
daa
cmp
dec
push
cs
cmps
cmp
pop
hlt
jg
adc
dec
ja
scas
mov
repz
mov
add
jb
jns
mov
(bad)
jb
jb
fsub
call
jb
add
outs
daa
iret
adc
and
sub
test
(bad)
shr
jns
jns
out
mov
dec
dec
sahf
pop
push
add
dec
dec
mov
out
in
fs
rcr
leave
leave
leave
in
jecxz
jmp
sti
aas
lea
add
sbb
ror
adc
repnz
adc
out
mov
pop
popf
mov
push
pop
push
lahf
ss
ds
mov
mov
lahf
xchg
out
mov
push
or
iret
repz
sete
pushf
fwait
mov
bound
jns
and
out
mov
leave
les
out
xchg
test
iret
les
in
call
aam
push
lock
cmp
in
adc
repz
repz
add
add
leave
leave
leave
cmp
pop
in
into
leave
popa
push
test
jmp
pushf
movs
aas
(bad)
mov
dec
mov
test
dec
icebp
repnz
daa
mov
mov
dec
mov
xchg
cmps
cmp
xor
adc
ins
mov
sbb
rol
xchg
mov
and
mov
dec
dec
dec
dec
vpmullw
lahf
or
in
push
adc
repnz
and
mov
in
xchg
mov
cmp
mov
or
cmp
pop
or
jo
cmp
cmp
mov
cwde
mov
cmp
mov
push
xor
repnz
repz
leave
inc
inc
mov
sbb
push
mov
cs
or
push
(bad)
push
mov
push
xchg
repz
test
repnz
mov
fdivr
out
hlt
mov
add
repnz
mov
mov
mov
inc
sbb
dec
js
xchg
pop
and
out
inc
cwde
hlt
pushf
xchg
adc
mov
add
emms
test
out
pop
ror
out
psadbw
push
add
outs
and
sbb
and
loopne
cmps
inc
push
push
in
or
xor
and
in
mov
or
or
cmc
dec
push
in
xchg
jl
inc
call
retf
add
clc
cmc
jge
mov
xchg
mov
ins
push
add
mov
mov
rcl
dec
lock
pop
xor
cmp
inc
add
into
shl
jns
js
sbb
test
inc
mov
data16
rcr
outs
jnp
jae
xor
rcr
shl
aas
xchg
mov
jo
add
aas
adc
add
(bad)
jae
leave
leave
into
(bad)
ficomp
out
xchg
fcomip
push
daa
and
paddb
or
xchg
out
mov
sbb
(bad)
cmp
daa
sahf
sub
mov
rcr
push
rcl
addr16
fcmovne
xchg
shr
movq
popf
xchg
xchg
mov
clc
fucomip
bnd
outs
mov
call
adc
stc
jg
stc
and
or
nop
stc
out
adc
or
fmulp
xchg
ret
xor
outs
repnz
dec
ret
push
push
mov
pop
js
ret
lahf
jns
jge
inc
dec
nop
inc
iret
call
sbb
ret
or
ds
enter
or
cmp
mov
(bad)
int3
aam
jl
add
ret
sub
or
sbb
push
aaa
lock
idiv
cli
daa
pop
add
cli
scas
pop
ret
cmp
and
sub
into
repz
xor
pop
xor
cmp
mov
sti
mov
mov
out
enter
outs
ret
pop
pmovmskb
in
inc
jg
mov
jae
pop
sar
mov
push
cld
fucom
in
in
xchg
syscall
les
jns
popf
fisttp
les
or
jns
(bad)
cld
das
or
in
and
arpl
xchg
xchg
test
xchg
movs
lods
mov
dec
and
add
out
(bad)
std
jns
jns
or
adc
sbb
cmp
es
outs
int3
mov
cmp
jns
out
push
add
adc
jge
dec
es
out
sbb
cmp
mov
dec
mov
ror
pushf
fmul
psubusb
call
lock
add
or
dec
dec
adc
and
in
in
adc
cmp
in
in
push
pop
pusha
xchg
fcmovne
push
pop
test
(bad)
(bad)
push
jb
inc
ret
push
mov
js
cmp
(bad)
(bad)
pmaxub
pop
or
retf
out
out
(bad)
test
pop
push
mov
xlat
and
aaa
sub
enter
(bad)
cmp
lahf
fstp
out
sqrtps
mov
xor
daa
inc
xor
daa
daa
daa
test
mov
inc
xchg
mov
daa
daa
mov
(bad)
iret
pmovmskb
out
and
mov
fmul
enter
mov
movntps
leave
leave
leave
leave
cmp
push
leave
leave
leave
leave
pop
arpl
js
into
leave
jnp
fbld
xchg
jl
inc
add
rcr
dec
sahf
ja
push
add
jmp
jl
in
ins
in
mov
setl
leave
ss
dec
mov
jmp
push
pop
dec
add
mov
or
test
cmp
cmp
cmp
loope
icebp
loopne
cmp
stc
add
or
nop
fdivr
or
retf
push
jns
retf
sahf
fld
ins
pcmpeqw
in
jns
mov
jge
xchg
pop
popf
push
nop
daa
mov
mov
retf
(bad)
loope
daa
daa
daa
in
test
xchg
or
xchg
xchg
xchg
cmp
xchg
xchg
xchg
xchg
gs
enter
xchg
rcr
jmp
xchg
inc
xchg
xchg
cmps
mov
imul
aad
rol
add
cmp
add
xor
repnz
int3
int3
int3
int3
dec
and
sub
add
pushf
mov
and
xchg
adc
in
sti
add
iret
repnz
adc
sbb
and
fisubr
xor
cmovae
or
or
pop
packsswb
cmp
daa
imul
repnz
xchg
int
int
dec
sahf
out
sbb
addr16
xchg
add
repnz
add
add
sbb
cmp
ja
mov
dec
call
jb
mov
minps
sbb
pop
pop
in
xor
cmps
stos
mov
mov
ret
xchg
cmp
mov
iret
out
psadbw
(bad)
xchg
out
inc
iret
inc
(bad)
movhps
rsqrtps
xlat
iret
jae
xor
outs
mov
in
or
xchg
pop
ja
scas
(bad)
mov
mov
mov
(bad)
fisubr
jmp
wbinvd
shl
mov
push
in
mov
push
arpl
stc
push
sahf
pop
pop
inc
add
push
subps
push
lds
aaa
(bad)
shr
scas
in
mov
mov
(bad)
jb
rol
int3
aad
or
or
mov
aas
out
es
push
add
sub
xchg
ss
adc
push
bound
(bad)
dec
xchg
scas
rcl
fistp
dec
pop
fbstp
inc
and
add
movs
sahf
rcl
sar
cmp
inc
jb
jo
push
add
or
popf
pushf
dec
mov
mov
jns
out
add
mov
in
pop
test
outs
pop
and
add
or
xchg
xchg
and
or
rcl
pushf
fsubr
ror
inc
pop
dec
push
repz
pushf
pushf
pop
popa
imul
jno
pop
pop
test
jb
xchg
pushf
movs
lods
jns
adc
rcl
jns
jns
int3
rcl
rcr
shl
shl
jbe
jns
shl
sar
(bad)
aam
jbe
xor
sbb
and
in
in
xor
inc
in
sahf
out
push
gs
ins
jns
fucomi
jne
jge
test
lea
cmp
adc
or
ret
aam
aam
aam
xchg
and
aam
aam
aam
cmp
repz
aam
aad
aad
fld
adc
sbb
and
sub
xor
ucomiss
mov
mov
adc
push
dec
daa
and
aaa
xchg
push
daa
pop
lahf
mov
jb
aad
aad
aad
aad
xchg
and
aad
aad
aad
mov
xchg
in
shr
push
in
int3
aam
jg
leave
retf
and
call
pop
(bad)
mov
push
sub
pop
mov
dec
lock
iret
xor
cmp
inc
ins
in
xchg
(bad)
dec
(bad)
push
(bad)
pop
bswap
leave
leave
leave
bound
jp
leave
leave
leave
or
leave
mov
leave
leave
leave
ret
fisub
mov
or
prefetchwt1
xlat
outs
xor
pushf
adc
mov
inc
add
xchg
dec
into
xlat
push
aas
pop
bt
xchg
xchg
pusha
push
outs
pop
leave
add
xchg
addr16
bt
jae
mov
or
add
in
sahf
aaa
(bad)
lar
lahf
or
leave
repz
and
pop
cs
out
sbb
or
ja
mov
fcomp
xchg
sahf
add
xchg
out
cmp
stos
push
or
mov
out
mov
fdiv
push
push
add
inc
call
dec
sub
fldcw
dec
fdivrp
js
dec
sahf
adc
push
scas
pop
fldcw
pusha
push
add
pop
push
pop
pop
bound
inc
les
out
aas
shl
in
push
lahf
(bad)
xchg
adc
leave
leave
inc
jl
xchg
movntq
xchg
popf
test
mov
pushf
xchg
xchg
xchg
mov
retf
retf
inc
pop
sbb
and
sub
repnz
jns
adc
pop
inc
adc
xchg
fild
push
pop
push
add
outs
repnz
add
out
fiadd
jae
out
cmp
mov
xchg
out
sahf
xchg
or
or
mov
scas
into
(bad)
out
(bad)
fstp
adc
push
fcmovnu
adc
fisttp
pop
sbb
add
test
or
inc
push
xchg
xchg
fild
fist
iret
rep
aas
fs
add
mov
test
mov
ret
(bad)
xchg
fild
pop
in
rol
pop
mov
(bad)
xlat
iret
pop
xlat
pop
fild
out
add
dec
push
sbb
jb
or
adc
sbb
and
leave
and
mov
fdiv
fcomp
pop
gs
leave
and
lock
add
outs
(bad)
fcmovne
in
push
pop
mov
mov
das
nop
fdivr
call
adc
fcmovnu
inc
inc
scas
mov
test
push
sti
mov
or
add
inc
popa
pop
leave
in
movs
iret
nop
aaa
dec
ja
leave
or
and
leave
leave
xor
push
xlat
pop
pop
cmp
add
leave
inc
dec
fstp
outs
pop
dec
sub
dec
pop
fidiv
adc
iret
sbb
and
sub
adc
pop
push
add
scas
nop
fwait
movzx
sbb
(bad)
ja
sbb
les
pop
and
dec
adc
leave
sbb
ja
(bad)
xchg
sub
xchg
xchg
mov
mov
xchg
xchg
pop
fs
sbb
cdq
push
xchg
xchg
lahf
push
add
repnz
mov
mov
popf
pushf
pushf
pop
(bad)
jmp
cli
add
or
aaa
sub
cmp
and
sbb
sbb
xor
mov
jb
js
mov
cwde
mov
jo
mov
daa
pop
add
and
sti
push
add
loope
into
in
in
add
and
inc
jb
mul
sbb
loope
push
popa
popw
loope
pop
imul
cmp
je
push
cmps
mov
cmp
mov
add
xchg
not
ja
and
fcmovbe
sbb
and
sub
cmp
das
loopne
in
bound
cmp
dec
sbb
and
loop
out
xchg
loop
add
add
dec
(bad)
xchg
lahf
cmps
cmp
repz
scas
pop
or
leave
repz
repz
repz
adc
adc
idiv
sysret
jecxz
mov
pop
pop
daa
daa
mov
out
das
aaa
(bad)
inc
outs
daa
daa
daa
dec
push
pop
pop
addr16
dec
dec
dec
outs
ja
xchg
out
es
daa
xchg
sub
jns
out
sub
fucomi
mov
mov
jns
xchg
xlat
fbstp
out
bswap
leave
leave
sar
jecxz
ss
push
imul
test
push
call
and
xchg
dec
pop
push
in
enter
in
in
xchg
cmp
xchg
pop
cwde
cmps
in
sahf
ja
push
add
in
(bad)
into
(bad)
mov
hlt
into
sahf
pop
and
adc
nop
mov
enter
in
das
xor
cmp
daa
daa
daa
inc
dec
push
pop
daa
daa
daa
daa
bound
jp
daa
daa
daa
or
and
mov
mov
lods
out
in
out
repz
ja
pop
test
push
out
push
out
push
or
out
push
or
ss
in
or
dec
movs
into
leave
repz
xchg
mov
out
out
out
in
out
dec
dec
lods
call
jne
(bad)
addr16
das
lock
xor
xchg
xchg
xchg
or
inc
or
adc
loopne
cmp
test
jns
ja
int
push
add
add
sahf
out
add
cmc
push
ss
std
add
add
fild
or
lgs
sbb
sub
loopne
test
(bad)
cmp
pop
out
xchg
jle
xchg
mov
xchg
adc
mov
xchg
out
aad
mov
scas
push
push
xor
inc
and
in
mov
jmp
jae
outs
test
(bad)
or
aas
in
xchg
inc
jb
loope
jl
sub
shl
cmp
call
ret
ror
adc
int
aaa
test
es
add
xor
sbb
mov
das
add
inc
cmp
sub
push
mov
popa
into
add
fadd
iret
enter
or
call
push
add
add
in
aaa
aad
fbld
add
or
aas
or
jmp
sbb
fistp
inc
jmp
push
mov
jmp
jbe
ja
mov
mov
mov
es
loopne
out
loopne
not
shr
add
jmp
xor
in
jb
jmp
cmp
(bad)
mov
or
fcmovne
leave
inc
scas
mov
setae
xlat
fbstp
out
idiv
test
pusha
daa
and
sub
aad
fild
pop
push
aas
(bad)
mov
pcmpgtw
adc
jmp
dec
(bad)
aam
mov
retf
retf
retf
cwde
jmp
jmp
jmp
jmp
daa
mov
fucomip
pxor
dec
and
xor
dec
inc
sub
test
cmc
sub
pop
sub
jl
jo
repz
gs
les
mov
repnz
cmps
pop
in
pusha
in
repnz
in
sub
xchg
(bad)
xor
cmps
nop
in
cwde
in
cmp
rol
dec
in
push
or
or
out
mov
loopne
daa
daa
mov
(bad)
clc
add
cmp
mov
or
pop
sbb
sbb
in
repnz
(bad)
in
in
dec
push
pop
pusha
in
in
push
xchg
in
mov
xchg
pslld
sub
mov
cmp
jae
sub
cmp
outs
cvtpi2ps
xor
xor
cmp
leave
out
div
xor
pop
out
rdtsc
cmp
iret
mov
push
out
cmp
daa
iret
repz
das
cmp
repz
inc
inc
dec
inc
cmp
jae
push
pop
inc
addr16
outs
daa
iret
rep
inc
ja
ja
pop
(bad)
lahf
xchg
out
popf
cmps
das
scas
dec
mov
jns
xchg
mov
out
sahf
out
fist
push
call
inc
out
pop
xchg
xchg
out
rsqrtps
pop
daa
daa
daa
mov
das
das
aaa
aas
inc
iret
repz
dec
popa
push
bound
xor
and
call
add
shl
shl
in
sub
out
dec
sub
inc
enter
sub
ss
inc
xchg
mov
paddsw
cmp
daa
cmc
std
push
repnz
xchg
dec
addr16
fsub
cmps
nop
daa
sub
add
and
mov
ja
sub
ins
jnp
or
ja
sub
scas
fbstp
cvtps2pi
and
(bad)
pop
vcvtss2si
(bad)
lock
icebp
add
xchg
cmps
or
push
das
pop
push
mov
icebp
daa
icebp
xor
das
das
das
das
cmp
icebp
popa
icebp
das
das
das
das
outs
icebp
jge
mov
cdq
icebp
das
das
das
das
cmps
icebp
mov
ret
icebp
shl
das
das
das
das
fcomip
in
icebp
sti
icebp
or
das
das
das
das
pop
repnz
repnz
das
das
das
dec
repnz
repnz
repnz
das
das
das
xchg
xchg
repnz
das
das
das
mov
bnd
das
div
add
jns
stc
outs
and
das
repz
out
sahf
sub
addr16
jns
out
sub
out
sahf
out
xor
js
xor
xor
repz
cld
test
repz
add
pmuludq
mov
sub
cmp
cmp
iret
repz
push
cmp
iret
repz
jg
(bad)
iret
repz
inc
fwait
inc
test
repz
lds
inc
or
repz
out
dec
jbe
mov
or
sbb
dec
daa
iret
repz
dec
xor
cmp
repz
pusha
push
outs
push
repz
repz
mov
iret
repz
push
cmps
push
mov
ret
repz
rcr
pop
stc
cmp
repz
pop
cli
pop
or
iret
repz
cmps
pop
push
pop
push
and
xor
repz
inc
pusha
dec
popa
repz
repz
bound
jb
jmp
punpckldq
inc
rcl
xor
popf
test
jb
imul
jne
ror
add
push
rcr
repnz
neg
int
aad
dec
jmp
arpl
inc
fsubp
xchg
sbb
jg
xor
push
test
or
daa
dec
aas
clc
jb
pop
dec
add
adc
cmp
div
and
neg
or
mul
pop
pop
aas
dec
push
xchg
mov
test
cmp
fwait
pushf
pop
jo
das
mov
mov
ret
das
retf
psrlq
xchg
cmp
pushf
jecxz
or
clc
push
push
add
push
ss
daa
es
pop
cs
ss
fstp
lock
cmps
aam
leave
daa
jns
jno
outs
pmuludq
cmp
mul
nop
and
popa
lahf
daa
sahf
out
cwde
pushw
add
jbe
mov
xchg
mov
xchg
iret
repz
or
mov
cmp
mov
inc
js
ret
fbstp
mov
xor
or
inc
mov
or
xor
cmp
push
stc
daa
iret
cmp
push
push
push
pop
push
es
repnz
cs
imul
pushf
mov
jno
pop
push
adc
cmp
in
xchg
cdq
mov
xchg
out
mov
or
cmp
ror
fst
adc
adc
out
jle
stc
stc
aas
add
or
adc
repz
pop
and
sub
cmp
cmp
sbb
pop
cli
aaa
jns
out
push
add
add
jns
out
add
add
in
xchg
(bad)
pop
or
mov
dec
dec
dec
mov
xor
fstp
fisttp
cs
pop
and
dec
pop
sti
paddsw
jns
pop
push
or
daa
bswap
repz
das
getsec
adc
jns
leave
leave
inc
dec
push
outs
adc
xchg
cmp
cmp
sti
mov
in
xchg
or
sti
fisttp
add
mov
xchg
xchg
pop
(bad)
ret
xchg
xchg
xchg
rcr
loop
leave
enter
cli
add
or
leave
adc
adc
shl
rdmsr
cmp
(bad)
adc
addr16
cld
push
enter
jp
xchg
cld
jle
xchg
(bad)
cld
mov
sahf
aaa
push
add
test
mov
bswap
mov
pusha
movlps
mov
add
(bad)
xchg
or
cs
std
iret
leave
rep
cmovbe
pop
dec
push
or
icebp
pushf
cmp
or
jns
mov
std
movd
xchg
loopne
out
in
xchg
push
adc
ja
cmp
std
leave
sahf
out
dec
rol
fld
loope
mov
icebp
psubw
iret
repz
jle
add
or
or
or
or
and
push
jns
out
xor
cmp
inc
ss
cmp
ins
(bad)
je
adc
(bad)
cmps
add
inc
add
retf
retf
retf
retf
lahf
(bad)
cmps
(bad)
mov
sar
retf
retf
retf
into
(bad)
fdivr
jmp
retf
push
call
and
xor
retf
retf
retf
retf
dec
jmp
retf
retf
retf
retf
jbe
test
xchg
jmp
retf
scas
(bad)
mov
call
retf
retf
call
add
push
sbb
out
and
sbb
out
dec
pop
pop
and
and
and
out
nop
and
and
out
mov
out
sahf
(bad)
sub
sub
sub
or
cmp
repz
xor
iret
inc
xor
pop
xor
repz
xor
xor
repz
aaa
mov
iret
mov
mov
iret
repz
cmp
cmp
lock
add
dec
sub
dec
add
pop
addr16
jbe
push
add
cmp
xchg
mov
fucomi
in
push
add
cmp
ret
pop
retf
sar
fild
dec
pop
ds
push
add
movhps
xor
into
push
jg
jg
or
leave
xchg
add
inc
ds
mov
pcmpeqb
jl
test
mov
inc
jne
pop
pop
(bad)
ja
paddusw
jns
mov
push
add
(bad)
mov
out
jnp
add
adc
pop
out
out
mov
punpcklwd
or
fmulp
repz
or
xor
out
inc
adc
push
and
(bad)
(bad)
adc
jns
mov
dec
add
leave
ins
jns
add
add
psadbw
fs
inc
add
in
push
es
lock
ds
dec
add
and
push
add
add
jae
push
test
ror
fsub
pop
add
sbb
push
adc
mov
pop
push
fcmovne
xchg
and
push
daa
push
das
setae
inc
dec
popf
xchg
xchg
xchg
push
pop
outs
jae
jb
fist
pusha
mov
xchg
addr16
int
fsub
mov
scas
adc
pop
xor
repz
fmul
push
pop
pop
push
into
repz
cmp
or
in
and
(bad)
ins
inc
les
int3
push
add
add
mov
xchg
xchg
in
cmc
std
outs
add
jb
inc
test
outs
jecxz
hlt
inc
inc
icebp
inc
adc
push
sbb
inc
cmp
jecxz
inc
aas
adc
inc
add
sub
fadd
pop
es
sbb
iret
leave
repz
and
mov
cmp
lods
out
or
outs
and
or
(bad)
inc
cmp
repz
dec
add
out
fwait
sidtd
pusha
mov
push
mov
push
or
imul
jbe
dec
adc
repz
adc
adc
dec
fmulp
test
lea
dec
xchg
or
jns
outs
lods
sbb
fsub
iret
mov
mov
retf
mov
pop
xlat
lahf
mov
mov
les
lea
sub
add
je
xor
add
cmp
adc
imul
gs
daa
daa
daa
ins
jne
jge
daa
daa
daa
jge
lea
daa
pop
leave
mov
dec
outs
bswap
rcr
loopne
repnz
(bad)
or
sahf
aaa
jb
or
adc
sbb
add
jns
out
add
add
add
bound
push
jp
aad
cmc
pop
cmps
pop
inc
inc
(bad)
das
fwait
push
les
ja
lods
inc
test
xchg
mov
(bad)
inc
sbb
sbb
in
movs
mov
in
in
enter
pop
pushf
pushf
pushf
cmp
call
inc
sahf
add
or
push
push
xchg
xchg
fcmovne
sbb
movaps
rcl
push
or
das
ja
pop
sbb
lods
cmp
xchg
das
mov
in
setb
or
ror
sbb
jb
or
or
or
or
and
or
psubb
or
daa
daa
and
adc
and
push
cmp
sub
dec
jb
(bad)
inc
aas
dec
sqrtps
pop
cmp
iret
jae
adc
adc
dec
jb
enter
mov
iret
in
ss
(bad)
xchg
or
and
pop
stc
add
dec
dec
outs
nop
sub
or
pop
push
dec
push
push
out
cmp
subps
pcmpeqb
mov
add
ds
jg
cmp
sahf
or
dec
xor
outs
inc
repnz
or
or
out
jns
inc
and
and
xor
test
fist
cmp
or
xchg
and
push
pop
cmp
push
lahf
aam
or
jns
out
out
or
or
aaa
clts
pop
adc
or
pushf
mov
push
adc
sbb
fcmovne
jae
push
push
and
mov
inc
sbb
repnz
push
sbb
daa
iret
pop
ins
jne
jge
repnz
add
pop
push
mov
or
daa
dec
sahf
outs
das
cwde
sub
imul
lods
aas
push
mov
pop
jb
push
xor
in
ins
das
aaa
pop
cmp
fadd
dec
cmp
xchg
pop
mov
cmp
in
mov
fsubrp
jecxz
xchg
out
icebp
cld
push
jg
xchg
fwait
loopne
mov
in
scas
inc
xor
dec
les
and
and
and
dec
(bad)
ins
ffree
ja
push
push
ss
ret
das
sub
ja
(bad)
pop
repz
fisttp
add
inc
or
leave
leave
leave
dec
push
pop
fist
inc
scas
inc
call
dec
xchg
dec
nop
dec
shl
addr16
dec
lock
pop
mov
xchg
mov
ud0
or
adc
iret
pop
sub
jae
sbb
push
ss
ror
fidivr
jns
lds
iret
scas
or
inc
pop
loopne
icebp
jbe
xorps
out
dec
xchg
frstor
(bad)
dec
rcl
add
nop
lahf
outs
pop
fsub
outs
movs
pop
movs
pop
sbb
or
sahf
out
outs
das
lds
int
or
or
in
xchg
mov
and
dec
or
adc
in
pop
sub
and
sub
out
sahf
(bad)
aas
cmp
inc
pop
jb
jns
dec
or
punpcklwd
or
jno
aam
leave
xor
sbb
push
pop
int3
dec
or
enter
push
fmul
pop
dec
enter
outs
mov
outs
pop
mov
addr16
add
adc
inc
sub
xchg
xadd
cwde
push
dec
fs
cdq
push
leave
push
dec
push
push
pop
fcom
push
dec
cmps
dec
das
loope
fcom
(bad)
(bad)
cld
in
inc
pop
leave
xor
out
fsubr
jae
add
push
movs
outs
push
rcl
pop
adc
ret
inc
inc
aas
es
leave
adc
adc
shl
(bad)
das
xor
inc
mov
or
add
out
xchg
adc
add
add
jns
out
add
jns
sahf
out
or
or
out
pop
popa
or
jno
mov
push
xchg
jbe
pop
jb
adc
jnp
cmp
pop
jb
adc
pushf
cmp
jb
adc
pushf
pushf
pushf
pushf
cmps
scas
mov
pushf
pushf
pushf
pushf
(bad)
rcr
loopne
leave
leave
repz
lock
in
fs
adc
adc
jo
in
and
xor
scas
cmp
mov
adc
push
adc
sbb
lds
adc
and
je
jl
test
leave
ins
in
mov
xchg
adc
leave
lods
mov
(bad)
into
leave
leave
leave
int3
aam
in
mov
fild
out
inc
inc
inc
inc
adc
adc
xlat
xchg
out
push
add
loop
and
fdivr
pop
inc
dec
pop
out
and
je
inc
div
mov
cdq
or
scas
ja
punpckldq
xchg
xchg
lods
adc
inc
jbe
ja
adc
adc
and
std
(bad)
lahf
xor
push
fbld
leave
add
nop
adc
and
je
mov
pusha
push
lea
jb
adc
pop
pusha
cmp
mov
pop
push
push
enter
push
inc
push
inc
imul
pop
sar
addr16
xlat
mov
cwde
push
xchg
fwait
adc
enter
adc
and
sbb
adc
cld
aas
mov
push
xchg
push
cmp
repz
or
or
repz
push
divps
iret
repz
ins
adc
mov
cmp
repz
adc
adc
repz
rcl
sbb
jmp
mov
and
xor
mov
pop
dec
pop
pop
pop
push
mov
xchg
pop
mov
mov
retf
pop
push
mov
hlt
pop
add
dec
adc
jns
out
das
push
xor
sahf
out
sahf
cmp
dec
xor
jns
out
fs
jns
out
mov
pushf
cmp
cmp
sahf
out
aam
loop
lock
aas
inc
sbb
repz
sbb
inc
ss
cmp
repz
inc
push
inc
pusha
repz
repz
outs
dec
jl
iret
repz
mov
dec
cmps
dec
cmp
repz
dec
ret
repz
repz
fist
push
out
ds
sti
push
or
push
pop
sahf
out
sahf
push
and
jns
out
push
dec
pop
pop
pop
out
sahf
out
pop
jns
xchg
xchg
pop
mov
out
pop
mov
jp
out
(bad)
jmp
iret
mov
das
out
shld
jmp
inc
inc
mov
push
sbb
inc
call
enter
push
sbb
push
sbb
sbb
jb
sub
xor
cmp
inc
sbb
sbb
bound
in
jmp
pop
or
in
sahf
out
push
(bad)
seta
cmc
in
cmps
sbb
mov
mov
and
sbb
pmullw
pop
sahf
fucomi
in
call
sbb
out
lea
or
sbb
in
outs
movntps
ss
das
xchg
out
fimul
and
pop
out
repnz
jg
mov
xchg
sub
push
dec
mov
pop
ret
sbb
mov
fcomp
sbb
sbb
sbb
fst
sbb
fsubrp
in
push
aaa
and
(bad)
cmp
cmp
push
push
cmp
adc
data16
mov
daa
daa
xchg
lahf
stos
inc
jns
ja
mov
push
inc
int
ror
out
dec
jecxz
inc
sbb
push
inc
pop
out
sbb
inc
mov
push
or
dec
dec
fmulp
jae
dec
push
adc
push
ds
push
sub
ds
cmp
jae
cmp
pop
dec
pop
cmp
iret
repz
pop
pop
fs
repnz
rep
pop
ja
jg
dec
sahf
ja
push
bound
sahf
out
lods
data16
out
sahf
addr16
jb
ror
addr16
jae
jb
ds
jno
out
cmp
in
jae
je
xchg
out
cmc
jne
(bad)
cmps
stc
pushf
pushf
jno
or
jp
out
jns
adc
jl
es
repz
jg
repz
jae
add
push
test
jle
mov
push
mov
daa
mov
(bad)
int3
paddq
in
jns
outs
aas
in
hlt
nop
cld
sbb
xor
xchg
add
xchg
or
adc
iret
jmp
iret
xchg
sbb
xchg
ds
iret
leave
repz
cwde
xor
call
dec
pushf
push
cmp
repz
pop
sahf
fs
ins
jns
leave
repz
test
xchg
out
mov
out
movs
lods
lfs
int3
lods
mov
sahf
out
push
scas
out
out
mov
iret
cmp
push
mov
pop
and
(bad)
iret
repz
sbb
out
in
xor
push
ds
mov
dec
push
ds
xchg
out
outs
jbe
(bad)
jns
out
test
rol
jns
xchg
out
clc
push
and
lds
repnz
out
(bad)
push
sub
enter
iret
jae
retf
push
rep
daa
iret
int3
pop
popa
punpckhwd
iret
popf
cmp
leave
jno
rol
mov
mov
mov
ret
fcom
jae
es
(bad)
(bad)
pop
fmul
repz
loop
in
fdivrp
sar
paddusb
add
loop
cmp
or
push
push
push
loope
jns
out
push
out
call
xor
out
aas
in
in
dec
pop
push
pusha
imul
mov
xchg
sahf
out
dec
xchg
cmc
lahf
test
iret
repz
loope
clc
in
stc
mul
rcr
or
repz
cmp
add
leave
repz
xor
dec
add
out
iret
gs
push
add
iret
jnp
dec
pop
xchg
pushf
pop
jnp
repz
mov
or
out
icebp
jbe
pavgb
call
cmp
repz
sti
adc
(bad)
dec
or
cmp
sar
pop
mov
iret
in
enter
shr
sub
fsubrp
jns
add
pop
das
imul
jnp
setb
and
jns
fsub
(bad)
es
out
cmp
daa
push
sub
jns
out
sub
daa
sub
jns
out
sub
pop
dec
pushf
cmp
in
push
pop
pop
xor
rcr
repz
setne
outs
in
sahf
aaa
mov
mov
popf
cmp
mov
das
fcomp
out
cli
aas
leave
rcr
daa
inc
sbb
jns
(bad)
das
xor
setle
dec
pop
bound
out
jns
ins
dec
js
cmp
cmp
mov
dec
repz
repz
sahf
idiv
push
ret
mov
out
dec
fnstsw
pop
cmp
sub
adc
out
dec
repz
add
pop
cs
pop
mov
subps
bound
iret
jnp
push
arpl
gs
sahf
out
pop
addr16
xchg
fcmovne
repz
lea
cwde
or
xchg
xchg
mov
and
gs
inc
mov
pop
ss
gs
pop
gs
frstpm(287
cmp
setno
mov
sbb
out
int3
mov
sahf
adc
mov
aam
in
cmp
ja
dec
add
push
pop
movntq
out
in
fs
ins
je
sahf
out
sahf
or
in
dec
wbinvd
pop
add
jo
jns
pushf
adc
pop
leave
jae
adc
mov
and
in
push
xchg
xchg
int
cli
push
cs
addr16
and
fsub
(bad)
repnz
inc
sbb
sbb
pushf
cmp
jae
add
loope
and
sub
add
xor
add
xchg
dec
fsubp
dec
sub
add
mov
pop
push
sub
sub
sahf
ja
mov
cmp
jbe
pop
test
mov
mov
mov
lar
ficomp
push
aad
fidiv
ss
sbb
pop
imul
out
test
jmp
pop
sub
femms
add
lock
cmp
and
dec
cs
lar
fwait
cmp
repz
sub
dec
(bad)
jmpw
add
test
iret
mov
jae
add
ja
daa
xchg
pop
pushf
dec
mov
(bad)
bswap
xlat
mov
xor
xchg
xchg
mov
repnz
lar
out
sahf
xchg
push
and
repz
xor
pop
cmp
inc
or
repnz
or
adc
sub
int3
aaa
iret
rep
pop
jge
test
add
cmp
add
cmp
sub
push
mov
cmp
jmp
add
ins
sub
nop
das
(bad)
fs
stos
cmp
fsubr
push
and
xchg
dec
push
test
mov
mov
leave
in
in
lods
lahf
clc
sub
cmp
std
sub
sub
xchg
test
add
rol
pop
fwait
add
sub
inc
test
inc
outs
inc
repnz
imul
pop
dec
cmp
outs
add
push
push
pop
fadd
xor
cmp
inc
pop
dec
out
in
sub
add
push
or
repnz
mov
sub
pop
mov
pushf
cmp
in
mov
enter
repz
adc
movd
call
repnz
add
nop
or
in
jbe
movaps
cmp
dec
push
and
dec
sahf
out
and
repz
repz
jns
sub
mov
xchg
sub
sub
mov
daa
iret
mov
push
xor
shl
or
add
loope
in
in
jmp
add
sahf
frstpm(287
in
das
adc
sbb
and
xchg
out
jns
xor
daa
iret
repz
inc
push
pop
fcmovne
rep
punpcklwd
inc
imul
jns
sbb
das
cmps
lods
cmp
in
dec
pop
push
lods
lfs
dec
outs
mov
dec
mov
aam
dec
dec
dec
fsub
in
hlt
daa
and
cld
add
or
daa
iret
repz
sbb
and
sbb
test
pop
daa
inc
cmp
sbb
outs
bound
outs
shr
jmp
bound
iret
push
and
jp
xor
mov
xor
xor
cmp
mov
or
or
retf
daa
daa
daa
daa
loop
repnz
xchg
xchg
xchg
daa
add
or
xchg
xchg
xchg
xchg
sbb
sub
xchg
xchg
xchg
xchg
cmp
push
les
push
xor
cmps
ins
add
bswap
jg
daa
mov
ins
xchg
jg
iret
repz
scas
sub
mov
aas
lahf
(bad)
xor
jne
dec
sahf
out
or
(bad)
xor
daa
daa
daa
daa
xlat
(bad)
out
xchg
pop
and
xor
jns
xchg
xchg
xor
xor
xor
push
or
cmp
in
das
push
inc
aaa
aas
cmp
cmp
pop
inc
popa
cmp
outs
xor
repnz
ja
in
jbe
cpuid
stos
mov
in
in
ret
out
in
(bad)
jmp
jle
and
sub
cmp
repz
dec
pop
push
pusha
fstp
pop
(bad)
xchg
pop
push
mov
ins
push
cwde
or
test
jp
repnz
jb
pop
pop
popf
xchg
out
sub
sub
sbb
xchg
and
mul
xor
cmp
mov
xor
packuswb
jb
jecxz
xor
repz
enter
xor
xor
push
or
adc
push
add
iret
repz
inc
xor
cmp
lea
cs
cmp
iret
push
ins
pop
xchg
lahf
(bad)
ret
sbb
jbe
nop
xor
pop
repnz
cli
xchg
xchg
idiv
or
sahf
out
sahf
xor
cmp
outs
fistp
inc
js
xchg
sub
bound
retf
push
jb
jp
sbb
jmp
xor
cmp
cs
out
cmp
fwait
push
js
xor
jb
pop
xor
xor
pop
cwde
or
dec
addr16
test
outs
ss
adc
push
pop
int3
je
lea
jl
push
repnz
jne
ss
jnp
xor
mov
pop
sbb
xchg
aaa
retf
retf
retf
stos
pop
push
ss
ss
retf
retf
retf
outs
ss
jle
xchg
daa
mov
retf
mov
xchg
ss
(bad)
mov
(bad)
iret
xlat
(bad)
repz
call
fsub
sub
aas
xor
or
sub
dec
popa
jns
out
imul
jns
out
xchg
sbb
in
jbe
pop
push
pop
mov
mov
in
leave
and
jbe
dec
and
cmp
jbe
call
jbe
mov
cmp
das
xor
jl
pop
shl
and
mov
push
pop
cmp
repnz
cmp
add
jo
pop
das
ret
iret
out
inc
loop
sbb
xchg
int
adc
fdiv
sub
dec
add
cmp
ret
leave
lods
(bad)
into
outs
mov
in
aas
cmp
stc
daa
daa
and
add
or
sbb
cmp
mov
cmp
inc
cmp
js
add
enter
ja
mov
repz
shr
push
add
pushf
cmp
test
xchg
pushf
mov
mov
dec
outs
pop
(bad)
(bad)
xlat
enter
nop
nop
inc
enter
sub
add
in
jns
jns
mov
jp
outs
pop
dec
mov
cmp
jns
repz
add
jb
xchg
push
pop
jg
push
pop
sahf
mov
ret
inc
or
sbb
or
jb
cmp
jp
cmp
cmp
xchg
out
popf
mov
mov
test
retf
in
shl
enter
pushf
jnp
fs
test
repnz
jns
lahf
ja
inc
add
or
add
adc
dec
sahf
xchg
iret
mov
in
or
jbe
scas
outs
cmp
jbe
pop
cmp
push
pop
pop
(bad)
dec
sahf
push
bound
mov
jae
fsub
jb
addr16
sub
and
and
lods
jl
loope
in
stos
mov
loope
cmp
retf
lahf
js
(bad)
fidivr
loop
mov
mov
repnz
lar
push
xchg
out
jns
adc
adc
jns
outs
mov
rdmsr
pop
cmp
ror
out
push
push
lsl
out
pop
push
sbb
push
je
out
jb
sbb
and
pushf
and
cmp
jns
mov
xchg
mov
jmp
jle
adc
mov
in
and
jl
and
add
lea
xor
es
repz
dec
or
cmp
jmp
pop
repz
cmp
gs
push
test
leave
stos
mov
mov
iret
(bad)
adc
adc
mov
ficomp
out
repnz
out
sbb
(bad)
mov
pop
test
adc
fnstsw
push
aas
(bad)
retf
or
jns
push
pop
icebp
aam
mov
(bad)
jg
mov
xor
out
repz
or
mov
xchg
sub
add
sets
sahf
retf
ds
mov
push
retf
add
mov
add
into
repz
pop
(bad)
inc
sbb
inc
add
add
sbb
jmp
inc
push
pop
sbb
mov
cmc
ds
ds
repz
add
add
sahf
pushf
cmp
and
out
sub
or
jns
inc
fidivr
push
or
sahf
push
push
cvtps2pd
(bad)
in
(bad)
dec
femms
pop
or
in
add
push
ins
pushf
sar
movsx
in
aas
mov
and
pop
add
sub
cmp
aaa
jg
in
cmc
paddw
and
inc
push
es
in
repnz
ds
fisttp
out
push
push
pop
pcmpgtd
cmp
mov
jbe
jle
repz
adc
adc
iret
repz
sahf
sbb
gs
pop
mov
mov
mov
out
sahf
out
and
and
and
movs
out
and
push
inc
push
inc
cmp
pop
aaa
aas
cmp
cmp
inc
dec
push
pop
cmp
cmp
outs
ja
cmp
cmp
xchg
cmp
mov
xchg
out
fdivr
loopne
cmp
lock
cmpxchg
inc
leave
repz
adc
cmp
(bad)
movaps
dec
dec
sahf
ja
bound
push
dec
jb
fsubrp
in
dec
or
xchg
out
call
cmp
mov
push
push
sahf
out
cmp
fisubr
push
loop
pop
loope
jns
repnz
xchg
inc
daa
out
cdq
lea
or
adc
out
jbe
cmp
and
rdmsr
push
(bad)
leave
repz
cmp
inc
fs
xor
sahf
fist
pop
inc
sub
test
inc
into
ins
push
imul
lods
aaa
xor
xchg
and
mov
inc
sahf
out
mov
cmps
fisttp
add
lahf
out
pop
cmc
or
dec
outs
pop
or
cmc
pushf
pushf
pushf
sub
lea
ss
inc
dec
inc
push
scas
add
fwait
push
push
scas
nop
and
sbb
(bad)
mov
cmp
pop
inc
gs
out
ins
push
and
jne
pop
lea
jns
lods
sub
jns
lds
sub
pop
fmul
out
xor
cmc
paddw
loop
rol
(bad)
aaa
xchg
rol
xacquire
cmp
test
jb
enter
inc
mov
jae
cmp
or
test
or
inc
sub
dec
movs
or
mov
mov
fisttp
iret
repz
sbb
mov
repnz
sbb
cmp
repz
pop
pop
and
rep
daa
ins
outs
jne
and
cmp
repz
and
imul
inc
sub
mov
inc
(bad)
mov
xchg
out
push
cs
sub
cmp
pushf
add
xor
add
(bad)
jb
rcl
rol
mov
fst
repnz
inc
test
push
xchg
enter
(bad)
ds
dec
push
int
outs
inc
pop
cmp
aaa
adc
adc
and
popa
inc
inc
jae
jnp
jns
xchg
inc
sub
ds
xchg
in
in
sahf
pop
fwait
or
sahf
(bad)
retf
fbld
lahf
and
les
mov
cmp
fcomp
and
call
dec
dec
inc
dec
xchg
dec
sahf
xchg
test
add
jbe
jns
or
ucomiss
jns
sahf
out
or
fsubrp
in
js
sbb
cdq
dec
sahf
ja
mov
mov
out
mov
(bad)
sbb
push
ret
xchg
sti
adc
outs
fsub
inc
adc
adc
pop
mov
mov
dec
xchg
fcmovne
or
mov
xchg
xchg
inc
dec
push
pop
mov
(bad)
xchg
mov
dec
mov
jns
(bad)
or
hlt
in
pushf
dec
xlat
in
outs
inc
mov
dec
nop
cld
add
add
mov
lea
dec
mov
xchg
sub
sub
inc
in
dec
xor
dec
inc
push
dec
sahf
xchg
(bad)
dec
aas
pop
test
inc
jb
cmp
cld
lea
and
or
call
test
xchg
adc
ins
mov
adc
mov
dec
(bad)
nop
repnz
pop
fs
or
xor
and
xchg
adc
bound
mov
push
neg
sub
test
and
add
inc
xchg
lods
lldt
sbb
push
add
(bad)
std
stc
adc
cs
inc
push
push
dec
inc
inc
jns
cmps
rcr
js
ja
jbe
out
sahf
out
jae
jno
sahf
out
sahf
outs
outs
ins
ins
imul
out
imul
add
push
add
repz
rcr
sub
ins
fcomip
cmp
adc
outs
repz
cmp
cmp
ins
test
pop
and
test
jp
in
dec
add
dec
jbe
dec
ins
dec
inc
push
dec
je
aaa
sbb
loopne
pop
inc
inc
pop
pop
data16
mov
clc
pop
or
fidivr
ror
shl
(bad)
lock
and
sbb
and
adc
inc
jbe
lds
shr
inc
ror
mov
ficom
push
aaa
(bad)
sbb
inc
dec
inc
enter
push
dec
icebp
scas
dec
imul
into
and
test
sbb
rcr
je
adc
inc
in
pusha
mov
xlat
and
ret
lds
mov
rcl
add
pop
push
jno
addr16
inc
and
aaa
mov
adc
call
inc
mov
jno
aaa
mov
dec
mov
ja
mov
ret
bound
nop
pop
gs
lods
sub
daa
stos
push
add
inc
cs
aas
aas
aas
dec
add
inc
adc
and
adc
cmp
add
sub
mov
push
and
jmp
sub
mov
push
out
or
ja
iret
jmp
add
aas
push
or
ds
shl
pop
pusha
or
out
adc
xlat
out
push
dec
inc
shl
pushf
inc
arpl
or
sar
xchg
les
dec
add
cs
sbb
xor
mov
dec
jae
push
adc
rol
fwait
retf
push
inc
xchg
push
add
inc
fadd
push
mov
fidivr
ins
xchg
addr16
lahf
push
mov
sbb
xchg
cmp
ret
arpl
sbb
xchg
add
aam
aad
pop
leave
push
and
inc
inc
add
jae
pop
es
sbb
jne
test
inc
xchg
pop
lahf
(bad)
fisubr
pop
aas
lahf
adc
aas
mov
outs
and
ins
(bad)
fld
jno
lods
push
dec
inc
je
mov
mov
out
outs
imul
mov
pop
add
ss
inc
mov
ret
lds
mov
ins
pop
aaa
pusha
test
mov
push
je
pop
mov
push
inc
pop
sub
or
daa
dec
outs
jge
jns
pop
inc
in
add
fimul
aas
test
mov
push
test
xchg
adc
adc
xlat
jmp
xor
fld
je
mov
sub
pusha
adc
sub
jbe
inc
retf
jmp
xor
push
push
push
push
repnz
inc
mov
adc
popa
xchg
xchg
mov
pop
cmps
iret
mov
outs
dec
push
dec
push
add
iret
repz
ins
or
cwde
mov
fdiv
add
leave
adc
xchg
mov
xor
dec
jmp
mov
fild
repz
inc
sub
lahf
cmps
xor
pop
xor
dec
ins
rcl
dec
mov
inc
aam
shl
daa
mov
cmp
cmp
mov
pop
add
push
mov
stos
push
or
push
aaa
pop
daa
add
push
push
pop
xor
aas
pusha
and
(bad)
cmps
das
rol
adc
bound
pop
inc
push
pop
and
adc
pop
aaa
punpckhwd
daa
mov
cmps
lock
fs
das
mov
fist
adc
mov
cmp
arpl
rcl
bsr
sub
loop
or
stos
or
cmp
ss
inc
daa
cmp
pop
clc
push
inc
and
js
outs
add
pop
lods
(bad)
(bad)
push
loope
les
cdq
xchg
js
ret
loop
xchg
arpl
ja
mov
and
pop
push
sbb
xor
fdivr
and
es
inc
push
inc
in
cmovne
ins
sti
and
inc
inc
inc
pop
iret
lods
in
inc
test
mov
pusha
sub
dec
sub
mov
inc
or
aaa
inc
inc
mov
out
dec
add
inc
aas
mov
adc
pop
sbb
push
add
push
xor
pop
pop
popa
popf
pop
mov
inc
push
imul
xor
retf
mov
mov
dec
dec
or
inc
loopne
arpl
pusha
frstor
inc
test
aam
or
add
ret
jbe
dec
add
mov
jge
xchg
daa
add
push
aad
aam
lahf
cmp
pusha
mov
pop
cmp
fucomp
shl
iret
inc
fnstsw
inc
push
dec
ins
js
inc
outs
bound
retf
xor
aas
and
push
dec
dec
inc
inc
fcmovnu
bound
out
inc
xor
jb
(bad)
or
or
mov
test
adc
mov
movs
mov
cmc
pop
dec
out
adc
sub
mov
add
cmp
dec
pop
rcr
adc
ins
jo
cmp
repz
push
push
cmp
repz
push
dec
inc
xor
repz
sub
adc
or
sahf
out
cmp
add
stos
clc
hlt
jns
out
lock
call
lahf
out
enter
mov
cmp
test
xchg
mov
repz
inc
dec
add
pop
push
push
or
inc
cmp
cmpxchg
mov
nop
adc
sbb
mov
add
jns
out
add
cmp
pop
or
or
aaa
fld
or
cmps
mov
daa
cmps
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outs
das
ins
push
and
fild
pop
and
iret
add
add
cmp
mov
fsubr
cmp
sbb
or
or
cwde
(bad)
cwde
adc
jge
mov
push
in
(bad)
pop
lock
loopne
add
inc
enter
and
and
inc
add
inc
or
xchg
add
adc
in
leave
mov
mov
add
movs
add
pusha
cmp
cmps
fisttp
pop
scas
jl
mov
cld
inc
jle
test
push
push
cld
pop
shl
cmovo
mov
inc
mov
out
adc
dec
mov
in
call
adc
mov
push
add
mov
xor
fcomp
and
and
loopne
jb
jle
mov
sbb
mov
rcr
pop
dec
jnp
or
push
sbb
inc
lock
scas
js
dec
ror
test
push
xlat
outs
xor
mov
aam
inc
mov
aas
pop
inc
add
aas
add
aad
ja
xor
push
aad
icebp
daa
push
retf
rol
jg
mov
ret
push
add
or
fdiv
in
mov
sahf
out
adc
sahf
out
sbb
or
repz
sbb
mov
pushf
sbb
das
stos
add
mov
mov
scas
sahf
out
cs
and
movs
stc
sahf
jnp
(bad)
push
jns
cld
lods
jp
dec
repz
into
(bad)
fsub
jns
pusha
(bad)
mov
push
pop
js
out
sahf
xchg
mov
repz
xor
dec
sti
cmp
ins
add
push
pop
in
jns
ja
mov
out
bnd
out
dec
das
push
dec
ins
jl
or
sbb
cs
(bad)
nop
mov
xchg
xchg
mov
scas
pop
or
adc
fistp
les
and
test
fisubr
mov
and
aaa
add
push
inc
out
das
inc
dec
pop
push
sbb
dec
smsw
push
push
xor
add
cmps
add
push
loope
fdivp
xchg
cs
mov
mov
sbb
add
mov
push
enter
cld
push
pop
(bad)
or
add
test
push
cmp
add
enter
enter
inc
pushf
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
(bad)
(bad)
inc
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
sti
(bad)
(bad)
inc
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
(bad)
jg
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
(bad)
(bad)
(bad)
(bad)
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
(bad)
(bad)
(bad)
call
repz
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
inc
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
(bad)
add
fwait
xchg
and
and
(bad)
(bad)
addr16
aas
jno
or
mov
pop
fs
dec
lea
(bad)
(bad)
(bad)
(bad)
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
(bad)
(bad)
(bad)
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
(bad)
(bad)
(bad)
(bad)
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
test
movs
jmp
jg
sub
jge
mov
inc
rcr
push
ds
(bad)
(bad)
(bad)
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
movs
sbb
add
(bad)
(bad)
(bad)
(bad)
inc
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
(bad)
jmp
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
(bad)
(bad)
(bad)
(bad)
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
push
push
clc
fistp
lahf
into
ror
add
cmps
fmul
data16
loopne
inc
pop
add
inc
xor
add
jns
fwait
pop
add
xchg
mov
int
cmps
adc
pop
add
and
jmp
outs
dec
addr16
sub
push
in
or
inc
mov
ja
xchg
pop
adc
sub
movs
and
xchg
outs
or
aaa
aam
dec
xor
ins
dec
push
xchg
ja
js
test
subps
inc
call
add
pop
and
cmc
popa
bound
inc
ror
inc
xchg
or
or
mov
add
lock
push
mov
popf
cmps
and
jb
and
cmp
push
aaa
sub
nop
pop
pop
xchg
inc
sub
idiv
push
and
scas
inc
or
and
mov
or
lahf
xor
mov
cmps
sub
add
bound
popa
je
ror
cmp
les
add
scas
das
div
adc
or
and
sub
mov
or
push
lods
scas
pop
pushf
pusha
stos
(bad)
aaa
inc
jo
add
(bad)
(bad)
outs
aas
push
js
ret
aad
adc
pusha
sbb
sub
(bad)
jno
ret
out
pop
imul
or
pop
mov
fld
aaa
(bad)
pop
cdq
addr16
push
sbb
aaa
dec
pusha
jno
mov
fldenv
cld
aaa
and
ret
sub
mov
ficom
mov
lahf
inc
imul
fiadd
sub
mov
jns
and
ficomp
push
aaa
xchg
and
or
daa
push
sbb
lahf
pop
sbb
inc
daa
popa
gs
add
in
pop
test
xor
nop
fisub
mov
ja
es
cmp
sbb
fild
clc
(bad)
push
ja
dec
das
push
push
adc
cmps
nop
sub
outs
push
inc
lods
xchg
xchg
pop
and
pop
adc
adc
ficomp
add
in
push
xchg
inc
stos
(bad)
aas
and
xor
push
push
mov
sub
stos
inc
inc
inc
xchg
sub
test
xor
add
out
inc
add
and
lahf
outs
cmp
call
cld
pop
pop
dec
(bad)
ds
repz
pop
aaa
ja
sti
cmp
rep
push
fcmovnu
fadd
add
inc
mov
add
add
add
jg
rcr
jns
add
dec
xor
iret
jmp
pop
push
aas
(bad)
stc
and
pop
shl
jns
out
xor
loopne
in
xor
adc
sbb
ror
retf
iret
sbb
inc
mov
cmp
pop
cmp
pop
jle
dec
rol
dec
push
(bad)
rcr
data16
add
data16
xchg
lock
add
cs
ins
rol
dec
clc
sar
ret
push
mov
xchg
pop
call
test
push
leave
dec
test
out
jnp
push
and
sub
fnstenv
mov
lahf
out
push
clc
jg
js
xchg
push
push
cs
popf
add
pop
and
mov
cmp
sub
jle
add
out
add
in
pop
mov
push
or
add
jnp
add
add
adc
and
xor
jg
aas
pop
cld
xor
add
add
aam
ins
loopne
mov
xchg
addr16
inc
imul
xlat
rol
aaa
inc
push
add
cs
addr16
cmps
adc
pop
loopne
loopne
pop
daa
aaa
inc
cs
loopne
addr16
dec
pop
enter
push
or
push
iret
leave
xor
add
add
or
pop
mov
imul
daa
ss
push
xlat
mov
cld
pop
addr16
imul
out
pushf
or
add
pop
pop
aad
fidivr
xlat
xchg
inc
les
adc
out
push
inc
push
adc
and
daa
adc
addr16
and
add
iret
pop
inc
push
loopne
jae
popa
add
outs
fild
daa
loopne
clc
test
push
cmc
(bad)
aaa
or
adc
fnstcw
push
and
inc
adc
push
inc
sahf
out
jp
test
add
add
stos
sbb
cmps
aaa
jnp
fist
and
rcr
and
push
(bad)
cld
clc
lock
mov
repz
add
imul
fistp
inc
and
push
and
and
sahf
out
adc
addr16
inc
imul
ret
rol
iret
rep
shl
aas
pop
psubw
(bad)
lock
addr16
or
cmp
ds
cmp
mov
jge
out
dec
pop
sbb
or
and
pavgb
jbe
jl
lock
iret
fidiv
jp
out
dec
push
test
das
iret
adc
or
pop
clc
push
add
cmps
push
adc
sub
xor
xor
inc
dec
dec
test
dec
leave
mov
in
xor
add
repz
nop
jg
xor
add
mov
xlat
(bad)
mov
push
ja
xor
mul
call
add
inc
add
mov
or
dec
pushf
jae
stc
adc
adc
or
daa
aaa
inc
dec
aad
out
push
addr16
iret
repz
(bad)
icebp
(bad)
(bad)
(bad)
jg
aas
clc
push
jo
lock
push
dec
pavgb
adc
pop
daa
aaa
inc
lods
sbb
cmp
jbe
push
and
mov
push
data16
xchg
add
pop
mov
addr16
xchg
dec
mov
int
xor
dec
inc
add
outs
ss
add
inc
inc
inc
and
pop
pop
xchg
cmp
aaa
inc
push
data16
xor
aas
cld
out
data16
aas
cld
ds
cmp
sbb
pop
cmp
pushf
jae
daa
aaa
inc
push
or
adc
push
sbb
imul
push
jo
pop
pop
push
mov
add
xchg
adc
ja
test
push
daa
sub
jbe
mov
es
pop
pop
daa
inc
add
dec
lea
push
add
sub
or
data16
push
adc
add
add
add
ins
ss
dec
add
imul
add
int
mov
mov
xchg
add
(bad)
into
add
add
idiv
movs
lods
add
inc
push
push
pop
jbe
pushf
mov
mov
and
sub
dec
jae
arpl
push
push
pop
fnsave
fwait
arpl
out
push
out
ds
push
test
sub
push
sbb
mov
xchg
pushf
push
mov
xor
ds
and
xchg
or
push
pop
ins
out
fst
push
into
and
jle
inc
out
xor
fidivr
dec
test
mov
int
ins
arpl
sbb
pop
cmp
inc
test
pop
xor
pop
jae
cmp
scas
pop
(bad)
fisub
fistp
push
push
imul
arpl
dec
sar
(bad)
ss
inc
div
into
mov
imul
movs
(bad)
mov
pushf
push
xor
jnp
pop
cmps
pushf
out
arpl
(bad)
out
ins
jnp
jle
into
(bad)
jnp
inc
adc
add
imul
mov
imul
sub
call
imul
test
iret
pop
mov
sub
pop
xchg
imul
push
out
sbb
inc
jnp
jae
(bad)
push
push
arpl
xor
ins
dec
push
push
fimul
xchg
pop
imul
push
inc
arpl
xor
test
mov
loopne
jnp
fidivr
es
dec
and
push
div
lods
xor
pop
push
jle
dec
cmp
push
cmp
mov
loop
jbe
mov
arpl
sub
dec
lods
in
icebp
xor
and
not
adc
mov
(bad)
mov
setp
inc
(bad)
out
push
mov
mov
push
mov
mov
mov
cmps
(bad)
fimul
mov
mov
mov
inc
test
add
mov
data16
xor
xchg
out
cmps
inc
fisubr
imul
push
xchg
jnp
or
fwait
or
test
inc
test
repz
lods
xchg
imul
ficom
or
in
cs
push
pop
sub
test
scas
cmp
add
mov
mov
(bad)
fdivp
into
movs
scas
mov
out
movs
sbb
fiadd
pop
addr16
pusha
xchg
xchg
into
and
mov
jnp
je
fucomp
fisttp
and
push
lods
push
adc
arpl
test
add
or
movs
inc
outs
fcmovnbe
jo
ds
jae
adc
add
cmp
arpl
ss
mov
outs
imul
cmps
imul
xor
cmp
push
pop
sbb
dec
add
ficomp
jle
push
mov
dec
ror
cmp
mov
test
and
add
int3
jp
pop
pop
cmps
nop
aas
lds
repnz
repnz
mov
stc
add
inc
stc
push
int3
sbb
push
aas
hlt
hlt
out
out
hlt
hlt
mov
and
adc
cmp
add
add
mov
loopne
fcomp
loope
fnsave
inc
daa
cmp
push
add
inc
inc
add
and
pop
adc
hlt
out
jmp
in
in
out
xor
daa
daa
das
das
push
xor
add
add
stc
sub
in
rcr
shl
repnz
das
cmp
inc
adc
push
push
cmovb
stos
pusha
std
fdivr
add
add
out
jmp
inc
mov
jmp
add
add
(bad)
or
add
cmovae
cld
(bad)
(bad)
add
repz
pusha
std
sti
add
std
cmp
xor
int
repnz
add
fsubp
mov
xchg
cmp
lock
es
mov
pop
outs
clc
ins
adc
loop
test
mov
add
lock
enter
inc
cld
push
cmp
cmp
inc
dec
push
xor
xor
test
or
push
loop
inc
test
inc
aas
xor
jle
out
clc
into
xchg
jg
and
cmp
and
xchg
jge
pop
jo
push
je
push
xchg
inc
dec
add
xlat
rcr
(bad)
mov
(bad)
mov
and
clc
add
sbb
std
rcr
jl
jno
jge
inc
mov
test
dec
dec
outs
bound
push
add
ficom
adc
jmp
out
jg
lahf
add
in
das
xor
das
sbb
inc
enter
add
sbb
dec
pop
ins
jo
outs
jo
call
(bad)
fcmovnbe
pushf
sbb
(bad)
add
inc
pop
add
inc
cmp
cmp
push
and
cmp
add
xor
add
cmps
cwde
or
cld
inc
dec
dec
(bad)
in
lock
dec
dec
push
(bad)
pop
inc
ret
imul
retf
add
les
xor
pop
push
ror
fwait
pop
es
add
popa
js
and
xchg
fwait
or
dec
imul
pop
jbe
outs
cld
lock
and
ret
add
xchg
repnz
shl
and
mov
xor
in
ret
mov
add
cld
mov
pop
adc
dec
dec
xor
add
push
bnd
cmp
fild
mov
add
loope
inc
shl
aaa
and
xor
cmp
test
add
aas
rcl
jmp
push
pop
imul
out
scas
in
outs
outs
mov
mov
mov
xchg
aas
xchg
lock
sbb
clc
sbb
or
push
ss
ss
loop
push
add
dec
call
pop
dec
dec
add
dec
outs
inc
inc
inc
add
(bad)
retf
cmp
sbb
das
cmp
pop
push
add
div
mov
jno
push
pusha
in
add
(bad)
(bad)
pop
loopne
into
ret
(bad)
(bad)
mov
mov
inc
call
xor
xor
push
pop
push
js
jge
pop
pop
dec
inc
inc
fstp
clc
loope
jg
add
inc
sti
sbb
sti
sbb
jg
fwait
out
add
nop
mov
push
push
push
fcom
inc
push
(bad)
outs
outs
jbe
mov
inc
xor
(bad)
in
mov
sti
cld
cli
cli
inc
cmp
clc
clc
clc
sbb
push
test
int
or
mov
dec
cmp
popa
lock
dec
dec
dec
inc
inc
int
ret
(bad)
(bad)
(bad)
in
jg
adc
clc
sti
add
xor
(bad)
jg
jg
adc
jo
dec
push
jno
dec
mov
jo
fmul
scas
loopne
imul
mov
clc
not
rcr
sbb
cmp
pop
or
outs
jno
js
aad
push
sbb
dec
dec
dec
(bad)
(bad)
adc
add
scas
ret
fsub
out
aas
adc
or
jnp
sbb
and
xor
inc
add
pusha
addr16
add
dec
stc
call
ret
mov
retf
retf
rcr
fcom
call
or
test
pop
and
adc
pop
push
mov
push
outs
or
push
dec
jno
add
int
ret
test
(bad)
in
retf
into
rcr
fsub
push
aad
dec
add
sub
inc
push
lock
add
and
and
or
add
je
div
sbb
cmps
add
mov
fnstcw
dec
cs
add
inc
adc
inc
and
dec
and
jno
dec
jle
dec
stc
inc
mov
scas
retf
fnstcw
out
retf
sub
add
or
mov
jg
data16
inc
pop
jo
push
addr16
pop
pop
inc
enter
fidivr
jecxz
in
pop
inc
sti
clc
sti
sbb
sub
pop
push
jno
dec
jmp
dec
inc
sti
add
fidiv
jmp
std
add
mov
add
pop
nop
out
adc
aas
loopne
add
mul
dec
push
mov
push
mul
inc
dec
repz
jo
dec
imul
call
(bad)
nop
neg
and
sbb
and
pop
pop
pusha
add
ss
push
rol
add
mov
add
rol
inc
mov
or
into
add
or
xor
cmp
xor
mov
or
(bad)
xchg
dec
sti
or
pop
shl
leave
mov
popf
fstp
add
mov
jg
add
out
(bad)
jnp
mov
neg
fdiv
mov
mov
sbb
scas
cld
stos
mov
sti
mov
jns
sub
mov
fwait
pop
sti
adc
pop
ret
repnz
cdq
xchg
cmp
mov
xchg
jnp
(bad)
aas
pushf
nop
mov
add
add
cmp
fadd
ror
pop
lea
(bad)
in
fisub
pop
fdivr
out
push
add
pop
std
inc
int
push
into
js
pop
xchg
in
adc
xor
ret
push
pop
(bad)
aas
aad
jg
rcl
add
aad
add
rcl
add
(bad)
jmp
retf
ror
push
aad
add
(bad)
rol
mov
add
mov
(bad)
(bad)
(bad)
mov
mov
add
mov
add
lahf
xchg
add
cmps
call
std
jg
lahf
add
stos
fisubr
ja
int
jns
leave
push
retf
jmp
ror
xchg
test
les
nop
add
(bad)
dec
add
popf
mov
xlat
mov
fldenv
js
sub
add
and
mov
add
and
mov
add
in
(bad)
push
jno
add
jne
push
push
mov
pop
outs
(bad)
mov
add
jns
add
jnp
add
add
(bad)
inc
and
add
sub
jbe
push
in
jg
pusha
sub
jo
push
ret
sub
sub
lock
jb
jne
push
mov
mov
out
ret
xchg
mov
imul
(bad)
(bad)
mov
lea
in
data16
dec
into
(bad)
jl
(bad)
into
xchg
push
jle
and
cmps
test
cmp
dec
xor
add
pop
add
jbe
inc
sub
mov
das
clc
fisttp
sbb
lea
add
or
push
mov
xchg
dec
xor
popf
push
cmp
mov
pop
add
ins
daa
test
inc
push
push
call
frstor
out
popa
inc
push
push
movs
push
lods
arpl
bound
mov
push
lods
retf
mov
std
mov
dec
push
push
sahf
pop
inc
push
imul
data16
sbb
dec
imul
std
lock
push
add
es
mov
cmp
lahf
popa
outs
jno
ss
addr16
mov
inc
es
push
add
sar
mov
xchg
out
idiv
cs
stos
ins
push
fisub
push
ret
jnp
mov
jbe
ss
rcl
push
(bad)
add
mul
push
ret
push
push
add
push
mov
pusha
add
sub
pop
cmp
test
cmp
out
data16
jae
push
ret
(bad)
mov
out
ja
push
retf
push
xor
add
sbb
add
push
sub
mov
mov
imul
das
add
xchg
dec
mov
fdivp
add
adc
mov
push
lahf
push
cmp
int
dec
popf
xchg
push
add
pop
cmp
sbb
loop
push
into
push
ss
cs
call
pop
cmps
cmp
add
iret
sahf
jg
mov
mov
inc
es
pushf
mov
fld
pop
inc
cs
push
push
cmps
bound
push
scas
ds
pop
dec
mov
cmp
push
mov
push
pop
jne
es
inc
cmp
lods
pop
cs
push
sub
cmp
cmp
ds
push
adc
push
inc
and
mov
pop
pop
jle
dec
or
jbe
xor
aaa
and
inc
and
xor
verw
pop
xchg
data16
add
inc
js
push
push
inc
sub
cs
neg
mov
pop
xor
pop
cmp
push
xor
dec
sub
inc
pop
mov
into
add
repz
out
out
loope
movs
fdivp
into
and
and
xor
pop
(bad)
mov
es
(bad)
adc
not
jmp
call
mov
out
icebp
enter
xchg
push
jg
icebp
int3
cs
jbe
pop
(bad)
jmp
cmps
add
dec
rcl
out
or
mov
in
jmp
jns
fucomip
not
or
into
add
pop
jmp
ja
out
out
movs
push
sbb
jge
in
mov
repnz
icebp
in
repz
xchg
add
outs
(bad)
lock
in
call
mov
sar
adc
dec
jecxz
dec
fsubrp
mul
(bad)
repz
repnz
outs
shl
(bad)
fsub
out
cld
(bad)
inc
dec
and
or
cmps
loopne
sbb
dec
cdq
jae
mov
fucomip
mov
cld
xchg
test
icebp
out
ret
(bad)
call
or
adc
sbb
inc
inc
(bad)
clc
loop
add
jge
xor
les
icebp
out
jmp
shr
jmp
and
or
pop
add
push
or
lock
push
and
push
pop
pop
lock
jg
loop
mov
movs
mov
imul
or
ja
xchg
dec
and
std
adc
sbb
mov
(bad)
icebp
xchg
nop
add
fimul
xchg
repnz
in
cld
stc
add
lahf
std
in
cdq
adc
shr
or
adc
and
mov
sbb
mov
jecxz
icebp
outs
xchg
aaa
data16
jmp
(bad)
jmp
lods
in
add
adc
dec
xchg
inc
inc
out
loopne
sbb
loope
mov
sbb
jmp
rol
cli
retf
sar
(bad)
jg
or
movs
movs
and
adc
pop
nop
sbb
jbe
push
cmp
cmp
or
aaa
jmp
add
(bad)
jmp
cli
movs
sti
movs
or
sbb
push
or
adc
adc
mov
add
stos
sbb
in
(bad)
dec
bound
pushf
out
jecxz
add
call
ret
jmp
cli
clc
out
or
add
scas
cli
dec
cmps
push
and
sbb
and
mov
push
adc
loopne
adc
dec
loopne
idiv
cmp
lock
std
xlat
add
push
scas
lods
je
call
inc
push
push
cdq
cmps
and
loopne
adc
adc
sbb
xlat
push
mov
mul
jmp
push
sub
call
add
or
ds
mov
adc
stos
cmp
push
and
adc
jg
rcr
in
jns
clc
cld
ja
shr
add
cld
mov
div
imul
div
clc
add
adc
ficomp
lods
push
mov
pop
push
inc
push
or
push
dec
adc
sbb
es
adc
retf
xchg
(bad)
std
lock
add
fnstenv
mov
in
in
add
neg
out
in
jns
nop
xchg
cdq
ss
cmc
jmp
inc
and
and
pop
adc
inc
fimul
in
sub
xlat
cmps
aad
out
in
std
inc
mov
call
jg
and
adc
push
std
lahf
repnz
movs
push
(bad)
ss
inc
jb
dec
xchg
les
dec
push
sbb
add
and
cmp
xchg
idiv
aam
mov
pop
pop
(bad)
mov
std
in
fild
push
push
or
add
adc
in
icebp
jg
or
call
cdq
and
mov
mov
and
(bad)
jle
jo
mov
in
out
out
in
add
pop
mov
mul
pop
popa
imul
in
cmps
adc
mov
mov
cld
outs
fcmovu
fistp
or
xchg
cmp
mov
dec
or
push
sbb
adc
fdiv
fcom
or
inc
cmc
cli
loop
lock
imul
movs
add
in
mov
push
mov
dec
loopne
add
and
sbb
rcl
loopne
je
or
sbb
or
or
mov
and
push
xchg
fdivr
jmp
addr16
out
call
in
in
aad
push
je
lock
scas
jns
mov
xchg
fidivr
and
in
fwait
inc
icebp
outs
loop
xchg
or
inc
ret
dec
cmp
scas
jp
fwait
adc
push
push
and
test
cdq
je
sbb
(bad)
push
dec
in
sti
out
add
add
imul
sbb
or
cwde
and
rcr
push
mov
dec
loopne
inc
fwait
xchg
(bad)
mov
adc
cmp
loopne
cmp
inc
ret
sub
pcmpeqd
or
cmps
jmp
idiv
enter
loop
adc
mov
in
dec
mov
adc
and
sbb
fwait
loopne
ss
dec
inc
fcomp
mov
repnz
adc
and
inc
mov
es
mov
push
pop
out
adc
cdq
and
in
loop
out
pop
add
or
scas
repz
stc
mov
fsub
adc
and
push
push
inc
mov
mov
out
repz
pop
shr
push
loopne
je
jg
dec
cmp
ss
sub
and
loop
jmp
cld
cld
(bad)
loope
enter
es
in
scas
mov
dec
and
push
mov
xor
xchg
and
loopne
inc
fwait
cmp
aad
in
repz
aaa
aas
fdivr
adc
jg
mov
aad
xchg
mov
mov
std
call
fild
in
cli
scas
sti
repz
mov
and
inc
add
mov
push
sbb
mov
je
ss
aad
in
test
dec
aad
adc
mov
rcl
dec
dec
aad
cli
jmp
in
mov
(bad)
in
mov
idiv
and
fimul
or
jmp
out
cmp
mov
jno
jge
xchg
shr
imul
xchg
jg
pop
or
jp
fs
cmps
aad
pusha
xor
push
ret
nop
(bad)
mov
sahf
push
and
sahf
push
out
or
or
jl
add
sub
fcmovnb
mov
xchg
rol
rcr
push
iret
dec
movups
loopne
jmp
int3
in
into
mov
add
out
dec
in
out
repz
cmc
fwait
test
or
inc
sbb
fwait
xchg
in
xchg
in
inc
stos
test
ficom
sbb
out
ss
adc
mov
mov
test
add
aaa
xchg
jmp
hlt
hlt
out
popa
add
pop
inc
jg
lods
cmc
pop
and
sbb
inc
sahf
push
xchg
out
lods
lods
pop
lock
fsubr
mov
add
mov
jmp
mov
mov
add
mov
stc
(bad)
out
jg
jl
(bad)
cdq
sbb
mov
mov
sub
dec
fsubrp
mov
jmp
div
jns
idiv
jmp
test
add
fucomp
shl
(bad)
jecxz
mov
ret
fwait
adc
inc
adc
push
jmp
loope
ins
iret
jmp
in
fdivp
sti
mov
cmp
cmp
fucomi
call
js
add
call
jg
sbb
loopne
cdq
inc
dec
pop
inc
cmps
and
add
pop
mov
(bad)
in
je
jl
shl
add
test
dec
hlt
out
or
sbb
mov
in
jmp
pop
add
push
push
fmul
call
jmp
mov
sbb
and
mov
dec
sbb
enter
fdivr
cli
mov
pop
out
dec
retf
mov
out
add
sub
scas
jmp
push
and
fwait
add
mov
and
movs
add
adc
mov
lock
out
jae
shl
movs
cli
add
mov
rcr
add
adc
sub
sahf
scas
cli
ins
mov
loop
cdq
and
and
add
push
push
jle
sbb
push
adc
mov
xchg
ret
sar
ins
push
fcmovnb
stos
jne
pop
jmp
jmp
mov
sbb
dec
mov
fild
push
dec
movs
mov
adc
jecxz
out
lock
cmp
mov
jmp
jmp
pop
mov
call
push
push
adc
mov
scas
cmps
cmps
std
inc
mov
mov
and
and
dec
adc
fsubr
add
lock
(bad)
aas
fwait
jecxz
movs
pop
call
imul
in
in
fsub
mov
adc
or
sbb
pop
and
aam
jno
test
icebp
int3
ret
js
xchg
out
in
cli
iret
jmp
mov
aam
(bad)
in
fdivr
es
inc
es
sbb
add
cmc
push
lods
and
xor
into
lock
mov
fisub
sar
mov
sub
lahf
or
out
adc
sbb
loope
add
cld
push
movs
loop
dec
outs
jnp
icebp
out
mov
popa
into
add
icebp
in
call
jl
hlt
out
in
jns
dec
dec
adc
sbb
mov
icebp
add
pop
icebp
sbb
or
fwait
icebp
out
ja
shl
in
add
add
and
add
hlt
fucomip
aad
jg
or
fisub
lods
adc
out
lock
add
mov
push
stos
mov
fcomi
jl
aad
mov
sbb
xchg
out
push
jmp
jmp
gs
adc
sbb
adc
xchg
jecxz
dec
dec
ss
push
dec
ss
xchg
fadd
(bad)
ret
out
repz
pusha
lock
sub
out
mov
xchg
(bad)
adc
or
icebp
push
clc
repz
or
or
movs
dec
push
mov
dec
in
sbb
call
or
out
sub
cmc
pop
aad
jb
(bad)
(bad)
jecxz
adc
dec
sbb
cmps
sub
add
mov
sbb
inc
repz
xchg
out
ret
(bad)
sub
jmp
fsubr
adc
sar
mov
lock
sbb
movs
cdq
sbb
in
and
or
mov
jg
lods
push
movs
xor
sbb
mov
pushf
adc
and
je
test
sbb
mov
xor
int
out
jg
mov
or
dec
and
adc
loope
add
lock
pop
jg
rcl
mov
sub
mov
add
daa
daa
jnp
jecxz
sbb
in
and
loope
add
mov
sub
pop
scas
out
mov
div
fiadd
in
pop
pop
push
fadd
cwde
sar
jns
loopne
dec
jg
add
add
or
fsubr
in
mov
out
jge
repz
push
or
add
out
adc
jecxz
and
(bad)
loop
ret
add
repnz
cdq
mov
in
mov
loopne
(bad)
ja
repz
ja
pop
mov
mov
shr
loopne
adc
xchg
aas
adc
and
enter
in
or
sbb
lock
in
add
jl
out
sub
(bad)
mov
(bad)
pop
call
mov
adc
or
icebp
aam
hlt
xchg
scas
repz
inc
call
loopne
sub
jecxz
adc
push
mov
out
xchg
je
repnz
scas
scas
cmc
in
mov
imul
outs
cdq
xchg
push
or
icebp
adc
lods
sbb
mov
sub
xchg
mov
add
repz
shl
icebp
in
pop
lock
jnp
out
shl
push
out
mov
cmp
out
(bad)
iret
scas
adc
out
cmps
sbb
add
in
imul
push
out
lock
out
out
movs
or
sub
xchg
push
fsub
jecxz
or
fadd
add
or
mov
out
push
shl
jbe
or
call
call
bndldx
retf
(bad)
icebp
push
push
add
out
add
imul
or
or
ins
(bad)
add
jmp
pop
out
iret
iret
push
sbb
in
pop
icebp
movs
mov
loope
out
jns
jbe
gs
icebp
sub
add
out
mov
sbb
outs
mov
jnp
push
icebp
or
sbb
mul
int3
out
(bad)
sub
repz
adc
out
mov
je
out
inc
movlps
repz
in
pop
out
or
imul
mov
push
fstp
out
arpl
movs
pop
or
mov
fucomi
push
jns
mov
in
sub
out
int
mov
mov
fidivr
or
ins
mov
fcmovne
cmc
fild
pop
out
jbe
inc
ds
aad
hlt
mov
pop
add
shl
mov
(bad)
shr
adc
push
add
mov
int
(bad)
cmc
mov
jns
fdivp
sub
lock
jbe
neg
add
lahf
or
out
jns
and
cmovns
mov
jns
or
jecxz
leave
mov
and
pop
int
cmp
mov
imul
push
movs
push
or
cmp
pop
(bad)
in
out
into
or
dec
aad
add
(bad)
mov
sub
push
call
add
out
bound
jbe
iret
shr
and
push
dec
inc
movs
dec
fistp
cs
invd
add
cmp
f2xm1
setns
into
aad
pop
in
out
cmp
mov
out
fmul
dec
enter
adc
ins
rcl
adc
hlt
stc
pop
out
jns
dec
jae
adc
(bad)
pop
cmc
daa
mov
push
repz
addr16
mov
mov
ss
add
adc
push
adc
and
push
sbb
sub
fldcw
cdq
dec
(bad)
outs
add
and
adc
mov
jmp
mov
inc
xchg
sar
add
not
mov
pop
add
and
sbb
loopne
jl
push
adc
push
push
push
out
jns
neg
daa
out
repz
out
(bad)
icebp
imul
call
loopne
jg
into
fist
adc
and
sbb
or
dec
test
add
push
in
ss
pop
add
mov
mov
icebp
fninit
pop
shl
jl
dec
cld
push
and
dec
lahf
dec
add
cmp
stos
sbb
mov
ss
jns
daa
sub
sub
or
pop
ss
not
call
dec
sbb
mov
jbe
in
jmp
icebp
mov
mov
add
cmp
out
test
mov
retf
xchg
into
pop
data16
push
jmp
es
ja
dec
jecxz
xchg
ss
(bad)
out
sub
inc
jns
sub
sub
fldcw
add
icebp
jbe
mov
icebp
imul
add
sbb
jg
fcomp
or
mov
in
out
lock
xor
cmp
mov
xchg
sub
test
push
je
xchg
iret
add
fcmovu
mov
pop
out
sub
cmc
loope
cmp
sub
arpl
mov
int
sti
add
sahf
pop
imul
pop
out
in
push
jnp
data16
daa
mov
fdivp
or
repz
mov
fcomi
add
fisub
jns
iret
out
xor
inc
nop
out
sub
mov
in
(bad)
(bad)
out
call
retf
sub
sbb
in
fild
icebp
je
ins
fisubr
out
pop
add
(bad)
mov
mov
int
push
mov
fld
call
jo
ins
pop
pop
out
loope
cmp
popa
add
mov
add
cmp
mov
mov
add
add
jmp
cmps
popf
jbe
pop
icebp
sub
xchg
je
aad
pusha
pop
mov
mov
mov
(bad)
push
pandn
iret
(bad)
jmp
xchg
mov
iret
mov
sub
or
mov
add
fmul
aad
jmp
jmp
in
loope
in
pop
pop
sub
repz
sub
push
in
sub
sti
call
arpl
sbb
lahf
sub
popa
jmp
xor
out
xchg
mov
jbe
sub
mov
or
mov
jo
ins
repnz
lds
pop
leave
ja
xchg
fdiv
in
mov
out
add
data16
cwde
xor
in
or
pop
cmps
xor
jecxz
pop
push
mov
mov
aas
mov
push
push
lock
popf
xor
out
mov
out
xchg
out
icebp
repz
lods
lock
jge
shr
push
out
xchg
mov
(bad)
adc
popa
icebp
mov
loopne
in
jmp
rol
enter
shr
neg
dec
inc
ds
ins
mov
mov
loop
out
repz
mov
in
(bad)
cmc
lods
add
(bad)
fisubr
ins
add
xchg
push
sbb
xchg
test
push
stos
popf
lock
sub
mov
pop
in
mov
mov
fcmovnu
ins
fmul
jg
mov
out
fwait
xor
push
(bad)
mov
mov
fiadd
icebp
pop
fnstenv
mov
in
(bad)
or
enterw
inc
adc
sbb
sbb
xor
ss
pop
shl
out
mov
jb
mov
repnz
aaa
sbb
in
out
or
or
and
inc
cwde
jae
leave
shl
mov
in
push
sub
mov
add
and
jbe
dec
or
mov
xor
xor
mov
sub
icebp
fwait
and
daa
ret
in
sub
jg
push
or
dec
mov
addr16
out
push
popa
icebp
xor
(bad)
in
retf
mov
fld
mov
jmp
(bad)
or
and
inc
popf
out
and
add
mov
lock
mov
mov
ret
shl
(bad)
sbb
mov
rcl
jae
stos
sbb
cmp
loope
mov
aad
mov
inc
repz
outs
out
gs
jo
jbe
adc
push
push
es
sbb
mov
popa
sbb
xchg
push
pusha
icebp
mov
mov
out
int3
push
jo
pop
pop
icebp
dec
inc
push
push
es
sbb
ror
push
fidiv
lds
mov
addr16
push
fs
in
out
sub
(bad)
add
and
dec
cmp
leavew
daa
sub
arpl
dec
pop
shr
(bad)
xor
loopne
into
in
into
jmp
xchg
mov
cmps
jo
xchg
retf
in
enter
shl
mov
inc
fld
fld
gs
out
pusha
lds
jno
fstp
fnstsw
sbb
sahf
out
fild
lock
mov
xlat
lock
mov
add
mov
out
jle
jle
je
push
fist
fs
repz
ficom
add
mov
out
jbe
jno
fnsave
cld
sbb
dec
ins
out
cmp
xor
retf
in
(bad)
push
or
(bad)
jmp
jo
out
clc
cs
xchg
sbb
arpl
int3
enter
ins
shl
in
pop
mov
rol
cmp
out
imul
lock
push
fld
(bad)
adc
jle
xor
repz
sbb
loop
test
add
jae
jnp
(bad)
lock
or
and
dec
mov
loopne
mov
repz
add
in
outs
outs
out
cmps
repnz
dec
fld
inc
xchg
push
gs
lock
sbb
sbb
vpackuswb
gs
imul
icebp
out
fwait
xchg
mov
xor
cmps
fs
fsub
mov
mov
mov
in
out
out
icebp
xchg
dec
clc
jle
xchg
fild
popa
dec
xor
mov
repnz
xlat
mov
xchg
out
push
outs
icebp
out
or
imul
retf
int3
out
xor
fbstp
repz
mov
dec
mov
call
outs
out
jno
or
sbb
fdiv
and
addr16
into
gs
repnz
mov
out
xlat
add
outs
in
sub
loope
xchg
jo
fstp
outs
jo
int
fwait
pop
(bad)
int3
retf
out
icebp
ret
repz
icebp
mov
mov
(bad)
fdivr
icebp
add
ja
xor
fstp
out
into
push
mov
mov
pusha
inc
mov
pusha
icebp
fiadd
int
jge
in
icebp
add
in
out
lock
mov
and
push
sahf
test
add
repz
add
add
fisttp
mov
out
imul
ret
(bad)
mov
test
in
mov
jecxz
in
icebp
mov
gs
in
out
icebp
ins
into
ret
inc
mov
pop
retf
icebp
outs
add
add
out
push
lods
and
fdivp
in
push
in
bound
out
jb
add
neg
pop
in
push
fld
repz
in
push
cdq
pop
icebp
pusha
in
sub
sub
in
outs
rol
aam
jecxz
jb
fimul
in
mov
or
add
shr
dec
icebp
jmp
in
lock
sbb
icebp
mov
ss
in
outs
dec
cmps
ins
cmps
lock
icebp
fs
pop
xchg
out
cs
dec
data16
in
out
imul
mov
and
js
xchg
shl
mov
movs
sbb
in
mov
mov
mov
cs
icebp
cmc
mov
fdiv
in
mov
mov
add
or
leave
mov
ins
inc
pop
icebp
mov
mov
add
cmc
icebp
mov
xchg
outs
into
mov
out
(bad)
push
xor
sub
jge
lods
and
icebp
adc
mov
dec
lds
iret
out
add
test
jge
and
jb
sub
icebp
mov
ja
add
loope
xor
mov
lock
xor
jge
js
in
mov
icebp
mov
ins
iret
add
stc
std
iret
add
push
xor
js
dec
mov
mov
out
add
mov
inc
(bad)
jge
inc
jne
lock
push
leave
in
dec
shl
into
stc
iret
mov
add
mov
std
pop
pop
aaa
test
ins
lock
xlat
icebp
imul
lds
jnp
jmp
add
fimul
ins
icebp
jp
icebp
mov
stos
in
out
fsubr
std
push
push
mov
adc
sbb
inc
inc
aaa
(bad)
jge
ins
fcmovnu
call
icebp
imul
push
(bad)
fistp
xchg
xchg
nop
xchg
jmp
clc
ds
dec
inc
cwde
out
jo
loop
out
lock
shl
ret
in
cmps
imul
xchg
or
or
and
jnp
in
arpl
js
outs
or
aam
xor
stc
popf
xchg
in
aaa
aaa
cmp
or
ins
lds
fistp
out
xchg
xor
cmps
fsubr
icebp
gs
fisubr
add
add
in
and
imul
add
and
jo
push
xchg
imul
inc
sbb
retf
mov
(bad)
jge
shr
popf
xor
add
or
shl
int3
jno
icebp
cmc
pop
jb
shl
outs
fs
test
mov
in
xchg
xchg
add
dec
out
push
sbb
shl
mov
ins
cmc
lock
neg
lock
(bad)
add
aaa
jmp
add
xor
xchg
test
fnstsw
enter
jl
repz
sbb
icebp
imul
(bad)
xchg
fcmovnu
or
in
xchg
fist
jmp
or
mov
cmp
icebp
or
ret
fnstenv
add
pushf
stc
mov
out
add
and
jbe
test
jnp
jl
es
std
ins
mov
add
add
sahf
cmp
repz
add
xchg
lock
repz
or
int
outs
ror
imul
loope
mov
add
jmp
push
ins
jle
out
cmp
or
jnp
xchg
mov
retf
mov
pop
vpsllw
jecxz
adc
add
in
out
or
aas
loop
xor
xchg
mov
icebp
into
mov
call
out
xchg
out
(bad)
test
pop
lods
cmp
repnz
xor
adc
mov
out
fs
pop
in
in
shl
out
cmp
or
fwait
xchg
jge
jle
icebp
lea
test
ins
(bad)
pushf
popf
fnstcw
popf
mov
mov
nop
or
repz
icebp
outs
out
mov
pop
(bad)
stc
fmulp
jl
sbb
aaa
icebp
xor
xor
lds
push
(bad)
out
enter
out
frstor
ja
or
out
add
add
cmp
aas
jecxz
add
out
icebp
cmp
int3
push
mov
mov
add
mov
add
lock
repz
push
lds
mov
and
xchg
push
cs
cwde
cwde
nop
xor
sub
cs
fsubr
inc
inc
pop
or
add
push
mov
jmp
in
test
sbb
inc
fisttp
pop
in
ins
outs
add
add
xchg
dec
in
sub
push
in
pusha
and
in
add
xchg
repz
gs
cmp
jbe
(bad)
out
retf
nop
shl
pusha
xchg
jbe
inc
add
xor
push
or
jnp
lea
shl
test
sbb
inc
add
repz
dec
call
jne
jne
or
out
gs
jmp
mov
repz
or
dec
leave
aaa
adc
dec
fs
data16
inc
inc
icebp
repz
nop
cmp
lds
rcr
mov
push
cmp
xchg
pop
movs
aad
xor
fcmovb
(bad)
push
shl
jmp
fist
inc
or
imul
cmps
je
int
inc
add
cwde
mov
fyl2x
test
mov
or
icebp
out
fnsave
xchg
out
add
cmp
sbb
adc
mov
inc
in
(bad)
js
shl
popa
jmp
repz
add
(bad)
cmp
inc
cwde
out
jle
shr
or
outs
sar
mov
out
push
add
or
and
cmps
in
xchg
in
jle
xor
inc
aaa
add
adc
mov
out
icebp
out
add
vcvtss2si
inc
or
or
and
xchg
inc
repz
push
mov
push
vmovdqa
xor
jmp
mov
sti
adc
out
cmp
test
sbb
cmp
xor
or
dec
add
neg
adc
out
fwait
inc
aas
inc
sbb
mov
mov
pop
jb
ret
outs
jmp
pop
pop
ficom
dec
add
nop
popf
stc
shr
icebp
shl
ins
sub
push
outs
jmp
mov
lahf
fcom
add
or
out
mov
leave
shr
ret
lock
dec
jmp
add
add
mov
inc
pop
adc
cmp
(bad)
imul
jmp
call
or
or
ss
mov
add
fldln2
jmp
jo
xor
fimul
push
ds
xchg
mov
adc
nop
jecxz
mov
xchg
imul
out
outs
sub
icebp
dec
inc
adc
out
movs
inc
icebp
inc
jb
xchg
inc
loope
faddp
dec
cmp
not
in
jmp
sbb
aas
mov
and
icebp
and
jb
loope
jl
or
rcl
sub
icebp
sbb
inc
adc
adc
(bad)
bound
out
leave
lea
dec
sub
push
add
repz
xor
inc
aam
mov
mov
ss
in
out
sbb
adc
repz
dec
icebp
inc
(bad)
sub
mov
imul
addr16
mov
int
icebp
dec
les
sub
jbe
add
icebp
loope
leave
les
shl
int
out
loope
jmp
dec
inc
mov
rcr
(bad)
fwait
inc
inc
std
icebp
loope
xchg
fistp
inc
jmp
add
idiv
aam
inc
push
dec
mov
inc
inc
mov
ds
icebp
mov
mov
add
std
jbe
xor
jmp
add
sbb
mov
xor
adc
out
fwait
ss
xchg
inc
xchg
icebp
dec
loope
imul
aad
jmp
fstp
jmp
dec
lods
mov
repnz
icebp
rol
sub
jmp
jecxz
adc
sbb
push
push
cmp
mov
out
inc
dec
mov
ds
inc
mov
sub
xchg
fwait
test
sbb
cmp
add
push
fyl2xp1
cld
outs
aas
inc
inc
sbb
add
inc
dec
inc
inc
dec
push
stos
inc
mov
ds
cwde
cwde
sbb
xchg
mov
out
mov
xchg
lock
fimul
inc
scas
push
and
dec
std
imul
mov
dec
dec
dec
inc
ds
clc
mov
sub
sbb
or
std
sti
mov
imul
inc
stos
sbb
sbb
push
and
sahf
jo
adc
adc
mov
clc
add
push
adc
and
cmps
xchg
out
loope
xchg
sbb
fidivr
push
or
sub
std
adc
or
or
sbb
aaa
inc
loop
push
sbb
adc
or
inc
mov
sar
fs
jmp
sbb
pushf
push
inc
loopne
or
or
rol
or
and
add
adc
push
pushf
push
jo
adc
and
dec
ror
enter
jmp
stos
inc
mov
repnz
mov
mov
and
and
push
hlt
and
sbb
adc
inc
and
and
aam
out
inc
rol
ret
mov
or
sar
or
mov
addr16
into
adc
es
xor
or
adc
fstsw
mov
shr
add
jg
push
push
cmps
dec
in
dec
and
xor
in
es
aam
loop
push
dec
cmp
(bad)
(bad)
loop
cmp
adc
fnstsw
out
inc
das
enter
outs
in
push
xchg
dec
es
xchg
sub
xchg
mov
mov
and
cmp
and
pop
pop
fisttp
cmps
hlt
xor
aam
push
adc
fwait
xchg
out
mov
mov
ja
shl
dec
mov
ins
xchg
punpcklbw
and
push
push
fsub
ficomp
dec
pop
dec
mov
(bad)
fmul
push
and
dec
xchg
xchg
pop
adc
mov
je
mov
or
inc
xor
sbb
(bad)
or
scas
sbb
dec
dec
ss
test
push
(bad)
adc
adc
sbb
xchg
xor
or
cmp
push
and
push
or
jbe
fmul
or
frstor
push
inc
mov
ins
dec
inc
dec
push
inc
adc
push
cmovl
scas
movzx
xchg
jnp
out
inc
cmp
dec
and
and
inc
mov
movs
bound
and
dec
popa
fwait
adc
sbb
nop
mov
lds
push
and
cmp
loopne
out
sar
out
push
dec
push
sbb
cmps
loop
test
mov
pop
fstp
in
push
dec
int3
(bad)
mov
add
and
sbb
push
and
dec
aas
fwait
aad
int3
or
inc
out
inc
mov
fbld
dec
push
in
fstp
into
push
int3
(bad)
or
fdivp
adc
jp
cmp
ss
pop
ror
rcl
jge
add
inc
fwait
(bad)
jbe
in
out
cmp
and
mov
sbb
xchg
adc
add
inc
mov
push
sbb
add
dec
ins
into
sbb
movs
(bad)
dec
push
push
mov
sbb
and
out
cwde
inc
cwde
cwde
cwde
jbe
inc
add
dec
mov
mov
push
shl
pop
(bad)
in
call
sbb
dec
dec
dec
sbb
add
push
stos
inc
inc
inc
or
(bad)
ficomp
mov
test
dec
push
adc
jne
xor
rcl
repnz
push
sbb
loopne
sahf
sbb
add
or
inc
fiadd
mov
add
in
jbe
cmp
pop
test
pop
jp
jmp
xor
and
fld
add
push
in
outs
pusha
fdivr
inc
inc
cmp
xchg
and
call
sbb
retf
call
xchg
push
push
jmp
mov
push
stos
inc
sbb
sbb
cs
fucomip
cwde
dec
inc
inc
jle
and
aas
es
sbb
add
call
and
push
pusha
and
rol
in
mov
sub
mov
out
lock
jb
cld
xor
inc
test
cmp
or
jg
shr
or
out
sbb
adc
and
adc
and
cmp
adc
dec
loop
lock
scas
pop
mov
sahf
xchg
jae
out
aas
dec
jne
or
and
mov
add
pop
xor
out
xchg
retf
push
and
or
or
sar
push
inc
inc
sbb
push
je
xor
out
and
mov
(bad)
mov
and
and
mov
sbb
call
cmps
pop
xor
sbb
out
mov
xchg
inc
jo
rol
jp
mov
xor
add
adc
call
fadd
adc
lock
or
in
push
pop
inc
and
test
popf
inc
inc
out
push
or
ja
fdivr
sbb
out
push
push
push
fsub
into
lock
or
and
in
sub
inc
adc
lods
pop
pop
lock
loopne
(bad)
push
inc
inc
dec
push
inc
in
dec
jbe
leave
inc
sti
add
out
or
or
sahf
xor
mov
retf
add
shr
loopne
(bad)
or
push
push
add
or
or
and
out
jb
push
push
sub
adc
jae
sbb
ror
cwde
and
xchg
push
mov
enter
pop
lahf
loope
sbb
icebp
dec
shr
jne
xchg
aaa
fistp
mov
ins
push
mov
add
retf
push
or
rol
in
repnz
mov
mov
mov
and
push
adc
xchg
fstp
inc
or
out
cmp
es
or
add
pop
es
dec
fiadd
test
add
adc
mov
push
push
push
add
in
jbe
out
aaa
lahf
xor
and
or
jns
scas
add
loopne
or
(bad)
loopne
or
call
mov
mov
int
push
int
out
jg
retf
sbb
jp
sar
adc
out
pop
push
dec
rcl
sahf
or
jecxz
cmp
jmp
mov
and
out
xor
mov
xchg
out
(bad)
(bad)
cmps
mov
out
add
mov
rol
jo
push
and
push
and
and
dec
stos
dec
paddsb
enter
sub
mov
sbb
pop
stos
out
cwde
shl
aas
sub
add
and
pop
out
jge
shl
push
lock
and
cvtdq2ps
and
out
push
or
out
push
ds
jbe
inc
cmp
inc
sbb
mov
fwait
popa
xchg
mov
rcr
es
lods
adc
push
adc
push
adc
fisub
dec
push
push
add
sub
xor
stos
dec
stos
mov
add
stos
shl
xchg
add
and
test
push
les
(bad)
out
or
dec
sbb
sbb
and
cmps
mov
add
adc
shl
adc
fs
cli
adc
cmp
and
inc
mov
sbb
xchg
jne
out
jb
inc
stos
ror
loope
and
adc
fsub
push
adc
shl
enter
push
sbb
xor
xchg
fisttp
mov
push
pop
jns
pusha
leave
adc
adc
adc
adc
loop
sub
or
into
inc
lds
in
add
retf
mov
out
and
and
adc
icebp
push
ja
aam
rol
cmp
adc
add
mov
ds
xchg
mov
or
and
repnz
sbb
fisub
or
and
push
pop
imul
out
es
or
mov
mov
pop
xchg
(bad)
stos
fwait
or
jnp
or
loopne
shl
lods
push
lods
push
add
jo
and
loopne
adc
icebp
or
pop
fcomp
ins
hlt
and
stos
repnz
fld
cmp
cdq
and
mov
pop
out
lock
or
jae
xor
sbb
and
out
daa
add
inc
xchg
sti
das
xchg
or
push
inc
out
and
sbb
int
neg
sbb
jmp
lock
push
sbb
add
icebp
or
jle
daa
fmul
aam
int3
adc
cld
mul
inc
fisttp
out
dec
dec
inc
cmp
inc
cmp
xchg
jo
or
out
es
and
push
adc
inc
add
adc
aas
xor
in
out
fcom
push
push
dec
inc
fwait
xchg
inc
test
adc
and
out
inc
xor
out
lock
push
and
icebp
or
mov
or
add
popf
mov
or
and
xchg
add
fisub
or
and
sbb
and
push
and
mov
jne
or
and
ficom
ins
add
jns
and
mov
xchg
dec
xor
in
adc
icebp
(bad)
xchg
aaa
jno
lock
mov
test
push
in
cmp
and
sbb
jb
add
out
cmp
enter
int
jne
ins
addr16
shr
push
and
and
jno
mov
repz
lock
in
mov
or
or
cli
push
sbb
ficom
or
and
out
inc
inc
test
add
sbb
sbb
fisttp
shr
inc
or
cmp
sub
ins
in
les
add
jmp
dec
inc
inc
es
xor
xchg
mov
ins
sti
out
jl
out
push
pop
pushf
add
push
sbb
shl
or
cs
mov
or
hlt
outs
cwde
jmp
(bad)
stos
add
add
test
mov
add
pop
dec
xor
sbb
dec
push
jb
xchg
gs
sbb
sbb
pop
or
ficom
fcom
aas
cmp
jbe
aaa
and
mov
mov
out
ss
mov
and
push
push
lea
cmp
sbb
sbb
loope
arpl
dec
mov
arpl
push
dec
sbb
inc
out
cmp
lds
int
scas
sbb
sbb
push
push
sbb
push
sbb
add
push
and
push
dec
jmp
retf
cwde
push
fucomi
fst
mov
nop
aaa
mov
sbb
out
movs
xor
xchg
outs
mov
push
dec
add
cmps
cmps
outs
push
jns
jmp
out
push
lock
in
int
mov
fstp
xchg
ss
out
dec
repnz
cmc
sbb
pop
or
dec
stos
mov
push
and
pop
out
mov
call
sbb
test
inc
adc
pop
aas
pushf
in
out
mov
scas
sbb
repz
in
(bad)
loope
add
loop
dec
loopne
cli
(bad)
inc
test
enter
repz
in
dec
int
cmp
mov
xchg
mov
add
frstor
icebp
push
mov
add
imul
mov
xor
in
push
push
inc
inc
inc
test
out
sub
in
out
cwde
mov
int
jmp
xor
sub
push
adc
lahf
jg
cmp
in
add
out
sub
push
add
mov
iret
(bad)
push
sahf
jbe
or
ja
push
fcmovu
xchg
fild
ud0
pop
pop
setb
shl
xor
mov
adc
bound
pop
lods
xlat
out
aaa
test
lock
inc
xchg
vmread
lock
mov
data16
imul
mov
cwde
pop
in
out
add
lock
adc
xchg
(bad)
and
mov
movs
add
nop
inc
lahf
add
add
sub
fist
addps
mov
push
int
jmp
ins
or
nop
add
sub
or
ins
jnp
jbe
add
inc
or
adc
pop
inc
sub
bound
ins
jmp
push
pop
jle
pop
and
pop
jb
jae
xor
xor
push
int
in
and
adc
fsubr
mov
push
lods
inc
mov
add
sub
inc
and
in
ins
add
aaa
pop
and
or
push
sti
in
mov
mov
xchg
sub
mov
adc
fidiv
push
in
add
shr
jmp
and
nop
shl
inc
and
cmp
cld
outs
sub
jns
cmp
adc
int3
adc
or
cwde
fistp
cld
push
add
push
sbb
push
add
push
add
(bad)
adc
sbb
pusha
push
ja
pop
call
mov
inc
in
cmps
adc
movs
out
mov
or
ss
inc
cmp
mov
mov
jg
and
sahf
sub
push
jne
gs
iret
push
ja
sbb
std
add
pop
pop
push
pop
push
outs
jle
jbe
retf
bswap
dec
out
push
inc
dec
add
add
add
cmpxchg8b
push
mov
psubsw
imul
lds
and
jle
xor
mov
fld
xor
out
enter
add
push
or
outs
outs
inc
sbb
mov
adc
fidivr
cmovne
je
jb
push
jnp
fst
mov
cmp
mov
test
cs
xchg
cmp
leave
leave
gs
loop
jb
push
push
jg
dec
inc
stos
iret
repz
mov
add
das
dec
xor
push
xor
aaa
repz
enter
gs
mov
addr16
jno
cmp
mov
push
dec
ror
dec
push
jns
jne
arpl
pop
sub
fistp
punpcklwd
fimul
mov
es
pop
ins
cmp
je
lds
sbb
push
pandn
fs
retf
jge
scas
cs
ins
ret
dec
and
sub
hlt
pop
ins
div
inc
mov
sub
and
test
xor
mov
jae
(bad)
pop
mov
outs
xor
cmps
cmp
inc
pusha
inc
das
adc
addr16
xchg
add
pop
addr16
ror
scas
dec
pop
loopne
add
pop
mov
xchg
(bad)
inc
cwde
add
stc
xor
mov
xchg
scas
add
aaa
nop
(bad)
xchg
andps
dec
test
dec
stos
add
and
mov
je
addr16
aas
loope
outs
push
into
add
nop
imul
jo
repz
jno
imul
pusha
pop
ss
popa
pop
out
mov
arpl
dec
sahf
xchg
dec
add
add
out
mov
push
ins
pop
cmps
jb
aad
dec
sbb
outs
inc
push
jmp
scas
sbb
add
cmp
xchg
test
aaa
cld
lods
mov
sub
xchg
(bad)
loopne
into
pop
cmc
add
js
xor
ja
add
add
mov
mov
das
push
pop
ja
push
test
outs
leave
in
fbstp
fwait
cmp
neg
mov
sub
xchg
sbb
icebp
xlat
and
out
pop
mov
mov
loop
mov
outs
scas
call
jnp
test
fcom
xlat
cmp
loopne
inc
xor
ins
mov
push
pop
call
sub
bound
dec
imul
push
pop
fcmovnbe
push
mov
fstp
mov
or
cs
daa
idiv
sbb
in
cmp
idiv
add
pop
cmps
jbe
dec
test
imul
fisub
outs
repnz
push
xor
xchg
stos
js
out
jbe
stos
mov
jnp
jg
jl
or
dec
adc
mov
popa
xchg
ins
mov
ins
daa
mov
mov
xor
add
(bad)
leave
lds
outs
call
dec
add
stos
dec
xor
arpl
pop
cmp
adc
dec
pop
popa
mov
mov
fistp
cmp
hlt
xchg
pop
jb
jo
push
in
call
shl
cmp
mov
adc
ret
jnp
out
loop
ja
ret
mov
mov
sbb
add
jae
adc
aas
jae
pusha
inc
mov
jae
fld
lahf
ss
sub
push
dec
add
fistp
pop
scas
or
or
das
scas
sub
pop
in
pop
push
scas
add
inc
psubusb
jl
mov
inc
add
push
sub
pusha
retf
mov
and
sbb
add
ret
fs
pop
mov
and
cmp
rcr
or
xor
mov
push
lahf
je
rol
push
test
add
pop
pop
fild
jnp
sbb
test
add
fwait
nop
iret
add
jo
mov
out
call
push
fild
iret
push
push
add
dec
sub
mov
sbb
inc
pop
scas
shr
push
sub
dec
mov
sbb
pop
cmps
mov
iret
js
das
inc
sbb
je
add
shr
jp
rol
sar
add
sub
and
sbb
je
outs
sbb
mov
add
jg
ffree
cdq
adc
lds
jb
jb
push
push
xchg
and
leave
inc
aam
dec
sahf
daa
pop
xchg
and
mov
bound
push
(bad)
cmps
cmp
pop
repnz
push
fcom
jae
movs
(bad)
ss
ins
add
push
repz
and
pop
ins
pop
sbb
scas
repnz
aad
xor
mov
adc
out
outs
idiv
add
dec
inc
shl
push
and
dec
pop
push
enter
imul
shl
push
test
ins
or
cmp
or
pop
sub
mov
mov
out
lods
jmp
pop
or
adc
add
add
push
scas
scas
adc
add
dec
xchg
cld
add
sub
sub
mov
pop
inc
add
cmp
les
cdq
pop
stos
adc
pusha
add
dec
push
dec
pop
add
inc
add
aam
dec
nop
ret
das
mov
mov
call
imul
and
je
sub
jp
or
pop
mov
inc
mov
sbb
(bad)
ins
dec
adc
cs
inc
cmp
jp
enter
pop
and
mov
inc
sub
sub
xchg
dec
and
and
adc
inc
outs
adc
xchg
jl
repnz
add
nop
add
add
xchg
aaa
rcr
add
lahf
sub
and
lahf
adc
mov
or
mov
xchg
pop
add
adc
inc
add
inc
lahf
leave
inc
mov
mov
les
mov
leave
dec
adc
iret
cmp
push
(bad)
jmp
inc
stos
add
jmp
mov
add
push
clc
and
or
or
mov
ja
inc
push
loopne
(bad)
adc
jmp
sbb
pop
add
jo
jns
out
int
jb
call
ins
das
push
push
data16
icebp
xor
pop
jb
sti
jg
mov
sub
adc
add
mov
call
sub
or
add
ucomiss
xor
repz
add
and
enter
xchg
mov
push
add
add
push
sub
sub
mov
add
inc
add
xchg
pop
cmp
aad
dec
fist
xchg
jl
jl
add
les
xor
push
jb
dec
dec
push
and
and
jb
pop
and
repnz
inc
add
and
leave
inc
push
dec
leave
push
enter
sub
add
pop
jmp
lock
test
cwde
push
enter
nop
add
add
test
cmp
cmp
enter
add
out
(bad)
or
pop
xchg
pop
or
jl
add
in
nop
mov
jo
push
js
dec
mov
stos
push
mov
mul
and
or
or
movs
push
cwde
(bad)
out
sub
add
dec
push
jo
mov
jno
pop
adc
adc
dec
mov
fimul
push
sbb
jmp
je
inc
xlat
push
movs
or
adc
adc
sbb
imul
sbb
scas
xchg
stos
cmps
sbb
sub
sub
mov
add
nop
mov
mov
dec
adc
push
adc
retf
call
into
or
ja
scas
push
sub
cmp
lahf
push
inc
sbb
add
pusha
push
adc
pop
push
jne
outs
add
xlat
imul
push
das
add
test
test
pop
add
mov
jae
lahf
cmps
mov
mov
jne
fiadd
mov
nop
push
cs
jo
retf
add
add
adc
inc
pop
add
out
jo
stos
and
xchg
icebp
mov
push
push
stos
xor
(bad)
mov
cmp
add
es
ins
add
js
cld
fld
jo
and
call
repz
dec
jle
push
add
add
rcr
push
or
add
test
xor
inc
inc
fild
outs
add
xchg
test
in
loope
mov
loope
jo
push
cmp
nop
or
aas
in
lock
and
(bad)
hlt
push
repnz
add
ja
fist
lea
adc
rcl
dec
xor
inc
call
mov
inc
xor
adc
pushf
sahf
in
cmp
pushf
mov
xchg
inc
pushf
data16
sub
nop
pushf
xchg
loopne
xor
dec
pop
inc
add
inc
imul
adc
mov
sbb
test
aad
mul
pop
les
sub
jae
xor
mov
int
adc
aam
push
and
pop
lahf
inc
sbb
(bad)
ficomp
sbb
xchg
push
mov
xor
mov
imul
mov
or
enter
arpl
dec
pop
ror
out
cmc
rol
cwde
retf
jns
outs
sub
add
iret
jmp
arpl
jb
shl
push
pop
or
scas
or
jo
mov
pop
iret
and
push
outs
sub
repz
jg
adc
aam
ins
ja
push
fs
push
sbb
mov
sbb
scas
dec
das
mov
lahf
aas
xlat
mov
xchg
pusha
out
je
iret
mov
repz
and
gs
pusha
mov
cmps
push
and
or
push
ret
cs
sbb
add
mov
push
adc
inc
leave
popf
iret
or
or
add
and
adc
or
push
retf
loope
mov
xchg
repz
sub
imul
push
cmps
mov
stos
dec
aam
push
jns
scas
cmp
outs
shr
loop
sub
pop
jne
test
ja
mov
xlat
aas
arpl
cmp
sub
ins
enter
imul
popa
adc
pop
xor
fiadd
push
mov
sbb
retf
mov
push
mov
(bad)
sub
or
mov
imul
sbb
inc
and
or
and
sub
inc
pop
pop
int3
adc
mov
hlt
ds
mov
bound
cs
add
jne
push
test
leave
jmp
mov
add
xor
shr
pop
fcom
inc
addr16
cmp
pushf
inc
retf
jns
push
ds
jmp
xor
pop
dec
push
pop
sub
jno
push
inc
pop
inc
cmps
jae
fcom
aaa
ja
cmp
mov
jp
sbb
daa
or
out
push
mov
mov
daa
outs
pop
movs
test
sahf
push
pop
stos
pop
ret
push
sub
arpl
sbb
imul
jnp
sub
das
sub
mov
lods
push
loop
inc
aas
jns
xchg
add
push
xor
and
xchg
dec
pop
add
jmp
les
fucomip
outs
add
mov
add
ins
or
cli
mov
inc
push
movs
xor
mov
mov
mov
pop
add
inc
mov
and
fiadd
shl
add
enter
mov
pop
(bad)
shr
xchg
popa
les
pop
pop
xor
mov
lods
stos
bound
inc
pusha
aad
mov
jg
movs
dec
loop
fistp
and
push
aas
sbb
mov
xor
sub
nop
outs
ds
mov
xchg
mov
ja
mov
fsubr
cs
or
jp
push
stos
shl
ins
es
aaa
mov
hlt
jl
add
add
jns
shr
ja
aas
les
gs
add
retf
sub
es
add
rol
(bad)
dec
add
cmp
aas
mov
jp
pop
movs
xor
iret
fwait
inc
and
dec
imul
jb
out
mov
mov
out
jecxz
imul
daa
arpl
mov
(bad)
adc
adc
cwde
mov
outs
and
xor
retf
sub
(bad)
(bad)
pop
clc
and
jae
xor
inc
dec
mov
push
push
pop
scas
xchg
xchg
jae
ret
and
or
or
jecxz
adc
xor
jbe
(bad)
pop
dec
push
outs
add
sbb
push
dec
sbb
lahf
push
shr
sbb
bts
mov
mov
sbb
and
push
sti
jae
mov
mov
pop
mov
or
and
retf
rcr
inc
mov
mov
mov
pop
loop
jg
daa
push
ret
add
push
xlat
jbe
and
ins
fistp
icebp
mov
add
fcomp
test
mov
test
loopne
mov
or
outs
adc
or
xchg
cli
(bad)
out
arpl
ja
add
es
fs
jno
xlat
mov
cs
add
xchg
scas
bound
fistp
dec
out
pop
in
je
pop
fbld
sbb
xor
ds
mov
cmp
imul
inc
shr
inc
push
lds
pop
loop
sub
mov
ret
inc
xor
popa
mov
sbb
push
ficom
lock
dec
push
mov
inc
aam
or
adc
xchg
(bad)
pusha
add
and
or
xchg
icebp
adc
rcl
(bad)
aaa
inc
pop
jnp
add
lods
inc
dec
and
mov
xor
outs
xchg
push
xchg
adc
push
stos
xchg
pop
add
add
aad
xchg
outs
sub
adc
nop
xor
jecxz
inc
pop
xchg
adc
add
scas
sbb
xchg
repz
dec
jmp
das
data16
pusha
cli
adc
inc
stos
push
cmp
(bad)
gs
int
sbb
sub
or
test
mov
popa
xsavec
bound
ret
cmp
cs
(bad)
cli
data16
sbb
arpl
mov
bound
dec
rol
aaa
sub
dec
not
mov
jp
repz
adc
xor
mov
es
bound
adc
pusha
stos
imul
shl
jb
arpl
mov
jg
cmp
nop
add
jns
adc
aas
mov
aas
add
add
mov
addr16
arpl
popw
ins
mov
mov
mov
adc
push
ret
xor
mov
inc
fs
add
or
cmp
ins
(bad)
mov
mov
lds
push
xchg
test
mov
rcr
and
pop
and
movs
push
mov
pop
sti
pop
adc
ret
pushf
daa
push
jnp
pop
jne
sbb
outs
mov
sub
xchg
ds
or
xor
(bad)
mov
mov
cmp
cmp
fild
adc
fiadd
push
sub
mov
addr16
lods
sbb
loop
mov
je
mov
dec
shl
jne
mov
inc
jb
cs
jo
fiadd
arpl
and
pop
fld
mov
jb
mov
loopne
jecxz
scas
or
mov
push
cs
addr16
loop
xchg
mov
add
loopne
or
mov
sub
ja
jmp
loope
and
aaa
daa
xchg
pop
outs
add
push
xchg
xor
push
mov
mov
loope
sub
pop
push
sub
loop
cmp
and
adc
outs
inc
or
fidivr
mov
jecxz
jae
bound
or
or
adc
push
imul
das
xchg
je
mov
stos
jp
sbb
or
mov
mov
mov
out
mov
inc
sub
fwait
xor
sbb
pop
adc
pop
dec
add
pop
imul
aam
adc
jno
jo
and
in
ret
mov
push
add
inc
sub
call
jo
push
push
arpl
lods
adc
not
inc
arpl
sub
test
add
inc
imul
sub
bound
adc
aaa
fucom
add
fld
mov
and
stos
out
addr16
jne
inc
pop
addr16
and
test
push
imul
inc
mov
adc
outs
bound
ins
jnp
inc
stos
rol
imul
test
dec
daa
inc
pusha
mov
ins
mov
add
inc
loop
daa
pop
(bad)
lods
sbb
movs
shl
or
push
jg
(bad)
sub
xchg
dec
(bad)
fwait
inc
not
xchg
rol
imul
sti
jmp
or
inc
sbb
out
or
add
or
jns
mov
dec
loopne
pop
adc
sbb
push
inc
sbb
pusha
jne
test
jo
fistp
loope
punpcklwd
(bad)
add
add
xchg
mov
mov
dec
out
cmp
xor
adc
sahf
jbe
inc
sub
data16
mov
das
(bad)
arpl
sbb
push
enter
dec
jae
dec
jbe
into
add
jb
push
jg
cwde
fsub
dec
cmp
pop
mov
lea
xor
sbb
and
mov
bound
and
imul
push
dec
pop
add
out
inc
sbb
mov
popa
adc
clc
cmp
push
das
add
push
scas
add
sub
daa
and
test
call
aas
js
xlat
or
push
dec
dec
rcr
push
jo
xlat
and
xor
and
add
add
xor
sub
outs
cmp
xchg
jnp
push
sub
add
shl
jns
ja
pop
ror
fbstp
jmp
add
fidiv
aas
push
imul
push
(bad)
adc
inc
stos
pop
mov
imul
fsub
in
mov
adc
mov
retf
rcr
or
adc
sub
stos
out
xchg
and
or
test
outs
xchg
and
add
retf
mov
aaa
pop
mov
inc
sbb
jo
xlat
inc
ret
stos
adc
or
add
arpl
or
pop
mul
and
and
jb
ret
shl
sub
or
or
or
or
lods
add
add
fsubr
xor
inc
add
movhps
add
push
in
adc
or
push
ss
jnp
mov
xor
adc
jne
mov
push
mov
or
fwait
jnp
sbb
add
xchg
mov
cmps
pop
mov
mov
push
mov
mov
push
and
xor
popf
cmp
dec
lahf
daa
aaa
(bad)
or
push
outs
outs
pop
sar
mov
nop
or
mov
add
outs
popa
inc
dec
xor
jae
or
mov
hlt
neg
mov
lea
cs
daa
out
pop
pop
aad
and
sti
xchg
sbb
lods
arpl
push
push
pop
stos
add
sar
das
mov
and
cmp
and
push
retf
xchg
push
arpl
jecxz
push
push
and
sbb
(bad)
jp
add
mov
mov
mov
mov
out
dec
xlat
mov
call
dec
lahf
mov
dec
ja
ins
mov
out
xchg
mov
push
mov
xor
xchg
stos
dec
(bad)
cmps
push
shr
adc
stos
frstor
jle
(bad)
lock
pop
cmp
add
pop
sbb
or
ret
dec
sbb
adc
icebp
loope
rol
sbb
fwait
dec
xor
jo
xchg
leave
pop
push
cmps
fwait
aas
cvttps2pi
jb
sub
ins
xor
add
or
push
jecxz
pop
cwde
xchg
es
cs
push
scas
cdq
mov
dec
mov
push
out
ror
outs
inc
cmp
mov
inc
and
sbb
mov
mov
dec
push
add
jae
repz
jne
in
jmp
out
push
dec
imul
add
mov
adc
movs
shr
jmp
mov
jmp
pop
add
inc
mov
test
lahf
xchg
ret
xor
inc
adc
or
add
xchg
mov
stos
(bad)
jg
and
sub
push
out
pop
push
or
add
jae
fdivr
mov
and
(bad)
mov
sbb
mov
lods
fnsave
or
inc
push
xlat
mov
cmp
loop
add
xchg
test
or
not
adc
pop
lds
xor
mov
mov
xlat
iret
xchg
or
push
fdivr
adc
stos
mov
cmps
stos
and
mov
hlt
pop
sbb
push
jnp
out
rcl
je
test
lock
les
xchg
adc
jo
xchg
dec
mov
sbb
outs
jmp
mov
pop
sub
xchg
movs
scas
jl
scas
imul
jnp
and
test
push
inc
push
pop
push
ret
jmp
jl
add
pop
adc
js
xor
add
les
push
xor
and
dec
adc
outs
inc
xlat
pop
pop
sbb
xor
fiadd
dec
dec
mov
dec
cwde
call
xchg
adc
fist
les
inc
sub
mov
adc
pop
sub
addr16
push
sub
movs
stos
adc
sub
aam
cmp
das
mov
push
adc
sbb
aas
imul
push
rcl
pop
dec
scas
adc
mov
inc
out
jecxz
dec
ds
bound
inc
add
lods
lods
sub
movs
daa
cvtpi2ps
imul
cmp
adc
mov
test
push
lds
stos
ja
mov
add
ja
xor
div
and
cmp
ds
pop
lahf
fistp
ins
pop
aas
xor
add
sahf
mov
movs
mov
pop
(bad)
xchg
push
mov
xchg
inc
stos
ror
add
pop
push
inc
cmp
or
rcl
add
add
outs
add
addr16
pop
mov
ss
jno
lods
ret
stos
iret
packsswb
cmps
pop
adc
(bad)
lock
ins
jecxz
sub
daa
add
repnz
add
jae
mov
setae
cmp
cmp
mov
xor
loope
and
aaa
repz
add
scas
loop
add
mov
xchg
dec
(bad)
pop
cs
push
xchg
adc
into
das
or
mov
sti
dec
or
inc
out
and
inc
imul
pusha
cwde
test
gs
stc
pop
mov
or
mov
cli
outs
adc
inc
inc
pop
adc
fild
xlat
push
out
jge
xchg
fild
add
pop
xlat
lods
mov
add
jecxz
or
imul
xor
ret
scas
xchg
dec
pop
pop
inc
popa
inc
mov
or
dec
jae
adc
jmp
xor
jmp
mov
mov
pop
xor
pop
fadd
xor
fidivr
lods
add
cmps
adc
jae
inc
jne
mov
sbb
(bad)
movs
inc
add
arpl
(bad)
(bad)
push
mov
ja
mov
mov
add
mul
shl
add
fwait
jnp
jmp
jecxz
loope
cmp
dec
xor
popa
push
add
popa
add
mov
and
aas
arpl
cmp
xor
jmp
add
jae
js
mov
dec
loop
data16
(bad)
and
dec
daa
push
(bad)
(bad)
aad
jbe
pop
ss
sbb
sbb
push
test
popa
sub
inc
mov
(bad)
aam
cmp
mov
std
adc
daa
outs
dec
cmps
push
xchg
test
mov
mov
repz
mov
mov
pop
arpl
adc
pop
and
sbb
cmp
mov
and
sub
xlat
jae
lods
cwde
jno
push
xchg
ror
dec
dec
sbb
daa
add
iret
movs
add
add
xlat
mov
push
and
and
test
inc
daa
xchg
in
popa
or
sub
mov
dec
and
call
scas
sub
repz
mov
push
dec
fcom
xchg
push
ds
or
aas
push
pop
push
add
jmp
nop
shl
add
out
je
int
rcl
xor
aas
cmp
sub
pshufw
mov
bndmov
test
and
rcr
vmaxss
xor
pop
idiv
mov
jo
call
stos
mov
pop
fs
jbe
imul
inc
pop
inc
pop
jmp
sub
and
sub
scas
sbb
call
outs
jg
add
sub
add
jnp
loop
cmp
fist
das
pop
addr16
jne
pop
pop
jae
inc
add
lea
jb
xchg
dec
fadd
fild
mov
lds
push
mov
inc
xchg
adc
jmp
push
pop
jne
xchg
shr
or
(bad)
jae
xchg
punpckldq
mov
jmp
sub
mov
mov
pop
inc
dec
jo
test
ret
lahf
pop
stos
or
outs
pop
adc
or
sbb
pop
packsswb
inc
lods
mov
(bad)
add
pop
add
xchg
fild
daa
mov
jbe
or
iret
pusha
ror
add
rol
shl
mov
and
ret
sbb
cs
mov
stos
pop
mov
loop
jns
or
push
xor
das
imul
call
pop
jo
stos
mov
xor
mov
xlat
mov
addr16
jae
or
push
das
sbb
mov
ins
cmps
(bad)
push
rcl
mov
lods
(bad)
fisubr
adc
imul
add
and
mov
or
or
cmp
test
test
xchg
add
ja
add
sub
adc
xchg
or
dec
ror
arpl
les
xor
retf
cwde
cmp
(bad)
pop
mov
outs
cmp
lahf
aaa
or
or
xor
outs
aas
dec
stos
inc
pop
mov
daa
scas
xor
inc
sti
das
dec
aam
jmp
retf
jp
pop
pop
and
mov
adc
fild
(bad)
adc
loop
rol
cmps
ins
sub
xor
jle
pusha
out
pop
sub
xor
and
inc
ret
mov
sub
jbe
imul
(bad)
push
jg
lahf
cdq
or
imul
test
xchg
add
sbb
pop
jo
aam
jecxz
cmp
add
lea
daa
xchg
test
inc
pop
lahf
inc
test
fisttp
mov
mov
addr16
nop
pop
(bad)
(bad)
xchg
stos
jne
mov
mov
aam
test
xor
cs
retf
inc
cmp
ret
push
aas
or
sbb
ss
dec
jo
stos
enter
aam
imul
mov
popa
xor
and
jmp
mov
imul
mov
push
mov
jmp
inc
(bad)
fld
or
push
or
xlat
sti
mov
sbb
inc
add
pop
jg
shr
or
pop
outs
inc
sub
inc
mov
arpl
mov
adc
and
mov
out
fdiv
retf
add
mov
inc
xor
movs
push
ins
sub
dec
jno
and
and
inc
shl
ins
mov
mov
mov
(bad)
xchg
fist
or
fild
jmp
adc
pop
or
push
mov
pop
(bad)
arpl
push
jne
fdivr
dec
fwait
mov
or
inc
sbb
jae
add
adc
int3
xchg
pop
add
sub
push
jg
cmp
xchg
je
push
ret
(bad)
arpl
push
ja
xor
fs
inc
call
and
pop
neg
out
mov
fild
or
imul
push
and
daa
xchg
into
jnp
jmp
sahf
and
dec
fwait
cs
mov
push
xor
push
push
(bad)
jnp
outs
push
imul
mov
addr16
scas
out
xchg
outs
(bad)
repz
dec
rol
addr16
mov
jno
xchg
inc
xchg
rol
jo
jno
push
cs
adc
mov
add
lods
push
shr
inc
jnp
sbb
ror
mov
pop
arpl
arpl
add
and
push
aas
push
mov
sbb
iret
jns
cmp
adc
iret
outs
push
xlat
jp
dec
push
add
mov
mul
adc
iret
dec
sub
cmp
or
mov
rcr
mov
push
or
jmp
loope
jecxz
scas
jbe
xchg
imul
addr16
lahf
mov
push
arpl
ret
push
cs
xchg
movs
shr
inc
jb
xchg
ret
adc
cmps
push
movs
dec
push
jg
mov
push
arpl
jbe
xor
mov
add
pop
dec
pop
inc
mov
scas
jg
test
sub
(bad)
dec
aaa
mov
mov
and
adc
jecxz
add
enter
out
push
pop
and
sbb
mov
and
mov
and
pop
(bad)
(bad)
and
mov
arpl
fld
stos
pop
(bad)
mov
pop
add
rcr
xchg
mov
cmp
imul
mov
sbb
pop
arpl
nop
mov
jle
bound
mov
push
(bad)
push
sub
xor
sub
xchg
xchg
sub
mov
pop
push
rol
or
xor
cmps
xor
pop
sbb
mov
outs
xor
cmp
mov
inc
sub
jns
adc
and
inc
inc
mov
push
or
dec
sbb
mov
pop
adc
mov
arpl
xchg
dec
push
pop
or
repz
fld
inc
lods
or
out
lds
inc
stos
cwde
fild
xchg
mov
inc
bound
retf
sub
mov
fistp
test
mov
outs
ret
xchg
sbb
xchg
cmp
mov
xchg
cs
mov
adc
dec
push
adc
sub
inc
sbb
and
or
sub
nop
xchg
cs
mov
push
daa
xlat
cwde
xor
ss
xor
push
xor
das
(bad)
jp
retf
mov
or
cmp
xor
push
movs
lock
dec
jbe
jo
sub
xor
outs
arpl
mov
inc
(bad)
adc
ret
jmp
mov
(bad)
sbb
jp
inc
mov
cmp
daa
cmp
add
ja
adc
in
sbb
mov
mov
gs
mov
and
rol
mov
or
mov
jecxz
inc
test
outs
and
sub
addps
mov
add
imul
lods
push
and
cmp
dec
adc
pop
mov
stos
inc
inc
data16
ins
jecxz
loope
stos
pop
jae
sti
push
arpl
push
leave
sub
ret
or
xchg
stos
inc
adc
outs
push
cmps
ret
or
rcl
push
lea
cmp
push
ret
sbb
add
popa
fwait
je
dec
fisubr
repnz
lds
xor
popa
push
adc
or
mov
xor
rcr
hlt
pusha
sbb
dec
mov
pop
adc
jl
adc
xor
jae
je
les
ins
adc
sbb
mov
ret
test
ret
or
shl
call
scas
les
fs
es
sbb
dec
lods
aam
xchg
inc
add
push
xchg
ret
ret
mov
in
pop
xor
push
stos
adc
adc
pop
adc
mov
jecxz
push
mov
xor
rcl
cli
push
mov
arpl
mov
pop
push
add
aam
rcl
push
xchg
hlt
mov
js
or
test
adc
add
dec
xchg
fs
inc
call
mov
fdiv
xor
adc
xlat
(bad)
out
add
or
dec
adc
xchg
push
xchg
add
repnz
add
xor
and
jns
xor
sbb
fisubr
xchg
or
in
scas
in
or
scas
in
scas
or
or
in
movups
dec
scas
in
adc
add
ss
push
fst
push
sbb
pop
add
adc
add
xchg
lea
push
outs
add
pop
sub
test
sbb
and
arpl
outs
bound
jle
pop
sub
inc
push
xchg
(bad)
and
dec
inc
dec
sbb
aaa
inc
push
fwait
push
add
imul
mov
daa
call
adc
xchg
push
inc
push
push
pop
jnp
call
jne
dec
cmp
retf
push
gs
pop
push
push
dec
push
push
shl
jbe
aam
dec
xchg
iret
pop
or
inc
push
jmp
ins
push
outs
mov
dec
mov
dec
stos
dec
add
mov
sbb
outs
xchg
push
lods
sbb
es
mov
pop
and
mov
outs
fs
ins
movlps
(bad)
dec
jae
lods
add
addr16
ja
mov
ret
xor
jo
mov
mov
adc
or
scas
dec
xor
inc
sbb
and
pop
sub
push
mov
arpl
fcom
fs
and
sbb
test
push
inc
das
push
pop
push
bound
das
push
rcl
xlat
mov
das
xchg
push
push
sbb
sub
or
cmp
sbb
lea
daa
sbb
inc
in
lods
push
jo
add
cmp
cmp
inc
aam
and
xchg
dec
jge
int
mov
leave
sub
aad
test
sbb
dec
test
pop
sbb
jns
gs
jbe
dec
mov
stos
ds
dec
popa
xchg
mov
jno
cmp
and
in
mov
mov
sub
inc
ins
jo
add
sub
sub
xlat
ret
push
pop
ins
mul
stc
pop
inc
es
test
inc
or
popf
dec
jmp
push
mov
call
or
cmp
push
adc
(bad)
dec
cmovp
imul
push
push
imul
aam
test
mov
scas
aas
and
adc
in
gs
fisub
inc
cwde
mov
add
fwait
jmp
leave
ins
jnp
add
push
stos
push
pop
inc
dec
movs
(bad)
cmp
mov
inc
fs
in
xor
mov
in
and
inc
stos
mov
mov
loopne
sub
retf
push
push
ins
adc
nop
adc
cmp
ficom
pop
jmp
or
sub
iret
lahf
sbb
and
repnz
pop
mov
sub
ins
cmp
inc
js
mov
inc
xor
push
arpl
adc
rcl
jb
pop
push
cmps
scas
fs
push
sahf
pop
loop
sub
xor
mov
and
jne
jo
push
jmp
push
out
gs
ret
(bad)
jne
shr
(bad)
pop
sbb
jo
ins
jp
loopne
jnp
sar
inc
add
jo
push
mov
and
inc
or
aam
fwait
push
mov
cmp
jp
movs
sub
push
dec
xor
adc
daa
or
xor
dec
fiadd
inc
jecxz
cmp
push
inc
(bad)
pop
push
repz
jo
pop
daa
push
jp
adc
jne
push
mov
mov
das
and
push
addr16
pop
inc
fcom
mov
mov
fs
mov
movs
mov
pop
gs
fld
xor
adc
popa
(bad)
loop
outs
enter
adc
mov
mov
or
inc
mov
pop
(bad)
test
nop
aaa
inc
pop
iret
fcom
popf
push
mov
pop
add
jmp
cmp
and
fist
mov
jmp
sbb
adc
aas
mov
movs
pop
jae
shl
bound
mov
inc
aad
push
nop
gs
fstp
pop
retf
out
adc
ja
cmp
push
or
je
ins
mov
push
sahf
rol
pop
je
pusha
psubusb
cld
and
adc
test
inc
imul
and
push
fidivr
fild
mov
ins
sbb
push
rcr
ror
fisubr
dec
jb
icebp
and
out
mov
inc
jae
mov
mov
adc
adc
arpl
not
adc
mov
dec
enter
add
into
test
inc
inc
push
inc
pcmpgtb
sub
out
sti
mov
xlat
and
pop
push
fld
cmp
xchg
fbstp
jbe
mov
pop
jae
dec
inc
test
mov
mov
bound
pop
jno
mov
call
test
xor
mov
shl
cmps
and
int
add
push
imul
cmp
add
jno
call
cmp
ret
arpl
pop
mov
jno
call
jo
adc
mov
loopne
xor
add
adc
dec
jae
add
fwait
mov
test
mov
jl
es
jecxz
aaa
mov
add
rcl
fidivr
dec
pop
and
mov
imul
cld
es
dec
add
push
pop
imul
dec
mov
or
or
or
mov
jbe
imul
jae
retf
aas
aas
movs
lods
pop
shr
xor
repnz
stos
add
push
repnz
add
add
adc
xor
rol
mov
shl
or
cmp
loope
push
or
in
jl
add
sub
sub
pushf
es
xchg
data16
adc
rcl
cmps
cwde
and
mov
inc
sub
cmp
sbb
lods
and
adc
pushf
pop
inc
dec
std
aaa
imul
xchg
mov
pushf
or
retf
in
pop
clc
shl
jmp
(bad)
(bad)
sub
daa
and
cmp
dec
inc
imul
or
and
inc
mov
int3
and
shl
ror
cmp
(bad)
inc
nop
bound
sub
inc
jb
mov
jae
xchg
jb
addr16
add
test
mov
inc
adc
je
jno
test
jo
inc
retf
xchg
push
retf
or
rcl
stos
and
adc
sbb
shl
sub
push
loopne
and
inc
mov
or
dec
dec
ror
push
push
in
jecxz
loopne
or
dec
mov
lock
in
(bad)
dec
mov
arpl
js
ret
mov
int3
js
mov
mov
shr
arpl
dec
ins
dec
mov
sbb
lds
lods
loopne
xchg
icebp
push
aam
imul
push
push
inc
bound
fwait
js
push
jno
mov
mov
add
xor
jae
xor
test
dec
in
adc
div
pusha
loopne
sahf
sbb
push
jne
lahf
adc
mov
in
push
sbb
add
ja
icebp
xor
mov
cmc
(bad)
repz
fs
adc
mov
jno
sbb
sbb
loop
mov
es
mov
pop
pop
imul
xlat
sbb
mov
dec
fbld
inc
and
and
sub
sbb
out
fist
and
movs
popa
xchg
adc
dec
sub
xor
retf
(bad)
enter
cmp
fmul
pop
dec
scas
inc
sub
add
mov
into
clc
jns
dec
lds
jmp
inc
sbb
push
jb
xor
ins
fwait
inc
push
pop
pop
fidiv
sbb
inc
jg
jno
pop
pop
pop
leave
push
inc
cmp
or
call
adc
add
ret
inc
mov
pop
xor
xchg
outs
(bad)
sub
test
sub
pandn
imul
mov
xchg
fucomi
push
add
sub
inc
dec
arpl
popf
adc
pusha
fidiv
inc
popa
mov
(bad)
push
popf
inc
je
push
test
ds
loopne
or
lahf
add
jecxz
ret
add
in
push
xor
cmp
aam
mov
and
add
movs
and
(bad)
mov
xchg
jecxz
xor
xchg
cmc
inc
xchg
stos
sub
fist
push
jne
xor
retf
cmps
cmp
pop
mov
movs
dec
sub
inc
movs
outs
pop
iret
xchg
pop
and
adc
xchg
ins
sub
out
adc
inc
test
push
test
movs
jecxz
mov
mov
xchg
rcr
mov
movs
pop
iret
and
outs
pop
and
(bad)
or
cmps
daa
retf
jb
pop
adc
and
jo
jns
fs
test
xor
xchg
mov
xchg
inc
mov
arpl
test
and
outs
add
jnp
arpl
sub
leave
adc
push
arpl
gs
mov
repz
or
jb
jb
push
stc
inc
cs
imul
pop
push
inc
xchg
xor
mov
sti
dec
test
add
test
mov
add
dec
pop
lods
ror
xor
sub
mov
enter
push
retf
inc
jb
inc
adc
inc
add
adc
shl
adc
or
add
or
cmps
imul
call
adc
inc
push
dec
add
jo
mov
loopne
add
call
test
pusha
rcl
dec
jo
pop
adc
jle
adc
comisd
mov
jbe
adc
or
fadd
movs
outs
ror
leave
pop
push
sub
inc
xor
jecxz
loope
lods
mov
push
mov
dec
or
push
smsw
mov
lahf
or
cs
pop
push
add
push
invlpg
paddsw
or
dec
shr
iret
push
pop
out
jb
xlat
out
sahf
add
ltr
add
xchg
and
add
test
add
add
dec
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
