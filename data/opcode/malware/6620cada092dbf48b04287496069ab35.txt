lock
add
add
add
add
add
add
add
or
add
add
add
add
push
shl
add
test
add
sub
add
xor
pop
add
add
add
adc
sbb
add
or
add
outs
add
add
outs
add
add
or
outs
add
add
imul
push
mov
add
fimul
or
or
add
or
push
sub
add
or
add
or
jb
add
jo
sub
add
or
add
or
sub
add
add
add
add
adc
or
add
add
xor
add
add
adc
add
add
sub
add
or
add
or
add
jo
or
push
sbb
sub
add
or
pop
jb
add
jo
add
add
or
outs
sldt
or
lea
add
add
add
add
add
add
or
fimul
pop
sub
pop
outs
push
add
or
fimul
push
sub
push
outs
push
add
or
fimul
sbb
adc
outs
adc
add
outs
adc
add
mov
adc
add
mov
outs
adc
add
mov
adc
add
mov
outs
adc
adc
or
pop
add
or
fiadd
sub
add
add
add
and
sub
or
add
add
add
add
pop
add
gs
add
add
add
sbb
add
sub
dec
add
add
add
add
mov
xchg
add
add
and
push
jns
je
ins
xor
pop
imul
jae
gs
cs
or
and
add
add
add
sbb
lahf
jno
add
popa
rol
lahf
jno
add
popa
rol
lahf
jno
add
popa
rol
pushf
mov
nop
dec
shr
fidiv
(bad)
cmps
ins
fwait
shr
sahf
mov
out
fdivrp
mov
les
scas
int3
enter
push
in
daa
push
pop
lods
add
or
add
std
cmp
sar
add
dec
js
dec
js
xor
xor
cmp
test
mov
xor
adc
xor
sbb
jg
sub
and
jmp
fld
add
rol
add
and
inc
call
or
cmp
aad
add
dec
call
add
das
add
or
(bad)
cmps
(bad)
mov
scas
xor
pop
pop
add
inc
mov
call
jecxz
ds
cld
sbb
das
xor
pop
scas
adc
pop
jge
shr
lock
inc
out
in
fs
pop
inc
aas
mov
bnd
sti
mov
cmps
idiv
popa
dec
jg
loop
(bad)
cmp
icebp
mov
das
xor
push
or
cli
ja
rcr
add
bound
nop
dec
ins
jecxz
add
add
jns
or
sbb
out
add
add
ret
push
test
or
in
xchg
add
imul
dec
add
imul
jo
push
adc
retf
mov
sar
adc
or
das
sub
inc
and
fbstp
or
and
xor
sub
cmc
xlat
cmp
dec
sub
xchg
add
dec
icebp
xchg
sbb
scas
sub
mov
mov
adc
cmp
adc
and
and
adc
add
(bad)
pop
pop
push
push
daa
push
std
lahf
jp
and
je
sti
pop
jmp
call
adc
and
mov
pop
call
cli
pop
push
adc
cmc
adc
call
inc
add
cmp
or
jle
add
add
(bad)
inc
add
push
push
sub
inc
add
(bad)
jnp
or
and
rcl
movs
inc
pop
lahf
repnz
jmp
xchg
or
add
dec
add
sahf
into
cmps
mov
dec
cli
xchg
cmps
cli
into
dec
mov
mov
dec
std
mov
fistp
xor
test
add
mov
stos
sub
out
aam
push
fld
pop
ja
jnp
jmp
sti
mov
imul
push
cmp
shl
hlt
maskmovq
cmc
sti
daa
sbb
sbb
or
cmp
sti
jns
sti
cmp
add
adc
xor
add
jnp
xchg
adc
adc
arpl
adc
jae
pop
arpl
gs
in
xchg
movs
xor
cmp
dec
adc
add
or
loopne
push
jge
fcmovne
or
rol
(bad)
xor
sti
xor
call
jne
xor
hlt
jne
add
and
jle
inc
add
adc
loop
sti
addr16
jnp
dec
push
ret
mov
jl
mov
and
push
stos
adc
cld
sbb
mov
push
scas
ds
jmp
imul
or
mov
jl
mov
jle
ret
mov
(bad)
jg
mov
mov
adc
jmp
jmp
jg
shl
add
mov
push
cmp
mov
ja
or
test
pop
pop
arpl
add
mov
retf
push
mov
loope
add
cmp
aad
mov
adc
nop
jo
jns
xchg
sub
mov
shl
fucomp
ja
leave
add
or
jle
push
xchg
or
jge
fwait
and
add
jge
jnp
sub
sbb
(bad)
pop
clc
pop
jg
dec
aad
cmc
add
iret
lds
or
ja
adc
jmp
inc
loope
inc
add
cmp
push
std
sub
mov
test
or
mov
mov
or
aaa
idiv
jno
hlt
or
div
mov
(bad)
out
(bad)
and
fidivr
jle
push
add
hlt
add
fild
or
mov
outs
cmc
movs
add
pop
les
lea
xchg
(bad)
out
daa
adc
jle
sbb
scas
out
mov
(bad)
xchg
outs
cmp
adc
and
mov
pop
in
aad
shl
fs
add
mov
adc
mov
mov
rcr
in
sbb
test
xchg
shl
adc
xchg
test
ret
jmp
mov
ret
mov
movs
popa
test
out
jb
xchg
out
mov
(bad)
push
mov
xchg
inc
aaa
adc
inc
ds
cli
lds
sbb
(bad)
jmp
mov
inc
xchg
es
repz
cmp
aaa
adc
inc
sbb
les
xchg
adc
icebp
cmp
sbb
or
add
inc
lahf
rol
cwde
add
sbb
xor
(bad)
push
outs
or
xchg
and
out
sahf
shl
aad
inc
lock
sti
lds
xor
mov
paddsb
popf
in
ficomp
out
repz
sti
pop
xor
mov
(bad)
(bad)
not
popa
push
loopne
hlt
bound
pop
xchg
(bad)
sbb
mov
jne
aaa
pop
cwde
das
dec
mov
lea
inc
or
scas
pop
addr16
push
pop
pop
and
sub
dec
out
ror
imul
cli
cmp
das
dec
jle
add
jle
lods
neg
icebp
jns
mov
outs
mov
or
pop
daa
dec
pop
jmp
(bad)
pop
out
loope
loop
fnstsw
mov
lahf
sbb
mov
mov
ror
fimul
sbb
adc
push
mov
imul
call
shl
cwde
into
lock
mov
pushf
mov
mov
shr
push
sbb
xchg
cld
jl
cmp
jb
xor
add
push
hlt
lods
inc
sbb
sbb
loop
rcr
jle
out
and
sub
nop
xchg
cld
test
clc
mov
mov
dec
mov
stos
mov
popf
cmp
jne
xchg
cmp
sbb
outs
adc
cmc
in
fstp
stos
mov
pushf
mov
not
and
or
mov
sar
push
and
push
lds
mov
push
hlt
js
lock
sahf
sti
sub
cs
mov
fwait
xor
(bad)
out
test
shl
hlt
inc
inc
cmp
xlat
mov
repz
lods
cmp
lea
xor
in
or
loop
bnd
(bad)
xchg
pop
rcl
nop
mov
sti
inc
dec
in
aam
pop
(bad)
addr16
mov
push
out
sub
aam
inc
jns
(bad)
mov
sub
jp
mov
fs
jp
ins
add
ins
aas
xchg
cs
xchg
xor
mov
inc
repnz
xchg
(bad)
mov
mov
add
jecxz
call
add
int
xchg
aam
das
xchg
shl
lods
fsubr
push
hlt
mov
xlat
mov
or
pop
hlt
xor
int
(bad)
int3
repz
out
lea
add
cmp
mov
enter
mov
movs
push
mov
loope
ret
scas
mov
lods
mov
mov
fsub
push
lock
cli
into
cmp
out
push
jp
mov
adc
out
mov
push
cs
scas
ss
dec
call
out
mov
pop
int3
mov
enter
sti
aad
xchg
pop
add
sbb
xchg
or
hlt
mov
xchg
movs
add
fcomp
clc
push
fsub
sbb
push
jbe
add
jge
fnstenv
sub
mov
in
push
leave
push
jp
inc
ins
jo
das
dec
pop
pop
inc
add
inc
mov
cmp
pop
fdiv
lods
push
outs
sbb
es
iret
das
adc
test
pop
push
or
into
xchg
retf
sub
sub
ret
call
les
sub
and
fld
mov
sbb
int3
cmp
add
or
sub
out
sbb
xchg
(bad)
bound
inc
paddw
jno
or
add
pop
add
mov
rcl
adc
in
inc
(bad)
and
cmp
cmps
mov
cmps
mov
xchg
test
or
movs
dec
cmp
fmul
cmp
(bad)
jle
sub
xlat
lock
std
mov
outs
pop
popa
les
add
loopne
xor
std
mov
jb
xchg
pop
xchg
in
mov
or
lods
(bad)
xor
fisttp
adc
pusha
loop
inc
push
inc
push
adc
or
(bad)
stos
add
repnz
movs
test
iret
sub
sbb
or
dec
nop
mov
cmp
call
inc
in
stos
xor
push
dec
or
mov
sub
popw
inc
adc
inc
je
pop
popf
add
daa
shl
fidivr
scas
push
cmp
push
cli
lea
das
pop
xchg
add
sub
loope
sbb
pop
movs
retf
dec
push
inc
mov
mov
inc
aaa
jnp
aas
xchg
inc
jns
mov
into
iret
cli
push
scas
leave
cmovno
push
jns
repnz
in
sbb
cmp
ss
or
outs
lods
xchg
sbb
sub
data16
pop
mov
fcom
sub
jns
push
jns
sti
lods
sub
sbb
scas
sub
push
add
push
mov
out
pop
xchg
shl
mov
push
ja
dec
dec
je
pop
shr
imul
and
mov
into
out
enter
repnz
add
out
in
or
mov
pop
mov
repz
mov
aaa
push
les
xor
inc
mov
stos
ins
push
(bad)
retf
or
mov
cmp
out
adc
or
out
xchg
int
add
sub
repz
arpl
jbe
mov
mov
shl
ds
movs
sti
lods
ja
ins
sbb
fisubr
and
push
je
xchg
xor
jle
mov
rcr
fsub
(bad)
sbb
imul
add
ds
or
scas
aaa
and
push
push
xchg
jne
jnp
loope
pop
inc
sbb
and
inc
or
aas
jno
xor
data16
jmp
out
or
cmps
xlat
cmp
out
jo
test
test
mov
ja
xchg
retf
mov
sbb
push
sub
xor
inc
pop
cmp
fnstsw
sub
xor
xor
aaa
xchg
mov
mov
scas
test
sbb
cmp
dec
js
xchg
call
pop
mov
in
gs
ins
aam
sbb
cmp
add
add
or
leave
call
aaa
xchg
iret
and
adc
jecxz
ret
mov
daa
es
loopne
sbb
add
jb
adc
and
inc
or
jo
or
imul
ret
jns
push
movs
(bad)
enter
add
sti
and
js
push
inc
fstp
jp
mov
or
jecxz
aaa
mov
(bad)
repnz
push
jb
mov
or
cwde
mov
add
mov
jo
xchg
push
dec
cld
rcl
mov
test
jmp
(bad)
mov
jb
aaa
repz
(bad)
or
aad
in
or
data16
in
cmp
xor
imul
cmps
sar
sbb
xor
mov
cdq
call
aad
xchg
int3
cmp
in
inc
test
xchg
das
and
fld
xor
mov
fnstenv
jbe
test
add
pop
jnp
add
mov
stos
fstp
xchg
inc
movs
out
lock
xchg
fld
dec
add
mov
xor
adc
inc
mov
xor
jnp
and
stc
sbb
sahf
mov
aas
(bad)
rol
mov
and
nop
outs
loope
xor
push
fild
mov
adc
daa
rcr
dec
(bad)
dec
mov
add
rcl
and
aaa
mov
gs
punpcklbw
dec
stos
ret
cmp
xor
into
ja
pop
mov
cmc
mul
nop
jecxz
add
jle
cmp
mov
mov
pop
push
gs
popa
std
adc
ficomp
cld
les
loope
dec
sub
pop
push
(bad)
cdq
mov
ficom
pop
ds
dec
mov
rcr
sbb
rcl
mov
or
scas
cmp
popa
xchg
xchg
fistp
sti
ds
in
xchg
push
ret
adc
push
xor
push
shl
and
sub
push
xor
cmp
pop
scas
sti
fst
enter
sbb
jecxz
mov
call
adc
iret
lods
dec
stos
stos
pop
ret
jg
push
inc
cli
push
jne
cli
mov
xlat
loope
add
mov
push
hlt
fwait
mov
or
jmp
mov
push
xor
mov
push
mov
mov
mov
test
adc
adc
mov
mov
loop
dec
xor
mov
and
ja
fild
sbb
xchg
or
or
pop
jle
jmp
cmp
bound
out
cmps
add
xor
in
xor
punpckhdq
add
jle
jmp
sahf
mov
mov
xor
in
mov
stos
imul
call
push
dec
in
aam
pop
pop
xor
fisub
or
fs
pop
hlt
or
pop
fistp
and
xor
pop
sub
push
adc
les
test
imul
scas
and
lahf
pop
jne
inc
aaa
sub
inc
loope
xor
pusha
xor
mov
mov
mov
push
sahf
popa
rcl
add
xchg
arpl
adc
mov
mov
jle
nop
fcom
dec
data16
fdivr
adc
in
ds
inc
add
popa
jp
or
jg
push
xchg
xor
shl
pop
dec
mov
mov
test
imul
sbb
inc
xor
jb
pop
lea
add
lods
cdq
loope
into
ret
test
call
push
(bad)
aad
dec
imul
int3
xchg
int3
leave
test
mov
sbb
mov
jb
or
pop
sub
or
and
dec
ror
ja
out
out
clc
pop
mov
into
and
fwait
add
clc
in
sub
add
push
dec
xchg
mov
int
dec
fcomp
vmovq
daa
push
arpl
lea
inc
bound
inc
pop
sub
and
xchg
jmp
adc
nop
push
and
in
and
test
mov
xchg
and
add
and
sub
(bad)
jecxz
nop
add
icebp
mov
adc
push
mov
adc
inc
jbe
inc
push
gs
or
xor
ds
iret
test
aas
jmp
std
(bad)
push
fadd
or
adc
mov
stc
stos
std
je
pop
and
cmp
mov
fmul
pop
(bad)
xor
inc
inc
stos
or
mov
popa
ficomp
mov
adc
movs
sub
bnd
jno
push
dec
cld
sar
sub
std
imul
pop
add
(bad)
or
adc
push
and
mov
pop
mul
(bad)
inc
add
clc
mov
les
cmps
enter
mov
xor
data16
retf
xor
adc
cmps
aad
jp
sbb
in
pop
pop
jmp
and
aad
mov
jno
mov
and
or
pop
or
dec
mov
lahf
add
bound
xchg
iret
ror
jmp
addr16
pop
inc
sub
xchg
loopne
xchg
arpl
or
pop
fwait
les
repz
mov
not
fst
fnstenv
cmp
jno
mov
fidivr
xchg
jecxz
inc
dec
jnp
(bad)
cmps
xchg
in
cmp
(bad)
fs
nop
inc
leave
rcr
mov
aaa
bound
out
adc
fcomp
scas
jne
cmp
cmc
or
xor
jecxz
mov
pop
mov
outs
cmp
scas
jl
mov
mov
leave
jae
push
cld
add
mov
out
call
pop
mov
jb
sti
sub
das
sti
movs
push
(bad)
push
mov
icebp
sbb
aas
pop
movs
sbb
cwde
sbb
push
xor
int
dec
dec
mov
int3
jecxz
jp
mov
jae
cmp
jnp
add
pop
fs
mul
fnstsw
jecxz
sahf
lock
mov
mov
imul
scas
dec
std
xchg
dec
scas
push
xchg
pop
xchg
and
cmps
out
cmc
push
jmp
mov
iret
dec
les
inc
loope
or
cmp
ret
dec
ret
sub
jle
inc
pop
pop
mov
sub
out
xchg
xchg
xor
pop
cmp
mov
cmc
lds
push
sub
cmp
adc
mov
mov
nop
das
push
jecxz
jl
mov
nop
ja
sub
pusha
test
jnp
fisub
test
rol
mov
cmps
push
xlat
and
in
fisttp
inc
imul
fs
loopne
pop
add
adc
adc
in
jmp
sub
rcr
aam
pop
fld
pop
cmp
jae
jno
and
pop
mov
loope
dec
jp
jmp
sub
stos
cmp
out
nop
out
test
jmp
bound
add
loope
ret
jne
(bad)
addr16
lods
sbb
lods
leave
dec
movs
pop
cmc
cwde
pushf
or
sbb
inc
lods
and
mov
pop
and
iret
mov
inc
daa
sub
div
arpl
shr
adc
inc
cmp
or
ss
jp
lock
aaa
sbb
repz
adc
dec
mov
pop
imul
sbb
cmp
mov
sbb
int3
or
mov
mov
push
leave
popa
stos
sbb
int
scas
mov
imul
dec
ret
pop
sub
fldcw
xor
push
gs
cld
push
pop
xchg
daa
gs
add
lds
jecxz
pop
mov
push
sub
cli
fstp
pause
push
add
mov
push
xor
popa
daa
ins
xchg
inc
mov
movs
or
xor
and
push
fisub
xchg
push
cld
(bad)
mov
xchg
nop
int3
or
scas
push
lods
jl
data16
dec
push
lods
sub
cmp
pop
es
ja
mov
mov
xchg
sub
or
out
test
je
inc
fadd
mov
xor
add
xor
js
jo
cwde
or
shl
mov
js
stos
dec
jns
inc
sti
adc
inc
mov
mov
cs
mov
dec
or
xor
mov
sti
mov
sbb
pop
mov
xor
mov
out
aad
mov
dec
in
repnz
push
cmp
xor
add
test
or
test
jecxz
xor
sub
repnz
lods
jp
es
(bad)
cmps
lahf
adc
mov
sub
aas
sbb
out
mov
cmp
xchg
cmp
mov
mov
sbb
ins
out
mov
test
test
fsubr
inc
mov
sub
outs
xchg
xor
hlt
cmp
pop
arpl
mov
shl
jl
inc
mov
pop
movs
stc
add
and
imul
dec
jmp
pusha
fcmovbe
repz
es
fwait
sub
xchg
mov
leave
xor
push
pop
loop
rcl
pop
data16
mov
lahf
cmp
js
sub
dec
inc
pop
sar
mov
rol
aaa
jmp
or
rcl
and
and
iret
(bad)
jge
les
jo
jb
icebp
out
iret
xor
mov
pop
call
lds
xor
jne
mov
enter
cli
jmp
xchg
outs
xor
enter
nop
into
mov
imul
dec
mov
jo
push
clc
mov
cmp
dec
pop
inc
mov
das
sar
scas
bound
sub
in
xchg
cmp
jns
adc
mov
arpl
pushf
int3
jbe
lods
or
test
js
ror
jecxz
(bad)
or
dec
lea
pop
pop
mov
inc
fnstcw
cmps
leave
inc
pop
cli
xor
mov
add
popf
bound
rol
dec
jbe
sbb
jmp
xchg
push
mov
stc
xor
lods
add
push
fstp
adc
jb
adc
sub
clc
mov
nop
in
adc
ins
mov
imul
cmp
ss
fucomp
mov
xchg
out
xor
mov
pop
cmps
adc
(bad)
push
sbb
mov
mov
loopne
jl
sub
and
lahf
push
clc
lods
cmp
mov
and
int
loop
or
push
fadd
in
jne
sbb
pop
iret
and
in
jmp
loope
into
out
pop
daa
adc
adc
adc
push
(bad)
lahf
sub
sub
inc
popf
test
sbb
aad
inc
aad
sbb
push
sahf
cs
mov
jbe
dec
addr16
arpl
sahf
das
mov
or
(bad)
sti
pop
push
and
fwait
mov
xor
xchg
adc
fnstsw
cmp
popf
xor
pop
mov
and
inc
int3
popa
cwde
test
xchg
mov
xor
test
mov
popf
int
cwde
push
mov
jmp
movs
adc
mov
xchg
jae
(bad)
cmc
mov
cmp
cdq
test
mov
sar
dec
adc
retf
cmp
pusha
and
(bad)
sahf
mov
nop
xchg
cmps
mov
sub
pusha
lock
out
add
xchg
enter
(bad)
add
in
mov
cli
fnstenv
adc
das
inc
push
jae
sbb
mov
xor
mov
xchg
aas
sbb
and
jno
sbb
imul
rol
sub
cmps
data16
in
add
movs
mov
inc
xchg
in
bound
xor
cli
xor
push
inc
cld
adc
mov
popf
sar
das
mov
je
rol
or
sar
cmp
and
push
mov
cld
mov
dec
xlat
ja
and
popf
mov
ins
test
rcl
ja
cmps
push
pop
es
setae
fist
mov
cmp
arpl
not
jne
adc
fs
ret
sub
adc
xchg
loop
xor
and
inc
or
fwait
ins
fcom
and
pusha
dec
pop
cdq
imul
int3
enter
and
or
jo
int
push
and
mov
mov
mov
(bad)
xchg
add
jl
call
cdq
cdq
shl
push
in
dec
shl
int
ret
scas
retf
out
enter
aas
out
imul
out
pop
and
adc
adc
mov
movs
inc
mov
fnsave
inc
int3
adc
in
mov
jecxz
push
push
inc
mov
(bad)
aam
inc
mov
cmp
jge
cmp
rol
sub
dec
cli
pop
add
mov
mov
cwde
jg
and
mov
jae
jle
sub
call
push
scas
cmp
out
xchg
push
daa
mov
adc
adc
jg
je
pop
and
pop
jb
lahf
(bad)
mov
cmc
jge
sbb
mov
mov
ret
inc
rdtsc
test
imul
xchg
in
scas
mov
cmps
push
popa
push
bound
retf
aam
jbe
(bad)
lds
pop
imul
neg
jne
xor
(bad)
add
xlat
inc
sub
and
cdq
fs
outs
jmp
ja
hlt
sub
xchg
rcr
enter
inc
or
(bad)
jmp
lds
add
fstp
mov
test
ss
(bad)
adc
or
(bad)
fild
mov
xor
inc
enter
push
mov
leave
adc
pop
sub
sub
pop
push
sbb
add
in
js
add
dec
or
aad
int
add
es
cs
mov
add
sbb
mov
jnp
mov
in
popa
push
adc
pop
ror
fld
sub
dec
and
push
aaa
push
dec
scas
(bad)
sti
mov
outs
pop
mov
nop
sub
fst
push
sub
xor
mov
pop
sahf
cmps
xor
in
add
icebp
inc
sar
popa
mov
pushf
rcr
sbb
mov
pop
cmc
adc
retf
sti
xchg
inc
mov
cwde
inc
push
cmp
lock
cmp
inc
lea
mov
shr
sbb
adc
mov
enter
add
inc
scas
sub
test
xchg
in
call
inc
jle
cmps
scas
(bad)
ins
mov
sub
scas
xchg
sub
mov
repz
jmp
fisttp
adc
cmp
xor
scas
fisttp
jns
leave
mov
push
stos
cmc
sti
cmps
cmp
aad
scas
mov
cmps
cmp
cmps
test
iret
scas
aad
cmp
(bad)
ss
push
(bad)
or
test
call
scas
mov
ds
push
nop
nop
sti
out
idiv
cmp
daa
out
cdq
mov
clc
or
mov
xor
test
mov
xchg
sahf
mov
jno
test
mov
imul
cmp
aam
xor
sbb
adc
push
lds
jno
cmp
mov
mov
sub
push
mov
stos
icebp
je
out
dec
dec
(bad)
mov
and
jo
shl
xor
push
or
or
pop
push
aam
arpl
or
mov
pop
movs
call
push
test
mul
jae
inc
test
mov
mov
mov
jo
or
not
into
cmc
fnsave
lods
dec
adc
iret
ficomp
sbb
push
or
or
adc
fist
(bad)
cmc
jno
push
mov
mov
into
push
rol
xor
and
ret
imul
fidivr
rcl
inc
mov
mov
xlat
lock
add
icebp
cmp
push
in
mov
fiadd
and
jle
ins
sahf
gs
push
sub
clc
inc
movs
xor
adc
ins
pop
neg
or
adc
push
bound
jmp
and
mov
adc
xor
enter
sub
and
(bad)
retf
call
mov
push
jecxz
sbb
outs
mov
std
mov
sbb
les
mov
mov
cmps
inc
cmp
call
test
popf
lods
jp
add
dec
rcl
cli
aaa
fbstp
mov
and
aaa
outs
xor
push
jl
xor
pop
cs
lods
imul
jge
cmc
add
lock
fs
test
dec
adc
sub
fimul
fcomp
dec
sbb
sbb
push
aaa
daa
pop
popf
add
retf
xchg
xchg
ffree
and
xor
add
sbb
inc
jae
add
dec
mov
jmp
pushf
inc
dec
sub
mov
dec
daa
xlat
movs
xchg
leave
mov
push
push
sbb
pop
ror
sub
(bad)
adc
cmp
popf
loop
sub
ja
jmp
jns
push
hlt
out
sahf
inc
gs
dec
adc
jnp
lods
ret
call
push
and
sti
cld
xor
jb
inc
or
stos
push
popa
in
std
cmp
pop
cmc
lods
xor
push
xchg
dec
push
es
jge
push
ds
nop
mov
cmp
xchg
mov
fld
mov
pop
xor
in
dec
or
sub
retf
arpl
dec
push
sbb
(bad)
arpl
or
gs
cmps
lods
mov
cli
repz
push
fistp
test
cmps
fnsave
ret
rcl
dec
inc
loopne
repz
jns
cli
mov
xor
adc
ds
push
xchg
retf
cld
js
xchg
mov
cmps
stos
fld
push
push
push
call
mov
dec
push
cdq
pop
jns
cmp
mov
jns
mov
les
or
or
jae
das
sub
or
inc
ds
and
aam
lea
cmp
fisttp
add
loope
ret
xchg
jae
stos
mov
popa
xchg
inc
das
push
jg
dec
fimul
rcr
push
mov
fadd
jo
jl
in
push
and
fnstsw
addr16
clc
adc
ror
pop
sub
jno
cmp
ss
sbb
lods
xchg
into
jge
iret
loopne
js
pushf
sbb
add
mov
ins
call
inc
jle
jae
cmp
shl
int3
(bad)
jns
xchg
out
xchg
int
jb
ficomp
add
mov
sbb
add
out
fldenv
xchg
sub
xchg
and
lods
mov
jmp
movs
movs
std
jne
add
jp
into
stc
and
push
ins
cmps
adc
and
js
inc
in
fnstsw
enter
adc
xor
aaa
sbb
inc
lds
cmps
test
sti
xchg
or
xor
dec
mov
push
mov
aas
push
xor
out
sti
mov
and
movs
add
xchg
out
and
call
pusha
lock
idiv
push
inc
into
add
push
cmp
jmp
fisubr
sub
int3
xchg
sbb
into
hlt
clc
cmp
mov
cmp
adc
add
aaa
lea
shl
sub
shl
mov
jl
enter
cmps
mov
pop
clc
inc
int3
mov
jnp
jns
mov
stos
pop
rcl
push
jecxz
sbb
xchg
jmp
retf
add
test
outs
rcl
aad
not
inc
(bad)
and
es
pop
cdq
jo
in
out
pop
adc
shl
or
(bad)
out
adc
push
push
cmp
xchg
jle
(bad)
ins
and
sbb
jnp
lods
adc
mov
sub
jmp
cmp
sbb
(bad)
idiv
in
out
scas
clc
mov
push
pop
dec
or
cmps
add
arpl
fild
jle
jmp
ins
cli
test
or
mov
mov
jae
mov
or
pop
lock
or
(bad)
in
(bad)
push
ja
jo
mov
inc
ss
mov
ficomp
or
std
mov
in
adc
stos
pop
and
shl
js
and
cmp
mov
xor
sub
and
xchg
sbb
xor
sahf
adc
outs
cld
div
push
int3
adc
dec
push
bound
add
xor
outs
in
xor
sub
mov
dec
sbb
fsub
push
inc
adc
movs
jl
cwde
nop
ins
xchg
mov
loopne
icebp
dec
sub
movs
dec
cmps
ins
adc
inc
push
movs
pop
jb
add
xchg
shl
mov
lahf
enter
sub
punpcklbw
cmps
xchg
or
dec
sbb
push
jp
mov
cli
xchg
sbb
sbb
aam
and
jl
mov
fstp
sub
adc
xlat
inc
out
and
mov
in
fiadd
ficom
das
dec
jmp
movs
push
jbe
jne
or
adc
adc
adc
ins
(bad)
(bad)
push
xchg
sub
xlat
ds
and
mov
ror
shr
shl
add
cmp
jne
inc
retf
ret
pop
test
sbb
jno
fwait
and
out
pop
dec
sbb
(bad)
ss
(bad)
sub
cld
inc
mov
mov
mov
xor
pusha
and
sub
mov
jle
test
cmp
mov
(bad)
inc
nop
xor
and
ss
iret
inc
ja
push
dec
call
movs
je
retf
fbld
lds
imul
dec
xchg
ret
imul
fs
shl
out
and
(bad)
movs
mov
sub
dec
sub
and
pop
sub
scas
shl
jae
xchg
mov
test
push
cmp
loope
mov
test
in
sub
test
daa
mov
or
push
arpl
(bad)
out
adc
xchg
push
loopne
hlt
into
jne
int3
push
sbb
mov
pop
(bad)
mov
call
ds
pushf
popa
idiv
push
sub
mov
es
in
mov
(bad)
push
jl
in
adc
push
jnp
push
data16
mov
xor
cmps
ds
test
push
or
push
sbb
and
dec
and
or
jp
pushf
xchg
fcomp
dec
cdq
fcomp
cdq
xchg
jb
dec
sahf
cdq
(bad)
imul
sub
test
mov
cmp
adc
push
pop
sbb
ja
sahf
fsub
loope
cmc
test
dec
jge
push
(bad)
ss
ins
mov
(bad)
int3
mov
cmp
inc
push
mov
jo
add
test
bound
stos
shl
cmp
inc
cmp
out
sbb
jp
icebp
movs
cmp
popf
dec
and
push
fucom
fs
daa
mov
movs
adc
pop
xchg
aas
jb
addr16
sub
and
mov
xchg
fld
into
repnz
or
repnz
xchg
push
cmp
push
push
mov
in
adc
xrelease
cmp
xchg
mov
mov
nop
inc
adc
dec
fnstsw
dec
in
addr16
sub
(bad)
pop
jl
enter
sbb
movs
(bad)
xor
push
call
mov
xchg
std
push
call
lahf
cwd
call
fst
loop
mov
sbb
xchg
push
pop
inc
sub
jb
mov
lahf
push
inc
popa
jns
push
mov
fist
stos
test
mov
push
mov
ins
lods
pop
add
mov
dec
in
ds
push
pop
inc
mov
jle
leave
mov
ins
mov
hlt
and
add
hlt
add
fdivr
cmp
out
out
pop
jo
repnz
movs
xchg
xor
dec
xor
push
xchg
es
jb
aas
cwde
popf
out
jecxz
push
or
stos
stos
jl
ffree
and
test
jp
retf
retf
sti
(bad)
inc
pop
mov
lea
xor
push
loope
not
gs
mov
daa
mov
or
add
add
jmp
and
je
div
or
loope
xchg
les
and
stos
iret
nop
rol
dec
mov
dec
stos
das
add
neg
sahf
push
sbb
in
and
jbe
or
mov
and
sbb
enter
fadd
xor
stos
les
sbb
xor
bound
or
mov
sub
nop
dec
in
shl
mov
push
pop
sub
loopne
or
pop
inc
push
movs
xchg
das
addr16
jmp
js
cmp
movs
ds
and
xor
(bad)
xchg
lods
mov
xchg
popf
ss
call
jne
jae
ss
xor
in
lods
mov
dec
sbb
movs
bsf
pop
test
shr
fsub
mov
cmp
scas
push
and
movs
xchg
ja
stos
retf
rcr
pop
cmp
fdiv
inc
movs
imul
xor
mov
mov
mov
pusha
mov
loop
add
out
out
cwde
push
jbe
enter
rcr
add
jmp
xchg
pop
xchg
inc
enter
mov
cmc
sbb
iret
adc
inc
jp
add
(bad)
mov
xor
popf
jp
xor
out
jns
retf
and
mov
xchg
scas
mov
pop
mov
js
mov
mov
arpl
jle
xchg
jno
les
mov
jo
mov
int
out
popa
mov
mov
mov
cmp
jnp
lds
cmp
rcl
and
cdq
jp
ins
ins
or
cmps
add
aaa
or
cmp
push
test
ret
shl
jo
fwait
in
frstor
pop
mov
icebp
sub
pop
daa
std
add
dec
dec
inc
inc
jle
loope
mov
pop
sbb
xor
sub
nop
push
jge
jnp
mov
jno
sbb
xchg
into
cwde
shl
bound
out
rol
mov
xchg
hlt
mov
mov
retf
mov
test
in
imul
leave
xchg
pop
ss
retf
(bad)
int
in
fs
pop
(bad)
mov
pop
add
pop
xchg
or
cwde
jb
pop
fwait
stc
inc
lahf
rol
jmp
neg
push
cmp
lods
mov
and
dec
inc
inc
mov
jg
lods
push
jne
jge
pop
jmp
mov
xor
repz
sub
cmp
daa
inc
mov
jecxz
pop
jg
(bad)
xchg
lods
sbb
xchg
(bad)
call
(bad)
(bad)
sub
lock
icebp
mov
hlt
inc
fadd
push
mov
pop
mov
mov
int3
cmc
mov
test
sahf
mov
pop
in
repnz
mov
test
scas
cmp
ror
lods
(bad)
enter
mov
adc
inc
jmp
lahf
xchg
outs
test
ds
mov
lock
jns
in
int
mov
xor
popa
call
mov
test
aaa
movs
inc
fld
or
in
jge
sub
sub
nop
pop
call
ret
mov
mov
inc
shl
jp
mov
int3
inc
iret
out
adc
sbb
sub
pop
cmp
jg
into
push
cli
mov
repz
add
outs
in
mov
and
xor
stos
scas
mov
inc
gs
stos
mov
add
cmp
jae
inc
sub
int3
dec
call
mov
ins
adc
push
or
pop
xchg
cmc
hlt
fldenv
popa
sbb
cdq
imul
iret
lods
dec
stc
xchg
test
in
mov
cmp
sar
push
std
add
popf
loop
jp
stos
or
pop
lock
mov
sub
hlt
mov
xor
(bad)
adc
repnz
jmp
pop
std
(bad)
xlat
or
sub
js
(bad)
repnz
loop
js
pushaw
push
jmp
sub
dec
in
and
stos
adc
movs
dec
push
bound
xchg
repz
fist
mov
aad
imul
jg
add
repnz
dec
pop
jge
xor
imul
or
xchg
mov
xor
(bad)
scas
xor
jecxz
bound
ds
mov
or
cmp
dec
sahf
in
inc
fnsave
int3
shr
pop
mov
adc
cld
and
dec
retf
retf
add
push
ret
push
mov
xchg
dec
cmp
out
cmp
data16
mov
in
jge
sbb
ror
sub
mov
jmp
sti
leave
pop
ret
icebp
(bad)
sbb
test
push
shl
mov
lock
xchg
xor
int
xchg
xor
mov
(bad)
mov
repnz
adc
mov
inc
pop
in
xchg
or
mov
rol
mov
sub
and
cmc
cmps
ins
pop
clc
mov
aaa
dec
jbe
cmp
adc
and
(bad)
gs
pop
in
xor
rcl
pop
imul
push
out
cmp
jo
ror
pandn
jmp
pop
push
ins
mov
gs
xor
out
xchg
add
sub
fidiv
test
push
loop
mov
loopne
push
mov
cmp
adc
mov
dec
pop
mov
out
pushf
popf
scas
sub
int
(bad)
mov
sub
pop
pop
add
es
in
in
repnz
dec
jno
xchg
pop
pop
in
sbb
sub
int
mov
xchg
mov
ficomp
pushf
push
jg
cmp
ins
aad
jae
out
ins
prefetchw
or
pop
leave
div
dec
fdiv
push
je
loopne
neg
push
cmps
es
xlat
inc
sbb
adc
inc
and
je
dec
mov
adc
mov
das
daa
mov
mov
arpl
or
jl
mov
sub
es
dec
mov
jl
retf
pop
test
mov
jnp
sub
cs
mov
xchg
xor
cmp
imul
repz
cmp
mov
fbstp
push
scas
push
fidiv
inc
pop
js
sbb
shr
ss
sbb
mov
repz
add
arpl
pop
inc
jp
mov
mov
mov
outs
cdq
xor
test
popa
inc
xchg
inc
mov
push
cdq
aad
outs
mov
pop
(bad)
jmp
ds
mov
xchg
mov
mov
(bad)
enter
adc
test
dec
pop
mov
and
repnz
int
jle
mov
xchg
cmp
movs
sbb
retf
inc
gs
or
xchg
xchg
cmp
cmp
adc
stos
pop
rcr
cmp
movs
cmp
aad
scas
cmp
mov
sbb
out
out
dec
mov
adc
mov
adc
enter
ret
pusha
pop
lods
sbb
mov
dec
aad
adc
xor
cmp
jnp
stc
push
mov
ror
inc
adc
jl
xor
loop
or
idiv
int
je
pusha
and
inc
movs
fcom
xchg
(bad)
ficomp
adc
sbb
cmp
mov
adc
dec
scas
leave
fist
inc
xchg
xlat
popa
sbb
pop
jno
sub
lods
fcmove
adc
bnd
int3
pop
inc
in
out
jnp
pop
rcr
mov
push
(bad)
cli
repnz
(bad)
mov
xchg
inc
dec
ret
add
add
xchg
daa
and
xchg
retf
daa
xor
test
mov
jmp
mov
add
jo
outs
adc
add
sub
sbb
jbe
stc
outs
inc
mov
xchg
sar
lahf
adc
adc
int
mov
inc
nop
rcr
mov
je
addr16
push
pop
adc
push
and
in
data16
fcmovbe
in
popaw
sbb
mov
dec
mov
fisub
sar
xchg
call
mov
sub
push
xchg
inc
push
pop
and
sbb
xchg
call
dec
cmps
adc
dec
jp
jb
or
cmps
sub
jno
add
cli
iret
or
cmp
cdq
mov
cmp
jb
les
cmp
push
or
repnz
(bad)
xchg
js
test
stos
mov
cmps
pop
call
mov
sbb
dec
fcomp
movs
loope
pop
inc
jno
adc
test
mov
inc
and
sub
sbb
leave
mov
xchg
sub
imul
xor
stos
pop
stos
xor
push
popf
(bad)
and
add
inc
push
push
call
push
inc
out
xchg
push
bound
mov
retf
pop
mov
adc
(bad)
into
pop
mov
pushf
pop
pop
dec
dec
shl
fstp
push
jbe
dec
pop
xor
ins
mov
and
rcr
scas
xchg
dec
push
gs
xchg
sbb
xlat
adc
xchg
rcr
movs
xor
dec
mov
(bad)
sbb
test
push
sahf
sbb
mov
int
daa
std
and
ins
les
ins
adc
retf
fdiv
retf
mov
std
adc
xchg
out
or
cmps
iret
push
dec
sub
aas
jmp
sbb
dec
pop
loop
add
cmp
fsub
jns
xor
rol
dec
sahf
xchg
lahf
push
test
add
and
adc
aaa
sbb
das
stos
and
and
jo
mov
sub
mov
mov
jl
sub
xchg
adc
stos
mov
push
fadd
pop
pushf
push
lods
push
push
rcr
sbb
test
jne
es
jge
fsubr
push
mov
cs
jmp
mov
mov
(bad)
fdivr
inc
fld
(bad)
mov
int3
aas
xchg
repnz
adc
jg
dec
or
lahf
jb
pop
inc
scas
mov
xor
jp
repnz
or
mov
mov
add
ss
ss
inc
jo
mov
lods
stos
add
call
fsubr
les
xchg
adc
ror
and
jp
mov
int
cmp
scas
(bad)
aam
xor
sub
shl
fst
xchg
icebp
arpl
add
imul
sub
inc
lds
es
and
std
fisubr
jg
or
fmul
pop
out
jp
mov
fwait
push
cmp
mov
in
test
pop
shl
adc
outs
cmp
mov
inc
cmp
imul
dec
xchg
imul
sbb
(bad)
jbe
push
or
arpl
mov
mov
inc
test
sub
jnp
push
jmp
arpl
int3
cld
fdivr
inc
ins
(bad)
rep
jmp
add
xor
out
scas
push
in
out
mov
cwde
push
out
push
mov
push
stos
test
aas
mov
imul
xchg
sub
out
and
imul
mov
es
mov
sub
jmp
mov
jb
int3
jne
cdq
ret
xchg
cs
pop
sub
inc
mov
fcmovne
(bad)
adc
push
sub
std
jb
adc
mov
cmp
js
mov
stos
inc
cmp
aad
pop
mov
cmp
pop
mov
xor
adc
repz
inc
or
mov
inc
sub
dec
mov
imul
and
call
pop
shr
mov
mov
cli
mov
mov
ja
test
loop
scas
mov
out
mov
popa
(bad)
sub
mov
jmp
mov
bound
(bad)
test
add
mov
in
add
push
mov
xlat
cmp
retf
retf
mov
mov
sar
aaa
ss
jbe
xchg
pop
xor
fs
out
ficom
movs
fs
dec
ficomp
xchg
sahf
mov
sbb
inc
daa
into
pop
pop
sub
jl
fcomp
mov
jns
call
jecxz
dec
jne
sub
rol
sub
scas
mov
fstp
dec
neg
or
xchg
and
or
shl
dec
scas
dec
(bad)
cwde
test
xor
bnd
stos
xchg
cmp
test
adc
popf
cmp
stos
mov
cmps
into
repnz
xchg
stos
push
xchg
pop
sub
adc
out
xor
mov
lea
leave
push
pop
adc
aad
ins
shl
mov
mov
rcr
jle
js
cld
push
dec
xchg
in
mov
xchg
mov
imul
mul
mov
push
mov
pop
xor
cli
inc
aaa
cmp
mov
mov
(bad)
repz
ret
push
push
dec
test
dec
imul
rcl
rcr
dec
arpl
je
add
push
(bad)
cmp
retf
aad
mov
vminpd
mov
pushf
pop
popf
nop
rcl
int3
push
sbb
sub
dec
loop
mov
inc
repnz
das
test
cdq
mov
or
fisub
adc
into
mov
outs
and
mov
jmp
in
or
outs
jb
fisub
jno
mov
jmp
sub
mov
into
xchg
imul
into
add
jp
inc
fwait
pop
and
push
xor
lods
sbb
pop
inc
jne
mov
out
jecxz
movs
mov
aad
xchg
ret
fs
adc
stc
out
sub
movs
(bad)
sbb
js
clc
ins
hlt
dec
mov
fdiv
mov
add
ins
inc
dec
adc
sbb
scas
rol
jmp
hlt
outs
push
fcom
call
xchg
retf
rol
xchg
xchg
shr
pop
cmp
shl
pop
shl
or
xor
mov
sbb
and
pop
dec
mov
cmp
dec
jp
push
mov
stos
jp
sub
xchg
jmp
pop
outs
movs
in
test
xor
dec
sbb
xchg
repz
pushf
(bad)
cdq
in
out
ins
fcom
pop
jge
in
mov
retf
imul
cmp
xchg
jg
push
scas
out
(bad)
or
sbb
lods
inc
(bad)
arpl
mov
das
aad
or
mov
push
or
mov
mov
sub
push
and
scas
cmp
xchg
pop
loope
movs
and
nop
jg
dec
loop
lock
data16
pop
repz
dec
retf
mov
sbb
aad
retf
dec
push
mov
fadd
in
inc
clc
jbe
adc
lahf
push
xchg
in
movs
call
mov
mov
push
xlat
mov
mov
jmp
sbb
mov
daa
fldpi
lods
sbb
sar
movs
xchg
mov
adc
ins
xor
(bad)
lock
or
add
retf
stos
dec
xor
inc
das
in
popa
or
sbb
in
(bad)
rcr
push
mov
movs
sbb
jmp
inc
and
inc
div
clc
cmp
xchg
jae
mov
mov
daa
outs
add
adc
ret
fidivr
xchg
xor
push
pop
xor
cdq
cld
es
retf
dec
push
xchg
pushf
aas
das
mov
push
push
(bad)
aaa
pop
lods
mov
or
sbb
mov
sub
dec
lock
push
push
data16
jecxz
and
aam
nop
hlt
sub
movs
mov
nop
arpl
xchg
xor
and
shl
add
dec
mov
mov
pop
repz
push
cli
mov
aas
fild
jmp
sub
adc
adc
xor
jae
inc
dec
jb
or
inc
mov
test
ret
mov
es
lods
cmp
out
inc
cmp
add
jle
push
xlat
ins
mov
fsub
sub
(bad)
cs
xor
dec
retf
mov
clc
sub
xchg
mov
pop
jno
out
xor
pop
fisttp
and
or
jns
sbb
push
mov
push
or
cmps
ja
(bad)
xor
(bad)
lds
pop
sub
xor
xchg
mov
jnp
std
pop
out
xor
jns
inc
in
popa
dec
nop
inc
mov
pop
add
jmp
ror
aam
sti
hlt
pop
hlt
mov
(bad)
inc
push
xchg
movs
ss
push
stos
mov
jl
and
cmp
cli
xlat
mov
and
add
dec
pusha
jnp
cld
out
adc
daa
adc
jge
mov
aam
std
xor
pop
jl
js
mov
mov
mov
add
out
sbb
sub
cmp
(bad)
clc
and
arpl
cmps
shl
adc
imul
cmp
in
cmp
inc
cli
mov
ja
ror
pushf
dec
rcr
dec
cwde
ret
jecxz
fisttp
test
lahf
test
fsubr
xchg
mov
jbe
outs
xor
shl
sub
mov
xchg
inc
sub
jnp
shl
jge
lds
sub
out
jne
adc
iret
clc
test
adc
mov
adc
pop
outs
idiv
ss
push
lea
stos
sub
mov
(bad)
imul
jmp
cmp
call
sub
(bad)
neg
pop
cmps
lods
and
ja
(bad)
outs
lods
pop
jae
lock
sbb
or
mov
out
jmp
push
push
movs
psubd
ins
leave
cmp
aaa
fmul
or
pop
nop
mov
adc
and
sar
loop
icebp
inc
das
push
inc
xor
mov
mov
(bad)
out
shl
xchg
ja
xchg
stos
mov
loope
sbb
sbb
icebp
fld
xchg
mov
push
xor
loope
in
inc
repnz
lock
mov
xchg
jnp
fnstsw
dec
and
loope
sbb
popa
lock
call
repz
test
lahf
mov
scas
push
ja
je
mov
pushf
lods
mov
in
jns
bound
movaps
addr16
scas
lds
repz
sbb
push
push
sbb
mov
mov
iret
jecxz
lahf
mov
fs
mov
sar
and
stc
pop
cwde
pop
sar
push
test
sub
rcl
inc
imul
aas
cmc
rol
(bad)
idiv
or
mov
ss
mov
scas
jne
iret
dec
add
jg
ins
cmp
movs
loope
stos
or
adc
mov
xor
mov
adc
mov
jne
push
fs
enter
xchg
scas
cwde
jae
jle
xor
pop
test
add
ins
xchg
mov
icebp
pop
dec
xchg
mov
or
mov
xor
or
sub
nop
out
mov
push
js
fisub
xchg
imul
mov
add
loop
hlt
dec
scas
outs
pop
das
pop
xor
sub
xor
and
in
outs
lock
mov
jle
test
adc
push
in
add
cs
aad
loopne
clc
jecxz
aaa
and
mov
not
dec
add
and
fisubr
dec
cmp
fidiv
and
pop
retf
call
xor
daa
xchg
shr
pop
push
mov
sub
push
movhps
clc
and
(bad)
aaa
sti
mov
and
in
call
not
xlat
mov
push
pushf
inc
sbb
fist
pop
lods
popa
mov
xor
jnp
repz
dec
rcl
imul
fild
movs
inc
xor
bound
call
inc
popa
sub
fisttp
push
je
or
stos
in
movs
jns
popf
mov
dec
cmp
lock
mov
aaa
fwait
leave
sti
cdq
add
daa
ss
lods
cmp
dec
jp
in
or
sahf
ins
mov
lahf
popf
xor
sub
leave
pop
cmc
add
push
push
stos
or
sub
dec
xchg
ins
stos
cmp
test
ins
mov
xor
cs
stos
dec
in
jmp
push
push
mov
loopne
xchg
outs
out
xlat
shl
and
mov
mov
sti
daa
pop
fucomip
dec
movs
sub
inc
ds
or
lds
push
std
jno
fisub
sbb
shl
es
push
mov
hlt
dec
in
push
nop
mov
inc
xchg
cmps
adc
rcr
inc
mov
pop
loop
pop
mov
cmp
int
jmp
and
(bad)
xchg
inc
outs
ret
pop
adc
int3
jmp
hlt
hlt
(bad)
dec
test
dec
loope
or
sar
jo
sbb
cmps
retf
cld
cwde
outs
fidiv
jp
popa
pop
cmp
daa
lods
xor
cmp
aaa
aam
xor
in
cld
es
push
xchg
fwait
das
and
cli
or
fadd
das
arpl
xchg
movs
mov
adc
mov
outs
add
ss
cld
ret
pop
arpl
aas
xchg
jl
inc
(bad)
mov
sbb
in
outs
xchg
cmp
mov
mov
pop
shr
mov
rol
dec
ret
loopne
fs
dec
xor
mov
movs
or
adc
push
adc
(bad)
rcl
sub
jo
mov
int3
push
add
std
cmp
stc
lods
frstor
push
sub
stos
sbb
clc
and
fucom
cdq
mov
add
ins
scas
xor
jle
sbb
(bad)
pusha
jle
stc
addr16
sbb
cmp
sub
fidivr
cmp
mov
pop
jo
ret
iret
mov
jns
push
retf
nop
mov
iret
jbe
rcl
xor
adc
rol
cmc
outs
mov
inc
add
inc
idiv
jns
test
sahf
fisttp
mov
popf
inc
test
daa
dec
adc
jecxz
mov
rcr
cld
or
jb
add
adc
out
mov
sub
lods
ss
push
dec
sti
je
mov
dec
mov
(bad)
les
mov
push
cmp
stos
loope
adc
test
push
bound
es
mov
inc
sbb
mov
jae
mov
mov
loope
sbb
sbb
leave
and
stos
rol
pop
(bad)
mov
and
out
icebp
or
sub
dec
mov
fcom
adc
mov
sub
mov
in
fisub
jl
mov
sub
out
test
push
and
sahf
mov
leave
pop
(bad)
std
xchg
pop
test
or
shr
xchg
stos
iret
leave
test
push
fmul
xor
jnp
cmp
leave
int3
mov
and
outs
out
fisttp
ins
mov
dec
in
dec
sub
cmp
jp
pushf
movs
dec
popa
and
pop
or
outs
fiadd
int
push
aas
sti
mov
xchg
or
xchg
idiv
cs
movs
cmp
sbb
(bad)
lahf
mov
pop
adc
ins
sub
sbb
into
imul
cmp
xor
loope
push
push
std
dec
adc
lea
xchg
ja
xchg
mov
dec
loop
dec
int
cmp
adc
movs
bound
kmovb
imul
in
nop
bound
jmp
push
call
xchg
ja
jns
stc
je
dec
mov
fidivr
inc
rcr
and
std
adc
int
es
inc
pop
add
popa
neg
fcom
mov
mov
sti
dec
jnp
jl
int3
retf
mov
sbb
addr16
cs
icebp
test
fistp
inc
jbe
xchg
imul
xchg
mov
leave
loopne
pop
(bad)
iret
inc
xchg
into
ret
xchg
or
sbb
leave
and
in
and
lds
in
jb
jge
sub
hlt
push
outs
jp
cli
sbb
sbb
ret
(bad)
jnp
cld
or
idiv
mov
inc
cmp
arpl
mov
inc
nop
lea
jp
sbb
icebp
test
imul
push
push
sub
and
pop
xchg
gs
das
in
push
lds
ror
fild
push
inc
stc
mov
fst
add
sbb
fbld
push
bnd
xchg
enter
pop
jmp
aad
xchg
enter
scas
imul
sub
sbb
bound
aad
xor
imul
repnz
and
add
mov
outs
add
and
add
clc
lahf
sti
lahf
jne
jge
push
jnp
sar
rcr
jp
outs
and
movs
xchg
loope
pop
pop
sub
xchg
xchg
push
aas
aam
aam
fnstsw
neg
mov
mov
fadd
out
cld
stc
rep
xor
call
mov
movs
add
push
pop
stos
mov
mov
sbb
sbb
arpl
lds
fisttp
inc
sub
(bad)
mov
cwde
and
call
or
mov
cmovne
ss
nop
mov
in
std
js
sub
pop
cld
repz
jne
push
xchg
inc
ficom
pop
cld
nop
pop
jle
ror
mov
push
push
xlat
in
push
(bad)
adc
xchg
ds
fwait
mul
outs
sahf
inc
xchg
or
addr16
cdq
ja
dec
cld
push
cwde
bound
mov
das
pop
add
cli
out
leave
das
mov
retf
inc
xor
or
dec
mov
fstp
daa
mov
call
test
pop
das
xor
sub
aas
fldcw
adc
rol
mov
cmps
xchg
sbb
imul
and
inc
repnz
inc
jmp
arpl
and
inc
repz
out
ins
xor
inc
stc
cmps
retf
adc
dec
mov
or
fistp
int
inc
std
jae
inc
mov
xchg
dec
test
rol
lods
xchg
fbstp
sbb
fist
lahf
sub
mov
pop
scas
xchg
(bad)
xor
fld
jp
push
fs
push
and
nop
daa
sbb
add
push
xchg
pop
adc
ss
fdivr
repz
sub
push
addr16
nop
mov
sti
mov
fcmovnb
inc
(bad)
push
cdq
cli
adc
sbb
call
cmp
rcr
sbb
push
inc
jg
or
xchg
(bad)
jge
call
push
test
out
(bad)
jp
add
popf
ret
call
(bad)
jecxz
sar
jecxz
sub
cmps
cmc
rcr
cmc
jmp
icebp
mov
pushf
ss
sti
lods
fs
mov
shl
je
test
push
std
in
inc
add
sti
mov
fs
imul
test
lods
imul
out
shl
lock
jl
push
adc
mov
imul
sub
sub
ss
leave
shl
popf
aad
cmps
mov
test
mov
retf
sahf
rcl
dec
pop
mov
sbb
pop
sbb
mov
ins
(bad)
aaa
xor
or
ret
push
call
shl
adc
adc
sub
lods
or
test
pop
mov
dec
jns
cwde
cmps
sub
jl
ror
lock
pop
mov
mov
or
stos
cmp
mov
jno
frstor
(bad)
pushf
ins
lahf
jge
outs
repnz
add
inc
outs
jg
test
jp
mov
ret
xchg
and
retf
adc
inc
rcl
out
dec
cmps
repz
cld
cwde
and
jg
loope
ror
pop
outs
lods
ffree
mov
jo
test
test
cli
stc
scas
push
jle
cmp
mov
int
pop
xlat
jmp
into
fidivr
pop
shl
rcr
sub
nop
adc
out
push
mov
into
lock
out
cmp
aam
mov
mov
mov
cmp
add
iret
and
cmps
les
dec
or
int
xchg
dec
loope
jns
ds
xchg
sub
les
and
dec
jb
lods
aaa
mov
retf
out
loop
mov
jb
fld
or
mov
lds
mov
dec
cmp
sub
mov
xor
pop
ret
xchg
inc
jae
or
inc
daa
mov
les
sbb
mov
cmp
push
aam
cli
push
jecxz
pop
jmp
push
es
les
cli
clc
jmp
in
sete
fwait
sub
add
add
mov
cld
mov
dec
add
mov
add
jle
jp
aad
cmp
xchg
xchg
fcomi
jmp
loope
adc
out
mov
gs
sub
cli
adc
dec
jno
std
lods
mov
call
imul
test
ins
sub
cmp
lea
mov
pop
jmp
aam
mov
ror
pop
inc
rcr
push
addr16
jne
dec
and
scas
loope
mov
arpl
stc
shl
pusha
xor
inc
or
jbe
(bad)
mov
add
inc
(bad)
mov
stos
ja
pop
mov
push
push
stc
lods
imul
fldenv
jp
sti
loop
adc
dec
or
pop
xchg
inc
(bad)
sti
push
pop
fnstsw
sub
sahf
fcomp
pusha
pop
jb
sub
mov
push
pop
sahf
jne
inc
inc
test
test
sbb
stc
pop
push
mov
jae
mov
mov
dec
nop
dec
jle
mov
adc
sahf
jecxz
ret
(bad)
push
loope
jecxz
movs
jae
lock
jno
outs
outs
into
push
scas
nop
pop
xchg
jl
and
mov
inc
pop
jmp
push
cmp
push
push
lods
imul
xchg
push
mov
push
and
jno
daa
into
pop
mov
pop
(bad)
xlat
mov
add
imul
stos
in
lock
dec
into
aas
cwde
jae
pop
loope
cdq
pop
cmp
lock
mul
icebp
int
pop
test
or
sar
jb
push
pop
je
push
enter
jl
and
lock
fcmove
and
dec
lea
pop
mov
dec
xchg
mov
dec
push
sbb
int3
dec
outs
aaa
gs
int
ds
idiv
jns
ins
sbb
(bad)
push
stc
stos
sbb
mov
or
xchg
daa
cmp
gs
xchg
or
cmp
retf
movs
shl
dec
cmp
cmp
(bad)
mov
test
or
cmps
retf
out
(bad)
aad
pop
paddb
es
mov
mov
sar
sbb
fs
in
(bad)
lock
mov
out
mov
(bad)
je
(bad)
cmp
push
js
scas
jge
ret
mov
push
ins
jl
std
inc
int
sbb
adc
mov
mov
push
stos
cmps
push
pop
cwde
inc
sbb
dec
paddsb
cmp
and
nop
cdq
jno
cmps
call
sub
mov
(bad)
scas
xor
test
int
jb
mov
pop
cmp
jg
imul
jne
jne
shl
retf
pop
mov
dec
mov
sbb
adc
xchg
stos
or
ret
les
cmp
dec
cmps
in
push
movs
call
in
stc
cdq
mov
jecxz
xchg
data16
push
data16
aam
jns
popa
test
mov
ins
repz
sti
push
mov
aam
pop
xchg
ret
cmp
mov
inc
jp
mov
mov
pop
sub
aad
sbb
add
call
push
inc
ss
test
out
retf
pop
dec
into
jae
mov
daa
sub
ds
add
jo
mov
test
outs
stos
jmp
cmp
mov
pop
xchg
in
push
stc
pop
pop
push
jl
xchg
mov
mov
or
into
pop
xor
int
arpl
pop
outs
mov
mov
mov
pushf
outs
rol
out
out
push
ds
not
(bad)
jb
xchg
aad
jge
imul
repz
imul
pop
jmp
adc
(bad)
mov
ja
imul
imul
mov
fisttp
shl
addr16
jge
pusha
daa
jb
(bad)
jle
or
and
je
aad
mov
jb
xor
xor
daa
sbb
xor
ds
fimul
movs
lahf
xchg
icebp
push
fmulp
psubq
mov
add
cmc
addr16
cs
rcr
xor
xor
jbe
sub
cmc
inc
xchg
ins
cwde
scas
pop
sub
fnsave
push
shr
aaa
pop
movs
and
in
pop
lock
jl
xor
mul
mov
inc
sbb
mov
mov
ficomp
and
sar
inc
or
push
popf
lds
mov
mov
lea
xchg
xor
pop
bound
(bad)
aas
push
sti
pop
jae
pop
fdiv
sub
imul
imul
mov
jmp
and
ins
or
in
not
push
jb
leave
(bad)
push
retf
pop
push
pop
out
aas
imul
cmp
or
fdivr
sub
sti
stos
ret
mov
dec
repnz
ret
shr
shr
pop
aam
(bad)
shr
movs
push
movs
inc
jb
mov
pop
nop
clc
(bad)
cmps
in
popf
pushf
pop
sbb
or
jb
retf
mov
jle
popa
popa
lds
push
fs
out
push
cmp
push
mov
mov
fdiv
loope
jne
sbb
fld
sbb
jl
inc
jmp
popa
lahf
fisttp
mov
mov
stos
loop
mov
loopne
jbe
idiv
dec
std
lea
out
jno
jne
and
push
and
mov
mov
dec
scas
in
pop
adc
cld
mov
mov
mov
xlat
or
pop
cmps
cmc
sub
popf
xchg
cmp
inc
dec
or
or
in
stc
scas
jge
les
mov
xor
shl
jp
dec
pusha
loope
movs
mov
sub
sbb
adc
or
retf
dec
xor
mov
sbb
in
mov
inc
lds
jae
loope
adc
xchg
dec
call
dec
movs
movs
sahf
mov
aam
lods
dec
not
pop
cmp
mov
in
int
rol
xchg
mov
div
xor
pop
aam
mov
xor
clc
jae
xchg
cmc
xchg
por
pop
das
out
xchg
mov
xchg
mov
cmp
mov
mov
shl
add
fst
(bad)
scas
ds
in
pop
xor
icebp
push
xchg
arpl
mov
test
test
xor
aad
cmp
jbe
in
daa
jge
pop
mov
outs
mov
(bad)
mov
mov
les
ret
fwait
(bad)
cmp
mov
adc
push
sub
pop
dec
daa
hlt
in
stc
test
movs
les
lea
out
adc
pop
dec
jp
sti
pushf
sbb
mov
or
dec
cli
sahf
sbb
mov
pop
lds
push
inc
sbb
sub
scas
pop
in
xor
ins
xchg
lea
dec
pop
xchg
inc
push
xchg
mov
jmp
jae
mov
imul
les
std
or
test
in
and
cdq
lods
xchg
int
xchg
stc
or
sbb
inc
out
sbb
xor
sbb
ficomp
rol
cs
pop
cmp
ja
mov
mov
movs
pop
jp
shl
and
mov
jae
outs
xchg
jmp
dec
pop
test
dec
fwait
cli
jae
mov
stos
xor
xchg
fld
mov
adc
mov
mov
jmp
hlt
stos
cmp
mov
push
sbb
mov
sbb
and
in
cmps
push
push
test
int3
rcr
xor
sub
or
into
mov
add
data16
xor
mov
fs
les
dec
xchg
ret
mov
cmc
(bad)
sbb
cmc
or
cmps
fwait
or
jl
(bad)
outs
and
gs
jb
push
pop
dec
mov
push
cwde
ins
cld
in
cmps
int3
mov
pop
mov
dec
and
sub
mov
jns
js
jb
loop
int
xlat
(bad)
jle
call
jb
mov
or
or
jle
(bad)
jns
cmp
dec
dec
jl
cmp
js
cli
sbb
fiadd
cmps
clc
call
pop
daa
in
ss
fsubr
or
sub
sbb
cmps
xchg
hlt
iret
ja
arpl
test
leave
(bad)
scas
lock
fdiv
movs
cmp
rcl
dec
das
mov
aaa
pop
xchg
test
push
dec
and
push
stc
inc
inc
xor
pushf
ds
fistp
cld
jge
imul
int
in
fimul
lahf
jmp
es
imul
sti
das
pop
cmp
test
inc
push
cmps
jnp
ficom
(bad)
(bad)
je
mov
jbe
jecxz
lahf
pop
bound
or
fs
(bad)
jb
inc
(bad)
jae
enter
or
sub
push
clc
lods
inc
sub
inc
sbb
xor
loopne
out
fsub
dec
cld
outs
shr
jmp
jmp
fwait
cmp
push
es
test
scas
sbb
pushf
jle
push
rcl
sub
js
jo
leave
call
cmpps
jge
ins
sbb
fsub
data16
(bad)
clc
std
in
pop
fwait
push
int3
movs
(bad)
jbe
je
addr16
bound
push
(bad)
enter
fwait
dec
and
dec
fwait
push
mov
mov
rcr
imul
fnsave
and
retw
pop
dec
pop
or
sub
test
stos
ss
mov
loope
fchs
dec
repnz
call
in
daa
or
mov
or
mov
lock
mov
fidivr
cmp
retf
and
xchg
inc
inc
mov
push
xchg
aad
shl
(bad)
retf
pop
jb
cdq
push
pop
cs
out
sub
rcl
out
stc
inc
add
mov
cmc
cli
xchg
push
jb
mov
dec
adc
mov
lock
or
rcpps
push
dec
sub
in
lods
mov
paddusw
popa
pop
pop
sbb
xchg
inc
push
stc
mov
sub
imul
cli
fild
push
jge
fldenv
ss
xlat
iret
(bad)
ins
jno
in
cmp
shl
lea
cli
cmps
retf
movs
jle
mov
call
jo
dec
xor
aad
out
rcr
pop
jg
fisttp
cmp
in
aam
jnp
je
jnp
xchg
mov
pop
addr16
add
stc
stos
sub
fcmove
(bad)
aam
cs
mov
call
shr
ins
pop
ins
cs
repnz
mov
mov
fst
arpl
(bad)
cmp
daa
or
adc
lea
jns
call
and
loop
into
out
lods
mov
repz
xchg
out
out
(bad)
jmp
data16
in
or
inc
adc
cmp
retf
dec
(bad)
sub
sub
out
pop
jmp
ret
xchg
ss
dec
dec
dec
sub
pop
in
sub
js
lea
retf
cwde
push
xchg
les
sub
(bad)
icebp
fisub
xchg
jecxz
aam
les
call
xchg
mov
lds
mov
pop
mov
loop
into
push
xchg
ret
mov
xor
lea
leave
cmp
sub
call
xchg
xor
add
ins
je
int
stc
retf
cmp
sub
call
push
dec
sahf
lods
sub
mov
pop
repz
jp
mov
sbb
push
xor
sbb
mov
es
mov
int
idiv
stos
add
neg
push
add
add
pop
cs
lock
shr
sahf
jnp
mov
(bad)
outs
mov
std
outs
xchg
mov
fst
popf
daa
mov
ret
sub
mov
cmp
pop
adc
mov
and
sbb
lods
ins
and
and
xchg
inc
push
cmp
cwde
sbb
hlt
push
add
dec
push
rol
xchg
push
das
in
pop
mov
jns
pop
fwait
jns
in
outs
jg
mov
sub
xor
add
push
sbb
sti
dec
repz
out
add
pop
ficom
js
pushf
inc
pop
fimul
movs
jns
aad
aaa
jmp
add
(bad)
cmc
in
fisubr
pop
pop
arpl
(bad)
inc
cmps
or
add
and
fild
ds
pop
test
cmps
hlt
or
dec
movs
dec
lods
fnstsw
aad
popa
and
fcomp
repz
popa
push
out
sbb
dec
inc
cmps
scas
and
dec
test
cdq
dec
fs
(bad)
lock
jae
pop
ror
push
pop
inc
xor
add
ret
adc
call
sub
jp
xchg
mov
popa
and
setb
inc
fst
sbb
dec
scas
shr
sub
stc
or
adc
mov
mov
std
jb
mov
ins
aam
cdq
call
lock
adc
xchg
xchg
adc
(bad)
xchg
dec
mov
push
shr
outs
sbb
mov
mov
cmp
fisubr
adc
rcr
push
inc
sti
das
xchg
es
cmp
xchg
xchg
jae
in
scas
outs
aad
popf
call
sub
xor
pop
add
imul
cli
(bad)
xor
std
push
xor
pop
sbb
sub
jno
psllw
inc
or
addr16
fisttp
fldpi
nop
out
in
and
std
cmc
ds
pop
mov
call
push
mov
dec
cmp
das
dec
test
pop
neg
sti
push
fsub
xor
(bad)
dec
add
mov
xor
mov
dec
push
xor
imul
rcr
mov
jae
lds
das
out
inc
out
shl
in
and
(bad)
mov
inc
int
pop
xor
mov
in
leave
mov
sub
ins
(bad)
lods
cmps
cmc
inc
imul
mov
fistp
mov
out
idiv
sub
add
call
ret
shr
arpl
sbb
stos
lds
cmp
push
and
test
jecxz
addr16
or
sahf
dec
inc
sahf
add
add
jg
rcl
xchg
cmps
or
pop
les
xlat
mov
xchg
jns
and
test
sbb
xchg
mov
movs
sbb
cmp
frstpm(287
adc
lods
push
outs
cmp
jno
cmp
out
add
leave
cmps
pop
push
stos
pop
and
pop
cwde
inc
inc
mov
sub
sbb
addr16
les
and
jmp
inc
and
add
das
mov
push
mov
mov
pop
cmp
cmps
mov
jecxz
push
sub
mov
es
cmp
out
call
xchg
pop
in
sub
jge
in
hlt
push
loope
jge
pop
mov
xchg
xor
jne
enter
out
stc
jmp
(bad)
xchg
ret
sbb
fwait
imul
mov
into
dec
aam
repnz
pop
inc
test
mov
mov
pop
inc
(bad)
mov
(bad)
jns
(bad)
call
repz
jecxz
fnstenv
movs
cmps
fld
pop
mov
mov
xlat
fwait
adc
test
lods
push
push
leave
mov
add
int3
jl
dec
(bad)
adc
cmp
loop
and
and
add
in
clc
push
test
and
cli
dec
scas
push
and
stos
sbb
fld
jns
pusha
inc
bnd
mov
pop
aad
movs
lods
push
pop
icebp
in
mov
adc
mov
in
sbb
icebp
inc
fiadd
cmp
arpl
inc
sub
(bad)
lahf
enter
xor
fsub
jns
jae
mov
shl
outs
jne
xchg
popf
adc
dec
jae
jo
dec
in
pop
and
mov
sbb
jge
mov
retf
sti
(bad)
and
fmul
(bad)
cdq
pop
pop
sbb
jle
mov
mov
jo
fidiv
mul
out
pop
dec
sbb
imul
add
inc
add
mov
aam
out
add
jg
mov
adc
xchg
dec
outs
mov
outs
cmps
mov
repz
push
fisttp
xor
rol
push
xor
in
dec
inc
int
sub
or
xchg
cli
pusha
js
pop
push
push
in
add
jns
sbb
inc
dec
cmp
pop
pop
dec
jns
jg
aaa
out
aam
lahf
repnz
push
adc
rcl
adc
mov
(bad)
cmp
cld
mov
and
mov
and
jl
sbb
jge
(bad)
in
sbb
adc
jl
push
mov
xlat
out
inc
repnz
push
jmp
sbb
mov
mov
popa
pusha
pop
mov
cmp
(bad)
arpl
xchg
imul
jmp
lahf
ret
dec
pop
pop
xor
fld
fwait
popf
xor
call
sbb
and
repnz
outs
push
sub
mov
pop
aaa
imul
movs
jno
add
in
sub
bound
movs
call
lahf
arpl
ins
sbb
sub
ds
outs
push
cmp
jg
sub
mov
mov
pushf
(bad)
stc
push
xor
dec
add
xlat
sub
dec
jmp
retf
jb
inc
hlt
xor
outs
popf
xor
sbb
shrd
sti
dec
mov
ror
(bad)
js
mov
inc
pop
jae
adc
adc
out
push
scas
jbe
int
lahf
mov
jb
pop
xchg
cmps
rcl
and
xchg
push
sub
ins
jnp
and
mov
xchg
(bad)
shl
jbe
retf
enter
mov
fldenv
adc
dec
xchg
push
dec
cmp
fisubr
je
xchg
imul
sub
call
pusha
imul
jp
mov
xor
jbe
push
test
ds
out
cwde
push
adc
push
repz
aam
pop
cmps
xchg
add
push
push
mov
mov
imul
adc
popa
sub
dec
das
jno
xor
lds
cmp
fdivr
daa
ret
mov
xchg
les
pop
pop
jno
loope
nop
and
dec
xor
inc
or
xor
call
inc
out
sub
xor
daa
outs
(bad)
loop
inc
ficom
mov
shl
fstp
mov
iret
mov
mov
mov
xchg
inc
xor
xchg
sbb
xchg
xchg
xchg
imul
lock
push
mov
sub
inc
cmps
mov
ret
fimul
inc
sbb
dec
aas
sub
push
mov
or
cmp
test
inc
xlat
jg
inc
pop
aaa
(bad)
shl
dec
icebp
repnz
mov
sub
mov
jne
(bad)
dec
test
push
pop
sti
jecxz
(bad)
stos
xchg
mov
pop
mov
dec
scas
dec
ss
sbb
jecxz
outs
fistp
fs
arpl
dec
fld
or
dec
cmp
inc
es
loope
inc
(bad)
cmps
(bad)
push
mov
mov
fs
jns
leave
das
call
cmp
imul
pop
out
add
dec
lea
daa
jle
cld
push
shl
push
test
fist
popf
pop
cdq
fsub
jl
pop
mov
lock
pop
mov
sub
sub
loope
adc
fsubr
in
ds
jnp
pop
mov
push
and
lea
out
aas
loope
scas
or
mov
pusha
leave
cwde
enter
test
inc
shl
jmp
xor
loopne
stos
lods
movs
lods
xlat
sbb
adc
shr
push
jmp
xchg
mov
xor
hlt
rcl
inc
cmp
mov
pop
jns
sub
and
(bad)
jae
test
jp
pop
pushf
sbb
jecxz
scas
mov
popf
int3
out
dec
xor
xchg
or
sahf
add
mov
ins
test
(bad)
bound
cld
mov
xor
(bad)
icebp
push
sbb
push
sbb
cli
push
repnz
mov
xor
movs
(bad)
mov
jnp
out
and
in
jnp
fisttp
mov
and
and
sbb
jge
int3
in
lahf
pop
not
cmp
lock
inc
dec
(bad)
dec
add
nop
pop
push
lahf
fwait
loop
jl
ror
iret
icebp
adc
aam
add
test
pusha
cmp
(bad)
mov
lock
enter
adc
das
jmp
mov
adc
mov
fbld
xchg
pop
and
push
jb
mov
add
sbb
mov
fimul
dec
jbe
add
push
xor
inc
jmp
(bad)
cvtps2pi
test
inc
gs
jmp
dec
cmp
push
(bad)
gs
bndstx
test
jne
test
xchg
dec
popa
adc
mov
mov
adc
push
mov
sahf
rcr
and
pop
jl
pop
fstp
xchg
test
and
mov
pusha
inc
and
std
mov
mov
xlat
loop
(bad)
pop
jns
(bad)
cmc
(bad)
retf
nop
out
fiadd
cmps
add
out
mov
pushf
sbb
inc
pop
ss
jl
xor
iret
inc
pop
cli
xor
pop
dec
and
cmp
call
xor
push
jmp
cld
sbb
mov
rcr
push
dec
cli
inc
inc
xor
or
xchg
fisttp
fnstcw
test
in
cmp
pop
stc
add
or
mov
adc
jecxz
cmp
and
adc
pusha
fsubp
sbb
mov
or
xor
ret
stos
and
fwait
iret
es
das
sub
push
test
je
pop
cmp
and
xor
pushf
add
icebp
dec
add
pusha
pushf
push
fmul
dec
or
pop
sub
mov
xchg
cwde
call
push
aas
test
cdq
xor
stos
cdq
(bad)
lods
dec
add
ss
cmp
mov
jne
mov
adc
loop
push
(bad)
fld
xor
push
mov
sbb
(bad)
neg
push
add
mov
xchg
pushw
cli
mov
mov
mov
sub
mov
out
dec
iret
sbb
retf
sbb
push
pop
(bad)
dec
mov
iret
mov
mov
rcl
jae
pop
ds
jns
and
pop
or
(bad)
and
cmp
cmp
push
jae
mul
sub
out
and
jb
test
xor
gs
mov
pop
pusha
mov
add
mov
jo
mov
rcr
inc
daa
dec
call
mov
mov
ror
out
shl
push
cwde
mov
and
out
in
jge
aas
xor
shl
call
pop
rol
dec
jecxz
movaps
jge
sub
aam
cmc
retf
dec
pop
jle
add
dec
ja
mov
ja
loopne
push
(bad)
mov
xor
stos
stos
mul
push
out
mov
mov
repnz
addr16
sub
and
xchg
nop
les
jmp
xor
js
mov
pop
cmp
cld
retf
pop
or
shr
inc
(bad)
mov
inc
stos
adc
sub
(bad)
xchg
xlat
xchg
stos
mov
mov
mov
or
xlat
mov
push
iret
mov
(bad)
inc
test
add
inc
inc
not
test
pop
push
repnz
je
cmp
xchg
into
in
cmp
mul
test
or
and
or
mov
sub
add
sti
outs
sub
pop
es
mov
sub
je
inc
stos
ss
push
ins
xchg
pusha
mov
in
xor
repz
in
clc
or
mov
pop
lods
or
mov
shl
push
cmp
fidivr
nop
inc
xchg
sbb
pop
arpl
pop
xchg
inc
loopne
int
add
sub
mov
pop
xchg
pop
or
out
add
idiv
push
(bad)
out
inc
mov
stos
pop
and
cmps
mov
adc
pop
outs
push
(bad)
leave
aaa
bound
inc
mov
sbb
dec
and
js
xchg
icebp
fnstsw
adc
aaa
aaa
repz
or
mov
outs
clc
lock
xor
arpl
add
fadd
bound
mov
out
sbb
mov
inc
sub
inc
cmp
xchg
mov
mov
mov
test
nop
lahf
inc
xchg
test
fs
aam
and
sbb
jle
call
adc
repnz
jno
test
pop
xor
in
or
test
test
loope
mov
call
pop
and
mov
bound
hlt
mov
xchg
mov
cmp
dec
movs
vmwrite
dec
aas
dec
add
lock
int3
lods
leave
mov
sub
xor
loopne
inc
(bad)
jmp
cmp
push
push
retf
enter
mov
(bad)
ss
cli
jne
sub
test
mov
data16
dec
or
push
loope
sub
pop
jae
je
ds
movs
sbb
stos
mov
cmp
cmp
mov
jge
xchg
jb
ja
sub
xchg
jns
js
shl
pop
fcmovnbe
mov
sti
ret
xor
or
xor
mov
ins
and
or
loope
pop
(bad)
retf
mov
pop
mov
and
mov
inc
dec
test
cmp
or
rcr
sbb
cmps
cli
popa
dec
imul
mov
and
int3
sbb
leavew
sub
jnp
js
cmp
sbb
fisub
cmp
dec
and
and
shl
push
call
dec
mov
retf
cli
dec
repz
retf
cmp
inc
div
ret
pop
mov
or
test
aas
frstor
mov
shr
push
jmp
scas
test
cld
fcom
add
ja
cmps
mov
hlt
lea
call
xchg
pop
mov
or
loopne
imul
mov
sbb
cmp
jl
cmp
fmul
test
call
pop
sti
addr16
push
pop
xor
mov
sti
adc
and
outs
call
mov
inc
lea
adc
cdq
je
pushf
rcr
call
mov
out
inc
xchg
sbb
int
jns
sbb
fwait
mov
mov
inc
sar
outs
sub
pop
inc
fsubp
inc
jnp
push
sub
push
cmp
mov
scas
sbb
jle
mov
mov
jb
stos
xor
xor
dec
pop
dec
icebp
add
stc
lea
fdiv
xchg
jmp
shl
jg
ss
mov
xlat
fnstenv
xor
xchg
aas
sub
sub
inc
xor
push
sub
xchg
inc
das
inc
(bad)
mov
dec
mov
push
pusha
pop
aaa
or
bound
addr16
loope
mov
cmp
sub
adc
dec
pop
and
into
mov
add
lock
push
out
out
rcl
mov
push
clc
test
dec
and
stc
fstp
shl
mov
int3
ror
mov
mov
test
xchg
pushf
icebp
xchg
pop
pop
call
sub
das
sub
sbb
fimul
cs
xchg
pop
bound
test
mov
xor
pop
ds
hlt
enter
inc
xor
xlat
push
dec
push
into
daa
ror
sbb
into
add
cmp
in
xchg
ins
add
outs
pop
rcr
pushf
shr
movs
mov
pop
int
call
xchg
daa
push
sub
push
ss
jbe
out
sbb
jecxz
fs
ins
xchg
neg
adc
clc
in
xchg
adc
jp
jl
cdq
ret
sbb
inc
test
into
add
mov
push
movs
cmc
cs
sub
dec
out
cmp
outs
xor
addr16
ret
pop
add
out
cmps
xor
ins
das
mov
sar
test
dec
test
cwde
out
(bad)
fisub
shl
pusha
cmc
dec
or
gs
call
add
out
cmp
dec
jl
jge
push
fdiv
sub
sahf
or
push
push
jmp
stc
dec
push
out
fcomp
jae
retf
test
aaa
inc
push
imul
sub
int
loope
sbb
add
jmp
cmp
and
mov
or
popa
stc
sbb
(bad)
sub
adc
xlat
push
(bad)
out
or
aam
mov
stos
in
popf
enter
mov
lock
dec
test
mov
pop
test
push
lods
sbb
das
adc
imul
rol
stc
ficom
adc
cmp
imul
dec
stos
js
hlt
inc
mov
sub
int3
shl
repz
inc
test
in
jbe
pop
sub
mov
outs
mov
in
stc
ror
out
mov
or
mov
jo
inc
shl
mov
sti
test
jbe
aam
in
in
jl
adc
sahf
ret
mov
jg
rcr
sub
fimul
xor
or
loope
call
push
jl
mov
xor
pop
cmp
dec
ret
test
dec
sbb
int
adc
mov
mov
stos
sbb
or
pop
adc
int3
in
sbb
push
mov
cmp
das
sub
xor
sahf
outs
or
sub
adc
pushf
pusha
jmp
lock
mov
jne
aaa
xchg
loopne
dec
out
push
xchg
test
mov
sbb
(bad)
mov
cmp
in
cmp
(bad)
rol
inc
pop
jle
or
out
and
xchg
out
pop
sbb
imul
ret
pop
push
push
stos
cmp
xlat
repnz
stc
ins
cdq
inc
mov
mov
xchg
gs
sub
jb
cwde
popf
push
sub
out
call
mov
jg
cld
addr16
pushf
fsub
jno
outs
aaa
(bad)
scas
fist
movs
loope
sbb
sub
test
add
mov
(bad)
adc
xchg
or
mov
(bad)
pop
std
test
sbb
lods
adc
push
push
push
mov
das
mov
std
scas
aas
xor
out
or
mov
xor
xchg
mov
pop
js
push
and
sti
jmp
xchg
int3
stos
repnz
mov
pop
push
fiadd
or
call
dec
pop
dec
add
fsubr
pop
dec
jnp
push
add
outs
push
(bad)
fisubr
push
mov
xor
lods
mov
add
cmp
and
fisub
imul
mov
ficomp
jne
push
mov
xchg
pop
cmp
pusha
fadd
dec
push
les
sub
xchg
stos
inc
pop
or
xor
jne
push
in
add
int3
test
xor
cvtsi2ss
jns
mov
nop
dec
leave
sbb
test
lock
imul
pop
movs
push
mov
dec
or
das
fsub
sub
xor
mov
mov
retf
xlat
pusha
adc
add
xchg
cmp
test
mov
test
sub
(bad)
lahf
test
jecxz
push
fimul
pop
scas
aas
pop
cmp
outs
jne
mov
mov
mov
dec
inc
sub
mov
std
(bad)
arpl
push
add
ret
push
mov
xchg
mov
inc
cwde
dec
loop
jns
inc
inc
jns
xor
pop
pop
sbb
mov
push
in
inc
frstor
mov
mov
push
test
(bad)
lds
jp
ins
inc
pop
and
dec
mov
cmps
dec
test
loop
icebp
jecxz
out
mov
xchg
xor
push
icebp
dec
or
cmp
in
dec
jmp
or
aas
cwde
xchg
add
daa
adc
js
pop
shr
xchg
int
pushf
stos
jge
(bad)
dec
add
or
out
mov
push
and
or
mul
ins
jnp
mov
sbb
sahf
imul
mov
or
in
push
inc
adc
data16
xchg
popa
(bad)
repz
fsubrp
pop
sar
(bad)
pop
icebp
(bad)
jbe
or
cmps
lods
sub
leave
xor
out
pop
push
xchg
fnstcw
movs
pop
mov
dec
adc
retf
rcr
cmc
dec
dec
cmp
lea
jno
pop
cld
and
pop
iret
cmp
sub
or
cld
pop
test
mov
xor
inc
ja
mov
cmp
sahf
add
mov
mov
pop
mov
sbb
sub
jb
ins
retf
sbb
sub
sub
stos
repz
lods
mov
imul
mov
(bad)
adc
xor
les
pop
and
push
adc
jmp
or
push
pop
push
in
inc
retf
push
bound
jle
xor
mov
mov
sub
cmp
xchg
into
jmp
add
cwde
sti
out
dec
push
jnp
aad
and
ins
mov
add
pop
pop
fidivr
dec
into
ja
inc
sbb
mov
add
dec
mov
mov
mov
retf
retf
(bad)
and
int
lds
push
cli
xchg
adc
imul
cmp
popf
loopne
cmc
fucomi
(bad)
mov
jae
dec
out
xchg
mov
mov
xchg
out
(bad)
ficomp
inc
lods
ins
es
dec
sar
stc
mov
nop
clc
mov
arpl
pop
mov
sar
hlt
jp
gs
mov
imul
fwait
pop
sbb
fcmovnb
nop
aad
sbb
push
pop
pop
xchg
and
icebp
add
inc
scas
lods
bound
dec
into
fdiv
fcmovb
imul
aam
jo
mov
sbb
xor
xchg
jno
sub
cmps
cmps
sub
mov
ja
jns
dec
icebp
mov
fwait
sub
dec
mov
in
sub
pop
adc
xor
movs
jae
pop
jge
dec
cmc
shl
fstp
cmp
lds
sub
jmp
test
call
lahf
in
or
jnp
and
xchg
sub
test
inc
sahf
jb
stos
pop
inc
call
ror
dec
ffree
sub
iret
push
push
es
inc
mov
je
pop
jb
mov
pop
sahf
scas
imul
xor
mov
bound
imul
mov
push
outs
int3
sbb
enter
out
cmp
leave
pop
call
inc
dec
cmp
in
sbb
xchg
pop
xchg
jmp
arpl
adc
or
aas
sub
sbb
ficom
out
mov
stos
adc
dec
hlt
sahf
jecxz
(bad)
cdq
mov
mov
jb
scas
ins
aam
pop
into
retf
cmp
test
idiv
push
addr16
call
out
outs
xchg
fldcw
add
and
push
jb
pop
ds
mov
aaa
pop
sub
push
not
mov
dec
inc
pop
or
adc
mov
test
cmp
sub
xor
cmp
and
dec
add
xor
cwde
pop
xor
rol
add
mov
dec
mov
pop
test
stos
fstp
pop
into
xor
xchg
mov
sub
xor
fxch
loope
aas
cmp
adc
in
mov
or
test
adc
xor
sti
les
movs
xor
inc
and
icebp
(bad)
cmc
ret
fisub
cmps
mov
mov
mov
ret
stos
push
xor
hlt
jb
jmp
jmp
cmp
xchg
call
adc
jae
push
pop
(bad)
call
dec
sub
aam
fdivp
jl
aad
mov
push
jne
imul
mov
js
fs
cmp
(bad)
fistp
(bad)
xchg
dec
xor
and
stos
cwde
sub
cmps
lods
test
push
add
mov
mov
fisubr
test
or
sti
xchg
repnz
ret
in
mov
inc
lods
cmp
jle
popf
inc
or
dec
xor
jbe
(bad)
xlat
aaa
(bad)
mov
xchg
jle
or
mov
sbb
cmc
lods
cld
(bad)
sbb
push
mov
xor
in
or
xor
inc
add
fs
mov
movs
mov
es
hlt
out
ror
xchg
retf
jge
xchg
jle
lock
inc
push
shl
out
sar
mov
push
(bad)
and
xchg
push
je
loope
sub
(bad)
xlat
mov
test
fcom
mov
jmp
mov
pop
out
in
push
dec
mov
mov
sbb
xchg
mov
lods
ja
inc
sub
stos
dec
sbb
ficomp
push
and
loopne
mov
cmp
mov
ret
xchg
es
(bad)
cmp
(bad)
(bad)
adc
in
scas
cmc
dec
stc
mov
push
push
arpl
fwait
(bad)
aam
jbe
cmps
lods
push
push
and
stos
sbb
rcl
add
outs
pop
mov
cmp
repz
lds
mov
xchg
adc
jmp
push
fs
sub
arpl
inc
mov
pushf
scas
push
sbb
scas
dec
jmp
xchg
and
mov
pop
fidivr
push
inc
dec
adc
arpl
sbb
dec
mov
dec
add
adc
xchg
xchg
pop
mov
pop
loopne
cmp
shl
adc
adc
mov
bound
add
push
adc
push
adc
addr16
cmps
data16
sti
dec
cmp
addr16
cmc
mov
cmps
or
mov
sbb
push
ret
xlat
jp
or
dec
push
std
cs
xchg
test
jae
dec
inc
out
mov
retf
inc
mov
pop
lahf
js
inc
int3
iret
dec
(bad)
mov
lahf
(bad)
pop
mov
mov
mov
out
dec
sti
int3
pop
xadd
dec
mov
jg
push
or
sub
adc
mov
ss
movs
sbb
addr16
faddp
stc
dec
mov
div
shl
cli
enter
mov
push
fs
in
or
sub
out
mov
or
dec
mov
push
movs
ret
sub
mov
int3
xor
jne
test
ret
(bad)
lock
cdq
xor
jge
jb
inc
fstp
lahf
clc
stos
das
xchg
and
int3
jmp
into
das
pop
sub
push
adc
mov
cmps
sub
leave
(bad)
and
and
sahf
or
mov
sub
sahf
fimul
mov
cli
sbb
ret
inc
repnz
sar
shl
repz
sub
mov
pushf
(bad)
out
addr16
mov
cld
mov
retf
xor
lock
dec
xchg
inc
add
pop
arpl
xor
adc
jmp
adc
xor
jmp
adc
or
cmp
stos
test
mov
jnp
mov
jo
ja
and
add
push
fcmovne
xlat
or
inc
mov
cmp
mov
hlt
loope
in
scas
popa
xor
in
outs
sbb
dec
or
push
sbb
pop
pop
mov
cmc
add
data16
mov
inc
sub
push
adc
mov
inc
dec
sbb
dec
push
jge
outs
enter
stos
loop
or
jae
xchg
mov
cmp
std
cmp
inc
fsubr
inc
mov
pop
les
movs
and
push
repnz
and
sar
pop
in
nop
add
mov
jecxz
jns
mov
push
xor
mov
adc
cmp
jns
inc
ins
mov
sub
shl
cmps
mov
sub
mov
push
repnz
sub
ins
ret
pop
sub
adc
push
dec
push
push
inc
xor
or
or
ret
inc
daa
pop
cmp
push
aad
sub
dec
adc
mov
imul
stc
add
dec
xchg
mov
loopne
cmovnp
xchg
cdq
ret
inc
add
mov
mov
jnp
sbb
pop
outs
and
outs
push
(bad)
aaa
mov
int
cmp
nop
mov
push
mov
pop
sti
pop
mov
push
sub
pusha
clc
movs
add
lea
or
cdq
jge
std
push
add
mov
cmp
fnsave
inc
into
inc
jmp
rcr
dec
scas
jp
and
(bad)
repz
cmp
out
popa
mov
scas
sub
mov
and
call
imul
(bad)
jg
fsubp
shl
xchg
mov
cs
mov
xor
movs
jnp
nop
ret
ret
adc
aaa
lods
xchg
xor
bound
xchg
nop
jb
push
cmp
mov
int3
push
test
lods
sbb
test
fmul
cmps
clc
fcomp
out
lock
mov
jmp
fisttp
and
loopne
inc
(bad)
dec
shl
imul
out
adc
pop
jb
sbb
loopne
(bad)
and
and
cmp
in
add
lds
add
mov
xchg
pusha
dec
push
mov
push
mov
mov
je
dec
add
rcr
shl
inc
push
dec
movs
and
add
jne
mov
jl
or
inc
sbb
dec
jg
and
arpl
pop
push
data16
call
mov
iret
adc
lods
pop
std
pusha
(bad)
retf
fiadd
mov
sub
xor
mov
fcom
xchg
imul
xchg
inc
and
sbb
or
bnd
bound
cmp
mov
or
fistp
push
test
or
xor
xor
inc
add
fld
xor
jmp
int
pop
push
fistp
adc
out
arpl
int
ins
aas
rcr
adc
adc
sbb
inc
pop
xchg
in
mov
inc
jmp
or
popa
xor
outs
mov
mov
dec
cld
(bad)
sti
sub
mov
mov
xor
inc
sub
pop
rcl
test
lds
cmps
sbb
imul
sub
cmp
cmp
push
(bad)
clc
fld
repnz
and
mov
pop
mov
mov
mov
sub
addr16
(bad)
adc
aas
je
fiadd
fcomp
ja
inc
xchg
loope
mov
inc
dec
push
or
push
and
inc
out
test
or
cmp
cmp
push
dec
dec
(bad)
mov
sub
xlat
dec
adc
in
cwde
(bad)
and
inc
or
fst
mov
rcpps
dec
push
in
pop
jge
ret
pop
pop
test
push
mov
sub
mov
fnsave
mov
xor
imul
xchg
mov
inc
call
fcmovnbe
ror
mov
cmp
shl
push
fnstenv
dec
jns
int
mov
xchg
xchg
dec
xchg
imul
add
sbb
in
fwait
inc
jmp
je
pop
sbb
xor
inc
fs
fwait
mov
mov
jo
fwait
jb
movs
sub
pop
scas
dec
dec
jnp
jb
std
int
out
or
fsqrt
sub
add
jno
mov
inc
mov
xor
add
fistp
sti
adc
stos
retf
in
in
fidivr
adc
sub
jle
pop
cmp
bound
and
pop
dec
cmp
mov
out
dec
sbb
jecxz
sub
mov
jnp
mov
ror
mov
gs
cmps
sub
outs
lds
pop
das
(bad)
dec
mov
pop
loope
cmps
or
inc
dec
push
(bad)
fist
push
mov
jmp
adc
xlat
adc
in
stos
adc
pushf
mov
dec
xchg
xchg
pop
add
mov
int3
pop
gs
push
inc
mov
mov
rcr
xchg
xchg
push
cmp
mov
jo
in
sbb
out
mov
je
imul
push
movs
cmp
mov
mov
pop
or
adc
push
cmc
lods
rcl
lock
xchg
loopne
sar
inc
out
sbb
jecxz
out
sti
inc
mov
sbb
xchg
int3
(bad)
mov
les
xchg
add
push
ret
push
shr
and
xchg
shl
mov
popfw
clc
jo
cmp
sar
and
outs
jp
inc
cwde
mov
pop
xchg
or
jnp
pop
gs
inc
mov
sub
or
jecxz
ins
or
mov
ret
cmp
hlt
jbe
fiadd
int
loopne
(bad)
iret
mov
pop
ret
sub
(bad)
stos
retf
sub
std
add
call
jbe
jecxz
add
add
call
push
mov
dec
or
out
repnz
test
or
shl
and
xor
adc
xor
gs
(bad)
stos
iret
sbb
inc
push
test
push
out
cmc
dec
xchg
and
fstp
add
mov
fadd
stc
inc
loope
sbb
stos
dec
lock
test
loop
xchg
lods
adc
push
in
inc
add
daa
lock
mov
(bad)
xlat
call
loope
xchg
push
lahf
and
outs
jnp
inc
add
mov
shl
inc
mov
repnz
lods
jg
loopne
pusha
sbb
xchg
(bad)
fwait
push
in
inc
cmp
hlt
push
or
jecxz
in
idiv
sbb
cmp
lds
mov
les
mov
adc
cmp
rcr
stc
pushf
retf
(bad)
(bad)
in
push
ja
test
xchg
ins
int3
fnstcw
rol
and
pop
cdq
mov
or
movs
lahf
xchg
call
ror
loop
and
test
stc
mov
jo
(bad)
mov
enter
fmul
cmp
mov
mov
or
scas
add
(bad)
jae
mov
jb
cli
retf
add
fcmove
xor
in
mov
imul
jne
push
sub
in
jmp
pop
or
mov
mov
inc
pop
push
outs
ror
cs
sahf
iret
cmp
push
jne
jmp
or
aas
or
popf
jbe
sub
fcomp
jg
cmovle
jae
mov
into
stos
sub
jmp
stos
adc
cmp
lea
xor
jg
test
ffree
push
pop
out
cmp
shld
mov
and
out
mov
mov
pop
inc
out
adc
loope
(bad)
out
push
sbb
jecxz
adc
jg
mov
mov
mov
mov
imul
xchg
lock
jmp
ret
test
push
imul
cmp
mov
cmp
xlat
cmp
xchg
hlt
xchg
cs
clc
xchg
scas
pinsrw
push
sbb
inc
mov
scas
sbb
pop
call
xor
push
enter
jmp
sub
shl
into
jmp
adc
and
lods
fadd
xchg
jl
sub
ret
xor
scas
cli
sti
imul
mov
ins
cmp
sbb
mov
cmc
or
mov
int3
xchg
jg
or
aad
into
pop
push
test
fwait
gs
push
push
pop
mov
cmp
cmp
xchg
out
or
jne
or
das
sbb
sub
imul
test
fiadd
sahf
pop
loop
(bad)
in
pop
add
int3
test
inc
jmp
inc
and
scas
sub
lods
push
or
movs
in
addr16
cdq
jg
mov
jp
sub
xchg
ja
ror
scas
mov
lea
jno
xor
xor
inc
jp
aas
dec
inc
jb
inc
iret
outs
push
(bad)
int
pop
xor
push
cmc
adc
push
cmp
sahf
lahf
mov
mov
cs
mov
(bad)
push
or
xor
sub
sbb
adc
push
sbb
push
(bad)
fdiv
ficom
stos
mov
fsubr
cmps
data16
add
or
aad
xchg
cwde
dec
ss
push
mov
mov
iret
sub
cmp
jae
fidiv
add
jbe
sub
rol
movs
add
adc
fs
lods
retf
inc
data16
call
mov
popf
in
mov
cmp
iret
sbb
cmps
mov
or
push
pop
xor
and
or
int
in
sub
jb
cmc
xchg
mov
icebp
or
loope
enter
js
scas
pop
lahf
movs
jae
mov
mov
daa
mov
in
xor
lea
(bad)
fld
lods
add
sbb
psrad
aaa
push
adc
jnp
(bad)
addr16
daa
movs
pushaw
sbb
jno
stos
and
fwait
daa
stos
cmp
pushf
cli
and
ja
loope
adc
lahf
jno
jg
cmc
fisub
pop
call
mov
jle
push
xchg
daa
fwait
call
cwde
sahf
mov
jl
mov
std
mov
xchg
sub
xchg
pop
popf
cmps
ret
jl
fisub
scas
inc
clc
and
lock
aad
inc
loopne
dec
mov
jne
add
dec
cmp
and
add
in
jno
call
adc
icebp
sub
sbb
adc
idiv
ficom
dec
(bad)
out
xor
inc
sub
repnz
push
std
dec
stos
jb
jp
jle
shl
retf
fimul
loopne
jnp
dec
fisttp
mov
inc
je
cmp
sub
out
pop
cld
push
dec
xor
call
push
sub
das
ins
cmp
fld
ds
jmp
lods
jecxz
imul
shr
je
sub
lods
mov
xor
test
jns
jae
movs
call
cmps
jp
(bad)
and
xor
add
cmp
aaa
sub
mov
(bad)
into
mov
icebp
cli
mov
ja
fistp
das
ficomp
jne
sbb
out
inc
mov
and
mov
and
jge
xchg
je
mov
pminsw
xor
mov
in
and
lds
sbb
dec
inc
in
pop
mov
arpl
adc
sub
imul
sar
gs
sbb
mov
inc
loope
jmp
mov
ds
shl
jmp
sbb
xchg
mov
sub
mov
xor
add
cmp
push
mov
out
mov
jl
xlat
stos
push
retf
mov
(bad)
jl
mov
sub
(bad)
dec
out
fwait
sbb
cdq
ret
(bad)
clc
mov
adc
out
ret
sbb
test
pop
xchg
push
(bad)
cmp
imul
mov
jno
movs
mov
xor
cmps
and
in
(bad)
out
xor
or
hlt
xor
mul
mov
clc
add
fstp
push
fdiv
jge
pop
retf
add
inc
fsub
stos
pop
and
mov
retf
xchg
push
retf
int
and
ins
loope
jmp
cmp
fsub
mov
xor
daa
or
jae
pop
imul
outs
aad
pop
mov
ins
mov
cmp
ja
mov
push
cdq
int3
cmp
int
xchg
fisub
sbb
sahf
add
xor
add
(bad)
retf
dec
jb
mov
mov
mov
(bad)
(bad)
xchg
lds
pop
ds
out
stc
cmp
dec
or
mov
sahf
dec
pop
pop
pop
pop
imul
push
mov
leave
dec
inc
aas
push
dec
cmps
sub
shl
and
sub
push
pop
ins
imul
cli
add
fldcw
mov
or
jno
and
ins
mov
jmp
cmps
mov
xchg
mov
and
sub
mul
inc
push
lahf
inc
mov
xor
dec
ja
mov
imul
jecxz
ins
jecxz
and
mov
fwait
cmp
xchg
arpl
les
jmp
pop
jg
mov
and
cmps
sbb
lds
xchg
and
jo
test
jno
out
sbb
(bad)
pop
mov
inc
aas
pop
sbb
fdiv
adc
in
xchg
pop
daa
inc
mov
icebp
or
outs
xor
dec
aad
adc
mov
test
in
fisub
stos
adc
mov
jae
push
repz
loopne
pop
(bad)
push
pop
and
cld
lods
mov
test
(bad)
and
mov
out
add
push
jg
pop
jp
out
std
or
fiadd
clc
test
popf
add
jle
sti
mov
cmps
add
fstp
arpl
pop
mov
stos
lahf
jmp
jge
leave
jp
jle
or
mov
and
sti
pop
movs
xor
sub
cmp
jp
addr16
mov
pop
(bad)
fisubr
out
dec
ins
test
sub
dec
fwait
sub
cmc
mov
dec
push
pop
ret
(bad)
test
pop
loop
mov
or
cmp
mov
aas
pop
adc
loope
cmp
fst
outs
dec
loopne
add
leave
pop
es
pop
push
xchg
xor
jmp
mov
jl
cmc
jmp
jmp
and
inc
add
retf
or
sbb
xor
icebp
xor
and
int
sbb
mov
pop
mov
and
bound
fwait
ss
retf
pop
sbb
and
enter
repnz
pop
push
adc
mov
inc
dec
pusha
mov
movs
mov
fwait
movs
cmps
imul
push
arpl
push
and
pop
out
outs
ss
(bad)
loope
aas
and
jmp
or
inc
mov
pop
arpl
add
neg
cmp
pop
push
shl
sbb
add
dec
xlat
hlt
out
mov
ins
lods
push
(bad)
cmps
jnp
and
dec
movs
adc
push
or
and
popa
in
inc
or
sti
icebp
pop
test
idiv
stc
or
mov
push
or
dec
adc
dec
data16
sbb
int3
test
jae
inc
lods
test
or
sahf
push
inc
cli
mov
jmp
jmp
add
push
in
and
cld
xchg
aad
mov
sub
mov
data16
cld
cmp
imul
cli
or
sub
cmp
jne
lock
bound
dec
xor
(bad)
and
mov
xor
shl
add
mov
or
jl
fmulp
fs
shr
add
jmp
in
ins
sbb
popa
mov
ins
js
cwde
or
add
sub
leave
(bad)
cmp
inc
fimul
sub
in
sbb
add
sbb
sub
call
pop
repnz
into
dec
sub
je
xchg
inc
cmps
pop
xchg
fcomp
mov
cs
sti
jno
mov
loop
daa
adc
pop
jb
retf
loope
jle
pop
addr16
sub
xchg
jbe
ss
or
daa
xor
test
lea
outs
jle
scas
mov
shr
test
aam
push
add
inc
fs
pop
pop
js
outs
ss
fsub
(bad)
push
mov
inc
clc
cmp
pop
js
xchg
ins
push
or
bnd
push
repz
push
adc
call
dec
outs
(bad)
fistp
xchg
popf
sbb
mov
shl
sub
call
out
sub
out
sbb
jo
add
out
jmp
xchg
rcl
stc
add
mov
in
outs
mov
fistp
adc
leave
xor
mov
imul
jl
jb
sbb
jmp
stos
push
and
aas
pop
(bad)
clc
mov
cmp
dec
ret
js
xor
cmc
fsubr
arpl
xor
inc
aas
dec
repnz
(bad)
xchg
enter
jae
sti
xor
mov
das
test
mov
sbb
sub
dec
sbb
jb
inc
jnp
add
popa
retf
arpl
ror
retf
push
cmps
jnp
xor
pop
xor
sbb
jecxz
xchg
lods
push
outs
imul
scas
and
xchg
jl
mov
adc
jmp
retf
stc
dec
inc
push
scas
xor
cmp
push
adc
rcl
outs
xchg
jecxz
xor
or
and
inc
into
or
add
mov
or
fsub
icebp
stc
mov
push
fmul
pop
es
in
xchg
xor
ins
gs
xor
inc
lock
sar
lds
mov
sbb
dec
inc
fstp
pushf
scas
sub
pop
mov
jae
inc
and
mov
push
lods
and
in
inc
loope
mov
nop
test
mov
ja
shl
mov
xchg
xchg
outs
add
mov
push
sub
movs
pop
cmp
mov
jno
pop
xchg
sahf
mov
adc
adc
ret
jecxz
(bad)
lods
pop
jmp
cmp
mov
out
rcl
xchg
inc
inc
popf
and
rol
add
shl
xor
jne
push
hlt
(bad)
jbe
fist
lahf
sbb
loopne
dec
xchg
pop
bound
xor
push
mov
inc
ins
stc
leave
cmp
outs
mov
push
inc
rol
xchg
add
sub
mov
out
xchg
xchg
add
ficom
cmp
sbb
cmps
fisub
fwait
ror
stos
stos
imul
iret
mov
push
xchg
push
push
imul
aam
xor
xchg
ins
stc
sbb
pop
mov
enter
sbb
lds
sar
fidiv
sbb
mov
sub
jmp
lods
push
mov
or
pop
xchg
jecxz
aam
int
cwde
adc
sbb
mov
dec
jecxz
inc
inc
sbb
ins
push
sub
jl
mov
pop
add
and
mov
inc
popa
ins
xor
loopne
or
or
test
leave
ss
jmp
(bad)
sub
sti
jl
sbb
sahf
adc
pop
pop
jge
mov
or
adc
lock
loop
sbb
push
outs
cmp
pop
loopne
lods
inc
jae
fwait
jbe
mov
sahf
adc
jg
mov
ret
sbb
or
bound
test
xchg
pusha
retf
mov
stos
push
leave
fwait
jg
pop
adc
push
test
stc
mov
std
xchg
stos
push
mov
mov
fs
hlt
add
add
mov
mov
xor
add
mov
sbb
jl
fcomp
cs
sbb
into
mov
xchg
and
stos
push
cmps
inc
push
aam
mov
movs
ins
neg
inc
xlat
lods
lea
and
adc
pop
or
mov
jae
inc
push
dec
jmp
or
int
(bad)
push
cdq
imul
push
data16
mov
cmc
mov
mov
cmp
les
jmp
out
dec
mov
jmp
inc
movs
jno
and
adc
inc
fs
xlat
scas
mov
das
push
lahf
(bad)
sbb
movs
scas
add
mov
ret
lahf
xchg
lea
xor
int
push
mov
and
sub
sub
je
or
rcl
rcl
sbb
pop
iret
add
lock
cmps
sub
push
sbb
mov
jb
mov
fsincos
fadd
adc
add
pop
push
mov
xor
(bad)
lock
xchg
inc
scas
(bad)
mov
or
jmp
adc
sub
xchg
dec
xchg
mov
pusha
or
and
jl
dec
jecxz
jecxz
outs
lahf
dec
div
ja
pop
inc
retf
sbb
lods
xor
in
inc
and
jle
(bad)
lock
sbb
sub
inc
sub
sahf
loopne
pushf
jns
mov
das
jg
fbstp
out
repz
dec
repz
add
fs
ficom
add
outs
jno
in
push
jle
and
gs
mov
lods
in
inc
push
inc
adc
out
jecxz
xchg
dec
(bad)
daa
arpl
neg
lock
mov
(bad)
ret
mov
xchg
in
adc
pop
xlat
push
stc
ja
and
jmp
and
loope
data16
je
xchg
movs
push
arpl
call
or
in
pop
push
call
jge
stos
outs
data16
cdq
jecxz
js
jge
cmp
adc
int3
out
push
in
outs
stos
adc
xchg
mov
call
iret
cmps
xor
xchg
cmp
jmp
stc
add
dec
jecxz
retf
inc
out
adc
std
pop
(bad)
jmp
fst
and
sbb
pop
mov
mov
cs
jmp
pop
inc
jge
rol
imul
clc
repz
inc
repz
xchg
inc
(bad)
retf
retf
test
mov
arpl
push
add
clc
int
out
mov
add
xchg
leave
or
(bad)
shl
test
ret
and
out
bound
or
mov
ins
ror
inc
test
inc
or
jmp
jp
or
icebp
mov
and
mov
(bad)
in
(bad)
fisub
sbb
addr16
xchg
fwait
ds
call
mov
hlt
mov
(bad)
lock
das
cmp
enter
mov
push
cmp
outs
adc
push
push
add
adc
mov
cli
(bad)
mov
or
mov
outs
cwde
xor
lods
loopne
ret
dec
sbb
in
push
fcomp
js
sbb
and
dec
lock
test
jnp
dec
sbb
mov
mov
jns
jle
int
out
movs
pusha
in
rcr
or
inc
xor
shr
xchg
xor
imul
inc
ret
arpl
fist
or
pop
outs
outs
jno
add
sbb
out
inc
inc
(bad)
jmp
jmp
outs
xchg
jne
outs
xor
lods
in
or
dec
test
in
popa
inc
dec
in
cmp
inc
or
aaa
dec
fsub
adc
fnstenv
adc
(bad)
adc
dec
(bad)
push
repnz
or
stc
sbb
or
xor
and
jmp
dec
stc
outs
fild
scas
jne
push
fisub
mov
pusha
sbb
cld
pop
mov
jae
jg
imul
cld
adc
and
rcr
add
repz
addr16
sbb
inc
cmp
iret
add
repz
fs
iret
adc
jg
adc
xchg
ins
inc
jecxz
dec
sbb
cmps
int
dec
mov
jne
pop
jmp
sahf
push
jg
inc
test
mov
mov
add
or
adc
inc
mov
sbb
jecxz
mov
and
cmps
or
cmps
ss
out
mov
sub
in
popf
cmp
call
out
cmp
nop
das
push
sub
arpl
out
(bad)
xlat
ja
fisttp
or
xor
fnsave
aas
push
sahf
sbb
test
push
(bad)
iret
jge
xor
mov
enter
push
inc
jne
and
pop
inc
scas
je
mov
and
cld
leave
xchg
mov
std
and
inc
fnstsw
shl
mov
sub
xchg
mul
lock
retf
repz
ja
mov
mov
dec
aad
sahf
sub
pushf
es
pop
and
stos
adc
int
loope
sub
lds
sahf
and
jge
mov
retf
mov
mov
clc
aaa
call
or
mov
out
jb
pop
sub
mov
or
mov
out
adc
stos
push
loop
out
push
or
js
mul
pusha
stos
pop
mov
cmp
(bad)
jo
dec
pop
xchg
sbb
xchg
mov
or
daa
mov
dec
jp
xchg
push
mov
repz
and
popf
int
jbe
sbb
inc
mov
pop
mov
je
and
div
inc
mov
sub
in
inc
adc
pop
movs
retf
push
mov
stc
(bad)
pusha
gs
lea
mov
mov
(bad)
jge
movs
xlat
pop
out
daa
and
pop
sub
cmc
mov
stos
mov
and
retf
mov
loope
cmp
mov
or
sub
movs
pop
mov
inc
sbb
mov
adc
add
rol
arpl
leave
mov
sbb
xchg
js
test
or
test
ja
pusha
mov
xor
dec
loop
mov
xchg
(bad)
jo
imul
sbb
add
inc
and
lds
adc
inc
pop
call
mov
jbe
push
les
nop
jne
pop
adc
fild
jnp
mov
push
retf
inc
mov
mov
lock
jg
mov
cmc
(bad)
aas
out
mov
scas
jmp
jbe
ret
int3
lods
outs
out
mov
test
xlat
sbb
xchg
mov
push
push
xor
outs
xchg
sub
add
mov
ret
or
int3
call
sti
lock
aam
mov
push
sub
aam
dec
jmp
xor
mov
push
dec
ja
dec
mov
cli
lods
xchg
xchg
jb
push
shl
cmp
pop
les
es
inc
(bad)
mov
inc
adc
add
inc
cld
mov
jmp
xor
lods
jle
fdivr
test
cmps
jl
lea
pushf
in
jno
jae
push
in
stc
ins
fdivr
scas
sub
inc
hlt
bound
mov
mov
sbb
jmp
sub
and
jg
jae
(bad)
(bad)
jmp
sub
out
sahf
adc
fdivrp
aad
cmc
and
sbb
sub
dec
enter
jmp
popa
mov
mul
mov
gs
xor
jbe
and
mov
rcl
xor
arpl
push
pop
hlt
jae
outs
loop
iret
sub
lds
movs
mov
fucomp
lods
jmp
mov
lods
inc
jne
mov
mov
or
ret
imul
sub
inc
push
in
sub
test
add
sbb
out
or
cmps
add
int3
bound
pop
xchg
push
or
cmc
aaa
add
pop
in
fmul
pop
jns
sbb
ret
lods
pop
push
dec
or
(bad)
(bad)
fisubr
scas
and
retf
push
pop
push
mov
sbb
stos
cmp
test
bound
dec
jp
xor
retw
std
test
push
add
mov
lods
stos
stc
rcr
cdq
push
cmp
mov
adc
sbb
cdq
lods
and
push
xchg
pop
jns
jmp
in
ins
push
repz
lods
adc
adc
jecxz
int3
data16
push
pop
sbb
sbb
out
mov
mov
js
or
ret
cmp
icebp
stc
enter
mov
jbe
fild
es
popf
enter
fwait
adc
and
loop
add
out
and
push
mov
js
dec
add
xor
xchg
push
pop
neg
push
or
jmp
sbb
dec
enter
cs
mov
(bad)
test
xchg
push
jl
cmps
and
in
mov
mov
retf
out
add
add
shl
nop
pop
js
fidivr
call
retf
jl
aaa
mov
dec
pop
xchg
fisub
cmps
and
push
retf
mov
mov
jb
outs
jge
dec
xor
out
data16
fsub
sbb
dec
mov
mov
rcr
cwde
or
push
lods
(bad)
or
add
and
int
sub
loope
lahf
dec
out
mov
cmp
jl
mov
adc
pop
pop
mov
cmc
or
mov
xchg
adc
scas
ins
mov
pusha
inc
pop
lods
imul
jb
or
or
jge
mov
pop
or
push
jp
rcr
icebp
mov
dec
aas
jo
movs
jns
xchg
pusha
das
pop
test
pusha
imul
mov
popf
inc
test
retf
mov
test
jle
into
(bad)
(bad)
xchg
fldenv
dec
out
pop
(bad)
pop
push
sub
bound
mov
je
aam
xchg
and
aam
and
add
(bad)
out
xor
es
jecxz
sbb
add
adc
jbe
test
aam
sbb
cld
aad
sub
clc
xchg
add
popf
xor
mov
push
or
mov
xchg
rcr
sar
sbb
jbe
xchg
jne
pop
and
shl
sbb
xor
jns
xchg
dec
mov
dec
adc
push
pop
aas
stc
test
mov
int
sbb
adc
xchg
and
add
pop
xlat
sbb
adc
data16
div
or
cli
push
daa
cs
add
ins
cmp
gs
mov
inc
add
sbb
mov
sti
cmp
ror
jns
cli
push
js
mov
ds
push
push
cmp
les
iret
shr
sahf
stc
rcr
mov
mov
fstp
inc
push
nop
inc
push
cmp
(bad)
or
or
and
dec
add
out
xchg
jnp
in
js
inc
fst
lea
lods
mov
jle
jmp
mov
jbe
sub
ret
bnd
retf
xchg
cmps
div
hlt
inc
jno
mov
xchg
push
fsqrt
jecxz
mov
gs
loope
push
xchg
dec
mov
test
imul
jae
and
sahf
xchg
sti
pop
pop
pop
imul
imul
jp
pop
sbb
adc
push
test
loopne
bound
nop
push
sub
cmps
add
enter
xor
and
(bad)
and
popa
pushf
mov
pop
jmp
stos
adc
ficomp
sub
adc
cmp
adc
sbb
pop
xchg
inc
test
fst
into
leave
pushf
jge
jno
cmp
xor
aaa
xchg
(bad)
mov
movs
adc
mov
xor
jno
std
stc
popf
int3
or
pop
add
add
test
mov
pop
cli
mov
in
push
in
push
sbb
out
icebp
call
loop
imul
sub
or
out
(bad)
fld
adc
outs
in
mov
sub
(bad)
sbb
dec
and
xchg
adc
mov
(bad)
cdq
fisttp
test
test
and
cmp
mov
and
pop
outs
jle
sub
enter
ja
cld
mov
sub
fnstsw
or
dec
xchg
xor
sub
hlt
aam
bound
or
sub
repz
adc
jle
jmp
xchg
into
pop
mov
dec
repz
in
mov
mov
mov
add
adc
cs
div
push
or
imul
xchg
es
mov
enter
imul
stos
outs
imul
imul
jmp
mov
mov
mov
popf
in
bound
inc
jbe
xchg
jb
adc
call
push
xor
repz
jmp
punpckldq
mov
aam
or
dec
hlt
jp
push
(bad)
or
rcl
lock
cmp
sahf
rcr
inc
xor
mov
pop
js
call
pop
inc
icebp
fldenv
inc
pop
rcr
mov
mov
mov
inc
inc
aaa
push
shl
xchg
xor
nop
add
jbe
push
test
in
adc
adc
ins
push
imul
test
das
mov
fild
jp
cmp
loop
pop
lock
sub
or
mov
push
sti
push
pop
fwait
iret
stos
cli
fwait
mov
adc
cmp
dec
mov
pop
jns
mov
mov
ins
inc
aaa
mov
in
shl
inc
ss
sub
lods
push
and
es
xchg
mov
out
dec
xchg
lods
clc
std
xor
ja
sahf
fst
jle
xchg
dec
mov
cmps
loope
push
add
imul
push
fs
arpl
fisttp
pop
scas
mov
fisub
(bad)
fdiv
out
daa
or
inc
pop
cmp
cwde
aam
stos
sub
ficom
lods
push
mov
dec
ret
adc
daa
sbb
mov
dec
and
or
inc
jbe
(bad)
mov
adc
inc
mov
push
cmc
movs
push
int3
lods
push
pop
jle
or
stc
popf
and
cmc
std
cmp
inc
aaa
mov
mul
aaa
fs
pop
retf
xlat
dec
jle
inc
push
dec
xchg
dec
jl
sbb
loopne
jle
push
mov
fwait
jnp
dec
dec
int3
or
sub
out
push
sub
mov
out
or
outs
adc
sbb
xor
arpl
adc
int
test
push
push
scas
sbb
sbb
inc
pop
add
mov
(bad)
push
daa
call
inc
pop
inc
mov
sub
fistp
inc
rcr
int
(bad)
sbb
push
dec
arpl
sub
aam
rcr
aaa
ins
dec
jp
add
cwde
frstor
cs
nop
ins
nop
or
or
add
hlt
movs
dec
xchg
jle
push
inc
das
call
and
push
js
test
mov
jbe
inc
xor
pop
inc
movs
inc
es
mov
stc
ror
cmps
add
cmps
adc
arpl
jmp
outs
or
lods
out
arpl
test
aaa
aam
xchg
xrelease
or
dec
(bad)
aad
std
out
and
or
mov
jns
xchg
fnstsw
mov
in
rol
movs
ror
mov
les
(bad)
push
in
jb
iret
xor
ret
stos
popa
push
lods
out
dec
pop
jbe
xor
jmp
popa
inc
js
sub
pop
sub
aam
ja
sbb
(bad)
das
mov
(bad)
addr16
pop
and
and
gs
xchg
cmp
outs
retf
adc
repnz
sbb
adc
push
pop
inc
cmp
adc
jle
jecxz
add
xor
cmps
inc
inc
ret
lock
fs
push
int3
dec
das
cwde
arpl
scas
xor
jl
retf
ja
shl
idiv
dec
sbb
pop
dec
jmp
aad
xor
cwde
outs
adc
outs
idiv
out
inc
loopne
retf
push
cmps
jnp
in
mov
mov
and
enter
and
cmp
jns
jl
cmp
mov
test
rep
push
cmp
out
aam
cmp
sub
cli
xor
js
test
sbb
cld
gs
mov
mov
adc
pop
adc
cdq
inc
js
pop
daa
cwde
jmp
xor
pop
adc
dec
into
jmp
push
repz
sbb
inc
cmp
mov
ret
push
mov
mov
dec
mov
and
cwde
int3
xlat
fs
xor
ror
fwait
imul
sub
jne
pusha
mov
push
and
push
mov
fistp
int
imul
cmps
sbb
jno
dec
jae
or
icebp
jne
test
mov
ja
call
adc
jne
popa
mov
cmp
lahf
popf
dec
ss
fist
jae
lea
test
cli
in
adc
stc
pop
push
xor
bound
adc
(bad)
jb
lods
push
mov
pop
inc
outs
cmp
xor
and
push
nop
push
loope
imul
jg
stos
dec
in
in
outs
xor
xor
cmps
and
mov
pop
or
sbb
out
or
pop
int3
or
jo
cmps
adc
jb
(bad)
mov
fdivr
jne
repnz
hlt
jg
dec
fwait
movs
mov
scas
arpl
xchg
cmp
scas
push
adc
mov
jle
daa
pop
push
ror
pushw
inc
jbe
sbb
data16
jbe
leave
clc
sar
jmp
mov
pop
fisubr
mov
scas
iret
push
cwde
jbe
pop
lods
add
xchg
pop
ins
and
mov
and
add
andnps
inc
daa
sahf
hlt
int3
jnp
aaa
jg
mov
inc
xor
sbb
ret
sbb
cs
les
sub
js
mov
push
and
(bad)
dec
xchg
dec
pop
ror
lahf
movs
push
push
jns
pop
scas
cdq
push
inc
into
ins
push
imul
adc
bound
sbb
jg
cmp
cli
push
and
inc
mul
sbb
pop
adc
xchg
xchg
in
clc
ficomp
jo
js
sti
out
aaa
enter
pop
push
ins
sar
scas
sbb
call
cmps
mov
mov
mov
lahf
dec
and
mov
push
dec
ins
cmp
inc
repnz
pushf
sub
fist
test
dec
jge
shr
add
sub
pop
ror
sub
test
mov
clc
out
cmp
ds
test
dec
xor
mov
adc
pop
popf
adc
jno
adc
pop
push
jl
jnp
push
mov
jmp
jl
cmp
rol
aaa
rol
(bad)
cmc
loop
sub
scas
xchg
cmp
aad
popf
sub
jl
(bad)
xchg
and
pop
dec
jl
popf
fidivr
or
jecxz
mov
or
imul
std
jns
mov
mov
cmps
mov
mov
and
ja
dec
sti
fstp
aaa
lods
push
int3
sti
xor
fs
call
jbe
ja
pop
xchg
pusha
sbb
pop
pop
out
les
jecxz
ds
dec
inc
xchg
mov
or
enter
dec
mov
aam
mov
sub
adc
push
dec
jmp
push
and
sahf
sub
pop
test
aam
sbb
scas
cwde
lods
cmp
jmp
cmp
xor
std
push
sahf
fdiv
out
jnp
(bad)
div
push
xor
cmp
jmp
xchg
mov
es
jle
les
aam
ror
sub
bound
cld
mov
mov
mov
loope
inc
jge
in
or
ins
cdq
(bad)
mov
cmps
dec
xchg
sbb
cmp
pop
or
xchg
xor
and
xchg
addr16
mov
(bad)
leave
ret
pop
inc
add
test
scas
pusha
cld
dec
jge
xor
jmp
fmul
add
pop
in
sti
inc
(bad)
in
jge
movs
push
mov
dec
push
or
cdq
xchg
mov
out
out
inc
push
push
push
call
cs
int3
out
jnp
cmp
jg
call
adc
out
les
sbb
xor
or
xor
cmp
mov
dec
sub
pop
nop
ins
mov
shl
cs
mov
pop
cmp
out
jns
sub
xchg
cdq
(bad)
xchg
test
icebp
(bad)
mul
jecxz
mov
fdiv
dec
mov
xchg
jle
ficomp
pop
stos
xor
mov
data16
stc
mov
cwde
and
pop
pop
enter
xchg
(bad)
(bad)
mov
and
mov
xor
cli
mov
retf
inc
sbb
pop
fs
dec
ss
ret
inc
into
dec
rcl
test
shl
(bad)
retf
outs
mov
fild
fidivr
je
xor
dec
dec
adc
inc
pusha
dec
stc
test
pop
fsub
ret
into
(bad)
sti
(bad)
neg
push
add
mov
outs
icebp
pop
in
cdq
jo
fsubr
fisub
xchg
sub
(bad)
jbe
dec
jmp
xchg
xchg
dec
js
pop
je
retf
cmp
dec
push
ins
retf
push
mov
lahf
inc
cdq
mov
cmp
mov
inc
push
fdiv
sbb
xchg
and
call
neg
movs
add
movs
sbb
pop
aam
sub
adc
sar
iret
jno
mov
sub
movs
inc
jl
dec
rcr
jnp
(bad)
sbb
adc
and
jl
sub
mov
aaa
push
call
adc
iret
xchg
sti
je
ficom
cs
jne
in
outs
fstp
jae
jg
ficomp
jo
les
test
loopne
sub
lock
(bad)
xchg
adc
push
enter
(bad)
shl
hlt
pop
fstp
jo
aaa
jae
add
cld
sub
adc
adc
arpl
cmps
xor
dec
movs
xchg
jle
xor
push
ds
fild
dec
scas
aaa
jbe
dec
xor
test
push
ins
sahf
inc
push
push
fisubr
mov
push
xor
mov
dec
mov
test
ins
mov
xchg
test
or
and
shl
adc
repz
hlt
add
mov
push
retf
fdivrp
mov
stos
bound
inc
or
test
xchg
mov
bound
mov
repz
mov
in
jmp
ret
out
gs
stos
pop
(bad)
leave
dec
repz
mov
stc
jmp
pop
push
aas
mov
loop
jb
bound
into
idiv
loop
int
in
fist
jp
push
mov
xor
mov
lahf
xchg
movs
jmp
les
add
push
adc
push
push
mov
(bad)
push
cmp
cs
mov
out
loope
fs
xchg
lods
imul
jmp
pop
outs
push
mov
push
out
jmp
or
cdq
adc
sub
(bad)
and
ret
push
lock
jle
xchg
fdivr
nop
xchg
and
push
jb
jns
(bad)
mov
dec
pop
sbb
xor
arpl
nop
pop
repnz
movs
bound
sub
ficom
ret
in
daa
pop
xlat
mov
outs
mov
push
mov
retf
retf
sub
add
xchg
fisub
adc
dec
cwde
clc
sub
mov
mov
cmp
and
repz
push
sbb
xlat
in
jmp
inc
pop
pop
popf
clc
sbb
mov
pop
xor
cdq
mov
iret
xchg
inc
push
jbe
push
sub
pop
outs
iret
dec
push
pop
mov
xchg
dec
ds
lahf
dec
fistp
das
sahf
sub
stos
dec
arpl
fwait
call
loop
sar
or
sub
cli
stos
push
into
push
std
jmp
xor
xor
dec
pop
iret
push
sub
jo
ins
call
or
sbb
hlt
ja
repz
lods
dec
push
bound
push
add
(bad)
sub
sub
pop
xor
fcomp
inc
mov
lods
psubsb
(bad)
pop
sbb
and
in
and
or
inc
sbb
add
xchg
test
push
hlt
stos
not
lods
pushf
in
sbb
int
out
(bad)
in
xor
jecxz
cmp
fld
jae
aad
retf
add
push
mov
scas
xchg
aas
gs
in
aaa
jecxz
addr16
pushf
fcmovnu
adc
and
outs
jmp
mov
xchg
and
mov
pop
outs
push
sub
popf
jmp
and
js
mov
addr16
adc
pop
retf
js
inc
(bad)
sub
scas
sub
stc
dec
jl
ins
loope
or
repz
add
icebp
xor
jp
repnz
jnp
lahf
sub
jmp
ret
outs
or
cli
test
test
sbb
pop
and
xchg
xchg
setno
jl
retf
xchg
inc
jns
xor
daa
lock
loopne
push
loope
pop
jl
bnd
cmp
mov
push
dec
xor
sbb
test
cmp
stos
out
in
loopne
cmp
into
daa
imul
dec
jo
inc
lods
adc
aad
stos
adc
repz
mov
or
pop
jmp
sahf
imul
(bad)
mov
push
sbb
adc
push
xor
outs
test
sub
leave
imul
inc
fdiv
(bad)
stc
je
retf
addr16
jae
out
in
pop
push
cmp
jns
test
jmp
adc
movs
pop
cs
loope
mov
shl
xchg
loope
(bad)
mov
in
sbb
pop
jp
stos
push
adc
pushf
in
jae
mov
inc
shl
ja
fstp
out
jle
add
(bad)
out
add
(bad)
jno
mov
clc
and
in
sti
mov
adc
mov
sbb
push
cmp
mov
stc
add
loopne
movs
add
fdivr
xor
pop
push
jbe
pop
mov
mov
mov
int
movs
cmps
cmc
aad
sub
out
sbb
js
daa
lahf
sub
jb
mov
xor
pop
sbb
mov
dec
sti
xor
jge
xor
xchg
ss
into
cmc
sub
dec
(bad)
ds
cmp
iret
jnp
hlt
in
add
inc
pop
sbb
(bad)
mov
push
push
in
rol
or
sbb
jecxz
cmp
jle
fsubr
scas
sub
adc
mov
sbb
leave
adc
sbb
cdq
mov
mov
xchg
and
push
clc
pusha
jns
popa
push
fistp
cld
es
pusha
xchg
and
sbb
scas
push
mov
push
test
sub
sub
addr16
cdq
call
push
add
dec
icebp
mov
lods
call
pop
int3
cmp
hlt
sar
(bad)
or
cdq
jbe
xchg
(bad)
xor
aad
sbb
jge
stos
pslld
into
mov
xchg
push
cmps
sub
test
loop
or
sub
lock
imul
gs
ins
push
cmp
ret
loop
cmp
cmp
mov
aaa
sub
jle
mov
sti
bound
call
inc
rol
push
test
dec
xchg
out
cmc
ret
sbb
adc
inc
out
shl
or
sbb
or
jmp
xchg
out
dec
stos
and
sbb
xchg
das
call
push
mov
mov
cwde
adc
cli
cmp
sti
cmps
sbb
sub
pusha
jns
call
test
cmp
xchg
sbb
aam
jmp
ret
aad
xor
or
xor
jnp
inc
and
lods
inc
add
fnstenv
mov
push
mov
cmps
push
sahf
cwde
xchg
(bad)
das
fdiv
add
mov
movs
adc
adc
mov
arpl
int3
stos
cwde
xlat
adc
fadd
scas
push
ret
adc
jp
cmp
push
sahf
mov
jl
daa
fwait
pop
dec
in
sbb
xchg
xchg
shl
lock
sti
loope
pushf
or
pusha
movs
out
dec
add
dec
jge
mov
push
fistp
js
xchg
xor
sbb
mov
data16
mov
dec
pop
adc
lea
pop
inc
stos
fld
inc
jnp
jmp
sar
sbb
daa
inc
adc
cmps
fwait
add
(bad)
mov
gs
bound
jle
or
mov
jae
inc
fimul
lods
pop
mov
int3
daa
mov
int
cmp
pusha
mov
or
popf
mov
(bad)
jae
inc
outs
fild
aaa
inc
or
inc
retf
xlat
fisub
inc
and
cmp
push
adc
mov
mov
cmps
or
out
fcmove
mov
mov
pop
fs
pop
xchg
lods
pop
test
sub
es
ja
push
loope
pop
mov
popf
out
out
mov
cs
sub
sti
bndldx
xchg
pop
or
ja
sub
cmps
scas
out
sub
(bad)
lea
jmp
xchg
sub
and
and
imul
xchg
pop
adc
test
cmp
and
mov
push
ret
push
mov
adc
xor
shr
cwde
mov
(bad)
xchg
pop
jmp
mov
(bad)
loopne
xchg
pop
mov
ds
jge
pop
mov
sbb
int3
cdq
mov
add
popf
loope
fist
jno
jl
jbe
mov
pop
test
std
pop
jbe
aaa
(bad)
aas
addr16
sbb
xor
rcr
outs
pop
and
jp
sti
stos
cld
or
mov
arpl
and
sbb
(bad)
push
dec
add
jnp
(bad)
repnz
sbb
iret
pop
jle
vandps
push
ins
push
(bad)
mov
cli
ds
xchg
mov
sub
push
xchg
sub
and
add
call
and
and
popf
fsub
mov
cmps
pop
shl
jbe
sub
jb
fild
jle
ret
push
ins
aad
or
pop
repnz
sub
cmp
lea
xchg
loope
fld
(bad)
sub
mov
nop
push
push
sub
jnp
xor
mov
dec
(bad)
adc
mov
inc
add
sar
daa
xchg
aam
sub
mov
popf
jae
gs
sbb
push
stos
xor
dec
mov
gs
das
das
jp
repnz
mov
js
not
and
out
popf
dec
int
scas
dec
jecxz
fiadd
xor
and
cmps
cmp
(bad)
and
test
mov
and
popa
inc
xchg
cmp
loop
push
sbb
or
sub
std
cmp
pop
xor
push
fild
dec
xor
xchg
jne
std
aas
add
icebp
cmp
and
ficom
adc
fnsave
cmps
inc
push
xor
(bad)
adc
jns
ds
xchg
rcl
or
loopne
sub
loopne
pop
xlat
and
or
dec
adc
dec
outs
stc
and
jnp
das
pop
or
stos
sub
jb
lods
(bad)
mov
mov
pop
fimul
jns
into
or
mov
dec
repz
xchg
dec
mov
aaa
call
neg
bound
inc
jmp
push
loop
movs
push
popa
mov
sbb
rcr
rcr
xchg
push
jecxz
bound
cli
and
outs
mov
push
repz
jnp
mov
dec
cli
test
rcl
mov
or
pop
test
push
ja
sti
data16
add
fadd
lds
push
adc
test
add
cmp
scas
ret
cli
in
mov
adc
loop
mov
loope
leave
sbb
hlt
cmc
xor
inc
cs
ret
mov
pop
pop
mov
push
lahf
inc
ins
jge
pop
inc
pusha
in
fs
mov
cmp
dec
and
jecxz
mov
jecxz
cmps
xchg
add
icebp
jmp
cmp
pop
pop
and
or
(bad)
adc
imul
jno
pop
mov
xlat
clc
add
shl
leave
push
sub
dec
cmp
cmp
in
cdq
bound
sbb
add
add
add
ror
enter
mov
xlat
std
sbb
ret
js
imul
sbb
cmc
jge
or
inc
xor
jmp
sbb
aas
jbe
mov
(bad)
mov
test
call
push
jg
sub
lahf
aad
and
mov
xchg
xchg
mov
retf
fist
sub
fsubr
call
pop
in
sbb
xor
std
outs
ins
add
stos
xchg
pop
sbb
pop
jb
(bad)
lods
inc
sbb
or
sti
mov
or
icebp
cdq
pusha
mov
or
outs
and
cmp
inc
ficomp
sub
(bad)
jmp
aaa
add
retf
or
loope
mov
jmp
adc
dec
std
mov
es
add
pop
hlt
and
and
test
je
clc
cld
add
inc
cmp
mov
inc
mov
mov
int3
add
pop
cld
fcomip
cwde
jne
or
pop
in
jecxz
mov
mov
xor
popa
not
outs
in
jge
popa
fbstp
fcom
imul
test
aam
ret
cwde
cdq
xchg
pop
mov
(bad)
pop
cmc
fild
sub
pop
(bad)
mov
js
stc
or
popf
adc
cli
les
loopne
dec
push
jno
dec
pop
jp
out
repz
cs
lea
adc
in
jmp
js
pop
pop
scas
out
(bad)
jp
adc
inc
lock
retf
xchg
outs
mov
xchg
fidivr
imul
push
loopne
popa
sqrtps
sbb
push
fist
mov
or
stos
sub
cmp
stos
jmp
pop
adc
sub
xchg
jge
or
xchg
xor
mov
scas
mov
sbb
or
shl
adc
and
push
js
sub
and
enter
test
push
mov
xor
or
and
data16
in
add
in
push
sbb
out
aad
pusha
cs
out
fstp
in
ret
pop
jno
imul
stos
push
cmc
cdq
jnp
iret
mov
mov
inc
repz
push
sub
das
pop
add
push
xchg
lods
jmp
scas
movs
cmp
stos
and
inc
sbb
addr16
stc
in
(bad)
pop
cmp
mov
cld
mov
mov
dec
pushf
dec
mov
ins
fdiv
inc
std
lods
pop
in
cmp
xor
mov
push
(bad)
int3
scas
pop
adc
pop
fs
stc
pop
and
jp
retf
fsubr
sar
mov
retf
adc
popa
xlat
in
andnps
xchg
test
retf
iret
and
scas
lock
add
inc
and
punpckhbw
cmp
add
mov
repz
cmps
sti
push
in
push
in
je
enter
adc
int
dec
pop
cmp
aad
lds
mov
pop
jl
fcomp
mov
aas
jbe
xchg
and
gs
repnz
cs
inc
mov
outs
lods
cmp
and
into
ins
mov
sub
call
xchg
cmp
aam
jle
xchg
mov
cld
icebp
xor
enter
int
push
mov
jg
pop
jg
addr16
fwait
sub
fsubr
nop
xor
xchg
das
aam
xchg
not
cwde
pusha
mov
mov
in
mov
adc
iret
popf
outs
inc
or
dec
pop
and
imul
arpl
push
(bad)
test
lock
cld
inc
lahf
int3
into
pushf
jae
(bad)
pop
pop
sub
aam
or
retf
std
rol
rcl
(bad)
int
out
(bad)
sbb
adc
push
mov
pop
inc
xchg
scas
leave
add
push
mov
retf
inc
ret
arpl
out
push
(bad)
stc
pop
(bad)
imul
mov
xor
add
push
dec
xchg
jecxz
in
or
sbb
dec
cli
dec
rol
dec
push
into
ins
out
pop
jae
js
fsubr
loop
dec
push
jbe
mov
nop
add
cmps
fmul
sti
xor
imul
pop
sbb
enter
xor
hlt
sbb
cmps
push
fidivr
pop
mov
popf
ja
sub
mov
mul
jecxz
(bad)
jmp
push
pop
popa
hlt
or
mov
ds
shr
dec
pop
es
push
or
cmp
dec
es
push
loope
inc
mov
je
fwait
dec
nop
mov
and
inc
mov
mov
daa
outs
sbb
adc
mov
imul
adc
out
inc
or
inc
sbb
push
cld
mov
out
push
sub
lea
mov
mov
xchg
jp
into
add
xacquire
fistp
dec
push
add
mul
test
int
repnz
cbw
shl
pop
fist
jbe
sbb
dec
pop
or
adc
bound
aas
test
cmp
into
push
and
fs
shl
fcom
xor
mov
shl
test
jp
inc
ins
in
test
jae
loopne
lods
push
sbb
stos
add
repnz
push
test
push
add
sahf
xor
mov
fwait
out
push
cmps
imul
dec
sbb
scas
imul
bound
ror
movs
jbe
dec
dec
jo
clc
and
cld
rcl
cmp
mov
add
sub
cmps
mov
and
push
mov
xchg
fmul
clc
inc
jo
cld
cmp
cmc
aad
mov
sbb
push
shr
ja
ins
adc
lods
pop
(bad)
mov
aas
aad
mov
jge
add
les
inc
shr
je
(bad)
retf
inc
shl
adc
pop
sbb
dec
pop
push
imul
jl
xlat
test
imul
cli
daa
sub
pusha
(bad)
retw
pop
dec
xor
cmp
sti
outs
push
retf
sub
sub
cmc
jbe
adc
jge
xor
xchg
inc
arpl
setle
sahf
push
test
movs
xor
xor
pop
mov
inc
shr
(bad)
mov
mov
add
xchg
gs
mov
(bad)
mov
xchg
ins
adc
xchg
adc
inc
mov
cs
mov
dec
jecxz
mov
(bad)
sahf
iret
int3
and
or
xor
sti
div
push
cli
sub
or
and
test
je
std
cdq
fsubr
xchg
or
xor
pop
je
out
adc
in
jbe
adc
xlat
add
mov
push
aam
inc
daa
cmp
mov
adc
mov
addr16
pop
pop
lods
dec
add
pop
cld
push
rol
xor
ins
enter
cmp
add
sbb
mov
add
adc
stc
les
fst
mov
jl
cmp
jae
mov
mov
push
addr16
(bad)
pop
popa
test
mov
retf
ror
pop
inc
sbb
neg
jbe
add
mov
nop
stc
scas
cmp
xchg
and
mov
cli
inc
jae
les
aad
fst
cmp
or
mov
jne
lea
lock
ds
imul
test
(bad)
enter
imul
fisttp
adc
inc
mov
jae
sbb
push
je
rol
xor
mov
ja
sub
and
into
cmps
xor
fisttp
fcom
mov
add
in
enter
xlat
aas
xor
jp
data16
pop
xor
push
sub
push
aaa
inc
push
and
cmp
adc
shl
jne
mov
mov
fisubr
xor
and
ret
rcl
dec
xor
loop
ret
sub
icebp
push
pop
add
(bad)
lock
into
mov
out
hlt
sbb
dec
xor
push
pop
mov
mov
std
xor
in
add
lds
sub
pop
cmp
pop
jmp
test
aaa
dec
loop
popf
in
fwait
mov
adc
mov
test
dec
pushf
xor
popa
std
and
mov
ds
inc
call
ret
clc
sub
rcl
aaa
jbe
shl
cmps
rcl
shr
cmps
movs
(bad)
add
and
cwde
jge
imul
add
cmp
or
sbb
xchg
sbb
inc
retf
jne
jmp
xor
push
jne
jp
push
mov
xchg
dec
add
or
inc
ret
dec
mov
cmps
movs
jp
mov
out
(bad)
out
xor
or
pop
mov
xor
data16
imul
pop
(bad)
fld
jecxz
cwde
cmp
jg
stos
and
lea
adc
push
push
test
scas
call
imul
aaa
inc
mov
fldenv
jb
addr16
fsub
jae
stos
or
rcl
dec
jns
mov
mov
add
add
addr16
test
dec
psrlq
sub
mov
mov
xlat
pushf
bound
and
mov
fbld
adc
push
jmp
xchg
and
inc
aas
push
mov
out
xor
subps
ss
pop
mov
inc
jne
not
jo
pop
inc
daa
mov
daa
jno
inc
jecxz
jge
xor
xor
and
lock
out
out
stos
int
js
dec
or
xchg
(bad)
xchg
outs
add
int
cli
pop
xor
ins
(bad)
push
dec
je
mov
jecxz
cmp
bnd
xor
mov
or
lods
and
loop
fnstsw
addr16
mov
int3
mov
xchg
inc
xor
jge
int3
rcr
cmp
aad
imul
xchg
clc
and
into
push
and
scas
es
setns
repz
adc
adc
mov
jg
cmps
mov
cmp
fmul
sub
xor
repz
add
cli
(bad)
lock
sub
xchg
shl
inc
aas
dec
sbb
sub
cmp
fldenv
stos
add
jae
xchg
out
cmp
push
lods
ret
cli
ret
and
test
xchg
push
or
cmp
outs
mov
fdivr
test
loop
pop
movs
inc
pop
jecxz
repz
mov
cmp
retf
hlt
lock
pop
clc
rcl
jae
cli
mov
mov
mov
lods
iret
cmps
div
sub
popa
iret
jae
fidivr
rcl
popf
les
mov
dec
xchg
push
push
sar
cli
cmc
ret
cmc
and
iret
in
push
into
lahf
jb
pop
les
jns
test
push
mov
sub
dec
ss
mov
arpl
cmp
sbb
xchg
bound
fwait
jmp
aas
icebp
iret
or
pop
jecxz
test
and
sbb
mov
(bad)
push
imul
jb
jge
rdtsc
rcl
sbb
pop
push
dec
xchg
dec
push
pop
add
jbe
gs
adc
fsubr
rcl
mov
sqrtps
push
add
std
adc
fsub
and
ss
mov
call
cs
mov
std
or
sahf
pop
sbb
sbb
hlt
hlt
in
aad
into
pop
xor
mov
inc
outs
mov
jmp
call
cmp
push
pop
sbb
add
jbe
sub
mov
test
and
mov
outs
ficom
stos
xor
jmp
arpl
enter
pop
test
and
fld
pusha
sub
in
adc
jns
pop
je
inc
or
dec
xchg
mov
bound
nop
fnsave
add
call
jae
and
clc
test
movs
inc
inc
cmp
sub
div
push
pop
scas
cmp
cmc
sub
test
fidiv
ins
cmp
in
mov
push
loope
icebp
mov
das
mov
add
leave
in
into
cmps
repz
xchg
lods
or
out
mov
cmc
je
jge
(bad)
mov
inc
jecxz
cli
sti
dec
dec
arpl
mov
add
gs
add
sti
cmps
fsub
fst
xchg
xor
and
ins
xchg
shl
inc
cmp
cmps
ss
loopne
nop
int
daa
xchg
or
(bad)
scas
fisubr
test
pop
inc
leave
pop
js
call
(bad)
mov
cmps
jg
xor
cmp
adc
mov
mov
mov
jnp
mov
xchg
inc
lahf
movs
fmulp
sti
push
test
pop
and
popf
mov
arpl
push
bound
or
cdq
fadd
mov
test
jb
ds
mov
loope
iret
addr16
ror
test
fmul
add
mov
sti
dec
fnstcw
jmp
imul
jbe
js
cmp
and
dec
pop
push
push
out
push
shl
stc
cmp
pop
inc
mov
mov
mul
std
scas
aad
jecxz
mov
cli
fisttp
pop
sbb
lahf
test
bound
cmp
retf
jns
out
sub
iret
push
fist
xchg
pop
js
aaa
adc
xor
test
lock
or
mov
sub
repz
hlt
bound
and
ins
push
inc
sbb
cmp
xlat
mov
call
ds
dec
xor
adc
mov
mov
inc
inc
dec
xlat
sbb
pushf
movs
xchg
cmp
mov
ja
dec
(bad)
mov
and
(bad)
adc
xchg
jmp
xor
mov
jle
jb
jbe
sbb
and
add
cmp
rcr
stc
and
out
inc
sbb
daa
sub
fwait
jle
mov
syscall
ss
iret
sti
mov
push
je
in
mov
cmp
cmp
mov
imul
fcmovbe
push
scas
xor
test
xchg
fisttp
or
xor
mov
mov
xchg
and
sbb
and
mov
cmp
in
into
push
sahf
js
test
(bad)
xor
lock
out
jmp
xor
arpl
imul
inc
(bad)
sub
xor
cmp
sbb
fnstcw
daa
enter
(bad)
or
mov
fidiv
ja
call
das
jbe
out
sub
mov
sbb
pushf
arpl
xchg
push
inc
int
and
add
inc
hlt
mov
mov
or
jne
(bad)
or
jle
xchg
or
movs
push
call
xchg
mov
aaa
push
mov
xchg
fldcw
ss
xchg
xchg
nop
leave
push
cld
and
xor
sti
imul
sbb
inc
rol
mov
push
push
xchg
mov
fcom
mov
ins
pop
xchg
sub
dec
into
enter
push
daa
adc
repz
sar
gs
shl
fst
sar
and
mov
cdq
jae
mov
int
jmp
xchg
sbb
icebp
addr16
sti
mov
fbld
outs
xchg
sub
cmp
dec
xchg
sbb
std
fcomp
popa
popf
imul
mov
push
in
ss
sbb
sub
jbe
mov
icebp
jmp
test
test
cli
inc
pop
mov
cmps
jnp
pop
xor
out
xchg
in
jae
inc
(bad)
mov
sbb
add
inc
pushf
sub
lds
call
inc
jg
lds
nop
out
pop
push
cwde
pop
push
sbb
adc
adc
out
fidivr
imul
rcr
xor
xchg
mov
jbe
test
xchg
push
xor
out
jle
sbb
mov
add
(bad)
in
scas
clc
xchg
cwde
retf
cmp
or
add
les
aam
stos
or
xchg
cli
nop
cmp
test
pop
sbb
sbb
out
test
mov
mov
fwait
or
loop
push
or
(bad)
sahf
fldenv
rol
inc
stc
outs
les
test
outs
hlt
jns
xor
sar
aam
xor
cld
lock
retf
adc
jne
ficom
push
mov
lea
pop
cmc
aas
jge
pop
mov
mov
aaa
fld
aad
or
outs
(bad)
mov
xor
loope
shr
jmp
jmp
inc
pop
nop
sbb
sbb
(bad)
adc
pop
add
add
sub
xor
push
mov
and
xchg
inc
shl
mov
lods
mov
sub
xor
add
or
bswap
jecxz
imul
lock
imul
mov
mov
aam
xchg
pop
(bad)
dec
leavew
jmp
scas
pop
jb
clc
inc
add
out
bound
jmp
mov
test
addr16
inc
repnz
fisttp
sbb
rcl
(bad)
repnz
adc
xchg
hlt
jecxz
sbb
push
stos
dec
out
adc
jns
in
(bad)
ss
push
ja
psrlq
mov
std
fild
mov
sub
sub
dec
cmp
call
into
rcl
adc
fistp
loop
stos
mov
cwde
sbb
push
sbb
inc
mov
xor
xlat
jp
and
jmp
pushf
cwd
iret
in
lods
cdq
mov
adc
lock
cmp
xchg
xchg
movntps
cmp
pop
fs
mov
sub
jmp
push
lock
pop
add
lahf
ins
pop
jns
(bad)
xlat
rol
sbb
xchg
mov
ffreep
movs
pop
push
push
cli
ror
punpckhbw
jo
cmc
movs
repz
or
and
jbe
push
lock
in
std
mov
sbb
sbb
xchg
inc
not
fwait
inc
(bad)
push
add
cli
adc
push
cdq
in
shl
pop
aaa
mov
movs
xlat
js
jge
push
das
xchg
daa
pop
addr16
test
add
add
rcl
cs
push
packsswb
push
sti
mov
cwde
daa
sar
mov
pushf
jne
mov
adc
add
add
jmp
xchg
push
or
or
fwait
test
push
test
jmp
movs
push
fdiv
and
xchg
or
jmp
cmp
pop
fadd
es
pop
rcl
pushf
out
jecxz
inc
adc
shl
cmps
bnd
lods
call
outs
jne
mov
gs
jle
out
jg
stc
test
cmp
sub
jl
mov
mov
xchg
sti
out
neg
sahf
gs
shl
dec
cmp
lods
cli
aam
cmp
fcmovne
sti
mov
data16
mov
xor
int3
retf
jnp
ror
or
adc
in
push
dec
and
in
dec
inc
and
push
mov
mov
jbe
sbb
std
pop
jbe
(bad)
push
mov
shr
aaa
push
mov
je
sbb
push
jne
or
add
xor
bound
std
add
jmp
scas
(bad)
mov
mov
arpl
push
dec
jo
fstp
mov
test
out
dec
push
dec
ins
lods
and
pop
xchg
fmul
repz
lahf
push
outs
cmp
imul
jecxz
(bad)
test
inc
idiv
mov
call
scas
call
not
mov
jmp
js
daa
mov
sbb
xchg
pop
ret
cmp
das
out
jg
push
pop
fcomp
ins
jns
cmc
in
cmps
(bad)
sbb
in
sbb
jns
add
hlt
pusha
lea
lea
push
xlat
out
pusha
jnp
call
iret
jo
sbb
pushf
iret
push
pusha
in
xchg
dec
xor
nop
mov
dec
arpl
aaa
imul
push
dec
sbb
add
push
rcl
cld
aad
into
rcr
and
push
(bad)
leave
push
add
fcmovnbe
cs
fiadd
aas
and
push
cmps
mov
mov
push
in
loop
sub
enter
loop
adc
aaa
mov
xchg
cmp
stc
shl
cs
popa
mov
sbb
add
int3
sbb
jb
popa
out
in
(bad)
fldl2e
xchg
jo
xchg
stc
push
pusha
xchg
loope
jecxz
add
outs
out
mov
ret
sbb
pushf
cmps
or
(bad)
les
pop
scas
mov
aam
jecxz
retf
push
mov
mov
dec
leave
mov
popa
inc
int
call
std
nop
in
push
clc
xchg
inc
and
cmp
push
(bad)
in
mov
xchg
or
test
popa
cmp
adc
mov
int3
cmp
cmp
mov
(bad)
int3
ins
adc
cmp
fisub
scas
lahf
mov
dec
push
sahf
add
or
mov
and
stos
adc
mov
popf
or
jl
pop
ret
(bad)
jle
shl
(bad)
in
add
jge
mov
repz
repz
pushf
jo
dec
xor
jo
dec
sbb
shl
xchg
push
push
repz
mov
cli
les
dec
dec
dec
rcl
sub
mov
movs
bound
cmp
cmps
jp
in
and
dec
adc
test
ja
mov
inc
inc
mov
add
jmp
and
ret
dec
in
into
xor
es
cdq
rol
je
pop
aas
inc
pop
fild
mov
sar
fldcw
pop
ss
inc
add
add
(bad)
daa
in
pop
dec
ror
inc
push
lahf
xchg
xchg
mov
es
push
pop
int
shl
cwde
ror
dec
cmps
mov
xlat
in
sbb
push
mov
adc
cmp
addr16
int3
and
or
mov
dec
leave
dec
int3
iret
in
imul
imul
(bad)
dec
or
pop
pop
movs
xor
repnz
cdq
xchg
out
mov
test
xor
pop
adc
das
sbb
enter
adc
dec
or
inc
movs
(bad)
sub
pop
mov
jl
in
pop
push
sub
mov
pop
dec
ret
popa
addr16
daa
outs
add
retf
imul
repnz
jns
cld
cmp
jmp
stos
popf
mov
sbb
cmp
(bad)
in
xor
(bad)
mov
inc
clc
pop
adc
pop
test
add
in
(bad)
movs
or
jae
(bad)
retf
loope
out
mov
fsubr
pop
add
aam
fnstenv
add
scas
lahf
mov
(bad)
(bad)
adc
stos
aad
or
jne
das
fdecstp
repnz
push
pop
std
test
push
xlat
in
arpl
jecxz
inc
pop
ret
push
fwait
aaa
mov
push
jle
aad
inc
adc
fmul
pop
arpl
sub
(bad)
out
push
dec
in
or
cmp
neg
sbb
aad
jb
xor
or
(bad)
stos
loop
das
(bad)
cmp
frstpm(287
xchg
cmps
outs
xlat
cli
xchg
and
idiv
or
outs
imul
xchg
test
mov
push
or
(bad)
and
imul
rcl
(bad)
jbe
retf
(bad)
icebp
aas
int3
sub
aam
push
cmp
imul
into
out
imul
out
mov
cwde
mov
inc
movzx
push
(bad)
sbb
adc
push
xlat
stc
(bad)
bound
mov
stos
cmc
mov
jecxz
cvtpi2ps
ss
pushfw
mov
(bad)
xor
push
jne
jno
mov
aam
hlt
xor
in
push
stos
xor
aam
adc
imul
mov
nop
sar
test
clc
out
dec
out
test
pop
pop
pop
mov
(bad)
xchg
mov
xchg
pop
or
adc
fnstenv
push
xlat
mov
xchg
pushf
jae
dec
and
pusha
test
pop
adc
outs
push
mov
inc
mov
aad
adc
jae
loopne
jmp
jecxz
adc
sub
aam
lahf
pop
sar
inc
mov
stc
shl
(bad)
xchg
out
movs
(bad)
xchg
aas
lea
scas
retf
push
(bad)
and
loopne
retf
mov
xchg
pop
mul
sbb
loop
jne
jnp
rcl
inc
add
clc
sub
movs
sub
fisttp
xor
xchg
imul
inc
add
imul
stos
popf
nop
mov
push
xor
fimul
popa
mov
mov
ins
shl
or
mov
cmc
fild
gs
and
push
dec
test
or
rcl
das
dec
xchg
mov
mov
cld
push
and
or
or
stos
mov
imul
sti
add
aaa
mov
test
mov
fnstcw
mov
scas
nop
daa
sub
xchg
inc
push
mov
cwde
mov
inc
push
outs
ret
jns
add
imul
cmp
dec
dec
sub
mov
push
pop
pop
adc
rcr
aaa
push
push
xor
and
cwde
cmp
(bad)
fistp
xchg
lods
repnz
(bad)
call
jno
mov
js
or
inc
mov
pop
jmp
xor
mov
mov
dec
jae
pop
in
cmp
mov
xlat
mov
mov
(bad)
sub
xlat
fld
leave
mov
dec
mov
vmovss
adc
call
mov
(bad)
out
call
in
xor
fst
inc
fstp
in
retf
dec
icebp
adc
pop
xchg
or
ins
ds
mul
xchg
loopne
fstp
cli
cwde
ins
(bad)
sbb
pop
add
in
stc
mov
add
sahf
push
retf
ret
jmp
(bad)
or
add
xor
sub
inc
and
xor
inc
mov
mov
pop
push
and
aas
movs
ret
out
pushf
or
mov
add
iret
lds
adc
mov
and
je
jns
sub
neg
ret
pop
push
retf
and
addr16
mov
jae
lock
fist
sub
add
push
jg
out
sbb
dec
mov
push
cmp
inc
ret
lea
add
mov
pop
mov
cmp
add
sti
xchg
lods
pushf
test
ss
imul
pop
sbb
dec
popf
ficom
std
and
stos
clc
or
gs
dec
mov
mov
std
xor
aam
fisttp
pushf
add
dec
repz
(bad)
inc
out
in
push
(bad)
push
add
adc
sub
gs
mov
cwde
pop
sbb
arpl
fsubrp
sub
and
jns
and
cdq
jne
shl
jg
inc
out
sub
dec
fs
dec
lds
mov
into
dec
ja
ja
pop
into
mov
cmp
pop
sti
jmp
test
setp
arpl
push
(bad)
jmp
sar
dec
and
mov
js
mov
inc
jo
mov
in
addr16
jbe
xchg
push
xchg
stos
cmp
aaa
push
lock
push
les
sub
addr16
es
sbb
push
xchg
out
mov
push
push
adc
jp
push
push
jmp
clc
outs
sub
cmp
pop
add
pop
dec
jge
cmp
int3
inc
call
and
outs
int
stos
dec
les
add
bound
pop
sti
pusha
in
adc
ss
inc
xor
out
lods
sbb
sub
dec
loop
data16
dec
jns
inc
xchg
add
icebp
sub
js
(bad)
(bad)
nop
xchg
jmp
loopne
rcl
mov
les
sbb
mov
mov
xchg
leave
or
(bad)
fnstsw
movbe
push
popf
inc
or
sbb
pop
xchg
mov
je
xchg
pop
sbb
mov
fcmovb
inc
add
daa
push
ins
pop
xor
out
(bad)
inc
mov
in
add
fst
mov
lock
nop
scas
and
(bad)
add
xchg
jge
sbb
dec
jge
lds
or
imul
and
in
mov
pop
xchg
pop
sahf
outs
syscall
out
data16
out
ds
mov
xor
mov
adc
push
sbb
xor
pop
repnz
fild
jnp
add
jmp
xchg
pop
jge
hlt
test
jecxz
jp
fstp
inc
lds
pop
push
xchg
ds
dec
js
add
sbb
repz
jae
jge
inc
int3
add
call
sbb
clc
pusha
ror
imul
mov
fnsave
(bad)
js
push
jmp
ds
mov
in
cmp
pop
mov
cmp
xchg
fsub
stos
imul
mov
cmp
mov
mov
out
mov
loope
fadd
aam
dec
inc
xchg
push
nop
icebp
jmp
push
cld
jecxz
mov
jg
js
ins
push
xlat
in
stos
call
mov
inc
or
into
fadd
push
scas
(bad)
js
out
cmp
mov
inc
sub
(bad)
outs
aaa
mov
mov
loopne
arpl
push
or
inc
aad
xlat
aam
loopne
sub
sub
pop
push
pop
push
xchg
jnp
jge
aad
xchg
xchg
fwait
loop
psubq
xchg
inc
mov
or
sub
and
js
call
jmp
outs
pusha
sub
ror
sub
push
mov
or
popf
es
rep
call
pop
mov
cmp
mov
and
jbe
xor
mov
pop
mov
pop
inc
and
das
sub
mov
scas
pop
mov
pop
in
xchg
cdq
mov
dec
cmp
cmp
les
scas
mov
imul
scas
sub
fisttp
mov
imul
movs
sbb
loop
ret
dec
or
push
aam
jbe
inc
dec
dec
mov
sbb
iret
(bad)
push
push
inc
icebp
dec
hlt
xor
mov
inc
lock
cmp
xor
adc
je
adc
push
aaa
inc
rcr
jne
dec
push
fdivr
push
int
mov
adc
fsubr
or
(bad)
inc
(bad)
stos
inc
dec
js
(bad)
or
adc
repz
ficomp
nop
fdiv
bnd
in
arpl
mov
fimul
pop
imul
push
in
imul
jl
mov
xor
js
sub
in
mov
push
xor
jecxz
mov
js
jae
std
or
xchg
stc
ror
add
pop
ins
mov
sub
xchg
or
sub
cdq
iret
dec
cmps
adc
pop
or
mov
icebp
push
or
jl
xor
imul
js
mov
scas
mov
(bad)
jns
jl
stos
in
out
adc
mov
rcr
sbb
xchg
xor
adc
push
hlt
mov
sahf
outs
mov
add
mov
adc
gs
pop
daa
in
int
movs
test
jmp
inc
dec
or
add
push
and
in
les
call
ins
ret
push
xor
adc
pushf
(bad)
pop
pop
jl
mov
push
test
mov
mov
aam
push
loope
repnz
rcl
imul
jno
fldenv
add
sub
rcl
nop
mov
retf
sbb
jb
mov
sbb
ret
ret
mov
jns
pushf
fimul
xchg
ins
pop
fldpi
ss
out
out
dec
loope
mov
xor
aas
push
xor
sub
and
in
mov
icebp
mov
cdq
cmps
pcmpeqw
in
mov
fsubr
mov
rcl
repz
or
movs
push
add
push
push
jecxz
cld
je
push
popf
retf
call
add
imul
push
jb
imul
add
mov
mov
push
shr
(bad)
or
jmp
not
inc
add
test
fwait
add
inc
aas
or
mov
(bad)
fcom
xor
mov
lods
dec
mov
sub
push
(bad)
jae
mov
ja
je
repnz
aaa
test
aas
mov
or
xchg
dec
out
dec
and
sbb
jbe
js
add
mov
cli
push
mov
add
sub
(bad)
(bad)
cmps
leave
imul
mov
clc
cmp
imul
or
xchg
movs
xor
xchg
ror
int3
clc
repz
in
jne
and
cmp
stc
shl
cmp
xor
les
mov
cmc
retf
pushf
xor
cli
adc
popf
jbe
pop
into
loope
jecxz
push
(bad)
inc
cmp
mov
stos
mov
(bad)
jmp
inc
mov
jbe
inc
int3
inc
mov
mov
add
push
xlat
(bad)
mov
and
aas
arpl
ret
xchg
inc
daa
sub
or
(bad)
mov
xchg
pop
retf
inc
inc
inc
dec
or
mov
adc
jno
sbb
bnd
call
test
xor
ficom
fmul
sar
mov
or
adc
pop
aaa
call
push
scas
mov
mov
pop
pushf
mov
ins
les
sbb
fld
js
(bad)
mov
aas
outs
sti
jmp
lea
cmps
js
push
add
sbb
out
and
fs
xchg
add
inc
mov
adc
adc
mov
mov
sub
push
(bad)
(bad)
out
(bad)
mov
out
lea
lods
aad
sub
test
adc
xor
and
pop
bound
(bad)
in
scas
loop
adc
ss
and
popf
int3
dec
bound
daa
fcomp
adc
mov
in
leave
adc
inc
xchg
mov
add
pop
jmp
push
add
(bad)
(bad)
cmp
repnz
dec
mov
sbb
rcl
adc
mov
sub
mov
es
lods
sbb
rol
cs
xor
cmps
hlt
add
scas
cmp
xchg
xlat
pop
movs
dec
xchg
in
cli
sahf
and
xchg
jmp
repnz
shl
xchg
push
adc
xchg
adc
pop
jmp
push
(bad)
(bad)
iret
inc
add
mov
xor
cmp
jns
inc
push
fisttp
cdq
pop
pop
mov
xchg
lds
sbb
call
mov
xchg
inc
xor
ret
(bad)
in
pop
or
push
lods
loope
xor
mov
mov
xchg
movs
sbb
dec
pop
arpl
js
int3
movs
jb
imul
mov
cmps
mov
add
xchg
push
mov
pop
shr
jg
movs
sbb
dec
loopne
and
inc
dec
sbb
cmc
or
mov
dec
xor
repz
adc
imul
xor
and
rol
push
pop
test
outs
and
daa
xchg
adc
fwait
test
mov
sbb
rcr
nop
push
mov
push
xchg
push
mov
cmp
out
cmp
jg
add
ss
sbb
add
ja
xor
push
jecxz
push
lea
retf
test
das
repnz
sahf
mov
jo
mov
(bad)
mov
dec
repnz
fstp
jmp
sar
call
ins
pop
xor
jns
mov
push
dec
aam
push
into
ds
rcr
je
test
and
inc
shl
fwait
call
push
retf
ds
pop
add
pop
aad
dec
ins
out
and
(bad)
out
into
cli
and
mov
mov
pop
xor
idiv
outs
sbb
sbb
pop
int3
jbe
call
fisttp
mov
or
in
sbb
sbb
ds
jo
or
and
push
in
xor
movs
fisttp
call
sbb
aas
xor
xchg
cmp
add
and
aad
jle
test
stos
mov
sbb
or
lods
push
dec
popf
(bad)
movhps
imul
inc
in
(bad)
test
int3
xchg
repnz
ror
cld
xor
and
dec
imul
stos
jbe
pop
sahf
pusha
test
into
std
sahf
xchg
pop
pushf
loop
sbb
test
in
leave
mov
icebp
push
pop
sahf
push
mov
xchg
lahf
out
(bad)
in
(bad)
fistp
je
sub
and
and
push
sbb
aas
aam
js
pop
mov
cmp
mov
stos
and
jbe
or
(bad)
push
mov
mov
xchg
fsubr
push
or
fadd
and
in
mov
pop
inc
(bad)
xchg
push
or
mov
std
out
test
retf
pop
std
pop
pop
pop
lea
and
mov
or
dec
or
inc
stos
adc
int3
imul
inc
inc
test
ret
test
in
mov
push
lods
xchg
ss
sbb
push
pop
nop
lds
jg
and
xchg
add
div
sub
cmp
movs
cdq
into
daa
movs
in
xor
scas
retf
inc
or
jns
sbb
add
je
aam
xchg
movs
cld
mov
retf
daa
(bad)
dec
js
mov
(bad)
xor
and
sbb
ds
out
lea
daa
mov
not
and
and
movs
imul
mov
test
cs
sub
cs
shr
(bad)
fcmovne
pop
xchg
(bad)
jl
ss
lods
xchg
push
loop
or
test
adc
sar
imul
daa
mov
xor
gs
mov
pop
ret
jmp
or
hlt
outs
jmp
fbld
stos
or
daa
sbb
jmp
inc
ss
and
(bad)
mov
test
mov
arpl
or
sbb
scas
push
push
add
mov
mov
jg
pushf
sub
push
rcl
push
dec
call
repz
int3
xchg
(bad)
jns
adc
xchg
dec
and
ret
jae
cli
stc
inc
daa
int
pop
out
aaa
adc
ins
dec
cmp
mov
aad
iret
add
in
stc
and
lahf
in
cmp
jge
mov
loope
xor
dec
add
cmps
dec
inc
xchg
and
xchg
pop
leave
stos
movs
movs
mov
fisttp
jmp
or
ss
movs
icebp
adc
jbe
arpl
jge
xlat
leave
jge
and
jae
lea
sbb
jo
pop
mov
add
lock
enter
xor
scas
pop
loopne
imul
add
out
fbstp
fsubp
nop
aam
and
cmps
shr
xchg
xchg
inc
jmp
fcomp
cdq
enter
dec
dec
inc
(bad)
movs
pop
jl
cmp
arpl
cmp
mov
rol
mov
fnstcw
mov
into
(bad)
adc
push
pop
scas
xchg
and
push
jb
sahf
retf
out
movs
mov
rol
xor
or
jge
cs
mov
sbb
retf
scas
stc
fcmovnb
into
jmp
jmp
in
push
lods
push
jmp
cmp
mov
outs
mov
add
loop
(bad)
das
stos
rcl
xor
xchg
dec
cmp
dec
xor
mov
sbb
pop
fucom
push
sahf
add
mov
pop
mov
pop
test
sti
ins
jmp
mov
and
cmp
pusha
scas
or
bound
xor
and
lea
mov
or
mov
mov
add
mov
lock
leave
test
cmp
and
pop
mov
(bad)
add
xor
xlat
sbb
and
cmp
adc
adc
jne
mov
jg
in
mov
and
sub
dec
xchg
sub
adc
stc
sahf
add
repnz
xor
pushf
xor
add
aam
cld
and
repnz
xor
jno
add
add
add
dec
add
mov
sub
popa
mov
stos
add
pop
and
shr
call
and
sbb
add
icebp
xor
and
jne
cmp
ins
aas
pop
iret
test
jle
inc
call
out
repnz
fdiv
jmp
rcl
mov
aas
ins
or
mov
shl
imul
dec
mov
ins
lds
jb
mov
ss
aaa
push
adc
jmp
cwde
ins
jmp
shl
sahf
jg
sti
inc
data16
mov
pushf
leave
stc
ror
xor
fwait
dec
jmp
inc
push
int
scas
jns
fs
adc
lea
std
push
outs
and
sbb
add
arpl
outs
mov
push
in
(bad)
int3
icebp
movs
xor
out
lgdtd
repz
retf
cmp
cld
leave
jg
inc
cmc
jns
mov
test
sub
add
pop
mov
jns
adc
xor
movs
mov
into
clc
xchg
cmp
jno
aam
enter
mov
ins
pop
push
jbe
in
dec
mov
push
inc
jle
loop
xchg
std
cmp
xor
mov
add
es
dec
xor
icebp
push
sahf
hlt
pop
sti
test
test
pop
sub
test
jne
sbb
cmp
dec
sar
clc
pop
jmp
test
gs
mov
mov
mov
sbb
inc
sbb
pop
cmps
out
mov
imul
xchg
mov
in
dec
pop
into
mov
and
and
dec
xchg
std
retf
scas
test
mov
cdq
hlt
dec
add
stos
call
add
icebp
outs
ja
gs
fdiv
cld
je
or
xchg
adc
mov
mov
push
loope
arpl
xchg
pusha
enter
(bad)
rcl
inc
cs
push
jno
mov
test
imul
movs
jecxz
mov
ss
cmc
mov
mov
icebp
sti
jle
ja
mov
xor
scas
loop
jge
mov
fcmovnb
mov
xor
lds
lds
jmp
icebp
hlt
dec
ret
call
push
cs
popf
mov
dec
add
test
sbb
lock
pop
push
add
mov
fsubrp
ins
fcom
xchg
jp
int
or
imul
cmc
push
dec
cmp
jmp
mov
mov
sti
xchg
iret
adc
or
(bad)
sahf
sub
mov
loopne
inc
icebp
hlt
mov
je
int3
mov
push
inc
mov
in
jmp
xchg
imul
pushf
lea
movs
xor
gs
dec
xor
repz
cmp
loope
jne
add
ins
mov
fs
das
dec
xor
ret
rcr
jmp
stos
pop
scas
dec
repz
call
xchg
mov
daa
into
jl
sbb
or
or
pop
pop
aaa
in
jno
xor
aad
push
add
arpl
jge
aaa
test
addr16
shl
inc
fnstsw
inc
cmp
and
std
lock
dec
jbe
scas
or
cmps
ficom
retf
ins
dec
je
sub
cmps
out
adc
dec
js
ror
inc
(bad)
lds
push
jno
pop
clc
jns
call
cmc
cmp
lea
lods
movs
js
mov
cmp
jmp
mov
dec
retf
jp
lods
js
dec
dec
cmp
xlat
jmp
add
aaa
sbb
fisttp
jae
popf
stc
jbe
push
outs
fdiv
pusha
lods
xchg
xchg
fiadd
dec
push
cwde
cwde
fld
shl
inc
sbb
add
sbb
xor
loop
(bad)
mov
jmp
enter
movs
int
push
stos
(bad)
aaa
adc
pop
mov
lods
dec
or
dec
cmps
stc
mov
push
(bad)
popf
adc
enter
mov
jecxz
mov
mov
outs
js
mov
inc
retf
jno
add
inc
pop
imul
sbb
loopne
add
int3
scas
leave
inc
pop
cmc
aaa
pusha
ja
mov
gs
fwait
sar
or
int3
les
and
push
xchg
(bad)
jecxz
pop
into
ins
je
dec
cs
jae
es
pop
pop
imul
xor
outs
xchg
fdiv
std
add
(bad)
stos
leave
cwde
lds
xchg
outs
mul
push
jno
lods
test
inc
test
mov
or
inc
adc
fimul
mov
int3
cmp
ss
mov
dec
pop
jle
adc
adc
retw
or
lods
les
out
ret
dec
adc
sbb
js
jle
sub
xchg
sbb
test
cmps
imul
mov
push
pushf
mov
and
inc
adc
bound
xchg
(bad)
pop
sbb
jmp
xchg
idiv
in
sub
popa
mov
xor
jns
or
cmp
ficomp
and
sbb
mov
cmps
pop
push
push
adc
fisubr
test
in
dec
or
imul
sub
test
mov
les
pop
pop
aas
mov
aaa
push
cmp
bound
out
sbb
stos
push
leave
retf
scas
add
outs
cmc
push
into
mov
ja
jo
sub
add
fmul
cmp
lods
mov
xchg
jecxz
xchg
pslld
cli
in
cmps
aam
sbb
dec
add
movs
test
pop
ins
push
xchg
(bad)
sar
and
fdiv
sbb
add
call
mov
les
xchg
dec
bound
test
popa
push
sbb
jmp
pop
and
enter
test
lock
gs
sbb
mov
cmp
mov
ss
inc
in
out
popf
ins
stos
push
xchg
mov
outs
or
xchg
clc
js
mov
pushf
xor
(bad)
sub
xor
arpl
(bad)
cli
retf
pop
imul
rol
push
ret
(bad)
sbb
and
push
mov
addr16
cmp
es
dec
xchg
push
xlat
frstor
rol
xchg
test
les
xchg
mov
pusha
jg
cdq
jle
ins
cmp
sbb
fsub
shr
retf
stos
add
jle
push
xor
mov
ret
dec
sbb
sub
movs
xchg
sub
ja
jo
(bad)
movs
push
add
and
jne
loopne
mov
dec
int3
jne
aam
and
jne
pop
mov
fimul
push
sbb
shl
fistp
fwait
retf
cmc
push
(bad)
inc
sub
pushf
dec
xchg
(bad)
cmc
add
push
adc
adc
add
dec
mov
pop
mov
lahf
jmp
xchg
cmp
mov
aas
push
mov
adc
loopne
jl
sub
xchg
xor
outs
mov
jg
hlt
inc
push
add
jns
inc
mov
inc
mov
mov
xchg
jbe
ret
in
mov
and
mov
imul
inc
cmc
xchg
leave
adc
fdiv
cmp
jno
and
push
lock
add
or
or
xchg
jle
cmp
dec
gs
or
rol
push
ins
(bad)
ja
dec
bound
xor
jb
imul
(bad)
xor
ins
sub
xor
aam
std
mov
shl
imul
cmp
fld
sub
push
shl
jbe
mov
dec
sbb
jbe
lods
lods
aas
dec
sub
outs
cdq
inc
test
push
je
scas
sbb
dec
mov
out
(bad)
in
and
pushf
or
push
mov
jnp
icebp
xchg
push
push
(bad)
jmp
cmp
sbb
imul
pop
push
dec
dec
stos
adc
xchg
dec
sti
xor
fwait
push
sub
adc
sub
(bad)
adc
rep
and
xor
lds
mov
shl
pop
xor
pop
adc
retf
xlat
jmp
pop
imul
test
sbb
jg
pushf
cdq
push
mov
push
xchg
jmp
int
jo
or
call
pop
test
pop
adc
pushf
mov
add
aad
cmp
das
aam
sub
jnp
xchg
jle
idiv
adc
leave
les
adc
mov
(bad)
ficomp
dec
xchg
dec
jbe
shr
mov
(bad)
mov
adc
inc
lahf
jne
adc
jle
jg
mov
call
cld
mov
nop
jg
fmul
daa
arpl
xchg
movs
jecxz
ins
xlat
ins
push
mov
mov
leave
fisubr
or
call
gs
mov
mov
push
or
xor
cmp
pop
aas
(bad)
(bad)
cli
daa
dec
sub
sbb
and
mov
fcom
sub
mov
cmp
mov
mov
outs
mov
mov
jae
mov
stc
mov
mov
xchg
jg
shl
mov
into
lods
pop
pop
pop
or
add
mov
leave
outs
stos
lods
adc
test
loop
pushf
and
cmp
mov
jmp
jns
scas
push
fcmove
pushf
xor
mov
jns
enter
cmp
mov
cli
adc
adc
xor
ret
sbb
cmp
push
mov
pop
inc
jbe
sub
jb
jns
jb
mov
jnp
mov
std
xchg
ins
or
cmp
jl
movs
addr16
inc
and
mov
inc
std
xchg
loopne
pminsw
adc
mov
add
push
mov
pop
pop
jb
xchg
and
outs
jbe
leave
leave
push
test
shl
xlat
jg
dec
stos
adc
add
test
inc
sub
and
dec
int
arpl
push
nop
mov
imul
fdiv
dec
pop
cs
push
mov
imul
in
pusha
xor
cwde
cmp
mov
js
push
cli
movs
clc
push
inc
and
pushf
pusha
push
fs
mov
arpl
jge
aaa
push
mov
jae
jecxz
jp
hlt
js
or
pop
adc
inc
lds
cmp
or
push
jg
popf
(bad)
adc
jge
mov
loope
mov
or
sub
inc
pop
xor
push
or
sub
jbe
add
pop
sbb
lock
retf
gs
sahf
lock
mov
dec
jno
ret
push
or
mov
sub
xor
xor
sti
mov
mov
sbb
retf
scas
test
(bad)
jmp
inc
fs
cmp
jne
popf
push
mov
daa
jbe
cmps
popf
cmp
or
pusha
aam
inc
sahf
inc
shufps
test
jae
xchg
in
jmp
or
xlat
or
pop
jmp
popf
fiadd
out
test
xchg
sub
cmps
aaa
xchg
cmps
cmp
mov
jo
adc
test
fcmovnbe
sar
fmulp
push
js
(bad)
xchg
pop
cdq
jmp
stos
neg
std
mov
and
addr16
push
sub
and
packsswb
push
push
out
xchg
adc
xor
xchg
aad
pop
jbe
xor
ret
jmp
stc
pop
scas
call
nop
in
mov
or
dec
mov
xchg
mov
lods
outs
push
das
or
ins
out
jno
sbb
jbe
mov
xchg
(bad)
std
imul
inc
mov
(bad)
ss
mov
bnd
daa
in
mov
imul
call
mov
sahf
pusha
std
adc
dec
mov
jo
in
mov
mov
arpl
test
add
sub
adc
sbb
pop
int
sbb
sub
ror
adc
std
sbb
pop
push
das
add
pop
retf
sbb
add
fisubr
das
mov
sbb
mov
ins
jne
inc
dec
les
aad
scas
dec
xchg
adc
sub
ret
jnp
and
clc
out
mov
mov
dec
pop
xchg
(bad)
xchg
xor
ficom
sbb
inc
push
cmp
push
mov
(bad)
mov
cwde
adc
xchg
iret
or
jnp
popa
mov
test
aaa
arpl
mov
mov
into
sub
inc
inc
aam
sub
xlat
arpl
int3
adc
call
mov
fs
push
pop
sub
enter
adc
data16
push
cmp
iret
fidiv
pop
je
icebp
and
push
mov
inc
jnp
scas
ret
cmps
pop
out
je
mov
jl
jnp
test
in
call
or
fcmovnbe
or
push
dec
push
cmps
push
mov
and
out
xor
stos
mov
leave
ja
xor
in
(bad)
out
pop
sbb
mov
cli
(bad)
clc
jb
jne
pop
sbb
ins
adc
push
mov
cs
mov
shl
shr
and
pop
and
pushf
out
pop
inc
xchg
push
push
push
leave
bound
mov
adc
ret
je
jge
push
fdivr
je
call
inc
inc
maxps
push
and
xchg
into
and
es
popa
into
pop
jns
jg
mov
leave
movs
fcmovnu
sub
rcr
mov
adc
mov
mov
data16
data16
cmp
adc
enter
mov
mov
push
mov
jl
cmp
and
shr
jae
repz
sub
mov
push
cmp
or
jecxz
mov
cmp
aaa
cwde
xor
mov
repnz
imul
test
mov
call
stos
int3
mov
mov
dec
pop
fcom
dec
js
cmp
sar
sahf
xchg
(bad)
stos
mov
xchg
dec
mov
les
push
dec
mov
fisubr
xor
mov
loop
ret
mov
sbb
jno
jns
fadd
pop
mov
fbstp
popa
push
add
xor
ds
nop
repnz
scas
mov
call
aad
int
or
psrad
add
inc
scas
inc
pushf
arpl
xchg
mov
cmps
bound
sbb
retf
jae
or
mov
pop
inc
stos
or
mov
push
test
arpl
pop
out
loop
jb
inc
mov
mov
lods
cmps
imul
dec
dec
jb
cdq
inc
popa
addr16
loop
call
mul
les
sbb
scas
xor
test
sub
xchg
or
mov
jl
enter
mov
add
mov
push
ins
test
int3
adc
add
lea
test
adc
aad
fidivr
or
ret
mov
xchg
dec
jge
xor
dec
ficomp
jle
mov
cmc
les
and
xlat
pop
sbb
repz
xlat
cwde
(bad)
mov
or
scas
adc
mov
scas
sbb
icebp
pop
(bad)
jae
cmps
mov
ins
jp
sbb
je
inc
lds
jae
jg
inc
ss
out
sar
sub
xchg
mov
ins
mov
pop
sti
cmp
sbb
jl
mov
sti
ret
xchg
not
loope
shl
pop
push
popf
movs
pop
call
in
inc
movs
mov
daa
pop
mov
jae
in
pushf
call
xchg
mov
xor
dec
out
repnz
sub
jle
or
inc
jmp
cld
xchg
sub
mov
or
mov
mov
inc
mov
mul
ja
repnz
jp
out
cmps
dec
push
fdivr
ins
jg
sbb
adc
stc
jnp
jmp
mov
ss
mov
pop
cmp
jbe
mov
push
inc
loop
(bad)
int3
xchg
mov
mov
xor
ltr
ins
(bad)
sti
popa
push
push
xchg
imul
pop
test
sbb
les
outs
mov
jbe
es
ins
inc
inc
ret
(bad)
(bad)
cmp
mov
jno
jge
or
popa
push
mov
lock
int3
stc
mov
test
and
(bad)
cdq
pop
into
xor
out
wrmsr
sar
hlt
popf
xlat
push
cmps
jnp
add
rol
retf
sub
inc
push
cld
cdq
shl
mov
stos
push
popa
or
adc
mov
mov
dec
rcr
std
pop
mov
pop
inc
mov
mov
sub
mov
scas
mov
fld
jmp
or
fcom
xchg
retf
pop
retf
ss
sbb
scas
mov
push
pop
dec
mov
loopne
addr16
clc
fld
repz
xchg
jo
pop
xor
jmp
mov
pop
out
add
iret
lock
stos
and
test
cmp
stc
mov
push
das
pop
push
test
outs
test
mov
adc
test
aaa
mov
sbb
loop
push
mov
inc
cld
stos
js
fisubr
push
test
xchg
mov
jo
push
xchg
dec
das
mov
mov
xchg
xchg
dec
dec
push
dec
push
mov
lock
ja
inc
adc
mov
xchg
std
mov
fcmovbe
jle
xor
push
add
call
xor
neg
arpl
push
push
mov
sub
nop
sub
pop
dec
(bad)
jmp
inc
(bad)
(bad)
mov
and
dec
stos
xchg
in
cs
repnz
shl
push
inc
fdiv
xor
mov
test
adc
jne
push
cmp
nop
xchg
adc
adc
push
ds
mov
sbb
sbb
mov
add
xchg
sub
outs
lahf
call
mov
int
rep
jns
mov
or
scas
and
mov
pop
sbb
sub
test
sbb
add
int
pop
test
xor
push
dec
xchg
mov
xchg
xor
xchg
inc
cmp
aam
lea
xor
jne
or
stc
mov
cmp
mov
inc
test
jp
adc
in
xchg
dec
or
fild
test
nop
mov
mov
jae
xchg
and
cmps
ds
fild
sub
fdivr
rcr
sbb
pop
dec
add
scas
test
cmps
mov
jbe
inc
adc
sbb
shl
xchg
mov
or
mov
or
sahf
cwde
sahf
gs
xlat
in
ja
cmp
jbe
cdq
rcl
push
push
jg
pop
repnz
pushf
sahf
ret
jno
inc
pop
or
dec
retf
mov
ror
adc
test
dec
xor
sub
popf
mov
lds
dec
add
ss
into
(bad)
push
and
popa
push
and
adc
sub
or
mov
scas
pop
pop
call
pop
in
(bad)
sbb
adc
pusha
xor
(bad)
cwde
mov
pusha
inc
xor
xlat
xchg
add
mov
dec
inc
ret
mov
scas
les
or
cmp
jg
and
je
inc
fidiv
mov
mov
test
outs
adc
add
or
or
or
mov
pop
and
out
jns
ss
mov
fadd
ins
outs
popa
pop
out
fnstsw
sub
cmp
dec
mov
jecxz
dec
mov
(bad)
xchg
fcmovnb
mov
rcl
jmp
xor
xchg
dec
jge
enter
inc
imul
cmp
xchg
dec
pop
adc
fild
popf
fwait
and
jp
and
cwde
in
mov
arpl
mov
fimul
lods
cmp
inc
(bad)
popw
movs
or
and
jmp
mov
dec
jge
push
or
mov
fnstcw
icebp
popa
mov
add
cmp
fnstsw
(bad)
ds
push
jg
mov
es
lods
aaa
cmp
push
sbb
rcl
sub
jge
mov
mov
and
sbb
call
shl
repz
jl
sbb
cs
dec
mov
push
jl
lahf
push
dec
pushf
aad
stos
in
pusha
mov
(bad)
xchg
and
std
adc
scas
mov
mov
dec
add
and
sti
ins
inc
aas
or
cmp
mov
cmp
iret
std
ja
idiv
sbb
adc
fiadd
or
pushf
ins
int3
or
mov
sbb
cs
jmp
hlt
mov
loope
dec
mov
dec
mov
fmul
push
cs
je
xcrypt-cfb
cmps
bound
mov
sbb
mov
dec
into
jae
mov
adc
out
out
inc
les
imul
cmc
mov
cmp
mov
xchg
inc
push
pop
sbb
pop
int
sub
mov
sub
mov
dec
jge
mov
push
ins
lods
mov
jbe
xchg
sub
dec
push
(bad)
and
pop
add
jo
pop
add
mov
xlat
xlat
enter
sub
pop
mov
fisubr
jne
lods
in
fwait
dec
and
dec
xchg
loope
mov
mov
fs
shl
xchg
fdiv
jo
lock
rcr
repnz
addps
adc
mov
aad
je
push
mov
inc
pop
jno
addr16
jmp
inc
inc
jns
test
ltr
out
popa
sub
and
and
inc
into
cli
inc
test
imul
mov
pop
and
stos
dec
mov
addr16
inc
std
push
mov
lock
rcr
pop
add
sahf
test
and
mov
movs
test
fs
fbld
add
pop
fsub
mov
adc
call
inc
test
push
inc
popa
cli
ja
(bad)
test
aas
jb
stos
not
jmp
out
push
add
mov
int
shr
(bad)
or
xchg
fnstsw
nop
pop
dec
push
and
adc
sub
push
shl
or
mov
pandn
out
adc
out
cmp
dec
ja
xchg
loope
jno
out
out
aam
aam
ins
mov
rol
or
cs
les
cmps
mov
das
or
push
iret
push
xor
xor
call
inc
sub
stos
test
repnz
sti
mov
cld
pushf
jb
fwait
and
neg
cs
nop
imul
leave
xor
jmp
jp
cmps
fadd
rcr
aad
data16
les
jp
pop
mov
dec
shl
movs
pop
sub
das
fbld
ja
fisttp
(bad)
hlt
pop
das
(bad)
sbb
add
cmp
(bad)
lea
fs
repz
mov
cs
inc
xchg
sub
stos
jo
addr16
xlat
add
enter
stos
sub
mov
jns
sar
or
ret
and
aas
popa
inc
les
div
cs
stos
jle
cmp
sub
pushf
mov
push
in
test
mov
mov
pushf
int3
cmp
xchg
push
xlat
mov
inc
gs
in
test
jg
inc
ret
inc
and
test
repz
stc
ret
pusha
shl
clc
jnp
stos
mov
jge
mov
push
xchg
xor
int3
push
(bad)
add
sub
jge
pop
mov
pop
in
pop
nop
imul
mov
aas
lds
dec
std
xchg
push
mov
add
ss
mov
and
scas
sub
mov
cmp
sbb
mov
in
pop
mov
push
in
and
scas
push
into
pushf
inc
aad
sub
mov
enter
test
jge
call
push
ficomp
bound
scas
inc
jo
jmp
mov
call
sbb
push
pop
inc
lds
(bad)
scas
push
jge
jle
add
rol
loop
push
add
lock
cmp
or
push
popf
inc
inc
sahf
in
fs
cmp
pop
cli
adc
div
mov
cli
or
push
push
(bad)
and
add
or
mov
popf
retf
mov
push
xor
retf
call
out
push
lods
and
dec
jns
add
std
sbb
call
push
cwde
sub
jne
xchg
fcomp
adc
fldenv
ret
stc
(bad)
jb
mov
scas
pop
in
lods
and
jecxz
inc
dec
cmps
xor
cmp
aaa
xchg
sub
xlat
xor
cmp
mov
pop
cmc
push
addr16
ds
push
fist
je
push
(bad)
and
les
sub
subps
or
mov
or
outs
in
loopne
and
xchg
daa
sbb
sub
js
jg
lds
add
enter
add
sub
lods
aam
lea
movs
mov
arpl
xor
in
enter
or
div
enter
call
pop
ficomp
and
pop
sti
in
lahf
shr
(bad)
test
mov
outs
adc
stos
sti
dec
or
out
cmp
sbb
aam
sahf
(bad)
jecxz
mov
sbb
sub
sti
push
lahf
xor
sub
daa
por
fmul
xchg
push
inc
test
push
sub
das
cmp
mov
pusha
push
add
pop
hlt
(bad)
int
dec
push
mov
nop
mov
adc
(bad)
pop
inc
jl
clc
pop
sar
sub
dec
pop
push
dec
push
cmps
ja
cmps
lahf
aaa
inc
push
jge
inc
or
outs
jae
mov
mov
mov
cmps
cmp
inc
mov
retf
mov
in
jbe
es
call
sbb
into
shl
sub
imul
jp
je
pushf
inc
inc
mov
pop
dec
push
sbb
imul
jns
add
lods
lods
clc
mov
cmp
and
pop
ror
fnstenv
dec
sbb
jns
xor
aaa
push
popf
and
je
movs
jge
or
shl
mov
jae
retf
(bad)
in
push
xchg
adc
pop
daa
cmp
adc
pop
jg
leave
mov
push
add
fld
xor
fadd
add
adc
and
mov
outs
in
jno
lods
add
ds
push
int3
int3
and
dec
je
and
cld
add
dec
fnstsw
add
(bad)
in
xor
jecxz
leave
jecxz
dec
pop
inc
inc
mov
sahf
retf
pusha
imul
push
jecxz
dec
dec
in
mov
cdq
inc
fsubr
fstp
sar
inc
xchg
ss
ret
fs
inc
lahf
adc
inc
adc
jge
jmp
push
and
push
call
mov
repz
outs
sub
mov
and
or
mov
xchg
pop
dec
retf
sub
sub
call
stos
inc
dec
or
test
aas
pusha
and
push
rcr
jae
movs
push
adc
fisub
cmp
aad
inc
sub
pop
mov
add
dec
cmc
add
es
dec
hlt
cwde
sti
xor
xor
cmp
popa
inc
retf
push
je
push
add
cmc
mov
push
mov
and
mov
inc
mov
mov
and
in
cli
mov
ror
into
sbb
cdq
push
mov
push
in
cli
stos
jbe
ss
ss
push
or
fs
push
(bad)
xor
mov
jecxz
or
(bad)
retf
add
mov
je
cdq
inc
xor
mov
loope
lahf
sbb
jae
and
cmp
(bad)
jmp
into
cmp
inc
rcr
outs
ins
retf
sbb
jp
and
pop
push
dec
mov
xchg
jb
cli
js
aad
xor
popa
das
jl
js
add
rcl
inc
jns
(bad)
in
sbb
idiv
inc
fidivr
add
pusha
shl
cmp
cdq
jg
or
mov
inc
push
dec
scas
or
push
xchg
in
fmul
add
dec
jmp
jnp
mov
int
loop
push
mov
loopne
vfrczpd
xchg
and
push
adc
daa
aaa
jle
jp
cmp
cmp
es
gs
sti
push
in
adc
cmp
sbb
das
push
or
sub
add
inc
xchg
mov
push
aad
sbb
cdq
sub
out
(bad)
push
cmc
push
or
pop
and
fnstcw
out
loop
sub
jmp
ds
cmp
clc
mov
iret
mov
mov
xlat
jbe
mov
mov
sub
jnp
dec
sub
stc
mov
pop
sbb
(bad)
sar
xor
test
bound
inc
dec
out
outs
add
add
dec
mov
mov
adc
pushf
outs
movs
repnz
ds
sahf
das
pop
fwait
out
(bad)
das
cdq
shl
jno
ficom
sahf
js
inc
stos
sub
(bad)
cld
jns
call
push
popa
repnz
out
dec
or
inc
push
(bad)
jns
pop
arpl
mov
or
adc
pusha
mov
outs
xabort
xchg
push
pop
ret
cdq
icebp
frstor
lds
adc
cdq
iret
xchg
xchg
mov
in
popa
sbb
cdq
in
mov
pop
inc
scas
(bad)
cmp
dec
cld
in
xchg
ror
(bad)
inc
sub
xor
sbb
(bad)
dec
fdivr
mov
ret
or
cmp
jmp
movs
pushf
push
mov
xchg
lea
cld
repnz
sbb
fidivr
ret
(bad)
push
pushf
stos
push
mov
xor
(bad)
xchg
(bad)
dec
cmp
jp
mov
cmp
cmp
sub
push
outs
not
shl
sbb
add
cs
mov
push
mov
rcr
push
jo
into
scas
cmp
lds
ins
sub
js
nop
pop
and
sbb
mov
mov
add
cmps
shl
fucomp
sbb
dec
sub
cmp
out
je
retf
adc
fucomp
jl
std
sbb
jns
jge
jnp
jg
into
add
inc
xor
sahf
dec
ds
loope
std
and
je
jo
popa
dec
pusha
xchg
les
and
jb
(bad)
xchg
push
or
mov
push
push
jno
je
pop
jge
and
sbb
mov
and
retf
retf
int3
and
cmp
pop
mul
loope
repnz
(bad)
pop
xor
stc
inc
push
cs
add
inc
fmulp
jmp
loopne
movs
mov
mov
cmp
out
or
add
adc
pop
cmp
mov
out
das
add
(bad)
lea
pmuludq
dec
and
sbb
lds
ficom
jmp
iret
lods
scas
pop
push
mov
ins
loop
inc
add
stos
adc
sahf
stos
add
dec
pushf
xor
lods
jge
push
les
mov
pop
int3
lds
pop
or
addr16
cmp
mov
cmps
jecxz
xchg
dec
rol
les
shl
cwde
movs
xor
arpl
sbb
icebp
sub
int3
mov
sub
sub
jp
push
sbb
mov
pop
aas
mov
xor
ret
pop
pextrw
sbb
xchg
push
test
pop
add
push
stos
ud1
jg
mov
aam
jle
adc
xchg
add
mov
adc
pushf
dec
in
adc
sar
ja
mov
in
push
xchg
call
mov
mov
push
mov
sbb
mov
das
ror
dec
sbb
sbb
test
jle
sbb
xor
retf
cmp
outs
sbb
(bad)
cmp
int3
mov
adc
and
fsub
mov
stc
mov
in
cmp
dec
sar
and
movs
sub
mov
aas
push
sbb
and
cmps
iret
clc
aaa
jle
and
xchg
ficomp
es
test
xchg
in
pop
test
mov
add
pop
addr16
lea
(bad)
inc
lahf
push
mov
xchg
shl
add
and
mov
int3
mov
push
jmp
fwait
int
cmp
int
mov
push
jno
sbb
and
mov
(bad)
adc
movs
xchg
mov
and
mov
mov
adc
int3
xor
jmp
(bad)
sar
int
out
rol
into
jnp
cmp
arpl
outs
call
or
xor
cmps
shr
sub
cwde
push
pushf
es
hlt
jmp
mov
push
and
xlat
xchg
je
dec
sub
inc
in
jne
mov
inc
cli
mov
shl
jp
cmp
lock
mov
and
dec
cmp
fstp
pop
(bad)
pop
adc
jle
imul
add
shl
adc
lods
lods
jnp
mov
mov
rcr
xor
hlt
xchg
and
adc
pushf
dec
adc
mov
cmps
and
push
pusha
xlat
sbb
or
mov
adc
addr16
test
inc
pop
pop
retf
stos
pop
sbb
and
lock
das
inc
repz
jmp
jbe
or
push
int3
xor
sub
adc
jnp
push
rcr
sbb
loopne
cwde
enter
nop
sbb
sahf
pop
jg
and
sbb
xchg
mov
lock
mov
and
iret
(bad)
ror
xchg
adc
test
add
cmp
(bad)
pusha
push
dec
add
je
sub
fwait
in
xlat
jno
fdiv
ds
loope
mov
dec
rcl
in
iret
icebp
sub
int
ins
enter
call
adc
mov
lods
or
sti
clc
cdq
jne
push
adc
dec
sbb
sar
mov
adc
add
jmp
push
xor
pop
inc
call
sub
cwde
jle
mov
mov
das
popa
and
xlat
xchg
jecxz
pop
repz
fld
sbb
ffree
sbb
repnz
jne
sbb
stos
pop
push
inc
repnz
sub
sub
or
jmp
or
sub
retf
and
jle
cmps
js
pusha
imul
or
jl
cmp
sub
adc
retf
idiv
leavew
push
mov
xchg
rol
add
cmp
int
jns
jns
lods
push
bnd
test
or
leave
dec
aad
test
(bad)
pop
push
or
imul
xor
rsqrtps
mov
xchg
cmp
mov
dec
jmp
sbb
add
pop
loopne
ret
pop
ret
shl
cs
cld
(bad)
fcomp
imul
scas
push
sub
mov
xor
push
mov
punpckhbw
jecxz
mov
inc
fcomp
jmp
cdq
in
and
xor
sar
call
(bad)
mov
mov
shl
cld
test
add
inc
clc
mov
add
xor
add
sbb
jge
das
sub
or
mov
pop
sahf
pop
test
cmp
fild
ret
pop
call
test
sbb
cld
mov
add
in
mov
hlt
adc
inc
mov
pushf
xchg
movs
jbe
adc
fisttp
call
xchg
fwait
adc
and
push
inc
pop
aas
cmps
les
popf
inc
jl
leave
pop
mov
pop
push
xor
test
int
lds
in
cmps
mov
or
in
fadd
and
jp
cmps
mov
ret
add
push
pushf
inc
sub
adc
outs
std
retf
(bad)
(bad)
shl
stc
add
loope
add
aad
call
mov
sub
(bad)
mov
cmp
imul
cmp
cmp
push
stc
popf
mov
jmp
pushf
dec
movs
fcom
call
inc
retf
push
(bad)
pop
mov
lods
sbb
ss
jmp
pop
push
out
scas
mov
(bad)
arpl
outs
inc
adc
divps
dec
enter
or
movs
and
and
adc
lock
icebp
cdq
clc
in
xchg
jmp
push
into
add
cmp
sub
fsubr
and
loop
inc
(bad)
sbb
dec
adc
xchg
lahf
clc
ins
stos
dec
(bad)
and
mov
cmp
aas
sbb
ins
mov
xchg
push
lods
dec
mov
out
fs
mov
imul
(bad)
push
mov
(bad)
ret
retf
pop
repz
jae
dec
xchg
(bad)
mov
iret
test
retf
pop
iret
iret
add
(bad)
pop
sahf
jo
mov
push
jl
aam
mov
jle
dec
pop
xor
sub
add
(bad)
cmp
mov
sub
fnstcw
ret
lds
fdivr
sti
xor
xor
test
sub
call
ds
ror
add
lods
call
sbb
xchg
adc
dec
push
inc
push
enter
pop
in
xchg
pop
aaa
jp
in
mov
ds
lds
pop
arpl
mov
or
mov
cs
fmul
cdq
pop
js
aad
rcr
cmp
shr
or
mov
jmp
popa
inc
mov
repnz
sbb
mov
mov
xchg
push
cld
xchg
pop
and
std
xlat
mov
or
jnp
inc
popf
inc
(bad)
ret
mov
jno
pushf
in
add
mov
ins
pop
or
lock
inc
xchg
imul
dec
push
test
inc
sub
inc
iret
mov
mov
jg
or
mov
shl
xchg
inc
jne
add
jmp
adc
mov
(bad)
aas
fmul
and
adc
mov
mov
mov
jle
or
outs
fldenv
mov
fld
mov
dec
xchg
dec
push
jns
jbe
in
or
test
mov
fcomp
iret
dec
into
pusha
movs
out
test
push
in
and
push
pop
push
push
and
push
mov
iret
sub
pop
das
jbe
xchg
xor
adc
pop
sub
sub
dec
or
xchg
xchg
pop
mov
enter
stc
rcr
xchg
mul
mov
jbe
adc
sub
dec
repnz
adc
jmp
add
push
jb
scas
jg
xchg
sbb
pop
shl
test
add
fcom
movs
adc
enter
cmp
inc
popf
mov
test
popa
adc
cmc
fdivr
add
dec
fsubr
movs
add
pop
xchg
(bad)
jmp
mov
or
mov
push
repz
jno
shl
mul
cmp
inc
shl
xchg
mov
sub
pop
add
fcmovb
dec
outs
mov
hlt
xlat
loope
pop
push
push
(bad)
adc
fcmovb
outs
lahf
call
jae
jge
sub
cmp
mov
clc
stos
pop
or
jmp
sub
js
outs
call
aam
sbb
jbe
test
or
mov
xchg
cmc
mov
mov
or
je
jnp
dec
movs
sub
hlt
shr
xor
mov
pop
ss
lods
jnp
sbb
sub
pop
std
cli
mov
inc
in
sbb
sbb
in
jo
or
sub
das
in
(bad)
in
sar
out
adc
xchg
sbb
hlt
sbb
xor
cmp
not
pop
mov
dec
loope
int3
adc
mov
or
sbb
or
cwde
or
std
aam
cmps
or
(bad)
dec
xchg
psubusw
test
push
shl
xlat
pop
adc
push
sbb
fisub
inc
jp
push
jno
or
enter
(bad)
mov
mov
dec
scas
mov
xlat
dec
fisttp
rol
sub
dec
add
and
lds
sbb
(bad)
jno
les
arpl
cmps
jmp
pop
leave
(bad)
sbb
fst
call
push
xchg
(bad)
mov
adc
idiv
push
mov
sbb
(bad)
inc
pop
and
in
mov
xchg
pop
mov
xor
sub
lds
ficomp
movs
sbb
daa
inc
push
inc
add
sub
adc
les
fmul
push
adc
dec
dec
inc
and
and
enter
jns
push
xor
mov
aam
and
sub
inc
or
xchg
push
std
jae
shr
mov
fisub
adc
xchg
jmp
jle
or
test
dec
sbb
test
retf
push
and
push
out
rcr
out
rcr
ins
das
sbb
sub
dec
cmp
neg
inc
fbld
mov
outs
push
int3
in
jg
mov
cdq
rcl
fcom
ja
jnp
mov
in
push
or
sub
cmp
mov
mov
jecxz
sbb
mov
cmp
mov
inc
call
pop
mov
jae
in
retf
jp
sbb
aam
pop
inc
jb
pop
icebp
js
cmp
in
pop
mov
inc
enter
xor
push
adc
in
mov
test
fisubr
mov
push
mov
jmp
sbb
fisttp
xor
sbb
mov
call
add
and
ror
dec
loop
mov
(bad)
into
aam
dec
test
jo
adc
out
arpl
mov
repz
scas
stc
lods
jle
mov
or
cmp
cmps
dec
into
or
mov
loope
or
xor
(bad)
dec
sub
dec
pop
xchg
xchg
fcmovne
addr16
cmp
loop
daa
xor
fs
xor
dec
cld
clc
gs
imul
cmp
fistp
mov
or
ret
in
push
nop
shl
inc
xchg
inc
aaa
popf
push
loopne
pop
ret
ja
jb
lds
cmp
(bad)
scas
jle
in
fcomp
xchg
aaa
cmp
call
jp
lahf
cmps
ret
fnstenv
test
adc
bound
movs
das
ins
pop
movs
lea
or
int3
push
pop
ret
outs
inc
push
std
jge
push
call
out
jl
rcr
mov
(bad)
cmp
out
jp
inc
and
stos
mov
mov
in
push
dec
rcr
mov
xor
jbe
push
leave
cli
aam
and
ds
addr16
push
shl
repnz
jns
jmp
push
dec
mov
mov
aas
jnp
cmps
xor
lods
jae
xchg
idiv
into
sbb
xor
shl
sub
shr
jp
pop
cmp
pop
mov
cmps
jge
lds
sbb
les
sbb
(bad)
retf
shr
(bad)
ins
aam
repnz
(bad)
mov
std
icebp
mov
jns
push
call
sbb
cwde
ror
push
clc
lea
or
adc
imul
pop
repz
dec
fstp
inc
ss
test
lods
in
jne
adc
loop
jne
inc
scas
(bad)
mul
neg
adc
fs
not
js
adc
xor
lods
iret
add
arpl
jg
xor
es
xor
sbb
ror
sahf
fistp
ficomp
cld
std
mov
ins
xchg
mov
not
or
cmp
inc
repnz
adc
stos
fs
xchg
fld
xor
push
cmp
mov
and
aam
into
ret
call
fwait
jle
repnz
add
hlt
sub
mov
push
jmp
pmaddwd
mul
pop
dec
cmp
cld
cli
jne
adc
sahf
inc
adc
pop
loope
loope
sub
sbb
xor
or
lock
push
rcr
imul
pop
pop
mov
xchg
xchg
call
shl
or
stos
and
int3
lods
and
jbe
dec
add
fild
add
inc
pop
mov
push
ins
bound
xchg
loop
shl
sti
pusha
mov
xchg
lock
mov
hlt
push
ds
pushf
sbb
adc
cmp
repz
pop
dec
int3
or
popf
(bad)
push
stos
sar
out
enter
mov
or
jecxz
es
mov
mov
push
aaa
mov
les
sbb
jb
addr16
sahf
je
add
(bad)
sti
aaa
and
fistp
fcomp
enter
or
inc
inc
mov
(bad)
fisttp
fst
ror
mov
lea
or
and
js
ret
xlat
daa
mov
xchg
cli
mov
jecxz
cmp
push
ins
add
jne
inc
pop
sar
lods
imul
daa
mov
jbe
rcr
xchg
inc
aaa
inc
sbb
cmp
pop
xchg
add
in
lods
and
lds
lods
pusha
cmp
ret
xor
pop
mov
push
je
shl
popf
repnz
pop
mov
mov
mov
int3
movs
sbb
pop
jecxz
ss
outs
push
fwait
pop
scas
adc
mov
pop
arpl
adc
xchg
mov
cmp
mov
push
and
test
adc
xchg
neg
push
aas
fs
call
fs
ins
jae
mov
aam
pop
fld
(bad)
adc
and
jne
or
test
pop
mov
lods
push
sbb
fwait
loopne
inc
movs
xor
sbb
(bad)
sub
out
adc
adc
mov
cli
and
dec
xor
cwde
or
sar
dec
jecxz
pop
(bad)
int3
mov
xchg
jb
sbb
or
mov
xor
or
adc
ds
rcl
js
cs
and
xchg
push
aas
mov
mov
pop
sub
mov
lds
cdq
mov
sbb
inc
sub
push
(bad)
hlt
bound
xlat
sar
xchg
shl
les
in
enter
xchg
loopne
xchg
pushf
pop
or
dec
inc
lock
cmp
fsub
shl
push
pop
neg
shl
arpl
mov
sbb
(bad)
popa
push
sub
push
retf
sub
mov
xchg
imul
push
call
jle
inc
push
cld
sbb
push
cmc
aad
cmp
pop
cmp
xchg
mul
daa
inc
int3
std
scas
leave
or
mov
dec
ficomp
sti
inc
jge
dec
sub
dec
sub
pop
pop
push
and
mov
pop
outs
push
inc
loopne
(bad)
in
mov
and
cwde
mov
(bad)
mov
mov
outs
add
mov
les
adc
lahf
enter
or
xchg
cdq
movs
shl
hlt
or
sti
scas
add
inc
stc
mov
popa
or
pop
adc
or
out
push
sbb
les
xor
mov
mov
xchg
dec
das
xlat
mov
mov
sub
fnstcw
das
xchg
aam
shl
out
or
jb
(bad)
adc
call
mov
ds
push
or
mov
into
std
and
push
ss
inc
add
ror
sbb
mov
fwait
in
imul
xchg
inc
sar
stos
jmp
add
mov
icebp
call
lods
mov
sbb
pusha
push
add
rcl
pop
sub
std
mov
fwait
sub
lahf
jae
pop
leave
les
push
cdq
scas
loope
jne
or
dec
arpl
mov
add
and
push
dec
sbb
pop
jnp
ret
(bad)
dec
push
push
cmp
adc
(bad)
call
mov
fcmovb
jge
sub
pop
push
lock
lods
scas
loop
dec
or
cmp
jmp
or
mov
or
jae
adc
mov
sub
ret
add
ds
adc
xchg
lods
outs
pop
loop
outs
loop
push
mov
or
repz
fdiv
and
adc
(bad)
add
retf
scas
ror
inc
ins
dec
pop
and
lock
dec
popf
sbb
test
inc
clc
cmp
xchg
std
pop
je
unpckhps
je
fs
arpl
nop
pop
jbe
lea
mov
into
mov
sar
outs
inc
add
mov
fidiv
scas
cmp
outs
jo
clc
cld
mov
movs
and
(bad)
or
mov
aad
inc
mov
pop
adc
popa
mov
out
jmp
pusha
sub
scas
jne
mov
mov
push
sub
out
aad
or
xchg
ret
aam
inc
cmp
inc
daa
and
lock
test
cmps
and
mov
inc
ret
jo
in
mov
fnsave
jg
dec
pop
add
mov
mov
mov
add
cmp
mov
xchg
shr
pop
adc
pop
mov
(bad)
dec
mov
cdq
(bad)
fcom
fimul
clc
push
add
sahf
dec
and
xchg
mov
pop
adc
gs
push
push
js
push
mov
(bad)
popf
mov
shr
jmp
cmp
xchg
dec
mov
dec
jmp
dec
mov
sbb
xchg
jnp
xchg
sti
sub
ret
mov
push
mov
pop
dec
sub
call
daa
inc
fadd
sub
adc
call
adc
ja
pop
mov
sbb
loope
mov
cli
movs
cmps
inc
pop
fwait
and
stc
jns
ss
mov
test
dec
sbb
mov
mov
adc
mov
movs
mov
lea
push
int3
inc
js
jnp
and
inc
and
ret
retf
movs
jo
inc
cmp
das
sbb
cmp
pop
mov
iret
cli
cmp
mov
xor
sub
dec
pop
xchg
test
cmp
xor
add
popa
mov
pop
and
scas
neg
xor
lahf
mov
pop
jle
int
lods
lock
sub
aad
cmp
cmp
xlat
push
neg
push
test
push
pop
stos
lea
movs
jmp
inc
sub
fisubr
pop
mov
add
jmp
mov
inc
xor
mov
fwait
pop
ins
pop
fimul
push
scas
ins
shr
xor
pop
add
mov
aas
inc
sbb
inc
xor
enter
std
jnp
adc
cwde
push
mov
hlt
mov
adc
ins
sub
xchg
mov
out
push
retf
ror
data16
sub
mov
jge
arpl
push
mov
sbb
stos
retf
mov
mov
mov
cli
test
mov
ins
js
inc
lock
pop
or
mov
mov
sub
adc
fstp
mov
es
sar
add
sub
mov
lods
xor
push
movs
add
cs
fcomi
and
mov
ss
mov
adc
cmp
pop
mov
lods
test
rcr
imul
push
lea
push
test
inc
push
jbe
std
fidiv
outs
dec
popa
cmp
mov
daa
sbb
add
pop
out
sub
lods
pushf
aam
and
int
xor
add
sahf
and
retf
sub
inc
shr
cwde
inc
int3
jae
jl
push
jo
iret
jne
das
fnstenv
push
ret
cld
stc
cmps
fistp
pop
mov
test
cmovp
out
xor
repz
or
sub
aam
pop
lods
test
retf
or
int3
jle
ficomp
out
push
pop
test
push
popa
xchg
xchg
lock
out
jno
pop
test
push
outs
fdivr
sub
hlt
push
xchg
inc
add
push
mov
inc
inc
adc
xor
cmp
xchg
hlt
pop
mov
sub
pop
push
dec
pop
push
std
add
mov
adc
and
sub
xchg
xchg
push
or
xchg
pop
in
pcmpeqw
and
movs
sub
xor
movs
add
sbb
sub
loopne
test
dec
cmp
pop
test
mov
adc
(bad)
std
xor
pop
fs
imul
cdq
xor
mov
push
add
push
pop
inc
(bad)
lods
gs
add
loop
adc
popf
in
fadd
mov
mov
retf
mul
mov
js
and
dec
in
gs
test
cmp
mov
ins
shl
adc
shl
sbb
or
jg
fdivr
inc
push
out
mov
sbb
dec
xor
cs
(bad)
pop
cmp
iret
enter
mov
scas
adc
push
push
lds
push
je
es
out
dec
cmp
cld
rcr
xchg
jae
dec
push
lock
std
mov
sub
das
imul
lods
sbb
push
xchg
fisubr
daa
test
sbb
lock
or
adc
(bad)
out
and
dec
mov
dec
mov
mov
(bad)
and
leave
cdq
mov
mov
out
and
int3
daa
imul
test
add
inc
and
out
add
or
das
mov
je
icebp
out
repnz
loop
ja
mov
cmp
xchg
sti
mov
daa
arpl
push
cwde
mov
popf
cmps
cmc
test
xor
push
retf
inc
add
test
inc
and
jmp
fwait
jbe
pop
dec
jno
mov
jp
ficomp
loop
push
rol
mov
mov
and
mov
test
cmp
mov
(bad)
arpl
pop
adc
clc
mov
push
cmp
ja
je
fimul
(bad)
and
xchg
ss
mov
add
mov
loop
sti
mov
pop
test
(bad)
push
repnz
call
add
adc
into
xchg
push
std
mov
out
xlat
cmp
push
test
cmc
push
dec
jae
in
(bad)
sti
lahf
inc
mov
movs
and
out
jg
in
and
xchg
ficom
sub
jecxz
push
jns
mov
cld
xor
ds
jle
scas
push
cmp
in
push
xchg
icebp
cmc
and
mov
sbb
push
and
mov
xor
push
pop
cmc
pop
shr
pop
fs
or
popf
mov
jmp
sub
je
pop
in
test
or
icebp
fstp
cdq
es
or
mov
and
pusha
std
outs
mov
jecxz
ror
sbb
jecxz
bound
xchg
xchg
ficomp
dec
dec
je
mov
cli
xor
sar
and
rcr
movs
loopne
mov
addr16
scas
xor
jbe
cs
xor
jne
push
push
loopne
adc
ror
int3
sub
repnz
leave
push
xor
fwait
mov
sbb
inc
clc
movs
inc
dec
int
dec
hlt
mov
repz
fstp
idiv
add
adc
inc
dec
in
sub
test
cmc
mov
rol
mov
lahf
and
dec
mov
jmp
lds
test
mov
push
adc
test
pusha
xor
rol
(bad)
mov
data16
dec
lods
aam
lods
enter
mov
and
and
int
push
pop
jg
inc
and
cli
cdq
fsubr
add
jno
jbe
call
jg
lds
jle
add
push
call
push
or
sahf
dec
(bad)
add
add
sbb
ds
inc
xor
xchg
loop
jae
mov
popf
xchg
rol
in
dec
fld
sbb
and
lds
inc
imul
pop
pop
es
inc
imul
icebp
jp
mov
stos
inc
mov
je
xor
add
retf
mov
cld
push
jmp
cmp
popa
and
call
sbb
xor
mov
(bad)
or
mov
icebp
daa
jb
hlt
or
xchg
mov
mov
and
add
mov
mov
jns
push
sub
inc
cmp
push
adc
dec
xor
dec
retf
mov
lock
loopne
add
pusha
nop
adc
fsub
shl
mov
idiv
mul
push
xchg
pop
lock
hlt
lods
sti
xchg
inc
cmp
or
lahf
cmps
test
stos
pop
ss
xchg
pop
mov
fstp
inc
inc
push
cmp
je
ins
mov
cmp
mov
cmps
popf
shl
xor
adc
jecxz
dec
loope
das
fdivr
lahf
pop
dec
add
lock
imul
jbe
(bad)
mov
pop
inc
inc
cmp
mov
out
and
add
(bad)
mov
dec
inc
xor
and
fild
xor
mov
jae
dec
ins
inc
push
pop
mov
aad
dec
mov
in
xchg
sub
rol
xchg
sub
je
xor
pushf
xchg
push
lock
test
push
jmp
lea
lods
in
in
sub
jnp
call
jge
in
mov
and
scas
(bad)
mov
std
adc
pop
mov
push
(bad)
jmp
imul
jb
leave
retf
cmp
sbb
add
and
pop
pushf
mov
retf
xchg
xchg
fs
scas
lods
mov
je
ret
call
inc
fiadd
or
dec
push
jle
push
mov
cmc
jle
or
xor
jmpw
pop
sbb
aaa
fdiv
fdiv
int
imul
xchg
leave
mov
push
pusha
retf
xchg
mov
pop
jecxz
mov
jmp
mov
(bad)
add
dec
out
mov
jp
fmul
and
dec
cmps
aad
and
jne
jno
lds
mov
loop
jecxz
lahf
sbb
cmp
xchg
push
pop
or
pop
ja
in
(bad)
xchg
adc
mov
push
sti
mov
ret
sbb
cmps
push
outs
test
shr
call
icebp
xchg
cmp
cmp
and
gs
jge
xchg
loopne
push
stos
pop
mov
repnz
adc
daa
and
es
(bad)
(bad)
das
push
sbb
dec
fldenv
sti
(bad)
fsubr
push
cld
xchg
popa
cmc
inc
popa
loope
rol
fs
jne
stc
push
jb
stos
inc
mov
pop
mov
xor
push
lods
lds
cmps
jmp
shl
retf
and
cwde
pusha
push
retf
mov
adc
mov
xor
in
mov
cmp
ja
pop
fstp
cmps
mov
dec
mov
mov
pop
pop
dec
adc
inc
addr16
stc
and
repz
test
and
dec
cmp
xor
adc
mov
or
pop
push
mov
add
pop
mov
add
repnz
xchg
std
outs
stc
je
mov
cld
movs
lahf
push
retf
jns
popa
push
xlat
int3
stc
shl
out
fisub
xchg
jmp
loop
sub
out
popa
dec
cmp
fsubr
add
dec
mov
gs
inc
(bad)
pop
adc
fldcw
fld
shl
fs
fiadd
out
xor
(bad)
sbb
sbb
xor
out
mov
loopne
inc
push
push
inc
inc
pop
outs
cmp
jle
jp
or
popa
iret
sbb
sti
xor
test
ins
int
dec
fmul
pop
sbb
(bad)
jmp
inc
push
xchg
xor
fsubr
aas
xor
mov
daa
mov
int
arpl
mov
mov
xor
addr16
pop
je
push
jle
cwde
lahf
dec
aad
scas
xchg
xor
mov
xchg
pop
imul
add
dec
push
(bad)
je
mov
shr
inc
je
inc
push
or
pop
ret
jo
xor
lds
dec
mov
mov
stc
push
or
adc
hlt
in
pop
jb
pop
outs
je
ins
add
mov
xchg
lahf
mov
inc
jmp
jp
in
(bad)
mov
icebp
adc
ja
sub
push
stos
adc
icebp
inc
push
stos
into
xchg
jg
rcr
out
fnstenvw
inc
into
push
scas
push
pcmpeqd
mov
mov
aam
gs
xor
icebp
xor
or
jns
(bad)
shl
dec
adc
out
test
xchg
push
adc
cmps
xor
div
xchg
cld
add
loope
inc
add
cmp
and
or
adc
cmp
mov
mov
retf
and
call
lods
fcom
push
repz
call
push
jo
enter
and
clc
pop
out
mov
or
cmp
sbb
fadd
aas
dec
out
jne
inc
arpl
add
loop
shl
test
mov
in
dec
add
jp
xor
jecxz
lods
arpl
vmptrst
sbb
shl
mov
add
or
dec
jmp
fidiv
jg
mov
mov
daa
xchg
lods
ss
push
fimul
or
mov
sbb
sub
popa
inc
stos
mov
imul
mov
xchg
pop
sar
dec
mov
push
jle
(bad)
mov
into
push
ret
adc
sbb
jmp
cmp
(bad)
push
and
bswap
cmps
push
lds
in
in
(bad)
mov
int
mov
fwait
push
ficom
lock
pop
mov
or
jnp
mov
pop
xor
adc
mov
or
in
loope
pop
lahf
xchg
cwde
out
out
mov
xor
les
(bad)
ja
jecxz
mov
cmps
inc
dec
mov
push
inc
cmps
push
sbb
repnz
mov
mov
loope
inc
les
(bad)
ja
adc
rcl
and
ret
jp
pop
out
inc
lods
jbe
adc
add
cmp
outs
push
xchg
inc
arpl
sbb
(bad)
scas
sbb
dec
mov
test
push
push
xor
(bad)
or
stos
dec
mov
in
push
clc
int3
call
push
xor
push
push
mov
push
data16
int
lahf
addr16
scas
repnz
dec
mov
xchg
popf
les
verr
scas
mov
sub
fisttp
retf
or
pmaxsw
sbb
clc
mov
mov
call
leave
xor
xchg
ror
inc
mov
xchg
and
adc
imul
loopne
out
mov
rol
mov
ror
std
fcomi
mov
leave
out
xlat
mov
cmp
inc
f2xm1
pop
mov
mov
mov
in
ret
sub
test
add
add
add
xor
call
daa
test
or
xchg
outs
jge
xchg
mov
push
and
dec
fsubrp
adc
sub
arpl
push
inc
add
xor
inc
adc
sub
cmp
enter
repz
and
push
test
lods
out
push
imul
cmc
pop
out
jl
sahf
sbb
xor
pop
movs
push
cmps
pusha
inc
in
jb
hlt
fwait
sub
aaa
fld
jge
in
mov
popf
test
gs
test
mov
jnp
jae
test
xchg
jecxz
js
enter
adc
mov
adc
mov
or
out
cmp
mov
inc
dec
call
add
xor
xchg
mov
sbb
sub
pop
xor
cmp
sbb
shl
nop
inc
pop
push
fmulp
sbb
dec
jbe
in
fld
xchg
dec
or
xchg
in
push
push
es
std
add
jecxz
sbb
jae
pop
mov
sbb
mov
repz
pop
std
repz
sub
out
xor
push
data16
popf
aas
mov
inc
rcl
call
jg
neg
inc
fwait
xchg
test
mov
pusha
adc
rep
adc
jb
mov
pop
fwait
push
jb
stos
cmp
mov
mov
nop
lock
outs
mov
movs
xor
push
popa
data16
push
push
icebp
jae
test
dec
cmp
sti
bound
cli
les
je
push
pop
jecxz
pop
mov
sub
mov
(bad)
cmps
stos
jo
or
std
or
pop
pop
mov
jmp
int
pusha
sub
enter
or
je
mov
push
jb
add
clc
stos
adc
ss
cmps
int3
jmp
inc
cmp
cmps
jbe
cmp
and
jno
adc
leave
nop
jecxz
push
and
jnp
push
sahf
bnd
push
ins
in
mov
test
stos
xor
mov
cmp
dec
jecxz
sub
push
fimul
mov
mov
ins
xchg
aad
fmul
inc
inc
xchg
cmc
xchg
cld
add
loope
fisubr
pop
retf
loope
pop
xor
daa
bound
xor
rol
pusha
dec
adc
loope
pusha
ins
pop
sub
fidivr
out
loop
mov
lea
in
push
ror
inc
pop
imul
stos
push
adc
add
jle
stos
pop
pushf
sub
inc
fimul
in
shr
push
push
inc
fsub
mov
icebp
cmp
movs
dec
add
out
fild
fdivr
or
or
cwde
das
je
mov
fnstsw
aas
push
cmp
mov
and
es
sbb
je
popf
or
xchg
test
push
adc
inc
inc
dec
imul
inc
dec
outs
pop
out
mov
or
lahf
movs
sahf
ret
sahf
and
or
movs
sub
iret
cmps
cmp
test
sbb
inc
jo
sub
sub
sub
je
mov
or
mov
push
aaa
ja
fcomp
mov
data16
or
mov
mov
adc
stos
(bad)
call
mov
mov
and
mov
add
test
das
or
les
and
or
test
aam
sub
pop
ror
aad
fld
mov
call
stc
sbb
dec
jl
clc
add
stc
xor
xor
gs
repnz
sar
add
xchg
out
pop
add
xchg
mov
add
cmc
cmp
add
sub
test
mov
repnz
shl
push
xor
lods
mov
inc
into
fimul
(bad)
adc
shl
(bad)
(bad)
mov
cmp
(bad)
sbb
push
or
jp
(bad)
xor
fistp
xchg
fwait
cmp
clc
fs
inc
push
stc
jnp
fstp
sti
pop
mov
mov
fld
ins
cmp
inc
das
shl
out
pop
aas
inc
fs
dec
ss
out
test
neg
div
pop
push
cmps
adc
movs
shl
jl
popf
xor
int
inc
les
ror
out
cli
retf
sub
(bad)
call
icebp
sbb
in
add
mov
mov
and
sub
mov
sar
bndstx
mov
jno
pop
sbb
out
jne
add
imul
jbe
aas
mov
cmp
sbb
sti
dec
les
(bad)
aaa
lods
adc
and
mov
xor
aad
sbb
dec
pushf
shl
xchg
out
mov
enter
daa
mov
push
dec
lahf
jp
mov
lods
mov
test
in
stos
mov
pop
clc
das
fadd
sub
cld
mov
test
lahf
mov
in
xchg
jg
dec
hlt
push
shl
push
cs
xor
(bad)
mov
xor
jmp
xchg
fild
dec
ret
movs
add
daa
and
call
jp
daa
mov
loopne
sub
mov
in
je
les
and
loopne
inc
sub
and
test
in
sub
aam
outs
out
icebp
push
pop
out
nop
jbe
outs
clc
jb
push
in
mov
xchg
cmps
fisttp
cmp
stos
repnz
aam
fsub
sbb
bound
gs
das
push
mov
ss
sbb
xchg
pop
retf
sbb
and
outs
lea
cli
jge
lea
fld
push
call
aaa
repz
adc
repz
mov
shl
nop
bound
ds
jo
(bad)
push
cmp
fdivr
pop
xor
sbb
mov
mov
frstor
ret
iret
repz
test
sbb
push
dec
jp
rcl
jbe
adc
push
jb
cmps
repz
fistp
dec
(bad)
lods
aam
lods
mov
test
adc
int3
mov
fsubr
mov
xor
inc
sahf
loop
xor
fst
xchg
scas
add
push
call
mov
retf
pop
xlat
scas
sbb
xchg
inc
(bad)
je
rcl
mov
ins
les
sbb
int3
push
push
retf
inc
pushf
dec
cmc
scas
cs
pop
fistp
leave
jl
cmp
cwde
popf
test
bound
cmp
and
popf
mov
cmps
adc
jne
push
xor
clc
inc
fld
sub
lods
jbe
push
push
jecxz
sub
adc
rcl
out
and
mov
mov
sbb
add
or
sete
jno
scas
mov
popa
test
push
cs
add
push
test
push
push
shr
js
ret
mov
daa
sub
and
test
mov
mov
inc
dec
fisttp
add
pushf
fwait
out
cmp
in
adc
fxch
jmp
xor
cmp
scas
adc
mov
or
inc
rcr
xor
shl
fsubr
jmp
push
jno
push
int
xchg
adc
(bad)
mov
inc
popf
pusha
jnp
jmp
dec
sbb
fisubr
or
jae
mov
jp
push
sub
mov
in
sti
and
shl
xlat
add
lods
shl
mov
jb
pop
enter
or
sbb
jg
hlt
pcmpeqw
xchg
adc
inc
(bad)
jne
and
ins
adc
pop
ja
push
repnz
jae
jg
in
push
xchg
ror
mov
aas
test
mov
loope
test
inc
retf
fwait
or
fstp
aas
push
fdiv
std
dec
jnp
and
push
repnz
gs
test
mov
bound
mov
cli
push
rol
sub
and
cmps
iret
mov
jmp
push
stos
ret
shl
jno
pop
mov
or
xor
pop
test
fsubr
xchg
inc
mov
or
cmp
aas
push
loopne
and
(bad)
mov
push
jecxz
jg
aaa
int
mov
cmps
add
jnp
inc
ins
mov
jae
sbb
cmc
mov
lock
hlt
popf
mov
ret
cdq
sub
adc
fist
imul
push
push
dec
mov
and
xlat
xchg
lods
pop
js
fnstenv
dec
bound
add
and
add
cmp
mov
or
jl
shl
xlat
(bad)
xor
push
in
jg
xchg
dec
cmp
nop
popa
xchg
add
retf
push
repz
js
(bad)
hlt
mov
dec
inc
mov
(bad)
pop
(bad)
scas
sub
cmc
out
test
pop
xor
ficom
sbb
dec
pop
das
daa
jge
cli
fisub
data16
jb
out
pop
in
sbb
xchg
loope
aas
sub
call
sbb
in
lds
mov
call
out
fmul
sbb
not
cmp
ds
cmp
add
jg
push
mov
xchg
mov
sub
jmp
xchg
stos
inc
xor
jb
and
rol
cmps
xor
lods
nop
out
ja
sar
pop
arpl
cmps
dec
loope
jno
ficom
addr16
lahf
push
shl
push
and
in
inc
imul
sar
mov
int
aam
loop
icebp
push
push
aam
(bad)
repz
mov
mov
popf
pop
jbe
mov
inc
arpl
push
outs
jnp
push
out
sbb
mov
cmp
and
sub
out
jnp
loop
pop
cmp
data16
fs
add
imul
pop
sub
or
loopne
icebp
jne
sbb
add
dec
ds
fdiv
imul
and
inc
mov
jb
push
push
dec
jle
mov
ins
inc
scas
sar
push
or
dec
push
rol
lods
cmp
pop
mov
push
stos
imul
jbe
xor
xchg
push
mov
mov
test
cmc
nop
jne
jg
xor
or
in
(bad)
scas
or
mov
xor
movs
mov
mov
xor
fcomp
je
add
mov
shr
push
sbb
mov
adc
js
or
xchg
fadd
nop
bound
mov
sbb
fcomp
sbb
loopne
mov
push
fcomp
test
xchg
mov
aad
(bad)
jmp
lahf
arpl
mov
jns
popa
sti
cli
add
cmp
jno
aam
out
mov
pop
pop
push
xlat
pusha
and
lock
jo
das
ret
or
jne
addr16
adc
or
jmp
jp
mov
fwait
jns
div
jae
dec
les
popa
sub
das
js
leave
sub
cli
push
push
pop
mov
push
mov
aaa
enter
adc
and
xchg
add
or
xchg
sti
add
push
cwde
mov
outs
xchg
test
aas
retf
es
sar
lock
sbb
sbb
cmp
jmp
in
jno
pushf
pop
or
movs
mov
loop
fidiv
adc
popa
mov
fidiv
mov
ret
cwde
icebp
pop
out
rcr
shr
mov
jo
std
push
xor
cdq
adc
cmc
cmp
and
sti
xchg
inc
xor
dec
repz
or
push
dec
or
jbe
out
or
lds
push
jg
loope
ss
add
int
sbb
push
cmp
jge
stc
mov
cli
in
fistp
aad
push
jge
int3
idiv
hlt
in
mov
cmp
push
pop
and
add
lock
sysenter
cmp
xor
xor
cld
fimul
stos
jmp
jo
les
add
lahf
jp
mov
imul
xchg
sub
cwde
enter
mov
shl
dec
xor
cmp
ss
pop
add
pop
push
int
ret
mov
dec
imul
rol
bswap
test
push
xchg
into
mov
xor
into
mov
iret
xor
or
ins
lock
add
in
add
inc
sbb
movs
mov
add
call
jmp
xchg
lods
fidiv
pop
cmp
sbb
pushf
and
sbb
out
loop
out
fdiv
int
sbb
mov
xchg
xchg
not
popa
gs
fidiv
ss
mov
mov
cmp
leave
mov
mov
or
ins
sbb
and
xchg
rol
out
lahf
dec
pop
call
(bad)
icebp
sub
pushf
cmps
sbb
aad
xchg
aam
test
mov
test
sbb
pop
and
popf
dec
and
inc
mov
jno
inc
fcmovu
test
pop
push
inc
push
and
ja
xor
(bad)
ficom
imul
popa
lods
jp
sbb
scas
push
push
adc
sub
xchg
test
mov
ror
jg
cmp
rcr
xchg
xchg
xchg
or
jb
imul
add
addr16
jnp
lds
icebp
aaa
sub
leave
lahf
movs
ins
and
sbb
outs
push
les
test
jae
addr16
in
cmp
sub
push
outs
cdq
mov
ret
mov
fdiv
push
neg
xchg
jl
pop
or
sbb
adc
pop
sub
jmp
(bad)
out
adc
jne
data16
cld
test
mov
repnz
repnz
dec
fsub
sbb
inc
adc
aas
cmp
(bad)
stos
jo
fidivr
xchg
jnp
test
jl
dec
pop
cmp
and
pop
or
aaa
es
pop
inc
push
mov
lock
adc
popa
loop
stc
int
loopne
dec
dec
jmp
ds
sub
js
mov
cmc
xlat
pop
xchg
cli
hlt
jbe
aas
xor
js
es
mov
in
inc
mov
daa
inc
jmp
loop
hlt
popa
and
sbb
xchg
sub
(bad)
pop
repnz
sub
jmp
pop
adc
mov
ds
lahf
mov
movs
rcr
loope
(bad)
test
xchg
adc
mov
loop
mov
test
jno
fild
retf
fisubr
iret
push
sub
hlt
sub
xchg
mov
jbe
pop
sahf
(bad)
jle
adc
(bad)
and
daa
in
mov
xchg
js
adc
pop
inc
lock
inc
push
sti
push
jg
mov
jnp
cld
push
sbb
ret
xchg
int
dec
add
cli
enter
push
sub
neg
add
sub
stos
and
jle
jnp
repz
sub
dec
ds
in
push
pop
fwait
std
jl
fwait
enter
pop
sub
adc
sbb
sub
mov
cmps
inc
mov
call
add
scas
and
bound
or
frstor
outs
mov
jle
or
fwait
cmp
daa
mov
jge
test
mov
mov
xlat
push
sbb
or
and
pop
mov
lods
fmul
adc
pushf
or
sbb
or
repz
jg
pop
lods
aas
psrlq
in
sbb
rcl
call
sbb
sub
inc
jns
fidiv
fisubr
std
add
fwait
xchg
imul
in
add
outs
daa
and
shl
ss
in
adc
pop
and
and
mov
xor
push
xchg
or
(bad)
mov
inc
fnsave
hlt
push
push
mov
stc
dec
(bad)
push
mov
xchg
ds
xchg
stos
xchg
aaa
lahf
jp
inc
push
sub
rcr
adc
in
sub
push
inc
jmp
call
mov
ds
push
cmps
aaa
push
push
pop
dec
push
fnsave
repnz
pop
leave
sbb
ret
or
xchg
sub
xchg
jne
cmp
lods
fidiv
fistp
adc
mov
sub
nop
cs
je
test
dec
push
ja
in
pop
mov
sti
je
xor
cmp
push
add
in
shl
out
sbb
dec
pushf
push
addr16
into
adc
mov
xor
and
inc
clc
fild
add
lahf
(bad)
ror
xlat
inc
adc
ficomp
and
xor
das
xor
(bad)
rcl
into
bnd
and
mov
ins
dec
mov
jle
lds
in
mov
retf
int
addr16
push
pop
xor
and
(bad)
jmp
pop
push
pop
int
sbb
mov
out
mov
(bad)
into
cs
enter
div
mov
mov
(bad)
dec
dec
loopne
sub
push
pushf
hlt
mov
out
es
shr
mov
mul
out
pop
mov
ss
out
cdq
test
cmps
into
and
aad
mov
jmp
sbb
dec
ret
lahf
clc
call
adc
retf
xchg
jmp
ret
push
stos
int
in
mov
mov
mov
and
pop
mov
adc
out
mov
mov
scas
cs
iret
adc
jecxz
xchg
in
aas
adc
out
sbb
inc
push
test
jecxz
in
into
add
and
push
popa
call
repnz
jmp
mov
pop
push
fs
cmp
or
dec
cmp
or
mov
iret
mov
mov
pusha
in
push
std
ret
mov
lods
js
pop
test
pop
cmps
mov
jmp
call
mov
lds
fiadd
cmc
ret
ins
dec
inc
xlat
ins
xor
sub
out
add
mov
mov
pop
mov
pushf
jge
(bad)
lods
mov
mov
xchg
pop
scas
pushf
sbb
icebp
fs
mov
cld
daa
mov
xchg
pop
pop
(bad)
stos
mov
arpl
and
pop
xchg
dec
clc
inc
pusha
icebp
inc
inc
test
xor
stc
sahf
mov
loopne
ja
mov
dec
(bad)
mov
loopne
add
je
(bad)
call
jecxz
push
pop
out
pop
push
push
and
add
dec
les
mov
jp
push
sbb
daa
leave
cmp
jmp
loop
push
out
pop
jns
jl
adc
adc
pop
shr
jmp
imul
push
inc
mov
lods
push
sbb
sbb
mov
jne
mov
into
mov
sbb
es
retf
mov
lds
sti
push
cmps
jle
adc
push
add
add
push
fisttp
sbb
push
mov
or
je
jb
sub
mov
test
or
les
out
sbb
int3
(bad)
in
imul
sbb
sbb
rcl
(bad)
clc
loopne
add
jmp
movs
les
xor
sub
and
jmp
ja
push
sbb
adc
mov
sbb
sbb
mov
pusha
dec
pop
push
push
mov
stos
cmc
les
or
(bad)
js
push
or
sub
int
inc
in
jae
and
and
jge
bnd
movs
inc
cli
jbe
mov
(bad)
cmps
pop
(bad)
push
fsubr
fwait
popa
cmps
test
mov
add
inc
xchg
xor
cmc
js
sub
(bad)
adc
imul
mov
lods
gs
aam
mov
ds
or
mov
inc
mov
(bad)
pop
mov
pop
scas
pop
xor
push
in
int
(bad)
mov
pop
lods
es
pop
in
lea
jl
aaa
xchg
cmp
repz
fsub
xor
adc
test
nop
push
das
les
mov
jmp
jmp
mov
aaa
push
cld
ins
rcl
inc
shl
jns
outs
sub
xchg
cdq
push
mov
shl
repz
imul
jo
(bad)
jns
and
jg
xchg
lock
lods
mov
pop
in
push
repnz
sub
loop
mov
cmp
test
cmp
and
jp
jmp
jo
mov
and
in
and
in
inc
and
dec
call
xchg
sbb
fild
jns
or
(bad)
ins
cmp
xor
xchg
sbb
mov
jbe
(bad)
call
inc
bound
aaa
push
aaa
enter
or
in
jle
leave
push
adc
xchg
xchg
mov
jnp
mov
out
je
add
ror
pop
mov
pusha
fimul
test
sbb
push
add
in
es
bound
cmp
nop
mov
pop
pop
jle
test
add
loop
add
xchg
call
mov
icebp
stos
xchg
push
adc
sub
push
inc
dec
xchg
cmp
push
fstp
sbb
jg
jne
inc
js
or
fild
mov
sub
mov
or
cmp
dec
push
and
das
dec
(bad)
mov
mov
ins
ins
sub
jmp
or
adc
push
xchg
pop
push
pop
push
or
pop
or
jle
mov
and
not
push
test
cmp
adc
mov
inc
test
mov
arpl
rcl
jmp
cli
ss
sti
pop
mov
inc
inc
setne
and
lods
pop
dec
rcl
adc
lahf
and
jg
cld
pop
(bad)
cld
and
add
(bad)
cmc
addr16
jb
dec
test
xchg
or
out
lock
inc
mov
jge
mov
add
sub
(bad)
repnz
sbb
pop
jp
js
fdiv
in
movs
mov
shld
or
dec
retf
test
aam
lahf
jl
xor
cld
mov
mov
frstor
push
or
xor
add
rol
data16
inc
je
aam
out
push
xor
fwait
pop
arpl
pop
dec
jecxz
(bad)
jno
pop
and
pusha
sub
jns
adc
fnstcw
or
mov
push
test
push
out
push
jbe
adc
sub
ins
inc
or
aas
jl
rol
aad
popa
inc
push
push
jmp
mov
and
sub
dec
pop
jge
sub
xor
in
aam
cmp
retf
rcr
aaa
cmps
sbb
jae
jb
xlat
test
inc
sub
jae
sbb
popf
cdq
sbb
dec
js
(bad)
mov
pop
clc
fs
cmps
or
stos
xor
mov
adc
das
pop
and
mov
xor
(bad)
xchg
cli
jp
mov
fs
std
cmp
(bad)
adc
in
push
and
dec
mov
mov
add
dec
ror
movs
or
fcmove
test
adc
jmp
(bad)
adc
cld
push
push
in
pushf
jbe
out
cmps
sub
fsubr
or
fidivr
icebp
mov
cli
ret
mov
dec
not
sub
sar
jge
cmps
je
pop
scas
jp
pop
push
xchg
fwait
setle
sti
movs
je
mov
cmp
popa
pop
loop
int
mov
pop
mov
rol
std
movs
xor
ins
or
in
pushf
xchg
lds
in
fcom
stos
xchg
cmp
stos
in
add
shr
jp
movs
pslld
stc
(bad)
pop
neg
mov
inc
sbb
or
mov
and
cld
pop
and
lock
mov
or
daa
pmaddwd
jmp
jb
add
es
imul
sub
and
ret
retf
dec
scas
out
mov
pop
(bad)
fxam
push
pop
and
push
repz
mov
push
ins
push
loope
inc
arpl
cmp
into
xor
adc
mov
not
lds
lods
not
mov
ror
imul
stos
sub
cs
fs
sub
push
mov
int3
inc
punpcklwd
movs
(bad)
mov
jb
ret
popa
mov
test
lods
inc
cmp
jmp
test
pop
cmp
pop
cdq
(bad)
fiadd
aaa
(bad)
icebp
rcl
ror
ret
loopne
xchg
ss
sub
dec
lock
cmps
bound
cmp
pop
or
mov
cmp
cs
pop
clc
xor
add
push
outs
ins
xor
dec
xor
mov
sahf
mov
mov
mov
or
mov
clc
shr
retf
xlat
sbb
fwait
and
jne
bound
mov
and
out
mov
(bad)
sub
or
and
loope
mov
xchg
ja
(bad)
stc
scas
es
jo
iret
xchg
sbb
sub
push
mov
ficomp
fiadd
mov
pop
dec
test
(bad)
or
repnz
mov
xor
push
sbb
inc
and
mov
daa
sbb
and
test
xchg
aad
es
adc
xchg
clc
add
sbb
and
adc
sbb
je
jge
fimul
push
add
loopne
inc
mov
push
and
xor
fdivr
mov
xchg
inc
inc
jmp
ret
cmp
cmp
nop
retf
and
in
jecxz
jns
imul
scas
mov
scas
sbb
arpl
sar
fstp
push
sbb
not
jne
in
pushf
or
xor
jmp
add
hlt
mov
movzx
ja
inc
ss
inc
movs
jae
movs
sbb
fistp
gs
clc
inc
in
and
xchg
xchg
xor
sub
ja
mov
repnz
data16
dec
aas
or
inc
or
mov
push
shl
push
xor
mov
test
es
mov
add
push
in
dec
bound
or
ins
inc
add
adc
push
and
jnp
fs
in
cdq
push
(bad)
outs
fidivr
ror
add
sub
xchg
loope
test
sbb
outs
pop
adc
ud0
repz
push
cmp
add
push
idiv
bound
loop
imul
jno
jo
into
mov
mov
cwde
cs
push
inc
std
test
fucomi
not
and
mov
leave
adc
inc
push
or
jo
add
(bad)
fadd
loope
push
cmp
int3
xchg
mov
add
mov
or
vhaddpd
dec
or
dec
aas
pop
xor
in
hlt
lock
fnsave
aad
iret
sub
(bad)
jae
push
mov
add
adc
fidiv
outs
push
jnp
adc
cs
adc
pop
dec
(bad)
hlt
call
in
retf
mov
push
shl
out
mov
mov
sbb
mov
mov
xchg
cs
loope
xlat
adc
add
out
lods
mov
gs
xor
cdq
push
add
pop
cmp
jg
shl
(bad)
(bad)
pop
pop
pop
push
jg
fild
or
repz
fild
shl
fwait
push
or
(bad)
in
jp
movs
sub
jmp
pop
data16
js
mov
sub
ret
pop
xor
cmp
(bad)
push
sbb
inc
jbe
int3
dec
scas
xor
inc
jmp
mov
mov
imul
movs
dec
xchg
jo
jae
shr
ror
xchg
mov
inc
push
or
inc
pop
js
inc
or
xor
mov
sbb
mov
push
mov
sbb
in
enter
pop
push
jmp
dec
or
stos
hlt
aam
call
push
rol
jb
adc
lock
je
or
dec
not
mov
scas
fucom
push
fcomp
pop
dec
call
in
pop
rol
push
pop
hlt
data16
xchg
jbe
mov
pushf
lods
cmp
jno
pop
movs
mov
push
fbstp
or
sbb
mov
jecxz
mov
push
scas
ja
mov
imul
dec
pop
lods
jno
(bad)
sbb
test
(bad)
dec
pop
das
(bad)
hlt
and
test
aaa
rol
pop
adc
mov
out
jle
cmp
sub
jl
pop
aas
pusha
leave
int
in
(bad)
call
adc
cmc
in
add
fcom
cwde
and
outs
sub
inc
push
test
test
push
jb
(bad)
jb
idiv
ins
push
xchg
icebp
cmp
test
push
and
pop
add
aas
dec
jne
jle
xchg
adc
mov
mov
pop
jnp
lahf
les
inc
out
dec
xor
cli
ss
and
rcr
outs
test
outs
fidiv
xchg
inc
out
fild
mov
ficom
xchg
xor
clc
leave
jb
inc
fst
cs
fdivr
jno
out
inc
in
stos
lea
pop
jb
and
xor
aad
loope
cmp
dec
jb
xor
sbb
(bad)
fdiv
(bad)
xor
add
xor
xchg
fs
popa
sbb
scas
data16
and
aam
cmp
fmul
sub
inc
sub
adc
arpl
mov
movntps
lock
repz
mov
jmp
xchg
das
ss
js
cs
repz
mov
cmps
fwait
mov
imul
cdq
(bad)
pop
adc
cmps
nop
push
pop
adc
(bad)
test
inc
stos
sbb
fld
add
inc
cmc
mov
enter
ror
push
aas
xlat
mov
cmps
mov
outs
enter
sub
jle
arpl
dec
(bad)
pop
jne
pop
add
and
retf
mov
sbb
in
xchg
nop
mov
movs
sub
mov
ret
sbb
std
inc
sub
dec
pop
inc
pop
push
gs
jge
outs
jns
in
mov
mov
jge
push
(bad)
mov
ins
idiv
jp
cmp
scas
jg
imul
jno
dec
(bad)
movs
push
pop
cmp
sbb
call
(bad)
int
xchg
jg
mov
rol
jl
and
mov
popf
mov
mov
jne
cmp
faddp
and
cld
mov
adc
scas
and
xor
clc
cld
leave
dec
sbb
push
sbb
sti
or
mov
pusha
fisubr
dec
pusha
xor
mov
jno
pop
push
push
mov
jno
movs
jecxz
or
dec
lahf
fist
test
cmp
div
arpl
jns
aad
mov
cdq
or
scas
pusha
pop
xor
mov
mov
cwde
jl
js
sbb
jl
inc
xor
add
sub
xchg
adc
jbe
(bad)
adc
ret
pop
sub
call
sub
outs
lds
xchg
jno
mov
fucomip
adc
bound
hlt
enter
push
dec
mov
add
add
fistp
(bad)
mov
add
ja
mov
out
fucomip
aam
repz
ja
inc
jbe
jecxz
jae
cdq
call
cs
mov
dec
imul
stos
inc
addr16
(bad)
push
xlat
ja
enter
test
popa
add
jbe
or
mov
jnp
cmovno
cwde
sti
jg
cmp
add
dec
aaa
mov
cmps
inc
or
ja
sub
adc
mov
test
loope
out
icebp
mov
xchg
or
and
ss
jecxz
dec
out
xrelease
adc
call
les
into
or
push
mov
(bad)
push
mov
out
add
and
fwait
mov
idiv
xor
jmp
test
aaa
sub
inc
sbb
ja
dec
sub
mov
int3
fistp
xor
icebp
pop
xchg
cmp
mov
lea
dec
push
adc
jne
cmc
push
mov
cmp
add
inc
stc
mov
jne
jae
mov
stos
inc
add
test
in
pop
stos
mov
loopne
mov
repz
repz
xor
je
out
(bad)
jl
repz
cdq
dec
cmp
pop
not
inc
mov
mov
mov
ss
or
les
(bad)
dec
test
loopne
mov
xchg
cmp
lahf
sub
jp
fwait
dec
nop
repz
fcmovb
mov
retf
or
adc
xor
and
or
jl
pusha
stc
js
xor
mov
add
(bad)
inc
xlat
sbb
push
fist
lds
adc
sar
mov
hlt
dec
cmp
shr
xor
sub
mov
push
pop
test
sub
jg
or
lods
sti
and
cmps
stos
out
aas
sbb
inc
je
push
pop
inc
cmp
xchg
call
retf
ss
mov
xchg
sbb
mov
push
aaa
or
ins
das
push
jle
stos
(bad)
pop
jl
push
cdq
aas
adc
push
mov
lods
imul
dec
sub
popf
xchg
or
jmp
adc
and
push
adc
sbb
sbb
mov
jbe
and
push
retf
pop
jno
and
xor
xchg
orps
cdq
call
(bad)
jne
fild
shl
ret
xchg
add
pop
sbb
lock
push
call
push
and
push
lods
out
jne
jne
pop
ins
repnz
jp
aaa
fwait
movs
pop
loopne
xor
(bad)
lods
enter
cmp
add
jae
call
jns
outs
aad
arpl
mov
or
jl
sbb
and
xchg
jo
cmps
xlat
push
popa
pop
xchg
stos
dec
lds
mov
pop
xchg
add
mov
jae
adc
rol
mov
sar
fdiv
(bad)
lods
mov
cld
dec
fist
and
adc
xor
add
mov
aaa
xor
mov
cmp
mov
jl
mov
inc
in
sbb
xchg
inc
add
mov
add
clc
sub
push
cdq
sub
sub
or
popf
push
adc
mov
mov
(bad)
retf
jg
jl
jmp
mov
fldenv
mov
dec
fild
test
pop
das
inc
sub
fstp
push
arpl
xchg
push
jno
dec
xchg
or
cli
movs
push
push
movs
mov
retf
pop
loopne
inc
mov
or
xabort
add
jmp
dec
aas
inc
aaa
add
imul
loopne
pop
test
pop
mov
test
mov
repnz
fistp
mov
cmc
mov
cmc
scas
cmps
push
jne
xchg
mov
shl
test
add
(bad)
xor
movs
and
inc
ror
adc
jae
outs
inc
stc
js
lock
fst
bound
jmp
mov
nop
jb
sbb
xchg
push
pop
dec
add
in
ror
sahf
scas
scas
fisubr
in
cmps
xchg
ja
rcl
adc
test
and
pop
out
xor
jmp
in
pop
cmps
jae
inc
add
adc
loop
mov
out
sbb
add
or
dec
jg
leave
pop
mov
jmp
cmps
inc
cmps
sar
pusha
sti
dec
xchg
pop
pop
dec
pusha
loop
adc
scas
mov
mov
iret
sbb
lahf
add
aaa
mov
ret
aaa
shl
xchg
and
jno
fiadd
pop
pushf
mov
icebp
cmp
cmp
inc
mov
clc
sbb
pop
and
sbb
scas
or
sub
or
repnz
add
push
cmp
daa
jle
ret
and
mov
mov
adc
pop
dec
std
(bad)
imul
xchg
pop
and
call
mov
jle
pop
mov
sub
aaa
mov
push
adc
dec
loope
(bad)
ds
jns
(bad)
sub
cdq
mov
push
adc
lea
arpl
jmp
xchg
mov
mov
pop
mov
sbb
sub
xchg
dec
jns
mov
push
dec
mov
pop
jmp
sub
lea
pop
dec
std
cdq
mov
sbb
and
jne
(bad)
cmps
adc
repz
sub
aad
xchg
ja
neg
repnz
test
add
dec
icebp
hlt
xor
outs
fs
mov
popf
add
pop
sbb
js
addr16
jmp
cs
dec
add
ficom
ins
cmc
pusha
pop
popa
mov
mov
jae
push
push
lea
lods
sbb
jg
sub
aam
scas
xlat
sahf
pusha
imul
add
(bad)
aam
daa
push
jbe
mov
into
jns
daa
imul
int
cmp
sub
xchg
cmps
mov
mov
sar
pop
and
scas
int3
push
mov
mov
lods
fdivr
and
rcl
dec
jge
jmp
cmp
cs
imul
mov
popf
sbb
movs
stos
and
fcom
inc
jb
pop
iret
fcom
gs
sbb
sbb
and
(bad)
adc
mov
xchg
lods
inc
popf
xor
imul
cmp
cmp
gs
addr16
and
mov
xor
add
mov
jnp
pop
cmps
retf
mov
sub
inc
mov
mov
jg
movs
ror
shr
leave
jg
push
mov
inc
inc
lea
jno
aam
add
inc
or
js
repz
pop
fild
xchg
jg
retf
sbb
sbb
jp
or
and
or
push
pop
sub
and
mov
xchg
test
pushf
ins
je
push
jge
rol
mov
aas
mov
jp
sbb
aam
jmp
push
mov
popa
xlat
push
je
pop
add
mov
cmp
push
dec
pop
(bad)
clc
cmp
daa
add
inc
mov
pop
sub
je
pop
and
test
mov
jno
sti
mov
in
fs
sbb
jmp
stc
aam
mov
jp
or
out
test
mov
inc
mov
bound
cmp
add
sbb
inc
aam
jle
sbb
ins
mov
cmp
mov
xlat
mov
scas
and
and
sub
cmp
xlat
cli
imul
and
stos
fldenv
test
pusha
cs
sub
jecxz
fbstp
sbb
inc
sub
ror
aas
add
in
sbb
or
xor
mov
adc
xchg
mov
aam
push
xchg
mov
fadd
ins
adc
movs
jle
mov
push
xchg
and
add
inc
jno
mov
iret
call
cmps
mov
push
jp
xchg
cld
pop
out
(bad)
or
xor
inc
adc
cmps
jns
addr16
out
stc
xchg
aad
pop
aad
fcmovne
scas
sub
and
xchg
arpl
gs
test
or
jbe
push
out
or
adc
repnz
loop
mov
jne
aam
mov
jp
sahf
cmp
outs
les
call
and
mov
push
jecxz
dec
mov
xor
inc
adc
inc
mul
xor
xchg
cmp
aam
(bad)
sbb
test
jo
js
push
jno
fs
mov
dec
pop
add
push
outs
pop
dec
add
pop
jle
jns
mov
sub
std
retf
ret
mov
(bad)
jb
cli
mov
mov
retf
cmps
retf
(bad)
aad
idiv
sbb
bound
cmp
test
aaa
cmp
inc
cwde
enter
or
push
sar
enter
rol
push
dec
aad
jb
loopne
repnz
sbb
pushf
xchg
fs
sti
dec
icebp
sahf
test
daa
pop
push
mov
imul
push
loopne
ror
pop
mov
jg
dec
(bad)
fisub
fist
scas
jp
pushaw
popa
sahf
fst
stc
frstor
jo
xor
je
pop
div
fcmovnbe
(bad)
add
jo
xchg
fistp
adc
iret
call
addr16
shl
xchg
pop
add
jb
sub
xchg
jmp
sub
js
icebp
sub
push
jmp
xor
cwde
push
imul
inc
fwait
push
sti
push
ins
test
ja
(bad)
imul
iret
mov
imul
pop
xchg
sbb
ds
xor
xchg
inc
pop
xchg
femms
js
in
xchg
sbb
cmc
adc
lods
cld
in
add
xor
fistp
lock
sar
jae
scas
and
cmp
inc
icebp
pop
jb
lds
push
mov
test
xor
inc
int
push
popa
out
inc
not
dec
mov
(bad)
imul
jl
adc
inc
or
and
ins
add
or
mov
xchg
xchg
in
add
loopne
pushf
adc
pop
cmps
add
ja
push
shl
aad
cld
sub
call
inc
jno
les
push
jne
mov
jno
fs
cli
inc
or
push
jmp
add
jo
retf
cmp
xor
pusha
mov
popf
xchg
sbb
(bad)
int3
ror
sahf
cmp
pop
xor
adc
cmc
cmp
or
test
sti
xchg
hlt
retf
xchg
sbb
or
test
mov
mov
into
sbb
js
jl
sbb
mov
pop
bound
mov
jle
push
jecxz
neg
pop
or
jne
inc
test
ja
xchg
je
or
je
xchg
xchg
ret
and
or
into
jmp
jge
sar
and
sub
cmps
jae
pop
or
es
fdivr
das
mov
mov
mov
ins
dec
retf
ja
repz
jl
cdq
xor
mov
out
mov
fisub
imul
call
lds
jp
mov
mov
or
stos
fdiv
and
out
add
inc
iret
or
ja
push
jle
or
add
mov
push
jo
cmp
jmp
or
jae
jno
mov
xchg
dec
mov
mov
jns
iret
sub
inc
jb
mov
cmps
rcr
rcl
aas
ins
mov
mov
mov
mov
mov
cmp
jg
dec
cs
lods
and
xchg
jmp
jae
and
gs
sub
pop
mov
cmps
fs
scas
and
mov
dec
jg
push
pop
adc
test
mov
adc
inc
ins
sbb
stos
shr
jmp
pop
fst
fist
add
adc
fiadd
and
mov
xlat
jne
(bad)
cmc
pop
adc
pushf
(bad)
ret
mov
xchg
xchg
xor
test
scas
icebp
xchg
push
mov
xor
std
sub
popa
sub
mov
stos
daa
sub
add
push
push
xor
jb
sbb
add
repnz
inc
pop
inc
pop
adc
mov
test
lock
ficom
lds
inc
call
cmp
sbb
jae
dec
movs
out
fadd
sbb
(bad)
mov
fstp
cmps
lods
out
mov
mov
jo
jb
mov
stc
pushf
scas
test
ds
jns
nop
jnp
inc
add
inc
mov
sub
mov
push
cmp
pusha
inc
mov
call
je
cmc
data16
je
sbb
mov
mov
int3
and
les
sub
sub
push
xchg
sbb
sub
xor
mul
dec
mov
ds
loop
ds
jge
imul
out
mov
xor
sub
adc
add
retf
or
push
cmp
es
lahf
ret
mov
rcl
movs
rcl
mov
test
inc
cmps
lods
sbb
pop
out
jns
ficomp
lock
jne
pop
cmps
push
sub
inc
cs
repz
dec
int3
or
leave
ins
frstor
shr
inc
repnz
and
repnz
shl
lods
pop
repz
imul
and
xchg
in
fsubr
(bad)
in
(bad)
retf
mov
in
jmp
push
int3
mov
repz
fisttp
fcom
sub
shl
push
mov
add
sbb
fldenv
jae
jns
push
pusha
test
pop
mov
cmp
push
push
mov
or
clc
arpl
add
int
mov
lahf
test
call
lock
mov
inc
or
push
push
cs
in
ret
nop
fisttp
sub
sub
jo
pop
jb
inc
ss
fistp
aam
fnstsw
xor
xchg
or
pop
cmp
movs
mov
cmps
xor
pop
cmp
out
fsub
adc
data16
fsubr
or
or
mov
out
dec
xchg
xlat
nop
scas
xchg
pop
and
adc
(bad)
dec
sub
mov
adc
out
pop
fucomi
mov
inc
je
push
jmp
stos
mov
imul
data16
fst
and
(bad)
jne
or
jmp
xchg
mov
sbb
jo
dec
mov
ret
mov
aaa
mov
xchg
retf
repz
mov
loop
loop
cmp
gs
clc
jns
cmps
adc
out
dec
fbstp
and
adc
pusha
mov
mov
test
cdq
mov
jmp
ffreep
fwait
in
jmp
aas
cmps
int3
cmp
repnz
(bad)
stos
outs
xor
pop
mov
inc
and
shl
ss
push
test
and
add
jp
mov
cld
sbb
sar
mov
sti
or
int3
shl
cmp
xlat
mov
or
sub
les
mov
xchg
(bad)
test
dec
or
inc
call
lea
xlat
out
push
xor
or
cmp
fisub
ficom
or
rol
cmps
jne
sbb
dec
adc
jns
(bad)
adc
(bad)
leave
mov
adc
sbb
or
sti
loop
xor
xor
sti
fidivr
div
sub
(bad)
jae
and
mov
jne
ror
repz
jmp
jae
scas
fcomp
test
stos
xor
pop
(bad)
sbb
push
xor
mov
sbb
pop
pusha
stos
adc
mov
aas
add
push
ins
dec
addr16
ret
cmc
call
or
fidivr
popf
test
lea
test
jnp
xor
pop
and
xor
loopne
xchg
mov
popf
jmp
hlt
jge
out
jecxz
and
into
mov
(bad)
rcl
pop
xchg
sub
sahf
fwait
xchg
int3
mov
push
xchg
ss
aad
gs
jbe
mov
pop
add
out
sub
cmp
mov
rcl
inc
inc
(bad)
cdq
fiadd
sbb
cmp
jecxz
das
sub
add
cld
jnp
into
jp
or
(bad)
jle
sbb
(bad)
push
mov
cdq
mov
sub
sub
stos
push
fimul
mov
push
shl
outs
addr16
in
ds
out
xor
imul
push
xchg
cmp
aas
clc
pop
mov
nop
jbe
sbb
dec
xor
and
loopne
xchg
cmovp
jecxz
retf
inc
in
push
mov
dec
inc
mov
jp
out
and
in
ret
xor
or
dec
movs
shr
sub
pop
out
push
iret
sti
hlt
push
hlt
pop
xchg
and
sbb
mov
test
xchg
push
push
and
dec
sbb
push
adc
out
mov
outs
sbb
int
loop
xchg
(bad)
ja
loope
dec
sub
xor
jbe
pop
push
outs
mov
repnz
adc
into
pop
into
lds
loopne
jo
loope
cmp
mov
out
pop
inc
xchg
addr16
data16
popa
hlt
mov
mov
sar
shl
icebp
push
xor
jne
add
sub
inc
mov
pop
push
jl
test
movs
adc
dec
fldcw
and
inc
mov
xchg
jmp
ret
in
rcl
mov
mov
dec
out
fdivr
jmp
push
addr16
pop
cmps
hlt
dec
sub
(bad)
cld
mov
stos
jg
cmp
ins
in
int3
push
sbb
mov
push
loopne
or
fcom
mov
bound
push
cmp
pop
hlt
ror
pop
nop
and
cld
and
sbb
retf
sub
add
mov
leave
(bad)
mov
cmps
and
pushf
dec
(bad)
pop
(bad)
push
sub
sbb
aaa
cli
movs
fimul
sahf
add
les
adc
out
xor
sub
ins
adc
xchg
jo
gs
and
mov
and
dec
mov
sbb
fbstp
mov
mov
rol
scas
out
sbb
adc
inc
ss
xlat
jmp
fimul
dec
imul
stos
outs
add
ficomp
maxps
std
int3
shl
jmp
jecxz
pusha
sub
jle
dec
pop
push
lods
shr
popa
add
popf
jb
sub
call
push
in
push
inc
loope
cmp
xor
push
mov
mov
ror
cmp
cmp
(bad)
and
mov
sbb
scas
push
out
out
pop
mov
push
inc
(bad)
dec
sbb
iret
mov
mov
rol
sbb
xchg
or
ret
pop
jo
mov
popf
pop
cmps
daa
or
push
sar
mov
xchg
stos
dec
cs
outs
aam
call
out
push
push
js
cwde
and
std
shl
xchg
sbb
mov
dec
js
ds
fst
inc
sbb
sub
loopne
lahf
mov
lods
fwait
pusha
ret
and
mov
in
inc
adc
movs
out
add
jb
(bad)
ss
pop
mov
inc
cmp
and
mov
sub
add
or
inc
cmc
push
pusha
movs
and
mov
lods
ffree
sub
xchg
mov
bound
or
pop
adc
sub
jo
push
add
jns
js
jge
loopne
cdq
pop
fist
sub
imul
push
pop
sub
mov
mov
cld
adc
(bad)
je
fwait
jmp
inc
sbb
es
(bad)
in
dec
cld
mov
pop
xor
sbb
pop
jbe
daa
icebp
pop
mov
in
das
adc
fucomip
shl
call
mov
popa
and
mov
or
inc
in
loope
inc
out
ins
ins
mov
repz
test
ror
dec
pop
mov
xchg
mov
pop
mov
xchg
sub
mov
sbb
test
mov
mov
pop
sub
dec
and
sbb
pop
test
cmp
pushf
call
jbe
and
cmp
loope
inc
and
push
mov
xchg
lock
adc
imul
and
fldenv
add
sti
jbe
repnz
mov
jno
aam
fstp
sbb
fneni(8087
cmp
fs
sub
mov
mov
fs
jns
pop
in
pop
(bad)
mov
fist
inc
(bad)
inc
test
xchg
stos
or
(bad)
out
mov
jmp
sub
dec
sti
adc
jno
fisttp
dec
pop
rcl
jp
dec
xchg
xor
loope
fwait
push
push
jg
or
neg
inc
loope
add
add
push
imul
pop
and
jnp
sub
scas
ins
addr16
mov
sbb
pushf
dec
nop
ret
mov
adc
aaa
inc
dec
mov
mov
or
push
pop
xchg
or
xor
jmp
pop
sbb
inc
pushf
mov
(bad)
push
lock
add
jp
repz
mov
ds
or
mov
jmp
fwait
in
add
arpl
dec
push
or
jns
cwde
mov
jg
mov
jbe
stc
or
das
ret
fld
test
pop
or
cmp
fsubr
pop
cmp
mov
lahf
xor
loop
fwait
add
repz
aaa
(bad)
in
sbb
jle
xchg
or
and
lea
sahf
jle
sub
pop
fwait
cmp
iret
inc
fsubr
sbb
imul
sbb
xor
or
aas
in
mov
test
add
pop
cmps
sub
sub
sbb
jae
inc
jmp
rol
jnp
das
inc
push
jmp
adc
mov
test
add
ret
dec
xor
lods
inc
stos
jl
outs
lods
cld
rcr
push
or
xlat
test
jp
rol
jmp
neg
popf
cmp
xor
fiadd
icebp
stos
pop
call
jecxz
iret
ret
add
jno
mov
jp
mov
rcr
pop
int
dec
jae
inc
rol
xor
pop
popf
mov
and
fldcw
mov
and
into
adc
aas
aas
ror
out
jg
jmp
jmp
adc
mov
sub
int
adc
outs
add
retf
inc
cmp
mov
nop
mov
and
inc
in
mov
dec
aas
stos
mov
pusha
push
jnp
iret
shl
movs
jecxz
leave
mov
(bad)
jmp
jmp
xchg
cli
sar
inc
mov
sub
sbb
jbe
mov
adc
jno
repz
ror
jae
jns
dec
popa
inc
out
xchg
jno
ds
cmc
scas
mov
mov
or
lahf
xchg
jg
add
mov
pusha
inc
and
pop
xor
and
pop
lods
ficom
retf
jmp
pop
inc
adc
lods
add
loop
sbb
dec
and
cmps
aam
fsubp
cmps
lods
and
adc
gs
sub
xor
xchg
cmp
sub
fiadd
jnp
cmp
movs
jmp
ins
sbb
prefetcht0
mov
sub
inc
sbb
pop
pop
jb
cmp
stos
xchg
jmp
pop
stos
sub
fisubr
jbe
dec
dec
gs
int3
mov
call
sar
leave
jp
iret
les
cmp
push
fdiv
cmp
test
dec
xchg
mov
inc
and
retf
xor
jp
sbb
dec
(bad)
adc
inc
adc
(bad)
jns
push
xchg
inc
jecxz
push
(bad)
ftst
cmps
dec
call
jmp
sub
in
dec
dec
pop
xchg
gs
mov
(bad)
es
xchg
pop
sub
adc
retf
xor
add
in
stc
mov
push
scas
in
sub
pusha
pop
xchg
add
stos
out
xchg
mov
push
mov
mov
inc
lds
ror
das
repz
das
jmp
imul
daa
inc
adc
lods
xchg
mov
mov
(bad)
jb
mov
jb
mov
mov
pop
mov
dec
arpl
movs
call
xchg
lods
cmps
inc
dec
mov
bound
xor
fcom
xchg
call
icebp
ss
dec
xor
stos
int3
stos
mov
xor
loope
dec
push
inc
xor
mov
mov
js
rcr
dec
xor
aad
pop
adc
cmp
mov
jns
adc
push
stos
data16
push
add
stc
add
out
mov
out
and
ret
jp
xor
aad
xchg
outs
mov
shl
inc
cdq
jne
jle
pop
sub
jns
jo
push
jne
loopne
dec
test
lea
xor
or
ret
(bad)
shr
call
jo
rcl
pop
add
cdq
jl
xchg
add
adc
ds
hlt
xchg
mov
out
inc
jne
add
aad
pop
ins
mov
jmp
pop
scas
cmp
mov
and
push
mov
setne
pop
scas
xor
mov
pop
pop
movs
push
xchg
cmp
mov
nop
inc
ret
shr
in
bound
inc
loope
sahf
imul
psraw
xor
or
mov
xchg
adc
xchg
xchg
and
mov
inc
xor
push
jg
mov
jbe
xchg
pop
and
push
sub
imul
push
sub
(bad)
scas
dec
hlt
mov
call
ret
ja
fucomi
outs
data16
xchg
scas
sbb
fucomip
mov
cmp
push
push
(bad)
lods
mov
dec
xchg
jnp
jmp
cwde
cwde
mov
mov
push
dec
das
movs
mov
outs
(bad)
cmp
add
mov
ins
(bad)
dec
push
adc
mov
shr
inc
push
or
xchg
cli
cmp
int
lahf
xchg
popa
(bad)
mov
or
adc
or
cmp
arpl
ins
pop
sub
fstp
idiv
adc
mov
dec
gs
or
dec
test
or
mov
(bad)
(bad)
ja
mov
mov
pusha
dec
xchg
retf
sub
push
(bad)
popa
mov
push
mov
aas
loop
mov
stos
push
cmp
(bad)
adc
fld
mov
adc
shl
mov
adc
loopne
jb
(bad)
stos
jo
xchg
ds
lahf
iret
hlt
push
xchg
test
lods
mov
push
dec
int
lods
sbb
call
imul
dec
dec
inc
shl
mov
sbb
mov
fwait
mov
adc
out
sub
sub
and
add
lods
push
iret
sbb
xor
sub
mov
mov
(bad)
xor
iret
fisttp
data16
in
or
lahf
cmp
pop
or
push
jg
inc
out
sub
fsubp
cmp
imul
pop
out
inc
sub
retf
mov
pop
sar
pop
arpl
icebp
hlt
outs
sahf
jb
test
ror
movs
and
cwde
cmc
adc
xor
inc
rcl
xor
dec
mov
sbb
ins
add
fbld
inc
int3
push
push
inc
push
(bad)
leave
xchg
sbb
out
adc
mov
dec
mov
mov
xchg
push
push
repz
sti
and
fild
pop
adc
mov
mov
cdq
cmp
mov
in
or
sub
sbb
jge
fcmovnu
aad
xchg
stc
jmp
inc
add
call
fdivr
mov
mov
call
add
inc
pop
retf
jg
in
test
cld
or
mov
daa
ja
ja
jmp
in
lods
jmp
mov
mov
idiv
test
mov
xchg
loopne
inc
adc
in
inc
call
ss
in
std
out
mov
ins
mov
mov
jmp
cmps
fwait
adc
cli
jecxz
mov
ret
ss
dec
aad
mov
fsubrp
dec
xchg
add
jae
adc
je
or
je
int
add
dec
pop
repnz
movs
pop
cmp
mov
jl
je
mov
add
popa
xor
les
sbb
inc
cmp
in
cmp
shr
shl
or
jp
popa
xor
jp
bound
movs
dec
pop
hlt
mov
push
dec
xor
dec
mov
mov
mov
jb
ins
fs
inc
mov
mov
xchg
(bad)
lods
out
inc
rcr
lock
inc
cmp
jae
cwde
sbb
mov
jp
or
ret
cmp
xchg
daa
daa
repz
dec
mov
loop
iret
cmp
stos
shl
repnz
into
fs
imul
loop
in
dec
bound
jle
arpl
mov
add
int
add
ret
cli
mov
xor
jmp
pop
das
cmps
cmps
in
sub
adc
add
test
in
or
push
leave
jmp
mov
xchg
(bad)
pop
mov
jbe
jnp
jg
xchg
sub
fist
test
lds
xchg
sahf
dec
leave
cdq
sbb
movs
sub
out
pop
ror
inc
xchg
xchg
ja
mov
jle
dec
mov
stc
mov
push
inc
outs
and
popf
fnsave
push
jb
neg
jle
inc
push
sub
sub
sub
test
std
mov
aas
sti
sub
sub
mov
sbb
add
clc
pop
dec
cmp
out
sahf
and
hlt
sub
mov
loop
xor
add
inc
div
cmp
or
pop
rcr
fsub
movs
dec
mov
mov
test
cwde
nop
mov
jge
and
mov
and
(bad)
adc
pop
(bad)
adc
push
pop
xchg
inc
push
sub
mov
call
pop
dec
jo
fsub
push
and
aad
xchg
je
lds
pop
lock
cmp
mov
inc
pop
xchg
or
xlat
dec
dec
repz
mov
fdiv
stos
mov
dec
push
xchg
scas
jnp
mov
xchg
mov
test
inc
ret
ret
dec
sub
mov
dec
icebp
movs
sbb
pop
and
test
sub
sub
pusha
mov
push
sbb
or
push
xchg
push
cmp
push
std
dec
adc
add
aam
stc
fstp
rcr
push
enter
(bad)
scas
sub
add
repnz
fdiv
and
mov
push
daa
mov
ficom
stos
xor
mov
jns
adc
jge
(bad)
adc
mov
scas
and
les
add
xor
add
les
cmp
(bad)
rcr
xlat
pop
jl
cmp
sub
idiv
pop
out
mov
xchg
lds
rcr
pop
cmp
adc
jl
call
mov
in
leave
mov
mov
sub
jb
push
in
mov
mov
xchg
jle
mov
loopne
shr
shl
push
adc
retf
sbb
xor
lods
push
call
ins
mov
adc
xlat
movs
pop
repz
mov
pushf
ss
dec
mov
rcr
sub
pop
in
xchg
adc
retf
(bad)
scas
popf
call
call
shr
lahf
retf
aaa
in
inc
jl
mov
call
xchg
fisub
mov
mov
enter
mov
popa
add
test
mov
mov
inc
sub
add
imul
mov
jmp
xor
mov
scas
ss
jmp
test
cmp
jae
dec
push
push
scas
(bad)
push
dec
imul
xchg
ret
push
push
in
xor
mov
push
cs
jne
jg
cs
xor
not
jmp
dec
rcl
cmp
stos
sbb
push
xchg
cmp
push
gs
dec
enter
loopne
into
pop
dec
lahf
xchg
pop
add
xor
jb
adc
lds
sbb
fdivr
sti
les
and
dec
and
xchg
pop
push
dec
dec
data16
xlat
mov
lahf
jge
mov
sub
cmc
cs
xchg
add
sbb
or
retf
push
sahf
dec
inc
dec
pop
and
sub
daa
bound
cmps
xchg
pop
xchg
xchg
stos
scas
adc
mov
adc
loopne
sbb
out
out
cmp
pop
sub
inc
and
call
(bad)
xchg
scas
fdivr
xchg
cmps
adc
pop
je
or
sbb
cli
aad
mov
pop
inc
retf
outs
and
xchg
dec
shl
sbb
das
je
cli
jbe
loope
stc
mov
aas
es
mov
mov
add
jecxz
jg
icebp
adc
and
ret
int3
push
repz
xlat
cmp
test
cmp
arpl
fistp
repnz
cdq
and
and
inc
mov
jne
mov
pop
cdq
and
fldcw
and
in
rep
sub
stos
retf
int3
adc
jb
or
adc
jle
xor
mov
addr16
sub
in
test
sbb
test
sbb
mov
leave
aam
sbb
add
iret
inc
int3
leave
fcom
pop
outs
push
pop
jl
je
mov
xchg
pop
shl
and
pop
dec
enter
or
add
cmps
mov
mov
inc
push
jbe
cmp
fld
mov
test
jb
shl
movs
lahf
lock
push
mov
fs
nop
cld
sub
call
cmp
sbb
jge
xchg
sub
xor
fwait
xchg
lods
cmp
xchg
jo
leave
mov
add
pop
push
out
jl
enter
jae
lods
leave
nop
push
push
sub
into
ret
cmp
data16
out
retf
cmp
aam
ins
mov
push
(bad)
jns
cld
sar
into
xor
sbb
push
pop
ret
enter
sbb
xor
jmp
add
das
fst
adc
jl
xchg
sbb
or
dec
push
stos
inc
mov
jge
inc
aam
fdiv
stos
and
mov
xchg
sbb
imul
and
popa
inc
pop
and
pop
mov
cmc
xlat
lods
mov
mov
dec
dec
xchg
adc
sbb
pop
inc
test
mov
push
adc
push
ffree
jns
jbe
xchg
loope
adc
xchg
call
cmps
push
out
cmps
adc
je
jg
test
ret
mov
mov
sti
into
ds
inc
xor
outs
and
pop
or
stos
ds
ror
retf
push
mov
dec
sub
jne
push
inc
enter
and
idiv
fisttp
stos
xchg
imul
cmp
pop
imul
xor
fistp
pop
xor
sahf
out
dec
xor
es
inc
adc
cdq
addr16
jns
mov
sub
jns
push
adc
xchg
cwde
movs
sbb
fistp
adc
jne
(bad)
pop
outs
push
xor
ds
adc
shl
mov
cmp
imul
fs
or
retf
popf
mov
call
jp
pop
arpl
dec
sbb
cmp
jns
arpl
jmp
repnz
cmps
jmp
mov
sub
aaa
mov
dec
lds
(bad)
jg
xor
inc
dec
xchg
sti
xor
push
inc
sbb
test
sub
push
dec
daa
sbb
or
mov
(bad)
mov
movs
jecxz
shl
jmp
inc
pop
mov
fistp
iret
push
mov
ins
or
add
push
(bad)
and
retf
xchg
popf
(bad)
mov
bound
cmps
cld
or
sub
je
cmp
mov
mov
(bad)
(bad)
outs
repz
adc
mov
mov
mov
ret
call
push
mov
jne
rol
pop
stos
mov
jge
sub
pop
pop
push
jge
mov
add
or
inc
(bad)
ret
jl
iret
xchg
loop
pop
push
jns
dec
bound
ds
push
sub
push
jo
dec
shl
jo
mov
int3
xchg
adc
push
mov
(bad)
inc
mov
mov
adc
cmp
je
out
pop
fidiv
test
mov
outs
std
rcl
jle
sar
frstor
daa
outs
mov
cmp
fimul
ror
lahf
shr
push
retf
sub
repz
inc
rcl
xor
push
cmps
jbe
jmp
clc
nop
inc
mov
std
xor
mov
mov
ja
ja
test
aaa
js
jns
ret
add
loopne
xchg
fdivr
out
push
and
fldpi
addr16
lahf
in
mov
xchg
rol
aaa
fld
pop
inc
add
imul
cmps
pop
xor
cmp
(bad)
and
aad
lods
ror
sbb
mov
adc
retf
(bad)
(bad)
int
mov
pop
mov
iret
cmp
leave
shl
(bad)
in
les
push
loope
or
pushf
xchg
jb
mov
xor
ins
in
inc
dec
adc
std
xor
sbb
cdq
push
movs
xchg
sub
mov
sub
push
adc
fwait
push
cmp
movs
pop
or
or
mov
or
dec
mov
lods
and
js
in
jmp
test
pop
cmps
mov
aad
mov
sar
scas
adc
sti
rcr
and
loope
imul
in
jle
outs
pop
sbb
push
jne
mov
outs
stc
ror
call
stos
pop
cmps
ins
pushf
mov
ja
cmp
push
sbb
neg
add
loopne
push
arpl
push
cmc
jo
into
xchg
inc
das
stc
push
cmp
jb
pusha
pop
les
push
mov
imul
or
imul
pop
into
aaa
and
mov
ror
cwde
rol
mov
xchg
or
outs
movs
es
dec
and
xchg
addr16
dec
push
add
into
pop
repz
bound
pop
inc
xor
loope
push
loope
add
add
ins
inc
dec
sahf
arpl
in
imul
ins
popa
add
(bad)
dec
inc
jp
cmp
cmp
popf
mov
movs
pop
idiv
lds
shl
ret
lods
div
pop
imul
inc
into
push
mov
dec
loopne
je
les
dec
sti
inc
mov
xchg
mov
mov
cmp
xor
mov
gs
pop
cdq
xchg
arpl
in
pop
les
adc
aaa
cmp
dec
ss
xchg
and
xor
jbe
fld
pop
imul
aam
ja
xchg
fiadd
fwait
sbb
rcr
xor
out
mov
mov
xchg
enter
stc
int3
inc
dec
pop
(bad)
imul
sbb
out
ds
adc
test
outs
fld
call
es
sti
bound
inc
inc
and
pop
push
iret
inc
scas
or
cmp
mov
fcom
pop
call
mov
pusha
gs
or
dec
inc
aam
cld
cwde
xchg
sbb
mov
push
pop
lds
idiv
mov
neg
mov
inc
inc
push
pusha
into
loope
(bad)
idiv
inc
mov
(bad)
pushf
cwde
rol
loopne
mov
dec
aad
adc
adc
cmp
dec
mov
(bad)
icebp
xchg
sbb
dec
jmp
jno
stos
add
js
jge
js
xchg
in
mov
in
and
icebp
mov
dec
mov
xor
fld
cmp
jmp
add
nop
jnp
xchg
test
addr16
mov
push
sub
xor
(bad)
xchg
or
lods
mov
adc
sub
inc
clc
push
inc
xchg
fcmovnbe
jge
mov
cdq
push
push
js
cmps
call
mov
lock
xor
imul
call
mov
fcmove
jmp
mov
in
pop
inc
dec
pop
jmp
mov
ss
js
stos
or
or
push
and
xor
shl
daa
mov
mov
ja
cmps
enter
add
jmp
and
scas
adc
mov
shr
adc
jnp
jge
mov
or
mov
mov
adc
cmps
mov
retf
cmc
push
pop
mov
and
pushf
or
iret
cmp
dec
push
ds
ins
sub
rcl
outs
ret
xor
inc
lea
pop
pop
test
(bad)
sbb
jge
std
adc
sar
pop
sub
push
cdq
repz
rcl
aad
and
leave
ret
pusha
into
(bad)
fdivr
xlat
ret
mov
mov
addr16
jno
add
and
mov
pop
cli
loopne
rcl
push
jge
aas
or
push
fild
rol
outs
xchg
and
cmps
sub
cmp
ret
mov
sub
pushf
repnz
aas
(bad)
out
lods
inc
popa
out
dec
adc
fimul
push
movs
add
jecxz
dec
fild
or
adc
jmp
xor
ret
clc
adc
adc
push
mov
imul
test
mov
cmp
sub
movs
(bad)
in
ret
cmp
ror
add
add
adc
arpl
cld
cmp
int
push
jmp
push
or
dec
inc
das
add
jle
mov
pop
mov
in
gs
push
pop
push
jb
push
bound
call
pop
cdq
scas
ins
outs
dec
xchg
div
jecxz
scas
sti
mov
aad
xchg
inc
push
leave
xchg
add
sahf
or
les
xchg
cmp
sahf
std
mov
mov
mov
push
push
outs
fiadd
ror
popa
loope
mov
js
xchg
pop
pop
mov
xchg
out
cwde
or
xchg
jp
fdecstp
leave
adc
adc
sub
push
inc
popa
mov
mov
sub
mov
clc
cld
inc
out
sub
ja
(bad)
sub
test
retf
inc
push
test
add
pop
cmp
jle
sbb
sti
mov
jg
fstp
les
dec
pop
cmp
mov
sbb
mov
mov
sbb
dec
push
stos
out
push
sbb
int
shld
int
add
rcr
repz
scas
retf
data16
or
fwait
gs
push
add
ror
test
pop
fst
rcr
dec
popf
(bad)
ss
cmp
sbb
mov
stos
mov
faddp
out
fild
cwde
loop
dec
pop
adc
or
pop
jmp
cmps
cmp
aad
jecxz
test
fucomip
xchg
inc
int3
mov
or
ror
and
cmp
mov
mov
cmp
xchg
push
cmc
cmps
ds
inc
rcr
or
jmp
and
mov
mov
sbb
hlt
imul
add
test
mov
xor
aam
data16
inc
mov
scas
popf
popf
jo
jge
fidiv
cli
fst
(bad)
daa
dec
cwde
push
push
dec
inc
int
inc
cmp
retf
loopne
sub
mov
mov
lock
and
fild
add
scas
aaa
lods
sti
cmps
nop
sbb
hlt
push
mov
jecxz
jp
dec
jge
es
std
jge
sub
sti
out
aam
mov
cmp
pop
cmp
in
test
sub
pop
pop
cmovle
inc
inc
mov
cmc
cmp
lds
dec
loopne
rcl
movs
fimul
cmp
cmp
sub
imul
icebp
repz
xor
ss
add
sub
ins
push
and
icebp
addr16
loope
or
loopne
and
cmp
repz
call
outs
pushf
hlt
call
icebp
push
xchg
(bad)
cmp
inc
xchg
adc
cmps
stos
neg
xchg
mov
push
fadd
mov
and
inc
outs
repnz
in
mov
push
inc
ret
jge
or
sahf
adc
les
lods
(bad)
fdivr
fwait
rcr
call
pop
out
cld
mul
jo
push
je
fstp
push
dec
pop
xor
js
inc
addr16
cmp
rcl
xor
add
ja
jns
stc
cdq
out
fnsave
sbb
addr16
fs
out
push
jae
das
mov
sbb
sub
rcl
jnp
sbb
push
fistp
sbb
sbb
mov
fwait
push
sub
cmc
es
ins
and
scas
daa
and
or
gs
popf
pop
pop
pop
dec
shl
(bad)
stc
fcomp
repz
cwde
enter
push
dec
xchg
inc
das
add
cmp
fistp
push
fwait
add
and
mov
add
call
jmp
xor
outs
mov
xchg
mov
mov
or
mov
mov
aaa
jb
stos
dec
xchg
in
repnz
jmp
cwde
outs
(bad)
ds
retf
dec
jle
sbb
jle
and
ret
pop
ins
outs
pop
lds
pop
cmp
es
cmp
jbe
push
fs
jns
adc
pop
std
adc
mov
add
push
sbb
fist
lds
dec
sbb
inc
imul
pop
mov
xor
cmp
adc
cdq
adc
jae
mov
xchg
dec
in
ss
push
xchg
mov
mov
(bad)
outs
(bad)
mov
mov
outs
icebp
jl
mov
inc
push
push
inc
jp
in
pop
inc
outs
dec
ret
shl
add
pop
pop
mov
xchg
sub
sbb
mov
es
stc
scas
xor
jmp
call
jmp
mov
std
mov
pop
jecxz
(bad)
jmp
les
mov
dec
in
or
ins
jmp
in
pop
mov
mov
pop
pop
jecxz
jns
stos
push
js
push
xor
loop
mov
ret
push
movs
lock
push
fwait
pop
and
in
jecxz
jecxz
inc
loop
(bad)
repnz
cmp
cmp
or
xchg
in
add
test
jo
imul
xlat
lahf
(bad)
(bad)
dec
fisttp
pop
gs
neg
popa
jbe
in
add
mov
and
add
jle
nop
or
clc
xor
sub
mov
inc
push
sub
(bad)
pop
mov
xchg
fcom
(bad)
and
jmp
push
pop
jnp
in
mov
je
sub
mov
xchg
jecxz
cmps
in
inc
mov
mov
pop
mov
neg
push
call
xchg
movs
outs
jae
sub
jle
pop
push
dec
xchg
push
add
into
movs
bound
stos
adc
jne
xor
shl
js
xor
ret
aas
loopne
cmp
pop
adc
or
push
mov
mov
or
retf
fdivr
fisub
jecxz
xor
mov
fbstp
sub
iret
je
jge
jmp
in
cwde
cmp
outs
sbb
arpl
das
gs
ins
jno
mov
out
sub
push
pop
int
mov
mov
retf
pop
enter
xlat
hlt
adc
rcr
mov
jae
xchg
xchg
xlat
sti
pop
mov
and
test
icebp
push
cmc
imul
jl
xchg
je
or
cld
call
pusha
dec
jmp
mov
sub
jl
pop
popf
jne
mov
imul
sub
fnstcw
mov
(bad)
sbb
adc
adc
sbb
mov
xchg
sub
sbb
pop
arpl
sub
std
mov
pop
inc
mov
out
sub
icebp
add
repnz
add
enter
test
dec
push
out
pop
cld
ret
mov
pop
push
push
iret
out
xor
cmps
stos
push
pop
and
or
and
jne
lods
data16
push
xchg
pushfw
pop
in
stc
dec
inc
imul
inc
retf
and
sbb
jle
scas
inc
pop
sbb
inc
sar
iret
push
sub
mov
dec
addr16
fild
popa
out
xchg
and
repz
adc
cwde
clc
out
mov
loope
popf
ja
scas
push
ror
push
cmp
repnz
repnz
and
mov
lock
jecxz
(bad)
in
cwde
push
adc
pusha
js
imul
add
aam
add
push
mov
jmp
mov
sbb
xor
add
lahf
push
loopne
adc
xchg
pusha
push
movs
sbb
mov
test
xchg
add
inc
sub
test
ins
pop
test
cmp
pop
and
or
and
adc
xchg
xchg
xchg
cwde
xor
xchg
add
add
retf
mov
retf
cmp
and
ss
cmp
imul
loopne
mov
addr16
shr
push
cmps
mov
cmp
out
add
loope
mov
dec
inc
jg
or
movs
sahf
test
scas
mov
ja
jmp
popa
sub
pop
push
or
pop
and
mov
loopne
adc
mov
(bad)
mov
sbb
pop
cmp
lea
mov
in
push
imul
fadd
call
push
dec
fld
add
dec
mov
sub
(bad)
sbb
or
and
retf
mov
mov
stos
xor
movs
xlat
jmp
push
adc
loop
mov
fst
add
int
pop
aas
mov
(bad)
push
shl
push
rcr
jmp
movs
pop
adc
jae
sub
or
call
dec
stc
pop
and
rcl
jmp
jbe
outs
cmp
mov
jg
mov
out
sbb
jmp
call
xor
sbb
pushf
pop
std
push
popa
lds
mov
test
and
stos
stos
retf
ss
xchg
xor
lds
dec
dec
jg
leave
sub
daa
pop
xor
in
shl
lahf
shl
cli
cmp
inc
in
arpl
mov
fsub
push
ins
jb
xor
fidivr
aas
mov
push
aam
cwde
jg
add
ret
cs
dec
pop
les
jbe
mov
sbb
xchg
push
stc
adc
pop
retf
inc
add
lahf
call
ret
adc
xchg
sti
cmp
jne
jp
fcomp
pop
pushf
dec
pop
popa
inc
fidiv
adc
cmp
or
inc
or
ds
shr
add
mov
shr
icebp
cs
mov
pusha
cmp
fidivr
outs
sbb
and
or
std
cmp
add
icebp
jmp
adc
imul
shr
inc
adc
push
xor
sbb
nop
mov
scas
mov
sub
adc
sub
xlat
hlt
aas
in
cmps
adc
inc
outs
je
mov
jg
lods
cmp
or
scas
int
mov
ret
paddq
sbb
dec
jno
xor
repnz
cmp
cmp
or
pop
outs
stc
cwde
inc
scas
(bad)
fiadd
xor
or
(bad)
ds
fisubr
add
xor
movs
jb
lea
jecxz
sbb
scas
mov
xor
out
addr16
mov
mov
jmp
bound
or
rcl
and
dec
add
iret
movs
sbb
shr
adc
sub
arpl
es
pop
xchg
sub
cmc
adc
pusha
stos
pop
inc
xor
mov
(bad)
cld
xchg
or
or
les
and
jbe
xchg
xor
dec
mov
sbb
icebp
cmp
and
test
test
adc
jg
mov
sub
pop
imul
cs
test
mov
mov
cs
iret
out
cdq
mov
mov
push
call
xchg
pop
inc
mov
jno
lods
push
adc
fs
push
aam
push
dec
pusha
(bad)
into
dec
adc
lea
push
ss
or
outs
ins
sbb
imul
xor
imul
addr16
mov
push
cmp
push
rcl
mov
add
dec
ret
test
mov
cmps
adc
(bad)
mov
sar
jno
inc
retf
xor
dec
int
fs
mov
rol
pop
das
add
mov
scas
mov
sbb
lea
fcomp
xchg
cmp
jle
xchg
pop
jle
int
mov
add
(bad)
mov
lods
xchg
sub
loope
add
inc
hlt
mov
pop
js
xor
std
pop
pop
push
cwde
mov
dec
xor
fnstenv
push
pop
rcr
mov
mov
add
jbe
or
repnz
dec
jns
mov
add
aas
cdq
hlt
ds
adc
xchg
ins
sub
mov
inc
push
inc
mov
adc
test
cmc
xor
cmp
ins
cmp
loop
fstp
xor
adc
mov
xchg
jnp
push
mov
ins
mov
test
cmp
mov
dec
mov
and
mov
sbb
cmp
enter
xchg
in
mov
ja
shl
retf
test
popa
hlt
movs
sbb
push
les
mov
xchg
nop
cmc
jbe
push
mov
cmps
or
or
fcomp
push
xchg
(bad)
pop
mov
mov
sbb
mov
xchg
add
jnp
mov
adc
jecxz
xor
xchg
xor
push
fprem1
mov
fistp
icebp
arpl
and
mov
in
push
inc
xor
cmp
mov
gs
hlt
push
mov
iret
xor
mov
retf
or
imul
or
mov
pop
std
(bad)
sbb
cmc
ror
or
or
nop
jle
movs
adc
dec
mov
cmp
ret
int
jnp
pop
in
movs
inc
sbb
loop
push
mov
cmp
mov
into
push
es
stos
or
sub
mov
aad
scas
out
iret
mov
sbb
jge
fwait
mov
pop
lahf
lods
ror
out
push
mov
adc
gs
mov
xor
sub
stc
inc
std
and
fidivr
jne
xchg
daa
jecxz
pop
jle
or
xchg
xor
adc
xchg
test
jnp
mov
std
pusha
aad
stc
mov
lods
adc
dec
leave
jmp
jmp
xor
cmc
xchg
mov
adc
pop
push
cmp
xchg
pop
mov
pop
fnstsw
cmp
loopne
xchg
sar
sar
jae
rcl
pop
imul
pop
jmp
cmp
imul
jmp
xchg
imul
mov
pop
int
mov
lock
(bad)
fist
arpl
push
xchg
sub
ja
lods
lds
push
mov
mov
in
push
out
sub
aas
mov
pop
inc
clc
mov
neg
test
lods
ins
js
int3
out
popa
(bad)
dec
adc
xor
(bad)
mov
movs
test
jns
call
stos
or
xchg
xor
mov
pop
mov
sub
jg
add
and
xor
in
rcr
jge
cmps
repnz
fistp
xor
and
fcmove
sbb
mov
fistp
(bad)
loopne
mov
pop
dec
sub
sub
shl
repnz
xchg
jecxz
push
call
mov
mov
sbb
pop
repz
movs
sub
out
sti
ret
lock
rcr
icebp
(bad)
popa
mov
mov
jb
imul
dec
adc
inc
(bad)
cli
push
loop
inc
adc
cli
fst
lods
pop
xchg
push
cmp
(bad)
test
jns
hlt
jmp
or
fldcw
xchg
ficomp
cmp
popf
data16
dec
fsubrp
stc
jge
iret
test
adc
inc
adc
inc
push
stc
push
das
(bad)
lods
mov
movs
cmps
adc
lds
(bad)
es
outs
sub
mov
sub
je
mov
dec
add
xchg
jns
adc
mov
jbe
mov
dec
test
pop
(bad)
cld
aam
mov
addr16
xchg
lea
jns
jnp
movs
xchg
loop
pop
ror
sbb
jnp
jae
or
xchg
adc
int
test
lahf
retf
push
dec
add
retfw
lods
(bad)
cld
fnsave
or
mov
push
sahf
sar
lahf
je
sub
xchg
in
mov
jecxz
mov
dec
jmp
lock
les
jo
ins
mov
sbb
sub
pop
lods
push
test
int
mov
add
pushf
inc
cs
std
dec
add
and
xchg
int3
mov
pop
mov
ss
xchg
imul
dec
movs
jge
stos
mov
ins
cld
cld
and
inc
push
xor
in
lock
inc
push
inc
mov
and
ins
pop
dec
sbb
outs
fwait
xor
imul
(bad)
cmp
pop
inc
shl
add
mov
add
cli
cmp
jmp
pop
mov
rcl
xchg
mov
adc
dec
push
fadd
sbb
cmp
jne
lea
add
retf
(bad)
adc
add
dec
sbb
lods
imul
fist
or
mov
(bad)
stos
mov
out
xor
sbb
scas
shl
xchg
sbb
fist
inc
cs
loop
jp
les
movs
lock
and
(bad)
dec
and
xlat
add
mov
jb
inc
and
sbb
jecxz
rcl
mov
hlt
popa
cmp
sub
stos
mov
mov
jb
dec
shl
pop
dec
lods
pushf
shl
pop
jne
dec
iret
clc
inc
in
push
daa
lock
out
(bad)
mov
ins
mov
dec
pop
sahf
popa
dec
push
out
xor
mov
stos
loopne
ins
in
aas
jg
dec
outs
sbb
add
xor
push
arpl
mov
xchg
in
neg
bound
cmp
clc
xchg
inc
repnz
inc
outs
push
call
std
or
bound
lahf
dec
pop
popa
add
fidiv
lahf
and
jno
sbb
hlt
add
rcr
retf
mov
movs
add
mov
pushf
ds
ror
adc
test
mov
fdiv
mov
inc
fucomip
enter
xchg
bound
test
sbb
mov
push
fist
adc
ret
dec
mov
jb
sub
fucom
dec
ins
jns
nop
(bad)
mov
mov
cmp
es
lahf
pop
push
stc
xor
mov
(bad)
inc
lahf
pushf
les
rcr
iret
(bad)
scas
add
inc
inc
mov
iret
ss
and
ss
push
js
mov
leave
add
hlt
(bad)
sahf
fdiv
mov
sbb
out
and
ror
cmc
cwde
fmul
push
or
dec
cmp
shl
and
push
xor
ss
cmps
ja
in
arpl
movs
mov
scas
cmp
inc
outs
imul
add
push
push
pushf
popa
lahf
or
fadd
clc
push
adc
xchg
retf
(bad)
dec
pop
mov
retf
es
mov
fstp
outs
mov
xor
inc
pop
pop
test
ret
mov
in
out
gs
or
push
dec
inc
outs
ffree
(bad)
arpl
mov
pop
pop
xchg
cmp
js
repz
pushf
push
cmp
mov
mov
adc
mov
push
lahf
pop
shl
std
lea
inc
mov
pop
inc
xor
lahf
adc
and
(bad)
adc
loop
mov
sahf
out
push
(bad)
jmp
retf
(bad)
push
cmc
inc
nop
xchg
add
push
in
mov
xchg
test
and
pop
cwde
lea
imul
inc
sub
ret
adc
in
sahf
mov
cs
and
cwde
sti
(bad)
push
ja
inc
add
hlt
dec
je
xchg
aaa
dec
pop
xchg
add
sub
pusha
push
jg
cmps
jl
jge
into
cmp
sbb
xchg
xor
shl
inc
(bad)
lds
cmp
dec
mov
test
clc
test
imul
loope
sub
push
xchg
sti
inc
pop
cmc
and
mov
stos
sti
test
in
mov
xchg
and
(bad)
je
sub
dec
lods
es
or
fucomp
les
sbb
jg
ret
xchg
mov
pop
sbb
mov
in
ror
sub
out
loop
pop
pop
inc
ret
vrsqrtss
push
cmps
mov
push
sub
xor
mov
gs
lea
cs
(bad)
retf
hlt
popf
retf
sub
lahf
jge
adc
add
mov
dec
inc
call
or
add
and
dec
push
mov
mov
adc
jg
pop
cmps
outs
daa
and
loop
les
call
es
cmp
jmp
or
cmp
mov
cmps
shl
xchg
pop
fidiv
sbb
addr16
mov
ins
pop
jp
jg
cmp
call
mov
ret
mov
fnstenv
cmp
jmp
mov
cld
out
mov
les
dec
xchg
leave
mov
pop
jecxz
bound
hlt
mov
ja
cmp
ss
and
stc
mov
scas
adc
jmp
fist
or
or
arpl
ret
jmp
push
sahf
dec
out
xor
cmp
(bad)
(bad)
xor
jns
imul
leave
xchg
fwait
jg
stc
adc
sahf
pop
je
int
call
pop
fstp
(bad)
mul
cs
shl
xchg
inc
popa
stc
outs
mov
scas
jbe
pop
aaa
inc
push
add
aam
sbb
aas
outs
adc
mov
xchg
mov
fcom
cld
inc
mov
mov
jge
push
outs
pop
xor
shl
push
arpl
repz
ret
fld
push
out
enter
inc
jg
sub
mov
lds
not
(bad)
mov
fdivrp
ficom
mov
fwait
test
ret
(bad)
jmp
fdiv
in
pusha
imul
inc
xchg
jbe
repnz
lock
sbb
inc
fcmovnu
mov
pop
jl
iret
xor
add
pop
pusha
mov
sbb
fdiv
pop
ins
into
sub
push
cdq
test
out
fnsave
dec
(bad)
add
adc
xor
or
xor
adc
or
mov
xor
push
xor
sbb
je
push
in
fnsave
lods
xchg
xchg
and
ret
in
xchg
test
pop
sub
fstp
cmp
fidiv
pop
push
hlt
push
lock
xchg
retf
call
jge
push
jnp
inc
(bad)
fpatan
in
pop
push
jbe
rol
sbb
in
(bad)
ror
mov
jno
dec
mov
pop
fs
xchg
add
scas
sub
push
lods
out
cmc
out
cmps
movs
test
or
ja
ins
mov
push
sar
mov
pop
cmps
lods
clc
movs
mov
je
mov
enter
aaa
xchg
inc
push
je
inc
inc
mov
fs
out
retf
inc
xchg
or
or
xchg
hlt
sbb
ret
xor
and
int3
outs
(bad)
fucomip
push
(bad)
mov
imul
xchg
inc
jg
hlt
in
fstp
(bad)
jecxz
push
neg
jge
sub
mov
push
or
test
lods
add
pop
sub
mov
outs
mov
inc
(bad)
(bad)
push
dec
into
add
cmp
imul
mov
ja
fdivr
pop
sbb
div
lods
or
or
(bad)
(bad)
les
mov
cmc
es
ret
in
js
popa
xor
outs
dec
sbb
pop
sub
or
jg
dec
es
cwde
xor
mov
(bad)
fcom
test
aas
fmul
aam
pushf
popf
in
mov
sub
pop
(bad)
pop
call
bswap
pop
sbb
dec
sbb
xchg
dec
mov
mov
cmp
popf
cmp
jp
inc
vpmacssdd
push
bound
push
repz
jae
sub
and
adc
and
jb
adc
pusha
sub
push
mov
add
adc
pop
std
(bad)
adc
or
fistp
or
stc
daa
and
cdq
aas
adc
or
aas
shl
push
inc
sub
or
inc
fcmovu
pop
(bad)
sbb
cdq
cwde
mov
aaa
push
push
push
shl
nop
aam
sub
pop
ficom
mov
dec
imul
scas
add
cmp
loop
mov
inc
push
shl
(bad)
mov
add
add
mulps
test
dec
je
cwde
inc
jecxz
es
jmp
cmp
sbb
mov
popa
das
jns
push
rol
jle
bound
div
jno
test
arpl
add
mov
mov
or
fcmovbe
clc
sahf
cmp
cwde
sbb
or
mov
hlt
add
inc
hlt
cmps
xchg
mov
jne
push
aaa
jae
iret
stc
jbe
fidivr
stos
movs
es
retf
or
fsub
jo
fcmovnu
or
mov
stos
mov
test
or
sub
ss
mov
adc
bound
and
cmp
dec
cmp
mov
int3
xor
pop
jns
fidivr
jne
xchg
shl
xchg
xchg
and
jo
add
pop
arpl
jle
arpl
fcomp
ss
push
test
adc
repz
and
dec
aam
movs
rol
aad
lea
movs
jbe
jno
pushf
or
dec
mov
es
in
pop
dec
sti
xchg
and
mov
fimul
int3
(bad)
repz
shl
cmps
enter
cmp
mov
movs
and
mov
adc
rcl
int
mov
inc
push
into
xchg
xor
gs
in
pop
sub
jno
xor
push
push
cli
push
mov
mov
mul
xor
addr16
lahf
pop
xchg
sub
cs
imul
imul
sbb
inc
and
add
ret
out
sahf
(bad)
mov
inc
jns
sbb
jno
mov
and
mov
jbe
enter
mov
ficom
les
lea
push
cmp
out
popf
call
cld
add
sbb
jle
pop
movs
adc
adc
sbb
xchg
out
out
mov
pop
inc
clc
mov
fucomip
(bad)
repz
inc
or
jnp
test
adc
mov
mov
xchg
inc
sbb
dec
add
pop
imul
cwde
sbb
jae
test
mov
mov
adc
xor
hlt
jo
pop
inc
test
xor
outs
cmp
adc
or
cmp
cmc
or
mov
js
add
arpl
xchg
pop
add
add
sbb
jge
push
out
(bad)
js
jp
push
fisubr
shl
movs
(bad)
xchg
mov
shl
movs
aaa
cld
push
sbb
and
pop
ret
scas
adc
push
mov
daa
pop
mov
or
mov
push
xor
mov
jns
push
icebp
jnp
cmp
adc
ret
dec
inc
cli
data16
mov
xchg
add
mov
test
in
das
mov
pop
sub
imul
lods
pusha
xor
inc
xchg
int3
into
sbb
inc
call
js
adc
mov
push
push
out
daa
pop
repnz
ins
pop
inc
loope
out
jbe
in
call
cmp
ins
mov
sahf
push
loope
adc
icebp
adc
pop
dec
cdq
push
mov
add
jb
add
mov
repnz
mul
ror
push
sub
dec
repz
cmp
adc
xor
dec
mov
push
jo
cmp
ins
push
in
sbb
fwait
and
scas
cmps
daa
call
jae
jns
movs
(bad)
mov
sbb
clc
cmp
fdiv
lahf
and
shr
pop
or
popf
ins
dec
scas
or
sbb
xor
mov
fwait
js
mov
movs
inc
mov
mov
mov
jns
jle
cmp
std
push
ja
dec
hlt
aaa
sti
jmp
cmp
jae
fstp
or
mov
shr
dec
out
(bad)
out
fdiv
retf
ds
mov
(bad)
imul
clc
sbb
xor
mov
std
jl
jb
mov
fist
inc
(bad)
cmp
jp
xchg
pop
xchg
aas
xchg
cmps
dec
mov
jmp
mov
xor
and
mov
mov
test
ret
rol
stc
cs
call
ret
sub
sti
xor
sub
sbb
scas
fsub
jmp
xchg
pop
fwait
mov
cdq
fisubr
test
mov
stc
cmp
sub
bound
and
xchg
push
push
jb
mov
bound
push
cmp
sbb
(bad)
cli
jecxz
mov
pop
push
out
mov
dec
cmp
cli
daa
lea
cs
mov
out
cdq
repnz
xor
out
rcl
push
pop
aam
cmp
aas
retf
jnp
adc
xor
(bad)
cli
adc
push
out
sub
es
sbb
jne
daa
popa
push
hlt
xor
shl
push
or
cmps
jg
or
xor
nop
mov
jb
clc
cmp
push
pop
sub
in
or
arpl
dec
in
xchg
jbe
cmp
cmp
sub
xchg
retf
imul
nop
ds
in
dec
repnz
call
sbb
rol
xor
add
loope
aaa
fbstp
not
inc
mov
mov
add
dec
or
call
daa
mov
inc
in
xchg
xchg
fiadd
adc
call
mov
imul
mov
inc
cmp
call
and
lahf
cmps
mov
adc
or
loop
xor
xor
add
lea
xor
jo
scas
push
addr16
xchg
test
mov
push
fs
mov
pop
rcr
stos
sub
mov
js
ret
xor
mov
and
sub
cmc
or
cdq
mov
shl
xchg
mov
or
std
inc
push
or
mov
push
fwait
jo
dec
push
jge
fsubr
aad
adc
bound
lock
mov
add
or
inc
add
data16
sbb
test
mov
rcr
or
push
test
in
mov
fimul
into
or
push
in
pop
sbb
xchg
xchg
repz
or
test
sbb
jcxz
ins
pop
mov
je
pop
into
into
xor
adc
test
sub
inc
jecxz
leave
xchg
adc
call
in
scas
xchg
stos
and
(bad)
out
jmp
ds
and
lods
fistp
xlat
(bad)
call
leave
mov
sbb
into
sub
add
test
mov
jp
mov
rol
sbb
movs
sub
sub
sub
mov
scas
inc
pop
je
inc
xchg
sbb
cmps
into
mov
jmp
jnp
fstp
shl
call
cli
addr16
dec
mov
mov
retf
pop
xor
popf
pop
xor
sub
pop
arpl
jle
lea
xchg
leave
sub
test
mov
xchg
loop
push
xchg
inc
(bad)
xor
jne
push
std
std
hlt
lds
add
test
mov
cdq
inc
inc
pop
fnsave
pop
mov
add
jns
mov
movs
dec
jno
arpl
daa
sub
xchg
xlat
jno
aam
mov
int
mov
in
dec
jb
mov
jmp
pop
mov
cwde
xchg
dec
popa
xor
les
pushf
sbb
mov
lods
jmp
in
jbe
in
call
imul
ret
addr16
int
fdivr
xlat
dec
or
sbb
xchg
into
test
jne
add
xchg
out
xchg
or
sbb
lock
adc
xlat
jp
test
mov
mov
movs
shl
(bad)
(bad)
push
xor
xchg
mov
ret
popw
jae
sbb
inc
xor
and
adc
rol
aaa
test
sbb
pop
lahf
lock
xor
push
aaa
(bad)
adc
sar
pop
adc
jecxz
(bad)
mov
inc
mov
out
retf
dec
xchg
or
dec
jge
dec
test
xchg
inc
jns
jns
fld
pop
xor
fstp
mov
mov
cli
mov
inc
jne
lahf
outs
mov
jmp
(bad)
xchg
pop
inc
fisub
ins
push
jns
mov
das
jmp
fcom
or
into
loope
push
mov
mov
push
sub
ins
push
mov
ins
test
popa
xor
adc
inc
mov
dec
dec
test
mov
push
das
adc
jmp
and
fnstsw
pushf
push
fcomi
cmp
imul
nop
jl
mov
sbb
xor
xlat
bound
mov
cmp
cmps
aam
push
xor
add
jmp
div
fstp
push
pop
and
xor
call
or
in
out
lods
in
sub
std
pop
fmul
cmp
xchg
cmp
sbb
jae
xchg
mov
mov
ss
jle
loop
clc
aam
and
retf
adc
ret
push
or
ret
dec
test
aam
push
xor
idiv
aaa
or
cs
sub
xor
imul
or
cmp
inc
cmp
mov
ins
sbb
fisub
xchg
xor
in
mov
shr
xchg
sar
adc
dec
pop
mov
dec
mov
lods
push
push
lods
dec
fsub
fwait
dec
xchg
ret
push
(bad)
fsub
or
mov
mov
xchg
lahf
sbb
enter
sar
in
pop
sub
dec
mov
pushf
stc
dec
out
push
imul
into
add
sbb
sub
xor
arpl
pop
fdivr
out
mov
les
fmul
and
dec
lahf
jbe
sar
out
sbb
bound
add
mov
enter
(bad)
jmp
mov
dec
mov
jl
scas
xlat
add
jae
push
cmps
rol
shl
mov
scas
pop
add
enter
add
add
add
and
sub
jmp
sub
sub
aaa
pop
lods
pop
and
sbb
dec
dec
out
test
out
cmp
pop
in
mov
(bad)
fisub
jge
std
xchg
push
(bad)
push
jge
jp
int
sbb
ret
inc
shr
or
or
imul
sahf
cmps
cmps
sbb
jb
js
mul
mov
lods
sub
fwait
adc
lods
mov
int3
dec
pusha
lock
lods
inc
mov
cmp
push
loopne
push
imul
cmp
shl
xor
fbld
push
pop
mov
inc
mov
xlat
inc
in
and
clc
or
or
jo
cmps
std
pop
dec
(bad)
rol
jg
mov
jl
adc
cmps
loop
outs
sbb
or
sub
lods
sub
les
je
mov
les
adc
dec
mov
cld
fsubr
arpl
idiv
outs
xor
dec
pushf
sbb
jmp
ds
sti
sahf
call
dec
jo
es
pop
or
xor
or
scas
int
jle
mov
mov
xor
add
pushf
mov
rcr
adc
or
push
xchg
inc
out
push
xor
xor
addr16
add
test
ret
repnz
hlt
(bad)
sti
add
cli
xchg
inc
imul
sbb
xchg
inc
cdq
movs
lahf
hlt
test
jo
adc
or
jns
push
xor
imul
mov
adc
cmp
or
push
out
dec
push
pop
dec
test
mov
jmp
mov
cdq
jb
xchg
int3
jns
or
imul
cdq
(bad)
fisttp
xchg
cld
sub
push
mov
add
pop
sub
or
(bad)
and
add
fcomp
push
mov
add
retf
pop
sbb
ror
(bad)
sbb
ds
add
cmp
popf
into
in
dec
inc
mov
push
mov
daa
push
inc
dec
sbb
scas
mov
stos
xchg
push
daa
jp
add
dec
les
and
mov
cmc
fisub
sbb
xchg
xlat
push
pop
je
pop
add
out
arpl
dec
ss
cmp
ja
mov
scas
test
pop
scas
call
push
fmul
fsubr
cmp
jbe
pop
arpl
inc
stc
add
inc
adc
mov
pop
fcomi
inc
mov
and
test
les
(bad)
and
fadd
sub
cli
ret
mov
dec
jecxz
(bad)
pop
stc
(bad)
lahf
push
movs
out
stos
repnz
ret
cli
retf
mov
sub
push
add
fistp
mov
and
or
or
bsf
outs
or
cmps
fcomi
jmp
daa
arpl
dec
fiadd
mov
in
or
(bad)
mov
sbb
data16
or
and
adc
retf
outs
(bad)
stos
ror
cli
(bad)
sub
mov
loopne
test
cmps
adc
xchg
xor
push
imul
retf
lea
xor
xor
or
push
ja
mov
stos
iret
pop
shl
add
mov
data16
sbb
sbb
jg
gs
mov
movs
cwde
rcr
xor
sub
(bad)
xor
popf
lea
inc
cmp
cdq
mov
dec
aad
scas
sub
jl
(bad)
gs
(bad)
enter
xchg
xchg
rcl
mov
push
jb
xchg
mov
test
iret
sbb
nop
and
int
std
in
and
lahf
ret
mov
shl
rcl
jnp
mov
xchg
pshufw
jmp
mov
lds
mov
(bad)
stc
in
adc
pop
sbb
out
inc
xchg
cwde
jne
ss
xchg
lds
dec
dec
or
fnstsw
xchg
icebp
dec
arpl
aad
out
xchg
rol
inc
aad
mov
xchg
(bad)
daa
push
sub
inc
xor
xchg
dec
cs
xlat
inc
xor
inc
icebp
ret
add
(bad)
mov
push
sub
leave
lods
dec
mov
or
dec
jp
jne
xor
mov
pop
sbb
xchg
ja
jle
sbb
or
pop
dec
pop
popf
inc
es
das
jmp
daa
jbe
(bad)
ins
mov
fldcw
push
xchg
cld
cmovnp
inc
jbe
and
stos
aam
sbb
jle
sbb
xchg
das
add
rcr
adc
rol
xchg
outs
outs
(bad)
mov
cwde
dec
cmps
hlt
stos
sub
xor
inc
dec
xchg
scas
mov
cmp
stos
aas
push
jge
out
arpl
or
mov
or
sbb
adc
adc
jle
and
shl
jno
icebp
das
popa
mov
mov
or
xor
pop
call
and
push
jl
add
push
jnp
xor
imul
mov
xchg
jnp
cmp
dec
inc
inc
push
fst
sbb
out
dec
out
popf
hlt
mov
add
push
fcmovbe
fstp
stc
daa
push
das
outs
adc
and
(bad)
(bad)
xor
add
xor
sbb
push
or
push
adc
jp
fcomp
in
test
fdiv
jl
jl
pop
rcr
clc
call
outs
pop
repnz
xchg
xchg
ret
jge
xchg
fidiv
inc
adc
les
cld
pop
sbb
cmps
sub
jb
pop
add
dec
ja
mov
push
mov
(bad)
mov
outs
pop
lock
test
int3
mov
mov
jbe
or
inc
sub
adc
adc
ficomp
dec
push
jo
pushf
pop
dec
cld
cs
dec
push
jne
aaa
fsubr
int3
mov
clc
icebp
adc
add
cmp
mov
das
jb
mov
xor
outs
xor
fisubr
fsubr
shl
or
ins
leave
pushf
ficomp
retf
jmp
push
mov
mov
out
and
gs
(bad)
bnd
mov
clc
xor
push
dec
cmp
test
jmp
sbb
stos
mov
jb
adc
ret
je
sbb
scas
stos
pop
pushf
adc
pop
arpl
fdiv
mov
or
adc
dec
fdivr
lds
popf
pop
imul
jbe
cmp
add
sub
mov
cdq
gs
test
xor
(bad)
push
jbe
scas
adc
mov
cmp
outs
ficomp
fld
std
popa
mov
imul
push
test
mov
pop
inc
ins
ins
nop
jnp
xor
outs
aam
mov
mov
mov
jp
loop
inc
pop
xchg
dec
mov
xlat
jle
xor
fistp
dec
es
mov
js
mov
les
out
pop
ds
ins
shr
inc
mov
sub
int
mov
ficomp
push
jo
sti
cs
dec
xchg
sahf
pop
fucomi
jmp
inc
dec
mov
clc
mov
jl
xor
cmp
js
pop
int
dec
or
xor
add
jl
mov
(bad)
les
push
dec
movs
pop
dec
mov
cmp
push
jg
or
leave
xchg
loopne
inc
rcl
fidiv
dec
out
lods
mov
and
mov
dec
jl
std
dec
push
jp
add
in
xchg
lods
cmps
push
pop
adc
mov
outs
das
lahf
xor
adc
pop
nop
push
fsub
and
lods
mov
mov
jl
leave
xlat
mov
mov
loop
fs
pop
lea
stos
shr
inc
mov
popf
xchg
jmp
sbb
aam
sar
fdiv
imul
fwait
mov
add
int3
sar
(bad)
mov
push
cli
push
(bad)
fld
icebp
xchg
scas
das
cld
(bad)
out
inc
into
jp
out
cld
xor
xor
inc
lods
clc
and
xchg
mov
stos
mov
mov
aaa
pop
push
mov
icebp
push
inc
fsub
adc
in
inc
cmp
cdq
stc
jo
nop
fnstcw
adc
scas
pop
pop
test
push
aad
mov
push
imul
loop
and
call
lods
dec
fistp
loopne
rcr
dec
add
lahf
jle
cmp
sete
push
xor
lea
adc
cli
sbb
mov
push
push
scas
jb
addr16
es
clc
mov
call
idiv
int3
rcr
rcr
mov
nop
or
jmp
shl
cld
ficom
mov
das
addr16
add
ror
ja
ret
aam
sub
in
inc
jno
pop
sub
mov
cwde
popf
mov
imul
fist
lea
jae
xchg
cli
xchg
sub
aad
sub
addr16
push
retf
or
xor
dec
dec
fs
add
adc
inc
lea
retf
imul
dec
xlat
aam
or
push
loopne
arpl
sahf
mov
add
jecxz
sbb
or
mov
adc
add
clc
out
mov
es
sub
jbe
adc
iret
scas
cmp
icebp
cs
mov
adc
movs
ds
dec
sub
js
call
(bad)
xor
push
mov
outs
loope
mov
es
pop
sbb
mov
push
xor
aas
(bad)
pop
cmps
dec
push
add
in
(bad)
mul
repz
xchg
imul
sub
adc
xchg
sub
rcr
sahf
jb
int
dec
mov
sub
xchg
test
adc
(bad)
lods
mov
std
test
add
int
mov
scas
enter
xchg
inc
or
arpl
cmp
int
in
fistp
retf
enter
jo
sbb
dec
mov
gs
pop
add
js
call
loope
pop
jmp
test
inc
out
ss
call
retf
out
cmp
push
lock
cmp
jo
mov
les
scas
test
mov
js
pop
and
push
rol
out
jno
or
sub
and
mov
add
aam
into
mov
adc
jp
jecxz
leave
mov
outs
les
jbe
sub
adc
fwait
or
mov
push
jbe
xchg
pop
jecxz
mov
js
lods
inc
mov
xor
mov
imul
pop
lods
xor
inc
(bad)
out
fwait
adc
jbe
sbb
sbb
adc
fstp
xor
inc
ja
test
mov
inc
adc
sub
imul
pop
lock
push
fdivr
daa
ss
(bad)
xchg
jnp
out
repz
je
dec
sbb
sbb
or
and
in
adc
imul
jl
add
pop
imul
jle
and
daa
push
in
cmp
push
pop
sub
push
pop
mov
jl
jb
mov
mov
sbb
adc
cdq
add
xchg
cld
leave
adc
xor
adc
test
or
or
imul
mov
mov
outs
cdq
jb
jecxz
sar
cli
leave
cmp
cmp
jecxz
xor
enter
test
ret
cmp
hlt
push
xor
(bad)
mov
xchg
pop
jbe
pop
inc
inc
std
sbb
cwde
shr
and
inc
jne
fadd
cmp
dec
das
mov
inc
mov
push
sbb
dec
pusha
xor
xchg
mov
imul
cmp
sahf
js
sbb
cdq
mov
cmc
mov
lahf
add
aam
retf
or
add
inc
ss
imul
dec
push
shl
push
pop
add
mov
add
sahf
mov
aad
aas
fisttp
or
gs
jne
push
and
aaa
xchg
jnp
dec
jg
out
mov
out
inc
push
pop
aaa
retf
into
repz
leave
(bad)
retf
fwait
jle
cmp
xchg
fild
pusha
sub
dec
xchg
into
mov
push
jb
movs
sbb
aam
mov
cmc
pop
daa
add
xchg
aaa
lea
sub
inc
test
outs
jne
sub
sti
pop
jo
loope
(bad)
in
push
into
mov
mov
fxch
cmp
leave
push
scas
stc
inc
lds
or
jecxz
pop
dec
push
or
xor
int3
into
mov
outs
and
aas
shr
jecxz
dec
adc
neg
test
add
loopne
addr16
clc
fs
pop
jne
or
fwait
mov
inc
jle
adc
dec
scas
pusha
push
sub
pop
sti
mov
bound
mov
fwait
into
sub
mov
and
cmpxchg
ror
addr16
inc
outs
in
push
(bad)
aad
sub
std
ret
stos
lock
rcr
jbe
cmp
xchg
retf
xor
mov
stc
xlat
int
mov
mov
jno
js
test
push
sbb
enter
xchg
mov
fadd
mov
push
cmp
jno
xor
ret
mov
rol
cli
push
dec
mov
int
leave
cmp
(bad)
push
and
push
sahf
mov
xchg
(bad)
mov
add
xchg
push
and
and
add
loope
mov
mov
xchg
xor
out
iret
call
loope
adc
ror
xchg
jmp
leave
pop
bound
sub
aam
xchg
add
movs
add
stos
daa
test
ss
cmc
loope
inc
or
std
mov
pop
movs
out
add
lahf
(bad)
push
jg
mov
ret
pushf
or
lods
mov
stc
jae
loope
cdq
or
push
and
xchg
adc
inc
cmp
gs
bound
sahf
sub
adc
adc
test
rcr
sbb
jecxz
and
xchg
movs
fsub
scas
stos
add
loope
int
jecxz
adc
js
rcl
ja
sahf
pushf
or
pop
or
call
adc
sub
ins
xchg
das
enter
(bad)
sbb
cmp
std
imul
aaa
xor
sub
dec
cli
aam
imul
pop
cmp
ja
sbb
jb
mov
pop
stos
adc
adc
xchg
xchg
push
inc
jnp
mov
xchg
push
shl
std
in
fisub
xchg
sar
push
test
sub
xchg
mov
aad
sub
pop
dec
aas
pop
mov
(bad)
mov
pop
inc
in
addr16
cld
cli
push
mov
push
inc
adc
xor
or
lock
jmp
gs
lods
mov
loopne
(bad)
enter
dec
(bad)
jmp
inc
lahf
mov
xor
frstor
inc
imul
mov
cmps
xchg
rcl
cmp
mov
in
jp
or
in
pop
jne
inc
push
out
stos
into
sbb
and
push
rcr
mov
ret
retf
sbb
xlat
xchg
dec
dec
mov
pop
daa
pushf
mov
test
cdq
cld
pop
inc
test
push
fstp
xor
jne
sub
dec
mov
lods
cmp
push
mov
sub
pop
fadd
(bad)
jbe
outs
cmp
xchg
dec
cmp
pusha
jge
adc
cmps
shr
or
pop
mov
pop
icebp
inc
fdivr
cmp
inc
cmps
mov
lods
push
sub
pop
dec
ror
xchg
leave
ins
mov
pop
push
push
mov
sub
js
fdivr
lock
adc
iret
out
inc
in
test
xor
xchg
sub
mov
data16
xchg
jl
aaa
fld
sub
cmp
mov
mov
mov
and
retf
cmp
lods
mov
cmp
test
shl
inc
xor
cs
aas
mov
loop
lahf
lods
jl
hlt
add
hlt
test
aam
scas
and
cmp
push
sub
xchg
fcomp
lahf
pushf
pop
pop
repz
add
add
out
cwde
fdivr
repnz
push
enter
inc
sbb
dec
je
jle
aam
out
xchg
fadd
mov
rcl
mov
imul
xchg
pop
daa
daa
hlt
inc
js
jae
add
and
in
clc
dec
es
daa
(bad)
push
xor
gs
jnp
sub
mov
push
shl
test
dec
mul
cmps
in
mov
dec
pop
ret
aas
pop
jp
sahf
mov
div
je
out
push
clc
cmc
pop
pusha
pushf
cmp
cwde
jg
ja
shl
and
push
xor
add
ins
fwait
mov
popf
adc
pop
int
jne
sar
call
jne
jnp
sahf
pop
shr
push
icebp
and
ss
and
xchg
dec
adc
xchg
adc
shl
jo
imul
imul
enter
pop
cmp
jl
sbb
add
sub
outs
and
clc
in
cwde
sar
cmp
lods
cld
jbe
scas
js
out
movs
mov
mov
dec
stc
adc
jl
mov
scas
fs
ror
pop
and
mov
sub
add
mov
mov
dec
mov
xor
jecxz
xchg
call
pop
out
es
mov
loope
into
push
in
push
sbb
dec
je
out
adc
fldenv
push
jmp
fcomp
cvtps2pi
mov
sbb
mov
shl
imul
push
popa
xchg
in
sub
rol
push
adc
pop
xor
mov
adc
shl
dec
in
dec
(bad)
in
jg
(bad)
mov
inc
sbb
(bad)
lock
push
xor
add
test
aam
and
test
popf
push
add
daa
or
add
imul
xchg
or
cld
sub
ret
pop
mov
sub
(bad)
in
adc
jns
xchg
(bad)
mov
and
je
sub
add
sub
es
out
add
push
pushf
call
xor
sti
xor
jo
jb
or
and
and
ret
sahf
fisttp
daa
pop
pop
or
(bad)
xor
icebp
jne
mov
dec
mov
shr
xchg
out
loopne
std
test
loopne
fpatan
fild
add
stc
cld
cmp
out
pop
jmp
mov
mov
jle
(bad)
jo
int3
(bad)
das
xor
out
fs
icebp
data16
mov
out
push
mov
mov
cmp
ins
cmp
ss
cld
jnp
xchg
push
sub
pminsw
mov
and
out
sbb
and
jo
shr
pop
xor
outs
fisubr
jbe
mov
or
sub
std
jno
in
jmp
add
(bad)
xchg
nop
jecxz
cmps
xor
fistp
stos
ins
adc
jae
lods
mov
sbb
leave
fadd
in
test
mov
pushf
stos
sbb
aam
sub
or
sbb
xor
das
dec
cwde
dec
(bad)
adc
push
sbb
jge
ins
add
adc
out
dec
jmp
sbb
rcr
jmp
retf
mov
call
add
xor
jecxz
sahf
je
mov
add
jecxz
or
popf
sbb
test
pop
aad
dec
test
(bad)
add
mov
mov
(bad)
int3
ret
and
sar
cs
int3
outs
fild
dec
push
popa
or
xchg
cmp
cld
inc
cmp
pop
cmp
jge
cwde
adc
sti
sbb
cwde
jmp
cld
stc
mov
sub
push
gs
mov
mov
adc
mov
add
mov
stos
outs
or
sbb
jb
mov
lods
pop
ficom
mul
out
push
inc
je
call
movaps
dec
in
push
cmps
sub
in
xlat
ret
jns
retf
outs
in
fmulp
xor
loope
inc
pop
or
out
push
fild
jo
mov
lods
mov
mov
push
pop
adc
cld
aas
push
jb
std
(bad)
test
adc
mov
xchg
pop
mul
cld
lods
pop
pop
mov
mov
jne
and
push
lock
icebp
mov
je
int3
or
cmp
scas
repnz
or
xor
mov
push
fst
aas
clc
push
imul
cdq
retf
lods
clc
cmps
mov
idiv
test
mov
mov
add
pop
stos
sti
xor
pop
jno
fld
in
pop
popf
add
pop
fbld
push
xor
int3
add
pop
aaa
jmp
sbb
xchg
sub
push
adc
cmp
and
(bad)
and
jne
cmp
gs
lahf
lds
or
jecxz
push
fwait
and
push
loope
push
ja
shl
cmp
retf
sub
sar
xchg
repz
jmp
mov
pop
mov
push
xchg
xlat
lods
shl
xchg
aad
cmps
push
jmp
mov
in
popa
dec
push
or
ror
bound
shl
pop
test
jnp
jb
ret
dec
and
xchg
fdiv
mov
jp
or
pop
push
imul
pop
dec
inc
in
pop
or
retf
popa
bound
fsub
lock
sub
aam
xor
or
sub
stc
pop
dec
inc
call
xchg
add
mov
pusha
add
dec
fs
dec
test
fld
pop
push
ss
xor
sbb
and
into
mov
inc
in
es
lahf
in
ins
jle
mov
js
in
pop
setp
lods
adc
pop
fidivr
out
push
cmps
sbb
scas
mov
xchg
adc
adc
mov
jge
pop
cmp
pop
movs
jp
adc
xchg
xchg
adc
rcl
inc
sub
ins
ja
scas
lods
test
psadbw
cmp
or
js
in
stc
sar
repz
or
pop
repnz
(bad)
ret
xor
cmp
adc
cld
mov
and
aad
outs
adc
mov
push
mov
push
add
inc
fcom
je
out
retf
cmp
dec
out
xchg
inc
mov
jae
pop
dec
enter
jmp
cdq
adc
mov
ror
xchg
popa
fstp
jmp
mov
fiadd
(bad)
fidivr
fsubr
and
arpl
pop
mov
jb
fsubr
dec
xchg
frstor
dec
push
retf
jmp
out
cwde
pop
(bad)
mov
scas
daa
call
das
test
cmp
mov
ins
adc
shl
add
ret
fs
add
mov
(bad)
stos
imul
lock
dec
(bad)
int
jns
pop
pop
ror
sub
hlt
inc
test
sub
fwait
in
mov
push
sar
mov
pushf
xlat
inc
outs
or
or
xor
mov
idiv
ins
sbb
mov
cmc
imul
jne
jg
daa
cmp
fst
jnp
push
enter
ins
scas
stos
inc
jmp
jne
push
in
jle
xlat
pop
or
lds
add
test
jnp
and
ss
popf
out
pop
mov
out
dec
mov
ja
leave
sbb
rcr
and
adc
xchg
pop
enter
mov
mov
stos
inc
stos
(bad)
cmp
fwait
sti
pop
aad
popa
loopne
or
mov
pop
xor
xor
mov
fisubr
ficom
jge
lds
add
push
jp
xchg
test
mov
in
mov
ins
fs
repz
test
aad
int3
xor
shr
ret
std
mov
cwde
ficom
sub
inc
push
sub
lock
xlat
pop
jp
into
cmp
test
mov
out
(bad)
sbb
xchg
push
sub
mov
arpl
stc
xchg
mov
sub
adc
std
mov
sbb
hlt
div
xor
dec
push
fmul
mov
ret
js
jmp
pop
ds
add
or
mov
and
xor
(bad)
aad
dec
adc
sbb
adc
xchg
xchg
frstor
pop
cmps
pop
push
dec
mov
rol
sub
push
into
ss
push
pusha
jb
stos
imul
scas
sbb
or
imul
push
(bad)
jns
jnp
aam
stc
adc
pop
xor
lock
cwde
or
pushf
(bad)
pop
dec
jno
jle
cmp
sub
cli
sbb
fcmovu
fmul
int
and
pop
dec
sbb
fmul
cli
mov
xor
lods
ins
mov
and
mov
pop
es
lds
js
pop
push
ds
jge
adc
test
int3
lods
enter
inc
mov
int
push
jne
push
int3
lock
push
mov
movs
stc
push
in
add
or
aam
out
out
ror
mov
in
test
iret
(bad)
xor
push
add
cmp
pop
and
js
pop
and
call
mov
clc
imul
pushf
jae
mov
jns
inc
push
dec
jmp
movs
pop
nop
inc
cmps
out
mov
inc
iret
pop
rol
into
popf
adc
jae
ret
cmps
cmps
xchg
call
adc
jecxz
add
jl
mov
lea
retf
(bad)
shl
pop
mov
stos
loopne
(bad)
pop
and
xor
xchg
(bad)
retf
fistp
xchg
cdq
aas
stos
rol
daa
cmc
retf
push
sub
cmp
mov
push
jns
pop
and
lods
cmp
adc
gs
add
cmp
imul
ins
cmp
retf
jle
jmp
lods
jnp
ja
mov
int3
sbb
sbb
fldenv
lods
je
push
xor
jg
mov
add
outs
mov
leave
lods
jo
push
out
add
out
jne
mov
loop
jb
mov
ffree
pcmpgtb
jmp
or
fsub
pop
xor
and
mov
loopne
shr
inc
sbb
int
xchg
push
out
cdq
lods
setae
mov
fstp
(bad)
cmps
or
and
dec
dec
mov
pusha
jmp
int3
xor
jbe
mov
daa
rol
(bad)
shl
jge
iret
nop
mov
ss
out
cmp
dec
sub
jne
mov
mov
(bad)
mov
les
lahf
jle
xchg
div
xor
jecxz
and
fwait
xchg
xchg
(bad)
call
in
pusha
push
jl
mov
jmp
xchg
mov
sbb
add
mov
add
dec
addr16
out
outs
pushf
aad
test
mov
lods
cmc
inc
retf
das
lock
aam
daa
dec
xor
pop
push
mov
out
and
scas
or
add
lods
loopne
mov
add
cmp
gs
mov
sti
ins
xchg
out
jne
add
int3
out
xlat
and
daa
inc
int3
sbb
dec
cmps
retf
dec
out
repnz
xlat
jno
and
push
mov
ss
iret
retf
inc
pop
lods
repnz
and
mov
fsub
test
and
mov
sub
push
cmps
and
mov
or
and
cmps
mov
cmps
sahf
push
lods
sahf
adc
test
fldcw
popa
xor
daa
mov
xchg
jl
fst
pop
gs
add
movs
cdq
dec
pop
push
ins
outs
mov
jg
dec
or
mov
call
and
repnz
xchg
mov
or
adc
sub
pop
mov
jecxz
sub
and
daa
mov
scas
clc
cmp
into
pushf
hlt
stos
push
retf
call
adc
out
call
xor
test
mov
into
cli
lock
fnstenv
or
test
pop
fiadd
cmps
inc
gs
repz
fld
xor
fist
call
dec
xchg
(bad)
push
mov
mov
rol
test
adc
jo
pop
(bad)
xlat
adc
sti
retf
pop
push
mov
test
sub
jb
mov
pop
stos
mul
jg
push
loope
aas
pusha
aas
add
out
sahf
cld
call
fild
add
cmp
lods
mov
stos
mov
stos
(bad)
jns
out
ret
push
les
sar
add
push
and
fadd
(bad)
or
stos
les
popa
add
jns
loope
fsubr
inc
retf
fidiv
inc
pop
jmp
sahf
addr16
push
nop
mov
cmps
das
xchg
int3
pop
add
pop
(bad)
lea
call
sub
xor
fwait
mov
push
sbb
movs
outs
pop
popa
scas
pop
mov
adc
ror
xchg
jb
ss
cmp
(bad)
cld
test
lahf
stos
in
cmc
ret
sbb
repnz
sub
xchg
push
rol
or
mov
rcr
mov
sub
dec
cmp
adc
bound
js
cmp
rcr
mov
ds
mov
xor
mov
adc
pop
lea
push
out
bound
mov
mov
aad
adc
cmps
fadd
cmp
repz
mov
jecxz
push
or
and
xor
sub
sahf
or
inc
sti
adc
out
das
stos
outs
out
addr16
loope
sbb
sub
push
cmps
xchg
mov
jg
popf
fstp
mov
add
loop
fist
icebp
test
call
xor
xor
icebp
fdiv
mov
sti
ror
repz
out
pop
iret
jnp
sbb
aas
dec
js
mov
test
sar
jne
and
call
fisubr
inc
enter
out
sub
pop
xor
xchg
and
(bad)
pushf
jecxz
adc
mov
sbb
cld
repnz
jno
sub
aam
mov
fsub
adc
imul
mov
mov
fucomip
jb
mov
mov
jbe
push
mov
xor
push
aaa
sub
fisub
sub
leave
xor
mov
push
or
call
fisubr
jbe
addr16
stos
nop
arpl
enter
fidiv
js
in
mov
fnstcw
jno
adc
mov
jbe
loopne
dec
rol
mov
cmp
push
movs
leave
xlat
pop
cmps
sbb
ror
xchg
jbe
cdq
mov
or
sub
jb
push
pushf
sub
retf
jmp
ja
dec
pop
imul
ins
sub
fisub
int
arpl
mov
out
inc
add
push
test
xor
gs
sbb
push
in
(bad)
dec
test
das
push
pop
(bad)
fld
and
or
and
fwait
and
and
pusha
mov
push
mov
xor
dec
dec
adc
lods
std
pop
aaa
mov
or
mov
loopne
add
cmp
adc
push
inc
sahf
adc
xchg
andps
ret
mov
mov
les
clc
jnp
push
push
mul
sub
inc
jl
sub
fistp
pop
aam
sub
push
fisttp
in
mov
and
or
xor
dec
pop
jecxz
enter
inc
sbb
push
shr
aas
or
leave
and
mov
hlt
(bad)
sbb
or
xor
inc
arpl
jg
mov
sub
sti
or
pop
add
cmps
jl
ins
mov
push
(bad)
xor
in
(bad)
outs
or
pop
push
mov
cmp
add
(bad)
sbb
mov
loopne
les
sub
in
fisub
(bad)
and
dec
sub
sub
jb
xchg
adc
js
not
and
gs
jg
pushf
pop
cdq
iret
add
inc
lock
popa
jge
out
scas
popa
or
lock
stc
leave
mov
add
movs
inc
mov
std
inc
stos
repnz
mov
enter
or
adc
in
jns
or
mov
retf
xor
cmps
jne
sbb
cmps
mov
push
or
xor
ficom
push
(bad)
lods
jmp
fcom
xchg
fldenv
aad
xchg
sub
cmps
mov
cs
mov
in
dec
dec
repz
sub
xor
test
std
lahf
push
js
mov
adc
mov
jg
ror
outs
xor
loop
mov
jno
push
(bad)
push
xchg
mov
in
test
pusha
mov
ja
mov
jno
and
jl
push
push
popa
stc
pop
sub
cli
sti
push
push
mov
fimul
pop
sub
or
imul
in
cmp
adc
aas
je
rol
daa
xchg
mov
shr
mov
jmp
loop
mov
rcr
pop
jbe
jecxz
jge
push
mov
sbb
fwait
cdq
hlt
pop
pop
jle
xchg
xchg
cmp
(bad)
adc
retf
jg
das
sar
add
jae
ret
test
es
mov
pop
pop
(bad)
arpl
sbb
cmp
sbb
in
xchg
loop
mov
addr16
jns
add
pop
movs
inc
xchg
enter
mov
xor
je
stos
and
and
stc
movs
push
in
mov
push
ret
out
jge
movs
inc
neg
jnp
sbb
mov
ror
jecxz
push
mov
mov
adc
xor
sub
in
fwait
in
push
lds
xor
sbb
rol
dec
inc
das
test
jge
mov
loopne
push
push
das
fcomp
neg
cmp
inc
dec
jmp
xor
sub
cmp
(bad)
(bad)
in
mov
aaa
retf
push
in
push
movs
loopne
(bad)
icebp
xchg
pop
mov
aam
psrlq
imul
or
xchg
out
ins
push
cmp
xor
xchg
fidiv
mov
push
sbb
js
in
stos
fs
aas
xchg
sbb
inc
push
push
sub
jmp
jbe
pushf
dec
ror
(bad)
xor
jns
xchg
jmp
jmp
repnz
mov
push
sti
xor
sbb
int3
mov
fcomp
mov
test
dec
cmp
mov
cmovo
mov
stos
and
test
ret
xchg
outs
mov
loopne
loopne
and
and
and
mov
inc
adc
mov
xchg
daa
dec
fwait
and
inc
xor
jge
aam
push
popa
mov
and
cmps
pop
pop
out
mov
(bad)
stc
gs
dec
shl
xchg
test
mov
test
lea
(bad)
xor
lea
xchg
push
fisubr
add
push
push
cmp
adc
mov
iret
add
jl
cmp
xchg
imul
cmp
mov
mov
lock
xchg
enter
cmps
jmp
and
cmp
sub
ins
push
jmp
sub
inc
sub
add
into
dec
xlat
int3
adc
cmp
into
mov
std
in
(bad)
push
popa
cdq
fsub
inc
ret
ret
inc
in
jne
fwait
retf
fadd
pushf
pop
and
push
cmp
inc
data16
aaa
mov
hlt
mov
dec
gs
xchg
jge
jb
neg
dec
enter
and
jg
clc
xchg
sti
inc
mov
jmp
cmc
jo
push
mov
lock
xchg
mov
es
cmps
rdtsc
jp
jge
mov
lea
xor
adc
lahf
imul
fsub
dec
adc
push
ret
dec
or
cmp
pop
pop
ret
movs
cmp
lea
clc
dec
test
aas
(bad)
stos
enter
outs
mov
inc
xor
fcomp
dec
sahf
push
cmp
adc
add
mov
dec
and
sbb
adc
or
mov
jecxz
or
mov
or
jo
in
mov
inc
jge
mov
popf
push
xor
pop
bound
fistp
xchg
nop
bound
in
sub
nop
push
movs
sub
jge
xor
sbb
es
sub
jbe
mov
loope
ret
clc
dec
ret
popf
loop
retf
push
jecxz
add
and
call
scas
adc
dec
mov
data16
sbb
dec
in
rol
jl
inc
xchg
popf
jnp
aad
adc
hlt
repz
hlt
and
pop
sub
test
xor
jo
dec
or
jge
data16
mov
(bad)
out
test
rcr
jmp
adc
test
dec
out
add
int3
mov
fwait
dec
aas
mov
std
bound
sahf
push
jnp
push
push
cmp
mov
lods
xchg
mov
sub
hlt
add
cmps
fimul
fild
adc
mov
xor
push
sbb
loope
fwait
sbb
(bad)
mov
cmp
ss
add
push
mov
sbb
je
jge
pop
mov
cli
mov
mov
imul
pop
and
xchg
mov
ins
call
mov
bound
int
adc
adc
ins
and
mov
or
jle
cmp
and
cs
mov
jp
sub
call
lock
dec
hlt
jo
and
mov
stos
sbb
lds
mov
xchg
push
scas
mov
or
outs
mov
xchg
adc
sub
mov
(bad)
push
lea
mov
sbb
cmp
rcr
push
les
retf
xchg
mov
pop
(bad)
out
dec
fnstcw
cld
(bad)
je
cwde
inc
mul
dec
jp
scas
lods
aam
lahf
xor
push
ror
add
xchg
dec
dec
sahf
mov
in
mov
pushf
mov
xor
sub
pop
int
mov
mov
test
push
outs
jge
cdq
imul
push
mov
lds
lds
outs
cmp
loopne
stos
jmp
pop
outs
push
arpl
aam
in
cmp
hlt
sti
adc
adc
and
mov
and
jle
push
in
cmp
mov
sbb
sub
add
fdiv
mov
int
iret
xchg
add
ins
fnsetpm(287
push
fldenv
mov
ins
or
pop
into
int3
adc
cld
push
xchg
cli
int
xchg
in
mov
gs
arpl
imul
lahf
xchg
cmp
xchg
out
mul
fiadd
and
and
scas
push
popf
mov
pop
repnz
mov
sub
fidivr
ficom
xchg
enter
ds
(bad)
add
scas
ss
or
fisttp
fiadd
mov
or
mov
sti
cmp
mov
xchg
clc
fldenv
shl
jo
push
xchg
loope
mov
pop
pop
inc
jecxz
mov
fld
popf
loope
and
xor
cmc
dec
cli
mul
cld
jecxz
mov
sbb
sbb
pop
mov
mov
sub
(bad)
and
lock
(bad)
aam
sbb
(bad)
xor
mov
dec
adc
or
cmp
and
pop
add
inc
clc
mov
jne
push
push
dec
mov
pop
mov
popa
out
xchg
test
loopne
cmp
outs
lods
mov
pushf
mov
mov
ins
or
pop
adc
ins
fbstp
test
mov
lods
mov
out
into
cmp
inc
inc
cmp
repnz
jl
pop
cmp
xor
sti
in
fdivr
sub
xor
test
jmp
push
adc
and
dec
adc
inc
mov
push
sbb
test
dec
mov
pop
int
jno
xor
xchg
mov
sbb
popf
push
pushf
fwait
mov
test
dec
fldenv
les
dec
clc
xchg
inc
mov
push
outs
or
xchg
fwait
in
sbb
je
or
pop
hlt
lods
ret
loopne
movs
enter
cmp
(bad)
jl
sub
out
and
(bad)
aad
loopne
mov
jno
test
outs
xor
add
ins
cmp
outs
cmp
jne
fisttp
movs
mov
or
push
push
mov
xor
in
pop
cdq
sbb
fs
inc
daa
mov
imul
bound
push
iret
inc
mov
(bad)
and
icebp
mov
mov
cmp
pop
pop
jg
out
loope
jmp
enter
les
call
mov
aaa
out
jl
sbb
and
pop
sub
xchg
stos
jnp
sbb
jns
clc
fld
and
pushf
mov
dec
pusha
push
xchg
lds
lods
mov
out
mov
repz
xchg
or
push
aas
dec
pop
bound
stc
cs
lock
rcr
jmp
and
xchg
add
aas
leave
mov
out
enter
add
push
cmp
adc
js
push
out
dec
sbb
fdiv
pop
loope
ins
daa
xchg
jns
or
out
fild
icebp
ss
dec
rcr
pop
mov
pop
mov
cmp
out
ret
arpl
push
xlat
jmp
cmc
adc
fwait
adc
es
and
mov
repz
dec
outs
mov
or
leave
pop
outs
out
cdq
mov
sbb
test
andps
adc
jmp
or
mov
jae
sbb
imul
mov
xlat
adc
inc
and
dec
and
cmc
nop
inc
pop
mov
test
push
xor
jg
call
dec
cmp
call
add
pop
(bad)
fnclex
adc
jbe
outs
mov
and
pop
test
jl
pop
int
inc
inc
pusha
add
ins
sub
xor
xchg
mov
(bad)
sbb
(bad)
std
sbb
iret
dec
scas
pusha
pusha
int
aam
add
arpl
in
push
mov
pop
inc
push
rcr
ret
cmps
loop
fisttp
sar
(bad)
jmp
jg
inc
bound
fild
or
xor
and
ficomp
dec
iret
xchg
pushf
lods
or
mov
jmp
mov
in
enter
lea
or
sbb
pushf
es
stos
pop
test
rcl
sbb
aas
and
and
cmp
stc
push
pop
jnp
mov
adc
push
mov
stos
in
xor
xor
cmp
inc
sbb
xchg
xchg
add
ret
mov
in
pop
sbb
add
mov
mov
call
mov
push
call
es
mov
mov
xchg
push
cmps
or
add
loopne
sahf
sbb
add
mov
cmps
xchg
jb
add
sbb
repnz
inc
sub
std
adc
(bad)
jne
jb
adc
les
push
ret
jb
or
xchg
popa
outs
xchg
call
mov
clc
popf
push
inc
push
push
mov
(bad)
(bad)
lods
mov
sbb
lods
pop
mov
cmp
mov
mov
fld
repnz
(bad)
or
leave
pop
aaa
jmp
jbe
sub
sub
cmc
pop
(bad)
loopne
mov
scas
adc
inc
sbb
mov
rol
or
jae
ja
call
leave
pop
jno
push
push
pop
in
jnp
add
push
int
inc
inc
pop
hlt
mov
xchg
or
repnz
pop
fstp
inc
cmp
in
push
xlat
cmp
test
jne
adc
leave
fbld
pop
lods
pop
jne
jmp
xchg
jb
mov
fisttp
jg
push
enter
inc
jle
and
adc
cwde
mov
or
pusha
retf
and
inc
sbb
inc
or
leave
cmp
cwde
les
(bad)
pop
jl
popa
das
scas
inc
popa
data16
ins
xor
leave
xor
movs
or
adc
mov
(bad)
mov
or
cs
repz
jp
std
fwait
inc
pop
xor
mov
shl
jp
fcom
(bad)
call
xor
cwde
dec
fild
(bad)
clc
sub
mov
and
pop
or
and
inc
xor
mov
cmp
cmp
pop
dec
jmp
xor
fxch
rol
mov
xor
jno
push
jb
es
out
sub
sar
int
jecxz
sti
inc
imul
int3
mov
inc
push
lahf
hlt
cmp
and
jecxz
rcr
and
jo
push
adc
icebp
idiv
add
add
cmp
dec
fstp
iret
clc
sbb
outs
paddusw
(bad)
pop
jbe
xchg
sbb
ins
push
add
popf
out
push
or
aad
loop
push
hlt
test
fldenv
mov
retf
test
arpl
cmp
cmps
mov
add
pop
test
jne
and
push
xchg
add
or
adc
mov
or
sub
stos
sahf
cmps
jl
and
jnp
sub
dec
fld
es
xchg
inc
daa
pop
dec
repnz
add
push
lods
movs
daa
cmps
cmp
cld
cmp
call
mov
adc
mov
loope
sub
das
outs
arpl
shl
push
sub
(bad)
lods
add
gs
mov
sub
movs
aad
fcmovnbe
sbb
push
jg
ret
lods
std
xor
jl
bound
add
inc
or
lock
addr16
pop
rcr
stos
push
fdiv
fs
out
shl
mov
lahf
pop
cmp
xchg
rol
test
mov
push
cmp
dec
aas
mov
add
movaps
clc
in
imul
je
mov
pop
test
mov
sub
cmp
mov
sbb
push
mov
jecxz
mov
jl
jae
push
mov
call
movs
cmc
add
aas
out
sti
ret
push
adc
stc
out
cs
xchg
iret
scas
xor
push
test
mov
adc
ret
or
and
int3
jnp
in
sbb
jbe
out
and
ret
test
push
pusha
(bad)
pop
inc
mov
cli
pop
repnz
in
mov
js
fnstsw
fcom
in
aaa
xchg
dec
mov
mov
ss
dec
test
int3
push
dec
cli
xchg
cli
mov
and
pop
js
jecxz
dec
mov
les
hlt
inc
rcl
pop
sahf
mov
in
pop
idiv
jmp
das
out
mov
outs
push
mov
rcr
es
ja
push
iret
out
movs
mov
retf
add
dec
mov
es
cmp
push
aam
jae
fsubp
mov
repz
(bad)
mov
movs
and
movs
js
int3
cmp
adc
or
or
es
pop
or
inc
pop
sub
pop
call
sub
mov
and
inc
scas
dec
inc
jecxz
popf
fistp
stc
adc
dec
ret
shl
or
mov
lds
and
jg
mov
mov
retf
daa
cmp
sbb
popa
cmp
push
cld
xor
(bad)
dec
xchg
pop
fcomp
cmp
mov
jl
xchg
loope
int3
aam
mov
push
fwait
mov
cs
pushf
sar
ret
adc
loop
shr
dec
jne
pop
mov
push
inc
inc
or
test
add
jmp
jp
pop
jb
cmp
mov
push
add
es
mov
pop
dec
(bad)
jmp
add
lock
ja
adc
and
xor
(bad)
xchg
xchg
xchg
cmp
rol
movs
ficom
repnz
loopne
retf
mov
and
jno
dec
add
sbb
pop
pop
push
mov
aas
mov
dec
sub
add
jmp
cs
mov
xchg
adc
mov
fstp
pop
push
test
and
and
mov
mov
popa
xor
stos
mov
in
ss
retf
cmp
in
(bad)
dec
ins
rol
pusha
jne
mov
lds
add
add
cmc
retf
mov
or
mov
pop
pop
xchg
sub
bound
(bad)
test
dec
pop
icebp
dec
std
das
aam
push
shl
out
ror
stos
fstp
imul
or
push
adc
push
cli
into
adc
retf
mov
leave
xchg
ret
push
stos
aam
mov
fisttp
and
mov
in
mov
add
fldcw
mov
add
fucomp
cmp
pop
jns
mov
mov
fbld
retf
push
jne
dec
int3
ret
lahf
xor
mov
xchg
inc
dec
mov
shl
test
and
pop
mov
jb
je
jmp
movs
stos
pop
inc
pop
das
jmp
test
jl
add
dec
stc
dec
and
aam
mov
lods
mov
loopne
div
data16
idiv
outs
scas
pop
mov
push
(bad)
push
popa
cmp
xor
xor
(bad)
fstp
test
jmp
mov
xchg
mov
jg
cld
jno
fsub
shr
xchg
sub
int3
cmp
xchg
gs
fs
leave
das
enter
add
dec
(bad)
ins
setns
lods
stc
or
xchg
sbb
sbb
push
push
add
(bad)
nop
xchg
test
push
mov
sub
xchg
sub
mov
test
loopne
pop
mov
sti
sbb
mov
test
pushf
jmp
cmps
fistp
add
cmp
addr16
dec
stos
mov
sbb
mov
xor
lds
ret
loopne
or
adc
push
pop
int3
jns
mov
lods
nop
mov
jnp
add
rcr
loopne
jmp
xchg
mov
inc
xchg
jb
mov
push
inc
and
jp
cwde
xor
(bad)
xor
sbb
je
pop
test
fisubr
adc
retf
mov
jb
je
aam
jg
inc
inc
xchg
neg
es
push
add
adc
int3
outs
jp
rep
shr
sbb
mov
into
loopne
and
mov
sbb
adc
adc
add
push
cmc
rol
rol
icebp
loop
fsubp
rcl
cdq
cwde
mov
push
adc
jnp
into
jnp
dec
outs
fs
add
mov
add
jb
and
or
pop
cld
pop
mov
(bad)
pushf
or
popf
cmp
pop
std
jg
mov
and
adc
push
frstor
sbb
enter
jge
and
jae
dec
pop
and
add
iret
sub
popf
push
popa
cs
mov
lods
outs
loope
les
add
rcl
pop
adc
retf
aaa
cmc
lods
sub
sbb
mov
add
sub
jmp
inc
push
arpl
pop
mov
fild
cld
sub
jmp
imul
xchg
std
and
shr
scas
push
or
jp
fstp
scas
je
sbb
ins
movs
sub
lods
mov
dec
mov
loop
mov
or
cmp
mov
jge
mov
mov
icebp
hlt
popf
dec
mov
call
call
imul
sbb
jge
push
xchg
(bad)
(bad)
ret
cli
fisttp
leave
repz
and
nop
mov
imul
xchg
aam
mov
jns
popf
adc
mov
cli
jne
jmp
fdivr
out
adc
jp
dec
loop
fwait
push
xchg
lods
adc
pop
adc
pop
mov
push
xchg
fdiv
sbb
lea
outs
ins
mov
gs
std
xchg
call
sub
add
sbb
arpl
push
scas
imul
and
aas
xor
inc
fs
mov
pop
fcomp
jge
shl
push
call
dec
or
xchg
aas
pop
sub
jmp
not
sbb
dec
mov
jecxz
push
add
call
cs
fs
dec
test
repz
cmp
test
pop
mov
data16
sub
sub
mov
cmp
mov
ret
pop
and
jno
xchg
movs
aam
ins
imul
jecxz
jns
inc
jge
lock
ret
dec
scas
jle
mov
pop
xchg
shl
jl
push
xlat
call
bound
jb
or
and
pushf
into
sub
mov
jp
(bad)
or
popa
inc
lods
xchg
mov
mov
jnp
imul
or
cmp
fcmove
imul
or
jae
(bad)
mov
mov
scas
test
lahf
push
cmps
sti
hlt
mov
pop
stos
retf
test
pop
(bad)
pop
push
test
ror
jno
scas
mov
push
or
lods
rcl
xor
push
and
in
in
movs
sbb
or
loope
in
scas
fs
sahf
jne
daa
push
out
cmp
xchg
or
jecxz
aam
pop
shl
jbe
pop
sbb
ins
in
aad
sub
mov
mov
iret
or
loop
push
dec
ds
retf
sub
xchg
dec
cmc
movs
xchg
push
mov
pop
add
xor
add
lock
cmps
sbb
mov
fcom
mov
loope
dec
call
outs
mov
push
arpl
and
mov
mov
jno
aam
cwde
loope
cs
outs
sub
fild
push
jl
je
push
xor
push
(bad)
js
test
add
pusha
mov
pop
dec
pop
dec
xchg
or
mov
cmp
pop
repz
xchg
push
(bad)
les
aam
loopne
cmps
inc
pop
jno
(bad)
movs
rcl
ja
fmul
js
xchg
lahf
mov
and
add
lods
xchg
movs
inc
sbb
adc
pop
mul
pushf
aam
pop
inc
xor
rol
xor
mov
stos
test
and
cdq
xlat
pop
or
aas
xor
loope
mov
pop
fbld
stos
push
inc
sub
pusha
ds
and
mov
or
jmp
mov
sub
out
mov
cmps
cmp
push
fstp
stc
sbb
test
dec
test
push
add
and
jmp
test
je
sub
dec
sahf
add
push
push
jp
push
fidivr
or
add
mul
push
xor
ins
(bad)
dec
aam
xchg
dec
mov
dec
test
movnti
imul
xchg
imul
pop
ins
and
lds
cmp
pop
in
jp
pop
out
aas
jae
push
inc
pop
and
cmp
fwait
and
pop
dec
inc
sar
int
adc
test
push
mov
es
or
cs
push
add
mov
addr16
sub
into
mov
and
dec
retf
mov
push
ret
jge
or
or
pushf
push
sahf
or
imul
or
clc
dec
sbb
(bad)
fdiv
into
fbld
std
loope
daa
outs
in
sub
inc
pop
jg
mov
fwait
or
mov
test
pop
xchg
mov
ins
lock
xchg
add
xlat
add
sub
inc
movs
inc
movs
int3
inc
loopne
jle
inc
aas
cmp
gs
das
(bad)
cdq
or
repz
adc
pop
sub
dec
mov
sbb
pop
call
mov
or
addr16
sbb
dec
inc
cmp
and
out
in
(bad)
jae
repz
pusha
icebp
loope
rol
stos
iret
ret
add
xchg
sbb
cmp
mov
stos
push
movs
loop
rol
pusha
clc
bound
pop
mov
cmp
push
adc
mov
dec
add
mov
add
push
inc
outs
jbe
xchg
ins
test
rcl
xlat
ud1
ja
mov
sub
das
out
jbe
popa
fistp
dec
xchg
(bad)
sub
nop
shr
xchg
lods
sub
sub
jae
add
sub
xor
clc
xor
mov
xchg
test
mov
inc
lods
out
retf
adc
out
(bad)
mov
sbb
(bad)
std
xchg
nop
and
cld
pop
aaa
inc
inc
push
jp
sub
mov
arpl
out
push
shr
pop
cmp
lds
ficomp
scas
push
add
loope
aad
xchg
inc
inc
adc
ja
inc
mov
rol
cmp
sub
stos
into
dec
pushf
adc
clc
in
outs
popf
mov
stos
int3
xor
fcomp
jmp
mov
mov
sti
mov
push
push
jbe
pop
pushf
stc
mov
aaa
push
fisttp
mul
(bad)
mov
es
mov
cs
cdq
test
cmc
cmp
xchg
and
retf
cmps
jnp
callw
lods
adc
ins
mov
sbb
fdivr
adc
stc
adc
cwde
gs
push
dec
mov
rcl
loopne
adc
sub
or
test
sbb
inc
xchg
out
pop
stos
mov
jns
pop
push
das
test
push
lods
mov
loope
mov
xor
lods
mov
dec
mov
jnp
pushf
mov
mov
dec
aas
cli
(bad)
jl
mov
inc
cli
pop
das
test
sbb
dec
pop
xchg
cli
mov
dec
xor
mov
call
mov
jnp
mov
jb
dec
imul
cld
bound
jle
ret
mov
xchg
push
sti
xchg
cmp
sahf
aam
fdivr
cmps
inc
jns
mov
dec
mov
xchg
sub
dec
fist
ret
or
sti
dec
daa
arpl
xchg
lds
mov
sbb
push
cmp
(bad)
jnp
(bad)
ja
je
aas
test
push
loope
lahf
mov
int3
call
push
ja
mov
je
scas
call
add
(bad)
je
shl
pop
adc
ds
scas
and
sar
inc
lods
inc
sbb
and
push
push
push
pushf
push
adc
aas
jp
add
mov
and
add
dec
jecxz
push
add
xor
mov
jmp
gs
xchg
jmp
(bad)
jae
push
fild
ja
aaa
inc
cwde
nop
inc
test
stos
aas
clc
mov
dec
mov
mov
add
and
loopne
xor
dec
or
adc
adc
sar
pop
stos
push
jl
mul
sbb
sbb
and
repz
fucomip
xor
xchg
jno
jo
sbb
inc
adc
aad
mov
sub
(bad)
push
pushf
add
dec
scas
cmps
ror
xchg
fsubr
xor
push
gs
xchg
imul
dec
xor
pop
out
jno
repz
bound
std
or
xchg
cdq
in
and
inc
imul
aaa
sub
int3
and
mov
mov
js
pop
mov
aas
loope
(bad)
cmc
hlt
add
hlt
mov
sbb
leave
sub
popa
inc
pop
sahf
and
jbe
dec
cwde
stc
rol
rcl
inc
pop
je
out
fcom
xchg
pop
rep
bound
and
fidiv
fwait
mov
daa
fisttp
xor
test
lahf
fst
rol
sbb
mov
jae
sbb
retf
sub
dec
cmp
push
loope
inc
cwde
lock
mov
sub
cmc
mov
dec
mov
mov
lea
dec
mul
cmps
(bad)
jmp
adc
outs
dec
sti
mov
popf
nop
mov
push
xchg
mov
cmp
aad
jle
add
addr16
pop
outs
(bad)
outs
retf
pop
repnz
xorps
and
mov
nop
xchg
xchg
add
push
gs
xor
ds
sbb
or
mov
mov
xchg
pusha
cmp
cmp
aaa
jno
into
sub
int3
fcom
mov
push
xchg
(bad)
idiv
retf
push
xor
ins
push
movs
imul
lods
dec
bound
aam
aam
push
mov
out
jo
lahf
cli
inc
dec
test
outs
stos
in
sbb
aad
movs
inc
inc
pop
ja
mov
or
cdq
(bad)
mov
bound
push
add
ror
js
lods
and
arpl
jne
movs
ret
fsub
xchg
in
push
retf
dec
out
mov
jne
imul
mov
lods
punpckhbw
loop
cmp
repnz
lock
adc
xor
adc
adc
mov
mov
inc
fs
push
std
mov
xor
xor
push
shl
push
and
push
and
enter
adc
dec
enter
sub
xlat
movs
(bad)
mov
jne
dec
ror
push
pop
push
dec
mov
and
sub
outs
in
mov
hlt
outs
sbb
call
mov
add
dec
xchg
push
mov
(bad)
rcl
sbb
shl
mov
sub
out
shl
adc
sub
mov
jnp
out
sub
cmp
xor
enter
cwde
push
es
dec
xchg
fmul
inc
sub
shl
cmp
adc
inc
dec
push
cmc
push
sbb
loope
xor
mov
sub
call
in
fld
pop
mov
fmul
jmp
or
dec
jns
cli
jne
push
xchg
dec
fsubr
inc
fsubr
push
inc
gs
jae
sbb
dec
push
jb
bound
test
mov
xchg
call
add
mov
std
fimul
adc
icebp
pop
(bad)
sub
mov
cmp
push
imul
call
bswap
aaa
and
lods
into
arpl
mov
xchg
push
xchg
dec
jle
or
mul
cmp
ins
fsub
mov
(bad)
push
retf
mov
lods
aad
in
inc
push
push
(bad)
push
push
call
inc
mov
jns
aam
sub
jge
mov
rcl
inc
cdq
and
sbb
call
ret
sti
ret
xor
mov
jbe
(bad)
sar
adc
adc
mov
lahf
xchg
push
cmp
sbb
fild
(bad)
test
shl
or
cmp
in
adc
sbb
stc
xor
mov
cli
cwde
sbb
jns
cmp
lds
pop
js
hlt
cmc
out
ins
adc
and
sbb
test
imul
mov
in
test
push
sub
lock
leave
sub
cwde
and
adc
aad
mov
cmp
jmp
in
test
fwait
push
xchg
sub
push
mov
sahf
mov
jbe
mov
stos
aaa
push
mov
(bad)
jae
ret
bound
sbb
pusha
mov
leave
xchg
gs
xchg
jg
push
lds
es
cld
idiv
cmc
jne
dec
pop
cmp
ins
out
push
jmp
inc
test
mov
dec
mov
pop
mov
lods
aad
js
and
mov
test
xchg
xor
(bad)
xor
scas
in
addr16
retf
inc
mov
sub
push
push
jle
fdivr
dec
jae
xchg
adc
out
push
xor
add
into
aaa
idiv
idiv
add
leave
mov
les
mov
xor
pushf
jmp
js
(bad)
adc
shr
xchg
cli
cmp
jle
inc
fsub
cs
(bad)
fwait
cmp
pop
xlat
dec
pop
lock
std
dec
(bad)
js
cmp
push
scas
pop
outs
rol
and
push
repnz
pop
retf
pop
(bad)
jns
xchg
aas
out
mov
mov
mov
fwait
call
cmp
cwde
or
mov
imul
mov
cdq
shl
sub
mov
sub
adc
pop
lahf
sbb
daa
sahf
and
adc
mov
loopne
sbb
leave
sub
aas
cs
or
jno
sub
jl
jle
repz
xor
inc
aad
popa
sbb
cmps
fiadd
nop
(bad)
fcom
into
sar
in
or
xchg
cmc
lock
xor
fs
fcmovnu
fisubr
xor
push
int3
and
push
addr16
out
sub
sub
push
xchg
pop
jb
sub
mov
movs
sub
jae
leave
push
mov
fldenv
mov
dec
cmps
(bad)
retf
dec
popf
stc
add
repnz
jmp
and
xchg
adc
stos
push
mov
rol
imul
xor
mov
stc
clc
add
repnz
outs
dec
(bad)
or
lds
lock
in
scas
ins
lods
inc
dec
pop
cmc
call
fnstsw
sbb
pop
jg
outs
push
pop
sub
ja
mov
cmp
adc
popf
ror
lods
repz
loope
push
dec
or
mov
jns
add
sub
push
mov
cmp
push
in
jne
sti
push
movs
adc
adc
stos
push
je
clc
out
popf
push
cmp
push
stc
push
lods
int
mov
call
cmp
mov
aas
sub
frstpm(287
inc
pop
in
(bad)
cmp
sub
jno
cmps
stos
dec
jno
jge
push
mov
adc
test
je
adc
add
mov
xchg
inc
ja
ds
leave
adc
les
cmp
loop
loope
mov
les
dec
xlat
test
push
xor
xor
lock
in
jno
sti
retf
nop
fwait
or
retf
dec
jmp
push
xchg
iret
bound
hlt
fcomi
unpcklps
xor
and
dec
sbb
rcl
or
stos
xor
bound
jo
enter
das
addr16
push
test
xchg
sub
pop
loope
out
pusha
out
mov
jmp
in
mov
mov
movs
mov
push
ret
pop
jle
push
retf
sub
xchg
mov
imul
mov
mov
pop
pushf
mov
stos
popa
das
shr
loopne
dec
jae
inc
or
fidivr
cmp
fstp
or
mov
stos
icebp
xlat
sub
and
stc
inc
jp
je
or
aaa
arpl
adc
retf
(bad)
sub
in
inc
les
or
xchg
mov
(bad)
xchg
mov
lods
and
hlt
add
and
dec
mov
out
fs
jae
fistp
add
cmp
stc
adc
xchg
fwait
xchg
in
jno
gs
mov
mov
add
or
sbb
pop
pop
std
(bad)
sti
xchg
rcr
dec
fsub
push
cmc
ret
mov
inc
out
mov
pop
stos
rcl
cwde
mov
mov
add
xor
and
adc
loopne
into
call
and
or
ins
mov
jne
ins
dec
pop
iret
jbe
jle
sbb
jno
push
sub
mov
xchg
jmp
or
add
sahf
out
push
jbe
(bad)
cdq
(bad)
in
pop
cmp
fnsave
adc
arpl
popf
bound
ds
cmp
popf
ds
out
push
icebp
add
stos
mov
cmp
int
sbb
push
inc
and
stos
pushf
jno
aam
or
movs
jg
xchg
test
fmul
dec
out
loopne
aad
scas
in
call
add
mov
pop
(bad)
fstp
cmp
xor
ficom
lds
push
in
dec
cmp
cwde
add
jno
mov
sbb
add
and
push
sub
or
sbb
xor
fs
jb
jle
imul
xor
stos
add
pop
mov
inc
sub
iret
sbb
lock
movs
inc
out
das
data16
mov
xor
je
dec
jp
add
clc
ret
inc
popa
fmul
into
xchg
movs
mov
cmp
test
or
cmc
jmp
in
loopne
(bad)
addr16
ffree
push
add
repz
mov
aas
nop
cli
das
inc
hlt
cmp
mov
xchg
cld
sbb
jnp
fld
shl
(bad)
pop
imul
inc
js
pop
dec
pop
mov
cmp
test
sbb
sbb
pop
pop
loop
es
in
lahf
push
mov
jmp
loope
xor
lds
scas
jle
lods
push
xchg
xchg
fsub
adc
in
ja
add
and
dec
sti
mov
je
(bad)
outs
cmps
cmp
scas
sbb
(bad)
jge
gs
aam
xchg
sub
add
iret
movs
fidiv
mov
(bad)
hlt
jb
xor
div
xor
ins
nop
adc
sbb
cmp
cmp
out
sahf
xor
int
inc
dec
and
aam
mov
enter
cmc
out
pop
mov
xlat
lds
push
mov
push
sbb
jmp
repnz
shl
inc
cli
movs
nop
fistp
repnz
adc
fcom
jo
int
inc
sbb
jo
adc
aam
jl
jno
xor
fimul
xchg
lods
aad
inc
loope
cmp
add
and
out
(bad)
mov
fcom
icebp
outs
cmp
popa
push
xchg
pop
leave
lock
mov
fucomip
xor
cld
in
repz
cli
cld
clc
out
inc
pop
test
les
int3
out
jns
out
lea
inc
icebp
add
adc
ss
out
std
loopne
repz
xor
mov
shl
xchg
gs
pop
mov
into
loopne
or
aaa
dec
mov
xor
(bad)
enter
and
sub
cld
add
sbb
push
or
xchg
stos
adc
aam
mov
or
iret
or
test
mov
out
lods
out
jae
sub
sbb
out
mov
cmp
cmc
mov
stc
(bad)
int3
mov
xchg
fmul
jns
push
jl
mov
xchg
cmc
push
iret
fist
shl
mov
dec
mov
ds
shr
or
or
fst
push
and
fbstp
stos
sbb
mov
shl
mov
ds
aas
imul
loop
dec
repz
scas
hlt
dec
adc
mov
test
mov
arpl
into
adc
into
int
test
inc
mov
(bad)
jg
cmps
popf
test
lock
pop
arpl
sar
and
push
imul
jne
cmp
adc
cmc
push
mov
cdq
gs
shr
jl
mov
outs
clc
scas
loopne
sub
xchg
sbb
push
rol
and
addr16
cmps
aad
mov
ins
cmp
leave
mov
xchg
sbb
adc
sub
test
test
scas
(bad)
das
pop
retf
dec
inc
sub
call
xor
mov
mov
mul
add
sub
hlt
jge
fwait
mov
es
into
mov
mov
dec
push
sub
sub
dec
sbb
in
adc
and
in
sbb
inc
js
ret
(bad)
imul
push
out
lock
in
test
fsubrp
fcmovb
(bad)
into
xchg
test
out
mov
repz
push
enter
out
cdq
dec
or
int
xor
and
pushf
shr
rcr
ja
fwait
scas
jecxz
inc
clc
and
push
jbe
leave
pop
sbb
adc
pop
aam
ins
cmps
shr
mov
neg
neg
addr16
or
(bad)
cmps
(bad)
(bad)
clc
sub
rol
mov
and
mov
jle
pop
mov
ret
jb
adc
sbb
cs
mov
mov
pop
repz
cwde
pop
sub
mov
jns
mov
int
loopne
mov
mov
pop
mov
cli
mov
pushf
sbb
retf
data16
inc
fisttp
xchg
je
pop
push
ds
and
clc
jg
push
js
je
ins
movs
lods
cmc
inc
sub
inc
or
sbb
mov
jno
ds
cmps
mov
dec
xchg
mov
dec
ror
jge
es
mov
int
inc
ror
and
mov
cmc
lahf
mov
jge
mov
mov
mov
aad
out
arpl
pop
lock
movnti
stos
test
ret
outs
cmp
scas
fs
iret
xchg
push
fsub
stos
and
loopne
or
scas
jle
xchg
or
popa
ror
jbe
or
cmc
data16
fisttp
sub
lods
inc
stos
cmp
lock
call
xor
pop
jno
retf
xchg
gs
and
js
jns
pop
dec
adc
cmc
inc
jmp
sti
gs
fs
test
xchg
push
mov
fwait
mov
sub
and
xchg
inc
cli
xor
jg
sbb
push
into
fldcw
add
xchg
out
rcr
out
and
in
push
fwait
dec
dec
es
ret
fnop
add
loopne
and
pop
and
int
ror
mov
cdq
mov
imul
dec
xchg
cmps
lea
sbb
outs
stc
out
jae
mov
mov
ret
ret
mov
add
in
rcl
sbb
lods
aaa
bnd
cmovge
sub
cmp
mov
cmp
jp
jbe
pusha
fidivr
out
iret
icebp
out
shl
inc
rol
dec
cmovae
js
cs
ins
pushf
inc
jl
add
fisubr
inc
push
xchg
xlat
jmp
inc
sahf
add
(bad)
mov
in
fbld
ds
int3
mov
fwait
jg
xor
pop
and
jmp
leave
shr
cmp
xlat
enter
jg
neg
data16
xchg
jecxz
cmp
fnstenv
aam
mov
push
pop
pop
adc
jns
jg
inc
adc
clts
nop
jno
popa
or
sbb
push
leave
icebp
sub
jle
inc
xor
push
in
dec
mov
cmps
pop
jmp
comiss
je
scas
jle
dec
sub
ins
fist
jp
and
sahf
mov
iret
inc
sbb
cmp
ret
push
sub
mov
mov
ret
arpl
dec
pop
leave
jmp
xor
and
mov
mov
arpl
aad
jle
inc
rol
dec
into
aaa
xor
jo
movs
cdq
retf
fistp
cmp
mov
xchg
pop
dec
jmp
inc
bound
adc
fucomi
xchg
(bad)
or
and
movs
int3
and
das
sbb
xchg
cmc
sbb
mov
cmp
rol
push
aas
cmp
pop
(bad)
pop
sbb
loope
sub
inc
imul
test
push
jge
jns
ret
dec
xor
dec
or
std
add
sti
in
mov
(bad)
sub
xor
jo
push
outs
or
mul
adc
pop
test
jnp
fsub
xchg
sub
or
xchg
inc
addr16
scas
mov
mov
cmp
leave
stos
mov
test
mov
ins
jl
or
jl
xchg
(bad)
jp
mov
int3
std
pop
(bad)
xchg
stos
fst
(bad)
jg
add
add
scas
inc
popa
sahf
push
loope
inc
mov
mov
pop
popf
sub
dec
jmp
fwait
xchg
mov
pop
dec
sub
cmp
mov
mov
int
ja
jno
jbe
or
pop
lea
inc
jg
xlat
je
movs
mov
fld
mul
stc
addr16
in
mov
shl
cdq
inc
sbb
imul
daa
inc
cld
leave
xchg
idiv
mov
mov
or
pop
clc
popf
xchg
ret
cld
adc
inc
in
outs
sub
(bad)
hlt
fadd
ret
mov
xchg
mov
iret
ss
loopne
or
movs
imul
xchg
sbb
(bad)
xor
sub
pop
cmps
(bad)
std
xchg
jae
jp
pop
pop
jg
pop
call
inc
pop
sahf
ja
fs
sub
loop
mov
hlt
xchg
test
xchg
outs
(bad)
push
out
clc
mov
inc
pop
mov
cmp
pop
inc
sbb
fmul
mov
dec
jbe
xchg
dec
and
mov
pop
xchg
jl
and
sbb
fdivr
sub
inc
add
test
leave
rol
xor
sub
out
cmp
mov
mov
(bad)
jg
rcr
call
movs
xor
dec
push
add
xchg
idiv
mov
sbb
mov
cli
jb
xor
test
inc
imul
rcl
add
jns
adc
sbb
push
lea
cwde
sbb
rcr
sbb
mov
push
imul
jg
ja
sbb
push
adc
fadd
mov
sbb
out
mov
inc
jl
lock
scas
jecxz
mov
repz
pusha
pop
xchg
and
mov
cmc
jno
push
bound
jb
and
add
pop
(bad)
fdiv
inc
mov
sbb
inc
(bad)
fsub
sar
outs
xor
bound
and
lahf
(bad)
sub
xlat
pop
xchg
out
sub
bound
sub
mov
nop
cld
pusha
test
xchg
(bad)
push
enter
push
xor
in
or
cs
cwde
adc
push
cwde
or
mov
enter
and
iret
xchg
cmp
scas
adc
sti
and
stos
fdiv
scas
cmps
xor
push
pop
sbb
xchg
jg
outs
cmp
sbb
outs
pop
call
fldenv
mov
sbb
or
or
push
dec
jo
sbb
dec
xchg
out
fcomip
out
mov
pusha
or
ins
rcl
pushf
retf
call
sbb
mov
and
and
(bad)
js
shr
and
xchg
adc
cmp
cdq
rcl
pop
push
fistp
pop
pusha
or
cli
popf
pop
(bad)
call
mov
cmps
aam
inc
(bad)
add
stc
fcomp
add
push
mov
imul
inc
std
sub
aad
sbb
inc
aam
push
dec
rol
adc
and
sahf
xchg
mov
mov
add
es
rcr
sti
std
int
pop
add
mov
ret
sbb
jae
int3
int3
sbb
jbe
in
rol
xchg
and
popf
popf
js
mov
repnz
sub
shl
out
push
imul
loope
fcom
clc
xchg
loop
sub
out
or
iret
dec
add
pop
ins
inc
test
ret
add
fcom
adc
cs
or
and
and
clc
dec
sub
cld
mov
sub
pop
mov
cmp
jmp
cdq
xor
jmp
bound
das
jecxz
fisub
jp
clc
jmp
sbb
jae
dec
jmp
imul
add
lods
or
mov
push
jno
mov
sbb
iret
outs
cmc
aas
jmp
ret
in
or
and
sub
xor
jo
sbb
adc
xor
or
add
mov
mov
loope
loop
rcr
inc
sub
dec
dec
outs
dec
cmp
or
imul
(bad)
addr16
pop
je
cmp
jl
out
jp
call
int3
cmp
jecxz
sbb
dec
and
das
xchg
pop
mov
sbb
cld
fidivr
sub
sahf
mov
(bad)
mov
jg
lods
adc
icebp
enter
xchg
sub
push
or
sub
call
xchg
mov
add
sbb
out
jmp
and
add
and
adc
xor
dec
inc
xchg
push
mov
cmps
and
fldenv
mov
arpl
push
dec
cmp
or
(bad)
inc
jp
test
inc
jae
inc
imul
mov
pop
jae
inc
cmp
jb
sub
ins
jge
adc
loop
sub
inc
sub
out
movs
pop
ret
jmp
fbld
int
pop
stos
jo
add
cmps
push
movs
jnp
shl
sub
xchg
jge
ds
pop
(bad)
push
pop
scas
call
mov
repnz
mov
pop
aam
ins
call
mov
add
pop
mov
ret
xlat
or
fmul
and
das
cmp
in
add
push
adc
out
in
dec
je
nop
xor
mov
test
outs
and
jl
rol
stos
inc
dec
cmp
lea
(bad)
cmp
inc
mov
(bad)
jge
iret
in
in
popa
loopne
(bad)
loopne
cmp
mov
div
test
fst
adc
div
mov
cld
inc
inc
xchg
pop
setae
sub
shl
ja
mov
mov
call
enter
mov
lods
jl
nop
dec
test
lea
call
add
jmp
mov
pop
out
jle
xor
cmp
popa
mov
sahf
add
cwde
mov
les
aaa
xchg
add
jns
sub
pusha
lds
in
jp
nop
jmp
cmp
cli
sub
push
jp
inc
test
in
mov
mov
xor
jmp
push
pop
pop
out
(bad)
fidiv
pop
mov
mov
fstp
push
push
cmp
xor
pop
mov
xchg
ins
js
in
xlat
leave
movs
sbb
out
and
and
push
cmp
sub
mov
adc
int3
popf
push
ret
lock
leave
mov
lods
stos
fwait
adc
fsubr
mov
xor
xor
fidivr
push
call
jge
jmp
cmp
mov
loope
scas
mov
aam
shr
rol
aad
xchg
ficom
rcl
inc
out
(bad)
es
sub
mov
mov
fisttp
dec
dec
xchg
imul
sbb
in
out
inc
pop
inc
xchg
jnp
nop
jg
inc
lds
mov
fwait
movs
pop
bound
rcl
inc
lds
(bad)
shl
mov
mov
rcl
xor
shl
not
fild
cdq
jb
cmp
fcomp
jecxz
push
sbb
retf
in
lea
sbb
cwde
mov
push
popa
cld
push
mov
and
inc
xor
push
xor
repz
out
int3
xchg
mov
mov
cld
into
ret
xchg
add
mov
ds
(bad)
retf
inc
out
or
cmp
retf
cmp
ret
sub
aaa
retf
xchg
inc
mov
daa
add
cwde
pminsw
jbe
pushf
fld
test
xlat
in
stc
sbb
ror
or
and
inc
or
fsubrp
dec
cmp
or
cs
loopne
xor
pop
mov
and
and
jae
ja
sbb
icebp
fxch
mov
dec
push
xor
aad
sub
sbb
popf
in
mov
xor
sbb
js
in
nop
mov
mov
pop
in
inc
push
sub
dec
mov
mov
add
or
mov
pop
daa
mov
scas
les
adc
jl
fild
retf
push
xor
mov
sbb
pop
dec
mov
(bad)
je
adc
push
sub
mov
jmp
gs
and
ret
inc
lock
mov
push
pop
imul
ret
and
mov
mov
and
addr16
stc
mov
(bad)
push
jo
rcr
int
pop
inc
jne
int3
(bad)
(bad)
daa
xchg
addr16
dec
xor
ins
push
fld
test
out
jbe
dec
in
jmp
sbb
lods
pushf
sti
cs
loope
jns
es
iret
clc
stos
mov
data16
xor
pop
cld
mov
add
mov
dec
inc
int
addr16
dec
dec
sub
sbb
add
in
dec
jno
scas
(bad)
jp
add
mov
sbb
sub
push
mov
jb
push
dec
push
or
mov
test
mov
stc
(bad)
es
loope
cmc
sbb
cmps
icebp
jl
out
cdq
xchg
cld
jbe
retf
lods
mov
es
inc
(bad)
mov
mov
push
mov
dec
ss
in
jl
dec
dec
cdq
dec
xchg
daa
dec
pop
dec
shl
sbb
arpl
ja
add
adc
(bad)
pop
lods
sbb
iret
test
cmp
ror
cmp
mov
out
jp
pop
adc
inc
jle
addr16
and
pop
xchg
pop
daa
scas
test
mov
xchg
jecxz
gs
sahf
pop
ins
push
(bad)
push
vmwrite
fnstenv
imul
dec
shl
test
dec
sbb
and
mov
sbb
mov
jmp
sub
pop
and
cmps
mov
ja
sub
gs
pop
or
push
imul
ins
or
imul
in
dec
add
mov
inc
test
lods
mov
dec
xchg
dec
out
push
stc
std
rcl
jl
sub
sub
shr
and
or
imul
jo
int
adc
pushf
mov
hlt
cmp
adc
cmps
cmp
mov
repnz
mov
in
(bad)
out
cmp
jnp
in
stc
retf
xchg
jnp
pop
add
jl
pop
push
mov
dec
out
mov
mov
lods
enter
adc
mov
push
mov
push
fisub
arpl
repz
mov
xchg
cmp
push
and
add
push
inc
jne
pushf
inc
mov
pushf
js
rol
test
test
in
test
call
inc
lods
jbe
pop
inc
sub
dec
mov
cmp
adc
xor
mov
mov
pop
popf
pop
inc
lahf
imul
in
xchg
jp
and
ret
shl
call
data16
jmp
popa
icebp
mov
fist
ror
adc
in
in
cdq
movs
fist
cmc
pop
inc
aas
test
inc
ret
add
hlt
pop
out
xor
adc
push
add
mov
lods
mov
addr16
jbe
pusha
cmp
jae
mov
fidivr
add
sub
repz
add
mov
sbb
xor
push
out
push
and
ins
mov
sbb
sub
mov
jmp
push
retf
inc
out
pop
cs
or
and
test
scas
xchg
stos
scas
cmps
dec
dec
mov
mov
outs
(bad)
cmp
push
enter
sar
loopne
xchg
pop
call
jo
out
clc
mov
les
ins
arpl
ret
(bad)
adc
call
xor
enter
or
rcl
or
cmp
out
sub
pusha
push
add
adc
mov
aad
imul
int
cwde
and
cmp
sbb
add
or
dec
xor
pop
sbb
dec
fucomp
inc
imul
jo
imul
dec
pop
jmp
xchg
ins
xchg
xchg
pop
sbb
xchg
aas
sbb
lock
xor
loope
adc
ins
ret
jg
ins
cmps
loopne
shr
mov
add
out
sbb
les
mov
retf
push
inc
test
jae
dec
push
xchg
out
add
les
sbb
(bad)
or
hlt
test
mov
xor
sti
add
(bad)
aam
sub
cmp
retf
lea
and
xor
mov
push
loopne
mov
and
mov
jecxz
mov
shl
fld
bound
imul
dec
xchg
and
mov
loopne
adc
mov
push
cmp
shl
push
pop
push
push
mov
lahf
jmp
shr
retf
imul
push
pop
jae
fistp
jmp
add
inc
out
mov
test
aas
xchg
loopne
loopne
push
pop
or
xchg
or
or
fmul
xchg
jge
cmp
xor
neg
cmp
mov
movs
ret
(bad)
sbb
retf
mov
mov
cmp
dec
mov
arpl
das
or
in
push
les
jae
push
jne
sti
sbb
cmp
dec
mov
mov
jecxz
rol
add
mov
nop
jg
leave
add
ror
je
fdivr
adc
inc
ds
aaa
push
mov
ror
lods
inc
xlat
movs
or
and
inc
sti
lahf
cs
call
fcomip
jmp
xchg
into
pop
push
ja
scas
scas
push
push
fcmovu
mov
out
fcmovnu
int3
jo
(bad)
and
cli
xchg
sar
ror
pop
stos
sub
add
aam
jmp
fisttp
inc
pop
xchg
fnstenv
inc
iret
in
add
xor
out
sbb
das
bound
xlat
mov
add
sbb
cs
inc
call
or
daa
shl
ds
jmp
lea
(bad)
pop
pop
sub
popf
arpl
mov
ret
and
or
jg
mov
dec
pop
mov
int3
in
or
mov
xchg
ror
cmp
shr
xor
xor
dec
mov
(bad)
imul
add
fucomi
sub
sahf
int
sub
imul
je
imul
lea
adc
cld
daa
(bad)
out
mov
pop
dec
or
cmp
test
fcompp
and
pause
mov
xor
popf
lea
shl
fiadd
test
lds
mov
dec
lea
scas
outs
and
ins
add
xchg
bound
or
dec
imul
cmp
jp
sub
in
xchg
sbb
cdq
adc
mov
rcr
jecxz
je
mov
add
add
pop
mov
mov
dec
mov
cmps
shr
xlat
cvttps2pi
jge
pusha
mov
(bad)
and
or
(bad)
sbb
adc
dec
cmp
fincstp
push
mov
jmp
or
xor
inc
iret
sahf
cmps
shl
mov
xor
mov
cwde
sbb
add
dec
push
ds
or
popa
les
ins
add
inc
out
mov
cmp
add
mov
mov
mov
dec
sbb
mov
icebp
sub
dec
mov
test
push
(bad)
pop
jmp
into
ss
popf
inc
and
fdivr
pop
sub
inc
ficomp
cdq
jp
adc
add
neg
outs
cmp
cmp
bnd
cmps
xor
dec
cwde
jmp
or
jp
and
push
xchg
add
std
jbe
and
and
add
sbb
push
add
popa
jbe
lods
push
sbb
dec
pop
iret
mov
sub
add
(bad)
aas
loopne
icebp
push
les
out
cld
xchg
and
pop
mov
and
neg
pop
dec
fsubr
pop
cwde
call
clc
mov
adc
ret
movs
enter
inc
inc
jp
(bad)
jg
adc
scas
lahf
xchg
(bad)
in
bound
std
dec
addr16
addr16
pop
dec
mov
xchg
sbb
cmp
rol
cli
and
mov
in
xor
in
ror
ror
mov
iret
pop
dec
std
aaa
inc
int3
cmp
sub
mov
out
retf
jmp
push
pop
dec
pop
push
pop
test
pop
repnz
loopne
mov
mov
dec
faddp
jae
out
(bad)
(bad)
sub
pop
and
mov
icebp
and
xchg
mov
nop
mov
add
loop
dec
fcom
mov
daa
retf
shl
cmps
push
or
(bad)
push
add
xor
call
int3
into
stos
sbb
lea
popa
sbb
cmp
jle
add
in
test
push
lods
sar
xor
test
sbb
cs
sub
sti
jno
inc
imul
pop
(bad)
das
xchg
retf
clc
sahf
in
add
xchg
pop
mov
jno
arpl
pop
xor
add
xor
add
pushf
das
pop
xor
stos
int
push
mov
xor
mov
cmps
pop
div
stos
pop
cli
call
or
adc
sbb
cmp
fcmovnb
mov
std
jp
(bad)
loop
rcl
push
adc
int3
jbe
xor
aas
dec
xchg
int
cmp
nop
stc
shl
clc
outs
jae
cwde
loop
inc
inc
ret
int
push
jno
out
mov
jge
mov
addr16
int3
xchg
or
mov
push
sbb
adc
or
add
das
ins
and
daa
loope
cdq
mov
xchg
jle
cmp
out
out
mov
mov
push
push
adc
and
xor
int3
xchg
mov
gs
sub
imul
push
pusha
sbb
or
dec
and
outs
jmp
pop
xchg
(bad)
loope
inc
xor
push
frstor
sub
add
pop
dec
mov
adc
and
push
xor
js
sbb
xor
div
jecxz
rcr
cwde
jecxz
push
mov
test
hlt
out
pop
pushf
jo
sbb
xchg
aas
mov
cld
cmp
pop
xchg
xchg
cs
jnp
imul
test
cld
sbb
add
out
inc
or
or
dec
push
pop
inc
jge
pop
jbe
or
js
adc
rcl
inc
fisttp
mov
cs
sbb
into
xchg
push
cdq
push
mov
inc
retf
sbb
iret
data16
add
mov
xchg
cmps
add
push
inc
retf
pop
scas
out
or
mov
ins
call
loop
or
and
in
pop
add
lahf
aam
xor
icebp
scas
das
sub
or
xchg
mov
cmps
mov
daa
inc
pop
jb
outs
mov
add
stos
test
sub
test
out
pop
push
adc
cli
push
shl
or
cmp
je
loop
imul
into
in
test
xchg
inc
dec
fnstcw
popa
fild
ss
pop
add
adc
xchg
popa
fbstp
pop
outs
shl
out
inc
xchg
pop
inc
(bad)
pop
and
xchg
add
sbb
(bad)
xor
dec
mov
movs
push
cmp
stos
add
mov
xchg
ret
sbb
xchg
xor
dec
retf
mov
in
fcmovnb
inc
sub
mov
leave
jmp
or
inc
lds
push
(bad)
pushf
xchg
movs
push
dec
mov
(bad)
jmp
jns
gs
int
add
add
popf
out
cmp
ja
std
outs
fstp
cdq
pop
movs
push
push
fadd
call
int3
xchg
dec
sbb
xchg
(bad)
jmp
rcr
cmp
mov
(bad)
xchg
mov
stos
and
push
pushf
add
dec
jb
add
or
cmp
inc
mov
imul
ficom
sub
push
mov
std
vxorps
outs
shr
sub
fs
push
in
(bad)
fs
pop
sbb
or
mov
std
(bad)
cmps
pop
cmp
aas
in
test
mov
and
mov
push
rol
sar
xchg
mov
push
test
int3
scas
jne
in
mov
stos
inc
loope
sbb
or
mov
cmp
pop
inc
xchg
(bad)
sub
and
or
sub
(bad)
cmp
xchg
xchg
(bad)
jbe
sub
jne
dec
jl
mov
fbstp
test
inc
push
dec
xchg
mov
repz
addr16
(bad)
dec
iret
mov
and
mov
mov
sbb
and
fcomp
mov
dec
or
jle
mov
push
mov
stos
repnz
add
xchg
mov
mov
rcr
mov
push
mov
pop
lock
out
pop
test
xlat
push
xchg
or
aaa
data16
call
mov
retf
mov
fisubr
mov
enter
lds
stos
mov
push
es
not
xchg
test
fisttp
jecxz
mov
cld
imul
mov
ins
iret
scas
(bad)
xchg
lea
push
test
sbb
mov
outs
sub
sahf
pushf
xor
cmc
and
idiv
iret
inc
jnp
test
dec
push
test
add
movs
push
mov
adc
gs
test
(bad)
lds
mov
fsqrt
lock
mov
repnz
test
jecxz
dec
into
cld
mov
pop
inc
jle
add
mov
aaa
clc
mov
push
xchg
dec
dec
pop
loopne
sbb
(bad)
xchg
cmps
mov
or
aam
xchg
or
fmul
ret
arpl
call
clc
std
rcr
(bad)
jmp
jge
add
adc
popa
outs
(bad)
(bad)
push
add
icebp
clc
dec
dec
jp
push
shl
shr
leave
sub
js
sub
push
addr16
ds
xlat
ja
mov
les
movs
cli
jmp
clc
xchg
dec
cmp
mov
mov
push
xchg
int
mov
sub
das
loopne
test
pop
mov
sbb
push
stc
add
shl
ins
push
pusha
addr16
push
xchg
xchg
pop
ficomp
mov
fld
mov
scas
inc
loop
mov
in
mov
out
push
in
jne
(bad)
enter
cdq
pop
lods
xor
inc
leave
in
dec
fwait
int3
jg
push
sbb
and
vfnmsub132sd
bnd
jno
pop
out
into
inc
repnz
xor
adc
push
sbb
mov
xor
mov
ss
mov
cld
fdivr
pop
pop
and
inc
adc
sti
cli
mov
loope
nop
sbb
jge
sub
in
jl
(bad)
call
push
pop
mov
mov
rcl
out
out
xchg
adc
mov
mov
iret
pop
xchg
iret
and
adc
or
inc
xor
xor
int
dec
ins
cmp
jb
push
cwde
inc
jp
and
pop
inc
mov
lahf
mov
cs
sub
or
jne
sub
stc
sbb
(bad)
fdivr
bound
jb
std
jecxz
pushf
(bad)
sbb
stc
fwait
sub
pushf
loopne
and
push
in
jae
jge
xchg
aad
add
test
and
idiv
ror
or
dec
jbe
movs
mov
jge
cmp
jecxz
arpl
retf
mov
sub
dec
mov
pusha
popf
xchg
xchg
xchg
sbb
add
adc
lea
dec
jbe
fisttp
clc
cmp
xor
ds
jns
and
mov
int
xor
pop
lahf
aas
(bad)
sti
jne
mov
jp
fstp
sbb
adc
xlat
sbb
(bad)
fsubr
xchg
inc
mov
retf
xchg
pop
lds
xor
pop
bound
push
mov
mov
lahf
mov
movs
inc
pop
fidivr
xor
enter
adc
jo
xchg
(bad)
cli
xchg
inc
vmwrite
mov
adc
xchg
dec
outs
movs
dec
fldcw
mov
cli
lock
or
(bad)
out
dec
xor
sub
dec
movs
cmc
mov
aas
inc
xlat
iret
movs
(bad)
and
mov
mov
adc
push
aaa
pop
mov
ins
(bad)
xchg
inc
mov
xor
fimul
mov
push
lock
sar
ret
mov
mov
hlt
out
std
adc
pop
pushf
mov
cmps
jnp
xchg
mov
shr
xchg
add
out
adc
lds
pop
arpl
inc
inc
ret
and
xor
daa
push
add
inc
clc
sub
adc
adc
or
imul
jno
fdivp
in
je
aad
jbe
mov
ret
inc
mov
and
dec
nop
scas
mov
sar
bound
neg
mov
sub
dec
or
or
mov
cs
add
movs
add
(bad)
in
ret
xlat
fadd
sar
test
cmp
into
aaa
inc
mov
cmp
dec
pop
mov
fwait
mov
popaw
ret
test
fwait
aad
loope
cmc
ins
scas
sub
or
push
test
test
or
(bad)
inc
jle
adc
sbb
and
imul
xchg
addr16
lock
in
repnz
mov
inc
push
dec
retf
mov
push
popf
and
push
xor
pop
iret
es
cmc
movs
pop
nop
jnp
ror
mov
inc
pop
mov
imul
in
lea
sahf
and
xchg
mov
adc
pop
mov
mov
neg
(bad)
lahf
test
inc
adc
and
add
jnp
dec
jb
jae
adc
xor
and
out
xor
inc
mov
adc
pushf
pop
jmp
or
out
in
je
popa
clc
dec
mov
pop
in
jecxz
arpl
retf
mov
pop
mov
addr16
sahf
les
js
fndisi(8087
cmp
out
inc
add
popf
pop
(bad)
iret
push
in
rcr
adc
or
pop
jp
push
sbb
adc
test
ds
jae
not
fcmovnbe
enter
fstp
push
xor
mov
or
xor
and
outs
pop
dec
adc
daa
adc
int3
add
add
add
fwait
sar
pop
xor
pop
aaa
hlt
adc
jge
mov
aas
and
ret
test
out
jnp
ret
dec
mov
pop
xlat
fwait
test
and
es
inc
xchg
push
mov
mov
retf
xor
es
ret
pop
shl
jne
sbb
mov
xchg
inc
out
push
xchg
xor
mov
lea
cmp
out
or
shl
fsubrp
inc
mov
sub
pop
rol
mov
leave
dec
or
retf
into
xchg
pushf
mov
xor
pop
inc
pop
mov
pop
xor
(bad)
aam
daa
test
adc
dec
ret
adc
push
push
cmp
daa
data16
cwde
pushf
fs
xchg
lea
sub
shl
sbb
nop
xor
add
xor
xlat
fisttp
out
mov
mov
and
xchg
mov
or
jae
push
(bad)
pushw
test
and
test
cld
cmp
fwait
rcr
not
test
pop
push
inc
mov
xor
or
sub
and
inc
gs
adc
sbb
bound
pop
cwde
out
push
mov
test
pop
jno
push
iret
psadbw
and
pushf
dec
cmps
loopne
jae
in
js
das
leave
cwde
and
and
push
or
sbb
les
data16
push
pop
inc
lock
jne
and
ins
dec
xchg
out
sbb
push
popa
in
xchg
cmp
psubusw
and
int3
mov
enter
aas
ds
je
sar
in
pop
xchg
(bad)
pushf
fdivrp
xchg
mov
pop
xor
mov
dec
cmp
xchg
jle
cmp
push
jae
sahf
mov
xor
movs
in
lds
sbb
mov
and
mov
push
mov
jmp
sub
(bad)
outs
mov
adc
mov
lea
ins
out
inc
lods
addr16
mov
in
pop
mov
jecxz
pop
dec
or
sbb
pop
mov
fldenv
add
loop
fcomip
mov
arpl
lea
cli
sbb
jp
cmp
push
out
dec
mov
je
and
test
xlat
lods
adc
xchg
jp
outs
hlt
inc
lock
dec
jmp
in
leave
xchg
jp
shl
or
ja
cmp
jl
or
popf
xor
dec
scas
sahf
push
and
imul
inc
inc
imul
and
add
int
test
dec
sub
je
pop
(bad)
jmp
sbb
cmp
mov
call
and
sub
pusha
leave
test
int
pop
retf
enter
push
loop
clc
rol
ja
in
cmp
xchg
call
xor
add
add
aam
je
jmp
push
jae
popf
cmp
pop
xor
add
inc
cmc
mov
xchg
ins
xchg
stos
sub
out
call
jl
adc
aaa
fadd
sbb
movs
test
sbb
shr
and
push
add
jmp
imul
shl
pop
(bad)
sar
ss
stc
cmp
outs
loopne
ror
sub
and
sub
mov
in
dec
pushf
or
mov
mov
adc
mov
or
add
pop
and
xlat
loopne
add
or
add
scas
pop
mov
in
push
cmp
and
in
push
pop
fidivr
jp
xchg
xor
push
jl
(bad)
bound
loope
pop
dec
mov
or
cmc
mov
pop
imul
rol
cld
nop
sub
adc
and
jo
add
pop
cmc
jne
mov
(bad)
mov
and
dec
movs
mov
in
rcl
fcmove
fs
xchg
leave
ja
je
shl
jnp
in
and
add
mov
in
ficomp
addr16
jmp
mov
cmp
cmp
mov
push
scas
sbb
ret
add
xor
(bad)
xor
retf
cdq
popa
sub
mov
movs
mov
or
push
jmp
test
add
fst
dec
cmps
mov
setae
xchg
sbb
or
add
add
jl
ja
rcl
mov
in
or
adc
gs
or
mov
pop
lds
mov
push
push
repz
pop
in
jne
or
or
test
pusha
mov
xor
cld
cdq
jne
shl
aas
jo
xor
dec
push
sbb
call
ja
xchg
pop
jg
jecxz
loope
loop
pinsrw
aaa
mov
lds
stos
repnz
fcomp
test
ja
fwait
jge
mov
inc
imul
add
jp
popf
les
jae
(bad)
adc
add
mov
pop
lods
inc
xchg
add
adc
xlat
mov
int3
icebp
cmp
mov
mov
pop
fdiv
repnz
jae
sub
xor
fcomp
out
outs
idiv
arpl
add
jmp
lds
popa
sub
ja
dec
mov
jnp
movs
add
jmp
mov
and
cmc
out
les
inc
sahf
in
lahf
mov
mov
xor
ins
cwde
adc
out
test
push
call
lods
mov
jl
in
jle
pop
frstor
cs
sub
xchg
sti
iret
cld
mov
adc
mov
aaa
shl
jp
fcom
cmps
mov
adc
scas
push
adc
pop
mov
inc
add
push
xchg
fwait
cmps
sti
mov
(bad)
push
test
cs
shl
push
push
jno
xchg
push
inc
push
movs
xchg
mov
rcl
jmp
repnz
ret
jo
push
lods
outs
dec
or
pusha
test
or
sub
(bad)
mov
in
pop
dec
fcmovne
pop
xor
aad
push
sub
(bad)
lea
sbb
push
mov
sti
repz
pop
inc
sub
mov
sbb
ret
and
into
push
and
and
int
repz
out
movs
in
test
jge
test
jb
mov
push
mov
mov
fadd
(bad)
mov
inc
outs
or
xor
(bad)
pop
fdivp
xor
or
jl
popf
aad
inc
pop
push
pusha
mov
cmps
in
and
mov
adc
adc
loop
lds
push
xchg
mov
pop
into
pop
popa
ja
mov
pop
pushf
push
sahf
iret
in
sub
ss
pop
adc
mov
hlt
adc
sub
xor
adc
and
push
jnp
data16
fisub
inc
daa
pop
push
jns
pusha
in
pop
pusha
scas
in
xor
fwait
sub
and
mov
cli
cwde
test
cmps
movs
mov
mov
lahf
pop
xchg
cld
mov
cdq
aas
mov
add
(bad)
sahf
rep
in
dec
jecxz
push
mov
dec
inc
cmp
xor
mov
enter
test
mov
pop
(bad)
cmp
sub
or
pop
push
or
imul
sahf
stos
push
pop
(bad)
mov
int
or
jb
aas
jbe
out
ins
mov
dec
sub
dec
mov
imul
lods
sub
ficomp
push
dec
stos
out
inc
cld
pop
test
mov
ins
(bad)
add
lock
xchg
cmp
retf
jo
and
(bad)
ds
cli
lds
adc
inc
fild
popa
push
cs
cld
cmp
cmp
or
test
cmp
shr
inc
adc
jbe
sub
sub
xchg
pushf
pop
fcomp
jns
jbe
retf
popf
popf
or
xor
sbb
xlat
aam
(bad)
rcl
(bad)
jp
push
pushf
pusha
lds
sahf
je
add
xchg
test
pop
mov
adc
xor
mov
fistp
dec
sub
xor
mov
pop
mov
mov
lea
add
pushf
enter
dec
repz
js
fsubr
jle
in
in
push
adc
fwait
cs
adc
inc
xor
or
push
xor
sub
or
mul
add
sub
add
aas
xchg
je
sbb
cmps
je
cmp
in
test
add
nop
or
jecxz
nop
in
loopne
lods
xchg
rcr
cmp
cmps
(bad)
dec
add
sti
inc
imul
cmp
or
into
in
pop
mov
push
inc
gs
sbb
dec
cs
nop
xor
push
jg
mov
jp
test
cmp
arpl
mov
gs
hlt
push
and
stc
ins
lods
xchg
add
jge
push
jmp
js
push
xchg
jnp
xchg
mov
pusha
sti
ret
xchg
xchg
call
mov
ins
ret
inc
jo
xor
inc
inc
adc
js
in
inc
popa
mov
xchg
sbb
dec
xchg
lods
push
jge
xor
out
(bad)
(bad)
xor
call
mov
(bad)
sti
xor
in
and
pop
ins
(bad)
sub
jno
imul
xchg
push
xchg
dec
mov
add
imul
xchg
movs
movs
ins
xchg
pop
(bad)
cmp
mov
out
add
lods
cs
jo
arpl
sar
sbb
or
push
fst
aad
and
mov
test
fiadd
shl
mov
mov
es
icebp
push
pop
cwde
cs
sub
xchg
fstp
stc
push
test
mov
mov
push
mov
mov
rcl
mov
sar
cmc
icebp
push
xchg
cmps
stc
(bad)
push
fsubr
(bad)
cmp
repz
enter
scas
mov
sub
(bad)
cmp
and
iret
add
loope
mov
jecxz
xchg
jecxz
push
xlat
imul
cmp
and
aam
lea
and
nop
int
in
jmp
leave
leave
jno
aam
mov
retf
mov
ja
popf
or
rcl
push
lahf
lods
cmp
sti
loopne
ss
fwait
cmps
out
xchg
out
gs
pop
pushf
fist
enter
push
cwde
nop
fst
lock
test
neg
xchg
retf
push
jl
aad
stos
cmp
dec
xchg
ins
inc
dec
mov
hlt
out
shr
dec
aaa
xchg
jmp
pop
loope
lds
dec
shr
jno
lea
ss
cmp
shl
ja
and
jbe
mov
inc
push
ja
add
cld
fsubr
mul
call
popa
sbb
inc
push
stos
and
aas
jne
xor
fsubr
(bad)
push
data16
nop
xor
push
ss
sub
jecxz
adc
ins
mul
xchg
or
aas
call
xchg
mov
adc
pop
test
sub
bound
cmp
lea
pop
adc
fisttp
movs
mov
rcl
dec
dec
mov
pushf
cmc
cmp
mov
mov
cmp
dec
adc
push
cmp
lahf
outs
neg
and
xchg
mov
mov
outs
jl
ret
je
fwait
add
xchg
add
ss
mov
xlat
add
loopne
test
push
sbb
sub
adc
push
inc
stos
xchg
fld
cmp
cli
aaa
jmp
xor
add
sub
cmps
repz
mov
fcmovb
lock
jne
es
jb
out
mul
and
test
xor
outs
cli
sub
mov
inc
outs
sbb
add
add
daa
mov
pop
movs
test
jmp
cwde
jmp
popa
inc
adc
pop
inc
ror
retf
dec
in
sahf
out
cld
repz
popf
push
ins
popa
sbb
in
add
and
xlat
out
cwde
lods
mov
daa
jno
dec
aaa
(bad)
jg
stos
inc
push
pop
jl
jns
jmp
(bad)
mov
xor
aad
jno
xor
push
pop
cmp
popa
fcomp
mov
dec
pop
mov
outs
fs
sub
mov
and
adc
(bad)
mov
xor
inc
in
jge
pop
aam
test
ds
stos
hlt
inc
fwait
sbb
scas
push
jbe
outs
adc
sub
jae
inc
inc
push
dec
daa
jne
retf
push
mov
mov
inc
or
shl
ins
jns
loopne
jmp
outs
cs
jns
mov
bound
test
sub
popa
out
addr16
sbb
cs
pop
nop
arpl
jl
retf
dec
jge
pop
and
outs
(bad)
sahf
(bad)
in
cmp
call
pop
xchg
sub
dec
enter
jp
pop
jl
sbb
add
daa
pop
clc
push
mov
retf
push
mov
out
aas
ret
xor
mov
inc
adc
(bad)
dec
pop
loopne
fild
add
repz
mov
add
jle
jmp
popa
xor
push
push
jmp
add
aaa
jg
add
out
(bad)
dec
xchg
inc
sbb
push
or
xchg
ret
ds
pop
mov
cli
dec
sar
jnp
shl
(bad)
loopne
xor
out
sub
jl
aas
out
jl
add
add
movs
ja
fs
test
xchg
sbb
(bad)
push
dec
mov
pop
sbb
sbb
nop
fimul
xchg
sahf
loopne
dec
pop
ret
daa
scas
pop
xchg
jl
mov
cmp
jg
pop
dec
out
mov
iret
dec
add
retf
cs
push
sbb
jg
(bad)
mov
jmp
in
mov
push
add
(bad)
or
out
gs
stc
div
loop
mov
inc
push
lock
xchg
inc
push
or
lds
(bad)
outs
loope
loop
and
sti
xor
test
inc
jmp
add
stos
fcmovu
xchg
(bad)
retf
bound
pop
xchg
cwde
in
push
cs
push
lods
pop
sahf
inc
push
jnp
or
mov
xlat
cld
add
call
je
push
adc
pop
pop
daa
push
sbb
ret
data16
fisub
(bad)
mov
leave
das
aas
repz
jp
jnp
jmp
pop
mov
jmp
adc
ins
or
xor
mov
push
xor
xlat
imul
out
mov
pop
cmp
lea
pushf
push
in
int3
loop
adc
add
and
call
retf
call
into
aam
xchg
out
adc
pop
(bad)
jae
je
cmp
dec
sbb
fidivr
lahf
pop
arpl
nop
ins
mov
sub
cmp
jmp
jg
in
gs
mov
and
mov
inc
inc
call
mov
cdq
gs
pop
and
lock
fbld
mov
inc
cmp
lods
retf
xor
and
cwde
sub
push
sbb
out
jge
xor
in
push
jg
data16
jecxz
sahf
xor
std
push
scas
(bad)
data16
jmp
dec
dec
retf
jge
add
or
xor
int3
imul
pop
fstp
pop
xchg
div
test
dec
stos
sub
cmp
repnz
aaa
and
add
icebp
jno
ins
push
repz
test
jbe
ret
mov
imul
sub
(bad)
cmc
xor
lods
pop
popf
icebp
retf
int3
call
push
fistp
jo
les
add
nop
jle
sbb
jl
bound
adc
mov
stc
push
and
into
cdq
cdq
jne
sub
clc
movs
lock
imul
int3
es
(bad)
jae
push
pop
sbb
imul
cli
sbb
lds
test
fucomi
xor
mov
aas
xchg
mov
ror
adc
cld
cmp
mov
sahf
addr16
leave
push
lock
push
cmps
fcmovnu
or
fimul
sub
mov
and
cdq
icebp
andnps
fwait
inc
mov
sub
fucom
retf
sahf
clc
cmp
pop
sub
test
pop
ins
jg
dec
sbb
call
and
lds
(bad)
jne
test
loopne
sub
mov
xchg
cmp
add
sub
sbb
call
mov
out
pop
xor
mov
imul
pop
fmul
push
jae
sbb
rol
shl
retf
jmp
or
jae
out
out
sub
xchg
xor
imul
push
xchg
(bad)
cli
inc
shl
push
push
adc
(bad)
les
jno
push
jo
inc
inc
je
movs
bound
dec
jnp
movs
pop
pop
xor
ins
stos
bound
(bad)
js
icebp
xor
inc
cld
repz
pop
inc
into
inc
scas
es
inc
sub
dec
std
ja
sub
xor
push
shl
pop
aam
xlat
pop
xchg
out
mov
cmove
mov
pop
dec
div
mov
xchg
and
loope
xor
pop
jne
jmp
add
mov
rcl
sbb
pop
sti
(bad)
loope
mov
sub
daa
div
in
sahf
sbb
jb
and
int3
fs
cmps
out
mov
jecxz
(bad)
(bad)
jmp
mov
mov
cs
out
scas
cmc
cmp
cmp
inc
fistp
mov
pop
fdiv
inc
mov
adc
(bad)
adc
mov
aam
loopne
fadd
push
cmp
dec
imul
out
std
mov
repz
mov
jno
ins
nop
pushf
jo
mov
int3
int3
and
test
loope
mov
jno
cmps
push
push
leave
dec
pop
or
xchg
mov
and
(bad)
xor
push
push
mov
cwde
push
mov
sbb
sub
pusha
fcomp
and
xor
mov
enter
cmp
arpl
loop
in
xor
pop
mov
hlt
clc
sbb
out
push
test
(bad)
xlat
xor
mov
out
clc
jecxz
ja
(bad)
ja
push
shl
popf
ds
mov
imul
dec
jl
ja
loope
out
leave
add
xchg
(bad)
fimul
inc
or
and
test
add
xchg
fsubr
lods
xchg
sbb
mov
dec
jmp
int
or
pop
adc
(bad)
fnstcw
retf
jae
ins
aas
jo
lahf
add
push
jno
adc
mov
mov
shr
xchg
xchg
xchg
xchg
(bad)
add
jg
dec
mov
sub
out
outs
mov
cs
jecxz
ins
mov
mov
loope
dec
bound
xor
or
push
jbe
sub
cld
js
pop
lock
in
cmp
out
stos
nop
or
mov
adc
test
mov
bound
xchg
popf
nop
aad
(bad)
stos
or
fdiv
xchg
adc
jb
iret
ret
dec
movs
xor
test
or
push
sub
repnz
outs
sub
cvtps2pi
jp
dec
xor
cs
jl
push
retf
fwait
data16
xlat
fdiv
ss
sub
dec
aaa
inc
rcl
cdq
mov
pop
cdq
inc
adc
sbb
dec
add
test
gs
ret
ret
xor
sbb
scas
inc
dec
and
loop
and
cwde
fisubr
adc
loope
(bad)
sti
loope
adc
xor
mov
or
jne
mov
fnstsw
sub
dec
jl
mov
cld
mov
cld
ins
jge
in
jb
clc
ins
push
push
fld
cmp
sbb
mov
add
mov
jge
rol
call
fisttp
leave
shl
inc
fisttp
test
js
push
int
xchg
cmps
stos
add
sub
adc
mov
or
and
mov
push
pusha
mov
push
dec
scas
fwait
repz
inc
bound
out
sub
mov
lahf
push
mov
xchg
ins
ret
pop
ss
stos
adc
vphsubdq
lods
mov
imul
aad
fstp
ds
xchg
xor
and
inc
data16
push
or
test
mov
fistp
enter
lods
aam
xchg
mov
and
add
je
dec
retf
or
xchg
popf
(bad)
jns
adc
jne
mov
cmc
push
cmp
ret
repz
fdivr
jmp
retf
mov
aaa
mov
and
jmp
(bad)
enter
ss
or
shl
leave
jns
mov
jnp
cmp
retf
ret
movs
xchg
xchg
sbb
in
push
adc
sub
mov
add
(bad)
dec
pusha
out
cwde
inc
dec
test
xchg
jbe
xchg
loop
ja
in
sahf
and
arpl
cwde
add
add
scas
add
std
loopne
or
sbb
scas
xchg
jecxz
and
aam
retf
enter
inc
and
mov
pop
hlt
cmps
je
xchg
inc
scas
loope
push
(bad)
stos
fist
or
jecxz
nop
dec
in
call
imul
mov
mov
or
or
add
sar
and
mov
xchg
fimul
imul
jae
rcl
mov
adc
mov
icebp
dec
add
and
sbb
add
jmp
fild
inc
push
fwait
push
mov
in
jne
addr16
ror
mov
mov
dec
add
stos
mov
adc
loopne
pushf
mov
sub
mov
mov
out
into
dec
cli
cs
push
xchg
lahf
sti
pop
xchg
push
or
gs
cmps
hlt
out
ja
push
push
sbb
lea
stos
sub
lds
mov
add
mov
mov
data16
cmp
dec
cmps
sub
out
dec
pop
pop
fisubr
mov
sub
mov
or
inc
push
inc
pop
dec
xor
mov
jae
xor
pop
in
or
and
ror
sbb
pusha
fbld
mov
or
nop
sub
pop
outs
mov
jge
ret
push
dec
enter
bound
cmps
adc
sbb
add
sub
inc
mov
movs
inc
mov
mov
gs
xchg
jge
mov
jbe
dec
and
mov
fnsave
jle
dec
ret
(bad)
dec
(bad)
xchg
add
into
push
xor
cmp
dec
push
dec
jo
sub
pop
mov
push
inc
pop
mov
mov
out
shl
gs
xchg
test
nop
pop
dec
dec
hlt
je
inc
jb
test
or
pop
pop
rcl
add
push
jbe
xor
sub
icebp
pop
inc
and
cmps
lds
aaa
and
xor
mov
pusha
jmp
push
push
push
mov
push
test
mov
push
pop
(bad)
adc
(bad)
leave
lahf
sub
push
sbb
clc
mov
sub
div
cli
jp
push
(bad)
cmp
xor
out
and
test
cli
gs
cmp
push
mov
repnz
or
add
jne
mov
or
cmp
jo
or
dec
adc
cmps
sbb
rol
(bad)
es
fldcw
cmp
and
xor
mov
(bad)
out
xor
clc
or
push
mov
dec
int3
call
adc
dec
aaa
adc
icebp
pop
(bad)
(bad)
mov
in
movs
cmps
mov
pop
cdq
cld
mov
lds
mov
add
mov
dec
or
sub
adc
mov
outs
enter
mov
mov
mov
pop
xchg
dec
dec
aam
aas
or
push
mov
ret
stos
leave
imul
out
ja
push
inc
cwde
push
mov
cmp
ins
sub
cwde
dec
push
mov
mov
cmps
jmp
in
dec
imul
inc
icebp
iret
retf
test
xchg
sbb
call
(bad)
fcomp
out
cmps
or
pop
dec
mov
popa
cli
push
hlt
dec
ja
movs
push
popa
xchg
movs
outs
inc
pop
sbb
(bad)
xchg
push
fild
retf
dec
mov
sbb
jmp
add
std
jg
pop
cmp
adc
jle
imul
sar
or
retf
in
jmp
inc
inc
mov
pop
ja
not
(bad)
mov
jmp
sbb
pop
jne
cmp
xor
jmp
pop
and
call
pop
std
lea
jae
jle
sub
sub
adc
push
aad
cmp
in
leave
daa
in
push
into
pop
mov
test
push
inc
push
movs
jo
mov
inc
and
and
in
aam
jmp
or
pop
add
stos
hlt
xchg
push
icebp
push
pop
cmp
sahf
mov
mov
pand
ret
aad
fsub
or
adc
xchg
cmp
mov
mov
movs
mov
in
mov
xor
(bad)
xchg
inc
test
xchg
outs
stc
aas
sub
aas
xor
jbe
popa
mov
sbb
xor
cmps
sub
retf
aam
leave
jle
fld
sub
popa
jg
in
mov
sub
enter
ror
gs
std
sub
adc
leave
pop
jnp
imul
dec
inc
mov
adc
xor
int
jg
pushf
cmps
pop
pop
mov
jnp
or
or
aad
dec
mov
aam
mov
(bad)
fild
fistp
xchg
in
mov
mov
sbb
pand
cmps
(bad)
push
cs
lock
ins
(bad)
dec
cmp
mov
add
mov
lea
inc
push
mov
hlt
push
mov
call
in
repnz
inc
repnz
ja
dec
into
push
cmp
popa
mov
xlat
jae
in
jecxz
xchg
int3
outs
adc
xor
leave
add
dec
stc
outs
outs
inc
in
ins
push
repz
dec
xchg
aaa
jg
push
shr
push
jge
cmp
pop
sar
xchg
mov
div
ins
sbb
xor
inc
test
and
jae
inc
lahf
inc
movs
inc
je
div
or
dec
xchg
xchg
or
mov
jecxz
(bad)
out
fistp
ins
or
lock
push
fild
leave
jae
aad
mov
xchg
mov
jns
aad
mov
cmp
and
(bad)
in
je
sbb
out
sbb
ror
das
xchg
mov
cmps
mov
lea
sub
out
call
icebp
xor
gs
loope
fwait
loopne
mov
stc
je
cmp
or
or
div
and
add
neg
lods
or
push
sbb
lods
mov
cmps
mov
add
adc
retf
cmp
mul
cs
inc
and
push
push
sbb
paddusw
add
xchg
push
mov
ror
jae
bound
sbb
cmc
or
sub
into
mov
or
xor
(bad)
movs
xor
sahf
loop
out
leave
test
jb
loopne
scas
rcr
push
pop
jno
cmp
and
rol
in
retf
inc
iret
xchg
mov
ret
push
out
mov
add
shl
gs
icebp
mov
das
das
jmp
or
call
imul
fnsave
mov
push
jae
sub
push
adc
std
cmp
mov
outs
xchg
repnz
xor
movq
mov
out
cmps
aaa
mov
retf
call
sub
push
aad
add
adc
fsubr
loop
pop
lods
mov
lahf
add
(bad)
and
push
int
mov
lods
ret
xor
into
jmp
mov
out
pop
(bad)
(bad)
push
mov
dec
(bad)
mov
sahf
dec
loopne
dec
xor
mov
jp
and
or
pop
jl
aam
add
push
and
pop
ret
add
pop
dec
push
jne
enter
or
rol
pop
and
fadd
popf
in
jo
into
mov
pop
ret
cmp
jmp
mov
loope
(bad)
jbe
jecxz
stc
js
push
(bad)
xchg
cdq
xchg
ins
je
pop
mov
shr
ins
jmp
in
jnp
and
mov
cwde
xchg
and
xor
push
pop
adc
mov
mov
jns
retf
sub
dec
mov
fdivr
jecxz
xor
loope
into
leave
(bad)
stc
add
pusha
mov
mov
pop
sahf
sub
imul
div
push
into
and
xor
movs
cs
jge
xor
jb
and
mov
js
outs
movs
dec
sub
xchg
aad
lods
hlt
sbb
retf
jno
int3
mov
dec
sub
jne
add
cs
mov
push
fmul
xchg
mov
push
or
push
loopne
out
adc
ja
inc
inc
pop
pop
or
cmc
test
mov
arpl
push
add
and
iret
loop
push
icebp
add
jmp
repnz
adc
push
stos
lahf
iret
and
and
and
push
add
or
pop
mov
mov
popf
aas
daa
xchg
mov
jmp
ins
test
or
sub
lods
pop
in
inc
test
fild
(bad)
push
into
scas
test
dec
aaa
(bad)
mov
jp
fstp
retf
hlt
mov
add
xchg
adc
test
pop
mov
clc
arpl
or
lock
pop
xchg
xchg
test
xchg
sub
aad
push
aas
mov
sbb
pushf
ss
iret
stos
stos
xchg
aad
sub
stc
and
push
rcl
jno
jae
inc
cdq
sbb
push
std
xor
lods
sahf
xor
push
pop
add
sub
pushf
and
sub
xor
dec
std
shr
mov
rcl
adc
pusha
sub
test
fstp
imul
and
lahf
cmp
pop
jae
sbb
pop
fild
mov
xchg
rol
xchg
or
cmps
cmps
out
mov
mov
jecxz
ds
ror
shl
or
scas
leave
lds
or
ret
cmp
or
pop
lds
enter
in
adc
push
mov
push
mov
dec
add
outs
int
nop
cdq
test
xor
mov
sbb
mov
out
aam
ss
cmc
push
daa
hlt
cmp
sbb
stos
loope
daa
jge
and
outs
(bad)
test
pop
mov
xor
add
ja
lahf
xchg
add
sti
jne
mov
sub
cmps
jp
cmp
xchg
sub
leave
inc
sbb
pop
imul
jmp
push
jb
fisubr
popa
(bad)
movs
scas
dec
or
pop
popa
(bad)
sahf
push
mov
dec
retf
dec
jp
jb
(bad)
in
js
ins
call
mov
adc
out
mov
adc
jo
(bad)
dec
sbb
jne
mov
lods
pop
sbb
aad
jecxz
adc
push
cs
repz
sar
movs
or
jae
sbb
aam
jecxz
sbb
fs
lds
stos
pop
cmp
les
xchg
inc
add
xor
cmpps
ins
xchg
xlat
outs
mov
shr
jae
clc
int3
add
sbb
mov
mov
jnp
imul
add
pop
jp
and
pop
ja
push
stos
sub
pop
xchg
pop
in
pop
inc
ret
out
mov
out
push
repz
jb
cwde
mov
(bad)
pushf
cli
push
mov
shl
pop
outs
fs
jg
push
xchg
cmp
fst
lock
add
nop
xchg
jne
sbb
inc
cmp
adc
sbb
inc
call
shl
std
cld
xchg
cli
repnz
leave
adc
out
or
xchg
in
test
dec
dec
mov
movs
mov
mov
idiv
ins
ins
inc
add
enter
iret
mov
mov
sub
in
dec
pop
neg
pushf
cdq
pop
adc
popa
out
bound
std
enter
das
mov
cwde
dec
sti
lock
dec
jae
adc
push
loopne
sbb
sbb
pop
lds
aaa
addr16
jb
test
out
push
or
adc
pop
sti
retf
pop
sub
sub
jne
test
arpl
pop
nop
jns
or
mov
lods
clc
add
add
and
mov
cwde
stc
lods
dec
cdq
rcr
xchg
xchg
fsub
cvtps2pi
xchg
mov
mov
adc
je
jnp
mov
popa
dec
inc
push
push
mov
fld
jno
aam
movs
sub
add
xchg
pop
sub
or
stc
cmc
add
sub
out
sub
imul
mov
call
and
mov
jmp
out
(bad)
pop
test
nop
xchg
and
cli
pop
jp
loop
stos
out
call
inc
sbb
shr
fucomi
out
pusha
jl
add
iret
xchg
push
call
es
inc
retf
or
fwait
mov
jb
jns
div
in
mov
(bad)
ds
mov
popfw
mov
gs
mov
jecxz
inc
push
and
not
adc
mov
pop
addr16
jmp
add
push
in
add
mov
mov
in
fisttp
dec
loopne
das
js
fs
ror
push
aaa
cs
icebp
(bad)
xchg
push
hlt
outs
aas
rol
int
fbld
inc
jo
cmc
and
xor
retf
and
push
add
(bad)
aam
or
dec
mov
imul
pop
sti
cmp
cdq
call
jbe
pand
cmp
and
pop
out
cmc
inc
mov
push
stc
mov
shr
scas
das
aam
sti
and
jae
mov
cmp
ret
xor
rcl
add
leave
mov
js
imul
cmc
mov
clc
add
cmps
cmp
inc
mov
(bad)
arpl
sbb
repz
add
push
out
and
(bad)
(bad)
pminsw
ins
lods
fnstsw
test
add
push
lahf
jg
js
test
or
test
xchg
iret
retf
shr
push
xor
cli
pop
dec
stc
adc
adc
pusha
iret
xchg
xor
ror
or
pop
fwait
mov
ror
pop
xor
push
data16
xchg
sar
fidiv
mov
or
jp
fadd
cld
push
fwait
sub
fidivr
ds
xchg
xor
movs
pusha
fiadd
les
(bad)
daa
xchg
loope
xchg
xchg
cmp
push
mov
scas
mov
sbb
shl
test
es
add
and
loopne
out
pop
ret
pop
pop
xor
daa
dec
(bad)
cdq
imul
inc
je
ja
inc
or
mov
ins
inc
cmp
in
inc
adc
cld
arpl
xchg
push
push
pop
fdivr
xor
aaa
movs
adc
in
xchg
jge
add
xchg
inc
(bad)
sti
scas
stos
or
jl
add
leave
div
gs
xchg
retf
movs
sbb
pop
vrcp28pd
push
and
(bad)
js
lods
or
mov
and
loope
push
das
test
jmp
xchg
les
aas
repnz
mov
cmp
and
pushf
mov
mov
sbb
adc
xor
mov
pop
mov
mov
neg
into
les
dec
out
sti
cmc
ret
inc
aaa
loope
sub
stos
ror
jge
xchg
or
aas
pop
adc
ret
xor
add
fstp
(bad)
xchg
bound
hlt
mov
add
js
shr
jno
ins
call
cli
mov
or
add
fadd
call
fldl2t
daa
inc
pop
popf
dec
xor
mov
mov
xor
pop
push
cli
mov
xchg
push
cld
sbb
jbe
dec
adc
xchg
sbb
test
inc
call
push
imul
xor
scas
daa
daa
xchg
mov
repz
push
daa
sub
sets
or
les
sbb
adc
and
in
push
jnp
mov
mov
popa
xchg
add
fscale
mov
lahf
mov
adc
lods
mov
or
add
repz
test
dec
mov
ss
dec
je
push
inc
jae
inc
cmc
mov
pop
push
xchg
fwait
jp
push
mov
aad
popf
mov
movs
rcl
pop
sub
scas
(bad)
lahf
sub
(bad)
push
pop
addr16
push
icebp
repnz
out
and
sti
into
jp
push
xor
enter
jmp
jle
(bad)
adc
in
add
push
wbinvd
repnz
test
push
fadd
mov
cli
mov
cmp
adc
xchg
jp
in
push
mov
sbb
or
push
out
push
and
(bad)
imul
jge
dec
je
loopne
shl
(bad)
test
(bad)
or
(bad)
(bad)
pop
cs
out
mov
ins
adc
les
sbb
rcr
cwde
mov
xchg
icebp
xchg
test
mov
sbb
push
inc
je
ffree
pop
jo
cmps
sub
jo
sbb
enter
and
mov
mov
jg
mov
push
lahf
clc
push
sbb
sbb
xor
pusha
arpl
hlt
in
sub
rcl
fnstcw
enter
repz
xchg
jae
sub
adc
pop
pop
mov
out
or
jmp
and
mov
(bad)
out
ror
test
push
rol
loop
and
jle
neg
jl
push
rol
push
scas
gs
bound
mov
cmp
push
push
stc
sub
mov
cmp
dec
xchg
jmp
aad
popa
xor
pop
pushf
mov
aaa
popf
iret
sub
sahf
outs
xchg
enter
test
cmc
inc
outs
xlat
cmp
sub
mov
jb
push
sub
scas
ins
add
add
mov
fisttp
je
cmp
call
inc
lods
retf
add
push
jno
mov
xor
mov
in
pushf
retf
jp
test
xchg
dec
sub
(bad)
sti
mov
sbb
stc
imul
mov
das
sbb
sbb
rol
(bad)
mov
lods
sub
jecxz
rcr
xchg
dec
jae
mov
push
fidivr
mov
inc
pop
icebp
cmp
inc
scas
rcl
fnop
mov
in
jns
sub
jb
jmp
loope
stos
jg
cmp
sbb
dec
cmp
pop
inc
cmc
or
push
sbb
sbb
pop
pop
cmp
iret
push
cmp
fimul
mov
icebp
loope
lock
mov
lahf
adc
xchg
dec
adc
adc
lods
push
and
jns
je
or
push
gs
jmp
mov
imul
cmp
and
sbb
xchg
shr
add
test
dec
into
and
jmp
lods
sub
out
aas
mov
pop
lahf
imul
adc
jmp
push
jge
das
sahf
imul
push
shl
aaa
cmps
adc
mov
jae
mov
ds
jno
hlt
shl
(bad)
xchg
inc
xchg
xor
xor
icebp
test
fnstsw
data16
pop
jmp
stos
pop
ret
push
and
pop
jmp
and
pop
ror
mov
push
(bad)
jns
std
jbe
inc
aam
or
lods
dec
mov
xchg
inc
into
jmp
mov
cmp
test
push
inc
lock
and
int
adc
lds
ja
mov
jnp
mov
mov
mov
fldenv
xchg
(bad)
into
sbb
pop
sub
xchg
or
psubb
leave
xor
arpl
jns
jb
icebp
xchg
mov
call
jbe
out
sbb
jmp
cli
retf
jl
lods
jmp
js
jmp
aam
rcr
mov
cs
dec
outs
fimul
cmp
gs
push
add
fmul
inc
fsubr
adc
xchg
push
push
in
cld
out
cli
xor
sar
xchg
xor
xor
ficom
mov
outs
jmp
inc
xor
and
or
popa
xor
outs
mov
jp
mov
mov
popa
and
xor
sub
xor
add
sub
mov
xchg
(bad)
jp
push
jle
mov
xor
sbb
ret
inc
fucom
hlt
jg
fidivr
stos
xchg
cmps
inc
cwde
inc
fwait
jb
and
mov
loop
outs
aas
bound
imul
mov
and
scas
shr
mov
adc
mov
mov
mov
leave
or
mov
jno
pop
iret
mov
adc
cmp
jg
rol
and
pop
out
pop
pop
outs
xchg
push
push
mov
into
ins
pushf
mov
sbb
sub
mov
lods
ins
cwde
in
test
adc
sti
(bad)
pop
in
aaa
repnz
or
push
cmp
test
test
mov
stos
in
addr16
lds
fwait
sbb
jnp
icebp
dec
rcr
add
sub
aaa
imul
cmp
and
shl
sti
aas
fwait
jns
pop
pushw
clc
xor
out
in
loop
add
add
add
and
sbb
mov
scas
adc
cmp
and
mov
nop
imul
jnp
fwait
ins
cmp
sti
cmp
xor
and
leave
xchg
(bad)
call
sbb
or
(bad)
jo
shl
mov
dec
aad
loop
xor
imul
fwait
dec
dec
mov
cmp
lods
ja
loopne
out
mov
(bad)
loope
js
and
jl
data16
or
inc
mov
xchg
mov
out
nop
aaa
retf
popf
xor
js
mov
ds
shl
pop
mov
jl
cmp
push
push
mov
pop
or
test
shl
sbb
iret
out
pop
shr
loopne
push
inc
fsubr
fst
ins
test
fdivr
ffreep
jns
pusha
cmps
sbb
arpl
sbb
test
jecxz
sub
dec
cwde
pop
xor
les
shr
gs
imul
xchg
or
stc
xchg
outs
or
adc
mov
sbb
call
loope
fiadd
mov
test
ins
popf
aaa
adc
dec
arpl
shl
or
fdivr
sub
repz
stos
push
pop
mov
pop
test
inc
jp
out
jp
mov
sti
dec
cmp
lahf
sub
and
mov
jne
xor
mov
adc
pop
movs
adc
or
jmp
bound
xor
jmp
cmovg
rcl
(bad)
ins
inc
mov
add
not
mov
xor
(bad)
inc
sub
cdq
push
js
adc
mov
mov
mov
ss
repnz
(bad)
inc
into
aaa
mov
cmp
push
or
cmps
mov
adc
popa
sbb
push
ret
fs
mov
inc
leave
mov
cwde
ffreep
loopne
(bad)
rcr
pop
mov
adc
iret
repnz
dec
push
das
xchg
aaa
push
add
sbb
push
mov
mov
cmp
xchg
and
adc
jnp
movs
(bad)
jo
sub
mov
mov
jb
xor
add
lahf
ss
or
xchg
cmps
pinsrw
test
in
mov
sub
push
movs
mov
mov
lods
or
mov
xchg
adc
dec
out
test
pop
ins
add
jmp
sub
inc
sub
inc
sbb
idiv
les
out
mov
gs
mov
popf
pop
leave
or
push
cmps
mov
fistp
or
iret
(bad)
mov
push
add
shl
lahf
xlat
mov
call
jmp
imul
call
mov
xchg
(bad)
xchg
mov
mov
or
dec
pushf
cmp
pop
mov
rol
stc
arpl
out
add
inc
imul
pushf
adc
dec
xor
and
fwait
or
mov
fild
inc
or
ficomp
fild
cli
pop
hlt
mov
dec
xchg
jae
xchg
cmc
xchg
push
pop
mov
test
(bad)
push
inc
(bad)
mov
push
lds
inc
sub
cld
sbb
(bad)
cmp
lahf
les
mov
rol
mov
mov
(bad)
loopne
mov
enter
pushf
retf
pusha
in
loopne
icebp
sbb
pop
push
mov
push
push
in
jae
jae
or
xchg
inc
das
daa
inc
mov
test
in
add
adc
test
out
call
sti
iret
mov
sub
xor
iret
push
mov
sub
in
les
and
pop
cdq
xchg
or
xor
shr
sbb
(bad)
mov
mov
xor
dec
pushf
test
(bad)
(bad)
fld
outs
ret
outs
push
aaa
pop
aaa
retf
dec
into
inc
test
mov
lahf
(bad)
mov
bound
(bad)
cmp
or
add
in
sub
dec
test
mov
je
ret
cdq
ja
cmp
(bad)
mov
sbb
or
bound
out
push
sbb
sub
pop
cli
add
sub
into
or
cmp
mov
xchg
sbb
icebp
xor
dec
arpl
shl
pop
xor
mov
loopne
mov
out
inc
sub
(bad)
mov
add
add
les
mov
cmp
call
call
push
repnz
lods
jp
(bad)
pop
sub
(bad)
and
pushf
sti
mov
push
rol
xchg
sti
mov
mov
es
icebp
push
and
mov
loopne
pop
dec
scas
std
out
ja
fidivr
jmp
mov
mov
pop
sub
jns
sub
jns
imul
cmp
shrd
cmps
cld
ficom
add
sub
ins
inc
sub
inc
xchg
xor
movs
sub
popa
sub
ja
addr16
js
fwait
dec
push
fst
jge
cmp
cdq
aad
into
xor
loop
push
sub
sete
mov
dec
and
push
cld
sub
push
push
or
(bad)
(bad)
xor
dec
sub
mov
repnz
xchg
jnp
mov
jl
ret
test
inc
test
or
cdq
rcr
inc
push
mov
(bad)
jne
lahf
call
push
icebp
div
xchg
ror
rol
aad
nop
mov
cmp
addr16
cli
stos
xchg
push
mov
cli
call
or
bnd
fadd
push
cmp
add
aad
jne
call
cmp
jge
jmp
rcl
sbb
aas
xor
ficomp
mov
mov
pop
shl
jle
out
les
inc
pop
jno
jns
push
mov
icebp
xchg
imul
cmps
scas
cmp
pushf
mov
nop
call
adc
adc
push
xchg
stos
data16
adc
mov
fimul
pop
mov
inc
xchg
out
cmp
shl
sbb
mov
sbb
inc
and
cmps
xchg
xchg
aad
mov
lock
pop
cmp
sti
adc
sahf
shr
mov
pop
repz
adc
dec
mov
mov
cld
sbb
xor
add
sar
xchg
loop
loop
jp
sar
(bad)
sbb
dec
cmp
adc
xchg
mov
inc
cmp
or
sub
cmp
jmp
pushf
jp
int3
repnz
out
add
xchg
iret
neg
or
outs
jns
or
adc
sti
adc
sbb
out
loop
mov
das
adc
mov
add
mov
adc
jo
lods
pushf
ins
fimul
shr
mov
ins
sub
push
in
push
add
sbb
mov
outs
(bad)
cli
xchg
cmp
push
jno
push
rcr
cwde
stos
ret
pop
(bad)
sbb
mov
dec
out
mov
dec
dec
shl
ins
jno
int3
sahf
(bad)
jecxz
inc
daa
push
jno
into
lock
rcl
dec
sbb
lods
(bad)
fcmovnbe
test
pop
mov
ja
ret
xor
mov
add
dec
adc
inc
add
jmp
cwde
adc
repz
aaa
ins
lods
lahf
sbb
test
or
popf
xor
push
test
aad
add
add
sti
xor
aam
mov
clc
mov
imul
cmp
mov
bound
clc
aad
jnp
mov
push
ds
repz
add
nop
push
hlt
daa
jmp
rol
push
mov
dec
cmp
sahf
jg
and
xchg
sub
xor
bound
out
lahf
out
lds
aad
fidivr
jno
push
mov
mov
jo
jbe
dec
adc
pop
jb
add
sbb
inc
fist
clc
pop
fimul
cmp
mov
sub
(bad)
mov
shl
adc
cmp
retf
stos
out
int3
mov
imul
ins
lods
cvtdq2ps
leave
loope
aas
pop
push
outs
daa
or
mov
jg
add
arpl
mov
jmp
stos
mov
ja
jo
adc
loopne
faddp
pop
popa
test
sti
and
scas
jmp
ret
mov
push
or
push
xchg
arpl
jo
pop
hlt
cmc
adc
and
sbb
xor
bound
pushf
in
lea
into
mov
inc
add
sbb
lods
movs
inc
mov
sti
or
arpl
inc
mov
or
push
and
int
add
mov
pop
push
xchg
xor
cli
ins
out
and
out
xchg
push
mov
jmp
aam
(bad)
ins
fnstenv
cdq
retf
push
fs
inc
and
ret
(bad)
addr16
outs
mov
js
jmp
cmp
scas
dec
ins
ds
out
pop
dec
dec
pusha
inc
mov
push
movs
in
add
pop
enter
and
stos
push
pop
fisttp
inc
idiv
push
add
test
mov
or
ret
and
pop
inc
pusha
imul
popa
pop
sbb
xor
inc
out
inc
out
icebp
call
dec
shl
xchg
jg
dec
fmul
or
retf
push
adc
bound
(bad)
repnz
(bad)
icebp
inc
loopne
lock
cli
hlt
or
jp
mov
lock
cmps
arpl
mov
shl
repnz
pop
dec
into
call
add
and
sbb
sbb
pop
fisttp
pop
push
dec
leave
mov
outs
mov
bound
lods
out
sub
push
push
jecxz
int
out
xchg
cli
clc
cwde
fsubr
in
inc
or
push
gs
hlt
mov
daa
push
pop
ret
mov
pop
lods
mov
in
add
mov
mov
pushf
dec
shr
cli
sub
call
fld
test
into
sub
int3
cmps
inc
mov
retf
mov
test
jae
gs
jl
aam
pop
cmp
mov
mov
mov
int
call
push
push
cmp
sub
jbe
aad
adc
bound
add
and
jmp
xor
xor
je
bound
push
rcl
pop
jle
aas
fwait
mov
xchg
xchg
cmps
jns
scas
sbb
enter
adc
shl
mov
jnp
push
loope
sbb
xor
jnp
sti
aad
or
loopne
mov
jnp
sub
adc
add
push
(bad)
fmul
and
or
sub
jae
(bad)
fld
adc
jno
inc
fs
daa
ins
xor
(bad)
and
fimul
shr
and
hlt
icebp
xor
jmp
mov
in
mov
fbstp
add
xchg
fsubr
adc
sbb
hlt
push
hlt
data16
pop
or
inc
outs
test
mov
mov
(bad)
jp
stc
sub
jle
inc
fld
sub
stc
addr16
dec
aad
jmp
out
das
aad
aam
adc
mov
mov
jae
fldenv
jge
pop
jle
mov
shl
loop
inc
call
jae
sub
dec
loope
popf
call
add
pop
pop
mov
daa
mov
inc
mov
xchg
xor
pop
lock
enter
ins
jmp
retf
jnp
push
pusha
sti
xchg
cld
pop
je
(bad)
out
fwait
xchg
jmp
dec
xor
adc
xchg
or
cwde
in
sbb
nop
dec
sbb
push
scas
jg
mov
sbb
(bad)
test
inc
cmp
inc
mov
jl
stc
mov
xchg
adc
mov
pop
(bad)
pop
mov
jmp
fcmovnb
adc
or
(bad)
adc
inc
xor
mov
nop
mov
fstp
cdq
cmp
arpl
das
in
(bad)
xor
dec
mov
pop
add
jmp
ror
xchg
int
xchg
movs
push
push
cli
adc
xchg
(bad)
ins
push
mov
test
out
inc
(bad)
loope
jp
movs
and
add
mov
ins
xor
(bad)
in
lahf
dec
and
popf
das
lods
xor
das
imul
fs
ins
jbe
ins
fstp
sub
outs
add
mov
mov
aaa
cmp
retf
loope
fxch
(bad)
das
pop
aad
into
popf
mov
je
imul
cmc
add
or
jle
or
(bad)
mov
neg
xchg
mov
int
add
mov
pop
cmp
dec
and
loopne
fiadd
sub
push
xchg
adc
adc
mov
loope
push
test
in
push
jne
or
cdq
in
(bad)
xor
fisttp
fwait
xor
mov
lods
or
stos
cs
fst
into
pop
mov
adc
imul
add
mov
adc
enter
mov
cmps
outs
xor
jbe
mov
adc
jmp
out
sbb
jno
dec
adc
jo
xor
lahf
sar
sbb
adc
lods
mov
push
int3
out
jno
cdq
iret
ret
pop
clc
retf
add
mov
(bad)
out
pop
dec
stos
jne
xchg
pop
(bad)
xchg
clc
and
ds
adc
or
and
sub
mov
popa
or
or
scas
jne
push
clc
add
xchg
push
jbe
pushf
stos
fisttp
or
cmp
pop
popa
or
popf
push
adc
pop
add
or
mov
jne
jecxz
push
pop
(bad)
test
out
push
xchg
mov
pop
or
idiv
lds
sub
jne
push
mov
imul
(bad)
(bad)
push
movs
imul
movs
cmp
mov
jo
rol
jmp
cmp
mov
stc
mov
adc
outs
js
data16
test
test
pop
pop
out
nop
cmp
retf
cwde
leave
outs
bound
sbb
jmp
xchg
push
ds
push
mov
xchg
jg
mov
or
push
jmp
sub
or
lock
sbb
add
sbb
mov
add
es
sahf
sub
cwde
mov
in
sub
fsub
mov
ror
hlt
test
pop
es
sbb
repnz
jnp
fwait
stc
dec
leave
gs
test
cdq
sub
cmp
addr16
push
jnp
jmp
or
xor
sub
loop
mov
pushf
pop
test
pop
adc
xchg
mov
pushf
fs
cmp
pop
pop
add
and
add
into
or
cli
dec
or
test
push
jl
shr
ja
or
sti
enter
add
ret
xor
pop
adc
jno
cmp
pop
stc
mov
mov
les
inc
mov
inc
fs
xor
pop
inc
les
js
dec
mov
stc
mov
sub
je
jne
jl
das
mov
xchg
daa
pop
dec
in
clc
inc
cmp
xor
sbb
pop
lods
push
lds
pop
mov
in
dec
imul
lods
push
mov
push
push
in
mov
aam
pop
cwde
inc
icebp
xor
sub
mov
je
or
fisubr
xor
mov
cmp
fidiv
retf
fisttp
shr
or
stos
mov
lea
and
fimul
xchg
adc
mov
aam
adc
or
push
stos
ficom
imul
lods
jne
mov
hlt
pop
in
mov
sbb
lahf
retf
ins
or
rcr
mov
cmp
add
rol
sbb
(bad)
jbe
pop
mov
(bad)
push
rol
retf
pop
outs
and
push
stos
and
lods
pusha
stc
int
inc
adc
shr
mov
bound
adc
sbb
pop
mov
in
cs
xor
sbb
push
pop
sbb
loop
call
pop
push
adc
loop
xchg
test
jp
xor
pop
mov
adc
jns
pop
pop
(bad)
sar
ds
dec
pop
jo
mov
xchg
retf
das
enter
repz
ds
mov
dec
sbb
sub
dec
enter
icebp
or
fdivr
push
pop
call
xchg
adc
cmp
out
add
mov
sub
out
pop
mov
call
sbb
jl
daa
mov
push
sub
pop
adc
fmul
dec
inc
mov
(bad)
les
stos
arpl
in
mov
push
pop
jle
push
pop
xchg
pushf
pop
xchg
gs
mov
repz
das
icebp
xchg
adc
inc
rol
inc
pop
push
retf
adc
icebp
sub
cmp
jp
xor
add
lods
clc
pop
jge
call
inc
xchg
mov
and
jl
push
push
je
pop
pop
dec
add
inc
xor
jnp
add
or
inc
lods
neg
call
mov
push
movs
jp
in
or
call
les
rcr
loope
sbb
repz
scas
adc
jno
retf
xlat
add
ins
jle
inc
rcr
sub
sbb
iret
mov
ja
push
imul
ret
repnz
mov
fwait
sbb
jmp
mov
mov
or
push
outs
xchg
out
shr
sub
je
xchg
test
call
xchg
stc
jo
mov
popa
sub
nop
arpl
push
cdq
es
push
int
fdivr
(bad)
push
adc
fld
inc
sar
cmps
(bad)
imul
push
imul
and
pop
adc
aas
aad
not
jge
ficom
sti
xor
cmp
loope
xchg
inc
sub
xchg
fstp
shl
push
dec
ret
rcr
test
sub
jne
iret
jecxz
xchg
mov
pop
jle
cmc
mov
and
stos
mov
cmps
xor
pop
jo
popa
mov
pusha
inc
jne
inc
pop
inc
xor
outs
adc
xor
ds
sub
sar
xor
and
movs
xchg
int3
and
pop
inc
clc
mov
(bad)
ret
xor
popa
push
mov
push
sbb
adc
fs
jns
jne
push
sbb
dec
outs
dec
push
dec
push
sub
cmp
mov
mov
pop
test
gs
dec
jbe
ret
in
xor
push
rol
into
jmp
aam
sub
jmp
scas
(bad)
shl
nop
xchg
cli
add
and
mov
ins
inc
ds
adc
pop
xlat
add
inc
push
icebp
sbb
sbb
xchg
or
sub
std
inc
gs
mov
cmp
cmp
inc
int
and
cmp
sub
in
scas
cdq
out
jecxz
dec
lahf
jp
push
gs
cs
xchg
push
sbb
stos
loopne
push
mov
dec
js
xchg
jp
jnp
pop
dec
stos
in
bound
mov
jns
jecxz
movs
movs
dec
(bad)
imul
ficom
imul
leave
cmp
xor
xchg
mov
xor
push
and
sbb
retf
dec
push
out
fild
sub
into
cmp
sub
in
js
and
aas
push
shl
and
ror
cmps
jle
dec
fidiv
retf
mov
add
std
push
mov
popa
ja
gs
add
sbb
out
popa
cld
xchg
ins
sbb
mov
pop
rol
dec
ret
or
mov
test
push
shl
inc
scas
or
push
cmp
dec
mov
jbe
aam
rcr
rol
mov
lahf
int
jle
push
adc
push
cli
ret
(bad)
lds
fs
pop
xchg
xchg
inc
sbb
hlt
lahf
test
(bad)
dec
adc
adc
repz
sub
les
inc
in
call
ss
imul
lea
aas
fstp
push
popa
mov
mov
jge
xchg
in
mov
xor
movs
les
mov
mov
push
push
jle
add
sbb
mov
stc
inc
fs
vcvttps2dq
mov
mov
cmps
repnz
fist
adc
ins
ja
ds
(bad)
mov
jl
xchg
pop
jle
outs
(bad)
and
push
sbb
push
cmps
sbb
fsubr
ficom
or
mov
je
pushf
sti
sub
retf
enter
xor
jb
test
jp
mov
pop
xor
iret
outs
adc
mov
jmp
xlat
rol
imul
cmp
or
or
repnz
pop
les
adc
shl
mov
jle
call
pop
mov
sub
pop
cmp
fild
call
outs
retf
pop
inc
pusha
push
clc
pop
cmps
pop
or
pop
jle
ins
cwde
push
scas
dec
xor
fxsave
in
sbb
loopne
mov
outs
xor
(bad)
jge
imul
xchg
movntps
add
xchg
mov
mov
dec
in
jg
addr16
xor
outs
arpl
dec
cmp
retf
or
in
and
sub
mov
test
into
pop
rcl
int3
or
pop
mov
cmp
mov
sahf
push
push
fcmovnu
ins
cmp
test
jg
fnstcw
dec
mov
clc
dec
lock
(bad)
jmp
or
pop
sub
fsub
sbb
push
jmp
stos
dec
call
imul
cwde
or
adc
pop
jecxz
add
add
in
(bad)
adc
(bad)
jl
adc
mov
or
mov
fistp
sbb
inc
cmp
cdq
in
jno
sbb
movs
inc
shl
lods
mov
mov
lea
xchg
enter
push
cmp
sar
mov
ror
and
stos
mov
add
mov
in
sbb
inc
ror
fdiv
dec
mov
and
es
popf
push
or
push
js
(bad)
(bad)
mov
push
stos
xor
dec
test
inc
adc
popf
adc
test
ins
addr16
or
adc
push
into
setnp
ret
add
inc
mov
ds
hlt
int3
test
jmp
jg
mov
loopne
(bad)
pop
out
fsub
out
or
push
push
push
jl
xchg
mov
lahf
add
shr
cmps
or
push
inc
into
and
add
xchg
cmp
ror
fidivr
or
xchg
or
aam
adc
inc
xchg
pop
or
sahf
dec
std
mov
cs
data16
push
xor
cmps
imul
push
add
dec
push
pop
outs
sahf
pop
pop
push
pop
out
shl
stos
mov
sti
scas
test
mov
jne
fcom
pusha
and
adc
not
nop
pop
sbb
add
cmps
dec
xchg
jle
test
ss
pop
mov
xor
repz
or
xchg
out
(bad)
push
dec
mov
pop
movs
outs
mov
mov
push
cmps
add
jmp
add
mov
je
call
retf
mov
jle
mov
add
xor
jno
into
(bad)
(bad)
mov
aaa
jae
sub
sbb
xor
packsswb
fwait
loop
bound
mov
repnz
(bad)
cld
scas
in
js
jecxz
pop
inc
jg
pop
mov
and
fist
adc
rcr
xchg
or
lods
push
or
jno
dec
out
jp
add
push
in
nop
or
push
pop
mov
xchg
shr
sub
mov
mov
sbb
sbb
inc
adc
jmp
es
xchg
mov
jmp
xlat
add
sar
or
ficomp
cld
sbb
mov
mov
cmp
mov
mov
and
pushf
scas
adc
ins
aaa
add
stc
xchg
outs
inc
mov
push
mov
jo
fst
mov
ficomp
stos
loopne
das
sub
mov
adc
stos
dec
jns
jg
das
shl
les
test
(bad)
jl
in
int
aad
or
mov
adc
cmp
jp
outs
adc
push
test
add
mov
lods
mov
push
xor
mov
lahf
call
add
add
mov
pop
retf
adc
cmps
xchg
sub
cmp
mov
push
fmul
push
das
adc
test
sbb
enter
mov
xor
js
ret
push
fsubr
mov
(bad)
jle
call
push
call
push
in
fsubr
hlt
inc
repnz
fcomp
pusha
dec
popf
lahf
aas
mov
ds
xchg
sub
(bad)
pushf
push
mov
(bad)
jnp
neg
pop
fs
in
adc
sahf
mov
jo
imul
ja
jbe
data16
xor
(bad)
in
mov
push
shr
aam
sti
and
imul
mov
cmp
push
cmp
lods
icebp
ret
dec
pop
fcom
cmp
cmc
popa
in
sbb
push
int
adc
out
inc
sub
mov
jns
(bad)
shl
or
jl
mov
pop
retf
mov
pop
cmp
or
add
xor
jmp
loopne
mov
dec
inc
push
out
jne
sti
int3
jnp
out
or
es
xchg
arpl
pop
fild
cmp
into
mov
nop
dec
ja
pop
in
pop
outs
neg
fist
shr
fild
inc
(bad)
outs
pop
ds
cwde
hlt
push
pop
xchg
dec
add
and
cmps
add
adc
xchg
pop
clc
pop
jle
mov
repnz
push
fdiv
pop
cs
mov
jb
mov
les
xchg
rcr
lods
sbb
cdq
(bad)
jmp
stc
cmp
xor
inc
mov
pop
adc
cdq
xlat
iret
cmp
pop
cmp
out
sbb
xlat
mov
gs
nop
xor
add
push
test
xchg
xor
or
add
add
adc
mov
mov
ret
cld
inc
ins
iret
sbb
clc
push
add
xlat
fwait
ja
add
xor
push
cmp
jge
retf
(bad)
sub
rol
cmp
int
ins
out
push
int3
jecxz
or
fcom
in
sahf
xchg
arpl
idiv
cmp
xor
push
xor
int
scas
shl
sbb
(bad)
mov
pop
and
(bad)
ds
out
ins
pop
and
inc
sbb
ins
movs
addr16
ins
sar
movs
mov
and
dec
rol
out
jmp
cli
push
xchg
jge
retf
and
mov
pshufw
test
adc
cmp
sbb
gs
fwait
pop
adc
dec
adc
add
or
xor
jno
sbb
jne
and
inc
cmp
jae
ja
fmul
es
ficomp
stos
pop
xchg
jnp
(bad)
fisub
mov
cmp
test
pusha
mov
jecxz
jecxz
xchg
push
dec
xor
call
xchg
push
loopne
leave
jae
hlt
stos
leave
rcr
ret
mov
shl
sub
das
ja
cli
arpl
push
adc
push
shr
push
std
int
push
jecxz
xchg
ins
inc
xor
or
out
cmp
mov
push
nop
and
mov
daa
inc
dec
sub
dec
mov
sub
jmp
pop
cli
sar
sar
jo
dec
xchg
arpl
and
add
stos
outs
add
or
int3
pop
sub
or
push
push
ja
loop
push
fmul
or
inc
call
sbb
sbb
and
push
pop
inc
pushf
mov
add
add
outs
das
sbb
out
sti
mov
mov
and
push
mov
cmp
lock
call
or
push
imul
dec
pop
data16
nop
mov
or
push
sbb
div
add
inc
xlat
xor
ss
inc
fs
loopne
imul
add
cmp
xchg
fcomp
arpl
ror
(bad)
lea
(bad)
and
sbb
ja
jle
scas
xchg
lods
out
test
add
inc
or
lea
es
xchg
inc
sbb
std
xchg
pushf
push
repz
sub
dec
div
inc
xor
jl
sub
not
dec
fld
adc
neg
sbb
pop
test
aaa
cmp
inc
push
push
jnp
std
adc
and
adc
xchg
mov
dec
adc
pop
sar
aaa
and
sbb
gs
dec
sar
aam
jmp
(bad)
out
jmp
fisttp
push
mov
sub
cmp
les
pushf
repz
mov
out
clc
in
mov
icebp
cld
loop
test
mov
mov
repnz
adc
movs
or
push
retf
cmp
scas
test
jns
call
popfw
(bad)
sbb
and
stc
aad
adc
pusha
jmp
push
aad
adc
retf
out
jmp
sub
out
inc
jae
dec
mov
push
fidivr
mov
mov
ss
xor
fld
mov
cmp
xchg
cmp
iret
mov
test
(bad)
les
xor
sti
or
ins
(bad)
push
nop
xor
pop
xor
movs
adc
dec
pop
xchg
test
mov
rol
add
push
inc
shl
aam
pop
sbb
or
and
cmp
cmp
cmp
push
cmps
cmp
fs
in
ins
mov
popa
mov
pusha
push
mov
test
sbb
(bad)
call
xor
cmp
popa
arpl
scas
dec
xchg
stc
mov
sub
jmp
adc
jns
jge
test
mov
xchg
or
xchg
mov
cmps
js
scas
shl
add
sub
shr
inc
pop
xor
shl
add
inc
neg
sbb
out
iret
scas
cmp
xchg
cmp
dec
push
push
jae
or
pop
addr16
jmp
or
mov
adc
mov
sbb
adc
in
std
pop
int
(bad)
movs
cmp
adc
mov
clc
lock
icebp
or
imul
push
sub
pop
dec
sbb
jmp
out
sub
jl
cmps
sbb
ret
imul
call
call
cld
push
cld
pop
add
xchg
or
jnp
loop
dec
frstor
sub
jle
sub
cdq
mov
or
pop
inc
xchg
add
push
into
je
dec
cmp
test
pop
mov
das
das
sub
test
repz
jg
stos
inc
pop
inc
repz
leave
jp
xchg
sub
cmp
add
pop
(bad)
sahf
fild
mov
outs
aad
bound
adc
xor
push
inc
loopne
neg
rcr
cmc
pop
mov
sbb
gs
es
jo
pop
das
jbe
dec
xor
jge
jnp
dec
and
jge
jle
push
and
sbb
bound
push
(bad)
jae
push
sbb
cmps
add
add
jo
lahf
movs
jae
push
xor
call
add
mov
jle
jecxz
outs
shl
sbb
(bad)
cmp
ja
mov
jp
cli
mov
imul
and
iret
lods
lods
lock
pusha
stos
jb
outs
pop
sbb
cmp
cmps
mov
mov
xchg
ret
mov
pop
sti
ror
inc
add
pushf
mov
xor
ds
mov
sbb
movs
test
mov
gs
sbb
push
adc
stos
jb
dec
aad
jnp
pop
push
push
jae
xchg
jns
sub
std
not
inc
jnp
jg
ins
test
ret
data16
mov
lds
xchg
jge
xor
pushf
out
jl
ds
push
inc
and
(bad)
bound
mov
or
xor
add
data16
add
dec
mov
pushf
mov
xchg
sub
jge
out
test
inc
(bad)
cli
int3
es
lods
in
or
enter
mov
and
pop
xor
fmul
mov
neg
inc
add
addr16
mov
and
pop
and
jp
aad
mov
lahf
sbb
push
maskmovq
idiv
adc
fwait
dec
sbb
icebp
cs
pop
(bad)
jmp
dec
stc
mov
(bad)
jge
bound
cmp
xchg
idiv
jecxz
mov
je
(bad)
imul
xchg
lea
iret
jnp
dec
fcomp
and
sti
jecxz
out
mov
(bad)
add
jg
mov
test
pop
dec
push
push
test
addr16
int3
mov
cli
mov
test
leave
cmp
or
call
inc
mov
retf
pop
imul
xchg
xchg
hlt
fwait
adc
inc
shl
test
sub
ja
or
mov
fwait
scas
lea
xchg
jl
mov
sub
jb
hlt
jmp
ins
call
mov
jne
fcmovu
out
movs
leave
add
pop
cmp
xchg
sub
jnp
not
mov
adc
add
mov
mov
rol
and
cld
dec
sub
mov
xchg
imul
pop
sbb
inc
cmp
pop
in
into
arpl
movs
and
in
icebp
xor
add
adc
pop
dec
mov
out
push
pop
addr16
xchg
push
inc
pop
inc
ret
xchg
daa
inc
in
cmp
in
in
dec
fcomp
out
aam
(bad)
frstor
aad
data16
cmp
hlt
fiadd
cmps
pusha
jo
cmp
push
adc
mov
cmp
sub
push
or
neg
mov
push
pop
sub
and
cwde
sahf
in
enter
push
or
(bad)
mov
(bad)
pop
adc
popa
cmp
inc
imul
cmp
add
lods
scas
fstp
jne
xchg
jnp
push
jecxz
or
popa
cmp
mov
and
push
js
imul
jne
push
lods
mov
mov
jns
dec
mov
rcl
out
popf
pop
sub
fldcw
loope
add
icebp
sbb
lock
jnp
out
cmp
movs
pop
ins
pop
mov
in
mov
push
mov
clc
xchg
push
popa
mov
mov
test
aam
in
pushf
inc
xchg
add
cwde
inc
popf
popf
cmp
push
mov
push
inc
adc
inc
jle
dec
xor
inc
cmp
out
pusha
and
loope
xor
lods
cmp
cld
xor
shl
inc
jno
xchg
cmp
out
inc
dec
sub
inc
es
iret
inc
inc
and
bound
push
inc
cld
ins
push
adc
ss
xor
inc
mov
repz
xor
pavgb
ja
inc
xchg
imul
(bad)
mov
sbb
cmps
and
daa
xchg
sbb
jmp
nop
mov
mov
into
or
sbb
add
into
mov
add
mov
aas
in
mov
jmp
enter
test
or
aad
iret
push
cmc
cmp
push
aas
sub
scas
shl
shr
sbb
rcl
sahf
imul
cmp
jno
(bad)
xor
fcom
test
xor
call
stos
popa
or
in
imul
pop
ds
pusha
cmp
mov
dec
add
jnp
dec
cmp
pop
or
call
loopne
dec
cmp
mov
cmps
add
sahf
mov
ss
call
sub
jmp
cwde
lods
adc
adc
jmp
mov
neg
aam
mov
nop
pusha
mov
add
les
sub
cmpxchg
test
mov
js
cmp
pop
inc
push
sbb
sub
in
mov
in
xor
inc
movs
jmp
(bad)
xchg
in
call
movs
outs
or
mov
sbb
cmps
sbb
les
adc
scas
pop
sbb
je
xchg
or
xor
add
sub
pop
call
cmp
sub
arpl
fadd
test
test
cmp
jae
call
jne
add
loop
mov
jp
ins
(bad)
mov
nop
js
or
test
cmp
jmp
push
leave
push
icebp
and
and
mov
pop
mov
xchg
inc
and
pop
cmp
call
adc
jae
push
sbb
jl
mov
push
sub
test
jle
imul
or
repnz
ret
ret
cmp
bound
jbe
movs
inc
dec
or
in
or
mov
cmp
push
xchg
daa
or
or
imul
mov
ret
fs
(bad)
xchg
lea
push
js
pop
jle
popf
shr
dec
push
fs
mov
xchg
bound
jle
imul
pop
mov
cld
jo
in
icebp
popf
inc
add
jecxz
in
mov
cs
data16
mov
jl
(bad)
icebp
mov
adc
cld
sbb
packuswb
repz
stc
fs
mov
sub
sbb
sub
jae
jno
sar
ror
shl
xchg
aad
cwde
call
ja
mov
push
icebp
stos
or
xchg
cmovle
idiv
xchg
bound
push
or
bound
push
or
mov
mov
inc
fwait
mov
outs
(bad)
inc
leave
aas
cmp
push
das
ins
jge
pop
popa
push
mov
les
daa
adc
xchg
cli
js
mov
repz
imul
icebp
mov
mov
xor
mov
ret
mov
sbb
mov
and
mov
ja
push
sbb
sbb
fwait
jle
(bad)
jo
xchg
(bad)
pop
sbb
or
add
sbb
add
ja
pusha
and
mov
or
int
(bad)
inc
jmp
push
and
add
jecxz
repnz
cmp
jmp
mov
and
mov
mov
or
inc
mov
(bad)
test
dec
mov
adc
daa
cwde
test
(bad)
push
sbb
repnz
dec
aas
sbb
jns
ss
popw
cdq
or
mov
adc
(bad)
xlat
in
mov
mov
lods
sbb
gs
push
or
lock
(bad)
mov
bnd
enter
sbb
vmread
push
xchg
mov
stos
inc
call
mov
cmps
lods
mov
ins
ins
cli
popf
das
out
xor
and
add
imul
sub
inc
pop
in
ficomp
movs
add
jb
out
(bad)
out
adc
sbb
dec
pop
xchg
xor
xor
add
lock
jae
jns
or
scas
pop
jmp
(bad)
hlt
xchg
clc
stos
sub
(bad)
mov
ins
sub
adc
call
jmp
dec
push
and
mov
enter
xchg
ficom
call
cmp
sbb
fwait
aaa
xchg
push
sub
mov
and
ja
push
adc
inc
nop
fist
dec
or
hlt
leave
mov
daa
mov
lods
dec
call
out
mov
test
pop
cmps
adc
mov
nop
in
mov
or
mov
pop
jp
in
mov
pop
xlat
push
xchg
ja
(bad)
ret
push
inc
out
and
push
outs
inc
mov
jne
sahf
push
arpl
ins
or
enter
mov
xchg
push
mov
or
aas
scas
fcmovnbe
push
mov
lock
mov
jmp
movs
inc
lahf
stc
ficom
xchg
xchg
les
inc
das
and
inc
jge
xchg
into
loopne
pop
add
jmp
and
fs
mov
pop
and
jno
ret
gs
dec
sub
xchg
test
sahf
sbb
lea
add
mov
cmp
xor
xchg
or
dec
data16
push
imul
sub
ins
or
jg
scas
dec
and
dec
shl
popf
call
xchg
daa
xchg
retf
pop
and
adc
and
ret
addr16
es
mov
popa
enter
pop
jmp
mov
and
inc
data16
imul
inc
cmc
in
cs
cmp
xor
cwde
jno
adc
daa
pop
dec
(bad)
sub
psubq
call
fcom
arpl
ss
into
mov
or
cmps
xchg
or
mov
mov
outs
call
jmp
int3
push
jp
pop
stc
lods
dec
mov
arpl
jmp
cmp
js
call
pop
enter
popf
dec
dec
xor
in
lahf
inc
mov
pop
or
jmp
adc
fdivr
lock
dec
mov
and
in
mov
(bad)
xlat
xchg
cmp
xchg
test
xchg
rcr
jmp
inc
mov
add
push
movs
test
adc
enter
in
aad
inc
push
in
lahf
and
push
mov
lds
icebp
fdiv
xchg
je
outs
retf
out
fucomip
and
stos
mov
cli
mov
in
jle
ret
mov
mov
mov
test
inc
inc
nop
bound
imul
pop
mov
or
xchg
and
xchg
add
fimul
(bad)
mov
lahf
and
add
pop
push
mov
pop
stos
jo
popa
iret
shr
or
xchg
cmps
mov
arpl
int
or
mov
xchg
inc
(bad)
xor
fsub
ds
scas
shl
(bad)
jmp
test
shl
call
out
sti
adc
pop
out
popf
pop
ins
cli
add
cmps
(bad)
mov
sbb
and
not
lea
sbb
jno
adc
mov
push
daa
outs
out
inc
adc
xchg
ret
bound
sub
jo
dec
(bad)
out
push
ret
rol
adc
ror
scas
jg
inc
stos
test
loope
adc
pop
and
movs
mov
idiv
xor
int3
inc
inc
loope
or
test
xchg
les
stos
sub
adc
mov
cmps
icebp
mov
mov
dec
dec
and
dec
jecxz
(bad)
movs
dec
inc
popa
out
inc
lods
push
cmp
push
inc
jmp
dec
retf
xor
ss
enter
jbe
cmc
loopne
jo
xchg
fistp
inc
dec
shl
adc
iret
js
add
sbb
pop
(bad)
fwait
shl
sub
stc
cs
mov
out
xlat
inc
xchg
(bad)
adc
mov
xor
mov
sub
stos
bts
push
dec
adc
dec
cdq
adc
adc
push
push
sar
ins
sub
mov
repnz
inc
mov
jmp
add
or
pop
pop
addr16
adc
out
add
add
or
xor
bound
loope
mov
dec
movs
bound
rcl
stos
xchg
shl
sub
(bad)
mov
addr16
outs
mov
stos
aam
fwait
sbb
loopne
jb
sub
stc
ds
xchg
imul
mov
data16
push
mov
pop
add
xor
pop
or
mov
mov
mov
cmp
daa
cmps
sti
int3
fnstsw
stc
cmp
les
bound
sar
xor
cmp
aas
pop
xchg
add
pop
mov
mov
les
push
dec
jp
pop
setae
loop
mov
not
push
das
retf
sti
xor
pop
inc
xlat
and
pop
dec
mov
repnz
outs
jae
inc
cli
lods
cmp
clc
daa
stos
mov
push
mov
dec
inc
mov
(bad)
jmp
xor
cmp
popf
sti
test
cmps
push
stc
int
pop
cs
xchg
cmp
outs
cmp
lahf
in
lea
jne
je
retf
loope
adc
push
fsubr
inc
stos
xor
cmp
fucomi
fs
jecxz
cwde
fisttp
dec
push
jnp
dec
fst
fsub
(bad)
imul
jne
mov
pushf
and
fs
push
je
outs
and
sbb
out
cmp
push
jge
je
dec
push
sub
imul
pop
pop
push
push
inc
icebp
ins
out
popf
mov
into
into
push
jle
ret
mov
sbb
inc
retf
retf
sbb
movs
adc
cld
leave
inc
mov
and
and
outs
out
ror
mov
rcl
imul
scas
cs
int
xchg
dec
lea
aaa
sbb
scas
jp
shr
dec
inc
mov
icebp
in
stc
pop
stos
pop
js
xor
push
mov
imul
add
in
xchg
xchg
mov
inc
and
or
sub
and
fsub
sub
ret
aas
mov
lds
jmp
xor
pop
loop
movs
fisub
jo
add
scas
and
and
dec
call
inc
cmp
dec
call
jnp
(bad)
hlt
(bad)
push
ss
loope
and
gs
pusha
add
cmc
or
inc
popf
pop
mov
push
int3
ins
dec
dec
push
je
shr
push
push
push
mov
ins
dec
shr
inc
int
fisubr
fsubrp
push
movs
ror
fiadd
fist
inc
shr
clc
or
lods
test
or
pop
cdq
lahf
cmp
push
jbe
adc
loop
ja
call
xchg
je
lahf
push
pop
push
or
add
pop
push
pushf
sub
lea
xor
push
inc
xchg
cmps
call
fild
test
out
push
jns
add
dec
cmp
xchg
cmc
cmc
mov
pop
js
enter
sub
imul
jp
jmp
fnclex
fnstcw
ror
inc
pop
jmp
imul
jbe
fisub
enter
lock
sbb
cmp
push
iret
icebp
shl
cli
in
(bad)
ins
in
mov
js
pop
inc
jmp
ret
imul
shl
or
stos
jae
sbb
jg
sub
popf
sub
cmp
(bad)
mov
sar
mov
mov
sti
inc
mov
ins
mov
xchg
out
mov
xor
mov
repz
cs
into
rcl
imul
push
jmp
inc
sub
(bad)
fist
add
pop
add
or
mov
dec
mov
jmp
inc
repnz
ins
or
fidiv
(bad)
ja
dec
(bad)
(bad)
xchg
retf
lahf
(bad)
jmp
out
mov
cmp
add
add
mov
dec
retf
mov
push
fimul
stc
or
add
ins
imul
rol
adc
popf
push
cmp
dec
enter
gs
jns
jo
inc
data16
cmp
mov
in
xor
neg
jo
pushf
aas
add
and
out
push
sub
out
sub
xchg
stos
push
imul
pop
cmp
nop
adc
mov
xlat
xchg
cmp
daa
ins
ja
(bad)
and
pop
bound
ss
fucom
inc
mov
in
test
sbb
fwait
mov
jmp
xchg
inc
fild
mov
adc
mov
dec
mov
add
loopne
jmp
mov
jle
out
or
lea
div
push
je
push
jno
lahf
mov
sub
test
call
and
add
pop
ret
lock
and
dec
enter
pop
loopne
mov
movs
mov
sub
xchg
jne
leave
into
mov
mov
cmp
push
pop
test
pop
and
call
dec
fldcw
out
mov
jno
ret
jbe
je
pop
(bad)
cdq
ss
cmp
sbb
inc
jo
jno
and
jmp
jecxz
mov
imul
mov
sub
mov
pop
lods
push
loop
imul
mov
scas
adc
sub
push
icebp
jbe
call
pop
cmp
pop
lea
neg
xor
lods
mov
xchg
stos
xchg
pusha
aaa
in
inc
cwde
mov
aas
dec
in
adc
add
inc
pop
popf
out
inc
dec
retf
inc
jle
adc
mov
data16
jmp
cmp
mov
inc
cmp
fisttp
jno
xchg
jp
mov
dec
dec
mov
unpcklps
(bad)
sti
mov
test
or
(bad)
xchg
movs
int
nop
or
fidiv
pop
sbb
(bad)
fdiv
cmp
jb
push
dec
dec
std
iret
daa
clc
ret
inc
das
(bad)
(bad)
cmp
rol
int
fbstp
adc
mov
and
and
xchg
lea
sbb
fdivr
(bad)
stos
jo
push
jg
jge
dec
or
inc
shr
or
retf
lods
pop
int
mov
pop
dec
push
mov
ds
je
mul
and
out
data16
mov
jg
sub
mov
repz
sbb
mov
outs
int
into
iret
aaa
cli
jb
lock
popa
ret
mov
out
sbb
je
loope
add
rcl
outs
sbb
add
(bad)
mov
and
rol
popa
fisttp
lock
aaa
adc
sbb
movs
adc
dec
nop
neg
pop
int
and
mov
or
in
add
push
fmul
or
retf
push
xor
cmp
test
xlat
adc
sub
pmuludq
mov
push
inc
inc
repnz
(bad)
push
fwait
cmc
sbb
mov
inc
mov
dec
dec
jmp
call
add
mov
dec
aas
adc
aad
xor
shl
jae
and
mov
das
fild
icebp
sub
sub
cmps
xor
jp
add
add
sub
cmp
pop
pop
test
mov
bound
adc
mov
jecxz
or
xchg
imul
sub
mov
mov
mov
fnstcw
dec
and
sti
ss
cmps
sbb
iret
or
mov
imul
adc
in
(bad)
(bad)
lock
dec
movs
test
jge
mov
push
adc
or
pop
shl
out
enter
(bad)
cmp
and
int3
cli
cmp
ret
add
push
xor
jns
cmp
mov
call
mov
pop
cmp
sub
out
mul
dec
repnz
and
mov
ss
fdiv
add
add
(bad)
bound
push
cld
xchg
jbe
mov
fsubr
cmps
or
scas
add
mov
mov
sub
stc
push
sub
mov
aas
or
or
jns
call
inc
fs
fidivr
mov
or
mov
ins
mov
repz
dec
sbb
dec
lahf
mov
jge
ror
inc
ja
jo
mov
shr
dec
in
sbb
sti
aas
add
push
enter
jl
out
sub
frstor
(bad)
rcl
aaa
adc
lahf
mov
add
add
lea
gs
popf
jo
jmp
outs
jno
into
pusha
sahf
fidivr
or
stos
cmp
xor
(bad)
adc
aam
out
outs
inc
bound
xor
adc
adc
sub
pop
push
sub
leave
adc
push
fimul
push
sub
dec
in
cmp
xor
ds
fdiv
and
mov
lods
(bad)
movs
repz
aad
test
lods
push
addr16
ins
push
or
lock
imul
xor
add
stos
mov
jp
aam
push
inc
or
ficom
fnstenv
inc
sbb
mov
mov
pop
ror
stc
pop
and
push
adc
fld
add
hlt
mov
scas
(bad)
ja
in
lahf
ret
jg
or
xchg
imul
xchg
(bad)
sbb
cdq
dec
std
in
xchg
enter
push
lahf
inc
dec
push
(bad)
fisttp
or
sub
enter
mov
scas
xor
cli
jns
ficom
mov
push
adc
add
repz
call
outs
add
cmp
adc
add
ds
mov
imul
pop
iret
or
mov
mov
inc
aad
add
ds
jmp
arpl
push
jns
iret
adc
jns
jno
mov
mov
cld
ret
inc
jecxz
sbb
shr
leave
cmc
fistp
push
xchg
data16
xor
push
or
movs
pop
out
stos
fs
clc
fptan
inc
xor
cmp
rol
retf
es
adc
fwait
ins
into
fucomp
fisub
or
xchg
xor
and
addr16
mov
mov
mov
or
fwait
pop
push
cdq
add
(bad)
(bad)
and
aad
out
cmp
nop
enter
mul
lea
outs
jmp
cmp
fcom
sub
mov
popf
pusha
adc
pop
data16
jbe
dec
jnp
dec
mov
mov
mov
in
push
jns
mov
inc
jae
repz
mov
mov
leave
mov
add
es
lods
rep
stc
repnz
or
sub
inc
and
push
jae
movs
into
xchg
cmp
xchg
(bad)
adc
aaa
xor
in
sub
pop
add
dec
mov
push
cmp
ja
fnstsw
ss
sub
sbb
xlat
push
jae
xor
push
ja
outs
xchg
jne
loop
inc
push
mov
pushf
ins
xor
arpl
xchg
jo
jmp
stos
cmp
push
fisubr
fimul
xchg
xchg
lahf
pop
fcom
scas
mov
cld
jb
hlt
mov
sub
fs
mov
icebp
jnp
aas
sub
leave
push
and
in
fcmovnb
icebp
pop
cli
out
lea
mov
jp
sbb
movs
inc
cli
jmp
jnp
push
ja
hlt
pop
xchg
mov
sahf
outs
mov
je
sub
clc
pop
loopne
xor
mov
test
push
pop
mov
jge
dec
mov
ret
inc
jno
daa
hlt
out
sub
scas
sti
dec
into
aas
aad
lods
mov
popa
sbb
hlt
push
inc
sub
aad
fidivr
sub
add
pop
addr16
(bad)
mov
stc
push
mov
call
sub
pop
dec
dec
adc
mov
or
add
in
shr
cli
popa
inc
push
sahf
or
out
ret
adc
jb
pushf
push
shl
lea
retf
out
outs
mov
xchg
sbb
pop
and
sbb
mov
push
es
sub
repnz
push
jg
retf
mov
ret
mov
adc
jg
in
das
add
mov
push
sub
jecxz
fwait
in
test
(bad)
hlt
pandn
div
mov
sbb
inc
pushf
sbb
repz
add
cmp
lahf
jne
ds
in
aas
(bad)
xlat
outs
mov
cdq
ret
jl
enter
sti
cmp
xchg
jne
imul
repz
ret
repz
ficomp
mov
mov
cmp
fld
popf
xchg
adc
mov
jl
jnp
sar
mov
and
jno
les
xor
fcom
push
jae
loope
das
push
and
scas
jp
dec
(bad)
rcl
(bad)
int3
push
push
xchg
xchg
dec
add
mov
ret
sub
mov
xchg
xor
dec
les
mov
dec
out
xchg
rcl
pop
hlt
ds
push
xor
into
rcl
loop
add
push
call
adc
sbb
cmp
dec
sbb
cmp
outs
jmp
pop
(bad)
sbb
ficomp
mov
mov
push
pop
mov
cld
fcmovnu
pop
adc
mov
jmp
and
xchg
dec
jbe
push
and
sub
lods
in
fwait
test
test
push
out
movs
imul
pop
add
inc
das
mov
loopne
push
retf
xlat
mov
movs
jmp
inc
rcr
test
call
add
pop
sbb
mov
xchg
icebp
cmps
push
movs
fistp
je
dec
pop
push
push
push
cmp
adc
cld
mov
cdq
mov
fwait
mov
and
retf
push
and
cld
sbb
sub
(bad)
mov
mov
xor
jl
add
das
mov
clc
repz
mov
das
test
dec
cmp
push
clc
(bad)
xchg
xor
dec
mov
xchg
enter
jle
retf
mov
in
in
add
stos
inc
add
sbb
lods
xor
fldenv
adc
dec
aad
retf
xor
sub
and
(bad)
jns
inc
clc
call
pop
lock
jl
in
nop
mov
lds
or
clc
nop
int
fistp
ret
sbb
sub
or
cli
sub
cmp
outs
or
repz
movsx
jae
cmps
inc
jb
xchg
popa
jae
or
mov
xor
je
fwait
inc
stos
fld
xor
pushf
mov
fld
adc
dec
dec
adc
movs
mov
xor
jo
or
sub
test
frstor
jns
jnp
mov
push
mov
scas
or
mov
fistp
stos
fcmovnbe
sbb
add
inc
clc
mov
adc
imul
shl
adc
cs
std
sbb
jge
lock
fistp
rol
stos
pop
cmps
jnp
shl
and
jl
xchg
mov
scas
jbe
add
xchg
jmp
ins
xor
ja
jbe
cmps
cmp
mov
ret
sub
push
scas
popf
pcmpeqw
cmp
pop
push
std
pushf
scas
or
push
into
push
aad
popf
bound
mov
icebp
je
dec
sub
enter
mov
pop
sub
aaa
push
scas
dec
outs
lods
fs
je
adc
mov
cmps
add
pop
lods
aam
shr
(bad)
dec
inc
scas
mov
mov
lds
es
nop
out
(bad)
js
int
out
xor
or
daa
fbstp
dec
dec
aam
or
dec
sbb
inc
pusha
cmp
mov
and
(bad)
(bad)
xchg
pop
hlt
jp
in
(bad)
(bad)
stos
int
pop
out
bnd
retf
cmp
or
cwde
mov
pop
push
and
aad
pop
and
scas
popa
mov
jl
push
rcl
les
int3
mov
aam
out
retf
lods
xor
adc
add
jno
mov
and
sbb
jns
xchg
push
cmp
mov
fsubr
scas
push
not
and
ja
loop
xor
aaa
stc
sub
cld
push
xchg
aam
pop
mov
aaa
div
sub
aas
addr16
lea
jo
push
adc
xchg
lods
scas
movs
mov
xor
and
add
xor
jo
lds
outs
retf
mov
dec
mov
mov
fnstcw
pop
mov
pusha
(bad)
in
add
and
leave
cmps
pop
push
xor
test
mov
pop
add
cmp
bound
adc
addr16
xchg
cld
int
dec
add
jmp
retf
add
sub
ror
repz
or
or
pop
mov
sub
repz
test
jle
sub
sub
inc
or
jecxz
int
adc
cmp
lea
lock
push
mov
pushf
loopne
imul
data16
in
in
xor
std
outs
dec
jecxz
pushf
or
dec
out
cmp
or
sub
ret
or
push
cmps
mov
int
in
inc
pop
or
test
adc
push
test
mov
sbb
or
dec
ins
repnz
add
inc
add
inc
cld
mov
cs
imul
cdq
cmps
inc
or
sbb
push
out
fdivr
ficom
dec
adc
hlt
in
jnp
cdq
mov
sbb
test
retf
cld
ss
iret
sbb
imul
cmp
retf
sub
jl
cmp
retf
retf
xlat
cmc
not
sbb
sar
das
push
push
clc
(bad)
cmps
cmp
adc
jp
pop
clc
inc
loop
dec
xchg
adc
dec
and
ins
sbb
inc
cld
mov
addr16
popa
mov
dec
sbb
(bad)
cmc
sti
ret
(bad)
in
pop
sbb
jmp
ins
mov
ja
mov
mov
mov
and
gs
pop
push
std
mov
ror
jnp
or
push
sub
cdq
mov
or
push
pushf
mov
sbb
clc
add
push
sar
retf
mov
test
push
lahf
dec
adc
cmps
int3
out
mov
das
retf
xchg
and
xchg
scas
call
cmp
outs
pause
and
(bad)
jae
stos
repz
pop
rcr
int3
push
add
lahf
sub
pusha
pop
mov
push
xor
cmp
cmp
mov
jnp
mov
pop
jb
cwde
mov
ret
jmp
cld
adc
icebp
xchg
jecxz
jo
mov
out
inc
fcmovnu
test
clc
mov
dec
out
(bad)
(bad)
and
pop
test
jmp
or
push
mov
add
pop
ret
movs
jge
push
ds
repnz
out
jecxz
pop
push
jmp
daa
mov
(bad)
xchg
enter
sub
push
inc
add
fldenv
sbb
push
divps
nop
jl
ror
mov
mov
adc
shl
or
(bad)
jbe
stos
cmp
or
fcmove
cmps
(bad)
(bad)
pop
sbb
fucomp
jnp
xor
push
test
pop
stos
(bad)
xlat
(bad)
sahf
mov
rcr
sbb
xor
fs
(bad)
in
xchg
mov
cmp
pop
ror
mov
enter
cli
mov
ret
jbe
call
or
not
pusha
rol
jge
mov
pop
add
sbb
mov
cmp
and
lock
or
xor
nop
cli
dec
sbb
sub
pop
dec
sbb
aaa
inc
xor
cld
dec
sti
sbb
outs
popf
mov
mov
mov
rol
xor
or
fstp
push
(bad)
jle
int
sub
sbb
(bad)
xchg
popa
jge
jns
add
mov
lea
test
call
cs
pop
jg
jmp
(bad)
jmp
fucom
js
adc
xor
mov
aas
push
in
nop
repz
jo
sub
popa
add
add
xlat
jns
retf
xchg
mov
mov
and
inc
push
in
sbb
mov
(bad)
in
sub
inc
into
mov
cmps
enter
mov
dec
pop
outs
inc
fld
inc
jnp
mov
sub
ret
loopne
ins
sbb
push
mov
sti
clc
mov
dec
jo
std
fisub
mov
add
nop
stc
je
and
bound
out
or
pop
push
xchg
mov
(bad)
ja
sub
sub
xchg
or
pop
lods
sub
test
outs
shl
int
mov
int3
retf
imul
clc
movs
sub
add
mov
mov
test
xchg
pop
push
(bad)
daa
sbb
and
mov
popa
bswap
xchg
out
cmps
jno
cdq
sbb
pop
push
sbb
test
or
mov
mov
xchg
lock
movs
mov
lds
adc
rol
out
dec
sahf
sub
inc
pusha
out
xor
sar
call
add
lods
sub
mov
sub
or
es
lock
mov
and
cmp
inc
push
ja
inc
ret
out
mov
xchg
aad
stos
call
mov
cmp
fstp
pop
into
and
sbb
rcr
les
(bad)
addr16
mov
enter
loopne
or
mov
repz
stc
mov
and
add
lods
and
outs
es
xchg
les
test
or
dec
test
jg
jnp
js
cwde
bound
das
mov
inc
adc
rol
ds
xchg
push
jmp
pop
in
shl
loope
mov
mov
arpl
xchg
arpl
shl
shr
jge
(bad)
icebp
test
sub
push
adc
add
cmp
jge
int
adc
imul
inc
aas
cwde
movs
sbb
(bad)
(bad)
inc
xor
or
jae
jmp
xor
add
dec
dec
mov
xor
stos
mov
fidiv
sahf
outs
outs
pusha
sar
add
inc
cld
mov
in
icebp
add
push
repz
fwait
push
(bad)
pop
mov
les
jle
shl
sahf
push
sub
das
sti
inc
push
mov
pushf
ret
adc
fdivr
xor
lods
(bad)
rcl
mov
out
add
push
dec
sub
jmp
aad
rcr
loopne
xchg
push
(bad)
add
jnp
xlat
sahf
sbb
out
jno
jbe
xor
gs
ins
sti
add
mov
fmul
repz
dec
imul
mov
(bad)
cmps
test
arpl
lock
mov
or
or
jbe
hlt
in
jg
in
jge
sar
adc
sbb
lahf
pop
jmp
adc
and
jecxz
xchg
ins
cmp
adc
sub
mov
adc
js
xchg
fcmovbe
jecxz
and
adc
gs
in
push
sub
rol
imul
fsub
int
fcmovbe
inc
cld
or
mov
mov
xor
xor
sbb
pop
scas
rcl
popa
call
mov
retf
push
cmps
or
scas
sbb
scas
jge
repnz
pop
mov
dec
xchg
shl
jle
xor
inc
fistp
and
or
lahf
ja
je
jmp
aas
stc
fiadd
daa
fwait
adc
inc
mov
push
mov
test
enter
and
sub
cmp
sub
lahf
push
scas
inc
test
cmps
call
adc
sub
lahf
sti
mov
icebp
inc
or
cmp
stc
xor
mov
inc
mov
out
aas
or
out
push
lods
cmp
dec
xchg
sub
mov
mov
or
inc
jo
pop
in
sbb
push
xor
xor
mov
sub
aas
and
pop
jns
xchg
fistp
call
aaa
into
or
es
outs
arpl
cmp
mov
loope
imul
mov
pop
push
sbb
retf
movs
aad
int
rcr
inc
pop
addr16
clc
mov
retf
dec
jb
sub
mov
xlat
ins
sub
int
test
in
dec
or
dec
stos
aad
ins
adc
lea
cmp
out
not
mov
shr
xchg
mov
pop
into
push
pop
retf
scas
sbb
shl
(bad)
outs
jmp
pop
(bad)
inc
xchg
stc
fdivr
das
jb
sar
sub
scas
sahf
pop
jmp
in
mov
ins
mov
cwde
sti
and
aaa
leave
and
les
inc
movs
jmp
xchg
pop
mov
repnz
sub
cmp
das
add
jp
lock
movs
mov
push
mov
push
sbb
xchg
sub
xchg
mov
imul
or
shl
clc
movs
sub
scas
xchg
inc
dec
push
out
pushf
mov
inc
fld
test
cdq
jecxz
cli
adc
leave
push
push
push
push
mov
dec
mov
sbb
or
and
inc
cmp
(bad)
jmp
xor
rcl
push
movs
leave
jb
inc
adc
jg
in
mov
jne
mov
pop
jecxz
lahf
hlt
xchg
sbb
in
pop
or
add
xchg
pop
ret
xor
out
sub
and
dec
std
sbb
shr
cwde
loopne
fld
out
fdiv
adc
test
xchg
mov
fbld
lods
and
sub
inc
lea
cmp
mov
push
mov
mov
mov
jb
clc
pop
mov
and
int
stos
ins
xchg
arpl
fnstenv
jne
jne
mov
jp
cmps
jmp
mov
out
add
repnz
mov
iret
(bad)
mov
sbb
mov
push
ror
das
leave
jb
ins
loope
cwde
adc
pop
push
fnstcw
ret
loopne
xchg
pop
push
in
retf
push
js
daa
pop
pusha
and
bound
xchg
(bad)
xchg
or
(bad)
xchg
lds
sub
jns
sbb
mov
dec
ror
sahf
call
mov
ficom
mov
and
sbb
mov
fcomp
inc
(bad)
hlt
data16
int3
sar
cmps
mov
pop
rcl
dec
xor
jb
add
aad
jb
inc
inc
pop
(bad)
jmp
push
in
sti
jnp
mov
jl
jno
cmp
or
ffree
int
add
(bad)
call
pop
sbb
push
jbe
cmp
mov
pop
daa
sub
add
dec
scas
mov
sbb
sub
ret
cmp
fsub
lods
call
fistp
(bad)
add
inc
loop
outs
(bad)
(bad)
adc
fnstcw
mov
adc
in
inc
mov
mov
in
and
neg
stos
and
out
pop
ins
outs
mov
enter
pop
cmp
xchg
push
sbb
sbb
cs
sbb
mov
pop
pmaddwd
add
(bad)
ror
enter
fisttp
jae
inc
int3
nop
fcomp
popa
mov
sbb
btc
mov
or
jnp
lock
aam
mov
cmps
xchg
cmp
xlat
(bad)
cmp
sbb
or
push
mov
cmp
mov
mov
es
mov
and
or
mov
pop
sbb
add
mov
(bad)
(bad)
jmp
lds
mov
test
inc
pop
imul
add
es
lock
xchg
rol
adc
xchg
rcr
jno
dec
jp
mov
cmps
cmps
sbb
jae
and
int
push
out
xchg
fwait
out
leave
jg
inc
bswap
fidivr
dec
dec
into
or
push
dec
xchg
sahf
ja
push
cli
add
cmp
not
xchg
test
repz
sbb
jo
lea
mov
repnz
je
rcl
jne
fwait
(bad)
rcr
das
movs
and
call
mov
mov
nop
mov
test
pop
adc
icebp
cmp
pop
rol
lea
movs
(bad)
das
icebp
pop
and
mov
cli
loope
bnd
pop
mov
aam
mov
pop
mov
mov
das
repnz
jne
test
push
cwde
mov
cmp
std
xchg
or
retf
jns
push
adc
dec
push
mov
sub
loop
and
loop
adc
mov
and
xor
fidivr
imul
sub
cdq
dec
loop
cmps
test
xor
mov
ret
mov
leave
test
jmp
in
imul
inc
push
cmp
fstp
xor
inc
dec
dec
enter
fnstsw
adc
cli
lea
lods
and
push
cmps
out
jmp
neg
inc
out
and
xchg
dec
test
inc
repz
std
rcl
test
cwde
ds
(bad)
xor
shr
cmp
mov
clc
std
and
cli
push
jbe
or
adc
xchg
push
mov
jnp
in
xchg
dec
bnd
(bad)
or
rol
mov
cmc
pop
inc
cmp
out
int3
mov
inc
mov
adc
test
(bad)
aam
dec
fs
cmp
inc
loop
inc
test
idiv
ins
mov
in
inc
ins
dec
sbb
sub
mov
shl
sbb
jae
push
cmp
mov
js
and
xor
mov
icebp
jl
or
pop
ss
sbb
mov
mov
cmp
add
adc
repnz
or
cmp
das
fbstp
ds
mov
xchg
imul
or
add
bound
ret
(bad)
pop
aas
inc
ds
mov
jl
dec
ins
lahf
or
dec
movs
mov
movs
icebp
leave
xchg
mov
add
jno
test
cmp
sbb
hlt
jge
sti
movs
sub
mov
jmp
pop
daa
cmp
inc
outs
cmp
ror
dec
movs
adc
cs
lea
jno
pop
mov
int3
add
dec
add
adc
xlat
mov
jnp
mov
push
push
retf
sub
mov
leave
sbb
xor
pop
xchg
dec
sbb
and
stos
add
test
inc
cdq
add
pusha
(bad)
test
leave
xor
popa
mov
inc
ds
pop
xor
sbb
xchg
call
push
xchg
jp
out
test
jb
jp
push
or
clc
imul
cmp
arpl
jp
daa
dec
ret
fwait
mov
jmp
add
push
sub
js
and
lods
jle
pop
mov
mov
ret
jnp
cmp
push
gs
out
push
movs
mov
mov
lods
push
call
fcom
jmp
cld
jg
gs
repz
(bad)
cmc
enter
popa
enter
ss
in
adc
adc
retf
jmp
pusha
inc
cmp
adc
jmp
push
jg
aam
bnd
call
xchg
in
test
sar
in
fnstenv
xchg
jo
add
jno
into
loope
jecxz
jbe
rcr
xchg
dec
clc
mov
sub
mov
pop
std
into
add
inc
cld
mov
mov
inc
ins
cmp
mov
pop
jg
dec
retf
inc
or
and
(bad)
sub
int
outs
xchg
jno
dec
or
ds
retf
retf
or
loopne
add
xchg
scas
out
push
stos
cs
movs
adc
push
cmp
and
dec
mov
pminsw
inc
leave
and
pop
mov
loope
jl
fldenv
cmp
fs
pusha
push
int
ds
and
je
sbb
mov
push
pushf
adc
sahf
jne
lds
sbb
sub
add
aas
xchg
call
or
lock
mov
icebp
test
scas
push
lock
cmps
test
cmp
clc
popf
out
mov
mov
jp
stc
jbe
or
loope
or
adc
imul
ret
fisub
fsub
fld
(bad)
adc
xor
push
sbb
jp
mov
test
cmp
leave
shr
pop
mov
jp
push
cwde
cs
dec
mov
sahf
dec
stc
xor
push
pop
retf
pop
stc
ja
inc
jecxz
xchg
dec
add
loope
out
jmp
sbb
pop
pop
arpl
pop
ss
jmp
leave
cmp
retf
jo
xchg
outs
xor
jecxz
jmp
sub
or
xchg
add
sub
das
sbb
sub
mov
movs
add
jne
call
mov
js
mov
stos
mov
adc
imul
sub
call
scas
mov
aam
not
test
and
imul
mov
leave
jl
mov
addr16
xchg
and
pop
xor
xchg
lea
fimul
aam
mov
push
imul
push
jno
jnp
cwde
pushf
je
jne
std
jns
sbb
in
hlt
pop
and
div
xchg
pop
arpl
inc
push
cmp
shr
dec
sahf
jo
pushf
pop
mov
xchg
inc
movs
or
mov
sub
aaa
inc
jno
mov
dec
xor
and
pusha
pusha
stos
jmp
mov
je
sub
aad
mov
or
jle
jg
aad
xor
mov
cld
jmp
jp
mov
scas
movs
mov
or
(bad)
jbe
ror
out
out
ror
mov
call
pusha
ret
xchg
in
mov
cmp
cmp
inc
fld
pop
jne
in
cmp
xchg
pop
inc
fcmovb
dec
xchg
mov
mov
jecxz
jne
sar
les
bound
cmp
or
xor
bound
mov
cmp
ss
jae
push
(bad)
adc
xchg
call
sbb
xchg
adc
xchg
lds
mov
push
cmp
out
adc
inc
sub
cwde
jle
push
push
pop
adc
cwde
cld
out
dec
into
hlt
in
fwait
ins
es
mul
loopne
jp
fisttp
sar
xor
inc
xor
data16
fistp
inc
dec
shl
xlat
pop
mov
fwait
mov
push
xchg
jb
xor
mov
xchg
adc
xor
push
or
fadd
pop
pop
and
ret
xchg
dec
imul
jno
dec
in
jmp
shr
test
and
lods
imul
cmp
or
aaa
or
mov
add
add
mov
shl
and
shr
push
cmp
aam
fist
out
pop
xchg
jle
and
jle
sub
dec
push
sub
inc
inc
xchg
jae
dec
test
cs
mov
mov
loope
scas
sbb
or
xchg
add
mov
in
out
push
pop
xor
jg
jmp
add
inc
push
mov
inc
mov
jnp
sbb
mov
rcr
mov
mov
push
pushf
ins
fninit
ins
or
mov
rcr
dec
shl
mov
mov
push
(bad)
and
sub
loope
cli
jmp
push
push
push
loopne
lea
push
mov
addr16
out
jmp
mov
iret
loopne
jg
fsubrp
out
xchg
push
psubw
adc
dec
mov
dec
dec
mov
xor
ins
out
mov
xchg
lahf
mov
xor
scas
cmp
test
hlt
xor
stos
pop
repz
rol
retf
mov
ins
popa
sub
mov
iret
lods
jp
stc
pop
inc
and
push
in
sub
into
jb
rcl
clc
dec
add
mov
(bad)
adc
adc
jnp
cmc
shl
xchg
ret
gs
xor
xchg
push
sub
adc
test
mov
sub
and
stc
lods
add
movs
movs
aad
pop
mov
cli
xchg
cld
lahf
cmp
xor
stos
push
ins
jl
fwait
jno
push
repz
mov
(bad)
les
inc
and
jmp
pop
test
je
mov
sub
mov
inc
push
cmps
aad
jo
outs
xchg
nop
add
stc
aad
mov
jmp
mov
addr16
popa
pop
(bad)
xor
jmp
retf
and
mov
or
cmp
ja
jg
jns
mov
add
jnp
fs
mov
sub
int
cmp
jo
cmps
popf
mov
sub
mov
out
inc
xor
(bad)
outs
or
sub
pop
outs
test
xchg
cli
out
stc
xor
jb
(bad)
fldenv
xchg
jmp
mov
mov
sbb
cld
pop
stos
fsubr
mov
les
jns
adc
mov
fdiv
imul
scas
sti
mov
pop
jo
out
imul
mov
fild
or
or
xor
pop
push
cwde
sbb
aam
sbb
shl
leave
sbb
xlat
sbb
fild
jb
xchg
enter
cmp
sub
xor
dec
ret
data16
cmp
sbb
push
cmp
scas
pop
iret
out
ja
leave
xchg
inc
lods
cmp
ss
enter
repnz
push
pop
adc
adc
outs
add
fwait
ja
xchg
icebp
jp
stos
js
or
mov
fs
out
add
cmp
jae
test
arpl
xor
dec
mov
jns
mov
mov
std
ficomp
dec
jg
movs
clc
sahf
cmps
and
fs
sbb
aaa
jae
push
jecxz
pop
pop
(bad)
mov
mov
popf
fcmovb
ret
pop
adc
adc
hlt
aam
xchg
mov
sub
imul
scas
fnstcw
addr16
xor
call
dec
mov
hlt
inc
pop
jo
ficom
nop
ret
cmp
mov
repnz
pop
pop
ror
xchg
cmp
cwde
push
mov
jg
rcr
imul
test
mov
xchg
mov
pop
or
xor
std
in
fdivp
xchg
scas
push
fadd
shl
adc
lahf
scas
data16
ficomp
lahf
fiadd
sub
sar
pusha
loop
jo
sti
inc
loope
cmp
cmp
cmp
lds
cmp
rcl
pop
cmp
inc
call
mov
inc
test
mov
sbb
inc
aam
or
ds
ret
cdq
ror
test
cli
xchg
sbb
sti
pop
push
outs
adc
pop
mov
xchg
sti
shr
xchg
data16
stos
jnp
out
dec
cmp
and
cmp
aaa
std
fadd
jle
sti
and
lods
and
sbb
xchg
mov
mov
dec
xor
sbb
add
or
int
cld
aaa
sub
ins
dec
leave
mov
cmps
xchg
and
jecxz
mov
sub
push
dec
push
enter
lock
xchg
ret
push
sub
(bad)
jno
mov
(bad)
aam
adc
icebp
retf
sti
les
ins
xor
pop
sar
cmp
pushf
pop
cmp
push
call
xchg
inc
add
bound
sbb
push
daa
xlat
mov
push
or
mov
scas
adc
xchg
jne
adc
mov
out
(bad)
ins
mov
leave
cmc
lock
add
xchg
pop
mov
aam
and
(bad)
ss
sbb
push
js
inc
fimul
xchg
mov
ret
mov
inc
sub
hlt
cmp
jge
push
out
fld
hlt
cmc
push
cdq
clc
(bad)
test
cmps
push
mov
jl
add
in
pop
cmps
push
ss
mov
push
dec
mov
dec
fwait
int
push
sub
fsub
push
cli
and
mov
fdiv
xchg
inc
aad
pop
pop
add
push
in
iret
xlat
add
popf
adc
mov
dec
lods
adc
pop
xor
mov
stc
fistp
add
mov
xchg
daa
dec
cmp
(bad)
(bad)
mov
mov
mov
sahf
or
jge
mov
pop
pop
sub
inc
ins
mov
inc
jnp
cmp
sbb
(bad)
pop
rcr
adc
fcom
mov
dec
jmp
sub
leave
and
xor
icebp
or
inc
push
xlat
push
push
cmp
sahf
retf
add
stc
cmp
xor
call
jp
dec
sbb
lods
mov
(bad)
cmps
out
cld
(bad)
adc
sub
aaa
ins
sub
inc
fdivr
(bad)
fcom
dec
cmps
xchg
(bad)
arpl
push
repnz
and
call
aas
imul
jecxz
(bad)
dec
out
mov
ins
jne
iret
lea
out
fnstcw
call
fbstp
in
sub
xchg
sub
aas
inc
imul
movs
(bad)
in
popf
hlt
leave
popf
sar
add
mov
sub
stos
scas
jbe
mov
sahf
bound
leave
fsubp
jl
dec
push
mov
pushf
into
shl
outs
lds
mov
cmps
fiadd
jecxz
rcr
ja
pop
mov
outs
stc
inc
shr
pop
pop
mov
daa
push
mov
mov
mov
inc
pop
popa
push
fucomi
mov
frstor
pop
adc
daa
mov
mov
jbe
ror
mov
ins
call
mov
in
add
xor
ficom
pop
fisttp
sub
mov
pop
mov
adc
add
dec
ja
jae
pop
adc
mov
test
icebp
not
out
loope
jmp
inc
mov
xor
fimul
pop
xlat
inc
pop
into
push
clc
aas
in
fcomp
lods
mov
enter
mov
into
adc
sub
aas
and
jp
push
push
inc
mov
into
cmp
xor
jg
out
nop
js
dec
out
int
xchg
sbb
scas
add
dec
aas
jle
mov
jnp
jmp
scas
inc
push
mov
fsub
xlat
xchg
rcl
mov
popa
mov
push
aam
xchg
fbstp
hlt
jo
push
pushf
sbb
mov
mov
inc
inc
icebp
push
and
arpl
mov
xor
fadd
outs
in
cmp
add
lea
inc
or
xor
push
(bad)
(bad)
lods
sub
push
mov
mov
mov
icebp
int
mov
aam
(bad)
dec
pushf
cmp
push
sub
hlt
stc
mul
push
ins
add
xchg
sub
(bad)
mov
sub
cmp
push
sar
imul
pushf
fimul
idiv
or
cs
cld
fstp
jl
push
cmp
xchg
imul
pusha
jecxz
mov
adc
(bad)
movs
jl
pop
nop
clc
pop
sub
imul
out
adc
and
lods
inc
sub
sub
aad
push
jge
jmp
adc
leave
addr16
xor
add
addr16
push
inc
psubq
in
loopne
adc
jmp
imul
push
loop
mov
lods
inc
aam
int3
movs
xlat
loop
mov
fmul
loopne
jge
jl
jl
fild
out
xor
pop
add
shl
jmp
pop
inc
inc
dec
fldenv
push
jecxz
int3
adc
call
mov
mov
out
or
test
sbb
xor
outs
pop
add
jo
jns
js
or
dec
xor
in
je
fidiv
mov
in
cdq
cmp
mov
pop
xchg
(bad)
xor
outs
popa
sbb
or
imul
bound
(bad)
ss
rcr
push
xor
cmp
popf
cld
loopne
shl
pop
movs
jge
jns
dec
mov
mov
sbb
xchg
pop
mov
inc
dec
and
fmul
in
(bad)
xor
cmp
add
lahf
hlt
mov
test
lods
icebp
inc
(bad)
pusha
sbb
test
iret
cld
xchg
enter
icebp
inc
pop
mov
jo
fdivr
adc
fstp
add
jmp
lods
adc
(bad)
out
iret
mov
cmp
jge
(bad)
addr16
cli
xchg
loope
cmc
adc
hlt
dec
push
cld
les
dec
push
mov
fcom
or
add
fdiv
nop
repnz
cmp
dec
(bad)
std
adc
js
jnp
out
jp
shl
mov
movs
cld
jge
sbb
lock
xchg
bound
fsub
addr16
jg
push
xor
inc
mov
pop
test
push
jns
jb
fwait
xor
xor
mov
and
jecxz
(bad)
push
push
mov
lahf
or
dec
loope
and
push
ror
dec
retf
cmps
and
mov
test
xchg
push
lods
xlat
mov
popa
dec
mov
adc
mov
push
popa
jmp
mov
add
nop
mov
inc
out
inc
lock
jnp
jl
mov
mov
stc
cmp
inc
add
ss
push
sub
(bad)
mov
pop
ficom
xor
and
jmp
and
(bad)
ins
sbb
dec
dec
mul
inc
test
retf
sub
pop
xor
add
addr16
nop
cmp
jmp
push
aam
cmps
dec
aas
inc
mov
sub
bound
fimul
mov
(bad)
inc
mov
mov
xchg
pop
sbb
adc
clc
div
xor
jns
std
adc
aad
int3
jb
mov
int
inc
sub
repz
and
cwde
mov
inc
pop
add
or
pop
adc
xchg
xchg
inc
cmp
cmp
push
addr16
sub
mov
pop
add
repz
(bad)
aad
pop
mov
ins
dec
aas
fadd
inc
enter
push
pop
mov
pop
pop
lods
fcmovnbe
sahf
xchg
jbe
lods
xor
aam
cmp
arpl
setnp
mov
in
push
pop
aad
mov
cmps
xchg
jmp
enter
mov
add
xlat
dec
inc
adc
jns
test
lea
adc
xchg
xchg
(bad)
jecxz
int
and
or
mov
inc
mov
jmp
sbb
inc
and
out
scas
push
xchg
and
std
dec
jbe
(bad)
push
dec
mov
fwait
mul
retf
or
fidivr
cmp
add
mov
sbb
(bad)
inc
xor
xchg
pop
(bad)
adc
sar
pop
outs
imul
addr16
in
fisttp
pop
push
cld
cmp
xchg
and
mov
retf
retf
inc
jg
lahf
pop
mov
xchg
sbb
test
lsl
mov
dec
xchg
jmp
out
rol
mov
push
shl
(bad)
call
xchg
rol
jb
addr16
mov
hlt
adc
inc
outs
dec
cld
mul
sub
push
ret
xor
jl
jmp
xchg
mov
enter
leave
inc
ja
sbb
jae
clc
sbb
cmps
je
or
daa
mov
xor
fistp
xchg
mul
dec
xor
aam
jmp
xor
cmps
xor
jmp
mov
ins
pop
mov
add
movs
inc
in
pop
sti
and
sub
cdq
ins
mov
js
js
mov
movs
mov
sti
push
inc
test
mov
mov
adc
loopne
scas
out
and
lock
out
xor
mov
jnp
xor
pop
dec
sbb
outs
pop
jmp
mov
dec
dec
xchg
jecxz
sti
push
lock
cmp
push
mov
jg
jae
mov
push
cli
mov
pop
sbb
repz
push
cmp
jle
fwait
enter
cmc
in
fstp
enter
sub
ret
cs
fld
push
sub
jge
inc
jnp
push
or
sub
cmc
jnp
aas
je
out
jmp
mov
ds
mov
push
jg
movs
pop
pop
popa
sub
jp
ror
jns
cs
xor
pop
(bad)
scas
sub
div
into
ins
inc
stos
fcomp
adc
add
loope
not
addr16
ins
push
aaa
jmp
jmp
dec
pushf
jmp
xchg
imul
(bad)
call
repnz
pop
dec
push
push
in
push
in
out
cmps
out
ret
scas
mov
enter
jp
add
fdiv
stos
lock
push
(bad)
dec
int
pop
inc
mov
not
cs
jne
jle
add
xchg
adc
jae
stos
sub
and
fisub
shr
(bad)
rcl
jl
cdq
inc
dec
popa
dec
cmp
inc
js
cwde
fdiv
jg
add
push
mov
mov
or
mov
scas
mov
retf
clc
repnz
(bad)
mov
mov
adc
jno
adc
add
dec
xchg
repnz
mov
mov
(bad)
pop
push
into
push
xchg
stos
cmp
stos
shl
xor
out
ficom
and
ss
pop
hlt
aas
fnstcw
imul
addr16
bound
pop
xor
mov
jl
and
sahf
(bad)
out
jbe
mov
(bad)
pop
nop
test
daa
dec
add
dec
fs
mov
cs
shl
xchg
pop
out
mov
sti
sub
push
jne
sub
fistp
icebp
cmc
add
jmp
mov
jmp
(bad)
sub
inc
mov
lods
repz
mov
cmp
nop
iret
jle
push
scas
sbb
inc
dec
add
or
jl
sbb
push
pop
adc
aaa
call
outs
inc
rcl
ins
mov
adc
pop
call
rcr
sub
inc
add
fwait
xchg
loope
aas
cs
in
adc
push
jb
shl
push
and
test
add
rcl
dec
xchg
xchg
stc
repnz
and
iret
(bad)
and
out
cld
test
push
mov
jl
rcl
les
out
xchg
jb
sbb
xor
sahf
cmc
mov
call
mov
sbb
xchg
aaa
dec
fidivr
dec
aaa
xchg
nop
sub
aaa
inc
mov
test
and
mov
addr16
sub
pop
js
mov
cmps
mov
aad
inc
les
popf
push
outs
inc
pop
lea
js
es
push
pop
xchg
jge
push
add
paddusb
jno
fsub
in
push
mov
and
repz
jmp
xchg
pop
push
(bad)
je
std
int3
jbe
xor
cld
cmps
adc
mov
sub
sbb
mov
jo
lods
add
dec
popf
fidiv
mov
xchg
and
aaa
pushf
jmp
rol
shl
jl
into
inc
ins
mov
and
pop
shl
fild
jbe
and
pusha
and
jl
or
loopne
and
fmulp
enter
pop
sub
jp
mov
shl
rcr
mov
dec
mov
cmp
mov
or
add
jmp
mov
fs
xlat
jo
sub
fldenv
movs
loop
ficomp
mov
icebp
cmp
pop
push
pop
retf
and
loop
pusha
out
fcmovnb
mov
mov
push
cmps
fadd
imul
cmp
and
xchg
pop
shr
lods
jnp
sbb
push
add
loopne
ret
mov
xchg
jle
xor
jmp
sar
out
in
loopne
pop
inc
jbe
(bad)
mov
inc
sbb
outs
mov
ja
jge
test
sbb
jae
into
mov
movs
inc
xchg
cmps
hlt
clc
mov
inc
adc
jb
loopne
mov
sbb
test
mov
stos
add
or
sbb
cmps
xchg
pop
mov
cmps
xor
pop
xchg
jbe
xchg
test
sti
add
bound
xor
mov
fwait
jne
out
xor
into
push
sub
je
dec
xor
out
retf
bound
dec
push
mov
popf
sbb
mov
cld
mov
out
ror
xor
dec
pop
je
cmp
push
shl
jbe
stos
das
pop
or
xchg
sar
mov
scas
or
dec
dec
pushf
xchg
mov
shl
add
call
jnp
xor
or
out
adc
jp
push
imul
lods
adc
add
and
movs
pop
push
push
popa
and
in
leave
cwde
sbb
lock
(bad)
call
mov
mov
pop
retf
sbb
push
jnp
add
sar
repz
jl
or
std
pop
add
mov
xor
test
pop
dec
mov
sbb
xchg
dec
adc
test
ret
xor
jns
mov
ret
push
adc
mov
std
test
shr
loopne
cmps
lods
retf
lods
sub
stos
cwde
xchg
lock
or
inc
lahf
jb
scas
push
lds
cs
xchg
jecxz
xor
fcomp
cmp
mov
pop
inc
sbb
pushf
mov
das
aad
jle
adc
(bad)
mov
mov
popf
cmp
pop
retf
(bad)
push
push
mov
sbb
push
mov
aad
inc
jne
dec
cli
xchg
jne
ss
sub
mov
and
shr
jae
inc
scas
bswap
std
sbb
lds
hlt
mov
jle
dec
adc
test
scas
mov
sbb
rcl
mov
(bad)
lahf
sti
loop
push
push
movs
mov
mov
not
xlat
xchg
sbb
mov
mov
xor
pop
mov
lea
mov
shr
mov
mov
cld
out
inc
or
mov
add
xchg
(bad)
(bad)
stos
imul
sbb
mov
cmp
int3
mov
dec
icebp
mov
pop
mov
sti
cdq
jmp
push
(bad)
jne
test
scas
mov
jp
imul
mov
mov
mov
sbb
push
out
add
adc
pop
es
sbb
jmp
(bad)
cmc
or
mov
xchg
in
pushf
out
dec
fst
sub
xor
sti
ins
loopne
and
sbb
out
in
imul
and
push
inc
sbb
repnz
nop
fwait
and
nop
ret
push
pusha
jns
mov
push
sub
mov
cmp
push
jmp
pop
repz
xor
sbb
push
inc
test
mov
imul
cmp
das
arpl
push
jbe
and
dec
mov
ret
test
sbb
paddusb
push
pop
add
inc
mov
jae
je
cmc
pop
inc
xor
(bad)
mov
daa
mov
popf
repz
movs
hlt
and
es
pop
pop
arpl
lods
cmp
sahf
inc
pushf
shl
or
sbb
outs
push
popa
fcom
out
pop
repnz
dec
into
push
dec
mov
pop
mov
iret
jmp
xchg
in
repnz
sbb
icebp
loope
sbb
fsubp
lea
add
add
adc
cld
cmp
push
mov
pop
imul
xor
ret
aas
xchg
jnp
aas
add
mov
sahf
(bad)
stc
push
jl
fbld
mov
callw
or
push
test
les
jge
pop
mov
jle
adc
rol
div
fcomp
dec
cmp
push
sub
enter
ret
xchg
dec
adc
imul
aad
movs
js
loop
pusha
sti
sub
test
sub
lahf
sbb
jmp
jecxz
aad
stos
xchg
leave
jae
outs
mov
imul
push
aad
add
mov
lahf
icebp
sbb
push
cmp
stos
cmp
icebp
in
das
ror
or
gs
jmp
out
push
jmp
pop
int
rcl
inc
mov
jo
mov
fcmovb
cli
push
icebp
fidiv
in
shl
dec
imul
pop
xchg
xchg
mov
jae
rcr
dec
push
rcl
xchg
call
mov
add
pop
lds
stc
cs
imul
ret
retf
sub
sbb
popa
cmp
xor
xor
xor
mov
lods
out
or
dec
outs
aas
aam
push
mov
retf
mov
inc
add
dec
(bad)
int3
adc
cmp
dec
in
les
or
test
dec
repnz
dec
adc
xchg
punpcklbw
push
fbstp
iret
add
push
xor
mov
sbb
sbb
adc
xor
gs
adc
add
cmps
mov
loope
and
add
fisubr
sbb
daa
test
adc
sahf
sahf
les
dec
shl
dec
mov
data16
jno
push
push
jae
mov
and
cmp
nop
arpl
xor
cs
call
cmps
je
ret
in
sbb
jmp
xor
scas
cmps
mov
add
sahf
test
adc
lods
cwde
(bad)
fmul
mov
fcom
and
push
jge
iret
or
lock
dec
add
sar
lods
adc
retf
mov
dec
push
aaa
sub
pop
pop
fld
xor
adc
mov
dec
push
test
(bad)
icebp
rcl
and
mov
xlat
pop
cmps
aas
nop
rcr
mov
add
mov
mov
(bad)
stc
sbb
icebp
(bad)
ins
jno
mov
pop
dec
dec
call
push
dec
push
pop
and
ret
inc
loop
outs
jns
xchg
or
dec
fisub
out
cli
sub
aam
pop
and
popf
sub
imul
sahf
xchg
or
sub
stc
jecxz
mov
gs
enter
frstpm(287
inc
mov
xor
out
iret
and
in
in
push
cmps
(bad)
ins
cmc
aad
and
push
sbb
lock
mov
pop
(bad)
adc
nop
mov
retf
in
sbb
or
loope
mov
cwde
mov
and
sbb
mov
jns
cdq
cmp
jmp
push
nop
std
clc
pop
(bad)
jp
pop
test
xchg
inc
mov
es
sbb
jmp
push
ds
jae
and
inc
mov
mov
arpl
jmp
stos
lds
jo
push
scas
sbb
or
adc
lea
shl
mov
ss
aam
inc
xor
lods
push
jl
inc
pop
stos
xchg
jl
es
bound
dec
sti
ins
stc
(bad)
pop
std
mov
dec
xchg
aaa
int
pushf
icebp
ds
iret
call
jb
mov
not
xor
ja
mov
enter
push
xchg
push
mov
or
fsubr
mov
add
stc
xchg
mov
lods
js
mov
dec
addr16
div
cmp
ret
lods
fist
test
or
sbb
mov
test
data16
outs
and
or
sti
(bad)
fsubr
mov
ficom
push
mov
add
aad
ins
data16
jnp
xchg
movs
das
xchg
sar
push
push
mov
dec
neg
sub
in
mov
add
xor
enter
cmp
popa
and
sbb
loopne
mov
icebp
(bad)
nop
xor
stos
int
mov
pop
leave
and
(bad)
xchg
mov
nop
and
lods
jne
push
fld
jbe
xor
pop
fimul
dec
xor
cmps
ss
fndisi(8087
arpl
add
fs
push
cmps
sub
or
arpl
pop
aaa
iret
mov
xor
push
mov
es
into
fcmovb
sahf
xchg
icebp
fmulp
lods
(bad)
mov
out
outs
jl
mov
repnz
repz
and
jle
pop
cmp
cmp
mov
lods
fisttp
adc
sbb
jae
clc
cmp
mov
push
mul
sar
mov
les
push
rcl
addr16
mov
add
outs
(bad)
mov
pop
inc
sbb
pop
push
push
xor
push
mov
ja
dec
inc
xchg
pop
pop
xchg
sahf
loope
sub
test
xor
leave
sti
dec
jge
xlat
gs
cs
arpl
push
popf
clc
pop
sub
mov
shr
popa
pop
imul
out
call
or
pop
push
jns
cmp
push
cmps
mov
jp
mov
inc
ss
cmp
out
inc
push
cmc
arpl
icebp
and
ror
mov
ret
imul
add
mov
fldpi
inc
mov
lock
cmp
adc
cmc
sbb
dec
out
add
test
(bad)
mov
cmp
(bad)
add
adc
std
neg
int3
mov
loope
ins
dec
push
int3
adc
sub
(bad)
nop
fidiv
cld
nop
repnz
lea
jae
mov
jle
xor
repz
in
sub
add
fcmovne
cdq
dec
mov
xor
add
jmp
movlps
push
mov
les
aad
sub
inc
fnsave
mov
les
mov
push
stc
test
inc
lea
inc
fist
aaa
ret
and
hlt
sub
xchg
loop
jo
inc
fnstsw
dec
ja
in
sub
pop
sbb
xchg
(bad)
ja
jmp
clc
jecxz
mov
jno
hlt
mov
arpl
push
or
xchg
pop
push
loop
or
je
lahf
test
mov
xor
xor
(bad)
enter
scas
pop
mov
lods
call
inc
dec
sub
sub
retf
cdq
xchg
xor
adc
cli
jbe
or
jo
cmc
xchg
in
xchg
nop
and
sub
icebp
ds
nop
push
mov
mov
push
sbb
pop
out
aaa
pop
sbb
pop
add
(bad)
mov
ror
pop
mov
enter
sub
add
inc
jge
lea
pop
(bad)
pusha
idiv
js
pop
xor
jge
adc
loope
dec
pushf
stc
clc
inc
pop
add
xor
stos
icebp
out
out
mov
loope
cmp
sbb
loop
repz
js
mov
jb
sbb
adc
fdiv
(bad)
and
add
push
rol
test
sbb
push
inc
scas
stos
inc
push
inc
nop
add
jmp
inc
fdivr
jo
adc
cli
(bad)
pop
mov
repnz
fild
neg
mov
xchg
aad
fcom
push
add
call
jge
shrd
xlat
cmp
and
and
fwait
scas
dec
jae
mov
mov
cli
ja
add
jmp
or
shl
xlat
sub
std
popa
imul
xor
cs
mov
sbb
pop
test
add
xchg
lahf
and
pop
fs
popa
jo
mov
shr
xlat
outs
or
jne
stc
or
xlat
push
cld
mov
shl
or
out
mov
inc
nop
pop
or
popf
cmp
sbb
xchg
mov
and
sbb
nop
pusha
mov
jl
xchg
mov
shr
dec
scas
arpl
and
fcmovb
lock
fsub
push
dec
shr
ins
and
cmp
sub
data16
je
push
call
out
sub
inc
fdiv
and
inc
outs
repnz
sti
push
or
cmp
and
sub
mov
mov
xor
ss
xchg
pusha
iret
adc
adc
inc
(bad)
in
lods
adc
and
out
sbb
aam
loop
loope
ja
mov
inc
pushf
xchg
pusha
test
cdq
scas
or
push
jg
cmps
js
iret
jle
inc
mov
adc
jl
imul
in
jecxz
xchg
push
movs
adc
jle
mov
dec
mov
mov
pop
iret
dec
lahf
(bad)
xchg
cmps
mov
xor
jp
jae
int
enter
or
(bad)
jmp
mov
push
(bad)
loop
lds
lea
loopne
ss
sbb
fdivr
idiv
outs
xchg
or
clc
in
sbb
lds
sbb
into
in
dec
test
mov
mov
cli
sbb
push
in
xor
out
xchg
mov
push
or
add
push
cmps
push
int
sbb
out
popf
inc
adc
and
dec
ficomp
mov
xchg
(bad)
xchg
jae
pop
ss
xchg
push
mov
sahf
lea
aad
pushf
test
scas
lods
mov
pop
pop
sub
jmp
mov
ror
or
pop
sub
test
or
sub
inc
pop
pop
dec
adc
ds
in
push
inc
mov
test
sbb
out
nop
dec
daa
mov
mov
push
add
push
push
test
and
push
jg
ins
in
push
and
dec
add
pop
lahf
sub
mov
push
jmp
icebp
push
jmp
in
xchg
jae
gs
xor
idiv
cmp
ja
pop
inc
cdq
retf
in
cmp
push
pushf
clc
sub
arpl
es
pop
aad
in
add
mov
mov
ins
inc
cmp
mov
bound
or
and
(bad)
sti
out
pop
jmp
retf
xor
adc
test
popf
cli
mov
lds
pop
lock
push
pop
jo
xchg
loopne
rol
data16
xchg
stos
test
js
call
sbb
dec
iret
mov
cmp
xchg
mov
mov
ins
shl
sti
pandn
mov
shl
stos
call
fist
xchg
sbb
dec
lahf
sahf
enter
add
or
into
and
jecxz
leave
enter
xchg
out
das
push
dec
dec
inc
(bad)
out
leave
sar
stos
ins
in
test
adc
inc
jmp
cmps
sub
mov
leave
mov
ds
lock
enter
rcl
test
test
mov
je
mov
pop
repz
sub
iret
add
inc
aas
pop
push
sbb
pop
fdivr
inc
xchg
sub
enter
cmc
daa
sub
cmp
stc
ret
test
ds
fdivp
aaa
fwait
addr16
cmp
inc
ss
sub
push
xchg
mov
movs
clc
in
jne
push
adc
jecxz
fwait
pop
(bad)
jne
fst
hlt
xchg
dec
aam
inc
mov
fdivr
in
ss
xchg
xchg
in
dec
pop
and
mov
xchg
or
push
adc
std
fs
ja
lods
jne
xor
mov
pop
jecxz
test
in
and
sub
ins
push
add
cli
jge
lds
xchg
aaa
(bad)
xor
(bad)
mov
jo
cdq
mov
movs
jbe
not
(bad)
push
add
push
push
aaa
bound
popa
ficomp
mov
fisttp
push
(bad)
in
jno
pop
dec
sub
pushf
data16
imul
fbld
out
or
sub
stos
and
mov
jmp
dec
fld
mov
sbb
cmp
pop
bnd
popf
or
mov
adc
popa
xchg
dec
and
jmp
push
imul
mov
add
test
xor
jnp
jecxz
mov
dec
fisub
add
xor
dec
mov
scas
sub
aaa
popa
cs
rep
push
mov
bound
lea
es
inc
adc
dec
stos
mov
mov
cs
xor
inc
push
dec
xchg
les
(bad)
ja
sahf
js
mov
sbb
jmp
into
iret
mov
mov
adc
call
or
jae
popf
(bad)
repz
loope
test
xor
lahf
ds
xchg
add
sub
jmp
cmp
add
dec
mov
xor
cmc
aas
mov
sub
repz
or
and
mov
jns
xor
ja
or
or
sub
cmp
lds
add
or
jnp
jns
ret
mov
imul
mov
cmps
adc
outs
dec
stos
sub
test
cmp
mov
pop
fs
aaa
int3
test
test
pop
(bad)
call
pop
mov
into
dec
repnz
scas
mov
ins
mov
and
loopne
in
cmps
xchg
mov
jmp
dec
retf
retf
stos
mov
xor
outs
xchg
push
ds
mov
pop
pushf
fidivr
(bad)
mov
ds
cmp
add
adc
sub
mov
xchg
xchg
sti
dec
xor
shl
mov
(bad)
adc
mov
mov
hlt
mov
lods
xchg
out
cmp
or
(bad)
xchg
sub
frstpm(287
int3
add
mov
push
int3
mov
lock
push
sti
jg
lods
pop
mov
mov
fnstenv
in
rcl
packuswb
sbb
dec
cmc
xor
xor
out
test
daa
lods
mov
ss
inc
aad
inc
fnstsw
xor
rcl
fs
ins
mov
inc
dec
jbe
mov
jne
mov
(bad)
jle
inc
daa
into
bound
dec
inc
ins
pop
cmps
push
fimul
call
(bad)
cli
out
shl
add
into
daa
mov
xchg
dec
les
adc
retf
mov
(bad)
out
dec
retf
lods
mov
jmp
dec
(bad)
rol
xchg
int
lods
xchg
dec
test
shr
jge
jmp
sub
test
jb
xor
fwait
ja
mov
(bad)
or
arpl
shl
test
push
mov
adc
sub
mov
jmp
dec
and
repz
(bad)
leave
jns
jmp
movs
mov
out
into
lea
jl
jmp
mov
inc
lea
jge
push
jp
sti
sbb
iret
je
mov
inc
cmps
pop
sub
pop
xor
sub
test
pop
dec
sub
dec
fwait
cmp
pop
fistp
call
sbb
and
jmp
enter
and
cwde
outs
shl
inc
imul
xlat
(bad)
mov
cld
stc
retf
in
inc
adc
je
dec
sbb
push
and
push
ret
mov
mov
sub
mov
mov
leave
lods
xchg
and
aam
or
lahf
add
jg
dec
and
add
repnz
inc
jo
jns
dec
xchg
test
sbb
rol
pop
(bad)
mov
pop
adc
and
out
xor
stos
es
adc
inc
xchg
enter
jmp
fadd
push
mov
test
jnp
dec
call
add
test
push
cmps
outs
test
and
sub
jns
inc
fiadd
dec
cmp
lock
xor
(bad)
pushf
imul
cwde
cwd
add
call
pop
sbb
repnz
and
fwait
and
les
push
ins
sysret
xchg
jge
jo
sbb
ss
sub
push
mov
inc
arpl
jp
cmp
xchg
cmp
xor
loop
cld
cmp
jle
bound
jnp
sub
lds
scas
jne
scas
inc
stos
shl
and
std
mov
pusha
dec
gs
mov
lahf
into
aad
movs
mov
stc
sahf
dec
mov
jl
stos
ds
pop
jl
cmp
ins
sub
sbb
leave
movs
sub
int3
cmp
inc
bswap
sub
sbb
neg
call
xor
fmul
mov
loop
std
out
mov
and
test
leavew
(bad)
repnz
inc
jp
or
add
enter
rcl
add
std
inc
jmp
jge
push
push
adc
mov
ss
rcl
ins
inc
ja
ds
outs
jb
loope
call
dec
neg
inc
cmp
sti
fucomip
mov
mov
daa
jg
and
or
icebp
mov
in
mov
pushf
sub
sbb
out
push
aad
sub
push
les
aam
shr
jae
in
popf
xchg
sti
pop
pop
jmp
mov
test
(bad)
vcmpps
adc
adc
shr
arpl
sbb
je
lahf
cld
in
rol
sub
push
add
(bad)
ins
cmp
call
add
xchg
inc
out
daa
xlat
mov
inc
int3
jbe
cmp
lea
out
inc
adc
push
dec
repnz
sub
pop
hlt
pop
retf
mov
mov
push
xor
stc
lock
sub
loopne
pop
repz
mul
rcr
lods
dec
popf
lahf
lds
and
repz
adc
div
cmp
xor
nop
pop
stos
mov
jo
pop
xor
push
out
xchg
pop
leave
vmaskmovdqu
loope
inc
inc
addr16
icebp
xor
mov
icebp
xor
pushf
add
lahf
adc
lea
inc
sbb
cld
outs
jae
adc
es
popf
jmp
test
outs
mov
std
sub
ds
push
mov
add
lahf
sbb
adc
pop
(bad)
test
ja
jmp
int3
adc
cwde
aaa
jno
es
pop
into
dec
test
ja
out
jb
mov
bound
dec
cmp
mov
loopne
test
sbb
cwde
aam
popa
js
cmp
dec
pop
pusha
xchg
mov
ror
sub
lahf
pop
mov
cmp
mov
into
lods
adc
mov
and
mov
xchg
dec
cwde
ins
sub
pop
addr16
jecxz
int
retf
movs
xchg
out
shl
and
lahf
test
iret
mov
mov
scas
jmp
sti
cmp
sbb
sar
ins
xlat
lds
ret
lods
jmp
xchg
in
je
shl
sub
call
xchg
loopne
out
jbe
data16
sar
nop
imul
rcl
repnz
dec
stos
sbb
pop
out
sbb
dec
push
sub
and
das
jb
dec
(bad)
int3
mov
scas
ins
pusha
ja
(bad)
xchg
add
xor
cmp
int3
(bad)
(bad)
in
inc
ja
lea
retf
push
push
inc
xchg
xor
pavgb
adc
(bad)
pop
and
push
cld
xor
loopne
stos
lea
call
dec
push
xor
pop
stos
xchg
cmp
addr16
mov
inc
cmp
inc
mov
xor
or
mov
sbb
adc
mov
call
dec
and
pop
icebp
cld
test
add
into
nop
or
jnp
fadd
fcmovnu
push
je
scas
dec
adc
fstp
imul
inc
popa
mov
mov
lods
std
in
ins
cmp
fs
jae
add
xor
sub
into
mov
popf
add
(bad)
fdivp
jle
mov
and
ins
sbb
mov
add
pop
or
jns
mov
dec
aad
dec
imul
pop
push
imul
in
hlt
sar
aas
imul
pop
mov
sar
sbb
call
add
adc
xor
cmps
xor
xchg
push
inc
fmul
add
mov
adc
xlat
retf
ret
lods
cmp
jmp
dec
and
xchg
inc
xlat
(bad)
cmps
push
jmp
xchg
inc
iret
lods
pop
data16
mov
adc
add
stos
inc
jnp
or
sub
or
adc
mov
in
xchg
add
cmp
clc
mov
or
(bad)
push
push
popf
sbb
pop
js
push
cmp
push
rol
ins
jp
lds
mov
dec
jbe
sbb
aas
scas
and
(bad)
clc
gs
out
or
push
cmc
std
push
aam
pop
push
and
bound
jns
sbb
push
mov
sub
jno
pop
nop
mov
repnz
jbe
cli
or
jae
stos
lods
cmp
les
(bad)
push
push
in
fild
xor
test
lahf
shl
cmp
hlt
ds
dec
or
stos
je
mov
lock
jnp
out
std
mov
cmp
shl
pop
(bad)
xchg
xor
push
lahf
or
test
jnp
in
movs
push
adc
loopne
out
pop
leave
adc
shl
out
sub
sub
cli
ret
pop
mov
pop
dec
pop
dec
or
cmp
jne
push
ds
jecxz
outs
pop
or
cmp
sbb
inc
movs
xchg
pop
stos
mov
(bad)
push
clc
call
into
scas
shl
add
cli
jl
mov
fsub
add
pop
mov
aaa
or
movs
aam
fucomi
scas
(bad)
jle
mov
sbb
add
daa
xchg
js
jg
mov
xchg
dec
jp
out
js
adc
mov
push
ins
and
sahf
xor
pop
sbb
jns
pop
jl
(bad)
int3
loopne
repz
mov
cs
cwde
sbb
test
jge
or
push
mov
mov
pop
loop
inc
ja
jno
pop
sbb
pop
clc
retf
sub
dec
cmp
pop
sbb
adc
or
mov
xchg
jl
mov
mov
xor
dec
mov
adc
xchg
mov
fstp
aad
fdiv
das
and
mov
dec
jecxz
fidiv
sub
xlat
jge
adc
in
and
jmp
mov
pop
sbb
scas
push
mov
mov
add
xchg
mov
std
out
fs
jp
pop
inc
test
rcl
pop
mov
daa
sub
inc
in
inc
sbb
cld
rcl
inc
mov
cs
fistp
jne
dec
stos
push
dec
jp
iret
retf
jmp
lods
gs
dec
(bad)
cld
jne
xchg
test
push
pop
inc
jne
add
div
adc
push
dec
scas
pop
and
xor
add
shl
sbb
ret
shr
out
stos
sub
push
loop
add
and
pusha
test
mov
add
aas
imul
push
js
pusha
xor
call
push
mov
sub
push
inc
imul
jns
mov
sahf
and
mov
inc
addr16
cmp
(bad)
pop
xchg
xor
pop
ret
inc
pop
data16
mov
stc
loope
adc
pop
rol
inc
clc
mov
mov
push
ins
adc
xchg
adc
inc
stc
push
inc
push
push
sub
sbb
dec
push
push
or
mov
adc
out
clc
mov
int
adc
rol
xor
pop
mov
nop
popf
cli
daa
push
addr16
xor
movs
lods
sbb
mov
push
daa
mov
sti
gs
ds
stc
or
dec
jae
xor
jp
pop
das
daa
jmp
jmp
shl
push
mov
sti
retf
add
dec
inc
fs
outs
pop
out
out
push
out
jo
mov
pop
fldenv
push
mov
inc
and
xor
stc
je
das
mul
dec
jbe
push
dec
shl
ret
jecxz
jno
jmp
mov
sbb
movs
lahf
mov
pop
test
es
repnz
call
out
jge
mov
inc
sti
or
inc
xor
xchg
fcomp
pop
das
add
mov
mov
or
dec
imul
lds
sub
dec
dec
lds
ds
into
mov
cmp
xchg
mov
jb
out
imul
fwait
xchg
retf
sub
fidivr
jne
pop
in
push
movs
cmp
fwait
not
push
add
in
(bad)
mov
sbb
aaa
les
mov
fnstsw
(bad)
jle
xor
loopne
ins
lds
xchg
imul
cmp
cmp
(bad)
stos
sti
cmp
cdq
sahf
daa
jns
cmp
sbb
jmp
dec
test
mov
xor
out
fldenv
cmps
or
ret
add
ror
sub
pushf
ret
in
pushf
or
lahf
std
mov
push
fdiv
adc
scas
ja
xor
jne
enter
jle
in
cs
xchg
pushf
pop
jge
call
mov
pop
mov
jns
cs
(bad)
aad
push
out
lds
cmp
shr
and
and
sbb
adc
bound
(bad)
jne
jmp
cmp
sbb
xacquire
dec
mov
or
cli
(bad)
daa
movs
sub
dec
fwait
mov
sbb
stos
sub
cmp
sub
sub
scas
out
push
xor
out
pop
add
xchg
or
sbb
aas
ds
inc
mov
add
sbb
adc
inc
ffree
push
idiv
ror
lods
adc
mov
pop
cmp
popa
fisttp
adc
pop
adc
in
mov
jbe
dec
in
jne
mov
pop
dec
cmp
cmp
daa
rcl
call
cmp
mov
fwait
enter
xchg
call
xchg
cmp
xchg
mov
adc
dec
mov
into
xchg
push
imul
push
push
xchg
and
cmovge
push
in
pop
cmp
cmp
mov
push
dec
mul
jmp
fcomp
clc
mov
mov
mov
dec
test
icebp
xor
repz
adc
fs
xor
test
test
sub
xchg
mov
jb
pop
or
xchg
jp
movs
stos
fcomp
xor
loopne
popa
test
or
lods
loopne
jnp
mov
jb
test
jecxz
xchg
ficomp
jnp
sti
and
test
call
mov
out
pusha
add
icebp
clc
push
outs
fnstsw
popa
add
cmp
add
ss
jno
jge
shr
push
adc
cmp
mov
inc
cmp
and
push
mov
or
or
dec
push
adc
(bad)
jb
cmp
jle
jecxz
push
cdq
stos
pop
or
ror
or
pop
cmp
push
addr16
or
repz
jge
add
xor
movs
mov
dec
ja
pop
in
jg
out
push
hlt
imul
pop
(bad)
test
jle
cmp
mov
not
xor
push
sbb
nop
push
aaa
pop
jp
inc
in
stos
jle
or
movs
(bad)
jmp
mov
mov
popa
mov
mov
cld
xchg
jnp
into
push
cld
in
shr
and
fnstsw
xchg
jnp
cmp
sub
add
(bad)
dec
jno
xor
ror
fwait
int
hlt
inc
and
cmp
lods
dec
das
loope
sahf
scas
aaa
jmp
mov
mov
(bad)
cmp
pop
fnstenv
mov
mov
iret
mov
and
out
adc
push
sub
cmp
mov
inc
inc
mov
fcmove
cmps
adc
js
mov
inc
push
pop
pop
out
enter
adc
cmps
int
sbb
retf
add
add
mov
pop
stos
lock
jp
int3
push
cmp
jbe
mov
stos
rcl
mov
xor
and
in
dec
mov
pop
retf
cmc
lods
ret
aas
pop
nop
ds
and
sti
sbb
retf
xor
fild
lds
fisttp
adc
xor
or
lds
jmp
pop
xor
xchg
hlt
push
dec
sbb
mov
push
pop
pushf
or
movs
pushf
mov
pop
push
inc
mov
mov
mov
repz
repnz
xchg
neg
loope
pop
movs
sbb
das
movs
(bad)
sbb
lea
mov
aaa
(bad)
sbb
sbb
ds
xchg
dec
ins
push
daa
and
pop
mov
shl
arpl
pop
dec
mov
mov
rcr
mov
and
xlat
push
inc
xchg
ins
stos
mov
sar
leave
push
add
outs
lods
shl
imul
lds
jecxz
dec
jmp
xchg
into
(bad)
loope
nop
jmp
cmp
and
cmc
add
pop
mov
sbb
mov
stos
mov
movs
aam
dec
mov
retf
pop
fdiv
pop
test
mov
xor
mov
popf
sub
loop
cmp
mov
adc
shl
imul
out
adc
and
cdq
(bad)
mov
or
jb
pop
out
sub
push
cmps
jae
ins
mov
out
ret
(bad)
gs
(bad)
and
cmp
dec
add
imul
dec
mov
stc
arpl
mov
pop
xor
movs
(bad)
into
cmps
pop
cli
jbe
popf
sar
inc
neg
pop
or
outs
cmp
cmp
dec
pop
pop
sbb
add
mov
dec
std
ror
inc
test
jmp
mov
je
dec
mov
push
mov
jb
push
xchg
jg
cmp
jl
mov
icebp
imul
jl
jl
jecxz
xchg
daa
mov
daa
sbb
pop
ja
jo
cmp
mov
ja
and
jmp
int3
mov
pusha
fs
cmovl
sub
pop
push
sbb
xlat
retf
fldcw
inc
test
ret
cdq
call
(bad)
lock
push
aad
xchg
nop
xchg
adc
btr
not
mov
push
cld
pop
sbb
mov
out
loope
call
and
mov
shl
sahf
cmps
pusha
ret
fidiv
push
jae
jno
(bad)
push
and
xchg
push
lds
es
jmp
mov
icebp
inc
mov
pop
fsubr
aaa
xchg
and
pop
adc
mov
fsubp
sub
icebp
add
in
test
mov
push
mov
nop
jae
sub
lods
rcl
sahf
cmc
nop
mov
movs
ja
push
push
std
xchg
sub
cmc
aaa
lods
fisubr
sub
lahf
jg
pop
ss
movs
pop
jle
jle
or
mov
adc
test
inc
cmc
cli
cmps
outs
adc
pop
ins
out
sbb
dec
aam
aad
mov
pop
loop
imul
jno
es
jle
std
mov
nop
and
rcl
mov
sbb
fwait
jns
iret
fwait
imul
jnp
out
repz
popa
push
or
mov
mov
adc
cmps
xchg
mov
repz
mov
(bad)
ins
inc
inc
ret
shl
enter
xchg
pop
pop
push
scas
cmps
mov
test
cmps
and
stos
pop
mov
or
or
cmp
mov
hlt
pop
jb
mov
mov
(bad)
sahf
sub
adc
pop
mov
push
push
mov
out
stos
xor
std
scas
imul
xor
dec
int3
rcl
push
adc
lods
jmp
mov
test
std
test
nop
inc
cmc
movs
mov
pop
mov
aas
das
and
unpcklps
outs
movs
mov
push
cmp
cld
xchg
(bad)
mov
mov
sbb
cdq
xchg
push
jbe
mov
test
popf
dec
cmps
jbe
jno
push
inc
mov
jl
loop
cmp
mul
pop
lds
inc
mov
push
lods
in
xchg
dec
gs
repnz
ins
lea
or
xchg
mov
xchg
into
js
js
pop
cdq
xchg
sbb
std
aaa
enter
aaa
pop
cmp
pop
and
nop
mov
int
push
icebp
mov
sbb
jnp
xchg
fcomp
int
xchg
jmp
push
cld
jl
aas
repnz
adc
adc
in
cld
xor
gs
std
inc
dec
push
ret
inc
dec
cwde
outs
pop
inc
loopne
pop
cld
mov
jecxz
lods
xchg
fstp
sbb
mov
jg
es
das
jle
add
mov
sub
dec
jb
sub
jecxz
adc
shl
mov
rol
mov
xchg
xchg
cmp
shl
jmp
leave
mov
out
repz
ins
adc
pop
xor
mov
mov
lods
sbb
ss
shl
sbb
rcl
add
mov
push
push
retf
mov
pop
and
adc
sbb
int
push
out
adc
and
cld
dec
sbb
rol
mov
push
out
cmp
test
(bad)
mov
and
adc
mov
inc
in
adc
push
pushf
sbb
mov
fdivr
repz
retf
test
sub
inc
push
out
xchg
idiv
jnp
inc
cmp
xor
add
xchg
cdq
push
retf
mov
push
fcomp
or
stos
or
std
clc
and
jno
mov
sbb
dec
jmp
dec
xchg
nop
or
(bad)
scas
push
jne
add
and
jg
test
jg
and
sub
ret
xchg
xlat
sbb
repnz
es
adc
cmp
aaa
add
mov
xor
jmp
mov
jae
mov
fistp
jnp
mov
daa
dec
add
test
ficomp
cmp
cmps
or
ret
imul
mov
mov
mov
mov
les
push
jl
or
lds
add
shl
es
adc
pop
sub
daa
imul
out
(bad)
out
in
js
pop
dec
dec
js
ins
adc
rol
sub
popf
cwde
bound
adc
and
data16
mov
cmp
call
adc
ins
and
inc
jo
add
mov
(bad)
and
jle
mov
xchg
jbe
mov
sub
mov
mov
or
std
ds
dec
lahf
cs
mov
imul
mov
mov
clc
sbb
hlt
out
xchg
lods
mov
cmc
aas
sub
scas
add
popf
retf
pop
imul
js
outs
stos
cdq
add
dec
shr
mov
je
stos
sbb
push
cmps
mov
push
adc
push
mov
mov
ja
cmc
add
jle
dec
xchg
pop
push
aas
shl
popa
in
dec
jmp
cld
lahf
pop
mov
jo
mov
or
aas
push
test
adc
push
jb
(bad)
mov
add
mov
ror
clc
inc
call
push
mov
clc
(bad)
sbb
mov
sar
mov
push
pop
ret
outs
sar
adc
add
test
sbb
xchg
hlt
adc
pop
mov
pop
test
or
dec
pop
fstp
xchg
repz
aam
pop
js
bnd
push
call
stos
pop
in
pop
xchg
or
inc
jle
retf
aam
adc
mov
pop
sbb
out
rol
cwde
div
xor
stos
cs
shl
dec
push
popf
ror
bound
sub
jl
mov
sub
loope
movs
retf
je
and
(bad)
fistp
and
aaa
outs
ins
cwde
lods
es
mov
aaa
ja
push
adc
adc
xchg
add
sbb
sbb
dec
ins
arpl
or
or
push
fcmove
fs
jbe
call
retf
lods
imul
push
cvtps2pi
mov
jp
cmps
mov
test
add
(bad)
xchg
pop
sti
mov
add
add
hlt
xchg
rcr
rol
push
jb
jle
dec
mov
cmp
push
pop
pop
lods
and
cmp
inc
mov
mov
cmp
or
xor
jne
push
(bad)
mov
movs
pop
outs
jl
jno
mov
add
jp
cli
jae
ins
cmp
idiv
out
lahf
sbb
add
jmp
std
or
fld
sub
push
icebp
and
dec
inc
push
xchg
add
xor
jl
add
cwde
cmp
mov
shr
(bad)
cld
fistp
test
retf
mov
cld
stos
xor
aas
mov
mov
in
mov
adc
or
repnz
mov
push
es
sub
(bad)
lods
into
outs
and
dec
into
inc
pop
iret
call
pop
je
data16
nop
in
mov
mov
inc
daa
cmp
cwde
xchg
outs
div
test
mov
mov
(bad)
cwde
enter
stc
out
cmps
mov
pop
gs
cmp
bound
jb
outs
jb
(bad)
(bad)
test
adc
sti
fnstcw
jecxz
add
(bad)
and
pop
dec
mov
test
push
fstp
xor
push
(bad)
jg
add
xor
push
out
in
test
push
inc
out
dec
idiv
mov
mov
jmp
sbb
mov
cmp
sbb
pop
pushf
in
out
xchg
jae
lds
or
pop
mov
ins
inc
mov
ja
add
lea
dec
xchg
scas
sub
or
push
outs
add
mov
xor
gs
imul
std
loop
sub
mov
add
js
push
pop
iret
adc
lods
mov
iret
mov
test
inc
cld
sub
imul
cmp
cli
fprem1
mov
out
retf
outs
or
and
mov
cmps
push
add
loope
add
jmp
adc
pushf
push
pop
stos
xchg
or
inc
test
push
inc
mov
lods
pop
push
sub
mov
push
push
dec
inc
or
inc
add
out
push
cld
mov
int
push
mov
push
mov
mov
jecxz
scas
add
(bad)
xlat
jns
xor
xchg
jns
push
mov
jmp
sub
lds
pop
icebp
and
in
mov
pushf
jns
int
lds
(bad)
aaa
aaa
add
inc
adc
xchg
mov
out
stos
inc
lds
imul
dec
lods
mov
fwait
inc
std
mov
cmp
call
xchg
push
xor
mov
dec
data16
js
js
movs
js
loope
sbb
inc
pop
xchg
sub
popa
mov
lahf
lods
or
xchg
cmp
xchg
inc
call
or
addr16
js
mov
(bad)
out
adc
popa
inc
or
xor
xor
lahf
cmc
mov
out
and
mov
jp
inc
shr
dec
(bad)
fcom
jmp
mov
ja
mov
imul
mov
gs
ds
aaa
mov
ret
js
jl
xchg
and
jb
mov
test
sub
mov
inc
dec
imul
lds
ins
movs
dec
mov
enter
xchg
add
das
ficomp
addr16
and
scas
les
hlt
in
inc
pop
lods
jecxz
outs
mov
mov
ss
and
jbe
outs
into
mov
or
inc
int
pusha
mov
adc
(bad)
mov
hlt
mov
js
ja
xor
outs
xor
rcl
jb
push
push
inc
jmp
mov
inc
xchg
sar
xor
mov
push
bound
adc
addr16
adc
push
ins
nop
mov
dec
jmp
mov
push
sahf
mov
jnp
in
add
xchg
sti
loope
(bad)
mov
sub
cmp
ret
push
dec
and
not
xor
mov
outs
mov
fs
xchg
adc
cmc
inc
pop
sbb
addr16
jb
jno
mov
push
loopne
xor
aad
ja
and
add
aaa
sar
jle
arpl
gs
lock
pop
cwde
(bad)
leave
out
and
cmp
pop
test
dec
pusha
or
xchg
mov
push
out
pushf
add
jmp
clc
pop
scas
mov
or
xchg
sbb
ins
xchg
popa
xor
ret
mov
leave
fcom
mov
pop
arpl
ja
mov
test
fsub
jmp
fwait
mov
in
ror
inc
or
adc
or
sar
imul
aaa
xchg
call
imul
sub
mul
xor
out
push
stos
js
xor
mov
rol
jl
cmp
and
pop
dec
mov
adc
data16
or
xchg
mov
mov
dec
or
pop
fcmovnb
icebp
jae
xchg
mov
fwait
mov
ss
fcom
adc
xchg
jns
aad
rol
ss
push
mov
mov
pop
adc
push
leave
mov
mov
fld
ds
sub
pushf
hlt
(bad)
fisubr
jg
pop
(bad)
inc
mov
sar
xor
cmps
mov
and
push
mov
or
adc
ja
and
ja
dec
loope
add
(bad)
icebp
je
or
push
jp
jge
cld
mov
or
dec
adc
inc
imul
adc
dec
sbb
mov
das
gs
cmps
jne
outs
or
inc
retf
(bad)
fnstsw
or
jbe
xor
pop
ins
mov
sbb
mov
je
clc
add
or
aas
mov
inc
ret
sub
xor
sbb
(bad)
sbb
mov
pop
mov
ja
xor
popf
imul
mov
imul
and
in
fadd
ss
in
rcl
add
hlt
hlt
or
push
fwait
jne
(bad)
dec
jns
lds
lods
cmp
hlt
fisttp
mov
sub
add
jp
xchg
retf
inc
(bad)
mov
movs
test
mov
out
or
pop
add
jp
int
and
or
jo
or
js
fs
push
or
stc
jg
gs
push
aad
inc
repz
not
jnp
inc
dec
mov
call
cmp
rcl
bound
xor
jae
div
push
call
ror
ds
cs
mov
mov
(bad)
mov
(bad)
dec
jb
push
push
loop
and
dec
ja
movs
cmp
cmp
in
fnstcw
(bad)
xchg
jecxz
enterw
ins
ds
jle
xor
sbb
pop
sub
sbb
addr16
scas
repz
xor
inc
std
and
bound
mov
clc
mov
hlt
fld1
addr16
dec
call
push
sbb
loope
clc
dec
xor
add
gs
jbe
sub
cmp
movs
out
xchg
mov
sahf
pop
call
(bad)
pop
dec
sub
dec
cmp
or
arpl
out
adc
int
(bad)
cmp
xchg
push
cli
loop
push
xor
dec
mov
scas
mov
mov
jg
pop
sbb
mov
imul
stos
fidivr
popf
dec
je
cmp
mov
xor
lea
dec
sbb
jl
jle
fild
outs
dec
push
sbb
and
add
movs
test
jae
outs
xchg
mov
mov
inc
pushf
xor
mov
push
add
pop
sub
mov
xchg
(bad)
and
or
(bad)
jnp
mov
test
mov
jmp
ret
ds
push
or
repnz
dec
add
ja
xchg
add
fwait
add
inc
arpl
push
retf
jmp
fs
ds
xchg
lahf
std
popf
ins
ret
rol
xor
pop
lahf
das
out
stc
push
sti
mov
xchg
imul
out
fcmovne
jmp
xchg
mov
jno
dec
xor
jmp
adc
jmp
into
or
xlat
pop
jge
pop
das
in
cwde
stos
dec
jmp
dec
popa
add
jmp
imul
xchg
test
imul
cmp
push
push
add
shl
lods
xchg
cmp
in
es
leave
scas
xchg
btr
sub
ja
jmp
out
mov
enter
sahf
mov
pop
jbe
popa
mov
cdq
cmp
push
push
push
jns
outs
fwait
mov
push
sub
loopne
call
leave
mov
test
mov
icebp
cmp
sbb
mov
fcom
in
mov
mov
push
adc
daa
sbb
cmp
mov
popa
out
xchg
mov
jb
sub
push
sub
shr
mov
mov
sar
or
mov
sub
dec
movs
aam
retf
xor
enter
ja
push
push
es
fist
cmp
xor
loope
pop
cmp
pop
outs
xchg
jle
bound
inc
loop
push
nop
push
xchg
into
fidiv
and
mov
push
mov
lock
loope
or
lea
lock
popf
scas
push
dec
sbb
pop
retf
mov
arpl
jmp
repz
fwait
dec
shl
push
sti
sub
jb
mov
aad
jbe
push
xchg
jg
or
jbe
push
(bad)
clc
out
cli
push
ins
shl
sahf
push
sqrtps
rcr
push
lahf
out
or
mov
cmp
cmp
(bad)
sar
gs
xchg
out
clc
and
daa
inc
push
sbb
add
inc
sub
movs
aad
inc
mov
add
retf
dec
mov
add
les
repz
xor
and
test
in
stos
fxch
xchg
mov
add
mov
pop
test
adc
test
sub
jno
xor
xor
jg
dec
mov
ds
and
lds
sub
sub
clc
adc
cmc
adc
pop
call
add
cmps
ret
push
aam
inc
sti
sub
js
nop
cmps
cmp
daa
in
js
aad
(bad)
imul
mov
outs
or
mov
pusha
ins
in
in
imul
sar
push
sbb
xor
out
lahf
push
outs
(bad)
sub
cmp
xor
bnd
fwait
hlt
fild
jnp
inc
out
or
fmulp
das
sub
sub
test
inc
shl
mov
pop
cmp
push
push
enter
dec
movs
jno
lock
das
pusha
jmp
add
sbb
fisttp
push
or
xor
sub
imul
xchg
inc
push
fcomp
dec
jle
retf
mov
nop
in
iret
xchg
mov
leave
push
mov
inc
pusha
sub
jecxz
int3
pushf
pop
sbb
pop
(bad)
fisttp
dec
(bad)
retf
jne
repnz
add
push
pop
sub
or
pop
int3
fldcw
div
jge
cmp
hlt
loopne
inc
sub
sahf
or
xchg
dec
mov
inc
pop
popa
or
jecxz
jns
ja
cmps
or
xor
lahf
out
sbb
add
push
sub
in
mov
push
sub
out
mov
sar
jecxz
xchg
icebp
cmc
inc
mov
push
lock
stos
mov
fdiv
inc
out
shr
or
push
(bad)
adc
loopne
or
ds
popa
pop
sub
je
aad
retf
inc
(bad)
xchg
je
mov
sbb
sbb
sub
(bad)
out
push
fistp
jecxz
sbb
fwait
mov
rol
movs
lds
mov
popa
xor
enter
jbe
in
or
inc
je
and
outs
shr
data16
or
js
xor
adc
test
retf
inc
mov
lods
jbe
movs
pushf
into
mov
push
scas
jg
in
retf
fs
aam
hlt
idiv
dec
retf
fbstp
aam
xor
jbe
fwait
sbb
inc
push
adc
test
and
mov
pop
jge
sub
imul
ja
sub
pop
mov
push
jae
fldenv
cmp
fwait
mov
pop
sahf
pop
imul
mov
in
sub
cld
sbb
(bad)
dec
ja
sti
cld
sub
sbb
shl
jb
cmp
fidivr
dec
xchg
test
daa
xchg
stos
scas
loop
ret
xchg
jnp
call
iret
cmp
xchg
shl
adc
int
pop
inc
repz
jne
push
pushf
jae
inc
xchg
xchg
jnp
lahf
xchg
ret
lods
lds
clc
fild
cmp
cmps
fs
jge
in
in
(bad)
fs
out
add
scas
int3
push
jmp
cmp
jb
stos
adc
js
mov
mov
xchg
add
or
into
add
cmps
sahf
pop
or
scas
fwait
push
sbb
and
xor
add
ins
bound
stos
and
cmp
aas
loopne
jecxz
sbb
leave
lds
xchg
mov
outs
pop
movs
repnz
mov
scas
xchg
test
and
out
rol
adc
mov
pop
cmp
cmp
sbb
aam
gs
jns
mov
xchg
int
movs
int3
xchg
sub
inc
frstor
mov
pushf
stos
sbb
push
add
mov
jmp
xchg
iret
pop
push
add
ror
pop
mov
lods
shr
or
mov
lahf
movs
sahf
sahf
or
pop
adc
mov
xor
inc
dec
ficomp
mov
(bad)
sahf
ss
xchg
mov
fmul
ins
leave
out
fs
push
jge
xchg
and
push
xchg
outs
popa
dec
std
and
test
fild
adc
and
mov
adc
lock
mov
pandn
adc
adc
imul
outs
jle
sbb
imul
je
push
sbb
or
dec
lea
in
push
mov
and
outs
leave
hlt
in
sbb
push
pushf
adc
push
push
jbe
(bad)
ss
xchg
ror
or
cli
scas
js
loop
and
pop
mov
push
adc
arpl
adc
repnz
and
pop
push
mov
adc
lods
dec
xchg
hlt
mov
and
out
ins
inc
rol
or
psubusw
inc
sub
stos
fmulp
ins
push
lods
cld
ins
xor
dec
jp
mov
(bad)
ins
sub
scas
enter
daa
repz
pop
mov
je
xor
ins
xchg
mov
ds
inc
retf
ins
ffree
inc
ret
seta
imul
mov
cmp
inc
mov
add
arpl
mov
cmps
pop
rcl
je
cmp
cmp
cmp
(bad)
outs
jb
outs
sbb
or
nop
arpl
call
cmps
adc
int
sahf
leave
add
std
mov
inc
xor
lods
inc
add
cmps
inc
rcr
in
push
fcmovne
mov
popa
cwde
jno
(bad)
fidiv
push
mov
and
clc
sub
cmp
mov
dec
and
push
mov
call
in
jo
xchg
adc
ja
addr16
mov
dec
push
(bad)
aam
pop
les
cwde
push
hlt
repz
jecxz
jmp
push
rol
sbb
inc
ins
imul
jns
mov
ret
xchg
xchg
sbb
mov
cmp
pusha
mov
mov
inc
mov
mov
lea
test
outs
inc
push
outs
mov
fisub
push
(bad)
int
test
pushf
adc
iret
pusha
push
jbe
mov
retf
outs
inc
cdq
into
jle
pop
repz
push
call
repz
out
mov
cs
dec
xchg
retf
jg
ins
dec
rcl
cwde
cmp
inc
xor
(bad)
mov
sub
aaa
cmp
cmp
imul
test
clc
gs
jmp
nop
into
sbb
and
into
sbb
retf
cs
adc
ror
fist
stc
fistp
jmp
nop
push
adc
jno
jmp
int3
sub
jo
sub
mov
sub
fsub
arpl
sub
add
mov
cmp
jle
and
xor
sub
xchg
das
jno
ds
xchg
repz
dec
pop
add
mov
mov
sbb
test
fcmovb
push
and
mov
imul
call
addr16
pop
stos
imul
inc
xlat
push
in
test
cmp
fst
je
fsub
and
mov
sbb
mov
test
pop
daa
pop
mov
sbb
sbb
mov
sub
sbb
mov
sub
addr16
lods
sbb
stos
lock
cli
adc
ror
pop
push
repz
shr
mov
mov
repnz
jg
mov
mov
(bad)
fcmovnbe
jo
inc
lds
dec
dec
cmp
push
mov
cmp
movs
push
je
popa
(bad)
scas
(bad)
shl
pop
es
or
adc
(bad)
or
or
push
add
mov
dec
retf
arpl
mov
and
fld
xchg
xchg
pop
xchg
mov
push
jge
push
mov
mov
int
and
jmp
lods
pop
xor
mov
rcr
mov
mov
jl
inc
cmp
inc
push
xchg
push
lods
xlat
imul
out
jg
(bad)
xchg
sbb
sbb
sbb
inc
out
(bad)
(bad)
xchg
scas
ret
jmp
jne
in
int3
or
je
xor
das
leave
add
cli
inc
aas
xchg
push
fidivr
or
dec
in
call
repnz
inc
push
pop
in
dec
and
lahf
jno
scas
(bad)
outs
mov
hlt
push
ins
xor
cdq
mov
lahf
cmp
and
mov
jge
and
imul
mov
push
push
cmp
jno
push
mov
jns
add
ins
(bad)
std
sub
enter
js
inc
retf
call
je
fild
cmp
test
fldcw
or
pop
test
dec
test
stc
cmps
add
and
lods
fldcw
shr
std
mov
out
jl
push
xchg
ret
xchg
push
rcr
add
xor
pop
push
pushf
in
ret
and
add
sti
cmp
div
add
sbb
sub
mov
fdiv
sbb
push
dec
popf
mov
push
cmps
rcr
mov
add
xchg
mov
pop
(bad)
jg
addr16
shl
scas
loop
scas
movs
loope
(bad)
cmp
push
hlt
fdivr
fisubr
into
jnp
push
in
dec
push
fnsave
arpl
jae
mov
(bad)
cli
rcr
in
les
jp
jb
popaw
cmp
and
mov
adc
sbb
push
cmps
fdivr
inc
daa
jecxz
fdivr
mov
fsub
rol
pop
stos
mov
mov
push
mov
sbb
adc
sbb
jbe
push
sbb
das
pop
ret
jmp
movs
cmc
xor
add
xchg
inc
test
add
jge
add
scas
aam
mov
sar
add
mov
icebp
mov
aad
pop
xor
retf
dec
mov
int3
cmps
push
arpl
pop
out
xchg
cdq
mov
push
nop
dec
jge
xor
xor
mov
or
sbb
ins
and
xor
int3
out
xchg
sub
mov
cmp
and
dec
pop
or
fsub
xor
adc
pop
dec
aam
aad
retf
xchg
pop
xor
xlat
adc
xchg
sbb
jl
call
push
lods
aas
mov
in
dec
lods
shl
jne
mov
or
pop
mov
jl
xor
shl
mov
test
cld
lock
adc
push
add
sbb
xlat
lds
loopne
cmps
push
push
daa
adc
imul
adc
int3
fcmovb
sbb
in
ja
sbb
rcr
pop
data16
stos
mov
and
push
adc
xchg
ret
dec
push
push
addr16
jmp
or
movs
adc
scas
out
mov
and
daa
add
bound
sbb
mov
inc
pusha
mov
stc
mov
call
pop
push
push
push
aas
popf
sbb
int3
repz
add
push
std
adc
loop
pop
fcos
or
mov
add
xor
jecxz
call
out
loopne
iret
pop
cmps
mov
dec
aaa
jmp
(bad)
stc
jno
fstp
fwait
shr
or
das
push
ins
imul
retf
outs
mov
xchg
and
or
shl
in
mov
sbb
sub
ja
dec
clc
jno
mov
and
loop
ror
rcr
xchg
xor
mov
sbb
rcr
pushf
sbb
sbb
jp
push
or
mov
xchg
mov
(bad)
xor
pop
pop
xlat
hlt
out
inc
sub
push
ja
dec
bound
jb
dec
addr16
cli
or
dec
enter
pusha
imul
pop
pop
(bad)
shl
pop
shl
nop
aaa
test
jne
pop
mov
inc
ins
iret
out
jb
adc
xchg
pop
stc
xchg
es
mov
mov
xor
push
dec
out
shl
cmp
repnz
or
pop
dec
add
enter
push
mov
in
push
mov
push
mov
aad
inc
push
push
mov
sti
jnp
lds
push
push
addr16
mov
or
(bad)
popf
sub
sub
jmp
in
(bad)
mov
pop
push
pop
aad
pop
pusha
div
out
in
mov
push
popf
test
xchg
ret
pop
movs
jb
pop
mov
push
pop
push
lods
pop
aam
imul
push
jge
popa
pop
xchg
push
add
inc
cmps
call
mov
stc
aaa
ret
(bad)
jle
arpl
stc
jle
lock
das
(bad)
push
add
pop
mov
or
bts
mov
retf
das
xchg
popa
repz
jecxz
stos
jo
das
mov
stc
test
or
push
add
mov
(bad)
fsubr
xchg
rcl
cli
and
cli
mov
lock
add
mov
mov
js
mov
cli
cs
jnp
adc
(bad)
dec
lods
sub
repz
daa
and
idiv
push
cmp
mov
pop
call
(bad)
push
fidiv
nop
adc
xchg
mov
movd
inc
xor
cs
pop
(bad)
mov
or
leave
pop
dec
fdiv
(bad)
cmp
retf
mov
adc
push
mov
adc
outs
lea
inc
out
out
test
cld
arpl
jbe
mov
xchg
add
lods
das
(bad)
xor
arpl
mov
ficom
xchg
call
dec
jns
inc
adc
pusha
cmp
jmp
inc
mov
rol
sub
mov
mov
cwde
or
pusha
jp
mov
ds
mov
es
mov
cmp
xchg
jp
repz
rcl
es
or
and
xchg
add
adc
lods
pop
adc
sbb
jecxz
jl
sbb
loope
mov
outs
or
pop
cdq
mov
dec
std
pushf
js
jae
adc
push
ss
shr
fwait
pop
dec
xchg
push
int3
push
cmps
out
js
aam
shr
jg
imul
xor
arpl
pop
xchg
jae
push
outs
jb
jp
push
mov
xchg
mov
pusha
jl
ret
les
cli
jne
inc
and
mov
arpl
push
mov
shr
sbb
jo
shr
sub
push
popf
out
mov
push
loop
rcr
cld
fstp
test
add
retf
imul
jae
imul
cmps
sbb
(bad)
fcomi
ds
out
jmp
and
(bad)
jmp
out
jge
sbb
mov
cs
(bad)
jmp
cdq
(bad)
mov
mov
test
xchg
cmp
mov
push
mov
inc
or
hlt
pushf
fist
movs
das
xor
or
in
fidiv
mov
mov
lods
dec
mov
ins
mov
push
and
jmp
cmp
sub
dec
not
or
fisubr
cmp
cs
mov
ret
aaa
push
scas
mov
jg
jg
js
rcr
mov
fmul
mov
or
shl
leave
jnp
jae
pushf
adc
lahf
push
pop
nop
out
fidiv
xor
jnp
xchg
popa
iret
mov
and
xchg
pop
aaa
int
aad
sub
push
push
je
imul
or
cli
xchg
xchg
ins
dec
xor
or
push
xchg
sbb
and
pushf
and
loopne
ins
lahf
sub
sti
dec
loope
mov
das
cmp
cmc
sahf
pop
xor
xchg
daa
adc
push
arpl
ffree
mov
outs
inc
push
sar
push
fbld
push
stos
outs
pop
xchg
push
mov
mov
shl
mov
int
mov
xor
in
xor
add
cmps
lods
sbb
ds
int3
inc
shl
push
mov
pop
pop
sbb
xor
dec
fwait
or
mov
add
cmc
xor
movs
push
dec
inc
loopne
fs
xor
fldenv
adc
sbb
je
ret
cmp
enter
mov
cmps
mov
add
out
dec
call
imul
fdivr
test
adc
pop
or
ins
xor
(bad)
mov
inc
mov
icebp
icebp
in
xor
(bad)
pop
leave
jmp
mov
adc
push
fwait
jbe
xchg
stc
pop
in
xchg
or
shl
xchg
nop
mov
dec
dec
or
retf
mov
enter
xchg
data16
dec
icebp
ret
inc
cwde
cmp
mov
popw
adc
or
shr
sbb
push
adc
push
xchg
xor
mov
jl
daa
and
push
aaa
mov
lods
imul
addr16
inc
jl
or
nop
push
mov
inc
adc
jmp
sbb
or
(bad)
(bad)
push
mov
cmp
cwde
lea
jp
adc
test
sbb
fistp
sbb
xor
(bad)
ret
bnd
test
add
or
pop
pop
(bad)
mov
je
xchg
sbb
jg
jae
outs
adc
pushf
push
dec
pop
mov
out
push
(bad)
jbe
push
ja
mov
movs
ficomp
adc
mul
adc
jp
jo
popf
mov
sbb
fdiv
pusha
ins
out
or
jb
into
xchg
test
and
mov
neg
fdiv
movs
pop
adc
ja
jl
inc
(bad)
push
xchg
and
xchg
inc
cmp
xchg
pop
es
xchg
sbb
dec
daa
fbld
jb
rcl
iret
or
adc
mov
popf
mov
test
adc
pop
pushf
shl
and
aad
jmp
mov
sub
sub
mov
retf
popa
jno
dec
sbb
aad
mov
retf
cmp
push
mov
push
scas
fsubr
mov
ror
xchg
add
dec
clc
cmp
retf
(bad)
push
cli
mov
mov
pop
(bad)
clts
mul
imul
jnp
fisttp
push
jo
pop
ret
fwait
push
inc
std
es
xchg
mov
and
mov
shr
stc
daa
push
fdiv
data16
(bad)
scas
in
jno
ss
test
je
push
movs
cmp
xor
xor
retf
xchg
sub
out
xlat
xor
xchg
retf
sub
sbb
sub
int3
jne
mov
addr16
cwde
or
xor
adc
jne
xchg
and
sbb
not
(bad)
mov
(bad)
xor
cmps
ins
gs
retf
pop
add
mov
add
jns
ja
int3
popa
mov
repz
inc
mov
dec
xchg
aad
xchg
jl
push
pusha
sti
xchg
stc
push
sub
adc
pushf
dec
jmp
pop
cmc
add
pop
mov
inc
je
jb
mulps
hlt
lds
sbb
pop
clc
sbb
sub
adc
add
arpl
jne
xor
mov
inc
mov
mov
xchg
sub
rol
aam
nop
out
push
aas
cmp
sahf
pop
inc
or
push
push
pusha
mov
or
push
jmp
and
add
sub
jns
push
repz
mov
dec
dec
das
and
outs
(bad)
loope
mov
int
loop
ins
call
jo
sti
leave
retf
mov
shr
and
push
cmp
fstp
push
test
mov
or
inc
inc
jo
mov
test
mov
inc
mov
cwde
mov
inc
ins
push
dec
iret
sbb
sahf
add
xor
test
cmp
xchg
pop
adc
pusha
sub
sar
sub
mov
fisub
test
jp
jmp
push
(bad)
out
(bad)
mov
xchg
out
add
mov
cli
int3
imul
xchg
mov
jbe
mov
jge
mov
dec
cmp
mov
bound
lea
push
and
mov
push
push
retf
jmp
cmc
fcomp
adc
mov
aas
lea
es
jmp
xor
mov
or
and
or
fsub
sbb
and
outs
cmp
dec
jg
sub
daa
(bad)
in
dec
bound
stos
mov
inc
mov
in
push
ret
or
mov
cmp
jge
ret
sbb
xlat
push
adc
cs
and
pop
inc
(bad)
std
inc
jecxz
cmp
add
movs
je
xchg
popf
dec
js
pop
fisubr
(bad)
mov
sub
inc
inc
mov
les
ss
shr
inc
or
sbb
clc
std
xchg
mov
pop
inc
fisub
mov
xor
arpl
adc
inc
cmp
pop
push
inc
cwde
stc
sti
mov
aas
push
and
xchg
and
fwait
fwait
mov
aad
js
out
popf
and
imul
std
jnp
shl
xlat
cmc
fild
ret
sbb
dec
and
in
pop
fistp
cmp
jbe
cmp
aas
scas
sbb
ds
stos
pushf
addr16
pop
loopne
inc
sbb
dec
inc
mov
mov
pop
(bad)
out
add
xchg
mov
xor
mov
pop
div
mov
push
cmp
mov
cmc
dec
sbb
loopne
int
fadd
test
imul
adc
fist
mov
data16
mov
push
hlt
mov
mov
jmp
mov
(bad)
xor
cmps
push
pushf
mov
dec
jp
out
cmp
dec
fst
(bad)
int3
fisttp
out
mov
movs
dec
add
in
dec
sar
xor
data16
mov
push
ins
inc
jecxz
inc
and
sti
cmp
fcom
jmp
lds
out
mov
(bad)
neg
mov
repnz
icebp
jp
pop
jmp
sbb
iret
pop
stos
lods
movs
and
xor
iret
jmp
cdq
aad
add
pop
icebp
aad
adc
cmp
retf
and
add
popa
inc
das
xchg
dec
xchg
sbb
fs
xchg
xchg
sbb
cdq
(bad)
sti
pop
outs
or
(bad)
dec
out
(bad)
out
cmp
outs
out
mov
arpl
stos
movs
jb
mov
mov
repnz
xor
or
cli
cs
mov
mov
xchg
lods
ss
dec
push
inc
sbb
test
lahf
pop
xchg
fldcw
inc
dec
mov
fisttp
or
(bad)
mov
mov
pop
mov
xor
jg
sbb
or
and
push
ins
stos
ins
mov
ins
dec
mov
jno
adc
push
dec
mov
cli
and
xor
in
imul
jbe
mov
add
sub
xor
pop
(bad)
sbb
mov
add
xchg
mov
ret
dec
xor
mov
inc
cmp
mov
mov
dec
mov
sbb
xchg
mov
jae
push
outs
push
fnsave
adc
jmp
loopne
enter
push
jns
mov
mov
xchg
bound
dec
mov
sub
aas
jns
mov
and
in
jb
sbb
out
pop
add
jl
movs
dec
cld
inc
imul
mov
shl
xchg
jecxz
(bad)
cmovbe
dec
xor
test
jns
outs
adc
ret
iret
fimul
pop
mov
sub
arpl
adc
mov
cmp
test
movs
pop
out
repz
adc
call
mov
fcmovnbe
adc
sub
nop
cmp
sahf
in
ds
cmp
jecxz
ret
and
push
and
or
sti
lods
imul
jns
push
fstp
ffree
cs
push
push
adc
pop
fs
call
or
jo
dec
mov
ret
out
fs
push
cmp
push
push
shl
jno
(bad)
push
push
bound
xor
push
les
les
(bad)
xlat
add
stos
xor
hlt
or
xchg
xchg
or
int
sahf
mov
push
adc
pop
lods
mov
mov
das
scas
jecxz
inc
sub
fs
xlat
xor
pop
in
inc
cmc
add
cmp
pop
or
test
stos
imul
clc
add
mov
iret
dec
addr16
inc
mov
and
fisub
cmc
push
xor
shl
(bad)
push
lds
or
add
push
ret
mov
out
sub
and
mov
xchg
mov
fdivr
jl
movsx
xor
fmulp
fwait
mov
out
arpl
pushf
seto
fdiv
push
das
mov
push
out
sbb
adc
push
iret
(bad)
and
inc
jo
xor
mov
jecxz
pop
das
push
popa
pop
idiv
ss
cli
push
sub
sub
xor
out
movs
pop
aam
mov
repnz
mov
lock
pop
xchg
pop
add
mov
push
ficomp
mov
shl
ret
loopne
xor
mov
cld
(bad)
xchg
lea
mov
mov
jne
jl
mov
test
aam
ins
xor
shr
gs
push
sbb
mov
in
in
adc
fiadd
std
cs
sahf
inc
test
ret
and
and
(bad)
pop
adc
mov
aas
pop
xchg
push
mov
or
xchg
mov
sub
cmp
ja
xor
setp
xchg
sub
mov
inc
push
mov
push
stos
jmp
xor
push
movs
jl
in
out
pop
mov
jle
add
inc
mov
pusha
call
and
mov
jmp
sub
(bad)
adc
pushf
adc
jno
mov
push
inc
repz
ja
hlt
cmp
dec
pop
mov
scas
jno
mov
fstp
ja
movs
outs
mov
es
js
bswap
or
test
sbb
repnz
iret
dec
fucomp
mov
int
jmp
fist
add
jmp
test
fdivr
sub
cmp
ret
movs
ror
arpl
push
xlat
lock
and
xchg
mov
add
add
pop
shl
(bad)
mov
adc
mov
retf
inc
jbe
repnz
call
cwde
cmc
das
retf
dec
je
out
jbe
(bad)
jge
inc
aam
(bad)
lock
xor
pop
addr16
and
sub
mov
dec
adc
call
jbe
data16
ja
rcl
mov
xlat
ficomp
add
xor
xchg
xor
mov
mov
push
jmp
fst
movs
aaa
push
jg
fwait
sub
cmc
dec
or
imul
mov
mov
cmp
js
jb
sub
fst
inc
test
jno
adc
in
mov
xor
xor
ds
jbe
fimul
xchg
sbb
push
fbld
repz
jle
ds
and
mov
inc
push
pop
(bad)
imul
stos
inc
out
jno
cmp
cmovge
xlat
clc
enter
jg
dec
push
xor
xor
test
mov
push
add
mov
or
fist
xor
popf
shl
(bad)
jle
mov
es
sti
mov
fs
push
bound
xchg
dec
sbb
sar
mov
out
adc
arpl
lea
push
retf
shr
test
xchg
or
pop
retf
mov
mov
sbb
stos
loope
fadd
sar
cmps
outs
cmp
fisubr
pushf
cmp
xor
test
push
sub
(bad)
pop
std
xchg
xchg
cld
mov
je
bound
rcl
mov
ret
or
es
pushf
popa
leave
nop
fcomp
sub
shl
clc
(bad)
jmp
dec
push
push
cmps
test
inc
out
pop
mov
outs
xor
xchg
push
and
inc
cmp
mov
sbb
and
sbb
aas
add
add
gs
pop
push
out
push
es
imul
inc
bound
lods
stos
sbb
or
or
xchg
into
push
popa
outs
pop
mov
sub
mov
dec
inc
repnz
js
mov
outs
aas
sbb
add
test
aad
adc
vunpckhps
icebp
add
xchg
add
pop
js
push
jb
pop
test
(bad)
cmps
mov
inc
cwde
movs
add
add
gs
mov
fist
das
pop
mov
add
in
and
mov
gs
in
mov
mov
jl
daa
hlt
movs
or
retf
pop
pop
loopne
ins
cmp
xor
dec
xchg
out
scas
mov
jecxz
pop
mov
adc
push
(bad)
popa
jo
clc
inc
(bad)
cmps
jge
(bad)
in
loop
push
je
add
mov
xor
mov
repz
daa
mov
xchg
and
jne
cmps
add
out
cmp
adc
adc
xlat
loopne
add
jg
sbb
xor
or
sub
in
fbstp
es
xor
xchg
mov
add
cs
cmp
mov
and
mov
ins
(bad)
pop
test
cmp
out
xchg
out
sbb
fwait
pop
int
xor
mov
jno
fisttp
imul
cdq
sub
xchg
push
iret
xchg
ins
psubsb
lock
fidivr
test
(bad)
cmp
xchg
add
popf
test
jne
imul
mov
xchg
mov
cmps
(bad)
int3
into
stc
add
fwait
(bad)
xlat
out
push
sbb
(bad)
fdivr
xor
and
(bad)
ret
rol
test
imul
cmp
lds
leave
jp
pop
test
mov
jbe
cmp
sub
add
mov
pop
pop
fdivp
jb
(bad)
mov
pop
jns
push
inc
cmps
mov
mov
cmp
fmul
or
and
xor
jbe
out
cld
test
jmp
sub
or
les
inc
push
cmc
fcomi
jns
popf
outs
or
or
mov
mov
push
out
push
jmp
dec
xchg
loop
xor
add
lds
addr16
in
dec
icebp
test
in
and
ja
jecxz
xchg
mov
nop
arpl
ins
and
lock
sub
adc
scas
cmps
xor
ins
in
inc
loope
int
(bad)
dec
aam
test
hlt
leave
mov
push
fstp
movs
push
sbb
ins
add
mov
mov
jge
fsub
push
outs
inc
aaa
jle
cs
test
mov
add
xchg
cmps
nop
or
xlat
jns
cmps
in
push
xchg
mov
js
leave
inc
stos
jmp
aas
or
imul
mov
out
mov
repnz
xlat
mov
cmp
cmp
lods
pop
das
xor
loop
lods
jle
ss
ret
mov
xchg
std
add
push
dec
icebp
xlat
and
jl
jo
cmps
ret
rol
xlat
in
(bad)
aad
mulps
nop
xchg
jp
xor
sub
clc
jp
stos
call
pop
leave
imul
cmp
das
(bad)
pop
in
test
xchg
not
loope
adc
push
test
ins
(bad)
cdq
xlat
jae
pop
pop
out
lds
fild
mov
adc
mov
or
mov
push
pop
pop
icebp
dec
in
jbe
ret
jmp
pop
mov
outs
pop
push
addr16
sti
push
mov
fdivr
xor
inc
test
push
cwde
lock
xor
imul
add
push
je
out
(bad)
hlt
inc
inc
add
mov
xor
mov
sub
idiv
fadd
dec
sub
shl
sbb
pop
jb
stos
jno
out
or
inc
mov
ror
call
rcr
dec
sbb
pop
(bad)
stc
pop
push
pop
add
lods
cld
iret
pusha
loop
arpl
cs
clc
mov
inc
fidivr
push
mov
hlt
add
add
jle
mov
aaa
jl
push
(bad)
out
mov
and
ins
scas
mov
add
pop
dec
xor
repz
mov
fbld
lods
and
(bad)
mov
dec
das
dec
scas
mov
aam
adc
jns
shl
cdq
inc
cmp
mov
retf
and
inc
xor
inc
mov
and
pop
xor
cmps
add
mov
out
adc
shl
shr
stos
add
xchg
push
cmp
lea
sti
cmc
retf
sbb
mov
xchg
test
jb
ins
retf
sbb
sbb
jmp
fdiv
ret
cld
pop
push
out
lods
jp
xchg
mov
sub
(bad)
cmp
sub
inc
rcl
lock
mov
cmps
pop
mov
sub
adc
inc
movs
addr16
ins
(bad)
cmp
mov
sahf
fwait
bound
enter
inc
and
fs
cmp
mov
fs
fwait
jle
fidiv
cmc
sbb
repnz
and
mov
cmp
jl
(bad)
scas
add
nop
test
arpl
out
sub
aas
push
scas
aam
pop
fisub
mov
stos
dec
mov
rcl
hlt
pop
popf
cmps
dec
mov
fistp
mov
and
leave
scas
ficom
mov
es
je
sub
dec
cli
outs
sbb
out
nop
cmps
adc
cld
in
test
retf
jmp
inc
mov
imul
sub
adc
mov
dec
mov
and
dec
push
pop
call
cli
repz
fbstp
ins
scas
or
pop
sbb
clc
stc
test
cmp
lea
stos
add
mov
push
add
test
xor
xchg
push
lock
mov
shr
in
pop
mul
mov
xchg
pop
arpl
mov
xchg
sbb
mov
in
inc
mov
inc
add
push
pop
push
dec
dec
movs
aam
pop
lock
pushf
mov
add
pusha
jp
pop
jo
aad
cdq
aam
mov
jns
inc
pop
je
out
imul
sbb
pop
or
jbe
in
jle
mov
les
mul
adc
mov
fnstenv
aad
lock
es
loope
cli
sahf
dec
js
adc
dec
xchg
lds
loope
or
mov
push
fadd
push
sub
mov
cmp
fdiv
pusha
clc
and
mov
test
mov
adc
push
mov
test
(bad)
sub
aaa
test
pop
arpl
fadd
push
pop
movs
mov
int3
fwait
in
adc
mov
out
gs
jo
cmp
sub
push
pop
dec
pop
ja
adc
ret
mov
jmp
pop
fnstsw
jp
push
sbb
cmp
adc
sti
cs
adc
cmp
push
add
dec
sbb
cmc
sti
and
shl
pusha
aad
push
ss
je
aas
jnp
loope
adc
dec
test
cli
test
mov
inc
inc
cmp
and
and
mov
mov
mov
xor
push
cld
(bad)
ss
mov
push
pusha
push
cmc
fnstcw
sub
inc
pop
cdq
movs
imul
push
repz
hlt
sub
sbb
inc
clc
push
jl
lods
xor
jmp
adc
ja
jb
(bad)
jnp
scas
iret
adc
and
aaa
sub
jns
adc
adc
mov
adc
jmp
sub
xlat
shl
adc
shl
and
sub
shl
mov
stos
iret
hlt
mov
push
push
bnd
mov
les
xchg
push
cmp
pushf
call
pop
jne
(bad)
mov
add
sbb
xchg
ins
jmp
mov
fnstcw
push
jg
into
shl
mov
jl
scas
push
jg
(bad)
mov
ret
pop
or
fcom
stos
push
not
cmps
push
jle
dec
stc
push
xchg
rol
fst
bound
rcl
adc
jle
jg
sar
repz
xchg
mov
fidivr
ret
xor
fmul
push
xchg
sti
pop
sbb
pop
inc
xor
sbb
lods
scas
jmp
fidivr
dec
and
xor
(bad)
xlat
jmp
in
(bad)
xchg
dec
ror
or
pop
out
mov
lea
mov
push
sub
stos
es
pop
and
js
test
adc
pop
cli
popf
and
out
or
xlat
sub
or
cmp
xchg
lea
out
ja
mov
pusha
add
sbb
stos
cmps
or
dec
clc
shl
sub
push
addr16
or
daa
mov
and
dec
lods
ret
cmp
jmp
inc
daa
js
movs
aas
retf
es
arpl
and
cmp
cmp
call
sti
imul
gs
xchg
xchg
std
fwait
or
imul
adc
scas
das
dec
mov
jmp
into
xchg
fisttp
les
cmps
enter
cmp
(bad)
stc
in
dec
jb
lods
test
repnz
mov
loop
inc
and
jne
scas
and
iret
cwde
cmp
mov
and
pop
mov
adc
nop
sahf
sub
jo
mov
push
ret
addr16
mov
shl
cmps
aam
outs
push
cmp
cwde
test
mov
sub
pop
bound
mov
pop
iret
push
jge
sub
sbb
push
movs
loope
repnz
int3
pushf
sbb
adc
nop
pop
jp
add
mov
jg
pop
mov
push
test
jmp
or
pop
push
lea
loope
cmp
lds
xchg
test
test
push
push
cmc
dec
adc
nop
dec
out
rcr
jns
and
rol
imul
mov
xchg
lods
dec
pop
(bad)
in
mov
in
(bad)
cmc
lea
scas
popf
call
dec
inc
xor
lea
pop
push
pop
and
jnp
mov
and
inc
sbb
rcr
mov
lods
dec
(bad)
push
dec
repnz
sub
int
or
shr
sub
daa
in
push
retf
inc
or
ret
cmps
lods
jmp
lods
add
ja
and
aas
cmp
fdivr
div
pop
dec
jmp
out
push
inc
sub
xor
inc
cmp
push
aam
dec
mov
jbe
movs
stos
test
sbb
out
not
adc
mov
push
add
(bad)
dec
in
mov
retf
not
fcmovb
arpl
push
fistp
mov
jecxz
ins
es
mov
fdiv
hlt
xor
cmp
adc
rcr
nop
and
pusha
cmc
pop
pop
dec
mov
sbb
xchg
cs
jae
fwait
mov
int
cmp
fcomp
fwait
push
repz
inc
mov
mov
dec
and
fstp
vpslld
lods
jb
loop
and
cs
sub
xchg
add
in
pop
rcl
push
or
jg
scas
mov
xor
adc
inc
sbb
mov
add
rcr
shl
jo
jo
lock
mov
lods
stos
lods
push
nop
xor
dec
jmp
add
imul
inc
pop
outs
test
fadd
int3
in
(bad)
repz
xor
mov
imul
fcomp
dec
fldenv
(bad)
dec
in
gs
sub
or
aas
repnz
jmp
cmp
add
and
out
loopne
shr
mov
lods
or
leave
movs
pop
xchg
je
dec
mov
sub
jne
cwde
js
mov
jl
dec
mov
into
aas
in
popf
jl
bound
dec
adc
inc
pop
sub
jmp
dec
test
inc
stc
ja
lock
fisub
xchg
(bad)
cmp
adc
lahf
adc
pop
inc
pop
lock
fs
adc
mov
inc
mov
cmc
adc
sbb
into
dec
test
rcr
daa
popa
test
loopne
in
xor
dec
loop
js
xor
inc
cmps
jmp
fsub
sub
(bad)
fbld
and
or
xchg
or
sti
xchg
clc
mov
std
in
xchg
dec
js
mov
xor
cmps
(bad)
cmc
in
xchg
adc
test
mov
add
movs
cmp
int
add
aam
sahf
add
(bad)
(bad)
not
pop
jl
call
(bad)
xchg
add
loop
dec
outs
test
nop
pop
xor
inc
mov
push
add
inc
pop
push
xchg
sub
dec
repnz
adc
mov
fmul
mov
push
pushf
cs
or
mov
inc
fdivr
and
sub
mov
jbe
dec
aad
pop
adc
cmp
xor
aad
test
mov
xlat
xchg
cmps
push
add
fistp
arpl
aas
xabort
nop
(bad)
xchg
sub
mov
in
xchg
cmc
mov
jne
sbb
inc
lahf
cmps
cmp
fnstcw
(bad)
clc
mov
jmp
jo
xchg
outs
sub
fwait
repnz
fs
das
sbb
or
inc
sbb
popf
mov
cld
inc
push
add
icebp
push
pop
aam
lahf
push
inc
adc
stos
call
xor
aam
arpl
rcl
sar
dec
jns
mov
mov
aaa
or
add
and
inc
push
int3
push
(bad)
mov
jmp
mov
mov
and
rcr
cdq
addr16
push
ret
cli
xchg
sub
loope
cld
jne
pop
jecxz
mov
and
mov
or
push
lods
pushf
adc
repnz
push
sti
push
imul
stos
enter
push
loope
mov
test
or
pusha
sbb
mov
pusha
loope
push
push
jp
mov
push
lahf
les
imul
iret
or
repz
nop
cmp
and
sbb
jnp
cmps
jb
mov
repz
scas
jg
cmp
idiv
ins
icebp
mov
pop
adc
loop
inc
movs
cmp
ficomp
push
pop
test
arpl
sbb
add
jp
cmp
or
jl
cmps
mov
icebp
aas
ficomp
arpl
inc
repz
mov
push
mov
and
fld
mov
aas
mov
adc
pop
push
pop
adc
mov
jmp
jns
mov
xor
mov
pop
mov
push
push
and
xchg
mov
push
add
out
rcl
repnz
cdq
or
or
mov
jnp
xchg
push
sub
mov
mov
cmp
sbb
xchg
sbb
shr
cs
(bad)
cs
adc
imul
sbb
hlt
dec
in
or
jo
imul
push
cmovo
mov
add
pop
in
push
retf
add
out
ds
ja
ja
xchg
shl
leave
inc
dec
or
and
or
and
dec
and
pop
(bad)
out
sti
out
mov
mov
call
add
ds
and
or
mov
fdivr
in
lahf
add
in
or
fs
cmp
fs
jle
imul
mov
dec
mov
shr
clc
ret
int
xor
mov
lahf
jl
mov
sar
ret
retf
push
pop
adc
dec
loopne
pop
test
sub
xor
cld
in
and
fwait
(bad)
xchg
jb
jns
and
ins
ret
sbb
add
xchg
inc
mov
mov
jmp
and
std
pop
mov
sub
and
rcl
sbb
mov
sbb
(bad)
fcom
lods
mov
fcom
stos
pushf
ds
mov
mov
mov
cmp
test
ss
xchg
inc
inc
adc
mov
xlat
std
cli
dec
cmps
outs
dec
clc
lahf
test
ret
adc
sbb
jae
(bad)
outs
mov
pop
sbb
fstp
stos
adc
add
fnsave
sbb
mov
adc
mov
jae
and
jno
test
sbb
out
daa
jl
dec
(bad)
out
and
stc
cmc
jmp
xchg
push
dec
ja
ins
stos
fcomp
sub
or
in
retf
cld
in
out
pop
or
push
mov
lock
lahf
xchg
aad
in
and
push
sbb
lds
jns
mov
jmp
add
enter
call
sub
ret
in
pop
add
mov
jae
adc
mov
sub
adc
(bad)
dec
xor
mov
mov
and
(bad)
mov
jle
or
jo
mov
push
imul
hlt
stc
test
fcmovnbe
repz
rcl
scas
sar
jnp
ret
fwait
and
dec
scas
lahf
mul
xchg
ins
mov
cmp
mov
fdiv
imul
aaa
call
sbb
scas
add
pop
aas
rcl
jne
addr16
pop
cmp
cld
std
loope
fdivr
clc
or
cmp
loop
daa
scas
(bad)
jns
dec
retf
jle
(bad)
stos
iret
inc
lods
sub
dec
lahf
call
push
shr
inc
outs
and
xchg
push
mov
js
dec
daa
dec
jge
adc
adc
mov
xchg
fnstcw
mov
inc
cmps
mov
inc
pop
aad
xor
mov
xchg
dec
ret
sbb
xchg
cmp
push
dec
sub
xor
jge
dec
xchg
and
repz
out
pop
mov
retf
inc
fbstp
xchg
inc
add
mov
loope
xor
mov
aam
pop
psubsw
lea
test
hlt
cmps
test
jg
leave
cld
fidiv
hlt
outs
inc
ret
ror
inc
sub
xchg
sti
xchg
xor
mov
xchg
inc
or
retf
add
push
or
jbe
mov
les
mov
add
xor
rol
or
pop
jle
jg
mov
cmp
and
cmp
cli
push
or
in
aad
aas
mov
movs
cmps
lock
xchg
xchg
or
lods
inc
mov
(bad)
jb
out
cmp
sub
je
shr
xlat
addr16
loope
icebp
in
xor
(bad)
xchg
in
push
adc
adc
ins
sbb
adc
jmp
or
pop
jmp
mov
mov
adc
leave
retf
call
jg
pop
jnp
pop
dec
stc
inc
outs
and
test
cmp
leave
push
addr16
stos
mov
mov
push
pop
xor
ret
jbe
sbb
lea
(bad)
xor
cmps
pop
js
pop
mov
shr
push
dec
inc
fnsave
inc
std
fxch
add
stos
nop
sub
ficom
inc
mov
(bad)
xchg
movs
test
inc
js
inc
xchg
mov
dec
std
dec
dec
dec
scas
sub
mov
xchg
sub
inc
or
pusha
jmp
xlat
xor
mov
adc
mov
jne
adc
sub
in
mov
mov
lock
push
nop
push
out
and
mov
xor
fimul
xor
jae
out
mov
std
push
xor
stc
jno
push
cmp
or
gs
(bad)
cdq
pop
sub
mov
sbb
les
inc
jbe
mov
and
mov
out
pop
push
pop
jbe
std
ror
(bad)
jno
sub
fisttp
ins
cli
das
mov
sub
out
test
outs
jmp
mov
shr
add
jns
fidivr
sar
stos
add
add
cdq
mov
dec
or
test
stos
cli
ror
add
mov
lock
loope
ret
movs
movs
push
in
and
xchg
int
mov
cmp
mov
mov
jg
mov
xchg
and
rcr
sbb
cmp
push
dec
out
jp
jg
adc
add
mov
inc
and
out
aad
movs
mov
sub
xchg
cmp
cmp
retf
xchg
push
push
push
push
out
jmp
mov
stc
mov
ins
aam
xor
sub
ins
into
jb
loope
cmp
imul
pop
(bad)
sbb
jbe
aas
enter
js
mov
adc
xchg
mov
(bad)
sub
sub
mov
(bad)
jge
dec
in
push
sti
jae
ret
xchg
pop
aad
sbb
and
pop
pop
hlt
not
mov
rol
outs
mov
lahf
push
out
rcr
jmp
xor
(bad)
scas
loop
pop
push
(bad)
jl
loop
stc
and
out
and
dec
js
fwait
out
popa
sub
pop
xchg
outs
retf
mov
lods
jecxz
std
out
in
mov
push
not
xor
out
add
repz
(bad)
mov
sub
hlt
idiv
leave
shl
lahf
add
dec
mov
pop
inc
inc
push
out
jmp
pop
fidivr
sahf
jg
pop
sub
mov
adc
out
das
inc
repnz
retf
or
xor
dec
imul
aaa
xor
imul
xchg
push
call
int
sub
movs
fs
cmp
clc
adc
out
push
adc
and
bound
push
mov
xor
and
repnz
mov
daa
cmp
enter
mov
push
rcr
movs
adc
cmp
(bad)
pop
cdq
xor
and
mov
mov
sub
(bad)
int
loop
jo
xor
std
hlt
mov
into
(bad)
push
in
xor
mov
ror
dec
fstp
pop
dec
mov
cmc
add
outs
out
add
inc
out
shl
and
ret
repnz
dec
xor
xchg
add
or
sub
xchg
jae
retf
test
pop
int
xchg
xchg
or
inc
mov
dec
xchg
sti
inc
adc
and
jb
pop
add
mov
adc
mov
in
fld
jge
mov
mov
pop
pop
xchg
mov
pop
sbb
aad
loope
jmp
fnsave
jl
popa
dec
test
(bad)
and
ss
push
xchg
(bad)
in
pop
out
lock
and
frstor
xchg
jmp
icebp
fld
out
xchg
sub
jp
mov
xor
jae
dec
retf
dec
(bad)
push
adc
pop
enter
mov
jbe
or
stc
enter
retf
inc
cmp
(bad)
rol
add
cwde
cmps
push
out
imul
mov
(bad)
mov
ds
test
adc
addr16
lods
cmps
cmp
pop
lea
int
call
sbb
das
aas
repnz
sub
inc
mov
fistp
(bad)
out
neg
pop
rol
mov
scas
pop
jp
mov
loope
mov
push
addr16
and
push
fld
xor
push
cmp
das
out
and
xor
into
push
(bad)
pop
imul
xchg
push
adc
adc
cld
mov
fucomip
cmp
call
and
mov
cs
imul
scas
cmps
ficomp
sub
mov
ret
inc
sub
xchg
dec
push
test
pop
movs
loop
dec
(bad)
in
push
jae
out
cld
jno
push
cmp
int3
std
add
shr
jns
mov
(bad)
inc
sub
xlat
xor
std
mov
jae
cmp
mov
jecxz
pop
out
mov
int3
dec
push
or
stos
fbld
xchg
fimul
in
mov
(bad)
cmp
lahf
cmps
inc
or
jp
push
sbb
bound
cmp
int3
pop
loop
ins
ins
pushf
cmps
mov
jo
leave
movs
das
mov
dec
fstp
push
js
jne
pop
mov
xor
cmps
push
sub
inc
leave
into
xchg
mov
add
add
lods
dec
xchg
pop
int
xchg
hlt
ja
movs
fs
push
fidivr
sub
mov
push
sub
cmp
imul
or
jae
test
mov
xor
js
lods
xor
out
xchg
jne
lods
pushf
fmulp
add
xchg
mov
inc
sub
fadd
lds
xor
cmps
std
sti
test
push
xchg
lock
xchg
inc
jns
sub
movs
jmp
stc
pop
inc
mov
push
shld
fidiv
into
out
sbb
mov
sbb
fs
xor
push
test
outs
cdq
ss
mov
(bad)
sbb
retf
mov
xchg
jo
iret
inc
mov
or
into
out
cmps
enter
retf
repz
sbb
push
or
outs
jae
jp
rcr
stc
jo
ret
xchg
dec
jno
push
cdq
imul
movs
sub
enter
jle
pusha
repz
jae
xor
cmps
fstp
call
sahf
mov
inc
mov
jecxz
xchg
pop
sub
retf
loop
loope
or
xor
mov
adc
addr16
adc
stos
nop
and
or
push
int
sub
idiv
mov
inc
push
xchg
dec
out
dec
int3
sbb
xchg
test
mov
icebp
in
fsubrp
ds
xor
xor
ficomp
cmp
mov
mov
daa
ret
push
push
jae
test
and
outs
cld
pushf
push
rcr
daa
out
cdq
(bad)
fs
outs
dec
and
inc
aas
pop
mov
stos
enter
out
cmp
les
and
std
add
je
shl
cli
push
das
fmul
(bad)
mov
or
pop
xor
call
movs
pusha
cmp
lahf
in
xor
sub
aad
xchg
jp
mov
outs
jno
(bad)
jp
xchg
inc
pop
mov
add
mov
std
mov
lds
arpl
pop
stos
jmp
inc
cli
int3
inc
aas
jae
mov
or
xchg
loop
and
cli
loop
cmp
(bad)
mov
jle
lahf
mov
popa
xchg
xor
dec
imul
imul
jns
cdq
loopne
sbb
pop
mov
stos
(bad)
outs
cld
iret
sub
dec
or
lea
(bad)
sbb
cmp
inc
iret
xchg
jg
ficomp
(bad)
(bad)
adc
int
fdivr
cmp
and
loopne
mov
in
test
popa
cmps
es
inc
jp
inc
jle
ret
pop
mov
add
pop
xor
mov
cmp
outs
addr16
jl
sbb
mov
push
div
jge
lock
sub
out
retf
pop
out
xchg
sbb
ja
jge
test
mov
jp
daa
push
mov
cld
popa
leave
imul
outs
inc
sahf
aad
fisttp
dec
adc
push
mov
adc
outs
lds
ja
xchg
out
outs
push
xor
in
leave
pop
mov
lea
pop
mov
cmc
sbb
pop
in
test
es
adc
mov
add
mov
cmp
jle
or
pop
ret
stos
xlat
scas
mov
cli
stc
lds
fwait
rcr
xchg
outs
shl
jg
fstp
add
pusha
xchg
push
call
add
push
shl
xchg
fild
or
pushf
out
sti
cmps
fisubr
mov
std
enter
push
(bad)
push
xor
inc
jmp
inc
or
jns
jg
jecxz
test
rol
cdq
int3
cmp
jbe
(bad)
xchg
and
dec
(bad)
mov
mov
push
push
and
cmp
xchg
cmp
add
je
cdq
out
cmc
test
popa
popa
jno
inc
cmp
ja
sbb
fild
movs
cmp
sbb
dec
cmps
jmp
sub
mov
js
(bad)
enter
inc
sbb
adc
(bad)
fdivr
jae
mov
ds
cmp
pop
dec
mov
imul
pop
push
inc
dec
inc
pop
mov
(bad)
in
mov
add
push
mov
and
mov
add
cmp
cmp
inc
cmps
adc
cmp
shl
push
adc
bound
dec
jmp
mov
ins
mov
jae
jmp
and
ins
dec
add
push
hlt
out
fisttp
cwd
idiv
xchg
pop
std
sbb
push
test
jle
stos
pop
shr
into
setno
adc
inc
lea
mov
dec
xchg
in
(bad)
mov
mov
pop
pop
lods
in
repz
out
jle
inc
mov
bound
and
enter
outs
sti
mov
jg
dec
sub
mov
mov
dec
cdq
fcomi
call
sbb
outs
cmps
int3
popf
shl
das
adc
lock
out
sbb
fs
mov
inc
mov
test
loop
sbb
lea
sti
mov
repnz
jnp
mov
addr16
mov
lock
popf
push
add
xor
inc
xchg
mov
in
dec
shl
dec
inc
out
dec
mov
pop
xchg
ret
adc
cmp
das
or
mov
push
daa
inc
ins
ja
leave
outs
mov
mov
mov
ret
jl
jae
(bad)
xchg
mov
iret
test
jno
repz
xchg
cmps
in
out
fidivr
cmp
fadd
loop
movs
aaa
js
sub
xchg
and
imul
(bad)
adc
aaa
out
pop
xchg
(bad)
jl
jnp
sub
fnstenv
xor
ins
jbe
jmp
and
test
popa
xchg
cmp
xchg
mov
cmps
or
push
inc
sbb
outs
cmc
setl
mov
enter
lods
inc
cmp
mov
clc
inc
aas
repz
xor
sahf
push
mov
pop
xchg
mov
loope
jp
fs
xor
fs
into
or
mov
arpl
lahf
mov
aad
pop
jne
out
push
dec
inc
test
push
idiv
push
adc
clc
push
pop
xchg
pushf
(bad)
shl
cwde
jo
push
push
cmp
ss
(bad)
clc
sbb
pop
or
retf
shl
pop
xchg
xchg
lock
inc
adc
adc
adc
mov
pop
fidiv
cmps
gs
shl
call
pop
push
fsubr
imul
mov
cmp
stos
fisttp
sub
adc
dec
pop
jp
sbb
cli
bound
gs
pop
cmp
mov
push
outs
xchg
les
mov
loope
dec
in
xchg
ja
je
adc
dec
(bad)
(bad)
mov
mov
jg
fisttp
jp
and
sar
mov
in
pop
mov
jle
inc
mov
ret
imul
jns
fisttp
aad
stos
pop
mov
cmp
and
ins
xor
stos
in
ds
xor
sbb
mov
cld
outs
rcl
jmp
enter
or
(bad)
inc
daa
sbb
mov
and
cmp
in
add
iret
push
inc
(bad)
call
(bad)
sbb
xchg
inc
(bad)
test
fnstenv
repz
ss
fld
jno
into
iret
idiv
(bad)
cli
inc
push
mov
inc
(bad)
(bad)
cmps
(bad)
cmp
(bad)
mov
ret
pushf
mov
mov
push
mov
(bad)
int3
pop
push
test
ins
stos
xor
push
gs
(bad)
fxch
out
popf
mov
daa
xchg
mov
xor
sub
jg
inc
lods
cmp
lahf
leave
jb
cmp
xchg
movs
sti
mov
fldcw
and
jmp
or
dec
pop
fcomp
icebp
out
jmp
jecxz
xchg
jge
jmp
adc
xor
dec
mov
cmps
pop
in
ins
scas
sbb
pop
jo
or
(bad)
call
(bad)
jnp
ds
cmps
jne
sbb
mov
pop
test
xchg
test
push
scas
and
das
pushf
push
push
xchg
inc
sbb
iret
sub
fs
and
in
xlat
ins
and
aaa
aaa
cmp
leave
dec
xor
arpl
sbb
jnp
je
pop
and
mov
jmp
arpl
fadd
jnp
xor
fist
pop
cmp
and
ror
inc
jmp
fucom
out
aaa
in
xor
and
enter
aas
fs
jle
jg
dec
and
lea
mov
mov
iret
ins
int3
aad
(bad)
in
mov
aam
leave
mov
cmps
test
sub
dec
dec
cmp
or
ins
or
mov
adc
sub
xor
movs
push
retf
sbb
cli
test
lea
in
arpl
shl
jg
push
and
outs
ja
and
fimul
push
cs
fmul
hlt
(bad)
je
mov
gs
into
cmp
pop
xor
inc
push
or
push
adc
imul
mov
mov
out
fldenv
div
jno
in
xor
pop
das
fldenv
mov
pop
inc
fmul
xchg
ja
jp
iret
or
or
mov
push
addr16
dec
xor
lds
cwde
xchg
aad
push
dec
rdmsr
jp
jg
outs
(bad)
es
bound
sbb
jmp
les
inc
jmp
or
jecxz
xchg
add
shl
xchg
retw
lods
dec
stos
inc
push
jmp
lock
mov
inc
addr16
popf
ss
xchg
ficomp
test
scas
adc
stc
jb
cld
jmp
test
int3
imul
into
jecxz
sbb
ret
push
add
ds
mov
lock
out
add
xchg
inc
(bad)
sti
cld
cmp
retf
jb
outs
jns
fcom
fsub
jb
push
call
push
rcr
jbe
in
mov
loope
push
lahf
sbb
imul
xchg
aas
pop
das
into
imul
cmp
ins
mul
(bad)
mov
arpl
dec
xor
cmp
fadd
loop
sbb
adc
jb
cmps
shr
sar
ficomp
or
imul
aad
sar
cmp
loope
ret
and
sub
adc
js
mov
jmp
mov
cld
push
dec
sar
pop
cmp
movs
sub
sbb
retf
inc
ret
mov
into
aad
jo
pop
fidivr
mov
jle
ins
push
lods
loop
pop
aam
mov
jns
cs
fstp
cmp
hlt
adc
fst
stos
push
adc
and
shr
mov
ficomp
mov
and
mov
ret
xchg
or
lds
inc
lea
out
test
jmp
cmp
lods
repz
adc
jns
pop
je
push
lods
into
push
push
adc
mov
sub
(bad)
in
mov
ret
sbb
fadd
test
dec
(bad)
push
jo
mov
jne
mov
clc
cmp
mov
xor
mov
xor
or
push
push
mov
push
xchg
je
mov
xchg
sbb
and
cmps
retf
mov
movs
clc
jl
sahf
repnz
pop
or
rcr
sbb
jae
dec
add
inc
mov
xor
das
dec
sti
aam
in
cmp
outs
mov
push
aam
or
mov
mov
inc
outs
sub
jge
jmp
test
rcr
aad
dec
retf
popf
xchg
mov
push
jl
pop
das
lods
dec
fxch
repz
test
jbe
test
jmp
stc
xchg
fidiv
out
push
outs
pop
push
iret
jmp
test
in
fidiv
in
ja
jl
and
dec
jmp
sbb
pop
pop
das
das
arpl
cmps
sub
sbb
retf
sbb
pop
push
inc
in
xor
mov
aaa
adc
inc
int3
jl
mul
in
clc
mov
(bad)
std
(bad)
test
adc
inc
mov
shl
add
xor
ficomp
into
push
iret
fwait
pushf
xchg
pop
jmp
into
dec
clc
cmp
aad
imul
mov
xchg
(bad)
clc
dec
test
scas
and
xchg
mov
dec
sbb
inc
imul
test
jne
sahf
add
jns
jmp
pmaxub
fisubr
fdiv
xchg
dec
aam
xor
mov
and
out
cmp
jle
ss
push
das
dec
sbb
popf
ins
out
xchg
retf
mov
push
dec
outs
aam
inc
lock
inc
imul
pop
xchg
(bad)
cld
sbb
fdivrp
ficom
jb
pop
adc
std
fs
retf
lahf
xchg
sti
dec
outs
push
pop
ja
pop
cmc
loop
push
stos
ins
pop
jge
shl
cwde
fldenv
mov
(bad)
scas
stos
rcl
dec
sub
popf
in
dec
call
adc
std
dec
(bad)
jmp
pushf
in
xor
xor
pushf
and
icebp
lods
dec
pop
out
dec
fdivr
scas
sti
scas
aaa
xchg
sbb
fcomp
jg
jnp
test
mov
das
rcr
int
sub
mov
mov
cmp
push
scas
in
sbb
loop
or
or
scas
test
sti
jno
mov
sar
push
leave
cmps
jecxz
xchg
sub
pop
cmp
cmp
movs
pop
or
xchg
sub
xchg
inc
mov
sub
(bad)
pushf
mov
movs
and
cmp
out
xlat
out
xor
xor
jo
sub
or
and
movs
mov
xor
jb
rol
shl
stos
push
rcl
dec
mov
and
je
cmp
mov
daa
push
imul
int
test
out
retf
cmp
xchg
cmp
imul
std
add
aaa
cwde
js
jg
mov
pusha
mov
std
xor
add
mov
lds
mov
inc
das
cmp
(bad)
in
mov
mov
cld
(bad)
in
mov
cmp
pop
retf
ds
out
iret
sbb
call
pop
jmp
inc
xchg
xchg
mov
adc
rcl
imul
jb
add
jne
(bad)
(bad)
test
jne
ret
lahf
pop
iret
dec
in
cmps
mov
lods
jo
(bad)
adc
add
xchg
ds
stos
jmp
mov
pop
shl
add
push
std
out
or
out
dec
mov
dec
push
mov
test
push
int3
mov
sub
mov
or
fidiv
mov
test
scas
cld
(bad)
xor
ret
into
sbb
jmp
arpl
movs
pop
das
inc
ficomp
popa
inc
mov
lea
out
nop
jo
cmp
mov
fisubr
sbb
cmp
ins
lock
(bad)
sbb
fimul
data16
fwait
sub
retf
mov
les
inc
std
hlt
push
fcomp
in
jmp
jle
mov
fidivr
add
fdivr
jae
xor
xchg
xor
jp
fst
jbe
pop
xchg
(bad)
(bad)
sahf
jl
cmp
pop
ret
jle
into
xor
fcmovbe
stc
cld
xor
push
xor
mul
mov
mov
inc
xchg
pop
jmp
xor
loope
(bad)
js
or
dec
dec
jge
fst
xchg
gs
xchg
in
xor
iret
fnstcw
jecxz
xor
jmp
jne
icebp
nop
xchg
mov
pop
les
mov
rcl
ret
adc
dec
sbb
imul
into
or
push
mov
mov
or
cmp
int3
scas
loope
fs
(bad)
pop
movs
leave
ret
loope
imul
mov
js
push
inc
ss
jle
push
cmc
mov
(bad)
ficomp
mov
pop
lea
inc
jae
jae
adc
cdq
xor
(bad)
mov
lea
lods
(bad)
mov
sub
adc
jb
cmc
xlat
retf
lahf
dec
in
cs
mov
xchg
cmp
ror
sbb
xchg
fadd
out
mov
call
sti
lock
leave
in
movs
sti
rcr
cmp
fild
push
sub
scas
jmp
and
pop
fimul
push
in
cmp
lahf
xchg
lods
lods
adc
inc
adc
mov
adc
popf
mov
movs
test
push
inc
dec
(bad)
cmps
stos
cmp
in
call
je
and
or
xchg
push
inc
xor
cwde
cld
outs
xor
movs
fcomi
rcl
cdq
in
(bad)
sub
cmps
mov
dec
ds
aaa
movs
inc
fwait
repz
xchg
mov
sub
outs
fild
inc
les
into
mov
shr
cdq
push
xchg
push
sti
xor
xchg
repnz
fdiv
loopne
cmp
cmp
push
sub
and
jge
mov
mov
(bad)
(bad)
mov
out
rol
sar
(bad)
ret
ret
es
(bad)
idiv
xor
fsubr
(bad)
or
popf
cmp
das
inc
movs
stos
cld
jb
and
lods
lods
push
pop
js
cmp
cmp
jg
xlat
lahf
mov
cld
mov
dec
xchg
cmp
(bad)
(bad)
dec
shr
clc
cdq
lods
(bad)
arpl
inc
jns
cwde
out
in
(bad)
call
daa
imul
inc
ror
mov
aaa
sahf
loope
enter
imul
sbb
(bad)
inc
clc
cmp
xor
cmp
sub
jb
sbb
fdiv
inc
jb
xchg
mov
or
push
pause
stc
(bad)
push
ret
fwait
clc
movs
jp
pop
addr16
jle
push
jle
ja
jmp
jbe
hlt
xchg
mov
pusha
hlt
test
aaa
stos
pushf
fdivr
aas
sub
xchg
pop
in
in
loope
jne
mov
xlat
stos
jle
test
xchg
and
hlt
dec
pop
pop
movs
leave
loop
les
xchg
das
inc
loop
push
xchg
fld
aam
sub
mov
add
cdq
xchg
aam
dec
shl
movs
mov
cld
mov
ret
inc
jmp
mov
jmp
add
mov
sub
out
mov
sub
jmp
int
sahf
shr
push
outs
rcl
pop
call
mov
icebp
cmp
jg
fdiv
in
jle
sub
repz
nop
xor
xchg
pop
mov
out
push
rcl
retf
xor
in
push
or
in
jge
and
dec
hlt
repz
stos
or
xchg
lds
sbb
sahf
jnp
sub
retf
fwait
aam
call
xor
jmp
jo
(bad)
ret
jl
push
pushf
cmp
cld
icebp
loope
inc
sub
cwde
inc
(bad)
rol
sub
sahf
cmp
dec
pop
fistp
dec
cdq
(bad)
daa
push
(bad)
xlat
inc
es
in
adc
scas
sub
or
not
add
jmp
ds
inc
cwde
sub
xchg
fucom
daa
jmp
and
add
cmp
outs
dec
lods
mov
out
inc
push
xchg
sub
xor
imul
jns
inc
mov
fisubr
cmp
and
add
cmp
div
dec
jae
pop
cdq
push
lea
cs
cmp
sub
mov
bnd
xchg
mov
sub
mov
pop
dec
push
lods
lods
lahf
in
shl
jno
cmp
fmul
mov
iret
out
cmps
xor
jmp
or
and
jge
add
lds
js
mov
arpl
cmps
arpl
std
ror
aas
mov
fild
fwait
pop
cmp
shl
in
test
push
lock
xchg
retf
loop
arpl
out
or
cvtps2pi
dec
aam
sbb
ret
xchg
(bad)
stc
mov
mov
icebp
(bad)
int
or
fld
push
sbb
fsub
loop
mov
xor
lods
ret
mov
mov
ins
ret
retf
jmp
jle
mov
mov
pop
ins
mov
cld
movs
in
push
sbb
fstsw
add
xor
adc
push
icebp
xchg
jge
fisttp
push
mov
xchg
mov
test
mov
jp
push
dec
mov
das
ins
fstp
scas
pop
pop
inc
mov
call
into
js
cmp
cmp
dec
ret
aas
xchg
jge
jae
int
add
or
mov
fiadd
dec
push
fcmove
cmps
movs
ins
add
jne
pop
dec
imul
push
test
or
cmp
out
mov
and
cli
and
sti
dec
stos
cmp
gs
push
mov
das
jb
jbe
or
mov
jb
mov
jb
sbb
mov
neg
lods
xchg
pop
stc
xor
ror
add
rol
out
in
sbb
or
leave
jl
cmc
pop
push
and
mov
xchg
push
je
scas
pop
rcr
sti
xor
pop
cs
out
fst
xchg
xchg
or
jmp
push
ins
pop
les
mov
push
fwait
cmp
xor
xor
sub
ja
or
lock
mov
adc
out
(bad)
out
dec
(bad)
loope
aas
inc
jbe
mov
dec
cld
lahf
movs
jmp
ds
push
add
pop
or
push
sub
mov
cmp
cmc
pop
outs
test
std
retf
mov
sahf
shl
leave
(bad)
ds
scas
lods
adc
mov
lds
sbb
in
mov
cmp
and
pop
clc
test
js
fisttp
icebp
sbb
sbb
cmp
imul
add
fsubr
neg
sbb
sbb
mov
out
pop
stos
cmps
arpl
push
ins
pop
inc
fidivr
pop
pop
mov
fbstp
test
push
jbe
daa
out
adc
xchg
fiadd
mov
ss
mov
repz
mov
or
setg
(bad)
out
stos
mov
pop
mov
(bad)
cmp
test
lahf
fld
cmps
imul
lods
ss
adc
shl
mov
jnp
adc
push
outs
fistp
cmp
cwde
fld
cmp
dec
sbb
inc
in
dec
lock
sub
mov
push
aas
dec
lahf
push
inc
mov
pop
cmp
adc
nop
fdiv
dec
pop
or
add
fldcw
jl
ds
cwde
lock
inc
xchg
aaa
jg
into
sbb
xchg
aad
mov
jo
cmp
push
shl
outs
mov
stc
lods
dec
scas
lds
fwait
push
fnstcw
sbb
fild
(bad)
dec
dec
int3
ficom
cmps
pop
outs
imul
jmp
fnsave
inc
mov
shl
ja
outs
xlat
ds
sbb
mov
scas
out
xor
adc
jp
and
jp
jbe
and
gs
cmp
cs
mov
xor
fidiv
inc
mov
sub
adc
out
jb
mov
add
fidivr
js
jns
(bad)
lods
mov
shl
cld
mov
push
dec
(bad)
jle
sbb
jmp
mov
jmp
lock
call
pushf
(bad)
leave
and
mov
sub
pop
leave
jp
cmp
sbb
fs
jb
jnp
test
jmp
retf
fwait
jp
iret
xchg
sahf
addr16
mov
mov
ins
jle
lods
fimul
shl
stos
jo
jno
lods
cmp
push
sub
jns
mov
aad
jae
(bad)
jmp
xor
jle
sbb
(bad)
push
cmc
or
daa
out
sbb
cdq
mov
mov
lods
fistp
out
push
jne
int
clc
cld
cld
xor
jbe
xchg
pop
nop
(bad)
jmp
inc
stos
push
sbb
stos
jge
dec
repz
adc
or
lock
fidiv
cld
xor
in
je
pop
xlat
out
inc
das
xor
or
push
mov
jg
movs
popf
sbb
mov
cs
pushf
adc
lods
sub
mov
fs
xchg
cmp
pop
mov
(bad)
or
sbb
adc
lods
push
mov
(bad)
out
repz
mov
dec
cmp
sub
pop
ins
sbb
mov
call
cmps
test
xor
imul
mov
add
arpl
and
les
mov
cmp
pop
or
dec
or
ins
dec
or
loopne
movs
cdq
retf
sub
call
mov
mov
sti
repz
(bad)
cmp
xlat
iret
push
add
jnp
les
test
pop
sbb
sub
pop
jmp
sub
loope
es
int
les
jmp
push
jo
fucomp
int
movs
int
cmps
push
cmp
cmp
mov
mov
jecxz
icebp
not
ror
xchg
mov
in
ins
test
cwde
arpl
fisttp
fdiv
or
xor
mov
push
lods
pop
out
test
sub
jb
xchg
(bad)
scas
jmp
inc
inc
(bad)
neg
cwde
cmp
mov
or
cmp
push
cs
into
daa
out
cmp
sbb
call
iret
cmp
ret
test
jle
xchg
int3
mov
leave
ja
in
push
pop
or
push
scas
dec
repnz
mov
aam
cmp
jo
push
stc
ja
test
cmove
out
sti
repnz
pop
or
das
lods
pop
jnp
(bad)
(bad)
xchg
retf
pop
xor
test
jbe
pop
jbe
fld
mov
int3
mov
mov
movs
mov
sub
sub
(bad)
lahf
sbb
push
xchg
in
inc
mov
xchg
sub
sub
or
int
xor
lea
nop
sub
loopne
ds
push
cmp
sub
loop
inc
mov
jnp
daa
push
jbe
xchg
jo
scas
inc
push
cmc
sbb
ret
stos
fs
sbb
cmp
ss
jp
ret
mov
out
jle
loope
lods
ss
mov
and
clc
dec
stos
out
pop
ss
jns
mov
cmp
pop
aad
mov
push
xchg
dec
ja
sbb
sub
sub
sub
stos
jmp
adc
dec
cwde
pop
pushf
jno
inc
adc
sbb
sub
xlat
dec
loope
jg
fisttp
fimul
pop
inc
pop
addr16
(bad)
scas
and
add
fist
pop
mov
lahf
call
cmp
cmc
mov
inc
arpl
test
aaa
sahf
aam
jl
cmp
je
jmp
aas
xor
cld
dec
aad
mov
dec
xor
iret
cmps
jbe
ret
inc
(bad)
imul
ja
xchg
shl
jno
jg
es
or
aaa
add
jmp
jl
das
fwait
pusha
scas
imul
fsubr
add
call
or
mov
ds
fwait
outs
sub
mov
push
lock
(bad)
ror
jp
push
in
jmp
fstp
cdq
ss
xlat
mov
das
push
cmp
pusha
dec
cs
sub
fsub
test
(bad)
outs
(bad)
out
leave
jecxz
jge
pop
xchg
shl
test
or
pushf
cmp
pop
mov
jae
adc
shl
cmp
les
adc
test
jbe
mov
bound
mov
pop
ins
xchg
and
mov
jmp
outs
mov
and
mov
push
scas
and
cmp
sahf
div
or
cmp
test
mov
sbb
dec
mov
hlt
cs
stos
jnp
cld
cmc
xlat
xchg
ficomp
outs
jnp
fidivr
cld
fcom
add
xor
xor
lahf
sbb
push
das
mov
aam
cmc
(bad)
fstp
mov
mov
mov
and
(bad)
fmulp
push
and
call
and
in
test
retf
call
loope
pop
repz
dec
push
es
cmps
out
xchg
lahf
lahf
mov
arpl
pop
sahf
cli
push
adc
dec
cld
aam
ror
inc
push
out
mov
cmp
nop
cmps
sar
inc
and
and
push
sar
jne
sti
fucom
stos
cld
lock
inc
ins
test
rep
pop
xlat
std
test
fbstp
mov
outs
xchg
xor
mov
fwait
mov
or
xor
jmp
sbb
dec
fwait
out
and
push
sbb
dec
mov
jecxz
xchg
add
and
(bad)
xchg
sbb
dec
scas
(bad)
cmp
mov
in
clc
mov
push
sub
aam
xchg
aad
jnp
cld
rcr
mov
lods
or
hlt
sahf
mov
cmp
xchg
jp
clc
push
in
bound
lds
aad
push
sahf
sbb
inc
cmp
aad
outs
dec
retf
mov
ins
(bad)
xchg
ss
mov
iret
push
popa
sahf
push
out
xchg
push
mov
imul
lods
sahf
div
xlat
fldcw
in
bound
xchg
sbb
jns
cmps
jbe
ror
retf
(bad)
xchg
cli
or
sbb
mov
cmp
mov
repz
mov
cmp
mul
mov
mov
outs
call
(bad)
(bad)
fdiv
cld
ins
enter
iret
and
push
fs
mov
xchg
pop
push
scas
je
and
cmp
dec
jecxz
dec
je
jnp
push
push
push
fidiv
icebp
int
imul
retf
movs
xchg
inc
(bad)
(bad)
cmc
jmp
cmps
mov
sbb
push
sbb
jl
movs
adc
test
sbb
(bad)
cmp
int3
hlt
call
dec
imul
sti
shr
jl
repz
sahf
jge
les
outs
leave
(bad)
jg
ins
pop
retf
mul
cmp
dec
cwde
jg
jge
dec
mov
push
aam
or
sti
adc
dec
adc
jecxz
test
push
cmp
jecxz
clc
dec
arpl
lock
or
mov
sub
out
mov
inc
(bad)
and
xchg
mov
jns
pop
pop
cmp
pushf
in
mov
pop
lahf
shl
and
and
mov
dec
lea
addr16
(bad)
loope
mov
mov
inc
cmp
and
mov
ds
fnstcw
xor
stos
add
aam
xlat
push
outs
xchg
sar
pop
xor
rcr
cmc
jp
mov
lods
pop
shl
sbb
aam
std
pop
inc
cdq
cmp
jmp
mov
dec
cdq
or
xchg
mov
iret
or
in
xor
aas
test
cmp
dec
pop
pushf
add
push
hlt
ficomp
jmp
cmp
popf
scas
dec
rcr
popf
push
pop
out
popf
or
in
mov
mov
mov
cmp
adc
mov
xchg
out
adc
xchg
out
xchg
push
add
out
out
xchg
std
out
cmp
addr16
scas
jno
pop
jae
cmp
add
mov
(bad)
xchg
and
dec
or
in
loopne
mov
stos
out
ins
in
sbb
out
stos
pop
in
test
xchg
int
pop
mov
ds
nop
mov
stos
idiv
imul
pop
adc
shl
jb
pop
cmps
push
jecxz
ficom
mov
stos
adc
pop
cmp
hlt
jmp
imul
adc
jbe
pop
mov
add
iret
push
lahf
mov
inc
jl
and
xchg
pop
jle
sahf
or
push
arpl
dec
xlat
call
cwde
cmp
retf
out
or
push
div
dec
mov
and
fnstcw
cmc
jne
mov
dec
dec
pop
sti
mov
(bad)
clc
imul
shl
int
loop
cmp
sub
ret
pop
dec
push
xlat
push
inc
adc
repnz
cmps
es
sti
pushf
loopne
psubq
push
imul
sub
cmc
ins
jecxz
in
xor
mov
mov
sub
jno
sbb
fwait
inc
shl
adc
and
aas
dec
sub
push
jnp
jmp
or
mov
stc
dec
mov
xchg
loopne
push
push
add
cli
sbb
mov
mov
sub
jnp
or
mov
xor
shl
push
cmc
inc
jns
(bad)
mov
jnp
shl
cmps
pop
push
and
mov
cwde
aaa
test
mov
add
sub
sbb
imul
arpl
cmp
icebp
in
lock
cwde
int3
mov
pop
call
sahf
cmp
mov
je
sub
jmp
sub
(bad)
outs
test
icebp
in
mov
mov
dec
das
mov
pop
push
jge
lods
in
push
push
movs
loope
pop
mov
dec
scas
ret
add
or
outs
in
sub
(bad)
jmp
fwait
xchg
dec
test
pop
test
adc
push
out
arpl
(bad)
cld
repz
fimul
cmc
ins
aas
iret
imul
rcr
out
pushf
scas
or
outs
or
adc
out
stc
and
xor
cmp
out
ja
leave
sub
fdiv
pop
xchg
inc
jecxz
mov
push
fild
cli
lds
mov
jne
and
imul
mov
cmc
and
psubw
out
jge
icebp
sbb
mov
mov
repz
jl
jle
mov
pop
iret
out
xchg
pusha
cmp
adc
mov
xor
call
nop
xchg
inc
xor
cmp
stc
rcl
adc
add
jl
dec
lea
adc
and
adc
repz
mov
mov
int3
sti
hlt
push
fcmovbe
push
leave
push
fistp
(bad)
sub
stos
sbb
cmp
jo
adc
push
mov
jns
in
ds
cmp
cmp
int
mov
ret
jmp
(bad)
mov
iret
mov
jne
cmp
xor
or
pop
pop
mov
jmp
adc
out
sub
sub
mov
movs
imul
je
js
or
jmp
out
enter
sub
icebp
and
push
out
inc
sub
push
and
xchg
sti
cmp
sbb
sbb
xchg
call
dec
jmp
pop
mov
dec
xchg
fldl2t
add
(bad)
ror
mov
jnp
mov
mov
mov
enter
fadd
hlt
mov
pop
scas
ret
sbb
jns
mov
xchg
inc
inc
or
(bad)
lahf
and
fdivr
mov
hlt
pop
(bad)
pop
dec
dec
repnz
sub
sar
je
jne
mov
stos
pop
sub
icebp
xlat
sar
lods
fwait
das
inc
mov
arpl
push
xor
xchg
ror
pop
int3
add
(bad)
fdiv
arpl
inc
iret
outs
ins
ret
pop
iret
dec
jp
jmp
out
sbb
addr16
ret
int
in
inc
and
movs
lods
and
sub
adc
mov
push
jecxz
sub
xor
scas
cmps
aam
or
(bad)
repz
sbb
xchg
lods
lea
sbb
jg
repz
dec
popa
jmp
aas
sti
enter
nop
xchg
cwde
jl
je
fsub
jnp
rol
test
dec
mov
js
(bad)
lods
pop
jp
mov
test
repnz
mov
xor
mov
push
iret
(bad)
outs
test
mov
mov
icebp
sbb
or
push
loop
mov
cmp
add
xchg
add
mov
jae
in
sbb
sar
cwde
mov
nop
cmc
xor
sbb
shl
mov
sbb
and
std
bound
pop
cmp
in
imul
(bad)
sbb
xor
xchg
adc
outs
push
mov
push
or
or
aaa
test
pop
stc
mov
shl
pushf
(bad)
into
gs
dec
pop
xor
push
jge
in
adc
js
dec
movs
clc
enter
sub
call
call
lods
outs
add
jecxz
adc
push
(bad)
fs
jmp
jg
int3
aad
std
push
push
cmp
retf
jmp
movs
cmps
je
mov
xor
leave
in
jg
(bad)
jb
fwait
ins
imul
loope
fwait
(bad)
fild
out
lds
xor
fwait
xchg
dec
inc
dec
inc
cmp
cld
add
loope
or
lahf
popf
mov
push
in
mov
and
stc
arpl
xor
xor
push
jmp
in
dec
cdq
popf
imul
loop
aaa
idiv
cmc
ret
cmp
jmp
popa
repnz
dec
iret
or
push
mov
ret
xchg
xchg
in
dec
loopne
cmps
iret
imul
jmp
pop
hlt
xchg
shl
jbe
inc
sahf
les
(bad)
xchg
xchg
add
push
test
or
aaa
cmps
daa
dec
jle
outs
sahf
scas
mov
jbe
inc
mov
mov
pop
mov
mov
mov
xor
sub
pop
inc
mov
test
dec
jl
xor
add
movs
inc
scas
sbb
lods
test
push
icebp
neg
jg
adc
jno
stos
scas
leave
fwait
dec
sar
leave
cmps
dec
pop
add
jb
dec
aas
(bad)
std
imul
sbb
inc
pusha
sbb
or
jae
mov
pop
xor
jnp
icebp
pop
ins
pushf
ins
inc
and
cs
cwde
jns
jnp
pop
enter
pop
(bad)
push
cmps
dec
or
jnp
inc
fnstsw
addr16
sahf
in
add
jmp
fcmovnbe
stos
mov
call
cmps
cmp
rol
aad
adc
adc
mov
jmp
fs
lock
repnz
push
scas
push
dec
gs
pop
fcom
ss
push
(bad)
repnz
(bad)
pusha
mov
leave
pop
mov
push
rcr
aam
fst
jp
lods
imul
mov
jae
xchg
pop
jl
sub
dec
dec
pop
mov
js
adc
xor
xchg
pop
push
pop
enter
cld
dec
and
loop
cli
xor
jmp
das
es
idiv
jl
adc
push
and
inc
test
hlt
popa
xchg
mov
pop
xor
mov
test
sub
int3
js
sbb
std
add
iret
cmp
fdiv
cld
cld
push
fcmovb
xlat
(bad)
mov
in
jnp
lods
add
loop
outs
pop
push
shl
fwait
fwait
sahf
mov
jp
xor
pop
sbb
mov
xchg
scas
and
aad
mov
jmp
push
fild
shr
jns
jmp
aad
xor
sub
cdq
jae
loopne
cmp
(bad)
lds
std
cmps
aad
xor
test
aad
mov
push
cs
mul
das
dec
fwait
int3
out
iret
fild
mov
jmp
daa
mov
cmp
cmp
pop
jl
jb
mov
in
mov
xor
pop
stc
jmp
mov
xchg
mov
mov
lods
rcr
pushf
fwait
test
retf
dec
gs
pop
cli
nop
sbb
jns
and
pusha
ds
xor
imul
mov
adc
inc
mov
mov
(bad)
shl
lods
sahf
sub
int
fidiv
and
lods
neg
or
sahf
xchg
jmp
addr16
xchg
push
dec
test
pop
mov
xchg
stos
scas
inc
iret
lods
mov
xchg
lea
cmps
das
mov
nop
jge
pop
retf
jg
cs
and
cmps
fucomp
jle
cmp
icebp
pop
in
adc
inc
loopne
push
fcomip
rol
push
out
or
mov
mov
and
mov
aam
cmps
call
(bad)
cmp
aas
adc
stc
in
leave
ficomp
icebp
push
out
dec
jmp
inc
jnp
fcmove
cmps
xchg
jge
fs
ret
test
retf
out
fdivr
mov
in
push
aad
popa
std
mov
mov
dec
push
popa
push
out
test
push
inc
pop
xchg
sbb
packuswb
rcr
jl
pop
(bad)
xchg
movs
arpl
adc
test
retf
adc
icebp
popa
dec
jmp
adc
mov
or
lea
sbb
pop
dec
and
loop
jmp
fsubr
js
add
push
pop
sub
sbb
mov
into
mov
push
jl
daa
mov
pop
pop
xor
add
mov
mov
fs
in
sbb
push
aaa
cmp
or
nop
aas
stc
shl
sub
(bad)
in
dec
(bad)
mov
into
popf
xchg
int3
sbb
mov
push
popa
dec
jmp
mov
cdq
push
xor
mov
cs
movs
xchg
je
aad
pop
cmp
into
mov
adc
imul
jl
ret
leave
mov
ds
iret
stos
xchg
fcom
fcomp
fild
xchg
adc
adc
ins
aam
push
mov
test
(bad)
ins
neg
(bad)
xor
and
adc
aas
test
jns
lahf
out
int3
mov
ret
push
mov
popf
in
dec
or
fwait
mov
sbb
sbb
aaa
push
call
adc
pop
sub
push
fisubr
ins
mov
es
dec
mov
mov
push
arpl
jge
mov
mov
dec
or
mov
enter
mov
iret
aad
je
ror
sub
dec
mov
mov
cmc
in
dec
shr
jmp
rol
clc
fnstsw
inc
stos
scas
jecxz
iret
push
dec
and
cmps
cmp
xlat
push
adc
ja
mov
nop
mov
popf
sub
test
int
(bad)
mov
iret
sbb
sbb
lock
jo
iret
xor
retf
popa
lds
minps
or
cli
sbb
(bad)
xor
push
retf
pushf
push
xor
jmp
fsqrt
push
pop
and
fst
pop
in
pmullw
test
dec
xlat
out
jno
jle
sbb
push
(bad)
in
xchg
ss
(bad)
lods
gs
mov
add
lea
(bad)
push
sbb
cpuid
inc
mov
cs
fbstp
out
jmp
push
push
xor
push
mov
inc
xchg
sahf
or
xchg
int
xchg
mov
js
gs
dec
sar
je
js
mov
push
adc
adc
imul
pop
adc
dec
div
test
neg
(bad)
mov
mov
cmp
or
ror
xor
ret
inc
test
or
into
cmps
xor
sub
lds
xor
loop
out
outs
add
mov
push
adc
(bad)
push
pop
jecxz
fs
cmp
mov
xor
adc
jmp
xchg
pushf
leave
ret
add
pop
pop
pop
sub
xchg
(bad)
pop
mov
mov
xchg
loop
pop
cmp
mov
es
addr16
adc
repnz
dec
or
in
mov
je
icebp
aaa
dec
mov
out
jg
adc
mov
dec
cld
cld
pop
mov
std
push
jb
sub
retf
shl
in
mov
fld
das
imul
pop
ds
jg
data16
cs
icebp
shr
lock
inc
adc
mov
pop
fs
mov
div
cmp
and
or
jl
jle
pop
stos
pop
sar
inc
or
pop
popf
loope
sbb
and
inc
je
xchg
(bad)
sbb
adc
in
int
scas
lods
nop
cmp
xor
rcl
xor
or
shr
inc
mov
xchg
and
pop
sub
dec
adc
test
enter
or
push
pop
fild
mov
sahf
fcomp
jnp
iret
pop
push
push
mov
outs
pop
inc
sar
sub
out
jne
push
iret
sub
stos
mov
aam
call
stc
sub
(bad)
mov
push
lds
scas
jecxz
inc
aas
push
add
test
test
int3
cmp
sub
cmp
enter
fadd
aaa
stos
cli
rol
mov
div
clc
das
popf
cmp
ds
dec
pop
cmps
adc
dec
adc
mov
mov
stos
cmps
fsub
test
xchg
test
or
nop
jle
ins
lods
mov
push
sub
mov
mov
jle
jle
inc
and
int
push
jle
popa
push
popa
fs
js
push
gs
popa
cs
xchg
pop
cdq
adc
push
out
neg
add
shr
fimul
sub
push
inc
les
in
cmp
xchg
jae
pop
mov
xor
mov
icebp
aaa
mov
out
dec
dec
or
cdq
xchg
cmp
dec
movs
call
(bad)
call
pop
pop
mov
hlt
ret
clc
add
add
loopne
jne
and
(bad)
xchg
(bad)
cli
and
repnz
sub
xchg
gs
inc
jge
dec
pop
outs
lods
jo
in
rcr
loope
pop
sub
les
jns
xchg
mov
xor
daa
out
inc
pop
mov
and
mov
cmp
pop
sub
(bad)
cs
(bad)
arpl
jecxz
jmp
into
push
ror
push
pusha
mov
not
jp
mov
push
dec
xchg
add
fcmovne
xchg
faddp
mov
icebp
ins
add
aaa
int
or
in
add
adc
mov
pusha
xchg
or
adc
(bad)
outs
pop
int3
xor
repnz
xchg
in
cmps
sbb
adc
hlt
dec
mov
retf
mov
mov
test
int
sub
adc
(bad)
test
out
mov
pop
jbe
sbb
sbb
mov
gs
adc
hlt
mov
(bad)
cmp
(bad)
xlat
pushf
inc
xchg
dec
(bad)
gs
xchg
sbb
addr16
dec
push
xchg
dec
inc
mov
inc
scas
jle
cmpxchg
xchg
jmp
pop
cmp
(bad)
cld
xor
pop
jno
ss
test
mov
jne
mov
jne
adc
sti
and
jo
cmps
mov
mov
cli
adc
dec
pushf
in
or
call
ror
je
sbb
sub
push
popa
xchg
cs
cmps
or
push
mov
xchg
shr
push
push
xor
pop
aas
rcl
mov
xor
add
in
ins
adc
push
sbb
jo
test
fadd
mov
les
stc
add
call
jmp
int
xlat
ja
cmp
iret
jnp
jg
call
mov
push
cdq
mov
loope
mov
addr16
rcr
int3
cmps
push
mov
jae
stos
sub
jb
pusha
xchg
mov
and
cmp
retf
xchg
aaa
jge
scas
enter
dec
cli
repnz
cwde
sbb
pop
cmp
std
div
mov
pop
and
dec
pop
adc
mov
inc
cmp
out
les
push
lock
mov
sub
sbb
ds
and
outs
mov
add
daa
lahf
sbb
lods
jg
aas
pminub
das
cli
and
sbb
inc
pop
dec
cmp
xchg
js
aaa
mov
jl
pop
iret
pop
or
or
jns
pop
sub
inc
jp
mov
xor
push
test
and
mov
jne
loopne
ret
xor
out
out
stos
lods
cmp
xlat
push
dec
lea
imul
fcomip
ins
mov
mov
pop
sbb
(bad)
fcomp
mov
and
retf
je
pop
loopne
test
mov
retf
sahf
xchg
les
xor
mov
out
call
cs
push
lahf
xchg
fisttp
cmp
ret
je
stc
adc
out
xor
sahf
test
mov
(bad)
cdq
mov
aam
sbb
push
das
jbe
mov
push
in
(bad)
dec
addr16
pop
and
add
stc
mov
pop
mov
and
push
stos
inc
dec
ror
cmp
mov
arpl
mov
hlt
into
(bad)
mov
mov
inc
retf
xor
add
pop
pop
or
rcl
cmps
sbb
outs
lahf
adc
test
jnp
cs
sub
jb
mov
leave
pusha
cs
outs
push
push
cmc
sub
adc
jnp
cmp
adc
inc
shl
and
lods
movs
fidiv
sbb
pop
sbb
ds
pop
test
shr
in
jmp
shl
test
pusha
mov
out
pop
gs
pop
test
movs
xchg
xchg
cmp
idiv
jmp
adc
mov
mov
sub
mov
leave
scas
bound
jecxz
sti
in
ror
push
imul
cld
push
dec
sub
es
(bad)
iret
jae
int3
ds
mov
or
shl
pop
jbe
mov
and
lods
clc
cmc
lea
adc
pop
retf
(bad)
mov
or
xchg
or
jb
lods
dec
xor
mov
aad
inc
jmp
scas
mov
and
mov
lods
mov
mov
fdivr
pop
inc
shl
inc
mov
jecxz
or
fsub
sbb
ja
pushf
mov
xchg
sub
cmc
sub
gs
or
and
in
jae
fidiv
outs
repz
pop
sar
repz
mov
test
gs
jge
jg
push
neg
data16
xlat
sub
mov
xchg
outs
or
cmps
add
mov
jnp
jmp
or
mov
pop
mov
mov
adc
or
sbb
xlat
sbb
sbb
sub
es
jg
(bad)
fldenv
mov
jle
mov
mov
loop
pop
sbb
int3
cmps
(bad)
push
ins
test
or
mov
mov
jmp
stos
fadd
lods
or
ror
sub
cmp
retf
adc
adc
imul
ror
aaa
pop
and
add
das
addr16
adc
pop
aam
outs
ins
push
sti
jle
dec
call
push
aas
loopne
push
jb
std
mov
jg
neg
xchg
popa
stos
(bad)
xchg
jmp
xor
lock
and
mov
jae
adc
adc
iret
adc
in
xor
repz
and
pusha
sbb
sbb
out
mov
stc
push
and
cmp
sbb
push
test
imul
in
sti
stc
outs
push
mov
push
xor
dec
mov
sbb
fadd
imul
lds
dec
mov
sub
pop
pop
test
sub
inc
ds
bound
popa
fst
aam
sbb
jnp
push
and
je
jne
call
sbb
stos
aas
add
xchg
scas
mov
jbe
int
in
mov
iret
das
pop
pop
aad
hlt
cmp
adc
or
repz
mov
adc
adc
sub
cmp
inc
sub
or
pop
jns
enter
lods
pop
inc
retf
loopne
inc
jp
sbb
sbb
mov
sbb
xchg
jmp
xor
jne
movs
mov
push
cwde
outs
not
and
icebp
movs
cs
and
in
add
or
jecxz
iret
adc
push
fild
lods
js
shr
jl
repnz
mov
in
xor
pop
fpatan
out
adc
sub
mov
xor
push
sub
xchg
cmp
jecxz
xor
mov
(bad)
(bad)
out
mov
push
mov
(bad)
sub
lods
call
das
pop
mov
loope
mov
dec
sbb
pop
mov
fcom
aas
addr16
(bad)
(bad)
out
aam
push
pop
ja
inc
std
int3
sbb
sub
movs
mov
cdq
mov
clc
mov
jecxz
pop
pop
mov
inc
ret
pop
setae
jmp
mov
xchg
nop
test
fwait
stos
fwait
mov
iret
inc
sbb
pop
and
(bad)
and
xchg
adc
(bad)
out
into
pop
cwde
pop
enter
les
retf
int3
jecxz
(bad)
xchg
lahf
jnp
dec
arpl
xor
xor
inc
aam
retf
aad
mov
xchg
movs
dec
sub
icebp
xchg
jbe
xchg
loopne
push
jmp
or
xor
xchg
sbb
sbb
hlt
pop
retf
sbb
jg
lods
xor
pop
ins
mov
jne
mov
jo
ficom
lds
je
adc
mov
adc
and
or
inc
jmp
mov
dec
pop
mov
loope
clc
lock
jae
xchg
dec
pop
xor
ds
daa
out
dec
je
stc
pop
daa
data16
pop
xchg
neg
ins
jg
js
les
mov
push
sub
in
out
mov
mov
xor
stos
into
xor
out
adc
inc
fld
dec
les
push
test
xor
push
push
mov
dec
inc
call
sahf
jmp
pop
retf
add
arpl
or
or
movs
out
sub
sub
push
mov
(bad)
jbe
and
idiv
ins
sbb
imul
add
aas
lods
cmc
iret
mov
mov
jle
mov
sti
xor
fcmovnb
add
adc
mov
xor
loopne
outs
test
jbe
ja
mov
ffree
iret
(bad)
pop
cld
imul
cld
mov
adc
and
ja
cmovs
jae
outs
nop
or
mov
cmp
sbb
sbb
fcom
jae
popf
cmp
in
cld
push
(bad)
(bad)
push
mov
add
dec
iret
rcr
(bad)
in
sub
repnz
adc
movs
push
fdiv
loopne
imul
les
xchg
and
mov
sub
icebp
inc
data16
jl
stc
push
mov
call
stos
dec
imul
out
dec
xor
out
push
sbb
or
cmp
jmp
aam
out
sar
or
sbb
mov
shl
jge
lea
shl
mov
push
stc
push
fisubr
jmp
pop
(bad)
cli
je
inc
dec
sub
movs
fimul
pushf
jae
dec
pushf
sbb
repz
(bad)
cwde
mov
pop
int
mov
cmp
mov
ret
xchg
call
adc
and
adc
iret
out
sub
loope
(bad)
cmp
push
xor
leave
cmc
adc
mov
int3
sar
aad
cmc
cmc
and
jp
cmp
mov
ret
inc
adc
adc
retf
push
xchg
mov
mov
sahf
lds
bound
add
cmp
push
lea
push
dec
scas
lahf
div
hlt
and
das
cmp
dec
sbb
popf
sbb
or
mov
(bad)
imul
data16
in
sub
retf
mov
xlat
dec
je
fist
je
and
xor
ror
imul
push
xor
jmp
xchg
push
pusha
(bad)
mov
(bad)
adc
dec
mov
int3
xor
push
lds
ins
pop
outs
inc
mov
stos
xchg
test
xchg
enter
daa
inc
pop
pop
mov
jns
inc
cmp
popf
sti
fild
lods
xchg
in
repnz
mov
mov
xor
stos
push
repz
jno
push
cld
bound
movs
out
cld
retf
mov
and
in
add
xchg
push
pop
cmp
xacquire
leave
pop
ja
ror
popf
cmp
sbb
dec
pop
mov
mov
lods
cwde
(bad)
leave
(bad)
call
sbb
arpl
dec
icebp
fsubr
jmp
mov
cdq
daa
add
bnd
ret
imul
pop
into
jne
push
push
inc
sub
inc
mov
addr16
pop
inc
mov
xor
or
stos
cmp
cwde
cli
push
xor
and
(bad)
sti
jmp
ss
mov
retf
xor
lds
jecxz
mov
stos
retf
imul
jmp
shl
dec
inc
int3
leave
cmp
xor
sbb
ficomp
fldenv
icebp
mov
fsubr
outs
test
std
cmps
dec
ins
ret
movs
jp
push
jmp
repnz
fstp
ja
jbe
ret
cwde
dec
fdivr
jmp
mov
sub
movs
push
xor
mov
sub
cli
jo
push
lods
call
mov
popf
std
xor
je
fbld
pop
inc
mov
repz
sbb
shl
bound
cmp
das
pop
add
imul
test
in
cdq
adc
aad
cmps
jl
and
mov
push
sar
leave
jmp
and
add
mov
sti
mov
stc
add
jmp
dec
mov
stc
or
and
rcl
or
aam
pop
or
dec
shr
dec
int3
add
xchg
push
call
mov
xor
mov
jnp
nop
ss
push
cmp
jge
aas
repnz
in
cmp
iret
pop
cmp
iret
add
push
sub
in
inc
adc
pushf
ins
xor
push
imul
push
sbb
push
or
sbb
cdq
sbb
xchg
mov
mov
fcmovne
push
popf
xor
dec
jge
inc
dec
pop
xor
or
scas
inc
rcr
adc
or
daa
jle
jns
mov
fwait
jnp
fsubrp
idiv
xor
addr16
icebp
push
in
pop
in
call
psrlq
fidiv
dec
test
call
mov
adc
xchg
xchg
xchg
mov
retf
lods
jecxz
xchg
test
mov
xlat
pop
or
inc
mov
sub
lea
fsubr
sub
mov
(bad)
scas
add
imul
xor
callw
push
mov
enter
(bad)
clc
mov
loop
popf
or
mov
jne
stos
pop
lods
dec
and
xchg
push
(bad)
aaa
pop
jo
jo
stos
lds
push
mov
or
push
xor
movs
imul
hlt
adc
ins
jl
sbb
jo
pop
fisub
add
or
cmp
cmp
ret
jmp
out
popa
cmp
cdq
sbb
push
fs
add
repnz
xor
pop
test
dec
fmul
js
jmp
test
pushf
lahf
clc
jbe
inc
mov
(bad)
(bad)
daa
jmp
pop
retf
push
xor
sti
mov
mov
ror
inc
inc
push
pop
adc
cli
pop
or
mov
aad
aaa
mov
iret
jge
xor
hlt
pause
mov
iret
cmp
mov
ja
jne
popa
call
sbb
loop
jo
jle
or
mov
sbb
mov
jno
popf
ja
cmp
ins
cli
jo
sub
ja
push
pop
adc
sbb
dec
cld
mov
dec
xlat
leave
movs
push
pop
addr16
repnz
sbb
aas
xchg
idiv
aad
pop
ficomp
in
mov
pop
ffree
movd
inc
and
imul
push
push
stos
outs
mov
sub
dec
mov
or
aam
cmc
xor
call
fwait
repnz
inc
cmp
xchg
cmps
push
in
jl
fisttp
inc
movs
cli
pushf
add
adc
dec
xchg
jo
xor
cdq
stc
(bad)
and
push
test
mov
add
out
mov
aam
(bad)
pop
test
call
push
xor
std
push
jno
fisub
fsubr
mov
ret
sub
test
dec
mov
movs
dec
inc
pop
ds
in
dec
or
clc
cmp
push
xor
lods
icebp
icebp
push
dec
pop
mov
mov
ds
mov
sub
mov
hlt
adc
out
jne
dec
mov
dec
jp
ret
fld
in
(bad)
lods
dec
enter
(bad)
ret
imul
and
call
fwait
mov
jecxz
xchg
sar
mov
lahf
fdiv
mov
les
int
mov
sahf
push
outs
sbb
jae
xor
lds
sahf
out
iret
and
neg
ins
cwde
movs
nop
and
test
pop
cmps
push
jb
test
cdq
inc
das
retf
je
aaa
cmp
jmp
repnz
pop
(bad)
sub
cmps
cwde
add
(bad)
adc
push
lea
icebp
pop
hlt
jle
in
xlat
mov
jp
scas
add
push
and
les
mov
mov
pop
int3
lods
mov
cdq
cmps
push
movs
cmp
inc
fsubr
sub
in
xchg
jo
xchg
ret
loop
push
into
push
pop
jg
lds
loop
mov
and
dec
mov
and
and
push
xchg
pop
cmp
int
ins
mov
data16
push
adc
test
inc
push
fmul
int3
rol
inc
lods
out
shr
scas
xchg
push
test
inc
mov
inc
bound
jne
pop
pop
lods
inc
test
add
adc
out
jmp
dec
pop
sbb
and
dec
std
jns
cmp
call
lods
sbb
call
push
lahf
cmp
scas
jo
mov
push
aam
adc
cmp
sub
shl
sbb
js
imul
mov
popa
out
jne
or
mov
push
inc
aas
sub
clc
jp
mov
call
mov
push
fwait
add
jmp
(bad)
js
imul
mov
lea
xor
iret
lods
outs
icebp
fstp
pop
cmps
jmp
icebp
das
fist
sub
jge
scas
cmp
mov
call
data16
xchg
jns
cmp
int3
sti
xchg
lahf
cwde
and
mov
les
(bad)
push
mov
xchg
in
jp
push
or
out
xchg
or
mov
jge
loop
dec
pop
push
push
sub
mov
mov
out
loop
cli
loop
mov
mov
icebp
jnp
xor
inc
or
xor
push
sar
rcl
fcmovbe
clc
mov
and
xor
test
xor
out
sbb
jnp
fs
inc
mov
cmc
mov
(bad)
cvtdq2ps
cmp
sbb
retf
repz
jne
out
xchg
pop
sbb
packuswb
jl
fstp
pop
repz
(bad)
loopne
cdq
(bad)
push
jmp
test
sbb
cdq
movs
cmp
xor
cdq
mov
xor
loope
fidivr
cli
sbb
cdq
aad
shl
sub
jne
push
in
push
enter
jmp
or
or
cmp
test
retf
pop
jne
sbb
fsub
fisttp
js
rcr
sub
or
bound
loope
in
das
retf
mov
loop
mov
pop
hlt
jns
sub
dec
cmps
pushf
mov
push
dec
jns
in
gs
retf
ss
call
sub
mov
mov
sbb
in
mov
fdiv
out
lock
dec
and
sub
retf
je
xor
into
xor
stos
push
repz
cmp
adc
retf
icebp
adc
add
(bad)
jl
call
movs
enter
cmps
es
aad
mov
loop
mov
std
inc
nop
scas
rcl
xlat
pushf
jmp
or
jb
cwde
push
fwait
loopne
fstp
movs
(bad)
in
lds
xor
enter
push
or
mov
call
adc
dec
(bad)
scas
and
std
sbb
(bad)
sbb
xor
test
jne
ror
das
mov
cmps
ds
adc
push
push
jns
xchg
loopne
daa
xor
cmps
iret
aaa
ds
xchg
and
add
or
mov
inc
stos
loope
push
je
lods
jnp
inc
sahf
call
mov
loop
or
clc
(bad)
stc
dec
jne
gs
ins
repz
jmp
pop
add
mov
loopne
cmp
or
mov
inc
push
push
push
xor
add
dec
sub
mov
into
(bad)
adc
lods
inc
xor
mov
inc
adc
mov
in
pop
ret
(bad)
mov
sahf
into
(bad)
push
mov
and
ds
xor
fidiv
daa
or
push
fisttp
pop
or
into
mov
jmp
mov
mov
pop
push
outs
push
dec
out
js
xor
xchg
aaa
jge
mov
lods
mov
es
daa
add
dec
lds
xor
push
daa
sub
shr
js
jp
in
mov
data16
inc
mov
(bad)
cmp
xor
shl
jmp
(bad)
outs
movs
push
jge
into
mov
jns
in
dec
retf
lods
aas
mov
cmps
cmp
test
xchg
movs
and
mov
pop
pop
inc
mov
pushf
popa
ret
cmc
mov
pop
es
mov
(bad)
jmp
cmp
dec
mov
inc
push
or
(bad)
pusha
pop
into
sti
add
(bad)
neg
cdq
adc
rcr
xor
push
out
mov
push
jp
xchg
dec
fnstcw
lahf
jne
mov
jge
lods
mov
pop
retf
ja
test
adc
das
mov
mov
and
xlat
call
call
cmp
in
sub
pop
sbb
push
dec
sub
xor
fdivr
jns
xlat
dec
xchg
movs
fs
out
shl
fisub
cmp
cmps
mov
es
xor
frstor
outs
sbb
repnz
push
push
shl
enter
sar
outs
adc
inc
(bad)
iret
(bad)
(bad)
packuswb
jns
jae
mov
(bad)
xchg
adc
adc
gs
sbb
and
pop
mov
push
or
shl
xor
test
test
repz
push
mov
std
jne
mov
sti
popa
shr
les
ret
adc
cli
test
out
adc
jle
and
push
sbb
xchg
daa
aad
les
mov
and
push
aas
stc
mov
sbb
push
scas
mov
ja
adc
cwde
dec
mov
and
cmps
inc
scas
idiv
xchg
cli
jno
push
and
gs
lds
mov
enter
or
in
mov
repz
sbb
lods
ins
pusha
data16
sub
xchg
mov
sbb
jecxz
cmp
mov
push
dec
ret
mov
inc
and
test
dec
loopne
add
inc
cmps
inc
xchg
(bad)
mov
(bad)
mov
fst
push
pop
pushf
jmp
ss
mov
add
xor
xchg
rcl
adc
loop
inc
test
loope
cdq
adc
pop
lods
pop
jnp
sbb
cmp
xchg
adc
loop
dec
push
cld
call
mov
jnp
movs
(bad)
dec
adc
cmp
loope
mov
mov
not
adc
jno
cmc
cmp
xchg
push
add
sbb
mov
mov
scas
push
rcl
sub
push
ficomp
(bad)
loopne
cmp
les
dec
add
imul
mov
push
cmp
mov
ds
or
pop
stos
into
call
js
jl
ficomp
call
add
push
push
mov
and
inc
pop
gs
cmp
cmp
(bad)
lock
fcomi
mov
sar
shr
pop
sahf
sbb
xchg
std
data16
call
inc
xor
addr16
aas
iret
push
jecxz
dec
sub
xchg
push
ins
repnz
mov
add
imul
and
cmp
add
shl
xchg
inc
jp
fsubrp
retf
ins
cmp
jbe
cmp
cld
mov
xor
mov
shl
stos
arpl
lahf
dec
push
mov
aam
push
add
sbb
in
jmp
dec
jmp
arpl
ins
sbb
jne
jne
loopne
jae
jae
jb
int
cdq
les
adc
mov
enter
xor
and
cmp
mov
jg
mov
mov
in
sub
repnz
(bad)
fmul
lea
cli
std
int
in
aaa
sbb
sub
cmp
mov
jae
pop
enter
and
inc
leave
xchg
fcom
mov
pop
adc
enter
je
jae
jno
mov
add
mov
in
dec
clc
sar
mov
loope
pop
mov
push
push
add
pop
push
jle
pop
dec
sbb
sbb
fisttp
pop
jb
shl
xchg
daa
mov
mov
cld
mov
adc
cmps
loope
sub
or
mov
xchg
add
movs
jle
ret
push
push
cmc
lds
(bad)
das
adc
mov
fwait
std
jg
aas
sbb
and
pop
xchg
cmc
call
jo
lock
pop
xor
jp
jp
outs
test
push
iret
add
push
push
mov
mov
dec
push
jo
inc
inc
es
pop
imul
inc
out
sar
push
loop
push
inc
cld
push
fsubr
fs
add
iret
(bad)
jae
and
xchg
enter
mov
pop
push
push
sbb
je
cmp
sbb
jbe
bound
or
mov
sub
int3
cmp
movs
test
gs
stos
mov
push
loope
aad
xor
fistp
stc
cmp
push
and
lods
jae
push
push
test
sub
imul
cmp
scas
cmp
and
cs
rep
fadd
pop
(bad)
cmp
or
ret
mov
mov
mov
adc
xchg
imul
call
scas
aaa
dec
inc
hlt
mov
jg
sub
and
mov
mov
imul
push
xlat
es
aaa
dec
es
push
int3
test
and
test
add
scas
push
test
sti
mov
fisub
fist
lea
adc
jmp
push
dec
repz
pop
(bad)
movs
and
or
icebp
mov
cdq
push
lahf
(bad)
mov
je
add
jae
fldcw
movs
shr
scas
cmps
ins
mov
mov
(bad)
xor
fld
xor
test
int3
dec
mov
mov
or
loopne
in
clc
push
fidiv
cmp
fdivr
inc
mov
inc
xchg
icebp
mov
adc
dec
ss
inc
(bad)
cmc
dec
xor
cmp
test
pop
adc
out
int3
cs
mov
mov
daa
push
scas
jmp
mov
out
pop
add
mov
clc
push
push
in
push
mov
fsubr
cli
sbb
pop
jl
scas
sbb
dec
sahf
iret
inc
test
adc
mov
iret
push
pop
into
cli
cmp
inc
shld
mov
sub
jl
jno
lds
pop
push
or
xchg
daa
and
out
icebp
mov
test
data16
and
(bad)
daa
mov
and
xchg
out
adc
out
dec
js
jnp
xchg
mov
bound
sti
add
imul
adc
cmp
jo
or
popf
sbb
jns
ret
mov
jo
and
daa
push
mov
push
push
xchg
xchg
push
inc
jbe
test
adc
mov
pop
frstor
sbb
jle
push
adc
aaa
leave
(bad)
push
mov
dec
ss
cmp
pop
mov
fiadd
cmps
fisubr
xor
and
push
jg
mov
ja
test
jbe
jg
pop
mov
mov
jbe
rcl
dec
push
push
fs
cld
mov
test
cmp
xchg
push
movaps
imul
sub
xor
test
aaa
xchg
jmp
adc
mov
clc
scas
dec
ficom
or
out
xchg
in
loop
out
sub
ds
cmps
mov
jbe
sub
loope
sbb
jae
retf
(bad)
imul
add
sti
inc
call
mov
dec
retf
ds
lahf
pop
nop
pop
fistp
retf
jns
pop
(bad)
clc
cmp
int
ins
and
movs
sbb
fisubr
call
and
outs
sub
ja
das
xchg
clc
add
mov
loop
pop
and
add
into
push
xor
xor
pop
ficom
ror
xchg
xchg
jle
sbb
lods
and
fist
pusha
bound
leave
fmulp
rcl
std
add
add
cmp
xchg
jns
cwde
pop
pop
ss
outs
neg
into
fst
rep
out
cmp
xlat
jge
fisub
bound
pop
retf
pop
jge
or
les
sbb
dec
mov
xor
rcl
or
and
mov
test
ds
push
dec
mov
cmps
clc
add
pop
retf
sbb
cdq
sub
das
push
mov
sbb
adc
sti
cmp
pop
mov
mov
mov
rol
cld
loopne
rcl
or
mov
(bad)
dec
popa
xchg
xor
(bad)
xlat
icebp
lahf
mov
push
rcr
mov
cmp
imul
push
or
loop
bound
jno
sbb
push
dec
stos
mov
pop
push
cmp
mov
jmp
fmul
pop
not
inc
and
push
lods
mov
mov
movs
adc
and
lea
ds
mov
inc
adc
adc
xchg
(bad)
fdivr
test
shr
xchg
arpl
and
aam
dec
jo
pop
sbb
sti
ds
mov
add
push
push
mov
xlat
mov
xchg
imul
ss
add
mov
test
fsubr
or
lds
or
pop
mov
outs
mov
cdq
lock
push
sub
xchg
ret
xadd
add
add
dec
pop
mov
int3
pop
lahf
jp
call
or
(bad)
push
mov
and
ror
push
(bad)
dec
mov
ss
sbb
jno
repz
jle
and
or
repnz
mov
inc
fld
rol
dec
test
xor
fsubr
stos
xor
pop
pop
or
add
retf
add
leave
and
mov
mov
pop
and
repz
movs
cmpxchg
in
mov
mov
or
xor
loopne
fisub
das
jmp
xchg
clc
cmps
and
cmp
push
cmp
and
push
sbb
xchg
mov
ror
jns
mov
mov
push
and
push
and
rcr
pop
(bad)
cwde
xchg
sbb
dec
pop
int
cmp
ja
(bad)
jmp
cmp
mov
in
movs
xchg
nop
mov
(bad)
jns
clc
retf
pop
xchg
aaa
jae
shl
rcr
call
das
pop
aas
scas
out
and
leave
(bad)
lock
and
pop
and
call
mov
push
sub
adc
ins
inc
dec
add
(bad)
sub
and
or
jge
scas
mov
push
dec
into
jae
sub
xchg
addr16
sub
mov
ins
loope
pop
ds
daa
ret
xlat
xchg
ficomp
inc
adc
inc
outs
sbb
push
push
jge
scas
dec
jmp
aaa
pop
and
dec
lods
or
adc
mov
push
or
scas
dec
scas
adc
mov
dec
dec
test
sub
imul
cli
dec
in
jmp
fsub
pop
add
shl
push
fisubr
ror
dec
je
aas
nop
pop
mov
cmps
sub
sbb
mov
mov
adc
mov
clc
sbb
outs
inc
das
sub
repz
(bad)
ja
fcomp
sbb
dec
aam
shr
mov
(bad)
and
das
pop
dec
ja
pop
fistp
aad
cmps
fnstcw
in
pop
push
rcl
hlt
movs
add
int3
mov
inc
(bad)
in
fs
loope
jge
into
rcr
dec
test
div
bound
mov
cmp
(bad)
push
popf
add
retf
xor
sbb
push
pop
int
enter
aam
cli
(bad)
push
jmp
push
idiv
mov
addr16
ins
mov
sbb
inc
mov
mov
adc
add
rep
xchg
stc
sti
dec
push
dec
mov
or
sub
dec
mov
mov
imul
shr
adc
mov
sbb
mov
or
and
inc
test
stc
movs
and
sub
push
sbb
sbb
sub
cwde
push
jne
sbb
push
je
in
shr
xchg
mov
mov
int
imul
lods
mov
retf
stos
mov
jecxz
jne
das
sbb
outs
out
mov
scas
jp
xchg
jbe
lods
or
and
add
cmp
and
lods
je
inc
mov
cwde
mov
push
cmps
cmps
jp
push
sub
loope
dec
lea
mov
or
xor
xchg
(bad)
retf
call
jns
adc
mov
xor
push
iret
xchg
cli
inc
sbb
mov
xchg
les
sti
imul
outs
jge
enter
sahf
bound
mov
pop
dec
shl
fwait
jl
ja
outs
cdq
add
cmp
mov
and
pop
mov
jnp
mov
pop
leave
xchg
jbe
xor
dec
(bad)
push
es
jns
jbe
(bad)
sahf
aad
fisubr
mov
sub
popa
in
stc
jns
ret
mov
jmp
data16
adc
enter
jae
xor
out
push
add
fdivr
adc
inc
lahf
adc
in
(bad)
ins
push
pop
dec
out
xor
mov
clc
dec
mov
mov
stos
xor
das
mov
pop
or
sbb
jmp
push
test
addr16
out
in
add
sbb
xchg
mov
ja
sub
jmp
push
test
pusha
pop
jecxz
and
xor
cs
or
adc
ret
add
leave
je
pop
lods
pop
inc
call
aas
repz
push
ror
sub
jno
mov
ret
retf
xchg
add
sbb
xchg
pop
mov
sub
dec
xor
stos
pushf
movs
fnstsw
(bad)
ja
scas
dec
shr
mul
popf
pop
sub
dec
jmp
call
in
sub
jnp
aas
imul
addr16
xchg
jp
lock
test
fcmovb
scas
jmp
(bad)
push
stc
sub
mov
fisttp
jae
repnz
sub
ret
scas
push
and
outs
push
mov
out
hlt
dec
outs
ret
mov
shl
(bad)
fucomp
sbb
out
pop
fimul
sub
loope
(bad)
fidiv
repnz
sahf
repnz
or
sbb
mov
test
xchg
sbb
sti
sub
xor
retf
jecxz
aad
dec
xchg
mov
movs
mov
(bad)
xchg
inc
aad
xchg
int3
int3
sbb
int3
push
pop
jmp
cdq
pop
out
(bad)
fsubr
retf
push
call
lea
outs
daa
add
xchg
into
scas
cmps
jecxz
cmps
(bad)
sub
(bad)
cmp
je
jno
stos
out
push
sti
or
push
out
pop
sub
cmp
addr16
imul
jo
xor
ret
or
vpcomq
cmp
fs
jo
push
cmps
xchg
clc
jbe
lahf
xchg
xchg
lds
xor
fcomp
or
popf
push
std
test
sbb
jle
push
fldcw
mul
cli
add
mov
mov
retf
push
stc
dec
enter
jae
out
scas
fist
nop
sub
cmp
xchg
stc
mov
in
xor
ds
jae
ja
hlt
mov
or
mov
mov
js
add
add
jle
call
ror
pop
mov
and
stos
fwait
sub
aad
or
or
add
(bad)
adc
or
inc
call
inc
mul
imul
bound
sar
mov
push
mov
and
jns
hlt
push
stos
ficom
mov
mov
jmp
mov
daa
pop
adc
daa
pop
mov
adc
fld
push
pop
jp
jecxz
repnz
adc
inc
fs
xor
mov
adc
rcr
test
push
jne
sub
xor
mov
div
fld
ret
fst
sbb
enter
mov
xor
sar
jne
adc
mov
aas
pop
test
push
sar
mov
cmp
pop
(bad)
mov
push
ins
std
idiv
fbld
dec
mov
in
jmp
adc
out
inc
jg
rcr
sub
cs
cdq
or
xchg
out
add
mov
loop
or
push
jp
cmp
lds
hlt
mov
sbb
add
push
push
je
fistp
in
push
push
(bad)
sar
ficom
mov
adc
mov
cli
arpl
xchg
adc
cmp
call
(bad)
cmps
cmp
pop
(bad)
cli
cmps
jg
xchg
push
add
retf
add
push
pop
mov
(bad)
fadd
xor
movs
psubusb
sbb
daa
bswap
std
or
push
clc
add
push
mov
mov
sbb
adc
scas
test
add
dec
xor
rcl
dec
jl
add
jp
das
js
inc
test
cmp
aad
mov
add
inc
das
adc
mov
das
or
jmp
mov
adc
add
call
mov
mov
jl
not
mov
sahf
add
ror
nop
out
test
push
jmp
or
in
mov
jl
push
sub
add
pop
push
imul
mov
jge
or
pop
mov
push
sbb
jp
test
adc
push
inc
out
add
add
pusha
fsub
mov
mov
loopne
nop
xchg
add
push
add
shl
test
ins
push
je
sbb
mov
sahf
add
xchg
loope
dec
xor
add
pusha
add
inc
or
inc
xchg
adc
or
pop
fs
mov
and
inc
and
sub
call
fiadd
or
js
push
push
sbb
aam
(bad)
ds
sub
(bad)
cmp
cmp
ja
pop
into
mov
or
(bad)
adc
lea
fcomp
sbb
cdq
add
sbb
(bad)
jmp
lods
mov
and
loopne
mov
mov
add
and
ss
and
dec
sub
sub
sbb
call
push
add
inc
or
pusha
or
add
pop
add
inc
sub
sbb
cmp
sbb
mov
arpl
fstp
call
setns
cmp
sbb
ja
imul
fstp
sub
inc
cmp
push
fdivr
inc
xchg
stos
mov
rcr
repnz
lods
jb
jb
mov
call
cmp
fsubp
aas
push
add
jg
(bad)
in
daa
mov
pop
jnp
xor
adc
xor
add
cmp
fmul
shl
mov
jg
ds
in
push
loope
imul
fdivr
xor
(bad)
add
xor
ja
pop
sbb
mov
cmc
cmp
in
test
or
and
rol
xchg
adc
mov
fld
mov
pop
mov
xor
inc
int
sbb
cmp
ret
dec
(bad)
rol
inc
(bad)
sbb
adc
inc
push
pop
aad
sub
in
retf
xor
fnstenv
xchg
xor
cwde
inc
inc
inc
mov
out
dec
fcomp
pop
call
mov
or
dec
ror
retf
sbb
jnp
lock
in
std
(bad)
or
xor
mov
sbb
enter
ins
dec
movs
and
and
push
adc
aas
xchg
xchg
add
add
sar
(bad)
push
sar
(bad)
inc
pusha
sti
mov
inc
addr16
pushf
sub
es
push
add
enter
imul
xchg
jnp
xor
fld
mov
inc
aaa
cdq
icebp
fistp
loope
mov
mov
add
int3
adc
(bad)
ror
(bad)
or
adc
sub
ss
mov
addr16
sbb
xchg
inc
lahf
fs
rol
push
push
xor
dec
mov
cli
add
(bad)
rdpmc
fadd
fdivrp
addr16
adc
mov
pop
jbe
call
jecxz
xor
add
in
sahf
lahf
ds
pop
xor
sub
jmp
pop
mov
popf
push
cmp
push
ins
dec
inc
stos
jne
push
jg
xor
mov
(bad)
inc
mov
adc
mov
call
add
add
or
add
sbb
inc
push
loopne
inc
xchg
leave
popa
xchg
dec
loopne
nop
adc
adc
xor
cmp
ret
cmp
push
add
add
inc
sbb
pop
sbb
hlt
lock
test
pop
sbb
sbb
ins
imul
daa
test
daa
dec
dec
sahf
fdiv
rcr
pop
sbb
or
pop
ins
fisttp
or
add
cmp
das
xchg
daa
and
cmp
add
dec
retf
inc
push
fisttp
test
add
stos
call
pushf
call
xor
adc
pop
or
adc
sub
or
xor
jns
inc
out
xchg
dec
pop
add
add
sub
lods
dec
pushf
dec
mov
or
std
add
outs
push
jnp
inc
iret
add
add
and
fwait
sbb
pop
mov
loopne
sbb
loope
pop
sbb
xor
loopne
fiadd
pause
jecxz
pop
loopne
add
pop
inc
jmp
movs
dec
es
push
(bad)
mov
dec
shr
mov
push
call
fisttp
pusha
adc
(bad)
jle
sub
adc
mov
loop
addr16
add
repnz
in
sti
ror
ja
pop
(bad)
xchg
imul
jg
cwde
jmp
bound
arpl
shl
sti
and
inc
dec
mov
vmwrite
std
sub
aad
cmp
add
add
mov
sahf
xchg
je
push
dec
add
adc
out
ins
loop
pop
pop
hlt
mov
cdq
adc
adc
rcl
mov
jge
int
test
lods
mov
mov
pop
aam
aam
pop
test
rcl
imul
add
enter
push
mov
sahf
dec
add
je
in
not
mov
out
push
cmc
xchg
loope
pushf
xchg
xchg
and
stos
aaa
sti
sub
mov
push
xor
out
int
in
pop
out
mov
mov
jg
rol
call
pcmpeqw
addr16
(bad)
mov
push
(bad)
out
ins
loopne
iret
in
enter
stos
sar
adc
loopne
mov
jg
jg
jl
inc
push
fidiv
jnp
jbe
adc
fdivr
int3
mov
repnz
(bad)
(bad)
fimul
test
stc
fisubr
test
xor
outs
and
lahf
in
sti
sbb
sbb
cmp
dec
pushf
jmp
mov
pop
xlat
(bad)
jnp
(bad)
push
pushf
pop
inc
out
push
adc
out
lea
icebp
enter
mov
cmp
fldcw
in
cmp
dec
out
cld
cmp
mov
and
inc
mov
mov
call
pop
inc
push
and
or
mov
test
loope
cld
sbb
loop
inc
loope
psraw
xchg
(bad)
push
mov
push
(bad)
div
push
cmps
mov
push
(bad)
dec
into
lods
adc
(bad)
jg
adc
jg
push
gs
dec
(bad)
aaa
xor
adc
add
sahf
inc
sti
pop
add
or
mov
pop
sbb
test
mov
int3
mov
cmp
fsubp
and
fwait
cli
mov
xchg
or
jmp
xchg
cld
rol
pushf
mov
in
sub
sbb
loope
xchg
sub
vsubsd
cdq
pmuludq
pop
push
in
or
and
inc
xchg
sub
(bad)
dec
add
ror
add
(bad)
test
es
inc
mov
(bad)
cdq
push
jge
cwde
push
mov
cld
mov
test
fist
(bad)
retf
inc
push
dec
add
add
add
add
mov
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
repnz
add
popa
rol
repnz
add
popa
rol
repnz
add
popa
rol
and
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
mov
xchg
add
add
and
add
push
jns
je
ins
xor
pop
imul
jae
gs
cs
or
and
add
add
add
sbb
lahf
jno
add
popa
rol
lahf
jno
add
popa
rol
lahf
jno
add
popa
rol
push
dec
add
sub
add
add
mov
xchg
add
add
add
add
icebp
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
repnz
add
popa
rol
repnz
add
popa
rol
repnz
add
popa
rol
push
dec
add
add
add
add
add
add
test
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
int3
add
add
push
je
imul
add
add
add
and
add
add
and
dec
inc
add
add
pop
add
ins
add
add
inc
ins
outs
bound
add
add
add
inc
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
cmp
push
add
cmp
push
add
add
xchg
add
add
mov
mov
add
cmp
push
add
add
add
add
add
add
add
add
add
add
cmp
push
add
cmp
push
add
cmp
push
add
add
add
add
xchg
add
add
add
cmp
adc
cmp
inc
add
add
add
add
cmp
push
add
add
lods
add
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
popa
add
add
push
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
dec
add
add
add
adc
cmps
add
add
add
add
add
add
add
add
add
add
add
add
sgdtd
and
pop
add
and
sbb
dec
add
das
add
add
add
jbe
imul
and
mov
add
add
add
add
add
add
add
test
popa
add
add
movs
add
das
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
and
add
add
add
add
or
sub
add
add
add
cmp
add
add
add
add
add
inc
add
add
add
add
add
pop
outs
gs
outs
fs
add
jae
gs
xor
pop
imul
jae
gs
add
arpl
ins
imul
outs
ja
inc
popa
jae
add
jae
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
cs
jo
cmp
outs
fs
gs
arpl
outs
jb
push
add
dec
bound
arpl
jb
add
jb
popa
ins
add
jae
gs
cs
dec
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
arpl
add
imul
popa
arpl
add
jae
gs
cs
dec
cs
popa
arpl
imul
push
popa
jb
add
arpl
addr16
popa
jb
add
je
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
imul
ins
add
jo
jae
add
add
pop
inc
jno
popa
ins
imul
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
add
inc
js
gs
imul
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
jbe
imul
gs
jns
add
ins
bound
dec
outs
outs
add
je
dec
popa
ins
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
pop
dec
gs
popa
add
je
push
je
arpl
jb
arpl
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
dec
popa
imul
add
inc
push
push
inc
je
jb
bound
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
add
xor
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jae
jae
add
bound
ins
add
cmp
and
add
popa
add
add
imul
das
add
jns
jae
je
add
xor
xor
pop
add
imul
pop
add
jns
jae
je
add
add
js
add
add
add
push
mov
push
out
xchg
adc
(bad)
mov
pop
push
sbb
mov
xor
dec
xor
or
add
add
adc
push
and
add
adc
sbb
add
or
pop
and
or
and
add
add
adc
sbb
add
adc
adc
push
add
add
push
pop
add
adc
adc
push
push
pop
push
adc
adc
sbb
add
adc
add
adc
push
or
add
sbb
or
add
add
inc
push
and
sbb
sbb
adc
add
add
add
push
add
push
add
push
add
add
add
add
or
ins
inc
xor
and
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
push
dec
gs
inc
xor
and
push
push
pop
and
xor
xor
xor
cs
or
or
add
add
add
or
imul
xor
xor
add
sgdtd
or
xor
xor
xor
add
add
or
add
or
add
add
push
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
add
mov
add
mov
add
and
add
mov
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
