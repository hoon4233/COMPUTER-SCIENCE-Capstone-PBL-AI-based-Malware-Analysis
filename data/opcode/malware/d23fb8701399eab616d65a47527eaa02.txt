jmp
outs
pop
push
jmp
dec
jns
addr16
dec
ins
jnp
pop
push
inc
arpl
dec
add
dec
push
push
jae
pop
jno
jb
push
jae
inc
dec
push
jb
pop
push
push
dec
imul
fs
imul
outs
jmp
jl
pop
pop
inc
push
cmp
add
dec
outs
push
pop
data16
push
pop
jmp
add
pop
jmp
popa
jnp
dec
pop
inc
ja
pop
add
inc
add
push
jge
ins
push
push
jno
js
inc
imul
push
arpl
ins
jmp
ins
push
push
push
add
inc
jp
add
outs
add
cmp
inc
jmp
jae
inc
add
jle
jo
imul
pop
outs
outs
push
push
pop
dec
add
fs
ins
add
inc
pop
inc
add
ins
pop
imul
push
addr16
bound
push
add
(bad)
pop
jb
push
dec
push
ins
add
pop
push
jne
mov
push
mov
jmp
jnp
jle
inc
pop
jmp
data16
dec
jbe
push
inc
pop
jle
jne
data16
push
add
ja
outs
ins
add
jle
jno
imul
add
add
push
jb
jne
ins
dec
dec
jmp
inc
pop
imul
inc
dec
inc
push
dec
imul
push
push
push
pop
jmp
ins
push
pop
jge
pop
dec
push
cmp
pop
add
pop
ins
add
je
jl
popa
jne
jp
dec
pop
pop
push
pop
je
arpl
ins
add
add
jl
jne
aaa
imul
push
add
add
add
jns
cmp
add
jae
imul
push
inc
fs
push
jae
jp
add
jle
jnp
dec
push
js
imul
inc
dec
add
pop
inc
outs
inc
push
imul
push
jbe
push
ins
fs
jmp
push
jno
jmp
jo
inc
inc
jp
inc
imul
pop
jbe
jnp
inc
pop
push
jnp
jo
dec
dec
gs
push
inc
jle
jle
ja
jb
push
push
je
inc
dec
push
inc
gs
dec
add
push
jns
ret
pop
push
push
fs
pop
push
push
push
jae
xor
jmp
inc
jne
data16
jns
push
jo
inc
jne
inc
inc
jns
addr16
push
inc
push
ins
dec
pop
inc
jge
inc
imul
inc
push
dec
push
jp
jae
ja
push
push
ins
ja
ins
dec
dec
gs
push
add
int3
jo
cmp
pop
add
inc
add
jae
jmp
arpl
inc
jo
outs
add
inc
outs
pop
push
popa
dec
jne
pop
outs
addr16
jbe
inc
inc
inc
jle
dec
outs
je
je
push
jp
jo
cmp
add
jmp
push
push
ja
push
dec
push
dec
dec
push
jne
inc
addr16
dec
jl
js
dec
push
push
imul
dec
arpl
inc
pop
push
push
pop
add
pop
dec
addr16
pop
ins
ins
jle
push
add
bound
inc
pop
imul
push
push
bound
cmp
popa
dec
ins
pop
pop
jo
ja
inc
jmp
outs
jle
dec
add
cmp
outs
jl
push
push
add
push
dec
js
imul
dec
dec
js
jae
add
jb
push
inc
ins
push
imul
gs
ja
dec
jnp
pop
jne
inc
push
push
add
jmpw
add
jmp
inc
push
imul
jne
bound
dec
jb
dec
add
jbe
push
bound
add
jae
inc
jp
fs
jl
push
jnp
jne
push
push
bound
push
ins
jne
jne
outs
jmp
jl
jle
jae
cmp
pop
push
imul
dec
pop
inc
jmp
inc
jbe
pop
ins
jmp
push
dec
add
jns
push
jle
dec
inc
jne
jbe
js
pop
jbe
imul
jl
inc
dec
fs
jo
jnp
jmp
outs
jns
push
jp
jle
inc
add
push
jl
dec
js
jmp
pop
add
push
jbe
outs
inc
jle
je
jno
jnp
dec
push
dec
add
jle
pop
dec
addr16
jb
push
pop
push
arpl
ja
add
add
dec
add
add
outs
je
ins
dec
jmp
jbe
pop
pop
arpl
jmp
jge
gs
pop
jbe
jae
inc
jo
lock
ja
pop
push
dec
dec
js
dec
inc
jge
inc
push
pop
jge
inc
jo
pop
imul
cmp
jl
add
outs
dec
jge
push
gs
push
push
arpl
push
push
add
push
outs
ja
outs
jo
dec
pop
pop
pop
imul
add
jl
jae
fs
js
inc
add
jmp
add
inc
push
pop
jl
add
pop
outs
pop
ja
jbe
dec
jno
push
js
outs
pop
add
inc
outs
jb
pop
push
jle
inc
inc
inc
inc
ja
js
pop
jns
ja
arpl
add
jmp
dec
add
jmp
jb
jge
jns
jp
pop
jmp
jne
inc
push
pop
ins
dec
push
popa
push
pop
fs
pop
jno
push
inc
add
inc
pop
bound
arpl
pop
data16
gs
inc
dec
push
add
push
ins
pop
js
jge
jne
clc
add
test
add
jmp
pop
jae
jmp
outs
outs
jno
pop
popa
dec
outs
dec
pop
push
ja
dec
outs
outs
push
inc
jge
addr16
imul
dec
push
dec
imul
pop
gs
add
gs
dec
add
popa
pop
pop
add
les
push
jb
add
outs
data16
imul
jmp
outs
jmp
push
popa
push
inc
dec
popa
jb
pop
jns
push
push
jb
gs
inc
inc
imul
add
add
outs
pop
jmp
add
inc
inc
push
push
push
inc
jge
dec
dec
js
push
jae
pop
jb
push
fs
bound
dec
mov
jmp
dec
fs
jmp
inc
push
add
jno
push
jbe
jbe
jae
ins
inc
push
add
add
inc
push
inc
add
push
addr16
jl
pop
fs
jne
fs
ins
jbe
les
jnp
inc
gs
add
pop
inc
add
jae
dec
popa
pop
jmp
dec
inc
push
imul
jmp
js
inc
push
jns
add
add
push
dec
inc
pop
push
inc
push
add
arpl
pop
popa
ins
pop
jmp
bound
push
push
dec
gs
jbe
pop
add
pop
data16
je
add
jnp
jle
push
mov
jmp
or
push
sbb
dec
add
xor
jmp
push
ins
mov
sti
ins
xor
mov
pop
jmp
add
jmp
push
jne
js
ins
pop
inc
ins
inc
popa
push
jge
push
imul
dec
fs
pop
ins
add
add
add
jbe
pop
imul
inc
push
inc
ins
add
push
imul
push
push
push
gs
add
push
js
jo
jbe
je
pop
jmp
pop
dec
bound
imul
arpl
inc
outs
inc
outs
jns
addr16
bound
je
jge
ins
jbe
inc
pop
inc
jno
jo
ins
fs
add
push
outs
jbe
inc
je
push
inc
outs
arpl
push
dec
push
inc
jmp
gs
cmp
pop
add
add
add
push
jmp
je
pop
push
imul
add
jo
push
dec
inc
jne
dec
dec
pop
jge
pop
dec
push
jge
gs
pop
dec
add
dec
jl
add
fs
jmp
fs
jb
dec
inc
fs
fs
pop
inc
dec
inc
pop
pop
dec
data16
push
push
jmp
rol
std
mov
inc
pop
jmp
bswap
sub
leave
jmp
fs
push
ja
mov
pop
jmp
jb
push
jmp
push
add
dec
push
dec
pop
dec
inc
outs
dec
jno
pop
popa
add
addr16
fs
inc
imul
jae
push
jge
ja
jge
pop
add
arpl
inc
jmp
jge
imul
aas
data16
dec
jp
inc
jno
hlt
jno
ja
dec
push
jl
pop
push
inc
dec
inc
jno
pop
jne
pop
ja
fs
jns
ins
jp
jge
push
pop
push
push
add
dec
add
jne
popa
jb
inc
push
inc
add
jp
jmp
jns
inc
jmp
jbe
inc
dec
bound
push
inc
inc
jae
add
push
jge
push
inc
js
addr16
dec
bound
inc
pop
ins
pop
jp
push
gs
outs
jmp
pop
je
push
ins
jb
jmp
outs
push
jne
dec
pop
dec
bound
inc
inc
push
pop
jno
arpl
bound
jge
push
inc
pop
inc
jp
dec
fs
push
jnp
inc
jne
inc
pop
addr16
pop
popa
inc
inc
inc
arpl
push
jp
lods
or
add
cmp
gs
dec
push
dec
add
jns
fs
dec
ja
inc
push
dec
inc
pop
gs
pop
dec
jmp
arpl
add
jb
push
dec
dec
pop
jl
inc
jbe
jne
inc
dec
add
jge
jle
jmp
inc
inc
outs
bound
ins
jns
dec
push
pop
pop
pop
push
jae
jp
push
outs
dec
add
add
dec
cmp
jne
jmp
jo
jl
inc
add
jns
jle
dec
pop
gs
ins
add
pop
add
outs
inc
arpl
ins
push
jge
jb
inc
jns
push
popa
jo
inc
imul
imul
jle
jmp
pop
jae
jne
jge
je
js
push
outs
inc
mov
jmp
push
inc
pop
add
add
pop
pop
pop
pop
inc
push
jnp
in
inc
pop
jne
push
jo
push
pop
bound
ins
jge
jl
jns
popa
js
dec
addr16
pop
inc
inc
jge
data16
pop
push
add
dec
jb
inc
inc
inc
push
jmp
dec
je
jmp
push
jne
push
add
outs
push
jo
push
push
jo
pop
fs
jb
dec
ins
add
inc
push
ja
inc
push
jne
jae
jb
inc
add
jno
jle
push
jmp
push
push
jmp
js
jne
dec
add
gs
outs
inc
push
push
jge
jp
jmp
add
push
dec
pop
inc
add
pop
inc
ins
pop
pop
je
jb
imul
dec
pop
inc
pop
add
ja
jnp
push
jnp
dec
imul
dec
push
push
xchg
jmp
push
arpl
das
ins
outs
dec
pop
add
push
push
jle
je
push
add
push
jp
in
pop
add
popa
push
outs
je
push
js
outs
popa
push
imul
gs
jmp
jno
add
data16
inc
imul
add
push
dec
dec
arpl
push
jbe
add
jp
push
pop
add
popa
dec
push
dec
push
jb
jle
push
ja
push
inc
add
lds
push
inc
dec
pop
imul
inc
add
jmp
dec
jbe
jmp
push
imul
pop
push
add
ins
imul
jbe
data16
push
jae
outs
jo
jns
pop
add
jnp
add
jl
dec
pop
push
addr16
add
jge
(bad)
pop
jmp
add
push
push
jns
dec
outs
add
jmp
push
jmp
add
push
ins
dec
addr16
inc
inc
dec
pop
imul
bound
ins
push
pop
ins
push
dec
dec
add
je
jge
inc
jp
jmp
jns
imul
push
dec
jb
addr16
jmp
bound
inc
ja
jle
push
imul
push
add
dec
jno
bound
jo
outs
jns
push
jae
inc
dec
imul
pop
jle
add
inc
pop
js
gs
push
jmp
inc
dec
imul
outs
jle
jp
sub
jmp
pop
imul
inc
fs
add
push
jne
jne
inc
push
jle
dec
ins
jno
inc
add
dec
push
data16
jno
gs
inc
fs
dec
inc
dec
add
dec
je
jp
pop
jbe
push
gs
(bad)
jle
jp
jge
push
pop
dec
push
jo
push
dec
inc
popa
jns
add
cmp
jb
inc
push
inc
imul
inc
jae
gs
jae
pop
push
outs
dec
ja
pop
push
arpl
jb
jo
jae
inc
je
dec
jnp
inc
jne
push
push
push
inc
jmp
add
dec
ins
add
inc
outs
imul
dec
add
jmp
ins
inc
jmp
ins
pop
push
dec
jbe
push
je
dec
jge
jns
outs
add
dec
dec
imul
add
outs
push
pop
outs
jno
jo
outs
add
inc
jae
add
add
dec
pop
add
(bad)
imul
pop
inc
pop
inc
jge
pop
add
jmp
push
inc
pop
jbe
add
pop
fs
jnp
dec
jno
inc
pop
add
inc
jae
push
imul
add
push
dec
addr16
dec
ja
pop
add
jmp
inc
add
dec
add
outs
inc
dec
inc
push
jge
push
pop
ja
jns
imul
jle
push
dec
dec
outs
inc
push
push
popa
dec
add
js
add
imul
jge
push
add
inc
dec
add
arpl
rcl
pop
push
js
cmp
dec
dec
jno
pop
dec
jne
repnz
outs
push
jle
dec
jne
jp
push
gs
inc
ins
je
pop
bound
jb
pop
ja
dec
js
jae
outs
dec
dec
dec
jns
pop
dec
push
arpl
inc
jmp
jp
jb
inc
jge
pop
pop
inc
jno
jae
bound
ins
jge
push
jp
push
jo
push
jns
ins
jmp
jmp
pop
push
push
add
inc
pop
push
dec
imul
inc
dec
dec
outs
add
data16
jmp
jo
outs
jp
jno
jo
jge
ins
pop
data16
imul
push
jo
pop
push
arpl
jne
jmp
inc
jae
jmp
add
ins
imul
push
bound
js
je
add
add
inc
inc
jp
gs
popa
push
imul
js
dec
dec
add
outs
addr16
add
add
add
ins
jmp
inc
inc
dec
pop
push
add
dec
pop
imul
dec
pop
jmp
push
imul
pop
jbe
inc
push
outs
jne
pop
gs
pop
inc
addr16
push
jp
push
inc
addr16
pop
data16
push
push
push
jp
push
ja
jnp
push
jo
jmp
inc
jbe
jmp
data16
inc
jp
pop
pop
pop
push
outs
addr16
add
push
jnp
jns
jl
pop
dec
jl
push
jb
inc
dec
dec
inc
pop
jo
add
inc
pop
outs
jo
gs
jae
ins
dec
inc
dec
ins
jmp
dec
add
jne
jmp
jle
dec
pop
dec
pop
arpl
push
gs
jmp
dec
push
push
dec
push
ins
add
pop
inc
pop
jae
jge
inc
inc
jae
je
arpl
pop
dec
bound
jge
pop
inc
push
dec
jle
add
jmp
addr16
jmp
addr16
add
push
inc
data16
je
js
dec
pop
push
pop
push
inc
dec
jnp
jp
push
jnp
jle
outs
inc
push
jle
inc
jns
pop
push
gs
jb
je
enter
ins
push
jmp
push
push
inc
jb
data16
add
pop
jmp
jle
inc
push
js
push
pop
fs
jne
pop
push
pop
pop
jle
ins
pop
ins
push
add
inc
add
jl
inc
pop
outs
inc
bound
dec
pop
inc
jb
je
add
shl
jbe
popa
gs
inc
add
jp
add
pop
jmp
jnp
imul
dec
push
jae
push
outs
jb
je
inc
push
inc
push
js
dec
pop
arpl
cmp
dec
dec
push
pop
fs
bound
dec
dec
add
jl
inc
js
jo
push
jae
pop
jbe
fiadd
push
outs
jbe
ja
gs
jl
jno
outs
jns
dec
pop
add
jo
push
mov
jmp
push
add
dec
dec
push
add
pop
outs
dec
pop
dec
ins
jbe
pop
add
dec
imul
push
dec
gs
bound
jb
jnp
pop
dec
inc
jge
push
bound
popa
push
push
dec
dec
push
ins
pop
addr16
popa
jno
outs
push
push
inc
ret
jmp
fs
dec
jmp
add
popa
add
push
dec
inc
push
dec
inc
dec
js
pop
pop
dec
fs
jge
inc
fs
push
jb
add
push
inc
push
add
pop
ja
jne
dec
pop
jbe
inc
inc
add
ins
jno
ret
jmp
jnp
imul
push
bound
push
je
dec
inc
inc
push
gs
inc
pop
outs
push
jge
push
jl
dec
fs
dec
dec
add
js
gs
pop
jl
jb
push
push
add
fistp
pop
jl
push
imul
inc
jp
push
dec
jae
inc
fs
jle
bound
dec
imul
sbb
add
add
push
ror
mov
cmp
cmp
push
xor
mov
mov
mov
xor
xor
or
or
xor
xor
or
or
dec
jne
mov
mov
pop
push
jmp
sub
xor
ret
sldt
add
fcomp
sbb
or
push
lods
sahf
iret
or
and
sldt
add
sub
xor
push
call
add
dec
clc
leave
ret
push
mov
sub
push
jmp
push
mov
cmp
inc
cmp
xor
push
xor
mov
mov
mov
xor
shl
xor
add
sub
and
lea
push
jmp
mov
push
aas
adc
cmp
pop
cli
ins
arpl
jmp
fadd
lock
aad
cmp
cmps
cwde
ins
addr16
xchg
jl
or
sub
dec
jne
mov
mov
mov
jmp
jle
fs
sub
push
mov
mov
add
pop
sub
leave
ret
push
mov
sub
push
jmp
(bad)
(bad)
pop
jnp
jecxz
out
shl
xor
push
xor
mov
mov
mov
sub
and
xor
and
sub
and
add
or
dec
jne
mov
mov
push
jmp
jb
pop
jmp
push
pop
hlt
add
jmp
aam
js
xor
add
dec
icebp
dec
add
xchg
jmp
and
jg
arpl
cmc
jge
pop
mov
and
or
cmp
or
add
add
leave
ret
push
mov
sub
push
jmp
into
mov
movs
mov
jae
lahf
and
push
xor
mov
mov
mov
or
dec
add
dec
jne
mov
mov
mov
jmp
icebp
test
jmp
inc
retf
mov
sbb
and
push
jp
les
pop
fwait
pushf
imul
add
push
jmp
pop
adc
jb
jmp
sub
or
jmp
mov
pop
jns
iret
test
ret
call
int3
into
cmp
retf
and
push
push
and
cmps
push
fisttp
das
sub
cmp
jmp
das
jno
mov
cmps
fs
in
test
gs
call
pop
pop
daa
dec
(bad)
xchg
add
jmp
out
mov
xchg
mov
ss
lods
(bad)
adc
xor
adc
adc
pushf
mov
(bad)
add
shr
nop
sti
push
mov
xchg
enter
pop
xchg
out
call
aam
arpl
fisttp
pop
jo
and
jmp
mov
(bad)
adc
push
sbb
(bad)
leave
adc
movs
cli
movs
fst
scas
sbb
and
mov
leave
(bad)
gs
xchg
test
(bad)
adc
(bad)
adc
stc
stc
ror
(bad)
adc
sub
popf
cdq
clc
and
dec
xchg
aad
xor
and
jge
sbb
(bad)
(bad)
xor
sahf
stc
jecxz
push
enter
push
push
shl
imul
and
call
retf
sbb
xchg
stos
daa
iret
pop
adc
int
cld
pop
add
push
and
ss
sbb
repz
je
sti
pushf
(bad)
adc
sub
push
cdq
(bad)
xchg
aad
adc
jmp
aad
cli
push
lds
sti
aad
(bad)
adc
iret
add
pop
fdivr
add
jg
or
xchg
(bad)
adc
pop
push
pop
int
pop
and
imul
(bad)
adc
or
pushf
aad
inc
add
cmp
jmp
jmp
inc
andps
and
jecxz
retf
(bad)
cmc
add
popa
(bad)
cli
ja
adc
xchg
cmp
ret
fwait
xchg
fistp
(bad)
(bad)
retf
or
(bad)
and
cmps
jg
jae
bound
and
mov
pop
mov
adc
xchg
xchg
pop
es
adc
xchg
sbb
or
mov
bound
retf
lock
adc
mov
pop
std
out
xchg
mov
inc
xor
pop
xor
fst
add
idiv
(bad)
int3
xchg
xchg
retf
mov
dec
push
inc
mov
push
adc
fst
sbb
dec
xor
pop
adc
and
xchg
aad
sub
xchg
shl
ror
add
add
fwait
leave
mov
arpl
push
mov
adc
sbb
cli
cmp
dec
sbb
cwde
jle
int
dec
jnp
stc
scas
fscale
dec
rcl
pop
jp
rol
jmp
ss
push
test
mov
sti
in
(bad)
adc
clc
jmp
pushf
cmp
fwait
sbb
pop
adc
mov
mov
jle
push
mov
xchg
jae
push
stc
ds
int
in
pop
mov
cmc
mov
sti
data16
adc
xor
xchg
cld
cmp
sub
sbb
xchg
jbe
mov
push
in
outs
xchg
lock
fist
ret
outs
add
adc
push
mov
or
push
nop
and
mov
sahf
inc
dec
sti
dec
ins
(bad)
adc
fadd
adc
xor
adc
jnp
xor
inc
and
push
mov
icebp
fs
(bad)
adc
add
mov
sub
hlt
jmp
add
fsub
adc
mov
mov
in
sub
dec
dec
lahf
adc
gs
push
cmp
scas
sbb
(bad)
xor
stc
mov
stos
push
dec
add
retf
and
jae
out
dec
das
mov
sbb
push
jmp
ss
pop
cmp
adc
and
jle
stc
or
adc
pop
sar
ret
dec
enter
ret
xchg
scas
sbb
pop
(bad)
in
ror
mov
out
int3
out
ss
sbb
xchg
lods
fst
pop
es
inc
pop
(bad)
adc
or
xor
jle
push
fwait
cmp
cmps
ficomp
and
adc
jne
and
ss
mov
xchg
bound
mov
(bad)
adc
sub
scas
sbb
int3
shr
xchg
pop
jbe
aas
retf
push
repnz
stos
ficomp
ss
scas
sbb
mov
lods
aad
push
fistp
adc
jmp
stc
pop
xchg
popf
push
mov
shl
es
cdq
push
(bad)
adc
push
out
adc
xchg
jge
sbb
rcl
cmps
pop
jp
jno
addr16
add
add
pop
mov
fsub
cmps
mov
inc
push
adc
out
sub
sbb
cmp
mov
loop
sbb
jne
(bad)
adc
add
sti
dec
pop
arpl
mov
scas
out
inc
cmp
pop
aas
std
inc
mov
inc
mov
xchg
lods
daa
jmp
push
mov
mov
push
xlat
ds
push
out
dec
sub
jae
and
mov
shr
loop
inc
(bad)
imul
push
push
retf
iret
ss
iret
bound
ret
inc
(bad)
adc
loopne
jmp
les
sbb
xchg
lock
mov
int3
adc
and
push
sbb
push
adc
gs
sub
ins
inc
call
sbb
lahf
mov
ss
pop
or
bound
cmp
push
lea
or
or
mov
leave
push
xor
sar
pop
lahf
ja
push
and
push
inc
iret
retf
addr16
ffreep
out
mov
mov
stc
sbb
popa
and
add
adc
jb
and
and
or
retf
adc
or
cmp
add
xor
loop
jmp
xor
xor
xor
adc
das
jmp
xchg
push
push
das
inc
loope
test
repz
inc
mov
pop
dec
push
inc
dec
ins
aas
xor
and
mov
add
fs
adc
xor
xchg
add
dec
jo
shl
(bad)
out
dec
inc
data16
xchg
(bad)
ja
jmp
call
cmp
xchg
ficomp
dec
je
into
stc
std
sub
adc
mov
ins
cmp
and
shl
jo
inc
mov
adc
inc
jmp
(bad)
daa
sub
adc
adc
fucomip
and
int
retf
dec
add
leave
xor
sbb
or
fwait
into
pushf
fidiv
iret
sahf
or
cmp
ret
add
(bad)
popf
push
sbb
(bad)
xchg
scas
ret
adc
test
mov
or
pusha
ret
imul
ror
or
mov
dec
pop
fstp
ins
sbb
mov
loope
(bad)
jns
pop
(bad)
adc
daa
and
jae
xchg
fcomp
jge
adc
not
aam
mov
xchg
repnz
test
retf
adc
aam
sbb
popf
mov
(bad)
jns
sbb
adc
push
push
fstp
mov
cmp
cmp
mov
and
lods
sbb
push
mov
jb
inc
fadd
int3
mov
or
call
outs
sbb
jp
jmp
ja
jo
sub
enter
xchg
sahf
adc
cmp
cli
stos
push
lods
xor
cmp
ins
xchg
xchg
sub
(bad)
adc
mov
lds
fcomp
rcr
adc
(bad)
or
std
and
cmc
scas
fsubr
ins
ret
jno
(bad)
adc
and
call
xchg
and
cs
or
aad
xlat
or
inc
cmp
sbb
xchg
inc
or
mov
pushf
jo
test
mov
mov
inc
mov
mov
sbb
add
adc
push
aad
mov
(bad)
adc
gs
jp
pop
(bad)
adc
(bad)
adc
xor
inc
popa
push
push
aam
out
aad
dec
push
hlt
in
push
or
xor
aam
jl
cmp
lods
adc
adc
mov
test
clc
mov
pop
mov
add
pop
cdq
int3
mov
push
push
push
dec
add
adc
(bad)
adc
(bad)
push
push
je
hlt
imul
and
inc
mov
into
pushf
dec
or
pop
(bad)
and
cli
fdivp
aam
mov
std
lds
pushf
jb
xor
loope
adc
jle
(bad)
fisttp
adc
mov
adc
jb
lds
sahf
xchg
(bad)
ficom
jns
sti
lds
sahf
std
lds
ins
stos
ins
add
lds
retf
clc
mov
xor
pop
repnz
xchg
push
sbb
ss
inc
(bad)
sti
test
cli
push
lds
nop
sbb
cmp
data16
outs
fisttp
xor
push
lods
sub
aad
sahf
sbb
mov
dec
mov
ret
cld
(bad)
out
lds
mov
popa
into
adc
inc
sbb
jg
sbb
adc
std
and
stos
cmp
adc
jmp
scas
fs
sbb
jns
ss
out
arpl
pusha
fcmovb
inc
mov
lods
mov
icebp
fidivr
push
test
cmp
push
pop
jp
pop
mov
mov
inc
scas
and
jmp
loope
scas
shl
xchg
mov
add
inc
jno
hlt
out
(bad)
mov
div
adc
adc
lds
xor
outs
cmp
in
int3
xor
(bad)
sub
hlt
scas
pop
scas
in
pop
mov
sub
adc
sar
sub
int3
mov
fninit
push
out
movs
mov
xor
(bad)
cmps
shl
dec
jb
cmps
mov
lds
js
enter
adc
into
add
sbb
push
sub
xchg
dec
retf
out
mov
xor
movs
nop
inc
clc
push
dec
mov
and
call
bound
adc
ficom
jp
rcl
lock
or
jnp
or
lea
std
and
inc
add
ffree
adc
inc
idiv
and
sbb
sbb
lds
pop
mov
jmp
fsubr
push
jae
lds
mov
leave
ins
(bad)
repnz
sti
aam
adc
std
into
mov
lods
cmp
inc
add
in
add
lds
retf
cdq
dec
push
mov
cmp
std
aam
mov
(bad)
mov
sbb
cld
or
ret
inc
add
mov
lds
mov
je
nop
cld
push
adc
scas
pop
or
mov
push
arpl
hlt
daa
and
int
sbb
mov
scas
sbb
int3
lds
sti
in
mov
push
push
adc
jg
aad
mov
pop
call
out
mov
xor
scas
pop
mov
lds
and
das
pop
sbb
ret
dec
popf
pop
into
lods
jnp
(bad)
mov
pusha
adc
lds
add
xlat
lds
jmp
xor
imul
push
shld
ss
sbb
push
retf
not
das
ret
lds
call
adc
pop
retf
xor
adc
push
dec
in
pop
cmp
leave
xlat
jo
add
iret
lds
out
jbe
fdiv
outs
mov
sti
loop
push
loope
cmp
adc
in
int
xchg
pop
sub
icebp
lds
sbb
or
mov
and
sti
gs
pop
fist
jp
pop
cmp
sahf
in
pop
movs
int
xchg
js
out
or
cmp
add
jo
mov
jmp
ss
pop
sbb
imul
push
xlat
inc
enter
fs
mov
sbb
xchg
xchg
pop
or
gs
xlat
leave
ins
jno
or
int
adc
adc
ret
data16
and
and
sbb
jno
inc
add
ins
push
inc
fs
stos
aad
push
imul
mov
add
sub
pusha
cmp
xor
test
stc
ror
movs
mov
lahf
pop
shr
aam
adc
ret
sbb
retf
lds
jo
mov
pop
retf
mov
scas
pop
adc
mov
(bad)
cdq
pop
imul
or
out
call
xchg
pop
ins
xor
shr
lds
mov
dec
cmps
aam
cli
movs
xchg
xchg
ja
aam
ret
push
sbb
xor
push
in
hlt
inc
cli
cmp
hlt
aam
scas
push
retf
popa
jmp
mov
outs
pop
outs
adc
xlat
xchg
add
sbb
dec
inc
or
movs
lds
shl
mov
stc
(bad)
leave
outs
lea
lds
stc
and
fs
cmc
adc
sahf
lds
addr16
(bad)
cmps
aam
ds
xchg
mov
sbb
sbb
inc
ror
jne
adc
adc
icebp
movs
leave
adc
lahf
aam
xchg
jle
and
and
fistp
mov
repz
sbb
add
xchg
and
(bad)
adc
out
sti
bound
pop
rcl
mov
adc
test
mov
adc
popa
pop
inc
push
or
jmp
repnz
and
data16
ror
jmp
adc
xchg
lds
dec
(bad)
adc
adc
adc
nop
dec
fcmovb
sahf
fbld
xchg
and
lds
mov
jp
jb
retf
test
and
dec
or
mov
and
imul
sti
stos
mov
adc
fsub
sbb
loope
je
loopne
gs
lds
pop
jb
adc
mov
sbb
mov
lds
push
pop
adc
cmp
lds
sahf
fistp
push
xchg
and
mov
xor
scas
inc
addr16
xchg
adc
lds
aaa
xchg
adc
(bad)
lds
shl
sti
push
add
jp
int3
and
mov
adc
retf
adc
cvtpi2ps
and
or
stc
rcl
adc
mov
sub
or
ret
jmp
cmp
add
sbb
cmps
add
aas
add
sbb
sub
pop
out
jo
es
jle
adc
inc
or
mov
adc
sbb
call
sbb
fcmovnb
push
adc
adc
cmp
pushf
push
popa
adc
js
ins
call
out
pop
ror
fld
aam
push
or
js
retf
(bad)
sbb
fwait
mov
iret
push
sub
mov
xchg
and
ss
mov
lea
std
movs
mov
jmp
push
push
jecxz
adc
and
int3
xor
dec
or
jo
and
aaa
sub
and
push
mov
mov
out
idiv
(bad)
push
jle
jb
and
mov
dec
adc
lds
mov
retf
and
scas
sbb
out
mov
int3
push
inc
add
ins
lds
xchg
xor
ins
outs
sbb
adc
lea
jnp
or
cli
shr
adc
dec
jbe
mov
sbb
dec
inc
xchg
popa
ss
lds
sahf
daa
test
inc
loop
sbb
sub
push
enter
mov
mov
outs
std
aaa
jle
jnp
dec
rcr
add
aam
mov
jp
jle
xor
push
and
daa
cmp
and
das
ror
div
mov
sbb
pop
or
(bad)
lods
sahf
dec
fild
dec
lock
adc
jae
mov
(bad)
ins
loopne
pop
and
cdq
sbb
mov
fstp
(bad)
xchg
push
adc
out
loopne
or
int3
aam
pusha
sub
pop
inc
xchg
adc
mov
fs
rcl
xchg
jo
mov
inc
popf
jmp
lods
add
and
pop
push
loop
and
push
cmp
lds
jp
xchg
ins
mov
into
and
rol
inc
(bad)
jns
adc
push
icebp
adc
mov
arpl
push
aam
mov
sti
sub
cmp
mov
loope
mov
dec
inc
jo
ds
lds
xchg
pusha
xor
ss
cs
cdq
jne
push
je
ss
lds
xchg
rcr
ins
mov
cld
sbb
sbb
in
push
jb
push
dec
inc
add
xchg
imul
add
pushf
jns
aam
data16
add
daa
bndstx
jg
imul
sbb
dec
shl
jecxz
xor
mov
adc
and
retf
inc
mov
jo
movs
cmp
dec
mov
ret
in
out
mov
enter
popf
mov
xchg
and
call
push
int
ins
push
jecxz
pop
xchg
and
xor
adc
or
hlt
(bad)
rcl
xchg
inc
or
pop
aam
rol
mov
enterw
fld
sub
push
imul
fwait
fwait
mov
or
pusha
enter
sbb
fisub
push
(bad)
cmp
mov
ss
aam
xchg
leave
cmp
mov
pushf
xchg
add
shl
mov
lock
pop
dec
dec
sbb
cmp
adc
xchg
and
ja
dec
fsubrp
and
jo
lods
mov
inc
or
call
es
cdq
ret
push
xchg
aam
cmp
cmp
push
xchg
lods
add
lds
jmp
jge
adc
loope
xchg
sub
adc
sbb
aam
(bad)
xor
cmp
push
xchg
mov
lahf
pushf
or
push
retf
adc
bt
jne
cwde
ins
aam
aad
xor
add
push
lods
sbb
inc
xor
adc
and
pushf
aas
clc
popf
mov
les
push
mov
lds
aam
or
sub
test
and
mov
and
lds
cmps
mov
aam
or
or
dec
inc
push
nop
jg
loope
and
leave
mov
mov
and
push
(bad)
adc
and
and
cmp
loope
add
and
jg
push
jb
dec
and
aaa
hlt
fs
inc
mov
adc
daa
cmp
fistp
add
cmps
push
pop
xor
xchg
cli
loopne
mov
adc
shl
jno
sets
pop
cmps
sub
adc
and
imul
imul
and
ins
imul
test
scas
cmps
lds
(bad)
hlt
call
xchg
add
aam
out
retf
mov
push
test
(bad)
cmp
lds
iret
sbb
or
inc
mov
aam
call
sbb
inc
and
and
xchg
inc
dec
dec
xchg
in
js
in
jle
mov
and
fmulp
push
jmp
aam
ret
add
adc
clc
rcr
stc
pop
ja
jno
loopne
rcr
arpl
aam
push
dec
sbb
pop
mov
std
imul
mov
lock
jae
inc
adc
dec
fdivr
cld
ret
jo
ins
and
loopne
dec
mov
and
or
jno
imul
sbb
add
mov
jo
arpl
int
xchg
xlat
sbb
xor
dec
adc
pop
xchg
cwde
sbb
push
outs
adc
rcr
iret
test
sbb
and
mov
jmp
pop
push
cs
shl
mov
popf
fwait
(bad)
rcl
sahf
sub
lds
adc
mov
mov
sub
and
pop
xchg
or
cli
jmp
ins
ja
fmul
push
addr16
lahf
inc
push
pop
push
(bad)
das
in
les
mov
cmp
cmp
jns
ss
(bad)
or
jmp
bound
aam
inc
lds
pop
pop
xor
fst
call
outs
adc
xchg
sbb
(bad)
sbb
pushw
cmp
ins
mov
pslld
les
push
call
gs
pop
shl
dec
ins
clc
leave
sbb
sar
and
outs
add
xor
in
xchg
jno
loopne
xchg
inc
jno
jmp
aam
ins
sti
les
and
mov
das
call
adc
dec
call
cs
adc
les
stos
mov
cmp
idiv
inc
addr16
adc
dec
push
or
adc
data16
out
dec
sti
in
add
fcom
adc
icebp
push
retf
adc
jo
add
cmp
or
dec
loopne
inc
pop
lds
fptan
scas
pop
add
push
sub
call
pop
add
sbb
shl
mov
push
inc
test
les
int3
stc
push
or
les
dec
and
push
mov
rcl
jmp
out
jg
jmp
xchg
mov
les
(bad)
popa
rcr
cmpxchg
dec
jb
sbb
add
(bad)
into
in
jbe
add
imul
cld
psllq
(bad)
xlat
and
inc
sub
into
inc
rcr
icebp
les
aam
(bad)
in
cmp
cmp
rcr
inc
repz
mov
mov
xchg
add
cdq
mov
mov
in
and
les
xchg
push
ret
cwde
test
les
mov
leave
xchg
cld
div
dec
lss
sbb
cmp
mov
leave
retf
adc
jg
sahf
loopne
cmp
adc
cli
imul
les
out
push
pop
ret
cs
mov
je
push
retf
retf
aam
fstp
popf
aad
mov
fadd
addr16
enter
fld
arpl
cmp
cli
xchg
fadd
inc
repnz
(bad)
(bad)
test
push
loop
addr16
loop
or
(bad)
sub
mov
into
(bad)
mov
out
cld
or
les
jns
fnstenv
shr
jg
sbb
mov
mov
leave
adc
adc
aam
cli
mov
ret
xchg
and
ins
lods
inc
pop
lods
stos
(bad)
in
sbb
pop
pop
jmp
adc
inc
in
rol
inc
(bad)
pop
rol
adc
es
fld
data16
adc
leave
cld
sub
push
mov
cmp
xchg
push
dec
add
xchg
and
inc
push
xchg
adc
int3
out
pop
(bad)
adc
mov
sahf
and
das
mov
retf
les
mov
dec
repz
retf
inc
dec
outs
pop
and
leave
ret
jg
ja
mov
leave
sub
stos
mov
cmp
dec
mov
push
mul
(bad)
push
retf
mov
xor
mov
xor
mov
xor
pushf
ret
into
es
dec
iret
mov
ins
and
inc
(bad)
jmp
fwait
scas
cmp
js
jmp
(bad)
sar
add
test
cmp
dec
test
les
mov
mov
mov
xchg
dec
add
std
pop
mov
rol
mov
faddp
mov
mov
fs
dec
mov
and
outs
inc
jmp
lods
mov
(bad)
jae
cmp
pusha
mov
push
or
lods
stos
mov
dec
and
into
dec
arpl
test
inc
sub
sub
dec
jp
mov
xor
adc
je
add
imul
inc
hlt
mov
mov
adc
fwait
dec
pop
mov
or
inc
leave
pusha
mov
ret
cmc
cmc
jg
and
lock
cli
xor
or
or
mov
mov
pop
popa
adc
inc
enter
sahf
sbb
inc
sahf
shl
ret
or
sahf
shl
ret
mov
mov
pop
jns
push
inc
or
pusha
xchg
xor
mov
xor
mov
xor
dec
(bad)
inc
(bad)
push
lds
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
jne
dec
pop
mov
jae
mov
xor
mov
xor
out
dec
cmp
fsub
jbe
push
mov
inc
xchg
mov
cmp
xchg
xor
test
cmps
sbb
stc
jp
ja
dec
aad
cmp
pop
rol
add
mov
fild
lds
xor
jae
inc
inc
sub
xor
push
add
and
jmp
adc
mov
xchg
xor
cmp
cmp
xchg
and
ins
sub
push
lds
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
jne
mov
cmp
xor
outs
lods
pusha
xchg
jnp
sub
retf
test
and
popa
jmp
add
pop
jbe
fidivr
jp
int
dec
dec
ds
les
or
icebp
(bad)
sbb
movs
jp
xor
scas
inc
pop
inc
leave
repz
adc
in
pop
adc
xchg
cli
sbb
push
out
movs
fistp
push
les
sbb
mov
out
in
out
rep
sbb
inc
dec
xor
adc
popf
movs
fistp
les
mov
ss
sbb
mov
pop
scas
xor
shr
mov
cli
pop
daa
das
or
push
imul
or
cmc
repz
cmp
mov
mov
and
or
inc
gs
into
pop
jb
push
in
pushf
mov
dec
sub
fwait
mov
lahf
dec
outs
outs
jno
stos
cmp
addr16
stos
adc
xchg
pop
xor
push
sbb
inc
and
imul
aad
pop
test
pop
fnsave
mov
scas
and
sbb
sub
not
arpl
out
std
outs
mov
xchg
xor
sti
adc
mov
sbb
jb
push
int3
xchg
jb
hlt
xchg
adc
dec
push
(bad)
(bad)
scas
xchg
neg
(bad)
cmp
xchg
out
mov
jb
aam
mov
push
pusha
cmp
jnp
inc
push
ja
pop
loop
gs
xchg
xchg
mov
sub
mov
xor
js
leave
xchg
jl
xrelease
pop
aas
xchg
mov
shr
add
cmp
add
iretw
mov
leave
and
jo
dec
imul
pop
repz
leave
sets
sub
adc
scas
mov
pop
and
inc
dec
jo
cmovns
adc
push
das
dec
stc
xchg
dec
test
(bad)
int3
cmp
push
in
inc
inc
shl
or
paddq
sti
xchg
add
sbb
or
fiadd
loopne
mov
in
shl
js
adc
adc
jmp
jecxz
mov
out
sbb
dec
call
pop
inc
inc
daa
sbb
cmp
(bad)
jecxz
sbb
out
and
or
xchg
in
cmp
cmp
dec
fimul
mov
adc
cmps
stos
(bad)
hlt
(bad)
fcomip
(bad)
rol
loope
xor
retf
lds
xchg
push
fistp
sub
pop
pop
ins
(bad)
mov
lods
pop
(bad)
adc
or
sbb
pusha
add
or
pop
cmp
loope
xchg
popa
lock
adc
nop
int
je
inc
inc
stc
cwde
or
mov
leave
lds
jae
out
jl
xor
inc
adc
loopne
shl
fstp
mov
fisttp
mov
adc
cmp
ds
dec
mov
cwde
jmp
jl
add
ret
fwait
dec
scas
jg
cdq
inc
inc
fs
mov
bound
data16
and
cli
add
daa
xchg
xor
fidiv
cld
sbb
add
call
jge
shl
ja
call
mov
mov
cmp
icebp
cmps
dec
out
jp
add
ins
cmps
xchg
pop
ins
sub
sar
(bad)
int
dec
cmps
leave
in
mov
add
ficomp
pop
adc
js
jnp
pop
lods
pop
mov
mov
aam
ret
loopne
pop
in
cmp
hlt
dec
push
xor
pop
or
add
hlt
in
ins
(bad)
ficom
and
adc
repnz
jns
or
dec
pusha
stos
mov
mov
ficomp
aad
jp
mov
shl
test
and
mov
js
sub
je
pop
push
ds
js
gs
aad
stos
sbb
lds
xor
shl
div
xchg
inc
xchg
ror
jo
call
jno
ret
mov
inc
push
mov
mov
jmp
or
push
jmp
mov
inc
mov
mov
mov
fsubrp
mov
enter
or
movs
jecxz
mov
push
repnz
jecxz
push
inc
mov
push
push
aaa
outs
mov
mov
ret
ja
sbb
(bad)
stos
push
mov
outs
mov
push
fs
out
ss
or
xor
lods
sub
std
call
add
sub
div
aam
ret
ss
add
cmp
aam
cwde
fbld
add
ror
js
test
xor
fcom
pop
cmc
loop
cmp
or
mov
mov
pop
scas
push
dec
push
cmp
pusha
or
push
xchg
inc
cmps
sbb
cli
pop
adc
shr
std
add
cld
jmp
repnz
mov
je
cld
ja
inc
xor
test
mov
les
xor
xchg
rol
loope
ins
mov
rcr
lods
mov
scas
cs
mov
mov
or
(bad)
jmp
mov
loop
mov
jo
inc
fsub
fcom
mov
sbb
xor
mov
addr16
retf
or
inc
out
mov
int
jle
idiv
neg
mov
add
mov
inc
sbb
push
fadd
cmp
popa
popf
xchg
add
cmp
shl
call
push
mov
pop
in
ret
test
sub
xchg
xchg
mov
and
imul
(bad)
sbb
jle
fs
jnp
arpl
push
gs
mov
inc
jbe
jno
mov
jmp
data16
jge
sub
(bad)
mov
jmp
scas
fsubr
cmp
sti
(bad)
xor
sub
movs
push
cld
cs
(bad)
repnz
into
xchg
fwait
xchg
inc
push
push
aam
movs
imul
dec
cld
mov
nop
stc
(bad)
pop
inc
test
adc
in
pusha
fidivr
gs
xchg
mov
idiv
inc
outs
inc
dec
in
pop
jno
add
push
and
xor
adc
jl
inc
in
aas
push
nop
(bad)
dec
or
mov
cmp
dec
std
retf
sub
pusha
popa
jmp
push
in
into
inc
gs
sub
and
fs
jb
mov
sar
nop
(bad)
aad
out
mov
in
push
test
xor
retf
aam
sbb
dec
cmps
adc
mov
mov
xchg
and
out
arpl
sahf
(bad)
push
lahf
sbb
call
pop
sub
cmp
call
pop
mov
jmp
and
lock
xor
lods
inc
jl
adc
jmp
jnp
jge
cmp
or
sahf
lea
movs
dec
outs
sub
gs
out
mov
xor
mov
scas
jne
jno
fxch
and
es
repz
xchg
movs
movs
outs
mov
push
es
mov
cs
mov
cmp
outs
jle
(bad)
sahf
ret
jp
retf
push
in
xor
jp
and
mov
cmp
out
pop
addr16
push
pop
fst
xchg
enter
mov
mov
xor
pop
call
mov
push
xchg
popa
adc
push
mov
ins
mov
ret
out
cmp
cmp
dec
mov
pushf
sub
popa
sub
repnz
push
or
test
(bad)
test
and
jp
js
je
cld
punpckhwd
xchg
rcr
jae
cmps
and
jmp
cmp
stos
pop
sbb
gs
shr
xor
icebp
pop
in
movs
mov
rol
mov
in
aas
pop
or
mov
in
popa
push
add
retw
mov
sbb
out
add
ins
adc
mov
(bad)
cmps
arpl
adc
jae
scas
fisub
punpckhbw
adc
in
popf
cmps
cdq
fbstp
ins
ins
inc
or
retf
jbe
outs
movs
xchg
add
std
shl
repz
and
(bad)
jb
add
movs
mov
sbb
pop
lods
test
or
jo
mov
push
cmp
sahf
hlt
imul
push
inc
ret
arpl
(bad)
ficomp
and
sub
out
jmp
std
adc
in
dec
in
dec
sub
div
cmps
sahf
outs
add
cmp
jmp
sbb
icebp
fnstenv
mov
sbb
cmp
ret
push
ds
inc
mov
int3
nop
ret
cmps
lds
aaa
cmp
sti
in
mov
scas
(bad)
dec
fdiv
xchg
or
add
mov
add
dec
jge
aaa
pop
scas
sbb
sub
xchg
enter
and
nop
xchg
and
jg
and
rcl
adc
ss
leave
cmp
adc
lea
shl
je
cld
jne
add
mov
jo
xchg
in
add
and
or
in
add
mov
jns
sub
jb
pextrw
sbb
out
mov
and
push
lsl
inc
sahf
outs
sbb
and
push
into
dec
mov
out
add
fbstp
call
(bad)
cmp
fstp
mov
cmp
or
inc
pop
shl
fwait
push
cwde
and
xor
inc
test
call
lahf
and
test
iret
(bad)
lahf
pop
mov
add
cli
push
push
mov
push
fld
push
jne
and
mov
fdiv
sahf
pushf
mov
loopne
push
and
ins
lods
nop
dec
xor
ror
pop
test
add
xchg
(bad)
scas
jg
rcl
lahf
idiv
les
lds
cmps
out
lods
jnp
pop
xchg
add
jae
in
scas
and
inc
pop
sbb
mov
push
popa
push
pusha
sbb
imul
in
adc
add
sahf
jp
loopne
fs
pushf
scas
cmp
imul
test
xor
out
ret
mov
test
outs
and
mov
sbb
jge
fcom
mov
cld
inc
mov
xchg
shl
jecxz
(bad)
push
bound
jmp
jg
ror
jl
repnz
(bad)
xchg
jno
cmp
(bad)
ror
or
push
jmp
xchg
loope
movs
mov
jge
jmp
in
cdq
fcom
pushf
sar
xcrypt-cfb
cmps
cmps
cmp
mov
cmps
push
test
mov
or
jne
jb
or
cmp
cwde
(bad)
cmp
dec
popf
dec
gs
mov
mov
scas
ins
sbb
movs
in
ret
(bad)
fnstcw
cmps
pop
sub
out
popf
jl
das
repnz
or
or
push
sub
add
dec
ja
pushf
add
mov
std
pop
les
lds
push
fs
popa
sub
lds
push
cmp
sbb
das
pushf
fcmovnbe
sti
sahf
mov
cmp
inc
call
pop
pop
aam
push
leave
arpl
cmp
ret
xor
std
in
jo
sub
push
fucom
cmp
lahf
sbb
repz
and
dec
inc
xchg
pop
(bad)
aad
fimul
repz
mov
xchg
out
xor
cdq
retf
cmps
setno
xor
es
mov
dec
jb
push
fnstenv
xchg
adc
add
popa
outs
iret
and
inc
mov
pop
cmp
push
daa
or
push
dec
adc
dec
enter
adc
dec
test
xchg
iret
lock
inc
inc
mov
adc
mov
jg
int3
cli
xchg
adc
jne
pusha
cld
ja
jbe
nop
inc
mov
push
clc
aad
(bad)
or
daa
inc
ror
mov
int3
mov
call
icebp
cli
test
fdivr
das
xchg
loop
mov
add
jl
or
and
dec
retf
shl
mov
(bad)
sar
stos
ja
or
jl
popa
fwait
and
lea
jmp
mov
in
push
stc
dec
(bad)
dec
call
movs
cmps
pop
or
pop
xor
mov
adc
xchg
stc
and
push
ds
fadd
push
inc
jb
push
sbb
outs
outs
xlat
std
mov
or
push
scas
pop
jae
jge
scas
mul
outs
dec
lods
out
push
xor
pushf
jnp
addr16
xchg
clc
aad
and
sar
jnp
ret
adc
sbb
inc
sbb
in
mov
shl
dec
jbe
imul
xchg
seto
(bad)
adc
and
inc
adc
jp
push
dec
pop
push
and
scas
or
inc
jo
loope
movntps
sahf
mov
outs
sbb
ror
cmp
call
mov
shr
xchg
dec
xchg
or
inc
cmp
mov
and
shl
and
mov
mov
les
pop
cmc
xor
and
daa
and
inc
sub
outs
cld
in
neg
push
jle
pushf
data16
adc
in
or
push
jbe
sub
test
loopne
cmp
cmp
ds
call
sub
imul
ja
mov
arpl
test
sub
scas
stc
xor
adc
or
fbstp
push
push
pop
mov
in
cmp
neg
daa
cmp
int3
mov
push
addr16
push
fdivr
pop
xor
mov
and
cwde
push
or
mov
ret
out
push
imul
inc
xor
lahf
nop
sub
ins
add
jne
jge
std
lea
lds
pop
add
lea
or
xchg
scas
push
inc
test
cmc
sub
mov
les
jle
jmp
jae
enter
dec
jle
mov
shl
les
xor
stos
sub
repnz
int
mov
xchg
push
ins
xor
or
jmp
dec
nop
sbb
mov
neg
fcomp
jmp
inc
push
jne
ds
rcr
fcom
xor
lea
dec
aaa
sub
stc
in
call
ss
mov
cld
jmp
ins
cld
lock
xor
sbb
sub
(bad)
cmp
ret
je
jmp
mov
scas
pusha
dec
inc
jge
pushf
xchg
mov
pop
inc
arpl
repz
sub
pop
mov
adc
lds
xchg
cwde
cs
mov
stc
push
test
stc
jecxz
jp
ins
adc
arpl
es
pusha
lahf
xchg
pop
jmp
fld
lea
inc
retf
sbb
pop
cmp
pushf
sbb
cmc
jg
cmp
jns
cmc
shr
push
dec
push
sbb
push
push
inc
aad
retf
cmc
call
and
mov
xor
dec
jmp
push
inc
or
push
xchg
out
pop
imul
add
fcomp
mov
add
pcmpgtw
xchg
cmp
sub
iret
push
push
and
jo
push
push
nop
lods
shr
sbb
mov
pop
retf
mov
je
add
or
mov
retf
inc
retf
sub
adc
inc
scas
pop
gs
test
call
push
popa
push
sti
cld
inc
repnz
push
pop
aad
js
or
sbb
cmp
adc
cwde
pop
sbb
scas
jb
shrd
adc
int
inc
fmul
stc
in
push
leave
lock
add
xor
and
jge
dec
scas
add
mov
in
mov
jge
or
cmc
fcmovnbe
js
ja
aam
sub
addr16
(bad)
dec
adc
dec
mov
test
pop
sbb
or
std
ror
cwde
jp
scas
jo
push
fist
inc
fldpi
inc
jmp
out
dec
imul
sti
dec
xchg
mov
inc
xor
sub
mov
push
mov
dec
xor
pop
dec
cmp
dec
ficomp
mov
xchg
ins
movs
test
in
ret
mov
jmp
test
(bad)
sti
push
jne
xor
jo
fisubr
or
xor
loopne
retf
aam
pop
in
das
push
cli
pop
dec
sub
fdivp
pop
push
push
add
mov
les
lahf
pop
arpl
out
aad
imul
jmp
int3
mov
mov
xchg
lahf
jmp
pop
mov
inc
cmps
cli
inc
add
fidiv
fmul
call
(bad)
pop
pop
cdq
fisub
ins
adc
adc
test
xor
test
pop
idiv
cdq
cmc
pop
mov
js
jo
pop
xor
movhps
push
push
mov
or
dec
add
xor
dec
rcl
sub
xchg
retf
dec
mov
mov
mov
fcomi
mov
jmp
dec
clc
imul
adc
(bad)
nop
dec
cmp
jbe
mov
inc
imul
xor
aad
pop
outs
mov
bound
mov
cmps
shr
ins
mov
(bad)
scas
mov
jb
inc
xchg
pop
xor
cli
int
push
or
and
jle
dec
adc
repz
push
adc
nop
mov
test
jno
pop
sub
nop
cs
and
xchg
rcl
cmps
call
xchg
xor
jg
shl
popa
xchg
arpl
sbb
call
add
dec
push
dec
jmp
clc
jle
out
sbb
mov
inc
xor
cmps
cld
mov
xchg
xor
les
xor
jbe
(bad)
(bad)
stos
cmps
push
xchg
pop
jl
pop
mov
adc
pop
mov
out
cmp
dec
mov
das
retf
xchg
or
dec
xchg
mov
pusha
pop
outs
dec
iret
into
mov
lds
jl
mov
(bad)
dec
sub
das
adc
push
push
popa
mov
aas
cli
push
dec
jno
fst
test
int3
push
stos
sahf
imul
dec
lock
adc
sbb
hlt
and
pop
mov
movs
out
and
add
fadd
mov
jno
lock
call
inc
fldenv
icebp
add
nop
or
pop
add
add
icebp
in
rcr
iret
sbb
ja
mov
mov
pop
xor
scas
mov
inc
cmps
xchg
in
and
aam
mov
dec
gs
aam
sub
add
add
jl
cmp
xchg
test
cmp
gs
std
mov
dec
mov
and
shl
lods
add
out
pop
mov
xchg
jbe
sbb
adc
sar
call
inc
and
pop
xor
dec
ins
mov
push
mov
jle
adc
sub
and
jns
mov
mov
inc
mov
(bad)
pop
adc
retf
mov
sti
mov
sti
ret
les
pop
mov
pop
or
or
inc
mov
inc
or
xor
adc
mov
cmp
xor
mov
inc
dec
and
loop
push
call
shr
fdiv
cmp
push
js
retf
push
jae
das
sub
mov
retf
push
cmp
pop
lods
push
mov
iret
cmc
push
add
aad
adc
or
pushf
(bad)
inc
int3
push
imul
adc
mov
jmp
sub
sub
aad
cmp
xchg
mov
adc
enter
add
dec
repz
push
ret
loope
mov
push
mov
mov
(bad)
pop
xchg
dec
call
pop
push
or
out
arpl
inc
mov
xchg
sahf
movs
sbb
and
xchg
or
icebp
jmp
sbb
push
sbb
js
adc
cld
in
jns
xchg
fiadd
mov
xchg
sbb
mov
scas
idiv
loope
xor
cs
(bad)
in
cmp
std
adc
mov
pusha
xchg
pop
sbb
mov
addr16
test
and
adc
in
stos
jge
mov
mov
popf
push
(bad)
test
shl
jb
xchg
push
dec
sbb
psubusb
sub
dec
out
mov
pop
mov
and
imul
mov
(bad)
ftst
hlt
neg
fs
lods
pop
dec
xchg
mov
push
js
jae
xchg
lahf
fwait
push
lock
or
repnz
pop
(bad)
and
ret
sbb
imul
lock
sub
add
(bad)
jae
in
enter
lods
lods
ds
fidiv
sub
sub
(bad)
mov
or
(bad)
xchg
push
sbb
jmp
xor
push
xor
mov
xchg
jnp
push
dec
xchg
add
fs
out
inc
fsub
add
push
dec
adc
jnp
idiv
mov
retf
xchg
and
std
xor
loop
mov
jecxz
ds
adc
push
xor
or
add
fmul
ja
shr
add
in
pushf
ret
cmp
inc
scas
movs
and
add
out
(bad)
retf
or
sbb
stc
or
dec
call
stc
(bad)
sub
adc
call
xor
nop
mov
push
repnz
dec
sti
stc
dec
pop
xor
xchg
hlt
enter
nop
xor
mov
xchg
mov
aas
test
sti
pop
sbb
pop
rol
push
push
or
loope
test
pslld
push
xchg
mov
jb
jo
jg
mov
test
bound
jns
mov
pusha
lahf
jno
popf
std
cs
(bad)
jae
(bad)
data16
(bad)
call
push
cmps
jp
xchg
in
dec
sub
jb
imul
and
iret
inc
enter
inc
inc
stos
xchg
scas
ret
xchg
adc
idiv
ins
ret
imul
cmp
and
(bad)
and
rcl
jmp
stos
ficomp
bound
cmp
ss
xchg
cmps
sub
pop
test
pop
ror
sub
jecxz
push
sbb
stos
outs
xchg
nop
jl
shl
inc
and
out
jg
(bad)
add
pop
leave
fild
pop
xchg
or
push
jmp
retf
movs
jmp
xchg
cmp
inc
mov
inc
ror
xor
std
jns
pop
inc
imul
cdq
push
xor
jecxz
aas
inc
mov
push
int
stos
dec
repnz
sbb
in
pop
gs
inc
(bad)
jg
stc
test
push
pop
hlt
mov
aaa
or
ror
shl
cmp
xchg
std
sbb
cmc
jb
out
or
mov
pop
nop
nop
js
mov
enter
in
les
lahf
mov
xchg
jb
scas
add
mov
jbe
mov
pushf
and
(bad)
sahf
pop
nop
xor
push
sub
dec
fisubr
cmp
fs
into
inc
aas
fld
(bad)
retf
push
mov
lods
aad
(bad)
or
dec
in
push
in
pop
push
pop
scas
pushf
xor
mov
inc
icebp
and
mov
cmps
mov
mov
xor
cmc
outs
ds
out
movs
pushf
test
ins
xor
cmc
mov
aad
push
sar
(bad)
loope
shl
adc
sbb
adc
cmps
xchg
dec
xchg
lds
out
lods
into
cmp
add
ds
add
outs
rcr
jle
xchg
neg
jae
mov
push
push
out
nop
and
push
jp
pop
xor
aas
or
adc
clc
xor
mov
in
scas
int3
push
ins
sub
jg
push
sbb
pusha
mov
cmc
aam
and
fmul
push
pop
bound
into
arpl
sub
xor
jp
ret
push
sub
movs
arpl
inc
aaa
in
retf
leave
adc
stos
inc
xchg
cmp
xchg
ret
ret
dec
or
jae
loopne
sub
in
pop
mov
pop
enter
and
mul
cmc
pusha
dec
ret
push
pushw
adc
inc
pop
dec
adc
ins
and
sbb
and
cmps
mov
lds
add
fdiv
inc
adc
mov
arpl
pop
mov
cmp
rcr
es
sti
imul
std
inc
into
push
cmp
pop
pop
les
sbb
sub
outs
push
cmp
and
jge
in
add
outs
loope
cdq
gs
mov
ret
loope
dec
mov
test
sbb
push
inc
adc
pop
push
adc
and
rcl
jmp
or
xchg
mov
stc
mov
cmp
or
mov
push
and
popa
loopne
test
scas
retf
and
or
in
jmp
cmp
pop
dec
das
pop
jnp
movs
nop
pop
test
xchg
adc
and
sub
loope
mov
test
push
pop
imul
cmps
sbb
push
stos
addr16
dec
addr16
push
push
xchg
sub
mov
test
gs
ins
mov
mov
sub
adc
in
and
mov
call
out
and
jmp
sbb
mov
dec
mov
ret
std
dec
fmul
fsubr
inc
inc
movs
jle
scas
xor
lds
stos
ror
es
sub
adc
fwait
scas
jmp
shl
dec
movs
jge
sar
jne
jo
cmp
mov
pushf
adc
ds
mov
div
xor
adc
and
mov
inc
jp
sbb
cmp
ss
shl
test
lds
sub
outs
cmp
xchg
adc
mov
je
pop
pop
ins
push
ss
repnz
and
movs
jmp
test
or
sub
sub
ret
mov
(bad)
xor
lahf
movs
adc
sub
pop
jl
daa
xchg
lock
sbb
pop
not
jg
or
push
jp
imul
dec
pop
fwait
mov
std
idiv
jmp
lods
icebp
arpl
or
fstp
inc
push
dec
ret
(bad)
fs
xchg
and
int
or
idiv
adc
xchg
imul
sub
sbb
inc
pop
inc
sbb
sub
push
xchg
adc
mov
pop
jnp
sub
mov
ds
movs
or
pusha
xor
and
ds
data16
inc
pop
xor
mov
movs
jo
sub
imul
mov
dec
mov
mov
xchg
cs
pusha
ficom
inc
inc
in
inc
das
xchg
int3
jle
icebp
js
repnz
fwait
sub
add
jbe
out
xchg
movs
(bad)
pop
lahf
add
cmc
push
inc
(bad)
aam
or
mov
adc
pop
cli
and
or
pop
xchg
or
cmp
mov
xchg
and
repz
fwait
sub
adc
hlt
retf
jge
jne
ja
hlt
test
imul
push
gs
out
pop
mov
outs
outs
jno
push
int
push
sub
cmps
ja
mov
(bad)
into
daa
call
push
popf
fcomp
aaa
jmp
cld
add
xchg
mov
iret
and
shr
jle
scas
dec
sahf
mov
pop
jae
add
cmp
aam
pusha
mov
inc
ficomp
inc
rol
out
xlat
div
jb
xor
clc
shl
or
fcomp
sbb
jge
daa
and
push
cdq
cmp
cmps
mov
js
inc
and
inc
xor
sbb
xchg
inc
or
add
inc
inc
fld
out
adc
sbb
inc
pushf
mov
jnp
fild
(bad)
push
test
dec
dec
lods
sub
jne
pushf
(bad)
emms
(bad)
fld
push
aad
stos
push
jl
arpl
sub
add
jle
pop
jle
in
xor
fdiv
test
scas
out
jge
ret
mov
mov
jle
sub
retf
icebp
xchg
adc
jne
push
sub
retf
sub
enter
xchg
test
jae
mov
aad
call
int
cmp
stos
add
mov
ins
scas
in
jae
je
mov
mov
cmp
test
xor
xchg
outs
sbb
cmp
xchg
arpl
mov
dec
mov
xchg
pop
jnp
xchg
add
ins
and
fld
sub
aad
push
popf
add
xchg
add
mov
push
jae
sahf
lods
cmp
fs
mov
xchg
pop
inc
ja
adc
push
xor
out
in
add
push
popa
jl
pop
mov
xor
std
xchg
clc
test
inc
or
cmp
xchg
pusha
js
adc
jnp
adc
stc
add
jmp
inc
(bad)
mov
mov
stos
sti
jp
lods
adc
sbb
xchg
mov
frstor
push
cmc
stos
push
shl
push
push
fcomp
add
mov
pop
into
int3
mov
push
call
mul
stos
mov
dec
(bad)
and
jnp
mov
mov
pusha
into
xchg
mov
xor
ficom
mov
push
jb
jbe
mov
jbe
push
(bad)
daa
pop
daa
stos
les
jmp
and
lods
fisttp
adc
xor
in
inc
fldenv
sub
(bad)
adc
jb
scas
cs
lods
dec
retf
push
ins
fist
(bad)
pop
or
lods
out
stos
mov
lahf
loopne
mov
pop
ins
cmp
cmp
adc
inc
shr
mov
or
push
adc
mov
sbb
aaa
fwait
scas
and
mov
or
jg
push
cmp
sbb
pop
jb
in
mov
cmp
mov
gs
add
fisttp
xlat
fwait
aaa
xchg
mov
cdq
dec
inc
pop
aam
and
test
lds
mov
mov
sti
sbb
pop
push
add
mov
test
loopne
clc
adc
idiv
jb
cmp
mov
je
fisubr
loopne
push
inc
aad
clc
add
outs
cmc
pop
sub
in
lods
xor
inc
into
mov
cs
repz
lods
xchg
mov
sbb
dec
int
adc
sub
adc
lahf
inc
pop
jg
sbb
pop
add
sub
cld
xchg
xchg
dec
xchg
and
xor
cmps
cmps
popa
mov
mov
stos
fmulp
fldcw
popa
mov
sbb
mov
stos
xchg
loopne
out
push
mov
loope
sub
dec
mov
test
jae
(bad)
push
pop
shr
mov
sahf
mov
add
fdivr
push
mov
cmp
inc
mov
adc
(bad)
in
add
add
add
xor
int3
stc
das
mov
push
and
or
fadd
lods
shl
int3
data16
loopne
cld
lahf
imul
push
or
jne
test
call
jb
xlat
idiv
out
fcomp
scas
jecxz
xor
cs
and
mov
dec
xlat
push
int3
pop
mov
push
movs
or
xchg
icebp
call
inc
(bad)
jp
lahf
loop
(bad)
js
sub
gs
leave
mov
mov
vmwrite
mov
dec
mov
xchg
sbb
loopne
or
icebp
push
dec
mov
daa
adc
pop
rcl
xor
or
sbb
push
rol
into
mov
in
je
imul
inc
jno
pop
mov
shl
mov
fdiv
push
push
pop
(bad)
sub
dec
add
sti
mov
jbe
push
mov
imul
test
mov
cli
daa
dec
iret
cdq
rcl
das
and
frstor
test
ins
push
jo
data16
dec
enter
or
je
jbe
(bad)
(bad)
jecxz
dec
test
jle
outs
inc
in
or
bound
cmp
push
fs
jo
xor
jp
sub
cli
data16
fwait
test
inc
sbb
int3
push
movs
jbe
sar
imul
out
mov
pusha
inc
mov
jle
xchg
mov
stc
mov
pop
mov
xchg
inc
cmp
rcl
sub
scas
push
mov
xchg
sub
movs
cmp
inc
sub
or
sbb
call
arpl
bound
xor
and
loope
jp
mov
lea
inc
cmp
es
lock
adc
ret
xlat
pextrw
or
xchg
mov
test
and
repz
add
sti
prefetch
add
sub
(bad)
das
cmp
call
jg
(bad)
sbb
stos
push
mov
mov
frstor
adc
cs
pop
push
inc
and
and
dec
mov
arpl
fprem1
cmps
stos
mov
cdq
popa
daa
add
or
sub
mov
inc
and
mov
pop
mov
push
sub
stos
dec
xor
dec
movs
out
(bad)
(bad)
push
jp
and
call
nop
xor
inc
xor
test
inc
xor
daa
nop
adc
movs
cmp
jnp
xor
sar
outs
push
les
iret
(bad)
xor
xor
sub
mov
shr
(bad)
cs
cmp
inc
mov
inc
retf
cld
in
push
cmc
sbb
dec
sbb
loope
pop
pushf
test
sbb
mov
add
shl
out
lods
mov
mov
cmps
xor
xlat
stc
and
sub
and
je
imul
dec
mov
out
cmps
in
pop
jmp
cli
dec
addr16
inc
mov
mov
fdivrp
cdq
ins
mov
lea
pop
les
dec
pusha
icebp
into
and
mov
stos
rol
cmp
gs
add
mov
add
push
and
cld
jl
ja
add
fdivr
pushf
push
test
fst
popa
add
jo
pop
cwde
cmp
and
or
aas
fbld
mov
adc
cld
inc
dec
out
mov
icebp
sbb
ret
xchg
dec
pop
das
sbb
mov
cmp
add
retf
push
and
cmp
movs
movs
fs
dec
sbb
sub
push
leave
push
and
xor
lock
shl
ret
and
cmp
fcomip
sub
pop
cmp
lods
(bad)
movs
leave
xchg
inc
mov
test
movs
adc
dec
mov
nop
pop
pop
bound
push
fs
outs
adc
aaa
jecxz
in
aad
std
and
ins
adc
ins
adc
pusha
cmp
push
cwde
add
adc
(bad)
in
mov
js
retf
jp
pop
sbb
lahf
test
mov
cmps
mov
stos
out
cdq
sub
push
(bad)
rcl
cli
mov
add
js
xor
shr
div
popf
(bad)
test
out
enter
rcr
jl
js
pop
rcl
or
sbb
stos
and
jg
mov
add
fmul
test
inc
xor
je
and
in
ret
test
sbb
xor
xor
sbb
lods
mov
mov
loope
push
or
jecxz
xor
mov
data16
retf
movs
xchg
mov
jl
in
mov
sub
xor
inc
push
jae
mov
jge
pop
(bad)
xor
loopne
mov
stos
adc
les
scas
lods
cmp
loopne
ds
dec
push
ror
(bad)
pop
ja
(bad)
enter
mov
xchg
jecxz
xor
sbb
cs
xor
mov
mov
mov
cmps
mov
add
mov
aaa
inc
sbb
call
mov
mov
cmp
sub
push
cmp
in
mov
adc
aas
loop
jmp
xchg
jg
dec
sub
pop
add
mov
xor
gs
es
cmp
shl
mov
sar
mov
fisttp
push
cmp
jbe
repz
or
and
mov
push
ins
mov
repnz
mov
retf
lea
sub
inc
xchg
cmc
call
loopne
lock
push
ffree
in
jo
dec
inc
sub
add
in
jmp
(bad)
xor
mov
into
ja
jbe
mov
in
test
fmul
mov
dec
mov
xor
mov
sbb
xchg
cwde
and
mov
xchg
aas
outs
push
mov
lods
mov
(bad)
(bad)
test
and
mov
js
cmp
sub
xchg
inc
sub
in
sub
lods
int3
in
ror
xor
mov
add
mov
push
mov
xor
push
adc
adc
mov
fisttp
das
outs
jne
and
xchg
enter
ret
mov
imul
mov
fcomp
push
nop
xchg
and
xchg
xchg
scas
shl
pop
or
mov
pop
je
dec
arpl
mov
retf
cmp
pop
and
stos
xchg
lods
aam
cli
cmp
fist
hlt
dec
fwait
dec
repnz
fsub
xor
mov
jne
pop
int3
jl
mov
mov
test
pop
scas
xor
push
popa
jbe
mov
jg
imul
mov
jno
cmps
jae
call
mov
ins
inc
mov
mov
adc
test
xor
shl
mov
jmp
cmps
sbb
xchg
pusha
sbb
push
mov
cdq
xor
jns
popf
or
hlt
mov
and
fsub
bound
fld
add
(bad)
rcl
inc
cli
cmc
ret
cmp
mov
xchg
aaa
lock
sub
jnp
cdq
pop
or
sbb
jne
lea
sbb
in
das
and
jg
dec
jbe
mov
jbe
xchg
or
ja
aam
push
dec
psrlw
xchg
or
aad
(bad)
pop
cmp
push
cmp
mov
int3
cld
aam
sbb
push
or
mov
sahf
rol
sahf
push
cwde
aad
push
imul
lods
in
dec
push
cmp
cmps
(bad)
xchg
mov
cmp
int3
js
mov
jmp
add
sub
jae
xor
cmp
and
out
cwde
iret
stc
jmp
enter
cld
out
or
test
pop
jnp
jne
int
push
or
jg
mov
sbb
pop
mov
test
daa
sbb
mov
add
fmul
or
push
adc
pop
mov
xchg
add
(bad)
mov
clc
leave
push
icebp
mov
inc
mov
lods
jb
jns
sub
es
cmp
hlt
lods
imul
in
mov
mov
fdiv
retf
mov
jmp
push
or
iret
pop
dec
in
mov
mov
mov
mov
jns
ins
cdq
inc
call
mov
adc
pop
mov
cmc
pop
push
(bad)
cmp
sub
adc
pop
pop
xor
lahf
test
mov
mov
or
pop
popf
xor
repnz
sub
loope
das
lods
add
in
(bad)
and
je
push
ficom
fist
outs
and
sub
xchg
xchg
inc
pushf
fist
neg
xor
push
pop
mov
jae
fwait
pop
add
add
popf
gs
sub
push
and
mov
pop
sar
sbb
push
int
retf
mov
or
inc
movs
adc
test
in
sbb
in
js
mov
or
inc
test
sbb
jns
retf
pop
mov
pop
xor
fmul
in
push
xor
inc
sbb
fiadd
out
sar
xor
cmps
cld
jns
add
sub
adc
mov
xor
pop
push
clc
outs
call
jge
mov
push
lods
loopne
fld
mov
test
mov
js
std
xor
jnp
push
in
mov
jns
push
movs
jne
xor
out
push
inc
add
lods
dec
dec
adc
popw
adc
jbe
jmp
sub
push
iret
sbb
cwde
repz
dec
stc
mov
in
(bad)
in
mov
push
cmp
or
push
and
call
sub
jmp
dec
mov
sub
cmp
mov
xchg
xchg
fldcw
cmp
imul
inc
mov
mov
or
xor
jecxz
dec
add
minps
adc
jp
rcr
mov
sub
shr
inc
rcr
dec
push
add
push
pop
test
pop
inc
repz
pop
movs
mov
out
and
test
mov
sub
movs
pop
cmp
xchg
cld
sub
popf
cmp
push
(bad)
cmc
cwde
lods
fldenv
adc
and
and
mov
cmps
ror
or
push
in
xchg
ret
les
call
cmp
shr
pusha
stos
pushf
imul
pop
or
dec
sahf
pop
push
jmp
in
add
mov
outs
les
and
add
das
sub
cli
into
je
push
leave
mov
enter
xchg
out
shl
ficom
jge
push
into
sub
fmul
jmp
push
or
jp
ret
push
xchg
ret
sbb
test
outs
imul
push
adc
aam
cmc
or
or
(bad)
push
add
test
into
out
loop
int3
lds
dec
mov
jmp
call
inc
out
xlat
sbb
es
pop
stos
push
xchg
(bad)
mov
outs
ss
sub
and
fld
aas
nop
lds
test
dec
sbb
scas
sub
push
pop
inc
xchg
loop
pop
sub
lea
arpl
ds
pop
cmp
lock
retf
jge
sub
repnz
mov
test
push
and
cli
mov
in
mov
dec
lds
jecxz
out
push
dec
jle
fist
dec
push
inc
daa
stos
dec
mov
mov
test
ret
cmp
push
pop
out
out
and
call
in
sbb
lahf
test
pushf
outs
jl
and
push
scas
inc
mov
jp
daa
loop
cdq
loopne
or
ins
pop
add
add
mov
sub
test
cmp
into
jecxz
mov
mov
pop
mov
outs
mov
cmps
xor
mov
sub
push
sub
adc
push
(bad)
outs
inc
mov
in
sar
sbb
xchg
jae
pop
bound
fsub
divps
ins
pop
stos
leave
add
fcomp
mov
inc
mov
and
push
scas
cmp
add
sub
dec
aaa
rcl
(bad)
lock
lock
or
push
scas
cmp
data16
call
fild
xor
fld
mov
push
jo
aam
cmp
mov
jns
test
addr16
div
ss
adc
pushf
es
and
js
gs
pusha
enter
into
cmp
test
mov
mov
ret
jno
sub
xor
mov
fwait
mov
mov
xor
popa
ds
pusha
test
dec
push
and
push
jge
push
(bad)
stc
mov
mov
js
jp
pop
push
add
cmp
je
inc
inc
xor
pop
pop
cmps
fdiv
jp
and
xchg
add
pop
cmps
int
inc
inc
(bad)
(bad)
iret
imul
fld
inc
mov
mov
dec
and
icebp
inc
cmp
lock
hlt
cli
pop
idiv
jo
ja
add
jnp
xchg
imul
push
mov
push
sbb
frstor
mov
add
sahf
sar
jne
rcr
jns
add
sub
call
retf
call
adc
xlat
repnz
cdq
mov
inc
pop
pop
sub
jmp
mov
pop
dec
hlt
cwde
ror
xchg
cdq
jo
add
mov
cli
push
ret
std
les
pop
fstp
add
pushf
mov
sbb
cmp
xor
push
xor
fcmovu
cmp
mov
adc
gs
pop
cmp
add
xchg
fwait
ss
jmp
mov
lods
stos
sub
(bad)
inc
ret
call
sub
leave
hlt
push
test
xchg
outs
cmp
cwde
outs
inc
pop
cmc
mov
dec
jg
sub
sbb
sub
sahf
inc
adc
mov
cwde
mov
sub
sub
cmps
pusha
adc
das
jg
jb
and
and
cmp
(bad)
shl
jae
test
jl
jle
in
adc
ins
add
ja
movs
mov
inc
cdq
pop
dec
call
jo
inc
mov
bound
pop
ds
fs
mov
mov
icebp
cmps
pushf
lea
fnstsw
mov
jnp
add
(bad)
fdiv
sbb
ss
out
or
out
aas
js
fadd
cmp
sbb
cs
push
dec
fidiv
cdq
jns
inc
mov
mov
mov
in
sbb
scas
pushf
inc
mov
fs
pop
mov
xor
mov
(bad)
out
enter
pop
(bad)
aaa
jne
or
int3
pop
or
inc
sahf
shl
add
lods
cmps
popa
add
push
adc
out
in
aaa
pop
xor
fwait
xchg
jmp
fisub
push
and
mov
test
leave
fs
test
ds
mov
test
repz
xor
stos
push
jnp
int3
xor
ret
inc
rcl
sub
dec
cdq
mov
xchg
jmp
mov
je
ss
pop
mov
xchg
sbb
(bad)
loope
adc
adc
enter
inc
int3
fnstcw
je
adc
add
xor
ret
outs
jns
rcl
mov
push
xor
jno
push
cmp
mov
sti
pop
aaa
repnz
js
inc
nop
xchg
mov
mov
dec
mov
xor
mov
(bad)
sbb
xlat
lods
and
test
add
add
(bad)
lock
xor
in
mov
into
gs
xchg
push
enter
add
adc
retf
sbb
daa
adc
pop
pop
ins
(bad)
jmp
das
ds
adc
push
jns
mov
mov
pop
xor
jo
or
movs
jmp
inc
loop
aaa
in
inc
cmp
scas
shl
mov
movs
adc
test
loop
test
xlat
sti
and
popf
fdiv
cwde
mov
cdq
pop
in
shl
hlt
cdq
cwde
stos
cwde
into
or
fisttp
hlt
fmul
repnz
adc
xchg
inc
xor
in
adc
retf
outs
xor
xchg
int3
jle
cmps
aam
xor
pusha
hlt
mov
xchg
repz
jnp
fcomp
adc
push
jle
ret
call
ins
lock
imul
adc
mov
jp
mov
jg
in
(bad)
aas
(bad)
iret
call
mov
push
pop
xchg
(bad)
daa
jnp
fcomp
push
imul
sbb
repnz
xor
int
pop
pop
and
loope
cwde
scas
scas
loope
data16
sbb
jae
mov
ror
aam
adc
dec
(bad)
repnz
push
dec
ja
mov
sar
sbb
and
push
jno
pop
and
xor
inc
push
jns
inc
(bad)
push
lahf
fdiv
test
stos
mov
je
jno
cmps
dec
sar
dec
push
fld
cmp
scas
sbb
adc
lods
pop
xchg
xchg
mov
xlat
shl
adc
aas
push
push
aaa
xchg
ds
test
jge
sbb
test
shld
inc
mov
xor
mov
stc
nop
mov
std
jns
xchg
(bad)
(bad)
shl
sti
xchg
pop
inc
(bad)
cmp
pop
cdq
inc
jo
jno
in
ss
test
sub
mov
sub
mov
sti
cld
scas
xchg
and
sbb
and
mov
add
dec
jne
mov
(bad)
leave
outs
pop
push
xor
mov
xchg
gs
mov
in
imul
in
inc
lds
sbb
cmp
call
push
fidivr
mov
retf
daa
out
cmp
sub
iret
in
out
mov
shr
repnz
push
ja
scas
pop
sbb
jbe
mov
and
jae
stc
xor
push
mov
iret
sub
xor
into
pushf
icebp
xor
inc
push
popf
dec
pop
retf
lods
sahf
arpl
mov
sbb
sbb
xchg
loope
jmp
xchg
repz
lods
out
add
adc
mov
add
cmc
mov
cmp
mov
test
popf
jmp
movs
xchg
or
test
sbb
stos
jbe
add
or
jl
dec
and
xor
dec
adc
mov
dec
add
sbb
imul
inc
out
mov
pop
or
retf
jmp
ret
fsubr
mov
xchg
mov
jg
inc
xchg
jecxz
adc
fdivr
das
in
ror
fsub
push
push
cdq
push
cwde
imul
mov
fmul
in
dec
xchg
inc
or
push
jo
mov
int3
dec
pop
cwde
cmp
sahf
stos
jo
in
cmp
out
adc
add
sahf
out
das
loop
jp
mov
repz
or
xchg
repz
test
imul
pop
cs
pop
pusha
popf
ja
out
mov
lea
retf
and
jne
mov
push
and
adc
mov
shr
outs
mov
movs
jae
jbe
sbb
in
inc
cs
inc
sbb
jle
adc
cwde
jo
test
lods
mov
and
xchg
outs
sub
stos
push
and
xor
mov
scas
pop
pop
or
cwde
dec
arpl
popf
(bad)
dec
cli
adc
mov
sbb
inc
mov
into
xchg
popa
jns
push
sbb
push
sub
mov
(bad)
fisub
jge
sbb
jno
(bad)
int3
in
pop
xchg
pushf
cmp
pop
fwait
or
daa
es
mov
test
pop
push
in
xor
shl
(bad)
fwait
ret
mov
in
inc
or
fwait
mov
(bad)
jmp
out
push
push
jl
jmp
ss
xor
jns
daa
adc
dec
xchg
fs
xchg
mov
push
jne
outs
loopne
ror
int3
add
and
pop
leave
call
clc
xchg
faddp
outs
add
cs
ja
out
inc
in
pop
test
(bad)
scas
inc
sub
sahf
vcvtsi2ss
jmp
div
cmp
test
enter
xchg
les
push
add
cmp
mov
ret
outs
and
outs
mov
pop
and
adc
sbb
mov
adc
cmp
(bad)
(bad)
xchg
push
cmp
dec
inc
iret
ret
jmp
xor
add
je
retf
sti
xor
cmp
push
call
mov
dec
mul
loopne
cwde
loopne
push
mov
xchg
sbb
or
dec
lock
mov
push
in
shl
jae
and
xchg
xchg
psllq
adc
(bad)
rcr
fnstenv
psrad
mov
pushf
sub
mov
test
pusha
ds
cmps
loope
scas
idiv
jge
cmps
push
ret
mov
iret
in
das
cmp
test
ror
ja
std
sub
out
maxps
and
jno
sahf
imul
cdq
das
lods
cmps
sbb
sub
sbb
fimul
sar
mov
adc
(bad)
push
mov
fiadd
push
lea
xor
jg
or
scas
adc
nop
mov
and
nop
mov
dec
sar
xchg
xchg
sub
mov
mov
fcomp
adc
xor
jnp
mov
jns
scas
pop
cmp
xor
adc
stc
mov
in
clc
dec
push
or
or
data16
cmps
jecxz
les
shl
sub
mov
and
push
pop
retf
pop
and
push
bound
xor
sub
adc
xor
(bad)
loopne
or
push
or
push
outs
es
jne
jnp
inc
inc
outs
adc
js
lock
movs
or
(bad)
cwde
sbb
stos
pusha
inc
push
mov
push
fcomp
hlt
and
add
(bad)
mov
xchg
imul
fs
mov
and
inc
or
fst
xor
not
jecxz
mov
ds
cmp
shl
movs
mov
fst
nop
adc
outs
mov
or
sbb
retf
inc
xchg
push
pushf
scas
push
push
xor
inc
xor
jb
xor
cs
and
dec
data16
les
mov
jmp
cwde
add
daa
pop
mov
and
movs
ret
pop
pop
dec
or
enter
xor
xchg
imul
bt
push
test
sub
pushf
js
mov
repnz
not
outs
push
mov
fidivr
xor
dec
inc
xchg
mov
cdq
push
in
xor
mov
into
cmc
js
or
add
cs
mov
add
fisttp
xor
fsub
or
(bad)
mov
add
rcr
mov
retf
int3
and
pop
mov
out
adc
sar
out
or
inc
inc
xor
jecxz
daa
jns
neg
push
mov
sbb
push
jnp
inc
call
xchg
sbb
mov
mov
sbb
aaa
aas
cld
push
retf
sub
scas
pop
add
xchg
pop
inc
retf
out
sbb
jge
mov
(bad)
repz
dec
cmps
cmps
pusha
jmp
loope
push
dec
push
push
stos
pop
retf
push
ja
movs
aam
dec
pop
push
mov
shl
mov
shl
jmp
fisttp
cmp
pushf
movs
jne
push
nop
cmps
aaa
loop
cs
test
pop
test
cli
test
data16
sbb
adc
cld
sub
je
jl
in
push
jl
stos
xchg
retf
dec
sbb
out
es
cdq
cli
xor
in
cmp
js
fstp
out
clc
int
inc
hlt
iret
jns
int
mov
sahf
add
mov
add
sete
lods
mov
push
add
sbb
mov
repz
jmp
aas
ret
call
rol
inc
rcr
std
movs
push
push
cmp
test
push
sub
ffree
pop
in
mov
je
fisub
cmc
popa
mov
dec
jp
mov
mov
mov
sub
jae
or
enter
jmp
(bad)
or
cwde
xor
jp
push
(bad)
(bad)
mov
mov
inc
movs
pop
dec
xchg
in
mov
mov
lds
mov
mov
adc
jmp
xor
jge
dec
push
xor
mov
xchg
fwait
mov
(bad)
shr
repz
and
mov
xor
popa
movs
adc
lahf
cmp
lods
dec
xchg
fidiv
fbstp
dec
lock
pusha
push
mov
dec
xchg
je
cmps
mov
mov
in
push
adc
lds
adc
dec
enter
std
push
jae
push
lahf
(bad)
xor
lds
and
scas
cmp
test
sbb
jecxz
or
shl
test
ret
and
ds
vpor
mov
pusha
dec
mov
mov
pop
test
fcomp
cmp
mov
inc
sbb
mov
xor
adc
out
adc
out
fstp
jp
je
or
cli
ficomp
repz
ds
shl
jge
or
cmps
and
imul
and
sar
sbb
mov
mov
scas
jecxz
xchg
cmp
or
sub
in
jns
(bad)
scas
and
xor
mov
adc
adc
retw
sub
jbe
pushf
push
add
ret
xor
outs
cmp
jp
or
and
scas
inc
dec
test
shl
movs
jp
leave
pop
mov
jmp
ins
gs
cmp
scas
pop
jmp
sahf
into
movs
jno
adc
pusha
dec
mov
pop
fistp
push
xchg
jne
aad
jae
add
cld
fwait
or
je
fnstcw
adc
call
sub
mov
pop
pusha
out
outs
push
sub
lds
outs
daa
das
mov
pop
ja
mov
outs
xchg
mov
mov
dec
lods
add
sub
push
or
adc
int3
mov
jp
jns
mov
pop
ret
fldcw
mov
ret
and
mov
(bad)
rcl
cmp
rol
(bad)
rcr
mov
jbe
dec
jae
cmp
pop
std
jge
jg
push
in
je
pop
out
or
inc
and
icebp
outs
pushf
das
call
jl
mov
xchg
push
scas
dec
inc
in
das
dec
out
aas
xor
gs
and
sbb
cmp
mov
sbb
out
and
mov
imul
sub
jnp
retf
push
xchg
pop
jnp
jo
fdiv
fldcw
add
sbb
pop
cmp
pop
push
inc
mov
in
std
mov
mov
push
mov
mov
fcomp
inc
sbb
sbb
sub
push
mov
data16
(bad)
cs
or
lahf
adc
xor
adc
mov
inc
dec
not
ins
jl
cmp
lds
test
mov
mov
iret
push
nop
add
dec
rcr
xchg
jne
pushf
stc
stos
sub
dec
das
jp
pop
xor
mov
pop
test
loopne
pop
push
fdivr
imul
in
leave
adc
xor
xchg
cmc
popf
inc
test
fwait
test
xchg
push
dec
movs
sbb
scas
popa
test
lahf
dec
dec
call
sbb
xchg
pop
aaa
and
call
fnstsw
adc
jp
sbb
jbe
lods
mov
add
cmp
scas
ja
fst
jp
or
cmp
add
retf
sbb
sbb
sbb
xchg
jo
sub
sub
outs
into
or
jmp
push
push
loop
and
not
lahf
mov
out
pop
lea
jbe
or
int3
sbb
icebp
call
mov
aad
adc
cs
js
std
inc
test
in
je
adc
mov
outs
fisubr
inc
xor
or
retf
pop
fst
jmp
stc
mov
jge
jae
adc
clc
jge
pop
(bad)
push
inc
pop
push
mov
movs
ss
jg
scas
inc
mov
pop
cmp
pop
imul
aad
fmul
in
dec
and
adc
sub
cmps
push
movs
in
cmp
jmp
not
add
cmp
or
xchg
push
mov
push
paddw
cwde
mov
mov
add
adc
cmp
iret
pop
xchg
imul
inc
(bad)
and
sub
retf
ret
iret
push
mov
jnp
pop
scas
mov
test
lock
add
pop
and
mov
icebp
scas
inc
push
and
in
sti
test
push
stos
push
dec
arpl
cmp
push
mul
lods
dec
mov
push
test
clc
sbb
pop
push
add
adc
inc
sar
inc
add
cli
sub
and
pushf
imul
adc
add
mov
hlt
pop
mov
mov
(bad)
mov
std
mov
retf
add
dec
pop
xor
repnz
mov
ror
std
aad
scas
mov
ds
sbb
fdivr
pop
bnd
mov
aaa
xlat
inc
cdq
leave
ins
and
xor
xchg
enter
fs
sub
outs
or
pushf
sbb
imul
push
pushf
test
dec
lahf
mov
mov
sar
fstp
or
xchg
adc
test
add
inc
push
frstor
push
sbb
outs
out
jge
adc
xchg
(bad)
mov
lahf
rcl
dec
or
cmps
jmp
xchg
add
inc
or
je
sar
scas
push
retf
mov
and
add
sar
xor
repz
fucomi
js
test
nop
repnz
test
mov
mov
mov
(bad)
outs
test
or
pop
icebp
xchg
cmp
cmps
std
clc
mov
test
and
push
inc
fild
mov
jbe
in
pop
fmul
shr
out
cmc
inc
mov
xor
push
jae
fcmovnu
bound
jg
push
test
push
sbb
(bad)
hlt
pop
push
inc
dec
cs
icebp
ds
push
imul
xchg
jmp
sub
cli
cmps
mov
shr
pushf
sub
mov
jmp
imul
retf
outs
inc
add
lods
cmp
sub
rcl
(bad)
jmp
leave
dec
dec
call
or
sbb
mov
or
fs
adc
jae
add
jmp
mov
xchg
xchg
sub
pop
mov
jo
adc
jmp
adc
xchg
sub
int
popf
in
gs
mov
int
push
out
push
out
push
adc
call
jmp
or
xor
xchg
fidiv
leave
xchg
fidivr
lar
dec
pop
sub
pop
sar
mov
xor
adc
mov
add
mov
jecxz
xor
jne
repz
add
cmp
das
or
sub
pop
jmp
gs
mov
scas
mov
xor
mov
out
jae
(bad)
jno
es
cwde
call
sub
gs
jge
sbb
jmp
inc
sbb
cmp
pop
sbb
xor
and
aas
and
lods
popf
in
pop
jmp
push
imul
jl
inc
pushf
pushf
int
cmc
xlat
dec
aad
fsubr
jp
add
fld
xchg
push
js
pusha
push
xor
add
mov
aas
loope
push
mov
xchg
mov
fild
ret
cmp
lods
imul
shl
fsubr
push
inc
mov
xor
int
dec
pop
and
icebp
xchg
mov
xchg
fwait
and
mov
mov
jns
pop
dec
add
in
and
call
icebp
cmp
cmp
test
mov
lea
fwait
inc
ret
ins
cwde
dec
clc
pop
outs
cmp
(bad)
mov
jno
pop
mov
adc
out
std
adc
xor
hlt
pop
outs
sbb
or
xchg
mov
sbb
push
sub
clc
je
inc
dec
movs
sub
cmp
mov
lea
or
jmp
cmc
push
test
mov
into
push
push
or
std
xor
lds
sub
call
icebp
xor
lahf
pop
jmp
mov
adc
xlat
sub
movs
ins
xchg
pusha
mov
movs
jge
xor
pop
outs
out
js
int3
test
fimul
stos
mov
mov
data16
sub
fcmove
mov
sbb
and
or
ret
dec
lock
add
mov
jge
test
test
movs
jp
push
and
std
fcmovu
rcr
push
xchg
xchg
mov
sbb
pop
ror
lds
icebp
pop
xor
jecxz
sub
test
mov
cli
push
movs
(bad)
retf
mov
bsf
dec
mov
test
mov
retf
shr
or
fsubr
in
cmp
ret
mov
jo
loope
sub
fucompp
fwait
(bad)
sub
add
jo
jmp
lods
pop
ss
mov
imul
dec
aas
xlat
mul
inc
and
loopne
aam
dec
clc
retf
dec
(bad)
test
leave
or
out
jg
mov
(bad)
pop
shl
retf
pop
fnstsw
pop
sbb
and
scas
enter
inc
adc
add
je
push
ja
mov
sbb
cmp
daa
dec
gs
gs
push
fadd
test
dec
mov
pop
test
or
leave
std
in
pop
adc
mov
jnp
frstor
jmp
imul
xchg
push
sub
arpl
inc
or
mov
jns
inc
cwde
out
mov
ins
or
dec
or
xchg
out
popa
inc
outs
add
and
int3
pop
push
pop
cdq
mov
dec
push
mov
out
jge
nop
test
cmp
xchg
dec
push
xchg
mov
xchg
push
imul
gs
push
nop
lods
outs
sbb
jno
mov
jge
arpl
rcr
fcom
pop
cmp
das
popa
daa
mov
jmp
mov
mov
xor
add
inc
mov
push
movs
iret
ins
sub
dec
lods
icebp
inc
add
nop
inc
dec
mov
fwait
jnp
push
mov
fisubr
mov
shr
mov
hlt
jnp
ja
test
inc
xor
(bad)
push
shl
add
push
mov
push
loope
fdiv
and
ins
xor
dec
push
pop
dec
fsub
adc
cvttps2pi
sbb
add
push
jbe
sub
add
jo
mov
shr
push
addr16
mov
test
inc
pop
mov
sbb
mov
call
cmp
cld
pop
not
jo
cmp
hlt
dec
sbb
and
(bad)
imul
retf
add
xchg
add
sahf
fwait
out
cmp
mov
fs
je
fwait
pop
pop
jmp
sub
retf
out
adc
nop
movs
mov
sub
data16
cmps
sbb
shl
test
loopne
and
(bad)
scas
dec
fiadd
inc
popf
push
inc
adc
and
and
fsubr
cmps
mov
fdivr
imul
xchg
fnclex
clc
daa
clc
out
in
mov
add
shl
arpl
inc
add
lds
lods
mov
retf
jnp
ficomp
jle
jb
fnstsw
xchg
sub
xor
xlat
or
cmp
pop
jl
lods
mov
lods
or
cmc
adc
inc
inc
(bad)
mov
sub
sbb
mov
push
rcl
in
cmps
stos
pop
int3
(bad)
in
jnp
inc
xor
(bad)
sub
jmp
sub
pusha
pusha
and
cmc
pushf
cmp
pop
pop
ret
xchg
setl
inc
push
jns
lock
repz
jb
les
movs
pop
and
pop
out
(bad)
jl
repnz
mov
lahf
js
stos
data16
and
aas
(bad)
and
and
mov
xchg
add
inc
in
or
mov
xor
cs
daa
dec
dec
das
call
ins
mov
jo
and
pusha
es
fs
cmp
mov
js
ficomp
jns
push
dec
aas
dec
imul
jmp
inc
sub
fbstp
ins
jo
jmp
or
out
cmp
into
adc
call
rcr
pop
sub
push
or
mov
repz
mov
(bad)
movs
test
pop
popf
cdq
push
mov
fsubr
es
xor
push
nop
sub
push
ds
mov
pop
mov
ret
das
xchg
or
and
in
mov
shl
inc
mov
repnz
shl
xor
enter
movs
iret
inc
out
fiadd
icebp
mov
and
das
lea
das
push
and
xchg
int
mov
lods
shl
mov
inc
mov
mov
in
adc
cmc
xor
pop
lahf
push
pushf
inc
mov
cs
dec
out
pop
js
movs
test
rol
xor
idiv
lock
stos
rcr
mov
cmps
xchg
mov
sub
xchg
cmp
fnsave
daa
std
loope
pop
jo
mov
cmp
sbb
cmps
add
(bad)
scas
cmp
imul
popf
cli
into
cmp
fwait
movs
push
inc
pop
pop
inc
or
xchg
sahf
inc
xchg
mov
test
xor
dec
add
jge
cmp
in
cwde
scas
push
hlt
ss
add
pusha
nop
outs
es
adc
push
inc
icebp
fidivr
sbb
sbb
imul
repz
dec
dec
js
imul
jg
push
or
push
leave
sbb
fild
out
cmp
ret
jge
dec
inc
popa
xor
mov
enter
mov
or
lods
jns
adc
pusha
xor
cmp
movs
pop
dec
dec
test
ret
mov
mov
push
iret
bnd
cmp
jmp
xor
fs
and
jbe
int
test
and
nop
or
icebp
movs
ror
mov
or
sbb
xor
mov
pavgw
sbb
xor
dec
cmc
inc
jb
in
int
fist
clc
ss
mov
inc
jl
adc
retf
pushf
xchg
mov
popf
mov
add
sbb
mov
sti
xor
inc
fisub
into
xlat
xchg
xchg
sbb
loope
shl
mov
adc
(bad)
sbb
call
inc
mov
leave
clc
popf
sub
fisub
shr
sub
imul
enter
cmp
pusha
mov
jecxz
mov
loop
push
mov
push
call
sub
cmp
inc
xchg
icebp
fs
lea
mov
cmps
test
test
cmps
mov
scas
or
ins
dec
repnz
add
inc
or
mov
xchg
inc
in
aam
fwait
mov
(bad)
mov
inc
sbb
cmp
cmp
pop
out
sub
sar
pop
xlat
jns
ins
mov
popa
xor
popf
std
push
fldenv
add
dec
out
xor
test
ds
jno
add
push
and
jbe
pop
shl
sbb
push
pop
mov
push
fmul
xchg
inc
push
sti
mov
ret
inc
iret
xor
mov
es
xor
xchg
movs
mov
ins
or
mov
and
inc
jae
ds
sbb
jne
mov
in
shr
aas
int3
imul
test
rcl
adc
xchg
retf
inc
pop
sar
cwde
add
jne
xlat
fs
inc
fisubr
jmp
adc
std
adc
sbb
leave
dec
gs
mov
cmp
mov
cmp
lock
(bad)
int3
jle
or
pop
mov
js
cs
mov
fsubr
jmp
inc
pop
mov
or
cdq
loope
dec
pop
repnz
mov
call
loop
adc
movs
stos
inc
cld
cli
cmp
fisub
aas
into
push
aaa
stos
imul
inc
mov
pop
sbb
adc
scas
mov
add
repz
and
dec
jge
mov
dec
loop
mov
xor
inc
fdiv
movs
inc
or
mov
loop
call
sar
cmc
retf
xchg
ret
leave
cld
adc
mov
retf
dec
imul
aaa
scas
mov
(bad)
lock
mov
icebp
loope
test
push
and
push
sti
mov
(bad)
fcomp
jno
push
sbb
andnps
or
push
jnp
sub
js
pusha
jg
loop
rcl
dec
fisubr
push
fldenv
jge
lock
xor
ret
adc
mov
sub
sub
push
xor
out
jl
lods
cld
hlt
mov
das
lahf
jl
adc
mov
cmps
sub
repnz
or
and
daa
addr16
push
jle
jo
aas
and
out
test
pusha
and
adc
jbe
stos
cmp
call
mov
dec
xchg
fistp
(bad)
mov
into
mov
sub
push
fild
shl
ins
xor
mov
pop
clc
fnstsw
inc
mov
scas
and
mov
mov
mov
push
ds
push
mov
mov
sub
(bad)
adc
inc
mov
retf
dec
push
leave
jl
add
cmp
or
cmc
icebp
sbb
mov
in
aaa
shl
adc
and
lods
inc
mov
mov
lahf
mov
mov
pushf
sub
mov
dec
out
mov
daa
retf
mov
inc
push
mov
pop
(bad)
bound
push
push
add
jbe
loopne
movs
mov
pop
pop
sti
je
or
xchg
fdivr
cwde
call
push
mov
daa
int
xchg
lods
(bad)
jnp
(bad)
popf
shl
mov
sbb
inc
sub
mov
mov
xor
xchg
cmp
xor
stos
scas
fdiv
mov
bound
jo
int
cmc
pop
pop
mov
pop
(bad)
rcr
xor
dec
(bad)
mov
popa
in
nop
pop
adc
jmp
mov
inc
xchg
push
xchg
pop
mov
and
daa
sbb
in
pushf
movs
icebp
fstp
mov
pop
and
dec
int3
repnz
test
and
add
lea
jl
outs
bound
imul
call
idiv
cmps
lods
call
clc
ja
call
pop
sbb
in
outs
jbe
push
loopne
imul
bound
pop
add
add
das
dec
sar
cld
in
movs
adc
push
push
fwait
das
aad
sbb
and
out
inc
loopne
jp
mov
sub
adc
and
enter
popf
or
jnp
mov
mov
ffree
js
sbb
mov
popa
imul
push
pop
in
pop
seta
in
lock
push
bnd
in
clc
dec
rol
mov
push
inc
fbld
add
das
cmp
dec
ficom
(bad)
stc
cmc
int3
and
or
out
adc
cld
cli
inc
pop
fldcw
out
outs
push
adc
push
out
pop
or
pop
lods
xor
repz
jbe
sbb
ins
daa
adc
and
addr16
loopne
push
arpl
mov
in
cld
repz
jno
mov
adc
mov
or
mov
push
lahf
ds
leave
fbld
out
es
(bad)
sbb
xor
and
test
ins
and
rcr
test
and
test
outs
in
stos
mov
js
jecxz
sub
dec
mov
out
adc
pop
or
cwde
lds
add
and
std
movs
ins
mov
jo
add
mov
addr16
cmp
pop
xchg
bnd
bound
cmp
or
inc
fwait
iret
out
aas
adc
out
daa
fnstcw
jp
outs
popa
jo
xor
jns
inc
(bad)
jg
pop
hlt
retf
add
je
cmps
sub
ja
pop
and
(bad)
ret
outs
in
les
sbb
push
stos
push
push
dec
cmp
mul
push
xchg
cmp
dec
clc
es
cmp
dec
jle
ja
shl
fwait
repnz
mov
inc
mov
push
mov
cmps
push
push
sub
adc
xchg
add
lahf
mov
dec
test
pop
jnp
cmp
cld
add
outs
push
jb
mov
push
mov
nop
mov
xor
jne
stc
mov
or
and
pop
ja
sub
iret
cli
inc
fcom
push
pop
push
loop
sbb
stc
push
mov
pop
mov
(bad)
repz
push
cmc
jg
pop
aad
mov
repz
arpl
hlt
xchg
fcomp
dec
mov
test
dec
push
shl
idiv
mov
call
mov
add
xor
ins
xor
fld
add
xchg
or
jo
add
clc
push
test
adc
mov
(bad)
dec
xchg
and
push
xor
cmc
jl
jg
clc
push
(bad)
cmp
adc
jecxz
scas
pop
add
lods
sub
mov
cmp
stc
loop
inc
push
adc
xor
dec
or
movs
inc
out
xchg
data16
pop
add
mov
loopne
fs
test
and
cdq
mov
out
cmp
inc
fist
daa
sti
inc
mov
fidivr
sbb
pop
leave
cli
call
push
xchg
nop
std
(bad)
clc
adc
xor
icebp
dec
or
mov
push
out
inc
(bad)
sub
mov
and
jp
xchg
test
and
dec
mov
push
dec
or
sbb
rol
es
inc
dec
out
dec
inc
ror
ficom
pop
add
iret
push
and
ins
inc
shl
ins
pusha
mov
inc
out
sub
mov
js
sub
inc
add
jmp
(bad)
test
sub
pop
jne
(bad)
pop
nop
mov
fisubr
or
in
in
mov
cmp
iret
into
imul
inc
ret
pusha
xchg
retf
ret
jecxz
jecxz
or
mov
vmread
ja
fisttp
ficom
add
pop
adc
fs
xor
cwde
outs
push
int
movs
cmp
ins
out
mov
aaa
xchg
(bad)
or
test
dec
lods
dec
ss
mov
sar
push
outs
retf
jg
mov
retf
cmp
sti
gs
mov
test
push
mov
sar
arpl
or
and
sbb
add
mov
jnp
mov
dec
test
xor
add
adc
pop
icebp
ret
pop
add
mov
mov
inc
imul
cmp
dec
repz
scas
push
test
shr
sbb
sub
cwde
shr
les
cmp
mov
jp
scas
xchg
sub
outs
dec
les
cmp
ficom
ins
jecxz
es
jnp
jo
andps
sbb
popf
fimul
je
sub
pop
add
or
jge
(bad)
push
xor
scas
es
mov
and
adc
sub
rcl
mov
je
scas
out
inc
pop
stos
jns
fiadd
and
jp
addr16
and
jecxz
js
mov
fldenv
pop
jle
jl
sub
mov
jbe
sub
pop
clc
xor
cmp
icebp
add
sub
div
jp
mov
and
cmp
cwde
or
and
jno
push
pop
jge
(bad)
aaa
sbb
fisttp
push
repz
inc
pushf
mov
ins
lods
add
ret
icebp
std
cmps
icebp
fs
push
pop
cmp
pop
dec
xchg
popa
fisub
movs
in
jae
rcl
aaa
add
fsubr
leave
push
imul
inc
jmp
inc
retf
sbb
aaa
out
fsubr
(bad)
(bad)
inc
adc
into
jno
jmp
cmp
push
call
mov
dec
cli
xor
sbb
pop
aas
add
pop
cmp
stos
xchg
loop
adc
add
xor
cmp
mov
mov
push
pop
pop
retf
lahf
cmps
adc
mov
pop
ror
outs
shl
sbb
adc
sahf
arpl
test
sub
icebp
xchg
mul
and
loopne
push
lds
push
or
pusha
jle
mov
pop
lahf
sub
popf
xchg
lods
or
lahf
das
outs
scas
(bad)
mov
dec
test
inc
dec
sub
cdq
push
and
test
(bad)
retf
sub
and
mov
sub
aas
add
mov
adc
jb
push
sbb
sti
cmc
out
sub
cmp
lds
inc
xchg
xchg
mov
movs
mov
xchg
pop
(bad)
test
out
gs
push
xchg
pop
(bad)
jmp
cmp
into
std
xorps
adc
mov
cli
(bad)
arpl
cmp
inc
adc
pop
jbe
leave
pusha
test
or
pop
fimul
in
cmps
retf
retf
inc
loopne
lds
js
or
adc
dec
cmp
xor
inc
dec
inc
mov
mov
push
cmp
fmul
push
mov
mov
call
and
sbb
or
mov
out
sahf
mov
cmp
or
inc
jno
pop
stos
outs
or
aas
stc
in
scas
es
and
cwde
into
in
in
in
scas
adc
sub
mov
jmp
cmc
pop
jmp
and
adc
rep
pop
cmps
jo
cmp
xchg
and
xchg
sbb
rol
imul
les
xchg
loop
dec
inc
cmc
lahf
mov
dec
inc
mov
sub
fadd
movs
push
mov
ret
ret
sub
adc
pop
dec
cli
imul
add
push
repnz
bsf
mov
lahf
call
not
jne
dec
pop
jp
imul
rcl
fsubr
sub
mov
stc
jecxz
out
xchg
xchg
mov
and
mov
add
cld
mov
lods
cmc
dec
scas
inc
pop
hlt
sub
sbb
jnp
js
inc
xchg
dec
sahf
arpl
aad
jmp
sub
test
std
(bad)
and
or
out
ins
stos
in
mov
iret
test
psrld
pop
retf
cmp
dec
xchg
sbb
cmp
cld
imul
sbb
cwde
sub
ret
or
jns
clc
aam
pop
sbb
mov
jnp
adc
jnp
and
in
outs
dec
repnz
adc
mov
loopne
or
inc
pop
nop
pop
call
mov
jp
mov
jo
inc
div
cmps
push
or
(bad)
cmp
pop
xchg
adc
ins
(bad)
cs
and
push
cdq
dec
or
push
sub
sbb
mov
xchg
sub
pop
cmp
cli
sar
loopne
out
(bad)
(bad)
aad
jecxz
push
mov
lods
aam
dec
mov
fisubr
pusha
cmp
mov
push
call
inc
daa
sbb
out
retf
mov
dec
xchg
mov
mov
jmp
sbb
jb
sub
add
loope
inc
dec
inc
int3
(bad)
hlt
cmp
pop
sub
cmp
and
into
(bad)
fwait
xchg
jns
inc
push
inc
rcl
imul
arpl
push
lods
loop
mov
dec
out
bound
(bad)
mov
mov
and
inc
retf
jmp
jno
or
aad
mul
in
fnsave
mov
aas
lds
mov
dec
push
mov
cmp
sar
fist
mov
outs
and
pushf
cmp
out
sar
sbb
test
lock
jmp
movs
and
jmp
scas
sub
imul
(bad)
dec
inc
xchg
cli
stos
inc
adc
inc
not
jns
daa
mov
sub
jne
push
lea
mov
jp
and
xor
add
imul
and
dec
dec
movs
mov
add
pop
cmc
mov
xor
les
pop
and
jbe
add
jo
test
inc
ficom
push
iret
shr
jo
xor
retf
fidivr
sbb
cmp
mov
adc
fld
cmp
dec
(bad)
fisubr
test
out
stc
lea
sbb
or
stos
sbb
or
addr16
add
fdiv
cmps
sahf
adc
push
and
mov
fbld
fmul
stos
mov
sub
in
lods
jg
mov
mov
jo
xor
inc
ins
xchg
shl
mov
add
jg
mov
jnp
cmp
push
push
inc
cli
cmp
test
loopne
adc
inc
std
and
sbb
push
inc
cmp
mov
sub
(bad)
jecxz
ins
inc
cld
call
mov
in
pop
xchg
pop
scas
mov
mov
push
sub
pop
jne
mov
stos
add
push
mov
fsub
retf
test
in
(bad)
pop
gs
lea
hlt
sub
xlat
scas
mov
inc
and
sbb
jmp
idiv
mov
sbb
cld
adc
in
jo
data16
xchg
jns
fldenv
nop
je
fs
retf
xchg
mov
sub
cmp
mov
mov
hlt
push
test
retf
pop
mov
mov
add
push
fwait
jnp
inc
cwde
icebp
adc
adc
or
xor
fld
pop
cmps
loop
iret
hlt
cmps
xor
jb
imul
push
push
test
mov
fs
sbb
cmp
movs
dec
js
pop
jl
imul
clc
out
or
xchg
cmp
int3
mov
fild
outs
cmp
push
sahf
(bad)
fbstp
adc
(bad)
rcl
ss
push
(bad)
cli
pop
daa
or
jmp
push
push
inc
retf
rcl
sbb
retf
mov
jge
sbb
mov
sub
adc
fisttp
lds
dec
inc
cmp
ins
mov
test
not
repz
dec
dec
leave
inc
outs
dec
aaa
xchg
cmp
cmp
dec
sbb
or
dec
sub
ret
xor
aaa
(bad)
jbe
fwait
mov
and
and
push
xchg
xor
mov
and
xor
add
mov
call
jbe
push
ret
push
push
xor
sub
adc
jl
aaa
or
pop
nop
pop
cmp
cmp
push
mov
out
test
out
rol
add
das
and
out
add
mov
int3
and
add
jno
stc
out
ret
dec
and
icebp
cmc
xor
mov
inc
and
aam
je
lea
ins
aaa
add
mov
shl
inc
movs
inc
mov
in
pop
push
daa
mov
adc
jecxz
test
inc
hlt
mov
add
repnz
mov
aaa
lods
rcl
in
mov
into
inc
xor
jmp
add
mov
mov
xchg
mov
pop
(bad)
or
lods
lock
jo
pop
sbb
or
shl
sub
and
xchg
clc
sar
jne
leave
add
rcl
sbb
js
repnz
sub
mov
fist
cmps
pop
test
mov
in
sti
mov
fcomp
cmps
jle
inc
cmp
mov
stos
mov
ret
fst
enter
mov
xor
mov
icebp
lea
push
stc
push
push
and
xor
pop
dec
loop
push
pusha
mov
outs
std
(bad)
hlt
hlt
iret
dec
xor
mov
sar
xchg
std
or
sbb
xchg
mov
sub
xchg
shr
xor
xchg
push
dec
pop
popf
xor
pop
pop
dec
dec
hlt
jp
dec
push
sub
jae
mov
cmc
dec
sbb
aas
pusha
jle
pop
jo
mov
mov
aam
dec
and
les
push
rcr
pop
mov
hlt
jns
sbb
dec
les
jge
mov
pop
dec
cmc
ins
mov
jge
lds
in
dec
(bad)
push
inc
jg
xchg
jb
sbb
sub
pop
push
fs
xchg
cli
shl
lods
and
or
mov
sbb
dec
push
pusha
cdq
mov
push
lods
rol
add
daa
mov
mov
movs
add
ja
adc
rcl
nop
mov
sub
xchg
dec
or
push
and
lahf
sbb
jmp
cs
(bad)
ins
or
adc
mov
add
das
push
in
popw
lods
out
aas
or
push
xchg
or
jmp
fadd
rcr
or
outs
and
in
ud2
das
lock
dec
xchg
inc
jmp
sub
scas
push
mov
rol
fwait
dec
stos
jmp
dec
inc
mov
pop
sub
push
or
jmp
push
pusha
adc
and
jmp
ja
outs
add
sti
aad
inc
or
push
imul
jmp
test
mov
cmps
aaa
leave
adc
fwait
fs
inc
gs
xchg
movs
or
dec
gs
mov
sub
xor
xchg
mov
mov
mov
pop
adc
jle
jae
xchg
cmp
movs
or
pusha
push
pop
call
idiv
outs
add
and
(bad)
mov
loopne
imul
xchg
test
fnsave
ror
mul
mov
ja
ins
sahf
mov
rcr
aad
sbb
adc
dec
nop
in
xor
dec
add
nop
mov
pop
neg
stos
xor
out
or
inc
pop
mov
and
ret
lea
cmp
push
outs
cli
push
add
mov
inc
jns
xor
xchg
push
mov
mov
ins
sub
xor
ja
cmp
call
mov
aas
leave
inc
clc
mov
xor
inc
xchg
cmp
mov
cmp
mov
mov
fisub
rcl
mov
loopne
jmp
dec
cmp
pop
mov
cli
mov
fwait
call
and
jecxz
or
xor
add
test
push
rcl
mov
scas
(bad)
mov
inc
jp
daa
fild
sub
in
nop
sahf
inc
mov
fwait
jne
jecxz
xchg
repnz
int
cli
xor
adc
push
mov
aam
dec
ss
not
pop
xor
std
jmp
fidivr
jno
inc
jmp
mov
in
shl
and
xchg
xchg
mov
outs
div
fild
pop
pop
pop
jnp
xchg
dec
out
shl
mov
sub
into
and
push
lods
adc
mov
cmps
bnd
inc
imul
sar
mov
mov
adc
jle
add
retf
xor
pop
aas
sar
xlat
loope
ror
mov
jge
push
nop
scas
mov
jae
mov
mov
test
mov
scas
int
js
test
sbb
imul
call
pop
arpl
add
int
cmp
shl
inc
adc
lods
xchg
(bad)
retf
push
xlat
pop
inc
outs
jae
xchg
(bad)
test
(bad)
fmul
add
sub
aas
pop
outs
xchg
lds
aad
push
ret
and
mov
push
pusha
or
(bad)
sahf
aam
scas
inc
fistp
mov
push
(bad)
(bad)
xor
xor
and
(bad)
repz
jmp
fldenv
loope
(bad)
cmp
add
mov
popf
adc
add
stc
lahf
push
das
sub
pushf
test
daa
imul
mov
mov
push
outs
push
addr16
ret
in
popa
pushf
popa
mul
xchg
sub
cmps
sub
(bad)
(bad)
sbb
cld
rcr
(bad)
mov
xlat
fadd
mov
leave
xor
loope
stos
mov
or
push
jg
mov
pushf
mov
repz
test
mov
or
push
jbe
push
test
sub
add
push
mov
cmps
fbld
test
loopne
adc
sub
pop
repnz
hlt
and
ss
aas
fwait
push
push
repz
mov
xor
jnp
inc
mov
sub
inc
stc
cs
push
push
test
call
push
mov
push
retf
rol
mov
jp
out
mov
bound
xchg
cmp
sbb
mov
icebp
jns
push
sbb
les
fistp
jg
push
js
loope
out
stos
rol
(bad)
aas
comiss
div
xchg
aam
inc
ds
popf
and
(bad)
mov
pop
sahf
mov
mov
std
add
sub
jb
mov
retf
push
stc
scas
clc
or
cmp
inc
adc
fsubr
cmp
dec
lea
cmps
jns
aam
loopne
push
push
outs
in
cdq
aad
mov
inc
sbb
and
sub
mov
xchg
add
sbb
pop
retf
out
xchg
mov
push
push
inc
pop
test
cmp
dec
or
xchg
pusha
add
scas
push
cmp
inc
nop
loop
retf
mov
jae
dec
jle
push
xchg
(bad)
adc
jmp
dec
sub
out
(bad)
and
(bad)
scas
int3
aaa
fdiv
in
push
xchg
inc
int3
jo
std
inc
bound
adc
pop
fwait
stos
mov
sub
stos
push
xor
aas
cli
shl
and
enter
addr16
sbb
mov
cdq
mov
xchg
add
(bad)
movs
(bad)
fdiv
lea
push
mov
cmp
movs
repz
lods
rol
xchg
xor
jmp
or
pusha
push
mov
jbe
popa
call
or
loop
jmp
cmp
aaa
lods
and
xchg
pop
ins
xchg
daa
xlat
cmp
stos
sbb
mov
sub
sbb
test
data16
sub
pop
and
popa
mov
mov
je
int3
addr16
rol
push
push
inc
aaa
pop
(bad)
(bad)
jns
jnp
lods
and
mov
ja
xchg
aas
or
cmp
inc
les
mov
cdq
add
ss
cmp
mov
mov
cmp
inc
ins
fs
call
adc
out
cmps
arpl
gs
push
cmc
das
dec
cmps
mov
inc
std
test
bound
or
and
rcl
pop
jecxz
retf
dec
cmp
aam
je
pop
pop
movs
test
adc
test
cs
xor
imul
fld
pop
into
hlt
or
mov
jge
dec
jo
mov
mov
xor
push
and
aam
mov
les
repnz
lahf
cmps
(bad)
cmps
mov
int
stos
cmp
inc
pop
or
cmp
or
add
sbb
es
sub
inc
inc
das
aam
fld
mov
dec
jmp
lods
shr
pop
stc
pop
lahf
push
or
hlt
int
test
inc
fistp
or
(bad)
sub
in
sbb
dec
push
jmp
add
cmp
fadd
sbb
ret
mov
or
mov
out
xlat
push
rol
push
stc
mov
in
outs
sub
xchg
mov
pushf
dec
(bad)
mov
cmp
xchg
dec
arpl
int3
scas
adc
push
stos
out
adc
push
stc
dec
inc
dec
or
lea
stc
inc
inc
jmp
pop
(bad)
pop
xchg
ds
inc
(bad)
call
lock
nop
sbb
adc
mov
xor
stc
movs
push
fcomp
add
push
push
fisubr
fninit
icebp
or
mov
(bad)
aam
cmp
ss
(bad)
cld
jno
jnp
push
stos
fldcw
loopne
ins
loope
repnz
xor
and
sahf
xor
iret
imul
mov
inc
xchg
stos
mov
rcr
pop
loop
je
iret
ss
es
popf
cmps
push
mov
data16
lea
push
or
add
outs
fisttp
out
inc
mov
mov
sbb
sahf
pop
lock
inc
sub
or
popa
mov
fisub
sbb
xchg
adc
sti
mov
push
push
or
(bad)
popf
ja
int
push
sbb
cli
xchg
xor
sahf
cs
pushf
inc
sub
imul
test
(bad)
or
inc
mov
test
out
push
in
xor
test
mov
mov
(bad)
mov
fwait
jno
ds
mov
xchg
push
loopne
sbb
inc
gs
xchg
mov
sbb
scas
mov
push
nop
fiadd
or
jmp
jmp
sbb
daa
pop
std
js
js
pop
cmps
pusha
sbb
fwait
popf
push
pusha
dec
lea
dec
lahf
jecxz
jmp
sbb
mov
add
add
pop
and
adc
mov
push
cwde
mov
pop
outs
in
pop
and
cdq
lods
outs
jne
mov
dec
sti
mov
jmp
mov
leave
ja
xlat
mov
mov
ret
test
outs
and
or
std
mov
in
jl
xor
sbb
data16
sub
into
jle
jl
dec
movs
shl
shl
cmp
dec
fsubr
scas
pop
pop
inc
pop
(bad)
xor
stos
and
mov
out
scas
cld
aam
mov
std
or
or
sti
add
or
cdq
mov
stos
into
lahf
loope
out
ins
xlat
push
push
mov
outs
das
ror
cdq
cs
cli
and
fidiv
inc
retf
push
pop
pushf
add
sahf
repz
mov
test
sub
cdq
sub
das
cmp
movs
xchg
add
adc
in
adc
repz
or
pop
cmp
and
adc
in
cmp
xlat
in
xor
outs
in
fiadd
les
in
xchg
gs
sahf
ins
fidivr
inc
cmp
mov
rcl
out
test
out
jbe
adc
cmp
jl
repz
fidiv
(bad)
ror
or
mov
and
xor
arpl
aas
mov
cli
mov
mov
jmp
outs
imul
mov
out
pushf
popf
aad
lods
inc
or
adc
cmc
mov
jo
int
or
out
imul
and
call
push
fwait
das
enter
mov
or
sti
mov
add
jb
mov
and
xor
scas
inc
out
scas
sbb
cmp
arpl
push
cmp
shl
dec
and
add
xchg
ror
(bad)
imul
jmp
mov
les
sbb
inc
jo
pop
not
clc
stc
aad
int
mov
and
and
xchg
sar
std
fwait
jae
in
sbb
repz
mov
std
mov
cmp
pushf
xlat
inc
call
or
mov
pop
setg
inc
xor
xchg
outs
jecxz
xor
or
cld
lock
inc
sub
or
and
repnz
push
daa
or
fs
add
stos
adc
repnz
adc
adc
mov
xor
jge
push
dec
pop
sahf
pop
dec
out
nop
out
mov
(bad)
inc
pop
mov
xchg
sahf
rcl
fimul
push
stc
leave
push
int3
mov
test
(bad)
xor
push
lds
ins
push
xor
xchg
inc
or
xchg
lds
xchg
inc
dec
gs
(bad)
mov
jg
ins
call
sbb
pop
jl
outs
into
fsub
fnstcw
jmp
mov
mov
cs
call
and
xor
es
popf
aam
xor
pop
and
shr
out
xor
adc
mov
movs
ds
push
mov
divps
pop
jne
and
or
cmps
jl
or
or
lods
fisttp
add
ins
sahf
sbb
pop
test
pop
(bad)
pop
or
enter
gs
not
xor
mov
inc
mov
loop
mov
jae
push
xchg
outs
mov
test
mov
ins
dec
cmp
call
hlt
jle
stos
imul
xor
mov
mov
cs
je
adc
and
lock
(bad)
call
mov
adc
pop
bound
int3
xchg
and
cmp
mov
sbb
(bad)
stos
dec
iret
clc
shl
xlat
xchg
jl
js
jb
cmp
lds
xor
shl
cwde
or
fstp
and
mov
push
arpl
cmps
sub
adc
sbb
cli
xchg
jnp
ds
out
cli
add
mov
pop
push
mov
mov
fist
add
adc
retf
in
jnp
push
sub
xchg
mov
xor
pop
xchg
jle
push
jno
xor
pop
mov
fs
fistp
adc
inc
imul
pop
jae
mov
push
dec
cwde
outs
scas
(bad)
movs
adc
or
sub
cmps
mov
add
and
imul
(bad)
cli
test
xchg
outs
sbb
mov
in
fisub
gs
leave
pop
mov
movs
push
jge
push
mov
push
ror
imul
inc
cmc
sub
mov
sub
adc
pop
mov
daa
or
mov
cmp
cwde
in
sti
mov
cmp
adc
movs
icebp
in
cwde
jge
(bad)
pop
mov
add
push
inc
les
dec
sbb
fcmovnu
or
jge
fs
(bad)
mov
add
pop
sub
(bad)
jb
gs
jmp
frstor
iret
or
out
movs
lahf
cmp
mov
(bad)
in
sub
test
push
outs
jae
dec
enter
cmps
dec
int3
xchg
mov
xor
jae
push
test
clc
(bad)
cmp
std
xor
or
imul
fdivr
fucomip
dec
push
sahf
push
mov
mov
into
push
ffreep
or
mov
test
idiv
leave
and
lahf
outs
out
push
mov
dec
cmp
iret
mov
stos
sbb
mov
mov
shr
or
or
cmp
mov
lds
push
ja
jb
mov
popf
pop
(bad)
aas
fcmovne
mov
mov
aaa
dec
and
mov
push
sbb
ds
mov
mov
sbb
jae
movs
(bad)
cmps
les
out
enter
cli
xchg
fldenv
sub
cdq
xrelease
test
lds
sbb
xor
daa
call
loopne
lahf
xchg
mov
fisub
sar
retf
push
test
std
sub
gs
inc
sbb
jl
out
ss
jp
push
hlt
push
je
mov
arpl
ret
xor
cmp
and
scas
xor
outs
xchg
sub
aad
lock
popf
xchg
sub
or
jl
sub
stos
sub
dec
mov
ret
ds
xchg
out
add
jb
xchg
out
ins
call
das
xchg
pusha
fisubr
in
cdq
fwait
rol
repnz
repnz
adc
push
cmps
hlt
mov
pop
jb
loop
clc
ret
imul
cmc
add
fistp
lds
mov
ins
pop
xor
xor
inc
mov
test
push
neg
mov
aas
(bad)
cmp
mov
rol
xor
stos
dec
adc
mov
bound
and
imul
(bad)
lods
jno
or
xchg
mov
mov
das
cli
test
push
mov
ds
ins
aaa
mov
jmp
or
js
test
repz
retf
cmp
outs
pusha
cdq
movs
(bad)
call
out
push
enter
xchg
pushw
or
movs
test
pop
mov
or
jmp
fmul
xor
out
shl
stc
jmp
pop
pop
cmp
inc
jle
daa
mov
sbb
mov
sub
adc
cmp
les
rol
(bad)
stos
mov
and
xchg
push
(bad)
enter
jl
ficomp
adc
or
bound
outs
push
jb
lahf
mov
(bad)
(bad)
call
sbb
or
adc
lods
shr
test
std
mov
sbb
call
jno
in
in
mov
xchg
mov
gs
xchg
xor
mov
adc
push
xchg
pushf
sti
push
cmp
(bad)
fstp
ret
into
ins
cwde
shr
fcom
xor
mov
ins
shl
and
xor
or
lock
imul
test
adc
js
rcl
jb
dec
pop
data16
xor
fist
xor
retf
fmul
loope
add
shl
push
jle
adc
sbb
jle
mov
aad
inc
loopne
xor
xchg
push
ret
xchg
sub
jge
mov
cwde
jae
ffreep
xor
int
ret
pop
pop
add
lock
int
stc
mov
jp
xchg
shl
jl
inc
and
mov
mov
lock
gs
cmp
push
hlt
add
sub
movs
(bad)
out
xor
xchg
fstp
iret
aaa
jbe
inc
xor
inc
mov
push
add
mul
(bad)
gs
and
xor
mov
sbb
mov
bound
loope
test
push
call
dec
jns
and
xchg
retf
xlat
in
sahf
in
sbb
xor
adc
sbb
or
cli
and
push
lds
jge
mov
lea
fs
into
or
pop
movs
stos
push
sub
cmp
mov
mov
dec
loopne
in
jl
dec
push
mov
push
push
hlt
iret
cs
fwait
xchg
jo
outs
jmp
inc
jge
cmp
(bad)
push
pop
aad
ins
pop
cmp
repz
pop
ss
(bad)
repz
cmp
adc
(bad)
out
xchg
sahf
cmps
xchg
lock
mov
fwait
mov
movs
icebp
into
fimul
mov
mov
out
jg
mov
daa
repnz
push
jl
cmp
cmp
dec
out
out
scas
xlat
mov
cmp
ja
push
xor
loop
lock
xchg
ficom
inc
add
inc
fsubr
test
clc
or
push
sub
hlt
arpl
cld
xchg
jnp
pop
add
pop
(bad)
or
mov
inc
bound
lods
int
add
mov
cmps
fimul
stc
inc
adc
cmp
or
xor
test
dec
test
push
inc
push
xor
call
or
push
retf
cmp
es
gs
dec
popf
xor
dec
fsubp
push
jg
dec
ds
cdq
dec
sbb
cmp
dec
pop
pop
sub
xchg
pop
xchg
aam
aam
add
xchg
aam
or
mov
imul
mov
iret
cmp
mov
push
mov
lods
int3
add
sbb
jbe
call
arpl
jmp
adc
sub
jmp
lock
mov
dec
and
jle
sbb
cmp
sti
std
lds
add
(bad)
ficom
imul
or
adc
and
sar
aas
sbb
lahf
mov
popa
sub
out
cmps
cwde
popf
or
sbb
xchg
push
not
das
mov
out
movs
das
leave
fst
cmp
and
mov
dec
cmc
lds
xor
pusha
test
xchg
fisubr
cmps
pushf
test
jae
ret
outs
and
pop
ja
sub
ret
jnp
and
test
dec
inc
lds
sti
in
adc
out
in
pop
(bad)
call
sbb
dec
mov
loop
fsubr
pop
jb
adc
ret
bound
pop
sbb
jmp
cmp
xchg
ins
push
xchg
fldenv
adc
lahf
jnp
xchg
jp
(bad)
jp
jg
fistp
(bad)
xchg
aaa
idiv
inc
lods
adc
add
pop
jae
mov
out
mov
pop
cwde
add
stos
test
loope
push
xchg
loope
test
pop
add
popf
add
or
imul
inc
jae
in
fstp
xor
inc
outs
cmp
push
xchg
scas
sbb
inc
ror
vmread
cld
cmp
mov
add
or
into
sbb
ret
push
cld
xor
stos
mov
adc
mov
stos
dec
add
push
neg
je
outs
test
mov
cwde
xor
je
and
movs
mov
data16
xchg
sub
jne
(bad)
xchg
rcl
loope
jbe
dec
adc
outs
xchg
mov
push
and
repnz
adc
mov
or
jo
push
or
test
push
and
push
movnti
lock
les
adc
jno
mov
test
xchg
mov
inc
sahf
ficomp
pop
inc
xchg
adc
add
repz
push
mul
jmp
pop
add
mov
mov
or
fiadd
loop
pop
leave
popa
sub
shl
mov
adc
push
mov
(bad)
pop
mov
push
nop
ret
std
jns
sub
mov
dec
mov
mov
outs
jne
call
inc
into
enter
call
inc
sti
sti
mov
push
(bad)
cmp
(bad)
fstp
in
push
xchg
lea
dec
lods
pop
sub
in
outs
sti
idiv
sub
push
sub
cmp
push
jbe
lea
ror
out
jns
push
push
xchg
xor
hlt
adc
cmp
push
leave
inc
mov
popf
int
popf
in
adc
mov
dec
push
cmp
jmp
fisub
ret
out
fcomp
iret
es
fimul
cs
imul
in
test
mov
push
es
sahf
sti
stos
inc
cmp
pop
and
(bad)
clc
cmp
inc
test
xor
mov
dec
jmp
js
mov
push
mov
inc
dec
xor
push
add
cdq
push
cmps
out
xchg
nop
fistp
aad
cmps
fisttp
xor
lock
ins
pusha
sahf
sbb
in
cmps
faddp
mov
out
add
scas
inc
xor
(bad)
pop
or
push
lods
addr16
mov
arpl
mov
jnp
xor
mov
sbb
push
int
cmovns
call
dec
add
adc
mov
xchg
cli
mov
mov
xchg
mov
push
jle
dec
loopne
xchg
cwde
clc
push
shr
(bad)
fsub
mov
(bad)
stos
ficom
add
lods
imul
push
cs
push
xchg
mov
div
ins
fwait
and
iret
call
daa
mov
cli
inc
mov
mov
movs
jnp
cmps
pop
push
cld
aam
sub
mov
movs
stos
or
mov
scas
mov
dec
ja
clc
push
pop
scas
pop
mov
pop
push
enter
(bad)
rcl
test
sbb
fcomp
cmp
inc
(bad)
mov
mov
int3
jnp
xchg
jmp
jmp
adc
ja
mov
shr
out
xchg
adc
mov
or
jae
push
cmp
popf
adc
pop
cdq
stos
bound
sbb
cmp
outs
xor
into
ins
test
xchg
xor
push
leave
mov
arpl
cmp
inc
jo
or
mov
push
loop
inc
arpl
test
xor
icebp
or
daa
xor
movs
fadd
xchg
and
rcr
pop
jg
aam
ja
xlat
or
cmc
add
xor
jge
mov
add
adc
cmp
pop
ret
xor
and
and
fimul
test
int
lods
or
icebp
stos
pushf
dec
outs
ds
push
adc
in
xor
mov
(bad)
xlat
cmps
mov
rcr
cmp
xchg
inc
add
add
lea
pop
faddp
sbb
jbe
xchg
or
rcl
mov
mov
pop
add
and
(bad)
cli
imul
push
pop
mov
rep
add
stc
xor
fld
dec
sub
(bad)
popa
mov
xchg
ror
dec
push
cmp
sub
(bad)
pop
cmps
into
sbb
sbb
int
in
call
lahf
int
mov
sub
adc
js
add
or
outs
aam
dec
ins
dec
lods
inc
out
(bad)
daa
sahf
loop
sbb
sbb
adc
cdq
mov
arpl
(bad)
ss
push
sti
in
mov
arpl
punpckhdq
(bad)
adc
push
xor
(bad)
push
inc
cmp
push
cli
imul
(bad)
mov
sar
and
(bad)
jg
arpl
mov
mov
xchg
ret
cmc
jo
fsub
add
sub
lahf
pop
sbb
popa
repz
fmul
and
pop
pop
or
push
adc
dec
lahf
push
into
(bad)
rcl
mul
(bad)
ss
sahf
das
pop
pop
test
cs
inc
imul
cli
xchg
xchg
mov
sahf
ret
pop
(bad)
rcr
inc
or
push
jp
sti
push
mov
int3
xchg
mov
sar
out
and
call
inc
fsubr
(bad)
in
sbb
out
jp
loopne
mov
xchg
push
sbb
repnz
jmp
iret
mov
or
pop
inc
push
fwait
mov
mov
dec
xchg
push
sub
cmps
stos
inc
sub
test
out
mov
sar
xor
mov
push
out
imul
xor
addr16
xor
aam
push
pop
sub
cmp
(bad)
lods
sti
lea
pop
jbe
aam
fnstenv
pop
fwait
xor
xchg
movq
xchg
ins
std
jae
cld
mov
cli
or
sbb
pop
(bad)
movups
vmulpd
ins
stc
mov
mov
fwait
int3
mov
jmp
pop
addr16
es
(bad)
xchg
inc
mov
(bad)
pop
lods
xchg
cmp
(bad)
or
push
fcmovu
shr
ins
or
aaa
jne
addr16
cmp
xchg
aaa
(bad)
xlat
ret
mov
sub
inc
mov
fisttp
and
mov
mov
or
pop
test
and
in
xchg
xor
push
jbe
movs
out
pop
jnp
cmps
push
jge
jmp
push
fmul
dec
outs
sub
or
mov
sbb
adc
imul
push
mul
outs
mov
test
out
jne
jae
mov
jle
lock
xchg
clc
xchg
mov
adc
mov
push
rcr
and
call
gs
out
das
sub
adc
pop
cli
imul
jbe
mov
pop
pcmpgtb
mov
sbb
clc
jmp
adc
out
mov
xchg
lahf
movs
shl
sbb
cmps
inc
int
mov
xor
cmps
out
xchg
dec
cmp
ins
and
mov
and
xchg
outs
mov
pop
and
ins
out
fmul
out
cmps
hlt
jge
mov
or
pop
(bad)
and
mov
ret
fs
retf
pop
hlt
pop
mov
or
sbb
out
lods
js
or
jbe
jl
movs
sbb
add
mul
jmp
dec
jecxz
and
add
iret
cmps
hlt
jns
and
dec
or
sbb
fisubr
es
push
xor
dec
inc
and
push
pop
mov
lahf
std
repnz
stos
jo
xor
std
jo
repnz
add
mov
lock
dec
movs
xor
jno
lds
daa
or
push
in
jne
mov
movs
inc
es
mov
jns
ds
add
pop
mov
mov
js
icebp
pop
pop
test
jnp
outs
jge
jge
xor
cmp
jle
cmc
and
fist
stc
push
sbb
fs
pop
inc
push
lock
inc
out
into
mov
sub
out
mov
es
xor
sbb
out
out
ins
sahf
and
mov
xchg
adc
push
sbb
outs
and
mov
pusha
cld
mov
fldenvw
(bad)
jnp
xor
inc
aas
mov
loopne
clc
out
aam
inc
sub
sub
loope
xchg
inc
dec
push
jmp
push
mov
mov
jecxz
retf
jae
or
shl
sar
cld
sub
push
add
adc
pminsw
shl
xor
int3
(bad)
push
retf
fcomi
push
gs
sar
cmp
retf
ror
or
pop
jecxz
mov
popf
bound
movs
pop
fadd
lods
xchg
push
pop
hlt
inc
and
cmp
and
int3
into
pop
arpl
mov
sub
(bad)
cmc
cmps
out
add
(bad)
mov
loop
add
pop
stc
cmp
repz
loopne
out
mov
int
ins
fst
gs
adc
dec
repz
enter
push
and
sub
jp
fstp
ins
cmp
mov
adc
push
ins
or
add
frstor
push
stos
add
sub
shl
xchg
and
push
xor
mov
cmp
push
jb
bound
add
dec
cmp
into
rcr
xor
enter
(bad)
jo
outs
repz
jl
nop
adc
inc
cmps
ins
jbe
cli
mov
or
fsubr
xlat
jns
cmp
cmp
aam
sti
inc
ret
sbb
pop
scas
dec
popf
into
pop
sbb
movs
push
xor
add
and
fld
gs
inc
push
shr
rcl
push
js
mov
std
pop
xchg
xchg
aad
(bad)
cmps
pop
sub
and
push
(bad)
jmp
mov
xor
and
xor
cs
outs
adc
add
mov
inc
aad
xor
inc
dec
jmp
adc
add
ins
jb
pop
cli
stc
stos
pop
mov
cmc
ins
cmc
push
xlat
pop
adc
jno
call
dec
xor
out
xchg
pop
outs
jne
push
xchg
shl
movs
cwde
(bad)
xor
xor
push
mov
cmps
and
addr16
je
pop
mov
in
fild
push
pusha
in
out
lock
loopne
xor
shr
mov
mov
xchg
fsubr
xchg
dec
add
sub
cdq
inc
fisttp
xor
pop
add
sbb
movs
xor
aas
fmulp
(bad)
mov
mov
movs
jle
add
and
and
lds
rol
lods
cs
icebp
cmps
and
adc
xor
clc
jle
add
neg
hlt
mov
sbb
dec
shr
aas
push
test
repnz
inc
add
jmp
push
add
cmp
sbb
push
(bad)
iret
sbb
cmp
xor
push
inc
(bad)
push
mov
(bad)
outs
and
test
mov
mov
xor
add
mov
sbb
enter
jns
test
into
ficom
inc
pop
imul
add
fs
mov
push
sub
adc
xor
xchg
mov
dec
fdecstp
inc
out
inc
les
fst
scas
add
in
(bad)
xchg
in
(bad)
scas
inc
enter
inc
(bad)
fidivr
scas
mov
imul
test
inc
out
enter
jno
xchg
jecxz
cs
cmp
xchg
leave
lock
pushf
mov
hlt
(bad)
jecxz
xchg
sbb
pop
xor
out
add
mov
repnz
ja
lock
shr
in
mov
cmp
sbb
add
mov
(bad)
pop
push
xchg
push
push
mov
xchg
out
leave
je
cmc
retf
ss
cwde
pop
in
int
loope
and
fsub
inc
addr16
or
mov
pop
push
jmp
or
gs
pop
cmp
mov
neg
push
gs
mov
fdiv
mov
and
add
pop
pop
push
pop
lea
ins
out
add
add
push
pushf
or
inc
mov
loop
jg
jmp
sub
jl
adc
(bad)
fbld
xlat
movs
jne
jl
add
and
cdq
push
arpl
ins
fcomp
adc
lods
in
dec
adc
repz
pushf
ss
imul
dec
push
add
jae
sbb
js
shl
icebp
test
push
nop
add
in
retf
or
mov
dec
pusha
icebp
(bad)
jnp
shl
jmp
inc
(bad)
mov
push
cmp
lds
and
mov
mov
push
dec
ins
add
movs
out
arpl
mov
femms
hlt
mov
jbe
test
test
fabs
mov
lock
pop
arpl
mov
or
xchg
sub
and
sbb
(bad)
inc
jmp
and
adc
es
nop
and
adc
dec
adc
mov
xchg
fcmovnbe
dec
pop
mov
fs
xor
fst
jl
jmp
jge
add
loopne
sti
imul
rcr
scas
fist
pushf
mov
stos
loopne
(bad)
cwde
push
das
mov
out
jmp
addr16
sti
inc
addr16
add
mov
cmp
add
cdq
imul
cmps
xor
(bad)
aad
mov
rcr
lds
pop
add
or
mov
(bad)
ss
dec
dec
in
in
add
push
mov
movs
fidiv
dec
rol
sub
cmc
ja
js
mov
loop
jo
inc
in
retf
pop
in
adc
sbb
sbb
mov
out
xor
xchg
mov
or
addr16
(bad)
dec
sahf
jb
mov
out
outs
jo
sbb
in
or
xchg
in
xchg
or
dec
xchg
(bad)
in
cmp
ss
mov
inc
xor
inc
(bad)
push
dec
and
sub
test
mov
or
(bad)
(bad)
xor
mov
outs
cmp
mov
xchg
sub
cmp
sbb
ss
cdq
inc
inc
add
pop
pop
mov
ret
daa
or
cmp
cs
mov
push
adc
adc
sar
lods
add
(bad)
adc
pop
add
or
sbb
ins
inc
imul
xchg
sar
sahf
mov
imul
inc
test
fdivr
lods
xchg
sub
(bad)
lock
jp
sbb
push
push
or
cli
mov
test
add
mov
stos
fs
dec
add
ins
mov
and
stos
jecxz
(bad)
movs
in
aad
cld
and
push
mov
sbb
rol
and
aam
lods
mov
add
cmps
imul
jg
js
popa
sbb
mov
pop
jmp
pop
lds
std
mov
sbb
daa
pusha
push
jle
(bad)
retf
aas
arpl
mov
xchg
push
mov
retf
aas
xor
push
sub
xchg
leave
pop
ror
push
xchg
xchg
es
jne
mov
adc
jbe
ins
or
lds
pop
retf
pushf
popa
add
mov
sbb
jg
loope
jecxz
inc
jp
ror
lahf
cmp
mov
call
jb
push
hlt
jae
ret
loop
adc
pop
adc
cmps
cmp
lock
and
jmp
mov
out
stos
sub
cmp
jno
test
mov
push
jp
stos
push
cmp
rcl
test
arpl
or
cmp
lea
or
push
push
fistp
lea
pusha
ret
fstp
sub
xchg
add
or
neg
shr
mov
xor
push
lahf
icebp
(bad)
inc
movs
rcl
xlat
adc
mov
push
mov
mov
xor
mov
aas
mov
inc
cmp
jge
push
xor
xlat
lds
(bad)
cmp
into
pop
ins
sbb
push
adc
add
and
adc
add
xlat
loope
jno
add
fsub
retf
xchg
push
fsubr
mov
push
jle
push
call
int3
ror
fidivr
add
cwde
mov
sbb
sub
je
mov
dec
or
popf
pop
lock
ins
xchg
mov
xchg
(bad)
int3
test
in
jg
sar
lock
inc
push
pop
or
ja
pop
xchg
repz
xor
test
cli
icebp
cmp
mov
aaa
mov
cwde
ins
frstor
arpl
cmp
aad
lea
out
sub
pop
mov
xchg
test
sub
jnp
xchg
cwde
neg
mov
or
test
push
mov
in
out
jmp
pop
sti
lea
inc
cwde
std
push
push
sahf
mov
ins
out
stos
addr16
les
mov
dec
fidiv
and
pop
in
in
push
jno
je
mov
jbe
icebp
pusha
cmps
sub
(bad)
outs
jne
xor
dec
mov
pop
jp
test
ss
aaa
loop
add
xor
xor
mov
push
add
movs
add
fadd
cld
sbb
bound
jmp
vpminub
cmps
lds
mov
mov
mov
adc
adc
jbe
imul
lock
push
cld
sbb
movs
mov
cwde
inc
data16
xor
int3
pop
loopne
mov
in
aas
pop
xchg
ds
mov
cmps
pop
test
sub
(bad)
or
sbb
retf
out
xlat
cmps
push
out
push
es
sub
and
xchg
fisub
xchg
loope
xchg
in
jb
and
push
stos
popa
ss
repz
push
in
or
mov
push
rcr
std
adc
ss
cmp
iret
loope
std
push
icebp
inc
outs
bound
push
clc
cld
push
shr
(bad)
jge
xor
rcr
addr16
sti
cwde
jb
xchg
adc
gs
add
mov
pop
ret
add
pop
add
sub
sbb
outs
push
xor
inc
add
push
xor
je
mov
(bad)
dec
xor
sbb
push
arpl
call
xor
add
dec
mov
pop
call
ins
enter
(bad)
enter
pop
mov
push
lds
cmp
push
xchg
hlt
xchg
mov
xor
bound
xchg
pushf
fidivr
or
xchg
adc
aam
mov
mov
or
mov
icebp
adc
repz
fist
jno
jb
inc
aad
cmp
(bad)
cdq
mov
retf
cld
out
mov
mov
imul
adc
adc
gs
leave
nop
fwait
ror
mov
pop
stc
stos
repz
clc
enter
out
and
mov
pop
cmp
pop
dec
or
jbe
imul
hlt
xor
adc
es
dec
pop
pop
pop
jb
xor
lahf
fdivr
push
cmc
cmps
sahf
les
mov
out
push
retf
mov
leave
test
adc
pop
es
sub
fs
xlat
push
les
xchg
ins
je
and
push
(bad)
mov
bound
adc
push
in
shl
pushf
into
adc
mov
hlt
sbb
inc
jmp
ret
jge
int
push
test
jmp
mov
fistp
ret
ins
xchg
xchg
pop
call
sbb
xor
xchg
mov
mov
add
aaa
ss
jae
add
mov
adc
aas
test
cmp
mov
leave
pop
jae
lods
(bad)
mov
gs
add
out
mov
dec
cwde
fisttp
mov
xor
outs
cmp
je
and
shr
mov
push
les
stos
fldcw
sbb
repnz
js
dec
retf
inc
push
outs
xchg
xor
dec
fild
adc
mov
retf
xor
addr16
pop
or
pop
repz
dec
add
pop
in
xor
fdiv
repz
pop
repz
(bad)
xlat
inc
rcl
movs
xchg
jg
cmps
xchg
test
(bad)
cdq
adc
aaa
mov
or
pop
pop
xor
sub
push
es
(bad)
ret
clc
xor
pop
mov
jae
sub
push
and
enter
mov
rol
jmp
(bad)
out
in
mov
call
loopne
jae
sub
and
and
or
daa
and
jo
pop
test
imul
daa
xor
and
push
and
pop
bound
frstor
rcr
out
sub
fs
icebp
xor
jmp
inc
out
pop
int
and
push
and
or
arpl
(bad)
xchg
push
push
mov
inc
sub
ins
pop
sub
adc
(bad)
neg
cld
call
jno
mov
data16
jp
loopne
pop
scas
daa
call
push
push
jae
fwait
sbb
std
mov
pop
add
daa
adc
sahf
and
jmp
in
dec
retf
test
and
loop
xchg
es
dec
add
jo
dec
mov
leave
push
mov
(bad)
popa
or
cmc
fs
loope
mov
adc
dec
outs
jp
mov
popa
shr
or
leave
das
ins
pop
mov
mov
repz
pop
push
jp
div
lea
push
out
push
imul
pop
mov
pop
lds
inc
pop
pop
push
adc
xor
fnsave
xor
sbb
lods
int
loop
stos
rol
pop
mov
mov
pop
xchg
ja
imul
mov
in
ret
cmp
loope
xor
push
jecxz
sbb
add
xlat
xor
and
pop
fprem1
sbb
xor
ror
or
push
xlat
jmp
add
mov
jle
adc
inc
push
push
stc
lea
test
jmp
test
rol
ret
or
push
sub
inc
ret
in
jb
gs
pmuludq
xchg
cmps
sahf
scas
in
pop
mov
fwait
pop
sbb
mov
jns
fiadd
xchg
xchg
xlat
xchg
not
pop
aaa
cwde
dec
fiadd
adc
pop
cmps
or
js
std
loopne
aam
data16
int
shl
jecxz
cld
aas
leave
and
loope
scas
lock
adc
and
js
or
nop
sti
or
call
shr
repnz
(bad)
cmp
loopne
jns
adc
jmp
adc
add
cli
test
fsubr
cmps
push
cmp
mov
stc
ins
leave
ja
loop
push
shl
cld
jne
jbe
cdq
ins
sub
mov
jb
cmp
jmp
int
jae
jle
xor
mov
fmul
or
mov
cmp
xchg
es
loopne
xchg
imul
push
pop
jmp
cmps
mov
ja
adc
inc
or
xchg
mov
shl
xchg
push
pop
pop
repnz
xchg
iret
les
fwait
pop
sub
fisubr
mov
mov
cmp
ret
mov
stos
(bad)
aam
movs
push
sub
sub
mov
inc
sub
adc
inc
loope
mov
mov
jnp
push
mov
aam
push
pop
pop
call
(bad)
push
add
dec
addr16
rcl
sub
cdq
xor
popf
mov
dec
inc
aaa
(bad)
or
mov
repz
pop
or
adc
addr16
cmp
lods
std
mov
sub
jno
sub
add
push
aas
mov
jmp
or
outs
xchg
aad
sbb
in
test
ins
jg
fdivr
loope
inc
cmp
sar
pop
cmp
jmp
mov
aas
stos
ror
push
(bad)
xor
sub
bound
dec
(bad)
mov
push
bound
retf
add
sbb
xor
arpl
mov
mov
in
adc
hlt
xor
scas
pop
ret
ror
sub
xchg
xchg
daa
ins
ficom
mov
or
push
ins
pusha
test
xor
rol
mov
scas
je
push
retf
dec
fst
mov
jecxz
pushf
mov
sbb
and
mov
aas
out
fs
addr16
push
adc
movs
cmp
js
fisubr
sub
shl
imul
ret
mov
xchg
pop
inc
repz
lods
std
in
push
ret
retf
pusha
cmp
adc
add
mov
in
cmps
addr16
cdq
cmp
stc
fldenv
fmul
sbb
loope
stc
ret
daa
jmp
sub
jmp
out
(bad)
mov
dec
mov
ss
inc
dec
repz
mov
xchg
mov
call
leave
and
iret
shr
dec
mov
rcr
out
and
(bad)
ret
xlat
stos
stos
test
jb
(bad)
in
dec
and
in
stos
mov
xlat
dec
cmp
ja
ret
mov
in
outs
mov
xchg
xchg
rcl
call
xlat
inc
push
gs
push
inc
icebp
sti
rcl
popa
int3
shl
jl
xchg
push
push
shr
js
je
pusha
scas
popa
stc
call
mov
mov
dec
imul
ror
sahf
sbb
xchg
repz
push
arpl
into
push
js
cmps
jo
or
stc
xor
mov
loope
das
(bad)
cmp
sbb
fstp
cmps
(bad)
or
in
lods
repz
or
mov
sub
ja
bound
push
jno
test
pop
cld
cli
test
mov
inc
int3
adc
cmp
call
cmc
in
inc
jmp
add
lock
xadd
rol
xchg
dec
ret
xchg
cmp
jg
jmp
out
jbe
popa
adc
pop
(bad)
or
mov
movs
add
sar
adc
call
pop
xor
and
xchg
call
(bad)
scas
inc
mov
cmp
pop
out
mov
push
or
add
add
cwde
sahf
cwde
leave
mov
fwait
mov
pop
mov
mov
push
mov
mov
jl
or
sahf
dec
adc
ret
add
push
jmp
fld
fdivr
mov
mov
and
test
and
fstp
inc
pop
add
push
cmp
repz
cld
ss
mov
loop
test
sub
cmp
sub
mov
add
ficomp
popa
stos
(bad)
scas
test
mov
and
rcl
pop
and
xor
add
popf
mov
add
(bad)
pop
aam
retf
repz
sbb
popf
adc
or
dec
and
outs
or
fist
or
xchg
shl
adc
out
adc
add
call
cmp
jno
rcl
movs
outs
mov
sar
xchg
int3
add
xchg
(bad)
lock
and
repnz
scas
fcmovnb
mov
add
rol
pop
cld
push
cmp
jecxz
xchg
jl
addr16
call
fbld
pop
cmp
leave
fwait
jg
std
mov
(bad)
dec
add
movs
fwait
and
scas
sub
mov
mov
(bad)
mov
cwde
mov
jmp
rcl
or
ins
ja
mov
dec
xor
inc
xchg
cmp
and
inc
cmps
push
cmp
jp
sub
jmp
mov
and
mov
sub
scas
xor
mov
adc
sbb
fsub
test
sub
ret
(bad)
inc
dec
sbb
push
sub
fwait
pop
outs
push
xchg
push
fcmovnbe
jne
cmp
pop
pop
test
movs
mov
adc
pop
mov
mov
mov
loopne
nop
pop
addr16
lock
pop
mov
ret
inc
pop
pop
mov
dec
push
sti
mov
inc
jbe
mov
inc
(bad)
in
and
mov
sbb
pop
xchg
dec
cmp
pushf
into
sbb
inc
xor
jg
dec
xchg
cs
repnz
inc
cmp
adc
xor
xchg
rcl
push
push
or
ins
pop
cs
push
mov
jecxz
pop
test
dec
test
xor
pop
popf
mov
test
ss
mov
mov
in
jb
jne
dec
xor
jnp
xor
cmp
jnp
test
clc
fild
iret
push
out
push
cli
sub
ss
scas
data16
outs
mov
enter
daa
and
shl
or
cli
jp
movs
pusha
aam
setp
xor
repnz
icebp
xor
mov
std
mov
call
cmp
icebp
mov
enter
cmp
mov
ins
hlt
shl
add
ja
sub
and
js
test
adc
mov
retf
jae
push
xor
mov
es
adc
add
scas
mov
retf
and
and
or
adc
xchg
pop
test
adc
ja
in
xor
imul
daa
ds
loope
mov
lods
push
and
dec
sub
dec
out
ss
or
sub
pop
rcl
nop
pop
(bad)
or
cmp
xchg
lods
cmp
pop
out
retf
js
mov
ins
mov
in
and
xor
pop
jg
push
and
cmc
add
lods
inc
mov
aas
mov
or
iret
movs
(bad)
and
or
or
not
sub
pop
cmc
jbe
or
cs
daa
cmp
shl
push
ins
xchg
data16
test
xchg
(bad)
xchg
mov
xchg
jno
adc
push
cwde
xchg
in
ss
mov
inc
add
xchg
xchg
push
fild
jbe
cwde
jmp
jp
mov
lock
and
inc
neg
pop
movs
jmp
out
loop
clc
cld
sbb
out
pop
or
and
shr
jb
aaa
inc
retf
push
ja
and
pop
addr16
adc
aaa
adc
adc
and
aas
sbb
xlat
xor
jbe
xchg
jo
jbe
and
dec
pop
call
aaa
mov
jb
xchg
in
jne
ins
mov
aaa
mov
inc
shl
and
pop
rol
js
stc
in
inc
int3
mov
push
jns
popf
loopne
pop
mov
mov
mov
out
gs
dec
jg
es
mov
scas
or
out
movs
loope
les
lea
mov
mov
bound
cld
jecxz
sbb
mov
cmp
es
das
(bad)
icebp
mul
cmc
(bad)
stos
cmc
dec
cmp
push
in
enter
mov
daa
sub
je
jne
call
pop
lock
inc
sar
jb
push
dec
les
ja
das
arpl
jns
aaa
loop
rcl
cmp
xor
jae
repz
cmp
cmp
and
popaw
lahf
mov
jp
xchg
mul
enter
xor
rcl
fldenv
dec
jmp
mov
pop
push
neg
inc
xchg
out
mov
movs
std
xchg
add
push
mov
andps
push
sahf
retf
ins
sbb
sahf
push
mov
add
and
ror
xor
rol
sbb
mov
dec
shr
mov
push
cmp
push
inc
stc
mov
mov
and
pop
cmp
xlat
xchg
adc
ficomp
push
cwde
(bad)
mov
and
push
ficom
sbb
fstp
addr16
test
mov
sbb
outs
call
rol
dec
add
mov
scas
dec
into
mov
dec
inc
iret
cmp
fild
in
xchg
cmp
jle
xchg
or
jmp
xchg
mov
jo
repz
or
jge
shr
sub
mov
xor
add
and
cmps
or
inc
mov
sahf
loopne
cmps
(bad)
cmp
aad
mov
std
and
adc
push
sbb
imul
je
or
push
rcr
rcr
(bad)
(bad)
pop
fisttp
xor
jb
lods
mov
inc
inc
dec
push
loopne
inc
pop
inc
test
and
cli
push
inc
or
cmps
dec
fcom
fild
sub
call
js
xor
jge
adc
cmp
add
sbb
shl
ret
int
mov
adc
not
add
dec
call
ret
loope
mov
adc
fistp
lock
lods
fadd
dec
mov
pop
and
jle
mov
out
std
sbb
add
mov
jle
push
not
mov
xchg
mov
ror
mov
div
lea
ret
hlt
xor
pop
mov
mov
and
icebp
inc
ins
push
jbe
mov
xchg
cmc
and
lock
in
nop
add
pushf
scas
sbb
cmp
push
enter
in
inc
jecxz
xchg
(bad)
in
jae
jbe
(bad)
cmp
(bad)
jp
adc
repnz
sbb
jne
xchg
dec
sub
mov
push
mov
fldcw
xor
popf
push
aam
add
cmps
jle
push
dec
scas
add
aam
fdivrp
jo
fwait
mov
cmp
push
clc
and
in
lahf
aas
jge
scas
nop
cmp
lods
inc
(bad)
pop
add
stos
inc
xor
sub
or
into
lahf
push
and
lods
sbb
adc
dec
xchg
inc
fs
adc
xchg
popa
fst
push
mov
jnp
xchg
sbb
popa
es
pop
xchg
adc
imul
mov
xchg
stos
dec
repz
pop
test
in
push
xlat
cmp
lahf
test
mov
pop
(bad)
inc
sbb
push
les
push
cs
addr16
ss
lds
rcr
mov
cmp
cdq
test
sar
push
xchg
xor
nop
xchg
adc
ja
dec
dec
(bad)
jl
(bad)
cwde
or
ss
lock
xchg
icebp
xchg
mov
in
add
(bad)
dec
or
fwait
jbe
into
js
and
add
adc
cli
jnp
mov
lahf
push
and
jae
nop
dec
and
sbb
fs
xlat
ins
je
or
sbb
enter
sub
dec
jle
inc
ins
nop
repz
pop
cmp
push
out
pop
pop
fld
dec
dec
and
rol
mov
push
fucomp
xor
mov
test
pop
pop
icebp
nop
pushf
(bad)
sub
sbb
(bad)
pop
gs
cmp
sahf
mov
xor
xchg
mov
icebp
lds
dec
sbb
fbld
aaa
adc
(bad)
mov
push
mov
mov
jb
or
mov
sti
sahf
lahf
cmp
jl
imul
rcr
call
loopne
(bad)
mov
push
aam
lock
mov
xchg
dec
jo
mov
dec
fldenv
sbb
icebp
xor
fidiv
dec
retf
test
adc
add
push
push
adc
fld
ins
pop
jnp
jge
addr16
iret
push
movs
cli
fs
std
pop
not
out
and
cmc
enter
arpl
fmul
mov
sahf
jne
shr
mov
cld
loopne
rol
xchg
push
and
fisub
outs
jmp
jle
dec
rcr
xchg
enter
imul
mov
inc
aaa
jne
inc
stc
pop
ja
pop
inc
ret
ror
mov
out
fldenv
ins
xor
sbb
out
ins
add
adc
pop
mov
mov
mov
fidiv
mov
cmp
and
into
cmps
mov
shl
repnz
push
hlt
dec
aas
dec
dec
arpl
xor
icebp
xchg
adc
mov
jecxz
es
xor
das
pop
pusha
jecxz
outs
jecxz
pop
out
shr
hlt
cmc
in
mov
inc
push
fnstsw
sar
outs
mov
push
add
dec
xchg
mov
iret
je
mov
iret
pop
push
jp
add
mov
cmps
xchg
mov
movs
fwait
dec
sbb
push
mov
icebp
xchg
jbe
xlat
mov
push
fadd
fistp
push
or
lahf
(bad)
cs
rcr
fcmovnu
cmc
xor
adc
outs
mov
or
stos
add
popa
and
push
jl
(bad)
sbb
sbb
push
add
sti
aaa
test
loop
imul
adc
mov
mov
xor
icebp
sbb
push
xlat
inc
add
jmp
sub
(bad)
mov
test
neg
fs
stc
dec
fidiv
and
imul
cmp
int3
cmp
ret
jge
ds
mov
mov
aam
adc
(bad)
xchg
dec
dec
sub
jbe
mov
pop
mov
(bad)
out
pop
push
iret
jl
xchg
dec
ds
dec
mov
pop
sub
out
nop
faddp
movs
push
mov
xchg
hlt
aad
test
and
mov
in
adc
fwait
dec
sti
push
xlat
rcr
in
dec
cli
jbe
sti
icebp
ins
push
les
xor
test
dec
mov
push
aaa
add
scas
jle
sub
in
jle
pop
retf
mov
inc
jmp
sar
(bad)
sub
je
leave
mov
push
inc
push
out
daa
cmps
jne
jae
jo
xchg
jns
sub
lea
and
(bad)
loopne
mov
(bad)
pop
sbb
sar
xchg
ins
sar
add
sbb
invd
iret
dec
xlat
push
and
xchg
or
in
fwait
pop
mov
dec
ret
scas
jl
cmp
lahf
int3
cdq
aam
xchg
or
mul
aas
scas
lods
or
push
stos
dec
popa
cdq
xchg
sub
out
fcmovnbe
lahf
cmps
cmp
xchg
stos
sbb
mov
scas
call
in
fcmove
sbb
and
movs
push
or
rcr
dec
inc
test
dec
(bad)
cli
lods
inc
inc
popa
fistp
or
pop
loop
stc
ja
sub
mov
xchg
lods
and
test
fld
dec
mov
aam
mov
cmp
push
lock
aas
fadd
out
fidivr
mov
push
sbb
and
(bad)
push
pushf
jae
cmp
dec
dec
test
sbb
retf
sti
jnp
outs
or
cmps
sar
push
dec
hlt
inc
scas
gs
or
fldenv
cmc
mov
je
into
cmp
outs
cmp
dec
mov
mov
jle
mov
imul
fmul
dec
sub
test
dec
fld
sbb
mov
or
push
inc
dec
cmp
out
lock
dec
pop
call
sbb
mov
je
push
retf
imul
(bad)
loop
pop
dec
call
(bad)
ss
pop
int
lea
dec
dec
ja
test
cmc
lods
adc
sbb
jae
loope
and
dec
dec
hlt
mov
enter
cmc
fadd
mov
mul
lods
xor
adc
or
out
outs
jge
(bad)
mov
movs
in
adc
adc
sti
lea
aad
sbb
mov
ret
mov
sbb
ins
push
or
xchg
ret
fisubr
adc
cmp
fs
mov
mov
sahf
push
fisttp
in
xor
adc
stos
popf
mov
inc
les
inc
mov
mov
test
call
cdq
dec
push
pop
mov
clc
movs
push
jno
sub
ins
push
sbb
into
push
pop
sar
(bad)
xor
mov
inc
out
addr16
mov
mov
jmp
push
nop
aas
mov
and
mov
mov
and
shl
and
cdq
loop
fst
dec
mov
cs
mov
imul
addr16
jns
pushf
fidivr
add
mov
add
mov
add
int3
out
mov
xchg
push
inc
jl
adc
(bad)
cmp
mov
pop
fwait
push
sub
ret
xchg
pop
or
add
cmp
add
cs
pop
fistp
bound
push
fwait
cli
daa
data16
dec
fidivr
out
jne
xor
push
push
xor
dec
lahf
icebp
cs
les
dec
mov
mov
mov
lock
and
jle
xchg
inc
mov
sub
jecxz
jle
mov
(bad)
jmp
push
and
int3
sbb
and
and
and
sbb
cs
stos
sbb
nop
adc
mov
jge
aas
lds
pop
push
jns
retf
dec
xchg
int
jge
jmp
sahf
dec
lahf
mov
out
sbb
sbb
pop
retf
repz
xchg
pusha
fisttp
jo
fadd
fwait
loope
mov
or
xchg
test
or
mov
mov
enter
lods
iret
test
dec
je
mov
adc
adc
xor
outs
pop
ret
pusha
xor
mov
inc
js
and
push
ss
and
and
sahf
or
rol
mov
add
and
push
or
mov
shl
pop
popf
pop
mov
les
call
mov
mov
dec
retf
or
enter
push
test
push
mov
cmp
jmp
pop
mov
jns
pop
jmp
pop
out
mov
test
mov
and
(bad)
cwde
and
std
(bad)
and
xchg
xchg
cmp
loopne
push
out
jo
outs
xlat
add
jl
loopne
nop
push
in
xchg
gs
jmp
inc
das
int
pop
xchg
cmp
or
cmp
pop
adc
sub
mov
ror
and
call
not
cmp
dec
mov
or
jmp
lods
cmps
call
cmps
(bad)
jge
fsubr
sub
pop
ret
jae
jae
dec
into
adc
mov
ss
dec
mov
xor
dec
jno
sti
or
dec
mov
pop
imul
pop
das
mov
imul
cmp
inc
sub
pop
pop
sub
cld
add
inc
mov
pushf
dec
into
push
fsubr
mov
js
jl
cdq
(bad)
jmp
out
jns
inc
mov
je
xchg
loopne
addr16
and
fbstp
jmp
jo
lods
xchg
cmp
mov
gs
xor
in
(bad)
jmp
jle
int3
xchg
ret
jno
int3
ja
loopne
iret
iret
dec
push
retf
les
in
jbe
icebp
and
dec
mov
mov
xor
in
xlat
test
rcr
adc
cmp
leave
adc
ins
xor
fmul
cmp
jne
(bad)
sub
popf
lea
mov
ds
xor
push
repz
add
and
imul
cmp
push
jg
jmp
xor
fbstp
mov
retf
(bad)
jle
adc
dec
xor
ja
lea
lock
test
inc
add
mov
mov
pop
pop
scas
pop
pop
or
push
lods
daa
lods
fdiv
xor
and
or
les
pop
test
or
push
fs
mov
jp
inc
lods
test
xchg
aaa
sbb
sahf
in
pop
or
out
mov
push
fxch
inc
sahf
cmc
or
in
mov
mov
push
into
sbb
lock
ror
push
(bad)
jle
sti
add
lahf
sub
jmp
xor
sbb
mov
lea
mov
pop
cli
xor
and
jae
mov
outs
mov
js
repz
mov
pushf
rol
mov
xchg
push
ins
dec
mov
inc
mov
and
mov
push
imul
hlt
loop
mov
dec
arpl
xchg
out
mov
test
ja
cmps
vmwrite
push
add
inc
mov
int
pop
add
outs
pop
retf
sbb
add
jne
jo
xchg
or
push
in
pop
dec
daa
cld
add
popf
mov
cli
ret
mov
xor
xchg
mov
adc
nop
nop
jge
addr16
jns
cmps
call
mov
or
je
jae
idiv
push
xor
int3
mov
outs
or
inc
(bad)
jo
repz
cmp
xor
jne
or
pop
xlat
iret
js
shl
push
mov
jae
pusha
outs
xchg
sub
inc
pop
jle
pushf
sbb
pop
push
ret
mov
sbb
je
jno
sub
add
adc
call
mov
xchg
bound
jno
pop
les
pop
or
fmul
dec
adc
scas
sub
jg
pop
cmp
xor
fisttp
sbb
adc
fmul
pop
outs
sub
out
xchg
jg
les
outs
sbb
ss
ret
or
add
mov
inc
sub
sahf
xchg
sub
fadd
mov
mov
mov
xchg
or
nop
inc
call
jmp
fiadd
fimul
pop
aaa
mov
outs
inc
(bad)
pusha
inc
shl
int3
fidivr
mov
sbb
xchg
push
xchg
pop
dec
jmp
pop
out
iret
jnp
add
outs
mov
push
push
test
mov
nop
mov
jne
dec
adc
push
pop
call
ja
icebp
add
ret
popf
and
jl
dec
jb
push
(bad)
aam
call
pop
mov
outs
pop
movs
repnz
sbb
xor
sub
pop
sub
sbb
(bad)
pushf
sub
imul
shr
xchg
or
mov
out
out
cmp
mov
pusha
mov
loop
retf
mov
adc
jo
out
pusha
add
jp
lods
push
mov
mov
sbb
sub
inc
mov
lds
sbb
je
pop
icebp
mov
ror
rcl
mov
sub
xor
mov
or
inc
mov
cmp
and
or
scas
repnz
fmul
sbb
jb
setbe
fsubr
or
dec
int3
mov
lods
mov
and
out
pop
pop
outs
sub
ror
jecxz
pop
ret
mov
or
(bad)
or
stos
(bad)
ror
and
mov
jbe
std
sahf
in
jbe
mov
add
xor
pop
add
movs
(bad)
push
fwait
outs
push
dec
and
fadd
push
aad
shl
xchg
and
mov
and
fwait
lock
mov
jns
test
arpl
mov
bound
movs
push
pop
adc
push
sub
test
xchg
push
int
retf
adc
bound
repnz
lods
arpl
dec
test
pop
adc
shr
mov
pop
jo
xchg
repnz
cmp
xchg
in
nop
push
icebp
addr16
pop
mov
sub
cdq
clc
stos
push
push
xor
imul
mov
aad
bound
neg
mov
inc
add
shl
mov
setnp
xchg
sahf
or
ins
mov
inc
out
sbb
test
rol
ja
push
jmp
les
mov
push
adc
pop
ficomp
ror
xchg
sub
sbb
test
adc
mov
imul
jp
or
pop
out
mov
ud2
sbb
int3
or
(bad)
cmp
fmul
retf
inc
push
outs
mov
aas
fbstp
jne
mov
mov
cli
xchg
and
xor
push
stos
data16
inc
aaa
push
xchg
data16
cmp
loopne
push
call
fstp
int
xchg
push
xor
add
pop
xlat
adc
xchg
jmp
adc
test
dec
mov
mov
cmps
xchg
sti
fwait
fs
nop
pop
data16
rol
std
in
sahf
mov
dec
jbe
inc
pop
inc
aaa
mov
test
dec
popa
xor
call
cld
sbb
fidiv
arpl
sbb
sbb
ror
jmp
fwait
ss
push
in
sbb
out
je
std
pop
(bad)
movs
inc
cmc
sar
cmp
push
aaa
and
add
loopne
push
ins
mov
pop
jns
icebp
ja
or
jle
inc
push
sub
sub
xor
ret
mov
xlat
and
adc
sub
inc
or
push
sbb
fstp
sub
mov
xchg
ds
movs
sahf
mov
idiv
mov
stos
lock
add
pushf
dec
jmp
push
sub
lea
movs
add
cli
neg
adc
push
cmp
push
fstp
and
push
jns
add
inc
popa
call
jmp
out
jecxz
mov
push
jmp
clc
pushf
std
push
dec
retf
sub
sbb
fbld
sub
es
popa
in
inc
out
ins
adc
xchg
aad
int
sub
mov
call
das
addr16
inc
mov
inc
push
stos
ja
push
ins
loop
repz
into
in
xor
das
sub
cli
lods
lods
std
mov
add
pop
mov
sub
dec
xlat
icebp
les
xor
(bad)
mov
mov
mov
mov
aad
fdiv
cmp
mov
mov
outs
push
xor
pushf
movs
and
add
icebp
mov
push
mov
rol
cwde
jne
dec
cmp
in
scas
mov
sbb
pop
fsubr
nop
xchg
adc
gs
push
pop
(bad)
mov
push
lea
cmc
movs
in
and
xchg
sbb
cli
in
adc
xchg
iret
and
icebp
xchg
fcomp
or
push
mov
retf
xchg
retf
bound
in
and
out
jl
cwde
fldcw
push
mov
inc
mov
jnp
nop
les
pop
or
mov
pop
call
ds
push
enter
pop
mov
(bad)
add
in
lock
fistp
inc
inc
dec
sbb
bound
lods
xchg
mov
pop
clc
pop
jne
icebp
jle
push
fild
jmp
sub
ins
pop
adc
test
sub
rcr
pusha
mov
pop
daa
mov
call
pfrsqrt
pop
loop
les
es
pusha
xor
leave
xchg
xchg
in
movs
or
add
cmp
dec
mov
jmp
adc
xor
sbb
fwait
and
add
test
inc
sub
pop
mov
adc
cld
pop
cmp
jge
xor
pop
sbb
jns
stos
dec
jp
cmp
xor
cs
mov
das
mov
xor
lods
ror
shr
(bad)
mov
mov
shr
test
cmps
xchg
xchg
fs
mov
xor
test
pop
(bad)
mov
inc
or
push
fwait
repz
mov
sahf
retf
loop
clc
rcl
sbb
xor
rol
pop
out
inc
leave
add
jge
pop
xchg
cs
es
push
mov
out
jl
adc
aad
adc
enter
mov
mov
pop
inc
push
xlat
add
fisubr
jb
lock
je
fadd
scas
aaa
cli
fimul
movs
push
nop
iret
xchg
mov
dec
enter
pushf
rcr
or
daa
xor
inc
cmps
mov
std
jmp
sub
imul
and
jle
sub
je
jmp
push
sahf
test
xchg
scas
pop
xor
mov
pop
pop
dec
aas
mov
rcl
out
shr
retf
push
cmp
dec
jmp
mov
fwait
or
mov
push
stc
rcr
pusha
nop
inc
pop
or
xchg
ins
inc
xor
and
ja
ret
test
add
les
mov
sub
xor
dec
add
icebp
lahf
test
and
cld
scas
mov
into
cwde
push
jae
mov
sub
jb
push
jg
das
push
fldenv
xchg
fmul
push
push
xor
cld
pop
stc
push
adc
popf
lock
mov
mov
adc
jp
jecxz
loop
mov
add
shl
mov
(bad)
in
sbb
test
mov
out
adc
sti
dec
pop
pop
cmp
and
cmps
mov
and
mov
dec
(bad)
xchg
call
push
aad
sahf
xchg
mov
pop
adc
adc
mov
rol
int
ds
out
inc
pop
shr
push
std
ds
xchg
sub
cmps
push
mov
jb
in
sbb
pusha
mov
jecxz
test
popa
in
push
dec
not
xor
icebp
fwait
int
(bad)
mov
(bad)
cmps
es
test
stos
mov
jge
fbld
mov
mov
ret
push
aas
mov
cmp
(bad)
pop
(bad)
or
add
and
and
jae
cmp
xchg
sub
(bad)
push
pop
sub
inc
std
sbb
push
jmp
mov
(bad)
fdivr
pop
mov
retf
(bad)
dec
data16
fiadd
xchg
bound
mov
clc
test
sub
repnz
dec
pop
pop
mov
push
xchg
add
xchg
fs
add
nop
sub
push
out
jg
mov
sub
xchg
jmp
pop
dec
jo
aas
sbb
outs
and
aam
jle
nop
test
jne
out
sbb
jno
loope
inc
pop
and
pushf
arpl
pop
sbb
mov
sub
pop
push
nop
xor
pop
adc
mov
dec
js
dec
mov
push
jp
pop
scas
xchg
jg
fst
add
jno
aas
adc
mov
push
mov
jbe
imul
mov
jb
leave
imul
pop
push
fdiv
mov
cdq
call
adc
mov
test
jle
dec
pop
adc
mov
push
sahf
xor
dec
adc
push
popf
xchg
imul
add
je
xchg
and
pop
es
inc
inc
adc
jg
pop
movs
jl
out
call
cdq
xor
repz
movs
inc
sti
mov
in
jecxz
adc
test
outs
xchg
pushf
stos
cmps
sub
xchg
cli
les
test
iret
addr16
shl
jbe
or
repnz
in
jb
shl
add
les
adc
(bad)
xor
mov
push
cwde
mov
pop
mov
shrd
mov
sbb
mov
mov
into
or
jl
mov
dec
pop
add
jb
mov
xor
les
ficomp
add
out
ins
push
retf
cmc
pop
mov
dec
adc
nop
mov
sbb
pop
sub
std
lahf
pop
(bad)
inc
push
fwait
out
sub
mov
inc
pusha
add
(bad)
in
rol
jno
inc
in
test
mov
push
sbb
and
inc
ss
bound
sbb
cli
cmp
call
ret
cmp
mov
mul
push
ds
xor
cmp
add
mov
outs
and
js
and
pop
jns
shl
dec
lea
(bad)
jmp
adc
sbb
lods
jmp
sar
repnz
call
dec
pop
sub
dec
adc
rep
jg
out
hlt
xor
retf
(bad)
std
and
(bad)
pop
and
aam
cwde
mov
rcr
push
jne
adc
xor
cdq
sahf
push
loop
out
sar
pop
sbb
nop
iret
fild
daa
loope
adc
repz
pop
outs
outs
retf
arpl
jbe
xchg
cmp
inc
and
out
repz
mov
cmp
lods
pop
sub
mov
fucom
or
mov
scas
and
xchg
add
pmaxub
outs
movaps
mov
mov
scas
(bad)
sbb
xor
mov
inc
mov
push
fldcw
out
loop
fwait
sub
call
sub
jbe
stc
js
lods
fst
popa
cmp
mov
pop
pop
loopne
add
int3
xchg
call
add
push
pusha
or
ret
fwait
and
push
sub
add
push
popa
shr
ror
rcr
stos
cwde
mov
sbb
xchg
aas
popf
pusha
out
out
pop
repnz
retf
jp
stos
addr16
sbb
mov
mov
mov
cld
dec
and
sub
inc
dec
and
push
clc
cmp
inc
ins
mov
cmps
dec
adc
add
fsub
stc
push
mov
out
in
push
xchg
xchg
ins
lock
mov
pop
cmp
adc
dec
(bad)
pop
and
jnp
and
jge
add
mov
shl
movs
dec
mov
sahf
gs
bound
xor
addr16
jb
inc
and
push
sub
fwait
loop
mov
pop
xor
enter
mov
or
es
mov
jmp
xchg
inc
push
jbe
cs
sahf
fdivr
cld
push
mov
pop
cmps
ret
das
or
adc
mov
adc
jl
jno
xchg
dec
lods
add
add
popa
cld
or
hlt
fbld
(bad)
dec
push
mov
push
outs
mov
inc
test
xabort
sbb
lea
adc
xchg
sbb
jb
dec
inc
retf
or
ins
lds
stos
xor
retf
jno
pop
imul
jno
cmps
cld
pop
add
push
imul
(bad)
sbb
ss
dec
div
dec
test
xor
xor
pop
push
xchg
cli
daa
inc
cld
(bad)
adc
mov
mov
mov
test
daa
cli
sbb
ins
jno
xchg
mov
out
cmp
mov
les
leave
(bad)
stos
adc
xchg
cmp
dec
sbb
xor
call
icebp
push
mov
pop
pop
mov
sti
mov
xchg
jge
(bad)
ror
mov
or
rol
add
push
fs
movs
mov
cmps
jnp
mov
ret
ins
pop
ds
fwait
mov
push
repz
xor
xchg
inc
fistp
loop
fisub
mov
sbb
mov
sub
fsubr
out
repnz
(bad)
cmp
xchg
(bad)
sub
cmps
push
and
dec
loopne
lock
sbb
mov
pop
dec
add
pop
rol
adc
loope
adc
and
xchg
add
fwait
aad
mov
dec
add
mov
fistp
and
sbb
jno
mov
adc
mov
dec
mov
fdivr
mov
jae
stos
sbb
cld
or
pop
out
and
inc
mov
dec
push
or
mov
lock
inc
jno
xchg
sbb
mov
das
into
pop
push
xor
mov
cdq
jb
push
ins
inc
outs
sbb
mov
xchg
xchg
bound
fadd
gs
dec
and
or
xor
in
test
push
out
test
xor
add
pop
push
pop
das
dec
lods
cmp
in
addr16
sub
rcr
and
je
fisttp
jns
adc
pop
cwde
stos
inc
or
mov
pop
mov
jge
popf
in
adc
(bad)
adc
xchg
push
pushf
imul
pushf
dec
test
les
sub
retf
or
push
in
jecxz
jne
inc
icebp
cmp
xchg
and
pop
jecxz
mov
mov
mov
xor
add
aaa
ss
int
jmp
jne
or
cmp
sbb
test
pop
test
imul
mov
nop
xchg
inc
dec
call
test
jmp
sub
fcomp
sub
lods
shr
jmp
dec
add
and
fidiv
pop
cmp
xlat
bound
aam
mov
mov
and
dec
jmp
jle
mov
cmp
lahf
sbb
(bad)
jb
rcr
mov
inc
(bad)
jne
je
lods
inc
pop
ret
pop
sub
adc
cmp
mov
mov
(bad)
test
in
sbb
xchg
shl
(bad)
sub
cmc
mov
push
pop
add
xchg
jecxz
mov
cmp
(bad)
mov
js
lock
pop
or
jg
jl
icebp
int3
mov
stos
xor
hlt
sub
inc
jmp
xor
lock
pop
mov
out
adc
mov
in
xchg
outs
int
lds
adc
xchg
mov
lock
pop
add
in
pop
retf
mov
popf
xchg
push
stc
and
pop
mov
test
jp
movs
sub
test
mov
adc
dec
sub
push
cmp
test
cmp
int
cmpxchg
in
mov
loope
ret
ins
dec
test
sbb
push
cdq
xchg
ret
arpl
push
stc
out
dec
jle
je
mul
add
cmp
scas
(bad)
ficom
mov
test
ds
int
and
fidivr
mov
fs
xor
push
sar
(bad)
cs
pop
loope
sbb
add
in
aad
push
enter
add
fcomi
in
pop
es
add
or
movs
pop
cmp
sub
test
popa
mov
popa
test
add
clc
test
outs
jle
dec
outs
out
addr16
jmp
jl
out
stc
adc
pop
and
iret
and
inc
outs
cmp
call
mov
out
jl
fisttp
xchg
dec
imul
inc
sub
jle
xchg
jo
xchg
jmp
neg
mov
jo
sbb
scas
in
push
inc
mov
jmp
fnstenv
fs
pop
xor
cs
mov
cmp
xchg
or
mov
jmp
ror
loope
jbe
xor
pushf
mov
and
and
sbb
cli
stc
xchg
pop
xchg
call
jne
mov
stc
push
ds
mov
movs
sbb
xor
cmp
adc
jg
and
and
push
stos
out
jecxz
cmc
fistp
sbb
xlat
dec
mov
enter
add
icebp
or
icebp
push
ds
or
iret
lds
movhps
jg
sbb
push
(bad)
jmp
sub
pop
sbb
xchg
jle
outs
test
test
push
jbe
(bad)
imul
jle
mov
adc
mov
retf
and
ins
movs
sub
sub
outs
add
xchg
nop
push
cmp
rol
pushf
xlat
cwde
mov
xchg
add
ret
mov
repnz
(bad)
iret
cmc
lods
(bad)
pop
xor
dec
aam
lods
xlat
popf
inc
jns
daa
loop
jns
pop
rcl
xchg
js
loop
and
bswap
jmp
loop
(bad)
cmp
lahf
xlat
mov
movs
aas
sub
movs
xor
loopne
jno
sbb
and
(bad)
cli
cmps
sar
xchg
jle
dec
outs
(bad)
push
and
xor
mov
(bad)
dec
mov
aaa
aam
mov
adc
(bad)
imul
cmps
(bad)
rcl
outs
and
out
add
dec
idiv
xor
adc
(bad)
sub
jo
inc
add
push
xchg
pop
add
xchg
(bad)
mov
add
es
sub
dec
mov
shr
shr
pusha
xchg
es
cld
out
sub
aaa
retf
pop
mov
sahf
(bad)
fwait
scas
ins
push
xchg
sbb
int3
popf
or
ins
outs
mov
call
mov
and
clc
add
and
sub
jecxz
push
push
add
in
bound
mov
out
jl
cmps
int
mov
jecxz
mov
pop
imul
adc
call
sub
loop
mov
mov
push
sub
adc
mov
jecxz
int
iret
popa
fsubr
std
dec
cmp
in
fcomp
test
inc
mov
or
(bad)
lock
movs
ficomp
outs
inc
(bad)
inc
add
mov
dec
dec
les
ins
out
sahf
jnp
sub
je
add
sub
and
call
xchg
aad
mov
xchg
jne
rol
dec
push
mov
mov
call
cwde
int3
addr16
mov
or
clc
cmps
push
leave
dec
outs
mov
pop
mov
in
(bad)
arpl
pushf
mov
inc
movs
mov
cmps
retf
inc
aaa
jg
cdq
cdq
inc
iret
lds
pop
ror
cmp
cmp
int
mov
adc
int
(bad)
or
arpl
imul
(bad)
dec
pop
xchg
test
cld
ja
mov
pushf
imul
mov
outs
(bad)
std
cmp
std
inc
cmps
ins
(bad)
push
cmps
fwait
movs
leave
cwde
(bad)
inc
test
jae
bound
pop
inc
scas
mov
inc
dec
sub
aaa
lea
imul
jl
mov
push
dec
mov
(bad)
jb
inc
adc
adc
sar
lock
lock
(bad)
cmp
mov
movs
popf
ins
stos
fadd
xlat
ror
les
push
int
and
and
daa
and
sbb
jmp
inc
inc
test
out
xchg
pop
ja
das
out
jge
and
mov
xchg
clc
jae
jmp
(bad)
cmp
popa
adc
lds
sub
sbb
adc
add
push
cli
jbe
fstp
push
xor
push
push
mov
or
cmp
inc
adc
pushf
loope
fdivrp
outs
xchg
xor
sub
xchg
add
cmc
mov
lods
aas
or
xchg
or
cld
mov
push
scas
fwait
mov
fsub
pop
dec
add
clc
and
push
sub
out
jge
sub
lahf
in
test
sub
idiv
adc
out
xor
xchg
jg
loope
call
push
jmp
inc
test
inc
sbb
(bad)
cwde
lods
ss
dec
ret
jne
inc
sti
sar
jno
cmps
lock
jno
inc
xchg
pop
inc
push
mov
dec
inc
xchg
mov
jo
ss
cmp
sub
fadd
out
add
cwde
xchg
iret
mov
fs
mov
cs
push
mov
ret
cmp
dec
jmp
es
add
add
push
pop
xor
fs
enter
pop
push
rcr
test
adc
or
jae
ins
lea
popa
push
fild
push
add
jno
or
dec
int3
ss
dec
out
outs
jnp
inc
cmp
mov
push
xor
cmp
daa
mov
sbb
scas
mov
and
mov
arpl
pop
sub
frstor
or
ins
int3
out
jb
adc
ins
mov
aaa
pop
push
jecxz
es
jecxz
aas
shr
add
lock
mov
(bad)
and
dec
aad
inc
in
lods
retf
add
neg
xor
fistp
lock
sti
js
inc
retf
jg
adc
sub
dec
retf
add
fnstcw
aaa
xchg
(bad)
push
(bad)
mul
ins
leave
(bad)
mov
pop
std
imul
das
push
mov
rcr
ret
jne
mov
retf
lds
stos
in
mov
cmp
outs
xor
ret
int
icebp
(bad)
dec
xchg
ret
xor
out
adc
jns
shl
cmps
clc
loopne
xchg
dec
into
add
sub
arpl
jbe
xchg
mov
sbb
mov
shr
dec
div
lock
mov
adc
popf
leave
aad
mov
add
fcmovnbe
jae
xchg
dec
pop
std
dec
call
cli
and
jp
ss
xchg
mov
fwait
test
mov
add
leave
mov
ins
pushf
fidivr
loopne
inc
push
fcom
scas
and
inc
je
retf
mov
mov
repnz
in
pop
push
(bad)
jo
mov
and
pop
(bad)
mov
sbb
inc
sbb
in
loop
pop
xor
and
lods
js
shr
jmp
fild
and
mul
adc
out
adc
mov
scas
sbb
xor
ret
lahf
arpl
data16
pop
mov
(bad)
cmp
mov
inc
icebp
sub
jno
push
push
fsub
mov
mov
mov
mov
cs
ss
or
test
test
jne
cmps
aad
mov
push
fild
jmp
(bad)
pop
adc
loop
xchg
int3
inc
loop
add
or
test
mov
cmp
inc
fist
(bad)
in
jnp
lock
sbb
mov
stc
in
into
fiadd
adc
(bad)
sub
addr16
out
mul
daa
inc
js
loop
xor
lods
sbb
ja
push
mov
aas
mov
in
das
dec
mov
sahf
dec
inc
push
stos
pushf
jle
jae
push
or
xor
sbb
push
sub
call
adc
push
xchg
sahf
sub
xor
cmps
xor
push
pop
shr
mov
pusha
sbb
repz
std
stos
inc
pop
mov
pop
push
shr
std
inc
sbb
mul
call
aaa
dec
fdiv
lahf
xor
inc
xchg
test
fdiv
and
aam
add
aad
fmul
mov
cmp
rcl
mov
cmp
test
add
(bad)
sti
sub
outs
jno
inc
add
sbb
inc
imul
(bad)
lock
xchg
popa
pop
stc
add
retf
cli
(bad)
cli
rcr
and
sbb
lods
mov
sbb
mov
vmovlps
xor
mov
mov
popa
push
rcr
mov
dec
cmp
pusha
in
nop
lea
cmp
popf
out
push
mul
pop
xlat
loope
or
test
fwait
jmp
mov
out
cmp
mov
mov
add
xor
movs
pop
cmp
retf
repnz
mov
repnz
cwde
jo
dec
(bad)
jmp
cwde
inc
outs
mov
lods
dec
inc
or
mov
ja
and
hlt
xor
aam
rcl
adc
inc
xchg
inc
mov
neg
jbe
adc
imul
sbb
mov
and
and
inc
or
jnp
out
dec
or
dec
mov
mov
je
dec
pop
inc
mov
test
lea
sub
fimul
and
js
(bad)
out
xor
inc
(bad)
in
outs
sub
sahf
add
dec
les
cmp
retf
inc
(bad)
lahf
lods
test
push
cmps
aam
xchg
add
loope
das
imul
in
mov
cmc
mov
lock
sbb
mov
cmp
out
mov
inc
pop
or
ins
pop
jae
fs
ins
js
movs
or
jno
stos
or
jmp
jg
test
or
adc
arpl
or
push
test
jmp
mov
ror
and
cmps
add
dec
mov
nop
pusha
std
sbb
dec
movs
stc
scas
cmp
sbb
dec
add
xor
por
cmp
xor
cmp
aad
xchg
(bad)
or
scas
fcom
cwde
fidiv
clc
lds
das
push
or
loopne
ins
shl
popa
aad
jne
retf
je
pop
cli
push
call
or
pop
retf
in
bound
int3
rcr
pop
nop
pop
fsub
in
push
mov
adc
(bad)
sub
adc
xor
test
inc
adc
test
jle
repnz
sbb
add
inc
inc
out
shl
mov
popf
test
mov
mov
fdivr
retf
(bad)
fsubr
mov
pop
sti
call
pop
out
pop
jo
add
ss
clc
out
dec
lock
cmp
and
(bad)
sub
jb
test
(bad)
std
push
dec
scas
mov
mul
std
pop
inc
xchg
ins
inc
xchg
and
xchg
retf
out
or
pop
or
out
mul
nop
das
lahf
xchg
xchg
(bad)
iret
sbb
xor
addr16
xchg
xor
push
mov
sbb
fs
loop
leave
add
xor
stos
outs
push
pop
jecxz
fiadd
mov
jecxz
dec
cdq
push
jo
push
mov
dec
arpl
test
cld
xchg
push
(bad)
adc
xor
dec
sub
pop
or
sub
mov
sahf
pop
xlat
ds
push
dec
lock
jecxz
mov
mov
jb
mov
mov
push
je
sahf
push
and
retf
sbb
call
or
and
add
sar
es
mov
mov
push
hlt
push
in
shr
pop
and
nop
loope
or
sbb
outs
ficomp
fidivr
arpl
lock
inc
adc
int
push
stos
bound
mov
sbb
les
pop
gs
xor
test
push
mov
sbb
(bad)
int
xchg
loopne
mov
xchg
movs
cmp
test
fs
rcl
pop
jae
dec
ins
fs
(bad)
inc
or
jb
jmp
xor
fiadd
lea
fld
pop
imul
inc
push
scas
dec
xor
icebp
push
mov
popa
add
mov
xchg
xchg
inc
push
(bad)
(bad)
add
sbb
out
ss
popa
hlt
pop
mov
add
add
ds
mov
div
sub
push
emms
(bad)
jbe
adc
push
(bad)
mov
mov
popa
cmova
ins
inc
xchg
mov
shl
div
or
imul
sbb
test
xor
scas
daa
aad
or
adc
xor
mov
mov
jl
jecxz
sub
mov
jo
lods
out
inc
xor
(bad)
pop
int3
add
fwait
mov
sub
fmul
cmp
int3
imul
daa
push
and
push
pop
push
inc
out
(bad)
xlat
test
gs
sub
mov
stos
dec
push
mov
jnp
mov
retf
xor
out
push
mov
pop
push
dec
and
inc
movs
push
mov
cmp
nop
imul
mov
out
add
jo
cmp
aas
jl
xchg
test
push
call
sbb
test
sbb
cli
sbb
stc
dec
test
addr16
cdq
dec
inc
push
(bad)
pop
(bad)
cmp
not
outs
mov
pop
sar
mov
pop
mov
pop
push
push
add
ss
cld
fstp
nop
mov
xor
in
lock
ret
jns
ret
loopne
cmp
je
popa
nop
jno
pop
stos
xchg
push
mov
and
in
aad
push
ficom
icebp
lea
dec
iret
fsubr
add
ins
pushf
scas
rol
dec
add
call
mov
xor
cmp
or
imul
mov
mov
test
mov
sub
ins
xchg
movs
sar
ficom
dec
dec
xchg
and
mov
out
cdq
movs
stos
repnz
pop
out
jge
aad
fs
out
jno
add
out
sub
ja
sbb
lods
call
push
jns
pop
sbb
mov
jo
pop
mov
loopne
sbb
mov
jge
movs
popa
fcmovnb
push
jmp
aad
mov
dec
ret
fdivr
icebp
stos
sub
js
add
arpl
cmp
sbb
ret
cmp
push
and
stos
xor
or
pop
adc
cmp
jecxz
leave
sbb
mov
stos
scas
pop
ret
adc
cmps
xchg
add
push
pop
push
movs
out
or
xchg
aas
mov
push
(bad)
fnstenv
aam
and
jmp
jbe
int3
push
jns
data16
or
jecxz
mov
fisubr
mov
mov
adc
push
icebp
test
enter
pop
pushf
ficom
xchg
vphaddwd
mov
js
or
xor
adc
adc
repnz
outs
push
sub
stos
push
mov
xchg
mov
cmc
rcl
push
dec
and
or
das
ss
xor
xchg
xchg
retf
in
fmul
adc
jg
mov
in
fld
enter
cmps
aas
fcomp
sub
add
pop
sbb
fsub
sbb
push
sub
clc
xor
mov
add
mov
loope
xor
inc
mov
pop
(bad)
loope
out
lea
arpl
and
das
repz
inc
jbe
cmp
outs
test
and
jbe
shl
add
mov
sub
adc
(bad)
push
pop
sub
movs
mov
mov
(bad)
scas
bound
gs
inc
jns
xchg
imul
dec
clc
push
jge
xchg
popf
and
and
inc
fimul
shl
or
lock
and
add
add
shl
(bad)
rol
xchg
cmp
push
ss
xchg
cmp
adc
push
jb
test
adc
jno
leave
pop
movs
jo
add
scas
jnp
adc
shl
and
in
sub
cld
std
adc
hlt
scas
jmp
je
cmp
jg
outs
fisttp
ins
mov
pop
hlt
or
xor
(bad)
jmp
and
cmps
shl
inc
inc
fs
lods
cmp
pop
jg
hlt
or
ficomp
in
mov
stos
enter
loopne
sbb
aaa
lods
popa
mov
cwde
sbb
ficom
xchg
popa
dec
add
inc
int
stos
or
and
and
pop
dec
repnz
aaa
xlat
pop
scas
cli
add
(bad)
hlt
pop
lahf
fdivr
sar
pushf
ret
push
pop
mov
out
add
sbb
cmp
cmp
idiv
mov
(bad)
dec
mov
fs
cli
mov
mov
and
mov
inc
jb
call
cmps
rol
or
adc
lods
out
pop
adc
pop
cmps
mov
sbb
(bad)
dec
cmp
ret
mov
rcr
jg
mov
jge
fnsave
mov
(bad)
and
cmp
mov
mov
(bad)
sbb
cmp
in
mov
cmps
js
jae
js
and
pusha
daa
jmp
bound
repnz
xor
inc
js
xor
pop
jbe
add
loopne
hlt
scas
jb
dec
or
sub
add
inc
in
jmp
aad
int
xlat
mov
fwait
aaa
pop
lea
adc
push
mov
sbb
test
sbb
loopne
jno
es
clc
enter
push
lock
push
ins
dec
ficom
sbb
lods
mov
gs
jae
ins
mov
test
js
pop
adc
fucomp
xlat
in
loope
sub
aas
or
call
inc
xchg
sub
data16
pusha
and
dec
add
cli
or
rol
inc
cdq
dec
pop
adc
add
jmp
outs
rcl
movs
loope
fiadd
(bad)
push
xchg
sbb
or
xor
jg
xchg
clc
jno
sbb
and
mov
or
mov
movs
gs
adc
mov
sub
std
mov
lea
fist
pop
xchg
mov
in
or
in
xor
cdq
mov
out
cmp
dec
sar
pop
or
dec
lods
jmp
mov
int
cdq
add
je
sub
popf
mov
push
dec
sub
fimul
jmp
ds
mov
inc
fmulp
fnstenv
cmp
sbb
mov
mov
into
push
aas
pop
mov
cmp
mov
dec
jecxz
add
jecxz
cmp
xor
rep
mov
gs
add
mov
pop
clc
xor
arpl
xchg
stos
call
cmp
jnp
enter
inc
fmul
sbb
shl
mov
repnz
or
pop
cmp
sub
sub
sub
stos
adc
inc
leave
jno
mov
rcl
movs
test
popf
popa
ins
cmp
pop
push
outs
dec
xor
jnp
mov
cs
js
outs
push
add
ds
call
cmp
mov
popf
ficom
jns
sub
dec
fxch
xor
sub
mov
mov
adc
xchg
xor
cli
sbb
addr16
das
aas
js
sub
and
sub
fwait
add
sub
into
cmps
mov
adc
je
mov
iret
hlt
ins
dec
aas
mov
sub
dec
adc
mov
adc
ins
dec
pop
xlat
loope
push
sub
ins
sti
inc
push
ret
retf
jmp
mov
sbb
loop
icebp
mov
push
(bad)
lock
cmc
or
das
cmp
jmp
cli
sub
pop
and
aam
out
(bad)
in
push
mov
cmp
shl
(bad)
sbb
pop
movs
(bad)
cmp
js
cmp
gs
int3
adc
xchg
(bad)
retf
xor
nop
push
mov
lods
jbe
das
test
out
inc
int
inc
mov
xchg
call
add
inc
lods
jl
jge
add
and
test
dec
inc
jp
sahf
and
cmp
shl
leave
retf
out
call
shr
(bad)
mov
mov
lea
gs
(bad)
push
data16
pop
add
pop
and
xor
jnp
cld
out
jmp
les
mov
scas
popa
cld
jg
jge
enter
fild
add
(bad)
test
adc
xchg
cli
mov
fbld
out
push
xchg
iret
cmp
push
call
je
out
pop
in
xlat
(bad)
hlt
add
inc
(bad)
ds
and
xchg
in
test
dec
pop
cs
mov
dec
sahf
cdq
sbb
fist
dec
pop
sbb
adc
imul
sub
pop
mov
test
push
cmp
imul
dec
(bad)
ret
adc
lds
xchg
int
xor
adc
js
sbb
mov
cld
retf
sti
xchg
mov
sub
adc
or
mov
jl
jns
mov
cmp
mov
adc
xor
dec
(bad)
mov
xchg
push
fs
and
repz
jbe
mov
push
popf
(bad)
leave
outs
ficomp
add
pop
cdq
out
push
xchg
jno
mov
jl
or
dec
inc
(bad)
nop
ss
ret
cmp
movs
adc
xchg
xchg
addr16
cwde
mov
pop
mov
cmp
or
fisttp
jbe
(bad)
jne
jne
cmp
retf
jae
or
movs
jl
arpl
scas
shl
test
js
shr
or
and
fstp
(bad)
jle
add
aas
cmps
xchg
rol
outs
ror
xor
dec
add
fcmovne
adc
call
inc
aas
bound
or
mov
call
dec
mov
outs
pop
jb
call
xor
add
lds
push
scas
imul
mov
loop
pushw
adc
xor
ror
and
mov
loopne
ins
mov
pop
push
add
inc
pop
xor
ja
js
cs
mov
push
cmp
mov
jmp
fistp
jns
ror
mov
inc
cld
mov
cmps
in
sti
jmp
js
scas
cli
cmp
test
pop
cmp
xor
cdq
cmps
stc
fs
pop
jmp
jae
cmp
xchg
stos
sub
fstp
repz
icebp
pop
(bad)
sbb
movs
push
pusha
inc
add
hlt
(bad)
out
dec
(bad)
inc
(bad)
xor
sbb
clc
loop
clc
int3
cmc
xor
in
mov
fisub
pop
ss
cmc
sbb
mov
mov
xchg
imul
pop
sbb
xchg
add
stos
pop
outs
adc
test
sahf
jge
fild
xchg
inc
cmp
mov
imul
inc
mov
or
pop
mov
mov
sti
leave
out
sbb
jbe
and
(bad)
scas
jne
leave
pop
xchg
lahf
aaa
xchg
xor
in
mov
in
xchg
nop
xchg
sbb
jecxz
repnz
jo
rol
cmp
(bad)
retf
rcr
or
mov
jns
pop
lods
popa
test
cmp
inc
push
scas
adc
mov
sbb
push
jge
xor
pushf
inc
icebp
movs
or
xor
ins
pusha
fimul
cwde
sbb
aam
lods
pop
aas
out
xlat
cwde
sbb
outs
inc
retf
mov
mov
jb
(bad)
ins
cs
mov
stc
retf
dec
dec
sbb
mov
sub
iret
into
adc
xor
std
mov
sbb
jno
imul
(bad)
loopne
mov
cmps
cld
xchg
and
and
pop
rcl
dec
lds
xchg
and
call
(bad)
fxch
(bad)
and
xchg
hlt
push
inc
push
sbb
lods
pop
xlat
mov
in
or
clc
add
mov
cmc
dec
mov
out
or
fidivr
jmp
fiadd
ror
cmp
sbb
or
pop
or
xchg
stos
int3
std
retf
and
mov
push
mov
or
mov
and
cmps
xchg
mov
ins
nop
scas
mov
sub
mov
add
out
xchg
cmps
xchg
or
lods
jne
sahf
in
sbb
and
pop
push
dec
pop
dec
shl
ror
les
adc
adc
ds
jp
sbb
and
(bad)
fucom
sub
in
cmc
mov
pushw
cdq
ins
and
in
clc
ja
xor
adc
repnz
stc
push
inc
add
jmp
movs
maxps
mov
cmc
adc
cdq
retf
and
cmp
loop
inc
mov
pop
mov
int
sub
cmc
push
dec
aas
shl
idiv
retf
push
xor
mov
inc
movs
test
jle
jo
out
xlat
call
dec
add
cld
adc
sub
mov
std
jecxz
(bad)
mul
xor
xlat
xchg
out
je
jmp
shl
dec
popa
push
add
add
loop
sub
iret
(bad)
test
call
repz
aaa
out
lods
lods
jo
je
push
outs
push
fidivr
xchg
xchg
js
jg
mov
push
inc
jp
adc
add
push
jle
mov
mov
pop
ror
test
lock
push
mov
adc
repz
es
mov
(bad)
mov
enter
sub
das
add
pop
out
dec
mov
call
aas
dec
repnz
adc
pop
je
stos
jo
sbb
and
jle
mov
dec
and
data16
fnstsw
push
add
adc
xchg
push
mov
sub
je
jmp
sbb
gs
in
fadd
push
jae
xor
xchg
push
jno
mov
(bad)
in
adc
pop
lea
loopne
repz
and
mov
mov
mov
jl
cld
mov
out
xor
jo
ins
sbb
inc
lahf
fs
jge
push
mov
fisub
out
pop
cmp
sub
mov
mov
pusha
mov
ret
cmps
push
pop
sub
sbb
dec
test
in
or
push
cld
scas
and
pop
scas
adc
outs
add
jne
ja
ds
xlat
sub
sub
pop
rcr
xchg
or
mov
(bad)
xor
adc
pop
call
call
or
cmp
mov
inc
dec
mov
out
mov
aad
gs
jns
lea
jp
pop
repz
call
jae
leave
push
test
or
shl
ja
add
add
or
and
test
cmp
jmp
ror
push
ret
cmp
push
mov
mov
and
ins
cli
sbb
and
sub
sub
test
out
sbb
(bad)
std
add
xchg
cwde
ret
mov
repz
outs
dec
push
lar
sbb
dec
dec
std
rcl
xor
xor
xor
mov
jg
adc
jns
cmp
jmp
jne
push
push
lea
ja
or
inc
out
(bad)
ss
out
hlt
jae
jo
mov
mov
push
push
xchg
jecxz
sbb
sbb
add
stos
or
xor
popf
cmp
nop
or
in
icebp
popa
xchg
enter
sub
pop
cmp
lods
pop
xchg
(bad)
jge
(bad)
shl
mov
inc
mov
sahf
ins
in
and
in
rol
add
into
adc
mov
rcl
xor
adc
mov
mov
aas
jge
xor
inc
cmp
mov
jae
lods
and
jecxz
mov
div
xchg
mov
in
icebp
mov
xor
(bad)
fld
or
or
cmp
push
iret
ss
sti
or
shr
lahf
push
adc
cmp
test
sub
retf
dec
push
jmp
stc
mov
mov
sub
xchg
pop
repz
enter
fs
mov
cmp
shl
pop
jge
test
dec
and
pop
out
mov
xchg
sub
es
out
rol
mov
int3
and
cmp
out
jp
push
mov
xlat
xor
jl
jmp
mov
xchg
mov
inc
jle
xor
mov
pop
aas
mov
lods
lea
in
fmul
into
mov
xor
popf
lea
fs
jle
dec
retf
push
ja
sti
adc
hlt
cmps
je
arpl
ret
pop
clc
(bad)
jp
or
jne
dec
shl
into
loope
leave
sub
mov
and
add
xor
mov
bound
or
sub
xchg
dec
and
xchg
mov
imul
out
aam
jbe
pop
push
adc
movs
mov
mov
stos
push
adc
push
push
mov
mov
and
push
push
mov
shr
cmp
imul
cdq
sahf
dec
cmp
repnz
xor
std
inc
ds
(bad)
xchg
inc
cmp
outs
push
and
xchg
push
hlt
pop
jno
xor
clc
add
shld
ror
add
movs
inc
in
ja
push
dec
push
cmp
inc
dec
pop
push
mov
inc
fwait
adc
adc
adc
cld
rcr
pop
ror
push
add
call
inc
push
mov
cmps
fdiv
fdiv
jle
inc
inc
or
test
jp
iret
adc
push
pop
add
sub
add
add
ins
xor
xor
sbb
jle
dec
movzx
dec
and
mov
(bad)
push
std
int3
dec
mov
cmp
adc
mov
jb
(bad)
outs
or
xchg
ins
xchg
sub
xor
dec
jmp
ret
jle
clc
ret
xor
gs
stc
jecxz
xor
push
int3
adc
imul
push
cmc
pop
push
ret
cmp
inc
mov
lods
aaa
dec
pop
int3
xchg
out
dec
call
call
dec
pop
dec
jp
(bad)
xchg
xchg
cmp
and
nop
inc
int
and
sub
push
sub
aad
cmp
lods
fcomp
add
into
sbb
or
mov
xor
cmp
pop
aam
and
dec
mov
arpl
xor
pop
cmp
dec
and
mov
jns
fwait
imul
and
jno
mov
hlt
in
cs
push
repnz
mov
add
pop
push
dec
add
inc
xchg
stc
data16
sbb
mov
mov
cli
mul
xchg
ror
xchg
mov
push
jno
ror
inc
and
mov
push
mov
icebp
pop
loope
cdq
loopne
xor
pop
add
xor
xchg
or
xchg
push
test
mov
movs
daa
push
cwde
sbb
jb
push
xor
ins
fnstenv
and
retf
mov
fistp
mov
sbb
add
lock
push
dec
addr16
xchg
mov
mov
fwait
pop
call
and
push
and
pop
cdq
and
gs
add
jae
jnp
adc
jns
repnz
repnz
dec
inc
arpl
pop
xchg
xor
cwde
push
push
or
outs
adc
or
inc
mov
rcr
fdiv
sub
scas
(bad)
int3
or
addr16
mov
jnp
call
pushaw
mov
mov
popf
sbb
sahf
vmovdqa
xchg
cs
fisttp
adc
pop
mov
ins
fcmovnb
adc
sbb
popf
(bad)
xchg
test
mov
test
test
lock
jmp
push
push
div
xchg
aam
jp
inc
and
(bad)
(bad)
mov
(bad)
lahf
loope
daa
pop
jmp
fdiv
es
and
xchg
xlat
mov
dec
ds
inc
mov
and
lds
jl
fld
xchg
sbb
mov
or
rcl
adc
imul
sbb
add
mov
or
inc
or
int3
xor
add
(bad)
call
pop
inc
test
mov
sub
jl
jae
data16
pushf
adc
or
sub
cdq
retf
cdq
nop
cmp
sub
popf
scas
add
xor
int3
mov
mov
push
jae
aad
shr
mov
pushf
sbb
addr16
xlat
dec
dec
leave
push
hlt
xchg
xchg
rcl
mov
dec
ror
mov
cmps
or
xchg
or
push
lock
(bad)
and
adc
and
xor
xchg
out
sbb
daa
push
mov
adc
(bad)
mov
jno
inc
inc
jmp
in
and
in
jb
das
or
int
imul
pop
cwde
mul
xor
fist
fisubr
xchg
mov
nop
jns
pop
rcl
push
mov
and
push
imul
sbb
mov
cmp
inc
sahf
cmp
test
mov
(bad)
das
pusha
cs
int3
jne
push
lock
retf
bound
sub
repnz
inc
out
es
retf
in
push
xor
scas
stos
mov
(bad)
dec
cmps
cld
push
sub
je
iret
mov
jbe
addr16
repz
jbe
push
adc
jns
sahf
pop
xor
jo
xchg
leave
sbb
in
and
test
test
inc
inc
(bad)
add
adc
mov
mov
lahf
ds
clc
adc
stc
and
push
add
leave
inc
mov
jnp
mov
lods
push
push
sbb
je
fwait
cmc
jno
jmp
pop
inc
pop
into
mov
fwait
leave
xchg
outs
jp
aad
mov
popa
xchg
inc
adc
push
mov
sub
(bad)
xchg
(bad)
es
sbb
jl
xor
mov
mov
imul
leave
dec
xor
add
(bad)
mov
cmp
mov
sar
dec
adc
gs
push
adc
add
cdq
push
inc
adc
mov
out
pop
in
mov
outs
sbb
gs
adc
mov
outs
jl
fnstcw
add
vmwrite
stos
sbb
mov
jb
xchg
out
sbb
or
sbb
inc
aad
xor
(bad)
cmp
xchg
ins
aad
add
rol
addr16
push
adc
icebp
push
xchg
push
push
sbb
jg
int3
sub
mov
sar
sub
ret
stos
xor
mov
mov
test
retf
fdivr
xor
jnp
pop
rcl
(bad)
cmc
cwde
repnz
movs
mov
xor
add
repnz
mov
out
xchg
push
std
pop
cdq
jmp
jg
xor
outs
jge
call
xor
xlat
and
push
mov
sbb
pop
ins
cmps
inc
in
dec
and
sbb
push
inc
stos
adc
mov
cmp
std
inc
fsub
inc
cmp
inc
cs
rol
or
or
arpl
ret
sub
stos
jbe
sub
mov
es
scas
ficomp
inc
dec
into
mov
dec
mov
xchg
and
lds
mov
mov
inc
movs
xor
pop
es
lds
jmp
inc
xchg
mov
cmp
pop
cmp
nop
push
push
shr
or
stos
jecxz
push
dec
gs
mov
mov
stos
shr
and
ins
dec
adc
inc
test
scas
mov
xor
(bad)
pop
das
rol
dec
mov
pop
pop
cmp
sub
(bad)
data16
pop
pop
push
jne
jecxz
jge
(bad)
adc
lea
pop
xchg
cmp
fwait
xlat
dec
ja
(bad)
lods
imul
push
test
adc
mov
push
push
jae
mov
xchg
dec
add
or
jae
(bad)
imul
xor
pop
int3
cmc
cmps
jmp
clc
movs
(bad)
pop
mov
movs
std
clc
pop
bound
outs
stos
mov
sub
pop
or
add
push
jmp
jno
leave
push
xor
sbb
jno
cmps
(bad)
cli
sti
fwait
jge
mov
les
mov
dec
cmp
cld
push
xor
nop
daa
fwait
add
jnp
inc
mov
inc
(bad)
mov
int
addr16
arpl
fwait
outs
push
shl
xor
xor
push
sub
xor
cwde
inc
cli
cld
xlat
je
loope
sub
inc
sub
popa
and
aaa
add
mov
popa
jmp
into
popf
dec
dec
out
shr
jb
rcl
call
mov
fistp
xor
repz
movs
xor
or
and
stos
push
pop
sbb
retf
jo
stos
test
sub
mov
test
sub
(bad)
mov
(bad)
xor
sub
pushf
or
pop
mov
call
jbe
or
mov
(bad)
lods
test
div
or
jmp
add
cmp
xor
lock
xchg
xlat
cmp
jl
dec
sub
sbb
mov
inc
xchg
cmp
push
push
adc
cs
inc
inc
adc
dec
mov
or
mov
sbb
fs
iret
fsubrp
xchg
mov
xchg
sti
jmp
or
xchg
test
jl
push
mov
sbb
mov
(bad)
cmp
enter
inc
aad
aam
pop
retf
scas
dec
push
add
sti
fs
popa
addr16
xor
mov
or
mov
add
xchg
mov
pushf
repnz
or
inc
push
movs
in
jp
(bad)
rol
pop
inc
mov
xlat
aad
and
jp
iret
lea
aam
or
jno
ret
xor
pop
out
movs
add
iret
sub
test
inc
jbe
mov
mov
jmp
mov
cmc
and
out
rcl
sub
or
dec
cmp
gs
movs
mov
sbb
movs
loop
data16
push
fwait
jp
out
or
push
add
aam
stc
std
push
xchg
jo
in
int3
and
aad
xchg
jmp
inc
add
addr16
pop
lahf
out
mov
push
repz
jmp
out
outs
lods
cmps
mov
jmp
push
jno
xor
test
mov
push
pushf
int
call
sub
ins
cmp
sub
mov
mov
and
mov
gs
and
fdivr
mov
aad
les
into
outs
sysexit
push
add
add
cmp
into
ret
enter
gs
jmp
fucomip
fldenv
mov
adc
jg
std
or
inc
sub
fimul
mov
dec
popa
or
in
mov
jne
jno
pop
imul
jb
push
adc
call
pop
int
mov
xchg
and
(bad)
rol
mov
adc
or
inc
popf
or
movs
pop
loope
movs
adc
out
mov
push
cdq
ds
lea
mov
adc
sbb
sbb
movs
cmp
jg
inc
ret
xchg
popf
sub
jle
mov
or
dec
popa
in
pop
push
xchg
(bad)
lods
shl
stc
pop
mov
mov
cdq
sbb
call
es
pop
fwait
jmp
xchg
int
inc
or
not
xor
adc
and
test
cmp
mov
jns
outs
mov
dec
xlat
jmp
cdq
jns
fidiv
xchg
sbb
and
push
jmp
(bad)
mov
scas
call
in
std
mov
inc
jl
push
ret
xchg
jmp
mov
mov
mov
cmp
and
(bad)
xor
dec
call
(bad)
mov
fiadd
data16
fstp
add
rcl
xchg
out
ret
rcl
mov
add
xor
frstor
xchg
cwde
(bad)
inc
mov
les
mov
inc
out
or
add
icebp
rcl
pusha
mov
xchg
jo
cmp
jmp
js
sub
punpcklwd
mov
js
mov
cmps
push
inc
adc
cmp
ficomp
inc
jmp
and
pop
cmc
jmp
mov
pop
scas
sti
mov
shl
cli
js
int3
scas
sub
pop
call
pop
jg
int3
mov
pop
loop
cmp
sub
inc
(bad)
int
push
dec
mov
inc
push
xchg
cdq
mov
dec
in
mov
outs
pushf
aaa
shl
fsubr
and
xchg
xor
mov
push
into
movs
ret
fld
retf
dec
mov
add
in
scas
push
mov
pushf
lock
lods
leave
adc
mov
outs
pushf
lods
(bad)
fisttp
test
mov
call
punpckhdq
mov
or
sub
loopne
pop
jno
adc
push
gs
loopne
mov
cmp
and
jl
in
bound
fstp
gs
xor
mov
std
push
dec
stos
outs
fwait
sbb
iret
ss
popf
add
ret
addr16
mov
pushf
loopne
sar
rcl
fist
mov
or
inc
sahf
mov
xlat
fdivr
or
sub
cmp
(bad)
mov
movs
leave
ds
retf
push
adc
popf
lock
xlat
xchg
jl
xchg
mov
lahf
mov
mov
cmp
fidiv
dec
inc
cmp
sub
test
mov
test
loop
dec
push
inc
cs
add
sub
daa
sbb
out
sub
or
mov
pop
mov
mov
inc
push
loopne
(bad)
cli
push
fadd
xor
dec
or
cdq
dec
popa
into
xor
test
push
les
mov
lock
add
adc
pop
repz
jmp
push
push
push
stc
jge
inc
icebp
push
fs
pop
pop
cmp
adc
xor
call
dec
imul
clc
sbb
je
and
push
jle
push
aam
xchg
(bad)
hlt
inc
and
mov
int
(bad)
sub
add
inc
ror
enter
xor
iret
(bad)
shl
lds
inc
and
pop
lods
cmp
fidiv
pop
pop
jb
sbb
shl
ret
popf
fld
ror
loop
mov
out
inc
jno
pop
out
in
jl
jo
daa
in
leave
adc
in
inc
adc
mov
clc
mov
hlt
rcr
jle
cs
nop
inc
dec
in
pop
(bad)
dec
pop
dec
cmc
dec
out
adc
int3
mov
ins
mov
sti
mov
call
jp
mov
sbb
outs
pop
inc
xor
jnp
push
dec
jg
aad
ss
jae
sub
mov
adc
mov
push
cmp
out
add
add
outs
(bad)
or
popa
bound
or
and
cmp
cmc
inc
add
xor
hlt
cld
mov
test
dec
sbb
(bad)
imul
(bad)
ret
mov
cli
inc
(bad)
ret
cmc
push
das
mov
dec
sub
(bad)
jmp
pop
hlt
sub
cli
pop
sbb
mov
lock
loope
in
adc
mov
jo
imul
inc
cmp
mov
fs
inc
xor
adc
push
fstp
and
jns
mov
leave
lods
and
(bad)
clc
inc
sub
mov
shld
in
mov
(bad)
jmp
push
test
pop
pop
mov
sbb
scas
pop
add
pop
aad
stos
dec
int
push
pop
dec
lahf
push
pop
pop
imul
iret
xchg
dec
int
int3
out
sub
pop
adc
icebp
xchg
cdq
lea
sbb
dec
shl
outs
retf
repnz
fist
adc
popf
xchg
add
fist
loop
iret
in
cli
cmp
jmp
or
hlt
pop
lds
ja
sub
inc
sbb
retf
ins
lock
xchg
jo
push
xor
dec
xchg
push
ret
mov
fidivr
and
mov
xlat
mov
mov
scas
sbb
sbb
push
add
ret
int3
cmp
adc
adc
adc
sbb
adc
popf
rcr
inc
nop
pop
jo
or
lods
dec
(bad)
sub
inc
stos
ret
(bad)
dec
out
jge
sub
xor
pop
mov
mov
arpl
push
push
xor
leave
jle
pop
and
or
xor
mov
mov
mov
dec
pop
fs
or
ret
cwde
push
popf
repnz
xor
and
dec
movs
add
pop
fiadd
jno
data16
push
add
inc
adc
bound
inc
stos
sub
stos
sbb
into
sbb
mov
xchg
iret
pop
into
adc
pop
mov
or
pop
out
std
sub
pop
pop
leave
dec
pop
inc
or
xor
aaa
in
lock
jecxz
add
jmp
sbb
cmp
sbb
fmulp
or
pop
out
and
in
mov
jno
fwait
push
repnz
sbb
jle
stc
jecxz
push
mov
es
xchg
movs
push
fsubr
mov
pop
adc
pop
test
adc
sub
push
std
imul
in
stos
int
inc
push
fs
adc
mov
jne
retf
xchg
sub
call
push
ret
xor
push
fadd
je
(bad)
retf
(bad)
jp
push
retfw
xor
xchg
mov
hlt
imul
push
dec
pop
movs
dec
sbb
cld
addr16
jge
jge
and
sahf
mov
xchg
mov
ins
mov
enter
mov
fiadd
inc
(bad)
(bad)
mov
clc
inc
movs
xchg
dec
push
jno
jno
repnz
in
int3
push
jnp
and
stos
jp
call
mov
call
pcmpeqd
sbb
cmp
iret
(bad)
push
aaa
push
inc
push
sbb
xchg
cmp
push
out
mov
or
mov
mov
inc
addr16
loopne
lods
cmp
or
adc
(bad)
mov
gs
ss
icebp
(bad)
ins
pop
pop
retf
jmp
out
test
jecxz
xchg
ror
mov
and
push
cmp
gs
outs
scas
mov
cdq
push
div
jnp
loope
push
bound
mov
cs
dec
dec
pop
push
ror
(bad)
jl
xchg
pop
ins
cwde
adc
call
or
cld
scas
ror
ja
idiv
(bad)
push
mul
push
out
or
nop
xor
fnstcw
mov
xor
(bad)
xlat
mov
pop
hlt
sub
mov
outs
push
fisub
rcr
mov
and
sub
jmp
cmps
push
xor
push
mov
xor
jne
and
fidiv
inc
or
dec
or
push
xchg
sub
ret
dec
adc
adc
mov
es
and
(bad)
shl
mov
hlt
nop
add
jg
jnp
xchg
mov
outs
inc
adc
test
xchg
jmp
dec
mov
pop
test
cli
pop
pop
(bad)
(bad)
mov
inc
mov
mov
push
ficom
inc
cmp
repz
push
stos
repz
and
inc
cld
and
(bad)
lock
dec
sub
mov
sbb
inc
movs
or
jmp
sbb
add
xchg
cmc
jns
scas
(bad)
stc
jecxz
clc
push
cmp
cdq
in
lods
data16
xchg
sub
dec
xor
enter
sub
push
xor
jle
dec
daa
inc
in
cmc
jmp
repz
mov
add
inc
pop
cld
push
rcl
and
mov
sub
call
vfrczpd
popa
add
pop
adc
lahf
ret
jae
mov
xchg
hlt
and
test
mov
popa
add
xor
shr
adc
sbb
push
xor
pop
in
xor
gs
repnz
adc
push
push
gs
and
enter
imul
push
iret
mov
arpl
out
push
fisttp
push
sub
in
int
pop
pop
dec
inc
push
dec
lods
(bad)
mov
stos
sub
and
pop
loopne
hlt
xchg
lahf
xor
add
xor
push
push
retf
jnp
mov
ret
mov
dec
lock
mov
imul
sub
lock
arpl
mov
in
push
sub
scas
add
push
xor
sbb
scas
retf
outs
or
cmp
dec
jo
nop
cmp
lods
bound
add
out
in
push
rol
clc
idiv
xor
push
xchg
ret
xchg
push
(bad)
push
inc
adc
add
loopne
adc
div
jno
sub
imul
retfw
fwait
xchg
mov
aad
sub
push
push
sbb
arpl
sub
xchg
add
ss
push
xchg
div
dec
imul
outs
add
sub
ret
pop
ret
aad
dec
mov
mov
(bad)
push
out
jae
(bad)
mul
sub
stc
rol
call
mov
xchg
pop
mov
bts
out
leave
ins
jl
xchg
stos
xchg
lea
mov
pop
pop
jbe
push
sub
loopne
inc
(bad)
cmp
push
cmp
ss
bt
xor
adc
retf
xor
sti
dec
out
scas
int
inc
push
and
adc
lods
setp
aaa
dec
and
int
push
dec
mov
daa
out
xchg
bound
cmps
clc
inc
mov
adc
mov
or
setne
xchg
mov
and
retf
dec
or
cli
mov
xlat
fmulp
cmp
movs
pushw
and
shr
xor
imul
xlat
or
mov
xor
rol
xchg
fwait
std
sbb
push
jecxz
nop
and
inc
(bad)
pop
ja
and
in
dec
leave
cmp
mov
fidivr
pop
xor
pop
stos
test
fs
aas
int
ins
push
pushf
mov
fstp
je
loopne
in
pop
lock
test
scas
std
xchg
loopne
cmp
xor
(bad)
sbb
retf
and
and
fdiv
imul
inc
(bad)
dec
jnp
push
push
pop
repnz
add
aaa
mov
ja
dec
inc
and
pop
aad
sub
sub
js
aam
clc
xchg
mov
dec
mov
gs
cwde
and
daa
sbb
cld
push
and
adc
sub
inc
lods
add
cwde
inc
mov
js
fnstcw
sbb
or
scas
out
inc
repz
call
cmp
sub
or
es
mov
lods
movs
cmc
cmps
xchg
mov
clc
shl
repz
jae
lock
jmp
scas
not
dec
mov
mov
fwait
scas
mov
xor
and
or
jg
dec
dec
movs
repnz
sbb
int3
in
inc
sub
mov
iret
sub
adc
into
jmp
aad
mov
or
adc
movs
jnp
das
ins
arpl
and
outs
adc
xor
mov
adc
loopne
cwde
sti
mov
cli
(bad)
xchg
pop
(bad)
sbb
adc
rol
or
jge
inc
loopne
daa
inc
mov
clc
xchg
or
mov
and
test
jmp
pop
add
lock
xchg
adc
pop
xbegin
(bad)
cmps
call
adc
cmp
adc
add
xor
retf
in
ret
xchg
out
add
movs
lahf
test
mov
and
in
(bad)
cdq
sahf
sub
add
dec
out
add
jge
retf
xchg
add
dec
ja
into
test
enter
and
(bad)
cmc
test
jnp
cs
xchg
xchg
pusha
inc
jbe
call
push
xchg
sbb
fnstcw
xchg
inc
pop
(bad)
in
jne
mov
push
shl
or
clc
rcl
outs
jmp
mov
xor
aam
aam
fsub
mov
adc
adc
stos
in
sub
mov
lods
cdq
sub
mov
jp
pop
inc
aam
cmps
inc
popa
imul
dec
adc
dec
xor
rol
in
outs
loop
je
pop
fs
pop
scas
cmp
mov
sub
stos
jne
mov
push
mov
cdq
sti
cmp
clc
ud2
dec
scas
or
pop
arpl
push
xor
cmps
mov
mov
sbb
dec
sbb
movs
ret
dec
cwde
cmp
sti
leave
in
scas
jnp
daa
test
scas
jne
mul
jl
mov
mov
push
xchg
jle
shl
call
sub
dec
lods
add
adc
dec
sahf
dec
aam
stos
pop
pop
pop
aas
mov
mov
icebp
daa
and
push
mov
lods
inc
fiadd
xlat
push
test
mov
mov
gs
clc
mov
icebp
sub
fcmovbe
(bad)
lea
fs
enter
xor
mov
sbb
pop
in
fs
push
ds
xchg
jg
fnclex
iret
out
mov
mov
mov
xor
xlat
or
fidivr
push
mov
mov
ins
pushf
ja
adc
pop
and
mov
sti
sti
clc
push
and
hlt
fistp
aad
pop
jae
icebp
(bad)
gs
push
jmp
mov
pop
clc
pop
or
dec
shl
fsubr
jno
pop
or
pop
popf
push
pop
dec
push
or
jmp
lahf
dec
ins
jg
xchg
or
adc
out
adc
out
bound
fistp
addr16
lea
addr16
sub
add
sbb
int3
fcmovbe
gs
(bad)
popa
lahf
dec
shl
and
sbb
icebp
sub
and
adc
(bad)
mov
mov
push
pop
in
lahf
out
aas
pop
jns
(bad)
sub
mov
retf
push
push
stos
cmp
cmp
fwait
jg
push
lahf
push
adc
push
pop
rol
lea
in
arpl
shl
inc
and
loopne
or
cmps
shr
aam
push
xchg
rcl
adc
sub
pop
or
jnp
(bad)
ror
rol
sbb
fwait
or
sub
loope
adc
push
xlat
cmc
aas
push
mov
xchg
scas
pop
lods
mov
iret
inc
fsubr
xchg
in
ss
jecxz
dec
xchg
push
jmp
sahf
push
mov
jl
add
inc
inc
and
das
fbstp
adc
ret
push
ror
loop
cmp
dec
or
test
les
in
fisubr
jb
jmp
fst
lock
dec
mov
mov
mov
out
pusha
mov
out
add
jae
out
shl
cld
aad
and
(bad)
mov
ds
pushf
pusha
xchg
nop
mov
mov
fstp
int
fadd
fld
sar
out
sbb
sub
push
pushf
xchg
or
repnz
jnp
out
add
xor
fidivr
(bad)
jle
xchg
mov
cdq
add
or
pop
cld
sub
clc
sbb
stc
pusha
ins
mov
pop
xchg
cmp
lods
push
stos
jmp
and
xor
aas
repz
enter
push
sbb
dec
stos
out
repnz
or
repz
adc
push
xor
cmp
xchg
or
xor
mov
es
xchg
dec
jle
loop
fcomp
xchg
cmp
cld
or
and
int3
cmp
mov
cmp
dec
cmp
es
mov
js
bnd
add
cmps
hlt
jae
mov
xor
mov
invd
shl
jb
dec
icebp
data16
sbb
fnstsw
mov
xchg
movs
dec
jp
push
ins
push
enter
xor
sbb
movs
jmp
shr
retf
push
inc
mov
call
jbe
cmps
cwde
add
mov
dec
push
mov
shl
(bad)
inc
leave
aas
sub
fmul
or
nop
cmps
add
and
or
pop
jae
das
add
cli
xchg
cmp
jo
leave
add
(bad)
jae
aas
leave
scas
out
pusha
fnsave
ins
sub
retf
xor
mov
adc
mov
and
add
ror
out
sbb
xchg
or
cmp
sub
daa
dec
dec
push
nop
js
lods
repz
xchg
or
hlt
pushf
ds
pop
lea
movs
mov
mov
std
out
or
xor
cmp
shl
repz
iret
cmp
daa
aad
dec
fld
lods
in
dec
jge
sub
pop
mov
outs
jmp
cmc
jge
es
pop
cmps
push
cmp
cmps
push
es
ret
lock
mov
fisubr
cmp
aad
test
sbb
inc
sub
dec
pushf
xchg
xor
test
mov
sbb
lods
sub
push
mov
mov
daa
xchg
mov
nop
(bad)
mov
xor
mov
and
xchg
in
add
rol
sub
scas
test
adc
int
scas
ins
or
sbb
inc
stos
retf
or
rcr
loope
mov
outs
std
pop
sub
shl
jl
push
in
sti
fadd
pop
cmp
repz
out
ss
pop
xchg
jne
or
outs
out
or
sbb
push
imul
clc
sub
ret
loope
ins
dec
sar
jns
mov
and
add
popa
mov
inc
lahf
dec
loopne
adc
lea
(bad)
pop
test
sbb
outs
pop
jg
and
enter
adc
push
shr
into
cmp
ins
into
push
test
cli
les
adc
movs
push
xchg
sbb
stos
data16
cmc
push
mov
jmp
ret
xlat
popa
nop
xor
and
xor
mov
ins
(bad)
pusha
jle
or
add
inc
push
test
sub
movs
jge
outs
daa
mov
mov
in
or
arpl
add
push
xchg
mov
pushf
mov
loope
push
dec
into
rcl
push
pop
enter
loopne
bound
imul
mov
cmp
mov
sbb
inc
mov
fiadd
inc
popa
sub
cdq
sbb
movs
clc
call
push
gs
je
retf
bound
imul
cmp
icebp
in
sub
mov
cmc
xlat
scas
push
mov
es
mov
jb
int3
call
gs
popa
cli
jno
lods
mov
mov
jo
hlt
push
mov
cld
xor
pushf
inc
lock
inc
enter
lods
xchg
outs
mov
hlt
mov
lods
xchg
xor
or
ror
test
xchg
loop
(bad)
cmp
and
mov
into
rol
outs
add
out
jg
inc
mov
and
dec
adc
in
mov
sbb
jl
inc
aad
fild
jbe
sub
cli
test
jae
out
icebp
add
or
icebp
(bad)
fs
cmp
push
std
stos
pusha
pop
inc
sahf
xchg
rol
es
add
mov
(bad)
dec
scas
inc
mov
jbe
mov
lahf
loopne
je
xchg
or
mov
mov
nop
ret
cld
imul
outs
inc
sub
push
mov
pop
jecxz
inc
mov
(bad)
int
mov
out
fld
mov
cmps
adc
dec
pop
(bad)
xchg
hlt
aas
pop
arpl
push
rol
jbe
jnp
in
out
dec
(bad)
xor
inc
xor
sbb
mov
je
jmp
mov
retf
test
add
sub
(bad)
(bad)
repz
cmp
dec
pop
xor
ror
rcr
ja
pop
cmp
jne
mov
repnz
aad
or
div
rcr
imul
jp
mov
pop
lahf
cs
xor
xchg
ja
mov
(bad)
xor
inc
std
push
test
out
leave
ins
xor
leave
cmp
push
or
jae
add
and
inc
pop
stos
and
mov
ret
adc
rol
and
mov
jno
mov
call
frstor
lea
int
pop
leave
sub
int3
xchg
mov
aam
call
bound
(bad)
mov
pop
shl
xchg
mov
lods
fs
js
out
aad
stos
ss
dec
aaa
(bad)
lods
mov
sbb
ins
and
mov
rcl
gs
repz
pop
aas
and
or
cmp
dec
(bad)
imul
int3
push
jo
out
xchg
test
inc
or
jecxz
adc
cld
pop
mov
retf
jne
clc
dec
pop
ret
or
call
repz
and
fidiv
mov
jb
or
push
inc
mov
sub
repz
aad
sub
xchg
cmps
jecxz
dec
add
cwde
add
xchg
mov
dec
sahf
test
sti
hlt
ffreep
fsubr
cmp
xor
xchg
mov
cs
fisub
sub
jl
lock
lds
mov
sbb
xor
jbe
and
mov
(bad)
in
xor
bound
adc
dec
ficom
xchg
jae
fimul
sbb
pop
jp
in
or
sbb
popa
js
imul
int3
xor
push
cmps
jns
fwait
test
sbb
out
imul
xchg
mov
add
jbe
rcl
aam
or
sub
rcr
or
in
je
or
das
aad
movs
add
out
push
stos
out
movs
outs
mov
loope
dec
mov
xor
hlt
dec
out
push
frstor
adc
xchg
cmp
cmp
fs
sar
frstor
ds
xor
aam
mov
and
pop
je
pop
sub
xchg
mov
mov
jno
aad
cwde
call
aas
jl
clc
inc
sbb
ss
pusha
cmp
enter
and
enter
ins
out
rol
sbb
cli
test
mov
xor
int3
rol
mov
fdivr
jo
sbb
enter
pop
xchg
fnstsw
pop
sbb
jge
mov
xchg
pop
fcom
nop
div
(bad)
dec
jecxz
outs
sub
cld
and
xchg
test
rol
jle
(bad)
(bad)
mov
into
fcom
xor
mov
je
push
aad
mov
cmp
and
or
inc
ds
jmp
lock
cmp
mov
les
push
sbb
adc
xlat
(bad)
test
imul
out
xchg
sub
sub
(bad)
cmc
or
in
rcr
jae
outs
mov
cmp
cmps
shr
sbb
mov
stos
mov
ins
enter
push
lds
push
xchg
adc
push
or
cwde
xchg
xor
mov
dec
repnz
scas
iret
xchg
mov
pop
loopne
and
jmp
mov
mov
fnstsw
mov
jbe
mov
fwait
sub
adc
jg
ja
cmp
sub
aas
mov
xor
pop
cmp
(bad)
and
shl
lods
inc
pop
mov
aaa
scas
cs
mov
add
scas
icebp
hlt
leave
xor
add
adc
add
and
jg
imul
jbe
pop
cld
test
mov
cli
arpl
into
xchg
push
(bad)
data16
dec
test
mov
adc
and
and
iret
sahf
psrld
cli
int3
ret
in
jmp
adc
pop
lsl
adc
push
adc
adc
mov
sti
xor
xchg
sbb
sub
stc
pop
adc
scas
test
adc
push
sub
and
cmc
out
jge
popf
sub
mov
ret
mov
in
fucomp
push
(bad)
in
stc
imul
idiv
movs
movs
inc
ficomp
cli
pop
fistp
scas
push
test
and
cmp
int
pop
stos
loope
test
push
adc
sub
aas
pushf
xchg
xor
inc
cmp
xchg
lods
mov
loop
stos
mov
mov
push
loop
(bad)
or
das
lods
mov
ss
inc
xchg
loopne
test
sbb
repnz
jnp
lods
ret
inc
sub
fldenv
dec
cmp
stc
nop
inc
xchg
xor
mov
inc
xor
sub
movs
mov
lods
pop
push
cdq
or
push
pop
(bad)
cmps
sar
gs
dec
xor
jl
and
jle
loop
ret
pop
pusha
int3
cli
inc
inc
jg
scas
push
call
mov
ja
cs
out
pusha
js
retf
bnd
sbb
out
cmps
or
dec
push
add
pop
jge
dec
pop
clc
jns
sub
imul
jo
not
rcl
mov
sbb
sbb
mov
or
adc
pop
jl
(bad)
adc
loop
in
pop
in
les
dec
mov
pop
and
imul
scas
push
out
add
not
(bad)
js
in
cld
mov
add
sub
dec
mov
sti
shl
mov
or
jmp
or
popf
xor
mov
test
adc
push
adc
cmp
and
(bad)
sub
xchg
(bad)
cmc
jbe
enter
popa
pop
jo
push
fisub
fisttp
push
pop
mov
retf
ret
sbb
das
sbb
stos
jmp
arpl
in
rep
jmp
cmp
inc
imul
bound
jnp
cmp
adc
mov
sbb
or
imul
call
xchg
idiv
adc
jle
sbb
mov
imul
scas
and
retf
lock
or
aas
mov
(bad)
sbb
icebp
inc
mov
retf
js
and
fsub
jno
xor
stc
fsubr
jmp
cld
mov
xchg
sub
adc
cdq
jg
popf
das
dec
jg
jnp
adc
cdq
(bad)
and
sti
xchg
ret
mov
and
cmc
dec
je
mul
sar
jg
scas
jge
movs
or
jge
daa
mov
or
js
cmps
cmps
push
(bad)
mov
inc
and
fisubr
lea
sub
repnz
movs
mov
xor
mov
call
adc
cmp
scas
cli
adc
das
push
clc
sub
jl
jno
sub
in
sbb
mov
std
cmp
mov
in
jo
jecxz
out
aas
lds
pop
pop
push
loop
shl
(bad)
ret
mov
leave
loopne
shl
ja
fcom
xchg
push
iret
int3
adc
(bad)
imul
popf
adc
call
pop
sar
xor
pop
adc
hlt
es
jnp
je
sub
cld
or
cmp
in
dec
xchg
idiv
adc
adc
mov
in
mov
ins
jne
mov
push
jns
lea
loopne
fistp
sub
ror
pop
hlt
push
mov
mov
add
jp
inc
pop
popf
ins
daa
push
fwait
sbb
xchg
push
and
fimul
jp
(bad)
hlt
idiv
call
xchg
clc
mov
ds
push
pop
scas
cld
mov
sub
mov
add
(bad)
enter
mov
xor
(bad)
int
imul
mov
mov
mov
mov
or
cmp
or
pop
push
inc
rcr
dec
shr
jbe
movs
int3
in
ja
inc
add
sti
cmp
rol
out
out
mul
jg
add
push
xchg
out
cmps
or
mov
ins
push
and
dec
dec
test
ret
pusha
sbb
icebp
mov
or
test
sub
ja
bound
ins
lods
cld
(bad)
jmp
sti
and
arpl
jg
ins
xor
cmp
push
dec
jg
out
sub
mov
iret
enter
sbb
idiv
scas
inc
dec
xchg
dec
ja
scas
int
adc
dec
mov
mov
adc
loopne
lods
jge
retf
test
pop
mov
aam
push
or
mov
add
jne
popa
out
repz
fimul
imul
imul
fldenv
sbb
dec
add
cmp
sub
jno
cmp
icebp
clc
aad
(bad)
les
sbb
push
sbb
adc
sub
aam
inc
data16
xchg
outs
cmc
or
sbb
add
sbb
gs
adc
cwde
push
push
(bad)
in
mov
test
and
lock
fisttp
lahf
push
into
xchg
and
jb
mov
movs
mov
pop
dec
pop
and
loop
jnp
and
xor
rol
aaa
cmp
or
test
int
push
push
test
int3
sub
lods
dec
outs
jecxz
adc
add
(bad)
jp
and
stos
pop
add
mov
cli
arpl
(bad)
xor
out
fisttp
ins
gs
outs
sbb
sbb
into
jle
daa
ins
test
pop
test
jo
call
inc
repnz
jg
outs
and
fs
sti
cmp
call
enter
cmps
out
mov
out
xor
das
or
enter
repnz
fld
jge
ins
dec
xchg
movs
push
mov
out
and
frstor
and
mov
leave
cmp
repz
inc
scas
imul
fist
fiadd
xchg
outs
mov
mov
pop
lahf
dec
pop
mov
in
cli
inc
neg
jbe
fcomp
retf
fcomp
cmps
xchg
mov
adc
sub
rcr
fs
mov
dec
jbe
repnz
adc
vorps
jmp
repz
inc
inc
add
jge
rcr
int
cmp
retf
jmp
retf
cmp
pop
adc
addr16
popf
xchg
jg
cli
(bad)
outs
fcomip
mov
sub
aad
adc
loope
pop
fcom
mul
adc
dec
or
dec
rcr
mov
ror
fstp
lock
xchg
cmps
push
push
dec
scas
inc
xchg
sar
repnz
ins
iret
in
test
and
inc
pop
xor
push
jmp
sbb
mov
jbe
xchg
mov
xor
in
je
pop
xor
mov
cs
mov
pop
sbb
pushf
pop
ja
xchg
mov
scas
add
(bad)
cwde
or
mov
mov
retf
pop
movs
addr16
pop
cmp
dec
std
sbb
or
not
arpl
test
cmc
xchg
sbb
adc
(bad)
xchg
jl
mov
ja
ins
pop
scas
ret
stos
adc
mov
fnstenv
mov
mov
xor
adc
fistp
or
adc
sbb
dec
mov
loop
ins
jo
sbb
mov
out
or
sub
push
push
out
add
xchg
adc
fcos
mov
jno
(bad)
aam
sbb
dec
in
rcl
mov
scas
(bad)
call
push
gs
movs
or
je
ss
pop
dec
fstp
mov
std
pop
mov
jecxz
jmp
fdiv
push
es
aad
cmp
out
pop
lahf
cmp
mov
mov
xchg
xor
jecxz
jge
rcl
and
or
imul
push
rol
add
into
ins
and
mov
add
sbb
imul
fdivr
lds
mov
test
pop
sbb
movs
cmps
scas
sbb
and
and
xlat
enter
push
cmp
cdq
xchg
pushf
mov
inc
sti
fnstsw
mul
push
pop
xchg
mov
jo
pop
or
in
daa
sub
sbb
push
bnd
fwait
or
in
idiv
cmp
mov
xlat
inc
push
sub
sub
xor
or
sbb
leave
outs
fwait
out
adc
jmp
ja
push
fisttp
pop
push
sub
dec
inc
jmp
xchg
fs
popa
mov
fisttp
in
sub
inc
mov
fs
mov
jecxz
adc
inc
fsubp
xchg
inc
rol
add
daa
lds
push
xchg
and
arpl
cmc
cmp
xchg
push
movs
mov
mov
(bad)
mov
adc
xchg
sbb
adc
arpl
repnz
dec
imul
lds
into
adc
mov
mov
es
fdiv
stos
es
stos
fdivrp
xchg
ins
push
pop
mov
aaa
jmp
or
dec
sub
in
mov
(bad)
push
or
mov
stos
sti
daa
lea
clc
cmps
and
pop
dec
xor
push
int
test
push
ret
push
and
mov
add
addr16
(bad)
jle
sub
outs
stos
pushf
outs
cmp
pop
mov
int
retf
dec
jo
mov
outs
fild
and
fs
add
mov
jnp
test
pop
jnp
int
pusha
frstor
sar
ss
xchg
ja
jmp
loope
(bad)
inc
aam
adc
mov
pusha
fwait
cmp
cmp
arpl
push
les
sbb
jmp
sub
add
pop
inc
pushf
or
imul
fsubr
mov
sti
iret
arpl
out
jbe
adc
movs
(bad)
loope
mov
add
ret
push
sub
out
gs
iret
icebp
push
or
pushf
xor
movs
xchg
mov
outs
jbe
mov
push
push
jmp
imul
test
sub
push
movs
push
out
test
and
arpl
nop
outs
pushf
jae
icebp
out
es
iret
data16
xor
push
sbb
movs
inc
mov
jno
loopne
jp
popf
or
stos
ss
and
dec
imul
push
mov
dec
(bad)
in
and
cmp
call
daa
mov
mov
test
push
outs
and
push
push
(bad)
popa
fild
xchg
cmp
cmp
xchg
add
pop
test
push
loop
sub
jnp
xchg
(bad)
jl
xor
repnz
and
pusha
jnp
jno
aam
mov
jle
sbb
cmp
bound
push
sbb
jp
mov
mov
adc
stc
sti
movs
(bad)
dec
(bad)
sahf
cmp
fdecstp
cmp
dec
sub
add
js
mov
outs
gs
mov
loop
xchg
dec
aas
push
sbb
sbb
adc
mov
xchg
rcl
xor
(bad)
adc
inc
enter
cmps
xchg
mov
ss
jge
fdivr
out
pop
mov
pop
sub
repz
pusha
mov
xor
iret
push
ds
das
xor
cmps
pop
(bad)
mov
and
shr
out
pop
pop
push
cmp
jp
lea
js
call
sub
jg
arpl
into
xchg
scas
rol
in
loope
lea
ss
push
cmp
mov
daa
sub
clc
popa
retf
stos
and
mov
cmps
in
(bad)
ret
sahf
jnp
pop
push
add
jbe
outs
or
js
jmp
xchg
std
push
mov
cmp
(bad)
xor
fdiv
sahf
(bad)
adc
xchg
daa
stc
repnz
cmp
push
ja
push
jg
lods
aas
pop
repnz
bound
mov
pop
stc
test
jnp
inc
mov
add
and
mov
mov
sti
sbb
popf
sbb
mov
push
mov
fbld
sub
xor
mov
xor
cmove
nop
push
dec
fbstp
mov
push
(bad)
jge
sub
or
scas
mov
gs
jns
cmps
or
cli
cmp
dec
les
(bad)
in
jo
jmp
das
lea
xchg
mov
mov
cmp
push
pop
ss
xchg
jnp
repz
cmc
jo
das
and
arpl
call
mov
iret
aas
scas
xor
stos
and
lahf
fsubr
cmp
add
(bad)
mov
pop
aaa
mov
iret
dec
mov
sub
push
push
repz
mov
inc
or
xor
in
mov
inc
inc
push
fnstenv
or
adc
mov
mov
pop
mov
jecxz
and
and
xchg
adc
mov
xchg
shl
dec
fiadd
adc
inc
(bad)
out
enter
cmp
push
push
(bad)
sub
push
adc
(bad)
and
outs
rcl
mov
xchg
(bad)
shr
inc
push
fldpi
ja
fbstp
aas
add
add
retf
nop
int
inc
repnz
outs
aas
call
dec
lods
and
xor
enter
sti
dec
push
test
out
or
adc
jnp
mov
fldenv
and
mov
adc
rcr
and
(bad)
in
cmp
int3
sbb
push
cmp
sbb
sub
stos
xchg
ffree
lock
jmp
adc
lods
push
pushf
nop
ftst
aam
popa
pusha
mov
fisub
xchg
push
imul
jl
mov
jo
(bad)
fcmovu
aas
fst
mov
out
pushf
xchg
outs
or
push
stc
test
mov
call
in
pop
jmp
ins
adc
mov
cmp
call
mov
or
sbb
sub
jns
data16
les
fwait
das
mov
inc
aad
cwde
js
rol
in
jl
inc
pop
sbb
sar
jmp
ins
xor
stc
xchg
outs
jge
pop
out
dec
jmp
imul
cmp
iret
adc
jecxz
or
adc
add
dec
ins
hlt
rcl
out
aaa
dec
popf
outs
ror
cli
sti
xor
add
mov
jge
movs
sub
cld
jp
add
popf
jnp
pop
out
in
call
and
jg
xchg
jne
sub
int3
sub
xor
test
in
iret
stc
call
dec
lods
pop
scas
movs
pop
adc
mov
push
cli
ret
imul
inc
add
icebp
push
xchg
sahf
neg
arpl
hlt
xor
fst
jmp
xchg
mov
mov
imul
cwde
pop
les
xchg
out
daa
aaa
xor
xor
fld
rol
xchg
sbb
sahf
mov
adc
jns
xor
je
sbb
in
xchg
mov
and
fld
movs
or
or
enter
mov
retf
mov
cld
or
js
mov
pop
outs
es
out
pop
jge
jae
push
mov
por
cmps
push
inc
ss
daa
xor
fwait
in
jne
sub
dec
imul
pop
sbb
out
sub
(bad)
push
pop
sbb
dec
inc
dec
test
inc
outs
and
jmp
out
push
lea
dec
and
or
push
sbb
xor
push
xlat
sbb
ja
movs
dec
mov
dec
pop
sbb
pop
adc
sbb
ficom
sub
dec
int3
or
sbb
or
mov
xor
pop
sahf
fmul
leave
cmp
fmul
popa
call
loope
retf
jbe
pop
cmps
mov
push
and
mov
in
and
les
lea
adc
inc
dec
jmp
pop
xchg
jo
sub
xor
pop
das
jg
add
and
sar
and
shr
lds
jbe
test
or
jg
push
xchg
xchg
lods
pop
jne
retf
call
or
jl
(bad)
jmp
mov
add
inc
or
pop
lea
fcom
and
or
in
push
scas
sub
repz
and
test
cli
into
sub
mov
test
sub
cmp
mov
dec
jo
xor
loop
imul
enter
sub
cmp
add
aaa
fldenv
das
rol
mov
or
mov
stc
ja
dec
fcmove
xchg
adc
push
dec
and
stos
pop
popa
ins
cmp
jo
add
inc
mov
imul
mov
sbb
jle
jb
jae
mov
push
pop
int
cli
call
pop
test
or
icebp
lahf
sub
icebp
dec
sub
repz
sbb
popa
ja
xchg
in
stos
(bad)
cmp
test
add
dec
xchg
push
mov
repz
in
sbb
jb
call
mov
mov
xchg
add
xor
and
frstor
pusha
mov
es
in
or
push
cmp
bound
add
push
inc
pop
sub
or
int
pop
mov
pop
xor
mov
mov
addr16
xor
in
jmp
cdq
in
xchg
sahf
or
ins
movs
lods
lahf
jne
inc
add
iret
arpl
je
nop
sub
pop
fcmovb
push
dec
retf
push
and
push
hlt
imul
loop
stos
shl
imul
stc
sub
mov
jnp
add
push
(bad)
sub
mov
test
push
jne
jo
scas
mov
jmp
idiv
mov
fisttp
call
or
push
popa
lock
push
daa
cdq
dec
popf
imul
adc
xchg
xor
mov
ret
mov
xchg
cmp
mov
add
and
repnz
and
cdq
ins
pop
and
xor
(bad)
shl
push
sbb
xor
mov
pop
ins
lods
popf
inc
test
into
dec
lea
imul
xchg
add
cmp
cdq
hlt
pop
sbb
aaa
out
inc
sub
or
les
and
xor
add
jo
jge
pushf
mov
jo
and
sahf
pop
push
cmp
neg
xchg
xchg
pop
sbb
repz
add
mov
jmp
call
inc
jno
sbb
jb
arpl
jmp
push
test
test
adc
loopne
out
xor
mov
shl
aaa
sub
ja
invd
int
push
sub
jmp
movs
aaa
scas
push
jle
scas
iret
loop
pop
adc
ror
sbb
sahf
jp
fcom
fstp
jnp
push
mov
loope
add
out
inc
fisubr
pusha
aas
push
sub
add
outs
push
dec
ret
pop
fidivr
mov
lods
xchg
cmp
neg
cld
das
pop
jo
push
jg
int3
sbb
repnz
xchg
std
mov
call
stc
fmul
pop
and
aam
arpl
std
hlt
aas
or
ins
push
pop
push
fwait
cwde
hlt
rol
clc
fild
out
call
cwde
cwde
add
cwde
mov
out
les
dec
fwait
hlt
cmp
jae
(bad)
div
add
scas
xchg
addr16
mov
lea
push
enter
mov
scas
stos
dec
dec
jmp
pop
lea
cmp
push
sbb
and
rcr
push
loope
xchg
mov
popf
pop
cli
and
and
and
fiadd
mov
and
dec
adc
inc
adc
ds
mov
xchg
sub
mov
pop
sahf
pop
pop
pop
mov
fld
xor
aas
and
jg
inc
retf
mov
xchg
cmps
aaa
lods
into
(bad)
mov
inc
mov
push
retf
or
mov
or
sub
clc
sub
ins
imul
je
mov
push
xor
or
sub
dec
xor
xor
mov
dec
jg
or
test
adc
pushf
cmp
scas
sbb
pop
popf
ins
sub
jl
shl
dec
push
pop
jmp
push
popa
in
bound
scas
pusha
sbb
icebp
dec
(bad)
mov
ret
jmp
or
add
loope
lods
xchg
or
pop
call
pop
iret
dec
lahf
ror
jne
sub
mov
int
(bad)
mul
mov
fst
jne
out
call
and
aad
fist
lea
lods
fisub
push
push
mov
xchg
pop
push
mov
fnstenv
popf
into
push
mov
rcl
aas
jne
aam
cld
outs
mov
mov
retf
fiadd
arpl
daa
stos
mov
push
fisub
push
arpl
es
mov
ret
fmul
popf
pop
enter
test
cli
xlat
add
in
pop
(bad)
and
pop
push
mov
cmp
push
aas
dec
inc
cmc
mov
lds
mov
test
imul
stos
movs
or
(bad)
mov
daa
aas
ror
push
mov
loopne
inc
dec
mov
dec
out
jge
repnz
dec
loopne
fdivr
pop
call
shr
add
sbb
jbe
adc
jg
shl
pop
dec
cmp
outs
imul
xchg
sbb
imul
jl
imul
mov
cli
test
retf
mov
fcmovnbe
push
pop
dec
mov
ret
aas
sbb
sbb
enter
and
pop
and
push
sbb
pop
out
mov
repnz
outs
jns
sub
aas
mov
ret
js
sbb
cmp
out
fiadd
jle
fstp
jno
loop
jmp
adc
out
dec
test
mov
pop
xor
xchg
aaa
scas
inc
add
stc
nop
mov
fwait
lods
outs
jp
jecxz
ror
jmp
out
iret
push
ret
leave
cwde
aas
push
clc
loopne
inc
in
xchg
xor
mov
mov
stos
retf
sar
into
pop
pop
cmp
push
pop
and
loopne
push
sbb
(bad)
and
cmp
fs
mov
es
mov
fisttp
or
pushf
cmps
mov
mov
pop
shl
pusha
dec
push
push
retf
mov
push
pop
push
pop
inc
ret
push
adc
xchg
jae
pop
mov
sbb
pop
inc
mov
icebp
(bad)
push
rcl
jg
jne
aaa
in
test
dec
inc
cmps
lds
push
stos
out
push
mov
push
leave
repz
outs
pop
mov
sub
push
dec
(bad)
mov
lahf
loop
add
jo
call
ss
xchg
or
add
pushf
add
mov
xlat
inc
pop
jb
repnz
xor
mov
call
mov
js
out
sub
push
out
imul
pop
nop
jp
jmp
jmp
in
mov
and
ins
adc
pop
aam
out
lods
jae
dec
aas
cmc
mov
mov
push
xchg
sub
and
sbb
sti
mov
nop
out
hlt
aaa
test
xor
out
mov
ret
pop
xchg
lock
push
cdq
dec
out
out
in
pop
fnstenv
xchg
add
cmps
repnz
ret
daa
neg
pop
repnz
retf
call
or
ins
mov
or
arpl
push
mov
and
cld
inc
mov
sbb
push
cmp
add
loope
mov
shr
or
xchg
or
cmp
pop
test
add
cmc
and
cmp
jmp
push
or
xchg
push
ret
jge
sub
mov
ja
int
sub
dec
push
aas
ss
push
gs
jns
loope
in
sbb
(bad)
shl
rcl
jns
dec
lods
out
adc
cs
xor
jne
data16
inc
xchg
mov
in
xchg
cs
pop
mov
jne
stos
xchg
add
add
sbb
mov
out
jb
outs
dec
jecxz
in
pop
mov
int3
jmp
dec
sti
push
fst
int3
dec
jbe
cli
sbb
adc
sahf
sub
cmp
sbb
and
movs
cwd
cmps
jbe
xchg
inc
js
mov
adc
jnp
mov
xchg
sbb
arpl
inc
es
(bad)
mov
pop
xchg
or
retf
repz
call
inc
das
std
jb
cwde
xchg
sub
xor
push
clc
mov
scas
xchg
retf
inc
jp
mov
push
loope
and
out
ins
call
xchg
or
pop
pop
movs
push
into
loop
mov
inc
dec
aad
sbb
aam
sub
in
ret
nop
or
push
jno
adc
ficom
dec
push
inc
hlt
fimul
inc
inc
sbb
stos
clc
sahf
retf
jbe
sbb
cmp
test
test
mov
pushf
lock
xor
pop
mov
xchg
repnz
xor
cmc
add
ror
mov
and
mov
test
cmp
adc
in
xchg
gs
mov
es
pop
xor
xchg
repnz
push
adc
repnz
xor
or
enter
mov
sbb
mov
jae
fiadd
bound
mov
xchg
xor
dec
mov
ins
cs
push
out
lods
int
jmp
jp
call
mov
mov
and
lods
test
or
aad
cmp
cmp
push
test
test
inc
in
push
dec
repnz
and
inc
dec
in
aas
leave
mov
repz
inc
cwde
add
and
xchg
add
mov
add
ja
out
aaa
jae
adc
cwde
mov
or
imul
jb
dec
sar
xor
in
fcom
jb
pop
fiadd
in
imul
push
lods
jae
nop
hlt
call
or
jge
scas
cmp
outs
xchg
or
push
xor
neg
fwait
mov
cwde
fmul
push
add
retf
push
pop
fild
scas
cmp
jne
imul
mov
push
inc
or
sbb
retf
mov
xlat
scas
rcr
test
jmp
xor
stos
js
cmps
pop
pop
xor
loopne
inc
or
cmp
hlt
mov
rcl
jo
cmps
das
scas
or
ss
ret
pop
fldcw
cmp
dec
mov
add
jle
inc
xchg
jmp
add
inc
addr16
out
adc
add
xor
lods
mov
sbb
mov
ins
adc
add
jmp
push
pop
xchg
inc
ror
mov
enter
lahf
and
mov
(bad)
xor
jae
arpl
ror
and
inc
pop
push
xlat
adc
adc
fidiv
mov
fs
xor
sbb
sbb
out
nop
xchg
and
xchg
pop
les
pop
scas
into
out
(bad)
mov
mov
jmp
add
pop
pop
loop
out
ds
ds
push
(bad)
cli
rol
popf
(bad)
imul
mul
dec
sub
xchg
int3
aas
cdq
rcl
xchg
push
jecxz
inc
imul
push
xchg
xlat
and
(bad)
or
pusha
jno
push
mov
push
and
cwde
int
xor
mov
push
or
dec
cmps
dec
add
and
addr16
xchg
fwait
int3
and
imul
add
cmps
das
jmp
test
pop
fmul
sub
test
dec
fbld
(bad)
cli
mov
sbb
(bad)
stos
lea
pop
or
xor
imul
leave
bound
sahf
cwde
jl
mov
retf
loope
jns
mov
pop
cmps
cmps
jge
iret
pop
push
sub
and
or
loope
mov
(bad)
movs
xor
jmp
xor
jcxz
sbb
fcmove
xor
or
loope
adc
pop
ja
popa
mov
call
xor
sahf
mov
or
cmp
pop
stc
mov
aam
inc
add
pusha
pushf
mov
mov
and
sbb
loopne
aam
test
fisttp
push
jbe
jbe
bnd
xchg
mov
add
and
sti
(bad)
clc
mov
pop
cmps
dec
xor
or
sbb
retf
pop
retf
mov
xor
pop
jecxz
xor
jno
pop
stos
shl
pushf
pop
movs
sub
lahf
adc
adc
xor
dec
push
mov
jnp
adc
add
dec
into
cwde
mov
push
or
add
inc
adc
mov
cmp
mov
sub
jae
fld
cmps
xor
rol
lods
jae
mov
enter
xchg
shl
add
mov
dec
add
mov
hlt
jecxz
push
sahf
pop
movs
cmp
sub
fistp
inc
fstp
dec
adc
or
add
push
jge
mov
cmp
pop
ficom
pusha
outs
rcr
sbb
sahf
mov
sub
inc
or
jle
mov
mov
mov
mov
mov
mov
mov
sub
lock
stos
loopne
test
cmp
jb
jle
dec
xchg
xor
mov
nop
mov
add
inc
leave
cmp
(bad)
ror
jb
pusha
popa
and
test
call
rol
in
mov
sar
mov
xchg
push
fstp
and
shl
setno
lods
push
inc
scas
jns
fstp
jp
or
xor
or
xor
test
sbb
aas
shr
inc
mov
xlat
dec
fcom
cs
sbb
les
pusha
vxorps
(bad)
aas
mov
sbb
mov
pop
cmovge
rcl
dec
lods
jmp
loop
cdq
loope
mov
bound
idiv
(bad)
rcr
inc
cmps
out
inc
mov
lods
shl
mov
enter
inc
lds
xchg
pop
or
out
arpl
sub
scas
or
js
(bad)
add
call
jns
je
or
(bad)
push
mov
outs
jmp
adc
cwde
mov
cdq
push
sbb
cdq
and
gs
sub
sbb
fisttp
jmp
mov
push
dec
mov
and
mov
and
outs
lods
xchg
aaa
jne
dec
dec
fidivr
das
sbb
movs
std
inc
adc
pop
and
dec
lods
loopne
popf
ds
and
sub
push
pushf
push
xchg
imul
sub
and
jmp
jmp
icebp
or
sub
sbb
pop
push
loopne
pop
pop
daa
xor
jnp
sub
ret
jnp
and
inc
push
loop
es
(bad)
cmp
pop
mov
retf
test
test
adc
push
shr
mov
iret
icebp
mov
mov
mov
stos
je
jns
pop
add
in
inc
dec
push
call
mov
cmp
ins
cmp
test
xlat
les
fistp
xor
dec
xchg
mov
aaa
push
movs
ins
mov
ss
mov
push
(bad)
and
inc
scas
push
mov
fld
pop
and
loop
mov
pop
mov
popf
xor
sub
jb
push
aad
rol
in
rol
sub
dec
repz
xor
xchg
adc
pushf
jmp
cmp
xchg
xor
push
ins
jecxz
out
out
xor
sbb
cwde
and
xchg
sbb
or
adc
sbb
pop
jne
sub
dec
in
outs
inc
fnstenv
imul
cmp
shl
loope
ins
imul
lock
movs
xchg
ret
mov
jmp
sbb
jecxz
scas
xor
xchg
(bad)
and
or
icebp
mov
shr
xchg
shl
inc
mov
dec
pop
cwde
inc
mov
mov
sub
push
leave
xchg
mov
ins
(bad)
ficom
adc
int3
push
repnz
fs
fstp
fwait
inc
or
loope
sub
jp
xor
out
add
sbb
cld
xchg
inc
shr
or
xchg
xor
stos
shl
(bad)
cmps
cli
sbb
out
sub
xor
xchg
in
pop
ds
sub
imul
sub
push
or
xchg
test
sub
jp
(bad)
or
inc
ds
hlt
adc
fdiv
mov
pop
lahf
out
imul
or
imul
and
fistp
mov
out
inc
cmp
arpl
jns
rol
es
(bad)
dec
mov
out
adc
shl
rcl
fmul
les
dec
adc
push
imul
xlat
mov
test
aam
cli
add
das
dec
fsub
sar
lods
pop
cmps
call
sbb
in
cmp
inc
gs
mov
lods
mov
add
repz
mov
xchg
arpl
mov
syscall
mov
inc
sbb
mov
inc
jno
mov
cmp
sbb
or
mov
pushf
jns
ds
retf
sbb
inc
sbb
aaa
retf
push
lods
dec
in
push
push
or
ja
in
mov
lds
mov
adc
call
hlt
cmp
inc
fidiv
pop
inc
mov
test
push
hlt
adc
adc
imul
fld
sub
test
enter
leave
sbb
dec
jmp
and
inc
cmps
mov
imul
sub
std
mov
lea
push
inc
lea
imul
cmp
sub
repz
add
mov
inc
(bad)
(bad)
dec
into
jae
cmc
sbb
popa
xchg
mov
enter
das
dec
adc
cwde
nop
dec
adc
mov
sbb
(bad)
jbe
sbb
and
aam
fcomip
inc
hlt
sahf
add
mov
sbb
jmp
mov
jno
or
dec
outs
pushf
adc
mov
sbb
jle
mov
push
or
adc
inc
aaa
sbb
dec
or
ror
inc
test
push
and
stos
(bad)
aam
out
in
out
ret
in
pop
rcr
sub
sbb
adc
stc
fs
mov
sub
ins
mov
das
mov
dec
and
sub
cmp
sub
or
fdivp
pop
(bad)
adc
mov
(bad)
rcl
inc
aas
cmp
xchg
inc
cmps
xchg
ficomp
js
data16
push
fmul
fmul
std
scas
sbb
test
mov
push
in
frndint
mov
adc
fidivr
jle
fisttp
cdq
mov
pop
push
sub
push
sar
xor
bound
add
adc
jns
pop
jmp
scas
jbe
and
iret
push
loop
xor
push
shl
in
push
and
dec
jg
lds
out
fild
mov
xchg
nop
(bad)
lds
push
loope
and
cmp
leave
fld
mov
sbb
mov
call
lea
jno
pop
repz
ret
add
adc
data16
sub
aaa
pushf
add
cmp
mov
int
xor
jg
lahf
sub
xlat
popf
dec
ins
dec
jb
jnp
out
pop
dec
adc
data16
lods
(bad)
ror
jecxz
mov
add
push
outs
ins
gs
hlt
sbb
xor
js
and
(bad)
mov
pop
outs
lods
fbld
pop
rol
icebp
shl
push
outs
fsubr
pop
sub
or
inc
loope
sub
push
pop
in
mov
js
or
add
ds
adc
push
adc
adc
repnz
cmp
arpl
xchg
repz
pusha
adc
scas
and
pop
cmp
ss
test
hlt
daa
jb
pminsw
test
es
pop
std
out
mov
jne
add
in
or
out
and
test
stc
jl
(bad)
pop
jno
dec
(bad)
jg
fiadd
retf
adc
test
leave
pusha
xor
adc
jmp
xor
push
mov
xlat
jmp
jp
sub
ins
push
push
cwde
imul
and
outs
jo
jnp
outs
pop
add
jmp
mov
repnz
cld
push
inc
fxch
rcl
ins
add
pmullw
push
test
sbb
neg
push
cdq
ins
lea
es
push
xchg
(bad)
(bad)
movs
test
sbb
movs
push
push
jl
test
cld
arpl
call
ins
push
lods
and
test
(bad)
hlt
ss
push
dec
lea
movs
iret
jns
popa
stos
pushf
out
gs
jg
xor
in
loopne
ins
sbb
lea
jg
lods
mov
in
gs
xchg
push
stc
xchg
jle
push
(bad)
pop
out
sbb
jns
adc
mov
les
je
pop
retf
shr
pop
sub
cmp
idiv
fwait
jnp
mov
(bad)
in
(bad)
pop
fnstsw
scas
xchg
inc
xchg
shr
into
mov
cmps
iret
lock
popf
cwde
loope
mov
ja
fild
(bad)
cld
(bad)
add
(bad)
iret
imul
gs
mov
repnz
xchg
punpckhwd
xlat
add
sbb
dec
mov
(bad)
xchg
push
jb
jne
push
fisubr
sbb
aam
call
ins
lds
and
cs
mov
jbe
pop
ret
inc
js
stc
leave
fisttp
imul
aad
jnp
daa
test
cld
clc
sbb
adc
pop
out
or
adc
out
adc
lods
dec
stc
jb
xor
jb
std
rol
repz
cld
xor
and
call
in
dec
(bad)
das
mov
ret
push
adc
(bad)
sbb
movs
lods
or
sub
or
mov
pop
sub
xor
movs
adc
push
retf
inc
(bad)
fnstcw
pop
das
sbb
mov
aaa
in
dec
sub
mov
cmc
ficom
jae
repnz
fwait
shl
push
and
hlt
js
mov
push
cmp
retf
mov
dec
xchg
cmp
ret
cmps
jo
test
or
ds
scas
mov
sbb
sbb
int
test
aaa
mov
mov
fwait
lods
out
xor
mov
fwait
jb
add
cmp
ss
xchg
rcr
xchg
les
ss
push
dec
rcr
imul
stos
out
(bad)
loop
das
arpl
ret
aad
cmc
mov
test
jmp
pusha
xor
iret
aaa
rol
dec
test
and
je
les
mov
shr
sbb
add
or
(bad)
sbb
inc
imul
addr16
add
rcr
movs
pop
pushw
cmp
mov
es
fsub
in
cmp
(bad)
sbb
mov
and
jne
or
(bad)
mov
push
gs
mov
rol
pushf
loop
and
mov
fild
sbb
fcmove
(bad)
(bad)
or
pop
mov
push
mov
cmp
xchg
retf
mov
cmp
sbb
push
iret
jle
push
xchg
mov
loop
pop
cmp
daa
les
xchg
lods
mov
imul
into
jae
push
mov
mov
xor
dec
mov
mov
cld
jp
gs
adc
mov
ins
adc
inc
std
(bad)
push
adc
xlat
xor
cmp
sub
fwait
adc
add
cmp
sbb
xor
push
mov
mov
dec
fdiv
mov
xor
or
jno
dec
(bad)
lock
mov
jne
add
xor
outs
popa
pop
add
xlat
hlt
mov
inc
adc
push
icebp
or
leave
xor
jno
add
push
fucomp
call
ins
sbb
xchg
jmp
xlat
out
inc
stc
in
scas
mov
inc
ja
inc
aad
sbb
jnp
sbb
pushf
pushf
or
cld
mov
in
push
jb
xchg
addr16
dec
(bad)
pop
pop
dec
push
add
xor
mov
shl
aam
(bad)
mov
hlt
or
or
inc
mov
push
sbb
mov
mov
hlt
(bad)
cld
outs
sbb
retf
add
out
sub
mov
clc
fldl2t
adc
or
dec
popa
loopne
mov
inc
test
dec
cld
movs
in
popa
push
inc
pop
or
pop
inc
cmc
ja
iret
pop
and
mov
xchg
ss
dec
std
xor
out
and
push
pop
dec
(bad)
mov
les
dec
enter
fnstsw
jl
sub
jb
(bad)
xor
sub
out
pop
mov
sbb
les
sub
mov
add
popa
inc
cmp
cmp
aad
mov
inc
jmp
fidiv
test
fs
push
sbb
pop
ja
mov
push
cmp
shl
std
xor
or
sbb
icebp
xor
dec
pop
cmc
scas
dec
inc
pop
and
fdivp
test
mov
or
sub
push
hlt
xchg
aaa
or
(bad)
jge
or
int
iret
push
mov
fstp
jne
jne
rcl
mov
push
add
or
sbb
imul
rol
add
and
dec
std
push
movs
jg
adc
retf
mov
xchg
int
jbe
addr16
mov
callw
inc
test
mov
sbb
sar
pushf
sub
mov
jecxz
stos
jmp
jmp
sub
sub
push
ja
in
or
add
rol
xor
cmp
pop
xor
mov
ins
dec
cli
mov
fs
mov
outs
shr
add
lods
in
fild
je
sar
into
sub
push
retf
add
jl
mov
push
je
push
pop
movs
int3
cmc
ret
inc
fidivr
rcl
lods
adc
pop
push
imul
(bad)
ds
push
pop
sub
jp
xor
mov
popa
rol
xor
fsubr
push
add
push
xchg
push
mov
scas
popf
push
or
in
shl
xchg
arpl
icebp
inc
stos
pop
stos
loop
mov
hlt
inc
push
clc
sbb
xchg
mov
xor
or
shr
outs
and
pop
push
retf
dec
xchg
stos
fwait
je
rcl
cli
pop
and
lods
sub
push
jb
repnz
add
xchg
in
js
cmp
mov
and
xchg
in
cs
sbb
and
push
loope
aaa
pop
jmp
(bad)
jmp
(bad)
jmp
bound
inc
in
jge
test
dec
das
inc
lds
jo
and
pop
xlat
sbb
and
cwde
mov
add
xchg
test
inc
jo
ja
ds
push
add
push
test
shl
push
mov
(bad)
call
jecxz
sahf
stc
int3
jmp
sti
xchg
enter
sbb
inc
js
pop
call
aad
mov
mov
xchg
pusha
adc
inc
dec
into
pop
pushf
inc
dec
cmp
push
inc
dec
and
mov
test
(bad)
sub
mov
or
test
add
shl
(bad)
pop
mov
in
fcom
and
dec
loopne
dec
jne
pop
in
xor
stc
jb
mov
mov
lahf
push
sub
cmp
xchg
or
ins
lahf
test
mov
adc
out
jl
fidiv
in
je
jns
xor
out
retf
(bad)
(bad)
scas
add
stos
aas
or
lods
mov
fwait
jl
sti
xchg
mov
adc
or
lock
jmp
cmps
arpl
sub
pop
push
jmp
imul
repz
mov
push
mov
mov
adc
xchg
fwait
or
retf
aad
jae
pop
je
in
or
iret
cmps
mov
jge
xor
sub
mov
in
into
jno
mov
xchg
shl
jne
clc
test
ficom
inc
movs
es
pusha
shl
adc
jbe
xchg
pop
cmps
cdq
nop
adc
jg
outs
xchg
cli
pop
sahf
jge
out
arpl
fidivr
pop
dec
fucom
jmp
or
mov
cmp
cmp
xchg
(bad)
jmp
inc
int
(bad)
rcr
call
std
cmp
pop
push
loop
push
enter
mov
test
adc
inc
inc
pop
sub
mov
out
out
movs
repz
xor
cmp
and
ins
hlt
jb
ret
xchg
popa
(bad)
pop
fmulp
or
add
xor
xchg
movs
scas
add
mov
sub
xchg
or
or
js
int
inc
ja
add
lods
cwde
sbb
mov
ret
sbb
fs
hlt
pop
xchg
out
cmp
push
sbb
jl
xor
test
mov
sub
hlt
jmp
mov
test
mov
add
bound
jmp
xchg
pop
jo
add
cmp
enter
or
(bad)
out
test
add
cmp
repnz
mov
ins
movs
sbb
sbb
cli
pop
mov
sahf
dec
jbe
lods
inc
or
imul
cld
dec
mov
fisubr
fsub
pop
xor
in
mov
test
sti
fidiv
fcmovnu
add
add
mov
push
dec
mov
mov
retf
cs
out
add
jmp
fst
cld
int3
ror
jae
sbb
pop
and
sub
ins
push
mov
call
sti
xchg
inc
inc
retf
arpl
mov
jmp
stos
movs
push
out
xlat
mov
cdq
scas
inc
call
(bad)
lahf
lods
inc
adc
aas
pop
mov
ror
and
lods
xchg
push
scas
stos
lods
ret
and
sbb
ins
or
dec
cmp
push
mov
adc
push
mov
cmc
imul
xchg
push
mov
shl
cld
dec
sub
sbb
jmp
add
cmp
(bad)
leave
mov
aad
xchg
rcl
arpl
std
push
xchg
or
(bad)
push
ja
xor
shl
repz
(bad)
sub
pushf
das
je
mov
ins
inc
inc
repz
cmp
pop
shr
ins
adc
jmp
ss
push
add
dec
aam
inc
adc
push
adc
dec
(bad)
icebp
movs
mov
mov
ins
ins
je
mov
cs
jl
rol
test
mov
or
sub
lock
mov
sub
xor
std
inc
and
sbb
cmp
xchg
sti
fidiv
xchg
fbld
test
pop
inc
adc
imul
push
xchg
mov
adc
fsub
lock
in
je
mov
cwde
stos
fnstcw
stos
push
outs
fs
cs
cmp
mov
xchg
mov
ins
inc
xor
scas
and
inc
push
sahf
xor
js
jmp
xchg
into
stos
or
cmp
in
pusha
push
xor
jecxz
nop
xchg
daa
sbb
and
xor
xchg
call
and
mov
fsub
mov
lds
ins
fs
leave
jle
cmp
sub
cld
xchg
dec
pop
pushf
add
xchg
inc
jae
xor
jecxz
jnp
cmps
push
(bad)
or
test
fwait
push
cwde
pop
aaa
ss
ss
cmp
cld
frstor
sbb
xchg
loopne
scas
(bad)
loop
lock
addr16
sbb
fild
(bad)
cld
data16
mov
es
dec
xchg
sbb
jp
jl
pop
lock
and
loopne
xchg
rcl
dec
gs
mov
pop
xchg
lahf
lods
outs
(bad)
(bad)
dec
inc
out
gs
das
adc
out
pop
cmp
jns
movs
arpl
(bad)
jg
pop
cmp
out
adc
in
pop
out
inc
xor
mov
mov
mov
sub
xchg
mov
loopne
push
xchg
test
sbb
ret
test
adc
sbb
hlt
jmp
cmp
ror
jae
push
in
cmc
fidiv
movs
out
mov
mov
adc
pop
xlat
ror
shr
sbb
jnp
mov
mov
dec
pop
mov
dec
rcr
movs
cmp
push
in
adc
in
repnz
mov
retf
push
mov
call
jnp
adc
sub
loopne
loope
mov
mov
repz
pop
pop
std
test
xor
dec
mov
sub
dec
cmps
mov
pop
enter
das
cmp
rol
arpl
cwde
push
jmp
fisubr
(bad)
out
jl
inc
sbb
push
sub
sbb
xor
push
inc
jnp
xor
sbb
enter
ret
sub
sub
data16
clc
fcom
xchg
jnp
and
inc
jmp
fdivr
fild
add
in
mov
push
push
dec
pop
or
adc
pop
ds
jno
iret
(bad)
xchg
adc
scas
jnp
shl
shl
rcl
jecxz
in
mov
bound
dec
add
sti
es
pop
mov
sbb
and
mov
cmps
xor
shl
inc
sub
fnstenv
inc
pop
mov
loope
cmps
pop
or
push
and
adc
cld
jae
je
xchg
in
xor
mov
test
xchg
fld
lea
cmp
retfw
sar
sahf
sbb
ja
mov
test
push
inc
clc
fwait
das
test
nop
pop
bound
mov
into
mul
mov
addr16
add
cwde
popa
ret
or
and
pop
es
add
lea
into
jne
shl
jg
data16
cmp
xor
arpl
jne
cmc
in
adc
inc
and
push
inc
pop
jl
pop
or
sbb
mul
(bad)
dec
out
pop
lods
inc
fstp
xor
dec
and
mov
push
daa
add
cmp
imul
sub
call
push
cld
bound
jne
scas
or
push
nop
and
cmp
push
dec
inc
movs
inc
pusha
iret
add
cs
scas
adc
add
cmc
pop
adc
add
and
mov
jno
hlt
jno
fisttp
fild
xchg
xchg
push
dec
out
mov
inc
push
push
add
repnz
adc
out
repnz
pop
push
inc
dec
pop
add
mov
mov
mov
cs
or
sub
repz
mov
push
and
push
lea
scas
iret
mov
xor
sub
mov
xchg
out
push
imul
jmp
fwait
mov
lods
pop
in
dec
xlat
jl
out
xchg
call
inc
cs
xor
leave
in
dec
cmp
cmp
mov
inc
ficom
(bad)
mov
cmps
lds
lea
ror
and
fild
jl
cli
mov
and
sar
test
ja
shr
fcom
ins
jecxz
xor
mov
inc
ret
push
adc
imul
into
je
fidivr
out
cmps
loope
retf
dec
pop
pop
shl
lds
pushf
(bad)
cdq
mov
jnp
pop
call
lea
dec
arpl
ins
jae
add
mov
adc
std
jmp
in
and
push
pop
stos
addr16
repz
rcl
jo
sahf
dec
push
jbe
fsubr
and
stos
inc
gs
mov
test
mov
mov
icebp
imul
xor
hlt
push
push
push
int
mov
and
sahf
jnp
jmp
add
pop
adc
mov
adc
sub
cmp
mov
fsub
pop
pushf
cs
push
mov
push
sbb
inc
fnstsw
pop
and
mov
mov
lea
(bad)
jbe
retf
popf
pop
mov
or
pop
pop
or
ficom
dec
xor
repz
hlt
push
mov
xchg
mov
sub
out
ins
sbb
ret
cld
jecxz
imul
mov
pop
adc
pop
cmp
aaa
sub
lahf
xchg
push
sti
out
mov
pop
push
adc
xchg
add
bound
push
scas
mov
dec
xor
sahf
dec
stos
stos
std
inc
xchg
mov
dec
dec
(bad)
jnp
push
push
jg
int
xlat
gs
mov
mov
ret
and
jns
cmc
pop
test
js
das
ds
push
xor
mov
cmp
inc
clc
inc
inc
(bad)
push
(bad)
sub
popf
(bad)
bound
pop
aaa
inc
xchg
cs
inc
mov
dec
in
out
push
ret
push
aad
sub
scas
and
add
fimul
jbe
push
pop
js
sbb
add
jp
pop
pop
in
or
jecxz
test
adc
bound
mov
sub
repz
cmps
mov
or
cdq
lock
or
or
mov
ret
test
retf
push
pop
fucom
aad
shl
fcom
nop
std
add
aad
jmp
test
bound
jg
pop
jg
pop
sbb
mov
into
inc
jp
fstp
pop
push
inc
xchg
push
stos
test
test
retf
push
inc
adc
mov
in
push
dec
repz
push
jg
cmps
pop
mov
pop
push
jnp
rcl
and
ret
(bad)
sub
pop
adc
std
mov
ss
shr
lds
mov
imul
test
gs
aaa
or
test
xchg
stos
mov
push
jae
sbb
out
add
leave
movs
shl
jle
cmps
ror
xchg
mov
cmp
or
push
xor
rol
aaa
add
inc
test
push
mov
lahf
fs
mov
clc
mov
add
in
icebp
xor
pusha
(bad)
jae
xor
mov
loop
mov
xor
(bad)
jmp
retf
loope
mov
std
icebp
fdivr
mov
dec
pop
cdq
aam
aam
imul
das
pushf
xchg
fdivr
nop
loope
out
sbb
mov
call
adc
sbb
pop
mov
imul
xlat
andps
les
imul
mov
bound
push
inc
or
sbb
sbb
cmps
jl
in
shr
out
ror
retf
sbb
adc
aaa
pop
xchg
mov
lock
lds
xchg
fidiv
shl
iret
sar
sbb
push
jae
fnstsw
push
add
mov
fisubr
xchg
repnz
out
popa
push
int
xor
pusha
xor
xchg
cdq
add
xchg
dec
fs
repnz
or
imul
pop
int3
call
lds
dec
fstp
sub
xchg
(bad)
test
lahf
jno
mov
ja
cmp
xor
jle
les
sbb
adc
push
add
call
jg
fild
into
jl
data16
dec
out
fwait
adc
cmp
mov
test
mov
leave
(bad)
fsub
dec
push
iret
push
pop
push
sub
sub
xlat
add
cmps
xchg
pop
mov
cmp
out
ret
out
sub
das
into
test
test
xchg
inc
jb
add
aad
jp
push
js
(bad)
into
inc
repz
mov
(bad)
jns
push
ja
mov
xchg
in
les
push
out
frstor
push
shl
inc
sbb
std
and
sbb
adc
fs
mov
std
or
pop
sbb
xor
es
out
adc
pop
inc
ficomp
push
in
call
test
clc
js
(bad)
test
cmp
mov
push
pop
sbb
aam
xlat
cmp
call
in
cmp
mov
call
xchg
xchg
sbb
pushf
mov
shr
mov
xchg
pop
lahf
mov
jecxz
mov
mov
mov
sti
mov
sbb
data16
aas
cwde
fcmovu
(bad)
std
and
jnp
popf
cmp
call
push
aaa
jmp
push
popa
push
dec
sahf
mov
mov
jae
push
and
jns
fs
pop
mov
push
js
sub
test
dec
out
jl
(bad)
(bad)
xor
cld
lods
hlt
cmp
fneni(8087
stc
cli
dec
mov
xchg
sub
inc
mov
mov
ret
sbb
shl
push
add
je
inc
ficomp
out
push
scas
aad
imul
lods
jo
data16
in
add
sub
xor
ja
and
xor
inc
js
inc
shl
xchg
int
jmp
or
inc
adc
mov
dec
js
ins
retf
addr16
push
into
not
bnd
mov
pop
xchg
enter
mov
fsubr
xor
daa
xor
lods
shl
std
jnp
aaa
dec
sbb
mov
mov
ds
push
dec
pop
xchg
cmp
dec
xchg
jecxz
mov
xchg
xchg
and
push
push
jl
pop
js
inc
xchg
xchg
(bad)
lahf
pop
mov
in
and
aad
outs
int3
(bad)
dec
sahf
pop
and
cmps
sbb
jge
jae
fsubr
iret
aad
jl
sbb
mov
cs
(bad)
or
in
push
test
adc
or
cdq
nop
(bad)
sbb
je
std
xor
nop
dec
mov
cld
mov
xlat
pushf
pop
mov
add
aaa
in
aad
pop
ror
or
sub
sbb
and
inc
push
push
sub
ss
pop
mov
fcmovnbe
push
xlat
sub
inc
xor
in
lods
mov
adc
fisub
ins
ret
fwait
jnp
das
in
es
sub
into
retf
cmps
cdq
shl
loopne
inc
(bad)
inc
mov
frstor
(bad)
ins
cmp
retf
add
and
and
push
xor
lea
fcmove
fimul
cdq
les
mov
push
dec
retf
sti
les
scas
lods
mov
movs
mov
into
dec
mov
rol
out
loopne
sub
xchg
push
jg
dec
adc
not
pushf
pop
ss
fiadd
xlat
scas
mov
push
sub
ret
lea
dec
mov
jp
xor
sub
je
ret
cmp
xor
jbe
scas
sub
pusha
fwait
ret
pushf
mov
gs
xor
cmp
sbb
mov
scas
aad
dec
xchg
repz
mov
pop
push
jae
and
inc
aaa
fmul
ficom
or
mov
int3
sbb
adc
retw
xchg
jl
nop
and
test
adc
sub
mov
pop
mov
stos
adc
mov
sub
or
loopne
xor
jp
(bad)
push
fstp
and
or
fwait
inc
adc
add
mov
mov
stos
pop
push
xor
(bad)
jae
mov
fxch
jmp
sub
std
inc
imul
sbb
sub
lods
adc
jnp
leave
jp
retf
imul
data16
ret
sbb
in
push
add
sahf
int
fmul
stos
fisubr
fs
lock
fwait
jecxz
sbb
fadd
(bad)
(bad)
mov
cmp
in
adc
cdq
jecxz
repnz
or
int3
imul
mov
add
jle
in
outs
ret
pop
jno
in
ds
cmp
jg
mov
lods
je
adc
test
rcl
out
mov
sbb
imul
ror
dec
and
or
jnp
cli
add
cli
sub
outs
cmp
and
mov
push
(bad)
mov
jp
sbb
sub
lock
or
add
out
xchg
dec
mov
loop
push
clc
aas
xor
loope
ins
jno
inc
outs
sub
adc
lahf
std
jb
mov
dec
or
es
jno
ja
adc
xor
push
loope
mov
push
mov
sbb
mov
bound
xchg
xchg
(bad)
push
sti
xor
jno
loopne
repnz
out
mov
aam
mov
cmp
in
lds
sbb
cmps
fild
loope
outs
rcr
fwait
push
sub
and
adc
call
jg
out
mov
dec
frstor
and
jge
stos
test
push
mov
dec
pop
push
popa
dec
out
xor
mov
mov
imul
stc
sbb
push
add
xor
jb
xor
mov
out
(bad)
ret
nop
lock
lds
cmp
(bad)
sub
adc
mov
pop
scas
jmp
push
outs
mov
movs
sahf
and
cwde
(bad)
jne
loopne
pop
ror
mov
fdivr
or
add
lds
rcl
dec
inc
imul
pop
adc
cmps
mov
xchg
jge
inc
xor
retf
dec
test
in
mov
jp
fndisi(8087
mov
jp
sub
sar
jns
pop
ins
mov
fwait
repz
push
xor
adc
xchg
xlat
loopne
sub
mov
in
sub
fdiv
stos
out
xor
push
popa
loop
jbe
(bad)
fist
cmp
into
sbb
xor
int
inc
loopne
or
pop
push
cs
inc
adc
out
stos
add
jno
test
and
mov
sub
ins
jge
sub
ret
adc
cmp
(bad)
(bad)
fwait
xchg
(bad)
lods
mov
sbb
test
(bad)
jmp
nop
jnp
mov
repnz
pop
std
test
sbb
in
daa
daa
bound
mov
add
jmp
sbb
jmp
add
js
pop
mov
xor
inc
(bad)
fstp
sub
pop
cmps
in
jno
mov
lods
pop
pop
repnz
pop
arpl
(bad)
mov
xchg
and
mov
(bad)
aaa
and
and
ss
fisubr
(bad)
into
xor
adc
and
xor
xchg
es
and
outs
retf
sbb
fstp
pavgw
jl
mov
and
enter
cmp
out
jp
jecxz
jns
mov
mov
add
lods
push
push
xchg
cmp
add
sub
out
dec
xor
push
cli
loopne
and
dec
jb
sub
push
inc
(bad)
fmul
jp
movs
push
sub
cmps
jb
int3
fcom
xchg
adc
std
or
fucom
and
popa
fadd
mov
es
test
jecxz
div
inc
mov
and
hlt
popa
cmp
mov
mov
push
ret
xor
xor
in
movs
mov
loope
scas
mov
mov
adc
fidiv
ss
mov
xchg
cwde
int3
dec
pop
(bad)
sbb
call
jo
push
into
or
loope
jns
in
retf
adc
outs
add
call
jl
in
jbe
int3
jge
in
push
jmp
fadd
inc
test
pop
and
sbb
leave
xlat
mov
inc
jbe
jo
dec
push
jmp
fld
(bad)
or
lea
push
fcom
sub
div
sbb
std
xor
sti
fbstp
test
jae
rcl
pop
mov
sti
and
xchg
mov
mov
cmp
dec
sbb
mov
sbb
ror
mov
mov
call
or
(bad)
scas
call
jo
xchg
shl
cmc
inc
loopne
xor
mov
jnp
aas
ret
fnstsw
out
dec
jo
sub
ja
mov
xchg
loopne
jmp
or
jne
movs
shr
pop
cs
test
cmps
push
retf
sbb
scas
stc
adc
inc
sbb
push
inc
scas
cmps
cwde
aaa
mov
add
scas
mov
hlt
js
cwde
sbb
mov
jp
xchg
mov
inc
test
jmp
xor
inc
dec
and
and
push
xchg
(bad)
ds
in
jge
and
jnp
xor
pop
fwait
test
mov
mov
jmp
icebp
jmp
(bad)
inc
or
add
pop
push
xor
sub
test
dec
xchg
ret
xor
retf
aam
sub
inc
sub
les
adc
xchg
sahf
int3
jmp
add
(bad)
neg
ret
sbb
sub
mov
popa
test
shr
cmp
pusha
dec
pop
(bad)
push
jnp
outs
push
mov
inc
popa
clc
xchg
sbb
xchg
add
test
cmp
fucomip
xchg
repz
arpl
mov
push
xchg
rol
and
dec
in
idiv
mov
in
adc
sbb
add
ret
and
loope
rol
lea
dec
aas
(bad)
push
adc
inc
lock
mov
fcom
lahf
(bad)
(bad)
scas
loope
sub
mov
adc
push
cmp
and
xor
xchg
push
fs
mov
and
mov
sti
pop
std
imul
loopne
jmp
pusha
sub
(bad)
cmp
mov
bound
sub
ds
sbb
xlat
jmp
popa
(bad)
mov
push
inc
and
mov
clc
pop
movs
jae
outs
push
adc
fimul
sbb
add
xor
push
cmps
mov
(bad)
mov
repz
mov
xchg
repz
mov
pop
jg
nop
push
jne
push
sbb
ret
popa
std
dec
xchg
inc
std
jg
imul
dec
mov
jge
call
(bad)
fwait
in
jb
jne
cmp
add
fst
pop
into
pop
test
push
xchg
mov
dec
jg
sbb
dec
sub
fisub
jle
sbb
lds
jecxz
xchg
mov
adc
or
in
lahf
iret
and
sbb
in
test
(bad)
xlat
out
(bad)
loop
add
pop
ret
jo
or
xchg
cs
outs
stos
es
cwde
sbb
gs
mov
mov
and
pop
pop
inc
xchg
std
xchg
out
fstp
xor
in
jge
sub
mov
dec
(bad)
(bad)
sbb
shr
jle
ret
out
fstsw
and
int
inc
(bad)
pop
add
call
imul
xlat
adc
sbb
dec
xor
(bad)
gs
pop
sbb
push
sti
mov
cld
cmp
fsub
fadd
dec
add
jmp
adc
stc
adc
add
xor
fs
add
jmp
jl
jae
push
outs
jae
sub
cwde
sub
lock
xchg
repnz
fidivr
mov
stos
sar
inc
test
or
push
loope
not
cs
jle
out
ret
mov
es
cmp
push
fwait
jne
dec
inc
push
ror
fcmovnbe
mov
scas
jmp
ins
xor
js
sbb
and
les
fwait
js
es
sub
jnp
mov
xchg
test
(bad)
sbb
push
dec
not
sbb
dec
and
loope
add
xchg
pop
jp
mov
adc
imul
dec
mov
aad
out
jp
(bad)
pop
mov
adc
(bad)
pop
sti
xchg
jg
add
cs
inc
push
shl
ret
bound
sbb
imul
pop
push
pusha
add
mov
out
dec
inc
retf
iret
mov
mov
mov
ficom
int
nop
aas
jbe
mov
pushf
ret
and
out
jl
mov
test
arpl
mov
ins
lods
aas
jmp
sbb
retf
addr16
mov
sar
retf
fwait
int3
jle
mov
pop
(bad)
fistp
enter
popa
jo
inc
inc
push
data16
push
mov
jmp
outs
inc
outs
stc
fbld
dec
pop
iret
ror
(bad)
jmp
fadd
loop
ss
cdq
gs
les
jns
daa
push
mov
clc
dec
pop
mov
outs
inc
mov
lods
mov
lods
cli
lahf
clc
pop
mov
add
ins
movs
test
imul
mov
sub
xor
test
add
dec
xchg
mov
fadd
push
lock
int3
jns
sub
jb
cmp
retf
pop
int3
pop
imul
xchg
inc
xor
scas
or
mov
jne
cmp
xchg
xchg
mov
pop
cmps
mov
sub
inc
jge
xchg
bound
xor
into
gs
xchg
sub
inc
retf
test
sub
imul
cmp
mov
adc
sub
cmp
mov
cmp
dec
imul
pop
dec
xchg
xor
jbe
mov
jmp
pusha
sti
mov
jmp
test
jecxz
or
mov
sar
adc
push
dec
and
and
inc
cmps
or
mov
(bad)
in
mov
bound
dec
push
pop
and
ficomp
dec
scas
enter
mov
or
aam
or
xor
cwde
cli
je
test
xchg
repnz
mov
sahf
dec
mov
ss
dec
pop
xor
jne
cmp
imul
xchg
jnp
xor
js
stos
cld
xchg
adc
sbb
jne
pop
pop
fidivr
sbb
loop
into
mov
lds
add
or
js
xor
inc
es
adc
adc
cmps
fcom
les
push
das
add
fld
in
pop
xchg
push
imul
mov
imul
pushf
xor
xor
test
call
xor
or
sar
inc
xor
sbb
or
lock
aas
fdiv
nop
pop
cmps
mov
cld
mov
out
out
stos
psubq
adc
dec
adc
xor
dec
mov
movs
mov
retf
in
cmc
data16
inc
lds
or
test
or
das
das
fist
(bad)
sbb
scas
clc
mov
dec
inc
fmul
cmp
(bad)
leave
jb
mov
jnp
and
sub
and
push
sbb
stos
ror
push
cmp
lahf
pop
pop
mov
enter
jge
sbb
push
or
cmp
ins
cmp
jecxz
inc
hlt
dec
ret
jae
mov
and
lods
xchg
inc
ins
dec
dec
popa
adc
movd
push
in
mov
mov
(bad)
jle
(bad)
push
loopne
jno
jns
in
out
sbb
lahf
jo
cs
add
sbb
ret
push
dec
lods
sbb
jnp
sbb
adc
pusha
mov
ret
lea
aaa
adc
jge
xchg
ret
and
iret
mov
nop
aad
aas
stc
test
popa
inc
mov
nop
aas
jbe
push
daa
push
mov
ficom
xchg
cmps
sub
push
push
or
cmp
fwait
call
nop
ins
or
push
fsub
xchg
(bad)
adc
adc
sub
test
mov
xchg
call
push
out
repnz
imul
adc
icebp
or
mov
push
inc
xchg
pop
mov
xchg
test
xor
inc
out
(bad)
mov
mov
shl
xor
add
gs
mov
sbb
sbb
inc
je
ja
popf
pusha
dec
jae
dec
ror
inc
repz
scas
inc
push
inc
leave
push
mov
cmp
cwde
mov
cmps
push
cs
xchg
aad
sbb
cmp
js
mov
test
jbe
stos
or
rol
xor
xchg
ins
cmps
xor
mov
dec
pop
fiadd
fs
xchg
pop
sub
imul
bound
jne
inc
fsubr
inc
inc
pop
sub
enter
lahf
loop
daa
sbb
cmp
mov
mov
cmps
push
aad
nop
btc
stos
pop
imul
push
sbb
and
adc
daa
in
ret
outs
sub
mov
gs
push
and
mov
xor
jl
adc
(bad)
or
dec
inc
or
pop
cmp
jne
adc
pop
les
dec
add
push
and
xchg
sub
adc
mov
mov
aad
cmp
ret
aam
cwde
adc
or
out
jmp
and
mov
adc
dec
mov
pop
aad
in
cmp
fdivr
sbb
mov
push
stc
daa
aas
jo
xchg
es
je
pop
pop
sahf
aad
pfrcpit1
fsubr
bound
fidivr
pop
xlat
idiv
