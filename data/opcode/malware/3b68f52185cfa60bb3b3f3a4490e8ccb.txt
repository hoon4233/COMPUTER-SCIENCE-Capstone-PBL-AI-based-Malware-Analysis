push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
mov
xor
xor
mov
push
push
push
push
lea
mov
mov
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
push
push
call
jmp
mov
ret
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
dec
lea
mov
inc
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
lea
mov
sub
add
inc
cmp
jl
lea
push
mov
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
mov
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
lea
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
movzx
mov
mov
mov
lea
push
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
lea
mov
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
movzx
mov
mov
lea
mov
mov
push
push
call
movzx
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
xor
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
cmp
je
jmp
jmp
mov
mov
xor
mov
mov
xor
mov
inc
dec
cmp
jne
test
adc
adc
test
adc
adc
test
adc
adc
test
adc
adc
mov
xchg
xchg
rcl
mov
xchg
xlat
xchg
nop
out
out
out
adc
adc
jp
js
adc
adc
xor
adc
xchg
aam
cdq
push
call
popf
popf
add
out
out
inc
clc
shr
adc
xchg
aam
and
cdq
test
mov
test
test
out
out
xlat
xchg
lods
out
out
out
add
adc
fwait
push
sbb
out
fwait
popf
xchg
out
out
out
pop
cmps
add
adc
xchg
nop
out
out
out
adc
xchg
nop
out
out
out
stc
sub
adc
sti
pop
xlat
xchg
lods
out
out
out
adc
adc
fwait
xchg
lods
out
out
out
adc
cdq
xchg
lods
out
out
out
xchg
lods
lods
out
out
out
adc
pop
fwait
popf
lods
out
out
out
xchg
rcr
cdq
popf
lods
out
out
out
fwait
test
xlat
cmp
adc
out
(bad)
xchg
cwde
out
out
out
adc
rcr
out
cdq
xchg
popf
out
out
out
cdq
xchg
sub
test
out
out
cdq
xchg
mov
out
out
cdq
xchg
(bad)
out
out
out
cdq
xchg
mov
out
out
jbe
xchg
mov
out
out
cwde
xchg
mov
out
out
fwait
sbb
cdq
popf
cwde
out
out
out
fwait
add
cdq
test
jo
adc
out
call
popf
test
out
out
xlat
xchg
clc
in
out
out
adc
adc
sti
pop
fwait
test
in
out
out
xchg
rcl
cdq
test
in
out
out
xchg
lods
clc
in
out
out
sbb
xor
out
pop
scas
pushf
adc
xchg
stc
add
out
out
cwde
pushf
add
sti
fcomp
out
inc
fwait
sbb
inc
out
add
mov
xchg
fwait
test
sbb
push
sub
xchg
adc
out
out
js
adc
adc
out
inc
jp
out
add
popf
test
xchg
add
out
out
inc
jp
jp
jp
jp
jp
jp
jp
popf
popf
shr
out
out
inc
out
add
(bad)
push
rcl
ret
rcr
cdq
inc
int
inc
icebp
cdq
inc
cmc
cdq
inc
stc
jbe
inc
std
cwde
inc
push
cdq
push
rcr
cdq
pop
les
adc
jo
adc
jl
push
adc
hlt
in
out
out
adc
adc
sti
pop
fwait
test
in
out
out
xchg
rcl
cdq
test
in
out
out
xchg
lods
hlt
in
out
out
add
fwait
xchg
hlt
in
out
out
pop
scas
pop
adc
fwait
test
in
out
out
cwde
pop
add
push
rol
mov
add
mov
xchg
fwait
test
push
and
adc
xchg
lods
out
out
out
cmp
inc
jp
jp
out
add
cdq
push
call
push
adc
push
xchg
shl
inc
call
call
out
out
out
inc
out
add
(bad)
xchg
dec
out
out
out
adc
ret
dec
out
out
out
cdq
test
out
out
cdq
test
out
out
cdq
test
out
out
cdq
test
out
out
cdq
test
out
out
cdq
test
out
out
jbe
test
out
out
cwde
test
out
out
jbe
pusha
jo
adc
xchg
dec
out
out
out
call
popf
dec
out
out
out
popf
test
out
xchg
shr
cdq
test
in
out
out
fwait
xchg
int3
in
out
out
call
out
out
xchg
xchg
int3
in
out
out
adc
out
adc
fwait
lods
int3
in
out
out
jbe
add
jbe
pop
mov
jo
adc
dec
out
out
out
xchg
shr
cdq
popf
(bad)
in
out
out
fwait
test
in
out
out
call
out
out
xchg
xchg
(bad)
in
out
out
adc
out
adc
fwait
lods
(bad)
in
out
out
jbe
sbb
jbe
pop
call
inc
adc
out
xchg
shr
cdq
xchg
fsubr
out
out
fwait
popf
fsubr
out
out
call
out
out
xchg
xchg
fsubr
out
out
adc
out
adc
fwait
lods
fsubr
out
out
jbe
ins
jo
adc
pop
call
pop
adc
out
xchg
shr
cdq
test
in
out
out
fwait
xchg
aam
out
out
call
out
out
xchg
xchg
aam
out
out
adc
out
adc
fwait
lods
aam
out
out
jbe
add
jbe
pop
mov
dec
push
adc
dec
out
out
out
xchg
shr
cdq
popf
lods
in
out
out
fwait
test
adc
out
xchg
xchg
lods
in
out
out
adc
out
adc
fwait
lods
lods
in
out
out
jbe
sbb
jbe
pop
call
inc
adc
out
inc
fwait
sbb
inc
out
add
mov
xchg
xlat
push
in
in
adc
adc
lods
adc
adc
push
in
jnp
je
les
adc
inc
fwait
popf
adc
out
out
fwait
inc
inc
inc
fwait
xchg
adc
out
out
fwait
pop
and
fwait
test
add
cdq
xchg
ins
out
out
out
jp
jp
fwait
xchg
adc
out
out
xchg
shl
fwait
pop
call
adc
xchg
rcr
inc
fwait
xchg
mov
out
add
jp
jp
popf
pop
fadd
inc
call
adc
xchg
rcr
inc
fwait
popf
mov
out
add
mov
xchg
jns
mov
ret
adc
adc
loope
add
popf
push
add
out
out
fwait
pop
call
out
out
cdq
and
push
rol
mov
add
mov
xchg
fwait
inc
call
out
out
out
inc
out
add
xchg
lods
ins
out
out
out
adc
xchg
in
adc
and
fwait
test
out
out
jbe
dec
pop
push
mov
xor
mov
div
add
push
mov
push
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
push
push
mov
mov
lea
push
mov
xor
mov
div
lea
push
mov
push
call
mov
mov
mov
lea
mov
mov
add
mov
push
push
mov
add
push
mov
imul
add
push
mov
push
call
mov
push
call
jmp
mov
cmp
je
push
mov
push
call
mov
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
push
push
call
push
call
mov
mov
push
push
call
push
push
call
mov
mov
push
push
call
add
mov
xor
lea
mov
add
inc
cmp
jb
push
call
push
call
mov
call
add
imul
mov
call
call
mov
call
mov
call
lea
lea
add
je
mov
mov
sub
mov
jmp
jmp
lea
mov
mov
add
inc
inc
call
mov
call
lea
lea
add
cmp
jb
mov
mov
xor
xor
lea
mov
add
inc
cmp
jb
push
push
mov
push
call
push
push
call
mov
mov
mov
push
push
call
add
mov
mov
mov
mov
xor
lea
xor
dec
jne
mov
inc
cmp
jl
call
call
mov
call
push
call
jmp
mov
ret
mov
lea
push
push
mov
push
push
mov
push
push
call
mov
push
push
call
push
call
push
call
mov
push
push
call
add
test
je
sub
mov
mov
mov
mov
inc
dec
jne
push
push
call
add
test
jne
push
push
push
push
call
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
jmp
cmp
jne
repz
jmp
mov
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
push
call
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
mov
xor
jmp
mov
test
je
mov
pop
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jae
mov
mov
test
je
call
add
jmp
mov
cmp
jae
mov
mov
test
je
call
add
jmp
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
push
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
and
add
cmp
jl
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
or
mov
mov
mov
mov
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
add
lea
mov
cmp
jae
add
or
and
and
and
mov
mov
mov
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
inc
add
inc
inc
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
push
call
mov
mov
and
xor
inc
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
call
test
je
mov
push
push
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
js
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
and
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
call
push
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
push
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzx
mov
add
test
je
dec
jne
jmp
mov
sub
movzx
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzx
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
mov
call
or
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
add
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
add
push
call
pop
pop
mov
mov
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
test
je
push
call
pop
test
je
push
push
push
call
add
push
call
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
in
inc
add
pop
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
add
inc
add
inc
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rcr
fcomp
in
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jo
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
ins
pop
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmp
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
mov
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
add
add
mov
inc
push
cdq
or
add
xor
add
cld
inc
cli
rcl
div
xor
loop
repz
out
push
out
sub
pop
loop
lods
adc
mov
movs
mov
shr
lods
lods
mov
(bad)
movs
mov
loopne
mov
jmp
pushf
mov
sub
pop
stos
hlt
push
jecxz
mov
arpl
gs
xchg
add
imul
or
aad
out
and
jl
ss
push
jbe
jno
es
(bad)
outs
ins
outs
push
push
hlt
bound
bound
inc
pop
push
and
pop
gs
push
push
mov
dec
push
dec
lods
dec
enter
inc
add
inc
inc
(bad)
cmp
cmp
xor
mov
adc
das
sub
pop
pop
xchg
adc
bound
adc
jge
xchg
jns
mov
or
or
ins
popa
add
xchg
loopne
xchg
jp
js
in
jb
jae
mov
inc
(bad)
shr
shr
aad
xlat
out
in
jecxz
loope
xchg
cli
mov
fadd
mov
jne
shr
add
sub
aam
mov
gs
mov
aam
mov
rcl
scas
into
lods
int
stos
(bad)
fadd
retf
(bad)
ret
popf
shr
int
call
cld
loopne
std
out
cli
in
in
sti
test
in
div
loop
fimul
jle
sbb
push
das
adc
push
cmp
add
pop
outs
adc
imul
mov
cmp
mov
adc
xor
dec
adc
cmp
and
out
movs
dec
aaa
ss
sub
imul
pop
cmp
cmp
pop
pop
inc
inc
push
das
dec
push
dec
sub
push
push
ss
jbe
push
icebp
adc
div
inc
jae
in
and
push
sbb
stos
or
mov
push
push
mov
(bad)
xchg
in
leave
push
retf
aaa
neg
xchg
mov
fmul
das
in
and
jmp
sbb
mov
test
push
fcmovne
lods
add
or
or
inc
pop
leave
mov
pop
dec
xchg
ror
shl
push
xor
mov
mov
scas
sahf
ja
dec
and
push
movs
arpl
(bad)
pop
pop
pusha
fprem
cld
out
retf
div
cdq
push
or
lods
(bad)
out
out
sti
in
xchg
loopne
add
ret
or
jns
adc
(bad)
xor
cli
je
ins
lods
loope
imul
jmp
sbb
push
lods
ficom
xchg
and
lds
mov
dec
jb
cmp
sbb
cmp
je
inc
xlat
or
cmp
push
and
sub
das
sub
dec
push
cmc
aaa
fst
adc
or
pop
retf
dec
sub
mov
and
outs
mov
jg
fdiv
xchg
mov
xchg
pushf
ss
das
inc
jp
(bad)
xor
imul
dec
mov
sub
pushf
mov
(bad)
pop
test
xchg
int
cld
adc
out
jns
out
ja
pop
jno
mov
jmp
(bad)
in
add
push
loopne
pusha
dec
adc
pop
push
aad
(bad)
push
shl
add
or
sbb
add
int
sub
mov
(bad)
jae
cmp
test
xchg
push
cmps
jne
fwait
out
and
divps
fwait
push
mov
push
xchg
(bad)
adc
lds
mov
bound
mov
inc
mov
stc
pop
ss
mov
xchg
jae
sub
xor
dec
inc
dec
push
test
pop
mov
mov
xchg
lock
dec
pusha
out
mov
add
add
cmps
movs
xor
push
movs
out
push
test
xchg
aam
out
jmp
movs
cmc
rcl
pop
popf
sbb
push
popf
loopne
push
jecxz
repz
in
fsub
leave
leave
inc
xor
aam
mov
rol
mov
mov
jnp
and
in
test
pop
and
mov
lock
retf
inc
dec
sbb
imul
mov
jno
dec
dec
mov
shl
and
or
and
inc
pop
jns
jp
repz
jb
popf
jnp
jno
out
test
mov
adc
das
sub
pop
pop
lods
pop
pop
cmp
dec
and
pop
in
fiadd
mov
dec
dec
dec
inc
or
ret
add
jne
inc
out
jae
or
aaa
pop
xchg
cmps
lods
stos
sub
daa
cmp
cmp
test
pop
sub
pop
adc
pop
loope
xor
std
jns
cmc
jl
pop
cmps
sbb
add
add
cli
ret
int3
cmc
jge
push
je
xchg
jmp
xchg
add
ins
test
outs
push
call
and
test
xchg
fld
int
dec
(bad)
cmp
(bad)
dec
push
ret
cmp
pop
mov
mov
test
xchg
jecxz
call
sub
test
cdq
fwait
pop
push
shl
jecxz
in
shr
mov
add
jg
inc
imul
outs
dec
pop
cld
pop
jno
cmp
push
ss
sbb
addr16
sub
sub
sar
pop
shl
xlat
push
fist
jns
dec
dec
cmp
mov
pop
sbb
idiv
dec
jnp
aad
mov
gs
xor
inc
outs
jbe
sub
stos
dec
(bad)
sub
cmp
repnz
push
adc
and
push
mov
cmp
jl
rol
inc
add
mov
sbb
stc
jns
lods
adc
adc
icebp
int3
jp
jmp
jecxz
or
movs
adc
in
repnz
fdiv
jle
les
sbb
not
aam
rol
xor
push
aaa
pop
leave
lds
cmp
and
push
popf
hlt
bound
mov
or
fldcw
mov
shl
mov
cwde
ret
push
(bad)
xchg
dec
xor
mov
cwde
xor
hlt
xchg
pop
repz
jns
in
xchg
js
jmp
dec
fwait
rep
cmps
gs
xlat
les
popf
fcmovne
mov
scas
shr
adc
mov
dec
jne
dec
ret
jbe
inc
inc
sahf
out
push
ja
cmp
xchg
xor
push
inc
mov
sub
out
and
aas
xor
jp
sub
mov
sbb
and
shl
sub
mov
adc
add
nop
push
add
in
loop
pop
loopne
jmp
jecxz
loope
fbld
rcr
aam
(bad)
fcomp
(bad)
fcmovbe
(bad)
(bad)
ror
ret
retf
(bad)
(bad)
leave
(bad)
int
iret
mov
mov
lods
inc
cmp
clc
pop
mov
xchg
outs
test
data16
clc
adc
jge
mov
fcmovnb
jae
jno
mov
fsubr
sbb
mov
mov
adc
xor
xor
xor
inc
les
cli
in
outs
jmp
imul
jmp
js
push
push
xor
or
(bad)
jmp
sub
inc
leave
loope
int3
shr
js
std
xor
adc
ret
mov
cld
add
cmps
hlt
inc
pop
jnp
cwde
sahf
int3
jns
arpl
nop
ret
jae
add
mov
ins
or
lea
gs
les
cmp
mov
jno
push
xchg
lock
push
jnp
in
cmp
lods
sbb
pop
mov
aad
xchg
ss
lds
les
cs
or
push
test
dec
(bad)
and
mov
xor
mov
aaa
scas
rcr
scas
lods
imul
fsubr
sub
adc
sbb
fwait
out
sbb
mov
xchg
test
inc
mov
mov
movd
imul
(bad)
je
popa
jle
mov
addr16
into
ins
ins
aam
icebp
pop
fisttp
push
(bad)
mov
xor
sub
fnstenv
dec
inc
lock
pusha
daa
inc
iret
loopne
adc
jg
xor
and
mov
cmps
jns
mov
and
add
cmp
xchg
cwde
and
pop
mov
xor
retf
dec
imul
pushf
ins
les
call
imul
xor
out
jo
sub
mov
movs
inc
fbstp
jnp
mov
adc
sbb
pop
std
aaa
xchg
cmp
mov
stc
cmp
repnz
(bad)
mov
mov
mov
in
lods
sti
pop
mov
rcr
cld
push
push
rcr
nop
sub
or
mov
enter
xor
jp
add
xor
outs
push
cmp
jmp
and
pop
pop
lahf
sbb
xchg
push
cmp
push
or
add
aas
jmp
cmp
inc
cmc
ja
xor
sub
jp
mov
bound
(bad)
cwde
js
push
dec
ficom
je
push
push
mov
xchg
push
mov
cmp
xchg
je
cdq
mov
in
sub
test
jmp
mov
dec
cmp
and
dec
not
mov
int3
std
out
dec
pop
jmp
(bad)
loope
ret
jns
fwait
aas
mov
mov
mov
xor
xor
and
fsub
mov
loopne
cwde
call
jmp
xchg
xchg
adc
push
or
or
or
jb
pop
js
push
cld
daa
sbb
imul
cmp
sbb
mov
sbb
fwait
cmp
push
push
nop
xor
jns
pop
jecxz
push
in
test
out
and
xchg
(bad)
xor
cmp
icebp
ins
out
and
jno
ret
lods
add
int3
fistp
pop
sbb
or
push
jge
adc
adc
repnz
dec
inc
add
test
push
mov
mov
cli
jle
jb
jp
in
loope
movs
xlat
arpl
jecxz
outs
jbe
loopne
push
sbb
push
adc
pop
xchg
rcl
sub
int3
retf
and
inc
mov
ds
mov
push
mov
test
call
mov
out
jle
sub
mov
pop
jno
dec
push
xchg
test
call
mov
fstp
(bad)
ret
and
cli
pop
xchg
jnp
(bad)
and
jmp
sub
out
sub
out
ss
in
xor
push
fnstenv
or
push
aad
aad
adc
scas
sbb
xchg
retf
xchg
or
paddd
js
mov
mov
mul
jno
xor
mov
mov
and
cdq
mov
adc
adc
clc
sbb
in
cwde
les
pop
mov
mov
add
mov
cmp
jno
adc
cmps
push
retf
popf
mov
loop
push
mul
sub
fcmovnu
pop
mov
jo
inc
iret
lds
and
retf
arpl
(bad)
mov
test
mov
(bad)
shl
lods
cwde
and
stos
add
adc
mov
bswap
sbb
icebp
inc
mov
sub
in
mov
aaa
je
aad
adc
jb
sub
call
imul
test
xor
sar
pop
xchg
inc
hlt
popw
mov
cmps
leave
jae
dec
out
inc
add
leave
leave
dec
mov
dec
or
xor
mov
pusha
movs
arpl
cmc
out
ja
shl
ret
loopne
mov
xchg
icebp
push
cmp
jb
popf
pop
lahf
add
leave
or
push
mov
hlt
cmp
cld
jle
call
(bad)
sbb
push
das
jmp
outs
sub
pusha
mov
out
imul
xchg
xor
pop
cmp
mov
cwde
call
(bad)
push
mov
aaa
repz
fwait
mov
arpl
mov
lods
jmp
and
mov
das
mov
and
cwde
cmp
push
push
mov
push
or
dec
add
or
test
adc
scas
sbb
dec
ja
add
out
pusha
sub
in
pop
das
push
(bad)
cdq
pop
int
inc
jle
rcr
inc
les
cmc
(bad)
imul
into
data16
jnp
or
aas
rol
sub
mov
inc
sub
test
stos
fcomp
xchg
lea
cmp
push
pop
test
add
push
(bad)
movs
add
pop
pop
pop
push
mov
mov
repnz
lock
stc
das
jmp
loop
cmc
mov
cli
(bad)
xlat
rcl
adc
into
into
out
enter
das
(bad)
loopne
mov
mov
mov
mov
cmp
cmp
movs
mov
addr16
jbe
mov
ins
pop
pop
sti
adc
outs
sbb
rol
add
outs
push
ja
ss
inc
cmp
or
daa
jno
ins
cmp
push
ins
jmp
mov
push
pop
pop
in
stos
ror
mov
add
xor
cmp
jae
mov
sub
stos
retf
lods
jno
and
out
push
cmp
fld
test
inc
adc
pop
or
sbb
push
inc
sbb
call
mov
cmp
(bad)
mov
inc
stc
cli
aaa
mov
out
in
sub
mov
in
jecxz
and
or
aad
shl
cmc
xor
leave
aad
ror
add
adc
stc
cli
inc
mov
repnz
ds
cmp
push
mov
sub
fimul
pop
sbb
movs
loop
xchg
xchg
es
outs
shl
retf
popf
mov
mov
sti
pop
and
js
sbb
fs
jno
inc
sti
jmp
popa
int3
js
arpl
and
pusha
push
leave
pop
push
into
pop
mov
push
fcomp
pop
aam
ficom
sbb
mov
inc
rol
or
xchg
aaa
out
ds
xor
xor
cmp
xor
mov
das
int
push
and
sbb
in
sbb
(bad)
stc
sbb
adc
add
push
push
push
out
xor
add
repz
repnz
(bad)
jmp
mov
add
mov
jno
mov
retf
in
pop
cmc
test
ret
xlat
js
xlat
div
ja
rcl
repnz
int3
mov
retf
or
shl
or
imul
xor
lods
adc
cmp
in
cmps
shl
mov
xchg
stc
mov
xchg
adc
test
xor
jge
jge
cli
mov
std
xor
ins
sub
cmp
imul
mov
pop
jb
push
cmps
daa
push
outs
popa
mov
dec
outs
dec
sbb
dec
mov
or
shl
test
sub
lods
adc
xchg
xor
aas
or
or
pusha
sub
dec
fs
adc
in
adc
pop
(bad)
jbe
inc
push
stc
pop
int3
pop
cli
ds
test
sub
cmp
(bad)
out
loope
(bad)
loopne
push
cli
inc
and
ret
icebp
cmc
pop
cmp
cmps
push
mov
xor
ins
xchg
xor
loopne
mov
fcomp
icebp
in
leave
and
or
mov
mov
repz
mov
xchg
clc
cmp
lods
pop
scas
mov
mov
fidiv
pushf
arpl
cdq
lock
(bad)
je
sub
dec
fnstenv
mov
icebp
pop
xchg
xchg
xor
jge
jne
sahf
sbb
jle
cmp
mov
out
and
hlt
mov
dec
popf
pop
shr
gs
sub
sub
rcl
cmp
push
jle
imul
xor
dec
cmp
mov
dec
adc
(bad)
movs
iret
mov
sub
fcomp
retf
stos
lds
push
inc
or
adc
xor
jle
push
mov
lds
lods
jnp
call
cmc
pop
loope
push
mov
sahf
lock
out
mov
call
push
xchg
fist
js
or
aas
shl
cmp
into
pop
call
cmp
into
mov
ins
inc
inc
xchg
inc
xchg
mov
lods
pop
pop
ret
push
mov
stc
jecxz
into
mov
jg
neg
iret
xchg
in
cmp
sahf
pushf
ja
test
call
mov
push
ins
sbb
or
call
imul
sahf
mov
or
pop
push
stos
add
inc
mov
adc
jb
nop
dec
les
icebp
cmp
idiv
and
pusha
mov
shl
dec
fst
add
pushf
jb
stc
jg
loop
clc
mov
pop
loopne
pop
in
push
(bad)
and
sti
or
sbb
or
inc
or
not
lods
stc
xor
stc
mov
pop
ficom
inc
sub
add
xchg
sahf
push
jnp
out
imul
cmp
and
fstp
mov
sub
xchg
repnz
frstor
shl
mov
inc
mov
mov
mov
mov
push
cmps
lock
dec
enter
jl
pushf
mov
mov
mov
jae
sbb
cwde
nop
mov
inc
test
ins
test
mov
cmp
mov
jne
sbb
cmp
xchg
xchg
jb
ja
bound
movs
push
aad
mov
or
fst
push
lods
shl
mov
cmp
ror
mov
inc
add
xor
mov
mov
mov
test
adc
imul
sub
mov
cmp
pop
rcr
xchg
pop
iret
inc
sahf
pop
pop
add
and
or
dec
icebp
test
enter
add
cmc
cld
je
stc
call
(bad)
jmp
lock
out
fistp
jmp
cmc
mul
neg
test
retf
(bad)
jbe
rcl
rol
sub
cdq
in
dec
daa
ret
inc
xchg
dec
mov
dec
lea
call
hlt
mov
jg
loope
adc
mov
in
xchg
adc
pop
cli
sahf
xchg
popf
pop
fimul
push
movs
into
jp
add
ds
or
jge
sub
jp
lock
jno
jno
jo
jmp
imul
pusha
popa
arpl
pop
pop
aad
mov
jns
int
movs
iret
mov
and
mov
inc
inc
loop
imul
jmp
aaa
jmp
jmp
push
je
scas
mov
and
push
lds
aas
nop
aas
clc
pop
rcr
repz
in
jmp
in
push
xor
cmc
cli
sub
or
movs
lds
jecxz
loopne
mov
pop
jb
(bad)
push
sub
shl
fcom
mov
mov
xchg
and
xor
cli
mov
xor
daa
out
xor
call
mov
in
jo
dec
loope
adc
pop
je
xchg
xchg
and
les
mov
(bad)
xchg
jnp
rol
cmps
cmp
push
mov
(bad)
es
push
sbb
dec
cmps
jne
outs
arpl
and
std
popf
push
pop
inc
mov
scas
adc
fist
add
unpckhps
test
das
leave
cmp
cmp
popf
dec
and
mov
mov
addr16
loope
sub
add
mov
das
xchg
sbb
repnz
fwait
adc
adc
dec
sub
cmps
or
ret
cmp
out
in
iret
sub
sbb
add
sti
mov
push
scas
std
mov
loop
jmp
and
or
mov
ss
xchg
xor
aad
mov
cmp
es
adc
leave
mov
dec
dec
pop
push
push
nop
lds
lods
test
sub
mov
call
and
jns
lock
xchg
nop
cmp
mov
xchg
xchg
xor
mov
cwde
popf
xor
pop
mov
xor
mov
gs
popa
bound
pop
mov
pop
adc
test
dec
cmp
add
or
mov
mov
jae
adc
pop
fs
fsub
and
dec
jbe
ret
pop
dec
sbb
inc
push
jnp
sbb
nop
adc
outs
ror
sub
mov
mov
or
lock
popf
(bad)
mov
cwde
jb
into
in
mov
loope
inc
in
xor
jmp
mov
mov
xchg
sbb
into
cmps
adc
lea
push
lds
or
mov
mov
cmp
jg
mov
addr16
mov
jecxz
and
ficomp
or
call
ret
jecxz
lods
xchg
mov
int
jmp
mov
cmp
hlt
jno
hlt
(bad)
jp
cs
retf
jmp
stc
rol
mov
mov
cmp
fld
cwde
rcl
and
mov
ficom
aad
(bad)
stc
cmp
hlt
sbb
xor
push
xchg
inc
push
in
xor
xchg
imul
shr
push
or
neg
pop
dec
jnp
xor
sub
jle
sub
stc
push
pop
push
imul
in
jno
cmc
xor
ja
out
fsincos
popf
mov
mov
jmp
in
xor
push
pop
pminub
and
(bad)
(bad)
int3
aaa
shl
push
cmps
xchg
aas
inc
(bad)
ss
pop
cs
mov
fwait
int3
clc
mov
mov
adc
jg
add
ret
test
cmps
ins
into
fist
leave
fs
movs
shl
mov
push
shl
lock
push
call
jnp
cmp
pop
bound
cmc
(bad)
popa
out
call
pop
pop
pop
pop
test
pop
push
inc
dec
js
dec
mov
adc
add
add
pop
cmp
pop
sbb
sbb
pop
xor
xor
pop
das
(bad)
and
sub
cld
movs
pusha
leave
jmp
and
pop
sbb
cwde
push
sbb
inc
cli
push
and
jmp
daa
and
xchg
inc
adc
mov
les
aam
pop
cmc
xchg
mov
mov
xor
dec
iret
adc
mov
pop
cld
jnp
es
fmul
pushf
mov
out
mov
and
popf
das
mov
imul
scas
and
popa
sbb
stos
mov
cmp
and
div
test
pop
test
repnz
mov
(bad)
dec
(bad)
pop
sti
cdq
mov
push
push
pop
mov
pop
outs
div
pop
jmp
jno
or
push
jae
sahf
js
xchg
sub
and
stc
jo
pusha
xor
jg
cmps
cmp
daa
push
fs
adc
mov
outs
push
out
dec
lea
mov
inc
jb
pop
mov
pop
lods
mov
sbb
xor
xor
daa
cdq
aaa
sar
push
and
fisub
jne
xchg
std
dec
jecxz
fist
sbb
sub
dec
clc
daa
stos
xor
imul
jle
dec
int
fisttp
jl
mov
jp
inc
sub
inc
pusha
jmp
inc
popa
loope
jae
pop
mov
cmp
call
into
dec
mov
retf
(bad)
mov
adc
ret
mov
mov
and
add
xchg
push
in
sti
lods
push
cli
stos
jmp
es
mov
jge
add
jns
add
ror
xchg
jno
sbb
mov
retf
adc
aad
mov
xchg
sub
jge
cmc
or
mov
mov
call
dec
ret
mov
retf
mov
push
gs
repz
test
push
dec
test
dec
xlat
ins
les
add
movs
jnp
sub
sbb
aas
xchg
pop
cmp
cmps
data16
clc
or
outs
(bad)
test
scas
push
std
xchg
dec
sub
les
cmp
or
neg
inc
add
dec
(bad)
in
dec
xchg
adc
or
(bad)
in
jp
icebp
cmp
call
and
outs
cmc
push
and
sbb
rcr
push
call
popf
pop
ror
mov
xchg
popa
rcr
mov
repnz
ds
mov
outs
lods
xchg
out
(bad)
xlat
adc
add
sbb
cdq
enter
pushf
mov
and
jae
sbb
mov
inc
sar
ins
jbe
retf
add
and
cdq
xor
outs
cdq
push
xchg
fdiv
mov
nop
in
dec
aam
mov
or
and
or
adc
or
cmp
pop
pop
neg
pop
ss
pop
mov
jo
adc
cmps
jbe
pushf
mov
ds
dec
push
ficomp
mov
xchg
adc
sbb
ret
adc
mov
adc
push
in
clc
mov
div
in
sub
add
and
dec
push
dec
addr16
(bad)
lea
icebp
es
(bad)
call
jae
sub
dec
test
inc
aaa
sub
or
mov
loope
cmp
mov
mov
das
icebp
sub
pusha
test
sub
pop
sti
pop
(bad)
xchg
pop
sbb
jecxz
repnz
mov
add
fmul
aam
int3
mov
repz
cld
jnp
jns
inc
(bad)
ret
lea
ins
add
imul
not
lock
or
and
pop
push
pop
fcmovbe
push
js
add
pop
pop
ror
inc
jne
(bad)
and
inc
repz
xor
ss
je
xor
mov
sub
and
dec
fisub
in
int3
adc
fwait
dec
push
pop
and
sbb
add
add
jmp
jno
movs
test
out
data16
mov
bound
leave
out
test
push
loopne
sbb
call
pop
mov
lock
lahf
inc
mov
dec
aad
stos
mov
ret
int
arpl
aad
stos
mov
movs
xor
div
lods
and
sub
jmp
push
mov
mov
out
sbb
or
or
ds
repnz
neg
cld
jl
stc
and
in
lods
in
addr16
imul
jne
adc
aad
pop
pop
iret
push
push
cmc
add
dec
les
stos
and
and
jne
inc
or
inc
xor
sub
fidivr
sub
mov
sbb
jg
cmp
mov
xor
fwait
xchg
pop
cwde
adc
sub
xchg
imul
push
fimul
mov
jae
cmp
ja
sub
jo
call
cmps
test
arpl
and
add
cmps
sbb
xchg
xor
inc
mov
inc
jmp
in
jle
cli
mov
jbe
cmp
scas
arpl
icebp
daa
cdq
hlt
js
mov
in
cdq
fcom
sbb
push
sbb
fmul
cwde
push
or
idiv
jb
dec
js
es
mul
aaa
and
pop
inc
mov
jg
cmp
sar
push
pop
fidivr
dec
dec
xchg
add
retf
inc
add
mov
mov
mov
jo
adc
sub
jb
ja
scas
addr16
jo
push
sbb
or
pop
jmp
mov
sbb
sbb
add
jl
sti
shl
sar
lock
mov
mov
(bad)
in
loop
pusha
and
in
sahf
shr
lds
into
dec
or
call
ret
int3
aas
in
cmp
mov
mov
test
movs
cs
inc
mov
push
data16
cli
enter
inc
sbb
call
sar
push
push
fwait
mov
add
ret
mov
mov
mov
shl
outs
xchg
inc
aas
popf
xor
das
lea
inc
ror
adc
push
dec
xor
pop
lds
mov
ja
addr16
retf
clc
jns
les
xor
daa
outs
sub
sub
aas
add
and
icebp
lahf
jo
jb
in
jae
call
sbb
lea
jmp
mov
test
sub
(bad)
sti
rol
ret
arpl
mov
jmp
or
fmul
test
rcr
aaa
push
jno
fst
retf
ror
movs
jnp
enter
and
jecxz
pop
(bad)
jno
mov
mov
movs
sub
out
or
mov
lahf
and
rol
xor
(bad)
sub
iret
dec
lods
sub
or
and
ret
xchg
ds
mov
paddw
pop
mov
xor
out
mov
jo
in
pop
fwait
addr16
mov
dec
popa
pop
repnz
pop
stc
retf
fcmovu
inc
pop
call
and
push
or
dec
and
add
cli
jns
pop
inc
ins
jne
xchg
add
mov
hlt
out
add
and
loop
add
test
push
cmc
std
jbe
adc
xlat
jp
pop
call
add
popf
push
scas
in
and
add
cmp
jg
jo
adc
addr16
call
out
or
loope
xchg
std
fs
vpshlq
(bad)
aam
int
xlat
mov
(bad)
sub
dec
add
mov
dec
jge
std
mov
js
cmp
mov
mov
out
fwait
mov
call
mov
sub
push
xchg
cld
stos
fwait
mov
mov
mov
cmp
sahf
js
(bad)
xlat
push
mov
outs
pop
xor
repz
jae
inc
icebp
arpl
ins
dec
mov
lahf
xchg
cmps
jne
aaa
mov
jns
pop
pop
mov
pop
mov
push
jl
jl
out
mov
popf
jae
push
jg
or
and
les
push
inc
pop
scas
aas
mov
cmp
stos
sub
and
loopne
ficom
call
pop
ds
inc
sbb
xchg
sub
xchg
mov
loop
inc
dec
nop
lock
sbb
dec
repz
mov
ins
mov
sbb
(bad)
mov
dec
nop
sub
(bad)
rol
movs
add
(bad)
cmp
ficom
ds
jno
xchg
push
xchg
and
and
push
cmp
mov
nop
sbb
out
xchg
sti
xor
sahf
(bad)
fmul
test
aam
push
sub
js
mov
push
div
push
push
pushf
gs
dec
cmp
jmp
inc
mov
cs
pusha
pop
jecxz
inc
shr
pop
inc
dec
inc
inc
lds
and
mov
mov
aad
mov
xor
(bad)
sub
ret
test
mov
pop
xchg
pop
jp
push
add
xor
xor
mov
cmp
pop
mul
retf
inc
jae
jmp
mov
adc
shl
sbb
mov
mov
retf
fcmovb
ss
inc
cmc
lea
sub
shl
jge
aaa
mov
sub
push
test
into
dec
ror
out
mov
lods
mov
sar
adc
jg
jmp
add
mov
mov
adc
xchg
ret
std
pushf
jno
jge
lahf
mov
div
test
sbb
test
xchg
out
outs
loopne
add
jmp
inc
popa
inc
movs
inc
jge
pusha
ret
inc
mov
push
mov
dec
cmps
mov
scas
pop
dec
sbb
inc
out
pop
imul
jns
imul
hlt
sub
retf
jmp
stc
mov
retf
sub
jmp
pop
fsub
ror
jle
adc
dec
and
jmp
fadd
inc
rol
jne
add
nop
fcmovne
hlt
inc
jmp
sbb
mov
cmp
pop
mov
fldcw
cmp
push
mov
add
jne
in
ret
xchg
jg
mov
xchg
ins
mov
mov
mov
and
dec
adc
cwde
hlt
mov
push
cmp
mov
xchg
mov
fwait
lods
mov
shr
jge
xchg
cmp
and
lahf
icebp
popf
js
sub
imul
pusha
aaa
jmp
fs
xor
xor
pop
mov
pop
pop
in
xchg
aad
cmp
push
inc
dec
dec
pop
mov
adc
push
repnz
xor
xor
jno
jmp
mov
and
push
sbb
or
push
add
repnz
cdq
dec
repnz
dec
cli
add
add
lods
jo
imul
mov
jo
xchg
sbb
call
lss
sub
push
(bad)
pushf
leave
sub
iret
in
cdq
and
inc
and
dec
int
xchg
cs
dec
(bad)
not
inc
imul
pop
mov
(bad)
stos
test
test
das
loopne
and
inc
mov
into
jle
pop
mov
(bad)
imul
vpackssdw
mov
imul
clc
(bad)
(bad)
mov
xor
jge
ins
bound
adc
and
xor
pop
inc
cmps
inc
pop
pop
aam
push
adc
(bad)
sbb
inc
mov
(bad)
pop
lds
mov
or
cmp
sub
xor
xor
sub
out
bound
movs
and
mov
inc
cwde
call
adc
adc
mov
lea
jns
test
jns
icebp
cld
sti
fwait
jns
jp
out
jae
neg
push
data16
out
out
and
rcr
rcr
push
adc
pop
cmp
add
inc
mov
ret
test
mov
mov
inc
xor
and
mov
(bad)
leave
fs
dec
and
mov
xchg
pop
sbb
pop
lock
adc
ret
mov
xchg
leave
cwde
call
pop
mov
or
aad
ins
add
mov
mov
push
mov
sbb
fld
xchg
iret
inc
or
(bad)
int
sar
cmp
sub
mov
cmp
repnz
inc
adc
sub
and
and
loopne
pop
fwait
sbb
sbb
xchg
xor
or
adc
lea
sub
push
cdq
or
add
xor
add
cld
inc
cli
rcl
div
xor
loop
repz
out
push
out
sub
pop
loop
lods
adc
mov
movs
mov
shr
lods
lods
mov
(bad)
movs
mov
loopne
mov
jmp
pushf
mov
sub
pop
stos
hlt
push
jecxz
mov
arpl
gs
xchg
add
imul
or
aad
out
and
jl
ss
push
jbe
jno
es
(bad)
outs
ins
outs
push
push
hlt
bound
bound
inc
pop
push
and
pop
gs
push
push
mov
dec
push
dec
lods
dec
enter
inc
add
inc
inc
(bad)
cmp
cmp
xor
mov
adc
das
sub
pop
pop
xchg
adc
bound
adc
jge
xchg
jns
mov
or
or
ins
popa
add
xchg
loopne
xchg
jp
js
in
jb
jae
mov
inc
(bad)
shr
shr
aad
xlat
out
in
jecxz
loope
xchg
cli
mov
fadd
mov
jne
shr
add
sub
aam
mov
gs
mov
aam
mov
rcl
scas
into
lods
int
stos
(bad)
fadd
retf
(bad)
ret
popf
shr
int
call
cld
loopne
std
out
cli
in
in
sti
test
in
div
loop
fimul
jle
sbb
push
das
adc
push
cmp
add
pop
outs
adc
imul
mov
cmp
mov
adc
xor
dec
adc
cmp
and
out
movs
dec
aaa
ss
sub
imul
pop
cmp
cmp
pop
pop
inc
inc
push
das
dec
push
dec
sub
push
push
ss
jbe
push
icebp
adc
div
inc
jae
in
and
push
sbb
stos
or
mov
push
push
mov
(bad)
xchg
in
leave
push
retf
aaa
neg
xchg
mov
fmul
das
in
and
jmp
sbb
mov
test
push
fcmovne
lods
add
or
or
inc
pop
leave
mov
pop
dec
xchg
ror
shl
push
xor
mov
mov
scas
sahf
ja
dec
and
push
movs
arpl
(bad)
pop
pop
pusha
fprem
cld
out
retf
div
cdq
push
or
lods
(bad)
out
out
sti
in
xchg
loopne
add
ret
or
jns
adc
(bad)
xor
cli
je
ins
lods
loope
imul
jmp
sbb
push
lods
ficom
xchg
and
lds
mov
dec
jb
cmp
sbb
cmp
je
inc
xlat
or
cmp
push
and
sub
das
sub
dec
push
cmc
aaa
fst
adc
or
pop
retf
dec
sub
mov
and
outs
mov
jg
fdiv
xchg
mov
xchg
pushf
ss
das
inc
jp
(bad)
xor
imul
dec
mov
sub
pushf
mov
(bad)
pop
test
xchg
int
cld
adc
out
jns
out
ja
pop
jno
mov
jmp
(bad)
in
add
push
loopne
pusha
dec
adc
pop
push
aad
(bad)
push
shl
add
or
sbb
add
int
sub
mov
(bad)
jae
cmp
test
xchg
push
cmps
jne
fwait
out
and
divps
fwait
push
mov
push
xchg
(bad)
adc
lds
mov
bound
mov
inc
mov
stc
pop
ss
mov
xchg
jae
sub
xor
dec
inc
dec
push
test
pop
mov
mov
xchg
lock
dec
pusha
out
mov
add
add
cmps
movs
xor
push
movs
out
push
test
xchg
aam
out
jmp
movs
cmc
rcl
pop
popf
sbb
push
popf
loopne
push
jecxz
repz
in
fsub
leave
leave
inc
xor
aam
mov
rol
mov
mov
jnp
and
in
test
pop
and
mov
lock
retf
inc
dec
sbb
imul
mov
jno
dec
dec
mov
shl
and
or
and
inc
pop
jns
jp
repz
jb
popf
jnp
jno
out
test
mov
adc
das
sub
pop
pop
lods
pop
pop
cmp
dec
and
pop
in
fiadd
mov
dec
dec
dec
inc
or
ret
add
jne
inc
out
jae
or
aaa
pop
xchg
cmps
lods
stos
sub
daa
cmp
cmp
test
pop
sub
pop
adc
pop
loope
xor
std
jns
cmc
jl
pop
cmps
sbb
add
add
cli
ret
int3
cmc
jge
push
je
xchg
jmp
xchg
add
ins
test
outs
push
call
and
test
xchg
fld
int
dec
(bad)
cmp
(bad)
dec
push
ret
cmp
pop
mov
mov
test
xchg
jecxz
call
sub
test
cdq
fwait
pop
push
shl
jecxz
in
shr
mov
add
jg
inc
imul
outs
dec
pop
cld
pop
jno
cmp
push
ss
sbb
addr16
sub
sub
sar
pop
shl
xlat
push
fist
jns
dec
dec
cmp
mov
pop
sbb
idiv
dec
jnp
aad
mov
gs
xor
inc
outs
jbe
sub
stos
dec
(bad)
sub
cmp
repnz
push
adc
and
push
mov
cmp
jl
rol
inc
add
mov
sbb
stc
jns
lods
adc
adc
icebp
int3
jp
jmp
jecxz
or
movs
adc
in
repnz
fdiv
jle
les
sbb
not
aam
rol
xor
push
aaa
pop
leave
lds
cmp
and
push
popf
hlt
bound
mov
or
fldcw
mov
shl
mov
cwde
ret
push
(bad)
xchg
dec
xor
mov
cwde
xor
hlt
xchg
pop
repz
jns
in
xchg
js
jmp
dec
fwait
rep
cmps
gs
xlat
les
popf
fcmovne
mov
scas
shr
adc
mov
dec
jne
dec
ret
jbe
inc
inc
sahf
out
push
ja
cmp
xchg
xor
push
inc
mov
sub
out
and
aas
xor
jp
sub
mov
sbb
and
shl
sub
mov
adc
add
nop
push
add
in
loop
pop
loopne
jmp
jecxz
loope
fbld
rcr
aam
(bad)
fcomp
(bad)
fcmovbe
(bad)
(bad)
ror
ret
retf
(bad)
(bad)
leave
(bad)
int
iret
mov
mov
lods
inc
cmp
clc
pop
mov
xchg
outs
test
data16
clc
adc
jge
mov
fcmovnb
jae
jno
mov
fsubr
sbb
mov
mov
adc
xor
xor
xor
inc
les
cli
in
outs
jmp
imul
jmp
js
push
push
xor
or
(bad)
jmp
sub
inc
leave
loope
int3
shr
js
std
xor
adc
ret
mov
cld
add
cmps
hlt
inc
pop
jnp
cwde
sahf
int3
jns
arpl
nop
ret
jae
add
mov
ins
or
lea
gs
les
cmp
mov
jno
push
xchg
lock
push
jnp
in
cmp
lods
sbb
pop
mov
aad
xchg
ss
lds
les
cs
or
push
test
dec
(bad)
and
mov
xor
mov
aaa
scas
rcr
scas
lods
imul
fsubr
sub
adc
sbb
fwait
out
sbb
mov
xchg
test
inc
mov
mov
movd
imul
(bad)
je
popa
jle
mov
addr16
into
ins
ins
aam
icebp
pop
fisttp
push
(bad)
mov
xor
sub
fnstenv
dec
inc
lock
pusha
daa
inc
iret
loopne
adc
jg
xor
and
mov
cmps
jns
mov
and
add
cmp
xchg
cwde
and
pop
mov
xor
retf
dec
imul
pushf
ins
les
call
imul
xor
out
jo
sub
mov
movs
inc
fbstp
jnp
mov
adc
sbb
pop
std
aaa
xchg
cmp
mov
stc
cmp
repnz
(bad)
mov
mov
mov
in
lods
sti
pop
mov
rcr
cld
push
push
rcr
nop
sub
or
mov
enter
xor
jp
add
xor
outs
push
cmp
jmp
and
pop
pop
lahf
sbb
xchg
push
cmp
push
or
add
aas
jmp
cmp
inc
cmc
ja
xor
sub
jp
mov
bound
(bad)
cwde
js
push
dec
ficom
je
push
push
mov
xchg
push
mov
cmp
xchg
je
cdq
mov
in
sub
test
jmp
mov
dec
cmp
and
dec
not
mov
int3
std
out
dec
pop
jmp
(bad)
loope
ret
jns
fwait
aas
mov
mov
mov
xor
xor
and
fsub
mov
loopne
cwde
call
jmp
xchg
xchg
adc
push
or
or
or
jb
pop
js
push
cld
daa
sbb
imul
cmp
sbb
mov
sbb
fwait
cmp
push
push
nop
xor
jns
pop
jecxz
push
in
test
out
and
xchg
(bad)
xor
cmp
icebp
ins
out
and
jno
ret
lods
add
int3
fistp
pop
sbb
or
push
jge
adc
adc
repnz
dec
inc
add
test
push
mov
mov
cli
jle
jb
jp
in
loope
movs
xlat
arpl
jecxz
outs
jbe
loopne
push
sbb
push
adc
pop
xchg
rcl
sub
int3
retf
and
inc
mov
ds
mov
push
mov
test
call
mov
out
jle
sub
mov
pop
jno
dec
push
xchg
test
call
mov
fstp
(bad)
ret
and
cli
pop
xchg
jnp
(bad)
and
jmp
sub
out
sub
out
ss
in
xor
push
fnstenv
or
push
aad
aad
adc
scas
sbb
xchg
retf
xchg
or
paddd
js
mov
mov
mul
jno
xor
mov
mov
and
cdq
mov
adc
adc
clc
sbb
in
cwde
les
pop
mov
mov
add
mov
cmp
jno
adc
cmps
push
retf
popf
mov
loop
push
mul
sub
fcmovnu
pop
mov
jo
inc
iret
lds
and
retf
arpl
(bad)
mov
test
mov
(bad)
shl
lods
cwde
and
stos
add
adc
mov
bswap
sbb
icebp
inc
mov
sub
in
mov
aaa
je
aad
adc
jb
sub
call
imul
test
xor
sar
pop
xchg
inc
hlt
popw
mov
cmps
leave
jae
dec
out
inc
add
leave
leave
dec
mov
dec
or
xor
mov
pusha
movs
arpl
cmc
out
ja
shl
ret
loopne
mov
xchg
icebp
push
cmp
jb
popf
pop
lahf
add
leave
or
push
mov
hlt
cmp
cld
jle
call
(bad)
sbb
push
das
jmp
outs
sub
pusha
mov
out
imul
xchg
xor
pop
cmp
mov
cwde
call
(bad)
push
mov
aaa
repz
fwait
mov
arpl
mov
lods
jmp
and
mov
das
mov
and
cwde
cmp
push
push
mov
push
or
dec
add
or
test
adc
scas
sbb
dec
ja
add
out
pusha
sub
in
pop
das
push
(bad)
cdq
pop
int
inc
jle
rcr
inc
les
cmc
(bad)
imul
into
data16
jnp
or
aas
rol
sub
mov
inc
sub
test
stos
fcomp
xchg
lea
cmp
push
pop
test
add
push
(bad)
movs
add
pop
pop
pop
push
mov
mov
repnz
lock
stc
das
jmp
loop
cmc
mov
cli
(bad)
xlat
rcl
adc
into
into
out
enter
das
(bad)
loopne
mov
mov
mov
mov
cmp
cmp
movs
mov
addr16
jbe
mov
ins
pop
pop
sti
adc
outs
sbb
rol
add
outs
push
ja
ss
inc
cmp
or
daa
jno
ins
cmp
push
ins
jmp
mov
push
pop
pop
in
stos
ror
mov
add
xor
cmp
jae
mov
sub
stos
retf
lods
jno
and
out
push
cmp
fld
test
inc
adc
pop
or
sbb
push
inc
sbb
call
mov
cmp
(bad)
mov
inc
stc
cli
aaa
mov
out
in
sub
mov
in
jecxz
and
or
aad
shl
cmc
xor
leave
aad
ror
add
adc
stc
cli
inc
mov
repnz
ds
cmp
push
mov
sub
fimul
pop
sbb
movs
loop
xchg
xchg
es
outs
shl
retf
popf
mov
mov
sti
pop
and
js
sbb
fs
jno
inc
sti
jmp
popa
int3
js
arpl
and
pusha
push
leave
pop
push
into
pop
mov
push
fcomp
pop
aam
ficom
sbb
mov
inc
rol
or
xchg
aaa
out
ds
xor
xor
cmp
xor
mov
das
int
push
and
sbb
in
sbb
(bad)
stc
sbb
adc
add
push
push
push
out
xor
add
repz
repnz
(bad)
jmp
mov
add
mov
jno
mov
retf
in
pop
cmc
test
ret
xlat
js
xlat
div
ja
rcl
repnz
int3
mov
retf
or
shl
or
imul
xor
lods
adc
cmp
in
cmps
shl
mov
xchg
stc
mov
xchg
adc
test
xor
jge
jge
cli
mov
std
xor
ins
sub
cmp
imul
mov
pop
jb
push
cmps
daa
push
outs
popa
mov
dec
outs
dec
sbb
dec
mov
or
shl
test
sub
lods
adc
xchg
xor
aas
or
or
pusha
sub
dec
fs
adc
in
adc
pop
(bad)
jbe
inc
push
stc
pop
int3
pop
cli
ds
test
sub
cmp
(bad)
out
loope
(bad)
loopne
push
cli
inc
and
ret
icebp
cmc
pop
cmp
cmps
push
mov
xor
ins
xchg
xor
loopne
mov
fcomp
icebp
in
leave
and
or
mov
mov
repz
mov
xchg
clc
cmp
lods
pop
scas
mov
mov
fidiv
pushf
arpl
cdq
lock
(bad)
je
sub
dec
fnstenv
mov
icebp
pop
xchg
xchg
xor
jge
jne
sahf
sbb
jle
cmp
mov
out
and
hlt
mov
dec
popf
pop
shr
gs
sub
sub
rcl
cmp
push
jle
imul
xor
dec
cmp
mov
dec
adc
(bad)
movs
iret
mov
sub
fcomp
retf
stos
lds
push
inc
or
adc
xor
jle
push
mov
lds
lods
jnp
call
cmc
pop
loope
push
mov
sahf
lock
out
mov
call
push
xchg
fist
js
or
aas
shl
cmp
into
pop
call
cmp
into
mov
ins
inc
inc
xchg
inc
xchg
mov
lods
pop
pop
ret
push
mov
stc
jecxz
into
mov
jg
neg
iret
xchg
in
cmp
sahf
pushf
ja
test
call
mov
push
ins
sbb
or
call
imul
sahf
mov
or
pop
push
stos
add
inc
mov
adc
jb
nop
dec
les
icebp
cmp
idiv
and
pusha
mov
shl
dec
fst
add
pushf
jb
stc
jg
loop
clc
mov
pop
loopne
pop
in
push
(bad)
and
sti
or
sbb
or
inc
or
not
lods
stc
xor
stc
mov
pop
ficom
inc
sub
add
xchg
sahf
push
jnp
out
imul
cmp
and
fstp
mov
sub
xchg
repnz
frstor
shl
mov
inc
mov
mov
mov
mov
push
cmps
lock
dec
enter
jl
pushf
mov
mov
mov
jae
sbb
cwde
nop
mov
inc
test
ins
test
mov
cmp
mov
jne
sbb
cmp
xchg
xchg
jb
ja
bound
movs
push
aad
mov
or
fst
push
lods
shl
mov
cmp
ror
mov
inc
add
xor
mov
mov
mov
test
adc
imul
sub
mov
cmp
pop
rcr
xchg
pop
iret
inc
sahf
pop
pop
add
and
or
dec
icebp
test
enter
add
cmc
cld
je
stc
call
(bad)
jmp
lock
out
fistp
jmp
cmc
mul
neg
test
retf
(bad)
jbe
rcl
rol
sub
cdq
in
dec
daa
ret
inc
xchg
dec
mov
dec
lea
call
hlt
mov
jg
loope
adc
mov
in
xchg
adc
pop
cli
sahf
xchg
popf
pop
fimul
push
movs
into
jp
add
ds
or
jge
sub
jp
lock
jno
jno
jo
jmp
imul
pusha
popa
arpl
pop
pop
aad
mov
jns
int
movs
iret
mov
and
mov
inc
inc
loop
imul
jmp
aaa
jmp
jmp
push
je
scas
mov
and
push
lds
aas
nop
aas
clc
pop
rcr
repz
in
jmp
in
push
xor
cmc
cli
sub
or
movs
lds
jecxz
loopne
mov
pop
jb
(bad)
push
sub
shl
fcom
mov
mov
xchg
and
xor
cli
mov
xor
daa
out
xor
call
mov
in
jo
dec
loope
adc
pop
je
xchg
xchg
and
les
mov
(bad)
xchg
jnp
rol
cmps
cmp
push
mov
(bad)
es
push
sbb
dec
cmps
jne
outs
arpl
and
std
popf
push
pop
inc
mov
scas
adc
fist
add
unpckhps
test
das
leave
cmp
cmp
popf
dec
and
mov
mov
addr16
loope
sub
add
mov
das
xchg
sbb
repnz
fwait
adc
adc
dec
sub
cmps
or
ret
cmp
out
in
iret
sub
sbb
add
sti
mov
push
scas
std
mov
loop
jmp
and
or
mov
ss
xchg
xor
aad
mov
cmp
es
adc
leave
mov
dec
dec
pop
push
push
nop
lds
lods
test
sub
mov
call
and
jns
lock
xchg
nop
cmp
mov
xchg
xchg
xor
mov
cwde
popf
xor
pop
mov
xor
mov
gs
popa
bound
pop
mov
pop
adc
test
dec
cmp
add
or
mov
mov
jae
adc
pop
fs
fsub
and
dec
jbe
ret
pop
dec
sbb
inc
push
jnp
sbb
nop
adc
outs
ror
sub
mov
mov
or
lock
popf
(bad)
mov
cwde
jb
into
in
mov
loope
inc
in
xor
jmp
mov
mov
xchg
sbb
into
cmps
adc
lea
push
lds
or
mov
mov
cmp
jg
mov
addr16
mov
jecxz
and
ficomp
or
call
ret
jecxz
lods
xchg
mov
int
jmp
mov
cmp
hlt
jno
hlt
(bad)
jp
cs
retf
jmp
stc
rol
mov
mov
cmp
fld
cwde
rcl
and
mov
ficom
aad
(bad)
stc
cmp
hlt
sbb
xor
push
xchg
inc
push
in
xor
xchg
imul
shr
push
or
neg
pop
dec
jnp
xor
sub
jle
sub
stc
push
pop
push
imul
in
jno
cmc
xor
ja
out
fsincos
popf
mov
mov
jmp
in
xor
push
pop
pminub
and
(bad)
(bad)
int3
aaa
shl
push
cmps
xchg
aas
inc
(bad)
ss
pop
cs
mov
fwait
int3
clc
mov
mov
adc
jg
add
ret
test
cmps
ins
into
fist
leave
fs
movs
shl
mov
push
shl
lock
push
call
jnp
cmp
pop
bound
cmc
(bad)
popa
out
call
pop
pop
pop
pop
test
pop
push
inc
dec
js
dec
mov
adc
add
add
pop
cmp
pop
sbb
sbb
pop
xor
xor
pop
das
(bad)
and
sub
cld
movs
pusha
leave
jmp
and
pop
sbb
cwde
push
sbb
inc
cli
push
and
jmp
daa
and
xchg
inc
adc
mov
les
aam
pop
cmc
xchg
mov
mov
xor
dec
iret
adc
mov
pop
cld
jnp
es
fmul
pushf
mov
out
mov
and
popf
das
mov
imul
scas
and
popa
sbb
stos
mov
cmp
and
div
test
pop
test
repnz
mov
(bad)
dec
(bad)
pop
sti
cdq
mov
push
push
pop
mov
pop
outs
div
pop
jmp
jno
or
push
jae
sahf
js
xchg
sub
and
stc
jo
pusha
xor
jg
cmps
cmp
daa
push
fs
adc
mov
outs
push
out
dec
lea
mov
inc
jb
pop
mov
pop
lods
mov
sbb
xor
xor
daa
cdq
aaa
sar
push
and
fisub
jne
xchg
std
dec
jecxz
fist
sbb
sub
dec
clc
daa
stos
xor
imul
jle
dec
int
fisttp
jl
mov
jp
inc
sub
inc
pusha
jmp
inc
popa
loope
jae
pop
mov
cmp
call
into
dec
mov
retf
(bad)
mov
adc
ret
mov
mov
and
add
xchg
push
in
sti
lods
push
cli
stos
jmp
es
mov
jge
add
jns
add
ror
xchg
jno
sbb
mov
retf
adc
aad
mov
xchg
sub
jge
cmc
or
mov
mov
call
dec
ret
mov
retf
mov
push
gs
repz
test
push
dec
test
dec
xlat
ins
les
add
movs
jnp
sub
sbb
aas
xchg
pop
cmp
cmps
data16
clc
or
outs
(bad)
test
scas
push
std
xchg
dec
sub
les
cmp
or
neg
inc
add
dec
(bad)
in
dec
xchg
adc
or
(bad)
in
jp
icebp
cmp
call
and
outs
cmc
push
and
sbb
rcr
push
call
popf
pop
ror
mov
xchg
popa
rcr
mov
repnz
ds
mov
outs
lods
xchg
out
(bad)
xlat
adc
add
sbb
cdq
enter
pushf
mov
and
jae
sbb
mov
inc
sar
ins
jbe
retf
add
and
cdq
xor
outs
cdq
push
xchg
fdiv
mov
nop
in
dec
aam
mov
or
and
or
adc
or
cmp
pop
pop
neg
pop
ss
pop
mov
jo
adc
cmps
jbe
pushf
mov
ds
dec
push
ficomp
mov
xchg
adc
sbb
ret
adc
mov
adc
push
in
clc
mov
div
in
sub
add
and
dec
push
dec
addr16
(bad)
lea
icebp
es
(bad)
call
jae
sub
dec
test
inc
aaa
sub
or
mov
loope
cmp
mov
mov
das
icebp
sub
pusha
test
sub
pop
sti
pop
(bad)
xchg
pop
sbb
jecxz
repnz
mov
add
fmul
aam
int3
mov
repz
cld
jnp
jns
inc
(bad)
ret
lea
ins
add
imul
not
lock
or
and
pop
push
pop
fcmovbe
push
js
add
pop
pop
ror
inc
jne
(bad)
and
inc
repz
xor
ss
je
xor
mov
sub
and
dec
fisub
in
int3
adc
fwait
dec
push
pop
and
sbb
add
add
jmp
jno
movs
test
out
data16
mov
bound
leave
out
test
push
loopne
sbb
call
pop
mov
lock
lahf
inc
mov
dec
aad
stos
mov
ret
int
arpl
aad
stos
mov
movs
xor
div
lods
and
sub
jmp
push
mov
mov
out
sbb
or
or
ds
repnz
neg
cld
jl
stc
and
in
lods
in
addr16
imul
jne
adc
aad
pop
pop
iret
push
push
cmc
add
dec
les
stos
and
and
jne
inc
or
inc
xor
sub
fidivr
sub
mov
sbb
jg
cmp
mov
xor
fwait
xchg
pop
cwde
adc
sub
xchg
imul
push
fimul
mov
jae
cmp
ja
sub
jo
call
cmps
test
arpl
and
add
cmps
sbb
xchg
xor
inc
mov
inc
jmp
in
jle
cli
mov
jbe
cmp
scas
arpl
icebp
daa
cdq
hlt
js
mov
in
cdq
fcom
sbb
push
sbb
fmul
cwde
push
or
idiv
jb
dec
js
es
mul
aaa
and
pop
inc
mov
jg
cmp
sar
push
pop
fidivr
dec
dec
xchg
add
retf
inc
add
mov
mov
mov
jo
adc
sub
jb
ja
scas
addr16
jo
push
sbb
or
pop
jmp
mov
sbb
sbb
add
jl
sti
shl
sar
lock
mov
mov
(bad)
in
loop
pusha
and
in
sahf
shr
lds
into
dec
or
call
ret
int3
aas
in
cmp
mov
mov
test
movs
cs
inc
mov
push
data16
cli
enter
inc
sbb
call
sar
push
push
fwait
mov
add
ret
mov
mov
mov
shl
outs
xchg
inc
aas
popf
xor
das
lea
inc
ror
adc
push
dec
xor
pop
lds
mov
ja
addr16
retf
clc
jns
les
xor
daa
outs
sub
sub
aas
add
and
icebp
lahf
jo
jb
in
jae
call
sbb
lea
jmp
mov
test
sub
(bad)
sti
rol
ret
arpl
mov
jmp
or
fmul
test
rcr
aaa
push
jno
fst
retf
ror
movs
jnp
enter
and
jecxz
pop
(bad)
jno
mov
mov
movs
sub
out
or
mov
lahf
and
rol
xor
(bad)
sub
iret
dec
lods
sub
or
and
ret
xchg
ds
mov
paddw
pop
mov
xor
out
mov
jo
in
pop
fwait
addr16
mov
dec
popa
pop
repnz
pop
stc
retf
fcmovu
inc
pop
call
and
push
or
dec
and
add
cli
jns
pop
inc
ins
jne
xchg
add
mov
hlt
out
add
and
loop
add
test
push
cmc
std
jbe
adc
xlat
jp
pop
call
add
popf
push
scas
in
and
add
cmp
jg
jo
adc
addr16
call
out
or
loope
xchg
std
fs
vpshlq
(bad)
aam
int
xlat
mov
(bad)
sub
dec
add
mov
dec
jge
std
mov
js
cmp
mov
mov
out
fwait
mov
call
mov
sub
push
xchg
cld
stos
fwait
mov
mov
mov
cmp
sahf
js
(bad)
xlat
push
mov
outs
pop
xor
repz
jae
inc
icebp
arpl
ins
dec
mov
lahf
xchg
cmps
jne
aaa
mov
jns
pop
pop
mov
pop
mov
push
jl
jl
out
mov
popf
jae
push
jg
or
and
les
push
inc
pop
scas
aas
mov
cmp
stos
sub
and
loopne
ficom
call
pop
ds
inc
sbb
xchg
sub
xchg
mov
loop
inc
dec
nop
lock
sbb
dec
repz
mov
ins
mov
sbb
(bad)
mov
dec
nop
sub
(bad)
rol
movs
add
(bad)
cmp
ficom
ds
jno
xchg
push
xchg
and
and
push
cmp
mov
nop
sbb
out
xchg
sti
xor
sahf
(bad)
fmul
test
aam
push
sub
js
mov
push
div
push
push
pushf
gs
dec
cmp
jmp
inc
mov
cs
pusha
pop
jecxz
inc
shr
pop
inc
dec
inc
inc
lds
and
mov
mov
aad
mov
xor
(bad)
sub
ret
test
mov
pop
xchg
pop
jp
push
add
xor
xor
mov
cmp
pop
mul
retf
inc
jae
jmp
mov
adc
shl
sbb
mov
mov
retf
fcmovb
ss
inc
cmc
lea
sub
shl
jge
aaa
mov
sub
push
test
into
dec
ror
out
mov
lods
mov
sar
adc
jg
jmp
add
mov
mov
adc
xchg
ret
std
pushf
jno
jge
lahf
mov
div
test
sbb
test
xchg
out
outs
loopne
add
jmp
inc
popa
inc
movs
inc
jge
pusha
ret
inc
mov
push
mov
dec
cmps
mov
scas
pop
dec
sbb
inc
out
pop
imul
jns
imul
hlt
sub
retf
jmp
stc
mov
retf
sub
jmp
pop
fsub
ror
jle
adc
dec
and
jmp
fadd
inc
rol
jne
add
nop
fcmovne
hlt
inc
jmp
sbb
mov
cmp
pop
mov
fldcw
cmp
push
mov
add
jne
in
ret
xchg
jg
mov
xchg
ins
mov
mov
mov
and
dec
adc
cwde
hlt
mov
push
cmp
mov
xchg
mov
fwait
lods
mov
shr
jge
xchg
cmp
and
lahf
icebp
popf
js
sub
imul
pusha
aaa
jmp
fs
xor
xor
pop
mov
pop
pop
in
xchg
aad
cmp
push
inc
dec
dec
pop
mov
adc
push
repnz
xor
xor
jno
jmp
mov
and
push
sbb
or
push
add
repnz
cdq
dec
repnz
dec
cli
add
add
lods
jo
imul
mov
jo
xchg
sbb
call
lss
sub
push
(bad)
pushf
leave
sub
iret
in
cdq
and
inc
and
dec
int
xchg
cs
dec
(bad)
not
inc
imul
pop
mov
(bad)
stos
test
test
das
loopne
and
inc
mov
into
jle
pop
mov
(bad)
imul
vpackssdw
mov
imul
clc
(bad)
(bad)
mov
xor
jge
ins
bound
adc
and
xor
pop
inc
cmps
inc
pop
pop
aam
push
adc
(bad)
sbb
inc
mov
(bad)
pop
lds
mov
or
cmp
sub
xor
xor
sub
out
bound
movs
and
mov
inc
cwde
call
adc
adc
mov
lea
jns
test
jns
icebp
cld
sti
fwait
jns
jp
out
jae
neg
push
data16
out
out
and
rcr
rcr
push
adc
pop
cmp
add
inc
mov
ret
test
mov
mov
inc
xor
and
mov
(bad)
leave
fs
dec
and
mov
xchg
pop
sbb
pop
lock
adc
ret
mov
xchg
leave
cwde
call
pop
mov
or
aad
ins
add
mov
mov
push
mov
sbb
fld
xchg
iret
inc
or
(bad)
int
sar
cmp
sub
mov
cmp
repnz
inc
adc
sub
and
and
loopne
pop
fwait
sbb
sbb
xchg
xor
or
adc
lea
sub
not
xor
scas
ss
shr
mov
stos
repnz
or
push
iret
xchg
(bad)
push
mov
push
test
ret
dec
inc
in
inc
xchg
inc
pop
(bad)
cmp
mov
aam
jg
xor
jns
jle
cmps
in
jae
jbe
scas
xchg
(bad)
imul
popa
nop
cmps
imul
(bad)
icebp
fwait
mov
fwait
or
xchg
xor
pushf
movs
lods
in
jle
ins
add
jno
fnsave
dec
mov
and
shl
dec
jle
push
bound
jecxz
in
cmps
and
pop
ins
loopne
ror
in
or
cmp
mov
push
push
adc
ja
xchg
(bad)
leave
pop
std
call
sti
push
loope
push
xchg
ja
sti
cmp
mov
int3
xchg
fwait
cmps
test
pop
stos
sub
test
adc
mov
sbb
jle
push
add
lods
cs
test
aas
mov
add
add
add
fdivr
icebp
cld
je
mov
div
icebp
jmp
cwde
dec
sub
ins
and
in
or
cli
sub
pop
add
push
push
fcomp
pop
inc
inc
jne
pop
inc
mov
into
dec
jno
retf
mov
and
cmp
rcr
push
aas
xor
scas
aaa
ds
xor
outs
wbinvd
test
rol
adc
in
(bad)
loopne
add
pop
pop
push
pop
aad
lods
adc
xchg
sbb
mov
adc
mov
xchg
into
dec
xor
test
gs
mov
or
adc
arpl
retf
loope
push
push
fbld
sub
outs
push
es
mov
jbe
cmp
inc
dec
ror
cmovno
cmp
mov
and
ja
add
jge
push
cmp
add
or
add
and
jmp
jp
push
jns
xchg
inc
das
push
push
sub
mov
add
push
push
or
or
jne
ja
mov
jno
lods
xchg
(bad)
ror
outs
mov
mov
repz
mov
pop
inc
mov
rcr
dec
leave
dec
add
(bad)
les
(bad)
retf
add
mov
cdq
jae
into
lahf
out
mov
mov
jecxz
mov
lahf
call
sar
inc
sete
or
cdq
fldenv
mov
inc
cmps
cmps
adc
popa
inc
jp
js
pusha
(bad)
xor
icebp
jno
outs
out
fadd
stos
mov
call
ds
sub
lods
movs
pop
mov
push
out
mov
test
pop
dec
jns
lock
jnp
ds
cmp
mov
adc
aam
or
mov
in
lea
sub
sub
retf
or
pusha
test
xor
ret
fisubr
cli
jb
rcr
repnz
jmp
std
and
in
in
clc
(bad)
fisubr
outs
dec
aam
fadd
xchg
fisttp
jmp
pop
int3
inc
(bad)
aad
rol
cmp
lock
xor
mov
cs
mov
adc
cwde
or
imul
and
sbb
mov
(bad)
repnz
outs
ins
jnp
dec
arpl
add
inc
sbb
sub
imul
xor
jecxz
pop
in
ficom
imul
(bad)
sbb
rcl
lods
dec
dec
dec
add
mov
shr
out
(bad)
mov
jg
cmp
lds
mov
xor
adc
inc
test
rol
xchg
daa
out
pop
jmp
jmp
loop
jecxz
and
paddusw
sbb
and
call
fidiv
cmc
arpl
fisub
jne
push
pushf
into
loop
retf
in
jmp
xor
and
(bad)
shl
sti
shl
(bad)
hlt
fadd
shl
fsub
iret
int3
out
enter
xchg
adc
mov
sub
mov
pushf
mov
lea
xchg
mov
mov
std
push
mov
add
push
sbb
repz
mov
movs
or
jl
cmp
sbb
psrad
loopne
clc
dec
enter
adc
aas
or
push
mov
fwait
dec
push
adc
jb
inc
push
dec
lahf
pop
push
cwde
pop
test
pop
nop
push
mov
out
sub
cmp
sub
div
jecxz
and
cmp
and
aaa
aam
jne
mov
sub
sbb
sbb
sub
nop
call
nop
lods
mov
or
jg
retf
add
mov
js
jnp
out
icebp
fbstp
and
push
call
jecxz
jecxz
iret
sbb
inc
xor
cmp
retf
stc
sub
dec
xor
rcr
js
int
in
enter
aam
aaa
add
repnz
cmp
stos
fidivr
mov
js
mov
mov
xor
movs
add
jl
cmp
fs
add
lea
xchg
popa
mov
in
sbb
sub
push
mov
in
cmp
das
retf
push
ja
dec
out
add
xchg
test
fwait
sub
push
jmp
cdq
fmul
mov
cmps
inc
mov
xor
or
mov
pop
or
xor
mov
ins
daa
daa
scas
xchg
inc
daa
lock
outs
sbb
fisttp
sbb
jg
dec
jne
lahf
jo
dec
or
jmp
or
addr16
bound
loope
popf
inc
cli
call
fwait
mov
popf
mov
out
stos
loopne
and
mov
push
xchg
rcr
mov
ja
lahf
aam
scas
int3
je
into
sbb
mov
jb
shl
jl
mov
pop
aam
fdiv
es
stos
test
cmps
cmps
bound
outs
ret
sub
imul
ins
push
adc
fbstp
movs
loope
mov
xchg
add
push
add
mov
sti
lock
jae
clc
xchg
in
push
push
inc
xor
cs
lfs
jae
sar
and
dec
cmp
mov
inc
(bad)
movs
clc
aas
mov
ret
les
push
cmp
mov
xor
xor
jns
movs
or
cmps
loopne
cs
jecxz
loop
pop
fwait
sbb
adc
adc
lahf
adc
pop
add
daa
adc
fwait
push
jmp
jns
cli
(bad)
neg
adc
stc
fwait
jmp
sti
outs
je
(bad)
add
and
gs
cmp
rcr
leave
shl
ret
test
xor
cmc
div
mov
clc
dec
sub
mov
mov
pushf
ficomp
sbb
xchg
sahf
ret
sbb
call
stc
rcl
and
mov
outs
clc
div
in
loop
cmp
loop
inc
popa
ss
push
aaa
pop
xchg
movs
dec
or
dec
fcomp
rol
push
(bad)
out
iret
pop
push
and
int
or
(bad)
leave
int3
shr
ret
cmp
lahf
mov
mov
mov
imul
xor
rcr
daa
mov
or
sahf
push
sbb
sbb
jmp
add
mov
js
stos
pcmpgtd
jp
jne
lock
mov
loopne
lock
loope
jle
out
mov
loope
arpl
pop
push
and
mov
pop
push
rcr
rol
pop
scas
retf
enter
mov
retf
add
(bad)
push
xor
mov
jmp
cmp
mov
pop
sahf
sbb
cdq
adc
push
adc
dec
lahf
mov
test
adc
ins
mov
cld
mov
mov
in
lods
in
jae
jmp
movs
out
and
in
pop
dec
fstp
pop
dec
push
push
push
jae
push
aaa
fild
mov
ins
inc
or
rol
(bad)
push
add
mov
jp
add
mov
ins
das
sub
sub
add
and
arpl
xchg
fwait
and
aas
call
jne
sub
mov
jo
repnz
push
cmp
sti
aaa
sahf
jo
lods
jg
repz
push
xchg
in
xor
inc
sub
loopne
daa
rcr
push
sbb
(bad)
jo
mov
push
mov
fisubr
rol
lds
sbb
cwde
mov
mov
aaa
mov
cmps
mov
cmp
js
mov
cmps
sub
and
pop
push
call
adc
sbb
setno
push
mov
push
mov
int
pop
lock
fwait
stc
bnd
jae
addr16
jns
outs
sub
xor
cmp
push
jmp
mov
mov
cmc
pop
push
mov
push
dec
lods
inc
mov
xchg
and
aam
sbb
in
fwait
stos
aam
xor
xor
dec
cmps
sub
xchg
scas
loopne
adc
enter
push
cdq
inc
out
adc
inc
lock
imul
add
ins
aas
inc
pop
mov
stc
ja
lods
xchg
xlat
sbb
mov
mov
jmp
push
loope
sti
fcom
fwait
cmp
cmp
or
and
out
mov
pop
jecxz
sbb
scas
xchg
or
movs
fsub
(bad)
and
test
in
ss
stos
repnz
nop
cmp
aad
jno
inc
cmps
sbb
jg
fldcw
mov
add
sbb
jp
jmp
jle
icebp
jbe
jo
push
adc
je
jne
(bad)
cmc
(bad)
pop
(bad)
std
push
inc
pop
push
push
push
push
dec
dec
push
add
pop
inc
ss
rol
(bad)
xor
mov
mov
xor
sub
inc
lods
sub
inc
into
data16
hlt
dec
and
push
nop
adc
sbb
cwde
test
push
push
lods
mov
out
add
bound
jae
xchg
jbe
jl
addr16
nop
out
sub
sub
call
movs
and
jmp
fiadd
xor
push
movs
adc
rcl
dec
addr16
movs
int3
je
out
das
cmps
jge
stos
mov
inc
in
aas
lock
addr16
(bad)
movs
ja
repz
and
pop
out
pop
or
outs
add
jnp
fisttp
imul
(bad)
out
push
mov
mov
dec
jg
js
iret
addr16
ins
sub
scas
loop
dec
in
outs
(bad)
or
ror
pop
mov
cdq
dec
iret
inc
mov
xchg
inc
rol
push
sbb
dec
jne
mov
das
sub
pop
sub
lds
daa
xchg
pop
pop
push
push
push
jno
data16
pop
push
dec
inc
adc
mov
adc
inc
xchg
pop
inc
adc
or
mov
loope
fist
mov
sbb
outs
add
xor
mov
fmul
xlat
aam
pop
pop
popa
jb
pop
in
int
inc
lods
pop
jae
lds
movs
adc
inc
mov
int3
test
cmc
xchg
mov
cmp
xchg
dec
loope
and
out
sbb
loop
loop
xchg
push
or
mov
movs
add
jae
xor
imul
xor
in
jb
push
std
cmp
mov
jnp
or
shl
fs
jnp
and
push
push
push
mov
sti
test
cmp
add
jmp
mov
jmp
adc
xor
dec
and
ds
lods
cdq
add
xor
ja
out
pop
jp
out
pop
pushf
and
nop
ret
sub
gs
ins
ja
add
into
jb
das
mov
sbb
pushf
mov
(bad)
icebp
xlat
(bad)
jmp
aaa
dec
in
shl
xor
mov
mov
pop
xor
push
adc
(bad)
pop
ret
mov
dec
das
fdiv
lods
inc
mov
(bad)
nop
sub
xor
stos
scas
cmp
mov
jg
mov
stos
fiadd
mov
add
pop
(bad)
lahf
dec
lahf
retf
adc
inc
inc
xchg
sbb
ja
mov
mov
test
sbb
lock
jns
jp
les
mul
int
outs
ins
arpl
pop
sbb
and
bound
in
ficomp
jg
call
mov
jo
cmp
stos
dec
fwait
pop
inc
(bad)
stc
bound
inc
inc
xor
test
push
mov
and
sub
pop
push
out
and
nop
xchg
clc
sbb
pop
enter
shl
or
mov
sbb
mov
inc
into
mov
push
jno
bnd
xlat
loope
test
jecxz
mov
retf
aad
retf
xlat
push
xor
aad
pop
add
pop
jnp
fimul
jns
je
push
scas
ss
sub
pop
pop
retf
das
pop
mov
xchg
test
lods
mov
mov
sbb
mov
stos
or
jmp
sbb
cmp
mov
inc
cmp
stos
into
jl
sbb
jle
call
push
mov
data16
bound
loope
push
cdq
(bad)
(bad)
fiadd
fcomp
test
dec
icebp
rcl
fsub
cmp
mov
popa
xchg
(bad)
sub
cmp
fs
fsubp
and
dec
sbb
int3
sbb
lods
add
call
pop
loop
sub
cmp
ins
add
cwde
jle
mov
jp
(bad)
sub
push
sbb
jecxz
neg
sar
outs
loop
lods
out
ins
test
iret
pop
gs
inc
call
push
les
fdivrp
iret
fwait
or
xadd
jns
pop
sahf
add
cmp
cmc
and
inc
xchg
or
icebp
push
jb
push
pushf
pop
call
mov
pop
jne
cmp
cmps
pusha
lods
js
lods
scas
outs
stos
lahf
push
rcl
out
imul
or
shr
jno
ins
sbb
or
imul
inc
pushf
mov
movs
stos
out
pop
inc
jmp
dec
push
ror
mov
mov
inc
enter
mov
test
gs
add
rcl
sub
in
cmps
jmp
push
push
xchg
mov
sbb
mov
adc
out
aam
or
xchg
push
add
add
stos
std
pusha
jnp
gs
push
das
jo
ins
hlt
popf
adc
adc
jmp
data16
aad
(bad)
(bad)
xor
fcmovbe
(bad)
push
shr
shl
retf
mov
enter
les
out
push
fnstsw
add
data16
retf
sub
and
mov
lahf
into
lahf
adc
push
pop
test
xchg
test
mov
cmc
sbb
test
mov
(bad)
xor
out
jne
jle
cmp
out
loope
(bad)
popf
sub
aam
push
inc
sbb
mov
push
mov
push
inc
cs
mov
push
ins
les
dec
cmp
dec
jbe
xor
and
shrd
imul
fistp
(bad)
cwde
or
imul
in
(bad)
or
pop
jp
idiv
sbb
std
repnz
xchg
inc
repz
call
mov
gs
outs
cs
fidiv
push
push
xlat
lock
mov
cmc
sahf
mov
lfs
iret
add
rcr
(bad)
rcl
push
mov
xor
mov
fmul
in
mov
mov
loopne
xchg
and
fwait
sbb
rcr
push
fwait
iret
add
xchg
hlt
cmp
sar
jne
cmc
shl
fnstenv
outs
out
js
out
repnz
and
pop
jb
inc
dec
pop
sbb
jnp
(bad)
jle
shr
out
enter
add
xor
xor
mov
dec
mov
repnz
sbb
mov
cmps
sahf
arpl
loopne
inc
xchg
mov
cmp
adc
cwde
(bad)
retf
adc
xchg
cmp
je
stc
jno
mov
cmc
jnp
repnz
imul
int3
push
adc
fbstp
repz
shl
pop
pop
ror
repnz
retf
(bad)
(bad)
dec
push
rol
mov
lea
pop
jg
shl
dec
push
loope
xchg
and
and
cdq
mov
xchg
xchg
push
push
push
adc
push
outs
lods
mov
ins
outs
xor
mov
fdivr
sub
idiv
sbb
jg
jno
adc
mov
xchg
xor
fcomp
cmp
hlt
mov
mov
sbb
test
and
add
dec
sub
cmp
scas
pop
inc
xchg
dec
xchg
or
je
mov
mov
ja
test
add
(bad)
adc
push
scas
call
pop
outs
lods
out
imul
mov
cli
icebp
jns
cmp
jge
nop
push
mul
cld
ja
xor
sbb
imul
jle
cmc
and
lea
mov
pop
lods
mov
pop
(bad)
jae
(bad)
in
pop
fsubr
call
int
pop
dec
dec
jmp
or
or
xchg
popf
shl
mov
dec
imul
xchg
outs
fwait
gs
leave
sbb
pop
xchg
(bad)
fild
pusha
fiadd
int3
fmul
das
add
jnp
jp
je
xor
pusha
xchg
outs
in
mov
dec
loopne
in
mov
jmp
mov
dec
add
sbb
dec
ret
add
daa
in
inc
into
inc
retf
mov
mov
(bad)
sbb
cmps
pusha
fcomp
sub
fsubr
icebp
xchg
push
sbb
push
call
adc
dec
xor
adc
or
mov
clc
movs
lock
cli
fisttp
stc
push
call
loope
sub
lods
adc
jg
jecxz
cmp
mov
jb
pop
ficom
ror
lods
push
into
cmp
mov
dec
cli
pop
mov
cmc
cmps
out
nop
shl
ins
lods
sti
and
pop
cmc
sub
dec
push
sub
ins
rcr
add
cmps
and
xchg
add
jge
into
sub
(bad)
imul
or
jle
sbb
ins
icebp
(bad)
arpl
int3
bound
inc
in
xor
xor
push
repnz
push
mov
dec
adc
inc
dec
sub
ret
mov
jo
xor
mov
sub
xor
or
xor
dec
mov
aam
(bad)
cmp
xor
dec
dec
jbe
xor
or
jecxz
out
or
aam
jecxz
data16
add
sbb
repz
sbb
adc
cli
push
cld
adc
adc
in
add
add
pop
test
repz
jp
adc
sbb
out
adc
sbb
retf
pop
enter
and
(bad)
(bad)
sub
mov
movs
(bad)
sub
dec
test
jmp
sahf
mov
cmps
cdq
jg
loop
scas
xor
les
mov
adc
leave
test
out
xchg
setl
add
aam
out
js
jbe
push
mov
inc
mov
adc
pop
add
loopne
add
pop
pop
push
pop
mov
xlat
cmp
loop
pop
pop
inc
daa
mov
xchg
or
inc
sbb
adc
sbb
jmp
xor
push
xor
scas
mov
jmp
repz
sbb
int3
sbb
add
hlt
adc
add
xchg
fadd
inc
pop
push
test
scas
neg
(bad)
inc
bound
je
jg
test
sub
icebp
shl
in
mov
mov
mov
and
xlat
daa
and
lahf
fnstenv
add
push
ret
fsubr
mov
lods
jl
and
(bad)
scas
sbb
xchg
mov
lods
mov
push
js
pop
add
push
add
imul
repnz
xchg
imul
adc
sbb
test
inc
cdq
sbb
xor
dec
dec
popa
pop
imul
xchg
pushf
inc
nop
inc
lahf
push
fwait
sub
movs
jge
jno
jno
ss
je
push
test
sub
cs
sbb
mov
and
and
or
cmp
xchg
mov
inc
daa
dec
pop
rcr
dec
xchg
push
into
xchg
add
push
mov
sub
imul
fs
test
fdivp
or
enter
aad
mov
loopne
mov
stos
dec
mov
mov
cli
(bad)
sbb
icebp
mov
int3
test
out
test
nop
or
xchg
cwde
stc
mov
call
jne
mov
call
inc
dec
mov
ja
(bad)
fnstcw
rcl
popf
fadd
xchg
outs
push
inc
xchg
jmp
ins
inc
cdq
ins
sbb
xor
cmp
cmp
inc
mov
das
pusha
test
push
gs
pop
dec
aam
push
mov
pop
inc
push
push
ds
push
fiadd
pop
dec
pop
sbb
clc
fwait
add
jp
ins
ret
cs
mov
xchg
das
sbb
cs
call
sub
jae
dec
push
push
sbb
xchg
push
hlt
inc
fwait
inc
adc
or
dec
add
push
mov
or
xchg
cdq
neg
clc
in
mov
repz
addr16
add
sbb
bound
push
cwde
aam
cdq
push
shl
mov
popf
(bad)
int
inc
adc
dec
lds
mov
scas
lods
mov
lahf
mov
out
stc
shr
mov
xchg
fnstsw
xchg
(bad)
ins
dec
test
or
xchg
cmp
(bad)
jb
cmp
jle
cmp
addr16
inc
out
jecxz
and
mov
or
mov
pop
xor
test
push
dec
inc
jnp
inc
inc
inc
xor
cmp
shl
shr
mov
dec
aas
xor
arpl
jns
or
stos
fisub
adc
ficomp
add
(bad)
adc
mov
or
jno
or
adc
pop
(bad)
cmp
mov
psllq
sbb
cwde
add
push
ins
test
pop
mov
fistp
adc
(bad)
cmp
test
inc
popf
das
push
mov
dec
mov
cmp
pop
cwde
out
cmp
dec
in
iret
push
scas
test
jbe
pop
sbb
aad
rcr
fisubr
scas
(bad)
lods
int
add
sbb
test
dec
push
push
iret
stos
mov
mov
mov
(bad)
mov
test
xchg
shl
inc
inc
loope
dec
and
sbb
dec
xor
ret
dec
ss
sub
xor
pop
loop
inc
sub
jge
bound
jno
xchg
push
pop
xchg
push
push
nop
push
pop
inc
std
lahf
in
adc
pusha
retf
add
mov
les
add
add
jmp
cmc
out
cmps
cmps
out
gs
in
xor
adc
jmp
xchg
pop
and
xchg
xlat
aad
test
hlt
ror
leave
lock
rol
aad
(bad)
mov
jns
lock
mov
mov
mov
scas
cmp
stos
xchg
movs
int3
adc
test
mov
arpl
mov
scas
addr16
xchg
cli
jb
(bad)
mov
pand
hlt
and
mov
jbe
mov
jae
nop
ins
es
loope
es
dec
data16
call
pop
xor
ficom
inc
cmp
push
push
push
pop
push
add
retf
dec
pop
inc
js
xor
dec
cmp
cli
inc
push
pop
imul
daa
cmps
imul
xor
cmp
popa
cmps
dec
sbb
pop
sub
add
cdq
cdq
push
or
or
mov
mov
(bad)
jge
adc
mov
xor
jge
cli
js
jecxz
ins
mov
and
mov
aaa
dec
and
and
jmp
adc
scas
out
xchg
clc
sbb
ret
into
outs
rcl
ret
mov
mov
repz
rep
lock
cmps
sub
nop
mov
cmps
in
movs
in
mov
pop
imul
nop
add
dec
addr16
mov
lea
jle
ins
cmp
sbb
pop
dec
or
cli
and
sub
push
xchg
sub
ds
das
xor
sbb
adc
push
or
cmp
ret
mov
inc
add
cmp
mov
add
jae
mov
(bad)
xor
daa
and
fistp
pop
stc
sbb
jmp
call
orps
pop
addr16
push
push
cmp
mov
or
cld
ja
lock
in
std
jmp
in
addr16
(bad)
xchg
pop
ret
lahf
in
xchg
rcl
aad
scas
sub
aaa
mov
icebp
leave
mov
dec
adc
dec
inc
and
pusha
mov
pop
stos
or
mov
mov
xchg
ret
jg
fst
xchg
cdq
adc
outs
push
xlat
sbb
nop
mov
call
add
or
cmp
outs
dec
pop
sub
cli
mov
out
ins
pop
loop
jns
mov
jmp
pop
adc
ficomp
pop
test
mov
inc
int3
pop
jno
push
cmovns
movnti
test
ficom
sub
pop
aaa
xlat
sub
aaa
push
xor
push
aas
inc
cmp
cmp
fiadd
sbb
fcomip
daa
inc
inc
call
push
test
jl
add
jnp
std
mov
lds
mov
xchg
fbld
(bad)
jmp
fisubr
icebp
in
fstp
nop
ret
rcl
inc
enter
repz
rol
retf
(bad)
sti
rcr
mov
ss
aas
pop
adc
xchg
mul
mov
pop
xchg
push
adc
adc
push
xchg
xchg
dec
enter
stos
mov
popf
daa
adc
cmp
ja
in
aam
call
outs
and
dec
xchg
fsub
pop
sti
and
jp
movs
sbb
movs
inc
push
pop
lds
adc
dec
(bad)
dec
aas
push
adc
(bad)
inc
adc
cmp
add
xor
and
add
fbld
sub
lods
sub
es
jle
push
pusha
push
es
loop
push
or
adc
es
dec
and
fist
jns
xchg
cmp
out
or
test
add
ss
repz
lock
loope
sub
loope
in
cmp
ficom
or
push
bound
fild
(bad)
add
cli
adc
fistp
std
mov
(bad)
stc
fld
xor
xchg
cmps
sub
mov
jl
sbb
mov
mov
call
jnp
lods
jb
test
iret
jp
jb
cli
jge
es
lahf
ds
mov
jge
sbb
sub
hlt
data16
bound
iret
pop
push
pop
test
mov
cmps
push
mov
push
mov
inc
pop
add
cmp
ror
sti
int
jo
jo
out
and
sbb
jno
scas
push
sub
and
sbb
popa
adc
(bad)
es
jp
leave
push
push
jae
cld
push
xor
mov
xchg
pop
hlt
cld
mov
cdq
into
dec
in
push
aad
and
in
xchg
(bad)
cs
xchg
les
iret
adc
mov
(bad)
mov
stc
ror
mov
loope
sbb
ret
outs
frstor
jmp
mov
pushf
test
iret
not
cmp
cld
lea
add
jl
data16
and
int
pop
xor
aas
cmp
and
push
inc
fucomip
sub
imul
fidiv
bound
inc
retf
jne
jp
jle
aas
push
dec
mov
and
inc
cmp
dec
jle
jne
mov
and
or
and
enter
fild
push
pushf
stc
push
jmp
ret
adc
dec
or
xchg
add
mov
add
test
mov
mov
jg
mov
std
fs
out
lods
fwait
out
test
adc
in
jmp
rcl
mov
fcomp
jmp
xchg
pop
inc
(bad)
out
mov
rol
pop
xchg
cmp
sahf
ds
mov
inc
mov
popf
fidiv
int3
test
cmps
or
sahf
xchg
xchg
test
sbb
test
fist
clc
mov
add
xor
test
ja
loopne
inc
mov
sub
mov
jcxz
jno
push
mov
pop
push
bound
imul
push
fild
dec
pop
(bad)
rol
(bad)
mov
mov
mov
(bad)
mov
inc
push
jb
ficomp
outs
sub
gs
punpckhbw
push
ins
and
pop
sbb
sti
xchg
pop
and
and
adc
adc
push
adc
push
push
pop
add
(bad)
inc
add
jg
enter
repz
jmp
mov
fwait
in
in
je
movs
fsub
mov
fcom
mov
fadd
pop
into
xchg
int3
pop
mov
adc
mov
fiadd
xchg
cmps
je
shl
mov
mov
test
inc
sub
mov
ret
jno
fist
cdq
(bad)
xchg
sbb
imul
shl
mov
mov
xchg
push
les
cmc
add
repnz
movs
repz
ja
push
cli
das
xchg
stc
sub
cs
xchg
sbb
ja
xchg
jo
cmp
fsub
mov
les
jnp
jmp
sbb
lahf
xchg
and
jno
inc
mov
je
jge
xor
jns
ss
in
pop
push
cmp
and
sub
xchg
pop
jmp
stos
ds
add
je
xchg
mov
jmp
std
or
adc
inc
sti
cmp
fstp
sbb
icebp
or
mov
out
arpl
cli
rcl
call
sar
stos
in
ss
rcl
int
mov
rcl
xchg
in
add
fidiv
std
dec
(bad)
mov
inc
(bad)
mov
inc
test
clc
sahf
icebp
inc
lods
add
sar
dec
aad
pusha
out
call
mov
jne
add
test
jg
add
pop
js
rcl
div
mov
outs
ins
stc
cmp
xchg
and
jp
js
and
shr
dec
push
push
mov
mov
scas
cmp
pop
movs
dec
xor
jg
(bad)
mov
and
imul
sbb
movs
into
xor
mov
mov
push
adc
neg
stos
sbb
xor
shr
pop
xor
mov
pop
aad
cmp
ja
adc
jae
daa
jle
fdivr
jb
out
loop
or
or
gs
ins
jmp
gs
cmps
adc
jmp
or
inc
xchg
dec
int
dec
jo
xor
mov
inc
pop
xor
test
sub
xchg
sti
sbb
call
adc
das
adc
push
push
xchg
push
sbb
sbb
mov
sbb
add
xor
xor
add
xor
jle
jl
jp
cmp
jl
sbb
outs
loopne
in
cs
push
arpl
lahf
mov
pop
out
pop
push
push
(bad)
add
pop
(bad)
or
inc
mov
xchg
ds
fnstenv
test
sub
retf
out
pop
xor
and
xchg
pop
sbb
xchg
sbb
adc
inc
sbb
pop
add
add
push
and
std
add
stc
cmc
pusha
xor
mov
fs
test
out
fabs
movs
sub
pop
push
and
pusha
nop
sub
xchg
in
(bad)
dec
stc
int3
push
add
ret
add
repnz
mov
int
mov
mov
mov
in
jmp
pop
daa
out
and
ds
add
(bad)
dec
fs
xor
mov
xchg
retf
mov
sbb
or
or
call
pop
cld
xor
mov
push
push
scas
dec
(bad)
fisub
xchg
scas
dec
push
cmps
ins
pusha
dec
push
mov
push
ror
pop
pusha
ins
adc
jbe
shl
push
iret
outs
sbb
lds
sbb
mov
lea
add
push
fdiv
in
retf
cmp
shl
sbb
push
add
xchg
or
popf
inc
push
xor
shr
ficom
rol
fdivr
xchg
jae
cli
lock
std
pushf
out
fdiv
lahf
fmulp
push
xchg
rcl
pop
push
xlat
mov
imul
xor
or
rol
(bad)
cmp
repnz
(bad)
mov
idiv
mov
lock
mov
mov
aad
popa
fld
and
xchg
pushf
sbb
mov
clc
sbb
lea
lds
jne
jnp
pop
adc
jmp
xchg
xchg
mov
loopne
xlat
adc
sbb
inc
shl
loope
dec
popf
daa
cs
pop
daa
dec
mov
ja
mov
popf
pop
push
inc
pop
cwde
push
xor
cmp
pushf
xlat
xor
xor
and
out
xchg
or
fild
pop
adc
sbb
dec
sbb
add
pop
cli
aas
(bad)
cli
sti
ret
or
add
xor
dec
jecxz
mov
hlt
lods
retf
push
add
out
addr16
fs
pop
jge
fld
xchg
cmp
cmps
ret
mov
or
aad
dec
mov
mov
cmp
pop
xchg
cmp
sub
sub
pop
mov
loopne
pushf
out
popf
jno
ss
jg
sbb
xor
jns
je
dec
std
jmp
mov
sbb
jns
sub
and
xor
jecxz
add
arpl
pop
fwait
sbb
pop
pop
sub
mov
dec
adc
mov
xor
inc
inc
xor
mov
xor
mov
int3
xor
das
inc
shl
xor
or
int3
xor
cmps
sbb
add
fwait
imul
push
adc
dec
dec
ror
push
int
pop
mov
jno
loop
add
stos
ja
fidivr
jbe
ret
xchg
repz
dec
in
ins
sub
xor
pop
mov
std
cmc
pop
jnp
xchg
aad
push
mov
(bad)
fstp
enter
inc
mov
enter
mov
xor
enter
out
sub
int3
lea
es
mov
popa
xchg
sbb
fistp
aad
adc
or
xchg
or
lds
sbb
push
test
dec
call
fwait
in
pushf
pop
jge
sbb
mov
test
push
add
fcom
scas
(bad)
or
or
(bad)
int
int
cmps
sub
cmp
rol
(bad)
push
jp
retf
sub
xor
jne
imul
mov
in
cmp
(bad)
setl
lock
out
or
ins
or
iret
jecxz
cmps
daa
pop
pop
retf
ret
add
(bad)
scas
enter
into
out
cld
cld
jbe
mov
loop
cld
sbb
ins
gs
ficomp
in
out
bound
scas
fistp
cmps
movs
xor
mov
shr
cdq
ret
ss
dec
loop
xor
inc
ds
push
push
mov
mov
fidivr
shr
(bad)
call
repnz
jge
repz
mov
cwd
jmp
xchg
test
inc
(bad)
mov
mov
gs
jnp
pop
xor
and
or
ds
es
cmp
mov
xor
jl
mov
stc
add
push
shr
adc
(bad)
inc
inc
into
cmp
popa
sbb
jge
hlt
jmp
aaa
aaa
cmp
outs
mov
call
out
cmp
sub
mov
xchg
lods
sbb
cmps
out
push
ss
sub
add
inc
(bad)
int
add
add
(bad)
out
mov
adc
aam
mov
sbb
ret
out
(bad)
and
imul
sbb
aad
cwde
cmc
sbb
mov
sahf
mov
mov
xchg
jmp
xor
dec
ret
cmp
int
mov
cs
pop
add
(bad)
in
in
ficom
sahf
pushf
jo
xchg
scas
push
out
gs
scas
repz
cmc
into
xchg
and
rdpmc
test
je
jp
jl
add
xor
(bad)
cmp
sahf
shl
in
cs
dec
and
jecxz
addr16
push
and
inc
rcr
rcl
bound
or
ror
mov
cmp
ss
cmp
mov
cmp
out
jl
rol
cli
push
or
mov
test
lods
test
sahf
dec
sbb
adc
fwait
rol
inc
div
mov
repnz
sti
sar
mov
mov
jne
jmp
adc
mov
loopne
enter
(bad)
ror
(bad)
fnop
fcomi
(bad)
inc
add
ret
lds
xchg
add
cmp
out
idiv
pop
cli
mov
sub
scas
and
(bad)
fmul
mov
jnp
fwait
int3
mov
data16
sar
pushf
ins
in
addr16
popf
xchg
stos
test
ret
in
iret
adc
pushf
idiv
retf
mov
je
or
xor
inc
xchg
cwde
dec
xchg
add
cs
pop
mov
outs
xor
adc
(bad)
enter
mul
adc
or
mov
xchg
shl
mov
fwait
sub
fdiv
and
(bad)
xor
pop
loop
jge
push
pop
popf
xchg
push
leave
adc
or
add
push
in
push
lods
adc
xor
mov
addr16
xor
into
loopne
jmp
cwde
sub
(bad)
pop
and
mov
cmc
dec
retf
int
mov
or
ret
mov
xor
mov
icebp
test
icebp
pop
int3
test
jg
shl
popa
xchg
lock
xchg
fstp
imul
aad
punpckldq
mov
(bad)
lock
sub
pusha
mov
test
xor
arpl
out
adc
or
test
mov
sub
jecxz
bound
inc
retf
mov
inc
mov
cmps
outs
cmp
cmp
cmp
sub
movs
jns
mov
and
xchg
sbb
dec
leave
xchg
dec
out
sbb
test
adc
sbb
test
movs
add
mov
enter
jnp
call
test
loop
loope
aam
repz
mov
in
mov
into
jbe
push
sbb
jnp
inc
or
sub
adc
test
fmul
dec
ja
mov
mov
jmp
push
mov
stos
and
popf
mov
cwde
and
adc
sbb
fs
dec
adc
out
call
inc
or
xor
lea
mov
(bad)
mov
jg
bound
xchg
or
idiv
push
popa
hlt
mov
mov
cs
sbb
push
lods
dec
(bad)
dec
movs
dec
(bad)
dec
enter
dec
int
iret
cmp
mov
mov
mov
cmp
ret
and
xor
mov
sbb
call
sbb
or
mov
mov
add
in
push
jnp
in
hlt
jp
jb
pop
out
pusha
in
(bad)
out
push
leave
addr16
out
loope
ret
outs
fst
pop
fsin
push
ficomp
push
(bad)
aad
pop
ror
lea
xor
add
(bad)
dec
mov
ret
lds
cmp
mov
lock
stos
push
daa
(bad)
pop
test
xor
ds
cmp
mov
(bad)
mov
mov
mov
xchg
mov
xchg
sub
imul
xor
jle
ss
jp
dec
addr16
pusha
and
int3
sub
sub
push
jnp
push
jle
repz
pop
add
or
push
dec
and
adc
sbb
inc
pop
mov
ss
or
xor
push
mov
cmp
or
in
ja
and
hlt
fstp
enter
adc
retf
ss
or
add
cmp
popa
sti
add
add
stc
mov
sar
ret
icebp
iret
jecxz
adc
pop
shl
out
xor
jecxz
pop
call
fcmovbe
(bad)
aad
rol
cmp
retf
das
dec
mov
mov
ja
popf
mov
cld
dec
dec
push
jl
mov
scas
adc
xchg
cld
pop
fisub
sub
imul
ds
fst
ja
aam
js
lahf
or
pop
repnz
cmp
lea
pop
mov
jo
fnstcw
call
scas
inc
imul
je
mov
sbb
push
push
cmp
push
add
dec
inc
and
inc
das
inc
dec
adc
inc
push
sub
sub
cmp
bound
sub
xor
pop
xor
xor
dec
and
dec
and
je
xor
cmp
adc
inc
addr16
or
popa
or
outs
add
push
push
cmp
(bad)
xchg
stc
leave
mov
lock
out
test
and
(bad)
in
mov
lods
mov
xchg
mov
test
xchg
retf
xchg
mov
popf
ret
cmps
sar
fnstsw
xor
aas
not
fnstenv
mov
enter
xor
or
fsub
mov
mov
stos
test
stos
std
mov
dec
cmc
ds
adc
shl
ins
jge
pop
test
cwde
adc
pusha
pop
fistp
mov
xchg
inc
aam
pop
push
push
push
dec
mov
movs
ds
mov
or
mov
jns
inc
xor
repz
dec
fldenv
jmp
imul
loopne
ret
xchg
dec
enter
sbb
sub
out
(bad)
sub
add
mov
aad
out
mov
jl
scas
pop
jo
jl
xor
fucomip
sbb
sbb
out
mov
xchg
fstp
movs
mov
lds
(bad)
and
adc
sub
mov
mov
mov
mov
mov
fldcw
fild
mov
cwde
arpl
jb
xchg
arpl
sahf
mov
or
lahf
or
xor
mov
bnd
and
jae
mov
mov
sbb
outs
push
clc
pop
jbe
xchg
and
popa
cmps
dec
frstor
test
pushf
fist
cmp
or
mov
lods
xchg
lods
mov
mov
mov
shl
ja
fnstsw
fldcw
push
add
mov
sbb
fild
adc
mov
adc
out
push
sti
lea
jmp
mov
push
jns
xor
push
jne
adc
or
js
mov
and
outs
xchg
pminsw
push
not
pop
in
fldcw
add
rol
int
lea
(bad)
pushf
std
xchg
mov
cmp
mov
mov
mov
and
dec
idiv
scas
push
xchg
hlt
cwde
pop
pop
mov
xchg
xchg
xchg
jle
nop
(bad)
lock
data16
add
(bad)
jmp
es
jnp
lahf
xchg
xchg
jb
ja
sub
jmp
cmp
sbb
pushf
es
push
mov
test
or
xor
into
ret
jb
mov
jo
mov
sub
mov
cmp
cmps
push
int
push
sub
adc
pop
and
pop
fisttp
sahf
dec
fstp
pushf
shl
call
or
sbb
xor
push
mov
inc
jg
jnp
jp
rcr
cwde
xor
lock
adc
pop
std
test
in
outs
out
push
ret
(bad)
ret
sub
fdiv
fs
fdiv
lahf
lods
lods
inc
(bad)
dec
pop
(bad)
mov
push
ret
ror
mov
popa
and
scas
movs
clc
aaa
stos
or
test
xor
scas
cmc
add
repz
add
sbb
push
mov
adc
xchg
xchg
in
jnp
call
in
ins
jmp
(bad)
cli
ins
inc
je
imul
arpl
movs
cmc
push
call
push
xor
push
clc
jne
dec
add
dec
ins
ror
rol
ins
fadd
xlat
ds
cmp
sbb
push
mov
out
mov
xchg
mov
adc
sbb
sbb
(bad)
push
and
adc
xchg
or
pushf
or
xchg
push
sub
add
call
sti
add
pusha
hlt
mov
call
xchg
inc
cs
mov
jecxz
jnp
je
dec
ficom
aam
dec
sar
pop
iret
adc
pop
les
push
rcl
call
pop
and
cmp
xor
mov
pop
or
out
xchg
int3
xchg
or
push
mov
inc
rcl
cmc
xor
mov
popf
dec
fwait
lea
arpl
outs
sub
popa
movs
inc
bound
popa
sbb
adc
adc
mov
fst
dec
inc
sti
enter
dec
inc
inc
inc
push
dec
cmc
dec
or
test
cmp
pop
out
cmp
xor
out
das
daa
das
jmp
cmc
test
mov
push
push
xchg
(bad)
cld
in
out
loop
dec
sub
outs
mov
mov
or
or
inc
loope
add
mov
cli
jne
or
cmp
xor
popa
pushf
call
fidivr
push
mov
mov
aam
and
sbb
outs
je
enter
(bad)
fisttp
fdivr
imul
push
or
cmp
mov
scas
(bad)
ret
jecxz
mov
hlt
ffreep
adc
pop
adc
retf
or
data16
mov
fucom
rcr
outs
mov
xchg
inc
jge
icebp
jle
or
jno
jl
mov
dec
imul
ja
and
push
xor
mov
pop
dec
dec
sbb
mov
or
ins
adc
hlt
adc
test
xor
cmp
pusha
fisttp
mov
inc
das
cmp
test
sub
leave
out
sbb
inc
pop
sbb
hlt
xchg
mov
push
add
pop
bound
xchg
inc
stos
and
cmps
push
(bad)
(bad)
(bad)
mov
div
retf
stos
sbb
in
jmp
jmp
arpl
cdq
pop
jmp
pop
pop
push
rcr
sbb
sar
repnz
xchg
retf
imul
jle
cmp
mov
cmp
ss
dec
aaa
or
sar
cmc
icebp
hlt
imul
icebp
sub
xchg
adc
adc
sub
or
call
xchg
sbb
js
xor
inc
xor
pop
das
ins
push
sub
and
enter
push
pop
pop
pop
sbb
adc
push
or
dec
adc
dec
sub
dec
loop
add
sub
inc
sub
cmp
adc
leave
mov
jp
cmps
mov
lods
fs
add
fdivr
dec
adc
xchg
mov
xor
xchg
or
je
jg
jmp
sub
mov
mov
in
ret
pusha
jns
les
pusha
int3
mov
push
dec
std
cdq
hlt
mov
pop
inc
xlat
sti
xchg
pop
pop
or
cdq
xor
dec
not
nop
and
xor
adc
(bad)
sub
es
out
or
and
xchg
xchg
icebp
imul
mov
ins
adc
pop
adc
mov
xchg
aam
ja
or
inc
adc
cmp
xchg
dec
repz
test
jle
movs
outs
gs
loopne
data16
cs
loope
inc
push
lahf
mov
rcr
stos
push
fcom
scas
pop
dec
dec
dec
or
inc
dec
inc
inc
xor
inc
dec
ret
inc
push
xor
imul
jbe
xor
scas
out
shr
mov
sbb
inc
daa
jne
hlt
pop
ins
jns
sbb
jg
jne
sbb
push
jle
jl
or
(bad)
(bad)
popf
or
mov
jge
clc
(bad)
clc
std
pop
jmp
out
das
outs
movs
shl
out
push
or
sbb
cli
and
fcomp
aad
adc
ror
int3
stos
leave
mov
lods
add
jge
int
inc
out
xchg
mov
xchg
scas
mov
repz
ins
or
stos
imul
in
sbb
cmp
loope
push
xchg
push
in
in
aam
ja
pushf
xchg
add
add
sbb
stos
push
outs
jp
imul
push
jno
jg
loop
inc
mov
fild
push
pop
xor
dec
pop
push
pop
push
inc
cdq
leave
aaa
dec
inc
pop
dec
dec
inc
pop
dec
pop
dec
loope
xor
and
xor
cmp
sub
and
(bad)
popf
push
cs
xor
sub
add
add
imul
inc
arpl
sbb
sub
add
jg
call
cwde
mov
sbb
aaa
call
out
aaa
loope
cmp
jecxz
xor
cld
sbb
push
sbb
cmp
fld
(bad)
xor
cmc
add
rol
or
or
or
push
(bad)
dec
jg
in
xchg
jb
and
jl
jle
jl
stos
arpl
xchg
push
ins
movs
push
outs
cdq
push
fwait
push
popf
pop
lahf
sbb
cmps
lds
inc
mov
mov
ja
and
enter
jle
jnp
nop
cmp
adc
jno
popf
je
push
popa
sbb
push
xchg
pusha
loopne
imul
cmp
cmp
aas
push
sub
dec
and
dec
es
sub
inc
xlat
das
cmp
push
cmp
sub
lods
es
aam
cli
sub
add
jmp
call
push
fstp
call
sub
std
push
mov
add
cmp
xor
jl
lods
add
adc
cld
cld
jge
clc
and
neg
icebp
bound
(bad)
out
je
and
pop
into
mov
sub
movs
retf
dec
cdq
inc
inc
les
nop
push
or
jmp
mov
nop
ds
mov
movs
stos
sahf
mov
fldenv
jns
xlat
xchg
sar
push
mov
(bad)
lea
data16
imul
inc
jle
test
jno
retf
outs
in
jae
call
mov
retf
movq
sub
mov
sub
sbb
jns
(bad)
pop
das
rcl
pop
int
dec
or
inc
cmp
les
or
cmp
sub
cmp
add
push
and
cs
pop
sbb
cli
push
xchg
push
into
push
xchg
jmp
push
pushf
int
les
mov
push
pop
adc
adc
adc
add
jmp
adc
test
addr16
out
ins
mov
fisubr
sub
mov
push
pushf
aam
(bad)
mov
dec
or
xchg
sub
mov
fidivr
dec
iret
lods
inc
mov
mov
pop
pop
mov
in
inc
loop
jne
arpl
push
popa
xchg
cmps
pop
stos
out
out
lahf
mov
mov
inc
pop
inc
adc
test
inc
lods
add
dec
std
loop
lds
(bad)
mov
jecxz
imul
adc
call
adc
xchg
sub
pusha
out
add
mov
jo
cmp
cmp
popf
in
aas
xlat
pop
and
sbb
and
gs
cmp
aas
jmp
loope
loope
das
(bad)
ins
(bad)
es
daa
fsubr
mov
push
jecxz
push
sbb
sahf
call
icebp
data16
jns
daa
jl
jle
lock
jl
jno
push
daa
add
repz
loope
sbb
ret
cmps
and
push
mov
jg
cmps
aam
shr
lds
iret
cmp
xor
(bad)
ss
cdq
inc
cmp
and
xor
cmp
sub
movs
mov
sahf
ss
fwait
adc
sub
shl
imul
xadd
push
shl
jp
inc
ja
mov
push
outs
fld
push
stos
push
gs
gs
daa
imul
xchg
sub
(bad)
jle
dec
dec
dec
sbb
not
inc
int
out
fcmovb
les
cmp
pop
es
mov
push
cwde
and
out
sahf
fst
out
mov
mov
cdq
xchg
js
push
or
or
jae
inc
es
std
sti
inc
stc
stc
fdecstp
mov
shl
mov
inc
and
mov
in
sbb
push
sbb
fcom
pop
sbb
ror
push
sub
inc
lahf
ror
pop
dec
push
lock
repz
div
mov
cmp
aam
jl
imul
mov
xchg
adc
fisub
cwde
and
sub
or
and
inc
pop
test
add
adc
jge
jnp
mov
out
xchg
je
jo
repnz
jp
out
mov
push
jmp
push
mov
push
push
push
mov
xor
int3
jnp
inc
ins
jae
test
jns
xor
not
cmp
in
arpl
scas
shr
sub
pusha
and
daa
pusha
arpl
mov
sbb
push
sbb
pop
ss
test
xchg
and
pop
xor
jmp
das
sbb
fidivr
jle
mov
fmul
retf
cmc
ins
scas
addr16
add
lock
push
xchg
dec
neg
test
cli
sar
inc
xchg
retf
sbb
inc
mov
(bad)
or
cmc
mov
xor
cli
push
cmp
xchg
xor
mov
push
push
and
inc
call
adc
fldenv
and
mov
inc
mov
cmp
jbe
lock
icebp
xor
dec
or
and
push
jecxz
sahf
popa
push
fucomi
pop
fwait
sub
adc
adc
xor
std
jno
dec
imul
ret
sar
xor
cmp
fdivr
shl
sub
adc
adc
pop
scas
fnstenv
dec
sbb
call
sub
retf
push
push
xor
mov
jno
clc
pop
jnp
mov
mov
outs
xchg
add
ins
pop
xchg
test
outs
cmps
pop
and
in
push
push
mov
push
int3
rcr
inc
or
push
inc
xchg
inc
dec
(bad)
repz
xor
xor
inc
inc
cmc
pop
pop
cmp
aaa
cmp
cmp
scas
lods
xchg
fcom
shr
fsubrp
cmc
jns
in
mov
sub
sub
push
int3
sbb
rol
or
cmp
jbe
jae
mov
mov
jmp
sbb
push
jmp
adc
and
fstp
fcom
movs
pop
in
push
cmp
dec
or
sbb
jne
mov
dec
int3
enter
leave
pop
cmp
aas
(bad)
arpl
aas
cdq
fmul
push
outs
push
and
jne
popa
ret
cmc
pop
inc
cmp
inc
push
pop
pop
inc
cli
ss
dec
or
cli
addr16
mov
dec
inc
pop
mov
jo
cmp
repnz
(bad)
sti
stc
and
jmp
sub
imul
inc
lock
push
lds
leave
push
fcom
push
cs
mov
leave
retf
push
out
adc
cmp
cmp
xor
scas
push
ficom
fsub
popf
popf
pop
adc
sbb
sbb
adc
sahf
mov
and
xchg
cmp
jge
aaa
in
bnd
je
jb
jb
imul
test
push
mov
imul
arpl
in
inc
push
je
add
add
inc
scas
test
mov
mov
cmp
retf
mov
sub
rcl
lods
mov
test
and
sbb
repnz
adc
repz
push
adc
pop
xchg
sbb
in
sti
jmp
add
gs
out
dec
jmp
hlt
pusha
pop
pusha
loope
stos
in
out
aad
mov
mul
(bad)
mov
sub
into
ror
fidivr
ss
cdq
mov
adc
cmp
daa
or
addr16
stos
adc
fisub
sbb
xchg
loopne
sbb
xchg
into
mov
add
or
push
out
adc
mov
xlat
push
es
mov
add
add
pop
pop
cli
or
(bad)
sbb
fwait
jnp
push
ins
test
sub
push
sbb
mov
or
inc
pusha
enter
test
add
mov
leave
(bad)
mov
push
jno
cmp
sub
movs
push
data16
and
test
xchg
das
pop
jnp
push
jecxz
call
repnz
jnp
and
mov
cmp
push
add
in
pushf
pop
jmp
test
out
xchg
push
rcl
imul
in
adc
sbb
aas
sbb
inc
adc
retf
mov
mov
fsubr
iret
mov
aaa
cmp
cs
retf
sbb
sub
xchg
mov
pop
xchg
(bad)
or
inc
fstp
xor
hlt
xor
aad
add
jge
addr16
je
jns
inc
(bad)
jbe
ret
cs
or
push
or
push
push
jp
fistp
lea
nop
mov
pop
shl
dec
ret
inc
mov
dec
arpl
mov
cmp
add
push
and
and
cs
jno
pop
sub
nop
mov
movs
fist
or
or
jg
sbb
lock
sti
push
cmc
lock
cmp
mov
out
mov
fistp
fnstenv
push
shr
push
shr
fld
lds
shl
mov
cmp
push
mov
inc
mov
xchg
test
nop
lods
push
adc
call
cmps
out
pop
fist
gs
mov
outs
inc
pop
xor
cld
in
daa
pop
aas
addr16
cmp
es
add
movs
push
imul
in
fnstsw
inc
or
mov
jbe
push
cmp
imul
scas
xchg
xor
xor
cmps
xor
aas
push
pop
xor
dec
gs
dec
pop
sbb
or
adc
lock
sbb
ret
or
retf
pop
stc
int3
(bad)
repnz
jp
ja
add
sub
jl
out
sub
mov
bound
sub
or
imul
adc
cmp
(bad)
xchg
push
push
sub
rcr
iret
(bad)
dec
xchg
sti
icebp
add
inc
lods
xor
mov
pop
cmp
scas
jb
daa
mov
test
test
mov
mov
adc
sbb
mov
add
or
mov
adc
jp
icebp
cld
dec
div
shl
outs
popf
in
cs
ja
in
out
sub
popa
adc
pop
adc
pop
rcl
fadd
xlat
push
stos
pop
fcomp
sbb
dec
test
rcl
lds
int
push
ret
inc
xchg
mov
mov
mov
push
mov
and
mov
jecxz
mov
loopne
test
or
call
add
pushf
scas
inc
add
mov
mov
mov
sbb
repz
pop
div
mov
xchg
lea
das
in
ins
scas
call
bnd
or
popa
les
sub
mov
(bad)
pop
mov
out
mov
mov
dec
ret
ss
test
cmp
pushf
jg
dec
mov
mov
je
out
mov
or
leave
test
mov
test
mov
int
ins
fisubr
cmp
push
(bad)
sub
js
mov
fisub
test
js
cmc
xchg
mov
lahf
(bad)
out
inc
movs
pop
adc
mov
mov
pop
jb
push
mov
sub
dec
inc
dec
inc
dec
cmovbe
mov
outs
dec
inc
mov
xor
or
add
or
and
and
sti
push
sbb
sbb
sbb
or
test
movs
rcr
and
sti
mov
in
repz
jns
and
int
jecxz
pop
sub
jecxz
out
and
xor
rcr
rcr
push
(bad)
xor
adc
int
push
into
or
or
or
push
(bad)
dec
jg
fnstsw
jge
lods
js
jp
jl
jle
test
stos
ins
lods
fwait
jle
mov
pop
pop
cmp
call
xchg
or
mov
xchg
sub
cmp
imul
add
jno
and
ins
push
dec
retf
in
popa
js
pop
push
or
pop
dec
test
pop
cmp
push
inc
imul
dec
pop
loope
inc
iret
test
pushf
mov
sub
cmp
and
das
fwait
sub
cmp
fbld
es
movs
sbb
jb
adc
adc
inc
iret
push
sbb
or
outs
adc
add
stos
jbe
sti
inc
mov
dec
in
icebp
lock
cli
jmp
outs
scas
out
ins
loopne
or
and
or
and
push
adc
ret
inc
int
inc
pop
(bad)
mov
repz
outs
mov
and
dec
mov
scas
test
push
inc
pop
pop
pop
pop
mov
movs
gs
pop
aad
cwde
xchg
xchg
push
pop
adc
sbb
xchg
jns
add
jp
or
cmc
mov
cmp
aas
mov
imul
in
dec
loope
loope
xchg
ins
pop
xlat
fnstsw
and
sub
shr
cdq
push
fcom
lds
mov
mov
enter
mov
aaa
aas
cmp
inc
in
cmp
int
stos
sub
imul
and
sbb
xchg
sbb
jns
pop
dec
dec
xchg
xor
mov
je
ja
inc
imul
dec
inc
repnz
xlat
addr16
jmp
popa
(bad)
cmps
(bad)
push
pop
push
xlat
fst
shl
hlt
cmp
jno
cdq
fmul
jb
dec
hlt
repz
xor
xor
lock
mov
mov
sub
scas
shl
and
popf
neg
aad
(bad)
loopne
adc
gs
mov
sub
nop
mov
or
mov
inc
pop
jl
add
sti
int3
xor
xor
jl
adc
jmp
and
sub
aaa
rcr
pop
push
call
fcmovne
in
dec
les
dec
mov
xor
mov
retf
add
sub
mov
test
xor
cs
in
or
sub
popa
in
in
test
sbb
cwde
outs
mov
sahf
mov
jnp
xor
pop
test
jg
mov
(bad)
test
test
clc
inc
jo
jnp
xchg
cmps
out
out
pusha
sbb
rcl
pop
dec
call
or
sub
pop
cli
add
enter
dec
pop
dec
mov
mov
enter
mov
daa
loop
push
nop
out
test
movs
push
movs
loope
movs
lahf
movs
dec
loop
push
inc
in
mov
cmps
(bad)
aad
ror
jae
adc
xor
jle
cwde
xchg
pop
test
mov
mov
test
pop
mov
sbb
push
mov
and
pop
jecxz
push
bound
cmp
cmp
rol
jg
pop
popa
cmp
cmp
inc
loope
push
bound
mov
jno
fs
sbb
cmp
adc
sbb
sbb
push
adc
jae
test
test
out
inc
add
test
not
jle
test
int
sti
in
pop
jecxz
push
loopne
lahf
out
sti
cmps
sub
xlat
pop
xchg
pop
scas
pop
sub
int
mov
sar
leave
inc
mov
jecxz
shr
shl
bound
scas
sbb
(bad)
popf
pusha
call
xchg
div
push
dec
mov
ret
test
(bad)
div
jae
jns
test
pusha
ins
inc
pop
out
sub
loopne
in
add
and
bound
push
and
ficomp
sbb
into
mov
xor
dec
les
shl
mov
mov
jl
jb
fnsave
or
cdq
pop
or
mov
sub
pop
repz
dec
fstp
push
and
push
push
aaa
or
pop
loopne
ins
push
or
pop
or
cli
pop
fdivr
sub
out
cld
pop
mov
xor
out
ins
movs
xchg
les
std
push
sahf
(bad)
pop
movs
xlat
sub
iret
or
fisttp
push
dec
lea
jge
js
js
cli
pop
cmp
out
inc
xor
sar
stc
sub
dec
test
clc
clc
test
ja
pop
pop
fbstp
push
xchg
push
mov
icebp
lea
(bad)
(bad)
push
ja
lods
or
icebp
jge
pushf
fs
push
js
std
imul
loopne
out
imul
imul
lds
or
xor
(bad)
pop
dec
imul
ins
int
aad
bsr
dec
daa
pushf
stos
aaa
mov
xor
xor
int3
int3
ja
ja
cmp
repz
and
loopne
pop
xchg
or
xchg
jne
pop
loop
sbb
mov
adc
pop
dec
inc
stc
sub
in
jnp
fdivr
dec
jl
dec
xor
mov
add
push
out
jecxz
jmp
dec
pop
stc
pop
sbb
mov
lahf
xor
or
mov
loope
cmp
xor
outs
hlt
mov
push
mov
and
sub
cwde
fwait
gs
adc
imul
fistp
lods
dec
mov
inc
dec
sahf
imul
cmp
mov
aas
repnz
je
push
in
lahf
stos
adc
in
pop
mov
push
or
rcl
ficom
inc
mov
mov
cmps
pop
lds
pop
inc
fs
xchg
mov
(bad)
pop
push
ins
in
cmp
xor
mov
xor
cmps
mov
sub
jo
stos
and
sbb
push
and
mov
xchg
ins
mov
push
add
mov
add
fadd
popf
(bad)
cmp
jnp
add
jne
xchg
out
stos
std
fistp
out
call
push
push
push
fstp
fldenv
fst
mov
ror
retf
inc
jns
enter
imul
data16
pushf
mov
mov
repz
pop
and
mov
lods
stos
sub
xchg
adc
ins
call
ins
xchg
mov
jb
or
inc
xchg
mov
dec
aas
outs
xchg
add
inc
test
mov
in
(bad)
jb
mov
out
out
push
and
movs
outs
push
pop
dec
adc
or
ficom
fild
sar
inc
addr16
jl
jo
mov
pop
cmp
mov
aaa
ret
in
mov
popa
pop
loop
outs
rcr
pop
daa
adc
je
popa
sbb
pop
(bad)
neg
adc
or
cmp
push
mov
xchg
sub
xchg
(bad)
mov
idiv
leave
movs
loopne
ds
outs
mov
jmp
in
jecxz
in
pop
test
rcr
cmc
fistp
adc
ror
dec
stc
pop
mov
ror
stos
fistp
mov
mov
fs
xor
(bad)
cwde
xor
fdivr
push
cmps
es
sub
mov
jne
fmul
push
mov
jno
nop
adc
addr16
shr
mov
or
jle
lea
jo
jle
jo
inc
fs
ja
mov
fs
cwde
sbb
dec
out
frstor
xlat
data16
xchg
pop
das
pop
mov
das
test
adc
cs
mov
lds
push
int3
dec
adc
imul
dec
sbb
mov
cmp
xchg
adc
xor
jne
pop
mov
sbb
jl
sbb
adc
push
(bad)
add
or
not
adc
or
cli
ins
fldz
iret
ja
sti
add
or
add
jnp
(bad)
add
cld
ja
nop
out
fstp
in
fsub
fidivr
ficom
ins
gs
std
lods
std
xchg
cmp
xchg
sub
ins
sub
